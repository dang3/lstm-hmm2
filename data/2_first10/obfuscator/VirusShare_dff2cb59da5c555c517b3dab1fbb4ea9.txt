or
in
stc
les
push
adc
push
int
inc
jns
fimull
sub
lock
pop
out
dec
aam
dec
popf
outsl
mov
xor
leave
shl
andl
loope
cmc
add
mov
jnp
xchg
addr16
or
lock
mov
push
cmc
adc
enter
push
dec
xchg
insl
sub
jno
mov
xchg
int
call
inc
fadds
in
xchg
and
leave
loop
cld
add
push
xor
add
xor
sub
les
inc
test
and
and
rcll
imul
stc
sub
mov
sbb
mov
aam
or
mov
mov
lret
lret
leave
sbb
inc
test
jb
mov
xchg
or
add
xchg
fisubs
std
lds
insl
mov
lea
jb
call
xchg
hlt
adc
movsl
jp
fs
xchg
push
movsb
mov
mov
cmpb
shlb
stos
cmp
jl
inc
adc
popa
mov
fbstp
xchg
jo
ja
jmp
jb
cld
test
mul
scas
add
loope,pn
add
stos
nop
sti
xor
pop
xchg
jb
xchg
push
add
adc
cmp
test
add
roll
pop
repnz
push
add
jmp
jnp
stos
mov
jmp
xor
and
push
shll
fs
pop
mov
in
sbb
jb
insb
nopl
sub
cmp
out
jmp
orl
pop
jo
fistl
or
and
ja
adc
xchg
xchg
push
rorl
clc
adc
or
gs
dec
push
out
xchg
xchg
inc
mov
out
loopne
mov
cmp
mov
fisubrs
scas
cmp
jp
or
mov
and
loop
xchg
es
xor
pop
imul
lods
push
jb
fwait
imul
sub
mov
dec
cli
xor
iret
sbb
sub
sbb
addr16
lods
test
xor
pop
pop
add
mov
stc
ds
add
pop
addr16
fldenv
test
das
ret
test
mov
mov
inc
sbb
push
jmp
add
dec
push
mov
push
sbb
cs
sbb
lea
dec
push
push
mov
inc
stc
ret
adcl
xchg
push
call
push
lea
jae
pushf
call
data16
test
arpl
in
daa
and
aas
or
ja
ljmp
test
mov
out
mov
cli
js
xor
or
cld
dec
push
xchg
stos
rorb
mov
hlt
test
negb
cmpsl
insb
lods
inc
rorl
mov
mov
sbb
jne
push
mov
enter
dec
jnp
cmp
in
sbb
lret
icebp
dec
addr16
jb
push
inc
fcoms
xchg
lret
mov
popl
cmp
jae
cltd
mov
std
out
lahf
ret
out
rolb
sub
rorb
dec
sub
adc
ljmp
rcll
cld
mov
adc
lds
sahf
pop
and
nop
cmp
and
imul
sbb
xor
jae
adc
dec
jns
adc
and
pop
lods
out
jecxz
loope
pop
leave
or
adc
jge
pusha
mov
push
push
cmc
scas
mov
xchg
mov
cmc
hlt
cmp
or
test
jecxz
xchg
cli
leave
fwait
sahf
incb
jb
xchg
or
mov
sbb
es
fwait
jle
adc
xchg
mov
iret
hlt
push
jnp
ja
pop
add
sar
fstpl
add
outsb
arpl
out
pushf
sub
cmp
and
xchg
sbb
mov
and
pop
popf
jg
push
insl
outsl
cmpl
dec
sub
and
xchg
or
xor
mov
xorl
pusha
ds
add
outsb
or
popf
mov
test
neg
movw
pusha
jmp
or
or
jb
clc
negb
add
cli
sbb
push
fisttpl
sti
jnp
inc
inc
lods
ja
or
cld
xor
push
pusha
push
push
adc
rcll
gs
pop
jno
imul
push
sarb
gs
out
cmp
aam
std
add
hlt
loopne
in
loope
mov
jp
repz
cmpsb
pushf
push
out
into
test
scas
xor
jbe
adc
mov
and
add
pop
mov
fidivl
cmpsb
jmp
mov
fwait
mov
sub
aas
mov
mov
cmp
jae
test
lods
or
lcall
in
rorl
xor
xor
std
dec
cmpb
pop
cmp
adc
scas
push
mov
ljmp
movsb
and
scas
int3
mov
push
stos
add
push
into
add
xchg
pop
dec
cmp
enter
icebp
and
cmpsb
mov
loopne
pop
lahf
inc
rcll
insl
add
sbb
or
mov
loopne
dec
push
mov
add
inc
inc
jns
int3
repnz
cmp
inc
daa
mov
arpl
dec
mov
mov
sub
lods
pop
jb
int
in
ljmp
nop
mov
xchg
xchg
test
inc
adc
xchg
cmp
sti
pop
jge
jl
int3
sbb
cmp
jg
pusha
stos
mov
clc
rorl
data16
fstps
xchg
subl
out
xchg
arpl
xor
add
test
push
add
dec
add
or
mov
decb
fimuls
inc
jo
daa
ret
test
ja
rorb
fldcw
test
mov
popa
aas
in
insl
bound
lock
jnp
jge
xlat
or
fwait
jo
bound
pop
cmp
test
iret
jl
dec
les
fistpll
test
mov
scas
xchg
pop
adc
das
xchg
pop
ljmp
jmp
in
pop
xchg
inc
sarl
popf
js
mov
in
or
dec
or
adc
lea
fcoml
push
adc
push
fs
xor
int3
pop
or
stos
dec
outsb
dec
mov
cmp
ljmp
lahf
test
push
arpl
call
xor
and
mov
je
cltd
stos
pop
jns
and
sbb
aad
aad
sub
jmp
sub
scas
sahf
cmp
jo
jge
and
js
push
clc
scas
adc
cli
push
sbb
adc
popa
outsb
inc
mov
fisubrl
pop
das
jns
gs
enter
out
scas
and
adc
pusha
and
inc
jmp
icebp
jne
inc
jne
shll
cwtl
and
in
popf
jno
in
push
in
sbb
lret
ss
mov
jmp
sbb
sub
mov
mov
out
out
cmc
fdivs
mov
mov
inc
movsl
sbb
mov
xchg
mov
setle
add
xchg
ret
data16
aas
add
in
cmp
call
mov
mov
adc
jnp
cmp
jle
fsubs
mov
jmp
inc
pop
fstl
ficoms
insl
xor
adc
or
leave
xchg
mov
ss
pop
add
in
movsl
lock
int
inc
mul
push
mov
adc
mov
jle
push
push
loop
pop
test
mov
push
jns
mov
push
test
out
loop
gs
test
je
push
das
fiaddl
sbb
loop,pt
and
mov
adc
adc
cmp
inc
cmc
cwtl
mov
sbb
imul
stos
js
adc
jl
addl
test
popf
dec
arpl
clc
jae
js
mov
fstl
icebp
push
out
out
and
pop
jo
into
sbb
in
push
mov
push
in
stos
adc
and
jno
fsts
insl
dec
out
ret
lock
mov
cld
push
sub
inc
sub
mov
js
aaa
loop
into
lret
dec
imul
inc
hlt
cmp
inc
loopne
fisubs
pop
fiadds
add
mov
or
shll
loopne
mov
fdiv
frstor
mov
mov
lahf
add
mov
inc
loope
jmp
out
mov
into
stc
out
xchg
xor
scas
cwtl
xor
imul
jbe
mov
mov
in
aam
aam
in
fistpl
mov
cmp
outsb
cmp
mov
std
pop
shll
ret
stos
sgdtl
cli
push
sar
mov
sar
ror
lea
shrd
sub
rcl
and
movzbw
shl
mov
pusha
clc
sub
cmp
jmp
call
call
pushf
pusha
jmp
xchg
xchg
push
jb
adcb
in
scas
inc
mov
ljmp
leave
adc
sbb
add
outsl
or
xchg
xchg
or
mov
js
and
test
push
cmp
lea
pop
add
cmp
insb
cmc
or
pop
daa
loopne
sbb
sub
sbbb
movsb
mov
fucomip
js
xchg
aad
sahf
pop
add
repz
cs
inc
ret
fistpll
andb
cmp
mov
sub
sub
jb
sbb
cltd
jle
cwtl
xor
es
pop
stos
pusha
jbe
sahf
cmp
xchg
mov
cmp
imul
cmp
and
jg
cmp
fdivrl
pop
mov
jno
incb
movsl
ret
in
jo
les
popf
pop
loopne
xchg
inc
test
out
jno
pop
mov
xor
in
add
mov
call
test
sti
xor
pusha
add
jne
cmp
mov
les
push
dec
ja
lea
jp
inc
call
push
movsl
mov
jb
and
xor
hlt
sub
xchg
dec
insl
inc
cmovno
or
std
gs
push
push
stos
and
mov
movsb
leave
mul
jecxz
enter
push
jecxz
sarl
out
mov
jnp
lahf
sbb
sahf
cwtl
or
mov
and
sbb
fwait
cmp
inc
lods
push
add
or
cmp
scas
sub
push
cmp
mov
cmp
shll
and
ja
xchg
out
sbb
xchg
sti
bound
sbb
imul
in
inc
mov
pushf
pushl
pushf
pushw
popfw
mov
push
inc
pushf
pushf
adc
lea
push
call
popf
andl
adc
jo
or
xor
pop
cmp
call
ljmp
stos
pop
shrb
arpl
pop
nop
push
imul
mov
testb
push
xchg
inc
nop
push
out
and
sub
icebp
stc
repz
fnstenv
mov
and
adc
sub
out
jmp
cs
pushl
pop
ror
and
cmpsb
adcb
lds
inc
push
jmp
pop
iret
pop
xchg
xchg
notb
sbbl
mov
call
sub
xor
jmp
add
jb
jle
dec
jnp,pt
xor
inc
jmp
repz
movsl
mov
push
mov
inc
cmpl
inc
mov
lahf
sub
sbb
sub
xor
in
push
popa
mov
pop
data16
sbb
sbb
inc
adc
xor
aas
cmpsb
xor
ror
fnstenv
mov
ret
and
mov
mov
jae
insl
mov
in
lds
xchg
stos
jnp
add
fnstsw
inc
inc
aas
stos
dec
cmp
repz
mov
jge
cld
push
in
loope
test
add
cltd
ret
scas
push
sbb
stc
loop
test
pushf
dec
adc
adc
mov
subb
loop
push
or
out
push
lods
jl
cli
inc
sbb
sbb
fdivl
ret
arpl
jne
setbe
aam
bsr
bts
xor
push
lea
pushf
aas
mov
rol
pushf
add
inc
inc
mov
jmp
push
jo
jb
ret
pop
fdecstp
sbb
lods
mov
int
enter
in
xor
and
dec
pop
pop
out
pop
xchg
mov
arpl
mov
inc
insl
arpl
in
mov
int3
dec
inc
sub
jnp
push
ss
out
push
sahf
les
push
int3
in
jmp
adc
add
ret
cwtl
cltd
out
in
ja
xchg
push
and
lock
mov
inc
incl
mov
movb
pusha
movb
lea
jmp
add
mov
jb
add
sbb
dec
arpl
inc
daa
push
mov
inc
mov
cmp
xchg
dec
jecxz
inc
push
lret
gs
xor
xchg
mov
leave
jmp
push
ja
inc
rcll
in
xor
dec
mov
add
ss
fs
and
jae
push
jb
xor
ljmp
fwait
idiv
dec
popw
adc
mov
and
add
add
repnz
dec
mov
sahf
mov
jp
dec
add
push
fwait
push
fiadds
icebp
out
sbb
and
jae
movsbw
add
rol
rcr
mov
rcr
pushf
mov
jmp
clc
clc
sub
cmp
call
pop
pop
dec
and
cmp
dec
cmp
sahf
imul
ljmp
mov
xor
jae
mov
fwait
xor
adc
sub
dec
xchg
and
xor
rcrb
cld
sarl
outsb
adc
sbb
cmp
mov
cmp
int
mov
repz
call
cmc
daa
cmp
pop
mov
xor
lods
jl
fcmovbe
shlb
outsb
std
cmp
push
iret
push
aaa
xlat
and
cs
das
subb
jb
movsb
shl
cld
cmp
arpl
fisttps
scas
xor
cmp
mov
inc
cmp
xchg
push
dec
mov
rolb
adc
sbb
aas
hlt
jecxz
ja
sub
sbb
imul
and
mov
stos
pop
sbb
call
mov
daa
fnstsw
shll
mov
rcrl
xchg
and
mov
xchg
pop
pop
leave
call
push
lea
jae
dec
and
mov
or
shl
pushf
mov
shrd
mov
stc
xor
cmc
pushl
cmc
lea
ja
repnz
pusha
lea
jne
jmp
shld
sbb
mov
jmp
movups
and
loopne
lcall
movsl
and
pop
mov
inc
pop
iret
xchg
ljmp
cmp
push
mov
mov
push
pop
cmc
jne
push
push
cmpb
or
jecxz
jnp
and
fildll
mov
and
push
xor
sbb
insl
adc
aad
xchg
push
sbb
inc
mov
sbb
xchg
jbe
mov
xchg
mov
nop
cmp
test
pop
pop
out
ror
cmc
and
jb
or
popa
pop
scas
lods
enter
popf
mov
xchg
les
mov
xor
lods
pop
ror
dec
adcl
dec
sarl
mov
outsl
inc
nop
mov
mov
add
ss
pushf
das
push
mov
in
je
xchg
push
stc
push
add
lret
mov
pop
mov
cmp
iret
xchg
les
or
xchg
push
aad
fs
xor
loop
xchg
or
jb
adc
imul
movsb
ficompl
push
dec
sbb
push
pop
fdivrp
es
dec
iret
insb
adc
js
mov
int3
dec
outsb
mov
jb
out
mov
es
lret
fdivrl
mov
adc
mov
cmp
add
push
add
out
call
popf
mov
or
mov
stos
je
pop
push
in
sub
loope
daa
mov
mov
cmp
stos
inc
std
bt
pusha
add
pushf
movzwl
pusha
sub
sub
mov
call
cmp
jmp
lea
ja
call
loop
loopne
jb
xor
mov
add
stos
and
cld
pop
fdivrp
movsl
dec
inc
add
pop
mov
int3
mov
dec
pop
imul
mov
int3
mov
ljmp
into
cmp
out
popa
mov
xlat
dec
mov
xor
mov
xlat
dec
insb
xchg
pop
jbe
dec
mov
jmp
and
shl
pop
in
add
xchg
push
dec
push
jns
and
insb
shrb
std
xchg
fisttpll
push
jne
sub
push
fsubr
push
or
daa
jb
mov
mov
dec
or
push
mov
mov
sub
insl
cmp
jg
scas
es
jle
or
repnz
dec
mov
loope
in
sub
xchg
sbb
scas
aad
jmp
and
mov
xchg
hlt
jb
les
int
out
mov
inc
pop
sbb
pop
sbb
mov
sarl
xchg
xchg
int
icebp
dec
and
mov
imul
in
xor
out
xor
pop
loope
dec
xor
sbb
es
pusha
addr16
repnz
call
daa
adc
ljmp
sbb
imul
cmp
hlt
jno
rcrl
sbb
popa
arpl
fwait
loope
stos
jle
push
scas
push
out
or
fadds
add
jge
cmpsl
adc
sbbb
aam
push
leave
movsb
mov
and
rol
jmp
mov
cmpsb
pop
adc
sbb
shl
xor
dec
pop
movsb
xor
push
mov
mov
and
or
into
sti
leave
mov
imulb
sbbb
outsl
aam
inc
cmp
push
test
test
xchg
push
outsb
cwtl
jae,pt
mov
fidivl
jp
push
mov
icebp
push
add
arpl
xor
cmpl
or
mov
adc
cmpsb
jne
fsubp
xchg
shll
jo
mov
arpl
pop
sub
addr16
popf
pop
std
loop
imul
mov
add
xchg
clc
pusha
ror
call
cmpsb
clc
adc
jb
add
push
and
hlt
loope
arpl
dec
pop
xor
aam
mov
and
pop
imul
stos
push
aaa
into
inc
sbb
or
into
pop
mov
bswap
adcl
inc
ljmp
dec
xchg
incb
ret
jno
cli
lock
cmc
cmc
ss
fadds
loop
insb
push
je
pop
mov
sar
jmp
or
jno
mov
mov
push
aas
lret
cli
jno
pop
out
cmp
xor
fld
pushf
push
mov
xor
repnz
inc
out
xor
out
fistl
cltd
cs
dec
ljmp
pop
ljmp
mov
shlb
mov
push
sub
jne
icebp
push
adc
push
cmp
pop
cmpsb
lahf
push
push
outsl
inc
stc
in
lret
jecxz
push
xor
mov
pop
fldt
lea
mov
mov
cltd
push
fimull
jno
jae
jmp
mov
jl
jb
push
sub
push
imul
shrl
cld
mov
lcall
cmpsb
dec
dec
hlt
xchg
push
xor
fcoml
lcall
adc
mov
shl
adc
inc
rcrl
shr
cmp
arpl
test
push
cltd
xor
push
repnz
mov
xchg
or
jg
and
aas
sbb
add
cmp
mov
aas
pop
aas
insb
leave
lods
lock
pop
lret
jo
ret
fbstp
dec
or
ret
fisttpl
xor
std
inc
out
addr16
daa
mov
fsubr
repnz
pusha
ja
and
jle
into
mov
in
mov
repnz
enter
inc
data16
das
aaa
mov
pop
lock
aas
and
nop
out
push
inc
push
movsl
cmp
push
add
iret
test
aad
xchg
lock
push
iret
mov
inc
lock
test
or
test
hlt
sub
es
xchg
mov
sbb
and
xor
push
movsb
ds
or
jno
dec
cmc
mov
rcl
dec
mov
mov
cwtl
cmp
adc
mov
sub
fwait
cs
jb
push
addr16
inc
jmp
jl
jns
sbb
fdivs
faddp
pop
stc
dec
add
mov
xchg
loop
dec
cli
or
stos
cltd
xchg
scas
shl
lret
cmc
xor
out
psubq
dec
out
or
fcomps
sub
stos
in
jp
test
call
jmp
fs
cmp
adc
push
pop
enter
pushf
adc
hlt
xor
pop
cmovo
mov
stos
add
cmc
stc
scas
adc
test
xor
cmp
xor
xchg
cs
jmp
inc
mov
scas
clc
jp
test
negl
cmp
and
adc
jmp
inc
scas
mov
jno
push
movsb
pop
shrb
pop
sarb
push
dec
das
jp
into
fiaddl
pop
xor
out
and
add
sub
jmp
mov
jb
adc
popf
lcall
movsl
push
addr16
add
and
and
or
inc
ds
inc
cmpsb
lcall
cmpsl
push
stos
cmp
adc
cmpsb
imul
in
sbb
pop
fs
lret
out
jo
pop
stos
inc
out
iret
xor
cmp
enter
xlat
sub
stc
pop
adc
pop
fcoml
pop
mov
es
jmp
and
inc
mov
pop
mov
lods
out
sub
cmp
call
jl
mov
jb
add
mov
and
out
imul
dec
and
mov
dec
fdivrs
cltd
ja
test
jbe
rolb
cli
jecxz
pop
push
mov
xchg
inc
xor
testb
aas
jb
jns
out
shrl
outsb
inc
inc
pop
dec
and
pop
outsl
push
add
cwtl
and
lcall
movsbw
stc
lea
sub
jle
pop
bswap
bswap
pop
xchg
push
movsbw
bswap
mov
pusha
not
movsbw
call
lea
jbe
bsr
bsf
lea
jmp
mov
jmp
adc
adc
jb
add
jmp
movsl
inc
ja
jns
stos
cwtl
fnsave
mov
and
int3
sub
cmc
add
in
test
pop
fsubrl
and
adc
inc
pop
push
mov
divb
inc
inc
test
movsl
fldenv
sbb
shlb
push
popa
nop
pop
xchg
nop
testl
mov
lret
das
jb
pop
lods
cmpb
dec
shll
and
sub
inc
cmpsb
sbb
fwait
mov
lahf
clc
pop
push
mov
dec
filds
fadds
arpl
mov
cs
lea
insb
mov
jp
mov
shl
dec
push
push
inc
mov
and
int
jns
fscale
sub
lods
push
sub
mov
setne
push
mov
sub
cmp
ret
mov
loop
adcb
scas
sbb
outsl
daa
mov
push
iret
les
fstpt
mov
roll
xor
sub
sub
pop
jmp
add
xchg
loopne
xor
xorb
xchg
adc
and
pop
fistl
mov
loop
jne
and
and
mov
dec
je
xor
pop
rolb
nop
mov
jno
mov
ret
cmp
aad
arpl
cmp
adc
aas
adc
jb
and
pop
in
sbb
and
add
movsb
out
fwait
ret
mov
test
cmp
push
lea
jb
cmp
cmc
cmp
pusha
pusha
lea
jae
pusha
cmc
mov
bsr
shl
inc
mov
shr
mov
jmp
cmpb
jmp
lea
jb
jmp
pushf
mov
not
mov
lea
bt
setp
btr
rcr
mov
xchg
neg
call
mov
adc
jno
xchg
nop
and
push
fwait
push
nop
push
leave
adcl
jnp
cs
inc
sbb
sub
pusha
jo
in
jecxz
and
or
rcrb
data16
gs
aam
jae
gs
xor
jo
shrb
sub
jmp
add
cmp
mov
in
xchg
sbb
jns
dec
fwait
push
bnd
mov
and
jb
jb
mov
arpl
sub
test
clc
cmpsw
adc
iret
aam
add
ja
mov
push
rcrl
frstor
dec
pop
xor
jl
jg
outsl
ficompl
push
rcr
push
test
in
les
aad
pop
inc
jnp,pt
iret
pusha
insl
cld
cmp
notl
aad
inc
xchg
and
mov
inc
cmpsl
shll
rcl
mov
ljmp
or
jl
adc
rcl
lds
popa
repnz
add
fmull
dec
xor
lcall
or
cmp
dec
inc
cmp
push
cld
scas
push
mov
stos
adc
fwait
les
pop
call
cmp
jae
sub
adc
mov
popa
adc
add
leave
push
inc
or
xor
mov
lret
mov
ljmp
scas
stc
in
fdivs
mov
dec
dec
cmpsl
in
cltd
mov
sbb
aas
xor
xchg
pop
or
ljmp
rcrl
frstor
in
mov
dec
and
xchg
pop
je
rcrl
pop
or
negb
add
shr
push
adc
popa
lds
pop
dec
nop
dec
jnp
xchg
movsb
jo
flds
into
xor
icebp
aaa
and
je
cli
flds
out
push
pushf
jae
push
cli
push
cs
lds
jl
xchg
andb
add
and
sbb
lods
into
inc
bound
lcall
mov
rol
mov
adc
adc
sbb
sub
daa
adc
jecxz
xchg
sarb
push
cld
sub
out
fsts
fwait
mov
inc
outsl
stos
mov
movsb
cltd
add
arpl
addr16
adc
jnp
xchg
cld
sbb
inc
mov
mov
mov
fwait
pop
jmp
mov
shl
mov
push
jae
push
in
lret
iret
dec
xchg
aam
aam
daa
inc
and
xor
mov
mov
icebp
push
sbb
sbb
sbb
or
in
test
add
imul
imul
outsb
sub
mov
add
add
shll
jns
dec
xor
sbb
or
out
cmp
dec
fldcw
out
mov
and
aam
dec
add
and
outsb
in
lret
mov
push
rclb
xor
xlat
push
push
mov
pusha
stc
cmpb
lea
push
call
loope
insb
xor
mov
dec
loop
in
xchg
jle
cwtl
jge
adc
pop
into
hlt
ja
dec
and
xor
lret
sub
jge
sub
je
popf
jae
popl
and
not
adc
cmpsb
and
fisttpl
sbb
lods
rcrl
lcall
mov
rorb
mov
and
push
xchg
jae
shll
pop
xor
lret
or
test
dec
jbe
mov
and
ss
jnp
xchg
mov
aad
test
xchg
subl
fistpl
sub
mov
mov
stos
xlat
cmc
xor
adc
mov
fldenv
cmpsl
mov
clc
rcrb
lock
pop
dec
ror
dec
sbb
les
adcb
inc
pusha
sbb
xor
dec
lahf
insb
mov
xchg
loope
pop
mov
or
mov
push
sbb
mov
cmc
sbb
leave
pusha
pop
ss
push
shlb
sub
popf
iret
push
mov
adc
add
ficompl
mov
mov
mov
ljmp
mov
mov
jg
ret
icebp
out
scas
test
or
rorl
into
push
mov
test
out
imul
mov
mov
iret
inc
clc
and
dec
or
mov
push
mov
pop
iret
push
frstor
insl
inc
out
jae
lods
mov
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
push
ss
add
pop
aam
jle
pusha
fstpl
scas
aam
push
rolb
xor
inc
fsubrs
outsb
bound
jmp
mov
sub
cmc
cmp
pop
mov
cs
jno
pop
pop
dec
leave
out
mov
mov
or
jg
arpl
xchg
mov
mov
outsb
shll
in
shrb
scas
sbb
sub
jb
push
xorl
arpl
mov
sub
push
negb
jo
cs
fistpll
pop
xchg
pop
jae
fdivrp
add
and
mov
popf
sub
data16
and
movsl
jmp
std
xor
pushf
jno
inc
mov
lcall
dec
ja
and
mov
into
ss
vpshufd
mov
push
jmp
shlb
jle
leave
mov
lret
push
das
outsb
xor
lds
mov
mov
cmpsb
fwait
push
dec
sub
sti
push
hlt
cmovns
mov
xchg
sub
xchg
orb
ret
jns
mov
push
inc
cmp
lcall
mov
jae
int
and
mov
jb
scas
adc
sub
dec
das
in
popa
stos
push
sahf
mov
jmp
adc
jae
subl
mov
mov
cmp
mov
ljmp
sar
mov
add
std
pop
mov
xor
and
pusha
and
inc
adcl
test
inc
leave
dec
ds
inc
cmpsb
aad
jae
cmp
mov
call
jmp
lea
jne
jmp
xor
mov
stc
clc
bt
and
clc
add
pusha
lea
jmp
pusha
movb
lea
jae
pusha
mov
and
inc
bt
shl
mov
bsf
mov
test
call
call
movl
xor
push
inc
clc
inc
mov
mov
cltd
jecxz
mov
outsb
mov
scas
jnp
mov
mov
inc
jg
cmp
dec
hlt
and
sbbb
jmp
ficomps
push
pusha
jmp
add
int3
rcll
int3
stos
mov
jle
pop
lds
ret
sbb
int
mov
popf
cmp
adc
mov
sub
cmp
lret
jmp
adc
rcrb
cld
sub
push
loope
sub
add
add
ds
or
cmp
xchg
out
or
in
xlat
jl
jbe
mov
loopne
insb
xor
xchg
push
sbb
fdivr
push
mov
pop
ljmp
cmp
add
out
ret
je
imul
popa
push
outsb
push
bound
sbb
adc
popf
pushf
push
ja
adc
mov
push
es
mov
add
jmp
cmp
hlt
ja
rolb
dec
inc
mov
cmpsl
dec
in
fmull
cmp
inc
mov
loop
inc
ljmp
leave
or
push
xor
mov
or
jns
push
push
ds
sahf
lods
incl
sub
pop
ljmp
dec
jmp
pop
stos
addr16
or
out
dec
xor
lahf
add
push
inc
inc
inc
stos
shr
std
int3
daa
xor
hlt
cmc
fldl
mov
in
mov
into
push
dec
push
sbb
sbb
repz
adc
andl
es
jnp
neg
mov
pop
test
pop
mov
pop
xchg
push
pushf
lods
pushl
jmp
jne
add
jb
push
or
repnz
movsb
pop
out
pusha
in
addr16
push
repz
pop
cmpsl
mov
into
pop
cwtl
stos
mov
rcrl
push
mov
stos
andb
mov
adcb
test
inc
sti
lea
rcl
jns
aam
mov
pop
jl
mov
sbb
xchg
repz
jmp
ds
in
and
xor
mov
jecxz
jnp
pop
adc
lods
jmp
dec
call
mul
cld
cmp
ljmp
mov
pop
dec
nop
xchg
jns
cli
insl
or
add
jecxz
and
addr16
cmpb
ffree
ret
xlat
mov
sub
xlat
push
sbbw
jnp
cmc
dec
dec
cmp
jg
jmp
addb
insl
loop
lock
dec
scas
dec
ficoms
pop
daa
call
loop
pop
and
dec
xchg
adc
dec
icebp
loopne
fsubrs
iret
sarl
inc
shl
add
add
call
xchg
and
cmp
int
pusha
lds
test
fdivrp
lock
jg
pop
mov
mov
xor
cwtl
dec
in
jmp
or
adcl
inc
lods
xchg
pushf
fwait
adc
repz
shlb
fwait
call
mull
fwait
test
sub
inc
call
aaa
pop
add
int
pusha
fidivl
shl
stos
aad
mov
pop
xlat
movsl
imul
inc
jne
inc
repnz
sarl
fdivl
ret
push
dec
imul
jmp
mov
cmp
shrl
fldt
xor
push
call
inc
aaa
sbb
sbb
arpl
ljmp
enter
fwait
enter
push
stos
and
pop
mov
mov
xchg
out
sti
sub
mov
imul
into
imul
sub
cwtl
cmp
mov
cmp
mov
cwtl
and
scas
mov
add
je
outsl
fs
gs
imul
add
scas
lret
cmp
mov
pop
push
test
fsubrp
iret
sbb
push
xlat
dec
adc
into
incb
into
xor
out
jecxz
pop
mov
jl
rclb
aaa
xor
add
pop
cmp
cmp
cmp
test
mov
out
shll
push
mov
aaa
sbb
insl
push
shll
test
mov
lock
add
mov
push
lea
inc
sbb
mov
sbb
scas
divb
sbb
xchg
icebp
mov
cmpb
enter
or
cmp
adc
or
mov
test
repnz
insb
mov
xchg
sbb
in
movsl
fwait
dec
cmp
rcll
pmaxub
mov
pushl
dec
lods
les
dec
xor
rolb
je
fdiv
lock
into
je
adc
pop
cmpsl
pop
aad
insb
jne
mov
cmp
push
add
add
aad
shrb
fsubrl
repnz
inc
push
xchg
lds
adcb
inc
hlt
mov
orl
decb
shrb
or
js
hlt
mov
shll
pop
jns
xlat
ds
rcl
add
sbb
fwait
lcall
loopne
fmull
fisubl
mov
rcrl
push
sahf
pop
roll
dec
stos
push
xchg
add
roll
pop
shl
inc
mov
stc
shrl
inc
leave
test
outsl
sbb
xchg
add
movsb
adc
roll
pop
push
mov
sbb
loop
enter
roll
lret
sub
jbe
imul
mov
sarl
shl
sar
push
je
dec
cmpsl
arpl
cli
xlat
inc
iret
mov
ret
mov
jmp
add
es
aam
das
xchg
push
push
int3
rorl
aad
out
movsl
clc
imul
lea
pop
pop
dec
inc
sbb
ret
jle
pop
adc
sbb
pop
testl
push
dec
adc
inc
rorl
icebp
jnp
pop
insl
ficoml
add
push
sbb
ret
and
adc
shll
sbb
outsl
icebp
push
push
pop
add
xor
cmp
and
sub
push
jae
pop
icebp
inc
dec
pop
jno
js
popa
imull
adc
sbb
add
push
fidivrl
shll
repnz
pop
sbb
jno
jns
pop
push
testl
icebp
cmp
pop
sub
jb
push
roll
sbb
jp
popa
push
roll
or
or
aaa
icebp
cmp
xchg
push
icebp
adc
pop
roll
jle
pusha
icebp
push
pop
push
fldt
into
push
lret
ljmp
mov
or
push
inc
sahf
dec
pop
loope
outsb
iret
mov
push
into
fsubrl
adc
pushf
inc
or
rcll
orb
hlt
std
mov
inc
cmp
adc
mov
rcll
out
shlb
lods
xchg
cmpsb
shrl
mov
movsl
movsb
roll
ds
mov
jmp
iret
addr16
mov
mov
cltd
xchg
je
mov
fisubs
loopne
xor
mov
sbbl
roll
mov
test
sub
mov
rcrl
movsl
fwait
clc
rcl
hlt
adc
cmp
xor
sti
sbb
dec
scas
out
mov
mov
push
pusha
sub
xchg
out
shll
das
ss
rcll
add
mov
sbb
pop
sarl
and
hlt
clc
ds
out
pop
push
stos
out
push
mov
rcl
lcall
push
inc
outsl
xchg
std
lea
mov
cmpsl
rcll
mov
sbb
adc
orl
rcl
mov
mov
cmp
sbb
ror
push
jp
jg
rcl
cwtl
movsl
push
xchg
outsl
loopne
pop
lcall
ror
add
loope
jno
ja
xor
pop
ret
adc
gs
insb
rcl
mov
cmp
sub
or
push
push
pop
out
jge
inc
mov
cltd
shll
hlt
mov
fdivl
leave
lock
or
xlat
sbb
pop
add
bound
rcrl
scas
push
test
or
outsl
push
dec
stc
inc
jecxz
xlat
ret
aas
sbb
ret
pop
jno
mov
sarl
sbb
ret
push
or
cmp
sub
push
lock
dec
sbb
arpl
outsl
pop
pop
or
pop
mov
inc
cltd
stc
scas
imul
sahf
pop
or
jmp
pop
jns
dec
add
jo
imul
push
push
jne
inc
clc
mov
out
jl
rorb
pop
test
inc
jmp
int
sub
shrl
inc
cmc
ret
sub
imul
mov
shll
mov
or
ror
and
xor
cmpsb
xor
loop
notb
dec
jmp
pusha
xorl
shrl
jo
inc
sbb
jg
adc
pop
fiaddl
rorl
and
pop
inc
pop
dec
fidivl
jnp
arpl
fs
sbb
pop
or
xor
imull
xchg
pop
ja
inc
ret
jo
pop
jl
imul
testl
icebp
and
xchg
push
idivb
and
fiaddl
dec
divl
jp
jl
imul
sbb
add
or
xor
xor
ds
sub
pop
jbe
inc
roll
jne
jge
imul
push
fiaddl
xchg
lods
xor
pushf
mov
shll
outsb
mov
es
inc
push
lcall
xchg
aam
test
cmpsl
push
out
ret
push
pop
xchg
pop
dec
js
je
sub
addr16
mov
xor
sarl
pop
pop
movl
idivl
ret
addr16
mov
push
insl
sarl
lods
cwtl
cmp
mov
sti
lcall
outsl
leave
mov
popl
movsl
cmp
mov
sbb
push
notl
movsb
jnp
push
ficoms
sbb
add
cmpb
add
or
mov
ret
cwtl
cli
shlb
loope
adc
out
mov
and
pushf
jae
add
roll
jnp
lods
sbb
scas
xor
je
fnstenv
outsb
push
adcl
stos
push
rcrl
xor
add
std
cli
adc
jns
sbb
adc
cmp
inc
leave
xor
into
dec
out
pop
jnp
in
cltd
lret
sbb
roll
or
imulb
jge
repnz
xlat
aad
ss
mov
mov
jge
test
push
dec
xlat
mov
cld
mov
cmc
mov
aad
push
push
repz
pop
pop
inc
fidivl
je
arpl
gs
adc
pop
pminub
sarl
and
das
fistl
ret
inc
jae
je
jl
imull
push
ret
push
push
pop
xor
shll
sub
ret
dec
ja
jns
rcll
adc
push
ret
or
pop
cmp
and
and
sub
push
je
pop
ret
dec
lods
sarl
sbb
push
icebp
sbb
sarl
and
push
sti
pop
pop
ret
jb
pop
arpl
imul
negl
sbb
ret
aaa
cmp
and
sub
push
jnp
pop
testl
jns
pop
ficoml
rcrl
add
cmpps
and
xchg
push
cli
aas
outsl
push
inc
fimull
jbe
jns
addr16
adc
add
or
or
sbb
ret
sub
jp
pop
inc
fimull
ja
js
popa
ret
adc
pop
add
or
xor
cmp
and
sub
pop
stc
icebp
inc
dec
pop
jno
jp
popa
imull
adc
sbb
pop
or
xor
shll
sub
ret
dec
jo
jp
jge
imull
adc
push
icebp
add
and
das
icebp
push
clc
xlat
pop
sbb
dec
icebp
je
pop
outsl
ficoml
sbb
ret
and
pop
sub
pop
ret
in
mov
repz
lea
out
shll
xchg
xor
jl
cmpsb
lret
rcrl
daa
faddl
out
add
dec
and
adc
push
jb
xchg
out
xchg
sbb
lret
mov
rcr
das
mov
push
shll
pop
sbb
les
pushf
pop
mov
mov
shll
xchg
in
jecxz
call
dec
xchg
icebp
ret
mov
test
sub
cmp
imul
fldl
push
test
pop
add
and
push
fdivl
push
mov
rcrb
xchg
xchg
pop
aas
sar
xchg
sub
es
scas
sbb
adc
test
ds
sahf
jecxz
sub
enter
mov
and
ret
out
dec
push
xor
fnstenv
cmpsb
inc
and
fs
repz
pop
popf
dec
push
dec
pop
mov
rcrl
aaa
push
xchg
cmpsb
xchg
shll
jge
inc
mov
es
inc
push
div
and
push
rcrl
jno
mov
pop
cmpsb
cmp
pop
popa
inc
jecxz
cmpsl
push
inc
into
dec
mov
sbb
cs
xor
or
sbbl
jmp
call
ss
out
leave
xor
ret
pushf
sbb
mov
mov
ss
pop
mov
inc
mov
adc
sbb
dec
jp
push
iret
cmpl
add
sahf
mov
mov
insb
cld
aad
push
leave
push
or
mull
pop
rcrl
inc
repnz
xor
add
cmpsb
mov
push
in
test
rcl
jae
xor
and
xor
xchg
out
loopne
sbb
mov
mov
imul
dec
enter
out
mov
ja
hlt
adc
mov
sbb
ds
andb
pshufw
mov
gs
sub
into
dec
insb
dec
fisttpll
je
dec
xchg
cmp
adc
aad
pop
xor
rorl
femms
popl
roll
outsb
and
outsl
pop
shll
ficomps
mov
adcb
in
add
sarl
mov
fcomp
imul
push
out
mov
gs
dec
pop
push
pop
movsl
add
xchg
xor
rcll
loopne
cmp
iret
aaa
push
out
lds
jl
ss
sarl
mov
rcll
pop
lods
std
sarl
cmpb
sbb
jnp
pop
in
jne
jecxz
je
push
push
sub
aad
call
insl
cli
and
dec
push
rcl
add
ficoml
repz
movsl
lahf
cmp
lret
xchg
rcll
orb
stos
jno
popa
push
clc
into
sbb
xchg
xchg
fisubrs
insl
fldl
mov
rolb
imul
mov
mov
int3
or
or
fcmovb
mov
js
dec
ret
icebp
jle
shl
sub
out
rcr
or
or
fnop
and
rclb
ret
fstps
cltd
fcmovu
rol
fistps
rol
shl
push
push
pop
aad
push
rcl
push
sbb
shll
fadd
ljmp
inc
sbb
roll
ja
in
mov
mov
sbb
sub
loope
sar
ret
sbb
dec
inc
sti
shrl
pop
sub
iret
adc
sbbb
mov
das
imul
xchg
mov
dec
inc
push
popf
fwait
popl
push
stos
pop
popa
push
sbb
mulb
or
ret
xor
dec
sub
xchg
mov
dec
dec
sub
sub
mov
cmpsl
mov
push
aas
or
xchg
sub
add
shrl
pop
xor
cmp
aam
and
xor
pusha
xchg
adc
dec
shll
sbb
rorb
aas
repnz
push
add
std
mov
fimull
pop
cmc
repz
adc
cs
xchg
in
imul
test
xor
jno
int
lock
scas
scas
test
or
adc
inc
sbb
sahf
pop
add
xchg
push
adc
popf
scas
and
or
dec
push
dec
dec
ror
or
pop
loop
rcll
cmp
jmp
cmp
adc
std
cmpsl
add
js
movlps
rcll
les
add
push
inc
push
xchg
mov
iret
inc
pop
push
lods
sub
and
sub
rcll
mov
cld
push
sbb
loop
cwtl
push
popa
mov
mov
pop
pushf
cmpsl
push
push
out
jae
xchg
imul
repz
pop
shll
or
jge
mov
and
fcoms
lcall
jecxz
aam
lods
in
dec
je
dec
cmpsb
jg
mov
aam
xor
push
aam
pusha
mov
and
sbbb
pop
hlt
pop
out
in
fmul
pop
cmp
rorl
rorl
mov
jl
inc
mov
mov
insl
push
pop
xchg
pop
push
in
and
push
out
push
sar
push
andl
sub
shll
adc
xor
cmpsl
ficoms
pop
mov
repz
flds
insb
repnz
cmp
inc
mov
arpl
lds
les
lahf
pop
adc
xchg
or
stos
pop
leave
sarl
sub
aam
inc
add
inc
shlb
popa
rcr
xor
ror
loop
and
dec
or
roll
inc
push
add
rcrl
insb
hlt
inc
out
mov
pop
ret
or
jns
mov
mov
aam
ss
sub
aam
das
pop
push
rcr
pusha
insb
data16
jge
push
fldl
mov
aas
jl
sub
test
xor
xchg
dec
sarl
les
push
mov
clc
sbb
jbe
mov
iret
dec
cli
rcrl
jno
shll
jo
xor
or
dec
lods
stos
shr
jnp
push
in
aas
hlt
push
subl
pop
sbb
aam
sbb
push
xchg
ror
imul
lods
rcll
xor
call
sbb
xlat
test
add
inc
jecxz
test
and
dec
jge
push
dec
lods
iret
cmp
xlat
push
pop
cmp
ljmp
add
push
test
mov
and
mov
adc
or
dec
les
cmp
and
js
xchg
insl
xor
jnp
xor
aam
out
lea
rol
frstor
mov
andb
push
in
cmp
bound
push
sub
in
rcll
sbb
mov
mov
adc
jo
adc
sbb
push
or
cli
mov
cs
push
dec
jge
fwait
lock
incb
daa
xor
iret
add
das
dec
test
sbb
mov
sarl
push
mov
xchg
lock
test
mov
sbb
jno
adc
bound
pusha
or
rol
rcl
mov
shl
clc
lods
adcb
dec
xorb
imul
sar
add
cmpsb
push
data16
xor
fsubl
push
mov
xor
sbb
scas
pushf
xchg
pop
lods
mov
orl
xchg
dec
lret
jmp
rcl
outsb
les
stos
call
mov
ljmp
jecxz
int3
push
xchg
push
and
jle
sbb
push
out
push
decl
mov
jns
and
out
sub
jecxz
popf
push
stos
loop
rcr
test
ja
repz
sub
sbb
jp
fcoml
rol
fwait
sbb
sub
sub
jno
and
fstl
cmc
popf
push
push
int3
push
lret
jecxz
lahf
mov
setb
sub
out
mov
fwait
cs
jne
bound
push
lods
xchg
lret
rol
bound
push
std
out
and
shrb
jo
push
ret
fidivl
push
mov
mov
lret
rcll
test
mov
cltd
sarl
cmp
cmp
xchg
inc
cld
ret
in
sbb
popf
mov
jno
out
or
lahf
inc
loop
pop
lahf
stc
call
jecxz
push
dec
int3
popf
dec
aaa
sub
iret
or
sahf
bound
movb
sub
mov
sub
aad
xchg
pushw
push
add
or
pusha
sbbl
jbe
testb
arpl
mov
mov
inc
ret
shl
int3
jmp
rclb
shll
fs
mov
vpsubb
sar
and
lods
dec
or
mov
push
test
jecxz
movsl
cltd
mov
fst
xor
gs
lahf
subl
sti
out
cmp
jmp
dec
pop
pop
and
sbb
scas
mov
sbb
shl
inc
sbbl
xor
push
add
push
mov
repz
xchg
in
gs
mov
mov
inc
imul
ror
pop
sbb
or
fs
add
cmp
cmc
push
jg
cmp
mov
jb
popa
mov
sti
fwait
pop
sarl
adc
rorb
frstor
jmp
rcll
movsb
std
pop
mov
mov
add
fcompl
aam
stos
sub
mov
lds
cwtl
shll
cmp
insl
push
cmc
rolb
push
mov
pop
xchg
rcll
not
adcl
repz
mov
fstl
xor
mov
test
jno
xor
fwait
jnp
jg
push
mov
add
inc
scas
imul
aam
loopne
int3
ljmp
adc
jge
out
mov
inc
ret
int3
fisubrl
mov
mov
dec
shl
dec
mov
mov
sbb
stos
test
std
push
shll
inc
insl
lock
jecxz
xchg
es
sar
test
cmp
out
shll
lahf
hlt
sub
and
in
stos
daa
inc
movsb
adc
xor
into
pop
insb
das
repnz
ret
aad
pop
add
in
ljmp
in
push
sar
dec
and
jne
push
pop
sbb
nop
mov
cmp
push
push
jnp
cld
sbb
xchg
xor
mov
ja
in
inc
iret
mov
inc
add
or
and
add
cmp
std
mov
inc
fdivl
outsb
movsb
rcr
shrl
in
jns
sbb
push
mov
daa
push
lea
shrl
dec
jno
shll
test
outsb
jb
pop
iret
arpl
out
sub
pop
shll
lret
and
cltd
jle
sbb
add
push
sti
popf
xor
mov
movsb
sbb
cmp
cmpsb
dec
sub
rorl
dec
mov
fsubl
pop
lret
into
popf
movsl
xchg
and
in
cmp
in
lcall
mov
loopne
decl
xchg
lahf
shrl
mov
inc
jecxz
lds
push
push
sbb
lahf
xor
xchg
in
adc
push
test
daa
jb
sub
xchg
xlat
sbbb
icebp
dec
push
mov
leave
addr16
xor
lods
lcall
and
outsl
inc
fs
lds
fsubr
xor
shl
jge
mov
push
out
scas
push
mov
es
add
pusha
sub
test
fdivrl
sarb
and
jecxz
movsb
rcl
lock
xor
jns
dec
iret
inc
mov
sub
aam
mov
stos
ficompl
push
cli
outsb
loopne
sub
push
inc
pop
adc
les
xchg
dec
or
xchg
cmp
ret
stos
mov
sar
cmp
ficoms
outsl
in
test
add
and
mov
or
sahf
lahf
mov
subb
dec
lods
dec
add
mov
movsb
in
mov
sahf
rclb
dec
cmpsb
rclb
scas
mov
fs
les
inc
add
jg
mov
or
clc
imul
dec
push
mov
rcll
add
iret
sub
fptan
iret
dec
add
mov
jmp
rcl
xlat
or
shll
sarb
cmpsl
cmpsb
into
decl
rorl
pop
out
mov
cmc
cs
xchg
push
adc
lcall
add
cwtl
shlb
adc
jp
inc
add
xor
dec
or
pop
sub
into
out
int
stos
std
mov
sbb
movsb
rcrl
mov
mov
call
push
mov
ficompl
dec
rcll
pop
negl
ret
mov
jb
out
push
enter
mov
ror
push
in
add
rcrl
lock
sub
jae
ret
outsl
dec
roll
jmp
push
or
lds
pop
pop
in
jns
clc
stc
aad
inc
mov
mov
shll
hlt
ficoml
shll
call
leave
xlat
inc
aaa
adc
in
mov
cmp
or
mov
mov
shrl
jge
in
dec
sti
rcrl
inc
subl
pushf
scas
push
int3
mov
jge
pop
push
xchg
cmp
lea
shll
mov
fcom
push
fldt
jg
sub
repz
out
add
int3
lds
cltd
jmp
jne
push
roll
pop
mov
ret
addl
call
jns
mov
in
shll
nop
pusha
inc
cmp
rcrl
push
jge
mov
lret
mov
mov
mov
push
repnz
mov
jae
les
call
mov
rorl
popf
scas
in
rcrl
or
mov
stc
xchg
xor
repz
data16
arpl
xor
cli
push
outsl
push
add
push
sbb
loope
frstor
mov
adc
push
push
sub
xchg
shll
pop
outsl
push
nop
xchg
push
sbb
mov
mov
dec
ror
sarl
jno
aaa
fwait
mov
add
mov
pop
push
aam
int
inc
push
and
insl
push
loopne
xchg
imul
into
inc
inc
adc
push
sub
js
pop
out
pop
mov
xlat
rcll
push
cmp
ss
clc
mov
add
xor
insb
mov
xorl
cli
cmp
nop
mov
xchg
out
xchg
sbb
push
jge
xchg
shl
sti
lret
fs
push
outsl
in
in
shll
int3
dec
fcoml
adc
ja
mov
ret
pop
xlat
mov
popa
daa
adc
jns
fs
push
fwait
jg
lret
rcl
arpl
sti
xor
mov
pop
push
adc
adc
rcrb
mov
sar
sbb
jnp
adc
rcll
dec
xlat
sub
cwtl
sub
jmp
push
scas
pop
imul
rcll
ficoml
lea
stc
and
adc
jmp
jb
shrl
test
cwtl
mov
or
jg
lret
jecxz
push
xor
negb
adcb
stos
pop
dec
lock
cmp
aam
fcompp
icebp
rol
clc
xchg
test
add
adc
push
mov
push
rcrl
push
orb
pop
stos
lret
inc
and
rol
je
xlat
push
ror
aam
and
stos
and
shll
ficoms
shll
adc
inc
outsl
lret
sarl
sub
cwtl
dec
xlat
and
xchg
nop
xor
leave
and
inc
and
adc
add
jl
aam
jecxz
push
lock
cli
stos
push
aam
or
test
adc
sarl
push
shl
ror
add
lcall
lock
add
stos
cmpl
mov
pop
call
mov
jne
xchg
inc
mov
insb
add
ds
int
xchg
les
push
dec
iret
pop
jo
push
fs
sbb
jne
sti
mov
push
pop
int
cmp
mov
iret
xor
adc
mov
xchg
js
ja
lcall
lds
int3
xchg
daa
sbb
scas
icebp
je
in
les
mov
rcll
fmul
fcmovbe
cmp
sbb
sub
jl
mov
shll
dec
adc
sub
ljmp
rcl
leave
fsubrp
sarb
mov
addl
jl
cmp
sub
fmul
cmp
in
daa
jnp
iret
push
ror
in
cmc
jmp
fdivl
andl
dec
ss
aad
rcr
testl
lods
mov
and
shll
sub
lods
cmc
aaa
ja
inc
les
sub
mov
aam
xor
fs
push
pop
mov
fstpl
fisubl
arpl
sub
add
dec
aam
add
jns
adc
pop
xchg
adc
gs
xchg
lcall
andl
or
push
addr16
sub
lea
add
rcr
mov
cld
cmp
lahf
pop
jmp
outsb
and
mov
inc
cwtl
mov
rol
mov
dec
stos
push
out
inc
sbb
clc
outsl
mov
cld
push
bnd
cmp
push
push
icebp
loopne
or
xchg
ja
xchg
rol
cmpsb
lret
dec
popf
call
dec
out
test
lret
jae
fisttpll
jecxz
mov
movsb
adcb
aad
pop
xchg
inc
cld
push
lods
roll
add
sbb
and
aam
push
jns
lret
mov
cltd
pushf
fsubp
repnz
xor
stos
out
in
pushf
shll
jae
push
push
push
jecxz
imull
es
ds
cmp
and
mov
jl
out
cmpsl
rcl
adc
daa
out
xchg
lret
outsb
xor
xchg
inc
jne
dec
push
mov
xchg
mov
mov
roll
loopne
pop
push
negb
aas
and
aam
fucomp
ror
jg
test
int
and
sbb
jp
push
mov
mov
ret
sub
push
ja
fs
push
sub
mov
jecxz
cld
and
out
add
xrelease
pop
test
stos
divl
mov
or
shl
jb
inc
mov
aam
ljmp
fstps
adc
lock
xchg
push
imul
std
roll
dec
mov
xchg
mov
jmp
fisttpll
or
imul
mov
rclb
js
xor
lods
notl
jbe
cli
int
push
xchg
push
addl
loope
mov
jg
fwait
out
fisubs
push
mov
test
xchg
shrl
or
cmc
int
dec
es
mov
outsl
dec
and
adc
inc
xchg
lcall
repnz
cmp
mov
rcrl
iret
cmpsb
adc
and
sub
lahf
cmpb
xchg
jne
shll
gs
ljmp
fistpll
push
aaa
dec
cltd
xchg
cmp
aam
es
push
mov
into
sub
mov
aam
rcl
shl
in
dec
mov
and
out
rorl
push
lahf
pusha
jmp
ljmp
lds
and
shrl
sbb
into
movsl
fwait
es
jge
sbb
xor
mov
jns
shr
js
lret
ret
adc
pop
push
ds
jae
sarb
shrl
cmp
and
mov
aas
icebp
cmc
push
push
out
lds
fisttpl
dec
inc
jle
lret
fbld
aad
jmp
cmc
sub
out
imul
sub
sbb
or
int3
xor
push
aam
jbe
mov
pop
roll
jmp
push
xchg
pop
pop
cmpsl
movsl
sbb
jp
inc
repnz
aam
pop
aaa
shll
jb
addr16
repz
mov
loop
out
movsb
shll
sbb
mov
rorl
call
leave
or
and
sub
inc
sahf
xchg
lock
jp
mov
or
shll
jge
xor
jl
add
mov
pusha
orl
push
jg
push
and
or
shrl
lret
adc
arpl
clc
imul
cmovl
cmp
fdivl
shl
mov
mov
aam
arpl
sarl
mull
sarw
adc
xchg
shll
jge
das
sbb
ror
xchg
mov
iret
shll
cwtl
sub
push
fwait
addr16
and
add
jg
pop
jo
sbb
shr
dec
sub
fsts
inc
shll
xchg
push
mov
xchg
xchg
fdivrp
cmc
pop
push
or
lds
aad
jge
aas
sbb
mov
sub
mov
andb
push
fwait
lret
hlt
shll
aam
rcl
cmpsb
insl
cmp
push
sbb
std
aam
lret
sahf
outsb
rorl
imull
test
inc
push
sbb
push
sti
pop
or
jecxz
xchg
xchg
sarl
jb
imul
xchg
pushf
mov
or
push
shll
fbld
or
xor
xchg
out
inc
sti
rcrl
push
jb
ss
xchg
mov
mov
repnz
add
shrl
mov
fisubrl
lcall
cmpb
arpl
push
push
pop
adc
mov
test
push
imul
dec
cmp
scas
and
out
xchg
aaa
dec
mov
mov
int
jmp
jp
fs
repz
cmpsb
xor
dec
addb
arpl
sbb
aas
sub
insl
lahf
rorl
sbb
jno
imul
pop
sarl
ja
xlat
stc
sub
sarl
push
pop
loopne
adc
bound
xchg
repz
jmp
add
dec
imul
sarl
xchg
out
rcrl
xchg
aam
sub
outsb
leave
mov
call
lcall
test
xor
sti
pop
adc
mov
iret
push
jecxz
fcomip
imull
pusha
xchg
or
push
shll
shll
cmp
leave
cmp
and
jb
lret
into
shrl
jnp
rcl
sub
mov
scas
divb
dec
test
shl
jge
adc
jns
insb
inc
xor
movsb
aam
pop
pop
dec
stc
rorb
mov
xchg
push
xchg
xlat
sub
ljmp
mov
in
xlat
push
rol
sbb
fsubl
sub
fcmovb
jmp
cmpsl
lock
or
rcll
sbb
xchg
inc
adc
pop
scas
jmp
repz
mov
sub
mov
fdivrs
push
ljmp
aaa
inc
mov
daa
sub
insl
dec
pop
push
sbbl
mov
jl
push
add
addr16
ja
xchg
in
lock
fmuls
roll
push
or
scas
jb
lret
push
sub
mov
mov
adc
daa
push
shlb
push
push
or
sub
lods
pusha
fdivrs
push
out
fcoml
lea
pop
stos
xchg
shrl
lods
loopne
filds
fwait
push
mov
add
mov
fcmovb
inc
xor
shl
inc
or
rcrl
xor
cmp
mov
inc
shll
mov
popa
shll
push
add
sar
jmp
cmpsb
rclb
sbb
cmp
mov
icebp
loope
insl
pop
pop
outsl
outsb
mov
call
aam
xchg
inc
add
dec
shll
push
lods
jecxz
call
mov
imul
lahf
movb
ljmp
sbb
adc
jmp
mov
push
adc
scas
std
pushf
rclb
sbb
rorl
xor
pop
dec
cmp
push
mov
leave
xor
adc
inc
mov
fdivs
push
ret
out
std
ret
mov
mov
rol
sbbb
outsb
jecxz
sub
sub
dec
cmp
push
scas
jl
adc
inc
adc
lret
fwait
mov
mov
shl
cmpsb
xchg
sub
push
dec
ret
stos
mov
sti
cmp
enter
out
jl
sub
mov
fcom
add
aad
rcll
mov
sbb
cmpsl
mov
jne
inc
fbld
push
daa
lea
xchg
out
int
mov
andb
pop
lret
bnd
add
dec
add
cmp
and
or
sub
lods
push
fwait
xor
addr16
xchg
xchg
xchg
adc
cmc
adc
cltd
pop
dec
stos
gs
shl
mov
add
fdivrl
rorl
jno
je
push
mov
or
repnz
rcrb
xchg
testb
add
lods
xchg
idivl
jae
outsl
mov
stc
stos
mov
and
xchg
daa
fsubrl
movsl
call
push
dec
and
xchg
push
fwait
subb
enter
mov
shll
adc
xchg
std
sub
out
imul
cmc
les
push
push
or
jbe
jae
insb
cmp
jns
jb
outsb
sahf
mov
hlt
jge
xor
pop
jp
vpsllw
pusha
push
test
xchg
test
mov
int
and
cmp
scas
mov
jle
sub
xchg
xchg
dec
mov
inc
push
imul
out
cwtl
int3
push
push
push
xlat
shl
sti
or
add
jmp
mov
jmp
and
xchg
inc
dec
popl
push
jno
mov
cmpl
cltd
shr
mov
je
lret
nop
in
mov
inc
xor
cli
test
adc
xor
das
je
push
les
daa
std
arpl
imul
xor
push
mov
mov
xor
mov
repnz
aas
repz
mov
xchg
bndldx
push
cmp
jmp
rorl
ds
rcll
cmpsl
jecxz
int
pop
push
notb
roll
mov
rcrl
movsb
rcrl
adc
cmp
sbb
xor
pop
mov
pop
repz
into
sub
shl
aaa
ret
movsb
inc
mov
dec
sub
rcl
out
imulb
mov
aam
movsl
jmp
sarl
xchg
cltd
rcll
jb
iret
sbb
rcl
mov
stc
mov
in
add
dec
fcmovnbe
out
mov
push
imul
pop
imul
pop
mov
cmp
and
rorl
or
rcrl
adc
xlat
dec
cltd
out
rorl
mov
aas
push
fwait
mov
and
adc
inc
cmpsl
lock
iret
rcr
add
cltd
int
mov
aam
inc
inc
cld
sarl
shrl
fildl
push
or
and
roll
xchg
pop
mov
fcmovu
ss
push
mov
xor
xor
jb
lret
inc
mov
adc
stc
movsb
or
out
pop
push
mov
push
or
iret
test
add
ljmp
rcll
iret
jg
push
push
xchg
enter
cmc
inc
shll
sub
and
adc
pop
out
shrl
adc
loope
roll
cwtl
fs
xor
mov
movsb
mov
nop
pmaddwd
cs
or
jecxz
jg
rol
in
or
push
lea
mov
xchg
rcll
das
shll
push
les
rcll
into
orl
arpl
and
cld
mov
push
xor
rclb
gs
scas
iret
js
rcrl
sbb
bound
and
scas
inc
icebp
ja
cmpsl
stc
shlb
sub
mov
sub
rclb
scas
je
or
mov
add
push
sub
push
daa
xor
sub
nop
mov
cmp
mov
dec
inc
iret
in
xchg
inc
adc
and
push
sub
rcll
stos
addb
out
shrb
fistpll
xchg
xor
stos
aad
push
loop
xchg
mov
cmp
mov
ror
je
test
push
dec
add
ret
repz
int
ds
jmp
mov
jb
adc
rcrl
fwait
xbegin
sub
fs
mov
shll
or
shll
ror
xchg
cltd
out
sub
pop
mov
mov
mov
sbb
iret
sbb
jo
and
mov
adc
repz
mov
push
rcl
dec
xchg
out
inc
jmp
jns
mov
jns
jecxz
ljmp
push
std
or
adc
sti
mov
sbb
aam
mov
ret
shll
xchg
faddl
adc
sub
out
enter
repnz
shl
cmp
add
lcall
xor
xchg
jge
jmp
add
mov
pusha
or
jb
cmp
movsb
test
sbbb
imul
mov
dec
adc
je
xor
test
push
xor
fptan
xchg
nop
sbb
inc
mov
add
xor
repnz
leave
in
or
mov
pop
mov
inc
test
loopne
sbb
lahf
and
xchg
out
mov
mov
imul
fisubrs
cmc
das
xor
inc
in
mov
int
pop
push
xchg
lcall
nop
mov
decl
jmp
push
xor
adc
jo
xor
test
ljmp
hlt
and
and
sub
jmp
jle
jne
jo
jp
adc
insb
xorb
pop
repz
cmpsl
push
in
mov
mov
mov
mov
mov
aaa
dec
int3
out
mov
pop
xchg
or
pop
test
mov
jmp
xchg
mov
inc
outsl
bound
mov
adc
clc
stc
test
cmp
jmp
rol
push
data16
pop
repz
xchg
ljmp
and
outsb
xor
out
xchg
cmp
jmp
adc
std
out
add
mov
pushf
cld
jge
pushf
jo
bound
dec
push
mov
sub
jns
cs
jle
iret
push
pop
sbb
mov
cmp
jae
out
jns
scas
je
pop
rorl
xchg
xor
pop
lret
data16
mov
xchg
push
in
inc
bound
push
je
insb
fildll
sub
push
adc
jge
mull
xchg
dec
jne
dec
test
dec
jo
pop
dec
out
lods
push
pop
jb
xlat
in
test
in
lods
mov
ds
js
ret
test
lahf
adc
push
loop
mov
movsb
stc
jp
or
add
cli
mov
insl
test
ss
stos
mulb
es
and
sbb
sub
and
mov
adc
jle
jnp
loopne
das
and
loop
mov
vpmulhrsw
lds
rol
pop
rclb
sbb
xchg
cwtl
scas
xchg
inc
push
push
pushl
movsb
sbbl
mov
inc
sub
xlat
movsb
mov
outsl
in
nop
push
aaa
aad
push
add
mov
cwtl
fisubs
jno
and
jmp
jbe
stos
mov
and
lods
pop
push
out
aam
lcall
pop
sub
push
pop
cmpsb
xor
mov
imul
jb
inc
ds
cwtl
in
and
push
fwait
pop
popf
push
inc
or
mov
add
pusha
test
test
jmp
stos
lret
push
test
xchg
mov
stc
xor
pop
les
test
pop
call
and
test
sub
dec
and
dec
mov
xchg
icebp
push
push
insb
lret
cmpsb
cmpb
inc
addb
mov
test
cmp
cli
dec
mov
rclb
sahf
jne
fwait
and
outsl
pop
incb
xchg
mov
addr16
shll
push
lret
mov
push
adc
lods
addb
pop
btc
add
or
mov
arpl
adc
or
fdivrl
pop
movsl
xchg
add
push
push
xlat
int3
mov
jecxz
inc
jl
movsl
fucom
sub
js
in
fcoms
je
mov
or
ds
int3
or
jle
pop
out
mov
fs
dec
dec
mov
inc
lcall
mov
or
fwait
mov
push
test
scas
dec
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
adc
cs
call
pop
ret
outsb
push
loope
mov
stc
frstor
mov
push
ret
xor
xchg
push
lret
test
xor
sub
mov
sbb
fstpl
in
shrb
xlat
and
inc
fisttpll
scas
jle
shll
mov
sti
push
or
push
push
add
cli
add
inc
push
push
dec
dec
dec
cs
dec
dec
add
aam
push
cmp
nop
cmc
xor
pushf
leave
out
mov
repnz
inc
out
dec
cmc
fidivrs
xchg
xacquire
lahf
ss
fneni(8087
in
push
mov
mov
mov
sbb
mov
pop
lds
inc
mov
test
jo
dec
and
jmp
test
pop
lcall
stc
sub
nop
test
and
test
or
test
outsl
inc
push
cmp
add
mov
mov
sub
neg
ror
sbb
mov
bsr
sub
pushf
and
xor
lea
pusha
sub
bt
pushl
popl
jmp
push
pushf
lea
je
shr
push
test
rol
sub
bswap
jmp
jmp
movsb
mov
cmpsl
in
xchg
adc
cmpsb
lret
and
gs
nop
sahf
lcallw
in
scas
arpl
add
mov
and
mov
icebp
loopne
or
jg
aad
dec
push
insb
or
or
gs
int3
mov
jecxz
test
lods
in
test
stc
or
in
dec
subl
out
pop
out
or
or
test
dec
add
adc
test
rcl
bt
mov
test
jmp
cmp
push
lea
ja
dec
inc
mov
push
not
dec
inc
add
cmp
setno
jmp
push
adc
pop
int3
test
xor
dec
inc
icebp
imul
nop
or
popa
or
bound
cmp
fisubrs
and
xor
fdivs
jp
xor
jnp
mov
push
cmp
lods
jbe
adc
adc
cli
notb
fs
mov
je
sub
faddl
sub
repz
or
fisubrs
or
in
cld
add
inc
das
movsl
les
mov
imul
adc
jno
adc
mov
adc
int
push
inc
xlat
and
xchg
inc
in
sahf
pop
jp
test
test
rolb
or
mov
inc
popa
insb
aad
insb
nop
xlat
sub
xchg
rdtsc
inc
pop
shl
inc
in
outsb
push
inc
test
les
cld
pop
or
pop
sub
or
xlat
es
je
or
int
out
pop
pop
sbb
imul
pop
loope
or
mov
dec
pusha
test
int3
rcll
addr16
shl
or
mov
fidivl
sti
in
nop
xchg
mov
fcmovnb
push
cwtl
sub
sbb
adc
dec
xchg
mov
popa
xchg
insb
enter
jp
xor
push
or
adc
std
es
jo
decl
pusha
xor
lods
xor
ljmp
gs
clc
aad
scas
fimuls
movb
lea
jne
push
jmp
lea
ja
push
call
lea
jne
bswap
cwtl
jmp
mov
fisubrs
int3
lret
cltd
out
dec
adc
pop
cli
cmp
mov
lret
loop
mov
popf
mov
sub
dec
test
jmp
shrb
mov
cmp
nop
pop
adc
outsb
add
push
and
aad
decb
test
and
xchg
in
or
lock
mov
push
sbb
lea
jb
jmp
add
add
adc
jno
and
popf
lcall
mov
fcmovb
push
inc
imul
xor
mov
imul
fdivrl
or
test
fsubrl
sbb
nop
icebp
xchg
cmp
cld
xorb
push
test
fldt
shll
lods
xchg
pusha
pause
fildl
fildl
enter
adc
pusha
push
dec
pop
cli
fdivl
scas
push
leave
mov
int
push
in
cmc
xchg
shlb
leave
mov
ficoml
out
inc
mov
insl
jb
and
or
mov
data16
pushf
inc
lcall
jp
cwtl
test
jns
pop
sbb
scas
sbb
mov
insl
xchg
mov
cmpsb
mov
dec
sbb
sahf
adc
lock
pop
inc
icebp
cmpsb
lret
shrl
sbb
sub
xor
mov
fdivp
sti
scas
lods
push
rcr
popa
nop
cmpsl
cmpsb
fucomp
sub
inc
cld
cwtl
xor
adc
lods
add
imull
dec
sub
push
lret
rolb
mov
ss
std
or
mov
mov
ja
xchg
mov
je,pn
popa
jno
mov
cmp
add
aaa
jl
mov
sub
int3
addr16
xchg
imul
jnp
sub
aas
push
shl
jl
outsl
sahf
lods
inc
stos
inc
adc
jle
push
les
cli
insl
fnop
xor
cld
sbb
adc
mov
and
test
aam
lahf
sbb
sbb
push
dec
pop
and
movsl
and
mov
add
and
jg
stos
in
lds
cmpsb
inc
or
pop
pop
jne
cmp
icebp
or
roll
je
dec
fsub
in
pop
sbb
data16
mov
adc
mov
xchg
sahf
cli
ds
adc
inc
adcb
jns
mov
sbbl
xor
push
sub
popf
je
mov
pop
jne
enter
aas
incl
jb
xchg
aas
insb
subl
xchg
xor
gs
popa
jo
es
lahf
xor
repz
jns
or
fnstsw
rcrl
mov
push
lcall
sub
aam
ds
in
xchg
xchg
mov
inc
adc
sbb
push
fnstsw
push
insb
jbe
mov
dec
mov
inc
adc
aas
aad
push
loop
loopne
inc
movb
lret
mov
fcoms
inc
mov
fisubrs
int
pop
out
jns
jb
lret
push
cmp
sbb
mov
cmc
pop
into
daa
fwait
mov
mov
call
out
rcrl
out
lods
pop
test
xchg
cwtl
stos
outsl
pop
dec
mov
arpl
inc
cmpsl
addl
pop
cmp
dec
hlt
mov
arpl
rcll
inc
adc
ljmp
push
jns
test
stc
sti
call
sbb
cmc
stc
clc
test
cmpb
pushf
pushf
pushf
lea
jmp
inc
mov
sub
pop
pop
in
cmp
lock
mov
pop
frstor
mov
int3
or
orl
mov
push
iret
mov
aas
data16
int3
mov
push
aaa
dec
adc
notl
cmp
out
xor
jno
xchg
xchg
out
aas
aam
scas
push
dec
shrl
and
inc
stc
pop
sbb
sbb
scas
push
sbb
xchg
jo
adc
dec
adc
push
sub
xchg
ret
ror
aam
mov
xlat
inc
std
jo
cli
sub
xor
dec
cltd
lods
mov
mov
cmp
popa
aaa
sub
idiv
lods
clc
std
ja
mov
movsb
and
sub
rorl
add
xor
fcmovnb
ffree
mov
push
mov
ljmp
aam
hlt
fdivrs
mov
test
popa
fcompl
rcr
jle
pop
lahf
sti
lcall
imul
cs
mov
scas
jno
adc
das
mov
cmc
scas
mov
push
or
outsb
add
xchg
sbbl
xlat
add
mov
sbb
das
movsb
adc
lods
pop
fs
xor
ljmp
cmp
and
and
out
vunpckhps
sbb
xchg
repnz
pop
adc
xchg
jl
cltd
lret
mov
out
leave
test
iret
push
addr16
pop
dec
add
and
sahf
je
imul
cmp
test
push
int
mov
movb
shlb
mov
push
adcl
inc
add
jb
adc
xor
mov
jae
inc
push
pop
test
mov
rorb
xor
mov
shll
and
jecxz
adc
mov
ja
lret
ret
push
jnp
mov
xor
fmuls
push
fs
cmpsb
inc
mov
mov
aam
fnsave
leave
pusha
iret
xchg
mov
lock
outsb
mov
cs
fstpl
adc
imul
inc
mov
xchg
lcall
ficomps
dec
imul
push
rcrb
xorb
push
mov
add
sub
loope
rolb
or
mov
sbb
outsb
add
adc
mov
mov
orl
or
mov
xchg
scas
in
arpl
push
xor
insb
setbe
and
jb
mov
pop
add
dec
pop
lcall
and
loope
sub
test
mov
push
out
sub
stc
imul
and
mov
mov
xlat
test
push
pop
mov
mov
xchg
inc
js
adc
in
sub
xor
push
xor
fimuls
mov
dec
sub
adc
imul
lcall
test
pop
pop
and
sbbl
jge
sub
fstl
dec
xor
inc
mov
shll
movsb
lcall
scas
test
cmp
add
push
jl
xchg
mov
xor
xchg
fisubrs
dec
and
fstps
pop
lods
xor
pop
and
das
jne,pn
ret
mov
jge
lds
fldt
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
dec
xor
jae
adc
test
bound
pop
stc
cmpsb
or
popf
pop
mov
push
jg
lret
ja
dec
aas
adc
imul
int3
aas
adc
xchg
shrb
divl
pushf
pop
insb
shlb
or
nop
inc
imul
pop
ds
es
pop
dec
ds
add
cmp
outsb
add
fisubrs
pop
outsl
leave
repnz
test
mov
daa
cmpsb
popf
sub
add
inc
arpl
sub
test
or
add
jb
xchg
arpl
mov
sbb
lcall
inc
roll
xorl
fsubl
shlb
and
and
loop
jl
mov
jl
mov
roll
hlt
loope
pop
clc
arpl
ss
mov
out
xchg
fcompl
test
lea
fwait
mov
xchg
test
jg
aad
dec
repnz
fucom
inc
cltd
sbb
mov
sbb
lret
es
shlb
rcll
vmovshdup
add
pop
popf
mov
in
pushf
shlb
lret
mov
int3
cmp
and
pop
inc
jae
pop
pop
loope
dec
xchg
jmp
rcr
repnz
cmp
fadds
shrl
sar
and
push
rorb
std
ljmp
lock
movsb
fistpll
jbe
outsl
ficompl
movsb
jmp
push
mov
inc
hlt
jge
imul
add
jp
mov
lods
and
fwait
addr16
jb
jl
fidivrs
aas
sarl
out
idivb
jecxz
mov
cmp
mov
or
sub
fiaddl
jle
and
addr16
jmp
int3
cmp
fstpl
add
mov
cmp
call
cmc
stc
add
pushl
cmp
pusha
push
lea
jb
push
cmp
pusha
mov
pusha
lea
jae
lea
xadd
shld
test
mov
xor
add
sub
bsr
mov
push
cmp
not
pop
mov
clc
pusha
jmp
mov
aas
jbe
adc
mov
ljmp
ret
push
bound
mov
sbb
hlt
popa
push
fwait
xor
in
sub
ja
cmp
rcll
sbb
cltd
and
outsb
mov
xor
imul
jns
mov
lcall
xor
pop
or
lock
cmp
in
or
mov
popa
loopne
out
pop
jle
jbe
pop
dec
push
add
out
mov
mov
lea
test
push
out
popa
lds
jb
vmovsd
addb
mov
mov
mov
ljmp
jns
jecxz
mov
movsl
test
outsl
push
adc
icebp
lcall
insb
xlat
in
push
mov
fwait
mov
inc
fnstsw
lds
xchg
shll
or
jae
push
popf
aam
or
imul
cltd
gs
bound
push
mov
adc
repnz
mov
dec
bound
push
into
mov
mov
cmp
xchg
aam
shlb
popf
pushf
push
lea
jae
rcl
stc
mov
push
or
mov
movsbl
rcr
sbb
mov
call
jae
cmpb
pusha
jmp
lock
dec
ja
adc
outsl
pushf
shr
mov
mov
std
sub
outsl
dec
inc
lret
cmp
scas
imulb
xchg
cmp
xor
scas
mov
xchg
cmpl
ss
adc
mov
xchg
mov
loopne
mov
and
lahf
cwtl
push
mov
adc
cltd
push
and
push
push
test
cli
into
call
aad
add
ja
pop
inc
hlt
xchg
dec
std
inc
add
test
xor
dec
out
scas
out
xchg
mov
icebp
mov
mov
not
mov
sar
sbb
sub
bsf
lea
dec
mov
bt
clc
sub
bt
bt
pushl
cmc
jmp
xlat
adc
js
adc
dec
ljmp
add
js
cmp
fwait
loopne
imull
imul
push
xchg
add
or
cmp
jge
mov
mov
mov
xor
and
ret
js
test
leave
scas
lret
addr16
add
mov
js
pop
lahf
or
fwait
adc
add
movb
pushl
push
lea
jmp
xorl
cmp
and
push
sub
and
test
test
xor
jecxz
lds
dec
cmp
int3
jecxz
sub
punpckhwd
jb
add
jo
and
cmc
lret
xchg
sub
leave
movsl
das
cmp
mov
mov
xchg
cli
inc
jmp
test
cld
movsb
outsb
cmpl
inc
cmp
stc
test
inc
fmull
xlat
or
dec
xchg
adc
hlt
jmp
jp
dec
mov
enter
bound
into
movsl
outsb
andl
push
cmove
cld
ja
xor
cmc
sbb
xor
add
add
pop
aam
jl
push
in
stos
jmp
test
xchg
cmp
cs
ret
out
outsl
mov
jge
cmp
sub
imul
les
push
mov
jmp
jecxz
jmp
gs
mov
inc
inc
add
cwtl
mov
jb
push
and
les
int3
jg
fldl
adcb
push
fnstsw
jmp
jns
out
in
inc
int3
mov
xor
std
shl
pop
test
sbb
iret
cltd
pop
sub
lods
mov
stc
orl
adc
pushf
jae
cmp
push
and
xchg
pop
fwait
andb
push
mov
shr
outsl
jae
cmp
rolb
dec
push
mov
popf
push
fwait
and
stos
test
dec
int3
pop
xchg
jp
adc
dec
xor
mov
jne
nop
push
cmpsl
mov
rcrb
loopne
dec
push
sbb
sub
popa
ss
cld
in
xor
sub
pop
xor
sbb
std
mov
andl
mov
mov
pushf
dec
rcr
testl
xchg
bound
filds
or
and
or
inc
push
arpl
in
push
jge
and
fld
insb
dec
test
leave
jne
push
std
pop
arpl
rolb
loopne
pop
adc
push
movsl
xlat
add
push
insb
popa
jns
outsb
push
inc
imul
je
cmc
jns
cmp
add
jmp
psubsb
mov
add
mov
sbb
mov
xchg
sub
push
arpl
lahf
xor
lret
js
and
pop
fstpl
outsb
stos
xchg
testl
hlt
push
les
out
inc
out
dec
lcall
sbb
jno
outsb
jb
and
dec
rorb
and
je
or
sbb
test
mov
imul
mov
jmp
xor
cmp
adc
cwtl
ffree
xchg
dec
adc
pop
mov
jecxz
mov
and
xchg
pop
call
lea
pop
xor
adc
sub
jne
dec
add
test
xchg
push
xor
outsb
sti
jecxz
and
push
jne
into
les
pop
lret
push
shr
shl
sbbb
daa
pushf
js
pushf
and
adc
xor
mov
arpl
push
jae
ja
mov
mov
subl
andb
mov
shll
add
cmpsl
cld
sub
dec
int3
aaa
adc
or
mov
int3
test
scas
lret
shll
testb
and
push
aaa
sarb
sub
pusha
mov
outsb
fs
fisttps
out
scas
ss
lods
mov
ss
sub
or
shll
outsl
fwait
mov
pop
fisttpl
aam
or
divb
sub
scas
mov
add
dec
and
mov
mov
call
xchg
and
and
loopne
ret
and
cmp
push
fld
icebp
mov
pushf
jns
aas
ljmp
mov
and
and
into
mov
inc
push
sbbl
or
repnz
clc
fwait
fs
subb
push
movsl
xor
lds
pop
hlt
iret
ror
fisttpl
xor
or
or
push
lods
adc
xor
xor
int3
test
stos
jb
jmp
bswap
xchg
mov
push
pushl
not
bswap
mov
pushf
pushf
pushl
ret
mov
lea
pushf
lea
call
call
jmp
jns
inc
jle
adc
das
mov
outsb
sub
addb
stos
in
fmul
data16
pushf
xor
inc
stos
xchg
in
loopne
inc
rclb
xor
outsb
out
cmpsb
adcb
dec
dec
popf
xchg
int3
jg
test
hlt
into
pop
pop
cmp
rorb
add
andb
jnp
out
mov
aam
lahf
scas
mov
fldcw
push
lods
or
and
mov
jno
or
jmp
adc
les
sbb
adcb
inc
xchg
sbb
into
inc
xor
in
lock
fnstcw
lods
cli
adc
fdivrl
pop
aaa
mov
xor
inc
cs
dec
insb
call
icebp
mov
mov
pop
scas
loopne
fdivrl
sbb
into
in
movsl
xor
loope
xchg
sbb
out
mov
jne
lods
shlb
fimuls
jp
pop
std
ret
fildl
dec
mov
xchg
mov
shrb
psadbw
add
jl
loop
mov
or
fs
ja
cmp
sub
shl
pusha
pop
cmp
add
add
bts
pusha
shr
mov
and
sar
pushf
mov
pushf
push
bt
stc
repnz
jmp
pushf
jmp
std
pop
mov
insb
pop
imul
xchg
pop
cltd
mov
and
push
rolb
dec
enter
int
mov
push
xor
pop
push
or
xlat
sbb
shll
add
dec
mov
das
stos
dec
mov
out
les
loopne
int3
jo
lret
mov
add
jp
rorl
rcr
enter
cltd
into
clc
sbb
adc
enter
or
push
xchg
loopne
mov
cld
aam
or
sbb
das
movsb
mov
sub
enter
fstpl
sub
push
and
adc
jecxz
nop
inc
mov
iret
std
incl
adc
cmp
mov
add
frstor
xchg
lahf
test
xor
sub
pop
fwait
push
pushf
mov
sbb
ss
push
lret
sub
inc
inc
fldl
xchg
jge
add
repz
enter
call
push
push
lcall
push
aaa
out
adc
ss
insl
das
cmp
inc
sub
repz
push
call
roll
cld
and
add
pop
jmp
jp
jne
pop
add
out
mov
icebp
pusha
lock
test
das
lret
test
add
js
jmp
dec
mov
mov
movsb
dec
inc
shll
dec
cmp
ja
add
in
notb
mov
jcxz
mov
add
aas
sub
loopne
les
ljmp
movb
fsub
rcll
dec
jle
fs
lea
test
aam
mov
std
shll
lock
insl
jmp
dec
mov
adc
lods
add
or
jmp
neg
cmp
pushl
clc
mov
push
pushf
pushf
jmp
pop
call
xchg
mov
in
jb
xor
outsb
mov
adc
mov
xlat
insb
dec
dec
xlat
sub
fnsave
insb
popa
stc
mov
mov
and
ret
xor
or
lret
sarl
adc
pusha
inc
adc
mov
stos
xchg
gs
jge
lock
jns
call
nop
aam
jl
xchg
lods
mov
sub
ja
and
inc
jmp
idivl
mov
add
jg
nop
clts
int
mov
jbe
pop
std
jle
sbb
in
xchg
add
xorb
sahf
sti
js
ret
xor
sub
push
mov
ss
mov
push
call
add
and
in
outsl
sbb
cmc
inc
orb
and
rcr
push
ljmp
jb
mov
sub
adc
nop
fnsave
pop
push
lea
in
jns
pop
inc
and
add
add
push
add
add
add
add
add
push
add
push
add
push
add
adc
add
add
or
add
cwtl
inc
or
add
add
add
add
add
idiv
push
add
call
add
call
add
call
add
call
add
dec
popa
imul
inc
imul
add
dec
popa
imul
dec
outsb
imul
add
outsl
jb
xor
pop
pop
inc
gs
js
gs
inc
dec
dec
imul
pop
inc
push
push
fs
dec
outsl
outsl
imul
popa
jb
dec
outsl
jne
jae
cs
add
add
pusha
jmp
mov
adc
sub
mov
lahf
mov
lods
adc
movsb
divl
stos
sub
pop
jge
adc
cmc
subb
xchg
leave
lods
xchg
loopne
out
cmp
xor
sub
stos
pop
aaa
lret
ja
ret
pusha
jns
add
fistps
and
lds
adc
pop
and
inc
js
or
mov
rcl
jge
pop
xor
add
js
stc
and
loop
mov
dec
out
fs
bound
imul
fcompl
mov
pushl
push
pushl
ret
xchg
xchg
test
mov
jp
in
cs
loopne
pop
es
int3
jnp
inc
fiadds
sub
loope
aam
addl
fs
add
adc
dec
shl
add
fisttpl
aas
pop
mov
fldt
push
dec
mov
icebp
popa
mov
adc
dec
ja
lods
jl
push
inc
nop
mov
jle
fmuls
add
dec
insl
popa
addr16
imul
je
add
sldt
or
cmpsl
test
xchg
imul
cmp
dec
jno
and
int
xchg
notl
mov
ret
xchg
fstps
sub
fists
bound
push
or
sahf
cli
call
jecxz
cmp
mov
fsub
jp
mov
cmpl
ljmp
cltd
out
outsl
mov
out
xchg
in
fstps
push
mov
sub
mov
cmp
push
inc
jmp
test
cli
push
fadd
lea
mov
lock
imul
popa
lods
rcll
push
loope
xor
int
jno
mov
cmp
inc
mov
int3
mov
jbe
in
int
and
enter
out
mov
out
stos
nop
popf
repnz
je
aad
sbb
imul
fsubs
xor
in
xchg
movsl
cmp
add
xor
cs
call
xchg
sub
loope
inc
es
fisubrl
jae
push
and
test
movsb
mov
test
and
imul
arpl
cmpsl
xor
ljmp
and
decl
adc
or
andl
push
sahf
and
incb
pop
dec
enter
pop
jne
xor
hlt
sbb
shll
sbb
test
mov
std
add
das
push
out
and
dec
dec
push
sbb
sub
pop
fdivl
xlat
jbe
or
loop
call
stos
rorb
mov
cs
sub
shrd
lea
add
cmc
lea
xor
and
mov
cmc
setne
mov
cmc
stc
call
mov
test
jb
xchg
leave
push
sbb
dec
inc
push
xchg
jnp
push
cmp
int3
mov
orb
lods
sbbb
jns
pop
stc
das
negl
push
sti
ret
pop
es
mov
pop
mov
inc
xchg
scas
pop
jb
testl
mov
inc
inc
sbb
mov
dec
xor
pop
mov
lret
lahf
inc
icebp
pop
mov
jae
pop
push
jb
lods
ds
pop
in
mov
in
fiadds
mov
inc
dec
or
mov
cwtl
stos
mov
hlt
dec
mov
jg
add
xlat
and
pop
scas
lods
pop
pusha
ss
pop
stos
mov
shl
test
out
shll
inc
inc
pop
pop
loope
mov
lds
outsb
jns
or
push
pop
scas
mov
pop
stos
ljmp
or
jle
sbb
sahf
pusha
and
in
adc
je
mov
enter
jo
sar
imul
aam
mov
inc
ret
sub
mov
pop
mov
loope
xchg
mov
into
lcall
repz
in
sub
adc
stos
cmp
popf
push
out
loope
lcall
sub
add
fidivrl
jle
mov
sbbl
dec
push
jg
lods
mov
mov
pop
push
xor
insl
in
stos
add
scas
in
je
mov
xchg
out
outsb
cmp
and
out
lea
jae
pusha
mov
push
sub
jmp
call
mov
lea
add
bswap
bts
mov
seto
clc
add
stc
adc
shl
movl
bts
shld
pushf
mov
lea
pushf
bt
add
jns
cmc
cmp
pushf
pushf
movl
lea
jbe
clc
sub
xor
shr
sub
call
in
adc
bound
mov
loop
dec
icebp
aad
lock
bound
xchg
xorb
mov
ss
gs
loope
aam
dec
lea
ret
lret
sbb
enter
mov
and
cld
pop
adc
add
add
push
stos
sbb
mov
inc
js
cmpsb
jge
fwait
pop
imul
cmp
add
mov
stc
mov
stc
cmpb
pusha
lea
jmp
sub
stc
bt
pusha
pushf
cmp
push
pushf
pushf
jmp
push
pusha
movzwl
clc
pushf
btr
mov
test
call
call
lds
fisubrs
or
enter
inc
push
jb
test
or
and
jne
sbb
mov
lret
xchg
push
sub
ss
ja
mov
xor
in
int3
jnp
pop
sbb
adc
mov
or
mov
xor
xchg
and
xor
lds
insb
sub
rorb
sub
gs
push
mov
bound
fldenv
jb
test
popa
push
mov
pushf
cmp
or
sbb
sbb
fcomps
jb
jae
push
ret
mov
jge
sbb
test
jb
ljmp
in
loope
sub
sti
sbb
xor
cmpsb
movsb
loope
stos
fmul
lret
ljmp
idivl
dec
fwait
cmp
sub
out
daa
xchg
lea
das
mov
bswap
mov
sbb
ret
out
or
cltd
mov
cmp
test
outsb
xor
xchg
pop
and
push
inc
jmp
nop
push
inc
xor
mov
xchg
dec
dec
xor
test
dec
lea
jo
cwtl
push
pop
jmp
sbb
push
mov
sbb
into
xor
in
mov
int
inc
in
dec
dec
xlat
xchg
subb
add
mov
pushl
mov
lea
jmp
adc
mov
nop
fildl
and
roll
mov
push
push
loope
push
rcrl
cmp
ss
cmc
loop
adc
xchg
inc
xchg
mov
push
jmp
sub
jb
sub
jge
clc
arpl
cmp
sub
xchg
loop
popa
clc
mov
sub
fidivrl
pusha
loop
je
xchg
cmp
push
push
lret
xchg
sbb
out
mov
mov
sar
int
mov
add
and
ja
call
neg
cmc
push
cmp
setne
lea
lahf
mov
mov
mov
jmp
jmp
pushf
pushl
push
lea
ja
call
int3
push
adc
jb
and
outsl
inc
xor
rclb
sbb
jge
push
shlb
cli
loope
ret
pop
ss
push
pop
in
sbb
dec
and
shl
pop
cld
or
and
cmpsl
leave
std
subl
inc
lahf
push
or
push
dec
jo
scas
xchg
fxch
cmp
pop
push
mov
add
rorl
dec
shll
shl
adc
mov
test
mov
in
push
push
daa
aad
add
lret
iret
ds
xchg
orl
jo
xchg
aaa
je
xlat
test
fcmovnb
xchg
bt
pusha
sub
clc
call
lea
jbe
mov
test
clc
xor
call
nop
add
lea
or
pop
lods
dec
fidivrs
pusha
in
cmpsl
les
ljmp
xor
pop
out
mov
ret
test
fs
jp
popa
lret
mov
push
inc
pushf
outsb
and
outsb
mov
int3
dec
data16
lds
pop
sbb
repnz
int
aam
js
sub
mov
movsl
dec
and
and
mov
das
sbb
in
lea
out
cmc
jb
mov
jle
xor
call
loopne
lock
mov
dec
add
xchg
jge
leave
clc
mov
adc
xchg
xchg
scas
stc
out
loope
jmp
test
sahf
cmp
mov
and
jno
rolb
clc
add
sbb
xor
xchg
or
xchg
push
push
sahf
fimuls
push
out
pusha
lcall
into
ficoml
into
adc
mov
add
lahf
sbb
sub
outsb
les
sti
and
mov
cmp
ja
or
cmpsl
inc
pop
and
data16
mov
daa
lods
movsb
sti
cli
xchg
fidivrl
int
movntps
xchg
imul
push
shll
dec
adc
sbb
insb
dec
push
pop
and
xor
aaa
dec
mov
test
hlt
or
adc
mov
movsl
mov
push
dec
popf
mov
xor
xchg
test
mov
repz
orl
mov
and
in
stos
subb
jge
rcrl
add
xchg
cmpsl
mov
movsb
add
nop
mov
call
mov
mov
in
cli
mov
aad
xchg
pop
pop
fsubrs
or
xchg
or
pop
sbb
push
jle
cld
mov
repz
in
popa
popf
pop
in
mov
fistps
test
or
adc
push
test
aad
inc
adc
aad
dec
mov
clc
test
pusha
stc
jl
pop
sub
push
sub
cmp
cmc
push
hlt
jns
mov
movsl
push
push
ljmp
and
mov
ljmp
daa
dec
push
add
pop
mov
js
fadds
sbb
mov
sbb
lret
icebp
cmp
cmp
ljmp
lea
xchg
call
shlb
pop
das
incb
push
js
lret
dec
sbb
imull
into
jo
add
cld
cwtl
cmc
push
ret
in
sbb
aas
jmp
fadd
mov
cmc
in
lds
adcl
sub
jb
into
jns
sub
lods
add
push
loope
sbb
adc
filds
pop
dec
pop
pop
push
xchg
jbe
mov
jae
push
stos
dec
lret
out
inc
add
xchg
mov
mov
sbb
test
mov
pop
jecxz
pop
jmp
fs
dec
xor
fs
shlb
jns
inc
int
mov
xor
mov
push
mov
cmpb
fwait
pop
jmp
arpl
movsl
xchg
mov
inc
sbb
or
pop
arpl
subl
jb
test
jae
jne
das
les
inc
stos
and
loop
movsl
ss
rorl
and
sbb
fadds
sahf
jle
dec
jne
and
insl
push
int
jp
and
lea
adc
mov
add
shlb
test
inc
mov
mov
cmpsl
jbe
sbb
fcoms
dec
sub
xlat
cmp
push
aam
js
popa
insl
cld
adc
mov
loop
adc
lret
leave
sub
aaa
xchg
jb
mov
mov
mov
enter
loopne
xor
iret
jp
mov
int
jno
xor
test
pop
adc
cmpsb
mov
stos
wrmsr
adc
dec
xchg
mov
cmpsl
sub
xchg
inc
repnz
and
dec
je
test
cld
loopne
adc
cmc
xor
xor
dec
fistl
jp
fldt
arpl
fs
ja
sbb
shl
test
sub
neg
sar
inc
add
bsf
movsbl
or
xor
mov
call
inc
pop
ja
jb
gs
push
pop
dec
sub
mov
add
adc
sub
xchg
mov
or
cmp
inc
not
lahf
ja
gs
jl
loope
aaa
mov
pop
pop
iret
sbb
pop
mov
mov
mov
insw
cltd
out
cmc
jmp
test
iret
jp
or
fldenv
lahf
dec
scas
jle
rcrl
aad
rorl
mov
mov
and
mov
push
xchg
sti
outsl
clc
test
pusha
cmp
call
in
push
xor
mov
sti
push
in
push
dec
adc
mov
xchg
push
leave
adc
popa
fldt
mov
leave
rol
imul
js
aas
push
adc
out
sub
gs
jmp
into
cmp
in
ror
rorb
mov
std
into
les
pop
xchg
gs
loopne
mov
add
xchg
movsb
nop
sahf
push
sti
mov
lock
mov
cmp
cmc
test
adc
adc
ja
push
adc
or
adc
mov
xor
jl
push
mov
fidivl
xor
mov
popa
cmp
adc
mov
in
jns
sbb
in
sbb
hlt
mov
test
in
sub
pop
call
mov
and
xlat
adcb
pop
dec
addr16
lock
mov
sub
xchg
fs
adc
je
xchg
mov
sub
cmp
or
inc
outsl
out
sub
addl
lahf
jle
cld
jae
xchg
repnz
sbb
push
call
pushl
jmp
jmp
jmp
pushl
add
cmp
cmc
test
movzwl
add
stc
bswap
adc
mov
test
add
stc
clc
pushf
pushf
mov
cmp
stc
test
movb
push
pushl
jmp
inc
dec
dec
inc
push
dec
xor
cs
dec
dec
add
shlb
scas
sbb
aad
mov
lea
jb
cmp
jmp
pushl
popl
clc
pushf
test
clc
cmp
call
fildll
jb
jb
les
rcrl
mov
dec
cs
jg
stos
push
jmp
outsb
cmp
pusha
jge
mov
daa
in
pop
mov
in
aaa
jne
std
jle
repnz
aas
and
fidivrl
iret
lret
ret
cs
xor
mov
lahf
aam
pop
lret
cs
cmp
mov
movsl
outsb
dec
insl
leave
imul
stos
mov
addb
scas
scas
fstpl
pop
dec
add
or
movb
test
push
lea
je
cmp
add
clc
push
cmp
movb
push
lea
jb
cmc
pushf
movb
cmp
pusha
lea
jae
and
mov
mov
shrd
shld
btr
bt
mov
sub
test
mov
cmp
test
stc
bt
sub
bt
repnz
push
pusha
pushf
lea
jne
bswap
shl
mov
dec
neg
bsr
sub
inc
adc
adc
mov
push
pushf
call
cmp
call
call
adc
mull
xchg
push
xorl
je
push
movsl
scas
jle
mov
cmp
std
icebp
popf
aad
mov
xor
inc
pop
shrb
repnz
inc
cmp
mov
jge
fidivrs
adc
fidivl
mov
aad
cmpsb
shlb
je
stos
pop
js
call
dec
inc
jp
mov
call
jmp
push
push
xchg
pushf
movl
jmp
clc
bts
cmp
mov
call
lea
ja
push
mov
movb
push
lea
jb
push
push
cmpb
call
btc
jmp
push
ror
jmp
jmp
adc
mov
loopne
xor
addb
mov
shlb
iret
add
xchg
leave
jl
mov
icebp
lds
scas
xchg
lock
mov
jnp
loop
xor
mov
outsl
scas
dec
sub
sbb
mov
pop
in
scas
cmpsl
bound
dec
pop
add
sbb
sub
cwtl
mov
adc
sbb
ljmp
subb
fsubrl
shrl
and
stos
sub
inc
js
and
add
nop
adc
movsbl
mov
pushf
push
jmp
ja
mov
les
push
xchg
dec
mov
iret
lods
popa
jle
pusha
popa
and
mov
lds
mov
jb
lret
mov
jns
inc
jnp
cltd
mov
imul
pop
mov
mov
jbe
lock
dec
fiaddl
int
sub
std
es
mov
xor
ss
int
in
pop
and
fsubr
jp
jnp
mov
cmpsb
jne
adc
gs
jecxz
int
push
leave
add
push
mov
out
imul
rcrl
jmp
int3
test
jbe
cld
dec
rcl
cmp
in
ret
out
rsqrtps
pop
movups
xchg
jb
pop
mov
int3
cltd
decb
gs
mov
push
shrl
mov
adc
dec
call
pop
jno
nop
outsl
out
add
dec
incl
mov
pop
dec
cmpsl
data16
cli
adc
outsb
xor
clc
mov
mov
cmp
cmp
dec
dec
lods
push
push
movsl
int3
fwait
mov
std
mov
pusha
add
xchg
mov
cmpsl
ret
xchg
jb
adc
movsb
xchg
push
ret
lock
scas
dec
and
shl
pop
push
ja
jne
cwtl
add
mov
jp
cmp
aaa
cmpb
cmp
and
add
pusha
jl
and
arpl
mov
adc
cmp
mov
jg
movsl
inc
enter
cli
lea
icebp
xchg
pusha
pop
jbe
les
mov
push
sbb
int
das
push
rcrb
mov
lahf
xchg
xor
jecxz
insl
adc
sbb
dec
inc
roll
ja
lcall
repz
sbb
adc
lods
inc
loopne
aas
cwtl
enter
inc
xor
pusha
sbb
pop
testb
int
repz
rcrl
or
lret
shl
jle
in
jns
outsb
sub
mov
arpl
push
adc
movsl
inc
jle
adc
xchg
insl
les
jle
add
cwtl
cmp
mov
shr
cwtl
jb
fimull
or
in
push
push
mov
ficomps
add
bound
cmpsl
sub
push
sbb
loopne
and
xchg
andb
add
mov
lahf
pop
ds
sbb
pop
xchg
inc
pop
iret
pop
dec
icebp
adc
inc
dec
les
and
push
sub
out
mov
test
loopne
jbe
mov
jle
sbb
add
out
fsubrs
xor
ret
mov
fwait
inc
jmp
inc
repz
push
lock
push
adc
push
or
lcall
xor
and
jae
mov
mov
les
mov
repz
sahf
add
xchg
jnp
or
push
aad
add
xchg
pop
add
test
and
xchg
dec
lods
test
xor
jmp
into
and
jp
cmpsl
shll
jnp
xor
jns
xlat
arpl
jmp
lods
test
sar
cs
dec
or
xor
mov
pop
frstor
cltd
jb
aad
int
cmp
xchg
push
push
pop
mov
hlt
or
mov
sbbl
cli
xchg
fyl2xp1
cs
or
movsl
push
mov
or
sbb
adcb
insl
inc
push
jg
js
fcoms
or
stos
or
push
xor
repnz
xchg
sbbb
sbb
and
xor
sar
push
mov
cltd
sbb
ret
jo
cmp
inc
nop
nop
lea
in
test
gs
sub
adc
iret
clc
mov
repnz
std
shl
or
lahf
fisubs
cmpsb
jecxz
ja
ds
sub
dec
aas
jl
adc
testl
out
mov
aas
ret
aam
pop
or
fadd
sub
xor
popa
popa
adc
jb
jmp
lret
arpl
mov
addr16
xor
nop
mov
push
insb
pop
mov
xchg
call
adc
pop
hlt
addl
dec
les
leave
dec
xchg
lods
fs
xchg
std
dec
insl
and
sahf
shl
rcll
add
jno
enter
nop
fdivrl
inc
pop
sub
inc
mov
jns
mov
mov
push
sub
or
andb
jl
stos
and
inc
xchg
cmp
pop
ja
inc
and
push
jb
prefetchwt1
insb
imul
data16
cli
enter
xlat
shlb
add
dec
push
fisubs
sarb
pop
paddsb
and
movsb
leave
mov
xor
adc
js
adc
cmp
sbb
add
cmc
cmc
inc
cmp
addr16
ja
js
arpl
pop
mov
notl
mov
mul
hlt
out
aaa
cld
inc
shll
add
out
icebp
lds
pop
bound
mov
add
loope
test
ret
aaa
sahf
in
aam
cmp
shlb
out
aaa
lea
jae
insb
mov
mov
lret
jno
or
add
gs
add
mull
ffree
cmp
insl
or
pop
mov
xor
pop
pop
push
cmp
gs
push
lea
ja
dec
iret
jmp
inc
lods
shlb
popa
loopne
repz
popa
imull
pop
dec
into
inc
insb
sarb
push
rorl
cmp
xchg
in
adc
jae
mull
ds
and
push
pushf
mov
pushl
ret
enter
jb
mov
mov
pop
xchg
adc
xchg
and
lret
mov
lret
bound
mov
nop
add
in
push
cmp
inc
mov
aad
clc
lods
les
neg
test
push
dec
push
insb
push
outsb
shll
push
in
stos
xlat
hlt
inc
ljmp
outsb
push
flds
out
movsb
stos
loop
adc
lea
inc
lea
sbb
movl
pushf
pusha
call
cmp
cmp
jb
mov
push
arpl
int
sbb
mov
adc
fs
pop
orb
jae
jne
jge
call
shl
inc
mov
mov
dec
inc
pop
out
idivl
dec
push
xchg
stos
push
inc
mov
es
jmp
mov
nop
leave
ret
test
and
out
mov
fdivr
push
lcall
mov
test
lret
mov
nop
inc
in
add
stos
push
pushf
movw
push
lea
jmp
cmpb
jmp
push
pusha
mov
mov
pusha
pusha
lea
jmp
jmp
icebp
adc
sahf
jb
sbb
aaa
sub
xor
in
mov
mov
bound
cmovo
xor
mov
push
clc
add
mov
scas
nop
mov
lahf
ja
call
iret
inc
xor
insl
dec
or
js
cld
mov
or
mov
cmp
and
pop
adc
sub
push
sbb
enter
shll
mov
jmp
pop
sub
add
push
add
push
pop
and
add
mov
adc
std
imul
jnp
pop
add
push
add
rcrb
xchg
incl
add
add
loope
xorl
sub
add
push
add
enter
lret
pop
and
add
call
sbb
add
aam
pop
aaa
add
add
adc
add
sub
add
push
add
rcrb
dec
inc
adc
addb
add
bound
xorb
add
cltd
movsl
add
call
lds
mov
and
mov
sub
add
push
add
fisubrs
insl
mov
push
add
mov
push
and
add
add
mul
test
add
lods
ljmp
test
mov
sub
add
push
add
push
pop
and
sbbb
jnp
adc
adcb
mov
add
shr
mov
pop
and
add
add
loop
add
int
and
add
pop
mov
add
add
add
jo
add
dec
add
out
fistps
add
aad
fistpll
pop
add
insl
cmp
add
push
add
xchg
loop
jecxz
sub
add
push
add
shrb
and
add
add
inc
mov
add
push
add
pusha
jge
sbb
sub
add
push
add
fistps
pop
add
inc
push
add
lahf
add
pop
mov
or
pop
and
add
push
add
arpl
les
add
cmpsb
add
pop
lret
test
loope
and
addb
mov
add
add
or
add
sbb
pop
add
mov
add
xor
xchg
add
lock
push
call
add
loopne
pop
pop
and
add
std
mov
xorb
or
and
sub
add
sub
add
push
add
rorb
and
add
lcall
adc
pusha
cmc
ret
imul
mov
in
lret
outsb
addl
les
es
cmp
pcmpeqb
in
cmp
out
clc
jecxz,pn
fsubs
dec
add
cwtl
test
lcall
and
leave
jmp
xchg
push
xchg
fimuls
shrb
sbb
mov
popf
les
orl
add
or
inc
testb
scas
movb
pushl
pusha
movb
lea
jne
setb
jmp
pushf
push
push
dec
clc
movb
call
movb
lea
jne
setb
jo
lea
seta
movb
setp
lahf
push
bswap
bswap
pusha
lea
pushf
jmp
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
add
dec
add
pusha
pushl
pushl
popl
stc
cmp
movb
pushl
lea
ja
push
mov
pushf
sub
jmp
setbe
lea
jmp
das
dec
mov
aas
pushf
leave
out
jmp
popf
lcall
ljmp
pusha
rclb
scas
sbb
cltd
int
mov
outsb
sti
pop
jp
cmp
cwtl
xchg
je
pop
add
in
xchg
scas
aas
pop
repnz
adc
add
lock
pusha
lret
loope
das
jge
jp
push
lock
lahf
fs
push
adc
xor
fs
mov
cmp
into
fstpl
stos
or
hlt
xchg
fists
mov
xor
mov
mov
jmp
cmp
push
jecxz
push
lret
jae
stos
ficoml
orb
jb
aad
inc
inc
test
out
arpl
adc
rol
es
xchg
xchg
fwait
js
out
fdivl
fimuls
pop
sbb
dec
jo
lahf
out
sub
shrl
push
mov
leave
std
pusha
shr
push
jbe
push
cmp
push
repz
nop
pop
mov
cmp
push
mov
repz
lods
adc
adc
pop
stc
adc
loop
cmp
into
mov
lds
stos
mov
sub
add
js
sub
xchg
jp
loope
xchg
xchg
push
dec
mov
jae
mov
or
jg
mov
cmp
inc
pop
fmul
xor
out
rcrb
cmpsb
jne
push
into
hlt
movb
xchg
fadds
pop
xchg
arpl
xor
data16
ret
push
xchg
out
cmc
lea
test
stos
fimull
rorb
loope
test
test
pusha
lea
je
clc
bt
sub
cmc
cmc
test
cmp
jmp
pushf
mov
pushl
pushf
lods
push
bt
jmp
dec
xor
adc
push
scas
jmp
lea
das
pushf
xchg
mov
dec
or
sub
inc
fwait
cmpsl
jnp
sbb
sbb
push
xchg
loope
test
orl
or
push
pop
push
mov
push
mov
mov
dec
in
idivb
negb
mov
pop
es
test
xor
pop
add
imul
not
cwtl
lea
lea
sets
call
mov
cmp
jb
int3
or
aas
or
in
xchg
add
cmp
inc
popf
adc
and
jne
sub
mov
arpl
shl
sub
push
push
ljmp
pop
pop
sub
push
mov
mov
lds
dec
pop
mov
cmpb
adc
cltd
iret
push
sub
or
loope
lds
decl
and
jl
lock
inc
insb
mov
div
add
fsubp
pop
adc
sub
aas
cmp
and
addb
xchg
push
lret
dec
inc
out
add
cmp
push
mov
dec
aaa
mov
sbbb
mov
sub
mov
movsb
add
push
inc
or
test
loope
pop
inc
out
and
imul
popa
and
jb
xor
jl
not
rorb
out
call
inc
repz
jge
and
movsl
imul
test
xor
clc
mul
add
movsl
jnp
leave
xor
das
adc
cmp
xchg
cld
xorb
and
mov
repz
push
mov
xchg
sarl
sti
add
clc
mov
jb
test
dec
xor
or
insl
mov
sbb
sbbb
adc
adcl
and
jne
adc
pop
push
sbb
repz
pop
cmp
arpl
cli
sbb
sti
jmp
xchg
jg
fisubl
jbe
xlat
xor
fs
or
or
xchg
fldenv
sti
aaa
cltd
sbbw
push
ret
out
inc
dec
or
sub
sub
pop
imul
fs
rorb
push
add
enter
neg
rcr
bt
xor
inc
clc
pushf
neg
pushl
seto
not
setne
inc
not
stos
seto
pusha
pushf
call
or
cmpsb
jb
cmp
mov
jae
sbb
push
decl
add
xor
xchg
jle
ret
rolb
cmp
jb
push
adcb
cmp
clc
nop
cli
iret
pop
divl
sbb
sub
icebp
cmp
scas
mov
das
in
and
xchg
mov
pusha
jb
mov
xchg
inc
fdivs
inc
test
jle
fs
loop
adc
mov
sti
fnstcw
fs
jae
push
movb
lea
jmp
ror
clc
xor
test
stc
cmc
stc
neg
pusha
not
call
jl
sbb
adc
test
xchg
rolb
adc
repz
jge
in
js
add
stos
cltd
xchg
inc
pop
mov
out
pushf
es
pop
sub
out
jb
jp
lcall
lret
sub
cmp
push
jle
insl
aaa
sbb
scas
test
stos
cmp
clc
shl
setns
call
lea
jae
clc
bt
jmp
movl
pusha
lea
jmp
sub
mov
cltd
push
fwait
sbb
fists
adc
jae
mov
out
xor
clc
push
cmp
mov
inc
ss
lods
test
mov
fwait
dec
xchg
xchg
int
mov
mov
push
in
stos
inc
int
and
lea
popa
mov
test
pop
dec
mov
inc
jge
enter
stos
shlb
stos
shlb
neg
mov
pusha
sar
sub
bts
movsbl
adc
push
das
and
jmp
roll
push
shl
cmp
lcall
and
xor
mov
adc
push
or
aam
in
js
out
lea
shlb
xor
js
add
cld
data16
out
mov
fs
sbb
or
cs
adc
and
jge
mov
daa
xor
mov
mov
mov
loop
mov
pop
jne
loopne
xchg
cs
xor
roll
xchg
aad
mov
mov
mov
dec
cltd
shl
pushf
lea
ja
call
jmp
fs
test
and
dec
push
lods
jno
xor
jo
icebp
popf
fisttpl
test
imul
fiaddl
pop
aam
cmp
push
mov
push
mov
jae
aam
jmp
pushf
push
push
std
mov
sub
insl
mov
stc
or
ret
sbbl
test
xchg
out
ds
fldt
push
jl
jb
cmp
jbe
stc
aas
lds
icebp
loopne
mov
dec
std
cmp
pop
or
adc
fimull
lods
lock
dec
arpl
inc
push
mov
cmc
push
push
cltd
push
adc
dec
sarl
push
and
mov
adc
mov
outsb
cmp
dec
jae
jmp
jo
inc
mov
add
push
repz
test
push
mov
cmpsl
mov
adc
dec
in
in
fsubs
movsl
int3
imul
xchg
sbb
fcmove
push
mov
cltd
rorl
pop
add
div
shl
sti
cwtl
sub
fwait
adc
sub
adc
and
fwait
jp
fstpl
ljmp
mov
inc
cmp
xchg
pop
mov
jne
jno
sbb
outsl
fcmove
fprem
scas
ss
aas
xchg
jno
nop
mov
or
cmp
mov
jns
fst
xchg
pusha
aaa
outsb
in
mov
jo
jae
adc
sub
repz
stos
jb
call
lahf
pop
leave
push
repz
arpl
cmp
fmul
xor
ret
cmpb
mov
in
popf
mov
pop
outsl
subb
cmc
pop
jmp
shrl
movl
pop
pop
icebp
mov
shl
js
sarl
add
xor
pop
dec
pop
and
xchg
pushf
push
mov
jl
dec
mov
mov
sub
dec
popa
add
push
gs
jo
outsb
dec
gs
js
add
add
decl
pushf
shr
mov
call
adc
iret
sbb
mov
or
adc
xchg
inc
fmul
cmp
int
adc
enter
fadds
int
cmpsb
insl
loop
pop
sti
stos
add
insb
aad
sti
add
lods
push
test
jecxz
sar
cmp
or
mov
mov
inc
idivl
mov
mov
mov
jno
andl
pusha
movl
lea
jl
push
push
push
lea
jmp
movl
movw
lea
jmp
push
lea
call
call
push
lea
je
call
popa
shr
lods
jb
inc
in
shll
decl
dec
rcr
xchg
add
pop
pop
push
aam
add
mov
ja
jne
fldenv
mov
or
ret
mov
pushl
dec
cs
xchg
mov
push
and
lea
lock
and
cwtl
push
and
mov
mov
cmovbe
xchg
mov
mov
sbb
dec
rcr
adc
lea
mov
add
sub
dec
not
mov
push
jmp
cmp
lods
jb
sbb
jnp
pop
cli
cmpsl
in
push
and
xchg
mov
xor
cs
adc
push
or
pushf
shl
cli
mov
mov
jge
mov
mov
dec
pop
dec
imul
ja
arpl
mov
or
arpl
movsl
inc
inc
insb
add
push
xorl
es
push
js
orb
adc
pop
sahf
popf
mov
add
fldl
out
bsf
inc
movzbw
xchg
bsr
shl
shrd
mov
movsbl
or
cmp
push
rcr
shl
lea
push
btr
shld
push
bt
push
rol
bsr
movzbl
push
movzbl
dec
and
mov
xadd
not
mov
adc
bt
btc
mov
stc
cmp
test
test
or
call
push
adc
jmp
xchg
scas
jb
or
mov
dec
cmp
mov
stc
iret
xchg
push
cmp
xor
mov
cmpsl
jge
dec
xor
ss
lds
and
loope
imul
jge
das
cld
xorb
mov
add
inc
pop
mov
jp
sub
ret
jle
inc
xchg
repz
adc
rcl
decb
cli
pop
xor
add
pop
scas
mov
popf
lock
jle
sub
imul
inc
jl
popa
arpl
addr16
mov
xor
enter
dec
jno
add
in
sub
ret
fs
jb
pushf
bt
cmpb
pusha
pushl
call
add
adc
and
cmpsb
cmp
add
mov
sbb
and
xchg
and
and
and
mov
mov
sub
and
inc
movhps
inc
mov
xor
and
movsb
fldenv
add
and
cmp
and
inc
xor
push
mov
inc
sub
and
add
and
dec
sub
leave
sbb
pusha
mov
push
sub
inc
xor
push
sub
xchg
and
add
and
dec
or
dec
je
jbe
pop
lods
shrb
dec
dec
imul
popf
popa
mov
mov
adc
mov
xchg
mov
iret
popf
xchg
in
cmp
jno
cmp
pop
lret
gs
sub
jecxz
sbb
and
hlt
pop
repnz
and
pushf
call
push
mov
pushf
pusha
mov
pushl
ret
pushf
pushf
call
add
mov
adc
and
mov
or
loope
xchg
insl
and
rol
bound
mov
dec
dec
push
add
bound
and
popa
push
cmpsl
pop
call
push
inc
mov
int3
dec
push
ljmp
mov
push
mov
call
fsubrp
push
dec
jmp
pop
inc
push
daa
stos
add
shll
leave
mov
push
dec
cmp
popa
loope
out
shll
and
jns
or
enter
add
jp
pusha
pop
xchg
pop
cmp
push
test
lea
jb
cmp
cmp
call
mul
cld
mov
adc
mul
loopne
cli
dec
jl
es
xchg
dec
push
stos
sarl
or
outsb
mov
js
or
mov
fldcw
inc
or
xor
mov
addr16
rcrb
rcl
push
fwait
lock
push
cmp
in
pop
subl
in
jl
fucom
les
nop
imul
xchg
jmp
jle
sahf
adc
jbe
add
nop
xchg
out
pusha
jne
out
jecxz
dec
dec
mov
fsubs
inc
test
and
fidivrl
jecxz
dec
nop
jae
push
push
mov
inc
cmpsl
scas
cmp
ret
fimuls
adc
jg
cltd
ret
mov
lcall
filds
in
adc
xor
add
add
inc
outsl
inc
gs
popa
insb
insb
outsl
arpl
dec
add
add
xorl
push
les
icebp
mov
aad
sbb
xor
jge
sub
jae
loope
jo
mov
pop
xchg
popa
cmp
ljmp
adc
das
fwait
cli
jmp
mov
and
outsl
pop
push
dec
adc
mov
sub
jo
rcr
push
sbb
lret
addr16
in
jp
mov
test
shl
addb
lcall
hlt
dec
in
mov
mov
sub
mov
in
add
xor
push
imul
movsl
repz
sahf
out
xchg
jl
xchg
sarb
aas
pushf
xor
jns
clc
testl
mov
insb
int3
xchg
sub
jecxz
push
inc
sbb
hlt
lcall
mov
sub
clc
xlat
jge
lret
sbb
sub
hlt
xchg
pusha
lea
jne
rcr
bsf
xadd
mov
stc
sub
shl
clc
dec
jmp
sbb
cvtps2pi
mov
popa
xchg
mov
stc
std
in
rcll
fbld
lcall
inc
imul
aaa
sub
sarb
inc
push
pop
jge
mov
pusha
lret
cltd
or
cmc
push
sbb
sbb
ret
and
les
dec
add
add
std
sbb
pop
pop
icebp
or
add
fnsave
push
mov
cmpsl
ljmp
add
inc
xchg
cli
jne
jp
fsubrp
repnz
sahf
out
mov
cmp
push
sub
das
mov
adc
push
aam
data16
xchg
push
lahf
cld
xchg
out
jecxz
push
inc
mov
leave
inc
int
push
add
mov
sbb
push
adc
sub
cmpsb
jle
cwtl
clc
ds
xchg
adc
pmuludq
sti
mov
and
jmp
cmp
mov
inc
fwait
mov
cmpsb
fdivr
mov
jmp
sub
inc
es
leave
pop
test
mov
pop
and
imul
dec
inc
push
push
push
sub
push
xor
push
xor
rorb
and
ja
call
pushf
lea
jne
sbb
ror
mov
rcl
rcl
pushf
sub
and
lea
bt
call
out
rorl
popa
inc
adc
sbb
jle
js
pop
pop
xchg
push
jns
popf
sahf
adc
jge
sbb
push
dec
push
js
dec
fnsave
adc
or
in
lahf
sub
mov
mov
cmc
mov
adc
ficompl
fs
add
sbb
mov
mov
aam
pop
jb
jg
pop
jbe
std
mov
in
idiv
cmp
shl
daa
js
loop
cmp
jle
push
or
pusha
movsl
call
or
ljmp
push
ret
stc
cmp
movb
pusha
lea
ja
pushf
pushl
jmp
call
shll
ret
xchg
repz
xchg
jne
out
les
stos
in
rcrb
push
repnz
sahf
fcmovnbe
lret
cltd
xchg
fptan
push
fcmovnb
xor
mov
push
fbstp
push
aas
mov
push
and
ds
mov
mov
cmpsb
and
adc
test
sbb
push
pop
lods
fdiv
xlat
xchg
jae
xchg
pop
jno
mov
pop
and
pop
mov
jae
mov
cli
rclb
cltd
dec
repnz
rcr
repnz
xlat
icebp
movsb
jb
push
inc
std
movsl
scas
ret
fcomi
pop
icebp
repnz
stc
push
enter
lahf
lds
faddl
sub
rcl
cmc
pop
stc
out
shl
aad
rclb
stc
aad
jmp
ret
lret
xor
mov
ja
movsl
mov
aad
mov
repnz
lods
xchg
lret
repz
xchg
rorb
jbe
leave
cmc
fwait
sti
cld
in
sti
out
stc
repnz
xchg
std
shl
imul
in
mov
and
or
fistpll
adc
mov
xchg
testl
adc
stos
sbb
mov
lods
repnz
xchg
push
not
mov
xchg
loop
jl
std
cmc
xchg
icebp
jbe
ret
movsl
aas
cmpb
mov
sti
lahf
faddl
ret
repz
push
rcl
addr16
rcrb
mov
push
dec
jmp
xlat
cmpsl
xchg
mov
cmc
or
mov
lods
pop
rcl
jmp
rcll
out
lcall
out
inc
lcall
fwait
mov
loope
dec
icebp
xchg
xlat
mov
jb
fildl
fnstenv
pop
mov
aad
xchg
aad
nop
jb
mov
in
xchg
xor
xchg
stos
push
add
sarl
cli
stc
dec
fnsave
inc
inc
lea
ret
fcmovnbe
jecxz
jb
inc
in
xchg
cmpsl
push
pop
xchg
lret
ret
aad
xchg
icebp
int
cmc
xchg
mov
loope
lret
loope
fsts
jb
sbbl
shlb
dec
xchg
xchg
pop
fstpl
scas
fistps
mov
nop
inc
int3
fcmovne
mov
loop
inc
inc
fs
shll
fneni(8087
loop
jb
mov
jbe
daa
lahf
repz
xor
pop
cli
out
fists
fstl
push
mov
aad
push
jmp
fs
dec
insl
lret
aam
out
mov
jne
sbb
aad
es
dec
mov
subl
add
mov
push
scas
test
mov
jmp
imul
inc
cmpsl
cmp
sub
fstl
jnp
xlat
mov
arpl
fwait
repnz
out
xchg
scas
or
xor
idivb
pop
cmpsl
ljmp
scas
mov
repnz
ret
xor
ljmp
loope
sti
and
lret
inc
xor
dec
mov
test
loope
or
lds
cmp
xchg
lods
fwait
sti
xchg
ret
push
fadds
sub
push
mov
adc
fidivrs
movsl
inc
jno
add
xlat
xchg
insl
pushf
popf
jmp
mov
notl
arpl
es
aad
push
cmpsl
xor
xchg
ljmp
push
mov
jne
int3
inc
mov
mov
int3
loop
push
cmpsl
out
addb
dec
xchg
dec
push
imul
cmpsl
por
sbbl
adc
pop
movsl
xchg
ss
rclb
push
fisubrs
sbb
pop
test
fcoms
dec
add
pop
push
pop
pop
mov
mov
sub
xor
and
fsts
and
jle
shll
and
dec
sub
sbb
jmp
jg
fstp
out
scas
dec
xor
scas
jnp
scas
outsb
or
adc
pop
push
mov
fisubs
jle
loopne
jno
stc
xlat
pop
jae
mov
mov
pop
rorl
popa
dec
add
fists
fisubs
adc
fxch
sarb
cmpsl
out
enter
pop
jmp
push
adc
cli
cs
rclb
fildll
test
mov
lahf
rcl
mov
std
pop
sub
mov
out
pop
lcall
add
jge
lods
pop
push
fs
out
lock
inc
stos
ds
pop
fcmovnu
and
pop
scas
icebp
mov
xchg
push
ret
and
leave
push
scas
aad
pop
push
lret
fsubs
lods
stc
fsts
push
lahf
shr
pop
loope
pop
call
pop
jmp
jae
out
bound
xchg
fsubs
mov
push
mov
aad
stc
mov
test
xchg
add
mov
shlb
fldt
imul
cmpsl
movsb
jg
fwait
ja
js
push
clc
mov
push
das
scas
xchg
ljmp
stos
mov
cmpsl
fyl2x
push
pop
push
push
je
pop
hlt
in
mov
xor
popa
jo
jnp,pt
push
in
adcl
xchg
ret
rcrb
fldcw
cmc
rol
lret
jnp
fwait
stos
jmp
jae
in
addr16
je
repnz
push
pop
sarb
jecxz
pop
xlat
xor
mov
or
pop
in
or
or
lods
out
or
call
shll
ds
rcrb
jne
test
lods
adc
push
cmc
rcl
inc
add
loope
mov
in
xlat
fdivrs
out
shrl
xchg
icebp
jo
arpl
arpl
fcoms
loop
push
jmp
fwait
pop
loope
loop
mov
scas
in
cmpsl
xlat
mov
push
sub
push
jnp
adc
mov
or
sbb
cmpsl
mov
mov
mov
fwait
outsb
mov
mov
lock
add
xlat
xor
icebp
push
les
mov
sti
lea
stc
lock
fs
adc
mov
or
adc
adc
stos
pop
xchg
imul
aaa
adc
jne
pop
adc
fmuls
xchg
adc
pushf
call
inc
jno
cld
xchg
mov
and
jno
leave
ss
ffree
std
dec
scas
xchg
mov
sbb
sbb
lds
loope
fstpl
popf
mov
adc
xchg
icebp
or
rcrl
fcmovnu
sarl
cli
addb
sti
push
sub
frstor
data16
pop
push
or
sbb
fucomip
fists
test
shlb
cwtl
fs
out
lret
fldenv
scas
mov
sti
addr16
push
out
testl
arpl
sbbb
adc
leave
sub
mov
orl
xchg
lods
stos
sti
cmpsl
pushl
das
jae
push
inc
jae
jge
es
add
cwtl
push
push
push
push
pop
lcall
fists
jg
sahf
push
xchg
rcrb
mov
addl
cmpsb
pop
out
inc
cli
mov
leave
and
popa
idivb
push
loop
pushf
sub
ljmp
std
add
enter
sti
mov
testl
mov
or
lcall
int
push
xorl
roll
popf
push
lcall
loop
stos
jnp
sbb
sbb
movsl
outsb
sbb
popa
ds
lret
mov
mov
out
popf
mov
sub
pop
int
insl
mov
fisubl
es
repz
popf
sti
fidivrs
mov
add
addr16
xor
negl
sub
movsb
leave
push
mov
in
inc
jns
loopne
repnz
call
fadds
adcl
fs
bound
popa
in
xorl
out
pop
xchg
inc
shl
shl
out
out
jb
xchg
xchg
std
cmc
pop
loop
push
lcall
sbb
and
push
dec
in
test
push
cltd
int3
fistpll
jmp
ret
cltd
xchg
orl
iret
testl
mov
mov
popl
jno
stos
repnz
jae
out
mov
lret
leave
push
lcall
pop
adc
aam
xlat
push
push
push
sub
cmpsl
jp
or
rep
add
mov
mov
es
jae
inc
cmp
jp
mov
ret
daa
test
jae
jae
jg
mov
inc
setle
sbbb
push
movsl
inc
mov
aad
addr16
sub
enter
lret
jo
ficoms
daa
cltd
jno
sbb
push
push
icebp
push
rclb
mov
push
jae
jp
movsl
push
fdivl
bound
mov
out
addb
jp
jl
ret
xlat
sub
lds
fisttps
dec
popa
sub
ljmp
inc
aad
push
sub
out
xchg
aad
pop
pop
out
xchg
pop
cmpsl
mov
push
sarl
ret
fidivrs
dec
inc
push
dec
cmpsl
add
mov
shll
repz
adc
sti
jnp
mov
mov
pop
lcall
shlb
movsb
jb
daa
pop
cs
std
dec
addr16
or
mov
mov
sti
mov
pop
stos
adc
sub
iret
xchg
jmp
adc
adc
fstpl
push
ret
pop
xlat
jp
ret
rorl
cmpsl
adc
out
xchg
jno
cmpsl
jae
rcll
stos
adc
add
pop
adc
fdivrl
fldenv
dec
stc
cmpsl
or
mov
add
pop
aad
inc
fdivs
mov
dec
mov
addr16
and
jae
int
pop
in
sti
xlat
test
jno
push
xchg
fs
and
cmpsl
outsl
movb
ret
mov
ret
inc
movzwl
mov
nop
pop
lcall
iret
popf
dec
lcall
shrl
div
xlat
rcrb
ret
icebp
dec
movsl
loop
xchg
jb
ret
mov
sti
mov
or
cmpsl
push
pop
addr16
lea
rol
frstor
std
mov
inc
jecxz
pop
movsl
xchg
sti
in
into
dec
push
inc
xor
or
add
add
cmp
mov
adc
and
adc
dec
mov
repz
fldt
neg
adc
pop
fcmovnu
out
and
mov
pop
mov
mov
adc
jo
sub
jo
jae
pop
or
ret
jns
push
ljmp
sub
neg
scas
xchg
repnz
lods
mov
sti
icebp
jmp
jne
or
cmc
clc
inc
scas
inc
mov
mov
ds
leave
aas
fcomi
shrl
stc
pop
push
dec
repz
cmc
jl
inc
shll
mov
push
test
aad
movsl
push
push
sti
cmpsl
mov
cltd
fsts
mov
nop
test
mov
adc
insl
lods
jmp
mov
pop
vorps
fildl
push
adc
jmp
popa
mov
je
clc
pop
fnstenv
mov
lcall
pop
mov
ret
cmp
stc
fwait
iret
jl
into
test
and
divl
mov
xorb
lret
xlat
cmc
aad
out
imul
stos
push
lahf
sarl
dec
xchg
mov
sti
inc
loope
popa
test
dec
aad
push
inc
mov
iret
mov
jp
rorl
mov
out
mov
jnp
rorb
add
ja
std
mov
push
jns
lcall
mov
lcall
stos
add
scas
lahf
imul
mov
in
pusha
push
inc
or
mov
xlat
ja
cmp
adcl
pop
jnp
sub
ds
mov
iret
xchg
xchg
ja
rcrl
orl
int
sub
ret
and
xchg
loop
fisttpl
lahf
pmovmskb
cmpsl
inc
int
cmp
push
out
pushl
ja
mov
add
xor
aas
lds
mov
push
cmc
sbb
mov
hlt
fs
pop
fcmovb
int3
stos
inc
ret
fucomp
sbb
fucomip
mov
test
cmc
xchg
or
ja
in
aad
adc
push
enter
dec
dec
lea
and
inc
fisttpl
in
mov
shll
lret
xor
adc
cmpsb
out
ljmp
mov
cltd
push
sbb
addl
lods
aad
xchg
ja
popa
mov
nop
rol
sbb
sarb
inc
jmp
mov
shrb
push
adc
leave
out
ja
jge
xor
out
dec
testb
into
dec
decl
cmpxchg
sti
pop
lret
inc
push
loope
mov
notb
fisttps
pop
jnp
roll
fistl
pop
xlat
out
push
cmc
mov
shll
jecxz
adc
faddl
pushf
xlat
jb
or
pop
shlb
roll
mov
cltd
adc
out
lret
icebp
cmpsb
in
jmp
addr16
mov
fwait
inc
nop
in
in
lret
xor
in
mull
int3
in
adc
loope
xor
push
dec
mov
orl
cmpsl
fnsave
cwtl
fildl
in
fsubrs
gs
ljmp
mov
mov
inc
into
mov
ret
fwait
adcl
stc
divl
aaa
repnz
jle
scas
and
mov
dec
sub
cmp
dec
sub
cltd
pop
lcall
mov
push
sub
test
movb
jo
rcl
das
divl
lcall
rcll
addb
out
addr16
inc
lret
popf
fadds
push
bound
jecxz
sbb
xchg
push
shll
adc
bound
xor
les
xchg
xchg
xlat
loop
push
pusha
mov
mov
imul
push
data16
lods
pop
pusha
popa
push
mov
jge
aad
xor
add
shll
in
lret
pop
dec
push
adc
pop
adc
shll
xlat
sbb
clc
mov
mov
icebp
lret
loope
icebp
xor
jmp
xchg
in
sub
out
sbb
push
fistl
imul
jae
mov
std
insb
neg
shrl
shrb
dec
fists
pop
out
pop
mov
lahf
rcll
pop
jnp
dec
mov
cmp
xchg
cs
adc
ja
aam
push
push
adc
adc
js
pop
jns
pop
pop
dec
jno
push
pop
ret
mov
in
lret
lcall
sbb
xchg
fadd
dec
mov
xlat
into
xchg
jo
pop
rclb
pusha
mov
out
imul
push
mov
xor
jnp
aam
aas
jo
inc
call
xchg
jns
xor
nop
xchg
call
jae
outsl
mov
notb
in
add
das
dec
icebp
mov
dec
mov
out
movzwl
dec
xlat
cld
outsb
mov
int
mov
lret
xlat
call
fisttpl
icebp
mov
inc
sbb
stos
xchg
shld
fisubrl
mov
lods
inc
scas
loopne
stos
lock
jns
repz
push
dec
mov
mov
stc
jmp
out
ret
adc
test
xor
xchg
or
test
add
mov
rcrl
jge
nop
repnz
es
int3
pop
push
lock
xchg
stos
lea
jbe
xor
xchg
aad
pop
push
iret
jae
cld
push
mov
jo
lret
call
pop
cmp
aad
push
cld
pop
stc
ret
jo
jb
ffree
xor
xor
lret
xchg
xor
push
outsb
jae
lret
call
ffreep
jg
out
ret
into
xlat
stos
decl
daa
sarb
jl
mov
push
push
and
mov
stc
xor
fistpll
push
jle
add
mov
data16
dec
pop
out
sti
scas
ljmp
data16
imul
sbb
cmpsl
or
inc
imul
jb
int3
push
loop
sbb
aaa
cmpsb
mov
rcr
mov
xlat
out
out
jle
jmp
sbb
test
pop
ret
adc
mov
sti
stos
adc
cmpsb
jb
push
rcll
negb
aad
ret
xchg
hlt
and
adc
push
movsl
popa
adc
xchg
fnsave
dec
push
cli
cld
scas
inc
inc
push
push
adc
lret
sub
mov
test
add
hlt
fistps
out
adc
in
pusha
aad
fsubp
xlat
cmp
adc
push
jmp
jle
pop
ret
outsl
xlat
jb
int
cwtl
jbe
mov
fdiv
xlat
push
int
clc
xchg
mov
gs
fldt
xchg
imul
jno
jb
jnp
jnp
sub
mov
iret
andl
movsl
or
push
sarb
ret
mov
les
jo
sub
jbe
sti
sub
adc
lcall
and
push
mov
lods
xor
push
ljmp
jae
mov
ja
cmp
mov
fcoms
sub
fistpl
xchg
fcomps
cli
xchg
xchg
or
mov
lret
push
mov
aam
xchg
jb
lcall
mov
loop
cwtl
fcmovb
ret
in
test
ljmp
scas
icebp
lds
dec
fsts
lds
mov
xor
dec
shl
mov
stc
int3
pushf
sti
lds
clc
dec
jne
add
int
mov
jno
popa
or
xor
int
mov
loope
sbb
mov
dec
subl
xor
xor
mov
lds
sbb
pop
lret
je
push
adc
xchg
jg
repnz
repz
imul
fsubr
jle
inc
inc
mov
lea
hlt
imul
jo
ret
sti
push
or
add
stc
cwtl
adc
mov
xchg
cmpl
mov
mov
mov
cltd
imul
jno
mov
xor
inc
cwtl
mov
aad
pop
xchg
call
jbe
cmp
in
lahf
jecxz
test
lods
push
in
pop
out
inc
mov
lock
aad
add
dec
pop
sbbl
pop
jmp
ljmp
push
dec
xchg
mov
add
sub
pop
mov
sahf
jns
adc
mov
jns
daa
or
pop
ljmp
hlt
aam
ret
loope
pop
dec
out
lret
fidivs
filds
sub
out
add
xor
adc
fwait
imul
mov
addb
out
sbb
sbb
sar
cmpsb
clc
xlat
std
loop
movl
cli
inc
inc
lret
cmp
pop
jb
mov
cmpxchg
rcrl
daa
das
lods
scas
loope
popf
jp
pop
call
mov
add
jae
jp
jno
push
mull
lods
rcl
rcl
imul
xlat
pop
cmpsl
lock
je
int3
sbb
jl
aad
jmp
jle
mov
jb
mov
and
jg
or
jnp
pop
clc
cli
in
sbb
xor
adc
mov
ret
xchg
jecxz
xchg
or
pop
out
xchg
lods
roll
insb
push
clc
inc
aaa
lods
sbb
test
jo
jge
adc
xor
icebp
lcall
test
mov
mov
icebp
repnz
pop
icebp
iret
inc
cmp
fcmovnu
sub
xlat
xorl
int
mov
int
cmpsl
push
xor
iret
pop
mov
aaa
sbb
lahf
push
lret
lret
jno
test
shlb
dec
int
rol
div
ret
outsl
and
in
cmp
mov
mov
test
ljmp
popf
dec
movsl
icebp
repnz
cmp
inc
fstpt
mov
cli
cmpsl
gs
out
lock
movsl
bnd
mov
loopne
ja
aas
mov
xchg
fwait
mov
das
dec
jne
or
dec
insl
sub
rcrl
pop
adc
iret
adc
mov
push
divb
cmpsb
rorb
and
jnp
aad
icebp
in
insl
push
lret
icebp
mov
icebp
lret
jne
imul
push
xorl
dec
pop
jae
mov
out
mov
dec
cmc
jo
adc
pop
into
inc
out
scas
hlt
push
ret
cmpsl
cmpsl
pop
jne
loope
adc
int3
ljmp
aaa
adc
pushf
mov
jne
repnz
jge
daa
imul
mov
lret
dec
jmp
popf
dec
sbb
nop
shlb
insb
repnz
andb
jmp
jnp
in
not
fdivp
aaa
fildl
ret
insl
daa
jmp
pop
dec
xchg
test
add
stos
push
dec
adc
inc
pop
inc
ljmp
sub
dec
jae
ficompl
cli
inc
test
ljmp
cli
inc
adc
sub
inc
push
inc
jae
xor
mov
fimull
xchg
mov
xchg
es
push
rcll
dec
mov
icebp
stos
icebp
jbe
es
lods
sbb
mov
call
fcomi
imull
push
enter
xchg
fisttpll
inc
xor
mov
sbb
or
jb
pop
cmp
xor
lock
sbb
adc
and
fwait
jae
inc
jb
xchg
sahf
call
jne
inc
xlat
sbb
pop
cmpsl
and
mov
xchg
push
mov
mov
sub
fwait
jle
or
mov
xchg
jb
xchg
lock
push
jp
dec
pop
clc
mov
lret
aaa
std
inc
cmp
iret
int
fs
push
imul
repz
int
icebp
adc
jle
xor
inc
xor
and
sti
pop
je
and
fmulp
icebp
bound
push
sarl
jl
les
daa
xor
inc
movsl
add
sub
jns
je
dec
fwait
push
fbstp
dec
mov
in
dec
mov
mov
mov
inc
and
ss
mov
int
loopne
push
neg
adc
push
cltd
call
xchg
mov
xor
jnp
mov
and
jmp
inc
repz
mov
jnp
adc
cmp
lret
hlt
or
clc
pushf
mov
scas
pushf
fcomps
data16
hlt
xor
lds
cmp
repz
sahf
fisubrs
shll
fildll
push
adc
inc
bound
sub
movsb
sub
sti
movntq
lret
call
stos
inc
jno
loopne
lcall
data16
ja
icebp
or
aad
addl
test
outsl
sbb
sbb
out
xlat
inc
xorb
insl
mov
xchg
sbb
fucomi
mov
sti
jmp
dec
mov
icebp
mulb
loope
into
inc
fistpl
fwait
mov
dec
leave
test
ficompl
test
hlt
inc
inc
inc
call
pcmpgtb
xor
inc
jp
inc
addr16
rcll
push
ljmp
pop
cmp
mov
es
into
or
sub
pushf
dec
lcall
test
push
lea
push
loope
ret
xchg
xlat
iret
jb
push
dec
ds
mov
pop
das
or
jbe
jb
cmp
add
and
or
ss
inc
pop
and
into
les
aad
lods
dec
fldl
shll
inc
lds
ds
lock
jge
insb
stos
js
rclb
pop
std
sub
out
ljmp
jnp
or
pop
xchg
popa
xlat
icebp
push
or
cmc
push
es
pop
xchg
aad
iret
insb
repz
cmc
ja
repz
out
pop
lock
repz
pop
fs
out
pop
fwait
push
cmp
rolb
jo
push
adc
popa
sub
out
mov
adc
inc
mov
mov
fldl
sbb
cbtw
cmpsl
inc
lock
cmpsb
mov
subl
jnp
add
lret
mov
xchg
repnz
in
mov
cmp
repnz
aad
mov
dec
or
cli
lods
dec
adc
popf
sbb
sub
aam
popa
bound
arpl
inc
lods
jp
cltd
jae
icebp
adc
out
mov
test
cmp
xchg
inc
xor
dec
xchg
ror
jg
jo
push
adc
pusha
int3
imul
fnsave
mov
jmp
test
das
aad
test
arpl
lods
add
mov
pop
sbb
mov
push
jne
loope
pop
outsb
int3
in
xchg
repnz
xchg
lret
cmp
fstpl
lret
jbe
stos
pop
sar
leave
adc
lock
mov
leave
adc
int
mov
or
cmc
insl
dec
pop
jecxz
push
ljmp
add
test
pop
adc
addr16
mov
adc
mov
jb
loope
lret
addr16
repz
push
add
insl
mov
in
inc
inc
and
rol
xchg
js
xchg
mov
ret
push
loope
ljmp
mov
adc
lds
jge
xlat
mov
lret
scas
rcr
jae
sub
sub
scas
push
and
jp
aaa
inc
and
popa
jl
scas
testb
sub
jno
xchg
pop
stos
movsl
testb
lods
push
stos
xchg
sub
in
jb
add
aad
repnz
fldl
cli
push
jne
fnstsw
xchg
fs
jp
xchg
fs
push
lcall
or
insl
pop
sti
rol
fstps
cwtl
cmpsl
mov
fildll
fs
shl
ret
aam
fstp
pop
push
pop
jae
fcompl
in
sbbl
and
addr16
mov
in
out
pop
mov
test
sbb
out
xchg
pop
fcmovb
das
xchg
adcl
fisubl
ret
dec
jne
rorw
imul
mov
je
sbb
dec
jns
ret
sbb
inc
mov
jbe
lret
mov
add
pop
flds
incl
sbb
mov
mov
dec
push
xchg
xchg
sub
xchg
repnz
xlat
sbb
dec
jp
movsl
clc
and
jbe
aad
dec
mov
xchg
and
mov
imul
and
bound
xor
ficoms
hlt
jecxz
imul
mov
mov
lock
jle
cmpsl
movl
jmp
lret
pop
cmpsl
mov
push
pop
int3
fsubrs
adc
dec
cmc
and
jne
jle
add
loop
rorb
add
xchg
sahf
mov
push
stc
mov
jae
fcoms
ja
jg
adcl
icebp
je
inc
ret
dec
in
in
ret
std
rolb
fsin
jg
fcmovu
sub
pop
xor
pop
sahf
lahf
cld
fstps
jbe
xlat
xor
inc
jns
adc
pop
xlat
mov
inc
xchg
sbb
sub
jg
test
call
mov
sbb
jecxz
shll
mov
je
xchg
mov
jbe
mov
fstps
xlat
fcomip
fld
sbb
mov
std
negb
loop
mov
ljmp
sti
fmull
out
hlt
sub
mov
mov
test
inc
lcall
mov
mov
dec
mov
cmc
stos
fnstenv
cmc
aaa
cmpsb
std
dec
mov
ret
mov
mov
add
jno
outsb
incl
rcll
jno
popa
fcompl
jbe
lds
xchg
out
pop
mov
in
int3
repnz
popa
sarb
ds
fists
push
dec
xchg
loop
cmpsl
jge
pop
stos
test
pop
daa
jno
lret
test
repnz
stos
pop
and
notl
mov
lret
jbe
fstps
pop
and
cli
cli
movsb
in
jo
cmpsl
fwait
inc
mov
jnp
frstor
jbe
sub
ficompl
repz
inc
sbbb
inc
mov
mov
mov
fcmovb
icebp
icebp
out
fnstcw
ret
ret
stc
in
inc
leave
jp
jno
adc
in
call
ret
fwait
xchg
aas
jo
mov
icebp
mov
inc
or
int
xchg
adc
dec
adc
add
adc
xor
push
adc
es
lods
dec
mov
shll
aad
xchg
icebp
pop
ret
nop
repnz
adc
jge
jb
ficoms
ja
jmp
pop
cld
imul
jecxz
or
push
xor
rcl
mov
sbb
push
int
push
inc
sub
aaa
push
push
inc
jns
mov
pop
sbb
adc
repnz
pop
pop
jnp
cld
lock
sbb
or
sbb
in
cvtps2pi
push
inc
nop
and
sar
xlat
and
xchg
cltd
icebp
leave
loop
jae
push
cmp
xor
aaa
inc
mov
pop
jmp
ret
xor
xlat
xor
daa
sbb
std
sbb
mov
int3
cmc
fisubrl
dec
cmpsl
jb
pop
mov
cmp
mulb
cltd
fistpll
push
rclb
push
fnstenv
pop
sub
out
insb
scas
sti
jmp
fcmovnbe
push
imul
loope
rclb
xor
xor
imul
adc
push
dec
es
loope
loop
fsubs
jo
inc
jb
stc
inc
je
push
dec
aaa
xchg
push
push
rcll
mov
xchg
push
mov
and
xchg
pop
es
lods
pop
fsubs
ret
fcoms
imull
pop
dec
push
inc
pand
icebp
roll
pop
leave
xlat
mov
push
ficoml
pop
je
popf
xchg
adc
add
test
and
cmovp
movsl
mov
push
xchg
int3
jecxz
push
xchg
out
mov
push
mov
iret
and
pop
mov
repz
test
adc
and
fsubrl
in
sub
fisubrl
fpatan
imul
jmp
insl
mov
icebp
xor
dec
push
popa
int
ret
adc
sub
sti
outsl
inc
ss
jnp
repnz
addr16
mov
xlat
int
fisttpl
mov
inc
lret
adc
rolb
roll
ret
mov
pop
push
clc
ficoml
mov
std
ja
out
and
push
xchg
push
xchg
mov
adc
jo
push
roll
push
jb
jne
icebp
lret
lret
lock
push
jb
inc
mov
loopne
out
stc
mov
into
stos
mov
push
ss
xor
aaa
in
pop
lahf
mov
xor
js
pop
cmc
sahf
ret
mov
fwait
std
hlt
or
loop
mov
add
or
popa
loope
mov
mov
push
mov
out
pop
lcall
jecxz
scas
leave
push
icebp
jl
jecxz
out
pop
sub
cld
inc
ss
mov
iret
daa
mov
out
dec
test
fs
push
das
pop
pop
adc
mov
pop
jne
push
lret
in
pop
fcmovnb
or
push
fistpl
xchg
add
push
scas
es
pop
arpl
into
inc
aad
pop
into
ss
push
das
es
pop
cltd
jae
mov
mov
adc
cmc
push
jg
ficomps
inc
fcoms
xor
rcll
cmp
jns
jbe
loopne
xchg
daa
cmp
hlt
pop
lods
sub
xlat
in
fistpll
mov
mov
es
sbb
mov
call
push
aaa
adc
inc
lds
and
flds
filds
stos
outsl
jmp
dec
inc
xor
or
int
imul
mov
lea
mov
les
mov
adc
clc
xor
rcr
leave
sbb
lahf
pop
jnp
xchg
adc
cmpsl
in
jecxz
dec
dec
icebp
sbb
sbb
idiv
inc
pop
call
xchg
inc
cmc
adc
jmp
mov
mov
cltd
pop
sbb
add
adc
push
push
xchg
out
mov
repnz
int3
fisttpl
jl
and
pop
test
add
pop
shl
cld
clc
hlt
std
or
pop
jo
clc
jg
repnz
jmp
xchg
push
popa
push
fsub
pop
xlat
ret
xchg
icebp
nop
ret
and
sbb
xchg
insl
dec
xchg
push
in
mov
jle
out
loop
xchg
sbb
flds
add
movsb
ret
fisubrs
scas
je
sti
cli
lds
dec
cld
lahf
aam
adc
mov
es
push
and
push
xchg
ret
sbb
pop
mov
pop
out
icebp
push
ret
rclb
xchg
into
ds
cmpsl
xlat
insl
fstl
sahf
jnp
sbb
pop
data16
iret
jmp
call
xor
rcrb
call
outsb
shll
dec
aas
mov
xchg
fisubrl
mov
fldl
pop
dec
cwtl
add
xchg
add
aad
cli
repnz
in
imul
stos
mov
int
outsl
adc
push
mov
aam
jae
push
jmp
jbe
lock
add
popf
inc
mov
iret
es
mov
rcrb
inc
test
stos
fbld
xchg
insb
add
cmpb
hlt
imul
popf
into
xchg
aas
outsb
jns
cli
xlat
lock
scas
fidivl
jnp
lret
mov
jb
pop
jmp
mov
or
lock
dec
fwait
lea
fiaddl
dec
popl
lcall
jo
icebp
js
call
push
lret
ret
cmp
int
push
add
add
test
push
xor
pop
out
add
xlat
adcl
xor
lret
call
rol
push
cmpl
and
inc
roll
xor
negl
fs
adc
mov
xchg
int
adc
rorl
in
and
xchg
or
das
sbb
scas
cwtd
cmp
mov
pop
movsl
lret
shl
loope
inc
fcmovu
rcl
adc
push
pop
fdivrp
lods
lret
ror
jmp
icebp
push
imul
sub
jno
and
jo
cltd
leave
sub
pop
inc
pop
aaa
mov
xlat
pusha
inc
js
es
adc
stc
jmp
stc
mov
pop
cwtl
dec
or
jge
repz
mov
pushf
loopne
or
ret
imul
mov
test
sub
fistpll
shrl
in
xchg
mov
jbe
push
inc
jmp
xchg
pop
inc
mov
fists
push
testl
call
lds
dec
loope
rcll
aad
sbb
test
div
xor
shr
mov
insw
shrb
sti
xlat
loope
idivl
loope
sub
inc
test
inc
out
fisubl
mov
in
or
lock
fstl
lret
adc
push
repnz
xlat
adc
data16
cmc
nop
or
dec
mov
fwait
push
inc
or
ret
lret
pop
push
mov
out
stos
jmp
sbb
insb
fbstp
jmp
xchg
fwait
testb
jl
mov
xchg
outsb
vmovaps
in
jecxz
lods
in
or
inc
cmp
mov
in
jb
push
pop
push
lret
push
mov
loop
popf
inc
lea
repz
xorl
ds
fdivr
sbb
mov
je
leave
push
pop
cmc
nop
dec
lock
repz
mov
pop
aad
out
icebp
cmp
pop
pop
mov
push
es
xor
push
pop
ljmp
rcrb
bnd
ret
imul
pop
inc
test
push
push
xor
push
lea
inc
push
repz
sbb
cmpsl
inc
fstpt
mov
sarl
mov
adc
and
fdivr
stos
inc
inc
daa
clc
inc
ret
mov
push
sbb
scas
notb
xor
nop
icebp
scas
dec
xchg
mov
lods
cmpsl
inc
sbb
xchg
aaa
jg
sbb
inc
ret
add
inc
fldt
dec
in
inc
mov
loope
xchg
inc
jge
test
icebp
dec
das
xlat
cmc
jge
leave
aad
xchg
out
xsha256
cmpsb
push
xor
in
aad
test
sbb
mov
xchg
ret
test
repz
frstor
movsb
inc
adc
mov
mov
jb
inc
std
icebp
bound
aaa
cmp
mov
daa
pop
xlat
cmc
fistpl
xchg
clc
xchg
les
cs
cmc
punpckhwd
jbe
movsl
das
jl
dec
sbb
inc
pop
mul
movsl
pop
inc
push
mov
popf
lcall
iret
inc
mov
es
push
repnz
stc
xor
subb
pop
rcrl
cmpsl
aam
xchg
sub
sub
sarb
fidivl
nop
sub
aam
js
out
sub
icebp
popa
cmp
ja
stos
cltd
cmp
jbe
js
and
mov
lods
pop
fxch
daa
mov
push
pop
loopne
cwtl
sahf
outsb
fsubs
jne
inc
mov
ficoml
jnp
sbb
fs
push
jnp
jp
jnp
cmp
js
sbbl
stos
xchg
push
pop
jge
js
scas
mov
sbb
sub
or
add
es
hlt
mov
xchg
cld
jno
enter
in
out
mov
addr16
push
adc
mov
loope
pop
mov
add
add
mov
and
lea
icebp
addr16
hlt
jae
or
addr16
mov
push
mov
mov
addr16
pcmpeqb
xchg
fisubrl
and
sbb
adc
add
mov
pop
mov
inc
push
lret
adc
sbb
sub
xchg
push
pop
jne
xchg
push
mov
pop
lret
int3
jb
add
xchg
pusha
int3
loop
cli
daa
inc
jb
in
xchg
out
sbb
push
leave
addl
inc
mov
jg
mov
push
cli
xchg
cltd
cli
fmuls
sbb
arpl
outsl
jb
xchg
dec
mov
iret
fldt
int3
imul
gs
jb
and
rclb
xchg
jb
or
dec
fwait
shrl
int
xor
es
mov
lods
jl
sbb
pop
pop
shl
test
call
add
and
scas
mov
mov
cli
hlt
jae
mov
dec
mov
jbe
mov
pop
dec
in
cmpsb
pusha
les
stc
cmp
sbb
ffree
pop
jmp
push
stc
mov
and
aam
xchg
inc
jnp,pn
add
push
shll
sbb
dec
ret
inc
gs
scas
cmp
enter
adcb
sub
aam
push
insl
jne
jmp
cmpsl
mov
mov
lret
negb
sbb
scas
in
cmp
push
jae
imul
lds
cmpsl
aas
mov
fs
es
mov
sub
aad
icebp
mov
inc
mov
aam
es
adc
outsl
inc
mov
adc
mov
repnz
das
pop
pop
jl
sarl
xlat
push
fwait
mov
xchg
mov
sbb
frstor
or
std
mov
sub
lods
leave
jmp
mov
sbb
xor
sub
xchg
movsl
icebp
mov
int
add
adc
daa
ret
jp
inc
xchg
inc
outsl
cs
mov
loop
jno
movl
jg
outsb
lcall
add
aad
pop
imul
ret
in
cvtdq2ps
test
es
mov
sbbl
pushf
adc
stos
push
push
js
push
xchg
jecxz
or
incb
adc
ret
ret
xchg
pop
es
add
cld
daa
in
add
jae
xchg
fisubrs
mov
jbe,pn
mov
jns
cmpsl
loopne
test
int3
test
xor
fcmovnu
loope
test
ljmp
inc
jae
out
les
xchg
xlat
xchg
dec
cli
imul
pop
fxtract
icebp
and
mov
inc
xlat
fucom
popf
fdivs
mov
leave
scas
clc
pop
xor
jmp
es
push
push
aad
clc
cmp
movsb
push
fbld
fisttps
jecxz
jne
sbb
ss
icebp
pop
out
push
lret
fcmove
imul
out
in
cld
xchg
cwtl
push
loop
push
pushl
or
test
mov
and
lods
out
ret
dec
mov
rcrb
mov
sbb
rcll
out
mov
mov
inc
loope
test
xlat
or
aam
stos
pop
pop
test
fwait
scas
pop
aad
mov
mov
roll
add
or
mov
insl
sahf
nop
das
ret
out
push
loop
repz
hlt
ret
push
push
arpl
fcomps
ffreep
pop
in
test
jmp
cmpsl
pop
xchg
idivl
inc
xor
orl
or
mov
sbb
clc
inc
pusha
and
je
loopne
mov
or
xchg
and
sbb
inc
lret
fldenv
rclb
xchg
mov
test
icebp
insb
or
iret
push
xchg
sbb
je,pn
inc
clc
fucomi
mov
divl
out
pop
outsl
inc
dec
fwait
dec
mov
push
imul
cmp
lret
sti
rclb
xor
sub
je
frstor
mov
and
clc
bnd
mov
jmp
sbb
pop
rcr
xlat
movmskps
es
sbb
adcl
jns
fcmovnb
pop
pop
jnp
outsb
jb
lock
stc
repnz
push
gs
inc
sahf
into
shrb
nop
mov
mov
sub
into
ret
jg
out
insl
sbb
pop
xchg
rclb
jb
cmp
lds
jbe
mov
and
lock
jae
icebp
mov
hlt
ficoml
pop
lea
mov
addr16
lds
xchg
aaa
jp
inc
mov
repz
fwait
cmpl
into
mov
cmpsl
hlt
push
pop
sub
stc
mov
inc
pushl
icebp
mov
popa
daa
inc
test
pop
call
adc
lods
xchg
xchg
mulb
stos
imul
mov
cmp
or
sti
adc
push
mov
lcall
mov
mov
lea
xchg
fimull
xchg
fidivrl
and
push
push
inc
mov
mov
xchg
stos
push
out
or
cmpl
fistps
movsb
jns
and
incl
push
popa
pop
xchg
jl
int3
repz
xor
sti
aad
xor
sarb
mov
ret
mov
add
ret
mov
push
ret
daa
movsb
sarb
pop
lock
xor
and
jo
repnz
inc
jge
xchg
and
ja
jae
movq
pop
add
mov
cmp
arpl
pop
cmc
jne
rclb
or
inc
scas
adc
scas
inc
aam
fstps
sahf
clc
arpl
mov
in
gs
lret
jo
or
push
or
fildl
xchg
push
inc
into
inc
test
and
inc
divps
and
addr16
mov
mov
or
mov
lea
mov
repnz
mov
adc
sub
adc
lret
fstpt
lahf
fwait
js
mov
cmpsl
or
mov
mov
repz
lahf
xchg
jb
xchg
cltd
fildl
add
jmp
scas
lds
leave
xlat
scas
push
std
repnz
cmpsl
jo
mov
movsb
mov
mov
enter
add
dec
mov
mov
insb
push
pop
push
and
pop
mov
outsb
sbb
jl
movsl
out
lods
sbb
jns
dec
dec
imul
outsl
mov
push
jo
push
cmp
pusha
js
ret
ret
mov
pop
push
lock
in
xor
xchg
imul
xor
mov
cmp
pop
dec
ljmp
push
dec
imul
stos
sbb
repnz
mov
mov
and
int
or
xchg
inc
push
cmpsl
jg
push
lret
nop
pop
insb
or
and
insb
movsl
push
push
inc
pusha
mov
stos
mov
lods
loop
push
repnz
ljmp
aad
divb
mov
or
mov
and
sub
jo
aam
outsb
inc
aad
dec
fisubl
fildl
or
pop
testb
sbb
stc
cmp
push
mov
xchg
sbb
pop
xlat
xor
aad
jmp
call
or
mov
push
and
js
shll
test
mov
push
icebp
jp
ja
bound
mov
push
push
jae
je
iret
cmpsl
dec
jmp
hlt
in
mov
mov
sbb
xor
xchg
dec
in
jmp
mov
ljmp
mov
iret
push
lods
notl
inc
hlt
stos
push
push
cmp
loope
icebp
sbb
push
rcll
insl
pop
mov
addr16
xrelease
pop
ret
pop
xchg
lock
imul
sti
call
icebp
mov
je
xchg
rcrb
push
out
rolb
les
sub
movsl
inc
icebp
fldenv
movb
push
push
repnz
loopne
jmp
jmp
fcmovnb
fwait
jp
lahf
outsl
repz
push
push
stc
add
and
out
jecxz
push
ficompl
aam
lock
fprem1
arpl
inc
enter
push
leave
fcmovnb
clc
jne
push
test
out
xchg
in
repz
aad
mov
mov
jns
mov
shll
sbb
pop
push
jno
add
xchg
mov
mov
adc
stc
push
jne
loope
push
insb
divps
xchg
dec
push
bound
bound
push
fsqrt
popa
arpl
push
aam
ljmp
aad
push
int3
jp
ja
out
in
pop
cli
fcmovnu
cmp
pop
decb
push
call
test
and
add
push
loope
dec
fsts
sbb
aam
loopnew
gs
aam
jae
outsl
in
sahf
fimuls
pop
push
fisubrl
call
jno
jne
rorl
in
shrb
mov
jo
std
pushf
in
jae
out
mov
outsl
mov
popa
loope
push
in
pop
addl
or
in
xlat
pop
shll
adcl
sub
jp
nop
sub
jecxz
xchg
xchg
movsl
adc
push
movsl
ret
mov
aam
mov
pop
ret
push
lock
mov
pop
push
ljmp
data16
adc
fidivl
inc
loopne
cli
fistl
jae
iret
in
pop
adc
jmp
push
lock
icebp
stc
push
adc
cmpsb
in
inc
shl
pop
dec
inc
push
stc
mov
sti
dec
fsts
in
sub
fnsave
shlb
fildl
repnz
sbb
repnz
js
das
dec
dec
loope
jne
loop
xchg
into
outsl
push
inc
jno
loop
fistl
jae
sti
cmp
adc
out
pop
leave
fsub
sbb
adc
out
cmp
icebp
in
in
fst
clc
xchg
cmc
dec
sti
test
lahf
out
cmp
aad
jle
push
icebp
pop
push
repnz
jno
fcmovbe
gs
insl
xorl
inc
mov
dec
mov
dec
pop
inc
out
arpl
in
stc
in
shll
stos
pop
add
in
mov
loope
inc
mov
stc
shlb
arpl
loop
jno
cmp
loopne
xlat
mov
push
mov
push
dec
cli
test
pusha
jmp
add
push
push
jbe
insl
ja
in
int3
inc
push
loop
in
mov
adc
rcrl
test
loope
sub
xor
xchg
xlat
pushf
lock
pop
mov
sti
mov
fcomps
pop
icebp
scas
ljmp
xlat
mov
xchg
push
mov
insb
mov
mov
rorb
jne
and
jecxz
sti
pop
xor
inc
adc
push
imul
loopne
mov
ja
adc
xlat
jl
push
push
jne
push
xchg
or
push
xchg
repnz
jb
xchg
jb
sub
sbb
aad
jnp
cwtl
push
lds
jge
scas
outsl
inc
ja
pop
mov
sti
push
and
aam
lahf
pop
push
xchg
jns
mov
mov
lock
cmp
sbb
aaa
jno
test
xlat
ljmp
mov
aam
aad
fldl
movb
fwait
test
subb
jne
xchg
push
fidivl
les
mov
rcl
test
inc
push
xchg
and
adc
dec
push
fistpl
enter
int
add
dec
imul
pop
jmp
jecxz
std
fdivrl
or
pop
mov
out
xchg
jb
push
ret
icebp
push
ficoml
pop
fcmovb
rorl
sbb
jecxz
gs
mov
aaa
and
nop
mov
add
mov
push
jp
fstpl
xlat
adc
xchg
lock
pop
push
xchg
jne
pop
cmpsb
inc
mov
repnz
adc
mov
mov
mov
cmp
leave
loop
ret
mov
mov
mov
pop
pop
jmp
xor
mov
lods
push
xlat
mov
int
dec
mov
push
lahf
xor
mov
push
jae
out
mov
push
shl
mov
aas
jmp
out
mov
int3
pop
mov
pop
mov
pop
dec
pop
mov
insl
pop
xchg
or
xlat
cltd
jle
adc
jg
data16
inc
mov
rclb
jbe
add
mov
lcall
int3
jae
loop
mov
out
stos
je
cli
xor
push
push
shlb
outsb
add
sub
xor
and
cmp
je
mov
inc
adc
xlat
cli
jne
add
xlat
pushl
pop
mov
arpl
jmp
xchg
xor
xchg
mov
xchg
outsb
inc
out
add
or
fistl
jbe
stc
jmp
mov
rcll
inc
clc
push
sbb
push
push
jnp
xor
out
dec
mov
mov
fwait
imul
mov
leave
push
sbb
xor
cld
xlat
aaa
adc
jb
mov
and
fildl
jg
pop
mov
push
xchg
aad
push
mov
inc
sti
pop
xorl
xlat
mov
flds
inc
mov
hlt
ja
mov
lcall
addr16
and
loope
stos
sbb
pusha
fcom
pop
pop
xor
xchg
pop
iret
pop
ljmp
dec
bound
lret
jmp
mov
lds
imull
pop
ja
lds
and
ret
daa
pop
fdivrp
popf
or
mov
imul
pop
jg
aad
leave
cltd
pop
pop
jecxz
add
fisttpll
cwtl
fwait
lea
pop
sahf
out
imul
in
enter
jno
jmp
xor
cmpsl
sub
in
loop
xchg
mov
add
push
sti
addl
jl
mov
nop
mov
aam
mov
jbe
jle
or
push
jmp
cmc
xchg
sti
mov
call
pop
notl
xlat
jmp
jp
cmp
sbb
hlt
fstpl
mov
aas
and
cltd
jne
rcr
idiv
push
xorl
add
das
sub
shl
mov
cld
jmp
in
fnstcw
and
pop
push
sahf
pop
into
aam
bound
arpl
mov
xchg
iret
cltd
xchg
mov
sbbl
enter
cmpsl
in
loop
repz
mov
push
cmp
push
jbe
cmpl
sub
mov
xchg
push
add
sbb
repz
push
add
popf
push
aad
inc
mov
or
and
sub
adc
lcall
lods
mov
mov
pushf
mov
ljmp
test
xchg
sbb
push
mov
inc
fldenv
aad
movsb
push
bound
out
inc
fbstp
inc
pop
push
cwtl
sti
test
mov
sbb
rclb
rcrb
popa
scas
dec
repz
andl
mov
shll
mov
cmc
pop
jecxz
loop
pop
int
je
mov
pusha
push
mov
fistpl
in
sti
push
stc
rcl
mov
out
test
dec
sub
into
cs
mov
mov
cli
push
inc
push
pop
mov
divb
mov
xchg
inc
mov
lock
icebp
stc
mov
repnz
ret
test
mov
xor
cmpsb
mov
movsl
cmpsl
push
lahf
and
xchg
stos
push
sar
fcmovnu
stos
mov
lret
ljmp
shl
inc
push
add
shll
mov
mov
pop
xchg
cmp
mov
nop
push
cmpsl
and
jae
iret
addr16
mov
ret
mov
lods
sbb
bound
sbb
out
lods
adc
imul
sub
sub
inc
mov
mov
rolb
push
leave
in
repz
add
dec
pusha
pop
popa
jmp
or
lret
mov
dec
lret
sbb
stos
lahf
inc
jb
aaa
movsl
data16
lock
lds
push
inc
lods
fistpll
fs
jae
js
push
je
fisubrl
por
aad
clc
lcall
cmpsl
cmp
ja
vpsllq
push
mov
nop
jae
popa
lock
imul
int3
xchg
jp
fcomps
loopne
push
nop
fcmovb
rcl
inc
add
add
in
fcmovbe
fstps
je
cmp
pushf
jecxz
mov
pop
stc
ja
insl
add
push
lcall
adcl
sub
out
stc
imull
jb
repnz
push
dec
sbb
outsb
aad
mov
fidivrs
dec
clc
push
pop
aam
or
lret
out
je
loopne
mov
cmp
push
xlat
jne
ljmp
repnz
mov
fcomps
orb
push
ret
add
lds
jbe
inc
adc
outsl
pop
pop
cmp
mov
nop
cmpsb
or
jnp
test
push
int3
idivb
inc
imul
ficoml
loop
jo
jle
jmp
std
fcmovne
jb
es
leave
mov
cmp
ds
cmpsl
mov
or
icebp
push
pop
mov
adcl
mov
or
mov
mov
xor
pop
pop
negl
icebp
loopne
repz
shll
fstps
push
inc
ret
dec
gs
push
je
fildll
sti
rcrb
xor
push
cltd
fwait
mov
sbb
inc
ret
lahf
mov
ret
xor
and
test
cltd
inc
push
jae
stos
test
lds
sub
adc
dec
mov
push
scas
pusha
push
lahf
jge
mov
shlb
dec
xor
push
xchg
loope
vrsqrtps
dec
pop
lret
pop
xchg
dec
dec
iret
pop
test
stc
inc
in
aas
xchg
mov
mov
jmp
rcrb
cltd
push
dec
filds
xlat
xchg
iret
std
repz
mov
test
es
xlat
out
aad
or
dec
jnp
or
mov
fnstsw
ret
std
in
pop
mov
mov
mov
ret
fwait
mov
mov
cmp
push
fisttps
or
out
push
fnstenv
xchg
fistpll
ffree
iret
cmp
xlat
mov
ret
decl
adc
xchg
pop
iret
mov
xchg
mov
test
fldt
test
xlat
mov
stos
xchg
mov
adc
filds
xor
mov
mov
ret
roll
add
mov
dec
pop
fistl
or
xchg
dec
pop
scas
psraw
cmp
sbb
rorb
loopne
inc
fstpt
iret
push
in
push
jecxz
lret
inc
sub
cmc
not
rcll
pushl
bound
imul
mov
jmp
dec
and
rcrl
lahf
lock
cmpsl
iret
jg
push
in
mov
dec
icebp
addr16
fwait
aas
dec
xlat
dec
popf
push
mov
leave
sub
mov
xchg
push
sar
out
push
ret
dec
xchg
fstl
popf
xchg
pop
rcll
xchg
rcrl
xlat
mov
mov
insl
mov
pop
ja
jbe
stos
mov
dec
bound
test
cmp
lret
call
ret
sub
cmp
ss
jae
xor
int
mov
jb
cltd
xlat
out
aaa
push
mov
out
scas
lods
mov
icebp
mov
push
lods
or
add
xlat
dec
xor
data16
sti
into
hlt
xchg
clc
jmp
mov
stos
adc
ror
xlat
jle
ja
ja
cltd
inc
or
mov
pop
pop
out
pop
out
add
cld
dec
jmp
shl
ljmp
clc
sub
mov
cmp
mov
test
aad
stos
xor
dec
pop
mov
gs
add
sarl
add
ret
out
aaa
cli
out
in
pop
xchg
es
add
xor
jbe
sbb
push
mov
add
lret
imul
add
add
jno
negb
into
inc
pushf
hlt
mov
ret
xchg
cmp
mov
andb
jmp
xorl
pop
inc
cmpsl
pop
imull
fdivrs
ffreep
stos
push
sub
sti
push
fiaddl
les
stos
fistps
sbb
sbb
lahf
pop
int
inc
jno
mov
repnz
jne
cmp
jmp
jo
inc
mov
jne
sarb
imull
pop
jg
out
sub
repz
iret
push
sub
rcrb
adc
pop
or
cli
aad
fwait
mov
mov
data16
lds
push
sub
por
mov
mov
repz
sti
push
sub
sti
and
shll
out
or
and
nop
jno
push
mov
divl
inc
and
je
popa
push
jge
mov
ret
clc
rcrb
jno
in
inc
or
jp
mov
jg
scas
mov
push
xchg
testl
aam
lret
add
ficoml
movsl
pop
mov
xlat
pop
imull
xor
push
stos
pop
stos
xchg
sbb
inc
xchg
xchg
cld
stc
mov
pop
leave
arpl
pop
imull
lds
pop
push
mov
cmp
stos
ret
les
stos
inc
mov
fndisi(8087
jne
call
mov
sahf
jb
hlt
lcall
adc
pop
imull
inc
lock
mov
dec
iret
je
inc
aas
lret
xor
or
jns
lea
pop
out
dec
jge
insl
popf
mov
pop
notl
sub
int
rcll
mov
cmp
cmpsl
cltd
mov
mov
pop
lods
int3
fwait
data16
xchg
in
dec
mov
push
stc
aas
imul
idivl
repnz
push
sarl
lea
iret
mov
dec
jnp
jnp
in
in
cmp
test
xchg
leave
jmp
jbe
pop
cwtl
dec
cmp
mov
jns
xchg
int
test
js
mov
mov
mov
dec
push
inc
pop
mov
and
out
iret
mov
ret
inc
bnd
cmpsl
imul
leave
int
je
mov
xor
xchg
out
pop
xor
sarl
divl
mov
shrl
pop
push
rcr
push
cmpl
sar
inc
icebp
hlt
popf
repz
daa
fadd
int
je
mov
popa
hlt
ljmp
dec
jmp
dec
xchg
cltd
jb
add
cmc
int3
or
mov
or
push
dec
jg
loop
out
sar
rcl
icebp
in
divl
lds
pop
sbb
xchg
movsl
push
into
jbe
stos
xor
push
jg
mov
cmp
inc
dec
xchg
cli
cmp
add
icebp
in
fucomp
xchg
or
loopne
inc
icebp
test
xor
jmp
jmp
xchg
xlat
mov
push
ljmp
ret
mov
cmpsl
adc
xchg
ljmp
cmp
pop
xlat
iret
inc
cmp
loop
mov
pop
inc
lahf
ret
aam
div
js
maxps
and
mov
mov
xchg
jbe
mov
jb
pop
push
out
lods
icebp
xchg
fwait
sarl
mov
dec
rcll
xchg
imul
jne
mov
imul
mov
push
scas
test
popa
fucomip
fidivs
arpl
adc
fisubrs
mov
fdiv
lods
adc
xchg
sub
dec
adc
xor
xchg
xlat
pop
push
pop
mov
mov
ret
aam
fstpl
dec
xlat
pop
push
ret
xchg
iret
jp
shl
sarl
cmp
ja
insb
mov
ret
jae
xlat
push
add
aaa
push
stos
into
aad
scas
icebp
and
inc
dec
mov
icebp
fsubr
pop
testb
vmwrite
cmpsl
cld
adc
mov
fisttpl
jl
inc
fnstenv
sbb
inc
mov
dec
mov
mov
mov
push
fistpl
shl
rcl
adc
push
rcl
xlat
push
fistpl
push
repz
adc
rcll
pop
fcmovnb
ret
inc
repz
out
adc
sarl
mov
lods
lahf
lahf
aaa
cli
jnp
idiv
jbe
rorl
lret
arpl
xor
lcall
in
jno
pop
adc
xor
dec
aad
fcompl
loopne
pop
mov
sbb
daa
cmpsb
jmp
icebp
adc
lods
or
repz
xlat
xor
ljmp
lret
push
mov
cmpsl
mov
or
or
ret
icebp
or
pop
daa
dec
or
mov
xor
sub
jp
mov
cmp
movsl
fldcw
jae
jle
fildl
ljmp
mov
repz
adc
xlat
imul
shlb
xor
mov
daa
sub
stos
mov
mov
test
sbb
das
jl
repz
test
out
jmp
shl
lds
negb
xchg
test
mov
adc
mov
pop
lds
fwait
popf
push
clc
js
xor
notl
mov
adc
jmp
dec
push
push
push
push
int
jb
mov
shrb
push
imul
dec
xchg
xchg
sar
or
ss
clc
jnp
push
xchg
addl
jae
mov
loope
test
and
add
shrl
lret
jae
int
repz
cli
cld
bnd
fcomi
add
inc
mov
lock
xchg
mov
inc
scas
and
adc
aam
fcmovbe
aaa
rorl
insb
xlat
fwait
jg
in
cld
lods
cmc
imul
ret
mov
push
push
jo
arpl
pop
pop
jge
sti
xchg
lea
hlt
fildl
das
cmpsl
adc
mov
insl
mov
aas
mov
test
aaa
rol
mov
add
add
test
addl
mov
push
adc
clc
iret
ds
out
pop
outsb
jns
mov
mov
pop
movsb
cmp
mov
lahf
daa
cmpsl
inc
pop
fists
jge
or
xchg
mov
aaa
data16
imul
ret
mov
ret
add
jmp
lds
push
aas
sub
sarb
ret
mov
mov
or
sbb
xchg
ds
adc
add
outsb
scas
xchg
movsl
pop
jmp
insl
mov
sub
add
orl
lds
pop
xchg
xchg
popf
popa
mov
sub
xchg
loop
xchg
rcrb
dec
push
xor
rcll
mov
sub
icebp
dec
es
push
pop
ret
lret
jle
xchg
pop
push
adc
sub
push
movsb
xchg
push
mov
fsts
ficompl
dec
pop
out
out
pusha
adc
loope
cltd
xlat
lahf
orl
sbb
lret
repz
adc
or
inc
cmpsl
inc
mov
add
push
pop
inc
movsl
icebp
iret
cmpsl
shll
xlat
mov
aad
cmpsl
dec
cmp
pop
inc
xor
dec
cvtdq2ps
jl
or
pop
or
xchg
ret
cmpsl
ret
push
jle
push
adc
into
sbb
lds
fst
xchg
ret
in
addr16
addr16
inc
ljmp
dec
lret
inc
ret
fisttpll
scas
dec
orb
jnp
rcr
cmpsl
mov
jbe
jmp
shr
bnd
sar
mov
mov
pop
push
cmp
shll
leave
loope
movsl
pop
jecxz
mov
adc
incl
cmpl
mov
imul
xlat
or
cld
add
or
test
fs
outsb
mov
xor
sub
fisubl
mov
and
ffreep
cld
shlb
test
push
lock
mov
and
push
roll
push
ja
aaa
lret
push
xchg
mov
push
cmp
xor
push
xchg
enter
out
pushl
dec
pop
jno
mov
jb
sub
pop
jmp
add
je
cmpsl
jg
pop
ss
mov
addr16
push
xor
cwtl
inc
sub
in
por
ds
mov
or
xchg
mov
rclb
cmpsb
pop
in
fsts
ret
jns
sbb
fnstcw
subl
icebp
push
testl
mov
int
mov
out
sbb
mov
xor
xor
ds
xchg
daa
xlat
into
sahf
mov
rcr
cli
xor
in
orl
pop
push
cmpsl
fisttps
add
cmp
popa
mov
cmp
jp
jnp
lret
test
or
xor
inc
rcl
aam
mov
rclb
out
icebp
cmp
lds
in
jmp
loope
push
pop
rorb
shrb
dec
jb
inc
std
rcll
sub
or
inc
push
sahf
icebp
rcr
add
inc
or
xchg
cmp
pop
stos
inc
lods
or
push
xlat
jns
mov
icebp
cld
dec
cltd
push
hlt
mov
fisubl
inc
aas
mov
cmpsb
and
mov
popa
cwtl
popf
ja
lock
dec
imul
push
stc
jle
mov
outsb
frstor
sbb
repz
repnz
mov
lret
fistpl
inc
nop
and
push
stos
sub
push
or
stos
push
insb
and
pop
dec
cwtl
out
decb
fidivrl
das
inc
js
repz
lcall
shl
stc
or
jbe
in
push
jmp
rol
sti
cld
sub
shlb
add
iret
and
in
dec
cmp
ret
fwait
dec
cmc
std
adc
int
shr
mov
mov
movsb
mov
fstl
rcll
jecxz
or
jb
mov
push
mov
pop
ret
das
out
aaa
mov
shll
stos
pushl
pop
fdivl
std
cmpsl
stos
aas
out
and
mov
mov
sub
pop
mov
xchg
jle
sbb
push
xor
push
addr16
je
ret
test
ja
cwtl
xor
push
or
insl
fisttps
push
nop
ja
xchg
rol
es
jae
rorb
aad
xchg
sbb
jmp
cmpsb
mov
lods
repnz
fldcw
dec
scas
call
or
push
cmpsl
xor
sub
push
pop
sbb
iret
mov
es
iret
icebp
pop
iret
rorl
xchg
inc
insb
cmp
xor
xchg
sbbl
fisttpl
pop
push
jge
stc
inc
mov
adc
out
mov
mov
push
lcall
aam
xchg
mov
lock
daa
or
inc
xchg
jno
cmp
fistpl
cmp
cmp
out
push
daa
or
mov
sbb
pushl
daa
pop
xchg
sbb
aam
fsts
sub
fistl
nop
lock
mov
mov
jg
aad
adc
inc
int
adc
sahf
sub
loope
insb
iret
or
sub
sub
rorl
inc
mov
fwait
push
stos
fs
jne
mov
push
cmp
nop
mov
cwtl
mov
adc
mov
mov
cmpsl
test
ret
pop
xchg
jecxz
sub
lcall
mov
aad
mov
das
roll
repnz
xchg
xor
imul
fstl
out
scas
push
in
repz
pop
mov
test
lret
mov
pop
iret
xchg
xchg
pop
cmp
lcall
flds
xchg
push
je
sub
stc
roll
pop
daa
out
mov
scas
adc
nop
or
cli
loope
fldenv
mov
jo
pop
sub
push
mov
xchg
insb
mov
fwait
mov
jns
jmp
je
jg
and
cmc
jmp
mov
cld
inc
outsl
stos
jnp
aad
adc
dec
add
stos
jmp
mov
fwait
xchg
test
pop
mov
test
je
shll
cmp
lret
push
or
mov
imul
pop
jno
lock
pop
or
in
mov
xchg
sti
rsqrtps
push
pop
adc
ret
scas
je
clc
cli
xor
ret
divl
fisttps
xchg
mov
lea
xchg
pusha
es
icebp
xlat
jns
jp
cli
ret
ja
dec
out
leave
stos
dec
inc
pusha
roll
mov
and
std
pop
fmuls
cli
ljmp
add
lds
inc
shll
push
icebp
sub
inc
sbb
int3
and
scas
psubsw
push
mov
xchg
rcll
push
iret
sub
sbb
mov
lcall
adc
jns
ja
inc
fdivr
insb
stos
mov
cmp
roll
ja
inc
adc
lea
orl
int
adc
movsl
sbb
popa
sarl
incl
test
int3
clc
shl
ja
jno
hlt
jae
es
shll
cmp
jmp
shll
adc
ja
and
in
outsb
frstor
pushf
cwtl
inc
pusha
and
sub
fistps
ficoml
sti
aad
fwait
sub
sub
mov
sub
rcrb
test
sbb
ret
xchg
outsb
int
jmp
ror
out
popf
les
fcom
cmp
fsubs
movsb
mov
in
sbb
and
add
out
and
loope
fisubrs
inc
push
dec
out
les
movsl
dec
sbb
jb
sub
notb
jle
nop
iret
add
mov
pop
es
add
xor
cmp
movsb
aad
loop
rcrb
insb
nop
js,pn
lea
imul
jne
ja
jb
pop
jp
xor
push
stc
push
fiadds
test
scas
ljmp
dec
frstor
jae
dec
call
mov
mov
shll
imul
scas
outsl
sarb
push
mov
cwtl
push
and
or
inc
mov
push
mov
inc
andl
fstps
mov
pop
lods
lret
cmp
jg
add
daa
mov
and
cli
les
lods
sbb
ret
sub
shll
mov
inc
andl
xchg
and
adc
fsubrl
mov
cs
push
rcrl
fldenv
sub
add
pop
ljmp
or
fists
xchg
aam
rcll
cmp
cmpsl
out
jle
in
sarb
xlat
lahf
popa
mov
popa
jne
test
sbb
xchg
test
mov
pop
lahf
popa
add
jo
sbb
ficomps
ret
stc
cltd
lcall
sahf
icebp
mov
fists
jnp
ds
sub
pop
fistps
cmp
ja
pop
call
addl
loopne
mov
add
arpl
mov
mov
cld
sbb
aad
test
mov
fdivl
pop
cmp
jmp
stos
clc
jbe
shrl
jno
testb
sub
mov
inc
pop
daa
adc
dec
xor
shlb
pop
jp
in
leave
and
xor
rcrb
xchg
and
cmpsl
je
xchg
xchg
cmc
sbb
iret
xchg
jmp
arpl
add
fisttpl
cmpsb
stc
jae
push
mov
fstps
or
iret
dec
jge
or
in
mov
pop
nop
inc
cmp
mov
iret
loope
fwait
jmp
xchg
test
xchg
fstpl
mov
rorl
cli
xor
adc
adc
add
adc
mov
jb
dec
int
adc
imul
push
xchg
add
push
xor
lret
mov
sti
test
push
sbb
lcall
mov
xor
outsl
ljmp
mov
fsubs
popf
in
faddl
loope
imul
out
jl
fcomp
sbb
repnz
xor
repnz
mov
mov
popf
and
push
adc
adc
inc
clc
popa
dec
xchg
or
xchg
inc
orl
repz
adc
mov
daa
pop
jecxz
lret
push
scas
leave
roll
div
mov
mov
mov
jmp
push
mov
test
sahf
les
sar
repz
add
in
xchg
and
in
leave
cmpsl
roll
jle
fstps
std
mov
push
push
ss
repz
push
xchg
ljmp
ss
std
mov
and
aad
repz
mov
cmpsl
mov
ljmp
add
xchg
pop
pop
inc
sbb
sub
loop
mov
pop
inc
imul
fwait
xchg
add
pop
lds
lock
dec
mov
lds
xor
iret
xor
sub
lds
into
mov
loop
es
out
mov
inc
fs
mov
ret
adc
xchg
pop
xor
inc
das
nop
cmp
std
imul
dec
dec
jp
icebp
mov
mov
dec
inc
aam
fbld
clc
cmp
xchg
aad
mov
mov
mov
sbb
or
test
popl
nop
inc
pop
pop
pop
sub
jno
cwtl
sbb
mov
loopne
push
cli
and
jp
mov
rol
push
inc
arpl
bound
inc
jle
mov
cmpsl
jp
arpl
fcom
pop
xchg
ret
lret
icebp
icebp
imul
int3
jae
into
bound
push
inc
imul
fwait
mov
lret
stos
and
repz
lods
mov
mov
ret
les
popf
fs
fldt
lcall
or
add
and
inc
xor
es
imul
lock
leave
xor
mov
xchg
dec
lret
jle
push
daa
xor
add
xor
jmp
pop
frstor
movsl
cld
fidivs
push
mov
in
inc
fistpl
lock
ret
das
in
mov
xor
mov
mov
pop
pushf
leave
adc
aad
cli
sub
leave
push
neg
pop
mov
clc
push
bound
lods
push
movsl
repnz
add
cmpsl
dec
cmpsl
and
xchg
scas
xchg
or
in
lcall
stos
xor
and
xor
push
jmp
push
push
jbe
xlat
sarb
popa
ljmp
int
xchg
mov
sbb
out
mov
mov
mov
mov
sub
push
or
ds
shll
mov
notb
or
mov
fsts
or
lret
aaa
xchg
jbe
xchg
testl
cmc
sbb
mov
jp
scas
repz
div
cmp
lds
shrl
ja
mov
push
sar
out
filds
lods
inc
and
xchg
mov
stc
mov
outsb
mov
rclb
outsb
lcall
mov
inc
aaa
pop
mov
push
sbb
add
xchg
jne
pushf
scas
fidivs
xchg
lock
or
rcl
add
push
ds
outsl
jge
shrb
inc
repnz
lods
scas
fcmovbe
inc
cwtl
push
add
dec
inc
test
push
arpl
pop
cmpsl
and
or
ret
std
jmp
push
jne
push
shr
xor
xchg
out
inc
es
subl
fsubs
pop
stc
push
icebp
mov
add
fdivrs
xacquire
pushf
inc
cmp
lods
repnz
lods
push
rorl
xchg
test
stos
out
xorb
xlat
jmp
mov
cmp
xchg
dec
add
jecxz
popa
in
xchg
test
pop
push
insl
ret
pop
stos
stos
pop
cmc
adc
iret
lea
jbe
xchg
sbb
inc
add
fwait
mov
inc
clc
fs
movsb
hlt
repz
bound
fs
repnz
lcall
push
push
hlt
xor
mov
inc
out
mov
or
repnz
lods
shrb
sti
aad
sti
neg
fistl
loop
ficoml
pop
xor
mov
lret
sbb
mov
out
ss
mov
or
out
sbb
iret
aad
sbb
test
notb
push
mov
sub
int
xchg
movsl
outsb
ret
or
push
pop
push
xchg
scas
jno
imul
inc
aaa
inc
ja
stos
sbbb
jle
movsl
mov
jg
aaa
ds
aas
lahf
dec
jo
out
xor
cmpl
mov
cmpsl
or
mov
outsl
mov
pop
jns
adcl
repnz
out
inc
insl
call
frstor
insl
popa
jecxz
push
xchg
js
int
push
test
jae
mov
ss
push
inc
push
fdivl
sbb
or
inc
das
inc
jg
lock
cld
movsl
addr16
push
add
negl
xchg
pop
jecxz
mov
dec
test
inc
shr
xor
outsb
xlat
notl
cmpsb
dec
insl
cld
mov
push
push
cmpsl
das
loop
add
jno
mov
sbb
jle
adc
mov
jmp
adc
fldcw
xor
mov
wrmsr
lret
mov
dec
adc
bound
or
and
adc
sti
jmp
jmp
rcl
adc
repz
sti
js
or
fimull
stos
push
mov
ret
xor
jb
dec
movsl
cli
adc
xchg
pop
icebp
mov
pop
mov
insl
repz
mov
jecxz
and
mov
xchg
adc
mov
das
mov
stos
add
add
add
lcall
dec
mov
push
in
sbb
adc
push
sarl
ret
lods
jle
fsubrl
jl
lods
out
nop
adc
mov
lds
or
ffree
mov
add
push
shrb
iret
shll
inc
pusha
lahf
pmaddwd
sti
std
cmp
lret
dec
sub
push
fidivrl
adc
sbb
and
cmc
daa
jmp
test
dec
loopne
in
andl
movsl
adc
push
movsl
jbe
ds
add
jb
pushf
mov
andl
jns
test
mov
sarl
test
mov
and
in
mov
or
ja
pop
mov
sbb
fmul
inc
cmpsl
add
mov
sbb
fdivs
stos
test
inc
mov
addr16
sbb
lret
pop
icebp
cmpsl
icebp
cli
xchg
lods
mov
cltd
mov
repz
add
or
cmpsl
cmp
lcall
jo
loop
pushf
lea
jbe
and
daa
dec
sbb
add
js
push
push
mov
pop
jne
sbb
add
enter
xlat
add
filds
lahf
pusha
pop
mov
sbb
cmp
movsl
jle
sub
ret
loope
inc
mov
fdivl
push
sbb
mov
inc
mov
int
imul
std
aad
push
fidivrl
sub
jp
inc
sbb
movsl
inc
cmp
cmp
shrl
iret
xchg
mov
fstl
cmpl
mov
fsts
adc
roll
push
cmp
imul
xchg
test
jmp
sbb
out
mov
xchg
inc
cmp
ljmp
mov
and
sbb
lcall
mov
dec
or
ret
dec
pop
dec
cmc
mov
repnz
push
mov
nop
in
lds
out
repnz
aaa
fdivrl
sbb
cmc
cwtl
ja
cwtl
push
cmp
fcmovne
cwtl
andb
mov
dec
in
mov
cltd
sub
xchg
roll
jbe
inc
fucomi
cmp
mov
inc
shrl
fldl
xlat
mov
mov
inc
shll
mov
mov
cmp
push
in
mov
or
push
aad
mov
mov
shlb
in
dec
jo
ss
mov
mov
or
cmc
outsl
jmp
xchg
cmp
negl
inc
xor
mov
bound
imul
sbbl
enter
rcrl
or
mov
jl
xor
cwtl
or
jno
sbb
inc
sbb
in
mov
jnp
ret
cwtl
jnp
push
and
pushl
mov
jmp
std
or
repnz
cmp
xchg
push
pop
out
mov
or
lahf
addl
lods
jbe
sbb
mov
aas
lcall
xchg
inc
jmp
xchg
dec
xor
jle
mov
scas
xor
push
inc
mov
jl
push
imul
dec
xchg
scas
add
mov
movq
stos
mov
add
cwtl
sarb
cmp
jg
in
xchg
adc
leave
cmc
or
mov
lea
lahf
cmc
pop
shrl
scas
int
push
rclb
andl
pop
pop
rclb
lods
loopne
push
aad
push
je
fimull
xchg
imul
nop
jno
fcmovbe
push
imul
imull
lods
repnz
push
push
and
shl
inc
sti
push
jns
cli
adc
icebp
shrb
repnz
and
repz
into
enter
lods
xor
adc
pop
sbb
ja
xchg
adc
clc
cld
fcmovb
arpl
jge
jns
xchg
pop
adc
dec
stos
lcall
dec
fldcw
out
adc
jne
stc
addr16
test
sbb
inc
jge
mov
xchg
mov
push
cmpsl
rcrb
pop
push
cmp
xchg
insl
jmp
imul
xchg
in
outsb
ret
sbb
test
pop
es
inc
xchg
push
jl
mov
sub
or
pushl
mov
xchg
ds
cmp
iret
sub
movsl
fldenv
dec
jo
daa
push
movsb
dec
lods
fldcw
out
push
xchg
sub
scas
repz
scas
imul
cmp
lahf
xor
sub
and
lret
rcrb
sbb
push
shll
cwtl
aad
aad
int
getsec
jnp
aaa
inc
pop
aad
scas
sti
cltd
jo
int
pushf
mov
sub
popa
mov
xchg
push
iret
bound
shll
cmpsl
lea
ds
loop
insb
scas
adcb
enter
ret
fmull
clc
sbb
adc
mov
sti
aam
out
stc
push
cmp
mov
fdivs
in
sub
mov
popf
inc
das
jnp
jp
lahf
mov
sub
addr16
fwait
je,pt
mov
out
jl
stos
int3
adc
sub
aas
aas
rcll
cmpsb
push
ljmp
dec
pop
cltd
add
loope
popf
ret
sbb
test
in
das
sahf
mov
mov
inc
outsb
aas
idiv
jae
testl
xor
in
shlb
xchg
or
out
shrb
aas
clc
inc
shl
out
movsl
xchg
test
sub
repz
pusha
jbe
adc
xchg
aas
mov
repnz
jmp
sbb
xchg
cmc
loopne
mov
bound
and
push
outsl
xchg
ja
mov
or
cmc
mov
and
mov
mov
out
sbb
add
leave
aam
mov
fadds
xlat
dec
xchg
cmc
fistl
les
lret
lret
fwait
sar
xchg
outsl
push
xchg
sti
push
xchg
outsl
add
js
jo
inc
add
sub
repz
mov
mov
or
lret
xchg
icebp
cli
push
mov
sub
loop
jp
sar
sbb
xchg
jns
loopne
inc
aas
mov
stos
sub
insl
mov
stos
cmpsl
xchg
lea
adc
imul
cltd
mov
call
pop
mov
push
rorb
es
push
rorb
addb
jp
leave
negl
push
mov
push
jge
xchg
pop
rcrl
lcall
push
mov
imul
repz
inc
xor
iret
or
add
test
in
or
mull
je
ficompl
arpl
sbb
repnz
fstpt
xchg
mov
jle
fadds
das
cmpsb
push
cmpsl
pop
adc
inc
xchg
in
mov
mov
lahf
repnz
inc
cmpsl
mov
jbe
ret
mov
fs
mov
stc
js
js
mov
pushf
adcl
and
sbb
gs
mov
pushf
jae
mov
xchg
imul
loope,pn
imul
dec
mov
jecxz
ja
lods
jmp
loopne
aad
sti
xchg
int3
or
imul
fbld
inc
add
lret
dec
repz
adc
xchg
das
lods
ja
data16
mov
mov
xchg
inc
fcmovnbe
popa
dec
push
rorb
popf
and
cmp
lahf
bound
add
rcrl
mov
xchg
add
xor
mov
mov
jecxz
cmp
mov
lds
shll
xchg
lcall
repz
std
inc
or
sbb
in
add
cmc
sbb
std
xor
push
and
dec
andl
cwtl
xlat
popa
notl
negb
pop
pop
cmp
dec
jmp
mov
ljmp
fcmovnu
es
fdivl
pop
lods
leave
jae
xor
mov
popf
sbb
sbb
mov
movd
sbbb
imul
mov
mov
rcl
lcall
push
push
inc
stos
pop
mov
lret
ja
jmp
push
arpl
pop
lret
les
jle
addb
loop
jle
adc
mov
pushf
sbb
push
or
scas
outsl
push
adc
mov
jo
xchg
loope
dec
mov
pop
jns
dec
movsb
rorl
es
jle
stos
sbb
outsl
adc
jne
icebp
mov
pushf
fcomi
pushf
lahf
fcmovnb
int3
or
andl
pop
jns
or
repnz
int3
fcomps
pushf
mov
lds
mov
xchg
add
cltd
sbb
fisubrl
xor
test
arpl
and
fiadds
popf
stc
insl
out
fcomps
stos
mov
scas
jge
push
ret
push
sahf
call
rol
mov
jae
icebp
inc
inc
sbb
adc
add
sbb
sbb
jp
ljmp
mov
test
jno
pop
ret
pop
in
repnz
rclb
push
jmp
ficoml
rcr
cs
xchg
addb
ror
jnp
fidivrs
lret
dec
sbb
ljmp
jbe
pop
dec
jmp
ret
rorb
xchg
cmpsl
dec
pushw
seto
jp
add
popa
mov
fwait
mov
out
mov
jbe
cmpb
add
je
sbb
inc
jp
mov
mov
test
xor
push
mov
sbb
jo
cld
cwtl
jmp
sbb
add
push
std
push
and
adcl
cltd
clc
jns
iret
jb
rcl
push
adc
xchg
fcoml
test
cli
sarb
xchg
cwtl
cmc
stos
mov
lods
std
jecxz
ja
cmp
cmp
inc
mov
jp
aaa
int
mov
notl
xchg
xchg
aaa
jge
adc
mul
nop
out
out
mov
js
jecxz
adc
shrl
movsl
jg
or
mov
pop
jle
lea
sub
movsl
mov
or
fnstenv
subb
xchg
add
lret
fcomi
and
inc
scas
and
lret
pop
int
rorl
pop
popa
imul
jne
loop
sub
adc
int3
inc
lds
sub
inc
dec
pop
xchg
ficoml
inc
or
call
repz
pop
mov
imul
mov
fbld
mov
imul
repz
call
faddl
mov
out
xchg
or
fnstcw
mov
mov
sub
or
mov
and
call
and
xchg
inc
jmp
mov
or
mov
iret
xchg
sbb
adc
icebp
jecxz
adc
mov
adc
xor
sbb
bnd
cld
inc
cwtl
xchg
mov
sbb
syscall
jo
add
xlat
cmp
jl
enter
inc
lret
pop
mov
inc
je
cltd
mov
std
adcb
pop
repz
push
or
or
sub
mov
int
push
imul
dec
int3
push
add
idivb
add
jle
fiadds
xlat
in
fidivl
or
and
push
push
notl
shl
scas
aad
inc
sbb
mov
push
lods
pop
mov
push
mov
rclb
clc
mov
pushf
imul
lcall
sbb
and
xchg
xchg
imull
dec
inc
sbb
mov
push
mov
int
and
xchg
adc
in
inc
stos
push
fwait
lds
andl
add
add
rolb
inc
jbe
push
xor
lock
mov
cli
push
or
push
mov
repz
pop
call
xchg
daa
lret
stos
movsl
add
ds
add
lcall
lcall
xchg
cmp
lahf
mov
mov
call
and
cmc
rol
pushf
sarl
inc
outsb
adc
negl
lret
imul
fiadds
ret
adc
iret
clc
iret
mov
ja
insb
ljmp
fildl
icebp
pop
inc
clc
int
lret
mov
lock
pop
jno
subl
push
inc
inc
xchg
cmpsl
flds
jb
dec
idiv
xor
cwtl
fcomip
ret
jle
iret
mov
jle
add
aas
test
push
enter
cli
jb
mov
cmpsb
lahf
push
sub
cmp
or
inc
push
dec
push
sti
sti
outsl
sbb
rcrb
aaa
jmp
mov
in
out
xor
inc
mov
leave
dec
adc
incl
cld
sti
es
rol
inc
pop
xor
inc
rcl
adc
leave
sub
leave
sti
xchg
add
ds
jl
adc
movsl
out
adc
pop
mov
outsb
out
xlat
pop
add
insl
lods
aad
gs
iret
lcall
sbb
shll
sbb
movsl
dec
cwtl
shll
adc
into
ret
xorl
mov
and
cmpsl
xor
inc
pop
cmp
fwait
subb
int
jbe
xlat
cmpsl
mov
outsl
repnz
add
shll
mov
sti
rorl
sbb
repnz
pop
push
xchg
xchg
hlt
xchg
mov
mov
inc
mov
subl
push
cmp
jmp
jae
fldcw
fmuls
mov
or
xlat
nop
and
in
mov
iret
sub
int
pop
fcomps
lret
or
std
subl
dec
stc
cmpsl
jns
cmp
push
and
pop
jecxz
sub
subl
nop
xchg
rcr
fwait
rclb
push
jno
push
jmp
cmpsb
aaa
cwtl
xchg
sbb
and
push
dec
inc
mov
pop
popa
outsb
sub
sub
inc
dec
rol
in
or
movsb
test
mov
adc
mov
shrl
mov
out
lret
movsl
jge
rclb
xchg
sti
mov
lock
loopne
iret
jle
jno
into
jmp
cmpsl
shl
mov
sti
scas
inc
adc
inc
subl
and
mov
mov
sarl
push
jne
jmp
test
push
clc
jb
mov
fcmovnb
xchg
ret
or
fisttpl
mov
jae
cmp
in
jg
leave
adcb
divb
push
mov
mov
arpl
mov
sub
sbb
mov
in
fcmovnu
out
pop
and
lods
aaa
sarb
fcomi
push
les
xor
jle
outsb
or
inc
rcrl
sbb
fadds
in
jmp
cmc
dec
add
pop
stos
cli
jp
inc
mov
jb
cmpsb
in
inc
lret
mov
sub
push
mov
cmpsb
shl
ret
jl
push
or
mov
cld
test
pop
sub
in
cmc
pop
ret
mov
int
cli
loopne
cmpsb
jge
je
mov
repnz
mov
out
sub
rolb
mov
imul
fisubrs
adc
mov
lock
sub
add
sbb
sbb
ret
xchg
add
push
and
aam
xor
out
cs
andb
dec
test
push
add
pushf
ficoms
pop
lods
addb
mov
xchg
cmc
lret
sub
sti
sbb
cmp
frstor
addb
in
mov
test
or
loope
dec
push
sub
inc
sbb
subb
test
sub
jb
inc
push
mov
push
inc
dec
lahf
aaa
inc
jb
fwait
shrb
pop
xor
adc
icebp
push
xlat
adc
xchg
test
mov
push
imul
inc
test
loop
pop
lods
call
stos
lahf
int
lock
inc
rcl
mov
mov
scas
xchg
jne
sub
imulb
jge
roll
faddl
bound
pop
inc
ljmp
fsubrl
leave
adcl
imul
call
out
jb
mov
xlat
loope
loope
jl
mov
inc
lods
int
adc
cmp
ret
or
inc
pop
ror
cmpsl
and
stc
loop
pushf
jno
aas
push
test
vcvtsd2ss
xchg
xchg
inc
movl
repnz
xchg
inc
pop
rol
cmpsl
lahf
pusha
inc
xchg
aaa
imul
and
push
dec
push
jmp
jge
mov
dec
fs
mov
icebp
xchg
sbbl
jp
out
scas
mov
mov
and
adc
fsubrp
xchg
xchg
add
xchg
adc
push
cltd
jmp
mov
lock
sub
fistl
int
test
pop
adc
add
test
sub
mov
jl
fcomps
jbe
inc
dec
push
ficoml
mov
rcl
iret
scas
clc
fneni(8087
mov
shl
and
mov
arpl
add
jo
test
dec
dec
xorb
repnz
imul
insl
dec
fcomp
inc
xchg
js
or
cmpsb
pop
lods
and
mov
in
xor
sbb
icebp
outsl
int
in
dec
add
add
out
adc
cld
nop
inc
mov
rorl
out
sub
and
jnp
ss
jmp
pushl
jecxz
cs
call
fstps
ret
dec
jns
push
cwtl
jge
mov
cmpsl
jecxz
push
mov
out
roll
insb
push
leave
jmp
push
mov
dec
inc
jnp
adc
cld
fs
xchg
mov
mov
test
mov
or
in
push
hlt
fwait
pop
stos
pop
or
icebp
pop
sti
ret
xor
pop
adc
xor
pop
jns
nop
icebp
mov
movsl
mov
cmp
push
sarb
test
sub
inc
fiaddl
jmp
mov
fcomi
data16
mov
xchg
mov
push
fists
mov
leave
icebp
jecxz
lret
inc
test
mov
mov
xor
cmpsl
cmpsl
inc
cmp
outsl
xchg
jae
and
inc
jae
outsl
xor
sbb
adc
xchg
sub
fwait
pop
lea
ljmp
mov
xchg
jnp
shrl
or
xor
in
jmp
xlat
fisubrs
mov
pop
fs
mov
int
leave
jnp
sub
test
jle
mov
loopne
cld
cs
les
repz
in
push
xor
pop
mov
push
into
mov
cmc
xchg
inc
ficompl
test
call
xchg
movsb
loopne
test
fimuls
std
adc
fwait
add
push
shrl
mov
push
addl
xor
or
xor
sub
in
in
or
mov
cs
sti
ret
gs
pop
jp
mov
cli
jle
jae
movsl
daa
adc
dec
icebp
addr16
pop
jno
cmp
shl
pop
add
sti
in
xchg
mov
les
in
cltd
push
loop
in
inc
filds
rcr
lret
jnp
mov
cmc
cmc
lds
call
mov
sub
bound
fldt
jmp
cmp
sti
mov
scas
pusha
inc
faddl
inc
mov
and
xchg
xchg
push
out
repz
packsswb
testl
pop
ja
add
out
xchg
mov
stos
xlat
lahf
clc
sbb
sbb
mov
cmpsl
jecxz
adc
dec
test
aam
jmp
inc
mov
neg
movb
jecxz
inc
lahf
fldenv
ja
dec
loopne
not
fistl
pop
fsub
shr
cli
xor
scas
push
imul
xchg
sbb
lds
jae
cmpsl
cmp
es
stos
inc
imul
add
ret
cmpsl
mov
or
and
hlt
inc
xchg
sbb
decl
out
loope
inc
xchg
shll
cmc
cli
test
idiv
shr
subb
shl
fsubrs
lret
mov
out
sbb
mov
repnz
in
xor
pop
das
mov
mov
sti
dec
out
repnz
fists
dec
push
jns
je
jg
aam
int3
popf
clc
xchg
pop
cmpsl
push
xor
fucom
xorl
jp
mov
adc
mov
fistpll
stos
repnz
fidivrl
pop
outsl
insl
fmull
jns
mov
sbb
xchg
int3
lahf
cmc
mov
shll
jae
pop
int
outsl
add
pop
xchg
push
cmpsl
xor
sbb
jmp
daa
inc
jge
mov
repnz
cwtl
pop
movsl
mov
jecxz
jmp
dec
inc
jno
out
mov
push
rorb
xlat
xchg
jo
addr16
pop
lds
add
adc
inc
dec
movsl
call
shr
mov
repz
mov
push
fisttpll
lods
lcall
push
and
sbb
sub
jmp
insl
jae
hlt
in
cmp
nop
add
mov
cmp
out
mov
repnz
sbb
push
xor
fildl
push
leave
mov
mov
repz
jge
nop
lods
xchg
push
orb
call
loope
mov
popf
push
fistps
ja
jb
stos
rcr
xchg
xor
pop
into
fisubrl
daa
iret
mov
rclb
lods
ljmp
dec
mov
cmp
in
mov
adc
pop
cli
xlat
inc
pop
call
cmc
adc
cltd
xor
lret
adc
popf
jae
in
inc
cli
mov
orb
jo
int
out
pop
icebp
inc
adc
xlat
lea
popf
pop
mov
mov
in
jae
out
sti
outsb
xchg
xor
loopne
popf
fwait
lods
cltd
popf
jbe
xchg
fisubl
out
fcmovnbe
test
out
notb
jg
mov
push
xchg
pop
loope
inc
jmp
and
loope
jns
movb
das
mov
repnz
test
cltd
pop
movsl
icebp
ds
dec
lods
subl
repnz
iret
daa
cli
mulb
fnstsw
adc
sub
cmpsl
jne
or
inc
jecxz
data16
jno
out
jno
sub
push
mov
fisttpl
addr16
lret
test
pop
maxps
mov
sub
ret
js
xor
dec
add
sbb
mov
push
push
fdivs
daa
lock
cs
xlat
imul
jae
in
js
xor
push
sti
xlat
aaa
pop
test
or
sarb
mov
test
cwtl
cld
dec
stos
rcll
insb
aas
push
mov
xchg
movsl
cld
test
fsubrl
ja
mov
jae
pushf
nop
repnz
je
hlt
push
jb
aam
jno
jne
cwtl
daa
xchg
push
stos
push
scas
sbb
lock
mov
fwait
lret
icebp
out
xchg
aaa
cmc
int3
lahf
jle
mov
lcall
xchg
insl
sbb
fs
sub
xor
rolb
ficompl
out
enter
jmp
int
das
push
lds
test
es
lock
inc
mov
adc
les
mov
fnstsw
arpl
push
mov
pop
or
lret
xchg
int3
cmp
dec
xor
mov
jb
pop
cltd
mov
dec
mov
mov
fwait
out
mov
das
repnz
dec
jbe
inc
adc
sub
or
push
ficomps
inc
adc
push
ja
fisubs
hlt
pop
or
insl
mov
mov
mov
repz
jno
repnz
inc
cmpsl
pop
xchg
push
push
leave
cs
es
xchg
adc
int
dec
shll
sbb
push
adc
daa
fcoms
pop
mov
inc
ljmp
sbb
test
daa
mov
adc
xchg
sbb
xchg
or
xchg
adc
movsb
cmpl
dec
push
jnp
pop
inc
or
mov
xor
roll
loopne
int
cmp
in
xchg
adc
xchg
test
faddl
adc
loope
mov
outsb
sub
imul
fisubl
mov
cltd
xchg
mov
mov
int3
xchg
mov
repz
add
push
dec
pop
imul
push
sbb
scas
xor
fs
ljmp
jmp
int
mov
jp
inc
mov
mov
pop
mov
pop
repz
fstpt
xchg
lahf
ss
mov
icebp
push
ret
stos
in
pop
push
add
mov
dec
lods
pop
movsl
lret
xor
outsb
inc
pop
pop
imul
clc
sub
roll
jae
xchg
cmpsl
inc
sub
movl
out
fcomi
loop
xchg
push
cmp
idivl
pop
aas
jmp
insb
and
out
mov
mov
scas
mov
je
jns
fcomi
inc
loope
push
inc
xor
jp
mov
loope
jns
xchg
cmp
and
mov
cmpsl
fsubrs
jl
notl
xchg
jnp
out
flds
push
jge
adc
in
jmp
lret
iret
add
push
test
rorl
push
cwtl
outsl
mov
std
and
pop
out
push
inc
div
dec
xor
add
movsl
imul
push
push
mov
jns
ja
dec
imul
mov
icebp
adc
ret
adc
rorb
arpl
mov
push
inc
sbb
jbe
inc
imul
xor
adc
pop
scas
or
adc
or
xlat
mov
fs
add
xchg
sbb
jb
sbb
pop
stos
shll
dec
xchg
xchg
lock
xor
jae
adc
mov
imul
cmpl
mov
mov
pop
test
sub
push
jmp
pusha
xchg
xorb
aad
cmpsb
pop
pop
xchg
pop
xchg
inc
lock
cmp
imul
push
xchg
push
adc
adc
addr16
dec
jp
dec
inc
inc
xchg
mov
out
ret
clc
inc
leave
xchg
push
insl
test
push
xor
mov
jae
and
out
mov
loop
and
in
lds
int
pop
cmpsl
jl
mov
outsb
lret
cmp
dec
sbb
es
ror
mov
add
cltd
xorb
fldz
dec
nop
fldt
cmpps
sub
enter
jl
jecxz
or
add
push
inc
adc
jecxz
loopne
lods
lcall
adc
mov
ficomps
into
fistl
out
mov
stos
loope
push
inc
ret
inc
out
push
cli
jae
fcomi
xlat
push
jns
xchg
jmp
dec
les
in
sar
scas
inc
test
jnp
pop
or
mov
xchg
lcall
sub
fwait
mov
cmp
mov
lahf
xlat
repnz
jae
jb
sti
inc
out
mov
jecxz
test
lcall
jmp
test
push
mov
jecxz
mov
lea
in
out
fimuls
xchg
or
scas
je
lea
aam
mov
fists
inc
xchg
mov
scas
ja
push
icebp
lret
ficoms
in
lock
jmp
lret
loop
insb
scas
add
sahf
pop
out
mov
fimuls
and
inc
inc
test
sbb
pop
xor
mov
cmp
mov
mov
std
push
sub
jecxz
repz
out
lcall
mov
lret
cli
icebp
lods
adc
pop
jbe
push
and
jg
xor
incl
test
je
or
cmpsl
stos
out
adcl
into
pop
test
xchg
push
push
cld
test
xchg
push
xchg
push
jnp
repnz
hlt
rorl
insl
aam
pop
xchg
addl
jnp
xor
scas
cmp
inc
test
int
xchg
ret
pop
add
ror
out
test
fldt
adc
inc
es
loope
insl
test
mov
fwait
mov
mov
rcrl
out
jo
leave
sar
arpl
ret
int
repnz
shll
movsb
and
shr
ja
test
adc
jae
icebp
add
filds
or
xor
negb
je
testb
in
sti
shrl
bound
adc
int3
in
das
aad
nop
fs
lret
fnstsw
in
iret
dec
test
pop
iret
ret
aam
in
mov
jne
push
fstpt
cmp
xor
aad
rcl
cmc
shrl
fsubs
jns
repz
scas
xchg
jo
fldt
push
rol
push
inc
divb
and
ficompl
mov
lds
addr16
js
dec
scas
cmp
add
loopne
pop
cmpsl
lret
jmp
imul
cmpsb
ss
jne
aad
cmp
push
lock
jp
jbe
loopne
adc
jp
xchg
test
ja
xchg
or
inc
cmp
iret
dec
repz
inc
push
nop
mov
add
iret
push
xchg
sub
jge
jp
push
inc
mov
das
mov
cltd
mov
mov
test
sub
fnstcw
xor
cmpsl
mov
shrb
cmpxchg8b
iret
add
jbe
mov
xchg
nop
jmp
adc
call
ror
add
icebp
sbb
pop
lock
jbe
lods
in
jns
andl
stc
pop
rorb
insl
push
push
jne
div
loop
fmuls
xlat
aad
xor
dec
xchg
cmpsl
test
cli
lret
xchg
into
lcall
xor
ret
popl
add
mov
adc
ret
adc
ret
xor
or
loop
inc
stos
pop
sti
jns
dec
pop
lock
rclb
test
repz
shll
movsl
xchg
jne
jge
stos
fstpt
jae
pushf
mov
inc
xchg
test
fsts
or
inc
mov
iret
sub
push
inc
inc
dec
sub
push
lcall
dec
jno
dec
fcom
iret
imul
dec
sub
xchg
mov
xchg
lods
lds
lret
xchg
movsb
jbe
push
lods
out
mov
xchg
jno
daa
pop
push
bound
in
loope
dec
lret
xor
shll
fldcw
filds
fwait
xchg
pusha
leave
cmpsl
add
lret
fwait
ret
decl
std
sahf
push
cmpsl
lods
adc
fwait
jnp
xorb
jg
jae
insl
daa
xchg
adc
sti
stos
leave
cmpsl
jp
xchg
mov
jecxz
fsubr
repz
mov
push
ret
rclb
mov
and
cltd
fsubl
outsb
mov
cltd
and
stos
jbe
fstps
jge
into
stos
pop
jo
lock
lret
jl
fcmovbe
imul
push
adc
gs
test
aas
push
ja,pn
inc
mov
xchg
push
xor
push
mov
or
stc
jecxz
pop
sarl
lods
push
sbb
push
addr16
pop
add
in
mov
adc
xlat
insb
hlt
cli
xlat
pop
or
mov
mov
dec
mov
hlt
gs
ljmp
movsl
mov
test
add
cli
imul
cltd
repnz
add
shll
testl
add
push
nop
jb
shrb
dec
mov
pop
push
mov
das
shl
mov
scas
cmc
push
cmp
sti
xchg
or
push
push
or
fwait
mov
jne
ss
test
lds
adc
dec
fimull
sub
jae
push
jp
rcr
jmp
pop
daa
jl
or
in
repz
inc
sbb
int
lods
sub
xlat
inc
fidivl
test
pop
aaa
clc
sbb
jmp
outsl
repnz
lahf
aaa
mov
shll
inc
repz
xor
popf
rorl
mov
je
jae
xor
scas
inc
mov
clc
pop
in
call
xchg
mov
sbb
xchg
dec
pop
jae
adc
mov
orw
lods
push
mov
lock
clc
nop
inc
sbb
pop
repz
mov
sbb
pushf
clc
test
push
mov
adc
jg
stos
inc
inc
xchg
incl
dec
cmc
add
hlt
inc
imul
loopne
out
dec
mov
pop
jns
mov
pop
frstpm(287
stc
adc
scas
push
inc
push
adc
movsl
das
xchg
imul
push
adc
sbb
pop
cwtl
inc
sbb
push
mov
cmp
ficompl
pop
adc
adc
int
push
cmp
fldcw
push
ror
mov
arpl
or
ret
lock
rcrl
jecxz
aam
call
pop
inc
js
mov
sti
add
flds
fbstp
push
xchg
xor
xchg
popf
mov
fwait
jecxz
xchg
jb
hlt
mov
add
scas
rol
pop
dec
mov
fsts
inc
jo
mov
mov
int
int3
add
lcall
clc
cwtl
mov
arpl
mov
out
pushf
js
jp
mov
sbb
adc
fstps
pop
stc
andl
pop
jp
cmp
jno
in
mov
jmp
pop
insb
test
fdivl
ficompl
adc
pop
inc
ret
add
jge
adc
dec
daa
xlat
cmp
mov
fcomip
jae
fdivl
scas
push
mov
js
loope
xor
xor
xlat
adc
mov
push
push
rcl
rclb
push
push
popf
rcl
insl
add
ror
push
push
lods
push
in
aad
jo
and
xlat
jns
pop
testl
loope
pop
sub
lret
push
leave
xchg
ss
cli
stc
sbb
test
mov
push
or
push
jp
and
push
test
nop
mov
jle
ret
xchg
jmp
mov
jno
imulb
imul
data16
shlb
jp
pop
insb
add
pop
leave
cmpsl
stos
repnz
sub
fstps
inc
mov
jo
push
imul
pop
push
adc
not
daa
add
mov
or
cmp
test
shrb
add
rclb
mov
daa
imul
rorl
xchg
ljmp
cli
inc
jbe
add
lcall
lahf
pop
adc
ret
adc
push
cmp
mov
xlat
and
xlat
andl
mov
mov
es
into
pop
fldenv
loopne
stos
je
neg
jo
dec
fcomps
test
mov
test
pop
sub
call
lods
xchg
jge
push
pop
cmpsl
add
jge
fucomip
int3
inc
push
test
adc
xor
inc
filds
mov
push
adc
cs
cmpsl
into
lahf
sub
outsl
adc
xchg
cltd
inc
cmp
les
rorb
xchg
pop
mov
loop
mov
data16
sbb
mov
cwtl
or
and
and
mov
into
sti
insl
xor
inc
xor
das
mov
push
negl
mov
jge
mov
cltd
ret
pushf
popf
popa
sub
jg
clc
mov
fdivrp
jo
in
pop
push
mov
fdivrs
push
scas
or
shlb
sub
or
mov
scas
adc
sbb
fstpt
sbb
test
push
adc
inc
mov
dec
repnz
mov
or
sbb
mov
out
mov
loope
out
adc
add
inc
push
adc
mov
and
scas
cmpsl
aad
out
inc
hlt
push
jg
and
ljmp
mov
lock
inc
andl
hlt
xchg
cmp
mov
mov
call
xor
cmp
cmc
mov
pop
shrb
test
push
mov
cld
lods
sti
std
fstpl
mov
mov
in
or
lds
fwait
das
pop
icebp
xlat
flds
jmp
inc
daa
mov
bound
mov
ljmp
loop
mov
mov
mov
repz
mov
cwtl
cmpsl
in
cmc
vpxord
push
fidivrl
sub
lret
jnp
xchg
out
mov
xchg
sub
aam
push
fisttps
clc
fwait
inc
jno
push
stos
cld
pushf
iret
jp
fstl
orb
push
outsl
loop
dec
push
pop
xlat
mov
push
push
pop
inc
jae
adc
fidivl
inc
inc
stos
mov
or
xchg
in
addr16
es
rcrb
cltd
call
int3
repnz
mov
loop
fstpl
mov
push
rclb
aad
rclb
and
push
rcl
mov
das
push
stos
cmp
pop
xlat
icebp
idiv
pop
ljmp
sbb
mov
cmc
push
xchg
pop
xor
and
jl
pusha
pushf
subb
inc
mov
cwtl
andb
mov
sub
mov
xchg
push
or
lods
inc
cmpsl
mov
push
shlb
push
loopne
lahf
sub
cmpsl
jnp
fucomp
or
scas
cmp
fstps
repnz
lea
loop
jb
fld
or
mov
jnp
lcall
sub
inc
in
xlat
cmp
inc
repnz
negl
icebp
or
clc
clc
dec
and
out
jbe
fstpt
cld
insb
shll
xor
aam
xor
rcl
aad
cwtl
xchg
lods
das
movsl
shrb
sahf
cmp
sarl
into
test
cwtl
mov
movsl
imul
push
insb
repnz
inc
mov
fwait
xchg
ljmp
add
xchg
lcall
add
and
pop
test
push
lods
fldl
mov
das
or
inc
daa
aam
dec
jle
add
pop
lods
in
dec
in
insl
pop
xlat
dec
jae
icebp
jbe
mov
cmpsl
dec
mov
stos
scas
push
xchg
or
jae,pn
add
daa
dec
aaa
jae
fidivrs
add
sub
ljmp
stos
push
or
repz
fdivs
das
mov
ret
sub
es
sti
push
fdivp
lods
subb
jmp
pop
int3
stos
aam
je
sub
lcall
stos
push
mov
test
ret
and
stos
jge
mov
sub
cmp
dec
cmp
adc
sub
mov
bnd
mov
ret
xchg
xchg
mov
out
mov
cmpsl
ficoml
pop
adc
mov
stos
xchg
roll
cmc
fwait
inc
imul
addr16
les
jo
xchg
inc
lret
movsl
rcrl
enter
pop
in
cmp
add
mov
jg
cmp
loope
pushf
in
scas
in
icebp
jae
popf
xchg
ret
adc
xor
xlat
mov
out
in
xor
xchg
inc
push
jnp
cmc
dec
push
pop
pop
mov
xchg
add
push
in
mov
mov
dec
lcall
ja
dec
inc
shrb
sahf
xchg
out
sti
cli
sub
xor
dec
ret
test
or
and
jecxz
and
insb
ds
into
xchg
lock
jnp
dec
rcll
sahf
push
iret
fdivr
cmpsl
jno
inc
cltd
xor
mov
aam
scas
es
dec
lods
fsqrt
int3
imul
rcll
jnp
push
push
jle
pop
loop
out
xlat
jne
cmp
in
shl
pop
test
aad
rcrb
mov
andl
and
mov
test
xchg
addl
out
and
cmp
rorb
xchg
popf
cmpsl
cli
js
inc
xchg
fwait
int3
mov
fistpl
xchg
inc
cmpsl
enter
xchg
xchg
jb
rcrl
push
outsb
lock
sub
and
and
ret
xchg
leave
inc
cmp
xchg
cmp
xlat
roll
or
fcmovnu
aad
icebp
xchg
les
adc
loopne
int
jne
xchg
cmp
add
out
sub
ficompl
mov
or
fwait
mov
sarl
mov
arpl
inc
jae
rcl
cltd
jp
xchg
add
jp
test
pusha
jmp
in
cmpsl
jo
mov
xor
cltd
sbb
jmp
jae
bound
push
test
shrb
js
fistpl
jl
inc
dec
adc
or
pusha
xlat
xor
xchg
inc
mov
fldz
inc
lock
adc
mov
xlat
mov
in
mov
lods
aaa
push
adc
cmpsl
repz
pusha
cmpsl
pop
adc
push
leave
sahf
stc
sti
lea
push
dec
dec
aad
push
dec
push
inc
pop
mov
rorl
aas
lods
mov
push
out
fwait
std
push
xchg
push
enter
shll
or
icebp
test
and
call
or
pop
dec
fisubs
faddl
nop
in
cmpsl
adc
cmc
loop
push
pop
jb
nop
jmp
inc
xchg
xchg
xlat
loopne
or
idivl
scas
popa
dec
stos
jp
mov
or
ja
cmp
ret
inc
ret
add
hlt
jae
shll
fdivs
cwtl
addl
push
shll
jae
mov
fidivl
mov
loopne
cmpsl
test
shl
sbb
imul
xchg
jp
mov
dec
cli
ret
jge
sbb
xor
jmp
icebp
testl
inc
cli
loop
add
inc
fdiv
sbb
inc
stos
cltd
fldt
call
sub
xchg
cmp
daa
cmc
dec
ljmp
adc
fistpl
cltd
inc
inc
sbb
xor
dec
sbb
dec
sbb
lea
out
repz
dec
fldt
stc
jb
cmp
mov
imul
push
clc
jg
ficomps
sbb
add
les
loop
inc
fnstenv
cli
cmp
jbe
leave
xor
jae
and
push
jae
jmp
pop
mov
or
jae
pop
cli
adc
xchg
jp
xor
add
rolb
aaa
mov
in
jp
xor
push
inc
fdiv
sub
daa
push
dec
adc
loop
shll
fimull
pop
mov
fmulp
jl
mov
sub
inc
movsl
gs
inc
inc
cmc
fstl
xchg
inc
popa
jne
fs
mov
imul
int
push
sti
cmp
push
jmp
or
bound
inc
enter
pop
addb
cmp
enter
adc
sbb
xor
jecxz
out
add
jb
daa
lret
icebp
aaa
push
xchg
cmp
dec
fisubrl
ret
xchg
xchg
lock
call
push
mov
adc
xchg
mov
jbe
int
push
sub
std
adc
fistl
xor
daa
lret
jbe
sbb
pop
sub
int3
xor
xchg
dec
lds
mov
or
aaa
cmp
mov
das
xchg
out
pop
icebp
adc
out
lds
jnp
dec
mov
sahf
mov
fldt
mov
into
jno
clc
iret
xchg
scas
add
inc
aaa
popa
push
test
add
stc
or
rolb
scas
cmpsl
test
arpl
stos
dec
ja
inc
ss
int
and
xchg
cmp
jnp
fs
fldt
push
push
xchg
adc
rorb
dec
in
lahf
icebp
inc
lods
xchg
in
cmp
or
xchg
mov
lret
xchg
int
sahf
cltd
fcoms
insl
mov
dec
sbb
inc
sub
aad
push
sbb
sub
push
dec
sbb
lahf
lcall
jle
add
cs
inc
sbb
nop
xchg
movsb
dec
inc
aad
pop
test
push
stc
xchg
or
pushf
adcl
in
add
pop
jg
cmp
xchg
cli
call
mov
out
cli
dec
dec
mov
cs
mov
pop
adc
push
sti
inc
sub
add
mov
sbb
mov
cmp
xchg
cmp
es
neg
inc
add
loop
in
inc
scas
je
add
jge
stos
sbb
in
into
mov
dec
push
testb
mov
insb
cmp
out
fistpll
inc
popf
adc
je
add
and
cmp
xchg
adc
mov
cmpsl
popa
popa
inc
sbb
incb
pushf
mov
jp
xlat
stos
test
imulb
xor
out
jbe
xor
dec
ja
jae
jne
xchg
fidivrl
xchg
pop
imul
and
cmpsl
and
subb
lock
cld
test
ret
es
pop
fucomi
xchg
pusha
pop
lret
lret
cli
jns
fs
leave
cli
xchg
or
inc
and
cltd
fs
inc
mov
pop
pop
inc
cltd
int3
inc
cld
dec
leave
jmp
sarl
jg
aam
fiadds
aas
jmp
sub
or
inc
jnp
mov
cmpsl
out
int
mov
dec
sbb
dec
bound
jo
dec
mov
stos
ss
cli
inc
jnp
dec
jle
sahf
mov
testl
adc
sbb
sti
and
push
adc
lods
jle
push
and
imul
inc
add
out
lea
mov
mov
pop
pop
xor
loop
test
aad
inc
mov
imul
pop
test
jns
adc
sbb
dec
je
cs
jns
inc
cmpsl
movb
cwtl
lret
int3
jle
cmp
test
pop
cmpsb
vaddsubpd
mov
push
lret
cld
pop
movsl
mov
xchg
iret
inc
push
iret
pushf
movsb
js
mov
jae
fdivl
mov
add
push
push
fnstenv
lock
sti
cmpsl
les
shrl
mov
repz
jmp
popl
icebp
scas
ret
mov
hlt
cmp
testb
jne
push
mov
repz
outsl
loop
jae
adc
mov
jle
or
cld
sub
js
xor
mov
cmp
fwait
mov
popf
incl
outsb
mov
mov
and
pop
jp
cmpb
fwait
les
cmc
fisttpl
imul
repnz
lods
sar
and
xor
cmp
imul
popa
cltd
push
aas
mov
adc
in
outsl
lods
icebp
cwtl
cltd
or
lea
aad
fistl
lcall
cltd
cmp
jae
and
mov
xchg
sub
fldenv
jns
jno
and
push
push
xor
dec
mov
rorb
push
aad
push
and
inc
insl
mov
out
iret
icebp
mov
int
stos
lret
dec
icebp
or
cwtl
adc
scas
jecxz
mov
fists
inc
aad
nop
xchg
pop
sbb
mov
dec
push
pop
ret
cmp
shll
mov
dec
fisubl
xor
mov
loope
movsl
jmp
mov
insb
jno
movsb
test
sub
sub
cli
adc
push
xchg
sbb
test
mov
jecxz
cmpsl
into
cmc
ja
pop
loope
dec
icebp
jg
jp
mov
out
jb
jae
loop
add
jg
xchg
out
jmp
call
mov
inc
idiv
xlat
leave
cmpsl
xor
sahf
das
addb
lret
or
rorb
pop
mov
sbb
pop
aas
push
mov
pop
popf
mov
mov
inc
jb
push
mov
repnz
adc
enter
mov
popf
clc
adc
cmc
sub
mul
fistpll
lcall
inc
popf
dec
xlat
mov
xchg
or
das
popa
repz
int
pop
lret
inc
cmpsl
mov
xchg
dec
xor
cmpsl
mov
sbb
es
pop
neg
adc
mov
cmc
cli
push
imul
jnp
mov
aam
inc
roll
cmpsl
hlt
dec
dec
mov
dec
fldt
into
add
dec
xchg
xchg
xor
mov
pop
clc
push
inc
jmp
test
jb
pop
inc
enter
inc
popf
xor
push
shlb
pop
mov
stc
inc
mov
rolb
xlat
mov
pop
vcvtps2dq
dec
pop
jg
xor
pushf
xlat
js
sarl
fildl
jle
sarb
mov
add
xor
add
scas
xor
orb
iret
stos
aaa
lods
shll
sti
aaa
jbe
out
shll
hlt
or
fcmovnu
das
shl
jg
push
xchg
aam
imul
cmp
loopne
jge
mov
je
scas
cmp
mov
iret
xor
dec
lret
enter
pop
sbb
mov
inc
push
mov
outsl
mov
feni(8087
dec
mov
pop
mov
leave
pop
push
cmp
lahf
dec
cmc
scas
sbb
xchg
pop
out
imul
call
stc
inc
gs
pop
pop
je
sbb
hlt
inc
and
xchg
push
cltd
mov
jne
pusha
mov
daa
repnz
jb
adc
push
xchg
enter
xor
in
repz
fnstcw
movsl
xlat
add
pop
aas
jns
sbb
jne
mov
rorl
sahf
xor
push
inc
stos
sbb
mov
shl
mov
enter
mov
stos
push
sbb
insl
xchg
add
push
lret
loope
test
repnz
inc
cwtl
or
icebp
xchg
in
fs
mov
sbb
movsl
movsb
inc
cmpsl
pop
or
fnsave
jmp
mov
xchg
cli
sahf
fidivrl
mov
imull
xchg
jb
enter
aad
lds
sbb
pop
adc
pop
xor
movsb
xchg
daa
out
lcall
inc
xlat
icebp
cli
loope
mov
jae
or
push
fcmovnbe
jb
inc
xlat
test
or
pop
lcall
jge
xchg
shrl
cli
pop
fbld
sbb
dec
inc
adc
push
nop
aas
cmc
lcall
movsl
jae
push
jnp
mov
pop
inc
xchg
repnz
add
add
sti
mov
in
mov
lods
mov
sbbl
sti
inc
lret
repnz
xchg
add
sbb
lock
imul
mov
fcmove
dec
jb
adc
push
pop
loopne
push
in
mov
mov
mov
mov
cmpsl
jno
lret
inc
adc
dec
aad
popf
inc
mov
mov
mov
fildl
lret
lahf
xlat
or
loope
dec
dec
jae
pop
test
in
adc
mov
mov
mov
aam
and
mov
push
daa
hlt
push
adc
pop
xorl
insb
jae
mov
mov
mov
jmp
fwait
and
xlat
in
nop
jb
inc
jmp
repnz
icebp
or
mov
dec
lret
jb
jae
rorb
cltd
inc
cmpsl
jns
stc
add
push
das
std
xor
call
and
lret
inc
xlat
aad
inc
incb
loope
inc
sti
fwait
cmc
mov
loope
lret
jge
int3
xchg
inc
repz
negb
sahf
imul
xchg
inc
push
ds
xor
cli
jae
dec
lret
pop
or
sahf
vmovaps
pop
aad
pop
mov
ret
mov
xchg
loope
lret
fst
fists
fcmovne
pop
fistps
jb
xchg
movsb
je
lret
loopne
lahf
cmp
leave
fidivrs
fildl
out
pop
roll
jp
pop
loope
xchg
ret
dec
fldt
pop
test
test
fstp
stos
sub
cmpsl
nop
adc
ret
inc
cmpsl
pop
test
loop
sbb
jnp
test
inc
scas
sub
in
je
arpl
loope
loop
pop
mov
and
int3
inc
xlat
push
jne
test
xchg
fnsetpm(287
int3
xchg
jb
inc
mov
xchg
jne
fisttpl
add
pop
lea
pop
mov
lahf
add
decb
fcoml
push
xor
xchg
sub
cmpsl
into
pop
sbbl
jb
pop
imul
cmp
je
rol
cmp
pop
ret
inc
sbb
or
lahf
sub
sub
ljmp
add
dec
std
cmc
add
rcrb
iret
clc
mov
mov
shll
dec
mov
leave
xchg
or
pop
inc
fnsave
jae
xlat
lds
cli
xor
jne
adc
adc
fdivs
stos
int
push
out
jmp
fsubr
clc
add
pop
xchg
xlat
push
std
jbe
add
mov
fcomps
lahf
xlat
out
inc
popf
xlat
add
jbe
iret
icebp
cmc
neg
mov
out
testl
mov
mov
xlat
jbe
stos
xlat
je
ja
ja
iret
fs
imulb
mov
or
outsb
les
addr16
stc
lds
xlat
fcmove
icebp
leave
clc
mov
scas
repnz
mov
mov
dec
xchg
out
scas
addr16
adc
inc
rol
aam
lods
fsub
add
xor
lret
fistl
je
icebp
mov
sti
inc
jp
stc
jl
stos
sbb
icebp
jno
jl
call
push
flds
xor
rcll
ja
jae
jg
jbe
daa
xor
scas
std
mov
ja
jnp
pop
rol
pushl
pop
stc
je
push
sti
icebp
pop
sub
mov
push
icebp
xorl
hlt
imul
sti
nop
icebp
lock
icebp
lret
icebp
mov
nop
icebp
fxch
nop
icebp
repnz
vpackuswb
lcall
ret
aad
push
add
hlt
xchg
dec
mov
imul
sub
jae
jb
pop
lcall
sbb
mov
jae
scas
mov
mov
xlat
test
rcrl
hlt
fisubl
cmpsl
jno
ss
in
adc
out
mov
mov
mov
imul
sbb
inc
test
les
fs
ljmp
mov
mov
jmp
sub
cmc
sub
sbb
xchg
fs
outsl
inc
pop
addb
aas
iret
jl
jmp
stos
inc
rcrl
lock
inc
jae
push
iret
push
movsb
ret
add
scas
jl
cmpltps
cmp
out
push
jo
cltd
cmpl
fcompl
sbb
mov
pop
ret
mov
add
ror
call
mov
sbb
lock
aas
sub
movsb
flds
popf
and
arpl
aad
xlat
pop
mov
filds
inc
int
dec
negl
pop
inc
dec
inc
cltd
imul
inc
fstps
ret
cmpsb
sahf
aas
cli
mov
cmp
lea
lock
xchg
inc
fstpl
ret
lods
fistl
xlat
pusha
ja
ret
sub
push
mov
loop
rcll
pop
xchg
lds
loop
jecxz
lahf
fwait
lds
sub
kmovd
stos
lret
pop
fisubl
arpl
mov
fwait
lret
or
add
es
xor
jbe
xchg
into
adc
fwait
iret
or
pop
jg
inc
lahf
icebp
repnz
inc
cmp
fyl2x
xchg
mov
std
hlt
fildl
aam
mov
pop
push
pop
imulb
ljmp
xor
jb
cmp
add
outsb
push
fldenv
jno
movsb
dec
mov
push
es
jo
in
xchg
push
push
jecxz
push
je
in
push
sub
lcall
scas
lods
inc
imul
insb
xlat
jmp
repnz
imul
and
inc
cmpsl
icebp
stc
xchg
pop
pop
cltd
cmc
mov
xchg
sbb
cltd
ret
pop
out
push
pop
jmp
repz
call
adc
add
push
cmp
push
test
stc
add
pop
mov
pop
frndint
shll
mov
bound
jp
jae
int3
aaa
popf
rorb
mov
lcall
sbb
stos
test
mov
imul
xlat
pop
mov
add
fnstsw
jb
repz
stos
jb
pop
cs
xchg
mov
out
xchg
pop
mov
ds
dec
test
xchg
fldt
or
mov
cli
int
les
xchg
xlat
dec
hlt
jae
xor
push
inc
rcr
mov
jns
adc
bswap
stc
pop
insb
and
inc
xchg
rclb
imul
loope
ret
xchg
fwait
and
xor
add
mov
mov
ret
xchg
cmp
pop
xchg
pushf
dec
inc
xor
inc
cmc
nop
test
dec
mov
insb
inc
out
lods
lods
frstor
fmuls
repnz
cmp
cmp
xchg
ficoms
fucomi
mul
arpl
rclb
fidivrs
xchg
ja
pop
insb
subl
jmp
sbb
mov
cmpsl
fwait
dec
push
dec
icebp
sbb
pop
nop
sub
stos
nop
sbb
push
nop
cmpsl
mov
jl
andb
nop
jnp
arpl
out
jge
pop
cmp
test
dec
inc
sti
arpl
push
jnp
add
inc
adc
pop
inc
fwait
inc
and
sub
pop
hlt
rcr
cmpsl
loopne
int
dec
lock
fistpl
rcll
xchg
inc
out
fwait
movsl
and
icebp
int3
jge
cs
jle
xchg
cs
adc
orl
pop
cmp
mov
mov
xchg
mov
dec
gs
cmp
gs
in
adc
jge
dec
dec
mov
test
adc
inc
insl
fldl
xlat
ja
addr16
push
inc
add
stc
inc
mov
mov
stc
inc
inc
fst
bound
in
jnp
cmp
dec
cmpb
ficompl
or
sar
cmpsl
sub
lret
stos
loope
xlat
jo
icebp
cmp
out
lock
mov
xchg
pusha
cmp
popa
mov
nop
das
orb
pop
inc
mov
mov
call
enter
fwait
xlat
jp
dec
addr16
xchg
xchg
int3
test
ret
cmpsl
divb
sub
inc
inc
mov
pop
jl
in
adc
dec
add
enter
fistps
pop
lods
dec
mov
cmpsl
adc
inc
push
repnz
or
ret
xor
rcll
or
repz
loop
repz
and
cli
jae
cmc
fcoms
cmp
stos
sbb
jno
ljmp
sub
cmc
jl
sub
push
adc
sahf
pushl
xlat
xchg
pop
stc
out
jae
loope
call
je
sbb
push
into
push
test
rcrl
incl
loope
push
inc
sbb
mov
sbb
pop
xchg
jbe
mov
movsb
int
ss
pop
dec
jns
cwtl
pop
into
and
mov
stc
inc
test
cli
jb
cmp
mov
pop
nop
sub
mov
sub
add
add
rclb
jmp
out
outsl
pop
and
jns
addsubps
inc
add
mov
pop
shll
or
pop
cmp
repz
inc
pop
push
das
inc
xchg
fisubrl
and
ret
pop
inc
jg
jle
sub
dec
sbb
pop
insb
pop
lea
cmpsb
ret
imul
push
cmpsl
jno
mov
add
lods
imul
fcoml
pop
sub
mov
lahf
cmp
jae
push
mov
mov
cs
jmp
psubw
mov
lcall
pop
xchg
js
jns
nop
test
or
notb
cmpsl
clc
fsubr
fprem1
sub
iret
dec
ljmp
jg
mov
cmpsl
pushf
stos
xlat
ret
pop
testb
or
enter
jl
scas
push
mov
pop
inc
xor
adc
dec
movb
cmp
lods
cmpsb
inc
jno
out
jno
fisttpl
cltd
adc
jae
rcrl
adc
mov
pop
push
mov
lds
bnd
mov
jns
and
icebp
loop
pop
cmp
pop
incb
out
xchg
ret
jl
test
mov
jmp
add
cmpsb
adc
mov
jns
mov
imul
pop
sahf
daa
call
movsl
repnz
dec
dec
inc
ljmp
je
lcall
push
jbe
fistps
xchg
aam
adc
lret
xorl
fisttps
mov
mov
addl
loope
sub
xchg
fidivs
and
mov
inc
rorl
int
lock
test
xchg
iret
fcomi
ds
inc
jmp
leave
mov
aaa
rclb
movsl
mov
lds
mov
sar
cltd
mov
pop
lods
mov
jns
aas
sbb
sbb
inc
icebp
fisubs
pusha
pushf
scas
addl
movsb
xchg
addr16
rol
mov
pop
jns
sub
xchg
pop
addl
insb
and
inc
pushf
jmp
or
das
pop
push
jg
push
cmpsl
add
push
dec
and
mov
push
stos
xchg
inc
sbb
jg
mov
mov
icebp
mov
xlat
dec
adc
repz
pop
push
inc
mov
loope
inc
and
daa
jne
jns
aam
mov
insb
iret
and
mov
mov
data16
mov
fidivs
inc
jae
jne
fidivrl
jmp
inc
jp
insl
cwtl
cmpsl
mov
mov
jge
mov
jae
mov
xchg
cmpsl
pop
sahf
or
pop
inc
adc
dec
push
push
scas
call
inc
rcll
ja
test
movsl
loopne
push
loop
or
mov
mov
inc
pop
push
enter
pop
inc
sbb
jle
mov
fcmovnu
int3
lea
mov
sahf
adc
in
mov
cmp
mov
rcll
dec
ficomps
sbb
js
bound
mov
mov
loop
xchg
inc
out
push
fwait
aad
daa
sahf
xchg
mov
xchg
xchg
push
mov
adc
shll
sub
sahf
les
lahf
addr16
jno
cmp
fld
sbb
sbb
aad
inc
cmp
fstpl
pop
lods
test
stos
mov
adc
adc
xchg
mov
push
bnd
dec
and
inc
inc
aaa
push
dec
cmpb
ret
cmpsb
lcall
popf
and
ret
push
daa
mov
xchg
sub
xchg
xor
push
adc
int
xchg
jge
and
ljmp
pop
jae
inc
subb
cld
lods
add
add
std
cld
andl
jmp
pop
fs
adc
dec
flds
dec
sarb
inc
push
scas
in
cltd
mov
xchg
stc
inc
stos
insb
add
imul
out
inc
adc
inc
jecxz
or
jne
test
stos
outsb
inc
push
xor
daa
ds
inc
push
jmp
shl
pop
imul
outsb
lods
mov
sub
addr16
lods
mov
cltd
xor
test
cmpsb
mov
push
fistpl
test
icebp
jae
or
mov
push
push
fisttpl
push
xchg
push
mov
or
data16
pop
xchg
push
jl
push
test
sub
nop
rcr
mov
push
xchg
idivb
stos
xlat
or
addr16
inc
rorl
jne
jns
mov
xchg
js
inc
std
push
jle
mov
nop
movsl
ret
or
or
inc
push
jmp
inc
inc
add
cwtl
fsubrl
fwait
movl
ret
cli
xchg
jecxz
pop
lahf
pop
movsl
cmp
pop
mov
cmpsl
xchg
adc
sti
jl
xor
es
cmp
testb
xlat
out
mov
xlat
dec
in
outsl
sub
es
out
cld
shlb
jbe
jle
lea
inc
inc
loope
dec
sbb
dec
mov
sbb
pop
inc
jae
fiaddl
push
jns
pop
pop
inc
xchg
dec
cmpsb
nop
shrl
shrb
repnz
sub
push
fbld
pusha
push
xor
addr16
push
mov
and
pop
cmpsl
adc
fs
negl
lods
adc
pop
fistpll
mov
ret
mov
xchg
pop
mov
inc
clc
push
icebp
push
movsb
pop
aad
jns
xchg
gs
ret
jmp
dec
mov
inc
sahf
push
out
mov
xchg
shlb
inc
push
and
xlat
and
fdivs
cmpsl
cmp
dec
scas
pop
pop
fistps
pop
or
xchg
sub
rcll
inc
xlat
gs
lock
je
push
inc
push
xor
int3
sub
fs
sarb
mov
loop
push
cwtl
cmp
xchg
jg
pop
adc
ss
cmp
push
loop
pop
mov
fists
push
cltd
mov
lds
ret
adc
repz
jmp
jle
cmovo
push
mov
jp
adc
xor
scas
push
ret
mov
push
pop
mov
adc
mov
outsl
stos
repnz
pop
pop
js
sbb
fwait
push
cmpsl
add
mov
sbb
lods
inc
les
in
inc
cmp
cmpsl
xor
mov
mov
fisubl
pop
arpl
push
xlat
and
sbb
imul
lea
pop
adc
stos
sbb
ret
push
pop
jle
notl
jl
scas
pop
pop
pop
insl
dec
out
or
pushf
popf
cwtl
mov
sar
push
add
aad
xchg
fdivrl
mov
mov
aas
arpl
filds
xchg
inc
es
daa
sbb
inc
clc
rep
mov
js
fadd
sbb
repnz
fiaddl
int3
xor
push
aam
shl
and
and
insb
xchg
sbb
stc
push
push
ret
fsub
push
sahf
loop
inc
fwait
lcall
sub
jge
out
lock
cmc
jbe
fmuls
cmpsl
fdivrp
cmp
jne
inc
jle
sbb
les
mov
popa
pop
add
cmp
outsl
push
push
imul
inc
jl
outsl
sbb
pop
ret
pop
xor
push
push
daa
idivb
or
aaa
arpl
scas
push
adc
mov
xor
sub
negl
mov
sbb
aas
inc
sbb
pop
pop
jp
js
repnz
cmp
fldt
fildll
daa
es
fcomi
cmc
movsl
inc
pop
mov
cmpsl
add
add
and
inc
loopne
mov
je
xchg
xor
jnp
in
sub
movb
iret
xchg
cmp
les
arpl
fst
arpl
in
cli
push
xchg
cmpsl
insl
push
insl
xlat
adc
lahf
pushf
gs
sbb
jl
and
push
inc
push
jmp
in
inc
in
out
insb
fldt
inc
inc
icebp
divb
mov
mov
or
dec
jae
cli
sarb
lock
aam
mov
xchg
pusha
pop
lods
push
mov
xor
loop
pop
push
cmp
fstpl
scas
sbb
mov
xor
jecxz
adc
push
xor
decb
and
arpl
mov
push
sub
dec
shlb
jbe
int3
push
repnz
fistps
xor
fcomps
jae
mov
loope
test
outsb
push
cltd
lahf
repnz
push
cmpsl
mov
aad
pop
lods
aad
jno
stos
scas
imul
rclb
jo
mov
or
jp
cli
lods
push
fidivl
adc
leave
push
pop
out
mov
movsl
roll
push
loop
mov
mov
push
and
sub
sti
add
shll
xchg
push
popa
sub
sub
cs
jp
scas
or
icebp
xor
cmpsl
in
push
xchg
or
pop
ficompl
mov
add
adc
fwait
mov
scas
sahf
xchg
mov
out
push
pop
dec
add
xchg
sti
jnp
xchg
divl
xor
stos
xor
push
je
rorb
lock
sbb
les
bound
cli
popa
mov
loopne
push
rclb
lods
incb
and
xorb
in
push
pop
push
dec
stc
cmp
sahf
test
notb
mov
gs
cmpsl
xchg
push
inc
sub
xchg
add
dec
lds
out
lahf
jbe
mov
mov
cli
test
fisttpl
gs
pop
movsl
inc
sub
pop
shll
push
xlat
fiadds
pop
dec
int3
cmc
fldt
lods
ror
mov
jmp
add
pop
aaa
pop
addr16
mov
or
mov
cmpsl
pop
loopne
pop
jne
sbb
xor
fwait
out
mov
loope
inc
lret
push
imul
xlat
lods
shl
adc
fstpt
add
stos
rol
lods
sar
ss
or
push
into
mov
lahf
xor
in
and
add
mov
fisttpl
loop
pop
nop
ret
ret
push
jecxz
xchg
pop
xchg
jmpw
es
dec
mov
pop
into
rcl
imul
inc
popf
inc
pop
cmpsb
in
or
or
xor
popa
pop
sub
xorl
in
inc
gs
out
cltd
sbb
in
sbb
cmpsl
cmp
inc
jle
gs
stos
cmp
lahf
out
mov
pop
fidivl
scas
mov
idiv
sub
mov
cmpsl
push
cmpsb
sarl
ret
jo
pop
or
jge
pop
inc
push
lock
mov
cmpsl
xchg
dec
stos
mov
ja
shrb
push
xchg
jno
sub
jmp
fs
cmpsl
int
lods
xchg
jg
jle
scas
mov
bound
mov
xor
inc
mov
inc
fwait
pop
call
ret
mull
sub
roll
or
xor
cmp
or
ret
loop
mov
and
aad
mov
iret
testb
jbe
xchg
in
cmpsl
jmp
rcrb
xchg
push
push
rcrb
dec
mov
inc
cmpsl
leave
mov
pop
repnz
mov
mov
cli
mov
cwtl
aad
pop
popf
xchg
lahf
push
adc
push
inc
int
push
repnz
lahf
jl
push
mov
loop
pop
ficoml
push
sbb
push
cmp
sub
adc
cmpl
or
imul
and
inc
push
test
jbe
cmp
test
push
cmc
jb
cmc
jnp
mov
mov
test
ds
jmp
adc
add
push
js
cs
lock
out
hlt
gs
stc
icebp
pop
inc
jae
out
stos
test
mov
dec
push
pop
dec
add
call
daa
gs
sub
pop
cmp
arpl
das
fldenv
imull
lock
ss
fptan
ret
shrb
enter
dec
or
sar
jnp
mov
pop
ret
fwait
cli
sub
pushf
out
fbstp
stos
add
in
push
sbb
push
into
mov
leave
dec
dec
or
out
ret
cmpsl
out
es
nop
xchg
push
inc
lds
std
pop
sti
shr
cltd
jno
std
pop
in
ret
mov
xor
xchg
cs
push
mov
jecxz
jle
dec
sub
xlat
mov
mov
ja
dec
mov
sbb
arpl
scas
dec
or
mov
fisubrs
lods
out
or
xor
fnstsw
xchg
outsb
rcll
ret
xorb
push
lcall
outsl
sbb
add
cmpsb
scas
scas
cmpsb
push
cltd
testl
sub
mov
sbb
rcll
mov
mov
pop
call
sbb
lcall
sti
andl
add
push
and
push
jp
cmpsb
jb
mov
mov
dec
lods
fldcw
aad
fisttpll
cld
xlat
and
xor
mov
pop
inc
lds
loop
mov
cmpsl
dec
js
sbbl
fistpll
test
repz
jmp
cmpsl
divb
jbe
fmuls
jb
mov
lods
rol
repnz
cmovbe
outsb
fistl
dec
inc
fbstp
and
int3
pop
loope
hlt
fcmovbe
inc
cmpsl
mov
ds
aad
jmp
jb
lret
mov
mov
es
mov
or
icebp
pop
xor
fndisi(8087
xchg
testb
mov
xchg
lock
adc
cs
data16
lcall
rclb
ror
ret
dec
jb
jmp
imul
aad
fmuls
adc
fldcw
popa
fadd
mov
push
dec
jbe
mov
sbb
clc
cmp
mov
fstpt
test
inc
cmp
repz
fdivr
and
push
stos
es
adc
cmp
stos
lret
in
or
sub
mov
std
cmc
cli
adc
fpatan
and
jb
rcll
mov
pop
inc
ja
out
add
mov
and
xor
push
jg
fldt
loop
push
cmpsl
xor
arpl
or
xchg
jg
xchg
ret
mov
loop
pop
jmp
push
push
push
out
pop
js
xchg
xchg
divb
out
cmpsl
es
fcomip
xor
push
push
or
shr
xlat
mov
jnp
lcall
adc
test
mov
mov
scas
xchg
jo
inc
sub
inc
or
aad
xchg
cmpsb
add
enter
xchg
pop
cmp
imul
call
xlat
fcomps
lcall
push
jmp
ja
cmpsl
movsl
shr
lock
sbb
lock
mov
insb
outsb
ror
in
push
int
push
xlat
lcall
imulb
movsl
mov
mov
xlat
scas
shl
dec
xlat
jecxz
imul
xlat
cltd
xchg
adc
fstpt
dec
xchg
adc
jmp
push
repz
sti
pop
xlat
mov
adc
xchg
sbb
xchg
xlat
shl
cwtl
fildll
lea
sbbl
imul
xlat
lret
pop
lahf
push
stos
push
fcmovnbe
mov
push
lea
cmp
mov
sbb
bound
xlat
xchg
mov
push
ret
lahf
stc
std
scas
mov
xlat
ret
xchg
shrd
sub
xchg
jae
sub
xchg
shr
ja
lret
fldcw
jo
fs
dec
test
cmp
rclb
or
repnz
fcmovnbe
cli
popa
gs
call
push
xlat
push
xchg
iret
jae
mov
xlat
je
inc
push
lahf
popa
aad
mov
push
scas
shlb
test
arpl
aam
in
shl
bound
cmc
mov
pop
push
rcr
xchg
mov
movsl
enter
flds
sahf
dec
push
scas
fcomp
inc
push
stc
sub
add
cs
pusha
xchg
sbb
test
jo
fwait
loope
js
rcrl
xchg
push
icebp
repnz
js
in
pusha
and
lea
pushf
aaa
push
jmp
std
adc
out
add
ja
dec
push
ret
push
fldt
pop
sbb
add
popf
ret
std
negl
out
popa
push
dec
cmpsl
mov
testl
push
and
lods
daa
das
aas
push
into
out
cld
fsubrs
ret
cmpsl
lcall
int
sub
imul
mov
push
fldt
push
xchg
mov
sub
into
add
je
jae
nop
and
jae
out
xchg
push
fs
dec
or
inc
pop
xchg
or
aas
adc
rcll
cmp
aad
cmp
jg
ja
aaa
add
icebp
mov
adc
inc
mov
test
icebp
iret
leave
out
fcmovnb
outsl
xchg
jo
mov
inc
outsl
fistl
mov
and
add
cmc
or
cli
fsin
int3
inc
jle
mov
pop
mov
jmp
pop
jp
jge
xchg
mov
imul
in
push
pop
fcomi
mov
mov
pop
fisubl
xlat
push
push
lds
mov
lret
lret
dec
mov
mov
mov
mov
cmpsl
frstor
xchg
jo
inc
xlat
sbb
andb
adc
hlt
movsb
fnsave
fldt
mov
ret
dec
movsl
outsb
xlat
sbb
inc
filds
cmpsl
cmp
push
push
add
hlt
mov
in
in
mov
cmp
lret
sub
mov
push
lods
pop
ret
push
movl
stc
shlb
cltd
xor
fwait
pop
aad
lret
pop
dec
fxch
sarl
sbb
mov
push
jae
xchg
jecxz
lock
and
xchg
stc
or
into
test
addr16
jnp
push
das
push
ja
lock
fsts
test
mov
mulb
lods
lret
js
push
or
mov
mov
inc
fs
loop
insl
fsubl
mov
mov
xor
lock
out
negb
push
sbbl
fwait
cmc
pop
cmpsl
ret
xlat
sahf
es
imul
push
cmp
xor
sub
and
in
xor
out
out
aas
insl
lahf
inc
push
and
pop
sbb
cld
cmpsl
sub
aas
and
ret
pop
pop
loop
js
mov
shrl
adc
int3
pop
mov
pop
lret
or
fcmovu
je
ret
xor
lret
jmp
pop
adc
add
and
lcall
push
insb
mov
mov
mov
insb
int
repnz
dec
xor
mov
test
mov
les
loop
rorb
fisubrl
cmpsl
fstpl
push
xor
lcall
scas
cld
movsb
jae
and
in
cmp
loope
inc
lret
inc
sti
cmc
addr16
repz
jnp
fldenv
lods
loope
in
jo
jmp
push
mov
adc
add
std
pop
out
fucomi
pop
stos
adc
fxch
sbb
mov
pop
movsl
aam
mov
icebp
and
xchg
xchg
xor
and
fsubl
add
sti
push
xchg
or
movsl
cli
aaa
or
cmp
dec
mov
clc
notl
repz
mov
roll
and
lock
out
repz
cmpsb
push
aad
cmpsl
aaa
push
push
push
test
cmpsb
cmc
stos
inc
cltd
test
adc
in
adc
and
inc
lahf
push
push
add
mov
fldt
push
xlat
icebp
in
out
ret
jb
repz
jmp
push
push
mov
in
gs
adc
fisubrs
fwait
shlb
loopew
add
repz
jecxz
test
pop
xchg
sbb
push
sub
insb
or
aad
aad
iret
xor
sub
mov
lods
mov
cmp
jp
outsl
in
leave
sahf
notl
xchg
sbb
add
push
cvttps2pi
xchg
sub
rcll
lock
flds
fs
adc
fs
fisttpl
xlat
jno
push
jmp
in
popa
shlb
or
push
xchg
xchg
repz
outsl
rcrb
jmp
dec
sub
mov
out
jne
fbstp
add
fdivl
repz
fcomip
into
dec
dec
cltd
jno
mov
adc
push
or
cmpsl
xchg
jmp
cli
lret
xchg
inc
mov
xchg
sti
sub
shll
mov
arpl
movl
push
pop
hlt
nop
jecxz
int
aad
push
stc
addr16
add
inc
adc
mov
mov
inc
xlat
mov
mov
adc
mov
fldl
xchg
mov
jg
sbb
repz
inc
fbstp
dec
or
mov
scas
adcl
xlat
pop
movl
jmp
ljmp
jmp
adc
push
dec
pop
xlat
lcall
add
adc
sbb
ret
jecxz
xorl
shll
mov
fwait
jno
fwait
adc
testl
cli
xchg
ret
aaa
push
mov
fisttpl
test
push
es
xor
lret
push
push
push
iret
dec
fs
pop
jno
jb
jmp
dec
lret
popa
cltd
cmp
out
mov
out
fisubrs
fs
movsb
push
add
out
jnp
aad
mov
mov
shrb
mov
push
filds
cmp
mov
xchg
shl
pop
or
mov
push
nop
xorl
mov
xchg
sbb
push
decl
fs
mov
ss
and
stc
pop
iret
pop
xchg
icebp
int3
in
push
pop
mov
jno
mulb
fnstenv
les
imul
adc
daa
cld
mov
rcl
mov
sbbl
fcoms
jb
cwtl
nop
xlat
fnstcw
in
push
cmpsl
testl
push
mov
fistpl
ja
dec
mov
mov
mov
sbb
lea
rcr
push
stc
or
addr16
testl
repnz
fsts
push
and
xchg
loopne
jmp
mov
or
repnz
arpl
pop
sub
push
into
subl
out
dec
push
loope
pusha
cltd
lea
mov
push
aaa
fld
adc
xlat
shlb
ja
xchg
shlb
aam
or
out
xchg
push
andb
pop
push
rclb
ficoml
inc
jmp
notl
out
loopne
ljmp
or
aas
loopne
push
fmul
jne
out
lret
ja
mov
fistl
inc
rcl
mov
cmp
dec
fcmovu
ljmp
out
or
stos
mov
lcall
je
out
add
sar
push
push
sub
adc
or
lods
jp
jmp
sbb
xchg
pop
fsts
rcl
cld
inc
push
cmp
lods
call
pop
cmp
imul
scas
jmp
or
ja
push
xchg
gs
repz
out
popf
xchg
fildl
ret
push
sar
pop
imull
ds
and
divl
inc
mov
int
ss
leave
and
cltd
or
and
icebp
xchg
shll
daa
mov
repnz
fistl
sbb
cmp
scas
mov
mov
pop
mov
lea
xor
jmp
jecxz
mov
jbe
cmc
pop
sti
loop
jmp
xchg
jg
xor
fcomi
cmp
xchg
sbb
ret
sti
mov
icebp
in
repz
jg
stc
incl
shl
std
inc
mov
aam
mov
aam
xlat
xor
rcr
mov
pop
push
push
aaa
push
iret
stc
pop
mov
into
sbb
dec
push
int3
add
pop
dec
lahf
dec
sbb
add
dec
add
lea
cmp
test
sbb
add
lods
in
sub
cltd
in
stos
mov
ret
repz
in
mov
xchg
dec
pop
mov
ret
lods
stos
repz
shl
ror
xchg
mov
mov
jmp
shll
push
cmpl
jae
push
mov
aas
jae
cmp
loope
jg
sar
sub
cmc
scas
shrl
shl
aam
dec
lds
lahf
push
push
movsl
dec
pop
mov
xlat
fldt
pusha
addr16
out
icebp
out
push
pop
lcall
aad
scas
je
adc
xchg
fcomi
xlat
cli
inc
xorl
js
jge
push
mov
inc
jge
lahf
jge
sub
repz
xchg
mov
or
aad
lock
arpl
iret
pop
mov
push
cmc
push
xchg
jae
in
out
ljmp
jno
mov
or
and
push
mov
ja
mov
push
push
mov
enter
in
pop
adcb
sub
sbb
ret
cltd
nop
clc
mov
mov
fdivl
jmp
adc
fidivrl
mov
arpl
sbb
aad
cmc
jmp
pop
cmp
in
icebp
mov
repnz
rcll
mov
xor
pushf
cmp
xlat
mov
inc
jl
lds
ja
arpl
out
daa
iret
je
sub
inc
icebp
pusha
sub
out
shl
push
cld
xlat
scas
out
pop
mov
xchg
fwait
loope
jno
jge
jecxz
lods
inc
mov
popa
sti
pusha
cltd
xor
push
mov
pop
inc
inc
outsb
scas
imul
pop
jnp
sub
pop
xchg
push
push
fiadds
out
repz
lcall
cmp
cmp
xchg
inc
dec
xlat
aam
ret
fstpl
jbe
je
add
sbb
lds
movb
aaa
sub
icebp
mov
fidivl
xchg
cmp
arpl
cwtl
cmp
std
cli
roll
icebp
leave
sbb
inc
inc
mov
adc
fwait
stos
sbb
shrl
clc
cwtl
rclb
inc
pop
sahf
inc
mov
dec
or
loope
icebp
in
movl
in
and
mov
mov
inc
dec
pop
adc
shll
adc
rolb
out
std
cld
dec
cmpsb
mov
sub
inc
cmp
mov
je
loop
push
sbb
push
incb
loop
sbb
hlt
sbb
pop
mov
out
sub
addb
inc
lods
icebp
js
fwait
cltd
push
leave
mov
jg
inc
movl
push
icebp
jl
mov
enter
push
popf
add
leave
inc
and
mov
aas
jl
in
inc
mov
mov
mov
mov
push
roll
lods
inc
pop
test
pusha
inc
push
push
clc
sarl
xor
loope
jp
mov
pop
std
mov
outsl
xchg
sbb
jmp
pushf
cmp
push
and
inc
xor
loop
cmpsb
mov
ja
cmp
sbb
jne
jbe
stc
stc
cld
imulb
xchg
inc
lret
shr
mov
jge
and
pop
and
lret
jl
rcr
sti
mulb
lcallw
jge
icebp
fs
jg
pop
sub
mov
xlat
push
testb
push
fxam
ret
rorb
ret
daa
pop
inc
iret
shll
outsl
and
push
mov
dec
mov
cmpsb
fcmovnb
ja
cmpsl
daa
pop
iret
into
inc
push
nop
jns
lret
icebp
or
pusha
cld
cmc
dec
in
lcall
gs
notl
popa
loopne
int
rclb
add
cmp
loopne
dec
or
loop
mov
push
sub
xor
fdiv
xor
fistl
dec
test
out
iret
ret
pop
iret
repz
aad
xchg
pop
aas
add
mov
notl
mov
cmp
cmp
mov
lods
adc
aaa
pop
push
jp
rcll
cmpsb
add
add
fisubrl
push
fwait
xlat
ret
loop
mov
cmp
loop
sbb
cwtl
push
jle
push
mov
mov
inc
jo
xchg
stos
push
testb
mov
fucomip
xchg
mov
mov
fcmovne
jo
loope
notl
jmp
inc
xchg
lret
inc
xor
jmp
nop
fcmovne
lcall
xlat
fistpl
inc
push
xchg
dec
pop
leave
push
frstor
stc
sar
xchg
pop
cltd
das
jae
adc
xchg
push
fwait
pop
jecxz
push
push
adcl
rcrl
rcrl
adc
jmp
arpl
clc
add
add
fwait
popa
ret
mov
loope
scas
mov
push
sub
fidivs
fcmovnbe
int
repnz
cmp
mov
jmp
xor
or
and
icebp
and
xchg
push
std
loop
addr16
xchg
cmp
mov
movsl
sbb
jo
test
pop
fwait
bnd
and
jmp
dec
ds
inc
imul
in
pop
mov
es
leave
sbb
sub
repz
aaa
mov
cwtl
sti
inc
lret
inc
xchg
fists
push
cmp
loop
push
out
fldl
cwtl
rol
adc
cmpsl
mov
icebp
mov
adc
popa
push
lea
ficompl
out
inc
fdivs
lods
inc
add
inc
xor
jo
dec
dec
imull
inc
push
mov
push
jae
push
xor
jp
pop
outsb
push
loop
inc
sti
out
adc
data16
lods
inc
cmp
mov
in
lea
pop
jl
mov
xchg
sti
ret
xor
shll
dec
imul
xchg
pop
jp
std
fs
sub
fcmovnu
xchg
mov
lock
rcr
or
lods
stos
push
sahf
fidivrl
das
xchg
ds
decl
mov
sub
loop
shl
mov
lret
push
out
js
stos
xlat
sti
push
stc
dec
adc
push
jl
dec
lret
fistpll
fnsave
scas
stos
lret
lock
mov
sbb
xor
jp
jecxz
cmpsl
nop
lods
or
aam
mov
ret
iret
repnz
popf
add
cmc
fisttpll
pop
fistps
and
cmpsl
dec
nop
pop
clc
test
lock
xchg
and
inc
dec
mov
es
ror
mov
dec
stos
imul
mov
mov
adc
scas
jge
jo
sub
mov
xchg
aam
shlb
xlat
js
ja
addr16
and
clc
int3
xorb
cmpsb
dec
in
popf
mov
sahf
loope
push
jmp
adc
fwait
lcall
mov
cmpl
pop
lock
pop
lea
cmp
mov
fbstp
xchg
mov
imull
add
xlat
jg
out
iret
pop
pop
stos
xchg
inc
or
xchg
push
mov
push
rol
inc
fisttpl
out
sub
ret
xchg
cld
pop
ja
mov
fildl
cmp
pop
xchg
ret
lea
rcll
xlat
jge
xor
rcrl
mov
fsubs
out
xchg
pop
push
sub
adc
xchg
les
mov
fsubs
fstl
xor
cmpsl
sbb
xchg
int3
rcr
sub
xlat
mov
push
sti
bound
push
or
inc
jl
or
stc
adc
pop
pop
xchg
in
mov
lock
not
int3
in
fpatan
xchg
xchg
hlt
rcll
arpl
insl
int3
or
fcmovbe
repnz
repnz
cmp
cltd
push
in
rorb
insl
inc
inc
fistps
fisttps
push
add
xchg
mov
adc
icebp
in
push
sbb
cmpsb
or
mov
sub
loope
push
adc
mov
pop
cld
rorb
xor
fsubrs
rcrl
outsb
jp
ficompl
pop
mov
outsl
decb
hlt
fstpt
sbb
dec
fsubl
imul
pop
push
pop
push
mov
push
mov
insl
mov
f2xm1
adc
push
push
clc
adc
fcoms
pop
mov
cmpsl
jl
mov
pop
mov
xor
cmp
xchg
std
and
jbe
pop
shl
xchg
fcmovu
fwait
mov
int
xor
fadd
adc
fwait
sub
push
mov
xchg
pusha
pushf
divl
push
ja
fwait
push
mov
in
sbb
jbe
shll
pop
push
les
ds
or
call
or
lds
jmp
movsl
mov
movsb
sub
mov
mov
jns
pop
jp
fldl
ret
mov
lcall
mov
push
mov
mov
jnp
scas
mov
mov
pop
xchg
mov
push
mov
mov
lret
bound
jnp
mov
fcomi
andl
out
mov
fwait
push
push
sbb
pop
mov
push
ficoml
stos
fistpl
movsl
imul
int
xchg
les
loopne
leave
imul
push
adc
add
icebp
pop
cmpsl
or
repz
dec
fsts
ficoml
mov
aad
mov
cltd
rcrb
popf
dec
xor
jecxz
jb
mov
fidivl
rolb
icebp
sahf
fdivr
xorl
push
loop
jmp
sti
sbb
mov
stc
inc
mov
icebp
mov
orb
adc
imul
out
stos
sbb
push
xchg
cmp
jae
ja
outsb
pop
leave
loop
mov
sbb
xorb
rcrl
cli
pop
dec
push
mov
das
mov
pop
out
pusha
xor
xor
scas
and
mov
mov
cli
sti
testl
mov
jns
pop
xchg
sar
aam
nop
sbb
xchg
inc
mov
pop
mov
xor
mov
in
sub
xchg
fildl
pop
add
ret
pop
pop
ret
aad
adc
jge
ret
jnp
xchg
push
addr16
pop
int
push
jmp
enter
loope
xor
shll
add
push
xor
xor
cmpsl
mov
mov
xor
fistps
int3
sbb
lods
rcr
pop
inc
cli
xchg
jmp
pmulhw
push
cwtl
out
push
lcall
cli
fldt
adc
shl
adc
xor
dec
lret
bnd
xchg
mov
push
fldpi
push
or
sub
fcmovnb
repz
in
test
jmp
movsl
lods
lods
sub
frstor
outsl
jno
movsl
fwait
fwait
cmp
mov
lret
scas
cmc
pop
inc
pop
dec
stos
imul
test
iret
ja
popa
xlat
and
js
mov
mov
xchg
jno
mov
rcll
sti
idivb
imul
cmc
mov
xor
enter
jb
in
sbb
mov
mov
aad
xchg
cmp
mov
cli
xlat
xchg
mov
fisttpll
ret
add
inc
shl
pop
push
mov
push
lods
shll
mov
add
cwtl
mov
and
dec
shll
aad
xchg
cmp
sub
out
insb
std
jp
add
dec
jecxz
aad
sti
mov
inc
jl
add
repnz
fisubl
loope
cs
adc
cmpl
test
xchg
mov
mov
in
mov
jo
jne
inc
cmp
mov
sub
test
fwait
insb
cmpsl
push
popl
add
ret
cmp
lods
mov
sahf
pusha
push
int3
push
into
mov
sahf
fcoms
xchg
inc
dec
mov
xchg
pop
in
sbb
sahf
pop
pop
rol
adc
ret
inc
icebp
or
mov
cli
jo
lds
dec
rorl
aad
and
andl
sub
insb
cmpsl
lret
les
stos
add
repz
je
es
push
popf
inc
inc
movsl
nop
mov
sub
rcrb
inc
clc
rclb
neg
adc
mov
jnp
into
aaa
xchg
push
inc
aas
aas
pop
loop
sbb
mov
sbb
cltd
or
lds
fisttps
mov
imul
cmp
mov
mov
ss
xchg
enter
pop
xor
leave
pop
or
iret
xchg
add
pop
push
aam
mov
sub
jno
pop
stos
fwait
ret
call
push
cwtl
push
mov
push
stos
out
add
inc
xlat
in
mov
adc
lahf
jns
or
dec
repnz
dec
push
cli
push
int3
dec
dec
into
push
scas
xor
xor
lret
mov
dec
mov
cmpsb
std
inc
mov
mov
jne
in
orb
mov
sahf
lret
imul
mov
jno
and
and
xlat
lds
xlat
jne
ljmp
movsl
jns
cmp
cmp
pusha
fcoml
push
jo
dec
mulb
bound
sub
jne
ret
addb
fadds
ja
ficomps
xchg
mov
dec
push
jmp
push
outsb
mov
jb
pop
data16
rcll
aam
int
inc
das
shll
cwtl
xchg
dec
repnz
fstps
lds
and
data16
push
lret
inc
fistl
lret
xlat
mov
jb
aad
inc
lock
dec
aas
arpl
inc
xlat
fsub
bnd
pushf
xchg
mov
lret
push
push
mov
xchg
lock
inc
xchg
repnz
jb
call
xchg
push
sub
movsl
je
ret
cmp
mov
mov
adc
mov
pop
jg
mulb
cli
cmpsl
mov
lcall
std
mov
rorb
repz
outsl
mov
aas
dec
cmpsl
xchg
cltd
xchg
pop
jmp
lret
ljmp
fstpl
ret
pop
mov
xlat
xchg
xchg
jle
lds
jb
test
into
or
sbb
cwtl
jnp
fisubrl
pop
lds
pop
fs
fmul
stc
clc
dec
push
adc
pop
xchg
mov
inc
pop
incl
xchg
sub
das
call
cmpsb
loop
jge
icebp
dec
ss
dec
cld
push
push
loope
adcl
loopne
inc
mov
cmp
inc
jmp
mov
jns
outsl
in
leave
sbb
jge
rorb
or
std
xchg
xlat
fs
cmpsl
inc
pop
push
cmp
push
push
mov
inc
mov
mov
xchg
fcmovb
call
pop
cmp
adc
cmpsl
pop
ficomps
mov
dec
mov
add
stos
push
shll
pop
or
test
xor
stc
les
mov
rcr
pop
pop
xor
out
fnstsw
test
insl
rorl
push
in
push
inc
pop
fmul
out
sub
mov
xchg
ficoml
jns
mov
clc
mov
or
mov
fnsave
popa
outsb
mov
cmc
mov
pushf
sbb
jmp
movsl
fnsave
pop
fildl
cmpsb
stos
pop
jbe
rorl
fwait
dec
pop
jns
loope
push
aaa
adc
stos
cltd
xor
lods
and
iret
in
lahf
repz
and
add
mov
sub
cltd
mov
push
mov
add
loope
mov
mov
cmpb
dec
andb
inc
aam
fldcw
cld
loopne
pushf
push
test
xor
imul
push
push
pop
icebp
add
lods
es
mov
dec
mov
ret
xchg
das
ret
push
push
pop
loope
mov
pop
mov
lock
inc
in
dec
or
or
fstl
sbb
mov
push
push
sarb
xor
xchg
jae
xchg
sub
mov
int
sarl
mov
into
lods
mov
mov
aam
sbb
xchg
adc
negb
in
cmp
aas
dec
dec
imul
int
mov
push
or
xor
mov
dec
adc
int
shll
jne
movsl
mov
sub
icebp
idivl
push
sbb
or
xchg
jb
out
shlb
into
push
cmp
push
xchg
sbb
xchg
inc
pop
inc
pop
addr16
stc
inc
pop
ss
int3
div
js
xchg
lock
cli
or
push
cltd
and
jmp
dec
sbb
out
lret
push
push
hlt
nop
out
inc
adc
ret
in
cld
test
jns
std
ja
sarl
xor
imul
mov
loopne
ss
xlat
loope
inc
xchg
scas
rcrl
add
sub
fstps
movsl
lods
stos
pop
xchg
xchg
or
jg
pop
jle
leave
pop
repnz
mov
jo
sti
cmp
cld
mov
dec
pop
ret
add
fwait
mov
pmaxub
xchg
cltd
std
xchg
mov
addl
inc
cwtl
jmp
cmp
pop
mov
aam
ds
ret
int
pop
pcmpgtd
popf
jle
ret
ljmp
mov
or
stc
lds
inc
jmp
icebp
push
cmp
mov
xchg
mov
pop
or
insb
popa
pop
inc
hlt
sub
xchg
insb
push
push
fsubrl
fmul
jl
xor
mov
mov
js
es
imulb
inc
popf
scas
loop
dec
jge
jl
and
mov
scas
repz
sti
iret
jmp
lahf
lret
sbb
popa
ret
inc
adc
fyl2xp1
pop
pop
popa
inc
lret
and
pop
aad
xchg
or
dec
push
aad
aaa
pop
jmp
or
pop
ret
sbb
and
push
mov
xchg
mov
mov
nop
gs
in
pop
mov
fldt
dec
inc
roll
push
pop
movsl
cmpl
lea
inc
call
testb
pop
jp
add
int3
add
inc
lea
mov
dec
and
popf
jb
xchg
fisubl
inc
or
pop
ficompl
sbb
fld
sbb
cld
push
mull
add
pop
pop
sbb
cmp
fwait
pop
mov
or
ret
ficoms
dec
sbb
cld
jmp
imul
rcll
cld
shl
mov
inc
data16
addr16
shlb
addr16
or
imul
xchg
adc
addr16
shl
jbe
daa
push
sbb
cli
leave
mov
mov
stos
mov
xchg
les
movsb
adc
incb
sarb
inc
jae
and
ss
dec
inc
imul
pop
sbb
fildl
push
es
mov
mov
sbb
jne
cmp
add
shl
jmp
scas
in
inc
test
inc
insl
fiadds
and
mov
arpl
in
mov
fldenv
inc
push
mov
add
arpl
jbe
test
cld
mov
pop
push
jl
icebp
test
cmp
push
xchg
cld
adcl
mov
push
imul
rolb
lds
cmpsl
je
add
xlat
xchg
pushf
add
pushf
dec
adc
std
outsl
inc
inc
mov
or
fcomp
dec
out
add
sar
mov
inc
jp
fwait
pop
xor
mov
inc
in
cld
mov
jbe
idivl
shlb
fldenv
fmuls
dec
dec
xor
ret
ror
mov
data16
lds
mov
cmp
inc
jecxz
push
int3
sub
pop
movsl
stc
sahf
and
repnz
lahf
jmp
lods
dec
sbb
inc
stos
mov
and
mov
cmpsb
mov
mov
lods
subl
inc
imul
scas
dec
pop
iret
outsb
imul
call
or
push
dec
and
cmp
aaa
adc
push
stc
dec
aad
pop
outsl
aad
mov
jl
shl
rcr
scas
outsl
push
iret
adc
fisubs
cmpsl
adc
sub
pusha
xchg
incl
and
mov
shl
rolb
pop
or
cmp
mov
sub
xor
push
adc
in
fbld
add
cmp
jge
jmp
dec
sbb
cmc
dec
lea
int3
jmp
test
mov
shll
stos
inc
adc
sub
xchg
xor
pushf
jmp
cwtl
imul
push
in
mov
mov
jmp
inc
mov
pop
rcll
mov
cwtl
or
adc
mov
dec
mov
xor
rcll
arpl
repz
mov
test
jnp
mov
add
push
loop
mov
push
movb
movsl
xor
sub
xchg
pop
das
or
sbb
lock
test
mov
jno
lret
xchg
jl
repnz
out
shlb
jno
dec
mov
dec
jno
cmp
push
lds
sub
repnz
sahf
std
jne
cmp
inc
mov
sti
fcomps
lock
pop
pop
fnstcw
stos
inc
jl
push
shll
pop
mov
jb
je
push
inc
test
or
xlat
sub
mov
pop
ljmp
fistps
pop
mov
xor
and
jle
jp
pop
fidivl
xchg
dec
xchg
je
int
dec
lcall
pusha
push
jecxz
mov
imul
data16
fcompl
and
sarb
scas
out
inc
es
cli
mov
test
daa
pop
mov
xor
in
fimull
and
dec
jo
ja
mov
imul
jl
icebp
stc
push
sbb
sbb
aam
popf
rcrb
inc
dec
lock
jae
inc
in
out
cld
sub
movb
xor
sub
in
xchg
jae
dec
movsl
stos
jnp
outsl
xchg
outsl
push
cwtl
das
add
and
mov
aaa
add
ds
cld
shll
lock
in
push
flds
outsb
xlat
push
and
xlat
cwtl
push
sarl
jl
rcll
fucomi
ret
arpl
add
sbb
int3
repnz
jbe
leave
lods
sarl
lcall
pop
icebp
fcmovnbe
xlat
in
mov
hlt
or
imul
aad
and
or
imul
inc
sti
mov
cmp
jnp
mov
fnstsw
xchg
lcall
sbb
jecxz
addr16
aad
in
fistpll
cmp
jo
out
sbb
jne
cmp
xchg
mov
cmpsb
mov
mov
xlat
xlat
mov
je
test
pop
cmp
push
bnd
mov
sbb
outsb
fistpl
movsl
sub
iret
lea
aad
adc
mov
fldt
imull
in
dec
aad
sub
imul
fisubl
iret
sub
and
add
mov
insl
shl
bound
hlt
es
repnz
movsl
ret
xchg
push
add
inc
jno
in
push
push
imul
adc
sti
cmp
xchg
push
pop
xchg
stc
xchg
icebp
push
lods
rorl
or
push
add
xchg
into
inc
repz
stc
aas
and
mov
ja
jne
fwait
stos
xchg
mov
mov
movsl
cld
inc
xchg
sar
outsl
popa
add
push
loopne
loop
dec
adc
scas
pop
cmp
daa
sub
push
sbb
jl
lods
fistl
shlb
pop
jnp
imul
xor
test
mov
test
add
shlb
and
mov
sub
or
inc
push
mov
inc
jle
ret
int3
loope
pop
pop
mov
push
add
push
add
push
jp
jecxz
push
push
mov
fwait
pop
lahf
jge
push
cmpsl
or
pop
xchg
push
stos
in
cmp
pusha
dec
xor
js
iret
xchg
outsl
adc
mov
jne
imul
divl
mov
sub
adc
push
xchg
mov
add
fsubl
movsl
icebp
mov
fdivrl
mov
inc
fldlg2
mov
sub
jmp
dec
call
mov
out
scas
not
setnp
mov
aad
add
xchg
ss
cmp
negl
fisubl
lret
add
movsb
nop
shrb
pop
inc
mov
lcall
cmp
ficompl
stos
movsl
inc
mov
fcoms
jae
mov
mov
cli
cwtl
fidivl
inc
cmp
call
lret
lods
rcrl
int
or
ret
jae
lds
cmpsl
notl
ret
mov
repz
fwait
ret
ret
scas
xlat
stos
cmpsl
daa
jo
leave
sarl
push
inc
mov
xchg
lret
stc
fabs
jo
sbb
mov
cmpsl
outsl
add
sbb
push
cmc
aas
shrb
cld
cmp
ffreep
cmp
and
inc
dec
cmp
lock
add
sub
adc
rcl
out
pop
pushf
sub
arpl
out
imul
lahf
js
add
stc
mov
mov
cmpsl
in
in
pop
jns
push
push
sbb
shlb
xor
jbe
nop
inc
mov
jecxz
mov
out
testl
data16
scas
or
hlt
lret
mov
or
xchg
push
pop
inc
in
movsb
inc
cltd
iret
cltd
or
mov
in
rcl
mov
xchg
shrb
pop
push
rcr
or
popf
jno
imul
bt
mov
pop
in
stos
inc
pop
jecxz
push
aaa
add
push
jle
pop
sbb
mov
lahf
and
fsubr
xchg
leave
or
leave
xchg
mov
mov
out
jb
sbbb
pop
inc
mov
xchg
jp
adc
xchg
cwtl
push
loopne
icebp
inc
fdivr
adc
xchg
add
test
icebp
add
xchg
fstl
loopne
in
cmp
pop
fwait
add
or
stos
out
lods
insb
push
fisttpll
xchg
pop
and
inc
repz
and
je
lcall
ja
or
rol
je
xchg
push
sbb
sub
xchg
add
mov
pop
xchg
mov
cmp
xchg
jo
pop
fs
mov
and
adc
push
fld
or
mov
fcomi
orb
ret
mov
mov
mov
lahf
popf
add
mov
xlat
xchg
inc
jae
pop
adc
sti
pop
sbb
popa
or
push
ret
inc
mov
jae
add
scas
icebp
imul
imul
int3
or
mov
insl
adc
cli
pop
je
mov
imul
jmp
add
or
hlt
jp
cli
stc
jns
scas
mov
jne
jns
stc
ja
je
xchg
aad
iret
sti
sub
inc
adc
mov
cmpsl
das
incb
popa
cltd
and
cmpsl
jno
or
mov
push
mov
inc
xlat
scas
sbb
icebp
and
popf
xlat
mov
movsl
xchg
jp
pop
insl
sbb
in
into
add
pop
inc
movsl
test
rcr
scas
or
inc
or
in
divl
xor
popl
sbb
dec
cld
repz
inc
fldt
jbe
daa
or
pop
ret
or
pop
imul
pusha
push
add
negl
ss
movsl
add
mov
loop
pop
aad
xlat
jp
jno
pop
adc
or
jmp
push
xor
shl
push
cmp
xchg
sbb
pop
xchg
push
imull
je
and
les
or
xchg
test
lret
xchg
pop
adcl
jmp
lods
das
push
xchg
sbb
pop
dec
add
lret
lea
pop
loope
jb
fimull
movsl
pop
sbb
and
ret
mov
mov
pop
jno
iret
sbb
sbb
stos
stc
mov
mov
inc
adc
push
adc
xlat
jp
sti
push
xchg
cli
sbb
xor
push
adc
mov
mov
nop
xor
inc
ljmp
or
insb
dec
dec
ja
inc
inc
jl
sub
cmp
jge
xlat
sub
mov
aam
inc
push
mov
out
adc
adc
bound
orl
shlb
enter
push
fcmovbe
cli
sahf
sub
add
inc
cmpl
testb
rorb
push
mov
inc
mov
rcl
mov
pop
fstpt
fwait
into
mov
mov
lods
icebp
mov
mov
or
scas
je
test
ficomps
xchg
fsts
pop
call
sub
lods
sbb
pusha
pop
mov
sarb
pop
cltd
repnz
enter
cwtl
jge
mov
inc
jmp
das
shll
add
imul
lret
or
int
sarb
pop
sarl
lods
fdivrs
and
xchg
sahf
leave
or
lret
test
xor
push
stos
push
imul
inc
ljmp
fisubl
orb
mov
fistpl
cwtl
fcmovnu
mov
cmpsl
cmp
xchg
cs
push
cwtl
popf
inc
shlb
inc
stos
orl
aad
or
xlat
loop
aad
inc
adc
test
mov
xchg
inc
xchg
xchg
xchg
pushf
mov
in
dec
push
push
lahf
stos
jo
dec
adc
icebp
push
ja
lret
pop
out
push
fcomp
add
fidivrs
ja
mov
cmpsl
ss
fisttps
out
xor
xchg
or
xlat
clc
loop
dec
adc
mov
sub
int
dec
xor
ljmp
out
add
movsb
pop
out
jbe
mov
jb
insb
jmp
movsl
dec
sbb
nop
and
jmp
push
pop
jl
adc
ss
mov
cmc
add
gs
dec
and
aad
stc
pop
das
outsl
lods
dec
repz
lock
push
sbb
movsl
sub
cltd
push
fisttpl
sti
enter
out
xchg
inc
push
dec
inc
jmp
sar
cmp
jnp
in
fwait
adc
mov
dec
pop
jnp
shlb
lds
mov
repnz
lahf
jle
cmc
and
xchg
imul
repz
cltd
pop
xor
sbb
push
adc
xlat
xor
pop
mov
and
in
lret
jg
fnsave
imul
mov
and
into
sbb
movsl
lahf
in
out
sbb
cmp
scas
push
dec
push
jg
or
pop
lods
lret
adc
mov
inc
push
jmp
lret
outsl
pushf
outsb
and
add
pop
push
je
jmp
outsl
sbb
ds
lcall
scas
inc
cli
mov
xchg
inc
jl
frstor
sbb
and
sbb
mov
lods
ljmp
sbb
inc
mov
movsb
leave
lods
pop
adc
mov
add
movsb
xchg
nop
in
adc
cs
push
cltd
mov
dec
sub
fstl
sub
test
aas
je
sbb
jl
lahf
repz
inc
into
adc
ja
rcl
mov
fwait
loope
push
mov
jg
or
push
jge
xchg
inc
cmpsb
in
test
sbbb
ret
stos
cmpsb
imul
popf
xchg
xchg
scas
enter
pop
stc
mov
inc
ret
aad
in
imul
push
inc
fildll
sub
stc
xchg
mov
aam
pop
xchg
xchg
push
dec
fdivrl
test
adc
cmp
cmp
ficompl
ret
je
adc
jge
jo
mov
mov
sbb
pop
push
xchg
pop
sub
rolb
mov
call
push
pushf
mov
mov
sbb
push
jge
sbb
xor
xchg
sub
in
mov
adc
test
sarl
push
jns
pop
repnz
clc
push
inc
lahf
xchg
pop
loope
lahf
out
or
push
adc
lret
jo
jne
jl
ffreep
or
daa
sub
movsb
insb
inc
sbb
jle
idivl
fsubrs
outsl
adc
jno
inc
dec
mov
out
push
mov
movsb
loopne
es
xchg
arpl
dec
or
iret
sbb
dec
mov
loope
repnz
inc
and
jecxz
push
jecxz
mov
push
xlat
mov
mov
repnz
fstps
cmp
pusha
cmpsl
fcmovbe
xchg
out
sbb
cmp
jp
adc
inc
sti
movsl
pop
add
leave
push
jbe
addr16
lods
mov
in
mov
aaa
outsl
xchg
fcmovnu
mov
inc
loope
fsts
xchg
and
repnz
mov
push
xlat
cmp
cmp
push
dec
mov
sub
pop
lahf
fwait
sbb
push
add
jae
insl
mov
pop
sarb
xchg
mov
xchg
enter
and
fcmovnu
scas
inc
icebp
rorl
jl
out
xchg
cmp
popa
push
pushf
lea
mov
xchg
stos
xchg
lcall
jecxz
mov
int
in
xchg
loope
out
cmp
leave
fstpt
pusha
fwait
rorl
sub
and
stc
push
mov
mov
mov
cmp
dec
push
rcll
sti
out
adc
push
ss
inc
loop
test
cmp
adc
mov
mulb
jae
mov
das
clc
repnz
jge
icebp
mov
pop
dec
xor
xlat
mov
aad
dec
stc
xchg
loopne
cmpsl
jge
lahf
insb
xor
jbe
mov
push
mov
insl
insb
aad
rcrl
sub
pop
xchg
xlat
mov
fisubrl
pop
jecxz
or
mov
xchg
mov
mov
cmpsl
or
mov
shl
mov
and
fbstp
clc
inc
mov
mov
jecxz
jmp
sti
jmp
inc
mov
sahf
movsl
fisubrl
lcall
pop
push
jb
jnp
les
inc
mov
inc
mov
jmp
inc
xorl
and
pop
push
out
movsl
fistpl
popa
jl
pop
rcll
icebp
into
xchg
cmp
adc
cld
fwait
add
mov
lea
imul
inc
ds
out
jmp
inc
in
js
fcmovnb
pop
mov
aas
inc
fstpt
mov
rcrb
out
mov
push
in
ret
and
jecxz
or
shl
out
mov
ljmp
adc
inc
mov
jns
ficompl
movsl
fnstsw
push
rclb
mov
add
inc
xchg
insl
push
mov
pop
in
pusha
jmp
ret
inc
push
mov
lahf
jae
ss
sarl
inc
dec
das
xor
sarl
pop
jb
and
scas
inc
xchg
inc
sti
lret
cmp
jle
int
in
cmpsl
test
mov
adc
inc
ljmp
mov
add
lds
pop
jmp
sub
xchg
shrb
inc
inc
loopne
jnp
pushf
mov
inc
or
iret
ret
cmpsb
cmpl
adc
xchg
fwait
insb
repz
mov
jg
and
jo
loopne
imull
xorl
repz
mov
jo
mov
cmp
mov
adc
ja
xor
sub
adcb
stos
sti
cli
xchg
sbb
inc
cmp
lret
mov
fisubs
fcmovnbe
mov
xlat
repnz
and
jle
sbb
cs
pop
rcrb
or
fwait
sbb
lock
les
mov
xchg
jno
dec
xchg
push
jg
out
in
cmc
inc
outsb
popa
cvtdq2ps
notl
mov
jmp
in
nop
pop
mov
jge
loopne
lahf
andb
icebp
pop
fnstenv
fcomps
pop
loop
cmp
js
cmpsl
or
inc
mov
imul
cmp
or
or
jecxz
fldt
test
pop
or
xchg
inc
xchg
pop
cmpsl
cld
xchg
lods
or
xchg
ret
inc
dec
pop
sub
lahf
xorl
stos
cltd
jae
xor
loope
out
inc
jno
add
push
pop
arpl
insl
sbb
xlat
lahf
cmc
sbb
out
frstor
mov
sbb
lcall
cltd
sbb
jp
lret
pop
jnp
into
jne
ficoml
mov
incb
lea
xlat
lds
jne
lret
mov
xlat
jp
jmp
jecxz
scas
pop
pop
les
xchg
mov
negl
push
sbb
mov
cmp
inc
cli
divps
adc
movsb
fistpl
sbb
xchg
je
sub
fstps
decl
hlt
lahf
push
insl
or
stos
cmp
rcl
mov
in
dec
jle
cmpsl
fcmovb
xchg
inc
leave
cmp
pop
ss
repnz
aam
mov
sbb
mov
lods
xchg
push
push
jne
xchg
fcomip
das
fwait
pop
and
push
ja
mov
shl
adc
in
add
lret
stos
imulb
and
mov
cmp
mov
add
mov
je
jns
lret
inc
jp
xorb
mov
repz
pop
adc
adc
xor
xlat
cmpb
xor
enter
std
adc
inc
cld
xchg
daa
test
and
in
dec
std
outsl
push
push
mov
cld
iret
mov
push
push
adc
jbe
add
or
and
xchg
cli
xchg
and
xchg
insl
inc
repnz
pop
leave
jne
mov
adc
mov
dec
stc
hlt
fidivrs
jno,pn
daa
mov
or
cld
dec
iret
cmc
cli
sbb
sub
inc
test
es
sbb
icebp
mov
add
aad
push
inc
ret
cmpl
mov
mov
stos
mov
xchg
or
fnstsw
pop
mov
data16
adc
idivb
cmp
out
jo
sbb
rclb
sub
mov
mov
xchg
adc
sbb
das
mov
sub
xchg
fildll
daa
push
call
sub
xchg
lds
mov
mov
inc
movb
mov
mov
pop
fcmove
aad
ja
insb
mov
push
xchg
sbb
inc
xchg
or
cmp
xlat
inc
push
sbb
pop
shlb
xlat
xchg
jl
cmp
sti
mov
mov
or
or
adc
les
mov
xor
fisubl
inc
add
fs
stc
inc
je
mov
or
jmp
scas
inc
test
and
cmpsb
pushf
mov
mov
push
imul
jb
fsts
push
stos
pop
shrl
lods
aaa
mov
mov
hlt
pop
rorl
iret
test
xchg
jae
pop
xchg
add
inc
inc
mov
mov
insb
addb
imul
les
xlat
stos
cmpsl
or
mov
loope
sub
pop
or
xchg
inc
imul
sti
out
daa
daa
int3
xchg
sbb
flds
and
fisubrl
pop
pop
jns
mov
arpl
and
imul
cltd
dec
pushf
push
leave
pop
sbb
je
popa
es
mov
sub
sbb
jge
cli
lret
jmp
mov
inc
sbb
icebp
or
popa
rcrl
idivl
test
lea
dec
out
fdiv
cmp
xlat
adc
mov
mov
imul
les
push
stos
sub
adc
outsb
mov
jae
repz
jo
push
je
inc
inc
dec
mov
in
pop
add
cmpsl
xchg
iret
sub
popl
inc
iret
push
fistl
inc
cmc
sub
cmpsb
xlat
lock
out
inc
scas
push
dec
sub
cmpsl
and
sarl
pop
fstps
push
dec
aaa
inc
pop
pop
lcall
daa
std
sub
je
repnz
push
das
inc
and
xlat
jl
in
out
xchg
fistl
cmp
outsl
push
dec
neg
push
mov
in
daa
xchg
movsl
xor
add
incl
mov
jmp
sub
pop
sbb
test
imul
dec
loop
or
ficoms
and
lcall
std
xor
mov
or
cmc
mov
add
and
pop
stos
jns
push
xchg
jno
ret
pop
ss
sbb
sub
sub
shl
sbb
xchg
sbb
or
adc
leave
lret
icebp
fnstenv
loop
orb
ljmp
push
pop
sub
test
arpl
add
xchg
leave
test
xchg
xor
test
jl
ljmp
push
and
push
jns
test
xchg
pop
push
fcoml
adc
rcll
insb
mov
cmp
int
xlat
lret
cltd
das
fnstenv
cltd
fists
iret
mov
and
pop
dec
sub
mov
mov
ret
sarb
inc
mov
pop
outsl
test
add
shrd
je
dec
inc
daa
ret
fstl
rcll
sbb
sbb
movsl
pop
lods
rcl
fwait
and
stos
lock
mov
inc
push
jl
cmp
mov
mov
jae
pop
sub
jp
andl
inc
in
pop
jecxz
daa
test
and
idiv
scas
out
inc
loopne
in
adc
xor
ret
xlat
xchg
push
xchg
cmpsl
push
fisubrl
nop
repz
repnz
shl
pop
inc
daa
lock
not
mov
push
scas
insb
sub
lret
rcrb
testl
icebp
sub
shl
jnp
and
mov
lahf
scas
sar
inc
cwtl
in
fsubr
aam
idivb
sub
cli
out
and
test
div
cltd
popf
leave
mov
add
popa
cwtl
pop
and
out
push
mov
dec
cmp
aad
dec
test
jnp
pop
shl
inc
scas
dec
xchg
jl
sahf
lock
jge
lret
cmc
in
push
sti
in
imul
out
jne
lock
fldcw
icebp
inc
mov
mov
enter
sbb
mov
insl
mov
repnz
xchg
adc
sarb
fstps
add
add
ljmp
push
es
cwtl
lret
out
std
addr16
js
cli
leave
xchg
add
negb
popa
jg
push
mov
xchg
push
loope,pt
cwtl
sub
cld
and
cmp
jae
es
les
data16
cwtl
stos
out
jnp
divb
test
fwait
lret
inc
int3
push
ljmp
mov
lods
test
sbb
lret
jle
repnz
test
fwait
roll
lret
gs
stos
pop
scas
leave
imul
lock
cmp
sbb
dec
ds
xchg
lods
mov
pop
or
mov
movsl
inc
jb
aaa
jmp
push
into
sarl
cmpsl
scas
cmp
mov
or
jl,pn
movsl
es
popf
in
nop
mov
cmp
add
adc
lahf
loope
pop
adc
or
rcll
xchg
aad
jle
pop
ret
out
adc
lods
push
repnz
pop
jge
jp
xlat
scas
xor
cmpsl
sbbb
daa
pop
cli
xchg
lods
mov
mov
jl
dec
fadds
in
addr16
mov
test
mov
or
subb
mov
outsl
xor
push
push
cmc
pop
int3
hlt
ret
xchg
std
sbb
dec
pop
pop
ret
and
lret
xchg
jp
scas
addr16
adc
es
cli
leave
pop
inc
mov
test
dec
into
roll
fcoml
mov
push
arpl
jge
push
jmp
or
xchg
push
push
lret
sbb
add
jnp
sarb
lods
daa
outsb
loope
cmpsl
loope
xchg
xlat
ficoms
test
xadd
ds
orl
fcmovnu
mov
fldenv
cmp
push
cmp
pop
xor
ss
push
push
lods
or
add
aad
fbld
push
and
je
inc
jne
cmpl
popf
mov
xchg
lods
mov
imulb
and
sbb
xor
cmova
fildl
iret
mov
xor
jb
fwait
les
xor
es
mov
insb
sub
popa
mov
lock
icebp
xor
push
mov
adc
stos
mov
sub
cwtl
sub
adc
jns
pop
rorl
ret
dec
cmpsb
mulb
hlt
loope
es
add
in
add
shl
or
jae
cmc
push
in
neg
push
mov
enter
sbb
mov
andb
lds
dec
cmp
fs
roll
shr
cwtl
cmp
pop
mov
mov
xor
mov
sbb
pop
and
cwtl
scas
mov
fldl
fstps
push
loopne
popf
int3
rcl
cmc
movsl
dec
sti
lea
pop
cwtl
pop
into
fisubl
xchg
pop
pop
out
repz
sahf
push
inc
jne
repnz
inc
push
outsl
test
mov
flds
fcmovne
insl
loopne
adc
push
leave
frstor
cmp
jle
mov
fadds
pop
cmp
mov
pushf
push
repnz
push
insl
out
clc
cwtl
pop
xor
in
sbb
dec
lcall
mov
pop
inc
xchg
push
inc
cmpsb
mov
fs
add
insl
add
push
out
pop
sub
pusha
inc
inc
repnz
push
sarb
ret
adc
mov
pop
sub
insl
repnz
xor
jge
xchg
bound
xchg
divb
icebp
aas
xor
fdivr
lret
jae
icebp
lret
and
shr
dec
mov
rcll
notl
cmp
ret
jns
into
ja
ja
adc
scas
xchg
sub
adc
pop
cli
in
jl
push
ficoml
push
inc
xchg
aad
jns
push
outsl
sbb
ljmp
cmp
imul
lret
xchg
into
cmpsl
jle
sbb
in
lods
mov
lds
iret
push
orb
mov
xchg
ret
xchg
jae
sub
call
xchg
push
push
inc
adc
shrl
ljmp
outsl
scas
fs
popf
mov
addb
outsb
cwtl
sbb
enter
mov
dec
and
and
sbb
aas
and
psadbw
insl
outsb
test
sub
out
lcallw
testb
test
imul
and
sub
push
adc
inc
or
push
jle
aaa
mov
loope
adc
push
shrl
rclb
aaa
cmc
push
mov
pop
jno
inc
mov
clc
repnz
loopne
push
psubusw
mov
rclb
stos
pop
fwait
push
shrl
jecxz
adc
sub
cs
or
adc
ljmp
cld
mov
add
fs
imul
testb
mov
repz
pop
loope
repz
or
call
xchg
mov
mov
ret
mov
xchg
or
xchg
inc
and
daa
jbe
dec
mov
enter
jge
xor
fisubrs
lret
loope
ret
mov
push
or
xchg
in
in
inc
mov
fsubrl
inc
ficoml
pop
lods
test
inc
clc
and
inc
and
outsb
add
shll
adc
stos
push
rcll
mov
cli
sbb
ljmp
push
push
push
aad
add
in
pop
and
hlt
lea
sbb
push
cmpsl
sbb
cmpsb
mov
or
popl
push
icebp
arpl
mov
inc
arpl
lret
pop
test
inc
inc
repnz
xchg
adc
jmp
mov
mov
ss
add
xlat
mov
push
cmpsl
mov
test
fldl
ds
cwtl
dec
fwait
sub
adc
cmpsb
pop
test
sti
mov
cmpsb
ss
ficoml
test
fxam
mov
dec
jge
imul
lods
outsl
xlat
lret
repz
pushf
in
sub
mov
sub
out
push
push
mov
mov
gs
xchg
jge
xchg
nop
addr16
or
sub
and
lret
lret
xchg
xchg
xchg
mov
sub
fwait
xchg
ss
mov
inc
adc
push
nop
adcb
mov
cmp
loop
mov
shl
movsl
sarl
jno
test
jl
shl
int3
lock
cli
cmp
mov
insl
mov
inc
sbb
js
scas
in
stc
pop
jb
in
inc
in
shlb
jecxz
push
inc
test
sti
aad
pop
push
mov
in
xchg
jo
xchg
es
xor
jmp
daa
mov
ret
sbb
hlt
and
inc
cwtl
inc
jns
or
xlat
insb
insb
cld
shll
dec
mov
addr16
inc
jecxz
clc
es
push
in
jge
inc
in
faddl
insb
movsb
movsb
call
lcall
xchg
test
jo
adcl
mov
push
add
les
loopne
mov
jnp
jle
aad
loope
inc
std
sub
leave
jmp
xor
bound
push
push
dec
dec
pop
adc
inc
movsb
pusha
or
imul
ret
push
repz
or
popf
sarb
icebp
mov
mov
and
lcall
inc
adc
pop
mov
sti
std
mov
clc
pop
push
imul
mov
aaa
scas
inc
inc
shrl
pop
add
pop
shl
in
scas
ret
mov
daa
push
push
rcl
lea
repz
and
outsb
push
repz
mov
bound
push
mov
xchg
xchg
add
xchg
mov
xor
leave
pop
push
mov
sub
push
xchg
sbb
jl
ficoml
mov
pusha
xor
or
imul
popa
or
xchg
inc
cmpb
jo
mov
ja
dec
ficoml
xlat
imul
xorb
add
repnz
mov
push
add
scas
xchg
mov
jmp
push
lock
jno
into
aaa
dec
lods
insb
mov
es
shl
push
out
lret
sbb
aas
out
adc
ret
std
pop
loope
cmpsl
jno
popf
mov
gs
fisubl
pop
inc
jmp
bound
pop
sti
mov
sbb
testl
push
mov
jno
mov
fidivrl
push
call
les
xchg
fcoms
pop
adc
insb
pop
jl
lods
add
sub
loop
push
outsb
sub
mov
inc
call
shrb
xor
xchg
and
icebp
lds
shlb
dec
outsl
jg
mov
mov
cmc
xchg
jg
or
test
inc
cmp
pushf
dec
nop
movsb
ror
outsb
dec
loope
mov
std
xchg
xor
cmp
icebp
in
inc
repnz
out
mov
fistpll
jbe
rorb
xchg
jle
dec
rorl
mov
loopne
or
ret
imul
dec
mov
pushf
dec
jbe
fisubrl
sbb
cmpsl
dec
inc
pop
daa
dec
mov
je
xchg
faddp
shl
ret
fsts
icebp
pop
mov
mov
loop
js
inc
xor
pop
inc
jb
xchg
push
arpl
dec
push
rclb
cmpsl
push
adc
dec
push
ficoms
cmpsb
into
push
sub
daa
cmpsl
rcrl
push
pop
add
jp
cmc
cmp
sti
shll
jb
lock
int
push
jno
dec
sbb
ficoml
fstpt
ja
call
pop
les
add
aaa
pop
clc
pop
cmp
jecxz
jp
decl
test
out
test
pop
std
inc
sar
leave
adc
out
cmpsl
daa
loopne
jo
mov
jns
cmc
test
aad
adc
test
inc
ret
je
lahf
dec
push
decb
pop
fwait
pop
imul
movl
pop
jno
pop
nop
push
loope
ficoms
jge
jecxz
dec
or
cmp
jl
inc
stc
cmp
orl
in
jo
jne
adc
outsb
test
nop
out
adc
orps
xchg
jge
movsb
mov
repnz
scas
fsts
shr
sti
mov
sbb
jb
push
lahf
adc
scas
mov
or
dec
sub
test
inc
sub
repz
inc
aaa
mov
scas
test
loop
push
add
mov
jnp
xlat
popl
mov
cli
xchg
imulb
dec
leave
and
ret
loope
xchg
push
addb
pop
and
inc
repz
in
inc
fcmovnu
jmp
and
lods
mov
ss
ds
ds
adc
push
aam
fildl
sbb
sub
push
dec
mov
lock
fistpl
insb
xchg
fistl
sub
dec
test
push
imul
ror
sti
fldl
or
xchg
sub
mov
rclb
pop
mov
out
fcomps
sub
insb
rclb
cltd
mov
mov
xchg
push
jmp
add
push
dec
ficomps
push
pop
inc
mov
imul
rcrl
test
xchg
sarb
nop
popf
fld
sbb
rcll
cld
mov
or
and
mov
insb
pop
das
sub
gs
inc
mov
jne
imulb
dec
in
repz
ret
jo
xchg
jae
inc
negl
jp
inc
inc
push
xor
je
sbb
lods
jae
test
xor
push
insb
cs
fimull
fndisi(8087
jbe
xchg
push
ficompl
lods
push
inc
mov
sub
xor
sub
ficoml
shlb
jb
add
and
popf
std
push
test
xchg
mov
fadds
rorb
repnz
sbb
rolb
push
bound
push
mov
jbe
lods
push
mov
fdivl
lahf
divb
shl
dec
inc
test
jg
loopne
fcmovne
jmp
ljmp
testb
add
push
or
jg
shrb
and
insb
stc
aam
mov
repz
lahf
pop
jmp
adc
in
jmp
jge
sub
fimull
repnz
xchg
push
adc
js
push
repz
pop
and
daa
inc
cmc
testl
insl
cli
dec
pop
add
or
mov
icebp
inc
jne
sub
pop
sbb
dec
jle
stos
mov
add
pusha
dec
outsl
mov
mov
roll
xor
jecxz
les
test
stos
lcall
stc
out
push
jge
lods
xlat
dec
iret
push
clc
adc
imul
xlat
push
sub
cld
mov
ficompl
sub
jge
test
mov
inc
pop
cmc
inc
push
lahf
pop
testl
ja
push
push
negl
push
push
dec
lret
es
insl
pop
inc
xor
or
popa
lds
xlat
jg
clc
inc
negb
leave
loope
jge
inc
xlat
repnz
rol
push
sbb
xlat
xlat
imul
aad
fyl2x
pop
lret
fldcw
fcmovnb
sti
andb
fisubrs
mov
rcrl
mov
mov
out
idivl
inc
sti
sbb
mov
aaa
fcoms
pusha
data16
sti
out
push
mov
jmp
jb
sbbl
addb
fwait
and
aam
cmp
or
lock
mov
mov
fildl
fwait
inc
mov
adc
push
aaa
jnp
xchg
clc
cmc
jl
push
jmp
jp
or
fisubrl
mov
repnz
sbb
loope
push
hlt
cmpsl
out
adc
xor
rcll
mov
lcall
fisubs
inc
ret
sbb
lods
fdivp
cmpsl
cmpsb
jbe
pop
dec
addr16
mov
inc
jl
pusha
aad
cmp
fwait
xchg
mov
mov
test
repnz
adc
jb
test
sarl
jne
add
and
sahf
inc
or
jmp
scas
insl
les
dec
out
mov
cwtl
mov
push
xor
stos
jns
cld
xor
pop
jmp
sbbl
in
aad
dec
imul
stos
and
shlb
mov
aad
sbb
jne
mov
jno
mov
dec
repz
inc
ret
mov
lods
and
push
and
dec
xlat
and
repz
cmp
aaa
div
negb
lret
dec
inc
push
popf
mov
mov
rcrb
dec
inc
in
add
and
les
js
adc
mov
add
je
sbb
xor
lods
loopne
add
popa
or
push
inc
cmpsl
ficoml
lcall
scas
push
jmp
rcrb
jecxz
icebp
in
adcb
fidivrl
or
xchg
jb
daa
int
sub
sti
lds
fstps
js
jg
cmp
stos
push
add
jbe
das
push
jg
mov
jnp
mov
sub
rcr
cs
insb
mov
cmpsl
dec
loop
mov
cmpsl
pop
dec
mov
xchg
repnz
leave
stc
cld
dec
sbbl
pop
dec
es
shrl
ja
clc
jp
out
push
push
mov
pop
add
adc
ds
es
xchg
ljmp
call
es
fs
aaa
pop
fistpl
sahf
lcall
inc
fcmovnu
test
repnz
cmpsl
repnz
rolb
xchg
mov
push
add
sbb
mov
or
adcb
inc
mov
mov
fistps
jle
lea
pop
popa
push
inc
hlt
inc
inc
push
leave
pop
adc
dec
jnp
in
in
testl
dec
bnd
sti
sbb
call
and
push
repnz
repnz
pop
dec
bound
push
mov
sub
lods
repnz
fwait
mov
test
xlat
js
addr16
cltd
fildll
je
rorb
push
addl
mov
dec
inc
lock
xor
dec
out
jecxz
stos
sub
rcrb
xchg
imul
es
add
xor
jo
pop
push
popa
push
testl
or
sbb
int
mov
les
inc
mov
loop
sub
or
dec
and
in
pop
je
test
std
sbb
mov
fwait
lret
lea
mov
mov
cmpl
mov
pop
xchg
aas
bnd
pop
out
mov
mov
fstpl
push
popf
lret
jnp
jnp
jmp
inc
rclb
mov
aad
push
xor
lret
jo
cltd
add
cmc
push
xchg
push
mov
out
test
adc
inc
sub
data16
andb
add
inc
jmp
dec
sbb
and
scas
sti
lds
push
pop
jne
add
jbe
adc
pushf
cltd
in
adc
ss
pop
xchg
test
adcl
pop
mov
sub
cld
push
orl
rcll
aam
movsl
cmpsl
fdivs
push
cmp
add
out
cmp
decl
pop
fimull
test
aad
inc
sub
vphaddwd
mov
test
icebp
adc
jb
mov
adc
inc
gs
push
pop
mov
cmp
push
cs
pop
cmpsl
adc
sub
rclb
popf
imull
fsubl
addl
insl
cmc
mov
das
jecxz
or
mov
xorb
movsl
nop
xor
into
les
jmp
popf
jnp
mov
scas
rcrb
loop
push
pop
pop
xchg
dec
pop
mov
movsl
test
push
pop
pop
inc
adc
mov
push
mov
loopne
out
xchg
jno
in
aaa
sti
lret
mov
rolb
out
in
ss
rclb
xchg
jns
sbb
icebp
adc
mov
xchg
pop
pop
pop
push
int
pop
jae
mov
test
fwait
stc
es
or
cmp
in
adc
stos
cltd
dec
sti
sti
ret
cwtl
sti
xchg
jl
add
lds
lock
xchg
and
and
mov
xor
lds
loope
push
lcall
sbb
in
fbstp
jecxz
sti
push
mov
xlat
push
enter
cltd
jae
xchg
mov
ljmp
outsl
aas
jnp
arpl
add
sbb
fnsave
jae
inc
scas
xchg
adc
popl
xchg
faddl
mov
das
pop
fidivrs
mov
fdivrl
mov
popl
mov
ds
lcall
aaa
loope
cli
lock
xchg
jg
push
mov
push
xchg
pop
xchg
push
bts
cmp
ficoml
or
pusha
test
aad
push
cltd
jne
sbb
scas
mov
or
aad
and
jmp
ret
mov
andl
and
or
jae
es
adc
jno
cmpsb
xchg
mov
addb
xchg
lret
dec
inc
xchg
loopne
pop
xor
ja
dec
push
data16
nop
dec
cmp
std
lret
fadds
xchg
mov
mov
rcrb
faddl
outsl
push
mov
std
mov
or
sub
xchg
cli
mov
mov
cltd
jno
arpl
mov
cltd
or
jmp
cltd
mov
call
push
aaa
xchg
jno
fsubs
xor
je
mov
mov
stos
inc
cltd
add
int
xchg
sub
incl
pushf
pop
iret
inc
inc
push
or
xchg
pop
dec
shr
sbb
or
addl
push
cmp
lret
dec
pop
sbb
add
sub
push
ror
ficompl
ror
push
iret
add
mov
bnd
imul
xor
push
jae
sbb
cwtl
cmc
popa
push
ja
jle
hlt
rcr
aam
mov
repnz
cli
jb
popf
je
jmp
clc
push
fistl
xchg
mov
adc
inc
cmp
pop
int
icebp
rcr
sbb
fdiv
xor
faddl
xchg
push
stc
js
and
mov
push
pop
mov
mov
jb
ljmp
xor
fcmovnb
xchg
dec
mov
das
stos
fsubr
jmp
aam
cmpsl
and
je
test
xor
addl
mov
inc
mov
filds
add
pop
mov
mov
test
stc
sub
notb
inc
repnz
pop
lds
add
in
cmpl
dec
pushl
pop
fistpll
xorl
rcl
sbb
xlat
fld
adc
cwtl
dec
aam
int3
lcall
xlat
ret
xchg
icebp
shrl
jno
lret
insb
adc
sbbl
sub
fisubrl
vxorps
pop
cmc
shl
xchg
fistpl
cmc
fs
imul
in
mov
in
mov
repz
pop
pop
mov
mov
outsl
and
xchg
pop
into
scas
cli
fistl
jne
loope
jbe
movsl
cmc
jb
mov
decl
clc
add
inc
mov
arpl
movsl
inc
inc
push
sbb
rcll
mov
hlt
pop
push
pop
push
pop
cltd
test
cmp
mov
mov
mov
loope
lods
push
fxch
ror
test
mov
jmp
sub
push
in
mov
sbb
out
fwait
icebp
cmp
pop
add
fists
jno
lcall
lods
repnz
xlat
jp
jecxz
call
sbb
jae
xchg
push
push
insl
mov
jno
push
cli
mulb
mov
rcl
xchg
iret
ja
sub
ljmp
lret
inc
je
jmp
mov
adc
push
inc
lods
pop
imul
xlat
pop
ja
imul
in
lret
dec
repnz
loope
jmp
pop
pop
loope
imul
pop
scas
inc
inc
insb
jl
insb
js
add
adc
cmc
shl
test
add
pop
jge
fiadds
mov
pop
lods
repnz
fiaddl
ret
xrelease
outsl
sbb
test
sub
mov
inc
std
cmc
dec
sbb
decb
xlat
ret
shl
repz
sbb
pop
mov
inc
push
popa
cmc
pop
fldl
lcall
daa
jle
vmovdqa
imul
popa
popa
cli
pushf
mov
xchg
inc
imul
call
adc
pop
shll
mov
sub
repz
out
add
push
mulb
mov
inc
test
scas
inc
adc
mov
stos
in
repnz
aaa
leave
sarb
add
inc
xchg
mov
lret
jno
jecxz
testl
sub
or
icebp
dec
addr16
xchg
scas
enter
stos
iret
pop
loope
xchg
into
js
dec
mov
clc
repnz
movsl
int3
adc
dec
stos
repz
loope
in
inc
testl
pop
rcll
push
icebp
fidivl
test
mov
int
mov
fldl
loope
aam
or
cmp
xchg
push
fwait
ret
push
pop
out
repnz
mov
div
pop
xchg
das
sarb
pop
push
sub
sub
adc
scas
push
call
sub
inc
retw
shlb
fisttps
frstor
cmp
rcll
cld
jb
rorb
or
push
ret
dec
pop
movsl
insb
fdivrl
popa
jnp
inc
and
cltd
cs
std
xlat
shlb
imul
call
cmpsb
dec
mov
clc
shr
cmpsb
sbb
xchg
cmp
inc
lret
call
cli
jge
imul
stc
inc
mov
pop
push
mov
or
jbe
inc
out
std
scas
divl
shlb
insb
xor
into
jmp
hlt
lock
loope
xchg
js
movsl
cmp
cmpb
js
sub
lret
pop
jo
je
fstpt
cmc
push
cltd
insb
aas
mov
push
les
cmp
cmp
icebp
adc
rolb
cmp
pop
add
mov
shrl
pop
jb
es
xlat
cli
stc
icebp
inc
cltd
jae
int3
pop
js
fimull
inc
out
pop
adc
out
mov
test
inc
push
out
jae
stos
pop
or
push
inc
fldl
pop
sbb
stos
bnd
aad
int
push
pop
cmp
inc
adc
mov
das
xor
lret
pop
xchg
inc
fistl
mov
push
xor
pop
cs
mov
xor
push
cmpsl
daa
add
sub
test
and
jae
mov
aas
jmp
ffree
push
cmpsl
mov
aad
adc
mov
mov
jl
cmp
jmp
xchg
ret
outsl
mov
fisubrs
adc
cmp
dec
jbe
in
adc
inc
pop
in
inc
sbb
pop
sti
inc
sub
fstps
jb
movntq
pop
cmp
ffreep
repnz
jo
and
stos
or
ret
sarb
test
fldcw
xchg
lret
inc
pop
sti
inc
scas
add
rcrl
push
out
mov
xor
and
dec
pop
sub
inc
lds
jecxz
das
dec
jl
push
fstl
cmp
and
pop
frstor
jecxz
sub
in
fwait
icebp
jnp
dec
mov
inc
pop
shlb
sbb
lds
out
push
flds
rolb
cld
data16
loop
shrb
cmp
dec
fidivrs
cli
js
lahf
out
mov
inc
fnstcw
xchg
cli
fisubrl
inc
and
sub
sbb
push
sub
mov
shrl
sbb
mov
int3
scas
lret
mov
or
and
mov
scas
notb
lahf
lds
adc
pop
sti
cmpsl
fmuls
push
or
push
aad
inc
dec
lahf
xchg
mov
push
pop
inc
aam
fcomps
push
xchg
fldcw
mov
sbb
jbe
xor
jno
fs
adc
cltd
inc
imulb
sarb
push
sub
jge
xlat
sti
xchg
das
mov
stos
rclb
xchg
mov
fistpl
lea
bound
stc
ret
loope
aam
jl
jp
fstps
rcrl
mov
cmp
mov
test
mov
and
fwait
leave
js
inc
iret
ret
lcall
inc
fistpll
push
imul
in
push
xchg
push
imul
lods
out
je
and
ret
sbb
test
fsubl
pop
xchg
sub
sbb
inc
adc
fwait
push
adc
or
jns
mull
inc
jae
stc
push
push
mov
in
bnd
ret
lods
pop
sbb
loopne
inc
adc
sti
jns
inc
repz
iret
jno
pushf
notb
testb
imul
test
shr
jecxz
adc
sbb
ss
sbb
shll
lahf
iret
xchg
es
pop
mov
lahf
fcmovnb
imul
in
mov
add
push
dec
call
insl
pop
jo
fcmovnbe
cmpsl
mov
mov
pop
jle
cmp
jge
add
jno
repnz
or
lahf
jo
stos
shrl
dec
and
sbb
fadds
jbe
pusha
test
pusha
cwtl
cmpsl
dec
das
addr16
sahf
sarb
jp
sarl
orl
cltd
jge
pop
jo
jge
dec
add
sbb
int3
adc
hlt
daa
lret
in
sub
push
sti
ja
and
or
mov
jae
pop
out
lds
xchg
cli
sbb
mov
xchg
push
ret
adc
cmpsl
mov
jbe
jp
jb
call
push
ret
aas
inc
into
fists
loop
pop
fisubl
push
add
test
or
jb
iret
insl
cmc
add
push
pop
xchg
sti
repnz
push
xchg
cmpsb
push
push
push
adc
xlat
sbb
add
mov
das
cs
pop
jae
shrl
cmpsl
mov
fwait
arpl
sti
pop
pop
cmpsl
test
fidivrl
jecxz
xchg
or
cmpsl
jnp
psrld
rolb
aad
mov
dec
mov
push
dec
mov
fcmovu
cmpsl
in
or
mov
adc
add
push
lret
shlb
mov
mov
into
adcb
dec
adc
fidivrl
icebp
adc
in
push
jle
je
jns
push
mov
xchg
jge
lock
pop
pop
add
adc
push
leave
ret
mov
mov
shl
lock
popa
inc
jb
mov
pop
sti
bnd
jle
rcrb
fwait
outsb
outsb
jne
addr16
sti
ss
cmp
dec
cli
inc
lret
testl
mov
inc
std
fwait
jbe
add
int
ficomps
int
pop
mov
repz
insb
inc
lea
mov
fldt
add
test
enter
cltd
popf
jb
je
data16
arpl
mov
dec
cmc
lods
adc
and
and
and
sti
loopne
es
orl
pop
adc
lea
mov
dec
push
mov
imul
dec
popf
iret
xchg
adc
pop
out
push
lcall
in
push
popf
lret
or
cmpsl
icebp
sub
cli
ret
incl
pusha
add
pusha
mov
cmpsl
iret
xor
test
push
mov
cli
mov
roll
lock
aad
stos
js
popa
fwait
popf
or
fidivrl
xor
inc
into
sbb
jl
stos
rcrb
aaa
hlt
imul
mov
fwait
jle
loope
xor
cmpsl
cmp
xor
in
bound
jnp
add
nop
insb
ret
push
jl
scas
pop
jb
ret
inc
nop
repnz
cmpsl
mov
outsl
in
out
testl
xor
aad
cmp
sbbl
jl
cltd
adc
push
clc
sub
mov
repnz
popf
jae
jmp
pop
mov
cmp
cli
mov
fstps
shlb
inc
hlt
xor
andps
inc
inc
das
lods
rolb
in
mov
xchg
bound
icebp
lods
ror
cmc
jnp
fcom
fwait
loope
push
mov
add
scas
jno
ret
dec
icebp
mov
incb
lret
xchg
stos
loopne
pusha
xchg
xchg
nop
dec
outsl
cmp
sti
push
inc
push
test
adcl
fimull
adc
jl
mov
in
fsts
push
pop
adc
push
insl
cmc
push
inc
push
dec
loope
or
xchg
xor
fistl
inc
test
fidivrl
lods
arpl
push
adc
or
dec
es
sbb
jle
or
scas
movsl
sbb
adc
aam
testb
les
repnz
xor
sti
xlat
cmp
add
loopne
jno
add
inc
xchg
call
je
xchg
pop
testl
incl
push
or
jae
adc
ss
fistpl
repz
pop
std
sti
and
xor
scas
rorl
mov
ss
insl
ret
dec
test
or
inc
out
push
and
fsubrl
pop
inc
ficoml
fstl
push
mov
es
sub
dec
ret
inc
or
sbb
pop
push
xlat
pushf
hlt
stc
aad
dec
xchg
mov
insb
mov
push
pop
xchg
loop
adc
pop
and
adc
movsb
sbb
leave
dec
jo
inc
aaa
xlat
test
dec
lods
sbb
in
fdivp
pop
xchg
int
inc
sbb
je
popf
aaa
xchg
mov
arpl
cmp
inc
cmp
fnsave
fldl
xchg
xchg
fmuls
jmp
push
negb
addl
fsubr
fidivrl
call
pop
cmp
pop
iret
lret
insb
xor
jae
add
push
adcb
jbe
fldt
lods
cmpsl
dec
dec
xlat
push
iret
sbb
jnp
and
lret
push
cmc
roll
outsl
add
popl
fdivp
xchg
filds
sub
mull
dec
mov
movsl
inc
iret
adc
fstps
jmp
fnstcw
movsb
adc
iret
jg
adc
jne
fstl
add
jae
mov
movsl
neg
push
xlat
icebp
dec
aam
xchg
jnp
es
mov
jmp
stc
icebp
adc
pop
int
xchg
or
lock
das
out
sbbb
lock
or
and
or
lahf
andl
dec
cli
adc
or
dec
inc
es
lods
push
repnz
out
adc
jne
in
clc
sbb
jp
add
lahf
cmp
outsl
or
testb
fstps
fbld
pusha
shr
adc
insb
or
sub
out
xor
jg
fidivrs
outsb
divl
faddl
imul
test
aaa
adc
xor
lcall
inc
dec
in
fwait
xor
mov
inc
pusha
in
xchg
rorb
shll
enter
jle
adc
mov
dec
nop
int3
mov
iret
pop
dec
nop
jle
xchg
insl
sbb
jmp
sti
dec
loopne
stos
les
in
addr16
pop
mov
loop
fisttpl
shlb
pop
cltd
pop
and
sbb
ret
sbb
mov
mov
cmp
mov
jmp
jns
int3
adc
cmpsl
jmp
hlt
hlt
incb
ss
jle
sti
pop
mov
mov
xchg
add
xlat
imul
adcl
and
xor
gs
dec
adc
xchg
push
adc
mov
ja
xchg
and
inc
imul
rorb
jbe
or
aam
mov
adc
pop
push
mov
xchg
push
inc
fistpll
cmpsl
inc
sub
jg
sbb
push
cmpsl
into
inc
aad
js
insl
mov
xlat
lea
mov
push
ret
rolb
mov
jno
jae
test
jb
and
test
adc
xlat
adc
mov
mov
pop
insl
bound
call
arpl
scas
inc
mov
pop
mov
hlt
and
decl
mov
scas
push
fimull
cwtl
adc
dec
pop
sub
mov
mov
push
xor
aad
and
xchg
sahf
cmp
sbb
jns
cmc
pop
into
loop
xor
cltd
pop
ret
aaa
xchg
ja
fdiv
and
repz
xchg
in
or
mov
inc
dec
mov
dec
mov
inc
in
aam
lock
fsts
xor
rcr
imul
or
mov
adc
loope
mov
xchg
dec
enter
pop
cmpsl
sbb
cmp
xor
xor
stos
jl
lds
lret
test
ss
imul
adc
and
fwait
movsl
test
into
icebp
rcll
mov
cmpsl
cmpsb
mov
inc
jmp
adc
mov
xor
in
mov
mov
cs
fstps
dec
inc
adc
iret
sub
xlat
sahf
sbb
pop
xchg
out
mull
in
jmp
dec
mov
cmp
stc
out
pushf
iret
jmp
fildll
inc
scas
in
ja
xchg
jae
inc
xor
scas
lods
push
movsb
push
pushf
adc
pop
leave
jecxz
dec
jmp
fwait
add
cmp
inc
mov
push
lods
js
mov
xchg
inc
or
jge
insl
add
xorl
scas
mov
mov
adc
mov
push
cmc
fabs
jae
mov
xlat
scas
xor
pop
ret
push
sbb
sahf
dec
push
jns
movsb
push
iret
inc
jmp
mov
repz
add
or
mov
inc
enter
sbb
mov
test
xchg
push
test
push
push
jmp
push
mov
sub
fdivrl
dec
mov
pop
mov
cmpsb
push
roll
jo
cmp
or
div
test
jbe
movsb
xchg
pusha
sub
mov
popf
les
subb
dec
lea
out
sub
mov
loopne
testb
imul
add
jbe
ficoml
imul
xlat
add
aam
push
test
xchg
push
jg
jnp
xchg
sub
dec
in
rcr
imul
cs
cld
xlat
sbbb
inc
outsl
lods
pop
rcll
lods
inc
sub
lods
jnp
insl
pop
mov
arpl
cmc
pop
lahf
sub
sub
inc
insl
and
and
sbbl
jecxz
ret
das
mov
jb,pt
inc
sbb
fstpt
shr
ja
xchg
inc
push
sbbb
outsb
adc
shrl
sub
jae
outsb
into
push
push
ret
icebp
mov
pop
das
pop
addr16
shl
sarl
andl
lret
cltd
push
mov
lcall
add
inc
pop
inc
fadd
repnz
sub
dec
xchg
inc
cmp
leave
inc
int
pop
adc
lods
cmpb
dec
dec
es
lcall
xchg
push
dec
cmp
addr16
clc
cmpsl
inc
lcall
es
jge
in
pop
xorl
push
push
lods
and
stc
dec
pop
mov
and
rolb
shll
mov
negb
mov
sti
inc
mov
push
int
fs
pop
inc
clc
and
fildll
xor
test
aam
cmp
adc
cmp
and
bnd
mov
test
xlat
inc
bound
fsts
jnp
fldl
adc
pop
xchg
cltd
dec
les
sbb
adc
imull
insl
ret
or
push
inc
fwait
sub
roll
negl
stc
dec
inc
enter
push
mov
push
xlat
xor
add
out
icebp
xchg
mov
jge
sbb
mov
lods
add
stos
push
ret
lock
sub
jmp
mov
push
pop
stc
push
clc
jb
jp
ljmp
sbb
or
lods
mov
aaa
cmp
adc
das
jmp
sbb
push
imul
rol
rclb
mov
push
cmp
jae
cmpsl
inc
push
push
loop
lock
fcomi
test
rcll
jmp
ret
lret
jge
jecxz
inc
fwait
cmp
mov
mov
fstpl
daa
std
sti
f2xm1
push
inc
mov
sub
dec
test
icebp
mov
jo
ret
mov
ret
mov
movsl
jo
ret
mov
mov
neg
sub
mov
add
test
dec
jmp
leave
add
inc
add
cld
adc
dec
push
push
leave
repz
mov
lds
popf
fisttps
inc
ret
and
jb
psubq
outsl
call
push
pop
pop
dec
fimull
jecxz
pop
loop
xor
clc
sbb
jnp
adc
push
pop
add
cmc
andl
sbb
xchg
jae
sbb
pop
lahf
push
xchg
jp
gs
leave
sbb
mov
jno
jmp
push
jae
cltd
gs
jb
stos
scas
popa
jb
gs
push
not
xchg
ljmp
or
inc
adcl
outsl
xchg
faddl
ljmp
repnz
pop
cmpsl
pop
jae
aaa
testl
sbb
jne
xchg
fistpl
pop
push
jne
mov
out
ret
jo
fists
jp
bound
loope
ret
jo
mov
popa
arpl
arpl
push
adc
jae
xchg
shll
mov
mov
xchg
jmp
xchg
ret
shr
pop
sarl
lret
jmp
push
lea
lahf
xlat
scas
pop
testl
test
xlat
mov
ja
and
clc
adc
insl
cmpsl
test
popa
repz
out
mov
dec
sub
scas
mull
sbb
inc
aad
pop
push
aas
ret
rcrb
rcl
fstps
sarb
or
in
sbb
cmpsl
iret
sub
psraw
fnstsw
aam
and
push
call
sbb
aad
lds
adc
loope
mov
jle
test
les
mov
sti
fstps
repz
clc
rorb
fs
inc
lock
es
cltd
mov
aas
cmp
stc
clc
xlat
lahf
lahf
scas
xorl
cld
stc
jmp
inc
add
xchg
sub
push
adc
clc
xor
xor
jno
lock
divl
mov
fidivs
xchg
scas
pop
push
mov
mov
loope
ret
aad
adc
fimull
mov
ret
aam
insl
adc
mov
pop
push
std
inc
push
repnz
aad
lcall
test
cmp
ficomps
jns
hlt
rcll
nop
test
stc
xor
xchg
rol
insb
aam
negl
pop
rcr
rcl
ret
fcmovnbe
push
xor
cli
fisttpl
cmp
lcall
xor
sbb
dec
in
jne
dec
jb
xchg
lret
rcl
rcll
rcr
fisttpl
or
aad
mov
loop
push
or
sbb
cmpsl
inc
push
adc
imul
xlat
sub
aam
xlat
jge
in
out
adc
aam
inc
sbb
push
add
imul
pop
sub
fucomi
push
shrb
test
sub
je
cmc
rcrb
sbb
int3
push
cmp
cmp
jg
cs
leave
mov
cmpsl
test
add
xchg
xchg
nop
imulb
aad
xlat
cmp
mov
cmc
lcall
pop
xchg
or
xchg
pop
fcompp
jb
mov
sub
or
adc
cld
addr16
jns
mov
fidivrl
fsubl
pop
pop
les
ret
mov
ficoms
adc
loop
fdivrl
inc
es
inc
cli
fistl
mov
mov
aam
js
rorb
ja
movsl
push
mov
std
mov
lret
out
mov
rcrb
pop
fdivrl
sti
xlat
push
mov
xchg
mov
aad
shr
aam
rcl
xor
adcl
cmpsl
push
inc
jae
insl
dec
jecxz
into
daa
xchg
call
fstps
inc
repz
sbb
jecxz
pop
inc
call
sbbb
aad
and
insl
mov
pop
adc
xchg
jae
loope
jne
rcll
mov
inc
cmpsl
pop
xchg
test
sti
out
mov
cmpsl
fsub
pop
js
pop
pop
fbstp
repnz
add
xchg
cmp
ret
es
mov
inc
xchg
div
sbb
mov
ret
mov
jmp
inc
sbb
fisubrl
cmp
loope
push
mov
outsl
mov
xor
bound
enter
lods
lds
and
push
clc
insl
loop
cmpsl
cmp
or
xor
inc
stos
push
inc
cmpsl
outsl
lods
out
mov
inc
rcl
jne
cmp
icebp
jg
daa
mov
bnd
jne
pop
ret
es
lahf
xor
sbb
fld
outsb
xorl
movsl
jmp
add
dec
fstpt
dec
fnstenv
dec
adc
or
ja
lret
movsl
xlat
or
sbb
repnz
and
repnz
push
arpl
rcr
repnz
fistl
cltd
dec
lods
inc
mov
mov
fidivs
frstor
xchg
enter
pop
stc
pop
sbb
xlat
cmp
xchg
pop
jo
out
mov
fnstenv
sti
out
jecxz,pn
fcoms
rcrl
push
fiadds
jnp
mov
ficoml
fldl
smsw
xchg
pop
pushf
push
rcl
lock
jae
addr16
xchg
shrb
out
loop
pusha
std
mov
mov
push
xchg
push
popa
mov
pop
pop
xchg
cmp
dec
fstps
inc
inc
add
fsin
js
rclb
mov
idivl
push
add
pop
daa
and
int3
mov
shrl
in
sub
xchg
lock
adc
adc
scas
push
jmp
imul
sbb
inc
sbb
jmp
mov
sahf
cltd
mull
aam
es
je
addl
jo
movsb
xor
in
inc
jno
push
inc
push
mov
jp
push
mov
cltd
bnd
pop
sbbb
lea
xlat
icebp
jge
in
jbe
mov
jg
push
or
inc
sub
pop
ret
rcrl
aam
and
in
ss
push
mov
aad
inc
dec
aad
cmp
or
lods
ljmp
push
dec
adcb
je
or
ss
cltd
shlb
popa
ret
notb
fisttpl
shrb
pop
sub
mov
cs
out
cli
jge
cmpsl
arpl
repnz
movsl
cmpsl
mov
dec
lods
add
mov
arpl
sbb
push
mov
jb
mov
cmc
shll
int
ret
in
frstor
iret
xlat
xorb
xchg
inc
aad
push
xchg
loopne
push
shll
mov
lret
fnstenv
cmpsl
insl
cwtl
pushf
mov
test
aaa
push
inc
pop
sub
push
cmp
enter
mov
lea
jle
sarb
pop
cmp
pushf
ljmp
je
pop
xlat
loop
mov
sub
inc
es
add
ret
jg
inc
cld
and
div
hlt
xchg
push
or
xchg
mov
rcll
das
shl
cmp
lret
adc
pop
test
dec
mov
sarl
movsl
mov
rcrl
in
scas
push
ds
lahf
psrad
push
xchg
repnz
pop
cmp
or
fcompl
fst
mov
or
sub
insb
jae
pop
mov
enter
ret
xlat
pop
push
xor
push
insl
adc
lods
pop
pop
or
fdivrl
out
adc
add
inc
js
out
shl
pop
cmp
imul
cmpsl
pop
dec
dec
and
roll
push
adc
mov
repnz
mov
into
mov
pop
push
stc
lock
scas
bound
into
notb
testb
les
mov
pop
bound
jbe
pop
scas
orl
and
out
pusha
rcl
push
fadds
mov
adc
push
in
jp
arpl
pop
jp
lock
mov
je
mov
rol
aad
std
pop
jno
out
xlat
hlt
sbb
push
jno
push
cmp
mov
icebp
lret
sti
add
repnz
sti
lret
xchg
je
mov
sub
loopne
fs
stos
mov
ret
xlat
js
repz
scas
clc
xlat
in
pop
popl
pop
pop
aad
fimull
divb
testl
fildl
sti
inc
jae
xor
inc
hlt
rcrl
pop
imulb
jg
dec
sti
inc
imul
sbb
and
ficomps
outsl
lock
jnp
je
repnz
pop
inc
pop
xchg
push
and
icebp
inc
ss
jo
test
mov
pop
fdivrp
iret
loop
dec
mov
clc
aam
mov
add
jmp
loopne
fld
nop
stos
mov
int
frstor
cltd
in
leave
inc
loopne
clc
xchg
pop
bound
dec
mov
mov
pushf
xchg
mov
xchg
mov
and
and
mov
sub
ret
inc
xchg
sbb
movsb
xor
clc
roll
sahf
mov
sub
inc
rep
aad
mov
xchg
and
call
sub
xor
add
jecxz
jge
negl
sbb
jp
lret
sbb
sahf
pop
pop
cmp
mov
cwtl
cli
repnz
inc
outsb
or
sbb
sbb
pop
xlat
sti
inc
negb
subb
or
mov
dec
sarl
mov
push
dec
pop
cmpsl
xchg
stc
fsts
mov
rcl
pop
int
push
mov
dec
lret
sub
sbb
sbb
add
xor
inc
or
jl
pop
frndint
jnp
or
sbb
add
fistpll
inc
push
xchg
sti
mov
adc
ds
lock
aaa
iret
and
xchg
jb
cmp
push
or
cmpsl
fwait
dec
out
addr16
mov
xchg
sub
cmp
ret
push
cmpsl
mov
sbb
test
push
cmp
jmp
lret
add
ret
sub
sti
rcr
adc
scas
out
adc
ret
mov
lds
pushf
ret
mov
inc
js
dec
enter
mov
jno
int
ret
pop
xlat
mov
ret
or
and
sbb
loopne
inc
adc
adc
mov
es
out
mov
popf
daa
pop
xchg
inc
push
pop
inc
mov
repnz
mov
pop
in
stc
outsl
je,pt
pop
mov
add
clc
inc
mov
mov
push
fdivs
cmpsl
ffree
mov
cmpsb
push
mov
repnz
popa
repnz
fimull
cs
sbb
mov
push
imul
fcom
pop
xlat
ret
lods
jnp
adc
cmpsl
xchg
pop
dec
test
lret
adc
lret
pop
call
loop
cmp
inc
push
mov
rcl
movsl
or
cmp
pop
scas
sti
inc
xchg
mov
ljmp
inc
out
xor
aam
loopne
ret
pop
ja
outsb
imul
and
inc
popa
jge
cli
arpl
xlat
pslld
mov
lret
add
mov
scas
or
inc
adc
int
jo
outsl
lock
jg
push
fisubl
jle
loop
cmp
push
cmp
mov
enter
and
out
outsb
fsts
sbb
scas
in
inc
cmp
scas
clc
ret
inc
aam
ja
test
jbe
pop
xor
inc
pop
leave
push
dec
subb
pop
pop
mov
icebp
fwait
pop
push
mov
mov
mov
scas
outsl
into
aas
mov
push
jne
dec
das
pop
jae
pop
or
pop
leave
add
outsl
shll
stc
or
mov
cs
jb
jg
in
jbe
jbe
jae
in
push
scas
mov
xchg
popf
scas
inc
lret
mov
into
add
int
jo
mov
jle
pop
push
pop
and
imul
mov
in
dec
rcll
test
or
jne
mov
inc
ficoml
push
cmp
inc
cs
addr16
cmpsb
jp
loope
sbb
or
jnp
ja
fwait
push
pop
ret
mov
pop
pop
stos
loopne
fldl
fwait
mov
dec
negl
jg
aad
imul
mov
or
cmpsb
ror
mov
movsl
in
dec
lock
fldt
xchg
or
addr16
xchg
pop
inc
xchg
test
bound
lds
xchg
pop
sbb
subb
xor
pop
lcall
rcll
and
aaa
pop
fidivs
es
loopne
sub
push
mov
dec
mov
xchg
sbb
jbe
or
or
dec
notb
adc
into
dec
ljmp
dec
and
mov
lret
hlt
negl
push
mov
in
push
xchg
iret
dec
push
pop
dec
call
sti
xchg
mov
ja
push
cli
mov
add
mov
push
cmpsl
bound
sub
inc
jae
inc
ffree
insl
xchg
es
mov
adcb
pop
add
rcll
lea
shll
dec
mov
movb
pop
jp
xchg
pop
xor
stc
push
ja
f2xm1
inc
fistpl
lret
inc
imul
push
rcl
lret
jmp
mov
cs
test
adc
out
scas
or
mov
insb
movsl
arpl
fmul
add
mov
dec
sub
pop
aas
hlt
inc
negl
les
ss
fcoms
arpl
cmp
cld
push
mov
add
pop
and
mov
sbb
movsl
push
inc
insl
fldln2
add
inc
push
pop
xor
add
xlat
jecxz
test
xchg
and
pop
add
ret
pop
inc
push
outsb
fisttpll
fcoms
fistl
lret
imul
pop
loop
sub
in
cmp
iret
rcr
inc
sbb
scas
je
pusha
icebp
fidivrl
jl
jge
jp
pop
xor
xchg
sbb
add
repz
jmp
ja
cld
pop
daa
nop
add
sbb
sbb
icebp
or
mov
jns
out
adc
aaa
lods
and
pop
sub
jmp
les
aad
xlat
pop
rcrb
and
xchg
mov
push
leave
fstps
jb
sbbl
pop
mov
divl
sbb
xchg
cwtl
pop
inc
push
jecxz
mov
mov
xor
mov
ds
imul
lret
jge
roll
sarb
inc
pop
mov
push
call
inc
cmpsb
mov
lret
cmpsl
dec
push
lahf
stos
push
push
es
flds
je
jp
xor
xchg
jnp
cmpsl
xchg
add
ror
pushf
icebp
icebp
in
xchg
pop
insl
xlat
xchg
aad
mov
mov
mov
mov
fcmovbe
pop
xor
or
push
mov
test
aas
sahf
jae
loop
fstl
mov
inc
cmpsl
pop
ja
imul
aad
jle
das
test
xlat
shrl
aam
adc
ja
and
pop
ss
in
push
push
cltd
mov
xchg
popf
sub
flds
sbb
xor
add
dec
sub
push
push
xchg
in
loop
iret
cmc
in
iret
inc
xor
sti
hlt
cs
in
xchg
xchg
rcl
xchg
jno
call
lret
dec
jge
insb
aam
sbb
cmpsl
fcmovnbe
and
cmp
sahf
bnd
jb
cmp
test
rcl
sbbl
add
insl
sub
sbb
leave
xorl
pop
cld
sahf
push
inc
push
mov
insl
and
test
bound
shrb
stos
repnz
xchg
cmp
jmp
xor
dec
aaa
idivb
je
cmp
jle
test
jg
sbb
sbbb
sbb
cli
jl
ja,pn
sarb
aad
pop
jns
xchg
iret
ret
daa
clc
scas
pop
inc
push
dec
into
mov
jae
mov
push
ret
sbb
imul
dec
xchg
movsb
fisubl
das
jb
ret
loopne
aam
bnd
mov
cmc
jl
or
cmc
rsqrtps
and
das
shlb
shrb
sub
mov
fwait
push
inc
dec
add
push
inc
cmpsl
pop
mov
inc
lcall
mov
ret
and
fldcw
stos
mov
nop
jae
lret
xor
cs
xchg
mov
or
cmp
push
inc
pop
mov
rcrl
mov
ret
shlb
push
cmp
mov
loopne
testb
mov
mov
xchg
cmp
ret
cmp
push
or
stos
xor
xlat
sub
lea
push
cmpsl
mov
inc
mov
add
lock
mov
loop
sarl
ljmp
ja
cli
cmc
int3
rclb
ficoms
and
sub
movsb
push
scas
sbb
xchg
or
aas
repz
dec
mov
lock
loop
cmpsl
test
mov
shlb
inc
loop
xchg
lcall
mov
pop
lret
pop
mov
push
mov
lods
sub
push
inc
or
cmpsl
repz
pop
insl
pusha
fidivrs
cwtl
andb
arpl
sbb
adc
pop
mov
sti
arpl
cmpsl
dec
xchg
imul
xchg
into
mov
inc
push
stos
jp
inc
pop
jne
into
fidivs
mov
lcall
ljmp
insl
dec
sti
mov
aaa
repnz
outsb
fwait
sar
iret
shrl
mov
aam
pop
test
and
pop
stos
daa
mov
mov
lds
fiadds
fldt
mov
popl
pop
jb
mov
push
inc
and
xor
ret
loopne
adc
aad
nop
insl
fdivrs
jae
pop
loop
jle
jnp
adc
or
sti
test
lods
push
jnp
clc
jp
adc
scas
xor
test
add
xchg
xor
inc
xchg
jecxz
movsb
rcll
lret
test
push
fdivrs
xchg
mov
mov
mov
push
lock
add
cmp
daa
in
push
pop
jle
jl
adcb
fildl
push
adc
cmp
imul
and
push
ret
popa
sbb
cmp
out
cmp
addr16
nop
pop
int
sbb
rcrl
pusha
xor
sub
sbb
pop
push
lcall
push
mov
cld
scas
lock
jb
pop
inc
imul
pop
lret
aaa
cs
xchg
or
cmpsl
xchg
out
mov
dec
fcom
push
xor
stos
dec
fwait
pop
xor
mov
cmpsl
lea
addr16
xchg
and
ret
cwtl
jbe
jp
jno
push
das
pop
fldl
sub
jmp
push
outsb
jno
adc
stos
adc
gs
repnz
cs
ds
fidivrl
inc
lods
fstpt
stos
movsl
imul
addr16
jnp
cmpsl
popa
stos
pop
rorl
inc
rcll
mov
sbb
dec
ds
es
pop
nop
in
jno
cli
or
pop
push
mov
sbb
and
aam
rorb
inc
jne
xlat
jecxz
sahf
mov
ja
xchg
insl
inc
adc
mov
into
loopne
inc
loop
dec
push
dec
dec
ret
mov
dec
cmp
or
push
fwait
sbb
jo
cwtl
xchg
add
xlat
mov
mov
mov
rcr
sub
fdivrs
jl
push
mov
jae
sub
jecxz
lods
sti
jp
cli
lahf
adc
fucomi
push
popf
or
or
popa
xlat
jmp
jecxz
aam
adc
push
iret
xchg
scas
dec
imul
into
incl
scas
mov
push
or
cwtl
dec
push
lods
pushw
mov
iret
and
shr
push
sti
jl
jle
call
or
std
jbe
cmpsl
push
xchg
shl
shr
inc
pop
or
push
xchg
stc
int3
cmpl
mov
jge
push
jo
imul
jp
sub
or
push
aam
rorb
ja
xlat
cltd
add
xlat
out
fildl
push
mov
xchg
es
cmc
push
out
cwtl
xchg
dec
mov
inc
add
xchg
into
out
pop
inc
data16
pop
popf
decl
es
inc
cmc
adc
shlb
xor
leave
hlt
cmp
mov
lret
mov
rol
jecxz
push
mov
repnz
movsl
ret
push
sbb
sahf
mov
xchg
fildll
jnp
loope
ret
pop
inc
rcrb
sub
test
xor
test
int
xor
jmp
push
fwait
shrl
jmp
xchg
out
les
mov
pop
stos
mov
adc
daa
and
clc
mov
sub
add
pop
sbb
and
inc
fildl
mov
sub
mov
repnz
insl
mov
flds
ret
fwait
jns
je
dec
or
jno
dec
inc
mov
xchg
imul
lret
cld
mov
inc
leave
sti
in
hlt
popf
mov
fidivs
mov
jle
fcoml
push
sti
pop
mov
xchg
sub
stc
dec
mov
addr16
and
in
mov
pop
xor
jno
or
cmc
divl
inc
out
or
rol
cmp
mov
jp
fs
sub
sub
movsl
imul
cmpsl
gs
pop
mov
xor
addw
cmc
imul
or
loopne
movsb
sarb
push
loope
into
push
imul
loop
pop
mov
mov
jo
loope
outsb
incl
lock
int3
mov
hlt
push
int
jae
pop
push
mov
lock
inc
inc
not
xorl
aaa
repz
popf
pop
push
sbb
movsl
gs
cwtl
xchg
loop
pop
adc
stos
hlt
and
xchg
out
lret
push
pop
push
sbb
inc
jge
mov
icebp
iret
sar
fnstenv
jb
jns
aad
outsl
popa
imul
notb
scas
mov
daa
cmp
repnz
or
pop
lcall
aaa
in
mov
ret
pushf
lock
mov
rolb
pop
out
sbb
xor
jno
lds
jno
xchg
scas
lds
ucomiss
adc
test
xor
push
adc
xorb
inc
mov
adc
mov
mov
sbb
sub
ret
mov
push
xchg
data16
popa
pop
sbb
in
mov
stc
das
sbb
dec
jge
and
leave
outsl
test
inc
jbe
or
rclb
pop
xchg
aaa
jmp
adc
dec
or
xchg
sti
xchg
inc
xor
into
fucomi
flds
fistps
xlat
xchg
cs
nop
mov
jp
dec
insl
fwait
int
inc
or
loopne
jmp
push
stc
inc
ror
andb
inc
aas
ret
sbb
jb
jo
inc
das
imul
mov
clc
xchg
ja
shlb
push
push
inc
cmpsb
mov
mov
mov
test
das
xchg
add
test
mov
mov
push
aam
mov
shrl
inc
mov
inc
cmp
inc
arpl
imul
subl
dec
sbb
in
mov
loop
pop
aam
ljmp
mov
arpl
stos
adc
mov
push
mov
fistl
scas
lahf
lret
loope
dec
stos
ret
fcmovnu
mov
ds
rcr
adc
sbb
icebp
jl
push
lock
sub
imul
sub
mov
lcall
popf
shrl
rolb
push
jae
xor
movl
in
mov
rolb
xor
jae
inc
xchg
mov
fisubrl
test
mov
ret
xchg
xchg
dec
mov
insl
mov
mov
push
imul
imul
jns
sub
xchg
dec
jne
xchg
gs
xor
push
cli
out
popa
push
aas
rcr
inc
lods
dec
jle
mov
push
xchg
pop
pop
movsl
xor
inc
jnp
xlat
lahf
push
cmp
fld1
push
xchg
add
push
fisttpl
push
sub
push
jmp
mov
es
rcrb
jg
jge
xchg
daa
in
dec
stc
xor
push
xlat
inc
add
add
pushl
aad
fstpl
push
insl
adc
sbb
sbb
test
or
push
cli
movsb
lods
in
fcmovnu
add
lds
insb
pop
in
or
leave
fldl
andl
aaa
sub
test
vpsubusb
lret
fwait
and
mov
test
ret
dec
test
mov
stos
jbe
je
leave
aaa
push
loop
pop
add
stc
inc
mov
stos
mov
and
clc
add
push
add
out
mov
cld
pop
jb
push
adc
push
xchg
add
mov
push
lock
fcoml
cmc
imul
lods
into
xchg
or
ret
insb
add
jge
iret
mov
and
xchg
enter
inc
test
mov
insl
jns
sbb
xlat
call
fcomps
adc
std
mov
repz
mov
dec
sahf
dec
and
rol
xlat
jmp
sbb
jg
les
fisubs
sbb
mov
call
or
and
pop
jmp
mov
into
mov
jle
sub
rclb
hlt
xchg
mov
push
inc
pop
movsl
xchg
dec
aad
cmp
jo
int
notl
addr16
push
push
mov
jg
sbb
adc
xor
addl
filds
push
shll
cmc
xchg
or
jmp
and
clc
jp
test
mov
aad
into
push
dec
inc
push
dec
mov
negb
cmp
aam
mov
roll
jno
inc
mov
xchg
aam
popa
fsub
std
test
jno
lcall
test
lea
fwait
inc
lods
stos
xchg
or
pop
lea
clc
rorl
mov
popa
xchg
arpl
inc
jnp
push
pop
lds
and
or
stos
push
inc
jle
mov
js
movl
mov
jb
fnstcw
call
std
shr
xor
xlat
les
pop
jecxz
icebp
enter
fisubrs
adc
mov
je
sub
push
mov
pop
mov
hlt
xor
xchg
lds
mov
pop
sbb
dec
dec
jl
mov
pop
out
jb
aam
mov
ljmp
pop
invlpg
stos
inc
popl
cmpsl
xor
pop
nop
scas
pop
sbb
lock
push
or
and
mov
jl
jecxz
mov
test
inc
jo
mov
cmpsb
sub
es
mov
jmp
cmp
and
iret
jnp
test
ret
mov
push
sbb
push
fisubs
pop
icebp
leave
stos
pop
mov
pop
or
push
shlb
movsb
and
sbb
add
xacquire
xchg
xor
aad
in
jns
lock
ficoml
dec
push
inc
imul
and
imul
jl
mov
push
cld
daa
cwtl
pop
mov
push
sbb
sub
hlt
adc
xchg
pop
in
xchg
rcl
xlat
mov
jo
jge
sbb
int
cmp
loopne
call
aam
adc
rclb
lock
cli
xchg
push
pop
mov
sar
sti
pop
lahf
out
mov
mov
lret
out
sbbb
test
inc
imul
sub
add
push
mov
cmpsl
adc
push
jbe
push
or
stos
scas
pop
std
insb
out
rcll
imul
adc
jne
add
repz
push
sbb
ss
xchg
insb
mov
jmp
jnp
out
dec
std
in
iret
inc
jg,pn
arpl
push
mov
jb
xchg
es
stos
repz
loopne
ret
dec
xchg
inc
das
pop
cmpsl
push
out
add
test
les
sbb
pop
push
or
push
idivb
sarl
mov
test
mov
jne
jnp
add
mov
scas
dec
es
rorb
jne
xchg
and
out
ja
mov
ss
fcoml
shl
xor
test
loop
mov
insb
mov
jl
lods
cltd
adc
lods
das
push
cs
dec
and
mov
jl
test
pushf
shlb
mov
call
imul
fidivl
mov
out
cld
push
xchg
inc
rcl
cmc
arpl
in
lahf
mov
rcr
data16
stc
lea
arpl
lods
aam
pop
dec
ljmp
sbb
ret
push
call
lahf
ror
sub
mov
out
ja
setg
repz
ret
xchg
pop
das
aam
pop
cmp
add
ja
sbb
mov
sarl
pop
insb
fdivl
cmp
fsubrl
adc
pop
add
mov
aad
sbb
add
ja
call
mov
jbe
bswap
rclb
mov
daa
sahf
add
fwait
into
add
sbb
je
fs
ss
push
aaa
inc
in
pop
loopne
jecxz
cmpsl
jne
sub
jp
lock
nop
icebp
into
xchg
bound
push
insl
push
stc
pop
es
adc
xor
cmc
mov
insl
icebp
into
ja
shrl
stos
sbb
cmpsl
rol
jp
or
sti
cli
push
lret
mov
inc
cs
xchg
in
adcb
mov
sbb
test
clc
sub
xchg
popa
rorl
push
xor
jno
add
jno
mov
pop
movsl
or
cmpl
pop
int3
and
out
ret
pop
enter
pop
jb
push
mov
sub
jp
repnz
aad
movsw
roll
push
xor
addb
movsl
in
test
push
aas
imul
dec
scas
popf
mov
xchg
xchg
outsl
push
jbe
ss
lods
jb
xchg
xchg
fs
xchg
xchg
xor
xchg
or
xor
ss
in
or
xchg
add
scas
inc
iret
in
aas
xchg
aaa
ret
rcrl
mov
out
stc
xchg
cmpsb
aam
fnstenv
jge
dec
adc
fmuls
stos
and
and
data16
xchg
mov
pusha
sub
fistpll
sub
jnp
insb
cmp
sbb
dec
mov
xorb
push
fcompl
test
mov
sub
cmp
icebp
stos
imul
dec
dec
pop
pop
xchg
das
xchg
sti
lods
cmp
xchg
and
ja
pop
adc
and
xchg
je
xor
lods
jo
sub
inc
ljmp
or
movsb
inc
pop
sahf
cltd
xchg
xchg
add
push
add
test
xor
cli
inc
fstps
popl
out
fld
fs
inc
sbb
iret
sahf
jmp
mov
stos
int
jmp
push
jae
test
hlt
push
push
repz
mov
test
aad
xor
ror
std
fisttpl
leave
clc
aam
movsb
mov
jbe
fsubrs
xchg
or
das
scas
xchg
test
in
push
jmp
pusha
dec
pop
xlat
adc
shl
into
imul
imul
push
mov
test
daa
pop
xorb
ret
pop
sub
aad
mov
aad
dec
xor
enter
dec
es
mov
lds
fwait
xchg
in
inc
subl
es
dec
jnp
push
mov
fdivp
inc
jge
stos
testb
bnd
imul
insl
mov
mov
clc
shlb
stos
xchg
out
sub
mov
stos
jge
push
mov
sub
jmp
out
stos
adc
stc
inc
xchg
scas
pop
ret
xchg
push
pushf
imul
xchg
repz
jnp
fcmovne
xlat
push
in
push
nop
adc
jecxz
stos
jle
xor
in
vmovaps
cld
pop
xchg
sub
shlb
es
je
mov
nop
and
enter
scas
mov
xchg
push
stos
es
inc
jns
xchg
rcrl
cmpsl
ljmp
stos
in
aad
inc
cmpb
fisttps
mov
mov
xor
xchg
jae
rcr
inc
or
sub
pop
shlb
sbbl
imul
inc
xchg
insb
rcr
cmpsl
mov
mov
sarb
fwait
and
mov
ljmp
pop
je
dec
inc
and
fs
jne
push
repnz
lods
sar
cld
fld1
sbb
pushl
pop
jae
les
xchg
xchg
push
mov
repz
lods
ss
push
pop
and
xchg
xchg
jp
test
mov
stos
adc
push
scas
inc
enter
jb
mov
jb
dec
pop
pop
xchg
xchg
stc
sti
cmp
dec
mov
stos
push
cltd
mov
sti
lods
sbb
inc
fdivrl
xchg
lds
sub
sub
repnz
mov
xchg
cmpl
ret
pop
cmp
pop
xchg
repnz
ret
lods
int
push
pop
cmpsb
sbb
xchg
push
jno
mov
pusha
and
pop
les
lret
add
mov
ja
pop
dec
lock
sub
inc
sub
insl
xor
mov
es
xchg
dec
and
lock
cltd
repz
mov
in
mov
fs
adc
orps
lret
cmp
mov
mov
ljmp
lock
cmp
rcl
mov
cmp
out
insl
mov
ja
icebp
inc
mov
div
imul
push
outsl
outsb
push
daa
int
out
mov
hlt
sbb
add
push
mov
mov
sub
push
xchg
stc
roll
ja
and
mov
mov
jae
daa
loopne
shlb
aam
xlat
fs
rcl
iret
into
and
mov
lret
xchg
js
dec
push
xor
mov
pop
push
mov
notb
adc
movsb
mov
mov
pop
cmp
adc
mov
aam
xlat
mov
cmp
es
push
lea
rolb
inc
mov
ret
mov
push
mov
outsl
sarb
mov
sbbl
rcrb
aas
dec
insl
mov
int3
popf
xor
mov
mov
jl
loope
jp
pmaxub
xchg
aad
pop
shrb
sahf
inc
xor
dec
nop
mov
pop
add
and
mov
xchg
xlat
lock
cmc
out
and
xchg
test
adc
sahf
or
push
popa
sbb
pop
mov
or
ljmp
inc
lret
or
cmpsl
jecxz
leave
rcl
mov
pop
add
mov
pop
imul
jns
cmpsl
aaa
cwtl
dec
xchg
aam
cmp
scas
xor
aam
in
mov
int
daa
inc
pop
push
sarl
imul
sti
test
mov
vpshad
data16
stc
inc
pop
ret
out
shlb
mov
imul
fsubr
push
lock
pop
xchg
xor
je
xor
loop
hlt
into
rcll
mov
inc
sahf
dec
rclb
int3
cmpsl
push
dec
lods
hlt
pop
subb
xchg
xchg
in
je
call
lea
aad
or
pop
xchg
les
repz
xchg
pop
xchg
push
sub
call
rcrl
test
mov
adc
inc
rcll
mov
fs
inc
icebp
xchg
adc
or
repnz
and
mov
ljmp
pop
jns
push
or
test
aam
lods
or
cmpsl
mov
lea
jmp
sarb
adc
cmc
xchg
rcll
fwait
out
xchg
sarl
or
lods
aam
inc
in
ret
xchg
mov
iret
scas
push
xchg
adc
sarb
dec
adc
sbb
ret
icebp
mov
xchg
fistl
rcll
mov
cmp
pop
roll
xchg
xchg
ret
push
daa
jg
pushf
ja
fildl
outsb
xchg
lret
lods
bnd
inc
cli
pop
push
scas
lret
xchg
repnz
pop
mov
push
xorl
mov
inc
mov
inc
bound
cltd
adc
into
sub
xlat
std
xchg
repnz
fwait
test
fiaddl
pop
or
cli
mov
fisttpll
mov
rcrl
dec
aad
jmp
rcrb
rcr
sbb
aad
cltd
shlb
aad
rcrb
xor
fadds
pop
mov
inc
inc
push
repz
or
fcmovnb
push
incl
orps
inc
inc
lret
pop
xlat
xchg
xchg
inc
jno
or
clc
pop
sub
ljmp
sbb
je
call
cli
mov
loop
sti
ret
lret
pop
ret
pop
xchg
pop
add
loop
sub
sti
clc
cmp
xchg
sub
adc
lods
data16
mov
sbb
xchg
sbb
cs
and
repnz
out
mov
jne
ljmp
nop
in
test
cltd
pop
sbb
lea
fisttpll
scas
dec
icebp
xchg
adc
xor
xchg
leave
fistl
lea
inc
push
inc
xchg
inc
sub
lock
jecxz
insl
aad
movsl
inc
leave
xchg
jno
add
inc
fisubl
pop
in
xchg
scas
test
xchg
pop
es
mov
js
rolb
push
subl
pop
dec
stos
sbb
mov
pop
stos
ret
pushf
xor
xchg
outsl
cmp
pop
cmp
pop
or
insl
cmp
mov
flds
push
mov
xor
adc
fldt
push
push
push
inc
icebp
xlat
inc
repz
in
ret
fcoms
ret
jmp
mov
and
loopne
sbb
mov
sti
fidivrs
lcall
fistpl
fdiv
cmp
cmc
push
fnsave
pop
out
cli
fldcw
adc
test
xlat
mov
push
mov
pop
ret
mov
add
dec
jb
pop
inc
mov
xchg
ret
test
sbb
int3
inc
lods
es
pop
cmp
inc
xor
jl
inc
out
je
arpl
mov
scas
popl
mov
out
pop
ret
lea
sbb
jp
test
push
negl
push
push
in
out
adc
mov
cld
mov
fadd
push
and
lods
sub
sarl
fstl
in
repnz
clc
xchg
cmpsl
mov
outsl
add
imul
ret
cli
add
fildl
inc
int
push
hlt
mov
push
inc
adc
ret
lock
add
and
fldcw
xchg
iret
inc
sbb
xlat
mov
leave
inc
stc
sbb
sarl
fisttps
inc
aad
lock
mov
stc
cmc
jl
test
push
loopne
mov
mov
jne
or
or
sti
inc
mov
sbb
adcb
pop
btcl
cli
cmp
pop
stos
and
mov
lcall
jno
push
dec
sbb
sub
dec
icebp
mov
icebp
sub
clc
cli
inc
daa
sbb
xchg
cmpsb
ret
push
out
shrl
push
es
lds
cli
cmpsl
push
cmpsl
hlt
nop
stos
divb
jecxz
imul
icebp
push
jge
roll
sub
sbb
ret
rol
imul
in
aas
jne
dec
adc
pop
int3
popa
pop
push
test
fcompl
repz
lods
xchg
add
xor
fwait
push
ds
jnp
xchg
mov
adc
movsl
and
call
push
andl
xor
sbb
cmpsl
adc
push
add
shll
movsl
pop
mov
xor
lock
mov
out
repz
cmpsl
in
inc
cltd
mov
fistps
popa
leave
dec
mov
mov
push
outsb
cltd
cltd
aam
cmpsl
and
ss
stos
lock
ja
movb
ret
and
and
out
xorb
mov
testl
fistps
das
xor
cmc
xchg
es
cmp
movsb
push
dec
in
cli
or
repnz
or
sub
jae
inc
push
jmp
icebp
xchg
loope
push
hlt
mov
inc
scas
aaa
jp
cli
inc
movsl
push
loop
sbb
jne
sbb
data16
shl
fdivl
daa
fwait
inc
idiv
sbb
xchg
cltd
xchg
lock
xlat
cli
aas
push
xchg
jmp
cmp
pushf
test
repz
repz
shll
daa
mov
dec
xchg
push
jo
cmc
pop
je
lds
les
dec
and
test
loop
mov
rcrb
rol
push
orl
inc
stos
movsb
mov
in
jbe
movsb
mov
push
fsubrl
inc
sub
aas
or
push
xchg
fmuls
xchg
addl
insl
lahf
out
push
roll
mov
or
xlat
push
cmpsb
pop
stc
pop
mov
aas
mov
mov
push
aad
add
cmp
into
stc
pop
out
scas
or
arpl
aam
es
mov
data16
jmp
sub
dec
lock
insb
jg
mov
test
mov
jl
lock
test
sbbb
es
aaa
ret
or
mov
fwait
imul
in
fldl
les
cmp
testb
jmp
adc
fldcw
pop
int3
mov
aam
cmpsl
into
xchg
imul
in
daa
sbb
xchg
ret
cmp
sub
call
adcl
lret
movsl
hlt
data16
push
dec
clc
ja
subl
cmpsl
in
cmp
adcl
out
out
loope
cmpl
aas
imul
fstps
leave
icebp
and
sbb
icebp
mov
adc
popa
push
fsubr
stc
jno
ret
and
std
lods
int
push
sbb
lret
and
inc
stos
cwtl
es
adc
mov
lahf
xchg
fs
pop
in
pop
mov
jecxz
sbb
xchg
jbe
leave
pop
xchg
outsl
inc
repnz
lahf
pusha
mov
mov
mov
andl
rorb
repz
shrl
in
mov
es
add
dec
leave
push
push
pop
xchg
fmul
jl
lcall
xchg
mov
pop
mov
lock
xchg
mov
xchg
xor
stc
cmp
fwait
lahf
mov
imul
add
mov
fwait
sarb
mov
mov
pop
arpl
pop
movsl
jg
lods
mov
lret
js
push
and
repz
inc
push
arpl
pop
mov
xchg
enter
testl
push
pop
xor
mov
xorl
inc
dec
pop
mov
loop
fldt
movsb
jb
xchg
icebp
pop
ret
test
adc
pop
cmp
pop
xchg
aam
dec
icebp
popa
push
jb
in
outsl
orl
shlb
fwait
xchg
fidivl
fimull
int
sub
out
sbb
pop
sbb
inc
add
shr
pop
repnz
adc
mov
enter
mov
push
inc
or
lcall
out
in
pusha
test
rcr
arpl
hlt
mov
rorb
bound
cmpsl
push
das
ljmp
test
pusha
or
xchg
mov
lds
pop
stc
jb
repnz
jns
lahf
bound
xor
ljmp
imul
xlat
dec
or
pop
cwtl
aad
jno
aad
in
rol
popa
loope
lods
inc
test
fldt
stc
push
rcll
jae
mov
fwait
cmc
lods
arpl
in
outsl
rcll
lea
xor
rcrl
fs
gs
or
test
jbe
push
pop
pop
and
jo
lret
cwtl
std
das
mul
mov
inc
fstl
mov
test
fstps
jno
leave
jmp
mov
push
cmc
sbb
inc
xorl
in
data16
fs
fcmovbe
mov
sbb
add
fnstcw
jns
inc
enter
jb
mov
push
push
in
dec
out
jns
jne
ja
pop
dec
jg
popa
repnz
fsubrs
sbb
sbb
aas
jl
lahf
pushf
loop
jne
out
gs
dec
jo
fsubr
out
bound
pop
lock
aad
sti
in
loope
out
je
pop
js
inc
hlt
sahf
pop
push
cmp
loope
mov
sbb
lret
nop
push
push
push
insb
sarb
push
jg
add
xchg
cmp
or
stc
js
out
push
arpl
dec
shll
ja
les
pop
je
into
popf
inc
pop
jb
lods
loop
push
cmc
inc
das
cmp
out
aad
addr16
push
jmp
out
mov
imul
xor
iret
sbb
outsl
in
pop
mov
test
add
in
xchg
imul
mov
sbb
fcmovnb
fcomip
out
movsb
icebp
sbb
popf
scas
jne
xlat
subl
lods
xchg
xchg
fstpt
mov
mov
int
jae
das
jg
push
fistps
scas
sar
rorb
stos
pop
pop
test
in
mov
inc
sbb
pop
pop
push
xor
lods
test
rcl
addb
mov
fcmovnu
add
lods
scas
in
hlt
popa
pop
std
or
cs
cmp
dec
scas
push
int
pop
jae
inc
cmpsb
movb
pop
loope
aam
mov
push
pop
out
jae
inc
icebp
andb
decl
jmp
mov
popa
rcr
dec
xchg
in
add
out
fstpt
cltd
sbb
fcmove
iret
or
filds
and
sub
imul
inc
fwait
loop
aaa
push
push
movsl
rol
jae
int3
cwtl
loop
push
orl
or
xchg
pop
in
add
imul
lahf
ss
fcomps
xor
jp
leave
push
fnstenv
adcl
push
cmpb
sub
add
rol
pushf
movsl
lods
shl
xorl
push
test
xchg
sub
push
pop
addl
or
test
rcrl
or
and
xchg
dec
cltd
pop
xor
cmpsl
add
pop
mov
es
inc
addr16
push
lock
sbb
adc
push
fmuls
jb
popf
and
lahf
adc
in
shll
xchg
sti
push
jg
xor
sti
add
lret
mov
addr16
jo
rorl
fcmovnb
mov
sbb
idivl
mov
jno
xchg
push
jmp
push
pop
mov
sbb
ja
xorps
addb
js
cmp
icebp
arpl
xlat
dec
push
mov
pop
and
fstps
popa
in
ficompl
jg
lret
jb
mov
shlb
jno
jmp
sbb
push
hlt
ficoms
jne
dec
notl
hlt
dec
out
xchg
rclb
mov
mov
mov
iret
lcall
sbb
es
repz
std
rep
rcll
xlat
fisttps
ficoml
pop
xchg
jno
inc
push
roll
popf
xlat
xchg
clc
push
lret
fisubrs
mov
push
imul
sub
insb
addr16
inc
inc
lock
jb
stc
inc
mov
inc
cld
mov
pop
xchg
inc
mov
xchg
in
sbbb
push
push
jge
int3
add
aas
rcl
add
sbb
mov
xlat
insb
leave
sbb
stos
push
inc
push
cli
ret
ja
cmc
imul
sub
pop
push
ja
cmpsl
jmp
push
pop
mov
fwait
out
cmpsl
int
add
add
test
mov
push
gs
xchg
in
adc
loop
pop
mov
sbb
xchg
fninit
insb
fistl
fistl
repz
push
iret
imul
xchg
push
xchg
pop
fildll
push
sti
jmp
push
bound
pop
push
imull
xor
add
mov
xlat
daa
mov
xor
stos
es
in
inc
push
mov
inc
push
lds
xlat
xlat
add
mov
push
stos
sbb
popf
push
notb
push
fst
jno
ficomps
push
pop
cmpsl
add
xor
inc
roll
ret
clc
xchg
xchg
mov
daa
inc
iret
mov
push
pop
jle
add
add
cwtl
sbbl
scas
ficoml
je
mov
shl
ljmpw
push
scas
in
imul
xlat
fimuls
mov
mov
jmp
push
fdivl
mov
mov
mov
pop
jae
in
fwait
adc
push
xlat
mov
lcall
popa
inc
pop
push
lret
movsl
dec
jmp
sbbb
pop
js
idivb
sbb
je
leave
bound
lea
pop
inc
aam
mov
dec
call
pop
hlt
fs
push
add
push
xchg
pop
imul
sbb
push
push
sub
clc
push
sti
fwait
mov
pop
aam
stc
jl
mov
ljmp
fnstsw
xlat
sbb
repz
rol
xlat
jno
out
rclb
push
jbe
inc
popf
jmp
push
aad
fildl
mov
fidivl
test
fcmovnu
pop
pop
xlat
cmpsl
cmp
fcompl
mov
nop
mov
jnp
mov
xor
fidivrl
div
xchg
sbb
fcomip
std
pop
sbbl
fsubrs
mov
popf
pop
push
lret
fucom
and
pop
loop
pop
repz
shl
push
ret
xchg
ret
pop
mov
icebp
scas
call
xchg
fimull
xchg
rcl
pop
loopne
outsl
mov
icebp
mov
sbb
xchg
imul
aad
iret
mov
mov
lret
dec
jmp
in
xchg
jo
inc
xchg
sbb
xchg
sbb
sub
into
stos
dec
sub
lahf
lcall
std
xchg
lret
icebp
inc
dec
loop
ret
push
push
xchg
ret
mov
sub
inc
dec
int3
mov
jge
sbb
lret
ja
int
jle
pop
cmp
jo
lock
push
sub
test
cmp
cli
jmp
sub
inc
aas
push
xor
testb
inc
jne
push
rclb
cmp
into
sub
dec
mov
xchg
inc
cmc
sub
test
mov
sub
push
stos
push
loop
sub
leave
aam
repz
mov
dec
loop
ljmp
rorl
pop
js
push
sub
shlb
and
mov
fsubr
adc
insb
jne
xchg
aam
arpl
outsb
ljmp
dec
divb
je
shrl
mov
rcr
ja
in
sbb
mov
mov
jp
inc
cld
sahf
testl
outsb
jnp
pop
mov
jmp
and
out
or
insb
fstps
pop
cli
nop
adc
sub
loop
xchg
jg
sub
fistps
neg
jmp
xor
jb
out
dec
sub
sub
sub
pop
adc
je
addr16
push
mov
jae
cltd
mov
mov
les
idivl
out
jno
jo
int
addr16
jle
addl
aad
inc
jb
pushf
inc
jbe
es
inc
or
lods
mov
push
mov
push
push
cmc
iret
call
in
faddp
lock
data16
sub
addr16
addr16
das
fdivr
mov
pop
int
mov
inc
mov
xchg
fbld
inc
into
xchg
jb
scas
pop
sti
repz
testl
inc
fdivrl
inc
xchg
inc
pop
mov
leave
lret
loope
push
mov
addl
and
sbb
push
je
cli
hlt
fcom
test
cmp
push
shll
adc
out
jl
inc
push
pop
push
das
fidivl
scas
fsubrs
ja
outsl
in
jb
and
in
cmc
and
jmp
testl
pop
cmpsl
pop
fisttpl
testl
popf
movsl
daa
inc
movsl
xchg
leave
rcll
mov
adc
stc
test
or
stos
repz
pop
pop
cli
clc
pop
cmc
or
inc
cmp
mov
lea
mov
sbb
mov
insl
das
rcr
mov
or
pmuludq
fdivp
icebp
push
add
gs
pop
push
and
je
test
enter
push
dec
mov
aas
jmp
jmp
aaa
pop
cmp
inc
inc
push
fwait
lahf
or
frstor
out
scas
xchg
loope
sbb
jl
jmp
cmpsl
pusha
mov
ss
ja
cmpsl
iret
push
xchg
decl
out
sbb
sbb
pop
push
sbbb
push
pop
mov
or
stos
push
fsubrs
lcall
aas
inc
inc
icebp
stos
mov
pop
cmc
sbb
inc
int
or
cmc
addl
into
jns
testl
ficompl
in
pand
repnz
dec
pop
mov
int
icebp
divl
sbb
mov
dec
dec
sub
std
inc
ret
dec
stos
fcmovne
adc
mov
xlat
std
dec
jmp
int
lds
pop
jnp
shlb
xchg
pop
mov
popa
adc
leave
and
into
test
add
jmp
mov
xchg
fisttpl
shld
inc
xchg
dec
js
mov
stc
js
fiadds
pop
pop
idiv
sarl
out
inc
divl
in
sbb
rorl
sub
call
jb
cltd
je
jl
cli
mov
or
push
mov
fcomip
repz
mov
jnp
lcall
jae
jecxz
das
pop
xchg
in
int3
fistl
dec
aad
and
icebp
push
xchg
push
stc
mov
dec
ja
push
popf
pop
xorb
jl
dec
push
pop
mov
xchg
into
push
bound
fst
loope
jo
outsl
cmp
push
orl
pop
ret
dec
in
inc
xchg
ret
roll
push
inc
sbb
lds
mov
push
orl
xchg
lea
lods
insb
test
cmp
stc
in
add
mov
lds
pop
cli
sti
fidivl
pop
lock
sti
xchg
lods
mov
push
push
iret
lret
dec
fs
std
mov
pop
int
mov
inc
movsl
in
test
adc
stos
scas
int
jno
jecxz
dec
popf
negl
mov
icebp
lock
jecxz
mull
push
subl
lahf
sahf
sbbl
push
pop
jnp
out
test
pop
call
lea
xchg
sub
popl
fwait
xchg
mov
xor
dec
orl
mul
int
mov
into
testl
lds
imul
push
adcl
ja
int
aad
pop
scas
testl
push
adc
imul
mov
repz
push
pop
or
loope
ja
mov
sbb
mov
int
popf
pusha
mov
mov
int
inc
test
js
icebp
jbe
jecxz
in
pop
xor
cmpsl
lret
push
stos
mov
inc
shl
jmp
cmc
or
mov
pop
rcl
mov
inc
in
jmp
mov
mov
pop
or
in
movsl
int
jne
ficoml
clc
mov
xchg
loope
cmpsl
fimull
cmpsl
jne
xchg
test
hlt
or
fidivrs
sbb
push
jbe
jp
shll
movsl
fstps
mov
fcmovnb
lea
jmp
pop
xchg
cmpsb
mov
push
add
testl
aaa
adc
flds
push
add
xchg
hlt
adc
pop
sub
sti
cs
loop
hlt
pop
xlat
cmpsl
sti
js
mov
jnp
mov
sbb
adc
jecxz
aaa
pop
out
pop
hlt
gs
popa
sbb
mov
sbbb
mov
in
jns
mov
sub
xchg
test
xchg
push
pop
ljmp
sbb
lods
add
mov
jl
mov
sub
cli
push
and
cli
scas
aam
stc
and
hlt
test
lds
gs
idiv
popf
divl
mov
lea
negl
pop
cmp
subl
int3
movsl
lock
stc
into
leave
lock
sti
pop
xchg
mov
mov
push
lea
pop
jecxz
mov
pop
icebp
inc
pop
mov
movsl
stos
cmc
jecxz
fnstcw
test
decl
icebp
push
dec
pop
fsts
add
jo
xchg
inc
inc
fistl
mov
mov
mov
dec
sub
mov
inc
sbb
pextrw
mov
icebp
rol
xchg
sbb
pop
cmc
xor
out
mov
xor
test
mov
jg
cmpsl
stos
fldl
pop
iret
pop
jmp
in
pusha
xchg
pop
mov
popf
sar
mov
fsts
fcmovnu
jge
jmp
mov
jne
adc
sbb
xor
insb
fildl
xlat
sbb
jne
inc
div
push
add
shlb
sub
jne
inc
add
loope
inc
test
cmp
jecxz
inc
outsb
sbb
mov
stos
cmp
icebp
push
negl
xchg
fwait
mov
cmp
sbbb
xchg
loop
fildl
arpl
ret
and
in
ja
enter
loope
rorl
scas
loope
cltd
repnz
xlat
jb
and
rcrl
mov
xchg
fisttpl
sbb
lds
pop
cmc
mov
repnz
ret
push
xor
addr16
in
fnstsw
jne
push
addl
or
test
clc
jmp
out
jle
pushf
roll
mov
cmp
mov
loope
insb
xlat
fucom
insb
cli
sub
cmp
pop
cmp
pop
mov
mov
mov
lods
lods
jo
xchg
test
mov
insl
scas
pop
dec
into
and
xlat
test
jp
push
fcomps
fninit
cmp
cmc
mov
fcomi
cld
mul
sbb
data16
xor
sbb
mul
test
sti
jmp
imul
int
lock
stc
mov
shll
fidivl
test
mov
jno
inc
in
cmpsl
pop
shlb
ja
rol
icebp
xchg
jl
sbbb
inc
call
pop
sub
pop
stc
sbb
mov
jno
stos
jno
fstpt
out
rcl
jl
out
fistpll
pushf
and
lods
inc
popf
ljmp
push
stc
sub
jae
cmpsb
leave
jno
inc
pop
idivl
jl
inc
push
xor
inc
stc
xor
aas
out
jecxz
sbb
adc
pop
shll
inc
push
stc
das
sbb
jns
leave
fsts
and
loopne
daa
int3
stc
inc
mov
icebp
rcll
loope
jmp
arpl
mov
out
and
cld
pop
daa
iret
mov
mov
jle
out
iret
or
cltd
pop
inc
pushf
push
in
loope
mov
jmp
mov
out
lahf
in
inc
aad
xchg
idivl
lahf
movsb
fcmovnb
call
mov
call
xchg
xchg
call
xlat
mov
push
stc
push
xchg
add
pop
xchg
mov
pop
mov
wbinvd
push
subb
xor
arpl
in
mov
sbb
cmp
mov
das
xlat
cmp
xchg
imul
mov
xchg
pop
jae
mov
outsl
ljmp
mov
adcl
push
stc
ret
sbb
outsb
std
lahf
jb
outsb
inc
inc
test
lds
pop
add
je
or
cwtl
mov
fwait
cmp
in
cmp
jecxz
inc
mov
leave
mov
int3
movsl
mov
in
and
sub
cli
fstl
pop
cmpb
ja
sti
sub
mov
ret
fldt
cmp
lds
pop
inc
jnp
xchg
shl
std
and
cmc
mov
xor
call
fwait
inc
cmp
jns
mov
stc
jge
inc
imul
out
rol
mov
scas
shll
fistpl
pop
fdivrs
dec
jle
push
dec
mov
cmp
sub
push
andb
divl
hlt
stc
sub
xlat
xchg
push
inc
xor
lds
iret
inc
xchg
and
scas
in
mov
mov
cmp
lahf
popa
push
addr16
xor
addl
ret
sbb
mov
pop
sub
mov
and
repz
lea
pop
sbb
dec
out
int
std
pop
mov
jmp
xchg
sbb
pushf
mov
sbbl
cld
pop
repnz
xlat
and
pop
fcmovnu
mov
fs
inc
mov
mov
xchg
hlt
and
mov
aas
movsl
std
inc
lds
xor
push
or
push
iret
pop
xchg
xchg
mov
mov
loope
jmp
adc
hlt
repnz
stos
in
xchg
mov
notb
and
xchg
shlb
ret
imul
icebp
in
sbb
test
xchg
test
stc
rcrl
cmpl
je
sti
jmp
jl
xorb
shl
xchg
out
dec
lret
pop
out
pushf
xchg
fdivr
and
xchg
push
xchg
jmp
ret
adc
and
pushf
stos
int
mov
mov
sbb
stc
inc
das
fwait
negl
mov
xchg
fwait
rcrl
mov
pushf
xchg
jmp
xor
loope
mulb
aad
aad
mov
fistpll
jae
adc
aam
push
cmc
gs
addr16
cmp
ret
scas
jbe
cmpsl
je
lds
dec
mov
insl
jmp
xor
or
xchg
icebp
andl
mov
jmp
sbb
roll
add
dec
push
jmp
add
dec
push
fnstenv
daa
nop
sub
frstpm(287
je
pop
push
sbbb
cmp
hlt
add
iret
mov
sbb
repz
jl
lcall
jb
xchg
lahf
push
jmp
jmp
mov
sbb
inc
sarb
jp
push
jae
shl
push
into
mov
sbb
mov
xlat
roll
mov
mov
inc
shl
mov
jp
arpl
js
into
sub
cld
stos
push
jl
into
subl
adc
xchg
out
int
adc
mov
aad
in
mov
sbb
xchg
or
and
dec
cmpsb
xlat
es
cltd
xchg
icebp
fstpt
sbb
push
xlat
fwait
mov
xchg
jb
ret
push
adc
push
ret
outsl
aam
jecxz
negb
mov
mul
mov
push
mov
sub
push
cli
rorb
xlat
pop
inc
jmp
hlt
sub
lret
ficoml
shlb
into
leave
int3
inc
stos
push
hlt
jno
push
mov
sub
inc
mov
movsl
xchg
pop
push
or
jnp
push
adc
les
std
xchg
cmc
fnstenv
mov
jbe
fcmovb
jl
mov
xor
iret
sub
fsubrl
pop
icebp
mov
sbb
call
std
mov
xchg
out
in
inc
jmp
jmp
adc
call
mov
pop
mov
xor
je
mov
pop
mulb
icebp
out
rep
int
jbe
inc
addr16
sbb
ret
add
shll
stos
sbb
aam
pop
ret
jno
add
dec
jmp
mov
push
xor
popf
sub
vpackssdw
push
pushf
mov
stc
add
xor
std
or
cmp
lock
xchg
ret
popf
ret
in
inc
push
notl
cmc
sar
std
sbb
ret
loope
loopne
inc
mov
xrelease
pop
test
std
repz
mov
test
pop
out
jg
push
test
xlat
in
mov
fnstsw
adc
shr
mov
mov
mov
jmp
fwait
rorl
scas
mov
xchg
push
mov
push
loope
cvtps2pd
ss
filds
dec
pop
mov
mov
mov
in
mov
or
dec
enter
pop
ret
iret
mov
mov
cmp
push
lret
ja
fildl
cmp
xchg
push
xchg
rcll
mov
in
adc
xchg
mov
mov
dec
repz
pop
cmpsl
mov
jmp
ret
push
loopne
add
mov
mov
mov
dec
dec
jmp
jmp
dec
popl
ret
loopne
pop
lea
mov
icebp
orl
stc
push
rcll
cmp
xlat
fisttpl
mov
add
orl
mov
jae
xchg
fidivrl
cmp
in
inc
addr16
ss
pop
movsb
jl
xlat
out
outsb
sti
aad
sbbb
rep
push
test
mov
clc
or
std
mov
orl
or
jae
in
pop
sbb
mov
jb
cwtl
add
test
cltd
stc
or
jae
pop
sti
pop
or
dec
fcmovnbe
stc
addr16
jne
aam
jae
inc
aaa
mov
hlt
mov
loope
inc
lahf
fs
gs
ljmp
aam
testb
aam
jl
pop
pop
fisttpl
lea
cmp
mov
cmc
aaa
xchg
divl
dec
sub
xor
xchg
jns
xor
xchg
ja
jecxz
lea
fwait
clc
int
add
jbe
jle
jne
cltd
decl
fstps
mov
and
imul
xchg
jb
push
sar
cltd
daa
jmp
addr16
into
popa
cmc
incl
push
incl
out
mov
sbb
cli
add
jne
mov
sub
test
jp
dec
sbb
cs
shll
sub
push
lods
jge
sub
out
daa
repz
imul
in
pusha
fcmovnu
xchg
data16
sub
xor
push
jns
sar
out
inc
fucomi
pop
in
aad
outsl
adc
push
fbld
or
out
test
imul
adc
mov
push
psubsw
es
cmp
out
test
push
mov
lea
pop
gs
insl
outsb
test
in
and
or
popf
and
lods
mov
mov
test
adc
dec
inc
dec
in
push
je
add
ds
lea
std
mull
mov
pop
dec
push
or
clc
mov
inc
fldenv
mov
and
lcall
stos
sbb
sar
cmp
ret
inc
jl
sti
push
xchg
sub
xor
push
push
mov
cmp
fistpl
or
and
lret
pop
push
and
outsb
daa
mov
movsl
cli
decb
or
sub
orb
sti
movsb
fisubrl
sarl
inc
cmp
add
popf
jno
into
das
sti
cmp
jp
push
push
roll
lea
ja
jbe
pusha
shll
es
jb
or
rorl
insb
push
xchg
in
cmp
pop
adc
inc
push
add
dec
popa
in
xchg
cwtl
test
jno
enter
inc
outsl
les
xlat
lahf
xchg
pop
pop
add
scas
cmpsl
ret
aad
nop
sbb
ret
sbb
dec
jmp
in
adcl
inc
shrl
dec
pop
das
push
push
mov
push
jno
adc
pop
insb
aam
sarb
shr
ficoml
es
sbb
fisubrs
jmp
xlat
sbb
ret
push
push
pop
pop
shll
ret
imul
fisubl
inc
int3
movsl
ret
mov
inc
cmp
push
push
outsb
daa
icebp
addr16
push
mov
ss
iret
popf
jbe
repnz
loope
add
es
inc
cmp
mov
in
jae
fwait
rcr
out
lret
jb
int
ret
arpl
das
mov
and
push
pop
mov
scas
inc
xchg
inc
xchg
out
dec
xchg
faddl
push
push
es
push
and
in
jmp
ljmp
cmpsl
testl
lret
sbb
fsubrs
es
mov
sti
movsl
cmpb
es
add
or
dec
mov
mov
loope
dec
mov
jmp
xchg
mov
dec
pop
push
es
xchg
pop
into
aaa
ret
ror
insl
in
adc
loope
lock
stc
sub
sti
fdiv
lret
pop
adc
dec
repnz
iret
fcomi
shl
lret
pop
lret
std
sar
lock
sarb
leave
dec
jo
ret
cmc
div
inc
sbb
jno
shrl
xchg
ja
adcb
cmp
imul
jb
pop
push
repnz
addr16
scas
push
fwait
stc
std
push
lods
dec
xchg
jne
add
pop
sub
cmc
fcomip
push
cmp
out
nop
outsb
jne
shlb
jnp
pop
ret
aaa
arpl
sbb
fisubrl
mov
nop
sbb
adc
repnz
mov
incl
xchg
fwait
pop
addr16
nop
dec
xchg
lock
ss
xlat
adc
repnz
scas
cli
fstps
xchg
jecxz
pop
mov
mov
xchg
dec
jmp
sbb
lea
jmp
rcr
cmpsl
loope
ret
mov
xchg
mov
mov
xor
mov
xchg
xchg
lcall
xchg
jae
xlat
shl
loope
inc
mov
pop
dec
pop
sbb
repnz
cmpsl
loopne
sbb
or
daa
jl
aas
dec
cmpsl
xor
sbb
sbb
cmpsl
aad
addr16
mov
or
fiaddl
hlt
iret
outsl
push
aad
mov
lret
xor
fcmovbe
popf
pop
repnz
adc
test
outsl
inc
sub
cli
pop
dec
rcrb
fsubs
inc
mov
push
cmpsl
adc
in
jg
push
mov
iret
jbe
cld
adc
jl
ret
ret
popa
or
or
lods
roll
sbb
lds
in
adc
adc
inc
lcall
fcoms
jno,pn
test
cmp
out
popa
ficoms
pop
lods
cmp
sub
adc
in
and
cwtl
pop
pop
mov
push
cmp
xchg
xchg
aad
mov
sub
mov
jo
out
repnz
mov
push
cli
sub
test
shlb
pop
inc
sub
fwait
adcl
adc
insb
aad
imul
in
inc
adc
xlat
xlat
test
dec
push
jae
loope
adc
jno
add
add
js
addb
ret
inc
push
cld
push
pop
sbb
push
jo
repz
pop
dec
or
jbe
movsb
arpl
jmp
jp
push
inc
fcomi
sub
in
jmp
loope
stc
call
xchg
xchg
dec
mov
cmp
jns
popa
aam
add
xor
sbb
repnz
loopne
sahf
push
adc
lret
repnz
mov
xchg
cld
xor
sub
lret
imul
sbb
bnd
ret
mov
not
jbe
ret
inc
sti
rorl
lret
sbb
cmc
cmpsb
mov
ret
push
mov
mov
dec
data16
xchg
icebp
faddl
inc
inc
push
push
cmp
lret
cmp
lods
and
divl
sbb
aaa
sub
insb
and
clc
hlt
test
loopne
pop
pusha
fmull
lock
bound
xlat
mov
cli
popa
stc
shlb
mov
std
dec
loope
int
out
lods
repnz
mov
fsubrs
mov
data16
xchg
add
call
mov
mov
pop
out
mov
fucom
nop
ja
outsl
push
xchg
jp
pop
in
lds
test
and
add
jmp
fists
scas
insb
xlat
or
leave
repz
shl
sti
ret
insb
push
inc
cli
rcr
push
xchg
neg
adc
lcall
fisttpll
dec
in
fstps
nop
cmp
repz
xchg
pop
xchg
sub
xchg
das
ret
pop
or
fisubrl
mov
push
out
or
pop
inc
test
adc
lods
imul
addl
xor
inc
rclb
imul
inc
cmp
popa
and
or
loopne
pop
add
sub
test
mov
ja
lea
pop
insl
inc
ljmp
out
and
sbb
jecxz
out
jae
cmpsl
mov
insb
or
sbb
mov
xor
sbb
movl
mov
pushf
sbb
ret
cld
lods
mov
jb
lods
aaa
cmp
jbe
loop
fcomip
mov
xchg
cli
out
in
js
fidivrl
add
fdiv
bnd
test
test
jge
xchg
into
es
pop
in
dec
subl
fbld
pop
cmp
pop
out
push
test
push
and
imul
scas
lret
pop
lahf
jo
imul
pop
mov
sti
push
mov
mov
mov
mov
jmp
mov
arpl
jb
jmp
mov
imul
xchg
pop
cmp
or
lahf
push
sub
fnstenv
mov
push
cmp
iret
sti
xchg
xchg
xchg
xor
mov
lea
cld
jg
pop
mov
es
sti
aad
xor
mov
dec
int3
das
sar
jno
repz
xchg
xchg
clc
jp
test
pop
rcr
cmpsb
xchg
sbb
ja
nop
cli
xchg
pop
scas
pop
xchg
test
ret
ret
icebp
mov
xchg
repnz
test
jmp
mov
pop
es
cmpsb
dec
loop
pop
pop
fsubrs
in
inc
pop
out
nop
pop
fisttpl
inc
mov
mov
ret
xchg
lock
jmp
icebp
test
push
xor
mov
bound
jb
imul
inc
pusha
inc
dec
repnz
sti
out
sti
fisttpl
idivl
popa
in
mov
into
movsb
int
scas
pushf
dec
arpl
mov
out
and
pop
popa
push
lods
xchg
inc
adc
insb
adc
js
orl
outsl
test
leave
popl
xor
mov
shrl
xchg
push
cmc
sti
xchg
mov
test
push
add
loopne
int
and
xlat
adc
xlat
ret
dec
or
subl
aad
sub
repnz
scas
inc
cmp
es
imul
inc
pop
out
test
mov
pop
mov
rol
testb
ret
loope
ljmp
cwtl
jmp
jge
xor
jl
inc
mov
cld
rcrl
addr16
fbld
cs
add
push
pop
sub
xchg
xchg
pop
jle
xor
jb
loope
popf
inc
jl
cmp
jecxz
push
cmp
cmp
scas
sbb
xor
ja
inc
lret
pop
sub
fldl
push
jl
aad
test
es
outsl
cmp
stos
jge
aaa
jmp
and
xchg
inc
jle
inc
push
repnz
xlat
int
clc
inc
dec
mov
bnd
sbb
leave
inc
loop
jbe
mov
loop
mov
cmpsl
or
movsb
psrlw
sahf
sbb
test
jae
sbb
lcall
hlt
sub
iret
ja
adc
sub
aad
push
push
cmpsl
and
outsl
je
leave
dec
add
xchg
shll
out
cmpsl
pop
jne
dec
and
imul
cmp
cld
xchg
pushf
shl
daa
and
ljmp
pop
movsl
nop
subb
aas
testl
sahf
insl
pop
push
jp
xor
rcr
js
dec
jo
sbb
xlat
jns
lea
xchg
es
jp
out
sbb
les
fcmovbe
mov
pop
aad
icebp
in
push
inc
push
xor
mov
inc
add
jmp
loop
ret
dec
sti
ds
mov
xchg
cli
rcll
mov
pop
fiaddl
sti
cmp
ss
shlb
jge
cmp
out
xor
jge
aad
inc
hlt
lret
loope
shl
negl
call
mov
leave
push
inc
jp
dec
jge
in
mov
jne
xor
mov
cli
add
sub
or
scas
pop
in
push
dec
and
sbb
out
es
leave
jne
xchg
add
js
mov
sbb
pop
movsl
movsb
fcomps
mov
popa
fcomi
jecxz
sub
adc
test
cltd
ret
push
int
mov
repz
insb
jnp
and
push
jb
xchg
outsb
leave
cltd
je
sbb
mov
sbb
push
mov
lret
test
je
xchg
inc
xlat
inc
push
jb
adc
xor
inc
mov
ret
adc
cmpsl
inc
popa
into
lret
jl
push
jb
inc
imul
push
push
imul
adc
flds
xchg
stos
jne
and
pop
sub
imul
inc
xchg
dec
sub
push
mov
xchg
jg
out
adc
cmpsl
mov
add
jl
scas
mov
int3
sub
je
test
xchg
mov
jbe
mov
sbb
ss
vcvttsd2si
jbe
ja
sub
lahf
jo
out
rcll
adc
pushf
dec
sub
rclb
dec
xchg
xor
jno
mov
mov
mov
fldcw
lret
inc
jns
lahf
push
xchg
push
xchg
adc
xchg
pop
insl
mov
das
mov
push
test
rcrl
movsb
lret
out
or
lahf
in
jno
popa
addl
mov
sbb
test
push
sub
leave
lcall
inc
fcomi
jg
jp
pop
ret
xor
aad
add
inc
test
jp
pop
sbb
and
or
into
outsl
or
shr
inc
loop
mov
fldt
sbb
cmp
ffree
adcl
lock
mov
push
mov
iret
insl
stc
lret
cltd
jns
xor
sub
adc
jmp
clc
cwtl
push
xor
pop
std
mov
push
sub
ds
sti
pop
sub
mov
jb
sahf
mov
fwait
mov
sub
popf
dec
icebp
inc
mov
in
xor
fwait
aaa
xchg
jb
cmp
mov
mov
inc
les
jge
add
jecxz
jbe
std
add
mov
leave
shl
pop
cli
std
xor
cltd
mov
rcrl
push
xor
xchg
push
mov
xlat
fdivr
push
stc
mov
fstl
andl
cmpsl
push
mov
stc
mov
fadds
js
xchg
sahf
aam
in
xlat
xchg
fldcw
not
fwait
pop
mov
test
mov
ficompl
sbb
rcr
cmp
lahf
mov
scas
push
xchg
repz
inc
outsb
xchg
dec
push
push
sti
fbstp
icebp
mov
mov
mov
push
pop
mov
xchg
push
aam
lret
add
push
xchg
sub
and
rcl
mov
pop
repnz
sbb
cmc
cmpsl
mov
lock
sbb
fbstp
pop
sti
lock
mov
mov
jb
testl
jp
sbb
test
in
mulb
add
push
adc
and
insb
mov
jne
add
add
icebp
adc
add
push
test
aaa
repz
arpl
shrb
xchg
push
and
leave
mov
xchg
sub
mov
and
insb
and
push
dec
mov
test
mov
cltd
mov
push
pop
jmp
pop
add
fisubrs
push
sti
loope
mov
mov
aaa
mov
in
sbb
push
pop
enter
fcoms
fcom
sub
sub
ret
inc
push
adc
adc
mov
je
pop
xchg
xlat
mov
mov
mov
adc
and
jb
inc
add
mov
cld
popa
icebp
imul
lahf
dec
hlt
insl
cmp
nop
cmpsl
icebp
jmp
nop
inc
stos
cmp
fld
push
add
dec
jnp
ret
aam
cmp
ss
and
adc
shlb
mov
test
icebp
inc
mov
mov
in
sbb
es
xlat
test
mov
mov
fists
std
xchg
inc
xor
mov
mov
pop
adc
loop
in
dec
rol
pop
or
xchg
sub
mov
jbe
fwait
popa
in
das
shlb
xchg
jns
or
lret
cmc
stos
cmc
hlt
xchg
jle
mov
aaa
add
add
jns
mov
aad
in
hlt
test
jl
aad
cmpsl
or
movsl
sbb
test
push
lock
xchg
adc
add
stc
repz
nop
mov
inc
sbbb
mov
dec
push
ficoml
fildll
lock
sti
xor
lcall
or
cwtl
pop
push
icebp
lahf
or
pop
fucomp
and
jle
push
enter
sbb
dec
incl
rcrb
hlt
movsb
xchg
es
xchg
imul
imul
mov
fwait
es
movsb
lret
or
add
pop
jb
movsl
cmpsl
add
pop
mov
addr16
fistl
cmp
mov
es
jge
mov
sub
push
xor
hlt
imul
sbb
push
xchg
ret
fmulp
nop
js
mov
mov
jl
pop
or
pop
jp
jp
hlt
cmpsb
dec
mov
push
fs
xchg
or
sbb
or
rclb
stos
incb
sub
stos
push
sbb
mov
stos
jmp
leave
out
jmp
jns
xlat
jne
jbe
in
aam
mov
mov
rcrb
jns
div
mov
sub
rorl
out
mov
and
sti
loopne
hlt
es
jb
add
iret
mov
pop
mov
xchg
popa
test
leave
sub
jmp
and
push
in
inc
add
xchg
mov
jb
jmp
lods
xor
mov
int
jp
gs
mov
jp
sbbb
stos
cmpsl
les
loopne
mov
push
fadd
scas
fistpl
repz
xorl
inc
shlb
inc
mov
inc
into
mov
stos
jnp
icebp
lea
push
xchg
dec
push
inc
fcmovnb
push
sub
mov
iret
scas
hlt
push
push
mov
pop
dec
and
lods
mov
fsubs
pop
sbb
inc
ljmp
loope
ljmp
mov
sbb
arpl
mov
das
sub
mov
imul
jbe
xchg
jae
cltd
dec
addr16
ficoml
leave
shll
mov
imul
jle
into
fwait
icebp
and
mov
inc
and
and
cmc
rcr
mov
add
mov
cmpsl
push
scas
add
cmp
and
mov
pop
pop
ret
inc
insb
pushf
negl
dec
lcall
push
add
inc
adc
pop
ret
jle
arpl
cli
stc
mov
push
aam
push
lds
fdivp
lahf
inc
inc
mov
pop
jbe
inc
pop
xlat
xchg
cli
inc
insl
inc
rcrb
ss
jmp
jbe
sti
pop
hlt
add
mov
icebp
mov
cli
rcl
pop
mov
fisttps
adc
sub
mov
cld
in
rcr
mov
testl
jp
add
inc
jno
dec
in
mov
lret
xchg
sbb
lds
push
inc
inc
mov
fs
or
push
cmpsl
push
or
lea
cs
mov
in
adc
pop
push
inc
insl
pop
jo
push
adc
rorl
jo
push
ljmp
push
or
adcb
lahf
mov
xchg
insl
or
rol
and
inc
call
jae
adc
jbe
or
pop
in
imul
xchg
adc
push
cmpsl
cmp
push
icebp
loopne
mov
es
xchg
fidivl
adc
and
push
inc
ss
imul
fcoms
loopne
push
in
mov
jmp
push
addr16
mov
push
cmp
xchg
in
fdivl
cmpsl
in
in
dec
cmpsl
repz
stc
test
pop
ficoml
xchg
pop
cmpsl
mov
mov
xor
pop
call
loope
repz
jno
icebp
sbb
cmpsb
adc
sub
ret
fidivs
push
adc
leave
push
or
lea
ja
pop
outsl
xor
dec
mov
and
cld
xlat
stos
add
fldln2
aaa
xchg
dec
mov
adc
shr
jecxz
pop
jb,pt
jge
rcll
mov
xchg
and
test
sarl
sub
jmp
popf
xchg
ficoms
fisttpll
into
hlt
pop
pop
in
mov
js
test
mov
xchg
sub
rcll
outsb
incl
stos
fisubrs
jge
dec
fwait
push
int3
iret
sbb
cli
outsl
fistl
adc
inc
loopne
push
mov
pop
jne
stos
push
mov
clc
dec
mov
out
jno
loope
lods
rcll
adc
call
dec
popf
inc
mov
aas
loope
sti
ljmp
sub
mov
repnz
cmc
fwait
jle
push
stos
dec
lds
sti
ret
mov
adcl
sti
imul
mov
and
aad
jb
pop
add
mov
xchg
adc
fadds
xchg
fwait
push
inc
xchg
add
popa
push
add
test
icebp
je
add
push
cmp
cmpsl
and
lea
pop
add
cmp
es
leave
push
jmp
pop
imul
clc
xchg
stc
fisubrl
push
ja
int3
out
add
jmp
mov
subl
pop
sbb
adc
out
mov
int3
mov
dec
pop
cwtl
clc
jge
test
xchg
ds
xor
pop
mov
push
mov
dec
out
ret
jne
rorl
xchg
aaa
leave
mov
lcall
ds
sbb
sbb
mov
add
fwait
test
enter
jbe
ret
sub
xor
mov
lcall
mov
loopne
ficompl
or
test
push
dec
push
pop
push
imul
mov
aam
rol
loop
aad
xor
cli
mov
inc
in
fdiv
into
dec
pop
xchg
push
cmpsb
cmp
jb
movsl
cwtl
je
jno
adc
lret
inc
je
inc
mulb
push
fidivl
test
repnz
movsb
and
lret
or
jmp
rol
xor
mov
xor
into
cwtl
clc
in
pop
jo
inc
pop
pop
fcmovnbe
orb
fwait
push
test
fsubs
jo
xchg
jno
sub
jbe
repz
jns
cltd
lret
ss
inc
mov
cmp
leavew
incl
sti
push
ret
xchg
sub
insb
mov
fildl
pop
lock
mov
in
pop
lods
lahf
leave
jns
adc
mov
mov
imul
mov
loop
and
cmpsl
push
mov
ja
xor
pop
popf
ficoml
adc
push
roll
idivl
jbe
push
dec
ret
pop
mov
data16
cmp
inc
fisubl
pop
insl
iret
or
push
int3
mov
mov
enter
pop
and
mov
mov
bnd
mov
repnz
data16
jns
lcall
lea
adc
imul
mov
jle
add
fistl
das
shl
mov
repnz
stc
cli
sti
dec
xchg
iret
icebp
add
sub
mov
cltd
inc
outsb
aaa
and
mov
mov
int3
xorb
cwtl
mov
pop
lea
dec
add
test
jno
cs
in
or
es
in
pop
adc
or
outsl
mov
mov
push
es
testb
cmpsb
dec
cmp
fisubl
jge
cs
xchg
js
add
cmpsl
mov
int3
add
adc
cli
bnd
xchg
ret
cmp
lods
sub
shlb
lock
push
int
test
mov
xchg
mov
cmp
leave
pop
icebp
pop
testl
shl
inc
sub
push
rclb
scas
pop
imul
jae
scas
into
dec
push
jmp
and
int
andl
mov
adc
fdivrs
xor
pop
dec
jg
mov
mov
negb
lods
pushf
aaa
push
into
sti
jb
xchg
not
xchg
sbbb
ja
xor
stos
xor
int3
and
out
iret
adc
dec
out
sahf
sub
mov
cmpsb
in
fs
ret
pop
pop
jmp
add
push
push
inc
jp
shr
leave
jbe
js
push
push
movsl
push
int
mov
push
xchg
add
popf
jecxz
or
mov
rcll
xchg
mov
lods
lret
test
outsb
leave
dec
sub
add
add
mov
push
stos
imul
js
jp
mov
cmpsl
sub
push
insl
lret
sub
in
cmp
fisttpll
leave
or
inc
fistpl
fcompl
inc
mov
fldl
jbe
ja
sbb
push
int3
data16
pop
es
dec
ss
imul
inc
je
ljmp
sbb
lds
add
aaa
cltd
cmpb
in
gs
iret
xor
stos
lds
xor
jo
inc
insb
inc
mov
cltd
ss
repz
pop
xor
es
int
nop
xchg
xchg
or
repnz
pop
aad
sbb
pop
jne
push
test
je
sbb
mov
popa
mov
pop
ffreep
or
xor
xlat
icebp
loopne
jo
mov
popl
inc
fsts
cltd
mov
lods
sub
test
inc
sbb
cmp
das
stos
jae
sti
stc
jb
pop
gs
loopne
add
cltd
inc
lahf
std
xor
add
int
orb
test
mov
xchg
ds
arpl
int
cmp
cmp
in
pop
and
jmp
push
out
cmpsl
push
mull
into
aas
inc
repnz
in
or
sahf
inc
jp
pop
sahf
test
inc
shlb
in
fdivs
test
xor
mov
and
into
xchg
mov
lods
jmp
cmc
push
or
call
mov
and
dec
sti
fcmovu
addr16
fildll
subb
jmp
iret
notl
testl
sbb
mov
push
leave
shll
leave
stos
xor
mov
xor
imul
pop
mov
jbe
insb
ja
add
shlb
mov
testl
add
fucomp
ret
pop
dec
xor
out
aas
cmp
mov
mov
sub
lds
lcall
push
xor
xchg
lret
mov
mov
out
inc
pop
fstps
xor
movsl
lahf
add
out
inc
push
push
mov
mov
push
sbbb
test
mov
jge
loopne
xchg
inc
sub
out
shll
xchg
into
icebp
repz
sbb
in
sbb
add
xorb
jecxz
rcrb
int3
xchg
push
mov
lock
sub
fildl
push
jge
cmp
adc
jg
mov
mov
sbb
daa
inc
jne
inc
fsubrl
inc
jb
ja
int
ficoml
in
iret
sti
shl
adc
shr
rcl
push
out
sbb
fisubrl
sub
pop
fstpt
int
ss
out
out
push
data16
or
loope
pop
insb
in
xchg
sahf
jb
in
and
repnz
jmp
pop
cltd
adc
xor
popf
sub
xchg
cwtl
fdivl
test
mov
testb
aad
pop
div
or
xlat
lret
or
into
or
jle
loope
lods
scas
cltd
popa
mov
push
testb
test
nop
and
pop
cmpsb
mov
or
xlat
lret
inc
sti
adc
cltd
pusha
fnsetpm(287
aaa
sub
fildll
repnz
dec
cltd
or
fisubrl
mull
adc
cwtl
je
nop
inc
fwait
in
add
idivl
lahf
call
sarb
in
pop
iret
pop
xchg
push
vpsubsw
icebp
push
xor
pop
nop
dec
pop
sbb
stos
out
mov
xchg
shlb
mov
or
aad
pop
repz
dec
ljmp
aad
jo
jb
stc
addr16
repnz
cmp
loope
lahf
dec
lcall
jp
out
jmp
push
test
test
xor
into
inc
int
stc
inc
dec
inc
sti
fcoml
xchg
repnz
xor
icebp
jp
dec
xchg
hlt
xchg
out
fcomps
mov
mov
lock
jmp
shlb
mov
or
loopne
out
repz
dec
xchg
jb
sbb
mov
inc
jle
sub
clc
popf
jmp
out
adc
insb
std
je
push
push
in
xor
inc
push
sti
lods
xchg
outsl
push
lahf
mov
mov
rorl
mov
add
insl
imul
into
and
iret
adc
mov
stos
addl
imul
xchg
inc
push
data16
jbe
daa
mov
cmp
rolb
test
lcall
push
or
mov
ror
cmp
sub
push
es
daa
sbb
cmp
repz
repnz
out
push
nop
mov
fisttps
rcpps
dec
repz
rol
adc
pop
xchg
ss
loop
rclb
pop
jno
add
xlat
fsincos
pop
pop
loop
inc
cmc
push
inc
enter
dec
test
repnz
leave
adc
xchg
iret
cwtl
sbb
cmc
js
repnz
inc
inc
sbb
mov
jb
js
dec
jns
xchg
test
loope
in
jge
lock
inc
xchg
push
mov
sbb
pop
outsb
jg
test
test
inc
or
xchg
cmc
stc
les
cmp
icebp
nop
stc
repnz
in
fcomps
pop
mov
fistps
std
loop
dec
int
push
jp
jp
inc
dec
fists
nop
shll
std
cld
sbb
repz
mov
cmpsl
and
jne
jno
lret
pop
fs
fldl
mov
mov
inc
cwtl
lret
ja
or
loopne
ja
mov
mov
fnstcw
jg
adc
fwait
jb
xchg
mov
sti
pop
fldcw
jge
jg
fst
rcll
mov
xchg
sti
pop
lcall
jle
es
out
jb
fists
pusha
xchg
cmp
adc
shlb
cltd
fsts
mov
sbb
dec
push
jns
mov
shlb
push
jbe
push
mov
sub
fistl
mov
aam
int
mov
xchg
xchg
jl
loop
xor
jnp
gs
pop
add
and
inc
fdivs
inc
sub
fbstp
stos
or
fwait
pop
xor
cmpsl
daa
into
pop
sbb
scas
pop
imul
and
and
mov
hlt
sbb
adc
add
repnz
aad
dec
cmpl
roll
subb
cmp
push
push
rcll
xlat
loopne
sarb
rolb
daa
cmp
fdivrs
and
push
inc
xchg
xchg
and
sahf
pop
pop
out
leave
xchg
cli
cltd
pusha
out
es
sbb
in
add
push
dec
sbb
ljmp
test
dec
test
mov
fstl
mov
mov
jne
sub
mov
es
not
imul
lcall
pop
leave
in
sub
mov
sbb
sub
loope
leave
and
cltd
fnstcw
int
in
inc
mov
mov
fnsave
add
lahf
inc
mov
daa
add
dec
out
and
mov
mov
lahf
push
lea
cmpsl
aaa
int
in
ret
das
xlat
in
pop
aas
pop
mov
add
movsl
scas
mov
or
mov
enter
movsb
xchg
popf
dec
je
lret
xchg
sub
sti
adc
lcall
jmp
sahf
jbe
mov
inc
fwait
lret
sbb
popa
out
lret
popa
fstpl
xor
xchg
rep
xor
and
xchg
inc
fldenv
sub
fcmovnbe
dec
and
repz
aas
push
out
fldt
dec
mov
insl
push
xlat
dec
mov
shll
xchg
les
mov
jno
jle
shll
mov
repz
sbb
stos
loopne
dec
sbb
pop
je
movsb
push
into
ds
outsb
cmpsl
je
sbb
xchg
popf
jnp
jno
inc
fs
lds
mov
decb
lods
insb
aas
gs
jbe
jl
outsb
stc
rcl
jo
push
pop
mov
loop
ret
iret
jbe,pt
push
dec
dec
in
push
xchg
flds
dec
sbb
push
aam
in
fld
or
mov
jp
leave
push
and
shll
xchg
test
mov
jge
ss
rorb
xorb
cmpsl
add
mov
push
adc
mov
out
pop
push
sbb
cmpsl
ljmp
ret
in
mov
testb
test
ror
xchg
push
cmc
fidivrl
mov
rcl
scas
dec
mov
mov
dec
inc
adc
inc
cmpsl
push
leave
sub
cmp
sbbl
mov
mov
push
xchg
aas
mov
xchg
jp
es
repnz
xchg
push
fistl
dec
fcoml
fcomp
push
pop
or
fsts
push
inc
das
jmp
cmpsl
lods
pop
mov
sbb
xchg
movsb
shll
stos
clc
xor
fst
push
test
sbb
push
in
add
mov
push
xor
ret
mov
sub
cmpsb
jb
ret
add
daa
std
inc
mov
push
into
or
xchg
jbe
add
int
out
sub
cmpsl
sbb
lea
pop
jnp
arpl
int3
mov
push
and
cltd
out
or
push
mov
push
push
push
and
leave
mov
lods
push
pop
or
movl
push
iret
repnz
mov
mov
sbb
not
xchg
fwait
cmpsb
jg
es
pop
inc
push
pop
addl
adc
scas
das
ficompl
cmp
popf
add
inc
in
ja
jno
roll
xor
imul
shrb
test
repnz
xlat
call
cmp
fbld
loope
fcmovnb
xlat
xchg
push
xor
inc
xor
xchg
ss
xchg
in
test
pusha
jbe
or
nop
mov
add
mov
xor
sub
xlat
jl
mov
xchg
bound
push
fsubrl
and
loope
icebp
dec
dec
imul
xor
mov
scas
jnp
pop
push
or
sbb
sti
lcall
xlat
pop
mov
push
push
mov
push
lret
inc
das
dec
mov
testl
xchg
inc
mov
pop
test
cmpsl
fadd
and
pushf
mov
icebp
clc
mov
icebp
lret
add
scas
sub
loopne
xchg
sub
fstpt
ret
popl
in
pop
lret
adc
fwait
mov
fsubs
fdivr
jae
and
or
lret
out
addr16
inc
push
inc
ficoml
repnz
imul
xor
outsl
lret
fucomi
inc
sbb
ret
mov
mov
movsl
cmpsl
pop
shrb
cld
dec
test
mov
jle
pusha
iret
lds
mov
cmc
dec
xor
mov
mov
repnz
mov
jmp
mov
jno
ds
mov
adcl
mov
mov
or
shrb
stos
inc
jp
fstpl
adc
push
sbb
cld
stc
mov
ja
push
cld
xor
lds
xchg
push
sub
shr
sti
mov
add
cmp
inc
clc
or
rcr
add
jle
jmp
mov
jo
sub
rol
popa
jnp
sbb
lret
clc
mov
insl
mov
sbb
jno
sbb
and
xchg
add
js
pop
lods
ret
pop
idiv
or
ja
enter
addb
mov
xor
inc
outsl
xor
std
pop
mov
js
dec
int
mov
jmp
arpl
shl
clc
fucomi
adc
iret
mov
mov
jnp
int
adc
pop
sub
inc
dec
xchg
stc
jl
scas
pushf
inc
insb
add
lods
mov
fldt
and
pop
call
test
lods
lds
xchg
lds
jnp
or
xchg
jmp
rorl
xor
add
sbb
les
inc
js
push
xor
loop
push
outsb
dec
adc
in
pop
push
and
stos
mov
movb
fwait
or
int
in
jno
out
popf
jecxz,pn
dec
push
leave
cmc
pop
inc
fsubr
shrb
xchg
push
daa
fucomi
jo
insl
les
and
cli
aam
lret
call
sub
into
sbb
scas
ljmp
xlat
in
mov
push
mov
sbb
cmp
inc
mov
popa
jnp
pop
inc
push
mov
frstor
sub
cmp
icebp
xchg
je
fildl
or
ds
popf
jnp
cli
jnp
xor
ljmp
int
and
sub
jmp
mov
pop
mov
stos
jecxz
scas
sbb
dec
aad
fisubrl
insb
ds
xchg
test
scas
shrb
call
push
notl
dec
fwait
movsl
jle
xor
in
mov
push
dec
adc
addr16
xchg
repz
pop
xchg
icebp
jb
jb
pop
inc
ret
jge
xor
inc
fsts
rol
pop
jnp
ret
mov
outsb
iret
push
clc
bnd
sub
xor
mov
fcomp
jp
testl
loopne
xor
push
pop
and
imul
inc
inc
lcall
mov
lds
popf
lock
into
leave
insl
addr16
dec
fstps
pusha
mov
xlat
cmpsl
icebp
sbb
mov
test
and
push
cmp
push
ret
dec
inc
in
aam
sbb
push
popa
jbe
aam
sbb
pop
xchg
outsl
cmc
dec
ret
out
icebp
lods
ret
in
jnp
jbe
mov
add
xlat
jl
ficompl
adc
cmc
jns
mov
scas
mov
add
inc
mov
sbb
or
in
ffree
pop
sbb
pop
mov
pop
daa
xor
push
test
push
int
xchg
pop
andl
sbb
inc
repnz
fimull
add
repnz
aam
loope
es
jl
lret
sub
lret
jne
call
jg
mov
test
or
push
jns
add
clc
mov
imul
mov
mov
jmp
fcmovne
inc
or
dec
inc
aas
xchg
ja
in
mov
cmp
pop
pusha
sbb
lahf
pop
jb
icebp
divl
push
scas
adc
push
or
fldl
in
adc
pop
sub
sub
push
shlb
mov
fcoms
flds
lcall
mov
pusha
scas
fimull
jmp
cltd
stc
inc
in
mov
icebp
ret
cmp
pop
push
lahf
rclb
movsb
repnz
cmc
mov
mov
inc
mov
sti
jns
sbb
dec
cmp
sbb
scas
xchg
inc
jmp
cmpsl
or
dec
scas
adc
mov
cmc
sti
jmp
dec
mov
hlt
movsl
cmc
je
outsl
mov
mov
ja
inc
fwait
out
cld
movsb
push
pop
adc
or
test
mov
inc
xchg
jo
vxorps
or
cmpsb
ret
pop
stos
or
sub
xchg
inc
pop
scas
sbb
sbb
or
xchg
scas
ja
int
mov
lock
fsubrl
or
scas
mov
lods
decl
pop
jbe
pop
sub
lahf
jle
movzwl
cwtl
pop
cli
popf
repz
pop
stos
icebp
xchg
cli
jb
adc
xchg
xchg
pop
cmp
jnp
int3
or
pop
lret
push
rcll
loope
fs
lds
mov
mov
mov
cmp
mov
leave
in
repnz
mov
imul
inc
cltd
mov
add
jo
cs
in
jae
mov
push
xchg
js
cwtl
push
push
aad
push
adc
mov
iret
jnp
into
xor
jbe
mov
orl
mov
jecxz
insl
out
xchg
mov
and
je
lods
xchg
and
roll
shlb
inc
mov
decb
inc
or
push
cmc
iret
movsl
pop
outsl
fisttps
movsb
inc
inc
sub
fdivp
pop
insb
push
mov
mov
xchg
inc
push
mov
xorb
inc
fadds
rcl
fisttpll
in
adc
hlt
xchg
jnp
mov
pop
mov
clc
add
xchg
pop
shll
dec
adcl
or
jbe
out
sbb
cld
jl
scas
divb
mov
leave
int
pushl
push
ja
sub
pop
pop
pushf
ret
mov
mov
or
fstpt
mov
inc
mov
add
adc
fisttps
push
jno
adcb
adc
add
pop
jo
and
and
pop
push
pop
pop
test
ljmp
arpl
cmp
inc
pop
lea
inc
xor
pop
ret
stc
iret
aas
cld
fdivrs
cmpsl
xor
cmpsl
pop
inc
pop
std
xchg
lock
jb
add
aam
imul
je
add
xchg
inc
and
mov
lmsw
je
in
mov
adc
mov
mov
fildll
mov
mov
sbbb
add
dec
push
loop
push
sbb
cmpsb
or
movsl
and
or
and
icebp
push
fcomi
cmp
xor
inc
pop
lods
mov
dec
sub
inc
test
ss
push
iret
fsubs
hlt
sbb
cmc
ret
rcrl
mov
in
push
inc
push
add
inc
mov
dec
mull
mov
cvtdq2ps
xlat
shlb
xor
fistl
sti
or
sub
loopne
leave
mov
ffreep
xchg
incb
out
pop
inc
push
cmc
test
test
or
mov
jmp
xchg
jo
cld
and
inc
jnp
cmc
sbb
mov
adcb
jnp
inc
in
fstl
stos
repz
and
xlat
push
fistpll
fldenv
or
pop
push
pop
push
sub
mov
mov
iret
stos
cwtl
pop
adc
mov
ficoml
xchg
mov
mov
addr16
movl
inc
outsl
xor
jg
arpl
stos
lock
fmull
imul
mov
adc
push
out
cmpsl
and
pushf
cli
lods
leave
xchg
icebp
loop
cld
fcomps
sub
movsb
xor
add
sbb
xchg
mov
fcmove
pushf
icebp
mov
rorb
clc
mov
jp
sbb
inc
fstp
out
mov
xlat
sbb
adc
mov
dec
flds
add
ficoms
test
faddl
inc
arpl
shrb
add
out
inc
or
mov
ret
mov
push
jg
jl
push
mov
shrb
int
cmp
lret
movsl
out
cmc
fisttpl
stc
testb
push
inc
push
push
add
xlat
mov
sti
mov
stc
pop
pop
sub
pop
scas
sti
bndstx
xchg
aad
or
inc
dec
lret
adc
and
imul
ret
push
push
cmpsb
or
adc
repnz
ljmp
scas
xchg
sub
xchg
push
clc
jb
xchg
push
or
mov
xor
fwait
fwait
orb
inc
pop
movsb
mov
pop
scas
fbstp
push
pop
iret
push
je
xchg
jmp
sbb
push
adc
inc
jmp
scas
insl
pushf
inc
loopne
push
inc
rcrb
xchg
inc
fsubr
xchg
jp
xlat
push
sub
pushf
shlb
inc
daa
sbbb
cmp
xor
add
int
adc
fnstenv
pop
clc
and
data16
pop
fisubl
xchg
cmp
or
mov
and
hlt
dec
add
mull
push
add
fsts
iret
mov
push
daa
in
cmp
pop
mov
stc
sbb
cmpl
xchg
rcrb
cmpsl
lret
cmp
cmpb
jle
sti
fstpt
inc
mov
mov
xchg
mov
mov
dec
int3
xlat
ret
push
pop
inc
jmp
mov
xlat
sbb
fisubrl
adc
xchg
dec
fmulp
sbb
mov
sahf
inc
xor
aaa
js
ret
fcoms
in
sarl
pop
mov
cmp
ret
add
xchg
and
mov
sbb
push
pop
jns
or
jne
jbe
xchg
xor
in
notl
mov
cmp
or
mov
xchg
mov
movsl
ret
add
fnsave
shll
lret
repnz
ret
icebp
inc
pop
icebp
mov
adc
out
jg
or
jg
in
fsubrs
lock
mov
call
repz
repnz
xchg
xor
mov
pop
fcmovnbe
push
test
rcl
ficompl
mov
leave
cmp
mov
lods
push
adc
mov
scas
rcr
jbe
roll
scas
jg
inc
sbb
lods
ficompl
dec
pop
roll
pop
mov
lds
lret
iret
test
mov
sub
mov
xlat
and
xor
mov
mov
ljmp
loop
js
decb
xchg
or
mov
dec
sub
scas
mulb
adc
test
test
lret
xlat
xor
call
jle
pop
enter
adc
into
std
cmp
push
gs
pop
ret
clc
jbe
lret
fimull
or
jge
outsl
xchg
mull
and
inc
ret
xchg
mov
out
mov
loopne
inc
push
jge
ss
jmp
push
enter
push
pushf
mov
push
mov
jge
insl
fnstenv
push
mov
sub
mov
push
xchg
jmp
cmpsl
and
adc
das
jae
mov
loop
test
adc
ret
hlt
mov
scas
jcxz
push
xchg
test
lods
lds
add
pop
mov
movsb
out
loopne
mov
sbb
cmpsb
adc
adc
icebp
movsl
ret
jmp
outsb
mov
in
push
jp
mov
inc
shll
dec
aaa
fadd
mov
jno
sub
addr16
fstpl
cmp
xchg
xor
push
pop
repnz
shll
mov
scas
pop
fstpt
pop
mov
andps
push
bound
das
mov
imul
aad
adc
mov
cmp
gs
sbb
mov
push
mov
pop
in
fbstp
xchg
fcmovnb
stos
mov
ficomps
movsb
inc
cltd
leave
mov
enter
xlat
jns
lcall
testl
call
ja
cltd
lret
repz
aam
negb
ficoms
sub
inc
pop
into
ficoms
xchg
push
cmpl
dec
movsl
iret
test
lea
aad
cmpsl
cmpsl
fdivs
xchg
fwait
loope
jp
rcll
jecxz
ficoml
je
enter
mov
pop
inc
and
sahf
sub
jecxz
lahf
mov
xlat
mov
inc
mov
movsl
dec
out
movsb
leave
jo
fldt
push
das
repz
mull
xlat
xor
inc
xchg
push
or
jmp
scas
sbb
mov
push
stos
stos
sbb
add
adc
fwait
jno
add
ljmp
icebp
shll
mov
mov
leave
loop
inc
imul
repnz
in
push
cmp
jae
fcmovne
dec
icebp
inc
fdiv
jno
inc
cmp
or
xchg
lods
insl
add
push
jnp
test
mov
loop
adc
inc
fimull
rorb
addr16
enter
dec
pop
adc
aad
sti
out
push
or
mov
adc
add
fidivl
pop
adc
mov
mov
popf
mov
jo
jno
inc
push
inc
mov
aam
stos
dec
adc
into
mov
xlat
push
imul
push
lahf
cmpsl
or
jg
repnz
aad
lods
pushf
popf
es
aas
mov
sbb
push
fdivs
lods
lahf
test
repz
xchg
ljmp
popa
ss
pop
push
insb
dec
xchg
fstpl
fwait
pop
adc
pop
cmp
push
das
mov
cmpsl
fildl
mov
je
fidivs
push
xlat
test
orl
les
notb
jb
movb
fnstenv
test
test
and
inc
push
roll
cmc
mov
add
movsl
ja
cwtl
mov
stos
imul
xchg
xor
dec
pop
cmp
int
outsl
cmp
inc
cmp
pop
pop
mov
add
xor
dec
lcall
jb
push
pop
cmp
rolb
popa
repnz
adc
and
xchg
in
jno
rcll
lret
push
inc
lods
xchg
inc
sbb
cli
or
lods
je
js
pop
ljmp
sbb
lret
cli
stc
dec
fwait
mov
inc
cmp
inc
mov
pop
cmpsl
jge
sub
mov
push
into
fnstenv
or
loope
mov
jnp
and
fcoms
dec
mov
loop
cs
lea
add
stc
mov
mov
out
stc
inc
xchg
popf
scas
arpl
pop
inc
and
xchg
dec
inc
or
pusha
add
leave
add
mov
xchg
js
ret
cmc
mov
add
pop
rclb
insb
mov
test
mov
jne
push
mov
stos
mov
jp
int
mov
imul
scas
ficompl
jo
adc
push
inc
dec
push
mov
loope
dec
mov
mov
ja
add
push
dec
mov
sbb
cld
pusha
inc
inc
mov
mov
mov
inc
subb
fsts
xchg
inc
adc
in
lret
cli
pop
stc
mov
jne
mov
mov
pop
je
mov
pop
ret
aam
xlat
in
decb
add
add
mov
push
imul
dec
fldt
es
jge
jmp
jmp
hlt
insl
repnz
and
bound
xchg
push
insl
pop
shlb
ljmp
add
inc
jmp
imul
mov
mov
hlt
negl
sub
inc
pop
out
sbb
jns
mov
mov
xor
push
daa
pop
push
cmpsl
inc
out
pusha
ret
xchg
pop
fwait
aam
aaa
cmpb
push
jb
jbe
leave
add
das
rcr
dec
inc
and
jbe
leave
insl
aam
and
mov
out
push
push
jae
lods
rcl
hlt
lds
mov
sub
fcomi
out
ret
das
add
cs
in
negl
test
pop
jno
aad
add
negb
inc
fidivl
mov
lods
and
xchg
addb
enter
jno
das
xor
cmpsb
pop
es
iret
inc
in
mov
shlb
jl
mov
cmpsl
dec
lret
pop
dec
add
jo
mov
test
xor
push
sub
jmp
xorb
notb
fcoms
cmpsl
lds
scas
andl
fidivrs
jnp
xchg
cld
lcall
imul
mov
and
repz
dec
pushf
mov
sti
out
data16
add
outsl
xchg
jo
outsl
sub
push
sub
test
jp
inc
clc
cmp
sahf
xchg
lahf
mov
sahf
push
in
inc
jl
fbld
rorl
sti
leave
rorl
mov
js
xchg
add
mov
sub
loope
test
aad
repnz
ljmp
push
sub
push
lods
ret
cmp
xlat
inc
stos
or
sbb
mov
add
fistpl
add
aad
sti
xchg
sbb
jnp
pop
lods
cmp
cmp
leave
mov
xchg
xchg
and
adcb
loop
cmpb
dec
and
xchg
mov
aas
rol
lret
pop
shll
fldenv
test
mov
adc
mov
inc
inc
stos
das
inc
imul
aam
adcl
orl
mov
nop
jnp
rcr
xchg
pop
push
cmp
xchg
mov
sti
repnz
jo
daa
push
add
bound
mov
shrb
js
and
int3
inc
inc
sub
movb
inc
xchg
xor
aaa
jae
add
in
mov
fs
adc
leave
es
scas
pop
fldt
outsl
mov
imul
ja
insb
inc
icebp
fimull
mov
push
add
aam
out
icebp
inc
ret
fucomi
mov
cmpsb
cmc
fsts
adc
pop
lret
adc
mov
jne
xchg
leave
cmpsb
sub
xlat
jp
xorl
jnp
push
inc
mov
fcmovb
jmp
mov
icebp
xor
jecxz
sbb
sub
repnz
fidivrl
cmp
lret
push
xchg
icebp
add
cwtl
clc
out
push
je
incb
test
cmp
jl
push
iret
loop
push
pop
ljmp
ficoms
mov
mov
xchg
push
sbb
mov
sub
push
push
or
ret
mov
or
mov
stc
mov
cmpsl
adc
sub
ret
sbb
rcrl
je
adc
jbe
and
shlb
repz
repz
mov
xchg
pop
and
rcrb
cmp
add
mov
ret
or
xchg
aad
mov
aad
bound
mov
push
icebp
dec
mov
imul
dec
stos
inc
jns
mov
test
fisubrs
jg
sbbl
int3
mov
add
cwtl
imul
or
pop
loopne
out
out
xchg
pop
test
dec
addr16
fnstsw
mov
pushf
idivb
out
lret
ljmp
lods
mov
cmp
test
mov
and
enter
ljmp
sbb
push
mov
rcrl
test
pmullw
lahf
repz
xchg
adc
sub
sarb
std
ficoms
sbb
popa
sbb
cmpsl
fstl
in
sub
jmp
mov
into
ret
lret
rorb
jp
cmp
and
jmp
ljmp
test
mov
sub
je
jle
ret
aaa
rcl
pop
icebp
ret
cmpsb
movl
sbbl
pop
inc
sub
aam
and
pop
jmp
aad
repz
dec
mov
jge
cld
mov
movsb
dec
out
push
test
fists
inc
inc
inc
insl
sbb
xchg
sarb
imul
ss
pushf
mov
mov
clc
call
andl
xor
inc
jo
pop
pop
es
shll
mov
jle
add
out
das
test
mov
pop
test
mov
out
sarb
mov
es
aad
fdivl
and
rcrl
sbb
or
int
imul
outsl
sub
jp
dec
pop
mov
inc
push
stos
jnp
out
adc
pushf
jge
subb
sbb
cmpl
sbb
push
popa
out
sub
ret
pop
lret
adc
ja
fldt
in
fs
xor
xor
es
nop
std
push
add
xchg
test
push
lret
sub
rcr
add
stos
fcmovbe
fimull
xchg
pop
adc
rolb
jecxz
xchg
imul
jecxz
cmpsl
cld
leave
test
sbb
pop
xchg
add
jns
xchg
cmpsl
mov
pop
sbb
fnsave
fimuls
scas
push
add
mov
lock
and
pop
es
shr
or
gs
mov
and
popa
ficomps
scas
xchg
mov
fsin
dec
pop
jnp
jle
pop
lods
xchg
sub
lods
icebp
fldl
and
mov
lods
out
cmp
rcrb
push
fs
mov
lahf
outsb
mov
cwtl
mov
dec
movsb
push
mov
xor
mov
lock
push
insb
xor
add
test
fisttpll
push
test
imul
xor
jns
push
jbe
lods
popa
jns
shrb
cwtl
sbb
sbb
jnp
jmp
cmpsl
std
shlb
movsl
xchg
stos
push
outsb
fidivrs
aam
fwait
sbbb
cmpsl
push
out
test
xchg
jl
lret
pop
xor
loope
and
inc
or
push
out
dec
xlat
jp
cmp
fst
nop
sub
test
jmp
push
in
outsb
lock
inc
jae
push
adc
shrl
xor
xchg
and
jp
mov
mov
inc
mov
ljmp
add
inc
adc
adcl
mov
cltd
jmp
or
imul
mov
inc
mov
xchg
cltd
sbb
jns
push
jle
shll
cmp
into
outsl
leave
pushl
rcll
add
es
inc
fcmovnu
test
imul
add
not
xchg
pushf
out
out
xor
pop
pop
aad
add
icebp
test
fnsave
repnz
fldt
and
jcxz
stos
push
movsl
xorl
popa
nop
jb
jle
cmc
lea
pop
in
jo
inc
push
sbb
mov
add
scas
sahf
icebp
fcmovu
daa
xchg
lds
sbb
inc
inc
mov
loop
daa
dec
fucom
inc
pusha
int3
push
gs
jle
popa
jp
dec
daa
clc
dec
push
add
sub
test
test
and
jl
int
jmp
pop
xlat
into
popf
lret
push
mov
jg
fdivrl
sbb
push
mulb
testb
movsl
insb
pop
mov
and
mov
cmp
faddl
mov
mov
inc
sarb
and
and
lods
fcmovb
ret
fsubrs
popf
fucomip
sbb
jae
xor
scas
mov
outsb
ja
xor
sbb
cmpsl
pop
add
add
lea
and
xor
cmpsl
fstpt
scas
shr
fsubrs
aaa
call
sarl
es
pop
jl
popl
add
das
inc
cmp
mov
push
cltd
xorb
push
negb
xchg
xchg
jmp
test
cmp
repnz
adc
jmp
and
fcomp
xchg
cmpsl
add
ss
inc
inc
mov
push
ret
inc
adcl
lcall
mov
in
xchg
rcrb
xlat
lret
jmp
sub
test
xlat
fnstenv
mov
popl
and
psadbw
test
pushf
push
mov
xchg
fmul
ret
in
or
xor
xchg
stos
dec
jmp
idivl
mov
add
pop
test
cmc
rcr
cmpsl
mov
movsb
lods
mov
pop
imul
test
aad
icebp
fldlg2
adc
fwait
xchg
repnz
mov
sbb
test
idiv
idiv
mov
sub
ror
or
rcl
xor
fbld
add
icebp
fildll
and
cmpsl
xchg
leave
repz
fstl
mov
inc
cmpsw
das
cmp
xchg
adc
add
out
mov
jl
adc
inc
lods
xchg
sahf
int3
pop
pusha
notl
add
sbb
sti
imul
outsb
rcll
push
insb
mov
cmpsb
cwtl
je
or
adc
leave
les
out
and
inc
fstpl
into
fcmovnbe
jmp
vrsqrt14pd
and
fwait
xchg
imulb
aaa
sub
loop
xchg
fnsave
fwait
push
push
lea
sbb
or
add
test
pop
pop
xchg
and
xchg
or
push
inc
idivl
adc
push
subl
pop
adcl
adc
insl
sub
dec
dec
outsb
fists
lret
push
sub
xor
xchg
mov
cs
xchg
mov
popa
fnstenv
bound
pop
jg
inc
imul
inc
es
addl
jb
loopne
xchg
mov
pop
jo
adc
lcall
mov
inc
sub
andb
lods
cmp
dec
es
idivb
mov
fldcw
add
jne
xlat
js
imul
mov
mov
pop
adc
sbb
mov
push
xchg
test
lods
and
icebp
xchg
out
push
stc
or
cmp
push
sbb
add
push
and
out
cmpsl
or
mov
pop
pop
xlat
pop
pop
pop
adc
mov
xchg
or
shlb
mov
push
stc
inc
outsb
aad
adc
adc
inc
scas
fucomi
sti
pop
inc
push
mov
fcmovne
jae
dec
jmp
lret
pop
dec
add
sbb
outsb
push
insl
aas
fcmovnbe
adc
fdivs
dec
inc
jae
fdivp
andb
dec
mov
sub
sub
push
adc
jge
dec
cwtl
repnz
movsb
pop
pop
push
inc
iret
fisttpl
xchg
addb
outsb
pop
sub
out
mov
xchg
outsb
shll
add
es
test
jnp
xor
xchg
dec
add
or
scas
neg
push
dec
outsb
mov
into
into
rcrb
fstl
jnp
mov
push
sahf
pop
inc
jb
aas
xchg
add
inc
jg
and
mov
rclb
sbb
cltd
insl
inc
push
sub
repz
xchg
repz
stos
lods
pop
lds
lock
dec
sbb
cltd
inc
sbb
dec
mov
out
mov
je
lods
pop
adc
inc
sti
cmp
cltd
adc
icebp
ret
sbb
shl
cld
push
imul
xlat
sub
sub
out
fsts
cmp
popf
sti
shlb
outsl
out
mov
testl
or
sbbl
inc
adc
dec
lods
pop
push
iret
rep
sub
mov
std
push
xlat
push
push
xacquire
sti
mov
dec
cmp
in
shrb
jl
das
adcl
cmc
or
sbb
bound
mov
xchg
mov
mov
scas
mov
rcll
nop
and
push
repz
pop
fnstenv
rcl
pop
lds
xchg
cmp
outsb
xchg
hlt
jmp
inc
stos
ja
sbb
xor
fistl
aas
in
aad
das
je
dec
sub
inc
xor
inc
xor
xor
sbb
xchg
mov
mov
inc
es
pop
aaa
fbld
inc
fs
jnp
mov
dec
mov
ficompl
fadd
and
pop
mov
fs
addr16
xor
dec
pop
ror
ror
xchg
mov
xchg
aam
repz
aas
out
aas
mov
iret
or
cltd
mov
cmp
rcr
lea
add
mov
aad
mov
std
fstpl
lock
cmp
add
lds
int3
cs
lods
mov
shl
shll
cmp
push
cmp
and
int3
lds
sti
mov
mov
mov
sbb
inc
jbe
lds
xchg
mov
lahf
jge,pn
and
cli
mov
adc
es
daa
out
cs
sub
pop
in
mov
frstor
ret
xchg
je
ja
xor
xlat
imul
cmp
cs
jmp
pop
loopne
movb
jge
aas
sbb
fcomip
lret
jnp
ror
jge
fbstp
lret
push
inc
sti
dec
adc
cwtl
xchg
lahf
xor
enter
leave
jae
pop
adc
sbb
cmpsl
fidivrl
fsubrs
cmp
testb
fcmovb
ja
mov
stc
adc
sbb
xlat
scas
mov
sbb
popf
sti
jne
repnz
pop
iret
push
xlat
dec
mov
cwtl
sbb
mov
js
fnstcw
hlt
cwtl
scas
sub
repnz
pop
dec
sbb
fisttpl
cli
rorl
inc
push
and
jo
rcll
into
in
sub
add
add
repnz
negl
imul
lock
scas
into
mov
sub
inc
mov
dec
xor
xor
je
orb
cmp
add
cmp
rcrb
addr16
aad
jecxz
loop
lcall
xor
filds
lea
rcll
push
adc
xchg
sbb
xchg
xchg
dec
stos
sub
xor
push
inc
mov
out
mov
imul
jb
imul
jmp
pop
push
sub
sbb
lret
lahf
push
inc
jb
mov
xor
and
push
sti
iret
cmpsl
aad
les
xchg
pop
cld
sar
jo
stos
dec
into
sub
stos
das
sbb
mov
rcrl
ret
xchg
sub
dec
xlat
inc
jns
aad
mov
xor
leave
sub
aam
mov
mov
fists
dec
imul
mov
imul
mov
add
xchg
loope
cli
addb
shlb
sbb
cltd
in
lahf
fldl2t
hlt
inc
mov
adc
sbb
jmp
fcmovb
inc
push
xor
es
pop
dec
inc
xchg
es
push
test
cmp
mov
mov
or
xchg
js
addr16
mov
aad
pop
fwait
insb
andb
out
scas
nop
negl
movsl
inc
stos
aad
cmpsl
xchg
mov
push
push
fldt
mov
cmpsl
mov
and
sahf
fwait
rcl
idivl
gs
pushf
icebp
fstpt
inc
xor
flds
adc
scas
cmp
fwait
sbb
sbb
xor
lods
dec
es
test
jge
ret
test
sbb
xchg
hlt
fbstp
pop
hlt
in
push
jns
not
and
mov
cmp
mov
mov
pop
fiadds
cld
aad
cs
push
cmp
jae
dec
in
les
int
jns
outsl
shl
mov
sub
shll
jbe
sub
inc
aad
stos
icebp
cmpsb
and
dec
aad
popf
cwtl
in
sub
aad
popf
or
out
aaa
pop
call
mov
adc
cwtl
popa
faddl
adc
sub
sbb
fwait
and
lret
jno
fiaddl
leave
aas
sar
cwtl
cld
lock
adc
cmpsl
adc
push
sbb
cli
mov
dec
je
mov
fwait
jb
cmc
jmp
int
fst
adc
jns
cltd
pop
popf
adc
mov
sub
mov
mov
mov
stos
movsl
xchg
add
iret
cmpsb
sub
psrld
hlt
aam
push
movsb
lods
call
into
add
sbb
xlat
stos
push
cltd
adc
std
or
bound
inc
test
mov
ret
mov
pushw
mov
inc
je
mov
repz
xchg
jmp
stos
jb
scas
or
ret
movl
inc
pop
mov
pop
mov
dec
inc
dec
push
popa
loop
les
into
arpl
stos
pop
sub
loop
mov
int
xchg
ljmp
mov
pop
push
lock
lods
imul
cltd
pop
jo
mov
sbb
push
sbb
rorb
scas
mov
inc
dec
repz
es
fidivrl
fsubrl
fadds
stc
dec
xchg
insl
mov
adc
cmpsl
sub
orl
mov
mov
dec
ret
repz
lods
pop
push
mov
repnz
cmc
ds
pop
inc
icebp
sbbl
mov
sar
inc
and
lcall
stos
push
dec
frstor
inc
push
xchg
rclb
push
xchg
xlat
push
jno
gs
imulb
xlat
cmpsb
inc
aad
push
lret
jecxz
ret
and
sbb
or
sar
jge
add
iret
push
sarl
xchg
repz
mov
aad
imul
lods
leave
xchg
push
dec
icebp
sub
es
push
jle
in
cmp
lret
aad
lret
cld
fstpl
pusha
adc
nop
aaa
lock
jae
cmp
push
in
or
mov
icebp
sub
jbe
sbb
dec
sti
mov
iret
ret
in
sbb
mov
xchg
push
adc
jno
mov
lcall
lret
xchg
dec
inc
mov
fwait
xchg
imul
adc
stos
ficoml
push
cs
jmp
cltd
xor
adc
test
outsb
inc
jg
js
es
scas
cmpsb
insb
cmp
pop
sarb
fnsave
pop
sub
push
add
nop
cli
clc
fmuls
call
or
cmp
enter
cmpb
pushf
xchg
or
mov
iret
pop
aad
adc
cltd
shll
mov
add
mov
pusha
rcr
lcall
inc
push
adc
mov
xchg
leave
dec
sbb
xchg
lret
jg
push
rcl
rcll
aam
aad
push
shlb
pusha
pop
push
push
inc
test
ret
fnop
aad
push
bound
add
xchg
push
cwtl
adc
fcmovb
shll
sbb
stos
pop
push
pop
addr16
push
inc
fidivl
je
xchg
rorb
xchg
ret
movsb
lods
rclb
mov
in
enter
popa
jl
daa
or
ja
dec
mov
notl
addr16
ret
sbb
push
xchg
daa
pop
xor
or
pop
pop
rcl
inc
xchg
fisttpl
je
outsb
jl
aam
pop
push
repnz
stos
cmp
sbb
bound
fiaddl
inc
jl
mov
dec
lock
mov
inc
lock
icebp
inc
in
es
aas
mov
or
inc
fistpl
enter
es
mov
lret
pop
cmp
push
in
movsb
lods
mov
inc
cmpl
mov
pop
add
jno
xchg
stos
mov
fdivr
mov
repz
pop
xchg
aam
call
cmp
mov
mov
je
movsb
mov
adc
inc
cmp
mov
je
cmp
pushf
mov
incb
push
dec
les
push
inc
mov
mov
xlat
or
lds
inc
mov
inc
xor
cmp
push
xchg
inc
mov
push
and
sti
stos
shlb
sarl
ss
testb
mov
addr16
jbe
in
lahf
in
and
mov
or
inc
push
subl
sub
mov
inc
aaa
xlat
xor
push
jmp
repnz
or
xor
dec
cltd
push
std
push
adc
cld
pop
xor
pop
fbld
fdivr
mov
adc
mov
and
pop
sub
push
sub
sarb
scas
ret
sub
ss
negl
mov
pop
jne
push
repnz
testl
mov
out
repnz
xchg
xor
xor
push
mov
out
loop
aaa
adc
ud0
aaa
lods
mov
jo
push
scas
shll
das
sbb
clc
ds
adc
rclb
imull
adc
push
clc
pop
cmpsl
inc
imul
mov
imul
test
lock
jb
aad
adc
sahf
sti
rclb
ds
xchg
pop
sub
push
imul
mov
sbb
lock
fldt
scas
add
dec
mov
in
icebp
push
imull
test
in
ficompl
sbb
pop
pop
cmp
xchg
push
or
inc
inc
xlat
jmp
cli
push
lcall
lret
lds
pop
sbb
lods
mov
sahf
inc
push
mov
inc
les
sbb
ret
pushf
xchg
add
push
push
fidivrs
xor
or
sbb
xchg
lret
mov
mov
push
dec
inc
mov
push
jle
lds
lock
inc
loopne
popf
mov
je
xorb
ret
mov
aad
mov
mov
and
je
xchg
repnz
andb
sbb
lock
push
cmpsl
scas
cmp
cld
test
xchg
std
cltd
mov
xor
jp
cmpsl
xchg
iret
rorb
pop
daa
add
clc
pop
repz
xchg
in
loop
mov
fdivl
lcall
adcl
nop
repnz
ja
lahf
ffree
nop
jo
mov
leave
jo
inc
js
sub
repnz
adc
xor
jb
jle
inc
sar
xor
sbb
and
sbb
xchg
jecxz
xchg
push
push
xchg
shll
xchg
andb
sub
pop
mov
push
fdivrl
mov
mov
xlat
push
cmp
pop
ficomps
pushf
sbb
fwait
sahf
xchg
icebp
rol
jl
sbb
mov
aad
adc
fdivl
mov
dec
jmp
cmp
out
aad
xchg
inc
mov
mov
jge
mov
adc
add
mov
sbb
adcb
push
inc
inc
icebp
lea
loope
gs
call
popa
int
xchg
push
adc
test
outsl
hlt
outsb
leave
cwtl
ret
bound
add
movsb
insl
in
sarl
lret
xchg
outsb
iret
aad
mov
daa
or
enter
sbb
xchg
add
push
rcrl
imul
adc
adc
xchg
fcmovnb
mov
es
xchg
lock
dec
rol
scas
hlt
mov
push
push
scas
jecxz
xlat
sub
pop
shlb
hlt
je
xchg
negl
pop
in
push
loopne
push
pop
in
popf
xchg
out
adc
adc
loopne
xor
xchg
dec
shll
imull
fimuls
rcll
add
and
mov
iret
stos
out
inc
push
aaa
lods
les
fistl
insl
outsl
add
pusha
add
mov
fildll
in
rorb
xor
push
fistps
adc
pop
xorb
lds
jge
hlt
add
inc
jbe
ficompl
xchg
jno
fwait
aam
pop
scas
cli
arpl
cmp
inc
cmp
hlt
loop
dec
dec
mov
rcll
fistpl
xlat
movsl
lahf
loope
pop
out
xchg
inc
jle
adc
sbb
jl
mov
mov
enter
mov
add
inc
jge
out
fstpl
sub
stc
iret
pop
xlat
icebp
add
popa
inc
int
lahf
xchg
dec
movl
repz
sub
mov
inc
push
xchg
leave
cmpsl
adcl
dec
mov
or
add
mov
shrb
cmp
xchg
aas
xchg
lock
adc
testl
jg
jae
xor
push
pop
fucomi
mov
out
leave
stos
push
cmp
iret
data16
sbb
out
lods
jecxz
or
andb
jmp
pop
paddusw
repnz
dec
cli
sahf
mov
lret
cmpsl
jno
sarb
addr16
repz
arpl
mov
pop
iret
and
adc
inc
xchg
pop
dec
jle
insl
and
dec
mov
xor
cmpsb
ss
pop
mov
sub
sub
xor
es
fcoml
sbb
mov
sahf
xor
sarl
mov
sbb
push
sub
lret
movsl
sbb
xor
rcr
mov
sub
mov
push
enter
mov
iret
xchg
adc
push
ds
xor
pop
in
fldl
loopne
fwait
sbb
mov
fldlg2
jno
dec
dec
pop
pop
test
cmp
fimull
inc
test
fsubs
test
pop
lahf
scas
iret
dec
fwait
pop
arpl
cmpsl
repz
test
add
pop
mov
jbe
cs
push
jmp
and
cmp
jge
hlt
outsb
insb
popa
jl
jmp
mov
sub
fistl
adcb
sbb
sbb
dec
push
cmpsb
popf
xchg
or
icebp
cltd
cmp
push
jmp
flds
fwait
push
lcall
addr16
jle
mov
xchg
xlat
cmpsb
mov
cmp
mov
cmp
cmc
sbb
and
sarl
dec
sbb
fcoms
out
enter
adc
test
lea
out
ja
sbb
mov
push
inc
add
popl
das
mov
cmp
je
iret
loopne
roll
lret
or
push
stc
jle
mov
push
dec
and
rorl
xchg
cwtl
sbb
sti
xlat
mov
addb
movsl
inc
cltd
icebp
jo
into
fiadds
test
sub
sti
movsb
sbb
mov
mov
sub
push
pop
xchg
or
adcb
in
mov
mov
cli
add
sbbb
cmp
lea
addl
clc
pop
out
dec
or
or
leave
cmpsb
pop
or
inc
sub
xor
push
dec
inc
dec
js
add
cmpsb
shlb
push
inc
fwait
jnp
rclb
jno
outsl
push
icebp
jp
or
cmpsl
es
and
xchg
js
adc
add
adc
inc
jns
or
cmc
sub
repnz
push
pop
sub
arpl
mov
out
push
leave
ljmp
fnstsw
jl
push
inc
push
dec
ja
xor
fldl
mov
xor
aam
hlt
and
pop
addr16
inc
adc
and
jnp
push
xlat
dec
imul
ljmp
shrb
repz
xchg
lahf
jae
xor
jae
subl
xor
fcmovnbe
xchg
xchg
push
iret
lcall
not
mov
xchg
pop
xchg
sub
sbb
jmp
xchg
pop
or
cmp
xor
inc
push
cltd
dec
xor
pop
lahf
rcll
mov
test
sub
mov
fistpll
adc
popa
aas
or
dec
add
cmp
sbb
cmpsl
loop
repnz
xchg
inc
xor
xchg
aad
test
add
fimuls
scas
add
gs
lahf
add
mul
pop
rol
mov
stos
mov
cmc
stos
mov
sub
sbb
mov
fmull
xor
push
lods
xlat
jp
mov
add
loop
cli
mov
push
jmp
mov
stos
imul
mov
rcll
adcl
rcl
shlb
dec
lock
fdivp
aam
fisubrl
xchg
xor
test
dec
nop
add
sub
bound
push
fs
mov
mov
es
xor
stos
jmp
fidivl
mov
xchg
lods
push
push
cld
xor
push
cmc
mov
sub
inc
mov
cmp
add
fsubr
test
cmc
in
andb
mov
stos
outsl
add
push
pop
imul
fcmovu
jp
mov
lods
shrb
jmp
icebp
mov
je
dec
push
jno
adc
inc
lods
rorl
push
cmpsb
outsb
test
shll
pop
repz
cmp
sbb
push
cmp
or
pop
test
or
loop
stos
cmp
sub
dec
pop
repz
and
jp
mov
filds
pop
into
mov
adc
inc
push
ja
aaa
bound
or
imul
fcmovu
scas
mov
jbe
mov
add
sub
roll
pop
xchg
outsb
xlat
push
xor
into
mov
dec
dec
repnz
test
ja
fists
pop
ret
cmc
and
loope
sbb
outsb
sbb
shl
xchg
mov
ret
adc
lods
dec
std
add
jmp
adc
add
pop
les
cmp
cmc
stos
mov
movsl
int
into
xorb
dec
sub
in
push
lods
sahf
jp
in
cmpsl
push
xchg
das
insb
mov
cmc
add
jbe
pop
std
add
gs
mov
cwtl
testb
cwtl
jmp
jl
aad
testb
xor
pusha
ja
push
and
icebp
cmp
xchg
lcall
mov
fucomip
sti
jnp
lods
add
sti
enter
lods
rorb
xchg
add
push
xchg
imul
xlat
das
cltd
nop
push
cmc
cmp
sti
pop
ret
xchg
fdivp
movsb
idiv
or
dec
sbb
adc
inc
repnz
loope
lcall
push
inc
add
into
scas
rorl
pop
js
testb
sbb
add
xchg
sbb
xchg
out
inc
std
ret
es
ret
lret
mov
out
int
aam
repz
dec
arpl
inc
cmpsl
add
jno
imul
sbb
jl
int
ud0
xchg
repz
lret
inc
int3
aam
loopne
iret
inc
nop
cld
push
push
adc
loope
and
dec
test
cmpsl
cli
into
push
sub
loop
or
insl
hlt
testl
icebp
xorl
idivb
mov
sub
aaa
shlb
shrb
inc
sub
and
push
mov
jl
dec
add
test
scas
pop
dec
mov
xchg
rclb
js
fbstp
jp
inc
lods
loope
stos
shrb
imul
inc
cmp
shl
mov
or
aam
shrl
repnz
out
outsl
push
aaa
xchg
pop
divl
repnz
xlat
push
xchg
out
pushf
stos
or
sbb
repnz
jmp
fstpt
or
adc
rcll
pop
lret
mov
cmp
icebp
mov
xchg
repz
xchg
fistpl
stos
cmpsl
jae
sbb
cmp
jge
dec
stos
jle
or
rclb
lcall
mov
push
push
xchg
test
ja
aam
jae
shr
dec
pop
fisttps
lret
sub
dec
inc
pop
pusha
test
sub
dec
mov
les
rolb
mov
jb
ljmp
lcall
or
lods
push
mov
push
repnz
rcll
sbb
inc
loope
movsb
mov
mov
out
icebp
xor
mov
stc
sub
jmp
cmpsl
or
push
mov
add
test
xchg
mov
xchg
xchg
outsb
repnz
imul
sbb
es
div
push
sbb
sti
lahf
jae
icebp
mov
mov
jl
mov
jmp
mov
movsb
ljmp
jle
testl
insb
mov
lret
cld
es
mov
out
jno
inc
ljmp
cli
mov
lock
mov
repnz
fisttpl
inc
pop
scas
xchg
movsb
lock
mov
mov
add
add
and
loope
jo
xor
and
inc
fmuls
sbb
mov
and
adcl
or
scas
insb
sbb
add
dec
aaa
insb
popf
pusha
inc
testl
mov
dec
movsb
adc
cmpsb
xor
test
mov
xor
mov
lret
movsl
pop
shll
pop
lods
mov
icebp
fcompl
out
xor
dec
push
fildl
mov
xor
cli
in
cs
testl
xchg
lret
mov
and
sahf
lods
cmp
sbb
or
scas
repnz
pop
pop
popa
mov
jecxz
xchg
jno
sbb
cwtl
jge
cmp
shrb
cld
push
andb
imul
in
xchg
rcr
imul
dec
movlhps
mov
sti
jmp
add
lahf
xchg
dec
imul
test
sub
fiadds
lods
fsubrl
lahf
or
mov
mov
rcr
or
das
lret
mov
call
add
fwait
in
fsts
cmpsl
repz
daa
jl
or
add
mov
cmp
pop
mov
pop
pop
scas
lret
jg
add
out
cmc
fsubrl
lret
lds
adc
inc
cli
shrl
roll
sub
sbb
subl
xchg
lods
js
mov
jnp
es
in
pop
add
jb
jge
mov
or
idivb
adcb
dec
jnp
inc
mov
dec
jae
jno
mov
or
fcmovbe
mull
mov
or
bound
scas
mov
stos
cmp
inc
cmpsl
push
mov
sti
js
cmpsl
pop
xor
sbb
sbb
sti
inc
push
xchg
push
iret
mov
cmp
inc
mov
mov
cmpsl
fnstenv
add
push
les
xor
enter
mov
sarl
push
and
mov
dec
int
lock
xchg
or
push
mov
mov
inc
test
mov
pop
xchg
push
xchg
mov
cmpsl
inc
adc
aam
leave
jbe
ficoms
mov
push
popa
sti
push
sbb
shrl
jne
in
mov
idivl
out
iret
testl
aam
rep
cmpsl
inc
pop
in
ja
jg
xchg
or
mov
lods
jne
push
mov
jle
mov
inc
pushf
add
leave
divl
out
pop
scas
xchg
sub
ret
pop
ffree
jmp
movsl
jns
xlat
xor
ud1
or
int3
xchg
stos
inc
xchg
cmpsl
ret
push
in
push
fldenv
ret
push
xchg
jbe
push
movsl
loop
test
nop
jecxz
jne
jge
push
cmp
pushf
movsl
cli
mov
cmp
outsb
sahf
stc
xchg
sbbl
cld
test
pop
sub
ficompl
lret
adc
push
jbe
push
xchg
mov
psubusb
lea
les
jl
rolb
addr16
or
movsl
dec
xor
xlat
mov
shr
aaa
lea
hlt
xlat
add
inc
test
dec
pop
mov
mov
add
mov
inc
lods
cmp
xchg
push
repz
push
adc
dec
insb
jmp
push
push
or
add
sbb
outsb
es
pop
dec
mov
aad
push
jnp
push
aas
mov
cmc
cmpsl
inc
ljmp
sub
xchg
dec
outsb
push
imulb
mov
cli
and
jecxz
push
test
rorb
pop
push
adc
adc
sub
push
and
and
push
jmp
adc
roll
sbb
xlat
jo
xor
cmp
add
inc
ret
test
dec
addr16
aad
into
test
xlat
cmpsl
dec
cmp
cmp
xchg
inc
jbe
in
shr
mov
leave
or
inc
dec
mov
mov
lods
sub
lea
lcall
adc
xchg
pop
push
clc
lea
insl
cltd
xor
dec
cmpsl
add
cmp
cmc
ret
addb
mul
sahf
xchg
cmp
rcrb
jns
jne
sahf
iret
mov
cmpsl
push
cmpsb
inc
xor
fwait
dec
mov
stc
into
mov
pop
cli
jns
sarb
jno
cltd
loopne
xchg
fcomi
outsb
shlb
fdivs
iret
jne
incb
addr16
ret
outsl
shll
stc
jae
jmp
sbb
inc
dec
lods
mov
push
pusha
push
and
leave
scas
fstpt
shrb
mov
adc
cmpsl
mov
testl
and
mov
test
adc
jle
addr16
fstl
jge
mov
sbbl
lods
out
cltd
fcompp
pop
pop
xchg
cmpsl
mov
movsb
test
jmp
push
es
mov
out
test
jb
inc
inc
mov
clc
xchg
out
jl
push
adc
jge
dec
fst
jg
stc
xchg
jne
add
push
sti
mov
div
jno
fiaddl
push
iret
adc
pop
les
xlat
enter
push
cmpsb
sbb
xchg
xchg
dec
cmpl
cmp
or
out
cltd
fdivs
pop
imulb
sub
mov
divl
add
imulb
sahf
dec
bound
les
xchg
inc
add
cltd
adc
pushw
xchg
jmp
inc
les
les
push
push
xor
fistl
mov
iret
sbb
dec
sbb
flds
mov
xchg
push
fs
xlat
popf
std
mov
dec
xchg
ret
rcr
repnz
inc
sub
push
lods
push
testl
je
inc
xchg
jmp
sbbb
pop
data16
negb
mov
outsb
inc
dec
mov
jb
mov
cli
les
sbb
es
cmp
jge
jns
jmp
imul
in
cwtl
cmp
xlat
popa
nop
arpl
fwait
out
lret
mov
cld
and
jbe
jb
ja
hlt
or
imul
into
or
jmp
xchg
mov
push
repz
cwtl
cmpb
stos
sub
pushf
xor
stc
clc
xchg
inc
mov
imul
fsubs
jle
xor
push
xchg
jne
outsb
xchg
mov
jg
inc
xor
fcoml
mov
cmp
into
scas
dec
jge
shll
pop
push
fsts
stos
sbb
and
es
push
xor
pop
mov
mov
insl
testb
mov
sub
pop
jb
pop
int
mov
not
inc
xor
adc
enter
push
adc
pop
mov
imul
adc
je
sub
inc
adc
adc
mov
mov
scas
fisubrl
test
adc
test
add
mov
daa
push
les
adc
add
pop
push
insb
and
ljmp
adc
dec
stos
stos
xor
mov
push
ret
out
xchg
xchg
xor
shll
pop
sbb
repz
xchg
jl
stos
jnp
int
repnz
stos
cmc
or
stos
cs
rorb
cmc
push
pop
insl
out
mov
in
dec
pusha
sti
shr
push
xchg
lret
stc
xchg
pop
divl
mulps
inc
add
mov
xchg
push
mov
es
les
dec
in
pop
fidivrl
mov
push
mov
pop
cmpsl
mov
sti
inc
mov
pop
inc
push
jno
xchg
sub
jno
mov
nop
aam
fistl
mov
adc
xchg
pop
sbb
or
pop
pop
int
jns
aad
pop
cmpsl
mov
orl
or
push
jmp
popf
push
lock
aam
push
in
jo
movsl
jae
out
adc
test
ret
cmp
push
sbb
dec
dec
rcl
dec
scas
insl
xor
jbe
fstsw
mov
jb
lods
fs
lahf
into
or
imul
in
mov
leave
xchg
mov
fidivl
inc
test
imul
popl
pextrw
cmp
jmp
fmuls
imul
es
mov
mov
aad
fistpll
jnp
movsl
andl
push
cld
rorl
xchg
mov
imul
xchg
dec
mov
or
xchg
adc
divl
dec
mov
and
lods
inc
insl
fldcw
rcll
lods
fcoml
nop
cmp
loopw
sti
pop
dec
clc
sti
adc
jge
cmpsl
xchg
cmc
xor
xor
adc
inc
es
imull
lret
js
mov
jg
sarb
sbb
cltd
or
icebp
jns
pop
sbb
jl
jmp
and
adc
repnz
dec
mov
xlat
and
popa
pop
mov
inc
and
mov
icebp
sarb
stc
lret
call
xchg
sahf
shlb
jmp
adc
fs
xchg
xchg
fists
add
jmp
jne
lret
sti
mov
xchg
mov
mov
pop
add
std
dec
xchg
outsb
aaa
je
jge
stc
inc
out
insb
adc
jmp
or
jae
xchg
shrb
mov
pushf
or
daa
sbb
cmc
mov
insl
cmc
int3
jbe
shrl
adc
xchg
ja
and
sti
addr16
add
cmpsl
add
cld
and
cmp
inc
es
rolb
test
out
xor
inc
sti
jp
xchg
int3
lcall
lods
and
jmp
repnz
pushf
cmp
ficomps
shll
mov
dec
stos
jmp
fldenv
mov
idiv
inc
rclb
data16
adc
push
pop
pop
cmc
jle
bound
cmc
or
mov
and
dec
mov
shrb
div
xlat
pop
rcll
je
or
repz
push
mov
inc
je
inc
aam
pop
xor
sti
stos
sub
arpl
repnz
lcall
ret
xchg
loope
ss
jbe
test
dec
sub
cld
xor
push
mov
out
mov
lock
movsl
dec
ja
cld
pop
daa
push
sarb
jl
inc
divl
int3
cmpsl
leave
sbb
or
stc
adc
stos
repz
andl
sbb
jnp
fucom
xlat
insb
aad
movaps
into
out
push
mov
aad
in
xlat
mov
jns
cmovne
loope
daa
shrb
popf
xchg
jmp
movsl
jecxz
lock
push
stos
repnz
iret
push
adc
inc
testl
lcall
addr16
or
aam
xchg
std
and
movsl
xor
push
leave
mov
ds
clc
shlb
cmpsl
test
jle
dec
js
cltd
imul
push
push
out
mov
or
xor
inc
inc
and
mov
outsb
xchg
imul
add
stos
sub
rcl
iret
cs
ds
pop
jmp
push
imul
ljmp
push
roll
sub
popa
pop
mov
ds
pusha
lsl
loop
mov
mov
cmpsl
dec
loope
xchg
mov
icebp
sahf
mov
test
sbb
mov
pop
inc
inc
jmp
xchg
cli
xchg
mov
iret
fmull
sti
push
or
pop
fcompl
add
adc
inc
and
pop
ret
inc
mov
ljmp
stos
sbb
fnstenv
or
idiv
jecxz
mov
dec
pop
cmp
pop
sub
out
es
cmp
push
mov
cli
jp
cmp
cmp
push
sbb
icebp
inc
sti
lods
jle
fxch
aaa
aad
scas
xlat
jne
adc
insb
sbb
xlat
insl
jl
or
mov
push
lock
repnz
outsw
neg
fldenv
aad
pop
arpl
in
add
xchg
mov
mov
cs
es
rcll
push
sahf
add
shrb
push
push
rcrl
jp
push
dec
repnz
inc
enter
push
in
pop
insb
fsubrs
xor
jo
imul
inc
pop
push
in
cmpsl
mov
repnz
leave
cmpsl
rorb
in
mov
xchg
adc
adc
shr
insb
movsl
outsb
sti
sbb
bound
jmp
pop
xchg
xlat
test
and
stc
pop
test
fdivrl
mov
insl
sti
enter
aad
fmuls
or
push
cld
andb
xchg
inc
and
xchg
sbb
inc
push
adc
loop
mov
lds
mov
and
in
push
pop
or
push
data16
pop
jp
pop
dec
mov
dec
imul
push
pushl
cmp
js
sbb
scas
adc
jne
pop
pop
mov
test
xchg
xchg
clc
loope
inc
int3
jnp
mov
into
pop
push
aam
cwtl
cmp
and
cmpsb
dec
js
addl
mov
sbb
hlt
aad
clc
jb
cmc
and
inc
sub
xchg
mov
lcall
sbb
mov
ffreep
hlt
push
or
mov
xchg
pop
pop
scas
mov
sarb
inc
sub
ja
xorl
dec
jo
lods
testl
push
adc
mov
cmpsl
xchg
insb
ss
je
xor
cld
jbe
in
xchg
cli
xchg
mov
jae
cmpsl
insb
sti
mulb
cmp
iret
mov
sbb
dec
push
cltd
gs
mov
jnp
aad
icebp
cmpsl
sar
push
repnz
mov
add
add
inc
in
mov
and
into
push
insl
pushf
negl
fstpt
xchg
out
loopne
sbb
sub
sub
sbb
pop
hlt
test
inc
movsl
pop
jno
fdivrl
es
and
into
js
ret
cmpsb
rcl
bound
loope
repnz
loopne
jg,pn
pop
mov
cmp
sarl
inc
mov
mov
lods
mov
lahf
fldt
ja
leave
popa
in
cmp
and
les
cmp
out
pop
cli
cmp
sti
jbe
push
cmpsl
xor
in
sub
cmp
mov
xchg
fisttpll
clc
inc
add
xlat
mov
in
aad
lea
iret
je
fidivl
faddl
enter
mov
mov
add
ret
insl
fld
lcall
cli
push
or
lock
jae
in
fstpt
pusha
aaa
int3
scas
imul
movsl
outsb
sbb
ss
test
cld
mov
inc
popa
sbb
mov
jbe
xor
je
inc
mov
push
jmp
das
popa
fcomps
iret
popf
or
mov
inc
mov
iret
pop
cwtl
test
mov
fidivl
scas
int
dec
lcall
xor
sub
push
cli
xchg
lea
push
rcl
fcomps
mov
cltd
pop
int
dec
cmp
cwtl
xlat
or
out
cmp
mov
mov
push
lret
jecxz
cmpsb
and
cmp
sub
cmpsl
sub
shlw
in
jp
fstps
jmp
pop
sbb
push
aad
ret
std
test
pop
pop
sub
popa
jmp
mov
sub
add
divb
mov
mov
mov
pop
les
mov
pop
add
repz
ja
add
or
jg
xor
aam
inc
mov
lret
push
test
decb
xchg
dec
jo
jno
mov
test
cmpl
ret
stos
sarl
push
lret
loop
insb
mov
mov
pushf
xchg
insl
dec
adc
adc
push
adc
scas
mov
pop
and
pop
adc
in
mul
inc
fs
sbb
jae
xchg
jg
rcr
loope
inc
repnz
jns
icebp
roll
lcall
cmp
jge
inc
or
call
jnp
adc
orb
mov
iret
ret
not
inc
es
fcoms
xchg
or
pop
nop
mov
pop
or
pop
dec
mov
rcll
popf
add
push
xchg
popa
fsubrp
repz
xlat
mov
ds
mov
cmp
out
pop
push
jl
mov
lods
pop
arpl
add
adc
push
ret
jmp
sahf
ja
xchg
mov
or
sti
lcall
mov
not
rcll
mov
sub
mov
pop
dec
xlat
jmp
je
mov
mov
mov
ret
mov
repz
fists
pop
cmpsl
fiadds
ret
mov
dec
jle
mov
arpl
fwait
repz
loopne
movsl
popa
xchg
push
out
stc
icebp
scas
out
nop
jp
jmp
adc
int
iret
fiadds
icebp
rorl
mov
rol
ficoml
jns
repz
lock
out
add
inc
js
rclb
mov
stos
adc
cmp
incb
or
ret
jb
inc
lret
icebp
mul
cmc
nop
lock
repz
push
ds
fimull
cmp
je
cmp
push
or
in
xchg
and
int
lock
leave
push
inc
outsl
jmp
mov
jp
xchg
inc
mov
lock
xchg
ja
sub
stc
mov
call
or
cmpsl
aad
dec
das
pop
add
pop
mov
inc
test
jle
add
adc
xor
xchg
xcrypt-cbc
popa
add
cmp
xor
mov
inc
test
add
sbbb
mov
jne
cmpsl
aam
cltd
roll
data16
and
or
aas
sub
push
mov
neg
mov
add
xchg
cli
addl
push
sub
jmp
add
repz
and
mov
cmp
cmpsl
push
addr16
mov
xchg
adc
or
test
add
cmp
ret
ret
mov
into
mov
cmpsb
les
cli
sbb
ret
imul
int
jle
faddp
push
sbb
mov
inc
icebp
adc
mov
pushf
mov
inc
out
push
out
jmp
daa
push
lret
jmp
xchg
mov
mov
ret
aad
xchg
sbb
daa
iret
push
fisubl
mov
nop
mov
cli
cltd
fcoms
aaa
test
pop
jae
cmp
push
jo
sti
cli
mov
inc
push
repnz
xchg
or
sti
mov
cmpsb
movsl
fisubs
jo
adc
jp
icebp
lret
rcl
pop
add
mov
jb
cmpsl
mov
test
fildl
les
dec
outsl
push
call
adc
shll
sbb
add
rdmsr
pop
sbb
add
mov
scas
out
xchg
sbb
dec
inc
enter
push
mov
xchg
xlat
xor
inc
mov
shll
jge
sbb
cmpsl
dec
fildll
and
out
push
cwtl
mov
fstl
xlat
dec
insb
imul
cmpsl
adc
rcll
fistpl
stc
jl
test
and
jp
ljmp
sub
arpl
lcall
mov
xchg
xor
sti
test
sbb
xchg
push
inc
iret
mov
mov
fisubrs
lret
mov
cmpsl
arpl
mov
inc
js
ljmp
pop
sbb
cmpsl
ljmp
rolb
nop
inc
sub
cmp
add
push
mov
fcmovne
and
mov
repz
scas
out
bound
ds
mov
pop
add
test
add
add
shl
add
jl
adc
iret
or
outsl
cmpsl
lcall
out
inc
imull
stos
inc
aaa
shr
add
cld
ja
mov
test
enter
pop
cmp
adc
adc
push
jno
lds
imul
dec
jg
mov
insl
adc
jge
movsb
cmp
jbe
inc
call
inc
in
xor
xchg
rclb
rcll
aam
cld
sbb
push
mov
fisttps
das
imul
cs
sbb
dec
inc
fldt
daa
repnz
pop
xchg
ficompl
mov
xchg
adc
push
pop
daa
jb
ret
cltd
pop
imul
sbb
mov
fldl
fcomi
mov
push
shll
sub
mov
jno
jecxz
push
daa
mov
daa
xor
test
xchg
pop
daa
mov
and
mov
pop
inc
fistpl
push
out
cmp
add
push
les
or
xor
ror
cwtl
in
in
cmpsl
jns
pop
pop
lock
cmpsl
sub
sti
cmp
sbb
lcall
clc
pop
xchg
inc
iret
dec
mov
scas
xchg
lret
lds
mov
and
inc
push
out
jne
xlat
daa
cli
or
in
xchg
scas
lock
lock
mov
pop
dec
cltd
xlat
push
xchg
aam
or
cmova
pop
in
mov
cmp
mov
push
ret
sub
in
adc
sbb
mov
aad
inc
rcr
jns
loopne
es
icebp
xchg
rcrb
sbb
bound
adc
adc
nop
sbb
fiadds
scas
ret
icebp
ja
stc
pusha
hlt
jb
mov
adc
jb
mov
bound
hlt
push
jmp
sbb
out
mov
repnz
lret
jp
fcomi
inc
decb
jno
ss
mov
mov
xlat
cmc
ja
jno
xlat
fstl
fnsave
jns
mov
lahf
pop
hlt
je
fnsave
lock
mov
js
dec
jno
cli
sti
pushl
bnd
popf
test
lds
pcmpeqb
mov
test
mov
movsl
xchg
fnstenv
jno
or
lods
sbb
jbe
test
mov
repnz
mov
push
and
paddusw
adc
iret
mov
cmp
xlat
push
es
rclb
mov
insb
out
repz
xchg
xchg
ret
in
fcomps
xchg
in
push
loope
rcll
push
ret
daa
adc
ret
push
cmp
out
repz
scas
lret
insl
repz
mov
jecxz
cltd
shl
xchg
not
xor
fwait
popa
jns
mov
lret
loop
xchg
push
inc
xchg
lods
je
movb
outsl
inc
dec
adc
jb
mov
sub
xchg
fbld
test
movsl
das
pop
clc
mov
or
insl
mov
hlt
xor
test
mov
hlt
push
bound
cmp
xchg
iret
sbb
pop
ljmp
aam
jne
or
dec
cmpsl
adc
xorl
mov
or
jne
out
aad
xor
mov
sbb
loop
test
add
popa
cwtl
movsb
xor
add
lods
out
xchg
add
push
push
push
mov
int3
inc
int
imul
rclb
fsubs
push
mov
mov
repz
jae
cmpsl
or
add
repnz
shlb
ficompl
mov
negl
inc
fadds
pop
pop
add
mov
lcall
mov
pop
test
int
int
inc
movsb
jmp
in
cmpsb
in
rcrl
daa
rcrb
icebp
lock
adc
or
notl
imul
shll
dec
mov
loope
addr16
adc
inc
mov
ljmp
jo
es
fmul
inc
xor
scas
nop
fimuls
aam
pop
xor
pop
rclb
cmp
sbb
mov
inc
shlb
add
fsubrs
test
lods
or
stos
stc
ds
xor
in
sub
fmuls
fldcw
add
sub
daa
pusha
jecxz
shrl
lds
push
xchg
jge
fsubrs
xlat
imul
dec
sub
adc
rolb
push
jmp
negl
lods
inc
jecxz
lods
flds
inc
or
jmp
out
jecxz
repnz
xchg
fistl
ret
mov
pop
fwait
enter
fstps
xchg
sub
fimuls
xchg
shr
repz
sti
movsl
xchg
mov
jecxz
repz
sub
test
pop
fcomp
pop
or
mov
inc
loop
jnp
inc
add
in
push
and
or
cmp
mov
xchg
jo
inc
mov
mov
cmp
cmp
mov
xor
mov
xor
mov
jo
inc
mov
ss
mov
xor
mov
or
mov
fisttpll
mov
push
mov
mov
dec
movsb
iret
mov
repnz
fnsave
jb
inc
imul
out
mov
cmp
push
inc
mov
fdivl
hlt
xchg
mov
call
pop
bnd
sbb
dec
cli
sti
enter
cli
push
fxch
jnp
xchg
aam
xchg
aad
pushf
push
pop
push
sbb
fnstenv
xchg
sub
jnp
adc
rcl
icebp
test
repnz
push
test
repz
inc
sub
repz
cmp
mov
iret
iret
jge
mov
aad
fcmovnb
fyl2x
pop
ret
pop
shll
cltd
out
jae
out
jo
fmuls
push
out
stos
pop
sub
push
cmpsl
cs
jo
in
jnp
aad
mov
xchg
dec
xchg
push
jno
sub
sub
repnz
fistl
test
mov
cmpsb
xchg
sar
jp
ljmp
icebp
jno
sbb
ret
hlt
ret
push
jmp
testb
mov
pusha
popa
in
je
ret
inc
jp
es
cmc
push
imul
jl
cli
je
xor
and
jns
jns
cli
stc
movsb
inc
push
lret
out
dec
jnp
sarb
hlt
jno
jg
ret
stos
imul
mov
dec
push
push
ja
addr16
loope
fs
popa
dec
push
add
lods
pop
inc
xor
addb
mov
push
cli
sarb
in
xchg
push
mov
pop
sub
out
adc
mov
addl
xchg
sti
loope
int
adc
leave
jb
inc
out
stos
out
adc
test
int
adc
leave
cs
jb
sbb
fdivp
push
ja
ljmp
ffree
xlat
mov
add
dec
push
je
push
jo
iret
or
ja
cli
fs
in
cld
and
push
ljmp
dec
ret
mov
or
repnz
inc
enter
lods
insb
inc
fwait
and
xlat
cs
adc
adc
cli
notl
pop
xor
mov
call
push
int3
jmp
insl
xchg
stc
lret
fadd
lret
jae
xor
shrl
mov
lret
cli
cmp
xor
add
or
stos
in
js
in
rorl
lret
push
test
push
mov
push
push
out
test
xchg
sub
ficoml
out
adc
imul
xchg
enter
test
iret
jae
mov
ret
xadd
mov
xorl
dec
test
add
pop
dec
testb
and
push
sub
xchg
stos
adc
push
push
push
rcll
sub
rorb
sbb
lret
lret
jp
mov
movsl
arpl
ljmp
push
insl
aad
loope
lret
inc
jg
fcmovnbe
cmpsl
addr16
aad
js
xchg
flds
xor
mov
inc
xchg
aad
push
fsub
or
dec
push
and
mov
shrl
inc
leave
stc
sbb
jl
xchg
cltd
cli
fistpll
testb
cli
popa
shrl
xchg
ret
mov
pop
lcall
sub
cmp
mov
mov
xchg
clc
cmpsl
out
stos
push
sbb
mov
je
ljmp
jp
dec
lods
ds
push
cmpsl
cltd
loope
out
js
cmpsb
lods
push
push
sbb
arpl
fistl
icebp
fwait
aad
js
faddp
inc
pop
jae
enter
mov
mov
push
inc
shrl
out
shr
xchg
inc
dec
jno
push
nop
jb
gs
shlb
jb
xor
in
mov
and
pop
stos
out
dec
pop
insl
rol
mov
xchg
subb
pop
ret
in
adc
imul
push
jecxz
int3
ljmp
adc
cmpsl
add
dec
inc
imull
xlat
or
push
xchg
adc
sbb
xor
rcrl
aam
mov
xchg
adc
pop
int
cltd
or
sbb
loop
mov
jg
mov
sub
fsts
mov
adc
lahf
sub
cmpsl
idivl
std
scas
xchg
fcomip
shlb
mov
and
push
pop
sub
sub
in
mov
into
les
dec
ret
inc
rol
setnp
ret
push
cmpsl
ret
xchg
aad
rcrb
sti
xlat
jmp
jno
xlat
mov
cmp
rcrl
mov
push
cmpsl
inc
xor
and
popa
dec
mov
xchg
subb
arpl
lods
sub
leave
mov
cmp
icebp
pop
dec
push
into
jns
into
sub
enter
inc
loop
sar
pop
push
sbb
push
inc
mov
fsubrs
pop
dec
testb
sbbb
out
ja
loopne
xor
dec
mov
xchg
pop
xchg
jno
imul
and
push
out
scas
cmpl
xchg
xor
jae
sub
pop
rcr
mov
xchg
xlat
fwait
iret
mov
xchg
jecxz
icebp
fcomi
scas
loope
icebp
mov
ret
subl
fstpl
scas
shll
jns
push
jno
dec
lret
cmc
mov
xchg
repnz
scas
frstor
scas
repnz
ffree
ret
xor
push
inc
clc
fwait
das
adc
rol
insb
repnz
stc
cmpsl
pop
add
adc
arpl
rcll
mov
push
or
sbb
ret
subl
push
push
push
push
cmpsl
mov
imul
test
xchg
enter
push
fcomip
out
inc
jp
sub
es
mov
and
sbb
pop
xlat
mov
xchg
movsl
add
test
fs
es
loope
xor
jb
cli
orb
ds
fsub
pop
push
mov
nop
ret
adc
cmc
sarb
arpl
int3
cli
jmp
xrelease
sbb
jp
test
cmp
les
rcl
jg
add
jl
movsb
ret
mov
test
xor
xor
mov
cmp
inc
iret
icebp
mov
iret
je
lds
movsl
sub
aam
int
imul
push
add
shll
rcrl
imul
lods
xchg
in
int
addl
adcl
in
xlat
fimuls
sub
cmpsb
aam
sahf
jo
pop
adc
xchg
test
pop
jl
in
leave
fwait
jmp
aam
je
or
out
lods
icebp
into
leave
popa
xchg
iret
push
lock
std
inc
fwait
ret
leave
adc
out
sbb
xchg
aad
xchg
das
xlat
popf
nop
repnz
inc
in
mov
stos
pop
dec
icebp
outsb
shrl
enter
aam
out
inc
sbb
iret
inc
mov
ljmp
xlat
lods
nop
jo
inc
sti
icebp
roll
repnz
gs
adc
in
xchg
jb
inc
cmc
fwait
incl
mov
pop
cmpsl
icebp
int
inc
dec
std
inc
test
stc
sbb
mov
jnp
push
scas
inc
test
arpl
gs
in
jl
push
ja
mov
arpl
cld
lods
pop
jp
mov
test
pusha
pop
ljmp
iret
js
push
daa
jl
push
and
fs
mov
jl
fistpll
adc
fldcw
fnstcw
repz
jmp
in
inc
sbb
pop
add
aam
loope
std
int3
sub
cmp
ficoms
cwtl
out
addr16
repnz
fsubrp
mov
fnsave
cmc
jg
xchg
pop
imul
fcmovbe
fucomip
pop
pop
out
int3
add
xchg
shll
xlat
xor
pop
divb
fisubrl
out
dec
pop
jmp
adc
jne
xchg
jg
push
push
enter
jbe
repz
out
mov
mov
jle
into
and
aam
fistpl
nop
dec
notl
out
fidivs
out
adc
out
inc
mov
js
jg
aad
inc
push
fwait
int3
mov
pop
rcl
push
loope
gs
fs
xlat
fistps
enter
push
mov
mov
mull
aad
sbb
add
push
dec
xchg
add
imul
mov
push
jp
mov
xchg
xor
es
mov
fucomi
ja
int3
lahf
xchg
cli
pop
xchg
jne
xchg
and
movsb
pop
mov
cli
fdivl
mov
inc
sbb
repnz
dec
out
jnp
aad
testl
mov
scas
lahf
rcl
nop
jb
pop
push
dec
cmp
dec
add
inc
xchg
shll
shlb
cmp
push
movl
nop
jno
in
pop
jb
xchg
cld
cmp
sbb
mov
mov
cmp
jmp
add
push
inc
out
xor
push
pop
xor
aad
jne
xchg
push
xor
cmp
ret
test
pop
push
jae
push
aad
cmc
lods
nop
push
mov
push
jecxz
fwait
insl
aaa
test
xchg
cli
pop
jne
mov
fcmovnb
mov
stos
aad
xchg
inc
nop
jp
adc
inc
cmp
std
lret
nop
cmpsb
leave
adc
dec
push
repz
enter
sbb
dec
dec
fldl
fwait
mov
cmp
popf
fistpl
out
xor
sbb
loop
sar
rcr
testl
nop
repnz
es
mov
mov
mov
aad
xchg
lock
push
fisttpl
ficoml
xchg
repz
push
nop
inc
mov
xlat
fstl
mov
aad
or
mov
lret
pop
inc
jmp
add
aad
rclb
pop
xchg
add
rcl
mov
loopne
dec
aam
sarl
je
int
cwtl
ret
leave
push
inc
sub
xchg
xchg
xchg
rorb
in
jmp
inc
push
cltd
stos
xchg
arpl
loope
dec
xor
into
dec
inc
fcmovnu
xchg
lret
ret
aad
mov
mov
pop
int3
fucom
repnz
fsts
dec
adcb
ljmp
fs
aam
dec
nop
mov
mov
lret
movsl
pop
je
xchg
push
mov
inc
jl
dec
ret
xor
jns
dec
ret
xchg
lret
imulb
icebp
std
and
xchg
pop
cltd
lret
fcmovbe
jl
arpl
xchg
hlt
int3
inc
rcrb
sbb
add
push
lcall
cwtl
dec
or
lahf
into
cmpsb
mov
mov
leave
add
xlat
icebp
loop
xor
inc
xlat
icebp
fninit
and
dec
push
aad
js
bound
stos
sub
flds
sti
jmp
jae
push
rcll
pusha
jne
cmc
stc
fnsave
jnp
aad
jno
dec
movb
cltd
icebp
imul
imul
or
mov
dec
fwait
mov
sbb
test
idivb
and
ja
xchg
xchg
adc
popf
mov
xchg
pop
lock
jae
inc
call
hlt
aad
addr16
ja
ljmp
sub
xchg
mov
in
popa
ror
iret
push
in
imul
add
ds
iret
push
lock
cmc
bound
bsr
lret
and
popf
xchg
mov
mov
lds
jb
iret
push
or
push
aad
iret
popf
jp
mov
ret
test
fcmovnb
lret
mov
lahf
mov
fs
mov
ds
stc
popa
fisubl
push
xchg
push
jno
push
leave
pop
pop
in
jae
call
mull
xchg
dec
clc
fistpl
stos
popf
sbb
repz
lock
jb
fidivrl
rcr
outsb
xchg
dec
mov
jne
les
dec
dec
aad
fsubs
push
xchg
push
stos
xor
inc
jecxz
fldt
jae
pop
xchg
fstps
sbb
and
push
shrl
ja
in
loop
daa
inc
and
pop
mov
and
push
stc
aad
jno
repnz
sbb
cmpsl
dec
mov
pop
xlat
xlat
fst
andb
cmp
dec
andb
ja
mov
mov
sbb
cmc
pushf
adc
pop
lock
aad
es
lret
or
pop
inc
rclb
adc
lret
cmpl
rcrb
js
xchg
iret
out
dec
push
push
cmp
stc
pop
fistl
cmp
push
lock
rcll
xchg
cli
jno
jbe
sub
leave
inc
out
jnp
pop
pushf
jl
mull
enter
sar
aad
push
je
jg
ret
rcl
or
test
add
jb
pop
cmc
mov
scas
leave
pop
xchg
adc
sti
mov
pop
jae
leave
stos
push
jp
jae
push
push
mov
loopw
ror
dec
inc
fwait
jmp
pop
iret
popa
loop
jb
xchg
int
ret
mov
leave
push
cmpsl
add
rcll
mov
fcmovnb
mov
push
in
mov
ja
jb
les
cmp
xlat
int3
int3
cmp
std
idiv
fwait
jecxz
mov
out
loop
aam
int
jb
lret
imul
outsl
lret
test
enter
cltd
jmp
rcrl
mov
cwtl
mov
fcomps
mov
repnz
mov
mov
aam
aaa
lock
pop
inc
icebp
xor
test
mov
mov
inc
aad
hlt
pop
fsubs
addr16
imul
push
scas
pop
outsb
lret
push
jmp
fincstp
push
fnstenv
jp
mov
sub
inc
fsts
enter
pop
xchg
leave
adc
push
scas
cmpsl
push
imul
jae
ljmp
sub
mov
aas
rcrl
sbbl
xchg
or
loop
lret
rol
push
mov
ficoml
out
mov
lods
rclb
add
mov
jne
mov
fildl
cltd
sahf
popf
xchg
fwait
in
add
sbb
fwait
leave
rcl
negl
pop
rcll
xor
sub
push
rcrl
sub
leave
fstps
xchg
xor
cmpl
jmp
adc
push
sub
rclb
mov
jmp
jno
jg
pop
rclb
add
icebp
push
icebp
fistps
push
out
ja
loope
pop
pop
icebp
pop
aad
xchg
jne
es
pusha
dec
inc
jmp
stos
fstpt
aaa
adc
or
xor
cli
movsl
xchg
cmp
repz
pop
pop
fsubr
lock
xchg
mov
bnd
jmp
ret
popa
divl
in
jmp
adc
add
push
lcall
lods
xchg
inc
jl
pop
inc
add
sarl
outsl
add
sti
test
loopne
fbstp
xchg
iret
lods
mov
mov
ret
lock
sbb
push
rcr
clc
xchg
scas
push
into
mov
fidivl
ffree
das
cli
int3
xchg
dec
push
jp
int3
stos
roll
push
int
fwait
lods
pop
bound
dec
inc
iret
int3
inc
loope
aas
sub
mov
fcomps
test
mov
std
pop
jno
push
push
mov
push
fwait
adc
in
xor
mov
loope
add
popa
mov
lock
cmp
mov
rcll
loop
adc
xchg
mov
loope
pop
ljmp
push
inc
out
rcrb
mov
stos
pop
jmp
xchg
add
inc
or
mov
push
lret
pop
hlt
xlat
outsl
shlb
mov
push
fstps
sbb
sub
jge
pusha
testl
dec
jb
jbe
and
testb
dec
xorl
lds
pop
rolb
cmc
out
fucomip
cli
ss
lret
in
mov
popl
mov
scas
jl
xlat
es
pop
stc
pushf
gs
fwait
mov
std
jp
xlat
inc
sbbl
jbe
mov
cmpsb
mov
inc
cmpsl
scas
movsl
cmp
add
repnz
fcomp
pop
adc
jmp
clc
sub
add
sbb
adc
cmp
lcall
popf
addr16
xchg
push
fdiv
jae
cmpsl
gs
sub
and
cli
je
mov
clc
ja
fstpl
push
push
fnstsw
mov
inc
gs
cmpsl
sub
pop
out
inc
pop
fcom
and
cmp
cmpsl
cmc
in
sbb
mov
cld
or
hlt
push
imul
dec
add
rorl
icebp
xchg
je
lods
or
inc
shll
add
mov
lahf
inc
mov
lds
jnp
hlt
orl
mov
or
test
mov
repz
jmp
pop
push
mov
repnz
sbb
loopne
clc
out
xor
mov
cmp
fwait
js
jecxz
test
lret
dec
xor
call
jbe
xchg
mov
ret
pop
icebp
idivb
sbb
or
imul
sti
shlb
clc
cli
lods
xchg
outsl
rcrl
xlat
push
imul
pop
push
stc
stc
jmp
add
test
fnstenv
out
pop
adc
lock
sub
sbb
mov
cltd
fistps
imul
jmp
and
fsubl
inc
xlat
popa
sti
sbb
and
mov
lret
icebp
xchg
scas
lahf
cli
pop
sbb
sub
sar
lds
imul
xlat
fistpll
pop
daa
cmp
stc
cli
jo
mov
aam
mov
sbb
mov
lahf
mov
adc
scas
adc
imul
mov
dec
mov
add
frstor
rolb
stos
sub
int
into
mov
jo
popf
xorb
mov
ret
test
insb
adc
call
imul
call
je
ja
mov
pop
js
pushf
inc
in
sbb
imul
fincstp
in
les
test
jge
repz
fucomi
push
sbb
je
fcomip
mov
fidivl
jo
sbb
inc
leave
stc
mov
xlat
shl
lcall
loop
movsb
leave
shr
pop
mov
movsb
fst
fmuls
jecxz
icebp
icebp
push
ret
int
cli
mov
iret
xchg
or
mov
cli
xchg
popa
dec
leave
test
sub
fisubl
add
pop
dec
dec
xchg
push
adc
push
jp
push
xchg
add
jne
in
insb
imull
clc
faddl
xchg
cli
aaa
ret
push
mul
or
ja
stc
pop
packuswb
insb
adc
mov
jp
scas
jecxz
dec
dec
int
and
adc
fsubs
push
pop
sbb
cmpsb
and
fcmovnbe
cld
repz
mov
imul
divb
cmp
ljmp
dec
cmp
push
aas
lods
mov
push
aaa
pop
icebp
in
cmp
xor
sbb
rol
fsts
cmpsl
das
jnp
mov
sbb
loope
push
xchg
sbb
sahf
dec
xchg
int
and
dec
inc
jl
rclb
imul
inc
loopne
clc
incb
ret
jl
dec
cltd
push
movntq
out
aas
ret
stc
outsb
adc
inc
imul
test
je
pop
xchg
popa
ficomps
inc
fldenv
in
mov
mov
cmpsb
pushf
fldenv
aaa
cmp
ds
push
jne
mov
jle
scas
cmpsl
mov
sbb
aam
dec
repz
dec
jns
push
pop
and
fsubrs
adc
aam
jmp
jo
pop
adc
outsl
movsl
xchg
xor
add
movsl
lahf
iret
stos
fsts
scas
cltd
xorl
es
shlb
outsb
push
inc
cmpsl
cmp
pop
inc
mov
ret
mov
jl
scas
outsb
and
in
add
out
pop
pop
xlat
ss
insl
mov
mov
jg
std
sbb
notl
imul
mov
popa
jne
inc
xchg
loopne
sbb
out
and
fs
add
fisttps
mov
inc
loop
adc
aam
ret
icebp
cmpsl
kmovb
rcrb
repz
push
sbb
pop
in
mov
and
rol
icebp
idivb
stc
inc
cmpsl
inc
sub
xchg
fwait
mov
pop
aas
fcomps
xor
ja
inc
pop
pop
lret
ret
hlt
fimull
jne
add
sbb
aas
sahf
jae
cmp
ljmp
mov
in
mov
pop
xor
xchg
leave
rorl
loop
pop
movsb
les
push
pop
mov
inc
fnsave
shll
xchg
rcr
test
aad
xlat
adc
mov
outsb
jle
bnd
dec
inc
jnp
add
in
or
cmp
jae
jnp,pt
lods
adc
lods
sbb
fmul
jmp
nop
mov
sub
jmp
xchg
insb
inc
or
lret
sbb
jmp
shlb
inc
lret
pop
xchg
inc
pop
ret
ficoms
ja
pop
jbe
add
sbbb
xchg
sub
inc
mov
and
jl
aas
xchg
cmpsl
ret
push
xchg
std
pop
shll
fwait
jo
fisttpl
mov
ret
fnstcw
aam
inc
imul
mov
imul
push
jge
and
fnstsw
inc
cmp
jb
fwait
push
inc
movb
or
push
sub
roll
icebp
cmp
sahf
btc
movsl
test
mov
lock
fs
push
popf
dec
xor
out
fcomi
xchg
jbe
dec
sbb
dec
sbb
xchg
cltd
push
imul
push
int3
add
ret
lock
inc
inc
int
lret
incl
push
stc
sbb
into
inc
insb
icebp
lods
scas
das
shll
loop
and
dec
scas
insb
push
push
xchg
icebp
int3
sub
orl
sub
dec
mov
xchg
outsb
mov
dec
in
iret
push
xchg
in
int3
lods
std
imul
sti
inc
in
arpl
shr
pop
fisubrl
cmp
dec
leave
dec
mov
push
xchg
push
mov
push
xchg
addr16
xor
cmp
pop
mov
jle
cmp
insl
or
xor
inc
mov
mov
mov
mov
imul
int
rep
push
es
and
inc
sub
mov
pop
insb
shl
jo
inc
sub
lods
inc
icebp
fcoml
mov
fldt
mov
xchg
push
es
inc
lret
inc
inc
pop
in
or
lods
leave
in
test
pop
call
xor
mov
cli
push
sub
inc
sub
inc
imul
and
mov
dec
insl
and
adc
inc
lods
int
mov
ss
fcoml
imul
ret
jecxz
xor
mov
or
xlat
sub
mov
mov
xchg
fsubrs
xor
push
call
push
shrd
mov
jns
fwait
sarb
repnz
rcr
jnp
pop
jmp
cmpsb
mov
aad
test
push
pop
push
adc
inc
xor
stos
fldl
jle
scas
cmp
cmp
cmp
sbb
jl
mov
stos
push
jns
ja
xor
call
lret
insb
mov
jnp
inc
int
xchg
negb
mov
mov
cmp
ljmp
dec
mov
and
sub
push
es
outsb
subl
insl
loope
xchg
mov
dec
or
push
add
ret
jns
pop
popa
jle
daa
and
sahf
pusha
cmpsb
jo
sub
pop
cmp
idivl
xchg
lss
jp
test
shlb
mov
jle
jl
imul
add
mov
test
pop
mov
mov
aas
repnz
cli
mov
xchg
pop
xchg
es
aas
arpl
adc
fs
cmp
out
cmp
jae
int
sbb
inc
cli
aas
popa
shl
mov
xlat
add
fs
pop
sbb
repnz
sbb
sbb
cmc
dec
fdivrs
xor
ret
sbb
movsb
or
xor
leave
in
rcl
imul
scas
xchg
lahf
arpl
xchg
dec
add
sbb
mov
loopne
xlat
insl
into
bound
dec
xchg
jecxz
jmp
int3
push
ret
xchg
popa
leave
push
cmpsb
loopne
sti
jl
movsl
jno
adc
in
popa
dec
arpl
adc
ret
movsb
mov
in
lret
into
pop
pop
or
lret
jmp
push
ficompl
bound
pop
aad
xchg
std
sub
xor
jge
test
inc
in
mov
dec
or
nop
pop
lock
enter
sbb
xor
ret
cmp
in
fsubrp
and
xchg
stc
pop
push
cmpsl
cmp
js
push
xchg
ficompl
sti
fcomps
das
inc
loopne
test
aam
insl
cmp
insb
xor
icebp
lods
or
je
cmp
and
iret
icebp
pop
out
jnp
mov
inc
add
sbb
fildl
dec
mov
dec
xor
insl
push
mov
and
fldcw
in
ret
bound
hlt
and
sbb
mov
push
push
mov
ja
pop
cltd
xchg
sbb
in
enter
loope
pusha
notl
fidivrl
adc
shll
scas
push
dec
imul
fld
ret
fadd
mov
inc
rorb
fistl
fmul
iret
outsl
xor
lret
divl
subb
sti
scas
push
jp
testl
pop
pop
adc
inc
mov
in
pop
or
movsl
lret
inc
aad
cmpsl
dec
lock
mov
jnp
mov
loop
adc
mov
out
mov
ret
jnp
dec
and
push
repnz
mov
lcall
int3
mov
jbe
filds
fistpl
notl
je
movsb
sti
push
and
ja
jno
pop
fbld
imul
push
popa
lret
in
int3
pop
stc
push
dec
mov
mov
addl
pop
pop
push
imul
fidivrl
xchg
add
ror
and
fistpl
addr16
inc
lods
mov
mov
push
jp
push
ret
sbb
loopne
and
lods
jnp
popf
mov
inc
pushf
add
sub
push
inc
adc
pop
xchg
ret
sub
ficoms
xchg
insl
scas
jo
outsb
xchg
inc
xor
inc
inc
test
popf
pop
cmpsl
dec
jl
push
pop
into
in
or
push
shll
rorb
and
pop
dec
xchg
out
insl
ret
inc
mov
roll
mov
sti
loop
cmpsl
lea
sbb
sub
loopne
test
adc
pop
pop
repnz
stos
pop
mov
icebp
into
pushl
icebp
or
mov
pusha
cli
aas
loop
sub
lds
jb
sti
inc
dec
mov
movl
push
sbb
push
ja
in
lcall
xchg
in
aam
sub
imul
mov
and
pop
xchg
fs
lock
xchg
repz
xchg
cmc
cmp
cwtl
imul
push
jae
aaa
int
popf
roll
xor
adc
jmp
xchg
xlat
lods
es
mov
cltd
pop
cmpsb
out
adc
mov
cld
int
popf
dec
adc
pop
imul
dec
filds
lret
ja
in
ljmp
sub
xlat
negb
cltd
inc
push
jnp
dec
loope
cmpsl
mov
xchg
flds
test
ret
lock
shll
inc
jnp
stc
jb
or
mov
ja
gs
dec
icebp
into
scas
leave
stos
int
int
aam
xchg
roll
xor
xlat
mov
ret
fcompl
mov
push
xlat
iret
into
adc
xchg
fistl
stc
out
mov
jae
in
loop
out
icebp
sbb
inc
aad
scas
jnp
sub
cmpsl
ffree
icebp
mov
ja
shll
dec
aad
outsl
sbb
shll
ja
push
fcomps
push
test
les
cmp
repnz
jp
outsl
add
aad
push
lods
arpl
into
popa
loopne
imulb
stc
xchg
pop
aam
cli
sbb
out
xchg
xlat
pop
jb
popf
xchg
jmp
push
xor
fidivl
sar
loop
xlat
stc
jns
jb
pop
xlat
mov
aam
hlt
out
popa
fisttps
and
arpl
in
jge
xor
outsb
jle
test
shll
xchg
aaa
gs
dec
rcrl
rcr
es
pop
mov
xchg
test
outsl
push
push
into
ret
in
pop
jmp
in
int
imul
xlat
cmp
add
lds
addl
aad
jno
popf
idivl
dec
std
iret
inc
lret
push
incl
pop
push
jno
jb
sub
jge
add
loope
dec
mov
fidivl
in
sbb
sub
sub
call
dec
adc
aad
lret
out
adc
jno
jle
push
dec
cmp
mov
pop
cmpsl
mov
pop
shl
mov
ljmp
cmc
jno
mov
imul
std
addr16
jmp
jne
mov
and
out
push
jmp
mov
jmp
mov
mov
repnz
rorl
xor
mov
rclb
and
push
mov
fs
in
popa
sbb
jl
or
fucomi
clc
fdivr
subb
imul
xchg
xchg
int
std
test
rcrb
ja
call
lcall
popf
jecxz
test
fildl
mov
dec
mov
push
cltd
ret
rcll
jne
xor
fwait
ret
inc
shl
bound
out
sar
loope
incl
loope
not
js
aad
test
xchg
roll
dec
mov
push
sar
jns
mov
icebp
push
add
mov
fwait
xchg
leave
mov
or
scas
sbb
sti
aam
sub
mov
xchg
push
aam
lds
sub
mov
and
or
xchg
das
inc
dec
xlat
test
icebp
enter
lea
cld
mov
fucom
dec
mov
les
call
push
pop
dec
movsb
push
loope
mov
pop
add
add
adc
dec
subl
mov
pop
fbstp
push
cmp
mov
pop
data16
jno
repz
xchg
mov
pop
iret
fistl
fists
leave
aaa
sub
push
sbb
std
xchg
addr16
mov
fistpl
cmc
inc
push
mov
pop
mov
iret
jecxz
mov
pop
hlt
xlat
es
xlat
lea
je
in
rclb
add
add
add
jnp
add
adc
loope
jmp
mov
popf
push
cli
mov
sbb
mov
int
dec
hlt
mov
into
inc
rcll
mov
inc
mov
aad
in
gs
stc
rcl
adc
push
loope
xlat
cltd
xchg
lods
push
ret
outsl
icebp
mov
mov
fldenv
or
rcll
lods
repz
fisttpll
pop
mov
xlat
imul
pop
push
leave
out
out
scas
je
mov
cmpps
pop
push
pop
xchg
lods
sub
dec
fcmovnb
ret
jno
cmp
aad
mov
in
test
push
testl
jecxz
sbb
fistps
leave
out
adc
mov
pop
xchg
ja
aad
insl
adc
pop
loope
jne
mov
outsl
loopne
push
ja
xlat
daa
mov
addr16
lods
add
inc
push
filds
xchg
fbstp
orl
mov
cwtl
loope
test
and
adc
fistl
xchg
pop
push
stc
mov
fstpt
jmp
ss
dec
mov
test
loopne
test
mov
stos
lret
push
stc
jle
sub
dec
js
call
mov
mov
nop
icebp
test
push
addr16
js
jmp
xchg
push
movsl
sub
std
fwait
out
nop
nop
out
mov
push
pop
stc
test
cmp
ljmp
icebp
lahf
fsts
movsl
cmp
adc
jb
xchg
mov
in
out
cltd
in
test
sahf
push
adc
jle
pop
xlat
scas
mov
push
push
stc
in
xchg
out
popf
cmc
icebp
movsl
xlat
add
sbb
mov
enter
fistpll
fstpl
ret
imul
jb
daa
sti
je
cmove
std
out
pop
mov
sbb
test
inc
inc
pop
dec
fidivl
jg
pusha
sbb
adc
jmp
sub
mov
dec
cmp
ja
xchg
pop
xchg
int3
mov
and
xlat
in
mov
ret
mov
mov
ret
out
jg
movsl
mov
shl
fldt
loope
xchg
jg
in
inc
stc
outsl
bound
shl
cld
std
mov
fwait
movl
xlat
movsb
pop
stos
shlb
loope
movsl
imul
mov
inc
in
pop
fldenv
sbb
loope
lahf
pop
adcl
xchg
fwait
lcall
pop
test
andl
jmp
push
mov
mov
popf
xchg
in
out
fwait
mov
inc
cli
cmc
fwait
lea
daa
pop
rcll
repz
push
push
in
mov
leave
fcomps
jmp
jl
into
cltd
xor
sub
aam
clc
jg
cmp
inc
xor
stc
stos
cmp
cmpsl
shrl
andb
pop
xchg
sbb
add
test
outsb
sbb
aas
enter
inc
out
jp
inc
mov
fistpl
pop
dec
pop
mov
inc
bnd
dec
ret
icebp
inc
je
jge
pusha
inc
stos
fs
fists
mov
rcll
jnp
loope
dec
sbb
cmc
popf
add
fcmovu
jb
lods
repnz
cmc
negl
imul
pop
lea
addr16
sbb
mov
icebp
sbb
pop
fwait
mov
push
mov
outsl
in
shrb
sub
das
test
sub
test
out
xchg
dec
sub
popf
add
mov
pop
mov
mov
mov
aaa
popf
xchg
push
mov
sbb
insb
aaa
inc
fnstsw
fwait
movsl
inc
push
pop
pusha
filds
lock
sarb
subl
rcrl
and
imul
mov
stc
arpl
filds
icebp
sub
fbstp
push
repz
test
inc
repz
data16
pop
icebp
xchg
scas
adc
mov
mov
notl
and
rcl
mov
imul
loopne
ja
push
icebp
xchg
jecxz
test
pop
and
ret
addr16
scas
stc
stos
xor
jb
cmp
cmp
jnp
int3
or
xlat
stc
imul
daa
dec
fwait
dec
mov
aaa
jge
jmp
mov
out
hlt
iret
cmpsl
mov
dec
out
sar
add
sti
jnp
push
jae
xlat
aam
test
decb
xchg
cmc
lock
mov
lock
mov
not
push
xor
shlb
fs
mov
pop
jbe
cmpsl
pushl
push
jecxz
cmpsl
xchg
pop
and
jl
cmp
jne
xchg
leave
lcall
cmp
clc
test
mov
inc
pop
adc
jg
rcll
jae
sbbl
add
imul
mov
jge
adc
cmp
xchg
mov
push
leave
cmpsb
fdivs
cs
push
test
pop
ds
lods
imul
inc
dec
cmpsb
fldl
push
insl
jmp
fnstcw
icebp
inc
in
pop
or
mov
jae
mov
sarb
sysenter
sbb
dec
xchg
cli
push
xlat
or
push
mov
sub
mov
icebp
pop
out
xchg
bswap
xchg
sti
dec
cld
pop
xchg
shll
lock
lret
jns
xlat
xlat
jne
jb
jno
es
dec
movsb
jle
mov
inc
es
fcos
adc
ds
cmpsl
cli
lcall
leave
out
insb
movsb
mov
test
mov
cmp
add
enter
inc
cmp
fistpl
inc
xor
mov
into
mov
jo
mov
xlat
imul
inc
sub
and
jle
xchg
mov
ss
adc
adc
fcomi
or
xchg
push
lcall
mov
out
lret
sbb
pop
xor
mov
push
push
jns
push
les
or
xchg
add
icebp
lret
mov
mov
adc
insl
sbb
add
and
adc
les
fsub
pop
es
fwait
dec
jmp
sbb
sub
pop
jmp
dec
xchg
dec
mov
mov
sbb
std
pop
cmpl
jns
cmp
sbb
lea
test
adc
lods
roll
dec
mov
dec
cltd
insl
dec
mov
jl
popa
inc
dec
lcall
cmp
testl
push
ret
dec
rcrb
jmp
or
in
das
int3
push
rol
and
fstpl
mov
jle
lods
repz
lcall
and
push
add
inc
out
fcomps
scas
mov
mov
dec
icebp
popf
pop
lock
cmp
xchg
mov
inc
fistl
lahf
ds
ficoms
divl
in
adc
and
repnz
pop
jne
cli
in
fdivs
or
aam
jge
lcall
jo
dec
imul
pop
adc
out
loopne
fwait
cmp
sub
xor
cli
stos
mov
daa
lret
mov
cs
sbb
ret
das
aaa
fwait
icebp
mov
xchg
cli
shll
lcall
lods
adc
out
sbb
inc
mov
adc
cmc
adc
scas
lcall
inc
cmc
shl
es
lahf
insl
mov
cmp
lea
mov
aad
cmpsl
dec
out
ljmp
and
pop
push
iret
sti
pushf
jno
frstpm(287
cmpsl
fiaddl
fcmovnbe
stc
fldl
insl
popf
iret
sahf
mov
sub
ss
push
imul
pop
or
xor
addl
mov
lock
shll
insb
adc
paddq
bound
jmp
rcrb
popf
pop
jnp
jnp
sbbb
mov
stos
mov
dec
inc
js
sbb
bound
sub
jb
and
lock
rclb
inc
xchg
inc
and
xlat
ja
repz
pop
jl
or
stc
cli
push
sbb
fisttpll
jl
mov
sub
adc
dec
ret
dec
repz
fisubs
scas
insl
fisttpll
test
pop
mov
xchg
cmp
xchg
or
icebp
rol
pop
push
fcoml
push
pop
dec
out
stc
lahf
lret
sub
int
test
fdiv
or
mov
subb
fcmove
mov
aad
add
dec
insb
fstpt
add
dec
push
xchg
push
aaa
ds
sub
xchg
repz
dec
js
pop
jae
aaa
aad
jno
jns
pop
or
mov
sub
jae
cld
push
add
xchg
test
dec
add
xchg
fists
jae
pop
sbb
xchg
mov
pop
jne
arpl
stos
push
js
mov
mov
sbb
shll
stc
cli
cmp
xor
paddw
mov
das
mov
sub
repnz
icebp
fstps
push
loope
lds
fdivs
dec
or
sub
mov
jl
or
mov
fbstp
rcll
push
adc
push
inc
aam
cmp
shll
mov
icebp
pop
aaa
jge
es
xchg
jecxz
repnz
rclb
xor
dec
ret
cmpsl
pop
adc
or
test
loop
fst
scas
dec
xchg
jbe
mov
add
mov
jnp
int
fidivs
sub
outsb
scas
or
push
jnp
xor
inc
popl
pop
fsubrs
mov
out
popl
mov
adc
fisttpll
dec
cwtl
in
imul
jno
inc
xchg
scas
cwtl
sbb
popf
mov
lods
ret
sub
lea
xchg
cli
mov
das
adc
daa
ljmp
cmc
xchg
jmp
cli
pop
xlat
mov
out
dec
cli
adc
sub
repnz
inc
je
inc
mov
imul
nop
jg
aad
nop
cmp
cmp
add
xlat
xor
mov
inc
dec
sub
sub
repnz
imul
rol
fstpt
sub
inc
adc
push
dec
mov
aad
aad
xlat
adc
sub
pop
fdivp
and
fwait
jbe
cmpl
sub
sbb
clc
stos
into
lods
dec
leave
enter
pop
pop
mov
xchg
and
cltd
lcall
push
icebp
dec
out
inc
test
outsb
repz
shll
popf
sarl
pop
stc
xchg
sarl
leave
pop
cmp
lret
jo
mov
jg
push
mov
imul
les
icebp
sbb
jl
jb
sub
lcall
xchg
movsb
pop
sub
aad
push
test
rcl
adc
xor
mov
cwtl
ret
repz
xor
jge
dec
push
inc
jns
and
imul
dec
in
inc
pop
xchg
incb
test
imul
xlat
pop
aad
ret
sub
mov
mov
mov
clc
aad
fcmovnbe
push
jbe
int
int
pop
mov
push
inc
into
imull
xlat
jmp
pop
ja
decb
fst
inc
les
add
mov
sub
mov
xchg
jae
mov
out
icebp
add
pop
adcb
mov
sub
cltd
lea
pushf
rcrb
out
xor
std
push
jne
adc
movsbl
dec
or
stc
cmc
jne
js
fists
lret
mov
aaa
fdivs
dec
rcr
mov
js
das
push
xchg
inc
push
repnz
fcmovu
xchg
sbb
movsl
mov
sti
or
push
cld
lahf
mov
fnstenv
mov
fisttpll
nop
test
add
fwait
mov
mov
xor
mov
inc
add
fidivrl
cmpsl
adc
lret
jl
cmp
mov
add
std
lahf
xchg
loope
jl
inc
mov
mov
push
and
push
cmc
push
mov
add
jp
xlat
divb
jmp
push
mov
fwait
lret
xor
test
ss
js
dec
push
ds
dec
mov
lahf
movsl
jmp
stos
hlt
sbb
push
pop
adc
outsb
repnz
jecxz
push
dec
lret
push
jge
or
imull
je
lds
idivb
jp
repnz
iret
pop
test
jl
mov
loopne
add
sbb
lds
push
aam
cmp
sub
mov
test
test
pop
mov
push
cmpsl
inc
cmc
sbb
dec
in
mov
cmpsl
call
dec
jg
mov
inc
clc
sub
andl
jb
ffreep
in
add
fistl
and
dec
sbb
int3
bnd
movsb
xchg
sahf
pop
or
stos
jnp
add
sbb
pop
mov
rcl
icebp
je
xor
adc
sub
insb
push
inc
fldl
cmp
sbb
nop
push
jmp
repnz
ss
les
xchg
scas
xchg
jae
notl
aaa
pop
inc
pop
adc
and
mov
clc
push
mov
inc
scas
vunpcklps
testl
pop
push
aam
jne
push
xchg
test
bound
sti
fcmove
popf
pop
dec
in
push
push
imul
xchg
adc
mov
scas
pop
adc
and
mov
fdivs
mul
sub
stc
jne
xor
cli
pop
or
xchg
add
incl
outsb
xchg
subb
mov
fstpt
cmp
lahf
das
mov
xor
lea
push
pop
int
pop
add
jp
cmpsl
xchg
sbb
mov
cli
jmp
in
ja
cmp
jl
xchg
les
cmp
orl
cmpsl
insl
out
xor
push
scas
pop
sub
xlat
mov
mov
mov
outsl
jo
rcll
icebp
rclb
das
loop
shrb
rcr
xchg
outsl
clc
ret
cltd
dec
lret
movsb
inc
cwtl
sti
pop
jmp
icebp
sarl
xlat
lret
pop
xchg
daa
inc
xchg
jge
sbb
sub
cmpsb
and
mov
dec
movsl
repnz
cmp
sbb
mov
push
sub
jl
mov
dec
iret
mov
imul
xchg
mull
fwait
lret
rcl
sbb
int
stos
mov
aaa
outsl
outsb
push
push
mov
pop
rcl
pop
setl
int3
rcll
push
cmp
std
jb
es
xlat
insl
notb
aam
subb
es
in
aaa
mov
int3
or
mov
and
xchg
adc
stc
inc
xchg
rcll
andb
xchg
inc
xlat
idivb
imul
imul
cmp
lock
adc
or
pop
ret
mov
dec
rolb
lds
jp
pop
fidivl
fwait
mov
lahf
pop
test
adc
sbb
addl
cmp
pop
in
push
outsl
ret
je
mov
frstor
adc
push
icebp
jno
lahf
adc
dec
fisubl
in
aad
popf
test
or
ret
cli
lret
dec
repnz
xchg
gs
inc
push
movsl
lahf
fwait
stos
in
pop
xor
inc
xor
mov
sub
out
es
pop
stos
jne
lods
push
inc
sub
fstps
fwait
xchg
jne
imul
jge
in
mov
adc
ret
in
cwtl
or
push
jg
leave
ret
push
popf
fnstenv
jecxz
jle
mov
mov
icebp
cld
inc
inc
shrb
add
mov
rcr
cld
xchg
aaa
pop
sbb
xlat
or
push
daa
push
adcb
in
cmpsl
ret
aas
jg
mov
jbe
ljmp
adc
push
rcll
popa
and
mov
push
inc
jae
imul
lds
cmc
insb
clc
jl
leave
imul
cwtl
push
push
xchg
lret
jne
ret
adc
sbb
mov
sub
push
jl,pt
pop
pop
adc
sub
fwait
aam
fucomi
cld
mov
xchg
loopne
jne
push
sbb
add
cs
lock
push
mov
out
cmp
je
push
ljmp
rcll
movsl
xchg
icebp
lret
aad
cmp
rcl
mov
mov
je
and
rcll
xchg
add
mov
je
cmpsb
cli
not
enter
mov
dec
push
push
sub
and
fstp
fsubrs
shlb
rorb
jmp
andb
adc
les
push
inc
jmp
and
jb
jae
adc
out
int
insl
les
sub
cltd
cmp
pop
dec
sub
out
lds
dec
dec
sti
and
push
scas
xchg
push
int3
dec
or
adc
xchg
push
sti
cli
jnp
xor
jmp
mov
adc
jge
mov
fistpl
mov
mov
and
in
jne
repz
lea
jo
mov
scas
aam
sub
mov
scas
pop
push
push
cmp
pop
pop
movsl
push
mov
mov
push
dec
sub
fcmovbe
es
int
imul
or
pop
xor
jl
xchg
cmc
stc
mov
hlt
push
push
jo
rcll
push
jbe
sbb
fldl
dec
pop
jl
sbbl
mov
cwtl
flds
loop
cmp
lea
sbb
mov
xor
cmp
push
loope
pop
adc
je
scas
idiv
push
into
push
lcall
dec
xlat
adc
or
repz
jne
jne
cmc
push
int
or
sub
xlat
dec
call
mov
addr16
xor
aaa
inc
gs
mov
imul
mov
inc
aas
sarl
aaa
dec
sub
popf
stc
xchg
or
push
inc
dec
push
sbb
pop
mov
inc
sub
fcomps
adc
dec
add
jg
xchg
xor
out
out
bound
push
mov
mov
jno
fisttpll
xchg
pusha
mov
dec
mov
lock
inc
jo
mov
mov
inc
cld
stc
mov
das
fbstp
cli
dec
push
leave
xor
add
test
lods
int
ljmp
aad
pop
xchg
push
inc
sub
shlb
ret
mov
addb
fcoml
ja
test
add
ljmp
lds
ret
cmp
cmpsl
cmpsb
lods
add
arpl
int
pusha
mov
mov
sbb
mov
jg
rclb
mov
push
cmp
ret
jmp
insb
jp
loop
popa
jno
xchg
pushf
fcomi
mov
mov
inc
mov
repnz
fmuls
jbe
fists
cmp
sbb
inc
lods
adc
out
cld
sahf
lea
loop
jmp
dec
push
mov
popw
negl
jmp
outsb
adc
pop
jl
cmpsb
imul
xchg
mov
add
ljmp
xchg
xchg
pop
and
stc
je
nop
jecxz
sub
dec
sbb
pop
leave
or
xchg
add
inc
out
setp
js
xchg
or
lahf
pop
sbb
jmp
mov
fs
lea
fld
fisubs
movsl
arpl
imulb
push
or
mov
cmpsl
inc
rcll
lock
push
cmp
mov
jmp
mov
dec
insl
jl
and
lret
xor
mov
imul
dec
dec
shll
shlb
or
fstpt
push
pop
hlt
shll
xlat
mov
testb
sub
adc
mov
jno
cmp
hlt
jmp
or
repnz
xchg
das
notb
mov
xor
push
push
icebp
jp
call
scas
xchg
frstor
fld
cmpsb
inc
or
idivb
mov
pop
dec
mov
push
cs
divb
cmp
pop
ret
ret
cld
testb
xlat
jbe
lods
aam
pop
jge
ds
push
cltd
sti
inc
rcll
sbb
jg
add
lcall
fistpl
repnz
popa
dec
dec
outsb
dec
repz
das
negl
push
test
and
cltd
sbb
in
jne
add
mov
and
mov
ret
mov
jmp
outsb
xchg
insb
cmpsl
add
fmulp
in
not
into
cmpsl
xchg
mov
inc
pop
test
xchg
mov
fsubs
push
jns
inc
sti
jle
jo
pop
push
insl
and
add
jmp
int
scas
sbb
mov
xchg
movsb
sbb
shrl
xchg
out
rolb
lret
mov
in
mov
filds
std
lock
cli
aaa
int
ja
pop
out
push
xor
in
inc
jae
mov
jmp
lea
jae
es
cld
sar
and
sub
pop
int
aad
fnstenv
lds
stc
aad
dec
xchg
js
xor
adc
dec
mov
mov
mov
xorb
push
xchg
mov
mov
mov
adc
pop
fcomps
jne
cltd
jae
and
imul
push
icebp
jae
xchg
jns
stos
movsl
adc
roll
dec
jo
hlt
pusha
test
shl
push
xchg
iret
push
imul
pop
xchg
jp
jae
imul
xor
fisubs
jb
push
iret
test
rcr
ret
dec
mov
fstpt
pusha
in
cmpsl
adc
sbb
sbb
pusha
mov
fndisi(8087
imul
mov
nop
cmp
sbb
and
cmp
or
sbb
push
or
ja
repnz
jnp
xlat
movl
arpl
fsubs
fistps
sbb
xchg
xor
gs
sub
adc
leave
cmpsl
mov
outsb
push
sbb
mov
and
and
scas
mov
loopne
pop
ret
std
jnp
mov
push
jns
and
test
xchg
xchg
daa
push
ljmp
es
mov
xor
es
add
jp
scas
adc
or
out
in
xchg
xchg
scas
xorb
scas
jbe
lret
jle
ret
mov
icebp
jle
lds
rorb
fnsave
scas
push
insl
fld
imulb
mov
movsl
data16
sub
fistpl
stos
xchg
js
cmp
cltd
js
and
mov
sbb
hlt
cmpsl
or
imul
mov
bound
ds
insb
sub
add
lret
in
mov
lods
pop
pop
int
sarb
mov
outsb
orl
pop
mov
mov
sub
addr16
sub
xchg
add
cmp
sub
loop
mov
test
sub
call
in
inc
push
push
arpl
jnp
in
mov
or
mov
xchg
sbb
pop
ss
mov
push
sbb
ds
mov
fcomip
cmpsb
lret
scas
xchg
jl
test
fdivrl
aam
cmc
test
fnstcw
xchg
cmp
fldt
jle
fnstcw
inc
push
lahf
call
lahf
sbb
xor
fs
cmp
test
cs
lret
jg
inc
dec
xor
jge
into
sub
lahf
inc
pop
xchg
and
inc
jno
mov
pop
out
dec
push
sbb
jnp
fsts
pop
loope
sbb
ret
jns
incl
mov
sahf
fisubs
lcall
xchg
add
ret
dec
shrb
jno
fidivl
push
int3
inc
movsl
mov
jb
lods
xchg
push
mov
cmpsl
stos
insb
jg
loop
jmp
and
jecxz
test
clc
jbe
xor
filds
sbb
scas
cld
dec
jo
es
and
rcr
inc
sub
or
repnz
jmp
fdivrs
lock
inc
cmpsb
in
ja
and
ja
mov
lret
ret
hlt
and
sarl
lock
push
inc
shll
imulb
stos
repz
sub
xchg
repnz
insb
mov
lods
fistl
sub
rcr
flds
mov
jge
aad
xor
cmp
sti
jp
xor
xchg
or
insl
fcompl
mov
sbb
test
lcall
mov
mov
stos
jmp
fbld
movb
pop
lret
flds
mov
cmpsl
shrl
ficomps
sbb
test
addl
hlt
pop
lods
or
hlt
xchg
ljmp
pop
clc
clc
sbb
sbb
fucomi
or
dec
cmp
ljmp
fadd
mov
mov
cs
ret
sub
movsb
scas
icebp
shl
test
test
sbb
adc
mov
lods
jecxz
jmp
fsub
push
test
mov
int3
ret
cli
in
loope
jno
jne
ret
mov
jne
mov
push
outsb
push
sbb
sbb
sub
out
std
mov
mov
repnz
jmp
xor
adc
sbb
adc
cmc
popa
xchg
fists
leave
jbe
movsb
lcall
adc
rorl
push
inc
clc
push
pop
imul
jmp
push
cmc
mov
sub
or
fldcw
dec
inc
cmp
popl
cwtl
adc
pop
lahf
dec
in
dec
cmpsl
jmp
and
mov
and
lea
sub
dec
jbe
sbb
aad
sar
ror
clc
cli
mul
fcmovbe
mov
int
daa
mov
add
bnd
adcl
nop
pop
adc
add
xor
test
incl
das
xor
fadds
xchg
cmp
jge
push
fistpl
int
mov
ret
inc
jns
cmp
popa
inc
jp
lods
std
jg
jbe
inc
fwait
sahf
mov
rcll
add
push
addl
push
popf
fwait
call
sub
sbb
test
fwait
inc
imulb
scas
aad
idivl
test
adc
dec
add
stos
pop
pop
std
call
cwtl
pop
pop
sub
push
push
daa
jns
scas
xor
cmp
pop
push
inc
cmp
out
jge
jb
lahf
mov
fwait
psubb
mov
or
fcoms
dec
or
push
inc
and
pop
movsl
jae
mov
test
shrb
cmpsl
aam
inc
or
push
test
add
rclb
jnp
les
ret
inc
sbb
repnz
sahf
in
fldenv
sbb
push
mov
inc
movsl
sbb
sti
fcmovnbe
add
fwait
test
cmp
stos
and
lods
inc
stc
int3
or
push
adc
loopne
jno
fistps
mov
sarl
outsb
scas
mov
icebp
jl
pop
inc
jae
jge
stc
shll
lret
cmp
shll
push
cmp
mov
fadds
es
mov
jl
push
jnp
xchg
cmpsb
sbb
push
lahf
cmpsb
std
and
fiaddl
mov
add
mov
lds
imul
xor
ret
xor
mov
and
mov
imul
cmp
fistl
xchg
mov
lret
mov
pop
dec
testl
xchg
repnz
and
cmp
xchg
dec
cmp
jecxz
addr16
fbstp
and
ret
cltd
rol
xlat
ret
je
mov
pop
stos
mov
jne
mov
lcall
nop
add
cltd
mov
push
es
inc
xchg
cwtl
int
mov
xchg
outsb
fucom
adc
inc
nop
les
mov
mov
xchg
fstl
push
ljmp
jmp
pop
pop
lock
add
inc
inc
adc
xchg
bound
lods
mov
pop
loopne
ret
jbe
push
js
roll
add
fnsave
push
ret
fxtract
dec
or
pop
or
inc
jbe
cmpsb
xchg
popf
lods
loope
ret
fiaddl
notl
jb
mov
fdivrl
adc
sub
test
test
jno
cltd
push
ret
mov
icebp
mov
cmpsl
scas
mov
testb
popf
adc
xor
add
inc
jnp
add
lods
fdivr
out
or
fdivrp
sub
xor
jns
fldenv
inc
aam
pop
fdivrp
push
xchg
push
les
shrb
or
out
mov
mov
pushf
cld
rcll
cmc
notl
fcom
dec
dec
jmp
std
adc
push
mov
lock
xor
jns
repnz
push
rclb
shl
pop
stc
divl
ret
imul
pop
mov
push
dec
in
xor
xchg
dec
mov
out
pop
scas
xlat
sbb
dec
xor
cmp
fsubrs
jno
dec
xlat
fnstcw
dec
es
rorl
popa
hlt
sti
ffreep
xchg
push
stos
cmp
mov
lods
add
mov
loope
mov
sub
lock
mov
add
pop
fstp
lods
sbb
out
rcrl
mov
jecxz
out
mov
mov
jmp
lods
ret
add
xchg
xor
in
xchg
sbb
mov
jl
xor
adc
imul
push
fistps
mov
ret
adc
stc
stos
xlat
cli
adc
ja
sbb
mov
cmpsl
fs
shl
and
jno
cmp
ja
ja
pop
out
aaa
mov
hlt
push
sub
mov
sbb
sub
cld
jo
pop
in
pop
cmp
mov
faddl
inc
je
mov
cmp
inc
add
testl
inc
hlt
ret
in
insb
pop
dec
sub
lods
or
mov
mov
hlt
stos
lods
shrb
xlat
jle
cmp
fmull
hlt
imull
xchg
mov
push
fsubr
sub
mov
mov
push
adc
jbe
xorl
mov
into
rcr
jmp
test
hlt
test
ret
jnp
sub
dec
mov
shl
mov
mov
and
inc
or
push
push
push
in
ret
enter
cmpsb
ret
mov
xor
fadd
div
inc
testb
not
jle
xchg
add
fmuls
push
pop
jo
or
or
inc
xor
fcomi
flds
jb
inc
xor
js
notb
pop
rcl
repnz
out
mov
shll
add
pop
insb
jle
loop
sarl
sti
mov
bound
push
adc
ljmp
inc
xchg
dec
jb
insb
call
pop
push
push
cmc
mov
mov
fwait
icebp
ret
cmp
adc
cmpl
test
fs
call
fsubrs
or
incl
xor
push
inc
add
cltd
loopne
pop
cld
mov
jge
or
fisubrl
das
push
adc
int3
and
mov
ret
dec
icebp
xchg
sub
mov
cmpsw
pop
in
and
pop
stc
push
dec
cmpsl
xchg
jb
repz
ja
fwait
jno
pop
cli
sti
xchg
pop
mov
cmpsb
insl
scas
inc
ljmp
push
and
sub
fistpl
sbb
dec
jns
inc
cwtl
lods
mov
add
stc
mov
add
icebp
dec
mov
pop
mov
mov
arpl
inc
rcl
iret
mov
mov
arpl
dec
fcmovb
pop
inc
es
loope
sub
aad
fsubl
pusha
cwtl
stos
arpl
xchg
out
mov
jns
xor
sub
test
sti
pop
call
incl
push
mov
insb
fsubs
mov
aad
dec
dec
pop
sbb
push
xchg
insl
push
out
push
push
add
fdivs
into
cmp
pop
inc
std
add
pop
xchg
insb
inc
sub
mov
shll
and
movsl
ret
and
in
sti
lcall
lods
arpl
repz
leave
rol
xchg
aad
je
data16
roll
xor
imul
jge
xor
outsb
cmpsl
dec
xor
inc
stos
sub
xlat
jae
cmp
and
out
xchg
cmpsl
sub
dec
in
and
loope
mul
push
insb
mov
mov
jmp
mov
scas
arpl
xchg
mov
fmul
popl
cmpb
cwtl
loope
push
ret
or
or
into
es
mov
sbb
jmp
jb
sti
pop
cmpsl
scas
test
pop
sub
mov
roll
cmp
loopne
pop
out
call
ss
mov
sub
or
mov
dec
div
sub
push
loopne
orb
lods
fwait
or
xor
testb
imul
xchg
lret
and
cs
es
push
or
cmp
fildl
shll
and
rorl
mov
out
in
pop
and
jbe
loopne
cmpsl
add
iret
mov
mov
arpl
xlat
call
jle
aam
rcll
mov
push
int3
inc
sub
insl
shl
ficoms
out
push
subl
push
scas
mov
adc
imul
inc
sub
adc
xchg
push
push
adc
push
jne
pop
in
rcll
cmpsl
jns
lahf
popf
scas
fiadds
mov
iret
pop
xchg
sbb
xchg
jmp
xchg
stos
sar
push
aad
movsb
mov
das
lret
push
mov
pop
mov
mov
pop
sub
mov
mov
sub
inc
xor
push
iret
pop
test
cltd
sar
inc
imul
int
insl
push
loopne
and
xchg
jge
jge
xor
into
push
jae
dec
adc
sub
mov
pusha
call
gs
inc
into
xchg
inc
dec
cs
inc
add
jno
es
cmpb
push
pop
xor
xlat
push
mov
fisubl
push
mov
push
sbb
push
sarb
jns
aad
imul
add
pusha
jmp
lods
cmp
mov
jecxz
push
imull
outsb
xlat
push
pop
dec
mov
bts
int3
cmp
fidivrl
mov
mov
lcall
sub
jge
xchg
leave
cmc
push
add
mov
mov
xlat
aad
fbld
incb
popf
inc
jge
mov
jp
mov
sbb
cmp
rorb
outsb
push
adc
mov
and
add
es
ds
std
sbb
clc
mov
cltd
pop
sbb
icebp
cmpsb
cmp
or
lahf
pop
dec
repz
xchg
jno
fcmovb
mov
push
pop
dec
incl
iret
mov
outsb
in
outsb
fldcw
out
add
ficomps
pop
lock
lahf
std
mov
inc
out
cmp
outsb
into
insl
xchg
mov
mov
xchg
mov
pop
je
rcll
xor
fisubrs
aad
mov
xchg
sarl
loope
test
fwait
cmova
fisubs
fistpll
xchg
int3
repnz
xchg
inc
xlat
xchg
mov
std
inc
call
sub
jns
addr16
inc
sub
daa
push
icebp
fcompl
jb
xchg
mov
mov
idiv
add
cli
add
inc
leave
ret
inc
pusha
aas
das
jb
push
aam
and
cmc
loopne
aad
aad
mov
popa
ret
aad
aas
int
fsts
mov
lods
aas
adc
or
cmp
loop
and
ret
push
pop
les
or
cmpsl
ret
es
movsb
push
xor
xchg
mov
fidivrs
test
scas
mov
fists
push
mov
out
repz
lcall
lds
dec
mov
push
pop
stos
sbb
sbb
pop
adcl
xlat
fstpl
fwait
adc
icebp
das
cs
fcoml
sbb
jp
push
pop
or
mov
pop
cwtl
xchg
sub
iret
mov
mov
fiadds
pop
inc
repnz
in
pusha
push
lods
es
sar
xlat
xchg
inc
mov
mov
shll
add
xchg
pop
mov
adc
pushf
jbe
lods
mov
cmp
das
fcomps
rol
int3
cmp
pop
insl
fmul
inc
ja
mov
aam
ds
or
popf
dec
and
les
mov
add
push
loopne
ret
pop
in
push
ret
mov
movsl
mov
iret
mov
add
cmp
aad
outsl
outsl
ret
cmp
movsl
je
mov
push
pop
xchg
fdivs
mov
or
cld
mov
scas
cmp
adc
iret
add
mov
scas
cld
or
insb
inc
xchg
sbb
xor
stos
fwait
je
mov
scas
mov
xchg
in
fisubrl
cmc
hlt
xor
fisubrs
mov
push
pop
xchg
mov
fstpl
pop
insb
jle
xchg
pop
jns
fmuls
hlt
movsb
ss
push
fistpll
fnsave
push
rorl
fwait
je
shll
push
mov
pop
mov
cmc
scas
je
and
and
pusha
lock
stos
mov
adc
xor
pop
cli
test
pop
popa
xchg
mov
push
mov
jb
adc
xchg
xchg
xorl
nop
insl
repnz
movsb
jmp
xchg
out
in
jnp
ja
mov
nop
jns
mov
mov
jbe
or
leave
jae
js
fcomip
stos
es
sti
sbb
cs
into
aaa
ret
clc
fcmovnb
push
pop
ss
dec
and
les
cmc
jae
mov
fldcw
xchg
les
xor
mov
jmp
add
jmp
add
fwait
add
inc
nop
jb
fcmovnu
sbb
mov
mov
mov
into
lret
or
jo
icebp
mov
xor
or
inc
mov
rcll
stc
ja
mov
insl
xor
enter
incb
mov
mov
insb
inc
stc
flds
loopne
cmovb
pop
sbb
sahf
xlat
les
jg
dec
rolb
xchg
xchg
dec
pop
or
hlt
fistpl
fmul
xor
hlt
stos
ret
sbb
dec
jae
lock
rcrl
fcmovnu
xor
loope
rcll
add
push
jne
mov
sti
jmp
sbb
orb
leave
aad
fstp
int
jmp
sti
fcmovnu
mov
pop
fidivs
push
mov
hlt
xor
inc
imul
lcall
push
push
sub
repnz
sti
lea
pop
xchg
xchg
popl
or
pusha
lcall
mov
mov
imul
sub
fnsave
jbe
cs
mov
xor
xchg
push
stc
ss
ljmp
mov
lahf
sub
push
jl
pusha
leave
mov
daa
aad
gs
inc
push
mov
cmp
fisttpl
outsb
into
inc
idiv
mov
jb
int
cmp
enter
ss
add
inc
lods
movl
faddl
sbb
or
dec
imul
mov
xchg
or
mov
fsubrs
sbb
xlat
bound
and
cmp
icebp
sbb
addr16
jg
sti
sbb
andb
inc
js
cmp
cs
mov
lcall
outsb
fsubr
and
fcmove
xorb
repnz
cli
push
xchg
lret
cmp
out
ret
push
cmovns
mov
sbb
mov
add
xor
dec
aaa
dec
ret
test
pop
repnz
out
jmp
imul
adc
jp
ret
mov
arpl
into
or
xchg
cmpsb
push
push
push
xchg
das
adc
push
jg
icebp
rcll
xchg
xor
roll
inc
pop
mov
inc
xor
test
and
or
out
inc
jl
jno
fldt
cmpsl
push
xor
adc
push
movsb
lret
xor
or
mov
inc
loopne
push
pop
xor
nop
shlb
les
xchg
fs
pop
into
sub
jbe
mov
fimull
or
fildll
test
repz
jmp
cmpsl
inc
arpl
or
faddp
push
lds
movsb
cmpb
inc
mov
inc
movsb
pushf
push
mov
fst
ret
mov
pop
dec
or
sub
push
imulb
es
pop
cmp
es
jecxz
push
cmpsl
lret
fmull
dec
ljmp
mov
push
jl
sub
int
repz
daa
shrb
cmp
and
cmp
mov
nop
incb
pop
jbe
mov
addr16
cli
call
xchg
xchg
cmp
call
cld
jge
test
icebp
test
push
push
mov
adc
cwtl
lods
in
idivl
pop
pop
popl
push
in
rolb
shrl
or
mov
xchg
mov
jb
jbe
add
pop
in
insl
pop
icebp
cmc
repnz
out
sub
push
lods
roll
xlat
call
or
jno
and
ds
inc
loopne
dec
jno
jmp
cli
fiaddl
or
xlat
int3
int
sbb
pusha
lcall
mov
xlat
test
or
fisubs
pop
shrl
pop
lret
mov
or
cli
push
mov
xlat
mov
jmp
mov
movsl
jo
lods
add
xorb
mov
push
push
mov
cmp
jno
xchg
addl
lret
insl
into
pop
mov
sbbl
sti
movsl
inc
jbe
shr
lds
sti
stos
lcall
fwait
mov
jmp
test
sbb
pop
out
insl
nop
sahf
imul
adc
jmp
neg
push
push
loope
fstp
rclb
xchg
mov
sbb
imul
cmp
mov
push
xchg
lahf
shll
push
inc
jge
lds
daa
jne
sti
or
loope
mov
aad
iret
jle
jl
fcmovnbe
xchg
pop
push
scas
sti
lds
push
repnz
mov
jnp
testl
shrb
hlt
pop
pop
aad
mov
lea
push
imul
mov
mov
rcll
xchg
out
sbb
mov
sahf
jo
loop
pop
inc
mov
pop
inc
sbb
xor
stos
ret
cli
mov
sbb
mov
lret
lds
mov
stos
arpl
fadds
add
add
xchg
jle
cmpsb
jecxz
pop
popf
icebp
xchg
fstl
sti
cmp
shrl
or
cs
fdiv
mov
xor
push
add
pop
scas
push
imul
stos
mov
jmp
lods
mov
sbbl
inc
movsb
cs
into
mov
inc
ror
or
inc
mov
cmpsl
imul
pop
rorb
sub
jp
dec
inc
sar
imul
sbbl
mov
mov
das
xlat
jae
fisubl
or
ret
leave
xorl
mov
fcomp
fidivl
repz
cli
aam
xchg
or
xchg
jecxz
daa
in
mov
rorb
mov
mov
data16
add
lea
sbb
adc
popf
push
fimull
mov
mov
stos
mov
mov
sub
cmp
mov
icebp
push
or
fcomps
push
inc
je
sub
xchg
push
lret
icebp
out
popf
or
mov
popf
pusha
pop
push
hlt
into
xchg
jmp
sarl
xchg
js
add
sbb
shll
mov
icebp
data16
cmpsb
aad
mov
mov
and
in
jno
rclb
xlat
loop
sbb
in
push
dec
pop
out
int
fisttps
dec
xchg
jmp
rol
mov
inc
daa
icebp
pusha
notl
fld
cmp
icebp
mov
movsb
stc
sbb
sti
rcr
mov
jae
pop
stos
fmul
xor
pop
and
and
lcall
push
xchg
lds
mov
adc
fistps
sbb
xchg
rorl
sub
test
jb
xlat
xlat
cmp
sbb
xchg
arpl
push
iret
pushf
mov
movsb
add
ljmp
pop
inc
xchg
add
cmp
jnp
out
push
lods
jae
and
jmp
fstpl
xchg
pusha
or
push
nop
push
rclb
pop
ror
sbb
aaa
pop
inc
lods
push
pop
pop
fists
fsubrs
push
add
mov
aad
sbb
adc
add
xlat
cltd
push
mov
test
test
shlb
test
fwait
pop
call
out
mov
ret
mov
push
sub
in
jns
xchg
xchg
add
arpl
push
lret
inc
stc
ljmp
hlt
in
imul
sub
jl
mov
arpl
push
enter
mov
sarl
push
mov
aas
adc
rorb
rorb
xlat
or
rcl
pop
pop
mov
test
add
test
loope
ja
mov
or
pop
or
xchg
and
or
pop
adcl
daa
mov
scas
or
fidivrs
mov
xchg
loopne
outsl
gs
ffree
stos
int
imul
push
lret
test
cli
iret
mov
aad
pop
inc
push
jl
xchg
loope
mov
lods
in
add
dec
int
push
hlt
xor
pop
xlat
stc
mov
pop
dec
or
push
imul
test
cmpsb
or
pushf
add
fnstenv
jmp
push
push
add
jge
arpl
mov
dec
scas
mov
cwtl
xchg
and
mov
popf
sub
mov
inc
sbb
add
inc
in
xor
test
aam
add
and
into
or
mov
jle
iret
add
jbe
das
pop
scas
mov
test
sbbb
dec
sti
stos
cmc
ljmp
subb
cs
leave
mov
stos
jae
movsl
fists
les
dec
inc
fadds
xchg
inc
xor
cmp
sbb
dec
xchg
pop
xor
imul
or
sti
jmp
insb
in
sub
pop
pop
cmp
push
mov
jno
jns
jns
jno
xor
dec
ret
call
dec
fdivs
mov
fnsave
hlt
xchg
xor
sub
loop
push
es
pusha
mov
xor
cltd
sarl
jmp
jmp
iret
dec
mov
mov
jge
push
ja
jno
xchg
fs
ds
jo
shlb
dec
daa
lock
inc
icebp
les
bound
pop
xchg
out
mulb
sub
add
shll
out
add
xchg
jae
repnz
enter
jnp
insb
xchg
popf
rolb
aas
call
xor
sub
out
movsl
add
aad
jns
insl
nop
fsubl
or
aaa
pop
sub
out
outsl
js
fwait
xchg
push
xchg
and
mov
xor
cmpsl
out
stc
repnz
imul
sbbl
call
cmp
bound
sub
lcall
inc
and
insb
pop
mov
aam
add
out
cmpsl
cmp
imul
mov
jbe
and
leave
cmpsl
sbb
pop
scas
jo
cmp
out
xor
dec
mov
movsb
sbbb
push
scas
icebp
aam
xchg
jo
xchg
jmp
sub
pop
add
shr
jl
or
cmp
mov
insb
and
mov
mov
jae
pop
jmp
lods
pop
inc
das
ss
aas
cli
fsubrs
cwtl
or
xchg
test
sbb
mov
sub
jae
repz
fistl
xchg
fmull
and
mov
stos
pop
leave
repz
push
push
icebp
movsb
std
cli
add
repz
rcl
mov
ja
daa
loope
repnz
in
mov
dec
subl
daa
xor
sbb
fnstenv
xchg
daa
or
loop
stos
imul
sbb
push
pushf
pop
xor
jb
xchg
jo
fldt
test
cmpsb
aas
cmp
dec
jnp
fwait
mov
outsb
jne
fadd
add
dec
inc
mov
xchg
sbb
sbb
lret
fcmove
push
mov
mov
xchg
lds
lods
xchg
adc
es
ficoml
pop
lds
xor
hlt
push
test
mov
ja
dec
pop
daa
push
jno
repnz
mov
jae
xor
out
pop
jg
addr16
std
movsb
pop
cmpsl
fidivs
fists
cmpxchg
arpl
std
push
es
fwait
xchg
mov
pop
push
cmpsl
test
test
out
sbb
and
sub
aad
cld
xchg
in
inc
stos
into
add
mov
xchg
icebp
pop
scas
sar
sti
pop
ret
pushf
xlat
push
adc
push
pushw
mov
cld
mov
rcr
out
mov
or
mov
inc
mov
lahf
imul
test
pop
or
jne
ret
fcomi
insl
cmpsl
test
in
in
icebp
xchg
mov
add
jl
pop
fcmovnu
jl
loope
repnz
adc
mov
cld
mov
pand
add
sti
mov
cmp
push
adc
xor
and
imul
das
dec
dec
mov
pop
mov
sti
lds
ficomps
movsl
es
fbld
incl
mov
out
sub
in
clc
inc
es
jbe
pop
cmp
into
mov
lcall
adc
mov
adc
cmpsl
or
xchg
mov
imul
push
xchg
and
cmpsl
cmp
or
cmp
cmpsb
pop
xor
in
xchg
leave
sbb
mov
or
dec
push
movsl
ret
negl
call
xlat
mov
outsb
cltd
or
in
fsubrs
loop
rorb
pop
ja
ficoml
cmp
inc
insb
ja
xor
fadd
push
mov
aad
aad
leave
sub
mov
pop
push
dec
cmp
sub
test
test
mov
cmp
les
cmpsl
sahf
fdiv
repnz
shll
and
fistl
cli
mov
lods
cmpl
je
iret
movb
inc
daa
push
push
ja
mov
lods
imul
mov
inc
pop
or
xor
push
jne
jp
rclb
jmp
xlat
sub
lcall
pushf
push
or
pop
outsb
ds
inc
jns
and
jecxz
mov
pop
mov
dec
or
sub
add
test
adc
ja
negl
int
cmpsl
push
pop
mov
lds
test
ja
fwait
repz
cmp
dec
ds
pop
cmpsl
adc
bound
inc
mov
xor
lods
pop
push
xor
ds
push
jmp
setno
and
pushf
movsl
lock
jmp
dec
xor
mov
cwtl
gs
test
push
cmpsl
je
mov
mov
inc
jmp
negb
pushf
pop
xor
add
cmpsb
inc
inc
daa
je
xor
mov
jo
push
mov
mov
aam
mov
shl
pop
inc
fsubr
cld
loope
jnp
pop
lods
ret
jp
sbb
lret
dec
sti
sub
shr
and
push
pop
es
lods
negb
ja
lods
jp
popf
xchg
add
jl
mov
or
lret
sub
sbb
xor
clc
push
sub
and
cmp
test
jge
pop
test
pop
push
mov
mov
push
ficompl
addl
add
xchg
aas
and
rolb
lret
xor
sbb
movsl
add
sbb
clc
nop
xor
stos
fstp
and
out
out
hlt
test
ret
fcmovne
or
mov
jmp
in
push
or
jnp
mov
add
xor
out
stos
jbe
cmpsl
add
imul
cmp
insb
sub
pop
lods
es
lcall
repnz
and
pop
pop
inc
sub
jmp
jnp
notb
sbb
mov
cmp
adc
ret
imul
pop
popa
call
pop
out
xor
lds
aam
stc
mov
pop
das
shll
scas
das
push
mov
cmpsl
mov
in
repz
add
inc
xor
push
pop
pop
jbe
mov
leave
sar
out
in
mov
or
lret
push
sbbl
push
push
mov
aas
shll
daa
mov
or
js
xchg
inc
imul
mov
xlat
fcmovbe
mov
rcr
inc
xchg
repnz
fwait
pop
xchg
sbb
cmp
sbb
testl
gs
fistpll
sti
jl
xchg
xchg
stos
clc
test
mov
and
cmpsb
xlat
push
loope
ret
xacquire
xchg
out
icebp
pop
lret
pop
adc
lods
sub
or
lcall
fwait
je
xchg
imul
ljmp
sbb
dec
imul
push
sbb
add
mov
stos
shrb
adc
mov
and
mov
add
in
enter
scas
jle
inc
mov
je
out
call
jg
xchg
imul
pop
pop
xchg
xchg
movsl
sbb
pushf
mov
mov
mov
fisttpl
push
xchg
cmp
stos
lods
jmp
jns
test
aaa
mov
aaa
fidivrl
out
push
jns
ret
int
into
lds
in
imul
pop
js
push
ret
lods
xchg
repz
sub
sub
pop
test
lods
es
xchg
inc
and
xlat
in
xchg
dec
or
mov
mov
imul
jp
out
notb
and
push
mull
jmp
dec
repnz
push
and
dec
jo
sub
js
inc
fsubrs
add
push
sub
mov
lcall
vmwrite
imul
xchg
cmpsb
fsubr
fsts
pop
mov
fisubl
js
out
shl
xchg
dec
jmp
repz
adc
popf
out
ss
jbe
xchg
push
mov
in
in
inc
jbe
cmp
xchg
fadds
pop
rclb
ret
les
cmpsb
push
cmp
push
loope
pop
stc
popf
loop
insb
cmp
aaa
inc
mov
mov
outsb
pop
lret
or
or
enter
cmpsl
icebp
cmp
repnz
inc
mov
dec
fstpt
sbb
pop
pop
add
jnp
mov
mov
inc
lods
out
fcmovb
cmp
push
push
cmpsb
lods
cmp
movl
jp
sahf
mov
ret
dec
loop
fisubrl
xchg
hlt
xchg
ret
jnp
inc
data16
ja
adc
mov
sbb
add
in
addr16
stc
add
mov
mov
push
sarb
jne
outsl
rol
addr16
clc
jo
shlb
repnz
js
test
pop
mov
sar
cltd
pop
mov
lahf
das
cmp
inc
popl
testl
cmc
shll
fstl
cmp
and
mov
add
or
sub
xor
jbe
lds
xchg
bound
xlat
jmp
lret
push
adc
push
mulb
fbld
lret
sar
lret
fxch
icebp
add
pop
cmp
into
inc
jno
xlat
repz
repz
int
push
push
xchg
dec
cmp
inc
testl
push
loop
ret
push
pop
aad
lret
dec
lods
repnz
push
pop
movsl
xlat
xor
scas
jne
cltd
fdivr
filds
push
xor
repnz
xchg
jo
fildl
mov
icebp
lahf
ljmp
ljmp
mov
gs
jns
inc
sbb
inc
fprem
pusha
sub
mov
ds
repz
xor
stos
mov
mov
das
shr
repnz
ja
sub
or
sub
pop
lret
xor
jle
decb
xlat
clc
icebp
or
cmpsl
sbb
dec
mov
cmpb
push
into
lock
xchg
add
jnp
jecxz
aaa
jmp
out
pop
cmp
add
xchg
add
mov
pop
mov
icebp
stos
pop
pop
add
test
xchg
fldt
xor
push
cld
xor
addb
popf
jmp
pop
mov
jl
mov
push
outsl
mov
adc
push
jbe
test
cmp
xchg
iret
inc
mov
flds
mov
fnsave
pop
mov
aad
mov
or
cmp
mov
frstor
fwait
jl
movsb
and
je
xchg
push
jecxz
jge
push
sbbb
push
ja
js
ficoml
mov
daa
shlb
push
cmovnp
add
call
testb
repz
push
aaa
inc
aas
shll
jae
mov
xor
sub
add
or
test
fsub
xlat
cmp
push
adc
fwait
mov
cvtps2pd
lods
mov
xchg
aad
lods
sti
sub
outsl
ret
stos
scas
sbb
cmp
mov
aam
hlt
and
xor
loop
pop
fisttpl
push
je
push
fsubs
add
rclb
dec
add
push
aad
and
pushf
adc
mov
xlat
test
movsb
mov
je
mov
loop
sub
cmp
jl
icebp
xchg
das
jmp
cmp
ds
push
inc
cmp
cmp
pop
lahf
insb
xchg
push
lcall
mov
xchg
in
sahf
sti
std
and
ret
hlt
lret
pop
dec
insb
pop
sbb
mov
add
inc
bound
xor
aam
leave
lret
sbb
stos
add
sar
lret
fisubl
lds
jb
mov
add
push
adc
or
sarb
dec
cltd
repnz
adc
icebp
cmp
ds
xchg
sbb
inc
cmc
rcll
jb
dec
xor
pop
cmp
mov
fisttpl
jns
int3
mov
arpl
cs
mov
addl
insb
std
mov
ret
adc
jp
fnstsw
cltd
push
xchg
jns
rclb
pop
mov
shll
pop
repz
jle
mov
dec
sub
dec
repz
rolb
leave
fiadds
jnp
fimull
sbb
rclb
iret
xchg
jns
inc
cltd
dec
push
dec
in
aad
out
mul
ljmp
jmp
adcb
xor
adc
icebp
fsubrl
or
mov
mov
fildl
mov
mov
ret
pop
shlb
call
loop
shlb
popf
jo
jmp
mov
sbb
mov
sub
and
dec
enter
xchg
cmp
sbb
lret
jae
sti
rcrb
icebp
shrb
repz
iret
xchg
outsl
test
dec
push
dec
ja
add
leave
mov
notl
fsubs
push
jnp
xlat
dec
testb
call
and
jp
movsl
neg
adc
das
icebp
xchg
sub
xor
add
mov
xchg
pop
lock
push
aad
jb
shlb
pop
inc
dec
imul
sbbb
cs
and
in
test
loopne
pop
jmp
fcoms
pop
filds
mov
scas
inc
sbb
pop
ror
cmp
shll
pop
mulb
lret
jns
xchg
push
mov
repnz
or
dec
push
mov
arpl
inc
cmpsl
mov
inc
push
fisttps
rep
orl
imul
xchg
stos
adc
pop
lea
iret
lds
jae
rolb
mov
inc
dec
test
fstpt
inc
cmp
subl
lahf
push
pop
dec
jbe
rclb
ljmp
adc
cmp
sbb
mov
inc
fbstp
xlat
les
loopne
nop
shl
jno
lock
dec
repnz
sbb
add
sbb
loope
icebp
sub
add
icebp
cmpsl
mov
and
inc
mov
or
ret
mov
add
ret
ret
iret
dec
mov
inc
mov
xlat
movsl
out
mov
push
ret
sbbb
pop
loopne
and
sbb
mov
outsb
mov
adc
push
insb
js
cmp
jbe
add
xchg
int3
pop
mov
push
adc
ret
in
leave
bound
push
pop
dec
mov
pop
fcmovbe
es
mov
pop
add
mov
das
jbe
cmp
mov
inc
fiaddl
ret
push
outsl
mov
out
stc
rolb
fisttps
fcomps
inc
out
mov
mov
push
sub
xchg
cmp
out
sub
xchg
aad
insl
xchg
test
xlat
cmp
mov
adc
lods
mov
int3
mov
add
pop
stos
lret
push
or
xlat
cmp
lods
aas
xchg
adc
leave
mov
adc
stos
xchg
stos
xor
ret
int
pop
in
ret
push
dec
jge
imul
mov
pop
test
lods
push
lods
ss
fbstp
hlt
cmp
or
adc
outsl
cmpsl
lds
xchg
cmpsb
add
mov
fiadds
sub
ret
lret
aad
push
shll
in
xchg
popa
filds
push
daa
data16
mov
mov
xor
cli
scas
mov
fisubs
push
ficoml
icebp
xchg
sub
push
icebp
stos
or
filds
lahf
pop
int3
mov
xchg
mov
iret
mov
aad
cmpsl
data16
fwait
xchg
orl
push
cmp
sar
xor
out
insb
jg
cs
imul
mov
jb
pop
add
outsb
xchg
leave
cld
cmp
mov
push
cmpsl
int
cld
cmp
inc
mov
fistpl
lret
cmpsl
daa
jmp
fcmovnb
mov
outsl
or
in
xacquire
add
xor
add
and
cmpsl
adc
ret
and
cmpsl
sti
jp
pop
dec
xor
iret
inc
add
mov
out
jge
cmpsl
pop
jno
dec
adc
or
incl
pop
in
jbe
mov
js
cmpsl
inc
ja
mov
cmp
mov
cmpsl
mov
icebp
adc
test
fucomip
dec
es
jmp
popa
and
add
adc
jae
cld
out
and
int
cltd
imul
imul
rol
xchg
mulb
inc
adc
lds
filds
sub
push
scas
cwtl
ret
ror
jmp
sub
cmp
and
insb
cmc
pop
jnp
out
test
cmp
and
pop
push
or
rcll
repnz
out
add
jp
mov
lods
loop
pop
xlat
in
dec
mov
ds
sarl
dec
bound
pop
lods
or
dec
fwait
jle
dec
dec
adc
insl
mov
sbb
fwait
ret
mov
out
and
sbb
ljmp
mov
cmp
test
fidivl
mov
lods
popf
fnstenv
addl
inc
shr
mov
in
or
mov
pop
mov
ljmp
cld
and
ret
jb
add
popa
stos
push
test
ljmp
ret
sbb
sbb
mov
sub
cmpl
jbe
movsl
mov
mov
pop
mov
aas
cmp
es
pop
push
ljmp
jb
cmc
arpl
jp
adcl
pop
imul
adc
lahf
xchg
jg
sub
shrl
mov
xlat
push
xchg
daa
adcb
adc
imulb
cmp
mov
outsb
mov
jmp
jl
sub
push
xchg
call
inc
inc
mov
mov
sub
xchg
sub
lahf
arpl
sub
es
jno
jmp
add
fistpl
xchg
fdivrl
ret
xchg
pushf
sub
pop
or
mov
fidivl
add
negb
decb
data16
in
sbbb
fwait
les
fiaddl
cli
pop
hlt
push
xchg
push
pop
jg
repnz
lock
inc
addr16
flds
cld
imul
cmp
in
mov
xchg
cmc
dec
scas
ss
or
adc
sbbl
insb
cmc
dec
xchg
dec
mov
in
sarl
es
pusha
sbb
out
jl
fstl
push
lods
jecxz
lcall
dec
xchg
fwait
sub
push
xchg
fadds
and
nop
addr16
in
add
lock
fcmovnbe
push
adc
movb
fildll
and
cltd
neg
mov
shrl
je
xor
inc
outsb
add
hlt
mov
addb
mov
testl
dec
jns
or
out
mov
xorb
cmc
add
insl
dec
sub
cli
ficompl
shl
testb
mov
test
xorb
jmp
mov
shrl
or
ret
inc
push
cwtl
sbb
insl
pop
mov
pop
dec
cwtl
clc
cli
sti
adc
xor
cmp
neg
negl
std
imul
push
inc
js
fildll
mov
movsl
test
jp
xchg
inc
inc
iret
cmpsl
testl
inc
jbe
xor
xor
xchg
inc
filds
add
inc
imul
mov
fcmovbe
pop
lods
cltd
cli
lcallw
cmp
sbb
push
cmpsl
sbb
stc
insb
pusha
push
xlat
adc
cmc
lret
and
int
repnz
adc
enter
add
rcrl
out
roll
divb
roll
push
xchg
push
xchg
or
xchg
int3
imul
jp
stc
stc
pushf
lock
adc
inc
dec
fisubl
xchg
inc
pop
es
test
jns
mov
fcomp
xchg
cmp
scas
or
lcall
aam
sub
dec
jmp
mov
mov
into
aam
sbb
fdivs
mov
xchg
repz
clc
push
dec
and
in
in
fstl
inc
dec
test
and
scas
por
jne
adc
cmp
inc
adc
mov
sarb
sbb
xchg
or
push
cli
inc
sbb
jecxz
mov
sbb
out
cmpsb
pop
cmp
dec
scas
sub
repnz
in
leave
cmp
pop
clc
adc
nop
rcll
xchg
cltd
leave
fwait
inc
test
ja
ret
push
jns
add
fadds
mov
imull
push
pop
lock
cmp
jp
outsb
mov
stos
filds
jne
scas
fdivs
jns
cmpsb
arpl
idiv
nop
mov
inc
and
xchg
mov
mov
dec
es
or
fldt
loop
lret
pop
jb
repz
pop
stos
je
or
xchg
sub
xor
cmp
sub
dec
divb
push
inc
xchg
test
lret
cmp
jb
das
xchg
fstl
inc
or
scas
cmp
xor
push
cltd
in
faddl
mov
add
push
jge
fdivl
cmpsb
cmc
insl
adc
cmp
aam
push
mov
sarl
idivb
movsl
shll
fildll
sahf
fcmovnbe
rcll
lods
inc
jae
cmpsb
sub
dec
xchg
ficoml
icebp
leave
shr
test
inc
rorb
scas
pop
ret
sub
lods
xchg
repz
pop
inc
push
push
push
fsts
fincstp
mov
or
fs
lret
mov
pop
pop
mov
sti
and
cmc
loope
sbb
sahf
ret
aad
mov
lock
inc
sub
cs
push
shrl
ficoms
fcom
jae
imul
inc
dec
cmp
ret
adc
insl
pop
mov
ja
ja
pop
adc
into
fbld
ljmp
push
xchg
inc
inc
es
jmp
pop
loop
mov
dec
push
jg
rclb
lret
xchg
push
or
push
jle
cmc
xchg
rcr
xchg
shl
sbb
mov
xchg
ret
icebp
insl
jnp
leave
out
lods
arpl
fisubl
fsub
fsts
ljmp
xchg
je
test
xchg
lock
inc
int
scas
cmp
sbb
fmuls
fistpll
xlat
cs
loop
pop
lock
push
mov
int
popf
and
insl
push
cli
mov
or
sub
push
sahf
ret
flds
mov
and
inc
xor
inc
lods
add
mov
push
test
fcomp
lret
arpl
xchg
or
xchg
imul
xlat
jns
repnz
das
add
daa
inc
sub
mov
push
inc
cmp
mov
js
out
mulb
js
xchg
test
mulb
pushf
jo
repnz
push
xchg
shlb
jnp
mov
and
sbb
mov
loop
pushf
and
mov
dec
sahf
lds
mov
test
vmovss
cmpsb
pop
push
hlt
jp
ret
jbe
jp
cli
mov
fnstsw
adc
add
sub
sbb
inc
dec
rolb
sbbb
sbb
dec
cltd
push
hlt
mov
mov
fldt
pmulhuw
lahf
movb
mov
mov
jae
xchg
or
lods
lcall
pop
jmp
cli
mov
shll
or
dec
jbe
mov
adc
js
adc
lcall
xor
lock
or
mov
negb
scas
adcl
jmp
fdivl
sub
push
adc
sbb
cs
int3
mov
lea
clc
nop
mov
jge
out
or
jbe
test
div
andb
je
jge
adc
rclb
call
aad
inc
jnp
jge
mov
lcall
mov
jae
int3
test
aaa
dec
clc
dec
out
popf
cmp
jb
fstps
sbb
rcrl
idivb
iret
pop
pop
not
ficomps
pushf
push
push
mov
movsl
insl
pop
mov
add
lahf
sahf
pop
imul
ficompl
jp
lret
pop
pop
xchg
mov
in
dec
sbb
push
loope
pop
jmp
add
sti
mov
sbb
or
add
jns
add
outsl
xor
ljmp
add
out
shr
inc
sub
cmc
pop
sbb
jae
jmp
push
xchg
dec
lea
fidivl
out
xlat
mov
loop
aas
adc
sub
or
insb
sbb
test
push
pop
arpl
fdiv
push
inc
xchg
imul
push
push
sahf
adc
jbe
aas
adc
lret
filds
and
adc
insb
pop
rcr
data16
sbb
xchg
or
xchg
xor
insl
pop
cltd
mov
mov
les
adc
jle
jp
addr16
adc
jnp
sbb
add
adcl
xchg
jo
movsb
mov
cmp
stos
jo
scas
clc
cld
xor
std
dec
movb
repz
inc
es
clc
xlat
negb
jns
das
cmp
cmpsb
dec
adc
punpckhdq
lcall
int3
adc
add
dec
or
xchg
mov
xchg
adcl
fs
cmpsb
fbstp
pop
mov
addb
jmp
outsb
mov
inc
pop
jnp
enter
push
sub
push
pop
mov
insb
xchg
loop
insl
pop
sbb
shrd
mov
fldl
outsb
pop
lret
loope
fbld
neg
ficoms
fistps
vmaxps
adc
push
data16
iret
lret
test
sbbl
adc
mov
xlat
rcll
leave
enter
xor
xchg
sub
xchg
flds
xor
jl
ret
push
or
arpl
es
test
fstp
dec
mov
xchg
negl
add
add
cmpsb
cli
lret
idivl
xlat
ss
mov
sbb
lock
inc
addr16
call
stos
add
aas
mov
pop
push
imul
mov
out
fisttpll
mov
loopne
push
xlat
xorl
and
fldt
and
mov
push
fidivrl
jmp
stc
mov
mov
xlat
ljmp
xor
mov
or
mov
aas
sbb
fbstp
es
dec
int
xor
mov
mov
fidivrl
sti
imul
push
les
ret
loopne
lret
mov
mov
push
dec
mov
repnz
mov
cmp
xchg
ss
push
sarb
iret
cmpsl
jp
idivl
stc
dec
imul
jmp
xor
xchg
mov
into
stc
mov
jno
fwait
adc
inc
cltd
pop
fnstsw
pop
mov
adc
scas
loope
stc
fs
fs
cld
aaa
adc
adc
mov
push
push
jg
jnp
mov
repnz
int
sbb
lret
ror
mov
dec
xchg
dec
sub
jns
cs
out
sbb
es
dec
jl
cmp
cltd
jl
sarl
in
dec
in
ret
ret
ret
pop
push
or
mov
and
enter
add
ret
cmp
in
jmp
shlb
add
fdivr
je
mov
insb
fcmovnbe
inc
xchg
add
and
das
inc
cmp
and
mov
shlb
andb
clc
mov
sti
mov
mov
mov
jmp
adc
push
sti
sti
enter
sbb
int
cmpsb
icebp
adc
dec
fsts
xchg
inc
xor
pop
notl
loop
push
jns
push
cmp
pop
pop
jg
jl
leave
popa
adc
ss
or
test
jg
adc
in
pop
xlat
das
sti
stos
push
loope
mov
stos
and
andb
fnstsw
dec
insb
cmp
pop
ret
or
push
rorb
insb
push
ljmp
divb
aad
out
sbb
lret
cmc
pusha
ss
adc
aaa
or
mov
lahf
jno
hlt
mov
es
aam
jmp
ja
iret
lds
hlt
mov
pop
jno
loop
outsl
jecxz
pop
jo
imul
adc
mov
lahf
jl
mov
pop
adc
cwtl
xor
aad
daa
rcll
iret
es
push
je
cmp
sub
popf
clc
iret
add
inc
jns
push
pop
repz
movl
cmp
fstl
cmpsl
adcb
mov
loope
insl
adc
aad
sbb
fiadds
ljmp
pop
nop
movsb
idivl
aam
ret
sti
cltd
daa
inc
fldt
sub
out
fs
aaa
mov
loop
js
icebp
roll
stos
xlat
jns
xchg
cli
imul
inc
jg
leave
pop
ret
xchg
mov
jle
push
xchg
fwait
divl
ljmp
dec
ror
ss
jp
scas
arpl
adc
hlt
subl
push
dec
jl
call
rcl
xchg
sub
scas
jb
pop
sbb
scas
push
lcall
hlt
scas
ret
inc
pop
jmp
cmp
and
mov
hlt
and
loope
pop
test
ret
repnz
or
cltd
push
bound
mov
cs
mov
push
fnsave
mov
or
pop
popa
in
dec
lock
notl
lea
scas
cmpsb
cmovo
inc
mov
jl
xchg
pusha
es
mov
outsl
pop
mov
aas
push
sbbb
cmp
xor
mov
jge
jae
sbb
dec
push
cmc
pop
mov
jp
pusha
popa
aam
lret
push
repz
mov
mov
inc
cmpl
dec
jb
or
fcomi
jmp
loop
fldl
mov
cmpsl
mov
gs
ret
in
cmp
test
lret
lods
inc
dec
into
cmp
cld
fcmovne
ret
iret
inc
pop
repnz
xchg
pop
or
mov
lock
sarb
jb
decl
dec
pop
imul
dec
add
mov
cmp
cmpsb
mov
notb
in
push
sub
add
inc
insb
xchg
test
jmp
xchg
dec
sbb
sbb
adc
neg
cmp
fildl
int
mov
dec
aaa
das
out
and
ret
dec
push
inc
adc
mov
xchg
lea
pop
jne
aaa
inc
rolb
jmp
pop
rcrb
ret
daa
mov
scas
shlb
fwait
scas
or
out
push
in
sub
xchg
in
jo
cmc
in
inc
pushf
xchg
out
test
xor
fnstenv
mov
shlb
shr
sub
icebp
inc
iret
jle
enter
push
aam
push
adcl
mov
adc
das
insb
xchg
cmova
cmpsb
orl
sbb
in
jne
xchg
jg
push
cmpsl
dec
sahf
sbb
fcmovnu
ds
push
dec
jns
std
rol
vxorps
push
testb
sbb
mov
lret
cmpsl
or
add
popf
aad
sub
jecxz
pop
cmpsl
push
add
int
pop
je
pop
add
sahf
cmpsl
loope
and
movsl
notl
xchg
repnz
repnz
cltd
loopne
sub
and
xor
mov
cmc
mov
jnp
std
dec
daa
sbb
sbb
jno
mov
push
mov
imul
test
int
cmp
aad
xchg
mov
fisubl
and
daa
sub
xor
pop
jns
xchg
pop
mov
adc
call
inc
inc
fndisi(8087
xor
mov
mov
pusha
aam
dec
inc
push
jmp
test
adc
movsb
mov
sbb
mov
xor
lahf
loope
xchg
xchg
jb
ja
repz
dec
adc
pop
push
lret
pop
inc
int
out
jle
or
fisttpll
inc
xlat
mov
int3
cmpsl
xchg
jno
out
mov
xchg
shll
or
cmpl
cmp
or
adc
stos
cltd
inc
or
mov
inc
sti
mov
mov
sar
push
movsb
xor
aad
filds
inc
cltd
int
shrb
test
inc
sti
daa
bound
jmp
sub
mov
dec
or
mov
push
fcomip
ffree
ret
pop
roll
jl
jecxz
xor
in
inc
mov
xor
push
sbb
repz
flds
test
cmp
fidivs
dec
mov
sahf
xor
jge
mov
daa
insl
cmc
jbe
fld1
repz
fsubrs
cwtl
push
add
pusha
lods
arpl
dec
mov
mov
fnstenv
push
jae
mov
or
mov
inc
mov
or
mov
adc
in
repz
ret
pop
mov
mov
mov
adc
cmp
or
mov
push
test
icebp
cld
mov
add
lock
add
push
daa
push
pushf
push
push
pop
adc
push
push
movl
call
pop
cli
enter
jp
into
pop
cld
or
fistpl
loope
xchg
clc
pop
sbbl
add
adc
stc
cmpsl
jns
inc
addr16
dec
push
imul
pop
pop
dec
lret
mov
fnstenv
cmpsl
cli
jbe
cltd
adc
mov
dec
inc
xchg
dec
mov
lcall
adc
cmpsl
and
rcrl
lods
and
into
and
repnz
outsb
cs
inc
cmpsl
dec
negb
jp
out
pop
cmpsl
pop
insl
fwait
enter
idivb
jmp
inc
iret
lods
xchg
dec
fcmovnb
adc
ja,pn
inc
mov
push
inc
dec
jns
cmc
pop
jp
mov
jno
out
lret
sahf
cmpsl
aaa
popa
mov
sbb
mov
pusha
add
xlat
inc
popf
adc
xchg
mov
mov
jno
cmpsb
add
push
push
movsl
inc
xor
sbb
hlt
fnstenv
popf
push
sti
mov
cmp
push
mov
push
lahf
in
xchg
cmp
push
leave
xchg
je
jnp
ret
pushf
pop
stc
fucomip
fbld
mov
add
dec
inc
push
xchg
dec
sar
add
ret
roll
sub
in
movsb
push
movsl
cmc
adc
roll
mov
cmpsb
mov
insl
fisubs
dec
repnz
mov
mov
add
push
icebp
and
xchg
loope
rcl
out
std
pop
dec
adc
sbb
sub
ret
sub
lods
mov
daa
data16
or
cmpsl
popf
insb
dec
adc
inc
aad
inc
xlat
jmp
xchg
pop
xchg
lret
pop
pop
int
dec
jmp
je
xchg
inc
lea
push
mov
testl
test
ja
pop
xchg
das
imul
out
aad
out
movsl
ret
adc
shll
jmp
jno
stc
insb
aaa
sub
lods
js
std
mov
jb
in
call
xchg
je
mov
dec
jno
xor
sarl
aad
es
push
and
xchg
cld
lea
adc
jg
es
std
or
jle
test
insl
mov
sub
xor
cmpsl
add
push
lahf
mov
outsl
jns
std
aad
repz
daa
push
daa
jne
das
lret
push
call
pop
push
adc
sbb
push
ret
add
dec
imul
shl
push
stos
roll
repz
cmpsl
pop
push
inc
arpl
loope
test
jne
inc
xor
mov
cmp
sahf
ffree
adc
or
pop
fistl
iret
bound
repz
cmp
sbb
filds
sti
int
hlt
jbe
cmpsl
insb
add
push
std
out
xchg
jmp
xchg
jle
sbb
dec
aaa
test
loope
insb
add
xchg
movl
push
xchg
repnz
cld
repnz
sbb
mov
xlat
leave
push
sbb
ljmp
lret
adc
dec
xlat
bound
je
lods
jns
aad
dec
pop
dec
cli
sti
jo
xchg
sbb
jg
jb
xlat
pop
dec
imul
inc
adc
dec
mov
mov
push
xchg
fwait
mov
movsb
ret
ret
outsl
cmp
mov
adc
lock
xlat
loope
sbb
mov
mov
cmp
sbb
push
cmp
fldz
mov
ljmp
arpl
ds
xlat
call
fs
mov
sbb
or
call
mov
aaa
out
sbb
mov
xchg
mov
inc
xchg
and
mov
rep
in
adc
xchg
push
sub
mov
mov
fsts
ret
fcom
icebp
lret
je
push
lock
ja
in
inc
lock
or
jle
pop
push
cmpsl
xor
sti
jle
pop
popa
mov
push
xlat
inc
dec
mov
cmpsl
addb
ret
mov
inc
shlb
loopne
push
xor
sub
pop
pop
inc
xchg
sbb
rcl
mul
mov
push
push
imul
cmp
loope
adc
insl
push
sub
mov
test
pop
outsl
inc
xlat
push
cmpb
xlat
push
imul
inc
push
frstor
inc
sub
shlb
in
dec
xor
div
mov
mov
movb
or
xchg
xlat
int
sub
icebp
repz
es
push
movsl
inc
dec
in
pop
popa
jns
cmpsb
jg
aad
rcl
cmpsl
jle
sti
je
icebp
pop
inc
icebp
fcomi
or
inc
mov
in
add
mov
not
pop
inc
jmp
jg
dec
lea
imul
outsl
xchg
dec
jmp
jbe
push
ret
sub
into
sub
inc
jnp
mov
inc
inc
mov
adc
push
cmp
sub
stos
cmpsl
in
xchg
andl
cs
fmull
into
sub
mov
clc
addr16
or
mov
lahf
push
dec
mov
icebp
fcmovnbe
dec
xor
inc
das
jp
xchg
jbe
sti
xchg
int3
lahf
out
cli
aam
push
cmpsl
call
xchg
mov
cmp
add
insb
dec
stos
or
sbb
insl
jg
mov
out
mov
int
sbb
dec
es
jecxz
push
sbb
mov
sub
ffreep
aam
add
jecxz
daa
cmpsl
xor
sahf
cwtl
push
push
vpsubb
add
xor
jmp
pop
xchg
jmp
push
jl
push
xchg
imul
xor
sub
test
fwait
enter
rcll
lods
xchg
aas
rcrb
out
outsb
inc
lds
aaa
xchg
div
push
xlat
jnp
adc
adc
in
adcb
push
aam
imulb
pop
sub
lret
test
cmp
push
ja
sub
aam
lret
repz
dec
scas
in
cmp
adc
pop
xchg
dec
and
jnp
movsb
dec
dec
inc
fdivl
lahf
je
loope
xchg
ret
dec
outsb
and
out
sbb
test
xchg
sbb
loope
push
inc
test
fnstcw
cld
jns
jecxz
mov
popa
pop
cmp
push
xchg
popf
dec
adc
adc
sub
pop
sti
dec
jns,pt
pop
mov
push
or
fdivrl
xor
push
mov
dec
andb
cmp
lods
les
push
lret
rcr
imul
lea
pop
xchg
and
fisubs
mov
pop
mov
test
and
jbe
les
cmpsl
je
jecxz
jmp
sub
insb
adc
pop
xchg
lret
int
pop
push
push
add
inc
ljmp
pop
lret
js
stc
pop
ja
jne
idivl
jo
lcall
mov
add
xchg
inc
call
push
fidivrs
xchg
je
adc
sahf
adc
mov
aad
push
pop
idivl
daa
push
arpl
sbb
xor
mov
xor
cld
adc
out
push
lods
scas
cli
fucomi
push
push
test
mov
adc
push
aad
xchg
mov
fwait
jae
into
mov
or
rcll
ret
push
repz
sarb
xchg
push
push
pop
in
sbbb
push
xor
rorb
cmpb
push
push
imul
mov
fidivrl
jl
xchg
add
dec
add
inc
and
lahf
loope
and
push
js
adc
pusha
pop
mov
push
lods
movsl
push
lret
ljmp
sub
adc
mov
xchg
xlat
adc
fstpt
aam
int3
test
out
in
fdiv
js
cltd
mov
xchg
inc
lea
dec
jnp
leave
fsubs
sub
into
les
xchg
outsb
jmp
xor
icebp
push
or
mov
mov
outsb
pop
ss
insb
and
lcall
mov
and
inc
pop
adc
xor
or
pop
aaa
mov
jmp
push
jbe
push
cmp
in
subb
call
sbb
stc
sti
leave
std
pop
adc
pop
movsb
cmp
rcr
out
jle
sub
or
mov
data16
add
repnz
adc
add
mov
out
mov
jle
aad
jge
aad
xchg
jl
mov
lret
and
dec
imul
lock
imull
faddl
insb
jle
imul
test
xor
in
xchg
cmpsl
jbe
jl
push
es
jbe
push
pop
or
into
add
mov
dec
scas
sbb
push
pop
scas
shrl
pop
inc
idiv
stc
loop
cs
jbe
lea
xadd
add
fnstenv
in
flds
mov
std
inc
icebp
mov
dec
xlat
xchg
icebp
add
mov
mul
inc
cmp
aaa
into
cmp
fidivrs
add
mov
sarb
fcmovbe
adc
ret
pop
push
mov
xor
xor
jae
cmpl
push
in
aam
call
dec
xchg
sub
push
mov
pop
stc
adc
cmp
adc
jb
xor
cmpsb
mov
test
mov
adc
sahf
xor
jns
lea
mov
jle
fldenv
int
sub
xchg
push
xor
loopnew
das
jno
scas
ret
push
mov
or
in
gs
inc
cwtl
lahf
fwait
inc
inc
imul
leave
or
mov
push
xchg
mov
mov
fnop
pop
mov
out
pop
or
sarl
lahf
scas
mull
lods
xchg
test
ljmp
jge
pop
fidivl
cmpsb
pushf
mov
stos
cmp
data16
stc
fucomi
xlat
sub
out
sbb
adc
adc
ret
xchg
daa
push
jmp
int
aaa
push
fldenv
pop
inc
repz
pop
stc
pop
add
int
jb
mov
fs
les
bound
mov
es
push
push
push
lods
ss
fildl
dec
xchg
rcll
int3
mov
dec
mov
ss
pop
stc
sub
xor
rcll
push
lods
mov
and
imull
add
xor
jmp
ja
mov
mov
jle
adc
je
push
mov
push
test
es
lods
push
in
jecxz
push
mov
shrb
push
scas
adc
mov
pop
push
insb
mov
sub
lcall
xlat
adc
nop
or
xor
mov
fistpl
sbb
jge
pushf
inc
fsubrs
cmpsl
adc
shl
fisubs
out
push
xchg
jmp
xchg
xchg
and
lods
xchg
es
mov
pop
mov
movl
scas
inc
inc
mov
jb
dec
mov
jns
scas
loopne
fnstenv
xchg
aad
mov
shrl
xor
dec
sub
movsl
xchg
js
js
adc
cmc
adc
adc
jne
cltd
or
int3
mov
test
shrl
call
out
add
push
icebp
sbb
ret
scas
or
jle
cmp
push
and
dec
add
xlat
in
andb
dec
cmp
inc
lret
es
fstpt
xchg
aam
jmp
mov
fldenv
jecxz
mov
ret
lds
push
xor
es
shlb
fistl
aam
pop
out
inc
jo
fnstsw
icebp
leave
xchg
push
iret
shrl
jl
xchg
ljmp
mov
or
or
stos
cld
xlat
cli
pop
add
sub
xchg
cld
xor
popa
outsb
inc
aaa
cmp
rcl
pop
dec
lahf
pop
or
sarl
xlat
aas
faddp
pop
adc
pop
icebp
cmp
inc
pop
shlb
cmp
inc
pop
sub
push
pop
push
fsub
inc
inc
cmp
sarb
push
mov
xchg
fcompl
sbb
loope
shlb
push
cmp
xor
fnstsw
insl
push
xchg
movsb
sti
sbb
fcmovne
ror
notl
shr
xchg
sbb
div
push
cmp
imul
mov
pop
fmuls
int
sbb
pop
xchg
add
xchg
push
ret
and
jmp
es
fwait
es
adc
xchg
sti
fadds
adc
sub
fcom
cmpsb
loope
sub
dec
out
out
xchg
adc
repz
rcl
push
jmp
push
ffreep
sub
xchg
repz
pop
xor
inc
pop
rolb
push
jp
inc
mov
aaa
sub
rcrl
iret
xchg
dec
fmul
ljmp
call
pop
test
push
int
push
mov
inc
jl
loope
jl
clc
xlat
push
dec
mov
inc
ret
pop
dec
cld
mov
jne
aad
not
js
testl
test
loope
pop
pop
cmpsl
push
xchg
jbe
icebp
sbb
xor
lds
push
sbb
ret
mov
cmpsb
mov
push
pop
aas
mov
adc
aam
pop
push
in
dec
into
dec
imul
pop
aas
cmp
jne
imul
adc
push
stc
addr16
lods
fsubrs
jp
push
fdivrs
xchg
mov
push
jno
insl
inc
mov
ret
dec
aas
pusha
mov
mov
das
push
jno
mov
adc
test
ret
adc
jmp
lret
rolb
dec
mov
loope
cmpsl
push
and
lret
sub
inc
sti
fwait
fwait
stos
movsl
pop
push
xlat
out
pushf
ficoms
jle
cmp
insb
shrb
in
leave
lret
fdivr
stos
mov
stos
adc
test
ljmp
arpl
push
inc
sub
inc
loopne
loopne
clc
ljmp
mov
outsb
adc
scas
push
jecxz
mov
or
xchg
sti
lods
movsb
addb
mov
into
mov
jno
dec
fwait
pop
ret
jae
aam
mov
stos
cmc
push
jno
cwtl
push
cs
inc
out
out
xchg
pop
test
xor
fcmovnbe
push
arpl
mov
loope
xor
mulb
idivl
out
movsl
dec
lds
mov
xor
idiv
sar
sarl
arpl
es
leave
mov
jns,pt
push
sub
fdivp
std
mov
lea
xchg
insl
cli
and
pop
mov
mov
xor
addr16
sarl
mov
std
cmp
mov
stc
add
js
jecxz
sub
inc
jg
int3
add
mov
add
or
xchg
jo
mov
lock
mov
xchg
cmpsl
gs
int
arpl
jno
fisubrs
imul
cmp
mov
ja
ja
xchg
xchg
sbb
lock
and
xchg
outsb
mov
loope
lods
jl
mov
xchg
addr16
imul
inc
xchg
cld
aam
lods
add
test
lret
pop
xlat
sbb
inc
add
xchg
push
dec
test
add
add
fwait
mov
mov
cltd
fstpl
xchg
jo
inc
sbb
lahf
mov
mov
popf
fstpl
sbb
xchg
mov
mov
xchg
fstl
xchg
out
nop
jae
fwait
pop
add
xchg
mov
frstor
aad
lods
cmp
xchg
lret
jbe
and
sub
test
ret
fistpl
push
movsl
out
arpl
jp
push
jle
mov
out
test
icebp
cmp
cs
push
sahf
mov
outsb
push
inc
cmp
inc
ljmp
imul
sbb
adc
fs
push
hlt
popa
imul
mov
add
push
movsb
mov
rorb
es
fistps
loope
mov
pop
jmp
pop
inc
sbb
dec
mov
push
rol
inc
ljmp
jl
jp
jbe
icebp
inc
std
scas
pop
add
pop
test
ret
dec
aam
lods
mov
xchg
adc
and
neg
rcrl
cmp
mov
xchg
imul
xchg
outsl
cmpsl
dec
inc
test
xchg
push
push
xlat
leave
lock
xchg
jl
xchg
test
and
clc
sub
xor
sub
xchg
mov
sbb
lcall
xchg
xor
jp
push
adc
mov
jns
in
sub
fsts
aad
iret
fld
andl
sbb
push
inc
pop
pop
stos
and
inc
jl
lods
data16
leave
out
xlat
xchg
leave
aad
rclb
imul
cwtl
push
mov
lret
in
out
incl
xor
sti
out
push
xchg
jmp
push
mov
pop
daa
jge
push
ss
pop
or
test
jp
mov
inc
xlat
or
push
push
jecxz
movsl
inc
lahf
in
inc
add
pushf
inc
scas
adc
adc
xchg
sub
lcall
xchg
xchg
shl
lret
xlat
call
xchg
nop
js
stos
mov
ja
push
sub
fdecstp
es
repnz
jae
cld
cli
mov
add
out
popf
mov
push
int
cwtl
arpl
scas
mov
fbstp
stos
popa
popf
inc
gs
pop
lret
jp
and
jecxz
loope
pop
add
inc
pop
jno
mov
jae
dec
fdiv
push
mov
mov
fwait
add
loope
inc
es
xchg
fistpl
test
mov
movsb
bound
test
jp
mov
jl
lds
sti
fsubl
push
and
jp
inc
mov
pop
jne
addr16
fwait
xlat
dec
repz
in
pusha
pop
xchg
or
xlat
xchg
std
leave
das
inc
push
adc
shlb
push
inc
rclb
movsl
aad
adc
sub
sbb
pop
in
iret
ds
shlb
xor
je
test
xchg
rclb
adc
mov
fidivrl
pop
jns
pop
cmp
xor
mov
push
mov
xchg
xor
push
frstor
sbb
icebp
fcoml
push
mov
xchg
xchg
add
stc
push
jo
cmpsl
xor
pop
pop
pop
xlat
shrl
push
psllq
notl
cltd
cmp
mov
mov
clc
movsb
test
pmuludq
pop
rol
pop
pop
repnz
xlat
repz
popa
das
mov
pop
es
pop
outsb
cli
xchg
les
inc
lock
inc
sti
sub
daa
and
pushf
mov
dec
loopne
test
pushf
fadds
jb
jns
pop
push
push
repz
repnz
div
inc
jmp
push
jb
int3
xchg
xor
mov
test
dec
into
mov
es
mov
xchg
inc
jno
xchg
aad
aad
push
dec
adc
add
les
out
fistpl
cmpsl
xchg
nop
push
in
pop
push
pop
push
insb
push
jbe
negb
leave
lods
jb
push
cs
adc
stos
mov
scas
adc
xor
lret
xchg
lock
push
xor
mov
dec
sarl
nop
adc
push
push
es
pop
xor
ljmp
fidivrs
lods
mov
push
loopne
bnd
jne
jnp
xlat
daa
pushf
fstpt
repz
push
cli
fdiv
sbb
cmpsl
fcoml
jge
jge
cmp
cmp
icebp
push
test
mov
fwait
xor
fdivrs
imul
out
jbe
push
sti
cmpsl
inc
inc
xlat
push
shlb
or
fistl
loope
rcrl
inc
cmpsb
cmp
clc
lahf
pop
lock
dec
fcmovnbe
jns
jg
in
mov
sub
shll
lcall
hlt
rep
xchg
fadds
cli
xor
and
lret
push
shlb
repz
jae
push
mov
lods
add
cmpsl
push
lock
push
in
mov
or
push
push
inc
xor
fwait
lcall
mov
sbb
adcl
mov
imul
pop
add
push
stos
ja
cwtl
clc
lcall
imul
jle
std
push
mov
xor
mov
js
push
rorl
mov
adc
sub
imul
std
call
mov
push
loopne
stc
bound
scas
push
cmc
add
push
fsubs
or
fsubrl
or
lods
mov
xchg
jbe
jae
adc
and
mov
fistps
cli
mov
inc
pusha
xchg
cmp
clc
adc
jecxz
pop
jbe
or
hlt
lods
push
int3
decb
jno
dec
push
scas
jno
add
popa
sti
out
mov
call
pop
test
dec
lock
jb
inc
jae
lret
mov
add
movsb
jp
adc
xchg
lret
ret
clc
mov
pop
sti
iret
sub
adc
cmp
adc
outsb
push
daa
xor
cmp
cmp
outsl
divl
ss
pop
xchg
clc
cmp
jnp
sub
push
cmpsl
inc
sub
jge
outsl
pushf
mov
adc
cld
shll
push
mov
mov
adc
aaa
jmp
imul
sub
int
jmp
ljmp
ret
fs
sti
adc
xlat
es
in
call
xchg
shrl
addl
mov
jae
stos
mov
mov
movsl
nop
test
movsb
das
cmp
pop
sub
inc
push
fsub
push
adc
ret
push
push
pop
push
jmp
inc
setno
in
cli
push
aas
mov
aaa
cltd
push
and
rcr
scas
xor
ret
out
adc
xlat
push
jg
sarl
fcmovbe
daa
dec
jbe
pop
std
cltd
cmp
addr16
jecxz
rcll
sbb
movsb
jb
push
sbb
das
cmpb
shl
mov
rcll
fcomip
hlt
rcrb
jo
dec
xor
inc
push
cmp
sbb
int3
es
rcll
aas
in
daa
jle
rcl
jns
in
je
push
cli
adc
adc
ret
cwtl
call
es
mov
xlat
dec
flds
mov
add
and
xchg
push
pop
push
mov
cmp
fstpt
je
mov
nop
xchg
sub
push
mov
lret
out
dec
mov
fcmovu
jnp
pop
inc
incl
mov
movsb
sbb
jns
lods
xor
xchg
iret
xchg
rcrb
push
rorl
repnz
xor
cmpsb
mov
stos
stos
mov
jno
shll
xlat
negl
lret
aad
cmpsl
test
sbb
and
fsts
aad
xor
aaa
aas
mov
inc
inc
cmp
mov
add
cmpsl
into
les
pop
jno
sar
pop
rolb
out
pop
test
fcmovnu
pop
mov
pop
subb
lret
lcall
pop
mov
jp
xlat
inc
pop
lcall
outsl
filds
scas
mov
add
sbb
xchg
sbb
loope
xor
jbe
add
cmp
out
ret
insl
fistpl
sbb
aad
jl
test
cmpsl
mov
imul
and
int3
lret
and
outsl
push
adc
adc
faddp
push
mov
sub
aam
fisttpll
in
adc
fnsave
push
stc
mov
jb
dec
arpl
pushf
popa
jmp
bound
mov
fs
es
xchg
dec
push
loopne
jo
in
clc
xchg
pop
fldcw
fists
lock
mov
hlt
imul
xor
scas
enter
xlat
xor
lret
test
fstl
andnps
jne
bound
insb
xadd
lock
aad
jp
in
in
fsubl
fdivp
lcall
stc
mov
sti
pop
ficoml
mov
cs
xor
in
rcrl
ja
je
cmp
sub
pop
xor
shl
cmp
arpl
lahf
ret
aam
jge
xchg
sub
shlb
pop
fcoms
imul
insb
je
adc
dec
pusha
mov
dec
jmp
leave
insb
int
scas
sub
stos
mov
cli
js
jae
mov
xchg
ror
subl
cli
xchg
push
call
dec
jnp
setl
inc
dec
test
jle
fists
and
mov
out
jmp
fcompl
lea
jae
xchg
adc
stc
out
pop
and
aam
notl
jmp
add
js
std
mov
xor
and
mov
cltd
in
xchg
jo
std
repz
fistpl
aad
sbb
cmp
movsl
jmp
inc
out
adc
ljmp
lods
mov
out
adc
jge
hlt
in
add
jecxz
xchg
push
andl
outsb
incl
fwait
mov
icebp
push
jns
jno
rorb
fs
mov
and
mov
add
out
mov
leave
inc
out
fcmovne
inc
movsb
rcl
icebp
je
rorb
fs
mov
mov
jne
jmp
cmpsl
aas
cmpsl
sub
and
test
fwait
repz
inc
repz
loope
or
cld
pushl
inc
arpl
stos
outsb
incl
mov
jp
jg
testl
push
inc
or
xorl
add
sbb
jb
sub
iret
inc
shrl
repz
xchg
jno
out
mov
std
test
std
inc
mov
movsb
mov
clc
pop
sub
lea
jecxz
lea
out
xchg
mov
ljmp
fstcw
incl
flds
and
jno
rol
adc
std
aas
jmp
test
sarl
jmp
ss
rol
leave
repz
std
sbb
ja
test
and
loope
mov
xchg
jecxz
xchg
pop
mov
cmpsl
lock
bound
mov
loopne
dec
aad
int
inc
mov
sbb
push
cmpl
movsl
cltd
xchg
pop
mov
fidivl
xchg
and
popa
bound
mov
adc
push
les
rorl
add
roll
js
scas
rcrl
int
daa
xor
xor
fwait
sbb
or
xchg
fldenv
loopne
ret
mov
pop
mov
dec
pop
sub
push
push
pop
ficoml
shlb
lods
inc
jg
imul
push
ret
int3
fldl
cmc
adc
xor
lods
ret
fistpll
mov
fstpt
push
cld
jg
xchg
fstps
push
ljmp
das
das
push
inc
loopne
push
aas
pop
loope
push
daa
imulb
mov
jo
cld
hlt
aam
sbb
sbb
xor
xor
cmp
fneni(8087
sub
pushl
rcrb
leave
fisttps
repnz
pop
stos
cmpsl
mov
mov
icebp
jb
xchg
insb
cltd
stc
or
js
dec
jl
add
fimuls
fs
jg
pop
pop
push
xlat
mov
shll
jmp
cmc
mov
nop
cmpsl
mov
inc
sub
lods
xchg
xor
stc
dec
pop
jp
dec
dec
fcmove
sti
out
sti
add
add
xor
jge
mov
mov
test
push
xor
mov
lcall
ror
jmp
shlb
push
repnz
test
fwait
out
ljmp
repz
rcll
cmc
call
cmp
inc
lods
push
mov
push
xor
call
aaa
sub
lock
inc
mov
mov
mov
mov
mov
shrl
add
ds
cli
or
test
xchg
cld
les
ficoms
xlat
repz
xor
ret
xchg
insb
ret
cltd
inc
out
repz
iret
cs
jmp
sarb
mov
push
pop
lret
sbb
out
lcall
xchg
dec
push
lea
xlat
in
in
jge
lock
ret
lcall
pushf
int3
push
sti
push
jne
xlat
das
test
inc
mov
out
adc
ret
mov
sub
xor
jb
and
push
sub
daa
lods
push
add
mov
out
xor
or
jb
in
xchg
repnz
mov
mov
int3
leave
fsub
dec
adc
fmuls
jb
stos
push
mov
dec
push
xchg
adc
call
xor
xor
xchg
repz
hlt
dec
shrb
jae
mov
in
js
xchg
sbb
data16
clc
push
xchg
mov
into
fbld
sub
or
rol
xor
jbe
pop
sbb
fdiv
popa
pop
fisttps
in
imul
aas
lret
xlat
pop
pop
int
movsb
test
xchg
push
stos
sub
mov
push
cmp
cmp
popf
inc
cmp
lcall
push
jp
inc
jecxz
pop
mov
xor
inc
xor
cmp
mov
es
push
inc
leave
adc
cmp
add
ja
enter
stc
inc
imul
xchg
jns
jecxz
sbb
cmp
and
xor
stos
push
sub
pop
mov
adc
call
jmp
push
icebp
add
fs
out
push
cwtl
aam
mov
lahf
xor
fld
pop
aam
and
test
mov
dec
push
mov
fiaddl
jge
pop
or
mov
dec
push
cli
enter
fisttpl
jno
pop
rcrb
or
mov
insl
fidivrs
inc
es
adc
mov
push
jo
jmp
jle
insb
sti
dec
cwtl
dec
mov
lret
fcompl
jo
fsubs
or
rcrl
das
or
mov
push
cli
jo
inc
lcall
psubusb
hlt
testb
dec
or
ds
mov
jbe
rcl
or
pop
fsubrp
dec
lods
mov
lods
aad
dec
dec
pop
xchg
mull
sbb
xchg
stc
int3
jmp
mov
mov
ljmp
aas
loop
sbb
lods
push
push
jo
imul
ja
mov
inc
pop
icebp
js
cmc
rcll
mov
inc
int
xchg
pop
ficoms
jg
cmp
xor
xchg
loopne
or
or
push
fildl
xchg
rorl
aad
sub
sub
leave
ss
rcrb
ret
jae
xchg
and
fldenv
scas
out
mov
repnz
je
scas
hlt
and
mull
inc
jmp
std
divl
adc
jne
xchg
xchg
pop
das
pop
sbb
mov
cmpsl
arpl
dec
out
or
daa
xchg
mov
pop
rol
jne
lods
cltd
cmpsl
ret
sti
xchg
sti
xchg
mov
xor
xor
cmpsl
cwtl
cli
fistpl
icebp
fldt
push
fsubs
mov
aad
lea
adc
sub
fnsave
xchg
mov
pop
mov
icebp
mov
test
add
aad
push
dec
lds
mov
movsb
jbe
stos
cmp
fstl
xchg
xchg
rorb
lahf
xchg
rclb
xor
hlt
imul
jge
sti
or
inc
stc
out
and
mov
cvtdq2ps
gs
jecxz
lret
fcomps
push
rcl
cmpsl
push
sub
rcll
xlat
aad
mov
jg
nop
push
mov
mov
inc
jns
fldcw
sbb
inc
js
fwait
push
loope
mov
xchg
mov
or
dec
fsubrs
xchg
jl
aaa
popa
lds
stos
ds
xchg
sub
fcmovu
cmpsl
les
vcvtps2dq
xchg
pop
add
push
sub
fdivl
inc
into
sarl
mov
inc
sub
fcom
push
stos
aas
xor
repz
push
scas
pop
inc
faddp
cmpsl
push
dec
pop
adc
or
dec
push
pop
adc
sub
add
dec
rcrb
outsb
pop
sbb
mov
cmp
je
mov
out
push
insb
sti
sar
jp
adc
addl
push
stos
idivb
scas
stos
clc
jns
out
cmp
inc
dec
int3
or
mov
mov
cmp
fcompl
clc
jbe
adc
jmp
sub
xchg
jp
push
je
sub
pop
shll
sar
add
pop
adc
xor
xor
cmp
xchg
je
iret
shlb
insb
in
inc
xor
cmp
ret
mov
mov
stos
push
shlb
mov
std
into
inc
leave
iret
ret
imulb
cmc
fsubrl
xchg
mov
and
testl
pop
push
in
fists
imul
adc
adc
lods
cmp
push
pop
std
lcall
ja
rclb
xor
xlat
icebp
test
repz
nop
cs
sbb
xchg
daa
test
fstpl
jne
outsb
rolb
cli
stos
fidivs
xor
lock
or
pop
xor
adc
mov
test
mov
cmp
adc
cmp
mov
mov
js
mov
sub
sub
pop
xor
rolb
xchg
sub
cmp
adc
arpl
jae
and
ja
mov
jle
loop
ss
jmp
mov
dec
in
xchg
mov
or
fisttpl
add
jg
pop
lock
je
and
cmpsb
mov
orl
xchg
mov
lock
jno
aam
mov
inc
jne
pop
jle
arpl
jb
ret
pop
out
jmp
sahf
adc
mov
inc
shl
aas
aas
icebp
jl
and
in
xchg
jl
ja
push
pushl
xchg
imul
mov
pop
icebp
pop
repz
call
roll
jmp
js
fcmovnbe
inc
sub
pop
fmull
sub
mov
mov
xchg
ret
xchg
insb
jl
xor
xor
rolb
aad
cmp
cltd
out
mov
mov
pop
fisttps
dec
lds
push
leave
sarl
call
je,pt
sub
in
shlb
aas
sub
or
push
jns
test
jl
mov
into
push
push
call
nop
cmp
insl
lds
imul
mov
mov
rcr
cwtl
in
rorl
fistl
sub
aaa
mov
jno
mov
adc
mov
xchg
jp
pop
xchg
pop
scas
cld
hlt
or
xchg
insl
scas
push
pop
test
idiv
push
dec
jmp
int
jle
xchg
imul
mov
loope
stos
inc
aas
sarb
xchg
push
cmpsl
xchg
jno
pop
inc
aad
inc
mov
sbb
lret
test
loop
fldenv
int
lds
idiv
jg
mov
jae
sbb
ret
push
xchg
aad
xchg
insl
and
rol
push
cmp
adc
mov
das
xchg
aam
leave
insl
fwait
cli
sbb
or
enter
xchg
aam
jmp
dec
xor
aaa
addr16
sbb
lds
push
mov
push
lcall
mov
jge
mov
fimull
mov
pop
fnstsw
adc
insb
rol
cmp
xor
dec
and
aad
leave
mov
clc
shrl
cmp
stos
into
xlat
dec
ret
rcrb
pop
pop
icebp
push
and
repnz
rcll
push
pop
dec
out
loope
pop
cmc
stc
push
repz
mov
mov
lods
mov
ja
adc
push
pop
mov
rclb
imul
xor
sub
setae
pop
aaa
pop
adc
lret
cmpsl
push
inc
mov
push
hlt
xchg
shlb
movnti
jp
out
cmp
push
icebp
jle
add
lcall
jae
and
fadds
mov
push
mov
push
sarb
add
not
pushf
mov
call
push
mov
xorl
pop
fistpl
ret
adc
jle
sbb
sub
xor
sub
cmpsb
mov
out
dec
jp
cmp
mov
loopne
iret
push
call
push
sbb
lods
jnp
mov
aaa
inc
pop
add
adc
mov
dec
mov
fs
sahf
pop
jmp
imul
out
mov
mov
push
fstpl
pusha
int
push
test
mov
hlt
lods
push
dec
jne
push
sbb
jbe
dec
int3
arpl
lcall
das
add
inc
sbb
cmc
aad
sub
fmuls
std
push
jmp
and
jo
dec
and
dec
aam
or
ret
shr
lock
push
hlt
sub
and
fisubrl
aam
mov
call
dec
imul
mov
add
in
sbb
mov
fdivrs
jb
adc
stos
shl
mov
mov
adc
lret
push
pop
push
dec
inc
call
lds
or
negb
lods
inc
mov
cmp
push
inc
add
inc
add
sub
xchg
insb
cmpsl
or
push
inc
xor
jge
jno
repz
inc
sub
std
notb
xchg
inc
insl
sbb
fcmovnbe
sbb
cmp
lcall
mov
stos
adc
pushw
mov
xchg
test
shrb
rclb
adc
adc
mov
or
es
rorb
repz
dec
mov
in
jb
lret
push
ds
ror
cli
std
lahf
mov
jl
sub
fnstenv
aaa
and
je
es
sbb
ret
cmp
lret
push
or
test
push
xchg
imul
push
add
jecxz
sub
mov
adc
xchg
mov
and
data16
push
push
xchg
pop
jb
sbb
and
push
jbe
push
xchg
mov
push
pop
mov
addl
xchg
xor
mov
add
scas
add
fmul
fldt
xlat
inc
loope
cs
pop
cmc
pop
dec
mov
ret
inc
shlb
mov
mov
adc
inc
push
jbe
fcmovnbe
xlat
adc
jns
adc
aaa
filds
and
rcl
push
xor
cmpsl
jmp
pusha
adc
jno
int
movsl
movq
sub
cmc
cmp
inc
jge
arpl
push
jmp
or
lahf
ljmp
cld
fstpl
outsb
loop
push
sub
jae
lods
shll
cmp
push
cmpsb
iret
stc
repz
ja
ljmp
mov
loop
cmp
inc
xchg
mov
push
dec
xchg
pop
aad
pop
adc
sub
fdivp
filds
xchg
fwait
pop
stos
sub
stos
fisubs
jmp
repz
pop
xchg
mov
jb
push
aad
push
icebp
scas
add
cmp
rorb
in
cld
mov
clc
adc
xchg
popa
jne
les
push
inc
sahf
lahf
mov
stc
mov
xchg
jge
push
or
mov
js
inc
insb
push
mov
scas
push
mov
stc
inc
add
cs
movb
jmp
not
mov
fnstenv
ret
ja
push
jbe
test
dec
pop
and
cli
push
fldl
xchg
and
fwait
aad
imul
fistps
sub
fs
test
pop
xlat
dec
iret
ss
nop
adc
repz
mov
int
jmp
roll
adc
dec
scas
xlat
out
xchg
jle
jb
and
clc
jmp
test
mov
rol
shlb
ds
push
fs
pop
cmp
inc
sub
fisubrs
push
mov
push
inc
fstl
and
mov
sbbl
pusha
fcmovnb
dec
imul
jle
pop
popa
mov
outsl
mov
test
movaps
xchg
mov
push
je
xor
pop
fisubrl
pop
pushf
xchg
xlat
push
pop
mov
fdivs
mov
lcall
mov
aas
pop
and
sub
inc
stos
fnstenv
sbb
or
or
inc
not
daa
call
inc
loop
cli
in
pop
orl
popa
push
lods
ja
imul
adc
jg
cmp
fsubrs
cwtl
xchg
imul
and
repnz
es
daa
push
je
mov
test
inc
jmp
ret
addr16
and
and
shl
push
jno
fwait
rol
xor
test
mov
sub
and
fisubrl
ljmp
dec
xchg
dec
jns
shlb
addl
xchg
lret
adc
push
les
mov
dec
xor
dec
xor
into
xor
enter
xor
cmp
repz
dec
push
mov
pushf
cmp
xor
test
jns
aam
jno
push
mov
imul
dec
fld
test
outsb
inc
bound
iret
and
movsb
xor
es
ljmp
mov
cmp
fstpt
rolb
inc
inc
and
scas
mov
inc
sahf
shrb
cltd
xchg
cmpsb
les
cmp
repz
inc
fidivrl
pop
mov
pop
out
sub
and
pop
rcr
sarl
je
or
sbb
or
decl
mov
inc
into
shlb
xchg
lods
inc
jecxz
inc
imul
aam
subl
adc
jp
movsb
dec
adc
pop
jle
xchg
lret
adc
xchg
pop
flds
jne
imul
push
mov
in
fisubl
rcrl
fidivl
dec
loopne
sti
lea
jbe
sub
ret
shrl
test
jno
pop
mov
mov
cltd
mov
push
xchg
sub
xchg
sbb
mov
jnp
sbbb
and
test
js
sbb
mov
jae
repnz
push
imul
rolb
pop
mov
fcoms
in
xchg
sub
rep
pop
mov
add
arpl
filds
dec
aam
mov
fildl
scas
add
scas
jle
aas
and
fisttps
fwait
ds
in
int
mov
test
fisttpll
push
jae
push
mov
sub
cmp
cmpsl
rclb
outsb
push
push
xchg
icebp
and
test
cmpsl
rcll
push
lret
leave
sub
lret
xchg
dec
scas
push
sbb
outsl
push
push
imul
les
aad
jo
adc
insb
in
scas
dec
lods
inc
dec
mov
aam
je
push
lods
mov
push
xor
or
popa
xchg
outsb
or
pushf
pop
inc
pop
jno
or
xlat
xor
rdpmc
cmpsb
xchg
mov
shlb
sahf
cld
jle
cmc
iret
loope
cmpsl
repz
sar
clc
rcll
xor
cmp
inc
and
dec
or
mov
xlat
push
sub
add
pop
or
aad
inc
insb
add
adc
push
ja
aam
mov
xor
cmp
xchg
aad
pop
inc
jae
rcrl
adc
int
xlat
xor
push
aaa
mov
aad
inc
pop
imul
bound
movsl
es
test
pop
ror
xchg
addb
loope
icebp
cmpsb
mov
adc
jno
mov
cmpsl
fsts
lea
dec
mov
cmpsl
mov
das
addl
minps
idivl
outsl
jmp
inc
sarl
movsb
cmpsl
adc
out
int3
xchg
sub
aad
adc
rcll
pop
sub
xor
and
gs
xchg
pop
dec
sub
jne
rol
shll
lock
cmpsl
adc
push
mov
mov
jno
imul
push
clc
and
fadd
cli
rcl
aas
mov
cmp
es
fchs
pop
movsl
push
imul
cmp
xchg
gs
add
test
hlt
xor
into
push
push
mov
xchg
rcl
sbb
loop
pop
mov
int
sbb
fcoms
scas
test
fst
or
add
je
xor
xor
movsl
pop
inc
repz
cmp
mov
push
cmp
orl
cmpsl
jb
cmp
shlb
pop
idiv
aad
inc
imul
sub
cltd
push
iret
fs
test
xlat
jmp
or
icebp
decb
je
in
add
sbb
insb
xchg
lret
rol
fsincos
stc
adc
or
push
out
lret
cld
cltd
sub
jmp
mov
int3
filds
inc
popa
push
mov
fnstenv
dec
sbb
pop
je
lea
adc
cmp
jmp
ljmp
sub
mov
xlat
mov
ss
inc
test
xchg
lods
inc
jmp
fcompl
jmp
lds
movsl
fnsave
pop
aas
mov
mov
subb
ds
cmp
sahf
pushf
int
movsl
ss
div
pop
movsb
mov
fsubs
rol
push
sbb
fdivs
jle
sbb
in
jl
or
push
fildll
das
dec
sahf
clc
nop
aam
pop
pusha
aad
mov
mov
cmpsl
ds
ja
fstpt
cltd
ret
adc
sti
cmpsl
or
out
xchg
inc
clc
lods
flds
fldcw
push
pushl
lds
aam
insb
jae
cmp
ds
or
inc
adc
or
sbb
sahf
push
std
stos
pop
mov
xchg
mov
in
mov
ss
or
push
xchg
aad
int
jo
das
int3
jae
adc
xor
xchg
movsb
enter
mov
mov
mov
cmp
mov
mov
sarb
out
stc
adc
push
mov
adc
ss
adc
scas
cmpsb
arpl
gs
jae
cwtl
inc
fst
add
inc
in
daa
lret
sub
cmp
pop
pop
dec
lods
xorb
out
jne
loopne
subl
int
pushf
mov
inc
lods
fisttpl
jl
ja
lret
mov
xor
mov
inc
mov
aas
sbb
mov
imull
fmull
fwait
jb
ret
sub
jge
fcomps
in
loopne
mov
jnp
int3
cmp
add
sbb
fldenv
push
insl
lods
push
push
xchg
nop
xchg
cld
mov
in
rolb
aad
mov
lods
insb
xor
std
lock
push
fwait
inc
in
aam
mov
push
push
std
hlt
lods
jae
imul
ja
xor
sub
push
cmp
mov
scas
push
stos
repz
or
in
mov
xor
adc
movsb
mov
imul
sub
call
stc
popf
sbb
adc
mov
fidivrl
mov
jle
sbb
jno
adc
adc
aaa
insb
sarl
scas
xlat
fwait
test
xchg
daa
stos
fsts
mov
xor
ja
js
leave
adc
or
jmp
insl
in
stos
daa
adc
lret
mov
insl
and
lcall
jecxz
jg
roll
and
jne
adc
out
loope
dec
mov
test
rorb
push
cmpsl
dec
push
inc
mov
sub
sbb
stos
xchg
jo
pop
sbb
jge
out
lea
pop
push
test
data16
out
mov
cmc
repnz
push
or
stos
lcall
pop
fldl
repz
fldcw
loope
aad
push
push
sub
ja
push
jno
roll
sahf
adc
add
js
lcall
scas
pop
pushf
icebp
cmpsl
imull
mov
lods
ja
leave
xchg
das
lahf
repz
adc
stc
cmpsl
add
xor
fs
jmp
mov
lods
add
rclb
mov
icebp
push
pop
jb
cltd
negb
movsl
cmpsl
mov
inc
sarl
repnz
mov
adc
inc
or
jne
fiaddl
xchg
out
pop
imul
cmpsl
mov
movsl
pop
cs
fwait
push
pand
mov
xchg
daa
les
or
mov
cmpsl
and
mov
jnp
scas
jmp
loope
push
mov
out
lea
sbb
js
out
jmp
imulb
lret
sub
aad
shr
pop
adc
sti
stos
xchg
stos
cmpsl
std
pop
ret
mov
and
iret
repz
or
mov
pop
cmpsl
push
jecxz
in
jp
dec
fisubl
push
push
mov
ret
and
sbb
jno
inc
push
add
jne
sbb
ja
push
stos
fisubl
xor
cld
push
mov
out
xchg
adc
push
ret
movsl
and
mov
cwtl
adc
push
mov
jae
pop
aad
push
adc
xor
mov
shr
ret
push
imul
pop
shlb
aam
xor
es
dec
and
jle
imul
lock
ficompl
add
jg
aad
inc
imul
clc
mov
sub
jmp
push
loop
call
das
xor
mov
and
xor
and
xchg
adc
xor
insl
repz
loop
jb
mov
fldl
xchg
fildll
mov
mov
cmpsl
andl
xlat
push
sbb
call
int3
inc
cmp
inc
add
dec
int
ret
imul
lret
mov
pusha
inc
sbb
dec
mov
ret
push
sub
fmuls
pop
xor
jl
iret
outsl
sbbb
test
dec
mov
ret
jg
sub
sbb
mov
adc
ja
sub
xchg
cmc
loope
and
mov
adc
repnz
es
or
or
call
push
loope
or
xchg
mov
jge
xor
xchg
aad
xlat
push
push
int
imul
mov
arpl
mov
adc
dec
fsts
adcl
push
push
popf
push
push
inc
pusha
aam
pusha
push
rcl
push
jecxz
rcl
adc
push
adc
push
xchg
pop
push
loope
dec
xchg
adc
ret
ret
inc
stc
icebp
fwait
dec
repz
repz
out
pop
fidivl
xlat
mov
outsl
jns
test
cmp
pop
inc
inc
cmpb
sub
mov
push
dec
add
or
mov
rol
cmpsl
pop
sbb
divl
adc
mov
inc
cmpsl
daa
pop
int3
outsl
mov
inc
lret
int
mov
repnz
jbe
push
ffreep
xchg
inc
test
ljmp
imul
arpl
rcll
icebp
in
mov
pop
mov
mov
and
cld
int
inc
push
ja
gs
sbb
mov
dec
movsb
data16
pop
add
sahf
xlat
movsl
rcrl
das
lret
lret
or
pop
xchg
jl
inc
mul
fwait
xchg
psraw
add
jae
inc
sub
lret
inc
pop
cltd
dec
add
jno
ret
or
xor
imul
cmpsl
mov
in
js
mov
insb
pop
jmp
test
push
test
aam
pusha
jl
arpl
jecxz
jp
jecxz
sahf
imul
in
mov
jnp
push
or
lea
push
xchg
int
pop
mov
aad
jg
jo
push
es
push
fsubl
fimull
mov
packsswb
dec
loope
jmp
jnp
stos
aad
mov
ret
call
adc
push
fmulp
aad
sti
jns
cli
ret
jmp
scas
xlat
dec
mov
jp
sar
test
xlat
nop
pop
dec
aam
mov
lock
andb
xlat
sbb
f2xm1
insl
repnz
popf
sbb
xchg
stc
xchg
flds
loopne
or
push
loopne
mov
push
or
enter
cmp
imul
pop
popf
mov
repz
xchg
xchg
fdivr
jbe
adc
nop
daa
inc
inc
add
mov
aam
jb
dec
stos
xor
lea
dec
fcmovne
xor
lret
pop
fidivs
es
cli
pop
int
push
cmc
ja
nop
repnz
inc
mov
ret
adc
out
fiaddl
jne,pn
test
mov
jo
xor
jo
dec
mov
inc
push
mov
lret
adc
shll
lcall
loopne
jl
test
scas
loope
push
cmpsl
xlat
push
lcall
mov
aaa
ficompl
das
lret
orb
inc
aas
inc
popw
out
dec
loope
inc
daa
xchg
cli
ror
jmp
shlb
push
mov
cli
jb
fcmovnu
incb
ja
or
mov
inc
mov
push
insl
dec
xchg
iret
mov
fidivrl
push
push
sbbb
adc
hlt
adcl
lcall
icebp
pop
icebp
push
movsb
mov
inc
sti
xor
dec
ds
and
xlat
hlt
mov
cmp
lods
bound
jle
lock
cmpsl
jno
sub
pop
lret
mov
push
jnp
sahf
dec
shll
mov
xor
adc
cmpsl
mov
inc
mov
inc
pop
std
fwait
xchg
push
push
iret
dec
mov
bnd
jmp
jg
jbe
fsubp
lods
fdiv
or
xlat
xlat
and
sub
or
jge
pop
dec
test
addr16
xchg
push
push
mov
stc
pop
mov
push
loopne
mov
je
xchg
fistps
icebp
lret
push
push
outsl
push
ljmp
pop
cmpb
cld
push
pop
xchg
rolb
inc
sub
and
jnp
in
mov
add
cmc
dec
das
add
mov
into
and
pop
rcll
fcoms
jle
push
lret
cmp
push
push
pop
push
jb
sarb
jle
cmc
scas
neg
sbb
xor
inc
jns
cmp
cmpsl
hlt
cmp
sarl
aam
rcll
call
sub
sub
rorl
imul
ss
or
mov
inc
lock
int3
sub
cmp
loop
fisubrs
and
and
sub
stos
shlb
pop
fisttpl
rcrb
push
fadds
xor
jo
or
shrb
xor
es
popa
push
pop
in
rcrl
pusha
je
lcall
pop
fdiv
insl
inc
in
aad
inc
xchg
cwtl
mov
fldenv
push
cmpsl
dec
mov
lret
push
stos
mov
mov
loop
adc
pop
inc
dec
mov
aas
ja
sti
jmp
sub
jl
cmpsl
rcll
push
lods
mov
inc
imul
test
into
xchg
bound
push
sub
adc
movsl
mov
inc
aaa
push
pop
fidivs
movq
adc
data16
daa
mov
in
aam
sub
mov
sub
cli
dec
ficoml
or
inc
mov
test
mov
fsubp
jno
fwait
adc
xor
mov
push
jns
push
inc
aaa
loopne
fucomi
lods
jl
aad
les
pusha
imul
dec
stc
pusha
mov
enter
rclb
xor
pop
or
pop
jno
nop
sbb
faddp
pop
in
xlat
add
repz
es
incb
jnp
sub
dec
rclb
cmp
inc
add
mov
jg
cmpsb
fisubrl
adc
xchg
mov
fistl
mull
push
mov
test
movsb
ljmp
into
es
loopne
insl
stos
mov
daa
movsb
pop
cmpsl
pop
stos
adc
stos
xchg
jb
ret
push
xchg
sub
cmpb
clc
cmpsl
fstpt
pop
push
scas
es
insl
xor
push
sbb
or
push
out
xchg
inc
lcall
loopne
mov
inc
ficoms
push
call
mov
dec
ret
push
es
cmpsl
pop
push
push
imul
sbb
pop
lea
je
lods
test
xchg
inc
dec
movsl
pop
jg
push
lcall
fsts
lret
push
jp
adcl
pop
icebp
push
lret
fndisi(8087
push
aam
mov
ret
imul
pop
stc
pop
adc
or
inc
outsl
test
jns
fists
mov
aad
rolb
sbb
jno
icebp
imul
movsb
imul
inc
jbe
lret
fisttpl
push
xchg
inc
cmp
cmp
pop
popa
mov
push
loope
adc
test
cld
iret
sbb
les
ja
and
outsb
rorb
loop
fidivl
fsubr
rcll
es
xlat
inc
int
imul
xchg
lock
push
or
cmp
das
inc
enter
sbb
shrl
cmc
jns
neg
add
ret
leave
ret
pop
ret
lahf
test
xlat
loop
xlat
lock
mov
mov
inc
jmp
inc
lret
mov
xchg
lock
inc
dec
fcmovnu
adc
push
fldl
xorb
insl
jp
out
in
das
adc
out
pop
xchg
jp
stc
inc
jae
mov
xor
xchg
aad
lock
fldcw
movsb
pushf
ret
lods
push
mov
scas
sub
push
sti
rclb
addl
xlat
jnp
test
pop
aad
xchg
and
das
xchg
lret
scas
mov
iret
in
sti
xchg
push
sub
pop
mov
inc
or
jge
fcmovbe
fidivl
cltd
xor
add
ljmp
enter
mov
outsb
loope
into
in
mov
fildll
cltd
jo
mov
add
push
inc
loope
lock
mov
xchg
mov
pop
loope
aaa
push
fstps
add
pushf
lcall
inc
es
pop
fmull
aad
repnz
pop
imul
mov
xor
bound
in
ljmp
pop
push
es
push
push
loope
addl
cli
mov
aas
lds
cli
and
mov
out
xor
stc
shll
ljmp
adc
sbb
cmpsl
pop
movsb
inc
insb
outsb
out
sub
cmp
inc
jnp
aaa
in
sbb
ficompl
add
mov
mov
push
add
xlat
scas
out
in
cmpsl
cli
xorb
xchg
adc
xchg
xlat
mov
fistl
add
ss
into
imul
addr16
mov
popl
in
ljmp
jno
cmpsl
outsb
add
push
enter
mov
mov
or
mov
jns
test
data16
notb
outsl
sbb
mov
xchg
mov
stos
shl
iret
adc
pop
outsb
mov
jb
xchg
sub
imul
imul
rcl
movsl
pop
jmp
dec
cmpsl
xlat
xor
enter
fdivrl
add
notl
xchg
xor
mov
stos
push
fcmovnu
push
or
push
dec
test
or
shr
push
jmp
sbb
stos
adc
xlat
arpl
add
fcomps
jg
adc
lds
sub
xlat
testl
adc
pop
mov
xchg
out
loopne
pop
fs
mov
jno
in
out
mov
push
arpl
xchg
add
inc
mov
cld
stos
add
sbb
loope
pop
cmp
sub
int
sar
push
push
movsl
inc
shl
aaa
fdiv
mov
push
jbe
sbb
shl
imul
rcll
xchg
int3
pusha
fucomip
repnz
mov
popa
addl
cltd
adc
addr16
jne
jp
inc
cld
push
cld
idiv
mov
jae
push
inc
xor
lods
xlat
scas
xchg
leave
cmc
aaa
fsubp
xor
jle
xchg
lret
lret
sub
in
jbe
or
inc
int3
cmpl
dec
lds
fimuls
fdivrs
xor
pop
clc
es
in
loope
popf
mov
in
fidivrs
mov
lods
test
sub
push
cmp
lods
clc
lcall
inc
insb
cmpsb
adc
inc
repz
jge
daa
add
fs
jne
adc
xorb
push
fcomip
mov
dec
cmpsl
scas
xchg
clc
icebp
rolb
in
xchg
pop
fwait
stc
xchg
mov
es
cmpsb
std
hlt
outsl
stc
aam
out
test
jmp
lea
ret
es
inc
movsl
xchg
add
je
pop
outsl
push
adc
fistl
outsl
mov
inc
fsubp
loopne
rorl
iret
sub
push
xchg
ret
push
dec
push
inc
push
shr
fisttps
or
fldenv
push
jle
mov
repz
imul
mov
fstpl
adc
in
repz
leave
or
imul
push
movsb
sub
inc
cmpsl
cld
xor
push
add
popf
fstpl
stc
and
jb
or
js
scas
es
inc
sbb
xchg
inc
push
mov
cmpsl
pop
inc
and
mov
xor
cwtl
push
pop
mov
push
mov
jno
fmul
movsb
xchg
jmp
incb
clc
pop
pop
xlat
dec
mov
push
cwtl
lcall
xlat
loope
iret
push
movsb
lods
xchg
add
roll
pop
push
cwtl
xchg
jns
adc
xchg
icebp
test
ret
push
in
aad
mov
outsl
enter
lret
pop
mov
shlb
pop
inc
ret
sbb
mov
ret
rolb
mov
mov
adc
xor
nop
jbe
jo
sarb
push
inc
sub
adc
testb
cmpsl
loope
sub
scas
es
jmp
xchg
cmpsl
mov
add
mov
mov
mov
mov
daa
push
fcomi
xor
push
jg
dec
ds
xchg
es
dec
xorl
fstp
dec
mov
out
sbb
bound
xchg
iret
dec
addl
jp
xor
lods
sub
imul
test
ja
jns
add
mov
rclb
xchg
xchg
mov
jno
inc
outsb
daa
inc
cmpsb
sub
in
sbb
cmp
sub
adc
add
icebp
leave
ud0
adcb
cmpsb
scas
inc
jle
out
sub
mov
insb
mov
in
jg
sbb
mov
xor
pusha
popf
pop
xor
dec
out
loope
hlt
sti
pop
outsb
and
sub
aad
js
xor
mov
mov
sub
clc
gs
jns
sub
scas
mov
adc
and
gs
aas
xchg
or
imul
stos
lret
mov
test
xchg
sub
lea
ja
jns
lds
xchg
out
daa
cmp
aad
sub
hlt
xlat
in
adc
push
jbe
test
xchg
cli
popa
bound
inc
stos
cmp
cmpsl
ret
mov
cmp
shrb
pop
leave
cmp
sub
aam
push
aad
mov
pop
aaa
jmp
pop
aam
inc
xchg
mov
sti
subb
aas
xchg
xchg
xchg
icebp
fisubl
jp
pop
mov
push
fcomi
push
xchg
cmpsb
fsubr
fisubl
leave
popf
or
iret
pop
inc
lds
mov
xchg
js
adc
fiaddl
push
jl
stos
xor
xor
cmp
ja
cltd
fs
and
push
and
in
xor
xchg
ret
cmp
scas
stos
lods
push
or
jno
aam
test
mov
mov
dec
inc
stc
ja
mov
push
cmp
xchg
push
fs
mov
loopne
out
pop
and
das
pop
ss
int3
movhps
gs
dec
scas
in
inc
cmpsl
int
pop
cmp
sbb
ret
mov
xchg
iret
shlb
cmp
enter
lcall
jg
xchg
push
push
pop
ret
push
les
adc
idiv
sbb
aad
imul
pushf
jle
dec
sbb
adc
cwtl
push
pop
loop
inc
sbb
lahf
lock
rcr
es
inc
sti
sub
dec
xor
xor
push
xor
ret
shl
push
xlat
adc
push
rcl
xlat
push
fcmovnbe
inc
fsubr
cmc
mov
cmp
fwait
mov
xchg
pop
adc
lret
pop
test
mov
ljmp
jnp
inc
sbb
cltd
xchg
cmp
hlt
xor
push
frstor
shll
insl
hlt
stos
icebp
jo
adc
xor
inc
lods
fadds
mov
pop
or
popl
in
notb
dec
fsubl
fmuls
inc
js
mov
mov
icebp
mov
pop
dec
mov
repnz
or
jae
ret
lret
xchg
test
ret
mov
cwtl
mov
loope
shl
popf
loope
loop
pop
xchg
cltd
nop
repz
test
xchg
fwait
outsl
call
cltd
mov
ljmp
ret
inc
test
test
cs
add
in
xlat
mov
cmpsb
xor
inc
stos
jns
jmp
push
loop
push
mov
cmpsb
xlat
lods
jne
pop
neg
push
ret
pop
das
cmc
and
out
jns
addr16
lretw
adc
fimull
shrl
pop
dec
and
dec
xchg
icebp
xchg
xchg
addr16
jae
inc
stos
int
adc
push
push
and
push
std
stos
xchg
cmc
pop
adc
mov
xchg
cmp
pop
addr16
lds
pushl
xor
add
lods
icebp
ret
jno
dec
les
outsb
stc
mov
fcomip
push
xchg
outsl
jbe
xchg
scas
mov
jmp
mov
push
cmc
ljmp
lock
mov
ficompl
add
push
xchg
cmpsb
popf
sti
adc
ficoms
and
lods
xchg
push
mov
xchg
nop
dec
push
mov
inc
mov
mov
ret
in
sbb
mov
jbe
les
fldcw
out
fcmovbe
stos
call
int
and
loope
in
aad
setae
inc
xchg
inc
sub
push
dec
insb
cli
pop
xlat
fsubrl
rcll
jl
add
cmpsb
push
mov
dec
rclb
int
in
jecxz
mov
fsts
cmc
shrl
notl
sub
es
ficoml
sbb
push
xlat
ljmp
shl
xchg
shrl
ja
aaa
lods
jae
cmpsl
imul
jp
divb
jl
insb
fcoms
aaa
sub
leave
lret
sub
and
mov
pop
dec
aaa
fcoml
lock
je
mov
adc
in
push
pop
pop
lods
scas
outsl
mov
nop
add
cmp
xchg
dec
sub
dec
in
jno
add
or
mov
fcoml
mov
push
imul
cs
repz
insl
mov
jecxz
scas
dec
clc
imul
stos
iret
or
push
jge
dec
aam
test
lods
in
cmp
inc
add
leave
inc
aad
jae
imull
mov
out
sub
bnd
and
int3
not
das
and
cs
imul
dec
stos
les
inc
cmp
inc
enter
jbe
xchg
insb
aad
lock
out
scas
push
xchg
xlat
loope
push
push
movsb
test
or
mov
xchg
mov
in
movl
lret
fwait
jecxz
push
mov
sti
sbb
jecxz
dec
scas
cmpsl
je
mov
inc
out
lds
pop
jo
sti
cmpsl
fnstcw
fcomip
lret
rol
pop
dec
test
scas
push
int
testl
adc
rcrl
pop
add
pop
out
fstpt
out
aas
mov
ret
sub
aaa
xor
lea
push
shrl
inc
sub
loopne
scas
movsl
xchg
push
gs
scas
pop
xor
push
inc
xchg
dec
es
jle
cmpsl
adc
add
pop
xchg
pop
filds
jb
jb
jno
and
dec
scas
xchg
jg
into
lock
xchg
filds
jb
insl
mov
lods
jl
pop
or
sub
lds
fsts
xchg
adc
sub
cli
sbb
ret
cmp
jge
shlb
loop
inc
orl
test
arpl
cmp
pop
mov
insb
jmp
or
push
scas
mov
inc
fldl
test
jb
adc
leave
jl
add
daa
inc
mov
and
scas
call
jg
popa
lret
fistpll
cmc
xlat
stos
xchg
fcmovu
or
mov
pop
insl
in
sbb
into
movsb
leave
add
cmp
or
and
dec
mov
sarl
mov
fsub
stos
outsl
mov
out
adc
out
mov
xchg
imul
bound
inc
xchg
cld
cmpsl
inc
ja
das
mov
lret
rcrl
xor
sub
repz
movq
gs
inc
sub
stos
insl
xlat
dec
adc
push
dec
jmp
lea
sti
pop
dec
rcrb
int3
xchg
mov
jno
sub
inc
lods
inc
push
push
lods
fcompl
bound
sbb
aad
jo
cld
fisubrl
and
cli
cmpsl
mov
scas
pop
push
jae
mov
xlat
repnz
fbstp
push
add
inc
add
pop
cmpsl
ret
testb
aad
loopne
pop
add
or
or
adc
mov
cmpsl
add
lret
outsb
sbb
fstpt
sub
inc
adc
add
push
adc
sub
out
mov
push
pop
mov
and
movsl
inc
insl
inc
mov
mov
mov
cmpsl
pushf
and
pop
pop
inc
scas
inc
aad
xchg
daa
xchg
bound
sbb
scas
shl
repnz
dec
test
sub
out
push
mov
xchg
push
mov
jp
or
loopne
into
repz
cltd
xor
push
aaa
imul
mov
out
cmpsl
nop
push
aas
xchg
fstpl
mov
cmpsl
imul
add
shrl
jne
xchg
mov
xchg
dec
cmpsl
addr16
js
outsb
das
es
pop
dec
in
cmpsb
inc
cmpsb
mov
mov
sbb
pop
cmp
pop
aas
jp
sub
adc
mov
push
mov
xchg
push
jne
dec
shrl
sarl
mov
sbb
mull
inc
jae
lds
ret
adc
mov
fisttps
xchg
stc
inc
mulb
jne
mov
xchg
inc
mov
in
xlat
inc
pop
dec
mov
nop
idivb
cmpsb
sbb
mov
sub
ret
xchg
inc
daa
mov
sub
stos
repnz
ret
or
mov
shlb
gs
loope
fstpl
inc
flds
repz
jns
iret
dec
xchg
loop
mov
aad
lock
inc
adc
cld
pop
scas
and
stc
xlat
xor
and
xlat
mov
scas
inc
fistpll
cltd
stc
mov
pop
decb
adc
fildll
je
mov
stc
jp
mov
dec
lock
inc
fcomps
mov
mov
cmp
push
rorl
lret
popf
inc
sbb
mov
test
out
mov
test
in
jp
mov
icebp
adc
sbb
das
aad
ret
movsb
scas
inc
stos
mov
cwtl
sahf
fdivs
xor
cmpsb
push
xchg
push
in
lret
xchg
icebp
shlb
inc
loope
sbb
aam
ret
loope
call
xchg
arpl
jnp
pop
shl
out
shrl
imul
sbb
fwait
push
inc
ret
imul
into
mov
xchg
or
push
fimull
and
xchg
repnz
aad
jmp
jge
jno
mov
int3
mov
fstps
cmc
movsb
aad
push
xchg
fcomip
stos
inc
out
xchg
imul
fwait
cmp
inc
jns
and
sbb
pushf
cli
out
cmpsl
outsb
sbb
push
sub
or
mov
add
push
sub
jle
lock
data16
mov
push
in
adc
clc
inc
pop
inc
into
pop
ficompl
daa
push
inc
adcl
daa
outsb
push
push
adc
imul
xchg
fmul
lock
cld
mov
add
adc
xchg
mov
mov
cmp
subb
mov
cltd
push
xor
jb
insl
icebp
rol
movsl
mov
fnstenv
es
pop
mov
add
xchg
inc
adc
cmpsl
cmp
xlat
cmovae
shrl
xchg
call
cmpsl
jmp
mov
es
mov
mov
lea
fistl
push
jge
pop
mov
or
fwait
mov
arpl
dec
sti
rcrl
pop
mov
mov
inc
pop
rcl
push
add
fldt
cmpsb
inc
mov
mov
inc
or
out
das
nop
xlat
lods
cmpsl
or
je
mov
pop
add
xchg
arpl
out
fsubp
loope
hlt
rcrl
test
test
xchg
es
mov
fidivl
in
int3
inc
inc
sub
or
in
sarl
fs
lret
aam
cmp
jp
inc
aas
cmp
aam
jb
jae
xchg
jns
inc
movsl
cmpsl
add
lods
sub
repnz
mov
xor
lret
mov
push
jo
daa
aam
sbb
xchg
xchg
sarl
hlt
sub
mov
inc
xchg
insl
lods
pop
icebp
dec
and
addl
push
fildl
jns
mov
ljmp
icebp
aas
inc
add
add
int
in
jnp
rclb
mov
cmc
dec
jno
pop
xlat
mov
mov
hlt
push
jo
jmp
or
inc
pop
jp
arpl
jecxz
stos
push
xor
repz
int3
neg
adc
dec
and
push
add
aad
cmpsl
jmp
sbb
out
lds
cmp
mov
add
aad
mov
and
jns
add
lret
aad
add
in
shrl
sbb
dec
test
lds
popf
jb
imul
cmc
mov
fldenv
ret
in
roll
data16
aad
or
inc
pop
int3
fisttpl
lock
arpl
mov
fiadds
roll
mov
mov
lret
rcll
test
cmp
and
fists
enter
and
pop
test
add
test
pop
inc
inc
add
pop
aad
xor
push
insb
sub
icebp
lea
jle
ficoml
movsl
shrl
not
mov
mov
mov
clc
loop
adc
jb
xlat
mov
lret
adc
js
les
push
jns
lahf
pop
mov
cmc
xor
cmp
cmp
pop
fidivs
ret
scas
sub
pop
adc
push
push
test
fnsetpm(287
dec
andb
fbstp
mov
daa
mov
ret
sub
fcmove
arpl
adcl
sbb
outsb
das
xorl
aad
mov
xlat
push
cmp
xchg
repz
xchg
dec
aad
popa
push
dec
aad
sbb
test
fucom
scas
or
sti
out
stos
rorl
shr
lcall
mov
push
aaa
ffreep
xor
xchg
sbb
aas
fadd
adc
lods
sbb
ffreep
pop
mov
and
dec
sbb
sbb
fists
jmp
xchg
cmp
push
mov
adc
pop
jmp
pop
mov
jecxz
testl
in
je
test
mov
out
jae
xchg
sub
push
xchg
ret
shrb
pop
push
sub
xchg
repnz
mov
incb
inc
lock
mov
repz
xchg
push
mov
adc
dec
lock
roll
repnz
cli
dec
lds
fsubrs
shl
xor
xchg
xlat
fmuls
mov
aaa
jle
mull
jae
roll
loope
leave
xor
adc
das
fdivrl
addl
mov
psllw
mov
mov
lods
jne
movl
test
xor
incb
lock
sub
push
sub
mov
gs
add
xchg
outsl
dec
pushf
push
mov
push
push
mov
data16
and
ficoms
int3
jns
lock
mov
xchg
pop
lret
jecxz
sbb
mov
jge
add
add
fwait
jnp
les
xchg
and
insl
lods
repnz
icebp
fdivrs
or
inc
scas
out
sahf
jbe
js
jbe
xchg
cmpsb
add
sub
mov
add
sbb
pusha
int
pop
and
ret
std
cld
jge
and
xchg
mov
lea
xchg
ret
out
pop
jmp
add
jecxz
xor
fwait
pop
sti
fiaddl
sbb
ret
iret
jmp
rol
mov
jecxz
fcomi
std
sbb
ret
inc
scas
data16
pop
stos
div
sbb
icebp
pop
mov
test
sub
leave
rorl
lds
jmp
das
inc
adc
sbbl
dec
popf
dec
lahf
dec
cltd
dec
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
in
dec
out
dec
jmp
fcmove
dec
in
leave
dec
out
lret
dec
loope
lds
fcmovb
dec
std
fcmovb
dec
fcmovb
dec
stc
fcmovu
dec
sti
fcmovu
dec
cmc
fcmovu
dec
neg
fisttpl
fcmovbe
dec
repz
dec
int
rorl
pop
xlat
mov
loop
shrl
mov
movsl
ljmp
mov
ljmp
rclb
into
sub
mov
xor
adc
repz
jp
test
fisttps
mov
push
pop
xchg
test
and
push
nop
repnz
movsl
inc
mov
enter
pop
lea
mov
sbb
aad
das
inc
nop
xacquire
stos
mov
cmpsl
dec
sbb
stc
lock
mov
icebp
xchg
insb
xchg
repnz
inc
aad
out
test
test
repz
test
int
jb
repnz
inc
dec
fcmovne
xchg
inc
icebp
pop
ret
xlat
pop
xchg
ret
repnz
inc
sti
xlat
inc
and
and
fistl
ds
scas
jge
repnz
adc
inc
loope
rcll
repz
fbld
xchg
mov
in
xchg
dec
loop
mov
mov
jnp
int
or
pop
and
lds
fidivl
xchg
push
or
lcall
in
push
sub
xlat
xchg
xchg
jo
inc
xchg
sbb
jmp
imul
dec
push
jmp
call
mov
outsb
fucomp
xchg
jo
inc
in
sbb
mov
fucom
xchg
jo
inc
loopne
pusha
mov
mov
pop
stos
dec
gs
xchg
jo
inc
sti
sbb
cli
mov
jns
clc
xchg
jo
inc
lcall
jg
mov
jge
cld
xchg
jo
inc
repz
repnz
jno
lock
jo
inc
negl
ja
mulb
mov
xchg
jo
inc
lret
mov
mov
dec
xchg
jo
inc
into
sbb
int
dec
ljmp
jo
inc
ret
mov
mov
inc
ffree
xchg
jo
inc
sbb
lds
inc
fstp
xchg
jo
inc
ficompl
pop
xor
ficoml
sti
inc
sbb
sbb
and
je
imul
jle
cmp
loop
es
movsl
mov
aas
xchg
cmpsl
mov
mov
fldenv
mov
aad
adc
imul
inc
lcall
aad
sbb
movsb
iret
aas
cmp
mov
lods
fstp
adc
lcall
xchg
imul
popf
add
fwait
mov
cwtl
mov
and
push
dec
xlat
cli
sbb
and
nop
inc
pop
cmp
add
mov
movsl
xor
pop
jo
stos
inc
fnstsw
mov
insb
xchg
xor
add
je
xchg
inc
fldt
or
fdivrl
ljmp
mov
loopne
pop
shrb
xor
inc
fsubl
loope
inc
adc
sbb
inc
fcomi
pop
mov
mov
sbb
imul
ds
push
clc
sbb
xor
and
adc
jmp
xchg
cld
inc
ss
mov
enter
pop
fwait
jl
movsb
leave
mov
pop
movb
push
adc
xor
jmp
jmp
pop
repnz
es
leave
cmp
ljmp
popa
fstps
hlt
pop
shl
xchg
stc
scas
int
jb
inc
fcmovnb
das
xchg
pop
mov
lods
jo
stos
cltd
int3
add
or
mov
sub
mov
or
mov
sbbb
idivb
or
adcl
imul
outsl
lods
fwait
and
cmpsl
xchg
pop
sbb
mov
dec
mov
xchg
out
out
pop
push
mov
dec
in
movsl
fimull
mov
pop
or
fwait
lds
lret
repnz
mov
lcall
test
mov
jecxz
ret
jb
inc
loope
aad
pop
pop
out
inc
push
mov
imul
and
mov
ret
jmp
xor
leave
pop
push
aad
nop
bnd
inc
int
sbb
cmc
pop
insb
aad
nop
repnz
inc
std
xchg
loop
sbb
in
jp
xchg
aad
xchg
repnz
inc
dec
fwait
fwait
mov
cltd
notl
loope
ret
pop
aad
nop
ret
repnz
cs
xchg
icebp
and
addl
shlb
arpl
mov
lods
lret
pusha
jns
mov
out
fldln2
hlt
sub
jmp
xchg
lret
jp
loop
or
sub
ja
icebp
fcmovu
fs
jae
in
dec
je
nop
dec
jmp
jb
jmp
ja
lock
jmp
add
pop
iret
and
sbb
popa
jmp
ret
cmp
test
aas
ret
jmp
push
fcmovu
in
test
pop
iret
mov
xchg
idivl
scas
xor
push
dec
ret
insl
mov
push
daa
lods
int3
mov
ret
inc
push
push
lret
push
roll
dec
jmp
push
jb
mov
pop
into
daa
in
xchg
fisubl
subl
sub
add
fcomps
lods
das
push
sbb
mov
clc
add
inc
ss
lds
stc
dec
xor
jae
insb
inc
outsl
fistl
fadds
hlt
dec
sti
divl
cltd
int
push
cmp
jns
lods
jne
int3
xchg
daa
xchg
lcall
pop
jp
cwtl
ret
icebp
jns
pop
fs
xchg
repz
std
mov
shll
push
xorb
insb
fmuls
aad
sbb
xchg
jmp
sbb
push
es
mov
lret
mov
int
fsubs
shll
scas
mov
sbb
repz
mov
or
jno
insb
mov
mov
pushf
cld
loope
negl
mov
test
aas
test
cs
jo
and
sbb
mov
cmpsb
pop
pusha
loopne
jmp
add
es
pop
test
mov
adc
pop
popa
out
inc
lds
subl
adc
push
stos
fcomps
ljmp
imul
stos
aad
adc
inc
ja
jne
loope
jo
jmp
cmpsl
mov
jns
or
out
mov
repnz
xchg
jns
fisubrl
imul
orb
andb
jns
lods
jmp
xor
ljmp
mov
sbb
fwait
or
cli
js
flds
add
xchg
and
dec
sbbb
mov
push
add
and
add
lret
mov
in
cli
sbb
mov
jmp
aaa
cmpsl
insb
repnz
fsqrt
and
mov
fwait
leave
cmp
repnz
nop
jbe
and
inc
les
fwait
cmc
popf
popa
cmp
lret
xchg
xchg
clc
test
mov
repnz
ja
lock
sub
fldt
mov
inc
stc
xlat
testb
push
pop
stc
sbbb
fisttpl
fistpll
add
icebp
xchg
jo
xchg
ja
fisttpl
scas
xchg
xchg
scas
and
xchg
sbb
andb
fcmovnbe
mov
mov
sbb
and
push
xchg
std
mov
faddl
add
or
stos
lcall
arpl
daa
dec
jmp
push
rclb
cmpsl
int3
xchg
push
pop
jmp
mov
scas
or
fcmovnu
jg
fbld
push
ja
dec
negl
loop
out
push
push
jg
xchg
add
ficompl
in
rclb
stc
mov
pop
daa
dec
add
inc
xlat
jne
pop
xlat
ds
icebp
xor
repnz
xchg
sbb
mov
and
lret
xlat
add
add
jno
xlat
scas
xor
rcl
add
loop
xchg
clc
mov
and
xlat
stos
movl
insl
push
add
rolb
add
cltd
inc
pop
mov
xchg
bnd
sbb
sub
je
insb
and
loop
inc
pop
es
pop
mov
icebp
mov
dec
xchg
inc
rol
jnp
mov
nop
cs
xchg
cltd
neg
repnz
rol
xchg
lods
adc
xchg
pop
and
fistpl
inc
outsb
mov
xchg
jno
ret
pusha
add
mov
sbb
mov
pop
ret
rclb
xor
pop
in
add
sub
pop
lds
aad
out
test
fstpt
adc
push
sub
icebp
push
mov
xchg
push
data16
stos
ret
adcb
pop
out
mov
push
cmpsl
cmp
inc
ret
lock
inc
imul
icebp
sub
bnd
aam
ret
fnstcw
mov
mov
jmp
xchg
cmpsb
stos
and
xor
xchg
in
xor
pop
adc
imul
je
scas
imul
fsts
cmp
lods
in
push
fldenv
in
ficoml
cltd
adc
mov
xchg
mov
insl
and
xlat
cli
adc
sub
adc
pop
es
repz
aas
sbb
out
popf
jns
negb
fisubrs
js
hlt
mov
mov
pop
xchg
xchg
test
cli
cmc
testl
sbb
cmc
repnz
inc
js
jo
pop
push
adc
repz
ret
sbb
push
inc
inc
and
cmp
adcl
aad
adc
mov
mov
inc
jmp
sbb
ds
pop
pop
es
pop
mov
lret
jae
inc
cmpsb
sbb
push
pop
mov
or
loopne
iret
jns
inc
rcl
test
jmp
cmpsl
fldl
xor
test
lcall
repz
sti
shl
fistpl
mov
jbe
pushf
add
aad
jb
roll
xchg
add
adc
mov
mov
rolb
pop
push
movsl
jmp
push
push
pop
jmp
lock
imul
test
lcall
dec
push
fldenv
shll
loope
lods
cs
pop
push
jns
add
sbb
lret
sub
or
pop
leave
loopne
sub
movsb
ret
jge
jmp
in
xor
rol
sub
mov
xchg
idiv
add
lahf
mov
fstp
or
rolb
rclb
mov
jae
aad
mov
pop
lods
jle
pop
adc
jp
mov
movsb
mov
push
or
ret
clc
rorl
enter
or
ret
sub
shrl
fists
cmpsl
push
lahf
lds
inc
insl
add
pop
imul
xchg
repnz
roll
es
mov
sub
add
cli
or
adc
and
pop
cmp
cltd
cmpsl
inc
sbb
ret
sbbb
mov
cwtl
cmp
popf
mov
pop
mov
jb
pushf
xchg
jae
repnz
lahf
sbb
lcall
movsl
xlat
push
mov
adcb
loope
dec
ret
push
scas
pop
repnz
and
nop
lock
in
adc
out
push
cmp
fnstcw
enter
loop
mov
ret
push
pop
jmp
or
stc
jo
ret
cmc
das
pop
lock
std
mov
push
inc
lret
mov
jb
pop
fsubrl
ljmp
negl
fwait
sbb
scas
sub
fidivrl
cmpsb
testb
data16
fldl
jle
add
push
fadds
and
sub
cmp
ror
pop
add
mov
sbb
mov
push
clc
lahf
mov
pop
or
rcl
push
pop
pop
ss
dec
insl
adc
inc
mov
jae
xchg
fisttpl
fcoms
orb
fdivl
movsl
jo
nop
iret
pop
out
jp
sbbb
iret
aad
es
sbb
xchg
lret
out
ss
stos
dec
sub
enter
shlb
xchg
jae
or
stos
mov
jg
adc
pusha
aas
add
dec
mov
xlat
mov
fwait
xor
adc
sub
inc
lcall
push
shr
ret
jnp
imul
push
adc
push
es
mov
add
int
mov
or
out
mov
push
mov
xor
sbb
daa
xchg
sbb
push
insl
or
imul
adc
roll
mov
ss
ljmp
fcmovnb
shl
aam
pop
lret
fidivl
jnp
movsb
fwait
or
or
lods
lods
inc
cmpsl
in
xchg
daa
int3
or
fnstcw
xlat
shrb
push
inc
aas
dec
xlat
shrl
jle
and
incb
ret
ret
jns
lcall
lret
sbb
jmp
rcr
sarb
cmpsl
sub
dec
adc
xchg
cmc
stc
dec
xor
es
negl
adc
fwait
pop
lock
or
rclb
lea
cmpsl
sbb
hlt
push
mov
lcall
sti
and
inc
lock
ret
push
lods
test
insb
sbb
pop
sbb
xchg
test
sub
fnstenv
addr16
fcmovne
or
movsb
mov
push
repz
add
mov
adc
ss
aaa
in
push
lret
dec
das
ficoms
mov
push
push
shlb
fadds
sub
mov
cwtl
decl
dec
scas
xor
pop
xlat
int3
lea
mov
into
ror
mov
clc
xor
mov
mov
mov
ret
clc
enter
dec
fsts
pop
fld
pop
mov
sbb
mov
test
inc
stos
cmc
mov
dec
mov
push
das
or
or
loop
int
cmc
lahf
mov
inc
mov
xchg
adc
mov
cmc
xchg
and
icebp
arpl
sub
popl
mov
xor
dec
clc
in
mov
repnz
fmull
testl
inc
jp
ficoms
out
fistl
cmpsl
and
in
stos
mov
xchg
sub
jmp
jb
ret
inc
inc
adc
cmp
aas
mov
fcomp
rclb
aam
sarl
pop
mov
push
xorb
xchg
sub
adc
dec
mov
aad
scas
pop
push
scas
dec
test
lds
jnp
add
in
adc
pop
orl
mov
cmc
sbb
call
mov
mov
jmp
adc
sbb
fadd
pop
into
leave
rcrb
dec
mov
fisttpl
movsb
bnd
and
pop
sbb
inc
loop
xlat
dec
sub
add
sahf
mov
mov
negl
jo
inc
push
pop
lds
pop
sbb
leave
sub
scas
cmp
cs
pop
inc
nop
inc
cmp
fwait
pop
xchg
mov
leave
repnz
in
xchg
cmp
mov
push
cltd
leave
inc
inc
add
lahf
rolb
dec
jo
fistpl
inc
xor
xchg
repnz
fwait
mov
lds
icebp
xchg
mov
or
mov
adc
push
testb
rcr
aas
iret
cs
outsl
movsl
fsts
in
out
mov
sbb
enter
xchg
and
add
and
iret
ja
mov
mov
shrb
call
inc
mov
jne
xchg
or
inc
add
mov
sahf
or
stc
mov
cmp
scas
cmpl
fldt
mov
insb
imul
or
or
cmp
xchg
outsl
push
ret
test
nop
push
pop
lahf
stc
mov
out
jmp
scas
jmp
or
in
xchg
aad
jae
jecxz
iret
jno
sub
lods
lret
mov
push
stc
cmpsl
rcll
xor
stos
adc
or
or
jle
xchg
into
pop
mov
push
ss
jge
outsl
xchg
mov
xchg
test
movsl
add
out
pop
fxsave
jl
icebp
outsl
js
loop
inc
xor
mov
fcomps
movsl
cltd
adc
shlb
mov
fucomp
cmpsl
mov
les
cmovno
ret
pop
aad
mov
js
mov
js
or
fsubrl
inc
mov
cltd
adc
mov
cmp
inc
nop
dec
ret
loope
pop
adc
lahf
rorl
mov
dec
mov
lret
mov
pop
and
pop
push
push
pop
fistpl
push
fdivrl
daa
leave
popa
xor
adc
inc
xor
fnstenv
insb
xchg
mov
aam
rclb
jb
jmp
pop
mov
fnstsw
xchg
sarb
xlat
mov
cmpsl
pop
pop
pop
test
rcrl
add
xlat
fistpl
mov
xor
push
out
or
sbb
dec
push
not
inc
lods
pop
adc
and
test
sbb
es
aam
xchg
sub
dec
xchg
iret
and
mov
push
push
xchg
xor
aad
adc
ret
adc
pop
mov
repnz
shl
sub
loope
push
jae
loope
adc
loope
pop
lret
sarl
lret
push
stos
shrl
lds
fnstcw
mov
jbe
aas
jge
lds
ficoms
xor
int3
shll
movl
loop
hlt
mov
ja
mov
and
pop
inc
fstps
std
cs
int3
jmp
and
xor
pop
icebp
mov
adc
repnz
outsl
aam
or
stos
adc
outsl
mov
adc
fmull
cmpsl
ja
cmp
es
ret
dec
cmpsb
fidivrs
loope
rorb
mov
jle
or
adc
fsubl
mov
mov
repz
cmpsl
inc
es
int
cmp
divl
sub
sti
sbb
fld
lret
push
ljmp
loopne
push
in
push
fadd
les
mov
fistpl
mov
mov
xchg
jle
sub
lds
sahf
cs
scas
adc
call
jae
sbb
rorb
pop
daa
push
fdiv
frstpm(287
icebp
cmpsb
movsb
inc
orl
shlb
stos
pop
lret
xchg
and
fwait
notb
nop
adc
inc
add
popf
repz
jb
cmp
or
xlat
sub
cmpsb
fdivrl
scas
pop
xchg
lret
push
push
inc
rclb
or
rcll
dec
rcrb
inc
cmc
ret
icebp
gs
lds
fdivrl
rcr
add
aas
ret
sbb
imul
out
aad
pop
jl
icebp
mov
andl
xor
and
sub
pop
das
inc
data16
mov
push
sahf
sbbl
xchg
test
out
hlt
fildl
call
jae
jle
loope
gs
inc
insb
movsb
mov
aad
adc
std
mov
lahf
mov
fildll
cmpsl
cmp
inc
add
xchg
lcall
aad
jb
fwait
mov
jb
inc
movsb
mov
dec
shl
dec
fadd
push
inc
icebp
dec
notl
jnp
inc
mov
lret
cmp
in
fidivrl
js
lods
pop
hlt
movsl
icebp
lock
adc
nop
sub
add
dec
orl
cmpsl
mov
add
pop
adc
mov
pop
sbb
sub
xchg
out
outsl
sub
cmp
mov
jns
xor
es
push
add
fidivrl
aas
ffreep
dec
or
popf
imul
cmp
xor
test
out
repz
push
hlt
rolb
sbb
inc
add
in
cmp
into
mov
js
test
cmp
flds
push
int
sbb
push
leave
adc
pop
test
inc
bound
or
fisubrs
es
jp
roll
fstpt
xchg
dec
lret
or
push
fcoms
xchg
out
icebp
jno
dec
lods
cmp
in
push
loop
mov
sarl
leave
adc
aas
test
daa
fsubr
push
das
sbbl
mov
add
fildl
xchg
fwait
xchg
enter
jp
testl
cltd
ljmp
fstps
movsl
jo
roll
inc
inc
xlat
jcxz
int3
inc
xlat
dec
xor
push
pushf
fidivl
sarl
pop
ffreep
leave
icebp
mulb
inc
mov
jmp
adc
sbb
push
ret
xor
insl
xchg
test
loopew
arpl
cmp
in
dec
mov
ja
stos
shrl
cli
dec
fcmovu
fistpll
xchg
cmpsl
aaa
jmp
and
fcom
xchg
icebp
cmp
mov
pop
icebp
xor
fnsave
mov
mov
fdivrs
fbld
pop
int3
pop
cli
cwtl
mov
xor
mov
mov
fs
cwtl
add
cwtl
jle
insb
jo
inc
notl
mov
aad
fmul
addb
lock
cmpsl
mov
pop
and
test
jb
icebp
shlb
add
inc
iret
cmp
push
mov
mov
xor
aas
mov
roll
pop
mov
mov
inc
pusha
rclb
sarl
push
mov
loopne
outsb
xchg
pop
add
or
and
jae
repnz
pusha
mov
ds
fadds
xor
lods
inc
pushf
add
fcoml
mov
filds
sbb
aaa
sti
adcb
xor
sbb
pushf
pop
add
push
es
popa
pushf
inc
pop
cltd
popa
cmp
dec
fildl
ret
sbb
es
fwait
push
xor
adc
pop
push
sbb
pop
sbb
cwtl
adc
push
xchg
mov
dec
add
xor
lods
sub
xor
scas
outsb
dec
bnd
fdivl
inc
into
mov
xchg
jno
dec
adc
outsl
xchg
jle
int3
clc
jp
mov
pop
pop
lea
js
mov
cmp
aad
pop
das
push
scas
cld
imul
shlb
mov
mov
test
stos
adcl
mov
imul
out
mov
repz
cmpsb
clc
std
cmpsl
in
mov
ret
and
out
imul
mov
and
inc
mov
int
pop
ret
jnp
mov
mov
adc
xorl
dec
cmc
pop
and
shlb
pop
aad
jbe
ss
movsb
rcl
push
js
hlt
ds
fcmovnu
aaa
lret
rcll
icebp
cmp
mov
adc
aad
loopne
fcmovnb
shl
fldl
enter
jnp
mov
les
xor
shl
cmp
ret
push
aas
pop
pop
xchg
scas
test
sbb
das
sahf
add
sbb
rcr
int
leave
negl
fwait
cmp
data16
cli
hlt
mov
icebp
jmp
in
out
in
ficoms
xchg
notb
pop
xchg
stos
push
push
and
mov
mov
idivb
xchg
lods
and
adc
outsl
or
fistps
fmull
xchg
cli
lcall
or
push
xchg
bound
outsl
xor
mov
adc
iret
jo
cld
fisubrl
xchg
testl
rcl
adc
pop
xor
sbb
ret
stos
fnstenv
xor
and
aas
push
int
sub
pop
xor
xchg
cmpsl
sbb
dec
xchg
xor
imul
sbb
addr16
jge
or
icebp
aad
out
mov
add
es
fiaddl
cmpsb
pusha
ljmp
jle
cmpsl
push
adc
pop
aas
sbb
xor
push
sub
test
pop
mov
xorb
scas
mov
pusha
fnsave
mov
dec
iret
inc
es
ret
xchg
add
push
jmp
cmp
cltd
shl
push
imul
push
ret
push
in
pop
adc
shll
adc
add
movsb
push
pop
cmp
int
icebp
in
adc
mov
ret
ja
shl
push
fldenv
fs
jle
xlat
in
in
pop
xor
ret
cmp
mov
cmp
push
testl
push
push
mov
aam
sbb
push
icebp
xchg
adcb
fimull
movsb
jmp
xor
pop
test
fildl
inc
fcmovnbe
roll
into
idiv
sbb
insb
or
pop
lock
inc
out
xchg
xor
jnp
fidivrl
fidivrs
pop
ds
or
pop
cmp
ret
push
add
arpl
enter
xchg
dec
in
cmp
rcrl
loope
jnp
ret
jl
xchg
insl
imul
mov
dec
xchg
jl
leave
enter
icebp
jb
pop
aad
push
pop
leave
cmp
fnstenv
stos
push
leave
add
mov
ficompl
movsl
scas
cli
addr16
pop
xor
fisubl
ret
notl
add
add
inc
adc
sbb
inc
inc
jmp
repz
cli
cmp
fstpt
ret
outsb
pop
adc
add
or
xchg
xor
mov
inc
stos
mov
rcrb
mov
dec
test
loop
ds
rcr
aas
xchg
jmp
nop
pushf
xor
ja
mov
xor
fsts
repnz
outsl
jp
pop
inc
mov
es
xchg
or
js
pop
out
clc
inc
es
addl
sbb
inc
jl
clc
fists
sbb
fisubs
inc
fldcw
xor
lock
mov
lcall
arpl
mov
push
fidivrl
int
jbe
pop
cmp
clc
icebp
in
cltd
pop
add
mov
cmp
and
fcoms
in
rcll
and
xlat
popa
cmp
loope
or
loop
ds
push
xor
imul
roll
addb
mov
es
mov
popa
jmp
movsl
sbbl
pop
div
xor
cli
push
outsb
lcall
inc
repz
enter
rcr
sbb
aas
sub
mov
cwtl
and
sarl
std
inc
iret
xor
js
jo
pop
sbb
xchg
pop
leave
cwtl
jo
mov
adc
fidivrs
imul
dec
pop
lods
lahf
rclb
inc
add
loope
push
sbb
mov
cmp
mov
inc
xor
and
popa
shl
xor
cmp
out
jmp
fidivs
sti
jp
add
nop
jle
sti
push
cwtl
loope
stc
popa
push
popf
out
in
add
pop
mov
popa
xchg
inc
push
cmp
fnstcw
dec
mov
adc
lret
jecxz
ret
and
adc
jp
mov
mov
sbb
ret
movsb
lods
pop
stc
fidivrl
addr16
rcrl
popf
loope
push
lock
push
inc
xchg
ffreep
jo
xchg
hlt
in
icebp
inc
out
and
jno
lret
aam
fsubrp
lock
mov
lret
rclb
repz
xchg
adc
fildll
fisttpl
fwait
xchg
sbb
inc
jl
jae
je
cmp
cli
mov
or
or
xor
and
jg
fisubrl
aad
jg
fiaddl
dec
divl
loop
vcvtss2si
fiadds
xchg
lds
fcomi
orb
fildl
lds
adc
pop
add
in
cwtl
dec
loope
out
adc
insl
mov
in
pop
jecxz
adc
cs
std
inc
xor
outsl
inc
into
loopne
loopne
fstps
cmc
popa
outsb
scas
inc
addr16
shrb
mov
ret
shr
enter
aas
mov
cltd
pop
fcomps
xchg
adc
fidivrl
jecxz
inc
sar
loopne
xchg
mov
mov
cmp
cmp
into
pop
scas
jl
shlb
ret
xchg
push
std
loop
lds
test
mov
out
cmp
adc
mov
inc
cmp
sub
mov
std
mov
pop
mov
xlat
repnz
shr
xchg
mov
fistl
mov
push
fistpl
rol
fdiv
dec
sbb
iret
mov
aas
rcrb
xor
std
sub
aad
ficoms
mov
daa
push
inc
inc
loope,pt
add
fisttpl
icebp
cltd
out
lock
ret
fistl
jp
mov
jg
inc
in
mov
xchg
scas
fcomp
mulb
xchg
push
pop
inc
negl
add
loop
sarb
mov
jnp
inc
aam
cmpsl
ja
sti
sub
inc
inc
and
cmpsl
xorb
or
xchg
in
mov
mov
rorl
adc
arpl
ficoml
rcrl
rcll
shll
push
lods
pop
fadds
mov
and
sub
mov
lods
iret
fistl
cmp
lods
inc
repz
fistl
jnp
cli
fsubs
or
repnz
aaa
xorb
pop
jg
fisttpll
adc
ljmp
test
lret
mov
pop
std
cmp
fidivrs
fcmovnb
test
and
lahf
dec
stc
xchg
xor
cmpsb
push
jmp
mov
sbb
sub
ret
push
lock
mov
xchg
xchg
dec
inc
sbb
ljmp
mov
xor
sub
test
inc
es
scas
push
pop
cmpsl
mov
dec
lods
cwtl
adc
push
mov
rolb
repnz
fsubrl
repnz
dec
push
lcall
cmp
push
dec
inc
inc
xchg
xlat
jae
pop
mov
mov
imul
mov
sub
jg
jnp
pop
out
popa
pop
ret
inc
inc
aad
mov
jmp
out
dec
xchg
cmpsb
sti
or
inc
bound
sbb
in
and
inc
pusha
inc
pop
sub
sbb
xlat
jmp
mov
cmpsl
xchg
sahf
xchg
negl
out
lret
push
repnz
xchg
sub
fwait
or
in
cmp
adc
mov
addr16
fmuls
and
or
xchg
mov
mov
mov
inc
mov
sbb
xchg
sbb
pop
stc
xchg
xchg
jno
cs
aas
jnp
mov
xchg
inc
jg
jbe
fstpt
pop
dec
cmp
dec
sahf
pop
inc
xchg
adc
cmpsl
inc
mov
xlat
lcall
push
andps
in
sbb
loop
mov
xor
in
dec
sbb
add
fistl
mov
cld
pop
insb
fiaddl
xchg
xor
pop
mov
pop
fcmovnbe
roll
repz
sbb
sbb
int
mov
inc
or
mov
mov
icebp
out
add
mov
add
inc
fstps
inc
jne,pt
je
or
scas
ret
add
imul
stos
push
sub
out
pop
mov
cwtl
xchg
repnz
cmp
cmp
add
pop
inc
arpl
aad
push
rcl
sbb
jl
imul
dec
sbb
mov
pop
out
pop
jp
call
icebp
cltd
jp
inc
pop
mov
sub
mov
cltd
ret
inc
xlat
lret
lock
mov
out
jno
pop
inc
sti
pop
mov
cmc
xchg
das
pop
xor
iret
jae
cmpsl
xor
repnz
test
jae
xchg
inc
xchg
pop
aas
xchg
rorl
mov
fidivs
mov
mov
cld
pop
ret
inc
pushf
dec
dec
mov
enter
pusha
mov
jno
push
or
jmp
js
into
fnop
pop
jns
icebp
mov
repnz
out
xchg
and
mov
int
xor
fisubl
loope
push
mov
and
lock
dec
sarl
sarl
rcll
push
test
ss
xchg
lds
cmp
outsl
pop
pop
scas
sbbl
stos
iret
jge
movsl
testl
jno
lahf
std
jnp
inc
mov
dec
cmp
jl
pop
pop
das
xchg
inc
notl
jmp
nop
xchg
int3
xlat
test
dec
shlb
cmpsl
fwait
mov
jle
stos
xor
cmpsl
call
or
sbb
sub
cli
pop
subl
cmpsl
xchg
negb
inc
jmp
das
or
popf
and
pop
cmpsl
imul
jp
adcb
stc
js
cmpsl
fwait
enter
andl
icebp
fsubs
jp
xor
fstpl
scas
adc
cmc
cli
sti
ljmp
adc
int3
shlb
mov
mov
outsl
mov
js
call
pop
ljmp
lds
mov
loop
sbb
cmp
inc
mov
fidivrs
push
inc
sub
xchg
fimull
js
lea
cltd
push
and
in
jecxz
pushf
jns
push
inc
jecxz
add
bound
pop
stos
test
fincstp
mov
mov
jbe
icebp
or
andb
mov
fists
jb
sub
test
xlat
aaa
stos
inc
jae
clc
inc
lods
je
scas
adc
xchg
aaa
jmp
fwait
cwtl
mov
xchg
lahf
xor
xchg
pop
pop
pop
les
nop
cltd
mov
jg
and
sarb
xor
movsl
jo
scas
xor
adc
xchg
cld
loope
mov
xor
andl
mov
jne
loope
outsl
jnp
add
jo
inc
mov
setl
icebp
insl
pop
je
or
mov
or
mov
int
xchg
pop
jb
lds
jg
xchg
iret
push
inc
mov
aam
and
les
daa
loope
push
call
ret
test
pop
je
inc
es
shr
jno
pop
fistl
adc
mov
cmp
sub
inc
repnz
nop
inc
xchg
cpuid
add
repnz
xchg
pop
int3
add
imul
fisubs
xor
push
fsincos
jnp
mov
imul
lret
push
inc
add
sti
cmp
xchg
test
addr16
ja
mov
mov
inc
iret
out
mov
mov
out
lcall
jno
adc
mov
xchg
mov
sub
repz
adc
mov
mov
sub
hlt
push
inc
lea
out
mov
fidivl
pop
mov
inc
mov
fs
pop
call
out
and
aam
adc
sbb
ret
adc
xchg
dec
rorl
in
rcll
push
fcomps
mov
sti
add
test
out
pop
icebp
iret
scas
dec
xchg
popf
out
fildll
and
xchg
and
orl
push
scas
imul
mov
push
cmp
out
mov
adc
pop
inc
pop
fildl
add
dec
out
notb
push
inc
xchg
inc
stos
mov
inc
inc
xchg
jo
dec
shlb
addb
pop
inc
pop
xor
pop
popf
mov
repnz
pop
ficoml
xchg
out
lahf
cmpsl
lods
repnz
xchg
aaa
stos
xor
rcrb
xchg
fwait
mov
loope
fwait
inc
out
or
inc
sub
icebp
xchg
hlt
popf
lcall
movsb
xlat
xchg
sbb
iret
hlt
xchg
cltd
mov
insb
pop
xchg
imul
insb
xchg
cli
mov
mov
inc
setns
and
sbb
inc
or
xchg
cs
jbe
andb
out
imul
sbb
xchg
mov
test
enter
lea
out
pusha
addl
mov
fcoms
dec
push
insb
fucomi
jbe
ja
fdivrl
rorb
inc
sub
mov
sub
loopne
dec
in
rcr
enter
dec
insl
or
out
outsb
and
mov
mov
cld
adc
out
aad
lret
std
aam
dec
xchg
sub
leave
and
sti
inc
lock
xor
xorl
shrl
xchg
shl
cmpsl
add
pop
out
fldenv
cmp
pop
pop
repz
lods
inc
mov
pop
xor
push
fstpt
mov
pop
pop
hlt
xchg
mov
fptan
popl
subl
sbb
cmp
scas
mov
rcl
test
aad
clc
push
lret
ja
cmp
pop
pushl
xchg
roll
xor
shll
in
sub
es
test
or
jl
dec
mov
dec
ret
ret
ret
sub
testb
mov
push
xchg
cld
inc
repz
mov
add
fwait
xchg
pop
jecxz
lock
fstpt
adc
lahf
adc
pop
lret
push
fldcw
fnsave
dec
push
mov
repnz
fs
lea
mov
divl
jns
xchg
adc
xor
jnp
push
xchg
push
cli
sbb
xlat
std
pusha
push
rclb
shrl
push
loopne
dec
dec
and
cmp
adc
xchg
rclb
out
pop
fstps
push
scas
or
inc
push
pop
push
adc
rep
or
sbb
pop
xchg
lret
cmp
jge
nop
sbb
push
int
repnz
lods
int
out
inc
cmp
imul
sbb
ss
mov
jo
popa
icebp
vandnps
and
vxorpd
ror
aaa
fcos
mov
add
jnp
stos
sub
inc
addr16
icebp
inc
out
xchg
inc
mov
xlat
test
inc
jo
mov
outsb
f2xm1
adc
outsl
xlat
adcl
xchg
inc
xchg
xorl
push
mov
shll
int
jbe
test
mov
dec
lea
and
fsts
push
dec
push
or
repz
insb
pop
inc
jmp
out
fcompl
daa
or
inc
xor
jl
xchg
sbb
sbb
shl
daa
popf
jns
jb
cmovae
or
pop
cmp
jb
push
xchg
jmp
xchg
leave
jno
int
inc
xchg
jno
int3
mov
push
jae
ret
push
inc
inc
cs
nop
dec
xchg
ljmp
hlt
mov
es
popa
cli
mov
aaa
pop
jg
fdivrp
rcll
mov
xchg
in
cmpsl
movsb
pusha
mov
xor
dec
pop
push
push
pop
pop
js
inc
ret
mov
js
popf
pop
mov
fildl
dec
aaa
outsb
pop
popf
add
jae
imul
mov
scas
je
xchg
mov
pop
out
cltd
es
jge
in
jno
cld
inc
xor
jle
sub
insb
xlat
test
push
test
fldt
in
ret
push
pop
push
ljmp
jp
cmpsl
and
xchg
shrb
adc
lcall
out
cwtl
stos
jo
sbb
jo
daa
push
fsubp
stos
sti
or
lcall
repz
in
das
ficoms
jl
mov
fists
cli
jne
outsb
mov
cmpsl
movb
jge
add
and
add
bound
push
pushf
mov
loop
or
mov
push
lcall
mov
icebp
call
aas
stc
lods
lcall
mov
and
mov
aad
jge
push
scas
outsb
xchg
fsub
movsl
jmp
jns
pop
ja
mov
inc
pop
loop
fwait
push
mov
out
xor
loope
ret
adc
scas
xchg
fldt
jae
sbb
push
inc
stos
pushf
sbb
gs
fcmovu
lret
mov
aad
cmp
cmpsb
and
mov
xlat
cmc
nop
add
cmc
push
fldenv
inc
scas
and
popa
sbb
jmp
and
xchg
int
scas
fwait
lods
xchg
call
inc
mov
jnp
lahf
pop
inc
mov
or
fs
push
stc
loopne
and
inc
mov
hlt
pop
sub
xacquire
sahf
mov
push
jmp
into
or
xchg
xor
xchg
daa
xchg
std
add
nop
lock
popa
add
pop
inc
add
sbb
stos
push
inc
test
inc
or
xchg
das
cwtl
clc
dec
sbb
cmpsl
shlb
xchg
outsl
sbb
stc
popf
mov
mov
push
pop
adc
ret
mov
in
fdivrs
je
rolb
inc
pop
fwait
inc
pop
insl
ja
test
movb
mov
jg
xchg
inc
insl
mov
add
cli
push
movsl
adc
push
ljmp
push
rol
es
mov
jae
sub
aad
dec
pop
xlat
jne
repnz
inc
imul
dec
test
xchg
cld
mov
in
cmp
mov
filds
call
repnz
mov
ljmp
hlt
in
push
mov
sub
push
adc
sub
xlat
inc
lods
pop
lret
sar
loopne
ljmp
lcall
mov
add
sbbl
xchg
cmpsb
jnp
jp
push
or
sti
scas
fimull
aad
jns
sahf
in
lret
fildl
rcrb
inc
inc
pop
ja
pop
push
ficoml
dec
sti
test
inc
insl
sub
sub
pop
imul
les
dec
mov
cltd
aad
rorb
ds
cmpsb
cmp
inc
in
repz
mov
fcomp
jmp
mov
sub
mov
cmp
and
xlat
lods
xlat
ret
sbb
ret
jecxz
das
fildl
or
negl
mov
jae
xlat
in
es
inc
fldcw
pop
push
push
pop
sub
outsl
shlb
fnstenv
pop
mov
pop
daa
aas
cmp
cs
test
push
dec
or
inc
cli
addr16
xchg
leave
push
daa
gs
mov
jmp
xchg
add
fstpt
rol
lahf
fists
sbbb
inc
int
mov
push
adc
dec
mov
adc
scas
add
vmovdqa
inc
into
scas
inc
cmc
js
ret
xchg
push
adc
daa
xlat
jmp
and
add
mov
inc
mov
push
cmp
pop
shrl
pop
sbb
lret
mov
sbbl
inc
xchg
jbe
popl
data16
addb
lock
fildl
fdivp
ret
pop
jno
div
pop
sbb
pop
pop
into
pop
les
movl
not
lea
aad
ljmp
lret
push
rcrl
ret
ret
ret
jmp
lret
es
lock
add
xchg
jb
insl
xchg
iret
ret
pop
ljmp
int
sub
test
imul
negb
xor
jg
xchg
xchg
xchg
inc
mov
jns
inc
inc
insb
pop
fistpl
adc
xchg
jns
adc
scas
ss
cmp
call
jb
push
inc
mov
lock
call
roll
lahf
rol
mov
pop
and
icebp
lea
xchg
loope
inc
sbb
add
jno
dec
lea
add
scas
fisubl
pop
clc
add
mov
es
jno
dec
xorps
dec
cmp
in
daa
sub
pop
repz
cmp
insl
mov
adc
gs
xor
pop
push
inc
rcr
stos
push
xchg
jno
jecxz
sub
imul
lahf
sarb
lds
xchg
insb
aaa
dec
lret
shl
clc
cltd
pop
dec
inc
xchg
bound
sub
jp
repnz
push
cld
lret
inc
mov
stc
add
and
xchg
jl
jmp
inc
enter
sbb
mov
out
mov
add
outsb
mov
push
cmp
inc
inc
sbb
xor
dec
aaa
jbe
xor
mov
inc
jg
adc
sahf
jg
xlat
fwait
jns
push
imul
inc
out
xchg
add
jp
repnz
pop
fxtract
lds
mov
inc
adc
fstl
aam
popa
push
mull
daa
push
xor
xor
not
add
sbb
fdivl
out
cmpsb
sbb
pop
xchg
fildl
sahf
test
outsb
stos
mov
lret
sbbb
inc
jb
negl
fisttps
jp
or
fstpt
fstps
adc
mov
cli
jbe
nop
das
test
jb
xchg
xor
es
pop
js
aam
cmp
jb
adc
dec
jmp
fcoms
sbb
jmp
fldenv
jbe
imul
mov
stc
fdivrs
xor
cmpsl
js
ret
mov
shlb
dec
test
cli
pop
pop
pop
lret
jno
pop
rclb
incb
fsts
ss
jmp
sbb
loope
push
daa
fdivrs
scas
xchg
xchg
scas
leave
jecxz
push
lock
xchg
cmp
add
and
ret
cmp
jmp
fwait
jle
cmp
dec
in
imul
mov
loopne
sub
or
ret
xor
mov
mov
cmp
pop
into
stos
xchg
ficoms
cwtl
test
push
jno
push
sbb
xchg
scas
pop
rorl
xor
shlb
rorb
sarl
adc
imulb
xor
rcll
dec
inc
lret
lea
pop
mov
mov
push
push
jmp
fdivrp
xchg
jae
pop
pushf
leave
mov
out
jae
and
adc
js
loope
xchg
jo
cmp
lock
push
push
mov
pop
es
mov
arpl
outsb
xchg
and
mov
mov
cmpsl
sti
pop
dec
rcl
fnsave
inc
pop
pop
insl
aam
iret
xor
mov
jne
dec
pop
jne
test
jle
sub
adc
push
xchg
cmc
dec
mov
aaa
push
insl
push
ret
adc
fldcw
sub
push
insl
testl
call
std
sarl
sbb
mov
push
js
push
inc
call
test
mov
cli
pop
pop
mov
lds
cld
rcll
mov
and
stos
testb
fcmovu
arpl
mov
cmpsb
xor
or
int
mov
inc
loope
mov
jns
call
adc
xchg
ret
in
ljmp
shll
adc
cmp
pop
adc
sbb
shlb
outsl
xchg
pop
sbb
push
shll
jg
sub
mov
cmp
mov
std
test
sbb
and
lods
fcoms
add
scas
scas
shrb
jb
push
cli
sti
jne
push
movsb
cs
add
xor
sbb
aam
xor
inc
mull
insb
xchg
jne
mov
stc
scas
fnsave
ret
lahf
cmp
inc
aam
rorb
cmp
jne
jno
dec
fst
or
adcl
jo
les
movsb
cmp
mov
mov
inc
and
dec
mov
fwait
dec
pop
cmpsl
ds
mulb
cmp
adc
push
imul
js
cmp
pop
push
mov
mov
add
push
ret
test
aaa
in
hlt
jmp
pop
test
pop
cmp
dec
fcmove
jmp
test
lock
test
mov
add
push
aas
popa
lahf
int3
cmpsb
dec
adc
add
sbb
fwait
loopne
icebp
inc
shlb
popf
push
lock
incl
inc
aad
cld
xchg
sti
jb
mov
repnz
daa
mov
add
jmp
mov
stc
push
xorl
xor
mov
xchg
xchg
lods
sbb
mov
pop
inc
shl
addl
arpl
cmpsl
std
scas
shlb
rcl
rcll
xchg
xor
sbb
adc
inc
iret
in
iret
lahf
xchg
inc
rcrb
repnz
inc
xlat
pop
add
loop
lret
pop
aad
lock
xchg
jl
xchg
mov
out
or
aad
stos
mov
movsl
in
push
pop
push
imul
push
cmp
push
xchg
mov
cs
xlat
out
jno
leave
sbbb
data16
iret
std
mov
gs
nop
inc
mov
std
inc
cld
add
dec
loop
sbb
mov
fistpl
test
jmp
adc
push
mov
inc
lcall
mov
call
push
cmpsl
fmulp
insl
es
cmc
inc
aad
mov
jne
dec
dec
ficompl
rorl
fistps
push
cs
fdivl
xchg
dec
loope
pusha
fwait
stos
outsb
xor
push
mov
dec
aas
mov
js
scas
ss
sbb
mov
imul
jbe
das
imull
shlb
push
and
xchg
test
pop
jecxz
cmpsl
mul
sub
xor
xor
ret
push
pop
lret
lcall
fildll
arpl
jae
xor
push
fsts
ds
lahf
cli
in
or
inc
inc
jmp
jge
sbb
icebp
mov
aaa
inc
lret
xor
cld
cmp
fistpl
xor
cli
aas
push
push
ficoml
lahf
pop
pop
pushf
push
add
test
maskmovq
divl
fcmovnb
jbe
mov
fwait
rorl
inc
lods
dec
push
xlat
pop
pop
ret
addb
stos
lods
xchg
add
xchg
push
jl
mov
push
fdiv
cmp
data16
outsb
add
repz
push
cltd
add
inc
mov
sbb
pop
test
jg
inc
mov
filds
pop
adcb
adc
jp
inc
out
push
inc
fstl
lcall
dec
mov
daa
orl
inc
insl
jnp
fistps
pop
rcrl
pop
lods
pop
push
pop
pop
rcrb
dec
ret
jl
rcrl
mov
xchg
pop
sbb
add
adcl
imul
sbb
dec
sub
push
daa
push
push
mov
fadds
scas
les
mov
mov
and
mov
xlat
or
rcrb
lds
psadbw
mov
ja
sub
orl
in
sti
cmp
xor
nop
mov
mov
outsl
std
push
cli
das
cltd
das
fidivl
inc
add
pop
inc
jnp
push
fidivl
push
or
and
subb
sbbl
xchg
fldt
fisttps
inc
xchg
mov
xchg
icebp
data16
sub
dec
fimuls
jge
mov
fdivr
jg
fcmovnb
xchg
stc
inc
fwait
jge
mov
dec
stos
push
pop
arpl
ret
or
cltd
push
xlat
mov
pop
fcoms
pop
aaa
in
lds
mov
pop
mov
push
inc
scas
xchg
in
int
icebp
sbb
mov
fldcw
fcomps
fcmovb
aad
pop
lahf
cmp
cwtl
je
lcall
sub
loopne
inc
jl
imul
out
leave
data16
inc
out
dec
xchg
or
push
dec
lods
pop
fmuls
pop
jbe
push
sti
mov
mov
loop
sbb
mov
insl
xchg
pop
xchg
ficoml
mov
addl
jae
test
icebp
jp
fimull
scas
scas
fsts
sahf
test
push
jne
jb
daa
jp
push
aam
jg
sbb
jg
mov
adc
or
out
xchg
stc
sub
rcr
jnp
ret
xchg
mov
add
pop
lahf
pop
aad
rcrl
mov
sbb
ret
xlat
fsubs
jl
std
mov
lods
les
mov
mov
movsb
shll
inc
inc
xchg
xchg
jo
adc
jle
lret
ficoms
mov
xchg
fiadds
mov
into
pop
imul
push
filds
xchg
icebp
or
cmpsl
scas
pusha
cltd
inc
sti
push
mov
fcmove
ljmp
pusha
dec
and
fstp
sub
arpl
push
rcl
ss
mov
test
lea
cs
enter
jle
fsubrs
mov
adc
jmp
les
xlat
xor
gs
ret
jmp
ja
popa
ljmp
sub
sbb
test
xlat
icebp
fs
cmc
cmpsl
and
jl
dec
popf
inc
leave
lock
or
out
leave
inc
in
xor
xchg
and
das
addr16
popa
arpl
cmp
pushf
dec
fstpt
scas
fs
popa
bound
xor
popf
ret
roll
cmpsl
mov
mov
sbb
fstpt
loope
cmc
fs
scas
fldcw
rcr
enter
sub
test
fsts
push
push
cs
and
jge
pop
fldcw
ficoml
aam
cmp
cmpsl
cmp
mov
push
nop
into
mov
pop
in
cmpsl
mov
push
icebp
aam
xchg
icebp
lea
jle
loopne
fstps
ret
jns
movsb
sbb
hlt
popa
notl
jae
fildl
rclb
inc
sbb
popf
daa
outsb
js
shrl
or
xor
lock
mov
pop
cmp
ficompl
jns
push
test
ret
call
rcll
leave
icebp
cmp
or
sub
mull
pop
das
je
and
sti
addr16
push
push
cli
sub
sbb
jp
inc
in
mov
ljmp
inc
adc
bound
push
aad
pop
test
dec
lahf
inc
ljmp
push
jg
push
sahf
std
fidivrl
jge
cs
pop
fnsave
jno
rol
push
push
je
dec
aad
scas
cltd
xchg
inc
into
inc
pop
sub
push
mov
mov
mov
sub
add
adc
mov
cmpsl
cltd
jne
pop
sbb
dec
jmp
pop
cmp
jp
xchg
cltd
mov
jmp
cmpsl
int3
ret
dec
clc
int3
es
and
cld
xchg
xor
and
mov
inc
test
jbe
xor
test
cmp
mov
cmpsb
movsl
roll
jg
mov
repnz
jle
pop
ret
out
xchg
sbb
hlt
fisubl
cli
hlt
in
cmpsl
cmp
push
xchg
lret
incb
cmp
jno
dec
xchg
or
rcrb
out
js
clc
fidivrl
int
aaa
mov
lods
sar
xchg
or
cld
insl
sbb
pop
mov
loope
cltd
adc
fcmovb
push
mov
es
aaa
push
push
pop
mov
outsb
xchg
cmpsl
rcrb
aad
subps
loop,pn
les
mov
dec
cmpsl
imul
adc
xlat
js
ljmp
xor
arpl
int
int3
or
lret
mov
cmpsb
dec
loop
push
scas
dec
jo
xchg
push
fnsave
cmc
xchg
or
in
push
leave
cmpsl
sbb
jp
pop
fisubrl
or
repz
loopne
fisubs
ret
inc
push
sbb
rclb
push
cmpsl
les
push
and
adc
loop
jne
mov
cltd
push
ficoml
cs
xchg
push
cmp
shrb
data16
addr16
fidivl
add
add
xchg
sarb
jbe
pop
xchg
sub
pop
cmc
imul
lock
popf
xchg
xor
and
mov
push
enter
add
fstl
lods
dec
popf
fsts
iret
xchg
imul
scas
fdivrs
xchg
rolb
ljmp
dec
add
in
test
or
movsb
jns
stos
cmp
rolb
aad
pop
dec
loopne
mov
icebp
rcll
adc
ficompl
push
jp
cmpsl
sbb
mov
repnz
imul
call
stos
sub
ds
xchg
enter
mov
aad
xchg
inc
stos
ds
leave
lods
and
shll
lods
pop
mov
outsl
jbe
adc
ret
mov
mov
sbb
icebp
aaa
mov
sub
movl
mov
int
jg
iret
scas
stc
and
subl
gs
mov
idiv
js
rcll
aas
jnp
jb
mov
icebp
pop
jmp
in
int
adc
xchg
mov
mov
cld
cmpsl
dec
inc
aam
push
cmpsl
in
inc
mov
mov
jge
mov
call
cmpl
scas
adc
push
xor
jb
sti
xchg
iret
int
les
daa
xor
iret
fsubrs
adc
mov
jmp
call
mov
or
clc
push
mov
dec
data16
test
sub
xchg
dec
jno
dec
dec
dec
pop
fucomi
push
loop
pop
lds
fidivrs
jo
mov
cli
rorb
loope
lahf
sub
imul
push
ret
movsb
movsb
sti
adc
or
arpl
or
jge
int3
cmpsb
scas
inc
sti
mov
adc
inc
ds
xchg
adc
sub
jae
push
into
icebp
jl
ja
mov
fistpll
shll
shrb
xchg
ja
in
scas
or
rcll
test
mov
test
test
repz
les
push
dec
jno
jne
out
cwtl
stos
push
insl
lds
mov
jno
mov
jno
inc
iret
adc
jne
das
ret
ret
pop
sub
dec
cmpsb
std
xchg
daa
xchg
or
dec
fcmovu
pop
arpl
repz
ficompl
sbb
push
fiaddl
cmc
orl
push
push
imul
scas
popf
out
repnz
ret
out
dec
inc
xor
xchg
mov
mov
xlat
mov
out
mul
pop
jbe
fcomps
jp
xchg
push
ja
fs
mov
xor
int
aaa
jbe
faddl
push
xchg
xor
pusha
sahf
push
insb
rclb
sub
rcl
dec
push
xor
ss
push
mov
mov
sbb
adcl
xor
mov
jge
cmpsb
inc
pop
sbb
jno
jb
aaa
out
adc
xchg
iret
pop
xchg
cli
adc
sbb
stos
sahf
xchg
divl
test
shll
jmp
pushf
add
xor
std
hlt
es
pop
mov
jl
testl
mov
cmpsb
push
pop
sub
test
out
xor
jge
out
daa
sbb
cmpsl
loope
stc
repz
ja
into
rcrl
dec
shll
in
pop
cmc
loope
fcomi
jnp
neg
jns
push
xchg
mov
lcall
rcrb
mov
adc
adc
rcl
imulb
mov
fbstp
scas
push
in
inc
and
repz
mov
pop
and
jp
nop
loope
sahf
adc
sbb
and
shl
mov
jns
subl
jae
dec
movsl
repnz
push
mov
jl
or
in
cmp
dec
fnstsw
lahf
jb
sbb
cwtl
nop
ret
mov
cltd
enter
dec
mov
jp
jno
ja
pop
inc
push
imul
push
xor
or
adc
in
sub
fnstcw
pop
pop
cmp
sbb
push
push
dec
fldcw
lea
or
push
lcall
icebp
jnp
shr
mov
push
adc
cmc
fistps
fs
sarb
popa
scas
ljmp
aam
mov
lock
jg
ja
out
ret
in
movsl
aam
jmp
cs
xchg
sbb
pop
fiadds
in
imul
hlt
pop
jbe,pn
or
inc
dec
cmc
rolb
jne
mov
inc
xor
cmpsb
scas
test
xchg
cli
stos
gs
test
in
mov
add
dec
in
jl
mov
adc
mov
xchg
lret
adc
fsin
ret
sub
jle
inc
push
enter
mov
pop
decl
repnz
and
cwtl
xchg
mov
mov
ret
repnz
icebp
stc
popa
pop
jmp
testl
xor
fisubrl
xchg
cmpsl
aad
mov
and
idivb
fcomi
movsb
jno
dec
testl
inc
inc
in
pop
fcom
xchg
daa
pop
mov
or
std
daa
push
sbb
xor
cmp
aas
push
or
xchg
push
and
cmp
xchg
cmp
xchg
repnz
fcompl
jne
cs
sbb
repnz
inc
pushf
cmc
cmp
negl
cmp
mov
rcr
outsl
inc
int3
cmp
ja
gs
lock
mov
push
sub
and
push
ret
push
cmpsl
repnz
repnz
push
or
shrb
shrw
outsb
das
outsb
jmp
repnz
movl
xlat
daa
inc
pop
pop
cmp
adc
sti
add
iret
insl
jbe
popw
inc
loope
pop
push
adc
or
movsl
mov
shl
push
fcompl
dec
popa
sub
jne
sub
fisubrl
shl
inc
xor
lret
repnz
ds
ret
rcl
cmp
jp
and
lock
orb
sub
xchg
xchg
lods
fistpl
insl
xchg
je
sub
shlb
pop
adc
sbb
inc
mov
das
aad
imul
shll
std
cmpsl
xor
push
lods
xchg
scas
adc
sbb
sub
jne
ret
jo
add
pop
mov
dec
ret
cs
cli
cld
scas
aas
sbb
fwait
icebp
lahf
fmull
das
xor
mov
fcmovbe
inc
out
xlat
mov
shl
cli
shl
imull
adc
sbb
add
pop
mov
mov
pand
inc
xor
mov
xlat
pop
adc
xchg
movsl
fisttpl
mov
jns
es
sub
and
fcmovne
lds
icebp
jb
pop
push
daa
mov
loope
idivl
xchg
cmp
pop
xorb
js
jne
cmpsl
pop
inc
scas
adc
push
ficomps
outsb
jae
mov
xlat
aad
adcb
add
clc
not
and
pop
xchg
cwtl
test
lret
cmc
dec
inc
add
idiv
pop
xchg
jns
aad
bound
pop
pop
lods
ret
das
in
jno
ret
mov
add
xchg
lcall
sarl
xchg
repz
aam
andl
fcmove
lret
push
out
scas
push
jno
push
rorb
rcll
cli
pop
shll
inc
push
lock
cs
and
adc
fimuls
dec
push
lods
gs
push
repnz
fsubs
dec
sub
mov
jecxz
hlt
jno
push
lahf
mov
pop
movaps
xchg
cmpsl
jecxz
add
int
les
xchg
xchg
fistl
xchg
sar
inc
mov
popa
out
in
inc
sahf
inc
fs
popf
daa
repnz
jl
insl
xlat
loopne
outsb
shr
pop
or
fstpt
pop
cs
cmpsb
cmp
lret
mov
scas
add
das
mov
enter
xchg
fdivr
xchg
sbb
cli
adc
bound
jecxz
add
jg
push
sub
aad
sub
mov
hlt
xchg
ret
stos
ljmp
fstpt
aaa
add
xor
icebp
or
push
into
lods
lahf
xor
dec
xlat
std
sbb
sbb
push
fstps
mov
jl
dec
loopne
jns
ljmp
mov
sbb
rorl
sbb
push
dec
popf
icebp
xchg
nop
repz
inc
les
push
adc
mov
clc
js
jae
insl
scas
call
jno
push
scas
xchg
repnz
into
repz
bnd
inc
add
mov
push
mov
repz
and
and
inc
cmp
inc
cwtl
cmpsl
add
xchg
mov
call
insb
daa
movsl
mov
inc
lock
fnstcw
inc
xchg
cli
pusha
icebp
idivl
incb
in
fistpl
dec
test
leave
sbb
test
mov
test
pop
popf
jae
pop
sarb
mov
mov
in
nop
xchg
repnz
leave
xchg
mov
dec
and
sbb
dec
dec
xchg
push
mov
mov
test
push
int
mov
jge
jnp
fcmovnu
std
push
xchg
jno
push
je
mov
mulb
inc
sti
shrl
push
popa
inc
xchg
fistl
jg
jl
shrl
mov
dec
xchg
test
ret
inc
mov
sarl
jle,pt
adcb
jb
fwait
jmp
inc
jo
les
jbe
push
fadd
pop
popa
cltd
insb
fldt
adc
and
push
mov
fildl
xchg
dec
mov
dec
xlat
pop
repnz
xlat
xchg
aam
enter
addr16
and
pop
and
dec
xchg
testb
loop
inc
jmp
push
imul
cmp
cs
cli
aaa
push
dec
lea
rorb
mov
iret
and
xlat
cmpsl
inc
xchg
adc
shr
add
repnz
popf
cmp
inc
adc
adc
sub
adc
fwait
aad
sub
jmp
mov
gs
sbb
imul
out
cmp
rorb
sbb
testl
insb
adc
popa
push
sub
push
sahf
imul
lret
xchg
or
jae
pop
outsl
xlat
inc
scas
inc
scas
int3
inc
ret
jmp
pop
aad
fcmovu
cmpsb
subb
cmpsb
mov
inc
sbb
xchg
lods
imul
fisubrl
insb
fadds
push
inc
adc
lret
pop
test
pop
adc
sti
sub
jne
or
cmpsb
iret
movsb
jge
repnz
mov
repz
inc
pop
lock
shll
stos
fs
repz
and
shrl
push
mov
sbb
cs
sub
shl
scas
fwait
mov
cmpsl
adc
push
repz
lahf
repz
imul
rcr
out
jbe
mov
jns
push
inc
fldcw
xchg
adc
mov
push
sbb
inc
loopne
or
cmp
bnd
adc
pop
insl
out
stos
cld
dec
sbb
bound
test
fistl
aas
mov
jmp
xlat
test
mov
icebp
pop
add
pop
add
fistpl
mov
cwtl
jb
cmp
aad
out
mov
repnz
aaa
call
sbb
lods
iret
push
shr
jmp
cmpsb
inc
es
fincstp
fisubrl
roll
aad
dec
lcall
flds
push
fisubrl
popl
dec
xlat
push
or
and
xlat
and
shlb
mov
popa
cmpsl
sbb
shl
pop
dec
pusha
mov
repz
lret
mov
hlt
xchg
add
push
fwait
test
lock
xchg
aaa
sub
pop
add
in
popf
sub
xchg
push
int3
push
sti
add
and
pop
lods
imul
jns,pt
mov
sti
jg,pt
hlt
dec
imul
adc
pop
fcom
push
xchg
inc
push
fildl
daa
jne
xchg
and
insl
mov
mov
repz
repz
adc
ret
mov
jge
adc
mov
mov
sub
xchg
imul
jnp
mov
leave
xlat
sti
in
sti
jg
icebp
dec
and
imul
cmpsl
dec
icebp
notl
or
xor
inc
loop
dec
loop
int
nop
mov
nop
xor
xor
xlat
inc
jl
es
loop
fldl
imul
imul
divl
rorl
das
push
xchg
jge
call
ret
leave
cmc
mov
int
inc
mov
call
hlt
sub
test
push
je
cmpsl
movsl
imul
hlt
mov
test
icebp
xlat
xchg
inc
addb
sti
jnp
lods
push
rcrb
addb
dec
inc
mov
cltd
lcall
pop
inc
xlat
push
dec
ljmp
jl
pusha
push
push
sub
call
in
imul
jnp
pop
xlat
enter
pop
dec
hlt
xchg
push
or
cs
cmp
xchg
repnz
insl
mov
sbb
inc
rcrb
add
mov
sub
popa
negb
push
enter
or
and
nop
cmp
cmpsb
sti
adc
stos
cmp
roll
add
cltd
je
add
icebp
pop
test
mov
sti
sub
add
mov
dec
dec
pop
stos
xchg
dec
adc
out
dec
fldt
test
psraw
mov
push
sbb
stos
scas
inc
inc
or
loope
lds
add
repz
push
sub
xor
sub
sub
fwait
cmpsl
pop
dec
jmp
push
mov
pop
dec
add
mov
shl
pop
cmpsl
lcall
jmp
push
push
out
cmp
cmp
mulps
dec
dec
repnz
scas
scas
xchg
dec
xchg
or
dec
jo
pop
imul
inc
scas
cs
adc
xchg
xchg
repnz
xchg
adc
xchg
push
mov
jo
mov
xchg
test
mov
pop
push
fisttpl
das
hlt
add
inc
push
movsb
repz
jb
das
mov
jb
xlat
xor
mov
aad
xchg
mov
xchg
shll
lock
repnz
mov
stos
mov
mov
adc
xchg
out
pop
lds
lret
xchg
mov
adc
rol
stos
inc
int
xlat
pushf
repz
std
sub
or
pushl
jmp
xlat
stc
icebp
xorl
cltd
pusha
std
xchg
fldt
pop
jecxz
not
loope
insl
pop
xlat
out
adc
add
xchg
rcr
xchg
pop
fucomi
and
leave
shl
adc
insb
or
xchg
xlat
ret
repnz
inc
xchg
xlat
mov
icebp
xchg
ret
lret
push
jno
fwait
xlat
test
pop
xchg
lahf
repnz
pop
pop
popf
xlat
scas
nop
repnz
pop
xchg
xor
push
inc
rcrb
mov
push
icebp
inc
jl
test
das
lods
mov
add
push
jmp
dec
xchg
inc
jge
inc
arpl
popf
pop
pop
rcl
jl
mov
fwait
test
xlat
pop
jb
ljmp
or
push
shr
aam
shr
inc
aad
je
in
mov
lods
inc
icebp
cmpsl
jle
lret
xchg
notl
cli
jno
jns
cmc
stc
rcll
not
into
push
push
ja
pusha
xchg
ljmp
push
inc
or
test
push
sub
arpl
stc
push
inc
loope
icebp
and
dec
lock
xor
out
inc
cmp
test
inc
mov
movsb
jne
jg
cmpsl
jns
jp
leave
jnp
and
dec
pop
jns
aas
iret
pushl
push
sub
imul
or
mov
jns
mov
rcll
jl
cs
cmp
push
jbe
mov
pop
stos
inc
push
scas
ja
sarl
jns
xchg
fstpl
shlb
fistl
push
fwait
lret
mov
pushf
rcl
mov
notl
jp
mov
shrl
mov
fcmovbe
das
mov
push
mov
fistl
dec
mov
dec
jae
jno
orl
push
negl
sub
push
xlat
xchg
sti
mov
mov
jl
lret
movsl
inc
push
js
loopew
repz
lods
inc
aad
push
loopne
or
iret
xchg
push
psrld
ror
jl
mov
push
stc
sbb
loope
inc
arpl
sub
inc
push
push
ja
popf
adc
pop
push
inc
lods
xchg
rcll
jno
into
lea
pop
xlat
adc
imul
push
cmp
add
test
mov
jle
mov
daa
jge
mov
mov
lcall
das
int
xchg
jecxz
jae
mov
jmp
pop
mov
push
pop
jnp
bound
and
sti
mov
call
sub
int3
adc
mov
int3
fstpl
mov
roll
cltd
int3
sbb
out
mov
test
aad
push
push
stc
aam
adc
rcl
test
rol
push
jmp
std
dec
sub
lds
push
cs
sub
dec
fldt
rcr
push
mov
aaa
test
add
xchg
jb
push
notb
inc
jecxz
mov
push
mov
icebp
xor
fcoml
fbstp
scas
loope
movsl
xchg
fisttpl
jg
mov
inc
repz
iret
inc
adc
pop
sti
xlat
mov
aad
pop
outsl
loop
pop
fptan
rclb
aaa
je
cmp
cs
sub
aam
sbb
int3
add
sbb
sbb
xor
cmp
fwait
scas
dec
xor
jp
push
push
aad
mov
cli
xchg
cmp
mov
shll
pop
push
bound
imul
scas
cmp
dec
imul
into
popa
out
test
pushl
pop
dec
pop
stos
ljmp
imul
imul
push
addr16
subl
dec
pop
es
mov
xor
repz
inc
xor
es
mov
add
inc
das
sub
adc
pusha
stos
pusha
push
call
subb
mov
push
pop
dec
mov
cmc
cli
cmp
rcrl
adc
fistl
push
mov
push
stc
lods
mov
push
push
inc
mov
sbb
mov
add
cmp
mov
scas
pop
dec
test
sarb
fcomip
mull
pop
notb
push
sti
cmpsl
xor
xchg
xor
test
jb
arpl
jns
mov
sbb
jp
js
outsl
popf
add
mul
lds
xlat
sub
mov
mov
fidivrs
cmpsb
and
imul
adc
xor
je
ja
sub
push
push
movsb
push
jb
movsb
dec
sub
cs
cmp
sbb
xchg
clc
cmpsl
ds
mov
xor
mov
jne
cmp
fistl
adc
jg
imul
fldt
hlt
lds
out
pop
xlat
ret
or
sbb
add
test
fld
stos
test
push
cmpsb
adc
shrb
les
mov
push
pushf
pop
push
cmp
jne
sub
xor
lods
cld
xor
in
aad
cs
sbb
in
shr
cmp
sub
fdivr
icebp
fistl
js
cmpsl
fnstcw
cmpb
enter
mov
scas
mov
repnz
aad
sbbl
aaa
jae
inc
cltd
push
jae
or
pop
ffree
push
and
aam
test
sub
adc
iret
pop
and
repnz
rol
adc
cmp
dec
adc
sub
pop
adc
xor
dec
dec
lahf
lods
inc
insb
lds
mov
push
jne
add
int3
icebp
movsl
jbe,pn
inc
cmp
shrb
testl
and
std
add
aad
test
out
aaa
dec
dec
je
idiv
sbb
pop
pop
aam
mov
loop
jmp
imul
push
push
xchg
stos
leave
sbb
std
ret
clc
fwait
icebp
xchg
xchg
sbb
adc
dec
mov
outsb
pop
nop
jge
ret
imul
and
cli
test
fwait
hlt
cmp
jb
mov
cli
cmp
sub
mov
es
shlb
sub
pop
ja
pop
cmc
mov
in
adc
xchg
outsb
pop
div
je
push
cli
cli
xchg
fistl
idivb
int3
mov
adc
and
or
push
dec
lods
sti
pop
inc
cmp
pop
add
mov
popl
pop
roll
mov
pop
jbe
loop
shrb
jo
add
aas
xlat
or
int
xchg
push
lods
mov
add
add
scas
mov
jnp
movsl
shr
xchg
dec
outsl
cld
xlat
jno
inc
pop
fbld
push
lahf
arpl
xchg
add
stc
xlat
out
push
inc
sti
push
sbb
sti
inc
adc
rclb
test
aam
mov
cmc
xchg
test
jae
imul
icebp
mov
adc
icebp
xor
xor
cmp
and
fs
sbb
sbb
adc
cmp
mov
out
add
sbb
mov
fidivrl
xchg
mov
pop
xor
or
or
repnz
adc
sti
add
pop
rorl
lret
cld
sbb
jb
fldcw
mov
sub
repnz
flds
daa
mov
ds
loope
jp
push
icebp
in
pop
push
lcall
not
les
das
add
xchg
pop
pop
adc
movsl
lahf
dec
xor
test
rcrl
lds
test
xchg
testl
xchg
ds
and
push
or
push
fsubrs
fildll
push
adc
hlt
jp
sub
daa
rcll
pop
fucomi
push
sub
pop
xchg
and
in
aad
repnz
pop
xlat
mov
push
mov
add
arpl
pop
cmpsl
imull
aad
in
into
in
aam
mov
jbe
mov
xchg
xlat
sub
divb
xchg
push
mov
ret
lods
cwtl
xlat
inc
testl
lahf
rcll
loope
andl
dec
push
pop
sub
mov
add
lock
add
xlat
inc
mov
jmp
loop
rolb
not
imul
push
pop
sti
pusha
push
jnp
sub
xchg
push
loope
mulb
inc
repz
in
inc
test
jns
mov
fwait
jne
lcall
pop
jg
xor
cmpsl
xchg
into
adc
sub
insb
cmp
scas
and
mov
xor
jbe
flds
push
mov
jmp
jns
fldcw
mov
jmp
ret
sbb
btr
bound
test
push
hlt
add
push
adc
cmpsl
sbb
ljmp
pop
dec
fidivl
xchg
cmc
fstl
stos
sbbl
push
jnp
test
lds
pop
rclb
loopne
dec
pop
pop
sub
pop
mul
mov
mov
pop
std
aam
jle
sbb
es
leave
jb,pn
ficompl
xchg
cmp
int
in
push
sbb
out
mov
add
xchg
dec
pop
xor
xchg
decl
not
in
repz
notb
ja
xchg
push
adc
inc
add
fsts
mov
cmp
push
rcll
rol
xor
push
push
push
sar
mov
int
jmp
es
mov
sub
fcmovnbe
incb
cli
mov
dec
pop
cmc
inc
movsl
push
jo
rol
push
push
imul
fidivl
dec
xchg
pop
mov
inc
aas
push
lcall
nop
xchg
and
int3
adc
jl
fists
mov
icebp
pop
mov
sbb
lret
mov
js
pop
sbb
sbbb
cmp
xchg
shrb
orb
push
repnz
fdivrs
push
xchg
rolb
call
icebp
mov
or
xchg
or
int
pop
adc
das
dec
add
fistl
cmp
leave
dec
repnz
pop
jmp
in
jne
ljmp
hlt
sbb
sahf
xchg
push
inc
aas
xlat
fmull
testl
adc
cmp
push
testl
or
dec
int
es
es
pop
sub
lret
adc
mov
sahf
pop
mov
sarb
push
mov
pop
mov
loop
ja
push
dec
add
hlt
in
jbe
cmpb
imul
jmp
insb
in
testl
mov
ljmp
sub
push
mov
loopne
cs
mov
or
cmpsl
push
cltd
xchg
and
adc
ja
cmp
mov
xor
repnz
mov
fwait
push
cwtl
shll
in
adc
ss
or
nop
ret
icebp
adc
or
rolb
push
in
insl
imul
xchg
scas
repz
xchg
cmpsl
and
xchg
push
sbbl
insb
testb
std
sti
push
push
cmp
dec
lret
pop
nop
clc
cmp
scas
mov
cli
xchg
and
popa
fidivl
jne
mov
mov
pop
testb
jnp
or
loop
cli
sbb
pop
cmpsl
loopne
push
and
loopne
ret
sub
shll
pop
mov
imul
fcoml
xor
imul
sub
cwtl
xchg
icebp
xor
inc
push
mov
jno
inc
sub
sti
xlat
adc
movsl
nop
dec
repnz
ret
testl
mov
lcall
xchg
jnp
pop
mov
dec
div
imul
neg
adc
in
test
mov
sbb
pop
jmp
mov
inc
jmp
rorl
lods
icebp
push
ret
dec
adc
imul
mov
rcr
fcom
aad
stos
pop
xchg
sub
scas
movl
gs
inc
push
out
push
add
jecxz
xorb
repnz
mov
xlat
mov
xor
mov
lods
push
xchg
adc
push
cmp
or
iret
rol
pusha
sbb
ficoml
xor
pop
push
adc
fwait
pop
mov
fs
sub
inc
push
shlb
pushf
cmpsl
test
pushf
push
pop
push
cmp
push
rclb
into
int3
daa
sub
mov
loop
xor
pusha
inc
enter
cld
jp
mov
sub
stos
filds
dec
xor
sti
cmc
push
lds
fstl
push
stos
pop
imul
adc
sbb
or
out
inc
mov
sbb
roll
rorb
int3
inc
mov
lds
adc
sarl
aam
repz
and
outsl
scas
pop
es
fmul
pop
mov
les
mov
mov
bound
push
mov
pop
add
add
cmpsl
pop
fs
cmpsl
sub
nop
or
das
jb
sub
cmp
mov
adc
rclb
enter
fldenv
repz
and
xor
stos
insl
ror
sbb
push
sbb
sub
cs
cmc
insl
sbb
sar
inc
insl
dec
cmpsl
cltd
aam
pop
sub
xchg
fs
pop
lock
jae
cmpsl
test
jne
cltd
imul
dec
mov
fsubl
lret
rcr
sti
pop
mov
icebp
xchg
jg
push
loopne
cmp
pop
stc
daa
loop
mov
mov
jae
lret
imul
pop
ret
popa
mov
clc
aaa
int
pop
out
jns
or
mov
xchg
mov
push
inc
lcall
icebp
cmc
subl
pop
scas
mov
pop
fldt
xchg
cld
stos
pop
popf
xchg
cmpsl
or
dec
shll
ja
pop
push
repnz
call
cmpsl
jp
ret
mov
outsl
rcll
scas
cmpsl
imul
fisttpl
jg
js
cmp
stc
repz
xchg
cmpsl
push
addr16
cmp
mov
rorl
aaa
fcmovbe
xchg
push
push
ficoml
pop
xchg
sti
lahf
aad
es
xchg
cs
jnp
xchg
xor
lahf
fwait
adc
idiv
sub
stc
jbe
je
stos
pop
daa
pop
inc
stos
sti
cli
jnp
cmpsl
mov
ja
push
ljmp
stos
dec
mov
mov
bound
pop
jle
in
movsb
and
lock
shr
testl
mov
pop
inc
sarl
xor
push
mov
fiaddl
lcall
pop
xor
icebp
testb
inc
icebp
insl
inc
out
add
in
lret
mov
push
shll
lret
jmp
leave
sub
xchg
mov
int3
jecxz
xor
into
in
dec
sti
pop
pop
jp
fisubrs
mov
xor
lods
jb
fcomi
xchg
sub
cltd
fistpll
push
add
fistps
loopne
cmc
mov
in
cmp
rcrl
and
sub
idiv
bound
rcl
jl
push
mov
mov
iret
cs
mov
aad
push
call
pop
push
pop
push
mov
stos
mov
cs
rol
xchg
outsb
mul
jno
adc
xor
lock
pop
push
inc
and
cmc
and
pop
mov
imul
pushf
sub
dec
cmp
in
jnp
inc
mov
lret
out
ficoml
scas
sub
xchg
mov
roll
mov
loope
clc
jae
mov
add
xchg
shl
aad
mov
rcr
loopne
ret
ljmp
push
jb
ljmp
aad
fcomi
loopne
cmp
cmp
repz
testb
ret
sbb
lock
jmp
popa
movsl
inc
xlat
fcomip
mov
xor
pushf
inc
jno
xchg
aam
lods
loop
test
in
testl
dec
data16
std
arpl
lock
push
cmp
out
add
fwait
lahf
ficoml
in
rcrl
adc
jbe
sub
das
mov
xchg
enter
cwtl
repz
mov
push
loopne
sbb
dec
inc
jl
sbb
or
arpl
sbb
pop
testl
xchg
shl
pop
aam
push
shl
es
shl
lahf
push
adc
pop
pop
ror
pop
jecxz
daa
imull
nop
inc
repz
xlat
jp
mov
enter
add
jmp
aam
lods
lods
xor
test
mov
test
or
pop
add
add
leave
rolb
jae
inc
test
dec
ret
mov
xchg
addr16
cmpsb
push
pop
cmpsl
jnp
cmpsb
cmp
lods
cltd
daa
xor
push
ja
sub
out
fwait
pop
mov
inc
pop
scas
test
dec
divl
stc
stos
push
mov
push
pusha
adcl
sti
ffreep
xchg
andl
test
fisttpll
rolb
inc
scas
inc
add
imul
rcl
jbe
aad
sbb
es
ficoml
vpmulhuw
pop
xchg
call
push
imul
mov
or
mov
dec
push
pop
clc
push
jo
cmp
pop
push
call
out
pop
aaa
xchg
jae
stos
or
fmulp
or
xchg
xlat
inc
bnd
lods
ret
sbb
aad
addr16
mov
pop
lahf
lock
mov
dec
push
mov
xor
cmpsb
inc
jmp
pop
dec
aas
imul
dec
dec
das
jl
les
loopne
xlat
push
negb
es
rcll
sub
push
jmp
into
push
imul
push
test
mov
xlat
fcmovnbe
push
pop
sub
dec
out
fildl
sub
and
sub
pop
rclb
pop
mov
sti
movsb
imul
ficoms
sar
pop
iret
insb
mov
hlt
push
imul
mov
into
imul
notb
or
pop
xor
sbb
jnp
xchg
xor
mov
icebp
xchg
push
sub
mov
xchg
fsqrt
scas
movsl
fcmovu
pop
xor
ficomps
dec
mov
pusha
outsl
jbe
xchg
jb
into
sub
insl
notl
in
insl
inc
rcll
rcr
imull
jg
in
push
movlps
aas
ss
adc
ret
adc
inc
add
test
test
mov
gs
inc
cmp
sti
xorl
aad
fdiv
xchg
push
cs
jmp
inc
movsb
loop
inc
xchg
jl
rcll
pop
mov
pop
mov
negl
xchg
into
ret
shll
rcll
inc
dec
scas
push
inc
adc
jne
jns
leave
imul
or
shll
mov
jb
inc
mov
push
jb
xor
push
inc
lret
jmp
push
mov
ret
jne
call
pop
push
push
or
fwait
dec
clc
sar
sarl
jg
test
lret
push
shll
pop
repnz
dec
mov
out
iret
in
sti
out
jg
repz
cmc
in
lds
test
insl
call
add
jg
push
loope
lock
jp
cmpl
adc
mov
push
and
hlt
inc
inc
insl
adc
insb
ret
push
adc
inc
cmp
pop
dec
shrb
rcl
jg
es
aam
idiv
aad
mov
icebp
mov
jle
xor
repz
loope
stos
pavgb
mov
cmpsb
mov
sti
repz
inc
xor
push
test
adc
push
adc
cmp
cmpsl
mov
shr
arpl
push
repz
fbstp
sub
dec
pusha
and
loopne
notl
aad
push
mov
cmc
aas
pop
divl
inc
cmp
and
mov
jp
mov
push
push
xchg
and
mov
cmp
test
aad
arpl
stos
push
sub
imul
xlat
xchg
cmpl
sbb
sub
daa
push
int3
in
jle
xor
dec
add
xor
test
repnz
cmpsl
push
jmp
movsb
aad
filds
cld
rcl
jmp
jl
es
jl
ja
icebp
out
jno
xchg
repnz
mov
push
das
es
loopne
adc
rolb
clc
fsincos
xchg
sub
insb
inc
dec
xchg
adc
imul
cmp
sti
xor
inc
test
lahf
fmul
ret
lea
pop
rol
data16
mov
sbb
push
scas
or
jb
rcr
add
and
xchg
sbb
push
xchg
test
xlat
adc
pop
jl
lret
ret
rorl
fistpl
leave
xchg
xor
lea
call
mov
roll
xchg
int3
fnclex
test
xlat
es
add
pop
or
cmp
mov
in
out
nop
adc
xchg
mov
dec
fsub
pop
jbe
add
mov
hlt
jb
xchg
fldcw
cli
test
jle
dec
fs
jns
into
push
ret
test
mov
rcll
dec
dec
dec
adc
shll
push
bswap
cmp
dec
add
hlt
pusha
shll
test
jno
in
lods
popa
mov
inc
xchg
cmp
pop
out
mov
xor
push
or
daa
xchg
aaa
jo
sbb
xchg
xchg
insb
inc
add
mov
data16
dec
adc
in
xchg
lret
aaa
int
sub
fdivr
xchg
and
cs
xchg
jnp
xchg
inc
out
pop
lods
fadd
mov
mov
inc
scas
xchg
adc
fwait
ds
sbbl
test
and
xor
mov
push
mov
jno
sub
es
fsubr
sbb
loop
adcl
int3
rorl
xor
aam
test
adc
imul
shl
jne
add
dec
dec
dec
rorl
jge
xor
movsl
push
pushf
rcrl
ret
mov
push
add
jb
inc
jge
das
ds
push
scas
sub
xorb
push
sbb
xchg
sar
jecxz
push
inc
imul
mov
xor
test
mov
pushl
inc
or
xlat
add
jmp
imul
mov
push
or
loope
lock
dec
or
out
jecxz
lock
fsubs
jne
cmpsl
out
jge
adc
xor
fwait
or
sbb
out
leave
dec
push
adc
mov
clc
fadd
rcr
xor
xchg
adc
fldenv
add
fadds
sub
rcrb
push
ret
push
mov
add
lods
ret
clc
jp
lock
js
cli
jno
repnz
ljmp
popa
jmp
lods
cli
iret
stc
cmc
shl
sti
jns
arpl
jmp
mov
ds
and
aas
inc
into
shlb
std
loop
daa
jmp
out
jp
or
jmp
je
add
xor
cwtl
fcmovbe
cmpsb
mov
pop
xlat
sbb
push
pop
push
lret
xchg
and
cmp
roll
mov
mov
les
mov
xor
inc
jle
fldl
mov
adc
popl
push
adc
pop
push
lea
and
mov
fisttpl
mov
mov
push
mov
mov
jns
subl
jbe
rorl
jnp
daa
shlb
scas
jg
pop
mov
mov
push
jnp
jle
mov
pop
es
sub
xor
push
mov
outsb
fsts
leave
push
ret
jnp
mov
push
xchg
inc
add
mov
mov
out
push
cwtl
push
cmpsl
imul
mov
jno
je
xchg
xlat
lods
inc
ljmp
je
xchg
push
pop
frstor
incl
inc
xor
lret
jbe
xor
les
push
aas
inc
mov
repz
sbb
movsb
rcrl
scas
pop
int3
push
leave
das
lea
jns
lock
dec
pop
xor
mov
les
addr16
push
or
cmovs
dec
rclb
shlb
jne
jbe
ror
dec
lret
imul
fcmovnbe
push
mov
xchg
cmp
ret
imulb
inc
jmp
adc
inc
mov
jns
jbe
pop
ror
fcoms
xor
dec
cmp
aam
ja
aaa
push
imul
stos
dec
fcmovbe
js
rcrb
loopne
mov
aam
repz
xor
stos
int3
loopne
fcmovbe
jg
push
call
inc
mov
jmp
idiv
mov
sbb
in
jg
xchg
call
bound
imul
loope
dec
test
jb
cld
imul
or
jecxz
xchg
mov
pop
out
lcall
rcl
jno
adc
sahf
push
arpl
dec
cmpsl
rol
ret
add
push
pop
sub
aam
push
push
dec
aaa
outsb
xchg
fisubs
dec
jne
testb
push
add
iret
aas
adcl
mov
imul
fisttps
push
std
dec
ror
fstl
lock
and
stc
aaa
idiv
enter
dec
dec
clc
mov
mov
cmp
enter
mov
dec
mov
fstps
adc
sbb
inc
push
xlat
xchg
stos
mov
es
in
dec
cmpsb
cmpsl
fwait
outsl
and
sti
mov
jp
push
in
push
adc
dec
or
loope
ficoms
pop
mov
xlat
shll
jae
push
popa
xchg
push
lock
xor
mov
sbb
aad
and
mov
adc
sahf
sbb
or
mov
shrl
notl
mov
insb
push
mov
arpl
ret
in
add
call
out
scas
and
int
push
lret
rcrb
aaa
loop
std
inc
out
faddl
out
stc
xchg
pop
mov
cmp
xchg
push
popf
pop
push
sub
or
rclb
jp
mov
add
xchg
pop
push
jae
xchg
dec
out
daa
aad
imul
push
jecxz
xor
neg
pop
mov
ljmp
mov
ret
out
push
sbb
mov
push
fists
iret
mov
in
push
neg
jmp
stos
jle
outsl
push
xchg
sub
and
jbe
lock
hlt
push
add
shll
and
aam
dec
cmpsl
mov
jmp
push
call
ret
addr16
aas
ss
and
loope
out
push
jno
mov
outsb
mov
es
push
repnz
repz
faddl
dec
xlat
mov
dec
cwtl
cmp
mov
rcl
cwtl
flds
in
jae
pop
mov
stos
shl
fldenv
stos
push
pop
jns
add
cmpsl
add
fsts
adc
push
fs
jecxz
xor
repz
adc
push
cmpsl
nop
push
mov
scas
and
fstpt
xchg
sbb
je
jae
daa
jmp
lds
lods
or
test
pop
jp
adc
sub
lret
repz
sbb
pop
xlat
stos
jg
mov
jg
push
adc
loop
ja
jb
and
pusha
dec
mov
imull
dec
dec
je
imul
movsb
lcall
cmpsl
mov
jmp
scas
mov
mov
mov
sbb
or
inc
mov
daa
frstor
mov
ljmp
sbb
fstps
rclb
pop
mov
shll
adc
xchg
popf
and
jle
loop
add
mov
and
xor
mov
movsb
test
xchg
pop
cltd
scas
mov
mov
in
repnz
ret
addr16
dec
loop
xlat
loope
cmpsl
sti
mov
inc
mov
push
mov
orl
inc
outsl
icebp
jmp
fcmovu
jnp
pop
and
jne
subl
cli
fldcw
adc
inc
cmp
ja
fwait
scas
cwtl
loop
push
sub
mov
ret
cmpsl
stc
xchg
loope
enter
adc
sub
mov
push
data16
mov
push
push
stc
jns
clc
jp
xchg
push
sbb
jmp
jecxz
inc
jno
push
hlt
lret
xor
jl
icebp
xchg
mov
push
ja
fwait
aad
inc
pop
xchg
xchg
repnz
jecxz
sub
fcoml
jnp
in
inc
adc
mov
pop
pop
rorb
jp
clc
mov
das
test
decb
mov
jge
cmpsl
mov
dec
mov
out
mov
shl
xchg
mov
add
lret
add
lods
push
mov
mov
aam
fimuls
push
adc
mov
nop
dec
push
imul
push
cmp
imul
jmp
shr
icebp
adc
data16
adc
ds
fidivl
dec
icebp
mov
mov
int
es
daa
pop
xchg
sbb
lods
sbb
enter
jge
mov
xchg
inc
push
int
fwait
sar
push
mov
pop
push
xchg
arpl
cld
jbe
sti
pop
lea
xlat
insl
pop
loope
hlt
aad
movsl
ja
in
jae
push
into
mov
data16
repnz
add
test
or
xor
call
ja
pop
ret
ljmp
xor
push
sbb
cmpsl
mov
jae
fldl
std
repnz
lcall
aas
stc
fdivr
xchg
leave
repnz
shlb
adc
fsubrl
mov
inc
jl
jecxz
fstps
push
dec
out
jae
sub
aaa
shr
jnp
fsubr
mov
adc
mov
push
hlt
cltd
ret
loope
fadds
out
inc
mov
mov
iret
mov
jmp
shl
mov
lock
mov
xchg
xor
bound
out
repnz
dec
notl
inc
dec
push
xor
movb
or
mov
lahf
xchg
outsb
call
ficompl
jp
mov
cmpsl
sub
xchg
inc
imul
leave
push
and
cmp
in
inc
cmp
jno
enter
out
leave
push
mov
mov
add
xchg
jb
ficoms
mov
cs
dec
mov
cmp
jl
xor
pop
xchg
dec
imul
push
dec
adc
pop
inc
stos
sti
movsb
jmp
push
push
sbb
out
jbe
lods
xchg
jecxz
hlt
loop
cld
daa
call
cli
add
cmpsl
fcoml
add
daa
cmp
stc
in
fstp
xor
push
mov
push
scas
ja
fldt
sti
int3
adc
mov
lret
movsl
mov
fidivs
push
fdivs
xlat
inc
jno
inc
cs
sub
shll
insb
ficoms
mov
fcomip
idiv
jg
pop
outsb
enter
in
adc
flds
icebp
icebp
xchg
clc
in
mov
in
sar
mov
mov
inc
push
loopne
icebp
shlb
add
sti
lods
inc
cmp
add
adc
sub
sub
push
subl
inc
mov
push
dec
js
test
cli
push
ret
adc
xor
cmpsl
fildll
loope
jns
daa
or
lods
std
pop
loopne
mov
insb
push
nop
xchg
xchg
rcpps
jl
in
adc
inc
xbegin
jl
add
xchg
mov
in
movsl
shrl
movsl
pop
dec
ja
es
dec
rcrb
mov
push
and
dec
pop
std
cmc
lret
insl
inc
rorb
pop
pusha
pusha
fistl
icebp
arpl
pop
mov
add
dec
aaa
shl
pop
cli
into
clc
pop
or
sbb
sarb
xchg
inc
cmpsl
repnz
pop
cmp
inc
mov
mov
lret
rolb
loopne
loop
ret
jle
mov
push
rolb
mov
jle
call
xchg
insb
repnz
cli
aam
repnz
mov
imul
push
xor
jl
imul
rcll
lods
imul
lret
lods
xchg
rcrb
aas
in
mov
lcall
mov
lret
hlt
pop
xchg
aas
js
mov
mov
rcll
call
scas
dec
mov
fsubl
dec
push
hlt
rcrb
inc
mov
inc
dec
inc
dec
icebp
sub
test
icebp
icebp
dec
in
fucomi
std
jnp
mov
pop
adc
daa
sahf
mov
mov
shlb
lock
mov
dec
lcall
adc
inc
scas
lock
fdiv
ljmp
inc
je
popa
and
fwait
imul
enter
push
cmpl
or
scas
xchg
mov
xlat
repnz
push
push
push
jae
dec
lods
shlb
xor
call
dec
js
pop
jbe
xlat
sub
rcll
push
icebp
popf
fisttps
andb
mov
mov
daa
or
mov
cmpsl
loopne
sti
xchg
call
mov
dec
sti
mov
or
pushw
mov
les
int3
mov
adc
aad
into
aam
fwait
ret
or
xchg
shrb
or
mov
movsl
inc
cmp
sti
scas
repnz
repz
inc
mov
jge
lock
iret
fdiv
xor
jp
sub
daa
xorb
in
mov
loopne
push
cmp
xchg
aad
sub
or
data16
repz
push
jmp
in
rol
imul
pop
dec
mov
cmp
xchg
pop
mov
inc
pop
int3
ss
fcompl
repz
jle
out
xor
adc
add
push
lods
hlt
in
xchg
adc
in
ret
sub
shrl
push
stos
adc
and
lcall
xchg
adc
cltd
pop
jns
adc
dec
sbb
je
leave
pop
dec
in
adc
data16
cmpsb
insb
test
leave
fstl
fcoml
pop
das
xchg
adc
dec
sti
cmpsb
and
mov
shlb
sbb
popa
mov
icebp
repz
jmp
push
je
sub
inc
not
out
pop
xchg
shl
jmp
nop
fistl
ss
das
data16
jmp
mov
nop
jmp
out
xor
fcoms
ficompl
add
adc
add
inc
cmpsl
arpl
stos
jae
mov
fwait
lcall
es
scas
repz
push
dec
sub
mov
mov
out
jnp
cbtw
mov
mov
sti
dec
repz
ficompl
rclb
xchg
aas
addr16
repnz
lds
mov
jnp
xchg
arpl
lret
jg
push
mov
push
cmp
pop
push
lods
mov
sbb
mov
cli
cmpsl
cmpsb
lret
jle
lret
imul
sti
les
flds
ret
imul
sti
cmpsl
mov
shlb
mov
or
loope
or
popa
imul
icebp
sub
adc
loop
fnstsw
pop
fs
cmp
shlb
xchg
cli
das
das
sbb
sbb
sti
sbbb
xor
xchg
mov
aam
jecxz
pop
shlb
int
shrl
jmp
int3
fisubl
mov
shl
aad
call
push
mov
cmp
mov
jnp
pop
and
mov
mov
mov
dec
ret
xchg
in
fisttpl
cmp
ret
xor
cmp
dec
push
dec
dec
cmp
and
test
sti
std
push
xchg
mov
fildl
push
push
shrb
stos
test
or
pop
jmp
mov
push
mov
fucompp
ljmp
inc
jae
leave
into
jns
dec
pop
push
rcrb
jno
sarl
loop
lret
push
incb
fists
cli
mov
jbe
fnstcw
sbb
pop
or
insl
ljmp
inc
rol
int
pop
sahf
movsb
in
inc
leave
dec
scas
inc
sbb
mov
and
xlat
dec
sbb
dec
cltd
xchg
pop
jbe
or
idivl
loop
call
sub
fsubr
add
imul
jnp
cmpsb
inc
div
inc
in
sbb
stc
inc
sbb
int
push
cmp
hlt
pop
or
ljmp
xlat
mov
std
lods
push
cmpl
pop
xor
sbb
sbb
lea
adc
in
add
sbbl
mov
xchg
push
and
dec
out
and
lds
jne
xchg
inc
loop
mov
push
fwait
int
mov
fsubrl
push
scas
dec
scas
aam
jne
push
das
mov
in
push
outsb
daa
mov
daa
push
sahf
scas
es
adc
jg
xlat
push
aad
rcr
and
lret
cmp
stc
std
sti
aas
cmc
sub
fisubl
into
fidivrs
fidivs
scas
jno
fsubrs
daa
out
inc
mov
sahf
or
mov
mov
cmp
sbb
int3
pop
jnp
std
shr
xchg
sti
mov
daa
sbb
cli
das
push
pushf
push
insb
cmpsl
or
adc
mov
cmp
inc
adc
add
scas
lret
dec
ss
push
in
push
scas
mov
adc
sub
fiadds
xchg
es
jb
shll
mov
int
pop
sti
aad
sub
push
out
cmp
xor
aas
loopne
test
xchg
or
push
inc
sti
mov
push
adc
lods
mov
xlat
roll
xor
add
mov
stos
gs
mov
fstpt
xchg
das
adc
dec
sti
pop
dec
mov
push
pop
jns
jb
jmp
push
sub
mov
pop
rcll
jb
mov
push
adc
rorl
insl
sbbl
adc
les
inc
out
call
divb
dec
pop
jmp
dec
ret
loope
rolb
ljmp
push
fcmovu
inc
ficomps
ficompl
inc
fistps
jo
leave
rcl
jne
adc
popa
stc
jg
mov
fbld
inc
mov
xlat
mov
rcr
push
cwtl
sub
jb
cli
insl
loope
popf
adc
cmp
sub
jne
movsb
daa
xchg
icebp
jno
cmpsb
jb
mov
out
xchg
lea
pop
mov
and
je
xchg
dec
rcrb
cltd
fcmovbe
sub
mov
pop
cmc
dec
repnz
mov
adc
subl
dec
hlt
lods
mov
adc
sarb
jmp
movl
shrb
movsl
roll
cmp
lcall
imulb
mov
or
out
mov
sbb
adc
lds
pop
add
outsl
das
or
mov
mulb
add
out
xorl
sbb
scas
push
iret
mov
daa
add
xor
shr
push
push
xlat
sbb
mov
jmp
push
xor
xchg
xchg
repz
pop
pop
jnp
pop
in
repnz
push
scas
mov
ja
fsts
inc
mov
cmp
cltd
mov
xchg
test
lea
mov
mov
mov
pop
mov
aas
iret
mov
xlat
jo
inc
mov
mov
scas
fst
test
aad
sets
fucomi
stc
aam
fsts
outsl
fcmovbe
popa
aam
lret
ficoms
dec
rcll
sbb
ret
movl
inc
lret
push
cli
sti
test
fcoms
xor
aad
fnstenv
scas
push
xchg
mov
lret
jecxz
adc
rcrb
fists
repnz
jns
dec
mov
fldt
sbb
pop
in
xor
or
pop
aas
sub
sub
int
inc
pop
xor
inc
test
mov
mov
dec
cmc
fucomip
call
int3
pop
push
repz
ljmp
test
sub
test
ret
inc
cld
lock
outsl
jne
mov
jge
jg
push
xchg
adc
mov
add
jae
push
mov
dec
fwait
inc
mov
fdivr
pushl
repz
push
cmp
xchg
xchg
pop
mov
bound
leave
mov
out
add
sub
addr16
scas
insl
or
lock
mov
mov
lcall
ss
fcomip
xchg
jl
xorl
icebp
adc
ja
xorb
pop
cmp
lds
repz
pop
je
push
aas
mov
mov
inc
jb
adc
fmuls
cmp
in
push
sbb
ret
repz
fisubrl
mov
push
jbe
addr16
std
scas
xor
repz
add
out
sbb
gs
in
pop
fs
or
and
shrb
sub
cld
and
fwait
pop
aad
xchg
inc
push
sub
xor
and
jb
xchg
in
les
push
nop
mov
push
push
xchg
std
out
test
push
jno
push
and
addl
sti
pop
push
lret
fists
pop
xchg
shrl
movsl
int
ret
jno
fcomps
and
repnz
mov
add
inc
ficompl
xlat
ffree
es
imul
fistl
and
lret
cli
fists
dec
xchg
js
or
leave
push
push
push
pminsw
adc
dec
inc
inc
and
sub
es
push
insb
les
xor
pop
xor
push
xorl
push
add
pop
xchg
mov
aad
adc
add
cmp
mov
push
int3
nop
xor
push
dec
add
sbb
ja
jno
and
lock
pop
jno
test
lahf
inc
insb
inc
dec
pop
jo
je
stos
insb
add
es
sbbb
jmp
imul
fidivs
cmp
push
divl
pop
sbb
sbb
lret
popa
pop
inc
popa
xchg
fisubl
mov
dec
xlat
fimull
sub
sub
daa
sbb
cmp
add
lods
jecxz
es
cmc
dec
sub
jbe
mov
push
adc
lret
fisttpll
xor
pop
and
notb
outsb
mov
stos
or
pop
sub
push
push
in
pop
xchg
iret
lock
add
xchg
push
sti
shrb
xor
das
int
or
test
shrb
cmpsl
hlt
mov
cmp
xchg
jmp
adc
xlat
sti
sbb
push
push
imul
stos
aaa
pop
push
adc
xchg
fistpll
push
add
push
mov
jnp
inc
xor
jno
inc
das
jne
mov
push
insb
add
sbb
xchg
sbb
sbb
adc
xabort
jb
hlt
in
sub
movsl
insb
inc
push
fcmovb
bound
fdivs
cmp
xlat
or
mov
xchg
inc
push
pop
dec
adcb
jns
sti
xorl
aam
push
xor
shrb
xor
jbe
sbb
jo
test
mov
cmc
adc
jne
xchg
ds
ret
je
mov
jo
notl
mov
lods
inc
aaa
pushf
sarl
xor
xor
push
inc
cmpsl
in
mov
push
testl
jno
stos
sbb
dec
push
sub
lea
sti
fimull
add
cmp
lcall
push
xchg
nop
leave
xchg
aas
mov
fwait
xor
aam
and
xlat
xor
aaa
in
xor
add
jp
jnp
repnz
testl
cltd
inc
mov
insl
test
in
dec
sbb
pop
stos
inc
out
repnz
clc
cltd
mov
mov
push
mov
test
mov
add
jle
test
cmpsb
push
in
jmp
mov
sub
scas
imul
mov
pop
mov
aam
aad
jo
mov
adc
push
leave
mov
stos
mov
mov
in
jbe
in
aam
cli
pop
mov
jb
mov
pushl
cli
sarb
out
jmp
loop
adc
loop
rcll
sahf
ljmp
fstpl
cmpsl
cmp
outsb
stc
push
outsb
mov
imul
sti
out
pop
lret
out
pop
mov
shrl
sahf
inc
scas
or
sbb
cmp
movsb
out
loopne
jl
sub
out
pop
inc
jmp
nop
insl
jbe
rclb
cmpsl
lahf
xchg
mov
and
imul
add
call
xchg
scas
std
imul
sub
decl
sti
mov
mov
inc
clc
cmpsl
inc
mov
shlb
dec
inc
or
daa
cmp
pop
sub
jnp
pop
aad
insb
xchg
daa
test
inc
inc
xchg
iret
cpuid
mov
fsts
pop
lcall
xchg
int3
sahf
insb
icebp
sub
jnp
icebp
mov
loope
mov
call
adc
nop
out
cmpsl
pop
loope
add
ffreep
adcb
xchg
idivl
adc
sbb
fpatan
sti
clc
dec
sbb
out
clc
aaa
fnsave
in
jo
fnstenv
and
and
lea
xchg
mov
push
jp
xchg
div
dec
xchg
hlt
insb
jns
xchg
sti
pop
dec
std
sti
push
inc
lret
adc
mov
repz
xchg
lcall
icebp
adc
pushl
or
aaa
js
iret
sub
out
hlt
insl
gs
or
lods
testb
je
push
push
movsb
int3
or
cmpsl
jl
jg
push
lock
jne
cmpsl
sbb
mov
repz
ret
mov
lods
stos
sbb
mov
cltd
pushf
adc
subl
je
mov
jo
dec
push
or
pusha
mov
cmpb
inc
scas
add
stos
int3
ss
fstps
xchg
xor
clc
mov
lods
lahf
cmc
sti
andb
push
xchg
out
mov
sub
cmpb
sar
adc
imul
dec
loope
movsb
mov
cmp
cmc
sbb
aam
mov
push
push
jbe
dec
les
mov
sbb
sbb
jmp
mov
mov
adc
pop
or
addb
outsl
jmp
iret
xchg
sub
cmc
sub
sub
je
xchg
fsubrs
leave
push
aaa
mov
test
test
jmp
lods
inc
int
es
mov
add
incl
addr16
testl
xchg
xor
inc
pop
xchg
cmp
inc
lods
mov
popl
int
ret
packuswb
pop
add
in
and
ret
int
xor
test
add
mov
jae
pop
sub
std
loopne
fldcw
push
pop
rol
xchg
pop
test
mov
aas
arpl
jecxz
lods
cmpb
add
sbbl
fs
loop
insb
jno
shlb
daa
in
fistl
sbb
dec
imul
push
sti
leave
clc
add
inc
jnp
pop
sub
imul
lea
add
cmp
adc
dec
push
dec
push
imul
es
testb
add
dec
jns
inc
imul
dec
inc
test
divb
or
shlb
jg
mov
mov
ret
push
adc
jmp
int
jnp
in
aaa
jns
sub
push
jle
mov
cs
push
mov
test
xchg
mov
sub
clc
outsl
scas
add
pusha
inc
mov
cmp
cmp
stc
and
sti
rolb
xor
roll
psubsb
inc
aas
test
int
incb
roll
in
inc
mov
adc
add
mov
mov
sub
dec
mov
xchg
outsl
xchg
lret
int
fldcw
jge
ficoms
shlb
negl
push
rcll
mov
daa
movsb
mov
xor
stc
addr16
std
andb
add
test
aaa
adc
in
scas
mov
fdecstp
jae
adc
mov
lock
jg
mov
adc
jge
push
es
xchg
mov
push
rorb
and
lods
std
lods
push
test
fdivr
sbb
movsl
add
es
loop
ret
shlb
cmp
mov
lret
into
jne
push
sub
les
shll
lret
add
ret
pop
scas
jno
xchg
not
call
push
lock
ljmp
cmp
test
jl
dec
out
cwtl
es
add
rcr
mov
movsl
inc
pop
pop
pop
daa
xchg
adcl
test
lret
xor
and
xlat
push
adc
dec
aad
ret
jmp
fxch
xor
mov
rclb
inc
sbb
shll
and
push
cmp
mov
les
pop
inc
or
hlt
jne
adc
fnstenv
xchg
jns
aad
repz
xchg
xchg
jmp
or
push
divl
xor
mov
cmp
hlt
std
xor
mov
das
and
repz
dec
nop
ret
lret
repz
lret
jae
mov
cmp
movsb
fildl
fwait
nop
loope
scas
push
push
lock
jmp
mov
mov
jl
mov
add
jg
fistl
mov
jmp
push
pop
adc
int
jo
ljmp
push
and
test
mov
mov
out
sub
mov
xlat
add
inc
bnd
add
je
js
imul
rolb
jb
jno
inc
lods
test
test
jge
cmp
jb
je
xorl
mov
mov
sbb
faddl
lcall
dec
fwait
sbb
aaa
and
dec
fsts
lods
sti
mov
add
add
out
add
out
fnstsw
push
sbb
sbb
push
test
add
ljmp
stc
mov
in
rol
add
in
adc
sbb
push
movsl
mov
and
cmpsl
push
repnz
cmp
nop
mov
ret
jno
lods
mov
jne
rolb
cmp
jno
adc
jb
push
mov
jbe
push
xor
int
enter
fyl2x
repz
push
dec
enter
lret
mov
xchg
cmpsl
lret
mov
pop
jae
xor
xchg
dec
mov
pop
cmc
ss
or
fwait
cltd
loop
jbe
sbb
fwait
xchg
xchg
mov
xlat
add
shll
popf
loopne
xlat
inc
or
xlat
pop
shlb
frstor
rolb
sbb
mov
push
loop
dec
fstpl
jp
xlat
inc
inc
adc
xlat
cmp
or
cltd
and
jp
jge
push
sbb
pop
icebp
pop
inc
pop
inc
fimull
dec
divl
and
pop
daa
ret
das
aas
push
jmp
in
loopne
lods
mov
jl
pop
add
mov
add
cmp
xchg
pop
frstor
sbb
test
out
inc
rcrl
movsb
outsb
lods
fistpl
rclb
subb
icebp
pop
fstl
stc
js
in
out
dec
clc
sub
jle
and
cmc
sbb
dec
xlat
or
fdivs
bound
jle
cmpsl
dec
pop
insb
adc
sub
scas
mov
cwtl
and
cmp
mov
movsb
inc
jmp
jb
inc
in
mov
repz
idivl
inc
inc
dec
int
ficomps
add
push
push
mov
adc
cmp
or
data16
fptan
aam
xlat
push
pop
mov
aad
fnstcw
adc
shl
test
adc
nop
pop
repz
enter
rorb
jnp
jbe
repnz
jns
cmp
test
dec
inc
add
cmp
push
dec
mov
es
push
sarl
cld
stos
stos
xchg
and
xchg
cld
add
mov
insl
jg
loop
sbb
cli
pop
mov
adcl
mov
ret
into
mov
ret
les
sub
loop
imul
and
lods
sub
repz
add
fadds
jp
pop
pop
pusha
cmp
and
into
ret
inc
mov
pop
xlat
pop
lahf
cli
add
sbb
jb
rolb
movsb
sub
jne
xchg
aad
cmc
es
adc
movsb
mulb
and
push
xchg
stos
sti
add
lahf
push
out
test
xchg
inc
mov
inc
sahf
jae
aas
mov
call
pop
add
cmp
mov
sub
fldenv
or
and
mov
subl
lret
out
sbbb
jl
add
into
stos
push
leave
movsl
cmc
push
cli
rcr
repnz
cmp
int
xchg
xchg
sti
out
test
xor
cmp
or
push
fistpl
xchg
mov
adc
sbb
arpl
and
and
ja
jno
jae
inc
push
and
dec
pop
std
fmulp
into
sub
aad
dec
inc
xlat
mov
jbe
pop
dec
leave
loopne
lret
and
mov
aad
xor
push
fisubl
in
cmp
mov
mov
xlat
push
cmpsl
aaa
inc
dec
test
sahf
or
push
leave
lds
aaa
rcrb
repnz
fldt
rclb
sahf
lret
pop
pop
cmp
sub
scas
xchg
jnp
jns
and
repnz
popf
xchg
or
scas
push
pop
cmp
fnstenv
icebp
push
decb
xor
or
aam
repnz
jae
mov
clts
in
ret
imul
shl
loope
sbb
hlt
xchg
add
lods
mov
push
push
sub
cmpsl
push
mov
pop
rcl
and
imulb
jmp
ja
sub
add
mov
adc
nop
push
adc
push
scas
xchg
inc
fldenv
add
xchg
sbb
clc
stos
stc
inc
fistps
pop
test
rclb
out
dec
fcmovnu
inc
lret
inc
rcll
sbb
pop
inc
enter
popf
in
inc
sbb
push
cmp
lret
shll
insl
clc
and
rcrl
add
dec
push
mov
loopne
jmp
push
add
ret
sub
pop
and
and
mov
icebp
push
push
scas
push
add
imul
adcl
sbb
cmpsb
pop
int3
sbb
mov
in
es
mov
test
lock
repnz
fsubrs
lock
stc
cmp
sbb
sti
mov
in
add
ljmp
inc
in
ret
iret
popf
inc
adc
ret
inc
sbb
cwtl
pop
test
sbb
or
insb
outsl
ret
and
cmpsb
imul
dec
cs
mov
adc
add
fwait
sbb
push
xchg
xlat
leave
mov
sti
popf
shll
jl
ja
aam
jno
sti
fldl
aas
sbb
mov
mov
push
loopne
mov
and
push
inc
dec
lret
lret
fisttpl
push
scas
cmp
sti
shl
dec
iret
mov
cmpsl
fstpl
add
ja
add
mov
pusha
and
test
pusha
jmp
into
repz
imul
mov
clc
fxch
inc
mov
sbb
aam
lcall
pop
sarb
xchg
in
pushf
mov
addr16
sbb
lcall
jl
pop
data16
mov
xchg
and
loope
out
dec
mov
xchg
icebp
cltd
out
cmpsl
repnz
call
sbb
rclb
pop
push
push
sbb
mov
jns
fdivl
std
enter
sbb
js
les
add
sbb
mov
xor
inc
pop
call
cld
test
push
push
fldt
xor
adc
cltd
sbb
imul
aaa
cwtl
test
ret
push
cmpsl
add
jmp
xor
inc
ljmp
inc
inc
sbbl
int
notl
cwtl
jecxz
push
push
cmpsl
cli
test
loop
pusha
and
pop
mov
and
add
push
mov
mov
sbb
push
mov
rcrl
lock
sub
add
inc
in
push
mov
cmpsl
ror
sbb
jns
in
jb
adc
sub
movsl
mov
jp
mov
xchg
dec
incl
sti
jnp
push
add
stos
scas
adc
jle
and
jne
daa
mov
dec
push
sbb
add
mov
cltd
testl
call
mov
fldt
dec
cmp
xlat
cmpsl
pop
loope
xchg
mov
ret
mov
xlat
mov
dec
pop
cmpsl
or
mov
std
sbb
ret
xlat
mov
iret
mov
xlat
mov
pop
push
clc
mull
push
jecxz
int3
mov
test
imul
cmc
or
xlat
shl
jp
arpl
inc
in
push
in
in
in
push
sub
mov
xchg
test
xchg
cmpsl
push
mov
in
jb
ss
jecxz
mov
int3
jmp
xchg
mov
sti
adcb
jb
fadds
repz
sbb
mov
ficoml
mov
lret
data16
push
push
stc
aad
ljmp
jle
popl
rsqrtps
loope
xchg
bound
fstpt
popa
iret
jns
shll
fdiv
fs
stc
jmp
int
mov
push
ja
pusha
subl
ret
mulb
pop
jo
mov
push
inc
addr16
negb
dec
enter
push
pop
jno
push
clc
in
iret
roll
xlat
xor
stos
lret
push
out
mov
icebp
push
in
fildl
xchg
rorl
xchg
fwait
mov
push
mov
stos
mov
jmp
testl
and
stc
lcall
add
cltd
js
pop
mov
cltd
jmp
add
cmpsl
pop
push
ret
and
xchg
push
shlb
push
sub
xor
hlt
cld
lods
int
dec
rclb
aam
inc
xchg
add
ret
sbb
notl
push
push
dec
lods
mov
aam
aam
dec
mov
inc
adc
aad
fidivl
xlat
repz
pop
push
fcmovne
sbb
mov
xor
cmpsl
lret
jecxz
scas
fistl
add
pop
sbb
push
sbb
cmc
adc
xlat
adc
jo
gs
in
je
shlb
cmc
sub
push
test
jge
cmpsb
popa
outsl
cli
xchg
cmpsb
and
and
fsts
mov
sti
leave
icebp
xchg
test
adc
jb
popf
je
rolb
mov
outsb
leave
ja
inc
ljmp
and
divl
cmpsb
pop
sbb
iret
lret
movsb
jae
push
mov
xor
imul
lret
icebp
pop
adc
aam
lahf
fs
sub
jl,pt
and
mov
int
lret
lock
xor
adc
int
out
inc
xlat
imul
das
dec
repz
add
lds
pop
fwait
jl
lret
cwtl
mov
sti
adc
repz
push
jno
lods
dec
mov
xchg
fimull
loope
jmp
jle
aam
popa
push
repz
jmp
orl
xlat
aad
lds
adc
pushf
sub
mov
xor
popf
or
icebp
adc
sbb
mov
rcrb
outsl
cli
adc
cmpsl
insl
mov
test
stc
sub
push
imul
fisubl
xchg
out
sub
inc
hlt
cli
pop
andl
xor
push
sub
iret
jns
iret
into
dec
ror
jmp
dec
idivb
lock
xchg
leave
push
int
mov
ja
sbb
popf
in
loopne
mov
outsb
ja
mov
xchg
lret
hlt
or
cmp
ffreep
xchg
cs
mov
insb
dec
negl
out
mov
pop
sbb
jne
rolb
pop
push
lds
push
push
out
mov
repz
jp
loope
lock
data16
std
insl
jg
adc
inc
nop
pop
jo
and
ror
push
imul
inc
jb
inc
std
imul
das
icebp
or
mov
pop
popa
or
fstl
xor
dec
repz
hlt
xchg
stc
lea
xchg
mov
fwait
mov
push
iret
clc
mov
push
sbb
lods
xchg
push
lods
and
clc
xorps
leave
adcb
out
stc
jbe
imul
xchg
in
icebp
xor
dec
lret
loopne
lds
rcl
out
int3
pop
xchg
inc
ljmp
sbb
jg
jne
cmc
clc
add
std
pop
adc
icebp
pop
out
repnz
inc
mov
mov
push
stos
les
rcr
xor
aam
xor
aam
pop
rol
add
adc
aas
adc
or
pop
out
mov
mov
pop
scas
mov
sbb
pop
ljmp
mov
jle
push
push
je
aam
out
jae
lea
ficoml
nop
mov
aaa
sbb
push
test
sub
or
out
mov
add
mov
das
xchg
test
out
ljmp
push
and
ja
fstl
or
ja
shrl
xor
and
xorl
add
dec
stos
in
pop
adc
xlat
inc
lock
mov
lahf
mul
aam
clc
pop
jecxz
pusha
xchg
sbbb
or
leave
mov
push
in
inc
mov
jmp
mov
clc
scas
and
dec
cmpl
scas
stos
push
stc
cli
int3
xor
es
mov
icebp
dec
cld
mov
jbe
lds
fstps
cs
adc
testb
cmp
sbb
mov
cmpsb
pop
dec
rcrb
push
rcll
lea
aad
mull
dec
icebp
sbb
sub
mulb
fcmovnu
aaa
xlat
xor
adc
xor
imul
sbb
jb
adc
mov
les
xlat
inc
jg
scas
jb
stc
mov
push
loope
pop
jp
adc
loop
repz
dec
fcmovb
jb
push
leave
cld
loope
in
and
lods
jno
popa
mov
leave
mov
ljmp
lcall
push
pop
cmp
sbb
adc
fucomp
mov
xor
fidivl
fdivl
sub
mov
dec
dec
pop
out
fstps
xchg
push
jo
xchg
inc
in
outsb
cltd
ljmp
mov
sbb
clc
xlat
movsb
adc
pop
lock
cli
mov
cmp
fsts
testb
mov
fcomi
shl
leave
jo
pop
mov
xchg
lock
inc
cmp
in
sub
repz
int3
xlat
inc
cmpsl
in
dec
add
sub
push
and
pop
inc
les
add
mov
aad
xor
test
xlat
shll
xchg
jle
mov
inc
aas
out
addr16
push
test
fs
rcll
or
xchg
mov
sub
ljmp
sti
mov
adc
mov
repz
clc
jp
clc
or
jnp
enter
enter
aaa
xchg
mov
orl
popa
std
fs
xchg
stos
mov
das
lret
fisubrs
xchg
sti
jp
enter
xor
lds
ja
sbb
and
lcall
lock
inc
add
push
pop
pcmpgtw
xlat
lods
add
nop
cld
pop
pop
or
push
pop
orb
shl
dec
or
mov
popf
jnp
add
cmp
sub
repnz
call
repz
ret
stc
pop
cmp
pop
jecxz
repnz
mov
rcr
xchg
ret
mov
out
push
xchg
lock
jb
aad
push
insb
nop
clc
repz
jg
aas
loope
repnz
in
fistl
sub
sbb
xchg
sbb
or
ret
and
icebp
fdivrp
iret
push
notl
icebp
shrl
pop
lock
sub
push
xchg
dec
xchg
es
push
xchg
movsb
mov
rclb
repnz
and
xchg
inc
push
js
rcrb
test
loop
sub
pushf
mov
fstpt
adc
push
aas
or
jno
xlat
add
inc
sbb
pop
dec
mov
mov
lock
pop
add
dec
iret
mov
inc
in
aad
fcmovnb
inc
leave
popf
dec
inc
test
mov
mov
push
inc
mov
mov
jmp
lret
out
enter
add
jae
les
jb
push
fcoms
outsb
std
lods
fcomi
test
movsb
out
xlat
adcl
mov
gs
std
xchg
mov
and
shll
imul
add
fisubl
jecxz
test
outsl
cmpsb
add
rcr
mov
push
dec
shrl
pop
push
imulb
rcrl
cmp
push
es
xchg
jno
sysret
pop
div
lods
push
adc
cmpsl
pusha
jle
int
js
xor
hlt
sbb
scas
daa
pop
imul
loope
dec
into
jge
mov
hlt
sbb
out
lods
push
sub
mov
ja
mov
pop
xor
mov
sub
fimuls
inc
in
pop
pop
push
rcrl
cwtl
mov
dec
icebp
rolb
mov
cs
xlat
ret
mov
scas
fldcw
inc
adcb
lahf
test
call
fimull
insb
sub
aad
repnz
inc
pop
mov
jge
fwait
cmp
shll
test
jp
out
ret
jae
dec
ja
sub
popf
test
jmp
pop
loop
mov
negl
leave
jle
dec
filds
push
sbb
shlb
rorl
lods
adc
pusha
call
psubw
jns
mov
jbe
or
jae
or
pop
dec
inc
lods
mov
frstor
jmp
pop
std
mov
cmpb
lcall
cmp
fsubl
fistl
inc
in
out
mov
mov
sub
mov
pop
cli
mov
dec
jb
inc
stos
push
inc
stc
inc
aaa
test
add
inc
jb
inc
movsl
test
or
mov
data16
enter
orl
rcll
mov
into
mov
pop
sub
ja
cwtl
fcoms
cmpsl
mov
mov
dec
lret
pop
leave
flds
cli
xchg
das
ret
fimuls
mov
filds
fisubrs
fcmove
jns
sbb
jae
pop
jns
clc
lcall
mov
sub
lock
fstpt
stc
mov
lock
insb
push
jne
mov
stos
stos
adc
mov
dec
adc
jo
fbld
stos
lds
pop
mov
xchg
pop
hlt
push
icebp
fmull
or
mov
movsb
in
jbe
popf
xchg
cs
inc
push
mov
nop
sbb
scas
cmp
sbb
daa
arpl
dec
icebp
shll
lds
addb
repz
rcr
add
jp
mov
xchg
jmp
leave
roll
movsb
mov
addb
icebp
stos
inc
fimull
loope
sarl
in
ds
outsb
xor
push
cltd
fcmovbe
dec
pop
inc
sarl
repz
imull
aam
insl
and
cmp
jbe
fldt
cmp
and
divb
mov
cmpsl
sahf
jbe
cld
popa
adc
pop
jne
pop
add
cmpsl
arpl
out
xchg
and
fists
add
sbbb
xor
mov
test
mov
out
mov
cltd
push
ret
pop
or
lret
or
ret
or
fildl
fdivrs
add
mov
xor
jle
jno
fistl
ffree
xchg
and
in
cmpsl
inc
xchg
icebp
clc
stos
jno
aaa
jbe
xchg
test
dec
dec
ret
rcrb
ja,pn
fisubrl
es
sub
in
mov
pushf
aaa
notl
inc
cs
clc
push
cli
cmp
adcb
dec
rorl
cmpsl
sbb
lret
bnd
fucomi
cltd
dec
sbb
mov
imulb
pushf
nop
and
in
pop
fisttps
mov
sub
mov
inc
xor
add
fistpll
repz
and
adc
add
in
push
idivl
xchg
mov
jl
jg
repz
aad
inc
push
pop
push
out
icebp
mov
shll
mov
sbb
subb
fwait
lock
loopne
sbb
jmp
ja
dec
jle
lahf
mov
mov
imul
sub
lea
push
push
test
sub
xlat
inc
lods
mov
icebp
dec
repz
shl
jb
lahf
add
pusha
fs
adcl
rclb
mov
aad
fists
cmc
lds
xor
icebp
or
pop
mov
out
jle
aad
mov
ss
jnp
mov
and
adcb
adc
sub
adcl
xchg
lea
jg
pop
pop
mov
mov
stos
inc
xor
and
jmp
mov
push
dec
das
into
sub
dec
fstpl
fistl
xor
xchg
jle
aas
cmp
push
out
xorl
pop
ret
fisubs
or
test
sub
inc
lret
sbb
test
mov
jae
dec
mov
test
lea
in
adc
xchg
out
push
popf
ficomps
xchg
inc
lods
fcmovnbe
repz
fcmovne
mov
mov
xchg
mov
xchg
addr16
insl
pop
push
sti
jmp
push
mov
xchg
push
imull
orl
orl
ja
daa
mov
xor
add
lods
shll
add
lds
mov
int
sub
jno
in
fptan
into
fsts
push
dec
jp
ljmp
call
mov
lahf
shll
xchg
aad
aam
fwait
and
into
pop
int
sub
push
insb
xlat
xorl
jae
repz
loope
xlat
jo
ret
pop
jg
fisttpll
aaa
xchg
rclb
mov
push
addr16
xlat
sub
jne
arpl
aad
iret
pop
mov
pop
pop
lcall
mov
mov
testl
rorb
mov
mov
pop
leave
sar
jmp
jmp
xchg
pop
xchg
ficoml
sbb
loopne
sbb
mov
xchg
sbb
lds
add
add
jmp
lcall
adc
push
fnsave
ljmp
dec
jp
fmull
mov
mov
divb
ja
lds
mov
ret
cmpb
mov
lcall
xchg
insl
and
xor
dec
das
jp
scas
out
lret
movsl
js
xlat
or
aad
mov
hlt
cld
mov
dec
cmp
jb
repz
add
test
mov
jmp
jmp
jb
test
icebp
lret
mov
and
fldl
dec
fisubrl
cmp
push
scas
inc
cmp
pop
xchg
subl
mov
aaa
xchg
add
scas
popf
mov
subb
test
std
mov
pop
imul
xchg
mov
push
icebp
test
pop
ljmp
mov
or
jl
add
pop
lcall
pop
aam
in
dec
ret
add
fbld
adcl
pop
pop
xchg
lods
movsb
mov
xchg
pop
std
xor
or
daa
mov
mov
mov
out
loop
push
cmpsl
mov
loopne
xchg
mov
jmp
jmp
popf
push
es
into
out
lcall
lret
sbb
mov
and
pushf
jnp
loop
fcomp
inc
fiadds
sub
mov
xlat
movsb
mov
pop
push
shll
dec
cmc
imul
sub
push
lock
mov
and
xor
sub
es
in
fildl
jg
sub
sbb
cmc
lret
mov
imul
sti
or
sti
and
movsb
outsb
mov
sbbl
cmp
xchg
icebp
cmp
dec
sti
mov
aas
cwtl
enter
sbb
ss
nop
mov
test
dec
in
div
push
sbb
mov
js
pushf
fsubs
cld
push
jae
repnz
loopne
out
daa
ret
sub
arpl
repz
mov
icebp
adc
or
lcall
xor
imul
xchg
push
sbb
shr
stc
ja
negb
sti
jns
cwtl
out
nop
push
adc
aad
movsl
icebp
mov
repz
repnz
int
mov
nop
adc
insl
or
mov
rep
mov
rol
mov
mov
sbb
dec
push
test
push
fwait
push
xorl
cmp
int
pop
aam
jmp
es
test
cmp
test
aaa
notb
test
call
notl
ret
repnz
mov
mov
mov
fptan
dec
stos
inc
pop
fwait
pop
lea
popf
mov
or
lea
xchg
xchg
mov
shll
inc
lret
lret
mov
fst
mov
out
xor
cmp
sub
inc
popf
cmp
pushf
test
inc
cmpsl
jne
or
ljmp
jno
ret
jp
and
adc
inc
mov
cltd
addl
loop
sbb
mov
xor
adc
lods
cli
clc
inc
dec
xchg
and
pop
mov
push
ret
inc
jmp
fldln2
xchg
inc
lods
rcrb
je
adc
sbb
xchg
xchg
sbb
push
xchg
test
shlb
or
jo
fwait
clc
sbb
xchg
bound
push
dec
jle
push
mov
test
pop
add
popf
fisubl
push
pop
jb
popf
push
inc
xchg
cmp
jmp
pop
jmp
clc
enter
xchg
leave
mov
loope
cmpsl
bswap
add
cs
xlat
inc
mov
mul
pop
inc
mov
repz
stos
gs
divl
and
jmp
mov
daa
inc
ss
jp
fildl
pop
sbb
jecxz
xchg
out
sahf
push
lds
pop
inc
sti
jae
mov
cmc
push
dec
iret
in
in
jle
insb
fwait
push
stc
cli
int3
std
inc
cmpsl
mov
dec
idivl
mov
std
xor
repnz
mov
inc
xor
xchg
das
pop
popa
fstps
cmpsl
aam
dec
repnz
push
mov
rolb
cmp
jecxz
je
jo
notb
pusha
add
sub
mov
push
or
jb
jmp
pop
and
incl
mov
xchg
aad
neg
shrb
and
adc
xchg
xchg
jb
in
add
or
add
js
in
leave
push
adc
std
push
ljmp
add
cmp
jecxz
mov
mov
mov
mov
jmp
mov
lahf
gs
std
pop
imul
subl
cmpsl
xor
mov
out
xchg
in
repnz
add
adc
fucompp
repnz
in
push
xchg
dec
int3
std
jns
jge
sarb
mov
inc
fildl
sbb
push
loopne
jecxz
inc
ds
pop
out
jmp
into
sbb
fidivl
mov
lret
xchg
idivb
ds
jno
mov
idivl
icebp
jmp
insb
ja
cmp
inc
call
or
xchg
fcoml
push
xchg
mov
and
push
test
mov
shr
lock
mov
jl
push
imul
or
test
xchg
jnp
fcmovu
aaa
cmp
and
sub
cmp
jae
rclb
into
sub
subb
call
repz
rep
xchg
ficompl
cmp
fisttpll
pop
cmpsb
test
leave
sti
mov
fisttpll
push
mov
mov
jb
xchg
mov
ja
mov
or
mov
cmp
ds
outsb
int
clc
sbb
xchg
lea
sub
or
into
and
xor
cmp
mov
pop
mov
ficoms
fnstsw
arpl
into
stos
cmp
not
mov
daa
sahf
inc
popf
popa
inc
ds
sub
lods
xor
loope
shrb
push
lret
hlt
notb
stos
in
fstps
jb
incb
push
jbe
es
jb
sbb
std
mov
mov
sahf
push
inc
out
call
stc
jno
inc
pusha
popa
call
dec
xchg
sub
dec
shlb
cmc
mov
jmp
fs
xor
cli
addr16
out
in
addr16
fs
push
in
dec
flds
loop
push
xchg
dec
fwait
mov
std
leave
lods
lds
pop
mov
jle
aam
in
sahf
cli
arpl
test
cmc
fs
xor
xchg
repz
mov
les
inc
jp
and
or
push
jbe
test
jmp
xchg
xlat
cltd
or
setns
lods
cmp
rclb
jecxz
imul
mov
movsl
scas
sarl
icebp
pop
jmp
repz
sti
pop
adc
xchg
push
lcall
xlat
rcrl
test
lea
test
sbbl
mov
mov
xchg
lds
addr16
xchg
push
jecxz
pop
xlat
fistpl
cmpl
mov
sbb
ret
jno
jno
ljmp
lds
dec
pop
divl
sub
cli
jge
mov
stos
mov
pop
mov
push
shl
push
mov
lock
shr
mov
stos
lock
in
repnz
out
mov
subl
lret
in
xlat
int
insl
mul
pop
mov
inc
xchg
xlat
cmp
ret
xchg
ja
xlat
xchg
adc
in
sbb
xchg
adcl
aas
xchg
daa
inc
loope
test
daa
sahf
shl
sbb
addl
loop
xlat
push
fildl
cltd
push
lahf
lea
lock
mov
xlat
xchg
andps
sub
mov
sub
adc
xchg
pop
jmp
push
push
ficoml
mov
icebp
stc
repz
push
lock
icebp
int3
bound
or
inc
adc
iret
js
aam
sahf
jbe
std
xchg
mov
xor
or
mov
push
push
push
mov
or
lcall
int
mov
adc
jmp
test
pop
sahf
js
xchg
mov
jmp
cmpsl
adc
xchg
sub
gs
sbb
cltd
jnp
inc
mov
fadd
aam
mov
bound
fidivrs
pop
xlat
xchg
in
loope
out
fcmovnbe
scas
inc
or
mov
sti
mov
mov
sbb
aad
push
jecxz
cmpsl
aaa
jecxz
inc
adc
cmpsl
into
add
packuswb
lea
add
jg
or
fucomp
ficoml
testb
pop
push
jbe
mov
orb
fildl
add
enter
cmp
lods
pop
adc
sbb
add
ret
clc
mov
push
xlat
hlt
in
sbb
notl
push
movsb
jns
add
pop
xchg
jnp
in
jae
push
repz
mov
sub
or
rclb
or
rcl
sbb
pop
mov
rcll
mov
mov
arpl
fcomps
xchg
xor
pusha
jbe
mov
inc
inc
addr16
jb
ret
xor
pop
adc
mov
xchg
adcl
and
fcoms
xor
lahf
sahf
inc
addl
dec
inc
loop
scas
xor
ret
pop
and
movsl
cltd
cmc
pop
push
jl
sub
fwait
push
cmp
cmpsl
cwtl
out
loopne
jbe
rorl
sub
test
pop
or
xchg
popl
add
test
iret
jns
arpl
xlat
mov
jl
dec
imull
or
gs
loopne
int
pop
ret
insl
imul
xchg
xchg
not
lds
xchg
fimuls
cli
jno
push
fmuls
mov
sub
test
mov
testl
rclb
loope
xor
pop
pop
and
pop
xchg
sub
rep
xchg
mov
cmpl
repnz
jmp
add
div
jae
sti
repz
sub
xchg
out
ja
popa
icebp
cmp
movsb
xor
int3
rolb
fldt
dec
pop
xchg
jnp
add
mov
out
cmp
or
enter
sti
loop
mov
addr16
xchg
inc
rolb
pusha
push
push
test
xchg
sar
test
stc
inc
push
ja
out
pop
pop
cmpsl
mov
jecxz
xchg
xor
ror
jnp
sahf
add
push
stos
ret
ret
aad
xchg
pop
inc
out
fidivrl
cmp
add
jge
rorb
fcmovnu
imul
daa
outsb
adc
loop
sarb
ss
ja
ss
ss
pop
mov
xorb
rcrl
aad
daa
xchg
iret
test
xchg
test
repnz
mov
push
popf
dec
mov
divb
lods
mov
aam
pop
mov
dec
xchg
push
or
jns
dec
insl
push
xor
loope
pop
fnstcw
xchg
pop
push
xlat
dec
mov
shlb
dec
inc
mov
inc
loop
ficomps
fstp
push
jae
or
cmp
adc
ljmp
mov
pop
push
mov
cmpsl
jmp
and
aad
sbb
xchg
jnp
fimuls
dec
pop
push
pop
es
out
cmp
inc
adc
jo
data16
shrb
jb
inc
lods
or
repnz
sub
scas
mov
js
cld
inc
fstpl
dec
or
and
jb
jmp
jnp
mov
aas
fnstsw
int
shl
xchg
dec
push
push
stc
or
pandn
sub
mov
xlat
jb
xchg
hlt
mov
iret
adc
mulb
mov
std
xchg
mov
ret
addr16
push
jae
addr16
in
les
mov
dec
jp
ret
mov
xlat
push
popa
gs
cmc
pop
mov
out
arpl
iret
pop
fwait
mov
add
or
push
sahf
push
sahf
repz
jbe
lock
adc
repnz
call
pop
push
cli
mulb
mov
lahf
inc
ja
and
loop
stc
mov
pop
inc
jbe
aas
jae
mov
fidivl
je
jmp
jl
ja
cltd
cwtl
divb
pop
pop
push
fdiv
addr16
mov
fs
loope
mov
ja
cmc
sub
cmc
lods
mov
fstp
pop
push
adc
leave
sahf
notl
sbb
ret
pop
movsl
jb
fs
jmp
jae
mov
mov
fcoms
adc
add
mov
stc
add
lret
hlt
fwait
or
adc
ret
repz
roll
fsubrs
fcomip
xchg
pusha
jb
imul
push
sti
shl
mov
mov
movsl
repz
mov
jecxz
lods
inc
mov
pop
push
sti
or
or
jbe
rcrl
jno
arpl
adc
sub
inc
cwtl
fucompp
int
fisttpll
jmp
iret
xchg
adc
pop
ror
mull
or
cli
mov
test
push
sbb
lss
push
aad
dec
icebp
xchg
push
orl
cmp
aad
ret
aas
mov
xorl
fwait
jns
icebp
dec
aad
jae
lock
mov
jne
out
cmc
lret
mov
jmp
inc
mov
loope
xchg
std
je
jne
add
stc
dec
sub
in
lods
add
and
test
adc
pop
leave
sbb
pop
rcl
inc
ja
fcoms
pop
ja
int
movsl
sarl
jge
ja
push
sarb
popf
cwtl
rolb
fs
sbb
stos
inc
cltd
sahf
sbb
cmp
movsl
cmc
xchg
jo
xchg
call
loope
xchg
aad
fs
imul
fcmovnbe
rcr
mov
repz
popa
shll
je
in
fldcw
mov
sub
repz
ljmp
mov
pop
sbb
fwait
adc
std
test
push
daa
ljmp
pusha
je
arpl
rolb
add
rorl
fwait
repz
leave
cmc
mov
addr16
loop
pop
fwait
inc
stc
add
shl
and
fsts
mov
dec
mov
addr16
lea
inc
rol
cmp
mov
lret
jo
push
mov
testb
jo
lock
insb
adc
xchg
rcll
mov
pop
jnp
or
cwtd
dec
mov
dec
shrb
dec
inc
pop
xchg
dec
popa
out
mov
mov
jle
ror
xchg
in
cs
mov
jmp
adc
xlat
sub
inc
mov
stc
jbe
push
sub
push
pop
sti
div
xlat
mov
clc
fs
dec
adc
loope
rcrl
adc
iret
sbbb
or
mov
xchg
jno
cltd
ljmp
into
ret
out
addr16
mov
jbe
outsl
push
pop
push
mov
int
aad
mov
push
ja
pop
imull
dec
xor
jns
jmp
jno
xchg
pop
iret
jo
int3
adc
imul
cltd
sbb
xchg
enter
mov
pop
mov
pop
push
mov
xchg
push
aam
inc
mov
rcll
out
pop
testl
xchg
and
sbb
repnz
jge
sub
iret
inc
aaa
imul
outsl
rcr
out
rcrb
repnz
dec
mov
dec
neg
pop
mov
mov
pop
mov
loope
pop
jmp
fbstp
fstp
jo
in
out
das
fdivl
pop
xchg
fdivl
rorb
push
xchg
ret
mov
flds
icebp
icebp
pop
push
inc
pop
in
mov
lahf
or
pop
xchg
in
mov
jns
jg
xchg
lahf
pop
stos
mull
sbb
mov
mov
mul
fwait
out
and
pop
push
stc
ret
adc
inc
fidivrl
lock
out
inc
push
add
or
dec
stos
push
fucom
jmp
cmp
inc
cwtl
mov
jb
jmp
sti
inc
pop
dec
sbb
adc
pop
pop
rol
xchg
cld
and
jno
jp
jmp
pop
push
sbb
mov
inc
xchg
fdivrs
pop
mov
pop
not
fcomps
adc
les
test
pop
mov
in
decl
mov
addb
test
bnd
adc
push
addb
popf
mul
mov
fdivp
cmp
inc
stos
testl
test
repnz
cmpsl
inc
adc
stos
inc
pop
loope
xlat
repz
mov
mov
sbb
inc
loopne
sbb
fwait
les
inc
inc
call
adc
lret
out
stos
les
stos
dec
stos
repnz
xor
jbe
sub
cmc
arpl
dec
jl
jno
rorl
mov
test
aad
popa
sbb
dec
pop
movsl
sahf
mov
add
es
rcrl
push
xchg
pop
inc
xchg
js
mov
aam
test
pop
xor
shll
popf
imul
ret
incl
int
lret
iret
fistl
xorb
scas
adc
std
push
xchg
hlt
lahf
inc
not
cmc
inc
jo
inc
iret
xchg
icebp
sahf
fbld
mov
pop
testl
push
fimull
pop
or
mov
sub
mov
sbb
fcmovnb
inc
ret
jecxz
mov
outsb
xorl
in
lods
loope
jnp
add
out
ljmp
adc
icebp
pop
jmp
icebp
jb
cmpsb
mov
movsl
sar
stc
sub
push
add
inc
pop
inc
and
call
ret
mov
mov
mov
or
xchg
aam
fdivs
shll
out
popa
outsl
lahf
das
push
mov
insb
inc
fisubl
jns
inc
daa
and
rorl
adc
xor
rorl
pop
mov
pop
xchg
adc
clc
clc
test
xchg
xchg
inc
sbb
repz
imul
sbb
dec
inc
pop
in
fwait
pop
mov
andl
andl
mov
pop
std
leave
mov
xchg
stos
ret
cmp
inc
shlb
add
into
xchg
sarb
xorb
movsb
lcall
lds
inc
inc
cmpsb
inc
icebp
xchg
jge
and
xchg
sti
leave
shll
mov
inc
and
shlb
int
repnz
movsl
dec
adc
fninit
jno
insb
addr16
mov
push
push
jl
fisttpll
lods
bound
fcmovbe
mov
xchg
mov
cmc
fs
mov
sub
mov
jbe
and
mov
jmp
jb
movsl
iret
inc
jo
dec
jmp
sbb
xor
in
icebp
les
out
fistpll
stc
mov
fcmovnb
mov
leave
push
icebp
cmpsl
int
inc
xlat
cltd
pop
iret
mov
mov
outsb
push
or
inc
adc
pop
fld
int
lahf
mov
push
aas
popa
ja
jno
ret
popf
pop
adcb
pop
popf
aad
or
test
push
test
sub
xchg
sti
pop
push
out
fildl
xchg
xchg
std
sub
push
cltd
jb
mov
out
iret
enter
or
fcmovnbe
push
jbe
out
push
mov
mov
rolb
inc
xor
insl
es
nop
pop
sbb
or
sbb
cmp
inc
fsubrs
pop
dec
ficoms
fildll
je
pop
push
sbb
mov
inc
xchg
fnstsw
pop
scas
fcoml
das
pop
mov
fmuls
inc
push
push
xchg
cmc
inc
sub
dec
daa
popf
cli
push
push
add
inc
lods
clc
js
and
dec
add
xor
hlt
in
rcrl
push
jnp
sbb
les
pop
add
imul
mov
icebp
lret
dec
jge
leave
mov
cld
repnz
jg
orb
into
les
push
inc
dec
call
adc
repz
xchg
fildll
js
insl
insb
jne
lahf
push
loope
popa
aad
notl
or
leave
jge
lret
fdivrp
cmpsb
xorb
fmuls
jle
iret
lods
mov
xchg
mov
iret
popf
mov
mov
mov
js
enter
icebp
xchg
inc
dec
jo
lods
leave
adc
fsin
enter
xchg
sbb
pop
mov
xchg
mov
sub
mov
movsl
pop
ret
iret
ret
in
xchg
mov
jecxz
sti
fsts
and
mov
aad
enter
sub
leave
aas
int
shll
lret
ret
sub
stc
dec
out
rol
aam
jmp
ja
rcrl
scas
xchg
rcl
push
daa
stos
cltd
xchg
incb
js
aad
out
push
jbe
movsl
pop
pop
fcmovnbe
cli
mov
fwait
adc
jne
in
lds
push
rcr
push
adc
pop
or
sbb
adcb
push
shl
test
xchg
out
stos
and
xchg
pop
lret
dec
inc
add
or
mov
dec
jmp
jmp
push
out
push
mov
xlat
mov
sub
mov
or
iret
push
testl
inc
and
xchg
stos
stc
mov
mov
test
push
fwait
aad
mov
fistpl
pop
out
push
loope
mov
lret
xlat
vpshufd
iret
dec
scas
xlat
inc
jb
aas
mov
stos
jo
push
pop
mov
arpl
dec
sbb
fwait
dec
fstpl
fdivrs
idivl
push
mov
test
vmovhps
jp
xchg
aad
aad
fldenv
ret
jnp
mov
roll
in
inc
sti
les
adc
sub
inc
or
pusha
or
push
mov
fcomip
aad
pop
stc
mov
out
in
fistl
loope
aad
push
test
aad
mov
stc
popf
xchg
mov
arpl
mov
in
jnp
aam
sub
xchg
icebp
roll
push
xchg
cwtl
jnp
xlat
fdivrs
outsb
gs
aam
cli
js
ljmp
outsl
out
inc
loope
pop
data16
stos
loop
sbb
shll
out
push
sbb
icebp
xchg
testl
stc
ja
xchg
mov
add
shll
jb
xorl
sbb
pop
repnz
xchg
int
push
push
add
mov
lds
push
push
adc
cltd
jp
mov
lret
cmpb
out
sub
loop
xor
pop
xchg
pop
and
js
ja
lods
scas
icebp
shl
jo
in
out
std
xchg
fwait
mov
xor
or
jmp
jae
mov
pop
subl
dec
sbb
xchg
out
xchg
push
sarl
xchg
loope
daa
xor
fldl
insl
int
cli
aad
call
mov
cmp
push
adcb
loopw
in
xchg
mov
aas
call
stos
inc
xchg
inc
ja
jmp
inc
fscale
or
sub
inc
dec
mov
stos
xlat
rcrl
xchg
push
repz
orb
bound
add
lods
mov
cltd
test
mov
mov
jbe
popf
cmpsl
dec
jae
int
fwait
shll
dec
dec
insl
dec
into
gs
pushf
pusha
mov
movsb
ss
loopne,pn
imul
leave
pop
sarb
sub
inc
jo
mov
js
push
ret
add
iret
ret
mov
dec
add
mov
jge
leave
mov
icebp
lds
mov
in
in
sbb
jno
roll
into
dec
insl
inc
iret
cld
repnz
into
adc
or
mov
jg
shl
push
sub
stc
std
ljmp
shl
jbe
push
add
cli
pop
out
cmp
xor
in
ljmp
stc
fcomi
lds
stos
inc
or
mov
js
xchg
test
mov
ret
fwait
leave
ja
jae
lcall
ja
ret
imul
jb
mov
test
jg
cmpsl
pause
fnstcw
fildl
xchg
out
xlat
mov
stos
sbbl
xchg
add
cld
out
jae
pushl
movsl
mov
loopne
add
sub
aas
movsl
loopne
mov
ja
into
mov
fildl
out
repnz
js
sbb
fcmovu
loope
jb
xchg
cmpsl
dec
fnstenv
out
jbe
movsl
sti
lock
xlat
loope
jo
adcl
mov
hlt
or
fstps
fldl
jle
xlat
mov
pop
fscale
adc
js
cli
repz
test
jge
adcl
int3
stos
lret
inc
int
decb
sahf
pop
shlb
xchg
add
sub
mov
arpl
xchg
push
hlt
add
pusha
sarl
lcall
xchg
push
icebp
popa
loopne
imul
pop
js
fldcw
jg
pop
mov
aam
insl
dec
insb
fistpll
cli
popa
push
decb
push
and
adc
sbbb
std
fmull
jg
mov
inc
sbb
fwait
ret
inc
xor
outsl
rcl
inc
pop
mov
jns
movl
add
int
lods
les
aas
inc
in
in
std
lea
lds
cli
xchg
mov
lret
rcrb
arpl
jo
fwait
repnz
fcmovu
in
orl
jo
xchg
popf
gs
xchg
loope
pop
push
sbb
loope
xchg
repz
out
loopne
out
xchg
push
mov
jmp
shr
ljmp
push
pop
sub
mov
or
mov
adc
mov
addr16
mov
frstor
sbb
mov
dec
xchg
xchg
loope
push
div
mov
aad
pop
mov
push
sbbl
ds
pop
mov
jle
cli
cmpsl
pop
bound
mov
inc
popf
adc
in
into
mov
in
fisubs
sub
pop
test
xchg
pop
add
mov
fbld
pop
fcmovne
aad
inc
cltd
jae
fs
mov
inc
mov
dec
xchg
mov
mov
daa
out
lds
xchg
fxch
jo
inc
aad
sti
or
mov
shlb
movsb
inc
cmp
outsl
scas
jl
pop
fstp
sub
fxtract
mov
mov
or
ds
push
fidivl
test
lret
and
in
aad
jo
xchg
lahf
fstpt
xchg
fstps
fildl
mov
pop
fistpll
aad
ficompl
cld
iret
aad
lock
sti
cld
and
push
lahf
add
inc
stos
cld
xor
push
stc
jmp
mov
lea
shrl
lcall
xor
push
xchg
add
fdivl
mov
mov
adc
aas
rol
sub
sub
jle
push
in
dec
inc
mov
mov
out
scas
inc
sbb
or
push
sahf
cltd
jmp
adcb
int3
sar
xchg
rcrb
mov
mov
ret
and
cmp
leave
push
xchg
xchg
jb
add
shrl
js
or
pushf
ljmp
fstpt
arpl
jo
push
out
and
arpl
cmpsl
inc
notl
fildll
jbe
pop
shll
sti
adc
cmp
xor
movsl
jbe
mov
cmpsl
adc
sub
dec
mov
sar
stos
cmpsl
xchg
sbb
int3
cmpsl
es
aad
adc
jae
push
push
jb
mov
lret
inc
es
scas
rcrb
push
std
dec
mov
cmp
xchg
fucomp
fcoml
insl
cmpl
mov
sub
mov
pop
or
add
call
xchg
lcall
xlat
movsb
mov
aas
imul
adc
sti
repnz
adc
xor
adc
movsl
arpl
push
jl
ret
clc
lretw
data16
push
push
xchg
push
sub
cmpb
jmp
sti
adc
inc
mov
imul
in
xor
idiv
jmp
repnz
jb
inc
lret
mov
pop
mov
lret
out
jb
inc
sbbb
jbe
jno
in
jbe
xchg
mov
push
es
jne
dec
mov
lret
jmp
jl
in
xor
movsl
mov
jo
cmpsb
loop
loopne
xchg
sub
fucompp
pop
ret
rolb
bnd
jp
loopne
and
fnstenv
jo
jns
es
push
arpl
fistl
adc
adc
cs
lods
movsb
mov
mov
add
push
add
test
fsave
jecxz
out
out
jb
adc
sbb
push
mov
loop
jae
outsl
popw
pop
fistps
cmp
pop
aam
sarl
repz
xlat
sbb
mov
shl
sub
or
sbb
cmc
mov
xchg
jmp
fimuls
fsubrl
fcomps
mov
test
mov
hlt
nop
inc
aam
rclb
mov
adc
outsb
div
cwtl
in
mov
pop
xchg
add
cmp
out
nop
xchg
arpl
push
sarl
cmpsl
insl
loopne
rorl
aad
xchg
cmpsl
xchg
sbb
jno
jne
lahf
add
jbe
cmc
cmpl
lahf
xchg
lock
mov
je
mov
push
cmpsl
fcmovbe
es
inc
icebp
cli
adc
cli
lock
fldt
adc
sti
mov
sbb
notb
ficoml
mov
rcll
fistpl
ret
adc
jnp
xchg
int
cmc
dec
mov
mov
loopne
addl
leave
jmp
or
fnstenv
flds
fistl
vandpd
fwait
fwait
in
jmp
rcl
mov
xor
aaa
ret
aaa
fistl
dec
xchg
pop
rolb
inc
mov
inc
rcr
lret
inc
lods
in
loop
pop
shlb
pop
lahf
fdivrs
scas
cltd
dec
fnstsw
icebp
lahf
xor
ja
dec
shrb
pop
push
xchg
inc
lcall
lret
cwtl
fcmovnbe
scas
test
fst
mov
mov
xchg
or
and
rcll
lods
enter
xchg
pop
aas
xor
xchg
fstpt
cmc
push
fcmovnbe
jno
fwait
mov
imul
pop
leave
popf
pop
jp
sbb
pop
pop
jl
out
in
xchg
rol
add
mov
adc
cmpsb
xor
xchg
int
xchg
push
out
idivl
sub
test
pop
fdivl
gs
lret
test
cli
sub
cwtl
repz
jmp
insl
mov
dec
in
cld
dec
clc
into
mov
xchg
jns
dec
fxch
fmuls
test
sti
scas
xor
leave
push
sbb
pop
mov
rcl
lcall
jmp
mov
pop
mov
mov
std
inc
aam
add
mov
jo
push
push
push
or
into
lcall
inc
in
jo
jae
scas
into
sbb
fists
cmpxchg
cs
cmp
iret
stos
insl
ljmp
inc
int3
jge
iret
fisttpl
ja
and
ret
pop
pop
out
adc
mov
sbb
cli
icebp
cmp
adc
and
dec
inc
cmp
fistpl
add
push
test
mov
or
push
inc
repz
pop
add
adc
cmp
pusha
shlb
fimull
pop
xchg
jb
pop
jb
lcall
inc
inc
xchg
inc
fwait
lock
mov
jns
mov
adc
stc
xchg
outsl
aam
ret
mov
mov
adcb
out
loope
fists
repz
pop
cmc
mov
sbbl
xlat
test
mov
fnstsw
adc
pop
lods
xchg
sub
out
pop
bound
aad
nop
cli
push
push
inc
fcmovnu
pop
lahf
jo
shlb
addr16
mov
dec
inc
dec
xchg
orl
out
pushf
jge
sbb
push
push
push
inc
fcmovnbe
shll
push
shl
push
ret
xlat
dec
cmpsl
pop
add
ror
sbb
in
jmp
pop
lods
push
push
pop
add
pop
mov
xor
pop
mov
xchg
xchg
dec
or
adc
pop
pop
repnz
es
xchg
add
cmp
adc
ficompl
pop
dec
cmc
icebp
stos
push
xchg
pushf
pop
rcr
les
mov
add
mov
cmp
adc
add
fstpt
inc
repz
fcmovnu
jg
push
xor
out
ja
cltd
dec
fstl
arpl
scas
aaa
inc
jo
sti
pop
push
xchg
jae
mov
iret
nop
jnp
pop
lcall
mov
push
lret
cmp
testl
and
xlat
mov
fcmovnb
dec
or
push
into
pushf
aam
out
xchg
jnp
or
cmp
inc
pop
mov
xor
sarl
sub
and
pop
inc
inc
fldenv
fdivrp
popf
imul
out
test
stos
std
fbld
inc
jl
add
cltd
add
inc
aad
push
mov
rcll
mov
push
fucomip
rclb
popa
or
stos
cmp
out
xchg
jg
cld
dec
mov
adc
repnz
cmp
pop
add
in
out
dec
xchg
push
push
loope
dec
dec
je
loope
and
mov
gs
cli
fldl
jl
xchg
sub
negl
icebp
mov
cmpsb
fbstp
repz
mov
inc
jo
pop
cmpsl
jns
mov
jl
push
lock
push
dec
insl
scas
insb
shll
aad
or
pop
mov
sbb
sub
ret
scas
jl
add
fstpl
xchg
adc
xor
mov
jnp
adc
enter
jecxz
inc
mov
push
cmp
lds
cmpsl
add
pop
or
dec
sbb
mov
pop
lcall
jmp
lds
addl
into
jne
cmpl
mov
sbb
inc
jo
jb
xor
sbb
icebp
cmp
jnp
push
xchg
push
pop
inc
adc
loope
inc
int
lahf
jmp
push
inc
pop
pop
cmc
mov
mov
ljmp
mov
add
fldenv
push
imul
or
hlt
xlat
adc
ja
inc
fbld
es
add
aad
jo
rcll
sbb
iret
rolb
call
lods
lret
cmovb
adc
rcrl
in
add
out
jmp
imul
push
jno
push
iret
mov
hlt
jmp
mov
fstps
inc
leave
les
sbb
outsl
mov
imull
aad
dec
movsb
inc
dec
fwait
xlat
rcl
cs
arpl
fwait
pop
neg
cmpsl
notb
jp
es
loopne
fcmovb
out
pop
push
mov
push
mov
lods
inc
xchg
rcl
inc
inc
cwtl
fucomp
xchg
scas
mov
xchg
adc
mov
xor
jns
sbb
repz
lahf
les
iret
lcall
xchg
inc
fnstenv
pop
shlb
inc
xchg
xor
push
inc
mov
push
xor
out
loope
stos
xchg
cmp
ret
loope
aam
clc
sbb
push
fldenv
lret
push
push
sbb
es
push
ror
push
out
cmpsl
pop
sub
sub
push
popa
in
rcrb
xor
mov
xlat
xor
js,pn
mov
iret
sub
mov
adc
mov
inc
addb
rclb
fnsave
sar
push
cmpsl
push
imul
fisubl
test
jg
cs
xchg
ret
or
out
cmpsl
push
xor
push
roll
jbe
out
jnp
xchg
sub
mov
ret
jecxz
jge
aaa
push
add
xchg
ret
sub
mov
test
jnp
mov
adc
push
ret
popf
pop
loopne
out
mov
icebp
mov
dec
fstps
push
loopne
rorb
dec
mov
lods
movsl
loope
fstpt
stc
fwait
xchg
stc
fimuls
loop
rcrb
xchg
xchg
fwait
scas
mov
mov
fmul
inc
in
add
inc
add
cmpb
mov
dec
test
push
cmpsl
mov
mov
out
loope
jbe
ret
xchg
lret
dec
mov
ss
jae
ret
push
fdivs
pop
loope
lret
xor
xor
cmp
xchg
lods
je
dec
dec
or
sub
loopne
mov
fcmovnbe
sti
dec
clc
out
dec
inc
notl
mov
outsb
xor
into
push
sub
inc
xchg
push
xchg
jg
aad
orb
std
out
dec
xchg
ljmp
mov
fs
dec
aad
cmp
xchg
jns
pop
lods
lds
jl
repz
sub
jbe
jmp
xlat
sub
jo
adc
push
xchg
xchg
cwtl
lock
lock
clc
test
js
fisttps
push
jns
lds
daa
adc
std
je
xor
mov
into
jp
xor
mov
loope
js
jno
mov
mov
cmpsl
test
inc
jp
clc
or
imulb
adc
loop
daa
aaa
pop
imul
outsb
mov
into
addr16
mov
out
jo
or
adc
cmpsl
mov
pop
sbb
ret
in
repz
jo
pop
fucomi
mov
inc
insl
ficomps
inc
mov
js
sbb
icebp
add
or
pop
jno
fstpt
rcr
mov
cld
mov
icebp
es
mov
aaa
into
orb
lret
xchg
fbld
repz
sub
ds
jb
mov
out
push
xlat
fstpt
mov
inc
sti
arpl
xor
add
jmp
rcll
das
sbb
jg
push
and
adc
push
dec
repz
push
rolb
sbb
inc
dec
leave
jmp
cltd
aad
inc
jae
andl
test
push
dec
out
out
push
cs
and
icebp
enter
mov
cmc
outsl
add
ljmp
fsts
mov
mov
lods
icebp
dec
mov
sub
dec
add
stos
fnsave
js
sub
aad
xchg
push
inc
fistpl
std
mov
adc
icebp
cld
movsb
inc
xchg
xchg
addb
inc
rclb
pop
or
call
call
adc
xor
xchg
jae
repnz
xor
hlt
nop
push
xlat
mov
mov
test
sub
mov
add
adc
adc
movsl
and
rcll
fwait
mov
cs
adc
cmp
adc
rolb
loope
inc
jo
jl
loope
fwait
xor
test
pop
inc
push
in
push
push
int3
loope
fcomip
fstps
fcmovnb
aad
roll
sub
fwait
sub
hlt
inc
xchg
jb
sub
xchg
xor
out
sbb
jmp
outsl
mov
int
decl
lods
pop
jnp
jnp
push
enter
pop
lret
jl
movsb
inc
jmp
lea
mov
pop
clc
sbb
xor
push
or
mov
aaa
pop
icebp
add
dec
inc
jb
xlat
imul
mov
lret
inc
dec
jge
ror
insl
cli
clc
sti
rolb
scas
ret
sub
push
fbld
xchg
fiaddl
in
or
aaa
outsl
sub
xchg
into
pop
sarl
repnz
jg
sar
cli
cmp
lahf
sbb
jno
pop
rol
pop
mov
out
mov
mov
push
rclb
hlt
aad
shll
loopne
shl
imul
outsb
add
mov
mov
int3
push
imul
mov
mov
lahf
arpl
push
or
aaa
xchg
movsl
ja
sub
outsb
mov
mov
sti
lret
sbb
imul
or
jno
add
ss
mov
out
cmp
sbb
push
ds
xchg
inc
pop
lret
rolb
out
jg
test
loopne
mov
jl
jmp
dec
jp
inc
inc
add
inc
fsts
scas
sbb
shrb
in
dec
push
ja
lods
repnz
out
fistl
push
std
jp
inc
jbe
cli
jns
mov
jno
test
sbb
dec
arpl
inc
popf
and
icebp
stc
fldt
xchg
cmpsl
push
iret
cli
fcmovbe
mov
inc
loope
lret
std
movsl
aaa
je
sbb
leave
popa
xlat
push
pop
add
scas
mov
mov
cmpsb
jb
sahf
notb
mov
xchg
xor
push
cltd
inc
lahf
dec
pop
jle
push
pop
test
cs
shl
icebp
les
imul
adc
xor
neg
mov
nop
inc
adc
enter
cmp
sub
dec
fucomip
sub
mov
inc
ss
in
cwtl
lock
xchg
jmp
ror
jb
not
mov
sbb
xor
std
test
mov
add
icebp
inc
xor
pushf
adc
stos
sub
inc
cmp
into
xor
iret
dec
pop
fistl
jp
xor
cmpsl
cmc
test
fists
adc
shl
pop
scas
pop
dec
aad
push
ret
jno
sbb
fxtract
jg
pop
movl
mov
mov
inc
pop
jae
lcall
jne
pop
test
fsts
and
cli
mov
repnz
inc
jg
loop
insb
fadds
movl
or
push
and
sub
icebp
hlt
add
cmp
sbbb
add
cmpsl
icebp
adc
imull
rcll
repnz
jecxz
or
rcll
cs
das
mov
lret
sbb
aad
xchg
imul
mov
mov
cltd
inc
jno
sub
out
cmp
adc
scas
push
imul
out
push
in
icebp
out
jo
and
xor
arpl
stos
jbe
xor
insb
mov
fxtract
dec
xchg
loope
jp
test
or
pop
rclb
and
fiadds
int3
jae
mov
xlat
stc
xchg
mov
adc
lret
cmpsl
sub
xor
loop
in
stc
inc
pop
pop
pop
push
pop
mov
push
dec
in
lahf
inc
cmp
fnstcw
fwait
pop
lcall
lcall
aam
and
je
shll
xor
div
jae
sbb
push
test
fstl
push
call
push
jnp
addr16
lea
add
int3
fcmovu
xor
fwait
add
daa
out
inc
rorb
pop
inc
ljmp
mov
sub
shrb
cmp
mov
inc
lds
push
sbb
popf
xchg
sbb
repz
mov
push
adc
cmp
sbb
jmp
xchg
outsb
sub
pushf
shrl
mov
data16
fisubrs
outsl
shll
cmp
sar
sbb
scas
test
std
sub
mov
std
shll
pop
push
fadds
and
inc
fwait
lcallw
dec
jno
incl
push
xchg
icebp
mov
and
mov
and
xchg
and
sub
cs
xlat
and
call
stc
sarl
insb
push
je
xchg
cmpsb
adc
or
fisubrs
mov
or
ret
in
adc
sbb
mov
es
jo
mov
daa
ja
jb
or
and
push
inc
push
add
mov
inc
cli
jl
push
je
pop
xlat
rorb
pop
pop
push
xchg
adcl
add
lret
cmovbe
mov
les
adc
sbb
popf
nop
jmp
cmp
stc
ret
cld
in
ficomps
xchg
dec
mov
jb
iret
cli
jbe
ret
imul
sahf
repz
js
pop
fildl
push
adc
push
ljmp
shll
jmp
xchg
and
insb
or
iret
test
push
loop
popa
add
adc
ss
int
xchg
divb
test
xor
test
xchg
std
xchg
lahf
add
mov
shrl
or
sub
pop
add
adc
scas
out
pop
les
jmp
cmp
sahf
scas
inc
jmp
roll
jne
mov
cmc
aam
fldenv
in
xchg
mov
pop
xlat
es
daa
ss
adc
nop
sub
ficoml
dec
push
jno
imul
aad
pop
loopne
daa
sub
sbb
ret
jp
pop
daa
stc
inc
pop
mov
in
scas
mov
cs
cmpsb
arpl
imul
push
or
jmp
int3
subb
jg
leave
jae
xchg
in
loope
inc
movzbl
cmpsl
inc
sbb
loopne
fxch
icebp
jo
push
lock
fistpll
inc
daa
xchg
push
jae
jmp
pop
mov
fdivs
pop
xchg
xchg
inc
mov
pop
adc
pop
add
outsb
dec
pop
mov
jmp
mov
jo
inc
inc
js
pop
jmpw
data16
jmp
push
xchg
cld
adc
jo
es
push
repz
fisubrl
push
pop
jl
stc
cs
push
pop
dec
imul
pop
inc
push
mov
test
and
adc
sub
jmp
push
or
adc
mov
or
cld
mov
daa
pop
out
push
lret
mov
out
xchg
jne
pop
dec
cld
cmc
sahf
push
jae
cmp
fisttpl
xlat
sub
sbb
ror
pop
or
mov
lcall
jl
fnsave
xchg
fistps
aam
icebp
adc
sub
cld
aad
jo
jbe
pop
lock
or
out
imul
adc
loopne
cmp
push
pop
in
es
pop
ret
fmuls
dec
push
mov
not
lds
pusha
or
imul
pop
jmp
push
repnz
outsb
jno
repz
dec
mov
push
loop
jbe
repz
aas
cltd
dec
sub
stos
add
sub
sbb
dec
hlt
jb
dec
pop
test
sti
scas
mov
cltd
mov
adc
es
adc
shll
enter
xchg
ss
cmc
adc
sub
aad
icebp
pop
push
stos
adc
vmovlps
cmp
movsl
cmpsl
mov
fistpl
mov
xlat
pop
popa
fcomi
cmpsb
mov
jp
aas
out
cmp
jnp
adc
adc
sbb
jl
mov
js
rsqrtps
and
ds
nop
inc
cmp
jecxz
icebp
xchg
or
in
mov
lret
aad
adc
xchg
ret
fcmovnb
ss
lock
sbb
xchg
sti
fstpl
ret
lret
push
adc
cmp
mov
or
sbb
jl
bnd
adc
dec
mov
sbb
cmp
fstl
mov
std
daa
es
jo
movsb
sub
fistl
jmp
fwait
addps
cmc
push
je
cmp
fisubrs
sbb
in
out
imul
add
jge
repz
sub
xchg
out
outsl
rcll
sbb
aaa
mov
test
lock
cwtl
movl
sub
pop
divb
cmpsl
inc
stos
xlat
xor
cli
cmp
arpl
jmp
sub
aad
inc
sub
inc
mov
dec
fcoml
cwtl
and
mov
ja
mov
test
ffree
jle
xchg
js
imull
fwait
test
adc
pop
lods
icebp
lahf
test
add
xor
cmp
pop
inc
popa
ja
pusha
mov
test
xchg
cwtl
jmp
ja
jb
pop
nop
pop
mov
pop
add
jo
pop
jo
pop
pop
das
ja
int
ss
dec
mov
fidivl
loop
in
fsub
psubsw
mov
pop
adc
fisubs
ljmp
or
xlat
push
fs
xorl
test
pop
aad
xchg
into
jbe
in
sub
cmp
flds
stos
call
xlat
push
xchg
mov
notb
aaa
jbe
pop
add
pusha
movsl
push
pop
xchg
sub
pop
jl
fwait
dec
fnsave
sbb
movsl
inc
stc
push
xor
cmpsl
insl
adc
push
arpl
push
xchg
pop
lret
in
sbb
and
popf
in
lods
xor
push
lea
fisttps
cmp
test
jmp
mov
lods
scas
fistl
jo
testl
jmp
sbb
outsl
fsubr
pop
pop
push
imul
testb
insl
pop
lds
nop
jmp
adc
mov
hlt
xchg
inc
jb
xlat
movsl
ficoml
push
in
out
fwait
dec
mov
fadds
xchg
dec
dec
lods
pop
xchg
jbe
lods
js
push
sbb
movsl
fs
dec
enter
mov
dec
jns
rorb
dec
int3
aad
nop
repnz
xchg
repz
js
jo
fcoml
dec
cld
inc
sti
leave
pop
sti
test
aad
mov
in
dec
sbb
sub
add
enter
cmp
out
stc
sbb
sbb
inc
xor
push
or
mov
pushf
lock
sub
out
imul
cs
jbe
iret
icebp
imul
push
cld
daa
push
test
out
stc
mov
sub
inc
or
lahf
addr16
repz
add
pop
arpl
add
fstpt
push
xchg
rorb
push
push
sbb
cmpsl
int3
dec
addb
mov
jb
fcmovne
divl
aaa
add
add
jnp
nop
and
jne
scas
inc
mov
test
out
lock
cltd
lds
pop
mov
sti
aad
or
mov
cmp
sub
jmp
pop
sbbl
fstpt
jne
call
fstpl
inc
sub
xlat
inc
orps
pop
ja
jne
and
cltd
bnd
xchg
into
sub
mov
out
inc
mov
inc
rclb
dec
pop
dec
jo
push
push
jmp
cmpsl
minps
es
aaa
ret
and
mov
inc
xchg
fwait
adc
test
ljmp
test
jmp
rcr
push
adc
loop
addr16
test
sbbl
lret
pop
jns
xchg
mov
pop
jg
pop
insb
test
adcl
clc
push
or
dec
jbe
xchg
in
lock
fndisi(8087
inc
dec
adc
movsl
pop
arpl
imul
movsb
mov
sub
popf
aam
jmp
mov
hlt
mov
sbb
ss
ljmp
xchg
cs
adc
cwtl
repnz
mov
cli
aad
mov
mov
les
fstpt
lods
je
xchg
xor
mov
and
lea
jmp
cwtl
cli
ret
jb
inc
es
test
sbb
inc
or
sbb
pushf
sub
ret
fidivrl
icebp
loop
ret
xor
negl
daa
pop
push
jne
jmp
lret
cmpsl
inc
jl
and
xor
jnp
lods
dec
enter
sti
gs
add
mull
mov
xchg
pop
inc
scas
inc
out
jne
fisubs
cmc
mov
fmuls
stc
dec
inc
fwait
dec
jb
stos
dec
jns
jo
inc
pop
mov
pop
pop
push
add
out
xor
repz
add
je
fisubs
pop
test
jmp
rclb
xchg
xchg
jns
cmpsl
sbb
outsb
mov
test
addl
cmp
lods
jmp
mov
lds
lods
mov
sbb
cld
mov
movsl
push
bnd
xchg
or
ffree
mov
int
mov
mov
push
mov
lock
dec
fnstenv
mov
pop
fimull
dec
aaa
jnp
push
mov
pusha
inc
aaa
in
push
out
cltd
fcompl
mov
xor
push
ja
xor
mov
pop
xchg
daa
pop
push
arpl
jl
outsl
fstps
mov
aaa
jmp
mov
sbb
adc
sbb
sub
xchg
xchg
iret
sbb
testb
inc
cld
into
jae
and
pop
loope
push
pop
pop
lcall
into
inc
imul
add
pop
mov
sub
jb
loopne
mov
popa
pop
test
add
pop
pop
fcomps
popf
dec
inc
cltd
cmc
rclb
fisubs
push
data16
fstps
cmp
andb
insb
fildl
jmp
idivl
lahf
mov
fistl
orb
xchg
adc
imul
pop
jnp
lods
fdivs
sub
xchg
inc
lahf
stos
js
jns
sbb
ss
sub
mov
push
mov
xor
pop
ret
mov
lcall
cs
or
ret
jb
test
je
pop
xchg
ret
inc
adc
shr
inc
loopne
loop
fsubr
rcrb
push
adc
lcall
inc
mov
xlat
inc
loop
data16
adc
dec
jbe
add
push
pop
sub
dec
rcll
adc
mov
aad
fistl
imul
loop
lahf
inc
jo
adc
iret
iret
bnd
sahf
dec
add
mov
int
imul
sub
inc
pop
ror
jbe
enter
xchg
inc
out
cmpsl
xchg
aad
jp
inc
mov
call
sub
sub
aad
cmpsb
repnz
aam
je
and
shl
cmp
dec
lahf
cli
add
scas
orb
or
fwait
cmpsl
rolb
mov
mov
inc
mov
fldenv
addr16
pop
lock
fs
and
xor
pushw
inc
inc
lret
popa
cmpsl
andl
gs
or
xchg
jg
out
test
ljmp
in
or
out
cwtl
xchg
mov
xchg
testl
adc
inc
fsubl
jmp
adc
iret
push
adc
test
dec
in
lods
repnz
mov
cmp
aam
and
push
add
fnstcw
mov
stos
sbb
jmp
das
mov
in
cmp
jmp
adc
fcmovnbe
call
or
inc
sub
fldt
jno
sbb
xlat
xlat
cmpsl
xchg
repnz
ffree
xchg
fsubl
pop
jmp
jle
lea
mov
inc
jge
xchg
lock
icebp
mov
loope
sarl
rolb
int3
out
pop
inc
mov
rcll
notb
mov
mov
lods
adc
push
dec
mov
fs
es
pop
loope
lret
fmuls
js
sub
lcall
jns
icebp
ret
pop
bound
push
insl
lret
adcl
cld
mov
xor
in
adc
lret
ficomps
inc
sti
cmp
arpl
into
sti
stos
sarl
sbb
inc
loopne
loope
adc
and
fidivl
ret
mov
lret
insb
adcb
std
imulb
add
aaa
jmp
ret
and
repz
stos
adc
das
jmp
push
imul
add
or
xlat
pop
mov
pusha
aad
pop
adc
mov
shrb
xchg
clc
addr16
lds
bound
lcall
inc
xorb
aam
push
xor
and
push
pop
pop
jb
testb
and
or
dec
mov
xlat
jo
mov
jl
repnz
add
jo
jmp
out
fildll
jg
add
jbe
cmpsb
sbb
ficoml
arpl
xchg
mov
xchg
inc
adc
sbb
sub
pop
inc
pop
push
outsl
mov
out
pop
push
sbb
sbb
cmc
mov
inc
pop
jnp
out
xlat
sbb
lds
es
shlb
in
adc
loop
mov
fwait
es
cmp
push
push
or
push
js
cwtl
dec
dec
jb
fisttpl
imul
shrl
data16
jns
fcompl
cmpsb
pop
adc
pop
cli
shll
push
mov
jne
adc
imul
imul
shll
ret
push
lock
aam
jns
shlb
cwtl
mov
inc
call
jecxz
or
icebp
xchg
mov
mov
leave
insb
rcll
xchg
add
lret
fistpl
int3
xlat
pop
repz
xlat
cmpsl
cs
xchg
pop
iret
jle
pop
into
mov
ret
xlat
aaa
fldenv
test
jbe
sub
mov
jle
ds
fcmovne
and
cmpsl
xchg
xchg
sub
popf
ret
loop
jle
jne
sub
dec
push
or
test
cmp
jecxz
xlat
mov
pop
pop
mov
divb
repz
dec
cmp
push
es
int3
or
push
mov
fwait
xchg
sbb
pop
mov
das
test
mov
fwait
adc
jbe
and
mov
push
push
fistl
sub
cmpsl
idivl
scas
fidivs
in
rcrb
jnp
xor
inc
mov
inc
scas
xlat
sub
mov
aas
repnz
inc
pop
inc
and
lock
ret
adc
sti
lahf
pop
imul
jne
inc
stos
fmuls
xchg
fsubrl
jmp
push
or
cmpsl
jmp
pop
out
jne
imul
jb
mov
lds
es
push
aam
mov
fnop
add
fimuls
inc
push
xchg
sbbb
aam
sti
ficoms
stc
leave
arpl
aad
push
jae
int3
xor
lods
cmp
jae
cltd
lret
fnstenv
fucom
ss
sarb
cmc
rcl
push
arpl
popa
xchg
cmp
sbb
clc
sti
xor
sti
lock
pop
fs
pop
inc
ja
inc
clc
iret
or
mov
dec
mov
pop
xor
xchg
inc
shl
lret
ret
call
sbb
mov
inc
push
adc
mov
aam
cmpsb
adc
rcrb
dec
fldl2e
jae
xchg
les
jg
push
loop
sbb
hlt
pop
popf
mov
inc
pop
mov
aad
jne
imul
jecxz
shl
shll
push
jp
mov
jb
out
mov
test
sti
cmpsl
jecxz
add
xchg
imulb
sub
adc
mov
adc
loope
fimuls
lock
ret
adc
inc
out
les
repnz
and
inc
pop
daa
fldl
dec
data16
sub
rcr
jne
mov
jno
es
scas
imul
das
shl
jecxz
xlat
daa
push
xlat
movsb
int
and
dec
add
aad
push
jno
mov
test
repz
jbe
loope
es
xlat
fildl
in
jo
hlt
imul
aas
loop
fadd
fnstsw
mov
fcmovnb
lret
in
stc
jg
and
mov
int
cmpsl
js
xchg
insb
loop
inc
mov
aad
jmp
mov
out
or
dec
dec
fisubrl
jmp
out
push
mov
ss
push
cli
add
cmp
sarl
dec
push
xor
leave
addr16
ds
xchg
out
pop
rolb
ljmp
push
push
in
xor
add
sarb
decl
bound
xchg
fisubl
icebp
stos
iret
pop
popf
xchg
ret
int3
leave
fdivs
xchg
fnsave
lods
fbld
xor
std
repnz
lret
pop
fwait
xchg
rcrl
dec
push
sbb
leave
pmuludq
mov
sbbl
mov
fwait
xor
das
mov
mov
imul
sub
test
pop
push
repz
mov
mov
lret
mov
popa
mov
pusha
aam
dec
loope
inc
outsl
arpl
mov
sub
sbb
jg
xchg
inc
xor
cwtl
inc
adc
popa
xor
scas
lahf
je
repnz
pop
mov
mov
lcall
fsubrs
cmp
xchg
sahf
add
popf
out
daa
loope
ja
adc
mov
mov
fistps
repnz
mov
or
int
xchg
xchg
repnz
sbb
fdivrs
push
xchg
fisttps
fs
xlat
add
fstps
push
mov
aaa
fbstp
mov
jo
push
imul
sbb
mov
and
stos
je
loopne
sub
push
jmp
daa
sub
mov
xchg
ret
scas
dec
test
xchg
jno
add
mov
inc
nop
ret
add
and
adcb
add
dec
and
pop
movsl
sbb
jl
fbstp
pop
jge
mov
subb
es
sbb
mov
cmpsl
outsb
aas
sbb
jecxz
movsl
out
fiaddl
xchg
mov
adc
repnz
cmpsl
insb
mov
ret
call
cltd
ror
fs
or
sbb
sub
push
pop
rcll
pop
nop
jmp
imul
arpl
mov
andl
stos
outsb
loope
aad
sbb
adc
in
push
mov
push
adc
sarb
cmp
mul
xchg
sbb
add
repnz
cmp
repz
mov
fisttps
inc
sbb
xchg
inc
ret
movsl
cmp
xchg
jmp
inc
scas
mov
sub
jo
dec
lea
or
fwait
phsubsw
dec
cltd
adc
pushf
xlat
lods
cltd
lock
data16
es
pop
lock
inc
and
gs
mov
push
into
sbb
shlb
push
mulb
mov
lods
leave
scas
enter
or
inc
push
sbbl
stos
iret
xlat
imul
mov
ret
jmp
xlat
test
inc
cmp
popf
dec
cmpsl
dec
inc
jmp
repnz
pop
out
into
inc
xlat
jle
int
fistl
out
xchg
rol
movups
aad
xor
outsb
rol
pop
leave
shll
lock
push
and
xchg
ret
lret
stc
rcll
pop
mov
jg
cmpsl
popa
js
jnp
jle
xchg
or
lds
xchg
xor
xchg
xlat
xor
or
repz
push
mov
push
es
int
ror
jle
xchg
adc
mov
pop
fmuls
sti
xchg
mov
cmc
icebp
sbb
sbb
push
out
jmp
cs
ljmp
xlat
and
in
shrl
lret
pop
dec
lock
cld
push
adc
cmp
inc
adc
loope
jl
lahf
addr16
xlat
mov
lock
lret
ss
rcrb
fbld
fidivl
or
iret
xchg
lds
jge
lahf
sub
sbb
mov
and
mov
jmp
loope
out
xchg
and
adc
inc
adcb
sub
xchg
jg
pop
mov
xlat
mov
repnz
xor
fdivrs
ljmp
rol
or
testb
outsb
xor
push
mov
imul
cmpl
cwtl
int
scas
push
dec
sub
mov
xor
mov
or
aad
aad
std
insb
jne
push
fwait
xor
jl
rcll
cmpxchg
addr16
nop
jl
mov
imul
cmp
clc
pop
jmp
ficoml
jl
nop
fstps
sti
dec
lret
lret
lret
push
js
mov
adc
push
inc
pop
fistps
fisttpl
adc
dec
push
loopne
mov
iret
mov
mov
jmp
pop
int
repz
jns
in
loope
ljmp
and
jae
div
outsl
mov
sub
inc
jo
fcmovnu
cmc
ja
jp
mov
into
push
lcall
shl
fnstcw
mov
int
jbe
mov
cmp
hlt
or
cmpsb
xchg
push
int3
push
shl
xor
test
insl
push
ret
mov
push
les
sbb
mov
ja
insb
or
fists
push
mov
xchg
cmpsl
or
mov
icebp
dec
cli
in
sub
jne
inc
fdivs
outsl
pushl
enter
jge
stos
pop
cwtl
pop
stc
pop
iret
es
add
ljmp
enter
fisubrl
ret
cld
xor
jbe
and
into
sub
das
mov
fldt
cmpsl
int3
adc
fucomi
nop
loop
js
les
loop
out
ret
outsl
mov
pop
out
adc
loopne
in
in
lcall
movsl
lret
sbb
adc
out
mov
movsl
nop
mull
pop
ja
lret
pop
repz
xorb
je
fwait
mov
lods
add
or
loop
mov
mov
ss
testl
mov
leave
hlt
dec
fdiv
lcall
or
leave
pop
push
mov
loop
jne
push
add
rolb
push
push
fmuls
pop
jo
ret
insl
xchg
dec
test
daa
rol
dec
mov
jae
xlat
fstl
xor
lea
or
scas
clc
sub
xchg
fldenv
lret
jge
xchg
aaa
rorb
rcr
sub
jp
pop
test
aad
mov
mov
mov
cmp
xchg
cs
jae
dec
test
pop
push
inc
movswl
xchg
sti
js
cmpsl
lahf
ret
push
fdiv
repz
notl
push
adc
jge
popf
sbb
dec
mov
cwtl
cmp
rcrl
cld
orl
fwait
ret
mov
and
push
enter
addl
xlat
lods
popa
jne
mov
cmp
fld
adc
dec
mov
push
pop
pusha
sub
aad
push
pop
imul
lea
test
mov
sub
lcall
xchg
adc
das
pop
es
sub
cltd
mov
int
test
jb
jl
cmp
push
mov
inc
icebp
cmp
cmpsl
loopne
jmp
mov
pop
xchg
and
and
fsubrp
lods
int3
jb
fisttpl
inc
push
aad
and
dec
rolb
pop
in
ret
jle
cmpsb
in
lds
lret
jecxz
adc
sar
lret
int3
sbb
add
xor
stc
mov
shl
test
pop
test
imull
mov
dec
mov
xor
jns
call
jne
adc
stos
mov
and
lock
aam
jne
loope
les
cltd
fcmovnbe
sbb
fldcw
imul
fadd
xchg
sbb
test
das
mov
push
inc
pusha
ljmp
pop
push
test
das
push
daa
clc
iret
sbb
stos
std
pop
faddp
out
jae
sub
les
xor
inc
pop
fstpl
dec
jp
push
pop
int3
xchg
adc
xor
repnz
pop
fcompp
push
jb
mov
jns
je
mov
and
add
fcmovnbe
push
adc
sbb
mov
inc
fiaddl
frstor
leave
lret
inc
pop
jo
pop
jno
stos
shll
scas
jg
jbe
mov
fisttpl
ss
daa
repz
aas
cmp
insb
push
out
rcll
or
shl
and
mov
hlt
add
hlt
push
repnz
ficompl
aad
cmpsl
mov
fnstcw
xchg
repnz
dec
icebp
test
push
mov
ret
sbb
mov
hlt
jecxz
loope
loop
lret
ja
mov
mov
aad
out
lods
sbb
out
mov
dec
mov
hlt
mov
repnz
loop
cmp
test
into
xor
mov
imul
and
fistpll
lods
popf
sbb
push
inc
push
adc
xchg
call
cmpsl
mov
repnz
fistl
out
cmpsl
stc
lea
ret
test
add
shl
xlat
loop
scas
aam
into
ret
fwait
pop
cmp
xlat
lcall
sahf
push
jl
xchg
jns
movsb
mov
jl
inc
mov
mov
imul
push
sub
arpl
xchg
fisubl
imul
aam
nop
daa
jmp
icebp
pop
xchg
scas
lret
hlt
mov
fldcw
testb
scas
fisubs
jecxz
cmpxchg
pop
mov
iret
lods
cmpsl
rol
js
leave
push
push
movsl
sub
pop
mov
repz
lock
xchg
xchg
adc
fcoml
mov
cli
dec
mov
and
adc
pop
lock
std
sub
xchg
bound
add
lea
movsb
ja
in
outsl
outsl
cmovb
xlat
sub
repnz
xor
dec
ja
or
lods
lahf
leave
or
loope
sub
pop
push
sbb
lcall
sahf
repnz
xchg
std
pop
jno
jo
sub
dec
testb
add
fptan
fld
push
adc
xchg
xor
lods
pop
insb
sub
jge
inc
loop
xor
subb
stc
adc
ret
sub
popa
shl
out
jo
mov
mov
lahf
cmc
push
inc
out
jo
jmp
or
inc
mov
jmp
iret
fwait
jnp
jmp
decl
daa
int
incl
icebp
sahf
push
inc
jmp
or
aad
ja
daa
ret
lods
jno
fidivs
cwtl
fwait
mov
imul
push
pop
repnz
in
arpl
insb
mov
fisttpll
pop
fs
push
push
dec
sbb
jmp
outsl
adc
rcr
push
lods
dec
jg
popf
shlb
fstpt
into
insb
sub
dec
inc
imul
inc
and
test
xor
repnz
insb
ds
fiaddl
ret
scas
int
stos
jae
jb
call
xlat
pop
fistl
scas
iret
or
movb
loope
out
lret
jbe
sbb
aad
out
cmp
mov
outsl
xchg
cli
pop
push
push
js
pop
loope
out
in
dec
jmp
push
pop
ret
mov
lock
mov
push
arpl
mov
xor
add
push
push
push
icebp
imul
jae
fucomi
or
or
sti
stc
inc
fstl
cmp
jecxz
loope
push
mov
std
xchg
push
scas
pop
dec
movsl
out
pop
lahf
ret
and
push
popf
testl
out
scas
pop
fisttpll
loope
push
std
cmc
iret
sbb
or
hlt
jne
aam
lret
popf
cwtl
fcomi
loop
pop
test
or
and
sbb
xchg
ror
sbb
add
xchg
sbb
test
jmp
mov
xlat
jmp
das
repz
scas
aas
lret
cmc
xlat
call
push
mov
addb
add
fisttps
xlat
cmpsl
cmc
ret
insl
xchg
out
sbb
loop
ret
xor
pop
mov
icebp
cmp
cmp
outsb
xlat
pop
adc
fcom
scas
jmp
mov
rcr
push
inc
adcl
pop
retw
adc
mov
jno
mov
lahf
xchg
adc
divl
andl
sti
push
int
shll
rolb
popa
jecxz
loope
sti
call
test
sbb
or
push
cwtl
inc
popf
imull
jp
inc
cmp
push
pushf
out
and
pop
jae
or
cwtl
xlat
scas
inc
mov
aas
iret
pop
scas
fwait
jno
mov
cmp
push
roll
testl
push
jp
imul
mov
xchg
repz
stos
fwait
ret
ret
cmc
add
popf
in
aad
cld
push
jnp
sbb
dec
ret
in
cmp
inc
and
push
mov
xchg
and
sti
roll
or
fiaddl
ret
aaa
dec
lret
rorl
sub
mov
add
int3
repz
cltd
lods
pop
cmp
push
fstpt
cs
outsb
xlat
or
movsl
or
xor
fwait
int3
sbb
fldl
xchg
jne
sub
inc
xlat
js
scas
shll
jl
jo
into
push
je
mov
sar
jno
sbb
jno
adc
fwait
jmp
push
pop
cmp
jbe
jge
daa
shlb
push
stos
add
aad
pop
sub
sbb
outsl
ds
sar
fldenv
jecxz
pop
fdisi(8087
ljmp
mov
xor
test
mov
iret
jae
imul
or
and
adc
jno
ficoml
xor
aaa
loop
sbb
adcl
stos
inc
push
mov
clc
scas
sbb
stos
cmp
xor
adc
loope
jecxz
mov
fs
cmp
mov
je
mov
cltd
pop
xchg
add
xchg
mov
mov
aad
fldl
adc
int
shr
adc
cmc
jle
les
mov
ljmp
ja
repz
jmp
cmp
call
divl
ss
lds
pop
ror
int3
repz
jmp
je
inc
jg
shll
xor
ds
push
cmpsb
sbb
inc
lods
rcrl
jge
ds
in
subb
fwait
mov
stc
insb
lcall
int3
arpl
int3
lods
cmc
leave
push
aam
mov
jo
push
or
jae
aad
mov
lahf
push
sbb
dec
lock
dec
pop
push
jmp
enter
nop
push
xchg
repz
cwtl
adc
add
push
dec
adc
gs
loop
fs
sbb
aas
pop
add
sub
int3
repnz
push
in
inc
sarb
cmovnp
out
push
jl
mov
sti
xchg
sub
sbb
inc
mov
adc
cmp
mov
mov
fwait
xchg
jno
inc
pop
roll
notl
ss
fisubrs
jg
cli
cltd
cmp
pop
jnp
push
mov
sbb
xlat
sub
jg
pop
fwait
mov
out
inc
push
aaa
jbe
adcl
ja
xor
pop
cltd
rcr
jb
inc
sarl
enter
pop
mov
xchg
ret
fsubl
pushf
dec
push
cmp
adc
in
aas
jmp
dec
clc
inc
aaa
push
out
sahf
div
addl
jno
leave
mov
mov
aad
pop
fistl
data16
or
adc
xlat
cltd
es
outsb
std
fistpll
mov
fistps
roll
cltd
outsb
mov
mov
rcrl
ror
dec
leave
dec
enter
ror
jae
jb
jno
jo
divl
jbe
jne
je
sti
jnp
jp
jns
js
jg
sub
pop
xor
icebp
push
or
jl
cmp
jns
xor
cmpsl
fists
shrb
pop
les
stos
out
mov
ss
jle
loope
jo
dec
and
daa
repz
xchg
sti
sub
lods
dec
mov
out
xor
push
dec
fildll
sti
imull
repz
loope
movsb
daa
mov
mov
pop
and
mov
mov
mov
sti
xor
push
jae
cmp
in
sbb
test
push
jno
rcr
cmpsl
aas
and
jecxz
cmp
fists
inc
xchg
cmp
lock
lods
xor
scas
inc
insl
inc
jl
add
out
push
jmp
xchg
mov
push
push
xor
pop
pmovmskb
jae
pop
pop
cmp
lds
cmc
neg
adc
daa
sub
dec
or
orb
xchg
aad
rcr
rorl
sbb
add
test
pop
cmpsl
clc
fldenv
mov
xchg
push
pop
in
xchg
pop
jb
add
repnz
inc
lret
pop
popf
xchg
xchg
xor
lahf
jae
jmp
pop
xlat
adc
xlat
scas
mov
arpl
cmpsb
lret
xor
loope
inc
jns
jae
sbb
adc
fiaddl
shlb
insl
subb
int
ja
pop
and
int3
test
fistpll
dec
xchg
jl
cli
roll
std
fisubs
fs
push
push
jmp
adc
mov
mov
xchg
dec
xchg
fisttps
mov
lret
pushf
inc
outsl
xor
lds
adc
test
and
mov
mov
lock
ret
ja
add
shlb
lahf
xlat
pop
decb
mov
and
xlat
xor
mov
out
add
pop
or
mov
add
fstps
imul
jge
adc
cmpsl
sbb
xchg
out
cs
in
aaa
ret
test
mov
or
cmp
ret
es
dec
mov
fists
ret
pop
outsl
mov
mov
es
lds
dec
xchg
dec
lods
insb
pop
out
sub
dec
add
push
cs
jb
loope
clc
shlb
mov
push
imul
clc
mov
mov
out
cmpsb
stc
jp
ret
add
in
fmuls
aam
or
or
pop
repnz
shll
mov
xchg
xchg
in
mov
mov
lods
pop
lcall
xchg
repz
add
xlat
into
repnz
sarl
pop
ss
or
rcll
pop
dec
jecxz
push
bound
dec
and
vpaddb
xchg
mov
rcll
adc
push
push
push
cmpsl
mov
lods
pop
fs
mov
pop
cmpsb
xchg
cmp
cmpsb
dec
push
jge
in
fldt
push
cltd
jecxz
imul
fdivs
es
into
xor
push
insl
lcall
leave
cmpsb
fmull
movsl
xchg
sahf
movb
pop
pushf
push
leave
std
xlat
popa
pop
mov
loop
shr
mov
in
and
pop
and
xor
adc
in
je
jo
es
lods
cmp
sub
jb
cld
test
dec
xchg
xchg
sbb
and
xchg
xchg
mov
stos
cld
iret
add
lods
sti
or
lcall
jne
aaa
cmp
repnz
inc
pop
mov
addr16
repnz
test
inc
lret
lods
dec
xchg
mul
out
dec
pop
fwait
test
fists
fisttpl
stc
test
mov
xor
ss
xchg
dec
cli
lahf
rcr
shr
ret
outsb
imul
adc
out
ds
mov
cli
dec
dec
mov
das
lcall
loope
mov
fcomi
test
sbbl
xchg
dec
mov
pop
out
jl
out
xchg
xchg
cmp
out
out
sub
xchg
xchg
cli
inc
fisttpl
add
xchg
cmpb
lock
icebp
or
xor
ret
dec
jae
mov
push
sub
popf
xchg
repz
rol
mov
ret
test
adc
imul
jmp
adc
mov
jb
adc
inc
jecxz
repz
jno
into
addl
sub
sti
popf
addl
adcb
adc
ficoml
jmp
fstp
fcmovnb
mov
ret
xchg
mov
jb
push
xlat
dec
pop
dec
rclb
andl
repz
sti
xor
cmp
jg
mov
push
xchg
pshufw
les
iret
stos
pop
mov
add
sbb
and
xor
adc
leave
dec
inc
fs
dec
ret
es
mov
cmp
out
push
push
push
hlt
insb
and
in
leave
mov
pop
mov
dec
lods
sti
stos
dec
dec
adcl
pushf
clc
adc
test
pop
out
out
icebp
push
loopne
lret
xor
adc
mov
mov
xor
lock
inc
in
push
in
or
test
sti
pop
div
sub
fidivrs
stos
add
xchg
adc
lahf
scas
xchg
jne
sub
adc
repnz
xchg
xchg
outsb
int3
push
shlb
jp
pop
inc
mov
orb
in
aad
mov
shlb
mul
adc
xchg
mov
push
push
sbb
imul
imul
scas
push
dec
cmc
xor
jb
cmpsl
mov
imul
mov
push
stc
inc
in
scas
push
rcll
jns
add
ss
adc
jg
lret
cmp
in
repz
xor
pop
inc
cwtl
or
xlat
pop
cmc
ret
popf
call
sub
cmp
xor
lret
mov
jnp
loope
cmp
xlat
ljmp
mov
jb
aaa
mov
adc
das
push
shll
xchg
pop
je
sub
xchg
shrb
loop
adc
dec
scas
aad
into
sbb
add
test
push
fstpt
and
inc
sbb
adc
es
or
pop
pop
jmp
fidivrs
fnstenv
sti
sub
fcmovnb
daa
adc
or
push
mov
imul
test
int
mov
mov
int3
inc
jno
ficomps
lea
sti
mov
das
rcr
rclb
mov
clc
xchg
push
jno
pop
ret
inc
sti
inc
mov
pop
sbb
bswap
repnz
in
pop
cmpsl
in
aas
jg
jg
adc
daa
sbb
and
lea
in
adc
inc
imulb
cmp
into
mov
jl
cmc
cmp
mov
jmp
cmp
xchg
shll
mov
jmp
pop
dec
inc
imul
inc
push
xchg
cmpsl
clc
hlt
dec
jmp
sbb
out
std
loop
sub
cltd
push
lret
push
out
jecxz
cmp
inc
pop
sub
xchg
iret
dec
lock
push
cmp
add
fst
imul
dec
mov
stc
push
mul
push
mov
shll
pop
cmpsl
scas
icebp
ss
mov
negl
neg
or
fs
nop
or
cmpsl
xchg
mov
xchg
int3
or
jge
daa
test
add
scas
and
jmp
cmp
in
fisubl
pop
lods
dec
mov
adc
push
aas
cmpl
mov
lods
je
inc
jb
sbb
pop
ficoms
pop
xor
push
repz
push
hlt
out
mov
mov
ja
insl
mov
popa
dec
mov
mov
call
arpl
pop
imul
ss
scas
sbb
sbb
aas
es
jb
clc
mov
dec
int
cmp
stos
jbe
test
jmp
or
shll
insb
fsubp
cmp
ror
decl
add
mov
fldenv
ficoms
adc
jno
imul
xchg
dec
leave
or
dec
fadds
inc
push
or
inc
jge
adc
pop
push
popf
xlat
mov
add
repnz
jns
mov
leave
jle
xor
push
xor
mov
jbe
pop
int3
dec
sbb
jbe
jp
mov
or
aad
movq
jecxz
adc
or
mulb
xlat
repnz
pop
cmp
aam
fcompl
lret
cmpb
inc
test
mov
adc
sub
ss
int3
mov
nop
dec
rol
jae
xor
shrb
inc
xor
test
pop
shr
rcll
mov
mov
pop
sar
or
xchg
rcll
aas
shrb
imul
jecxz
stos
adc
push
mov
rol
shr
sub
adcb
les
sub
xor
rorb
lret
pop
xchg
in
into
cmpsl
fnsave
out
aad
popf
addr16
push
mov
xor
icebp
dec
and
mov
push
insl
aad
adc
sub
cmpb
pop
in
addb
pop
jp
inc
xorb
xchg
sbb
out
fcmovnb
mov
test
bnd
sarl
lds
pusha
fildll
aad
add
loop
sub
fidivrl
shr
fucomp
mov
jnp
fisttpl
add
bound
shl
jne
repnz
imul
out
pop
fcomi
stos
jp
inc
ds
xor
lcall
jnp
adc
cltd
shr
xchg
or
or
dec
mov
ret
orb
xlat
ret
mov
pop
adc
mov
lcall
lret
mov
mov
cmp
xchg
dec
pop
cwtl
mov
aad
sbbl
xor
fiadds
mov
repnz
push
lock
ror
mov
iret
adc
jp
insb
mov
ss
out
push
dec
xor
scas
xchg
xsavec
adc
mov
xorb
sbb
xchg
adc
jecxz
loop
mov
push
and
inc
lcall
jmp
mov
test
inc
imul
pop
out
inc
std
lahf
jecxz
push
pop
xchg
mov
in
jp
leave
negl
inc
xchg
ret
push
dec
div
icebp
dec
stos
cwtl
mov
mov
repnz
subb
scas
inc
test
lods
fcompl
fcmovnb
sbb
pminsw
aaa
inc
sub
xlat
rolb
fstp
mov
ret
or
cwtl
xor
pop
lret
or
push
aad
cmpsl
and
inc
mov
inc
fsubp
xchg
insl
stos
imul
inc
mov
enter
ret
push
sti
lea
jbe
mov
add
stos
shlb
fdivrs
mov
inc
aaa
aam
insl
dec
loop
sti
popa
pop
dec
cmp
idivl
dec
jns
outsl
and
repz
daa
mov
into
test
mov
lcall
int
scas
insb
cmpsb
jae
cmpsl
and
popl
imull
aad
rcr
inc
je
fimull
push
pop
lret
or
hlt
inc
mov
aad
test
xchg
cmc
in
sub
repnz
inc
jnp
aad
xchg
xlat
jg
inc
cmp
stos
repnz
repnz
aad
and
fildl
pushf
jo
pop
and
inc
int3
jnp
fisubl
dec
jmp
adc
divb
cmc
outsb
repz
jnp
dec
pop
mov
neg
pop
pop
sbb
push
lahf
dec
xchg
pop
lret
divl
lret
aad
cltd
test
adc
add
mov
rcrb
in
shl
ret
xchg
sbb
and
scas
stc
shlb
pop
dec
dec
stos
mov
xchg
ffreep
mov
lcall
pop
adc
add
pop
push
lods
push
fstpl
imul
adc
mov
out
ret
dec
mov
ljmp
sub
mov
inc
mov
lock
cwtl
push
clc
int3
inc
cmc
jno
ja
scas
lock
stc
mov
inc
mov
inc
push
xlat
fsubl
push
push
inc
jmp
test
fcompl
mov
shl
sbb
es
movsl
mov
shr
or
jle
fldt
pop
inc
arpl
inc
push
fwait
imul
pop
cmp
loopne
insb
jno
mov
cmpsl
xchg
icebp
inc
addl
sbb
fwait
pop
adc
push
push
sub
testl
mov
jmp
xchg
pop
int
insb
sub
fs
jmp
fwait
push
lcall
adc
cmpsl
std
insb
xlat
std
push
lahf
mov
inc
repnz
test
aaa
movsl
pop
and
fldl
cwtl
insb
adc
ret
pop
fldz
in
cli
notb
mov
loope
cltd
jb
sub
inc
jmp
daa
in
scas
sarb
cmc
aad
sbb
fisttps
push
mov
adc
arpl
mov
iret
loope
xchg
xor
push
inc
andb
mov
movb
mov
in
fninit
pop
push
fldt
add
cmpsl
testl
icebp
xchg
xchg
and
addr16
push
pop
pop
shlb
scas
movsb
insl
repnz
inc
mov
ficoms
stos
dec
inc
arpl
fcomi
shl
insl
fcomi
stos
xchg
cmp
out
adc
repnz
stos
ljmp
sub
fcomip
jb
cmc
lock
adc
orb
lcall
fistl
jmp
fistl
xchg
lds
jmp
push
xchg
inc
mov
das
inc
pop
sub
ljmp
hlt
out
adc
iret
fst
or
test
cmp
adc
xor
inc
jne
adc
jmp
xchg
loope
jp
adc
adc
adc
add
ret
inc
jmp
and
repnz
xchg
pop
add
or
and
jns
in
mov
jae
xor
cmpsl
mov
jns
push
shlb
ljmp
addb
xlat
and
sbb
mov
xor
cmpsl
mov
mov
mov
pop
aad
jns
pop
xchg
add
mov
mov
roll
inc
xor
js
push
insb
test
addb
pop
in
push
mul
shr
fsubr
sbb
insl
xlat
daa
out
neg
ret
repz
fdivl
xlat
mov
movsl
cmpsl
and
dec
xchg
add
pop
sub
repnz
mov
sarl
jno
adc
pop
es
pop
inc
cmpsl
repz
in
fmuls
adc
and
jno
les
repz
loope
es
int
mov
in
mov
sub
dec
push
shlb
aad
xor
adc
idivl
test
inc
mov
repz
adc
movsb
sbb
push
inc
cmpsl
add
push
push
lret
xor
pop
xchg
push
aam
mov
xchg
mov
cmp
lods
mov
lods
inc
scas
mov
fstps
mov
pop
popa
js
fists
inc
push
jns
cmpsl
ret
ds
shlb
xor
stos
pop
shlb
scas
jo
mov
xor
cmpsl
mov
je
cltd
movsl
adc
mov
mulb
popa
mov
insb
rep
xchg
mov
fcoml
imul
pop
rclb
rcrb
std
add
xor
cmc
in
mov
mov
push
add
push
pop
jg
cli
fisubrs
push
pusha
cli
jecxz
jae
inc
adc
xlat
push
lcall
cmpsl
lock
icebp
repnz
fists
cld
mov
xlat
gs
push
fsts
scas
lds
mov
fisubrs
xchg
sub
adc
jmp
aaa
and
push
push
cmc
push
in
mov
sbb
pop
mov
push
ret
in
push
shll
mov
out
push
lock
daa
sbb
sbb
push
rcl
loop
loop
and
mov
sub
cltd
data16
fists
inc
sbb
test
or
inc
out
stos
out
jp
inc
sbb
iret
xor
sti
test
aas
dec
dec
and
je
sbb
aad
out
jmp
mov
inc
int
mov
lods
xchg
loope
sbb
jge
pop
hlt
push
in
vmovhps
jb
cmpsl
jg
inc
dec
mov
outsl
push
xchg
sti
fisttpll
mov
push
dec
mov
jo
or
cs
dec
into
test
pop
xchg
and
popa
andl
repz
push
dec
mov
scas
ffree
lock
mov
and
dec
nop
push
shrl
or
mov
stc
xlat
dec
jmp
orl
das
mov
push
sbb
lret
je
adc
or
jecxz
jmp
mov
xor
shl
dec
inc
jmp
movsb
inc
cmc
adcl
pop
negb
dec
or
iret
jb
xchg
add
inc
mov
push
icebp
les
lods
pop
inc
add
xchg
imul
scas
leave
add
out
testl
mov
faddl
lods
cmpsl
hlt
loopne
sti
jecxz
dec
dec
pop
aad
mov
int3
imul
ret
icebp
mov
nop
push
aaa
jmp
mov
cmpsl
inc
daa
rorb
sbb
sbb
in
arpl
jns
movsb
lahf
and
ret
in
inc
test
outsb
loope
adc
cmpsl
and
inc
mov
and
mov
inc
add
das
iret
fwait
pop
inc
test
mov
or
inc
and
xchg
js
leave
mov
arpl
das
or
cltd
cwtl
mov
fwait
jge
jmp
or
pop
pop
dec
fwait
arpl
outsb
xchg
inc
jno
xlat
inc
aam
pop
add
lock
mov
outsb
dec
fdivrs
repnz
mov
jmp
add
cltd
xchg
inc
adc
sbb
cmc
jmp
std
push
and
jl
ffreep
fwait
sahf
dec
out
dec
insl
rorb
fwait
sbbl
call
mov
inc
testl
push
xchg
in
or
ret
rclb
cld
xor
and
ljmp
shrb
push
jmp
sub
cmp
notl
dec
cmp
aas
testb
add
xchg
rep
cmpsl
cmp
js
add
push
scas
lret
loope
adc
ljmp
jb
ret
pop
adc
mov
or
xchg
inc
mov
pop
pop
pop
int
jbe
mov
dec
pop
movsb
and
xchg
jno
stos
popf
xchg
pop
pop
inc
xchg
inc
mov
ret
inc
sti
icebp
fmuls
xchg
sub
jns
sub
mov
lret
jge
dec
sti
fucompp
jmp
inc
sbb
fbld
jns
mov
lret
mov
adc
aaa
sub
sub
xchg
js
and
mov
sub
add
xchg
leave
xchg
inc
jge
xchg
js
test
aad
icebp
insb
aam
add
enter
popf
mov
sub
notl
xchg
xchg
mov
lret
mov
xchg
aaa
aad
lret
xchg
ljmp
fucomi
adc
push
es
sub
pushf
test
mov
adc
clc
or
icebp
cmc
mov
jp
ficoml
cmc
inc
rcl
jne
sbbl
rcll
xor
fisubl
je
mov
movsb
push
pop
ss
cmp
add
fldz
dec
ja
insl
mov
pop
pop
call
inc
iret
decl
test
fstl
xor
mov
mov
pop
jle
sub
sarl
ficomps
pop
sti
pop
lock
js
dec
push
dec
jno
jns
lgs
loopne
repnz
jbe
inc
loope
movsb
or
adc
jmp
jbe
mov
or
shl
std
lods
daa
pushf
mov
jle
nop
xchg
mov
leave
mov
and
ljmp
clc
pop
xor
pop
inc
mov
sub
stc
into
mov
xchg
mov
adcb
xorl
loopne
sub
imul
pop
cltd
daa
mov
mov
aad
dec
adc
pop
xchg
nop
lods
lcall
vmovshdup
jp
inc
jae
fld
outsl
arpl
js
ficoml
fadds
push
pop
out
xor
push
jo
push
in
fistl
or
cmc
jnp
xchg
lea
idivl
sbb
adc
sbb
stc
das
pop
push
loopne
lret
jecxz
push
pop
pop
pop
int3
icebp
adc
scas
sbb
jg
pop
inc
xchg
inc
jecxz
jo
fsts
nop
xchg
fsubrl
icebp
fiaddl
or
push
dec
xorl
test
mov
hlt
or
outsb
cmpsl
inc
mov
ret
rcll
insb
inc
iret
das
lret
pop
mov
lods
jo
sub
scas
test
xchg
out
xchg
mov
loopne
insb
inc
stc
cmp
mov
fistpl
ficoml
dec
out
dec
pop
mov
cld
call
insl
dec
outsl
mov
lods
cs
xchg
test
pop
leave
pop
pop
test
mov
insb
faddl
in
fistpl
mov
out
push
fildll
mov
inc
outsb
in
sub
lahf
push
out
cmpsl
jo
lods
aad
xchg
mov
out
lock
stos
jbe
mov
jecxz
sti
xor
push
and
in
out
sbb
cmpsl
out
bound
pop
mov
or
jp
mov
ret
mov
mov
hlt
mov
cmpsl
pop
and
xor
xor
mov
adc
xor
push
pop
adc
jle
hlt
mov
test
cmp
sbb
and
lcall
cs
sbb
jb
imul
mov
idivb
cmpsl
subl
push
jecxz
shlb
cmp
inc
rorl
push
fcoms
jge
imul
pop
push
rorl
push
adc
imul
and
in
mov
jge
mov
sbb
cmpsl
push
or
loopne
outsl
xchg
sahf
mov
icebp
in
or
lds
push
mov
daa
push
fbld
lcall
in
js
mov
sti
mov
rclb
dec
sahf
enter
jno
pop
mov
pop
or
xor
xor
daa
popl
or
insl
xchg
pop
push
add
enter
xchg
ja
shll
fs
cmp
mov
inc
jo
fld
aad
inc
jmp
pop
fwait
and
rorb
mov
xlat
lods
shlb
pop
fildll
fidivl
inc
and
cmpsb
inc
inc
cmp
dec
xor
ja
push
add
std
push
test
pop
sub
inc
or
inc
test
dec
mov
repz
shlb
push
jb
inc
movsl
icebp
or
mov
scas
sbbl
mov
arpl
dec
xchg
out
int3
into
mov
dec
negl
add
fistpl
adc
mov
dec
jb
out
lret
inc
jl
icebp
ret
jns
sub
pop
pushf
inc
jno
fdivrs
mov
jns
inc
sub
sub
fimull
pop
mov
es
push
or
ret
insb
jmp
popa
out
add
pop
imul
push
cli
lret
jno
test
jmp
frstor
fnclex
out
mov
mov
stc
sbb
mov
push
out
xchg
pop
mov
je
add
into
cld
mov
hlt
pop
addl
and
int3
icebp
scas
or
bound
lods
nop
in
ret
cmc
adc
inc
mov
adc
sbb
ret
int
xchg
icebp
mov
push
fbstp
out
mov
sti
subb
cmpsl
loop
adcl
jb
fsts
loop
dec
jmp
xor
push
jne
push
dec
fdivrl
test
daa
sub
dec
rorl
ret
pop
mull
pop
jb
ret
popf
or
dec
mov
aad
mov
ficoms
int
iret
mov
hlt
in
mov
pop
xchg
insb
movsl
cli
aaa
repnz
jbe
jl
sbb
into
pop
jmp
mov
sarl
pop
nop
aam
nop
jmp
roll
lods
adc
insl
stos
insb
mov
test
sbb
jae
pop
lcall
loop
scas
pop
fidivl
pusha
jns
push
xchg
inc
test
sti
adc
sti
loope
loop
sub
ret
mov
icebp
mov
push
movsl
in
inc
subl
push
inc
scas
push
sti
outsb
xchg
in
xchg
es
arpl
iret
loopne
mov
add
out
stc
jne
movsl
sub
adc
dec
nop
fnstcw
scas
dec
push
data16
add
cld
push
adc
or
xor
dec
in
mov
repnz
mov
mov
inc
jge
arpl
std
jbe
movsl
icebp
mov
xchg
out
push
mov
rol
mov
xor
push
mov
cmpsl
jecxz
inc
pop
sub
push
or
std
aad
dec
push
and
roll
in
dec
lods
mov
sarl
jecxz
jmp
movsb
pop
insb
mov
fidivl
aas
repz
cmp
shl
pop
adc
sbb
mov
loop
movsb
f2xm1
jge
or
lock
and
or
test
es
inc
push
xchg
xchg
pop
xchg
les
repnz
jae
shrb
loope
jp
js
adc
insb
dec
je
icebp
dec
inc
pop
push
dec
pop
cli
lods
add
pop
neg
inc
mov
jbe
fisubrs
xchg
fldt
push
add
int
mov
dec
xor
imul
hlt
xor
mov
sti
test
xchg
xchg
out
push
notl
cltd
jle
xchg
int
inc
sub
and
xchg
push
das
or
and
push
ret
inc
test
sbb
ds
daa
repz
scas
cld
sbb
xor
jmp
imul
pushf
fcomip
xchg
ret
xorl
mov
aas
inc
xlat
add
ret
adc
leave
and
cmp
add
jle
shlb
sbb
xchg
pop
subb
loop
push
mov
cmpsl
nop
or
fcoms
mov
clc
sbb
leave
lret
loopne
icebp
cmpsl
rolb
fs
xor
cmp
cmp
sarl
or
das
push
and
sub
stos
pop
popf
inc
aad
mov
xchg
loopne
sti
jp
xchg
leave
lods
call
arpl
jp
out
inc
call
aam
aam
push
push
lds
jp
pop
mov
mov
xchg
push
imul
cli
pop
fsincos
or
test
jecxz
mov
ficoms
ljmp
rorl
add
push
sbb
mov
ds
js
ja
stos
stc
rol
rorl
shrl
test
std
test
pop
test
mov
xor
inc
cld
in
stc
fstpl
cmpsb
ret
fldt
push
xchg
outsb
int
jmp
mov
dec
into
jb
inc
fcomps
cmpsl
xchg
out
mov
es
aad
cmp
pop
push
inc
leave
pusha
push
rclb
out
stc
out
sub
pop
and
jl
movsb
imul
mov
sub
push
fs
add
cmp
xchg
insl
icebp
in
ret
inc
scas
adc
sbb
fldt
clc
xor
into
icebp
cmp
idivb
and
cltd
push
dec
mov
repz
cmp
inc
push
jns
out
stc
adc
les
lcall
shrb
leave
cmpsl
mov
or
sbb
fsubr
inc
push
lods
pop
aaa
and
jbe
fildl
aaa
xlat
sbb
test
ret
shl
and
inc
cmp
pop
pop
pop
mul
add
lods
mov
shrb
loope
sub
sub
clc
push
call
xchg
inc
ret
push
lret
fcmovnbe
inc
xchg
aaa
pop
call
dec
dec
xchg
sbb
outsl
in
mov
scas
movsl
aas
cltd
fs
cmp
push
cmp
push
ror
filds
mov
ret
pop
push
adc
push
xchg
popf
movsb
xlat
insl
loope
xchg
sub
xchg
sbbl
mov
pop
dec
cmpsb
out
gs
fidivl
daa
popl
dec
icebp
cmpsl
repnz
inc
push
mov
inc
adc
dec
push
add
mov
rcrb
daa
test
push
mov
out
mov
mov
push
add
jnp
lds
xchg
inc
adc
mov
mov
jmp
push
into
scas
idivl
pop
sub
fildl
out
in
adc
insl
rcrb
out
pop
cmpsl
das
in
jmp
test
jb
ret
jmp
aas
pushf
movsl
outsb
add
jae
lods
mov
mov
push
adc
dec
lea
mov
cld
jge
in
jl
sbb
jle
cmp
ja
sub
jb
inc
push
add
dec
shrl
cmp
adc
enter
jge
mov
movsl
rcl
repz
shlb
imul
add
mov
loope
push
xchg
repz
js
xchg
int
sbb
and
sbb
sub
lahf
xchg
push
xor
rol
mov
jbe
fcomi
lret
pop
mov
inc
sti
js
fdivrp
cmpsl
sub
lds
jle
rclb
jecxz
adc
scas
push
pop
mov
jmp
sti
xchg
push
push
adc
sub
adc
push
mov
add
jge
xchg
push
push
jb
mov
and
into
inc
sub
popf
or
dec
int
cs
lcall
outsb
jg
fsubrs
mov
sub
jecxz
mov
fstpl
pop
shl
mov
mov
ret
stos
repnz
mov
sti
xchg
loop
mov
enter
fdiv
repz
push
lock
mov
push
mov
cwtl
scas
ljmp
jp
adc
fdivl
ja
adc
cmp
mul
loop
mov
xchg
fdivrl
pop
jb
int3
repz
sbb
dec
push
mov
mov
jb
in
cli
int
iret
or
jbe
call
shrb
jb
jmp
sub
out
add
sbb
out
sbb
jae
lea
xchg
test
jl
movsl
fs
mov
frstor
sub
inc
mov
lods
sahf
imul
jle
jns
ffreep
xchg
lcall
sub
jmp
hlt
iret
mov
mov
fcoms
outsb
jae
ja
dec
xchg
pop
loopne
inc
cld
je
jp,pn
imul
or
test
loope
aaa
pushf
in
andb
pop
loopne
popf
xor
push
xchg
add
pop
adcl
mov
mov
add
sahf
fsubrl
mov
push
push
dec
sti
testl
adc
out
icebp
cmpsl
cmp
xchg
lock
ret
aas
out
notl
movsb
pop
push
mov
movsl
in
mov
repz
push
ja
mov
inc
sbb
pop
push
out
fnstenv
mov
andl
mov
pop
jmp
mov
jbe
cmp
push
lcall
fisttpll
outsl
adc
fsubr
fildl
pop
aad
rclb
jns
rcrb
cmpsl
dec
sbb
xchg
insb
idiv
roll
sti
cld
mov
lods
xchg
sub
xor
ret
sub
lock
mov
sub
mov
jb
pop
adc
hlt
adc
and
mov
faddp
idiv
ret
mov
scas
adc
xlat
cmpsl
insl
addr16
test
jnp
in
sub
and
imul
outsb
xor
push
jmp
movsbl
jl
mov
or
push
inc
in
xlat
xchg
repnz
jbe
push
cmp
scas
ret
or
xor
les
xchg
movsl
ja
mull
inc
addr16
cmp
add
int3
shll
pop
pop
sti
mov
sarl
inc
mov
cmpsl
idiv
test
pop
icebp
sub
cmp
rclb
cmpsb
in
xor
aad
fisttpll
movsb
mov
pop
jno
fwait
jl
dec
push
leave
mov
mov
fsubs
adc
addr16
jnp
clc
leave
daa
test
lock
sbb
repnz
int3
fists
hlt
inc
arpl
cld
jl
movsb
cli
inc
test
xchg
repnz
push
imul
push
sub
scas
lcall
stc
pop
es
shll
dec
mov
mov
cmpsl
mov
sti
jecxz
popa
lret
xor
je
fstpt
imull
popf
leave
ja
cmp
subb
loop
lock
inc
sub
cli
bound
nop
jne
pop
lahf
cltd
ret
pusha
sub
shll
pop
mov
mov
jle
ret
repnz
push
cli
mov
mov
sub
inc
aaa
jbe
add
dec
out
xchg
popf
ficomps
cltd
scas
xchg
in
aam
xchg
sti
jl
fisttpl
add
add
lret
hlt
notb
sbb
ret
into
mov
popf
jo
call
dec
xchg
xchg
loope
jne
loope
push
rclb
test
xor
int
repnz
add
push
loope
ret
pop
mov
cmpsl
stos
cmp
loop
in
and
insb
push
mov
mov
pop
test
fcmove
cmp
jo
jg
cld
cwtd
addr16
push
int3
popa
fisubl
orb
test
mov
lret
push
adc
pop
xor
fnstsw
dec
in
pop
repz
out
notb
jo
lea
or
movsb
test
pop
js
psrad
adc
cltd
jno
sub
into
mov
in
inc
loop
ja
inc
jbe
push
lds
cltd
lods
repnz
inc
and
mov
subl
or
mov
or
adc
into
rorb
int3
push
rol
repz
xor
nop
inc
pop
xchg
pop
jmp
push
daa
jbe
leave
lods
test
lcall
cmpsl
mov
daa
daa
loopne
clc
shrl
mov
orl
daa
enterw
xchg
xchg
rorb
stos
dec
jg
mov
xchg
test
rcr
stos
test
in
jmp
sti
imul
inc
and
std
loope
xor
call
sub
fildll
inc
in
fists
xchg
jne
cs
mov
sub
pop
adc
xchg
jmp
ljmp
inc
shlb
xor
lcall
lea
cwtl
mov
inc
adc
pop
xchg
inc
icebp
jge
jns
jl
data16
pop
lcall
pusha
ficoml
jmp
sbb
sahf
subb
lahf
shl
xlat
pop
dec
flds
test
pusha
fisttpll
sahf
cli
lds
loop
cli
in
out
xchg
rcrb
xor
add
xchg
insb
ja
push
jb
test
rclb
cmp
jle
lret
insl
scas
not
lcall
ret
mov
sti
sbbb
scas
cltd
cs
rolb
mov
add
jns
or
sahf
xchg
out
sub
push
fistpll
cmpsb
mov
jge
ret
jecxz
inc
xor
scas
repz
das
stos
out
loopne
roll
xchg
imul
xlat
mov
sti
pop
ficoml
or
cmp
mov
or
mov
jmp
lds
fsubl
es
xlat
inc
push
sbb
pop
stos
icebp
push
repnz
push
mov
out
jmp
nop
icebp
mov
inc
scas
cs
addl
xchg
mov
mov
daa
adc
pop
in
jl
inc
inc
cmp
mov
cmp
jno
mov
adc
mov
sbb
testb
ljmp
sbb
fnstenv
fdivl
sbb
and
jo
into
imul
mov
mov
cmp
int3
push
enter
int3
aaa
clc
mov
xchg
out
inc
arpl
inc
cmpsl
jp
cmp
aad
mov
push
fdivl
pop
xor
mov
ljmp
inc
lcall
inc
stos
cwtl
add
leave
mov
inc
outsb
xlat
bound
sbb
adcl
fistpl
pop
sbb
jecxz
loop
mov
repnz
inc
push
int
mov
adc
mov
movsb
std
nop
sub
xchg
aaa
adc
pop
int
inc
add
mov
lret
or
mov
arpl
mov
loop
sub
popf
xor
inc
adc
cmpsl
xor
dec
xchg
jg
sub
push
adc
mov
xchg
adc
ljmp
adc
lea
xlat
pop
sti
fidivrl
repz
dec
pushf
shl
dec
adc
loope
lret
imul
sub
ret
jo
loope
clc
lcall
enter
inc
pop
xchg
lcall
xlat
les
dec
pop
mov
ret
loopne
mov
push
cld
lret
hlt
push
add
icebp
aaa
scas
cmp
in
fdivrs
rcll
push
insl
outsl
jl
std
sub
inc
push
jbe
xchg
icebp
xchg
jb
leave
cmpsl
dec
xchg
or
inc
mov
lea
pushl
or
rcl
jno
ljmp
movsl
jb
cld
push
cmc
jno
inc
push
or
mov
mov
jmp
gs
fdivrs
jns
clc
cmp
xor
sbb
sti
rorl
jo
test
ds
cmp
dec
fucomi
aam
in
movsl
xchg
pop
xchg
mov
stc
out
in
fidivrl
lods
out
jle
ds
or
cmp
push
leave
pop
test
dec
test
xlat
push
jmp
aas
cli
rol
mov
nop
sbb
xor
xchg
push
insl
aad
inc
mov
pop
ret
ds
cmc
rcll
mov
jno
ljmp
jae
in
lahf
dec
xchg
test
sub
cwtl
mov
push
pop
pop
js
mov
pop
mov
adc
lods
dec
mov
negb
fmul
shrb
lds
enter
push
in
dec
loope
cmpsl
xor
lea
xchg
add
mov
adc
inc
lds
divb
mov
aas
xlat
dec
lahf
push
es
add
out
dec
cmpsl
inc
inc
jb
adc
adc
cmc
jno
fwait
jg
cmpsl
or
push
addr16
cmp
in
dec
add
fsubl
outsb
jae
fistpl
shrb
jb
idivl
pop
jb
push
jmp
add
or
out
insl
xor
mov
ficompl
ds
cmp
lods
xchg
hlt
sti
lea
cmp
or
jnp
inc
popa
dec
pop
cmpl
popf
ret
lcall
aaa
pop
fiaddl
dec
std
cwtl
pushf
xchg
or
mov
pop
in
icebp
test
pop
xchg
jmp
sbb
out
lahf
rcrl
std
icebp
xchg
call
xchg
rcll
cmc
icebp
in
notl
out
shr
repz
ret
sub
xlat
cmpl
movsl
stos
push
pop
insb
push
sbb
pop
repnz
xchg
pop
push
fimull
cmp
cmpsl
fstps
fcmovu
sbb
or
inc
xchg
lods
sub
mov
xchg
adc
popl
outsl
xchg
add
imul
inc
jns
fcmovnb
mov
fimuls
jmp
dec
icebp
aad
xchg
cltd
add
nop
dec
sti
lret
xchg
repnz
popa
lds
int
sbb
jmp
mov
pop
repnz
xor
adc
std
or
cmp
jnp
fcmove
inc
repz
jmp
inc
cmp
mov
cmpsb
dec
rcrl
mov
stos
pop
iret
inc
call
or
mov
iret
pop
jb
push
test
mov
dec
mov
fimull
les
or
and
push
test
mov
stos
add
sub
xlat
mov
mov
ret
andl
xlat
ja
testl
popa
rcr
pop
movsb
imul
loop
fadd
and
xorl
xchg
fistpl
rcr
dec
insb
repnz
loope
sbb
in
int
mov
shr
outsl
push
sub
das
inc
loop
jg
lahf
push
dec
loopne
sbb
rolb
test
add
inc
jmp
imul
jo
out
nop
push
imul
loopne
xor
ret
sbb
imul
adc
fldl2e
dec
loop
adc
iret
pop
les
xchg
cmc
rcrb
pop
push
lret
inc
call
inc
push
push
ja
out
dec
mov
push
sbb
xchg
roll
pop
ja
aas
pop
je
inc
push
push
int3
sti
sti
and
xlat
mov
das
repz
repnz
xchg
push
lds
adc
and
push
shlb
adc
js
mov
sub
mov
sub
insl
jge
mov
mov
dec
pop
mov
aad
and
push
jle
adc
xchg
test
ljmp
jbe
mov
sti
xor
adc
pop
loop
dec
xlat
sarb
aas
lea
adc
call
fsts
mov
jno
or
icebp
push
adc
pop
mov
lods
and
jae
dec
add
gs
cld
mov
push
popf
lcall
fildl
hlt
and
rcll
out
insb
stos
jbe
int
adc
jecxz
inc
inc
bound
mov
and
sub
pop
addr16
xlat
loope
jno
or
pop
mov
insl
notb
fstps
scas
sti
pop
loopne
inc
in
pop
hlt
dec
mov
iret
fs
hlt
and
adc
repnz
sbb
lea
sub
movsl
iret
cwtl
ret
mov
push
lret
jb
daa
sbb
nop
push
add
adc
sti
xchg
push
adc
mov
lock
mov
es
pop
mov
cmp
out
inc
stos
pop
dec
icebp
test
adc
push
sbb
aaa
sahf
dec
aad
sbb
mov
cwtl
movsl
fsts
scas
mov
xor
leave
cmp
scas
ret
mov
fst
lods
pop
inc
mov
pop
inc
xchg
add
sub
aaa
jno
into
cs
fildll
xchg
pop
cmpsl
push
and
ljmp
lock
mov
inc
jne
push
data16
mov
es
dec
and
and
ss
aad
xchg
pop
aam
inc
push
jg
es
jecxz
outsl
rorl
sahf
cmc
pop
add
rclb
nop
pop
sti
fldcw
adc
out
js
inc
stos
inc
xor
jne
push
js
dec
scas
inc
fnstcw
mov
fidivrl
fdiv
or
sti
ja
rcrb
jno
dec
ret
xchg
inc
add
lcall
and
xlat
pop
mov
leave
lods
add
or
jl
xor
ret
mov
repnz
and
adc
mov
sbb
xchg
jnp
xchg
inc
jae
roll
fmuls
dec
push
fldt
sub
mov
xlat
test
adc
movsb
dec
iret
mov
adc
add
push
xchg
xchg
in
inc
pop
idivb
adc
push
pop
ljmp
or
rclb
inc
pushl
fsts
jae
repnz
jbe
sub
fucomi
push
mov
and
inc
loop
mov
sti
stos
mov
hlt
push
pop
cmp
lahf
inc
jmp
jbe
hlt
inc
xchg
ficoml
add
jbe
aaa
mov
mov
pusha
mov
jae
xchg
mov
mov
sbb
pop
jnp
aam
inc
or
gs
jmp
lods
in
xchg
mov
lock
aad
cmpsl
inc
movsl
fwait
stos
mov
add
push
mov
adc
in
mov
sbb
scas
pop
adc
aam
test
int
xchg
jbe
sub
inc
stos
ret
outsl
push
sbb
add
adc
pop
int
xchg
stos
fisttpll
xchg
aam
jecxz
lock
insl
inc
into
jo
inc
filds
xor
push
notl
insb
cli
sarb
jbe
cs
cmc
jne
dec
fcompl
adc
xchg
div
jmp
jns
pop
add
testb
sub
test
inc
jecxz
push
or
shll
mov
push
vmovlps
xchg
mov
inc
xchg
int
mov
out
jno
subb
cld
push
fcmovbe
lahf
cmp
popa
push
inc
jnp
xchg
push
mov
cwtl
mov
ret
cli
movsb
and
xor
es
out
xchg
jmp
aam
mov
fldcw
mov
xchg
jno
add
jp
ficompl
daa
jno
out
jle
jae
rcrb
and
pop
inc
mov
push
ljmp
pop
js
loop
xor
sbb
leave
stc
mov
test
push
das
fdivrs
stc
mov
sbb
pop
pop
mov
mov
and
lcall
sbb
pop
rcll
imul
daa
push
aas
sbb
lcall
mov
cmp
stc
and
iret
mov
enter
pop
push
repnz
test
jne
push
mov
inc
lods
sbb
in
ret
pop
movl
data16
adc
insb
popa
mulb
scas
sahf
mov
pop
scas
xchg
mov
or
jns
fidivrl
scas
mov
cs
jne
sub
jbe
push
dec
adc
movsb
loope
in
jle
mov
mov
call
push
xchg
mov
mov
cmpsl
inc
gs
mov
das
mov
in
push
push
mov
fimuls
arpl
adc
sarb
sub
push
es
or
xor
loop
ja
nop
push
sub
movsl
jbe
dec
dec
fistpl
repnz
pop
pusha
mov
nop
cltd
cmc
adc
mov
mov
mov
std
lods
ja
or
movsb
adc
test
push
pop
sbb
inc
push
lock
imul
adc
sub
jne
push
fldl
ficoms
add
fistl
stos
dec
add
xchg
out
in
pop
add
mov
cmp
out
fildl
push
and
test
inc
jbe
bound
push
sbbl
mov
fildll
stos
dec
icebp
pop
xchg
rcl
mov
inc
js
cmp
or
std
xchg
inc
pop
cmpsl
mov
cld
cli
movsl
inc
daa
pop
jecxz
xor
imul
cmp
stos
jg
es
aad
mov
jnp
lret
loop
mov
shlb
adc
sub
mov
insl
jg
push
vmread
iret
inc
mull
inc
scas
in
ss
lods
les
and
adc
jae
addr16
pop
out
lods
inc
rorl
cmp
push
inc
das
mov
mov
leave
outsl
es
icebp
icebp
push
aad
dec
lods
popf
leave
mov
dec
pushf
xchg
cmp
pop
sti
inc
ficoms
imul
rcl
dec
loopne
mov
push
call
mov
test
mov
sub
pop
jge
inc
imul
dec
pop
mov
cmp
push
pop
cld
imul
xchg
mov
lock
je
fcmovbe
pop
dec
ret
xchg
mov
pop
and
jp
in
fdivs
and
ja,pt
mov
sti
aad
push
push
adc
popf
stos
jbe
ret
push
push
je
push
hlt
push
imull
das
add
pop
dec
bound
push
dec
dec
rcll
adc
sub
push
lahf
int
stos
xorb
fistl
inc
cmpsb
loopne
xchg
loop
ret
pop
repnz
fwait
push
adc
push
pushf
in
clc
xchg
aad
in
lods
push
lahf
jg
fadds
in
push
pop
pop
sub
push
fwait
test
fcoms
add
pop
jno
ret
add
insl
sahf
jb
out
mov
lret
or
cmc
xor
dec
cwtl
sub
nop
mov
icebp
into
xchg
lods
add
fadds
sub
push
insl
in
arpl
lahf
sub
js
pop
jb
add
xchg
enter
cmpsl
out
in
xchg
dec
lea
push
sahf
scas
jnp
jg
aad
or
mov
ss
push
jo
xchg
pop
adc
loop
cli
aam
sbb
inc
jnp
adcb
mov
imul
mov
jae
movsl
outsb
xlat
les
movsb
iret
or
test
pop
dec
imul
dec
ficompl
enter
lock
aad
daa
mov
cmpsl
dec
test
pop
push
xor
std
bound
sub
jno
mov
test
mov
add
fcom
mov
pop
retw
clc
push
aaa
jns
push
stc
push
mov
sub
cvtdq2ps
enter
test
mov
lods
pop
fldcw
stos
lahf
push
cmp
out
pop
inc
call
lods
xchg
inc
cmpsl
sub
fisttps
sbb
lods
imul
fldz
sarb
mov
insl
xlat
popf
mov
imul
mov
dec
shll
fnstcw
lret
fcoms
mov
sbb
add
lcall
xchg
ret
jl
lahf
imul
adc
jle
je
loope
sbb
or
sbb
mov
shl
push
sub
sbb
cmpsl
adc
dec
mov
dec
sti
push
repnz
cmp
inc
dec
into
cmpsb
inc
sbb
or
fistpll
adc
jg
xchg
or
shrl
push
or
adc
les
inc
lods
push
mov
jnp
test
mov
cltd
popf
lock
jle
and
into
xchg
fcmovnu
imul
insl
loop
clc
pop
sub
popf
jae
ficomps
in
xchg
es
dec
mov
sbb
xor
cli
lock
js
add
pop
ret
inc
xchg
mov
mov
ret
pop
ret
jmp
cmc
inc
inc
sahf
aas
aad
insl
or
popa
inc
ret
add
pusha
sbb
mov
icebp
cmpsl
arpl
out
into
ret
sub
xchg
das
mov
ficoml
mov
mov
push
fidivrl
inc
add
es
pop
pop
in
cld
pop
mov
insl
jo
aam
push
xchg
push
cld
xchg
pop
xor
je
clc
sub
push
fldcw
and
shrl
cmc
dec
loop
dec
push
xlat
lds
in
repnz
jge
mov
es
imul
out
mov
adc
rcrl
sarb
ljmp
pop
mov
insb
mov
sti
mov
in
pop
mov
rorb
clc
push
xchg
scas
in
out
stc
out
fdiv
lcall
cld
adc
jle
sti
or
into
mov
cltd
cwtl
pop
mov
cmpb
jns
jle
jg
lret
mov
daa
jp
and
cmpsl
cld
or
fwait
pmuludq
push
pop
stos
fwait
insl
mov
xchg
shl
jp
pusha
ss
call
sub
jo
adc
loope
jp
fcomps
pop
inc
or
adc
lcall
fstps
mov
mov
insb
xchg
or
cmpsl
sbb
stc
into
push
or
push
repz
xlat
or
pop
into
daa
cmpsb
mov
lods
rcrb
fisubrl
push
jb
js
jns
and
daa
xor
xchg
dec
lret
ljmp
or
mov
lock
loopne
cli
push
inc
rcll
loop
in
inc
xor
jb
jns
rolb
push
movl
dec
jns
lahf
fdivp
inc
in
push
xchg
fwait
das
jo
fucomp
inc
cmp
xchg
out
pop
adc
push
test
lcallw
lcall
rcrl
mov
int
inc
prefetch
and
pop
cld
cli
ficomps
inc
stc
inc
sub
add
popf
cmova
mov
outsl
dec
ret
sbb
pop
inc
std
fwait
pop
mov
nop
imul
shr
push
jae
pop
out
pop
arpl
imul
jmp
into
cmpsb
jnp
xlat
pslld
outsb
xchg
lock
mov
jno
cld
fsubl
movsl
jmp
xchg
insl
das
icebp
mov
jmp
fcoms
and
and
stos
jbe
adc
test
push
xor
jg
dec
test
pop
loop
call
in
out
or
fadd
pop
fcomps
out
ljmp
push
es
mov
notb
mov
and
and
adc
pop
jmp
push
fld
imul
jmp
push
pop
div
jno
shr
cmpb
cmp
fistpl
imul
mov
sti
hlt
in
push
lods
lds
lock
xor
fisttpl
cmpsl
mov
and
repz
inc
sti
movsl
je
cmpsl
xor
mov
mov
mov
rclb
stc
jnp
pop
fs
xor
es
push
add
pop
stc
cmp
push
fcoms
jne
es
fwait
sub
cmp
xor
pop
add
push
mov
cmp
push
push
les
and
push
xchg
daa
push
daa
loop
std
addb
inc
dec
sbb
sub
fnstenv
adc
cmp
and
lret
sub
idivl
xchg
push
imul
push
xchg
dec
pop
es
pop
ret
fildll
out
fldcw
je
into
imul
or
sarb
jo
jne
rcrb
or
mov
loope
imul
dec
mov
pop
aam
mov
divl
add
cltd
cli
inc
mov
movsl
dec
jb
push
mov
insb
ret
add
fcoms
inc
dec
xor
fnstenv
xlat
rcr
push
scas
push
xchg
and
ret
test
xor
ret
dec
push
adc
cmp
mov
repnz
add
inc
mov
and
jno
jns
and
mov
movsb
lsl
dec
add
iret
pushf
xor
imul
fdivrl
gs
mov
out
jg
lea
dec
mov
pop
insl
dec
adc
lret
adc
cmp
lock
xchg
fidivs
jno
out
xor
mov
sbb
int3
test
mov
xlat
sbb
push
fcmovu
sbb
pop
mov
movsl
mov
fidivrs
inc
insl
inc
int
xor
icebp
mov
sub
aad
xor
or
shl
cmp
mov
bnd
mov
add
mov
es
dec
lret
ret
in
lea
rcr
inc
lods
add
push
xchg
js
fbstp
out
fistl
cld
pop
add
subl
push
f2xm1
fdivrp
lods
js
sub
adc
push
push
dec
fldt
xlat
adc
xor
push
xchg
lods
repnz
add
bound
jnp
mov
dec
xlat
or
flds
cmpsb
shlb
fucom
pop
jmp
les
test
incb
ret
sub
popa
sub
mov
mov
push
mov
loopne
scas
push
icebp
stos
xorl
jne
pop
fcomi
mov
push
jl
repnz
inc
adc
lock
sub
jl
addr16
mov
ds
xchg
icebp
add
iret
jl
addr16
cmp
mov
stc
fmul
or
es
fisubrl
push
mov
shr
push
div
ljmp
push
test
jmp
ja
cmc
mov
xchg
int
sbb
stos
jmp
pop
cmc
in
sti
sbb
ret
aad
repz
pop
test
ret
xchg
in
push
pop
stc
xchg
add
lods
enter
flds
xchg
sub
outsl
or
rclb
xor
div
addr16
mov
aad
pop
ja
push
add
sbb
icebp
iret
mov
adc
mov
je
and
push
shr
jmp
arpl
imul
mov
pop
push
test
push
push
pop
fsubrs
jae
cvtdq2ps
icebp
sub
sbb
scas
sub
sbbl
int3
test
mov
testl
cmp
out
sub
mov
dec
lea
mov
inc
push
pop
repnz
lds
sub
pop
dec
xlat
in
clc
addr16
mov
imul
push
into
mov
cmc
insb
pusha
clc
ljmp
sti
out
dec
ret
in
dec
sti
rep
lahf
sbbl
loope
jae
jo
push
pop
pop
out
fwait
js
fldl
add
pop
add
stc
negl
stos
aam
jnp
sbbl
inc
push
push
cmp
jae
sub
ss
roll
mov
out
fildl
jb
push
js
incb
jns
jmp
jno
mull
add
jge
cs
push
sbb
ret
xor
fcmovbe
push
pop
adc
cmpsl
xor
in
divl
fldl
xchg
adc
lock
cmp
inc
test
fisttpl
adc
lret
xor
push
in
imul
outsl
loop
push
lods
nop
pop
mov
faddl
imul
outsb
lods
mov
xchg
mov
inc
stc
push
inc
push
repz
divl
mov
imull
push
push
loopne
xchg
iret
xor
into
mov
sar
sbb
pop
ja
iret
call
mov
mov
or
icebp
enter
mov
push
xchg
repz
ds
sbb
notl
cmp
jecxz
mov
mov
or
jb
cmpsl
repnz
push
shl
cmpsl
mov
pop
mov
movsb
iret
xchg
mov
negb
jne,pt
xchg
fisubrl
pop
xchg
cmp
fmuls
leave
jbe
and
push
js
aad
inc
push
loope
xor
xor
mov
xor
cld
mov
outsl
pop
xor
push
jns
lock
int
mov
movsl
sub
xchg
std
fistpl
fdiv
adc
xor
aam
xor
inc
mov
push
icebp
std
iret
repz
mov
fistps
stc
bound
fstps
xchg
mov
jne
sahf
inc
fisubl
jae
mov
jbe
stos
movsl
push
sbb
sahf
xchg
adc
imul
mov
fisttpl
fucomip
rcr
ljmp
gs
inc
repz
rol
xor
loope
mov
call
sti
cld
aad
sti
pop
dec
inc
lahf
repnz
insl
adc
lods
fists
pusha
jg
jns
lret
push
int3
push
jp
jp
fnsave
dec
pop
stos
adc
lds
inc
arpl
add
daa
xor
sti
fldenv
in
fildll
fnstcw
push
test
sbb
push
jle
mov
je
or
insl
loop
iret
jmp
outsb
jmp
sbb
icebp
xchg
add
lret
in
fprem
pop
cwtl
push
xchg
lcall
ret
mov
jmp
xchg
out
fnsave
aam
jae
mov
cmpsl
push
aad
aam
inc
jle
xchg
std
xchg
test
or
pop
mov
pop
jp
inc
sub
cmp
mov
fnstenv
cmpsb
test
mov
cmovle
jbe
mov
and
cmpsl
inc
ret
lods
sbb
jns
nop
lods
in
inc
je
add
mov
dec
sub
in
ret
stc
mov
cmpsl
ja
cld
hlt
xchg
cmp
loope
out
xlat
mov
fdivl
xchg
imull
xchg
mov
pop
in
fs
outsl
loop
daa
adc
cmp
out
mov
pop
jmp
hlt
fcmovbe
mov
mov
cmpsl
out
lods
sbb
mov
push
pop
imul
je
or
test
cmp
or
clc
xchg
mov
pusha
out
int
scas
jge
faddp
popl
rolb
ret
sbb
idivl
movsb
repnz
cmc
jecxz
sarb
lret
cmp
lcall
dec
daa
xchg
cmp
mov
ret
pusha
jp
pop
push
cmp
push
filds
out
icebp
xchg
jmp
repz
out
ret
jmp
faddp
sub
bound
les
xchg
sar
adc
xor
popf
testl
adc
inc
shll
hlt
icebp
cmp
dec
xchg
jge
lods
inc
ds
dec
inc
sbb
mov
std
out
jg
sbb
mov
sub
fiaddl
mov
sbb
cli
cmc
popl
movsl
xchg
sbb
mov
xorl
pop
je
push
pop
adc
adc
inc
cmp
test
jg
cmp
xchg
je
or
popf
jo
cwtl
pop
pop
loop
lret
xchg
fwait
xchg
jbe
mov
xchg
sbbl
cs
push
dec
cmpsl
mov
inc
roll
mov
stos
and
adc
outsb
shrl
fistl
lods
mov
fiaddl
imul
xchg
sbb
jo
iret
mov
push
xor
cmpsl
mov
inc
imul
xlat
xchg
ret
das
lcall
jmp
ds
into
and
in
add
es
dec
lret
sbbl
imul
or
pop
repnz
test
hlt
daa
cld
and
mov
jns
push
jns
inc
imul
inc
aam
xchg
jmp
nop
aaa
stc
or
ds
stc
cltd
sub
shl
mov
out
cli
movsb
mov
in
cmpsb
and
xchg
mov
mov
mov
mov
jle
xchg
xchg
xchg
stos
xchg
adc
push
lods
mov
mov
daa
cmp
adc
test
sbb
cmp
mov
out
mov
jns
jle
stc
pop
sarb
cmpsl
icebp
ja
mov
scas
xchg
and
in
jbe
cmpsl
xchg
sti
nop
cli
cmc
ficoml
xchg
shrb
jbe
cmp
fldt
loop
leave
loope
push
fistpll
aad
adc
pop
es
pop
xchg
jl
ret
jae
xchg
loope
push
pop
aad
out
aam
sub
fbstp
cltd
loope
jns
adc
xchg
sub
sub
sub
daa
push
adc
sub
push
and
jns
and
je
fidivrs
push
jne
loope
xchg
push
or
popf
or
inc
mov
negl
adc
dec
mov
loope
jbe
testb
pop
out
jmp
sbb
and
notl
loop
mov
xlat
cmp
leave
pop
mov
jno
pop
dec
push
inc
jo
adcl
fcomip
add
xlat
mov
popa
lock
fidivrl
fldcw
test
nop
fbstp
jmp
das
repnz
mov
fistps
rcr
lret
jbe
lock
jmp
jmp
dec
sbb
lock
test
jbe
dec
loop
pop
jbe
jg
inc
cmp
lea
lret
sub
mov
mov
jge
call
je
sub
das
into
loop,pn
jecxz
jnp
rcll
js
movsb
pop
or
fld1
inc
cld
call
sbb
sar
cmpsl
das
je
dec
xchg
adc
mov
sub
xchg
or
mov
mov
insb
sbb
sahf
orl
adc
pop
lcall
pop
mov
pop
pop
pop
into
cmp
pop
movsl
xchg
and
mov
xor
mov
adc
xchg
mov
sbb
cwtl
add
mov
jo
mov
xchg
out
jae
movsl
in
jae
fs
pop
addr16
dec
adc
cld
xor
leave
xchg
pushf
icebp
cmp
fstpt
add
cmc
data16
pop
sbb
xchg
xorl
lret
mov
jb
ret
loop
pusha
sbb
hlt
jno
jp
fistl
cmp
cs
popa
movsl
inc
out
pop
out
inc
sub
jno
dec
testl
je
sub
sub
mov
std
xor
and
sbb
sub
lea
push
mov
fcomip
into
fnstenv
xor
ret
sahf
fsts
push
int
lret
gs
jmp
insl
sub
stc
pop
popa
xchg
inc
rcrb
adc
sub
out
push
add
frstor
mov
lahf
jb,pn
rclb
es
shl
notl
sub
je
stc
cmpsb
xor
xor
mul
out
inc
shl
inc
insl
pop
cs
in
adc
pusha
fnstcw
mov
loope
mov
cltd
or
int3
stos
ret
idivl
xlat
sarl
sti
test
mov
mov
mov
or
mull
out
xlat
scas
sbb
add
pop
xchg
ret
cmp
dec
mov
pop
pop
mov
mov
cmp
seto
inc
pop
pop
hlt
add
movsl
scas
sub
pop
jae
mov
outsb
lds
pop
xor
gs
mov
sbbl
int3
in
out
aad
loope
ljmp
sbb
loope
lret
pop
fildl
mov
inc
mov
push
fwait
cmp
daa
stos
inc
notl
call
test
inc
inc
imull
stc
shl
pop
in
inc
lods
adcb
pop
mov
push
test
daa
sub
aaa
lea
push
xor
test
movsl
divl
xchg
push
fld
xlat
icebp
pop
lds
sub
push
bound
mov
push
pop
sub
sarb
jg
ficompl
jb
xchg
xchg
fst
xchg
sbb
stc
testl
pop
test
xlat
pusha
negl
sub
stc
and
dec
pop
incl
addr16
dec
imul
mov
xchg
sbb
mov
movsl
push
fnstsw
fsubrl
push
xchg
push
pop
xor
jae
fldenv
xlat
xor
xchg
scas
out
push
and
pop
das
pop
test
mov
divb
lods
xchg
xchg
and
mov
push
and
and
and
and
and
and
pushf
stc
loopne
mov
adc
fcmove
ret
shr
in
rcrb
mov
test
cmc
mov
jmp
inc
mov
fistl
pop
fistpl
out
and
pop
push
xchg
jae
push
in
dec
orb
loope
push
push
std
push
mov
enter
push
icebp
iret
fistl
int
mov
pop
iret
or
push
aad
jnp
fwait
loope
shr
push
loopne
addr16
icebp
orl
cmp
push
popf
pop
sbb
mov
testb
xor
cmpsb
push
loope
and
in
push
lock
cltd
adc
lcall
aam
lahf
pop
lret
jmp
test
mov
in
repnz
mov
loope
test
leave
lcall
sbb
test
push
aam
fbstp
rclb
stos
daa
dec
stos
lds
jbe
ret
enter
push
and
iret
xchg
dec
sahf
push
pop
xchg
adc
fwait
jnp
pop
fstps
dec
les
or
addl
jbe
mov
xchg
lret
pop
not
es
rorb
ja
jle
sub
dec
adc
xor
pop
sub
ficoms
push
sub
jns
insl
sarb
js
xchg
dec
fldlg2
push
adc
jmp
push
push
gs
les
inc
sub
dec
or
dec
push
in
jmp
sbb
cmp
aad
cs
or
mov
mov
mov
cmpsl
ss
mov
fwait
inc
lock
inc
or
xchg
inc
fwait
sbb
in
dec
test
call
jecxz
or
shl
mov
and
rcr
dec
clc
xlat
or
jbe
mov
pop
mov
sti
sbb
inc
es
enter
jecxz
dec
outsb
sub
aam
cld
das
cmp
jle
mov
test
inc
xor
dec
fcomi
xchg
push
iret
and
int3
add
pop
mov
call
popf
loope
sbb
outsb
daa
iret
imul
ret
pop
pop
jns
lcall
icebp
inc
lods
sub
mov
movsl
xchg
jb
in
pop
mov
mov
xor
daa
lods
xor
jb
shlb
mov
in
stos
mov
ret
cmpsl
mov
ret
aad
cltd
sbb
xchg
or
test
idivb
fisubrl
out
imul
pusha
hlt
mul
inc
xchg
dec
jp
sahf
inc
push
cmp
rcll
test
std
mov
pop
sub
test
inc
shl
ljmp
add
jp
es
loop
lret
sbb
call
mov
add
sub
xor
push
or
sub
fldt
mov
push
es
adc
adc
push
in
outsl
stos
add
fstp
mov
jecxz
jmp
in
push
lock
mov
lret
mov
rep
stos
or
mov
aad
pop
insb
sub
xchg
test
mov
jnp
icebp
mov
ja
mov
cmpsb
leave
xchg
shlb
xor
cmp
mov
mov
mov
mov
stc
jno
int
xchg
shrb
mov
mov
and
adc
fwait
jmp
adc
lret
sahf
or
push
mov
push
mov
orl
pop
int
push
inc
iret
int3
sub
int3
push
mov
cmc
and
lock
dec
lret
adc
push
jae
hlt
or
int
es
addr16
cltd
mov
inc
mov
add
out
jp
shrl
sti
fcomps
or
fisubrl
ljmp
frstor
mov
xlat
jne
ret
fstpt
rolb
cmp
push
push
or
cwtl
nop
scas
or
xlat
cmp
lods
stc
jecxz
add
cmpsl
rclb
clc
adc
xchg
ret
pop
pop
fwait
repz
ss
mov
ja
xlat
outsb
pmullw
fwait
scas
js
dec
or
xchg
out
in
sbb
add
das
inc
pop
cltd
int3
xchg
out
je
icebp
mov
dec
inc
popf
in
test
xlat
adc
enter
cli
xchg
cmp
inc
xchg
mov
out
add
mov
fldenv
xchg
imull
or
loopne
inc
lea
cmpsb
xor
xor
loopne
jmp
and
mov
dec
inc
mov
or
rolb
jg
les
lods
fwait
jno
loop
ret
js
or
sub
fistpl
jp
shrl
or
jae
add
and
inc
sub
jae
push
push
sbb
loopne
adc
mov
in
movsb
ret
cltd
iret
jb
fldt
movsb
gs
lahf
jae
adc
inc
pop
mov
dec
dec
or
pop
pop
push
add
ss
mov
fimull
mov
dec
add
add
dec
aas
cltd
je
inc
pop
adc
loope
subl
ret
idivb
cmp
sub
iret
out
or
rorl
insb
dec
jmp
imul
test
mov
jnp
mov
ja
or
cwtl
rorl
inc
idivl
pop
xchg
daa
xchg
scas
inc
insb
pop
jmp
sbb
sbb
push
frstor
lcall
ret
jb
inc
daa
pusha
outsb
push
jns
xor
pop
fbld
int
rcrl
loope
lds
dec
icebp
repz
adc
in
add
outsl
mov
into
cmpsl
imul
shll
cld
out
pop
notl
imul
fistl
aad
or
mov
icebp
inc
mov
jb
inc
mov
adc
inc
cmc
icebp
sbb
lods
xlat
adc
out
fdivr
fildll
push
xor
mov
loope
fidivrl
rol
adc
imul
add
repnz
pop
shrb
dec
repz
inc
lret
dec
mov
fldt
fmul
inc
inc
in
shlb
inc
idiv
ja
lcall
jns
loope
mov
xchg
aam
arpl
leave
mov
in
add
adc
mov
pop
push
xchg
push
shll
mov
or
push
in
mov
iret
bnd
ficoml
test
ds
insb
pop
ret
jmp
fimuls
fcmovnbe
pop
es
push
pop
aad
jecxz
inc
xchg
in
ljmp
jns
les
cmpsl
cs
pop
adc
add
es
and
mov
lahf
pop
xor
es
ss
shrb
adc
jmp
iret
nop
loope
dec
xchg
mov
cmp
and
mov
adc
push
aad
data16
cld
xchg
cmp
jb
push
inc
scas
jge
mov
lods
mov
lret
pop
pop
pop
or
sbb
mov
xchg
jl
push
pop
iret
scas
inc
push
sbb
fimuls
push
xor
cmp
jnp
mov
push
inc
fnstcw
jmp
imulb
mov
mov
sub
sbb
rcrb
fisttps
adc
loope
mov
cs
and
pop
mov
divl
out
leave
clc
add
loope
pushf
lret
fidivs
icebp
lret
std
inc
jno
jne
fidivrl
scas
fildl
les
cld
mov
jns
inc
jb
mov
out
mov
inc
inc
js
loope
fsubs
lods
fstps
mov
loope
jp
inc
stos
out
and
cmpsl
std
rcl
pop
insl
ss
ret
rol
pop
dec
ss
cli
sbb
je
xchg
mov
pushf
out
movsl
lock
inc
push
mov
xor
fistpll
lahf
int3
sbb
loope
fstpt
scas
loop
push
rclb
sbb
push
dec
cld
pop
dec
pop
push
xchg
out
popf
jl
mov
jbe
adc
rorb
push
push
cmpsl
mov
mov
cli
mov
pop
cli
jb
pop
mov
es
fadd
adc
jbe
xchg
mov
jl
add
or
push
fistpll
dec
or
jle
pop
push
decb
mov
outsb
push
loopne
adc
rolb
fnstenv
cmp
dec
mov
inc
scas
pop
fwait
add
push
sbb
or
lret
test
pusha
jl
sub
jg
loop
dec
and
or
faddp
div
inc
insb
ffree
pop
scas
inc
divl
adc
scas
mov
fprem1
adc
iret
inc
push
fwait
int
icebp
iret
loopne
and
pop
sbb
pop
fwait
inc
xor
sbb
fistps
loope
pop
leave
fcmovu
xchg
mov
adc
adc
xchg
jnp
in
pusha
dec
and
sub
xor
cmc
jae
mov
xorb
cmc
cli
push
leave
fbstp
or
push
sbb
test
xchg
arpl
xor
pop
stc
push
outsl
jl
xchg
mov
pop
pop
mov
cmpsl
mov
dec
dec
sbb
jo
dec
scas
jg
jle,pn
xor
sub
mov
lret
and
and
mov
mov
xor
mov
aad
repnz
mov
lods
adc
das
mov
loop
in
and
jae
cmpsl
sbb
lret
mov
inc
and
mov
dec
scas
jne
add
jae
notl
in
fidivrs
push
cmp
sbb
scas
repnz
imul
bound
fprem
pop
imull
stos
cs
add
sbb
in
clc
leave
ljmp
bnd
dec
rolb
push
pop
int3
mov
mov
aas
cwtl
xor
dec
ret
push
shlb
repnz
and
popf
popa
mov
mov
xchg
dec
push
cmpsb
push
pop
outsl
in
stos
lds
push
test
cmpsl
lcall
iret
push
pop
jne
test
xchg
xor
mov
mov
test
lds
mov
dec
jns
or
test
clc
xorb
leave
xchg
clc
lret
out
ret
popf
xor
push
imul
inc
int
pop
mov
test
pop
mov
iret
mov
ret
mov
jne
push
inc
imul
inc
ret
xchg
push
rorl
mov
repnz
orl
adc
jns
ja
xchg
lret
dec
rorl
imul
fldl
fldt
lahf
jo
inc
sbb
inc
mov
xchg
pop
insl
sbb
cld
shrb
fiaddl
addr16
ret
cld
in
mov
fisubl
inc
test
lcall
faddl
scas
jbe
push
jne
inc
mov
popa
int3
sbb
adc
out
repz
dec
mov
push
inc
push
xor
fcoms
shrb
roll
inc
jmp
inc
dec
mov
fcos
insl
push
sbb
shrl
mov
fnstcw
inc
mov
pop
mov
int
lcall
inc
or
cmpsl
pop
and
ret
mov
xlat
js
sub
or
pop
push
lds
call
inc
cmpsl
adc
call
fldt
jno
dec
pop
arpl
fnstenv
scas
jo
cmpsb
sub
mov
div
mov
popf
xchg
or
jle
sbb
jno
dec
push
repnz
loop
imul
and
pushf
sbb
sbb
mov
mov
inc
jge
mov
movb
leave
xor
mov
inc
daa
js
pop
repz
aad
adc
loope
or
inc
sarb
out
push
fdivl
lods
cmc
repz
dec
repz
xchg
push
mov
loope
pop
lods
repz
imul
je
mov
outsl
dec
inc
in
pop
mov
mov
mov
xchg
xchg
wbinvd
jmp
inc
leave
push
loop
fistpl
sbb
data16
inc
sti
je
xchg
imul
cmp
or
mov
pop
lcall
adc
mov
and
and
mov
int
sbb
outsb
pop
mov
add
jmp
adc
js
xchg
push
pop
jb
je
sub
push
repnz
fs
push
inc
cmc
enter
lods
scas
aaa
loopne
and
push
inc
adc
xor
cmp
and
rol
in
js
imul
fidivl
fists
adc
dec
dec
pop
aad
cmpsb
in
push
fmul
dec
ds
es
and
sbb
jmp
jmp
xchg
mov
mov
inc
pop
push
fpatan
add
nop
add
data16
das
out
and
sti
inc
pop
mov
clc
rorb
mov
lds
fsqrt
pand
icebp
pop
sti
xchg
add
imul
push
xchg
jl
shrl
lahf
in
fsubrs
lahf
inc
inc
push
inc
test
mov
adcb
push
es
outsb
and
shrb
sub
mov
pop
aad
xlat
mov
push
add
sub
daa
xchg
flds
lcall
mov
cmp
rcll
filds
lret
negb
dec
cltd
dec
fcmove
repnz
mov
mov
mov
cs
add
stc
push
mov
ja
outsb
push
xchg
scas
das
xchg
adc
add
cmp
mov
jg
mov
xor
fsubr
pop
adc
mov
push
push
push
inc
mov
mov
rcrl
fld
mov
dec
lods
imul
adc
mov
or
mov
rclb
icebp
fistps
icebp
jle
rolb
scas
je
aaa
daa
mov
fsts
shlb
aam
fcmovnbe
inc
sub
imul
je
testb
pop
cmp
fdivrs
shrl
adc
dec
ret
popf
das
shll
jmp
xchg
subb
lds
repnz
mov
sbb
cmp
push
sbb
mov
movb
stos
xchg
fisubrl
sub
push
pop
outsl
scas
stos
jp
int
std
xchg
cld
dec
cmpsl
cltd
mov
push
mov
inc
inc
xchg
sub
test
xchg
push
idivb
stos
xchg
ret
cwtl
inc
aad
incl
stc
push
dec
leave
jne
imul
popf
fistpl
scas
cmp
and
mov
mov
mov
dec
outsb
fucomi
inc
movsl
push
addb
shrb
xlat
mov
loope
pop
xor
fcmovnb
adc
xlat
sahf
jmp
xlat
xchg
cmpsl
out
sub
inc
int3
dec
xchg
mov
inc
insl
arpl
adc
imul
aad
clc
mov
lds
rorl
fbld
lcall
cli
fistps
or
pop
movb
xchg
lock
sbb
imul
mov
ss
cmp
mov
int
push
cmp
inc
les
sarb
add
sub
push
fcomp
repz
mov
push
xchg
outsb
dec
adc
push
push
mov
scas
xchg
push
adc
repnz
ret
sub
push
push
xchg
test
pop
xchg
jecxz
xchg
jne
sub
add
dec
aas
and
test
shrb
movsl
dec
rorl
pop
fadds
lahf
mov
inc
fldt
pop
rcrl
inc
imul
cmp
push
cmpsb
les
push
jmp
shl
pop
adc
xor
push
insl
lock
sbb
cmpw
push
dec
cltd
mov
loop
or
cmc
push
adc
js,pn
mov
mov
pop
into
dec
sub
out
jp
pop
fildl
push
mov
subb
in
addr16
jns
push
xchg
out
pop
jmp
imul
pop
push
jl
test
rol
imul
push
ss
jmp
xlat
imul
cmc
fsincos
out
sbb
xor
ret
sbb
pop
inc
out
push
mov
loope
rorl
sbb
in
and
in
cmp
pop
mov
adc
imul
rcll
iret
mul
fsts
and
ds
fs
mov
test
inc
cmp
jns
xlat
fldcw
fnsave
xchg
pop
sub
pop
loope
cmp
cmp
inc
lock
fcmovnb
insl
pop
jne
cmc
adc
push
adc
sub
xchg
ret
fistpl
loope
inc
iret
sub
js
aaa
in
rcrb
arpl
inc
fidivrl
push
cmp
sbb
mov
add
int
pop
xchg
xchg
dec
sub
adc
cld
out
cwtl
aad
push
dec
mov
rcr
sbb
pop
inc
fwait
std
dec
pushf
xor
int
xchg
sub
inc
jo
jg
inc
xor
adc
jbe
cmp
push
pop
xor
das
or
shrb
push
dec
cmp
dec
das
adcb
imul
push
imul
xchg
adc
mov
xlat
ret
mov
repz
icebp
pop
adc
push
addr16
xchg
das
inc
xchg
push
push
sbb
mov
sbb
cs
adc
pop
xlat
and
mov
pop
icebp
fcmovnu
cmpsl
push
scas
jecxz
lret
std
xchg
adc
inc
iret
call
add
loop
xlat
cmp
out
cld
jb
mov
xor
sub
cmp
fistpl
int3
cmc
xchg
repz
leave
loope
rcll
dec
mov
jmp
hlt
sarl
mov
adc
adc
fst
pop
adc
leave
add
scas
andl
lea
lea
xchg
xlat
sar
pop
je
inc
xchg
mov
enter
lahf
in
jbe
cltd
iret
dec
add
mov
cwtl
repnz
sbb
flds
in
loop
jnp
inc
or
jl
insb
xor
xchg
fiaddl
push
sbb
sahf
outsb
ret
xchg
mov
xchg
add
mov
js
dec
mov
push
or
inc
pop
cs
cmp
mov
jnp
imul
jp
in
es
icebp
push
or
movsl
or
xor
sti
sti
pop
popf
call
jecxz
xlat
inc
incl
push
pusha
adc
push
lods
dec
dec
aad
repz
sti
jmp
ret
into
test
cmc
out
mov
fcomps
jb
push
jle
lea
add
or
insl
inc
mov
mov
out
xor
lcall
sbb
mov
mov
in
pop
shrl
es
in
inc
push
out
mov
push
push
idivb
ret
es
test
pusha
fstp
ret
and
imul
stos
inc
mov
jbe
xor
les
icebp
lods
and
jecxz
cli
scas
es
sbb
int
shll
stos
cmp
push
testb
inc
add
rolb
std
notl
fbstp
xchg
inc
iret
xlat
adc
nop
scas
je
adc
inc
lods
adc
insl
mov
sub
jl
fsubrl
mov
aad
mov
ret
and
int
movsl
adc
push
sub
addr16
jmp
aaa
pop
cmc
fidivs
inc
cwtl
dec
mov
push
cmp
mov
sub
jecxz
jnp
mov
movsl
push
pop
push
ret
fpatan
fstp
andl
sti
or
mov
mov
xchg
cmp
jecxz
outsl
xchg
and
inc
popf
les
adc
aaa
adc
lret
sub
in
clc
xchg
mov
scas
push
jl
add
cwtl
and
lods
push
fcomps
lock
cmpsb
sbb
ja
push
xlat
push
inc
cmc
icebp
icebp
push
test
pop
sub
testl
or
jae
and
loop
lea
aad
rcr
xlat
ret
ret
je
lds
lahf
push
mov
pop
xchg
sub
sarl
stc
sti
fstl
mov
xor
mov
dec
icebp
sahf
xchg
enter
cmc
jg
ret
inc
fs
xlat
scas
lods
add
loop
xchg
xlat
aaa
jno
faddp
out
hlt
push
ret
addr16
ret
sbb
pop
inc
push
xor
push
testl
into
pop
stc
inc
xchg
insb
aam
adc
mov
hlt
sub
test
or
jl
mov
or
pop
call
adc
addr16
out
in
lahf
scas
xchg
jne
xchg
das
inc
push
imul
pop
imul
jbe
jecxz
jl
test
scas
pop
in
push
pop
xor
mov
mov
jl
xchg
daa
fcomp
in
cld
idivb
xorl
js
xchg
mov
insb
mov
mov
out
add
pop
cmc
fildll
cmc
fildl
jge
push
jae
fcmovbe
fnstcw
push
pop
or
imul
xlat
stos
dec
lahf
mov
aaa
fldcw
inc
lret
jne
les
jmp
xchg
xor
adc
repz
flds
jecxz
clc
inc
push
mov
fiadds
and
dec
mov
inc
push
sbb
mov
xor
dec
lock
fiadds
cmp
enter
stos
sbb
mov
jmp
jge
fildll
fstp
xor
divl
outsb
cmpsb
lahf
mov
jns
js
push
icebp
pop
xchg
fwait
jge
push
xor
jmp
sbb
ja
mov
int
inc
loope
cld
popa
pop
stos
add
xor
dec
jmp
insl
into
jns
pop
or
ss
sub
pop
lret
in
inc
cmc
repz
sub
imul
or
mov
jnp
inc
enter
inc
mov
mov
outsl
in
xchg
es
cmpl
cs
dec
push
mov
xor
ror
test
int
or
lods
jns
outsl
loop
in
ljmp
sbb
xchg
pop
jb
inc
jo
cmpb
xchg
inc
inc
lods
outsb
fcmovnbe
orb
sub
rcr
inc
popa
jge
xlat
inc
cmp
jmp
adc
out
popl
add
enter
add
in
negl
mov
dec
test
inc
es
jle
or
je
pop
mov
mov
cmpsl
adc
add
xchg
insb
or
push
push
scas
add
cmpsl
or
rep
mov
inc
ss
sub
les
imul
sarb
fprem
scas
aad
mul
test
push
add
es
lahf
in
aas
jbe
xor
mov
cld
lcall
add
mov
ficoms
or
sub
xlat
inc
shll
pop
rorl
jns
sbb
sar
jbe
leave
inc
cmc
xchg
in
mov
lds
pop
dec
xchg
pop
inc
icebp
xchg
pop
fcomp
ffree
adc
movsb
je
mov
popf
push
icebp
push
fmuls
lock
int3
cmp
ret
lcall
fisttpl
clc
cli
rcll
enter
adc
aam
loope
lcall
mov
mov
insl
ret
aad
jmp
push
es
pop
hlt
mov
fmuls
dec
sbb
lods
pop
and
rcl
aaa
dec
mov
lods
jp
inc
jmp
xor
push
fcomp
loope
pop
and
fdivr
cltd
lcall
xchg
mov
mov
xchg
xor
rolb
sbb
fwait
call
xor
mov
ret
push
dec
lahf
iret
xchg
insl
jns
fsubrl
int
hlt
xchg
push
aad
es
out
adc
pop
xlat
aaa
sub
enter
stc
lods
out
jns
cltd
jp
bound
shll
std
push
xchg
xchg
sbb
scas
pop
fs
push
add
addr16
xchg
xlat
mov
clc
adcb
ljmp
cmc
insb
jo
clc
shrl
sti
mov
shrl
xchg
cmp
mov
cmpsb
pop
or
jecxz
rcl
aad
lcall
scas
test
xor
jae
insl
xlat
pop
jnp
es
repnz
jae
sarl
cmp
xlat
pop
out
add
inc
std
jns
fmuls
jmp
cmp
pusha
xchg
pushf
iret
ss
jecxz
mov
negl
insl
fdivrl
sbb
or
gs
aam
and
not
cmpsl
shl
nop
push
insl
aam
sub
cmpsl
dec
ja
fwait
xchg
sbb
push
xchg
pop
lret
sub
xchg
pop
jb
inc
sub
loope
ss
adc
ljmp
in
ficoml
dec
mov
dec
xlat
xchg
dec
and
jo
cmpsb
sbb
xlat
dec
xchg
leave
je
shlb
imul
xor
repz
jecxz
lret
xor
clc
fistps
fwait
setp
push
rcl
or
dec
cli
push
xchg
xlat
adc
jae
inc
xor
inc
lahf
icebp
push
inc
jp
cmp
sub
xlat
ret
jb
lock
mov
mov
movsl
xor
xchg
shrl
jp
rcr
inc
xchg
jmp
in
inc
mov
xorb
push
lods
pop
es
movsl
and
push
divb
sub
or
mov
inc
outsb
jp
fwait
lret
adc
push
fisubs
xor
cmp
ficomps
stos
sbb
xchg
mov
sbb
push
out
jg
jb
adc
fadds
xor
mov
aas
imull
xchg
xor
mull
jg
clc
ror
int
adc
xchg
fisubrl
je
xchg
push
or
mov
xchg
or
inc
cld
popf
repz
test
jb
fistps
push
pop
insb
jb
push
clc
scas
lcall
or
popf
adc
arpl
lret
jne
imul
mov
jecxz
insb
inc
fwait
std
in
inc
adc
insl
jl
xchg
mov
rcr
daa
adc
or
in
pop
cmp
pop
jns
js
lock
aam
jno
cmpsb
stos
cmpsl
in
xchg
fistl
aam
xlat
std
add
inc
cltd
mov
ja
ret
pop
or
insb
jae
movsb
mov
insl
push
dec
sbb
mov
add
pop
push
mov
inc
xlat
fnstenv
inc
or
push
pop
jne
in
mov
stos
push
inc
jle
movsl
mov
test
fildll
jns
shrl
cmc
sub
lahf
repz
xchg
adc
cmc
stos
jl
lea
or
mov
lods
jnp
xchg
jge
cwtl
add
shl
inc
aad
insb
xchg
sub
iret
cli
pop
push
nop
je
arpl
rcrb
push
enter
into
or
stos
inc
repnz
push
int3
jb
mov
aam
and
lea
pop
icebp
loope
int
aad
aad
nop
jb
inc
std
fwait
lds
lds
out
das
push
fucomi
push
mov
cld
mov
fldt
push
jno
mov
nop
into
xchg
dec
fstpt
loope
add
fistpl
xchg
lods
mov
lret
pop
aad
fnstcw
test
jle
xchg
std
movsl
je
cmp
aad
fcomip
mov
js
pop
push
jl
test
gs
cmc
fisttpl
arpl
inc
mov
scas
xchg
cmp
pop
lea
daa
andb
adc
cmp
jl
jmp
cmpsb
mov
ss
pop
loop
dec
aam
push
push
call
inc
test
mov
pop
lret
aad
addr16
dec
repz
jg
push
ret
inc
pop
in
push
pop
xchg
std
addr16
jb
push
push
lods
loope
or
in
jg
dec
xchg
pop
fstps
inc
mov
fcmovu
mov
lret
jp
clc
sarl
dec
leave
xchg
shl
push
push
adc
sub
adc
js
xor
enter
fst
repz
mov
push
mov
mov
shrb
repz
mov
xlat
repnz
push
xlat
lea
xlat
imul
inc
sbb
lahf
sub
rclb
imul
lods
add
mov
dec
arpl
ret
jnp
shll
xchg
mov
test
call
sar
into
es
pop
pop
xor
aad
xchg
ds
jge
mov
decl
lahf
ja
cmpsb
mov
test
mov
repz
pop
dec
popa
rcll
out
cltd
mov
andb
nop
ret
push
loope
push
or
cmp
cmp
es
lds
neg
add
xchg
mov
in
dec
sub
stc
xchg
or
add
icebp
lds
cld
push
cmpsb
icebp
pop
scas
cli
test
aaa
dec
lock
aam
adc
inc
out
lret
dec
jge
sbb
scas
arpl
inc
inc
push
inc
and
push
scas
aad
rcrl
or
adcl
negb
jnp
fadd
jmp
cli
scas
rcll
inc
arpl
in
pop
mov
jp
popf
ja
lods
sub
outsl
mov
shl
jns
adc
xchg
inc
pop
inc
into
adc
jecxz
in
repz
in
lret
and
in
out
iret
jne
sbb
xchg
jb
fistl
add
pop
imul
pop
xchg
jo
fstl
lret
inc
fwait
popl
fld
pop
insb
jnp
lds
flds
pop
cmp
imul
es
jns
xor
lea
xchg
jnp
scas
jns
xchg
xchg
and
std
jg
enter
cmp
dec
rcl
push
cmc
mov
adc
xchg
ficomps
inc
insl
out
loop
pop
push
inc
in
push
xchg
scas
loop
pop
jp
js
outsl
sbb
mov
xchg
mov
aad
andb
dec
mov
insl
clc
cmpsb
adc
js
or
sbb
sub
mov
dec
push
push
js
ret
add
inc
xor
call
pop
pop
test
mov
repnz
pop
test
lods
mov
icebp
inc
adc
adc
jnp
xlat
dec
xchg
mov
jns
lcall
aam
jno
sub
in
xorb
cmpsl
mov
insl
jg
aaa
cmpsb
loope
inc
outsb
dec
imul
ds
xor
insl
jbe
and
mov
fxch
in
fisttpl
iret
les
xchg
andl
icebp
fwait
out
sbb
adc
sub
test
sbb
xchg
pop
mov
stos
insl
jg
cwtl
and
hlt
xchg
loope
inc
pop
mov
push
pop
push
shll
ret
mov
je
cs
or
pop
pop
cmpsl
inc
xchg
pop
dec
or
addr16
jl
adc
or
xchg
dec
and
dec
insl
mov
xor
adc
cmp
pop
mov
sbb
je
test
movl
daa
addb
inc
jl
adc
fwait
movsb
jp
repz
jb
pop
test
iret
testl
push
adc
sub
xorl
xlat
add
imul
fs
cwtl
fisubl
lea
shlb
sub
push
enter
jg
mov
fldcw
ja
xchg
ret
push
mov
jmp
notb
mov
outsb
js,pn
xchg
aaa
lahf
movsb
pop
jg
pushf
lds
in
adc
jmp
sub
cmp
jg
jle
mov
pusha
pop
stc
test
pop
inc
jp
loope
sub
sarb
repz
pop
ret
sbb
mov
inc
xor
mov
icebp
adc
mov
je
icebp
or
hlt
imul
push
imul
mov
cmp
xchg
push
les
ja
adc
push
call
xchg
lods
pop
or
test
ja
call
mov
subl
repz
or
cld
je
sub
xchg
scas
sti
into
xchg
shlb
rcr
inc
xchg
sbb
inc
mov
fsubs
js
and
add
mov
mov
sbb
jl
lods
out
add
jb
fistl
repnz
inc
mov
int
mov
mov
iret
ret
mov
adc
jg
sub
xor
fwait
sbb
pop
and
stc
or
lods
ss
insl
hlt
mov
inc
sbb
sbb
or
cs
cli
es
dec
int3
lods
neg
aam
aad
shll
push
lock
xlat
inc
or
std
sahf
jecxz
cmpsl
xor
jne
mov
mov
fdivl
mov
and
inc
pop
es
mov
out
xchg
sub
test
leave
xchg
addb
pop
fcompl
lea
dec
scas
xchg
or
lcall
js
sti
cmp
or
test
sbb
sbbl
inc
ds
push
jmp
imul
fsubr
push
pop
insb
add
mov
fisttpl
cltd
jnp
repnz
test
sub
sahf
inc
or
shll
inc
lock
inc
mov
popf
mov
adc
pop
or
inc
add
xchg
stc
js
int3
fisubrs
je
cltd
jl
xor
add
adc
xor
xchg
rolb
cmpsl
arpl
stos
xchg
xchg
inc
dec
enter
insl
xchg
add
lds
xlat
add
push
adc
les
mov
fnstcw
xchg
sbb
lock
xchg
inc
inc
mov
repz
pop
mov
xchg
fadds
sub
iret
repnz
mov
outsb
mov
dec
std
insb
cld
sahf
loopne
cmpsl
push
xor
roll
inc
andl
test
int
stos
jg
fnsave
xchg
popa
mov
ret
inc
jns
out
out
xchg
inc
popf
inc
scas
decb
xchg
mov
jmp
and
fldenv
push
inc
pop
loopne
adc
imul
sbb
mov
and
inc
lret
pop
lods
lahf
sbb
es
lods
add
jo
addb
mull
push
adc
or
sbb
fcomi
mov
cli
jae
iret
outsb
and
out
call
mov
sbb
aad
aaa
sbb
out
mov
in
int3
pop
out
stc
jmp
rcr
dec
filds
xchg
es
mov
lret
mov
pop
je
lods
push
push
call
sar
lods
xchg
repz
rcll
in
out
mov
inc
int
lcall
mov
rorl
xor
adc
jmp
adc
push
es
test
inc
pusha
dec
push
adc
adc
fldenv
imul
xchg
repz
lcall
lods
cmpsl
lock
fistpl
mov
pop
cld
inc
lret
js
sub
or
repz
inc
in
lods
xor
jns
das
lods
pop
xor
out
stos
push
cmp
mov
popa
stc
ljmp
pop
adcl
pusha
insl
sahf
sbbl
mov
jl
xor
mov
fs
push
movsb
mov
xchg
sub
adc
mov
ficoml
mov
dec
sbb
push
gs
xchg
fwait
repz
daa
inc
and
dec
push
dec
mov
lcall
aad
or
and
scas
jp
xchg
mov
inc
cltd
icebp
pop
rcrb
out
sub
and
push
out
hlt
xchg
push
xchg
adc
ret
xchg
sbb
pop
fstp
shlb
lock
adc
idivl
outsl
in
jno
sub
cmp
cli
fldenv
into
xchg
xchg
fsubrs
and
cmp
test
popf
inc
xchg
and
sbbb
aad
insl
pop
xor
ljmp
inc
cltd
push
repnz
rcrb
iret
push
dec
cmp
shll
fbld
shlb
arpl
test
xor
push
and
mov
push
jbe
pop
xor
push
notb
xchg
jne
fwait
dec
popf
adc
xchg
xor
cmpsl
push
adc
jae
jle
pop
fdecstp
test
sbb
movsl
mov
sahf
rcr
mov
das
scas
pop
and
jg
push
push
adc
xchg
fldenv
pop
imul
int
jg
jno
shrl
clc
mov
in
mov
lea
mov
dec
mov
push
inc
push
sbb
popa
aad
lods
sbb
ret
sub
xchg
daa
adc
inc
jno
insb
push
hlt
mov
jmp
adc
arpl
pop
inc
jnp
push
frstor
cltd
pop
xchg
daa
dec
ret
cltd
mov
fwait
iret
cmp
daa
xchg
inc
push
fldt
arpl
scas
push
ja
inc
js
int3
in
adc
repz
inc
insb
dec
dec
jmp
pop
sub
xchg
cld
push
and
jnp
daa
adcl
inc
ret
testl
pop
shr
push
loopne
rcr
fdivs
push
mov
daa
out
push
pop
ret
lea
xlat
pop
mov
xor
lods
jmp
shlb
xchg
clc
jo
sbb
jno
mov
out
jno
shlb
pop
sbb
cltd
dec
sub
fstpl
out
imul
jne
aam
xor
out
dec
daa
or
sub
xor
xchg
lret
test
add
xchg
in
movl
in
repz
in
jp
cld
adc
aas
sbb
enter
xchg
dec
loop
insb
rcrb
adc
mov
addr16
mov
sbb
dec
mov
sbb
es
mov
jae
jg
xor
xor
das
jo
loope
cmpsl
pop
xor
negb
pop
jae
sarl
lret
imul
int3
stc
and
push
in
pop
xchg
jne
pop
xchg
fwait
jbe
mov
jbe
aas
insb
add
jg
lret
inc
xchg
das
xchg
test
mov
repnz
mov
cwtl
pop
stc
xchg
xchg
cmpsl
pushf
ljmp
adc
jmp
push
movsl
xchg
stos
loopne
mov
and
or
pop
sbb
in
or
cmpsb
xor
pusha
inc
mov
push
repnz
cmp
dec
push
inc
jne
or
out
pop
mov
adc
std
inc
xchg
das
cmpsl
add
call
rorb
les
sbb
lcall
push
gs
das
push
lods
sbb
mov
inc
inc
push
mov
je
push
inc
daa
cmp
add
sbb
sahf
and
xchg
dec
pop
pop
ljmp
sub
pop
pusha
pop
mov
xchg
mov
clc
jecxz
inc
loope
out
incl
fidivs
sbb
lret
stc
cwtl
mov
insb
dec
xchg
shrb
lock
aad
imul
sub
inc
sbb
jl
xchg
test
inc
xor
and
rclb
stos
lds
push
xlat
imul
mov
inc
int
rcrl
cld
xor
ret
call
lods
test
test
mov
sub
xchg
inc
sub
aam
add
fadd
and
imul
rcr
stos
xchg
int
in
mov
mov
mov
repz
rorb
sbb
sbb
addr16
fstpt
jo
xchg
cvtps2pi
insl
stos
test
cmpsb
pextrw
cmp
mov
mov
pop
rcll
arpl
inc
shll
cmpsl
fdivrs
bound
mov
fwait
in
xlat
cmp
sbb
fnstcw
mov
rolb
pop
es
dec
adc
shll
in
lahf
push
xchg
add
add
scas
insb
insl
xorb
outsb
ret
add
sub
jmp
pop
fldt
xchg
xchg
je
sub
jmp
insb
mov
xchg
mov
or
and
out
es
fbld
mov
xchg
insl
adc
shrb
aaa
pop
andb
mov
aaa
xlat
ljmp
or
mov
inc
in
ljmp
fcoms
and
inc
test
jge
call
repnz
int
and
xor
cmc
scas
mov
scas
xlat
ss
adc
push
lock
pop
hlt
les
enter
fidivl
fistl
mov
dec
xchg
push
aaa
xlat
out
xchg
xchg
scas
inc
pop
icebp
cmp
sbbb
xchg
mov
push
addb
scas
icebp
cmp
ja
rcll
mov
fistl
adc
pop
lds
xchg
adc
mov
mov
dec
push
das
mov
leave
outsl
mov
sar
shl
inc
stos
in
fcomip
js
adc
ffreep
hlt
imul
int3
sbb
mov
xor
dec
push
cs
leave
cli
cmp
adc
les
fbstp
lock
push
fstpt
xchg
push
daa
rorl
ss
scas
pop
sbb
rcrl
jmp
shlb
and
xlat
sbb
movsb
fistpl
mov
push
repz
jecxz
jmp
fstl
test
push
lahf
js
movsl
jg
pop
imul
dec
lcall
rcll
mov
aas
jae
mov
xchg
push
inc
dec
jmp
push
xchg
repnz
les
pop
fcmovnbe
mov
ficoml
fldt
rcrl
cmp
inc
das
loopne
sbbb
and
enter
push
mov
loop
ret
ss
push
lret
enter
mov
add
xlat
pop
adc
mov
icebp
popa
int
jo
mov
push
xor
frstor
es
dec
jg
jp
jmp
scas
sbb
into
and
push
out
push
jecxz
out
sbb
jno
movsb
into
or
jns
mov
sbbl
cmp
mov
lcall
push
imul
push
adc
pop
pop
ret
cli
neg
xchg
xlat
jb
cs
jle
mov
repnz
dec
int3
insl
rorl
mov
les
loop
inc
mov
aaa
xchg
es
nop
fldcw
icebp
fdivrl
and
adc
xchg
outsl
push
mov
inc
fidivl
adc
and
xchg
loope
ret
scas
push
cli
push
jo
inc
lret
sti
push
imul
pop
xor
pop
add
imul
inc
repz
pop
lret
test
and
mov
mov
imul
pop
imulb
loopne
xchg
add
sbb
roll
fdivrs
cmc
mov
pop
mov
pop
xchg
or
pop
jge
xor
xchg
ror
imul
xchg
inc
cmc
xchg
ret
sbb
test
out
loopne
imul
adc
aam
into
inc
fildll
mov
xlat
cmp
jle
xlat
sahf
call
push
xchg
lds
fsubrs
mov
mov
cld
pop
ror
insb
push
dec
mov
inc
test
or
ja
mov
ds
xor
scas
stos
stc
out
notl
pop
adc
cmpb
repz
iret
test
mov
xchg
inc
add
sar
xchg
mov
scas
jmp
and
add
pop
sub
ret
xchg
pop
in
fiaddl
lds
jle
out
divl
cltd
jns
xor
popa
sbb
jg
sub
aaa
push
js
add
mov
addb
pop
rorb
iret
mov
fbld
sarb
dec
icebp
repz
out
pop
xchg
cmpsl
and
es
inc
outsl
testl
imul
add
mov
sbb
sbb
mov
dec
pop
int3
cwtl
roll
mov
outsl
cs
cltd
sbb
test
jp
cltd
ret
mov
mov
int
ror
adcb
push
imul
xlat
int
inc
stos
mov
mov
inc
pop
xor
lock
in
add
xor
or
push
jp
loopne
cltd
cmpsl
xchg
inc
sarl
jmp
push
mov
shl
adc
sub
pop
ficoms
push
insl
in
lcall
adc
setno
cld
pop
fstpl
das
and
sbb
shl
movsl
push
xor
or
icebp
cmc
ret
jb
mov
lods
sbb
mov
lahf
pop
push
cmp
dec
add
inc
in
outsb
mov
inc
mov
mov
pop
rclb
arpl
orl
mov
repz
outsb
xchg
inc
stos
inc
fs
stc
loope
fistl
mov
shrl
or
mov
adc
lds
sbb
ja
rorl
mov
fadd
lret
xor
lods
bound
icebp
mov
lds
repnz
movsl
or
std
pop
push
inc
orb
cmpsb
fdivrp
lcall
jno
cltd
lock
xchg
add
shrb
push
insl
popf
out
xchg
add
xchg
dec
xor
in
inc
cmpsl
mov
xchg
xor
notl
jno
push
loope
jp
jmp
pop
pop
xchg
jo
push
sbb
xchg
inc
in
inc
shrl
cmpsl
sub
xchg
imul
pop
es
push
xchg
push
shll
mov
xchg
sub
imul
fs
lahf
xchg
fildl
xchg
cmp
out
pop
xchg
sbb
es
scas
sbb
addb
ret
mov
fcos
xchg
pop
mov
and
in
jmp
lahf
xchg
je
into
iret
ja
mov
mov
mov
pop
inc
xchg
loopne
sti
push
or
xchg
adc
mov
dec
lahf
cltd
inc
cmp
lahf
dec
cmpsl
inc
jl
mov
mov
xchg
push
and
mov
in
arpl
xlat
adc
cmpsb
ja
mov
xchg
testb
xor
push
xchg
cli
rol
test
icebp
inc
mov
cmpsl
or
negb
push
fucomip
add
pop
push
call
jbe
orb
enter
xor
iret
aad
je
es
imul
xchg
outsl
leave
push
adc
scas
jp
xchg
sarl
lret
mov
loope
sbb
shl
popf
movsb
lahf
or
popa
mov
push
rcrl
leave
cwtl
insl
xchg
hlt
lock
inc
jns
sub
cmp
mov
mov
dec
sbb
push
xchg
or
sbb
icebp
aam
cwtl
or
push
mov
aad
mov
push
cmpsl
lcall
sbb
xchg
cmp
jmp
mov
lcall
daa
loopne
insb
out
out
outsl
xchg
nop
mov
iret
pop
cmp
ret
fisubrl
dec
push
xchg
mulb
lods
fstps
sbb
xchg
shrb
and
in
fimull
int3
cmp
mov
fs
lcall
xchg
jb
ficoml
ds
mov
xchg
inc
sarl
fs
loop
addl
cli
cli
xchg
aad
icebp
inc
ficompl
imul
inc
out
pop
push
cmp
aam
lods
jne
add
cmc
bound
movsb
mov
push
mov
xchg
rcll
sarb
push
ss
shr
shl
ds
add
xchg
mov
or
sbb
mov
stc
sbb
xlat
fistpll
mov
ret
data16
lret
in
inc
iret
mov
jl
inc
mov
jg
dec
fidivrl
add
jg
jno
lret
lahf
adc
shll
sar
mov
es
jle
sti
push
or
cmpsl
and
mov
sub
test
mov
push
jp
cmpsl
jmp
loopne,pt
cld
push
lea
imul
cs
push
loope
cmp
jbe
xlat
sub
xor
mov
sub
add
mov
or
xchg
in
test
jmp
xchg
pushf
sti
inc
das
loopne
scas
jp
aad
scas
sbb
sbb
or
lret
jge
std
cli
fcmove
inc
dec
loope
mov
sub
jmp
dec
xlat
jmp
mov
icebp
in
fiaddl
jnp
fcmovbe
pop
fstps
fcompp
int3
dec
aad
js
rcr
jmp
cmpsl
cmp
ret
jl
std
rcll
xchg
or
and
les
jae
stc
cmpsl
int
inc
pop
and
xchg
shlb
ret
out
aaa
leave
dec
jmp
fcoms
xor
out
out
sub
jbe
ds
int3
xor
adc
mov
inc
fstl
ret
xchg
inc
hlt
fnstenv
jns
cli
sub
daa
addb
xlat
push
jnp
fcmovu
roll
inc
sub
xchg
sbb
xchg
adc
xchg
ss
es
in
lret
dec
rorb
inc
addr16
jp
stos
cmp
loope
pop
jecxz
sub
jmp
stos
in
sti
push
rcll
jnp
imul
add
xor
fistps
in
dec
xlat
addl
jbe
ret
and
lock
jge
inc
aaa
dec
loope
out
ss
mov
mov
dec
cmc
pop
xchg
ja
jb
mov
cmp
mov
and
ret
stos
nop
shll
xchg
inc
xor
push
lret
push
inc
movsl
out
std
shl
repz
lds
push
popa
fldenv
loopne
push
xchg
sub
shlb
sub
cltd
dec
shrl
in
xchg
iret
add
sub
pop
fimull
pop
mov
push
or
dec
leave
adc
mov
aad
test
cmc
stc
and
xor
test
mul
andl
push
adcb
dec
pop
xchg
dec
stc
nop
or
loop
adc
neg
jnp
inc
call
jo
out
push
in
bound
pop
mov
fwait
loop
mov
jo
xchg
xchg
xor
gs
jmp
mov
mov
xchg
push
repz
xlat
out
icebp
cmc
test
xchg
xchg
mov
jmp
shr
ljmp
cwtl
rorb
xchg
aad
push
push
sbb
lea
imul
cltd
cli
out
push
pop
notb
repnz
fidivrs
jns
imul
lods
sub
jbe
fwait
int3
xor
xlat
lcall
jg
inc
shll
aam
mov
lods
dec
and
jmp
shrl
mov
rcll
dec
add
mov
xchg
xchg
rol
xlat
jmp
enter
adc
repnz
adc
lods
aam
imul
mov
xchg
dec
mov
pop
inc
dec
ficoml
aas
je
push
pop
xchg
mov
ret
insl
fistpll
mov
fiaddl
mov
daa
push
sti
out
inc
jmp
xchg
sbb
xor
jbe
dec
cmp
or
xchg
or
mov
mov
and
mov
jl
popf
ret
xchg
adc
cmp
insl
cmpsl
pop
dec
push
pop
stos
je
cmc
cmp
jle
adc
xchg
subb
sbb
xchg
adc
fildl
push
jbe
into
repz
dec
mov
stc
fidivrl
mov
addr16
insl
outsl
fucomi
insb
xor
xlat
idivl
jb
mov
mov
test
inc
jmp
mov
mov
sub
dec
inc
call
es
adc
push
shrl
sub
icebp
cmp
ljmp
cli
fdivs
sub
pop
pop
cmpsb
mov
dec
lret
ja
rcrb
icebp
jge
js
je
jns
and
into
cmpsb
leave
mov
scas
dec
leave
dec
mov
mov
not
ja
pop
pop
adc
sub
ret
xor
jge
and
dec
fwait
inc
enter
inc
rclb
aas
xor
movsl
push
pop
xchg
dec
push
push
out
xchg
jne
in
cmpsl
inc
mov
xor
or
add
in
mov
mov
aad
aad
pop
test
xchg
and
jae
or
in
adc
fisubl
cmp
mov
dec
push
fadd
push
pop
aad
jae
fst
movb
mov
repnz
sti
jne
add
idivb
icebp
mov
mov
movsl
jnp
xlat
rclb
stos
pop
xor
xchg
mov
mov
cmp
lds
mov
repz
loopne
pop
mov
cmpsb
pop
push
jmp
iret
pop
push
mov
sti
out
xchg
notb
push
orb
and
js
es
push
cmpsl
fcoml
loope
es
rol
pop
dec
dec
imul
xchg
fimull
mov
cmp
repz
lcall
ret
mov
sbb
fcmovnb
leave
fs
mov
int
xchg
lds
cmp
outsb
inc
fisubs
movsb
in
mov
in
add
popa
mov
jbe
jne
fwait
mov
nop
xchg
sbb
lds
into
imul
pushf
mov
mov
test
mov
cmp
sarl
pop
inc
or
js
int
aaa
xchg
adc
xchg
int3
push
repnz
cmpsl
jne
lcall
movsb
loop
insl
cmp
xor
dec
lretw
fsubr
push
push
fisttpl
fdivrs
inc
jo
jp
stos
jge
sub
pop
push
dec
out
adc
mov
dec
dec
fcmovu
popf
xlat
sbb
filds
scas
lods
adc
push
push
fnstcw
aas
ret
jnp
es
sbb
dec
mov
rorl
aas
push
push
add
adc
test
sbb
sbb
sti
stc
fcoml
insl
add
or
adc
hlt
mov
lea
jno
adc
push
fnstenv
stc
fld
jg
jg
sbb
jae
xor
out
push
popa
fmul
outsl
pop
in
sbbl
add
push
cld
push
ja
test
mov
ffree
xchg
push
mov
enter
scas
xlat
or
cmpsb
inc
mulb
cmp
cwtl
push
push
pop
jp
adc
repz
mov
cmpsl
test
or
stos
lret
xchg
fistl
in
push
inc
push
mov
aam
insb
dec
push
pop
test
push
cli
cmc
push
mov
mov
inc
push
jmp
out
sbb
clc
adc
stos
jns
adc
pop
push
sub
sbbb
xchg
push
mov
jmp
mov
jge
rclb
lret
icebp
aas
and
shr
insl
jg
icebp
stc
repnz
imul
inc
sbb
xor
mov
mov
in
sbbl
mov
lods
es
vmwrite
lcall
repz
int
ja
jecxz
aad
fistps
imull
cmp
pop
pop
std
jge
es
sar
pop
xchg
fimuls
in
repnz
pop
xchg
push
cmp
jl
insl
cltd
repz
in
jg
into
pop
jl
in
mov
sbb
mov
into
jae
mov
div
mov
sub
mov
mov
icebp
icebp
dec
aas
ror
xlat
cli
jge
jmp
cmp
out
mov
xchg
add
push
inc
mov
add
mov
mov
js
in
stos
jge
ss
sbb
inc
xchg
outsb
loope
sbb
rorl
xor
inc
mov
inc
cs
repnz
pop
leave
icebp
push
sub
mov
push
daa
xorb
lea
jge
fwait
and
test
icebp
repnz
pop
pop
pop
popa
es
std
xor
add
cmpsl
andb
rclb
jno
lods
add
es
xchg
mov
inc
rcr
pop
add
fstl
mov
sbb
std
add
in
cmc
movsl
addr16
bound
xchg
jl
xchg
fisubrs
aam
mov
inc
push
popl
es
out
cld
aad
push
ret
repnz
mov
mov
clc
cmpsl
int3
add
push
daa
pushf
dec
push
rol
inc
push
push
adc
xor
xchg
adc
and
fildll
out
arpl
dec
xlat
inc
mov
sub
ja
mov
sahf
mov
xor
jmp
fwait
iret
out
js
push
add
jns
pushf
outsl
add
subl
mov
pop
mov
fistl
insl
cmp
inc
out
addr16
inc
fldcw
xchg
hlt
icebp
or
divb
rol
or
aas
test
push
ljmp
dec
loop
orb
insl
jmp
ret
mov
jmp
mov
into
out
sub
jns
mov
pop
inc
aad
add
filds
out
sbb
mov
imul
or
push
xlat
hlt
xor
sarl
xchg
imul
out
add
pop
or
xlat
cmpsl
rol
not
dec
xor
jmp
stos
push
cmpb
sbb
pushf
sbbl
lods
test
inc
fwait
jl
mov
mov
dec
stos
dec
je
testl
ret
js
xchg
pop
push
cli
inc
aad
push
sbb
data16
jp
int
shl
rolb
mov
leave
sbb
mov
or
jbe
xchg
xchg
shlb
push
push
add
mov
cmc
mov
cs
fnstenv
mov
sti
cs
jl
lods
test
rcrl
or
inc
bound
clc
popf
es
test
clc
mov
mov
rorl
and
aas
out
or
sub
push
les
and
cmpsl
jl
push
dec
cmpsb
xchg
lahf
inc
scas
push
cli
dec
loopne
cli
inc
je
js
push
sub
inc
mov
andl
shlb
test
inc
or
jmp
cld
pop
cwtl
mov
mov
jno
fcoms
inc
ja
jp
movb
clc
inc
push
jmp
fcompl
mov
fwait
add
push
ss
jle
mov
mov
fisttpl
movsb
mov
push
insb
loopne
or
popf
xchg
push
daa
mov
lods
repnz
mov
sub
adc
shlb
mov
dec
jb
dec
sahf
dec
adcb
xchg
dec
sub
inc
in
lds
stos
in
pop
dec
test
clc
xlat
mov
jbe
cmc
xor
jne
sbb
sbb
or
popf
push
in
dec
inc
dec
loop
lret
pop
cli
daa
xchg
inc
mov
xchg
jp
or
inc
sbb
es
pushf
inc
mov
lds
insb
cmp
test
mov
leave
cmpsl
lahf
xchg
fistl
jmp
jns
das
movsl
jmp
out
bound
imul
fnsave
xor
pop
addr16
stc
lock
jmp
popa
push
repnz
pop
push
xchg
push
mov
push
xlat
stc
sar
popa
in
fs
outsl
mov
repz
jmp
repnz
cmp
pop
js
fucomip
popa
push
fcomi
fs
js
mov
outsl
jns
push
rcl
push
push
jl
pop
aas
sbb
mov
lcallw
pop
inc
pop
out
jno
lret
xchg
push
cltd
rol
fwait
fwait
pusha
and
sub
add
repz
stc
repnz
loope
icebp
in
pop
jae
push
fs
rcrl
loopne
fcomi
in
shll
xchg
fdivrp
mov
push
push
lock
xor
pusha
lret
pop
aad
repz
ljmp
aad
jnp
repnz
push
jb
and
xchg
push
dec
repz
scas
mov
push
loopne
jae
gs
push
fistpll
stos
loope
shlb
sti
iret
sahf
xchg
push
shl
stc
dec
in
jbe
mov
arpl
lahf
sahf
sbb
jne
inc
stos
test
and
insb
add
push
push
dec
in
sti
leave
push
out
outsb
jl
fisttpl
push
jmp
xchg
mov
fprem
fwait
sbb
js
ret
sahf
push
mov
and
js
push
icebp
xchg
hlt
arpl
fwait
out
inc
push
aad
jb
in
lea
clc
sub
fwait
xchg
cltd
jmp
push
mov
cli
inc
cmp
loopne
xor
popa
mov
aam
lds
jns
jb
call
loop
xchg
data16
pushf
stc
sti
mov
daa
xsavec
adc
rol
cmpsl
fwait
mov
out
rcr
icebp
lret
or
adc
aam
inc
push
push
lret
fdivrs
out
and
lock
lret
mov
fistpl
xchg
lahf
push
fistps
dec
ja
xchg
mov
movsl
jae
or
imul
or
xlat
push
data16
jns
add
jecxz
cld
pop
ret
mov
xor
ja
mov
jne
frstor
xor
push
roll
mov
mov
rol
add
xchg
mov
ds
fwait
inc
sbb
cli
sbb
xchg
sbb
mov
test
xchg
mov
or
xchg
xchg
mov
inc
xor
out
adcl
adc
leave
movzwl
int
jns
rcrl
push
leave
sahf
sub
jbe
sub
cmp
mov
repz
sub
mov
stc
mov
fisttpll
testl
js
xchg
push
cmc
mov
mov
test
push
add
les
aad
mov
mov
in
andb
movsl
pushf
fs
rcrl
cmp
in
mov
cmovge
xor
sti
push
clc
push
mov
out
jae
stos
mov
xlat
scas
adc
mov
lahf
lahf
arpl
pop
aaa
mov
js
cld
dec
movsl
dec
test
test
add
rcrl
outsl
stos
jge
jne
rcrl
sbb
or
jae
pop
shll
pop
rorb
push
push
push
out
shlb
or
xor
aad
xlat
and
pop
mov
icebp
mov
psubusw
pop
aad
testl
iret
push
in
xchg
jge
nop
mov
int3
clc
push
ret
xlat
add
iret
loope
fstps
or
mov
enter
rolb
movsl
fbstp
inc
fwait
cmp
sub
xor
dec
adc
add
sbb
fnstsw
add
xlat
aam
jmp
popa
push
jns
outsb
fcmovnbe
add
xchg
push
push
adc
nop
loopne
mov
outsl
loope
mov
push
push
cli
push
cmpsb
xchg
rclb
push
sbb
mov
adc
stc
adc
shll
xchg
jmp
mov
shrl
jo
daa
xor
mov
icebp
cmp
mov
push
adc
pop
push
pop
pop
and
jecxz
add
xor
mov
int3
je
jecxz
cmp
ds
fwait
test
daa
inc
stos
adc
add
aad
pop
fistps
enter
je
mov
neg
ret
loope
xlat
cmpl
cmp
xchg
lds
icebp
fwait
negb
out
mov
iret
cltd
iret
andl
dec
xlat
mov
mov
mov
pop
push
mov
sub
mov
xlat
adc
push
into
mov
fs
cli
mov
adc
mov
jg
or
imul
sarl
cmpsl
in
sbb
pop
jp
cmp
lcall
pop
repz
and
lret
push
lds
out
ret
and
pusha
cmpsb
adc
cltd
loope
not
popf
lods
pop
std
jae
add
push
jmp
shr
push
push
pop
adc
pop
fists
xorl
filds
lock
testb
ds
sub
icebp
xchg
aad
add
add
add
adc
ret
mov
push
add
scas
cmc
out
loopne
pushf
inc
jecxz
mov
lret
pop
jecxz
mov
sbb
or
movsl
stos
dec
pop
scas
aad
and
mov
movsb
lds
ret
fildll
dec
fstl
test
mov
xchg
sub
cmc
ja
ret
sar
sub
inc
mov
frstor
xlat
ss
sbb
mov
xorb
jae
jmp
cs
lea
andl
jecxz
movl
ror
js
cmc
shlb
xchg
das
stos
xlat
xor
repz
bound
icebp
aad
xlat
xchg
xor
pop
fcmovnbe
pop
ret
rcl
ret
pop
fucomi
mov
mov
xchg
fmul
xlat
rcrl
test
repz
push
test
push
push
cmp
cmpsl
cltd
jl
in
lods
loope
fists
lahf
stos
repz
stc
stos
xor
xchg
xchg
stc
lcall
iret
mov
int
lods
nop
loopne
pop
xchg
psllw
xor
xor
inc
xchg
loopne
pop
popa
std
push
adcl
lods
inc
loopne
dec
adcl
push
orb
ja
push
xor
movsb
rorb
dec
push
cltd
cld
push
sar
cmpsl
repz
rorl
sbb
ret
push
repz
inc
fbld
push
test
jne
in
and
cmc
fstl
cmp
mov
mov
xor
bnd
test
mov
sub
hlt
ret
adc
push
xchg
sbb
mov
lea
dec
icebp
dec
int3
jae
in
test
xlat
cmp
sub
dec
dec
xchg
aad
bound
push
inc
sti
ret
aaa
aad
movsl
push
adc
jl
pop
es
inc
sti
xchg
scas
icebp
ret
scas
lods
pop
das
mov
sub
dec
jmp
imul
cmp
push
or
jae
imul
pop
aam
sub
jns
repz
fstpt
mov
xlat
jb
in
inc
clc
negb
adcb
gs
loopne
repz
loop
xchg
iret
inc
sub
push
inc
mov
cltd
subl
repnz
xchg
cwtl
test
and
and
dec
xchg
inc
mov
adc
aaa
or
out
ds
cld
cltd
aam
xchg
insl
jmp
fisttpl
imul
jb
mov
lock
mov
imul
xor
sbb
fistl
jbe
fisttps
push
cwtl
xlat
adc
and
ret
add
or
adc
cli
lahf
lcall
outsl
push
adcl
fistpl
dec
sub
adc
cmpsb
dec
push
mov
mov
sub
mov
ss
psrlq
mov
sub
mov
cs
or
mov
mov
idivl
icebp
lcall
push
cmp
or
loope
jp
add
rorl
mov
test
in
hlt
jae
lahf
mov
push
pop
xor
imul
lea
das
roll
sti
gs
repz
shlb
insb
mov
inc
sub
insb
movsl
push
dec
inc
add
popl
mov
lods
pop
pop
out
sub
xor
cmp
mov
in
out
faddl
das
mov
lods
sub
xchg
pop
cmp
ss
and
ret
xchg
movsb
push
sub
sbb
sbb
in
inc
iret
fcmovnu
xlat
mov
mov
aaa
cs
sar
iret
popa
pop
in
pusha
je
addr16
dec
hlt
arpl
sti
adc
jmp
repnz
arpl
arpl
out
jp
and
xchg
leave
xchg
push
data16
fdiv
cmc
addr16
leave
imul
repnz
imul
lock
out
push
arpl
arpl
scas
sbb
imul
and
cmc
jp
outsl
jl
int
jb
hlt
arpl
jg
icebp
mov
ds
aam
cmp
fs
sbb
imul
js
data16
ficomps
mov
push
shll
imul
fsubrp
in
js
jmp
cmp
or
push
jbe
js
inc
dec
fdivp
imulb
push
fmulp
cwtl
fcomp
xchg
lds
fcomps
pop
ret
loope
xchg
repnz
push
sub
or
mov
dec
fcomi
test
pop
inc
in
fs
movsl
xchg
jle
repnz
out
sub
fstpl
ret
loopne
iret
repnz
mov
fnstenv
pop
rorb
enter
xchg
mov
rcl
xlat
fldenv
fdivr
je
pop
mov
add
xor
mov
dec
icebp
inc
data16
and
mov
repnz
mov
fsin
in
es
pop
addr16
push
fistpll
iret
mov
mov
popf
movsb
adc
dec
paddsw
jmp
imul
fcmovnb
xchg
sbb
push
jmp
sub
xlat
insb
lods
ffree
sar
cmpsl
push
insb
stos
shll
inc
xchg
cmp
xchg
jae
jp
jl
jb
push
cli
popf
jno
ror
icebp
lods
lock
jns
stc
pop
mov
jne
bnd
lret
lret
jne
jae
lds
lock
mulb
mov
hlt
jo
mov
inc
divb
repnz
out
mov
repnz
dec
adc
pop
arpl
ja
jno
shl
jo
cmc
das
jo
and
jbe
push
in
xor
jbe
cwtl
negl
mov
js
loope
fistpll
jb
xchg
divl
jo
fwait
jecxz
insb
jns
jns
mov
es
ret
in
fiaddl
jp
repz
je
sti
sbb
imul
shl
pop
paddusw
imull
pop
dec
mov
fdivl
pop
cs
add
shll
add
adc
xchg
xchg
out
clc
cmpsl
insb
jbe
mov
inc
in
sub
inc
adc
fisttpl
xchg
jbe
push
cmc
fstp
cmpsb
imul
dec
lods
neg
xor
xchg
icebp
movsl
pop
xchg
pop
jb
adc
jg
pcmpgtd
cmpsl
jb
push
or
sbb
pop
scas
add
pop
mov
lods
cmc
mov
jecxz
imul
push
or
mov
rcll
dec
and
mov
sbbl
add
lcall
lock
mov
add
mov
add
jne
pushf
mov
add
xchg
sbb
mov
outsb
xorb
mov
lods
dec
rsm
pop
shr
shll
adc
dec
jge
or
jge
scas
push
insl
lret
jbe
cmpsb
lods
adc
cmp
mov
jl
mov
xor
push
inc
mov
xchg
and
sbb
xchg
dec
or
push
daa
insl
or
sbb
negl
data16
lcall
cs
mov
fistl
call
movsl
je
xchg
cmpsl
mov
push
mov
mov
cli
mov
inc
js
icebp
xlat
mov
repnz
cmpsb
mov
dec
sti
fucomip
aad
pop
icebp
inc
incb
mov
test
xlat
pop
or
cmpsb
in
pop
fistl
push
push
adc
push
iret
sub
sub
sbb
and
int3
popa
fld1
mov
pop
mov
push
mov
mov
dec
test
pop
push
jmp
mov
fwait
movsb
loopne
lret
or
cmpl
xchg
jb
ret
xchg
cmp
adc
mov
mov
imul
js
adc
outsl
test
int3
cmp
lock
xchg
iret
es
pop
scas
pop
inc
pop
mov
mov
aas
and
stos
mov
das
pushf
push
jmp
ljmp
push
push
mov
mov
pop
cmpsl
dec
in
inc
pop
xchg
ret
xchg
or
xchg
stos
sub
movsb
lea
inc
jnp
fsqrt
adc
sub
outsb
lods
jno
mov
hlt
jmp
mov
inc
xchg
sub
icebp
aas
sub
cmp
add
loope
pushf
jno
jmp
pop
lret
ss
movsb
mov
push
cmp
fsts
and
les
js
ja
push
cld
adc
std
loop
add
ret
mov
or
in
jno
sbb
adc
iret
dec
mov
cmc
jnp
sti
out
dec
cmc
push
mov
repz
mov
enter
inc
test
mov
stos
cmp
aaa
mov
mov
jle
and
hlt
add
lds
mov
mov
mul
lret
or
dec
sbb
pop
icebp
nop
push
jae
std
jl
push
sbb
add
xor
xchg
loope
addr16
test
sar
dec
mov
and
inc
xchg
mov
rcrl
mov
icebp
cmpsl
pop
push
jnp
out
pushf
andl
fldl
push
test
clc
inc
sbbl
fbld
mov
mov
sub
xchg
inc
popf
aas
movsb
mov
inc
pop
test
adc
in
fidivs
add
sbb
mov
and
jae
int
movsl
sub
lea
mov
loop
sub
sub
jmp
mov
pop
inc
movsb
adc
mov
push
mov
repz
rcrl
cmpsb
je
xchg
inc
fbld
mov
addr16
out
and
add
ss
and
repz
std
mov
inc
jo
lods
pop
lret
ud1
mov
das
lds
mov
xchg
fistl
cltd
lods
sbb
aad
adc
lds
es
inc
hlt
jle
xchg
cmpb
sbb
mov
lods
fistl
nop
sbb
inc
or
ja
mov
xchg
ret
dec
adcb
fldt
or
or
filds
aaa
lret
gs
pusha
lock
lret
aas
call
push
in
or
add
fstps
mov
cmp
xor
inc
xor
lds
mov
loop
sub
push
lds
fisttpll
imul
movsl
pop
sub
pop
stc
xorl
bound
push
mov
jmp
sbb
stos
cmp
leave
imul
es
dec
imulb
mov
aaa
outsb
mov
rolb
mov
in
je
or
enter
lds
dec
fst
mov
shr
fsts
fcmovnu
dec
stos
mov
push
inc
ret
sbb
push
adc
bound
ret
test
jmp
pop
mov
cmpsb
xchg
iret
stos
jg
jp
pop
pop
ret
pop
into
jnp
dec
fcmovbe
int
pop
scas
cltd
xchg
pop
rorb
sub
loop
add
mov
scas
mov
ret
iret
xchg
lcall
inc
xchg
or
dec
inc
leave
push
lods
sbbl
insl
ja
das
inc
icebp
fnclex
dec
icebp
sbb
lock
inc
out
or
adc
shr
add
cmp
and
sbb
pop
xchg
dec
push
xor
and
shr
dec
add
mov
call
xchg
push
lock
idivl
fcmovnu
and
push
repnz
jno
fisubl
lahf
inc
pusha
lds
cs
mov
xchg
sbb
out
xor
aaa
xchg
pop
cmpsl
stc
xchg
xlat
mov
fisubs
repz
cli
or
push
xlat
cmp
mov
aam
enter
cwtl
shrb
insl
fcmovnu
cmpsl
jne
lods
xchg
cld
hlt
aad
loopne
rorb
cmp
addr16
cwtl
xlat
mull
add
fldcw
or
rorb
outsl
leave
shll
pop
push
jne
xor
std
pop
xchg
sbb
inc
push
pop
lds
mov
xor
stos
mov
rclb
movsl
lods
push
lea
jge
lret
shll
xchg
sbb
out
fisubl
mov
popa
push
leave
fcmovnbe
mov
mov
inc
sti
ret
int
int
icebp
loop
iret
lods
adc
lea
mov
js
dec
shr
rcrb
jmp
push
test
mov
into
fldcw
sti
push
xchg
repnz
adc
fimull
test
cmp
mov
jle
or
push
and
lahf
loop
rcll
lret
adc
fstpl
pop
sti
xchg
lahf
add
mov
sub
adcl
xchg
xchg
ljmp
emms
xchg
fbstp
xor
or
int
mov
test
stc
xchg
jmp
ja
push
cmp
or
xor
faddl
cli
mov
jg
cli
pusha
stc
xlat
icebp
mov
and
adc
imul
and
dec
ret
ret
scas
out
push
or
js
pop
je
fadds
jb
lods
and
js
cmp
fs
mov
cmp
push
inc
mov
jg
incl
es
cltd
jb
mov
mov
ret
outsb
stc
adc
xor
clc
repnz
scas
fwait
popf
jmp
test
stos
sbb
add
push
popf
adc
sbb
inc
test
xlat
pushf
add
push
lret
mov
jns
or
xchg
xlat
addl
xor
shlb
aaa
sbb
jge
inc
jae
ret
sti
jno
call
sub
fidivrl
jp
jo
xchg
xchg
ja
lds
inc
xchg
ret
inc
data16
xchg
fisttpll
outsb
sti
test
mov
jns
cwtl
inc
mov
push
jnp
repnz
in
xor
dec
add
jl
xchg
daa
lahf
inc
aad
xchg
fildl
out
sub
or
sub
icebp
jns
loope
aad
adc
push
repnz
fldenv
xlat
xchg
inc
leave
mov
sbb
xor
xor
inc
push
push
aam
lods
inc
pushf
fdecstp
cmpsl
decl
mov
xchg
divl
xchg
in
shll
jg
loopne
xorb
out
xchg
andl
lret
enter
inc
push
ss
call
push
adc
jp
or
xor
or
repz
jb
cmp
mov
testl
xchg
jp
into
xchg
jmp
je
shr
nop
sbb
cmpl
out
xchg
shlb
pusha
aam
dec
add
jge
sti
mov
dec
stos
jmp
inc
xchg
cmpsl
daa
sub
or
lods
lahf
stc
pop
jb
filds
ret
xlat
lods
push
jmp
push
jecxz
adc
outsl
ja
aaa
jnp
es
stos
xchg
push
xlat
sub
ret
or
sbb
sbb
jp
sub
lods
cwtl
insl
arpl
adc
jno
mov
loop
icebp
cmp
pop
mov
nop
mov
je
add
mov
rcrl
aad
nop
icebp
lcall
sbb
mov
push
ret
leave
test
xchg
fld
test
repz
sub
inc
or
popf
leave
jnp
test
out
inc
lds
mov
pop
inc
mov
test
jb
popa
sub
jge
xchg
xchg
inc
cmp
sbb
and
rcl
sub
out
mov
jo
stc
rclb
or
add
aas
ret
xor
adc
nop
lcall
test
fucomip
pop
rcrl
sbb
ret
mov
add
lret
aaa
sub
scas
xchg
stos
xchg
int3
and
fbstp
rcl
ja
mov
jl
fyl2xp1
aad
mov
callw
fucomi
enter
scas
icebp
sub
cmpsl
lahf
mov
xchg
pop
and
cltd
lret
push
sbbb
xchg
dec
mov
push
add
or
pop
cmc
outsl
sbb
shll
mov
jp
scas
push
cmp
mov
sub
fstps
jne
xchg
inc
adc
inc
sti
pinsrw
fadds
jo
out
sbb
pop
es
fiaddl
lods
sub
mov
ret
jae
xor
push
fisubl
rcll
sbb
or
mov
out
cmp
inc
mov
cli
cmp
push
push
xchg
sub
sub
jle
ficoms
dec
stos
es
adc
pop
dec
mov
cmp
pop
or
adc
leave
xlat
shrb
pusha
dec
dec
and
inc
cmpl
enter
xchg
inc
push
enter
xchg
inc
jmp
loopne
xchg
and
lcall
mov
ss
ret
mov
or
out
neg
cmc
jg
jae
jnp
jp
ja
inc
inc
in
clc
fstpl
add
xchg
mov
xchg
std
repnz
nop
test
dec
leave
insl
pop
rcrl
add
and
loopne
mov
aad
fiaddl
push
cld
loope
cmp
mov
sbbb
cmp
sub
ja
test
sbb
jo
xor
fistpll
cmp
jle
das
mov
sub
cmc
push
lret
adc
adc
lds
cmp
lea
imul
adc
xchg
adc
loopne
or
and
fcmovnb
cmp
jl
neg
mov
popl
xchg
cmc
sbb
lcall
icebp
rol
lds
je
fsubl
adc
addr16
cmpb
xchg
push
sarl
idivl
xlat
pushf
imul
inc
stos
xchg
xlat
aad
sti
clc
jp
or
sub
sub
fadds
out
pop
xlat
fldenv
fnstsw
pminub
mov
inc
out
pop
dec
push
add
lret
lret
push
cli
leave
inc
ficoml
sbbb
sub
icebp
mov
ds
sti
fcomps
xchg
mov
frstor
fwait
adc
mov
xchg
jge
jp
pop
add
lock
xchg
xchg
icebp
jmp
mov
stos
jle
test
test
insb
shll
out
push
leave
mov
bound
cmp
pop
mov
shll
add
sbb
aad
rclb
xchg
jg
insl
aad
aad
adc
push
push
insb
push
mov
mov
jo
into
or
sbb
dec
shll
in
shlb
xchg
mov
ja
rcr
xchg
cwtl
test
and
jae
imul
inc
shrl
pop
mov
dec
inc
cli
push
pop
xchg
repz
sub
push
jo
popf
mov
stos
or
jne,pn
push
cmpsl
outsl
arpl
dec
mov
dec
inc
lds
fnsetpm(287
xchg
push
shlb
ja
push
stos
es
jp
fldl
xor
and
xlat
mov
dec
daa
js
iret
mov
xor
jo
rclb
icebp
scas
fildl
pop
movaps
sbb
xchg
sbbb
daa
pop
fldenv
cmp
lcall
ficoml
fistl
xchg
pusha
adc
xchg
xlat
rorb
inc
or
aaa
xchg
cmc
mov
in
xchg
lea
pop
rcrl
adc
repz
adc
mov
fsub
lock
lret
fstps
jecxz
es
cmpb
repz
orb
xchg
inc
aaa
fidivl
and
ljmp
scas
xchg
jns
loope
lds
ja
bound
rcrl
icebp
scas
das
pop
scas
rcrb
adc
adc
in
inc
mov
aas
cmpsl
out
dec
add
jb
push
and
mov
push
popa
xor
add
imul
inc
addr16
mov
adcl
fisubrs
sbb
sub
jmp
pop
fdivrl
add
jae
jae
iret
sub
loopne
rcl
jae
loopne
sbb
cmc
rclb
mov
dec
adc
and
enter
ja
in
rcl
inc
xlat
add
ficoml
mov
and
mov
mov
sarb
lods
std
jne
shlb
divl
and
leave
aaa
jnp
into
subl
repz
stc
out
out
jp
hlt
push
push
inc
jg
push
inc
adc
into
insl
push
jno
or
ret
jp
push
mov
imul
or
cmp
xlat
and
xor
jno
xchg
sub
les
sti
out
pop
dec
repnz
fmul
aam
xchg
ja
inc
pop
jns
adc
pop
or
sub
rcrl
scas
mov
clc
movsl
mov
js
xchg
push
and
loope
jecxz
mov
stos
mov
cmpb
sub
clc
xlat
fbstp
imull
push
sbb
cmc
out
push
sbb
and
mov
ja
inc
pushl
mov
add
ret
shlb
pop
ret
fisttpl
jge
jp
or
push
fisttpl
push
adc
out
mov
bound
xlat
adc
neg
mov
mov
xlat
fs
ja
test
scas
cwtl
push
sbb
xor
popf
std
mov
fidivl
xchg
movsb
sub
dec
inc
mov
ds
push
or
mov
inc
enter
add
lock
js
jo
pop
dec
dec
mov
pushf
jne
mov
int
adc
aaa
in
shll
cli
repnz
mov
add
pop
insb
push
aam
in
pushf
aam
scas
or
xor
mov
mov
cmc
hlt
ror
push
cmpsl
mov
cmp
shrl
cltd
jne
in
xor
push
push
jecxz
imul
xchg
cwtl
xlat
fwait
dec
scas
aad
push
adc
add
push
andl
pusha
jp
sti
das
ret
jecxz
xchg
jae
mov
dec
test
icebp
out
sarl
mov
push
dec
adc
push
add
mov
call
fstpt
aad
adc
mov
fistpll
loop
mov
mov
sbb
les
out
pop
mov
xor
jb
inc
mov
inc
fistpll
icebp
mov
repnz
inc
mov
fcompl
fnstenv
jne
dec
pop
cmpsl
inc
and
sti
pop
dec
imul
jns
mov
mov
pop
out
cmpsb
pop
or
lods
push
jp
bound
cmp
dec
sti
jnp
movsl
push
mov
loopne
push
cmp
div
sti
jge
lods
cmp
xchg
data16
test
arpl
fwait
mov
repz
jae
faddl
loope
popf
adc
lahf
shll
jno
pop
jnp
mov
dec
gs
jns
cmp
push
lret
cli
sahf
icebp
mov
insl
mov
sub
icebp
jecxz
std
push
clc
data16
add
adcl
loope
dec
inc
js
and
movsb
xchg
aad
push
push
adc
add
mov
xlat
xor
scas
mov
insl
stos
xchg
test
cmp
fwait
into
mov
rorl
mulb
stc
xlat
xchg
mov
movsl
icebp
fwait
cmpsb
adc
cmp
push
lret
aad
test
sbb
shl
daa
mov
in
test
loop
stos
mov
loope
stc
dec
rcr
out
mov
cmp
xchg
cmc
dec
xchg
push
repz
fbld
add
pop
sbb
and
es
es
mov
dec
adc
inc
fcoms
pop
lret
rcll
mov
add
testl
push
jae
pop
es
xor
jl
clc
ret
xlat
sahf
lds
ret
xchg
jb
push
popa
cmp
xchg
test
jne
pop
outsl
int3
ret
dec
push
shrl
mov
lock
jp
call
lret
xlat
mov
pop
jbe
add
mov
stc
ficompl
jne
lcall
mov
mov
xor
pop
bound
add
push
outsl
inc
inc
rclb
pop
push
es
mov
aad
mov
fwait
out
scas
mov
push
xchg
xchg
mov
sbb
jnp
jg
movsl
sbb
adc
lcall
int
sbb
ret
lret
jp
xchg
xchg
mov
pop
push
inc
adc
sbb
dec
int
push
fadds
mov
push
xchg
es
fmuls
and
orl
jae
mov
cwtl
inc
push
fwait
cmpl
movsb
inc
dec
gs
loope
test
sbbb
push
je
adc
test
mov
mov
scas
cltd
sub
mov
pop
mov
add
mov
mov
jecxz,pt
je
das
bound
mull
idivb
push
push
lcall
mov
pop
xchg
cmpl
shlb
lea
fcoms
adc
stos
fiaddl
popf
testb
jno
mov
mov
rclb
lds
mov
rcll
xchg
add
mov
lret
or
scas
test
add
xchg
mov
in
imul
std
sub
push
aaa
mov
test
insl
js
push
ret
mov
test
stos
lcall
pop
imul
push
xchg
lods
push
sbb
push
stos
push
mov
jae
arpl
mov
in
js
imul
mov
movsb
pop
inc
out
in
shr
xchg
cs
or
into
jecxz
pop
repz
push
mov
jnp
push
fcomi
enter
fwait
iret
ret
inc
dec
imul
nop
sub
dec
cmp
push
cmp
sbb
scas
fimull
test
repnz
push
push
sub
cmp
lret
and
jns
cmpsl
adc
sbb
cmp
inc
sub
ljmp
mov
in
inc
cmp
adc
sub
dec
sub
les
imul
test
sub
inc
imul
mov
xor
pop
xor
dec
pop
ljmp
mov
mov
icebp
test
jbe
test
sahf
mov
loope
pop
int
cmpsl
sti
loop
leave
lret
cmp
imul
mov
stos
mov
and
push
cmpsl
test
xchg
leave
gs
dec
cltd
sarl
mov
xchg
sbb
push
sbbb
and
fsubs
test
inc
movsl
test
addl
add
jns
stos
repnz
adcb
jp
fldcw
stc
jge
stos
fidivrs
mov
loop
pop
pop
cld
in
and
fists
fucomi
ss
xor
jnp
mov
sub
popa
cld
inc
xchg
int3
sbbb
lds
repnz
fadds
cmp
scas
adc
pop
push
mov
jmp
movsb
push
enter
out
call
mov
imul
popa
jae
ljmp
push
ljmp
sbb
push
aas
iret
sbb
hlt
cs
xchg
xchg
and
pop
mov
ss
cmpsb
dec
sub
ret
daa
cltd
and
fiaddl
adc
loop,pn
xchg
push
sti
scas
scas
add
out
adc
mov
mov
pop
fld
outsl
scas
repnz
loope
shlb
add
test
aaa
insl
inc
mov
frstor
pusha
stos
cltd
test
mov
fisttps
inc
adc
push
cmpsl
adcl
and
ss
fwait
lds
loopne
aad
popa
mov
bound
loop
jmp
mov
sbb
lret
or
insb
shr
pop
jno
sub
jg
cld
ficompl
cld
sub
aad
div
int
imul
out
jge
leave
fsubs
or
in
mov
stc
cwtl
dec
push
je
push
icebp
je
jp
mov
jle
imul
adc
jg
fdivs
mov
fisttps
xlat
leave
pop
push
fiadds
sti
lret
sbb
sub
out
xchg
cwtl
inc
inc
clc
mov
push
ficompl
or
jecxz
adc
cmp
cltd
jb
adc
xchg
cs
dec
sub
sub
lret
adc
leave
inc
in
add
mov
pop
jnp
fisubrl
inc
mov
and
imul
jb
loop
ss
sbb
jp
int
pusha
fldenv
jecxz
fistpll
jb
addr16
fs
ljmp
xchg
adc
insl
outsb
cwtl
sarl
loop
xor
xchg
cld
push
mov
loopne
mov
icebp
data16
xchg
aam
decb
adc
xchg
je
movsl
repz
adc
imul
mov
jae
sbb
into
dec
or
cltd
sub
cmp
mov
popl
jbe
out
cwtl
call
pop
daa
sub
jg
dec
jne
adc
daa
push
inc
out
inc
popa
int
add
jno
cmp
inc
xchg
cwtl
dec
push
scas
imul
lds
mov
cmp
jp
pop
lcall
int
add
dec
mov
lods
jmp
outsb
jno
mov
jae
push
xchg
out
fldt
push
jns
sbb
dec
xchg
xchg
push
cli
sbb
fildl
adc
fucomp
in
cmp
adc
shrd
cmpsl
pusha
data16
jns
cmp
pop
push
lods
jp
xor
je
repnz
lods
jmp
xlat
mov
xchg
imul
mov
out
inc
sti
idivl
int
jbe
xchg
loop
icebp
xlat
mov
pop
andb
adc
in
sbbb
sbb
rcrl
add
jb
cmp
fwait
cmp
sbb
ja
ret
sbb
xchg
xchg
inc
xchg
cmp
and
pop
fsincos
std
cwtl
dec
xchg
shrl
pop
push
mov
pop
jle
xchg
sub
sahf
lock
cmpsb
mov
adc
adc
aad
xor
fists
push
jno
inc
or
icebp
scas
sbb
aam
cmp
cmpsl
xchg
dec
negb
shrb
add
cli
sub
cmpsb
ja
mov
andl
inc
ljmp
cmp
divb
sbb
scas
in
xchg
fwait
das
cli
lret
sbb
xchg
ret
cmp
imul
test
xchg
inc
jl
inc
test
test
ss
xor
mov
jecxz
mov
iret
cmpsl
mov
mov
in
lods
mov
push
lods
into
test
hlt
fiadds
sub
lcall
ds
xchg
lahf
fists
or
mov
mov
and
pop
lea
outsl
es
loop
mov
pop
insb
lea
push
push
pop
cltd
outsl
leave
cmp
std
into
stos
xor
xchg
mov
fstp
xchg
das
mov
test
addr16
icebp
rcl
addr16
iret
inc
add
adc
lea
incb
notb
call
xchg
jne
jp
push
sub
adc
test
jns
adc
pop
jae
mov
sbb
shlb
pop
xchg
int3
out
icebp
cmp
stos
vpxor
addl
stos
ret
mov
out
fstps
pop
loop
outsl
js
outsl
inc
mov
rorb
int
and
push
cmpsl
mov
adc
dec
fsubp
push
xor
push
cmpsl
and
pop
mov
dec
cmc
mov
insl
push
pop
sbb
mov
mov
lahf
repz
lock
mov
jmp
mov
fnstcw
push
push
shlb
hlt
repnz
dec
addb
aam
jmp
gs
jb
lea
xchg
jbe
adc
shlb
aas
push
ja
inc
rolb
mov
cwtl
push
dec
cmpsl
sub
pop
jl
mov
aam
add
pop
pop
aaa
loopne
pop
xor
shl
aas
ret
std
test
push
lahf
popf
jno
sub
jae
or
adc
and
clc
sarl
imul
call
push
xlat
inc
mov
ljmp
aad
add
lock
jbe
sub
call
mov
out
pop
sbb
shrl
pop
out
add
out
add
jo
sbb
loopne
aam
pop
jp
xchg
repz
pop
shl
mov
jno
imul
frndint
push
sub
mov
push
inc
adc
pop
jb
jge
add
loop
insl
xor
inc
mov
cmpsb
cwtl
jae
push
fidivs
pop
sbb
inc
ljmp
dec
ret
mov
stc
loop
jo
out
mov
jno
enter
mov
sub
sbb
xchg
ds
jns
aam
mov
xchg
xchg
popa
push
cltd
mov
jp
ret
inc
stc
jae
sbb
je
jle
loopne
add
adc
dec
decl
dec
stc
out
xchg
stos
repz
leave
fsubrs
fcmovnb
mov
shll
dec
movsl
push
jmp
fmuls
jle
xchg
sarl
fneni(8087
aad
shr
js
shll
cltd
add
lods
xchg
adc
rclb
clc
imul
xchg
mov
cmp
jg
sti
clc
das
mov
mov
xorb
test
lods
cld
ds
stos
xchg
add
movsl
fstl
cmc
aad
mov
mov
stos
add
fistps
cli
ss
pop
push
push
mov
ds
repnz
and
cs
pop
or
adc
inc
mov
pop
insb
push
ss
shll
jne
scas
pop
icebp
rcll
jp
ljmp
sbb
js
in
fidivrl
jl
repnz
inc
sti
stos
es
subb
pushf
sbb
mov
adc
rcrl
movsb
inc
sbb
lods
loopne
jge
lods
cwtl
jp
ljmp
insb
xchg
test
shrb
sbb
ret
pop
jno
lock
sarl
mov
hlt
loop
in
cld
movl
adc
cmpsl
call
mov
xchg
or
mov
push
mov
in
lret
rorl
mov
xlat
sub
mov
inc
or
jno
push
decb
fimull
ljmp
and
jns
mov
cmpsl
dec
loop
jno
sub
xor
add
mov
cwtl
outsb
xchg
cmp
mov
loop
mov
mov
imul
stos
and
dec
mov
andb
scas
fmuls
aas
clc
inc
cmpsb
xchg
push
push
testb
mov
mov
inc
jno
xchg
insb
mul
and
sbb
sti
dec
loopne
or
cmpsl
xlat
jns
inc
mov
xlat
jle
ret
pop
sbb
mov
in
mov
xlat
pop
mov
scas
mov
mov
movsb
jl
loopne
push
fdiv
shlb
mov
sub
sbb
in
fbld
aas
jecxz
mov
aad
mov
inc
sbb
xlat
stc
mov
xchg
jns
mov
inc
out
sub
adc
pushf
jecxz
insb
pop
out
push
xchg
add
mov
xchg
jl
lds
jb
mov
cltd
pause
push
insb
fmuls
cmp
push
imul
loope
dec
loope
lods
xchg
jo
insl
ret
imul
outsb
fldt
call
mov
les
loopne
jmp
xchg
in
xor
cmp
mov
je
mov
jo
cld
lods
push
lret
out
je
idiv
fstpt
es
ret
cli
cmpsl
push
jae
mov
mov
repz
clc
mov
push
inc
cmp
fisubs
iret
out
jp
clc
js
xor
jo
xchg
dec
jmp
jmp
push
jnp
dec
movsb
mov
int
or
fstl
aad
and
adc
sbb
mov
repz
stc
xlat
xorl
stos
and
stos
outsl
js
imul
pusha
xchg
pop
inc
fwait
adc
call
xlat
cmp
loopne
jnp
inc
test
test
std
pop
pop
leave
xchg
mov
les
scas
pop
lahf
out
xor
push
in
mul
imul
lock
mov
stos
mov
fisttpl
mov
loopne
lahf
xor
xlat
call
pop
push
ret
push
iret
sub
mov
movl
in
lods
jbe
or
fwait
cmpsl
test
dec
xchg
in
lds
push
pop
mov
data16
stos
xchg
inc
fld
mov
sbb
jecxz
hlt
jle
jmp
test
jl
lods
push
subl
xchg
sahf
mov
cmpsl
and
sub
sub
ret
inc
pop
xchg
mov
cmpsb
jmp
adc
sub
cmc
push
leave
nopl
xchg
push
clc
fnstcw
mov
xchg
lds
mov
push
fcomps
inc
fistps
pop
lahf
inc
insl
loopne
mov
jnp
pop
rcll
fldt
std
pop
jbe
sbb
rolb
ret
fcomi
cmpxchg
popa
pop
stos
scas
mov
rep
notb
or
dec
mov
lock
icebp
jb
xchg
adcl
inc
hlt
pop
loope
shl
dec
pop
push
repnz
pop
xchg
cli
inc
xor
mov
subb
cmc
ljmp
out
or
out
jae
repz
outsl
popf
loope
cli
lea
aam
scas
mov
add
push
dec
xchg
sub
push
inc
cmp
int
repnz
popf
cli
lods
sub
dec
add
mov
jbe
ss
fimull
popf
popa
inc
lcall
xchg
out
cmp
mov
pop
out
inc
rcl
insb
mov
loopne
lods
dec
sub
std
fwait
sti
mov
clc
lods
hlt
orl
pop
movsl
sti
repz
push
sbb
pop
cmpsl
shl
push
mov
adc
jbe
mov
add
ljmp
pop
mov
jo
shrl
adc
dec
in
jg
xchg
jl
mov
arpl
jbe
jo
shlb
repnz
cwtl
fdivrl
sbb
inc
jl
xlat
shr
je
jne
mov
std
shlb
dec
adc
inc
jl
inc
jbe
mov
out
repnz
cli
lock
das
loope
lods
adc
or
jno
es
cmp
lock
rol
xlat
dec
mov
imul
js
in
add
imulb
rol
data16
mov
adc
push
mov
adc
data16
cmpsl
adc
mov
and
sub
mov
and
xchg
nop
js
mov
push
icebp
scas
into
test
push
std
cmpb
cld
xlat
mov
ret
jecxz
push
out
std
pop
sete
lcall
lods
aas
icebp
jns
nop
jp
add
cmp
sub
out
int
jbe
mov
ficoml
ss
test
in
cmp
fwait
add
pushl
inc
fcmovu
mov
inc
mov
push
jmp
xor
rol
rcl
cmpsl
leave
mov
fstl
push
mov
inc
mov
xlat
mov
push
clc
add
repnz
imul
lds
pop
pop
lock
mov
xchg
dec
inc
jecxz
and
fsubp
mov
fsubs
inc
and
enter
mov
lea
jg
fs
fmul
pushl
jmp
adc
test
lret
cmpsl
out
loopne
cli
add
addr16
call
out
fildll
hlt
iret
cmp
cmp
mov
dec
cli
loope
in
mov
in
scas
lods
in
mov
push
fisubrl
movsb
iret
xlat
jb
xlat
stc
dec
movsb
fldenv
jmp
lods
mov
jbe
xor
pop
in
adc
and
repz
xlat
add
sub
cs
mov
pushf
xchg
loopne
fsubrl
xlat
mov
sbb
sti
sbb
mov
mov
and
shr
pop
inc
into
in
mov
dec
subb
mov
or
idiv
jp
icebp
mov
in
jmp
lods
xchg
stos
sti
fidivs
pop
push
pop
dec
push
int3
xchg
sub
in
cmp
test
es
shr
in
mov
inc
int
dec
sti
rorb
xor
ret
aam
icebp
mov
pop
ret
lret
es
dec
ret
imul
mov
shlb
add
or
push
sbb
icebp
mov
icebp
ret
fists
lret
dec
rcr
rcr
icebp
xlat
sub
into
xchg
stc
cs
lret
mov
dec
sub
stc
out
fmul
xchg
adc
mov
mov
push
xor
mov
icebp
cmp
dec
inc
mov
push
ja
ret
xchg
push
pop
loopne
sbb
fisubrl
shrb
ja
pop
push
pop
repz
mov
daa
jnp,pn
ret
xor
lret
inc
pop
icebp
ret
fwait
xchg
sbb
clc
and
aam
pop
ja
loopne
rcll
push
cwtl
rclb
out
idiv
pop
add
hlt
mov
inc
jno
movsb
xor
fbld
scas
into
aas
pop
out
dec
mov
fcmovbe
ret
pop
xlat
jne
inc
popf
out
sub
popa
push
and
pop
stc
rcrb
aad
mov
and
pop
adc
sub
dec
shll
mov
jmp
repz
mov
fcoml
aas
es
sti
fwait
jle
mov
sti
inc
jecxz
cli
pop
pushl
icebp
rorb
iret
es
lea
aad
or
sti
repnz
imul
loop
or
lcall
adc
ret
add
and
pop
pop
cmpsl
push
jnp
mov
pop
pop
lods
sub
jg
push
mov
cmpsl
rorl
fimuls
insl
lret
icebp
jbe
sbb
js
jbe
or
ret
pusha
add
jle
call
dec
mov
xor
ret
mov
pop
jl
scas
popf
fs
ja
mov
ret
fidivrl
imul
scas
addb
leave
sahf
adc
mov
repz
jb
pop
repnz
ds
mov
mov
mov
aad
mov
mov
out
iret
or
out
sbb
jbe
or
lret
out
out
lods
jne
fnsave
or
xchg
fs
pop
fcom
jnp
loop
pop
dec
dec
arpl
ficomps
lret
lea
push
pop
flds
jno
mov
int3
loope
ret
pop
mov
rorb
lret
jae
es
out
loop
sub
sub
or
jae
rolb
lea
pop
aaa
fisubl
test
inc
stos
mov
fldcw
cmp
fimuls
mov
cmp
add
xchg
iret
mov
xchg
pop
inc
mov
fbstp
add
fsubrp
pop
mov
jne
add
adc
ret
xchg
aad
sub
pop
into
iret
adc
mov
mov
bnd
pop
dec
cli
cs
dec
loopne
clc
lock
push
xor
shll
push
icebp
and
push
lahf
std
pop
imul
icebp
ret
std
arpl
daa
bound
or
mov
stos
adc
pusha
cmp
jno
ja
jmp
movsb
cli
leave
mov
stos
jns
cmpsl
imul
adc
cmp
add
push
sub
lock
test
popf
lret
aad
nop
inc
loopne
popl
insl
pop
imul
je
mov
call
out
inc
mov
xlat
notb
lods
mov
mov
jno
jg
xchg
clc
in
jno
insb
cmp
xchg
test
ja
ret
lret
shl
jle
push
jne
xchg
jge
lahf
jge
cltd
dec
ret
dec
mov
add
aam
lret
repz
pop
imul
or
outsl
daa
sub
mov
ss
push
movb
push
bound
inc
cmp
outsb
mov
enter
mov
mov
imull
dec
mov
mov
fcmovnb
int3
mov
bound
jno
pop
sahf
sub
adc
js
pop
add
test
outsb
sub
pop
clc
imul
clc
jbe
ja
rcl
jmp
xor
iret
inc
ret
inc
jecxz
bound
out
mov
pop
inc
jbe
ret
out
push
fstp
push
ljmp
lret
fdiv
mov
add
popf
fisubl
out
mov
inc
jo
into
add
xor
dec
jle
ret
fistpl
mov
xchg
dec
out
imul
adc
or
cld
dec
mov
cld
aam
sub
cmpsl
or
jle
je
vpaddq
inc
dec
sub
lds
jl
call
pop
aad
je
pop
inc
xor
mov
loop
inc
sub
ret
out
cld
cmp
mov
repz
cmc
bound
push
sub
repnz
jg
fsubs
outsl
push
mov
lods
xchg
stos
inc
xor
xchg
dec
aad
leave
test
mov
pop
clc
test
and
xlat
jae
pop
pop
mov
fcmovbe
push
mov
lock
sbb
arpl
sub
xchg
fidivs
data16
insb
jle
push
es
mov
lods
adc
inc
adc
mov
mulps
sbb
ss
into
sbb
and
xlat
flds
imul
icebp
cs
test
inc
xorl
sbb
lret
sub
pop
lods
lret
pop
jmp
jl
enter
inc
xlat
cmp
idiv
sub
pop
push
mov
movsl
and
cmp
add
add
pop
lret
iret
mov
mov
cmpsl
xor
xchg
mov
repz
out
dec
mov
loope
imul
dec
shll
icebp
insl
xchg
mov
mov
pop
out
pop
push
clc
in
cld
mov
shl
fidivs
jne
fldenv
and
and
popa
cmp
test
idiv
test
iret
jg
decb
test
lds
cli
cld
lcall
mov
inc
xor
aaa
scas
cmp
cltd
in
fcmovb
and
adc
inc
test
repnz
ret
jp
es
mov
aam
cmp
push
xchg
or
push
fdivs
pop
int
scas
fisttps
clc
xlat
hlt
xor
cmp
in
outsb
std
or
cltd
and
loope
xor
out
aam
xor
sub
xlat
shl
dec
inc
es
mov
out
xor
lret
fsts
sbb
xchg
cmp
rcrl
push
xchg
clc
shrb
mov
shll
cmpsb
or
fldenv
xchg
lods
pop
loop
pop
btr
dec
jge
mov
sbb
jo
inc
push
call
dec
dec
clc
jbe
and
xchg
ret
lret
sbb
je
pop
test
iret
and
mov
or
std
ja
push
je
pop
inc
xchg
in
icebp
cld
mov
dec
inc
fisttpll
cmp
pop
lahf
push
pop
mov
or
hlt
and
push
push
push
xchg
fcmovu
cld
out
loope
testb
xchg
mov
jb
mov
mov
inc
out
roll
xchg
xchg
sub
mov
js
movsl
lahf
inc
cli
sti
aam
call
in
mulb
add
inc
cltd
cltd
into
push
mov
cmpsl
inc
jns
jg
lea
fsts
mov
out
sbb
add
insl
lret
cli
mov
outsb
andb
push
inc
fistl
out
xchg
dec
lds
cld
scas
jle
xchg
xchg
xor
leave
xor
lret
iret
cmpsb
int
pop
jns
fbstp
xchg
test
add
sbb
add
inc
xchg
jle
cmp
dec
push
dec
xchg
fldcw
xchg
loope
aad
aad
adcl
push
pop
sub
das
loope
sub
mov
repnz
sti
aad
mov
or
push
imul
pop
lret
mov
mov
popf
imul
lahf
fs
cmp
xlat
pop
mov
ret
negl
imul
daa
stos
fdivrl
fucomi
roll
rcrb
int
decl
in
sub
adc
movsb
push
sub
testb
dec
pop
mov
std
xor
mov
not
pop
imull
xlat
push
test
xor
fildl
mov
aam
or
push
int
sahf
nop
loop
push
mov
sti
lds
mov
cmpsl
lock
inc
sub
data16
cmpsl
mov
mov
popa
lea
cmpsl
or
jg,pn
shlb
jns
aad
fxch
lods
adc
fs
repnz
cmc
idivb
push
cmc
stc
stos
mov
push
nop
jns
aad
jle
mov
adc
rcr
jecxz
xor
mov
mov
lret
aad
dec
leave
testb
xor
add
inc
fs
outsl
fisttpll
fwait
push
imulb
mov
ljmp
mov
dec
lret
dec
subl
insb
repnz
and
pop
cwtl
aad
xchg
xchg
xchg
xchg
push
sbb
rcr
andl
or
mov
cmc
xor
xorb
sbb
lea
xchg
imul
popa
mov
movb
arpl
push
sub
jns
xchg
jge
xor
roll
mov
dec
inc
inc
cmp
push
out
inc
test
shlb
enter
clc
mov
mov
mov
pop
lods
fsubrs
ljmp
mov
jnp
mov
push
inc
std
mov
pop
lods
mov
xchg
out
sub
int
pushf
jbe
jmp
fmuls
repz
js
mov
push
jae
ret
fs
icebp
repz
mov
hlt
fstl
sub
xchg
loope
push
adc
outsl
lcall
ja
arpl
aam
push
adc
out
push
inc
std
sbb
movzbl
or
cmp
jmp
inc
sarl
in
or
xlat
rcr
jmp
lods
les
stos
adc
lahf
dec
xchg
jns
scas
sbb
jmp
adc
jl
inc
mov
mov
ficompl
inc
sbb
cli
repz
sbb
jns
scas
xor
sti
imul
pushf
inc
mov
sbb
fisttpll
inc
imul
push
stos
fcomp
pop
popf
cmp
js
pop
iret
lret
sbb
and
les
lcall
out
negb
jno
rcll
mov
lods
icebp
mov
mov
push
fstpt
mov
shl
xlat
inc
fisubl
cmp
mov
sub
push
adc
test
sub
icebp
and
imul
adc
icebp
push
icebp
repnz
mov
adc
enter
out
inc
jge
cmp
loop
jo
fisttpl
push
mov
cmp
fcmovnbe
icebp
mov
dec
adc
jne
das
fstp
jns
add
inc
in
xor
adc
sbb
cmp
cld
pushf
and
mov
ja
imul
cs
stc
pop
loopne
jnp
bnd
and
in
inc
fwait
rcrb
aam
push
mov
not
les
aad
mov
xlat
mov
pop
pop
movsb
add
mov
bound
je
jns
shlb
mov
pop
mov
push
push
shll
push
imul
xchg
inc
shlb
in
mov
mov
xor
call
ret
popf
add
push
nop/reserved
push
mov
adc
xchg
adc
mov
push
push
mov
sbb
pop
push
inc
stos
test
std
inc
and
inc
pop
call
cmp
mov
inc
pop
or
pop
ret
or
test
pop
popf
sub
push
add
imul
push
dec
cmpsb
test
sub
inc
ljmp
dec
pushf
cwtl
loope
stc
ret
mov
inc
ja
stc
and
ret
push
mov
lret
shr
mov
cmpsl
push
push
iret
mov
lret
jne
mov
aad
insb
xlat
cs
jge
adcb
cli
daa
shl
lret
sub
fmull
mov
insb
mov
repz
cmp
or
jo
mov
aad
adc
inc
push
pop
mov
aad
add
scas
jp
mov
clc
jge
sbb
rorb
rcrb
lock
idivb
inc
ja
movsl
testl
out
push
xchg
pop
jno
inc
popa
repnz
xlat
fbld
pop
sti
lock
int
daa
mov
jmp
pop
xchg
sbb
shll
inc
jp
push
xlat
call
fwait
stc
pop
push
ret
mov
imull
push
dec
loopne
adc
cltd
xchg
in
adc
jp
scas
jns
and
sub
rcrl
lret
addl
xchg
sub
push
mov
notb
mov
cmpsl
rorl
inc
stos
lret
and
subb
jne
and
jecxz
lods
cmp
sbb
loope
popf
lret
test
xor
int3
pop
aam
sti
daa
repnz
testb
loopne
dec
xor
movb
pushw
rclb
xchg
mov
mov
mov
aam
jae
dec
and
les
xchg
dec
in
xlat
push
sti
sbbb
fildl
xor
imul
sti
mov
js
cmpsl
xor
jmp
loopne
mov
es
pop
or
je
lret
dec
xlat
cmpsl
jmp
mov
pop
jbe
sbb
pop
adc
int
jmp
hlt
pop
xchg
addr16
push
std
add
mov
test
xor
mov
jae
adc
lret
fsts
xchg
cs
lret
daa
scas
pop
mov
dec
xchg
movsl
push
xchg
push
ds
pop
push
dec
mov
sahf
push
sub
add
jle
icebp
cltd
stos
mov
add
fistl
cli
xchg
cs
hlt
mov
cmc
mov
daa
arpl
lret
je
fstpt
xchg
es
push
pop
mov
pop
test
cmp
adc
xlat
dec
jl
lret
adc
cltd
xor
aas
leave
push
and
aad
jge
sbb
ljmp
mov
flds
mov
stc
adc
pop
inc
and
mov
das
arpl
jmp
cli
test
and
loope
push
ret
xor
dec
mov
fnstenv
push
mov
ljmp
fcoms
aad
fcompl
jnp
daa
hlt
leave
xorl
loopne
aad
xchg
xor
cmp
push
shl
ret
xchg
xor
adc
mov
sahf
xchg
scas
je
out
fildl
pop
stos
fmuls
push
inc
cmpsl
jp
adcl
les
xor
inc
lcall
xor
test
fmulp
inc
xchg
lock
jle
lret
repnz
push
xchg
xorl
icebp
in
jne
push
fildl
scas
pop
aad
cmpsl
jne
loope
pop
jb
push
inc
and
cmp
jae
adc
mov
iret
mov
pop
add
movsl
jno
cmpsb
inc
add
stos
loope
jb
push
jbe
inc
mov
inc
scas
cmp
nop
inc
dec
stos
das
rcr
fstp
inc
pop
movsl
mov
cli
mov
xor
cs
aas
les
stos
pop
cwtl
fistpl
inc
push
cwtl
stos
mov
out
adc
cmpsl
test
cld
jmp
lcall
mov
sar
xor
jbe
shr
dec
jecxz
daa
int3
rorb
sbb
scas
stos
pop
in
mov
mov
xchg
jns
cli
adc
xchg
aad
fisubs
jmp
jmp
and
loopne
int3
js
cmp
xor
push
insb
dec
dec
push
pop
push
adc
fucomi
dec
mov
rclb
lret
push
sub
sbb
xchg
jae
pop
ja
test
adc
stc
jo
filds
pop
adc
dec
add
sbb
xchg
sub
arpl
dec
sbb
push
ret
fisubrl
adc
aam
icebp
jmp
mov
divl
pop
xchg
or
shll
aam
sub
adc
or
xor
mov
loop
popa
filds
sbb
mov
fbld
push
inc
jne
cmp
jb
pop
jp
lock
push
adc
ja
insb
adc
out
lret
pop
lcall
pop
lock
pop
xlat
inc
pop
pop
into
rolb
aam
xor
aaa
adc
in
ret
mov
pmullw
pop
es
hlt
ret
push
jns
cmpsb
push
icebp
or
xchg
pop
test
repz
lret
iret
decl
dec
sbb
iret
jno
fs
xchg
aad
add
dec
out
fwait
pop
subl
mov
addw
xlat
pop
jge
movsb
dec
icebp
jecxz
and
cmp
or
xchg
jno
call
push
mov
lds
test
mov
pop
xor
add
shlb
int3
mov
clc
push
hlt
inc
cmp
dec
fmull
mov
cmp
and
mov
shlb
ja
repnz
adc
js
fisubs
jne
jo
mov
fldcw
pop
hlt
test
mov
fisttpl
xorl
lds
dec
das
stos
flds
sti
hlt
fdivs
cmc
inc
jb
rcll
in
loop
test
in
outsl
jb
xor
inc
push
sbb
testl
cmpsl
imul
ds
or
repnz
fistpl
jno
and
movsb
fcomp
sub
cmp
sbb
mov
fsubs
xchg
leave
inc
fimuls
cs
enter
lret
scas
dec
fsubs
push
pop
sbb
fcmovne
mov
lods
and
ret
fisttps
add
xchg
out
mov
ret
sbb
xchg
lock
jmp
pop
and
negl
adcb
xchg
scas
scas
mov
lret
mov
cltd
jns
mov
mulb
aad
inc
cmpsl
jns
sub
fucomi
add
push
cli
jle
push
cmpsl
std
jl
mov
les
mov
add
mov
mov
push
push
movl
push
mov
adc
mov
test
orl
lea
pop
push
jns
in
nop
in
xchg
cmp
lcall
clc
fisubs
dec
test
bnd
mov
sbb
dec
mov
lahf
sub
divps
sub
lahf
in
mov
pop
arpl
lods
push
imul
pop
loop
adc
divl
popf
add
fadds
and
ret
dec
cld
scas
lea
inc
mov
popa
dec
pop
dec
sub
jb
icebp
and
stos
idivl
cli
scas
icebp
loopne
ljmp
mov
xchg
imul
int3
push
in
or
cmc
ja
insb
int3
jbe
inc
test
xlat
rol
loop
loopew
ljmp
sbb
dec
mov
inc
fildl
loop
cltd
into
test
dec
xchg
sub
cmp
test
ja
and
mov
add
test
movsb
xchg
fldl
or
adcl
lcall
hlt
mov
je
cld
sbb
movsl
faddl
xchg
imul
add
cmp
cmp
fisubrl
aad
fcmovnu
add
cmpsb
rcrb
mov
xor
test
pop
gs
push
je
fimull
movsl
xor
push
gs
adc
inc
fmuls
adc
jle
icebp
pop
xor
call
out
cmp
mov
arpl
sub
jl
cmc
popa
dec
mov
mov
imul
adc
js
add
push
int
push
cmpsl
jmp
clc
aad
inc
lahf
testb
in
imul
xchg
inc
in
push
mov
pop
mov
idivl
cmp
movsl
movsl
jl
inc
lcall
fnstsw
inc
sbb
lods
xlat
sti
shl
adc
das
dec
dec
cli
mov
loopne
iret
pop
inc
push
sub
push
mov
dec
jl
shll
inc
push
sub
fistpl
aad
mov
test
enter
adc
icebp
fisttpl
call
imul
test
xor
sub
and
push
mov
mov
mov
push
les
inc
in
xor
xor
mov
sub
cmp
adc
mov
xchg
xchg
cmp
sub
ficompl
pop
mov
xchg
orb
push
mov
and
ret
das
jg
rcrb
add
mov
mov
lds
or
orl
push
ds
out
inc
insl
rcll
mov
loop
nop
adc
mov
repnz
fidivl
fwait
sub
adc
cs
fsubrl
lock
lods
aad
notl
neg
repnz
loop
sti
into
daa
shlb
sub
repz
add
lcall
or
test
cmpsl
rcr
xor
inc
imul
push
aaa
inc
lret
cld
test
xchg
inc
jecxz
fisubrl
cmpsl
ds
insl
repnz
js
loope
les
cmpsb
scas
xchg
mov
dec
stos
sbb
imul
jecxz
pop
sub
pop
lock
add
or
cwtl
out
cmpsl
sbb
mov
and
and
jle
ret
jno
lods
stos
xor
sahf
lods
inc
mov
pop
xlat
movsl
mov
mov
xchg
fdivp
cltd
cli
shll
popa
fcomps
push
push
pop
push
pop
fucomp
cmp
aam
mov
jnp
push
in
ljmp
call
or
es
inc
lahf
fcoml
bound
movsl
aad
mov
out
hlt
ret
add
add
adc
jno
les
xor
jno
daa
ret
rcrb
xchg
fwait
xchg
sarb
stos
loope
fcmovnb
push
xchg
jo
mov
hlt
cmp
mov
stos
mov
pop
ret
leave
icebp
imul
js
paddw
xchg
xchg
mov
push
add
sahf
pop
mov
nop
lret
or
jmp
imul
mov
pop
mov
js
aad
mov
pop
sarl
les
mov
fstps
jnp
mov
ja
stc
push
dec
loopne
mov
iret
jp
test
lahf
int
lods
iret
xchg
divb
mov
mov
leave
std
js
scas
xchg
loopne
mov
fwait
testb
mov
cmp
cmp
and
jle
push
std
xchg
dec
ja
push
sbb
es
xor
cltd
clc
lret
repz
arpl
shlb
loope
dec
div
and
mov
add
mov
cmp
popf
iret
in
pop
nop
addr16
push
shl
push
jae
sti
out
push
imul
mov
push
push
xchg
ja
mov
loope
and
les
lcall
xor
sti
inc
addr16
popa
sar
ret
jo
fistpl
ret
pop
addr16
add
dec
stc
je
mov
cmp
adc
push
fsubs
pop
ja
push
inc
push
dec
pop
leave
inc
jne
push
insb
pop
pop
imulb
lock
cli
mov
repz
sub
sub
loope
add
int3
mov
sub
sbb
xlat
addl
icebp
xchg
dec
aad
adc
xchg
xor
mov
mov
jb
lods
sbb
push
inc
imul
pop
mov
icebp
xchg
sbb
daa
inc
rcll
fnstsw
xorl
cmp
stc
loop
push
cs
mov
pop
mov
faddl
cli
push
daa
mov
xchg
mov
add
cmpb
out
cld
and
aad
dec
cmc
lret
xlat
lds
insb
sub
rol
add
inc
int
jmp
rcl
jns
popa
icebp
bound
inc
mov
sti
adc
dec
sti
sbb
jns
ret
ret
test
dec
jne
addr16
ljmp
adc
mull
inc
add
sti
push
shll
mov
or
adc
loope
jno
lock
jecxz
das
inc
ja
ret
addr16
mov
or
ds
sarb
xchg
push
popf
cwtl
push
sub
cmpsb
sti
sbb
cwtl
lock
add
aas
out
loope
cs
xor
jl
aas
mov
movsl
stc
inc
test
orl
ja
hlt
cmp
cmc
adc
adc
inc
push
cmp
int
push
xlat
sub
shl
lahf
mov
cli
js
stc
dec
jmp
dec
xor
je
push
pop
idivl
aaa
std
jae
repz
jnp
ja
mov
add
jne
hlt
inc
fstps
add
lds
sti
add
call
jecxz
jo
divl
sbb
jns
in
icebp
leave
pop
testb
in
jb
arpl
mov
in
fwait
jecxz
xchg
in
inc
mov
aad
ja
gs
mov
mov
lret
cli
test
or
divb
sbb
cltd
mov
mov
dec
aaa
dec
push
sar
addr16
ret
inc
push
imul
xchg
test
and
ljmp
lret
xchg
cmpsl
sbb
mov
inc
push
fidivl
imull
fcmove
addr16
ljmp
xchg
out
loopne
into
fistl
inc
fimull
mov
pop
mov
xchg
dec
repnz
enter
dec
push
aad
fucomi
aad
clc
repnz
jbe
js
mov
inc
leave
mov
inc
dec
cmp
loope
jno
cmp
inc
sarl
xor
sbb
std
iret
pop
testb
mov
mov
or
xchg
lcall
subl
dec
in
jbe
outsl
cmc
cmp
push
je
lds
test
jmp
mov
popa
cli
popa
push
ret
jae
cmp
pop
jne
addr16
filds
inc
gs
dec
inc
ret
popa
mov
int3
test
jnp
push
cmc
outsl
mov
jge
and
rcrb
pmaxub
mov
aad
dec
std
lret
jae
cmp
nop
adc
out
mov
cli
xchg
mov
mov
jae
xlat
inc
sahf
fnop
inc
sbb
jl
shl
icebp
icebp
xchg
leave
cmpsl
push
inc
mov
jmp
popa
push
jbe
jno
outsl
xlat
roll
repnz
ret
popf
mul
mov
sbb
xchg
in
lahf
jmp
mov
mov
lock
call
mov
cmpsl
fucomi
sbb
and
inc
fucomi
test
jbe
les
stos
neg
adc
sti
sbb
jmp
pop
jno
ljmp
mov
push
push
add
lock
icebp
mov
mov
cwtl
push
cmc
jae
xchg
cmc
push
inc
adc
jle
inc
xor
jne
sbb
fistl
in
jae
rorl
xchg
fisubs
leave
push
xchg
ja
jge
and
lret
jns
lret
mov
jb
push
sti
fcmovbe
xor
imul
push
push
mov
inc
xchg
lock
mov
xor
pushf
mov
xchg
mov
shll
out
rclb
je
repz
jb
fwait
popf
fwait
inc
ret
pop
iret
jns
aam
test
push
pop
sbb
clc
xchg
push
sar
arpl
in
scas
jge
inc
xor
js
xlat
pop
loop
fbstp
mov
imull
pushl
rorl
das
jo
testl
jg
sar
inc
push
ret
jl
sar
jbe
cmpsb
xchg
ret
out
stos
les
stos
jle
adc
rcrb
enter
stc
dec
mov
mov
adc
push
and
iret
jae
imul
addr16
mov
leave
adc
jmp
sbb
test
push
stc
or
ret
repz
push
iret
pop
lret
fwait
xchg
jae
push
stc
cltd
sub
push
inc
sub
push
sbb
cli
jl
mov
fiadds
push
fstps
in
shlb
repz
imul
fs
ret
mov
adc
dec
gs
sbb
fisttpl
jl
lahf
mov
pop
stc
insl
ds
pushf
mov
movsl
std
inc
push
pop
cli
fistl
mov
call
rcrl
and
sub
es
mov
mov
xchg
int
and
adcb
rol
jl
xor
lret
divb
or
jp
jmp
faddp
cwtl
mov
fnstenv
fsubs
xchg
inc
lds
push
xlat
cmp
in
mov
push
outsl
lock
pop
fcmovnu
xlat
out
fucomp
adc
inc
in
sbb
mov
xchg
mov
sarl
fs
or
xchg
jae
jno
pusha
out
xlat
sbb
leave
dec
jo
aaa
push
insb
jno
pop
iret
jae
pop
lret
icebp
stc
out
leave
gs
lret
les
sub
mov
mov
movsl
lret
xor
xorb
repz
push
push
aad
and
sbb
ljmp
inc
cmpsl
arpl
push
push
fidivl
sbb
arpl
xchg
pop
pop
repnz
mov
pop
pop
mov
fstl
add
leave
mov
mov
xor
int3
leave
sub
imul
data16
aad
inc
xor
stos
mov
mov
jge
leave
cld
int3
mov
repnz
ja
fs
xchg
jmp
iret
addl
mov
inc
lds
movl
pop
jns
jp
ljmp
pop
sub
ljmp
jge
push
push
jmp
data16
popf
push
iret
lock
dec
leave
fstp
jnp
cld
inc
iret
push
or
lds
shl
leave
ret
in
popa
xlat
aam
test
repnz
scas
test
fyl2x
and
adc
push
stc
or
bound
inc
ficomps
mov
loope
or
xchg
leave
jne
loope
rorl
rcrl
jle
paddusb
shl
out
shl
mov
ljmp
mov
push
or
ja
iret
fcmovnb
dec
inc
push
pop
out
inc
loopne
jo
iret
enter
mov
daa
cmp
das
aam
mov
sbb
mov
ret
loop
iret
sub
jbe
notl
push
repnz
call
loope
sbb
mov
xchg
mov
mov
in
cmpsl
ljmp
addb
mov
loop
stc
mov
push
jbe
push
fnsave
pop
jmp
xorb
ja
dec
das
fcom
shrl
call
in
repnz
adc
ret
repz
out
jmp
rcr
push
or
cmp
mov
pop
pop
mov
inc
xchg
pop
call
cmp
cmp
add
dec
cmp
inc
xor
inc
pop
leave
stc
xchg
iret
inc
ret
mov
xchg
int
shlb
daa
xchg
test
xchg
cmpsl
inc
pop
sahf
inc
mov
jmp
out
rcrb
fwait
inc
mov
testb
push
outsl
sub
push
lock
inc
xchg
inc
shll
leave
rorb
mov
fwait
cltd
idiv
rol
stos
into
lcall
inc
inc
and
mov
sbb
fwait
inc
cs
les
imul
inc
dec
fs
lret
jmp
inc
lret
add
dec
fs
leave
cmpsl
rcrl
adc
dec
sbbb
push
jno
mov
sahf
divl
jge
and
shlb
pop
jae
mov
mov
or
and
inc
shlb
rolb
inc
imul
mov
into
idivb
inc
inc
push
dec
xor
loop
not
sbb
adc
jae
add
xor
and
divl
mov
and
lock
pop
shll
ja
mov
push
xchg
int
ja
pusha
xchg
mov
xlat
xchg
leave
jle
fcmovnu
in
popa
xor
pop
jo
cmc
jo
leave
pop
lods
icebp
scas
and
stc
rol
flds
push
pop
lret
pop
mov
decl
lret
repnz
push
cmp
mov
ljmp
pop
pop
mov
les
test
clc
jo
stos
pop
dec
sbb
scas
pop
adc
push
mov
loope
les
add
inc
std
bnd
adc
mov
loope
mov
insl
fwait
cmpsb
inc
inc
jmp
adc
lds
inc
pop
icebp
les
inc
js
lret
push
inc
dec
stc
repnz
adc
leave
push
mov
mov
push
dec
std
repnz
movsl
dec
adc
int
loope
stc
add
inc
push
push
je
sub
inc
push
ja
fs
movsw
jae
xchg
pop
shll
cmpsb
inc
and
lret
shlb
movsl
imul
push
cwtl
xchg
out
xchg
into
xlat
inc
je
sti
sub
mov
xor
pop
pushf
subb
sbb
cmp
arpl
push
xchg
std
push
insl
ds
lahf
mov
loopne
dec
call
ja
out
addr16
loope
push
xchg
lret
insl
mov
or
stc
push
hlt
mov
jae
pop
add
in
nop
decb
rcll
dec
aad
addr16
jecxz
popa
std
gs
call
mov
add
loop
dec
jnp
xchg
gs
sti
ljmp
xorl
and
stc
or
inc
insl
movsb
lahf
in
jmp
fs
mov
lock
call
movq
pop
inc
mov
fcmovbe
xchg
ljmp
lods
cld
jns
jo
data16
enter
jne
or
adc
pop
inc
fcmovu
mov
cld
sti
pop
loope
push
or
xlat
mov
dec
push
inc
loope
jle
pop
sti
ljmp
add
jl
aad
jl
xlat
push
stc
icebp
jecxz
int3
or
dec
rclb
mov
xchg
aad
fmul
add
jnp
leave
jge
fwait
xchg
cmp
inc
inc
push
jle
rcrb
fistpl
scas
xlat
cwtl
rol
sbb
jae
mov
fnstsw
aam
stc
sbb
sbb
sti
xchg
stc
js
stos
and
push
idiv
loope
std
test
sti
leave
inc
lahf
ret
lret
push
fwait
dec
aam
jb
gs
je
js
push
and
rorl
jb
and
jae
xlat
mov
jnp
stc
bound
popf
lahf
loop
inc
loop
push
stos
sub
int3
mov
cld
inc
loope
sbb
out
push
subl
lret
in
xlat
int
push
or
pop
mov
inc
xchg
int3
loope
xchg
ja
xchg
adc
loopne
sbb
notl
and
loope
icebp
lahf
push
xor
mov
sbb
das
aad
out
adc
mov
fistl
std
scas
dec
mov
xlat
xchg
mov
aam
inc
mov
push
sbbb
cmc
pop
xchg
pop
loope
dec
stos
jbe
stos
sub
adc
pop
push
pop
sbb
repnz
fucomip
fistps
rol
flds
fidivs
xchg
repz
add
int
push
je
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
sbb
addb
jae
sub
cmp
xor
xor
xor
xor
xor
xor
mov
add
ret
ret
addl
mov
mov
scas
xchg
fildl
pop
test
sti
ret
enter
push
ret
sti
test
in
icebp
repz
repz
sub
mov
lea
in
arpl
xchg
shlb
enter
push
icebp
mov
pop
adcl
push
repz
lahf
pop
or
add
add
mov
mov
mov
repz
stc
mov
jmp
mov
xor
adcl
inc
rcll
adc
cmc
lahf
inc
cmp
adc
lea
jle
loop
mov
rolb
pop
cmp
stc
dec
icebp
xchg
clc
int
int
mov
dec
rol
icebp
cmp
stc
xor
xor
movsl
cmc
test
lds
push
xor
sub
lcall
push
ret
xchg
mov
mov
xchg
sti
mov
leave
pop
dec
adcl
mov
stc
and
pop
sub
aam
push
and
mov
push
scas
fwait
mov
mov
ret
test
push
inc
mov
mov
xchg
std
pop
in
daa
out
in
addl
icebp
dec
add
mov
lods
xor
aas
int
loopne
loop
pop
mov
mov
xorl
push
stc
sahf
add
cmp
nop
mov
out
rorb
out
fnstcw
lods
daa
cld
dec
hlt
inc
push
testb
xchg
adc
cmc
bound
pop
inc
icebp
cmc
fistpl
mov
jae
pop
sti
mov
stc
hlt
testl
add
sub
dec
xlat
es
dec
out
arpl
test
dec
aad
mov
imul
es
pop
jmp
dec
xchg
inc
ret
push
cmp
dec
or
cmpsb
jp
shrl
stos
movsl
push
add
mov
xchg
lret
scas
jno
mov
and
xchg
cs
fwait
adc
pop
out
int3
jmp
adc
push
gs
ret
movsb
or
sub
pop
fistl
call
add
mov
push
adc
sti
pop
test
pop
js
fisubrl
add
dec
cmp
or
mov
incb
mov
mov
mov
add
push
jno
in
or
pop
daa
ret
pusha
push
xchg
pop
cmpsl
dec
addl
add
int3
imul
or
fldt
mov
cmpsl
xchg
sub
lds
inc
fs
sub
push
mov
fdivr
dec
lods
mov
xor
inc
imul
dec
test
dec
icebp
stc
sti
inc
sub
out
lcall
xor
xchg
imul
int
pop
pop
pop
push
aad
push
ret
jae
mov
lret
jb
in
imul
call
mov
pop
jns
sbb
sti
jmp
call
mov
pop
loope
lret
rcll
mov
xchg
dec
push
fnstcw
pop
pop
jns
lcall
adc
dec
mov
xchg
xrelease
jns
insb
out
adc
cmpsl
rolb
or
jno
mov
push
mov
sbb
inc
xor
push
xchg
fimull
movsb
mov
scas
fwait
std
mov
stos
hlt
inc
push
in
inc
jl
and
mov
cmp
js
adc
cmpsl
scas
mov
xchg
xchg
jo
hlt
imul
inc
iret
imul
adcl
cmp
xchg
pop
lds
pushf
loopne
mov
push
jmp
pop
xlat
lret
mov
mov
mov
in
fisubl
mov
pop
rolb
stc
icebp
out
cmpsl
add
pop
scas
stc
cltd
push
in
lcall
mov
test
fistl
pop
loope
xlat
rcl
push
loope
pop
inc
fildl
sbb
ja
push
sub
in
fdivr
ja
adc
cmpsl
add
jge
and
cli
rorl
pop
add
lcall
cmc
in
or
push
or
rcr
push
xchg
cmp
shlb
shlb
jb
hlt
imul
cld
cmpsl
xor
roll
cmpsb
loop
popa
movsl
andb
stos
xchg
sub
mov
push
dec
enter
lock
int3
subb
push
das
sti
jo
in
add
rcll
xchg
lea
push
jae
push
mov
mov
mov
push
repnz
jle
inc
clc
outsb
jmp
push
or
jb
shrb
arpl
fnstsw
psubq
sbb
je
push
push
xor
aaa
xchg
icebp
sub
ret
jo
xlat
mov
fstl
cmpsb
ret
pop
dec
aam
rcl
int
aad
repz
xlat
icebp
inc
std
xchg
mov
pop
leave
push
mov
fwait
cmpsl
enter
push
nop
insb
push
lods
xchg
js
add
cmpl
pop
out
nop
icebp
aad
repz
loopne
icebp
xchg
aam
jb
mov
jae
popa
lahf
xchg
movsb
xchg
mov
lret
sbb
jecxz
sub
cld
movsl
je
cmp
or
jp
js
lcall
subb
cmp
stc
xchg
jb
push
xor
icebp
shlb
xor
jle
mov
xor
add
ret
xchg
lret
pop
sti
pop
into
mov
mov
xor
push
jp
shl
xchg
fisubrl
mov
repnz
lret
test
sarl
fistpl
in
hlt
jae
ljmp
inc
imul
cmc
dec
push
xchg
cmc
daa
mov
sbb
ja
lock
incl
push
fcmovnu
push
push
xchg
adc
pop
or
shl
lods
xchg
jbe
test
addr16
jae
mov
into
cmc
xchg
or
pop
imul
mov
icebp
jecxz
pop
sub
lock
sti
aaa
add
repz
fisubrs
push
adc
pop
adc
pop
xchg
jns
mov
push
imul
scas
test
stos
mov
repz
sar
adc
into
lods
dec
pop
div
push
or
adc
movsb
pop
mul
and
xchg
fidivrl
mov
movsl
push
stos
dec
jns,pt
aas
cs
jecxz
push
scas
mov
ja
add
cltd
pop
push
shlb
sti
add
mov
push
sbb
enter
inc
ljmp
lret
inc
dec
imul
jb
or
pop
cltd
or
cmpsb
cmpsl
test
and
jl
fwait
pop
xor
mov
test
mov
stc
out
sarl
ret
jns
mov
xor
cmpsl
int3
pusha
leave
test
flds
push
xor
ret
insl
and
inc
ffree
mov
out
lret
and
dec
shll
push
popf
mov
xor
pop
xor
fldl
push
fstpt
ret
jg
push
xchg
jno
sub
hlt
shr
push
or
rclb
iret
out
icebp
pop
add
sub
push
jmp
shrl
test
js
mov
xchg
pushf
push
fsts
push
loopne
adc
adc
pop
xlat
rclb
es
jb
inc
mov
div
pop
sub
icebp
fsubrl
push
sub
lret
repz
sbb
int3
push
test
ficoml
pop
mov
mov
sbb
push
xchg
push
cmpl
std
insb
repnz
xor
mov
insl
mov
mov
and
fists
pop
push
sub
pop
inc
rclb
notb
in
push
inc
jns
imul
fldt
rol
jecxz
pop
adc
sbb
cmp
hlt
jnp
adc
inc
sub
xchg
rcll
repnz
sub
sub
bound
daa
call
and
cld
lds
fcomi
xchg
xchg
jb
jns
add
sub
dec
rcll
pop
popa
jmp
dec
mov
jns
imul
icebp
or
xchg
fucom
adc
flds
popa
cltd
sti
idivb
out
and
clc
fstl
xor
pushf
mov
in
fwait
loop
aad
dec
mov
sbbl
cmpsl
adc
ret
cld
adc
mov
in
pop
fidivrl
inc
mov
mov
or
dec
es
xchg
inc
cmp
lret
mov
cmpsb
arpl
add
inc
fdiv
pushf
inc
fdivrp
lods
popa
lcall
ja
cmp
xchg
cmp
pop
pop
cmp
xchg
jb
or
or
or
vmovhpd
mov
icebp
push
cmpsb
icebp
xchg
pop
fwait
js
dec
pop
inc
rcr
dec
sti
pop
jmp
repz
or
jne
pop
xchg
repz
sar
vcvtps2dq
mov
insb
cmpsl
mov
leave
or
test
fstp
shr
xlat
mov
daa
testl
inc
mov
rclb
mov
mov
hlt
test
mov
aad
jmp
fildl
sbb
ret
bndstx
adc
in
pop
repnz
cld
push
fucomi
pop
xor
fisttpll
mov
and
sbb
mov
pop
test
sti
fcompl
jno
xchg
repnz
adcb
push
aam
lret
xchg
fcmovne
jmp
repnz
push
lret
iret
lret
out
fbstp
pop
neg
pop
adc
insl
nop
mov
ficoms
hlt
adc
int3
loope
fcoml
cmp
xchg
fxtract
pop
mov
fnsave
and
into
and
sarl
push
sub
insb
sti
push
rclb
leave
testl
xchg
xchg
xchg
int3
jle
cwtl
rcrl
mov
adc
fimuls
dec
mov
imul
mov
fs
fldl
sbb
mov
jle
in
adc
mov
xchg
add
mov
les
stc
xchg
jnp
jno
lods
or
inc
add
fiaddl
push
mov
sub
jecxz
scas
movsb
fsubrs
cwtl
fstl
push
sbb
and
dec
into
movsb
mov
add
mov
mov
adc
fcmovnb
fldenv
test
icebp
adc
mov
movsb
ret
fcmovnbe
lret
test
popf
pop
xchg
push
cmpsl
jnp
loop
outsb
sahf
shlb
lret
xchg
adc
dec
jb
pop
mov
pop
add
pusha
rorb
mov
subl
shlb
jecxz
inc
shrb
ret
pop
data16
popa
iret
ret
ss
repnz
es
xchg
jle
xchg
in
scas
lods
sbb
sar
jge
cmp
add
push
aad
test
xlat
jecxz
out
fdivrs
aad
pop
mov
loope
jbe
pop
push
stc
xor
div
test
fisubrs
sbb
test
dec
push
data16
cmp
lods
lret
cmp
arpl
adc
cld
lods
scas
jecxz
lock
sbb
sbb
ret
ret
mov
cmpsl
icebp
notb
cmc
mov
sbb
adc
adc
jle
adc
loope
idivl
lahf
jmp
cmp
enter
std
fisubl
jmp
leave
mov
inc
lock
cmovb
test
in
inc
fwait
in
sub
cmpsl
push
inc
inc
push
call
scas
cmp
sub
jmp
jb
dec
inc
leave
insb
cmp
in
cmp
pop
push
inc
je
inc
fbstp
sbb
cld
push
push
fisttpl
ds
fldcw
add
iret
movsb
sti
es
inc
lret
shl
stc
jo
xchg
ret
leave
jb
hlt
imul
fxch
loop
loopne
push
push
repnz
mov
enter
mov
lods
cmp
insb
xor
mov
test
jle
sbb
and
add
fisubrl
mov
ja
push
ret
aad
scas
pop
sbb
push
jmp
ja
push
jnp
mov
roll
pop
std
push
xlat
fwait
mov
cmp
aad
jl
inc
mov
fistl
popf
xchg
arpl
push
data16
xchg
adcl
or
bound
rol
mov
push
mov
jbe
out
dec
cmpsl
add
std
inc
inc
xchg
inc
iret
imul
inc
adc
xlat
fs
cli
shl
jne
mov
pop
outsl
loop
in
into
push
call
fwait
inc
movsb
mov
or
orps
repnz
mov
loopne
push
inc
push
cmpsl
mov
insl
jno
pop
mov
out
outsl
jb
cmp
aas
lret
insl
push
push
inc
push
push
jo
sub
aad
sbb
rol
movsl
movsb
mov
fists
lds
mov
fiadds
rolb
aad
push
push
fldenv
js
xlat
jns
inc
enter
mov
push
dec
push
nop
insl
fcmovb
outsl
test
and
cmc
jb
cltd
icebp
ret
fs
dec
xor
pop
icebp
nop
inc
loope
pop
aad
outsl
xchg
push
push
lock
ljmp
js
xor
inc
push
mov
pop
icebp
pop
aad
enter
push
pop
arpl
mov
popf
or
and
dec
xchg
xchg
jno
movsl
xchg
lods
mov
test
lcall
mov
mov
jb
xor
das
imul
mov
fcoml
js
into
and
push
insb
aas
cmc
ficompl
jmp
jmp
xlat
das
sub
push
mov
mov
sbb
push
loop
adc
cmp
insl
into
mov
lcall
adc
jge
pop
ljmp
adc
mov
mov
xchg
ss
lcall
push
orl
fwait
add
dec
scas
jmp
jb
mov
or
movsb
jmp
imul
jbe
add
push
repz
mov
xchg
jno
jbe
pop
pop
adc
push
add
xor
aad
adcl
inc
aad
mov
inc
ds
pop
sbb
ss
rorl
sbb
or
pop
jnp
pop
push
dec
xorb
lods
cltd
in
cmc
mov
or
mov
jecxz
cmp
lods
adc
push
cld
fistps
lret
cmc
xchg
adc
mov
repz
ljmp
fsubrl
stos
or
jp
push
push
cmp
in
cs
push
xchg
cmc
ljmp
shl
cmc
subb
adc
push
xchg
mulb
jl
out
or
int
cld
stos
pushf
ret
imul
xchg
add
mov
mov
outsl
adc
sub
aad
push
or
push
jmp
imul
pop
enter
inc
push
lock
das
sbb
ret
jnp
sbb
inc
imul
push
loope
rcr
jmp
cmpsl
cmp
movsl
sub
mov
in
cmp
xor
pop
andl
push
outsl
insb
or
test
adc
cltd
es
jnp
negb
ja
cmp
dec
inc
subb
pop
push
and
lret
arpl
jmp
rol
imul
dec
arpl
cmp
movsl
lods
repnz
rcll
mov
cmpsl
cltd
fsubrl
hlt
rcll
cmp
adc
fisttps
xor
sti
in
ja
lcall
push
sbb
mov
cmpsl
inc
je
inc
mov
mov
and
lcall
popa
and
jg
pop
push
or
mov
scas
pop
hlt
adc
aad
rcl
dec
jne
jmp
dec
mov
out
add
enter
mov
lea
dec
add
sarb
xor
mov
adc
xchg
movsb
dec
and
sub
cs
shrl
loop
fwait
pop
cmpsl
push
daa
and
cmp
adc
cs
jge
lahf
ret
jnp
pop
fsts
cli
xlat
push
out
scas
lods
popf
cltd
mov
ret
push
jmp
push
add
and
cmc
sub
xor
lret
adc
cmpsl
fwait
sti
fnstenv
adc
inc
enter
repz
and
inc
addr16
nop
sbb
mov
scas
push
loope
xchg
jno
cmc
icebp
ret
sbb
mov
push
sub
jne
push
arpl
cltd
jmp
adc
inc
mov
sub
push
fcoml
or
pop
push
movsl
jbe
in
sbb
push
cmpsl
je
pop
sbb
fisubrl
pop
mov
mov
mov
dec
inc
arpl
mov
ja
pop
mov
aas
sbb
jmp
inc
lods
push
jge
aam
push
or
sbb
ss
mov
insb
scas
scas
mov
loop
fucomi
stc
push
xchg
or
ja
sub
flds
movsl
jle
xchg
subl
lds
stos
sub
mov
test
stos
mov
and
mov
incl
jb
mov
test
mov
pop
push
push
adc
lods
shl
jo
jle
rcll
sbb
mov
jo
ret
push
pop
dec
in
mov
out
mov
repnz
fildl
enter
xchg
add
gs
mov
out
or
test
sbb
ret
jmp
fisttpl
fildl
fsts
cmp
jmp
dec
aas
sub
add
jb
pop
jg
push
icebp
push
lock
mov
mov
loop
stos
xlat
loope
jns
je
mov
pushf
orb
out
add
sbb
adc
out
add
push
adc
mov
cli
leave
push
push
pop
fnstenv
xchg
frstpm(287
adc
sti
jmp
repz
lock
adc
cmpsl
push
xlat
xchg
mov
xchg
adc
inc
call
dec
aam
fcomps
dec
push
adc
push
in
rcrl
std
jbe
dec
cmp
cmp
loopne
shlb
lret
and
int
mov
arpl
mov
ret
and
mov
test
repnz
or
push
push
in
xlat
not
add
aad
sbb
loop
sbbl
mov
sub
ficomps
loope
cmc
out
sub
xor
push
add
leave
mov
push
fldcw
xchg
icebp
sarl
adc
aad
pop
fdivp
iret
xchg
lods
out
sub
or
lds
lcall
inc
testb
je
jns
jp,pt
xor
xor
push
ret
lods
lret
inc
mov
jp
mov
push
outsb
ret
aad
imul
lret
mov
fwait
xchg
cmp
mov
xchg
jg
lds
call
dec
jecxz
mov
es
daa
mov
insb
inc
mov
adc
add
das
stos
mov
mov
mov
stos
bnd
and
jmp
bnd
cmp
aad
adc
in
mov
sub
sbb
in
movsb
rorl
test
je
int
mov
int
lcall
pop
lock
jbe
test
mov
jg
addl
mov
xor
outsl
mov
push
incl
pop
mov
or
repz
jo
out
nop
ret
cmp
test
push
in
push
adc
mov
neg
out
dec
into
in
shrl
repz
xchg
stc
loope
bound
es
add
icebp
js
inc
fucomp
in
inc
dec
push
cltd
jne
cmpsl
std
xchg
dec
dec
or
sti
imul
jbe
ret
jb
inc
jecxz
sti
adc
shrb
cltd
adc
cmpsl
jbe
jge
cltd
fildl
adc
notl
movsl
fistpl
add
push
fwait
in
jmp
sarb
and
xchg
push
lcall
lahf
sbb
and
xchg
adc
jmp
xchg
lock
div
lret
lahf
pop
fucomi
jb
sub
inc
dec
repnz
repz
cltd
subb
pop
jmp
out
pop
stos
dec
or
enter
scas
pop
fsubl
fabs
inc
repnz
pop
xchg
std
mov
cmpsl
addb
stos
les
adc
aad
cmp
or
mov
xor
and
outsl
push
popf
mov
int3
sti
clc
push
repnz
cmpsl
xchg
or
inc
icebp
xlat
les
fwait
jle
scas
mov
add
ret
push
adc
fldt
out
push
push
in
cmp
cwtl
cmpsl
aam
adc
xchg
pop
ja
mov
cwtl
rclb
push
mov
push
inc
jl
data16
lods
mov
pop
stos
inc
out
dec
and
insb
int
mov
lock
mov
dec
test
mov
inc
js
inc
scas
pop
jno
sarl
xchg
cld
xor
push
mov
add
stc
xchg
mov
lret
jno
cltd
aad
faddl
out
push
cli
repz
imulb
lods
xchg
daa
mov
push
ljmp
pop
imul
ja
in
inc
ljmp
int
outsl
lea
fdiv
cs
aas
sub
les
fisubrl
rcr
fdiv
jns
pop
icebp
cld
mov
lea
ficomps
mov
es
call
push
xchg
mov
icebp
icebp
popf
mov
sbbl
out
lret
mov
movsb
sbb
aaa
push
or
inc
loopne
pop
dec
sahf
aam
bound
ret
fwait
lret
mov
iret
mov
mov
or
dec
mov
cmpsl
gs
dec
or
push
pop
pop
fdiv
pop
xchg
inc
inc
xchg
inc
pop
push
loop
in
lds
dec
xchg
push
out
cld
outsl
push
loop
inc
in
notl
xchg
lahf
sub
sub
mov
jle
inc
fdivp
push
mov
xchg
sar
gs
pop
xchg
hlt
mov
pop
in
push
xchg
dec
adc
stos
scas
push
sbb
push
and
jl
xchg
xorl
fstl
pop
into
xlat
inc
push
mov
mulb
cltd
fistpl
je
xlat
loop
adc
fwait
addr16
ret
mov
fildl
mov
fnstenv
mov
not
mov
fwait
and
mov
mov
or
jb
aad
push
or
push
lds
lcall
mov
stos
dec
outsl
pop
jp
xchg
out
mov
push
jb
inc
lock
mov
dec
pusha
neg
xlat
add
sahf
cli
icebp
sbb
insl
mov
jmp
pop
outsl
std
xchg
std
mov
mov
addl
pop
jmp
mov
pop
cmp
sbb
inc
movsl
xchg
jbe
cmpsb
xor
scas
pop
push
pop
lret
hlt
jecxz
enter
jno
xchg
lcall
lcall
repz
sbb
call
pop
lahf
inc
lea
subps
cmp
xchg
std
cmp
fisubs
push
push
cmpsl
cltd
xor
es
adc
cmp
jecxz
jmp
roll
stos
mov
sub
fisubrl
stc
xlat
jmp
adc
popf
cmp
jo
xchg
rolb
fldcw
sti
xor
mov
pop
mov
xchg
push
push
lret
insl
fwait
repz
sbb
push
jmp
inc
xchg
xchg
es
stos
addb
sub
aad
inc
js
add
fildl
push
sbb
xorl
ja
inc
cmp
mov
hlt
add
rcrl
mov
adc
lods
cmpsl
int
ret
and
jg
mov
jb
lcall
push
ja
jne
add
hlt
testb
test
in
adc
cmp
ljmp
dec
xchg
or
fists
dec
mov
hlt
scas
call
insb
push
scas
lock
inc
push
xchg
and
in
aad
push
ljmp
push
aad
aam
xor
daa
jmp
fidivs
fwait
add
aad
insb
daa
jecxz
xchg
call
pop
arpl
pop
adc
mov
iret
jne
mov
sbb
lahf
imul
ret
xchg
aad
jge
repz
xchg
stos
es
popf
push
ret
dec
push
add
jae
cmpsl
inc
jns
pmulhw
jl
xor
cld
movsb
cmp
fldl
out
cmpl
inc
fwait
inc
orb
insb
ret
jge
ljmp
jmp
xor
pop
push
push
dec
mov
out
xchg
lret
pop
test
xor
lcall
fistpll
jbe
lahf
xor
test
pshufw
pop
xchg
xchg
dec
push
daa
cli
sbb
dec
adc
in
in
js
xchg
adc
sti
xlat
sbb
fcomps
int
hlt
sbb
inc
jp
pop
adc
mov
inc
gs
testl
mov
xchg
and
xchg
aad
cmpsl
push
cmp
add
sarb
fcmove
pop
adc
fstpt
jnp
lods
cmp
js
pop
sti
mov
pop
scas
sti
imul
mov
jnp
or
mov
push
int3
pop
cs
mov
clc
add
jnp
testl
mov
sub
ja
pop
jp
enter
adc
stos
in
push
sbb
popa
js
fiadds
cmpsl
shl
pop
clc
ret
ss
adc
hlt
aad
mov
iret
add
sbb
inc
int3
adc
aaa
std
cmpsb
xlat
cltd
cmp
and
mov
add
push
mov
fimull
xlat
iret
push
popf
jle
mov
mov
sbbl
loopne
jne
inc
mov
pop
mov
sbbl
fwait
adc
push
dec
in
inc
xlat
fwait
orb
fldenv
pop
cmp
hlt
push
pop
test
mov
fcmovnbe
add
push
testb
fwait
jmp
mov
jl
fsts
std
sub
loop
inc
fsubrp
gs
inc
push
ljmp
push
ljmp
jnp
fs
mov
out
sub
dec
sbb
shlb
icebp
jns
jae
pop
cltd
scas
rcl
outsl
rclb
pop
mov
sub
sub
dec
cmpsl
fmuls
shrb
mov
push
and
cmpsb
cmpsl
scas
xorb
dec
jmp
sbb
fisubs
jns
xchg
std
jg
mov
sub
sub
lock
dec
aaa
jns
jno
jno
shlb
call
insl
mov
cmpsb
pop
sbb
cmpsl
sbb
icebp
es
repnz
rorl
lea
cmp
inc
pop
mov
ret
sti
cmp
lret
sbb
sbb
pop
adc
cmp
xor
pop
out
scas
jbe
sub
outsb
roll
jnp
add
pop
and
out
cwtl
push
mov
jl
mov
cmpsl
xchg
and
mov
cmp
hlt
sub
xchg
repnz
or
mov
dec
shll
jae
dec
mov
mov
je
test
inc
jo
fstpt
aad
cli
inc
pop
inc
mov
mov
xor
push
xor
je
mov
push
mov
xchg
inc
imul
dec
mov
adcb
out
jecxz
mov
pop
or
movb
icebp
dec
pop
xchg
sti
leave
jmp
jmp
push
mov
jl
xchg
loope
push
push
lcall
imul
lock
cli
sbb
mov
mov
jmp
leave
and
and
add
stc
mov
inc
jecxz
mov
cld
nop
addr16
leave
sti
sbb
test
push
dec
dec
fidivs
imul
fisttps
inc
or
in
or
data16
clc
mov
imul
pop
jno
inc
sbb
leave
adc
stc
mov
aam
test
repnz
das
mov
xchg
mov
sub
mov
jge
mov
mov
sub
fisubrs
out
rclb
lahf
mov
pop
aam
cmp
sub
jae
dec
in
dec
inc
xor
sahf
leave
icebp
les
mov
inc
pop
fnstcw
push
popf
lcall
lds
or
fcomip
dec
adc
xchg
js
inc
push
inc
inc
mov
imul
mov
xchg
js
ja
ret
mov
in
push
pop
jp
mov
push
xchg
scas
js
or
cli
add
xorl
push
inc
push
rclb
jno
gs
mov
dec
adc
fldl2e
xchg
dec
out
shll
inc
adc
cmpsb
jnp
cltd
inc
flds
fistpl
shll
lcall
add
cmp
leave
enter
mov
push
repz
pop
adc
mov
test
jp
push
fsubs
lds
push
pop
cmp
popf
es
or
cmp
fwait
jae
pushw
add
loope
leave
push
mov
mov
jl
lods
dec
xchg
pop
fwait
sub
adc
arpl
pop
jmp
fiaddl
mov
xchg
xorps
das
lcall
aam
fsts
lret
rol
ror
adc
pop
add
jbe
mov
push
dec
bnd
or
clc
cmp
mov
cli
xor
adc
std
icebp
adc
test
out
jno
pop
je
cli
sbb
pushl
sbb
mov
rol
sbb
js
out
mov
subb
push
mov
loop
adcl
lahf
jecxz
cli
shl
lock
add
mov
lahf
repz
pop
xlat
adc
daa
mov
cmpb
dec
outsb
repnz
xor
push
xor
xchg
sti
lcall
jmp
mov
dec
push
cli
or
arpl
inc
inc
dec
mov
pop
inc
jae
fstps
inc
mov
test
stos
pop
add
insl
adc
push
mov
mov
jo
lods
js
sbb
adc
sarl
mov
jns
push
mov
rclb
popa
pop
or
shr
loop
jo
addr16
pop
push
add
rcrb
push
push
outsb
add
xchg
mov
sub
xchg
imul
dec
cmp
add
das
jmp
sti
dec
mov
in
add
sbb
mov
dec
cmp
sbb
popf
arpl
mov
dec
ja
ficomps
fldl
fwait
fs
mov
loopne
sbb
and
xchg
sub
jae
in
pop
iret
mov
cmp
cmp
xlat
jp
sbb
add
cmp
rcrb
ror
fcompl
fcmovb
in
pop
sub
push
std
ja
rclb
lea
rcrl
cmp
xchg
inc
push
push
adc
imul
test
xchg
pop
and
test
or
sbb
mov
xchg
nop
jmp
or
adc
lahf
cmpsb
push
aaa
icebp
fnstcw
test
inc
sub
mov
das
mov
leave
aad
xchg
mov
int
inc
cld
adc
cmp
imul
loop
addr16
mov
pop
fstpt
roll
jo
loopne
dec
sbb
jge
daa
jge
movsl
leave
aad
hlt
iret
sbb
adc
jg
mov
les
and
mov
sbb
js
inc
xchg
rcll
mov
inc
push
rcrl
pusha
xchg
aas
mov
jle
mov
mov
dec
push
sbb
lock
icebp
mov
fiadds
mov
addl
icebp
cmpsl
ds
das
xchg
int
int
imul
out
pop
into
in
mov
movl
sahf
in
outsl
cmc
and
nop
inc
sbb
jp
mov
psllq
jg
popa
fcmovb
into
dec
rclb
imul
push
pop
in
movsl
cmp
cmpsl
push
inc
pushf
adc
xor
xlat
movsl
mov
ret
lret
dec
adc
shlb
lret
pop
sub
int3
frndint
inc
data16
jns
mov
js
jmp
fiaddl
pop
add
inc
xor
scas
outsl
push
adc
mov
test
repnz
bnd
and
into
cmp
scas
jg
mov
adc
mov
shl
in
xchg
shl
out
xchg
lock
add
faddp
and
in
sub
xchg
add
repz
dec
sahf
fcomip
sbb
repnz
xchg
les
lea
jno
mov
clc
inc
pop
inc
lcall
popf
mov
xchg
addl
inc
neg
xchg
inc
icebp
cld
ret
jb
sti
pop
xchg
aad
fists
mov
cmp
popf
inc
pop
inc
adc
movsb
lret
ficoml
icebp
mov
fwait
cmc
adcl
pop
lods
lods
cwtl
dec
repnz
inc
jp
cld
pop
xchg
enter
sub
ret
inc
sbb
testb
jmp
jns
lds
jge
out
std
xor
ret
aam
jmp
insb
xchg
mov
pop
mov
fwait
mov
shll
or
lods
or
jmp
pop
fucomi
fcmovb
inc
aad
ja
xor
orl
xchg
adc
stc
aad
xchg
fwait
aam
adc
int3
fidivrl
jecxz
xchg
or
jg
push
and
insl
or
lds
int
mov
lods
nop
hlt
inc
rclb
scas
push
push
adc
jb
std
ja
loope
outsl
notl
imulb
cli
jl
sub
out
pop
sbbl
jmp
mov
daa
insl
cmp
cltd
jle
inc
fstps
lods
xchg
int
js
iret
mov
lret
add
adc
dec
fmuls
dec
jg
mov
sub
xchg
mov
std
mov
lods
cmc
rcr
pop
xchg
and
ret
addl
push
xchg
rcl
push
test
sbb
fbld
push
mov
adc
aaa
lahf
push
jmp
daa
cltd
fistl
push
add
jle
pusha
mov
js
loop
pop
push
pop
incl
ljmp
jno
decb
pushf
inc
push
movsl
xchg
or
repz
mov
mov
dec
out
ljmp
inc
and
gs
fistpll
aad
xchg
ljmp
shll
inc
xchg
mov
lods
mov
and
or
es
pop
sub
xchg
mov
inc
or
sahf
mov
outsb
fildl
stc
push
mov
imul
cld
shrb
lret
dec
clc
push
mov
leave
pop
adc
icebp
sarl
xchg
ja
js
mov
lods
sbb
inc
sbb
add
ficoml
add
sti
pop
roll
pop
mov
addr16
sub
mov
jg
leave
int3
or
push
cmc
lahf
jno
stc
sbb
scas
sub
test
push
xchg
pop
repnz
fisubrl
adc
flds
cli
sbb
push
cmc
jnp
imul
mov
push
jle
add
cli
add
mov
fistl
xor
push
rcrb
fldt
lret
aad
rcr
xlat
movsl
fcmovnu
ret
stos
repz
rol
shrl
out
rolb
in
inc
mov
negl
mov
std
es
shrb
cmovb
add
sbb
loopne
sub
pop
lods
dec
rorl
cltd
inc
xchg
mov
adc
mov
mull
adc
fucompp
inc
dec
mov
inc
jbe
mov
subl
fidivs
clc
aad
jo
int3
push
mov
lods
pop
rcl
jno
pop
jns
lahf
test
les
or
mov
xchg
sbb
ljmp
mov
dec
push
popf
jb
jmp
sub
xor
mov
inc
mov
mov
inc
dec
loope
mov
loop
push
lods
mov
insl
test
xor
pop
jnp
int
mov
cltd
roll
lea
fdivs
lods
fstp
insb
pushf
ja
dec
xor
adc
mov
movsb
mov
sbb
fidivrs
pop
ja
cld
mov
push
rclb
pop
adc
fidivs
push
lcall
les
jbe
sub
cld
imul
xchg
xchg
ds
js
sub
fisttps
jbe
stos
adc
mov
nop
inc
fstps
sti
jns
push
mov
mov
sarl
cmpsl
pop
mov
xor
es
push
xor
or
pop
dec
in
cmc
xchg
mov
ret
es
pop
or
inc
ja
ret
push
aaa
push
fs
push
xchg
add
clc
xchg
lods
push
cltd
inc
hlt
mov
push
mov
cmpsl
mov
jnp
out
loopne
push
mov
push
pop
mov
cltd
lcall
mov
jnp
in
sti
push
mov
xor
lock
imul
push
lcall
push
inc
fisubs
dec
negl
jns
call
call
outsb
out
adc
pop
xchg
sub
or
pop
jp
shl
mov
mov
imul
mov
pop
or
repz
adc
xor
popf
add
mov
test
inc
pop
std
dec
xchg
cmpsl
jmp
nop
dec
call
jl
cli
dec
push
mov
xlat
not
pop
lahf
in
in
stc
xor
in
lret
cmpsl
inc
shl
iret
outsl
data16
fwait
test
mov
jb
pop
not
movsl
pop
adc
inc
and
mov
jl
repz
scas
jmp
ret
stos
popf
xchg
push
cmp
mov
jl
mov
imul
xchg
movsl
ret
test
pushf
adc
or
stos
fstpl
popa
mov
arpl
cld
push
mov
jge
fcmovnb
xchg
ss
inc
or
in
mov
stc
ret
in
mov
jae
out
mov
lcall
push
mov
cs
sub
jns
fwait
inc
aam
insl
mov
pop
jb,pn
adc
clc
sbb
rol
adc
cmpsl
push
cmp
mov
add
and
stc
pop
lock
jno
into
or
sti
icebp
clc
movsb
lret
jge
pop
push
push
push
jnp
fldt
nop
testl
dec
jae
test
sbb
mov
pop
xchg
ja
dec
test
movsb
cld
sarl
xchg
push
ficoml
xchg
push
mov
xorb
add
jo
pushf
inc
sbb
sbb
xor
cmpsl
imul
pop
sbb
jae
or
xlat
mov
cs
cwtl
popfw
je
xchg
sarl
sarl
lcall
push
pop
sbb
aad
fwait
jbe
xchg
inc
aam
fisubl
xchg
push
pop
sub
xchg
jmp
push
xlat
fs
jb
xchg
and
mov
cli
push
sbb
cwtl
dec
mov
and
sarb
mov
lods
aas
mov
orl
pop
inc
ret
leave
sbb
lods
into
mov
es
inc
loopne
test
cmpsl
and
jg
mov
push
leave
mov
xorb
icebp
mov
mov
mov
cs
inc
repnz
inc
cmpsb
outsl
mov
push
inc
stc
shll
out
sbb
xlat
add
dec
and
rclb
cmp
in
stc
mov
mov
stos
sbb
sub
jnp
ret
ret
fisubrs
jno
xor
inc
inc
mov
mov
lret
fdivr
inc
std
insb
lret
pop
lcall
into
arpl
icebp
js
fsubr
jae
jnp
inc
loopne
xchg
add
cmp
dec
mov
jae
xlat
pop
sub
mov
es
stos
dec
push
orb
push
jmp
sub
lahf
mov
ret
inc
inc
popa
pop
mov
sarl
icebp
sbb
pop
dec
sub
call
movsl
fcomps
push
xor
fadds
popf
cmpsl
mov
es
jno
out
jmp
pusha
or
or
into
or
dec
xor
push
iret
jle
jb
cmpb
and
xchg
iret
cmp
pop
pop
xchg
leave
mov
cmp
cmp
pop
adc
fwait
shlb
imul
adc
cwtl
xchg
mov
out
inc
ficoms
loope
xlat
in
addl
inc
fs
fcmovnb
mov
mov
mov
xor
div
notl
lahf
imul
in
adc
fcmovnbe
mov
stc
mov
mov
fwait
imull
pushf
aad
imul
mov
fistpl
fisttpll
sarl
icebp
in
loopne
jmp
lcall
js
inc
jle
into
femms
ret
fwait
mov
mov
sbb
inc
cmp
mov
clc
rclb
stos
jecxz
aam
hlt
xorb
shll
test
xchg
idivl
mov
jmp
fstpl
jb
aad
enter
ret
bound
lock
stos
cld
mov
fldl
clc
jp
lret
fcmovnb
movsb
mov
leave
push
mov
aaa
xchg
lret
cli
sti
xor
xchg
out
mov
out
enter
repz
pop
and
aam
inc
fucomp
sbb
ja
mov
jmp
adc
out
rolb
aad
ret
cltd
fcoml
std
test
rcr
xchg
aad
push
jb
mov
adc
add
psrad
ficoms
pop
adc
inc
jecxz
cmp
lods
mov
es
and
dec
jl,pt
xor
data16
xlat
xlat
jb
sbb
adc
ror
bnd
sbb
mov
mov
sub
rol
mov
sbb
jp
movsl
jnp
xchg
paddd
stos
icebp
decl
lahf
dec
lcall
popf
mov
pop
les
scas
enter
push
pop
mov
dec
mov
pop
mov
mov
sbb
nop
xchg
out
std
fbstp
or
lcall
hlt
movsb
idivl
push
mov
cmp
mov
or
dec
or
fistpll
dec
xchg
icebp
into
mov
sbb
xlat
inc
dec
es
inc
mov
lods
push
inc
or
add
push
rorb
jb
stc
cmpsb
or
pop
leave
pop
nop
add
pop
popl
xlat
idivl
mov
ja
push
inc
cmp
xchg
dec
mov
push
pop
mov
lds
pop
es
fwait
dec
iret
mov
and
push
notl
push
imul
ror
sbb
fmull
roll
stos
xchg
ret
fcoms
or
icebp
fsts
dec
ret
cmpsl
or
cmpsb
aaa
rcll
mov
fucompp
inc
cmp
shll
aam
mov
lods
inc
inc
or
sarb
mov
faddl
mov
adc
xor
xor
das
mov
sub
dec
and
in
cmpsl
movsl
adc
jbe
icebp
mov
les
xchg
int
sti
lahf
or
es
mov
mov
aad
aaa
dec
mov
mov
loop
sarb
sti
push
fistl
stos
decl
pop
xor
cli
cld
and
fwait
push
mov
inc
pop
jb
pop
mov
leave
adc
pop
dec
jmp
fidivs
cmpsl
or
mov
into
xor
ret
mov
clc
inc
outsl
push
xchg
addl
mov
shlb
push
movhlps
rcrl
cmpsl
lret
xor
inc
mov
stc
lret
test
test
stos
sub
cmc
adc
xor
ret
aaa
fidivrs
sbb
sub
mov
movb
jae
sbb
scas
mov
adcb
inc
jge
dec
adc
cmpsl
sbb
pop
loop
jb
add
xchg
inc
test
addl
jmp
xchg
sbb
mov
push
mov
jno
xchg
sbb
xlat
test
icebp
cmc
es
scas
fwait
pop
xor
pop
pop
fnstcw
stos
xchg
xor
stos
cmpsl
push
or
inc
jbe
inc
cmp
xlat
pop
stos
clc
stc
push
xor
mov
out
jmp
jae
lock
adc
lcall
pop
pop
fcmovu
pop
push
mov
ret
fcmovnbe
adc
pop
bnd
sti
xlat
rcll
mov
in
cmp
iret
push
pop
pop
sbb
test
cld
xlat
dec
ss
fisttpl
xor
mov
fists
repnz
repnz
cmc
inc
cs
pop
xchg
xchg
or
shl
mov
push
cmpsl
inc
bswap
pusha
sti
xlat
test
mov
sahf
and
sbb
leave
mov
mov
mov
or
or
ret
or
pop
adc
test
mov
fcmovbe
inc
nop
call
or
fnstenv
lods
mov
leave
es
push
inc
jle
rcrb
aam
push
sbb
cli
mov
push
or
jge
leave
out
cwtl
fwait
cltd
les
jge
mov
sti
lret
lcall
fsubrs
repz
xchg
sub
sub
mov
sub
sti
je
and
xor
and
mov
sub
pop
lock
mov
inc
mov
and
inc
cmp
or
inc
ja
jbe,pt
popf
push
lret
or
add
clc
mov
inc
movsl
dec
and
out
xchg
adc
dec
leave
das
sub
jbe
add
push
ror
mov
jo
mov
push
imul
cmp
inc
push
inc
cmp
arpl
cmp
mov
xchg
add
es
cld
jmp
dec
ret
mov
lret
sbb
mov
cmc
dec
stc
dec
idiv
push
cmc
adc
jae
xchg
sbb
push
xchg
pop
sbb
inc
cmpsl
xor
xor
inc
push
fbstp
push
adc
icebp
test
push
imul
leave
out
jb
rcrb
jmp
push
adc
push
mull
mov
clc
cmc
mov
jnp
ficoms
mov
pop
pop
int
roll
mov
mov
pop
dec
inc
hlt
or
mov
repnz
ja
orb
jno
jecxz
enter
fdivs
adc
icebp
in
popf
rorl
inc
es
push
mov
mov
sbb
shll
mov
sbb
push
sarl
fs
mov
fnsave
inc
fwait
adc
leave
add
daa
push
sub
push
push
loope
jo
push
push
lret
popf
test
pop
xchg
test
jb
push
pop
mov
je
into
in
add
cs
js
lea
loope
mov
cmpsb
scas
cmp
push
xlat
jmp
xor
jo
pop
out
pop
es
add
pop
std
out
jp
test
mov
inc
adc
icebp
inc
push
xchg
xchg
dec
imul
inc
inc
jg
pop
push
icebp
jp
sbb
inc
fildll
jnp
repnz
fldt
fldt
mov
sbb
adc
mov
inc
notb
jp
outsb
mov
mov
push
mov
dec
iret
cmp
addr16
fimull
js
out
out
mov
ja
xchg
mov
mov
fisubl
push
fnstenv
in
lahf
setae
loope
in
xchg
insl
pop
lock
mov
jno
jecxz
jmp
sub
jns
lods
leave
lds
adc
or
cld
stos
in
aaa
mov
jmp
sub
inc
lods
in
fadds
jnp
cmpsb
sub
inc
cmc
pop
xlat
ds
sbb
mov
add
pop
cld
movl
push
es
push
or
push
mov
movsb
divl
int
jmp
aad
pushf
rorl
inc
cmp
adc
xchg
jg
pop
push
scas
push
jl
je
cmp
sbb
cld
cmpsb
or
lock
fstpl
loope
fsubl
cmp
out
mov
dec
mov
sbb
sti
sahf
lret
fistl
mov
cmp
stc
fiadds
or
insl
orl
dec
pop
inc
push
adc
movsb
mov
lods
leave
inc
mov
pop
lods
loop
cmc
inc
mov
jecxz
and
lods
xor
ret
sbb
lcall
pop
addb
daa
adc
or
cmpsl
das
dec
add
movsl
pop
push
leave
and
fnsave
loope
xchg
lea
pop
or
lahf
lods
sti
or
rolb
aas
in
loop
push
mov
add
shll
jbe
aaa
out
add
jle
cmp
loop
jb
shrb
adc
sti
jnp
dec
and
push
and
fcmovnu
lea
sbb
inc
and
fists
add
or
xlat
mov
pop
movsb
js
add
push
inc
test
adc
sub
inc
repnz
sbb
pusha
xlat
test
dec
adc
mov
fstpt
je
push
imul
push
cmp
and
push
fsubp
inc
into
icebp
loope
movsb
or
mov
pop
imull
es
mov
mov
push
dec
inc
push
enter
js
int
inc
outsb
test
fcomi
ret
xchg
lahf
insl
add
pop
je
fisttpl
shr
popf
sbb
or
xor
out
enter
inc
cmc
in
aaa
mov
push
pop
pusha
push
fldl
bnd
dec
dec
dec
push
pop
pop
mov
shrb
dec
xor
pop
sub
cld
push
mov
sub
cltd
add
xlat
das
jnp
push
imul
movsb
test
inc
xor
aam
pop
mov
in
sbb
push
mov
jne
lret
sbbl
ss
pop
jmp
ja
fldlg2
dec
cmpsl
lcall
shll
cmpsl
outsb
in
orl
sub
sub
mov
cmpsl
sbb
or
cmp
lods
incl
arpl
jmp
hlt
aam
divl
jb
incl
into
inc
shr
jnp
jmp
push
xchg
out
push
pop
xchg
adcb
adc
cmpsb
insb
insb
add
pop
cs
mov
lret
jl
mov
jbe
jo
jmp
leave
insl
mov
rcl
pop
xchg
mov
push
push
cmpsl
hlt
dec
lret
inc
int3
mov
push
dec
pop
repz
out
notb
inc
in
insb
icebp
lods
sbb
rcll
mov
pop
cwtl
int3
int
jbe
pop
mov
xchg
lods
jnp
inc
imul
sbb
aad
ds
lea
sti
and
push
pop
cmpb
push
leave
mov
out
idivl
inc
repnz
hlt
fwait
or
fistpl
or
sub
add
fdivs
jae
sbb
ss
call
subb
inc
in
jmp
test
repnz
adc
das
xchg
xchg
inc
ret
repnz
inc
jno
mov
lods
mov
out
sbb
sbb
aad
push
pop
icebp
add
cmpsl
push
lock
sub
mov
fmull
shlb
mov
cmp
push
mov
flds
fs
cmp
scas
mov
cld
mov
mov
pop
adc
movsl
jge
xor
pop
jno
inc
inc
jnp
push
lcall
dec
mov
ficoml
fistl
add
inc
js
orl
repz
insl
push
fs
scas
xlat
sub
jl
or
insb
and
mov
ret
and
ret
cmpsb
xchg
jecxz
jge
aad
stos
xchg
push
std
xor
mov
mov
dec
hlt
lods
mov
in
sti
in
aas
stc
cmp
mov
sbb
cltd
or
xchg
fists
das
adc
decl
jecxz
push
lret
sub
dec
pop
or
int
gs
mov
pop
mov
add
adc
mov
clc
xchg
cmp
inc
xor
xchg
adc
add
repnz
push
iret
push
sub
stos
lret
into
and
test
insl
pop
jae
sub
negl
mov
inc
xchg
sbb
aam
adc
pop
add
fmuls
ljmp
inc
ficompl
nop
xor
and
dec
jb
pop
xlat
pop
cmpsl
and
repnz
aas
fstps
pop
scas
ret
fsubr
pop
fcomi
lods
add
int3
ficoms
loop
orb
xchg
adc
aaa
cwtl
lcall
bound
pop
addr16
mov
ss
jp
popf
inc
mov
adc
fisttpll
stos
xlat
inc
inc
xor
mov
cli
inc
mov
imull
mov
iret
jl
repz
jae
add
add
test
daa
es
jmp
sti
sti
push
or
add
mov
inc
mov
dec
adc
inc
js
test
rcll
cmpsb
jmp
xorl
push
stos
mov
mov
out
sbb
cs
repz
mov
xor
pop
movsb
in
fimull
xor
push
repnz
xchg
stos
dec
pop
mov
stos
adc
adc
inc
cs
pop
fldl
push
or
ret
push
inc
mov
and
xor
cmpb
repnz
fdivrs
jg
pushf
mov
es
jno
imul
scas
in
add
out
fwait
adc
pop
clc
fidivrl
sbb
cltd
mov
popl
lret
mov
inc
xchg
cmp
cmp
js
sbb
ds
jbe
ret
pop
insl
mov
lret
mov
xchg
mov
repnz
inc
gs
in
cli
cs
xor
inc
mov
sbb
push
inc
jg
dec
decb
sbb
xchg
cmp
es
hlt
and
fs
cmpsl
adc
cs
xchg
stc
dec
fiaddl
rorl
xorl
xchg
pop
jno
inc
mov
fidivrl
sbb
dec
or
stc
inc
xchg
jbe
sub
mov
sub
fadds
add
push
insl
and
test
adc
fbstp
pop
sbb
fistpl
mov
pop
or
jg
scas
xor
int
push
push
pop
mov
popf
pop
sub
iret
or
xor
imulb
loope
inc
jae
inc
jns
test
movsb
out
lea
xchg
fwait
mov
fidivrl
iret
mov
xlat
imul
dec
jle
pop
dec
mov
js
xchg
add
inc
inc
es
rorl
mov
fcmovbe
sar
push
fcomp
bnd
stos
leave
inc
xor
leave
inc
inc
fldl
mov
jge
mull
ret
stc
insb
sbb
leave
out
mov
aaa
mov
jl
out
sti
pushf
sbb
fisubrl
ror
mov
xchg
call
mov
pusha
iret
loop
stc
lds
notb
fwait
mov
fistl
inc
jb
test
mov
cmc
push
mov
dec
jnp
aad
adc
ret
jnp
aad
mov
dec
xchg
stos
out
clc
xor
jl
repz
mov
gs
movsl
rcll
add
fiaddl
fwait
xchg
stos
pop
fidivrs
fstl
push
dec
repz
xor
xlat
xorl
imul
sbb
cmpsl
jb
dec
stos
cmpsl
adc
dec
das
out
or
mov
cli
xlat
jno
stc
jns
xlat
pop
ret
cmc
inc
into
pushf
lret
fcmovne
aaa
leave
xlat
popf
xlat
lcall
xchg
fsubrl
ret
push
fisubl
xor
fnsave
push
sub
movb
push
mov
scas
pop
jg
iret
aad
sub
aaa
pop
test
mov
push
lods
jge
jg
out
std
movsb
jp
mov
aad
xchg
outsl
cmc
push
inc
je
hlt
dec
ljmp
lcall
mov
aad
stc
movb
mov
ret
lcall
repz
rcl
mov
stc
jge
stos
dec
aam
jb
dec
in
rcrb
sbb
popf
xchg
inc
lahf
loope
lock
jmp
or
mov
lret
jle
out
lcall
inc
inc
pop
sbb
sbb
imul
adc
inc
jo
xchg
fmuls
mov
outsb
inc
xchg
xchg
sbb
aam
push
xchg
xchg
cmpsl
dec
jo
xchg
repnz
jmp
sbb
sub
hlt
add
push
gs
repnz
cmpsb
out
and
mov
dec
in
push
test
xor
dec
out
pop
add
fwait
sar
jmp
pop
mov
and
xor
xchg
hlt
sub
mov
movsl
incl
std
push
and
stos
xchg
cmc
mov
es
out
mov
dec
inc
mov
dec
adc
in
xor
imul
dec
mov
sub
sbb
push
cmpsb
add
xor
and
adc
pop
dec
out
and
aam
push
std
js
idivl
jbe
std
jnp
ja
lret
mov
std
cmp
jmp
mov
ljmp
adcl
sub
add
cmp
iret
scas
xor
out
leave
clc
adc
push
lahf
inc
int
repz
xchg
sbb
leave
pop
shlb
ret
and
xor
fistpl
adc
rcrl
xchg
xor
in
aas
insl
xchg
jne
xchg
sub
mov
mov
adc
xchg
mov
push
mov
test
cmpsl
jmp
mov
sbb
mov
xchg
adc
jno
xchg
push
xchg
jge
sti
das
sub
out
xor
je
inc
addr16
into
andl
lret
add
adc
leave
jns
or
sbb
imul
movsl
cli
mov
fldcw
adc
daa
lods
push
aad
es
xchg
shll
or
data16
jae
cltd
jns
xchg
jno
dec
ljmp
cmpsl
call
xor
push
mov
sbb
adc
jb
ljmp
sub
std
push
push
xor
les
rol
cmc
sub
std
inc
iret
out
jmp
aam
ret
out
sbb
lcall
mov
sbbl
icebp
mov
arpl
or
push
imul
icebp
pop
xchg
lds
or
fdivrs
inc
dec
inc
icebp
aad
push
jg
popl
ljmp
adc
sbb
std
mov
ret
push
rorb
pop
sub
add
sbb
xlat
stos
xor
pop
dec
push
mov
add
xchg
out
out
xchg
rcl
mul
cmc
in
nop
scas
adc
outsl
jae
jecxz
cmp
out
jae
loop
dec
and
les
cmc
scas
pop
push
out
je
repz
es
inc
test
out
les
or
lret
ret
sub
mov
lea
jb
jg
mov
lret
repz
lods
insb
sub
aam
lods
xchg
xchg
ret
test
xchg
rcrl
inc
inc
mov
fildl
cltd
xor
add
push
mov
pop
pop
jp
icebp
and
mov
adc
out
mov
sbb
xor
fs
xchg
stc
push
ja
aad
sub
cmpsl
adc
cmc
leave
inc
jbe
cltd
inc
je
xchg
icebp
int3
jg
push
aad
xchg
repnz
ret
es
outsl
push
cmpsl
sub
sub
ror
rcrl
leave
dec
mov
push
repnz
fdivs
fnstcw
xchg
jns
stos
fildl
mov
in
loopne
xchg
xchg
pop
and
fistl
xlat
test
pop
cmc
fcmovnu
je
inc
mov
insb
dec
or
pop
jnp
fildll
jge
lods
ss
lret
rol
inc
es
push
cli
dec
sti
xor
or
or
cmc
fnstsw
sbb
dec
mov
popf
mov
repz
ret
imull
push
jle
cmp
loope
sub
insb
lcall
jecxz
inc
lret
sti
push
je
movsl
mov
or
mov
xchg
aad
shl
inc
repnz
mov
in
mov
divl
cwtl
test
push
inc
imul
loope
repz
aad
xchg
test
ja
stos
es
cmpb
insl
xchg
cld
xor
aad
aam
fists
fcmovne
es
inc
push
jns
push
sti
shll
dec
push
inc
stos
aad
pop
xor
pop
inc
aam
lret
daa
pop
not
inc
call
add
cmp
mov
sub
shl
test
mov
pop
test
jo
jg
jae
inc
sti
pop
mov
in
out
aaa
add
mov
push
rolb
stos
sub
fcmovb
rol
dec
mov
ret
es
hlt
pop
push
push
repnz
dec
stos
stos
mov
aad
adc
xchg
push
dec
dec
sahf
sbb
imul
adc
test
gs
xchg
cli
lock
xchg
mov
das
out
aad
xchg
mov
imul
push
push
jmp
test
adc
sbb
push
pop
lods
lea
lods
fsubl
cld
repnz
mov
arpl
mov
je
mov
jne
mov
stos
icebp
xor
ljmp
repnz
scas
dec
jae
insl
pop
std
xor
fbld
xchg
cld
jne
xlat
lods
xchg
cmpsb
ret
pop
pop
sbb
mov
je
adc
pop
out
mov
sbb
sbb
push
xor
sbb
jg
inc
cmp
and
xchg
or
xchg
mov
push
pop
hlt
adc
mov
loope
xchg
jo
fwait
jae
jle
sbb
push
jmp
adc
les
notl
stos
pop
jne
xor
test
int
cmpsb
push
pusha
movsb
and
aas
leave
xchg
out
mov
pop
lods
push
int
rolb
push
jnp
adc
shlb
push
ret
das
inc
mov
outsb
dec
adc
push
ficomps
imul
and
cltd
hlt
or
jbe
adcb
xchg
xchg
je
mov
cmp
xchg
cltd
and
cmpsl
inc
pop
mulb
sub
sbbl
ret
shrl
rcll
cmpsb
sbb
cltd
test
aad
cs
aad
sar
ret
xchg
stmxcsr
mov
mov
sbb
push
push
lahf
mov
mov
lods
jg
dec
mov
es
sub
imul
stos
sbb
scas
imul
inc
std
mov
cltd
xchg
and
ret
fmuls
adc
inc
sar
jmp
daa
ret
sbb
inc
pop
aad
pop
sub
das
les
fs
mov
push
pop
rcrl
rolb
sarl
es
adc
shrl
test
push
cmpsl
fldenv
push
mov
push
aas
jecxz,pn
cmp
mov
adc
mov
push
dec
pop
pop
fsts
adc
aad
mov
sbb
push
jl
mov
fdecstp
sbb
jge
popf
push
pop
aad
ljmp
imul
fcmovu
cmpsl
pusha
cmp
mov
mov
xchg
pop
fimull
jmp
dec
xlat
loope
dec
pop
stc
in
xchg
mov
pop
cli
cmpsl
and
fsubrl
adc
popa
jmp
rorl
leave
mov
bnd
jae
cmp
fcmove
repz
fcmovnu
jno
aad
icebp
jns
repz
mulb
or
xlat
hlt
test
mull
inc
add
sti
jg
nop
dec
push
fstpl
es
pop
repnz
dec
xchg
ja
imul
leave
cmp
lahf
inc
mov
test
js
clc
out
jbe
shr
add
mov
xor
fldenv
lret
test
shlb
fldenv
xchg
inc
lods
lods
inc
movsb
arpl
xchg
repnz
ret
push
loopne
jno
imul
fstpt
mov
je
inc
xchg
mov
leave
push
cltd
jb
and
ljmp
jne
jecxz
inc
dec
push
xor
std
fistps
test
in
mov
jmp
mov
push
rorb
inc
xchg
lock
aas
pushf
cmp
ret
mov
cld
sbb
cmpsb
push
dec
divb
and
and
icebp
test
cmpsb
xchg
cwtl
sub
lods
aad
call
push
push
repnz
cld
mov
std
cs
sbb
stos
jmp
push
ret
fldenv
pop
xor
xchg
mov
mov
repz
xchg
cmp
sbb
inc
cmp
sbb
lea
add
and
cmpsl
mov
scas
popa
jg
cmp
rclb
sub
inc
dec
xor
fdivrl
pop
out
fstl
xor
ja
mov
je
xor
mov
cmpsl
cli
add
cmp
add
lcall
xor
addr16
fucomp
in
leave
fisttps
aad
jno
call
jbe
mov
pushf
sbb
push
repnz
adc
aad
aas
jle
aaa
xchg
pop
pop
push
mov
lea
imul
pop
dec
fimull
inc
dec
rol
xchg
mov
cmc
or
xchg
cmp
mov
jge
jns
fcmovbe
jle
adc
cmc
pop
int
adc
mov
push
adc
jle
in
cs
mov
mov
icebp
adc
arpl
les
sbb
mov
jbe
sbb
mov
decl
rolb
jp
shll
cmpsl
dec
shrb
repnz
call
mov
clc
cmp
add
dec
cmpsl
pushl
insb
fcmove
js
cmpb
or
cmp
cs
addr16
cmp
push
dec
push
pop
jge
lcall
lret
mov
xchg
sbb
cmpsl
loopne
scas
pop
xchg
enter
xchg
int3
xchg
cld
sbb
or
icebp
decb
addb
cmp
sbb
je
ret
loope
or
inc
cld
daa
mov
sbb
mov
iret
pop
enter
lret
fistpl
fnstenv
mov
inc
cmc
repnz
das
xchg
vmwrite
imul
inc
not
dec
sbb
pop
push
jp
les
test
push
aam
out
aam
adcl
inc
sub
call
rcll
movsw
int3
push
popa
leave
cmp
shll
jbe
call
imul
inc
xchg
jmp
out
icebp
arpl
xchg
daa
ror
and
popf
xor
addr16
fxch
loop
fwait
inc
incl
inc
sub
mov
pop
fistpll
clc
adc
mov
add
and
daa
push
mov
jmp
add
outsb
cltd
mov
stos
addr16
cmp
jnp
inc
cmp
cmc
cld
scas
ficompl
jg
dec
push
lods
leave
lcall
xchg
mov
lret
lods
push
inc
dec
inc
out
jmp
or
fldcw
mov
ja
fldcw
daa
es
jns
add
cmp
fs
movsb
inc
mov
cmpsl
ja
push
pusha
jae
jae
xlat
std
paddsb
jnp
mov
imul
or
sub
out
les
inc
mov
jno,pn
movsb
mov
out
xchg
xor
out
leave
dec
stos
xor
fisttps
push
mov
mov
inc
push
mov
xlat
fisubrs
dec
stos
jnp
push
imul
cmpsl
jp
cmpsb
and
popf
out
jmp
or
or
fnstenv
mov
call
in
adc
cmpsl
mov
push
cmpsl
into
fwait
aas
inc
pop
sti
push
adc
push
add
jle
test
in
mov
cmc
xchg
movsb
adc
pop
cmpsl
and
inc
sub
xor
icebp
imul
cmp
testb
push
outsb
pop
lods
test
into
idivl
leave
mov
xchg
loope
sbb
xchg
or
ss
cwtl
xlat
mov
jo
sub
dec
xchg
inc
call
lret
sarb
inc
inc
inc
mov
pop
push
sbb
daa
jns
pop
inc
xchg
sub
push
cmc
cltd
jge
pop
or
lret
push
movsl
push
adc
adc
pop
dec
jno
lods
fsubrs
fsubrs
rcrb
mov
rcll
mov
popf
sbb
cli
mov
mov
dec
jmp
bound
pop
insb
cwtl
mov
loope
fimull
rcl
push
shlb
popa
add
dec
and
dec
mov
pop
push
outsl
lock
daa
hlt
inc
cld
dec
mov
insb
sar
jmp
xchg
repz
jle
in
mov
xor
push
push
xchg
sub
rcr
inc
dec
loope
and
lret
daa
bnd
pop
pop
push
jns
fwait
jne
mov
loope
roll
idivb
pusha
imul
stos
adcl
xor
lock
icebp
or
dec
push
stos
adcl
inc
in
pop
ss
add
fimuls
mov
in
cli
adc
lods
test
and
cmpsl
scas
mov
fbstp
rol
dec
jmp
popa
jp
repz
loope
dec
scas
xor
inc
mov
pop
lret
in
repnz
jns
mov
pop
cmp
mov
or
test
ret
test
subl
sub
adc
push
js
cs
mulb
lds
cmc
ret
daa
psubd
dec
jno
dec
and
scas
stc
ficompl
ficomps
dec
xlat
fisttps
jb
test
mov
and
loope
lret
push
xchg
imul
call
xchg
fists
repz
daa
jnp
in
push
mov
cli
js
mov
pop
les
pop
clc
cmc
cltd
ret
rolb
sahf
xchg
jns
push
out
mov
daa
and
iret
push
stc
icebp
jp
push
adc
inc
xchg
ret
mov
or
sub
aam
outsl
jmp
popf
mov
cmpb
and
cmpsb
leave
mov
repz
test
pusha
inc
ficoml
mov
sub
jmp
xchg
adc
or
cmp
sub
dec
cmpsl
cmc
inc
jge
push
repz
into
add
int3
xchg
loop
in
xlat
pop
lock
push
rcr
orb
push
sub
hlt
rorb
push
sub
push
sbb
lcall
repnz
mov
cli
push
pop
sbb
ljmp
xor
cmpsl
push
lock
mov
arpl
mov
div
inc
je
hlt
mov
repnz
inc
push
pop
mov
shrl
push
jno
xlat
movl
fwait
test
pop
popf
add
lock
and
out
lret
push
imul
daa
xchg
mov
loopne
stos
xor
cmpsl
add
lds
xchg
jmp
filds
push
lret
inc
hlt
icebp
rclb
xchg
adc
pop
lcall
pop
dec
pop
ret
or
lcall
fisubl
loop
daa
add
cmp
out
ficompl
push
cmp
xor
das
sbb
inc
iret
out
insl
movsb
xlat
pop
push
pusha
aam
sub
scas
movsl
lock
adc
pop
sbbl
sub
das
mov
call
push
dec
jmp
insl
cli
ret
pusha
cmpsb
ljmp
lods
repz
lahf
xchg
cmpsl
adc
inc
aad
fcmovnb
add
out
sbb
add
lahf
add
inc
scas
mov
jnp
adc
adc
jge
lock
imul
hlt
push
pop
cmpsl
ljmp
jmp
push
push
lahf
lock
cmp
fwait
jbe
sbb
ret
push
into
mov
jle
loopne
hlt
shll
push
mov
dec
shrb
cmpsl
inc
rclb
rorl
mov
je
xchg
push
mov
push
test
jo
xchg
inc
repnz
sbb
pop
or
xchg
jne
push
xchg
jno
push
xor
inc
pop
inc
lock
jecxz
ds
dec
ljmp
mov
xchg
xchg
dec
jbe
pop
shl
xchg
sub
scas
jmp
dec
xchg
mov
cmc
cmpl
iret
aad
lock
aas
aaa
inc
sbb
daa
enter
pop
dec
push
add
clc
mov
hlt
pop
and
sbb
test
jl
fcmovne
adc
cmp
sub
jle
incb
adc
inc
test
mov
pop
scas
sbb
lock
addr16
sub
jmp
pop
repnz
sub
incl
stc
dec
cmpsb
xchg
cwtl
ret
mov
sahf
xor
je
push
dec
ds
gs
or
mov
jno
adc
insb
fsts
or
xchg
inc
jp
repz
jbe
cmp
rcrl
mov
loope
pop
and
xchg
in
pop
cwtl
lock
scas
xchg
mov
sbb
xor
dec
xchg
push
rclb
sub
adc
sub
mov
pop
out
cmc
jo
xchg
pop
dec
xchg
jne
int3
cmpsl
mull
fmul
es
push
and
cmc
fcmovb
test
ljmp
bound
push
sarb
bound
xchg
lea
pushf
jne
mov
dec
xchg
inc
out
dec
ret
in
dec
push
inc
jno
imul
rcl
push
xor
push
sub
lahf
pop
pop
sbb
push
push
sbb
loopne
pop
movsb
roll
mov
xchg
ficoml
mov
mov
push
aaa
stos
imulb
pop
inc
cmp
mov
dec
cmc
dec
xchg
jg
jle
pusha
fisubrl
push
xchg
cmpsl
frstor
mov
lret
inc
js
sti
xorl
insb
rcr
pop
loopne
adc
nop
mov
mov
pop
loope
aaa
repnz
mov
pop
aam
lods
movb
inc
ret
sub
test
inc
std
outsb
aam
popf
fistl
shll
rcr
fbstp
stc
push
push
xchg
cltd
or
xchg
imul
fcmovnb
xlat
cli
outsl
icebp
mov
and
in
fidivs
in
sub
movsl
addr16
loop
sti
jb
inc
aad
in
cmc
ret
gs
inc
cmc
test
pop
cld
inc
jge
push
mov
icebp
mulb
xchg
push
int
sahf
loop
je
mov
lahf
fisttpl
imul
sbb
imul
cmp
sub
push
je
xor
sarb
stos
xor
inc
iret
test
mov
cmp
insb
mov
cmp
test
pop
xlat
sahf
and
mov
fcmovb
mov
push
fsubs
sbb
cmpsb
mov
filds
push
push
adc
icebp
sbb
jno
aad
lods
cs
addr16
mov
sub
cmpsl
outsl
cli
adc
mov
movsb
adc
mov
in
cs
jg
mov
pop
aaa
aaa
test
les
jb
in
setp
push
mov
test
sbb
lcall
pop
add
sub
loop
movsb
jns
cwtl
mov
sub
mov
jbe
inc
mov
and
mov
jns
shl
out
movsb
test
ret
jmp
ret
or
jo
mov
cld
ja
jmp
cmp
rcrb
lcall
fnstenv
jb
es
xchg
jnp
rcr
mov
push
jno
dec
stos
and
push
es
pop
pop
scas
ja
adc
push
stos
aaa
aas
inc
mov
sbb
push
add
pop
pop
jge
shll
cmp
mov
lock
sub
add
inc
shll
bound
aad
jecxz
loopne
sub
adc
and
js
jge
inc
stc
out
out
pop
and
dec
xchg
pop
jns
inc
pop
mov
das
adc
cld
pop
int
jnp
cmpsl
aam
inc
insl
mov
fsub
xchg
inc
fldenv
testl
jle
jb
mov
movsb
mov
ss
lcall
ret
inc
jp
clc
test
sbb
popa
mov
mov
bswap
negb
ret
jo
xchg
mov
test
xchg
addr16
push
jo
mov
adc
out
ficompl
cmp
stc
jmp
push
pop
xchg
in
inc
adc
ja
pop
rcl
cmpsl
dec
insl
push
cmp
adc
jb
sarb
fsubs
enter
popf
cmpsl
andb
call
xchg
insb
out
fildl
mov
push
jnp
push
movsl
sub
outsl
test
shrb
adc
loopne
jns
pop
xchg
mov
push
mov
out
stos
mov
mov
loopne
xchg
push
dec
inc
ds
xchg
push
out
mov
out
jmp
lahf
test
or
rclb
out
outsl
cmpsb
loopne
dec
lock
adc
xchg
xlat
es
mov
nop
mov
xchg
inc
xchg
in
add
rcrb
pop
pop
ss
lock
push
push
rcl
mov
int
lret
dec
mov
shll
push
mov
rol
addb
test
mov
ret
sub
sti
sbb
dec
xor
aad
push
cmpsl
push
repz
adc
dec
outsl
hlt
mov
mov
mov
push
sti
or
out
pop
mov
fmul
jae
inc
test
int
cs
stos
xchg
leave
sub
or
push
cmp
jnp
aam
push
fsubrs
repnz
push
mov
dec
sub
dec
or
fsub
jo
xchg
psrlw
and
xchg
fstpt
add
push
nop
jo
pop
cmpsl
sub
into
sbb
jo
jmp
adc
mov
ja
std
call
lcall
rolb
es
inc
mov
test
imul
mov
cmp
lcall
cmp
push
lods
mov
pop
sbb
mov
inc
inc
xchg
sbb
sbb
test
fmuls
sub
repz
and
sbb
pop
and
cmpb
pushf
xchg
cmpsl
ljmp
not
jbe
outsb
mov
shr
lahf
push
push
fmuls
movsb
mov
fsts
add
fistl
add
inc
sub
xchg
xchg
pop
push
imul
ret
test
fldt
cmpsb
push
and
jne
sbb
adc
xchg
mov
xlat
pop
pop
push
stc
enter
cmpsl
cmp
jg
test
xor
jnp
xchg
sub
stos
jle
add
inc
scas
xor
popf
and
add
hlt
lods
out
cltd
bnd
inc
das
cmp
mov
push
addb
xchg
mov
popf
pop
mov
sub
ja
cmpsl
jp
jb
clc
fistl
pop
stos
insl
mov
pop
cmp
pop
sub
orb
stos
dec
cmp
jbe
jns
cmp
dec
xchg
imul
dec
test
jnp
pop
mov
inc
jl
test
sahf
dec
fldt
jae
xchg
dec
out
push
stc
ficoms
xchg
testb
push
lret
xlat
mov
pop
mov
mov
inc
es
insl
mov
addb
call
xor
adc
adc
xchg
inc
mov
lret
fsubrs
scas
fs
mov
jg
sub
add
adc
push
arpl
jnp
mov
sub
mov
mov
add
or
iret
pop
into
push
jl
adc
imul
mov
push
cli
pushf
scas
xorl
sub
jo
out
repz
xchg
jge
lahf
and
inc
mov
adc
cmp
imul
jl
or
repnz
roll
and
mov
sti
inc
cmp
loop
fistl
dec
xchg
imul
jno
push
sbb
rorb
sbb
out
popa
insb
icebp
out
sbb
cmp
scas
jge
inc
or
test
dec
sub
sbb
sbb
fists
adc
add
orl
iret
mul
addb
pop
sub
lret
test
insb
aad
dec
xor
inc
insl
pop
xchg
daa
inc
imul
cltd
jl
out
cmpsl
lds
pop
inc
insl
dec
inc
fiaddl
mov
ret
push
adc
cli
sbb
not
push
cs
or
jecxz
lret
or
fadd
arpl
imul
sbb
hlt
int3
inc
dec
pop
insb
xchg
cmc
call
sub
rclb
nop
mov
or
shlb
or
fcmovbe
mov
dec
sub
push
inc
adc
fwait
dec
inc
xchg
insl
xchg
leave
xchg
pop
scas
cmc
push
push
mov
stc
sahf
sub
pop
sahf
pop
push
push
fld
sbb
jl
xchg
jl
repnz
jp
pop
mov
inc
xchg
cs
std
rcll
shl
es
stc
dec
xchg
or
jg
les
mov
and
in
rolb
pop
jmp
pop
sbb
dec
xchg
std
pop
or
sub
hlt
in
mov
lods
mov
jnp
cmp
scas
mov
test
mov
mov
dec
sbb
sub
hlt
subb
push
mov
adc
and
movsb
inc
jbe
mov
test
xchg
mov
leave
lret
cmp
and
fildll
sbb
pop
mov
xchg
add
adc
mov
add
scas
mov
mov
xchg
test
sub
js
cmp
cmpsb
insb
xchg
lock
adc
mov
fcmovne
inc
xor
cmp
push
ret
pop
out
in
pop
mov
out
addl
pop
push
stos
cmpsl
cmp
cld
jecxz
pop
cmpsb
in
stos
mov
pop
cmpsl
les
shrl
dec
xchg
hlt
mov
ss
je
xor
pop
push
xlat
fnstcw
and
jl
fisubrl
fcompl
test
mov
lds
int
aaa
jge
popf
mov
in
ljmp
hlt
jmp
xchg
pop
insl
xacquire
fldenv
shll
ss
mov
das
lcall
aaa
jl
fdivrl
xchg
sbb
insl
or
push
imul
or
lods
out
mov
jmp
dec
in
mov
outsl
lds
mov
out
mov
ficompl
sub
add
enter
outsb
adc
testb
push
mov
pushl
jbe
loope
xchg
call
sbb
fistpll
in
cmpsl
jl
jg
fidivs
pop
or
pop
dec
repnz
adc
gs
aas
mov
aad
shrl
adc
fisttpl
loope
rol
sti
mov
adc
leave
cmpsl
adc
or
mov
in
les
add
cltd
pop
xchg
fstps
xor
aad
mov
es
dec
jae
scas
jns
pop
inc
lret
popa
xchg
pop
adc
in
sti
imul
xchg
cmpsl
insl
dec
loope
adcb
adc
movsl
mov
in
dec
int
enter
mov
test
out
rclb
aaa
loopne
fidivl
shll
ret
mov
sbb
jmp
pusha
fsts
aaa
mov
dec
mov
mov
adcl
jp
mov
lret
inc
push
lods
xchg
sub
insl
and
inc
adc
lret
pop
inc
xchg
sub
fcomp
or
pop
nop
fldl
sub
testb
xlat
pop
pop
into
mov
pop
xchg
repnz
mov
in
pop
jbe
lret
pop
pop
inc
aad
scas
cmpsl
jl
pop
adcl
mov
ja
int
mov
pop
dec
jne
jns
movb
jge
xchg
push
cmpsl
pop
fwait
inc
xor
mov
inc
imul
mov
push
inc
clc
lcall
rcrb
loope
xchg
sti
loope
lret
inc
mov
cmpsb
lock
xchg
in
jmp
sbb
hlt
sbb
sbb
fwait
pop
or
rcr
cmpsl
adc
fsubrs
les
xchg
inc
cmpsl
jns
push
inc
or
push
out
mov
pop
ret
xchg
push
pop
ret
mov
iret
jnp
idivb
xchg
out
mov
gs
iret
jp
ljmp
adc
sbb
pushf
sti
sbb
test
lcall
clc
dec
loope
fstpl
outsb
adc
clc
mov
cwtl
mov
aas
mov
arpl
in
mov
je
imul
mov
sub
icebp
dec
sub
and
cltd
push
dec
jmp
imul
mov
inc
push
loop
pop
xchg
outsb
out
adc
push
in
add
mov
repz
int3
xchg
fs
jge
jnp
out
repnz
sbb
ja
push
xchg
int
jnp
mov
cmp
out
push
fwait
add
push
and
int
jl
addl
add
xor
push
popa
ljmp
jbe
xor
ret
sub
jae
in
outsl
inc
loop
bound
icebp
repnz
enter
icebp
mov
bound
movsb
inc
add
nop
lods
jg
into
daa
rcrl
icebp
jp
inc
mov
addb
mov
sub
insb
dec
adc
lret
dec
les
lods
pop
sarb
push
adc
push
ret
cmc
scas
rcr
adc
rclb
stos
sbb
cld
cmp
test
movsb
xlat
cmp
xlat
sbb
ret
sub
data16
ljmp
cmpl
in
push
cmp
push
xor
push
xchg
xlat
jno
outsl
jmp
push
stos
into
ret
cmp
lcall
cmp
imul
inc
ret
les
push
push
ljmp
test
jo
fcoml
rcl
xchg
xchg
je
in
adc
push
fld
rcr
add
out
fcoms
xchg
mov
iret
frstor
filds
xchg
sahf
repz
pop
int
pop
xlat
mov
xlat
xchg
xchg
xlat
scas
adc
std
fcoms
add
xchg
icebp
repz
cmpsl
cmp
cmc
loop
cltd
pop
inc
push
cmp
inc
cmc
icebp
sahf
movsl
fcompp
gs
sub
xlat
mov
ror
out
call
jo
pop
pop
sub
ss
lods
lock
sub
adcb
push
sar
pop
mov
aam
int3
scas
xor
sub
adcl
sbbb
fiaddl
pop
insl
xor
xlat
out
flds
repz
icebp
addr16
push
out
rcrl
in
repnz
add
cmpl
fsubrs
insb
aas
cmp
pop
pop
lret
mov
fwait
addb
sub
lods
mov
dec
push
inc
out
inc
sbb
jp
cwtl
push
jp
rol
pop
outsb
inc
lahf
and
fmuls
cs
je
int3
push
inc
frstor
pusha
ds
inc
dec
movsl
add
pop
fidivs
bound
jmp
adc
push
je
int3
scas
inc
shr
inc
movsl
rclb
jmp
sbb
insl
mov
insb
mov
les
mov
adc
pop
data16
dec
lods
out
test
dec
push
loop
cmc
icebp
and
shrb
fsqrt
test
push
aas
out
movsl
out
jmp
shl
cmpsl
fwait
push
shl
fs
push
aad
cld
mov
cmc
dec
mov
aad
fucomip
jge
lret
xor
loopne
push
push
push
xor
hlt
cmp
in
push
cwtl
lds
pop
lret
inc
in
lds
in
jbe
or
pop
daa
aam
fcomi
pop
rcrb
jb
fwait
mov
stos
inc
pop
fstpl
outsl
adc
movswl
push
out
in
sub
fdivl
and
bound
in
inc
pop
jg
xchg
adc
adc
in
insl
mov
arpl
adc
xor
mov
cmpsl
inc
notb
aas
lahf
andl
and
pushl
fwait
not
xchg
stos
sti
push
adc
pop
int
push
lods
fists
cmp
in
fbstp
mov
inc
notb
push
pop
cmpsl
inc
pop
mov
aad
fwait
jnp
pop
stos
mov
xor
mov
pop
movsl
inc
push
mov
inc
loope
xor
xorl
sbbl
pop
repz
outsl
mov
jmp
ss
shl
inc
push
pop
cmpsb
loop
mov
fidivs
pushf
out
pop
cltd
aam
adcb
dec
mov
adc
lret
jae
int3
pop
enter
aad
shlb
pop
shl
inc
sti
inc
xor
lret
pop
ret
cmpsb
jle
in
jno
mov
in
cli
ljmp
sti
or
ja
ficompl
jbe
xchg
stos
fstpt
cmc
fnstenv
adc
inc
inc
xchg
fisubrl
sbb
filds
lcall
mov
mov
shlb
push
fmul
inc
mov
jl
cmp
popa
jno
push
mov
es
jno
or
pop
cmp
cmpsl
rcrl
add
cltd
mov
int
or
pop
adc
fst
mov
test
xchg
pop
rcrb
jb
xlat
rcrl
imul
ret
add
lea
add
cmc
add
push
scas
ret
push
push
inc
test
aas
inc
push
add
icebp
inc
inc
mov
js
inc
test
clc
repnz
test
adc
inc
mov
pop
loope
jle
les
lret
dec
les
add
enter
loope
mov
jns
dec
or
into
call
adc
dec
test
call
adc
jb
aaa
jle
les
rcl
fists
stos
fcom
adc
rcr
cmpsl
inc
jecxz
aaa
mov
xorb
inc
stc
mov
cli
cmpsl
int3
sbb
xor
inc
psraw
leave
rolb
imul
push
mov
test
xchg
div
aad
stos
lret
xlat
popl
inc
cmp
sbb
leave
jge
adc
xor
sti
push
inc
cmp
not
rorb
jmp
shr
pop
jbe
cmpsl
sarb
idiv
mov
inc
movsl
pop
mov
and
push
inc
mov
jl
sar
xor
in
sbb
push
fildll
mov
add
push
shll
out
mov
lock
xor
loopne
es
imul
ret
add
dec
imul
jns
iret
ror
jne
insl
inc
mov
jne
and
rcrb
jnp
jb
test
and
icebp
or
jl
clc
jg
pop
dec
mov
pop
xor
loopne
mov
push
fwait
imul
std
icebp
cmc
pop
fidivs
lock
jno
xchg
out
insl
xchg
fists
push
dec
leave
pop
shrl
int3
das
xchg
xchg
add
jmp
call
sbb
mov
fstpt
daa
and
fstps
mov
xlat
push
push
dec
lods
insl
lds
dec
call
repnz
cmpsl
mov
lods
cmp
mov
in
out
jo
push
jns
mov
xchg
stos
es
jb
loop
in
ficomps
es
inc
push
les
add
imul
push
push
adc
xor
pop
cmpsl
aam
mov
adc
out
mov
subb
jg
fucomi
enter
jecxz
sbb
aad
cmp
into
cmp
lahf
fstps
add
insl
adcl
sub
inc
pop
add
xchg
in
pushf
gs
jg
pop
mov
inc
pop
lahf
test
inc
push
sar
movsb
dec
lret
das
xchg
inc
xor
inc
jp
mov
pop
fdivp
jecxz
jns
xchg
fwait
cmp
daa
inc
xor
push
jo
imul
adc
insl
jge
lahf
outsl
test
pop
in
push
push
fs
in
ret
addr16
sub
xchg
adcb
lods
inc
mov
or
pop
dec
repnz
test
and
xchg
or
into
xchg
and
xchg
into
adcb
out
loop
and
ljmp
or
ret
jne
sub
xchg
pushf
out
add
inc
sahf
xor
imull
add
sbb
add
xchg
fldenv
ljmp
sti
into
mov
lahf
int3
es
jmp
jmp
lret
jge
fwait
push
sti
outsl
jle
jns
xlat
lret
shll
cmc
jmp
out
repnz
sti
out
pop
mov
lret
outsb
mov
insl
dec
mov
push
lret
icebp
std
push
lock
cli
push
xor
test
mov
mov
imul
sar
pop
aad
aad
insb
icebp
inc
jp
test
loope
dec
mov
insb
jl
cli
xor
fdivl
addl
xchg
jp
push
testb
dec
jg
xor
inc
add
xor
push
imul
mov
sub
jg
insb
add
sbb
inc
fwait
ret
push
dec
cli
movsl
sbb
mov
pop
xchg
shll
shrl
push
popa
int3
lret
lret
inc
xchg
lret
and
jl
dec
jp
ffree
mov
pop
push
dec
lds
jp
flds
fdivs
fldt
mov
lds
xchg
xor
sbbl
xor
addr16
mov
fbstp
adc
fs
sbb
push
adc
xor
ret
out
cs
xlat
arpl
iret
addr16
sub
push
mov
xchg
xchg
xor
scas
add
fcmovnbe
lds
mov
jae
inc
inc
and
imul
mov
rorl
nop
cs
mov
jno
fwait
lret
jb
lods
fnstcw
fdivs
mov
psrld
sbb
test
dec
inc
cmp
repnz
fmulp
xchg
sbb
das
push
dec
rorl
push
in
cli
stos
sahf
nop
mov
jb
pop
xlat
jbe
dec
add
popf
les
lock
cmpb
mov
in
push
push
stc
aad
xchg
adc
imul
push
mov
jb
mov
sub
push
fstpl
ljmp
sbb
in
push
jmp
test
loopne
pop
push
add
sbb
arpl
jne
xlat
dec
xchg
fcmovnu
jnp
adc
fucompp
rcrb
popf
xchg
sar
imul
pop
sub
test
lea
jae
or
psadbw
inc
push
rol
nop
sbb
icebp
jno
pop
and
inc
sar
sarl
inc
imul
stos
jbe
inc
std
add
ja
sbb
mov
and
movb
jge
pop
jno
sbb
inc
or
or
pusha
incb
ret
push
lret
or
leave
or
daa
stc
out
lock
and
js
addr16
outsb
sbb
jmp
icebp
addr16
test
add
pop
in
mov
int3
xor
pushf
inc
pop
mov
addr16
pusha
jle
sbb
mov
pusha
insl
lret
fwait
inc
out
or
mov
std
repnz
imul
insb
jle
mov
jb
shll
fimull
lock
xor
lret
subl
aaa
fcoms
leave
jb
jb
data16
cmp
ret
sbb
out
out
nop
out
and
mov
in
sbb
lahf
xchg
dec
adc
out
jb
inc
daa
test
repnz
jae
outsl
es
daa
cmp
pop
test
cmpsl
cmpsl
in
add
fisttps
shll
dec
loope
rcr
pop
jno
aad
gs
data16
pop
clc
inc
pusha
stc
jmp
mov
lods
xchg
outsb
mov
into
sbb
adc
dec
loopne
dec
ret
and
in
lea
xlat
push
fs
xlat
and
lock
sbb
pop
mov
fcmove
sti
repz
adc
movsb
inc
mov
ds
dec
ret
pop
cmpsl
js
and
mov
sub
aad
int
mov
repz
out
xchg
imul
loopne
fmul
pop
test
shl
popf
scas
imul
int3
adc
test
ret
xor
fistpll
push
xchg
mov
push
pop
ficoml
mov
cltd
jge
jo
jg
icebp
push
scas
or
int3
test
call
jb
add
sub
lods
les
xor
xlat
je
inc
movl
arpl
mov
fidivl
inc
push
xor
lea
and
cmpsb
addl
ja
fstpt
jmp
adc
inc
mov
xchg
dec
stos
or
aas
jbe
pop
xlat
jmp
fsts
sbb
jno
mov
cmc
pop
jo
jb
dec
xor
jmp
filds
dec
stos
out
add
dec
or
outsb
pop
fcmovbe
test
stos
dec
jb
test
pop
pop
test
push
test
push
inc
notb
notl
jb
jo
sub
iret
jbe
shlb
fldt
xchg
fildl
fbstp
repz
xorb
sub
enter
add
sub
sbb
out
pop
loope
rcrb
inc
flds
pop
rclb
sub
stos
add
jmp
iret
sbb
fwait
cli
xchg
mov
fs
loope
pop
vunpcklps
push
ret
push
mov
jmp
scas
loopne
cld
sbb
inc
ret
loopne
mov
out
leave
repz
jns
setne
pushf
inc
jns
test
dec
idivl
push
sti
rcll
ret
push
int
fwait
add
xchg
xor
xchg
out
loop
inc
scas
js
cld
jne
out
mov
add
out
push
cmp
xor
repz
int
test
jmp
mov
fs
ret
xchg
fwait
push
cmpsb
adc
sbb
pop
movsb
dec
pop
test
orb
pop
rcll
sbb
loop
pop
pop
fists
fucom
mov
out
xchg
lds
inc
xchg
xchg
xchg
fwait
jne
dec
mov
sti
adc
sub
push
mov
cmpsl
ja
lcall
inc
out
test
in
std
pop
add
add
std
aad
sbb
push
or
imul
js
inc
adc
insl
cmpsl
add
jnp
and
lret
imul
lahf
cmp
outsb
int
adc
inc
loopne
jle
adc
outsb
cmc
pop
imul
iret
hlt
adcb
push
cmc
repz
cld
lods
es
lret
repz
fildl
lret
pop
mov
fidivrl
ret
popf
pop
popa
sti
inc
jbe
mov
jno
repz
jbe
xorb
jnp
push
lret
out
adc
dec
pop
movsb
cmc
dec
jnp
js
xchg
ljmp
xor
iret
testb
inc
add
inc
imul
and
dec
mov
std
adc
inc
pop
push
pop
push
add
scas
sub
test
adc
jmp
ret
pop
xor
test
mov
fstpt
pop
pop
xchg
xor
xchg
aad
neg
inc
mov
loopne
arpl
mov
jbe
ror
fistl
jns
andb
mov
fildl
mov
push
stc
sub
sub
test
pop
repnz
mov
pop
xchg
push
and
faddl
loopne
rorb
das
cmp
mov
sahf
add
lods
les
stos
shrl
fwait
add
sti
mov
loope
mov
pop
incb
out
push
and
aaa
inc
repz
lahf
dec
std
xor
es
sub
pop
repnz
filds
pop
fldt
mov
mov
pop
lahf
push
pushf
lahf
jno
adc
mov
mov
xor
cmp
mov
outsb
int
adc
les
js
pop
push
push
or
or
adc
scas
mov
add
lds
jle
push
or
pop
daa
aaa
dec
flds
mov
stos
push
popf
xchg
movsl
add
jge
ss
mov
mov
movsb
pop
push
cld
lods
lahf
sbb
int
mov
jg
testb
hlt
push
or
dec
push
xchg
inc
jge
shll
in
lds
scas
or
sbb
fstpl
sub
xchg
hlt
aas
insl
lods
ret
inc
add
cmp
gs
out
jb
mov
stc
jno
lret
sub
lret
icebp
adcb
push
add
sbb
inc
or
cmpsb
inc
xchg
cmc
ret
cwtl
mov
mov
fwait
testb
cli
push
ret
stc
icebp
sti
clc
add
mov
pusha
dec
mov
mov
repz
jno
fs
xchg
shll
jp
leave
sub
rcll
leave
mov
repz
cmpsb
clc
insb
mov
cmp
out
lret
stos
in
inc
add
test
lods
xchg
lea
push
inc
sub
xor
pop
pop
cld
push
xlat
insl
loop
mov
inc
test
push
rcr
out
jb
cwtl
cmpl
adc
push
rcrl
jno
adc
add
cli
push
inc
lock
xor
jg
loope
leave
dec
sub
lahf
mov
xchg
incl
incb
shll
xchg
lret
jb
lahf
rcrb
jno
imul
shll
mov
cmpsb
jmp
mov
mov
inc
dec
ret
iret
stc
imul
ror
and
sbb
scas
dec
or
push
cmpsl
dec
push
or
push
inc
dec
cwtl
out
xlat
insl
dec
fdiv
or
subl
mov
lds
and
dec
mov
dec
push
push
inc
jle
lods
xchg
dec
dec
inc
fstpt
mov
repz
iret
out
push
inc
inc
push
popf
rol
dec
pop
sti
jp
sarl
jl
mov
fdivs
pop
icebp
cld
sub
fisttps
push
int
xchg
push
sub
push
fwait
ljmp
jno
dec
dec
cmpsb
iret
add
cmp
repnz
adc
sub
mov
int
xchg
cmc
shll
ret
mov
stos
shrb
xor
arpl
adc
mov
movb
insb
jns
mov
cmpsl
insb
int3
inc
into
rorl
popf
inc
jns
ja
scas
pop
mov
pop
mov
aad
es
pop
les
adc
shlb
xchg
adc
xchg
out
ret
ret
mov
cmp
stos
mov
or
stos
jp
leave
addl
clc
mov
stos
fisttps
cmc
stc
cs
mov
es
test
cltd
mov
lahf
push
call
loop
inc
jae
xor
push
pop
or
repz
add
stos
mov
test
orb
mov
repz
ret
mov
adc
push
and
cmpsl
adc
cs
lahf
dec
fwait
repnz
xchg
sub
loopne
jno
ret
ficoms
pop
inc
not
stos
lods
mov
pop
orl
pop
aaa
in
stc
test
cs
mov
aad
inc
push
pop
mov
ret
push
jg
popa
sub
mov
aad
jbe
jno
inc
xchg
sbb
in
fcomi
push
jae
loop
mov
popa
pop
ljmp
stos
loope
imul
jb
dec
stc
clc
fildl
xchg
inc
pop
inc
repz
je
clc
lds
dec
test
push
popf
loopne
lahf
das
or
ds
cmpsl
dec
or
mov
fcmovnb
negb
scas
lcall
add
mov
cmpsl
test
cwtl
jne
add
pop
jns
cli
outsl
cwtl
fwait
lods
pop
fdivs
lahf
es
dec
pop
fwait
add
dec
xor
xor
inc
or
push
scas
rorl
jge
jp
xlat
push
mov
cmp
cmpsl
test
inc
mov
mov
cmpsb
or
mov
mov
add
and
ds
subl
in
scas
call
push
push
jecxz
jno
push
out
int3
inc
imul
jl
rcrb
or
ja
dec
sti
pop
sbb
test
mull
xor
fisubrl
or
negl
aaa
fnsave
loope
adc
testb
in
push
adc
cmpsl
mov
xchg
pop
cs
push
cmp
xor
aam
fisubrs
xorb
and
stc
and
mov
mov
ret
xchg
adc
cmpsl
data16
lret
xchg
sbb
icebp
lds
add
pop
sub
mov
jg
adc
clc
sahf
inc
mov
int
testl
push
jmp
inc
ret
push
mov
push
fs
lcall
imull
jns
push
repz
xchg
imul
mov
push
add
notl
gs
cmpsl
xor
repnz
push
rcll
mov
xor
ret
fistps
mov
dec
scas
add
jmp
and
in
adc
cmc
in
xchg
jns
nop
js
xchg
clc
lahf
movsb
in
ret
fisubl
lahf
xchg
inc
inc
cld
shlb
fisubs
jmp
ffree
push
pop
pop
std
cmpsl
xlat
xchg
push
not
mov
lea
mov
movsb
fistps
out
rcl
sub
das
mov
test
imul
repnz
out
rcrl
pop
lea
jno
std
xchg
es
jns
cwtl
retw
cli
ret
mov
loope
xor
out
fidivl
and
jge
or
pop
test
or
bnd
jae
push
mov
pop
movsl
mov
ret
fstl
sbb
mov
jo
popw
aad
je
outsl
js
popf
dec
jge
in
ss
fmulp
aam
mov
xor
fistpl
dec
rcll
inc
inc
xlat
mov
fstpl
sbb
arpl
xor
sahf
outsl
icebp
mov
or
lret
fisttps
and
fiaddl
dec
ret
sub
in
fldt
and
ret
ljmp
dec
fs
loopne
std
insb
cmp
xchg
jmp
xor
mov
push
pop
mov
push
fdivl
lock
mov
sbb
scas
shrb
sbb
mov
call
push
push
fwait
mov
pop
incl
xchg
shl
neg
xorb
sbb
loop
cmp
and
adc
and
fcoml
pop
pop
roll
lea
shlb
movzwl
sbb
sbb
push
in
cmp
cltd
cmpsl
dec
das
fistpll
shlb
insb
or
xchg
fisubs
jmp
ds
notb
int3
sbb
loopne
jbe
fstl
jns
cmpsl
push
addb
mov
cli
das
test
pop
mov
in
repz
jg
cmp
cli
scas
int
mov
add
sub
test
dec
xor
aaa
sbb
stc
dec
mov
sub
or
loope
repnz
ret
inc
out
jns
add
rorl
mov
aad
lds
lret
ret
jns
mov
mov
bound
cwtl
fst
mov
adc
add
lret
icebp
pushl
mov
loope
pusha
inc
jl
mov
hlt
in
mov
bound
js
or
xor
jmp
lcall
scas
into
loope
ret
cmp
iret
lret
iret
dec
leave
dec
lret
dec
fcmovnu
lds
fcmovb
dec
xlat
fcmovb
dec
rcr
fisttpll
neg
and
loope
neg
mov
test
xlat
mov
cmp
inc
cwtl
int
fcomip
imul
jmp
push
jae
pop
sub
mov
dec
orps
sub
inc
mov
rol
dec
arpl
adc
jbe
push
rorl
cmp
lods
andl
mov
aad
lods
xchg
ja
xor
jmp
mov
fistl
sbb
cmc
jge
call
fs
aad
ja
ret
mov
test
xchg
cld
xlat
push
dec
pop
xchg
jmp
lods
ret
ja
repz
push
scas
mov
out
fidivrl
pop
cld
lods
inc
popf
cmc
aad
data16
jno
icebp
js
inc
mov
pop
dec
cmp
push
push
cmp
mov
xlat
mov
sar
aas
sub
sub
in
xlat
in
je
xchg
inc
push
add
fstl
add
sub
xchg
sbb
arpl
stos
push
pop
negl
mov
in
rolb
adc
pop
add
sbb
fstl
pop
or
jbe
lods
sbb
out
inc
in
outsl
mov
rcrl
sbb
inc
lret
adc
test
xchg
sbb
mov
sti
push
call
add
je
outsl
xor
fdiv
dec
dec
mov
sbb
fldcw
and
nop
pushf
push
push
incl
mov
dec
lcall
xor
int
xchg
loope
daa
fmul
loope
repz
ja
inc
popa
hlt
sub
loopne
xchg
mov
xor
inc
rcll
lcall
popl
dec
popa
mov
roll
idivb
mov
rclb
mov
dec
aad
and
mulb
mov
dec
mov
hlt
cmpl
rolb
pop
in
mov
xor
adc
push
pop
jmp
insb
fwait
rcr
test
cli
rcrb
or
dec
push
loop
cmp
fs
inc
ficoms
lcall
gs
ret
push
xor
sub
cmp
dec
push
push
call
sbb
jo
push
nop
shll
jno
outsb
or
ret
iretw
xlat
cmp
addr16
lret
mov
xlat
mov
xchg
pop
mov
xchg
pop
mov
cmpsl
jne
add
jae
in
xchg
xchg
sbb
fcompl
outsb
mov
out
jno
add
xlat
repnz
int
dec
lods
xlat
mov
adc
push
fdivr
repnz
pop
inc
sbb
fwait
pop
repnz
scas
lahf
pop
repz
fwait
jae
and
mov
rorl
lret
in
sti
sub
ljmp
xchg
mov
jb
ret
repnz
in
fcmovnu
emms
push
mov
jb
fwait
mov
ja
pop
frstor
mov
mul
test
xlat
gs
xchg
loope
jmp
jg
mov
std
cltd
push
cmpl
ret
sub
fcmovne
jb
loope
aam
pop
adc
dec
pop
lea
jno
into
lods
inc
movsl
xchg
fstl
dec
aam
and
or
and
pop
xchg
xchg
imul
int
mov
or
add
popa
test
xchg
cmc
in
xchg
call
adc
mov
lahf
adc
lea
pop
call
jae
push
pop
scas
push
mov
leave
mov
notl
out
pop
jmp
mov
notl
cmpsl
jg
sbb
dec
cltd
inc
lahf
dec
push
iret
pop
xchg
sub
fs
fwait
stos
lea
push
stc
in
andl
lcall
dec
imul
sbb
int
mov
dec
dec
rolb
leavew
push
cmpb
dec
push
mov
test
dec
int3
out
jbe
pop
flds
negl
sti
idiv
pop
push
stc
outsb
cmp
mov
fwait
xchg
xchg
arpl
dec
push
mov
not
pusha
jae
loop
jp
xor
loop
push
xchg
dec
fwait
mov
sub
ljmp
lcall
stos
out
add
ret
sbb
pop
fbstp
adcl
out
rclb
imul
inc
xchg
loope
push
pop
mov
icebp
gs
test
movsl
sbb
pop
notl
inc
out
fdivp
rol
aad
mov
ja
nop
repz
fistl
sbb
mov
jo
fldcw
test
neg
xlat
fadds
xchg
inc
push
cli
pop
xchg
jge
or
push
lahf
hlt
jp
mull
out
push
add
inc
inc
mov
sub
inc
fdivrs
aaa
lahf
xchg
lock
jle
cwtl
out
sar
adc
cmpsl
icebp
sti
xchg
xchg
sub
push
dec
sub
negl
repz
push
lock
xchg
jno
out
arpl
dec
cwtl
das
push
mov
mov
cmpsb
cwtl
xor
out
inc
adc
hlt
icebp
push
push
call
cmp
push
dec
sub
jmp
and
mov
fdecstp
dec
in
push
inc
mov
stos
or
xor
int3
fwait
sti
repz
and
int3
push
push
cmp
fwait
xor
mov
daa
rolb
jns
test
or
sbbl
mov
mov
lea
push
push
push
sub
cmpsb
mov
push
adc
out
mov
aas
sti
fwait
aad
cmc
pop
pop
stc
sub
xlat
or
pop
dec
pop
push
popa
loopne
rclb
cli
xchg
ja
stc
mov
xlat
int3
inc
pop
mov
xchg
cmc
dec
lea
fidivs
push
xlat
sbb
adc
push
fnsave
mov
shlb
fistpll
std
pop
stc
or
idivl
mov
add
cwtd
stc
adc
arpl
stos
ljmp
push
inc
mov
sub
xor
shrb
inc
ja
daa
clc
mov
mov
cld
jmp
loop
dec
add
hlt
iret
ret
or
je
fbld
pop
mov
jnp
stos
pop
notb
pop
ret
adc
loop
nop
js
mov
into
dec
std
jmp
fisubrl
cmpsb
shl
add
xchg
push
xor
push
shlb
lock
dec
iret
pop
iret
jo
push
mov
hlt
aam
push
xor
push
dec
je
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
outsb
in
mov
and
das
and
mov
das
and
mov
das
cmp
mov
das
ds
mov
das
cmp
mov
das
cmp
mov
xor
scas
inc
mov
add
and
and
and
xchg
mov
lahf
add
pop
mov
fildl
add
mov
cmpsl
rcrb
sti
or
out
ficoml
rorl
xchg
rorl
adc
lods
pop
push
lds
mov
mov
xchg
fildl
pop
negl
xchg
sbbb
pop
pushf
push
decl
xchg
xlat
scas
adc
push
jae
sbb
ret
addl
mov
or
addr16
xchg
movb
mov
jnp
fsts
push
bound
sbb
jmp
gs
jnp
and
push
stc
sahf
arpl
fadds
pop
fwait
int
pushf
mov
xchg
out
mov
lods
in
out
mov
pushl
adc
mov
call
pop
push
lret
mov
sbb
addr16
fnstcw
sbb
loope
sbb
adc
inc
fdivrs
ss
jo
pushf
jo
mov
jbe
ret
push
xchg
sbb
mov
jp
shll
in
inc
pushaw
sbb
loope
pop
cltd
add
inc
add
xchg
dec
push
push
les
icebp
push
jb
jmp
cli
pop
loop
mov
push
push
mov
popa
mov
not
pop
inc
mov
ja
mov
popa
stos
dec
data16
dec
cld
aad
dec
fisttpl
mov
push
icebp
sti
push
orb
sarl
lea
cmp
jae
loop
ja
xchg
push
stc
addr16
jp
mov
xchg
je
pop
out
jb
clc
push
in
adc
mov
sbb
jge
into
lock
outsl
sub
mov
pop
xchg
jecxz
je
add
cmpsl
hlt
xor
inc
mov
mov
jecxz
js
xchg
mov
loop
lret
hlt
jge
repz
mov
arpl
xlat
mov
adc
lds
repnz
lea
dec
mov
stc
out
pop
push
imulb
adc
mov
pop
vpshad
mov
rorb
rorb
lds
or
sbb
xchg
xchg
xor
push
pop
popf
pop
mov
stos
xchg
push
push
aam
outsb
mov
into
push
dec
ror
push
divb
push
jae
dec
das
push
das
fldt
pop
das
pop
das
ret
das
pop
scas
inc
rcll
inc
and
and
inc
movsb
push
or
shll
adc
and
leave
jo
loope
mov
div
fldenv
push
xor
xor
xor
xor
xor
aaa
mov
sub
das
push
das
mov
lods
dec
cmovno
push
lods
and
and
mov
cmp
scas
fistl
mov
test
mov
and
int
xchg
xchg
mull
icebp
mov
rorb
and
mov
fbld
cmc
sbb
ficompl
pop
lea
ret
iret
stos
fs
push
pop
xor
mov
and
xlat
mov
push
pop
sti
in
pop
ret
icebp
popf
adcl
mov
jmp
xchg
lret
sub
dec
mov
mov
repz
pop
cmc
push
mov
dec
repz
push
mov
mov
loope
and
pop
lds
sti
cs
daa
mov
cmpsb
pop
mov
popf
ret
push
fildll
or
mov
sub
ret
ret
out
popa
negl
pop
fbld
leave
cmpsl
shll
rep
lods
mov
mov
mov
xchg
scas
rcl
lods
fmull
int
push
xchg
inc
pop
cltd
push
lds
sbbb
psubusb
mov
inc
pushl
push
push
outsl
sbb
inc
stc
lret
sub
or
push
cwtl
mov
jne
test
and
scas
stc
cmp
xchg
icebp
mov
push
add
loop
dec
inc
mov
loope
push
aad
pop
push
xlat
in
fbstp
sahf
ret
jecxz
stos
imul
pop
sbb
mov
jl
fs
mov
gs
div
std
idivl
add
pushl
sarl
push
fbld
ja
decl
sbb
xchg
in
aad
fnstsw
fisubl
pop
cmp
mov
aam
mov
pop
push
loopne
xlat
push
loopne
inc
xchg
pushf
aaa
sbb
mov
inc
in
xchg
jecxz
lock
mov
ret
rorl
ret
fwait
mov
icebp
mov
and
and
sbb
aad
sbbl
push
imulb
sub
fwait
xchg
xchg
push
pop
mov
imul
sarl
fistpl
jb
mov
stc
mov
xchg
flds
xlat
andl
lods
adc
stos
addl
pop
sbb
dec
inc
adc
aam
dec
push
mov
les
and
inc
xlat
push
imull
repnz
orb
cmp
cmp
fwait
cli
loop
arpl
pusha
les
pop
lret
mov
std
inc
or
jb
mov
push
jp
cmpsb
pop
stc
outsl
push
lret
inc
xlat
sbb
pop
shlb
push
inc
popa
loope
imul
jecxz
jo
push
xlat
xlat
push
jb
push
dec
add
adc
popa
gs
push
pop
leave
out
adc
push
movzwl
mov
ret
fldl
popa
sub
fmuls
mov
daa
jle
rcl
xlat
js
dec
mov
cmp
rol
xor
aad
fiadds
icebp
ret
adc
idivl
sbb
aam
pop
repnz
inc
je
or
pop
sarb
pop
adc
pop
pop
push
sbb
pop
testl
and
test
mov
pop
pop
jmp
mov
jp
jne
mov
dec
icebp
out
xlat
ja
cmc
xchg
cmpsl
adc
rcll
dec
mov
inc
filds
xlat
xlat
repz
aad
lret
xchg
lods
leave
xchg
fld
adc
sub
or
inc
icebp
jecxz
cmpsl
icebp
aaa
mov
aas
push
fwait
lahf
stc
mov
pop
xchg
inc
xlat
pop
xchg
xor
mov
cmc
jbe
xlat
fisubrl
lds
int
push
pop
or
loope
mov
out
fistl
cmc
jecxz
in
jl
shll
sbb
lods
addr16
popa
or
inc
adc
xchg
xchg
sti
push
add
notb
repnz
arpl
xchg
fistl
jl
ja
stos
xor
ss
pop
xchg
js
int3
fwait
add
push
aam
xchg
add
mov
cmp
adc
stos
icebp
push
xchg
cmp
repz
jmp
fldcw
pop
loop
mov
pop
rclb
cmp
pop
mov
inc
jecxz
add
imul
lcall
rclb
sub
push
ja
lcall
jnp
mov
mov
xchg
ficompl
aaa
push
push
add
mov
test
sub
xor
add
adc
daa
push
scas
sbb
pop
xor
pushf
gs
add
call
aaa
mov
out
add
or
pop
pop
mov
jnp
outsb
xchg
idiv
orb
or
jmp
jge
push
add
mov
jae
ret
nop
push
fsubrl
cwtl
fistl
repnz
arpl
sub
dec
hlt
jno
js
stos
mov
fnstcw
sbb
js
jno
cltd
adc
loope
ret
pop
imull
jo
arpl
xchg
rclb
push
jb
adc
fs
jmp
jp
jmp
addr16
jecxz
sbb
cltd
mov
js
cli
data16
jae
fdivrl
loope
and
sub
in
pop
dec
std
pop
scas
add
and
mov
pop
rorb
jne
cmpsl
jmp
orl
pop
in
shr
mov
into
fimull
test
xor
stos
cld
push
insl
nop
push
fcomi
inc
ss
and
sahf
push
pmullw
flds
xor
and
push
adc
insb
pop
mov
push
xchg
cmpsl
dec
xor
mov
sbb
pop
adc
out
int3
mov
adcb
cs
push
add
sbb
mov
imul
movl
inc
and
adc
push
fists
outsb
lret
call
pop
push
jle
cmp
loopne
les
xor
pop
lea
out
mov
jae
xchg
sti
leave
sbb
loop
push
mov
cld
pop
fwait
out
inc
pop
push
out
jp
jmp
fwait
outsb
mov
xlat
es
lods
pop
xchg
dec
out
rcll
add
lods
clc
push
xlat
in
mov
add
fisttpll
cltd
lcall
orl
popa
push
xor
and
sub
addb
jl
lock
jns
mov
scas
xor
adc
jle
repnz
jmp
pop
push
inc
or
jnp
mov
mov
sub
mov
fidivrs
aad
pop
jge
pop
pusha
outsl
pop
movsb
adc
in
mov
add
stos
dec
test
jne
imul
stos
repnz
iret
es
stos
lahf
mov
xor
fstps
rcrb
fxch
lods
lcall
imul
jmp
filds
imul
xor
pop
popa
cmp
push
mov
aad
popf
xlat
fisttpl
fsts
popf
xlat
fisttps
ret
adc
adc
mov
mov
scas
sbb
and
cmpsb
loopne
xor
aad
test
mov
sub
rolb
mov
jl
jecxz
int
mov
mov
mov
repnz
push
dec
pop
jmp
push
insb
fucomip
lock
push
pop
cmp
dec
jb
push
mov
mov
or
push
sub
insb
cs
shll
cmpsb
adcl
in
jl
xor
pop
les
adc
sti
fildl
call
shlb
rcrl
dec
add
mov
rolb
jbe
push
mov
jmp
insb
cmpsb
pop
fsubl
cs
loope
cmc
js
inc
addl
mov
adc
cmp
dec
inc
flds
xchg
into
or
inc
cmp
sub
loope
aad
psubusw
dec
or
xchg
fsubs
fwait
aad
inc
cs
ret
jmp
push
sbb
cmpl
jl
adc
jae
in
mov
enter
pop
in
push
sub
fistpll
jmp
jge
lahf
hlt
pop
xchg
scas
pop
push
sub
sti
push
cmp
and
xorl
jns
je
scas
lds
jl
notl
iret
loopne
cmp
xlat
jg
push
jl
mov
imul
cmp
xchg
sahf
fcompl
or
shrl
repz
aaa
xlat
out
fnsave
inc
mov
cmc
cmp
stos
add
sbb
adc
in
ffree
add
and
xchg
cmp
dec
push
scas
xchg
pop
add
testl
push
mov
ret
push
push
inc
mov
jnp
test
sti
imul
cmpsl
addr16
push
cmp
das
inc
add
imul
insb
cwtl
lds
pop
xlat
out
mov
jb
and
pop
dec
adc
xchg
sti
stc
xchg
jp
xor
pop
or
adc
outsb
mov
cld
fwait
pop
std
push
mov
repz
dec
mov
popf
and
mov
clc
or
and
sub
hlt
out
pop
push
mov
xor
jg
jns
jns
xor
out
adc
or
jo
lea
repnz
push
in
popa
inc
mov
adc
or
rolb
pop
pop
jb
xlat
aad
fisubl
xchg
mov
daa
movsl
rol
or
pop
mov
icebp
mov
mov
loope
mov
adc
xor
ret
mov
aad
mov
pushf
in
or
in
jge
or
notb
dec
push
lock
es
ret
insl
aad
mov
sub
push
fstpt
jmp
loop
dec
ljmp
fsts
es
mov
push
adc
not
lods
push
mov
scas
jmp
filds
js
push
push
sbb
xchg
out
sub
hlt
imul
daa
jecxz
jmp
xchg
xchg
sub
dec
dec
subl
xchg
mov
and
movb
insl
xor
int3
icebp
inc
push
clc
sub
insb
add
insl
cwtl
dec
lock
push
push
cli
lods
aaa
pop
xor
jno
pop
int3
jns
das
dec
jne
fldenv
xchg
ja
repnz
jmp
movl
xor
xchg
inc
cmp
cs
adc
loop
imul
xchg
arpl
jns
mov
sti
ds
xor
push
inc
lea
adc
jne
stc
ja
out
or
fsubp
and
add
sub
inc
fsts
in
clc
fistps
repnz
inc
cmpsl
js
fimuls
dec
jmp
xchg
xor
mov
cmp
loope
inc
stc
pop
insb
lret
sti
movaps
aad
and
and
sti
out
lcall
stos
adc
jnp
dec
mov
dec
lahf
decb
test
push
xchg
out
mul
xor
loopne
repz
push
sbb
mov
or
mov
bnd
add
and
iret
inc
cmp
mov
lea
cmpsb
push
ret
fsubs
mov
stos
ljmp
aad
nop
fildl
or
out
adc
cmpsl
out
mov
rorl
jns
xlat
cmp
into
stos
popa
dec
jl
cltd
push
inc
call
lcall
pop
inc
cwtl
mov
sbb
mov
fptan
leave
sub
jle
push
sti
movsl
lahf
xor
jo
push
adc
cmpb
lds
out
rcl
in
push
pop
icebp
and
fcompl
jbe
cmp
dec
jnp
inc
cs
mov
sbb
pop
insl
hlt
inc
je
imul
and
add
inc
lcall
inc
xor
pop
repz
jnp
mov
pop
ret
sub
jmp
jp
xor
pop
xor
int
adc
jge
dec
jg
aad
dec
fst
leave
test
stos
xchg
dec
fwait
outsl
rclb
xor
cmpsl
jnp
shrl
cli
out
mov
std
xlat
xorl
ljmp
xlat
adc
sub
inc
or
scas
xchg
jp
mov
dec
lcall
sub
aam
leave
roll
mov
xor
cmpl
aad
aad
mov
ja
sub
addr16
lcall
cmpsb
ret
in
shl
and
jl
push
fildl
push
or
rorl
es
add
ljmp
movsl
jl
jg
cmp
pop
mov
fwait
push
pop
cld
cwtl
ljmp
dec
cwtl
sti
ljmp
cmpsl
mov
enter
imul
repz
in
xchg
mov
add
out
push
sbb
je
mov
mov
cmp
imul
and
repnz
cmpsb
dec
out
mov
cmpsl
stos
push
mov
adc
inc
mov
iret
xchg
adc
es
test
xchg
rorl
imul
mov
adc
inc
add
pop
inc
push
lds
mov
xchg
pop
insl
pop
add
pop
jecxz
pop
rclb
add
sti
rcrb
xchg
push
inc
mov
mov
nop
popf
sahf
sbb
sbbb
shrl
push
data16
add
push
or
push
xchg
imul
notb
cmp
inc
rolb
pop
fcompp
shrb
jbe
mov
push
or
fincstp
fcoml
inc
fs
fld
popa
sti
xlat
inc
push
pop
neg
cli
pop
js
aad
int
inc
les
popl
sar
out
adc
or
and
shll
push
sub
lret
push
aad
fbld
push
rclb
shlb
mov
lret
idiv
fadd
stos
sarb
rcll
push
test
jnp
bnd
mov
push
mov
imul
mov
mov
ret
cli
lods
aad
je
pop
sbbl
aad
inc
push
or
or
xchg
repnz
lret
cltd
or
in
xor
es
cli
push
jae
iret
lcall
xchg
es
movsb
ja
push
push
jne
and
not
adc
std
mov
cmc
pop
rcll
pop
inc
leave
dec
scas
cmc
pop
pop
cmp
cs
inc
add
js
in
pop
icebp
push
pop
jp
jp
xor
mov
jns
adc
ja
jmp
leave
test
jb
je
cmp
std
shrl
das
cltd
inc
adc
add
jae
shl
lret
cmpsl
ret
or
popf
mulps
xchg
add
cmpsl
lods
jmp
dec
insb
jge
push
dec
pop
test
push
adc
out
add
sbb
out
cmp
test
loop
ficoml
int
pushw
ljmp
add
ret
push
xlat
addr16
out
rorb
stos
sbb
mov
aaa
in
inc
xor
sahf
enter
lret
xchg
sbb
lds
sbb
int3
adc
es
inc
fistl
dec
push
xchg
insl
push
jp
fdivr
dec
mov
add
rorl
pop
jmp
add
hlt
ret
xchg
xchg
mov
mov
sub
int3
dec
scas
lcall
and
into
sub
div
mov
adc
out
adc
inc
adc
mov
cmc
subb
gs
lods
mov
scas
xchg
adc
push
xor
sbb
cmp
jb
jbe
and
mov
imul
xchg
ret
sub
jmp
insb
mov
cs
dec
inc
adc
xlat
mov
cmp
cmpsb
mov
popa
lret
xchg
enter
je
pop
xlat
mov
nop
insl
div
push
fwait
insb
mull
sbb
lcall
sub
push
adc
jmp
in
jns
fmull
or
cs
movsl
inc
movsl
imul
out
iret
push
dec
js
sbb
test
dec
vandnpd
addr16
cmp
sub
fsubs
scas
mov
stc
hlt
pop
ret
stos
imul
arpl
inc
and
cli
xchg
mov
imul
mulb
out
rorl
lret
gs
add
jle
push
pop
cli
test
popf
and
cltd
movsl
out
sbb
jp
jno
lahf
ds
lods
push
jno
xlat
mov
cmpsl
xchg
fcmove
je
add
insl
inc
pop
pop
add
fcomip
mov
lret
push
xchg
mov
xchg
sti
sti
fstl
out
xlat
mov
sub
loop
mov
movsl
rcrl
subb
cltd
movsl
or
mov
and
xlat
pop
cltd
lret
pop
jns
mov
ffreep
loopne
pop
pop
inc
aad
xchg
inc
ljmp
stos
outsb
jmp
movsl
jp
pop
mov
sub
mov
mov
lret
das
mov
jge
iret
mov
push
shlb
std
add
jp
imul
jbe
cltd
pop
into
mov
inc
lds
ret
das
jnp
loopne
pop
xchg
push
inc
push
sub
add
aad
dec
stc
add
out
add
shlb
mov
adc
ret
subb
aad
pop
fldt
add
imulb
cli
xlat
adc
pop
repz
lcall
out
dec
xor
movsl
cmpsl
adc
pop
push
mov
mov
out
add
scas
sti
xchg
adc
negb
dec
dec
test
test
fildll
mov
xor
xor
xor
xchg
into
cmp
push
lcall
mov
cwtl
loop
into
mov
stc
xchg
fldl2t
jb
in
lods
and
fucom
loop
bnd
push
hlt
addr16
mov
sub
and
out
mov
push
inc
dec
test
sar
pop
jmp
adc
cvtdq2ps
dec
and
int3
test
pushf
clc
xlat
sub
push
adc
out
addr16
insb
and
lahf
out
xor
js
xchg
ja
mov
hlt
fisttps
mov
das
mov
pushf
sarl
xchg
movsb
mov
sbb
xor
icebp
jg
gs
or
sub
sti
push
cld
mov
packssdw
in
xchg
stos
add
mov
loope
sbb
divl
in
in
inc
into
test
xor
mov
lret
dec
cs
pusha
lock
push
dec
xlat
int3
dec
outsb
inc
leave
cmp
subb
icebp
sbb
inc
xchg
push
inc
or
mov
imul
sbb
push
inc
hlt
adc
movsb
or
xchg
test
aam
xchg
mov
mov
lods
or
movsb
stos
dec
cmp
inc
dec
jg
and
cmp
push
xchg
push
jecxz
jne
adc
insl
test
xchg
fstps
xchg
ds
cmp
sbb
inc
add
mov
dec
pop
mov
jb
mov
inc
push
cmp
inc
aad
jo
daa
je
wrmsr
mov
lds
in
push
into
add
xor
xlat
rol
in
push
mov
call
jecxz
push
sbb
jmp
and
std
add
jb
aas
cltd
out
dec
or
mov
fmull
sti
std
notl
xchg
fwait
adcb
xor
adc
pop
sub
iret
mov
jmp
in
cli
cmp
fistl
std
sti
xlat
jecxz
daa
pop
or
mov
pop
fsubrl
mov
xchg
dec
push
xor
je
sbb
loopne
test
lods
mov
push
aad
jbe
xchg
cmp
outsl
push
outsl
bound
sub
cwtl
mov
and
mov
sub
les
scas
pop
ret
out
adc
xchg
jnp
jbe
cmpsl
insb
clc
fisttpl
aam
inc
flds
push
aad
outsl
sti
ljmp
cmpsb
mov
stos
push
das
mulb
es
dec
imul
adc
and
fldt
popa
pushf
mov
dec
xor
ret
jmp
fsts
jmp
out
mov
push
sub
out
fldl2t
sti
lock
add
shr
ficomps
push
fildll
arpl
push
xchg
fisttps
cmp
cmp
sub
adc
movsl
push
jb
js
mov
push
call
or
pop
fcmovu
loope
mov
loope
cmp
cs
mov
jno
repz
push
push
sbb
sbb
ret
inc
cmp
push
sub
mov
mov
jns
adc
iret
inc
dec
repnz
in
dec
push
andl
adc
sub
addr16
mov
inc
push
ret
xlat
inc
adc
xchg
insb
sub
lods
mov
lods
adc
pop
pop
test
cld
sti
hlt
das
cmp
sub
loope
cli
xor
data16
and
movsb
mov
xchg
testb
xchg
fwait
xchg
movsl
mov
fdivrl
push
into
sarl
push
into
sti
out
sub
mov
pop
mov
mov
jno
xchg
inc
push
cmpsl
dec
stc
xchg
in
iret
mov
lahf
pop
xchg
xchg
sub
rcrl
bnd
dec
aad
stos
inc
jge
pop
pop
jle
sub
repnz
jno
adc
add
pop
jle
or
rorl
mov
cmpb
push
lock
fdiv
icebp
iret
push
mov
push
xor
fwait
cmpsl
jge
loop
jbe
outsl
icebp
push
cmpsl
dec
push
loope
imul
ficompl
cld
testl
xlat
inc
xacquire
sub
jmp
nop
pushl
dec
fdiv
push
nop
stc
cmp
lcall
fadd
jg
xchg
jo
into
nop
sti
shr
mov
lock
inc
xor
mov
std
jb
mov
push
movsb
xchg
xchg
lahf
loopne
jl
movsl
xor
lret
jp
mov
jle
js
rclb
iret
add
adc
or
pop
rcrl
out
cld
aad
jmp
ret
bound
jo
jb
imul
jmp
lds
push
xchg
mov
js
sbb
inc
jg
adc
push
loopne
jecxz
jmp
jecxz
hlt
out
test
jns
inc
imul
outsb
dec
lret
sub
mov
and
jbe
mov
fnstcw
cmpsl
fs
jl
loop
dec
jns
sub
dec
js
loopne
pop
cmpsl
fcmovb
mov
cmp
cmp
cmp
inc
jge
add
jae
es
vpshuflw
and
pop
sbb
pop
out
icebp
xlat
loope
aaa
mov
loop
sar
mov
aaa
fsubs
scas
js
stos
inc
cmpsl
fsts
xlat
push
adc
inc
mov
pop
jmp
sarl
pop
jmp
out
addr16
sbb
or
or
or
shll
sub
xorl
pop
xor
scas
leave
notb
fwait
out
js
cmpsl
inc
test
jae
add
jb
out
dec
jno
mov
lret
fmuls
notb
cmp
or
adc
in
dec
jae
test
fisttpl
data16
repz
push
pop
xchg
xchg
ja
mov
sub
xchg
imul
add
adc
pop
mov
es
stos
jbe
int3
mov
sbb
lds
adc
lock
fnstcw
fmull
pop
xchg
idivb
nop
push
sbb
dec
lea
hlt
dec
fidivrl
repnz
jnp
jge
xchg
movsl
mov
test
or
pop
addl
xchg
xchg
sti
mov
xlat
mov
adc
lcall
movsl
hlt
mov
es
hlt
mov
in
dec
in
adc
jbe
xlat
sbb
lds
popf
pop
out
mov
sub
clc
bound
sti
movb
fiaddl
popf
movl
mov
dec
xchg
jno
sarl
aas
ss
sub
cmpsl
xchg
cmp
lods
stos
dec
rcr
in
in
and
loopne
shlb
daa
hlt
jecxz
int
scas
imul
xchg
insb
push
into
mov
stos
xchg
inc
mov
daa
inc
into
xor
fwait
pop
dec
jp
fdivr
jmp
imul
adc
insb
cmp
mov
pop
int
aad
shrl
lcall
cmpsb
push
pop
into
sbb
movsb
xchg
popf
inc
into
lds
inc
push
dec
pop
xchg
es
sti
xlat
repz
sbb
test
sbb
cmpl
inc
cmp
add
jne
xlat
or
pop
push
cmp
icebp
xor
ljmp
outsb
icebp
xor
sbb
cmc
adc
iret
xchg
jp
fstpt
aam
pop
cmc
dec
testl
inc
in
cmp
loopne
mov
sub
push
fists
test
xchg
sub
xor
and
push
inc
fwait
out
lods
sbbl
mov
jne
sbb
jecxz
adc
cld
arpl
fxch
xor
sti
mov
daa
mov
pop
mov
push
mov
xchg
xchg
es
repz
jae
in
das
mov
pop
pop
std
xlat
repnz
rcrb
rclb
dec
fwait
cmc
mov
push
cld
in
scas
xor
in
add
out
push
cmpsl
adc
fildll
lcall
pop
lret
cmpsb
mov
jg
jb
popa
lret
xchg
fdiv
negl
rcr
stos
test
lahf
mov
jnp
shl
xchg
divl
lahf
aaa
push
push
mov
adc
fbstp
rcrb
mov
inc
cli
ja
shrb
hlt
cmc
inc
cli
sarl
inc
inc
lahf
inc
jbe
sub
je
lret
push
je
hlt
mov
les
inc
mov
push
inc
mov
das
sub
jnp
adc
cmp
jae
je
add
adc
stc
insb
mov
idivb
mov
jae
mov
shrb
mov
ret
dec
cmpsl
mov
inc
loope
jno
dec
dec
lea
or
xor
or
idiv
jo
mov
stc
sub
xor
cmpl
ss
mov
mov
dec
sti
into
push
xchg
cli
xchg
and
ret
ret
add
pop
outsl
lods
lcall
imul
xchg
pop
mov
add
faddl
sbb
notl
mov
stc
push
stos
mov
repnz
or
push
mov
xlat
loopew
jns
push
sarb
push
not
aam
fwait
mov
push
sub
rcl
sub
lods
dec
lcall
xor
inc
out
and
cltd
fidivl
cmpb
push
push
xlat
fdecstp
cli
jo
mov
xchg
and
sti
lret
push
mov
clc
or
cli
out
fstl
aaa
or
xlat
sub
jg
in
adc
fwait
aad
cltd
sbb
mov
mov
movsl
push
hlt
push
arpl
fwait
les
out
adc
jb
jmp
lock
xchg
pop
mov
and
cmc
mov
push
rcl
icebp
mov
loopne
or
divl
cmp
mov
sbb
lret
xchg
rclb
pop
rcll
or
jo
icebp
lea
cmc
cmp
mov
dec
movsl
mov
inc
sub
sbb
sub
lods
mov
imul
test
rorb
adc
repz
xchg
adc
loopne
sub
jo
loope
xor
test
mov
insl
stos
pop
jg
xorb
ss
mov
cld
xchg
push
sbb
lcall
cmpsl
and
in
iret
adcl
sarl
push
xchg
push
xlat
xchg
pushf
mov
push
pop
lret
sbb
push
sub
repz
cmpsb
cmpsl
inc
int
aam
xor
push
cmp
aas
ja
fprem1
fdivp
adc
pop
cs
es
sbbl
pop
iret
cmpb
lret
pop
les
nop
cmpsl
test
mov
xlat
es
push
pop
ret
push
fldcw
mov
inc
pop
and
into
mov
shrb
sbb
icebp
popf
cmc
adc
aad
sbbl
ret
enter
push
fisttpl
pop
cmp
movl
iret
push
into
fnstcw
pop
ficomps
pop
inc
int
xchg
cltd
loope
leave
rcl
xchg
in
jg
mov
repnz
mov
out
push
inc
adc
popf
push
sub
inc
adc
xchg
nop
lahf
jg
cmpb
pop
pop
sbb
jnp
das
repnz
clc
into
sti
push
std
jmp
mov
ret
cld
xor
cs
pop
movsb
sbb
xchg
pop
test
sti
push
jmp
dec
mov
cmpsl
mulb
shlb
lds
xchg
imul
std
mov
xor
negl
push
js
rorb
mov
shlb
leave
xlat
aam
sbb
xlat
sub
ljmp
mov
loope
hlt
cmpsl
mov
push
jg
xchg
jb
lcall
fdiv
sbb
and
inc
pusha
cmpsl
fs
into
sbb
pushl
dec
cli
mov
mov
or
repnz
mov
push
fidivs
orl
sbbb
sub
xchg
xchg
dec
into
jl
jmp
sarb
mov
xchg
ret
or
loope
jnp
call
mov
or
lock
mov
jnp
xchg
mov
aam
fwait
out
xor
xchg
push
sub
xor
mov
mov
repz
in
xchg
sbb
imull
cmc
jae
push
cli
pminub
or
sub
jno
mov
leave
mov
scas
sarl
out
out
lea
lods
cmpsl
xchg
in
add
mov
ss
bound
pushf
das
fcmovbe
adc
dec
dec
std
je
jmp
sub
imulb
in
add
cmp
call
xor
lods
lods
sbb
cmp
test
mov
xlat
jl
pop
into
xchg
mov
jecxz
mov
jno
hlt
js
pop
cmpsl
inc
fnstsw
jnp
mov
out
lds
inc
pop
fimull
mov
push
fnsave
xlat
pop
sbbb
xchg
aad
mov
sub
sub
and
inc
aad
cmp
rcrl
and
mov
lock
fists
sarl
pop
pop
pusha
jns
sub
and
cmp
cmpsl
test
fildl
inc
inc
xchg
xlat
sahf
mov
fsts
icebp
ret
pop
inc
fwait
negl
adc
fwait
inc
xchg
jecxz
rorb
sti
jmp
out
aad
xchg
push
jno
sti
fcompl
insl
adc
push
ret
sti
jecxz
roll
push
lock
cmc
out
jne
cmp
push
inc
mov
loope
sub
sbb
pop
enter
cmpsl
and
cltd
pop
pop
out
ja
mov
sub
rcrb
pop
popf
ss
nop
lods
mov
in
xchg
lahf
ljmp
mov
mov
jle
xor
lret
stc
mov
js
xlat
mov
aad
mov
movsb
mov
jmp
cmpsl
xchg
mov
fcomps
mov
mov
daa
ficoml
pop
sub
lcall
fdivl
into
sbb
sti
mov
aaa
jmp
pop
stc
sbb
cli
rcl
lods
out
subl
cmpsl
fidivs
xchg
xchg
mov
adc
xchg
mov
popf
xor
ja
repz
xlat
ficomps
imull
push
rolb
sub
fistl
xchg
cmp
movsl
leave
testb
sbb
clc
sbb
lahf
sub
cli
jmp
inc
jecxz
in
hlt
and
lea
ret
push
mov
jb
hlt
fxch
sarl
or
adc
and
aas
sbb
adc
add
sahf
insb
mov
push
jbe
or
push
xchg
jne
mov
imul
sti
push
jnp
imul
js
jg
pop
cmp
jnp
push
notl
sti
adc
cli
pop
ret
out
sbb
ficoml
mov
test
inc
inc
mov
lock
loop
cli
dec
sbb
jbe
les
mov
mov
sub
mov
xchg
pop
aaa
aam
mov
fsubs
inc
xorb
inc
mov
test
scas
aad
jnp
sbb
daa
sbb
mov
sarl
je
mov
loopne
sbb
jmp
add
push
xchg
scas
xor
pop
scas
jp
imul
sub
mov
int3
sbb
mov
add
lret
sub
add
sbb
lret
mov
test
insb
arpl
fcom
inc
push
inc
cmp
push
xor
mov
xor
cmc
jns
dec
xor
fdivrs
lahf
rolb
jns
pop
cmpsl
clc
dec
xchg
mov
ds
je
adc
gs
popf
testl
and
push
in
pop
pop
shlb
mov
and
xchg
int
fildll
xlat
xchg
repz
push
sbb
jno
dec
iret
stc
cmp
fcmovnb
push
xchg
xchg
cli
sarl
das
fldl
cmc
sbbl
xchg
adc
nop
jbe
and
addr16
dec
mov
pop
je
cmc
dec
inc
lods
push
popa
jmp
push
sub
popa
sbb
lods
pop
test
stc
out
iret
mov
shl
mov
je
out
jl
xchg
imul
roll
jp
xlat
insb
mov
fadds
jmp
xchg
stos
dec
dec
imul
xlat
add
mov
sub
push
adc
insl
ds
cmp
xchg
fists
inc
mov
sbbb
mov
pop
cs
push
jmp
adc
cmp
mov
je
movsb
dec
mov
add
movsb
push
pop
into
popa
xlat
clc
inc
hlt
movsb
inc
int3
pop
pop
push
inc
ficoml
inc
cs
fwait
pop
lock
dec
fdivp
mov
ror
push
popl
cmp
jb
sub
adc
gs
insb
fldcw
call
fisttpl
push
mov
push
pop
in
fnstenv
cmpsb
inc
js
jnp
push
icebp
fwait
addr16
cmpsl
imul
jno
stos
mov
cmpsb
in
cs
and
aad
jp
mov
arpl
es
jnp
rcrl
cld
mov
mov
sub
push
jmp
nop
rcrb
jp
cli
cmpsl
push
jnp
pop
mov
iret
in
add
jbe
clc
xchg
cmc
mov
or
push
les
lds
shlb
sub
ret
fidivrl
cmpsl
xchg
fdivs
mov
test
sub
into
orb
cmp
test
sub
int
iret
pop
xchg
insl
adc
imul
js
aaa
push
lds
push
test
in
pop
movsb
out
pop
pop
fsts
xlat
sub
xchg
jbe
xchg
push
and
out
fists
fcomp
mov
push
lret
jmp
out
insl
leave
sbb
test
aaa
test
push
jno
test
je
sub
or
repnz
fdivl
sub
cli
into
push
push
ds
popa
aaa
dec
cli
push
icebp
pop
repz
xchg
data16
cwtl
fwait
adc
loope
in
nop
repnz
mov
iret
stos
mov
clc
ficoml
mov
shrb
add
cld
es
icebp
push
cmpsl
mov
out
clc
inc
test
jno
clc
pop
cmpsb
inc
loopne
add
lock
jecxz
lods
mov
outsb
xchg
lock
and
out
clc
shll
shlb
pop
insl
mov
sbb
in
fcos
inc
frstor
clc
mov
ret
inc
push
jno
popf
fcmovnu
lret
clc
add
jae
mov
fiadds
mov
dec
lock
testb
test
push
xor
std
xor
mov
sbb
divl
nop
stos
pop
mov
cmpsl
push
mov
out
mov
jo
cld
xchg
jmp
xlat
dec
imul
dec
mov
dec
imul
repnz
iret
adc
mov
sub
mov
jo
lds
push
jmp
sbb
push
add
push
jmp
aad
xchg
mov
mov
inc
pop
es
jbe
ds
ret
lock
das
stos
sbb
add
cmp
or
mov
fistps
bound
xchg
mov
inc
fidivs
sub
pop
push
push
push
adc
loope
dec
jnp
push
inc
adc
cmp
div
jle
and
mov
std
jg
xchg
mov
shlb
into
clc
les
push
hlt
les
pop
stc
js
or
sbb
int3
and
xor
sub
sbb
sbbb
leave
lods
jns
lret
repnz
adc
jmp
lods
dec
adc
push
shll
and
sti
mov
push
pop
jmp
adc
and
jl
scas
dec
cmc
add
roll
pop
int
pop
sahf
mov
sbb
mov
fadds
jge
pop
notl
fidivrl
aam
push
sar
cmpsl
mov
or
push
mov
xlat
xchg
dec
sti
stc
pop
movsb
test
js
out
xor
out
dec
cwtl
dec
pop
in
add
int
cmp
mov
push
decb
dec
fistl
scas
lea
insb
repnz
push
in
adc
jmp
mov
test
or
or
cmpsb
fildl
jp
into
mov
sti
outsl
push
jae
and
cmp
cmpsb
fcmovb
sbb
aad
insb
push
mov
adcl
sbbb
pusha
sbb
push
sub
ljmp
ret
loopne
sub
test
mov
pop
add
stos
fildll
je
aas
scas
mov
mov
xchg
cmp
jmp
int3
sarl
pop
aad
adc
cli
adc
leave
xchg
clc
jle
mov
sub
arpl
int3
fcmovb
xor
pop
scas
cmpsb
push
lods
aam
in
test
pop
push
dec
inc
outsb
inc
in
int3
loopne
arpl
lret
sbb
cltd
aad
mov
sbb
fidivl
int
aad
repz
xor
cmp
stos
je
inc
mov
push
sarl
inc
push
mov
dec
jb
mov
clc
lea
jge
aam
adc
fistl
inc
fcmovnbe
inc
rol
xor
cld
xor
out
movsl
aad
sub
mov
fsts
mov
or
pop
pop
shlb
dec
stc
xlat
icebp
fcom
xchg
jo
out
nop
sub
arpl
incb
ret
iret
adc
fcmovb
in
fiaddl
or
pop
fisubrl
add
aad
inc
mov
pushf
mov
pop
push
pop
lahf
out
int3
pop
es
inc
rcl
aam
aaa
insl
rolb
in
sbb
fcoml
or
cmpsl
sub
adc
leave
push
adc
int
mov
rclb
push
jno
pop
cmc
pop
adc
in
jb
add
incl
popf
pop
shlb
xchg
repz
subb
leave
mov
es
fwait
ret
repnz
mov
xor
add
repz
and
pop
adc
mov
inc
pop
insl
sbb
cld
add
jbe,pn
enter
or
sub
leave
fiaddl
add
push
leave
jecxz
inc
sub
sti
mov
push
adc
push
cmp
dec
dec
ljmp
adc
mov
repz
mov
rorl
jo
test
repz
add
pop
or
rcll
xor
cltd
push
sti
xchg
imul
jmp
push
push
insb
imul
mul
pop
rorb
pop
es
mov
cmp
je
daa
push
or
inc
subb
fisubs
xchg
inc
jecxz
hlt
stc
pop
push
es
aam
push
icebp
aad
out
ret
pushf
in
push
adc
mov
dec
repnz
imul
inc
push
cmp
adc
cmpsb
or
xchg
scas
test
loope
test
mov
pop
cmp
pop
ret
dec
sub
ficoml
jp
or
jbe
out
xchg
out
clc
data16
cmp
dec
sti
into
sti
inc
mov
not
cmp
dec
es
sbb
loope
push
push
or
push
pop
ficoms
ja
cmp
jae
push
sub
xchg
dec
dec
in
sti
cs
stos
fnstenv
icebp
add
inc
insl
jge
mov
cmp
inc
lahf
cmp
inc
cli
sti
adc
pop
je
stos
in
sbb
insl
movsl
das
cmp
jb
dec
movsl
int
pop
lcall
insl
cltd
mov
adc
cmp
or
into
repnz
mov
inc
mov
cltd
lea
call
stc
xchg
push
outsl
sub
pop
jns
movsl
adc
mov
mov
mov
sbb
pop
ja
cmp
xchg
movl
int
jp
push
in
inc
dec
adc
dec
dec
jmp
push
xor
mov
add
fbld
push
je
aam
and
jns
mov
pop
pop
push
inc
cmp
je
xlat
jno
sub
insb
cmp
and
push
popf
mov
jo
pop
push
loopne
insb
imul
stos
push
lret
cmc
fucomi
inc
or
jge
subl
mov
into
rcrb
in
test
or
div
mov
inc
push
pop
sbb
movsb
lret
jno
lret
iret
xor
push
mov
xchg
and
jmp
aad
xlat
lahf
xchg
sbb
mov
scas
cmp
adc
loopne
lcall
ja
cld
jl
cmpsl
pop
pop
add
mov
mulb
push
push
mov
test
mov
pop
add
repz
and
cld
ljmp
add
jno
inc
cwtl
test
push
jno
mov
movsb
enter
pop
aad
fistps
icebp
dec
iret
xchg
cmpsl
ret
test
dec
ljmp
aaa
pop
aad
push
mov
fadd
jb
inc
imul
pop
arpl
jbe
rorb
fadds
cmp
out
arpl
pop
or
jb
sbb
mov
sub
lock
shlb
jmp
mov
sti
orl
data16
push
mov
iret
shl
mov
or
adc
dec
pop
xabort
repnz
sarl
mov
cmp
shlb
pop
pusha
pop
pop
fiaddl
ret
hlt
xlat
pop
inc
sbb
jecxz
mov
lret
pop
jecxz
jg
pop
sub
imul
sbb
pop
dec
mov
stc
fmull
inc
mov
js
mov
sub
pop
inc
dec
lcall
sti
cmpsl
in
mov
es
xor
rcrl
and
lret
ja
ror
add
sub
fcmovu
fmull
repnz
xor
mov
filds
cltd
fnstenv
xor
test
clts
fcmovnbe
movb
adc
in
icebp
pop
jnp
pop
testb
mov
lds
inc
loope
es
inc
pop
pop
test
mov
sbb
pop
fcmovnb
mov
pop
mov
add
or
in
outsb
cmc
xchg
sti
in
lcall
push
adc
insl
xlat
lods
bound
fsubl
fcmovb
fyl2x
push
in
jb
insb
mov
xlat
shl
inc
decl
fisttpl
inc
stc
mov
jg
pop
push
mov
imul
aad
adc
fcmovnb
push
aaa
aad
jge
movsl
push
jge
into
dec
cmp
xchg
shlb
jbe
pop
mov
clc
jns
and
push
push
cmpsl
jb
push
aas
inc
insb
mov
int
sbb
push
inc
sub
test
push
cmpsl
pusha
and
or
sti
jmp
pop
lcall
cmpsb
jle
pop
scas
mov
ficompl
cltd
rcl
xchg
clc
jl
mov
sub
jg
int
mov
arpl
stc
lret
mov
jp
pop
xor
or
scas
out
pop
push
sti
push
ss
xchg
ret
dec
sub
mov
jmp
jbe
or
insb
push
mov
pop
xor
and
icebp
repnz
or
js
scas
mov
inc
mov
lret
clc
pop
fildll
xchg
jg
adc
inc
clc
ja
cmc
dec
or
push
mov
add
test
repnz
xchg
sbb
xchg
das
jmp
dec
test
inc
loope
mov
jl
mov
out
add
jmp
hlt
test
clc
xchg
add
add
sub
xchg
xlat
inc
aam
push
mov
jno
pop
push
and
leave
sbb
mov
lods
adc
sti
pusha
icebp
push
repz
cmpsl
sbb
in
lcall
lret
cmpsl
or
mov
adc
xchg
add
push
sbb
sub
mov
lret
jbe
push
push
hlt
add
mov
icebp
mov
outsl
inc
jns
mov
adc
idivb
xchg
cwtl
aam
push
jl
enter
jp
into
cmpsb
sub
sbb
xchg
adcl
mov
xchg
jns
jmp
pop
sbbl
imulb
repnz
push
mov
inc
mov
out
or
mov
inc
jnp
stc
shl
cli
mov
inc
cmp
call
mov
inc
pop
test
fs
xor
lea
loope
test
shlb
mov
mov
out
mov
dec
pop
push
adc
adc
in
cmpsl
mov
rclb
push
xchg
sbb
ret
xchg
stc
cmp
loop
loopne
push
ficoml
jbe
pop
inc
sarl
mov
cmp
fistpll
xor
inc
imul
imul
pushf
xchg
ror
dec
stos
imul
mov
incb
sub
fucom
fcmovu
mov
cmp
insl
cmp
ret
das
pop
mov
lods
jo
stos
icebp
dec
fwait
xlat
or
inc
scas
sub
in
inc
fdivs
or
scas
mov
sub
mov
or
fldl
xchg
dec
test
jmp
push
sbb
lods
negl
xor
ficomps
lahf
pushf
mov
mov
dec
pop
popf
fsts
or
shlb
insl
lahf
sub
je
jmp
pop
add
dec
fsubs
stos
mov
in
jne
push
jno
inc
mov
or
rclb
mov
cmp
fst
mov
fmul
mov
cmpsb
mov
mov
outsl
ss
rolb
out
cmc
mov
push
push
or
adc
inc
inc
and
outsl
ljmp
xor
scas
pushf
pop
rclb
push
cmpsb
inc
cmp
add
push
stos
add
insb
push
insb
jmp
ret
fldcw
jno
mov
xchg
mov
and
ret
out
cld
and
divl
es
add
shlb
sub
mov
xchg
mov
xchg
mov
aaa
adc
sti
idiv
fwait
xlat
cmc
jbe
fs
cli
ds
mov
stc
mov
jmp
rcrb
scas
pop
imul
push
push
sti
push
popf
push
scas
ss
push
jl
and
jg
cli
orb
push
daa
rolb
out
push
test
adc
push
mov
add
xchg
push
xor
ret
sub
int
mov
inc
aad
lahf
repnz
incb
cmp
divl
outsb
inc
xor
dec
mov
loopne
and
xor
es
mov
jae
out
aad
mov
fstl
xor
shlb
pop
imul
jmp
cmp
addl
popa
pop
fistl
outsb
aad
in
xchg
jb
in
fstpt
shl
xchg
outsb
arpl
test
mov
add
add
out
fmul
push
fmuls
jnp
jbe
pop
jns
or
repz
fcoms
push
mov
pop
lds
xorl
push
xchg
cld
pop
ja
mov
leave
imul
jl
cmp
lahf
repz
jno
cmp
add
out
xchg
jb
ja
lret
pop
cmpsl
dec
and
cmpsb
pop
jp
cs
xchg
cs
cli
mov
mov
adc
adc
adc
out
mov
scas
pop
adc
jp
xchg
in
pop
mov
jp
subl
in
shll
lahf
mov
ret
push
mov
jns
mov
movsb
xchg
mov
cmpsl
testb
imulb
ficoml
push
adc
and
loope
shll
aam
and
cwtl
or
in
loop
push
pop
scas
ret
fisttpll
paddsw
inc
add
jecxz
adc
aad
push
lods
mov
cmp
xor
rclb
loop
adc
push
fistps
or
xchg
cmp
pop
mov
addl
pop
xor
int3
push
push
xor
cmp
out
inc
shlb
into
add
fcoms
cld
mov
imul
daa
and
push
stos
fcmovb
cmp
movsb
dec
ljmp
insl
leave
stc
or
xchg
jl
push
jno
movb
pop
popa
sbb
fistl
xchg
inc
outsb
movsl
loopne
cwtl
pop
lock
pop
int
imull
add
mov
dec
fisubrl
popa
dec
jecxz
stos
mov
xlat
mov
inc
in
sbb
cmp
mov
jno
push
pop
jge
dec
pop
stos
adc
lcall
or
add
pusha
push
xchg
es
xlat
pushf
jo
lea
jl
enter
mov
imul
jg
mov
pop
ficoms
cmp
mov
pop
fisttpl
daa
mov
dec
pop
cltd
movsl
fwait
test
lahf
lock
push
inc
loopne
mov
push
icebp
jo
pop
popa
pop
fsts
pop
and
mov
xlat
dec
imul
loope
pop
or
push
ja
sbb
cmp
sub
cli
sarl
sti
fstpt
bt
push
jcxz
into
repnz
inc
cmp
ficoml
cltd
mov
popa
or
cs
jno
icebp
xchg
movsl
aad
sub
mov
into
xchg
inc
fstl
add
fisttpll
mov
aad
std
sbb
jp
test
rcll
repz
push
adcl
xchg
push
pushf
mov
movsl
es
fstl
test
imul
mov
repz
repnz
push
inc
inc
mov
lret
or
cltd
adc
xchg
mov
icebp
cmpsl
jmp
insb
pop
shlb
xchg
fbstp
imul
mov
mov
or
idiv
imul
lcall
popf
mov
push
xchg
mov
xchg
cmp
xchg
inc
inc
jle
mov
sarl
mov
add
push
imul
aad
repnz
push
lret
testl
jbe
dec
loope
stos
mov
adc
add
inc
rcr
lret
lret
hlt
sar
call
sbb
or
test
inc
mov
lcall
adc
push
push
outsl
hlt
adc
xor
sub
popa
test
push
xor
cmpsl
fld
pop
pop
mov
sbb
sbb
int
pop
jb
pop
jb
mov
addb
dec
shrb
adc
cli
xchg
cmp
add
test
mov
scas
push
xchg
inc
nop
fistps
jp
insl
mov
ficompl
roll
sbb
fcom
pop
inc
inc
inc
jp
fsts
fs
pop
lods
mov
dec
rcr
lret
cwtl
push
cmp
fstpt
mov
push
popf
cmp
insb
stos
adc
rcr
mov
fildl
aad
mov
hlt
sub
lods
fwait
aad
ljmp
hlt
pop
das
dec
sbb
cmpsl
inc
sbb
es
push
sub
jecxz
imul
sti
cmpsl
mov
xchg
jmp
out
xchg
insb
and
faddl
testl
xchg
pop
xchg
push
dec
mov
lock
aad
sub
cltd
dec
pop
in
jl
add
in
test
push
scas
notl
mov
test
cmp
jns
push
cmp
push
push
adc
nop
pop
sbb
pop
cltd
xacquire
and
icebp
mov
mov
cmp
loopne
inc
stc
fisubrl
cmp
mov
jle
inc
mov
or
rorb
scas
mov
rcl
or
push
pop
fistl
into
sti
jl
add
popf
cmp
add
push
stc
add
mov
mov
outsl
js
enter
add
mov
and
int3
in
xchg
fwait
sbb
icebp
call
or
jbe
imul
shlb
insb
xor
or
and
mov
outsl
adcl
pop
add
std
adc
xor
mov
enter
cld
lods
jmp
xor
in
mov
sbb
aad
cli
dec
movsb
sarb
inc
movsl
mov
jg
pop
call
gs
adc
fdiv
stc
into
clc
vpor
sbb
sub
jne
jge
dec
sbb
mov
fwait
jecxz
and
lock
test
mov
mov
adc
notb
xchg
shll
push
lock
ss
adc
hlt
lods
xchg
mov
push
jbe
cmpsb
iret
out
ds
or
scas
push
lds
sub
addr16
mov
jo
push
mov
sbb
push
les
das
cmp
or
xor
sub
dec
or
cmpsb
es
mov
cltd
dec
scas
arpl
jg
cli
mov
xor
test
sahf
xchg
inc
mov
inc
cs
idivl
adc
ret
out
cmc
push
and
pop
push
int
xchg
lods
add
in
testl
pop
mov
cmp
pop
ret
mov
jb
imul
add
dec
jecxz
por
cmp
sarl
lahf
add
in
int
push
sub
dec
mov
sbbl
mov
shl
pop
jg,pn
fdivr
mov
test
xorl
call
rolb
mov
dec
mov
inc
movsl
add
sahf
mov
negl
xchg
cmp
fmuls
or
mov
cli
sub
cli
pop
xchg
je
push
fisubrs
fstpt
cmp
insb
sbb
push
data16
mov
jnp
aaa
sti
mov
dec
mov
fstl
cmp
cltd
adcl
fcompl
push
inc
or
pop
inc
aad
icebp
cmp
jns
dec
idivl
fldcw
int
pop
mov
pop
ret
sbb
cmp
xor
sarb
aad
lods
les
push
adc
aam
pushf
leave
cmp
leave
xchg
mov
or
or
push
inc
int3
pop
pop
push
mov
mov
ficompl
pop
mov
jge
enter
cmp
xchg
xchg
enter
cmpsl
mov
popa
call
ret
xchg
popf
iret
imul
jae
es
xor
aam
xlat
lret
jg
lcall
xor
mov
mov
lds
adc
pop
outsl
int
jns
sbb
push
and
xor
ret
add
sbb
push
int3
pop
sbb
pop
pop
outsb
repz
adc
adc
sub
sub
push
mov
popf
int
cmp
cwtl
cmpsb
rcrb
sub
insb
sub
hlt
mov
or
jbe
test
das
shll
pop
mov
adc
adc
push
rcl
nop
or
cltd
icebp
fisttpl
sub
ror
adc
sub
out
roll
push
fnstenv
cmp
fcom
nop
sbb
inc
pop
mov
or
mov
cs
fdivrs
cmpsb
loope
mov
push
cmc
ret
push
mov
pop
jnp
push
dec
inc
hlt
xchg
sbb
inc
add
imul
loop
fistpl
lds
pop
pop
xor
add
jns
adcl
outsb
jne
push
and
shlb
add
js
xlat
adc
rclb
addr16
sub
jnp
rcll
sti
push
jmp
pop
rol
aam
sbb
loope
and
xlat
xchg
mov
in
xor
icebp
aad
adc
rcr
shl
push
fists
in
pop
ja
inc
imul
ret
push
in
sub
push
rclb
popl
cmpsb
loop
mov
sti
lods
int
xor
repz
cltd
sbb
cmp
std
shlb
sbb
mov
in
xchg
cmc
mov
cmp
and
jnp
mov
fildl
push
cwtl
pop
ljmp
fdivrl
inc
and
mov
cmpsb
aaa
leave
in
mov
cmc
fwait
data16
adc
je
cmpsl
or
shll
inc
sbb
cmpsb
pop
xor
stc
sbb
inc
adcb
jno
es
xor
gs
notl
adc
out
dec
repz
icebp
mov
ret
jbe
movsb
push
sbb
dec
jns
ret
cmpsb
popf
je
push
cli
xor
cmp
xchg
push
out
xchg
mov
bound
jo
dec
lock
ja
lds
xor
cltd
aad
mov
or
push
loopne
mov
fwait
loop
mov
jg
test
loope
mov
push
add
xor
dec
ja
xchg
imul
mov
test
push
cld
xchg
jbe
xor
push
mov
mov
mov
repz
cmpsl
mov
fistpl
xlat
sahf
pop
and
ret
test
jns
cli
fstp
mov
fstps
fcmovnb
aad
rcll
sub
xlat
jae
out
push
pop
inc
pop
hlt
cmpsb
pushf
mov
es
lcall
mov
push
sbb
inc
ss
push
mov
lods
adc
push
mov
inc
icebp
pusha
stos
cltd
or
jnp
xchg
sub
push
fidivs
or
fcomi
stos
hlt
sub
arpl
inc
rcll
call
cmpsl
sub
addb
std
shl
ficoms
push
push
inc
cmpsl
push
lods
and
adc
movsl
in
testb
mov
arpl
add
sub
insb
xchg
mov
addl
fdivs
cmp
inc
popf
jle
mov
mov
into
inc
xlat
inc
jnp
addr16
imul
pop
mov
out
xor
mov
and
mov
push
pusha
in
or
xor
add
std
cmp
imul
loopne
shl
push
es
adc
mov
int
aad
mov
sub
push
popw
ret
fnsave
into
cmp
mov
mov
movsl
out
push
fadds
xchg
pop
jg
sti
sub
sub
pop
push
cmp
scas
loopne
sub
js
add
iret
jg
push
scas
sti
ficoml
pushf
push
mov
xchg
sub
adc
dec
fcomi
out
inc
mov
sti
ljmp
ja
out
and
xchg
jno
inc
pop
inc
scas
cmp
or
arpl
sub
inc
pop
sbb
mulb
xchg
inc
ret
sub
sub
sub
dec
inc
js
xor
std
scas
insb
in
jb
in
mov
shl
jo
imul
lea
ror
cs
inc
fwait
mov
ljmp
pop
sarl
pop
jl
cmp
or
xorl
ja
mov
xchg
or
icebp
fwait
roll
in
adc
leave
aam
popa
test
inc
pop
mov
not
pusha
lock
adc
hlt
or
ficompl
push
push
push
stc
xlat
jmp
push
jns
fstpl
fsubrp
mov
lret
roll
insl
jbe
or
insl
push
not
jmp
addr16
mov
cli
sub
fildl
into
mov
pop
mov
int
scas
iret
sub
sbb
mov
and
or
mov
pushf
jp
cwtl
add
test
push
mov
scas
lahf
in
or
xchg
cmpb
xchg
not
inc
sub
aaa
into
xor
mov
pop
rcl
and
test
jb
add
sbb
rclb
adc
into
shl
cltd
movsb
or
mov
ret
inc
js
addr16
inc
test
mov
rcl
inc
jp
cmpb
in
fcomp
jmp
add
out
fstpt
add
inc
sub
jmp
shlb
cmp
hlt
sbb
loop
ret
sub
cmp
imul
int
ret
sub
ljmp
lret
fcompl
mov
pop
cmpsl
lcall
cmp
cmp
inc
push
mov
movsl
sub
xchg
inc
jne
push
mov
ret
push
jmp
popf
mov
les
jecxz
popa
fsub
cmp
adc
cmp
cmp
aam
inc
subl
lahf
icebp
jmp
movsw
mov
test
aas
shrb
jecxz
jl
pop
push
dec
ds
jmp
add
xlat
dec
stos
lret
imul
mull
fdivs
cmpsl
inc
outsl
fbld
adc
fstpl
bound
icebp
subb
hlt
fcomp
sbb
adc
or
pop
sbb
adc
push
insb
xchg
ret
cmpsl
push
fwait
push
out
mul
jg
pop
push
xchg
sub
inc
xchg
mov
push
push
xchg
jno
cs
aam
pop
adc
daa
push
push
fistps
or
rcrl
lea
mov
push
mov
pop
xchg
cmp
mov
adc
lock
jl
les
pop
bsr
cmp
fstpl
into
daa
clc
nop
jnp
adc
stos
push
dec
push
flds
xchg
pop
out
ds
mov
xchg
jno
jge
aad
hlt
pop
pop
sti
xor
imul
dec
xor
lcall
rcr
lock
ret
std
pop
pop
xor
xchg
movsb
xor
pop
mov
mov
jmp
add
push
cs
scas
sub
imul
and
add
cmp
sub
icebp
mov
pop
adc
data16
and
inc
xchg
jo
mov
mov
adc
aad
fyl2x
xchg
frstor
jg
inc
xlat
jns
adcb
sub
adc
jl
xor
lcall
movsl
lods
je
mov
mov
jmp
mov
test
inc
ss
ret
push
lds
cmp
imul
sub
add
cmp
loop
push
gs
out
scas
jbe
pop
std
lahf
out
mov
xchg
sub
mulb
daa
push
cmpsl
movsl
xchg
xchg
cmp
sbb
xor
mov
add
pop
add
scas
loope
cs
jge
cmp
fldt
jmp
mov
inc
push
jno
ret
call
outsl
adc
lahf
inc
mov
es
fisubl
loope
push
jp
xor
test
test
lahf
outsb
lods
pop
mov
neg
mov
lahf
adc
add
dec
sbb
xor
and
cli
sub
loop
mov
jg
test
jecxz
lock
imul
fisubl
inc
cli
xchg
pop
mov
xor
fisttpl
sbb
sahf
fiaddl
test
js
xor
dec
dec
inc
es
inc
popa
xor
sahf
mov
icebp
pop
fs
sub
repz
lcall
popa
pop
push
popf
dec
fcoms
in
push
rorb
cmp
ret
sbb
xchg
dec
jge
test
xchg
jnp
insl
rolb
rolb
or
mov
pop
sarl
cmpsl
hlt
xchg
test
push
data16
idiv
push
xlat
movsb
xchg
jbe
lea
cmc
es
jbe
cli
sahf
imull
mov
adc
shll
test
clc
stos
iret
cld
xchg
lea
je
popw
lds
or
xor
test
loope
adc
fistl
xor
rclb
ss
jecxz
enter
cltd
daa
test
or
xchg
add
sbb
ret
pop
inc
inc
leave
movsl
mov
jne
pop
mov
jg
mov
sti
idivl
add
cmp
xchg
mov
js
sub
add
fst
jb
pop
testb
cmp
lock
icebp
fldlg2
jae
pop
inc
adc
fnstenv
in
push
popf
hlt
ja
jns
xchg
jne
dec
push
dec
or
xchg
add
add
add
arpl
stos
xchg
mov
push
xor
es
jne
add
pop
repnz
inc
mov
rcll
test
jno
xchg
add
pop
or
addl
pop
ret
jno
aad
pop
pop
jns
add
fwait
ja
mov
lds
ja
mov
mov
scas
adc
ret
or
lcall
sti
sub
or
out
mov
push
pop
mov
fsts
fistl
xchg
aas
lock
and
stos
xor
jns
mov
les
fdivl
div
cmpsl
lret
cld
sub
jmp
jecxz
cwtl
ja
inc
bound
andl
xor
rcll
adc
push
leave
inc
inc
sti
jmp
shl
pop
inc
movsl
stos
movsl
inc
aam
sub
daa
fcoml
and
fistpl
mov
test
cwtl
lods
dec
inc
xorl
stos
pop
sahf
idiv
add
dec
jg
repnz
lods
mov
fbld
jbe
mov
fstps
xor
lahf
adc
clc
inc
jnp
mov
mov
divl
xlat
stos
lahf
popa
shll
mov
xor
out
popf
jae
push
cmpl
pop
imul
fidivrl
cmp
jmp
adcb
xchg
repz
push
xchg
xor
inc
inc
pop
rcr
aas
jmp
lods
es
in
das
and
sbb
dec
ret
inc
xchg
push
sbb
add
sub
cli
rcrb
sbb
arpl
rorl
inc
inc
addb
shlb
inc
pop
rclb
cltd
imul
cmpsl
mov
ret
cwtl
cs
inc
clc
clc
fwait
shll
inc
dec
stos
js
add
xchg
mov
mov
clc
jb
dec
pop
loop
inc
mov
sti
mov
mov
or
dec
mov
or
mov
loope
add
xchg
or
jbe
pop
test
dec
fildl
jnp
add
std
in
into
hlt
xchg
imul
jbe
adc
dec
jb
push
stos
push
xchg
in
insl
xchg
fistl
pusha
cli
stc
mov
hlt
imul
fisubrl
mov
mov
imul
cltd
inc
mov
push
loopne
push
mov
movsb
lret
aaa
out
adc
pop
adc
fstpt
jo
mov
xchg
push
adc
call
and
icebp
sbb
dec
push
jle
or
int3
mov
test
popf
pop
cld
xor
cmc
cltd
inc
dec
mov
mov
jae
cmpsl
lods
scas
xchg
xchg
add
lret
lret
mov
test
or
jp
cwtl
sub
in
add
mov
das
push
loopne
lods
mov
push
sbb
jb
outsb
pop
das
std
push
sub
xchg
cmpsb
mov
stc
jle
mov
jo
fcoml
in
adcl
inc
in
insl
repz
cmp
ret
aam
pop
cmpsl
jnp,pn
xchg
inc
sub
adc
jle
insb
and
push
push
add
nop
das
insb
pop
pop
and
fnstcw
dec
ljmp
mov
sahf
dec
popa
jp
cmp
jnp
jno
loopne
sub
xchg
jl
sub
into
add
fsubl
cmp
sahf
cmp
inc
insb
pop
hlt
lock
jno
iret
jecxz
stos
loope
cld
pusha
pop
and
cs
stos
mov
mov
pop
aad
xchg
icebp
adcb
push
add
sub
test
imul
xchg
jae
jo
ret
loop
xlat
push
add
fstps
inc
jne
adc
int
push
xchg
bound
jbe
sbb
pop
fyl2xp1
das
adc
pop
loop
les
repnz
fildll
cmpsl
xor
stos
pop
adc
xchg
sbb
movsb
push
sahf
and
xchg
fcoms
cwtl
jbe
cmp
mov
xchg
jmp
dec
mov
xlat
sbb
xchg
xor
repz
pop
jmp
jo
pop
imul
jbe
lgs
sbb
mov
xor
lret
mov
pusha
cmp
jmp
sbb
out
icebp
mov
aad
mov
fisubrs
add
std
mov
dec
rcll
cld
wrmsr
push
mov
iret
loopne
stos
mov
pop
xchg
in
pop
lcall
movsl
add
mov
hlt
mov
push
mov
pop
insl
fstps
leave
ret
outsl
and
scas
xchg
lods
jl
cmp
mov
jmp
gs
mov
dec
stc
add
fwait
mov
scas
or
mov
clc
add
test
inc
pop
jmp
dec
xlat
aas
or
jmp
or
idivl
js
test
sub
arpl
loopne
push
pop
push
repnz
scas
icebp
or
sbb
sbb
adc
push
mov
das
push
mov
leave
clc
jnp
pop
flds
fistpl
fsubp
shll
inc
fincstp
cmp
mov
mov
jl
cltd
idivb
xor
jecxz
or
cmp
repz
fsubrp
jp
dec
push
or
cmpsb
je
int
mov
out
cmp
leave
shr
loope
mov
xchg
jmp
loope
add
sub
or
rcll
cmpsb
xchg
xchg
and
subl
dec
insb
data16
pop
cmc
pusha
sbb
out
cmpsb
push
aam
nop
mov
mov
mov
daa
into
sti
sbb
jmp
sbb
mov
ret
aaa
xchg
sbb
jnp
ret
add
cmpsl
mov
int3
inc
push
xchg
rorb
or
subl
push
mov
mov
xchg
outsl
lods
pusha
out
repnz
push
daa
or
dec
insb
cmp
xchg
mov
push
sbb
stos
out
sbb
mov
mov
loop
mov
cmpsb
or
xchg
inc
ror
cli
das
xchg
lahf
js
fcmovb
icebp
outsl
sbb
out
fwait
lret
stos
rcrl
std
jb
idiv
loope
fmulp
cmpsb
inc
xchg
fs
xchg
daa
mov
push
mov
mov
push
icebp
scas
outsl
push
hlt
lret
push
stos
stc
lcall
in
xchg
pop
outsb
shlb
cli
xlat
sahf
popa
aaa
sbb
dec
mov
test
jmp
mov
adc
repz
pusha
cli
movsl
fcomi
subl
stos
mov
out
jo
xchg
jp
inc
cmp
xchg
test
cmpsb
sub
js
mov
jnp
aad
daa
adc
fidivrs
inc
mov
decb
cltd
add
setp
lods
or
dec
sub
push
xchg
or
add
scas
jl
lea
ljmp
lock
sbb
adc
aam
lea
insb
xorl
mov
jge
and
jae
pop
sub
mov
ffree
addr16
mov
movsl
fwait
cmpsl
cmpsl
mov
imul
sarb
mov
cmpsb
roll
sbb
jmp
mov
or
rorb
repz
push
pop
lret
xor
sbbl
sbb
xchg
je
xchg
or
inc
xlat
cmp
loop
mov
jle
jge
scas
fsubrl
inc
or
jecxz
sti
jae
movsb
loope
push
adc
jmp
adc
xchg
cld
xlat
and
cs
fsubr
in
sar
adc
shl
adc
xchg
movq
add
push
js
outsl
fisttpll
sub
std
inc
repz
xlat
ret
inc
jmp
sbb
sub
imul
jo
push
inc
ds
push
dec
push
lods
mov
jbe
fdivrs
sbb
cmpsl
or
in
in
popa
jns
or
inc
fiadds
roll
cmpsb
aam
xchg
push
loopne
push
roll
lods
fwait
leave
rclb
xchg
xor
inc
dec
movb
mov
mov
lods
jbe
nop
fisttps
not
flds
negb
fsubrp
movsl
andb
jle
mov
push
cs
lret
mov
sbb
push
ret
lahf
pop
fildll
dec
pop
pop
xor
adc
ffree
imul
inc
add
bnd
push
mov
mov
add
mov
adc
ret
jl
mov
lahf
inc
dec
mov
and
mov
sbb
cld
push
fistpl
stos
in
pop
fcmovne
jnp
loope
dec
out
sbb
xor
fdivrp
push
xchg
push
rcrb
jne
iret
dec
inc
out
jno
shl
stc
adc
inc
mov
xchg
roll
fwait
cmpsl
les
mov
dec
ljmp
rol
sarl
mov
jp
add
xlat
add
fwait
jbe
xor
int
je
sbb
jp
dec
inc
insl
fisubl
lock
inc
mov
inc
mov
pop
pop
enter
xchg
cmpb
push
fnstcw
mov
inc
outsl
inc
lahf
call
cmpsb
scas
lods
xchg
fnstsw
fs
push
xchg
repz
out
imul
fdivs
inc
jle
int3
pop
lret
ds
enter
ss
pop
xor
shl
aam
cmpl
ja
jbe
mov
mov
mov
dec
sub
adc
stc
lahf
pop
pop
push
mov
add
rorb
adc
sbb
jg
outsl
sar
aad
in
shl
dec
fisubrs
mov
and
mov
sbb
ret
divl
sbb
hlt
jbe
insl
or
fcmovne
push
repz
xchg
inc
mov
add
movsb
pop
aad
ret
gs
cmc
cmpsl
orb
pop
add
movl
inc
psubsw
cmp
fnstcw
xlat
inc
inc
sbb
or
mov
xchg
fnsave
lds
sub
loopne
es
adc
leave
mov
lahf
xchg
lahf
scas
repz
and
popf
lods
jl
fiadds
xor
push
jbe
loope
xchg
mov
mov
inc
mov
imul
fcomi
cmpsl
lock
mov
or
into
lods
or
jne
xchg
stos
in
jns,pn
pop
add
iret
jl
or
movb
sbb
cmp
cmpsl
jmp
mov
rol
push
cli
or
inc
fdivp
mov
inc
fsubs
pop
jno
fucomp
inc
cmp
xor
fs
loope
cmpsb
loop
or
mov
sbbl
sbb
mov
lret
dec
leave
lock
adc
les
scas
clc
repz
rorb
in
pop
es
ds
pop
ljmp
pop
je
jge
cmp
push
lods
rorl
imul
jo
pop
cld
inc
mov
mov
or
and
ret
fadd
insl
out
pop
dec
push
pop
and
inc
dec
ss
addr16
mov
jbe
xchg
aas
rep
loopne
in
sar
xor
sbb
push
es
mov
ret
cltd
xchg
jno
add
mov
pop
jp
inc
dec
lock
mov
inc
cmpsl
inc
push
icebp
mov
lret
pusha
cmp
repnz
jb
into
mov
inc
loopne
inc
fadd
jmp
cltd
xor
inc
pop
subb
loopne
fdiv
imul
or
and
repnz
fucom
jle
and
inc
aad
scas
int3
jmp
fadd
out
jae
ljmp
rorb
jno
lds
add
xchg
mov
jns
jbe
call
add
cmpsb
inc
shll
sbb
lods
jecxz
mov
sbb
cmp
sbb
dec
mov
rcrb
movsl
adc
fldcw
jl
mov
imul
mov
mov
push
test
sub
ja
sahf
mov
push
xchg
mov
clc
cmpsb
inc
and
scas
dec
or
cmpsl
pop
jae
aad
lods
nop
repnz
fwait
push
lock
movsl
lahf
movsl
mov
mov
daa
dec
jmp
cmpsb
xor
testb
imul
adc
cmpsl
mov
int3
mov
out
jmp
cs
clc
push
mov
fisttpl
divb
cmp
in
and
add
mov
xchg
inc
jmp
imul
sub
loopne
imul
pop
inc
clc
ret
loope
movsb
mov
pop
jb
jbe
nop
ja
and
popf
xor
jecxz
imul
cmp
push
cld
test
roll
into
lret
cs
inc
ljmp
loop
dec
sbb
lock
bnd
cmpsl
mov
stos
shrl
addr16
sbb
jmp
pop
cmp
mov
cld
out
imul
rolb
stos
sbb
lahf
inc
fwait
insl
pop
pop
adc
loopne
in
imul
jns
enter
sbb
cli
fnstcw
out
popf
out
fdivrs
sub
sti
inc
xchg
mov
not
ja
invd
mov
mov
inc
in
cmp
dec
mov
cmp
daa
xchg
fisubs
pop
adc
fstpt
inc
cmpsb
dec
sub
dec
fadd
aam
pop
out
clc
ret
lahf
adc
xchg
es
mov
mov
std
cli
clc
leave
xchg
cwtl
xchg
mov
inc
xchg
imul
in
sbb
pop
fadds
pop
faddl
cmpsb
inc
in
lods
push
and
insb
cmp
por
inc
ret
sub
mov
jno
test
mov
jae
cmp
adc
negl
pop
xor
jbe
jle
sbb
push
xchg
inc
inc
jle
jecxz
cmpsl
inc
mov
dec
out
roll
and
or
inc
sub
nop
cmc
lret
in
add
inc
das
int
jnp
or
push
aad
jp
fadd
ja
fistpll
fcmovnu
mov
lret
imul
mov
lret
xchg
cmpb
push
inc
es
push
int
fbld
jp
jno
adc
sub
lea
mov
rol
fdivrs
push
cmpsl
xchg
sub
into
ljmp
mov
fnsave
pop
push
push
cmpsl
xchg
testl
loop
xchg
loope
in
xor
jb
push
repnz
pop
jns
mov
push
aaa
lea
and
sbb
icebp
sti
shrb
add
stc
mov
ret
push
sbb
roll
add
push
fistl
jne
rcrb
mov
es
inc
and
sbb
fldenv
dec
lods
jbe
lds
pop
pop
mov
cwtl
mov
jnp
lahf
dec
dec
pop
rcrb
pop
xchg
out
add
flds
fldcw
into
shr
pusha
mov
rorl
in
js
addr16
pop
in
cmc
dec
adc
loope
mov
jle
inc
imul
stos
jno
xlat
inc
dec
jno
hlt
fmul
cltd
lret
sbb
fcmovnb
out
xchg
cmp
inc
xlat
decb
and
cmpsb
imul
jge
xchg
pop
adc
mov
xchg
mov
int3
push
xchg
fwait
push
or
or
int3
mov
jns
loopne
lea
mov
cmp
mov
pusha
fldcw
setp
cmpsl
mov
sahf
mov
incl
xor
mov
pop
cld
mov
ret
sbb
xorl
idiv
mov
out
std
adc
push
iret
rolb
imulb
mov
ret
in
dec
nop
test
fisubl
stc
jp
ja
dec
insb
sub
into
sbb
imul
pop
addr16
mov
mov
mov
mov
adc
mov
mov
pop
mov
inc
addr16
aam
mov
adc
adc
xor
pop
movups
dec
dec
jbe
rcrb
mov
test
ret
shll
pop
outsl
div
xchg
enter
sub
xchg
mov
pop
clc
stc
stos
ja
fs
fsubs
push
addr16
test
insb
ficompl
test
sbb
or
dec
jo
popf
rol
xchg
pop
sbb
push
mov
das
mov
push
xchg
jg
xchg
xrelease
bound
insl
aas
lds
cmp
outsb
je,pn
stos
jle
test
jecxz
and
push
jbe
push
cs
cltd
dec
idiv
repnz
xchg
xchg
adc
loopne
sbb
xchg
cmp
add
mov
movsb
imul
mov
inc
imul
jb
dec
dec
call
insb
push
mov
cmpsb
jle
js
ret
jbe
scas
cwtl
rcll
cmp
add
insl
aad
push
aas
or
xchg
fistpl
mov
mov
fnstenv
dec
sbb
add
gs
lods
popf
pop
shlb
mov
pop
sbb
mov
jo
lds
jmp
xchg
add
leave
mov
mov
or
stos
mov
sub
loop
inc
insl
cld
lds
xor
push
out
cvtps2pd
push
rorl
push
add
xor
cmpsl
idiv
mov
xchg
sbb
inc
rorl
imul
sub
and
js
ds
popf
stos
adc
dec
jecxz
aad
pop
mov
inc
ret
jecxz
sub
es
push
pop
mov
push
jmp
lock
xchg
test
sub
imul
es
repnz
aad
push
push
sbb
jge
pop
pop
arpl
mov
loope
mov
lock
jmp
dec
dec
jno
add
push
and
mov
and
sbb
cmp
movsl
sub
add
in
nop
inc
sbb
xchg
xor
and
xchg
dec
push
loopne
jns
inc
testl
push
jne
mov
test
movsl
inc
aad
ja
iret
xor
inc
add
test
fisttpl
aad
adc
xlat
cmpsl
inc
mov
jbe
xchg
and
mov
mov
jno
hlt
xor
ljmp
inc
pop
mov
dec
sub
inc
xlat
or
pop
daa
inc
sti
cli
inc
stos
jne
popl
sahf
inc
xor
fldt
ljmp
xlat
push
pop
es
jno
decl
push
and
jne
arpl
push
incl
outsl
sti
pop
ror
fnstcw
dec
idivl
fldlg2
push
xor
push
sbb
pop
pushf
int
lea
pop
fists
mov
es
arpl
xchg
aas
push
mul
fisubrl
jmp
mov
aad
nop
and
aaa
pop
jns
out
popf
sarb
aad
pop
aas
rol
mov
pop
dec
push
sub
dec
cmp
mov
or
xchg
cmpsb
adc
ljmp
jl
add
mov
push
lods
xchg
sti
jne
sbb
mov
in
jp
rolb
sub
inc
jb
jne
stc
nop
ficompl
in
pop
frstor
movsl
rclb
test
test
repnz
jns
mov
jnp
mov
jp
fcmovb
mov
xor
xlat
adc
out
mov
stc
ficompl
and
push
fwait
scas
mov
mov
xchg
mov
out
ss
mov
fwait
std
stc
mov
js
push
cmc
push
ret
mov
inc
jecxz
lret
cmpsb
shl
out
pop
mov
shrb
fdivrl
mov
push
push
test
sar
push
xchg
push
xlat
icebp
push
in
push
adc
push
test
fidivl
daa
add
andb
jg
test
mov
ret
test
loop
ss
xchg
push
lods
xchg
enter
pushf
or
aaa
jge
stc
lock
std
xor
cmpsb
jbe
jle
pop
call
push
push
bound
loop
mov
add
enter
test
xlat
popa
push
rcrl
and
cmovo
ds
sbb
push
lahf
xchg
sub
push
cmpsl
les
sbb
cld
adc
mov
out
mov
add
jno
xchg
sub
mov
or
xchg
mov
inc
jb
neg
lds
lock
movsl
push
lea
cmp
aad
sahf
testl
xor
adc
leave
mov
mull
jge
dec
push
lock
mov
mov
cmpsl
hlt
sahf
aam
xor
aad
jne
rep
cmp
push
push
mov
loop
push
fidivrs
fists
lea
xlat
xchg
xchg
popa
sti
stos
mov
sub
dec
aas
test
mov
push
push
inc
push
jae
dec
aad
mov
push
xor
push
xchg
scas
add
mov
adc
scas
mov
repnz
jb
xlat
mov
shll
aam
push
fwait
test
clc
dec
mov
movsb
mov
pop
push
es
into
xchg
bound
fisttpl
mov
loope
inc
loope
roll
adc
rorl
mov
mov
pop
jle
popa
into
mov
mov
push
aad
jno
test
out
adc
inc
out
sub
popf
fstps
cmp
add
lods
js
sbb
test
jmp
push
jnp
jle
fsub
adcl
test
or
rclb
test
or
adcb
mov
cmp
mov
imul
repnz
imul
inc
fsub
mov
xlat
xchg
push
jbe
cmp
and
cmpsl
cli
inc
ret
mov
ficompl
out
fld
xchg
sub
mov
push
and
and
lock
clc
push
aas
mov
lret
add
cld
mov
dec
std
dec
xchg
ret
fwait
dec
loope
add
mov
mov
loope
dec
fiaddl
push
lahf
out
es
loope
or
stos
testl
fldt
int3
inc
jge
push
fwait
rclb
and
ret
mov
mov
xchg
inc
repnz
inc
mov
outsl
mov
sarb
rclb
sbb
out
jne
pop
add
sti
pop
push
outsl
or
adc
mov
sti
pop
imul
ret
mov
jae
jg
mov
decb
push
cli
in
inc
ss
jnp
pop
push
jno
sbb
test
push
or
arpl
mov
les
fistps
sub
stc
sub
shll
and
pop
xchg
add
adc
pop
idivb
dec
outsb
and
xor
xchg
mov
test
stc
movsl
adc
cmpsl
jmp
test
add
out
stos
dec
xlat
jmp
not
aad
sub
xchg
addr16
shrl
mov
cmpsl
out
dec
aaa
repnz
dec
sub
dec
jl
in
pop
ljmp
jo
mov
cli
imul
mov
hlt
fisttps
jle
sub
dec
mov
sub
push
jbe
jp
negb
repnz
inc
shll
popf
or
push
push
leave
in
push
jns
gs
xor
mov
mov
in
mov
add
popl
jae
jns
out
scas
stos
addb
xchg
mov
and
insl
mov
nop
outsb
daa
aam
jns
inc
push
popa
rep
andl
inc
add
js
test
mov
cmpsl
jg
sbb
imul
adc
xor
inc
dec
cmp
andb
xchg
inc
aaa
push
movsl
add
xor
mov
or
push
stos
cmp
lret
xchg
sbb
sbb
xlat
scas
pop
mov
aas
sbbl
xchg
mov
dec
xchg
jp
mov
push
clc
pop
pushl
test
les
cmp
xlat
test
xchg
xor
fisttps
fisubl
or
test
sahf
out
stos
lods
pop
ret
add
movsl
sub
sbb
mov
lcall
sub
ret
add
mov
jmp
sub
hlt
cld
cmpsb
aam
das
push
mov
jo
fcomi
push
int
out
rcr
push
pop
lret
pop
inc
pop
pop
push
sti
shr
or
stos
push
mov
sbb
int
cmpsl
inc
jo
in
or
sbb
sub
push
fcmovu
out
sub
mov
imull
lods
adc
mov
ret
mov
dec
iret
outsb
pop
lods
lret
add
jnp
loope
shrl
push
fisubl
push
dec
mov
xchg
mov
test
jo
sbb
pop
dec
js
push
mov
icebp
or
pop
cmp
sbb
cs
xchg
and
movsl
adc
cli
cmc
push
push
xchg
insl
fistpl
inc
push
xchg
mov
xchg
test
negl
dec
dec
mov
in
pop
jno
xlat
fcomps
jb
inc
push
mov
mov
sbb
mov
inc
dec
sahf
push
loop
cmpsl
cmovge
ret
int3
jge
jecxz
scas
loope
insl
out
push
dec
sti
push
and
inc
out
and
lret
lret
jg
repnz
ja
add
test
add
movsl
in
cmp
mov
decl
out
negl
jmp
inc
push
ds
or
daa
pop
aaa
loop
pop
push
cmpsl
sbb
in
loope
js
mov
xlat
aad
cs
mov
sbb
cwtl
adc
popa
dec
mov
xlat
cmp
nop
xor
stos
roll
in
xchg
repnz
xorl
cld
fisubrl
sbb
inc
les
push
mov
mov
jg
sbb
idivl
movsb
lret
inc
out
movsl
add
clc
inc
xchg
call
or
xchg
out
rcrb
flds
outsb
scas
xchg
mov
inc
imul
sbb
cmpsl
pop
sahf
mov
ret
dec
loop
ficoms
rolb
repnz
fldcw
fwait
lcall
jp
mov
loopne
outsb
mul
xchg
ret
add
cltd
mov
aad
cmpsl
adc
mov
pop
jbe
push
or
sub
mov
scas
sub
fiadds
loope
jbe
mov
sub
pushf
mov
scas
int
fwait
nop
icebp
fcoml
xchg
jno
sahf
cmpsl
pop
leave
push
fsts
push
push
jp
and
mov
arpl
dec
fwait
inc
ret
push
rclb
push
inc
outsb
jmp
add
daa
push
stc
xor
fists
into
push
jb
cmp
cmpsb
add
out
jmp
xchg
out
jno
lea
stc
in
and
jae
xchg
aam
adc
nop
aam
outsb
jnp
xlat
clc
mov
test
add
loope
cmp
inc
dec
ret
xchg
in
inc
imul
rcrb
clc
out
dec
jbe
lea
faddp
cmp
cwtl
xchg
ss
pop
fiaddl
or
ret
inc
lds
cmpl
int3
stos
subb
dec
dec
push
inc
sti
repz
jle
xchg
sti
testl
inc
arpl
inc
mov
test
cmp
cmpsb
xchg
jns
fldcw
bound
ret
sbb
xchg
add
mov
stc
std
sub
repnz
inc
icebp
sub
lods
andb
repz
rcll
imul
out
movsl
nop
jb
jbe
daa
in
cli
jnp
roll
inc
inc
les
and
pop
jbe
fidivs
mov
inc
lods
filds
ret
adc
add
mov
adc
lods
andb
fnsave
jb
mov
cmc
dec
pop
xor
cwtl
imul
in
or
add
adc
mov
xchg
push
loopne
je
xor
scas
jge
sahf
lods
dec
insb
fs
int3
xchg
cli
inc
popf
pop
fildll
out
adc
in
mov
mov
stc
cmpsl
fdivl
mov
mov
hlt
jo
fcmovnbe
shlb
je
inc
imul
jle
repnz
adc
dec
and
sbb
jle
adc
mov
adc
jmp
cmpl
je
fisttpll
loope
ret
or
push
negl
pop
neg
mov
lock
cmc
add
repz
cmp
fldt
adc
cmpsl
js
cmp
cs
jb
test
push
shrl
push
xchg
push
js
inc
or
and
pop
mov
add
test
movsb
dec
inc
jo
testb
xchg
neg
inc
xchg
das
jmp
sbb
fsubl
xor
shrb
aad
data16
push
es
dec
aaa
movsb
test
xlat
sbb
scas
pop
scas
dec
negl
sbb
inc
fiadds
inc
cli
or
mov
fnstsw
cwtl
into
push
imul
fmul
push
shrl
mov
dec
mov
cli
repz
push
hlt
xchg
push
xor
lcall
data16
in
popf
subb
loope
pop
or
jmp
push
push
imul
lcall
imul
insl
adc
mov
inc
es
lds
pop
mov
sub
mov
rcrb
movsb
push
sbb
add
es
es
movsl
sbb
sti
sub
stos
push
aaa
out
pop
pushl
movsl
mov
in
inc
scas
sub
sub
fistl
icebp
sbb
dec
sub
push
movsl
lock
test
push
fiaddl
ret
sub
es
adc
fucomi
xchg
lods
dec
psllq
add
push
sbb
mov
das
scas
adcb
jg
inc
insb
fwait
cmp
rclb
ficompl
pop
mov
xchg
mov
or
mov
push
add
out
in
aaa
sbb
int
stos
loop
sarb
fsts
ja
aaa
je
push
cli
inc
lea
inc
popf
insb
fcomp
fistpl
scas
pop
ret
mov
jo
cli
xlat
mov
sub
mov
scas
cltd
pop
xchg
sti
gs
sti
out
loopne
ud1
andl
insl
jno
test
std
iret
pop
xchg
jne
inc
inc
adc
push
jo
loope
inc
adc
fnsave
stc
jbe
imul
pushf
mov
mov
sbb
mov
mov
repz
shrb
stc
or
dec
call
add
xor
shl
add
push
ret
out
jbe
mov
out
in
adc
dec
sbb
inc
mov
xchg
fwait
es
loopne
out
shll
push
lret
fldt
mov
stc
ret
jecxz
mov
popa
xchg
aad
inc
call
es
push
pusha
jmp
dec
fimull
lcall
xchg
pop
jo
dec
fcmovnb
fnop
fwait
push
repnz
or
out
lret
out
jb
or
int
nop
xchg
cli
scas
imul
cmpsl
call
insl
into
sahf
inc
jmp
add
clc
xchg
sarl
or
lods
cs
shll
movsl
push
leave
xlat
mov
pop
int3
test
sti
jmp
cmp
lods
scas
pop
mov
mov
push
jne
add
mov
jnp
ds
fpatan
in
xchg
stc
push
imul
loop
pop
jle
cmc
lods
ret
pop
insb
cmp
stos
aam
pop
mov
pop
mov
aad
imul
jne
imul
cli
in
xchg
inc
arpl
fdivl
pop
pop
jle
cmp
xchg
add
out
jne
xchg
popa
mov
lahf
cmc
test
inc
out
cltd
das
or
daa
filds
imul
cmp
adc
imulb
or
pop
jne
outsb
scas
pop
ss
mov
lret
shr
nop
aaa
cmp
pop
jmp
rcl
rcr
pop
imull
shll
repz
xchg
repnz
sub
cltd
fcmovnb
cld
test
das
inc
cmc
pop
jle
sub
sub
fstpt
push
rclb
xchg
push
pop
sbb
or
mov
sub
xor
pop
mov
fnstcw
movsb
fisubrl
shlb
scas
xor
xchg
inc
inc
cmc
aaa
and
xor
ss
pop
enter
dec
and
enter
test
test
or
rorb
iret
dec
jae
loope
push
push
cmpsl
mov
lret
xchg
jmp
ss
mov
pop
add
test
leave
sbb
popl
push
xchg
into
fisttpl
jl
cwtl
dec
push
ror
in
adc
bound
sahf
out
mov
push
aad
pop
jae
sub
in
xlat
negl
inc
xchg
cmpsl
fbstp
xchg
xor
mov
dec
jb
jg
dec
mov
les
sub
jmp
jb
cmpsl
ss
xor
lea
fstpl
push
dec
mov
mov
insl
pop
loope
sbb
adc
pop
scas
cmp
loop
jmp
out
lock
sub
cmp
push
outsb
and
inc
test
pop
nop
xchg
sbb
adc
inc
loope
fnstenv
fldl2t
cwtl
cltd
nop
sub
jbe
outsb
mov
std
mov
sarl
mov
adc
dec
scas
sub
repz
lock
inc
mov
stos
dec
fiadds
sbbl
mov
mov
outsb
sbb
roll
test
les
mov
ficoms
or
xor
jmp
xchg
push
scas
xchg
daa
cmp
fabs
les
out
mov
jl
pop
inc
and
or
mov
pushf
addr16
mov
xchg
shr
clc
ficompl
jnp
not
pop
jno
rol
pop
adc
push
sbb
ret
data16
mov
and
add
adc
pusha
js
jne
cmp
rcrb
test
pop
cbtw
sbb
pop
sbb
sub
loope
mov
or
loop
pop
xchg
jno
dec
mov
push
xor
cs
shr
and
pop
fiadds
xchg
adcl
mov
loope
adc
xchg
and
lock
cmpsl
loop
fdiv
imul
sub
mov
pop
inc
es
lea
dec
and
xor
adc
xchg
fcmovne
adc
jb
leave
es
clc
lret
or
aam
icebp
incl
xor
sbbb
aam
imul
shlb
jbe
push
and
xchg
fisubs
in
jl
xchg
cmovp
lret
sub
add
mov
daa
orl
pop
outsl
inc
mov
mov
push
pop
iret
je
fs
xchg
jb
sbb
sahf
cmp
inc
adc
rcr
cwtl
pop
mov
out
das
imul
pop
pop
repz
sbb
mov
push
xchg
fcmovbe
xchg
jo
cltd
dec
testb
cld
loope
mov
mov
mov
lods
es
dec
dec
cmp
aad
adc
sbb
adc
ds
scas
sub
adc
mov
std
dec
imul
inc
clc
mov
add
roll
add
push
jo
js
loopne
aad
dec
shld
call
mov
testb
imul
subb
push
jp
cmpsb
call
inc
es
cmp
gs
pop
mov
aam
cwtl
stos
sub
cmp
fnstcw
sbb
xlat
inc
enter
lods
movsb
xchg
cmc
aaa
inc
jbe
stos
mov
mov
pop
sbb
pushf
addl
pop
icebp
lock
and
inc
sub
dec
lock
adc
divl
cmpsl
call
lods
sub
sahf
jnp
lahf
xor
icebp
mov
ss
js
mov
clc
jbe
push
cmp
imul
data16
mov
stos
daa
jge
sahf
jne
shrb
ficompl
pop
shr
dec
inc
div
mov
jbe
jno
fs
ljmp
stos
adc
stos
ljmp
dec
mov
jnp
shlb
adc
push
cmp
daa
out
push
push
ljmp
or
inc
mov
xchg
push
ret
fldl
mov
out
push
adc
insl
pop
add
adc
inc
sar
outsl
mov
test
and
xchg
out
xchg
xor
add
sbb
push
stos
pop
in
enter
mov
ret
ljmp
add
jp
outsb
cwtl
cmpsb
arpl
fstl
add
icebp
inc
jl
mov
cld
call
mov
inc
mov
cmpsl
xchg
cltd
imul
and
pop
mov
fsubs
repz
or
push
pop
testb
push
sbb
cltd
xchg
lret
push
js
mov
push
sbb
push
cmpsl
int3
pop
mov
push
out
mov
repnz
sub
cmp
movsl
lcall
and
jns
icebp
jo
aaa
jle
mov
sbb
rcr
jmp
insl
outsl
jg
mov
xchg
or
jmp
mov
pop
es
xchg
mov
jge
sbb
fdivs
fidivrl
fnstenv
xorl
mov
sub
adc
cwtl
movzwl
lret
mov
in
fidivrs
loop
cmpsl
mov
ljmp
jno
or
je
push
ss
scas
xchg
out
icebp
andl
push
xlat
cltd
test
add
xlat
sub
jbe
lods
mov
pop
std
ret
mov
mov
or
adc
sbb
movsb
pop
and
cwtl
mov
xchg
jbe
fnsave
adc
cmpsl
xor
mov
shll
mov
arpl
inc
adc
cli
cwtl
into
cmpsl
add
sbb
xchg
push
jmp
lcall
and
rcpps
ret
ret
psrlw
nop
or
lods
jno
js
pop
mov
in
xor
fimull
imul
ds
xor
das
clc
icebp
imul
aad
push
das
lock
push
fldenv
repz
mov
lret
xor
mov
outsl
lods
int3
mov
inc
xchg
mov
sub
insb
arpl
and
daa
jno
or
xchg
scas
lds
subb
dec
and
fstpl
jae
xlat
xor
jl
sbb
test
ds
cmp
cwtl
push
push
out
push
mov
das
or
pusha
xor
sub
cs
push
je
test
inc
xchg
pop
ja
out
sarl
mov
cmp
push
jno
lahf
je
mov
adc
add
sbb
push
cmp
xlat
inc
jb
push
adc
jo
jecxz
inc
ss
pop
sbb
sti
jae
out
subl
aas
mov
jecxz
repnz
push
sub
mov
aad
cmpsb
sar
mov
jnp
in
dec
aam
adc
push
fs
popf
sub
mov
cmpsl
push
push
es
lds
cwtl
imul
cmpsl
sahf
jle
jb
or
add
stc
jbe
div
fbstp
inc
ljmp
shrb
mov
mov
shrl
mov
js
fadds
xchg
mov
flds
clc
out
cmpsl
pop
cld
cli
cmpsl
fnstenv
pusha
sbb
sub
neg
scas
repnz
mov
push
in
mov
inc
fwait
test
cmp
adcl
fsub
les
imul
push
je
jg
mov
adc
and
push
repz
mov
fistpl
int
stos
divl
movsl
loop,pt
mov
inc
cmc
jge
push
xchg
fldt
inc
mov
and
dec
xchg
fisttpl
mov
push
adc
push
stos
pop
mov
push
outsl
sbb
xchg
inc
sub
lods
pop
out
out
test
sub
xchg
repnz
mov
movsb
mov
testl
loope
aas
not
push
jbe
mov
ds
sbb
or
rclb
rcr
cmpsl
jb
inc
sti
mov
pop
stos
cld
inc
das
adc
lret
addr16
and
pop
pop
xchg
and
pop
lods
adc
inc
push
stc
lock
scas
pop
inc
daa
cmp
sbb
cmp
scas
daa
cli
or
mov
pop
jb
xor
add
fwait
inc
fists
outsb
sub
shlb
shrl
subb
adc
cmp
ficoms
push
pop
es
jp
ret
negb
enter
test
xlat
imul
mov
xchg
sub
xor
mov
ret
adc
inc
call
ss
aam
rcl
fmuls
lcall
aas
ja
push
pop
inc
cs
and
jle
dec
xor
push
lret
jae
or
push
mov
es
fstps
xlat
ja
fwait
pop
fildll
dec
cld
loope
push
inc
inc
icebp
jl
xchg
inc
push
stos
fildl
decb
pop
idivb
popf
fld
sbb
fldl
mov
dec
aaa
jnp
in
pop
jl
and
jbe
sub
call
cmp
jne
add
sbbl
sbb
or
cmc
dec
inc
push
inc
repnz
jae
loop
pop
movsl
repnz
add
sar
lret
repnz
fidivs
mov
xchg
cli
loope
push
xlat
mov
fcmovnbe
daa
adc
fprem1
scas
mov
xor
aad
jbe
test
cmp
test
lods
imul
out
pop
push
xchg
sbb
cmpsl
pop
and
test
push
cmpsb
test
cli
ret
and
addr16
pop
aas
inc
cs
add
test
push
and
daa
pop
pop
ds
sbbl
out
mulb
xchg
adc
mov
push
sbb
imul
in
shll
stos
test
ja
xchg
mov
fbld
add
mov
cli
call
fcomip
push
repnz
jle
aad
cld
rclb
enter
rorb
xlat
jl
lret
xchg
adc
shll
les
cmpsb
fdivs
add
fbld
inc
xchg
sahf
push
sub
rol
cmpsb
les
daa
sbb
pop
out
cmp
rcr
sub
lds
leave
jbe
stos
lods
ret
push
mov
dec
sbb
cld
ljmp
push
mov
mov
jae
mov
mov
or
cmp
inc
mov
js
mov
test
sub
pop
push
rcll
xor
ss
loope
sti
fcmovnb
lods
mov
lret
push
pop
es
sbb
lods
loop
add
sti
jo
inc
es
jge
push
cmpsl
sbb
mov
decb
cmp
jno
sub
outsl
js
mov
imul
popf
movsb
inc
aaa
push
inc
inc
call
pop
into
lock
jmp
inc
push
movhps
dec
hlt
repz
paddusb
mov
ret
cmp
jbe
dec
int
cs
sub
loop
ror
jl
test
in
aad
clc
xchg
in
pop
pop
lods
sbb
ret
nop
enter
dec
lcall
jl
jmp
mov
repnz
cmp
sub
fistpl
ret
cld
shlb
enter
and
push
dec
inc
aam
add
repnz
in
pop
xchg
aad
push
mov
out
insl
call
xchg
adc
lea
mov
loope
cli
or
push
lret
fistl
iret
stos
adc
outsl
aad
jmp
ret
into
icebp
shll
jne
pop
lods
lret
hlt
lret
jl
mov
mov
add
aam
inc
xchg
push
pop
ss
jo
in
jp
add
stos
sbb
iret
mov
add
out
hlt
sub
push
xchg
sti
fdivl
mov
mov
testb
xchg
imul
sub
popf
lods
xchg
stos
cmpsl
jne
fisttpl
lret
xchg
std
clc
not
pop
sbb
mov
leave
mov
sti
inc
test
adc
jnp
out
sub
mov
jmp
and
fidivl
xchg
jl
jl
push
adc
mov
mov
fcmovu
addr16
xchg
es
popf
repnz
ret
in
jae
jle
xlat
aam
cwtl
sbb
icebp
mov
and
mov
xadd
loopne
std
dec
sahf
inc
jnp
xchg
cwtl
sarl
daa
rcll
jb
or
and
cmp
bound
xchg
sbb
clc
cmc
pop
add
movsb
mov
lock
jp
pusha
cmpsl
sarb
into
xchg
jae
jno
fwait
inc
ficoml
out
inc
daa
aad
clc
cmpsl
test
incl
stc
or
ja
aaa
mov
sbb
pushf
loopne
jmp
cmpsl
std
daa
lret
out
gs
pop
cmpsl
scas
fsts
mov
dec
fdivr
cmpsl
movb
loope
iret
mov
lret
jnp
add
jle
jns
pop
sbb
add
ja
sub
std
push
cmp
lret
push
add
ja
imul
push
mov
mov
fninit
push
push
xchg
cmp
jno
sbb
jb
mov
mov
mov
testl
cmpsl
clc
lcall
ds
pop
add
jae
leave
ret
fld
jle
adc
js
xchg
les
xlat
popa
jne
push
roll
cmpsl
and
call
gs
push
inc
sub
cld
fcmovnb
and
mov
notl
pushf
mov
cli
xchg
push
sbb
ret
mulb
cmpsb
push
rep
jmp
or
rcrb
inc
pop
jnp
sub
rolb
flds
inc
xchg
mov
out
lret
lea
xchg
fidivrs
xchg
jb
decl
push
or
movsb
aas
dec
mov
inc
jno
sbb
in
or
mov
in
xor
lahf
decb
sbb
inc
pop
imul
es
inc
cmp
xorl
out
insl
sti
xor
pusha
insl
xchg
mov
lret
mov
iret
fnstenv
push
rcll
and
lds
sbb
pop
cmpb
jb
mov
jp
sbb
jns
lods
inc
add
mov
rclb
stos
add
imul
mov
pop
push
or
xchg
and
sbb
xchg
jp
jg
mov
andl
in
aas
out
div
data16
xor
cltd
pop
cli
fbstp
pop
rol
roll
out
js
jne
fistps
pop
rcll
aad
mov
popf
test
lret
aam
sbb
sti
pop
jns
push
movsl
ljmp
insl
pop
je
cltd
inc
push
lea
rcl
stos
mov
xchg
aad
loope
xor
push
es
add
aad
or
inc
loope
test
pop
imul
icebp
xchg
mov
lret
push
sti
mov
xchg
jmp
xchg
dec
mov
pop
ret
and
roll
es
test
fstps
and
in
jns
add
and
xchg
mov
icebp
clc
icebp
imul
insb
dec
inc
fistl
mulb
xor
pop
in
mov
repz
pop
mov
mov
mov
lods
pop
mov
fists
jecxz
xchg
lock
xchg
adc
push
xor
stc
in
mov
pop
loope
jnp
pop
icebp
cmpsl
add
cltd
roll
orl
add
enter
mov
outsl
jle
insb
sbb
jl
lods
cmpsl
mov
cmpsb
jmp
fwait
jb
adc
rclb
ret
push
insl
test
ret
ficoml
inc
inc
mov
mull
sub
arpl
inc
fisttps
outsl
scas
jle
test
fidivl
lock
mov
adc
push
mov
dec
jae
not
in
jns
ja
in
daa
rcrl
cmp
rcr
push
cltd
inc
scas
xor
xor
test
pop
sti
and
loop
mov
daa
and
pop
sbb
test
movsb
lahf
adc
in
shll
mov
call
loope
push
out
les
xchg
cmpsb
arpl
nop
repnz
pop
aam
std
push
inc
fs
fisubrl
int
enter
scas
push
inc
lods
mov
push
mov
fisubl
into
mov
fdivs
test
mov
mov
or
or
pop
jl
imul
pop
rcr
adc
mov
dec
mov
ret
imul
add
fisttpl
test
movsb
sti
cli
dec
in
inc
aad
fildll
ret
lea
test
inc
aaa
in
int3
pop
sub
add
loope
mov
loope
cmp
hlt
or
xchg
inc
add
repz
ret
popf
mov
pop
loope
testb
aam
je
iret
lea
or
jno
xchg
jne
lods
je
adc
inc
push
daa
sub
add
outsb
jle
scas
lock
mov
push
leave
sub
lret
cld
adc
js
loope
mov
add
shll
imul
iret
cmpsl
mov
add
out
sub
xchg
push
pop
cmp
daa
fnstenv
xchg
scas
aas
cmpsb
dec
inc
out
mov
lock
mov
mov
mov
mov
ret
cmc
xor
ret
push
les
inc
add
fbstp
es
pop
lods
movsb
ss
cmp
mov
ret
leave
repnz
xor
sub
repnz
pop
jle
add
mov
pop
fisubs
xor
mov
add
shll
iret
shrb
not
adc
insl
lds
xchg
sbb
filds
fs
insl
insb
iret
fdivp
push
xchg
push
addr16
mov
pop
pop
inc
xchg
fcmovnu
pop
add
ret
push
or
adcl
imul
dec
test
dec
je
and
xchg
sub
out
jbe
mov
jb
cld
ret
sbbl
cmpsl
dec
sahf
mov
cltd
arpl
stc
adc
jbe
lods
mov
cmpsl
or
rcll
aad
mov
ret
inc
jle
popf
jmp
sub
aaa
fisubrl
cmp
sub
sarb
fdivrp
pop
aas
jbe
dec
lahf
push
pusha
jmp
pop
hlt
bound
outsb
push
dec
je
xchg
stc
or
lret
movsb
xor
leave
xor
jb
sbb
js
pop
mov
loopne
cmc
fbld
pop
cmpsb
stos
lcall
imul
jg
shl
fisttps
mov
lock
xchg
insl
nop
fucom
movsl
inc
fisubs
add
push
pop
add
lahf
divl
ret
out
jo
sub
add
fcomi
ffree
fstpt
pop
rcrb
dec
nop
ret
inc
out
pop
je
xchg
mov
leave
iret
push
xchg
repnz
mov
cmpsb
rorl
inc
lea
mov
mov
or
fildl
xlat
mov
fistl
dec
mov
iret
xlat
and
lock
xlat
jl
push
xchg
push
ret
lahf
scas
jns
xlat
jno
dec
lret
ja
fdiv
fistps
cmp
xchg
fs
dec
xlat
std
iret
icebp
cmc
and
xchg
gs
jmp
test
arpl
flds
rcrl
ljmp
fsubrl
fildll
pop
adc
fisubl
pushf
clc
sub
insb
fidivl
fistps
and
imul
jo
loopne
ljmp
xchg
nop
aad
hlt
fs
jne
inc
dec
cmc
dec
hlt
test
push
sub
cli
or
clc
pop
jbe
add
subb
cmp
push
sbb
or
ds
loope
cmp
daa
sbb
inc
mov
add
lret
test
fs
in
cmpsb
shll
les
aas
push
push
es
push
inc
lea
ds
mov
push
repnz
sub
adc
cmp
mov
movsl
data16
jge
xchg
icebp
mov
decb
xchg
jl
arpl
ja
repnz
cmp
push
or
jg
aam
pop
inc
jns
add
jmp
or
sub
push
fidivrs
jl
sub
mov
outsb
ja
dec
sub
xlat
push
or
jmp
xchg
xchg
fincstp
push
test
fbstp
mov
imul
cs
incb
adc
adc
inc
in
inc
in
adc
outsl
inc
pop
jo
loopne
loop
pop
sti
fbld
jae
out
fdivrs
xlat
jecxz
repnz
loope
jae
adc
push
or
jp
dec
push
mov
sbb
cmp
leave
test
mov
shl
cmpsl
cmp
fwait
jecxz
dec
sbb
fistl
jno
add
sub
pushf
jg
xchg
mov
mov
jge
sti
fistpll
nop
clc
stos
xor
cmpsb
ret
int
jnp
loope
sti
fcoms
push
add
hlt
inc
xor
ficompl
inc
scas
fs
pop
scas
icebp
jl
mov
inc
dec
add
fucomip
ror
sahf
inc
negl
adc
shl
fcomps
ret
push
adc
cmpsl
fadds
loopne
mov
nop
push
add
repz
push
mov
ljmp
pop
leave
cmc
jbe
gs
add
push
jbe
fcmovnbe
cmpsl
xor
inc
pop
iret
and
sbbl
into
xor
xlat
xchg
in
out
js
xchg
neg
pop
push
lahf
movsb
loopne
push
mov
jge
xor
addr16
popa
push
mov
mov
dec
frstor
fwait
mov
lcall
lahf
adc
dec
cmpsl
out
out
imul
mov
mov
push
clc
stos
fsubrs
ret
and
lds
icebp
mov
out
jne
fistl
inc
adc
cld
cmpsl
stos
js
les
rorl
loopne
scas
rcll
sti
pushl
mov
mov
in
push
cmp
lret
ret
ret
jb
xchg
repz
das
hlt
adc
jns
xchg
sbb
in
out
xlat
pop
fdivs
sbb
push
fstpt
jo
clc
ja
mov
push
pop
push
cmc
test
inc
pop
stc
sahf
jae
clc
faddl
es
xchg
jmp
loop
dec
aam
ds
leave
fldenv
dec
cmpsb
lods
push
xchg
test
mull
loope
icebp
jp
loopne
sbb
stos
mul
inc
push
nop
movsl
push
aam
je
andb
iret
jecxz
pop
xlat
stc
jae
and
mov
add
ljmp
aad
sti
in
ljmp
push
push
stc
out
and
fists
stos
clc
fsubl
shll
arpl
repnz
std
js
outsl
dec
mov
jmp
cli
xchg
in
xchg
movsl
sub
scas
mov
aam
sbb
push
mov
std
repnz
ficoml
add
push
repz
aad
rol
inc
sbb
jo
pop
fnstcw
push
xchg
inc
ret
xchg
test
rep
jne
sti
out
pop
fwait
push
repz
fdivrs
mov
xlat
dec
mov
pop
adc
je
push
stos
into
arpl
mov
sub
cmp
pop
inc
sbb
inc
loope
and
ret
fidivs
cmp
sub
repz
pop
mov
mov
lock
bound
rol
in
in
pop
cmp
mov
cmp
int3
loop
fdivrl
jp
sarl
lock
adc
pop
loope
fadd
pop
adc
sbb
in
xchg
fadds
lds
mov
mov
scas
inc
adc
pop
fwait
xlat
inc
inc
jns
sub
push
ja
cmp
mov
rorl
stc
out
gs
pusha
jecxz
mov
sub
sbb
bound
or
fsubrs
jne
ja
int3
lock
ds
mov
imul
or
cmp
inc
jno
lods
addb
add
mov
les
add
clc
repnz
xchg
mov
jo
lret
pusha
push
jbe
pop
mov
pop
cmpsb
sarl
movsb
shufps
mov
lret
loop
jmp
clc
jle
repnz
movsl
leave
adc
stc
call
fwait
clc
mov
mov
divb
xchg
std
imul
sar
mov
jb
xor
jge
xchg
sbb
mov
xchg
fwait
movsl
jnp
imul
jb
mov
lahf
cmpsl
dec
xlat
loope
ljmp
rcrb
ja
xchg
push
sbb
cmc
pop
test
in
lea
xor
jns
out
lds
jmp
stos
push
jbe
lret
fnsave
lcall
xor
push
jae
xchg
mov
gs
sbb
sub
mov
xchg
mov
js
bnd
or
fnstcw
std
fs
in
subb
xchg
pop
dec
in
inc
jbe
popa
addl
sar
addl
jb
scas
popa
ja
addr16
js
lret
mov
repnz
push
push
push
push
icebp
mov
jae
cmc
stc
mov
into
push
cmp
les
insl
inc
orl
jmp
aas
cmp
mov
lahf
pushf
fs
push
push
out
iret
rorb
cltd
lahf
jbe
lcall
hlt
jnp
push
mov
iret
push
fidivl
xor
and
imul
adc
adc
inc
mov
add
pop
out
or
adc
aad
mov
cs
xor
jno
clc
pop
fsubrl
outsl
cmpl
in
mov
push
fldcw
je
pop
out
cmpb
std
into
addr16
bound
inc
fdivrp
push
divb
mov
jae
call
mov
dec
push
jmp
ja
stos
test
mov
xchg
js
icebp
outsl
icebp
call
nop
mov
push
jno
cmp
mov
push
xchg
push
xlat
mov
je
xor
sar
out
popf
sbb
out
push
repz
ljmp
xlat
mov
mov
roll
repz
pop
or
out
lahf
inc
fnsave
and
inc
jmp
mov
rcl
inc
sub
cmc
imul
inc
sbb
loope
pop
shrl
fxch
out
add
into
pop
in
js
xchg
out
lret
xchg
mov
out
xchg
bound
xlat
ret
pushf
in
ja
mov
pop
mov
loop
sbb
addb
in
jge
push
repz
push
add
sbb
and
mov
aad
icebp
mov
fisubrl
sbb
mov
jge
ret
negl
mov
iret
adc
je
in
rcrb
aad
fnsave
jb
sbb
push
push
ss
jns
ret
es
mov
xchg
add
mov
fbstp
aaa
push
jge
jno
mov
lea
ror
leave
stc
mov
pop
mov
popa
loope
push
xchg
pushf
mov
repz
fildl
ror
lds
aaa
add
jmp
dec
mov
sti
ret
icebp
xlat
sbbl
test
add
aad
out
loope
adc
push
je
repnz
fcmovu
iret
add
adc
pop
mov
mov
cltd
mov
fldl
popa
loope
shl
addr16
push
loope
push
mov
idivl
xor
in
stc
pop
fcomi
lahf
sub
push
arpl
test
test
rclb
inc
pop
add
mov
pop
frndint
out
xchg
shl
cld
rorl
cld
popa
icebp
or
fbstp
xlat
sbbl
pop
mov
sbb
xchg
nop
push
js
ljmp
out
push
inc
push
rcrl
aas
cwtl
pop
add
xchg
popf
and
sar
int
fs
stos
std
adcl
sbb
jmp
push
pop
out
repnz
jno
mov
dec
inc
push
fcmovnu
subl
add
pop
leave
rcl
or
mov
pop
int
fildl
jmp
jae
fnstsw
mov
fwait
stos
cmp
cmp
jmp
jecxz
fistps
mov
dec
int
test
mov
aad
pop
xchg
cmpl
jbe,pt
mov
cwtl
int
mov
adc
mov
xlat
sti
mov
mov
push
xchg
stos
shlb
icebp
cmc
jae
ret
mov
loop
ja
aaa
rol
mov
mov
rcr
rclb
adc
loopne
dec
repz
icebp
xchg
mov
popf
divps
mov
inc
inc
jo
jecxz
lea
daa
inc
aam
push
aam
push
inc
pop
lret
jge
test
or
mov
or
movsl
cs
add
test
je
add
xchg
icebp
xor
out
push
repz
leave
mov
stc
and
mov
orl
loop
xlat
cmc
cmpsl
rcll
add
mov
xchg
test
in
mov
mov
fnstenv
repz
pop
xchg
pop
arpl
inc
cs
push
pop
stos
icebp
dec
ffree
negb
out
das
ret
je
outsb
jecxz
loop
lret
filds
imull
mov
imull
dec
mull
mov
push
std
js
push
lret
mov
cmp
xlat
pop
stc
inc
push
out
and
out
lods
or
mov
push
jmp
jecxz
pop
jb
popa
leave
push
pop
add
aad
pop
jp
cmp
das
in
xchg
xchg
icebp
addr16
and
bound
and
repz
scas
cmc
pop
loopne
negl
jns
ret
sbb
mov
cmc
adc
pop
notb
loope
cli
popa
fistl
inc
xchg
cmp
call
mov
test
stos
jbe
mov
das
jbe
arpl
sub
xor
pop
fcmovnb
lods
test
pop
aad
rorl
push
test
ljmp
pop
mov
pop
mov
lret
lret
xorb
icebp
test
mov
mov
aaa
pop
push
fdiv
mov
jp
pop
cltd
jns
out
call
inc
fldl
js
out
xor
mov
shl
sbb
repnz
addr16
mov
imul
push
jns
repnz
addr16
sub
push
aam
jno
out
int
stos
xchg
cmp
push
xchg
jp
fmul
add
dec
mov
jno
out
mov
or
aas
stos
inc
push
inc
fldcw
jl
data16
push
jo
lcall
sahf
mov
data16
sahf
stos
rcrb
call
sbb
adc
jmp
in
lods
fadd
pop
xchg
ret
ret
sbb
scas
sub
rol
imul
in
fistpll
adc
in
repnz
jmp
jmp
cli
xlat
stos
clc
dec
or
stos
fisubrs
dec
jl
pop
sub
pop
and
rcrl
das
pop
aam
sti
inc
insl
cmp
loope
scas
pop
aam
pop
adc
cmp
dec
pop
cmc
dec
out
les
inc
scas
ret
sbb
dec
cmp
cmp
ret
inc
cmpsl
rcll
inc
int3
mov
mov
push
inc
daa
das
add
inc
push
mov
int3
inc
int
mov
lcall
jge
push
mov
jae
mov
ficoml
test
xchg
int3
iret
fstl
outsb
sub
outsl
push
pop
jp
ret
pushf
popa
sbb
nop
add
ret
ljmp
jae
call
repnz
rorl
repnz
andb
shr
and
mov
cmpsl
cmpsb
mov
lock
push
test
ffreep
js
lret
notb
leave
sbb
outsl
mov
mov
pushf
aas
shl
repnz
pop
inc
hlt
popa
push
mov
sub
add
jne
sbb
fwait
je
lds
fs
ret
lods
push
stos
rcr
pop
xor
add
cmpl
pop
ret
jmp
jmp
leave
fcomi
xor
test
test
inc
pop
cmc
adc
rcr
xor
push
pop
js
scas
cmpl
mov
repz
xchg
mov
adc
mov
pop
daa
imul
rcl
xchg
mov
dec
pop
iret
fxch
adc
push
jns
cmpsl
and
rorb
iret
jo
repz
mov
mov
push
imulb
xor
lea
sub
sbb
sub
aad
fistpll
sbb
ret
iret
inc
scas
idivl
sti
push
ret
jae
out
xchg
pop
std
pop
xlat
mov
pop
lret
dec
lea
jb
movsl
dec
pop
scas
inc
xlat
inc
push
vxorps
icebp
in
and
repz
mov
lds
stos
pop
fadd
lcall
pop
ret
leave
mov
cmp
outsl
cmp
clc
mov
lcall
fpatan
sarb
sbb
leave
push
mov
lcall
pop
pop
fistl
jo
mov
lea
push
fisubrl
push
aas
pop
push
mov
fdivr
inc
test
or
and
inc
add
roll
int
out
lcall
pop
sbb
scas
fisubrl
push
sbbb
fmulp
xchg
test
or
mov
pop
ret
shll
test
cmp
push
imul
out
rcl
ffree
xchg
shrb
add
xchg
add
sbb
add
test
xchg
xchg
inc
pop
pop
int
std
pop
pusha
negb
cmpsb
and
mov
rorb
aad
or
sbb
mull
add
rol
lahf
leave
ret
scas
sbb
cmc
jb
lock
bound
xor
jecxz
adc
mov
pushf
adc
sbb
test
cld
test
std
repnz
cmpsl
adc
pop
movb
mov
in
xlat
push
jo
sbb
push
add
loope
scas
lea
xchg
popa
pop
imul
loop
in
clc
pop
push
inc
pop
and
movsb
stos
inc
fcoms
ret
sbb
test
mov
pop
cwtl
scas
out
enter
sbb
into
inc
out
jns
js
jle
vmovdqu
ljmp
dec
test
adc
cld
add
sub
rorl
cli
out
xchg
mov
xchg
mov
enter
dec
sbb
int
dec
mov
inc
aas
dec
xor
neg
inc
cmp
sbb
jmp
fldcw
xchg
out
pop
xchg
jmp
int3
xchg
fildl
cmpl
aas
into
xor
push
inc
loope
pop
xchg
adc
dec
fistpl
jp
push
sub
inc
jmp
loope
pop
lahf
jge
and
xchg
and
xor
inc
ja
dec
or
sbb
mov
int3
inc
inc
repz
call
jb
xchg
icebp
js
jno
jns
inc
lock
je
add
rcll
push
inc
imul
bnd
cmc
adc
push
mov
pop
loope
in
outsl
push
sti
inc
test
adc
cmpsb
inc
mov
mov
inc
sbbl
push
fs
jg
out
aad
fsubl
test
xchg
or
sub
push
jl
sbb
xlat
sbb
hlt
das
rorl
ret
jns
mov
inc
push
dec
rcrb
in
loope
popa
roll
jge
lret
lds
rcll
xchg
cltd
inc
or
in
clc
mov
rcr
leave
mov
testl
mov
jg
sub
lahf
fwait
dec
mov
inc
outsb
in
mov
movsl
jae
pop
mov
mov
cmc
aad
loope
push
gs
pop
jns
jmp
push
in
ret
mov
mov
push
test
test
outsl
push
push
iret
imul
stc
pop
xchg
sbbl
sti
jmp
xchg
loop
push
xlat
imul
adcl
add
jmp
and
xlat
daa
mov
cli
rcrl
and
inc
xlat
xor
xor
or
in
sbb
xlat
shll
pop
jecxz
jne
idiv
jmp
test
cmc
test
test
fisttpl
mov
jae
ret
cli
roll
xchg
lret
loope
xlat
fwait
pop
fstpl
divl
jl
mov
xlat
loopne
xchg
fistps
dec
aad
fildll
inc
ret
jnp
lods
xchg
ficoml
enter
aas
outsl
push
rorb
xchg
out
dec
mov
test
fildl
pop
fwait
jmp
outsl
pop
and
cli
or
sbb
add
sbb
test
xor
in
and
in
xor
push
pop
iret
pop
add
test
pusha
cmp
cmpsl
add
fucomp
jmp
mov
mov
xor
rol
xlat
pop
push
adc
sub
aam
stos
inc
mov
outsl
xor
in
in
adc
sbb
dec
icebp
rcll
cmpsb
imul
cmpsb
inc
int
repz
cmp
or
cltd
adc
dec
pop
cmpsl
add
or
push
stos
clc
adc
in
sub
mov
pop
inc
xchg
jbe
test
fs
movsb
mov
loop
cmp
pop
stos
push
out
jne
ret
cmpsl
mov
fisubrs
mov
ret
inc
fbld
es
aad
negb
inc
jno
fildl
cmpsl
gs
mov
js
fldenv
ljmp
loope
mov
lods
aas
ror
cmpsb
testb
sbb
mov
mov
inc
push
lret
jno
sti
add
ret
sub
pop
xchg
push
sbb
mov
sub
cwtl
aaa
push
es
subl
cmp
jmp
and
cmp
test
mov
lahf
dec
mov
rorl
shlb
ja
xor
cmp
mov
xchg
cld
rcrl
mov
rcll
movsl
addr16
scas
cmp
mov
dec
xchg
inc
imul
push
push
xor
jge
xor
xchg
in
shll
adc
repz
fcmovbe
mov
shl
xchg
mov
out
mov
fnop
pop
pop
ffree
or
iret
js
lret
push
in
loopne
add
xchg
adc
lcall
cmp
arpl
sub
int
push
movb
arpl
xlat
mov
fsubs
push
out
jl
js
lods
xchg
adc
stos
sub
jge
out
mov
bound
scas
cmp
inc
jo
push
roll
in
dec
stos
push
sub
xor
jno
cmp
loope,pn
mov
xchg
outsb
pop
movsb
in
in
addr16
pusha
and
jmp
mov
or
fistps
sbb
mov
sub
outsl
add
jb
mov
aam
out
xchg
xchg
jle
imull
jae
inc
inc
addb
lret
cmp
mov
sbb
es
inc
leave
addr16
inc
adc
pop
cld
in
lret
xorl
jmp
jnp
ljmp
aad
inc
sub
ret
dec
leave
add
in
bound
or
loope
stc
roll
cmp
xchg
sub
cli
and
inc
fwait
lcall
out
pusha
adc
jbe
movsl
loope
jns
add
jbe
push
in
in
xchg
push
xchg
xchg
ficompl
out
push
rcl
push
sbb
rclb
rcl
ficoml
into
xor
popf
push
xchg
xchg
push
ss
adc
imul
icebp
lods
shl
xlat
mov
ficompl
mov
jno
subl
fcmovnbe
xchg
ret
ret
test
aaa
mov
mov
xor
push
sarb
sub
adc
adcl
fldl2t
dec
mov
testl
hlt
mov
push
pop
sbb
rorl
repnz
scas
lock
lret
outsl
ret
frstor
xor
mov
xchg
int
add
into
rcr
shrl
pop
push
or
fcoms
fwait
adc
push
movsl
repz
insb
outsb
add
lods
cltd
xchg
je
gs
fiaddl
dec
push
dec
jmp
adc
push
hlt
hlt
jns
stos
loop
lock
idivb
inc
fcmovnu
test
mov
shl
jo
mov
dec
sub
loope
stos
cmp
cmp
out
dec
sahf
add
cmp
cmpsb
mov
mov
mov
adc
mov
addr16
mov
mov
or
jp
cmp
das
mov
inc
adc
iret
jo
ret
xchg
inc
jb
inc
call
je
sbb
pop
xchg
out
ret
in
test
sub
lods
fucomi
mov
ss
xchg
in
inc
xchg
add
fldcw
push
movsl
imul
inc
mov
push
cmp
lcall
sahf
fstps
inc
fldenv
les
aaa
es
cs
pop
mov
pop
pop
push
mov
pop
in
mov
adc
scas
or
outsb
sbb
push
inc
mov
ret
insl
scas
sub
mov
push
sub
sub
cmc
push
out
mov
jmp
fistpll
lods
aad
mov
sbb
pmaxsw
clc
test
mov
ret
sbb
jnp
adc
push
imulb
cli
lcall
das
mov
inc
pop
outsb
adc
lds
imul
pop
dec
pop
aas
jae
clc
jns
inc
mov
stos
dec
negb
das
push
out
pop
icebp
into
xor
jnp
pop
movb
or
scas
xchg
mov
xchg
push
stc
xchg
sub
lods
pop
int3
out
xchg
sbbb
aaa
scas
mov
cmc
xor
jb
rcrl
dec
or
push
jo
pop
mov
xor
aam
rcr
ss
je
lret
popa
sub
jno
int3
icebp
mov
pop
in
addb
shll
cmc
popa
jl
iret
out
cmp
mov
icebp
fwait
scas
push
inc
xchg
inc
push
popa
pxor
fs
stc
out
scas
xchg
jo
inc
jbe
cmpsl
xchg
inc
adc
pop
push
push
sbb
les
add
enter
push
int
cld
int
push
inc
inc
fs
data16
xlat
cmp
std
jo
inc
dec
repnz
add
mov
negl
cmp
inc
cmc
fwait
adc
cmp
mov
mov
jb
lret
into
dec
pop
pushf
jbe
cwtl
mov
sbb
pop
xchg
push
addr16
inc
push
fcmovnu
jmp
add
mov
jp
out
cmp
mov
pop
packsswb
scas
push
stos
into
cmpsl
and
jbe
push
push
mov
inc
mov
xor
add
inc
sbb
insb
xchg
orl
push
add
test
aam
aam
mov
aad
outsl
mov
adc
insl
push
lods
xchg
data16
js
scas
xchg
imul
fdivrs
push
cmp
lock
scas
jl
addr16
outsl
bound
push
push
sar
shrl
leave
aad
hlt
xchg
out
inc
xchg
sbbl
insl
cli
aad
fcomi
adc
push
fmuls
hlt
add
clc
jge
movsl
inc
testl
adc
adc
scas
pop
dec
sub
lret
inc
insb
fildll
loop
or
cmp
sub
bound
xchg
bound
mov
test
pop
subl
dec
outsl
icebp
mov
xchg
lods
test
inc
aam
sti
xchg
scas
xchg
daa
leave
mov
sbb
inc
xchg
loop
add
mov
xchg
and
xor
push
cmp
inc
pop
test
scas
push
sbbl
sbb
sbb
cmp
aas
dec
cwtl
and
inc
mov
mov
push
pop
xchg
test
stos
mov
jns
das
jns
mov
fldcw
mov
adc
mov
ds
stos
lods
add
cmp
inc
insb
lret
mov
push
loop
jmp
cmc
pop
dec
loope
lret
fdivp
lret
movsl
xlat
mov
movsl
ret
mov
pop
enter
inc
fwait
mov
dec
add
lret
shll
and
sahf
sbb
or
dec
fsts
ljmp
jge
add
sub
enter
sbb
push
dec
push
pop
xchg
es
pop
fcomps
xor
add
ljmp
lcall
xchg
cltd
xor
adc
dec
pop
fisubrl
ficompl
icebp
pop
push
test
aas
xchg
iret
clc
mov
or
outsl
stos
test
fisubrs
lods
mov
movsl
sub
xchg
xlat
pop
mov
cli
push
ja
cmpsl
mov
or
aaa
cmp
sub
ret
mov
pop
ja
dec
out
fldenv
mov
sub
push
or
mov
xor
aaa
insl
fwait
sahf
stos
pop
push
int3
aas
and
popf
call
mov
push
jae
scas
insb
loopne
popa
inc
pop
imul
xchg
lret
pop
inc
imul
popf
out
xchg
cwtl
push
inc
pop
mov
add
fstpt
scas
adc
sub
sbb
stos
inc
js
sub
adc
ret
cmp
ret
ret
pop
fstp
pop
ficoml
mov
outsl
pop
xchg
in
scas
xchg
outsl
outsb
nop
repnz
xchg
jb
test
push
or
divl
arpl
cmp
test
push
mov
inc
push
xor
inc
daa
dec
fdivrl
cli
jae
sub
fstpl
in
xchg
movl
ljmp
std
pop
jle
jle
vcvtpd2ps
xchg
add
insl
les
sub
sub
sbb
sub
adc
lcall
add
pushf
lret
or
dec
cli
dec
push
aad
scas
popa
ss
adc
repz
lret
jmp
jg
sahf
pop
jg
icebp
das
iret
icebp
sarl
mov
sti
aad
imul
and
pop
call
jno
les
jecxz
js
pop
loop
push
lods
negb
ss
repz
test
ret
out
int3
jmp
jle
iret
push
nop
in
cmp
jmp
test
cmp
mov
xor
mov
or
jo
cmpsl
or
mov
jno
mov
scas
lods
filds
ret
push
cs
popf
xchg
mov
fstpl
push
sbb
push
ret
aad
test
jno
mov
jg
ficoml
xlat
std
push
add
mov
aas
rol
push
imul
scas
pop
fs
mov
shll
imul
dec
rorl
lret
sbb
and
iret
inc
lock
mov
out
push
inc
sbb
lock
inc
test
push
xchg
nop
adc
pop
in
sbb
xlat
fdiv
xchg
push
cltd
testb
and
or
cmp
shll
imul
into
bound
cs
jae
adc
push
sar
out
shll
test
out
adcl
out
pop
pop
inc
dec
fwait
xor
rcrl
fstl
sbb
movsb
mov
call
fsts
movl
fbstp
notl
jp
pop
inc
fstps
pop
ret
inc
lods
cmp
int
int
mov
cmp
xlat
pop
pop
clc
pusha
rcr
mov
push
jmp
mov
movsl
stos
sbb
pause
inc
mov
mov
out
fisubs
popa
fcomip
int3
fnsave
cmc
jg
out
and
shr
dec
stc
xchg
xlat
loopne
add
sbb
in
outsb
lds
aad
sbb
cmp
lret
sub
rorb
daa
dec
jl
mov
mov
mov
jle
sbb
cmpb
fcos
dec
shr
jo
sbb
loop
or
adc
sub
mov
xchg
sti
sbb
popf
movsb
rolb
test
mov
les
hlt
in
pop
lahf
pop
imul
jmp
pop
pop
out
pop
pop
js
push
pop
pop
repnz
loopne
out
adcb
dec
jno
or
push
leave
inc
cmp
filds
pop
jno
pop
push
dec
ret
dec
or
push
jmp
dec
adcl
pop
movb
mov
jmp
push
xlat
sub
icebp
inc
xchg
mov
lea
xchg
xchg
pop
jnp
fstpl
add
pop
ret
insb
out
dec
in
push
adc
jecxz
inc
iret
fsubr
aad
sub
pop
cmpsl
in
ja
pop
dec
sbb
or
mov
test
mov
xlat
jl
in
into
cmpsl
orl
xchg
cmpsl
das
in
add
push
xchg
sub
and
mov
mov
push
loope
or
int
push
dec
and
or
adc
cmc
test
out
ss
cltd
std
inc
lods
loope
nop
push
stos
adc
inc
pop
xchg
jnp
pusha
dec
xchg
cli
adc
lds
lret
leave
aaa
cli
repnz
hlt
iret
ret
xor
sbb
ret
adc
cmpsl
push
adc
scas
sub
dec
fists
or
lds
out
pop
stc
xlat
cmpsb
mov
lret
and
xchg
imul
and
dec
aad
sub
mov
xor
mov
lods
pop
xchg
int3
or
aad
pop
adc
push
pushl
test
xlat
sub
mov
xor
roll
mov
aad
sub
push
xor
pop
outsl
or
fdivrs
aad
rcl
mov
push
addb
insb
xor
dec
loope
ret
adc
push
adc
fwait
scas
jns
daa
jae
ss
pop
jl
mov
ss
loope
sbb
mul
dec
dec
xor
pop
rclb
inc
xor
in
das
sub
pop
cmp
mov
ss
fstl
out
sahf
xor
adc
sub
pushf
xor
pop
ret
sti
jl
loope
scas
rcl
scas
fs
jecxz
std
pushl
shrb
rcl
ret
sbb
xor
mov
jg
dec
inc
jb
rcrl
ror
mov
jo
inc
cld
inc
cli
cmp
mov
popa
jns
sub
loopne
frstor
push
jbe
loopne
stc
adc
mov
xchg
pop
mov
lahf
fistpl
jns
adcb
mov
adc
pop
push
es
out
cmpsl
mov
enter
xchg
loop
xlat
jae
shll
sub
repnz
mov
sub
inc
push
out
fsubrl
popf
mov
ja
pop
xchg
jne
or
inc
in
xor
xlat
pop
xor
std
push
cwtl
push
push
mov
rorl
mov
adc
or
inc
adc
push
sub
or
dec
stos
fsts
call
jae
or
daa
jg
jmp
sbb
iret
enter
jae
inc
cmp
daa
mov
stos
and
out
popf
fadds
mov
lret
lock
inc
mov
aad
mov
inc
mov
rcrl
in
mov
rclb
inc
xor
ret
pop
es
mov
pop
cmc
xchg
fldcw
jecxz
stos
jne
lcall
popf
or
iret
fnstsw
jo
cwtl
pop
xchg
imul
icebp
and
rcrl
cmp
jmp
cmp
inc
xor
lods
mov
adc
mov
sbb
aaa
repnz
jb
cmp
lods
jl
inc
lds
lds
xchg
std
xchg
repz
cmpsb
mov
dec
insl
sti
jmp
cmp
fsts
mov
es
mov
dec
mov
rcr
pop
repnz
jbe
lods
push
iret
fcmovbe
jmp
mov
fstl
out
mov
dec
leave
loop
xchg
cld
sbb
push
in
mov
mov
xchg
aad
clc
cmpsb
sbb
push
mov
lret
mov
mov
sub
adc
xor
mov
xchg
sbb
jg
fidivl
mov
shll
aad
jb
loope
push
imull
and
pop
add
mov
dec
sbb
lods
bound
sub
rcrl
inc
mov
xor
sub
jl
mov
scas
call
mov
ficoml
push
xlat
mov
scas
clc
or
icebp
repnz
filds
loope
lods
mov
sub
sti
mov
cmp
inc
and
jno
adc
inc
xor
mov
in
test
adc
flds
dec
sbb
adc
mov
jae
lret
ret
sbb
mov
test
xchg
ljmp
dec
into
iret
sbb
xchg
dec
movsl
in
aaa
sbb
rol
xor
push
mov
sbb
add
lret
push
shll
imul
sbb
loop
xchg
shlb
jb
imul
push
test
xchg
dec
iret
aaa
scas
sbb
inc
daa
sub
rcr
xor
aad
lock
xlat
fwait
xchg
push
mov
jbe
arpl
xor
mov
ja
xchg
fnsave
inc
in
and
dec
pushf
int
push
xlat
dec
enter
jne
pop
xchg
test
push
lods
push
xor
add
repnz
sub
inc
jno
bound
sub
pop
loop
inc
inc
das
add
loope
outsl
les
mov
int
cmp
mov
mul
and
cltd
adc
mov
pop
add
and
iret
add
std
rclb
mov
int
lds
iret
pop
int
jge
ret
sahf
lahf
sti
imul
xlat
mov
testl
in
push
jecxz
into
mov
loop
ret
fistl
stos
out
imul
lds
adc
sub
cmpsb
cmc
filds
mov
mov
sub
pop
ja
daa
mov
cmp
jp
loop
xlat
fwait
mov
fldt
ss
inc
adc
mov
lret
imul
dec
jo
pop
mov
mov
arpl
xor
fwait
loopew
mov
fildl
scas
add
std
jo
mov
loope
mov
jb
out
or
adc
and
cmp
jno
or
mov
icebp
lret
push
xlat
jne
fldenv
pop
outsl
add
fcomp
out
lret
les
rclb
xor
popa
call
xor
pop
leave
je
dec
roll
lods
mov
xor
insl
fbstp
ss
das
std
fcmovb
sub
cld
out
pop
cli
jge
loope
dec
cmpl
leave
stc
fisubrl
mov
sbb
cmp
aam
mov
xor
imul
cmpsl
jae
add
lds
ja
test
rcl
js
int
mov
movb
and
imul
inc
mov
out
into
fisttps
in
lock
pop
hlt
sarl
sub
aaa
jbe
cmp
push
sbb
pop
ss
sahf
add
mov
mov
ja
mov
xchg
xor
jmp
cmpsb
icebp
dec
gs
cs
stc
fsubp
inc
sti
cmp
repz
mov
movsb
pop
nop
iret
jbe
das
push
fildl
mov
cmp
push
imul
sub
mov
fnsave
fidivrs
jno
fldcw
xchg
push
icebp
lds
mov
mov
adc
pop
cld
dec
arpl
popl
arpl
xchg
lock
insb
xchg
jns
dec
leave
xchg
dec
jl
jbe
jp
xchg
inc
jns
pop
jnp
shll
mov
push
dec
cmpsl
repz
lahf
imul
jge
mov
lahf
ss
push
xchg
sbb
adc
cmpsl
mov
pop
repz
out
lea
xchg
dec
aaa
lahf
adcl
pop
xor
loopne
inc
jno
cmp
mov
and
in
xchg
jbe
and
pop
mov
out
and
into
dec
in
jge
insb
pop
xchg
inc
xchg
inc
cs
sbbl
jp
loope
fiaddl
pop
cli
inc
mov
ret
mov
iret
mov
cmc
and
scas
shrl
sub
sbb
adcb
mov
pop
pop
fstpl
adc
fmull
mov
rcrb
das
ret
push
stos
mov
cmc
loop
xlat
lods
xlat
cmc
std
push
adc
xchg
inc
addr16
jns
sbb
ret
in
adc
mov
mov
xor
mov
xchg
aaa
xchg
mov
dec
pop
sub
inc
cld
jecxz
in
cltd
sub
xchg
xor
das
or
jecxz
rorl
push
pop
dec
in
fcmovnu
mov
cmp
fld
xor
mov
ficoml
pop
cmp
and
and
inc
xchg
out
lods
repz
stc
sbb
fstl
xchg
pop
movsb
enter
out
pop
sbb
repz
out
arpl
fidivrl
lods
push
jg
and
ffreep
es
ret
jmp
fldcw
lret
stc
adc
sti
fcmovnb
ret
stos
push
adc
lret
dec
mov
les
adc
mov
cld
inc
popa
clc
lret
fwait
dec
sbb
sbb
jl
lahf
jl
lcall
divl
fistpl
sbb
aas
ret
xchg
sbb
cmc
js
mov
cwtl
leave
mov
mov
in
inc
sbb
jecxz
push
pop
cmpxchg
push
cmpsb
stos
std
dec
loop
lods
test
ret
cld
or
fisubrl
hlt
fldl
inc
test
loop
cmpsb
push
push
cmp
mull
pop
imul
aam
lods
or
mov
pop
cltd
jne
imul
lock
add
insb
jg
inc
jg
and
lea
inc
test
seto
jmp
mov
das
or
xor
sub
mov
mov
pop
fbstp
mov
push
mov
iret
js
out
xlat
add
mov
and
leave
cwtl
js
mov
sahf
pop
out
mov
aaa
cli
shlb
jge
orl
lret
or
push
es
and
icebp
shrl
jno
aas
lahf
sarb
mov
ljmp
leave
or
mov
fldcw
mov
orl
test
test
insl
push
add
rcrb
stc
mov
sbb
mov
xchg
jns
xor
inc
push
stc
inc
pop
xlat
mov
jno
popl
cmp
iret
cmp
pop
in
xchg
push
jp
cld
filds
je
int3
inc
inc
mov
xchg
mov
push
mov
mov
mov
inc
add
inc
in
loope
inc
pop
in
in
jbe
pop
leave
push
and
xchg
and
push
mov
fisubl
lahf
arpl
dec
std
xlat
mov
adc
test
fistpll
cld
dec
mov
jo
test
jbe
add
scas
push
cltd
imul
sub
lods
jl
out
jno
jae
push
xor
rcrl
fwait
mov
xchg
and
pop
lret
cmc
mov
punpckhdq
xchg
mov
sub
jno
movsl
aam
fsts
stos
cmp
and
paddsw
fldcw
mov
mov
stos
xchg
push
or
inc
rcll
lret
into
cmpsl
jmp
xchg
and
inc
inc
mov
stos
dec
mov
cmc
push
adc
dec
adc
stos
ret
aam
xor
movsb
and
mov
pop
mov
aad
inc
cli
popa
test
cltd
inc
arpl
sbb
add
clc
out
popa
jae
clc
sbb
nop
mov
sub
xor
mov
enter
mov
shll
xlat
lcall
lods
cwtl
mov
test
dec
mov
loop
mov
jge
out
in
sbb
lods
sub
inc
xlat
mov
daa
mov
sbb
dec
ds
sbb
cmp
cmp
in
aaa
sub
push
shrb
loope
cmpsl
insl
push
lret
addr16
pop
loope
je
mov
sbbb
divl
or
adc
ret
ja
inc
jle
dec
fldenv
notb
sub
in
shl
push
in
mov
daa
inc
jns
rcll
jnp
rorl
sub
sub
add
inc
xlat
lock
out
mov
dec
loopne
mov
pop
xchg
inc
sarb
or
add
mov
pop
mov
aas
outsl
xchg
rorb
roll
jne
test
movsl
dec
adc
cmp
mov
xlat
stc
movsl
pop
fsubs
aaa
and
ss
rcr
dec
mov
mov
mov
fwait
cmc
decb
mov
je
add
sub
scas
test
testl
fstps
mov
mov
mov
ret
jb
fstps
push
xor
add
repz
loop
pop
lock
movsl
mov
call
cs
lret
repz
push
mov
cmp
aas
pusha
cmpsb
xchg
xor
adc
add
cwtl
xchg
ja
lock
jns
movsb
repz
insl
jg
call
scas
lahf
das
notb
mov
jns
cltd
movsb
cmp
push
mov
pusha
mov
pop
aam
push
or
mov
xor
lcall
xor
bound
dec
cmc
movsl
iret
inc
andl
std
ret
sub
loop
push
fldt
dec
cmpsl
mov
dec
in
push
push
sbb
icebp
mov
aad
push
mov
jns
in
inc
add
xlat
lods
out
mov
das
or
test
dec
sbb
mov
xlat
sbb
stos
mov
inc
xchg
xchg
pop
lock
dec
adc
aas
lcall
jbe
pop
sbb
ret
mov
fwait
ret
out
pop
adc
mov
xchg
dec
xor
loopne
fs
or
xor
inc
sbb
enter
add
adc
mov
sub
push
cli
rorl
jg
inc
jbe
lret
dec
repz
mov
fstl
jb
inc
rcrl
lods
cmpsl
pop
clc
fwait
pop
cmp
jns
cmpsb
or
mov
stc
fiadds
filds
ret
pop
jns
mov
cs
xchg
hlt
test
mov
dec
aaa
bndstx
gs
test
into
or
fdivl
cli
roll
into
sbb
pop
jnp
les
loopne
push
flds
add
movsl
dec
lahf
xor
mov
out
xor
cmpsl
shlb
enter
cmpsl
xchg
mov
or
setno
mov
imul
sti
stos
or
xlat
xor
scas
xchg
inc
pop
stos
test
movsb
lods
inc
and
int3
test
in
in
mov
lcall
or
adc
add
cwtl
inc
test
aas
fcmove
out
lock
jno
arpl
mov
into
jno
lods
pop
data16
outsl
mov
fwait
push
sbb
pop
test
jmp
cmp
iret
es
jle
iret
cmpsb
adc
sbb
jno
or
iret
movsl
pop
cmpsl
pop
lret
pop
out
lea
rcll
sbb
scas
mov
rcl
add
jb
pop
push
push
stos
pop
pop
pop
fimull
lods
sub
fldcw
dec
inc
mov
aad
pop
jb
fcoml
adc
inc
xchg
fst
mov
jg
int3
inc
xlat
jns
jg
mov
xor
insb
in
mov
in
daa
repnz
call
jg
insl
ficoms
es
ret
lret
ror
fistpll
sub
xchg
jge
ret
sti
fimuls
cld
pop
std
or
out
aad
fistpl
sbb
push
incl
mov
xor
jle
lret
jl
ret
jp
in
mov
adc
lret
sti
pop
pop
xchg
or
add
std
sub
push
xor
in
add
mov
pop
jecxz
jbe
mov
mov
sbb
cld
jo
sbb
jae
shl
fninit
mov
add
jo
je
cs
mov
in
mov
xlat
in
dec
ds
adcl
xlat
int
repnz
inc
dec
fwait
repz
shl
ret
cmc
xlat
fistl
fwait
sti
xchg
lret
sbb
jl
cli
nop
cwtl
jecxz
sar
mov
push
adcl
shr
mov
xchg
fistl
xchg
xchg
or
fcmovnb
xchg
orb
sub
inc
dec
test
jp
fistl
aad
imul
mov
dec
icebp
adc
xchg
sub
add
adc
jo
xchg
enter
not
inc
test
xchg
mov
mov
xchg
lret
pop
lods
inc
nop
adc
popa
xlat
mov
adc
cmpsb
fstl
loop
inc
adc
ljmp
fcmovne
ret
jno
and
add
push
rolb
mov
sub
leave
fstps
ret
mov
aam
adc
cmp
loope
in
adc
lods
outsl
fsts
popf
jg
test
mov
dec
push
xchg
call
clc
mov
jbe
loope
icebp
test
neg
add
sbb
ret
xor
xchg
je
and
dec
fwait
je
mov
mov
leave
add
icebp
pop
cmp
test
sbb
jno
pop
cli
push
xchg
pop
mov
xchg
pop
cmpsl
jmp
mov
cld
loop
sti
jmp
xlat
mov
inc
ret
or
fwait
out
xchg
scas
lcall
pop
ret
pop
cmpsl
lcall
cs
lods
push
cmp
fwait
int
lds
icebp
mov
cmpsl
jbe
add
or
lea
shr
xchg
mov
adc
imul
dec
xlat
lock
cmp
js
sub
fsincos
out
push
xchg
mov
push
lea
icebp
xchg
or
ret
jp
or
xor
inc
lods
mov
push
cmpsb
scas
xlat
fiadds
rcr
xor
es
cmc
mov
sbb
lahf
icebp
jge
daa
mov
loope
ret
jge
jno
push
mov
ret
mov
inc
out
xor
int
push
fstpt
leave
jmp
inc
adc
aas
push
flds
push
lds
pop
mov
sbb
xchg
add
shll
leave
mov
enter
sub
hlt
push
and
jg
inc
jle
mov
xor
fistpl
dec
xchg
cmp
repnz
in
loop
shlb
jle
dec
push
pop
xchg
cmpsb
push
push
ret
icebp
std
dec
imul
push
sub
es
fstpl
ror
fists
xchg
repz
xchg
dec
aam
repnz
fmull
lret
mov
lods
and
lea
or
bound
mov
mov
ret
fistpl
xchg
ret
imul
sarl
mov
les
out
jbe
and
lcall
cmp
rorl
sahf
ficompl
and
int3
lahf
mov
jp
into
gs
hlt
loope
cli
inc
jp
lahf
cmc
stc
mov
ja
fsincos
clc
cli
mov
mov
lcall
jns
xchg
aad
mov
mov
std
and
push
xchg
rcrl
js
arpl
dec
insb
fnstcw
sub
pop
cmpsb
or
jnp
xor
mov
inc
xchg
negl
in
fnsave
dec
pop
imul
jecxz
adc
dec
adc
sub
lds
cmp
pop
lods
cmpb
jecxz
pop
cmpsl
dec
imul
jecxz
out
testb
jo
scas
jmp
daa
mov
frstor
les
scas
mov
jnp
push
rorb
cmpsb
adc
jl
xor
pop
xchg
dec
test
push
pop
fisubs
push
std
aam
js
cli
xchg
fdivs
jl
pusha
xor
sbb
xchg
shl
mov
enter
call
loope
sbb
jmp
repz
test
jno
sbb
xchg
push
lock
xchg
icebp
repz
dec
and
aaa
mov
jge
mov
adc
xchg
lret
push
mov
jbe
cltd
scas
cltd
jbe
test
fsts
in
mov
out
ret
xlat
repnz
xchg
ret
fldt
rclb
aaa
pop
pusha
inc
fsubr
pop
fcmovnu
inc
cltd
loope
shrb
mov
repz
sbbl
pop
fists
mov
fyl2xp1
ror
xlat
adc
push
fistpl
sub
or
jae
mov
jbe
fmull
out
aad
bound
push
jecxz
aam
sub
in
repz
rolb
mov
sub
jmp
nop
inc
icebp
pop
xchg
int
roll
mov
out
pop
and
sti
ljmp
jne
lock
push
jns
and
pushf
mov
icebp
push
decb
xchg
cmc
inc
in
push
pushf
xlat
cmc
adc
cld
or
jg
push
les
mov
pop
jl
and
xchg
inc
rol
mov
fbstp
cmp
nop
pop
inc
cmpsl
push
loop
into
adc
aad
into
sbb
hlt
adc
xlat
and
test
mov
mov
pop
sub
cmc
data16
mull
dec
or
fldcw
in
inc
add
jg
lock
iret
fistl
sbb
nop
add
mov
xchg
xchg
sti
lcall
je
test
out
xchg
ret
mov
and
xchg
or
insl
inc
fimull
inc
pop
pop
scas
fstpl
rorl
and
jecxz
or
icebp
mov
lods
xlat
mov
and
xchg
arpl
icebp
inc
push
pop
mov
cs
movsl
lods
lahf
cmp
int3
sbb
add
mov
xchg
and
or
dec
mov
pop
out
xchg
inc
add
jno
push
lcall
cltd
lahf
xor
lods
lds
leave
roll
aas
jp
add
mov
mov
inc
xchg
push
mov
pop
inc
or
movsl
cli
imul
outsb
xor
jbe
pop
les
js
push
rorb
add
dec
adc
push
adc
mov
test
sahf
fildl
jl
shrl
pop
addl
out
pushf
xchg
daa
push
out
fldcw
add
sti
out
lock
mov
pop
jecxz
xchg
dec
jo
fucomip
push
pop
es
aaa
fcompp
std
mov
xlat
inc
insb
push
push
scas
js
inc
daa
cmpb
push
lea
mov
dec
enter
stos
fnstsw
push
leave
fs
sub
data16
ret
clc
push
xor
cmpsb
jbe
add
fucomip
daa
mov
jmp
addb
rclb
enter
ficoml
into
stc
movsb
mov
mov
imul
sbb
dec
sbb
les
fimull
and
add
mov
xchg
jecxz
test
arpl
pop
clc
dec
mov
je
bnd
cmpl
js
push
popf
stos
adc
ficoml
push
imul
ja
fisubs
push
jnp
jne
cld
inc
fildl
push
popf
sub
faddl
jecxz
dec
xchg
mov
sbb
cltd
sub
push
xchg
xchg
jbe
mov
pop
adc
sbb
mov
add
pop
sub
xchg
pushf
cmp
mov
fistps
out
cmpsb
scas
adc
sub
jmp
dec
mov
sub
loopne
jg
inc
pop
fldt
xchg
cli
push
std
fabs
out
xchg
xchg
leave
xchg
ljmp
mov
adc
xabort
jb
pop
jmp
fidivrs
repnz
imulb
dec
xchg
out
jb
push
mov
dec
fidivrl
or
mov
add
cmp
dec
dec
mov
stos
fs
mov
pop
adc
lods
js
jns
xchg
das
adc
inc
push
icebp
arpl
sti
mov
cmc
xor
sub
fwait
jl
popa
inc
loopne
pop
jg
xor
jle
cmp
sbb
xchg
lcall
and
inc
dec
push
mov
xchg
loope
ret
mov
jno
sbb
inc
jnp
push
jne
push
fldz
and
shr
lods
test
jb
ret
repz
jle
sub
fisubs
ljmp
cld
mov
mov
jmp
pop
ret
aad
jno
outsb
aaa
xlat
lcall
cmp
inc
push
ljmp
xor
dec
jmp
insb
test
sahf
adc
cmpsl
enter
xor
lods
mov
roll
arpl
mov
stos
xchg
pop
in
mov
inc
sub
xchg
ss
dec
mov
shll
inc
xlat
repz
fisttps
jl
add
sbb
inc
xchg
leave
sub
jg
cmp
mov
pop
test
imulb
fmul
push
dec
ds
stc
mov
or
jae
xor
jns
pop
inc
mov
in
dec
fwait
test
jbe
lods
xchg
xlat
pop
push
and
bound
pushf
in
loope
xlat
inc
mov
xchg
hlt
cmpb
shlb
jmp
jecxz
sti
fcmovnb
mov
repz
fstps
push
out
cwtl
clc
aam
jmp
or
mov
pushf
jb
sub
mov
ja
jns
mov
adc
ss
subb
mov
ret
fimull
sbb
loop
xchg
hlt
movsb
xlat
stos
scas
je
fisubl
mov
rcll
push
testb
push
mov
xchg
shr
push
adc
xlat
push
adc
stos
test
jmp
jae
call
mov
insb
popa
fwait
pop
ret
test
test
mov
movsl
push
push
inc
lcall
mov
push
cmpsb
push
mov
rcl
mov
aad
aam
cmp
push
fcmovnbe
dec
jle
neg
aam
inc
xor
dec
sub
aad
popf
insb
inc
ret
or
pop
lahf
sarb
inc
dec
notl
jb
ret
daa
xor
repz
adc
cli
ficoml
cltd
pop
dec
daa
add
dec
into
mov
rclb
fsubrs
jp
insl
lret
fstps
fists
lock
inc
lret
dec
sti
cmc
push
scas
repz
movsl
xchg
hlt
xor
sar
sti
mov
push
insb
adc
pop
pop
xor
loope
ret
stos
loope
fcmovne
add
inc
push
mov
movsl
pop
mov
test
repnz
xor
jb
pop
das
xchg
cmc
push
into
daa
xor
cmp
dec
jmp
push
xchg
xlat
ljmp
mov
jmp
sbb
mov
jp
jbe
push
cmpsl
inc
das
movsb
into
inc
outsb
aad
sbb
sub
fwait
jmp
or
fsts
pop
movsl
or
loopne
mov
cmpsl
mov
negb
sbb
lea
je
lret
ljmp
push
lcall
or
inc
or
pop
loop
sbb
test
pop
push
xchg
adc
aad
or
call
gs
lods
sti
adc
adc
daa
test
fstpt
lock
mov
subb
xchg
repnz
addr16
cmp
xlat
push
adc
dec
ljmp
rclb
jno
inc
les
jmp
adc
out
iret
into
rcl
cmpsl
push
lcall
jbe
and
pop
cld
xchg
mov
jmp
test
lret
adc
lahf
adc
sti
sbb
adc
push
cmc
push
adc
fcoml
lahf
sbb
xchg
repnz
ficoml
jbe
inc
shl
and
movsl
sti
cmp
cltd
or
cmp
mov
repnz
cld
mov
pop
aad
xlat
mov
aad
inc
xchg
xchg
xor
xchg
inc
loopne
fcmovb
lods
test
cmpsl
insl
test
test
ja
pop
es
cmp
jne
mov
lock
xlat
adc
cmpsl
jo
inc
sti
cmp
adc
out
pop
xor
out
repz
xchg
adc
mov
or
or
outsb
js
push
insl
adc
insb
add
ret
cmp
pop
jo
hlt
stos
repz
jns
pop
push
leave
adc
sti
inc
out
ret
cmpsl
mov
jne
out
jmp
outsb
sub
leave
fs
sbb
enter
xor
mov
fstpl
push
xchg
mov
xor
ret
mov
lret
test
cli
test
repz
lock
add
push
rolb
loope
mov
imul
pop
daa
xor
or
mov
in
fistl
fdivp
sarl
rorb
fidivs
imul
xor
jns
shl
js
leave
jo
pop
xor
cli
popf
js
lds
cmpsl
mov
icebp
mov
mov
inc
adc
ret
daa
pop
cmp
clc
divl
xor
daa
xchg
sarl
cmp
dec
push
xchg
jp
ficomps
test
push
jnp
fldenv
dec
xchg
adc
movsl
sub
fwait
cmp
push
notl
in
outsb
push
xor
pop
jae
fbstp
js
xchg
xor
arpl
addl
mov
repz
std
cltd
adc
insb
rclb
xlat
neg
fsubrs
sbb
xchg
pop
rcrb
pop
mov
fisttpll
lret
pop
leave
push
xchg
dec
cmp
aad
jo
fldt
pop
bound
inc
ret
push
cli
shll
sub
arpl
pop
dec
fwait
push
adc
es
sbb
add
sub
rolb
sbb
out
inc
cld
push
pop
fadd
mov
xorl
fcmovnu
push
shll
ljmp
imul
mov
mov
dec
and
mov
shrb
mov
pop
mov
and
xchg
into
sbb
push
jmp
subb
or
fstps
loopne
or
out
subl
mov
das
fwait
aad
ret
movsl
dec
rcll
inc
sub
aam
pop
push
fldenv
fadds
out
pusha
push
push
mov
cmc
push
in
cmpsl
or
mov
inc
ret
loope
xchg
subl
mov
mov
repnz
inc
jle
mov
adc
jnp
bound
out
sti
jbe
jp
fcmovnu
xchg
sarb
aaa
cmp
into
mov
xchg
push
movsb
or
outsb
scas
pop
add
stos
dec
sub
mov
test
icebp
or
mov
push
jp
mul
mov
icebp
sti
add
xchg
cmpsl
mov
pop
dec
mov
mov
xlat
xchg
sbb
fstps
ficoml
or
xchg
fldenv
insb
inc
xor
fistl
shll
mov
add
vshufpd
mov
push
and
je
fnstsw
icebp
adc
test
cmp
shll
daa
das
int3
std
repnz
inc
repz
leave
adc
fcmovbe
fsubs
fcmovb
ret
mov
fst
shrl
fcomp
aad
fldenv
popa
jge
xor
mov
in
sbb
out
es
imul
out
daa
outsb
lahf
or
test
inc
imul
outsl
repz
dec
addr16
popf
ja
adc
adc
add
mov
fistps
fistps
shrl
notl
dec
mov
adc
xor
mov
ret
jl
scas
jmp
pop
aad
notb
mov
sub
jmp
fstpl
adc
jns
mov
pop
or
aaa
into
ss
aam
pop
mov
sbb
in
inc
aad
push
or
sbb
pop
inc
jge
outsl
sti
loop
rcrb
dec
mov
addr16
pusha
lods
mov
fistps
test
mov
pop
mov
sti
sub
lods
inc
jecxz
dec
cmpsb
test
jbe
jecxz
cmpsl
jle
sbb
dec
mov
in
sbb
push
aaa
aas
cmpl
cmpsb
movsl
cltd
inc
sbb
add
lcall
inc
cmp
test
cmp
shll
adc
push
adc
rclb
lds
je
or
out
daa
mov
xorl
mov
mov
add
movsl
pop
mov
enter
pop
int3
fwait
mov
mov
iret
inc
push
mov
outsb
inc
mov
inc
aaa
jge
dec
pop
stos
aaa
ss
nop
icebp
mov
jb
incl
adc
push
out
addr16
repnz
dec
repz
cmp
test
mov
jbe,pt
repz
cmp
sti
clc
enter
in
xchg
jb
dec
fnstenv
and
iret
les
orl
arpl
lcall
dec
cmpsl
lcall
add
mov
sub
adc
xchg
dec
jmp
imul
lods
ja
lds
jge
mov
lahf
xchg
xchg
loopne
add
mov
stc
test
mov
inc
adc
adc
pop
fldcw
arpl
out
mov
xor
add
jle
dec
inc
hlt
jle
mov
and
stc
int
ret
or
mov
and
add
cmp
pop
push
inc
aaa
mov
mov
daa
dec
cmpb
insb
ljmp
das
fisttpl
xchg
shrb
ja
repz
sub
cmp
adc
outsb
enter
inc
shrb
iret
cltd
mov
pop
inc
jle
xchg
adc
inc
xchg
fsincos
add
mov
sub
ret
icebp
and
sub
imul
cld
sbb
aas
xchg
cmpsb
cwtl
mov
add
jecxz
fstp
insl
fdivs
in
xlat
ficoml
ss
cmp
add
push
adc
mov
fimull
aad
sti
cmpsb
ficompl
dec
js
xlat
push
cmp
mov
and
je
mov
pop
xchg
and
daa
sub
lret
movsl
push
xchg
jmp
or
in
fdivrl
aaa
xchg
les
xchg
fimuls
roll
cmp
pop
pop
push
int
ja
std
mov
xchg
pop
mov
sbb
je
inc
cmpsl
in
push
dec
jo
mov
or
pop
xor
sbb
xor
pop
xchg
cmc
mov
pop
ret
rcll
mov
test
push
js
push
cmp
xor
aad
inc
mov
in
sbb
push
pop
and
push
scas
dec
lods
xchg
es
or
cld
fnstenv
addl
aam
hlt
push
mov
aad
mov
inc
sub
push
dec
add
xchg
ret
or
pop
mov
orl
dec
xorb
sbb
movsl
jle
mov
jmp
xchg
sar
dec
ficoml
xchg
imul
or
push
pop
cmpsl
pop
sub
fstps
xor
cmpsl
dec
pop
xchg
xchg
add
fsts
jno
imul
mov
int3
mov
popf
addl
dec
stos
jmp
sbb
addl
repz
mov
pop
pop
sbb
lods
jo
mov
push
loop
mov
dec
aaa
fldt
push
add
iret
pop
cli
in
js
fldl
fucomp
pop
bound
fisttpll
cmc
pop
xchg
sub
fldl
adcb
xor
push
in
loopne
and
pop
sbb
ljmp
sarl
in
repnz
rcll
mov
xlat
push
int
je
mov
jb
inc
lods
fwait
inc
pop
shl
das
outsb
nop
jbe
stos
loop
call
hlt
sbb
pop
out
and
inc
int
adc
ret
sbb
ficompl
mov
dec
push
and
xchg
mov
or
mov
aad
out
or
sbb
iret
mov
popf
dec
repnz
popa
push
jmp
movsb
movsl
loop
xor
inc
fmul
add
fisttpl
cmc
push
and
adc
shlb
loope
out
mov
jle
into
loope
in
cmpsl
mov
test
mov
loope
inc
iret
in
incb
jp
lret
js
out
adc
or
mov
in
fistps
dec
fisttpl
lret
loope
je
clc
sbb
mov
mov
pop
aam
neg
pop
rol
push
jl
or
dec
mov
push
es
adc
test
xlat
rolb
fs
pop
xchg
sub
xchg
push
neg
jno
jbe
ret
sub
aaa
fsubl
dec
adc
ficoml
jp
inc
aaa
inc
sub
les
jle
add
repz
cmpl
je
cmpsl
adcb
inc
fnstcw
adc
fildll
loope
fstpl
enter
je
xlat
mov
fstl
mov
cmpsl
pop
mov
mov
mov
neg
pop
xor
cmp
pop
dec
das
jbe
movsl
or
pop
dec
mov
movsl
pop
cli
mov
test
jge
in
out
rcrl
pop
jp
fimull
shlb
fstps
sti
add
cmpsl
js
outsb
and
pop
inc
xchg
sbbl
ds
notl
mov
daa
loopne
push
jae
xchg
sub
lock
push
rcr
mov
mov
mov
scas
sbb
push
pop
xlat
jo
fstpl
aam
cmpsl
fnstcw
xchg
mov
add
mov
xchg
xchg
rcrb
lahf
in
insb
xor
adc
xchg
rclb
out
xorb
push
cmp
insb
mov
sbb
dec
rclb
les
loope
mov
inc
in
inc
dec
mov
dec
push
jbe
pop
mov
pop
repz
sbb
push
out
decb
pop
es
mov
inc
pop
pop
push
mov
pcmpeqb
ret
xchg
dec
cli
dec
pop
push
push
imul
std
jnp
adc
xchg
dec
pop
cmpl
jb
jge
sti
movsl
lahf
ficompl
sahf
dec
imul
push
mov
lret
mov
xchg
test
or
cli
push
mov
pop
loope
outsb
pop
pop
add
pushf
sarl
dec
add
lods
enter
je
xlat
js
xlat
bound
sub
sbb
dec
jbe
aas
push
push
xor
push
pop
in
aaa
outsl
xchg
jno
mov
fisttps
push
stc
cmpsl
outsl
sti
icebp
pop
jno
xchg
repnz
lcall
fimull
mov
inc
or
rcl
fldl
sbb
scas
add
dec
lahf
icebp
leave
xor
add
in
xchg
mov
insl
dec
and
mov
jnp
inc
idivb
fwait
icebp
adc
enter
mov
or
jb
inc
aad
or
push
cmp
fcomps
das
js
in
out
jl
movsl
mov
cs
fs
imul
xchg
add
fbld
stos
or
mov
fcomi
jmp
or
inc
xchg
jge
mov
imul
mov
push
inc
movsl
cmp
arpl
jge
xor
or
loop
outsb
xchg
or
pop
push
mov
push
icebp
or
inc
sbb
push
dec
loope
mov
leave
repnz
xchg
negb
mov
sbb
push
dec
push
sbb
sub
xchg
xchg
rorb
xor
mov
sbb
mov
outsl
jne
add
into
das
test
mov
pop
jge
xchg
jbe
mov
pop
sbb
add
arpl
fndisi(8087
stos
dec
scas
fisttpl
fistpl
mov
fdivrp
fistl
xchg
cmpsl
lods
jbe
or
int3
lds
or
insl
popf
fistpl
daa
adcl
adc
mov
mov
mov
mov
jmp
sub
rcr
pop
adc
pop
mov
jp
inc
hlt
mov
xor
cli
idivl
xorl
or
out
andl
lret
push
test
outsl
mov
mov
jmp
test
pop
sarl
insb
ja
cmp
out
ss
push
push
xchg
aaa
rorb
fwait
gs
ret
add
pop
pop
mov
daa
mov
cmp
dec
nop
loope
pop
mov
pop
sbb
sahf
mov
repz
lds
test
inc
aam
rcll
xor
jno
popa
fsubs
fwait
inc
add
icebp
fnstcw
inc
ffreep
ds
cmpsb
and
inc
aas
inc
data16
mov
xchg
notl
cwtl
stos
mov
xchg
fdivrs
jl
adc
jae
lcall
mov
pop
jne
test
mov
das
xchg
loop
imull
jno
sti
adc
jne
mov
mov
add
mov
jmp
or
test
insb
bnd
fs
movl
aad
sub
xlat
rcll
pop
add
and
inc
lea
push
test
ljmp
dec
fisttpl
jmp
sbb
lret
sahf
lahf
stos
test
fs
leave
push
and
fcoms
rorb
aad
in
jne
mov
lock
mov
cltd
test
fbstp
mov
inc
jno
cli
cli
bound
jne
pop
int
ficompl
push
stos
jge
stc
mov
add
cwtl
mov
lea
inc
sarb
movsb
repnz
or
in
jecxz
lock
inc
mov
outsb
pop
iret
in
scas
cmpsl
and
sub
ja
fcomi
inc
xor
int
lock
aas
xor
mov
movsb
mov
dec
pusha
stos
dec
jno
sub
pop
aad
xchg
js
lock
mov
mov
cs
push
cmpsl
xchg
inc
popa
das
bound
cs
dec
jb
xchg
xchg
insl
adc
fcmovbe
and
and
adc
icebp
xchg
inc
jno
aad
aad
lret
mov
je
dec
mov
inc
jne
bound
inc
jo
test
jnp
fisubs
insb
fstpt
cmpsl
pop
imulb
sbb
incl
leave
je
popf
inc
popa
repnz
cmpsl
inc
push
push
xchg
mov
mov
nop
xor
adc
inc
xor
icebp
adc
cli
shll
aam
insl
push
sbbl
das
inc
aas
aad
push
sub
mov
cltd
lsl
aas
mov
ret
sbbl
test
jp
mov
xor
mov
sarb
mov
push
idivl
aad
push
sub
fisubrl
add
push
lods
xor
sub
insb
imul
aaa
lods
iret
in
and
mov
icebp
xchg
inc
nop
outsl
faddl
jp
test
push
cmp
std
push
xchg
mov
xchg
jne
sub
xor
cmpsl
imul
sub
sub
dec
or
xchg
push
fmul
fisttpl
ss
in
xchg
cmpsb
pop
and
int
xchg
jno
and
insb
pop
xchg
push
pop
aad
cmpsl
nop
test
jmp
xchg
sub
divb
add
clc
mov
cmp
cmpsl
add
inc
inc
xor
sub
sbb
pop
push
fldt
fbld
mov
xor
call
and
pushf
lods
lea
ret
sub
pop
pop
mov
icebp
or
xchg
pop
fisttpll
sub
ret
loope
bound
inc
and
adc
jmp
js
mov
sub
pop
icebp
test
or
xchg
jns
int
ljmp
gs
jns
sbb
or
jge
ret
lcall
add
cmp
sub
ja
pop
fdivl
fisubs
sbb
jbe
imul
iret
or
imul
out
mov
mov
fsubrs
popa
jge
call
insb
sbb
repnz
minps
cmp
stc
adc
inc
or
loope
imul
mov
je
pushf
popa
inc
xchg
stos
xor
push
xlat
addb
mov
clc
inc
lods
fldcw
add
jle
scas
xchg
cld
dec
cs
loopne
push
push
push
cwtl
subl
enter
lret
mov
repz
cwtl
xor
cld
xchg
cmp
cmp
fldt
push
pop
roll
ljmp
adcb
pop
sti
mov
pop
xchg
dec
and
mov
sub
fdivl
xor
push
cmpsl
sub
stos
add
rol
xor
pusha
xchg
mov
pop
shrb
mov
mov
out
jo
std
xor
sub
ficompl
cmp
dec
mov
sub
scas
mov
mov
fisubl
fwait
adc
add
aaa
ficomps
fidivl
push
fwait
pop
mov
scas
in
movsl
imul
mov
inc
lret
bound
xchg
out
insl
fwait
xchg
loope
xor
testl
jecxz
insb
fiaddl
mov
mov
jmp
push
scas
push
popa
scas
cmpsl
add
sbb
test
pop
dec
mov
xorb
lds
shr
push
dec
push
addr16
pushf
jge
scas
cli
sbb
xor
pop
or
xor
inc
out
mov
jle
sbb
cld
mov
cld
xor
sub
sbb
adc
push
dec
jb
in
movsb
cmc
fcomi
stos
aam
push
notl
push
xchg
sbb
jge
iret
and
fsts
jno
jnp
xlat
push
mov
lahf
jns
fsts
inc
aad
movsl
inc
dec
mov
sub
push
fnsave
xchg
lds
sbb
xchg
int
es
xchg
adc
jg
lods
mulb
nop
add
push
push
stos
xchg
rcrb
movb
stc
adc
jo
mov
sub
inc
or
repnz
xlat
push
mov
sahf
inc
xchg
fnstcw
ljmp
subb
pop
fsts
stos
inc
rcll
cmpsl
mov
jmp
rclb
pop
sub
insl
stos
pop
jo
inc
stc
andb
clc
lds
sti
pop
aas
idiv
jp
pushf
cmp
fcmovnb
and
fcoms
aam
fcmovnu
loop
jb
out
incb
adc
xchg
push
jnp
iret
loopne
aam
add
push
pop
mov
ret
jle
mov
sbb
mov
jle
loope
ss
xchg
sub
push
xchg
xchg
inc
out
push
push
push
sub
or
jecxz
ja
fsts
jnp
popa
cmpsb
push
outsb
notl
mov
cmpsl
fdivl
in
jmp
std
xor
ret
int3
push
aas
pop
pop
ror
lcall
xchg
testl
mov
icebp
aad
mov
test
mov
mov
lock
shrl
or
cmc
mov
xor
mov
ret
icebp
inc
mov
xchg
jl
inc
add
and
je
inc
hlt
jnp
lahf
jae
xor
mov
jb
mov
sub
push
xlat
push
pop
mov
xchg
push
mov
dec
fcompl
pop
xchg
lahf
mov
ja
nop
loop
into
jno
pop
out
scas
ja
das
inc
lret
add
int
sub
xlat
out
mov
jmp
push
dec
xlat
pop
movsb
in
adc
rcr
xchg
xchg
and
test
fisttpl
in
cmp
in
es
inc
nop
xlat
mov
lcall
jnp
aad
adc
cld
movsl
mov
add
fs
divl
sub
xor
mov
repz
push
cli
nop
sub
push
mov
dec
jp
vprotb
sahf
inc
in
std
pop
imul
pop
nop
jmp
mov
jb
xchg
aad
xor
push
test
enter
dec
lds
mov
mov
mov
inc
pop
rcr
jl
test
decl
push
jb
leave
push
test
push
pop
test
xchg
inc
mov
rcrl
mov
aam
out
mov
fwait
pop
jecxz
mov
popf
adc
fldenv
out
mov
xchg
mov
loop
inc
lock
rclb
jae
push
scas
lret
hlt
push
cmp
and
int3
mov
inc
jmp
jno
cwtl
dec
sub
aaa
clc
sub
mov
out
out
call
fsts
popf
lret
xor
sbb
aas
dec
dec
xchg
jg
fistl
push
lcall
test
pop
sbb
cld
or
inc
fdivrp
pop
pop
popf
adc
jb
xchg
lahf
or
rcll
ror
inc
fimull
int
stc
xchg
xchg
bound
push
imul
mov
icebp
faddl
faddp
inc
das
aaa
push
xlat
mov
jecxz
cmpsb
sub
xor
jmp
dec
push
mov
icebp
dec
sahf
jmp
mov
mov
loop
fmuls
jnp
jno
pop
test
adc
or
mov
cli
mov
lret
pop
add
jne
cmp
sub
loope
mov
jmp
jg
sbb
lret
jge
pop
pop
clc
arpl
jecxz
xchg
xchg
stos
fidivl
inc
je
hlt
inc
loope
scas
cmpsl
inc
cmp
clc
ret
inc
fcompp
es
notb
mov
insb
mov
fsubrs
repz
sbb
fstpl
xor
fptan
sahf
xlat
mov
ret
adc
ret
fucomi
xchg
pop
int
dec
inc
mov
gs
je
xchg
pushf
cmp
ficoml
xchg
inc
xlat
push
mov
push
negb
and
leave
cwtl
xchg
notb
in
jmp
frstor
push
pop
pushf
aam
addb
scas
sbb
inc
xchg
push
mov
sbb
dec
mov
rcl
xchg
insb
arpl
sbb
mov
inc
sub
and
scas
dec
vhaddps
roll
enter
or
bound
xchg
testb
arpl
sbb
and
or
lcall
dec
mov
add
sti
xlat
or
shr
cmpsl
xlat
cli
or
mov
xor
xchg
sbb
dec
lods
insl
xchg
mov
add
pop
ss
aas
stc
pop
cmp
inc
fwait
jmp
stos
in
adc
inc
inc
xchg
nop
cwtl
negb
lock
mov
dec
hlt
icebp
loop
inc
mov
lret
clc
repz
loope
pushf
dec
cmpb
mov
pop
icebp
cwtl
arpl
mov
xchg
leave
pop
mov
xor
inc
scas
in
mov
in
mov
inc
jns
inc
rcrb
push
repnz
jle
scas
xchg
jno
inc
xchg
cmp
lods
loope
dec
addr16
cmpsb
push
xchg
repnz
xor
fstps
fcoml
movsl
adc
pop
mov
lcall
xor
sbb
fdiv
cmc
mov
jns
iret
cli
repz
leave
stos
repz
je
push
lea
pop
js
push
jmp
ret
dec
pop
adc
ret
call
testb
mov
bnd
cmpsl
xchg
call
arpl
aad
rcrb
push
aam
enter
adc
cwtl
das
xchg
jl
pop
mov
push
iret
xchg
jb
inc
lret
fisttps
pop
out
xlat
cmpsl
xlat
add
idivb
sti
pop
fndisi(8087
out
mov
nop
cs
frstor
mov
mov
sbb
cmpsl
fadds
jnp
pop
mov
or
jae
shrd
xor
cmpsb
xor
fucomi
in
rcll
mov
push
cmc
aam
push
mov
push
mov
xor
cmc
cmpsl
fildl
mov
dec
xor
mov
pop
lret
pop
xchg
xchg
push
inc
sbb
enter
dec
aad
scas
push
ret
loop
mov
das
lds
pop
mov
inc
shr
jge
ret
xor
adc
inc
stc
xchg
jno
das
mov
sub
cmc
mov
insb
mov
jmp
and
pop
or
lea
lds
fdivrp
fidivl
cmp
cli
rorb
fwait
pop
fcomi
sbb
int3
mov
les
fimull
int
sbb
mov
lods
lds
mov
push
and
cmc
stc
pop
jmp
scas
adc
psubusw
fmuls
cltd
add
dec
pop
cmp
inc
fbstp
inc
aas
push
pop
out
sarb
repz
mov
scas
es
fucomip
adc
lods
cli
and
pop
fsubp
out
cmp
sub
loope
jp
out
mov
insb
push
push
push
mov
test
testb
jo
ret
pop
pop
lahf
mov
cld
pop
ja
fldcw
mov
movsb
flds
pushl
out
daa
mov
pop
faddl
into
dec
lods
cltd
jb
or
cmp
jns
and
negl
stc
aam
adc
int
fwait
in
cmpsl
mov
add
mov
sahf
pop
dec
js
imul
mov
roll
add
push
xchg
das
mov
fidivrs
fnstsw
lods
push
inc
in
push
fnstsw
or
mov
addr16
jbe
add
fs
jo
ret
clc
imul
sbb
xchg
scas
lock
xor
lods
sbb
imul
repnz
inc
lods
mov
repz
dec
mov
scas
push
scas
cmp
das
jmp
xor
mov
andl
add
inc
fldenv
push
icebp
xor
call
pop
std
xchg
jmp
in
loop
ds
or
mov
pop
repnz
jmp
repnz
jnp
loope
pop
sub
cmc
xchg
mov
cld
add
insb
push
jbe
xchg
mov
rep
hlt
stos
add
sub
lret
loope
add
push
inc
xchg
leave
mov
cmpsb
mov
lods
aas
test
mov
dec
lock
icebp
inc
lret
fcoml
jo
sbb
and
and
test
test
pop
mov
sti
push
es
push
neg
push
xchg
jecxz
mov
mov
test
les
fidivrs
mov
aaa
inc
pop
ret
pop
cmp
fistpl
es
jb
ss
lea
ss
sbb
insl
testb
xchg
pop
mov
or
sbb
mov
popf
loope
sbb
rclb
pushf
aas
push
int3
loopne
repnz
mov
jp
sub
xchg
clc
icebp
jmp
pop
testb
cmc
xor
fnstenv
xchg
dec
loope
call
pop
cmp
into
fisttps
imul
push
daa
inc
pop
inc
shlb
iret
jo
and
mov
push
mov
out
jno
loop
imul
scas
iret
data16
mov
stos
mov
icebp
stc
inc
sbb
cmc
lock
inc
fadds
push
gs
sbb
pop
mov
aam
movsb
mov
shrl
sub
adc
xchg
and
push
pop
scas
cmp
push
push
push
cmp
pop
mov
out
jg
push
xchg
lods
pop
pop
mov
cmpsl
leave
inc
sti
les
movsb
imul
negl
cmpsl
es
cmp
xor
sahf
rorb
inc
xchg
pop
sbb
arpl
xchg
mov
xchg
or
mov
push
mov
fcomi
pop
movsb
enter
movsl
lock
push
cld
jge
mov
pop
pusha
adc
jp
lahf
mov
or
aad
xchg
mov
mov
es
xchg
cmc
test
adc
adc
sub
and
mov
push
and
das
fstpl
popf
inc
xchg
sbb
jnp
xor
mov
repnz
lods
ret
inc
je
sbbl
pop
lock
icebp
rolb
inc
inc
aam
pop
xlat
addl
mov
icebp
or
mov
jbe
xor
rclb
cmpsb
pop
test
pushf
sahf
inc
xlat
mov
dec
dec
inc
mov
int3
mov
test
sub
aad
cli
scas
imul
mov
hlt
rcrl
aad
shl
jmp
iret
inc
mov
adc
lods
jno
xchg
cmp
mov
sub
mov
loopne
js
divl
xlat
add
fisttpl
sub
aaa
push
ret
int3
jge
inc
lods
mov
mov
pop
pop
movsl
test
das
inc
test
cmc
push
and
ret
mov
inc
cmc
pop
bound
lods
sbb
fdivrl
xlat
pop
mov
mov
es
dec
push
movsl
push
in
stos
stc
inc
das
in
xchg
movaps
repnz
aad
les
adc
je
cmpsl
xlat
push
sahf
stc
inc
lods
aad
mov
movsl
out
pop
cmpsl
int
jle
sbb
push
adc
movsb
jp
lret
lret
cmpsl
adc
dec
add
inc
out
bound
or
in
add
and
sti
fldl
xchg
jb
ret
into
inc
stos
push
pushf
jecxz,pt
add
insl
aaa
lods
and
fstp
inc
pop
fwait
adc
scas
loopne
add
movsb
inc
cmp
rcl
das
cs
mulb
imul
push
repnz
lcall
pop
scas
int3
xlat
jo
xchg
adc
imul
clc
push
mov
jae
fists
push
or
push
out
dec
xchg
dec
sbb
xlat
sub
mov
fcmovbe
repnz
push
xchg
fistpl
aam
imul
mov
mov
ret
scas
jg
pop
push
fbstp
repnz
fstpt
inc
cs
cmpsl
inc
adc
xlat
push
fstpt
in
loopne
mov
xchg
stc
inc
test
cmpsb
push
lock
or
ja
sub
fwait
inc
push
ds
cs
sub
cs
xchg
xchg
das
pop
test
mov
das
add
movsl
xlat
cmp
fst
and
mov
fidivrl
clc
out
xor
mov
fs
cmpsl
inc
lret
jmp
cli
jnp
aad
pop
lods
xor
popf
jae
inc
push
xchg
std
mov
sub
mov
int3
test
push
add
imull
pop
cmp
jmp
cli
mov
cmp
lods
mov
test
jmp
or
mov
mov
insb
cld
pushf
int
inc
psadbw
in
outsb
xor
xlat
and
insb
mov
xor
cmp
inc
stos
rorl
inc
icebp
pop
fcmovnbe
sahf
or
adc
je
push
fwait
out
das
test
lds
in
push
scas
pop
inc
ret
dec
rcrl
aam
in
push
xchg
mov
ficompl
iret
pushf
sub
mov
test
cmc
sti
adc
jle
adcl
cli
iret
mov
adcb
jl
push
or
imul
mov
add
push
call
fs
mov
daa
push
xchg
inc
pop
test
icebp
fs
mov
sub
andb
lods
clc
mov
call
jmp
sti
mov
mov
add
mov
mov
cli
mov
clc
cmc
mov
in
mov
mov
aam
fidivs
faddl
repnz
into
lcall
sub
aas
jnp
fldenv
cmpsl
pop
cli
insl
stos
fadds
pop
lret
subb
into
sub
idivl
cwtl
stc
fisubrl
jnp
pop
add
mov
sbb
or
mov
leave
push
mov
dec
mov
add
loop
shlb
aad
jns
fwait
sbb
cltd
xchg
sbb
ret
ljmp
lret
rcl
cltd
scas
xor
push
xchg
leave
fidivrs
fistl
xchg
int
inc
icebp
cmpsb
sbb
push
in
add
push
sbb
lods
js
dec
mov
lods
add
jecxz
shrb
push
dec
jne
into
andb
mov
xabort
jge
fsts
pop
lods
inc
xor
sbb
lods
jmp
pop
mov
mov
mov
xor
sbb
fdivs
cmp
es
repz
add
cmpsb
xchg
enter
inc
leave
loope
ret
leave
push
icebp
pop
out
xchg
insl
cmp
addl
inc
int
fcmovnb
inc
push
mov
push
xchg
int
repz
pop
lock
inc
int
pop
fwait
mov
stc
ja
test
push
push
dec
fwait
icebp
jle
int
fidivs
lea
scas
mov
push
insl
xchg
xor
jb
or
addl
pop
mov
call
mov
cltd
inc
insb
jmp
push
mov
fstps
pop
popa
cli
mov
aas
not
out
inc
sbb
test
icebp
xor
jp
pop
loopne
movsl
adc
jg
lret
stc
jbe
dec
movsb
fwait
lahf
iret
pop
setae
lods
push
xchg
adc
mov
ds
cs
call
pop
std
idiv
jle
mov
jmp
and
mov
cmc
add
mov
es
pop
daa
mov
fnstenv
cmpsb
add
mov
mov
sti
subl
fisubs
ret
inc
fxch
arpl
or
repz
xchg
icebp
mov
dec
rcl
fcomip
inc
xlat
or
jbe
out
and
repnz
jnp
sub
pop
addr16
in
shll
mov
push
jbe
divl
pop
loope
fidivl
or
jbe
cmp
jno
out
and
inc
jo
push
xlat
push
adc
stos
and
fsubrp
aad
push
aam
jle
imul
or
insl
int
sbb
jb
out
adc
icebp
push
xchg
vcvtss2si
lahf
leave
mov
pop
ret
or
jle
subl
push
test
mov
stc
insl
in
imull
in
mov
pop
outsl
pop
imul
mov
mov
cmpsl
pop
repnz
adc
pop
adc
xchg
movsl
sbb
lret
cmpsl
je
sub
dec
test
imul
push
div
xchg
inc
cmp
loop
jl
mov
mov
lods
sbb
xor
inc
mov
cmpsb
mov
mov
in
mov
movsl
inc
popf
push
inc
aam
outsb
popf
push
mov
movsl
mov
xor
lods
ljmp
sub
inc
inc
sub
ret
pusha
adc
andl
fists
xor
xlat
addr16
mov
or
pop
and
mov
cmp
cs
pop
lcall
rcll
ret
leave
shrl
ret
dec
dec
cs
inc
inc
jae
int3
aaa
or
cmp
aad
ficoml
test
lret
xchg
dec
in
mov
jmp
aad
aam
mov
dec
outsb
mov
scas
insl
pop
fildll
jns
stos
jge
movsl
adc
fs
pop
js
mov
dec
dec
xlat
jecxz
out
popf
pop
jge
mov
in
inc
repz
mov
ret
adc
cmp
insl
shlb
lcall
xchg
inc
pop
out
xchg
mov
mov
arpl
or
jle
push
mov
push
pop
dec
inc
xor
jecxz
sub
adcl
sahf
loop
jmp
jnp
aam
jge
or
or
dec
insl
push
mov
pop
lcall
iret
fisubl
sbb
xchg
adc
pop
mov
outsl
std
jns
pop
mov
add
mov
fimull
clc
pop
addr16
daa
in
jp
inc
and
repnz
movb
pusha
pop
sub
andb
stos
mov
add
and
dec
icebp
mov
repz
subb
sub
dec
stos
and
or
push
in
inc
ljmp
pop
and
mov
movsl
scas
inc
jo
jmp
push
inc
xlat
push
imul
mov
jno
aad
pop
leave
cmc
inc
dec
adc
js
pusha
sub
xor
cmpsb
stc
push
insl
jae
xchg
push
daa
lods
inc
sub
sub
pop
xchg
orl
imul
je
mov
jno
add
pop
test
popf
inc
mov
cmp
aad
xchg
xchg
mov
imul
fwait
pop
cmp
loopne
jl
mov
das
mov
jl
out
or
stc
ret
adc
ja
stos
push
mov
in
das
cmpsb
aad
push
pop
or
lds
cli
xchg
cmp
jns
int
in
and
repnz
loop
mov
adc
mov
jl
stc
cmc
cli
insb
and
push
lods
xor
lcall
sub
rcrl
and
cmc
sub
mov
jg
xlat
or
dec
dec
lret
stc
inc
mov
jl
popf
mov
cmpsb
inc
jae
inc
int
or
dec
and
push
ret
adc
sub
mov
stc
dec
pop
pop
add
popa
push
inc
mov
push
movsb
xchg
loope
inc
leave
daa
xor
push
in
jmp
daa
push
jno
cld
add
mov
cmp
pop
nop
test
or
repz
adc
cli
adc
fcomi
repz
fsubrl
scas
jle
pop
stc
aam
repz
adc
rcl
xchg
inc
dec
cmp
jns
push
out
add
jnp
or
pop
cmp
bnd
inc
leave
cli
xchg
jmp
stos
mov
jmp
repz
mov
lods
lret
cmpl
lods
xchg
mov
mov
jge
adcb
insl
in
cli
sbb
or
das
scas
jp
add
dec
sbb
push
inc
std
add
icebp
js
outsl
popa
fldcw
sahf
out
jmp
adc
mov
out
sub
cli
adcl
inc
mov
jmp
lahf
jl
push
jns
shl
fisubrl
and
pop
mov
lcall
in
into
mov
fnstenv
loope
add
ja
test
scas
iret
cmpsl
cwtl
mov
or
cmp
frstor
imull
or
push
mov
out
dec
pop
sub
cmp
sbbb
fsts
ret
shlb
pop
dec
push
pop
xchg
or
add
xchg
cmc
loopne
xor
inc
es
ret
cli
enter
jb
icebp
dec
ret
sbb
jp
jg
fldt
lods
imulb
fnop
pop
jmp
dec
cs
stos
sbb
or
loopne
in
and
mov
inc
fcomps
adc
lds
jp
jae
jmp
dec
aaa
jno
cwtl
cli
inc
lods
loope
ret
push
popf
push
lock
scas
xchg
jge
adc
push
repz
mov
dec
xchg
ja
xlat
and
pop
cmp
inc
pop
lods
sbb
nop
inc
xor
out
ret
mov
jno
aad
rol
xchg
out
inc
jmp
push
in
mov
loopne
or
imul
sub
push
sbb
je
insb
es
mov
cmpsb
mov
je
adc
jbe
inc
cmp
add
insl
jb
inc
jg
jmp
enter
ss
jl
push
iret
stos
shl
sbb
jo
loop
ffreep
dec
outsb
out
mov
inc
sbb
roll
add
pop
mov
mov
hlt
mov
fisttps
pop
xor
cmp
xor
and
sbb
jp
fisttpl
sub
pop
repz
test
daa
scas
cmp
popf
pop
mov
mov
mov
imulb
or
mov
ss
xor
inc
dec
cmpsl
pop
mov
pop
insl
jl
repnz
mov
mov
push
sbb
cmpsl
mov
test
xor
es
jnp
mov
mov
inc
popa
loop
sub
mov
pop
and
repnz
shll
adc
adc
test
mov
jp
fbld
mov
jmp
fmull
leave
mov
lods
cmp
mov
sbb
sarl
mov
and
cmc
jo
xchg
pop
add
mov
push
stos
cmpsl
std
scas
inc
repz
sub
inc
xor
out
mov
ja
stos
roll
cli
movsl
push
ret
and
in
dec
mov
test
fsubrs
das
add
cli
ret
pop
lods
stc
xor
das
int3
ds
jno
mov
lcall
inc
lds
pop
xor
aas
loope
inc
sarb
and
cmpsl
or
ret
fdivrl
or
test
fiaddl
ja
iret
pusha
jmp
loope
pop
xchg
repz
xchg
es
xchg
jno
dec
es
cmp
dec
in
fidivrs
jb
int3
dec
push
push
popf
repz
insl
popf
mov
push
pop
aad
push
mov
pop
jge
sub
mov
xlat
sbb
cmp
and
sbbl
push
repnz
mov
xchg
lret
push
cs
xchg
rolb
adc
out
jle
mov
cmp
repnz
cmp
jmp
jmp
xor
pusha
enter
fdivrs
orb
inc
xchg
cmp
sbb
movsl
aaa
mov
pop
inc
mov
xchg
dec
daa
sub
mov
inc
pop
xchg
ret
movsb
push
xor
xchg
jae
lret
flds
cmc
jb
jl
fs
mov
push
sbb
out
xor
jnp
rcrl
leave
iret
fidivrs
adc
mov
lahf
mull
jne
add
imul
inc
iret
mov
push
mov
cmp
inc
pop
xchg
inc
xchg
jo
or
and
cmp
inc
fidivrl
insb
lea
hlt
sub
in
or
gs
icebp
hlt
loope
ja
jle
push
jl
cmp
sub
clc
push
jmp
inc
adc
and
cli
jae
std
mov
into
push
outsl
push
repz
leave
adc
imul
pop
lea
jnp
lock
aam
inc
xchg
sbb
mov
cmp
addr16
cmpsl
jnp
sub
test
rcr
imul
xchg
push
stc
sub
aas
inc
test
fdivr
and
adc
mov
pop
jge
jp
sbb
mov
push
cmp
lock
cld
xlat
push
lcall
adc
cmp
fists
jge
scas
in
push
leave
adc
pop
mov
out
or
arpl
loop
xlat
mov
int
rol
xlat
pop
push
xchg
jae
inc
push
inc
repz
fwait
ret
push
loop
aam
shrb
bound
mov
or
dec
daa
mov
lcall
jbe
mov
rcll
xchg
push
xchg
pop
push
cmp
hlt
xorl
xlat
dec
dec
daa
fwait
into
ja
jnp
xchg
inc
out
cmp
or
adc
jae
aam
test
insb
and
icebp
popa
loop
dec
add
mov
shll
outsb
inc
cmc
pop
icebp
push
negb
push
test
icebp
pop
push
xchg
inc
xchg
mov
loop
xchg
insl
movsb
xor
pop
lods
loopne
mov
push
daa
add
shl
mov
fbld
inc
jb
pop
jecxz
cmpsl
push
lcall
pop
test
jb
mulb
shll
rcr
jmp
inc
sbb
mov
and
mov
and
xchg
inc
nop
push
xor
aaa
sub
add
xlat
or
dec
mov
daa
hlt
push
sbb
add
lds
bnd
loope
push
xchg
xchg
or
stc
incl
test
fs
repnz
cmp
push
inc
rcrl
sub
inc
xchg
pop
imul
add
daa
or
xor
movsl
fsubrl
push
pop
ds
mov
jle
iret
movsl
sbb
sahf
rcl
inc
cmc
in
ret
xchg
shlb
std
inc
or
aam
insb
xor
in
inc
iret
cmc
int
fadds
insb
test
pushl
sti
sub
pop
inc
mov
test
push
out
xor
adc
inc
rorb
pop
rcl
outsb
xchg
jb
pushf
and
nopl
ret
inc
adc
lods
cmpsl
mov
mov
shrl
mov
mov
pop
cmpsl
ret
and
arpl
cwtl
adc
sbb
push
roll
repnz
xlat
int
sub
and
sar
cmp
push
int3
mov
add
gs
aaa
cwtl
adc
loopne
mov
lahf
dec
xchg
cltd
mov
jnp
push
pushf
xchg
out
xchg
jb
iret
xlat
dec
leave
out
in
icebp
pop
pop
inc
out
mov
adc
cmpsl
jb
xlat
out
addr16
sbb
push
mov
sbb
addr16
ret
inc
mov
or
lds
and
inc
lret
repnz
xchg
iret
push
adc
cmp
stos
push
xchg
icebp
pop
rclb
push
jl
jb
mov
shrl
xchg
test
push
cwtl
stos
pop
dec
mov
mov
cmpsl
fdivrl
xor
fisubl
ljmp
daa
adc
rcrl
rclb
popf
pop
inc
imul
inc
cmc
fcmovnu
stc
mov
int
add
sub
inc
push
aas
sti
hlt
xor
inc
inc
loope
popa
jge
mov
jp
out
inc
out
xchg
test
push
bound
mov
repnz
jno
ficomps
dec
or
mov
aas
inc
xchg
daa
flds
adcb
mov
jmp
cld
pop
mov
scas
push
xchg
inc
stc
nop
idivl
mov
jnp
sbb
fnstenv
ret
shlb
arpl
mov
cmp
fadds
lahf
inc
mov
jecxz
mov
xchg
rorb
notb
adc
movsl
sbb
adc
jecxz
sti
clc
sbb
dec
lret
and
rorb
repnz
ret
pop
xor
sub
repnz
xchg
lock
jg
xor
pop
xchg
jb
mov
movsl
das
ret
cmp
sarb
adc
and
add
adc
pop
mov
movsb
imul
scas
aas
mov
dec
push
lret
push
dec
dec
repnz
aas
xchg
scas
es
aas
icebp
sbb
jns
lea
sub
lods
xor
cmp
je
test
cmp
in
mov
test
ljmp
xlat
pop
mov
lds
rcl
mov
aaa
push
pop
jb
aam
jo
mov
aas
clc
push
sahf
mov
mov
mov
shrl
fsubr
negb
es
rorl
mov
xchg
sbb
call
mov
push
lock
sub
ret
ja
jns
jo
lahf
cmp
inc
mov
mov
xchg
out
push
out
inc
daa
xor
popa
or
dec
jge
inc
loope
ss
daa
repnz
sub
fisubl
pop
mov
pop
insl
in
sbb
sub
xor
daa
jns
sub
jmp
xchg
neg
cltd
test
into
xchg
daa
movb
xlat
mov
jns
aaa
ret
scas
xchg
clc
add
inc
mov
ja
imul
sub
dec
inc
dec
lea
fildl
inc
rorb
in
push
or
daa
add
xchg
cmpsb
pusha
xchg
jp
push
mov
sbb
cmp
xchg
mov
jne
mov
xor
cmpsl
dec
jp
shll
xchg
dec
mov
and
iret
fsts
in
fbstp
push
sti
sbb
cmp
ror
les
pop
push
jb
ret
jge
sbb
stos
xor
sbb
push
cwtl
inc
test
and
add
stos
cld
out
sbb
fsts
enter
jl
add
out
cmc
imul
mov
popf
pop
repnz
testb
push
int3
inc
fidivrs
jno
daa
cld
into
pusha
loopne
scas
xor
sub
jmp
inc
orl
sbb
test
psubb
iret
lret
in
shll
sbb
jnp
xchg
mov
fdiv
fs
xchg
mov
jl
or
out
leave
ret
dec
call
aaa
insb
rorb
sbb
dec
lock
xchg
rorb
sub
jb
inc
out
in
repnz
aad
fwait
xchg
scas
xchg
nop
lock
inc
ljmp
mov
sub
mov
jle
stos
stc
xor
je
pusha
cmp
jecxz
xchg
adc
inc
insl
imul
mov
insl
dec
inc
mov
jnp
push
test
push
lock
into
in
cli
test
aam
fldenv
jno
push
inc
data16
dec
nop
cmpsb
aaa
inc
es
nop
popf
dec
scas
hlt
in
loope
in
inc
push
fidivl
mov
adc
or
and
fcmovne
lcall
push
iret
add
xlat
cmpsl
mov
ljmp
bound
imul
push
es
mov
mov
inc
xchg
aad
clc
add
lods
and
adc
inc
out
lods
std
fidivrl
xrelease
cmp
jg
push
repnz
push
jmp
iret
out
pop
push
xchg
ljmp
inc
fildl
dec
xor
xchg
mov
xchg
jmp
dec
inc
jp
dec
daa
xchg
leave
jecxz
cmpsl
ret
fldcw
dec
sub
add
sub
sti
ret
pop
mov
mov
testl
fildl
inc
pop
daa
mov
jno
ret
pop
out
dec
mov
xchg
jmp
mov
xchg
mov
push
or
test
xor
pop
sub
or
out
cmc
orb
mov
xchg
test
mov
add
lret
sub
mov
lods
xlat
call
imul
sti
les
imul
cld
test
lahf
lds
clc
aad
loope
push
inc
loope
aam
test
sti
bound
cltd
fcompl
sti
fdiv
cmp
fwait
scas
es
mov
pop
mov
stos
pop
xor
mov
fisttpl
xor
jae
popa
ja
dec
outsl
xchg
cmp
pop
pop
xor
scas
sub
fcompl
fnstcw
int
fisttps
dec
push
lods
test
dec
or
fcomps
pop
jmp
cmpsl
mov
ret
mov
jmp
sahf
and
js
mov
pop
xchg
test
and
jno
cmp
dec
xchg
pusha
mov
dec
hlt
xlat
test
mov
mov
ljmp
fcomi
mov
not
mov
arpl
scas
ret
xchg
dec
imul
lods
mov
mov
call
push
pop
sub
xlat
xchg
inc
pop
inc
dec
or
xchg
push
pop
inc
push
scas
ret
call
sub
pop
or
icebp
shrb
pop
xlat
mov
dec
push
mov
popa
rcrl
adcb
dec
pop
push
dec
inc
push
jno
pop
lret
icebp
dec
dec
jmp
pop
sub
in
aam
rorl
push
fwait
ret
xchg
jne
mov
push
js
push
and
dec
mov
push
fcmovnbe
sub
mov
shlb
test
xlat
push
cmpsl
fldcw
roll
lods
movsl
mov
mov
mov
push
sbb
call
cmpsb
outsl
mov
mov
cs
ret
sbb
fdivrs
cmp
fildll
jmp
ret
gs
pop
fs
mov
addl
leave
fistl
inc
mov
aaa
mov
lret
jge
add
xchg
movsl
movsb
jns
mov
sbb
push
xchg
out
push
cmp
cmp
pop
cmpl
lret
jns
jmp
stos
jl
push
icebp
mov
jl
icebp
pop
jecxz
stos
test
push
cmpsl
pop
push
xchg
sti
or
lcall
pop
inc
mov
xlat
in
not
jecxz
repz
add
pop
jl
jecxz
aam
adc
testb
out
mov
pop
imul
jmp
pop
test
inc
filds
cmpsb
stos
popf
fisubrl
adc
mov
mov
lahf
dec
xor
insl
les
inc
or
test
mov
add
inc
lret
daa
ja
push
mov
xchg
insl
and
loopne
dec
cmpsl
movsl
mov
dec
add
test
icebp
cmpsl
clc
sub
or
idivl
dec
and
je
jb
push
jmp
in
clc
lahf
roll
fldenv
loop
xchg
jl
mov
push
or
push
movsb
xchg
sub
push
mov
push
cmp
mov
stos
test
sub
cmpsl
dec
jecxz
lcall
stos
dec
mov
inc
cmpsl
cmpsl
jge
or
or
into
paddusw
sub
test
repz
pop
divb
jp
inc
push
cmp
xchg
xchg
fldenv
and
fwait
xor
sbbl
fdivs
or
mov
mov
ljmp
mov
mov
mov
notb
and
mov
xchg
loop
jns,pt
adc
sub
out
cmp
push
inc
pop
ret
ret
inc
cltd
and
rorl
push
ret
insb
test
mov
or
decb
cmp
test
fs
aad
aad
mov
cmpsl
jbe
xchg
jge
jb
call
push
loopne
ret
jmp
mov
adc
dec
loopne
hlt
xlat
inc
js
adc
jg
adcl
pop
into
test
ret
add
mov
xor
sbb
jg
aas
jmp
inc
test
scas
test
xchg
push
fsubrp
jmp
add
or
outsl
imul
and
push
jmp
inc
jge
ss
ja
inc
ret
shlb
pop
inc
test
icebp
jp
data16
aaa
shrb
ja
push
sbb
daa
or
test
shll
out
pop
mov
push
pop
inc
inc
pop
movsl
sbb
pop
push
fsubl
xchg
cmpsb
out
stc
into
add
in
pop
lods
dec
nop
aas
int3
insb
fcomps
pop
mov
fistpll
adc
fisttpl
mov
call
ja
mov
pop
jb
sbb
xchg
aaa
je
push
cmpsl
scas
xchg
cmp
popf
popf
repnz
fldl
loope
imul
push
mov
ret
cmpsl
loop
inc
movsl
ss
xchg
repnz
mov
fistl
bound
xchg
jl
lods
fcompl
bound
pop
lret
adc
movsb
lea
ja
jmpw
inc
mov
add
mov
mov
imulb
cli
jno
mov
fbld
push
jo
in
stc
and
push
les
ljmp
stos
add
jbe
cmp
inc
not
push
xchg
jecxz
cmp
jp
lahf
les
int
inc
xchg
xor
dec
icebp
lret
fsubrl
inc
pop
scas
jge
mov
add
out
cli
xchg
inc
cmc
loop
mov
in
scas
xchg
jbe
mov
pop
push
push
fiaddl
test
adc
clc
jle
xchg
sti
std
test
inc
fdivrs
dec
xorb
inc
sub
stos
push
aaa
inc
fwait
jno
mov
adc
push
inc
cmpsl
shl
test
cld
inc
stos
or
jmp
fiadds
xlat
ret
loop
jb
es
or
cmp
adc
pop
insb
mov
or
jbe
jmp
ficoml
push
fcomp
insb
xchg
lahf
stos
rol
xchg
inc
testl
jno
xchg
xchg
shrb
xchg
adc
lds
lcall
int
shll
xchg
xlat
lea
scas
jns
push
je
mov
xlat
mov
sbb
ja
rclb
in
mov
inc
aad
int
leave
inc
int
mov
inc
mov
fstl
inc
inc
js
addl
mov
shlb
xchg
repz
faddp
into
xchg
out
insl
mov
leave
lock
cli
lods
add
dec
xchg
in
movsl
testl
push
ret
cmpsl
dec
mov
movsb
jmp
add
cmpsl
or
addl
xor
lods
jl
pop
lcall
movsl
rcrl
int3
mov
sbb
cmp
cmpsl
sbb
imulb
fs
mov
pop
xchg
mov
xlat
push
jo
scas
pop
mov
test
or
pop
int
xchg
lea
push
jge
push
leave
std
mov
iret
scas
ljmp
fdiv
mov
pop
scas
fstpt
mov
mov
lret
fldl2t
push
dec
mov
push
pop
jp
jp
and
iret
mov
lock
push
sub
mov
sub
push
leave
pop
ret
or
mov
dec
lret
rcr
dec
lds
je
roll
fistpl
jmp
lcall
mov
cmp
and
ret
fdecstp
leave
cmp
push
lods
aaa
jmp
sub
lock
cmp
stos
aas
aam
into
lods
xor
adc
sarl
pop
xor
xlat
imul
fwait
or
icebp
push
loopne
dec
cmpsb
jno
or
xor
mulb
movsb
jl
rol
cmpsl
inc
fistpl
aad
outsl
cltd
out
mov
sti
in
repnz
nop
sub
mov
and
int
mov
dec
das
out
push
loopne
into
rclb
mov
mov
aam
ret
fld
pop
fists
ffree
fsin
ret
scas
add
pop
adc
out
xchg
xchg
lods
inc
icebp
adc
pop
sbbl
aad
jmp
sbb
xorl
fisubrs
hlt
or
mov
sub
cwtl
stos
iret
jp
out
hlt
cmc
lds
mov
jbe
mov
ret
outsb
pop
add
out
add
push
pop
or
mov
repz
in
arpl
fucomip
adc
adc
rolb
mov
faddp
imulb
lds
sub
cltd
nop
loop
pusha
repnz
mov
mov
es
mov
mov
lock
jns
fwait
clc
in
xchg
mov
lock
fisttpl
pop
push
int3
add
popa
inc
ds
repz
imul
loope
mov
xchg
cld
loope
dec
lcall
nop
sbb
lea
loop
cmp
psllw
insb
rclb
push
ret
lret
jecxz
mov
aaa
shl
push
xchg
xchg
cwtl
adc
insl
xchg
cmp
sahf
bound
dec
int3
test
lods
cltd
in
cmovne
sbb
inc
or
mov
cs
dec
loopne
aad
lock
repnz
xchg
pop
pop
mov
ror
hlt
popa
jno
fdivrs
or
add
pop
push
mull
mov
les
aam
rcll
lods
push
ja
nop
outsl
jne
adc
fsubrs
dec
xchg
jge
lds
or
push
sbb
jae
imul
push
lret
sbb
aas
lods
popw
out
bound
mov
test
xchg
mov
pop
out
adc
mov
sub
and
dec
jmp
jbe
xchg
mov
mov
and
loop
jae
enter
mov
xchg
jae
cmc
in
push
push
cmp
cli
ret
iret
out
jmp
inc
xchg
repz
sub
or
lret
xchg
enter
inc
out
cmpsl
stos
and
mov
sbb
inc
pop
test
or
aaa
out
sbb
push
mov
cmp
ja
subb
xchg
rcrl
mov
repz
popa
stos
test
xor
rcll
pop
sbb
jmp
fcmovnb
scas
pusha
out
into
addb
loop
testl
int
pushl
xchg
xor
or
cs
dec
or
jp
xchg
scas
adc
outsl
sbb
addl
test
adc
jle
cmp
dec
jae
loope
movsl
icebp
imul
adc
stc
stos
icebp
pop
jae
out
jp
add
jge
shlb
dec
lahf
inc
sti
icebp
cmc
int
nop
and
scas
rcrl
mov
imul
call
loopne
jge
push
in
aad
clc
or
outsb
xor
shrd
test
xlat
test
cmc
outsl
fwait
add
inc
lods
out
arpl
inc
scas
pop
mov
sarb
lret
jnp
xlat
xchg
cmp
mov
mov
jbe
push
dec
ffreep
lods
mov
mov
rclb
mov
and
or
inc
mov
xchg
fwait
xchg
lods
repnz
cmovbe
fwait
push
cwtl
jnp
inc
loope
lods
insl
movsb
sbb
test
sub
es
int3
jl
loope
pop
xor
mov
rcll
and
flds
sbb
push
push
int3
repz
imul
aam
xchg
loop
loop
mov
fnsave
fisttpl
mov
pop
out
adc
sbb
les
shl
loopne
cmc
insb
cs
sub
xor
push
stos
xchg
sbb
inc
pop
push
jno
es
lds
cmpsl
push
pop
push
cmc
push
int
imul
shlb
dec
icebp
push
mov
xor
add
push
gs
jg
mov
mov
shlb
dec
flds
icebp
fcmovnbe
inc
out
jns
inc
mov
inc
xchg
pop
mov
mov
mov
rcrb
add
xchg
das
inc
icebp
add
cmp
outsl
scas
std
jl
or
orl
jp
sbbb
arpl
loop
or
lods
insb
cltd
cmp
or
jbe
rorl
ja
pop
cmp
xchg
addr16
mov
ss
xchg
cltd
sti
push
xchg
xchg
or
cmpsl
mov
fxch
test
mov
pop
into
arpl
xorl
lock
mov
fildll
psubd
ljmp
pop
inc
lods
jns
mov
dec
sbb
test
setb
sti
fldt
mov
mov
roll
inc
pop
pop
sar
mov
fwait
outsl
cwtl
pusha
lret
shrl
fcomi
repz
mov
scas
fcmovb
ret
lret
fldl
fwait
push
or
das
adc
lret
xchg
and
cmp
jb
dec
aaa
jo
mov
icebp
jns
push
xlat
in
cmp
test
mov
lock
insl
fnstenv
pop
rorl
sbb
jle
fucomp
inc
pop
ret
aad
test
out
dec
jnp
push
add
cmp
lds
shll
out
jo
repz
pop
cmp
incb
sub
test
mov
loop
shrl
pop
ffree
rcrl
mov
cmp
mov
ret
outsl
out
aas
outsb
fcoms
aaa
pop
sahf
inc
ret
iret
int3
ret
jnp
insl
cmc
sti
or
jecxz
fmuls
sub
ret
repnz
insb
cmpsl
cmp
sbb
test
mov
sti
test
sbbb
imul
jnp
popl
cltd
imul
dec
xchg
pop
jle
fldt
pop
rcl
js
jb
data16
mov
int3
mov
je
icebp
xlat
mov
js
add
repnz
movsb
fmull
cmp
in
jg
lret
fcomip
in
repnz
fcmovnb
mov
insl
jp
fsubp
or
mov
pop
cmp
push
inc
mov
or
stos
sbb
xchg
out
enter
ficomps
mov
in
mov
push
pop
mov
into
mov
add
pop
ret
pop
addl
pop
jp
cli
clc
xlat
jbe
jnp
mov
add
in
scas
std
addl
inc
push
mov
adc
jge,pn
jb
push
loope
mov
jb
lahf
out
loop
mov
ret
rorb
cmp
push
leave
pushf
xor
dec
lds
pusha
fcoml
test
ret
jg
icebp
fstpt
or
fwait
js
cmc
mov
jge
dec
xlat
repz
push
mov
stc
jb
shll
loop
arpl
loope
add
push
jbe
repnz
xlat
mov
fldenv
fld
repz
jg
push
cmpsl
cltd
mov
mov
daa
push
pop
cltd
dec
jmp
inc
pop
push
cmpsb
mov
or
inc
dec
sub
sti
push
imul
dec
gs
data16
xor
scas
dec
das
mov
lds
jbe
mov
lret
mov
jp
ret
cld
mov
cmpsl
and
mov
push
mov
cmp
hlt
fwait
xchg
cli
xlat
aaa
fisubrl
pop
mov
cmp
shrl
lret
lock
jecxz
pop
scas
lds
push
out
push
cmpsl
repnz
icebp
rorl
xlat
pop
jmp
inc
pop
cmp
xchg
dec
inc
hlt
hlt
adc
int
xor
les
xchg
cs
icebp
aam
sbb
test
ficoms
out
jle
fdivrs
inc
arpl
adc
sarb
add
xchg
repnz
rolb
or
mov
jnp
stos
int
push
or
pop
cmpsb
xchg
and
scas
subb
icebp
andl
mov
push
ret
iret
xchg
adc
aam
out
imul
repnz
inc
orl
mov
lret
rol
out
repnz
data16
cltd
push
shrl
sarb
std
loopne
cmp
pop
loopw
aaa
stos
int3
pop
inc
dec
std
arpl
jmp
pop
sti
jb
push
adc
mov
int
mov
push
xor
ja
pushf
movsl
mov
jp
or
scas
ret
arpl
loope
push
addb
fistl
sub
ret
add
out
add
notb
adc
shrb
mov
sbb
cmpsl
int
divps
into
mov
test
cmpsl
adcl
cmp
sub
mov
stos
mov
pusha
xor
xchg
jge
mov
xchg
or
jg
pop
inc
mov
mov
mov
mov
push
jmp
jae
fdivl
mov
xchg
rcll
inc
stc
xchg
stos
push
jecxz
dec
fstps
icebp
stc
jne
mov
xchg
loop
add
lods
pop
push
das
fwait
ja
pop
loop
cld
leave
or
push
es
daa
and
icebp
or
loopne
mov
jbe
adc
lret
es
cmpsl
jns
mov
sub
jns
inc
mov
imul
shlb
jbe
mov
xlat
int3
scas
inc
mov
fstpt
arpl
repz
add
xor
lods
xlat
aam
leave
test
aaa
ret
sbb
mov
ljmp
in
lcall
mov
xor
shlb
mov
pop
imul
into
mov
aad
pop
mov
sbb
inc
mov
ret
lods
outsl
jo
ret
mov
test
jo
ret
lea
fstpt
or
xor
pop
push
stc
fists
jl
gs
in
pop
cmp
sub
mov
in
mov
filds
loope
ljmp
jo
inc
pop
jo
push
sbb
mov
mov
rcr
push
xchg
jo
inc
push
sbb
mov
mov
aam
push
xchg
inc
stos
lods
pop
sub
test
xchg
jo
inc
scas
sbb
mov
mov
sub
frstor
mov
mov
and
cmpsl
xchg
jo
inc
cmpsb
sbb
mov
mov
and
mov
mov
mov
cmp
mov
mov
mov
cmp
mov
jo
inc
mov
xor
mov
aaa
fnsave
mov
xor
ljmp
sub
push
aam
jecxz
shll
loopne
push
and
fcomi
lcall
push
add
aad
cmpsl
fdivr
inc
sub
cmpsb
out
frstor
fidivrs
sbb
pop
inc
cmpsl
insb
xor
mov
add
mov
pop
push
or
repnz
es
push
mov
sub
cmpsl
es
xchg
push
sti
jp
mov
dec
inc
je
mov
dec
cmp
pop
mov
je
add
and
add
loope
mov
paddsw
loopne
fcmovne
xlat
push
pop
pop
sub
mov
push
push
js
and
dec
cmpsl
mov
cmpsl
imul
xchg
stos
sbb
adc
jns
icebp
lods
xchg
xor
push
dec
lahf
andl
push
repz
rcl
ficoms
stc
shrl
loope
mov
jl
in
fs
lret
mov
push
mov
icebp
mull
andb
jae
pop
jae
scas
jno
fst
mov
jns
and
aad
xor
mov
push
icebp
adc
out
loope
jecxz
out
bound
in
daa
leave
repnz
xchg
cmc
repz
xlat
add
inc
mov
inc
lods
out
icebp
cltd
jno
repz
add
icebp
cli
sbb
inc
and
lods
cmc
mov
sbb
cltd
inc
lret
xchg
add
inc
mov
lds
clc
ret
lret
sti
mov
inc
and
popl
mov
cmpl
stos
pop
subl
scas
shl
mul
inc
push
cmpsl
adcl
loop
pop
lret
out
pop
in
push
dec
push
sub
jmp
inc
xchg
repz
sbb
lds
aad
insl
push
or
push
mov
jg
dec
add
mov
inc
fnstenv
into
fsts
and
shr
mov
push
jb
ret
xchg
fcmovnb
and
pusha
int3
mov
xor
sub
stc
push
rorb
fisttps
add
push
aas
pop
ja
fwait
cmp
lock
in
inc
xchg
push
pop
fisubs
es
fldenv
lret
aad
cmpsl
js
add
jecxz
mov
fcoms
jnp
cmpsl
jae
loope
out
jecxz
push
fisubrl
mov
cmc
ljmp
loop
jmp
fbstp
clc
cltd
cmpsl
adc
fcmovbe
stc
lock
dec
xlat
cmc
ss
adc
rcrl
fwait
les
xchg
cmp
pusha
test
pop
rcr
xlat
mov
testl
rcrl
rcr
jecxz
xchg
sbbb
ror
ja
mov
inc
daa
sar
ficoms
sbb
adc
roll
mov
lcall
mov
add
loope
loope
inc
movsl
sbb
in
jne
jo
inc
out
aad
lret
jmp
adc
loop
fnstsw
xchg
xor
inc
fs
push
inc
not
sbb
inc
mov
loope
rcrl
leave
pop
cli
jecxz
jl
sbb
lret
out
mov
cwtl
imul
inc
in
inc
lahf
out
pop
mov
push
gs
das
pop
shll
xchg
ret
push
inc
jl
stc
cmp
or
sub
jns
scas
mov
insl
push
sti
mov
scas
sub
sti
in
or
lock
pop
inc
andl
mov
push
je
faddl
pop
mov
or
test
push
push
sub
test
add
inc
outsl
inc
inc
fisubrl
jmp
lock
into
cmpl
mov
daa
cmpsl
je
push
or
sarl
or
or
mov
int3
push
pop
imul
dec
xchg
mov
fpatan
pop
popf
data16
lret
lods
cmpsl
clc
fistpl
lcall
pop
mov
add
test
lods
push
cltd
mov
jo
mov
jmp
xchg
xchg
mov
scas
data16
adc
jo
pop
dec
add
push
xchg
jo
in
cmpsl
mov
xchg
xchg
imul
push
inc
cmpsl
rcrb
ret
fwait
push
jg
mov
mov
cld
xor
jl
test
das
bound
jmp
popf
icebp
mov
pushf
push
outsl
jmp
addr16
fldl
dec
scas
int
mov
iret
icebp
push
jl
js
stc
jne
jmp
repz
push
inc
mov
outsb
fbld
jp
into
popa
mov
test
popa
push
jmp
les
jg
jge
mov
leave
sbb
sti
mov
lock
mov
cmp
enter
mov
jle
mov
mov
add
insl
shll
loope
ret
shr
xchg
cltd
loopne
enter
iret
hlt
or
shlb
xchg
inc
iret
xor
and
fildl
test
ret
mov
std
cmpsl
roll
mov
cld
push
dec
repnz
mov
add
rol
test
cmpsl
pusha
sti
inc
in
daa
loop
fbld
aam
stc
lods
stos
push
test
adc
cmp
das
fwait
jmp
or
mov
jmp
shrl
mov
and
sub
mov
ljmp
aam
sub
in
push
test
cld
fmul
mov
fldl
lods
es
sbb
jo
or
xchg
jne
fildl
mov
lods
mov
jmp
adc
aam
rclb
xorl
push
jmp
shr
mul
lret
aad
int
aad
inc
rcr
xlat
fadd
fcomip
fstpl
ret
rol
rcl
xlat
push
lds
mov
and
out
fcom
jb
mov
push
lods
mov
sub
fadd
xchg
test
or
push
test
stos
jnp
loop
fcmove
mov
leave
adc
aad
mov
sub
inc
das
adc
ret
jmp
push
jmp
pop
gs
xor
lds
cmpsl
shrl
fwait
pop
ret
pop
aam
push
fistpl
mov
rcr
imul
repnz
push
pusha
xlat
shlb
in
out
insb
nop
or
icebp
mov
test
imul
mov
pop
rol
push
rorb
sbb
ret
fxam
push
or
fsts
xor
loop
mov
pop
repz
xchg
out
inc
adc
cmpsb
push
push
loop
xchg
ret
adc
mov
test
inc
ficompl
es
js
repz
jmp
fcmovnbe
ret
lods
ficoml
rcl
jle
inc
xor
sarl
cmpb
loope
cltd
jbe
and
rclb
dec
bnd
imul
shlb
inc
sbbb
add
repz
rclb
popf
neg
pop
push
mov
xor
cmp
jle
cli
xchg
xchg
bound
or
cli
jno
mov
pop
sub
add
inc
imul
loop
sbb
mov
adc
shr
leave
inc
cli
fmul
mov
int3
clc
out
mulb
pop
fcomip
lock
pop
aam
fcmovbe
inc
ja
mov
insl
xor
pusha
pop
cltd
pop
cmc
int
fnstenv
je
pop
dec
aaa
ds
add
pop
aad
pop
ja
cmpsl
adc
adc
lock
or
push
stc
js
push
iret
jp
jl
repz
les
pushf
in
loope
hlt
lret
mov
call
sti
js
jbe
dec
es
jp
int3
loope
hlt
inc
cmp
mov
dec
pop
mov
inc
dec
xchg
insb
xchg
xchg
movsb
xchg
cmc
aaa
xchg
int
sbb
push
ret
rol
fildl
mov
mov
imul
iret
push
imul
jp
popf
jae
push
jecxz
push
mov
xchg
jbe
mov
lret
lahf
shlb
ret
dec
jecxz
sar
inc
mov
fwait
adc
cmp
fcoms
psubsb
jl
icebp
push
ljmp
xchg
rcr
cli
add
pop
push
mov
leave
nop
mov
lea
dec
iret
mov
imul
out
push
mov
dec
mov
lret
push
sarl
pop
fnop
fcmovnbe
aad
xlat
cmpsl
push
pop
cwtl
adc
jge
jl
sbb
shll
test
jnp
imul
jne
in
out
daa
jb
push
mov
std
adc
mov
in
ret
mov
jns
repnz
rcr
int3
pop
add
sahf
idivl
push
or
push
jge
mov
pusha
add
mov
insl
fnstenv
hlt
fbld
out
push
mov
lods
sbb
cmpsl
sbb
aaa
pop
aam
sbb
xchg
mov
nop
test
mov
lods
mov
xchg
sub
jns
rcr
imul
sbb
movsb
fcmovnbe
inc
cld
imul
sarl
sarl
or
scas
fbstp
jo
cmp
mov
jl
xor
mov
or
inc
jge
mov
testb
push
pop
sub
test
xor
fldt
mov
xchg
daa
lock
fsubs
jg
xor
jp
call
pop
jne
repnz
test
hlt
mov
pop
inc
insb
fisubrl
fistpl
nop
nop
scas
mov
jns
pop
add
inc
sti
xchg
lds
dec
sub
ret
ret
push
call
bnd
sbb
popa
xchg
xor
repnz
clc
outsl
fisubl
fwait
cld
jns
mov
pushf
ret
lock
mov
mov
push
jno
shll
aad
push
push
inc
jle
push
xchg
fwait
cmp
fsubp
rorl
test
mov
aad
js
int3
dec
stc
push
xlat
dec
icebp
jle
sub
movsb
mov
jno
push
push
in
cmpsl
xchg
insb
push
outsb
enter
js
cmp
xchg
in
decl
cmpsl
sub
add
movsl
rol
xlat
fstp
js
push
loop
rcl
jno
out
sbb
icebp
es
aad
cli
mov
daa
sbb
ffreep
int
mul
fwait
mov
fimuls
mov
push
ret
in
xor
pop
out
inc
pop
push
movb
sti
push
and
bound
or
push
daa
movsb
rcrl
leave
xchg
and
xchg
fistl
sbb
out
fistl
subb
pop
mov
insl
sbb
push
fincstp
ret
adc
ret
repnz
arpl
aaa
jmp
push
fdivr
outsl
xor
pop
push
clc
mov
pushf
jbe
mov
sbb
cmpsl
cmp
mov
filds
pop
shll
fs
shr
lds
ret
cli
repz
mov
pop
lret
or
insb
mov
adc
mov
test
js
rcrb
ret
aam
mov
xor
xchg
sub
dec
or
pop
stos
in
mov
mov
out
xchg
cmc
rclb
out
movsl
inc
add
js
xor
rclb
mov
ret
inc
push
push
pop
cs
sub
pop
inc
nop
fwait
dec
rclb
mov
xchg
pop
dec
sub
mov
inc
loopne
pop
sbb
fidivl
aam
push
daa
aam
pop
dec
ljmp
xchg
cmc
pop
arpl
fwait
test
xchg
inc
icebp
pop
ret
add
cld
mov
pop
ret
xchg
lret
mov
pop
jb
dec
mov
inc
movsl
popa
bound
adcb
rcl
sub
add
fucomi
adc
add
mov
sub
int3
and
notb
mov
inc
mov
mov
ret
aad
mov
mov
push
mov
add
stc
xor
jne
add
add
daa
imul
pushl
jbe
lods
enter
in
jb
push
lock
jb
clc
adc
test
adc
add
shrb
pop
test
lahf
shr
pop
mov
sub
xchg
jge
scas
icebp
fldt
lea
pop
xorl
pop
daa
add
and
idivl
fisttpll
and
orl
divb
hlt
push
mov
hlt
fdivl
pop
test
sbb
sti
test
mov
imul
adc
push
in
call
push
dec
shll
pandn
cld
mov
stos
inc
sbb
xchg
cmpsl
mov
sub
jge
leavew
adc
fdivrs
and
loop
repz
outsb
jbe
mov
cmpsl
inc
or
icebp
outsb
cwtl
pop
fiaddl
popf
pop
sub
inc
inc
call
push
shl
pushf
rol
cmp
imull
mov
scas
sarl
cmp
fcmovu
sbb
mov
shrb
pop
push
daa
push
dec
lods
inc
outsl
and
push
data16
cmpsl
pop
cltd
scas
mov
mov
popa
aad
cmp
jnp
sbb
mov
mov
xor
mov
jo
cmpsl
pop
pop
ret
dec
sarb
xlat
cli
fnsave
mov
testb
push
dec
lds
hlt
es
aaa
mov
iret
outsl
dec
sbb
sbb
dec
ret
imull
mov
es
lock
cli
push
rorb
in
jne
dec
nop
mov
push
mov
lock
lahf
sarb
mov
idiv
jo
and
das
mov
in
mov
mov
dec
push
sub
cmpsb
sub
cmp
std
mov
aad
add
es
inc
adc
rcr
out
scas
xor
andb
jg
xchg
ret
data16
push
pop
mov
xchg
pop
jp
push
dec
dec
xlat
fs
ret
xchg
xlat
out
dec
inc
repz
jl
in
fs
push
xchg
and
insl
pop
pop
jo
out
push
xchg
mov
inc
movsl
iret
cld
fcomip
test
imul
push
dec
fists
sbb
mov
push
mov
xor
fldl
push
fldlg2
add
xor
cmpsl
sbb
push
inc
dec
pop
push
dec
jmp
aam
aad
fcoml
cmpsl
xor
inc
mov
mov
cmpsl
add
sub
sub
add
lret
cmp
pop
shlb
cmp
push
fadds
mov
addl
xchg
arpl
sub
repz
pusha
push
stc
pop
into
into
hlt
rcl
mov
xchg
sarl
stc
mov
adc
mov
add
mov
jmp
push
testl
jecxz
lret
inc
in
loope
flds
pop
xchg
mov
jbe
fldl2e
lahf
add
sbb
mov
lret
sbb
pop
cli
cmpsl
inc
add
into
lods
fidivrs
nop
mov
ss
adc
jmp
xchg
mov
stc
stc
rol
add
mov
xor
push
jl
push
das
stc
pop
dec
leave
std
sbb
insl
ret
push
dec
mov
sbb
xor
mov
and
aam
out
pop
int
push
xchg
cmp
sbb
sub
fpatan
xchg
iret
xchg
xchg
mov
ret
mov
mov
ret
shl
mov
xchg
mov
mov
int3
lock
hlt
rorl
push
movsl
rolb
scas
push
arpl
repnz
pop
sahf
sbb
fwait
ljmp
clc
jp
out
or
xor
fcoms
cmc
jb
jl
scas
enter
mov
repz
ja
jae
outsb
dec
xchg
and
outsb
loop
add
or
stc
int
nop
fwait
out
push
xchg
subl
lea
lahf
rolb
mov
cmpl
inc
outsl
imul
jb
pusha
mov
rclb
pop
sbb
mov
pop
fmuls
and
das
lahf
adc
push
push
dec
es
pop
cmp
and
mov
add
lods
sbb
jp
push
ret
cli
out
adc
mov
in
leave
pop
cltd
fwait
cmpsl
cmp
xchg
cltd
scas
add
ja
jg
aam
jmp
pop
arpl
je
shlb
popa
cld
movsb
fimuls
ret
leave
mov
fmull
dec
imul
out
cmpsl
cmp
inc
es
lahf
jne
sbb
test
sbb
jg
xchg
repz
sub
cmp
loope
test
testl
ja
inc
jg
in
in
jg
stos
aad
fsubs
pop
and
cld
jbe
leave
js
jmp
scas
cmpsl
std
nop
repz
sbb
push
pop
mov
cli
test
repnz
xchg
lret
jmp
and
loop
inc
lahf
jle
shrl
mov
es
dec
std
aad
pop
mov
mov
fldenv
fstenv
pushf
or
mov
mov
cmp
push
lock
inc
push
fnstcw
subl
hlt
lret
pusha
out
xchg
hlt
pop
out
mov
ficoml
adc
push
push
insb
push
je
push
jno
or
mov
push
clc
scas
cmpsl
jnp
sti
dec
popf
cltd
icebp
aam
test
not
jbe
sarl
cmp
rorl
scas
mov
jae
push
jecxz
fisttpl
mov
gs
push
jns
sbb
fcomp
fdivl
mov
stc
inc
dec
iret
and
cmp
inc
insb
fucomp
out
lds
cld
es
xlat
mov
and
les
pop
rolb
ficoml
shlb
fucom
mov
dec
pop
das
shll
aad
push
pop
add
push
ds
inc
adc
rep
inc
les
jns
xchg
jo
out
jae
fimull
push
test
mov
adc
sahf
clc
enter
fldenv
pop
xor
int
xchg
pop
inc
push
fcomi
push
lcall
pop
or
jmp
fcmovnbe
rclb
pop
xchg
pop
divl
scas
mov
out
pop
or
push
xchg
aam
aad
add
stos
adc
addl
test
jnp
sub
push
int3
fcmove
push
and
das
repnz
jns
mov
imul
sti
xchg
push
mov
fcmovnu
mov
lods
pop
inc
add
sbbb
pushf
mov
mov
cli
push
push
and
aam
mov
push
xchg
aam
jno
dec
cs
scas
mov
loopne
jmp
adc
fnsave
out
lods
inc
sbb
push
dec
stos
movsl
imul
lret
sti
jbe
movaps
cli
cmp
pop
adc
ja
sub
mov
scas
push
std
cld
push
nop
insl
fcomi
or
lret
subb
push
pop
scas
push
loope
xchg
icebp
push
daa
hlt
pop
cmpsl
mov
scas
shlb
notb
push
fildl
adc
or
push
repz
sbb
add
lahf
mov
sbb
inc
mov
repz
lea
lock
adc
repz
fistl
add
inc
xor
push
xchg
movsb
sti
clc
pop
hlt
inc
cli
add
ret
ss
insl
push
jb
jp
faddp
dec
pop
jp
cmpsl
jno
and
mov
inc
jecxz
jbe
xchg
in
fcoml
push
imul
notl
sti
add
cmp
pop
dec
lods
push
cmpsl
push
jnp
cwtl
push
lods
push
xchg
lods
push
push
adc
imul
repnz
push
stos
fwait
adcl
mov
icebp
subb
lods
xchg
stos
adc
mov
in
mov
jbe
dec
aam
jo
mov
pop
mov
mov
shl
cmpsl
inc
addr16
and
dec
sbb
out
ret
xchg
push
popf
ret
mov
outsb
adc
rcrl
shl
int
imul
xor
xor
xchg
pop
push
ss
mov
iret
sub
adc
push
xorb
repz
mov
pop
dec
adc
ja
dec
xchg
xor
aas
dec
xor
ret
imul
fcoms
xchg
out
fucomi
sbb
jb
fcmovu
inc
leave
notb
sbb
stc
pop
pop
lcall
imul
cmp
mov
dec
push
rcrb
jo
xor
mov
mov
ss
popf
adc
push
shll
and
test
test
aad
fcmovnbe
adc
mov
addr16
inc
outsb
xor
or
mov
loope
jo
mov
xchg
mov
push
mov
lahf
mov
aad
test
mov
adc
sub
ja
jp
sbb
rcrl
in
int3
adc
into
xor
mov
lods
xchg
add
pushf
rcrl
lret
fcoms
loopne
jbe
lcall
pop
ljmp
ljmp
push
ficomps
int3
scas
sahf
cli
push
into
jle
mov
addr16
xchg
pushf
sti
pop
in
mov
rol
in
xor
fcmovnb
or
cmp
jp
jne
dec
sub
data16
add
mov
mov
fsubrs
loopne
outsb
fistpl
out
popa
fiaddl
or
jg
push
pop
push
subb
push
cmpsl
insb
mov
jnp
call
in
std
inc
add
adc
shrl
adc
movsb
pop
cwtl
rcrl
jb
push
clc
test
jp
rcrl
xchg
mov
xlat
lock
inc
xlat
clc
je
pop
xchg
sti
mov
ljmp
and
test
inc
mov
je
in
mov
xchg
sbb
xchg
adc
xchg
push
cmc
dec
xor
xchg
insl
inc
arpl
jecxz
push
cs
inc
push
fwait
push
aaa
jno
and
xor
aaa
imul
daa
call
ja
xlat
outsl
push
and
movsb
jmp
xlat
lahf
pop
xchg
push
fidivl
ljmp
scas
push
hlt
push
icebp
lret
lods
xchg
js
xchg
sbb
int
pop
jo
mov
jno
inc
jmp
imul
cmpsb
loop
adc
ret
lret
adc
orl
repz
es
push
pop
add
jo
inc
pop
xlat
insb
cmc
int3
pop
lret
push
push
mov
push
je
repz
xchg
push
mov
sbb
hlt
shll
pop
pop
push
dec
mov
dec
loop
dec
mov
popa
ljmp
loopne
je
orl
arpl
int3
lods
push
pop
fnstcw
xchg
cmc
xchg
test
cmc
xchg
in
nop
insl
cmc
aam
mov
ret
in
ret
jmp
pop
lret
shl
out
lcall
and
aaa
jnp
or
repnz
sbb
add
add
outsl
cmpsl
aaa
fisubrs
mov
xor
adc
ljmp
fists
movsl
fucomp
cmpsl
sahf
test
add
lds
mov
shl
jb
lret
jbe
mov
adcb
cld
out
fucomip
jp
inc
rcll
cld
fcomip
dec
cmp
ss
je
aad
fildll
or
push
jmp
fistl
jp
jbe
push
push
push
mov
adc
jo
inc
imul
sbb
lcall
dec
mov
mov
lock
mov
mov
mov
pop
cmpb
inc
mov
fsubrs
imull
rorb
xor
xchg
pop
xchg
dec
es
sar
scas
shlb
lret
mov
scas
pop
pushf
aam
lret
dec
call
pop
add
ss
aaa
inc
mov
icebp
xlat
inc
xchg
mov
sub
pop
sbb
inc
adc
mov
inc
xchg
nop
xchg
sub
scas
inc
scas
mov
jl
lahf
hlt
das
and
inc
scas
in
mov
lcall
pop
jbe
sub
lret
popf
sub
push
cmc
mov
gs
repz
scas
mov
out
rol
push
ret
es
divl
js
inc
cli
lcall
hlt
adc
ret
mov
into
mov
cmp
adc
inc
stc
pop
sarl
das
pop
jl
popf
jecxz
cwtl
mov
adc
fcomps
aad
xchg
mov
dec
push
mov
js
mov
lahf
or
inc
mov
push
je
mov
idivb
outsl
mov
leave
insl
lods
xchg
ficoml
repz
mov
es
push
sbb
cmpl
pop
sbb
xchg
loop
mov
out
mov
or
fdivp
xchg
fldcw
add
jg
daa
outsb
pop
cmpl
push
scas
pop
sbb
add
push
jecxz
bound
gs
jno
scas
sbb
push
rcrl
cmc
stos
repz
jb
notl
repnz
stos
mov
xor
pushl
mov
int
mov
mov
ja
dec
cmc
icebp
cmp
lods
out
lds
imul
fsts
lcall
mov
push
inc
leave
adc
dec
lock
xor
loop
mov
mov
xor
adc
mov
leave
pop
test
lahf
mov
pop
cmpsl
add
dec
xchg
pop
mov
xor
bnd
lcall
ret
movsl
jl
push
in
aaa
mov
je
out
pop
jnp
cmp
rclb
dec
repz
mov
aaa
push
push
xchg
movsl
sar
pop
cltd
push
xchg
sbb
stos
fildll
out
sahf
into
push
pop
xchg
fidivrs
fcmovbe
push
cmpsl
int
fldl
inc
mov
inc
hlt
mov
xlat
push
sbb
pop
sbbl
stc
jne
ficoms
into
enter
cmp
pushf
in
and
xlat
cmc
imul
mov
sbb
stc
and
repnz
es
inc
mov
inc
shl
jo
in
imul
cmp
xor
mov
adc
cmc
mov
int
loope
jnp
out
fldt
xchg
xchg
dec
inc
adc
movl
inc
adc
jmp
notl
sub
sbb
das
cwtl
xchg
loop
xchg
xchg
pop
shlb
divb
add
xlat
jp
dec
sub
push
test
fisubrl
xchg
dec
aaa
ret
imul
repz
aam
lock
adc
shll
mov
xchg
lods
test
mov
jg
pop
iret
lahf
fmull
xchg
stc
mov
xlat
sahf
test
xchg
sbbb
pop
jmp
cmc
xchg
push
cltd
sbb
and
stc
es
dec
andl
jl
sbb
scas
into
sub
mov
inc
xlat
scas
xchg
and
cmc
outsb
stos
xor
adc
imul
insl
dec
loop
ds
mov
fsts
test
mov
test
enter
insb
xchg
sbb
fldcw
add
jb
xchg
push
push
mov
xchg
mov
in
mov
adc
in
outsl
push
jb
out
mov
adc
xor
sarb
inc
rcr
cmpsl
push
popa
push
test
out
cmpsl
stc
fmuls
add
pop
and
mov
inc
test
cltd
movl
add
out
pop
jne
pop
adc
ja
pop
push
test
add
shlb
shrb
cs
shr
popa
mov
cmpsl
push
jne
pop
fildl
pop
adc
add
test
lds
fists
sbb
push
push
pop
sub
fnstenv
fnsave
enter
je
pop
cmp
mov
mov
addr16
push
inc
inc
cmp
push
sti
dec
add
stos
mov
pop
xchg
out
pop
push
aam
lret
or
mov
jbe
sar
xchg
test
mov
imul
nop/reserved
inc
push
dec
pop
adc
mov
scas
inc
sbb
xchg
jbe
dec
pop
loopne
ficoml
insb
lods
inc
adc
fisubs
pop
mov
out
mov
sti
cmpsb
sti
mov
mov
testb
mov
aas
arpl
push
xchg
sub
pop
mov
mov
sbb
in
aam
sub
mov
test
push
loopne
dec
mov
sbb
lds
pop
jbe
leave
in
jecxz
jp
mulb
xlat
loope
jae
fdivrs
xchg
js
push
mov
adc
fdiv
jnp
nop
lcall
cmpsb
add
notl
pop
cs
fsts
test
sti
xor
sbb
and
xchg
jb
xchg
sahf
lods
sub
dec
jo
in
jae
adc
shlb
push
push
test
shll
pop
and
pop
notl
sarb
stos
mov
mov
push
xchg
xor
pop
rclb
in
je
ja
je
push
daa
lcall
dec
inc
insb
imul
xor
mov
jmp
js
pop
adc
mov
mov
dec
inc
cmp
cli
js
xchg
fidivrs
adc
jno
inc
xchg
popa
dec
mov
inc
je
leave
pop
popa
stos
xchg
inc
jo
sbb
es
rorb
mov
lods
adc
out
ret
frstor
out
stos
sti
int
push
in
jne
addr16
sti
ret
mov
jnp
stc
out
mov
cli
test
out
jmp
iret
sub
jle
sub
loopne
shrb
je
push
xor
rol
movsb
inc
in
adc
mov
sbb
push
divl
fistpl
flds
jnp
push
into
int3
cmpsb
call
inc
jmp
push
or
sub
stc
xor
sub
push
fsubl
inc
push
pop
push
imul
push
std
aad
add
fistpll
push
push
fcompl
aam
out
cli
sbb
pop
ljmp
push
in
push
or
cli
sti
movsl
sbb
cltd
jnp
mov
mov
gs
lret
cwtl
es
cmpsb
dec
inc
adc
pushf
ja
xchg
loop
xchg
jae
mov
cmc
fldenv
out
jmp
arpl
adc
push
aas
mov
fstps
sub
adc
scas
adc
cmpsl
ja
das
lcall
mov
repz
push
inc
aad
repz
adc
mov
xor
adc
jp
cwtl
fxch
adc
ret
push
jo
or
test
adc
pop
imul
or
mov
dec
sbbb
stos
fdiv
inc
movaps
jo
lds
pop
dec
add
dec
mov
jae
les
pop
test
and
subl
movsb
mov
aad
aad
repnz
fdivl
sub
idivl
cmp
mov
sahf
pop
ret
cmpsl
pop
sbb
or
jecxz
fistl
jo
jo
lcall
inc
xchg
pandn
xor
add
addr16
mov
mov
ret
inc
int
icebp
loope
scas
cmp
fldl
xchg
mov
aad
adc
cmp
cmpsl
xchg
cli
mov
fwait
loope
test
sbb
dec
out
inc
clc
jnp
test
lret
stos
adc
cltd
pop
in
xchg
fldt
xchg
incb
push
out
imul
sbb
imull
push
cpuid
mov
adc
in
in
lret
sti
aaa
out
push
nop
loope
push
push
movsb
rorb
std
push
push
cli
cmp
jp
lea
stc
jnp
add
mov
and
shrl
jle
add
test
fisttpl
jp
call
nop
xchg
ror
push
sub
sarb
lds
dec
addr16
mov
scas
dec
insl
rclb
xchg
xchg
dec
xchg
xor
aaa
insl
and
xchg
adc
enter
pop
adc
fldl
int
lret
jl
pusha
sbb
icebp
push
in
ficoms
call
inc
fildll
adc
in
push
adc
and
push
inc
iret
lock
xchg
test
addr16
sti
adc
fbstp
int3
in
adc
sbb
lock
rcl
lret
or
jns
xor
stos
mov
jl
mov
push
mov
ds
jnp
and
pop
insb
aad
jno
push
aad
xchg
daa
ret
xchg
in
xchg
sbb
adc
fisubrs
sub
pop
adc
out
sbb
icebp
ss
out
pop
adc
shr
pop
sbb
test
add
ret
icebp
stc
loope
jnp
aad
pop
call
pop
or
rorl
outsl
add
or
cmpl
adc
daa
je
mov
shlb
dec
ljmp
adc
faddl
jge
daa
inc
pop
adc
cmp
and
sub
jae
xor
fists
leave
insb
outsl
sbb
lods
pop
sbb
inc
outsl
push
xchg
jno
rcll
mov
mov
negb
insl
inc
in
scas
stos
or
dec
sub
and
shlb
pop
fildll
scas
shll
jle
jle
xor
xor
adc
daa
xchg
xor
xor
test
lahf
mov
sbb
gs
xchg
mov
fstps
lcall
push
cmpsb
popf
fdivl
fnclex
ds
xchg
repz
or
and
stc
fcoms
rcll
imul
pop
push
cmp
mov
adc
mov
pop
cmp
mov
imul
addr16
xlat
jo
repz
sub
mov
xor
or
dec
imul
fildll
and
xor
xchg
sbb
cltd
iret
mov
xchg
pop
lock
out
outsb
fdivp
push
xlat
xchg
pop
fcomps
xchg
icebp
push
fistl
xchg
jns
lcall
fmull
scas
addl
aaa
sti
scas
sub
mov
fwait
push
repz
jmp
xlat
xchg
aaa
xchg
mov
pop
sbb
es
loop
pop
push
cld
sbb
rolb
lret
pusha
or
mov
push
push
or
or
enter
fmulp
inc
jecxz
mov
add
rolb
ja
lret
fbld
sub
aam
pop
loop
jns
jmp
shll
aaa
pop
rcll
and
adc
adc
mov
lret
fidivl
xchg
mov
pop
in
xor
shl
mov
xchg
into
inc
imul
js
pop
aam
loopne
frstor
xchg
push
aam
dec
arpl
dec
xor
jl
xor
mov
jb
movsb
ret
cmp
sub
adc
cs
daa
cwtl
push
adc
push
xchg
addr16
jne
inc
xlat
dec
jae
adc
xor
mov
xchg
cmpsl
inc
fnstenv
int
xchg
mov
dec
divl
test
outsb
mov
mov
mov
pusha
bound
insl
mov
ss
or
xchg
xchg
pop
xchg
mov
inc
push
aaa
fwait
leave
push
cmp
dec
cs
mov
xchg
dec
div
jnp
pop
std
arpl
push
or
es
cmpsb
xchg
mov
xchg
sti
repnz
je
bound
mov
xor
insb
sti
ficoml
ja
cli
jp
icebp
adc
js
push
pop
fisubl
push
cld
cmp
xchg
jge
lretw
mov
jno
ffree
hlt
pop
sbb
sbb
mov
xlat
sbb
in
cmc
inc
inc
mov
ss
push
xchg
dec
lahf
shll
fsubs
cmc
pop
ret
hlt
inc
insb
add
shl
dec
ja
sub
loope
fstl
repz
mov
clc
jno
in
push
cmpb
push
repz
xchg
cs
imul
incb
fldl
add
add
mov
xlat
stos
add
inc
insb
fsubs
nop
mov
xchg
lcall
cmpsl
icebp
scas
push
outsb
je
mov
insb
mov
jbe
jecxz
out
cmpsl
cli
ret
shll
fildl
jecxz
inc
shlb
cmp
cmc
mov
mov
into
ds
mov
je
add
jp
call
pop
notb
mov
and
mov
sbb
xchg
jo
test
jb
and
sub
jne
jnp
loop
sbb
push
pop
in
and
fimuls
movsb
cmp
xchg
xchg
push
fcomip
xchg
fdivp
rclb
mov
dec
in
sub
test
cwtl
sbbb
mov
mov
int
int3
adc
inc
mov
aam
stos
mov
divl
mov
jnp
xchg
stos
test
push
and
mov
cltd
movsl
push
testl
or
lea
daa
out
jbe
mov
aas
xchg
mov
rclb
hlt
dec
push
jge
adc
int3
fldcw
add
fbld
pushf
sahf
xchg
sub
adc
sti
fcompl
mov
inc
jg
push
cli
sarb
push
inc
add
rcr
mov
loopne
mov
pushf
mov
or
lock
mov
pop
ljmp
stc
inc
addr16
loope
enter
and
lock
dec
popa
and
mov
cmc
hlt
test
and
lcall
inc
inc
fstps
icebp
iret
push
adc
jmp
negb
xor
pop
enter
inc
push
push
push
pop
jae
loop
repz
mov
sti
pop
repnz
dec
icebp
pop
aad
mov
cmc
pop
out
push
xchg
std
sahf
pusha
sub
out
insl
or
les
lret
ss
pop
mov
pop
sbb
out
repz
mov
lret
inc
out
lds
mov
int
stc
fxch
adc
jno
fstpt
lahf
rcll
icebp
sbbl
rolb
inc
rcl
vunpckhps
rcll
adc
fnstenv
mov
mov
xchg
shlb
ljmp
pop
cmpsb
roll
pop
imul
notb
adc
in
lds
jl
cmc
push
rcl
fistl
push
mov
mov
mov
xor
notl
adc
sti
shlb
mov
mov
enter
jge
cmp
int
pop
jno
out
jmp
hlt
mov
mov
xor
es
mov
test
shlb
lods
cmp
mov
loop
dec
fwait
je
pop
push
add
shrl
xchg
xchg
inc
mov
outsl
pop
adc
jnp
or
repz
mov
icebp
aad
lret
insb
aaa
in
imul
cmpsb
jbe
mov
subb
out
sub
pop
cmpsl
sbb
in
in
sahf
mov
out
call
flds
inc
adc
inc
das
test
js
mov
xchg
inc
loopne
xor
test
ficompl
dec
push
adcl
inc
es
repz
clc
xchg
mov
jae
lods
fiadds
jns
mov
pop
jp
xor
and
jne
cmpsb
xchg
rclb
jno
enter
inc
mov
int
push
jbe
cmpsb
inc
add
cmp
jmp
popf
call
mov
jecxz
mov
pop
loopne
scas
insl
xchg
and
popf
mov
fisttpl
pop
mov
inc
std
push
mov
fidivl
lds
sbb
in
icebp
stc
mov
jmp
jb
hlt
fldt
dec
ds
adc
shr
fistpl
jbe
push
xor
and
stos
outsb
shrl
sbb
push
xchg
int
jge
xor
rclb
xor
rorl
js
sub
xchg
mov
push
jp
mov
sbb
xchg
adc
popa
scas
out
xchg
mov
iret
arpl
push
push
sub
adc
hlt
aad
iret
mov
cld
push
lods
push
into
xor
cli
sbb
leave
in
pop
int
into
pushf
xor
push
clc
cmpsl
sub
mov
push
nop
adc
push
dec
stos
push
shl
test
int
or
inc
jmp
lret
add
notb
je
ret
cld
mov
push
inc
xor
lcall
test
insb
sbb
inc
out
in
sti
pop
sti
in
sub
jb
dec
es
dec
inc
sub
inc
je
push
imull
sbb
pop
adc
arpl
leave
ljmp
test
jb
addr16
jle
fs
ret
sbb
fildl
xchg
aaa
test
jnp
dec
fisubrl
xchg
pop
cwtl
out
orl
bnd
js
std
sub
jns
in
mov
lcall
sarl
and
add
or
mov
adc
scas
or
xadd
test
xchg
xchg
aaa
mov
repz
jb
in
xchg
cmp
je
stos
aad
fadd
mov
xchg
clc
test
jo
xchg
mov
jmp
iret
mov
cli
cmp
sbb
mov
outsl
shrl
dec
aad
fsts
push
fnstsw
jg
mov
jns
lds
xchg
imul
push
adc
mov
fldt
sub
or
aas
sub
fstpl
add
cmp
mov
ljmp
push
inc
add
repz
xor
or
cmp
mov
mov
out
adc
inc
incb
jg
int3
ja
xor
jge
jg
jo
repnz
mov
lcall
testl
xchg
das
ret
in
pop
sbb
push
jbe
push
pusha
mov
push
add
mov
dec
push
mov
dec
pop
cmp
sub
iret
sub
fstpl
inc
xor
mov
insl
sbb
inc
out
cmc
push
daa
jbe
inc
shl
inc
in
aad
movsb
cltd
sar
ds
daa
out
and
pop
inc
fcomps
aad
sub
rclb
scas
push
xchg
push
or
fnsave
out
addr16
pop
int
scas
loopne
pop
repz
lods
jmp
jns
gs
lahf
push
mov
pop
gs
xchg
pop
inc
cltd
mov
fcmovnb
setl
js
fcomps
mov
call
pop
fwait
mov
inc
out
lahf
push
pop
mov
cmc
gs
jns
cltd
adc
dec
jge
adcl
mov
in
lods
pop
push
aas
insl
and
push
mov
and
inc
mov
inc
repnz
push
add
mov
mov
jmp
aas
gs
xchg
or
cmpsl
in
sbb
shl
out
push
fsubs
sub
aad
dec
jmp
pushf
xchg
repnz
inc
lcall
fisubl
call
push
fwait
loop
jmp
imul
sub
pop
jne
lret
not
aad
loopne
orl
repz
jnp
mov
mov
rcll
loop
loop
pop
nop
xor
rcrl
lahf
push
cmp
cmp
orb
rclb
cltd
sahf
lea
ret
rcl
mov
pop
inc
shlb
xchg
jns
out
mov
inc
div
movsl
mov
jb
cmp
adc
pop
cmpsl
xchg
pop
sbb
xchg
push
cwtl
fcmovu
jb
sbb
push
or
jg
scas
sbb
xor
xchg
push
int
in
mov
mov
xchg
shl
sub
sar
in
test
adc
mov
scas
fstpt
mov
iret
clc
sbb
xchg
pop
loopne
into
in
repz
push
out
ljmp
dec
mov
mov
adc
aad
insl
pop
mov
xchg
pop
imul
jge
jmp
daa
mov
shl
dec
mov
pop
mov
fisttps
inc
daa
xchg
fcomp
imul
sub
cmp
cmpsl
mov
cmc
sub
mov
aas
jge
arpl
cmp
stos
sbb
push
jl
fcmovb
add
cmpl
stos
jl
scas
sbb
add
mov
not
sbb
shrb
dec
sbb
dec
movsb
mov
ss
cmpsl
mov
iret
xor
adc
xchg
jge
scas
jecxz
aas
mov
jns
dec
ret
les
in
adc
shr
jne
ss
insb
testl
repz
mov
inc
jb
sub
jo
xchg
pop
jae
push
xchg
mov
ja
push
add
xlat
fists
sti
fsts
sub
aad
shl
inc
sbb
xchg
mov
jg
arpl
notb
jmp
push
mov
jnp
mov
int3
rorb
fwait
cmc
cmp
hlt
adc
pop
sahf
mov
mov
call
pop
cmpsb
iret
rcll
js
insl
fistps
rcr
pop
mov
push
leave
aad
mov
icebp
lds
repz
popa
loopne
shrl
sbb
inc
sti
cwtl
cld
sahf
stc
aad
lret
add
add
daa
push
push
in
pop
push
sub
pop
fsubrs
rorb
add
mov
and
enter
pop
jnp
aam
gs
loope
dec
popf
mov
out
cmpsl
sahf
or
jo
fcmovnbe
pusha
imul
sub
jecxz
mov
push
insb
sub
jmp
js
fs
je
mov
sub
mov
std
xchg
notb
aas
in
lods
cmp
mov
push
xchg
jne
xchg
and
aas
sub
fisubl
sub
inc
sahf
adc
xor
aaa
ret
insb
insb
imul
stos
shlb
mov
jo
leave
das
cld
inc
adc
or
cli
push
jge
adc
cmp
hlt
ja
lret
lahf
jge
push
scas
mov
cmp
or
push
mov
int3
cmp
xchg
mov
loop
pusha
les
shrl
sbb
push
jo
adc
or
movsb
xchg
and
inc
cmpsb
jno
push
movsl
shrl
sbb
adc
dec
fildll
lret
jb
xchg
jns
pop
pop
or
jmp
sub
sub
xorb
nop
xchg
ret
shll
inc
mov
stos
dec
dec
mov
fnstsw
stos
inc
xor
das
sub
sbb
ret
mov
pop
ss
cmp
aad
fsubl
fst
pop
cltd
jp
insb
pop
jp
scas
xchg
fptan
fcmovbe
lods
or
jne
jbe
ret
in
mov
xor
mov
inc
pop
or
imul
mov
xchg
rol
xchg
jno
jne
lods
mov
testl
cli
inc
dec
es
cmpsl
mov
lret
jae
loope
pop
push
push
push
mov
dec
lock
xlat
cmp
daa
sahf
lods
ss
jbe
scas
push
aam
xchg
sub
repnz
ret
jle
fidivs
pop
pop
xor
ret
sub
cmpsl
mov
movsl
inc
lcall
cmp
jbe
mov
push
cs
dec
ljmp
shll
lods
push
inc
movsb
jb
cmp
cmpsl
imul
repnz
popf
mov
call
cmc
rorb
adc
jl
xchg
push
ret
pop
or
cmc
jg
aad
popf
fdiv
push
mov
call
sub
fisttpl
ret
cli
test
mov
mov
fdivs
rcrb
icebp
push
lcall
or
lock
inc
sbb
fidivrs
adc
ja
push
jg
ret
sub
es
rcr
sub
inc
jmp
fstpt
cs
stos
ljmp
ret
fcompl
push
ja
inc
leave
cli
xlat
lcall
dec
push
popf
out
aas
call
jmp
push
push
xchg
push
push
pop
in
imul
sbbb
lds
pop
bound
lret
jno
push
cmc
shll
adc
frstor
xchg
es
icebp
inc
shll
outsb
or
lret
fnstsw
mov
xchg
lods
jne
xorb
in
xor
xchg
jecxz
shr
push
inc
loope
pop
lret
mov
in
mov
aas
insl
mov
es
pop
xchg
lods
ret
dec
push
test
push
sub
pop
test
shll
push
add
shlb
push
push
mov
lret
daa
inc
leave
adc
fdivrp
sbb
sub
hlt
cmp
and
and
fldt
nop
dec
adc
xchg
ss
add
cs
xor
push
xor
inc
pusha
fmull
sar
sub
mov
fsincos
lds
rcrb
push
xchg
mov
fisubl
mov
jmp
xchg
pop
dec
mov
insl
mov
or
mov
xchg
add
sbb
test
lret
lock
lds
mov
loope
je
inc
add
add
ja
mov
cld
adc
lods
push
insb
jmp
push
rcll
pop
xchg
je
pop
inc
daa
stos
push
xor
nop
xchg
mov
and
je
sbb
jp
ds
mov
jns
call
notb
mov
push
jle
push
fadds
popa
dec
imul
mov
pop
in
cs
les
or
push
decb
out
std
push
ret
not
inc
lea
jbe
stc
jg
test
jmp
inc
jae
insb
fstl
cmp
lods
cmp
adc
lds
clc
add
lahf
fisttpl
stos
xchg
cmp
arpl
inc
dec
hlt
sub
les
leave
dec
jno
sbb
mov
mov
daa
cmp
call
rcll
rorb
pop
push
xor
xor
ret
mov
dec
scas
or
incb
cmp
sahf
mov
lcall
mov
jl
lret
xchg
mov
dec
xlat
mov
xor
push
sub
xchg
in
stos
sbbl
gs
add
mov
inc
aaa
inc
mov
loop
inc
aas
mov
ljmp
cltd
cmpsl
rcr
outsb
xlat
xchg
fwait
mov
pop
das
stos
push
cmpsl
fldt
in
aam
fildl
mov
mov
out
icebp
xor
lcall
ret
mov
lock
pushf
out
xorb
imul
aam
sbb
jge
push
setns
push
aaa
out
fcmovnbe
pusha
popa
aam
push
data16
lcall
mov
jae
es
jle
call
hlt
rolb
in
loope
dec
pop
cmp
inc
xchg
mov
dec
out
scas
les
mov
sub
mov
mov
jae
push
das
dec
fs
pop
cmp
xchg
sbb
push
stos
push
pop
aam
lcall
sub
sub
xchg
cmp
pop
popa
mov
repnz
int
repnz
push
call
pop
ret
push
test
mov
mov
and
mov
xor
xor
cmp
jmp
mov
movsb
mov
sbb
jo
cmpb
nop
and
fcomi
and
mov
lea
jp
mov
mov
push
jmp
ficoml
es
push
xlat
aas
dec
sub
stc
push
push
fcomps
xchg
scas
cwtl
lods
sub
stos
ret
repz
test
xchg
sbb
in
scas
xorl
inc
aam
jg
dec
pop
push
das
leave
mov
insb
push
sub
jb
insl
in
push
into
icebp
jp
out
sbb
inc
add
fdivs
fisubs
aam
xlat
sbb
test
ds
jno
push
jge
subb
movsb
xchg
mov
xor
pop
pop
cmpsb
stos
push
mov
jnp
scas
xor
into
xor
jnp
pop
mov
mov
cmp
rcrb
push
or
flds
push
mov
mov
das
fildl
jno
xchg
adc
jmp
insl
add
sahf
aam
lods
inc
adc
xchg
cmc
testb
pop
test
or
push
push
sub
movsl
and
mull
mov
aad
jg
mov
cmpsl
addr16
xchg
jae
add
bound
xor
push
sub
aam
xlat
inc
or
inc
cmpsl
iret
dec
enter
mov
push
cmc
push
jo
insb
cld
jns
test
je
mov
lea
jno,pt
sti
adc
adc
scas
and
repz
fdiv
fwait
je
sbb
xchg
mov
jo
xlat
imul
cmpsl
cmpsb
outsl
sahf
aaa
inc
push
cmp
mov
ret
into
sub
lret
adc
test
and
fimuls
clc
and
inc
push
stos
mov
inc
jbe
mov
fdivs
lea
insb
mov
lret
pop
jb
dec
loopne
and
jl
fsts
push
mov
stc
jnp
xchg
xor
fcomps
mov
mov
rcr
jnp
movsl
in
pushf
mov
xchg
enter
add
mov
pop
inc
daa
inc
mov
xlat
push
sarb
icebp
testl
and
and
mov
lret
mov
mov
fidivl
dec
mov
mov
cmpsb
inc
adc
mov
adc
lret
inc
ljmp
inc
add
rcr
sbb
jb
dec
push
or
push
cmp
imull
mov
sti
inc
add
inc
test
and
or
rep
pop
jl
rorl
jno
xchg
lret
ret
pop
aad
lods
stos
push
imul
fidivl
add
out
or
fisttpll
xor
shl
xchg
insb
rclb
bnd
mov
pop
xchg
sbb
and
lock
sbb
js
es
xor
fwait
fs
push
jecxz
xchg
cmp
xor
xor
push
push
xor
xchg
outsl
xchg
shrb
bound
xlat
add
and
adc
subl
andl
push
adc
aaa
xchg
push
and
inc
dec
xor
and
lock
jmp
dec
in
aas
dec
push
sti
jnp
push
pop
aam
popa
add
fistpl
or
arpl
add
cwtl
cmpsl
mov
cli
movsl
popf
or
xorb
cmp
fildll
inc
xchg
out
xorb
inc
push
mov
xor
and
dec
shr
push
push
mov
rol
repz
sbb
push
insb
fldt
stos
or
mov
hlt
adcb
shl
dec
cmpl
inc
scas
je
or
rclb
bound
push
mov
rcr
jo
add
add
dec
fcoms
fisubs
lds
test
test
adc
adcl
mov
aad
js
cli
inc
add
into
inc
pushf
jg
popf
sarb
pop
les
lods
mov
aad
fcomi
cli
cmc
scas
jnp
fsts
fidivrs
lahf
icebp
mov
mov
fstpt
outsl
push
add
cmp
faddl
mov
mov
xor
dec
push
cmp
movsl
pusha
leave
lods
repz
jp
arpl
test
cwtl
jne
pop
repz
push
leave
aad
outsb
test
mov
in
and
ficompl
test
dec
or
js
test
add
adc
inc
jnp
negl
dec
mov
xor
test
adc
xor
mov
cmp
add
mov
inc
adc
insb
ret
ja
jg
fildl
inc
pop
or
mov
inc
rorl
inc
push
mov
lcall
jmp
lods
loope
xchg
push
adc
mov
std
adc
push
sti
aas
scas
add
mov
pop
out
loop
pusha
fsubl
es
jb
int
push
stc
fstpt
sti
mov
xchg
jge
sbb
clc
mov
ljmp
xchg
jecxz
ja
inc
mov
sbb
cltd
fs
cwtl
add
fwait
jnp
mov
xchg
es
or
xchg
jo
and
sbbb
jg
lcall
leave
hlt
push
mov
stos
shrl
and
mov
mov
mov
xchg
sbb
ds
insl
sti
adcl
sahf
xlat
xor
add
icebp
mov
cmpsl
cltd
push
out
mov
jp
mov
rolb
dec
sbb
mov
fdivrl
inc
cmp
xchg
cmpsl
loop
jns
insl
mov
add
and
and
ja
dec
jle
ljmp
gs
inc
filds
mov
loop
sbb
inc
lock
inc
in
mov
push
pop
pop
xchg
lahf
cmp
add
jl
inc
lea
fldcw
sbb
adcb
fldenv
push
mov
or
jp
xlat
lea
fiadds
fwait
pop
xchg
push
mov
dec
xchg
mov
and
sbb
inc
lods
pushf
lahf
cltd
inc
out
and
fcmove
andl
jl
fstpt
sbb
dec
mov
fildl
or
fiaddl
push
xlat
add
sbb
addb
add
aam
xchg
sbb
inc
sti
call
sbb
shrl
jns
dec
push
or
xlat
repz
pop
adcb
loopne
xchg
xor
add
sub
or
mov
jno
scas
mov
pop
repz
stos
rcrb
mov
inc
jge
ret
jl
adc
dec
scas
movsl
xor
scas
aas
scas
icebp
cld
adc
mov
lock
fstpl
cld
movsl
jg
pop
adc
scas
jmp
out
add
fsubl
and
push
inc
xchg
push
ret
jmp
stos
scas
pop
fcoms
dec
pop
stos
jmp
cmc
pop
fcoms
lret
rcrl
flds
shlb
pop
rolb
lahf
sahf
sub
in
pop
out
idivl
xchg
jno
insb
mov
dec
sub
inc
xchg
out
ljmp
sarb
icebp
stos
lret
cmp
push
mov
inc
cmpsb
xchg
pop
dec
adc
dec
imul
dec
aam
push
test
fsubs
xchg
popf
pop
movsb
shll
mov
es
fildll
dec
and
clc
add
test
push
insl
and
add
daa
shrl
rcrb
sub
push
xchg
std
imul
mov
mov
pop
iret
lahf
jne
pop
ret
hlt
cmp
faddl
lret
xchg
aam
push
aas
popf
and
rclb
ficoms
rclb
aad
add
add
jmp
aam
push
insb
lcall
fnstenv
add
jle
jo
mov
popa
push
dec
notb
and
pop
pushf
jae
push
fcmovb
and
lods
repnz
fwait
mov
ds
jecxz
xchg
scas
icebp
ss
imul
negb
jg
negl
pop
aad
out
xchg
fldl
cli
ret
add
inc
pop
mov
dec
mov
pop
insl
dec
xor
jae
test
jmp
dec
mov
xchg
inc
scas
fwait
add
popf
rorl
adc
popf
adc
lods
pop
mov
shl
xor
jnp
nop
inc
rolb
inc
jnp
cmc
rol
mov
inc
rorl
mov
cmc
fcmovne
pop
repz
push
mov
xorl
test
jae
pop
xchg
inc
jge
cli
in
insb
xchg
push
pop
add
jl
stc
mov
imul
cmp
inc
subl
fildl
jno
into
fnstcw
fwait
adc
push
mov
aad
cmpsl
mov
aam
cs
repnz
lahf
icebp
jae
icebp
dec
and
pop
sbb
push
lock
cmpsl
sarl
ds
xchg
jg
adc
call
cmpl
push
pop
dec
loope
loope
addb
aad
ret
je
add
subb
hlt
or
rcl
mov
cld
sbb
lea
in
xchg
jle
inc
xchg
or
sbb
pop
pop
ljmp
pop
pusha
jge
xor
xor
mov
inc
es
jmp
loop
stos
mov
cmpsl
pop
push
es
adc
in
shrb
notb
fldln2
mov
hlt
pop
cmp
arpl
cmpsl
add
and
aad
xor
pop
xor
add
lahf
stc
mov
sbb
fs
pop
push
jmp
inc
dec
mov
push
in
sub
lret
jbe
fsub
jnp
mov
test
cmpsl
gs
or
mov
pop
rcrb
push
popf
adc
insb
bnd
outsl
mov
push
icebp
mov
xchg
fcomip
stos
divb
into
ret
pop
jne
lea
adc
daa
mov
mov
loop
xchg
push
adc
sbb
mov
cmp
test
cmpsb
ret
rcr
icebp
push
shlb
mov
adc
daa
add
xchg
inc
xlat
fistpl
stos
adc
xlat
adc
mov
ret
es
fistl
xchg
ja
jle
clc
insb
inc
in
loope
pop
aad
push
pop
dec
fcmovu
fcmovb
dec
dec
pop
repnz
pop
rcr
inc
lahf
mov
push
leave
lahf
sub
ljmp
nop
pop
mul
push
pop
fstps
push
cmpsl
pusha
shrb
iret
cmpsl
push
cmpsb
rclb
push
push
int3
fwait
bound
mov
stos
and
pop
aad
ret
jnp
mov
sub
inc
out
rol
es
adc
cmp
clc
and
scas
push
outsl
mov
stos
xor
dec
push
mov
adc
xor
jg
add
pushf
out
pop
xchg
dec
fists
pushf
rcr
pop
xchg
mov
sahf
mov
sbb
sti
push
ret
push
inc
push
sub
fstpt
mov
mov
xchg
bound
cmpsl
push
fnsave
jg
ja
push
dec
leave
dec
leave
popfw
cmc
repnz
jg
mov
lret
cmpsl
mov
add
loope
nop
lret
push
dec
inc
repnz
jmp
fwait
mov
scas
es
in
inc
or
outsl
xchg
ljmp
sarl
jno
fscale
pop
cmp
xchg
or
push
stc
dec
adc
pop
hlt
stos
adc
ljmp
lcall
jmp
cld
ror
std
test
enter
xchg
cwtl
in
aas
out
adc
jl
jbe
jmp
shll
jnp
sarl
les
xlat
sub
dec
pop
in
xchg
aas
aam
xlat
das
dec
mov
in
pop
jmp
jmp
lahf
jno
xchg
push
inc
push
cli
ds
aam
inc
push
jne
es
aas
inc
push
and
push
and
clc
fidivs
add
mov
mov
inc
mov
pop
push
push
sub
rcl
and
inc
ljmp
fisubrs
fdivrl
shrl
call
loopne
shll
sbb
insb
fwait
push
imul
mov
cmc
in
dec
push
imul
lcall
dec
xor
xchg
lods
dec
nop
and
sbb
aad
leave
js
and
adc
inc
lock
fsqrt
lret
call
orl
in
cmpsb
cltd
pop
repnz
sar
enter
xchg
sub
pop
shll
je
lea
sbb
in
cmovg
cmpsl
lret
cmp
push
clc
ret
sarb
fnsave
pusha
mov
shlb
fnsave
icebp
cli
daa
xor
pop
mov
rcrl
int
push
mov
dec
cmpl
sti
add
lea
pop
xchg
lret
sti
xchg
lds
stos
idiv
hlt
lret
int
iret
cmp
fcomip
and
sbb
icebp
sbb
lret
jbe
fstpt
lock
pop
inc
cwtl
cmc
xchg
push
dec
int
out
xor
ret
pop
mov
pop
ja
inc
push
mov
das
xchg
sub
pop
mov
jb
ret
pop
pop
xchg
adc
push
imul
pop
sub
sub
cmpsl
icebp
sbb
mov
pop
add
popa
sub
cli
xchg
xor
sub
das
inc
pop
push
xchg
and
xlat
add
xlat
addl
xlat
pop
ja
inc
mov
stc
cmpsl
sub
xor
repnz
sbb
notl
or
mov
cmpsl
jp
mov
xchg
mov
jo
test
jp
mov
adc
xor
adc
sbb
adc
xchg
mov
out
mov
sar
cmpsb
sub
repnz
pop
lahf
loope
jnp
inc
repz
data16
insb
xchg
push
cs
fistpl
subl
aaa
mov
bound
push
push
sub
fdivs
cmpsl
stos
cmp
fcmovu
scas
popa
jg
adc
icebp
daa
lahf
mov
fisubrl
testl
xlat
jp
cmc
scas
and
test
vcvtss2sd
pop
aad
mov
out
cmpsl
xchg
mov
jmp
icebp
jecxz
xchg
or
into
xchg
cli
stc
xor
sub
dec
xorl
stc
cmpsl
lea
cmp
mov
cmc
rorl
pop
adc
adc
out
jno
lret
sbbl
sbb
ret
cmc
jae
jl
call
jmp
sub
sbb
pop
fildl
dec
jbe
test
icebp
scas
inc
or
dec
dec
fmull
outsb
fwait
sbb
es
sub
cwtl
iret
lock
adcb
inc
fst
pop
cltd
xchg
leave
mov
loop
dec
out
xchg
lock
int
std
xchg
cmc
mov
loop
dec
repz
mov
divb
mov
add
lods
lods
or
dec
mov
loopne
in
sbb
inc
int3
mov
cmc
popf
and
cmp
sbb
pop
xchg
sbb
clc
mov
mov
and
mov
les
inc
sti
adc
psrlw
sub
sbbl
mov
call
in
xor
xor
lock
push
pmulhw
aas
enter
loopne
lds
mov
cmp
mov
sub
ss
xor
cmpb
adc
lret
jmp
dec
pop
dec
jge
cmpsb
push
out
addr16
imul
es
aad
imul
sub
jns,pn
std
cwtl
pop
fcmovu
cmc
sbb
loopne
cmc
fnop
pop
pop
es
ret
sub
cmp
xor
mov
maxps
push
push
fcmovbe
rcll
sbb
push
icebp
aad
pop
aam
pop
jmp
test
push
sub
cmp
jne
cwtl
push
jg
imul
push
in
fistpl
cmp
cli
fcoms
mov
add
xor
mov
int3
push
push
insl
adc
repnz
frstor
aam
push
xchg
fidivl
int
out
icebp
mov
pop
lds
out
add
jbe
mov
push
mov
inc
clc
imul
sbb
mov
xlat
cmpsb
movsl
das
int
mov
cld
inc
test
jne
dec
mov
cmp
add
ja
ljmp
aad
inc
cmpsl
pop
mov
lock
inc
popa
pop
enter
xor
insl
xchg
inc
rol
mov
loop
fldt
out
nop
adc
sbb
inc
inc
jmp
into
fimull
movsl
cmpsl
jb
mov
icebp
mov
or
fwait
icebp
inc
adc
cmpsl
sti
inc
sub
ret
inc
aam
xchg
repnz
xchg
mov
repnz
pop
adc
add
leave
mov
mov
ret
out
or
mov
xlat
adcl
icebp
lcall
xchg
out
jb
fldt
inc
mov
es
dec
xchg
shll
jb
xchg
mov
fsts
dec
mov
dec
pusha
lods
ror
pop
out
test
test
inc
and
frstor
in
sarl
pop
pop
inc
pop
ret
mov
xchg
fists
lock
mov
fwait
aaa
dec
dec
dec
hlt
loopne
ja
jecxz
xor
aad
sbb
fnclex
aam
pop
outsb
fistps
adc
jns
push
jp
adc
into
mov
fstl
aad
leave
aas
in
iret
xlat
ret
cmp
xor
mov
or
xlat
icebp
push
imul
fdiv
outsl
ds
adc
hlt
out
sti
mov
push
pushl
or
mov
inc
adc
sbb
sbb
pop
sub
inc
idivb
cmp
sahf
sub
mov
adc
pop
push
xchg
shl
add
testb
xlat
imul
cs
sbb
sub
lds
jns
stc
jmp
add
cmp
cmp
pop
push
or
sbb
push
jmp
cmp
sbb
fwait
cwtl
xchg
dec
icebp
inc
inc
mov
cmp
mov
js
stc
xchg
push
xorl
shl
dec
lds
fisubs
out
les
sub
xchg
push
sub
mov
dec
pop
sub
push
pop
enter
repz
push
iret
xor
ret
sub
shr
sbb
jne
repnz
push
push
fldcw
ficomps
mov
xchg
repz
and
iret
xchg
repnz
fucomi
xchg
std
and
push
lcall
push
rcrb
ret
pop
adc
mov
cmp
fprem1
fnstsw
push
and
jle
pop
es
shrb
popf
pop
inc
daa
gs
repnz
push
pop
adc
jb
pop
es
loope
fists
loop
stos
dec
xchg
mov
push
lret
push
cmp
incl
ficoms
hlt
mov
jge
repnz
pop
sbb
sbbb
call
es
into
repz
add
stc
mov
adc
aad
mov
ret
pop
stos
in
idivl
add
adc
idivl
jmp
fistpl
pop
rclb
ss
imul
repnz
idivb
mov
push
insb
test
sbb
jmp
icebp
xchg
mov
sub
setbe
rcr
push
es
jp
inc
jmp
int
aad
dec
out
mov
inc
test
jp
cmpsl
add
nop
ja
cmpsb
xchg
repnz
mov
popf
adc
fmulp
fadd
inc
call
loop
lahf
pop
push
jno
xchg
fcmovu
mov
imul
push
fcmovb
adc
inc
lcall
ficoms
jle
jno
push
js
sbbl
dec
sbb
inc
sbb
rol
adc
shlb
std
mov
rclb
dec
mov
ret
adc
arpl
sub
fstpt
aas
stc
int
pop
fldcw
inc
lds
sub
push
ljmp
test
mov
popf
cmp
pop
je,pn
mov
adc
pop
cwtl
mov
or
xor
xor
jecxz
gs
roll
mov
dec
adc
iret
rorl
aad
stc
out
out
sub
mov
mov
push
pop
push
mov
roll
ficoml
fsubrl
adc
ret
pop
jno
or
neg
adc
inc
mov
cmp
into
mov
sarl
fdecstp
aad
pop
fcmovne
loopne
out
ffreep
loopne
ret
jae
inc
repz
sub
div
mul
lds
repz
ret
ret
leave
nop
repz
lods
ja
jae
pop
ffreep
ror
repz
mov
ja
aad
adc
cli
push
jnp
adc
lret
mov
push
outsb
adcl
clc
cmpsl
ja
cmp
cli
push
leave
jg
jmp
pop
jns
ljmp
loope
rcl
xlat
pop
rcl
lret
xor
xchg
out
icebp
xchg
xchg
cmp
jl
pop
cmpsl
repnz
repz
jg
mov
push
cli
out
jns
jnp
lods
pop
leave
ret
sbb
shrl
shl
icebp
shr
icebp
subb
aaa
mov
sbb
mov
mov
sub
fstpt
mov
cld
cmpsl
push
mov
cmpsl
pop
adc
xchg
mov
mov
repnz
rorl
mov
rolb
lods
mov
test
mov
loope
push
cld
out
lret
repz
cmpsl
cmpsl
mov
mov
cmp
jp
stc
push
and
out
inc
es
nop
fst
repz
adc
rcl
rcl
fcmovbe
jne
sbb
lcall
and
and
pop
int3
push
pop
popa
lods
push
xor
inc
sbb
out
fisttpl
xchg
insl
arpl
push
ret
icebp
fcmovnbe
sti
push
pop
fwait
xlat
adc
push
push
clc
es
ret
adc
repz
pop
stos
imul
push
out
fcmovnb
in
in
xlat
mov
lret
inc
les
fisttps
imul
repz
adc
xchg
dec
outsb
movl
cmp
sahf
shrb
clc
jg
cmp
or
addl
repnz
fistpl
xchg
shll
cs
daa
inc
xchg
nop
fmull
icebp
repnz
mov
fcmovb
nop
jbe
fs
ficoms
and
addr16
cltd
dec
pop
cmp
mov
test
push
and
shrb
fiaddl
ficoml
and
insl
sub
add
test
sti
cli
test
mov
hlt
jp
adc
aad
jno
repnz
inc
push
lods
int
sub
inc
add
lea
ficoms
jno
push
aad
lahf
cmpsb
call
push
mov
fstpt
test
outsb
mov
insl
std
test
and
movsb
fistpl
xor
rcr
aaa
pop
mov
movsb
jb
out
shlb
adc
mov
ficoml
fadds
fsubrl
out
add
mov
dec
push
jae
dec
repnz
xchg
sbb
adc
test
xlat
pop
adc
mov
loope
fisubrl
adc
aaa
fcmovbe
jmp
push
or
sub
cmpsl
ss
ret
push
push
test
mov
xor
rcr
adc
andb
sbb
inc
mov
aad
cli
and
clc
addr16
mov
mov
sar
adc
sahf
pop
cmpsb
or
inc
icebp
add
xchg
inc
xor
cmpsl
insl
pushf
push
adc
pop
xor
xlat
push
scas
xchg
cmp
mov
adc
mov
xorl
inc
negb
test
addl
mov
call
inc
subl
clc
aas
idiv
push
popa
jmp
and
fstl
mov
dec
iret
cld
loopne
aad
divl
pop
outsb
lds
leave
iret
scas
lret
push
popa
decb
fwait
pushf
lret
lret
pop
push
cli
jmp
xor
imul
les
mov
push
addl
rcrb
sbb
fimull
aad
movsb
inc
push
xchg
cmc
add
lret
mov
jp
pop
dec
jns
dec
ret
xchg
bnd
nop
shll
into
rcll
addr16
cmova
or
repnz
cli
dec
xor
ja
clc
icebp
repz
stos
sub
push
js
cld
adc
not
scas
push
cmpsl
cli
out
xchg
mov
lret
jmp
sub
mov
and
mov
jae
iret
inc
cmpsb
mov
ret
mov
daa
mov
mov
dec
mov
scas
movsl
or
or
adc
fistpl
repnz
repnz
repz
lret
repnz
mov
sbb
stos
ret
pusha
pop
mov
xchg
lahf
std
or
test
dec
xchg
cmpsl
cmpsl
xchg
xchg
or
in
jmp
or
test
cmp
daa
test
mov
rorl
xchg
mov
or
fiadds
cmp
imull
jg
jmp
add
negb
jp
add
inc
ficompl
lret
loope
and
sarl
inc
jg
filds
test
push
cmp
fstp
mov
inc
dec
outsb
icebp
xchg
repnz
cli
gs
inc
les
pop
dec
lcall
push
jmp
hlt
lds
xchg
mov
mov
add
inc
scas
pop
jno
ds
lcall
cmpb
daa
or
lcall
lods
stos
push
outsl
fistpl
add
adc
push
pop
push
xchg
cs
ret
push
insl
dec
hlt
xor
rcl
add
mov
xchg
jp
cmp
and
cltd
aaa
out
sbb
cmp
jge
inc
cmovs
ficoml
sbb
pop
fstpl
mov
popa
clc
mov
imul
xchg
es
rorb
add
daa
call
jmp
dec
pmovmskb
imul
aad
loop
jle
pop
mov
or
fldl
es
add
jns
mov
ret
xchg
and
in
ja
or
mov
in
mov
cmpsl
xchg
std
or
popf
pop
pop
fnstsw
adc
xor
ss
es
lcall
clc
jmp
push
sbb
push
scas
pop
stc
mov
cld
sub
jb
aam
xor
daa
ds
inc
jo
roll
mov
test
mov
mov
mov
out
xchg
or
js
push
xchg
mov
es
out
out
xor
push
push
pop
sub
mov
dec
or
pop
fildll
inc
jb
ja
stos
ret
rcl
push
div
inc
pop
mov
xor
aas
insb
cli
cltd
adc
movsl
mov
jnp
xchg
sbb
xor
fbstp
mov
fcmovnbe
xchg
adc
fdiv
xchg
push
mov
imul
sbb
shlb
cmp
xlat
xor
aam
mov
push
pop
frstor
xor
pop
adc
scas
adc
sub
rolb
call
shr
cmpsl
gs
jno
push
fst
out
lahf
xor
cmp
subl
insb
call
stos
xorb
jae
mov
inc
pop
inc
daa
push
les
stos
sti
mov
dec
sub
push
inc
xchg
mov
cmpsl
mov
rclb
jne
cmpsl
or
inc
xor
popa
cltd
sahf
pop
repnz
aaa
jne
ljmp
mov
test
and
push
fdivr
push
popa
fcmovnb
cmpsw
repz
mov
cmpsl
and
mov
pop
fisttpl
popa
sub
mov
adc
xchg
or
fstps
dec
aas
lea
jns
mov
xchg
sub
pop
add
scas
fsts
sub
cmp
xchg
jmp
xchg
dec
inc
add
outsl
outsb
testb
js
cmpsl
pop
daa
adc
cmp
stos
push
jbe
mov
add
jmp
push
ja
pop
jb
push
cld
adc
lea
fidivl
stc
loop
popf
mov
rcll
pop
cmp
aaa
es
pop
ret
mov
inc
movzbl
mov
fcmovu
inc
stc
pushf
mov
lret
and
fcmove
push
mov
mov
mov
arpl
push
ret
lea
rorb
movsb
dec
daa
insl
sbb
in
imull
loope
push
inc
fidivl
rcrl
popf
xor
fiaddl
jne
sbb
xchg
pop
mov
js
xor
out
cli
xchg
pushf
lcall
pop
ret
jno
sub
fs
sub
cmpsl
cmpsb
sub
aad
scas
push
pop
imul
test
jae,pt
imul
shll
xchg
fwait
test
fbstp
mov
pop
fldenv
lods
cli
cmp
pushf
out
pop
js
pop
pop
fimull
mov
into
push
cli
imul
jne
addr16
orb
xchg
push
jo
push
push
mov
mov
cmovae
negl
push
pop
sbbl
jns
repnz
in
fidivrl
add
out
and
rorl
mov
popa
mov
push
cmpsl
adc
mov
add
pop
push
xchg
les
jg
fsts
jnp
in
in
pop
andb
aad
adc
fbld
cli
fdivrs
jmp
rcl
lret
insl
jg
mov
inc
mov
shr
es
mov
addr16
ljmp
mov
push
cmp
mov
cld
inc
test
aas
sub
roll
lods
xchg
xor
shlb
icebp
cmpsb
into
fs
jmp
loopne
popf
inc
fwait
ret
imul
je
push
xchg
pop
cmp
jp
imul
pushf
sbb
fstpl
push
mov
xlat
mov
repz
neg
dec
push
jbe
push
mov
mov
inc
sub
sub
ret
mov
repnz
loop
pushf
cld
fldt
cmp
iret
in
add
pop
aam
xchg
fstl
stos
jle
or
in
inc
inc
loopne
js
divb
sub
mov
es
mov
insb
pop
xchg
xlat
sbb
repnz
pop
ret
sub
and
dec
test
es
dec
jge
push
sub
fld
pop
dec
push
rorb
pop
xor
xchg
jl
dec
aaa
push
lds
pushl
ret
dec
mov
js
dec
outsb
dec
inc
adc
ljmp
test
imul
insl
xor
jge
ret
adc
push
decb
xchg
loop
flds
xchg
aam
imull
lcall
sub
cmp
xchg
cmpsb
mov
inc
cmp
sbb
add
andl
not
mov
mov
sti
ficoml
xchg
aas
stos
shrb
lds
cmp
lcall
sbb
test
mov
xchg
jb
call
mov
fucom
dec
clc
or
inc
stos
adc
xchg
xchg
imulb
push
push
inc
mov
jbe
inc
sbb
or
idivl
fcmovnb
adc
xchg
bnd
jle
js
hlt
dec
xchg
sti
jb
imul
data16
shrb
daa
fldl
cmpsl
in
fwait
adcl
les
push
dec
movsl
mov
icebp
push
push
pop
ss
push
rorl
add
xchg
pop
cmc
ljmp
lahf
xchg
repz
sub
in
mov
call
nop
js
xor
inc
repz
test
mov
mov
daa
pop
dec
cli
sbb
mov
es
sbb
out
inc
and
jne
ret
and
cmpsb
and
sbb
fdiv
sub
mov
rcrl
sbb
cwtl
test
lcall
cs
sahf
xchg
pop
ss
imul
or
or
mov
jmp
jo
sarb
or
jle
outsb
pop
ret
adc
cmp
pop
xchg
imul
mov
arpl
xor
add
les
jl
and
pop
lods
call
inc
out
mov
icebp
inc
loopne
aad
sub
out
mov
push
cmp
and
push
testl
stos
xchg
addr16
mov
clc
fisubl
es
inc
clc
dec
pop
js
lock
inc
enter
mov
jge
sahf
or
sbb
xchg
fcmovbe
notl
jno
shrl
aaa
loop
adc
sti
ss
sbb
imull
int3
lret
repz
jbe
push
iret
pop
bnd
movsb
inc
push
scas
leave
jle
test
or
fwait
pop
int3
push
test
pop
fisubl
outsl
scas
mov
daa
loop
sbb
notb
repnz
push
call
ret
push
testb
jl
xchg
repnz
mov
add
xchg
outsb
ret
test
jno
testb
das
in
add
xlat
pop
ficompl
ret
xchg
jecxz
repnz
push
jmp
out
xchg
pushf
sarb
inc
xchg
fisttpl
repnz
shll
push
insb
fbstp
xorl
dec
les
jge
pop
jne
add
ret
mov
jmp
and
mov
jmp
lock
mov
xor
xor
mov
es
test
mov
insb
jno
mov
imul
or
ret
lds
mov
cli
pop
aad
jmp
rcl
lods
out
out
cmp
fidivrl
repnz
dec
jnp
sub
push
lcall
out
jne
xchg
sahf
fildl
xchg
pop
sbb
add
daa
clc
insb
cltd
lock
sbb
xchg
jae
xchg
pop
out
icebp
xchg
in
aad
jmp
push
pop
jbe
jmp
aaa
push
cs
xor
push
repz
inc
sub
sbb
fwait
test
push
insb
das
sbbl
pushf
lcall
fildl
orb
jge
xchg
repnz
fiaddl
sti
bound
inc
adc
or
jle
dec
sbb
push
xchg
loop
pop
mov
add
mov
mov
push
scas
repz
outsl
mov
leave
xchg
imul
sbb
mov
mov
jmp
popl
or
xchg
push
insl
sub
sbb
sahf
or
cmp
ss
shl
repz
in
imul
dec
push
cmp
sahf
sbb
xchg
pop
adc
cli
fnstcw
fldenv
ret
fldenv
fidivrs
sti
jne
sub
xlat
fldl
push
mov
mov
xchg
out
mov
cmpsl
lea
rcl
mov
cmp
or
rcll
mov
int3
lods
mov
push
mov
fsubrs
adc
ret
inc
xor
cli
add
mov
call
jl
fdivrl
inc
jne
cmp
push
lret
fistpll
sub
flds
ret
inc
push
xchg
bnd
jbe
ret
jecxz
test
adc
dec
xchg
sbb
shl
adc
inc
imul
xor
xchg
mov
dec
jle
pop
push
stos
cmp
pusha
sar
cmpsl
outsb
popa
or
cmpsb
mov
push
inc
jp
scas
xchg
pop
out
fbld
in
fdiv
addl
out
pop
pop
mov
ret
xchg
pop
pop
mov
ljmp
dec
pop
mov
xlat
lret
out
jnp
push
xlat
iret
out
jnp
push
xlat
repz
jnp
push
shl
out
pop
ljmp
pop
xchg
jb
jmp
out
lea
lds
out
popf
pop
adc
jmp
popf
fistpll
rclb
imul
mov
stos
fldenv
movsl
push
in
xchg
sahf
or
in
fadds
jle
push
jl
mov
and
mov
pop
movsl
dec
sub
int3
scas
das
lods
rcrb
outsl
jmp
fcoms
stos
add
cld
push
sbb
imul
xchg
ds
cmp
aaa
pop
fadd
fistpl
pop
pop
xchg
jnp
cli
push
mov
pop
into
pop
icebp
adc
xchg
inc
sti
xor
adc
add
mov
fstps
xchg
out
repnz
fildll
xlat
or
bound
pop
jns
fisubl
movsl
pop
out
xor
negl
pop
lods
jo
xchg
scas
rol
fneni(8087
pop
cmpsl
sti
adc
repz
pop
icebp
mov
loop
xchg
xor
in
pop
add
mov
pop
push
inc
fidivrl
cltd
fmuls
gs
fistps
or
icebp
pop
insb
pop
sub
adcb
aam
inc
scas
pop
outsb
lock
push
inc
xchg
fistl
addr16
mov
add
pop
aam
cmc
jmp
leave
sub
add
frstpm(287
test
shlb
mov
aam
sbb
pop
flds
sti
xor
jl
inc
pop
scas
sub
testb
pop
xchg
mov
pop
movsb
lret
xchg
push
clc
inc
popa
push
sub
and
push
aam
imul
lock
mov
ret
inc
js
sti
paddq
pop
aam
jmp
adc
popf
aam
inc
xchg
popa
ficoml
fwait
xchg
xchg
push
jge
inc
push
scas
and
rclb
loop
push
pop
xchg
mov
pop
mov
xchg
arpl
inc
jae
in
add
push
aam
icebp
jmp
mov
lahf
jno
out
shr
popa
ljmp
fcomip
xchg
mov
and
leave
stos
icebp
fnsave
in
pop
inc
xchg
xchg
jp
arpl
lret
je
and
fs
push
jb
pusha
ljmp
pop
xchg
sti
ljmp
pusha
jns
and
fnsave
pop
popa
push
clc
addr16
in
xchg
ret
and
jns
in
jmp
mov
xchg
fcoml
xchg
fcomip
sti
dec
inc
fs
cltd
and
imul
inc
push
xchg
leave
je
sti
cmp
mov
fsqrt
arpl
mov
dec
fwait
mov
bnd
imul
sbb
jmp
fdivp
testl
add
sbb
addl
rcr
orl
leave
sub
inc
shr
stc
scas
fmul
add
inc
jmp
stc
stc
jo
inc
sub
sti
add
out
out
sbb
inc
stc
mov
scas
sar
or
mov
decl
fsub
jne
std
movsb
cmpsl
std
imul
lcall
jecxz
std
push
fwait
mov
jecxz
mov
repnz
jecxz
repnz
mov
jecxz
call
dec
into
aam
or
xchg
stc
pop
fwait
test
adc
addr16
movb
cmp
xor
pop
inc
push
rcrl
stc
jecxz
jecxz
mov
cmpsl
loope
xchg
mov
mov
test
cmpsl
jecxz
lods
lret
or
sub
inc
cmp
mov
xor
cli
in
push
fldt
sub
loop
ret
add
mov
add
daa
jl
lea
popf
test
ret
fldt
inc
in
fldcw
fwait
cmp
xchg
xchg
xor
xlat
pop
pop
xor
mov
inc
aaa
xlat
icebp
std
inc
sub
jmp
fdiv
xchg
inc
pop
stos
mov
adc
loope
ret
mov
xor
push
dec
fneni(8087
cmpsl
insl
adc
outsl
lds
aas
fcmovbe
xchg
inc
stc
repnz
mov
add
jg
inc
mov
cmp
adc
cmp
jnp
xlat
push
xchg
repnz
xchg
fwait
call
out
inc
xchg
inc
jg
xlat
jge
mov
into
pop
aas
push
sub
push
inc
sbbl
mov
push
mov
stc
repnz
xlat
or
test
in
dec
pop
fildl
icebp
arpl
inc
fidivrs
aas
sar
aad
pop
push
fists
icebp
push
bound
cmp
repz
jo
sub
push
adc
repz
mov
add
cli
insb
add
cmc
fprem1
das
sti
addb
cwtl
rcll
loop
fimull
jbe
pusha
icebp
add
lcall
and
mov
and
cmpb
cmc
movsl
jl
xor
mov
or
ficoml
xor
jnp
stos
hlt
aad
xchg
mov
stos
xchg
mov
fidivrl
push
cmpsl
jnp
mov
iret
add
push
cmp
and
push
fld
xchg
adc
jne
mov
jbe
dec
inc
jne
les
repz
inc
jecxz
inc
call
or
lea
push
pop
lock
aas
dec
sub
pop
into
loope
mov
aad
cmpsl
mov
xorl
das
xchg
sahf
stos
push
add
sub
dec
fidivl
mov
in
and
ret
and
xlat
mov
push
mov
or
push
xchg
lcall
cmp
ret
insb
icebp
jmp
dec
dec
daa
pop
mov
scas
xchg
jb
dec
push
mov
add
repnz
sub
mov
fidivrl
jmp
addl
dec
inc
loope
shll
cltd
inc
repz
js
jp,pn
call
loopne
mov
cmpsl
js
inc
sti
adcl
icebp
repz
sti
andl
dec
in
sbb
in
cli
insl
aam
pop
mov
stos
stos
icebp
popl
test
lds
shl
cmc
xchg
insb
mov
inc
mov
and
add
xor
cli
insl
and
and
fildl
dec
sub
xchg
jno
sub
inc
or
test
mov
testl
test
mov
aas
mov
fisttps
ror
fimull
mov
inc
repnz
cli
jnp
sti
test
loop
es
push
cli
mov
insb
push
cmp
aam
cmpsl
fcoml
shll
aad
int
sub
push
push
xchg
push
jne
xchg
cmp
mov
out
dec
xor
push
mov
xor
sub
stos
ficoml
push
sub
jns
pop
pop
shlb
push
clc
cmpsl
call
fstl
mov
test
lcall
fwait
insl
cltd
stos
sbb
mov
cmc
and
xorl
stc
aam
jp
cmc
into
fdivl
or
and
and
xlat
shlb
dec
aas
fstpt
fs
sarb
xchg
cmpsl
popf
jmp
or
dec
add
and
cmp
mov
pop
inc
push
sbb
cmpsl
cmpsl
mov
dec
test
and
push
add
xlat
testl
aam
jo
hlt
fxch
sub
lcall
xor
pop
cmpsl
mov
or
leave
fdivrl
rcll
lods
aam
in
push
mov
stos
sub
jge
lcall
sahf
aad
jg
inc
cmp
cmc
xchg
sbb
sub
hlt
xlat
mov
in
into
test
sarb
pop
dec
and
xor
ret
or
adc
push
into
and
mov
sbb
push
jbe
mov
push
mov
stos
mov
xlat
jae
daa
inc
xchg
add
stos
pushf
test
push
push
lods
call
xlat
fildl
dec
push
xor
push
push
mov
dec
aas
push
xor
sub
stos
pop
popa
pop
lret
scas
repnz
jo
ret
rcl
push
mov
cmpsb
rcll
pop
mov
not
shrb
inc
pop
call
test
mov
lods
xlat
orl
daa
push
mov
jo
dec
icebp
fadds
out
adc
repnz
mov
addr16
insb
adc
inc
mov
pop
dec
test
les
das
jg
rcrl
jl
mov
lock
imul
shll
ret
or
lahf
mov
aad
mov
fiadds
bound
fistpl
dec
pop
je
jle
inc
add
fnstcw
inc
mov
into
aam
cmpsb
fcmove
cmpsb
mov
xor
xor
push
cmp
leave
inc
and
mov
adc
push
out
jp
cmp
sub
mov
sti
jl
xchg
jge
or
jle
lods
sub
leave
dec
pop
rol
dec
sbbl
push
mov
cmp
lahf
subl
pop
rolb
test
sti
scas
lds
sbb
mov
push
mov
xchg
inc
mov
mov
int3
sub
stos
inc
ljmp
push
cmp
push
fcmovnu
adc
mov
mov
pop
rcrl
clc
mov
je
adc
scas
rclb
inc
or
inc
sti
rclb
hlt
ds
inc
fistl
test
dec
in
into
test
pop
mov
jle
lods
or
maxps
push
in
in
enter
xor
flds
and
lods
cmp
xlat
push
out
sti
test
fidivl
add
mov
sub
xchg
add
mov
clc
jecxz
in
in
pusha
jmp
hlt
xchg
inc
inc
jne
stos
loope
sub
mov
jno
xchg
jge
add
mov
pop
adc
jge
jmp
lods
inc
add
test
pop
push
lock
dec
repnz
push
bound
push
jl
mov
cmp
jns
jmp
xchg
cmp
jmp
or
ja
and
out
jg
mov
mov
jb
imul
jmp
test
in
inc
xchg
movsl
cmpsl
movsb
hlt
push
arpl
loope
and
fwait
mov
add
mov
in
rcrl
rorl
or
sub
fcom
push
adc
fldt
dec
add
xchg
xor
int
xchg
inc
fisttpll
loop
sub
fildl
jecxz
fs
addr16
pop
sbb
jo
inc
mov
out
push
cld
sub
fwait
jae
and
dec
mov
adc
mov
sbb
outsl
mov
mov
mov
pop
rcr
cli
std
std
gs
jbe
mov
je
inc
orb
and
leave
fsubs
nop
icebp
aad
cs
or
dec
cmc
add
fcmovnb
lods
push
mov
jbe
in
xor
cmp
andl
into
fcoml
pop
xchg
dec
aad
fistps
dec
shlb
movlhps
xor
adc
push
in
js
push
rorl
stos
repz
cmp
ret
xchg
dec
outsb
out
xor
loop
cmpsl
dec
sbb
mov
mov
adcb
dec
mov
jecxz
sbbb
movsl
sub
xor
dec
nop
add
loop
idivl
inc
mov
add
pop
shrb
mov
movzbl
and
andl
hlt
push
adc
popf
dec
in
jne
inc
outsb
lret
fdivrs
shrb
je
inc
clc
mov
cmpsb
int3
and
push
aad
out
ja
add
dec
adc
mov
jb
adc
loop
mov
xchg
test
dec
fwait
rcrl
push
mov
sbb
xor
jle
mov
outsb
shl
pop
aad
popf
divb
xchg
in
inc
ret
mov
loop
mov
jle
ret
sbb
sti
pop
fwait
sbb
cld
dec
repz
mov
jno
inc
popa
inc
inc
mov
outsb
jae
jle
mov
sub
shrl
fcompl
lods
outsl
pop
out
leave
xlat
rcrb
xlat
jo
fcmove
xlat
inc
lret
aad
add
or
cld
pop
mov
fsubr
ret
inc
aad
lret
jp
mov
adc
fs
loopne
arpl
lcall
push
ret
push
push
test
out
loop
stc
nop
fists
add
ret
pushf
mov
jl
lock
outsb
cmp
cmc
xlat
push
rcrb
cltd
push
ficoml
inc
daa
leave
xlat
push
lods
outsb
loope
leave
aad
test
mov
jo
add
xchg
push
imul
addr16
dec
lcall
push
dec
dec
mull
cmp
xor
cmp
subl
aad
adc
mov
xchg
jecxz
pop
sbb
mov
icebp
int
fst
pop
addr16
xlat
ja
sbb
loopne
aad
negb
sti
fst
push
loop
imul
push
push
lods
mov
push
jmp
loope
pop
pushl
repnz
fstps
inc
inc
lret
icebp
arpl
fwait
aad
test
leave
xchg
gs
orl
or
aad
and
jns
jp
int3
pop
in
jl
ret
lahf
rorl
fistl
xor
ret
out
bound
dec
int
dec
adc
xchg
mov
aas
hlt
xchg
popf
sbb
pop
or
stos
pop
sub
shl
dec
incl
pop
fbld
test
fadd
faddl
push
mov
arpl
push
jecxz
adc
xchg
shl
nop
dec
aad
xchg
mov
lods
adcb
adc
hlt
shl
in
or
ret
daa
lahf
cld
int
dec
das
ficompl
addr16
push
mov
iret
jae
dec
push
rorl
pop
mov
adc
xor
jne
dec
inc
pop
mov
ja
jae
loope
push
popf
inc
insl
pushl
push
cltd
sbb
icebp
enter
lret
mov
push
dec
arpl
lock
imul
aad
adc
repz
jmp
in
ss
in
lock
mov
int
enter
add
jb
mov
popa
pop
dec
xchg
xlat
adc
scas
sub
shrl
cli
push
pop
push
jb
dec
pushf
mov
cmpb
aas
leave
int3
sbb
or
testl
and
push
ljmp
cwtl
xor
mov
lret
xchg
push
xchg
clc
mov
lret
mov
ss
iret
fistl
jne
add
int3
xchg
in
mov
adc
adc
neg
mov
test
dec
mov
sbb
fimuls
sbb
jno
pop
lret
mov
pcmpeqb
ret
pop
lds
inc
sti
jno
cmp
andb
fcomps
dec
mov
icebp
mov
ret
add
xor
xchg
fistpl
out
inc
jae
mov
inc
int
cli
lahf
in
cmp
ja
cli
mov
push
notl
push
xchg
dec
dec
ret
add
loopne
gs
loop
fwait
lret
fwait
popf
test
add
test
pop
lcall
sarb
push
pop
ljmp
in
push
mov
adc
xchg
in
into
in
pop
xchg
gs
jle
mov
cmp
xor
xacquire
fldt
lret
fisttps
adc
adc
test
push
lea
sub
push
stc
fcmovnbe
xchg
push
daa
repz
jmp
div
imul
and
fimull
xchg
data16
icebp
dec
arpl
repz
mov
popa
sub
push
xlat
ss
mov
inc
sub
jae
mov
cld
inc
push
aad
xchg
gs
sbb
repz
imul
loopne
ficompl
or
xchg
lods
outsb
xor
cmp
push
mov
and
fdivl
aaa
dec
das
stc
in
pop
push
lret
push
mov
mov
fdivs
xchg
loopw
or
pop
cli
orl
call
dec
sarb
pop
int
pop
ss
lret
iret
mov
dec
mov
int
mov
adc
lock
rcr
mov
dec
ljmp
js
rcl
adc
leave
aaa
or
rorb
jecxz
xor
dec
cmp
loop
idivl
or
mov
rorl
out
int3
sahf
sbb
dec
cli
sbb
lret
subb
cmp
xchg
sbb
and
cmpsb
xchg
xchg
dec
cmc
sahf
or
xor
sub
fiaddl
xchg
out
xchg
mov
icebp
pop
outsb
push
pop
sbb
sbb
testl
pop
sti
pushf
adc
fs
out
lock
adc
in
stos
push
into
orl
popf
sbbl
pop
dec
inc
fmuls
mov
ror
fcmovnb
lret
incb
mul
sti
jl
pop
sti
insl
in
scas
icebp
xchg
sbbl
pop
dec
scas
fs
cmpsb
xor
adc
push
jge
xchg
and
loopne
bound
cmpsl
lret
fwait
sbb
ret
push
sub
mov
addb
adc
ret
lcall
push
imull
xchg
hlt
test
cld
dec
or
cmp
xchg
push
in
dec
jecxz
lret
sub
inc
sub
iret
iret
mov
add
rcl
dec
pusha
pushf
bt
neg
cmp
call
add
bt
pushf
stc
pushf
movzwl
bsf
mov
cmc
cmc
add
cmp
push
mov
pusha
test
mov
push
jmp
xchg
or
sbb
adc
cmp
push
dec
jo
xor
mov
or
jnp
mov
rcrl
mov
int
fistps
jbe
push
adc
mov
ficoml
jne
mov
inc
and
ficoms
or
int
and
xor
in
out
mov
fisubrl
lret
aad
pop
and
push
jb
dec
aad
sbb
cmp
pushf
xchg
adc
dec
adc
imul
js
out
jns
cmp
les
xor
mov
hlt
mov
sub
cmp
inc
push
mov
std
add
inc
outsl
mov
and
aas
xor
test
test
js
adc
in
rcrb
fcompl
ret
and
stc
sbb
jle
jbe
je
inc
fwait
push
push
loope
jl
int3
leave
shrb
add
mov
sbb
stc
pusha
sbb
movl
push
lea
jmp
into
add
push
mov
mov
mov
and
inc
pop
sub
ret
and
rcrb
out
std
xchg
or
rcrl
add
xchg
jmp
pop
inc
subl
inc
repnz
jge
aam
inc
cmp
mov
mov
clc
out
push
sub
out
mov
push
jg
aad
pop
movsl
cltd
nop
and
std
push
loop
push
mov
stos
ret
xor
or
ja
and
inc
and
mov
xor
sbb
out
rorl
ja
fnstcw
ljmp
inc
pop
mov
in
out
cmp
mov
push
fimuls
inc
gs
aad
xchg
push
cmp
push
or
lods
xchg
popa
mov
adc
and
mov
sub
hlt
mov
lahf
mov
loopne
subl
mov
push
std
xchg
sbb
loope
mov
lret
icebp
mov
sbb
mov
push
and
pop
sti
mov
pop
xchg
pop
sbb
push
pop
scas
leave
sub
outsl
rolb
out
int
jne
mov
fstpt
test
xchg
push
daa
scas
xor
test
lahf
test
incb
andb
pusha
and
inc
jns
and
outsl
add
stos
xlat
jp
imul
stos
test
in
mov
cltd
call
in
inc
dec
xchg
sub
sahf
lock
jns
pop
mov
mov
ret
dec
pop
adc
mov
push
mov
ror
push
sbb
mov
sub
inc
cltd
sarb
or
mov
out
ret
mov
inc
push
cmp
fadd
add
icebp
fs
inc
mov
xchg
sub
add
xor
je
push
call
pop
sbb
popa
mov
xor
or
cltd
shlb
and
inc
ret
lea
sub
cmpsl
mov
jns
clc
out
adc
bound
mov
sbb
pop
sub
or
jmp
xor
pop
repz
call
js
xor
xchg
call
in
sub
cmp
shlb
aam
shrb
jnp
outsl
clc
out
fisubrl
dec
push
lret
loopne
pop
test
subl
pop
aas
mov
stos
dec
push
std
jnp
jnp
sub
hlt
pusha
out
fstl
rorb
iret
testb
xchg
aad
cmp
dec
push
or
jns
pop
icebp
push
jnp
jne
pop
hlt
adc
lret
jo
jns
dec
jnp
mov
push
test
cmpsb
lret
mov
push
dec
add
int
stc
sbb
test
add
pop
pop
andb
sti
or
xchg
lret
lods
push
sub
pop
call
lock
or
xor
iret
add
xor
mov
test
mov
dec
out
xor
and
hlt
mov
imul
cmp
pop
sub
sub
cmpsl
lods
lock
jno
and
test
add
ss
xchg
mov
dec
es
mov
jb
add
cmpsl
sbb
in
or
push
adc
adc
insb
pop
jmp
jae
xchg
mov
mov
fists
add
les
test
aaa
lods
lods
fwait
nop
clc
jge
daa
fmull
adc
dec
jnp
adc
incb
ds
mov
dec
dec
aad
pop
xor
add
xchg
out
adc
sti
addb
enter
cmpsl
inc
loopne
mov
pop
mov
cmp
rolb
out
imul
call
out
ds
cmp
jb
pop
bound
hlt
clc
jle
inc
fists
cs
or
shll
pop
dec
push
out
cs
push
lret
popf
adc
mov
mov
sahf
jnp
iret
adc
fs
out
and
push
arpl
ficoms
enter
pushf
movb
lea
jne
shld
add
mov
sub
cmp
rcl
shl
sub
movsbl
mov
pusha
push
pushf
sub
bt
cmc
pushl
popl
cmp
push
clc
cmc
cmp
pushl
lea
ja
pushf
mov
sub
add
jnp
add
pushf
call
push
lock
std
std
lea
xchg
pusha
mov
inc
movsb
test
push
cltd
adc
lret
adc
fsubrl
mov
dec
inc
fisubs
aam
pop
lds
out
shrb
adc
test
xchg
mov
mov
ss
in
xchg
push
jbe
hlt
jne
movsb
stos
cmp
shlb
sub
fiaddl
aaa
jp
jns
push
cmp
jl
dec
sbbl
jbe
xchg
mov
pushf
pop
push
or
es
arpl
jle
in
mov
mov
dec
mov
xchg
aas
adc
iret
pop
jl
movsl
stos
lret
ja
xchg
inc
mov
jmp
cmp
dec
mov
popf
jno
cmpsl
mov
inc
sahf
iret
mov
mov
inc
or
out
dec
pop
shlb
in
xor
push
iret
dec
sub
cli
ljmp
sbb
mov
addr16
shl
mov
jo
or
mov
push
xchg
or
lret
int
test
and
xchg
add
fnstenv
lcall
sbb
ret
pop
fisubl
movsb
stos
or
ss
add
mov
hlt
push
jge
push
xchg
inc
stos
jne
and
dec
sub
les
seta
ds
pop
aad
lret
in
push
lods
mov
int3
mov
aas
ljmp
pop
insl
mov
movsl
mov
mov
or
adc
sbb
lock
lea
push
add
mov
adc
cs
jge
jecxz
dec
jo
mov
push
inc
lcall
arpl
popa
xchg
adc
mov
lods
mov
in
test
jmp
arpl
sub
cmc
lods
lea
inc
cld
out
adc
out
dec
cmp
mov
movsb
and
jne
mov
arpl
repnz
das
lods
mov
pop
sti
add
pop
scas
in
mov
dec
mov
pop
imul
popf
mov
jl
lods
jmp
cmp
sub
cmp
mov
lods
enter
lds
and
jle
out
enter
or
in
cmpsb
jmp
and
outsl
insl
fdivl
lods
enter
movsl
je
mov
mov
inc
lds
int3
xor
mov
and
stos
pop
xor
sub
rclb
adc
cmc
popa
push
fwait
mov
enter
cltd
pop
mov
mov
jo,pn
ja
in
stos
mov
cwtl
out
mov
bswap
pop
nop
addr16
xor
jnp
movsb
test
jae
ljmp
or
mov
pop
rcrb
pop
ficoml
cld
jg
xchg
aaa
out
jmp
lret
pop
scas
add
cmpsb
xchg
sbb
inc
addr16
cli
sahf
scas
cs
popf
bound
and
int3
cli
inc
mov
xor
test
xor
pushf
pop
mov
shlb
adc
jge
aas
cli
jecxz
in
std
mov
cmp
shll
xor
inc
fisubs
lret
inc
ror
fnsave
jb
rorb
mov
iret
jmp
cli
pop
cmpl
lock
stos
test
push
movsl
jmp
mov
loopne
imul
sahf
hlt
xorb
dec
dec
scas
rorl
scas
jbe
mov
mov
mov
and
stc
jnp
sti
pop
dec
jg
loope
out
xchg
orl
sbb
ja
data16
xchg
mov
inc
cld
xchg
in
leave
add
xchg
and
popf
sbb
xchg
bound
daa
insl
inc
push
jae
cmp
test
fldcw
dec
jg
and
popf
mov
xchg
leave
xchg
jo
sbb
stos
int3
addr16
inc
incl
int
shrl
mov
enter
inc
sti
mov
icebp
adc
lea
add
xchg
js
lcall
jle
add
or
adc
out
jmp
addr16
js
iret
repz
mov
add
gs
fwait
dec
les
in
loope
cli
leave
aam
jne
xchg
xor
leave
je
repnz
pop
cmp
data16
or
out
mov
push
pop
sub
sub
push
xor
jg
dec
pop
mov
ret
inc
jns
stos
faddp
fnstenv
repnz
sub
jg
imul
xor
leave
movsl
push
add
aas
inc
data16
adc
lds
pop
xor
leave
mov
pushf
sbb
sub
je
and
pushf
add
sti
add
repz
push
jmp
fisubrl
adc
into
jg
lahf
fcompl
mov
mov
shrb
sbb
cmp
shll
adc
push
sarl
inc
lcall
mov
lds
and
push
mov
inc
or
dec
push
jb
inc
cmp
inc
cmp
call
aad
test
ss
jo
jmp
ficompl
push
mov
xor
nop
sahf
fcmovnb
fadds
sahf
leave
and
add
push
jns
sarb
fdivr
mov
cmp
or
js
aam
ds
leave
std
cmp
ljmp
lret
test
cmp
out
cmp
sbb
mov
xor
push
xchg
cld
lahf
iret
fisttpll
sbb
imull
add
mov
pushf
stos
stos
addr16
jg
je
sub
out
jo
and
outsb
sub
mov
cld
inc
jmp
add
or
int
mov
test
fisttps
mov
filds
rol
xchg
sbb
lahf
js
nop
xchg
mov
loopne
cmp
dec
mov
loopne
roll
jne
notb
xchg
jl
shrw
pop
sbb
lea
stc
add
push
cwtl
cmp
adc
loop
js
negl
je
mov
jp
lret
test
int3
inc
dec
mov
mov
ret
cli
iret
mov
xor
lea
add
xchg
pop
xor
imul
add
jecxz
jne
and
dec
mov
flds
bound
stos
cmp
clc
mov
pusha
jecxz
cmpsl
leave
dec
jl
cmp
sub
sbb
dec
jle
pop
add
cmpsl
mov
or
push
lahf
add
sbb
xor
rorb
repnz
mov
movsb
mov
imul
nop
popf
int3
repnz
adc
popf
push
and
jle
adc
in
pop
dec
cmpb
test
filds
cmp
or
cmp
push
add
adc
cmpsl
fstp
call
pop
mov
mov
imulb
pop
sub
inc
add
and
lods
adcb
sub
in
fildl
add
pop
leave
inc
cli
push
pop
inc
cld
mov
mov
lods
imul
in
mov
mov
scas
cmp
jmp
repnz
imul
ss
xchg
leave
xchg
repnz
jno
shl
cs
mov
adc
ficoms
popf
mov
xor
pushf
jo
sub
adc
push
std
add
popw
dec
add
mov
and
lahf
mov
add
data16
lea
fwait
lods
in
into
mov
inc
and
jmp
push
andb
loope
adc
jmp
fbstp
jb
call
xlat
mov
stc
je
mov
push
mov
test
dec
mov
leave
mov
jmp
xor
adc
repnz
or
xchg
out
push
cmp
into
jb
mov
pop
fsqrt
push
cmp
mov
pop
lret
and
aas
sub
xchg
cmc
dec
cltd
push
in
pop
mov
mov
imulb
pop
in
stos
enter
repz
out
movsb
in
mov
jecxz
mov
jecxz
repnz
push
mov
xchg
cmp
sbb
aad
jl
pusha
sti
jmp
mov
repz
cmp
test
js
cmp
test
dec
sahf
mov
iret
frstor
mov
jecxz
mov
mov
xor
clc
or
sub
shrb
jno
inc
jae
lods
mov
outsl
addl
inc
sub
loope
mov
test
push
cmpb
dec
sub
sub
aad
adc
mov
xchg
clc
gs
std
or
out
scas
xlat
add
inc
and
mov
fists
inc
xor
jle
adc
pop
cmp
cmpw
pop
or
out
inc
gs
test
mov
dec
lret
sub
sbb
jns
fsubrl
dec
adc
dec
cmp
aaa
repnz
push
adc
inc
mov
ss
add
mov
int
jno
loopne
popf
jg
repnz
xchg
or
mov
mov
repnz
mov
mov
stos
sbb
xlat
addb
mov
jnp
or
repz
or
dec
cwtl
or
jb
xchg
sbb
sub
das
stos
push
test
push
mov
mov
dec
cwtl
test
mov
fisttpl
pop
cmp
pop
outsb
mov
add
sub
sub
psubd
repnz
or
les
int
adc
xchg
cmp
fidivl
outsb
sub
mov
lcall
mov
pop
xor
push
sub
push
pop
rclb
and
pop
out
fdivl
or
jl
mov
rorl
jbe
in
adc
push
xchg
sub
cmp
pop
inc
cmp
bound
mov
dec
fldl
pop
aam
movsb
ljmp
mov
sahf
movsb
test
unpckhps
repnz
jne
jbe
in
and
adc
and
lods
imull
cld
push
lea
pop
aas
cld
ljmp
lahf
push
push
sub
in
xchg
sbb
stos
push
rcl
push
sti
sahf
adc
test
ret
push
mov
push
jecxz
inc
push
push
daa
and
and
add
push
mov
inc
aaa
inc
mov
push
gs
mov
jbe
sbbb
dec
lret
lret
das
hlt
cli
jg
push
je
ret
mov
aad
repz
cwtl
mov
xchg
popf
xor
cmp
arpl
int3
jge
fistl
ljmp
jmp
mov
mov
pop
adc
lods
mov
mov
pop
outsb
in
inc
loopne
popa
xorb
test
push
fld
fstl
mov
adc
cmp
dec
pushf
mov
movb
fdivrl
in
jnp
add
mov
lret
mov
mov
pushf
lock
xlat
daa
aaa
xchg
repz
mov
xchg
or
xchg
bound
loop
out
xchg
mov
fs
popf
rcr
sub
fildl
sbb
shrb
or
and
jno
ja
call
movsl
fcompl
push
xor
imul
xchg
or
inc
xor
ja
mov
fwait
pop
out
shll
jge
jle
xor
jecxz
adc
cwtl
mov
cld
ficoml
adc
cmpsb
notb
jns
loop
test
sbb
xlat
xchg
jnp
gs
sbb
outsl
xorb
inc
ss
push
push
or
push
inc
shlb
mov
push
movl
cmpsb
int3
adc
adc
sub
pop
add
mov
xchg
push
icebp
sub
adc
pop
js
rol
lock
andl
sbb
pop
dec
dec
mov
mov
fsubr
mov
sbb
sti
pop
sub
pop
negl
sub
dec
xchg
scas
or
sti
lods
dec
int3
sbb
or
movsb
adc
shlb
jmp
xchg
loope
pop
dec
icebp
lds
xchg
in
inc
iret
and
insb
push
insb
mov
js
pop
or
scas
mov
and
ds
scas
add
repnz
mov
inc
sbb
xor
xor
xchg
in
orb
xchg
mov
mov
or
mov
cs
js
and
out
les
dec
insb
sub
inc
sarl
ds
inc
int3
lret
mov
ret
fsubr
test
dec
push
outsb
lahf
pop
lret
xor
and
inc
xor
xchg
enter
adc
adc
mov
or
das
call
mov
imul
jne
add
es
sbb
outsb
fldl2t
cmpsb
mov
ja
pushf
sbb
pop
adc
or
iret
push
dec
adc
or
adc
ret
or
pop
dec
int
adc
adc
mov
push
andl
sbbl
pop
das
push
mov
imul
add
sbb
add
cli
jge
outsb
movsl
cmp
int3
and
inc
mov
cltd
and
lods
sub
add
imul
push
sub
cmp
insl
and
xor
sub
fwait
mov
mov
stos
add
out
movsl
inc
push
int
mov
xor
sahf
or
jbe
push
stos
pop
pop
icebp
push
mov
dec
sbb
or
ret
pushf
and
out
add
jns
pop
leave
cmp
cmp
mov
fiadds
mov
pop
negl
mov
jno
pop
and
adc
clc
add
pop
imul
sub
jae
mov
cli
fwait
push
mov
lods
sbb
push
xor
pop
xor
mov
inc
cmc
test
jae
pop
rcrl
int
adc
gs
outsb
pop
in
rol
test
fdivrs
out
addb
lods
sbbb
sbb
push
imul
loop
bound
pop
mov
xlat
int
fstpl
cmp
and
jnp
xor
cmp
pop
outsl
cmp
test
mov
test
adc
mov
mov
hlt
iret
pop
sub
mov
aam
jo
push
imul
mov
pop
sarl
stc
subb
pusha
sub
cmpsl
sarb
cli
negb
jl
loop
mov
cmpsb
xchg
mov
jl
in
stos
pop
int
test
into
dec
cwtl
mov
arpl
data16
fcmovne
je
mov
dec
adc
mov
mov
insb
lea
in
fcoml
jle
jmp
sti
pop
sbb
mov
shll
int
pop
hlt
mov
icebp
jmp
popf
ret
into
mov
shr
jb
std
adc
outsb
movsb
add
xchg
movsb
int
int
jae
pop
xchg
push
xchg
and
stos
jg
ret
sbb
lea
int
bound
rcl
ret
dec
test
in
cmp
ret
jle
sti
insb
mov
pop
mov
add
cmp
sbb
and
or
pushf
sbb
mov
das
leave
js
inc
sarb
jmp
int3
add
xchg
insl
mov
negl
insl
and
and
addl
add
sub
mov
inc
std
pop
test
dec
idivb
aas
aad
sbb
cmp
cmp
outsl
pop
sub
repz
cmp
mov
cmp
adc
cmpsl
aam
dec
enter
bound
pop
sbb
add
shll
fstl
dec
lods
mov
mov
cmp
xor
cmpsl
fnstenv
mov
scas
ret
xlat
mov
jbe
xor
adc
inc
push
xlat
cmp
hlt
mov
xor
cmp
mov
cmp
mov
pop
ljmp
adc
outsl
in
and
scas
sbb
mov
out
mov
repz
pop
mov
xor
mov
cltd
fnstsw
dec
mov
ds
ret
jo
adc
enter
or
mov
jecxz
out
hlt
xor
jp
imul
push
ljmp
dec
arpl
mov
pop
lret
xchg
mov
mov
pop
sahf
sub
lods
mov
push
xchg
in
xchg
cmp
and
test
cld
and
out
jno
daa
lret
push
xchg
in
jl
leave
pop
inc
inc
imul
adc
bound
pop
dec
lock
mov
aaa
fmul
inc
and
sahf
movsb
pop
push
notb
jmp
daa
insb
inc
mov
and
roll
mov
ret
xorb
jb
push
in
call
lahf
pop
lret
xor
xchg
jmp
fcmove
cmp
and
int
mov
enterw
xor
mov
cli
rorl
or
adc
aam
cmp
dec
mov
adc
xor
gs
icebp
dec
in
movsb
dec
push
cmp
sahf
xchg
shl
add
and
in
lods
sub
xchg
xchg
int
leave
iret
xor
iret
movl
dec
ret
lea
subl
sbb
xor
pop
push
int3
jge
push
push
test
inc
inc
xchg
adc
cwtl
xchg
sub
in
pop
xor
sub
jno
leave
sub
push
push
mov
adc
push
adc
scas
stos
jnp
es
push
dec
mov
adc
cmp
lock
mov
cli
adc
js
adc
iret
inc
iret
adc
jne
dec
insl
lret
out
stos
push
inc
cmpsl
dec
lock
enter
unpckhps
xor
test
sbb
scas
stos
inc
cmpsl
movsb
js
int
daa
mov
lds
mov
jecxz
cld
mov
jnp
out
leave
push
clc
test
scas
xchg
adc
daa
shl
or
cmp
sub
jmp
sbb
stos
mov
lahf
push
xchg
sbb
jecxz
inc
and
in
cwtl
cmpsl
and
dec
mov
mov
adc
loope
loop
leave
lret
jmp
add
push
lret
xor
fs
sbb
lods
sbb
insb
pop
push
sbb
pop
lods
adc
ret
xchg
xchg
mov
push
lds
add
jns
mov
fmuls
ljmp
notb
mov
xor
test
xor
mov
lcall
in
jmp
daa
scas
test
fs
pop
rcr
jecxz
mov
scas
sub
addl
bound
imul
jge
loope
fs
inc
bound
xchg
push
mov
rcll
out
and
shrb
sbb
clc
pop
xchg
sub
in
pushf
and
aam
pop
ss
pop
mov
jge
xchg
mov
sub
cmp
pop
mov
adc
mov
jno,pt
mov
lret
mov
add
and
je
test
sbb
push
mov
push
sti
outsl
and
inc
sbb
sti
mov
sub
pusha
divb
mov
adc
cmpsl
inc
mov
cmp
leave
pop
divb
int3
add
lret
and
cmpsl
in
mov
test
data16
lret
sar
mov
pop
sbb
adc
add
outsb
sub
dec
mov
xor
in
pop
lock
aam
je
push
leave
daa
dec
stos
sbb
fimuls
cmpsb
sarb
xchg
aaa
push
dec
lcall
or
jl
shl
push
mov
mov
adc
sub
nop
aaa
pop
fildl
in
jl
jecxz
lahf
repz
sar
mov
xor
cmpsb
cmp
sub
adc
cmp
popf
mov
or
imul
inc
out
aaa
fsub
sub
xor
lcall
int3
js
out
out
les
sub
das
pop
arpl
lods
dec
mov
pusha
sti
popa
fwait
lret
sbb
inc
or
mov
or
cmc
sub
add
inc
fiadds
sub
jle
dec
outsl
test
call
push
inc
lahf
mov
mov
pop
ja
push
or
fbstp
or
loopne
pop
mov
inc
inc
in
push
inc
insb
dec
or
pop
insb
rcr
outsb
lock
mov
lds
add
roll
sub
popf
lcall
ret
movsl
fldt
dec
mov
rcll
test
test
test
outsl
sbbb
outsl
lcall
mov
sub
push
and
push
rclb
int
fadds
mov
mov
inc
leave
mov
jle
jmpw
adc
mov
and
adc
mov
and
aas
adc
aaa
insl
cmp
imul
int3
dec
mov
cli
xchg
sbb
dec
sbb
adc
xchg
cmpsl
fists
jno
aad
roll
aam
adc
inc
hlt
scas
dec
mov
push
adc
adc
cld
lahf
xor
fldl
pop
sbb
jbe
testl
pop
or
outsl
fisubrl
out
sbb
ret
pop
xlat
xor
das
test
push
test
dec
pop
clc
mov
ds
sbb
lret
dec
lret
fistpll
fcmove
push
jmp
dec
or
push
rol
sub
add
call
dec
mov
fmul
dec
jno
add
mov
mov
iret
xor
pop
repz
cmpsb
in
cmpsl
js
andb
loop
jg
xor
iret
dec
pusha
jp
test
jne
fisubrl
mov
xor
dec
scas
js
mov
jnp
aam
cmp
xchg
sbb
mov
or
and
ret
sub
js,pt
imul
xchg
je
jg
and
pop
out
lods
sub
sti
int
cmc
mov
jp
mov
dec
int3
aas
xor
cld
fisubl
cmc
leave
inc
mov
loopne
mov
sahf
pop
add
pusha
ret
push
mov
addl
cmp
jns
mov
cmp
fists
add
sahf
jb
lea
sub
or
jmp
pop
rorl
sub
jbe
pop
push
in
cld
out
popa
ret
pop
ret
daa
dec
es
stos
int3
int3
hlt
push
mov
scas
ds
icebp
mov
aam
and
add
adc
or
movsb
in
jge
adc
lahf
and
in
sub
xchg
aaa
or
and
in
sub
sarb
std
dec
das
lods
mov
cmp
dec
pop
loopne
les
mov
mov
push
ret
lods
jnp
cmp
push
cmpsb
mov
jnp
xlat
push
movaps
mov
or
mov
imul
add
stos
xchg
pop
fwait
and
addb
add
fisubl
out
sub
or
pop
daa
jnp
movsb
dec
add
jns
xchg
cmp
int3
and
popa
roll
call
xchg
andl
stos
nop
lds
imul
in
pop
mov
cmp
imul
je
add
mov
sbb
adc
loopne
xchg
jns
and
xchg
xchg
mull
mov
cld
enter
movsl
pop
decb
xchg
mov
and
xchg
xchg
xor
fisubl
lcall
xor
xlat
dec
lods
sub
loope
adc
adc
adc
add
clc
cmp
movw
cmp
movzwl
inc
adc
mov
clc
stc
push
add
pusha
cmp
cmc
movb
mov
push
cmp
clc
test
push
lea
je
bt
jmp
lea
je
pusha
add
jae
bt
add
cmp
cmc
cmp
call
pushf
call
call
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
adc
inc
nop
std
fisubl
popa
sti
js
cmp
mov
mov
ss
roll
pop
into
sti
jg
adc
pop
lods
push
daa
xchg
std
push
adc
in
pmaxub
mov
lahf
sahf
dec
sbb
cmp
into
addb
and
xorl
push
xchg
test
mov
xchg
lret
lds
dec
in
pop
mov
add
or
dec
and
pop
fs
dec
addb
xchg
xchg
xchg
jb
hlt
into
push
jge
pop
jle
dec
mov
push
jge
inc
je
sbb
push
jge
pop
mov
push
shlb
fldl
shr
rorl
dec
das
mov
lock
aad
pop
call
cmp
xor
mov
out
lret
sti
mov
not
xchg
les
push
ret
enter
in
lahf
pop
lods
mov
push
sbbb
jp
lahf
dec
mov
mov
and
fists
jge
sbb
pop
dec
pop
fnstcw
jl
sub
adc
pop
movsl
xlat
push
add
ds
or
ret
ljmp
dec
xchg
pop
repz
cs
mov
scas
mov
and
pop
sub
cmp
xchg
and
dec
clc
shrb
xchg
pop
imul
lock
imull
ret
in
fwait
sarl
pop
xchg
sub
sub
mov
adc
addr16
shlb
int
mov
push
mov
shlb
xchg
das
roll
jb
xor
ret
popf
sarl
sub
xchg
xchg
loope
lret
test
ja
movsb
lret
jne
jecxz
inc
es
push
fcmovnu
cmpb
shrl
popf
mov
ret
fstpl
orb
mov
push
movsl
aam
out
shrl
push
or
or
ret
mov
mov
mov
inc
push
stos
sbbb
or
repz
sbb
repz
sbb
clc
mov
adc
xchg
push
xchg
xchg
pop
pop
sbb
negb
ret
jp
pop
jmp
pop
pushf
pop
stc
fildll
sbb
movsl
push
push
iret
sbb
idivl
xor
fistps
movsl
push
sbb
fildll
repnz
mov
pop
imul
pop
dec
adc
xchg
fs
pop
sbb
lods
jge
cmp
jecxz
push
dec
in
test
ret
mov
in
cmc
sub
adc
push
pushf
and
mov
jo
movsl
push
fistl
leave
iret
xlat
adc
jns
pop
rcr
sbb
cmp
leave
pop
xor
lret
filds
sub
cs
dec
xchg
inc
repz
push
rol
fisttps
fdivrl
fldt
repnz
lock
sub
ret
mov
push
call
xor
outsb
xor
xchg
js
push
arpl
xlat
notl
and
or
xor
pop
xchg
xor
lcall
loope
ret
fstpt
mov
pop
push
orl
fwait
mov
mov
sub
inc
sbb
dec
adc
xchg
in
lea
jecxz
outsl
or
xor
mov
fsts
mov
aam
pop
sbb
fistpl
push
adc
dec
sub
test
inc
cwtl
mov
imull
mov
icebp
add
dec
ljmp
push
fidivrs
xchg
imul
dec
ja
xlat
jp
mov
fcmovb
ret
std
lods
add
sarb
xlat
sarb
adc
outsl
xchg
and
fildl
cmp
fnsave
hlt
dec
mul
fwait
sti
mov
pop
fistpll
sbb
test
pmovmskb
mov
xlat
imul
xchg
das
testl
shl
in
and
xor
adc
push
cwtl
out
xchg
testl
icebp
sbb
mov
cmp
fwait
push
in
mov
repnz
xchg
xchg
aad
or
jns
aaa
mov
daa
xchg
xor
addl
sti
sub
adc
sbb
shr
sub
rorl
cwtl
sub
push
adc
push
cmp
lods
pop
xchg
imul
mov
fs
aam
jns
cmpsb
cmp
fcmovne
iret
shl
out
mov
fisttps
bnd
gs
mov
dec
add
arpl
test
jae
push
fistps
lds
ja
stc
stos
pop
fidivs
notl
mov
cmc
xchg
notl
fbstp
stos
xchg
sbb
jecxz
sub
mov
ret
fldenv
mov
dec
cmp
popf
sbb
xor
mov
mov
push
cmp
and
out
inc
push
inc
loopew
jmp
pop
and
insb
mov
outsl
sti
popf
fldcw
shlb
xor
stos
loope
popf
gs
ret
icebp
cmp
sub
push
xchg
movsb
push
pushf
adc
mov
out
test
fwait
mov
loop
xchg
ds
outsl
sbb
cmp
notl
pop
add
jge
js
mov
sbb
es
lds
shlb
movd
notl
inc
jmp
xchg
inc
jl
fstl
ja
aad
pop
repz
mov
xchg
sarl
aad
sub
add
cltd
cmp
adc
xchg
call
xchg
jae
fdivrs
inc
popf
xor
scas
and
xchg
push
aas
xchg
test
mov
sti
xchg
fwait
ja
mov
lods
sub
jl
xchg
pop
mov
dec
sbb
fadd
jmp
xlat
dec
loop
mov
ds
and
mov
test
xor
or
int3
jbe
or
stos
loope
rol
imul
cmc
push
fdivs
hlt
push
ret
cmp
mov
fists
test
and
cmpsl
push
push
ja
sarb
adc
push
fdivs
nop
jb
pop
js
pop
xchg
cmpsl
jecxz
jmp
cmpsl
pop
adc
aad
adc
fcompl
mov
scas
lret
testl
lret
sti
ljmp
dec
push
stos
jo
lret
in
or
dec
lods
fcomip
inc
mov
ret
jne
pop
dec
xchg
testl
xor
lcall
stos
mov
lret
shl
repz
xchg
or
sub
roll
iret
xlat
ret
dec
xor
fwait
stos
inc
std
repz
les
aaa
dec
mov
repz
mov
xchg
jge
xlat
pop
jg
mov
mov
out
frstor
imul
icebp
pushf
cmp
loope
xlat
mov
xlat
sbb
mov
jmp
jp
mov
or
popa
mov
mov
jnp
and
jno
jecxz
cmp
sbb
rcr
fcmovnb
in
icebp
fwait
loopne
jbe
repz
insb
fnstenv
daa
popf
ret
int
shl
shl
dec
cmp
adc
jecxz
int
out
push
loope
xor
xlat
stos
das
daa
shll
icebp
push
fmull
add
loope
xorl
stos
xchg
imull
popa
gs
shl
fcomp
jno
lahf
and
outsl
dec
mov
mov
in
lock
jns
fbstp
pop
jle
xchg
xchg
push
add
fld
imull
xor
and
xchg
mov
xchg
push
mov
lods
cmc
mov
adc
loopne
mov
dec
cmpsb
js
fwait
mov
pop
cltd
test
ret
iret
pop
pop
jmp
es
inc
cmpl
or
jecxz
arpl
iret
sub
inc
popa
ret
mov
insl
nop
sbb
lret
mov
dec
test
jg
mov
fs
scas
jge
icebp
pop
dec
xor
mov
iret
or
repz
vpminub
out
cmc
lret
fwait
xor
xchg
adc
pop
fiaddl
mov
mov
sahf
dec
pop
ds
sbb
sub
jmp
testl
pop
pop
jle
lds
xchg
daa
stos
adc
cltd
in
stos
test
sar
lret
cli
dec
push
sbb
mov
lock
mov
inc
mov
xchg
push
adc
adc
jmp
mov
pop
testl
dec
add
mov
push
pslld
into
adc
mov
adc
adc
add
mov
adc
mov
jecxz
test
ja
rcll
add
mov
lods
adc
ret
add
jge
in
xlat
popf
dec
mov
mov
lret
ja
sub
sbb
xchg
pop
push
mov
sti
enter
mov
jmp
mov
mov
pop
stos
cli
mov
sbb
bound
fsubl
push
aaa
mov
fwait
mov
pop
xor
ds
xchg
xor
or
pop
out
push
popf
inc
fwait
rorb
xchg
insl
aad
aad
ret
mull
or
push
fstpl
in
lds
xor
mov
aad
fsubs
jns
adc
bound
dec
std
or
stos
sub
push
and
inc
adc
push
xor
pop
ss
std
mov
rorb
in
add
rcll
mov
repnz
jo
lret
nop
adc
xchg
pop
mov
cmp
subl
stos
xchg
dec
jmp
lods
fistpl
test
shr
and
jae
adc
fprem1
add
les
mov
push
lods
mov
mov
fldt
mov
cmp
fbld
icebp
mov
jmp
imul
xor
jmp
jmp
lcall
pop
loope
mov
aad
cli
int
mov
movsb
xchg
adc
arpl
adc
inc
or
jl
mov
or
push
pop
iret
xlat
popf
add
js
dec
adc
mov
iret
lret
lock
xchg
sbb
into
and
repz
outsl
shl
leave
inc
push
inc
xchg
cwtl
loope
mov
mov
rolb
test
fdiv
mov
daa
push
es
lcall
imul
in
loop
rorb
jns
jb
xchg
mov
mov
lret
test
push
ficomps
iret
lret
adc
mov
push
lret
movsb
xor
or
xor
arpl
rorl
jnp
stos
xlat
repz
stos
fidivl
inc
add
push
shl
sbb
push
mov
jmp
push
adc
mov
and
into
pop
loopne
mov
ss
outsl
or
jmp
xchg
shl
fstpt
mov
lods
mov
cmp
lock
sub
sti
xchg
ficompl
icebp
push
mov
ret
xchg
xor
adc
jg
xchg
pop
jb
fwait
push
sub
mov
xlat
push
fnstsw
xchg
rcll
jp
cmp
filds
fisttpl
out
ret
lcall
mov
push
cmp
mov
push
fcomip
xchg
xchg
fcmovb
test
xchg
call
stos
inc
scas
fcmovbe
cmc
jae
sub
push
dec
in
xchg
inc
or
xor
stos
scas
xor
xor
push
loop
enter
arpl
mov
fwait
xlat
sti
daa
out
hlt
xlat
shll
sbb
loopne
mov
pandn
aad
mov
icebp
and
push
xlat
fidivrl
xlat
sahf
adc
clc
hlt
icebp
and
add
sub
jl
testl
adc
xchg
ss
fwait
testl
popa
pop
push
loope
repz
jb
test
rorb
repz
xor
xor
fldcw
push
fwait
pop
scas
shrb
hlt
insl
aaa
lcall
daa
sbb
jbe
icebp
pop
ret
arpl
xor
sub
sti
sub
dec
gs
fnstenv
test
push
xchg
xchg
stos
cmpsl
cmp
add
fwait
daa
mov
out
pop
incb
out
movsl
mov
sti
aad
jbe
test
sub
xchg
lds
insb
or
mov
sbb
add
pop
stos
mov
test
or
lods
push
out
sub
ds
cwtl
call
add
mov
popf
or
pop
or
out
sti
enter
or
test
testl
jbe
fwait
std
jbe
rep
or
aam
fistpll
push
mov
lds
jecxz
cmpl
pop
mov
xchg
popf
aad
jge
mov
aad
xchg
filds
and
fstps
in
mov
or
fnsave
jmp
push
and
lcall
shl
movsl
repz
mov
jae
sub
sbb
scas
push
adc
mov
adc
orb
lds
add
or
jae
ss
adc
xchg
dec
push
orl
fistps
push
sti
loop
mov
decl
mov
mov
daa
mov
xchg
push
jge
mov
std
lret
repz
xchg
lcall
movsl
mov
sub
fsubrs
inc
mov
cmpl
xchg
int3
xchg
arpl
fmull
jns
shll
xchg
pop
fcos
xchg
ret
push
aad
inc
ret
out
mov
lods
ret
push
xchg
jb
ret
lret
push
inc
pop
pop
lea
adc
jecxz
cmp
test
cwtl
stc
rcrl
lret
aam
xor
adc
mov
repz
out
xchg
adc
cmp
cld
jo
push
sti
mov
fcompl
jbe
fistpll
jnp
sbb
out
icebp
pop
cmp
pop
imul
rcl
mov
icebp
sbb
inc
adc
mov
test
sub
test
ret
mov
int3
xchg
jl
cmp
push
mov
push
mov
mov
mov
aad
pop
adc
shll
mov
sqrtps
movsb
and
and
aad
leave
ja
xlat
icebp
cmc
lret
dec
aad
fistpl
push
nop
shlb
pop
mov
fistps
pop
pop
std
mov
repnz
adc
mov
ret
ret
push
or
ljmp
cmp
or
and
sbb
ljmp
sbb
add
pop
pop
add
aad
mov
jae
rol
xchg
sub
and
pop
jns
mov
fbstp
mov
divb
pop
rcrb
pusha
scas
mov
xchg
orb
sbb
js,pn
stos
hlt
fists
std
out
mov
mov
mov
mov
pop
xchg
aam
jecxz
movl
rcll
sbbl
pop
lods
shll
xchg
xorb
mov
mov
lret
movb
adc
push
mov
add
cmp
stos
cwtl
scas
repz
shl
or
dec
shlb
pushf
xlat
xchg
sbb
sub
out
jmp
add
xchg
fucomip
ja
or
test
mov
xchg
ret
pop
ljmp
cmpsl
lea
fcoms
test
xchg
mov
xlat
ss
jp
jne
inc
mov
out
repnz
es
aam
xchg
imul
and
test
sub
frstor
jne
pusha
mov
incb
in
mov
xlat
pop
and
scas
lret
xchg
arpl
and
cmp
aad
cmp
inc
lods
push
int
dec
lods
jnp
mov
sbb
in
mov
fdivl
fcmovnbe
push
jb
inc
lret
subl
sarb
mov
ret
pop
cltd
aam
iret
xchg
inc
popf
ret
pop
xor
xchg
mov
dec
ss
sbb
cmc
mov
dec
mov
divb
mov
mov
mov
ret
xchg
mov
sub
xrelease
icebp
pop
jno
add
out
cld
jecxz
pop
ja
test
pop
cmpsb
roll
adc
inc
xlat
mov
hlt
aas
cmp
ret
imul
mov
pop
popf
fsts
cmpsl
ret
insb
push
xor
mov
xor
pop
push
aam
pop
rolb
xchg
lods
xlat
cmp
pop
jb
sbb
fnstcw
push
lret
lret
pop
ljmp
cmpl
xor
adc
scas
mov
repnz
int3
pop
loope
add
cmpl
jae
push
xchg
jmp
outsb
pop
push
pop
pop
cmpsl
pusha
mov
stc
jmp
push
mov
xchg
lret
insl
pop
push
in
sub
dec
mov
mov
std
fildl
hlt
ret
lcall
ror
mov
mov
ret
ret
out
push
dec
in
lahf
adc
fstenv
cltd
cld
mov
mov
adc
addb
pop
loop
push
loop
push
fwait
mulb
outsl
xchg
mov
cmp
xchg
loope
aam
pop
xchg
mov
ret
xor
jp
mov
scas
aaa
in
call
jno
lret
cltd
inc
jae
jl
pop
inc
rcl
pop
jbe
bound
push
setnp
sti
rolb
lret
ret
imul
xor
test
fcomip
and
fnstsw
inc
dec
sbb
orl
in
rcl
mov
lea
mov
ret
out
sbb
push
daa
jmp
mov
pop
mov
fnstenv
or
pop
push
out
fnstcw
pop
ret
fnstsw
xchg
push
sbb
mov
filds
mov
sti
push
lods
inc
lods
cwtl
in
mov
je
sar
js
jae
cmpsl
testl
jmp
cmp
lods
pop
lea
outsb
pop
mul
fcoml
popf
sti
and
or
imul
xchg
xchg
rorl
dec
testl
int
fistpl
out
cmp
push
jae
jbe
dec
shl
ret
repz
pop
stc
sti
cmp
movsb
mov
push
sti
xchg
lods
loopne
xorl
xchg
pop
mull
inc
fldt
dec
shll
ffree
mov
fucomi
popa
leave
inc
and
adc
jb
lock
arpl
lds
pop
shlb
mov
out
shlb
out
ret
shll
pop
inc
dec
fcoms
jmp
dec
mov
lds
aam
cmpl
or
sbb
lea
pop
sub
ljmp
push
lds
mov
cld
jecxz
fistps
jo
ja
clc
pushf
leave
aam
cltd
cmp
push
ss
dec
insb
fimull
fwait
cmp
push
inc
xchg
xchg
mov
shr
jae
mov
ret
adc
lds
ret
mov
sub
push
xorl
xchg
add
loope
ret
iret
cmpsb
cmpsl
shll
adc
cmp
xchg
out
xchg
call
notl
rolb
repz
xchg
pop
pop
sbb
fucomi
aam
adc
int
icebp
pop
aad
fs
fbstp
iret
push
pop
outsb
sbb
jno
push
aaa
sub
mov
fidivl
add
xchg
pop
sbb
xor
shll
mov
jnp
js
stos
enter
mov
or
scas
push
add
mov
cwtl
xchg
mov
out
adc
sti
iret
xchg
mov
outsl
lods
pop
insl
add
repz
data16
mov
in
loope
jecxz
or
inc
or
dec
stos
dec
movsb
dec
push
sub
je
fwait
sbb
sarb
pushf
jno
in
ret
in
pop
cmpsl
sbb
lret
cs
pop
dec
fwait
je
xchg
ja
cwtl
adc
lds
stos
movsb
sub
in
aam
cld
xlat
aad
xlat
ja
shlb
mov
fisubrl
mov
lods
rclb
fldenv
jne
lods
fsubrp
jmp
lds
dec
loopne
fldenv
jecxz
ret
mov
loop
xchg
mov
inc
xchg
jmp
cld
mov
mov
dec
ficoms
sti
pop
push
mov
mov
stos
out
ja
dec
test
aaa
mov
cltd
imul
lock
sahf
rcll
push
dec
out
cmp
mov
xchg
mull
lret
inc
xchg
aad
push
xchg
jo
mov
test
lahf
pop
pop
aad
fwait
fs
ret
je
and
repz
add
rclb
sbb
xlat
dec
fadd
adcl
ljmp
jmp
mov
insb
jnp
lahf
sarb
fidivl
push
push
mov
aas
xchg
and
testb
pop
dec
rorb
push
dec
jle
xor
mull
xchg
fcomi
mov
aam
jmp
lret
mov
cmp
xchg
addr16
loope
repz
sub
mov
push
aaa
sub
inc
xchg
mov
rcrb
lods
leave
cwtl
xchg
out
in
sub
mov
movl
dec
lea
rclb
pop
jmp
pop
xlat
cmc
and
push
or
rclb
das
roll
in
xchg
sub
fwait
dec
cmovno
jg
iret
test
icebp
push
push
subb
aas
lcall
jno
fld
testl
subb
in
add
mov
fidivl
push
out
fwait
sarl
mov
pop
js
push
mov
jbe
xchg
in
push
dec
cwtl
int3
rcr
sub
mov
rcrl
movsl
add
data16
lds
jno
push
pop
dec
xchg
mov
push
loope
fisubrs
mov
adc
popf
cltd
es
mov
stos
push
pop
pushf
jb
lret
fwait
in
mov
popf
pop
add
aas
repz
jbe
ss
and
lret
inc
push
fistpl
xchg
arpl
pusha
mov
test
ret
lods
cld
or
cli
daa
icebp
cmp
stos
in
movl
gs
out
jnp
push
pop
sbb
mov
dec
add
fucomi
adc
push
lods
popl
fwait
rcrb
adc
test
mov
shl
fcmovnu
pop
aaa
out
sti
push
jno
fstpt
lret
mov
mov
inc
mov
push
mov
ja
xchg
xchg
push
fadd
call
lret
xor
lret
sub
outsb
in
inc
dec
pushf
mov
nop
mov
scas
push
aaa
jle
push
inc
pop
lods
jae
and
std
dec
int3
fnstenv
cmp
ret
repz
xchg
dec
loope
out
cmp
repz
mov
mov
es
shll
mov
mov
cmc
rcll
sub
loopne
cld
fcoms
mov
pop
mov
mov
inc
lods
mov
std
sbb
push
pop
sbb
inc
fldcw
fwait
and
aam
aad
inc
stos
push
xchg
cltd
sahf
loope
stc
popa
pusha
stos
mov
stos
sarl
push
sbb
xor
lock
mov
mov
mov
pop
add
imull
mov
xchg
mov
jbe
mov
mov
popf
pop
fcmovu
mov
adcb
xchg
int
aad
mov
leave
rorb
divl
xchg
or
jbe
out
stos
movsb
fists
nop
shlb
pop
int3
cmpsl
out
ja
imull
jo
cwtl
out
mov
pop
push
lock
lret
push
jp
jae
or
sub
mov
fwait
movsl
sahf
inc
mov
aad
iret
pop
xchg
inc
gs
mov
lahf
daa
aam
lods
aad
inc
pop
lret
jnp
mov
or
mov
xor
dec
xchg
dec
xlat
add
jecxz
rol
add
cmc
sbb
lret
jp
leave
push
add
outsb
mov
negl
xor
stos
in
mov
push
mov
aad
sub
aad
xor
mov
imul
push
pop
cmp
xchg
xchg
filds
fisttps
xchg
fwait
into
xor
lret
push
stos
cmp
pop
pop
iret
dec
jecxz
xor
outsl
ret
cli
or
jecxz
jns
xor
rcl
mov
shll
rcl
pop
push
dec
inc
xchg
icebp
mov
or
cli
lret
repz
icebp
push
dec
loope
ficoml
jl
xlat
jg
xchg
fwait
and
adc
xor
ret
ret
jnp
and
cltd
jecxz
int
dec
inc
cmp
int
mul
and
jge
sti
cmc
xorl
mov
repz
cmp
rcrb
mov
out
gs
in
lahf
and
pop
arpl
out
cmpl
add
xchg
xchg
enter
push
push
xchg
xchg
fcmovnu
jb
fimull
fs
std
ss
mov
xor
mov
fmuls
ret
sarl
jecxz
push
pop
add
push
and
xchg
pusha
inc
out
dec
sub
sar
sub
cltd
mov
inc
xchg
xchg
je
adc
xchg
xor
pop
and
xchg
fistpll
lahf
add
rcr
mov
subb
jae
aad
imul
notl
std
dec
sbb
sbb
mov
add
jnp
rclb
call
xchg
xchg
jle
rol
pop
sub
outsl
insb
or
add
jg
pop
test
ret
ror
ficompl
add
xchg
icebp
cwtl
pop
push
and
mov
adc
mov
insb
in
mov
out
mov
dec
negb
push
mov
xchg
mov
sub
adc
lcall
das
decb
lret
lahf
xor
les
sbb
scas
dec
mov
dec
sbb
out
inc
fwait
mov
sarl
mov
pop
imul
or
mov
xchg
scas
mov
lds
lods
push
ja
je
inc
sbb
fcmovnbe
pop
xor
mov
or
jecxz
pop
pop
jle
xor
leave
xchg
aad
lcall
sbb
lods
pop
dec
pop
lret
fnstenv
mov
mov
inc
sbb
push
cld
jl
leave
sub
stc
fsts
popf
imul
cmpsl
aaa
pop
mov
icebp
mov
pushf
aam
sti
xor
repnz
jmp
cmp
lahf
jb
test
mov
lret
mov
dec
popf
lock
sahf
cmp
sbb
mov
fimull
mov
xlat
in
ret
shl
jle
leave
stos
jge
gs
lret
adc
jne
test
shll
ud0
lods
outsl
sbb
fstps
idivl
icebp
inc
cmp
lcall
test
xchg
cli
repz
pop
mov
adc
lret
jp
dec
pop
lock
lahf
sti
jbe
adc
out
push
lcall
adc
int3
std
dec
xchg
inc
cltd
and
pop
push
movsl
out
loope
out
ret
int3
enter
and
dec
push
mov
mov
lret
negl
lahf
add
fildll
loope
or
std
mov
push
int3
add
or
sub
stos
fldl2t
adc
xchg
mov
shlb
in
movsb
aad
stc
out
lret
ror
mov
xor
dec
dec
lock
scas
popa
push
aaa
jecxz
mov
call
scas
pop
push
cmp
cli
and
lods
mov
in
outsb
add
in
sub
sarb
cltd
frstor
shrl
mov
in
xor
fcoms
mov
mov
pop
pop
jb
scas
in
cltd
cltd
mov
dec
pop
lods
fwait
adc
pop
sti
push
mov
icebp
stos
cmp
xor
sub
inc
pop
lds
ffreep
mov
xor
jae
mov
jnp
not
popf
add
shr
test
mov
jecxz
fldenv
mov
add
pop
push
or
cli
mov
fidivl
and
int
and
popf
mov
push
aam
sti
push
es
push
mov
mov
xchg
pop
call
and
cmp
fwait
cwtl
rol
das
xor
mov
icebp
hlt
arpl
mov
fwait
or
xchg
adc
scas
and
mov
std
add
fildll
nop
push
mov
adc
push
mov
dec
mov
std
arpl
adc
fwait
push
sahf
xchg
mov
jbe
mov
sarl
aad
int3
lret
icebp
push
stc
aad
icebp
outsb
xor
pop
and
icebp
sub
aad
jbe
and
insl
ret
push
cmpsb
jmp
jecxz
data16
xchg
lret
pop
fistl
repz
xor
or
cmpsb
jp
and
mov
sbb
adc
adc
mov
icebp
xchg
shrl
mov
pop
ljmp
ss
stos
add
pop
xchg
std
mov
xor
mov
in
pop
xchg
push
sbb
fcomip
popf
mov
cmp
xchg
sub
fcmovnb
lds
jmp
pop
lahf
mov
mov
mov
push
sti
dec
xor
mov
inc
cmp
rcrb
rorl
mov
mov
addr16
in
fadds
fsubp
popf
ss
daa
iret
into
adc
lret
js
and
scas
cmp
cmp
lss
pop
pop
cmp
cli
xchg
inc
out
xchg
sub
xorl
pop
jmp
call
in
pop
aaa
dec
test
arpl
xacquire
and
out
ret
addr16
cmp
sub
mov
push
mov
push
stos
adcl
aam
inc
stc
fcoms
sub
lret
inc
fwait
mov
mov
xchg
call
dec
adc
popa
idiv
mov
pop
mov
mov
shll
fcomi
fisttpll
pop
cmc
into
push
or
arpl
add
int
call
push
cmpsl
jmp
dec
fistpll
mov
inc
fisttpl
pop
pop
inc
xchg
cmp
lcall
xchg
xchg
push
dec
lret
add
icebp
sarb
xlat
fnsave
je
pushw
cltd
xor
fld
cmp
cli
xor
xchg
xor
mov
lret
jecxz
ja
xchg
daa
out
enter
xor
loope
xchg
jecxz
iret
xor
insb
adc
xchg
cmpsb
dec
notl
sbb
scas
and
jecxz
ja
xor
in
jmp
in
rcrb
aaa
ficompl
xchg
dec
or
xchg
lods
sti
inc
imul
test
cmp
repnz
call
outsl
nop
xlat
sub
rcrl
or
mov
clc
addr16
jnp
int
xchg
pop
int3
cmpsb
mov
push
pushf
popa
inc
idivl
mov
or
aad
adc
shl
ret
inc
mov
pop
scas
jb
dec
out
aad
add
mov
out
subl
mov
jae
rcrb
jbe
jae
out
xchg
xchg
add
loop
out
xor
ret
call
mov
outsl
or
mov
mov
negb
xchg
jecxz
insb
cmp
jp
mov
fs
lods
xchg
jmp
icebp
sub
push
jo
arpl
mov
push
dec
xchg
jecxz
cli
jmp
mov
xchg
mulb
lcall
jae
lods
dec
mov
ficoml
sub
lds
pop
sbb
scas
shlb
ffreep
or
fs
xchg
xchg
and
sar
adc
push
jle
outsb
and
leave
rcrl
mov
fmuls
out
out
xlat
icebp
rclb
fwait
xlat
jo
adc
fwait
imul
pop
add
sbb
movsl
daa
hlt
mov
dec
mov
fcoms
cltd
adc
push
pop
inc
shll
test
jge
movsl
jle
out
ror
adcl
jg
xchg
pop
sti
pop
imul
mov
lock
shll
ljmp
in
int3
aaa
mov
pusha
out
xchg
insl
pop
inc
push
cmp
pop
addr16
rcr
out
jle
and
stos
mov
pop
push
aam
pop
sbb
mov
daa
rclb
add
xchg
rcll
shll
mov
cmpsb
xlat
mov
loope
shll
iret
mov
pop
xchg
mov
popf
ret
push
dec
inc
outsl
or
mov
ja
les
cmp
shl
js
dec
add
mov
lods
jecxz
sarb
out
fwait
stos
ret
shlb
loope
cmpsl
jecxz
pop
cmp
jge
adc
lds
inc
iret
lret
push
xchg
pop
dec
rcll
rorl
js
jge
aaa
fisttps
jecxz
out
rol
push
sbb
and
mov
jae
add
lds
pop
sub
and
sub
sbb
mov
sti
cmp
mov
push
mov
sbb
mov
and
fnstcw
fldcw
pop
push
sbb
sub
test
push
iret
xlat
ljmp
movsl
add
in
pop
push
sti
lret
or
in
add
mov
xchg
push
inc
jne
xchg
mov
pop
in
sub
repnz
pusha
cmp
arpl
shl
xchg
lds
lret
aad
repz
push
sub
cmpsb
aam
and
fbld
push
jbe
mov
lods
negl
lock
push
mov
inc
inc
imul
adc
push
lahf
cmp
xchg
mov
mov
aas
jb
xor
inc
pop
std
push
inc
cmp
xchg
popf
pushf
sub
in
loope
stos
movsl
mov
dec
adc
mov
sar
bound
ret
xchg
out
or
inc
xlat
add
imul
lods
int
dec
xor
cld
mov
outsb
outsl
in
icebp
inc
scas
sub
mov
ret
aad
clc
aam
mov
jge
xchg
ret
sarb
loop
loopne
stos
ret
sub
lahf
pop
mov
in
jno
and
std
into
popf
int3
jge
aam
mov
xchg
mov
pop
push
ret
cmpsb
fucomip
adc
ret
jae
ret
rorb
out
testl
mov
pop
ficompl
mov
cmp
push
in
shl
mov
notl
sub
rorb
add
xchg
mov
mov
in
div
leave
push
xor
mov
xchg
loop
cli
push
xchg
mov
fwait
cmp
dec
mov
adc
cmp
pop
mov
fucomp
out
stos
lock
pop
mov
push
aad
pop
jecxz
subl
jmp
loope
fs
js
fldenv
push
xor
sbb
xchg
cmp
jecxz
lss
out
pop
cmpb
pop
xchg
sub
pop
and
int
lret
pop
mov
and
jp
iret
rorl
stos
fdivrl
icebp
stc
subl
sub
inc
lods
jae
sub
xorl
imull
shrb
adc
and
shlb
sub
mov
repz
jp
mov
mov
push
out
mov
jecxz
loopne
orb
stos
mov
inc
out
mov
ret
sti
sbb
sub
cmp
sahf
lcall
adc
lds
cmc
push
lcall
mov
dec
mov
pop
cmp
rorb
sub
cmp
xchg
push
outsl
inc
ja
adc
mov
sbb
dec
adc
mov
jne
or
je
loope
movsl
inc
dec
mov
repz
jecxz
jnp
push
mov
sub
lcall
jno
cmc
sub
adc
mov
fisttpl
dec
sbb
loope
daa
rcrl
cmp
xchg
outsl
out
mov
mov
xchg
mov
jle
mov
lret
mov
pop
xchg
push
nop
pop
adc
aad
loope
insb
push
adc
movsl
ret
mov
push
cltd
sarl
lds
mov
imul
mov
fwait
ror
mov
fnsave
xchg
mov
popf
int
mov
in
jae
fsubs
ret
insb
cmpsb
push
faddl
bound
push
lods
or
test
xor
shll
popa
jbe
imul
lret
xor
loope
pop
popf
decl
xchg
out
or
cld
out
mov
popf
lods
pop
ret
dec
cvtdq2ps
fwait
and
nop
push
jecxz
icebp
jno
push
lret
mov
jecxz
xor
or
cmp
mov
pop
stc
push
sbb
xchg
fistps
mov
rcrb
sti
icebp
xchg
push
sarb
mov
iret
or
sbb
aaa
xor
fwait
out
repz
pop
lock
ret
mov
shll
stos
sar
sbb
aam
out
mov
bound
or
daa
sbb
mov
sbb
fistpl
mov
pop
xchg
out
jmp
aam
loop
fistpll
das
andb
mov
jne
and
int3
lret
testl
nop
and
rcr
clc
inc
imul
xchg
adc
idiv
rorl
insb
xlat
test
cmp
arpl
aaa
sbb
cmpl
or
mov
shlb
fldt
neg
xchg
lret
loope
testb
xchg
or
rclb
cmpsb
jne
push
xchg
lret
out
icebp
fstps
cmc
mov
dec
xchg
testb
shrb
xlat
je
push
movb
add
push
xor
movsl
jmp
xchg
aad
xchg
jo
and
mov
pop
xchg
arpl
pop
dec
mov
sbb
and
fisttps
pop
mov
ss
push
sbb
cmpsl
loope
or
cmpsl
aad
repz
pop
xlat
add
pop
jns
popa
lea
dec
inc
add
stos
sarb
daa
sarl
int
repz
push
ja
imul
push
loope
adc
mov
shl
xor
pop
repz
in
push
pop
mov
mov
shlb
test
insl
rcr
jecxz
mov
cmp
or
jg
in
mov
adc
mov
jae
sub
xchg
ret
int
fstps
add
lock
aad
cmc
dec
xchg
mov
in
shl
xor
stos
clc
mov
xchg
notl
lds
pop
mov
sti
div
aad
loop
shl
push
sbb
jmp
mov
mov
stos
out
inc
pop
aam
jbe
jecxz
ret
nop
scas
pop
sbb
outsl
loope
jg
xor
mov
xchg
shlb
fwait
push
xchg
adc
enter
jae
push
test
subl
test
cmp
add
xchg
dec
jmp
pop
pushf
xor
ja
arpl
mov
shl
scas
mov
dec
fsubs
leave
mov
lret
xchg
div
xchg
fcomip
arpl
hlt
ficoml
in
mov
inc
dec
frndint
cmpsb
xchg
pop
int3
xlat
int
fidivl
or
adc
insl
ffreep
in
adc
loop
mov
pop
fistpl
dec
cmp
adc
pop
jg
mov
test
jp
mov
mov
xchg
idiv
les
in
jae
inc
xchg
xchg
fsts
mov
dec
leave
xchg
cltd
mov
xor
mov
adc
mov
jg
adc
enter
ret
mov
add
jne
jae
dec
fistpll
add
mov
inc
jle
lahf
subl
rol
lock
fyl2x
sti
xchg
push
push
arpl
negl
mov
sub
cltd
mov
and
pop
pusha
in
jle
sbb
jo
sub
and
lret
mov
fcmovnbe
push
hlt
mov
stos
mov
lret
insl
je
mov
js
mov
inc
adc
jmp
ja
imul
or
mov
aad
mov
xor
pop
or
ljmp
clc
mov
mov
lret
test
or
out
mov
fdivr
stos
test
or
out
je
jnp
ret
std
mov
inc
xor
mov
scas
test
mov
jnp
cmc
jbe
dec
xor
mov
aas
int
pop
fwait
mov
push
push
add
push
adc
mov
and
push
jno
flds
shl
in
add
rcrb
call
repnz
mov
adc
jae
push
mov
mov
pop
xchg
pop
fwait
rclb
loope
xchg
mov
sbb
sub
push
push
into
ja
dec
call
xchg
mov
mov
jge
fldt
sbbb
shlb
xchg
mov
mov
ret
shlb
movsb
add
cld
idivl
mov
adc
adc
je
sbb
jnp
in
ret
push
ffreep
xor
fidivrs
incb
dec
test
jmp
jecxz
ja
in
sbb
int
or
stc
jg
mov
fs
inc
jns
xchg
enter
cli
adc
and
cwtl
aad
mov
add
xchg
xchg
dec
adc
jmp
fld
pop
leave
sarb
adc
xor
jecxz
popf
jae
jge
pop
xchg
loope
push
mov
sbb
lret
and
out
mov
pusha
loope
jecxz
xchg
mov
inc
outsb
test
push
dec
aad
pop
add
stos
mov
fcoms
or
mov
or
pop
icebp
push
mov
mov
adc
out
stos
jecxz
outsl
xor
pop
or
fwait
pop
dec
push
dec
dec
inc
repnz
mov
rcrb
sbb
push
test
ret
notl
push
pop
cmp
push
sti
rcrl
leave
loope
mov
pop
int
sbb
mov
je
scas
mov
jge
inc
cmp
xchg
iret
std
cmc
jmp
cmp
enter
pushf
jge
mov
jecxz
fs
xchg
lret
push
jnp
adc
stos
mov
fcoms
mov
or
mov
jmp
mov
mov
adc
cmpsb
cmp
push
addb
mov
idiv
and
sti
repz
je
inc
mov
inc
xor
pop
jb
arpl
jl
pop
jmp
pop
rol
imul
xchg
inc
add
xchg
into
push
dec
lret
icebp
fisubs
fwait
lahf
or
jbe
iret
ret
shrb
div
insb
adcl
out
mov
fwait
sarl
mov
aad
xor
or
frstor
mov
rol
sti
subb
sbb
jae
jmp
das
fwait
adc
lea
xchg
xchg
xor
out
dec
loope
push
repnz
aas
cmp
popf
jmp
xlat
std
inc
adc
dec
cmp
popf
mov
ret
aam
mov
fistpll
jne
out
out
shrl
push
das
push
jae
add
lods
stos
xchg
pop
sub
sbb
out
inc
sti
add
cmp
shrb
aaa
lret
mov
test
lahf
mov
mov
sti
hlt
in
lahf
xchg
pop
inc
shll
inc
xor
pop
mov
popa
lds
mov
mov
mov
mov
or
rorb
es
push
push
stc
xchg
out
shlb
iret
cmp
int
push
add
int
or
mov
jbe
mov
dec
inc
jg
cmc
jl
or
shlb
xchg
fcoml
mov
fistpll
pop
test
mov
ret
arpl
into
fistpl
lret
or
mov
pop
push
xchg
or
shll
fildl
pop
jp
push
or
xchg
filds
lahf
fidivl
imul
daa
cmpsb
fidivl
pop
out
pop
std
sbb
insl
es
jo
fwait
or
jp
mov
pop
sbb
push
out
sbb
fcmovnb
add
lret
fwait
outsb
clc
leave
jae
mov
mov
push
cld
inc
jecxz
ret
roll
inc
int3
mov
inc
aad
mov
lret
loopne
in
call
jecxz
inc
ljmp
jnp
jo
push
pop
inc
enter
pop
jns
rcrl
cli
xchg
ror
test
sub
ffreep
jbe
push
sbb
sti
lcall
xor
ja
movsb
fcmovnu
cmp
push
sub
imul
jae
sbb
sbb
out
dec
add
mov
pop
fistps
rcl
outsb
in
inc
stos
or
test
fsubrs
xor
lret
notb
or
push
adc
jecxz
or
leave
jmp
xchg
lahf
fwait
lret
imull
ljmp
stos
sub
subb
idivl
or
inc
popf
std
popa
sbb
ss
mov
or
push
mov
jae
jns
xlat
lds
sbb
loop
mov
hlt
stos
ror
movsl
int
jmp
add
ds
pop
std
lods
arpl
outsb
xchg
mov
fcomi
pop
push
dec
push
mov
adc
sub
les
sub
adc
cmpsl
cmp
pop
and
aad
in
insl
lret
cmpsl
icebp
test
aad
and
fwait
mov
and
aad
jno
stos
sbbb
inc
lret
fnsave
mov
mov
imull
xor
cmpsl
sar
clc
pop
push
xor
dec
dec
out
ret
rcrb
push
int3
sbb
decb
and
mov
jle
or
int
pop
cmp
loope
xchg
xchg
ds
mov
sbb
fwait
cmpsb
fisttpl
mov
rcr
mov
jo
lahf
inc
popa
out
divl
xlat
cmc
xchg
xchg
lret
xchg
sahf
mov
cli
jne
push
iret
faddl
stos
or
xchg
pop
push
outsl
aas
sbb
insl
push
stc
in
mov
push
fnsave
cmpsl
cmpl
jbe
sub
sub
mov
push
stos
cmpsl
pushf
mov
ss
repz
adc
push
add
xchg
or
icebp
fldl
rcrb
loop
negl
sbb
test
mov
cwtl
sbb
pop
xchg
cmp
pop
cli
push
jo
fimuls
pop
jmp
neg
lret
clc
in
divl
and
mov
mov
cltd
int
in
xchg
push
or
mov
scas
ss
pop
sbb
popl
mov
das
mov
add
mov
mov
test
mov
inc
mov
pop
loopne
dec
stos
adc
inc
inc
fucomi
sti
aad
pop
repnz
out
sti
out
aad
push
inc
lds
or
mov
xor
pop
sub
add
xlat
mov
push
xchg
add
int
or
out
jo
mov
sti
mov
add
lret
mov
ja
jecxz
mov
pop
cltd
fildll
mov
or
icebp
aas
xchg
mov
cmpsb
repz
lahf
shrb
jae
xchg
fists
push
push
pop
bound
insb
xchg
mov
sti
inc
xchg
or
push
inc
pop
sbb
addr16
rcr
xor
clc
mov
jg
shl
in
outsl
xchg
arpl
popa
inc
adc
push
adc
inc
fsubrl
xor
int
adc
push
push
std
pop
repnz
adc
mov
subb
cld
repz
jns
rolb
sub
xchg
xlat
and
ret
dec
es
push
vpmullw
push
subl
pop
inc
out
es
stos
sti
cmp
rcll
push
dec
outsb
std
push
inc
dec
mov
movsl
mov
repz
movsl
add
mov
lods
ss
or
jecxz
scas
rorl
xchg
jmp
das
fmuls
ffreep
mov
sbb
xchg
aad
xchg
push
dec
inc
xchg
adc
pop
push
ljmp
sbb
mov
mov
add
fxtract
popf
subb
mov
inc
pop
push
xor
push
scas
dec
pop
mov
dec
int
dec
sub
mov
fistpl
pop
and
sub
push
pop
pushl
xchg
push
daa
dec
jae
fadd
out
fistps
fsubrs
mov
mov
pop
js
test
dec
xlat
fstpl
test
pop
or
call
or
jecxz
mov
mov
icebp
scas
and
aad
fnstenv
mov
xlat
fcoms
push
aaa
mov
sub
xor
rcrl
push
sarb
mov
cmpsl
leave
xchg
push
fildll
mov
sub
dec
jl
out
jle
std
mov
popf
mov
rcl
mov
jmp
shrl
jmp
lods
xor
int
ret
add
das
rclb
pop
nop
or
mov
pop
add
in
cld
test
lea
leave
jnp
dec
or
xchg
mov
stos
ret
jmp
std
push
lcall
rcrl
or
mov
mov
cwtl
mov
neg
int3
xor
dec
sbb
adc
outsb
lret
lret
inc
cmp
lods
shl
jb
test
lahf
ret
arpl
test
test
sbb
lret
jecxz
insb
sbb
pop
shr
add
icebp
test
mov
ret
xor
ret
and
vmulsd
adc
daa
test
xchg
inc
jmp
xchg
fisubl
aad
cmpsl
mov
mov
inc
add
adc
cs
scas
mov
cmp
lret
shll
test
xlat
push
sub
cld
mov
dec
or
cmp
rcl
and
sahf
shlb
dec
ret
fists
push
add
push
leave
icebp
aas
test
pop
filds
xor
push
fcos
push
and
mov
std
int
mov
mov
push
xchg
mov
in
ss
mul
mov
mov
stos
pushf
cli
stc
push
push
xchg
lds
movsl
frstor
lret
idivl
out
and
sub
xchg
sbb
dec
out
scas
mov
inc
stos
cmp
lahf
rep
ret
mov
cltd
jb
jl
les
mov
pop
adc
in
or
mov
jno
jbe
cmc
out
rcrb
mov
loopne
loop
bound
popa
test
dec
out
mov
pop
aam
std
or
out
mov
fistpll
fiadds
xchg
imul
adc
test
in
xlat
arpl
lods
xchg
mov
dec
sub
push
jb
scas
xchg
ret
rorb
test
push
sti
mov
ret
fwait
push
mov
or
mov
push
imul
das
push
xchg
fucomip
shrb
js
and
push
inc
xor
stos
sub
out
lret
push
pop
lods
scas
dec
leave
cmp
sbb
fdivl
pop
repz
popa
fcmovnbe
rcrl
addr16
out
fisubl
push
pusha
push
lds
repz
xchg
loope
and
movl
sarl
testl
sbb
sub
mov
ficompl
stos
cmpl
xchg
jecxz
xchg
icebp
adc
jo
fmul
daa
xchg
fsubp
xor
and
in
ret
push
insb
mov
repnz
not
movsl
jmp
ret
push
jo
sub
insb
out
jecxz
ficoml
fcomi
test
mov
mov
xor
mov
ret
cmpsb
roll
stos
cmc
push
repz
stos
sbb
xchg
leave
sub
xchg
mov
icebp
xor
inc
test
mov
in
rcrb
push
push
mov
out
jmp
cmpsl
xor
sarb
adc
jns
leave
sarl
std
xlat
xchg
ficoml
jg
mov
adcl
jno
outsb
fst
sbb
mov
dec
mov
mov
mov
stc
in
idivb
sti
mov
xchg
dec
adc
ret
cli
inc
and
std
inc
ffreep
lret
movsl
movsb
mov
xchg
pop
inc
movsl
mov
aad
pusha
and
fwait
testl
xchg
sbbl
hlt
imul
popf
test
mov
mov
pop
push
fwait
mov
xchg
adc
push
mov
scas
repz
into
je
and
inc
movsb
xor
mov
xchg
xchg
fstpl
das
jmp
pop
xchg
addl
mov
xor
popa
out
and
mov
dec
jb
ficompl
rcrl
hlt
sbb
lods
mov
stos
ret
pop
adc
pop
sbb
cmpsl
notb
dec
adc
adcl
in
mov
in
inc
xchg
scas
mov
int
sub
imul
leave
int3
js
pop
call
mov
jb
int3
xor
mov
mov
mov
aad
sub
stos
shl
cli
jle
xor
dec
jae
xchg
push
add
ret
ds
out
notl
rcr
dec
add
sahf
xchg
mov
mov
hlt
mov
push
push
xchg
hlt
fisubrl
pushf
pop
mov
ret
call
icebp
mov
mov
adc
ss
adc
repz
sbb
test
mov
inc
das
xor
add
jae
inc
aad
xchg
fistps
bound
push
lods
in
fbld
xor
mov
out
pusha
xchg
sti
push
mov
loopne
lret
pop
das
sti
nop
pop
mov
xchg
ja
mov
fucomi
mov
mov
and
cmpsl
and
lea
jecxz
jmp
mov
lds
mov
mov
jmp
pusha
cltd
in
aad
pop
mov
inc
jge
or
cwtl
fwait
test
jae
lea
sbb
inc
and
loopne
lret
ret
shl
lret
jmp
ret
push
mov
dec
stc
stos
fcomip
jmp
push
sbb
push
test
jecxz
sbb
hlt
jp
sbb
mov
push
push
push
fiaddl
mov
imul
testl
fistpl
lahf
sar
pushf
pop
jns
repz
pusha
cmp
insl
les
shrl
dec
adc
cmp
adc
xchg
lret
sahf
arpl
aad
jecxz
pop
pop
xchg
mov
repnz
push
in
int3
insl
or
lret
lods
inc
rol
ja
test
cmp
xor
movsl
test
out
loopne
xchg
fstps
xor
lds
adc
lods
mov
inc
jo
xorl
xor
push
sbb
icebp
sub
sbb
popf
test
mov
ror
push
addr16
ret
call
test
aad
mov
adc
sbb
mov
repz
repz
sub
sbb
outsl
repz
divb
mov
add
test
mov
lock
xchg
adc
xchg
lcall
push
or
pop
mov
adc
scas
cmp
fwait
clc
pusha
pop
negl
int
ret
mov
pop
push
int3
sub
lods
push
sbb
dec
ljmp
mov
ret
movsl
add
stc
mov
mov
fldl
ljmp
mov
nop
cltd
mov
push
das
xchg
sbb
mov
fdivr
out
mov
xchg
push
shll
or
push
fcmovnu
xchg
lret
stos
cmpsb
loope
rcrl
stc
mov
ret
out
test
jbe
mov
repnz
xor
fstpt
or
sbb
fistpl
push
dec
inc
and
andb
mov
arpl
test
fistpl
jmp
mov
add
inc
pop
inc
push
fsub
rcl
mov
push
in
mov
adc
jae
enter
adc
push
les
push
xchg
pop
imul
jae
xorb
ss
and
mov
pop
mov
sbb
test
fwait
rcr
xor
pop
nop
inc
sarl
outsb
popf
loope
ret
xchg
mov
shrb
jge
add
mov
pop
add
loop
rorb
adc
add
iret
ret
rcrb
mov
nop
or
popf
or
jnp
xchg
xor
fmuls
and
lret
mov
inc
loop
imull
imull
sarb
sub
cwtl
sti
xchg
fadds
and
inc
jns
xchg
dec
and
add
shrb
repz
call
push
neg
mov
mov
fwait
adc
xchg
loope
neg
or
js
adc
adc
jne
fmull
pop
fmul
xchg
jmp
fistpl
jo
ss
fwait
test
scas
push
or
sub
sti
stos
aad
cmp
pusha
out
sbb
in
pop
mov
adc
pop
sbb
fldt
mov
dec
xchg
aad
ja
aad
cli
pop
xor
and
lods
arpl
sub
xor
mov
mov
push
adc
mov
leave
outsl
outsb
ror
pop
ffreep
sub
cmpsl
or
adc
mov
shr
out
dec
lods
scas
je
iret
lret
mov
ficoml
jns
out
fnstcw
jmp
sbb
in
fcmovu
mov
lods
pop
mov
lret
inc
inc
pop
fisubl
fldl
popf
jmp
xchg
rep
pcmpeqb
mov
cmpb
repz
xlat
mov
fistps
cmpsb
lret
shrl
orl
popf
xchg
lods
ss
mov
scas
sbb
and
xchg
push
data16
xor
mov
jle
jecxz
pop
jge
xor
adc
std
xlat
mov
and
or
xchg
mov
icebp
hlt
inc
mov
cmpsl
addr16
stos
xchg
pop
and
in
push
mov
add
leave
incb
test
adc
inc
xchg
sub
ret
xlat
pop
push
fsubrs
shrb
scas
repz
jbe
andl
xchg
movl
sub
mov
std
out
mov
test
adc
xorl
mov
mov
dec
jae
cwtl
icebp
or
shrb
xchg
xor
jo
stos
mov
arpl
popf
pop
xchg
roll
dec
sub
jmp
cmpsb
mov
aaa
xlat
gs
pop
push
adc
outsl
pop
outsb
jmp
mov
rorb
lods
int
jecxz
std
add
mov
mov
call
xchg
cld
testl
fcomip
jecxz
dec
ret
or
mov
iret
mov
add
rcrb
pop
vpsrad
xchg
loopne
dec
je
fwait
call
rolb
in
inc
push
flds
lahf
in
ret
sub
in
pop
lea
inc
mov
into
testl
sahf
icebp
clc
jp
shrl
aaa
jb
xchg
cli
adc
inc
lds
sub
outsl
mov
inc
repz
inc
inc
in
loope
out
jge
xchg
outsb
pop
jno
inc
cmpsl
loope
pop
mov
mov
out
sar
scas
icebp
lret
inc
aad
push
cmpsl
jmp
or
inc
xor
int
adc
inc
std
gs
data16
aad
lock
sub
imul
mov
test
subl
inc
daa
inc
mov
lret
movsb
mov
mov
lret
lret
pop
in
cmp
incb
pushf
idiv
mov
sbb
jmp
pop
dec
xchg
cmc
xor
decb
rcll
paddb
adc
push
dec
jnp
cmc
xlat
jno
shll
mov
pop
testb
xchg
pop
in
jecxz
sbb
cmp
mov
leave
andb
sti
fcomps
nop
jmp
inc
xor
inc
sbb
sub
mov
jle
push
xchg
ret
shrl
mov
push
xor
push
ret
adc
outsb
lahf
icebp
stos
aad
out
mov
imul
pop
icebp
lods
je
or
in
pushf
cwtl
stos
psraw
and
mov
popf
xchg
adc
mov
mov
lds
aas
push
xor
stc
aam
pop
popa
pop
mov
notl
sub
or
lret
adc
and
jb
dec
inc
arpl
cmpsl
aad
loope
fistps
inc
cld
ljmp
dec
xlat
fistl
std
cmpsl
addb
xor
in
into
or
fldt
cmc
arpl
sarb
popa
ffreep
fistpll
repz
dec
mov
out
insb
outsb
mov
fstpl
mov
aaa
fs
push
inc
push
popl
icebp
hlt
and
mov
jecxz
sub
nop
dec
cmp
dec
test
popa
xchg
std
xchg
addl
rep
cmp
push
clc
stc
mov
push
cmp
icebp
out
shrl
movsb
loope
lods
test
pop
in
aad
lret
add
sahf
cmpsl
jp
stc
outsl
xor
or
leave
jne
pop
mov
jae
xor
pop
nop
loop
jnp
pop
sub
push
out
mov
fistpll
popf
out
add
repz
jae
cmp
shr
mov
pop
push
pusha
xchg
mov
cmp
pop
lahf
fcoml
movsl
mov
fsubrs
ds
iret
fcomi
testl
adc
in
xor
xchg
divl
xchg
scas
popf
stos
xor
fstl
mov
testl
popf
push
sbb
std
mov
jle
cld
mov
add
mov
inc
out
inc
and
inc
sbb
mov
rol
pop
in
pop
dec
xchg
ret
sub
mov
gs
xchg
adc
dec
imul
into
push
jae
data16
pop
pop
push
outsb
mov
sbb
sub
sti
test
in
scas
pop
and
xchg
sbb
popa
ss
fwait
jnp
loope
mov
lret
xchg
cmpsl
cmc
and
pop
jl
jnp
dec
mov
notb
xchg
xchg
fidivrl
inc
test
pop
fyl2x
hlt
cwtl
xchg
cmpsl
inc
mov
jecxz
aad
inc
mov
into
arpl
call
cmp
jnp
rcrb
lcall
lods
xchg
repnz
dec
scas
leave
jle
ret
out
cltd
lret
xlat
icebp
sub
imul
das
lods
xchg
jecxz
sti
mov
es
lret
xor
inc
mov
sbb
ja
cs
pop
cmc
push
lods
pop
pop
push
add
xchg
mov
mov
cltd
shrl
push
test
sub
arpl
ja
xor
cli
loope
push
icebp
shl
aad
in
je
mov
icebp
xor
or
fwait
and
cmp
mov
inc
xchg
test
imul
or
lods
jo
cwtl
mov
mov
inc
push
or
xor
jns
movsb
jge
xor
or
push
pop
rclb
push
xor
and
bound
mov
push
fstps
scas
dec
jnp
xchg
fsts
mov
sub
aad
filds
cltd
mov
pop
xorl
out
rorl
pop
incb
rcl
std
rorb
pop
loopne
xchg
hlt
cmp
inc
int
loop
loopne
lods
pop
out
push
xchg
xorb
mov
lods
ja
loop
xchg
push
adc
or
inc
lcall
scas
pop
clc
mov
aaa
aas
xchg
jmp
mov
sarb
rol
cmp
inc
pop
push
jo
lahf
pop
jl
fists
sub
dec
rcrb
mov
fwait
ret
push
cs
xchg
jl
shrb
fildl
sbb
xchg
into
xchg
es
icebp
fcmovb
scas
imul
fcomps
add
pop
push
jecxz
aad
arpl
aam
jb
add
cmp
sarl
scas
xlat
cmp
push
out
fxch
ret
or
mull
mov
and
out
ss
ficoml
insb
scas
lret
lahf
xor
xchg
ret
shl
push
add
pusha
push
hlt
fcmovnbe
add
lock
or
mov
mov
fbld
fdivl
push
stos
std
sub
mov
in
cmc
adc
xchg
dec
mov
dec
cmc
rcll
idivl
xlat
sub
popa
and
pop
dec
sub
fistpl
cmpsb
shlb
lret
adcb
cmp
stc
sub
jecxz
fcomi
mov
stos
mov
mov
testl
sbb
sbb
aas
int
ja
in
or
mov
adc
sbb
ret
inc
daa
dec
rcll
out
pop
ret
mov
pop
xor
repz
xor
loope
xchg
xchg
out
loop
aam
repz
repnz
aad
fisttpll
add
and
sbb
and
fcmovbe
push
jl
repz
inc
into
sub
xchg
scas
ror
jbe
xchg
pop
fimull
mov
stc
fdivs
mov
jecxz
ret
les
jmp
repz
icebp
push
or
fs
rol
or
add
jb
fs
repz
jmp
add
lret
loope
mov
ret
push
cmc
imul
lret
push
add
cmp
fsubs
test
jp
xchg
adc
in
out
ror
lcall
shlb
lods
mov
mov
mov
rcrb
pop
xchg
mov
rol
pop
call
adc
adc
lahf
or
xchg
xor
or
xlat
enter
movsl
ret
sbb
adc
popa
dec
cmpl
repz
sbb
xchg
popf
ret
scas
mov
ret
loop
into
js
mov
roll
pusha
aad
or
adc
lcall
sub
out
pop
ljmp
xchg
sbb
push
cmp
fldz
push
hlt
mov
neg
lea
call
movsl
fists
inc
enter
aam
jg
pop
fucomi
popf
mov
xchg
mov
mov
inc
mov
jns
mov
cmpsl
stos
add
push
movsl
and
aaa
jg
adc
repz
sbb
mov
jl
xor
add
lahf
sub
sub
std
imul
jno
jo
sbb
jecxz
testl
mov
cltd
push
mov
sahf
aad
or
cmc
inc
loop
xchg
mulb
stc
pop
pop
jl
scas
or
sub
and
outsl
sbb
mov
mov
mov
lods
jecxz
ret
mov
inc
sbb
inc
es
inc
pop
jno
aam
lret
inc
icebp
repz
mov
sub
jp
add
add
test
ds
jmp
pop
xchg
fbld
inc
mov
dec
je
jmp
cmp
cmp
lods
lds
jb
jnp
addb
pop
lret
adc
xchg
xchg
jbe
sub
lahf
scas
sbb
xchg
sti
pop
add
mov
ret
xor
jno
jecxz
std
repz
mov
hlt
mov
movsl
fstl
mov
cmp
xchg
ret
rcll
xchg
xchg
push
fwait
lods
mov
fistpll
mul
pop
mov
rorb
or
ret
xlat
movsl
lea
xchg
xchg
in
jns
ds
ffreep
or
rolb
aam
xlat
push
mov
sti
in
lret
imul
pop
rolb
mov
fwait
es
loopne
ret
test
mull
jnp
loope
mov
adc
jle
sbb
mov
ljmp
jecxz
sti
mov
hlt
and
cmpsb
sbb
filds
popf
xchg
jo
cwtl
stos
mov
lods
leave
aaa
lret
push
neg
inc
mov
dec
insl
mov
push
enter
jecxz
ja
cmc
or
sbb
shll
dec
bswap
xchg
lahf
inc
rorb
pusha
inc
dec
jg
in
cmp
pushf
fildll
stc
sbb
ljmp
rcl
pop
cmp
test
fcmovne
stos
lahf
dec
sti
mov
fcmovbe
into
cli
ror
arpl
xor
pop
push
xor
fwait
adc
mov
outsb
shrl
out
aam
adc
jmp
negl
sbb
inc
jo
xchg
rcr
icebp
flds
mov
icebp
inc
cmpsb
aad
jne
and
out
in
push
outsl
loopne
sub
shr
mov
xchg
ss
add
repz
push
loopne
ljmp
std
out
and
push
push
movb
aas
out
xor
sarb
pop
scas
inc
adc
in
ret
stos
fwait
xlat
loope
rolb
in
sbb
cmp
fdivrs
and
inc
jecxz
jp
add
mov
adc
mov
movsl
aas
pop
push
ja
sbb
loope
ret
test
mov
mov
push
testl
sti
sbb
jne
stc
lret
pop
xor
lea
sti
lods
int
or
sbb
xlat
push
cmp
fistps
imul
adc
aad
ss
inc
fldenv
daa
fistps
mov
in
xchg
xor
and
rorb
mull
xchg
add
pop
inc
leave
xchg
int3
shlb
in
sbb
pop
xchg
pop
mov
push
mov
shll
mov
fwait
and
fistps
and
cltd
repz
jb
mov
sti
imul
dec
mov
ds
adc
xchg
sbb
mov
adc
pop
idiv
fldl
fs
jge
mov
mov
addr16
or
movsl
xlat
xor
adc
fldlg2
xchg
add
xor
fildl
rcrl
iret
cmp
insb
scas
xor
dec
push
cltd
jecxz
outsl
adc
cwtl
stos
bound
div
mov
sbb
mov
out
push
enter
popa
lahf
mov
imul
jl
repnz
xchg
call
aaa
push
ja
icebp
int
mov
lods
icebp
sbb
sarb
lahf
addl
das
bound
lret
fs
arpl
xchg
mov
dec
les
call
loop
sub
lret
jmp
out
in
sub
in
xor
daa
jo
int3
ret
div
lahf
lds
lods
jnp
add
imul
lret
pop
jbe
lods
in
mov
flds
les
mov
lods
xor
out
shrl
aaa
lret
popa
fwait
cmc
fdivrp
push
sub
mov
movsb
inc
mov
inc
popf
mov
mov
in
lret
xor
out
lods
repz
aad
popa
push
lret
dec
daa
lea
xchg
adc
scas
ret
and
rol
add
jns
hlt
and
mulb
jo
stos
jge
mov
mov
mov
push
cmp
stos
xchg
ror
and
and
push
clc
mov
fstpt
cmpsb
rorl
inc
xchg
mov
movsb
negb
lret
jae
lea
dec
dec
and
rol
shlb
xchg
pop
dec
mov
xchg
or
pop
repz
addr16
mov
ds
outsl
xor
ret
call
inc
lret
shll
or
dec
jle
jbe
xchg
sub
sub
push
xchg
pop
mov
and
lods
aam
add
shll
cmp
mov
push
out
ljmp
lret
insl
icebp
scas
push
aad
pop
movsl
add
dec
push
std
ret
or
sub
stc
mov
jmp
shl
pop
mov
sbb
xchg
jecxz
ja
pop
lret
push
and
jecxz
out
movsl
insl
sub
iret
sbb
pop
push
pop
push
mov
lea
and
xchg
add
pop
add
xorb
ret
enter
jg
lret
xor
mov
and
lcall
cli
adc
scas
bound
mov
dec
xchg
inc
or
mov
jmp
shlb
jg
and
add
sbbl
mov
inc
inc
test
movsb
fwait
imul
fcomp
sbb
push
loop
out
jecxz
mov
out
pop
repz
push
mov
loop
push
pop
sbb
sarl
lret
scas
outsb
push
xor
aaa
mov
jb
sahf
push
ret
in
cltd
mov
clc
sub
ret
pop
loop
mov
ljmp
cwtl
or
repz
sti
cli
fwait
cs
pop
sbb
or
or
mov
out
cmp
mov
lods
lahf
loop
push
mov
mov
vminps
int
das
repz
mov
test
xchg
sub
rcr
repz
jecxz
xor
fdivl
in
ljmp
sbb
shl
pop
jg
das
stos
jbe
ljmp
push
jp
ds
mov
mov
adc
mov
mov
cmp
lret
fbstp
out
mov
test
fcmovu
cmp
shrl
daa
cltd
jecxz
int
pop
test
je
pop
xchg
add
sub
int3
xchg
mov
pop
sarb
stos
push
xchg
and
clc
xor
dec
outsb
insl
aas
negl
or
cmc
test
icebp
je
daa
rcll
imul
popl
xor
mov
push
push
out
div
icebp
sub
fcmovu
dec
jecxz
mov
sub
ret
add
and
mov
cwtl
mov
pop
mov
into
arpl
arpl
fwait
repz
scas
pop
pop
jg
pop
mov
cld
sbb
push
loopne
hlt
pushf
xlat
xlat
call
sub
cmp
xchg
jns
fisttpl
jns
repnz
xchg
loope
sarl
xchg
call
into
popf
sub
gs
jbe
lret
xchg
fwait
xchg
jnp
sub
and
push
push
lods
or
mov
mov
out
leave
pop
or
cmpsl
mov
stos
inc
lret
push
stos
mov
adc
pushf
repz
xor
xlat
fldcw
xchg
jns
std
adc
scas
xchg
shlb
mov
mov
ret
push
pop
sti
ljmp
scas
testb
cmpsl
inc
xchg
mov
scas
outsl
xchg
mov
sbb
sbb
sbb
fwait
ret
in
gs
push
mov
xor
xchg
and
or
in
repz
jmp
jbe
dec
loop
movsl
in
test
xor
inc
cs
sti
pop
shlb
iret
adc
into
repz
cwtl
clc
sub
mov
and
add
ret
push
xlat
popf
mov
xor
shr
pop
cmc
es
jecxz
cmp
adc
mov
push
dec
pop
and
psraw
xchg
xchg
in
push
popf
adc
mov
sbb
popf
xchg
ret
xor
imul
add
movsl
push
insb
rolb
jnp
lret
ffreep
imul
pop
adc
ss
sti
or
jae
mov
sbb
lcall
ror
push
repnz
and
insl
and
lahf
push
stc
push
lret
in
cmpsl
cwtl
mov
cmp
adc
and
test
fistpl
xchg
loope
sbb
mov
and
clc
mov
fcomip
shlb
fsubrl
inc
add
sti
push
xor
mov
or
jo
cmp
pusha
push
movsl
push
jns
in
rcl
mov
xchg
fcompl
jbe
sbb
pop
cmc
stc
ljmp
lds
pop
mov
shrb
jb
repz
jno
mov
nop
xchg
cmp
xchg
repz
fld
xchg
es
lret
mov
sti
lret
sbb
in
shl
mov
mov
lcall
pop
xchg
sub
push
dec
pusha
xlat
inc
lods
aad
dec
pop
inc
push
push
ss
inc
ret
cltd
xchg
mov
jb
test
ja
movsl
rep
mov
jnp
lahf
mov
enter
jbe
in
dec
cmp
mulb
fstp
xlat
add
sti
in
stos
mov
in
mov
test
or
adc
jge
movl
sbb
call
cmp
mov
xlat
or
sub
mov
arpl
and
xchg
mov
push
adc
out
pop
aad
imul
push
mov
aam
fists
dec
nop
out
and
mov
or
xchg
cmpsb
in
in
or
stos
pop
sbb
ret
sub
sti
pop
in
fmuls
pushf
pop
stos
mov
cmc
jecxz
sub
in
aad
pop
jl
xchg
jmp
cmp
dec
cmp
cld
cli
xchg
shll
or
pop
cld
enter
or
xorl
stos
add
gs
jecxz
into
push
out
movsl
scas
cmp
repz
push
xor
out
inc
sbb
inc
fucomip
fidivrl
pop
push
rcll
daa
shlb
inc
loop
jecxz
lret
xchg
cmpsb
cmc
lods
xlat
mov
adc
lcall
gs
mov
stos
dec
cmp
les
lea
mov
dec
fs
mov
dec
fstpt
mov
xchg
jbe
lods
es
aaa
dec
adc
sub
jnp
fwait
dec
aas
adc
push
push
scas
ret
cmp
pusha
repz
call
decb
mov
push
fists
pop
popf
cmpsb
out
mov
in
in
mov
cmp
xchg
stc
jbe
xlat
cmpsl
sub
mov
fwait
lret
adc
cmp
xchg
mov
xchg
xchg
shlb
cli
cmp
out
lret
ljmp
ja
test
test
cmp
mov
cmp
jns
xchg
notb
inc
cld
xchg
aad
aam
iret
fcomps
ds
fidivrl
jmp
adc
scas
xlat
xchg
in
stos
fucomip
lcall
mov
jbe
je
xchg
xchg
inc
fisttps
mov
gs
test
shlb
jb
push
lret
mov
stos
xchg
or
fldcw
jmp
ret
lods
sub
adc
dec
xor
and
xchg
xchg
insl
push
push
xchg
negb
lock
test
jecxz
mov
mov
jge
pop
cld
insl
fbstp
stos
inc
and
std
idiv
adc
ja
cmp
lret
mov
mov
jge
inc
jo
mov
sbb
sub
inc
adcb
push
popf
test
inc
jnp
mov
xchg
repz
or
adc
cmc
mov
rcrl
inc
stos
ret
rcl
data16
imul
add
ljmp
mov
sarl
fdivrl
pop
fwait
dec
nop
test
jle
repz
sub
mov
lock
mov
mov
test
movsb
jmp
hlt
test
mov
fucomi
ffreep
ja
rclb
mov
dec
xlat
mov
outsl
out
rcll
cwtl
push
rcrl
stos
mov
das
mov
ds
xchg
and
pop
sbb
or
push
repnz
and
mov
jg
cmp
add
iret
jo
push
lret
cmp
pop
je
inc
out
mov
sbb
pop
push
xchg
out
aas
push
fmull
jle
or
imul
xor
mov
fst
adc
cmp
rol
in
cmpsb
dec
lods
pop
pop
mov
fwait
in
rcl
mov
push
cmp
stos
cmp
popa
addr16
pop
in
xor
fs
jbe
xlat
push
and
mov
ret
ret
ror
cmp
fldt
test
scas
pop
jecxz
push
jns
repz
mov
add
dec
es
jbe
push
cmpsl
shl
shrl
sbb
std
push
push
add
xor
std
inc
xchg
xchg
dec
fisubl
sub
and
sbb
jecxz
lret
and
inc
cmp
lahf
pop
sub
jle
rep
add
mov
stos
mov
cmc
sti
mov
pop
pushf
lret
adc
fwait
xor
adc
lret
sub
and
mov
pop
loope
testl
fcoml
and
cltd
loopne
fwait
mulb
cwtl
ret
insb
cmc
and
pop
mov
imul
or
xchg
or
aaa
dec
outsl
xorl
cmc
or
mov
ret
ds
inc
ficoml
lcall
cmp
or
xor
ja
xorb
mov
mov
test
and
pop
lret
out
scas
push
xchg
mov
push
mov
cltd
xor
in
push
dec
dec
cli
jb
or
inc
sti
pop
mov
icebp
mov
shr
jecxz
and
mov
mov
std
pop
imul
scas
stos
cmc
fadd
cmp
and
int3
inc
ss
xchg
and
je
int
pop
push
and
subl
es
idivb
lret
jecxz
movsb
cmp
stos
cmp
call
mov
push
pop
xchg
icebp
rcrb
inc
sub
ss
insb
popf
stc
sbb
mov
sbb
in
push
mov
scas
nop
and
sub
cmpl
pop
sub
sbb
lret
mov
sub
mov
pop
std
cld
loopne
xor
mov
push
stos
dec
add
mov
stos
inc
lods
lahf
mov
dec
mov
jecxz
mov
push
sub
lea
into
add
adc
lea
loopne
xchg
inc
rcrl
in
fucomip
out
mov
fldt
sub
lret
dec
and
xchg
inc
xlat
fists
mov
popa
cwtl
not
insl
cli
ja
cmpsl
xchg
ret
mov
lcall
xor
cwtl
jg
lret
xacquire
daa
lahf
cld
test
ret
rol
vpmulhuw
repz
cmp
xor
cld
mov
loope
fsubrs
xor
sub
pop
insl
imul
sbb
xchg
int
mov
jno
pop
outsl
lds
stc
mov
lahf
aad
sub
icebp
push
aaa
jno
or
test
push
mov
clc
jnp
xchg
lods
and
in
jmp
xchg
inc
insb
pop
test
xor
xchg
add
lret
cmp
dec
push
test
ss
stos
push
sub
lret
scas
iret
int3
les
repz
jno
loop
fistpll
ret
icebp
in
push
mov
pop
js
sbb
test
aaa
mov
stos
sbb
and
mov
stc
mov
xorl
cwtl
and
push
sub
int
mov
fbld
ja
xchg
sbb
cmpsl
xchg
fildll
push
jg
xchg
sbb
test
adc
xor
sbb
repnz
lret
shl
mov
ljmp
xchg
negl
sub
aad
lds
fucomi
mov
mov
divl
xchg
cltd
push
mov
insl
insb
or
xchg
pop
hlt
mov
lcall
js
outsl
sbb
cli
aas
mov
fwait
ret
dec
jns
loop
js
cltd
in
dec
sti
imul
xchg
fdivs
xchg
out
lods
ret
jne
and
lds
out
sar
lods
inc
pop
rorl
push
sub
shrl
ret
jne
ret
testl
cmp
adc
and
mov
movl
xlat
int
into
mov
push
nop
rcll
jl
xchg
mov
std
dec
orb
sub
dec
lret
sub
lods
mov
addr16
and
mov
add
jg
stos
hlt
or
cmp
jge
addr16
lods
das
rcl
dec
mov
xor
xchg
leave
imul
xchg
lods
sbb
mov
push
pop
cmpsl
icebp
mov
push
adc
cld
out
repnz
fucom
jbe
cmpsl
mov
mov
popf
std
loope
movsb
notl
add
sbb
inc
hlt
xchg
and
out
out
pop
xchg
mov
out
mov
adcl
fwait
inc
cld
mov
xchg
movsb
cmpsb
cmp
cltd
mov
xchg
mov
lret
cli
sbb
lret
lcall
xor
sub
or
icebp
ret
shl
aaa
xor
fucomip
or
push
rclb
jge
test
popa
push
sbb
daa
sti
rcll
iret
add
cmp
popa
pop
fisttpl
mov
ja
addl
inc
je
fsub
rcl
das
dec
xchg
jecxz
cmp
sbb
fwait
iret
fcoms
lods
ret
xlat
xorl
sti
or
cwtl
stc
sti
leave
popf
stos
ret
andl
pushf
lret
sbb
pop
cli
mov
ret
and
pop
jmp
inc
sbb
roll
xchg
ds
fwait
jle
and
xchg
inc
sub
aaa
out
push
inc
mov
fstpl
fwait
int3
sti
inc
mov
fucomi
into
mov
cltd
push
imul
cwtl
push
inc
aad
push
pop
jns
arpl
xor
xor
mov
std
loope
shrb
ffreep
push
xlat
clc
jmp
hlt
cld
jae
nop
or
iret
sti
pop
imul
lea
mov
mov
les
cmp
enter
sti
cmpsl
outsb
cmp
testb
movsl
pop
adc
ret
leave
lcall
jmp
cli
sahf
inc
stos
mov
mov
xchg
ficoms
push
lds
mov
jp
push
popf
out
mov
mov
and
fidivrl
icebp
icebp
pop
push
aad
xchg
dec
scas
push
ret
aam
fwait
rcr
jne
xchg
ret
sti
xchg
pop
outsb
sub
dec
ret
xchg
sbb
ret
jp
lret
jae
dec
push
add
add
sbb
and
dec
std
pusha
cltd
xchg
fwait
test
fbld
pop
pop
xor
arpl
cmpsb
rorl
adc
ret
add
pop
lods
cmpsb
ret
mov
enter
flds
stos
mov
imulb
repz
lods
jmp
es
push
push
adc
xchg
push
in
ret
push
not
push
dec
jo
cmp
cli
lods
mov
std
and
ret
and
js
sbb
pop
cmp
hlt
mov
cltd
fistpl
xchg
fisttpll
iret
xchg
lods
int
xor
stos
cmpsb
xchg
lds
aad
lds
movsb
aaa
lret
mov
rcll
addr16
std
cmpsl
jecxz
adc
sti
push
aad
pop
daa
or
cmp
cli
mov
flds
call
aad
movsl
ret
fsubrl
data16
inc
xor
xor
mov
ret
enter
sbb
int
lods
rcr
in
mov
push
sbb
lds
daa
out
jmp
inc
orb
add
sbb
rorl
idivl
popa
filds
ret
mov
outsl
cmpsl
fbld
cmp
or
xchg
sub
inc
movsb
xor
mov
ds
lock
cmp
sbb
xchg
mov
pop
flds
inc
mov
jmp
mov
push
inc
cltd
push
outsl
mov
xlat
fists
or
out
sub
pop
sar
movsl
movsl
dec
out
dec
xlat
sbb
xor
lret
fistpll
loope
shlb
imull
imulb
dec
shll
notl
push
loop
sub
push
push
shlb
xchg
lods
cli
ffreep
push
lret
xchg
sahf
push
xchg
jne
pop
and
push
ds
shrl
loopne
dec
sbb
subl
pop
adc
jmp
jecxz
lahf
lret
push
mov
ret
cltd
jle
cltd
cmp
ss
fwait
mov
pop
fiaddl
and
divl
pushf
mov
repnz
xor
adcl
outsl
popf
repnz
icebp
pop
scas
push
adc
outsb
jb
sbb
scas
push
sti
je
inc
cmp
jnp
mov
arpl
xor
lret
mov
fwait
mov
or
pop
jg
loope
movsl
mov
mov
inc
mov
sub
push
rolb
movsb
fcomip
fwait
mov
sub
enter
les
cmp
lret
ret
xchg
mov
or
out
test
push
jnp
inc
mov
mov
addr16
lret
ret
pop
cmp
mov
aam
std
mov
gs
loope
cmpsl
lret
mov
or
insb
and
inc
mov
pop
mov
push
mov
mov
lahf
mov
xlat
in
pushf
xchg
dec
adc
ljmp
xor
addb
cmpsb
mov
icebp
pop
loop
in
lods
ffreep
dec
jmp
fistl
cmp
popf
mov
xorl
xchg
ds
stos
pop
repnz
aam
push
jge
cmpsl
test
xor
adc
or
adc
mov
pop
xor
add
divb
fwait
gs
cmp
pop
fimull
notl
shl
dec
enter
ret
rcl
fbld
int3
push
mov
sbb
sti
icebp
lods
ss
inc
sub
fwait
out
xchg
pushf
repz
xchg
lret
mov
push
pop
jb
dec
ljmp
cmp
jns
xor
call
ret
mov
add
stc
popf
pop
adc
mov
mov
cmp
clc
mov
adc
pop
mov
adc
stos
in
repz
lods
and
sbb
mov
and
or
mov
and
fldl
out
loope
sar
lcall
ret
popa
in
nop
loop
fwait
jmp
xchg
ds
jae
in
jp
and
pop
imul
dec
push
js
fisubl
cmpsl
mov
mov
lahf
ret
rolb
mov
testl
out
ds
iret
fisttps
icebp
es
fidivrl
mov
insb
mov
push
pop
aaa
leave
jno
xchg
testl
add
pop
int3
lahf
jns
arpl
pop
xor
mov
cld
or
out
rclb
sti
xchg
or
mov
inc
fidivrl
mov
mov
dec
mov
rcl
js
test
cmp
or
cmp
lock
mov
add
in
xchg
cli
inc
pop
adc
mov
sub
lds
rcll
adc
popf
xchg
cmpl
mov
stos
jnp
mov
roll
mov
mov
clc
lds
jnp
shlb
mov
inc
ja
inc
aaa
das
es
mov
ret
push
ret
shr
lret
js
leave
movsl
push
inc
jge
mov
arpl
push
stos
push
rol
std
xor
addl
lods
xchg
jecxz
fnstenv
popa
jae
mov
xchg
test
ret
pop
mov
inc
jle
scas
stos
int
mov
sbb
and
xchg
cld
dec
testl
fwait
sbb
daa
roll
pop
jl
mov
jmp
sbb
std
and
inc
add
mull
out
sbb
mov
js
pop
rorl
sub
cmc
or
cmc
or
xchg
rcll
mov
sub
jnp
push
outsl
or
xchg
fldt
scas
jecxz
icebp
sub
and
aad
arpl
fisttpll
push
add
lret
frstor
and
or
lea
shl
popf
sub
imul
jl
dec
mov
js
icebp
mov
jmp
pop
mov
dec
xlat
pop
shlb
push
into
adc
hlt
sub
dec
inc
icebp
movsb
sbb
std
pop
push
inc
int3
or
xchg
ljmp
cmp
daa
loop
mov
sub
mov
add
push
inc
mov
mov
pop
test
add
pop
xorb
loope
ja
mov
xor
jecxz
pop
jns
sbb
popf
xchg
outsb
adc
aaa
pop
imul
fmuls
int3
push
shlb
filds
mov
sub
mov
test
repz
jbe
pop
jecxz
xor
aad
ret
jecxz
repz
stc
ja
dec
lods
xlat
mov
or
stos
fs
repz
pop
in
jno
fiadds
push
xchg
ror
adc
rcr
mov
mov
cltd
pop
mov
inc
test
mov
jae
xor
dec
cmpsl
arpl
shlb
cmpsb
je
cmpsl
loope
add
scas
fwait
std
into
mov
inc
es
lea
push
push
pop
outsb
mov
test
loope
xchg
mov
repz
and
xlat
xchg
adc
ja
xor
lret
xor
stos
push
mov
mov
aad
jge
xchg
mov
rdpmc
cmp
lods
mov
fnstenv
sarb
or
mov
and
dec
xlat
pusha
std
xchg
inc
jecxz
pop
pop
xchg
cmp
mov
outsl
jmp
ret
xchg
arpl
adc
xchg
cmp
loope
jp
push
xchg
cli
fidivl
sar
pop
ret
sub
mov
sub
add
pop
sbb
push
xchg
inc
movsb
pop
outsb
stos
pushf
and
fisttps
push
ja
js
ljmp
ficoml
pop
test
enter
fidivl
inc
mov
or
push
push
ja
fwait
pop
mov
ret
adc
pushl
js
and
aad
xchg
cmp
sti
ror
mov
pushf
lods
fstps
mov
and
aaa
ss
mov
dec
lods
jne
xchg
leave
pop
push
cs
fbld
lods
rclb
inc
inc
repnz
pop
mov
sub
xchg
das
cmc
adc
arpl
mov
push
xchg
iret
mov
jae
ljmp
andl
and
shrl
popa
cmp
loopne
sub
mov
ret
testl
andl
cmpsl
leave
sub
insb
and
sbb
jge
add
mov
mov
scas
mov
xor
jmp
aad
jecxz
mov
xchg
test
popa
cld
psrlw
loopne
jae
out
xlat
sbb
and
add
lods
int3
lds
aas
xorb
lret
pop
arpl
ret
daa
mov
push
int3
mov
icebp
fptan
hlt
xchg
mov
mov
push
or
pop
adc
pop
sub
icebp
test
jne
xchg
sbb
cmpsb
scas
icebp
dec
and
ret
jnp
xchg
add
mov
xlat
push
mov
neg
aad
dec
out
test
and
lods
and
jo
jno
mov
add
outsl
iret
sbbb
test
pop
push
jae
roll
add
fnstcw
rcrb
sbb
fucomip
lret
out
insl
cli
rcl
mov
xchg
rcrl
add
subw
mov
pop
xor
shll
xor
icebp
gs
rorl
fwait
inc
fwait
stc
mov
lret
jecxz
loope
dec
mov
push
and
shll
inc
fistps
dec
mov
mov
ret
fdivl
fwait
and
sbb
dec
pushl
or
fmul
loopne
jp
mov
fisttpll
ja
arpl
sbb
cmpsb
push
mov
lods
fildl
cmp
nop
rcll
shrb
lock
aas
dec
sub
push
pop
inc
adc
stos
or
dec
lods
xor
lea
jl
mul
paddw
hlt
rorl
in
sbb
adc
cmpsb
rol
cmpsl
mov
bound
dec
ficomps
mov
mov
fdiv
push
inc
or
ret
lea
flds
mov
pop
das
sbb
xchg
or
mov
cmpl
cs
inc
cld
addr16
or
popf
int
lea
lret
ss
fwait
jo
filds
sbb
add
fsubs
int3
xor
in
hlt
jge
stos
fwait
popf
ljmp
xchg
jne
sub
dec
repz
mov
out
insb
shl
push
lcall
cs
inc
mull
leave
cmp
stos
aaa
inc
mov
push
xchg
mov
xchg
lods
add
popa
adc
mov
cmp
out
mov
pop
addr16
cltd
cmp
sub
mov
imul
insl
xchg
jmp
mov
andl
notl
adcl
cmc
popl
xchg
add
inc
in
adc
add
popf
adc
outsl
mov
test
cltd
jecxz
lret
aam
pop
shlb
addr16
push
hlt
dec
lock
jae
insb
or
cld
js
cmc
stc
rorb
fwait
lods
rcll
jle
lea
shl
xchg
popa
mov
test
xor
push
pushf
mov
cs
out
dec
cwtl
int
out
push
adc
mov
aas
setnp
sbb
xchg
aam
sub
pushf
push
mov
aaa
push
fistps
or
add
push
stc
xor
jmp
sbb
shrl
xchg
mull
xchg
or
out
mov
mov
add
in
jns
inc
sbb
lahf
popa
mov
popf
push
sbb
pop
adc
std
mov
fldenv
cltd
mov
inc
mov
outsl
lods
sbb
test
out
sub
jecxz
iret
or
adc
xchg
repnz
lods
shlb
xchg
xchg
aam
jg
or
xchg
or
pop
out
sub
push
push
jo
mov
into
insl
je
movsl
stc
mov
mov
aaa
mov
sti
and
daa
in
pop
sarl
inc
mov
lret
lahf
aam
cmp
in
imul
repz
scas
cmp
loope
lahf
jle
xchg
xchg
push
xchg
adc
rcrl
js
scas
push
jecxz
ret
shlb
nop
cmp
xchg
mov
icebp
in
loop
insl
popa
stos
shr
jp
test
adc
arpl
push
adc
aad
push
je
mov
push
fsubl
mov
push
fdivrs
mov
std
cmp
bnd
stos
sub
cmp
push
add
sbb
shlb
stos
mov
imul
xchg
push
mov
mov
lods
negb
jecxz
sub
hlt
adc
mov
testl
add
mov
xchg
xchg
sti
jbe
fstl
cmp
mov
nop
mov
fwait
aaa
filds
insb
push
std
and
in
push
jmp
lahf
repz
aad
in
out
or
aas
leave
xchg
aad
fcoml
xlat
mov
dec
shrb
fst
outsb
and
sarl
lock
adc
repz
push
sbb
test
ret
stc
sub
sar
mov
ret
repz
out
or
fnstenv
pop
fsubrs
inc
mov
cmp
insb
sbb
ret
pop
outsb
setno
xchg
rol
aad
sub
mov
xor
mov
dec
and
cmp
inc
pop
imul
aaa
stc
fwait
pop
ret
mov
stos
adc
pop
push
jae
jmp
jmp
xor
mov
int
lock
movsl
sbb
decb
shl
mov
cmpb
xlat
push
mov
idivl
push
sbb
xchg
mov
pop
test
movsb
jecxz
sub
inc
cmpsb
pushf
loop
sbb
in
fsts
jmp
mov
fists
mov
fisttpl
arpl
test
fwait
stos
mov
pop
insl
ja
adc
pop
test
sub
jp
jl
mov
movl
sarl
inc
popa
xchg
xor
cwtl
push
xchg
ja
push
ja
sub
xorl
jecxz
mov
dec
and
xorl
outsl
jb
es
test
int
daa
push
popf
fsubrs
in
mov
xchg
fwait
cmp
rclb
jmp
xchg
adc
lods
aad
fcomi
hlt
mov
fisubrl
adc
mov
xchg
lods
mov
stos
push
push
lret
inc
jecxz
in
loop
mov
mov
or
cmc
je
pop
lea
dec
mov
testb
mov
stos
repnz
cs
lock
movsl
jg
xchg
out
pop
lret
fs
jae
cmpl
inc
push
outsb
fwait
and
inc
sub
js
push
xor
sbb
call
out
cmp
shll
test
cmp
pop
sbb
xchg
and
mov
je
xor
inc
adc
jmp
neg
xlat
bnd
cmp
sub
stos
jecxz
cs
cmp
jl
mov
pop
ret
js
cwtl
rcrl
xor
std
imulb
or
cld
sbb
cs
stos
aad
stos
in
dec
ja
ret
push
lock
mov
sbb
cmp
movsb
push
std
adc
das
fs
or
ret
pop
cli
fwait
in
inc
sub
fstps
aaa
sub
mov
mov
push
cmc
push
out
aad
hlt
sbb
mov
inc
and
fidivrl
mov
leave
mov
aad
sarb
jo
or
sub
imul
pop
dec
shlb
adc
push
fildll
mull
clc
fisttpll
sbb
mov
call
lds
ss
les
sub
repz
roll
loope
fcoms
data16
fistpll
dec
ljmp
stc
xchg
jg
movsb
imul
sub
dec
bound
cmp
mov
pop
jno
ja
rcrb
mov
xchg
mov
mov
sub
mov
mov
jmp
imul
push
je
repz
or
ret
adc
shll
xor
loope
add
or
mov
and
mov
xlat
fldl
fildl
add
pop
mov
aad
sbb
popf
mov
xchg
out
push
cmp
aad
xchg
jo
sbb
gs
out
les
xchg
mov
jg
xor
jae
data16
fisttpl
call
andl
mov
popa
mov
xor
in
out
jle
fists
mov
jmp
flds
sahf
and
rcrb
push
ja
imul
test
mull
in
jl
aaa
out
and
xorl
fwait
shlb
rcr
or
mov
push
fwait
and
ja
sub
scas
jb
in
outsb
lods
or
out
rcrl
jo
ja
das
fwait
aam
lods
ret
sti
inc
xor
icebp
add
xchg
jns
ret
dec
inc
push
orl
fisttpl
sbb
lret
leave
movsl
outsl
xlat
sar
iret
xlat
cmp
cld
xchg
pop
insb
cmpl
aas
rcrb
fiaddl
ret
fwait
clc
hlt
out
adc
fsubp
sbb
rorl
gs
jl
stos
mov
stos
sub
mov
adcb
inc
sti
out
xchg
movsb
fadds
jle
not
push
int
cmp
mov
movsb
leave
xchg
aas
repnz
imul
ds
sub
testb
or
pop
fwait
sub
and
arpl
imul
js
dec
inc
idivl
in
push
lea
add
lods
and
testl
xchg
mov
mov
dec
mov
lcall
adc
test
pop
mov
adc
dec
mov
jae
sub
vcvtps2dq
pop
and
jmp
icebp
fisttps
mov
add
rclb
fadd
dec
pop
scas
stc
in
fs
pop
jae
xchg
and
mov
ret
aam
dec
lock
enter
and
xchg
daa
sbb
sti
loop
xor
adc
pushf
out
loop
out
arpl
ret
cli
icebp
in
test
scas
sbbl
repz
lock
mov
fcomi
sbb
fldt
mov
mov
cmc
in
loop
xchg
mov
xchg
adc
add
repz
hlt
add
and
mov
mov
add
out
cmpsl
call
cltd
nop
push
push
mov
jno,pt
adc
mov
cmpsb
push
cmc
movsl
mov
shll
pop
cmpsl
mov
add
mov
add
fwait
jg
mov
adc
xchg
cmp
xchg
ror
mov
xchg
xchg
imul
xlat
adc
daa
and
mov
aad
push
movsb
jl
xchg
fwait
push
lods
cmp
cwtl
out
aad
adc
xor
je
fwait
movsl
leave
jg
test
mov
cmc
jle
sbbb
xchg
fidivs
stos
hlt
std
jb
cmp
push
mov
pushl
stos
dec
xchg
aad
push
addr16
jecxz
sub
cltd
jmp
popa
repnz
sub
int
xchg
lods
mov
lahf
int
repz
sbb
xlat
mov
jl
das
sbb
mov
pop
jmp
in
frstor
ds
aaa
xchg
popf
out
mov
lret
insb
jl
pop
or
cmpsb
cmpsl
fwait
movsl
mov
jo
daa
push
arpl
mov
push
sbb
mov
mov
and
mov
inc
dec
adc
sti
je
mov
or
inc
lret
insb
jne
nop
xlat
pop
dec
roll
xchg
insl
jmp
cmp
adc
xor
out
adc
lods
adc
lds
leave
mov
insb
pop
jo
cli
push
dec
in
pop
jecxz
xor
shl
stos
cltd
xchg
jg
push
mov
iret
frstor
stos
rcr
je
add
add
rorb
jp
shll
push
push
lahf
fisubrl
mov
adc
cs
popf
jnp
roll
fucomi
adc
cltd
fimull
mov
mov
les
mov
fildl
pushf
dec
aas
pop
xchg
jae
mov
mov
out
shl
test
inc
xlat
sub
mov
lods
xchg
mov
repnz
xchg
lds
lods
mov
add
lret
push
or
negb
lret
not
cmpsl
out
xor
aad
scas
pop
test
pop
hlt
sub
stos
xchg
cmp
enter
push
es
sub
lret
shrl
fildll
lods
jecxz
mov
sbb
mov
ret
call
xlat
test
push
or
mov
shll
mov
jecxz
pushf
test
adc
jmp
stc
in
add
es
call
pop
loopne
cmc
pop
pop
fwait
push
jecxz
pop
pop
rcll
push
out
outsl
mov
mov
mov
lods
or
sbb
out
aad
popa
test
fistpll
dec
cmp
pop
xor
jns
xchg
icebp
mov
int
jo
sbb
movsl
push
out
cli
jp
pop
mov
ror
add
push
pop
add
push
enter
and
jle
adc
mov
stc
icebp
jmp
xchg
adc
in
add
stc
test
jo
mov
xchg
lods
push
pop
sub
and
mov
mov
sub
outsb
addr16
cmp
int
shll
mov
movsl
je
cmp
fneni(8087
pop
push
sar
xchg
fstps
xchg
rolb
movsl
mov
jno
xor
out
lret
out
shl
fsts
pop
orl
lock
pop
fcmovbe
push
test
popf
jg
xlat
stc
dec
adc
cltd
adc
sbb
cmc
jecxz
mov
jecxz
sbb
rcll
repz
jge
push
inc
data16
mov
ret
sub
jmp
mov
xchg
ret
jecxz
stos
aad
pop
mov
mov
gs
inc
dec
pop
lods
iret
mov
mov
mov
aaa
dec
in
mov
nop
repz
insl
pop
hlt
scas
push
mov
das
push
xor
fdiv
pop
jecxz
insb
jecxz
fildl
push
fcoml
xchg
dec
incb
xchg
sbb
lret
fcmovnbe
ljmp
jecxz
iret
movsb
pusha
int3
ja
cld
jmp
inc
push
ficoms
test
mul
sbb
mov
mov
lahf
xor
cltd
sti
cmp
mov
mov
mulb
test
xchg
ret
push
cld
ljmp
xchg
sahf
inc
clc
lahf
jb
and
int
dec
pusha
jl
xor
or
push
stos
imul
lcall
adc
mov
mov
jp
rcrb
fstl
mov
inc
jg
adc
inc
stc
cltd
mov
ret
cmp
testb
ret
xor
loop
xchg
mov
punpcklwd
lea
loopne
adc
lret
decl
repz
cmp
cs
push
adc
push
pop
mov
push
lret
push
lock
ret
fldt
ret
cmp
aad
inc
pop
mov
cmp
mov
insb
lea
iret
ret
loope
cmp
shrl
mov
aad
rorb
dec
mov
andl
inc
test
mov
pop
push
adc
stc
out
out
adc
rorl
mov
sub
inc
dec
dec
out
rclb
les
rol
sub
push
pushf
cmpsl
pop
cmpsb
sbb
mov
mov
pop
fnsave
sti
cmp
mov
in
aas
sbbl
pop
movsl
mov
push
pop
sub
fimull
ficoml
xchg
mov
push
incl
mov
xchg
filds
xor
pop
or
lea
mov
lret
cmpsl
xchg
aad
push
jb
inc
pop
or
lret
mov
or
jecxz
test
jle
ftst
mov
cmpsb
lock
ret
fdivs
stc
cmp
dec
mov
sub
std
outsl
insb
sub
xor
mov
add
ds
fwait
xlat
cwtl
movsl
adc
pop
sahf
mov
push
xchg
aaa
sub
cld
jnp
stos
cmp
jbe
mov
lret
add
push
imul
insb
movsl
lods
dec
stc
push
pop
pusha
jno
mov
add
fidivrl
fildll
daa
sar
test
cmpsl
inc
and
jle
stos
ret
in
cmpsb
fiaddl
out
pop
dec
adc
mov
adc
pop
in
outsl
popf
cmc
and
mov
iret
stos
cmp
shl
dec
mov
push
pop
shlb
inc
push
inc
xor
sbbb
rcrl
or
int
inc
pusha
fisttps
lods
pop
mov
stc
lods
rep
cmp
lret
shl
cmpsl
jmp
adcb
xchg
lock
lret
call
outsl
adc
xor
jge
sti
push
stos
cmp
jae
push
pop
push
insb
xor
fidivrs
data16
mov
mov
push
mov
jecxz
outsl
mov
lret
jmp
push
sbb
push
les
dec
iret
test
lcall
ret
psrlw
call
jecxz
nop
leave
cmc
mov
mov
fists
rol
jl
mov
stos
subb
leave
mov
mov
stos
inc
mov
scas
xchg
jl
mov
in
out
fs
cli
movsb
sub
out
jns
cmc
mov
or
mul
in
cli
outsl
xchg
xchg
lods
mov
cmp
xchg
ja
jno
pop
mov
lods
cmove
cmpsb
mov
pop
cmp
in
cmpsl
lcall
lcall
sahf
in
push
xchg
xor
test
pop
xorb
rcrl
xchg
int
push
fldenv
sbb
pop
sbbl
jb
and
mov
outsb
pusha
shlb
dec
adcb
and
and
and
pop
roll
adc
jbe
sti
sbbb
fistl
shll
jae
in
ret
ror
orb
inc
cld
push
push
cmp
xlat
xchg
sub
sub
mov
adc
jae
sbb
adc
lods
xchg
mov
mov
pop
push
outsb
inc
inc
lods
push
lds
cmp
popf
jecxz
mov
aas
cs
and
xchg
in
mov
aad
xor
lods
cmpsb
loopne
aas
mov
lea
sbb
cmpsl
fisttpll
pop
adc
outsb
dec
fistps
testb
jbe
sbb
push
shrb
lods
cltd
pop
adc
repz
subb
insb
and
nop
xchg
pop
and
jmp
push
cmpsb
push
xchg
in
mov
in
fcmovne
cmp
pop
imul
sbb
fwait
add
mov
lret
fwait
jbe
into
int3
jecxz
insb
xor
icebp
xlat
rcl
sub
inc
push
mov
sbb
lods
pushf
sbb
sti
mov
xor
cwtl
lock
mov
mov
sbb
sbb
iret
call
lock
xchg
test
repz
andb
mov
or
std
lds
pop
jp
pop
lods
cwtl
lea
cmpsl
jmp
add
pop
imull
and
mov
jecxz
pop
fs
arpl
inc
fdivr
xchg
iret
inc
lret
divl
jg
jbe
test
insb
vphaddubw
jae
aad
aas
dec
mov
and
push
sbb
jg
jbe
test
push
cltd
lret
movsl
mov
incl
or
sbb
pop
aam
push
lahf
jp
ret
cmpsb
divl
iret
jl
test
in
sarb
xor
sti
fistpll
fcmove
clc
mov
mov
stos
jecxz
push
cmc
xor
mov
enter
push
rcrl
jmp
xchg
push
enter
sub
or
icebp
cmp
lret
mov
push
mov
inc
ucomiss
scas
inc
inc
mov
daa
mov
dec
jbe
and
jae
popf
add
dec
rolb
testb
mov
sti
ds
subl
movsb
repz
mov
xchg
repz
movsl
mov
pop
push
jbe
test
dec
push
push
ljmp
sub
jmp
out
loop
fists
stos
ret
push
cmpsb
xor
sti
loopne
cwtl
sbbl
scas
mov
fwait
ret
and
xchg
sti
mov
mov
jl
mov
test
out
in
mov
or
cmp
jecxz
xor
sbbl
mov
pop
jmp
loope
rdtsc
mov
ffreep
mov
sahf
jecxz
sub
push
movsl
ret
iret
pop
mov
pop
dec
cmp
lods
fucomip
aad
pop
and
pop
ljmp
jmp
or
mov
add
xlat
sbb
cmp
push
les
xor
das
mov
or
mov
jo
sbb
xor
aam
fisttpll
push
add
popf
dec
loope
sar
enter
jecxz
sub
inc
and
aas
stos
movsl
orl
mov
ljmp
addr16
cmc
mov
sub
xchg
fwait
jo
jae
adc
ljmpw
sub
cmpsl
inc
lret
inc
mov
mov
jg
imul
popf
mov
dec
jl
imul
aaa
fstl
mov
imul
cmp
cmpsl
int
mov
push
lret
rclb
jl
add
imul
pop
shll
jecxz
push
mov
adc
fstpt
lds
filds
mov
sbb
gs
aaa
lods
fcmovnu
stc
je
dec
scas
test
jle
mov
ror
xchg
cmpsl
pop
dec
pop
xchg
add
xor
test
aad
adc
ret
std
outsb
jne
ror
icebp
push
inc
shlb
cmc
imul
aas
sbb
loopne
xchg
ficoml
mov
mov
fistl
push
jmp
mov
stos
stos
hlt
mov
fs
mov
aad
repz
cmp
stc
jae,pt
pop
add
test
cmc
xor
imul
rcll
push
lds
xchg
fldl2t
fists
sahf
inc
and
call
je
cld
inc
gs
fists
loop
sbb
pusha
dec
fst
subb
push
adc
addl
push
push
fsub
adc
adc
int3
scas
sti
cwtl
push
inc
cli
shrl
orl
mov
testl
movsb
icebp
push
movsl
fdivrs
in
sub
inc
bound
xchg
notl
jg
jecxz
fbstp
fildl
leave
std
insb
neg
stc
lahf
adc
cld
ds
inc
daa
jne
push
xchg
test
pop
pop
out
fst
out
cmp
mov
mov
cmp
dec
lahf
adc
inc
cli
jo
push
movsl
jecxz
shll
fcmovbe
mov
lret
and
dec
or
mov
outsl
out
pop
test
imul
fcomip
test
xor
add
stos
jecxz
mov
cmpl
fnstenv
fstpl
or
andb
push
pop
out
xchg
sub
xchg
mov
ja
mov
repz
movsl
xchg
test
fists
movsb
cs
dec
arpl
mov
lods
or
xor
push
xchg
sub
push
jae
or
imulb
sbbl
mov
lods
shr
lea
mov
xor
push
sbb
mov
ret
or
mov
ss
scas
mov
xchg
jg
rol
jno
jmp
lea
test
and
dec
add
and
hlt
pop
mov
jg
jecxz
xor
mov
adc
jecxz
bound
stos
cs
js
fldt
sbb
subb
push
arpl
int3
push
pop
les
fdivs
ss
mov
rcl
mov
xchg
fwait
mov
jl
adc
das
mov
cmc
mov
popl
insb
cmp
imul
xlat
call
or
call
cmc
fmull
mov
fistl
mov
iret
xor
popf
js
repz
xchg
cmc
inc
loope
imull
jl
xchg
movsl
test
mov
push
cmpsb
rorl
outsl
jmp
sbb
mov
pop
pop
xor
jge
push
testl
adc
mov
push
mov
push
jae
jmp
push
inc
xchg
iret
mov
shl
jecxz
out
xchg
xor
mov
lcall
xlat
mov
scas
insb
inc
push
push
push
mov
gs
jnp
pop
loop
sbb
lret
popf
popf
sub
loop
lret
adc
out
push
sub
cmp
push
jg
lea
inc
mov
xor
dec
popa
pop
mov
mov
jg
hlt
sub
mov
cmp
pop
movsb
clc
dec
mov
lret
sti
stc
out
out
sbb
sub
mov
mov
fstpl
mov
rcll
and
fwait
mov
cmpsl
xchg
sbb
lea
stc
sub
or
cmpsl
lahf
adc
lcall
ret
mov
lret
lahf
loope
jecxz
test
scas
addr16
mov
insb
dec
or
inc
inc
mov
ret
rcrb
std
xchg
or
xor
push
sub
out
andl
push
or
mov
jmp
fisttpll
inc
jbe
rcll
clc
dec
lcall
inc
scas
mov
fwait
dec
xchg
mov
sbb
movsb
cmp
push
clc
test
xchg
push
ljmp
jecxz
loopne
fstl
push
imul
aas
pop
mov
push
in
or
negl
negb
lea
cmp
or
inc
dec
out
jle
mov
push
mov
and
push
pop
mov
cmpsb
or
mov
cmpb
adc
test
fucomp
xchg
and
lahf
repz
mov
mov
je
rcrb
movl
and
inc
subb
icebp
sub
js
movsl
fnstenv
and
in
rorb
mov
mov
ss
xchg
stos
in
push
mov
xor
out
xchg
or
mov
loop
les
iret
push
ds
cmpsl
mov
pop
inc
adc
lea
fwait
cmp
in
xchg
sbb
sbb
test
je
adc
addl
adc
xchg
icebp
xlat
and
pop
inc
cld
cmpsl
daa
loop
imul
pop
mov
shlb
rolb
subl
lret
dec
addb
sbb
jg
jbe
xchg
popf
ss
xchg
fdivrl
jne
in
lret
mov
jne
pop
xchg
inc
push
les
cmp
inc
mov
mov
xrelease
fld
data16
pop
fisubrs
lahf
or
stos
and
mov
mov
jno
in
stos
fldenv
jecxz
and
stos
in
test
jae
sbb
mov
push
mov
out
mov
jecxz
ja
inc
jmp
idivl
imull
fidivrl
mov
xchg
jbe
rep
mov
mov
loope
fidivrl
not
lds
arpl
or
ds
adc
mov
fcomip
insb
cmp
fs
pop
cmp
push
pop
cmp
mov
dec
std
push
ficompl
mov
xor
ds
popf
pop
push
adc
push
push
sub
orl
outsb
js
dec
xlat
flds
imul
lcall
push
cld
push
cli
icebp
jo
lret
xchg
out
shlb
adc
jmp
adc
in
test
mov
xchg
adc
dec
add
aad
idiv
pop
ret
scas
repnz
mov
dec
push
testl
imul
test
fucomi
popa
dec
pop
inc
mov
jno
cmp
mov
inc
adc
sub
mov
jge
xor
jo
inc
ret
lcall
stos
addb
mov
or
push
pop
ret
adc
xchg
cmp
rcrl
test
mov
xor
add
jl
test
sbb
hlt
sub
dec
in
mov
or
cmp
loope
sub
div
sarl
insl
mov
mov
iret
xlat
repz
adc
ret
push
cmp
mov
icebp
fstps
mov
adc
mov
xchg
loopne
repz
jae
dec
aaa
jecxz
fldt
jl
testl
and
mov
adc
por
gs
out
ss
xchg
push
outsb
mov
adc
ss
mov
fistpll
fadds
inc
xlat
lods
std
xchg
icebp
bnd
mov
adc
push
arpl
jnp
aas
jecxz
fmul
cmc
scas
int
inc
ja
imul
pop
out
test
pushl
out
push
nop
popa
pop
scas
fstpl
lods
adc
js
mov
addr16
xlat
rcl
mov
cmpsb
mov
pop
lea
adc
mov
loopne
xor
push
ja
jae
rclb
insb
data16
or
ret
enter
int
jo
test
rclb
pop
insl
push
mov
cmpsl
fstl
stos
fcmovu
in
rorl
test
std
mov
mov
stc
shl
sbb
add
jmp
mov
loope
xchg
jmp
repz
divl
inc
daa
ret
fcmovnu
cmp
add
xlat
dec
push
repz
lret
pop
inc
pop
adc
push
xchg
into
mov
jecxz
aas
inc
mov
lret
jl
scas
sbb
and
cld
jecxz
jns
xchg
adc
cmpsb
cmpsl
pushf
test
stc
mov
orps
addb
adc
mov
mov
sbb
divl
repz
xchg
popf
xor
aad
xor
pop
in
push
mov
xor
addr16
pop
and
fstps
or
in
rcl
adc
sub
ret
cs
imul
or
std
loopne
out
lret
adc
arpl
cmp
rcrl
pushf
sbb
jecxz
gs
push
stos
cltd
add
icebp
push
insl
mov
testl
push
int
int
xchg
test
sub
es
xchg
jo
xchg
sub
iret
jnp
shlb
popf
jge
imul
mov
xchg
inc
mov
pop
mov
filds
and
mov
mov
stos
aas
into
fwait
add
rolb
xchg
jg
loop
hlt
pop
mov
aam
pop
mov
insb
out
hlt
pop
repz
jno
call
fistps
adc
lret
arpl
repz
loop
lods
andl
ret
adc
daa
inc
and
lret
sub
imul
loope
hlt
sbb
sbb
lret
mov
mov
sarb
lret
leave
divl
ja
icebp
xchg
inc
popfw
ja
push
pop
xchg
test
movsl
out
inc
fistl
jno
nop
mov
in
and
pusha
xor
mov
cwtl
std
stos
out
push
ja
pop
loope
data16
xlat
gs
dec
pop
pop
mov
xchg
popf
cmp
lret
or
repz
and
fstpt
cmp
stos
popf
rcrb
in
add
movsl
in
ret
insl
sbb
or
push
pop
repnz
gs
cmp
sub
adcl
lahf
sbb
mov
out
sub
mov
fistps
stos
idivl
pushf
xlat
icebp
xlat
jbe
repz
add
imull
mov
repz
sub
arpl
out
hlt
out
enter
xor
adc
jbe
xchg
sti
jnp
xchg
fwait
add
movb
insb
push
in
adcl
addr16
faddl
fdiv
push
push
sbb
rcr
mov
push
push
sub
icebp
mov
in
inc
sbb
mov
ret
push
lahf
insb
fimull
into
mov
dec
ret
mov
mov
xchg
jecxz
add
aam
or
pop
xor
xchg
lret
stos
cwtl
testb
mov
ja
pushf
cmpsl
jecxz
jno
fsub
pop
jecxz
mov
push
add
stos
lods
icebp
icebp
push
xor
jmp
divl
std
mov
push
leave
xchg
insl
inc
jl
mov
testl
inc
icebp
mov
fcoms
in
lret
mov
mov
subl
loopne
rorl
out
or
add
fsts
int
or
clc
mov
movsl
push
mov
xor
aaa
cmp
lret
mov
pop
repnz
mov
ss
mov
loopne
add
push
push
repnz
jmp
xor
xchg
jl
mov
arpl
arpl
stos
sub
fs
lahf
ret
rolb
nop
xor
lret
ret
push
xchg
pop
roll
jmp
mov
push
cld
mov
mov
clc
fstp
loop
filds
rcl
insl
decl
stos
imul
sbb
rol
cltd
xchg
xchg
cmpsl
sbb
pop
stc
sbbl
imul
xchg
jecxz
and
nop
sub
mov
ffreep
mov
xchg
xchg
jo
mov
fildll
jecxz
xor
jecxz
lahf
in
repz
jne
orb
xchg
in
shlb
popa
ret
push
mov
repz
loop
add
subl
jne
imull
fcmovnbe
inc
pop
mov
push
stos
jmp
mov
mov
je
addb
add
push
mov
add
insl
xor
lahf
rorl
push
andb
shlb
cmp
movsb
aad
lret
lock
xchg
xchg
xor
jo
add
dec
mov
rolb
lds
sub
xchg
rolb
pop
inc
ret
out
jnp
fildll
xlat
mov
gs
cmp
sub
jle
gs
fbstp
push
out
or
sub
divb
add
xor
add
fidivrs
xor
add
adc
xor
xchg
orb
push
stc
ror
and
scas
mov
negl
mov
stc
inc
mov
lcall
in
insl
out
inc
and
mov
out
mov
jecxz
xlat
mov
adc
mov
popa
sbb
xor
jecxz
lods
aad
ret
outsl
inc
fiadds
lahf
stos
sub
test
outsl
xor
test
add
scas
fwait
inc
mov
mov
dec
adc
push
adc
adc
mov
inc
xor
ja
pop
cmp
add
mul
push
insb
add
jl
xlat
sbb
lds
ret
jecxz
bound
aad
lock
xor
sbb
fs
in
sbb
inc
jbe
cwtl
out
dec
fnstcw
inc
xchg
fistpll
sbb
adc
adc
inc
xchg
rcrl
loop
sub
or
cmp
fiaddl
int
lods
into
inc
je
cs
aad
xor
icebp
sbb
neg
pushf
cmp
xlat
mov
mov
andl
xor
mov
roll
scas
scas
jecxz
dec
pop
out
mov
jb
xlat
shr
mov
cmp
xchg
repnz
sub
mov
pop
imull
xchg
push
aam
leave
fistps
pop
fidivl
adc
iret
xor
mov
mov
test
bound
cwtl
stos
fdivrs
mov
out
xchg
mov
xchg
sti
stos
mov
sbb
adcl
push
movsb
out
lret
filds
ret
addb
push
inc
orl
mov
ret
push
mov
adc
movsl
stos
or
sbb
stos
cltd
jle
pop
lods
mov
and
jo
neg
dec
pop
push
adcb
addr16
icebp
loope
push
mov
mov
lret
filds
pop
and
xchg
in
sbb
cmpsl
xchg
and
orl
int
inc
cmp
mov
movsb
scas
rcl
push
pop
add
ffree
ret
repz
jno
ja
mov
test
jl
mov
pop
xchg
aaa
or
test
dec
or
or
cmp
std
jl
xchg
mov
in
pop
mov
inc
fstps
hlt
dec
mov
cmp
daa
push
andb
sbb
das
popf
scas
xchg
and
pop
in
adc
ret
xlat
movsb
mov
in
lahf
aad
fstps
pop
mov
or
std
insl
ds
je
into
dec
mov
or
lret
cltd
out
add
iret
ss
jg
shrb
aaa
cmp
test
inc
das
aad
jmp
cld
xor
std
push
cmp
scas
insl
sti
hlt
stc
loopne
add
fldcw
mov
lcall
lea
xchg
adc
cmp
les
in
cmp
out
ja
mov
pop
jnp
addr16
or
fistl
fwait
push
push
fiadds
cmp
imull
std
sahf
aad
xorl
movsb
lods
data16
das
adc
aad
xchg
movsl
xchg
sti
jno
vcmppd
push
or
dec
mov
aad
xchg
cmpsl
cmp
mov
inc
xlat
cmp
aam
mov
mov
adc
xchg
lret
adc
jmp
or
pop
fcoml
pop
int
sti
inc
xchg
cmpsl
dec
jl
fcmovnbe
in
sarb
mov
or
ficoml
scas
out
das
lret
xor
inc
addl
int
pop
jne
push
xchg
lea
sbb
mov
jno
and
in
cld
lock
mov
push
xchg
js
xchg
loope
repz
and
rorl
fstpl
cmp
mov
mov
rorl
movsb
mov
cmp
fwait
out
inc
in
stos
fyl2x
lods
into
aad
loope
xor
jecxz
and
fdivrs
jl
inc
mov
jmp
fcoms
aad
andl
das
or
fisttpll
movsb
lret
sbb
inc
sbb
jl
add
ret
pop
cmc
cmc
push
lods
adc
and
jae
lea
ja
insb
and
push
jecxz
push
xchg
popf
stos
cmp
lret
push
xchg
test
cmp
pxor
nop
pop
mov
mov
hlt
fists
inc
movsb
pushf
jecxz
sbb
pop
xor
inc
xchg
jmp
pop
test
mov
mov
inc
cwtl
enter
xchg
mov
cltd
in
pop
xor
xchg
push
mov
dec
out
iret
icebp
dec
mov
pop
mov
pop
dec
dec
add
xchg
jmp
dec
mov
movsb
mov
iret
mov
loop
pop
popf
std
xlat
xor
xchg
lret
jmp
cmp
outsl
test
faddl
xchg
mov
in
or
fbld
mov
lret
jnp
movb
out
xor
adc
pop
push
movsb
shl
mov
fwait
jmp
xchg
int
mov
ret
cli
sbb
dec
inc
insb
movl
xchg
dec
pop
icebp
mov
dec
fistpl
and
out
faddl
imul
test
mov
out
mov
mov
adc
dec
mov
aam
jae
mov
std
inc
fwait
icebp
repnz
xor
stos
je
sub
mov
int
bound
mov
fwait
xchg
pop
dec
lcall
and
mov
icebp
ds
iret
lea
fbstp
xchg
repz
mov
pop
add
sbb
insl
sbb
filds
xchg
sahf
jg
testb
fadds
fistps
dec
fwait
lret
adc
pop
add
sub
lods
add
adc
inc
mov
mov
jecxz
jp
lea
push
lret
lahf
xor
and
mov
xlat
cli
fadds
in
movsl
inc
mov
inc
jmp
outsl
cmp
mov
sub
jmp
shrb
xor
cmp
jnp
adc
jae
clc
push
adc
mov
fcmovbe
sbb
fisubl
lods
mov
push
or
fstpl
pop
add
xlat
in
fidivrs
int
fsubrs
cld
out
aas
dec
rcll
mov
shl
adc
lock
cmp
repz
testb
scas
pop
rcrb
filds
call
jmp
rorb
in
in
rcr
cmc
repz
fwait
bound
loop
fildll
ret
or
jl
stos
mov
out
and
jge
inc
loope
cmpsb
movsl
int3
and
fwait
sub
clc
aam
xchg
lret
test
cmpsb
rorl
testb
xor
xor
add
xchg
jnp
arpl
mov
dec
fists
es
push
out
int3
mov
sbb
mov
xchg
popa
mov
lret
popf
cmc
and
scas
insl
inc
std
je
mov
sub
nop
mov
ret
leave
dec
lea
mov
dec
cmp
data16
je
cltd
xor
and
dec
in
push
push
rcr
popa
xlat
aad
dec
push
ret
aad
fwait
adcb
mov
xchg
mov
push
adc
ficomps
mov
mov
push
add
push
or
mov
pop
repz
or
enter
lds
jge
aas
mov
fldt
or
inc
push
push
cmp
fwait
lods
psrld
sub
jl
sti
clc
adc
push
loopne
pop
out
notl
pop
sbb
push
ret
imul
cwtl
fiadds
fwait
xchg
pushf
loop
cmp
mov
pop
mov
rcl
ds
int
sbb
mov
xchg
pop
pop
movl
shll
push
ret
ja
pop
ret
jle
and
ret
loop
out
jns
inc
jnp
xchg
sub
xor
es
and
shrb
sahf
cmc
xchg
jne
mov
repnz
shrl
into
repz
mov
dec
dec
lcall
push
push
loopne
insb
jns
mov
test
mov
push
and
vmovaps
cmpsl
lret
ret
push
and
mov
push
mov
and
repz
std
flds
sbb
shll
xchg
shlb
rcrl
dec
add
dec
jns
leave
sbb
repz
cwtl
and
daa
dec
xchg
je
popf
xlat
pop
adc
xchg
lret
lret
sarb
inc
push
in
jae
push
adc
mov
cld
xor
stc
and
lret
pop
call
mov
fsqrt
je
shlb
cmpsb
movsl
cld
in
xchg
mov
cmp
fcoms
repz
decb
adc
sbb
cltd
adc
popa
lods
out
cs
xchg
pop
add
lret
dec
shlb
sbb
cltd
cmc
fsts
out
jno
pop
test
cmc
es
xchg
sbbl
lret
in
jl
xchg
ret
fstpl
cld
cwtl
sub
into
lret
cli
ja
cld
push
lret
out
adc
not
in
jmp
jge
add
lahf
lret
pop
mul
fbld
rcrb
lret
push
fld
mov
loope
adc
xchg
sbb
vmovddup
cmc
push
popa
or
xchg
mov
sbb
in
loope
fists
mov
jge
lret
push
cld
or
mov
xor
sub
xlat
and
or
dec
sub
repz
push
mov
or
cwtl
cmp
fwait
xchg
adcl
in
in
mov
les
cmc
cmp
fbld
lret
imul
mov
fstpl
pusha
in
mov
fbstp
push
jae
inc
or
inc
shlb
iret
pop
stos
lods
mov
outsb
ret
nop
cmp
fsubr
inc
push
mov
out
and
movsl
sbb
xlat
push
shlb
jecxz
ljmp
scas
mov
into
lock
divl
push
cmpsb
not
and
push
mov
stos
dec
or
aad
rorb
dec
incl
pop
pop
add
or
mov
int
inc
xor
mov
sahf
fwait
inc
lahf
insb
lods
ljmp
xchg
pop
bound
jno
lcall
pop
cmp
fildll
insb
outsl
sahf
jge
lock
push
cmp
mov
fsubp
jp
mov
push
push
fnsave
xchg
xor
dec
mov
sbb
insl
loopne
fwait
inc
xor
lret
loop
int3
stc
movsl
xlat
xchg
aad
mov
add
xchg
push
adc
loope
push
dec
add
mov
out
xchg
in
pop
xor
sub
adc
xchg
and
xchg
adc
popf
fbld
jmp
arpl
mov
stc
fnstenv
fimuls
inc
jbe
jmp
cmc
sti
ffree
mov
mov
push
xchg
fwait
push
push
lea
adc
and
sbb
push
mov
xchg
mov
mov
mov
sub
mov
adc
dec
cli
cli
mov
aas
adc
stos
insb
aad
std
mov
pop
cmp
inc
jmp
ret
dec
aad
cltd
stc
xchg
fwait
inc
test
mov
sub
shr
fucomip
sahf
dec
add
dec
push
inc
mov
jl
mov
mov
and
outsb
loopne
xlat
mov
push
mov
mov
sub
xadd
aad
mov
fwait
popf
xrelease
lahf
mov
das
push
jge
test
mov
outsl
rcll
in
sub
adc
aaa
xchg
fs
sbb
mov
cmp
dec
fldl
fwait
dec
xor
loope
ret
and
cltd
sbb
rcrl
lods
mov
fisubs
vpaddw
pop
popa
aam
call
fistl
imul
out
mov
stos
in
ret
xchg
outsb
fisttpll
jg
rcr
cltd
mov
pop
mull
jmp
ja
jle
fs
xchg
stc
and
mov
popf
std
aad
and
push
aad
pop
jne
mov
or
push
push
xchg
jg
in
lcall
pusha
mov
lcall
loope
je
lahf
cmc
movsl
mov
in
xlat
fwait
loopne
daa
push
ljmp
inc
pop
fcoms
dec
push
cmp
mov
sbb
lcall
in
add
call
jae
outsl
movsb
push
mulb
mov
xor
dec
push
jo
leave
mov
shll
or
repz
jecxz
daa
test
lret
jecxz
xchg
fistpll
decb
enter
mov
push
adc
movsl
xchg
pop
orl
fs
rorb
pop
xor
sub
shll
pop
cmpsl
dec
sarl
lea
mov
rcrb
negl
test
add
xchg
sub
push
pop
cmpsb
pop
mov
cmp
mov
add
jl
cmc
jbe
iret
xchg
into
inc
pop
shl
sbb
rcl
ja
daa
popa
lea
adc
out
sub
mov
lods
shl
lcall
cmc
or
adc
call
mov
rcll
cmpsb
mov
dec
js
test
fistpl
pushf
inc
cmpsl
cmpsb
cld
xlat
inc
sbb
fcomi
in
mov
push
jno
or
sub
sbb
add
out
cmp
jns
mov
or
adc
cmp
push
sbb
sub
pusha
mov
pop
adc
push
ja,pn
inc
mul
dec
shrl
outsb
or
ret
mov
jae
outsl
pop
mov
mov
sub
test
push
lret
inc
cmpsb
dec
jo
stos
push
mov
in
pop
adc
fistl
lret
push
pop
fistps
repnz
fstl
loop
dec
je
lea
mov
jns
sub
xchg
lcall
inc
shrl
push
jno
mov
lret
cld
scas
fldenv
jecxz
adc
daa
inc
push
test
xlat
in
cmc
adc
ds
cltd
xchg
repz
imulb
jne
into
shl
enter
daa
push
arpl
sarb
adc
pop
xor
ret
movsb
cltd
shlb
rcll
test
fsubrs
dec
iret
fadd
or
test
mov
dec
ss
xchg
mov
loope
leave
push
adc
inc
clc
mov
cwtl
xchg
mov
jle
mov
pop
push
es
sub
or
inc
out
mov
sbb
fnstenv
jbe
imul
push
pop
cmc
cs
mov
pusha
fwait
add
pop
incl
xchg
mov
lret
loop
pop
push
inc
lcall
ret
jge
int
int3
xchg
sbbb
ljmp
stc
sbb
pop
mov
sti
jecxz
dec
mov
pop
dec
lret
je
mov
mov
inc
and
je
fstpl
outsl
scas
repnz
aam
xrelease
cmc
xor
cltd
popf
sti
xlat
and
rcrl
jbe
sti
jae
or
push
imull
sub
mov
cmp
je
sub
cld
lods
pop
push
addr16
sbb
inc
lret
mov
lret
popf
rcrl
push
adc
int
xor
loope
stos
ljmp
imul
jbe
mov
sti
enter
loope
mov
in
shl
stos
xor
mov
jmp
ret
pop
fwait
cmp
imull
iret
aad
push
mov
sar
fldenv
inc
cmpsl
ja
loope
repnz
mov
hlt
push
jb
mov
push
repz
leave
and
push
mov
cltd
sti
jbe
loop
out
das
movl
rol
loopne
or
cmpsl
neg
shlb
or
mov
cwtl
inc
add
mov
bound
cmpb
test
and
testb
mov
inc
pushf
push
clc
out
mov
movsb
sbb
sub
xchg
mov
cmp
inc
mov
aas
pop
je
stos
cmpsl
lcall
cld
and
rclb
into
or
and
add
inc
call
ss
insb
xchg
mov
mov
insb
jecxz
mov
mov
mov
ss
add
lods
test
push
push
xlat
rclb
sub
cmp
fs
xchg
dec
lock
sub
outsb
xchg
fistps
neg
jae
cld
mov
sahf
sbbl
nop
icebp
lret
push
mov
cmp
jbe
xchg
dec
lret
icebp
jo
pop
push
inc
rcr
lea
xchg
xor
fidivrs
cmp
jle
mov
xchg
xchg
sahf
aam
or
test
loop
das
pushf
arpl
enter
xchg
dec
dec
mov
fstpt
jne
stos
xor
sbb
ret
leave
cmp
jl
xor
ljmp
lock
fstl
mov
iret
mov
jecxz
adc
lret
pop
fstl
orl
clc
in
mov
icebp
sub
pop
xlat
in
push
adc
xor
push
inc
mov
lret
filds
mov
idivl
dec
jno
push
dec
xchg
jecxz
dec
xchg
push
fistl
cmp
jmp
clc
int
movsb
jb
or
lret
aad
mov
fst
fists
mov
iret
pop
inc
ret
mov
cmpsl
mov
testl
outsb
hlt
ret
cwtl
xchg
roll
xchg
shrb
mov
and
pop
fwait
lds
xor
mov
icebp
xlat
into
sbb
loopne
fists
add
mov
mov
jbe
adc
push
pop
sub
mov
add
loope
mov
push
adc
ss
test
xchg
mov
bound
inc
fwait
lahf
jnp
fbstp
test
imul
cmc
mov
ja
push
mov
lds
cmpsl
adc
enter
ret
fldcw
adc
push
or
icebp
mov
jge
mov
shlb
fwait
ret
call
push
mov
mov
sarl
std
ljmp
rcrb
insb
xor
inc
scas
lret
lret
sarl
inc
pop
jnp
out
mov
int
cmp
inc
movsl
push
cli
dec
outsb
sub
mov
push
scas
lcall
into
jnp
xchg
testl
mov
fs
test
xchg
mov
sbb
xchg
mov
xchg
or
call
inc
stos
rclb
out
mov
push
ficoms
mov
adc
mov
push
jecxz
mov
cmp
dec
rorl
mov
rclb
jge
push
push
je
xchg
xlat
lcall
loopne
lods
aad
dec
pop
cmpsl
push
inc
cli
push
std
imul
bound
lahf
inc
fimuls
jmp
mov
sbb
ret
cmp
rcl
call
xchg
lahf
lock
outsb
xchg
iret
sbb
stos
cltd
negl
mov
repz
jecxz
ret
daa
push
cmp
mov
std
repz
jecxz
int3
aam
pop
lods
ret
jmp
mov
call
rclb
mov
fildl
ror
mov
shlb
push
ja
std
mov
in
mov
sub
sub
cmc
add
sub
adc
loope
cmp
movsl
pop
dec
push
dec
push
xchg
pop
testl
inc
pop
jl
and
sarl
inc
jae
xor
pop
adc
mov
xchg
int3
pop
xchg
xchg
or
mov
push
mov
lea
sahf
adc
xchg
xor
mov
add
test
notl
fimuls
inc
mov
sbb
lret
cld
xchg
jae
mov
xor
mov
popf
mov
dec
lods
frstor
mov
pop
ficoml
cld
jle
pop
mov
cltd
push
add
jg
loopne
out
cli
mov
imul
daa
cld
adc
adc
aaa
add
imul
ret
mov
jge
jg
lret
cmp
fcompl
xchg
push
sub
fistps
mov
cmp
lret
xchg
mov
mov
je
out
shlb
fistps
jno
addl
and
shll
pop
xchg
mov
inc
sub
jl
push
insb
and
sti
jbe
fisubs
push
xchg
pop
cmpsb
mov
dec
push
iret
test
ss
xor
ret
rcl
clc
lahf
push
jecxz
fsts
lret
jecxz
ret
push
roll
repz
icebp
cmp
mov
sub
fnsave
cmp
or
es
lods
mov
popf
std
sub
movsl
shll
add
mov
call
push
xor
sti
dec
lods
push
not
icebp
xchg
pop
pop
pusha
fwait
sub
mov
mov
mov
fs
jmp
push
push
in
out
sub
insl
sub
icebp
jmp
mov
fldcw
push
adc
loope
inc
lret
sbb
insb
or
jecxz
bound
jg
xchg
cmc
xor
shlb
inc
icebp
ja
js
or
sbb
fwait
inc
pop
dec
push
ret
cmc
fiaddl
add
outsb
aad
in
test
mov
pop
iret
ss
jmp
pop
repz
fisttpll
inc
jmp
lret
adc
pop
inc
aad
inc
loopne
push
imul
xor
xchg
sub
divl
loop
sub
outsl
out
cld
xchg
dec
mov
test
and
test
jge
data16
ficomps
xchg
jae
popa
and
adc
push
and
mov
fildll
adc
jmp
xor
movsl
shll
sub
movsl
jecxz
je
sarl
add
call
in
push
out
jae
push
cmpsl
or
push
mov
inc
aaa
enter
rorl
inc
mov
xor
mov
add
cmp
test
cmp
push
sub
xchg
leave
mov
scas
dec
cld
fincstp
stos
adc
push
mov
aaa
outsb
xchg
adc
mov
rcr
lods
mov
ret
jge
mov
pop
jl
insb
mov
shl
loopne
ds
test
jmp
jecxz
insl
lock
stos
mov
pop
mov
jp
cmp
shl
in
and
repz
push
push
fists
mov
lods
xchg
loopne
sub
jmp
pop
in
cmp
adc
cmpsl
lret
shl
pop
cmpsb
fsubrs
cmp
adc
ss
and
fstps
dec
lock
inc
jle
mov
icebp
je
inc
xchg
dec
incb
mov
mov
mov
add
js
out
adc
push
inc
inc
push
shll
mov
push
and
shl
into
mov
xchg
cmp
pop
fcmovnbe
addb
ljmp
fnstsw
xchg
idivl
lcall
dec
pop
jl
jne
mov
push
jb
sarl
aad
daa
xchg
add
cli
cltd
ror
mov
sub
xor
jge
adc
insb
outsl
call
mov
mov
cs
data16
cmpsb
fldl2t
mov
ficompl
xchg
mov
and
pop
nop
ret
aas
movsl
mov
mov
ret
rcl
jnp
inc
out
dec
mov
sbb
loop
jecxz
js
pop
push
cmpsb
test
adc
lret
ss
outsb
rcrl
shlb
ds
loop
jmp
out
cmpsb
xchg
lds
test
mov
movl
mov
lcall
adc
dec
dec
std
in
sub
sbb
push
repnz
inc
movsl
shrl
jle
aaa
out
in
fisttpll
pop
mov
in
pop
js
aad
adc
sbb
xchg
ja
pop
mov
xlat
adc
xchg
adc
lcall
cs
adc
push
adc
pop
dec
mov
dec
mov
rol
mov
int3
sub
sub
lahf
xor
int3
mov
mov
xchg
xchg
negl
scas
and
jns
push
lods
popf
iret
push
cwtl
xchg
into
sub
push
pop
pop
pop
popa
sbb
mov
mov
mov
or
mov
and
mov
stos
xchg
cmpsl
push
jge
ljmp
push
sbb
pop
xchg
push
dec
pushf
aad
repz
negl
mov
scas
lret
test
push
enter
jmp
jge
adc
lea
ret
inc
movsl
ret
mov
cld
lods
or
aad
push
ret
jns
sub
iret
sbb
lods
ret
repz
sbb
mov
or
cmpsl
mov
sysret
sub
loopne
xchg
mov
xchg
shl
inc
jmp
js
mov
insl
jnp
adc
inc
mov
mov
xor
and
cmp
inc
or
ret
cmp
hlt
call
repz
inc
cmp
out
xchg
dec
pop
pop
sti
cmc
test
mov
xchg
stos
adc
clc
jmp
les
lea
sub
pop
mov
repz
jmp
cmp
sbb
xor
adc
mov
jge
mov
jbe
xchg
les
out
add
stos
jae
inc
sti
and
xor
dec
out
fucomip
sub
pop
inc
pop
xchg
out
ljmp
push
mov
and
adc
in
loop
stos
or
les
lret
mov
mov
les
pop
cmpsl
mov
scas
popa
cmp
mov
mov
mov
sub
jp
mov
lcall
cmpb
mov
or
cmp
mov
pop
sbbl
fsubp
es
dec
or
fstps
cs
pop
cli
lds
and
add
iret
add
mov
stos
je
pop
in
dec
jp
movsl
mov
andl
fdivl
jmp
or
hlt
stos
sbb
popf
stc
and
rcr
mov
adc
add
jbe
lahf
fbstp
jl
stos
xchg
push
rcll
xor
enter
das
outsl
inc
jecxz
jmp
movsb
jg
adc
xchg
fmuls
and
fstps
psrld
xchg
push
mov
mov
cmp
push
mov
mov
in
pop
mov
pop
and
mov
jge
mov
xchg
sbb
push
movsl
mov
pushf
aam
xor
lahf
jnp
sbb
fists
or
insb
xchg
pop
out
lret
xor
fwait
aam
xchg
push
mov
cmp
neg
imul
cld
mov
sub
fistl
icebp
xchg
rcll
cmp
pop
pop
rcrl
or
mov
mov
mov
fstpt
iret
push
mov
iret
lahf
or
aad
shufps
inc
lods
es
fists
subl
in
test
fists
out
cltd
inc
xor
mov
inc
negb
dec
in
lret
filds
int
pop
jno
push
add
mov
std
mov
xchg
or
iret
daa
inc
jno
xor
sahf
out
adc
xlat
inc
stos
xchg
rolb
dec
inc
stos
das
movsb
clc
fldl
fcomi
or
dec
enter
lret
cli
mov
outsl
mov
outsb
push
test
xchg
ret
ret
in
lods
adc
xchg
idiv
mov
mov
out
in
xchg
mov
lds
inc
ret
inc
adc
inc
inc
sarb
shl
cmpsb
xor
sti
rcrl
clc
cmp
roll
xlat
sti
mov
lea
jg
pop
mov
lea
les
dec
xchg
lret
push
mov
jl
mov
xchg
xchg
shrl
shll
inc
movsb
mov
inc
cmp
aas
fstl
pop
cmp
xchg
xor
mov
out
mov
ret
scas
arpl
mov
mov
pop
dec
and
jecxz
in
jecxz
dec
push
xchg
andb
outsl
repz
pop
aam
ss
jp
scas
inc
sahf
lods
mov
push
jmp
sbb
xor
aad
xchg
sbb
shll
testl
add
mov
movsb
mov
arpl
push
dec
cmc
add
int
mov
movsb
aad
xor
pop
sbb
xor
testl
lret
mov
xor
inc
test
inc
cmpsb
mov
fcmovb
scas
ljmp
mov
mov
sbb
lret
xchg
xor
fs
sbb
jecxz
repz
loop
add
mov
loop
mov
mov
add
mov
sbb
cmp
popa
jg
xchg
cmp
daa
stos
pop
popa
popf
xchg
rolb
popf
mov
or
lret
test
fstps
lret
push
cld
loop
shrl
xchg
xchg
in
pop
cmp
aas
cmp
mov
xrelease
pop
stos
xor
out
rcrb
pop
sbb
lea
cmp
pop
repz
xchg
aad
mov
popf
jmp
out
sar
jmp
push
fcmovbe
mov
repz
popf
jge
retw
pop
aam
rclb
loopne
inc
movsl
cld
mov
and
andb
bound
pusha
or
aaa
mov
mov
out
dec
fsubrs
mov
add
stc
adc
nop
xchg
jae
out
sbb
repz
es
mov
daa
jnp
xchg
xchg
cmp
jp
int
lret
mov
subl
mov
pop
jae
or
cmp
orl
mov
das
fnsetpm(287
pavgw
fildll
mov
push
ret
sbb
ror
dec
lret
lds
push
test
pop
push
mov
fistpl
fs
ffreep
into
popf
ret
movsl
mov
scas
push
repz
sahf
jle
xor
lods
stos
pop
adc
sub
push
mov
mov
push
es
mov
add
or
xchg
in
out
xchg
into
sbb
lret
mov
int3
or
push
pop
fildll
movsl
lods
sbb
mov
test
fidivs
mov
jecxz
daa
mov
stos
cmp
mov
jecxz
fsubl
stc
aaa
xor
push
daa
icebp
push
xor
jecxz
jle
jmp
in
popf
repz
cmp
add
push
pop
mov
into
shlb
scas
xchg
mov
push
jbe
cli
daa
xchg
cwtl
lods
xchg
fxch
mov
repz
xlat
push
dec
push
jae
sbb
mov
jl
popf
rolb
addr16
rorb
pop
aad
rcrl
sub
fistpl
mov
nop
data16
stos
stc
shll
jo
xor
call
mov
push
xchg
mov
cmc
mov
adc
add
mov
jl
adc
iret
jbe
jns
popf
stos
fwait
lods
sub
jmp
addb
out
fbstp
pop
xchg
icebp
fisubrl
ljmp
or
xchg
mov
inc
and
jne
repz
push
pop
cli
xor
mov
jmp
inc
xor
fsubrp
or
lds
jnp
inc
stos
mov
repz
lcall
das
stc
shr
adc
or
cmp
sti
or
arpl
mov
lret
ror
jecxz
lret
cmpsb
xchg
lea
ror
lahf
inc
outsl
xchg
repnz
push
mov
adc
xchg
pop
inc
dec
mov
mov
shl
out
push
ret
cmp
inc
mov
add
test
mov
dec
inc
push
or
jo
xchg
cmpsl
xchg
int3
sar
inc
into
hlt
or
xchg
xchg
add
sarb
ja
push
div
stos
fwait
mov
inc
fs
cld
cmp
mov
inc
dec
js
mov
fwait
mov
pop
jecxz
push
out
lds
mov
push
inc
inc
pop
stos
fldt
xor
popf
cmpsl
and
mov
dec
push
leave
negl
lods
xchg
xchg
pop
data16
jns
cmp
movsl
xor
and
mov
inc
data16
add
stc
imul
mov
stos
mov
icebp
scas
mov
test
aad
arpl
pusha
sub
in
push
or
sti
xor
xchg
add
imul
jb
jnp
lea
popa
xchg
je
stos
mov
icebp
lds
pop
mov
mov
inc
inc
pushf
aaa
mov
mov
xchg
test
lea
mov
xchg
xchg
sub
and
cmp
movl
rcrl
andl
leave
dec
pop
sub
jbe
dec
cmp
push
pop
mov
jo
fistpll
xchg
or
fadd
add
iret
in
or
repz
sahf
mov
int3
sbb
scas
adc
arpl
mov
adc
shrl
shll
or
cmp
mov
adc
jmp
dec
inc
sbb
das
data16
cmp
dec
adc
data16
lods
add
jp
sahf
jmp
iret
inc
xor
xchg
inc
xor
mov
cmp
or
mov
stos
push
in
loopne
sub
lods
test
or
sbb
cmpsl
testl
lcall
jle
mov
out
cmp
fs
jb
mov
sub
xchg
mov
fucom
cmp
mul
popf
dec
sarb
xchg
int3
pop
scas
inc
ja
jecxz
inc
cmp
pop
mov
loopne
jl
cmpsl
fnstenv
out
out
repz
mov
or
push
pop
sub
xlat
in
sub
cltd
scas
inc
cmpsl
mov
xchg
xchg
mov
dec
test
outsl
push
xlat
std
push
stc
ljmp
icebp
sub
mov
fistpll
fsts
xlat
mov
and
loope
stos
jge
cmc
mov
stos
leave
out
pop
xor
mov
popf
adc
cmp
fst
dec
xchg
mov
mov
inc
xchg
xor
popf
xor
mov
dec
pop
xchg
xor
pop
jge
sub
ss
sbb
rcll
mov
aam
scas
roll
xchg
roll
inc
adc
jmp
jl
lds
test
mov
lods
leave
adc
outsl
cmc
mov
shll
sub
mov
outsb
div
fbld
sbb
xchg
ficoms
repnz
adcb
ja
shld
push
xlat
xchg
jne
jp
jae
das
fldt
icebp
dec
pop
sub
aas
cmpsl
fs
xchg
iret
nop
sbb
inc
addl
cmp
dec
jg
lods
inc
dec
or
test
pop
jbe
jl
sub
fwait
loop
jb
mov
sbb
xchg
adc
pop
lea
xchg
loop
pop
push
rcrl
jle
out
inc
movsb
fcmovnu
leave
data16
xlat
lret
sub
daa
shrb
js
mov
ja
dec
es
lret
rcr
pop
fisubl
orl
dec
jbe
cmp
in
inc
jno
pop
scas
or
mov
sbb
int3
adc
push
dec
orb
ret
rcl
dec
dec
jnp
and
int
bound
jae
inc
or
mov
sbb
ljmp
mov
stos
push
int3
stos
ds
xchg
iret
push
push
mov
fcos
idivl
push
outsl
add
lods
rep
jge
outsb
das
stos
inc
xor
mov
out
jnp
xchg
popf
inc
push
cmc
fwait
jns
sub
outsb
fwait
pop
fld
fldt
call
mov
mov
clc
enter
fistl
aad
push
mov
in
popa
jl
imul
fcompl
adc
repz
xor
pop
outsb
xchg
inc
stos
call
ljmp
mul
lret
mov
dec
fdivl
and
shl
or
popf
div
ds
and
int3
xchg
int3
sbb
jl
push
and
mov
jle
pop
mov
flds
ret
mov
or
out
repz
cld
cmpsb
jmp
or
scas
test
push
pushf
mov
icebp
stos
sar
xor
mov
jp
shlb
dec
cwtl
add
aad
inc
mov
mov
sbb
push
xor
push
xchg
dec
fistps
es
scas
jne
fcmovnu
outsl
test
inc
scas
pop
psubb
rcrl
or
lods
repz
ja
inc
jge
sub
mov
fcomi
pushf
ffree
inc
in
mov
ffreep
dec
and
enter
xchg
pop
mull
add
ds
xchg
je
fwait
cld
popa
enter
lret
sbb
mov
mov
pop
test
arpl
das
les
icebp
mov
push
popf
cmpsl
xchg
daa
or
xchg
ret
clc
add
jecxz
in
shll
imul
jl
mov
jecxz
lea
cld
mov
popf
clc
lret
push
adc
mov
jle
shrl
aas
mov
inc
mov
mov
pusha
sbbb
loope
cmc
sub
push
mov
or
xchg
subl
mov
pop
add
or
lods
add
adc
loope
push
push
mov
pop
dec
out
mov
data16
mov
int
sbb
loopne
fsubrs
iret
adc
out
mov
jbe
inc
cmp
mov
xor
out
mov
sti
aaa
xor
sbbb
mov
mov
ret
into
sub
dec
inc
ffreep
xchg
lea
sub
or
pop
call
fisttps
xchg
popa
sti
mov
je
jae
xlat
repz
in
fnstenv
inc
fistl
add
cwtl
xchg
pop
xchg
mov
insb
mov
repz
ret
mov
adc
inc
cwtl
lret
xorb
out
ret
rorl
xchg
xchg
out
mov
lods
push
fadds
jbe
mov
xchg
mov
cmp
leave
push
test
mov
scas
xchg
hlt
mov
cmp
xchg
pop
adc
cli
ret
inc
add
mov
inc
add
icebp
sbb
aad
sub
ret
cmc
sub
sti
jmp
mov
inc
and
sti
add
jnp
lcall
lret
jo
ja
xchg
dec
dec
push
cmpb
xor
mov
sub
scas
movsl
or
lea
rclb
xchg
insb
dec
iret
in
popf
aad
jae
scas
cmp
in
mov
or
or
arpl
fwait
stos
popf
lret
call
or
ret
lret
aaa
mov
rorb
sbb
sti
cltd
sti
clc
lods
dec
ret
cmp
shlb
out
ret
push
push
mov
data16
rcl
pop
jno
scas
scas
pop
adcb
mov
mov
cmpsl
jle
mov
sub
lret
and
mov
hlt
data16
mov
movsl
fwait
jle
scas
mov
dec
pop
andl
pop
sahf
lods
test
sub
lcall
jbe
les
movsb
jae
adc
xor
xor
sti
call
push
loop
stos
pop
dec
dec
push
sbb
xchg
ret
push
flds
fwait
mov
fnsave
std
add
jmp
ds
leave
ret
iret
fcomps
fimull
fisttps
mov
lret
loop
dec
jno
xchg
int3
sar
idiv
ljmp
arpl
add
mov
mov
cmc
fwait
mov
add
js
ss
fdivr
sbb
lret
xchg
dec
sti
lret
or
cltd
jecxz
inc
and
stc
xor
mov
popa
cmp
pop
mov
sub
xchg
stos
in
jne
test
iret
push
inc
out
pop
imul
jecxz
xchg
aad
adc
nop
xorl
mov
pop
fs
xor
jbe
cmpsl
xor
test
cld
mov
dec
stos
les
sub
rcrb
xchg
insb
push
lret
out
fstpl
stc
push
imul
mov
xor
dec
jecxz
ss
sarl
js
sbb
mov
rep
repz
mov
imul
jno
movsl
xchg
adcb
add
movsl
and
fsub
or
fwait
cld
mov
movsl
popf
push
xchg
movsl
cltd
mov
aaa
out
mov
pop
in
or
sbbb
sub
mov
mov
imul
imul
fcoms
repz
pop
cld
dec
scas
xchg
add
xchg
fwait
mov
sbb
push
cltd
lods
sbb
inc
roll
cmp
sbb
xchg
movsb
test
push
mov
inc
dec
fwait
dec
movsb
fldt
mov
icebp
sub
sbb
fnstenv
mov
jecxz
arpl
xlat
xchg
jae
add
push
inc
sbb
xchg
xchg
repnz
iret
push
int
filds
pop
out
mov
aam
dec
jmp
sarb
jae
and
daa
insb
xor
mov
xlat
arpl
ret
loope
inc
sbb
push
insb
addb
repz
dec
scas
out
adc
pop
or
into
fildll
mov
fisubl
out
js
icebp
pop
xor
push
mov
mov
dec
inc
lret
dec
outsb
ret
sbb
xchg
xchg
pop
cmp
icebp
shr
push
inc
or
daa
icebp
sub
iret
mov
jle
sti
test
cld
push
pop
cmpsb
fdivl
and
xchg
cmp
test
push
inc
add
lret
jge
test
cmp
in
push
clc
das
popf
dec
and
mov
mov
sbb
push
gs
pop
stc
adc
dec
inc
add
cltd
xchg
mov
iret
pusha
mov
scas
dec
sbb
xlat
adc
cmpsb
rcl
pop
rcrb
or
add
divl
mov
sbb
inc
pop
pop
sub
and
xchg
stos
lret
jp
ja,pn
sbb
or
pop
mov
sub
sbb
sbb
xchg
iret
decb
dec
mov
icebp
push
xchg
scas
mov
inc
stos
test
lahf
dec
stos
stc
mov
mov
imul
fbld
cmc
mov
fwait
mull
xchg
scas
lds
mov
rcr
dec
pop
jmp
xor
jecxz
out
lret
out
lcall
mov
inc
cltd
xchg
jl
mov
outsb
stos
cmc
out
pusha
pop
ja
sub
int
stos
outsb
mov
mov
shlb
nop
pop
add
cld
aad
out
and
ljmp
push
sbb
mov
push
jecxz
xchg
mov
cmp
std
rcr
movsb
lret
repz
dec
cmc
in
xchg
sbb
xor
mov
push
imul
inc
cmpsl
rorl
shr
pop
or
sub
loope
push
pop
xchg
adc
scas
popf
and
mov
xchg
mov
dec
add
mov
aad
testl
rcr
iret
fstps
or
jns
fwait
adc
push
ljmp
add
aad
in
and
xchg
movsb
fwait
mov
add
sbbl
mov
push
pop
cld
fwait
ret
ret
pop
push
insb
mov
in
cmpsb
mov
mov
outsb
mov
ficompl
out
push
jbe
and
in
xchg
dec
cmp
mov
fbstp
out
inc
pop
mov
mov
repz
adc
sub
dec
scas
lods
xor
and
imul
rep
das
dec
sub
ret
mov
imul
roll
ret
into
cmpsl
shl
stc
xor
and
clc
loope
dec
imul
fwait
xchg
and
pop
mov
fprem
fsubs
call
repnz
xchg
cmp
sub
pushf
test
int
pop
mov
mov
xchg
pop
leave
in
test
push
aam
bound
in
mov
fcoms
lods
fisttps
sbb
jp
fstl
xchg
push
imul
sub
test
scas
push
pushf
push
cmp
mov
mov
push
cmc
orb
mov
xlat
push
popf
mov
loop
rcrb
dec
stc
xchg
mov
pop
jecxz
jae
jbe
push
sbb
pop
push
inc
mov
mov
and
out
lds
jle
scas
jmp
dec
fmuls
sbb
cmpsb
loop
sarb
mov
in
shll
leave
mov
inc
cmp
sahf
jg
mov
sub
pop
sub
out
pop
stc
mov
jne
fistl
inc
pop
inc
stos
dec
test
pop
loopne
outsb
xchg
push
dec
imul
xchg
out
adc
insl
pop
popa
add
pop
sbb
push
jno
xchg
in
lret
outsb
filds
cmpsb
xchg
jno
inc
inc
xor
sbb
add
pop
xchg
cwtl
sub
adc
pop
xchg
mov
aad
sub
sbb
inc
and
xorps
push
pop
call
and
nop
xchg
xchg
mov
test
ret
js
add
mov
xacquire
in
pop
mov
mov
xchg
push
mov
sti
inc
add
cmp
pop
data16
inc
mov
ret
fcom
xchg
or
sbb
jmp
fucomip
and
decb
pop
jmp
mov
popa
repz
lcall
jno
enter
push
sub
xchg
out
xchg
aad
push
sahf
sbb
sbbl
ret
fcmovnu
and
jns
movsl
sub
xchg
dec
push
leave
adc
xchg
out
pop
mov
mov
xchg
pop
push
insl
ljmp
xchg
inc
das
push
mov
xlat
sub
fcomip
sbb
fcom
pop
test
sub
shlb
js
lds
mov
ror
sbb
lret
xor
mov
loope
lret
test
std
lcall
xchg
jmp
cmp
push
xor
sub
xchg
lds
dec
out
movl
xlat
sbb
es
imul
jbe
pop
or
pop
scas
lahf
sub
adc
mov
out
nop
push
jle
mov
pop
imul
add
cmc
leave
in
lret
xchg
movsb
adc
mov
xchg
in
int
imull
sbb
lret
fistpl
add
dec
popf
jg
or
jmp
jmp
fwait
jle
add
push
loope
xchg
stos
sub
xchg
shll
push
lock
dec
add
or
pop
xchg
xor
add
shrb
mov
mov
sar
orl
xchg
int3
push
cmp
sahf
test
hlt
xchg
repz
inc
pop
orl
daa
mov
jp
hlt
mov
mov
stos
cmp
mov
cmp
neg
xchg
push
or
pusha
or
sub
lods
shrb
cmp
outsl
repz
sbb
mov
mov
ja
icebp
fisubrl
mov
dec
ljmp
xlat
xchg
adc
push
mov
push
xchg
jecxz
fwait
pop
inc
sti
pop
mov
icebp
mov
adc
mov
dec
cld
repz
mov
adc
xchg
cli
test
repnz
mov
into
dec
mov
jb
loope
imull
out
push
insb
nop
inc
cmp
into
dec
mov
mov
addr16
or
lock
test
inc
push
shr
sbb
mov
daa
sti
and
mov
push
adc
dec
fimull
push
mov
divl
aad
pop
stos
jge
ss
or
into
mov
pop
dec
xor
push
push
stos
or
hlt
mov
dec
xchg
mov
xchg
xchg
xor
jecxz
pop
cmc
repnz
jnp
jno
cltd
mov
fdivrs
push
xchg
cltd
test
into
sti
jecxz
icebp
xlat
in
test
lods
jbe
and
mov
mov
ss
fcomi
mov
fwait
movsb
sub
movsl
pushl
rcrl
rorb
jbe
arpl
dec
mov
xchg
add
pop
mov
mov
loopne
xchg
testl
lods
jmp
mov
sbb
in
cltd
mov
xchg
mov
lret
jl
iret
fbld
xchg
ret
in
loopne
into
stc
jle
mov
leave
cmpsb
repz
lock
repz
sbb
adc
test
rcll
xchg
sub
fscale
xor
outsb
mov
sahf
sub
mov
iret
ret
std
push
mov
repnz
xchg
aad
loop
imul
sub
mov
movsb
sbb
cltd
stos
gs
cmc
adc
iret
sti
out
lret
ja
mov
lret
cmpsl
fwait
pop
cmpsb
cmp
xorb
jmp
and
xor
shll
stos
out
ficoml
cmpb
fs
xchg
xlat
movsb
lods
adc
fs
push
xchg
cmp
lret
pop
lahf
fldcw
jl
aad
fisttps
push
scas
sbb
lods
xorl
orl
fsts
sar
test
cmpsl
repz
push
cmp
fbstp
dec
mov
call
xchg
jecxz
xchg
and
sahf
stos
mov
xor
mov
mov
es
dec
addb
lds
movsl
dec
cmpsl
jecxz
arpl
lahf
sbb
inc
icebp
jl
xchg
fnstsw
aad
loopne
test
into
push
jb
jp
sub
icebp
jmp
and
push
movsb
adc
xchg
mov
xchg
into
adc
int
dec
cmp
push
lret
es
jecxz
xchg
in
xchg
rcrl
jecxz
ds
pop
iret
in
sub
ja
push
jl
jg
sbb
andl
pop
cs
stos
fdivl
xlat
xchg
mov
mov
lahf
mov
mov
cmpsb
repz
cmpsl
push
mov
in
scas
sti
xchg
aaa
lret
or
mov
sub
rcl
and
xchg
arpl
test
mov
int
rorb
cmp
lret
fwait
lds
jg
mov
fisubrl
scas
in
lahf
jbe
xor
or
pop
stc
adc
inc
lahf
out
jmp
xchg
out
xor
ret
pop
jno
daa
xchg
mov
stos
xlat
je
adc
lock
fnsave
sbb
lret
lods
lods
add
xchg
test
push
add
lods
in
dec
roll
les
or
jns
mov
adc
ret
jmp
lahf
mov
loope
push
sbb
ret
push
lahf
stos
pop
call
pop
pop
fst
dec
mov
inc
hlt
xchg
stos
jge
ret
or
out
sub
cmpsb
roll
and
xor
mov
mov
adcl
jmp
cmpsl
xchg
int
shlb
out
cli
and
adc
mov
ret
loop
mov
or
ja
ljmp
cltd
dec
cvtdq2ps
mov
add
mov
dec
mov
sbb
fstps
xchg
imul
push
mov
repnz
popf
into
cmp
pop
pextrw
inc
cmp
adc
sub
pop
out
xchg
mov
out
cs
in
ret
sbb
xchg
sub
ret
les
mov
in
int3
sub
fisttpl
mov
rcll
xchg
sub
inc
cld
adc
mov
loop
inc
jne
addl
cmp
inc
dec
push
in
push
or
cli
mov
dec
out
mov
sub
stc
aaa
xchg
dec
or
test
shrb
aam
inc
adc
shlb
jne
xchg
fucom
fbld
das
lods
push
push
xchg
orl
aas
mov
xor
pushf
jg
scas
adc
sub
xor
int
mov
inc
mov
ret
xchg
pandn
jmp
lods
aad
push
dec
loopne
mov
xor
scas
jecxz
adc
jbe
lds
inc
shlb
jns
out
scas
fcmovb
test
jle
xlat
aam
push
loop
dec
pop
adc
pusha
sbb
cmpsb
or
roll
push
mov
sbb
add
pop
jnp
inc
pop
jl
in
adc
and
in
xchg
mov
mov
sub
cmp
lahf
stc
pop
fcomps
ss
mov
dec
ficomps
popa
jae
cmp
jnp
rclb
add
cmp
mov
or
mov
stos
xlat
aad
xchg
subl
insb
leave
jns
out
add
sub
stos
pop
lcall
pop
mov
aam
insb
sub
pushf
ret
push
mov
mov
sub
push
test
call
ffree
adc
adc
testb
call
and
mov
push
cmp
fst
and
les
cwtl
mov
mov
test
inc
xor
lods
lods
mov
jnp
lods
int3
inc
cmc
mov
mul
ror
daa
popa
xor
cmpsl
push
aad
adc
out
iret
or
xchg
push
lahf
shll
cmc
ljmp
dec
sbb
imul
xor
inc
dec
es
stos
jno
pop
mov
add
cmp
clc
jl,pn
jmp
ljmp
pop
jecxz
fwait
loope
test
daa
xor
popa
xchg
push
push
jbe
insb
cmp
vunpckhps
shrb
push
or
not
xor
inc
paddusb
cwtl
cmp
stc
jbe
dec
in
stos
xchg
add
add
xor
repz
xchg
scas
jp
test
movsb
jecxz
addb
inc
jecxz
mov
and
leave
mov
in
xchg
and
lret
negl
pop
cmpsb
add
cltd
sub
xchg
std
test
adc
and
lods
ret
sub
out
stc
arpl
pop
mov
out
jle
movsb
inc
fldl
jmp
jno
lret
lcall
inc
mov
sub
xchg
xchg
test
sub
pop
jbe
or
fsubs
or
dec
xchg
push
jp
cmp
ds
mov
dec
shrl
lds
stos
push
imul
mov
xor
sub
or
lcall
scas
xlat
stos
lods
adc
push
sbb
clc
out
or
lods
push
xor
int3
mov
xchg
pmulhw
or
icebp
cmpsb
jl
es
int
pop
mov
push
jbe
xchg
xchg
shrl
call
cmpsl
push
or
ss
add
push
ffreep
arpl
imull
dec
jne
mov
fistpll
push
rol
gs
ja
nop
test
pop
jecxz
loopne
mov
pop
push
inc
sub
rcr
xchg
or
mov
cltd
loope
shll
aad
push
dec
dec
aad
dec
sub
into
or
push
movsb
add
or
shlb
xchg
out
addl
mov
xchg
push
xchg
es
pop
mov
pop
jae
inc
test
add
stos
inc
aaa
lret
pushf
out
xchg
inc
jge
repz
out
movb
jmp
or
push
std
leave
test
xor
jg
pusha
push
aaa
sub
adc
cmp
or
fxtract
or
xchg
pop
sbb
xchg
dec
fisttps
in
shlb
enter
xchg
popf
stos
ret
lahf
lods
or
pop
fstps
sahf
jg
int3
or
test
and
sbb
imul
popf
popf
lret
fnclex
std
mov
jecxz
scas
push
cmpsl
sbb
div
ret
inc
cmp
ret
mov
pop
repnz
mov
lahf
mov
mov
push
gs
cwtl
add
dec
mov
lret
es
sbb
lahf
mov
adc
xchg
movsl
call
rcr
inc
das
jae
add
psrld
xchg
out
jns
push
out
inc
pop
jnp
popa
inc
sub
lret
cmp
aad
loope
test
clc
sbb
xchg
call
mov
xchg
xchg
push
sbb
cmpsl
jecxz
pop
dec
out
inc
mov
lods
mov
cmpsl
shl
lds
shll
imulb
mov
mov
jmp
push
xlat
insb
in
xchg
insl
push
xchg
daa
ficoms
or
add
sbb
lret
mov
dec
mov
aas
lods
lea
sub
sub
mov
jnp
push
push
negb
sbb
loope
outsb
or
fadd
cmc
lret
mov
gs
pop
hlt
inc
stos
scas
bound
mov
iret
repnz
or
scas
aad
adc
pop
inc
imul
addl
jno
mov
in
fisttps
outsb
mov
adc
lea
and
push
outsl
jno
pop
pop
push
cwtl
aad
adc
sarb
outsb
and
lcall
popf
jle
mov
sub
inc
cli
cmp
imul
incl
jg
sbb
js
cs
mov
add
mov
mov
sbb
lea
mov
inc
cli
flds
fists
ret
gs
inc
pushf
jl
mov
mov
or
stos
xlat
es
xchg
xor
pop
xchg
and
mov
rcrb
mov
ret
lahf
mov
inc
pop
or
lahf
loopne
lret
ret
rcr
jge
sub
pop
rep
rorl
mov
xlat
mov
and
cs
xchg
lock
cmc
sbb
cmpsl
cli
and
sub
fdivs
daa
dec
test
lahf
sub
gs
inc
je
insb
lahf
fistpl
sub
imul
imulb
popa
lret
movsb
push
fistpl
rorl
sti
clc
test
testl
push
pushf
cs
mov
call
or
xor
insb
mov
sbb
xchg
ret
xor
push
and
out
inc
mov
sarl
orl
pop
out
mov
mov
push
pop
pop
jmp
std
loop
fucomip
call
inc
sti
ret
icebp
xlat
outsb
dec
sub
xor
std
sub
mov
mov
pop
jo
dec
jl
in
shlb
ds
xchg
push
pop
sbb
ss
adc
mov
in
aad
test
cmc
pop
xchg
mov
xlat
mov
repz
sbb
fisubl
mov
mov
fisubs
repnz
jle
test
or
ret
mov
sahf
in
call
cmp
lret
leave
xlat
inc
jne
lods
cli
mov
xchg
fwait
arpl
fldenv
xchg
mov
dec
mov
xlat
and
mov
cli
aas
push
es
xchg
xchg
add
pop
lcall
xchg
std
mov
insl
les
mov
sbb
leave
fistps
pop
sub
addl
imul
loope
mov
or
mov
dec
insb
outsl
scas
push
stos
ret
mov
into
inc
xchg
leave
shr
loope
mov
ret
push
push
cwtl
stos
pop
ret
push
xlat
fistl
movsb
push
jle
dec
sbb
jmp
xor
rcr
ljmp
lods
sbb
sub
repz
mov
lds
dec
inc
test
xchg
jecxz
int
xchg
fdivs
pop
cmpsb
lret
js
fstpl
mov
inc
mov
mov
jge
pop
gs
je
stc
ret
outsl
loope
notl
or
icebp
rclb
fidivs
in
pop
insb
pop
insl
cli
cwtl
and
leave
cmp
nop
es
xchg
adc
ja
out
mov
rcrb
fisubl
mov
mov
rolb
fnstenv
imul
ret
int3
inc
popa
cltd
inc
leave
lods
sarl
pop
cltd
cmpsb
push
mov
rclb
jmp
insl
xlat
mov
jo
or
mov
outsl
std
aaa
call
sbb
ret
adc
testl
or
fwait
push
fistpll
xchg
add
or
stc
mov
xor
mov
xchg
xor
or
int
rol
mov
ret
xor
das
aad
repnz
jne
jl
xchg
push
sub
imul
xchg
mov
xchg
or
hlt
mov
xchg
repz
sti
sbb
pop
neg
ror
fwait
mov
ret
rcrl
adc
mov
popa
xor
imul
fadds
hlt
pushf
jae
adc
loop
mov
or
arpl
repnz
and
repz
in
repz
push
dec
ficoms
ds
push
ss
jns
fcmovnbe
call
jae
std
pop
test
stc
flds
push
mov
sahf
add
popf
mov
fwait
movsl
ret
into
jb
les
shrl
sarb
and
shrl
inc
xor
insb
mov
je
or
test
int3
rolb
fwait
jecxz
mov
loope
hlt
in
lea
lea
cmp
xlat
adc
cs
xlat
mov
adc
add
jle
repnz
sbb
jp
fbstp
sti
arpl
xor
xchg
mov
ret
xchg
in
mov
cld
ret
sub
add
sti
loop
ret
leave
push
lahf
inc
add
push
aaa
sti
fidivrl
shlb
mov
rorb
imul
stc
xchg
mov
push
movsb
iret
lea
imul
push
and
cltd
push
mov
cwtl
push
xlat
jo
jecxz
cmpsb
jnp
repnz
lods
scas
fwait
es
xor
adc
rcl
inc
insb
bswap
das
or
jno
xor
sbb
pop
xchg
sbb
ret
or
inc
jae
push
dec
repz
pop
mov
xor
out
or
jnp
popf
push
fucomi
sarl
in
pop
stos
xor
xchg
jae
pop
and
cmp
xchg
mov
insl
dec
loope
xor
jno
pop
or
xchg
das
fcmovb
pop
mov
add
mov
xchg
mov
test
iret
xor
jge
dec
mov
inc
mov
in
loope
add
mov
subl
icebp
mov
xlat
fdivrs
pop
inc
das
jmp
test
std
lret
andl
sub
fdivrs
aam
xchg
in
adc
aas
outsb
repz
add
loopne
ja
pop
lods
mov
push
stos
shll
in
add
test
es
lret
xor
cmp
dec
xchg
mov
rcrl
out
aam
or
xchg
out
ja
daa
jg
mov
cmpsl
dec
scas
pop
aad
lret
int3
icebp
addr16
stc
inc
ss
rcr
cld
fldt
test
or
rorb
loopne
sbb
lret
rolb
mov
das
roll
jo
xchg
bound
sub
sub
mov
add
cmc
inc
mov
inc
jae
cmp
rcrl
jl
and
or
add
mov
inc
mov
in
pop
bound
outsb
jae
insl
popa
inc
cmp
jl
xchg
movsl
xor
xchg
cmp
mov
test
fst
in
push
sbb
or
popa
jecxz
lcall
mov
gs
inc
loop
lcall
mov
out
imul
fs
jmp
pushl
lods
push
dec
out
movsl
insb
push
cmpl
mov
frstor
das
pop
mov
mov
and
push
dec
lcall
inc
mov
adc
movsl
rcrb
stos
std
mov
xchg
call
push
cmp
shr
icebp
shr
inc
sub
jns
test
xchg
lret
hlt
and
or
mov
ljmp
loop
stos
adc
jmp
lret
mov
lret
imul
dec
ja
adc
mov
xor
xlat
cltd
ss
out
mov
inc
cmp
shrb
popf
push
dec
add
xchg
cmova
xor
mov
and
mov
fdivl
mov
mov
xchg
test
stos
cmpsb
sub
mov
jmp
je
test
push
out
loope
ret
xchg
lods
sbb
icebp
loope
lret
dec
xchg
lahf
ljmp
out
xchg
inc
cmp
xchg
or
idivl
ret
out
jo
in
vphaddubq
ficoml
shl
push
es
mov
fnstsw
mov
popf
jb
jecxz
mov
jecxz
jl
pushf
xchg
in
cmp
mov
xchg
aas
stos
xchg
es
mov
mov
jmp
lret
jno
pop
adc
dec
dec
xchg
jecxz
mov
int3
int3
xchg
das
sbbl
pop
xchg
jns
dec
and
cmpl
sub
push
repz
ret
push
push
fmull
jg
xchg
imull
lods
adc
mov
mov
popf
fldenv
fsub
insb
test
sub
aad
push
icebp
jecxz
push
dec
adc
test
fisubrs
adc
in
cmpsl
xlat
push
icebp
rcl
xchg
ja
xlat
dec
test
push
adc
push
jns
shll
into
push
ficompl
testl
xor
pop
push
pop
aaa
in
repz
xchg
mov
in
mov
mov
cmpsb
iret
push
shll
jg
and
cmpl
lds
out
shlb
in
mov
lea
xchg
cmp
inc
rcr
sti
xchg
lret
sbb
pop
rcr
inc
xchg
xchg
jle
xchg
aam
mov
imul
xchg
movsl
cmp
aad
out
aad
test
icebp
and
imulb
repnz
aaa
mov
inc
pop
shlb
mov
ret
cltd
addr16
inc
adc
push
xchg
rcr
inc
mov
mov
iret
int3
into
aad
fldcw
test
jno
cmp
fwait
jp
jb
xor
cmp
push
rcr
lods
jle
inc
jmp
icebp
ret
and
aaa
xor
orl
pop
sbb
mov
loope
out
mov
fistps
push
rclb
lcall
jmp
cmp
std
cs
fwait
outsl
out
and
cmp
mul
call
test
in
out
and
jbe
mov
loope
fildll
xchg
fldcw
xchg
shrl
inc
mov
scas
mov
mov
fs
or
pop
sub
lock
xchg
aad
cmp
in
nop
roll
sti
pop
mov
test
arpl
rclb
mov
mov
adc
stos
pop
push
mov
pop
mov
enter
hlt
mov
test
imul
jmp
dec
mov
jbe
pop
rep
loopne
sub
cmc
mov
xchg
pop
mov
xchg
mov
test
into
inc
fmull
lret
cltd
shl
xchg
subl
or
nop
push
stos
xor
insb
loop
sub
fwait
ss
lret
out
dec
and
sbb
mov
push
xchg
out
out
in
rcrl
xor
imul
test
rorb
aad
push
xlat
call
adc
outsb
lods
fmuls
insb
test
mov
lods
fnstenv
popa
jmp
push
dec
pop
int3
adc
int3
into
pop
push
push
sub
repnz
pushf
test
xchg
gs
mov
or
leave
inc
mov
xchg
jecxz
xchg
mov
mov
cmc
mov
jmp
jl,pt
or
divl
fwait
out
add
sahf
lret
lret
sub
call
cmpsl
lock
lret
test
daa
xchg
push
jmp
sub
int
pop
pop
add
imul
push
cld
xchg
lds
out
lcall
div
push
lods
or
push
inc
data16
and
movsb
imul
mov
ds
xchg
adc
je
ret
es
dec
mov
aas
push
dec
test
sbb
int
arpl
jb
cmp
xchg
ja
and
lea
daa
or
and
push
fmulp
push
rcr
inc
mov
stos
mov
cmp
popf
xchg
adc
lret
push
lret
dec
pop
imul
mov
push
mov
js
mov
push
push
xor
das
fs
adc
mov
lods
repz
lahf
sbb
stos
sub
stos
leave
adc
ljmp
sbb
mov
lds
out
jle
fildl
push
ja
and
inc
dec
dec
popa
in
lahf
push
mov
mov
fisttps
push
xchg
cmc
mov
rclb
mov
pop
imul
std
lret
fisttps
adc
add
ret
or
push
ficompl
sbb
in
mov
jae
sbb
mov
xchg
loop
ficoms
aad
pop
push
sbb
mov
fbld
mov
iret
lret
std
xor
ret
mov
cwtl
sbb
in
or
fnstenv
int
adc
lret
xchg
sbb
int
lahf
lret
mov
lret
jecxz
mov
ror
aad
adc
test
xor
fiadds
fstp
adc
cmp
in
movsl
push
andl
xchg
sbb
pop
cmp
add
stos
inc
das
xlat
xor
jecxz
ja
jnp
js
add
add
xchg
sti
dec
xchg
fimull
mov
sarl
mov
adc
mov
pusha
sub
int3
lret
subl
into
cwtl
les
mov
mov
aad
pop
pop
repnz
xchg
in
dec
xchg
ljmp
xchg
popf
scas
and
dec
jmp
stos
movsl
pop
sub
sbb
lahf
add
icebp
scas
add
mov
mov
stc
rcr
ret
ljmp
leave
ret
movsl
lret
lods
pop
dec
push
popf
jecxz
inc
negb
mov
imull
hlt
ret
add
dec
and
mov
jmp
cmp
add
cmp
cmp
sti
jmp
mov
pop
mov
cli
push
mov
sub
cmc
jno
or
inc
in
jl
jecxz
sub
fwait
dec
ret
fstpl
ret
inc
jns
iret
stos
add
inc
stos
sub
popa
aaa
out
push
xchg
popf
stos
push
lret
inc
cmp
jns
jmp
pop
or
pop
mov
sti
dec
mov
xchg
ja
ss
int
mov
push
mov
inc
dec
aaa
fwait
pop
movsb
mov
repz
add
push
repz
pop
or
and
cmc
test
negb
fyl2x
inc
insb
ud1
sub
aam
add
icebp
lret
fwait
or
mov
xor
pop
mov
std
adc
mov
enter
mov
jg
or
lret
int3
inc
jle
iret
mov
sbb
in
fcmove
insl
jnp
imul
dec
inc
or
je
add
jmp
jnp
xchg
push
push
sbb
mov
lock
dec
fdivl
in
into
sub
clc
insl
loopne
rcrl
cmpps
mov
pop
xor
dec
out
es
test
lret
sbb
cmpsb
xchg
or
pop
scas
mov
cmp
rcpps
xor
fs
popf
inc
pop
out
ret
iret
stos
je
and
cmpb
pop
sbb
aad
jae
jbe
adc
out
cmp
mov
push
inc
cltd
jmp
jecxz
jnp
push
bound
push
pop
loope
arpl
xchg
mov
movsb
xlat
xchg
pop
push
xchg
mov
repz
and
stc
out
mov
sub
lds
jecxz
jl
mov
out
mov
in
pop
stos
inc
inc
mov
or
sbb
push
nop
daa
sbb
stc
push
add
cld
or
lods
pop
pop
addr16
loope
lret
cld
push
repz
or
and
mov
fildll
push
arpl
aas
pop
imul
pop
sub
xchg
cmp
nop
lcall
sub
rorb
mov
fwait
jl
push
fistpl
mov
push
fsubrs
stc
pop
dec
fcmovnbe
ret
out
dec
mov
jl
repz
shlb
mov
sub
sarl
xor
mov
faddp
push
pop
cmpl
mov
dec
divb
aaa
lods
jmp
arpl
lock
pop
outsb
add
arpl
dec
repz
cltd
fnstcw
test
fdivs
cmp
or
inc
xor
cwtl
xchg
xlat
push
and
jle
sar
mov
icebp
add
xchg
shlb
shlb
testl
jl
lahf
pop
imul
adc
adc
cld
jecxz
out
test
out
fistps
jo
dec
shr
fs
inc
adc
jecxz
cmp
cmp
jecxz
inc
mov
ret
out
cmp
test
ret
sub
aaa
or
xchg
adc
xor
add
xchg
imul
outsl
call
dec
sbb
in
rcll
icebp
push
test
imul
push
push
popf
pop
xor
cmp
repz
int3
mov
mov
int3
inc
insb
lea
movsl
xchg
push
aas
test
xor
sarl
outsl
nop
ret
mov
in
sub
shl
add
lahf
sub
push
dec
icebp
mov
adc
sub
out
xchg
incb
popfw
push
adc
repz
je
xchg
mov
in
out
subb
fldt
addr16
inc
jle
push
test
lock
or
test
mov
cmp
lock
xchg
ficoml
push
rol
mov
pop
cld
fcomi
filds
imul
xor
or
inc
fsubr
es
jmp
ret
popf
mov
xchg
int3
pop
push
xor
or
push
stos
sbb
jl
in
lods
cmp
mov
sub
loop
shlb
bound
lds
push
push
out
pop
lret
push
add
mov
ds
insl
mov
jmp
leave
data16
mov
xor
jmp
sbb
push
std
jne
add
push
and
mov
xlat
movsb
repz
cli
dec
jl
dec
aad
add
xchg
mov
xor
lcall
pop
scas
jbe
shll
stos
jo
inc
mov
mov
aad
fdivl
pop
xchg
lods
flds
jp
push
xor
inc
dec
les
xor
or
add
repz
into
inc
push
das
pop
push
lock
xor
outsb
sbb
inc
movsb
ror
push
pop
rorl
mov
outsl
ljmp
add
pop
inc
mov
je
addl
mov
sbb
dec
jle
add
icebp
leave
or
jl
or
stos
dec
ret
inc
into
or
inc
cmc
pop
sub
fidivrl
adc
fwait
push
testl
push
mov
mov
pop
add
ret
cmp
lea
dec
and
arpl
mov
or
pushf
dec
push
jecxz
sbb
push
or
repz
movsl
lret
push
popf
dec
dec
push
or
into
jmp
dec
inc
fisttps
xlat
adc
cmp
aam
repnz
fwait
shll
mov
adcl
popa
fildll
xor
fwait
lret
mov
dec
dec
daa
and
out
sbb
popa
rclb
cld
xor
mov
cmpsb
sarl
nop
jle
jb
mov
xor
aad
push
or
xchg
pop
mov
std
pop
jl,pt
subb
pop
pop
xchg
mov
lret
iret
or
fidivl
ret
int
repz
aaa
stos
xor
mov
lock
daa
arpl
inc
jmp
ret
rcll
cmp
adc
jnp
xchg
pop
daa
xchg
push
xchg
or
push
sbb
aad
mov
lods
mov
push
jg
mov
pop
fbstp
jl
or
mov
add
adc
outsl
push
fsub
jb
pop
adc
and
mov
jmp
mov
xor
sahf
subps
cmp
inc
mov
out
mov
mov
insb
cmp
mov
adc
shrl
mov
inc
dec
in
in
or
cmp
stc
shl
fcoml
mull
push
popf
jnp
mov
xchg
fdiv
xchg
xlat
cmpsb
decl
dec
insl
sub
fdivl
stos
xchg
sti
ret
cmc
je
add
shr
jge
push
cmpsb
or
iret
pop
inc
xchg
stos
into
popf
cwtl
insb
dec
fwait
lods
xchg
aam
subb
sbb
std
mov
push
hlt
xor
or
stos
mov
fistpl
lret
sbb
sub
out
and
mov
xor
inc
add
daa
repz
popa
ljmp
jecxz
cwtl
and
out
jl
or
out
mov
sub
cmpsb
dec
inc
hlt
or
icebp
jecxz
pop
push
mov
jp
add
xchg
ret
pop
or
ret
mov
xchg
mov
dec
xchg
jb
dec
adc
imul
xchg
daa
scas
out
testb
mov
mov
push
push
inc
movsb
daa
and
je
rorl
lods
or
lods
push
cmpsl
mov
test
movzwl
repz
xlat
dec
clc
xchg
aaa
jecxz
flds
mov
jle
xchg
jle
pop
outsl
jbe
or
repz
lds
pop
jp
sub
sbb
lds
push
xor
fstp
fisttpl
cmp
lahf
cmpl
jmp
push
movsb
scas
fdivs
aas
test
subb
es
lahf
push
pop
ficompl
ret
clc
mov
xchg
jmp
add
repnz
cmp
sbb
mov
push
lahf
jae
adc
shl
push
ja
out
aam
adc
mov
arpl
dec
mov
sti
jmp
rcrb
push
popf
test
mov
insb
notl
xchg
rolb
or
movsl
cs
ret
sub
push
xchg
or
push
rolb
lods
cltd
sub
rcrb
mov
jecxz
arpl
mov
loop
xchg
ret
jge
sub
or
out
incb
xlat
cltd
mov
mov
cmp
xor
sbb
lahf
scas
call
and
lea
aad
mov
fistps
pop
push
lret
mov
inc
test
mov
jl
cmp
fstp
repnz
les
lods
mov
xchg
xlat
testb
push
jae
mov
sbb
pop
sarw
test
mov
xlat
xchg
xchg
jmp
fwait
loope
jl
xchg
nop
push
fisttps
pushf
repz
test
testl
xchg
cmpsl
mov
insl
stos
ret
push
inc
inc
inc
ret
lock
out
int3
test
jl
jmp
in
arpl
aad
or
inc
mull
sbb
leave
xchg
push
adc
pop
jae
jbe
ja
int
xchg
adc
clc
sbb
mov
popa
test
in
push
lret
dec
xchg
mov
or
mov
test
rcrl
push
mov
lods
ret
mov
xchg
repz
pushf
cltd
mov
addr16
mov
in
jge
mov
add
pop
es
push
shr
xlat
sti
in
repnz
in
lcall
ret
push
sub
scas
cmp
push
insb
xor
iret
xlat
pop
fistps
jnp
inc
push
icebp
lods
iret
fidivl
outsl
lods
xchg
adc
mov
jmp
pop
andb
insb
es
test
pop
rcrl
mov
fldl
arpl
sub
pop
jno
call
stos
jno
shll
push
mov
cmpsb
hlt
ret
imul
scas
or
fwait
cltd
push
or
hlt
bound
pushf
rcll
adc
jp
cmp
imul
lds
lret
xchg
mov
lcall
jb
mov
or
jecxz
stc
stc
adc
cmpsl
popa
dec
roll
mov
xchg
push
addr16
sub
mov
jns
rorb
cs
cmc
out
cli
inc
mov
push
mov
and
divl
aas
insb
inc
fwait
pop
lods
sti
mov
xlat
adc
add
or
popa
jl
xor
insb
int
add
xchg
loope
jecxz
popf
xchg
adc
mov
jbe
andl
and
aad
ret
jecxz
stos
je
sti
fstpl
inc
stc
dec
adc
sub
and
and
xchg
push
mov
outsl
daa
mov
or
sbb
ret
imul
scas
icebp
movb
imul
or
icebp
or
fistps
jp
or
sbb
call
xchg
mov
jle
lret
cmp
xchg
in
push
inc
pop
sub
jmp
mov
pop
jge
mov
das
push
mov
ja
xchg
mov
test
out
add
rcr
push
pop
fsubs
decl
div
call
shl
mov
jg
cmp
in
sti
add
insb
pop
rcl
push
lods
xlat
inc
insb
push
mov
mov
js
test
ffreep
push
jmp
jno
fidivl
hlt
push
out
lods
jecxz
sbb
add
sbbb
cmp
rcll
xor
int3
mov
jecxz
lods
or
fs
mov
mov
mov
adc
dec
pushf
mov
and
sub
orb
jbe
aaa
mov
jecxz
add
imul
mov
mov
cli
adc
xor
test
or
stos
pop
jb
pop
rcrl
mov
jbe
mov
inc
fdivl
push
notl
sbb
inc
int
ret
mov
or
cmp
jle
mov
repz
push
leave
ss
mov
ja
xchg
testl
add
xor
lea
outsb
mov
leave
daa
jge
out
push
daa
fucomi
fistps
out
pop
sub
out
popa
cltd
inc
jecxz
or
sub
mov
stc
and
push
std
repz
loop
ljmp
or
sti
jnp
movsb
jns
xchg
aad
testl
fsub
and
mov
shrl
inc
in
xchg
pop
push
mov
add
and
loop
fxch
jnp
andb
in
push
pop
call
xlat
ret
dec
ror
xchg
inc
dec
out
int
imul
pop
xor
push
mov
cmpsl
xor
lahf
xchg
or
fsubs
stc
movsl
rcrb
or
lods
lret
fisttpl
mov
popf
pop
icebp
fwait
mov
sub
fwait
rep
std
fwait
mov
add
lock
sar
icebp
sub
adc
lock
pop
rol
ljmp
stos
psraw
mov
jns
sub
lods
mov
sub
rcl
sbb
jno
shl
sti
sbb
stos
cmpsl
shll
loope
push
xorl
inc
jne
fcmovnb
scas
push
xor
push
fwait
insb
xor
push
push
je
or
mov
jnp
adc
stos
jmp
popf
cmc
push
je
arpl
scas
mov
xor
fiaddl
sbb
xchg
rclb
mov
xorl
fdivs
fldt
jmp
pop
insl
mov
mov
adc
adcl
or
cmpsl
add
add
repz
xorb
icebp
mov
pop
cmpsb
fnstenv
stc
push
test
ja
repz
les
mov
rolb
xchg
mov
push
ret
std
loop
mov
push
xchg
andl
sbb
sar
mov
jae
and
daa
jecxz
pop
hlt
sub
sbb
push
or
cld
mov
ficompl
adc
xchg
mov
mov
mulb
ret
lds
mov
push
rcrb
shl
lcall
nop
dec
jbe
mov
sbb
arpl
aaa
aaa
mov
movsl
lcall
jecxz
rcll
fsubl
fbld
sub
mov
or
mov
fmul
ret
int
adc
dec
fincstp
fs
fcmovnbe
and
inc
mov
cmp
mov
je
iret
pop
jecxz
inc
scas
push
inc
sub
push
enter
in
mov
ret
push
out
cmp
js
jecxz
or
xchg
mov
fimull
bound
xor
and
sub
lret
sahf
lret
add
and
hlt
es
push
xor
sub
stos
lret
push
ja
or
lret
fistps
xchg
jmp
cvtdq2ps
sti
shlb
push
nop
mov
sub
cmp
lahf
je
push
aad
test
int3
jecxz
or
mov
mov
add
stos
jecxz
mov
pop
xor
inc
stos
fcmove
xor
add
xchg
cmp
inc
adc
mov
pop
xchg
pop
pop
lret
fwait
mov
sub
cmpsl
aaa
pop
inc
xchg
cmp
lret
mov
sbb
lods
sbb
adc
push
test
cli
imul
ret
hlt
dec
jl
lret
lret
mov
mov
movsb
lods
repz
rorl
sbb
lret
fnstcw
shl
outsl
or
fstps
lret
xchg
adc
or
jb
push
inc
mov
xchg
xchg
imul
mov
shl
xchg
mov
sbb
arpl
setns
ljmp
mov
jecxz
add
mov
mov
push
shll
in
jnp
insb
ss
cmp
mov
clc
jne
test
cs
push
das
bound
pop
fistpll
movsl
in
fwait
add
rorl
lcall
inc
dec
push
imul
ljmp
aad
or
add
fwait
inc
iret
rorl
faddl
ret
pop
roll
and
fdivs
dec
xor
adc
sbb
mov
aas
lret
push
les
xchg
lcall
incb
in
int
mov
add
loop
inc
pusha
xor
pop
shl
out
loope
shlb
inc
sbb
mov
out
addr16
mov
out
cmpsb
aad
or
xor
stc
add
mov
xchg
sbb
mov
mov
nop
stos
or
jnp
jno
rcrb
mov
xchg
mov
push
stos
cltd
mov
arpl
popf
mov
leave
pop
jae
ja
jp
xlat
in
adc
les
xchg
repz
xchg
mov
sbb
les
fwait
ret
insb
sbb
xchg
xor
pop
lahf
mov
sar
inc
test
mov
jecxz
test
aad
outsb
loope
dec
inc
dec
mov
mov
dec
jl
test
pop
loope
sti
mov
and
ficompl
mov
push
push
cmp
sbb
ret
fnsave
negb
sbb
pop
cld
sub
xchg
into
sti
mov
ret
or
push
mov
mov
int3
mov
fsubs
movsl
outsl
mull
scas
jmp
out
scas
lret
fucomi
sahf
xchg
lret
mov
decb
and
mov
insl
jecxz
and
push
test
sbb
movsl
jecxz
pop
push
mov
xor
jb
fbstp
call
scas
pop
pop
mov
cvtdq2ps
mov
push
shl
lea
cld
lcall
gs
bound
mov
ret
std
jge
and
inc
fnstcw
sbb
in
pop
loop
lret
inc
xor
push
add
push
pop
inc
mov
insb
loope
fdivrs
hlt
fsubrs
dec
divb
or
mov
loope
repz
adc
popf
iret
pushf
or
mov
mov
ja
aad
jmp
pop
out
ss
mov
xor
ss
loop
xchg
mov
das
jl
sub
adc
mov
xchg
xchg
sbb
int
fidivs
mov
cmp
add
mov
push
dec
xchg
or
pause
shlb
cmp
arpl
out
divl
aad
pop
insb
imul
decb
mov
nop
pop
test
in
xchg
sbb
xchg
rcl
leave
movsl
popa
jmp
mov
sub
sbb
jae
insb
out
and
rorb
rcrb
jb
and
int3
xor
adc
cmp
ss
roll
hlt
jg
cmc
cltd
xorl
icebp
stc
sarb
clc
pop
fs
je
and
lahf
idiv
iret
daa
stos
mov
mov
into
aam
pop
mov
jmp
mov
rcll
cmp
in
leave
in
jecxz
mov
adc
mov
lds
ss
icebp
push
pop
xchg
xchg
mov
ret
jecxz
or
aaa
mull
stos
mov
sbb
outsl
es
mov
mov
es
fwait
sti
sti
pushf
out
push
pop
xchg
test
or
inc
inc
mov
imul
pop
mov
lahf
rcl
ret
mov
lret
divb
mov
imul
sbb
jge
push
loop
aam
mov
mov
fwait
mov
mov
xor
or
sahf
cmp
ss
shll
mov
sub
push
cmp
cltd
nop
outsl
rorl
dec
or
sti
or
inc
aam
xchg
shlb
rcrl
cmp
push
popf
scas
and
cmc
mov
jno
cmp
enter
or
icebp
jecxz
fs
or
into
jl
mov
pop
and
cmc
xor
mov
outsb
popl
push
out
lret
mov
fmul
jl,pt
lret
mov
shl
or
lock
mov
lods
and
lret
stos
lock
fadds
aaa
pushf
xlat
push
xor
nop
mov
cmc
xor
xor
mov
mov
in
mov
mov
fstps
xchg
ror
push
jb
sahf
pop
out
xchg
push
movsl
xchg
mov
mov
clc
mov
push
fwait
xchg
in
pop
notb
mov
rolb
mov
push
xchg
mov
rcr
dec
int
inc
pop
adc
sbb
orl
sub
jge
rorl
pop
mov
pop
mov
xchg
rol
aas
jp
sbb
shll
pop
and
sbb
mov
pop
mov
or
cmpsl
push
scas
std
out
dec
or
push
dec
lds
xor
cmpsb
rcrl
das
dec
lret
repz
fbld
mov
pop
sahf
xchg
test
mov
mov
test
repz
es
negb
mov
inc
jg
jae
push
push
lret
xor
pop
shll
scas
add
jmp
xchg
nop
repz
gs
lret
mov
cli
mov
and
pop
arpl
jae
loope
vpor
mov
call
push
aad
add
fcmovne
push
icebp
xlat
iret
fmuls
ret
or
insb
shll
out
jmp
xchg
cmp
das
dec
sub
adc
fbstp
std
mov
enter
call
push
shlb
shll
xchg
jae
and
movsl
lods
xchg
movsl
push
pop
stc
pop
scas
mov
pop
mov
mov
adcl
es
ja
or
add
and
push
push
repnz
sarb
fdivs
aam
movsb
iret
and
mov
call
lahf
push
int
repnz
or
mov
inc
cltd
pop
cmp
outsl
or
or
test
sub
mov
fidivrl
cmpsl
adc
cmp
adc
sbb
outsl
stc
inc
mov
aad
inc
jae
pop
outsl
mov
mov
enter
ret
insb
sub
lock
scas
lahf
xor
rcll
clc
jecxz
stc
rcrl
mov
cmpsb
xlat
push
cltd
mov
jb
xchg
loop
lret
gs
ret
orb
fnstsw
or
out
jae
or
mov
adc
into
mov
call
sbb
lahf
outsl
xor
and
mov
pop
shl
sbb
aas
xchg
aaa
mov
sbb
pop
lds
xchg
cmc
loope
push
aad
fmull
ret
addb
inc
negl
fwait
not
mov
sarl
repz
xchg
pop
cs
xchg
sbb
inc
mov
cmp
sbb
imul
filds
dec
in
ret
pusha
push
adc
ret
out
movsl
xlat
aas
sbb
mov
push
stos
fsubr
adc
pop
xchg
mov
mov
mov
es
incl
in
stos
insl
arpl
and
xor
cs
mov
repz
test
addl
ss
xlat
inc
mov
jecxz
rolb
je
mov
cltd
testl
mov
enter
inc
inc
lret
xlat
inc
dec
cmpsb
sarb
scas
testl
push
mov
out
lcall
push
lea
or
mov
loop
test
mov
or
cs
mov
cmp
int
bound
sub
lods
mov
sahf
lret
lcall
add
cmpsl
fistl
in
mov
pop
mov
jmp
xchg
out
mov
or
movsl
mov
adc
mov
cmpsb
movsb
cmc
pop
mov
cmpb
icebp
sub
cmovl
fidivl
mov
jbe
fstl
stos
or
cmpsl
and
xchg
loope
stc
jg
imul
test
aad
pop
push
mov
cmpsb
xchg
mov
stc
fbstp
lahf
inc
sbb
sub
adc
jnp
scas
mov
lret
jl
orl
xchg
mov
xchg
icebp
jmp
pop
mov
in
clc
adc
cmp
xchg
pop
in
push
out
jmp
ret
shll
mov
sarb
dec
rorb
cmp
fmuls
sbb
jg
neg
xchg
pusha
or
pop
add
push
mov
test
stos
cmc
cli
sbbl
jns
mov
pop
notl
dec
std
xchg
mov
xor
filds
adc
test
mov
cltd
push
add
cli
movsl
pop
popf
push
enter
push
movsl
cmc
ret
hlt
in
inc
push
stos
jecxz
ret
lods
sbb
or
rorb
adc
sub
jnp
mov
lret
sti
out
or
pop
and
mov
mov
adc
or
pmaxub
daa
cmc
mov
dec
sbb
out
jnp
cwtl
fistpll
arpl
inc
mov
rorb
leave
and
aas
push
add
jmp
jecxz
add
out
ret
icebp
xlat
cmp
int
clc
jl
mov
cmpsb
lahf
das
mov
xor
ret
shl
xor
mov
call
lahf
xchg
lret
fistps
sbb
xchg
pushf
inc
pop
lea
xor
fdivr
ds
lods
or
repz
xchg
rorl
sub
mov
pop
or
cwtl
out
out
xor
cmc
mov
mov
sub
adc
xor
loop
pop
jno,pn
xor
and
mov
into
sbb
mov
stos
xchg
shlb
xchg
out
stc
inc
ja
stos
jno
xor
adc
mov
adc
cvtdq2ps
repz
bound
icebp
fdivrp
mov
push
int3
mov
inc
imul
sub
in
sti
negb
mov
or
loope
xchg
mov
xor
arpl
fisttpl
test
or
stc
rolb
xchg
stos
movsl
mov
lods
bound
jecxz
call
lods
xchg
add
sub
push
cltd
loope
pop
sahf
pop
in
and
push
insb
rolb
jge
lds
cmc
stos
int
jbe
shll
loop
and
ss
mov
push
fwait
fwait
loopne
inc
pop
out
mov
ror
pop
mov
in
sti
lahf
jge
std
inc
shll
cmp
mov
mov
es
insl
mov
mov
cld
imul
out
adc
shlb
fwait
xor
xchg
aaa
add
pop
mov
add
mov
or
test
lret
shrl
popf
dec
push
mov
daa
ret
push
xchg
in
and
in
push
pop
adc
pop
push
mov
pop
aad
cwtl
mov
das
mov
add
lret
das
adc
lea
cmc
lahf
inc
mov
rol
cld
fs
out
cli
fsts
inc
mov
fldl
mov
adc
dec
mov
inc
int3
xchg
cltd
mov
fadds
or
fwait
test
scas
mov
sarl
int
rcrl
mov
lahf
inc
push
and
push
stos
mov
stos
out
inc
les
outsb
popa
sbb
xchg
push
test
loop
sbbl
cmp
mov
push
negb
test
xchg
inc
jae
lock
dec
lods
cmpl
pop
or
pop
dec
dec
sbb
insb
pop
jecxz
ds
stos
jg
cmp
pop
out
icebp
pop
popa
xchg
inc
sub
xor
daa
inc
fistpl
xor
cwtl
sbb
icebp
fwait
or
into
scas
xchg
mov
jno
xchg
sbb
movsl
mov
dec
adc
xchg
ret
dec
nop
sbb
mov
xchg
jns
lret
xchg
push
addr16
adc
rcll
ret
jbe
incb
jle
cmp
jmp
movsb
push
pop
mov
cmp
cmc
add
inc
push
mov
mov
mov
stos
lods
push
and
dec
into
ss
cld
xchg
mov
mov
jbe
mov
ret
aam
loop
push
sbb
pop
scas
ss
cmp
jmp
mov
cld
add
add
lret
push
ret
lea
mov
and
in
je
or
stos
mov
jmp
call
xor
and
test
jae
pop
enter
shlb
mov
push
jne
mov
sub
iret
mov
icebp
scas
arpl
sub
mov
jecxz
mov
pop
loop
pop
cmp
rcrl
and
out
mov
fistps
dec
push
bound
out
add
fisttpll
mov
ljmp
ret
int
mov
btc
xor
divb
adcb
adcl
xor
inc
mov
ss
inc
mov
je
out
cmpsl
push
jae
leave
xor
pop
xchg
call
gs
add
fcomps
sahf
lret
shll
fisttpl
xchg
fwait
cmpsb
fidivrl
jns
mov
jl
cmp
shll
push
xchg
mov
xchg
cmp
filds
xchg
imul
fmull
lret
xor
lods
sub
pop
lahf
cwtl
aaa
lret
test
int3
mov
sbb
adc
jo
sahf
lret
mov
pop
sub
in
rcll
mov
sarb
mov
out
filds
mov
sub
push
mov
and
iret
leave
cwtl
insb
mov
fists
scas
popf
sti
sub
lret
xor
adc
cs
and
xlat
dec
push
repz
and
in
or
pop
imul
mov
faddl
jo
lret
fwait
xor
lea
jecxz
mov
or
not
cltd
testb
div
leave
xchg
and
mov
fdivl
lret
movsl
lock
mov
in
test
sub
sar
jg
ds
ret
shlb
jb
lret
popa
stos
and
rol
mov
lcall
icebp
pop
testl
out
sub
int
popa
std
mov
popf
mov
nop
mov
adc
cmp
shl
pop
push
ds
cmp
aaa
ret
push
dec
ret
jle
repz
loop
jecxz
stc
ret
xor
rorb
movsb
sub
inc
out
xchg
mov
scas
ret
mov
cmp
mov
jmp
mov
pop
xchg
mov
pop
movsb
xorb
sub
ror
pusha
mov
popa
xor
stc
faddp
dec
xchg
aad
loop
daa
pop
repnz
xlat
rcrb
lods
xchg
sub
cld
lods
cs
test
shll
jns
test
repz
fbstp
lahf
shl
mov
or
movsl
stos
lock
test
cmp
inc
rolb
stc
sti
dec
mov
mov
jle
scas
mov
mov
xchg
jp
inc
cmp
fildll
dec
adc
xor
push
movsb
sub
paddusw
push
mov
inc
hlt
leave
pusha
daa
xchg
hlt
mov
dec
fs
mov
mov
mov
fst
daa
mov
adc
negb
or
popa
pop
mov
ret
mov
xchg
jl
test
imul
out
xor
ret
lea
adc
pop
cmp
dec
loope
fistl
pop
int3
mov
ljmp
mov
mov
call
cmpsb
xchg
mov
fwait
push
mov
es
sahf
rcr
ret
pop
call
repz
test
roll
sti
fistpl
pop
out
inc
lods
pop
pmulhw
xchg
dec
mov
cltd
xor
aad
ds
ss
pop
pusha
lcall
xor
dec
popf
ret
ret
inc
pop
push
aad
and
stc
icebp
stos
xchg
lahf
mov
daa
xchg
les
rcl
xor
adc
or
jmp
std
mov
pop
or
lcall
mov
repz
dec
xchg
pop
xor
mov
rclb
xchg
push
pop
jns
xor
movsl
lods
aas
or
repnz
nop
lcall
das
fistl
cmp
iret
push
push
arpl
repz
lods
shll
adc
setno
fists
cmp
and
icebp
jle
mov
cli
xchg
imull
mov
psubsw
ljmp
movsl
shl
push
xchg
out
inc
movsl
out
add
sti
out
xlat
sub
inc
sub
sti
and
sbb
fidivrl
stc
or
rcll
enter
lds
cld
add
bts
pop
dec
xchg
daa
and
sub
popa
xchg
out
xchg
pop
adc
mov
dec
xor
pop
inc
mov
inc
push
sub
xchg
sbb
pop
stos
pop
xchg
inc
sub
sub
notl
outsb
inc
sti
cmp
fcomi
mov
fistpll
pop
imul
push
repz
sub
xchg
dec
jnp
shrl
fbld
insl
stos
lock
fs
pop
sub
aad
stc
push
push
push
and
sub
cmpsl
xor
pop
push
pop
and
loope
or
mulb
call
jecxz
or
jne
icebp
mov
dec
push
iret
jl
xlat
mov
in
mov
cmp
je
and
loopne
add
or
mov
xchg
fldcw
push
ret
fwait
lods
cmpsl
inc
mov
jno
xor
cmpsb
or
adc
movsb
xchg
push
stc
iret
movsl
repz
pop
scas
cltd
ja
mov
push
or
jns
cltd
ret
out
aad
xchg
inc
cmpsl
fisttps
adcl
dec
mov
repz
or
pusha
push
xchg
adc
flds
jno
mov
fidivl
or
out
jnp
or
add
sbb
mov
test
lods
adc
lds
xor
xchg
add
stos
jns
roll
rorl
dec
inc
xchg
out
ret
xor
cli
sti
sti
mov
mov
jae
test
jo
push
xchg
lods
mov
lods
stc
push
arpl
sub
lea
mov
and
jo
pop
movsl
mov
mov
ret
lahf
popf
stos
clc
fnstenv
mov
shll
xchg
xor
cmp
stc
jecxz
test
or
push
int
not
ret
inc
sub
decl
out
movsl
sti
fs
mov
clc
les
and
fldenv
hlt
fnstcw
int3
fcoms
cmp
and
push
dec
cmpsl
adc
imul
adc
int
pushf
inc
jl
pextrw
xchg
mov
sbb
leave
adc
jns
mov
xchg
in
add
fbstp
std
imul
scas
std
and
int3
stos
push
jno
or
loope
rorl
and
fisubl
stos
xchg
in
ret
adc
sahf
cmp
inc
sti
insb
sub
imul
cmpsl
fwait
dec
int
lods
pushf
mov
cs
lahf
repz
mov
jmp
add
cmpsb
shll
push
adc
push
imulb
mov
loope
jno
lea
jb
int
stos
insl
in
inc
jecxz
pop
jg
stc
js
ret
fcomi
cmpsb
push
xchg
or
jge
int3
out
sub
ja
stc
clc
pop
popa
jbe
mov
icebp
mov
push
xchg
nop
push
or
call
shl
add
lahf
mov
mov
xchg
cmc
out
call
jmp
cli
fst
cmpsb
cltd
shlb
es
fwait
int
sub
lret
lret
xchg
fmulp
inc
xchg
push
stos
adc
xor
addr16
dec
jae
test
sti
popf
xor
lcall
popf
mov
test
push
cmpsl
mov
mov
inc
outsl
out
ret
rclb
fcmovb
aaa
mov
ja
push
lret
stos
jg
cmp
lods
aas
adc
mov
aad
jecxz
pop
jecxz
cwtl
out
adc
cmpsl
and
stos
lahf
adc
add
dec
ja
adc
popa
add
mov
mov
pop
push
pusha
pushf
pop
lea
jecxz
popf
xor
lret
ret
rorl
push
in
mov
pop
insl
aam
mov
in
pop
mov
leave
pop
fincstp
push
aad
mov
inc
arpl
xchg
rcr
test
mov
lret
mov
dec
cmp
sbb
sub
aad
pop
lea
pop
push
ss
iret
lahf
or
sti
icebp
cs
xlat
jl
jp
xlat
mov
lahf
pop
call
lods
out
mov
sbb
mov
inc
repz
jle
movsl
icebp
out
loope
push
mov
push
xchg
es
mov
mov
in
daa
rcll
lock
pop
imul
jmp
fistps
ja
dec
pop
in
loope
shll
xor
pop
xchg
lahf
ret
pop
adc
jg
mov
addr16
jnp
pop
pop
add
mov
or
sbb
jo
ffreep
outsl
cmp
fiaddl
addr16
mov
push
out
cmc
push
lret
fdivs
or
loope
push
insl
outsl
test
aaa
push
mov
sbb
mov
lods
push
in
mov
mov
out
aaa
fbstp
fstpl
fcmove
call
clc
mov
fistpll
out
out
shrb
leave
popa
rcrb
ret
js
lods
xor
mov
out
fstpt
cltd
or
cmpsl
ja
pop
push
jg
mov
aas
mov
jle
int3
jge
xchg
fcomps
jmp
ss
lret
js
loope
jg
mov
popa
cmpsb
roll
test
fbld
aad
jo
fistpl
xchg
es
xor
sub
push
lret
loope
xor
sbb
arpl
ret
xchg
fcoms
mov
pop
mov
inc
sbb
loope
lret
imul
sub
aam
fcomip
mov
aas
in
ss
inc
int
fwait
sub
jae
sbb
push
test
or
mov
cltd
movsl
daa
inc
movsb
dec
mov
ja
fldl
stc
mov
sbb
fisttpll
adc
and
in
mov
stos
stos
inc
jmp
fsub
xchg
insb
std
test
notl
icebp
ds
mul
push
push
mov
jmp
scas
mov
lret
rcl
repz
sar
cmp
fs
jno
aad
xor
arpl
aad
mov
daa
roll
ss
icebp
pop
dec
enter
repz
pushf
mov
pop
in
ret
dec
dec
mov
sub
arpl
mov
mov
jae
arpl
out
pop
in
mov
pop
sub
int
pop
or
cltd
adc
in
cld
push
lcall
orl
div
lret
jns
orl
inc
pop
inc
xchg
jecxz
clc
cmpsl
mov
xor
ret
repz
pop
sub
or
mov
es
iret
scas
clc
add
aad
out
cs
movsl
jo
dec
mov
addb
aam
loope
pop
and
pop
xchg
push
fwait
pop
repz
push
les
cmc
mov
frstor
test
cmp
mov
cmc
adc
lds
push
cs
push
lock
fstps
fdivrp
mov
dec
push
mov
jne
divb
adc
push
movsl
in
daa
jno
leave
cmc
inc
aad
sahf
jp
mov
xorl
scas
ret
mov
roll
xchg
xchg
push
inc
xlat
aam
cltd
fiaddl
mov
sti
and
pop
ret
inc
cwtl
shll
fcmovne
insb
in
lea
jo
push
mov
and
fldl
mov
jecxz
cmc
out
sbb
xchg
out
or
fwait
icebp
ret
push
jle
cmc
sar
push
mov
dec
push
fs
scas
scas
and
or
fnstenv
lods
dec
orl
cltd
ret
movsl
pop
lret
inc
pop
imul
out
push
push
pop
add
pop
inc
mov
clc
or
out
jb
div
ljmp
shrl
mov
in
xlat
aad
in
js
imull
test
inc
out
lahf
leave
popl
std
popf
jecxz
gs
xor
mov
sbb
lret
sarb
call
fadd
int3
or
mov
xor
hlt
les
push
data16
mov
mov
jecxz
scas
repz
imul
xchg
jb
adc
mov
pop
stos
xchg
dec
aaa
ffreep
out
fdivl
pop
sti
jecxz
sbb
inc
lret
jecxz
test
aad
jl
xlat
xchg
aas
lcall
xor
xchg
pop
sub
dec
mov
lret
dec
push
icebp
leave
cmp
fwait
sbb
xor
cmp
out
sbb
push
xchg
repz
sahf
stc
in
cmp
insl
repz
fwait
jp
out
iret
xorb
add
inc
sbb
inc
sub
or
pop
filds
stc
andl
mov
push
icebp
fildl
aad
nop
adc
fidivl
mov
dec
movsb
ret
aad
mov
mov
cmp
repz
sbb
cmc
adc
dec
movsb
xchg
rol
fwait
jle
cld
out
push
cltd
cli
cmp
aam
addl
outsb
mov
inc
mov
or
xchg
lds
pop
cmp
sub
lret
repz
imul
xchg
cli
fs
out
out
ss
pop
ret
cmpsl
cmp
jecxz
cmpsl
in
mov
fsubp
lds
mov
scas
scas
lret
jb
jne
sub
pop
je
lods
push
lahf
dec
pop
loope
cmp
mov
push
push
sub
xor
ja
notl
icebp
push
cwtl
sarl
xor
in
test
fistps
ja
cmc
sub
push
cmp
cmc
adc
es
mov
sahf
adc
jnp
in
hlt
fcomi
mov
pop
add
adc
push
test
stos
repz
out
jb
mov
imul
rol
or
mov
lcall
scas
xor
pandn
or
rcrb
call
sbbb
sti
iret
inc
dec
imul
stc
ret
mov
adc
adc
push
or
addb
mov
mull
add
sub
lcall
push
xchg
fld
dec
lret
sti
imul
dec
jmp
clc
test
add
dec
jb
cmpl
movsl
mov
xorb
iret
inc
xchg
aam
push
push
fisttpl
cmp
mov
xlat
adc
icebp
mov
mov
lret
subb
mov
xchg
js
iret
pushl
xchg
icebp
test
cli
or
test
mov
sub
daa
lret
sbbb
mov
pop
icebp
bound
mov
fistps
pop
push
mov
add
rcrl
jno
popf
icebp
sub
popf
pop
and
xchg
repnz
sbb
mov
or
fldl
dec
inc
xchg
xor
xchg
jno
test
cs
aaa
rol
adc
mov
imul
imul
idivb
out
sub
mov
fiaddl
jmp
cmp
xchg
in
incb
insb
sub
frndint
in
rorl
xchg
sti
sbb
mov
mov
jecxz
pop
sub
gs
out
fbld
insl
mov
imul
out
fists
or
or
call
or
adc
sbb
push
jmp
push
sarl
jmp
movsb
rorb
lock
push
mov
sbb
sti
stos
jb
xor
mov
cmpsl
mov
divl
mov
in
enter
repz
icebp
fldt
or
cltd
xlat
fstps
loopne
pop
int
rcl
aad
pop
jecxz
sbb
pop
loop
xchg
xchg
adc
lods
jnp
leave
mov
dec
repnz
xchg
jns
mov
cmpsb
mov
movsl
xlat
insl
cmp
sub
movsl
xchg
push
aaa
mov
out
sub
mov
insb
push
push
in
cmp
fcmovnb
fldenv
mov
jmp
cmp
jle
push
dec
lret
test
shrl
idivl
xor
inc
frstor
xchg
div
aas
xlat
sarb
xchg
testl
ret
push
loope
mov
outsl
mov
push
jb
pushf
nop
test
mov
ss
pop
cmp
sbb
ror
fnsave
scas
mov
lea
mov
test
cmp
fcomi
ja
push
cld
dec
sub
outsl
les
subl
dec
test
push
test
popa
aad
imull
fldcw
lea
cmc
jecxz
icebp
jns
iret
dec
sbb
mov
shl
mov
jno
add
and
lahf
push
std
shl
push
daa
push
mov
xchg
sub
mov
push
pop
jge
cmpsl
ja
mov
stos
repz
lret
repnz
mov
andb
repz
mov
xlat
ret
shrl
xchg
mov
fwait
stos
inc
fs
ss
xchg
xor
inc
jle
lods
push
push
ret
pop
add
shll
shll
cmp
sti
xchg
sahf
in
dec
sbb
ja
mov
into
pop
fisttpl
inc
lret
cs
xchg
lock
testl
pop
rolb
out
out
xor
xchg
dec
xchg
lret
and
ret
dec
rolb
into
push
jno
movb
pusha
sbb
loope
lret
cli
push
pop
fwait
ret
imul
adc
clc
cwtl
push
lea
pop
and
test
or
jbe
push
mov
data16
and
mov
lret
jle
ret
jno
cwtl
insb
scas
dec
xchg
dec
and
and
flds
mov
mov
push
test
sarl
mov
pop
mov
daa
js
or
into
sbb
lods
adc
decl
mov
aas
push
movsl
shrb
lcall
jge
arpl
arpl
adc
xlat
adc
push
mov
fisttpl
pop
inc
jecxz
ds
push
das
dec
insb
icebp
out
inc
or
shll
add
stos
ljmp
cmp
mov
pop
cli
mov
cmpsb
mov
fwait
in
sub
or
xor
ficoml
iret
rol
cmp
push
scas
mov
and
stos
jo
stos
add
push
push
popf
inc
mov
rol
pop
stos
repz
cli
dec
or
jecxz
sbb
ret
mov
and
stos
or
and
lds
stc
arpl
rcrb
pop
hlt
cmp
mov
xchg
pop
or
xor
jae
fcmove
arpl
mov
sarb
lret
ret
mov
push
fldcw
loope
decb
mov
dec
je
xchg
cmp
lods
push
movsl
cmp
adc
xchg
jnp
cs
pushf
fistpll
mov
inc
aas
notl
nop
daa
adc
fwait
jb
xchg
in
cmp
insb
sbb
int
popa
sar
xchg
and
lods
mov
hlt
repz
adc
arpl
fwait
lahf
ret
int
sub
mov
fucompp
inc
into
sub
fisttpl
push
jecxz
in
and
fisttps
mov
stos
std
outsl
bound
push
xor
shlb
popf
jbe
ljmp
mov
dec
imul
cmpsl
lret
cmc
or
mov
add
enter
jp
or
into
push
xchg
inc
fildll
shll
sbb
popa
xchg
fistl
fildll
xchg
push
sahf
sbb
inc
cmp
cmc
push
aad
dec
add
jmp
mov
ljmp
mov
sbb
mov
in
inc
orl
loope
out
jmp
mov
mov
mov
mov
add
sbb
ljmp
push
ficoms
sti
mov
lea
inc
xchg
mov
pop
sub
out
cmp
lods
inc
xchg
pop
mov
lret
or
push
insb
jecxz
cmpsb
push
arpl
jmp
insb
push
xchg
fisttpll
jle
mov
int
or
mov
mov
movl
mov
aad
pop
mov
mov
testl
mov
stos
sti
adc
shll
xor
popf
cmp
push
pop
mov
clc
ret
out
ret
mov
lods
mov
lcall
pusha
dec
ds
testl
test
cmp
mov
lods
ret
pop
enter
adc
mov
mov
ret
jle
adc
hlt
pop
jb
stos
pop
or
push
lods
fistpll
mov
cmp
xlat
jae
bound
push
dec
int
out
sbb
mov
and
mov
xchg
lea
xchg
inc
popf
sub
dec
push
imul
test
pushf
inc
in
jmp
xchg
jae
jl
popf
sbb
mov
mov
rcrb
dec
jb
jae
insb
mov
mov
clc
mov
decb
cmpsb
pop
push
xchg
mov
xor
mov
xchg
add
xchg
movsb
push
inc
jge
xor
xchg
fcmovu
iret
mov
popa
cld
mov
mov
lret
out
lods
loope
push
in
outsb
pop
cmp
cltd
cld
loop
iret
mov
xchg
jbe
cmpsl
in
out
inc
stos
sub
cmc
jbe
popf
int
hlt
cmp
rcl
std
xor
sbb
sarl
mov
cwtl
movsb
push
cmc
inc
mov
mov
cltd
xor
pop
popf
dec
ret
or
jp
xchg
sti
push
in
jne
fwait
and
mov
fildl
cmp
lret
push
loope
out
ret
xchg
icebp
pop
fiaddl
icebp
ds
aad
cld
pushf
sbb
lahf
xacquire
mov
xchg
jne
mov
jmp
adc
stc
fbstp
pop
mov
jb
je
jp
xchg
cmc
pop
leave
mov
iret
xchg
in
jae
imul
in
mov
or
sbb
push
in
fnstsw
cltd
mov
test
dec
or
iret
sbb
inc
sbb
xchg
out
or
lret
push
xor
fwait
xor
lret
pop
maskmovq
negl
daa
xchg
jp
inc
outsb
mov
movsl
pop
outsl
inc
mov
push
mov
icebp
arpl
out
push
mov
dec
sar
cwtl
cmpsb
adc
mov
mov
int
int
fildll
push
or
fsubrl
arpl
and
jp
xchg
call
and
fisttps
lret
daa
fwait
mov
loop
push
loope
outsl
pop
add
ljmp
jge
sarl
fcmovnb
push
xchg
inc
mov
push
pop
inc
adc
lret
sbb
pop
in
push
inc
repnz
por
pushf
mov
arpl
mov
hlt
cmp
lret
inc
pop
sarl
adc
fwait
sti
je
fcmovbe
lods
push
clc
pop
divl
cmpsl
add
mov
repz
out
test
je
std
or
out
aaa
mov
xor
pop
mov
std
cmp
mov
in
xchg
in
ret
lds
cmp
inc
xor
jmp
sbb
repnz
push
pop
ljmp
loope
jecxz
clc
cltd
jb
cmp
cmp
inc
lahf
xchg
pop
adc
cmpsl
mov
out
test
mov
xchg
push
imul
inc
mov
fisttpll
ret
shlb
pop
and
std
cmp
clc
push
mov
imul
mov
inc
jl
jecxz
xlat
xorl
inc
test
out
mov
push
mov
outsb
jl
cld
mov
dec
es
icebp
fcomps
mov
dec
pop
mov
cld
jb
mov
out
xchg
push
rcr
fidivrl
pop
movsl
xchg
add
fbstp
in
fildll
repz
xor
es
mov
pop
jb
xor
xchg
fldt
ficompl
cli
sbb
lahf
out
leave
mov
arpl
adc
mov
ja
mov
sub
sbb
rcl
inc
mov
fbld
dec
jp
mov
stos
pop
jge
aad
loop
fwait
jo
jno
inc
in
sarl
jge
lea
or
in
scas
outsl
in
rolb
mov
addr16
pop
fistpll
mov
mov
shld
pop
in
sbb
inc
mul
mov
inc
fcmovb
mov
imul
icebp
enter
clc
hlt
pop
insl
jno
fisttps
daa
and
add
out
push
ja
es
fwait
rolb
iret
mov
sub
fistpl
aad
dec
cli
push
testl
insb
dec
movsb
ret
insl
xchg
shll
mov
mov
sbb
decl
dec
sbb
fwait
jg
out
mov
fildl
and
incl
data16
sub
add
jmp
test
jae
or
sti
mov
ffreep
int
sar
ja
bound
xchg
jecxz
inc
lds
fwait
test
fcmovne
jbe
movsl
mov
mov
cmp
fdivr
imul
mov
push
enter
insl
jg
mov
inc
aaa
lret
and
scas
xchg
cmp
pop
sbb
add
aad
fidivl
xlat
mov
mov
mov
or
popa
cmp
fisttps
push
cmpsb
js
jl
dec
dec
xchg
out
push
sub
ljmp
enter
add
push
daa
mov
or
ret
cmpsl
shlb
mov
cmp
xchg
fwait
lods
pop
xchg
ret
cmp
aad
pop
aad
nop
lods
loope
jnp
lcall
mov
stos
ret
call
stc
cli
icebp
mov
sbb
popf
pop
or
dec
lcall
imul
stos
lea
lods
in
add
or
mov
inc
insb
xchg
movl
add
mov
loope
loop
notl
aas
int
push
mov
cmpsb
mov
loop
mov
scas
ret
neg
call
push
add
dec
inc
adc
xor
lret
jg
repz
out
das
les
lahf
push
or
or
mov
adc
movsb
cmp
in
movsl
jno
mov
ja
xchg
sbb
loope
and
push
das
leave
push
nop
lcall
lahf
ja
outsb
cmp
adc
cmp
sub
pop
jmp
inc
fmull
xchg
in
or
lret
xchg
in
mov
dec
outsb
mov
pop
leave
xchg
dec
filds
mov
ss
lret
and
xchg
mov
test
int
push
aaa
lods
dec
and
out
aas
ret
xlat
sbb
jl
push
in
jbe
lret
cmc
mov
sbb
inc
sbb
adc
and
xchg
jns
loopne
fcomi
mov
push
testl
fnstsw
mov
pop
lret
or
sbb
mov
cld
stos
negl
adc
jnp
adc
add
pcmpgtb
xchg
lret
fbstp
icebp
sti
repz
mov
fnstenv
pop
cmp
stc
clc
sti
into
lret
in
mov
push
mov
and
pop
lock
enter
stos
cmp
xchg
push
shl
adc
add
add
dec
orl
je
or
outsb
xchg
or
push
xchg
xchg
std
test
push
mov
rcrl
daa
rcl
dec
sub
mov
jmp
add
xchg
lret
sub
jecxz
push
out
xor
xor
scas
jb
mov
sub
pop
push
pop
push
iret
or
mov
mov
or
jecxz
pop
fcomi
dec
adc
pop
stos
fildl
mov
xchg
out
mov
call
xchg
push
stos
addr16
sbb
stc
or
mov
xor
and
jmp
mov
fsubs
test
cmp
incb
mov
in
scas
cmc
mov
jb
insb
adc
push
mov
mov
push
lea
sarb
jge
std
xchg
gs
leave
mov
xchg
sti
lret
fsqrt
mov
dec
push
dec
sti
std
negb
mov
mov
push
add
dec
fwait
mov
int
push
pop
and
mov
xor
xchg
icebp
mov
or
call
push
jmp
jmp
ret
push
xor
sbb
jecxz
ret
inc
cmc
aad
in
pop
shrl
pop
and
pextrw
movsl
ret
xlat
xlat
ret
or
jno
lret
and
xchg
cmpb
dec
or
dec
add
fsubs
movsl
jl
lret
cmp
adc
pop
popf
mov
dec
cmp
imulb
flds
cmp
test
xchg
adc
negb
addr16
and
movsb
mov
mov
js
std
sar
adc
loope
sarl
push
sub
lahf
pop
test
cmpsl
xlat
shrl
ret
jb
mov
push
pop
pop
in
or
fwait
stos
aam
jecxz
icebp
imull
sub
xlat
adc
insb
xlat
cli
adc
adcb
subl
dec
cmp
mov
push
push
ds
cmp
xchg
into
inc
sbbl
xchg
fisttps
add
pop
sbb
test
and
das
xchg
fists
out
pop
xorb
imul
xor
or
xor
jg
cmp
mov
pop
cld
jmp
jecxz
in
test
out
mov
lds
add
xchg
or
out
adc
out
cmpl
fwait
pop
iret
adc
cmpsl
jle
test
xlat
nop
pop
dec
xor
mov
mov
imul
inc
mov
test
pmulhuw
out
lea
adc
stc
inc
add
sbb
adcl
and
lret
or
lret
push
xchg
xchg
pushf
insl
xlat
xchg
xor
cwtl
fistps
mov
rcl
pushf
cmpsb
test
jno
push
stos
leave
add
lcall
sub
xchg
or
in
mov
push
or
or
mov
out
stc
mov
je
mov
mov
pop
gs
xor
aad
cmp
test
mov
and
inc
dec
xor
pop
pop
stos
sub
xor
fwait
pop
sub
cltd
andl
scas
xchg
aas
jmp
or
std
jb
jp
fwait
and
pop
fmuls
adc
aad
out
xchg
pop
test
dec
ss
lret
or
jae
iret
jl
scas
stos
mov
test
in
sbb
mov
sub
mov
mov
add
aas
dec
movsb
push
mov
and
jb
sub
ss
scas
xchg
icebp
js
pop
jg
jp
jecxz
inc
repz
cmc
mov
sbb
lds
rcl
aam
dec
rcrb
fwait
push
pop
subl
in
repz
mov
lods
inc
test
mov
ret
jecxz
lret
pop
or
in
stc
fadd
fstl
xchg
shr
cmpsb
shlb
mov
sub
lods
fildl
fstpt
mov
mov
daa
ret
inc
ret
pop
lods
int
jnp
mov
pushf
add
adc
repz
outsb
sbb
scas
inc
xchg
stos
mov
call
jl
add
ja
nop
xor
out
ret
mov
xchg
inc
mov
loop
mull
ret
arpl
push
lcall
roll
mov
ss
cmpsl
push
loop
testl
imul
in
dec
sbb
pop
mov
mov
aad
pop
xchg
xlat
mov
movsl
pop
adc
xchg
testl
sbb
lahf
cmp
in
imul
xor
xor
inc
leave
push
sbb
insb
push
popf
mov
pop
sbbb
jae
and
bound
loope
mov
fnstsw
jge
push
fcomip
stos
repz
insl
popf
jno
imul
mov
jb
mov
int3
dec
xchg
int3
lcall
cmpsb
dec
mov
xchg
je
fstpl
dec
push
mov
push
inc
jle
pop
xor
stos
sub
flds
repnz
xlat
lods
xlat
cmpsb
push
sub
xor
xlat
lods
dec
test
push
aad
inc
ret
scas
lret
shl
cs
aad
ja
mov
fwait
jecxz
arpl
out
mov
ret
push
xor
stc
and
adc
sbb
roll
fnstcw
xchg
inc
fsub
jecxz
pop
inc
mov
repz
sbb
mov
sbb
movsl
mov
pop
movsl
sti
cmpsl
adc
lret
cmpl
rcl
scas
pop
outsl
sbb
addr16
xchg
lods
add
jecxz
out
sub
cmp
push
lahf
and
popf
xor
ret
mov
ljmp
repz
pusha
sbb
jl
or
and
arpl
out
or
ret
idivb
jecxz
mov
lret
jnp
arpl
call
dec
test
xchg
rol
pop
jae
bndstx
scas
sub
cmpsb
mov
cltd
jmp
or
hlt
mov
stc
int3
mov
repz
mov
jecxz
push
push
ds
adc
int3
orl
mov
sub
notl
js
roll
gs
adc
mov
xor
sbb
fcmovnb
sub
loop
or
and
scas
movl
push
add
jl
shlb
cmp
sbb
negl
inc
aaa
sub
sbb
fwait
subb
xchg
xchg
rolb
not
repz
out
jmp
mov
lock
xchg
mov
fsts
inc
nop
xchg
pop
mov
cmc
jle
mov
ret
xchg
flds
aaa
dec
into
loope
mov
mov
imull
or
aad
xchg
xchg
sub
repnz
sub
fwait
in
sbb
aas
xchg
push
repz
insb
sub
mov
dec
loope
outsb
mov
inc
push
dec
std
das
sti
ret
mov
fdivrs
add
mov
int
negb
cmpl
fsubs
adc
mov
xchg
add
fldenv
aad
bound
repnz
cmp
mov
ffreep
push
rcrl
imul
psubusw
jo
push
mov
mov
lds
pushf
xchg
pop
test
cs
xchg
inc
xchg
mov
lret
inc
ljmp
lahf
lcall
fidivl
test
mov
pushf
rcl
mov
stc
call
sbb
rcrl
aas
out
loop
pusha
call
jo
cld
in
lds
push
ret
jbe
mov
fisubrl
pop
leave
out
flds
test
fisttpll
pop
fs
pushl
bound
sub
ljmp
mov
jo
push
pop
lods
gs
inc
sbb
cltd
lods
sti
and
jb
ljmp
xchg
cltd
dec
mov
out
call
xlat
insb
push
jns
xlat
rolb
mov
sarl
test
xor
shrl
cli
or
xchg
int
push
sub
adc
shrl
popa
or
stc
cwtl
fwait
out
xchg
sarl
push
popa
call
sbb
rcrb
jle
dec
mov
iret
xlat
je
jae
inc
cmp
lret
xchg
sti
adc
inc
mov
out
stc
into
cmp
lcall
cwtl
mov
jae
dec
out
sub
push
add
adc
cmpb
sarb
lret
pop
mov
xor
and
jecxz
loop
shl
cmpsl
pop
jo
cltd
pop
jno
lods
sti
lea
cmp
adc
divl
mov
and
pop
dec
mov
add
push
jae
cwtl
cmc
mov
sub
mov
push
jmp
imul
xchg
shlb
fs
movsl
fucomi
xchg
rol
popa
ja
shrb
out
test
add
sbb
daa
aad
adc
sahf
das
into
mov
aas
sbbl
jbe
mov
icebp
pop
xchg
int3
stos
cmc
mov
lahf
repnz
int
test
pop
sub
dec
movsb
sarl
mov
stos
sar
mov
push
inc
xchg
cmp
test
push
aad
mov
cltd
lds
loopne
adc
xchg
fwait
or
pop
jne
push
pop
mov
cmp
mov
jmp
repz
repz
gs
adc
inc
and
out
lods
iret
push
jmp
test
xchg
icebp
ds
mov
ja
mov
fwait
sbb
es
out
ret
xchg
popf
sbb
icebp
cmc
or
inc
add
popf
mov
xor
push
scas
mov
jecxz
fadds
sti
or
mov
insb
inc
sub
mul
sti
adc
cmp
cmp
pop
push
add
cltd
adc
mov
loope
roll
test
arpl
fwait
cwtl
jecxz
aad
cmp
cmpsl
jecxz
pop
ljmp
mov
test
ret
xchg
mov
mov
and
cmp
iret
pop
xchg
js
ret
mov
jb
pop
mov
jmp
mov
inc
cltd
sbbl
cltd
lret
push
rcrl
mov
adc
push
mov
jbe
test
mov
cltd
mov
out
int3
shll
clc
mov
adc
call
cmc
pop
in
pop
stos
mov
xchg
push
pop
push
mov
mov
insb
into
scas
fstpt
jae
cmp
out
xchg
insl
xchg
or
xchg
xor
add
repnz
fistps
and
aad
mov
fwait
loopne
mov
pop
daa
lds
mulb
lret
xchg
and
push
out
mov
arpl
fisubl
xor
jle
rcll
pop
push
sbbl
stos
add
fucomp
dec
repnz
in
in
push
scas
xlat
fnstcw
sbb
mov
jecxz
mov
adc
cmc
shrb
aas
push
movsl
jl
add
ss
sar
lock
cmpsb
adc
mov
fwait
jle
xchg
nop
push
pop
mov
out
cs
fwait
repz
and
imul
xchg
call
and
fcmovne
fistl
inc
mov
mov
sbb
pop
add
int
fists
cmp
mov
stos
jno
inc
arpl
mov
das
lds
in
fbstp
loop
sti
out
mov
jno
test
and
mov
xor
jnp
or
lods
vmovd
lods
xchg
mov
xlat
in
cmp
insl
sub
mov
dec
xor
mov
xchg
movsl
int3
loop
inc
pop
jl
movsl
jecxz
fldl
and
mov
cmp
inc
mov
xlat
xchg
adc
mov
inc
or
rcr
into
and
or
dec
rep
mov
movsl
push
or
dec
lret
leave
aad
and
fisttps
jo
push
fwait
cmc
sub
fnstcw
add
fcomip
aaa
jl
fst
lods
clc
popa
leave
pop
es
aam
repnz
out
xchg
mov
sbb
aam
xchg
lods
ret
and
fistl
sbb
mov
or
out
sbb
enter
jae
xor
dec
div
push
mov
sub
mov
sub
jmp
and
dec
or
movsl
pop
test
inc
mov
movsb
mov
jbe
mov
pop
test
mov
sti
sbbb
test
xlat
xchg
mov
fs
shll
adc
imul
repz
in
popf
cld
mov
hlt
dec
sub
cmc
lret
fbld
popf
aad
icebp
fs
imul
daa
sarb
mov
mov
flds
and
aad
out
daa
repz
xchg
mov
inc
pushf
cmc
lods
or
shll
cmpsb
lea
mov
out
icebp
aad
lods
shll
xchg
inc
aaa
cmpsb
test
cltd
ret
pop
mov
jae
mov
or
std
jg
inc
test
push
mov
inc
lret
sub
rcll
jne
cmpsb
cmpsl
scas
mov
into
loop
jae
ret
pop
rclb
cmpsl
cmpl
xchg
movsl
xchg
es
icebp
in
sbb
testl
mov
xlat
outsb
xor
or
xchg
fists
cmp
insb
repz
loop
ror
fwait
popf
mov
fmull
xchg
and
cmp
add
or
dec
stc
pop
push
test
mov
push
rcrb
fwait
rcll
loope
int3
jae
xchg
or
lret
mov
shl
cmpsb
push
sub
in
dec
mov
movsl
sbb
mov
xchg
pop
xchg
mov
dec
sbb
pusha
or
insl
popa
stos
fisubrs
fwait
mov
fmull
divl
inc
sub
mov
faddl
jo
push
daa
stc
aad
or
sbb
xor
mov
out
sub
push
mov
xor
lcall
arpl
nop
mov
xchg
icebp
jge
repz
xor
inc
insl
sub
and
push
cmp
mov
inc
testl
inc
in
shl
scas
repz
mov
popf
sbb
jge
sub
mov
and
xchg
fucomip
int
dec
fnstcw
xor
push
nop
fdivl
out
rcrl
jmp
mov
ret
and
fldl
loopne
test
push
cltd
push
jg
and
adc
loope
icebp
xchg
sub
lret
or
stc
repz
add
xorl
movsb
je
ret
jge
outsl
repz
arpl
push
test
add
adc
lret
xchg
rorb
inc
dec
dec
cmpsb
aam
xchg
push
xchg
mov
ret
les
pushf
inc
fcomip
pop
mov
pop
pop
popa
fimull
mov
stos
mov
mov
sub
push
push
mov
mov
stos
pop
inc
icebp
or
int
mov
bound
xchg
mov
inc
jge
mov
popa
push
mov
rol
jecxz
iret
sahf
test
jmp
fldcw
testb
mov
sti
fwait
push
sbb
lret
ret
sbb
rcrb
lds
je
subl
test
mov
xchg
inc
sub
in
xchg
push
dec
xlat
out
xor
dec
ds
mov
dec
mov
mov
cmpl
jl
dec
loopne
out
mov
add
stos
jno
inc
fwait
pop
sub
add
ret
sub
xchg
rcll
mov
sti
stos
lods
lea
xchg
test
out
or
sbb
xchg
les
sbb
jae
xchg
es
scas
repz
push
push
loope
fwait
push
mov
dec
aad
imul
push
or
cs
inc
xchg
mov
xchg
imul
mov
imul
sub
icebp
mov
repz
stos
xchg
imul
jb
adc
fsts
aas
fnsave
xor
mov
xchg
cmpsl
ja
in
movsb
jae
dec
xorb
subl
ret
push
adc
mov
fmul
pop
mov
pop
lods
xchg
fistpll
out
ljmp
sub
fisttps
test
jge
sti
mov
stc
push
dec
xor
fildll
cmc
xchg
adcl
jae
stos
out
out
mov
sub
or
xchg
adc
movsb
repz
push
xchg
cmp
xchg
std
hlt
aam
pusha
cmp
jp
lret
aad
jmp
fildll
cmpsl
push
push
sub
add
cmp
aad
or
jecxz
xchg
sarl
inc
ret
push
mov
lea
cmp
add
fildll
scas
xchg
add
mov
sbb
fbstp
pop
testb
xor
xchg
dec
clc
inc
xchg
out
xlat
cltd
repnz
push
mov
sbb
aaa
fbstp
cld
sub
loope
pop
icebp
adc
and
mov
inc
and
ret
push
add
mov
cmp
sbb
inc
fsub
jmp
xchg
add
pop
push
ljmp
pop
aad
dec
mov
setg
stos
jns
mov
fcomp
xchg
loop
sub
stos
xchg
jmp
aad
mov
repz
andl
adc
push
test
or
mov
das
out
stc
jl
fwait
jecxz
ja
mov
shll
or
xchg
fcomip
cltd
pop
pop
push
sub
int3
xor
xlat
dec
rcrb
fldl
jmp
pop
or
push
xor
stc
mov
mov
sub
pop
pop
xor
jnp
add
or
add
sti
dec
push
adc
mov
mov
or
out
mov
aaa
fistps
cltd
inc
ljmp
cs
inc
movsl
or
test
xor
out
pop
sub
lods
into
out
lret
test
outsl
mov
and
movb
leave
aas
sti
push
lret
fidivl
addl
adc
inc
mov
dec
cld
in
sub
mov
or
and
xor
das
mov
and
dec
lret
aad
insl
or
and
mov
push
out
dec
sub
ljmp
cmp
loop
mov
push
loopne
adc
mov
dec
mov
jg
rol
cltd
push
dec
push
pop
push
pop
push
dec
push
mov
fstps
arpl
sbb
stc
lods
mov
mov
orl
iret
mov
xor
dec
movsb
ret
out
mov
mulb
out
mov
inc
add
rcrb
adc
leave
insb
lret
out
mov
arpl
xchg
finit
xchg
aaa
pop
mov
xor
and
imul
jns
inc
xchg
fwait
sti
jecxz
add
and
in
fsubs
xchg
rol
sbb
pop
nop
stos
sbb
xchg
cs
sbb
xchg
test
add
adc
jg
insb
repnz
repz
xor
jl
inc
xchg
std
sahf
inc
andl
inc
stos
rolb
subl
scas
cld
aas
mov
mov
mov
sbb
into
jecxz
mov
xor
adc
adc
push
sbb
push
lcall
add
jmp
xchg
imul
call
out
xor
test
mov
rcrb
lea
add
cmpsl
out
add
mov
push
insb
jns
mov
cld
mov
mov
ljmp
std
push
sub
push
dec
pop
psrlw
jbe
outsl
and
mov
fwait
out
mov
shrl
xor
popf
cmc
test
popf
sbb
xchg
int3
in
int
cmp
fucomip
shlb
aam
dec
flds
stos
jbe
or
push
stos
cmc
inc
rcll
dec
add
pop
mov
ret
push
jnp
mov
std
ret
pop
popl
cmpsl
jns
inc
xchg
fistl
or
push
call
and
adc
mov
xchg
xchg
push
or
cmc
aaa
adc
jmp
int
and
stos
mov
lea
call
cmp
mov
xchg
rcrb
pop
loopne
hlt
fyl2x
mov
lret
push
aas
ja
stos
out
cltd
shlb
es
fwait
ret
int3
nop
pop
fbstp
xchg
inc
add
xlat
stos
dec
adc
lods
xchg
loop
dec
xchg
lahf
mov
shlb
cmp
sbbl
lret
mov
clc
cltd
xchg
xlat
inc
lret
cmp
cmp
insb
in
mov
inc
je
lahf
iret
aaa
aad
test
popa
out
ss
iret
adc
rolb
jmp
adc
in
test
stos
fcomip
fildll
push
fucomp
call
jmp
aad
inc
or
inc
stc
mov
inc
ss
ret
out
sbbl
arpl
fucom
and
lahf
jle
lods
repz
push
mov
mov
sbb
lods
mov
inc
mov
loopne
je
sti
das
les
mov
mov
dec
jae
mov
xchg
sbb
rorl
or
iret
fildll
ja
mov
jbe
add
xchg
mov
or
insb
pop
sub
test
jl
push
cmpb
repnz
out
popf
test
fstps
jp
repz
adc
mov
fcomp
dec
mov
jecxz
push
adc
sar
xchg
int
xchg
rorl
mov
pop
inc
ror
xor
jae
cltd
out
push
xchg
popf
push
mov
xchg
inc
push
ja
leave
jmp
xor
mov
add
or
imul
mov
rcll
pop
std
outsl
lcall
loope
stos
xor
sbb
scas
loope
imul
mov
jle
lret
add
mov
and
rcrb
shlb
mov
jmp
xchg
and
add
outsl
insl
cmpsl
filds
mov
imul
in
dec
add
mov
or
out
cmc
rcrl
mov
stos
loope
addr16
scas
mov
fwait
inc
aas
movsb
xor
pop
nop
xchg
lret
mov
ja
int3
lods
jl
push
lret
daa
sub
mov
jg
cmp
clc
mov
roll
pop
js
mov
mov
sub
jne
out
aad
push
call
mov
in
push
mov
in
mov
insl
pop
jmp
daa
stos
push
jbe
int
jo
inc
push
rcll
pop
push
dec
mov
outsb
add
push
xchg
push
out
push
lds
jp
repz
int3
das
mov
push
rorl
cmp
adc
xchg
jbe
push
mov
sub
sti
mov
lcall
xor
lods
jecxz
ja
in
pop
sti
mov
repz
in
mov
mov
leave
addr16
add
not
loope
adc
xchg
outsl
sbb
xchg
mov
mov
mov
repnz
push
test
lahf
sub
lret
fwait
out
push
decb
daa
xchg
xor
push
push
jecxz
jl
loope
outsl
adc
adc
rclb
adc
xchg
into
fldl
cmp
cmpsb
aam
into
cmp
kxorw
lret
stos
sbb
fisubl
mov
icebp
int
xor
xor
in
sbb
jp
imul
ret
inc
pop
subl
fisttpl
std
jecxz
xchg
sarl
loop
fistps
mov
hlt
add
jle
loop
in
xor
dec
inc
outsl
je
xchg
sti
ret
fwait
sbb
inc
xchg
mov
cmc
repz
cli
stos
loopne
je
int3
inc
stos
push
inc
inc
mov
xchg
test
fistpll
mov
cmpsl
mov
xchg
or
js
shl
mov
fstpt
or
mov
loope
cwtl
mov
mov
ret
out
out
lret
jb
pop
inc
ss
mov
mov
jno
xor
mov
xchg
outsl
xchg
cmpsl
xchg
call
lret
call
adc
ja
idiv
fistpll
xchg
xor
xchg
das
xor
dec
add
sub
sarl
lods
or
fcoms
sbb
inc
mov
arpl
repnz
std
movsb
lahf
xchg
jg
push
xchg
mov
jle
repnz
movsb
movsb
mov
push
fwait
fwait
and
fnstcw
test
sbbl
cld
fwait
daa
js
pop
fidivs
or
mov
inc
popf
popf
aaa
mov
adc
xchg
cmp
mov
sub
jl
scas
lret
in
lahf
push
inc
jne
sub
cltd
stos
mov
pop
divb
mov
push
xchg
aad
adc
or
fstpl
cmp
sbb
outsl
mov
mov
out
stc
lock
dec
repz
test
xchg
dec
shl
outsb
mov
test
scas
ret
mov
or
push
cmp
jp
movsb
dec
sub
mov
ret
shll
xchg
je
lret
clc
icebp
adc
aas
mov
lods
mov
jbe
fnsave
pop
loop
jecxz
int3
inc
jae
dec
add
sbb
xchg
sub
mov
and
imul
inc
dec
cli
loop
mov
daa
test
jl
adc
arpl
and
pop
lods
dec
insb
add
rcrb
cmc
ret
imul
pop
std
test
cltd
jp
shll
or
jecxz
pop
jl
orb
pusha
push
adc
xlat
lods
adc
sub
dec
adcl
in
movntps
lods
pop
mov
ret
lret
push
xor
cld
sub
sti
clc
mov
cmp
icebp
or
aaa
stos
loopne
icebp
pop
test
xchg
rolb
call
sub
sub
fcomps
daa
mov
add
leave
mov
ret
ret
ja
dec
outsl
mov
fists
repz
and
push
orb
pushl
mov
cmp
pop
inc
test
into
mov
jp
add
mov
test
xlat
test
xchg
insb
xor
push
add
inc
push
fwait
mov
inc
pop
ss
or
xchg
cli
aam
pop
mov
mov
jl
andl
imul
xchg
int3
pop
add
arpl
xchg
out
mov
dec
loopne
fcomip
inc
lret
loope
xchg
lahf
mov
mov
sbb
add
lds
stos
cltd
pop
add
adc
pop
pop
test
mov
xchg
mov
in
pop
ljmp
xor
hlt
adc
push
arpl
dec
push
test
mov
pop
mov
sbb
sbb
push
repz
fistps
in
shrl
mov
xchg
xchg
cld
mov
xor
xchg
adc
lahf
shll
xor
add
test
adc
or
xchg
ja
cwtl
cmp
inc
repz
cmp
xchg
sub
push
cltd
aad
loop
std
xlat
movlps
cwtl
fwait
insb
fwait
popf
mov
scas
mov
cli
jecxz
pop
mov
test
and
scas
sbbb
cld
dec
xlat
push
xchg
xchg
js
out
jo
sbb
aad
in
lret
aad
push
dec
into
shr
repnz
popf
mov
inc
shlb
pop
or
ror
out
xor
mov
sbb
iret
sub
fisttpll
lods
push
xchg
add
push
ret
movsl
dec
dec
jg
cld
mov
inc
add
clc
jmp
jecxz
pop
rcl
shll
lods
lret
mov
xchg
and
out
lcall
dec
jnp
lret
shll
int
popa
pop
hlt
inc
aad
push
dec
daa
iret
in
add
cmc
xchg
xor
adc
ret
pop
xchg
push
jno
xchg
rcrb
jo
cmc
stos
rol
adc
cmp
nop
fistps
icebp
ds
cmpsb
adc
xchg
int
aam
ja
xchg
dec
mov
fwait
subb
fwait
nop
jo
and
mov
insl
pop
enter
mov
cli
mov
pop
jbe
inc
fcomi
testl
in
push
and
mov
lcall
frstor
and
sbb
inc
imul
xor
cmp
movsb
fstl
jl
mov
mov
fcoms
out
xchg
shrb
and
mov
imul
xchg
insb
dec
push
cmp
cmp
sub
xlat
pop
movsb
icebp
icebp
mov
pop
test
test
mov
xor
inc
ljmp
mov
sub
shll
adc
pop
shlb
in
push
jae
cli
and
inc
rorb
mov
rorl
xchg
stc
mov
inc
mov
icebp
cmp
in
popa
push
enter
xlat
mov
jo
push
inc
mov
cmp
fldl2t
lods
pop
mov
mov
mov
push
out
ret
xor
popa
repz
fwait
inc
xor
cmc
mov
lcall
sti
sti
adc
push
test
ffreep
in
inc
rorl
sbb
mov
adc
cmp
imul
pop
mov
lock
jl
cltd
add
sub
push
test
ret
aad
cmc
xor
adc
xchg
mov
in
test
jle
jmp
pop
push
sbb
cmc
cmp
push
outsb
mov
dec
pop
out
mov
sbb
fldt
xchg
fsubl
je
and
xchg
std
dec
or
fisttps
xor
pop
jmp
pop
xchg
rcrb
insl
fcoms
sbb
fwait
iret
sbb
popa
sbb
pop
xchg
test
pop
fadd
xchg
mov
ficoml
sti
push
out
hlt
dec
cwtl
outsl
mov
stos
fstpt
cmp
jecxz
mov
addb
mov
or
push
gs
xlat
loope
push
sbb
sub
mov
pop
aad
mov
pop
mov
data16
mov
lret
shll
lcall
xchg
test
jmp
cmp
out
and
or
dec
lea
iret
sbb
rcll
or
mov
int
insb
sub
rcrb
jmp
xchg
cmp
arpl
cli
and
sbb
icebp
mov
pop
xor
mov
icebp
pop
lahf
cmp
sbb
mov
std
std
inc
arpl
lea
xchg
ffreep
mov
sbb
push
bswap
sti
mov
xchg
cli
fwait
mov
test
movsl
popa
xor
push
push
mov
or
rcrl
shr
repz
jmp
int3
pop
test
pop
arpl
sbb
daa
cmp
mov
pop
inc
mov
or
int3
mov
inc
mov
or
sub
icebp
or
iret
in
pop
stos
out
add
ret
pop
push
pop
and
jmp
xor
sbb
mov
push
add
cmp
add
cli
mov
bound
adc
cltd
insb
push
jecxz
fstpl
paddsw
rcrl
push
stos
xchg
push
insl
xchg
pop
in
push
loop
dec
jb
pop
mov
sti
dec
ljmp
lods
shll
mov
xchg
aaa
add
loope
mov
or
lea
mov
stos
fistpl
sar
icebp
xor
jae
sbb
push
fwait
mov
popf
jmp
test
sbb
pop
sbb
xchg
fwait
sub
adc
mov
and
sub
fiadds
mov
dec
sub
mov
inc
or
xchg
icebp
jp
cmp
push
jecxz
xchg
dec
cmpsb
dec
fwait
inc
mov
pop
add
addr16
push
mov
cmp
lahf
cmp
cmpsl
pop
adc
mov
and
jmp
aas
push
fs
pop
loop
popa
lahf
mov
icebp
cmc
adc
xchg
sti
cmp
insl
pop
ss
fxch
notl
sarb
jae
add
xchg
push
xor
icebp
inc
fwait
test
mov
lea
or
mov
mov
lods
cltd
or
rcrb
mov
xchg
lret
mov
ja
js
rorb
mov
xlat
jne
xchg
in
shll
repz
or
sbb
lea
imul
mov
inc
mov
xchg
mov
xchg
push
add
and
xchg
divl
sub
fwait
mov
fisttpll
fidivrs
cmc
mov
shlb
je
leave
push
lret
or
call
cmpsb
jns
mov
xor
ret
loop
hlt
dec
sbb
pop
shll
push
fstl
ret
mov
cmp
add
pop
aas
icebp
sarb
push
sbb
sub
roll
jbe
sub
xchg
xchg
je
cld
and
or
mov
pop
pop
push
mov
lret
out
sbbb
hlt
sbb
xchg
pop
cmpsb
dec
lahf
lcall
stos
mov
push
sbb
xchg
out
sub
out
fucomip
les
jp
mov
popf
arpl
popfw
mov
jg
int
fs
int3
sub
vcmpsd
dec
repnz
xchg
dec
hlt
or
jge
or
cmpsb
rcl
aas
sub
ret
je
pslld
stos
mov
xchg
mov
int3
negb
lods
mov
dec
int3
push
mov
out
jb
fildl
scas
cld
movsl
addl
jp
lods
mov
mov
arpl
fldcw
xchg
insb
sbb
add
xor
das
rcll
scas
push
outsl
pop
icebp
push
add
sub
lahf
ror
clc
sub
sub
shll
imul
add
mov
xor
and
xchg
sbb
mov
fstl
or
rcl
mov
rol
mov
xor
lods
mov
pop
das
jl
pop
mov
xchg
fcmovnb
cltd
fwait
loope
lret
daa
and
gs
cmp
mov
add
push
pop
cmp
cwtl
stos
inc
pusha
pop
sub
ret
rolb
out
jle
mov
stc
leave
xor
dec
imull
xchg
scas
or
leave
and
add
cltd
or
sub
cmpsl
movsb
cmpsl
bound
stos
push
push
dec
dec
imul
cmpsb
push
jge
movsl
xlat
cmp
jno
sbb
inc
mov
fwait
xchg
cmp
xchg
icebp
lahf
mov
cltd
jbe
cwtl
mov
pop
int3
test
in
lods
jns
ja
sub
push
lods
and
rcll
out
ja
sbb
jge
out
aad
insb
add
aam
adc
xchg
outsl
mov
lcall
cmp
mov
sar
shr
imul
pop
adc
xchg
sbb
cmp
xor
cltd
les
loop
iret
push
pop
test
repz
xor
push
mov
dec
ljmp
scas
mov
lea
rol
dec
jl
lahf
fwait
in
inc
int
mov
dec
mov
mov
imul
ret
dec
or
repz
pop
xchg
xor
repz
movsl
and
jle
inc
lds
sti
fsubrs
push
out
mull
mov
adc
pop
inc
xor
xchg
fisubl
xchg
cmp
mov
sub
xchg
imul
lahf
xchg
ljmp
inc
clc
sbb
aad
dec
push
mov
jb
loope
repnz
repz
push
xchg
shlb
xlat
push
inc
stos
inc
js
mov
mov
cwtl
idivl
out
push
jno
mov
arpl
xor
jecxz
mov
xor
fwait
incl
dec
jle
sbb
ret
jecxz
int3
outsb
loope
mov
xchg
mov
pop
lods
jecxz
inc
inc
pop
sbb
jle
scas
stos
jle
xchg
jns
push
inc
inc
sub
xlat
mov
mov
loope
xchg
lods
mov
repz
sarb
insl
pmaddwd
ret
cmpsb
sbb
mov
loope
ja,pt
sbb
lret
test
inc
call
scas
stos
mul
bound
xchg
sub
and
sti
sbb
out
test
xlat
xchg
gs
lods
adc
fwait
sti
push
stc
jnp
test
dec
cltd
shl
mov
xchg
mov
xchg
scas
adcl
jg
jns
xchg
loope
xchg
pop
cmp
loope
div
ret
popf
xchg
xchg
test
pop
xchg
push
push
mov
out
mov
dec
mov
cmp
iret
jecxz
pop
cmp
test
cwtl
jecxz
mov
fnsave
shlb
mov
dec
ret
fcoml
iret
je
sub
lret
jl
test
xchg
sbb
cmpsb
mov
ret
cmpsb
mov
loopne
push
or
out
mov
pushl
repz
scas
loop
filds
lcall
test
adcl
inc
cmp
and
rolb
sbb
icebp
inc
test
sub
xchg
stc
test
rcrl
hlt
inc
pop
cmc
insl
icebp
aad
rcrb
xchg
int
mov
pop
call
mov
insb
test
push
mov
sar
pop
push
jmp
scas
or
rol
xchg
out
in
or
push
lea
fwait
stos
out
pop
push
dec
fbld
mov
repz
sbb
cltd
pop
outsl
lods
mov
out
movsb
rclb
shr
sub
pop
add
divb
pop
sar
je
add
mov
iret
xor
inc
pop
fwait
or
fincstp
lods
xor
mov
daa
push
pop
cmpl
or
repz
push
cmp
sbb
mov
fcomip
cmp
lds
imul
mov
fsts
pop
hlt
scas
xor
cmp
xchg
fldl
cltd
mov
mov
lock
call
aam
mul
stos
and
jo
or
inc
and
shrb
mov
or
out
les
adc
xchg
mov
dec
mov
add
pop
movlhps
stos
pop
sub
sarb
sbb
sub
xchg
sahf
cmp
inc
out
sbb
fidivs
ret
xor
js
mov
mov
sbb
mov
inc
inc
cmp
sar
dec
xor
adc
inc
lahf
nop
adc
xchg
ss
cmp
pusha
adc
cmpsb
shrl
sub
mov
push
inc
add
jmp
or
scas
inc
or
loop
stos
ljmp
or
xchg
push
push
ret
lds
lret
aad
out
pop
test
stos
mov
push
mov
and
out
pop
test
std
cld
jmp
xchg
pop
loope
push
testb
or
adc
jp
dec
clc
hlt
or
cli
js
loope
outsl
xchg
repz
jbe
and
or
lods
pop
cwtl
sub
lret
add
cmc
xor
lret
adcl
test
es
xchg
loopne
je
daa
test
push
cmp
dec
negl
stos
lahf
mov
stos
decb
or
pushf
pop
push
add
pop
lahf
cwtl
int3
aad
test
call
cltd
pop
imul
mov
int
cltd
repz
push
mov
mov
cmp
pop
sahf
add
lea
xchg
popf
lret
jns
mov
push
movsb
jns
mov
push
push
jbe
mov
jnp
inc
inc
repz
icebp
mov
xor
cmpsl
fcomp
lcall
mov
ss
gs
cs
or
lret
xchg
aas
jp
mov
sbb
push
push
jmp
mov
stos
fmuls
inc
ret
jmp
das
sub
ret
loope
jno
nop
cmp
test
mov
notl
fistps
aam
dec
adc
and
shll
sbb
hlt
lods
idiv
scas
and
rcrl
pop
stos
ret
std
mov
pop
rclb
cmp
fdecstp
mov
mov
test
nop
fwait
insl
cmc
xor
or
das
xchg
adc
mov
fildll
mov
and
je
mov
and
push
fld
repnz
pop
loope
aam
es
ja
imul
repz
stc
pop
pop
jl
lret
mov
push
pop
mov
sub
lahf
or
sti
jnp
rcrl
jo
mov
shrl
cwtl
pop
push
add
xchg
mov
cmp
arpl
mov
lods
idivl
adc
xacquire
idivl
pop
scas
scas
push
adc
test
sbb
fisttpl
xchg
inc
ss
fwait
out
add
insb
mov
dec
mov
sub
shl
jl
or
mov
sbb
inc
fwait
icebp
divl
fadds
sbb
mov
rcll
dec
mov
dec
xchg
pop
and
outsl
dec
xchg
fstp
out
test
lea
ljmp
rep
sub
pop
xchg
adc
xchg
xlat
xchg
inc
adc
dec
fimuls
xchg
cmc
push
andb
jecxz
cmp
idiv
loop,pn
and
call
inc
test
pop
push
lea
lret
mov
xor
adc
xchg
add
mov
dec
jle
mov
mov
rclb
xchg
fndisi(8087
das
xchg
xchg
adc
jmp
xchg
mov
jb
add
ret
rol
nop
daa
xor
lret
pop
ja
pop
arpl
cmpsb
mov
or
mov
and
jecxz
icebp
cs
push
aam
repnz
xchg
cltd
lock
out
lea
es
lret
xchg
xlat
mov
cmc
je
hlt
inc
mov
pop
jge
test
xchg
xchg
out
out
dec
adc
imul
cmp
mov
cmpsl
xor
mov
arpl
inc
cmp
sub
pop
mov
scas
mov
scas
jbe
jmp
sbb
mov
xchg
shl
mov
fldcw
icebp
out
inc
and
fstpt
and
movsb
les
inc
cmp
int
cwtl
xchg
push
insl
mov
mov
add
sbb
or
arpl
xchg
lods
test
repz
pusha
xor
cli
jae
push
leave
fs
mov
dec
cmc
es
xchg
test
inc
shlb
idivb
mov
cmp
xor
adc
bound
lret
mov
test
stos
stos
loope
push
pop
jecxz
rcl
mov
xchg
mov
xchg
int3
js
sbb
nop
and
aad
mov
insl
jae
xor
mov
add
jecxz
dec
int
or
out
push
repnz
mov
mov
adc
sbb
aaa
mov
sbb
mov
fdivrl
inc
sub
push
and
dec
ljmp
mov
inc
sub
xchg
mov
push
sub
xchg
out
xlat
in
push
cmc
add
pop
mov
gs
fldcw
insb
sbb
lds
sub
adc
xchg
mov
mov
xor
cmpsl
mov
cltd
repz
jle
or
xlat
std
adc
adc
push
xorb
mov
std
xchg
popf
inc
sahf
ret
int
das
int
loope
out
cmp
mov
fcmovu
or
and
int
lds
iret
sbb
xor
sub
jl
popl
mov
inc
mov
and
jg
pop
mov
out
orl
push
test
adc
clc
sub
dec
or
or
and
ret
sarl
push
mov
xchg
ret
inc
fwait
cmp
fldcw
cmc
mov
ret
inc
mov
jmp
int3
inc
lret
inc
lea
int3
addl
pop
and
loope
lret
fldt
pop
or
or
jbe
ret
xchg
in
arpl
lahf
xlat
imul
dec
rcl
sub
in
xchg
adc
mov
xchg
into
movsb
mov
mov
adc
daa
shrl
sahf
movsl
clc
mov
sbb
hlt
js
add
jmp
pop
mov
jl
mov
das
fwait
mov
stc
add
or
notl
jae
pop
dec
rep
adcl
ds
dec
rcrb
call
xorl
push
add
push
mov
add
notl
mull
jne
xchg
adc
xchg
inc
aas
clc
outsb
iret
dec
xchg
fistpl
inc
outsl
call
fwait
xchg
roll
cltd
js
sar
mov
fs
pop
push
cmpsb
add
negb
roll
movsl
mov
push
iret
jb
pop
inc
lods
cwtl
jno
mov
pushf
or
mov
lods
movsl
je
shl
jne
int3
add
mov
sub
or
fimull
lods
mov
repnz
insb
and
push
xchg
jecxz
jle
dec
jae
in
and
std
in
lds
jecxz
fcoms
mov
sub
xchg
and
sub
icebp
xchg
or
out
rcr
sbb
repz
stos
pusha
bound
sarb
jmp
jns
idiv
scas
movsl
sti
inc
imull
test
inc
flds
mov
xlat
lds
xor
fnstcw
je
add
mov
push
sbb
movsl
pop
adc
add
cmp
sbb
mov
scas
adc
das
xor
and
jb
ja
scas
inc
jge
scas
jnp
lods
xor
es
push
cmp
fldt
test
mov
and
pop
push
testl
lds
fwait
ds
lods
in
fisttps
xorb
add
inc
adc
mov
sbb
mov
cmpsb
push
test
cmc
fidivs
fildl
mov
lds
movsl
or
ret
jle
popf
movl
push
and
mov
sub
lods
pop
jb
xchg
leave
or
mov
int
stos
shl
dec
push
cmp
dec
jbe
fisttpl
mov
shlb
mov
push
jbe
xchg
mov
divl
lods
inc
rcr
arpl
adc
xchg
in
fbld
mov
mov
pushf
push
ret
shl
mov
sbb
pop
mov
xlat
mov
in
xchg
out
inc
stos
adc
stos
jl
loope
jo
pop
mov
fcoml
xchg
aas
or
stos
mov
add
fistpl
adc
fs
lret
adc
fcomps
ret
mov
orl
jns
jge
stos
sar
in
mov
fsubrs
mov
pop
les
into
addl
add
mov
arpl
mov
andl
xorl
pop
pusha
inc
mov
int
xor
mov
push
jmp
clc
and
sbb
rclb
sarl
push
cmpsb
push
pushf
and
xchg
outsl
ret
shr
jle
mov
push
outsl
jno
enter
inc
lret
shr
inc
stos
ret
fs
pop
test
rorl
xchg
xchg
int3
mov
imul
cs
mull
and
and
cld
mov
cld
sar
push
sub
lods
mov
push
arpl
das
cltd
xchg
xor
jp
or
cs
incl
das
popf
pop
lcall
xor
arpl
sbb
arpl
add
jecxz
mov
dec
cmpsl
lret
loopne
fistpl
cmc
je
mov
jno
and
sub
mov
popf
mov
and
adc
mov
push
xchg
mov
rcrb
jg
mov
xlat
cmpsb
push
into
or
out
and
hlt
adc
and
repz
sarb
xlat
cmc
add
dec
push
cmc
mov
in
fldcw
popf
cmpsl
inc
fstpt
xchg
fisubrl
lods
mov
in
test
mov
arpl
cli
gs
int
mov
ljmp
int
aad
dec
pop
xchg
aad
and
add
push
divl
jge
mov
test
jmp
cld
mov
push
ja
push
mov
push
cmp
movsb
out
das
es
push
sub
mov
mov
jecxz
cltd
call
sub
icebp
std
adc
test
scas
lahf
fistps
add
inc
xchg
or
aad
ja
fstpl
xlat
inc
aad
pushl
fwait
or
xor
jnp
imul
push
lret
xchg
cmpsb
pop
rclb
es
mov
mov
cmpsb
jp
ret
ds
rorb
add
scas
lret
xor
add
mov
je
mov
outsl
adc
xchg
int3
or
xchg
adc
push
adc
xchg
mov
cmpsl
out
aas
mov
xchg
mov
jmp
cwtl
fcmove
fcomi
jecxz
or
test
call
inc
mov
fwait
mov
mov
sub
cmpsl
rorb
dec
dec
jle
pop
cmp
icebp
sbb
mov
and
cmp
pop
jmp
dec
and
int
sub
outsl
mov
scas
xchg
jae
lahf
xchg
outsl
mov
pop
fisubrl
jecxz
mov
dec
lahf
out
sarl
leave
pop
in
gs
fwait
pop
out
mov
stos
pop
shrl
fcmovu
inc
mov
mov
lahf
sbb
jecxz
cld
repz
loope
jge
mov
decb
or
mov
mov
mov
xchg
shlb
add
jmp
or
insl
push
pop
and
sub
pop
pusha
repz
nop
push
xchg
fldt
mov
rcl
mov
insb
push
mov
mov
or
inc
mov
mov
mov
data16
sahf
mov
or
mov
jmp
shll
and
cmpsl
mov
xor
je
mov
mov
jl
push
mov
xchg
jmp
xchg
in
cmp
call
push
sbb
pop
in
movsl
fsubl
jno
sbb
lods
shl
js
dec
mov
adcb
mov
js
popf
jnp
ret
movsl
mov
mov
aad
fwait
daa
jno
and
ret
mov
loope
jg
imul
fcomps
cmc
xchg
mov
xchg
mov
and
jp
shrb
fcomp
and
lahf
mov
addr16
stc
addb
gs
xchg
ret
popf
ret
adc
gs
call
fbstp
filds
push
xchg
nop
mov
mov
mov
push
pop
shlb
ss
aas
mov
jmp
xchg
lahf
inc
pop
cmpsb
pushf
cli
mov
fucomp
aam
sbb
addb
in
or
into
add
out
rcll
add
out
in
rorb
push
sbb
rcl
pop
das
or
and
xchg
pop
aam
lret
stos
data16
fwait
push
movsb
sarl
adc
rdmsr
ret
fwait
jmp
dec
in
sub
popf
adc
add
ret
test
mov
pop
jle
in
aas
mov
icebp
sub
insl
test
xchg
jb
push
cmpl
mov
xchg
icebp
pusha
cmp
adc
rclb
stos
sub
lret
push
outsl
out
fwait
lock
lock
orb
pop
xor
sbb
xchg
xchg
jo
xor
pop
popa
jl
fsub
aas
in
xchg
mov
fldt
dec
daa
adc
sbb
mov
aam
mov
loope
xchg
mov
cmp
xchg
shr
fimull
fwait
xchg
add
fadd
xor
dec
into
or
insb
jl
mov
adc
push
hlt
loope
rcrl
mov
mov
jbe
sbb
pop
add
sub
sub
shlb
xchg
das
jb
lcall
push
dec
jns
cmp
negl
testb
adc
mov
mov
pop
mov
pop
es
sub
roll
insb
test
mov
and
adc
fsts
in
mov
imul
pushf
sbb
mov
cmc
out
mov
repz
popf
stos
jbe
ffree
adc
jg
call
stos
sarb
ffreep
xchg
test
jg
xchg
or
outsl
repnz
push
daa
or
fistps
ja
std
lods
ret
mull
pop
loop
notl
sub
mov
inc
and
mov
inc
jmp
inc
xchg
in
jo
scas
out
cmp
mov
fincstp
ja
push
andb
mov
shrb
mov
ss
ljmp
fistpl
addb
xchg
fwait
and
in
mov
out
xor
ret
repnz
mov
adc
dec
jecxz
add
cmp
mov
test
repz
fidivl
aam
sub
xorl
aad
cli
pop
or
insl
fildl
ds
sub
in
ss
mov
mov
ljmp
or
mov
out
rorb
hlt
in
stc
dec
cmpsb
mov
incl
filds
fstl
dec
and
pop
hlt
cmp
xchg
mov
mov
sbb
imul
xchg
stos
sub
adc
jmp
push
pop
push
gs
fwait
mov
aas
mov
jg
mov
cmp
shl
and
lea
movsb
xchg
cmpsl
inc
and
ret
pop
xor
mov
cwtl
fsubrs
mov
jmp
sub
xchg
sub
loope
test
mov
addr16
lret
mov
push
enter
mov
lea
insl
mov
add
lret
ds
scas
xor
xlat
mov
lods
outsl
imul
lret
mov
pop
cld
in
xchg
das
cli
cld
ret
and
mov
cltd
fcompl
and
test
pop
push
lock
rcl
in
inc
dec
out
pop
loop
rcrb
cmp
dec
push
push
shlb
outsl
aad
dec
iret
inc
es
and
push
std
mov
lods
sbb
fisubs
xor
inc
mov
mov
xchg
jp
push
aam
into
jl
lahf
sti
clc
sbb
fwait
pop
orb
xor
testb
shll
pop
and
jge
and
jnp
mov
push
adc
jb
lcall
stos
sub
stc
lods
mov
jle
lret
lahf
sbb
inc
pusha
pop
ret
shll
roll
hlt
out
dec
test
inc
loope
pop
iret
cs
scas
dec
mov
fdivrp
out
sbb
fcomip
cmp
xchg
test
jge
stc
mov
sbb
xor
push
mov
lods
sbb
jmp
sahf
push
mov
mov
out
mov
icebp
and
push
imul
jge
sti
out
mov
mov
mov
sub
stos
call
xor
mov
hlt
fcomps
dec
test
jb
pop
and
or
xchg
mov
xchg
inc
push
ret
xchg
lods
add
fisubrl
fstpt
pop
push
cmp
movsl
xlat
pop
in
outsl
frstor
test
mov
scas
inc
lret
xchg
fdivl
inc
sbb
daa
jno
scas
xor
sub
ret
mov
and
sbb
cmc
testl
loop
sub
test
jae
mov
pop
stos
dec
shrl
sub
pop
clc
or
mov
dec
add
stos
adc
xlat
daa
inc
test
mov
dec
and
mov
outsl
cmp
fs
roll
and
orb
add
jnp
xchg
mov
in
idivb
mov
jnp
mov
ss
jmp
ret
fsub
in
das
test
clc
imul
cld
mulb
sti
std
ret
rcll
test
aad
pop
mov
or
adcl
shl
mov
sub
stos
add
pop
call
sbb
shrl
cmpsl
and
sti
xchg
mov
cmp
xchg
out
dec
cmpsb
pop
cwtl
aaa
divl
stos
mov
xor
mov
jg
and
icebp
ret
cmpsl
inc
inc
cli
cmp
iret
xchg
adc
mov
icebp
xchg
inc
pop
and
pop
sti
jo
ficoms
inc
lea
xchg
ret
shrl
mov
sub
push
mov
or
insl
inc
sbb
in
dec
sti
ror
pop
data16
testb
fdivrs
mov
lret
mov
mov
in
aam
stc
ds
arpl
jae
pop
sub
adcb
es
pop
push
es
cmpsb
xlat
fisttpll
ret
fisttpl
sub
imul
cmp
inc
movsb
mov
mov
mov
lret
popa
mov
scas
in
pop
in
es
sti
xor
cmp
je
push
push
inc
xchg
cmp
test
sar
jp
adc
jecxz
mov
insb
hlt
les
ret
xlat
inc
xchg
lods
jg
divl
push
outsl
sbb
push
imul
aas
andl
repz
dec
cs
cmp
bound
add
arpl
movsl
mov
in
cmp
jb
jne
mov
icebp
push
adc
or
stc
and
or
mov
jne
mov
jmp
repz
cmp
loope
fwait
or
mov
sub
negb
push
aad
mov
adc
test
inc
jmp
inc
adcb
aam
or
inc
pusha
sub
pop
mov
inc
decl
shlb
loope
fistpll
lea
push
les
push
out
das
push
xchg
mov
shrb
xchg
out
push
imull
aam
sti
and
lret
push
lcall
call
popa
push
adc
shl
in
ret
push
adc
popf
int
and
daa
push
pop
mov
mov
cmp
mov
mov
mov
jge
movl
filds
addr16
pop
mov
fwait
xor
fcomi
sbbb
jge
iret
inc
jb
and
push
test
fisttpll
xchg
in
push
inc
inc
cmp
dec
mov
stos
sub
jbe
mov
lret
je
shll
bound
jnp
xchg
sub
mov
shlb
push
sbb
or
addr16
stc
push
jnp
rcl
daa
and
jns
xor
es
lds
dec
jo
lcall
mov
pop
sub
mov
mov
or
jne
pop
es
pop
ljmp
jecxz
push
jbe
xor
mov
push
and
xchg
neg
stos
cmpsb
push
fdivrl
stos
and
xlat
clc
stos
ret
andl
ss
push
mov
sub
popa
cmc
sbb
pop
xor
dec
dec
std
stos
test
mov
pushl
loop
push
xor
mov
fisttpl
mov
out
xor
rcll
inc
outsb
xchg
test
jb
fnstcw
jg
or
fwait
sbb
jmp
fsubl
addl
lods
mov
data16
dec
popf
jl
sub
inc
xchg
outsl
out
mov
mov
data16
mov
sub
sub
mov
mov
inc
xor
push
inc
jp
shll
sbb
ret
andl
lret
xchg
sar
aas
sub
cmpsb
push
inc
out
xchg
int
inc
stos
xchg
dec
mov
shlb
leave
rcr
jo
ret
add
das
int3
je
inc
mov
gs
lret
push
inc
mov
cmpsb
jmp
test
pop
xor
shrl
punpckhbw
mov
in
mov
fwait
mov
pop
pop
js
jae
pop
imul
pop
mov
push
inc
pushf
push
popf
jecxz
pop
out
xchg
add
push
into
stos
rcll
popf
pop
jmp
ret
push
sub
mov
push
sub
mov
xor
fwait
pusha
out
add
insb
fwait
movsl
or
xor
enter
jecxz
dec
in
popf
mov
fwait
bound
arpl
mov
shll
imul
stc
pop
hlt
jecxz
jne
shr
aaa
call
mov
pop
insl
das
mov
pop
mov
add
sbb
mov
inc
movsl
call
mov
sub
ror
insb
das
notl
sbb
out
mov
xchg
movsl
push
fbstp
sbbl
and
jo
inc
imul
jns
stc
adcl
fnsave
mov
gs
in
fcomip
jecxz
mov
aad
inc
xchg
lock
lea
lcall
ret
sti
cs
adc
mov
mov
mov
sbb
xchg
stos
pop
push
loope
add
lahf
mov
inc
inc
mov
stos
fildll
dec
in
mov
ljmp
mov
arpl
push
mov
jle
arpl
push
sub
rclb
sub
stc
fnstenv
add
loopne
jl
jmp
js
dec
inc
aad
xor
mov
dec
mov
sbb
test
mov
in
rcll
out
dec
repz
jno
popf
mov
push
and
out
dec
shll
mov
cwtl
stc
pop
fiadds
shrb
push
mov
mov
popf
aad
cwtl
pop
sbb
int
sub
sar
out
stos
sub
insb
scas
es
cwtl
fbld
xlat
cmpsl
daa
shll
sahf
pop
or
push
scas
xchg
add
std
ljmp
pop
or
les
popl
push
aaa
jecxz
daa
popl
lret
stc
mov
popa
jecxz
negb
ds
xchg
fists
out
jne
inc
mov
pusha
and
xchg
mov
clc
test
call
jb
jnp
push
insb
xchg
movsb
sub
inc
inc
mov
jae
jnp
cmp
popf
xchg
mov
push
sarb
or
mov
mov
ljmp
push
lds
js
pop
divb
dec
xchg
xchg
in
ljmp
ret
push
xchg
mov
fistpl
ret
in
in
mov
mov
jnp
lock
mov
inc
out
mov
loopne
push
hlt
nop
rclb
nop
fcomi
dec
rcrl
lods
flds
movsl
inc
mov
es
cltd
push
iret
xchg
jl
fwait
push
rclb
arpl
cmpsl
leave
iret
dec
into
sub
imul
rcll
mov
jne
mov
das
push
sahf
or
imul
pop
sbb
mov
adcl
cwtl
push
xchg
aam
cmp
ja
lahf
loop
push
mov
or
or
mov
pushf
mov
jecxz
jb
rcrb
andb
mov
fcmovnu
pushf
clc
push
xchg
xchg
fwait
dec
xchg
push
fistpll
xchg
enter
xchg
gs
movsb
add
inc
bound
sbb
sbb
xchg
jns
imul
adc
enter
mov
lods
cli
mov
mov
aad
mov
lret
cltd
test
outsl
dec
lods
or
rclb
imul
sub
pop
sbb
adc
outsb
pop
cld
push
out
sbb
pop
mov
mov
insb
add
rcl
icebp
and
xor
xchg
movsl
shrb
sbb
mov
daa
shrl
addl
or
daa
fwait
outsb
xor
lods
dec
imul
or
out
push
into
in
out
mov
cmpsb
pushl
cmpl
sub
and
imull
xchg
push
outsb
adc
mov
push
arpl
mov
sar
xlat
mov
mov
sbb
xor
outsb
mov
stos
jne
test
pop
testl
sub
stos
aad
aaa
divl
push
sbb
imul
push
popf
mov
fisubs
mov
push
repnz
sbb
xchg
ret
pop
xor
push
cltd
xor
imull
sub
cmp
mov
mov
out
mov
adc
mov
jmp
dec
push
lret
loope
int3
repz
roll
mov
testb
and
sbb
std
shll
ret
out
sub
mov
fdiv
sub
push
rcll
lahf
fstpl
ret
andl
movsl
mov
or
pop
cltd
add
sbb
std
mov
push
les
xchg
xlat
outsb
cmpsl
cmp
gs
aad
and
xchg
fs
jmp
jb
jle
push
inc
mov
mov
iret
sahf
mov
cmp
ret
push
xchg
sbb
adc
imul
add
xor
das
mov
lods
sub
ss
mov
push
sahf
call
icebp
inc
fsubrl
jne
in
in
jecxz
pop
add
fldenv
and
sbb
fdivrs
sub
fsubrs
jl
popf
or
inc
jecxz
jl
shll
test
pop
out
lds
nop
fucom
xchg
xchg
insl
repnz
lret
pop
jnp
jl
in
mov
mov
fistpl
dec
jo
and
inc
mov
mov
imul
mov
daa
pop
dec
sub
popl
imull
xchg
xor
sub
fldt
fldt
mov
pop
push
pop
fnstsw
pop
lret
fidivrs
mov
pop
lcall
inc
scas
loope
cmp
or
push
dec
fiadds
in
fistps
shrb
iret
ds
pop
xchg
daa
mov
jb
add
mov
fldenv
notl
rorb
push
add
mov
mov
dec
sbb
xorl
push
sbb
and
pop
cltd
das
mov
xchg
cmpsl
mov
test
dec
outsl
mov
and
repz
lock
mov
test
dec
or
jb
in
mov
mov
inc
or
cmp
mov
pop
outsb
jecxz
stos
inc
dec
test
xchg
cs
xchg
mov
lret
rol
xchg
sbb
popf
inc
xchg
add
stos
sub
in
push
ret
iret
orl
out
hlt
data16
in
dec
les
mov
repz
pop
jae
sub
fwait
push
push
shlb
decl
mov
ret
add
mull
leave
add
jge
add
scas
mov
clc
ja
les
dec
iret
mov
movsb
shlb
sub
cmp
clc
xchg
idiv
out
fcmovnbe
je
add
out
ret
sub
cwtl
cli
mov
mov
xchg
out
push
push
aam
mov
lret
daa
rcr
cmp
or
cld
mov
repz
add
icebp
or
sub
aam
ret
ror
test
or
cmp
call
js
stc
in
mov
test
loope
sub
ret
pop
dec
iret
int
mov
int3
cltd
and
lods
ret
hlt
shl
fwait
mov
xchg
into
jns
mov
imul
out
mov
push
aaa
or
jmp
pop
xor
lahf
push
aas
fsts
shll
loope
sbb
sti
mov
ret
ds
aaa
jae
inc
cltd
xchg
push
cltd
or
mov
dec
sub
mov
sbb
imul
xchg
cmp
and
daa
xchg
jmp
xchg
mov
shlb
popa
ror
les
inc
popa
jp
add
leave
insl
sub
mov
xor
es
out
rclb
jmp
jmp
pop
jns
fs
aas
push
inc
mov
sti
iret
dec
fnstsw
adc
insl
out
or
mov
mov
mov
ret
scas
cmpsl
fisubl
repz
push
xor
in
mov
imul
rol
fistps
arpl
xor
pop
mov
test
das
outsl
in
xchg
les
es
movsb
sbb
push
dec
rorb
pop
pop
testb
inc
aas
sbb
daa
shrb
jne
xchg
dec
push
mov
fnsave
mov
iret
fisttpl
hlt
pop
dec
cmp
fbld
xchg
pop
or
ret
rcrl
add
mov
clc
mov
sub
inc
jae
repnz
popf
aam
jns
mull
push
test
xchg
pop
dec
mov
push
push
sbb
xchg
push
push
add
mov
fistpl
mov
std
adc
xchg
push
mov
push
ret
dec
inc
test
test
xchg
pop
jns
mov
mov
ss
fdivs
mov
mov
cmp
xlat
sbb
cwtl
insl
inc
sub
add
pop
mov
dec
hlt
sti
dec
xchg
mov
popa
sbb
mov
push
int
cmp
out
cmpsb
mov
push
xchg
sbb
shll
adc
aad
aaa
push
mov
add
int
cs
fisubl
mov
xlat
and
adc
pop
ret
roll
mov
add
fildl
push
dec
je
movsl
jecxz
sarb
sti
stos
in
dec
test
mov
arpl
in
int3
mov
or
jl
cmc
mov
xchg
ret
dec
jg
push
add
mov
mov
hlt
jmp
mov
movsl
mov
xchg
dec
cmp
mov
int
movsl
xchg
mov
mov
stos
ret
xor
mov
mov
push
stos
lds
shll
mov
sub
test
cmp
in
inc
pop
mov
stos
out
ljmp
sbb
lods
lock
adc
loop
pusha
push
push
das
jecxz
cmp
in
arpl
xchg
inc
sbb
push
pop
arpl
sarl
mov
mov
xchg
cmp
stc
lods
repz
loop
fwait
stos
scas
inc
mov
xchg
jl
pop
subl
ficompl
add
sub
xchg
sar
fcomi
sbb
mov
xor
mov
dec
in
outsb
adc
mov
push
xchg
rcrl
test
jecxz
xchg
iret
mov
sbb
aad
mov
xchg
dec
je
push
daa
std
xlat
fcmovne
cmpb
divb
push
add
insb
push
sti
movsl
xchg
xchg
or
jecxz
pop
test
lcall
mov
fs
ret
int3
fsubs
sub
sar
call
mov
into
loopne
cmp
dec
push
jae
lret
lret
jecxz
or
pop
loop
xchg
das
ret
mov
xchg
je
and
fcomp
arpl
push
aad
mov
shlb
pop
mov
fbstp
leave
rcr
jno
mov
mov
cmp
inc
push
mov
jecxz
cld
mov
fistps
mov
loope
sar
iret
lea
mov
cmp
std
jnp
lea
push
outsb
fstps
dec
in
pop
sti
rcrb
push
sbb
out
jmp
jbe
pop
cld
fst
and
adc
xchg
imull
adc
repnz
sbb
jbe
xchg
stc
setae
and
imul
mov
jecxz
repz
sub
mov
insb
mov
pop
pop
or
mov
out
mov
pop
cmpsl
cmc
pop
or
rcll
xchg
imulb
ljmp
jg
push
aas
pop
fcmovnbe
clc
ds
mov
xchg
pop
je
and
jg
cwtl
fsubs
jmp
stos
xchg
xchg
lods
push
xchg
f2xm1
pop
ja
int
mov
pop
add
push
imul
ja
dec
lret
out
fwait
sub
push
fwait
cli
pop
jecxz
and
add
movsl
dec
aad
sahf
repz
jno
pop
mov
pop
fwait
sub
pop
mov
inc
push
insb
test
fldenv
sbb
leave
ljmp
mov
out
repz
dec
pop
mov
lret
push
loop
push
data16
ret
cmp
pop
int3
adcb
jbe
repz
rcrb
xchg
gs
cmc
lret
pop
stc
dec
test
jb
pop
add
je
test
jmp
adc
lcall
mov
shl
add
sub
cmc
mov
adc
cli
shlb
fiaddl
stos
push
aaa
and
lds
lret
fisttpll
pop
rcrb
or
add
or
dec
sbb
adc
mov
xchg
popa
repnz
stc
add
into
movsb
std
mov
sarl
jg
and
lock
fimull
popf
fsubrs
hlt
sub
and
mov
push
xchg
mov
mov
movsb
les
js
lods
popl
adcl
dec
mov
mov
cltd
mov
sub
mov
xchg
mov
in
inc
stos
jp
iret
adcb
cli
cmp
mov
testb
push
notl
mov
ret
lahf
stc
sbb
rol
incl
test
clc
sarl
mov
dec
bound
clc
xor
inc
mov
enter
jg
repnz
sbb
mov
outsl
loop
repz
xchg
push
movl
push
mov
inc
insb
sub
enter
scas
xchg
testb
imul
pop
cmp
inc
mov
add
hlt
fldenv
jmp
aad
xchg
sti
lret
ds
jg
adc
ret
or
dec
imul
ret
aam
push
sahf
mov
jae
adc
outsl
out
push
cmpsb
fidivl
cmpsb
xchg
add
dec
clc
mov
adcl
repnz
push
jecxz
addr16
pop
push
push
fadds
stos
ret
incb
add
dec
jne
ret
push
aaa
jnp
aas
cli
xlat
icebp
jle
stos
xor
ret
imul
jecxz
roll
pop
cmp
mov
xor
shl
xlat
sbb
cmp
notl
mov
push
fdivrs
mov
push
rcll
push
cmp
jae
nop
hlt
test
lret
push
stos
fwait
repz
jae
les
jmp
inc
cmp
lahf
xchg
cs
push
data16
sbb
and
divb
mov
pop
jne
jl
out
push
inc
cltd
jb
iret
fists
add
call
scas
loope
shlb
cwtl
inc
fwait
ljmp
adc
lods
loopne
daa
lcall
lret
push
xchg
aad
dec
xchg
add
pop
pusha
inc
out
push
rcll
popa
stc
test
shrl
and
in
xchg
ret
rclb
test
mov
stos
add
cmp
test
les
stos
dec
push
into
dec
mov
ret
ret
out
sub
xchg
lret
pop
fistps
adc
pop
sti
lods
in
pop
std
or
mov
jns
rclb
out
sub
or
lods
inc
lret
dec
or
sbbb
repnz
cmp
es
xor
jae
or
xchg
xchg
mov
mov
push
pop
dec
scas
cmp
mov
xlat
mov
lret
adcl
leave
pop
cmc
int3
cmp
hlt
test
mov
adc
movsb
jecxz
pop
sbb
inc
test
in
xor
jnp
push
sbb
cmp
aas
lods
cli
jmp
mov
xlat
inc
xchg
js
mull
ret
pop
xchg
mov
pop
std
decb
shrb
mov
cmp
cmp
push
inc
aas
ljmp
fstpt
test
sub
int
dec
push
loop
and
xchg
icebp
imul
maskmovq
notl
pop
sbb
lea
repz
dec
adc
sbb
scas
xchg
sub
adc
test
mov
xchg
idivl
dec
pop
and
adc
out
scas
cmp
in
pop
sbb
mov
mov
cmp
mov
mov
and
mov
jg
xchg
mov
pop
in
pop
test
mov
xchg
loop
add
lods
xor
cmpsb
aas
ffree
test
xor
popf
fldl
sbb
sbb
or
out
mov
lds
out
test
mov
lret
or
push
push
ja
fwait
mov
xchg
pushf
jmp
mov
cmp
int3
nop
movsb
inc
sbb
fstpt
push
out
inc
rolb
pop
int3
ja
xlat
ret
cmp
lds
arpl
add
add
pop
push
mov
cmp
in
aad
xor
jo
test
ljmp
repz
pop
inc
lahf
repz
xlat
dec
pop
push
ss
ret
into
mov
push
fnstcw
jl
xchg
xchg
push
stos
push
mov
fxam
inc
aad
outsl
fucom
popa
fucomip
daa
pop
jns
mov
cmp
cmp
push
outsl
repnz
jge
lea
lods
das
push
xor
add
lret
out
and
push
aaa
outsb
add
mov
pop
cmp
xor
or
in
jecxz
mov
ljmp
ja
pop
js
fildll
and
test
aam
mov
cmpsl
iret
jecxz
jg
cmpsb
stc
pop
ljmp
fistpl
sub
mov
inc
dec
cmp
mov
push
mov
push
stos
data16
or
cmpsb
jno
jo
mov
loopne
push
mov
insb
shrb
in
stc
sti
fmul
mov
mull
mov
dec
adc
lock
lret
fnstsw
push
xchg
mov
jl
sti
adc
aad
iret
pushf
stos
jl
leave
dec
flds
cmp
mull
std
mov
rorl
aaa
shlb
xor
sbb
cwtl
lret
push
test
and
xor
shlb
and
mov
es
stc
xchg
cmp
add
movsl
shl
pop
mov
mov
mov
fucomip
push
sahf
fimull
out
or
fbld
xchg
aaa
inc
push
cmp
enter
jecxz
jbe
sbb
into
aad
shrb
xchg
jb
mov
push
xorb
push
jnp
mov
pop
stos
mov
daa
sar
sahf
insl
cld
xchg
xchg
jmp
push
imul
movsl
push
cmp
psrlq
mov
dec
pushf
xchg
jecxz
arpl
fstl
loope
fdivr
ret
int
xchg
cld
inc
xor
repz
dec
pop
bound
mov
inc
inc
dec
out
mov
fldt
mov
iret
neg
mov
push
out
mov
lods
mov
ret
sub
shll
inc
imull
jo
pop
mov
lods
xchg
sar
pop
push
in
cmc
add
mov
nop
int
imul
xchg
mov
shl
mov
push
mov
rcrl
mov
dec
sub
jne
xchg
popf
fwait
cmp
add
rcrb
and
xchg
push
in
cmp
imul
pop
ss
dec
cmpsl
push
enter
imul
lds
mov
sbb
aaa
lret
xchg
negl
jmp
adc
dec
pushf
es
xchg
lea
jns
test
mov
xor
ja
jle
or
in
scas
xchg
or
dec
div
push
pop
dec
popf
jecxz
push
popa
jl
mov
mov
aad
inc
ja
ljmp
pusha
cmpsl
cmpl
cmpsb
call
fisttps
or
ret
jae
fbld
in
lret
mov
ret
ficompl
adc
xor
enter
push
push
xchg
aad
pop
inc
stos
and
sbbl
outsb
sar
pop
xchg
ret
dec
xchg
cmp
stos
jae
rcrb
mov
mov
adc
sbb
rorb
mov
sar
rorb
int3
and
fisttps
cmp
xor
sub
xor
scas
adc
push
mov
xchg
outsl
loope
mov
stos
fdivs
popf
inc
insb
inc
mov
in
in
mov
push
pop
pop
imul
negb
lds
jl
mov
jmp
cmc
sub
or
xlat
sar
adc
cld
mov
sbb
adc
xchg
pop
push
lods
mov
std
dec
adc
les
jbe
mov
int
push
fwait
xlat
add
sbbl
cmp
jo
push
inc
arpl
iret
repz
jnp
dec
adc
mov
fcmovne
fdiv
lods
js
mov
repnz
or
mov
mov
mov
mov
out
ret
rclb
xchg
adc
stos
fcmovnbe
xor
push
incl
xchg
xlat
mov
inc
insb
sbb
icebp
xchg
sub
add
jmp
jnp
inc
ljmp
mov
stos
xor
ja
jecxz
sbbl
sub
jmp
pop
cmpsb
pop
lds
lahf
fimuls
pop
inc
loopne
jle
sbbl
dec
pop
mov
sahf
push
ret
and
out
lds
nop
mov
xor
clc
push
testl
aad
pop
ret
and
cld
or
push
jmp
dec
adc
out
pop
xchg
jecxz
mov
mov
add
xchg
mov
xchg
jecxz
mov
iret
jno
push
xlat
rorl
cmp
push
in
cmp
std
push
imul
cmpl
xor
lahf
jl
xor
les
xchg
repz
push
add
hlt
push
popa
movsl
popf
dec
cld
and
cmp
push
hlt
xchg
cltd
add
ret
xchg
cmp
in
sub
inc
mov
sbb
mov
or
mov
add
xchg
imull
push
jmp
icebp
sbb
scas
ret
fnstsw
mov
mov
popa
add
sbb
xchg
sbb
cwtl
mov
idiv
cmp
mov
adc
cmpsb
push
mov
popf
inc
lret
outsb
push
fbstp
add
or
call
stos
fcoml
adcl
xlat
jnp
jae
fcmovu
push
mov
ss
jecxz
dec
lcall
jmp
inc
jns
repz
mov
sbbb
mov
movsl
lret
gs
cmc
push
test
mov
int
imul
xchg
push
idivl
sub
jecxz
sbb
ret
xchg
sbb
iret
adcb
jl
jb
insb
sbb
mov
in
xor
jb
addr16
rorb
mov
js
rcll
xchg
cmp
mov
scas
enter
lea
mov
sbb
bnd
shll
in
xchg
cmp
pop
popa
imul
xchg
mov
xchg
jmp
roll
adc
lret
fistl
fsubs
or
mov
xlat
loope
ret
jge
ss
sti
je
xlat
outsb
mov
xlat
sub
adc
mov
rcll
xchg
sbbb
xchg
loopne
xchg
fwait
idivl
push
sbb
cmp
jbe
xchg
imul
adc
ja
movsb
push
fwait
inc
inc
out
out
xor
das
push
fcoml
sbbl
xor
aad
cmp
scas
ret
jmp
pushf
cmpsl
cmc
push
rep
xlat
pop
xchg
mov
cmpsl
ficoms
jbe
mov
jcxz
out
jae
dec
cmp
add
sub
std
or
call
stc
push
push
cmp
popa
cltd
lcall
sub
pop
ss
mov
and
jecxz
psubusw
divl
outsb
cmp
or
and
loope
push
and
inc
cmp
repz
movsb
mov
ret
lods
ret
push
sbb
jno
xchg
fistl
shlb
xchg
fldt
push
icebp
hlt
mov
push
or
pop
fcomi
or
dec
pop
add
std
pop
ljmp
test
repz
inc
inc
mov
fwait
popa
pop
jmp
push
ret
mov
adcb
jns
pusha
mov
movsb
gs
push
leave
sahf
aaa
xlat
inc
stos
fmull
push
adc
ret
pop
call
push
push
pop
or
jecxz
add
sbb
scas
dec
mov
xchg
fistps
out
test
je
mov
pop
aas
outsl
in
subb
dec
cmc
sbb
scas
inc
in
repz
mov
aam
repz
jo
fisubl
push
stc
lret
mov
popf
mov
rcr
aad
xchg
inc
sub
leave
cmp
test
mov
stos
mov
mov
cmp
fadds
dec
popf
hlt
lcall
jne
inc
mov
mov
test
xor
shlb
ds
scas
mov
lea
loop
in
mov
clc
je
mov
dec
test
pop
mov
dec
sub
push
sub
scas
or
pop
insb
testb
mov
test
sbb
xchg
mov
insl
aad
push
sub
mov
jecxz
ret
xchg
sub
rol
imul
inc
ja
sti
sbb
pop
imul
cld
sub
jg
jo
icebp
sbb
int
or
jae
fldpi
push
out
pop
push
sbb
mov
out
xchg
pushf
adc
adc
xchg
stos
sbb
xchg
aad
test
mov
rorb
mov
mov
push
mull
add
mov
ret
lcall
mov
inc
push
rclw
jnp
mov
pop
iret
xor
push
iret
and
movsl
jmp
dec
sbb
aas
cmc
repnz
ror
xchg
out
and
or
mov
rcl
and
fdivrs
out
enter
mov
dec
xchg
cmp
mov
fwait
int3
ret
cwtl
inc
cmp
push
sbb
out
jo
mull
inc
inc
mov
xchg
sbb
cmp
inc
jecxz
cmp
aas
fnstcw
rcl
repz
dec
daa
je
pop
cs
fcmove
and
popf
mov
mov
aad
xorb
jmp
jl
fwait
pop
dec
add
fldl
filds
push
sub
stos
ljmp
fildll
data16
mov
loope
fistps
inc
sar
push
or
adc
cli
fs
mov
push
cmp
or
xlat
in
dec
xchg
xchg
pop
fdiv
dec
fwait
jbe
xor
stc
dec
dec
mov
loope
fwait
lcall
mov
insb
or
adc
repnz
lret
jmp
sarl
mov
cmp
repz
add
shrl
jg
out
pop
sub
mov
xchg
rep
mov
fcom
push
pop
adc
or
lea
fbstp
mov
out
inc
aad
lods
shll
in
mov
pop
scas
notl
rcrl
icebp
aad
out
pop
xchg
pop
jbe
push
or
rol
lods
mov
popa
fwait
adc
xchg
lds
fwait
pop
mov
mov
inc
mov
fbstp
pop
out
adc
mov
jnp
xor
fucomp
lahf
orb
mov
dec
add
sbb
repz
cmpsb
mov
imulb
mov
imull
xor
xchg
add
stos
cmp
mov
or
daa
loopne
iret
and
insb
mov
insl
adc
fwait
ret
pop
mov
mov
ret
hlt
int
sbb
leave
push
push
mov
xchg
xchg
mov
push
clc
dec
sub
add
lcall
add
lea
adcl
mov
leave
scas
push
inc
pop
fwait
test
mov
imul
fnstenv
jl
mov
loop
push
push
ljmp
call
je
xor
cli
jl
icebp
sbb
or
dec
insl
fbld
fcmovnbe
pushl
into
subl
or
cmp
mov
pop
mov
pop
jmp
sbbl
stos
xchg
lcall
cmp
xor
sub
notl
inc
aas
test
or
sub
mov
sub
lea
fs
popf
lds
bound
icebp
cmp
cmp
and
out
ljmp
xchg
ss
andl
iret
fldt
rcrl
rclb
pusha
lds
push
add
daa
cmp
lods
jle
lret
sub
dec
add
mov
push
enter
rolb
add
dec
mov
js
jle
mov
adc
and
fists
inc
pop
xchg
push
mov
or
xor
sub
xchg
mov
inc
push
mov
sbb
xchg
push
jne
pushf
mov
dec
jns
mov
and
lret
mov
push
es
push
sbb
dec
out
daa
add
loop
inc
mov
jne
shl
and
sarb
aad
or
mov
cltd
mov
xor
enter
popf
movsl
xor
xchg
out
in
repz
jae
pop
xchg
push
or
unpckhps
out
mov
cmp
in
dec
sbb
cmpsb
xchg
jecxz
imul
les
add
push
push
scas
mov
fnstenv
push
mov
add
cmp
adc
aad
pop
clc
stc
sub
ret
add
in
mov
inc
movsb
fldcw
xchg
add
mov
ss
lcall
xchg
movsb
inc
bts
add
ds
pop
das
push
sahf
jge
or
lock
mov
xor
test
mov
std
adc
cmp
rorb
xchg
fists
lea
and
cmpsl
mov
sti
pop
test
mov
pop
cs
push
mov
hlt
lahf
mov
je
aad
lret
cmpsl
xacquire
mov
mov
pop
lods
loope
jl
xchg
xchg
popf
fists
movsb
xchg
adc
pop
cmp
xchg
xchg
fst
int
out
and
ret
shll
inc
call
jno
xlat
xchg
fwait
aaa
push
aaa
pop
inc
jg
mov
jecxz
mov
xchg
and
xor
mov
mov
push
mov
pop
insb
lret
sti
lods
add
pop
pop
insl
lret
jecxz
jmp
repz
filds
in
cmpsb
roll
add
shl
arpl
lods
mov
mov
pop
add
xor
sti
xlat
pop
mov
mov
mov
cltd
int
popf
icebp
mov
ja
push
xchg
mov
mov
mov
xlat
push
scas
adc
popf
push
push
fs
lods
mov
pop
and
in
inc
fistpll
push
aas
xchg
lret
mov
ss
ds
int
push
adcl
outsb
mov
fwait
sbb
inc
lret
fcomip
loopne
sub
fst
cld
jno
int3
dec
popl
pop
fwait
and
xchg
dec
xchg
add
lret
shl
pop
xchg
inc
mov
test
aas
test
shlb
andb
loope
test
lret
push
inc
cmpsb
rclb
jmp
dec
mov
pop
fbld
jp
fisttps
xchg
mov
inc
cmp
daa
dec
pop
adc
mov
rcrl
add
sti
jp
mov
notl
cmp
out
adc
mov
mov
testb
sub
jp
cltd
mov
push
add
jae
xlat
push
fdivl
sti
rcrl
add
xchg
ja
jo
int3
inc
or
imul
push
push
insb
jl
das
xchg
xchg
fildll
imul
out
rcrb
rcll
xchg
xchg
rcrl
movsb
xchg
icebp
inc
outsb
ffree
fwait
imul
call
pop
push
sti
lods
mov
lcall
das
aad
rorb
mov
les
mov
mov
xchg
icebp
jbe
fidivrl
sub
sti
ret
sub
or
sbb
mov
jbe
popf
fwait
sbb
test
mov
or
adc
lods
sarb
cmp
jmp
dec
push
sbb
xchg
dec
insb
push
addr16
jecxz
enter
jmp
or
xlat
xchg
mul
fcmovnu
push
jno
or
out
push
fcmove
outsb
sbb
roll
jmp
xchg
mov
lahf
pop
lret
jl
pop
scas
pop
push
lret
ret
movsb
rep
nopl
iret
jnp
mov
pop
sub
data16
mov
shl
or
mov
jecxz
cmp
popa
mull
lods
fidivl
aaa
sti
fcompl
mov
adc
movsl
jecxz
pop
xchg
dec
loop
mov
test
mov
mov
or
popf
rcrl
mov
lret
lcall
scas
inc
aaa
jecxz
cli
iret
push
pop
cmpsb
cld
jl
fildll
fs
mov
rol
mov
or
mov
pop
jecxz
in
not
repz
and
xor
pop
adc
mov
sub
xchg
ret
cs
repnz
lcall
int3
inc
ret
jmp
mov
insl
rcl
jle
xor
pextrw
add
mov
js
fwait
jg
rol
mov
xor
mov
rcll
add
fbld
mov
push
movsb
adc
xchg
mov
mov
insl
popf
xchg
iret
jbe
push
sbb
shlb
addr16
rclb
sub
sbb
cmp
cmp
lock
ret
mov
loope
out
jmp
sub
cmp
insb
jne
rcll
cmp
stos
jmp
jns
inc
add
cmpsl
adc
das
fs
call
adc
lahf
or
dec
rolb
mov
fildll
xchg
sub
inc
xchg
in
rcr
sbb
lahf
ret
clc
jno
inc
or
push
in
and
or
jecxz
cmp
cmpsl
ret
rcrb
cld
ret
addr16
stc
inc
negb
jecxz
leave
test
jg
shl
add
out
insl
aad
ja
scas
scas
cltd
lret
test
mov
mov
fwait
fwait
outsl
push
aas
xor
popf
aad
fildl
or
xchg
dec
mov
stos
icebp
jl
aad
push
ret
pop
jecxz
or
cmpsl
repz
push
pusha
fmuls
jp
loopne
mov
daa
dec
clc
and
icebp
mov
push
dec
sarb
aas
cmp
rcll
lods
es
test
jl
fld
daa
mov
dec
mov
outsl
and
xchg
mov
xchg
pop
push
aam
lock
test
fdivp
test
cs
and
xchg
or
pop
subb
push
repnz
bound
inc
arpl
sub
aaa
sub
xlat
xor
int3
xor
ds
cmpsb
mov
stos
adc
fstpt
rclb
popf
stos
sbb
pop
jecxz
jl
outsl
in
psrad
xchg
mov
cmp
scas
jo
ficoml
orb
test
push
lahf
sbb
mov
shll
mov
stos
xlat
mov
xchg
ljmp
mov
mov
mov
jp
push
lods
test
cltd
pusha
pop
pop
pop
push
ret
cltd
lret
push
out
push
mov
add
cmp
pusha
and
fisttpl
mov
mov
dec
xchg
lret
inc
pop
pushf
jg
aaa
mov
pop
sbb
in
lds
inc
rcrl
add
rcl
or
repz
mov
int3
xchg
cli
addl
in
call
pop
addb
aad
inc
add
test
fimull
in
mov
gs
ret
rcll
lahf
mov
adc
xor
in
lret
pop
mov
shll
jbe
push
ss
addb
lea
add
and
xchg
cltd
pop
xor
push
fimull
incl
mov
rclb
mov
dec
adc
lock
dec
or
cld
mov
lods
hlt
add
or
loop
fistps
push
pop
jbe
movsb
adc
fiaddl
mov
xchg
and
add
dec
and
fwait
cmpsl
sub
or
lret
xchg
popf
rep
daa
push
cld
adc
iret
and
cmpb
xlat
ret
movsl
aam
jns
pop
dec
cmp
xlat
push
or
rcl
pop
adc
clc
and
sub
lods
fistps
sti
push
aam
cmp
jns
xchg
pop
jno
cmpsl
sbb
imul
pop
cs
mov
jl
repz
sub
sub
mov
stos
scas
icebp
rcrl
jl
sub
push
gs
ret
push
mov
mov
and
daa
shrl
push
frstor
roll
fs
aad
arpl
aam
lret
mov
mov
fwait
add
jno
das
lahf
adc
push
push
test
xlat
xchg
cli
sub
subl
mov
aad
rorb
push
dec
jle
movsl
fwait
lret
pop
pop
pushf
mov
ret
push
xor
sub
pusha
insl
xchg
dec
outsb
fsubrs
cs
xchg
mov
dec
ljmp
cmpsl
test
pop
rclb
fistpll
mov
fisubrs
loope
pop
subl
mov
pop
in
mov
pushf
jno
nop
jmp
push
mov
pop
cltd
inc
jle
add
cmpsl
lea
jb
jge
inc
xor
lods
inc
sti
mov
mov
out
dec
repz
mov
test
fmuls
add
test
xchg
mov
cmp
out
sti
adc
xchg
test
mov
sti
leave
or
xor
push
and
and
pop
aaa
loop
add
mov
xchg
in
sbbb
cld
xchg
data16
mov
enter
pop
fwait
sbb
push
aaa
mov
inc
cmp
mov
sbb
stos
or
and
sbb
jmp
inc
pusha
mov
test
fstp
stos
imul
inc
cmpsb
ret
icebp
insl
imul
ss
fstpt
divb
cmp
movsb
xchg
subb
sti
idivl
icebp
ds
cld
jne
cmp
popf
mov
dec
xchg
test
mov
mov
jecxz
les
repz
repz
mov
pop
ja
xchg
push
xchg
js
popf
cltd
push
fwait
pop
xchg
enter
pop
xchg
arpl
lea
rcll
jnp
sbb
rorb
mov
dec
jnp
mov
cwtl
jecxz
mov
enter
jl
adcl
std
ret
aam
aad
lods
mov
inc
and
ret
fs
mov
icebp
divb
push
sbb
lcall
cmp
jl
or
icebp
inc
adc
mov
pop
mov
aaa
jecxz
lret
neg
dec
out
jb
jmp
jbe
fists
outsl
push
imulb
mov
cld
iret
or
js
sahf
movsl
push
xor
shlb
mov
test
stos
rcl
icebp
repz
cmp
shr
push
pop
xchg
cli
test
pop
and
popf
hlt
sbb
xlat
mov
jl
aad
cmp
dec
sub
sahf
shl
mov
aaa
push
xlat
cmp
or
jp
cmc
adc
inc
testb
lahf
out
push
sbb
sbb
movsb
andb
pop
insb
xchg
push
je
loop
dec
pop
sub
mov
outsl
mov
pop
lcall
push
pop
mov
negl
rcr
aaa
dec
and
sti
sbb
dec
mov
stos
add
mov
mov
xchg
mov
xor
add
popa
ffreep
inc
push
push
jns
inc
out
scas
and
push
jne
sbb
outsb
cmpsb
push
js
idiv
mov
mov
dec
gs
jecxz
loope
out
dec
lods
cld
mull
fcmovnb
loop
test
cmc
inc
mov
fsubl
shr
and
dec
xchg
divb
mov
scas
push
dec
movsl
xchg
data16
pop
cmpsb
stc
mov
in
or
sbb
xchg
jmp
mov
fcmovb
cmpsb
rolb
push
hlt
js
fnstcw
add
dec
mov
xchg
repnz
push
int
outsl
xchg
loope
shr
mov
jo,pn
add
lea
cmpsl
mov
mov
pop
jg
cld
sar
bound
lods
jns
lods
out
pop
loope
adc
ret
sbb
sti
mov
inc
xchg
sbb
fisttps
shl
ja
inc
fnstcw
lret
push
push
loopne
fisubs
sub
inc
mov
push
orb
dec
push
jecxz,pn
outsl
inc
test
xlat
ljmp
sti
mov
cmpsl
fsubrl
mov
inc
out
xchg
fcomi
fnstcw
out
cmp
pushf
push
movsb
pusha
test
fadds
cmp
dec
mov
mulb
fwait
aas
ret
rorl
and
loop
mov
rol
mov
call
into
out
insb
sbb
sbb
cld
ffree
push
dec
jmp
lahf
adc
and
int
fistpll
mov
inc
fiaddl
mov
cmpsb
shr
push
cwtl
ret
mov
push
sbb
mov
sub
sbb
stos
and
push
aad
pusha
in
loop
mov
jb
mov
jmp
addr16
and
cmp
repz
pop
mov
xlat
loopne
xchg
pop
add
sub
cmpsl
or
cmpb
shr
dec
lret
in
ret
push
mov
lahf
mov
pop
add
push
xchg
cmp
rcrl
add
popf
fists
icebp
xor
addr16
pop
repz
lock
dec
mov
out
or
sub
inc
xor
mov
icebp
dec
lcall
inc
loopne
xchg
fists
push
sbb
sub
pop
sbb
dec
jns
mov
and
fisubrl
mov
pop
mov
add
adcl
fidivrl
in
fcmovnb
mov
ret
push
outsb
cli
sbb
jmp
out
inc
xor
cmp
stos
sbb
pop
xchg
mov
lds
movsb
xchg
xchg
in
push
pop
and
cmp
sti
cli
mov
xchg
and
cld
loope
andl
cmp
jle
aaa
or
or
inc
call
add
enter
test
sar
xlat
add
test
or
push
fucomi
dec
mov
js
xchg
sti
mov
xor
jmp
dec
mov
insw
test
fwait
push
stos
int3
xchg
cmp
xchg
mov
jne
rorl
ret
xchg
inc
push
mov
shll
insb
sbbl
push
jl
iret
pushl
negb
mov
cmp
aad
push
stos
iret
out
jmp
hlt
rcl
mov
xchg
and
jle
lret
in
and
dec
sbb
rorb
scas
rcl
arpl
push
sub
sub
mov
sbb
clc
in
xlat
popf
and
xor
ja
fwait
xchg
lret
mov
dec
mov
adc
sub
add
cld
stos
mov
lret
subl
cltd
pushf
mov
repz
mov
fcomip
andb
scas
fisubs
testb
loope
out
in
stc
add
lret
xchg
mov
mov
scas
adc
pop
mov
xchg
je
bound
sub
movsl
repnz
jl
xorl
sbb
lret
xlat
repz
push
dec
xchg
adc
mov
sti
mov
xchg
rol
lds
stos
ljmp
mov
mov
sub
clc
fwait
ret
cs
adc
pop
scas
fidivrl
adc
push
mov
cld
les
cmc
mov
popf
fists
or
cwtl
stc
or
aad
mov
popa
icebp
push
movsl
push
and
in
or
repz
or
inc
lods
mul
inc
ss
sti
enter
leave
roll
xchg
lds
popa
test
sub
mov
addb
std
jecxz
pop
mov
es
mov
xchg
inc
scas
shlb
stos
in
xor
mov
jo
mov
mov
fnsave
dec
movsb
subb
xchg
shr
loope
pop
mov
sub
out
adc
adc
and
shl
pop
aas
sbb
xchg
cwtl
nop
inc
ljmp
pop
ret
xchg
xlat
fcomps
xlat
imull
movsl
arpl
out
das
rcl
insb
pop
outsl
adcb
aad
into
dec
in
lret
popa
or
sarl
mov
cli
dec
sbb
in
sarb
inc
out
stos
or
hlt
leave
pushl
mov
testb
jl
mov
ret
shl
mov
jecxz
ja
push
mov
cs
mov
cli
push
dec
ss
xchg
sbb
rcr
push
iret
nop
roll
call
lret
push
arpl
into
cmp
call
adc
sub
push
aad
movsl
or
xchg
or
lock
fmuls
out
dec
in
cmc
dec
imul
lods
in
imul
xchg
push
rcll
add
inc
mov
jns
sahf
sbb
push
xor
rol
repz
pop
xchg
cld
adc
cmpsb
lret
jecxz
cli
mov
ds
mov
dec
cltd
lods
mov
pop
mov
pop
sub
inc
aad
lods
std
inc
jg
lcall
xchg
mov
and
repz
shlb
loop
shll
stc
and
fs
push
repnz
ljmp
shll
jno
sbbl
pop
push
in
push
sub
lea
jae
mov
imul
pop
repz
imul
loopne
lea
lods
outsb
out
jns
out
jg
out
mov
fsubs
jecxz
mov
xor
push
fwait
aaa
icebp
cmp
shlb
loop
mov
add
sbb
jne
sti
or
xor
inc
movsb
ret
out
icebp
inc
clc
push
es
push
xor
mov
imul
mov
pop
or
fwait
xchg
and
iret
sbb
pop
lret
testl
add
cmp
xor
out
inc
cmp
out
aad
test
mov
fcompl
adc
mov
push
std
xchg
xchg
mov
mov
add
repz
mov
jp
pop
or
mov
and
xlat
xchg
mov
incl
mov
ret
scas
pop
mov
pop
faddl
and
addl
bound
mov
push
push
lret
out
or
add
push
aaa
pushf
lahf
cmc
push
rcl
fstl
shl
mov
xchg
iret
pusha
lahf
xchg
xchg
cltd
ret
aam
popf
shll
in
int3
pop
rcr
xchg
cmpsb
rcrl
aaa
stos
add
xchg
cwtl
sbb
shll
inc
test
loope
xor
dec
xchg
ret
rcl
fcomi
jbe
xchg
xchg
inc
mov
adc
sbb
jl
xlat
out
cmp
inc
xchg
sbb
scas
jecxz
add
adc
js
test
aam
aad
jbe
inc
stos
sub
scas
dec
xlat
cmp
lret
test
clc
mov
mov
mov
test
adc
cmp
mov
cld
xchg
sbbl
lret
xor
aad
sub
stos
jmp
xor
cmc
mov
fdecstp
xchg
xchg
xor
shll
popa
adc
jbe
mov
scas
lahf
test
pop
cmp
stc
adc
mov
xlat
xchg
adc
mov
jl
sbb
jae
leave
dec
mulb
bound
pop
sub
mov
xchg
lret
movsl
adc
aad
xchg
mov
lret
sbb
xlat
mov
scas
ret
lret
sub
stos
fcomp
adc
push
out
outsb
sti
lods
scas
xchg
icebp
push
cmpsb
aad
inc
lret
mov
jo
fimull
dec
jmp
cmc
inc
adc
gs
stos
and
xchg
scas
in
repz
out
xchg
cli
out
fcompl
xchg
sti
mov
pop
daa
jo
cmp
jecxz
cwtl
aam
xchg
iret
arpl
mov
xor
mov
stos
fucomp
pop
xchg
jecxz
mov
mov
test
aad
cld
je
add
in
pushf
xchg
ja
mov
jmp
mov
loopne
jo
cli
ljmp
mov
mov
pop
lds
xchg
adc
iret
lods
jo
pop
or
rolb
push
dec
or
out
lcall
xchg
jecxz
aad
repz
repnz
adc
stc
lret
out
jmp
push
dec
sbb
dec
mov
xor
sbb
xlat
sbb
icebp
pop
out
push
fxch
movsb
rcrb
and
or
xchg
push
loope
imul
and
xchg
fdivs
scas
sti
hlt
mov
out
ss
mov
stc
jle
push
lahf
sub
ret
lret
fbstp
mov
and
sti
ss
dec
repnz
mov
xlat
out
push
fisttpll
pop
push
cmp
sarl
sbb
dec
inc
cmp
pushf
stos
jmp
movb
fbld
arpl
hlt
sbb
lahf
bound
lret
out
mov
lret
shl
push
jae
cli
xchg
das
fisttps
pop
jne
out
popf
xchg
cmpsl
push
test
fwait
repz
int3
out
and
cld
stc
xor
mov
inc
jae
dec
movsb
mov
out
jns
rcl
test
lret
scas
leave
pop
sub
push
stos
js
fistl
popa
or
fistpll
push
hlt
sub
popf
mov
xchg
iret
fiaddl
mov
mov
cmp
mov
lcall
sub
in
call
shrl
dec
and
jecxz
pop
arpl
dec
push
sti
sbb
shrl
cs
sub
int
mov
sti
xchg
sahf
loope
insl
mov
cmp
jae
mov
fwait
pusha
mov
mov
ftst
cld
int3
ficoms
movsl
sti
xor
or
xchg
sarb
and
cli
pxor
popf
sbb
or
mov
stc
and
loope
dec
fidivl
dec
inc
xchg
rcll
inc
popf
xor
xchg
loope
xlat
out
pop
jmp
mov
dec
and
ds
rcrl
xchg
adc
pop
or
xchg
jb
std
outsl
testl
shll
jmp
std
push
pushf
mov
stos
xchg
out
shlb
xchg
push
cli
test
push
fisttpll
shl
mov
jb
xchg
fwait
test
aas
jmp
cmp
sbb
test
mov
jge
jecxz
fwait
outsb
mov
inc
mull
xchg
cmpsb
ror
pop
mov
repz
mov
push
imul
fwait
xchg
push
insl
xor
mov
popf
push
ret
mov
lret
rcr
xchg
pop
loopne
in
arpl
lret
sarl
add
push
test
mov
testb
fildll
mov
cmp
cmp
loope
jg
icebp
popf
fidivs
xchg
push
cld
pop
stos
sarl
rclb
add
mov
pop
iret
fidivrl
test
shl
adc
lahf
mov
push
push
out
push
stos
jmp
and
ja
xchg
mov
loope
mov
sub
in
jmp
sub
mov
scas
mov
ret
adc
adc
and
in
outsb
ja
dec
gs
aad
gs
out
ljmp
jnp
jl
subb
lret
adc
cmp
xlat
push
repz
pushf
pop
lock
dec
jp
fnstsw
stos
shlb
retw
mov
nop
xlat
int
xchg
adc
or
mov
out
sbb
push
jo
pop
stos
mov
inc
imul
mov
imull
xchg
and
mov
add
popf
mov
xchg
push
push
xchg
add
mov
cs
xchg
inc
lcall
addb
movsb
sub
out
adc
inc
loope
lret
sbb
mov
or
sbbl
in
ja
lock
pop
xchg
lahf
mov
daa
xchg
push
dec
pop
push
cmp
popf
cwtl
or
filds
pop
insl
pop
inc
or
data16
mov
push
ds
jg
xchg
outsb
or
lret
pop
push
mov
mov
lcall
mov
movsl
mov
aad
mov
add
push
ret
and
negb
shl
adc
cmpsb
rcrl
xchg
dec
pushf
jmp
fst
ja
aad
and
test
fnstcw
fdivrs
test
push
inc
mov
inc
cmovne
xchg
cmpsl
jmp
in
sbb
push
lahf
pushf
mov
testb
sub
push
and
shl
xchg
mov
call
arpl
and
adc
lods
lret
lods
inc
add
cltd
flds
pop
push
pop
out
outsl
addb
in
xor
std
aas
mov
movsb
inc
cltd
push
sub
insb
lret
scas
jge
jns
sti
int
lahf
stos
aam
push
xchg
dec
mov
lods
sti
jg
ret
xchg
fcomip
negb
mov
jle
and
cmp
loope
inc
daa
repz
cmpsl
std
xor
loope
fwait
pop
cmp
popf
dec
dec
lret
jns
fisttpl
push
stos
ret
sarl
stos
das
cmpsl
jmp
adc
fcmovnbe
pop
scas
orl
and
rcll
mov
jl
out
lods
push
inc
sub
out
shlb
add
cmc
lods
jmp
dec
mov
xchg
sbbl
sub
ficoml
addr16
push
ret
iret
cmp
dec
adc
jge
cmpsl
inc
mov
jge
vrsqrtss
and
mov
mov
cmp
push
pop
or
push
repnz
sbb
push
ja
data16
inc
imull
mov
sbb
cld
jmp
iret
ja
shrb
cmc
popl
or
adcl
jae
dec
loop
shlb
xchg
xchg
push
mov
mov
repnz
movsl
push
rolb
xchg
xlat
jb
push
inc
pop
mov
mov
shll
sub
enter
ret
mov
xor
add
rolb
out
test
push
dec
shl
push
add
sbb
mov
cltd
mov
imulb
pop
int
jmp
stos
int3
popf
notb
xchg
jle
adcl
insl
jle
adc
repz
add
dec
aas
outsb
inc
dec
fisttpl
jg
pop
mov
repnz
push
cli
idivl
mov
cli
xor
xor
adc
sub
push
inc
push
cmp
cmp
cmp
mov
pop
push
loope
jle
push
push
aad
in
movsb
xchg
in
fstps
psubusw
cmp
filds
and
fistl
pop
cmp
loope
pop
mov
sub
xchg
mov
push
sti
xchg
dec
insb
cmp
hlt
stos
je
test
rcrb
xchg
mov
fistl
lock
lret
jbe
in
mov
jp
das
inc
fwait
cmp
fdivp
fstps
repz
lea
pop
addr16
popf
mov
mov
nop
ja
fcmove
in
dec
lods
lods
inc
bts
jae
mov
jecxz
jp
fmull
xchg
popa
or
mov
dec
jmp
aam
fbstp
push
aas
push
mov
mov
mov
mov
xor
shll
lret
xchg
dec
jnp
jl
jecxz
lcall
inc
cltd
and
lods
es
jno
out
mov
idiv
lods
ja
adcl
push
or
xchg
lds
imul
negl
ljmp
icebp
cs
xlat
into
xchg
add
sub
adc
fisttpl
fnstsw
inc
xchg
dec
jle
int3
push
cld
push
cmp
shll
divb
push
xlat
int
add
mov
inc
pop
xlat
mov
stos
fs
testl
shl
mov
and
pop
insl
lock
jmp
aad
testl
adc
push
dec
arpl
sub
jbe
pop
int
lret
xor
dec
jl
xchg
lcall
dec
out
daa
pop
pop
stos
lods
sti
fisubs
testl
mov
dec
mov
mov
pop
jbe
arpl
sub
sbbb
popa
lea
or
xlat
pop
fwait
fwait
outsb
xchg
mov
dec
test
sbb
int
out
cmc
inc
daa
aaa
jge
mov
maxps
mov
stos
dec
jb
test
pop
add
fcmovnb
sbb
fidivl
dec
fs
pushw
int3
mov
pextrw
ja
xchg
fmuls
ja
push
jecxz
add
fsincos
pop
mov
movsl
push
inc
push
stc
xlat
jecxz
adc
ja
sub
fwait
out
xchg
repz
rclb
adcl
sub
jnp
xchg
adc
arpl
cmpsl
mov
dec
scas
out
sbb
mov
fwait
ret
sarl
int3
arpl
sbb
testl
mov
ret
cmp
js
icebp
test
fadd
je
dec
fistps
sub
das
movsb
jae
sbb
xchg
aam
mov
xor
xchg
lods
cmc
mov
pop
inc
add
or
stos
mov
push
test
mov
movsl
js
and
out
jecxz
jl
push
fs
leave
mov
addr16
xor
sub
ret
stc
dec
ret
ret
es
lret
cmpsb
push
xchg
shl
lahf
movsl
jecxz
lods
ror
mov
push
mov
sbb
out
adc
imul
xchg
or
insl
int
mov
xchg
inc
mov
mov
shrl
lahf
add
mov
add
daa
movsl
pop
ret
daa
jecxz
dec
pop
pop
dec
xchg
je
lret
outsb
push
add
movb
sti
mov
test
fidivrl
lahf
push
scas
cmpsl
jl
xchg
xlat
iret
aad
xchg
sub
push
cmp
ja
imul
pop
xor
jecxz
jae
lcall
aad
fwait
ret
push
sub
aaa
sub
repnz
ljmp
cmp
shrl
jl
stc
xchg
repz
mov
testb
dec
ret
int3
jno
loope
cltd
imull
fmuls
adc
xchg
sbb
scas
xor
insl
inc
adc
jg
lahf
clc
movsb
imul
les
ret
ret
or
shll
outsl
in
pushf
hlt
and
mov
jl
mov
gs
push
mov
decl
addr16
fldcw
std
sbb
xchg
mov
mov
ret
rcl
dec
jge
in
subb
jb
pop
fimull
pop
insw
shl
dec
fisttpll
cwtl
xchg
jbe
scas
xchg
jecxz
pop
pusha
ja
popa
cmp
stc
push
data16
psraw
xchg
cmc
stc
or
inc
pop
adc
xchg
jae
stos
shll
test
mov
mov
mov
arpl
jmp
jl
push
dec
cmpsb
repz
scas
cmpl
ret
movsl
lods
icebp
add
xor
mov
adc
dec
cmpl
fcmovb
xchg
lret
test
xchg
sbb
aaa
mov
mov
adc
push
inc
ds
stc
mov
pop
out
fildll
pop
sub
adc
out
cmpsl
out
mov
sbb
test
insb
icebp
inc
stc
dec
push
addl
push
sbb
xorb
out
xchg
xor
cmpsb
xor
mov
lahf
dec
aad
lret
sbb
pop
xor
ljmp
movsb
mov
test
lods
mov
test
sbb
rol
addb
pop
push
imul
mov
sarl
adcl
inc
cmp
stc
ss
mov
and
ret
loopne
jecxz
xor
clc
pop
or
jecxz
in
lea
loop,pn
push
out
aaa
jne
loop
idivl
ret
cmc
out
and
lret
movsl
and
fwait
jmp
push
outsl
adc
dec
imul
pop
push
dec
or
cmc
hlt
adc
sub
mov
loop
outsb
aad
dec
lock
lret
mov
out
adc
in
out
dec
ja
push
pop
fucom
sbb
add
pop
mov
negl
inc
sti
ret
es
push
jmp
jbe
fimull
sbb
mov
mov
mov
lret
fwait
cmp
movsb
std
je
movsb
lds
fwait
in
repnz
and
mov
sub
data16
fwait
std
repz
and
sub
pop
fistl
sbbl
addl
shll
stc
jbe
movsl
ret
rolb
into
repz
ljmp
sbb
mov
sbb
repnz
push
divl
lea
scas
shrb
pop
jecxz
imul
pop
lahf
mov
clc
iret
shl
mov
fcoms
in
jb
icebp
or
inc
xchg
adc
jns
push
jmp
pop
dec
cmp
mov
scas
jae
jne
popf
imul
xchg
mov
mov
fldenv
sahf
shl
in
fcomip
rorl
test
sbb
addl
lret
push
mov
adc
stos
xchg
imul
mov
stos
cwtl
icebp
sti
pop
xlat
in
adc
js
pop
jbe
and
iret
loope
insb
xchg
mov
mull
mov
mov
lods
push
pop
out
inc
jecxz
xor
sub
mov
pop
push
xchg
loope
rcrl
fsubrs
dec
ja
mov
test
jnp
or
push
pop
sbbb
cmp
add
xor
imul
fcmovbe
xchg
and
daa
push
cmp
lds
loope
fwait
mov
lahf
fwait
or
leave
rcl
cmp
or
sub
sbb
stc
scas
cmpsl
mov
mov
mov
outsb
dec
imul
push
lods
jne
adc
sti
popf
aad
fsts
mulb
nop
dec
cld
test
orb
xchg
mov
mov
cmc
pop
push
imul
js
fcmovnbe
scas
push
jle
mov
xchg
out
jle
repz
imull
xor
fildl
repnz
sarb
xchg
pop
xchg
mov
test
xchg
cltd
loope
sub
mov
in
fcmovb
push
sti
loope
fbstp
js
xchg
loop
push
dec
sub
fstpt
out
lret
mov
jns
fistpll
lret
and
jecxz
shll
scas
sti
cmp
push
icebp
test
mov
ret
arpl
lahf
add
and
xchg
xor
adc
cmpsl
mov
cmpsl
xchg
sub
test
mov
xor
and
addr16
leave
fs
js
ret
out
sbb
or
push
in
cmp
hlt
cmpsb
xchg
cmp
in
cmp
rorl
aaa
ret
sarl
cmp
fcomi
jge
mov
hlt
popa
stos
mov
icebp
cmp
cld
fisttps
xor
cs
jge
popf
xlat
ret
sbb
mov
xchg
sbb
rcrb
mov
mov
or
xorb
jbe
movsl
mov
add
mov
or
loop
int3
arpl
icebp
fdivl
orb
xchg
xchg
xchg
test
ret
dec
sub
repz
loop
movsl
xchg
mov
test
or
xchg
fistps
and
inc
sub
dec
rcr
jo
push
xchg
xchg
pop
aas
jnp
cmpsl
mov
xlat
in
add
rolb
insb
adcb
and
or
fwait
mov
mov
sub
xchg
ret
in
outsb
jnp
out
mov
lahf
pop
cmp
jle
fwait
out
inc
cmp
sbb
push
xchg
xlat
push
push
sbb
mov
insb
sub
sbb
shll
and
sub
cmpsb
rol
or
cmp
mov
cmpl
arpl
add
mov
aad
lds
push
pop
jns
sarb
jecxz
or
dec
mov
test
test
add
rol
xor
mov
rep
rolb
jl
jmp
stos
icebp
jmp
push
xor
push
fcmovnu
aam
test
test
jge
xchg
xchg
loopne
adc
in
xchg
mov
push
sbb
iret
repz
sbb
outsl
jl
add
call
push
jns
cltd
fsubr
imul
xchg
xchg
ds
test
lret
cmp
sub
scas
iret
ret
pop
int
mov
mov
add
mov
cmpsl
push
int3
xchg
fildl
cmp
mov
jle
lret
inc
hlt
shl
sbbb
stos
jl
lahf
pop
ficomps
test
pop
push
fwait
les
jl
faddp
ja
jb
cmp
dec
out
subl
lcall
xor
dec
adcl
sti
mov
jp
shll
stos
ret
mov
dec
ret
and
jmp
pop
lock
mov
pop
outsl
in
adc
mov
fucom
mov
add
sub
idivb
fnstsw
push
into
testb
lret
rcl
inc
cmp
or
sarl
out
out
and
mov
pop
ljmp
shl
and
mov
lds
pop
lea
loopne
rcll
icebp
and
out
pop
ljmp
lret
mov
stos
arpl
scas
fsubrs
repz
ja
mov
inc
jl
xchg
lea
lcall
movsb
dec
int3
mov
jmp
arpl
push
jmp
sbb
or
ja
into
int
sti
lods
add
cmp
mov
sub
fwait
cltd
fcmovbe
inc
inc
mov
push
ret
xchg
insl
sbb
rolb
jmp
cmpsb
push
fld1
mov
imul
stos
test
arpl
jecxz
test
repnz
std
ljmp
std
scas
xlat
or
mov
mov
fiadds
aas
mov
cld
mov
dec
xchg
cmp
and
pop
pop
cmpsb
xor
xchg
jno
pop
jnp
repz
daa
loope
fiadds
push
sub
loope
jmp
jl
out
or
mov
out
xchg
xchg
imul
mov
aas
xchg
aad
sub
jecxz
pop
mov
cmp
loop
mov
rcr
push
sub
andl
rcr
push
scas
hlt
insb
jge
lods
lcall
push
push
xor
add
xchg
pushf
enter
xchg
inc
loope
mov
push
in
xor
inc
mov
sbb
sub
mov
jmp
xchg
sub
add
pop
nop
rclb
in
adc
clc
mov
popl
enter
cmp
xchg
mov
icebp
ss
lret
push
sub
test
cs
push
sbb
rcrl
jo
les
jge
notl
jns
xchg
add
xor
lods
and
out
jmp
inc
dec
pop
xor
pop
cmpsl
lret
ss
jae
test
sbb
rcrb
mov
pop
iret
sbb
ret
sbb
inc
insl
fldt
int
cmc
xchg
ds
rcrl
mov
dec
cmp
add
push
fdiv
frstor
mov
or
dec
pop
outsl
repz
push
sbb
stos
fisttpl
cmc
loope
mov
stos
mov
mov
inc
lods
sbb
mov
rcrl
jle
sbb
inc
push
dec
leave
scas
cmp
roll
loop
xchg
ret
fisttpl
imul
push
cmp
out
movsl
lea
cld
adc
inc
ljmp
xchg
aaa
jno
adc
andl
xlat
jge
imul
repz
stos
mov
mov
sub
mov
sbb
mov
mov
movsl
xchg
imul
arpl
fists
xchg
sbb
mov
outsl
loope
test
lods
cmpsl
jg
into
xchg
cmpsl
sbb
mov
jmp
lods
xor
mov
clc
jae
negb
xchg
xchg
push
mov
jge
es
mov
mov
adc
jns
ret
lret
das
scas
xchg
adc
or
xchg
repz
xchg
sar
daa
lds
stc
or
int
xchg
in
mov
xchg
mov
lcall
lret
in
loop
jecxz
push
mov
add
loop
sub
push
fwait
mov
dec
push
inc
pop
xor
pop
sbb
mov
je
stos
cmpsb
jbe
shr
in
rcrl
sbb
mov
popf
lret
dec
adc
xchg
xchg
jns
call
out
iret
outsb
fbstp
dec
fwait
cld
push
xchg
pop
lahf
ficoml
inc
psrlw
inc
cmpb
mov
mov
push
ficompl
filds
shrb
sbbb
call
mov
jecxz
and
jmp
orb
adc
or
xor
dec
icebp
and
in
shlb
sahf
dec
xchg
lea
push
pop
cmpsl
inc
cld
adc
mov
fidivrl
dec
pop
mov
xchg
xor
adc
cmp
mov
mov
aad
aam
arpl
sbb
xor
push
adc
xchg
cwtl
aaa
in
and
push
jecxz
movsl
push
xorl
lcall
jl
lods
mov
xor
arpl
loopne
lds
push
fcmovnb
movl
fstpt
adc
and
mov
sahf
add
aad
xchg
jns
sub
push
out
pop
rcrb
pop
and
bound
jae
pushf
ss
mov
cmpsb
pop
pop
stos
dec
mov
bound
stos
cmp
rcrb
and
xchg
adc
xchg
jecxz
aam
xchg
and
jge
xchg
mov
cmpsb
xchg
mov
in
pusha
jecxz
aas
sub
inc
push
jl
sbb
xchg
out
ficoml
fwait
insb
pushf
xchg
jecxz
sub
or
fisttpll
mov
popl
mov
test
mov
je
lods
lds
lock
in
sbb
mov
mov
jo
push
xchg
scas
repz
nop
xchg
mov
imul
jg
xor
add
adc
xor
and
scas
sbb
xchg
sbb
jl
shlb
orl
dec
stos
lret
sbb
sbb
add
pusha
xchg
lea
jno
pand
jb
out
mov
sbb
jae
fadd
idivl
mov
aad
movsb
dec
call
cmpsl
negl
fsts
jae
sbb
popf
pop
pop
xor
mov
pop
jmp
stos
jecxz
cmp
popf
xlat
out
adc
je
scas
loop
test
xor
sub
in
or
mov
orl
fsubrs
lahf
rorl
daa
or
in
lea
outsb
pop
loopne
or
mov
sub
movsb
mov
adc
xor
ficoml
push
jns
inc
out
cmp
push
loopne
jo
lcall
adc
cs
pop
icebp
lods
adc
jecxz
in
add
adc
or
xchg
xchg
pop
dec
sbb
xchg
push
jg
mov
dec
aam
pop
lahf
arpl
test
push
sti
jp
xorl
rorb
leave
ftst
popf
and
ljmp
ljmp
cmp
xchg
lahf
mov
push
sub
mov
push
jecxz
pop
push
pop
sub
xor
and
pop
cmpsl
xchg
mov
mov
popf
pop
and
cmp
shlb
xchg
fwait
mov
ret
mov
mov
adc
lret
sub
sbb
jae
jge
mov
fld
mov
push
out
aaa
adc
xor
pop
cmp
das
ret
fdivrs
fstps
fimull
in
add
xbegin
outsl
ret
movsb
into
jbe
pop
pop
inc
sub
gs
pop
inc
mov
xor
pop
xchg
adc
lsl
push
pop
fimuls
aad
lods
xchg
pop
jp
cltd
negl
or
sub
ret
push
lret
cmp
mul
mov
xor
lds
fadds
jmp
or
leave
arpl
and
or
xchg
mov
mov
dec
pop
stos
mov
ja
mov
gs
jne
mov
ja
divb
std
push
mov
aas
arpl
jno
and
out
sbb
cltd
out
inc
in
ret
in
cmp
std
shll
fwait
inc
movsb
mov
sub
push
sbb
lret
lock
fsts
int
jb
cmp
das
in
test
icebp
mov
sub
push
cmp
repz
cmpsl
push
ret
mov
or
mov
add
iret
js
dec
out
movsb
xlat
popf
lcall
neg
push
ffree
cld
mull
stc
rcrl
push
and
cmp
mov
pushf
push
insb
or
mov
and
or
jle
mov
sub
xor
pop
jmp
jl
cmpsl
jecxz
lret
push
rorb
test
fldl
icebp
loop
pop
adc
lea
xchg
les
stos
sti
call
stc
add
xlat
xchg
xchg
cmpsb
push
pushf
movsl
into
inc
popf
jo
fists
or
movsb
pop
lock
repz
inc
mov
dec
xchg
dec
xchg
inc
xlat
or
aas
in
mov
test
push
mov
pop
xchg
jmp
inc
stos
xor
ret
shll
test
inc
sti
pop
out
rclb
out
sbb
cmp
sahf
das
push
arpl
lret
outsb
stc
cmpsb
sar
shlb
sub
push
sbb
dec
loopne
outsb
aad
jae
inc
movsb
lret
mov
sub
push
sbb
mov
out
loope
mov
sbb
xchg
push
decl
pop
adc
cmp
int3
mov
jne
mov
icebp
mov
or
add
and
lret
lret
insl
lods
push
pop
decb
int
je
call
ret
jecxz
add
test
imul
pop
jne
addl
mov
push
cmp
sbb
data16
jl
sahf
jle
or
outsl
push
jecxz
sub
lds
mov
cmc
outsb
push
adc
add
jno
push
jg
stos
lods
inc
adcb
push
cmp
test
sbb
mov
scas
jmp
aad
push
or
mov
pop
xor
aad
push
xor
loop
cld
sbb
xor
push
dec
pop
cld
jmp
lds
inc
jle
popf
xchg
sub
movsl
fisttps
out
mov
je
add
inc
ret
rolb
imul
push
pusha
pop
jnp,pt
mov
aam
popf
mov
or
int
cwtl
cmp
mov
rcl
jmp
daa
outsl
clc
push
mov
push
pop
cmovl
sub
roll
lret
push
sbb
mov
cmp
rcl
add
cltd
add
push
mulb
cmp
popf
out
ret
aad
mov
push
repz
mov
and
out
das
xchg
dec
dec
lds
loopne
idiv
xor
cmp
push
popf
cmp
pop
jns
test
xchg
pop
sub
cmp
arpl
mov
mov
iret
cld
es
call
push
cmp
pusha
jae
xchg
jb
ljmp
scas
andl
test
insl
mov
ss
iret
pop
xchg
inc
jl
add
mov
insl
or
and
dec
mov
jns
ljmp
cli
sbb
clc
movsb
ret
cmpsb
cmp
adc
mov
push
rcpps
jl
das
xchg
xchg
call
push
xchg
outsl
xor
rcrl
test
idiv
xchg
cmp
sub
push
test
push
mov
inc
fistps
mov
hlt
sub
sti
inc
jecxz
push
fsubrl
xchg
cmp
jbe
xor
aam
ret
test
mov
pop
dec
rcrb
push
cmovle
pop
mov
fidivl
sbb
jecxz
rcrb
or
negl
adc
std
icebp
inc
imul
popf
aad
leave
dec
jle
sti
sbb
mov
mov
mov
xor
cmp
lods
addr16
xchg
test
xchg
dec
push
fxch
jge
stos
inc
jns
jecxz
jle
push
xchg
or
push
pusha
jge
cmpsl
rorb
mov
fwait
xchg
mov
add
addb
mov
mov
fidivl
sbb
ljmp
ja
pop
cmpsb
lret
mov
fildll
ret
push
std
icebp
and
leave
push
pop
ret
mov
in
aad
and
fiadds
je
and
or
inc
xchg
std
loope
addr16
sbb
rorl
mov
ret
mov
ds
inc
ret
leave
movsl
mov
xor
sub
inc
rcrb
mov
data16
lods
out
in
loop
add
stos
mov
dec
in
sbb
mov
icebp
jbe
push
aad
movsb
push
push
std
test
adc
nop
cs
sbb
or
mov
cltd
fildll
mov
rclb
cmp
ret
mov
repnz
dec
sbb
push
out
fdivr
and
clc
sbb
xor
ds
pop
mov
inc
jge
cld
xlat
mov
xchg
ret
cmp
aad
test
sarl
and
mov
adc
fcoml
mov
aad
push
test
mov
lods
sar
bt
sub
push
in
flds
in
mov
mov
sbb
jecxz
mov
incb
repz
int
shll
das
in
mov
ftst
mov
jne
mul
push
and
into
cmp
sti
scas
lods
cmp
icebp
jnp
xor
add
hlt
fiaddl
mov
adc
lret
int3
std
xchg
cli
adc
rorl
pop
jmp
push
rcr
orl
mov
cmpsl
pop
inc
xchg
scas
jg
jae
adc
pop
inc
out
sarl
dec
outsl
mov
ret
es
movsl
mov
sti
mov
sti
inc
sub
imul
cmpl
fistps
pop
jle
in
mov
out
ret
ficoml
jmp
cwtl
adc
test
int
fisttps
mov
test
std
or
repz
or
sti
mov
pop
or
xchg
add
jb
jne
lock
lcall
repz
add
outsb
jecxz
stos
in
jb
mov
aam
stos
jns
repz
mov
adc
shl
or
adc
sbb
jl
dec
push
jge
aad
loope
daa
test
push
ret
data16
push
jbe
xor
xchg
idiv
rcll
hlt
add
mov
scas
es
push
icebp
mov
xor
leave
and
cmp
mov
notl
lea
repz
pop
mov
lahf
shrl
cld
or
cmpsl
ret
imul
dec
in
mov
pop
cli
xchg
push
lcall
mov
repz
cmpsb
iret
adc
lcall
mov
mov
mov
movsl
stos
hlt
mov
mov
loope
out
mov
addr16
push
repnz
cmp
pop
lret
mov
jns
and
sbb
ret
outsl
cld
fbld
bound
adc
lcall
popf
xchg
aad
insl
fmuls
pop
arpl
subl
inc
mov
lods
scas
fisubrl
pop
mov
push
addl
int3
and
inc
fisttps
aad
xchg
rcll
pop
jnp
rorl
loope
inc
jae
out
sbb
mov
pop
sub
gs
repz
outsb
mov
fst
pop
les
loop
xchg
test
loope
cmp
or
cwtl
push
adc
mov
push
es
inc
movsl
scas
mov
mov
rorb
xlat
shrb
push
loop
xchg
scas
cmp
inc
repz
leave
add
fiaddl
inc
lods
stc
fists
pop
outsb
test
pop
fistpl
cmp
icebp
mov
stos
not
dec
push
ret
push
or
jo
cmp
xor
xchg
mov
not
shl
bound
shlb
fs
imul
jmp
adc
scas
mov
sub
fdivl
push
dec
push
jl
cmpsl
int3
push
mov
insb
cltd
and
ret
or
pop
push
lds
adc
cli
ljmp
push
add
jg
push
repz
jmp
movb
xlat
or
mov
ficompl
movsb
fbld
adc
or
mov
ljmp
inc
mov
fwait
cmp
cmp
dec
mov
mov
aad
xor
je
es
cmc
fistpll
mov
imul
mov
xchg
inc
nop
fcoms
cmp
mov
xchg
fbld
xchg
pop
push
adcb
shl
gs
popa
push
ffreep
sbb
jp
cmp
psubq
mov
iret
jns
fistps
fadd
and
mov
push
push
cli
mov
xchg
fisttps
into
sub
xchg
sub
not
push
fdivl
xlat
inc
sarb
test
pop
in
rorb
orb
xchg
xchg
pop
fs
mov
sbb
mov
mov
ror
and
xchg
jecxz
mov
xlat
lcall
sub
push
pop
adc
push
cli
aaa
jns
xor
sub
cmp
ret
fistl
or
stos
aad
xchg
cmp
xchg
stos
xchg
stc
sub
aad
jmp
icebp
mov
push
adc
shrb
fbld
fxch
mov
test
sti
bound
pop
adc
xchg
int3
sbb
or
shl
cmpsb
repz
lods
jb
add
jb
mov
mov
cmp
aad
fcoml
and
sub
rcr
rol
add
xchg
or
push
lock
outsb
cmpl
dec
inc
or
loope
inc
ja
stc
sti
sti
enter
mov
ret
pop
cmpsb
push
mov
push
xchg
std
mov
cltd
lahf
cmp
xor
mov
cwtl
mov
nop
add
iret
mov
lods
lret
xor
push
dec
add
in
mov
jecxz
dec
pop
push
sti
js
jb
stc
mov
inc
testl
xchg
std
lea
lret
ja
rcll
mov
xlat
mov
dec
clc
cltd
xlat
jb
pop
lods
leave
rcll
mov
sbb
sarb
jns
mov
lcall
call
imul
mov
fsin
stos
inc
and
xchg
inc
dec
ror
xchg
repz
lods
les
pop
jns
repz
sbb
jmp
in
or
adc
jmp
out
pop
das
fcmovnu
aaa
xlat
lahf
adc
xchg
xchg
lods
repz
add
fadds
imull
dec
stos
jmp
aad
scas
sub
jecxz
cltd
jmp
cmp
mov
fdivs
push
sahf
cmp
xchg
adc
cmp
jmp
je
or
mov
mov
dec
fwait
and
ret
mov
aad
dec
mov
fistpl
test
mov
sbb
pop
xchg
push
sub
mov
stos
xor
push
add
mov
ja
jecxz
push
in
jno
std
mov
pop
pop
dec
xchg
out
mov
push
test
xchg
lret
or
rorl
dec
mov
xchg
sbb
jmp
dec
xchg
ror
int
cmovno
jge
rol
add
xchg
ret
loop
in
and
xchg
jno
movsl
dec
cld
lcall
cmpl
add
in
andl
or
loope
pop
dec
xor
dec
or
inc
gs
push
cmc
inc
mov
mov
push
cld
and
lock
lret
sub
daa
xchg
jb
fucomip
int3
xchg
mov
notl
inc
push
sub
leave
lods
shlb
or
mov
repnz
sti
pop
sbb
loopne
push
push
outsl
mov
cmp
jmp
pushf
mov
xchg
hlt
push
cmp
or
outsb
in
xchg
bnd
sbb
mov
xchg
ret
sub
js
ljmp
jae
sub
adc
dec
mov
test
stos
cmpsl
iret
mov
mov
sti
inc
xor
pop
adc
aaa
out
xchg
idiv
push
lcall
xlat
roll
outsb
xchg
jl
leave
dec
mov
mulb
fldenv
xchg
sahf
mov
xchg
push
mov
scas
push
dec
cmp
sub
mov
mov
std
pusha
push
aad
test
cmp
sbb
mov
and
iret
mov
xchg
mov
inc
or
in
pop
sub
sbb
shll
xchg
adc
rorl
in
lods
pop
icebp
cmp
gs
jmp
fwait
xchg
add
adc
xchg
xchg
mov
pop
xchg
rol
insb
adc
cld
popf
jmp
add
outsl
push
inc
push
mov
std
je
lret
jmp
pop
movsb
or
mov
push
xor
rorb
pusha
test
ja
mov
cs
adc
mov
cld
roll
ret
test
scas
mov
popf
sti
xchg
lods
add
insl
repz
outsl
rep
cmp
movsl
movsb
das
std
push
jecxz
fnclex
test
fwait
ret
imul
xchg
aad
add
out
jmp
fisubs
lret
in
orb
idivl
frstor
movsb
and
or
mov
fisttpl
dec
xor
arpl
push
pop
hlt
or
in
xor
pop
mov
jecxz
dec
jne
cli
cmpsl
and
cld
bound
and
push
mov
lahf
imul
mov
mov
dec
add
fidivrl
pop
push
xchg
iret
ret
icebp
pop
icebp
test
mov
out
ds
mov
std
inc
jg
adc
stos
aas
mov
lock
data16
adc
push
jnp
dec
cmpsl
mov
movsl
scas
fistps
cmp
xchg
scas
iret
cmp
shll
mov
call
dec
mov
lock
sub
jmp
pop
out
stos
xlat
jmp
xor
and
xchg
jmp
inc
ret
dec
scas
popa
adc
xor
sti
xchg
xchg
fs
loop
loop
push
frstor
in
stos
icebp
fcomip
leave
adc
lea
movsl
mov
cmpsl
rcrl
jae
daa
test
pusha
xchg
ss
loope
int3
push
fsubl
add
mov
fbstp
add
daa
xchg
xchg
cmp
lds
mov
sbb
sub
or
scas
xor
adc
xor
out
jbe
push
pop
jmp
stos
jmp
xchg
rclb
cli
je
jecxz
mov
aam
add
pop
push
mov
outsl
and
dec
cmp
fsub
mov
sub
repz
outsl
and
ja
xchg
xlat
repz
testb
dec
bswap
sub
fcmovne
inc
fildl
movsb
xor
and
cmp
xor
mov
in
lret
divl
xorl
inc
or
xlat
stos
jl
rcr
aas
out
dec
inc
inc
test
ret
fcmovnb
pop
je
add
mov
icebp
pop
pop
xchg
rcrb
hlt
test
cltd
imulb
fnstsw
shl
sub
jg
sbb
insb
mov
addr16
rcrl
and
mov
pop
lods
pop
shl
dec
popf
mov
aaa
add
dec
jl
mov
icebp
adc
lahf
in
ret
ror
stos
lods
dec
mov
out
lret
pop
insb
fwait
inc
xchg
cmp
cmpsl
mov
dec
sub
test
idivl
test
fistpll
arpl
lock
adc
mov
loope
dec
push
pop
fcmovnbe
lret
aad
cmp
pop
shrb
xchg
and
jmp
cltd
pushf
jmp
and
ret
pusha
ret
push
push
fcmovnu
mov
rclb
mov
inc
push
mov
xchg
mov
rep
lret
testl
lret
shrl
rolb
xchg
sbbl
lds
movl
movsl
movsl
dec
nop
cmp
mov
xchg
pop
pop
dec
test
cmp
xor
fbld
inc
and
push
sbb
call
repz
mov
fistps
mov
jae,pn
mov
ljmp
add
sbb
push
sub
push
adc
cmpsl
cltd
adc
cs
pop
rcr
test
imul
mov
xlat
inc
lcall
add
pop
notl
scas
ret
jmp
push
fdivp
lret
mov
jl
fadd
or
mov
inc
mov
cmp
ja
mov
lods
push
enter
rcrb
sbb
lret
push
sub
push
pushl
cmpsl
sbb
mov
stos
mov
pop
cmpsl
rcr
cmpsl
jmp
movsl
insb
or
pop
dec
cmp
sarl
sub
push
repz
mov
jl
daa
push
xchg
lea
cmpsb
xchg
sub
mov
jecxz
sti
outsb
ficoms
xor
cld
sbb
arpl
shrl
dec
ss
outsl
cwtl
test
pop
lods
fst
lods
adc
and
sub
dec
mov
add
shrl
sbb
int3
pop
je
mov
call
sub
mov
mov
mov
mov
test
jge
out
mov
aam
es
cmpsl
lds
fwait
decl
sub
sar
je
adc
push
xchg
push
ss
fistpll
loope
scas
xchg
mov
movsl
mov
imul
inc
stos
cmp
pop
add
test
cmp
aas
cmp
test
test
jmp
iret
push
jne
movsb
je
rcr
into
xlat
stos
out
lret
dec
pop
xor
xchg
into
sub
stos
loope
scas
icebp
mov
mov
pusha
pop
xchg
icebp
insb
cmp
xchg
pop
pop
fistps
inc
sbb
ja
outsl
scas
add
mov
mov
out
mov
xlat
mov
mov
dec
ficompl
pop
fcmovnbe
test
inc
xchg
test
cmpsl
add
ret
adc
roll
sub
lods
mov
and
mov
cltd
fiaddl
mov
insb
xchg
pushf
pushf
xchg
xor
push
icebp
pop
daa
fidivrl
dec
mov
pop
jmp
fisttpll
repz
mov
ret
outsb
push
xlat
dec
xor
cwtl
mov
notl
mov
pop
or
mov
pop
push
sub
test
lret
mov
ror
clc
pushf
lods
lcall
adc
xchg
xchg
cli
ret
xchg
or
and
loop
scas
jmp
pop
inc
fcmovnb
cmc
sbb
xchg
out
push
dec
xchg
jns
dec
test
sti
dec
pop
sbb
lods
and
inc
call
jecxz
ret
and
mov
xchg
mov
push
push
xchg
pop
cmp
fisttps
repz
sbb
je
icebp
mov
shrl
mov
cmp
cmpsl
pop
aad
xor
sbb
mov
loope
stos
mov
bound
jnp
mov
jmp
sub
mov
jns
mov
je
push
dec
mov
bound
pop
aad
cltd
mov
subb
inc
xor
subb
adc
xchg
jns
in
addl
lcall
fs
scas
jnp
mov
bound
inc
fdivrs
sbb
push
push
int3
mov
aaa
in
fwait
jecxz
add
mov
dec
negl
ret
lods
divb
pop
sti
mov
scas
lods
lret
ffreep
xchg
in
daa
or
pop
xchg
arpl
movb
test
mov
xchg
jbe
cmpsb
sbb
daa
in
mov
scas
lods
pop
jecxz
ret
xor
and
cltd
jl
dec
push
out
push
dec
xchg
xor
mov
pop
rolb
xlat
ficoml
and
xchg
js
sub
sub
aad
loop
pop
cmc
jbe
es
jecxz
cmp
mov
push
loopne
pop
bound
in
negb
pushf
sahf
cmpsb
inc
or
lods
adc
nop
dec
aad
add
pop
mov
icebp
int
dec
aas
inc
fsubrs
pop
fidivrl
out
call
cld
mov
repz
movsl
jae
arpl
jl
push
sub
scas
jae
sub
das
test
icebp
xlat
enter
xchg
cmp
mov
push
in
int
fsts
add
nop
or
iret
cmp
xlat
inc
inc
jl
out
xchg
cmp
aad
pushf
mov
adc
add
pop
dec
movsb
lea
jl
subb
inc
sar
pop
movsl
out
aad
sbb
adc
stos
sub
xchg
cmp
push
es
xchg
xor
jl
repz
ds
mov
mov
filds
push
mov
hlt
jl
lahf
pop
outsb
mov
shrb
negl
daa
rorl
add
mov
lret
mov
mov
sahf
sarl
inc
mov
cmpsb
xchg
xlat
movsl
pop
in
les
imul
nop
data16
fbstp
lret
lret
mov
orl
dec
cmp
shr
aam
mov
and
jg
sub
xchg
pop
insb
mov
adc
shl
push
loope
ja
add
mov
stc
or
fucomi
mov
pop
loope
xchg
sarl
xor
pop
cmp
dec
xchg
aad
dec
lret
pushf
popa
fcomi
and
test
lret
out
enter
pop
das
pop
test
mov
jae
les
xchg
shlb
pop
adc
scas
lret
lea
and
mov
lretw
xchg
shrl
inc
stos
adc
in
mov
jns
cmp
cld
dec
scas
in
mov
negl
sbb
sub
addl
mov
call
push
xchg
inc
sub
push
lock
sti
xchg
sub
fcomps
push
cmp
lret
hlt
data16
mov
sti
idiv
pop
in
cmpsb
mov
fmull
rcrb
stc
test
xchg
scas
cld
dec
mov
dec
ret
imul
js
add
push
bound
adcb
icebp
xchg
sub
mov
xchg
int
out
andb
in
movsl
roll
mov
repnz
int3
arpl
push
stos
mov
rcll
lock
xchg
testl
cmp
sbb
jecxz
shrd
mov
mov
xchg
pop
je
mov
cwtl
sbb
aad
push
mov
int3
pop
fwait
push
mov
lea
push
movsb
lods
mov
xchg
repz
lods
aas
scas
xchg
sub
mov
lret
sub
sub
cli
sub
ljmpw
inc
dec
mov
lahf
adc
or
fildl
mov
xchg
int3
pop
mov
fwait
xchg
sub
inc
inc
inc
insb
jge
scas
mov
push
pop
aam
jmp
cwtl
shll
fstps
out
fcompl
or
mov
mov
cs
cmp
xchg
dec
xor
xchg
or
xchg
sti
jnp
movsb
cltd
inc
push
or
shl
push
cmp
push
inc
push
decl
xor
cwtl
push
mov
dec
jmp
pop
pushf
pop
in
jecxz
repz
add
pop
adc
xchg
pop
ficompl
icebp
das
fists
in
cli
lea
idivl
jmp
ret
leave
fdivs
lret
mov
mov
pop
xchg
xchg
dec
jge
ret
push
pop
aaa
and
rcrl
pop
xchg
push
or
mov
mov
out
rolb
fldcw
xlat
sbbl
xchg
lret
jnp
pop
call
je
or
mov
loope
xchg
lods
out
sti
pop
popf
movsb
icebp
lods
pop
fisubrl
inc
in
xlat
shrl
pop
xor
mov
mov
pop
test
jb
repz
cwtl
ret
cmp
shll
adc
jg
out
int3
mov
mov
adc
push
mov
lret
jmp
sahf
mov
xchg
fwait
ret
sar
sahf
dec
sarl
call
xlat
stos
mov
push
lods
push
cmpb
repnz
rcrb
iret
jae
jmp
xchg
mov
shrb
icebp
push
xor
mov
repz
jecxz,pn
pop
mov
daa
sti
arpl
or
jbe
sbb
xchg
cwtl
dec
adc
pop
outsl
movsb
pop
xchg
mov
stos
aas
icebp
xor
xchg
shll
cmp
mov
movsb
flds
inc
out
test
loope
add
push
jmp
inc
jle
pop
cwtl
lods
push
xchg
arpl
out
mov
dec
xchg
push
int3
outsb
pop
jbe
mov
hlt
dec
fadds
jmp
orl
dec
popf
xchg
mov
xchg
stos
lret
adcb
dec
push
inc
pop
mov
mov
or
add
leave
or
ja
sub
mov
push
pop
push
mov
mov
xchg
cld
push
inc
movsl
xchg
adcl
fdivs
subb
ret
test
mov
fstps
sub
pop
outsb
lea
inc
mov
shll
pop
enter
rcrl
dec
movsb
imul
leave
mov
hlt
popf
in
je
lahf
xchg
pop
inc
push
xchg
xchg
mov
xlat
or
mov
push
mov
loop
subb
mov
cmp
shll
jp
cmp
test
lods
mov
push
xchg
fwait
adc
or
mov
cmp
mov
test
cmpsl
rolb
lret
adc
xlat
inc
ss
mov
inc
ficoms
add
ret
stos
jp
in
out
arpl
mov
jl
cmpsl
shll
in
scas
mov
lahf
jae
inc
sbb
lods
cs
xor
inc
xchg
xchg
pop
mov
jg,pn
mov
shrl
mov
or
pusha
data16
add
xchg
fadd
push
or
mov
xchg
movsl
mov
or
outsl
lods
jno
xchg
test
and
dec
jne
leave
scas
ret
pop
jb
pop
sub
push
dec
jecxz
pop
mov
repz
shll
adc
xchg
push
inc
sbb
mov
loopne
jecxz
mov
xchg
cld
inc
rclb
xchg
icebp
mov
add
rcll
or
inc
and
inc
fldenv
dec
mov
popa
sbb
xor
sar
out
xlat
outsl
aam
push
add
mov
mov
xchg
lods
aad
push
pop
or
push
cmc
pop
fnstenv
stos
jg
data16
fdivrs
icebp
cmp
xor
or
rcrl
xchg
stc
imul
fsubr
es
jecxz
fstps
inc
xlat
cmp
push
inc
push
iret
jno
xchg
push
pusha
lea
push
rcrl
sbb
mov
pop
repz
data16
insl
not
rcl
jae
insb
movsl
jmp
sbb
lcall
sti
or
int
or
cld
mov
mov
jno
lods
pushf
popa
mov
insb
xchg
lods
jl
iret
dec
rorb
imul
jmp
ss
xchg
pop
mov
loop
or
dec
xor
leave
aad
mov
scas
lret
rcrl
adc
movsb
cmp
outsb
cmp
ja
imul
or
shrb
stos
or
jecxz
push
cmp
inc
push
sbb
fwait
adcl
inc
out
cmpsl
inc
jmp
fdiv
push
or
cmp
roll
fwait
mov
rcrl
js
fwait
rclb
das
ljmp
adc
arpl
sub
faddl
sbb
pop
mull
shr
sub
xor
ljmp
push
int
jg
lcall
movsl
xchg
pop
cmpsb
cmp
lret
shll
rol
sub
ret
fcompl
mov
ret
cmp
popf
push
or
das
stc
xchg
pop
fisubrl
outsl
inc
hlt
push
pop
mov
rcl
push
mov
scas
leave
dec
daa
scas
adc
ljmp
sti
mov
lcall
adc
int
scas
mov
inc
jp
push
mov
aaa
fdivrl
mov
and
in
mov
push
fcoms
insl
or
inc
cld
rcll
call
popf
mov
jns
fstl
bound
fwait
icebp
cmc
fidivl
jnp
or
lea
loop
in
fldl
jns
xchg
sti
sti
xchg
jae
add
xchg
sbb
pop
fwait
ret
mov
in
mov
lods
cmp
enter
loopne
push
lcall
mov
mov
lods
arpl
lea
les
mov
xlat
push
add
sbb
adc
xchg
repz
pop
or
xchg
cmc
xor
xchg
subl
mov
rolb
stos
sbb
sbb
mov
pop
jmp
ret
fdivrl
jecxz
cmp
add
adc
lret
adc
rol
stos
xchg
ret
shr
imul
xchg
or
dec
hlt
jl
xchg
ret
lahf
or
xchg
or
dec
shl
pop
sub
int
cmpsl
cwtl
hlt
mov
repz
cmpsb
rorl
pop
mov
add
aad
arpl
movsb
xchg
pop
push
les
sti
insl
fisttps
push
fwait
pop
icebp
jle
dec
xchg
movsb
inc
push
les
ret
push
xorl
push
push
xchg
icebp
fwait
sub
jne
jb
add
pop
sarl
push
mov
mov
jp
mov
lahf
sti
mov
lret
mov
inc
frstor
push
fwait
add
mov
and
rol
shl
and
in
int3
lret
sbb
lods
ljmp
adc
jmp
lret
or
mov
lret
daa
repz
dec
subb
stos
and
divb
sar
sbb
jo
lcall
cmp
ret
lods
jae
pusha
mulb
lahf
out
jl
and
inc
xchg
fisttpll
xchg
std
iret
push
pop
sub
jmp
mov
movsl
idiv
insb
xchg
add
push
shr
int3
repz
cmc
mov
inc
xchg
push
ret
lds
lahf
push
xchg
lock
and
ret
loope
push
push
repz
jecxz
pop
and
inc
push
cmp
sbb
or
xchg
xchg
jecxz
pop
or
mov
pop
ret
mov
pop
lea
jp
sbb
push
xchg
stc
cmpsb
push
or
cwtl
testl
fisttpl
aaa
negl
push
aam
cmp
dec
sahf
in
xor
movb
pop
arpl
sar
packsswb
and
inc
fisttps
adc
cmp
inc
xchg
ret
in
inc
int3
jae
jle
cmp
sbb
int
push
dec
cmpsl
rcl
cld
pop
ret
lods
lret
pusha
test
shl
mov
sbb
cmp
mov
xor
lret
cmp
mov
rcll
sub
xor
pop
sbb
cltd
cli
ja
cltd
in
mov
test
popf
xchg
mov
mov
iret
push
or
dec
push
adc
lret
xchg
imul
les
outsb
jo
xor
push
repz
xlat
lret
stos
repz
pop
popa
movsl
negl
mov
inc
roll
jge
cmp
mov
pop
mov
xchg
fs
xor
fnsave
addb
movsb
adc
sar
jl
test
push
js
push
cmc
sub
or
shll
clc
jg
xlat
ret
push
xchg
lret
jb
lea
rcl
sbb
shrb
cli
pop
push
out
ret
dec
jbe
sbb
loope
mov
add
cmpsl
call
shrb
and
jecxz
gs
aad
cmp
fcmovb
inc
fwait
cmpsb
ret
lahf
jmp
aaa
lods
loop
mov
nop
mov
jno
or
sbb
lds
imul
push
lods
fnstcw
rcll
jmp
daa
clc
mov
jge
push
stos
ret
into
mov
and
xor
scas
adc
cmp
movsl
mov
arpl
or
mov
mov
mov
push
adc
mov
repnz
movsb
out
add
xchg
mov
stos
xlat
adc
loope
dec
xchg
stos
sub
push
cli
push
push
mov
push
xor
xchg
cmc
xchg
mov
dec
jecxz
ljmp
mov
cmp
dec
push
andb
out
not
aad
in
out
mov
fiadds
push
mov
mov
push
pop
lds
mov
jg
mov
jl
xchg
mov
jbe
loop
lret
aam
ret
clc
test
test
fistpll
xchg
mov
inc
testl
xchg
inc
movsl
xchg
addl
sbb
fwait
pushw
stos
imul
popf
rcrb
push
in
lret
rorl
xchg
cld
pushf
stc
inc
mov
or
fnstcw
les
mov
lahf
pop
outsb
mov
cmpb
jge
in
pushf
insb
lock
enter
out
xchg
leave
ret
daa
sub
out
aaa
xlat
shrb
jno
cmpl
rcr
lds
push
push
adc
mov
xor
rclb
lret
out
jns
mov
and
mov
outsl
pop
aas
dec
fcomip
andl
sar
cmpsl
push
lods
sbb
fwait
lds
mov
hlt
mov
adc
shrb
call
mov
add
and
pop
xchg
dec
jnp
adc
lcall
aad
fildll
fcomps
movsb
mov
cld
push
or
addl
xchg
xchg
fnsave
adc
and
subb
cmp
push
cmp
scas
repz
xchg
cmpsl
xor
mov
test
xlat
arpl
jmp
and
cmpsb
fs
lret
xorl
pop
pushf
pop
in
movsb
bound
xchg
jle
mov
inc
fnstsw
xlat
dec
lcall
nop
mov
pop
push
negb
popa
mov
sti
ret
sbb
inc
sti
sbbl
rcrb
jl
lds
cmpsb
xchg
bound
push
jnp
add
xlat
push
mov
lods
xchg
mov
mov
xchg
and
mov
jbe
jp
testb
daa
pop
sbb
mov
xor
push
mov
jecxz
cli
push
hlt
scas
negl
mov
push
cmp
xchg
dec
stos
std
scas
dec
adc
loop
or
in
add
sti
jl
xchg
add
pop
into
movsb
jecxz
cmp
sub
lret
push
fists
movsb
xor
in
or
imul
aas
es
sub
cmp
fucomp
xchg
sbb
xchg
adc
int3
lods
lods
mov
out
mov
fwait
cmc
cld
or
enter
shl
ret
pop
fisttps
pop
pop
mov
pop
js
shl
fcmovne
repz
test
pop
mov
xor
rep
jmp
gs
sbb
es
cmpsb
sarb
jns
les
ja
arpl
lahf
xchg
ds
inc
movsb
in
sbb
cmc
push
xchg
mov
mov
popf
push
rorb
mov
daa
shr
popa
or
xor
mov
out
rcl
imul
pop
loope
inc
cmpsl
adc
in
mov
xchg
add
test
fucomi
push
pop
mov
push
int
adc
dec
shll
sub
arpl
push
aaa
push
in
in
mov
push
shr
and
dec
mov
inc
or
mov
in
bound
in
lods
push
adc
push
repnz
lock
in
jge
xchg
jbe
lahf
popf
lods
repz
cmpsl
or
aad
fdiv
shrb
insb
sbb
jl
or
jbe
and
add
cmpsl
repz
push
lret
mov
int
add
mov
shll
xchg
in
xchg
xchg
stc
mov
pusha
mov
push
pop
pop
add
inc
outsb
push
mov
adc
bound
imulb
loope
std
or
insb
lahf
xchg
sbb
inc
jb
arpl
repnz
aad
jae
imul
mov
ja
add
repnz
jmp
mov
stos
cmpsb
sar
cmp
and
inc
sbb
xor
loop
stos
cmp
ret
sbb
rorb
stos
ffree
bound
into
mov
fistps
mov
mov
aaa
mov
imul
xchg
sbb
icebp
loopne
xor
jl
adc
test
cmc
push
xor
pop
adc
in
sbb
xchg
jno
mov
divl
bnd
test
jecxz
add
lea
mov
cmp
js
mov
pop
pop
je
or
int
mov
cmp
addr16
jns
lret
and
dec
mov
xlat
inc
sub
mov
addb
bnd
cmp
dec
jmp
push
jns
cld
int3
das
stos
push
in
mov
inc
push
ljmp
aaa
repz
aad
xchg
push
xlat
xorb
xchg
sub
lods
pop
mov
aad
push
leave
nop
mov
jl
xchg
outsb
jb
sub
xchg
pop
inc
lahf
xchg
fwait
nop
lock
mov
rcrl
std
sbb
sub
push
addb
dec
scas
in
jmp
fildll
std
mov
sarb
cmp
ret
dec
jae
lcall
xlat
dec
push
sbb
xor
fcmovbe
push
addl
pop
mov
sbb
mov
lret
fistps
rcll
mov
mov
or
scas
mov
cmpsl
sub
loope
mov
pop
cs
stos
xor
adc
fstpt
add
lret
jecxz
push
ret
repz
pop
adc
mov
popf
pop
cmc
dec
sarl
xchg
ret
push
xchg
jge
push
sbb
int3
adc
aam
in
lods
bound
mulb
lock
xchg
scas
ret
icebp
loopne
flds
or
out
scas
loope
mov
push
outsl
lret
stos
imul
test
leave
in
scas
imul
rcr
test
mov
mov
daa
and
sbb
jmp
mov
dec
and
jecxz
ljmp
mov
jmp
jmp
ret
lods
lret
dec
xchg
dec
mov
js
icebp
das
test
add
dec
lret
popf
xchg
lret
jne
adc
in
orl
push
popa
scas
jecxz
mov
inc
cli
outsb
fsts
pop
push
scas
test
shll
movntq
out
movsb
rorl
pop
mov
out
stc
out
pop
sar
push
fdivl
stos
jle
daa
fists
xchg
jl
paddusw
xchg
cmc
mov
rclb
adc
ds
or
fwait
pop
xor
xor
sbb
fwait
push
nop
insl
cwtl
fs
fisttps
in
lods
adc
jge
cmc
out
mov
insb
mov
push
mov
cwtl
idiv
shll
test
xchg
bound
int3
fbstp
fistl
xchg
inc
pop
test
and
lret
ljmp
mov
aaa
fistps
mov
inc
sbb
insb
rcrl
pop
ret
js
or
push
je
cwtl
in
test
mov
insl
mov
add
ja
call
xchg
mov
xchg
cli
mov
lea
pop
cwtl
sub
movsb
ret
fsts
inc
inc
aas
sbb
cltd
xchg
repz
cmp
xchg
shrb
mov
sub
clc
mov
dec
les
iret
xchg
shl
insb
mov
shr
loop
xchg
xlat
ret
lret
mov
stc
and
shrb
pop
jmp
push
repz
xchg
or
daa
lret
stos
cmp
stos
lock
mov
pop
mov
mov
adc
testl
in
ret
fisttps
mov
sub
bnd
mov
dec
insb
popf
in
xor
fwait
or
inc
adc
dec
add
mov
fstpl
add
dec
loope
aas
mov
xchg
jo
xchg
mov
test
push
sti
repz
dec
es
xor
aad
insb
pop
inc
or
push
aas
jbe
add
cltd
loope
idiv
or
add
pop
mov
test
imull
cmp
ret
jcxz
sarb
push
fldt
sbb
and
rorb
jo
inc
xchg
mov
inc
adc
lea
jge
frstor
lret
cmp
std
push
sbb
into
shl
imul
and
inc
dec
jg
mov
push
fistl
add
push
imul
pop
xchg
hlt
pop
scas
ret
lahf
in
mov
add
ds
mov
add
jmp
cmp
insl
fsubrs
out
sar
and
imul
push
jno
jo
pop
mov
pop
push
cmc
orl
add
in
cmpsl
adcl
push
sub
push
cmpsb
push
xor
lret
lret
cmpsb
cmp
jg
pop
push
outsb
test
negl
mov
loope
pop
stos
rcrb
insb
int
cmp
pusha
or
cmp
iret
jg
scas
pop
xchg
sub
out
jl
scas
stc
mov
pop
xchg
mov
sub
adcb
sub
jb
mov
sar
outsl
pop
mov
ret
adc
sbb
lahf
mov
inc
mov
loope
pop
insb
sub
enter
cli
lods
fcomip
divl
lock
lahf
dec
fisttps
push
inc
xchg
sahf
adc
lock
jecxz
mov
and
clc
mov
flds
sti
stos
lret
jecxz
icebp
stos
push
jmp
mov
lcall
int3
jge
scas
mov
cmp
and
ret
shl
cltd
cmc
sti
xchg
shrl
inc
mov
inc
pop
lds
repz
mov
in
icebp
push
in
jl
xchg
ret
mov
das
loope
jge
andb
rcll
into
sub
shl
lods
mov
ret
ficompl
lock
xlat
jge
aam
xor
xchg
int
mov
xchg
movsb
sti
popl
scas
or
cs
cltd
bswap
insb
inc
insl
clc
insl
cwtl
mull
mov
pop
xchg
xchg
adc
ljmp
pop
mov
data16
iret
shrl
mov
push
or
mov
mov
adc
mov
ja
icebp
ret
test
addr16
bound
iret
jbe
fildl
mov
mov
stos
pop
rcrb
ret
movsl
dec
inc
testl
outsl
int3
adc
jecxz
aad
inc
pop
add
cmpsb
in
xor
inc
add
jl
cltd
fwait
cwtl
add
sbb
shlb
xchg
test
mov
pop
ret
push
push
add
and
cli
repz
xchg
repz
cmp
repz
xchg
xchg
sbb
neg
fldl
sub
repz
pavgw
fwait
imul
insl
xor
lret
rorb
hlt
sbb
insl
outsb
fcmovnu
sbb
xor
lods
dec
pushf
mov
sti
mov
lea
lret
int
outsb
pushf
dec
mov
lret
jp
pop
mov
push
shl
xchg
xlat
loop
xchg
xchg
out
into
jl
jmp
in
imul
pop
push
inc
insb
fst
and
inc
ret
sub
leave
and
mov
mov
cs
or
and
in
pop
out
jmp
mov
jno
insb
sbb
mov
aam
sub
mov
inc
pop
xor
mov
dec
or
call
dec
repnz
push
cmp
fldcw
jle
cmp
mov
ja
mov
arpl
cld
mov
inc
xchg
out
fxch
aad
xor
mov
fldl
adc
cmp
sbb
jbe
stc
movsb
push
loope
add
icebp
inc
mov
rcrl
push
jns
cwtl
repnz
mov
aad
push
xor
arpl
sub
cmc
das
rcrl
jge
or
test
jmp
icebp
push
loopne
lret
mov
mov
arpl
out
stos
fcmovbe
popf
je
xchg
pop
xchg
xor
add
adc
inc
ja
cmp
mov
inc
movsl
sti
sbb
loopne
push
popf
ja
scas
ljmp
jne
test
js
scas
fdiv
movsl
jecxz
imul
mov
add
fcoms
add
dec
das
repz
push
inc
sbb
test
out
sbb
hlt
xor
movsl
mov
sbb
pop
imul
lods
out
add
sti
cmc
sbb
or
xchg
or
inc
mov
ffree
loopne
nop
cld
sbb
imul
pop
enter
outsl
nop
stos
fnstsw
inc
test
xchg
cltd
xchg
fwait
adc
push
rol
and
repz
ret
cmc
fcmovu
xchg
sbb
xchg
movsw
and
out
xor
nop
sub
push
dec
mov
lcall
xchg
icebp
sarl
and
vsubps
lods
push
add
lea
jecxz
ret
movsl
andl
pop
mov
or
sub
push
aad
aas
iret
pop
rcrb
scas
stc
pop
mov
fwait
les
ret
sbb
sub
xorl
or
insb
jns
mov
mov
cmp
and
lahf
and
fstpt
push
push
lea
lods
or
mov
ret
xor
icebp
cs
std
mov
divb
scas
lock
std
sub
jecxz
inc
mov
xor
mov
stos
lret
inc
call
inc
add
mov
shll
jbe
ret
dec
xor
or
aad
test
inc
jge
fnsave
cmpsl
out
mov
pop
repz
lea
cld
sub
cmp
inc
sub
lds
fdivrl
cltd
or
cld
xchg
loope
push
jnp
rcll
dec
sub
cmp
lods
fs
popa
inc
sub
xchg
int
das
rorb
push
dec
lcall
cmp
test
fmul
into
push
pop
in
stos
jnp
fldt
lret
inc
and
xchg
stc
cs
lret
mov
in
ret
and
push
push
mov
sub
je
fcom
scas
std
xchg
jb
nop
jns
or
sbb
pop
mov
xchg
in
pop
stos
repz
fcomps
imul
mov
sub
mov
aaa
repnz
and
cltd
xor
mov
insl
test
lea
enter
in
cmpsl
xchg
inc
cltd
stos
push
xchg
add
outsb
mov
out
icebp
xor
pop
inc
push
loopne
rorl
mov
mov
lret
ret
scas
cmp
or
mov
sub
mov
out
ss
push
fwait
aad
rcl
sub
sub
push
outsb
cmpsl
add
out
adc
cmpsl
ret
mov
adc
xchg
jmp
in
rcr
inc
lods
xchg
inc
adc
movsl
fpatan
fwait
mov
aad
fisubrs
xor
cmpsl
repz
fstpl
repz
mov
ljmp
loope
lret
xchg
ljmp
pop
dec
test
sub
mov
dec
out
movsl
xlat
xchg
fists
mov
fwait
movsl
icebp
sbb
mov
cmpl
div
lahf
iret
test
xchg
je
repz
movsl
mov
sbb
mov
jl
or
rclb
add
fs
xchg
roll
mov
cmpsl
cmpsl
pop
push
jmp
aaa
jg
lds
cld
repz
sbbl
ss
cltd
lea
jecxz
dec
adc
cmpsb
push
push
sub
add
mov
sbb
push
lods
pop
fsubl
jo
rol
add
pop
inc
ja
lret
outsb
shll
jg
js
push
fwait
loopne
test
mov
xorl
xchg
mov
push
jmp
xchg
outsl
jmp
push
ret
mov
jae
jecxz
ds
sbb
shr
rorb
dec
lret
movsl
inc
mov
fisttps
jns
sti
pop
outsl
sub
sbb
int
aaa
pop
rclb
das
imul
stc
push
mov
push
imul
sbb
mov
push
pop
and
xchg
xor
push
out
addw
vshufps
cs
push
inc
scas
mov
push
lock
jmp
and
ret
das
outsb
dec
scas
push
icebp
sub
ret
les
xchg
jecxz
xchg
imul
push
dec
inc
in
push
ret
rcrb
adc
imul
mov
cwtl
xchg
int
cmp
pop
je
add
out
cli
es
cmc
popl
xor
daa
push
jae
cmp
fldcw
jecxz
jle
xor
jae
sahf
cmp
int
push
ret
mov
out
add
mov
sti
cmpsb
push
dec
or
movsb
outsb
shrb
mov
stc
xchg
jmp
shlb
push
fmuls
dec
jmp
fs
jecxz
mov
push
xlat
inc
cs
aad
out
fwait
pop
icebp
jb
fisubl
imul
fstpl
dec
mov
cmpsl
mov
pop
divl
icebp
enter
loopne
ret
jecxz
mov
test
sub
xchg
lret
loopne
push
xchg
imul
cmc
push
push
mov
lret
ja
jb
or
sbb
push
test
xchg
addr16
inc
int
xchg
mov
jne
lret
xor
shll
sbb
cwtl
sbb
xchg
ret
sbb
orl
std
popa
cwtl
lret
fnstcw
test
les
cmpl
sarl
mov
xor
jecxz
pop
sbb
cld
mov
mov
pop
mov
je
add
xchg
ljmp
aas
test
fwait
lock
push
push
sub
sbb
lea
movsl
arpl
sbb
ja
lea
fildl
shll
repz
jg
or
out
dec
and
hlt
dec
lods
ret
stos
mov
clc
sub
push
shl
or
add
das
dec
add
jne
pop
fistps
jb
xchg
pop
jecxz
int3
sar
lds
int
push
push
and
push
repz
inc
mov
lea
xchg
push
ret
fsubrl
lret
mov
repz
addr16
mov
incl
and
cld
cmp
fisttpll
lahf
cld
insb
icebp
jg
inc
add
fidivl
loope
stc
xchg
jecxz
cltd
les
xchg
xlat
jnp
mov
sbb
iret
sbb
cltd
loope
sbb
ljmp
cmp
cmp
fst
ja
pop
pushl
adc
in
mov
push
dec
popf
jge
sbb
movsl
xchg
mov
cmc
mov
lret
cli
jmp
stc
mov
push
xchg
mov
mov
imull
add
fstps
scas
mov
xor
dec
push
out
inc
lret
push
out
adc
fsubp
push
out
or
xchg
fimull
sub
sarl
xchg
sti
push
mov
sbb
fldl
and
fwait
push
mov
lret
or
mov
fldt
icebp
xchg
dec
xchg
xchg
fwait
lret
push
sub
add
cs
aam
jnp
mov
jmp
int
int3
cmpsb
mov
ljmp
scas
out
sti
into
in
push
cmpsb
jns
mov
cmc
push
cmp
sub
movsb
loop
hlt
lods
iret
pop
mov
push
pop
out
dec
das
cmc
sti
loop
sti
ficomps
mov
jp
leave
rorb
sub
fbld
jae
in
popf
pop
pop
adcl
sub
fwait
out
das
xor
xchg
add
mul
notb
lret
jecxz
fwait
mov
adc
repnz
call
jl
mov
push
inc
mov
cltd
add
fwait
mov
ja
add
push
push
sub
pushf
cmpsb
jecxz
xchg
mov
inc
loopne
fwait
sbb
cltd
fiaddl
jl
insl
ret
fists
jl
idiv
pop
inc
mov
cmc
jmp
out
xchg
cmp
dec
jle
mov
xchg
out
imul
jae
roll
insl
xor
add
pop
mov
push
mov
movsl
lds
out
sbb
xchg
lods
xchg
sbb
lods
xchg
jbe
mov
nop
push
pushf
lret
cld
xchg
jecxz
call
sbbl
test
push
lcall
mov
sbb
in
mov
arpl
or
cli
sbb
sub
pop
inc
cmpsl
rcll
mov
cmc
mov
rcll
movsl
add
in
jle
stos
xchg
imul
pop
ss
leave
daa
dec
jae
adc
cmp
sbb
lret
fnsave
mov
push
xlat
idivl
test
xor
stos
push
pop
outsl
xchg
xchg
cmpsb
inc
adc
in
xlat
push
mov
lds
shll
ss
mov
pop
inc
cmpsb
sbb
cltd
xor
xchg
std
ret
dec
sti
sub
jbe
nop
and
testl
ja
sbb
out
adc
in
and
in
movsb
outsb
xlat
sbb
scas
lahf
cld
add
lret
cmp
fwait
mov
cmp
mov
xchg
mov
xchg
mov
cld
test
sti
iret
testl
push
fldl
xchg
movsl
xchg
vmovddup
dec
rcr
popa
jle
add
into
sbb
rclb
cwtl
mov
repz
call
fwait
mov
adc
sarl
push
mov
sub
lret
out
or
lods
in
pop
sbb
dec
xor
lods
repnz
mov
or
mov
or
pop
and
xchg
testl
fisubrs
adc
and
cmpl
stos
stc
xor
pusha
mov
cwtl
inc
xor
jecxz
fstpt
fcmovb
fstp
aad
out
jg
xchg
push
mov
sbb
mov
adc
sbb
xchg
xacquire
pop
icebp
add
sub
cwtl
jmp
pop
aaa
mov
out
xchg
popa
test
jno
pop
fistps
adcl
pop
movsb
stc
mov
shlb
test
jne
je
btr
mov
push
mov
mov
dec
lret
icebp
mov
and
cmp
xchg
lods
cwtl
flds
or
push
xor
push
xor
rcrb
adc
xor
mov
data16
mov
stos
in
cmc
pop
out
rcrl
lret
das
arpl
mov
mov
shlb
cmpsl
shll
xchg
sbb
cltd
rcr
popf
xorl
dec
popf
mov
push
mov
pop
xlat
ret
scas
aas
in
loop
test
cmp
les
mov
repnz
jle
icebp
pop
loop
andl
in
cmpsb
repz
adc
xchg
cmpsb
iret
scas
push
sti
and
in
repnz
out
jns
leave
fstp
or
xlat
jnp
es
lods
jge
pop
insb
xlat
mov
adc
clc
test
lcall
cmp
les
add
jo
sub
out
sahf
movsl
faddl
cmp
xchg
icebp
jmp
cli
or
push
fldcw
dec
pop
cmpsb
loope
insl
mov
push
in
fistpll
insl
mov
fs
sbb
inc
mov
icebp
out
aaa
cmp
xchg
jecxz
pop
sbb
inc
inc
jg
adc
stos
jnp
in
scas
mov
lea
in
and
sub
lret
test
test
notb
das
lea
xlat
imul
jmp
and
add
imul
jg
std
fdiv
loop
shll
std
movsb
mov
inc
push
inc
jecxz
cs
cmp
fistpll
dec
adc
sub
inc
push
dec
movsb
jecxz
mov
xchg
jp
clc
jecxz
sub
sarb
in
cld
push
ffreep
outsl
mov
inc
push
mov
gs
ja
mov
lret
fildll
mov
cmp
pop
jecxz
rolb
or
ljmp
sbb
daa
pop
rorb
pop
scas
push
lret
inc
inc
fwait
push
adcl
movsl
mov
push
cld
out
xchg
sub
sub
shll
mov
into
mov
xchg
adc
and
lock
into
pushf
mov
das
out
iret
icebp
movsl
je
test
or
mov
pusha
fldt
aaa
cmc
push
pop
xlat
and
xchg
push
ljmp
movsb
xchg
pop
cmp
mov
pop
int3
fs
sar
xadd
pop
sbb
sti
out
xchg
push
add
fistpl
lods
lret
mov
inc
shlb
int
pop
scas
inc
rorl
shl
xchg
adc
cmp
push
mov
cmp
loope
xchg
jbe
dec
mov
lahf
sub
popf
in
xor
mov
movsb
ret
jb
add
jge
test
into
push
adc
pop
icebp
pop
scas
mov
fistl
pop
push
xchg
cmp
xorb
stos
popa
icebp
mov
mov
out
in
mov
mov
mov
and
in
inc
scas
daa
int3
mov
cmpsb
ret
stc
jbe
retw
mov
sarl
mov
mov
inc
ret
mov
inc
es
fbstp
push
ret
mov
outsl
popa
sbb
sub
xor
lret
je
leave
inc
sbb
cmp
shll
sti
decb
mov
gs
xor
and
movsb
iret
arpl
test
dec
mov
jns
adc
ret
push
lahf
push
dec
push
add
and
out
cmpsl
fsubs
lret
sub
out
adcb
daa
lret
mov
iret
xor
neg
inc
sub
std
mov
dec
xchg
dec
ret
ret
cli
xchg
loope
lret
adc
mov
inc
mov
repz
and
jmp
sbb
adc
jle
xchg
movsl
mov
jb
stos
jmp
sti
mov
mov
shll
cmpsl
inc
add
mov
loopne
adc
dec
mov
inc
or
xchg
pop
push
imul
in
lcall
lret
push
arpl
scas
sti
inc
cld
cmp
negl
popa
jno
loope
rclb
push
push
xchg
adc
adc
popa
push
lea
mov
imul
pop
andl
xchg
pop
xor
clc
mull
or
or
ljmp
cwtl
lods
mov
dec
dec
sub
repz
xor
cmc
sub
inc
lcall
fistps
cmp
sub
daa
xor
mov
mov
and
std
stos
aaa
cltd
mov
test
ret
mov
push
pusha
mov
les
jb
popf
imul
sbb
std
mov
into
inc
and
xchg
lret
pop
mov
dec
int3
and
sub
pop
mov
filds
lret
int3
idivb
in
mov
popf
dec
jns
stc
jmp
fwait
or
mov
shll
sbb
xlat
inc
cmpl
fcoms
mov
xchg
mov
sarl
sub
jg
mov
jmp
mov
inc
stos
jg
xchg
sti
mov
push
icebp
push
push
mov
loop
lret
roll
mov
jae
cli
shll
out
push
sbb
mov
mov
fistps
movsb
ret
insl
cli
mov
sbb
lret
lods
xchg
adc
lea
cmp
mov
sub
in
iret
fcoms
gs
rcrl
lds
test
dec
mov
pop
fcomps
mov
rorl
lret
test
sbb
popf
aaa
jmp
mov
dec
and
push
imul
mov
lret
ret
pop
out
es
popf
mov
pop
imul
shlb
jle
fwait
cmpsl
pop
enter
cmpsb
popf
je
mov
sub
ret
subl
rol
sbb
add
xchg
popf
aas
ret
es
xchg
mov
push
scas
daa
pop
inc
dec
sub
jns
mov
insb
push
rcrb
mov
test
insl
lahf
bound
test
jecxz
sub
sbb
xor
call
mov
insl
push
xchg
jno
jl
and
mov
xor
xlat
jnp
adc
aad
mov
outsl
jo
inc
xchg
lret
shll
pushl
cmp
xchg
cltd
or
cmc
ret
rcrl
cmpsb
push
and
iret
and
jl
fists
mov
sub
incl
mov
jne
ror
xchg
fldt
adc
pop
call
roll
stc
push
sahf
inc
imul
cmpsb
lret
stos
icebp
ljmp
or
or
sbb
push
pop
push
arpl
or
jo
inc
dec
adc
std
mov
fldl
imul
lcall
push
and
xor
repz
ret
sbbl
insb
pop
aas
fwait
pusha
or
in
in
scas
pop
sub
addr16
and
sti
mov
fmul
mov
es
incl
jecxz
dec
jmp
cmc
rorb
add
rorb
mov
cmp
rolb
sub
jne
xchg
lods
lahf
repz
roll
sbb
xchg
push
inc
adc
jecxz
fsubrs
aam
dec
and
cltd
xorl
dec
leave
cmpl
ret
mov
mov
push
and
and
or
cltd
insl
or
sbb
lret
jg
jae
push
jecxz
inc
subl
fwait
ret
push
mov
sbb
repz
int3
pop
jno
movsl
xchg
fisttpll
jecxz
pop
adc
scas
rorl
sbbb
jns
int
inc
cmp
push
cmp
repnz
mov
andl
dec
testb
popf
and
or
leave
insl
bound
test
enter
popf
pop
call
addl
or
xchg
sub
xlat
jmp
pop
lret
fwait
aas
push
daa
shll
pop
mov
xor
ljmp
jmp
notl
mov
dec
aam
ret
pop
into
mov
adc
data16
and
rcll
pushf
add
xlat
ror
scas
repz
adc
dec
adcl
fadd
rorb
mov
cmpsb
push
lret
hlt
das
jmp
icebp
ret
push
fcoml
js
and
leave
rorb
hlt
in
jb
movsb
and
rcl
loop
lret
mov
mov
push
int3
and
push
adc
sahf
cwtl
cmp
insl
shr
fxam
rolb
push
pop
lret
dec
jecxz
fcomip
fisttpl
into
shrl
sbb
push
jl
or
push
jp
jne
into
fxch
xchg
sub
push
add
loop,pn
mov
jle
mov
sbb
ret
inc
pop
pop
mov
push
out
xchg
sub
xlat
pop
mov
cmp
pop
lahf
fcoml
dec
push
fst
aad
addl
bt
push
push
and
in
testl
out
pop
fildll
push
xchg
inc
dec
test
jmp
push
cmp
gs
xchg
sarl
cmp
mov
insb
popa
notl
imul
sbb
vpextrd
test
sub
je
or
and
cmp
jae
mov
enter
imul
xor
xchg
mov
sub
push
xchg
xchg
ret
jne
stos
lds
mov
sub
cmp
fwait
out
ret
mov
mov
jne
jae,pn
xchg
xchg
mov
pop
fnstenv
dec
push
loop
inc
sub
call
xor
lock
sub
jmp
jl
sub
fstp
addr16
cmp
dec
lret
ja
mov
xchg
shlb
mov
mov
xchg
movsl
repz
cmpsl
push
out
sbb
cmc
sub
imul
pop
repnz
pop
aad
dec
stos
in
outsb
mov
in
push
cmpsb
sarl
shll
cmc
mov
fildll
cmp
inc
and
xchg
rorb
fs
lds
adc
ret
xor
into
es
mov
sub
sbb
and
shll
int
and
aad
aam
or
push
ret
popf
xor
xlat
xlat
data16
pop
sti
adc
icebp
fsts
mov
sub
sub
push
out
jbe
dec
or
lret
mov
and
inc
or
mov
sbb
in
lret
sti
stc
cltd
fldenv
lret
rol
mov
nop
movsl
xchg
filds
push
push
stos
ljmp
stc
pop
and
repz
xchg
out
xchg
mov
int
adc
xchg
mov
cld
pop
mov
rorl
stos
scas
into
shll
dec
jns
dec
lret
std
loop
push
mov
jmp
pusha
sub
cmp
jecxz
aas
repnz
adc
ljmp
push
fwait
xlat
js
lods
push
xchg
inc
or
out
xlat
mov
mov
fbld
sbb
xchg
rorb
loop
mov
std
xor
pusha
fucomip
jae
in
mov
mov
push
sbb
sub
lods
sti
arpl
adc
sti
dec
xchg
imul
out
stos
xor
lds
jmp
sbbl
mov
push
loope
cmpsl
lret
jmp
fwait
push
pop
push
inc
rcl
pop
jp
fsubrl
test
mov
aas
dec
mov
mulb
cmpsl
mov
adc
sbb
std
cmp
pop
sahf
inc
xorl
ss
inc
inc
cld
repz
pop
or
ja
mov
mov
shrl
fists
rcr
cmp
cmpsb
rcrb
xlat
sarb
das
dec
sar
push
jmp
scas
mov
adc
xchg
mov
mov
vcvtsd2ss
mov
jl
xchg
mov
es
or
or
ds
lret
lahf
mov
scas
filds
jg
jo
pop
arpl
lods
mov
iret
mov
sub
int3
mov
ljmp
add
dec
fildll
mov
and
sbb
pop
stos
push
andl
push
xchg
lea
repnz
jl
lret
cltd
xchg
aad
ds
push
aad
dec
mull
or
out
jl
sub
push
in
adc
dec
and
cmc
out
and
lods
cli
fidivs
ja
sub
mov
repz
mov
pusha
sar
cld
sub
adc
int
es
cmpsl
fldt
das
add
jbe
fldt
mov
adc
adc
pop
add
insl
fcomps
popl
lds
repz
xor
mov
testl
mov
repz
inc
mov
push
mov
adc
xlat
ret
lods
mov
inc
in
dec
sbb
fnclex
and
cltd
lods
ret
jae
flds
cmpsl
adc
or
cltd
out
jbe
xchg
pusha
cwtl
pop
mov
xchg
xor
push
jae
dec
outsb
pop
mov
inc
in
rcrl
and
mov
push
mov
loope
push
sbb
xchg
add
test
insl
mov
push
cmp
in
leave
xor
fbstp
test
xor
lods
test
cmp
inc
stos
out
popa
mov
cmp
ljmp
popf
sub
rcl
xorl
add
mov
jo
ss
jmp
scas
pop
add
imul
or
cmp
pop
cmp
loop
sub
xlat
or
and
pop
addl
lahf
jmp
add
sbbl
mov
fld
sar
lahf
in
mov
fisubl
leave
or
std
or
jmp
in
stc
call
pusha
repz
add
push
dec
popa
mov
jg
xchg
in
pop
fisubl
jge
fists
scas
add
xchg
mov
sub
lds
adc
dec
pop
jecxz
add
push
or
inc
fnstsw
lahf
fwait
aam
push
cmp
mov
insl
js
out
lcall
lods
mov
and
push
fsin
or
jp
xlat
sbb
cmpsb
push
and
ficoms
mov
inc
aam
insl
aas
shl
push
lret
jle
das
cmpsl
aaa
add
push
xchg
xchg
enter
cmp
cmp
out
sub
mov
inc
jge
lret
imul
aas
mov
cld
fsin
popf
jp
and
inc
add
aas
pop
jg
push
fs
imul
pushf
in
jge
iret
loope
mov
out
push
dec
push
stos
repnz
lds
dec
cmp
pusha
xchg
in
push
aad
jecxz
mov
rcll
and
lcall
inc
aaa
cmp
adc
aam
pop
out
xlat
adc
shlb
adc
xor
mov
add
jp
push
shrb
jo
sub
int
jne
fldl
in
out
push
add
iret
stos
or
ret
mov
xchg
dec
jecxz
jmp
ret
sbbl
dec
hlt
nop
mov
in
aad
mov
insl
cltd
mov
mov
testl
sbb
mov
xchg
in
sub
je
pop
stc
iret
pop
jno
sub
cltd
mov
push
mov
sbb
out
xchg
sti
sbb
ret
mov
dec
cmc
xchg
or
cltd
fisttpl
jecxz
pop
sbbb
adc
lock
xchg
xchg
dec
push
out
in
pop
or
mov
sub
push
jne
sarl
sub
jge
fcomip
mov
sbb
lods
or
bound
aad
das
jl
aad
scas
pop
cmp
pop
in
movsl
xchg
inc
inc
call
std
jnp
add
mov
jl
lret
push
sub
pop
pop
cmp
jecxz
cmc
ja
faddl
jge
out
pop
or
push
dec
sub
sbb
xchg
or
sub
jecxz
mov
sahf
aad
ja
sbb
inc
push
in
xchg
cmp
push
pop
sbb
ret
xchg
mov
loope
cmp
lret
std
pop
add
xchg
insb
xor
iret
mov
xor
ficoml
mov
sub
cwtl
jmp
iret
mov
or
testb
repnz
pop
in
xchg
push
or
rol
scas
push
hlt
stos
repz
jle
cltd
jle
xlat
and
cmpsb
pop
push
xchg
repnz
std
cs
or
add
push
movsl
pop
push
mov
or
jnp
push
std
jecxz
or
pop
mov
mov
loope
fbstp
pushf
dec
adc
dec
cld
aam
nop
mov
movsb
mov
push
adc
add
sub
das
xchg
fwait
lea
adc
mov
xchg
ljmp
mov
ss
addr16
xchg
cmpsl
loope
mov
xor
mov
xchg
xchg
les
sbb
movsb
imul
popa
repnz
test
fcomi
cmp
ffreep
cltd
push
push
leave
scas
sarl
ja
js
push
in
push
add
icebp
scas
jecxz
mov
inc
mov
push
rolb
and
shll
jecxz
add
pop
xchg
ret
pop
dec
mov
mov
xor
sbbl
fdivrs
stos
adc
stc
mov
adc
rorb
je
sub
jmp
pop
xchg
mov
jp
cmp
fwait
pop
dec
or
outsb
scas
aaa
pop
stos
mov
mov
cmpsb
hlt
mov
jmp
fdiv
cld
mov
dec
mov
xchg
mov
adc
adc
mov
ljmp
and
out
dec
subl
lahf
fcomip
sub
pop
outsb
or
inc
jl
sarl
rcll
rcrl
add
lock
and
in
orl
lahf
pop
lret
ret
rclb
out
lret
call
test
popf
mov
cmp
push
aaa
sub
mov
xchg
idivl
xor
mov
pop
repnz
sub
cltd
callw
and
rcll
mov
adc
jge
mov
ds
add
out
mov
push
rcrl
inc
add
sbb
inc
cltd
mov
out
dec
pop
jecxz
imul
loope
insl
mov
xchg
mov
pop
inc
repz
std
ret
rclb
idiv
push
lret
adc
fstpt
popa
mov
jecxz
ja
push
sbb
xor
add
jecxz
sub
clc
mov
pop
in
or
stc
in
sub
ficomps
sbb
stc
cltd
jl
pop
lods
adc
pop
in
adc
push
sbb
in
push
cmc
cmpsl
lods
xchg
inc
mov
test
dec
pop
push
int3
xchg
aad
mov
ss
pushf
xlat
daa
cmp
lods
movsl
xchg
and
stos
mov
pop
das
push
and
sub
xchg
mov
cmp
pop
sbb
jne
repz
lods
fcoml
jb
lods
ss
fisttps
std
mov
shr
leave
pop
ds
cltd
mov
sbb
fcomp
bound
fwait
stc
inc
push
outsl
adc
and
cmp
pop
push
push
popa
xor
mov
iret
jmp
testl
lret
xchg
es
sub
flds
mov
insb
fisttpll
xchg
movsl
es
fwait
dec
ja
jge
jmp
in
cmp
xchg
fldl
cld
mov
cmpsl
enter
decl
cmp
addr16
cmpsb
lds
cmpl
pop
movsl
push
shrl
ret
out
sbb
repz
inc
scas
jae
das
lret
cli
in
rcll
add
rcll
adc
rcl
fs
add
int
xorb
stos
outsb
and
dec
popf
ret
fs
repz
inc
and
or
aas
inc
pop
xor
adc
xor
mov
dec
inc
repz
pop
jno
lods
cmp
or
negb
in
fisubrl
les
sbb
iret
mov
push
cltd
mov
ljmp
bound
sbb
fstpl
sbbl
fmuls
dec
inc
aas
cmp
int3
or
aas
icebp
jp
fcmove
insl
insb
mov
ss
pop
fadd
jb
ja
lea
xor
movsl
push
aaa
shl
sbb
fldt
cmpsb
iret
ss
mov
arpl
movsb
inc
dec
mov
dec
ror
cmpsl
xchg
mov
pop
mov
iret
lret
out
fwait
fwait
fwait
add
xchg
int
lcall
addr16
lahf
jecxz
lret
cli
fmull
test
jp
inc
daa
notb
ljmp
mov
mov
js
in
in
xchg
aaa
adc
cmpb
pop
bnd
cmp
jbe
loope
add
sahf
xchg
mov
push
loopne
xchg
lret
jnp
gs
jl
sti
or
push
dec
jge
shrl
ret
loope
scas
pop
lret
mov
leave
lahf
sbbl
or
sub
lahf
rcr
repz
xor
je
push
lret
lods
icebp
dec
or
ss
mov
jnp
popf
sub
xlat
movsl
jecxz
pop
mov
shll
cld
xchg
pop
leave
cmp
xchg
xchg
shl
int
int
dec
sbb
pcmpgtd
xchg
ret
adc
hlt
outsb
push
call
movsl
loope,pt
idivl
psubw
enter
cltd
negl
mov
in
push
test
mov
xchg
lcall
or
mov
adc
scas
and
popf
push
mov
inc
cmpsl
xchg
repnz
fists
add
fwait
scas
mov
sub
cltd
pop
fs
mov
sub
mov
es
inc
cltd
mov
out
mull
orb
xchg
jns
cli
dec
insl
push
frstor
cmp
jl
xlat
movsb
das
inc
insl
mov
stos
mov
dec
roll
jmp
fwait
int
icebp
xlat
into
mov
lret
jmp
dec
inc
fldcw
sbb
ret
loop
sbb
clc
popa
repnz
mov
xchg
repz
push
notb
pop
nop
out
arpl
enter
ret
insb
jge
fwait
rolb
insb
mov
jmp
in
jno
sub
std
cmp
cmp
mov
popf
iret
push
sub
cmp
neg
pop
iret
ret
leave
jne
add
adc
test
cmp
inc
dec
popa
mov
adc
pop
aad
and
mov
inc
push
cmpl
stc
mov
mov
dec
inc
cmp
inc
scas
pop
int
mov
lds
pop
aam
cmp
xchg
xchg
rorb
shrl
xor
jmp
push
cwtl
sub
cmp
xchg
jecxz
aas
jl
cld
mov
mov
adc
mov
out
and
jbe
pop
mov
cmpsb
dec
lea
push
adc
test
or
push
adcl
icebp
dec
jl
stos
inc
push
adc
push
pop
sub
dec
cmp
shrb
add
in
jl
fpatan
movsb
ss
dec
sbb
mov
sub
dec
es
fisubrs
adc
cmp
mov
arpl
ret
testb
mov
push
cmp
cmp
ja
or
pop
test
inc
or
or
clc
push
sbb
xchg
inc
sub
pop
repz
and
sbb
lds
test
daa
js
mov
lret
popf
pop
cmc
xor
pop
pop
sbb
nop
std
xchg
mov
insb
sar
pop
or
cmpsl
pop
cs
imull
loopne
inc
ret
fnstenv
mov
cli
add
sub
fs
loop
add
push
adc
adc
test
int
test
movsl
scas
aad
sub
push
bnd
pop
sbb
mov
xchg
jnp
fiaddl
mov
jge
mov
xor
lcall
leave
push
jns
sbb
popf
std
xchg
popa
push
xchg
push
rcr
xchg
mov
ret
shr
loope
jl
test
rcrl
xor
xchg
nop
cmpsb
xchg
xchg
mov
lret
dec
scas
daa
shr
fstpl
pop
std
in
xchg
int
sub
push
xchg
jmp
aad
cmc
addr16
mov
mov
test
dec
stos
cmpsb
dec
inc
mov
add
mov
cli
xchg
dec
test
lea
adc
mull
pop
fnstcw
jg
lock
fucomip
test
sub
pop
stos
in
data16
loope
or
push
ret
inc
pop
xor
int
imul
stos
sub
repz
sbb
fstpt
cmpsl
insb
xchg
mov
repz
and
dec
or
sti
arpl
cs
sarl
xor
jle
sub
je
sub
lods
push
iret
rcrb
imul
lods
loope
mov
ret
lret
roll
mov
into
xchg
test
push
rclb
adc
cld
cld
lods
cmc
pop
mov
push
pop
incl
out
repz
mov
movsl
cmp
jmp
lock
mov
mov
mov
xchg
lds
popa
inc
sub
mov
out
mov
mov
cmc
stos
pop
or
push
adc
add
pop
pop
adc
fucomp
fwait
adcl
add
lret
fwait
dec
jae
scas
mov
insb
lock
add
cli
imul
mov
push
jg
or
xchg
shlb
xchg
lahf
adc
fwait
pop
mov
loope
aaa
mov
lods
mul
daa
pop
xchg
mov
xlat
cmp
mov
repnz
cltd
xchg
fiaddl
mov
data16
shl
or
scas
or
stos
les
in
mov
aaa
sbb
ret
pop
sti
and
loop
mov
adc
or
test
fildl
cmp
fcmovu
stos
cltd
movsb
add
test
mov
sar
test
add
inc
sahf
lock
cmc
xchg
popf
mov
mov
hlt
and
movsl
inc
inc
mov
or
mov
flds
push
mov
jl
mov
js
sbb
mov
repnz
dec
mov
push
mov
sbb
out
inc
int3
add
pushf
or
lods
xchg
adc
xor
pop
ret
sbb
sub
rcr
xchg
jno
adc
and
mov
pop
mov
gs
out
inc
je
mov
test
xchg
adc
push
test
ljmp
and
lcall
int
sbb
fnstsw
cmp
inc
out
and
sbb
stos
sbb
mov
cld
cmp
pop
sti
mov
sbb
and
xchg
cmp
shl
loop
inc
push
adc
cltd
xchg
mov
clc
loop
push
and
mov
jbe
dec
out
data16
adc
rclb
sub
in
xchg
lea
out
loope
stos
push
pop
mov
cmp
arpl
add
rcrl
xchg
mov
mov
repz
lret
in
push
ja
out
iret
sbb
rclb
xchg
in
sbb
add
hlt
xor
out
aaa
xchg
mov
jge
xchg
sbb
pop
int3
push
pop
test
jecxz
mov
jecxz
mov
mov
insb
fbstp
push
mov
std
aad
and
push
lret
dec
icebp
cmp
xlat
call
in
jp
push
imul
jne
mov
add
xchg
xchg
xchg
pusha
mov
movsl
mov
sub
jns
dec
ss
mov
mov
mov
xorl
daa
dec
arpl
fdivs
ret
rcl
sub
pop
pop
mov
fs
popf
sbb
mov
cmp
mov
shlb
lret
arpl
pop
push
xor
ds
mov
sti
ret
aaa
fneni(8087
mov
shrl
pop
or
repnz
aas
mov
fstp
ret
push
idiv
sub
sti
mov
outsb
cmp
lret
sbb
lods
pop
js
xchg
mov
iret
dec
pop
lret
push
icebp
xlat
push
inc
fwait
test
jb
mov
decb
pop
jno
neg
repz
mov
scas
shl
push
shlb
ds
subl
mov
mov
nop
push
push
pusha
outsl
jmp
pop
movsb
mov
cmpsl
fcompl
mov
movsb
mov
movsb
stos
rep
aaa
lahf
loope
or
inc
out
ret
push
aaa
cmp
sub
or
into
mov
out
push
es
fwait
or
ret
mov
shll
lret
in
fwait
adc
jl
add
add
hlt
mov
push
dec
stos
push
xchg
xchg
fs
dec
testl
in
jg
lea
mul
int3
sbb
shrb
inc
adc
andl
addl
fcomp
pop
test
in
ljmp
clc
popf
xlat
aas
lods
adc
aaa
push
jno
inc
mov
push
xor
mov
hlt
xlat
jno
idivb
adc
sbbb
iret
sub
out
mov
outsb
jno
out
icebp
and
aad
lahf
mov
stc
fs
aad
inc
add
outsl
add
adc
mov
icebp
aam
mov
fisttpll
out
insb
fsubrs
mov
popa
mov
les
inc
dec
imul
dec
fs
add
fcomip
popf
lcall
ret
scas
ret
aaa
cli
sbb
jne
popf
sub
mov
mov
dec
inc
int
cli
mov
push
test
idivl
xchg
outsb
xor
push
rcr
in
inc
ret
leave
mov
jae
push
daa
rcrl
adcb
lret
adc
out
int
rcrl
scas
repz
dec
in
mov
arpl
jo
and
mov
fstpl
aad
pop
dec
shll
fidivrl
test
adc
repz
mov
jl
sub
push
iret
jge
xchg
fwait
jb
xchg
xchg
mov
sbb
in
test
lahf
mov
movsb
rorb
pusha
push
mov
pushf
fadds
cltd
cmpsb
outsl
dec
xchg
or
in
mov
mov
jecxz
xor
negb
or
xor
fucomip
stos
call
push
mov
cmp
fldt
jecxz
stos
cmpl
or
insb
xchg
and
lret
and
fwait
pushf
xorl
mov
pop
jo
cmpsb
pop
mov
popf
inc
jg
in
mov
mov
enter
mov
pop
cmp
popl
xchg
sub
xchg
cwtl
dec
and
cltd
fsubp
xor
stos
fadds
or
dec
xlat
in
pop
sbb
jno
fs
mov
or
cmpsl
push
xchg
jmp
mov
imul
les
movsb
inc
lret
xor
lahf
out
mov
mov
push
jb
push
sub
jecxz
rolb
mov
std
mov
or
iret
push
pop
insl
push
mov
mov
mov
dec
jns
stos
push
loope
sbb
ljmp
jl
xchg
xchg
lds
out
inc
mov
hlt
cmp
dec
frndint
mov
fdivrl
mov
mov
rcrl
sti
xchg
lret
rcl
js
jle
mov
inc
sub
cmp
mov
in
xor
insb
insl
mov
pop
mov
xor
or
push
cmpsl
lcall
flds
pop
ret
orb
loop
xchg
pop
cmp
aas
jmp
and
xchg
xchg
or
clc
push
fwait
out
pop
pusha
sbb
rcrb
push
mov
js
loope
xorl
popa
sarb
sarl
shll
sub
mov
ret
cmp
rclb
pop
adcl
xchg
pop
stos
out
or
scas
inc
mov
jbe
arpl
mov
stc
add
adcl
jmp
and
ret
mov
rorb
int3
jnp
and
loop
pop
push
sti
lahf
imul
out
adc
pop
stos
movsl
mov
jae
data16
jecxz
push
fadd
mov
jmp
icebp
fiaddl
mov
add
mov
mov
and
mov
mov
mov
fdivl
pop
setae
test
pop
bound
mov
add
jecxz
inc
push
add
jecxz
mov
mov
imul
push
sarl
mov
ret
push
mov
sbb
hlt
ficoml
inc
icebp
lds
pop
pop
xchg
out
xchg
ret
loope
push
pushf
inc
or
jecxz
arpl
dec
lahf
pop
fisubrl
movsb
xor
fistps
ret
rorb
pop
cmp
xchg
repz
ret
xor
rcrb
sub
ljmp
jge
mulb
popf
cmpsl
jbe
fistpl
icebp
xchg
fsts
shlb
sbb
insl
rol
repz
sti
cli
xchg
or
pop
pusha
ja
data16
lret
push
adc
jl
inc
subl
mov
cli
repz
or
add
xchg
mov
repnz
xor
xchg
mov
ficompl
pop
sub
repz
pop
xor
mov
movsl
cwtl
fadd
popf
out
enter
bound
pop
test
mov
test
mov
pop
aaa
iret
sti
popa
cltd
jecxz
int
and
fwait
das
imul
loope
data16
inc
and
lods
rclb
test
scas
mov
xchg
stc
push
rol
xchg
dec
push
xchg
xchg
push
in
xor
cltd
fwait
in
mov
jge
cmpl
pop
inc
stos
leave
push
icebp
sub
jle
adc
ret
mov
ret
scas
mov
cli
pop
pop
imul
repz
add
hlt
jp
sbb
add
leave
mov
fcmovnbe
fidivrl
mov
stc
or
in
daa
sbb
jne
icebp
out
je
subl
dec
rcll
jp
out
in
fstpl
mov
lea
jge
movsl
adc
xchg
mov
or
stc
mov
popf
fwait
mov
xchg
loope
xchg
sub
mov
test
mov
fisttps
rcl
add
dec
loope
mov
lret
xor
int3
stos
pop
or
push
leave
pop
stos
xchg
lret
dec
or
aad
push
adc
gs
call
adc
xor
shl
call
sbb
rorb
stos
mov
popf
lods
mov
pop
stc
mov
insl
iret
jmp
mov
imull
mov
das
inc
and
mulb
lret
sub
es
jno
jp
imul
lea
les
mov
sbb
and
add
ret
sbb
mov
jmp
ljmp
ja
adc
inc
xlat
movsb
cmp
insb
xlat
mov
iret
movsl
sbb
arpl
popf
fsubrl
xchg
jl
mov
test
xchg
cmp
sarb
adc
pop
adc
mov
dec
aad
loope
push
stos
les
popf
jb
fwait
mov
xchg
cmpsl
xchg
ljmp
aas
fistl
push
or
mov
repnz
movsb
or
xor
aad
lahf
pop
or
adc
push
inc
mov
dec
sub
std
aad
int
cltd
push
loopne
jae
push
xchg
fidivrl
repz
sti
sub
xchg
icebp
xor
sarb
jnp
xchg
lret
push
js
add
sbb
je
or
sbb
push
lahf
mov
in
mov
xchg
mov
in
xchg
cld
mov
or
add
xor
mov
jae
jp
fildl
ja
dec
scas
ret
push
leave
pop
movsl
mov
sub
and
pop
fstpl
xor
push
enter
stos
inc
icebp
xor
xlat
lcall
adc
mov
sti
push
loope
adc
sahf
pop
lret
pop
outsb
sar
pop
mov
lods
aad
mov
adc
ret
pushl
divl
pop
scas
inc
cltd
jbe
mov
cmpsb
out
inc
lods
popf
add
incl
lahf
mov
fwait
aam
cld
test
cmp
add
aad
cwtl
jno
stos
sbb
test
mov
cmc
loope
xchg
fists
mov
or
sub
arpl
cmp
loopne
fsubrl
mov
fisubrl
lea
imull
stos
insl
xchg
mov
push
xchg
add
or
inc
pop
jecxz
in
popf
push
mov
xchg
movsb
xor
dec
fisttpl
xor
stos
aad
dec
scas
mov
imul
ret
mov
ror
xchg
decl
aaa
in
pop
jbe
imul
call
fwait
xlat
ret
call
lahf
pop
lods
pop
add
pop
aas
movb
mov
and
dec
jo
lret
out
rclb
idiv
push
shl
divl
int3
cmpb
xlat
adc
lea
mov
mov
jmp
jecxz
mov
fnstenv
pop
arpl
mov
xchg
fwait
jmp
movsl
rol
fnstenv
mov
xchg
cwtl
rolb
mov
pop
imul
pushf
xchg
aaa
test
and
lods
ret
popf
jmp
add
iret
lods
add
int3
cmpsl
fwait
mov
dec
movsb
movsl
loope
jns
mov
sarb
js
mov
test
mov
repz
push
mov
fists
cmc
xchg
push
cmp
inc
imul
hlt
dec
and
mov
jns
push
mov
imull
pop
fstl
fwait
pop
inc
sbb
out
stc
push
rorb
nop
cmp
fwait
cmp
scas
xchg
pop
jnp
cld
xchg
inc
insb
dec
loope
in
add
adc
mov
popf
xchg
or
popf
jmp
sbb
push
xlat
jecxz
pop
cmpsb
push
xchg
cmp
fstpt
lods
fstps
xchg
imul
xchg
mov
pushf
mov
pop
or
lahf
test
push
inc
jg
jecxz
mov
dec
nop
mov
xchg
xchg
rclb
pop
jae
adc
repnz
xchg
add
jmp
mov
test
rcll
xchg
jns
jns
notl
mov
xchg
notl
cmc
xchg
lret
mov
mov
int3
insb
icebp
sub
sbb
iret
xchg
cmc
ds
jno
insb
fwait
xor
dec
sub
pop
fwait
xor
or
inc
jns
mov
mov
jmp
fs
xchg
fistps
pop
sub
iret
add
ljmp
in
sub
add
cmc
push
lock
jno
or
mov
mov
rcll
subb
adc
testl
mov
imull
mov
ja
pop
push
fldcw
inc
insb
cld
shl
inc
inc
andl
dec
adc
dec
loop
mov
popf
mov
inc
shlb
loope
mov
popf
pop
mov
push
or
aad
cmp
pushf
out
adc
lock
outsb
popf
repz
sub
jbe
jecxz
xchg
out
icebp
jnp
push
sti
push
push
arpl
push
xchg
pop
xor
insb
mov
mov
add
and
xor
ret
lds
xchg
lret
lret
jg
repz
inc
xchg
shl
add
popl
cmp
icebp
mov
pop
stc
jecxz
sub
fadds
iret
mov
andl
es
andl
push
dec
mov
loopne
inc
cltd
xchg
xlat
test
adc
and
rcrb
inc
mov
and
inc
add
loop
mov
inc
inc
lock
call
or
dec
xchg
lahf
mov
cmp
cmp
fmuls
pop
or
push
cmp
lcall
aaa
pop
popa
scas
int
leave
fisttpl
bnd
or
and
pop
sub
push
fcmovnu
lods
decb
pop
ss
mov
push
and
shl
pop
xchg
sbb
das
in
cmpsl
pop
lods
stos
stos
or
movsb
test
sub
shll
mov
sar
les
lret
gs
fwait
test
push
jge
int
sbb
pop
shrb
std
xchg
xlat
ds
test
xor
jge
fildl
sbb
clc
out
ss
lods
in
sub
lock
xchg
pop
dec
jmp
adc
inc
sarb
add
adc
movl
cmpsl
xchg
push
in
shlb
shr
call
das
cmc
xchg
addr16
ss
xor
repnz
cmc
icebp
ficoml
pop
pandn
aam
adc
xrelease
dec
push
leave
mov
scas
xorb
test
mov
and
jae
inc
in
pop
push
arpl
mov
test
mov
cs
stos
xchg
mov
pop
call
aaa
dec
adc
fistl
mov
push
out
cli
fs
pop
imul
add
in
xchg
rcr
adc
xchg
sarb
dec
mov
rcl
aam
xor
xchg
ja
adc
rcll
add
adc
xchg
mov
inc
cld
repz
ljmp
rcll
cs
mov
sub
dec
movl
leave
rcl
inc
dec
fildl
push
loop
mov
cmp
rorl
ja
inc
push
xchg
rcrl
scas
cmp
adc
cmpsl
bound
fwait
cli
xchg
loop
cmpsb
imul
inc
sub
sarl
ljmp
pop
std
or
jae
add
jne
mov
popa
addl
jl
mov
scas
jecxz
sub
mov
or
cmc
outsl
lahf
stos
icebp
iret
push
js
out
jns
push
add
or
push
sbb
out
insb
movsb
in
fiaddl
push
or
adc
mov
popa
xchg
pop
cmp
sub
mov
add
rcr
scas
imul
push
rcr
pop
pop
fs
mov
add
sarb
mov
jae
aas
mov
in
sub
shll
fwait
xchg
fs
cmp
fbld
mov
shl
pop
push
lret
dec
sbb
movsb
xor
xor
xchg
push
mov
in
mov
pusha
jmp
rcr
ljmp
sub
fmuls
cs
mov
dec
icebp
scas
cmc
insl
mov
adc
shlb
or
cwtl
shl
lahf
cmp
jnp
shrl
mov
cmp
jle
sarl
and
pop
pop
sbbb
sbb
mov
or
xchg
adc
ss
or
lods
sbb
shrb
sub
out
jecxz
scas
add
cmpsl
negl
cmpl
lret
xor
and
push
inc
jge
aam
mov
inc
xchg
lock
sub
inc
movsl
dec
mov
pusha
push
adc
mov
xor
sub
mov
daa
loopne
fistps
mov
or
adc
cs
in
pusha
rcrb
push
lcall
movsl
lret
int
in
push
mov
push
sub
pop
cmp
cmp
mov
xchg
rcll
jne
inc
mov
sarl
inc
leave
xor
xchg
push
rcrl
lret
movsl
inc
sub
mov
xchg
sub
imul
clc
rcrl
and
aad
adc
push
jae
imul
push
jmp
fidivrs
or
mov
push
idiv
mov
insl
fistpl
jle
cmp
and
arpl
cmpsl
pop
leave
subb
stc
hlt
and
movsl
enter
repz
cli
or
aam
jnp
cld
inc
pushf
pusha
icebp
fwait
xchg
xlat
test
pop
jecxz
ljmp
int3
adc
pushf
lret
daa
out
std
cmp
lcall
aaa
shl
cmpsl
mov
adc
jge
xor
xchg
sub
mov
rcrl
xchg
sbb
js
lds
lahf
aam
sbb
fcoms
ret
push
shll
icebp
pop
lock
jg
cwtl
test
shll
add
fldt
mov
shll
or
fstl
repz
jo
rcrl
out
fdivl
lods
jae
pop
xchg
cmp
test
aaa
arpl
ret
mov
sub
mov
and
xchg
mov
xor
ljmp
cs
mov
decl
int3
and
xchg
inc
into
fs
xor
gs
push
stos
icebp
jp
dec
sub
mov
scas
movsl
jbe
in
ret
daa
add
lret
jmp
rorl
ret
aam
dec
aas
jbe
lret
in
inc
pop
fisubrl
jne
out
into
cmpl
loop
fstps
shr
subb
ja
mov
pusha
or
pop
mov
and
sbb
test
push
je
outsb
ror
shll
rcr
popa
and
xchg
popf
xchg
pop
mov
xchg
aas
out
jge
in
xor
jns
push
fs
pop
jl
sarl
jnp
xchg
sahf
fcomi
adc
mov
fistps
ret
in
jge
xor
xchg
jle
fcomip
rorl
sahf
outsl
call
in
cmc
lock
popf
cmp
xor
lds
fcomp
mov
jo
mov
scas
int3
xchg
dec
xchg
xchg
rolb
inc
fisubl
cmp
das
inc
ljmp
dec
cmpsl
mov
push
sub
cli
mov
mov
mov
rol
pop
push
movsb
adc
mov
ljmp
sarl
fs
orl
xchg
inc
mov
adc
clc
mov
push
in
les
dec
inc
insb
jecxz
push
xor
cmp
add
leave
pop
xchg
push
ret
call
in
addl
pop
cmp
ret
jle
in
ss
add
or
aas
jecxz
add
cmpsl
and
adc
xchg
adc
dec
lods
pop
cwtl
scas
mov
push
mov
out
aas
dec
pop
fcoms
repnz
dec
shll
test
cmp
jns
les
sbb
add
fistps
pop
loopne
dec
shl
sub
jbe
xchg
cmpsl
sahf
and
fwait
mov
mov
lret
ds
jmp
ja
shl
ljmp
mov
repz
cmp
jno
cmc
sbb
loope
and
out
sbb
adc
lock
or
mov
xchg
pop
mov
sub
shr
sarl
fadd
xchg
shll
out
addb
inc
mov
aad
or
int3
xchg
jle
daa
jbe
lods
mov
out
sub
call
dec
pop
add
sub
fcmovbe
loopne
gs
jg
or
xchg
xor
es
cmc
push
dec
lea
lock
mov
pop
imul
lods
std
addb
push
into
mov
out
lret
test
mov
mov
push
pop
scas
inc
in
cmp
or
je
jmp
stos
xchg
push
pop
jb
pop
add
fwait
push
mov
cmp
sbb
movsb
dec
or
push
dec
or
std
fwait
mov
ret
sbb
mov
xchg
xlat
inc
jne
iret
add
test
sbb
xchg
insb
push
xor
aam
push
pushf
pusha
lret
jle
mov
rcrl
push
lods
and
roll
cld
push
fisttpl
aad
stos
mov
jae
inc
xchg
negb
add
and
pop
jnp
or
mov
aam
mov
imul
leave
adc
and
or
jb
sarl
cwtl
fdiv
mov
mov
lea
adcb
je
out
sbb
jp
xlat
sub
popa
inc
jg
mov
mov
addr16
es
pop
fisubrs
imul
lcall
mov
jecxz
xchg
sbb
cltd
inc
icebp
in
xchg
sarl
shl
cmpsl
rcll
imul
popa
or
rcrl
and
notl
outsb
push
notb
sarl
or
mov
adc
shll
dec
cmpsb
fstpt
adc
addb
sbb
fisttpll
les
pop
insl
cmpsb
mov
push
rcrl
xchg
push
mov
adc
fistl
divb
mov
cmp
movsl
dec
sar
pushl
or
mov
sbb
dec
das
or
pop
lds
or
in
dec
cltd
idiv
aam
insl
call
sbb
test
inc
roll
ffreep
sub
dec
push
add
fs
jmp
rorl
clc
dec
cmpsl
enter
push
in
push
jbe
cs
scas
imul
into
stos
cli
sbb
popa
mov
pop
stos
and
sub
sub
pop
add
stc
lret
mov
out
cmc
cli
mov
aaa
pushf
sbb
push
loopne
test
mov
int3
shll
mov
dec
inc
loope
push
inc
test
sub
cs
roll
pop
push
clc
out
aaa
add
fstpt
sub
fwait
dec
decl
shr
pop
jae
mov
add
and
mov
rcrb
repz
in
xchg
std
inc
push
dec
jnp
mov
xor
shrl
push
ss
rcr
pop
add
sbb
push
jnp
inc
xor
mov
rorl
pop
pop
clc
std
push
mov
mov
ror
xchg
roll
test
outsl
pushf
iret
cmp
notb
mov
sarl
sub
mov
mov
dec
mov
inc
enter
stos
pop
scas
gs
lret
das
rcll
mov
roll
or
mov
popa
aam
dec
xchg
ficoms
cmp
sbb
dec
jle
lcall
cmp
shl
adc
loopne
or
in
push
or
shrl
fisttpll
fidivl
not
and
mov
lahf
sbb
ljmp
xchg
push
clc
movsl
sbb
mov
push
push
daa
cmp
push
or
loop
pop
rorl
movsl
in
push
push
mov
mov
pop
iret
aas
mov
lcall
inc
icebp
sbb
mov
es
shrl
add
repnz
cwtl
rol
adc
push
push
aas
and
lods
cmp
fldcw
ljmp
add
repz
aad
jno
sbb
nop
cld
fdivl
or
sbb
fistpll
cmp
xchg
or
in
rorl
fscale
pop
lahf
jo
cmp
sub
addr16
sarl
gs
push
imul
roll
push
mov
stos
push
out
cmpsl
or
jecxz
cli
pop
ret
lcall
stos
shrl
push
pop
testb
mov
add
shll
ror
push
xor
cmpsb
insl
sarl
jbe
pop
push
aad
data16
sbb
inc
scas
pusha
cmp
and
test
rcrl
into
cmpsb
leave
pop
push
sbb
rorl
adc
cmp
out
in
dec
or
xor
aam
enter
aaa
rorb
xchg
loopne
pop
shrl
sti
arpl
sbb
ljmp
push
mov
jo
cmp
rolb
mov
jne
sub
mov
add
es
jg
mov
xchg
imul
sub
sub
dec
sbb
rcr
add
pop
push
dec
scas
lock
test
jae
sub
push
bound
loope
xlat
mov
pop
mov
pop
aas
jno
jle
sbb
jo
mov
rcrl
hlt
and
shll
mov
dec
in
push
es
fpatan
pop
lea
popa
repz
mov
push
lods
repnz
adc
movsl
jne
inc
repz
mov
mov
daa
adc
lcall
jo
jecxz
ret
fcompl
repz
inc
pusha
outsb
roll
clc
into
inc
fnstsw
pop
xchg
or
ror
sbb
xor
fcoms
jbe
pop
mov
mov
jg
xchg
rcrl
mov
and
fsubs
add
sti
sahf
or
inc
sbb
xchg
sbb
out
xlat
mov
fcoml
adc
sub
lock
pop
ljmp
pop
aaa
je
roll
mov
call
dec
xor
mov
add
loop
div
cmp
loope
stc
dec
mov
mov
add
adc
insl
pop
xchg
xor
push
mov
dec
jp
xchg
pop
orl
nop
mov
ljmp
mov
icebp
movntps
push
in
adc
add
or
or
inc
mov
ss
and
das
mov
jb
rcrl
and
sub
rcr
int
pop
jg
sbb
rol
cmp
and
pop
or
aad
or
sub
xchg
or
out
js
pop
stc
shrl
add
shl
dec
mov
inc
dec
jnp
xchg
cltd
in
pop
out
pop
daa
rcll
hlt
push
or
out
pop
mov
out
in
push
imul
jle
jnp
mov
outsl
rcrl
notb
rol
push
rclb
lods
xor
lret
roll
jmp
insb
rcll
xor
or
stos
rcl
cs
mov
or
lock
cmp
lds
jo
xchg
mov
mov
shll
sub
pop
sbb
dec
pusha
sbb
enter
mov
loope
shl
mov
mov
rolb
sub
shl
pushf
jbe
rcll
or
test
adc
cmp
fst
and
xchg
jb
addr16
rolb
ret
cltd
push
repz
mov
stos
ficompl
pop
loopne
push
fdivrp
repz
dec
lods
mov
imul
movsl
xlat
scas
xchg
add
sarl
jb
or
or
pop
mov
jecxz
sub
shr
loopne
enter
add
in
jmp
mov
scas
fwait
ret
mov
sarl
arpl
daa
shll
adc
popf
dec
pop
push
rcrl
pop
movsb
incb
ja
clc
cmpsl
fwait
mov
mov
and
push
cltd
pop
jmp
push
mov
ljmp
insb
sbb
cmpsl
js
shll
scas
adc
xor
int3
push
ds
lods
cmc
arpl
adc
xlat
sub
push
cmp
sub
test
mov
xchg
rol
xchg
or
movsl
popl
dec
sahf
or
stos
mov
and
push
dec
cli
lea
xor
sarl
sub
adc
not
xchg
shll
rorb
iret
aaa
xor
lods
incb
repnz
cmpsb
mov
rcll
test
lret
loopne
les
xchg
sbb
xor
arpl
xchg
imul
push
mov
cmp
clc
dec
nop
xor
in
aam
and
pop
lcall
push
in
jmp
sti
rorl
push
pushf
movsb
int
and
xor
icebp
addl
ficoms
ljmp
xor
dec
jne
out
push
nop
dec
push
add
sbbl
xor
push
jo
mov
cs
fdiv
repnz
in
mov
pop
jnp
jae
cmpsb
insb
test
in
push
jmp
inc
mov
rcrl
out
mov
rcrl
lds
rcll
aas
loop
fscale
mov
mov
das
icebp
inc
imul
xchg
sbb
lea
mov
out
sub
int
or
mov
xchg
add
adc
xor
cltd
or
push
daa
jl
cmp
imul
jecxz
cmp
and
out
icebp
outsb
std
roll
fiaddl
jns
push
shrl
push
stos
mov
push
rorl
test
int
adc
cwtl
mov
push
push
dec
fucomi
hlt
mov
jns
mov
mov
fstl
arpl
push
repz
jo
pop
jle
hlt
sahf
not
push
test
mov
cltd
xor
shll
lcall
aaa
mov
dec
stos
push
mov
push
ret
rcrl
xor
sub
fisubrl
les
rcrl
sub
rcll
loop
push
push
add
shrl
pop
pop
insl
mov
push
int
mov
dec
fwait
loope
call
xorl
addr16
pop
add
jb
outsl
cmpb
vphaddubq
xor
ffreep
cmc
in
mov
out
stc
into
mov
and
push
shll
repnz
push
mov
stc
mov
add
rorl
pop
ljmp
xchg
fisubl
inc
int3
shll
mov
vcomiss
pusha
adc
mov
sub
inc
pop
sbb
sarl
mov
test
sarb
test
or
sarl
push
pop
adc
lret
mov
sub
jmp
in
pop
repz
out
adc
pop
ret
imul
out
push
push
lods
jns
popa
mov
pop
jno
add
mov
push
test
xchg
insb
xor
fsts
xor
pop
jb
fs
repz
xor
mov
mov
mov
aam
js
enter
pop
lahf
ror
dec
loope
inc
add
push
mov
and
mov
pop
sub
or
push
int
shll
dec
xchg
cmp
and
rcll
add
or
xor
cmp
addr16
adc
imul
add
shll
add
cmp
push
dec
or
add
test
sarb
xchg
adc
mov
pop
push
mov
cwtl
add
lcall
jae
add
mov
stos
cld
je
sarl
sbb
xchg
les
popa
mov
popf
mov
xchg
idiv
jl
int
xor
sbb
shll
xlat
and
shr
ficoms
shr
dec
repz
jecxz
movsl
xchg
rorl
cmpsl
cld
loope
mov
pop
cmc
inc
nop
dec
push
adc
sub
mov
or
sarl
mov
push
roll
rcll
sub
ss
xchg
andb
daa
aam
pop
or
jb
adc
stos
fildll
shlb
pop
push
lods
jae
jecxz
or
insl
mov
sub
push
xchg
int
mov
xor
sbb
mov
mov
fstpl
roll
xlat
push
lds
push
mov
mov
jno
pop
inc
stos
cmpsb
fidivrs
adc
movsb
xchg
mov
imull
lods
lret
shll
in
rcrb
loope
shll
sti
sbb
cli
rcrl
sahf
and
std
es
aam
aad
lret
mov
in
rcr
in
sub
xlat
inc
popf
pop
xchg
sbb
nop
enter
add
frstor
fistl
insl
push
lret
cmp
sub
dec
popa
pop
push
sbb
fsubl
sbb
push
and
sarl
pop
push
cmc
or
mov
jns
mov
outsl
jg
fsub
add
push
xor
sti
imul
stc
push
ljmp
and
rorl
lea
shll
and
pusha
repz
inc
sub
mov
mov
call
fsubrs
cmp
clc
push
fwait
jge
stos
jo
cmp
sarl
loope
pop
mov
adc
or
shrl
es
inc
bound
inc
push
mov
sbb
scas
ret
sbb
pushf
ficoml
fcom
mov
daa
shl
jo
bound
ficoml
mov
dec
jecxz
jne
sbb
in
mov
pop
test
push
jmp
cmpsl
sbb
rcll
mov
jo
inc
out
repz
sbb
pop
bound
fcom
mov
stos
std
inc
lods
or
fucomp
ds
push
shlb
lods
rolw
jle
fwait
shll
fcoml
aam
xchg
mov
int3
fildll
insl
shll
outsl
call
fisttpll
xchg
xor
inc
or
push
lods
add
xchg
rorl
fildl
dec
mov
dec
aam
push
mov
mov
pop
rcr
pop
push
xchg
into
push
pop
push
outsl
inc
mov
rcrb
inc
shrl
scas
jb
jae
stc
push
sbb
and
inc
pop
jmp
jb
pop
int3
mov
push
dec
call
cmp
loope
shrl
and
jg
out
mov
divb
xchg
imul
or
arpl
jo
addl
rcl
xchg
rclb
push
aad
arpl
int3
lods
rcll
xchg
mov
lea
shll
data16
idivl
ret
xor
ror
cmpsb
cld
inc
fisttpll
in
pop
push
imul
insb
loope
or
adc
imul
mov
rol
pop
or
xchg
xchg
das
inc
pop
dec
xor
jae
mov
scas
pavgw
jno
pop
mov
or
inc
test
adc
gs
jg
das
leave
daa
rcr
mov
mov
rcll
xchg
sti
adc
mov
push
shll
icebp
pushf
int
shlb
dec
insb
lods
pop
scas
shll
pop
and
add
loopne
repz
cld
jae
mov
add
ficoml
dec
adc
and
popa
add
and
cs
pop
mov
dec
xchg
mov
lods
cmp
pop
rorl
pop
lret
aas
cwtl
ljmp
mov
in
jle
pop
ds
bnd
mov
pop
push
dec
fwait
cmp
xchg
dec
and
xchg
les
lahf
adc
jl
mov
pop
shll
lea
xor
nop
inc
adcl
and
jmpw
add
ja
xor
ljmp
icebp
mov
sbb
cwtl
and
shrl
fldcw
sub
pop
jo
xchg
adc
repz
out
rcl
sub
lret
cmp
push
mov
psrlq
dec
jbe
sar
ss
or
push
imul
rcrl
lods
in
xor
jmp
mov
lods
test
das
shlb
xchg
icebp
shlb
rcll
mov
inc
lret
loopne
mov
pop
mov
cld
sti
out
out
push
push
adc
cmpsl
movsb
rcrl
xor
mov
jns
sbb
in
adc
jo
cmp
xor
sub
xchg
inc
push
and
pop
adc
imul
es
int
imul
sbb
roll
movsb
or
push
push
shrl
xchg
cmp
scas
ljmp
daa
xchg
frstor
push
nop
dec
inc
pop
push
add
adc
into
xorl
push
outsb
int3
xchg
sub
iret
clc
rcll
orl
push
mov
or
fs
daa
jae
repz
loope
fsubl
call
clc
or
mov
jae
aam
add
aad
push
cli
and
insb
jl
mov
imul
mov
ficoms
arpl
rorl
cmpsb
fdivs
adc
inc
sbb
xlat
cmp
dec
pop
mov
adc
cld
jnp
jbe
mov
jne
dec
arpl
add
and
insl
and
aad
inc
outsb
mov
add
fmulp
fldl
js
mov
xor
sbb
stc
xchg
add
shl
cli
push
inc
jg
mov
shll
dec
and
rcr
jb
inc
jns
inc
jl
test
cltd
adc
frstor
jle
sbb
test
jns
push
mov
inc
push
out
test
lock
roll
sbb
sub
aaa
mov
cmp
or
mov
enter
xchg
push
rorl
popa
push
push
shll
in
adc
rorl
lret
fistpll
fiaddl
popa
jp
rclb
movsl
orl
test
jae
sarb
das
aam
fwait
and
jge
dec
in
shl
adc
rorl
xchg
inc
cmp
mov
sub
adcb
stc
ret
push
shll
shlb
sbb
imul
insl
dec
add
imul
stos
aam
xor
pop
repz
orl
sbb
or
xchg
shll
aaa
mov
dec
cltd
shld
xchg
rcrl
mov
call
push
mov
pop
adc
test
fnstcw
dec
mov
inc
sbbl
sub
push
xor
ret
pop
fcmovnbe
xor
dec
dec
icebp
roll
or
mov
push
pop
lret
mov
mov
insb
push
push
push
nop
xchg
pop
adc
fwait
add
pushf
arpl
add
xchg
shrl
xor
xchg
movsl
mov
frstor
cmp
mov
std
ljmp
cmp
mov
into
mov
notl
sbb
mov
sub
roll
gs
pop
rorl
int
cmc
aam
clc
rorl
or
mov
push
xchg
cmp
out
scas
loopne
rcr
int3
push
and
sarl
popa
ficompl
test
sub
xchg
mov
lods
pop
push
push
push
cs
push
in
add
addr16
mov
dec
cmp
loope
rcrl
notb
cwtl
dec
push
js
sub
push
jae
mov
push
mov
xchg
je
dec
bound
mov
mov
out
hlt
dec
rcrl
pop
pop
idiv
xor
shll
mov
add
adc
pop
stos
xchg
and
shll
jmp
stos
fistpll
dec
rcll
inc
repz
mov
lahf
cld
xchg
sbb
shll
cmc
sub
or
rorl
sub
mov
dec
sahf
cmp
test
pop
add
pop
inc
shrl
cmovg
adc
jecxz
dec
mov
jae
or
cmp
pop
mov
nop
in
sbb
push
jo
mov
and
mov
mov
push
shl
xorb
jmp
and
jb
cmp
inc
mov
mov
push
and
flds
fcoms
fisttpll
sbb
rol
enter
iret
clc
cmpsb
rcll
sbb
lret
jecxz
scas
sar
add
cmp
rcll
mov
xchg
jl
mov
push
rclb
addb
or
sbb
mov
mov
add
jno
sarl
hlt
inc
insl
fidivrs
rcl
loopne
repz
xor
add
push
in
mov
lret
test
sub
xchg
nop
push
sbb
bound
xchg
test
fmull
out
cs
inc
rcl
adc
jae
add
idivb
or
push
pushl
daa
push
add
test
fcmovnbe
mov
xor
jne
loop
mov
and
sbb
rorl
outsl
iret
test
hlt
dec
push
push
mov
repnz
or
mov
cmp
rcl
mov
pop
cmc
mov
leave
aad
cltd
fcoms
stc
daa
icebp
xchg
cli
lcall
cmp
xchg
mov
leave
push
in
inc
aad
outsb
mov
in
or
inc
dec
mov
push
js
mov
fwait
out
sbb
pop
shll
push
add
icebp
jge
mov
jg
inc
xor
xor
pop
rcr
fcompl
jns
shr
push
test
xchg
push
daa
lcall
mov
sbb
jo
mov
out
shll
push
and
xchg
lock
test
aad
sub
mov
lret
stos
shl
stos
or
push
jb
mov
pop
cmp
cs
push
sarl
mov
mov
pop
popa
rcll
pop
loop
jmp
stos
add
fistps
aad
shrl
cmp
call
jp
push
ret
andl
mov
or
mov
or
rorl
mov
rcrl
in
inc
mov
push
push
inc
mov
test
inc
and
adcb
jb
shrb
sub
sbb
sar
cmp
inc
pop
ret
jnp
adc
pop
sub
int3
cs
fcom
insl
and
pop
push
out
out
dec
and
out
stos
sar
in
fcoms
dec
mov
dec
mov
pop
std
pop
xchg
sarl
adc
scas
adc
mov
mov
loop
in
pop
add
dec
mov
out
cmpsl
cmp
rcll
dec
dec
in
std
mov
int3
test
mov
ficoml
pop
cld
push
mov
cltd
sahf
insb
or
xchg
mov
loop
jle
rcl
ja
pop
pop
xor
xor
sbb
or
mov
rcll
lea
sarl
jae
adc
mov
xor
adc
stos
mov
in
sarl
inc
lret
iret
adc
std
shll
mov
add
and
dec
inc
push
cwtl
daa
scas
pop
mov
stos
or
jns
into
add
loopne
pushf
dec
push
sub
call
sbb
cmpsb
mov
test
mov
pop
test
shrl
pushf
daa
shll
fucomp
push
dec
and
cmp
shll
cwtl
scas
push
sbb
mov
scas
leave
aas
adc
pop
repnz
rcrl
insl
dec
imul
xor
or
sub
pop
jmp
and
out
cmp
push
cmpsl
in
mov
adc
fcompl
jge
jmp
pusha
rcll
mov
and
cmp
jno
shr
xor
jne
repnz
fnstcw
cmc
lahf
push
cli
adc
fwait
xchg
lods
out
rorl
xor
ja
movsb
add
mov
sarl
scas
adc
rol
sub
bts
pushf
inc
fmuls
cmp
les
mov
lds
adc
stc
shrl
repnz
and
roll
cmp
push
arpl
gs
shlb
mov
xor
add
inc
fsubrl
fwait
pop
rcl
ljmp
pop
shll
out
push
cmc
push
js
test
arpl
xchg
push
cmpsb
push
xor
mov
cltd
scas
adc
inc
clc
in
ja
mov
add
pop
and
std
rcr
mov
jbe,pt
ret
push
sbb
movsb
adc
mov
dec
std
stos
cld
pusha
cmp
push
mov
adc
rolb
out
push
adc
nop
dec
sbb
add
mov
leave
mov
mov
ss
sub
add
inc
jnp
sarb
fdivrl
mov
aad
push
add
push
inc
in
mov
shrl
inc
pop
ljmp
jle
clc
rcrl
mov
int
sbb
test
fcom
loop
lcall
mov
mov
dec
int3
hlt
ficoms
or
or
shl
ds
dec
add
xlat
cmp
inc
fnsave
movsl
dec
push
stos
loopne
xchg
sub
mov
add
cmp
xor
and
cmp
int
in
roll
lahf
xchg
cmp
xchg
lea
rcrl
mov
inc
push
rcll
cwtl
icebp
out
pop
jg
rol
cs
xor
xor
shll
fldt
cmp
add
pop
scas
test
jecxz
or
test
fisttpll
mov
pop
sarl
out
cmp
insl
jo
sarl
out
test
out
lock
or
repnz
mov
adc
aas
stos
jns
mov
pop
mov
repz
fiaddl
mov
fcoms
int
cmp
push
push
pop
cmpsl
xchg
mov
xchg
push
jmp
pop
insl
mov
into
shr
mov
jnp
roll
cmc
lret
ret
lods
adc
call
dec
lcall
fbstp
rolb
ja
adc
mov
inc
cmp
sub
stos
and
adcb
mov
rol
pop
movsb
mov
xchg
leave
pop
sbb
out
ret
movsl
ror
push
add
push
adc
lds
subb
scas
adc
pop
adc
sub
jge
dec
mov
dec
lret
shll
ret
pop
push
xchg
in
pop
ret
sbb
adc
rorl
push
xor
pop
pop
push
sbb
or
ret
inc
repz
xchg
pop
jp
adc
sahf
cld
pop
ja
push
dec
js
das
add
push
sub
shlb
dec
inc
and
push
mov
aaa
es
mov
jae
mov
jo
movsl
adc
pop
repz
pushf
roll
shrl
aam
fidivl
lcall
mov
mov
out
mov
xchg
enter
pop
mov
jmp
aas
xchg
mov
jge
rclb
sbb
test
inc
cwtl
mov
push
aas
rcll
cld
arpl
adc
lahf
leave
scas
mov
repnz
sti
sub
push
add
aaa
sbb
push
push
ror
cmpsl
fnstenv
mov
dec
rcl
cmp
or
rcr
mov
mov
outsl
out
bound
xchg
pushf
movsl
xchg
cli
mov
rol
xchg
push
cmp
mov
dec
mov
in
cwtl
push
shl
xchg
sub
aaa
mov
fldl
aas
sbb
test
je
sbbb
cmp
xchg
mov
add
xor
cld
incb
xor
mov
andb
mov
pushf
mov
jmp
ja
cmp
ljmp
adc
movsb
shrl
pop
cld
stos
shl
inc
ds
outsb
jnp
adc
stos
fisttpll
xchg
mov
lahf
pop
jae
sub
test
hlt
leave
cmp
les
or
pushf
outsb
sub
roll
mov
out
or
repz
xchg
addl
subl
mov
scas
ja
sub
add
out
cli
shll
shlb
xchg
sbb
aas
repz
pop
shr
jbe
pop
lcall
orl
mov
cmc
shll
mov
sbb
xchg
or
dec
adc
les
sti
sbb
aad
scas
or
sbbl
rcrb
inc
push
inc
mov
lods
xchg
mov
and
movsb
cmpsl
fwait
sbb
mov
jg
std
push
cmp
cmp
iret
mov
add
ret
jne
jp
push
nop
repnz
cwtl
add
bound
rcll
pushf
fcmove
jmp
fwait
iret
xor
cmp
push
add
outsl
push
rcrl
jg
sbb
aad
adc
jae
mov
cmp
push
dec
fistps
mov
mov
scas
sbbb
lret
andb
dec
shr
loop
add
and
mov
cmp
push
lcall
push
test
std
lahf
mov
inc
out
test
popf
pusha
ror
dec
enter
add
daa
mov
aam
dec
lods
cltd
lods
pop
inc
je
rcll
cmp
aad
fucom
mov
cmp
lret
push
xor
xchg
cmp
imul
shl
xchg
sbb
xor
loopne
sbb
fadds
andb
push
mov
jge
mov
fcmovnbe
repz
jns
rcrl
push
cmpl
mov
repz
out
roll
lret
lock
or
bound
shll
xchg
aaa
pop
jecxz
stos
xchg
in
mov
mov
push
outsl
ret
xor
dec
inc
xorl
jle
rcrl
mov
das
inc
push
xchg
mov
or
push
fists
test
repz
sub
pop
rcl
cmp
pop
aam
lods
rcrl
mov
scas
shrl
mov
jmp
out
adc
jg
addr16
fdivr
dec
jbe
rorl
imul
sub
inc
mov
rorl
scas
and
push
dec
or
stc
or
mov
sar
lods
xchg
gs
pop
ret
adc
enter
movsl
cmp
push
repnz
fistl
pusha
push
out
out
pop
mov
cli
out
loopne
outsb
pop
shl
push
test
push
dec
push
nop
imul
mov
mov
out
adc
rorl
mov
fimull
in
sub
mov
jb
mov
jo
pop
sahf
pop
mov
icebp
adcb
inc
hlt
xor
roll
cli
add
repz
rcll
sbb
xchg
insb
mov
xor
aad
mul
dec
iret
pop
imul
xor
mov
pusha
mov
jns
jnp
enter
pop
roll
cmp
sub
xor
rcr
fnsave
cmpsl
push
push
lock
movsb
sub
mov
in
clc
push
mov
sub
dec
dec
ds
jo
push
xchg
dec
jmp
xchg
and
loopne
cmc
pop
sub
push
jecxz
push
fimull
test
jl
lcall
shll
xchg
cs
into
scas
movsl
xchg
lods
mov
shlb
cmpsl
and
or
pop
dec
cltd
mov
mov
mov
fnstenv
shll
xor
mov
shr
fwait
jae
stos
cmp
sarl
les
imul
popf
dec
push
sub
or
les
shll
inc
cmpsl
ljmp
pop
mov
subb
jmp
sarl
xchg
mov
out
inc
repz
mov
jno
mov
das
cld
sbb
jo
mov
sbb
ljmp
jmp
jne
xlat
lahf
pop
loope
jbe
mov
loop
mov
shl
sti
psrlq
mov
jno
sarl
xchg
or
lea
int
shll
sub
call
in
or
cmpsb
xor
adc
sub
pop
mov
mov
inc
aad
jecxz
mov
icebp
mov
roll
inc
in
mov
push
roll
test
lahf
shlb
sbb
push
jecxz
cmp
push
xor
jg
cmpsl
mov
stos
pop
dec
jge
pop
ror
xchg
bound
mov
les
dec
jbe
push
push
or
and
lock
or
sarl
adc
es
lret
jg
mov
fdivl
scas
sarl
add
or
imul
stc
and
push
shll
lret
jmp
inc
pop
jmp
shrl
sahf
lock
rorl
aad
jae
jns
dec
sub
lret
or
push
ljmp
mov
jmp
ds
test
mov
into
movsl
into
shl
nop
and
and
mov
adc
mov
push
pop
hlt
mov
inc
rorb
popf
nop
fucomp
inc
push
shll
jb
xlat
aaa
rorl
inc
sbb
push
mov
adc
test
cltd
push
rorl
lcall
test
jecxz
shrb
aad
lahf
dec
mov
imul
push
sub
cmpb
xchg
inc
shll
lret
sbb
fdivs
inc
fisubrl
xlat
cmpsl
icebp
in
shrl
daa
jg
pop
ja
adc
xchg
xor
xor
repz
cltd
loop
icebp
sub
mov
pop
lahf
aaa
fs
mov
push
aad
shl
lret
inc
loopne
fadd
pop
shl
andb
ret
test
fwait
inc
xor
sarl
fcom
xor
xor
xorb
movsb
jnp
jle
ds
lret
push
jae
jne
shll
xchg
mov
mov
roll
test
call
jp
movb
adc
push
ffree
push
rcl
lret
test
jmp
iret
sarl
dec
ret
inc
jge
outsl
push
roll
in
test
shr
imul
shl
inc
ds
fidivl
and
xchg
xor
push
stc
xchg
frstor
adc
scas
stos
sbb
mov
icebp
sub
push
push
rcl
push
loopne
rcll
push
dec
and
push
iret
out
push
mov
out
add
push
jge
sahf
shrl
dec
mov
and
xchg
jno
push
fsts
ljmp
add
insl
sub
filds
jnp
rol
call
jl
jae
shll
xlat
xor
shll
push
inc
sub
jmp
test
aam
xor
jmp
iret
pop
insb
xchg
jnp
xchg
insl
jns
adc
sub
pushf
and
movsl
stos
xchg
dec
fwait
push
shll
nop
leave
push
mov
lcall
mov
shrl
test
pop
outsl
ljmp
das
xor
mov
lahf
fs
inc
and
push
ja
inc
sub
fwait
push
mov
sub
pop
cmp
aas
iret
push
call
scas
repnz
test
rorl
popa
movl
push
pop
inc
inc
insb
je
sub
fcmovbe
bound
jl
push
mov
popa
mov
pop
xor
cs
out
rcll
fwait
scas
sarl
lods
xchg
xor
sti
mov
rcrl
jle
jae
shll
inc
sbb
mov
pop
std
cld
lcall
popa
je
jl
rcl
fidivrs
cli
sub
out
das
ret
popf
mov
imul
mov
roll
and
inc
in
insb
roll
mov
loop
push
lret
in
ljmp
scas
push
repz
sbb
dec
add
nop
ds
xchg
push
cmc
mov
popf
adc
loopne
lock
or
loop
lahf
pop
dec
adc
cs
daa
cmpsb
cmp
div
in
xor
mov
xchg
jnp
or
jbe
or
scas
lods
xchg
out
jmp
and
jb
mov
xor
je
mov
xchg
mov
mull
mov
gs
xchg
rol
sti
jp
xor
fldcw
push
push
push
mov
sbb
andl
inc
lret
mov
jg
incl
arpl
sbb
cmpsb
mov
repz
lds
scas
int3
fbstp
fprem
lcall
cltd
xchg
loopne
pusha
call
shlb
push
pop
lods
mov
sti
or
push
sbb
addr16
movsb
test
push
orb
std
sub
push
xchg
sbb
push
adc
stos
sub
jne
nop
scas
repz
addr16
rcrl
inc
push
mov
dec
ror
fiadds
sbb
inc
push
push
fmull
lods
fwait
push
or
aad
shll
jae
sbb
testb
imul
lods
adc
or
ljmp
dec
mov
add
push
loop
jge
and
mov
rclb
outsb
stc
shl
xor
push
push
xchg
shlb
lea
mov
std
shl
dec
pusha
into
cmp
mov
insl
roll
sub
adc
out
cltd
repnz
mov
rcrl
test
bound
cmp
rep
inc
imul
push
addr16
xchg
popf
push
jne
cmpsl
fistps
fadds
shrl
mov
dec
icebp
pop
xchg
in
jg
rorb
roll
xor
adc
xchg
rorl
mov
xchg
xchg
mov
int
out
mov
xor
shrb
push
adc
into
bound
inc
negl
aaa
push
push
scas
shrl
mov
dec
out
in
out
call
mov
add
shll
xchg
adc
repz
movsl
dec
xchg
mov
popa
mov
out
call
adc
fisubl
rol
fdivl
add
pop
iret
jmp
shll
dec
and
push
std
shll
push
in
aas
or
lock
into
ja
add
xchg
mov
insb
xchg
push
and
repz
pop
popf
int
sarl
pop
in
hlt
cltd
push
sbb
adc
ret
or
or
int3
rcl
xchg
dec
dec
cmp
lds
mov
out
shll
pop
cmc
cwtl
sub
shll
mov
mov
dec
sbb
rcl
movsl
shl
jns
lret
jle
xchg
call
popa
add
mov
mov
pop
cmpsl
push
ja
mov
pushf
xor
mov
push
inc
mov
out
shll
shl
out
into
inc
aam
mov
mov
cmpsl
out
xor
or
fcoml
xchg
lahf
dec
cs
adc
cltd
jle
pusha
jp
pop
xor
fisttpl
shl
xor
mov
mov
dec
aam
push
test
rorb
cmc
push
enter
pop
xor
ds
pop
outsl
jecxz
in
adc
aad
xor
repz
sub
test
shll
std
mov
int
lock
dec
pop
imul
xchg
and
test
jae
outsb
das
add
cli
sar
sub
dec
flds
roll
fcmove
popf
int3
jl
rcll
sbb
cmp
lods
mov
adc
in
and
pop
add
mov
inc
sarl
dec
push
add
push
sub
pop
fnstsw
cwtl
rcll
mov
jns
mov
mov
aas
jge
in
repnz
mov
adc
cmp
test
les
cmp
popf
sbb
shlb
icebp
int3
in
sub
jae
pop
cmpsl
out
push
rcll
rorb
and
aas
jmp
ja
mov
ljmp
test
pushf
jno
rorb
pop
jns
into
out
mov
adc
test
xchg
dec
ror
enter
fistpl
sub
mov
mov
into
sar
pop
push
lgs
mov
inc
lcall
rorl
mul
mov
jne
mov
sub
aam
pushf
mov
mov
popa
and
pop
mull
sarb
sahf
adc
shrl
roll
jne
mov
pop
xchg
hlt
xchg
inc
dec
xchg
rorl
xlat
loop
test
arpl
test
dec
stos
add
xlat
xchg
scas
outsl
loope
cmp
clc
jns
mov
jne
imul
and
rcl
loop
popa
push
call
rcrl
sbb
push
jmp
repz
std
popf
jg
sarl
push
idivl
jnp
push
adc
dec
in
add
push
jne
sub
nop
jbe
inc
add
loop
leave
lods
lret
jae
mov
insl
jmp
sub
xor
and
fsub
and
mov
mov
lret
test
pop
neg
mov
int3
test
shl
xchg
or
rorl
and
sbb
mov
sti
mov
test
fidivl
mov
cmp
imul
sub
push
push
add
lea
mov
icebp
out
adc
jmp
dec
and
xlat
or
pop
inc
jl
inc
mov
adc
stc
cltd
je
mov
jno
pop
xchg
jbe
roll
sbb
mov
mov
mov
rcl
ret
in
orb
adc
mov
js
push
xor
add
pop
rcr
mov
and
icebp
cltd
popa
pop
jg
sbb
shll
gs
insb
fcmovnbe
lahf
inc
jns
pushf
faddl
imul
frstor
imul
mov
jo
cmp
shrb
lock
ljmp
in
pop
test
popa
les
cltd
jae
mov
sbb
fcom
mov
mov
push
shlb
push
fs
and
dec
shll
push
add
imull
shrl
jne
sarl
fidivl
dec
imul
or
jl
add
repz
jmp
add
fst
dec
stos
inc
jbe
lods
sbb
in
shll
cwtl
imul
xor
inc
aas
cmpsl
mov
shll
cltd
enter
push
and
stc
ret
out
mov
xchg
cli
test
dec
hlt
testb
rcll
add
push
loop
dec
mov
pushf
add
sub
outsl
movsb
push
pop
push
pop
push
inc
out
repz
lret
jge
in
push
mov
mov
xor
sub
movsb
rcrl
sbb
mov
sub
rcrb
inc
in
shrl
loope
inc
adc
imul
inc
shll
sahf
mov
rcl
and
lock
shlb
roll
decb
pop
lods
loope
mov
jmp
mov
mov
or
test
dec
dec
pop
lods
rol
mov
mov
jl
mov
ret
out
aam
outsb
mov
repz
js
cmp
adc
orl
fisttpll
xchg
mov
aas
aam
push
lret
sub
or
dec
dec
fidivs
dec
mov
cmp
scas
xchg
and
rcll
mov
cmp
push
jo
push
fsts
stc
addr16
ljmp
jl
shrb
int3
popa
mov
rcl
cs
and
movsl
sub
inc
jnp
call
out
rorl
rcrl
pusha
cmpsl
cwtl
xor
shrl
xor
inc
mov
cmp
cmp
shll
adc
sarl
mov
insl
inc
shll
cmpsl
test
or
pop
inc
jmp
mov
fsubs
sbb
loopne
xchg
xchg
cmp
shll
sbb
ljmp
sub
movsb
jo
aam
cld
in
dec
sarl
push
jge
lahf
into
and
mov
lahf
sbb
shr
test
stc
jbe
adc
mov
and
push
sub
mov
imul
stos
sub
rorl
pop
repz
xchg
lret
test
mov
rcll
add
ds
and
sbb
rclb
cmp
mov
pop
mov
stos
adc
ret
adc
adc
mov
hlt
mov
or
cmp
aas
push
cmpsb
mov
fistps
xchg
mov
cmpsb
cmp
clc
mov
fisttpll
jb
adcl
shr
pop
mov
js
push
cmp
shll
addr16
rcrl
mov
jmp
pop
rcrl
cmp
adc
pop
rcll
shrl
or
push
aam
nop
hlt
mov
add
sbb
leave
push
jo
or
rcr
lret
push
sub
mov
or
lahf
rcrl
push
pop
out
aam
loopne
jae
and
notb
roll
pop
imul
cmp
or
scas
movsl
out
rorl
clc
mov
push
pop
cmp
loop
jmp
and
sti
shl
mov
add
cmpsb
hlt
rcll
mov
push
out
xlat
shl
add
or
sbb
sarl
xlat
mov
roll
lock
mov
adc
lock
rcl
scas
lcall
xchg
shll
repz
in
push
and
outsb
dec
adc
xchg
in
mov
inc
push
mov
xchg
mov
clc
in
shll
push
ret
sbb
roll
cs
inc
mov
fsubp
jg
mov
mov
aas
or
data16
xchg
rorl
ror
sub
jecxz
xor
lcall
iret
mov
rcll
icebp
pop
push
shll
div
add
dec
test
push
sub
stos
ret
push
sub
jp
pusha
rol
xchg
jo
stos
mov
push
mov
add
out
push
dec
push
dec
aad
push
mov
shrl
push
mov
sarl
and
jmp
dec
cmp
hlt
ret
addb
imull
dec
imul
ljmp
inc
aam
cmp
mov
into
add
cmp
inc
mov
sbb
sbbb
shll
adc
dec
pop
in
cmpsb
cli
xor
sbb
rcrl
ret
sub
sbb
xor
or
mov
std
lds
mov
inc
pop
mov
out
cli
test
jge
subl
outsl
push
in
adc
rcl
xchg
popf
pop
pushf
push
push
xchg
in
sbb
mov
shll
pop
call
rcll
inc
in
popa
add
jnp
mov
cmp
repz
jecxz
or
shl
jb
lods
stos
pop
roll
dec
jle
in
push
stos
push
adc
mov
push
insb
std
push
fwait
gs
mov
cmp
mov
inc
test
mov
xor
repz
scas
lahf
sub
add
push
xor
enter
pop
jl
in
loope
mov
das
movsl
rcll
fs
roll
pop
sub
sar
cmp
roll
mov
or
shll
insb
in
xchg
push
bound
ljmp
rcll
push
fxch
or
lahf
or
pusha
mov
jl
rcll
jg
das
testl
lods
fiaddl
cs
std
movsb
rcll
arpl
daa
subl
iret
push
lods
sub
mov
xchg
xchg
dec
sub
or
daa
int
bound
fwait
add
inc
inc
in
pop
ffree
jle
rcr
cwtl
popf
and
pop
out
shl
lret
push
cmp
dec
sarl
cmpsl
cld
insb
adc
mov
into
jg
adc
adc
jl
xchg
int3
fdivr
xchg
dec
mov
lcall
cld
pop
jne
rcl
lahf
and
rep
test
cmp
rol
xchg
pop
shlb
ja
fsubl
lahf
sti
ror
sub
shl
dec
sub
mov
in
push
bswap
and
mov
inc
sti
mov
stos
xchg
fbld
pop
shll
ss
pop
sbb
sub
ret
repnz
mov
add
mov
cmp
leave
sarb
cld
dec
xor
xlat
inc
cmpsl
popa
mov
pop
mov
push
xor
fs
shll
into
mov
rcll
test
jns
arpl
mov
cmpsb
inc
imul
scas
and
idivl
clc
cmp
jle
adc
pop
dec
subl
push
leave
jmp
mov
sbb
scas
movsb
cmp
push
shrl
jnp
stos
mov
cmp
add
jg
or
lock
push
iret
xchg
mov
add
push
out
lcall
lret
jnp
sub
js
sar
ficompl
movsl
mov
lahf
rcrl
icebp
add
shll
jmp
jae
xchg
add
lods
lock
mov
pop
cmp
or
mov
mov
mov
stos
mov
outsl
mov
pop
loop
mov
in
fisttps
imul
aas
int3
xchg
shll
or
sub
push
pusha
dec
push
sbb
or
iret
das
inc
xchg
and
mov
rcrl
scas
cltd
add
jmp
xor
jne
add
push
and
shll
in
movsl
sahf
popa
inc
mov
sbbb
jg
dec
fstp
sbb
arpl
in
mov
icebp
xchg
jg
add
popf
mov
js
xor
mov
xchg
xchg
jns
dec
test
je
mov
mov
push
sbb
inc
ja
mov
sub
mov
iret
push
mov
shl
and
pop
cmp
test
shl
xor
or
or
fnstenv
push
pop
jno
mov
lret
test
mov
lds
les
rcl
inc
and
push
shl
stos
xor
in
fidivrs
push
rol
orl
out
jge
cmp
repnz
sahf
divl
iret
jg
dec
int
pop
rcll
pop
jbe
mov
or
imul
adc
sarl
cld
xor
and
sbbb
add
stc
mov
pop
ljmp
sbb
mov
neg
add
int3
adc
adc
lds
mov
aad
lahf
sub
inc
in
push
lret
adc
inc
xor
mov
dec
aad
and
push
outsw
rcrl
sub
sbb
mov
jge
dec
fwait
push
pop
or
push
push
xchg
call
rcll
ds
pop
sahf
fwait
push
push
xchg
stos
jmp
sbb
sarb
xchg
dec
inc
dec
xchg
add
cmpsb
shll
mov
push
js
xchg
daa
popa
pop
adc
scas
jae
outsl
sarl
pop
std
adc
pushl
mov
xchg
inc
shrb
scas
or
jecxz
dec
cltd
aam
sti
enter
pop
test
shl
mov
stc
les
sbb
mov
sub
fstps
das
int
popa
jbe
dec
aam
and
mov
mov
add
loopne
lds
popa
dec
icebp
push
fsts
dec
addr16
xchg
mov
xchg
jl
pop
shll
dec
icebp
adc
pop
dec
sar
add
push
std
shl
jle
scas
inc
dec
iret
int
and
pop
sbb
push
and
std
shlb
rcl
sti
push
bnd
shl
jnp
xchg
pop
lcall
xchg
test
mov
shl
xchg
jge
dec
xor
inc
ficoml
mov
xchg
stc
and
jg
ja
push
cmc
outsb
ljmp
mov
fwait
push
lods
push
jl
jecxz
adc
xor
sub
adc
pop
fistl
xlat
xor
test
rorl
test
xchg
cmp
cmp
mov
rorl
sub
stc
incl
push
roll
cltd
mov
rcll
pop
je
lods
and
in
sub
int
mov
out
add
cmp
test
mov
out
sub
xor
xor
inc
cmp
inc
mov
pop
push
pop
mov
ds
cmpsl
hlt
jmp
rorl
leave
push
roll
push
mov
xchg
sbb
out
shrl
into
mov
sar
pushf
aas
imul
xchg
lcall
push
rcrb
inc
outsl
inc
sbb
or
jmp
arpl
jecxz
cmpsl
movsb
lret
add
loop
push
std
sbb
shr
adc
out
inc
adc
movsl
xchg
dec
sbb
rcll
repnz
push
push
adcb
lret
push
sub
idivb
shrl
push
cmp
jl
push
jns
mov
shll
mov
mulb
aam
lcall
jecxz
mov
or
mov
mov
xchg
shrl
ret
outsl
insb
mov
loop
jb
and
mov
mov
or
rcll
test
mov
and
pusha
enter
xlat
mov
inc
fsts
xchg
test
dec
dec
daa
lods
repz
cmp
popl
shll
and
mov
shrl
lods
in
jp
roll
fnstsw
test
rorl
add
fadds
push
lods
dec
shl
or
push
shll
xchg
mov
sbb
popf
bswap
test
pushf
data16
fcompl
frstor
in
jg
mov
jo
mov
rcll
fmull
shll
addr16
shll
and
ja
or
or
xor
pop
dec
addr16
notb
mov
insb
in
leave
in
fwait
rcl
aad
sbb
jno
push
fbld
dec
insl
sub
mov
inc
jp
gs
or
jne
stc
ret
popa
fs
xor
sbb
fsubl
jb
in
adc
and
imul
pop
sarl
ss
mov
rcll
and
pop
shll
sub
adc
in
mov
mov
cli
shll
sbb
add
ret
inc
push
int3
mov
cmp
or
sbb
lcall
dec
mov
pop
xor
mov
lods
jge
mov
adc
dec
ds
rcr
mov
pop
aad
and
adc
es
mov
pop
shll
in
rcrl
mov
mov
ror
xor
push
ror
je
xbegin
mov
int
inc
divb
scas
mov
inc
push
and
arpl
insb
rcrl
std
adc
repz
mov
add
xchg
sub
ret
push
dec
push
test
ret
addl
loope
push
das
cs
shll
jl
or
mov
int
aam
xchg
ficompl
mov
cltd
dec
scas
jae
or
or
ffree
xchg
inc
push
imul
cld
sti
push
test
mov
int
rcr
xchg
sbb
clc
sbb
push
mov
mov
rcll
cs
in
movsl
aad
jl
add
and
mov
pop
iret
rcll
mov
cs
cwtl
and
aas
dec
pop
mov
pop
repz
inc
and
cmp
push
sub
es
test
repz
adc
fs
in
xor
repz
stc
std
add
and
and
cmp
jmp
ja
fsubl
dec
ret
adc
push
test
frstor
cld
popa
stc
push
cs
repnz
pop
adc
fwait
test
xor
pusha
lods
mov
xor
test
sarl
ror
dec
rcll
xchg
or
aam
sub
cmpsl
loopne
std
aam
aas
shll
jge,pn
lods
push
mov
mov
or
mov
and
gs
push
sub
stos
xor
lcall
mov
rcl
popf
pop
lods
out
sub
dec
roll
mov
fcmovbe
push
mov
xor
mov
arpl
sarl
push
cmpsb
push
mov
sbb
dec
in
scas
popa
jge
cmp
clc
sarb
or
or
pop
add
xchg
rclb
mov
scas
jecxz
sbb
fsub
in
movsb
roll
push
jnp
fcmovnbe
std
negl
push
push
rcll
mov
xchg
rcll
jne
push
enter
or
leave
shll
cs
repnz
sub
sub
push
cld
ja
fsubl
jae
aad
mov
lcall
pop
cmp
sar
jns
lock
mov
mov
sbb
or
in
enter
loop
mov
mov
jmp
lahf
add
pop
stc
hlt
lret
push
or
and
xor
lods
shr
jle
dec
pusha
dec
jl
rcl
push
add
shlb
dec
xchg
cwtl
cltd
dec
jp
shll
sub
ret
pop
cmp
mov
jecxz
addr16
shr
out
xchg
outsb
fwait
pop
les
mov
out
inc
rcll
xchg
cmp
mov
cltd
out
push
rcrl
stos
and
push
sub
icebp
mov
fwait
jg
mov
mov
fstpt
or
aas
bound
roll
test
fstpl
sbb
cmp
in
jo
xchg
ret
add
push
xchg
cwtl
daa
lock
push
pusha
sahf
bound
outsl
test
aaa
loope
stos
and
sub
bound
pop
in
mov
xchg
roll
adcl
sub
pop
jecxz
cltd
ffreep
outsl
mov
insl
lahf
data16
stos
xchg
xorl
stos
and
jg
repz
out
jmp
shl
mov
aam
shr
test
or
in
mov
and
imul
inc
roll
mov
mov
xor
dec
shll
add
cmc
inc
nop
pop
jnp
mov
sbb
mov
jno
add
push
xchg
ss
popf
ljmp
and
repz
rcrl
adc
int3
out
push
add
jge
xor
fnstsw
xchg
roll
pop
hlt
rorl
adc
sub
adc
add
in
push
add
ja
pop
mov
pop
rcll
xor
shl
jns
cmp
xor
sarb
inc
inc
mov
jne
stos
pop
mov
loop
pusha
insb
dec
sub
rcll
inc
jno
rcrl
and
rcll
fneni(8087
cmp
mov
mov
sub
cmpsl
mov
dec
mov
test
pop
cmc
shl
in
mov
fs
pop
push
cmp
mov
jns
mov
mov
shll
pop
cltd
ror
ds
dec
lea
inc
data16
rcll
add
and
repnz
std
ljmp
push
pop
xchg
jns
sub
jge
mov
scas
and
shrl
push
cmp
add
addr16
repnz
pop
aam
call
rcrl
sbb
cwtl
cmp
std
shrl
sub
ja
sarl
jmp
pop
repnz
mov
das
icebp
rorl
clc
cmp
testl
pusha
pop
insb
push
or
xor
inc
scas
xor
into
rcll
dec
in
fsubl
lea
jmp
inc
sbb
xchg
dec
xor
mov
jb
jno
cltd
xlat
push
lock
ds
shrl
cmc
inc
pop
pop
rcll
cwtl
pop
jmp
scas
rcl
push
or
push
dec
sub
test
pop
push
test
call
rorl
jl
cmpsb
xorb
jecxz
stos
arpl
mov
or
adc
out
jne
jno
xlat
shrl
cmp
xchg
add
repnz
shll
js
shl
cli
shll
shl
fstpt
inc
xor
sti
out
pop
pop
lea
sbbl
roll
cltd
add
push
leave
test
frstor
shlb
sbb
adc
xchg
inc
clc
shll
or
mov
xchg
pop
mov
xor
push
push
jnp
jmp
sti
cmp
sbb
popf
out
repz
push
inc
mov
cmp
mov
repz
xchg
push
ja
gs
add
nop
icebp
lret
dec
lock
push
ret
sbbb
push
mov
cmp
push
and
fcompl
mov
push
scas
mov
stos
xchg
rcll
fdivp
cmp
xchg
mov
fcmovnbe
mov
popf
mov
push
and
sbb
dec
xor
push
in
and
mov
arpl
imul
push
sarb
stos
pop
pop
or
adc
rcll
jae
roll
test
mov
lret
push
shll
daa
cmpsb
push
push
lcall
aas
mov
lahf
mov
and
sub
es
outsb
push
dec
adc
in
repz
mov
jnp
cs
int3
js
pop
adc
sbb
or
dec
shrl
jae
icebp
ss
xchg
adc
mov
cld
sbb
pusha
mov
fildl
adc
roll
lods
sbb
pop
mov
or
in
xor
mov
and
jnp
arpl
test
aaa
cmp
jae
repz
cmp
cmp
inc
shll
sbbb
mov
or
ret
push
loop
insb
push
stos
pop
fisttpl
rcrl
pop
fistpll
subb
in
dec
call
pusha
shrl
dec
push
roll
ret
dec
add
ror
adc
push
adc
sbb
jbe
test
pop
ret
in
rorl
pop
imul
dec
sub
gs
mov
pop
aaa
sbb
addb
jb
rcll
jns
pop
ret
not
jbe
pop
push
push
sbb
shl
stos
ret
jl
je
cmp
cs
test
ds
jbe
pop
ret
push
xor
int
shl
mov
imul
popf
rcrl
cs
outsl
push
test
rol
insl
xchg
pop
out
stc
push
rcll
xchg
pushf
int
mov
lcall
ret
rcrl
mov
shll
inc
lods
push
push
shr
cmc
inc
mov
sar
clc
lret
jle
push
mov
fs
fisttpll
insb
pop
xchg
mov
xchg
aaa
adc
xchg
das
pushf
loop
jo
shll
mov
sub
add
jnp
hlt
jmp
mov
dec
pop
mov
roll
xor
sarl
pop
das
mov
push
mov
fs
in
sub
mov
movsl
sub
ret
mov
out
push
sar
push
in
shrb
into
dec
aam
lods
add
or
les
mov
cmp
testb
dec
push
aam
addr16
movsl
jne
fs
xor
xchg
rcll
shrd
movsl
mov
adcb
or
cmp
and
std
aaa
mov
rol
inc
mov
scas
shll
aas
add
sub
add
dec
jns
adc
negl
jb
shll
les
pop
fisubl
sbb
into
out
popf
ror
and
pop
inc
shr
fwait
xchg
xor
cltd
cmpsl
shl
push
rcrl
ficoml
and
daa
xchg
fwait
push
mov
add
and
jecxz
in
lret
in
std
jmp
shll
push
inc
mov
push
stc
inc
mov
adc
push
mov
es
arpl
mov
int
das
sub
sar
cmc
push
cmp
push
imul
psubusb
mov
leave
inc
mov
push
stos
lea
testl
ficomps
lret
lods
jmp
xchg
sub
cmp
xchg
not
mov
in
fs
dec
rcrb
xchg
sbb
push
cmp
jno
mov
ror
pop
addl
call
jno
cmpsb
insb
add
jle
arpl
insb
dec
cmpsl
sub
fisttpll
xchg
jnp
cmp
clc
and
jmp
xchg
shll
pop
pop
aaa
sahf
sarb
mov
inc
push
sbb
bound
sarl
std
pushf
pop
push
mov
xlat
inc
adc
inc
iret
xchg
shr
jne
jno
nop
jge
or
add
leave
mov
xchg
lret
das
sub
iret
cli
push
shll
hlt
jae
fmul
lock
shrl
mov
xchg
divb
shll
mov
xchg
jo
icebp
sbb
jecxz
loop
cli
and
rorl
shrb
shl
scas
data16
sbb
shl
or
xchg
adc
inc
cmp
add
mov
jg
push
dec
cltd
xor
and
and
rorb
push
pop
ds
cmp
mov
inc
add
sar
inc
in
jecxz
mov
outsb
movsb
adc
roll
jo
xchg
dec
and
fisttpll
pop
shll
fsubr
xor
jmp
adc
jg
ljmp
xor
jno
rcr
adc
jns
fmul
roll
flds
sbb
loop
inc
mov
shrl
xlat
jnp
push
shl
dec
xchg
lock
jp
ljmp
negl
movsb
stos
rcrl
mov
or
mov
shll
mov
jle
leave
mov
jmp
mov
or
and
sarl
xchg
aas
fistps
mov
pop
inc
jp
mov
cmpl
ljmp
add
push
insl
movsl
jmp
sti
mov
lcall
sarb
in
insl
rcl
jmp
cltd
scas
mov
test
sarl
mov
nop
push
mov
add
sbb
ljmp
pop
dec
sahf
mov
sti
sbb
pop
out
scas
fwait
xchg
add
pop
je
dec
xchg
push
lds
rcrl
and
out
sub
pop
push
adc
out
outsl
mov
jb
mov
daa
mov
mov
cli
xchg
cmp
cmp
mov
aas
sbb
sbb
out
incl
mov
sub
dec
pusha
rcrb
push
push
pop
ret
xor
into
push
xor
jl
jae
inc
push
clc
adc
insb
push
mov
push
adc
jae
fisttps
rcll
int3
jae
push
inc
mov
mov
lret
mov
hlt
adc
repz
jns
mov
insb
divl
rcrl
xchg
inc
int
sub
daa
cmp
push
xor
dec
mov
lahf
scas
mov
mov
iret
xchg
fmul
out
add
mov
rcll
addr16
imul
mov
xlat
mov
scas
xor
jno
dec
movsl
jne
int3
inc
add
xor
mov
cmp
enter
inc
cltd
inc
cwtl
jg
in
shrl
push
bound
cs
aas
mov
mov
shll
cmpsl
fwait
test
xchg
push
stos
aam
mov
es
imull
int3
cmc
inc
push
pop
inc
test
inc
leave
test
frstor
push
aaa
ds
rol
in
mov
roll
fucomip
or
sub
xchg
rep
rcrl
jno
add
cld
hlt
rcll
adc
cmc
push
shll
adc
sarl
cld
lahf
sub
enter
adc
pusha
cmp
mov
sbb
jmp
movsl
rolb
stos
pop
fcompl
or
call
sbb
not
xor
sub
sti
mov
int3
add
or
sbb
rol
out
bound
roll
mov
push
js
mov
jle
out
xorl
inc
mov
xchg
push
cmp
ret
aad
shll
shll
scas
fadds
popf
push
or
xchg
mov
xor
pop
cmc
inc
ret
fisttpll
push
jb
dec
sti
push
or
in
shll
movsb
mov
arpl
fsubrl
sar
ja
sarb
loop
enter
scas
outsb
scas
roll
dec
sub
rcll
in
add
aam
push
cltd
sub
lret
ljmp
and
pop
rcr
cmp
push
inc
and
aam
jae
les
shl
push
repnz
iret
xor
call
pop
xor
mov
in
add
mov
jle
pop
shl
or
and
sbb
rorl
xor
shll
push
rcrl
mov
out
test
lret
xlat
popf
roll
outsb
mov
adc
nop
jo
daa
mov
pop
sarl
push
mul
mov
jno
and
popa
in
cmp
lock
test
in
insl
cmp
jno
shll
xor
cltd
lods
in
in
dec
jo
shll
mov
sbb
icebp
and
insb
pop
mov
loopne
xor
rol
in
loop
mov
test
mov
data16
and
out
rcrl
mov
ja
shll
mov
out
push
test
push
or
lock
repz
push
test
or
or
stos
mov
out
es
rcll
xor
shll
dec
mov
rcr
movsl
push
fistpl
mov
mov
roll
insl
adc
push
ljmp
mov
inc
pop
cmpsb
ret
pusha
roll
mov
jmp
push
test
dec
pop
push
aam
push
fs
shrl
in
dec
mov
insl
aad
and
inc
mov
mov
ret
push
mov
addb
jb
and
stc
add
in
jns
cli
push
mov
out
ljmp
and
int
fisttps
sahf
popa
outsl
lds
and
out
sbb
pop
icebp
lret
xor
jge
push
mov
and
in
rcl
icebp
inc
out
pop
cmpsl
cmp
arpl
in
mov
ret
faddl
scas
lods
mov
xchg
fwait
pushf
rcrl
into
or
mov
loop
repz
inc
nop
push
dec
mov
sti
loopne
dec
push
lea
insb
fsubr
je
xchg
jmp
leave
adc
xchg
cmp
xchg
cmp
les
cmp
mov
shrl
or
mov
dec
cmp
xchg
enter
pop
dec
push
nop
and
sub
shll
mov
in
rcll
lods
sub
push
loope
push
int
cmpsl
lahf
std
insb
push
rorl
test
sbb
and
mov
xchg
pop
cs
inc
decb
rcll
fstp
pop
les
xchg
xchg
mov
pop
jl
sub
shlb
push
mov
lods
mov
test
lret
movsl
add
push
rorl
cmp
or
iret
bound
cli
rcrl
out
cmp
mov
adc
repnz
cmpsl
repz
nop
jl
cmp
popa
les
loope
mov
daa
dec
test
xchg
jecxz
sar
mov
lret
cmc
shl
adc
mov
mov
jmp
ja
ss
ljmp
mov
repz
pop
shll
cld
sub
push
sbb
movsb
cmp
jecxz
jle
push
xchg
cmp
loop
xor
fistps
sub
mov
test
mov
andps
add
inc
xchg
movsb
jae
ljmp
fwait
xchg
popa
repz
or
lods
shll
adc
inc
xchg
add
and
not
cmp
shll
or
mov
inc
mov
mov
pop
out
xor
js
imul
mov
xchg
dec
stos
test
rorl
call
xor
mov
scas
jnp
shll
sub
mov
push
or
add
adc
rcl
scas
mov
cltd
xor
shl
rclb
xor
movsb
push
inc
mov
std
test
bswap
adc
daa
jge
adc
outsl
cmp
xchg
jne
adcb
mov
mov
dec
leave
stc
xor
push
pop
lret
cmpsb
sub
daa
push
lods
mov
jo
out
and
fcoml
test
fcom
ja
inc
jae
loope
push
notb
mov
pop
and
jmp
pop
rorl
mov
add
mov
cmc
loop
icebp
or
and
and
push
pop
out
sbb
in
hlt
mov
cli
push
push
stc
lea
les
or
fprem
sub
xor
pusha
dec
pop
stc
cmpsl
sbb
popa
cmpsl
aad
in
mov
push
cmpsb
push
outsb
daa
xor
fstpl
shll
inc
jecxz
int
and
xchg
push
in
test
xchg
outsb
cmc
out
in
jg
inc
std
pop
in
inc
sar
rolb
pop
xchg
cmp
and
sahf
fcoms
pushf
push
add
jg
mov
mov
cld
iret
lret
aam
fldt
out
test
mov
push
pop
fisttpll
sbb
inc
xor
jo
xchg
rorl
lods
arpl
pushf
lock
test
imul
test
enter
stos
dec
shll
or
pop
ret
rcr
xor
cmpb
cmp
pop
adc
adc
fwait
ss
push
dec
roll
and
popa
test
leave
aam
call
dec
stc
jns
subl
test
in
ja
rolb
rcl
ret
loope
dec
mov
js
xchg
jbe
push
ss
push
std
imul
xchg
mov
inc
cmp
adc
and
test
shll
outsb
pop
cmp
fldt
aas
cli
xchg
scas
inc
sbb
pop
cmp
add
jl
orl
pop
das
out
adc
outsl
out
pop
sahf
jne
mov
push
int3
jge
clc
pop
mov
shll
adc
int3
pop
push
jge
sbb
jp
xlat
pop
pusha
aam
add
jle
outsb
inc
push
into
shll
jnp
cmp
inc
fs
cpuid
rcll
xor
shlb
repz
sbb
aaa
adc
mov
or
xchg
push
clc
jb
rorl
stc
pushf
jbe
sub
push
call
rcll
xor
test
data16
xchg
out
sub
pusha
fstl
fdivl
int
shll
pop
xchg
xor
roll
jae
mov
cmp
lret
cmp
fcoms
push
add
out
adc
decl
sbbb
negl
xchg
rcr
jno
add
push
and
mov
into
dec
addr16
movsb
fcmovbe
add
jl
sbb
add
call
push
xchg
cs
push
movsl
inc
sub
mov
and
popf
aam
push
cmp
pop
iret
pushf
mov
fbstp
cwtl
cmp
inc
sub
dec
insb
inc
mov
sub
xor
cmpsl
stc
adc
adc
cmp
fisttps
jp
push
jecxz
sbbb
enter
adc
sub
mov
cmpsl
rorl
ret
xor
inc
mov
jno
mov
jmp
ja
cmp
cmpsl
dec
xchg
shrl
lret
jno
frstor
and
aas
leave
roll
xchg
mov
shl
or
mov
inc
test
fsubl
cs
rorw
str
xlat
sbb
shr
inc
addr16
stos
xor
ja
int3
xchg
testl
lret
adc
sub
dec
inc
mov
push
xchg
mov
nop
out
std
sarl
in
push
xor
shlb
adc
mov
pop
pop
xchg
subl
inc
push
out
xchg
fimull
xchg
roll
test
shll
sbb
xchg
fsubs
shll
clc
ret
lret
xchg
shll
gs
pop
push
mov
cmpsb
shlb
sub
dec
xor
xchg
push
movsb
xchg
push
shll
std
sbb
rorl
popf
fcom
push
xchg
push
test
cmp
push
popf
pop
mov
sbb
stos
lods
jmp
stos
lret
push
adc
shll
xor
cmp
jge
pop
push
pop
push
rcll
mov
or
xchg
push
ljmp
rcl
aas
mov
roll
int3
mov
sbb
shll
outsb
loop
leave
rcll
and
inc
mov
imul
xlat
push
shll
mov
mov
out
call
xor
xlat
lcall
test
shl
shll
or
mov
push
lods
lcall
sub
rcl
and
in
cmpsl
fcoml
in
push
push
inc
shrl
jecxz
xor
out
push
sub
xchg
sbb
xor
push
add
ja
shl
nop
pop
mov
int3
mov
dec
fcmovnu
cmp
ror
shr
adc
fwait
sarw
popf
push
sbb
nop
add
mov
fucomp
xor
rcll
cmc
push
push
xor
int
xchg
repnz
test
roll
mov
lea
mov
ficompl
xor
cmpl
pop
or
aam
dec
fs
sbb
cld
mov
mov
call
jp
je
adcl
mov
cli
mov
dec
roll
aas
or
mov
int
imul
sub
jo
stos
inc
mov
mov
shll
inc
dec
push
fidivs
mov
stc
xchg
pop
push
ror
cli
jl
rcrl
mov
ret
shll
sbb
add
push
out
rcll
leave
cltd
lds
sbb
and
outsl
roll
mov
cmpsl
jge
or
mov
dec
xchg
sbb
sar
inc
mov
sar
imul
shrl
xchg
and
test
dec
inc
in
jecxz
inc
test
jmp
je
sahf
fsubrl
fcoml
iret
xchg
lret
movl
out
sbb
orl
pop
roll
imul
adc
lsl
add
xchg
roll
mov
xor
mov
fisubrs
pop
mov
dec
inc
xor
roll
loope
repnz
das
or
test
sbb
jae
loopne
sub
ret
sbb
ficomps
int
jns
inc
dec
and
cwtl
scas
push
pop
and
add
mov
add
loopne
and
push
mov
xchg
addr16
shll
jmp
int
mov
popa
pop
jns
lods
rcl
mov
cli
clc
movsl
xchg
sbb
push
add
pop
fnsave
adc
cmp
mov
iret
sarl
jo
pop
or
cwtl
cmpsl
out
xlat
adc
lods
fstpt
aas
adc
shll
je
sarl
cmp
stos
les
add
je
mov
pop
lret
shl
js
xor
pop
cmpsl
int3
enter
rorl
xchg
and
push
lcall
daa
out
mov
jmp
rclb
sbb
repz
shll
mov
cld
dec
notb
sarl
fldt
jle
adc
mov
lahf
jae
pop
rcrl
xchg
xchg
cmp
mov
mov
stos
sarl
inc
inc
imull
js
or
incl
cmpsl
ss
push
shrl
roll
rorl
xor
cmp
testl
mov
xor
cld
sarw
andl
mov
adc
or
inc
insb
icebp
aaa
mov
rorl
push
test
mov
arpl
xchg
leave
rcrl
and
mov
pop
cmp
sub
xchg
xchg
cmp
aaa
pop
sub
rcl
ret
jge
push
lds
dec
sti
fst
adc
jnp
jp
and
int
push
es
std
test
sbb
je
sarl
push
sarl
nop
sarl
push
add
sbb
cmpsb
push
dec
xchg
push
and
sbb
sub
mov
mov
xchg
xlat
mov
fdivl
in
lret
pop
aad
fwait
repz
dec
negb
sbb
or
dec
or
ret
out
fldenv
mov
xchg
inc
fcmovbe
loop
cmpsl
popf
and
insl
cli
rorl
ret
shl
xchg
pop
in
push
jnp
jae
lea
adc
or
mov
out
adc
push
sub
xlat
fwait
roll
fwait
adc
sbb
pop
jmp
daa
or
shr
insb
cmp
fs
jecxz
sbb
mov
int
movsl
pop
outsb
xchg
in
xchg
faddl
dec
push
adc
mov
sbb
fcoms
nop
jmp
rcrb
lods
jg
mov
jno
xor
and
sarl
jb
test
xor
fstpl
cwtl
mov
sbb
out
loop
jo
pop
ds
mov
rcll
fisttpll
push
bound
call
aaa
rcl
fsubrs
push
shl
fbstp
ja
jae
pop
rcll
mov
sub
push
jns
push
push
or
repnz
xchg
call
jp
adc
dec
cwtl
dec
xchg
mov
mov
inc
jmp
std
repnz
shr
cmpsb
popa
aam
lret
dec
jbe
jne
inc
in
mov
shll
into
out
lods
in
xor
push
push
mov
repnz
push
mov
jb
mov
stc
aam
cwtl
pop
rcrl
push
cli
lret
sbb
xor
jp
loopne
testb
ror
int3
xchg
jbe
dec
mov
roll
pop
out
aad
cmp
adc
jge
scas
sar
mov
mov
shll
lds
ljmp
adc
add
pop
sub
in
rcrl
xchg
jnp
mov
and
push
or
push
mov
add
movsl
data16
adc
push
rcll
pop
mov
rcrl
sbb
inc
xchg
xor
lock
jbe
fcomps
mov
push
stc
ret
add
push
das
sub
cltd
orl
xchg
jne
enter
pop
rol
pop
loope
push
repz
jle
fsubs
fs
jg
adc
push
push
inc
mov
push
mov
shl
add
cmp
shrl
scas
adc
and
sbb
add
loopne
testl
arpl
cmp
phsubd
jo
inc
mov
push
in
mov
dec
lods
jne
and
outsl
movsl
das
shrl
add
enter
sbb
stos
inc
mov
rcrl
popa
adc
shrl
cmp
lock
mov
push
repnz
push
shll
repz
jecxz
xor
cmp
sbb
shll
int3
mov
pop
rcrl
je
sub
jnp
cmpsl
or
out
jo
jbe
cs
roll
fidivs
shll
cli
dec
outsb
sarl
shl
out
pop
jno
rcrl
lods
cld
mov
pop
stc
sub
xchg
ljmp
xchg
xchg
jmp
shll
lahf
and
push
xchg
test
mov
lock
jnp
sbb
pop
rcrl
jp
inc
rcl
insb
stos
adc
jmp
cmp
pop
int
aam
cmp
ret
into
out
roll
mov
add
subl
jmp
jecxz
mov
sub
push
add
pop
cmp
mov
inc
nop
jecxz
mov
int3
dec
push
adc
mov
adc
xchg
cmpsb
lret
scas
daa
sbb
jmp
cmp
cmp
mov
js
or
mov
cmpsb
shll
pop
mov
in
mov
leave
sti
sub
xchg
lahf
sbb
in
roll
mov
mov
cwtl
adcl
arpl
cmp
ffreep
mov
imul
lods
push
je
sub
into
adc
jmp
mov
rorl
fsubl
mov
aad
aam
jae
les
adc
sbb
push
ljmp
mov
jne
cmp
cmp
shrl
fldcw
xor
push
and
mov
mov
aam
test
pusha
andl
mov
insb
push
lea
aaa
dec
out
sub
ss
xlat
xchg
inc
pop
inc
cmc
rol
out
leave
adc
adc
cmc
push
je
mov
inc
daa
mov
rcrl
mov
lret
into
in
and
xor
push
outsb
jg
add
add
cmp
sarl
xchg
shll
jmp
std
rcll
ljmp
push
dec
idivb
rcr
jmp
sbb
aas
sbb
mov
mov
mov
cmpsl
test
mov
cmpsl
loope
and
movsl
cmp
call
fs
push
jnp
mov
enter
shrb
into
mov
shrl
notb
shll
mov
inc
adcl
mov
mov
adc
lods
inc
pop
rorl
ds
fbstp
xor
insl
inc
and
xor
jp
sbbl
sar
dec
xchg
sbb
sub
dec
mov
lea
push
into
imul
js
add
shrl
mov
and
and
and
push
xchg
stc
aas
std
stos
rcl
sbb
fstpl
xchg
rol
push
push
mov
cwtl
shll
cmp
push
pop
and
stc
and
out
sbb
jge
pop
pop
add
jp
stos
repz
jg
pop
mov
pop
xchg
int
mov
adc
fadds
mov
stos
dec
inc
shl
xchg
or
inc
mov
mov
jmp
cmpsb
sbb
push
fadd
leave
xchg
shl
mov
push
mov
cmp
pop
scas
gs
add
loop
lcall
adc
mov
sub
pop
push
push
mov
mov
dec
ds
jg
jmp
popa
sub
js
je
jnp
shrl
xchg
enter
pop
shrl
ret
loope
inc
lcall
lock
pop
lret
cmpsl
fwait
mov
shlb
dec
rorl
xlat
in
lret
sbb
scas
aas
insb
shll
lea
pop
push
push
adc
loopne
fcom
push
in
lds
adc
leave
xchg
fcmovu
hlt
sbb
push
andb
dec
lods
jmp
push
in
mov
movsl
repnz
rol
mov
pusha
mov
cmp
inc
in
inc
iret
je
lret
stos
aad
cwtl
push
mov
mov
fisubrl
sbb
mov
jb
inc
cmp
xor
fwait
dec
fcom
out
and
or
fldl
out
xchg
sbb
mov
sbb
mov
xchg
sar
cmpsl
lds
imul
inc
lods
and
shll
jl
cwtl
dec
cmpsb
repz
aaa
and
insl
sbb
ds
push
adc
adc
mov
lahf
pushf
cmp
sub
test
push
push
cmp
mov
lods
rolb
inc
cmp
rorl
pushf
dec
out
sub
loopne
ss
in
ljmp
inc
mov
out
add
adcl
mov
xor
pop
aam
mov
cmp
in
inc
mov
mov
roll
mov
out
push
int
loopne
pop
xchg
arpl
add
inc
jl
adc
cmp
outsl
shrl
or
xchg
stos
xchg
sub
sbb
pop
lock
push
cmpsb
imul
push
aaa
add
cmp
jge
or
jns
addl
cmp
xchg
or
or
out
inc
adc
adc
int3
or
shll
add
mov
leave
rcll
add
lret
jmp
sub
adc
push
out
mov
and
rorb
fidivrs
push
aad
jl
jae
andb
push
inc
ja
or
mov
jecxz
sbb
popf
mov
je
shll
dec
and
cmp
xchg
imul
inc
inc
testl
xlat
stos
jnp
push
sub
dec
pusha
xor
adc
cld
cmp
cmpl
push
cltd
sbb
xchg
rolb
xchg
je
push
out
xchg
or
cmp
nop
and
lahf
scas
in
rcll
sub
in
ficomps
inc
pusha
ret
xchg
test
lahf
inc
shl
popa
push
sbb
dec
cmpsb
xchg
push
in
icebp
fists
cld
ljmp
and
dec
jns
pop
test
mov
add
paddusw
push
roll
mov
jo
mov
cmpsb
push
bound
mov
add
or
ficompl
rorb
daa
push
mov
lret
js
pop
outsl
mov
shl
mov
jl
adc
repnz
lret
sbb
mov
add
fildll
stos
xchg
shr
inc
iret
jp
mov
int
dec
lea
repnz
imulb
or
les
jbe
inc
xchg
in
xlat
rcrl
adc
pushf
dec
mov
pop
inc
xor
filds
cli
orb
sti
sar
orl
sar
adc
push
in
movsb
ret
popf
test
shlb
adc
dec
fnstcw
cli
push
and
je
pop
insb
neg
add
jge
std
fnstsw
ret
shrl
inc
scas
pop
jo,pn
xchg
je
or
mov
pop
adc
in
in
mov
pop
mov
jnp
shrl
sahf
xchg
andb
roll
mov
imul
rclb
push
inc
cmp
pushf
aam
test
cmp
insb
dec
mov
nop
inc
adc
dec
rcrl
push
lods
inc
xchg
out
ljmp
sbb
ljmp
xchg
jae
outsb
fistpl
pop
mov
jle
rcrl
jg
aas
in
fs
shl
lret
jb
iret
sub
xchg
mull
push
pusha
orl
dec
jmp
add
and
dec
repz
das
js
push
cs
xor
sbb
addr16
gs
mov
ror
testb
out
jl
push
movsl
test
test
insl
cmp
stc
mov
and
pop
cmp
lock
mov
aas
int
repnz
push
roll
sbb
test
idivb
shll
in
jecxz
dec
es
repz
mov
jle
fbstp
mov
std
pop
adc
sarl
inc
and
sahf
mov
imul
shr
add
insl
dec
bswap
mov
repz
xchg
mov
sar
ret
inc
loope
sbb
adc
mov
hlt
rclb
or
stc
in
jg
or
jecxz
inc
and
cmp
add
pusha
pop
xchg
addps
sarb
cmp
xor
or
stos
dec
icebp
xor
mov
mov
ljmp
mov
push
add
sbb
popa
gs
or
out
mov
xor
xchg
cwtl
mov
inc
adc
mov
pop
xchg
cmp
andl
rcl
inc
cltd
mov
mov
out
rorl
es
testb
daa
hlt
cmp
pushf
sarl
cmp
clc
int
fwait
or
cmp
xchg
rorl
add
sarb
movsb
push
ja
inc
sar
add
sbb
add
std
jbe
xchg
ret
cmp
push
push
sbb
test
rcr
mov
nop
ljmp
hlt
leave
cmp
push
cmc
adcb
mov
aam
xchg
pop
add
adc
push
pop
in
test
faddl
adc
lea
mov
xchg
jmp
gs
leave
push
cmpsl
pop
ss
or
fnstsw
rcrl
es
mov
outsl
add
popf
loop
dec
inc
dec
and
xchg
mov
popa
mov
sbb
inc
arpl
mov
rorl
cmp
out
out
rorb
lds
test
in
jg
inc
mov
into
cmpsl
repz
adc
xchg
insl
cltd
std
aaa
out
daa
adc
mov
mov
shrl
adc
jmp
and
jns
in
add
xchg
inc
in
pop
mov
xor
sbb
js
push
imul
cmp
fmul
shl
push
cmp
icebp
inc
out
inc
imul
cld
xorl
mov
fistl
in
das
roll
pop
mov
fstpl
lret
sarl
jmp
popa
xchg
push
pop
mov
sub
pop
sub
stos
mov
xchg
in
mov
mov
sub
pusha
imul
jle
cltd
push
shlb
fidivs
inc
je
cld
addr16
or
bound
push
ror
mov
addl
sarl
mov
jmp
shll
and
aam
movsl
cli
shll
dec
jge
dec
push
mov
imul
into
pop
mov
inc
mov
jno
mov
and
and
orb
jb
cmc
lahf
push
stc
fs
ds
push
pop
mov
shrl
or
pop
lea
push
dec
xor
xchg
and
sub
sbbb
add
fmuls
inc
jge
pop
cmpsl
mov
dec
adc
mov
lret
xchg
push
loop
dec
adc
push
mov
enter
and
inc
mov
rorl
lahf
in
lods
sahf
jae
mov
xchg
mov
ret
rcr
shr
mov
test
mov
jne
repnz
insb
mov
shll
adc
rcrl
les
xor
mov
sarb
adc
inc
fwait
jmp
dec
int
inc
push
enter
pop
xchg
les
loope
add
mov
xchg
pusha
daa
mov
lds
push
mov
jp
mov
dec
sbb
sar
stos
fwait
dec
jbe
add
and
cmc
or
add
shr
push
adcb
dec
mov
js
pushf
and
shll
xchg
test
int3
shll
lods
mov
inc
push
cs
jne
into
jb
add
outsl
xchg
je
cmp
xor
push
cwtl
movsl
jns
shrl
icebp
out
mov
jae
sarl
jl
gs
shll
fistps
outsb
shl
mov
es
pop
xchg
jnp
repz
jge
xchg
xchg
inc
sar
aam
push
xor
ds
cmpsl
ret
adc
stc
xchg
cmc
and
pop
jmp
xor
mov
jmp
shl
unpcklps
push
cld
xor
xor
rcll
movsb
adc
cmpsb
jecxz
adc
sub
pusha
lahf
xor
test
enter
nop
sub
shrl
or
subb
or
adc
fcmovnbe
adc
lds
jns
or
sub
jnp
shrl
jecxz
rcr
mov
push
push
dec
negl
daa
cld
ror
stc
push
xor
sub
shr
xor
pop
ror
fimull
sbb
aad
mov
sbb
adc
sahf
insb
sbb
arpl
mov
rcl
sbb
jb
add
and
test
shll
xchg
push
rcrl
xor
in
enter
testl
aaa
movsb
outsb
mov
push
add
ds
std
test
sub
xor
popa
ficomps
mov
push
roll
aad
loop
nop
imul
push
dec
repz
into
lret
cmc
fldt
adc
xchg
xorl
push
adc
repz
out
ja
rcl
ss
addr16
pop
mov
cld
shrl
mov
mov
ja
jl
xor
fsubs
outsl
std
addb
rorl
mov
ror
pop
imul
rcll
push
push
fistps
inc
or
fsub
add
xchg
inc
sub
outsl
jnp
roll
mull
mov
adc
popa
sbb
inc
inc
ja
pop
shll
lods
cmp
push
lret
inc
jecxz
sti
mov
dec
in
mov
jp
loopne
in
cmc
and
mov
jae
js
rcll
mov
pop
ret
shrl
shl
sahf
jg
mov
fnsave
sbb
imul
jns
xchg
test
inc
nop
shll
jp
fnsave
adc
dec
jns
mov
sub
jmp
cmpsb
fwait
mov
ss
addr16
mov
das
movsl
inc
iret
xor
xchg
addr16
mov
iret
jmp
mov
jle
pushf
or
mov
in
or
out
lock
insl
mov
pop
push
call
inc
fmul
mov
fwait
ss
jp
inc
int
dec
fs
dec
push
pop
ret
loopne
or
rcll
repnz
jns
fwait
rcll
aam
pop
mov
icebp
in
cld
ja
imul
push
dec
into
lock
inc
ss
ljmp
sahf
mov
roll
cmp
jbe
stc
into
aaa
xlat
pop
sub
jns
sbb
loopne
ret
mov
fmull
xchg
ss
ljmp
out
push
push
xchg
loop
rcrl
xlat
mov
jnp
push
sarl
movsl
mov
dec
mov
ret
data16
pop
xlat
mov
adc
fcoml
fistpl
mov
sub
mov
jnp
add
sahf
test
or
loopne
xor
orl
and
mov
mov
popa
pop
in
scas
inc
rorl
fs
inc
pop
mov
pusha
stos
dec
rcrl
or
push
xchg
rep
ret
and
mov
cmp
cmc
mov
out
push
enter
pop
loop
push
shl
into
imul
sahf
fs
jne
or
sub
je
adc
insb
in
shll
rcll
data16
xor
ljmp
xchg
fwait
roll
jmp
enter
pop
lods
cmc
rcll
inc
rcrl
aad
jl
test
std
mov
repz
rol
lods
aas
inc
bound
or
add
add
clc
mov
int3
xchg
cmp
xchg
jno
xchg
add
pop
jecxz
inc
cwtl
imull
shrl
pop
lret
dec
mov
hlt
dec
repnz
je
ja
lcall
mov
pop
add
rol
es
xchg
gs
cwtl
psrlq
xor
push
xchg
xor
jecxz
adc
mov
into
push
and
cli
pushf
pop
jmp
int3
int
shr
jns
stos
dec
sub
push
dec
repz
push
pop
cld
shl
ret
cs
cmc
sarl
test
in
cmp
xchg
shr
loope
or
xor
ljmp
call
cmp
insl
fcmovnbe
push
movups
adcb
imul
xchg
sahf
ret
ss
pop
lods
shrl
inc
rorl
mov
jle
negl
mov
gs
dec
rclb
iret
mov
inc
push
push
mov
jp
xor
xor
or
cmp
mov
roll
jecxz
lea
adc
or
fnstsw
scas
movsb
dec
ror
cmp
mov
fsubrl
or
mov
xchg
fdivr
jo
rcl
jl
shrb
push
rcll
mov
fsubr
sbb
mov
movsb
mov
cwtl
mov
mov
iret
fidivs
notb
mov
push
icebp
nop
out
mov
push
add
xchg
push
out
into
adc
lret
push
sub
mov
jle
push
add
inc
mov
repnz
xchg
loopne
aad
jne
jae
ss
idivb
shrb
roll
or
mov
fadd
fsubl
pop
pop
jns
shll
pop
and
int3
cmpsb
mov
rcr
imul
xchg
rcrl
ja
rcll
sub
xlat
shr
cmp
push
mov
jecxz
mov
xor
fwait
and
nop
cmp
out
jecxz
and
xchg
jb
in
fimuls
outsb
shll
arpl
sub
pushw
rcll
adc
sbb
sarl
xor
outsb
fs
dec
imul
shll
adcb
lods
mov
fcmovnbe
into
mov
sti
test
cmp
ljmp
bndstx
adc
ljmp
std
push
and
aas
arpl
mov
rcll
cld
stos
in
rcrl
mov
xor
rorl
mov
popl
sub
jmp
sub
filds
imul
cmp
addl
and
mov
popf
jmp
push
rorl
adc
aam
les
push
jbe
lahf
shr
arpl
push
into
outsl
jle
inc
mov
ret
shll
adc
andl
stc
push
movsb
not
pop
movsb
add
stos
rcrl
arpl
add
mov
stc
lods
jecxz
inc
mov
aas
shll
ret
out
out
pusha
rcrl
mov
out
xchg
add
push
jge
or
dec
adc
xchg
lret
push
jmp
adcl
xchg
xchg
mov
scas
enter
mov
xchg
rolb
fcmovnbe
and
dec
mov
jnp
fstps
push
lret
ficoms
dec
xor
lret
adc
roll
jne
mov
sub
mov
mov
sahf
xchg
imull
std
cs
mov
push
rcll
adc
int
sub
jmp
mov
dec
push
add
enter
rcrb
lret
cmp
xor
push
fldenv
rep
into
lret
sar
mov
xorb
or
int
shll
scas
add
sar
and
movsl
fcoml
sarl
lret
loopne
mov
push
sub
pushl
fcmovnb
push
mov
pop
mov
jo
fnstsw
shrl
movsl
fistpl
shlb
cmp
inc
and
iret
dec
push
push
pop
push
xchg
imul
mov
aas
xor
gs
jne
test
sbbl
les
aas
push
jge
daa
push
popf
jae
dec
pop
lods
push
shll
jmp
mov
ficoms
mov
loopne
and
imul
shrl
and
and
ljmp
mov
aam
jno
insb
repz
push
fwait
dec
ds
sbb
adc
pop
mov
insb
outsb
or
repz
lahf
xchg
mov
sub
test
sar
xor
cli
mov
int
test
inc
xchg
mov
and
or
dec
push
pop
ss
jbe
lods
fsubl
stc
rorl
aaa
push
rcl
fwait
insb
jmp
imul
movsb
dec
xchg
shl
mov
shl
xor
adc
xrelease
pop
mov
mov
and
into
push
scas
aad
test
ss
xchg
clc
xchg
sbb
cwtl
scas
inc
mov
inc
cmp
adc
sar
or
jle
xchg
inc
pushf
shlb
dec
adc
shl
call
shl
je
sti
int3
add
push
pop
movsb
mov
inc
push
adc
fiaddl
std
cmc
rol
cmp
ficoms
das
adc
push
mov
xor
push
sahf
nop
outsb
dec
shll
push
pop
or
pusha
sar
push
or
lret
push
and
pop
adc
xor
lcall
fcmovnbe
add
jae
pop
mov
lock
push
into
ret
lcall
xchg
mov
push
hlt
sbb
mov
pop
jecxz
lahf
jp
adc
mov
adc
sbb
mov
into
xchg
sti
es
shll
in
or
pop
stos
out
push
shrl
inc
jo
xlat
fs
outsb
ret
mov
shll
lret
cltd
or
adc
std
lcall
push
lret
jecxz
add
in
rcl
icebp
outsl
outsb
mov
jge
mov
shl
inc
fldcw
rcll
js
cmp
decl
push
jg
inc
jne
push
cmpsl
adc
and
mov
mov
ffreep
xor
cmp
pop
fistpl
pop
jns
dec
push
mov
fstpl
mov
das
push
mov
jo
iret
movsb
out
cmp
push
stc
or
mov
dec
fisubrl
aaa
movsb
push
mov
and
pushf
xor
xor
push
mov
jle
lods
arpl
sarl
lock
bound
pop
push
fbld
in
shr
fdiv
add
mov
shll
xorl
dec
movsb
ret
into
add
mov
jmp
rclb
popa
rcl
fs
mov
test
imul
shr
into
test
inc
aaa
call
xchg
mov
mov
and
xorb
or
out
mov
jns
cli
shll
sbb
jecxz
ret
xor
mov
lds
loope
dec
mov
push
jns
mov
icebp
test
pop
outsb
push
sub
jge
dec
daa
mov
dec
cld
xor
roll
push
mov
pop
cmp
scas
xchg
push
imul
mov
sbb
cmp
push
jp
insl
jae
sarl
sbb
push
addr16
push
or
fwait
push
push
jg
shrb
xchg
inc
mov
cmp
jmp
rorl
add
bound
mov
xor
push
push
pop
movsb
adc
xor
shrl
sahf
mov
and
sub
roll
repz
mov
mov
adc
xor
mov
ja
loope
sub
add
adc
mov
aaa
fbstp
outsb
sub
pop
push
mov
push
sub
push
inc
jecxz
int
aas
sbb
dec
mov
jae
shll
xchg
pop
xchg
movsl
loope
roll
push
mov
insb
inc
flds
dec
adc
push
fimull
lahf
jl
mov
aam
ret
hlt
cld
imulb
pop
lea
outsb
shrl
mov
in
cmp
cmp
rcrl
aaa
mov
add
or
shr
shrl
xchg
repnz
push
push
mov
push
clc
movsl
fwait
cmpsl
push
and
sti
fsts
xor
mov
popf
mov
das
mov
push
xor
mov
or
sub
jmp
mov
mov
jle
rcll
ljmp
pop
xor
pop
xor
sar
sub
jg,pt
sbb
xchg
xchg
std
hlt
cmp
out
sti
sbb
sub
dec
cmpsl
inc
pop
cmp
rcl
sbb
pushf
cvtpi2ps
gs
arpl
and
test
pushf
adc
sarl
imul
les
jno
push
mov
notl
shll
rclb
into
inc
mov
inc
arpl
mov
pop
sbb
leave
cmpl
int
mov
dec
cmpsl
rorl
add
test
or
jbe
cmpsb
mov
sahf
and
loope
pop
push
cmp
testl
push
pop
ljmp
stos
mov
mov
ljmp
repnz
push
movsb
adcl
mov
xchg
fmulp
adc
shll
rcrl
nop
in
iret
mov
fwait
stos
leave
sub
xlat
lods
lret
push
sub
push
dec
mov
push
dec
jmp
and
and
lret
rcrl
mov
sar
mov
jecxz
dec
mov
xchg
fwait
sbb
int3
mov
outsl
adc
mov
fisttpll
sbb
hlt
punpckhbw
movsb
lea
dec
cs
out
stos
dec
adc
inc
xlat
out
js
mov
data16
mov
in
push
xchg
cltd
xchg
lret
pusha
daa
xchg
push
out
ret
enter
out
mov
jnp
fsubrp
mov
mov
push
pop
in
jge
inc
inc
imul
js
scas
xchg
rorl
lock
mov
inc
push
push
jle
icebp
je
lods
jg
repz
xor
ds
stos
inc
xchg
hlt
jmp
sbb
adc
sahf
repz
rclb
stc
jo
add
jnp
cmc
notl
or
lock
fcoms
scas
adc
test
popa
sub
or
repz
mov
sar
xor
scas
sub
mov
jle
stc
les
push
adc
dec
lret
pop
adc
push
mov
pop
mov
inc
sub
mov
popa
dec
je
sahf
push
ret
mov
jmp
lods
dec
mov
aam
rep
jbe
push
sbb
in
cmp
lods
imul
push
out
into
test
aam
mov
mov
xchg
xor
cmp
adc
enter
not
stc
push
sbb
mov
sub
mov
ret
add
loope
xchg
lods
in
int3
sahf
mov
push
dec
insb
dec
insl
sub
sti
rorl
out
xor
jle
shrb
mov
pop
pop
lahf
xchg
dec
inc
lock
mov
jne
pop
aam
jmp
std
adc
rcr
mov
mov
mov
rorl
mov
outsb
sahf
push
push
lret
push
out
fcmovnb
pusha
xor
rclb
idivl
jmp
pop
and
push
xor
inc
xchg
in
rcll
adc
rorl
pop
pop
pop
adc
dec
xor
shrl
mov
in
sub
mov
jge
mov
mov
add
pop
xchg
jb
loope
mov
shrl
std
mov
imul
adc
sub
sub
iret
in
mov
insb
add
rcrb
jl
add
mov
mulb
dec
sbb
xchg
loopne
data16
cmpb
addr16
mov
enter
and
mov
jns
push
lods
repnz
push
mov
mov
xchg
pusha
adc
lret
cmp
dec
jmp
or
push
dec
cwtl
mov
mov
aaa
mov
xor
sarl
dec
mov
push
je
loop
fwait
jge
icebp
cmp
pop
inc
xchg
repz
xor
in
popf
imul
mov
roll
mov
adc
mov
ficoms
cltd
jmp
add
mov
push
dec
mov
inc
loope
jno
ror
in
je
inc
ds
shll
cmc
frstor
lods
adc
popa
js
je
rorb
dec
fucomp
and
mov
out
push
sub
mov
call
mov
mov
xor
aam
mov
stos
rcl
sub
pop
xchg
jb
jae
push
xchg
pop
imul
inc
adc
add
loop
rcll
sub
inc
sbb
mov
inc
jmp
mov
pop
mov
xchg
inc
or
or
clc
mov
test
movsl
mov
or
jns
fs
aas
movsb
push
scas
sbb
mov
clc
push
fwait
fs
fldenv
xchg
dec
lret
roll
xor
push
push
shl
sti
xor
xor
pop
cmp
sub
bound
orb
daa
cmp
fisubs
iret
shll
fs
xchg
push
cmpsb
fdivs
add
jnp
leave
repnz
aaa
lret
jmp
sub
adc
push
int3
mov
push
fdivrl
clc
enter
push
jae
iret
push
mov
lds
pop
call
push
daa
or
xor
cmpsb
sbb
call
repz
ror
arpl
loop
cmp
rcrl
push
mov
insb
imul
popf
into
push
push
push
aaa
dec
lea
or
push
sarl
pusha
inc
outsb
shll
xlat
popa
das
mov
mov
push
test
mov
mov
or
jecxz
push
insb
add
stc
ljmp
in
adc
inc
repnz
pushf
xchg
ja
xchg
mov
sbb
fcomps
mov
aad
stc
push
jg
mov
mov
fstpl
mov
cmpsb
gs
ss
jns
jne
test
dec
cmp
frstor
sbb
mov
jo
adc
mov
ret
fdivp
mov
rcr
lret
test
mov
push
inc
cmpsb
shll
adc
sarl
fs
lahf
dec
push
push
icebp
push
push
sarl
scas
pop
sarl
in
cld
mov
in
add
popf
xchg
jg
out
rcl
loope
rol
push
scas
xor
xchg
pop
jmp
jl
dec
test
xchg
aam
dec
cmc
shll
and
in
sub
imul
loope
inc
xor
mov
xchg
jmp
enter
xorb
xlat
sar
loopne
sub
cmp
cld
sar
mov
sub
out
rol
int3
mov
jg
or
shr
inc
cmp
jl
and
mov
adc
sbbb
xor
dec
movsb
loope
mov
gs
inc
rcl
xchg
rorl
jno
inc
xchg
xor
mov
mov
inc
and
sbb
jle
sarl
jbe
jno
sahf
mov
addr16
add
js
push
aad
xor
rclb
inc
xchg
inc
inc
push
dec
mov
mov
mov
es
xchg
pop
roll
adc
test
xor
cmc
stc
dec
xchg
movsl
test
fdivs
cli
leave
aam
add
mov
mov
rcrl
rcll
loopne
pop
lods
das
repz
shll
std
lret
popa
fldl
xchg
mov
sub
into
int
lahf
mov
xchg
scas
int3
testl
imul
push
jns
fisubl
jnp
imul
sarl
sub
pop
shll
std
mov
imul
shll
add
shll
stos
cmp
rorl
repz
insl
rcrl
sub
mov
jmp
sarl
ljmp
lods
ss
lret
push
fwait
iret
sbb
les
mov
sti
pop
jae
sub
adc
test
cmpsl
pop
dec
push
push
xchg
cmp
in
shll
xchg
mov
movsb
push
ja
icebp
jne
add
jmp
push
test
repz
jno
inc
push
or
xchg
lock
xlat
insb
ret
mov
shrb
test
adc
rcrl
roll
mov
pop
arpl
sbb
pop
inc
rcrl
or
sti
xchg
rol
ss
repz
and
sbb
data16
mov
shl
rcll
mov
sar
inc
push
xor
dec
adcl
inc
adc
pop
ss
scas
adcl
outsb
inc
mov
rcrl
hlt
scas
mov
xchg
test
stos
cmp
roll
xor
in
mov
cmp
clc
mov
adc
and
out
mov
mov
ss
sar
xor
mov
fsubs
mov
std
repz
push
or
sahf
das
cltd
adc
inc
or
mov
xchg
enter
daa
ror
adc
pop
fldcw
sub
pop
add
mov
outsb
addr16
aad
xor
das
shl
pop
xchg
push
mov
testl
or
test
xor
mov
and
addr16
xchg
std
mov
mov
inc
push
sbb
insb
xchg
movsl
iret
shll
notb
les
ljmp
pop
rcl
jecxz
cmp
fsubl
popf
push
mov
fdivrl
lcall
out
shl
fimull
cmp
jl
sub
in
push
cmpsb
rclb
push
out
xchg
inc
jg
stos
xchg
pop
dec
adc
int3
in
cmpl
pop
test
xchg
icebp
popa
sub
xchg
scas
shll
xor
lods
add
roll
sub
test
bound
shll
cmp
shl
sbb
push
push
sub
out
pop
ficoms
pop
stos
lock
and
push
bound
dec
aam
aaa
jp
push
mov
and
push
xlat
cmp
mov
je
gs
lods
push
push
xorl
dec
sarl
call
call
fidivrl
mov
adc
or
sahf
hlt
icebp
add
pop
mov
outsl
push
push
xor
out
mov
ret
cmc
leave
int
in
xchg
subb
pop
into
shll
imul
in
push
cmp
or
jmp
and
dec
rcll
inc
lods
cli
sbb
mov
pop
ror
add
dec
int3
mov
cmp
add
sbb
in
add
aam
pop
iret
sub
mov
add
push
pop
pop
shll
sbb
rcll
mov
push
mov
jmp
lahf
stos
roll
mov
sub
shr
or
les
inc
rolb
xor
into
cli
mov
cmp
dec
fstpl
xchg
mov
rcll
and
pushf
cmc
test
cmp
xor
adc
shrl
add
and
dec
push
jge
enter
rcrl
popa
sub
stos
push
das
mov
aas
mov
loopne
out
lret
mov
add
shl
mov
in
push
jmp
sti
int
push
dec
mov
scas
ret
or
and
std
out
xchg
cmp
sub
loopne
mov
not
fsts
lds
scas
jl
out
mov
popa
bound
pop
lods
xchg
rcrl
cs
push
inc
movsl
roll
add
push
or
stos
iret
mov
fdivr
cwtl
repz
rcrl
mov
sub
aas
pop
fmul
fdivp
rcll
xor
aad
fwait
pop
sub
rol
pop
dec
inc
add
loopne
mov
lahf
mov
repz
shll
inc
xchg
jb
rcll
loope
mov
pushf
cmc
scas
ja
hlt
test
add
out
rcll
outsl
ljmp
pop
push
repz
je
cmc
imul
lahf
ds
rorl
fs
or
or
call
mov
push
in
cmp
sbb
cli
psrlq
lds
in
inc
shrl
and
sarl
pop
sub
shll
mov
lods
mov
pop
sub
out
and
shll
push
cmpsl
imul
dec
cmp
push
pop
jl
rclb
pusha
jmp
cmpb
adc
repz
pop
movsb
std
rcr
add
add
lahf
mov
outsb
push
mov
mov
arpl
cltd
cmpsb
dec
stos
sub
sbb
sbb
pop
xor
cmp
clc
mov
xchg
or
jne
lret
pop
pop
fwait
rcl
sarb
cmp
sti
xchg
clc
shll
adc
lods
push
fidivs
sbb
adc
pop
xchg
cmp
nop
repz
add
push
add
push
hlt
ror
daa
mov
sub
and
das
push
mov
sahf
fdivl
lcall
fdivs
cmp
sub
mov
mov
push
adc
or
mov
stos
sbb
push
fstps
mov
sbb
int3
loop
fbld
decl
repz
hlt
loop
push
cwtl
push
add
cmp
push
mov
lret
out
andl
inc
or
xlat
pop
jle
lods
push
lock
adc
cltd
pop
adc
daa
inc
cli
mov
xlat
icebp
lcall
mov
jecxz
dec
lds
push
loopne
sub
sahf
repz
outsb
xchg
mov
lock
mov
ss
adc
xchg
push
jmp
dec
dec
sbb
fadd
stos
int
nop
adc
stos
jmp
sub
shll
push
cmp
aas
fiaddl
fs
shrl
pop
push
movsb
fst
jb
and
xchg
sub
jo
stos
jecxz
mov
lret
cmp
mov
cmpsl
shll
bound
jb
notb
or
rcrl
decw
dec
std
shl
inc
cli
xor
not
mov
in
and
shll
dec
call
rcl
dec
sbb
pop
mov
sbb
sbb
mov
pop
sarl
outsl
cmpsl
pushf
dec
jmp
inc
cmp
add
sbb
pop
dec
into
mov
roll
in
jecxz
shl
imul
adc
out
cmc
rcrl
xor
ljmp
shll
shrl
jb
mov
lods
jnp
jne
xor
cli
jmp
clc
sbb
sub
jl
add
divl
mov
test
add
xor
imul
mov
jge
sbb
in
stos
ror
dec
sahf
loopne
sarl
inc
push
or
pop
mov
and
pop
adc
aas
rorb
mov
xchg
xor
in
pop
shll
dec
add
mov
jnp
imul
push
add
xor
roll
mov
rclb
cmp
inc
push
ja
xchg
mov
adc
mov
push
ror
xchg
xor
push
adc
jne
jg
and
outsl
pop
xchg
shll
mov
xorb
sub
dec
mov
imul
mov
mov
push
hlt
enter
mov
int
jno
in
movsl
shrl
mov
fs
mov
ret
sub
scas
shl
mov
mov
push
cmp
movsb
int
push
cmpb
aam
fcompl
adc
repz
mov
mov
mov
push
push
fnstenv
addr16
imul
mov
out
sbb
push
xchg
shll
cs
repnz
inc
mov
idiv
xchg
xlat
sbb
dec
cwtl
sub
loop
push
adc
shrb
adcl
sub
and
sahf
idivl
iret
mov
dec
mov
fwait
shll
imul
es
dec
mov
dec
pop
and
sar
shrl
cs
xor
insb
fwait
jge
add
sbb
shrl
xor
stos
out
shll
push
inc
ljmp
rcll
jno
aam
sbb
iret
aam
ret
pop
pop
cmc
cmp
rorb
xchg
rcrl
push
lahf
dec
aam
mov
jecxz,pt
test
inc
push
sarl
add
mov
rorl
xor
jecxz
test
loopne
inc
cmp
cmp
lods
movsl
shll
inc
ss
push
cld
lods
sub
push
sub
fisttpl
add
sarl
loope
lcall
movsl
mov
inc
dec
sbb
aas
xor
movsb
mov
push
inc
mov
mov
push
bound
ljmp
test
movsl
adc
push
imul
adc
cld
xchg
call
sti
pop
hlt
movsl
mov
push
jae
sti
adc
fstps
cld
dec
push
movsb
lret
pop
mov
push
rol
sbb
add
sti
cmp
fst
pop
sbb
adc
mov
ss
mov
mov
add
lds
leave
inc
rcrl
cmpsl
lret
or
sub
enter
jmp
repnz
xor
outsb
jmp
aad
adc
notb
jmp
sar
mov
mov
rorl
bound
jmp
pop
shl
push
push
push
and
cmp
ret
jbe
add
cmpsb
push
hlt
jno
push
push
fcoms
in
or
stos
aas
out
mov
xchg
add
add
clc
insl
ja
inc
cli
pop
jge
ror
xchg
adc
mov
lock
cs
lcall
popf
push
jecxz
mov
and
mov
xchg
outsb
inc
xchg
and
pop
inc
adc
sub
mov
insb
sarl
sti
fsubs
rorl
or
outsb
push
inc
push
jg
in
push
lret
xor
mov
std
add
bound
test
out
dec
aad
adc
movsb
scas
mov
mov
jl
mov
out
cli
push
sarl
add
es
leave
loop
test
shll
push
stos
jmp
rorb
sbb
mov
icebp
pop
xor
fdiv
mov
add
mov
mov
push
ret
dec
clc
adc
fists
daa
insl
faddl
cmp
jp
xor
addl
and
icebp
ret
test
inc
add
rorl
mov
push
mov
aam
mov
pop
sbb
das
imul
into
roll
lahf
push
mov
lds
and
jp
fidivl
mov
stc
xor
mov
sbb
lahf
addr16
notl
add
int3
rolb
dec
xchg
and
test
clc
out
mov
pop
rorl
jecxz
jge
aad
or
shll
inc
sarl
js
xchg
scas
int
adc
jmp
loope
ljmp
in
aaa
cmpsl
inc
mov
cmp
jnp
sbb
sahf
aas
movsb
jae
lds
xchg
shll
xchg
out
loopne
inc
jmp
repz
mov
mov
shll
rcll
jl
pushf
lcall
rcll
pop
push
mov
dec
sub
in
sbb
das
fwait
inc
enter
out
push
lahf
push
loope
dec
jnp
xchg
iret
adc
add
fs
lret
call
lcall
push
push
hlt
mov
push
dec
push
push
out
inc
scas
cmp
xchg
and
cmp
mov
cltd
jecxz
push
rcl
and
mov
clc
dec
fcmovbe
sar
into
xchg
xor
mov
imul
lods
mov
and
nop
loop
shll
fiaddl
rol
and
sub
iret
sbb
mov
movsl
mov
data16
outsl
pop
sarl
pop
dec
aam
cmp
clc
fnsave
xchg
fwait
aaa
test
int3
rol
add
push
popf
jb
push
pop
lock
and
incb
outsl
rcl
cmpsl
scas
lret
inc
adc
mov
stos
repnz
xor
inc
shll
loope
ljmp
pushf
pusha
repz
inc
shll
notl
mov
cmc
mov
mov
sbb
pop
and
dec
push
xchg
dec
lahf
movsl
xchg
xor
nop
rol
loope
lods
sub
shl
or
psrlq
pop
and
roll
add
or
push
add
aaa
pop
dec
lods
ret
movsb
dec
shrl
fistps
mov
icebp
repnz
push
add
sbb
ljmp
sub
scas
adc
sarl
leave
jno
out
mov
lds
incb
inc
cmp
lock
cmp
mov
test
dec
arpl
inc
fsubr
sbb
jb
pop
scas
push
dec
push
cmp
pop
jl
inc
or
popf
inc
xchg
imulb
rcll
movsl
sbb
push
push
xorl
sti
jecxz
mov
add
mull
mov
cltd
cmp
and
rorl
push
adc
jns
rorl
hlt
jne
mov
sub
rcrl
pusha
leave
in
shll
lret
push
or
mov
shr
std
repnz
sarl
dec
ret
stos
xorb
pop
and
fsubrs
rcll
mov
ljmp
aad
push
cmc
in
mov
adc
jge
mov
ret
outsl
fldpi
loopne
fcomip
inc
pop
ret
out
mov
sbb
xor
xchg
into
lea
pop
mov
adc
sub
pusha
inc
pop
jmp
jnp
and
dec
push
dec
rcll
ja
mov
fsubl
jnp
psrld
xor
mov
jecxz
fucomp
mov
in
mov
mov
jle
push
inc
pushf
xchg
aaa
xchg
icebp
loop
jno
insb
sahf
mov
dec
cmc
fsubr
push
xchg
push
aam
pause
mov
jg
rol
lahf
mov
push
fdivs
shll
fisttpl
out
jns
ror
into
test
push
lcall
jecxz
in
aam
sub
xorb
rcrl
ja
movsb
roll
jb
ss
aaa
in
stos
xor
stos
or
push
out
mov
imul
sbb
vmovntpd
insb
outsb
shll
addr16
lret
pop
minps
in
fcomip
xor
sub
call
jp
dec
ret
adcl
rcr
ret
test
shr
fidivs
cld
dec
mov
mov
aam
sahf
push
in
mov
outsb
imul
shll
xor
jl
fs
and
cmpb
dec
outsl
stc
lcall
movsb
cli
fcoms
imul
shr
add
cwtl
pop
int3
ja
insb
pop
pop
cmpsb
mov
and
stos
shl
out
mov
pop
sub
mov
fs
iret
mov
push
jo
inc
xchg
out
xchg
push
leave
sub
pop
roll
daa
fcompl
enter
xor
testl
in
pop
into
jnp
xchg
dec
sahf
xchg
inc
pushf
push
roll
pop
mov
push
cmp
loopne
adc
repnz
pusha
cmp
ja
sbb
cs
enter
mov
jo
insb
pusha
mov
out
js
sbb
mov
rorl
jp
xlat
inc
out
rcrl
dec
mov
imul
sub
push
frstor
adc
enter
pop
sarl
push
aaa
das
int
cmp
fs
mov
sbb
jg
stos
mov
not
sahf
push
or
rcl
mov
scas
xor
xchg
cmp
xchg
mov
aam
add
pop
cmp
push
rcrl
out
fldenv
stos
dec
addr16
jne
mov
jl
sub
push
lods
popa
out
leave
inc
xchg
jle
push
rorl
cmp
roll
je
ljmp
cmp
mov
push
pop
ficompl
icebp
sub
mov
mov
xor
repnz
sbb
jo
mov
sbbl
lock
shr
and
popf
movsb
rolb
rcrl
push
shlb
roll
popa
int3
adc
mov
imulb
js
cmp
nop
shll
ja
arpl
ljmp
test
repz
xor
cld
in
stos
loop
push
sbb
cmc
or
adc
fstps
aam
push
pop
test
lret
sub
aaa
adc
cmp
inc
sarl
mov
movsb
sbb
repnz
fildll
or
jp
mov
shll
iret
cmpsb
inc
lods
jbe
sbb
sub
outsb
mov
insb
roll
mov
xor
gs
mov
mov
insb
xor
mov
push
inc
sbb
mov
pop
jbe
subl
pop
dec
inc
mov
push
test
sub
sub
fldenv
mov
mov
xor
clc
mov
pop
sbb
xchg
in
mov
inc
rcrb
and
sub
dec
sti
mov
mov
movsl
shr
movsb
test
mov
aam
lea
das
popf
or
mov
loopne
stos
adc
mov
jne
xor
nop
fwait
push
xchg
leave
seta
into
stos
sarl
fwait
sub
iret
popa
jle
sbb
sub
adc
dec
fcoml
call
mov
adc
pusha
inc
mul
inc
loop
icebp
sar
fdivrp
enter
sub
jne
mov
push
or
mov
arpl
repz
and
cmp
mov
sbb
push
push
test
roll
jle
rcll
pusha
ret
xlat
jecxz
pop
roll
or
mov
adc
inc
jns
daa
imull
test
in
aam
xchg
and
push
and
aaa
adc
or
incl
faddl
xchg
cli
js
or
rorl
lret
ret
fsubs
mov
icebp
sbb
rorl
outsb
and
xchg
fcmovnu
daa
or
shl
or
and
push
data16
push
test
shl
sbb
mov
out
pusha
shl
dec
sbb
push
inc
mov
shl
sub
cli
cmpsb
lret
inc
inc
xchg
aaa
lret
int3
and
fsubrs
icebp
dec
mov
mov
dec
mov
jle
in
mov
and
xlat
jp
dec
mov
push
or
pop
and
shlb
ficomps
mov
daa
ret
pop
add
inc
fistl
imul
mov
stos
rorl
ret
stos
push
adc
pop
jne
inc
mov
dec
lods
mov
aam
inc
adcb
mov
pop
jge
repz
sbb
sar
mov
ret
jno
arpl
sarl
sub
in
loopne
rcrl
inc
fwait
lds
jnp
out
adc
insl
out
jecxz
in
jge
gs
mov
push
roll
shrl
adc
xchg
ret
jl
adc
or
push
mov
fwait
ror
dec
in
xlat
addl
fstpt
jnp
jno
sahf
dec
movsl
insb
push
sub
shrl
mov
xor
cwtl
rorb
add
or
stc
add
rol
xor
pushf
mov
dec
mov
xchg
adc
scas
jno
rcrl
sub
adc
shl
dec
jo
push
enter
test
sarl
cmp
pop
fcoms
adcb
mov
mov
lds
sub
sub
ja
mov
fmul
aad
stos
repnz
or
loopne
dec
push
orb
add
xchg
aaa
mov
fistps
sahf
ret
rol
fcmovu
mov
inc
addr16
int
rcll
mov
pop
fwait
dec
push
out
aad
insb
push
mov
mov
sub
add
js
ss
push
push
cmp
jae
pop
pop
jecxz
mov
rolb
cmc
dec
dec
sub
dec
lds
aas
adc
leave
repnz
aam
je
rorl
insb
icebp
pop
sarl
jae
mov
and
pop
hlt
or
pop
test
add
shll
inc
out
adc
stos
inc
jg
adc
ljmp
scas
jmp
dec
push
test
xchg
jp
movsb
xor
scas
jl
out
jmp
inc
shll
addb
adc
stc
cmp
push
add
push
lahf
loop
stos
sub
test
bound
popf
clc
dec
rol
jecxz
loop
test
stos
jmp
inc
out
sbb
push
or
repz
in
lods
mov
sub
mov
dec
adc
gs
pop
scas
dec
xor
push
fimuls
repnz
inc
ret
mov
pop
out
xchg
or
and
dec
mov
jmp
mov
shll
movsb
das
cmpsb
push
adc
sbb
sarb
scas
push
scas
mov
clc
sbb
orl
pop
sub
xchg
push
cld
fwait
sti
fmul
push
rcrl
dec
aam
movsb
jg
inc
roll
sub
outsl
int3
push
cmp
lods
ficomps
mov
addr16
dec
jp
inc
xchg
mov
rcll
insl
data16
leave
rcl
mov
addr16
mov
sub
push
add
push
cmpsb
ss
xchg
and
aad
mov
shll
cmp
mov
push
sub
jbe
sub
mov
push
mov
xchg
dec
push
jmp
imul
dec
rorl
hlt
movsb
pop
push
push
scas
mov
scas
dec
or
rcrb
js
in
pusha
xchg
push
rolb
rcll
mov
pop
pusha
jae
repz
xor
lcall
insb
jecxz
pop
sarb
xchg
mov
in
sarb
cmc
in
mov
inc
shll
adc
adc
lret
aad
sbb
les
scas
push
negl
out
popf
movsb
mov
add
cmp
xor
cltd
scas
shrl
fs
rcll
push
sbb
popa
mov
jo
shll
in
xchg
rcl
jecxz
test
dec
fincstp
xchg
call
or
stos
addr16
or
inc
rclb
push
daa
xor
mov
inc
xor
ret
cmpsb
mov
aam
and
xchg
rcl
and
in
dec
sarl
fbstp
movsl
repnz
int
jp
mov
fmull
sti
ffreep
outsl
push
push
popf
add
sbb
jmp
daa
jno
dec
clc
sbb
jbe
push
lret
aad
sbb
jecxz
es
icebp
or
shll
addl
cmpb
sbb
stc
dec
aad
sbb
lea
pop
sbb
daa
rcll
cmpsl
mov
test
int3
adc
and
dec
idiv
mov
inc
sti
movsl
and
aam
jmp
jae
inc
pop
push
fwait
shr
sbb
aad
adc
movsb
push
mov
sti
ja
shrl
adc
pop
adc
push
xchg
test
sar
mov
pop
cmp
sbb
inc
sub
dec
sarl
jns
mov
sahf
stos
test
push
pop
push
rol
gs
call
rcl
sbb
mov
sbb
stos
pop
shl
rorl
add
rcll
add
outsb
pop
jae
loopne
enter
jl
xor
js
shrl
loop
fnstcw
dec
movsb
push
push
enter
rcrl
loop
loope
call
jne
mov
xor
lretw
adc
pop
aas
mov
test
push
push
shl
sbb
dec
or
adc
and
push
xchg
adc
pop
mov
push
add
inc
int3
fldcw
jns
dec
rorl
fidivrl
fildl
and
packssdw
nop
shl
pop
lods
dec
cmp
inc
adc
js
add
int3
jmp
cmp
push
sbb
pop
es
mov
push
rcrl
mov
shl
fstpt
ficomps
mov
push
inc
pop
fwait
rcl
bound
xchg
in
rcrl
add
popf
icebp
imulb
inc
decb
xor
xor
xchg
inc
rcll
imul
orb
shl
mov
sbb
test
and
jno
stos
movsl
cld
mov
hlt
mov
pop
cmc
adc
loop
sbb
shr
cmp
sahf
sub
test
mov
and
clts
incb
repnz
push
or
adc
pmaxsw
lock
lods
add
ficompl
mov
cmc
roll
gs
daa
shll
rcrb
mov
inc
pop
inc
fdiv
mov
pop
pop
add
outsl
add
cmpsl
movsl
orl
xchg
out
arpl
out
mov
sbb
int
outsl
cmp
shl
lods
lock
aam
jmp
rorb
stos
push
rorl
in
dec
sbb
out
jmp
movsb
lea
push
shll
cwtl
cmp
xchg
add
fidivs
cmpsl
cld
jnp
xchg
push
jne
not
lds
xchg
xlat
shr
leave
je
inc
push
mov
xchg
fwait
push
test
aaa
xchg
mov
fdivl
mov
cmp
in
xor
push
inc
aam
mov
xchg
test
rcll
jae
lahf
mov
xchg
adc
sbb
mov
gs
outsl
dec
fisubrl
push
mov
shll
and
jns
imul
dec
pop
test
inc
and
fwait
pop
rcll
xchg
push
daa
pusha
ret
roll
movsb
scas
std
mov
adc
mov
mov
lcall
push
pop
jecxz
movsl
rcl
and
pop
movsb
in
ja
sbb
mov
popl
mov
push
sub
js
mov
sub
insb
sbb
fcoms
inc
scas
icebp
iret
add
xchg
jg
das
cmp
xor
mov
xor
scas
mov
or
les
lds
fstpl
test
or
jo
out
cs
sti
sub
lret
lock
xor
scas
test
pop
mov
stos
lea
fisttps
lods
push
repz
jmp
xor
mov
sub
addr16
stos
mov
in
inc
xlat
push
les
xchg
movsb
lret
dec
dec
cli
fdivrl
insl
jbe
jle
call
sbb
out
or
leave
pop
rol
aad
jle
test
popf
stos
dec
pop
cs
aam
add
jbe
in
shr
dec
cmp
imul
and
into
push
addr16
jecxz
mov
adc
out
cmpb
scas
cli
stos
stc
sub
pop
iret
repz
fcompl
jbe
cmpsl
sub
add
cmpsl
int3
push
mov
lds
xlat
in
cld
out
fldt
imul
test
cltd
mov
add
in
pop
mov
stos
xchg
push
lock
adc
push
add
mov
or
movsb
fcomps
inc
shll
cli
jnp
test
adc
ffree
icebp
pop
mov
iret
sub
rcrb
mov
sbb
pop
push
mov
xchg
mov
insb
icebp
sbb
ret
xchg
clc
shll
pushf
rcr
sti
js
sbb
sub
xor
xchg
mov
imulb
xor
pop
sub
in
sbb
mov
ret
pop
xor
loope
inc
push
adc
fsts
xchg
fs
subl
ret
outsb
cmp
test
xchg
dec
push
stos
inc
int
loop
jno
jl
subb
sbb
jb
push
or
cmp
subl
rcr
lock
bound
aam
pop
and
mov
adc
popa
ljmp
ja
repnz
movsl
push
int3
mov
mov
imul
inc
loope
pop
ficomps
fidivrl
mov
mov
scas
or
mov
mov
aam
pop
inc
cwtl
mov
dec
mov
push
icebp
les
sarl
popf
and
rcr
pop
subb
lahf
xor
out
jp
fiaddl
imul
mov
pop
jmp
jg
push
pushf
ljmp
repz
icebp
sarl
call
das
pop
ret
xchg
and
testl
lahf
in
mov
sub
rcrl
ss
rcll
daa
psrad
dec
inc
ror
add
stos
mov
xchg
fnstenv
aam
sbb
adc
push
imull
mov
cmpsb
add
xlat
not
cld
pop
cmpsl
outsb
mov
push
std
xor
push
xor
xchg
inc
mov
pop
xchg
xorl
mov
shll
mov
int3
test
dec
imul
inc
dec
dec
xchg
cmpsb
and
mov
aam
cmp
clc
inc
in
or
adc
sub
arpl
iret
sar
mov
push
frstor
daa
mov
sbb
enter
sbb
xchg
push
ds
std
scas
test
call
fisubrs
mov
pusha
adc
inc
mov
and
nop
pop
adc
loopne
push
daa
cmp
sahf
stos
roll
lret
push
mov
shll
scas
jmp
fsubrl
inc
shll
xor
jae,pn
leave
shl
divb
pop
push
sar
push
prefetch
out
std
sbb
shll
loop
xor
and
outsb
ja
sbbl
lcall
push
shll
nop
lea
imul
mov
add
or
pop
es
xlat
dec
push
lds
cmp
adc
adc
pop
daa
push
inc
clc
scas
lcall
roll
and
in
add
loop
mov
inc
scas
rolb
fdivl
in
das
shrl
add
rol
push
push
std
icebp
mov
roll
push
dec
pop
mov
psrlq
fildl
call
sub
js
test
mov
lcall
sbb
lahf
mov
jo
adc
push
sar
jb
lock
inc
mulb
insb
leave
into
test
rcrl
sbb
or
push
movsl
in
mov
daa
hlt
xor
dec
push
cmpb
ret
mov
addr16
movsl
jae
adc
and
movsl
dec
fstpl
fcomip
enter
stos
xor
test
mov
ror
orl
and
ret
scas
add
mov
jmp
nop
loop
rcll
mov
aam
int3
stos
jbe
dec
es
mov
pop
shll
inc
or
roll
mov
mov
and
andb
pushf
stc
mov
inc
pop
cli
loop
shr
sbb
dec
popf
ret
fmuls
shr
adc
xor
sub
and
add
dec
mov
out
rcrl
mov
mov
dec
jmp
pop
test
pop
sub
jg
cs
mov
shll
mov
jnp
lcall
xor
cmp
sar
xlat
fcoml
or
sbb
aam
cmp
mov
rcr
pop
fisubl
ret
call
mov
cmp
clc
not
pushf
xor
mov
mov
inc
push
xchg
icebp
dec
cltd
fs
andl
lahf
xchg
dec
lock
add
enter
pop
fsubrs
dec
inc
das
ss
sbb
mov
insb
push
and
lret
dec
jo
sub
cltd
mov
pop
mov
mov
adc
enter
mov
pushf
into
inc
xchg
mov
fcoml
inc
adc
sbb
push
addr16
adc
dec
jl
nop
scas
shll
cltd
cmpsl
ret
insl
dec
in
sub
test
push
add
add
mov
int3
cmp
pushf
shll
pop
dec
push
pop
cwtl
sbb
adc
xor
stos
or
fwait
aas
dec
adc
mov
inc
rcr
mov
adc
aam
js
andl
or
stc
into
incb
dec
cmc
xor
sub
push
xor
cmp
rclb
jmp
ja
or
ljmp
adc
repz
add
rorl
cmc
jl
sarl
fwait
mov
mov
stos
clc
fcompl
sub
cmp
data16
push
ss
jns
pop
mov
inc
push
ror
stos
dec
adc
shrl
ss
sub
shrl
mov
std
add
mov
jl
adcl
mov
inc
push
jo
mov
pop
xor
mov
fwait
mov
jecxz
dec
push
insl
mov
push
sbb
inc
sahf
mov
scas
imul
scas
mov
and
clc
mov
jle
or
pop
push
lahf
pop
mov
bound
insb
fcmovu
int3
sti
add
mov
rcll
push
cld
std
jmp
cli
mov
xchg
adc
dec
ror
jne
jge
nop
popf
rclb
add
popa
xchg
push
pop
mov
cmp
sub
test
fcoms
insb
aas
dec
cmp
shrl
aad
xchg
sub
fcom
xchg
testb
pop
shl
push
or
ret
aaa
or
mov
and
rorl
stos
mov
aas
sar
loop
daa
adc
aad
std
mov
test
push
push
hlt
sbb
push
cmpsl
xchg
repz
roll
sbb
push
push
pusha
fsubl
out
iret
iret
adc
mov
adc
lods
mov
daa
roll
jecxz
cmpl
sbb
aaa
in
adc
addr16
xchg
mov
pop
cmp
xchg
xchg
cmpsl
lcall
xchg
adc
and
test
inc
pop
aam
or
lock
mov
pusha
lds
ljmp
jns
pop
shl
test
data16
jl
sbbl
das
jo
fcmovbe
insl
out
jg
xchg
sub
pop
lock
sub
aaa
push
mov
shl
or
cmp
mov
mov
xor
rcll
test
mov
mov
jb
insl
push
pop
in
call
dec
jns
sub
cpuid
pop
dec
dec
xchg
ret
addb
shr
jmp
int
dec
push
test
test
lret
aaa
sahf
jbe
inc
push
in
rcll
loopne
into
sarl
add
mov
clc
sbb
and
shll
jno
fyl2xp1
aam
cmp
pop
repz
cli
dec
shll
cld
aas
ret
or
test
sti
dec
sarl
push
lds
enter
into
rcrw
pop
in
out
sti
mov
or
aaa
dec
jb
mov
sub
and
icebp
adc
jae
mov
pop
pop
shl
in
sub
inc
mov
shll
jnp
jp
or
rolb
insb
mov
fistpl
inc
mov
fmuls
pop
test
cld
insb
xchg
cmpsb
in
pop
push
xchg
mov
cmc
scas
loope
push
mov
movsl
xor
inc
ds
mov
insb
mov
sbb
rcrl
sub
out
dec
and
mov
pop
pop
loope
inc
repz
cmp
mov
cld
sbb
jle
int
sub
mov
cmpsb
sbb
cltd
ljmp
dec
push
sbb
push
dec
stos
and
sahf
jmp
shl
adcb
nop
rcrl
movsl
addr16
shrl
rorl
popa
jl
ljmp
adc
xor
lods
cmp
cs
fsts
add
sbb
cmp
ror
sub
ficompl
inc
scas
push
cwtl
jmp
dec
sub
adc
rcll
aas
arpl
stos
adc
pop
fwait
es
cmp
cmp
mov
inc
mov
cmp
outsb
xor
pop
sti
cmp
mov
lea
shll
jmp
in
mov
and
outsb
je
sub
sub
ljmp
movsb
out
rorl
and
inc
shl
cld
add
mov
shll
adc
push
xor
add
cmpsb
lahf
hlt
pop
rcr
sub
push
sbb
mov
lods
mov
sarb
lret
mov
in
stos
xchg
imul
aam
push
cltd
ss
out
subl
mov
shlb
shl
idiv
jle
gs
fdivs
rolb
cmp
shrl
inc
lods
fidivl
push
pop
mov
cmpsl
cli
iret
inc
sub
lea
lds
test
pusha
arpl
pop
sbb
xchg
sbb
scas
and
push
rcll
add
adc
pop
xor
dec
shr
mov
xorb
cmp
sbb
jmp
rorl
sti
ror
lcall
outsl
adc
xchg
xchg
adc
jne
lea
sbb
daa
add
shrl
leave
lret
inc
cld
push
jno
fs
adc
sub
iret
add
fisubrs
push
rolb
pop
ss
xchg
loop
aad
sarl
pop
dec
testb
mov
mov
and
sbb
mov
stos
cld
sub
dec
mov
icebp
and
sarl
jle
out
shll
push
pop
lahf
out
xor
out
push
sbb
inc
push
repz
pop
shll
dec
sbb
push
mov
xchg
fs
pop
fwait
add
cmp
aaa
fsub
mov
pushf
divl
mov
pop
shrl
or
in
outsl
mov
mov
sti
adc
push
js
lea
fstpl
sbb
fmul
test
push
ljmp
jg
sbb
adc
jns
fldt
shl
test
xchg
fstpl
mov
sbb
roll
pop
mov
and
shlb
adcl
dec
shll
sbb
ror
sbb
xchg
and
stos
or
jno
or
xor
dec
shrl
ret
sub
test
mov
pop
push
sub
xlat
dec
adc
cmc
test
adc
insl
mov
mov
into
adcl
cmpl
roll
ret
pop
add
sarl
push
dec
ljmp
insb
jbe
push
mov
imul
mov
add
aad
mov
rcl
stos
and
cmpsl
shlb
shl
out
pop
outsl
inc
xchg
cli
xlat
and
sbb
adc
in
add
pop
nop
cmpsl
dec
shl
inc
lds
sbb
pushf
out
add
rcrl
nop
cmp
push
xchg
sarl
sub
std
rorl
gs
roll
ja
pop
push
cltd
xchg
insb
repnz
int3
adc
rcll
ret
sub
ds
in
jp
inc
or
popf
mov
and
cmp
push
add
cwtl
jg
push
shll
add
clc
faddl
inc
adc
xchg
sub
insb
inc
sarl
xchg
add
jnp
pushf
push
mov
pop
ret
xchg
fimuls
mov
mov
jnp
sub
shl
pop
mov
xchg
sar
es
pop
mov
ss
repz
dec
stos
test
mov
dec
inc
xchg
std
lret
xchg
jmp
ja
es
push
js
xchg
mov
dec
mov
lahf
aad
and
jmp
cwtl
mov
inc
fcmovnbe
rcll
and
push
addr16
popa
outsl
sarl
std
xchg
jl
push
loop
mov
sbb
shrl
repz
shll
or
rol
mov
ja
iret
into
and
lcall
popa
push
aas
mov
ljmp
shl
in
je
stos
jns
fwait
mov
xor
subl
shll
aad
dec
popf
stos
xchg
out
rcrl
insl
jne
push
inc
fcom
xor
mov
rclb
mov
outsb
jmp
mov
je
dec
xchg
cld
push
repz
fmul
pop
jno
das
insl
sar
cmp
loop
cmc
dec
add
adc
aas
xor
lahf
push
rorl
sub
jle
push
iret
rcrl
and
adcb
xor
or
mov
mov
jne
ljmp
pop
insl
mov
shl
je
push
gs
inc
adc
shlb
in
mov
sub
xchg
mov
push
sbbl
jg
rcrl
and
mov
arpl
repnz
lock
sar
sbb
push
loopne
lret
out
or
push
das
sub
mov
sarb
push
dec
adc
inc
sti
jge
cmp
cwtl
and
sbb
testl
leave
inc
cmp
lahf
lds
adc
cwtl
mov
jne
mov
nop
roll
sarl
outsb
cmc
stos
push
lea
pop
adc
jp
rorl
pop
push
rcll
pop
pop
push
rorl
pushf
aad
xchg
movsb
jae
jno
negb
nop
mov
into
lahf
sbb
or
cmc
xor
sbb
aad
mov
ffreep
outsl
rcrl
lock
mov
int
mov
xchg
sarl
xchg
imul
or
out
sar
mov
pusha
xlat
rol
dec
cmp
ret
shl
std
dec
adc
inc
jae
out
aad
inc
daa
fiaddl
ljmp
movsl
dec
sub
ret
ret
xchg
and
add
in
cmp
mov
roll
insb
loopne
dec
mov
xchg
sbb
pop
popl
push
shll
fsubrs
fst
pop
icebp
cmp
mov
in
mov
and
fwait
add
ror
in
sbb
xor
push
icebp
xchg
std
insb
fst
lock
push
mov
jo
or
out
pop
mov
adc
mov
rcll
frstor
mov
jmp
aaa
das
xchg
mov
rcl
and
mov
jle
mov
mov
mov
pop
loopne
sbb
xchg
mov
mov
cltd
dec
shl
pop
mov
insl
aam
gs
sub
jp
add
sub
and
mov
add
push
jmp
sbb
dec
dec
xchg
nop
aam
test
dec
jbe
lods
xor
sub
outsb
data16
push
jb
or
sub
shll
push
jmp
jb
cmp
pop
daa
inc
cmpsl
cli
ds
repnz
xor
ret
and
push
add
int
int3
pop
dec
or
add
and
fstl
adc
insb
sbb
out
mov
mov
les
and
enter
pop
cmpb
xchg
lcall
das
mov
pop
into
sarl
roll
xor
mov
push
mov
sahf
imul
push
rcl
mov
mov
rcrl
not
andl
dec
pop
push
insl
xor
push
xchg
mov
dec
adc
fmul
cmp
sbb
xchg
rcll
into
xor
mov
push
sub
mov
dec
dec
lods
push
add
movsb
testb
mov
loope
jl
sub
stos
mov
and
sbb
shl
inc
sub
mov
das
mov
cmp
int
and
rorl
repz
or
out
xchg
push
mov
inc
xchg
loopne
push
xor
dec
sarl
ljmp
fisubrl
clc
rcrl
popa
pop
aaa
push
arpl
fs
cmpsb
lret
aas
add
mov
add
mov
cmp
sbb
jecxz
pop
roll
jmp
cmpsl
mov
cmp
shl
push
rorl
cmp
iret
out
ja
sub
mov
push
in
adc
lods
jo
dec
das
push
shll
inc
cmp
push
rcll
xchg
loop
dec
and
sahf
jmp
dec
repz
lret
addr16
idivl
lods
test
leave
push
fs
sub
ret
ret
jmp
cmpsl
xchg
rorl
mov
or
ja
shll
out
push
pushf
sarl
mov
push
outsl
bswap
adc
xor
rorl
call
bound
xchg
push
aam
shll
out
out
mov
sub
mov
xor
push
push
outsb
mov
ss
fld
rolb
insb
xor
jp
inc
push
movsl
mov
mov
rorl
int3
inc
push
add
sti
jno
mov
outsb
test
rorl
inc
cmpsb
psrlq
stc
sbb
roll
cmp
inc
rorl
mov
push
pop
dec
lods
std
rcrb
lahf
int3
test
iret
roll
sbb
dec
xlat
mov
and
cmc
std
adcb
dec
lods
addr16
fidivs
mov
xchg
in
inc
mov
add
std
ror
mov
movsl
push
dec
fwait
jp
lret
mov
xchg
sti
mov
jo
in
sahf
mov
rcl
outsb
mov
pop
sbb
shl
fwait
sub
push
jp
repz
adc
imul
outsb
xchg
jp
mov
mov
pop
mov
mov
push
mov
subl
cmp
ja
mov
inc
shll
or
jg
out
pop
dec
jae
rcrl
not
inc
imul
push
addb
fdivrl
ljmp
sti
lcall
mov
jecxz
pop
cmc
frstor
test
aaa
outsb
clc
push
pop
xlat
in
mov
inc
adc
xchg
divl
lcall
mov
push
icebp
xchg
lcall
mov
icebp
xor
mov
fcmovnbe
push
mov
jns
or
rcll
sub
sub
pop
into
dec
mov
jo
ds
out
rorl
lock
shr
bound
subl
aaa
xchg
mov
mov
xchg
mov
xchg
cmp
push
or
mov
lock
shll
int
inc
rorl
loop
ffreep
outsb
cmc
insl
inc
mov
jp
leave
pop
adcl
shll
xor
add
js
stos
jb
and
aam
inc
aad
push
int
in
xchg
lds
into
push
call
loop
mov
test
cmp
movsb
sbb
or
pop
out
stc
cmpsb
imul
cmp
push
sbb
scas
mov
mov
xchg
call
aam
dec
loop
xchg
lds
in
and
shll
sub
pop
and
push
sub
jl
fwait
pop
rorl
fsubr
rcl
jae
aam
aas
jbe
xchg
roll
int
adc
pushf
xchg
mov
pop
adc
shrl
inc
adc
and
jnp
pop
xor
add
aaa
je
pushl
rolb
roll
inc
cmp
dec
mov
es
xchg
movsb
mov
rol
insb
jl
cwtl
xchg
cmp
cmp
dec
pushf
jne
ds
cmpsl
lcall
xor
pusha
jae
jecxz
mov
xor
cmpsb
adc
or
sar
ret
cmpsb
sbb
pop
adc
sti
cs
pop
int
shrl
push
inc
pop
dec
xor
dec
pushf
fimull
xchg
roll
and
andb
loopne
inc
fs
repz
cmp
rcr
addr16
cmp
fidivl
dec
push
xchg
jl
hlt
ret
repnz
mov
jmp
inc
movsl
jns
xchg
addb
jl
stos
imul
ja
mov
pop
cmp
and
sub
xor
shll
mov
rol
stos
shl
xchg
shlb
dec
fs
rcrl
lret
rol
clc
pop
adc
cmpsb
enter
lock
je
jns
and
push
xorb
push
cmpsl
jne
aas
fcoml
adc
mov
repnz
jmp
test
xchg
ljmp
cmp
xchg
rorl
mov
cwtl
sar
inc
ds
cmc
push
out
push
rcll
movsl
in
dec
xchg
subb
or
or
sub
test
pop
push
cmp
cltd
stos
roll
fimuls
sub
cmp
inc
sbb
test
iret
or
cmc
xchg
mov
mov
jnp
add
push
add
es
xchg
mov
lods
sarb
xor
add
test
pop
roll
rolb
inc
ficompl
sub
scas
xor
fldt
xor
in
aad
subl
in
rcll
clc
stos
ljmp
xchg
mov
outsb
pop
jmp
add
rcll
mov
pop
mov
stos
lahf
movsb
aam
roll
std
jnp
shll
fisubrs
pop
cmc
xchg
and
ljmp
mov
adc
mov
out
in
sub
test
out
push
bound
pop
pop
pop
and
loopne
push
iret
jae
rcrl
adc
stos
push
aas
dec
xchg
or
mov
outsl
jbe
mov
adc
adc
and
in
repnz
mov
cltd
and
inc
inc
push
in
in
push
ret
xchg
jae
sub
xchg
out
pusha
ficomps
xlat
aad
dec
inc
inc
xchg
ds
mov
sti
std
xchg
cltd
sbb
cs
rorl
dec
lcall
lds
aas
scas
xchg
and
push
push
into
adcl
in
push
or
xchg
mov
aas
xor
inc
es
adc
add
xchg
fnstsw
and
sub
fcmovnb
fwait
cmpsb
sub
jns
jmp
rcll
lret
aad
push
fstpl
dec
jle
notb
aaa
jo
in
push
sub
daa
push
jge
inc
shl
push
ret
mov
adc
test
and
xor
or
pop
xchg
mov
dec
push
and
mov
jle
cmp
push
mov
addl
fistpll
dec
sub
call
jp
shlb
sub
jnp
mov
roll
or
jmp
in
lahf
sub
sbb
fnstenv
dec
cmp
push
dec
xchg
inc
imul
mov
pop
push
int3
jle
mov
mov
cmp
and
subb
jb
dec
test
pop
cld
push
push
push
cli
adc
imul
rcrl
addl
xchg
shll
pop
and
sbb
shr
int
cli
jge
ror
or
insb
sarl
shl
mov
pop
fcmovnbe
loop
xchg
push
adc
stos
sbb
mov
mov
popa
in
imul
in
arpl
mov
jnp
sbb
cmp
add
push
ret
mov
rcl
xor
xchg
pop
rorl
popa
dec
xchg
aam
jns
lods
adc
xchg
scas
xchg
pushf
stos
add
pop
add
jnp
xchg
ds
xor
lods
lods
adc
push
push
push
cmc
mov
insb
push
int3
push
enter
pop
add
mulb
das
cld
roll
fs
pop
in
sub
loop
mov
sbb
push
adc
jmp
addr16
scas
cmp
and
lds
sub
push
loopne
cmc
inc
push
lahf
mov
sub
sub
ficompl
mov
dec
mov
xchg
or
lods
lds
fsubrs
std
pop
push
outsb
mov
cmpsl
add
pop
push
and
mov
ficomps
cmp
sub
movsb
or
dec
and
js
scas
xor
je
xchg
mov
js
sub
outsl
aam
dec
les
sbb
es
cli
insb
popf
scas
jle
rcrl
idivl
incb
inc
fdivrl
adc
mov
repz
and
scas
outsb
jmp
inc
pop
xchg
lock
nop
mov
repz
cmp
cmp
sar
dec
fidivrl
fidivs
outsl
mov
adc
mov
jmp
lahf
into
rcl
out
xlat
lret
rcll
cmp
pop
or
jne
push
roll
xor
or
and
xchg
add
pop
mov
shrl
in
and
mov
in
roll
ret
div
xor
push
and
rorl
roll
sahf
std
mov
in
cmpsb
jne
pop
loop
xchg
and
push
inc
pop
jecxz
mov
mov
testb
pushf
adc
rcrl
jbe
lds
cmp
or
notl
xchg
cmp
inc
shlb
clc
xor
movsb
mov
into
adc
addb
subl
cmp
stos
icebp
fimuls
rorl
xchg
fnsave
ret
push
push
roll
sub
popa
leave
std
popf
mov
sti
lret
in
pop
sub
xchg
rcll
mov
rcr
mov
or
mov
cwtl
rcl
jnp
jp
ja
jmp
les
sbb
pushl
js
or
mov
jae
into
ret
call
mov
push
rcl
ja
jp
dec
jbe
shrl
sbb
hlt
shrb
mov
lret
lea
jmp
or
jb
inc
pusha
pop
add
pop
sbb
ja
sub
cmp
aam
daa
sub
adc
ja
pop
aam
sub
cmpsb
and
int3
call
pusha
in
push
mov
xchg
cmp
mov
sbb
fdiv
jg
push
into
sahf
movsb
icebp
test
lods
adc
nop
xor
js
fisttpl
jp
jns
xor
out
rcll
fnsave
rcrl
js
push
mov
and
push
mov
rorl
bound
test
dec
aaa
cld
sarl
stos
push
push
cmp
roll
cmpsb
xor
push
pushf
jle
xchg
lea
mov
shll
je
ss
sbb
dec
push
adc
rcr
lahf
les
shr
lock
repz
sub
xlat
out
ret
fcom
add
std
jmp
rorl
xor
aam
ss
dec
jbe
xchg
fsubrp
loope
arpl
push
cmpsl
into
mov
mov
mov
and
test
and
pop
push
pop
jns
dec
cli
sbb
sbb
imul
rol
mov
jp
int3
add
jge
mov
sub
lds
push
jg
pop
sub
popf
pop
data16
jge
pop
fdivrs
js
mov
xchg
ss
jae
adc
mov
pop
push
xor
in
aam
in
inc
gs
sbb
jnp
hlt
mov
push
add
push
jno
scas
shll
add
sub
xchg
push
pop
mov
call
rcrl
push
adc
dec
nop
pushf
mov
dec
mov
xor
and
sub
incb
sarl
sarb
enter
pop
stos
vpor
shll
das
pop
cmp
frstor
fwait
lret
jl
add
sub
mov
sarl
push
pop
ficompl
rorl
adc
lahf
stos
in
xchg
popf
sub
loopne
pushf
ret
sarl
insb
sub
rcr
repz
push
mov
repz
je
lock
push
sbb
inc
rcll
add
mov
jg
iret
mov
ljmp
inc
cmpsl
stos
sub
das
xchg
aas
jmp
mov
mov
sub
lret
cmp
mov
fst
dec
mov
sub
sub
pop
push
cs
sbb
imul
shr
shll
push
in
adcb
sbb
sarl
xor
inc
push
shll
jno
test
push
sub
stos
test
mov
fmulp
inc
xchg
xchg
sarl
mov
pop
sub
pusha
in
xchg
cmp
xor
shll
bt
mov
cmpb
je
stos
jns
push
or
iret
jp
fwait
pop
in
ss
push
lods
das
cmp
jns
bound
add
sar
loope
mov
test
mov
cmc
loopne
xchg
call
inc
inc
cmp
mov
rcrl
lock
push
inc
ret
sbb
jmp
sbb
rolb
arpl
lea
xchg
xchg
push
in
cmp
clc
out
into
adc
rorl
in
mov
mov
comiss
xchg
ljmp
mov
cmpsb
push
shl
imul
push
iret
mov
adc
xchg
mov
fsubrl
test
icebp
leave
fldl
push
ret
push
mov
sub
movsl
jae
filds
enter
xchg
push
push
sub
jl
aad
loope
jae
sarl
mulb
lret
shll
call
xchg
mov
into
inc
sbb
push
mov
sub
loop
rcr
std
and
mov
mov
push
aam
hlt
daa
rorl
lea
push
push
out
ret
sub
or
xlat
sbb
rclb
movsl
adc
add
cltd
iret
jne
shll
movsb
clc
insb
lcall
xchg
sub
fucomp
arpl
dec
outsb
bound
push
in
push
mov
push
or
xchg
shr
scas
sbb
es
mov
fcoms
test
push
cmc
shl
cs
fwait
rorl
imul
ljmp
jns
mov
mov
jp
add
mov
aas
loope
jecxz
ja
out
stc
push
push
inc
roll
arpl
out
xchg
into
test
cmp
jmp
push
mov
pop
call
add
push
cmp
mov
mulb
push
nop
mov
dec
mov
xchg
fistpll
insb
fisubrl
ret
push
movhps
push
push
mov
dec
or
rep
ret
dec
add
push
cwtl
jmp
sub
push
dec
jns
fcom
xchg
fwait
pop
jbe
jmp
shr
adc
scas
imul
push
push
mov
xor
iret
shrl
mov
nop
jb
sbb
jbe
inc
roll
cmc
adc
sbb
or
jp
notl
add
test
mov
stos
dec
fs
loop
fstpl
xchg
and
cmc
std
rcrb
rcll
imul
mov
mov
pop
sbb
mov
in
out
adc
rcll
test
ret
clc
outsl
jmp
dec
inc
std
push
xchg
mov
jnp
pop
xlat
sahf
dec
aam
push
ret
inc
dec
mov
mov
fcom
mov
shrl
jg
mov
jp
and
aaa
rcll
mov
out
in
fwait
pushf
enter
pop
push
fstl
fnsave
inc
mov
clc
sub
pop
in
arpl
add
xor
scas
shll
dec
fistps
shl
push
sbb
das
mov
adc
cmpsl
dec
mov
ror
mov
out
sub
pop
cmp
cmp
xor
pop
lods
shrl
sbb
xlat
jmp
or
js
loopne
bound
mov
dec
xor
pushf
iret
jmp
cmpsb
test
rcr
dec
sarl
mov
jg
popf
lock
xor
lods
jecxz
inc
dec
mov
mov
rclb
ja
pop
xchg
push
inc
ror
arpl
pop
testb
and
jmp
loopne
mov
clc
aas
push
jbe
push
repnz
mov
xchg
cmp
fld
insb
rol
add
or
pusha
fwait
pop
icebp
dec
mov
repz
cmpsl
mov
mov
fwait
scas
insl
lret
shll
or
pop
ja
xchg
dec
mov
mov
jg
test
lret
insb
jae
lods
je
cmc
mov
rcll
mov
rcll
inc
int3
pusha
rcrl
clc
dec
pop
shrl
mov
rol
mov
cld
pmaxub
rorl
inc
lret
pushf
xchg
stos
mov
fs
or
roll
cmpsb
ss
shl
mov
lds
mov
or
enter
or
add
xor
lret
mov
inc
mov
push
mov
orl
push
inc
inc
or
mov
mov
mov
arpl
adc
xchg
sub
cmc
out
shll
mov
pop
xchg
cmpsl
push
nop
push
push
fsts
sti
adcl
mov
sar
cli
or
int
pop
rorl
jl
cmpsb
xchg
filds
jg
add
test
sbb
shll
lret
cmp
sub
push
imul
jns
push
lret
roll
outsb
inc
jo
rcl
cmp
inc
movsb
mov
and
std
adc
outsl
pop
aas
sar
dec
pop
test
mov
mov
loopne
cmpsl
std
mov
shll
hlt
and
cmc
out
js
and
imul
pextrw
xor
es
or
fstp
pop
pusha
xchg
jle
xlat
pop
pop
std
roll
pushf
push
mov
adc
dec
inc
push
daa
and
jecxz
adc
mov
adc
rcrl
xchg
xchg
in
shl
push
inc
mov
or
js
xchg
fs
in
rcl
lods
sbb
mov
repnz
mov
adc
xchg
xor
stos
mov
pop
jns
loop
test
mov
push
rcr
sbb
fcos
sarl
cmp
cmp
stc
push
lcall
pop
bound
mov
call
aaa
cmc
jmp
stos
add
rorl
or
push
xor
dec
push
andl
jle
ror
pop
mov
ja
push
insl
shll
lret
dec
push
push
or
out
scas
push
shr
mov
aad
pop
mov
sbbl
jg
dec
add
pop
sub
jmp
aam
rorb
xchg
aam
jno
jbe
shll
imul
xchg
into
repnz
inc
or
int3
push
mov
cmpsb
sbb
xchg
scas
jbe
jb
stos
push
push
stc
fcoms
fildl
fwait
or
cli
scas
movsl
push
rcrl
lods
inc
ret
movsb
insl
imul
xchg
mov
and
pop
in
lds
cmpsb
aas
xchg
adc
out
dec
xor
push
daa
pop
dec
out
and
aam
cmc
mov
movsl
pop
jecxz
shll
rcrl
in
mov
sub
sbbl
inc
pop
int3
pop
sbb
adc
mov
jnp
fstps
sub
sbb
xchg
rorl
push
jbe
pop
rcl
or
inc
pop
lods
push
mov
pop
push
pop
pop
mov
repz
fisttpll
fldt
ja
fwait
daa
out
shrl
in
xchg
int
repz
popf
orb
mov
push
mov
mov
popf
push
mov
enter
dec
xchg
jo
xchg
loope
testl
jns
outsb
data16
push
pop
ljmp
mov
cmp
int
and
ja
shl
push
add
rcrl
sarl
loopne
sbb
es
addr16
imul
jl
js
push
mov
mov
inc
lods
sbb
and
addr16
mov
add
xchg
lea
dec
sub
popf
xchg
enter
roll
add
movsl
xor
push
pop
test
repnz
push
lahf
pop
fwait
cmpsl
rcr
insl
cmp
xor
les
or
popf
stos
roll
xchg
decb
pushf
jge
inc
dec
sub
push
adc
stos
mov
and
rorl
jmp
xchg
rorl
ljmp
clc
push
stos
mov
into
sub
ret
ds
xchg
adc
push
adc
ljmp
push
lahf
push
nop
sub
and
push
lods
cmpsl
sarl
push
xor
adc
faddl
je
stos
push
mov
clc
mov
pusha
dec
lods
je
sub
orb
mov
cld
gs
mov
rorb
lcall
mov
inc
or
lahf
mov
pop
rcll
inc
orl
roll
dec
imul
lea
lcall
sbb
dec
push
mov
push
mov
push
or
test
xchg
stos
rcrl
add
cs
adc
push
push
mov
insb
or
les
repz
push
pop
bnd
jae
popf
mov
fidivs
mov
jle
ret
jne
idivl
nop
mov
subl
dec
mov
fwait
lret
pusha
scas
sub
cmp
cmp
and
or
faddl
push
clc
push
jp
add
rorl
jae
dec
mov
fildll
ja
jmp
jb
int3
xor
mov
rcrl
mov
jl
rorl
and
inc
push
pop
mov
xlat
sbbl
shl
add
mov
lea
aad
shr
xchg
push
xor
fsubrs
rcl
fisttpl
inc
test
in
jno
adc
mov
call
rcrl
or
shl
mov
and
stc
shll
outsb
xor
in
or
push
xchg
imul
xor
dec
ud2
popf
sbb
adc
sti
push
add
icebp
pop
loop
jg
lods
push
shll
out
shll
cmp
jns
jno
jmp
data16
rolb
mov
sar
sarb
push
das
cmpsb
xchg
shlb
lods
test
repz
lea
push
sub
pop
repz
jle
lret
sbb
rcr
pop
rcl
mov
dec
push
mov
xor
aaa
xor
cmp
aam
jp
sub
nop
dec
inc
cmp
jne
lods
out
jmp
cmp
dec
push
and
jne
sarl
ret
in
and
sub
into
shrl
cmp
dec
lea
rcll
fstp
push
fwait
repz
stc
and
pop
ror
adc
sbb
mov
add
pop
sub
rorl
jmp
stos
dec
iret
xor
pop
and
sub
out
xor
jge
les
cmp
rorl
mov
sub
push
movsl
ret
ret
int
adc
sbb
out
in
mov
in
mov
sbb
or
mov
jnp
les
push
fmull
mov
pushl
mov
lret
and
mov
not
pop
shll
clc
mov
insb
shr
cmp
xchg
loope
mov
stos
or
inc
pushf
in
stos
popa
pop
data16
mov
xor
shl
mov
daa
mov
rcrl
stc
enter
pop
sarl
icebp
or
ror
or
mov
sar
mov
lret
jmp
std
sub
jmp
outsl
test
jecxz
jnp
fildl
adc
scas
add
arpl
xchg
adc
jo
add
mov
add
mov
leave
int3
addr16
mov
bound
rcll
push
popa
cmp
lods
rorl
xorb
ljmp
mov
inc
add
cmp
cmp
add
repz
sub
stos
out
push
lods
aas
pop
lock
xchg
mov
scas
and
mov
cmp
mov
jae
es
shll
xlat
scas
mov
push
xor
mov
cmpsl
mov
jns
test
lods
mov
jmp
sub
xchg
pop
ljmp
and
shll
test
mov
subb
cmp
bound
or
shrl
lahf
rorb
adc
shlb
sti
cmpsl
mov
fwait
seta
stos
roll
movsb
push
test
or
lcall
ss
pop
lods
out
push
fwait
inc
sub
inc
mov
or
pop
lds
clc
gs
add
mov
fidivrl
mov
aad
mov
mov
mov
push
and
mov
test
stc
arpl
rol
sub
jo
loopne
xor
ror
jae
sar
xor
sbb
andb
sub
adc
rcl
aam
lcall
mov
in
shll
in
mov
std
xchg
cmp
aad
insl
mov
push
adc
cmp
jne
shll
fstl
dec
fwait
adc
leave
push
ja
push
sub
out
aam
aaa
pushf
and
stos
jae
push
int3
push
ficomps
push
mov
mov
adc
jmp
jle
sub
fisubs
in
pop
mov
pop
stos
sbb
xchg
bound
outsl
fcom
sti
loop
imul
xor
pop
mov
push
mov
hlt
lcall
lea
subb
push
rorl
popa
xlat
push
shll
es
imul
roll
push
cltd
pop
fcmovbe
mov
lcall
mov
jecxz
sub
ret
scas
in
mov
adc
in
add
mov
test
or
imul
lods
cmp
push
das
mov
ret
sbb
push
jg
push
mov
xor
rcrl
lret
rcll
shlb
xchg
sbb
jg
mov
cmp
ljmp
lock
xor
test
into
aam
sub
cmp
pop
jns
sub
out
push
mov
in
mov
sbb
xor
push
push
insb
xchg
jl
push
stos
dec
adc
add
xchg
rcll
in
out
xchg
cmp
cli
push
sbb
xchg
jnp
inc
jae
push
dec
mov
xchg
mov
adc
ftst
insb
dec
xchg
iret
data16
adc
jbe
push
push
mov
mov
outsl
stos
xchg
mov
mov
xchg
in
and
shll
jb
dec
push
roll
sub
cmp
ret
ret
shrl
add
adc
rorl
xlat
fcmovnb
xchg
mov
and
stos
sbb
add
mov
out
bound
loopne
mov
xchg
shrl
rcll
rorl
xchg
pop
push
xchg
loopne
fs
sarl
inc
movsb
inc
aam
inc
xchg
cltd
mov
insl
rcrl
data16
sahf
clc
shrl
loopne
sbb
sarl
xor
psrlq
inc
dec
aam
mov
adc
dec
shrb
xchg
cmp
and
jmp
pop
add
pop
sahf
pop
cld
call
xor
ror
dec
sub
ret
arpl
dec
mov
jae
xor
ljmp
sub
sub
mov
dec
sti
in
cmp
dec
xchg
xchg
rorl
mov
pop
push
xor
sbb
push
jg
dec
popf
fwait
imull
and
fsts
shl
jae
clc
push
bound
push
sub
in
addr16
mov
cmpb
mov
popa
mov
in
xor
movsl
cmp
lds
andb
clc
rcr
or
ficoml
pop
or
loope
cwtl
dec
push
sub
inc
sarb
dec
call
repnz
pushf
sbb
push
cmp
push
dec
mov
popf
jecxz
cmpsb
push
pop
jl
sbb
inc
js
xor
inc
scas
adc
repz
test
pushf
jmp
call
push
push
aam
shlb
jb
insb
arpl
mov
cmp
adc
shl
sahf
xchg
incl
or
roll
mov
jge
push
xchg
cmp
push
rol
fs
inc
cmovl
push
add
xchg
inc
xor
imul
pop
push
testb
sub
push
xor
mov
iret
add
inc
loop
gs
les
mov
add
mov
rorl
js
push
iret
jbe
cvtps2pi
in
int
jns
mov
or
rolb
das
cmpsl
cmpsb
mov
nop
lea
lahf
push
imul
int3
or
roll
pop
mov
rolb
shr
dec
mov
sbb
sbb
pushf
roll
ret
jge
std
jp
push
sarl
cltd
pop
and
lret
mov
rcll
mov
and
roll
nop
mov
jb
repz
leave
cmp
or
rorl
jg
in
lret
sub
iret
jmp
rcll
rcll
xchg
rcr
sub
call
aad
adc
jae
rep
testb
or
jmp
insl
or
inc
xchg
sub
xchg
jp
jae
mov
xor
andl
push
fwait
rorl
pop
or
hlt
sar
out
push
shlb
xor
push
mov
xchg
movsb
pop
or
jo
rcl
rolb
inc
mov
sbb
dec
adc
loope
pop
daa
mov
loopne
lcall
push
jecxz
sarl
xor
cmp
shll
outsb
pop
insl
fwait
in
mov
pop
xor
sarl
loopne
popl
rcrl
pop
push
popf
fwait
test
push
pop
icebp
inc
fisttps
mov
jecxz
xor
push
sub
fcmovnbe
jbe
jns
iret
popa
test
test
rcr
pushf
shrl
jo
dec
mov
xchg
xchg
std
pop
out
out
dec
call
mov
dec
rcll
aaa
or
mov
mov
jmp
cmp
sub
sarl
mov
int3
cmp
fidivrl
sahf
dec
lock
mov
jp
in
sbb
xchg
mov
orl
stos
shrl
mov
jb
imul
aam
add
rcl
mov
xchg
or
mov
shrl
add
xor
inc
shll
adc
shll
pop
lock
or
addl
stos
push
cli
shrl
sbb
or
xchg
add
sub
add
inc
inc
xchg
lds
fnsave
out
loop
sahf
pop
cmpb
out
pushf
adc
push
mov
dec
jg
push
push
pop
jle
xchg
aam
cld
adc
negb
add
ljmp
or
push
cltd
jnp
mov
mov
push
std
fnstsw
insb
roll
cli
mov
into
inc
imull
mov
scas
mov
pop
inc
mov
mov
pop
xchg
subb
xchg
rcrl
inc
pushf
shll
mov
ror
xor
jmp
sarl
pop
dec
mov
dec
sti
push
cmp
rcrb
roll
or
das
xchg
vpcmpgtb
into
faddl
lret
rcl
sub
fdiv
mov
mov
sbbb
dec
push
mov
and
sbb
nop
add
loopne
push
cmp
shrl
adc
ficoml
jmp
sbbb
jnp
add
insl
das
movsl
pop
repnz
jecxz
pop
cmpsb
mov
push
sbb
enter
rcr
cwtl
test
pop
sub
lret
ficomps
mov
and
je
add
xchg
fwait
outsl
lret
inc
dec
roll
les
pusha
es
rcll
popf
sub
pop
mov
mov
xor
dec
test
adc
popf
mov
inc
pop
jmp
shll
dec
clc
dec
xlat
js
jae
test
mov
push
shl
ds
imul
adc
aas
xchg
jbe
shl
or
test
stos
sub
test
test
ret
scas
sub
prefetch
or
rep
inc
test
stos
rcr
pop
jo
mov
sub
push
rsqrtps
sub
rorl
add
cmp
add
xchg
push
divb
imul
icebp
cmp
pop
or
das
inc
jb
outsl
mov
and
jae
shl
out
test
mov
roll
scas
dec
pop
rorl
clc
jo
sub
xorl
dec
xchg
pop
xchg
repnz
sub
leave
dec
xor
push
fwait
jp
sbb
scas
insb
movsb
push
or
push
push
rcl
std
lods
mov
cmp
rcll
adc
cmc
push
xchg
and
jne
pop
ljmp
je
add
push
or
or
roll
xchg
in
jb
push
cmc
pop
sbb
stos
sub
mov
cmp
jae
push
movsl
inc
test
cmp
adc
incl
test
loopne
aas
mov
jb
sbb
in
push
in
mov
rcl
adc
jg
mov
pop
lcall
jmp
cli
lea
rcll
mov
inc
push
jo
pop
sub
add
mov
push
mov
test
daa
xor
lcall
sub
and
mov
sub
mov
shll
inc
aam
int3
inc
xchg
jbe
js
bound
sbbl
push
mov
xor
icebp
enter
jg
aas
pop
mov
not
shll
lods
jns
repz
test
es
rorl
stos
sbb
shrl
mov
je,pt
push
out
mov
stos
lock
jno
test
aaa
xchg
xchg
stos
sub
shl
mov
and
es
mov
nop
mov
adc
mov
jno
sarl
call
fildll
mov
fs
jp
enter
leave
mov
fadd
adc
add
push
pop
in
jmp
mov
dec
iret
mov
jl
sub
push
dec
in
loopne
jmp
jp
into
push
aam
jecxz
or
lahf
fs
xchg
shl
shlb
shl
stc
xchg
mov
pop
jecxz
dec
cli
lods
and
hlt
sbb
jae
ret
mov
add
int3
outsl
je
and
lds
into
add
shll
aad
shll
call
xchg
cmpsl
adc
dec
movl
and
ror
adc
inc
ds
pop
movsbl
lds
lods
push
mov
jnp
cli
adc
arpl
push
push
mov
inc
out
xor
rorb
or
js
mov
cmpsl
pop
sbbb
jns
js
shll
adc
push
pushf
popa
mov
pop
scas
cs
shl
mov
mov
add
popa
sub
xlat
inc
xchg
dec
fistpl
enter
pop
shll
lret
imul
xor
sub
lahf
adc
aaa
xchg
mov
jns
push
add
sbb
dec
mulb
rcll
iret
jle
lcall
mov
cmp
jo
outsl
push
adc
add
sbb
into
fcmovbe
jle
pusha
jl
sbb
mov
popa
cmpsl
xchg
inc
lods
mov
inc
sbb
movsl
add
pop
faddp
xchg
mov
imul
repz
cwtl
por
jecxz
dec
je
aas
mov
repnz
push
je
rolb
mov
out
inc
shl
aad
es
into
popf
rcrl
dec
rcll
cmpsb
xor
inc
jne
adc
push
sbb
movsb
and
movsl
mov
shl
jg
ljmp
xorl
std
jae
jno
jnp
jg
test
ds
into
mov
adc
cmp
cs
es
insb
jmp
sub
test
push
outsb
cmp
sar
rcll
add
add
cmc
xchg
aam
push
into
cli
stos
shrl
orl
dec
mov
pop
imul
jl
aaa
mov
cmp
jmp
negl
in
enter
shlb
fnstenv
inc
or
push
mov
and
mov
addl
sbb
notb
mov
sahf
out
push
or
fnsave
cmpsb
shlb
sub
mov
mov
ret
clc
imul
xchg
fcoml
lret
push
test
cltd
xchg
sub
mov
es
jae
std
mov
push
flds
lods
out
mov
xor
cmp
cwtl
add
adc
loope
mov
in
nop
mov
ret
add
adc
push
insl
inc
push
loop
lret
pusha
sub
sbbb
mov
push
cmp
pusha
fcoml
fcomps
push
push
lcall
push
out
xor
push
jmp
jmp
xchg
rorl
sub
and
loop
dec
sbb
pop
popf
sbb
lret
mov
mov
loopne
push
mov
subb
or
push
out
stc
stos
inc
pusha
fidivl
in
inc
fwait
jge
mov
adc
or
push
daa
popf
push
lcall
adc
mov
roll
fucomi
dec
shl
outsb
insl
in
adc
inc
inc
sbbl
jae
jae
jmp
les
sbb
push
out
jg
lods
xchg
push
icebp
jae
aas
ret
mov
call
or
jns
push
mov
test
rcl
inc
jne
ret
shll
fcmovnbe
out
and
xor
ror
roll
scas
push
ds
aaa
sbb
ss
jecxz
gs
aam
mov
loope
xor
adc
jle
jmp
mov
mov
push
popl
ror
shrb
mov
ljmp
mov
and
push
xorl
fcomps
std
shr
shl
dec
sub
sbb
push
mov
cwtl
movsb
in
scas
pop
xchg
imul
lret
dec
sti
mov
mov
xchg
and
pop
mov
mov
stc
push
sub
out
fmuls
cli
pop
dec
shll
ret
sub
push
lds
xor
mov
dec
pop
mov
int3
pushf
pop
shll
mulb
out
popf
scas
pop
push
rcrl
jge
sub
mov
dec
sub
dec
rcl
addl
pop
adc
push
enter
adc
pop
shll
xchg
dec
roll
test
pop
mov
jnp
cs
push
rcr
inc
or
xor
shlb
loopne
cld
mov
push
in
mov
mov
insb
shrl
sub
adc
cwtl
pop
mov
xlat
insl
mov
inc
jno,pt
dec
cli
call
shll
sbb
shll
or
mov
pop
lret
shrl
das
fcoms
jle
sti
mov
mov
add
push
test
xlat
int
loope
cli
dec
inc
and
scas
gs
pop
and
push
hlt
xchg
outsl
mov
add
loopne
sbb
mov
jecxz
shll
mov
fcmovb
add
roll
add
and
push
adc
out
movsl
rcr
mov
mov
rol
cmp
je
xor
push
mov
leave
inc
cmp
mov
pop
insb
mov
rcll
sub
inc
jb
cwtl
loopne
inc
mov
or
sarl
mov
mov
popf
ja
adc
mov
movsl
xor
sub
adc
adc
jge
aaa
push
fwait
mov
into
xor
jmp
xchg
pusha
dec
in
dec
outsb
repz
mov
push
xor
lcall
adc
test
fwait
add
xchg
repz
das
int
cmpl
xchg
push
int3
rcr
test
sbb
shl
sub
stos
mov
loop
xchg
xor
je
sbb
push
lods
rolb
sub
xchg
mov
or
fincstp
fildll
push
gs
inc
rol
repnz
jmp
stos
xorb
lcall
les
xchg
xor
cmp
mov
loopne
push
jecxz
imul
cmpsb
dec
ror
mov
jb
pop
scas
or
jge
cmp
xor
mov
rcll
in
sbb
shrl
push
hlt
xchg
mov
adc
add
imul
sbb
cmp
cmp
cltd
rcll
jg
xchg
mov
sub
add
or
mov
stos
push
aas
push
imul
mov
cs
decb
ret
pop
push
int3
flds
pop
rcll
xchg
not
jmp
xor
incl
pop
movsb
rorl
inc
repz
rcll
popf
mov
stos
pop
fstp
loop
pusha
and
and
rcll
mov
mov
mov
or
mov
push
test
pusha
xchg
mov
sub
shr
inc
push
cmp
pop
adc
ficomps
daa
add
lcall
inc
mov
and
clc
push
jp
lds
mov
xchg
mov
or
and
shll
loopne
fcom
cld
cmp
push
lahf
outsb
icebp
sbb
cld
pop
push
gs
xchg
test
cmp
sbb
sbb
ret
repz
fstpl
lcall
push
aas
stc
out
mov
cmp
push
lock
subb
jne
stos
pop
dec
sahf
or
roll
mov
das
mov
pop
push
jle
mov
bound
pop
push
push
cmpsl
dec
inc
sarl
sub
fucomip
fcmovu
xchg
insl
rcrl
call
jp
jl
cmpl
add
pop
jno
add
inc
mov
xchg
mov
cmp
jbe
rorl
fsubr
lea
mov
gs
jmp
xchg
mov
andb
shrl
pushl
add
int
push
jno
cli
movsl
fmull
sti
ret
fwait
jl
roll
mov
and
rorl
pop
aas
lds
cmpsl
shll
arpl
std
out
testl
xchg
sarl
scas
cmpb
mov
into
roll
or
pop
sub
push
xchg
bound
adc
test
cli
pop
jo
js
in
push
mov
and
repnz
jnp
mov
rcrl
pop
mov
jno
xor
shlb
adc
push
mov
ljmp
aam
add
mov
and
pop
mul
dec
push
push
xchg
xchg
fmull
mov
sub
push
jl
mov
cld
rorb
pop
out
stos
lods
call
pop
dec
das
xor
mov
cmc
mov
sahf
push
sub
shll
sarl
insl
dec
scas
imul
scas
add
jecxz
mov
xchg
jmp
cmpsb
leave
ret
loopne
out
add
push
sbb
mov
push
addr16
out
ficoml
jg
cmp
shll
test
repnz
lods
pusha
add
adc
xor
xor
sbb
cmp
pop
js
shrl
jge
rorl
sub
sbb
roll
test
negl
je
sub
cmp
leave
add
sarl
pop
push
jae
mov
and
divb
lahf
mov
sub
add
jo
roll
test
and
mov
out
cli
mov
ljmp
mov
cbtw
jno
push
push
cld
shrl
inc
xchg
cmc
rorb
adc
add
or
addr16
negl
and
test
shl
ret
cmp
pop
or
push
push
std
dec
divps
or
mov
stos
inc
rcrb
xchg
xchg
ss
mov
jnp
js
sub
or
add
or
rcl
out
aad
mov
mov
ret
cmp
pop
shll
rcrl
xchg
or
call
jne
mov
sarb
push
pop
adc
imul
sbb
movsl
jge
cmp
clc
fwait
out
test
xchg
leave
add
push
pop
sahf
xchg
push
add
add
mov
push
mov
sub
jae
stos
call
in
adc
decb
mov
nop
mov
sbb
ror
sub
or
sbb
lret
push
bound
in
les
inc
rcr
insl
pop
sbbb
fcompl
aad
and
jae
lret
out
shl
push
adc
mov
notl
std
mov
int
jmp
movsl
bound
adc
pop
mov
outsl
pop
dec
ret
dec
pusha
lcall
cmp
shrb
shl
push
int3
test
mov
mov
or
xlat
cmpsb
mov
add
push
mov
stos
xchg
cli
inc
cld
push
pop
and
xchg
in
inc
adc
fwait
ds
andb
sahf
sub
loope
outsb
and
push
pop
sub
aad
ss
push
in
sarl
inc
jp
in
inc
dec
adc
repz
and
sbb
fadds
xlat
push
insl
out
icebp
js
pop
jg
gs
repz
xor
xchg
insb
rcr
out
ficoml
jns
xor
jne
data16
sbb
mov
loopne
scas
repnz
call
out
shr
push
bound
aam
inc
sarb
mov
imul
adc
hlt
jae
mov
fldl
shr
jno
aaa
jle
iret
pop
mov
ljmp
fsub
enter
and
filds
cli
insl
push
jno
shr
add
stos
jp
aas
inc
cmc
orl
and
ret
sub
iret
movsb
inc
jmp
shll
dec
adc
shrl
jbe
dec
push
in
and
adc
imul
ja
add
push
roll
pop
int3
mov
sbb
shll
adc
mov
cmpsb
ds
stc
add
sub
sbb
imul
inc
add
lea
dec
int3
mov
ja
vpsrlq
mov
mov
and
mov
jge
mov
pushf
dec
sbb
dec
and
mov
js
call
push
cmp
mov
mov
fdivl
and
jnp
mov
sahf
cmp
lods
add
lahf
fwait
into
into
xor
mov
stc
inc
xchg
push
and
mov
xchg
pop
push
cmpsl
dec
rorl
leave
sub
jecxz
lret
xor
out
adc
ret
and
push
lods
push
mov
mov
test
sub
pop
outsl
out
mov
rcll
inc
enter
pop
push
or
leave
loope
jecxz
das
xchg
sarl
xchg
push
fs
jnp
xchg
lret
lcall
int
ljmp
fisubl
xor
mov
or
and
adc
inc
xchg
fs
push
cmp
mov
push
aad
stos
fldenv
sub
sarb
stos
sub
mov
popa
mov
rcl
cs
movsl
movsb
fcoml
add
dec
cmp
and
iret
shll
xchg
imul
sbb
cmpsl
test
dec
bound
xchg
bnd
je
dec
push
fcomps
dec
mov
data16
es
nop
add
pop
fimull
adc
dec
cmpsl
fcompl
xor
mov
cmpsb
cmp
dec
and
shr
pop
cmp
inc
ljmp
push
repz
call
int3
imul
rol
jo
adc
insl
xchg
rcrl
lcall
xchg
js
sub
mov
dec
cmp
push
rol
inc
sbb
mov
push
jnp
inc
sbb
stos
xchg
ret
xchg
mov
mov
push
in
arpl
sub
mov
or
dec
gs
stos
xor
mov
mov
inc
xchg
loope
mov
pop
lahf
imul
rcrl
mov
into
loopne
xchg
cmpsb
dec
test
mov
arpl
xchg
movsb
insb
adc
test
xor
stos
mov
inc
pop
or
insl
push
in
xchg
adc
dec
adc
push
cmp
xlat
rclb
js
test
in
lcallw
mov
dec
rcll
cmp
shl
fiadds
adc
push
inc
xchg
xor
push
shll
dec
dec
add
fsubp
leave
shl
add
xor
lret
test
adc
vsqrtps
mov
ret
push
rcrl
push
xor
inc
les
test
imul
lcall
mov
xchg
xchg
insl
aad
sbb
adc
rcl
loop
sahf
mov
sub
icebp
push
mov
dec
imul
dec
xchg
stos
inc
or
or
and
out
and
push
ss
xchg
imul
jne
mov
xchg
inc
adc
daa
sbb
ror
mov
insb
push
jecxz
dec
lret
mov
roll
inc
in
popf
sub
sbb
cltd
inc
out
scas
or
dec
shr
sbb
pop
push
sbb
ret
sti
xchg
add
sarl
mov
xor
xor
sub
fstpt
xchg
lret
jns
in
not
shll
push
shll
sbb
stos
push
lahf
jo
addr16
stc
cli
call
mov
fcomip
shll
test
aaa
sar
xchg
stos
dec
cltd
rcrl
mov
jl
das
xor
pop
mov
jle
sbb
mov
pop
pop
push
aam
push
adc
and
cli
fisttps
loop
mov
mov
andl
shrl
pop
or
out
dec
mov
popa
aam
insl
cmc
adc
ljmp
inc
mov
icebp
stc
inc
add
xor
mov
ret
mov
ficoml
int3
sar
in
popl
cs
sar
lcall
rol
mov
or
mov
sar
dec
cwtl
int
lds
adc
out
rcrl
out
xor
jge
push
sbb
js
loope
rcl
xor
ja
gs
cmp
xchg
pop
inc
add
dec
xor
mov
pop
cmp
in
xchg
sub
xor
rcrl
ss
jnp
mov
sahf
xchg
pop
aam
aam
pop
imul
adc
dec
shlb
inc
cmp
sbb
dec
adcl
cmc
int
mov
pop
sub
mov
mov
cmpsb
adc
and
mov
xchg
fldt
out
rcrl
sub
test
xor
outsb
enter
pop
sar
roll
das
dec
mov
iret
shlb
in
and
and
mov
mov
push
addr16
push
int
dec
mov
scas
scas
rcl
sub
and
fsts
add
push
jp
je
or
mov
das
addr16
enter
outsb
push
lods
jl
adc
rcl
dec
out
lods
add
and
mov
add
sub
dec
stc
mov
dec
jb
jmp
cli
shrl
cwtl
xor
add
or
push
inc
aas
sahf
jecxz
repnz
push
jnp
or
rcrb
rcll
pop
or
rcr
aam
popf
negb
and
cwtl
arpl
cmpsl
sub
and
push
cli
rorl
test
jbe
loop
shll
ja
or
ljmp
inc
mov
xchg
in
push
jno
mov
test
into
out
ds
ficoms
cmc
push
mov
repz
insl
shll
lahf
jb
shrl
popa
dec
test
xor
movsb
cmp
ffreep
or
out
pop
cmp
sbbb
sub
or
aam
xchg
in
or
add
sub
mov
mov
add
daa
push
notl
test
sarb
xor
and
push
cs
pop
or
inc
sbbl
inc
loopne
inc
or
mov
lcall
fwait
cmpsl
sahf
sbb
popf
mov
idivl
fcom
sti
ljmp
fadds
sbb
sarl
rcrb
mov
divl
js
xchg
sbb
inc
lret
movsb
mov
mov
jns
clc
push
cmp
push
adc
sti
push
dec
rcll
sahf
insb
sbb
xchg
ror
std
fiadds
roll
adc
rcr
xor
xchg
rcl
out
out
jae
je
shl
and
inc
sar
mov
test
push
roll
mulb
outsl
pop
data16
jge
mov
and
inc
rorl
aaa
jbe
adcl
rcll
cli
mov
sub
pop
outsb
sbb
ret
pop
rorl
xlat
cmpsl
mov
popa
inc
mov
pop
shrl
cmp
shlb
mov
leave
sbb
shll
push
ret
in
or
mov
in
ror
xchg
inc
adc
lock
xchg
dec
js
aad
sbb
ficomps
add
inc
push
push
mov
and
ljmp
xor
popa
mov
inc
jns
add
push
mov
fldl
mov
jo
inc
out
mov
pushf
dec
lock
mov
rcll
push
add
shrl
sbb
movb
sarl
lret
movsl
xor
push
jmp
jle
cmp
mov
xchg
movsl
push
xchg
stos
xchg
shl
dec
mov
xor
add
stc
insl
push
xchg
mov
inc
cmpsl
xchg
adc
jno
shrl
in
ret
rcll
jmp
xchg
in
rcrl
adc
jecxz
sub
push
imul
cmp
inc
roll
sbb
ret
sbbb
sub
cmpsl
stc
dec
mov
pop
stos
leave
rcll
mov
rorl
add
test
ljmp
push
rcl
push
push
out
xchg
push
sub
jno
out
adc
mov
addr16
ret
ss
sarl
and
push
adc
sahf
mov
xor
sub
pop
fnsave
inc
mov
mov
shll
aam
push
push
fdivrs
in
xchg
and
enter
adc
addb
mov
das
stc
ret
mov
rcll
int
int3
mov
pushf
cltd
xchg
les
sub
leave
xchg
cmp
stos
xor
shrl
sub
sar
mov
jp
push
aad
lahf
clc
push
pop
jns
hlt
loope
das
scas
popf
mov
adc
and
testl
xlat
mov
mov
out
and
xchg
ret
sbb
or
shll
sbb
orb
push
and
addr16
pop
mov
out
stc
sti
shll
push
jecxz
shrl
fs
movsl
mov
inc
add
push
xchg
rol
xor
xlat
push
iret
add
adc
xchg
sarl
sub
aas
cmp
repnz
shlb
jb
push
jecxz
cmp
jge
dec
ret
push
mov
in
mov
sub
xor
clc
cmpsl
xchg
dec
in
rcll
test
adc
jmp
ja
pop
ljmp
cmp
and
outsl
lock
cmp
rorl
test
sbb
dec
xchg
sub
jmp
push
lahf
lods
clc
inc
jecxz
xor
test
roll
daa
ror
or
inc
mov
roll
stos
int3
js
lods
in
rorl
mov
jp
mov
dec
rcrl
in
roll
add
push
shll
mov
dec
push
xor
testl
mov
cwtl
pop
mov
shll
inc
gs
pop
mov
fcmovu
inc
push
rorl
shll
cmc
jecxz
push
xchg
fcmovnbe
sbb
scas
sbb
outsl
gs
jae
or
jecxz
jns
xor
orb
push
push
mov
out
lret
sbb
sub
movsb
pop
int
push
pop
stos
mov
popa
cmp
lret
pop
call
jno
xchg
mov
jne
cmp
nop
xor
clc
roll
pop
leave
mov
or
fmul
or
push
int
mov
adc
call
loopne
or
scas
mov
aad
cmp
sbb
idivb
and
fcos
adc
adcb
rcrl
in
mov
mov
outsl
mov
clc
loop
sbb
ret
mov
pop
mov
fwait
lahf
xlat
push
hlt
xchg
push
push
xchg
in
insl
push
push
or
loop
pusha
push
shlb
xlat
and
into
mov
mov
sbb
out
mov
push
sbb
dec
lcall
or
dec
mov
das
push
in
aam
in
ret
out
mov
cmpsb
push
xchg
add
fisttpll
bound
push
out
jge
movsb
push
es
and
push
jno
xor
lods
fcmovnbe
push
mov
jns
mov
jp
adc
dec
fstl
test
ret
push
cmpl
out
push
push
outsl
push
lahf
mov
vextracti32x8
stos
int3
xor
mov
or
xor
mov
stos
pop
lods
xor
mov
jle
cmp
cmp
sub
lret
insb
shrl
movsl
insl
mov
call
jp
mov
and
loop
sub
loopne
jmp
mov
adc
mov
ret
shll
dec
add
out
lahf
shrl
xchg
xor
repz
jl
push
scas
xor
test
push
jo
fistpll
dec
jb
push
pop
pop
stc
rcrl
fildl
daa
mov
into
cli
iret
aam
sbb
repz
lods
adc
roll
stos
xorb
js
dec
test
xchg
and
dec
lods
jge
jl
scas
lret
out
dec
test
sarl
xchg
clc
jb
ds
shll
add
loopne
adc
jge
pop
bound
aaa
ret
pop
mov
jnp
loopne
sahf
movsb
rorl
outsb
push
shll
mov
sarb
mov
inc
or
idiv
pop
jmp
cltd
mov
cld
call
xchg
dec
js
pop
adc
rcl
dec
popf
mov
fimull
dec
enter
cmp
xchg
test
sub
mov
rorl
movsl
sti
enter
adc
xlat
loope
daa
ror
das
pop
add
fs
xor
sub
push
push
push
mov
icebp
xor
inc
mov
push
sbb
fisubrs
and
mov
aas
add
jg
imul
into
loope
rcl
lock
fidivl
mov
mov
popa
add
jb
sub
pop
pop
movsl
inc
loopne
add
inc
pop
repnz
into
mov
cmp
std
push
jae
cmpsb
leave
fsubs
shll
fldcw
jns
jno
dec
insl
sbb
aas
jns
mov
cltd
xor
je
imul
cmp
fxch
ret
les
lods
rcrl
adc
pop
push
push
decb
xchg
xor
cltd
push
cmpsl
rcll
xchg
adc
rorl
in
mull
fscale
xchg
jmp
ja
int3
loopne
push
jecxz
dec
push
pop
xchg
lock
add
jno
sbb
paddb
fsubl
das
adc
outsl
mov
inc
sar
in
lahf
jns
shlb
push
push
mov
rcl
out
xchg
sub
roll
shll
pop
or
or
jno
inc
xchg
leave
dec
xchg
shll
push
enter
repz
movsl
jecxz
xchg
imull
lock
rclb
sbb
mov
inc
popa
mov
pop
shrl
iret
or
ja
xor
jmp
test
push
shll
leave
xchg
test
aaa
dec
mov
sbb
rorb
scas
fadd
mov
lcall
or
xor
call
jl
dec
sti
push
mov
sbb
rcr
out
cmp
push
lahf
test
push
cmp
adcb
mov
xchg
sarl
lock
push
jne
clc
ss
add
xor
and
rcll
sub
adc
mov
push
sub
push
sbbb
mov
adc
not
xor
mov
push
bound
pop
mov
inc
push
sbb
xor
mov
push
adc
sbb
adc
and
scas
push
pushf
mov
jmp
hlt
std
adc
ljmp
or
cld
out
nop
arpl
pusha
aad
rcl
jecxz
inc
shrl
mov
scas
rcl
inc
daa
xchg
stos
mov
ror
adc
loope
push
mov
mov
push
nop
outsb
sbb
in
jecxz
inc
roll
ret
ljmp
xchg
xchg
push
repnz
sbb
fadds
int
or
adc
mov
mov
pop
arpl
scas
mov
iret
cmpb
jmpw
mov
mov
stc
pusha
shl
out
subps
mov
ds
ljmp
test
shrb
lods
or
out
cmp
push
push
adc
mov
mov
cmp
jle
pop
sahf
nop
mov
and
cmpsb
push
adc
xchg
insl
js
imul
add
or
mov
aad
jge
dec
repz
pop
xchg
dec
inc
roll
jae
jmp
sub
push
dec
pop
faddl
aam
pop
jmp
out
push
xor
in
sbb
call
into
push
jno
test
dec
shll
sbb
inc
cmp
cld
xor
mov
cli
push
test
pop
xchg
ret
sbb
push
add
rorl
sub
mov
and
mov
pop
pushf
dec
sub
out
call
int3
in
push
mov
cmp
sub
mov
fidivrl
call
inc
mov
pop
xchg
fs
mov
test
xchg
je
jnp
shll
sahf
add
fxch
mov
xchg
xchg
nop
es
sarb
adc
rcll
and
mov
mov
rcll
adc
lods
inc
push
pop
jae
adc
arpl
pop
mov
sarl
xlat
fidivrs
dec
add
or
fdivl
pop
sub
mov
push
rcll
mov
fs
adc
jecxz
repnz
test
pop
mov
push
push
mov
ror
push
mov
scas
dec
inc
enter
mov
mov
xchg
jle
and
jmp
ljmp
mov
mov
rol
fsub
jl
mov
mov
popa
pop
mov
rcrl
movsb
xchg
dec
movsl
sahf
mov
jge
movb
enter
test
push
lret
cwtl
aam
mov
popf
and
aas
dec
sahf
mov
mov
fwait
jnp
pushf
sarl
jle
faddp
inc
and
dec
rcl
jbe
hlt
pop
in
stos
repz
mov
pop
roll
mov
mov
sarb
repnz
and
shr
jb
xor
ljmp
dec
jmp
pop
dec
xchg
lds
jno
cld
inc
sbb
lock
mov
rorl
scas
or
mov
jmp
inc
mov
mov
mov
out
sar
cltd
push
je
push
sub
inc
subl
ret
rcl
pop
mov
push
shrl
repz
test
mov
xor
add
jbe
shl
scas
int
adc
and
and
mov
std
mov
sarl
fld
jnp
andl
pop
rorl
cmp
test
sahf
arpl
daa
cmpsl
lcall
or
pop
push
push
cmp
clc
jl
stos
or
pop
xor
add
cs
push
xchg
leave
mov
cmpsl
test
sbb
movsb
ds
scas
rolb
adc
sar
mov
cmp
push
dec
lcall
into
roll
movsl
or
sub
dec
fxch
call
cmp
lret
movsl
sub
xchg
das
and
xchg
cmp
inc
push
call
push
jae
xchg
rcrl
push
rcll
ret
bound
rorl
pop
sbb
sub
mov
outsl
int
scas
loop
imul
outsb
mov
mov
rcr
into
jnp
jmp
dec
push
shll
das
mov
rcrl
flds
rcll
ret
xlat
aas
xchg
addb
sar
mov
or
fwait
int3
push
adc
lcall
dec
test
data16
fnstsw
cmp
subl
outsl
in
sti
or
xchg
je
js
inc
cmp
bnd
sbb
fsubrs
xchg
mov
jg
dec
pushl
xor
mov
jno
jns
cmp
bound
dec
pop
rcrl
pop
ret
mov
xor
jo
xor
out
shll
int
enter
bound
and
test
aaa
mov
orl
rorl
mov
fisttpll
rcrl
or
pop
sarl
repz
push
push
cmp
jne
fistpll
lods
hlt
xor
scas
or
aam
lret
ret
outsl
movsl
shrl
in
sbb
ja
dec
sti
mov
aam
ror
lds
pop
loop
mov
out
into
adcb
pop
mov
das
push
and
fsubrl
cmpsl
loope
ffree
xor
cmp
test
mov
inc
xchg
loope
lret
incl
icebp
shrl
dec
cli
roll
lds
or
and
roll
std
pop
cmp
or
idivl
rcrl
daa
mov
adc
push
shrl
in
pop
ja
out
xchg
cmp
xor
mov
mov
pop
sub
mov
inc
insb
pop
xor
mov
xor
lock
sbb
sbb
sub
cmp
scas
cmp
aas
or
mov
push
xchg
cld
lock
xlat
insb
je
pop
rcl
adc
push
or
pushf
insl
inc
lcall
addl
xor
dec
sti
aas
sub
mov
xchg
ror
arpl
pop
repnz
adc
loope
mov
das
pop
add
shll
es
sub
lret
jg
ljmp
and
mov
ror
daa
mov
imul
xchg
clc
push
andl
dec
push
das
rorl
addr16
loopne
jl
insl
stos
shll
ret
inc
inc
cmpsb
dec
shll
test
push
rcll
jnp
and
and
mov
cmp
jecxz
jo
pop
jno
jmp
cmpsl
nop
lahf
imul
data16
call
xchg
and
fwait
lds
cmp
push
adc
mov
in
call
incb
out
lcall
mov
mov
out
sub
lret
fucompp
xchg
int3
add
or
or
dec
cmp
repz
mov
sub
movsl
aaa
cld
mov
cwtl
loop
repz
push
dec
inc
push
adc
sarb
add
mov
lahf
inc
lds
test
rol
push
cmp
psubusb
cmp
popa
iret
sbb
inc
adc
lret
stos
je
sbb
or
in
inc
ss
lods
jmp
shll
pop
iret
mov
add
and
test
shll
xor
and
push
insb
scas
cmp
call
rorb
insb
ret
lea
xchg
outsl
push
ret
push
mov
rcll
arpl
pusha
push
cmpsb
sar
adcb
lods
xchg
xor
cmp
ret
dec
or
lahf
pop
xchg
call
roll
sarb
dec
xor
xor
adc
rcrl
mov
repnz
std
xchg
les
push
les
adc
int
cmp
push
rcll
add
xor
mov
aam
cmp
and
mov
push
push
push
aad
fdivl
push
adc
out
rclb
jbe
jae
int3
xchg
or
in
repnz
add
mov
out
shrl
mov
outsl
sub
loop
xchg
and
push
mov
scas
and
shll
jp
dec
push
std
add
lea
xor
shll
dec
push
xlat
int3
mov
test
mov
adc
jns
cltd
cli
aam
adc
jmp
repnz
movsb
xchg
jecxz
xchg
pop
jge
inc
repz
in
jbe
cli
outsb
shrl
and
in
cmp
push
adc
subl
insl
cmpsl
aam
sbb
or
xor
jle
es
pop
clc
out
push
push
test
mov
sahf
pop
add
loope
arpl
xor
sar
ss
mov
jecxz
mov
sar
orl
dec
lock
xchg
sti
bound
dec
fadds
stos
mov
subb
jae
push
mov
mov
or
lods
ljmp
push
xchg
sarl
cld
mov
rcll
aaa
sub
push
jge
icebp
fwait
ret
dec
pop
xor
mov
shr
add
push
shrl
sub
mov
sahf
aam
mov
jbe
rcl
in
daa
sbbb
push
adc
icebp
into
aas
inc
mov
xchg
sarl
and
sbbb
jl
shll
sbb
mov
repnz
fmull
sub
outsb
rcll
ret
xor
pop
rcll
dec
push
call
mov
pop
out
cwtl
xchg
insl
out
movsl
enter
shlb
push
mov
dec
fs
shrl
xchg
and
xchg
cmpsl
fisttpll
mov
push
iret
jg
in
jb
inc
xchg
dec
mov
sar
aam
push
push
lahf
jecxz
aaa
cltd
out
shrl
xor
mov
push
fs
mov
ret
int
jp
ficoml
movsb
sahf
cli
xchg
xchg
and
jno
sbb
mov
xchg
push
and
xor
stos
divl
shll
dec
mov
and
jle
enter
pop
sbb
mov
subb
shll
mov
mov
in
lret
mov
sub
mov
xchg
push
cltd
shll
int
pushf
daa
dec
aas
push
gs
scas
push
or
rcll
dec
mov
push
loopne
mov
push
mov
shll
addr16
inc
fidivl
xchg
je
cmp
mov
arpl
mov
cmc
rorl
je
out
ja
sbb
xor
xlat
iret
push
les
pop
in
mov
cltd
jp
push
mov
lods
push
aas
add
xor
pop
and
xor
daa
jp
jmp
es
dec
push
popf
add
arpl
pop
fstl
outsl
xor
loopne
cmpsl
out
addr16
adc
mov
shl
jae
imull
jmp
sbb
clc
or
xlat
sub
dec
call
je
aam
fcmovnbe
lret
jo
addr16
mov
and
andb
push
xchg
aaa
pop
ret
sarl
subl
cmp
push
movsb
mov
pavgw
lods
mov
push
stos
xchg
repz
cmp
push
pop
jmp
sub
and
add
add
faddl
jns
push
push
shlb
xor
mov
xor
mov
pop
cli
rorl
pop
push
xor
mov
rorl
mov
rcll
arpl
setl
sbb
mov
pop
adc
sarl
and
dec
sub
pop
shll
push
lock
sti
pushf
mov
sbb
rcr
xor
push
adc
std
test
outsb
cmp
and
inc
adc
dec
xacquire
xchg
cmpsb
jne
iret
clc
rcll
and
addr16
aad
adcb
rcl
lret
jne
dec
out
fisubl
push
lcall
add
mov
gs
jae
pop
jg
adc
mov
sub
or
jno
cli
sbb
pop
mov
xchg
fisubrl
loop
daa
add
adcl
and
or
hlt
enter
ss
rorl
icebp
cli
mov
out
pop
sbb
ljmp
iret
inc
mov
adc
lcall
xor
jecxz
cmp
test
sti
and
jno
shr
in
pop
outsb
orl
into
inc
test
cmc
push
js
pop
mov
pop
stos
sbb
fsubr
popa
mov
sbb
pop
adc
and
cmpsl
mov
clc
push
pop
xor
dec
cmp
ret
jns
push
std
stc
test
push
rol
ja
sbb
mov
aad
inc
je
jo
xlat
push
push
out
jns
push
leave
mov
lock
testl
test
mov
mov
stos
or
mov
mov
ljmp
mov
jle
xchg
xchg
pop
shr
xor
insl
fcomip
sbb
jge
xchg
and
stos
addl
jae
adc
xchg
jmp
lret
shrl
inc
jbe
xor
push
imul
cmp
aad
pop
inc
dec
pop
iret
adc
divl
xor
insl
jb
aaa
inc
stc
jmp
shr
pop
xor
pop
aas
sbb
repz
push
aad
mov
dec
mov
mov
and
jbe
rcll
ret
pop
jle
fucomp
roll
mov
mov
paddsb
cmp
push
pop
or
xchg
cs
xchg
adc
or
mov
pop
insb
daa
hlt
in
mov
lahf
inc
jge
cltd
mov
jnp
pushf
sahf
mov
insb
cld
push
sbb
lret
xor
jnp
shll
mov
add
xorb
adc
out
insl
rcll
jns
mov
jecxz
inc
imul
rol
lret
shl
and
negb
out
cmpsl
dec
cwtl
sub
and
inc
cmp
les
add
push
xor
adc
push
fs
stc
jge
push
cmpsl
jno
adc
test
mov
push
les
cmc
pop
pop
iret
dec
xchg
push
dec
mov
scas
iret
push
aam
xchg
shl
jecxz
mov
leave
cmp
popa
clc
insl
push
pop
rorl
fsts
sub
bound
pop
rcrl
inc
mov
popa
les
lods
insb
fstp
jb
repz
ds
pop
in
add
sub
cmp
sarl
jmp
jp
js
test
ret
aas
insb
mov
mov
pslld
roll
or
lret
shrl
cmc
sti
xchg
es
fdivrl
popf
sar
fcomps
xchg
xor
adc
je
xor
add
ljmp
lock
sti
dec
jmp
movsl
mov
lods
loopne
jle
xchg
sahf
dec
pop
push
repz
leave
rcl
sbb
add
aad
jle
ds
js
cmc
sbb
aam
xchg
bound
jecxz
in
or
roll
lahf
add
sub
test
fstpt
jp
add
rcr
in
repz
roll
mov
push
dec
orb
sarl
mov
fbstp
in
sarl
mov
pop
mov
aaa
xchg
mov
sbb
xchg
mulw
and
and
shlb
movsl
pop
rol
xchg
mov
mov
pop
imul
or
pop
rcrl
push
je
test
rol
cmpsb
repnz
lods
sbb
rcll
scas
mov
imul
xchg
fsubrs
xchg
insb
sbbl
rcr
push
push
es
icebp
adc
outsl
sub
sbb
sarl
mov
rorl
call
js
xchg
pusha
cmp
cltd
xchg
leave
adc
stos
shll
cmc
aad
mov
test
in
cmp
push
xlat
pop
mov
sti
cmpsl
cmpsb
in
sub
outsb
outsl
sarl
inc
push
pop
pop
jmp
fcompl
loope
push
and
loop
jae
push
pop
negb
mov
dec
insb
enter
mov
dec
sbb
je
mov
arpl
jp
loop
or
xchg
mov
push
hlt
pop
or
xlat
rorl
pop
mov
out
cli
loopne
pusha
and
mov
roll
xchg
fcoml
cld
fstl
cmpsl
addr16
daa
and
xchg
inc
cmp
in
jecxz
bound
movsb
dec
fisubrl
push
outsb
jp
push
in
xchg
pop
push
xcrypt-cbc
cmpsl
xchg
or
cld
js
jae
iret
sbb
rorl
dec
push
xchg
dec
icebp
aam
movsl
pop
jg
mov
mov
xor
xor
loop
jp
sti
arpl
jns
or
outsb
test
push
shl
fldl
jne
sbb
sti
sub
in
or
push
push
xchg
sarl
mov
aaa
popf
arpl
xchg
inc
mov
sub
mov
jge
push
jle
cwtl
clc
mov
inc
push
adc
mov
sbb
mov
shll
insl
sub
sar
call
cs
roll
iret
testb
rcll
add
cmp
bnd
mov
dec
xor
sarl
aam
mov
rol
in
dec
jp
imul
int
into
push
loopne
inc
xchg
shll
inc
lret
fiadds
jb
ret
pop
stc
cs
xchg
pop
jecxz
cli
js
dec
rcrb
test
push
out
dec
add
pop
sub
push
dec
jl
rcll
mov
sub
lret
clc
movsl
out
in
sub
sahf
repz
shl
push
les
dec
push
mov
xor
pop
movsb
insl
notb
adc
mov
mov
pop
mov
shl
enter
xchg
lods
add
jnp
stc
sahf
gs
pop
push
fstpt
cmpsl
xor
shlb
rcrl
mov
leave
lcall
das
push
sahf
insb
lds
rclb
mov
loopne
into
pop
sub
arpl
movsb
mov
fisubrl
inc
mov
dec
ret
fs
mov
pusha
pop
inc
and
shll
xchg
pop
push
sarl
lret
out
imull
clc
cmp
cmpsl
mov
push
lods
push
ljmp
dec
dec
adc
scas
push
data16
and
xchg
jo
syscall
push
mov
cmpsl
jle
push
cmpb
mov
decb
adc
outsl
les
in
shll
dec
in
push
shrl
sub
insb
movsl
push
roll
cwtl
xor
outsl
sbb
sarl
pop
xor
pop
psrlw
mov
mov
sub
jo,pt
rorl
cmp
repnz
adc
jmp
rol
out
or
dec
lods
roll
mov
add
push
popf
sub
pop
sbbl
xor
cmpsl
in
call
dec
mov
sarl
xchg
jmp
ja
jno
ljmp
dec
push
repz
push
fsubl
jle
xchg
es
ds
adc
cmc
in
mov
push
xchg
add
sahf
or
mov
movsb
sub
mov
add
shr
bnd
adc
jecxz
cmp
inc
ret
push
xchg
inc
stos
jecxz
addr16
add
rcll
jne
push
lods
mov
push
data16
pop
les
gs
sahf
mov
addr16
mov
inc
push
sub
mov
iret
loope
mov
push
fwait
sub
sbb
mov
push
lods
push
enter
call
shll
xor
pushf
mov
sub
loopne
mov
data16
aas
or
sbb
and
pop
rol
rcr
scas
imul
lods
sti
stc
lret
addr16
fpatan
push
jb
and
rcl
xor
sub
adc
jo
std
icebp
je
mov
xchg
xchg
jb
nop
and
add
or
leave
subb
aaa
imul
mov
loopne
outsb
adc
in
cmpsl
push
adcl
fmul
sub
dec
aad
lds
notb
popa
inc
jmp
mov
mov
cld
arpl
clc
fstpl
jno
mov
push
and
push
add
imul
mov
push
pop
inc
sub
rorl
stos
dec
inc
out
adc
mov
or
xor
rolw
lods
xor
rcll
and
sbb
scas
lcall
leave
push
jecxz
cmp
pop
in
mov
and
inc
ret
xchg
rorl
js
in
pop
ror
lods
sbb
lods
xorl
icebp
mov
or
fwait
je
mov
pop
addr16
sub
cmc
jns
call
pop
jmp
cmp
jne
pop
xchg
imul
aam
jo
jge
out
push
test
push
shrb
mov
int3
test
aaa
lea
stos
cmp
xchg
rorl
dec
push
mov
fucomip
push
xor
lahf
mov
mov
test
mov
mov
mov
pop
mov
mov
push
insl
sahf
sbb
shr
lods
jmp
jp
fisubs
sub
jne
lret
sub
data16
dec
xchg
pop
mov
jbe
shrl
fldln2
out
popf
imul
fsubrs
mov
jg
shll
insl
rcll
in
mov
stc
mov
imul
cli
push
icebp
sbb
xchg
stos
ret
pushf
or
shr
ja
pop
pop
fisttpll
loop
jae
dec
inc
and
push
out
and
aas
push
mov
push
sbb
jmp
mov
dec
mov
and
mov
test
mov
adc
mov
jg
pop
push
enter
pop
insl
cmp
xchg
xor
mov
jnp
xchg
rcrb
rcll
jae
es
cld
xor
and
jne
shll
jl
pop
into
xchg
iret
mov
push
push
mov
adc
sub
lds
in
xor
pusha
cwtl
mov
fidivs
nop
mov
mov
gs
pop
in
std
and
loope
jmp
das
sub
shll
pusha
lret
push
xor
stos
sub
xorl
adc
int
sub
xor
scas
pushf
les
nop
rorl
das
add
loopne
cmp
rcr
pop
jbe
addr16
rcr
dec
lcall
mov
int
lods
xor
into
shrl
jg
push
push
add
dec
iret
cmp
cmc
std
push
pop
and
imul
or
jg
aas
cli
mov
repnz
in
shll
scas
fwait
lahf
xchg
fldt
push
cs
ficoml
es
negb
popf
adcb
pop
roll
jno
and
xchg
popa
je
xchg
adc
popf
mov
mov
roll
rcr
ja
lret
push
push
jns
dec
jp
mov
stos
jno
cli
cmp
lahf
push
fistpll
sbb
xor
mov
jecxz
lret
mov
lds
mov
leave
lahf
pop
push
rcrl
pop
ss
mov
sub
jg
push
xor
movb
in
fwait
rorl
adc
aad
xchg
push
nop
xchg
ds
arpl
sub
subl
push
push
mov
cli
add
pushf
xor
xor
rcrl
shlb
rcrl
mov
inc
adc
mov
add
shl
andl
inc
pushf
pop
shl
mov
aam
test
sbb
add
sbb
cmp
les
popa
xchg
orb
pop
mov
cmp
inc
dec
fnsave
sti
inc
adc
pop
movsb
mov
ds
lret
adc
cmp
mov
je
adc
sbb
and
mov
cli
add
iret
ror
mov
pop
or
xorl
test
rcll
mov
insl
lds
jb
cltd
aad
mov
inc
jae
in
not
insb
neg
push
roll
cltd
xchg
mov
aam
xor
push
inc
push
mov
mov
sub
mov
push
sbb
push
push
fistpll
sub
aaa
daa
rcrl
pusha
rcrb
test
shll
leave
repz
adc
sub
scas
in
pop
rcrl
cmc
incl
mov
das
cmp
lods
pop
jecxz
mov
and
mov
push
outsb
or
xor
inc
dec
add
pop
js
fsubrl
shll
ret
rclb
rorl
ret
push
iret
scas
icebp
std
xor
jg
sub
push
sbb
xchg
stos
fcmovnbe
stos
js
shll
popa
add
aam
dec
mov
lahf
mov
imul
pop
out
shll
adc
stos
jno
and
push
test
das
test
dec
push
sar
stos
mov
or
nop
rcrl
add
je
push
mov
inc
jp
jecxz
rorl
push
xchg
mov
rcll
aaa
fildll
pop
sbb
repz
dec
mov
jp
pop
int
xor
sbb
ret
xchg
add
movsb
mov
dec
jp
mov
pop
jbe
fisttps
imul
cmp
shll
inc
andb
ficoms
and
jecxz
and
pop
push
push
stc
sbb
shlb
shrl
pop
rol
rorl
jg
inc
imul
dec
or
adcb
loop
shll
pop
fistpll
mov
pushf
adc
shll
rol
jl
sbb
gs
leave
rcll
pop
mov
pop
mov
jae
lods
mov
inc
push
xchg
mov
mov
cmp
push
aam
leave
push
loopne
fnsave
mov
fsubrp
mov
fstl
or
shrb
fldenv
dec
adc
popf
adc
aam
xchg
dec
xchg
shll
into
pop
shll
adc
aad
rcll
enter
out
pop
push
push
adc
jnp
arpl
dec
andl
lock
ret
adc
mov
sti
sbb
int
fidivrs
rorl
ljmp
adc
xchg
add
loopne
mov
push
shll
test
push
ficoml
jno
mov
popa
jb
in
shll
dec
lret
movsl
rcr
or
add
jl
xchg
cmp
jnp
adc
mov
les
shrl
push
aas
int3
pop
jg
repnz
sbbl
js
push
cmp
sarl
adc
xchg
popf
jne
inc
pop
out
dec
rcr
incb
fists
cmpsl
loope
push
mov
cld
rcrl
and
jae
push
mov
mov
ljmp
rorl
push
daa
dec
jno
rcl
cld
sub
shll
adc
xchg
push
sbb
and
sbb
insl
lahf
mov
fsts
adc
aad
cltd
pop
ret
scas
mov
dec
inc
sarl
cmp
rorl
and
mov
jp
sub
mov
decb
add
rorl
sub
shll
jo
xchg
mov
inc
xchg
xchg
xlat
mov
push
mov
sahf
adcl
rcll
cmp
cltd
add
test
roll
and
subb
lock
sub
or
jmp
pop
sub
rcll
out
stos
sti
movsl
nop
rcrl
sub
movsb
inc
add
roll
inc
data16
mov
sbb
pop
adc
imul
add
mov
push
nop
and
jecxz
push
cmp
pop
push
fisubs
cvttps2pi
notb
rcl
movsb
fsubr
scas
add
ljmp
or
pop
mov
mov
sar
popa
xorb
mov
mov
test
fdivs
add
nop
and
mov
and
jl
rorl
in
mov
mov
nop
inc
push
adc
mov
dec
or
rcll
pusha
push
insb
jne
push
rcll
mov
adc
stos
cltd
ja
jmp
jb
inc
lret
lcall
mov
jecxz
xor
lock
cmp
in
scas
mov
mov
jg
sti
jbe
xchg
sarl
ret
roll
dec
fcoms
loopne
lods
cmpsl
mov
push
mov
jmp
paddusb
cmpsl
jo
inc
inc
aad
test
cmp
sub
sar
push
sbb
sub
jo
mov
out
shll
out
push
mov
test
nop
subb
shl
mov
insl
imul
in
cmp
mov
cld
imul
rcll
pop
lods
adc
xchg
lods
lcall
xchg
adc
out
jp
adcb
stc
shl
ds
in
xor
sarl
pop
outsb
rcrl
jbe
lods
fldln2
mov
push
pop
imul
cwtl
into
mov
add
pop
mov
shll
mov
shll
jb
lea
cmp
add
mov
cmp
rcrl
and
bound
xchg
cmp
repz
jb
out
inc
sub
js
leave
sbb
pop
test
xor
iret
cmpl
xchg
repnz
lret
push
mov
adc
scas
pop
mov
jae
fisubl
jl
les
pop
xor
jnp
aas
jecxz
nop
icebp
repz
mov
rol
and
sub
jb
inc
mov
mov
imul
insb
push
dec
jae
roll
adc
jl
xchg
mov
popa
inc
xor
lret
mov
and
sub
popf
xor
mov
stos
into
pop
enter
push
pop
fstl
loope
lods
stos
imull
ret
mov
inc
rcr
xor
outsb
test
mov
push
or
adc
dec
aad
imul
xchg
iret
stc
push
add
loopne
rcl
jp
mov
repz
test
fisubl
dec
jl
shll
cli
mov
popa
idivb
lods
push
inc
daa
cs
xlat
ret
movsl
adc
mov
mov
pushf
movsb
ror
mov
int
inc
xor
rcrl
xor
cmp
aas
mov
in
repnz
je
es
hlt
shl
std
cmp
push
les
jmp
xlat
out
pop
xor
jl
jp
and
xchg
hlt
mov
adc
mov
xchg
or
xchg
mov
shr
sti
mov
ja
das
add
ljmp
xlat
shl
mov
jge
sar
lahf
jmp
jp
cmc
dec
or
adc
xchg
mov
rcrl
push
pop
das
shrl
adc
sbb
rcrl
add
dec
pop
cmp
sarl
or
rol
and
insl
test
mull
jns
dec
shrb
inc
sbb
push
add
scas
into
sarl
fsubrs
xor
mov
insb
cltd
inc
in
pop
rorl
dec
mov
pop
and
inc
mov
xchg
mov
dec
xchg
xchg
bnd
lret
arpl
out
shll
call
mov
jns
mov
mov
repnz
jg
xchg
jo
pop
les
js
push
inc
mov
dec
rcrl
int3
mov
movsb
fwait
mov
xchg
push
std
push
or
cmp
inc
cmp
rcll
mov
outsl
xchg
mov
adc
nop
cmpsb
cltd
das
roll
lret
aam
leave
adc
rcll
in
popf
adc
dec
xchg
rorl
sbb
rcr
inc
pusha
jmp
add
aad
xchg
mov
into
mulb
punpckhbw
shll
or
cltd
sarl
sbb
xor
outsl
dec
mov
loop
ror
jmp
mov
adc
fninit
xor
dec
push
push
test
sahf
rcr
rorl
roll
in
pusha
rcl
and
xlat
mov
mov
aad
mov
adc
into
stos
xchg
lcall
pushf
in
jecxz
cmp
int3
das
rcrl
sub
push
out
sub
pop
push
push
xor
mov
cmp
pop
mov
mov
fcom
jno
scas
push
scas
or
sarl
xlat
ss
bound
shll
nop
lea
aad
test
mov
mov
hlt
movsb
rcrl
in
xchg
test
imul
sbb
adc
lock
dec
fabs
cmc
movl
push
mov
mov
and
dec
adc
sbb
jle
inc
jecxz
lret
mov
rcll
sbb
and
or
jge
call
jp
jne
adc
push
std
nop
ret
loopne
add
xchg
dec
and
xchg
jbe
stos
xchg
in
es
lret
imul
jecxz
into
push
jl
inc
roll
pushl
push
ss
fadds
pushf
ret
stc
inc
out
pop
lahf
scas
sarl
cli
add
shl
ret
fs
add
std
int3
nop
dec
xlat
mov
shr
and
and
imull
pop
cwtl
pop
sbb
movsl
xor
inc
mov
ja
rcl
ror
dec
rcrb
cld
sarl
xchg
cmp
adc
ret
shll
pop
mov
mov
stos
inc
xlat
mov
mov
jnp
rclb
and
sar
ror
jg
stos
mov
fst
movsl
nop
adc
xchg
fwait
mov
sbb
mov
jno
or
insb
sarl
add
scas
push
cmpl
outsl
sti
pop
punpckhdq
shlb
jne
aam
mov
mov
out
push
dec
aas
jno
enter
pop
repnz
loope
ret
ffreep
dec
outsl
mov
rol
jns
mov
ljmp
push
les
cmp
dec
and
xchg
and
shll
roll
test
mov
icebp
cmc
pop
addr16
repz
or
mov
jnp
inc
cmpsb
rcr
lock
enter
sub
jno
mov
cmp
lahf
jmp
sub
rcll
rolb
mov
sub
inc
repnz
xchg
push
je
adc
movsl
inc
shr
mov
sbb
les
mov
bound
popf
add
xor
pop
shr
shl
push
xor
out
sbb
mov
mov
push
cmc
pop
jmp
jge
rsqrtps
scas
xchg
cmp
div
sub
pop
jno
popf
sar
dec
fsubp
ds
shl
cwtl
adc
add
push
lahf
cmc
rcrl
sub
mov
mov
lret
mov
or
inc
popf
pusha
aas
stos
mov
push
scas
icebp
pop
in
mov
ss
and
lods
xchg
shrl
sub
push
idivl
add
dec
pop
or
and
test
shll
sbb
push
fyl2x
je
push
lahf
pop
mov
lea
repz
shrl
stos
out
test
lahf
sbb
in
sbb
es
lods
test
clc
push
lret
call
dec
pop
shll
fwait
shl
leave
hlt
push
rcll
sub
sbb
adc
dec
movsb
sub
push
shrl
mov
test
cmp
jle
dec
ficomps
inc
adc
jbe
ja
pop
and
jno
and
jl
fmul
mov
cmp
and
push
mov
sub
sarl
lea
movsb
fdivl
xlat
roll
jb
shrl
popa
in
push
jmp
mov
and
lret
add
lret
test
js
mov
push
hlt
les
adc
lea
int3
inc
or
mov
mov
or
cmp
pop
xlat
xchg
ret
mov
leave
loop
push
dec
jmp
adc
mov
cmp
shl
daa
dec
or
shrl
jmp
jl
aam
and
in
jbe
xchg
sahf
mov
in
xchg
push
inc
adcl
lods
cli
pop
out
inc
shll
sbb
fcom
push
sub
inc
mov
mov
mov
loopne
push
sbb
xchg
adc
rolb
sarw
fwait
xchg
js
sbb
cmp
pushf
mov
shll
dec
sub
ffreep
jle
lods
adc
lock
lret
mov
inc
nop
shrl
rep
mov
lahf
pop
int3
mov
or
dec
movsb
mov
stc
pushf
xor
xchg
neg
jle
push
pop
jns
pop
movsb
rcl
ja
push
jecxz
in
shrl
jb
filds
enter
aaa
mov
jp
dec
incb
dec
mov
or
mov
push
add
jmp
mov
mov
jb
aam
or
xchg
in
fcom
push
imul
cmp
inc
add
addr16
xor
and
fcmove
test
push
fidivs
pop
pop
rcll
ret
cli
call
cmp
push
cld
push
scas
pop
cmp
mov
stc
and
and
xchg
out
in
fistps
cmp
lods
out
pop
mov
jge
dec
pop
xchg
mov
fbld
add
or
adc
dec
push
mov
roll
inc
jle
inc
shrl
xchg
mov
rcll
xor
sahf
movsl
dec
mov
std
cmp
xor
shlb
add
adc
mov
pop
fsubrs
push
imull
rcll
mov
add
sbb
call
pop
xchg
scas
push
lret
adc
into
sub
mov
mov
sti
xchg
mov
cmp
xor
pop
das
xor
lret
adc
and
lret
dec
dec
fdivrl
mov
shlb
imul
out
dec
aam
pushf
adc
mov
les
cmp
jl
imul
fsts
cmpsb
jo
inc
mov
shll
adc
mov
popa
cmp
lods
jnp
push
insl
cs
movsl
add
stos
rol
xor
mov
iret
xor
xchg
or
pop
insl
dec
sbb
sub
or
aas
les
repnz
fnstenv
sbb
fwait
rcll
les
aam
popf
hlt
mov
das
rorl
xor
xor
cmp
adcb
xor
cmp
fwait
mov
mov
stos
dec
xor
shll
repz
sbb
scas
push
mov
shrl
rcrl
pop
adc
outsb
je
shl
xor
sub
rolb
dec
cmp
mov
or
pop
mov
sub
push
push
inc
outsb
out
stos
inc
mov
shll
fidivrl
push
xchg
lods
push
jae
sub
cmp
faddl
xorb
roll
and
shll
test
addl
mov
pop
inc
xchg
pushl
js
stos
inc
mov
enter
lea
push
add
roll
add
sbb
test
lea
cmp
into
gs
sub
cmp
pop
popf
js
shrb
sub
push
cmp
repz
push
lahf
mov
push
movsb
clc
inc
std
push
jp
jne
jg
or
cmp
stos
rcll
mov
xchg
xchg
adc
push
jne
jmp
push
add
test
into
rcll
and
lret
pusha
aam
cwtl
aas
mov
push
jb
mov
xchg
sub
les
in
mov
divb
mov
int
cwtl
test
mov
mov
movsl
xlat
into
sbb
adc
mov
push
jbe
shl
jae
mov
cli
jg
rorl
pop
pusha
std
shl
mov
xchg
rorl
inc
push
sub
shll
jb
xlat
test
lods
outsb
mov
mov
xchg
in
lahf
mov
mov
fidivl
mov
jle
in
in
gs
aam
pop
aam
mov
sbb
push
loope
jge
rcr
inc
fdivs
icebp
lock
cmp
cmpsl
xchg
sub
outsl
mov
daa
push
xor
das
sarl
jns
aam
jmp
data16
shll
sbbl
push
xor
test
out
sbb
dec
lock
jnp
xchg
lret
test
rcll
stos
call
pushf
mov
loopne
rorl
imul
ror
mov
insb
fistl
in
adc
out
mov
jmp
test
roll
jp
rcll
outsl
dec
sarl
add
xchg
cmpsl
jmp
mov
ror
aam
stos
pushf
jbe
ja
insl
in
jae
loope
push
xor
test
sbbb
mov
mov
jg
orb
std
jb
lea
data16
or
nop
popf
outsl
cli
ja
sahf
sbb
into
in
ret
add
mov
pop
push
xor
mov
mov
mulb
mov
jmp
js
mov
out
mov
test
rcrl
in
and
xchg
pop
sar
fs
iret
roll
cs
xchg
push
mov
shll
mov
jmp
ss
in
jmp
mov
fidivrl
mov
rorl
popa
jne
jmp
mov
sub
stos
stos
fwait
inc
sar
aas
mov
rcr
fstl
xor
insb
mov
fwait
enter
cli
mov
pop
pop
shll
xor
sub
mov
dec
jg
adc
push
fcomps
and
enter
pop
jecxz
loopne
loope
and
das
nop
jns
mov
xchg
pop
push
pop
lret
xchg
cmc
sar
nop
mov
mov
rcll
push
or
in
dec
push
dec
sbb
inc
stc
cmp
xchg
inc
xchg
loope
push
xchg
loopne
mov
push
mov
incl
jl
sbb
int
popa
lea
mov
mov
rcrl
add
sahf
mov
lods
pop
frstor
pop
xorl
ret
sub
mov
xchg
xor
popa
lods
out
repnz
cmc
rcrl
fwait
cmp
rorl
les
rcll
popf
das
adc
add
mov
cmp
mov
sub
mov
pandn
inc
ja
ljmp
aam
inc
xor
push
std
es
rcll
jae
ds
test
pop
add
arpl
mov
lahf
mov
das
sub
test
push
xchg
cmp
in
ret
xchg
shll
jg
adcb
mov
sbb
xor
sub
cmp
mov
dec
inc
mov
add
pop
divl
adc
xchg
in
dec
xor
xchg
sub
rcl
xchg
mov
pop
negb
cs
inc
xor
jge
ret
mov
push
sti
push
iret
mov
arpl
pusha
sub
insl
scas
push
xor
jne
out
clc
sub
mov
insb
xchg
aas
adc
push
pop
cmp
xchg
xchg
sbb
int3
shrl
dec
sbb
pop
movsb
bswap
push
push
cmp
shll
push
or
fisubrs
mov
roll
stos
xor
rcll
jge
loope
leave
shll
push
ja
fcom
sub
sub
adc
test
push
mov
popf
in
pushw
shll
aad
cmc
pop
jae
sarl
stos
push
jnp
in
or
mov
add
lret
mov
xor
loop
insl
lahf
mov
dec
jl
mov
pop
cli
push
imul
shll
std
or
or
dec
adc
and
es
adc
ret
rcrl
pop
ss
lcall
jb
outsl
rcrl
lds
loop
mov
sbb
adc
test
jle
xchg
shll
fwait
push
sbb
fcoms
not
icebp
lods
je
jg
ss
mov
outsb
xorl
jne
mov
jns
rcl
mov
data16
fnsave
rcrl
insb
sub
mov
jo
lea
rcll
jp
lock
mov
shll
cwtl
ja
mov
nop
jecxz
stos
sti
mov
or
rorl
mov
es
xor
test
sarl
subb
push
push
mov
rorl
inc
push
ffreep
scas
mov
mov
push
shll
or
lret
push
inc
js
aas
mov
mov
sub
movsl
dec
enter
aam
ret
ljmp
in
mov
pop
into
subl
jmp
jecxz
inc
and
cmp
shll
movsb
jo
xchg
push
cwtl
mov
insl
mov
pop
rcrl
push
adc
rep
leave
roll
icebp
push
mov
dec
mov
loopne
and
push
scas
rcrl
or
sarl
xor
aad
dec
mov
sarl
rcrl
xor
xchg
sbb
push
mov
pop
or
in
adc
mov
jnp
mov
outsb
push
pop
negb
mov
shrb
jp
movsl
inc
popa
dec
mov
pop
jo
mov
push
stc
repz
stos
mov
xchg
adc
ds
hlt
mov
or
sub
roll
les
test
ficomps
xchg
push
xlat
mov
das
dec
jecxz
mov
add
lret
and
movsl
xchg
mov
out
push
shrl
leave
int
fcomip
dec
shl
cld
mov
and
xchg
repnz
xchg
rcl
add
loopne
lret
int3
adc
ds
addr16
lahf
sbb
shlw
mov
popa
loopne
hlt
lods
sbb
ror
cs
mov
dec
push
push
nop
add
in
pushf
jmp
cmp
rorl
iret
test
pop
ss
rcll
sub
rorl
aas
popf
xor
and
je
jmp
push
pop
shl
cmp
vrcpss
es
and
popf
and
xor
mov
push
ss
adc
cmp
loope
jmp
ja
dec
pop
ljmp
xlat
stos
repz
inc
inc
cld
shll
mov
cmc
daa
ret
mov
repnz
or
stc
leave
cli
sub
std
lahf
insl
dec
add
test
mov
rorl
movhps
iret
sti
adcb
mov
dec
call
rorl
pop
push
xchg
mov
test
xlat
lods
push
shl
sub
cmpsl
mov
rcll
and
divl
dec
imul
lods
lahf
loopne
fidivl
push
mov
das
add
adc
mov
ja
adc
mov
sub
xchg
sti
mov
popf
test
roll
cmpsb
mov
cmp
scas
popf
push
bound
mov
sbb
je
pop
push
xchg
int
adc
push
sbbl
jnp
out
das
shl
out
push
mov
cmp
add
xor
jecxz
mov
fsts
cwtl
rcr
xchg
jmp
jne
shrl
notl
in
cmpsb
add
add
xchg
push
mov
sahf
inc
lret
cmp
iret
fbld
jnp
lods
faddl
jge
xchg
aad
shll
xor
pop
mov
in
aad
adcl
lret
jecxz
test
insb
roll
mov
pop
mov
push
mov
mov
ja
push
imul
int
push
mov
pop
inc
lea
aam
inc
out
cmpsb
in
lock
xlat
andb
popa
mov
lahf
mov
scas
shll
fdivs
aaa
cmp
push
xchg
jecxz
mov
and
xchg
mov
xchg
pusha
xchg
outsb
ss
sub
push
push
xchg
cmc
lret
mov
ss
xchg
fcoms
rclb
icebp
push
popa
shrl
jg
mov
push
lahf
xor
test
fwait
mov
jns
xchg
add
test
lock
mov
sbb
cli
shl
jo
xor
push
push
cmp
lock
shl
sti
xchg
subl
stos
fst
pushf
or
mov
mov
jne
mov
push
ja
insb
mov
mov
push
aam
push
shl
adc
dec
lret
fucomip
ds
push
roll
mov
cmp
jp
push
dec
and
xchg
test
in
xchg
add
sarl
dec
sub
mov
arpl
scas
push
sub
rol
addr16
cmp
outsl
cmp
cwtl
inc
xorl
mov
mov
int
pusha
adc
orb
iret
jb
loope
stc
jp
shll
mov
rcrl
ret
ds
push
int3
jmp
vmovlpd
shll
dec
inc
pop
fwait
inc
sar
out
into
pop
mov
xchg
movsl
shr
mov
adc
and
pop
subb
shrl
mov
mov
pop
lods
addl
push
mov
mov
jnp
and
sbb
push
xlat
mov
push
mull
ret
scas
and
jmp
mov
push
mov
xor
ja
adc
sbb
jns
imul
popf
les
daa
int3
xchg
mov
sub
jmp
daa
mov
shrl
in
push
repnz
add
xchg
das
test
mov
inc
or
repnz
rcll
push
cmpsb
sbb
xor
mov
xchg
dec
dec
test
shrl
insb
in
push
xchg
pop
adc
add
sarl
aam
flds
gs
shrl
arpl
lret
and
scas
nop
add
ret
movsl
in
pushf
roll
pop
jbe
mov
adc
inc
iret
daa
rorb
pop
rcrl
cwtl
lret
sub
mov
add
aas
push
cmp
insl
repnz
mov
fimull
sbb
rol
xor
pop
es
and
popf
je
jb
xchg
adc
in
push
pop
mov
lock
push
adc
mov
ljmp
ja
add
lock
movsl
mov
jno
je
push
cld
xor
mov
cmc
mov
aas
movsl
adc
or
loope
iret
push
pop
push
sub
rcll
outsl
rol
mov
gs
orb
xchg
adc
iret
rcll
adcl
lds
je
mov
daa
aad
sbb
adc
testl
pop
push
xor
jg
mov
stos
shll
mov
xchg
shll
and
xor
rorl
xor
imul
ror
scas
sbb
xchg
sahf
scas
cmp
cmp
clc
adc
mov
jg
and
bound
jae
in
rorb
lods
cmc
push
sti
lds
enter
dec
out
movsb
insb
andl
push
roll
lea
or
pop
xchg
cmp
aaa
adc
mov
xchg
adc
mov
pop
nop
das
and
leave
scas
sarl
push
dec
gs
push
cmp
sub
int3
jmp
rcll
jae
fdivr
mov
sbb
aad
cmc
cld
lods
sbb
inc
shl
shrl
sar
xor
or
push
rorl
mov
imul
fcoms
gs
loop
push
and
call
xchg
subl
sarl
std
lea
shll
or
push
jp
pusha
sub
jecxz
sbb
or
fldenv
adc
jmp
shll
push
imul
sub
jecxz
out
cld
push
and
ds
outsb
movsl
mov
repnz
inc
mov
mov
jb
fwait
jecxz
rcl
mov
cwtl
fcomp
rcrl
dec
push
sub
mov
shll
xorb
sub
pop
jns
rcll
ja
sbb
fwait
pop
fldl
lock
sbb
in
mov
xor
jnp
out
sahf
xchg
push
into
rcrl
or
rorl
and
jmp
fs
fimull
xchg
cli
mov
fwait
shll
pop
stos
mov
jle
clc
xor
push
add
jae
lock
sub
fistps
sarl
dec
jp
rcrl
gs
pushf
sarl
ss
mov
adc
dec
mov
cs
popf
shll
outsl
add
mov
shrl
in
into
cmpsl
stc
roll
subb
sbb
and
repnz
enter
pop
ret
shll
shl
pop
cli
mov
sub
push
js
ret
call
pusha
add
dec
mov
mov
lods
and
movsl
lcall
out
imul
and
mov
dec
stc
and
cmp
pop
cmp
into
je
adc
and
mov
jno
xlat
int
or
imull
mov
and
jne
sahf
fmull
dec
xor
xor
imul
ret
mov
pop
stos
rorl
inc
mov
stos
lret
rcll
push
aaa
cmp
pushf
inc
jnp
pop
andl
sub
cmpsb
xchg
loope
sbb
push
fidivl
add
out
enter
pop
test
ror
fcoml
xchg
mov
fs
cs
sbb
jns
cmp
adc
clc
and
lret
test
scas
enter
and
into
mov
add
adc
lcall
imul
addr16
pop
mov
and
sub
push
mov
popa
jmp
rcrl
rcll
flds
popa
out
rcll
dec
iret
rol
lock
pop
mov
push
sub
adc
rcrl
pop
aas
leave
pop
repnz
and
shr
xor
and
push
mov
negb
pop
aas
jl
adc
aam
xor
mov
adc
mov
ljmp
jmp
pop
mov
dec
jbe
roll
jno
mov
orb
cmc
or
jbe
jmp
rorl
into
les
in
lahf
shrl
xchg
and
rorl
jb
or
arpl
std
adc
leave
sbb
sub
mov
roll
push
xchg
pushf
arpl
sarl
mov
sub
inc
add
mov
sbb
add
xor
repnz
push
fs
mov
shll
xor
mov
inc
add
cld
xchg
pop
rcl
mov
roll
stos
test
push
xchg
ljmp
roll
scas
fcmove
aas
cmp
clc
lock
orb
shr
out
scas
ss
pop
out
sar
inc
shlb
sbb
std
rcll
jne
cmpsl
daa
shll
popa
inc
sar
push
jge
cmp
insl
push
rcr
lcall
jmp
roll
jne
jl
lods
shll
sub
jno
je
push
test
fmul
xchg
int3
insb
mov
sbb
mov
sub
xchg
push
push
loop
aad
lds
xchg
negb
rcl
push
xchg
dec
xchg
rorl
rclb
push
sbb
and
adc
fsubs
and
outsl
xchg
push
mov
out
hlt
sub
stos
aam
rcrb
scas
or
sar
push
out
sti
outsl
pusha
lods
cmpsl
push
rcl
lahf
icebp
fadds
push
mov
std
adc
push
and
lcall
roll
and
fwait
movsb
in
and
pop
outsb
inc
rcrl
inc
sub
add
mov
push
rorl
test
cs
fdivrs
sbb
push
orl
jg
sub
mov
shl
sub
fstpt
mov
test
push
xchg
xchg
jmp
sti
mov
std
jmp
xchg
aam
push
out
repz
add
int3
test
rcrl
stos
test
aaa
fisubrl
rorl
data16
xor
in
mov
add
mov
repnz
int
cmp
bound
rorl
jl
fistpll
shrl
push
mov
sarl
cmp
addl
lcall
stc
add
fisttpl
inc
xor
aam
popa
jp
xchg
push
sub
in
and
jae
ror
dec
movsl
sub
push
jbe
mov
stos
sbb
xorb
jb
pop
mov
daa
rorl
lods
cli
sbb
pop
cmp
rcrb
ret
pop
ror
aam
jg
mov
call
leave
icebp
dec
dec
in
aad
scas
push
aaa
ds
jg
out
pop
push
push
pop
fldt
out
mov
sarl
dec
inc
rcrl
ret
shll
lods
adc
pop
fisttps
sarl
outsb
pop
xchg
mov
loop
inc
andb
sarl
mov
ret
sahf
sarw
push
rcrb
int3
push
push
sbb
lods
leave
inc
lcall
push
pop
lods
mov
stos
insb
loop
pushf
jp
movsl
and
adc
dec
loope
shll
push
xchg
adc
divb
adc
mov
fwait
call
jmp
xchg
rorl
dec
xchg
mov
dec
rcrl
into
mov
pop
arpl
push
das
loop
and
int3
sarl
lret
scas
jnp
sub
rcrl
mov
sarb
fistpll
push
adc
insl
shr
movsl
xchg
pop
sahf
lods
add
loopne
insb
es
int
xchg
jmp
addr16
shrl
fiaddl
pop
enter
out
popa
outsb
stos
loop
lods
rcll
das
cs
in
jmp
in
xorb
sub
push
iret
fnstsw
xchg
repz
frndint
sub
xchg
push
mov
inc
aas
or
mov
shlb
in
jbe
mov
dec
push
pop
push
les
iret
push
popf
faddl
out
jb
loop
ds
xor
dec
fsubl
stc
mov
and
mov
ja
jecxz
xor
movsl
xchg
das
dec
cmpsb
xor
repz
lcall
jmp
rcrl
cmc
xchg
inc
mov
xchg
inc
dec
fimull
adc
sahf
rcrl
cmc
test
iret
test
rcr
cmp
shll
jnp
shll
inc
mov
pop
int
or
movsl
jbe
adc
mov
ss
shrl
rcl
das
xor
add
shrl
out
adc
in
and
or
stc
mov
xchg
mov
mov
dec
mov
cld
ja
inc
cmp
daa
xchg
movsb
push
aad
pusha
int
inc
sarl
arpl
in
jo
dec
pop
jae
sbb
bound
jne
lahf
pop
cmp
push
shrb
push
jo
xchg
push
xchg
sbbl
xchg
rcll
outsl
sti
mov
inc
scas
add
scas
leave
scas
mov
push
cmp
mov
adc
pop
roll
xchg
daa
or
nop
sub
push
add
aas
mov
fwait
rcrl
xchg
lret
jl
sub
sbb
out
mov
pop
push
mov
pop
fcomps
cmpsb
pop
sub
aad
popf
mov
aam
lret
push
push
lret
mov
rorl
addr16
xchg
das
mov
int3
shll
loop
sub
and
push
pushf
mov
push
hlt
mov
sub
dec
lea
mov
or
negl
jmp
xlat
sbb
inc
rorl
jo
xor
and
push
cltd
add
xchg
test
arpl
dec
push
jmp
jecxz
movsb
pop
outsb
mov
jo
inc
xlat
roll
cmp
push
xchg
hlt
in
xchg
add
fstps
inc
fcomps
mov
call
jg
scas
rolb
dec
shll
arpl
fisttpl
pop
dec
jns
data16
test
das
cmpl
cs
jg
ds
stc
mov
xor
push
and
jge
lock
push
std
insl
nop
shrl
loop
rcll
rorl
mov
push
sbb
add
fistpll
fmuls
fdivrl
mov
mov
shll
xor
insl
rol
fisttpl
call
shl
popa
orl
ret
sub
add
xor
orl
jg
shrl
mov
xor
rcr
or
stos
into
aam
sbbl
jae
fucomp
sbb
pop
adc
rcll
pop
jg
pop
pop
cli
out
loopne
cmp
dec
ret
call
jecxz
cmp
outsb
xchg
rorl
lds
roll
gs
push
pop
je
es
imul
mov
dec
stos
nop
mov
pop
dec
jbe
push
xchg
cmp
pop
adc
xchg
repnz
cmp
rorl
sbb
in
push
mov
xchg
jle
sahf
fcompl
push
rcl
and
psrld
shll
push
out
roll
xor
mov
cmp
shrl
sub
adc
shll
pop
rcr
shr
xchg
xchg
fxam
xor
sub
shll
int3
scas
sarl
xor
sahf
enter
pop
cltd
push
jnp
loope
lcall
mov
pop
inc
ror
jp
imul
mov
xchg
xor
mov
jb
popa
cmp
adc
in
xchg
and
repnz
inc
add
pop
rcll
pop
fsts
or
sub
add
insl
rorl
push
mov
popa
xchg
push
pop
lods
inc
rcr
jb
inc
test
movsl
cmp
in
add
xor
pop
mov
xchg
push
pop
xchg
xor
cwtl
outsb
push
sub
sub
sti
mov
mov
stc
push
int
lret
xor
inc
fwait
rol
and
cmp
stos
subl
popf
sti
enter
adc
cmpl
rorl
sbb
mov
mov
dec
bnd
ja
or
ljmp
push
push
repz
cmp
inc
cld
rorl
adc
pop
sbb
cmp
ret
scas
pop
out
or
roll
lahf
addr16
fwait
sub
test
sbb
cmp
mov
shrl
punpcklbw
adc
inc
or
pop
lea
ror
sub
mov
adc
sarl
push
in
push
shr
add
popf
stos
lcall
fcomi
cmpsl
rcl
add
cmp
inc
sarl
imul
pop
test
push
lahf
subl
jae
mov
aad
in
ret
pop
sti
test
dec
add
cmpsb
cmpb
adc
cmp
clc
mov
stos
or
xchg
xchg
xchg
lahf
jno
mov
daa
and
push
pop
and
push
fstps
call
xchg
and
xchg
inc
aam
std
jle
xchg
cmp
scas
xchg
or
mov
test
jne
imul
sarb
roll
ds
adc
int
lret
subb
sbb
sbb
inc
xchg
fmull
rcrb
pop
ja
add
jae
push
xchg
sub
mov
lcall
mov
aas
mov
rcrb
mov
sub
loop
rcl
data16
int3
mov
xor
push
or
in
or
inc
std
push
push
out
mov
xlat
rcll
hlt
mov
adc
pop
cltd
mov
pop
shr
daa
stos
jae
lcall
or
jecxz
loop
adc
in
dec
cs
outsb
adc
in
push
lea
pop
sahf
xchg
sarl
push
sbb
fdivrs
mov
shl
dec
push
sbb
sbb
loop
xor
scas
or
int3
jns
call
movsb
push
loope
dec
fldl
pop
out
mov
jo
push
mov
add
pop
mov
stc
fstl
scas
inc
aaa
aas
or
jnp
or
cmc
std
mov
push
repz
les
mov
jle
mov
mov
leave
outsb
pop
jmp
sar
fimuls
into
dec
les
xor
aam
loop
mov
inc
call
jp
inc
daa
orl
sahf
insb
lods
adc
sub
rorl
clc
js
jbe
xchg
push
cs
jb
shrb
test
fistl
mov
test
inc
and
in
rorl
stc
insb
fsubl
cmp
dec
imul
ret
jo
mov
shll
dec
pushf
mov
or
and
icebp
add
out
mov
pop
dec
xchg
and
out
rclb
fnstsw
xor
xchg
push
cwtl
cmp
pop
xchg
mov
rorl
adc
push
jg
xchg
aaa
out
mov
xchg
gs
lret
sahf
xor
test
push
rcll
mov
js
scas
push
push
sbb
cwtl
mov
outsl
shll
mov
push
rcl
xchg
ret
adc
xor
pushf
push
pop
mov
mov
xchg
mov
call
xor
int
pop
or
hlt
jp
pop
shll
test
loope
fsubrs
dec
mov
push
mov
adcl
add
xchg
ficompl
addb
gs
push
or
xor
shl
and
sbb
add
aad
jecxz
sar
data16
fnstcw
movsb
mov
jl
std
ficomps
mov
rcll
cmpsb
imul
xchg
outsl
add
cmp
scas
ret
xchg
nop
rcrl
jecxz
cwtl
int3
fimuls
xor
xchg
add
pop
shl
cmp
je,pt
scas
push
push
fwait
push
adc
cmp
inc
movsl
les
push
es
add
pop
mov
pushf
inc
wrmsr
push
shll
cmpsl
lret
adc
mov
adc
pop
cmp
mov
pop
add
shr
lcall
push
repz
shll
mov
sbb
in
daa
xchg
cmc
xchg
jnp
adc
dec
inc
bound
jbe
stos
dec
rcl
mov
sahf
sbb
lods
push
mov
clc
test
shlb
icebp
add
cltd
jmp
mov
or
mov
mov
shrl
mov
fists
int
or
push
pop
stos
testl
adc
cmp
push
in
inc
mov
inc
mov
pop
roll
mov
es
and
add
lret
out
popf
int3
test
out
arpl
movsl
ret
cmpsb
pop
mov
jns
scas
xor
mov
adc
push
or
lods
mov
pop
pop
jno
shlb
mov
sti
lahf
int
sbb
push
or
push
push
sarb
cmp
mov
dec
adc
iret
xchg
and
jne
stc
jge
push
roll
leave
rcl
notl
pop
ljmp
and
mov
push
test
mov
push
loop
aad
xchg
pushf
jae
adc
int
stos
rcl
push
or
cld
cmpsb
mov
jns
push
test
jmp
test
idivb
sarl
imul
lods
adc
or
cltd
scas
out
jmp
sub
pusha
cs
xlat
pop
mov
jnp
and
adc
ficompl
daa
shr
out
lcall
or
jecxz
inc
and
xchg
rcll
in
ljmp
adc
xchg
test
xchg
pop
psubusb
sbb
ret
mov
loop
int3
mov
je
jecxz
push
push
xor
mov
and
xchg
cmpsb
test
sti
cmpl
fisttpll
imul
jo
push
ja
stos
jbe
jle
mov
jmp
sbb
test
sar
pop
stc
stos
push
xor
push
sub
xchg
or
sbb
mov
imul
push
xlat
aas
dec
shll
lret
outsb
in
sbb
ret
mov
lods
dec
sbb
dec
out
sub
shll
int
adc
sarl
mov
int3
shl
jbe
ficomps
in
in
pop
sub
mov
into
mov
push
repnz
dec
cmpsb
adc
hlt
loop
jb
rorl
sbb
pop
jo
xlat
mov
aam
clc
sbb
rcr
test
mov
shrl
or
xor
mov
pop
scas
dec
sub
jle
cmp
out
cmpsl
jae
xor
push
scas
ja
jbe
js
stos
scas
cmovp
add
push
jl
adc
mov
sarl
arpl
popa
shl
dec
mov
enter
ljmp
shll
push
adc
add
jne
xor
test
or
push
mov
add
pop
mov
stos
mov
leave
fcom
insb
dec
punpckhwd
adc
push
nop
pushf
add
ljmp
xor
sahf
js
mov
adc
sub
roll
js
sbb
or
push
loope
shll
das
adc
mov
adc
cmp
fs
mov
mov
call
or
pop
rcll
dec
ljmp
out
and
jl
rclb
push
add
xchg
jecxz
push
daa
nop
hlt
sbb
dec
rcr
roll
stc
jl
lcall
fwait
insl
dec
lods
addr16
fists
cs
sbb
add
ret
sti
mov
cmp
fistpl
pop
or
or
and
int
mov
clc
adc
mov
cmpsb
rcl
je
push
fwait
mov
fidivl
les
mov
inc
popf
xorb
pop
shll
jnp
mov
js
add
push
dec
xorl
xor
dec
jmp
push
add
dec
xor
sbb
repz
push
rorl
test
sbb
cmc
data16
shll
push
sbb
inc
dec
sub
test
into
cmp
into
out
dec
xchg
cmp
sbb
xchg
push
inc
push
jmp
lret
and
jb
cmpsb
lds
shll
lods
push
adc
sub
rcll
repnz
add
add
mov
shll
rcr
add
in
mov
sahf
inc
mov
in
outsb
pop
inc
aas
shrl
addl
stos
jg
jp
cli
xor
ror
test
cld
test
popa
cmpsb
xchg
pop
jl
movsl
cltd
sarl
scas
lods
add
cld
adc
lcall
jno
inc
xchg
rorb
pushf
rclb
lret
cmp
sti
push
push
into
sbb
outsb
lods
insb
mov
dec
push
loopne
sub
or
cmp
push
xchg
rcr
cld
lret
xchg
and
fisubrl
outsl
nop
xlat
adc
add
mov
push
leave
imul
push
rcll
iret
sub
jmp
ss
push
outsb
mov
push
push
push
mov
sub
lcall
jmp
fstpl
sti
or
mov
cld
or
jg
sar
mov
bound
or
and
repz
mov
sub
add
shrl
push
cmc
mov
sarl
cmp
adc
cmp
cli
mov
inc
ror
jbe
mov
push
rolb
es
mov
jecxz
push
mulb
les
cmc
mov
push
inc
std
shl
rclw
shll
inc
xchg
aam
lods
pop
dec
imul
and
shll
icebp
ja
rclb
push
in
add
xor
popf
shr
fcomi
dec
sarl
psrlq
cli
xor
xchg
fsubrl
adc
mov
rolb
pushf
out
mov
ror
lock
xchg
inc
aaa
xor
lret
mov
mov
sub
mov
jle
imul
aam
jnp
rcll
dec
test
rcrl
stos
jp
imul
imul
add
jnp
shr
add
mov
aam
rcrl
jbe
gs
in
pop
push
aaa
and
lods
mov
roll
or
mov
int3
adc
jmp
adc
je
leave
mov
pop
stc
pop
mov
pop
cli
and
popf
fcomps
cmp
ret
insl
pop
roll
imul
iret
dec
sub
cltd
lds
shrl
out
or
pop
aad
loopne
out
popf
scas
pop
jge
push
jle
mov
jl
jg
roll
out
push
xchg
filds
mov
jecxz
push
pop
xchg
in
sub
inc
cld
jecxz
mov
jnp
push
lahf
sahf
dec
shl
leave
push
rclb
mov
test
shld
mov
in
pop
jno
imul
insb
mov
call
dec
adc
repz
pop
adc
push
outsl
xor
std
sub
push
sarl
jl
rorb
mov
inc
jo
cmp
das
int3
push
xor
mov
shrl
iret
shr
test
xchg
adc
add
dec
dec
ja
data16
dec
loopne
and
test
xchg
push
out
jnp
push
jmp
dec
fstl
mov
xchg
and
adc
and
aam
push
mov
mov
rcll
and
int
test
add
sarb
cmp
mov
call
cwtl
mov
and
mov
push
mov
repnz
in
insb
pop
fwait
or
faddl
cmp
stc
les
movsl
jmp
popf
jnp
sbb
pop
xchg
cmp
lods
and
test
adc
mov
nop
shlb
dec
shll
inc
jmp
push
aam
repz
jmp
sub
mov
jno
xchg
out
pop
shrl
cmc
clc
sarb
adc
or
push
or
shll
cmpsl
shlb
jle
test
shr
hlt
setne
addb
adc
xchg
shrl
std
sbb
xchg
push
shr
ss
inc
push
lods
les
push
sub
mov
mov
pop
sub
in
gs
mov
sbb
test
cs
es
inc
mov
mov
pop
repnz
roll
inc
jno
imul
fldl
arpl
cmpsb
mov
sub
test
inc
jmp
shrl
adc
jo
clc
pop
xchg
outsl
or
ret
dec
push
mov
pop
push
imul
push
enter
hlt
mov
pop
test
jns
mov
xor
rcl
pop
sbb
adc
aam
xchg
mov
nop
rcll
xor
cmp
leave
rorl
mov
daa
je
adc
mov
mov
rcrb
cmc
fadd
fistl
movsb
aad
inc
sbb
inc
adc
push
push
call
jno
mov
sbb
dec
rcrl
in
push
cs
fdivrl
imul
jecxz
push
push
adc
roll
aaa
out
shll
pusha
das
loopne
xlat
dec
insb
mov
repz
rorl
jge
xor
cmp
inc
mov
test
mov
and
pushf
mov
push
mov
mov
int
lret
mov
push
sub
rorl
sbb
subb
push
cltd
xchg
icebp
stc
shr
jg
popa
shlb
xor
bound
repz
int3
insl
stos
aam
mov
xchg
dec
xlat
call
push
dec
mov
sarl
stos
jo
jmp
out
mov
xorb
jmp
sbb
fldcw
into
int3
aad
stos
arpl
movsl
mov
loope
xorb
adc
mov
rcrl
dec
sbb
inc
mov
sub
jl
fildll
lret
call
popf
rcl
cmpl
shll
add
out
rcrl
jmp
loopne
in
rorl
aam
and
jbe
adc
xchg
imul
dec
into
int
rcrl
pop
xchg
jne
vfrczps
cmp
jb
fimull
lods
leave
mov
sbb
pop
scas
ret
shrl
int3
push
rolw
dec
xorl
lds
fdivr
and
jno
out
aam
pop
jecxz
pop
out
cmp
mov
call
cmpsb
rcr
rorl
push
rcrb
rcrl
adc
jns
push
mov
and
inc
in
push
dec
pop
inc
jne
js
dec
cli
sar
jnp
iret
mov
push
adc
test
add
out
jecxz
push
lea
cmp
and
insl
xchg
shlb
insb
push
insl
leave
lret
mov
roll
pop
mov
shll
xchg
shl
xor
xor
dec
mov
pop
pop
sub
pop
push
pop
mov
adcl
pop
mov
jecxz
xchg
das
sub
imul
lret
or
insb
mul
sub
mov
pop
ja
push
sub
and
xor
dec
ret
sub
pop
shll
out
xchg
sbb
add
sbb
cmc
rcll
xchg
mov
shll
inc
sub
aaa
jae
push
jl
xchg
sbb
popa
pushf
shll
lods
add
test
es
jne
push
aam
add
mov
fs
arpl
iret
rcll
sub
cwtl
rcll
repz
mov
jg
xchg
aas
stc
es
fcmovne
shll
ret
fwait
lcall
scas
in
cwtl
ror
es
mov
leave
pop
and
sar
or
shll
cmpsl
add
loop
js
mov
and
jns
rcll
push
mov
push
sbb
adcl
repz
mov
jno
jmp
cld
push
int
push
ds
pop
cmp
jae
scas
adc
movsl
cs
or
dec
pop
lahf
sarl
icebp
sub
shll
sbbl
rcll
psrlq
into
lahf
aam
inc
dec
jne
stos
or
jg
cmp
push
cmpsb
ss
enter
sub
fwait
and
cmp
lahf
mov
mov
test
jge
xor
xor
shrl
pop
lock
pop
arpl
push
inc
adc
mov
push
ror
lret
test
xor
xor
sbb
out
inc
scas
jmp
dec
sarl
mov
jb
xor
pop
mov
rorb
roll
sti
inc
jae
mov
movsb
leave
xor
push
icebp
mov
cmp
cmp
cmp
add
into
xchg
mov
sub
rcl
pop
lock
push
sub
ret
das
xor
or
push
jae
push
int3
pop
cmp
push
cmp
mov
jae
mov
mov
push
call
push
inc
or
push
rorb
sub
std
dec
outsl
sarl
jns
sub
xor
xlat
idivl
mov
movsl
adc
imul
ja
xor
and
stos
rorl
pop
sbb
xchg
das
push
mov
xlat
mov
jg
push
shlb
jns
mov
and
push
cltd
lahf
nop
mov
mov
orl
xor
mov
rcl
push
and
shl
in
xor
rcr
outsb
jb
dec
in
jnp
outsl
inc
mov
add
and
popl
rcl
sbb
shlb
and
sarl
add
sahf
out
mov
push
xor
inc
iret
lods
fisttpl
jns
push
mov
add
stos
xchg
and
xchg
stos
hlt
mov
jo
pop
ss
jae
push
push
lock
stc
push
mov
pop
test
or
rol
stos
mov
leave
mov
and
in
and
adc
cmp
cmpsl
stos
push
mov
adc
pop
mov
pandn
pop
roll
call
jp
sarl
cmpsl
cs
dec
rcrl
out
ret
cltd
add
ret
add
jmp
xchg
loope
mov
mov
cld
in
and
imul
into
movsl
aaa
fsub
inc
lahf
outsl
mov
sbb
jae
sarl
dec
adc
pop
jmp
pop
push
aas
dec
adc
repz
lahf
pop
sbb
jg
movsb
ret
or
testb
lret
ror
adc
dec
je
out
in
icebp
and
test
and
fimull
scas
jge
mov
push
mov
shrl
push
push
push
xchg
int3
mov
addl
ror
repnz
in
mov
add
jnp
xchg
cmpsb
sahf
std
sbb
fwait
iret
mov
mov
or
aam
mov
ja
pop
in
xchg
orb
add
push
pushf
cwtl
psrlq
jae
xchg
rcrl
pop
xor
ret
repnz
mov
dec
add
mov
sub
loope
jmp
ret
das
test
fs
not
lret
fmulp
lds
mov
rcl
mov
jg
push
loop
rcl
int
add
sub
xchg
sub
push
pop
arpl
rep
mov
rcrl
fldcw
roll
jl
xchg
dec
mov
dec
add
cs
aad
jns
test
and
shlb
roll
pop
lods
pop
cmp
push
out
xor
xchg
pop
cmpsl
daa
scas
cwtl
push
testb
sti
mov
sarl
push
ljmp
je
fstps
lods
pop
into
cmp
shll
cmp
mov
sub
into
loope
xor
xor
fwait
cmpsl
imul
adc
mov
adc
jmp
sub
xchg
repz
dec
aas
push
jno
push
daa
cld
cmp
cmpsl
ds
lret
lds
add
or
push
mov
sti
sub
test
xchg
mov
out
shl
xchg
push
sbb
xor
lret
adc
or
adc
sarl
xor
fmuls
sbb
inc
negl
out
or
pop
insb
xchg
xor
push
xchg
mov
xchg
push
into
pop
xchg
popf
pop
adcl
jo
push
test
in
push
add
pusha
test
or
cmp
sbb
out
scas
add
pop
lahf
cmp
xchg
scas
push
or
xchg
mov
mov
push
sbbl
mov
push
sbb
adc
push
dec
push
outsl
cli
cmp
rcr
push
add
xchg
test
aas
lock
nop
pop
mov
leave
cli
fwait
pop
push
and
fisttpl
sub
iret
add
pop
inc
push
stos
call
xor
rcl
fs
aad
pop
fdivl
shll
jg
sub
sbb
test
mov
shlb
rcrl
lock
mov
xchg
roll
js
lcall
rcll
outsl
inc
hlt
lret
shr
pop
push
pop
fiadds
or
int3
ds
or
sub
sub
pop
call
inc
shll
xchg
and
push
cmp
stos
inc
jecxz
roll
adc
icebp
cmp
mov
adc
and
mov
imul
das
inc
lcall
aad
pop
cli
push
or
sbb
lds
push
dec
push
pusha
icebp
out
lret
cmpsl
jo
roll
cs
shrb
jns
push
lahf
test
fwait
dec
or
sti
fst
sub
mov
ja
jo
jno
out
dec
push
xor
inc
cmp
subl
inc
test
lds
stos
push
rol
or
xor
mov
xchg
mov
mov
lret
fstl
jle
or
mov
pusha
xchg
push
aam
aas
data16
jecxz
inc
dec
daa
cltd
pop
mov
insl
sbb
call
jp
sar
subl
cmpsl
ret
push
xchg
add
cmp
jmp
mov
dec
shrl
arpl
jbe
sbb
into
in
fdivp
in
scas
shrb
roll
fdivrl
rcrl
aaa
fwait
and
push
frstor
push
shlb
pop
roll
mov
sbb
adc
xor
xchg
xor
int3
jne
xchg
shrl
js
and
cli
out
jle
sarl
jne
outsl
dec
jge
fisttps
mov
dec
mov
and
jle
xchg
push
sub
xchg
fwait
pop
mov
shrl
sbb
aaa
push
inc
mov
adc
push
jnp
sub
sahf
sar
xorl
lods
cmp
mov
rcrb
push
mov
mov
or
roll
xor
outsb
push
test
aam
cmp
rcrb
xor
jl
xor
insb
shl
sub
sub
imul
jmp
inc
pop
mov
pop
cs
bound
mov
fs
ror
shrl
mov
adc
sbb
sahf
sbb
jno
int3
xchg
xchg
int3
scas
xchg
add
and
jecxz
movl
push
inc
sbb
rcll
xor
shr
jl
sahf
dec
mov
popa
sub
sbb
ja
or
push
pop
pop
sub
cmpsl
dec
push
cmp
lods
inc
jmp
cwtl
std
push
adc
pop
mov
push
mov
sbb
jge
je
mov
aad
cmp
lret
mov
es
in
xchg
adc
pop
sbb
sar
testb
xor
gs
cmpsl
pop
mov
push
adc
ret
rorb
and
shrl
mov
ja
rol
push
ljmp
xchg
repz
rcr
jno
pop
dec
cld
xchg
push
nop
ds
addr16
cmpsb
jecxz
adc
sarl
or
mov
test
imulb
test
cmp
cmp
push
jo
rorl
push
lahf
or
scas
roll
cmp
or
xchg
mov
lds
cmc
shll
add
xchg
and
dec
push
add
sarl
gs
and
rcr
push
shlb
xchg
cmp
sbb
and
pop
fcmovnbe
popf
sbbl
fs
aam
rcll
push
cmp
mov
xor
mulb
cmpsl
movntps
cmp
cld
mov
popa
or
mov
xorb
jp
mov
sbb
cmc
adc
or
stos
aad
mov
rcll
cs
adc
push
xorb
mov
add
pop
roll
add
imul
jno
xor
push
shlb
fcoml
test
dec
std
shll
ljmp
test
push
sar
and
or
in
int3
rol
sbb
loop
mov
outsl
dec
in
addl
and
mov
jo
cmp
imul
push
inc
pushf
push
push
xlat
aad
lea
xor
aam
cmpsl
dec
arpl
mov
xor
jmp
enter
shll
adc
movsl
push
pop
cltd
les
jle
sar
insb
mov
nop
mov
jecxz
ret
and
clc
in
out
push
je
xchg
roll
pop
rol
mov
cmp
repnz
mov
and
bound
sub
icebp
imul
shll
divb
mov
cli
movsb
mov
test
ss
lods
pop
pushf
rcr
xchg
sbb
and
push
mov
int3
xchg
xchg
or
imul
test
aaa
dec
fcoml
jge
or
sti
mov
push
dec
jle
call
xlat
sub
cmp
shll
test
rcr
orl
sbb
inc
shll
insl
or
addr16
jp
adc
rorl
notl
ret
roll
rcll
dec
xor
scas
insb
jbe
jl
in
jno
inc
imul
mov
cmp
mov
sbb
shll
gs
in
jb
xorb
jae
mov
fdivp
cmp
cli
inc
loope
sbb
es
ret
daa
adcl
jmp
idivl
jle
xor
vsqrtss
and
mov
inc
out
mov
pop
xlat
sbb
xor
ret
ds
dec
push
in
sub
sarl
inc
and
adc
jb
mov
shll
sub
jp
mov
dec
stos
lahf
xchg
sahf
push
insb
sbb
shl
fadds
xor
rcl
insl
inc
inc
push
jbe
shll
sti
sub
insb
push
push
xchg
push
mov
mov
push
not
cld
mov
jbe
jnp
and
xor
dec
cltd
dec
mov
or
mov
shrl
in
enter
pop
fisttpll
fmul
das
fdivp
shr
mov
enter
sarl
imul
rcll
in
int
jmp
jle
xchg
cmp
push
push
mov
fisubs
jo
mov
push
aad
aad
scas
cwtl
cmc
dec
sbb
popf
insl
mov
aas
iret
mov
lods
fbstp
ljmp
shrl
add
push
adc
das
lods
sub
lock
dec
add
fs
mov
pop
push
shlb
das
in
shl
ja
jo
scas
xchg
push
fwait
inc
les
imul
or
es
dec
popf
sub
push
xchg
outsb
mov
jl
test
std
rcll
sub
mov
mov
xor
ja
shrl
sub
xchg
jge
dec
mov
dec
divb
push
in
out
cld
inc
dec
or
lods
in
shl
sarb
adc
mov
xchg
xor
jg
lahf
nop
mov
test
xchg
lret
mov
shl
mov
movntq
out
push
subb
movsl
push
inc
mov
out
mov
in
rcr
pop
xchg
roll
inc
shrl
mov
in
dec
mov
test
ret
arpl
xchg
rol
sbb
js
dec
mov
push
outsl
cmova
sub
and
inc
pop
cli
mov
push
xchg
push
ljmp
arpl
ss
test
inc
adc
movsl
test
cmp
mov
xchg
dec
and
ror
and
pusha
out
xchg
in
sbb
push
mov
dec
sbb
enter
rcr
push
pop
fwait
std
xlat
dec
push
lret
cmp
popf
mov
push
dec
aaa
sub
fwait
test
out
or
pop
mov
sub
mov
push
cmp
mov
sub
lcall
push
xor
add
push
shl
push
sbb
jge
mov
adc
roll
icebp
fwait
call
pop
lret
hlt
mov
mov
jl
sbb
cmp
test
and
inc
repnz
add
xor
mov
stos
icebp
arpl
push
adc
cli
or
cmp
lret
mov
rcll
push
les
mov
shrl
sub
push
daa
rorl
enter
rorb
add
and
push
or
outsb
sti
push
sbb
xchg
out
test
inc
mov
push
sarl
mov
stc
incb
pop
sbb
mov
xchg
push
shrl
in
icebp
xchg
test
ficompl
mov
push
cmp
jns
or
in
and
push
pop
mov
xchg
inc
shll
and
mov
repz
loope
out
cmp
bound
jecxz
test
aaa
fidivs
cmpsb
jmp
or
xor
pop
cli
jle
jmp
sub
notl
lcall
dec
pusha
mov
cmc
shrl
sbb
call
jp
inc
adc
dec
mov
xor
or
rorl
jmp
outsl
out
dec
xchg
shrl
inc
aam
push
in
jbe
into
adc
sbb
adc
into
xlat
mov
or
and
jecxz
cmp
dec
shll
xchg
aad
sahf
pop
pop
int
jmp
rcrl
xor
xchg
call
adc
sbb
sti
dec
std
pushf
inc
rol
or
cltd
xchg
shl
push
adc
shr
xor
icebp
jge
push
mov
xor
adc
pushf
push
pop
push
test
ficoms
rcrl
jp
push
pop
dec
fnsetpm(287
repz
push
inc
push
mov
leave
sarl
clc
ficomps
push
insl
icebp
es
sbb
pop
shll
pop
sti
lret
aad
testl
ret
insb
das
sarl
in
adc
loopne
lods
pushf
xchg
outsb
repz
out
inc
and
xor
add
sub
enter
stos
fwait
mov
cmpb
pop
push
or
fistl
cmp
sbb
pop
mov
lret
ljmp
shll
push
pop
int
mov
dec
in
test
mov
leave
scas
repnz
rcl
mov
cmpsl
sbb
fcmovbe
loope
add
roll
jl
inc
addr16
push
mov
pop
push
sahf
mov
push
mov
popa
mov
lods
rorl
jg
add
leave
movsl
rorl
xchg
add
mov
rcl
call
iret
shr
mov
sbb
or
sub
xchg
sarl
lret
mov
inc
lea
push
fwait
lods
bound
xlat
shll
jp
xchg
bound
adc
push
add
in
mov
scas
repz
mov
movsb
inc
and
add
daa
fwait
pop
shrl
ljmp
xor
nop
xchg
sub
push
test
cld
mov
repnz
cltd
pop
cmc
and
or
xchg
dec
dec
test
lahf
jae
xor
sub
cmp
xor
shll
subps
rcrb
nop
cmpsb
push
add
inc
negl
and
in
call
lods
push
ret
popf
sub
out
pop
mov
and
notl
pop
adc
gs
sub
xor
shll
inc
adc
jno
rcrl
mov
push
inc
fstp
and
bnd
dec
rcrl
int
stos
call
jle,pt
int3
shll
shrl
idiv
push
and
jnp
int
out
dec
rcrl
pushf
cwtl
push
push
pop
push
idivl
sbb
lods
push
movsb
mov
addl
or
jl
cmp
repnz
ficomps
lea
pop
mov
inc
mov
push
roll
sub
leave
dec
push
stos
push
push
stc
push
xchg
adc
mov
mov
add
push
xchg
fdivrl
mov
inc
aad
adc
jae
in
pop
shl
sbb
push
mov
sbb
push
cld
sbb
xchg
shll
add
jbe
test
pop
mov
mov
push
hlt
cmp
test
dec
mov
loopne
or
or
hlt
push
int3
test
test
cmpsl
sub
shl
outsb
mov
xchg
push
jp
cltd
mov
mov
xchg
test
cmp
mov
jg
or
jne
inc
outsb
sub
ljmp
cmp
fidivrs
xchg
sub
js
test
adc
add
sbb
cmpsl
sbb
shrl
dec
lahf
icebp
push
das
inc
sarl
cmp
and
pusha
shll
insb
ja
in
mov
jns
xchg
mov
btr
xchg
outsb
jb
shll
shl
jne
out
push
add
mov
jbe
shll
test
aaa
sbb
stos
roll
imul
sbb
inc
xor
shrl
mov
insl
movsl
sbbb
mov
ret
mov
mov
stc
fistps
mov
insl
sub
leave
call
jp
ficompl
sbb
outsb
pop
pop
ret
clc
push
add
call
xchg
dec
jnp
pop
cmp
jbe
pop
fs
lods
rcll
into
dec
shll
mov
pop
xchg
scas
and
and
dec
jb
xchg
jo
cmp
mov
jle
movsl
push
adc
filds
mov
mov
dec
push
dec
rcl
mov
lods
cmpsw
shl
out
fwait
inc
pop
nop
jae
movsb
lods
push
inc
cld
jge
mov
or
dec
mov
scas
pop
into
push
loop
xchg
xchg
mov
adc
test
outsl
mov
cli
cs
in
es
inc
scas
fnstenv
xchg
or
les
mov
addr16
mov
lods
cmp
xchg
bound
rcr
sbb
inc
mov
shll
mov
cltd
sub
xchg
adc
daa
mov
sti
pop
rol
repnz
or
pusha
inc
gs
jns
sub
roll
jmp
add
in
ret
ror
loopne
add
pop
inc
push
push
push
popa
das
xchg
fs
mov
test
aam
fistpll
in
mov
mov
arpl
dec
jp
stos
sbb
and
xchg
les
pop
rorl
rcll
or
push
addr16
fisubl
push
jbe
mov
xor
pop
push
lods
cld
shlb
adcb
add
adc
mov
sbb
cmp
std
test
add
lahf
cli
fcompl
xchg
inc
imul
outsl
sub
repnz
adc
mov
cmp
fstl
enter
pop
mov
popf
roll
fs
cwtl
dec
cmpsb
insb
shrl
bound
adc
lods
lcall
jmp
ja
xchg
sub
mov
mov
ss
push
cmp
ds
out
stc
push
adc
cli
int
or
xchg
lahf
lods
or
push
sub
fcomps
mov
loope
mov
rcll
inc
xchg
jns
stos
in
push
jmp
rcll
pop
mov
lods
lret
mov
test
mov
sbb
notl
inc
pop
rol
add
pop
xor
iret
stos
mov
xchg
jb
sarl
lods
mov
dec
sbb
int3
push
push
mov
sbb
mov
push
mov
xlat
push
and
sbb
rorl
scas
push
mov
push
clc
sahf
mov
ret
and
xchg
push
movsl
adc
cmp
insb
rcrb
adc
sbb
stos
hlt
movsb
inc
cmc
jecxz
shll
iret
std
cld
stc
imul
cld
rcl
jb
nop
adc
rcl
xchg
js
cltd
sbb
in
pop
rclb
leave
in
adc
jp
ss
pop
je
sub
and
rcll
stos
rcrl
push
mov
rcl
aad
cmp
rcl
leave
notb
ljmp
popf
jle
mov
xchg
xchg
xchg
in
mov
outsl
loope
repnz
mov
jns
mov
or
xchg
hlt
push
loope
push
and
mov
shr
ret
or
cmp
xlat
arpl
repz
pop
lcall
adc
inc
cltd
adc
and
lcall
push
mov
ret
pop
mov
jmp
jns
outsb
test
push
ds
movsb
cmc
std
xchg
sar
das
js
inc
lds
sbb
iret
iret
pushf
push
test
cli
es
adc
pop
shll
pusha
jge
rcr
jo
dec
jns
jmp
roll
push
shlb
jae
loope
adc
iret
sbb
pop
imul
push
aam
stos
lock
push
mov
xor
test
xlat
shrl
or
or
rcll
mov
mov
xor
lea
mov
mov
xchg
push
pminub
dec
sarl
and
mov
fsts
iret
mov
cmp
and
xchg
push
ret
int3
add
push
or
jmp
mov
or
jge
rcr
push
in
mov
sbb
imul
and
out
inc
movsl
leave
push
mov
jno
add
push
push
jb
cwtl
or
adc
daa
pop
sub
mov
sub
lcall
push
add
sub
push
int3
aas
jp
dec
mov
inc
lds
push
push
lods
and
xor
rcrl
cld
lret
into
mov
jge
adc
das
jmp
rcll
jmp
pusha
std
adc
jns
sarl
pop
inc
mov
in
jnp
inc
and
mov
sub
int
sahf
fnsave
push
outsb
shrl
push
xor
rcrb
inc
dec
sarl
lea
nop
push
arpl
cmpsl
dec
sarb
rcll
and
enter
mov
pop
mov
push
push
jp
push
add
into
sub
in
jne
stos
shll
pop
jl
pop
xchg
mov
xor
dec
shr
test
inc
fstpl
cmp
aas
lret
and
mov
sub
adc
sub
pop
cmc
scas
cli
sarl
xchg
mov
lods
jg
loopne
shrl
push
arpl
mov
mov
sbb
rol
out
push
adc
popa
mov
lock
cmpsl
jae
shrl
push
jo
movsl
push
jg
roll
outsl
jp
cmpsl
out
push
cmp
xchg
sbb
and
outsb
aaa
pop
sub
roll
int3
sarl
push
mov
xchg
dec
stos
je
hlt
adc
mov
cmp
cmp
lahf
push
es
popf
lods
rorl
and
daa
roll
inc
cmpsl
adc
fisttpll
mov
push
xchg
and
frstor
mov
dec
or
test
push
lret
cld
xchg
movsb
adc
jb
mov
mov
rcll
mov
sahf
imul
jg
jl
cmp
add
unpckhps
addb
mov
rorl
outsb
out
xchg
repnz
fcoml
xlat
jl
lods
jle
mov
dec
rol
mov
add
insl
movsb
fdivs
pop
rol
scas
push
xor
adc
mov
push
insl
push
pop
pop
lret
push
sub
inc
shll
xchg
sbb
jp
shll
xor
mov
jg
sbb
mov
jecxz
clc
out
addr16
or
push
xchg
in
shl
adc
rolb
shrl
in
jbe
loopne
adc
jge
movsb
nop
or
push
mov
push
pop
and
ret
rcr
test
add
mov
mov
xchg
mul
nop
ret
shrl
add
popa
mov
add
addr16
ljmp
in
roll
insl
lock
or
xchg
neg
sbb
add
and
fcmovbe
repz
fdivs
fldz
mov
push
lock
or
mov
mov
je
mov
pop
sub
inc
and
sbb
imull
mov
hlt
push
shl
notb
mov
pushf
rcl
pop
loopne
sbb
fsubs
loop
xlat
std
rol
pop
inc
jmp
pop
mov
adc
cmp
lahf
fmuls
lcall
adc
xchg
sarl
jbe
sbb
cmpsb
adc
sahf
pop
in
rcrl
inc
push
add
xchg
push
mov
add
stos
fadd
aam
xchg
inc
push
mov
fildl
push
lahf
aad
icebp
add
jg
jne
shll
mov
push
rcr
ret
jns
roll
daa
fcoml
stc
sbb
ror
mov
into
jecxz
out
push
lret
push
imul
adc
ret
and
insb
rcll
xor
cli
mov
xor
sarl
call
jne
push
sti
mov
jecxz
dec
addl
outsl
leave
outsb
jb
dec
jp
mov
jmp
dec
in
daa
dec
or
adc
inc
add
scas
lcall
cmp
dec
aam
rep
jbe
mov
mov
imul
dec
mov
inc
rcrl
cwtl
ja
rcll
inc
andb
xorl
mov
stc
gs
pop
movsl
cs
ret
data16
repz
ret
push
jns
lods
add
inc
out
push
push
addr16
lds
nop
push
sbb
cld
mov
mov
out
shr
mov
lea
dec
sub
dec
rol
lret
adc
mov
xchg
repnz
adc
cmp
push
pop
mov
xchg
mov
mov
loopne
rcrl
scas
popf
arpl
rorb
xor
rol
adc
lock
rorl
sub
fcom
je
mov
rcll
adc
fdivrp
pushf
out
cmp
push
fcoms
xor
idivb
test
push
mov
dec
sbb
hlt
movsl
mov
fcom
loope
sti
dec
mov
mov
mulb
pop
lret
int
lret
push
lods
aam
aad
test
bound
fstl
and
scas
ret
cld
jmp
and
arpl
add
outsl
xor
stos
ljmp
cltd
out
clc
rcr
xchg
adc
lcall
inc
popa
xor
call
lods
cmp
imul
out
jbe
add
jle
jecxz
sub
scas
ror
inc
cmc
rcrb
and
imul
aas
cmp
fptan
mov
pop
je
lret
fwait
adc
pushf
mov
dec
pop
and
es
xchg
sbb
icebp
fsubr
pop
repz
xchg
das
jnp
jmp
push
add
rorb
and
rorl
mov
and
ja
stos
and
ljmp
inc
pop
repz
jno
mov
ds
adc
pop
jno
sbb
sub
lahf
ljmp
lds
in
push
shr
fcom
psllw
mov
inc
idivb
sub
repnz
jmp
loope
nop
sbbb
shll
pop
mov
leave
out
sbb
imul
add
rolb
mov
mov
inc
ljmp
aam
into
adc
ret
xorb
adc
adc
test
ja
enter
cmpsb
sbb
mov
imul
call
pop
stos
and
jb
xor
push
shl
push
sti
sarb
adc
pop
jo
daa
push
xor
mov
stos
cmp
iret
push
fiadds
mov
xchg
loop
jg
inc
loope
outsl
add
in
hlt
leave
flds
dec
mov
sub
iret
sub
push
mov
push
into
adc
imul
push
push
jae
shll
mul
add
push
call
add
mov
imul
insb
shl
rcr
popf
and
cmp
xor
pop
hlt
in
lret
mov
fmull
insl
in
ret
pop
mov
imul
test
inc
add
sarl
cltd
inc
jge
or
adc
lahf
lcall
inc
push
jecxz
mov
pop
shrl
outsb
rcl
stc
je
les
pop
nop
xchg
inc
lcall
repz
xchg
sbb
fmuls
jg
sbb
shrl
xor
fcmovb
mov
sar
mov
roll
adc
rcr
sub
xchg
sbb
and
jo
rorl
out
xchg
outsl
push
mov
xchg
mov
bound
lret
shrl
test
test
stos
das
inc
jae
inc
mov
mov
xchg
mov
jle
daa
pop
mov
in
mov
push
and
push
dec
sbb
insl
test
mov
jp
mov
rorl
popf
movsl
ret
dec
testl
out
inc
dec
adcb
pop
xor
frstor
sarb
shll
sbb
push
sti
and
lahf
fidivs
dec
dec
push
stc
iret
xor
push
cli
cmc
fs
sbb
ja
or
stos
lcall
int3
jecxz
stc
dec
fisttps
push
inc
addr16
mov
sarl
test
pop
jb
mov
jge
sbb
mov
dec
sub
rcll
pop
cmp
rorl
xor
adc
ret
shrl
pop
inc
adc
in
scas
movsl
inc
xor
mov
jnp
or
mov
sar
dec
push
outsl
mov
shrl
in
xor
roll
popl
rcrl
pop
pop
xchg
stos
decl
insb
imul
sarl
pushf
push
mov
shll
outsb
push
cld
xor
fisubl
sub
lret
mov
ror
jle
enter
pop
push
testl
das
add
jne
xor
sbb
cmp
rcrl
jno
sub
outsl
mov
and
cmp
ret
push
int
ss
stos
lods
dec
fisttpll
and
mov
rcll
mov
std
imul
insb
enter
pop
test
fisubl
pusha
sarl
enter
sub
popa
mov
jp
push
bound
cmpsl
add
shll
mov
jmp
fwait
iret
cld
xorl
adcb
sub
stos
pop
mov
aam
sarb
and
xacquire
xchg
je
fidivrs
fwait
out
roll
cltd
aam
icebp
es
rcrl
pop
aam
push
cmc
adc
out
sarl
enter
sub
and
lds
mov
inc
roll
out
rep
fcoml
cld
stc
insl
test
add
xor
and
rcll
mov
xchg
xchg
xor
dec
or
rcll
sub
test
in
cmp
push
jge
shrl
push
btc
jle
cmpb
je
adc
push
mov
xchg
xlat
loop
dec
mov
shrl
and
push
mov
mov
imull
cmpsl
test
movsb
dec
rol
les
xor
xchg
xchg
inc
addr16
lods
mov
pop
jg
mov
dec
or
inc
iret
aam
adc
roll
pushf
in
arpl
dec
cmpsb
mov
shrl
mov
stos
jmp
or
cltd
xchg
ja
out
fs
xor
adc
out
rcrl
mov
mov
push
push
lea
adc
and
mov
pop
dec
xchg
aaa
faddl
add
ds
ror
jl
mov
lret
xorb
lret
js
mov
fisubs
push
xor
jae
cmp
jne
in
aad
int3
mov
and
jecxz
mov
lcall
mov
sbb
movsl
inc
mov
sarl
outsl
pop
push
cltd
jmp
sbb
gs
inc
inc
rorl
pop
add
into
ret
push
xorb
pop
or
xor
shll
hlt
pop
xlat
cli
mov
roll
clc
or
movsb
les
cmp
fstps
daa
nop
pop
mov
inc
cmp
jnp
shl
mov
sahf
and
out
enter
stos
pusha
outsb
push
cmp
in
push
xorl
xchg
pop
sarl
or
rcrl
adc
push
arpl
mov
inc
jg
sar
and
push
fstpt
mov
imul
fidivs
sub
ljmp
mov
iret
shll
out
pusha
cmc
push
jb
push
mov
adc
cmp
sarl
and
and
or
and
mov
sub
shll
repz
dec
jle
pop
sub
push
in
js
orl
fists
push
xchg
mov
loop
jp
xor
mov
loopne
rcrl
xchg
rcll
dec
gs
pop
inc
jbe
xor
scas
imul
into
push
cs
inc
fwait
outsl
and
and
and
fwait
cli
test
fildl
mov
pop
add
sbb
shrb
fwait
dec
shrl
int3
repnz
iret
lds
dec
ss
sarl
sub
push
mov
aaa
stos
jnp
fst
dec
imul
push
mov
mov
rcll
das
shr
mulps
test
dec
mov
mov
mov
jnp
rcll
push
scas
inc
mov
lods
in
sbb
fwait
dec
mov
out
mov
push
enter
cmp
insb
flds
and
adc
shll
xchg
addr16
dec
out
xor
sub
stos
es
dec
and
adc
ljmp
int3
loope
sbb
mov
fs
mov
push
sub
jmp
mov
ljmp
rcll
and
xchg
xor
inc
push
add
lret
sarl
sar
fwait
es
sarl
stos
jl
push
xor
mov
mov
notb
ret
hlt
test
gs
jae
mov
ror
pop
cwtl
push
pop
loop
mov
push
sub
dec
push
jb
xchg
push
shrl
je
push
in
jno
sbb
lahf
les
push
icebp
sbbl
stos
lock
shlb
mov
lret
jmp
mov
push
and
ret
jmp
roll
decl
call
popf
clc
scas
repz
repnz
dec
mov
cld
and
adc
jb
ja
test
or
lret
cmpsl
mov
sub
rol
stos
das
cmp
out
push
rcl
sbb
adc
bound
inc
xlat
imul
or
mov
jge
roll
jl
shll
movsl
inc
add
js
mul
xlat
sbb
nop
je
cmpsl
rorb
outsl
xor
jns
or
bound
mov
pop
out
rcrl
inc
rorl
mov
pushf
leave
push
mov
push
lods
mov
shrl
das
sbb
stc
push
scas
push
adc
cmp
or
cld
ljmp
or
cltd
shlb
repnz
sti
sarl
mov
movsb
call
xchg
pop
sbb
fs
cmp
inc
push
fidivs
adc
and
jne
add
add
in
repnz
xchg
sub
add
and
jmp
shrl
xchg
push
xchg
andb
push
shrl
xchg
xor
sub
stc
sbb
push
incl
into
roll
mov
sbb
sbb
outsl
repz
push
rol
jne
and
jmp
pop
inc
imul
fcom
and
or
shr
out
jne
lcall
shl
or
push
mov
adc
sbbb
insl
roll
lcall
push
rcl
and
arpl
outsb
out
sarl
roll
inc
inc
imulb
jae
push
jae
pop
icebp
repz
pop
mov
in
lret
out
frstor
jl
pop
or
insl
fidivs
das
movsl
fisttpl
shrl
xor
test
adc
test
rcl
popf
mov
or
hlt
rcll
mov
lock
push
mov
je
repz
aaa
in
push
stos
sbb
mov
data16
mov
fsubrp
jb
xor
inc
mov
jle
pop
and
outsl
les
push
imul
and
pop
shrl
arpl
call
jp
add
xchg
pushf
push
jge
aam
mov
adc
sarl
rorb
sar
sub
cmp
rclb
loopne
lods
pop
shrl
push
push
inc
adc
add
and
ljmp
ja
mov
inc
roll
ds
pop
cli
stos
ficoml
adc
roll
mov
int3
popa
stc
or
dec
call
sub
shlb
fs
shl
or
push
xor
pop
out
roll
lods
jge
repnz
rcr
pusha
mov
rcll
les
xchg
daa
jbe
xor
mov
mov
push
or
sbb
cmp
nop
mov
jp
sub
push
push
push
or
inc
mov
rcrl
xor
pushf
pop
loop
test
rcr
xchg
insb
or
jne
adc
repz
fnstsw
pop
repz
mov
xchg
stc
xor
and
push
jge
xor
mov
push
mov
dec
xchg
test
enter
cltd
pop
mov
add
xchg
stos
mov
shll
lret
jne
mov
sahf
mov
in
jb
dec
ja
pop
int
repz
nop
data16
and
into
cs
push
mov
mov
lahf
pop
add
xchg
test
push
sbb
inc
mov
outsl
sbb
fcmovu
push
mov
pushf
mov
mov
push
enter
rorl
movsl
pmaxub
xor
mov
mov
mov
ror
mov
mov
cwtl
inc
leave
ret
fsubrl
mov
lcall
repnz
cmp
mov
pop
cmp
mov
push
incb
push
popf
mov
ja
add
call
rorl
fnstenv
and
rorl
ljmp
insb
sbb
rcll
jno
sub
cld
sahf
push
mov
repz
mov
out
movsl
or
add
mov
test
daa
aad
jg
mov
pop
packuswb
xlat
lea
and
xor
jb
sub
sbb
push
lahf
xchg
mov
sti
ss
testl
sub
jl
rorl
xchg
enter
addr16
mov
icebp
xor
sbb
lret
mov
push
shl
mov
sbb
push
inc
lock
mov
push
xchg
cmp
test
jl
test
cmpsb
stos
mov
xor
scas
mov
lods
cmp
clc
call
inc
inc
adc
cmpsl
cmpsl
jo
movsl
repnz
mov
or
rcll
incl
leave
push
sahf
std
fwait
adc
cmp
push
popa
fidivs
adc
xchg
mov
rcll
out
arpl
out
push
fsubl
ror
mov
pushf
mov
push
xor
scas
faddl
push
dec
push
push
jns
aad
rcl
sub
divb
sbb
dec
rcll
mov
cmp
inc
mov
push
addr16
sbb
mov
mov
sub
add
and
shll
mov
xchg
hlt
inc
mov
fst
lea
dec
push
in
out
rorl
pusha
movsb
mulb
not
or
mov
adc
rcll
jge
stos
shll
cmp
add
scas
test
dec
pop
adc
outsb
pop
xchg
arpl
fs
adc
xchg
lcall
out
sub
xchg
adc
push
loope
push
jp
dec
icebp
xor
cmpsb
push
mov
es
shll
sub
fistl
test
into
callw
outsb
fst
je
sbb
aam
sbb
xchg
pushf
shl
inc
stos
hlt
push
pop
data16
adc
add
les
imul
dec
inc
mov
cltd
jl
fwait
roll
adc
sbb
ss
inc
mov
jecxz
adc
aam
push
dec
andl
mov
mov
call
jp
rorl
dec
xor
inc
ret
rolb
inc
imul
sub
dec
jbe,pn
aam
mov
sbb
sbb
adc
jae
gs
inc
xchg
rorl
mov
add
add
cmpsl
subb
ss
sar
stc
pop
xchg
int3
pop
mov
in
mov
sbb
mov
lock
aaa
sub
rorl
push
leave
lds
nop
out
repnz
or
shr
jecxz
inc
jge
addr16
mov
pop
popa
les
xchg
shll
xchg
lods
rol
adc
push
in
mov
stos
mov
test
rcrl
bound
sarl
push
sahf
push
orl
movsb
lcall
rol
xor
outsb
mov
int3
sbb
aas
roll
bound
cli
imul
xchg
popf
and
push
pushf
test
pusha
xchg
dec
rorl
xor
repz
mov
shrl
jmp
push
shll
enter
mov
loope
fdivl
lea
les
mov
xchg
mov
xchg
push
icebp
stos
push
pop
hlt
push
int
lock
dec
jge
cmp
and
xchg
xchg
xor
inc
mov
push
lds
adc
movsl
je
addr16
add
mov
fbstp
ret
popa
es
clc
lods
lret
mov
cs
test
sarl
add
jb
movb
cmp
adc
inc
pop
mov
popa
into
cmpsl
xchg
pop
sub
fidivrs
mov
rorl
aas
or
jns
je
es
cs
or
movsl
mov
pop
icebp
popf
jns
out
pop
roll
jl
xor
sub
cmpsl
movsl
xchg
xlat
adc
mov
and
and
and
aad
push
dec
xchg
ja
sbb
push
ljmp
rorl
jb
out
jno
pop
dec
cld
dec
xor
ror
cmc
rcll
adc
leave
xchg
jge
ror
or
lahf
cld
mov
pop
sub
xchg
cmp
mov
shr
ret
in
adcb
ror
inc
mov
pop
stos
pushf
ret
or
inc
jl
or
sarl
lods
lret
push
sub
nop
je
shrb
xlat
add
testb
xchg
imul
repz
insb
shll
inc
hlt
jbe
xchg
mov
mov
movsl
adc
cmp
loop
jo
pop
and
test
cmp
cmp
add
cmpsb
push
bound
ljmp
jg
inc
clc
dec
loop
rorl
dec
mov
pop
rcrl
rcl
lahf
inc
push
push
xchg
sti
lcall
cmp
push
pop
cmp
pop
jecxz
xchg
sbb
mov
fisubrs
sbb
rorl
mov
shrl
int
rcll
xchg
dec
leave
repz
xor
lret
mov
mov
clc
out
frstor
mov
pop
push
mov
or
xorl
shrl
test
push
push
jmp
adc
mov
sub
std
mov
jbe
test
loop
jmp
and
pop
rorl
cmp
lret
imul
sub
mov
mov
popa
repnz
or
sbb
push
pop
jb
repz
sub
mov
adc
jecxz
jnp
xchg
daa
data16
xor
mov
jae
movsb
jg
in
repnz
push
outsb
mov
das
in
roll
add
js
cmpsl
push
pop
ror
clc
sbb
mov
fisubrs
mov
fcomip
mov
xor
jecxz
xor
push
and
imul
popaw
add
adc
jbe
sarl
xchg
pop
dec
out
rcrl
cltd
lock
sub
bound
mov
aaa
fdivrs
sub
push
mov
das
jp
pop
xchg
movsl
mov
jle
jg
mov
shll
push
js
cmpsl
rorl
fwait
cmp
lea
ficomps
call
sti
shll
dec
in
rcrl
dec
ret
push
add
rcll
adc
imul
add
movsl
in
mov
shrl
imul
icebp
into
xorl
movl
cmp
rcll
add
jb
push
movsb
pop
mov
cli
lahf
nop
cs
xor
xchg
std
psubsw
mov
push
xchg
pop
dec
mov
pop
loop
and
roll
push
jge
jmp
dec
test
sbb
rorl
les
push
jns
xchg
push
test
adc
aas
xchg
sarl
jb
push
pop
in
or
adc
mov
jnp
inc
sbbl
imul
push
into
rcl
iret
sub
lahf
adc
pop
sti
mov
cmpsl
iret
insb
jecxz
xchg
xchg
or
pop
pushf
sbb
push
xchg
pop
stos
call
sti
push
xor
xchg
xor
jp
les
rclb
inc
mov
dec
mov
mov
lds
rcll
ficoml
rcll
insl
lret
push
push
push
sub
leave
or
jnp
or
sub
dec
scas
lea
shl
mov
xchg
mov
push
lods
add
bswap
jle
rorl
movsl
inc
dec
shll
fiaddl
mov
into
mov
stos
push
push
dec
jp
push
cs
cmp
adc
ret
add
test
hlt
cmp
loope
iret
push
idivb
jmp
push
add
or
dec
shll
mov
leave
loop
shll
sbb
lcall
lahf
push
arpl
ret
es
mov
sbb
enter
mov
pop
dec
scas
xor
jmp
rcll
rcrl
dec
and
ljmp
xchg
ja
inc
ss
mov
push
xorl
fsubrp
mov
jge
sub
adc
mov
setbe
adc
or
movsl
jmp
rcrl
fildll
shll
dec
ret
loopne
rcl
in
xor
inc
add
shrl
mov
lret
xchg
cltd
adc
or
jge
repnz
mov
incl
xchg
xchg
pop
idivl
movsb
mov
and
xor
orl
jno
mov
push
rcl
rcrb
addl
test
push
stc
lock
mov
dec
fisttpll
push
aam
test
adc
pop
fldenv
mov
les
ror
in
cmp
push
lods
and
or
xchg
adc
pop
xchg
xchg
add
pop
inc
pop
push
rcll
loope
gs
sbb
mov
sub
push
shr
cli
nop
std
push
dec
jbe
rol
xor
inc
adc
mov
in
jne
popa
push
adcb
lahf
sub
leave
push
xchg
pop
aad
arpl
repz
jmp
shll
and
je
mov
lea
pusha
jae
imul
push
push
xchg
lods
mov
push
inc
adc
outsl
popa
insb
pop
loop
sbb
dec
and
call
shll
hlt
and
cld
cwtl
jge
or
and
mov
movsl
clc
add
int3
mov
insb
inc
shrl
fwait
inc
cltd
rcr
int
daa
loop
je
push
lea
jecxz
in
and
fsubs
popa
mov
outsb
pop
push
test
inc
adc
push
cli
xchg
jle
mov
xlat
shll
xor
push
adc
cmp
and
push
push
jg
pop
push
mov
movsl
mov
sbb
jns
inc
fbstp
test
or
cmc
data16
pop
dec
loopne
icebp
sbb
movsl
mov
leave
or
inc
aaa
add
lock
stos
fsubl
and
ds
ja
jge
lahf
rclb
or
cwtl
cmp
xor
pushf
cmp
jle
sub
mov
adc
lods
ja
movsb
mulb
push
xchg
fildll
inc
insl
mov
sub
rcll
jo
sbb
ja
push
in
les
stos
and
cmpsl
push
cmpl
add
popf
dec
pop
js
ret
aam
inc
mov
jp
in
sub
imul
pushf
into
cmp
inc
xchg
push
push
add
mov
cs
js
shr
inc
push
shrl
mov
fdivr
xchg
shll
sub
roll
int3
mov
pop
cwtl
dec
adc
xchg
lds
mov
shl
popa
pop
in
push
shl
xlat
push
loopne
cltd
bound
dec
rorl
rolb
pop
push
stos
and
ret
ror
arpl
lret
inc
mov
push
roll
lea
sarl
cli
and
push
test
dec
shll
ror
pop
imul
rcll
scas
lock
xor
gs
insb
fwait
jle
adc
jbe
adc
imul
xchg
pop
adc
pop
rcr
pop
mov
mov
insb
xor
shrl
dec
dec
adc
js
pop
cmp
sub
das
repz
or
roll
lret
cld
loop
sub
fcoml
mov
mov
cwtl
mov
push
int
or
and
and
mov
stos
jne
and
loopne
movsb
cmp
neg
xchg
jl
addr16
push
lahf
dec
ficoml
in
lods
mov
popa
das
scas
pop
lods
call
fdivl
push
add
andl
cmp
cmpsb
iret
adc
sub
sarb
cwtl
in
in
mov
mov
adc
xor
and
push
rcr
je
mov
mov
cmp
shll
es
hlt
lahf
rol
mov
jge
sub
rorl
adc
mov
push
lds
lahf
lods
sti
jmp
ja
loopne
ljmp
rcll
rep
mov
or
and
imul
xchg
add
into
xchg
or
mov
lods
mov
cmp
mov
sete
orb
inc
inc
xchg
mov
stos
sar
add
xchg
shrl
cld
ss
mov
lods
inc
xchg
js
cmp
clc
stos
in
insb
roll
push
es
mov
inc
xchg
rorb
aad
mov
inc
int
pop
mov
test
dec
into
push
sarl
fwait
mov
push
push
incb
test
adc
mov
sbb
push
test
clc
or
js
rcll
sub
pop
adc
mov
ret
mov
sbb
xor
dec
push
dec
push
pusha
rcrl
inc
std
mov
clc
cmp
shll
lods
adc
out
xchg
into
jne
mov
cld
repz
mov
leave
mov
adc
push
aam
cmp
mov
jecxz
or
enter
rcrl
dec
pop
in
xchg
push
out
shlb
insb
lods
shl
ret
ds
push
jmp
jo
mov
mov
inc
mov
outsl
js
call
jle
sub
imul
sub
dec
pop
xchg
call
pop
push
ljmp
dec
mov
clc
push
mov
bound
cltd
and
sbb
daa
jg
gs
dec
dec
jecxz
push
call
xchg
in
xchg
test
add
mov
and
and
push
sbb
fimull
sbb
and
shrl
outsl
xor
sarl
sahf
es
gs
mov
sbb
lock
shlb
je
fstl
and
sarl
or
adc
out
push
xchg
push
lock
mov
cli
test
aaa
mov
fldt
and
pop
xchg
nop
sub
xor
xor
mov
roll
adcb
pop
dec
push
push
rcr
lret
insl
jmp
popf
mov
adc
cmpsb
stos
lcall
push
xor
push
sarb
dec
sti
cltd
jp
cmp
divl
aaa
inc
fwait
in
fdivrl
xor
inc
push
lret
mov
sub
test
jb
out
cwtl
stc
scas
outsb
shll
or
cli
int3
mov
sub
test
ret
lcall
sub
cltd
push
daa
dec
lret
lds
ret
push
aam
adc
pop
rorl
in
cmp
rorl
enter
pushf
clc
dec
push
xchg
or
pop
inc
fcom
sbb
sbb
push
pop
pop
cmp
in
gs
inc
jl
xchg
mov
jnp
push
fdivr
push
push
cmp
jl
xorl
inc
roll
hlt
mov
jp
pop
ror
pop
cmp
in
inc
push
es
and
fnstenv
fwait
pop
sti
xor
pusha
mov
mov
pop
mov
roll
repz
ret
dec
cmp
push
sbbl
pop
rcrl
sub
cmp
fs
lret
cmovge
push
sub
dec
ja
jae
push
rclb
aad
int
enter
mov
mov
xchg
xchg
mov
add
or
stos
rcll
jl
fnstenv
dec
shll
and
jp
xchg
lods
push
leave
push
mov
mov
add
mov
insl
movsl
lahf
sub
add
fld
xchg
int
sarl
test
pop
rcrl
adc
cwtl
dec
cmp
push
sub
add
aas
clc
mov
addb
xchg
mov
cmp
shrl
std
mov
popf
clc
rol
dec
pop
add
adc
aam
xor
cmp
cmpsl
jge
fwait
mov
mov
push
or
inc
jmp
lods
shll
ljmp
mov
repz
inc
shll
pop
sar
rcl
push
scas
adc
pop
rcrl
add
int
out
xchg
enter
or
inc
cmc
shrl
imul
sarl
sbb
rorl
rorl
jno
sub
aam
bound
xor
xchg
xchg
mov
ds
xchg
ljmp
sub
mov
adc
idivl
aad
gs
cli
mov
shll
std
pcmpgtd
inc
dec
sub
mov
pop
pop
push
sub
loop
sbb
push
mov
test
dec
shll
cmp
and
sarl
mov
cmp
clc
xchg
pusha
jae
mov
mov
movsl
push
daa
rorb
fwait
xor
sub
push
inc
jne
sbb
mov
shrl
clc
sbb
arpl
sarl
mov
ds
int
repz
jne
mov
iret
pop
push
add
arpl
cmc
lret
mov
outsl
shrl
jle
es
sbb
add
xchg
push
pusha
ror
mov
call
push
or
pop
add
push
fmull
jo
loop
repnz
sbb
lock
outsl
cmp
xor
and
enter
stos
dec
shrl
dec
lret
add
cwtl
cld
rol
rorb
jne
mov
pusha
cmpsb
push
ljmp
xchg
jge
mov
ret
jo
cltd
mov
iret
lcall
imul
and
in
push
outsb
and
outsb
cmp
popf
in
inc
mov
lods
xchg
xor
mov
cmp
repz
xchg
fcomps
xchg
shrl
bound
das
dec
push
sarl
xor
shll
mov
outsb
sarl
push
xchg
test
lret
fldl
sti
push
xchg
mov
lret
aam
pop
stos
rclb
rol
pop
loop
bound
sbb
jl
int3
popa
lock
fsts
mov
shll
xor
roll
jle
out
hlt
mov
rorl
push
xlat
pop
lcall
popf
mov
fbld
adc
stos
call
jp
cmp
dec
add
das
add
sbb
shr
jge
cmpsl
dec
pop
sub
push
jbe
mov
ja
jmp
and
addr16
into
dec
cmpsl
add
stos
popf
shll
jae
pop
roll
shll
sar
xor
sbb
pop
into
dec
sbb
mov
cmp
and
int3
push
int
and
in
clc
dec
mov
xchg
mov
mov
pop
sub
cmc
mov
out
and
dec
je
pop
rcl
std
fildl
jecxz
rcl
imull
jmp
insb
mov
ffreep
insl
in
xor
roll
mov
mov
jnp
xor
pusha
sbb
or
xor
into
ja
dec
inc
mov
stos
mov
push
test
cli
mov
xor
insb
shll
sahf
adc
loop
ret
andb
xchg
fcompl
xor
int
mov
in
adc
data16
mov
dec
xor
dec
enter
int
imul
dec
roll
and
shrl
sub
shll
mov
dec
movntq
out
scas
shll
sbb
movsl
pop
xchg
rorl
outsl
aas
add
push
repnz
push
out
add
inc
jg
addr16
mov
fcmovb
mov
sarl
xchg
mov
popa
push
push
push
lods
lea
les
lds
sarl
xchg
rcl
sub
xor
lods
leave
ror
jns,pn
pop
cmc
sub
rcrl
orb
dec
mov
shl
aas
adc
shr
xchg
je
and
pusha
sarl
out
les
stos
pop
and
cmpsl
push
test
rcrl
fistpll
shll
sub
mov
mov
jecxz
mov
and
and
xchg
dec
lret
jns
dec
push
shr
out
lods
dec
clc
nop
shrl
jno
mov
out
jp
cmpsb
aam
cmc
shlb
sbb
or
add
sub
mov
shll
shll
loop
cmpb
shll
stos
in
mov
jb
dec
add
ss
cwtl
lods
sarl
popa
mov
mov
jne
idiv
mov
dec
xor
mov
add
mov
inc
ss
pop
lret
xorl
notb
mov
ds
mov
test
push
into
arpl
nop
pop
sbb
push
scas
daa
clc
adc
xchg
jno
xor
enter
xchg
and
push
pop
fsts
sar
test
sbb
pop
lods
and
jae
pop
movsb
push
mov
gs
std
aad
xlat
cmp
push
or
jae
pop
adc
pop
loop
jne
popa
add
lods
sarl
add
mov
test
jnp
jge
nop
sub
pop
in
rcrl
outsl
push
sbb
cli
stc
push
mov
arpl
xchg
mulb
ss
push
aas
scas
shll
mov
sahf
push
mov
mov
rcll
mov
and
pop
insl
fsts
movsl
dec
imul
adc
roll
scas
jp
pop
jae
shr
insb
dec
sbb
daa
mov
xlat
inc
in
lds
adc
andb
xchg
shll
insl
jbe
daa
jo
dec
ret
lcall
mov
rcll
jl
sbb
out
rcll
in
add
jl
mov
loopne
js
push
arpl
sbb
fdivrs
sbb
push
icebp
sarl
loopne
pop
lahf
push
lret
pop
xor
jecxz
inc
fstpt
in
insl
jns
xchg
xor
inc
push
xchg
fnstsw
mov
add
rorl
mov
mov
inc
lock
negl
push
test
test
loop
or
mov
mov
lea
xor
or
xchg
sub
push
jbe,pn
push
sbb
lret
add
ss
xchg
sar
insl
lds
call
jp
push
push
adcl
mov
imul
rolb
dec
sarl
repz
add
in
jmp
mov
push
into
in
cmp
inc
pop
mov
push
shll
xchg
or
ljmp
jg
pop
add
cmp
cli
mov
push
xchg
scas
movsl
cmp
or
pop
lds
inc
adc
das
sub
out
adcb
dec
pop
shr
adc
pop
cmc
mov
sub
shll
lock
loopne
fsts
jns
jnp
lret
enter
push
lret
dec
or
mov
jnp
les
push
push
imul
jns
jl
mov
scas
push
rorb
daa
inc
fwait
in
mov
test
cmpsb
push
insb
gs
hlt
xchg
xchg
inc
lods
adc
pushf
shll
pop
test
xchg
mov
sarl
mov
dec
call
push
mov
cmp
jno
das
shll
jl
and
aam
fwait
ror
lea
mov
out
js
and
cmpl
mov
xchg
aam
inc
loopne
mov
xchg
push
sub
rorl
jb
sub
das
movsb
call
dec
aam
mov
popa
aam
insl
lods
sarl
imul
aam
das
sarb
andl
iret
enter
pop
push
loope
or
push
inc
mov
addr16
sbb
xchg
int3
xchg
repnz
cmp
and
jp
mov
mov
mov
inc
pop
jp
push
and
pop
xor
adc
cmpsl
xchg
imul
and
enter
loope
mov
cmpsb
repz
dec
shrl
mov
repz
sbb
dec
push
mov
roll
cmc
sub
push
pop
xchg
fstl
rorl
into
xor
sub
push
sub
idivb
dec
mov
xchg
scas
cmp
roll
cmp
aam
test
cld
pop
shl
lods
push
mov
ror
mov
cmp
test
scas
shl
roll
xor
mov
rcrl
or
aam
pop
jnp
sbb
sbbl
inc
jmp
lahf
mov
dec
pusha
shll
test
insb
arpl
pop
test
sbb
rorl
scas
shrl
fst
lds
xlat
add
or
jmp
xchg
movsl
mov
pop
lret
xchg
shlb
fistl
xchg
aas
fcomps
cmpsl
jecxz
movsb
shl
and
push
leave
lods
sub
aam
xchg
stos
xor
push
test
xchg
roll
push
das
mov
add
or
push
cmpsl
inc
shrl
sub
and
cmp
ret
das
fistl
push
xor
roll
imulb
ljmp
lcall
aaa
ja
mov
and
mov
cmc
loop
mov
push
lods
mov
jp
xchg
hlt
outsl
jg
dec
lea
jmp
movsb
out
mov
roll
inc
call
sarb
push
adc
aam
out
testl
sbb
cmp
stos
dec
jecxz
popf
aam
and
outsl
in
shrl
inc
call
in
sub
inc
es
xchg
pop
das
add
mov
sub
sbb
fcomps
out
xchg
sarl
rol
icebp
rcll
jg
push
imul
fildl
leave
jecxz
test
iret
data16
pop
shl
fst
adc
les
lret
jae
test
pop
lea
jg
mov
sbb
bound
inc
mov
rcll
mov
xchg
shr
mov
fsubrl
pop
mov
or
scas
mov
enter
xchg
in
stos
fdivr
xchg
dec
rcr
loope
fbld
sahf
insl
sarl
sub
call
mov
lahf
cltd
insb
dec
push
lret
nop
ret
in
lcall
pop
sti
popf
dec
add
outsb
aam
fisubrl
jbe
inc
mov
sbb
push
cmpsl
imul
inc
into
mov
xlat
inc
rcll
xchg
outsb
and
adcb
jb
repnz
jle
dec
pop
rcrb
or
inc
jecxz
mov
shll
out
sub
xor
lds
fldt
out
inc
roll
out
xchg
out
mov
shll
mov
dec
and
sti
shl
pop
mov
mov
adc
call
fldl
mov
cltd
lock
lds
cmp
mov
xchg
sahf
xor
jo
mov
leave
nop
shl
mov
inc
mov
sarl
pop
add
push
dec
insb
aad
inc
xchg
imul
mov
pushf
mov
fstps
mov
mov
outsb
out
mov
ljmp
mov
dec
pop
rorl
pop
push
sbb
rcrl
jg
das
fst
or
fs
int3
lret
push
mov
shrl
jecxz
mov
sub
inc
push
cli
loop
int
pop
cmpsl
dec
dec
pusha
lret
adc
mov
sbb
add
shl
cmc
push
test
call
fcmovbe
mov
test
mov
sub
gs
pop
sbb
lods
sar
push
mov
xchg
inc
mov
xorb
call
popa
ret
sarl
imul
push
cwtl
out
inc
mov
push
repz
aas
cs
lds
xchg
rorl
lds
int
cmp
jae
push
push
fdivrl
popf
xchg
dec
cmp
inc
pop
hlt
sahf
xchg
and
and
inc
cmpsl
push
mov
enter
xor
ret
push
push
cmp
dec
rcrb
cmp
ljmp
call
cmpsl
jno
sbb
cld
push
lret
imul
cmc
mov
push
push
imul
das
add
lahf
mov
jo
roll
std
mov
rcll
or
out
rolb
out
pusha
stos
mov
adc
xlat
leave
jmp
test
pushf
ss
xchg
mov
mov
shll
div
shrl
lcall
push
js
mov
inc
push
jns
mov
aam
cmc
orl
push
push
es
push
xchg
jmp
push
rcr
mov
pop
adc
dec
pop
int3
rorl
scas
jl
cld
cmp
clc
ss
fimull
mov
sub
cld
sar
out
mov
mov
jne
sbb
mov
push
inc
and
std
loop
rcrl
cmp
sti
fiadds
and
out
inc
in
jecxz
push
dec
ljmp
jae
imul
and
int3
shlb
rcll
incl
inc
sub
imul
push
xchg
mov
push
or
test
dec
xchg
jae
pop
push
loop
push
je
shrl
jmp
adc
sbb
nop
jecxz
jecxz
out
shrl
dec
cmp
cmp
mov
faddp
imul
pop
pop
rcrl
add
or
and
pusha
and
shll
jge
mov
shll
je
daa
push
dec
cmc
push
lcall
push
dec
addr16
mov
dec
outsb
mov
std
inc
rcrb
mov
rcll
fcoms
and
icebp
ficomps
xlat
jg
inc
aad
mov
ds
fcmovu
push
mov
sbb
test
sub
fnsave
mov
mov
jo
inc
popf
out
xchg
adc
push
mov
jmp
pop
bound
pop
jge
jmp
popf
test
stos
dec
das
push
sub
je
mov
fidivs
repz
aam
shl
mov
mov
cmp
hlt
push
xor
push
or
fdivl
insl
out
adcb
std
jg
jp
rcl
roll
cmp
jnp
ret
xor
add
cmp
jmp
xor
dec
aam
mov
aam
xchg
push
dec
inc
in
xchg
vpackssdw
lret
bswap
push
mov
mov
mov
dec
shl
and
xchg
xchg
outsb
stos
sarl
cmc
sbb
rclb
pop
rcrl
push
add
xchg
xor
sbb
insb
mov
ret
lods
notb
shrl
pop
push
dec
shll
repz
inc
shll
jecxz
xchg
sub
js
repnz
shl
sahf
shrl
and
shll
xchg
adc
shlb
mov
and
das
imul
sarl
push
imul
push
sbb
jbe
and
push
inc
add
shlb
mov
movsb
fsts
inc
push
pop
rcll
je
mov
push
jg
xchg
mov
sub
adc
mov
aad
mov
jbe
mov
mov
jae
sbb
pop
dec
mov
ror
xor
rcll
subb
rorl
fs
in
lret
inc
push
sub
xor
pop
or
dec
int3
mulb
lods
fldcw
rcll
mov
shll
push
pop
call
icebp
shll
gs
sbb
or
mull
popa
fst
bound
dec
or
add
nop
je
xchg
ror
test
pop
xor
jb
cwtl
imul
mov
cs
aas
lret
repnz
outsl
je
push
cmp
pushf
loope
rol
ljmp
rcrl
push
out
push
jne
lods
xor
imul
les
and
shll
ja
roll
ljmp
stc
add
fidivl
cld
mov
outsl
cmpsl
ds
addl
xchg
shlb
or
sub
pushf
test
sub
cmp
shl
push
shll
cmovae
fsubs
sbbb
cwtl
fsubrs
xor
jmp
shll
int
and
jl
adc
sub
push
mov
pusha
add
jae
sti
cmpsb
sub
cmc
rcr
into
xor
shll
inc
push
inc
lcall
adc
xorl
cmpsl
dec
in
outsb
rorl
div
into
test
pusha
pop
cmpsb
xchg
cmc
lcall
sahf
push
cmp
clc
xchg
mov
or
aam
mov
pop
subl
push
push
push
pop
push
jb
repz
adc
in
fwait
aam
daa
movsb
movb
push
fidivrl
pop
and
enter
roll
pop
xchg
xor
add
add
mov
push
mov
sbb
sub
iret
xor
inc
rcll
inc
int
dec
lcall
aad
mov
push
jae
cmp
test
lock
call
inc
rorb
in
and
adc
sbb
outsl
add
pop
aad
jns
mov
shll
lds
mov
dec
add
push
scas
repnz
cmp
daa
or
orl
jge
ret
stc
push
inc
inc
icebp
imul
mov
adc
std
cltd
rcrl
lds
shll
cmp
xchg
shll
mov
psrlq
in
dec
repz
mov
fldenv
inc
pop
adc
mov
mul
push
bound
dec
push
inc
fcomps
les
push
shl
inc
mov
jg
shll
shlb
push
fnstenv
loopne
int
sub
jmp
inc
ror
fisubl
mov
xchg
sbbl
adc
mov
les
call
lock
mov
test
aaa
pop
enter
dec
lcall
push
and
inc
insl
out
mov
cli
jle
jg
mov
xchg
cmpsb
push
push
loope
adc
lods
xor
int3
fistpll
mov
xor
sbb
rorl
outsl
mov
addl
sub
mov
ret
jmp
mov
dec
rorl
fcom
mov
test
cltd
scas
imul
popa
ror
push
jae
inc
nop
xor
repnz
push
out
mov
cmp
pop
scas
jb
push
mov
mov
cli
sarl
adc
or
in
aaa
add
call
imul
hlt
jnp
shr
daa
and
mov
rcrl
mov
out
iret
adc
inc
jge
mov
mov
dec
push
jbe
rcll
int
lods
xchg
scas
inc
sub
ljmp
pop
leave
push
shll
in
dec
cld
inc
ret
mov
loop
dec
mov
xchg
mov
push
movsb
loopne
push
mov
jl
shlb
mov
sarl
scas
sbb
into
pop
sbb
mov
insb
test
loope
adc
aad
sahf
pop
dec
roll
sbb
out
xor
imul
sub
xlat
fdivrs
data16
enter
adc
rcll
pop
roll
mov
shlb
sti
sub
mov
test
int
ret
push
lret
xchg
xchg
scas
add
and
out
sub
sbb
xchg
cld
loopne
hlt
or
push
addl
mov
fcmovu
ljmp
fistpl
into
popa
roll
jns
idiv
test
shll
repz
roll
decb
into
iret
push
add
sub
repnz
aas
addr16
call
shll
mov
cmp
dec
sub
test
pushf
andl
popf
push
add
mov
xchg
and
shl
cmpsl
mov
adc
mov
pop
shlb
jge
rcrl
ja
dec
xor
andl
pop
adc
mov
cmpb
sbb
cmc
mov
xor
ret
addr16
sub
and
sub
lcall
shll
dec
jae
das
jecxz
psrlq
sbb
sti
stos
call
jo
mov
aaa
ss
ret
push
jecxz
lods
mov
xor
nop
add
adc
test
cmp
dec
xor
inc
fldenv
mov
rclb
adc
test
cmpsb
adc
insb
jl
adc
push
mov
dec
flds
push
jmp
dec
ret
divb
jp
sbb
subl
clc
sarl
popa
or
out
fstl
inc
lcall
scas
push
and
pop
sti
out
sub
movsb
rcll
ja
std
push
popl
pop
cmp
rcr
push
pop
data16
inc
inc
jbe
push
jecxz
jne
enter
jo
pushf
add
sar
leave
lahf
and
push
jne
test
aad
pop
xchg
cli
rcl
inc
movsl
push
std
xchg
mov
mov
mov
cltd
aad
mov
xchg
jae
sar
idivb
xor
jl
mov
roll
mov
adc
inc
mov
loopne
sarl
cmpsl
in
pop
and
jle
clc
mov
pop
roll
pusha
iret
shll
lea
dec
or
jbe
mov
rcrl
lds
push
fsubl
adc
enter
pop
sbbb
inc
lock
cmp
mov
push
and
lret
dec
shrl
mov
in
and
lret
mov
ret
xchg
cmpsl
adc
pop
rcl
sbbb
mov
stos
shl
icebp
lret
add
jg
jno
scas
mov
movsb
test
fdiv
lcall
stos
insb
sarw
mov
sbb
jg
imul
xchg
call
fmull
bound
push
fisubrl
aaa
xchg
mov
stos
cmp
add
cmp
shll
mov
ror
cs
mov
and
push
movsb
push
dec
cmc
xchg
xchg
mov
fucomip
cltd
rcrl
call
jp
test
dec
jbe
mov
jg
inc
and
aaa
rorl
shrl
scas
jne
xchg
push
dec
shll
aad
in
dec
ret
cmp
imul
into
iret
aas
popl
mov
mov
sbb
sbbb
jne
stc
rorl
imul
or
leave
xchg
jecxz
xlat
mov
int3
xor
adc
and
gs
dec
shll
jns
and
mov
out
push
cmp
jge
cmp
sbb
dec
sahf
cmpsl
rcrl
shlb
xchg
add
dec
mov
outsb
jle
in
shrl
mov
adc
pcmpeqd
mov
gs
jmp
jae
mov
dec
shlb
sbb
inc
push
adc
jle
pop
pop
xlat
icebp
repz
push
imulb
jmp
mov
sub
pop
out
xchg
hlt
xchg
xor
scas
xor
mov
in
sub
cltd
iret
mov
dec
fisubl
jp
adc
lods
lret
cmc
loope
pop
dec
shrl
jae
shll
push
jmp
lret
ds
sub
xchg
push
sbb
std
sti
int
daa
dec
dec
movsl
adc
loope
mov
mov
lahf
cmp
add
cmp
rorl
push
movsl
imul
imul
jno
arpl
das
aas
mov
popa
test
fisttpll
and
imul
iret
rol
shlb
push
xchg
loopne
shll
push
lea
aas
orl
rcll
dec
jbe
roll
lret
ror
aam
es
or
mov
rorl
out
xor
cld
cmp
dec
dec
inc
rcll
inc
adc
fldenv
in
mov
mov
aam
scas
cmpsl
push
xchg
push
fidivrs
imul
repz
fstl
xchg
sbb
shrl
sbb
mov
mov
and
or
divb
lahf
sub
cltd
sub
push
in
rcrl
fs
jnp
insb
out
cli
unpcklps
pushf
orb
mov
stos
cmp
popa
or
mov
fiadds
imull
rclb
push
mov
xchg
xchg
sub
mov
and
cli
inc
lods
xor
mov
sarb
push
sub
mov
pop
xor
adc
inc
xchg
call
mov
push
inc
xchg
outsl
aam
xor
cmpsb
in
shrl
sbb
out
adc
icebp
cmp
flds
bound
aam
mov
rorl
bswap
push
push
lods
jmp
out
jno
mov
fdivrl
movsb
stos
into
cwtl
push
push
daa
sbb
bound
rorl
mov
inc
adc
in
jnp
jne
shl
nop
imulb
add
stos
sarl
push
mov
aam
lret
and
fdivrl
push
push
pop
mov
dec
push
cmpsl
sub
mov
scas
insb
jae
push
or
scas
out
push
push
xchg
mov
orb
inc
nop
lcall
pop
pop
mov
rcll
cmp
xlat
sub
mov
push
jg
push
sub
shl
psrlw
js
push
out
aad
cmp
test
push
inc
ficoml
sbb
out
mov
cltd
jmp
fimuls
lcall
ret
xlat
shrl
xor
inc
push
jge
insl
rol
icebp
outsb
and
pop
in
rcll
loop
jo
pop
xchg
call
cli
push
dec
add
sbb
add
fcmovu
push
ljmp
lea
mov
loope
xor
stos
das
fcmovnu
aam
or
push
push
daa
adcb
mov
iret
out
shll
pop
sbb
inc
lds
jo
push
dec
out
cmc
scas
push
pop
test
shl
push
lcall
jns
inc
sbb
push
add
lret
pop
arpl
roll
mov
push
mov
gs
arpl
mov
lods
push
mov
mov
and
fbstp
jne
fs
in
inc
roll
jp
cmp
mov
mov
js
xchg
ror
addb
arpl
xor
aam
push
aad
jbe
enter
and
aam
and
inc
insl
inc
xchg
push
cmp
jb
push
push
sbbb
inc
in
addl
out
or
pop
xchg
rcrl
inc
insl
roll
push
in
arpl
mov
jo,pn
lds
in
jecxz
xchg
enter
fnstcw
shll
adc
push
inc
sub
pushf
mov
pop
jecxz
push
rcll
lret
mov
sarl
mov
sbb
in
orb
bound
iret
rcl
mov
sahf
pop
in
pop
rcll
sbb
shll
cmc
add
into
mov
push
cmp
insb
leave
sbb
push
xchg
xchg
inc
xchg
xchg
aad
adc
aam
test
xchg
gs
rcll
and
jge
mov
aam
enter
pop
jbe
fistps
xor
xchg
das
scas
mov
mov
mov
shll
sub
push
jmp
add
iret
inc
int
mov
dec
xor
sbb
cmp
lds
xchg
sbb
xchg
dec
loopne
cmpsb
inc
push
mov
sti
call
addr16
mov
sbb
mov
dec
fwait
push
shrl
mov
shll
mov
add
xor
ror
jge
add
pop
enter
nop
in
ds
rcll
pop
aas
cmp
xchg
mov
je
iret
jp
xchg
pop
mov
push
mov
aad
jb
cmp
push
shrb
push
loopne
mov
shll
mov
sahf
std
mov
rcl
and
dec
jmp
ja
repnz
ljmp
lock
repz
mov
jl
push
aam
shll
dec
stos
adc
sub
or
sub
dec
lahf
test
outsb
lea
lock
mov
inc
rcl
imul
adc
roll
inc
stos
mov
cmp
rcl
sbb
test
scas
mov
mov
shll
adc
mov
lret
bound
xchg
test
test
jno
fwait
mov
inc
xchg
push
pop
movsl
in
push
sbb
roll
mov
inc
rorl
mov
jne
dec
arpl
xchg
pop
cmpsb
and
sbb
scas
jbe
enter
jmp
cmp
je
or
sti
xor
pop
jno
fcmovbe
mov
fsubs
jecxz
movsb
sti
ret
fcompl
sbb
mov
jp
outsl
push
cmp
hlt
outsb
std
aam
mov
rcr
push
adcl
mov
mov
in
imul
les
xchg
cmp
je
sub
arpl
and
fadd
cld
pop
push
mov
aad
or
jae
lods
adc
stos
push
decl
lds
mov
ret
bound
in
mov
aam
movsb
and
xchg
outsb
mov
out
imul
push
orb
jno
lret
out
les
out
scas
orl
xlat
pop
jecxz
roll
stos
icebp
mov
adc
cmp
daa
pop
mov
push
cmp
shr
jb
add
dec
and
sar
sbb
adcl
pushf
sarl
inc
cld
pop
xchg
movb
push
mov
lcall
fcom
out
push
push
dec
mov
mov
mov
aam
adc
hlt
fldt
or
sub
sbb
shll
push
xchg
jb
jg
push
inc
sbb
cmp
mov
push
push
lds
rorl
push
in
sub
roll
int
xor
xchg
cmp
sarl
cld
iret
xor
fstpt
push
ror
mov
dec
scas
push
inc
popa
push
mov
dec
sbbl
stos
int
xchg
out
inc
dec
call
jp
jno
xchg
je
mov
aas
ret
dec
roll
xor
rorl
arpl
push
jbe
inc
call
imul
adc
adc
mov
inc
rorl
mov
sbbb
jl
stc
cli
push
mov
and
mov
shrl
mov
fcom
lahf
std
int3
push
mov
cmpsb
dec
lds
pusha
and
ror
lahf
out
inc
cmc
pop
or
cli
cmpsb
out
daa
or
cmp
mov
scas
rcll
roll
test
dec
aam
dec
adc
data16
pop
push
mov
in
mov
xchg
hlt
xchg
jnp
mov
aam
cli
mov
dec
dec
sbb
je
sub
lods
adc
mov
inc
xorl
xor
mov
adc
pushf
sub
addr16
pop
mov
aas
xchg
setae
in
sbb
dec
movsb
shrl
addl
std
dec
xchg
out
cmc
enter
pop
sahf
es
cli
roll
cld
mov
xor
lret
sbb
cmpsl
out
sub
pushl
insl
sbb
add
cmp
loop
decb
xchg
xchg
push
repz
loopne
dec
adc
jnp
stc
flds
and
shll
dec
adc
es
push
jl
adc
mov
iret
shr
in
or
fldt
sub
shlb
daa
mov
cmp
xor
sbb
fisttpll
jge
push
cwtl
ja
pop
mov
jmp
shll
aas
aam
test
mov
rorl
push
jmp
pop
xor
mov
popa
les
bound
test
mov
pop
in
sub
out
mov
rcll
inc
ss
pop
and
lret
fidivs
mov
add
pushf
ror
repz
imul
rorl
cld
int3
movl
cmc
push
in
test
mov
rorl
mov
sub
sub
pop
mov
test
rcrl
mov
push
cmpb
fildll
or
loope
xchg
ljmp
stos
lods
push
jo
push
sub
xchg
mov
mov
sbb
inc
push
aam
nop
aam
push
sar
out
xor
ror
and
cltd
cmp
pop
push
mov
lret
lcall
rorl
pop
test
xorl
stc
int3
mov
stos
scas
nop
std
jbe
cmp
sahf
popa
jne
or
imul
fdivl
in
or
lods
sti
rorl
sbb
sarl
push
mov
lock
psrlq
cmp
rorl
push
adc
push
mov
inc
enter
flds
les
jle
push
mov
into
push
sub
jne
xchg
jp
leave
push
push
inc
dec
xor
xor
xchg
movsl
push
mov
mov
inc
jae
jne
mulb
shll
pop
push
or
out
mov
mov
outsl
push
cmp
add
and
mov
insb
push
hlt
ss
mov
in
lea
adc
out
mov
xchg
roll
inc
mov
ffreep
xor
sbb
daa
xlat
push
shr
lcall
rol
jecxz
dec
and
imul
xor
aas
in
push
adc
sarl
mov
icebp
je
sbb
fcoms
jae
icebp
push
jnp
push
jg
xchg
jno
dec
movsl
rcr
mov
dec
fstpt
mov
es
roll
push
sbb
xlat
mov
ljmp
sub
repnz
push
and
lock
movsb
test
dec
aaa
and
dec
stos
mov
in
in
mov
mov
xor
mov
fistl
jle
rorl
push
mov
push
in
mov
out
cltd
scas
xor
and
jb
call
jp
repz
mov
jg
hlt
ret
rcrl
div
cmp
dec
loop
shll
aam
xchg
inc
jbe
mov
and
add
imul
cmp
inc
xchg
rcll
and
sbbb
jb
jmp
stc
lds
push
dec
push
jle
cli
push
ficompl
xchg
add
inc
int3
lds
inc
dec
jg
mov
push
and
mov
dec
loopne
roll
hlt
mov
xor
sbb
rorl
test
adcl
cmpsl
mov
pop
sti
cltd
out
in
mov
push
mov
jnp
sarl
sahf
sub
stos
push
cmpsb
sarl
into
xor
sar
pop
les
mov
jne
pop
gs
jecxz
jbe
xchg
push
insb
mov
les
mov
lahf
outsb
sbbb
pop
adcl
rorl
stc
jg
cmp
enter
xor
les
push
cmp
stos
scas
mov
cmpb
shl
push
mov
xor
push
adc
or
dec
imul
lods
scas
sub
aad
xchg
push
pop
das
jmp
loopne
sub
mov
push
neg
jmp
mov
shl
mov
jl
xchg
arpl
push
inc
xchg
xor
mov
push
push
movsl
ficoml
xchg
cmp
rcll
cmp
pop
xchg
fwait
jae
aad
sarl
mov
adc
aas
jno
jnp
xor
mov
cmpl
push
rcrl
inc
jl
popf
jg
shrl
pop
mov
inc
mov
push
mov
daa
pop
lret
cmpsl
mov
insb
add
lret
and
int3
pop
ja
and
jle
hlt
cs
repz
sbb
push
test
and
push
loop,pt
das
cmc
mov
and
rcll
scas
test
shrl
test
ret
sub
shll
cmpsb
mov
add
mov
dec
adc
jp
inc
into
ja
stos
shll
enter
jns
imul
test
lds
out
loopne
adc
mov
mov
gs
aad
sarb
rcrl
xor
or
shlb
movl
orl
cmp
pop
mov
xchg
shrl
test
xor
mov
pop
clc
imulb
cmp
jge
fisttpl
roll
sub
stos
loopne
adc
in
push
fsubl
out
sbb
pop
shll
push
or
adc
mov
jecxz
dec
fidivrs
sub
roll
aad
and
lea
mov
cltd
addb
dec
inc
in
leave
mov
cmp
inc
cs
lret
imul
push
gs
out
pop
push
aam
push
aad
aaa
mov
negb
cmp
mov
push
or
sti
test
sbb
push
shll
repnz
shl
leave
push
and
jle
push
mov
mov
hlt
test
cwtl
push
inc
xchg
rorb
mov
pusha
push
sbb
shl
loopne
xor
or
adc
das
cltd
cmp
dec
loop
sub
pop
lcall
dec
pop
jecxz
lds
push
in
mov
aam
in
aam
push
inc
xchg
add
xchg
sbb
stos
push
mov
xchg
fsubs
adc
icebp
std
or
jg
lret
hlt
lods
sub
sbb
inc
je
lods
shr
stos
popw
nop
xor
add
loope
sbb
mov
pop
fcoms
xchg
push
cmc
xor
iret
mov
jle
enter
shl
push
add
inc
sbb
jbe
mov
mov
xor
data16
mov
shrl
cmp
push
sarl
call
push
addl
shrl
add
movsb
aad
sub
pop
popa
adc
mov
inc
xor
sti
dec
fcoms
mov
jbe
hlt
shll
in
mov
insl
imul
shll
inc
adc
sarl
and
sbbb
push
stc
cmpsl
and
fwait
jge
push
xor
ret
roll
scas
fmul
shll
dec
xlat
in
xor
push
pop
push
cmp
out
hlt
fstpl
pop
dec
mov
out
jl
std
jge
jae
pop
mov
cwtl
insl
mov
pop
repz
rclb
adc
mov
pop
sbb
es
dec
or
stos
jnp
pop
aam
dec
mov
rcll
into
dec
movl
hlt
dec
sarb
shrl
inc
jno
or
pop
mov
in
push
and
stc
xchg
mov
cmp
pop
shrb
xchg
les
rcrl
mov
int3
push
ret
mov
test
aam
enter
pop
iret
mov
loope
out
pop
das
pop
outsb
mov
js
adc
shlb
roll
xor
mov
int
insl
shll
idivl
test
and
repnz
xchg
xchg
adc
into
repz
orb
fs
fnstenv
test
xchg
ficompl
xor
jl
jae
mov
popa
lock
cltd
lods
shrb
sub
movsl
sbb
aam
add
push
lods
aad
cmp
add
stos
iret
aam
xor
rcl
push
sub
push
or
cmp
in
out
scas
mov
xor
and
shl
repz
mov
mov
and
push
push
mov
push
xor
jecxz
jge
inc
inc
rcll
rorl
iret
and
mov
shrl
dec
push
and
ret
stos
jno
stc
rcrl
sbb
fdivrl
adc
jbe
xchg
rorl
push
lds
sub
push
push
cmc
rcrb
setnp
mov
mov
or
in
xchg
iret
fwait
adc
mov
arpl
jge
shll
add
inc
jns
gs
mov
pop
inc
xor
xor
rorl
shll
push
xor
nop
adc
jl
inc
xchg
repz
aad
mov
cmp
fiaddl
arpl
add
mov
cli
sub
dec
popf
cmp
ret
and
shlb
sbb
shrb
push
push
or
or
mov
into
xchg
js
shr
jmp
push
test
std
rcll
cmp
sub
movsb
clc
adc
cmp
gs
push
sub
cmc
mov
and
push
xorb
pop
rcll
testl
not
pop
pop
xchg
aam
fcoml
mov
aad
cmp
and
std
jecxz
sbb
fs
shl
dec
fwait
or
mov
pop
sbb
mov
outsl
das
or
loop
xor
inc
and
mov
roll
imul
iret
push
fmuls
rorl
sbb
out
idiv
pop
pusha
lds
andl
jmp
adc
and
dec
shrl
test
or
ror
sbb
and
ja
fsubr
push
bound
push
push
mov
in
jbe
inc
add
mov
shll
inc
mov
sbb
fmuls
pushf
mov
jno
pusha
lock
xor
inc
mov
xchg
in
jmp
xchg
es
jae
stos
test
les
push
neg
xchg
xchg
sbb
mov
pop
in
daa
dec
mov
lock
or
cld
test
aaa
cmp
in
or
lea
mov
dec
pop
xor
cmp
jle
adcb
cld
mov
roll
leave
dec
xor
insl
push
inc
cmp
aam
cwtl
outsb
jp
pop
subl
mov
rcll
add
push
jmp
mov
insb
dec
cmp
mov
repz
xchg
lods
shr
sub
imul
ror
dec
cld
cmp
pop
mov
rcl
jo
xlat
sbbb
jb
call
sti
adc
cli
je
mov
sbb
xor
ret
dec
xchg
add
int3
mov
ljmp
lds
mov
xchg
mov
pop
ljmp
push
jge
pop
das
mov
popa
scas
fists
mov
test
nop
adc
xchg
rcrb
arpl
mov
mov
test
inc
adc
in
data16
push
xchg
sahf
popa
sti
push
cmpsl
inc
mov
movl
pushl
call
leave
shll
dec
mov
sar
shrb
inc
xchg
fcom
jne
adc
imul
movsb
cmpsl
dec
cmp
mov
test
sarl
jns
cwtl
ror
or
pop
adc
cld
shl
sub
shll
jecxz
lret
cmpb
shll
jne
stos
ret
and
and
scas
bound
out
jl
add
add
jecxz
and
push
lods
mov
ss
shll
mov
jl
roll
mov
jne
add
lods
fidivrs
cs
or
add
pop
ds
imul
arpl
mov
sar
jge
lcall
loope
in
idivb
or
in
repnz
mov
fwait
sarl
in
es
icebp
push
popf
add
mov
loop
mov
shll
xchg
adc
mov
push
test
jmp
pop
fcmovnbe
add
dec
xchg
mov
mov
or
mov
cld
push
inc
inc
xchg
mov
pop
push
xor
push
xchg
add
or
push
iret
xchg
lahf
scas
shrl
test
mov
push
cmp
cld
and
enter
call
sbb
push
inc
scas
cld
push
outsb
stos
lahf
jp
or
xchg
adc
cmp
lods
xchg
inc
shrl
sub
out
mov
iret
inc
push
neg
mov
or
push
and
data16
repz
inc
mov
sbb
pop
shl
xor
adcl
loopne
mov
push
push
rclb
mov
mov
sbb
ror
cmp
and
imul
je
cmp
inc
test
sbb
xchg
lea
adc
inc
movsb
cmp
rcll
push
xchg
cli
std
mov
cmp
mov
fimuls
adc
rcl
xchg
mov
jne
dec
sarl
nop
jg
outsl
add
aam
leave
xor
lret
pop
sub
jp
or
mov
mov
not
insl
cs
aad
aaa
push
faddp
mov
stos
push
sarl
inc
into
gs
mov
rcrb
test
inc
xchg
outsl
mov
push
pop
loop
rclb
ljmp
dec
cli
in
hlt
jmp
push
repnz
rorl
or
insl
das
pop
pusha
cmp
mov
popl
xchg
nop
mov
push
jno
pop
cltd
insw
mov
mov
cmp
das
rorl
sti
int
sub
outsb
hlt
aam
in
push
mov
xchg
xor
js
fcmove
dec
dec
shll
fsubr
add
sub
icebp
ljmp
mov
jmp
shll
lcall
mov
push
lea
jecxz
dec
rcrl
jo
inc
push
scas
out
inc
or
insb
mov
bound
sti
mov
xor
iret
stc
mov
test
dec
mov
mov
xor
movsl
mov
sar
mov
pushf
push
push
adc
jg
add
dec
pop
fists
es
cli
push
cmpsb
adc
outsb
cltd
mov
ret
in
and
outsl
addr16
or
push
rcll
in
ret
imul
sarl
inc
insb
nop
pop
jp
pop
adc
and
orb
or
mov
jbe
adc
ret
jecxz
outsb
mov
and
lret
int3
outsl
sbb
inc
dec
loopne
stos
lds
push
and
inc
pop
insl
or
movsl
out
cmp
mov
dec
leave
push
mov
sarl
test
xchg
cmpsb
jge
push
push
pop
sarb
inc
jnp
in
popa
mov
rclb
mov
xor
fisttps
fcoms
sbb
movl
in
adc
sub
shrl
pop
mov
icebp
gs
mov
rcrb
outsb
mov
mov
push
xchg
pop
call
mov
push
shrl
sbb
dec
lods
shll
stc
dec
pop
mov
in
shrl
push
xchg
push
mov
fs
outsb
inc
lret
sub
dec
inc
mov
dec
or
rcrl
dec
test
jns
cwtl
hlt
rcl
and
into
ja
out
jp
mov
and
imul
mov
xor
fimull
ljmp
mov
sarl
or
add
jno
sti
shll
dec
fwait
iret
rcll
loope
jns
scas
sub
adc
mov
aas
shll
les
mov
mov
mov
jmp
movsb
cmpsb
adc
das
push
sbbb
mov
and
stos
xor
loopne
imul
xor
or
jmp
xchg
sarl
ljmp
push
shrl
aaa
mov
inc
inc
in
repz
push
aas
cld
lods
fcom
imul
pop
std
push
xchg
adc
lcall
or
rcll
push
ja
shrl
shll
sbb
sarl
inc
or
xor
inc
push
cmp
stos
sub
aam
xchg
lods
or
inc
lods
rorl
xor
mov
ficomps
in
lock
out
ret
shl
adc
mov
inc
shrl
inc
mov
pop
adc
std
addl
aad
mov
rclb
push
dec
xchg
pop
test
es
cmpsb
ret
hlt
lahf
sbb
ljmp
sub
icebp
cld
or
inc
rcll
lcall
rcl
inc
test
xchg
sar
pusha
adc
sbb
bnd
loop
xor
std
popa
mov
lret
cs
adc
fsubl
rcll
rcll
shl
mov
mov
rcll
adc
ds
push
or
push
shll
iret
fs
xchg
divl
aad
adc
shl
push
inc
xchg
call
mov
xorb
sbb
jb
aas
outsl
pusha
mov
mov
mov
shll
hlt
js
rcrl
loop
rorl
arpl
out
mov
roll
mov
push
push
sub
repz
rorl
mov
enter
shll
xchg
cs
bound
jecxz
fstl
in
shll
outsb
push
cltd
aas
in
pop
xchg
xchg
sbb
out
fs
testl
shrl
fmuls
add
fisttpl
icebp
push
in
jg
mov
pushf
xor
lret
fcmovne
xor
dec
lods
or
loopne
repz
xchg
fisttpll
loope
int
int3
mov
mov
out
push
cmp
test
shll
jae
stos
ret
or
scas
lods
jo
and
xor
pop
and
jle
mov
stos
ret
push
fnstsw
push
ror
or
or
cwtl
push
call
sub
shll
dec
inc
sar
ret
popa
add
outsl
push
dec
jmp
jp
sub
mov
mov
in
jne
push
sub
pop
xchg
rcrl
in
pusha
js
fdivr
jb
les
into
push
inc
daa
cmp
mov
ja
out
pop
bnd
cli
shrl
je
sbb
and
shrl
sbb
dec
test
int3
imul
pop
dec
xchg
and
jnp
shll
shll
jge
mov
sub
push
lret
shll
movsb
mov
rol
call
adc
mov
mov
pop
in
xor
shr
mov
inc
xchg
pop
jno
push
into
les
sahf
ss
rcl
mov
out
xor
sar
dec
mov
mov
mov
cs
sbb
clc
insb
repnz
add
adc
sub
rol
lock
pop
or
rclb
arpl
sub
jl
pop
rorl
and
test
and
loope
push
dec
imulb
repnz
mov
push
fcoml
ljmp
mov
push
mov
stos
scas
int
out
pextrw
dec
xor
aaa
sub
and
mov
add
mov
mov
popf
xchg
aaa
addr16
mov
into
sarb
stos
jecxz
push
pop
push
popa
jle
test
loope
repz
mov
std
and
int3
cmp
add
jle
ret
shrd
sub
sub
mov
testb
aas
inc
mov
shll
ss
push
mov
sarl
pop
test
sbb
cmp
lahf
mov
scas
sti
sar
lahf
out
and
and
iret
shll
leave
xor
shll
cmp
in
shr
or
xor
aam
cmc
pop
dec
ret
mov
cli
repz
adc
gs
inc
mov
inc
and
fldenv
adc
rcll
jle
aam
and
test
xchg
cmp
push
cmp
setnp
xor
mov
mov
mov
ss
push
fld
lods
mov
pop
sub
mov
scas
or
insl
daa
push
shl
fstps
lahf
rol
and
lea
sbb
mov
mov
mov
push
cld
jp
pop
flds
int
inc
mov
jno
push
movsl
call
test
adc
sbb
xor
xchg
rcl
clc
addr16
xor
and
cmpsl
popa
ja
in
pop
adc
add
enter
push
sahf
cmp
and
repz
out
movsb
add
idiv
jecxz
cmp
jno
or
adc
mov
xchg
pop
pop
mov
fsubs
cmp
leave
dec
xchg
sti
lret
xor
iret
pop
dec
push
mov
jo
fsubrl
mov
jl
popa
fistps
jae
insb
not
out
mov
call
sbb
cs
sbb
inc
shll
outsl
fmul
mov
in
and
sahf
scas
mov
mov
loopne
into
loop
push
sarl
xlat
lea
iret
adc
out
and
inc
cmp
sub
inc
bound
adc
mov
or
rcll
scas
daa
ds
cmp
cmp
ret
in
mov
cli
lahf
test
sbb
sti
inc
cmpsl
shll
xchg
test
ja
mov
repnz
in
lods
icebp
xchg
sub
aam
mov
hlt
jecxz
sbb
fcmovnbe
pop
cmp
test
add
jle
sahf
sbb
push
dec
inc
mov
push
add
fs
cmpsl
pop
fdivrl
jge
out
test
shl
jno
stos
imul
and
fnsave
adc
push
ss
mov
test
push
jae
js
adc
lods
and
insl
mov
scas
daa
add
repz
adc
movsl
fcomp
ret
fistpl
jmp
jae
inc
dec
lret
aam
xchg
or
lret
in
out
xchg
jle
shll
pusha
inc
shrl
jmp
and
addb
stos
xor
pop
rorl
mov
mov
rorb
cmp
aad
mov
fxch
ds
std
dec
mov
shll
xor
push
adc
add
xor
clc
push
arpl
jbe
cmpl
imul
rcll
shlb
dec
repz
outsb
sarl
pop
or
mov
cmp
ret
imul
mov
jnp
lock
push
popa
scas
jb
pop
lret
xor
arpl
rcr
inc
adc
mov
push
inc
pop
mov
jge
cmpsb
mov
roll
pusha
xor
adc
push
mov
xor
xchg
mov
mov
dec
xor
sub
cli
and
dec
testb
pop
shr
outsb
jg
cltd
and
das
mov
aaa
test
sub
or
add
mov
push
cld
mov
int
add
icebp
scas
shrl
repnz
push
add
daa
stos
fmuls
sar
xchg
addr16
sar
fidivrl
cmpsb
int
mov
loop
add
push
test
xchg
push
mov
stos
push
icebp
cmp
cmpsl
stos
iret
scas
inc
mov
shll
sbb
roll
inc
mov
adc
sbb
rcll
fwait
rcll
jne
sar
dec
iret
es
insb
popf
call
pusha
sbb
jbe
outsl
pop
into
loope
shll
push
push
push
or
mov
pop
jmp
push
repnz
shlb
ret
popa
jecxz
ss
shlb
cld
loope
sub
adc
cmpsb
mov
test
rcrb
cmp
mov
xchg
and
sarl
aas
rorl
jo
pop
xor
xchg
push
inc
sbb
stos
pop
adc
mov
mov
cmp
shrl
setl
mov
and
notl
adc
stos
xor
push
push
mov
or
adc
pop
xor
out
inc
mov
fcom
mov
sbb
push
sub
test
nop
jmp
cmpsb
shlb
lret
and
stos
cmpsl
pop
pop
fnstsw
or
rorl
mov
pop
mov
xchg
shlb
inc
push
das
sar
in
sti
pop
pop
sbbl
shrl
mov
xlat
fdivs
aam
push
cmp
cmp
aas
jnp
adcl
mov
jg
pop
nop
loop
rcl
xchg
cmpsl
ror
dec
rcrl
in
ss
lret
int3
stos
sub
test
data16
push
jne
out
dec
fcompl
repz
cmpsb
mov
insb
mov
idivb
fsubp
push
mov
cmp
or
aad
add
sbb
mov
xor
outsl
cmp
not
and
leave
xchg
mov
add
stos
imul
loop
or
mov
pusha
mov
movsb
or
inc
negb
or
sub
daa
mov
jmp
jb
jecxz
imul
in
sbb
fcmovbe
in
stc
aas
inc
sub
ret
roll
mov
pop
push
mov
or
fildl
jg
xchg
xchg
addr16
stos
add
fldt
xchg
pop
sahf
test
dec
data16
pop
call
fstp
daa
mov
fisubrl
and
sarl
mov
loopne
lock
jge
in
mov
aaa
rorl
movsl
xchg
stos
mov
lea
iret
mov
jnp
rcl
xchg
fnstsw
and
xchg
mov
cmp
push
shl
sbb
dec
rcl
xor
insl
roll
sbb
call
int3
adc
xchg
sbb
mov
dec
add
push
bnd
js
bound
sub
aam
mov
fimuls
add
cld
imul
dec
sub
push
cmp
inc
scas
or
push
mov
mov
fisttpll
addb
jb
scas
fdivrp
sarl
or
lret
add
rcrl
push
into
sbb
xlat
fld
test
push
cwtl
add
xor
lods
sti
dec
shrl
cld
jb
push
shll
mov
je
out
cmc
nop
mov
jge
call
lods
dec
faddl
jp
mov
jecxz
pop
loop
sarl
cmpsb
aam
dec
shll
mov
scas
sbb
adc
inc
jecxz
stos
mov
jnp
adc
push
shll
adc
imul
push
fwait
popl
mov
push
mov
js
dec
mov
push
pop
xchg
xor
fstpl
pop
and
xchg
xor
inc
xor
rcll
cmp
jl
or
sub
enter
push
pop
xor
loope
cmpsl
ror
sub
push
mov
push
mov
outsl
adc
push
hlt
push
rclb
inc
int
add
scas
outsb
test
aam
shr
xchg
jle
or
dec
add
shr
mov
into
sbb
addr16
mov
enter
pop
mov
popa
addr16
fisubrs
mov
out
push
xchg
add
dec
jp
cmp
ror
iret
dec
add
pop
in
rcrl
pushf
stos
sub
lahf
fldcw
adc
shll
je
mov
addr16
arpl
lods
cmp
mov
insb
xlat
es
fstps
pop
mov
cmpsl
lods
popa
rorl
cmpsl
lcall
push
mov
sub
lods
sub
shll
jp
mov
sub
jge
stos
jl
dec
xlat
outsb
aam
repz
xchg
jno
cwtl
cld
rorl
push
outsl
ds
inc
cs
push
mov
jnp
xchg
push
sarl
or
aas
imul
cld
jle
cmp
out
fwait
push
shl
int3
mov
lods
scas
rolb
inc
jmp
push
lcall
add
ds
stos
lods
iret
sahf
sti
sub
fwait
jne
mov
outsb
push
adc
test
shll
or
adc
aaa
inc
test
roll
subl
les
push
shl
clc
mov
popa
fisttps
andl
scas
inc
mov
rcrl
mov
and
sbb
iret
xchg
nop
rcll
sub
std
je
push
fcomp
lods
sti
scas
shll
sbb
arpl
push
xchg
shl
std
loopne
mov
shrl
dec
and
push
clc
jmp
int3
inc
repz
xchg
adc
jo
aam
sti
add
aas
jecxz
mov
sub
add
rorb
xor
mov
xchg
push
mov
int
negb
mov
cmpsl
dec
movmskps
jae
out
cmpsl
mov
rorl
xor
pop
pop
dec
or
mov
sbb
cmpsb
cmp
xchg
outsl
xchg
or
loop
lods
mov
insb
mov
xor
pop
hlt
shl
mov
or
and
ds
shll
push
out
ja
dec
add
xchg
or
inc
push
dec
ret
test
adc
push
cld
cltd
sbb
push
lcall
setbe
shrl
and
in
push
in
out
outsb
sub
aad
push
inc
sub
test
sarl
xchg
ror
cli
mov
dec
sub
xchg
jmp
push
test
icebp
rcrl
inc
mov
mov
push
xor
mov
int
jns
aam
xchg
loope
stos
dec
mov
push
fisttpll
cmpsb
lcall
js
sub
outsb
rorl
sti
jne,pt
mov
push
loopne
mov
cltd
bound
scas
push
lds
lret
iret
daa
stos
pop
repz
mov
imul
outsl
push
dec
mov
fldenv
mov
cmp
cmp
test
shll
dec
xor
daa
imul
movsb
xchg
call
mov
add
aaa
ret
sub
sbb
insl
mov
mov
inc
aam
xchg
icebp
jbe
push
jne
mov
push
imul
push
lea
and
test
frstor
adc
dec
pop
push
inc
jo
cli
in
xor
dec
roll
repnz
rclb
pop
pop
dec
ret
lds
js
mov
sub
cwtl
inc
pop
add
xor
jge
pop
mov
pusha
dec
jmp
mov
pop
pop
jg
sbb
adc
and
mov
pop
jae
sbb
sbb
je
sbb
pop
and
js
push
bound
push
insl
mov
rcl
pusha
mov
inc
sbb
mov
out
pop
test
jg
aad
mov
xchg
sbb
popf
jge
pushf
push
jecxz
pop
repz
jno
xor
xor
push
push
sub
stos
sub
dec
lahf
mov
jno
pop
and
xchg
or
pusha
jo
mov
fs
push
dec
lret
addr16
sub
push
push
mov
lret
sbb
int
das
out
rorl
out
cs
loop
pop
iret
and
xchg
dec
xchg
loopne
mov
orl
out
push
aaa
iret
hlt
rcr
sub
fwait
inc
rcr
adc
shll
jmp
xchg
shrl
xor
fsubl
repz
push
cmp
mov
pop
sbb
imul
xor
repnz
mov
sub
aas
mov
fs
shl
adc
rcrl
stos
inc
aam
fdivs
hlt
popf
rclb
jecxz
pop
sub
xor
loop
xor
push
addr16
mov
mov
and
adc
pop
jmp
in
rol
ljmp
push
imul
sub
mov
dec
dec
cld
call
push
xchg
nop
cmc
xor
roll
mov
or
dec
pop
cs
test
loop
cmp
shll
wbinvd
xchg
push
pop
sub
jp
sbb
jae
inc
inc
sub
and
lods
ss
mov
bound
ret
or
add
cmpsb
loope
push
pop
shrl
gs
shr
shrl
cmc
and
adc
rol
inc
add
sbb
cmp
roll
pop
push
dec
sub
inc
xchg
fimuls
pop
cmp
shrl
out
xor
push
jo
adc
sbb
cld
movsb
cmc
cmp
clc
mov
or
rcl
xchg
nop
sub
pop
leave
sti
outsl
aas
push
fs
aam
or
pop
cmpsl
cmp
shll
movsb
mov
rcrl
std
pop
jge
mov
fimuls
insb
lds
jne
pop
pop
adc
loopne
adc
leave
push
cmp
push
out
jmp
into
push
push
mov
roll
cmp
jle
fcompl
dec
push
push
outsb
inc
rcl
shlb
jae
ljmp
push
pushl
pop
test
dec
pop
outsb
mov
outsl
jb
enter
shrl
cwtl
cmpsl
rorl
xchg
jge
icebp
push
rol
cmc
decl
lods
xchg
pop
out
in
or
mov
mov
xchg
sarl
lret
fwait
sub
fcomi
lods
cltd
push
roll
mov
lcall
sarl
and
rcrl
xor
push
mov
ss
inc
scas
and
js
and
fs
xor
push
inc
ret
push
pop
xchg
jg
mov
lds
xor
test
cmp
xchg
sarb
fsub
xlat
xor
fadd
retw
fisttpll
notl
mov
jo
xchg
push
out
outsl
and
pop
push
and
rorl
push
aas
test
add
stos
shl
sahf
mov
mov
jnp
cmpsl
xor
sbb
jle
outsb
jp
mov
roll
out
mov
roll
fistps
sub
sbb
xor
sahf
jp
or
pop
mov
adc
repnz
sub
push
lock
push
ja
cs
push
jp
ror
into
rolb
shll
and
orb
jb
mov
add
rorl
sbb
outsb
shlb
cmp
xor
icebp
aaa
fdivrl
rcl
dec
jle
cli
adcl
shlb
shrl
xchg
gs
dec
dec
adc
push
aad
and
shr
xchg
out
cmc
add
mov
push
xor
shlb
xchg
lods
xor
push
int3
sbb
xor
mov
sahf
aam
mov
pop
xchg
mov
xor
shl
aas
sub
lahf
mov
inc
cmp
insb
rorl
push
adc
fdivl
pushf
mov
sbb
fwait
out
leave
xchg
push
dec
adc
mov
lea
sbb
jle
das
mov
dec
data16
mov
arpl
pushf
loope
and
cli
jl
xchg
bound
in
mov
aas
shrl
fildll
stc
mov
push
loope
ror
shrl
shrb
jg
mov
arpl
outsl
sub
inc
lods
push
call
fisttps
rorl
dec
jl
sarl
mov
jle
movsl
push
mov
fisttpll
and
popl
rol
inc
aaa
cmp
repnz
ror
push
addr16
lea
rcrl
lcall
cmc
mov
std
rcl
jge
je,pt
jbe
rcrl
dec
or
les
add
aam
fcompl
shl
cld
in
loope
aam
shll
dec
outsl
cmpsl
xchg
mov
repnz
mov
jo
and
pop
inc
gs
stos
lods
lods
ljmp
jmp
repz
lret
jecxz
cmp
xchg
fisubrl
ds
mov
xchg
jecxz
sbb
or
cmpsl
lahf
shrl
fisubrl
cmp
jmp
psrlq
mov
adcb
inc
jmp
shll
arpl
jp
gs
int
lods
xchg
notb
mov
shrb
add
jge
xchg
aam
roll
or
xor
ds
test
sahf
divb
pop
ret
aas
add
cmc
inc
mov
jge
lds
dec
rolb
loopne
arpl
cld
jne
cmpsb
jl
stos
sbb
push
roll
popa
cmp
out
clc
imul
adc
dec
rclb
sbb
sub
sbb
mov
dec
std
mov
lea
xchg
cmp
add
mov
adc
inc
pop
roll
in
dec
fcoml
or
aad
rcr
fs
push
and
and
push
adc
out
mov
repz
push
mov
sbb
js
pop
pop
shlb
push
mov
push
rcll
nop
and
lcall
jns
xchg
xorl
sub
mov
cmc
and
push
fidivrs
sub
fdivrl
push
push
imul
or
add
frstor
shrb
cmp
adc
cmp
mov
adc
outsl
cltd
scas
sarl
or
lcallw
cmp
mov
and
shrb
daa
mov
aam
lret
inc
icebp
or
xchg
pop
shll
mov
sub
fcom
xchg
in
scas
adc
pop
add
mov
mov
mov
fs
rcll
mov
jns
pop
aam
rol
je
pop
mov
fstl
sbb
cmpl
out
test
in
mov
jae
pop
scas
addr16
aaa
fmull
adc
nop
or
mov
jo
xor
xchg
sbb
sub
jle
ljmp
push
rcll
jp
xchg
dec
ljmp
pop
insl
insb
mov
call
push
shrl
or
jns
repz
xchg
add
cltd
rorl
hlt
dec
sarl
jbe
sbb
in
rorl
mov
cmp
inc
outsl
xchg
pop
mov
sub
fidivrl
lods
jb
xorl
pop
pop
push
cli
rorl
out
dec
roll
int3
pusha
shll
dec
xchg
arpl
lds
rcrl
addr16
out
das
xorl
jp
mov
dec
lahf
in
outsl
jle
pop
mov
aam
mov
mov
sub
adc
adc
mov
pop
xor
inc
in
bound
inc
inc
xchg
xchg
jnp
inc
repz
inc
or
arpl
jp
dec
addr16
push
gs
and
mov
ds
pop
popf
cmp
test
out
xchg
cmp
adc
push
clc
pushf
jp
push
pop
xchg
fcoml
xor
scas
xorb
ficomps
mov
sub
mov
enter
cvtps2pd
and
shll
shrl
ds
pop
xchg
pop
sub
push
jle
dec
mov
in
aam
js
dec
pop
mov
mov
jle
and
xchg
mov
roll
sub
jno
push
and
fstps
xor
xchg
push
fiaddl
dec
jl
push
mov
sub
mov
push
adc
cs
movsl
es
cwtl
add
cmp
mov
fisubs
xchg
dec
subl
mov
and
cmpsb
mov
mov
lcall
or
stos
sub
cmp
mov
roll
pop
xor
cltd
inc
pop
push
inc
xor
rol
shlb
dec
rcrl
and
ret
rcrl
jmp
mov
inc
ljmp
stos
and
push
jno
cmp
popf
cltd
rol
scas
ror
cmc
add
adc
push
xchg
ret
fsubp
or
jp
inc
mov
in
test
xor
jns
rcll
bts
or
stos
push
pop
xchg
or
xchg
sti
inc
mov
jg
bt
sub
shll
dec
faddl
out
mov
popf
gs
cmpsb
pop
mov
xor
jo
mov
inc
sbb
add
pop
jae
or
inc
mov
jge
int3
push
js
out
xorb
cmpsb
sarl
xor
adc
stos
inc
and
aam
popf
dec
xchg
jecxz
jmp
xorb
rclb
xor
pop
mov
mov
rcrl
inc
sub
shll
cmpl
push
inc
fisubrs
push
xchg
sbb
imul
in
dec
add
pusha
mov
rcl
lret
sub
xchg
xchg
mov
rcl
out
push
addr16
inc
push
rorl
push
or
aad
cld
rcr
jae
dec
mov
inc
mov
or
call
dec
mov
fstpl
cmp
mov
adc
roll
insb
out
and
xor
mov
adc
dec
mov
pop
push
jle
shl
sbb
data16
out
shll
int3
pop
xlat
push
mov
push
mov
mov
les
aam
scas
or
fwait
daa
test
cmpl
leave
shl
cmc
fists
adc
rcll
inc
popf
aaa
outsb
inc
notb
in
pushf
xchg
mov
xor
js
inc
orb
call
mov
or
dec
rcrl
or
adc
pop
mov
mov
xor
andps
into
sarb
leave
repz
adc
shll
sbb
shl
dec
lret
mov
jo
ret
daa
xor
ss
shll
dec
out
lock
fsubs
xchg
jo
fstpl
stos
sbb
or
mov
sti
cs
sahf
test
push
jle
and
mov
adc
push
xorb
lock
shrl
fistps
ret
insl
jb
shll
jp
xchg
push
xchg
xor
mov
ret
and
push
xor
dec
push
push
stos
aam
jo
mov
shlb
lods
imul
push
push
into
xor
jl
shr
adc
mov
push
push
shrl
orb
jb
lret
stc
push
or
jno
and
push
in
ret
pop
adc
int3
xchg
push
rcrl
inc
jmp
lds
xchg
shll
aad
negl
std
rcrl
out
ljmp
loopne
pop
inc
test
mov
lock
sbb
int3
xchg
push
jg
pushf
in
mov
add
aas
sbbb
xchg
in
mov
mov
mov
jnp
sub
int3
push
mov
xor
add
jmp
shll
mov
pop
aam
mov
and
shll
and
jmp
xor
imul
xor
jb
mov
sub
repnz
jge
inc
shrl
dec
adc
rcll
pop
sub
call
lahf
das
xchg
jp
mov
fs
mov
mov
in
mov
cwtl
inc
push
shl
dec
jmp
out
xchg
inc
dec
sarl
add
sbb
aam
std
xor
adc
mov
shr
icebp
xor
add
push
cld
inc
xchg
lods
repz
jl
mov
shll
adc
lods
lret
pop
cs
bnd
clc
cwtl
fidivl
mov
xor
mov
inc
shr
dec
pop
les
add
lret
stos
adc
aas
popw
ret
subb
sbb
cmp
and
dec
push
cli
repz
push
jecxz
pop
and
mov
out
cmp
xchg
hlt
cmpsl
in
gs
sti
outsb
clc
and
shr
insb
dec
addr16
outsl
shr
int3
jns
dec
xchg
imul
dec
cld
test
iret
inc
shl
xchg
xchg
rcll
imul
rorl
or
gs
rcrl
fsubs
repnz
ljmp
stos
movsbl
roll
stos
jns
mov
or
mov
loope
push
or
idivb
sub
out
shlw
or
test
or
gs
jnp
das
cmc
push
inc
jmp
dec
rcr
inc
xchg
loop
mov
pop
jecxz
in
addl
enter
ljmp
test
in
arpl
jno
inc
sbb
fcmovu
in
push
repz
cmp
lret
aam
jecxz
xchg
add
sbb
jmp
jbe
push
mov
sarl
inc
sbb
xchg
push
movsb
sub
fcom
push
rcr
jns
fidivl
cmp
and
rcrl
jecxz
lret
shll
nop
imul
cld
add
jno
leave
mov
sbb
lret
push
cld
sub
and
shr
mov
lock
mov
ficomps
shll
cmpsl
add
dec
pop
and
fst
push
ljmp
xchg
or
mov
scas
sbb
outsb
stc
mov
out
shl
loop
fimull
mov
mov
int3
hlt
jecxz
aaa
push
shrl
clc
lea
dec
or
repnz
pusha
sarl
mov
fildl
xor
mov
lcall
add
repz
sub
mov
jecxz
mov
in
shl
and
and
aad
dec
inc
ljmp
jmp
das
pop
pop
aam
cmp
sbb
xchg
push
sbb
lahf
dec
xor
jo
jg
adc
xchg
xor
push
rcll
fisttpl
in
jns
or
mov
data16
aam
fnstsw
xchg
sbb
pop
sbb
jo
pop
dec
out
xor
jmp
lock
or
mov
shll
rcl
mov
stos
pusha
movsb
sub
jp
lcall
or
mov
sarl
xchg
and
movsl
ror
dec
ret
aaa
in
mov
dec
insl
cmpsb
lret
arpl
rcll
inc
rolb
dec
enter
sub
incl
and
shl
dec
mov
in
push
add
cmp
sarl
mov
inc
push
sub
loop
mov
pop
add
mov
roll
mov
dec
sbb
shl
jmp
add
shl
pushf
int3
add
push
bnd
jo
and
insb
shll
pop
daa
xchg
out
add
xor
imul
test
mov
pop
imul
xchg
or
in
adc
push
fstl
sarl
sub
inc
jecxz
inc
push
mov
mov
outsb
cmpsb
dec
sahf
mov
rcll
cwtl
xor
shrb
lret
inc
rorl
cmp
pop
xchg
rorl
and
sub
push
stos
push
adc
insb
mov
cs
std
pop
test
leave
mov
sub
xchg
out
mov
dec
fdivrl
enter
pop
hlt
push
in
loope
shll
push
mov
fs
xchg
lret
shll
inc
mov
imul
or
adc
sbb
dec
test
shrl
clc
mov
movsl
cli
rorl
cltd
add
shrl
push
push
je
flds
jae
addr16
rcr
xor
pop
dec
jl
mov
pusha
in
popa
xchg
cli
cwtl
lods
jns
dec
pop
cs
lock
movsl
xor
mov
sub
inc
addr16
cmp
mov
dec
rcll
ljmp
push
sub
stos
icebp
scas
repnz
rcrl
outsb
lret
mov
xchg
push
rcr
aam
adc
cmpb
stos
jmp
aam
pop
and
insl
mov
xor
rcl
das
sbb
push
lods
jne
sarl
pop
and
push
pop
jmp
ja
pop
push
ljmp
lods
pop
repz
or
int3
ds
leave
push
cmc
push
xlat
inc
mov
or
inc
lods
shrl
add
xor
jae
pop
out
fmull
cld
mov
inc
inc
xor
shl
stos
ss
shrb
xchg
fcomps
pop
aas
lds
lods
push
rcll
dec
sub
cmp
push
push
insb
add
mov
imull
xchg
gs
aam
or
in
repz
xor
push
sbb
insb
loope
push
mov
xchg
ja
subl
imul
mov
out
adc
push
or
mulb
sar
shll
mov
and
scas
push
rcll
mov
shll
push
xchg
mov
pop
into
pop
rorb
shl
es
dec
push
pop
sti
dec
frstor
mov
shrb
shl
pop
inc
push
or
stos
mov
xchg
sarl
adc
into
imul
cmpsb
mov
sub
sub
push
mov
movsb
mov
call
xor
fsubl
loopne
rcrl
das
aad
lock
mov
sbb
push
mov
outsl
decl
adc
mov
mov
mov
iret
pop
xor
and
inc
rcr
mov
lock
imul
pop
es
cmpsl
outsl
rorl
pop
xchg
push
call
pusha
mov
mov
push
mov
in
cmc
mov
es
daa
popf
mov
lcall
icebp
xchg
rcll
inc
fs
shll
ja
adc
in
push
inc
pop
xchg
push
dec
js
xchg
popf
rcll
push
rcll
je
jo
pusha
rcrl
cmp
mov
mov
imul
fcmovnbe
fdivr
mov
lret
test
lahf
iret
mov
sbb
into
jno
mov
fdivl
push
pop
push
setno
bound
sbb
aaa
adc
stos
mov
shll
cs
pushf
xor
shrl
sarl
mov
js
push
mov
lds
dec
xchg
jne
push
fists
xchg
inc
insl
sbb
mov
test
cld
rol
push
dec
and
pop
mov
in
jmp
test
into
dec
add
cmc
aam
pop
call
dec
in
add
add
sarl
jp
call
movsb
inc
push
cmpsl
jne
or
orb
jb
mov
sar
add
iret
pop
scas
ror
sar
adc
adc
pop
ret
ja
mov
imul
int3
mov
adc
stos
fwait
pop
and
push
pop
cmpsl
scas
xchg
jmp
jge
icebp
ljmp
outsb
fistpll
ror
roll
clc
pop
test
mov
adc
and
mov
pop
sbbl
roll
stos
jne
lcall
fs
bound
rcll
pushf
inc
call
ljmp
inc
cmpsb
push
shrb
push
sbb
rorl
into
dec
js
xchg
fsub
ret
aas
xchg
pushf
int
cltd
rcrl
repnz
jo
into
xor
mov
xchg
push
xchg
sub
xchg
fidivrs
roll
enter
pop
sbb
arpl
lods
das
scas
shll
stos
fs
int3
cs
jno
pop
sub
les
push
ret
dec
adc
inc
and
popf
fwait
jb
pop
ss
in
lods
daa
rcll
int3
rcr
xchg
push
addr16
aas
repz
shll
int
sbb
shrl
push
test
movsl
lds
add
mov
inc
cmp
sub
cmpsb
pop
pushl
jp
outsb
push
popa
xchg
mov
notb
pop
push
sti
je
xchg
and
cmp
sbb
push
incb
shll
mov
dec
push
xchg
lret
xlat
lock
jmp
shll
mov
insb
data16
mov
or
mov
imul
repz
inc
pop
cld
adc
sarl
cwtl
mov
cmc
loop
mov
adc
les
or
pushf
lahf
mov
loope
les
cmp
cwtl
rcl
orl
pop
fs
sub
shrl
rclb
pmuludq
push
xor
xchg
sahf
pop
mov
les
cmp
sarl
lcall
pop
dec
mov
call
or
pop
pushf
fcoms
adc
das
dec
inc
sub
pop
rorl
loope
repz
iret
outsb
dec
rorl
push
mov
outsb
push
shl
scas
adc
imul
adc
inc
xchg
push
or
stos
ja
mov
rol
push
lcall
mov
movsb
or
sub
std
fstenv
shrl
rolb
ret
cmp
addb
nop
push
pop
shrl
neg
dec
push
or
aas
lods
push
sub
nop
jmp
rorl
push
jg
rcl
cmp
repnz
mov
out
lds
int3
jmp
not
in
sbb
lods
jmp
ret
les
rorl
and
push
sbb
and
sub
filds
pop
push
mov
push
hlt
cli
push
xor
lea
stos
xor
mov
jnp
out
outsb
push
es
cmp
out
push
mov
push
lcall
insb
push
daa
sbb
adcl
sub
int
stos
xchg
pop
shr
cwtl
mov
xchg
outsb
lret
jo
in
jo
inc
adc
movsb
xchg
shr
fimuls
rorl
fcomp
inc
test
div
mov
ljmp
xor
mov
fldt
push
push
jns
mov
adc
xor
fisttpll
xchg
and
sbb
mov
jo
scas
outsb
out
int3
stos
push
push
ret
insl
das
lock
mov
inc
test
scas
jmp
fldcw
sbb
and
xor
jbe
jle
roll
mov
lods
lcall
pop
out
xchg
dec
jo
shll
insl
iret
xchg
cmp
dec
repnz
cmpl
clc
add
js
jmp
xchg
xor
out
xchg
aam
xor
jp
ror
in
mov
shlw
inc
imul
aam
mov
push
roll
jb
cwtl
imul
dec
outsl
pop
push
sub
jecxz
lea
mov
xlat
shll
dec
int
dec
jl
shrl
sub
shll
or
fwait
adc
push
inc
rsm
jge
mov
mov
xor
out
shll
xchg
cmp
xor
lret
dec
pop
es
push
xchg
in
loopne
adc
sti
xchg
mov
jnp
jae
sahf
fadd
roll
jge
mov
sub
inc
xor
outsl
stos
shll
das
jnp
mov
rorl
pop
out
inc
xchg
mov
aas
xchg
sbb
adc
push
sarl
lret
fmull
lods
dec
mov
inc
cmpsl
sub
fisttpl
push
xchg
push
scas
enter
pop
aam
xor
xchg
dec
popa
das
or
jle
arpl
sub
xor
jns
mov
adc
dec
out
roll
dec
std
inc
cmp
scas
cltd
mov
xor
xchg
negl
add
loopne
jne
push
inc
ljmp
addr16
pop
fisubrl
pusha
jge
pop
mov
popa
sahf
mov
lods
push
dec
add
adc
xchg
inc
rorl
bound
fsubs
jg
pop
insb
movsb
sub
mov
mov
sbbl
repnz
je
sarl
fdivrs
popf
roll
out
adc
icebp
dec
mov
mov
and
dec
shll
std
mov
mov
adc
jg
imul
std
fs
lret
ja
xchg
inc
ljmp
pop
out
mov
roll
cld
movl
xchg
adc
xor
insb
enter
inc
or
mov
and
ret
fidivrl
jl
rcrl
inc
arpl
cvttps2pi
push
testl
adc
shll
or
mov
sti
inc
lods
test
push
inc
mov
in
add
mov
xorl
xchg
imul
xorb
mov
inc
gs
mov
pop
or
push
or
inc
lods
mov
pop
mov
shll
pushf
xchg
sahf
sbb
aad
push
xchg
dec
jb
icebp
xlat
push
or
mov
lret
inc
imul
and
shlb
cmpsb
mov
push
sti
sub
xchg
fwait
int3
movsb
ret
roll
push
mov
rorl
inc
cmp
gs
pop
adc
jmp
push
jne
adc
adc
mov
push
leave
sbb
mov
lret
dec
loope
pushl
xor
aam
inc
fmull
mov
push
imul
test
jae
adc
mov
dec
test
rorl
rcll
mov
outsl
adc
push
push
mov
loope
sbb
rorl
mov
js
push
mov
jnp
fcmovnbe
dec
or
xor
shr
test
push
pusha
mov
roll
lods
inc
xchg
push
daa
mov
adcb
cltd
shll
xchg
xchg
xor
lcall
jmp
jecxz
scas
dec
and
add
out
vpcmpeqw
inc
or
xchg
fisubl
mov
jae
sbb
rorl
push
add
push
icebp
es
test
push
xor
add
xor
pop
lea
xchg
push
js
sbb
and
call
push
adc
jg
lock
rcl
push
mov
push
outsl
push
fmuls
lret
xorl
int
shll
lock
sarb
jge
insb
mov
aaa
push
das
iret
sub
dec
rcrb
cmp
sub
scas
shrl
int
call
jp
popf
mov
mov
xchg
enter
roll
in
fiaddl
aam
dec
mov
sti
mov
mov
mov
imul
into
push
push
xchg
adc
pop
pop
mov
and
ret
and
jb
push
shl
or
scas
pop
shll
into
test
push
ret
insb
outsb
sub
add
dec
shll
cli
xchg
lds
mov
mov
xchg
out
cld
or
jge
sub
mov
dec
pop
out
stc
rcrl
push
push
mov
addr16
cmpsb
cli
roll
adc
andb
jmp
mov
in
lcall
dec
mov
xchg
adcb
push
push
jne
in
leave
xor
shr
or
jg
pop
xchg
and
shrl
mov
pushf
rorl
adc
out
in
dec
push
xchg
scas
xchg
pop
pop
lds
mov
xor
mov
das
sub
pop
mov
outsl
inc
shl
enter
xchg
sub
mul
shrl
nop
das
out
dec
mov
fs
mov
xor
adcl
pop
shll
scas
xor
fadd
and
dec
xchg
jb
mov
cmp
xchg
mov
daa
jno
xchg
out
adc
es
mov
rorl
add
dec
inc
lods
push
not
cs
or
shll
cmp
pop
adc
pop
subb
aas
sub
daa
pop
mov
std
outsl
or
jo
inc
repnz
popa
je
lahf
dec
icebp
fwait
jecxz
idivb
and
push
push
les
repnz
rorl
mov
rorl
mov
inc
insl
cwtl
rol
xor
jecxz
cmpsl
out
rcll
mov
jp
cld
push
data16
jmp
add
xchg
iret
sbb
int
push
sbb
jno
jecxz
cld
les
xlat
rcr
test
sarb
xor
sub
or
and
out
std
dec
in
mov
sarl
call
out
rcl
mov
xchg
subb
inc
in
shll
mov
or
or
shll
outsl
popf
push
lods
fwait
dec
scas
sub
idivl
jb
fsubrl
dec
xor
lret
mov
rcll
or
dec
xchg
imul
mov
pop
mov
mov
aam
push
insb
orl
push
push
test
test
jnp
adc
scas
in
cs
dec
cmp
push
aad
or
cmp
shll
test
sbb
ret
push
push
movsb
rcll
aad
push
xor
adc
push
mov
cmp
push
shll
pop
test
xchg
mov
jae
jmp
loopne
mov
stos
pop
inc
leave
mov
cmp
loop
xor
fistl
xor
pop
fdivr
nopl
sbb
lock
sub
cmpsl
aaa
push
adc
fstpt
es
push
in
sti
inc
mov
sbb
mov
push
stc
outsl
icebp
imul
and
jb
push
mov
add
hlt
fbld
xor
dec
loopne
decb
pushf
sbb
aam
pusha
cmp
pop
shrl
fiaddl
je
xchg
mov
das
cld
push
cltd
cmc
and
shll
adc
dec
ror
cmp
scas
jp
ljmp
mov
xchg
fidivs
inc
push
mov
fldl
sub
roll
fcomps
mov
or
mov
mov
je
popa
xor
addr16
jecxz
cmp
pop
rcl
test
imul
fstl
dec
sbb
push
cld
mov
push
mov
sub
push
movsb
pop
insb
mov
bound
not
dec
sti
aad
aaa
shlb
push
repz
rcll
aam
shlb
xor
fstpl
jle
hlt
sarl
inc
mov
push
pop
movsb
rcrl
dec
xor
pop
fisttps
or
call
clc
movsl
add
shrl
pop
dec
fisubl
mov
mov
xchg
cmp
dec
push
aam
and
or
in
rolb
loope
mov
mov
clc
adc
inc
and
insb
mov
or
sub
insb
xchg
pop
cmp
pop
mov
rcl
lea
xchg
cmp
rcr
inc
filds
nop
call
int3
jmp
sahf
shrl
sub
andb
push
rcll
out
shr
pop
add
rol
out
pop
jae
jge
lret
mov
cmpsl
fwait
arpl
jg
rcll
pop
jnp
cmp
sub
insb
mov
mov
shrl
jl
or
inc
push
xor
mov
ret
inc
jp
in
sarl
push
jle
dec
and
mov
xor
insb
shrl
orb
loopne
scas
mov
roll
insb
pop
into
xor
adc
imul
jo
xchg
xchg
dec
iret
xor
inc
stos
sub
mov
call
push
enter
pop
xchg
xchg
lcall
pop
shll
mov
or
lret
jae
es
sub
std
jb
repz
roll
dec
std
cmp
imul
inc
and
inc
xchg
int3
sbbl
push
movsl
aaa
push
jae
add
fsts
cmpsl
iret
pop
ficompl
push
jl
inc
inc
stos
ret
mov
shll
mov
lods
and
xor
shrl
mov
jg
fmuls
cmp
push
lds
xor
push
inc
je
dec
pop
jp
repz
aas
in
push
jg
repnz
pop
popa
push
fsts
cmp
lock
push
es
popf
cld
in
pop
xor
ja
inc
xor
jl
cmpsl
and
sbb
int
loop
out
dec
xchg
jmp
rol
dec
fsubr
cmp
mul
repz
repnz
cld
in
mov
inc
xor
mov
rcll
addl
xor
shld
cmp
shll
mov
adc
jo
jbe
loop
stos
dec
rorl
or
sub
cmpsl
test
push
shll
cli
sub
mov
movsl
jnp
ljmp
xor
and
rclb
cwtl
pop
mov
inc
jle
cmp
sbb
roll
push
fists
mov
add
test
shrl
arpl
xor
bound
mov
sti
scas
enter
cmp
ret
sbb
rcll
movsl
adc
rclb
outsb
rcll
cmp
push
dec
push
sbb
mov
cmpsb
cmp
addr16
mov
dec
out
cmpsl
fcoml
rcrl
xor
sub
nop
xchg
jle
add
fdivl
leave
inc
sti
push
rol
out
jl
mov
sbb
mov
sbb
paddusb
int3
pop
push
pop
xor
rcl
rclb
adc
mov
ds
subl
addb
inc
ljmp
sbb
psrlq
jne,pn
push
loop
rcll
mov
in
into
imul
cld
sbb
andl
mov
or
insl
out
aam
dec
mov
xlat
lea
sarl
sti
cmp
out
adc
lret
shr
mov
sub
mov
and
fsubr
sub
loope
inc
rol
inc
and
jns
push
push
push
js
jb
scas
sub
les
jle
mov
add
test
leave
roll
mov
cmpsl
xor
movsl
fcmovnb
xchg
insl
rcl
hlt
aad
test
insl
mov
sahf
pusha
mov
sbb
out
and
jo
fimuls
daa
push
sarl
and
cmp
push
test
jl
roll
stos
rorb
or
enter
inc
inc
xchg
xor
pusha
les
push
in
pop
mov
roll
scas
mov
dec
xchg
jl
mov
xor
insl
inc
aam
and
jp
int
mov
aaa
lods
xchg
ret
dec
add
into
cltd
jbe
and
dec
dec
push
or
out
aam
mov
xor
imul
push
into
push
or
inc
in
mov
daa
mov
adc
xchg
mov
cld
pop
mov
sarl
add
sbb
mov
movsb
pop
xchg
adc
xchg
int
ja
mov
inc
and
pop
sub
xchg
pop
mov
mov
xchg
ja
mov
dec
or
iret
shl
or
xor
insl
mov
into
mov
mov
in
fistps
inc
mov
mov
in
sahf
roll
push
mov
loop
fdivl
rcll
mov
xchg
pop
cmp
cmp
insb
mov
sahf
xchg
fwait
lods
adc
push
xchg
pushf
mov
aas
pop
and
aam
xchg
sub
adc
sub
add
dec
push
mov
xor
mov
das
mov
fdivp
in
fs
mov
sti
jns
mov
in
or
pop
out
int
in
inc
mov
scas
roll
fbld
jnp
jmp
rorl
incb
aam
rclb
adcl
cmpsl
jmp
movsb
arpl
pop
mov
add
rorl
lods
shrl
mov
mov
dec
incl
aam
push
je
xchg
cmp
mov
push
pop
test
hlt
shll
insl
shlb
push
or
lret
add
je
lods
push
ficompl
imul
les
notb
push
mov
sarl
xor
and
andb
shrb
std
loop
shll
pop
jo,pn
jae
fwait
hlt
rcrl
fistps
dec
push
int3
and
jno
popa
rcrl
cld
pop
mov
cli
jge
shl
in
adc
and
int
sub
xchg
bound
cwtl
shrl
ljmp
je
sarl
in
sbbb
mov
lcall
jae
adc
out
push
js
cmp
test
shr
mov
xor
idivl
sbb
xchg
xor
aad
mov
shll
cli
mov
repnz
inc
pop
fisubrs
adc
mov
push
mov
ret
dec
mov
and
sub
dec
sbb
ror
scas
imul
mov
or
or
pop
inc
push
movsl
rcr
cld
xor
int3
sti
rcll
roll
push
xor
std
fldcw
dec
out
push
and
adc
pop
and
xchg
les
repnz
cli
nop
adc
push
and
ret
pop
mov
lret
shrb
mov
sbb
popl
into
sahf
ja
push
lods
cmp
xchg
mov
fs
xor
leave
divb
dec
adc
arpl
xchg
mov
jl
mov
outsl
mov
mov
and
aas
repnz
aaa
lea
hlt
push
mov
inc
push
scas
sbb
repnz
bt
jo
lahf
mov
clc
lahf
xlat
xchg
mov
mov
adc
mov
adc
jg
shll
lcall
mov
pop
test
shll
mov
shrl
aaa
out
in
xor
roll
sbb
xchg
dec
dec
sarl
push
jl
sbb
jb
ljmp
sarl
push
popa
les
push
lret
fstpt
push
roll
adc
rcr
jl
push
sbb
dec
sarl
pop
test
popa
push
lock
pop
aas
aaa
test
repz
fcmovb
or
push
call
xor
int
jne
loop
sub
in
mov
push
mov
sub
fldenv
sbb
shll
push
inc
insl
sarl
push
mov
test
mov
sbb
addr16
add
pop
jle
jmp
nop
xchg
dec
mov
push
cmp
shrb
enter
popa
dec
inc
stos
mov
ds
hlt
xchg
dec
ja
adcb
test
aaa
jnp
lahf
fstl
pop
xor
inc
or
ret
sar
mov
add
insb
stos
loope
scas
lock
jae
and
cmp
rorl
sub
push
and
rcll
jge
icebp
cld
mov
dec
nop
xchg
mov
inc
fs
lock
xchg
inc
cltd
rcll
push
mov
sub
outsb
mov
sbb
mov
jecxz
out
fcompl
jg
jo
cmp
imul
mov
mov
pop
stc
shl
mov
sub
xchg
push
mov
aas
rcrl
mov
aam
mov
jno
mov
sub
je
mov
dec
fcompl
mov
loope
mov
das
adc
add
shrl
loopne
pop
mov
mov
push
int
lret
dec
ret
fdivrs
scas
jecxz
cs
and
mov
xchg
leave
shll
jle
xchg
cld
loopne
movsb
test
jl
sub
add
sub
xor
icebp
scas
sbb
shll
mov
xor
add
jb
jecxz
movsl
rcrl
adc
xchg
mov
leave
dec
cmp
inc
aas
iret
mov
hlt
mov
pop
pusha
jo
sub
movsb
js
xchg
lds
movsb
movsl
rorl
adc
xlat
popf
add
or
loopne
fwait
mov
jne
jmp
popf
mov
push
sbbl
mov
add
mov
jmp
scas
adc
mov
push
push
dec
jmp
fcmove
pushf
jns
adc
cwtl
shl
cli
mov
sar
mov
pop
adc
cmp
das
dec
xchg
xchg
lcall
rorl
ret
lahf
adc
add
test
xchg
stos
cmp
mov
inc
std
or
push
das
inc
push
xchg
jecxz
and
daa
cmpsl
cmp
mov
dec
lods
pop
push
loop
sub
int
fldl
jmp
sbb
shll
lods
push
rclb
mov
inc
ja
sub
pop
dec
stc
movb
fbstp
pop
push
sarl
push
lods
pop
popf
shll
dec
cmp
sbb
sbb
scas
test
roll
sti
addr16
iret
dec
xchg
xchg
test
enter
inc
sbb
push
gs
sar
arpl
sbb
test
pop
sar
or
iret
cmp
lea
adc
push
sbb
jne
scas
inc
nop
mov
add
leave
or
pop
push
fcmovnbe
or
lret
sub
iret
mov
rorl
aam
add
xchg
push
fmull
ret
push
inc
and
cs
iret
mov
sub
adcb
lret
test
mov
or
lret
insl
dec
push
sbb
adc
pop
xchg
ljmp
fbld
sub
mov
xchg
push
hlt
xor
loope
xchg
add
lea
inc
sub
pop
pusha
mov
mov
sbb
cmp
adc
sti
ret
loopne
xchg
xchg
cmp
cmp
shl
rcrl
movd
int3
in
dec
push
aam
push
shr
in
sub
into
xchg
add
inc
ds
sbb
fsubs
cmpsb
add
repnz
pop
dec
sbb
pop
dec
ret
mov
jno
xor
popf
into
rcr
iret
pop
fs
fmull
test
mov
loop
insl
shll
rcrb
mov
out
call
or
lock
shr
adc
dec
push
scas
stos
aam
inc
movsl
or
rcll
jl
ret
loop
push
mov
pop
inc
ror
ja
mov
cld
cmpsb
xchg
mov
shl
clc
fbld
mov
mov
call
shll
test
subl
dec
rorl
js
lods
push
jnp
aam
inc
sub
mov
push
rorl
incb
cli
in
add
imul
shll
pusha
xor
mov
jp
and
xorb
xchg
adc
bound
and
mov
rcll
sbb
adc
ret
or
int3
add
dec
add
ret
pusha
jmp
iret
jp
ljmp
enter
mul
mov
mov
adc
rcl
out
mov
pop
mull
pusha
or
mov
pop
pushf
xor
in
jmp
inc
cltd
loopne
mov
jnp
adc
sahf
sbb
hlt
push
sarl
and
xor
rclb
icebp
inc
ss
xchg
mov
dec
insb
test
mov
cmp
call
cmp
pop
jno
cld
xchg
aaa
out
jo
add
sub
out
fs
xor
rcll
pop
push
add
andl
lret
sar
cmpsl
insl
sub
and
push
mov
mov
mov
adc
pop
scas
sbb
lea
mov
sbb
aaa
loopne
mov
sub
fs
sbb
push
jb
cltd
or
stc
jl
adc
shll
subb
xor
movsl
test
add
pushf
mov
adcl
add
das
or
rorl
cwtl
mov
jbe
xchg
ror
mov
arpl
aas
inc
and
sub
pop
lea
cmp
sub
push
mov
js
shrl
push
add
repz
mov
loop
movsb
xor
ljmp
adc
push
out
cmp
sarl
pusha
lcall
mov
shrl
and
cmpb
xor
mov
cmpsl
cmc
push
mov
icebp
scas
or
and
shl
lock
hlt
cwtl
clc
test
xchg
sahf
pop
xchg
cmpsb
jb
shll
sub
xorb
push
add
shrb
mov
sti
rorl
out
lods
int
loopne
aam
push
adc
sub
divl
popa
rcl
jmp
or
inc
repz
mov
pop
decl
adcl
inc
ret
push
pop
mov
sarl
test
roll
cmpsb
cmp
adc
mov
xor
or
iret
fs
push
sub
or
sbb
adc
rcl
dec
push
mov
cli
sti
int
fcompl
movsb
xor
push
push
das
shll
std
out
jle
push
fcomp
neg
rorl
pop
repnz
jne
mov
stos
pop
add
lret
out
ficoms
jb
mov
sub
test
sar
gs
push
outsb
roll
push
std
test
dec
xlat
mov
and
addr16
mov
mov
call
cmp
or
push
push
xchg
sbb
and
loop
xchg
sub
and
jmp
scas
insb
push
aam
imul
sub
lea
xchg
test
scas
loope
xor
add
test
xlat
roll
jne
push
xor
mov
adc
mov
jns
jge
xchg
cmp
outsb
xor
or
rcrl
and
mov
xchg
fdiv
pop
and
loope
fs
mov
xchg
mov
js
push
jno
push
fsubs
sbb
orl
push
icebp
ret
push
jg
mov
int
xor
repz
shll
inc
mov
test
sbb
lret
shll
or
or
sub
mov
sbb
jg
fldcw
push
xchg
push
rcll
lock
mov
bound
shrb
mov
rcrl
sub
mov
jbe
roll
out
shlb
pop
push
xor
xchg
ret
mov
aas
jbe
push
sub
and
cmp
jmp
xor
push
pushf
insl
ret
ret
adcl
fnsave
inc
gs
pop
movsb
mov
ret
xchg
add
cmp
mov
xchg
aam
adc
jbe
adc
xchg
imul
cmp
mov
mov
mov
jb
out
popa
stc
pop
es
push
mov
cli
ret
sbb
mov
nop
or
add
call
push
sbb
fwait
and
sti
out
fbstp
out
rcll
repnz
jge
mov
pop
jae
rcrl
push
inc
test
xchg
shll
jp
shlb
push
inc
das
and
sub
sub
adc
mov
mov
push
js
imul
mov
xor
rclb
loopne
inc
jp
shll
mov
pop
repnz
rcll
jmp
mov
xchg
and
roll
or
pop
jmp
mov
movzbl
inc
sbb
sub
rorl
inc
xchg
enter
cld
pop
mov
inc
loope
sub
fisubrs
cs
mov
fs
pop
mov
add
rcrl
dec
mov
dec
jno
roll
and
sub
loopne
push
scas
mov
dec
and
hlt
into
pop
xchg
pop
jecxz
out
cwtl
dec
aam
adc
test
addr16
xor
pusha
lret
push
push
jl
add
fcoml
mov
or
add
and
stos
xchg
test
cmp
shll
jae
outsb
jnp
adc
ljmp
leave
and
movsl
repnz
fildl
je
jb
fwait
xchg
lock
dec
dec
loop
mov
repnz
push
gs
inc
jmp
pop
movsb
xor
clc
adc
cmpsl
jmp
and
adc
data16
mov
iret
jmp
ja
sbb
inc
jl
dec
pop
sarl
in
xchg
lds
cld
scas
sti
jmp
cmp
mov
and
mov
movsl
mov
jle
or
shr
insb
sub
xor
cmp
das
fwait
imul
rorl
ja
loopne
fisttpl
inc
xor
stos
add
lret
push
in
adcl
sbb
rorl
in
jnp
divl
lods
mov
push
rcrb
repz
inc
dec
xchg
lahf
mov
clc
lret
rcrl
inc
cmpl
rcr
rolb
mov
es
andb
daa
shll
mov
shrl
fcmovu
inc
sar
mov
adc
rcll
mov
out
rcl
jp
mov
xchg
pop
jns
sbb
dec
mov
adc
out
sbb
pop
cmp
dec
rcr
add
outsl
xchg
clc
mov
add
roll
jb
leave
jns
in
push
lods
outsl
mov
es
sub
sbb
push
test
insb
fstp
adc
repz
dec
jecxz
rcl
mov
testb
mov
lcall
or
jge
ret
dec
sbbb
mov
addb
cmp
pop
loop
pusha
shll
mov
pop
push
mov
enter
xchg
ficompl
sub
cmp
push
aad
mov
pop
xlat
xchg
bound
adc
cltd
stos
xsave
mov
pop
jmp
aad
cmp
inc
mov
and
and
in
jmp
or
fsub
xor
mov
addl
jnp
jecxz
lods
aam
jbe
pusha
adc
cmp
repnz
inc
cmp
sub
or
pop
cmpsl
movsb
mov
xor
clc
shrl
fucom
icebp
sbb
in
xchg
jo
mov
out
shrl
push
sub
lock
int3
add
out
rorl
out
aaa
dec
jg
shrl
cmpsb
mov
push
mov
sub
xor
or
jbe
sarl
cmp
and
push
cld
mov
add
jecxz
fbld
pusha
stos
aaa
push
jecxz
call
and
leave
int
add
iret
imul
cmp
jmp
pop
jns
dec
ds
xor
jbe
rcrl
shrl
rcll
xchg
into
xor
dec
sbb
shll
mov
sbb
jb
iret
mov
pop
mov
pop
cli
inc
and
out
jnp
inc
xor
roll
pop
test
int3
cmpsl
out
cmp
dec
push
pop
xor
xchg
mov
adc
outsl
pop
mov
mov
repz
xchg
loopne
dec
shrl
sub
mov
xchg
std
pop
fst
adc
fidivrs
rorl
sbb
inc
ljmp
sbb
cs
adcb
mov
hlt
repnz
rclb
and
mov
pusha
test
psrlq
clc
insb
lret
mov
lods
mov
or
in
add
jbe
xchg
sbb
jo
cmp
sub
mov
sub
je
sbb
pop
stos
mov
data16
mov
rcl
das
mov
pop
push
in
gs
xlat
pop
mov
in
andl
lahf
jo
int
push
lds
dec
xchg
leave
scas
adc
add
jne
jl
inc
pop
dec
add
cwtl
mov
push
jp
cmc
aaa
mov
ficoml
cmp
xchg
mov
popa
add
fwait
dec
pop
xlat
cs
xor
xchg
cmpsb
leave
scas
mov
movsl
rcll
dec
adc
iret
shll
pop
fwait
ds
lods
sub
mov
jle
aas
sbb
repnz
ficompl
xchg
xchg
mov
les
cmp
xor
pop
xchg
lret
mov
dec
cmp
xchg
pop
xchg
cmpsl
cmc
mov
jo
mov
add
and
xor
dec
jmp
push
in
stos
inc
dec
mov
repz
and
mov
push
or
sbb
lock
cmc
rorl
lods
or
add
jl
jecxz
mov
sub
test
jecxz
cmp
lods
sbb
setae
orb
stos
and
lods
and
xchg
or
pop
outsb
lret
lods
lcall
mov
gs
and
mov
enter
xchg
mov
mov
inc
imulb
mov
pop
cwtl
push
lcall
inc
add
shrl
xlat
push
mov
dec
mov
arpl
fidivrl
cmpsb
xor
push
je
sub
xchg
dec
jge
or
rorl
psubb
mov
rcr
pop
xchg
shl
out
pop
pop
push
xchg
repz
stos
pop
mov
shrl
movsb
cmp
add
std
mov
cmp
xchg
mov
adc
jl
rcll
sbb
jne
lds
rcll
stos
add
in
leave
roll
stc
pop
lret
je
sub
adc
mov
add
push
ror
lret
fadd
lods
push
push
rorl
mov
outsb
add
inc
add
sbb
cli
or
shrl
dec
mov
int
and
shr
daa
xor
inc
hlt
loop
mov
jo
fbstp
imul
out
push
in
xor
pop
lea
jmp
xchg
rcll
xor
or
mov
mov
adc
loop
or
cmp
push
cmp
insl
cmp
sub
pop
and
mov
mov
adcb
adc
into
bound
stos
repnz
repz
push
js
mov
mov
arpl
jg
and
icebp
iret
cld
mov
push
sar
xor
sub
lret
mov
daa
test
sarl
push
loopne
sbb
rorl
inc
inc
dec
jo
sar
out
ret
sti
mov
lcall
mov
popf
dec
roll
adc
or
sub
mov
mov
into
mov
jle
cmp
mov
push
shll
or
xor
out
loop
shrl
sub
mov
test
popf
dec
dec
std
lcall
sbb
mov
aam
push
roll
clc
dec
in
and
int3
repnz
into
rcl
jle
gs
aas
mov
mov
xor
mov
jb
dec
push
mov
pop
xchg
notb
cli
shrl
and
mov
mov
rcrl
dec
mov
inc
lds
shr
and
adc
sub
pop
mov
out
mov
jge
pop
sub
push
mov
pop
rcrl
inc
mov
cmpl
ja
cvtdq2ps
push
in
sbb
inc
arpl
mov
and
outsb
sahf
test
mov
dec
aaa
ja
xor
rcrb
mov
rcrl
mov
sahf
aaa
pop
lret
sbb
sbb
cmp
shll
adc
outsb
sarl
pushf
sub
fcompl
lods
sarl
xchg
xchg
lret
inc
xor
shll
pop
push
ja
aam
scas
mov
dec
mov
xor
push
push
pop
nop
pop
loope
add
das
addr16
test
fs
and
lock
sub
push
sub
push
insb
mov
std
dec
f2xm1
and
and
cmc
mov
xchg
ret
or
add
loopne
pop
xchg
push
push
pushf
shll
fstps
xchg
addr16
push
dec
ficoml
movsb
jl
aad
mov
popa
mov
or
xchg
movsl
lods
xchg
rcl
add
adcb
cmp
in
iret
xchg
enter
pop
sbb
push
scas
fsubrl
push
pop
cltd
sbb
ret
jns
repnz
jo
je
xchg
out
fwait
enter
cmp
push
and
popf
jecxz
inc
pop
sarl
fistps
outsb
sub
pop
cmpsl
or
test
shrl
cmpsb
and
icebp
cltd
ja
pop
mov
shlb
daa
dec
jg
mov
sub
sub
mov
mov
rorl
xchg
cmc
add
jecxz
push
movsb
fadd
xchg
mov
popf
pop
lahf
outsl
add
and
jbe
roll
rcll
shlb
xor
pop
inc
rcll
cmp
push
push
xchg
test
inc
pop
lods
sub
inc
in
mov
jne
add
out
gs
jecxz
sahf
sub
xor
call
xchg
inc
mov
arpl
int
push
out
stos
leave
push
test
rcrl
mov
je
arpl
shll
sbb
clc
mov
fsub
leave
mov
or
mov
out
lcall
outsl
adc
daa
aam
aaa
push
xor
dec
mov
decl
sarl
ficoms
cltd
fnstsw
shlb
divb
mov
nop
lcall
jle
es
mov
lret
popa
sub
ret
imul
push
or
aaa
mov
push
xor
adc
xchg
in
dec
jae
mov
clc
push
call
jbe
rcll
sub
sbb
sbb
mov
outsl
jno
dec
loop
mov
and
stos
xor
rcrl
sbb
jne
pop
push
ror
rcrl
out
aas
or
insb
jmp
outsl
pusha
shll
sbb
mov
mov
in
imul
loopne
popf
adc
fwait
insb
push
bound
cmp
repnz
xor
loopne
in
cs
inc
push
fs
fiaddl
test
rcrl
xor
or
fsubs
jne
int
jb
add
mov
popa
rorl
fildl
scas
sub
test
rcr
leavew
sbb
sbb
mov
push
out
mov
cmc
dec
lock
rcll
and
test
aaa
inc
xchg
cmc
stos
scas
jmp
repnz
movsl
mov
cmp
sbb
in
icebp
mov
sbb
xchg
shll
mov
imul
dec
lods
jmp
adc
cmp
insl
pop
mov
push
lods
sbb
pop
in
ret
sar
add
outsl
in
jmp
ror
dec
addr16
inc
aam
xor
inc
jbe
rorl
imul
pop
jmp
xor
lea
and
cmpb
jb
mov
loope
pop
pop
adcl
sbb
roll
js
pop
add
mov
lods
dec
bound
icebp
adc
cltd
js
out
jmp
in
pop
cld
push
mov
ror
jns
jge
xchg
stc
mov
dec
sbb
add
pop
mov
push
rcl
adc
push
push
mov
pop
out
mov
orl
sar
jo
repz
cmp
iret
or
mov
lahf
gs
icebp
and
xor
rcrb
aaa
shl
mov
ret
add
adc
jmp
scas
xchg
aam
je
adc
pushf
inc
ret
sahf
adc
call
xchg
sub
pop
xorb
inc
cltd
mov
fsubs
and
pusha
jl
pop
or
out
loope
mov
push
push
mov
mov
pop
lret
push
mov
xorl
out
pop
int
cmpb
scas
jl
jle
jbe
rcrl
pop
arpl
inc
jecxz
jg
popf
mov
shll
fldenv
push
mov
push
popa
aas
pop
xchg
lods
sarl
test
movsl
sar
es
add
gs
cmp
ror
and
push
xchg
pop
mov
mov
sbb
mov
add
xchg
repnz
icebp
pop
je
fwait
test
push
sarl
sub
les
push
shrl
push
popf
push
xorb
pop
nop
rcll
xor
mov
frstor
ljmp
and
shll
fdivl
cmp
ret
imul
aas
outsl
add
jno
in
cld
and
sub
ds
sub
fwait
pop
xchg
outsb
adc
cmpsl
add
or
sbb
cs
xchg
inc
sar
cmp
jge
rcr
rcrl
sbbb
or
add
or
cwtl
jbe
push
sub
lods
cmpsl
mov
clc
mov
mov
dec
add
call
cmp
mov
rcrb
xor
add
lcall
mov
scas
sub
aam
addl
mov
or
xchg
into
adc
aad
adc
cmpsb
pop
xor
shrl
ss
cmp
test
clc
pop
out
or
out
sub
inc
pushf
daa
pop
shll
adc
mov
push
shl
aad
sti
xchg
sbb
rcll
lds
jo
std
fcomps
cmp
dec
xor
adc
testb
test
nop
rcrl
mov
add
cmc
leave
ror
jno
push
bound
gs
lds
or
push
push
shl
imul
fildll
aad
sub
jae
jbe
scas
notb
inc
lods
insb
pushl
push
or
mov
subb
mov
ljmp
loop
cmp
and
mov
out
das
imul
and
js
sbb
orb
in
dec
outsl
arpl
xchg
pusha
ss
xlat
pop
push
divl
mov
push
imul
cltd
jo
and
lcall
mov
das
and
lahf
in
movsb
push
mov
inc
nop
jecxz
xchg
rclb
loope
rcr
cmp
fmuls
cmc
pop
in
hlt
ja
jg
pop
xchg
dec
movsl
sub
out
jns
inc
inc
test
jne
rcr
arpl
sbb
or
mov
sbb
insl
out
inc
add
push
rolb
test
or
mov
aaa
adc
jmp
or
imul
mov
push
ljmp
jle
lret
mov
adc
push
mov
or
sbb
or
shll
insl
mov
popa
call
jp
cmc
hlt
cmpl
daa
jmp
andb
jmp
jecxz
rorl
lds
aam
out
shll
inc
mov
in
pop
icebp
shrl
pop
dec
loopne
ret
data16
or
jle
cmpb
xchg
cmp
xor
pushf
xchg
mov
sbb
cmp
roll
mov
int3
jnp
lret
rorl
ds
lds
sub
and
stos
es
gs
pop
pop
sbb
adc
scas
mov
jecxz
cmp
rorl
fs
pop
push
rcrl
push
adc
pop
mov
or
aas
inc
dec
push
jmp
es
inc
sarl
loop
sahf
fldenv
push
push
jp
pop
or
lea
rcrb
ficoms
adc
popf
or
mov
push
rcll
push
inc
jl
pushf
dec
mov
pop
lret
or
jecxz
scas
push
xor
cmc
mov
test
addl
dec
xlat
fiaddl
xchg
push
jno
loope
comiss
mov
jbe
fs
xchg
dec
pop
shll
sub
fcmovu
mov
rcr
rclb
dec
ror
rcrl
pop
dec
mov
es
lcall
in
fcom
add
flds
push
cvtdq2ps
shll
repz
or
sarl
into
mov
popa
shl
mov
das
aam
mov
movsl
xor
add
ss
cmp
push
cwtl
insb
pop
push
stc
mov
sub
cmp
mov
mov
sarl
enter
out
out
shlb
and
xchg
rorl
lock
shll
into
sahf
jnp
popf
mov
push
sbb
xchg
xor
and
shrl
cmpsl
or
aas
ficompl
push
mov
jmp
ja
lret
shrl
push
dec
sbb
fildl
push
nop
insb
cmp
push
mov
push
xchg
cwtl
or
push
or
lahf
and
int3
sub
test
call
rorl
sbb
adcb
adcl
cmp
sbb
xchg
rorl
mov
lods
push
pop
push
pop
sub
add
push
out
inc
testl
fs
rolb
rcrl
inc
pop
jmp
call
fsubrl
inc
repnz
and
xchg
mov
sarl
fstl
pop
sbb
aam
dec
cmp
clc
mov
cmc
push
mov
pop
andl
rorl
push
add
sti
adc
mov
movsb
lods
enter
sub
std
xor
pop
cmp
movsb
dec
in
lcall
mov
nop
push
lahf
jp
add
jbe
leave
adc
sarl
lret
push
pop
sub
loope
sarl
sub
ss
in
shll
adc
jno
jae
mov
gs
push
in
jp
or
mov
inc
stc
sub
push
or
loop
push
popf
xchg
pop
mov
shl
cmp
add
add
ds
mov
dec
or
ljmp
mov
and
out
rolb
jecxz
jge
pop
dec
rorl
sub
or
cmp
shrl
jecxz,pn
xchg
and
rcrl
int3
outsb
or
aas
mov
shl
push
xchg
fsubrs
push
dec
or
and
adc
mov
icebp
jg
cmpsl
in
and
xor
push
in
xchg
add
mov
or
fst
xor
cmpb
outsb
out
push
stc
push
adc
das
mov
inc
cwtl
test
pop
rorl
pushf
xor
or
in
push
shll
xchg
push
or
jle
in
adc
cmpsl
roll
mov
das
fbstp
sub
sub
mov
jl
andl
in
jno
add
dec
imul
or
sub
addl
repnz
pop
dec
mov
shl
ljmp
shll
mov
jne
and
andb
stos
shl
loop
inc
rcrl
push
aam
shlb
ret
adc
xor
xor
stos
push
arpl
push
add
mov
adc
mov
test
xchg
pop
mov
push
jno
jge
fisubl
mov
inc
sar
and
lea
test
rcll
mov
jmp
mov
scas
cmpsb
xchg
push
in
lret
in
rcrl
mov
inc
jae
push
mov
mov
in
and
sahf
addr16
inc
pushf
rorl
adc
sbb
in
sub
test
shrb
adc
scas
je
jl
mov
xor
movsl
outsl
out
in
sub
cmp
add
xor
loope
push
pop
jnp
les
xchg
and
adcl
ja
xchg
mov
dec
shrl
xchg
inc
mov
push
push
stc
or
rcrl
aad
scas
xor
ja
adcb
outsl
add
hlt
add
loopne
movsb
out
rcll
dec
out
iret
repnz
cmp
ficompl
rcr
jl
mov
popa
and
lods
inc
shrl
aad
push
movsl
lret
int
roll
xor
jp
adc
ss
imul
insl
mov
out
cwtl
stc
xlat
dec
sub
data16
cld
dec
xchg
aam
gs
adc
or
cmp
inc
sub
les
pop
es
add
sbb
repz
cltd
int
shll
cmp
add
in
adc
out
add
and
mov
jmp
jp
leave
shr
mov
mov
enter
repz
lea
jno
sbb
sar
inc
gs
ds
nop
push
cmc
loopne
sub
or
jmp
pop
sar
cmp
jle
mov
sub
lret
mov
aam
roll
sub
inc
rcll
stos
out
rcl
or
pop
mov
sbb
xor
aaa
lods
int3
push
push
sub
ljmp
mov
gs
rcl
xor
xor
push
movsl
mov
mov
mov
das
and
and
push
sub
push
repz
test
daa
fwait
arpl
test
mov
sarl
aaa
add
repz
adc
xor
rorb
pop
mov
cld
shrl
sbb
shlb
arpl
xchg
push
inc
jbe
std
in
icebp
and
pop
fcoml
add
clc
and
rcrl
stos
xchg
in
pop
jne
lcall
add
ret
dec
leave
mov
inc
push
jnp
dec
lret
mov
ficoml
push
cli
idivb
mov
or
xor
push
loopne
pop
push
decl
xchg
rcll
cmc
sbb
pop
imul
loop
lods
shl
and
sbb
mov
js
imul
test
lea
mov
daa
mov
mov
jg
aaa
nop
rcll
imul
test
adc
scas
and
daa
roll
jle
cmpsb
movsb
cmp
das
or
and
shlb
mov
inc
xchg
in
jmp
mov
xchg
imul
lret
cmpsl
jmp
push
or
sbb
cwtl
fwait
push
xchg
shll
jg
sub
in
mov
cmp
sub
dec
mov
mov
push
fwait
cld
push
or
lret
mov
int
jo
xchg
out
push
push
shrl
idivl
fcoml
pmaxsw
xchg
ficoml
stos
sub
call
rcr
mov
cmp
jle
pop
fwait
popa
mov
arpl
mov
sub
push
outsl
loopne
aad
test
enter
in
or
andl
cmp
mov
ds
fbstp
dec
mov
push
push
lcall
mov
sahf
adc
inc
scas
in
add
xlat
adc
mov
sbb
stc
stos
mov
pop
adc
fcmovb
cli
icebp
lahf
mov
inc
fnsave
fiadds
ljmp
dec
jmp
lds
sub
cltd
xlat
out
sar
mov
pop
xor
out
and
in
jge
inc
mov
rorl
fistl
xor
aam
push
mov
pop
ss
dec
push
outsb
cmp
sbb
inc
pop
push
iret
sarl
dec
pop
mov
out
test
push
fwait
in
or
inc
ds
push
sbb
rcrb
aam
pop
mov
add
pop
aad
cli
mov
shl
lea
repz
adc
mov
pushf
mov
xchg
push
or
mov
sbb
mov
std
mov
rcll
jge
clc
mov
into
icebp
pop
sbbl
loope
cwtl
jecxz
xor
ret
mov
fs
lret
xor
mov
sub
mov
leave
sti
rcll
shll
sub
in
dec
jmp
scas
scas
test
rorb
repnz
inc
dec
aam
push
cmp
xchg
inc
mov
fidivrl
std
jl
pop
test
mov
repz
and
dec
mov
cs
cmp
ret
mov
jo
das
and
shll
pop
push
cmp
jnp
sub
aas
andl
cmc
lcall
subb
aad
das
lods
xor
or
in
jo
sarl
xor
test
adc
insl
scas
mov
imul
mov
mov
loope
pop
cmp
dec
iret
cmp
shl
outsb
xchg
jno
dec
imul
mov
cli
ds
mov
roll
push
fists
or
cmp
lahf
aam
mov
cmp
push
cmp
sub
or
shrl
mov
rcll
stos
xor
cmpsb
or
fs
xchg
jns
pop
ss
gs
lods
addr16
sub
adc
mov
flds
shl
loope
testl
rolb
shrl
cmp
and
mov
add
pop
dec
and
test
inc
sti
insb
add
jo
lds
arpl
sub
cmpsb
in
and
sbb
jle
scas
xchg
rorl
clc
out
add
das
cmc
sarb
into
shll
add
push
popa
frstor
xor
mov
mov
inc
push
fscale
mov
cmp
pop
sbb
lods
inc
rcll
fwait
ret
stos
ljmp
ret
pushf
aas
mov
push
leave
pop
jnp
push
mov
mov
fistl
mov
mov
testb
adc
pushf
jne
test
push
jae
sub
push
ljmp
mov
sbb
ret
dec
outsl
enter
push
or
adc
rcl
and
adc
lods
mov
cmc
pushf
hlt
aas
or
data16
fldenv
inc
pop
out
fimull
jmp
xlat
ret
xchg
and
inc
clc
iret
ret
loopne
aam
sub
daa
shll
xchg
cmp
shr
mov
lods
inc
sti
and
sarl
push
in
jnp
pop
outsb
pop
fdivl
in
shl
inc
mov
vmread
cmp
rcrl
das
shrl
in
fdivp
fs
sarl
test
or
std
insb
fcomp
pop
mov
sub
test
rcrb
push
fucom
out
jmp
mov
jo
repz
out
out
in
push
jle
fdiv
sub
adc
lahf
adc
test
aaa
push
xchg
sti
stos
icebp
lods
dec
rorl
fstl
dec
xchg
aam
xor
int
jle
shl
cs
mov
push
inc
call
rorl
fbstp
jmp
insl
or
adc
xlat
jp
je
subl
cltd
sar
inc
add
aad
jmp
sarl
jo
adc
aam
aam
call
in
sub
jns
imul
xlat
into
shrl
leave
fdivl
and
fildl
jb
icebp
sub
lock
in
mov
stos
push
sbb
je
ret
xor
lods
imul
pop
shrl
lds
rcrl
mov
pop
fcmovu
out
push
xor
jge
inc
es
dec
xor
sarl
stos
pop
test
adcb
cltd
ret
rclb
pop
nop
fs
test
out
aad
xchg
lea
cltd
rol
and
mov
lret
pop
push
xor
rolb
add
adc
mov
aam
mov
mov
adc
iret
or
or
inc
mull
jle
pop
cwtl
mov
stos
sub
aaa
push
mov
mov
sub
push
mov
pop
and
xchg
dec
cs
mov
jo
mov
testl
pop
xor
push
dec
jns
rol
push
insb
ss
jo
xor
and
fstl
xchg
push
and
add
loopne
stos
push
cmp
push
fisubrs
xchg
jl
iret
cmpsl
mov
popa
sub
lods
push
loop
ljmp
out
cmp
add
clc
jbe
dec
leave
jp
ljmp
outsb
pop
out
mov
das
push
sub
je
imul
repnz
bound
or
and
dec
mov
push
mov
pusha
or
pop
movsl
mov
push
scas
jo
xor
shrl
cmpsl
les
adc
mov
jle
and
sbb
sti
ja
inc
dec
ljmp
cmp
repz
test
cld
rorl
pop
push
in
int
hlt
adc
ret
mov
shll
or
dec
mov
sub
push
sahf
shll
mov
push
mulb
addl
or
or
bound
test
sar
in
and
lahf
test
jl
testl
inc
mov
push
xor
scas
arpl
mov
pop
adc
cs
sarl
test
test
out
xor
cmc
arpl
imul
push
subb
xchg
lret
clc
je
cmpsl
sbb
mov
rcrl
ja
mov
mov
loop
fldenv
sbb
or
inc
shll
push
push
dec
add
mov
dec
inc
cmp
jge
push
rol
aas
xchg
mov
rcrl
mov
xor
cli
aas
push
dec
and
pop
lret
adc
addr16
xchg
lds
fsubrl
mov
inc
add
jae
fisttpl
shrl
cmp
incl
dec
rorl
push
and
rcrb
fsubr
jg
mov
dec
outsl
mov
ret
and
fs
rorl
scas
cld
mov
mov
movsb
dec
shll
sub
mov
gs
jno
enter
mov
adc
testb
dec
mov
adc
xlat
outsb
enter
test
dec
int
dec
jecxz
lods
mov
in
shr
sbb
outsb
mov
cmp
insb
rcrl
mov
jne
mov
shlb
rcrl
lea
shrl
mov
out
out
test
jg
adc
lock
push
lods
push
jl
jns
mov
test
push
mov
fstl
jmp
dec
adc
fdivrs
mov
jg
movsl
fxch
push
push
mov
sbb
shrb
sub
pop
push
shrl
in
add
inc
or
bound
push
xor
fldcw
pop
cmpsb
sub
shll
add
addr16
sbb
mov
ret
decb
lahf
call
push
icebp
adcl
notl
rol
inc
sub
xor
rcl
jmp
adc
dec
cmc
adc
aam
xchg
xchg
jbe
pop
jno
in
stos
ds
cmpsl
into
lret
addl
mov
and
cmpsb
stc
jp
jb
mov
je
push
hlt
inc
cli
cmpsb
outsb
jne
jl
mov
roll
xlat
mov
mov
inc
adc
xchg
and
jg
add
mov
pop
pop
cmp
sbb
push
mov
popf
decb
pop
and
fwait
sub
inc
rcll
dec
jb
rclb
dec
xchg
xor
inc
shrl
icebp
cmpsb
mov
shll
jl
sahf
mov
je
jno
push
cmpl
rolb
aam
inc
ss
push
pop
mov
mov
pop
scas
cmp
push
fisubrs
fwait
ud2
fstl
roll
push
pushf
aaa
movsb
xchg
movsl
jno
rcll
stos
mov
shll
xchg
xchg
rcl
xchg
test
dec
or
push
aas
pop
int3
mov
dec
loope
shll
mov
fs
xchg
adc
in
shrl
cmp
int3
push
push
add
int
mov
dec
fdivrl
stc
and
mov
pop
xchg
shrb
add
loopne
mov
sub
lret
fnstcw
dec
jp
pop
mov
test
jl
xchg
shrl
loope
push
popa
lods
adcb
adc
pop
add
mov
gs
leave
movb
jno
iret
aad
rcrb
in
sbb
xorb
popf
push
add
fcmovu
repnz
push
je
data16
or
call
arpl
jmp
les
andb
jg
popf
loop
roll
and
pop
incb
hlt
adc
cmpsl
pop
outsl
shll
mov
fldl
jmp
ja
or
shll
pop
fimull
xchg
jno
testl
das
cmc
inc
adcb
adc
mov
mov
or
das
xor
test
pop
or
or
xor
aaa
mov
dec
push
subb
inc
outsb
fstl
add
jb
movsl
xchg
shrl
dec
inc
pop
es
loopne
add
xchg
repz
and
data16
rcl
and
in
jp
mov
cs
addl
pop
inc
cld
sbb
adc
ret
rorl
test
scas
call
pop
cmpsb
cmpsl
xchg
jnp
push
scas
mov
clc
movsb
mov
jle
adc
xchg
loop
push
and
xchg
lds
rcrb
inc
dec
iret
sti
and
inc
sbb
jmp
mov
push
shrl
ljmp
sub
xchg
mov
xchg
or
imul
nop
addl
leave
add
dec
push
jmp
sub
ljmp
and
xor
push
adc
push
dec
scas
cmpsb
xchg
shll
inc
jae
cli
testb
push
out
test
or
mov
int3
sbb
popf
shll
adc
pop
push
loop
sub
add
xor
cmpsl
hlt
sbb
sbb
enter
popa
or
lds
push
shlb
fidivs
mov
roll
adc
cmp
and
aad
icebp
lcall
push
jecxz
lret
and
pop
in
rcrl
shll
mov
in
inc
loop
inc
das
sub
push
popa
mov
js
xchg
popl
rcll
insb
loop
and
lds
adc
lods
jg
shrl
je
dec
xor
adc
es
popf
push
adc
fisttpll
xchg
jl
mov
jo
movsb
popa
out
jb
push
roll
jmp
push
dec
les
adc
test
or
stos
cmpsb
lods
shrl
mov
sti
mov
stos
mov
shlb
xor
sbb
mov
dec
std
ret
out
outsl
sbb
fnstsw
call
sarl
out
adc
jge
inc
ret
adc
test
dec
imul
aam
sub
mov
imul
into
popa
push
dec
inc
loopne
sarl
mov
aas
inc
and
andb
jb
mov
sub
pop
out
sbb
mov
in
arpl
add
call
mov
mov
pop
loop
aad
aam
ret
or
leave
out
lahf
stos
add
sbb
shll
dec
shll
fisttpll
adc
jno
insb
mov
fsts
sbb
inc
cmpsb
or
or
repnz
dec
sahf
sbb
lods
push
shll
sub
rolb
or
add
imul
mov
jl
insb
repz
rclb
adc
jno
pop
mov
sub
ret
xor
add
mov
outsb
repnz
mov
mov
jbe
push
enter
pop
into
adc
sti
arpl
out
imul
rcrb
push
push
sub
mov
push
cmpsl
push
rcl
xchg
and
dec
sub
aam
and
repz
sub
sbb
loopne
xchg
or
js
jnp
andl
rcll
mov
mov
or
push
cmpsb
mov
xchg
repz
mov
sti
repz
pop
inc
cmp
rorl
iret
jo
scas
pop
mov
movsl
xchg
cwtl
jecxz
lods
sub
bound
aas
ja
subb
movl
push
cmp
ret
dec
jecxz
int
jno
cs
push
test
insb
roll
xor
shr
lahf
adc
nop
jmp
jmp
ja
or
mov
add
repz
das
jno
adc
or
push
popa
ds
cmp
cmc
fcmovbe
sbb
adc
xchg
jns
mov
or
rcrb
sub
ret
fldl
fdivrl
shrl
adc
stc
test
sti
dec
adcb
jp
inc
pushf
inc
inc
stos
mov
call
xchg
ss
rol
sbb
cmpsb
jge
sub
shll
jae
popa
shll
pop
negl
push
dec
stos
rolb
push
loopne
mov
mov
dec
add
rcll
lret
roll
or
sbb
jg
test
je
shll
inc
movsl
cmpsb
jle
jae
sub
or
imul
clc
or
ror
xchg
gs
lcall
lods
ljmp
repz
xor
or
adc
push
and
scas
std
fildll
sub
ficoms
adc
insl
xchg
movsl
shlb
iret
stos
nop
add
imul
leave
scas
sti
cmpsl
push
inc
pop
iret
or
repz
std
and
push
cmp
jno
int3
inc
xor
aad
dec
xchg
pop
or
push
inc
scas
repnz
pop
mov
push
sbb
and
push
jno
testl
mov
movsb
xchg
mov
hlt
xchg
insb
mov
push
jo
aad
sbb
rorl
jecxz
jge
push
cmp
pusha
xor
roll
mov
mov
adc
xchg
push
std
pop
shll
push
popa
lcall
mov
scas
pop
and
sbb
in
mov
enter
test
jns
mov
mov
mov
jle
roll
repnz
ds
cmpsb
dec
push
fwait
rclb
mov
jmp
mov
fildl
jl
jns
daa
ljmp
rorl
jb
sbb
and
mov
push
adc
push
mov
lock
addr16
bound
pop
push
sbb
xchg
mov
stos
dec
mulb
repnz
cmp
roll
mov
rcr
adc
mov
push
test
sarl
test
je
stos
dec
mov
test
mov
div
int
rorl
int
push
fsincos
popa
ret
cmpsl
add
and
ljmp
gs
rcrl
and
fiadds
push
xchg
cwtl
mov
test
lahf
into
lahf
pop
insl
lcall
popf
repz
in
and
subb
roll
mov
jl
fwait
inc
cmp
cltd
das
mov
cmpsl
not
int3
inc
lcall
xor
dec
pop
jl
sbb
rcll
sarl
lea
jge
xchg
rcll
fidivl
dec
into
mov
pushf
shrl
inc
outsl
pop
jp
jecxz
shll
adc
fdivr
cs
jle
jge
in
pop
roll
lods
sarb
jnp
enter
add
rcll
test
movl
ja
rol
pop
mov
inc
daa
rol
mov
push
xchg
mov
sbb
insb
aaa
xchg
xor
int3
mov
pushf
push
into
push
rcrl
gs
mov
ret
lahf
addr16
movsl
cwtl
dec
sub
rorl
mov
stos
mov
push
daa
pop
mov
popf
mov
lods
mov
and
pop
lret
dec
rorl
push
sub
in
mov
push
es
insb
mov
int
mov
loope
scas
mov
mov
and
xchg
push
xchg
scas
cli
scas
add
loopne
push
imul
out
addr16
adc
mov
popa
sbb
shll
imul
movsl
shll
and
push
sbb
lcall
iret
xchg
add
sti
outsl
cwtl
inc
mov
rorl
mov
in
out
xchg
mov
xchg
jmp
inc
adc
enter
in
cmp
mov
sahf
xchg
es
jmp
popf
rorl
jle
rcrl
pop
xor
in
cmpsl
rcrl
jns
jb
dec
mov
pop
xor
and
sti
mov
ja
cmp
shll
push
dec
jnp
dec
repz
push
mov
rorl
jle
cmc
sub
orb
testl
sub
bound
adc
sarl
in
fs
sbb
inc
insl
ret
dec
scas
dec
or
mov
and
scas
test
cmp
and
and
dec
inc
sar
add
out
negl
lret
rcrl
lahf
int
rorb
movb
push
mov
pop
lret
lea
push
add
cltd
test
in
shll
mov
dec
push
push
clc
shl
test
outsb
cmp
lret
rcr
cmpsb
mov
data16
adc
scas
jmp
xchg
cmp
clc
jmp
sub
shr
mov
pop
movsb
repz
pop
fst
or
test
add
aas
jmp
push
mov
xor
mov
roll
ret
sahf
cmp
xchg
out
add
mov
ds
nop
roll
cmp
addr16
cmpl
lcall
push
sub
adc
and
mov
arpl
inc
aad
insl
fnsave
div
inc
or
jecxz
dec
call
jno
insb
mov
cmpsl
shr
sbb
imul
sub
pushf
rcrb
mov
je
aad
nop
sarl
push
mov
shll
inc
mov
sahf
pusha
mov
add
iret
call
aaa
mov
ljmp
cmp
scas
cmp
outsl
lcall
push
fsub
shll
cmp
xor
dec
in
lods
cs
roll
das
xchg
enter
sahf
mov
sbb
fcoms
cs
sub
mov
jg
popf
dec
jecxz
imul
mov
movsb
jns
lret
cld
cmc
test
jae
roll
aas
gs
into
in
mov
aad
shl
out
std
mov
push
lock
pop
leave
bound
or
aam
rcrl
je
mov
add
xchg
xor
sbb
pop
jle
pusha
fidivl
push
ljmp
dec
test
mov
iret
insl
mov
sbb
rol
aad
dec
ss
ret
lret
add
cmp
stos
dec
add
popa
aam
roll
push
in
push
push
rclb
pop
ror
ss
roll
dec
cmpsl
mov
pop
lcall
shll
jo
stc
and
or
call
js
sbb
adc
rol
inc
cmp
add
test
int3
lock
dec
jge,pt
rol
iret
mov
and
ret
mov
xlat
clc
cmp
jge
out
aam
sub
push
test
mov
push
shll
sub
lods
jae
pop
xchg
shl
cmp
fcmovnbe
out
add
adc
movsb
in
aam
inc
mov
push
mov
lahf
sbb
jnp
sarl
mov
push
mov
push
outsl
fstpl
scas
repz
xor
inc
scas
cmp
cmp
push
jmp
int
xchg
fstpt
stos
pushf
mov
pop
pop
outsl
rorl
xchg
xor
rorl
dec
mov
cli
add
xor
cmp
mov
pop
add
test
xchg
pop
inc
cwtl
loope
shll
pop
das
mov
lahf
ret
mov
leave
lret
cwtl
lahf
ss
sub
test
cmpsl
push
movsb
fsubl
scas
int
push
jno
add
sti
stos
sub
mov
and
clc
xchg
sub
andl
popa
sub
loopne
sarl
jg
into
rorl
addr16
out
out
push
aaa
je
shrl
dec
sub
shll
orl
cs
movsl
mov
mov
repz
push
shll
iret
or
fcomps
lcall
sub
lock
aas
or
pop
repnz
fstps
daa
loopne
cmp
das
push
les
mov
mov
bound
pop
mov
mov
xor
shll
or
scas
dec
rclb
mov
inc
ja
rorl
icebp
ljmp
pop
repz
ret
incb
cs
lcall
rcr
sahf
adc
jmp
mov
cmp
add
sub
sbbb
cmp
rcll
shl
addb
sarl
stos
xchg
add
cmpsb
or
jmp
xchg
and
shrl
addr16
lods
repz
pop
pop
sub
xchg
fildl
xchg
xchg
lcall
xchg
rorb
xor
push
pushf
mov
xchg
mov
pop
rol
es
fiadds
push
decl
fsubrs
arpl
jg
cmpsb
jae
sub
shrl
xchg
scas
push
push
mov
rorb
pop
dec
mov
or
adc
sarb
repz
sti
xchg
shll
cmp
or
cmc
std
in
and
adc
cmp
shl
xchg
cltd
jne
loop
jb
add
ret
leave
call
pop
ljmp
or
push
rcrl
in
inc
scas
fcoml
fwait
mov
int
rcll
add
push
lcall
test
or
push
sbb
push
cli
sub
mov
mov
repnz
dec
je
mov
cmp
mov
hlt
negl
push
inc
jge
lea
adc
dec
dec
out
pop
jbe
adc
shll
aas
roll
push
daa
ljmp
xchg
sub
sarl
in
mov
push
and
or
aam
sahf
outsb
jp
mov
out
ret
adc
xchg
mov
sbbb
mov
adc
mov
xor
andb
int3
mov
fwait
push
into
fstpt
push
out
jns
add
aaa
data16
ficoml
pslld
sbb
lret
mov
jo
pop
push
out
lock
push
cld
repz
movsl
aam
dec
pushf
bound
pop
aad
mov
sbb
ljmp
stos
xor
mov
mov
pop
cmc
xor
mov
mov
in
pop
iret
mov
sar
cmp
push
out
insl
dec
rcll
dec
or
dec
cmpsl
cli
scas
test
dec
into
call
lock
add
xchg
push
and
push
fstpt
jbe
stos
jmp
shll
clc
dec
out
iret
aam
dec
and
xchg
inc
dec
out
in
mov
or
dec
inc
bound
pop
and
call
ret
stos
jne
mov
testb
call
sarl
sbb
fisubrs
ret
mov
shrb
test
fmul
and
roll
and
rcrl
out
aas
je
sbb
shll
jge
xchg
mov
ds
mov
mov
xchg
pop
xor
mov
sbb
sbb
gs
daa
fisttpl
dec
shll
mov
jnp
sbb
aam
push
jbe
ret
sbb
int3
xor
rolb
mov
mov
pop
mov
or
imul
sbb
pop
insb
push
mov
sar
adc
pushf
jns
roll
xchg
inc
xchg
pop
aam
xor
sub
sub
xchg
add
dec
shl
sbb
enter
pop
shr
pop
loope
sub
fistps
or
push
inc
lret
sub
imul
mov
sbb
xor
mov
out
cltd
mov
and
pop
xchg
movsb
xchg
sar
add
dec
rcl
push
dec
in
ret
fsts
sarl
and
mov
movsb
jl
aaa
xchg
mov
popa
fistps
lods
rep
push
sarl
js
movsl
pop
and
push
sarl
xchg
rcrb
sub
push
pop
dec
xor
jbe
roll
aas
movsb
cmc
fcmovbe
je
or
fwait
mov
xchg
xchg
cmp
dec
es
add
rcrl
mov
inc
shll
mulb
cmpsl
sbb
popa
rcll
adc
ret
hlt
cltd
push
jo
add
pop
pop
ljmp
stos
sbb
add
cmp
pushf
popf
shll
pop
mov
fcmovnbe
mov
jo
or
push
dec
lahf
xor
sub
daa
mov
cmp
and
ret
jb
sarl
inc
filds
rorl
stos
and
or
jge
push
mov
cmp
lods
data16
rcll
mov
inc
lods
add
rcr
notl
test
rcl
fildl
mov
lods
pop
shr
mov
es
jl
pop
xor
mov
push
arpl
push
in
mov
addb
mov
scas
mov
rcrl
clc
scas
jge
or
or
fstl
sar
and
rorb
lea
xchg
sbb
xchg
xchg
movsb
fcoms
cmp
sbb
sbb
rcll
inc
adc
jne
mov
sub
aam
push
call
push
lcall
xchg
adc
xor
or
xchg
xlat
faddl
in
push
rorl
clc
aad
adc
not
xor
rorl
or
mov
movsb
mull
outsl
data16
or
rcll
adc
jnp
mov
fdivrl
cmp
lahf
xchg
hlt
imul
xchg
fcomps
xchg
or
call
cli
mov
mov
xlat
push
in
jg
mov
test
mov
or
daa
shll
mov
mov
adc
rcrl
pop
in
inc
xor
in
push
sbb
jns
lods
xchg
sub
rcrl
pop
imul
push
mov
imul
dec
icebp
or
jg
roll
mov
movsb
and
sbb
mov
adc
jo
xchg
shl
shl
xchg
and
cmpsl
xlat
mov
push
mov
mov
dec
inc
push
xchg
sarl
xor
shrl
sbb
fdivl
or
enter
cld
mov
mov
aas
mov
das
mov
roll
insb
divb
filds
daa
push
dec
jmp
shl
insl
sbb
jecxz
xchg
jp
adc
into
inc
or
ret
pop
add
mov
and
add
xchg
jbe
popa
loop
push
aam
lds
ret
jecxz
dec
subl
inc
sarl
mov
add
sbb
in
imul
pop
lock
dec
cli
push
shll
sbb
or
hlt
add
shl
jb
dec
pusha
add
aam
and
mov
out
fldt
ljmp
scas
ds
mov
dec
add
or
mov
adc
mov
xchg
pop
lret
jge
in
jne
xor
movsb
mov
jnp
nop
shl
sahf
jl
jecxz
mov
rorl
xor
rorb
lods
aam
mov
and
insb
xorb
adc
mov
inc
pushf
scas
xor
pop
sarl
dec
aad
add
xchg
push
and
jnp
xchg
into
mov
mov
dec
and
push
and
pop
aaa
scas
or
scas
xchg
push
fs
lock
mov
lret
cmc
add
mov
mov
adcl
lds
ret
aas
outsl
and
jae
dec
xchg
daa
scas
mov
pop
loopne
and
mov
lods
fnstcw
mov
xor
jl
loop
jns
jmpw
rcrb
lods
leave
push
mov
cwtl
movsl
xchg
sbb
add
es
sarb
xor
sarl
dec
adc
pop
loope
roll
cwtl
in
sub
jne
mov
jl
inc
cmc
into
or
sarb
mov
push
mov
cmp
and
xor
ljmp
movsb
sbb
cltd
lock
push
inc
pop
shll
out
xchg
mov
mov
js
and
stos
shr
sub
ja
sti
and
ljmp
lock
and
mov
repnz
xchg
pop
cmc
jecxz
xchg
adc
push
movsb
xchg
inc
xchg
push
or
push
lahf
movsb
mov
dec
test
dec
pop
pushl
cltd
xor
shll
dec
inc
fiadds
stos
shl
mov
or
xor
jp
jo
mov
sub
cmp
or
pop
imul
adc
pop
rol
dec
push
push
jb
fstpl
mov
aam
shr
fmull
sbbl
pop
clc
mov
rcr
push
mov
rcll
mov
fwait
sbb
sti
addr16
or
xchg
jl
xchg
pop
fisubrl
rcrl
add
dec
push
push
lods
xor
adc
and
pop
test
outsl
mov
std
mov
jecxz
shll
xlat
pmaxub
push
adc
push
jo
xchg
jne
mov
nop
or
lahf
leave
ror
ficoml
xchg
inc
lret
mov
mov
pop
push
mov
sbb
xchg
jp
fimull
jo
jae
mov
not
lods
rorl
push
push
pop
mov
pusha
mov
rorl
sbb
mov
xchg
jecxz
cltd
inc
or
sub
sbb
adcl
xor
lods
rep
lea
xchg
or
push
mov
sub
xchg
push
dec
inc
add
mov
adc
and
daa
cmp
stos
lcall
jecxz,pn
dec
mov
and
jl
in
lock
rol
outsb
mov
push
clc
inc
xchg
xchg
popl
mov
sbb
hlt
fst
jo
loop
shl
fimull
jg
pop
scas
mov
xchg
push
xor
sub
sbb
push
cmp
jns
push
out
int
ljmp
push
fstl
sbb
out
adc
jo
std
shr
out
cmp
sbb
bound
push
in
test
push
mov
sub
adc
or
sub
or
jo
jae
fs
stos
repz
adc
cmp
pushf
rorl
mov
insl
shl
js
call
frstor
lret
stos
aam
adc
adc
add
daa
jmp
push
xor
leave
aam
jg
jbe
sub
in
lds
imul
mov
dec
inc
jecxz
mov
push
and
lods
adc
rcll
fidivrl
pop
dec
push
loop
cli
mov
jns
jmp
shll
dec
int3
add
stos
mov
repz
adc
out
lods
push
rcrl
adc
out
or
in
dec
jge
rcll
mov
call
pop
xchg
add
in
xor
xchg
jp
rclb
addr16
negl
outsl
push
in
mov
sbb
movsb
jnp
rcrl
sahf
fisubrl
mov
xor
rorb
cltd
cmp
push
push
jecxz
mov
dec
rorl
jno
pop
push
xchg
jle
arpl
jne
mov
mov
xchg
xchg
rcrl
mov
in
mov
lea
mov
dec
xchg
gs
imul
out
pop
das
sub
pushf
pop
fs
push
pusha
lret
add
test
push
push
dec
mov
mov
pop
scas
fwait
movsb
xchg
repz
repnz
dec
push
add
loopne
pop
sbb
jae
fstps
inc
aaa
fdivrl
jns
fisubrl
pop
adc
mov
rolb
lods
js
add
shll
sub
inc
rol
cld
jle
cmp
add
ror
in
loopne
push
aaa
cs
cwtl
inc
push
pop
sub
ja
mov
ror
lret
aas
std
push
jp
iret
shrl
or
cmp
pop
inc
es
push
std
xor
mov
cmp
in
imul
enter
scas
outsb
adc
sbb
and
repz
jge
or
testb
rcl
icebp
and
adc
push
cld
mov
fldenv
mov
rcrb
or
roll
lahf
dec
ret
push
sub
test
inc
aaa
cmp
ljmp
setae
cli
and
mov
and
sbb
jg
mov
lahf
movsl
es
mov
lods
xor
subb
shll
fiaddl
jecxz
test
adc
aas
gs
pop
repz
ror
xor
inc
jno
inc
or
mov
pop
and
cmp
mov
sarl
push
or
sbb
arpl
sbb
scas
lret
mov
leave
xchg
ds
xchg
shll
inc
or
mov
adcl
cmc
shrb
shrl
test
sbb
rcll
movsb
mov
shrl
std
fs
xlat
cmp
rol
fisubs
shll
jne
sarl
nop
mov
add
test
fs
push
xchg
adc
xchg
and
sub
aam
shll
mov
jl
fsubl
add
pop
sar
aad
cmp
xor
imulb
jecxz
push
pushl
pop
jo
shll
dec
sub
clc
outsl
aas
fsubrs
int
mov
mov
mov
shrl
in
xor
or
decb
xchg
movsl
shll
fcmovbe
loop
psrlq
or
in
dec
inc
aad
cwtl
lea
push
shl
lcall
push
insl
jecxz
sarb
addr16
mov
in
lahf
sar
inc
adc
xchg
rcll
add
dec
sbb
pop
mov
push
adc
xor
jg
out
test
xor
stc
loop
jae
rcrb
cmc
mov
mov
out
repz
mov
sbb
iret
dec
mov
xlat
popa
xchg
ja
sarl
push
sbb
mov
punpckldq
xchg
test
aaa
or
mov
xor
xor
mov
mov
jle
push
xchg
mov
cs
push
shll
sub
push
stos
pop
lods
fbstp
lods
in
insl
es
call
dec
mov
roll
add
push
cli
add
sub
dec
dec
pusha
add
aam
in
imull
push
js
imul
rol
test
mov
fcoml
pop
and
insb
cmc
psrlq
xchg
jno
pop
clc
or
js
lods
shrl
ret
push
push
dec
jmp
xchg
dec
push
int3
mov
sbb
pop
and
shrl
mov
cmpsb
roll
jge
enter
and
jno
ror
rol
stos
stos
pop
loopne
into
xchg
outsb
push
fcoml
dec
mulps
std
inc
xchg
push
or
icebp
fisubl
cmc
xor
sahf
mov
sub
push
mov
mov
xlat
jo
xor
rorb
ror
mov
cltd
pop
sbb
mov
jp
mov
sar
jb
mov
push
jne
pop
dec
mov
xchg
outsl
pop
jmp
sbb
fwait
shrl
shrl
dec
dec
mov
enter
std
pop
pusha
inc
shl
push
sbb
das
mov
xor
add
sub
sbb
mov
push
xchg
rol
int
scas
lds
daa
shrl
and
out
xchg
cmp
mov
loopne
xlat
int
fsts
mov
push
mov
mov
rcrl
mov
pop
lods
out
adc
mov
cld
xchg
pop
add
mov
and
jae
mov
fwait
pop
mov
lods
cwtl
shrl
insl
jo
fdivl
call
test
xchg
fwait
jns
mov
jmp
adc
stos
es
sarl
popf
push
mov
pop
repnz
lcall
cmpsl
rcl
addr16
lock
xchg
and
out
xchg
jmp
ja
in
xchg
ljmp
cltd
dec
repz
push
jno
or
test
and
cmc
rcrl
lcall
or
sbb
lahf
scas
push
out
mov
pop
test
in
cmp
cwtl
jae
psrld
rcl
subb
es
mov
scas
fdivl
or
insb
rcrl
outsb
push
ss
jge
mov
sub
adc
mov
test
push
sarl
imul
push
push
scas
shlb
arpl
les
inc
mov
ror
pop
testl
push
inc
adc
pop
mov
nop
push
push
in
pop
test
arpl
push
push
inc
sbb
imul
clc
jb
push
mov
xchg
add
mov
or
jmp
push
mov
rcl
sti
movsl
inc
sbb
arpl
call
push
outsb
out
push
std
fiadds
push
sbb
jbe
push
mov
shl
jne
out
nop
jb
push
pop
leave
mov
roll
sub
push
aaa
sub
shrb
lahf
and
fninit
scas
push
cmc
arpl
and
jae
push
push
mov
push
rcll
jnp
or
aam
jae
sbb
out
mov
outsl
fwait
pop
test
mov
in
mov
pop
imul
mov
mov
lea
out
sbb
cmp
shr
xlat
jge
call
hlt
mov
pop
cmp
daa
xor
add
sub
add
sbb
scas
outsb
into
mov
in
ror
inc
sahf
jae
xchg
xchg
cmp
and
shll
bound
fcom
mov
sub
icebp
mov
add
jno
mov
or
movups
xchg
pushl
ror
xor
js
frstor
and
fbld
adc
dec
out
popl
scas
inc
sbb
fimuls
test
pop
leave
sbb
or
lods
mov
lahf
outsl
xor
leave
mov
jle
loop
mov
pop
mov
cltd
cmpsb
aaa
rorl
or
mov
lcall
jp
xchg
mov
cmpl
cld
mov
ret
mov
push
adcb
aam
sbb
in
aam
fisubrl
ret
mov
dec
jl
push
loopne
mov
sti
andl
rclb
fnstenv
mov
stc
push
mov
sti
cmp
xchg
frstor
js
add
enter
outsb
fcmovbe
scas
int3
sub
fwait
pushf
shll
and
test
shll
pop
sbb
out
mov
shll
fs
sarl
dec
flds
repz
mov
and
dec
xchg
outsl
insb
pusha
adc
int
cmpl
in
jnp
inc
push
push
or
add
xor
push
jo
mov
push
xor
push
mov
lock
jb
xchg
pop
sub
sub
pop
xchg
sbb
and
loope
xchg
andl
roll
mov
shlb
loope
or
push
enter
pop
mov
rcr
das
pushw
aam
push
nop
rcrl
lret
jge
shll
mov
pop
ror
push
pop
es
add
mov
lods
pop
and
int3
into
imul
cmpsl
fld
loopne
adc
arpl
dec
roll
addr16
add
mov
or
out
int
push
inc
popa
leave
lods
fistpl
sbb
mov
aaa
test
icebp
xor
rcll
cltd
mov
aas
jge
cwtl
or
sub
lods
mov
sar
repnz
sub
je
rorl
mov
cmp
cmpsb
lods
nop
es
test
rorl
imul
outsl
xor
pop
inc
cmpsl
rcll
fists
rcrl
sub
and
mov
xchg
cmp
sarl
pop
dec
push
insl
push
iret
int3
xor
jecxz
cld
push
push
push
ds
int
insb
movsl
fists
ror
push
adc
rcrl
push
psubusw
push
inc
ja
roll
cs
decb
adc
jg
inc
or
sarl
shl
or
lods
mov
cltd
or
push
sub
jo
inc
mov
or
cld
loopne
dec
imull
push
gs
rorl
xor
adc
test
addl
es
lea
daa
adcl
je
imul
clc
shl
test
repnz
mov
xor
xchg
fwait
shrl
rorb
or
inc
shrl
xchg
mov
sub
nop
rclb
clc
mov
pop
mov
ret
xchg
fisubl
out
stos
std
shll
push
add
mov
dec
fisubrs
sarl
xchg
and
mov
mov
dec
leave
push
ret
in
scas
lret
sub
je
mov
jle
aam
shll
push
push
shrl
xor
mov
test
pop
idivb
leave
xchg
push
push
in
or
mov
cmp
xor
mov
mov
jns
enter
push
mov
das
push
lcall
mov
lea
jae
ret
shrl
pusha
mov
xor
std
insl
xchg
mov
adc
clc
das
shll
mov
mov
sarl
and
lret
jle
and
cmpsl
in
add
cmp
fsub
insb
sub
sbb
ret
int3
mov
xchg
push
vpmulhw
adc
fcomps
mov
push
xchg
cmc
shl
cmp
mov
push
mov
in
mov
pushf
rcl
mov
mov
ljmp
fstp
or
rcrl
icebp
stos
cltd
mov
jo
shl
out
adc
push
arpl
iret
ror
fildll
push
shr
push
stos
xchg
pop
test
mov
jno
xorb
shll
mov
pusha
stos
sbb
mov
adc
xchg
rcl
test
push
in
fistps
jge
dec
inc
cmp
pop
gs
jp
stos
mov
fcompl
pop
push
cli
mov
fwait
into
jmp
cmp
dec
push
jbe
pop
aam
pushf
leave
mov
in
add
test
into
push
sub
mov
mov
or
repz
adc
popa
jb
jae
stc
pop
pushw
push
ret
cli
jns
fwait
sbb
not
bnd
cmp
jmp
fisttps
dec
sub
shl
lds
pushf
int
out
test
pop
mov
jmp
adc
pusha
mov
and
or
shl
mov
pop
mov
xchg
scas
xchg
adc
jmp
mov
pop
cmc
call
into
pop
inc
loop
push
mov
aam
sbb
sub
nop
and
stos
mov
lods
pop
sbb
rorb
jno
mov
lods
enter
fmuls
insb
ret
xchg
test
cmpsl
iret
adc
sahf
mov
stos
xchg
je
movsb
xor
jne
mov
out
insb
sub
gs
adc
pop
sub
pop
push
fstl
das
push
xchg
fbld
lods
fnsave
mov
mov
sbb
pop
push
xchg
pushf
xchg
int
xchg
inc
dec
add
shl
mov
dec
in
adc
rcrb
mov
cmp
jmp
addr16
xchg
notb
mov
cmp
xor
popa
dec
lret
mov
sbb
cs
aaa
roll
int
jl
or
fwait
sarl
or
mov
pop
in
jmp
shrl
sub
rorl
sahf
mov
or
rorl
repnz
je
rcrl
fwait
push
lock
cmp
jne
daa
es
popa
xor
scas
push
mov
xor
jle
cmpsl
xchg
mov
mov
and
loope
jmp
ja
dec
xchg
ljmp
push
lahf
repz
inc
jno
leave
mov
xor
lods
out
cmc
out
jecxz
ljmp
or
lahf
in
jo
sub
iret
jnp
sarl
out
add
inc
rorl
jmp
mov
pop
out
roll
cmp
test
jle
or
rcll
mov
or
sub
test
roll
jge
out
imul
dec
std
dec
gs
adc
jo
xchg
insb
scas
icebp
push
mov
pushf
aaa
mov
pop
nop
push
cmpsw
fmul
pop
push
inc
sbb
push
orl
test
or
push
jb
cmpsb
sub
sbb
push
aaa
ja
pop
daa
jp
cmpsb
rcr
cld
or
rcl
jb
fs
shll
push
out
push
and
adc
xor
and
mov
xchg
push
jg
in
jmp
mov
ficoms
and
shrl
stc
push
jne
jb
nop
or
stos
add
sbb
add
pop
pop
or
test
jae
into
pop
dec
nop
push
or
lock
push
xchg
or
aad
cwtl
jns
adc
mov
jmp
sub
stos
jns
inc
sar
xchg
sbb
pop
pop
mov
outsl
lods
push
and
cwtl
sbb
imul
arpl
lea
mov
shr
jb
hlt
pusha
or
jp
in
inc
push
psllw
mov
arpl
push
pop
lcall
ret
jecxz
push
mov
fs
jmp
adc
lahf
pop
test
roll
or
sarl
fyl2xp1
int
mov
cmpsb
fdivr
dec
out
push
jecxz
mov
rcrl
xorl
fninit
xchg
sbb
inc
or
sbb
dec
adcl
sbbl
in
mov
jo
cwtl
add
mov
shl
push
mov
pop
lock
rcll
bound
dec
test
aaa
ret
stos
cmp
mov
fidivl
shll
push
mov
aad
ret
cmpsl
pop
fcoml
dec
mov
and
mov
mov
shr
mov
push
push
subl
push
xor
and
loop
add
lds
std
shll
dec
fimull
mov
dec
rcrl
push
in
mov
test
into
lret
fwait
add
jge
xor
mov
cld
ds
jb
xchg
repnz
jmp
cmpsb
sbb
cli
fsubrl
ret
in
rcl
add
daa
mov
mov
lds
xor
and
inc
mov
mov
push
mov
jge
adcl
rol
inc
pop
dec
mov
push
pop
push
and
aam
pop
xor
add
mov
rcrl
mov
in
fists
push
mov
rorl
xchg
adc
and
mov
outsl
arpl
add
xor
inc
movsl
push
xchg
rorl
adcl
mov
push
xchg
xor
test
addr16
jmp
inc
push
inc
jns
mov
sti
xchg
into
adc
shll
mov
mov
push
sub
testb
sub
shll
pop
stc
add
loope
aam
push
das
aas
xchg
inc
mov
fs
fisttpll
add
xorl
push
lret
lret
adc
and
stos
add
loopne
arpl
fcomp
xor
call
dec
iretw
jl
roll
mov
repnz
add
sar
subb
arpl
sbb
adc
add
out
mov
cmc
push
cmp
cltd
pop
inc
movsb
push
cwtl
dec
adcb
ss
and
iret
xchg
repz
rorb
fwait
mov
mov
or
int3
rcrl
jo
out
sar
push
cmc
mov
icebp
mov
adc
mov
sbb
and
out
pop
ja
sbb
or
mov
in
xchg
xor
push
sahf
cld
jmp
into
sbb
inc
push
insl
cmc
jns
xor
shl
sbb
aam
mov
sub
test
stos
ret
cmp
sarl
rorl
cmovo
lock
imul
dec
or
rcr
leave
ss
lea
pop
dec
cmp
pushf
ror
xor
shll
adc
shlb
cmp
mov
inc
sbb
pop
mov
add
inc
fldl
andl
rorl
outsb
ss
test
subb
cmpsb
loopne
decl
int3
ss
jg
cmp
xchg
push
loope
or
push
inc
xchg
stos
fdivrp
and
mov
rcl
pop
mov
push
aas
mov
insl
icebp
xchg
sbb
in
dec
movsb
out
repnz
push
idivl
std
pop
aas
cmp
rcr
popl
xchg
mov
aam
xchg
inc
ficoml
add
mov
rorl
mov
aam
fildl
rcll
aaa
sub
push
push
aas
fldcw
aad
in
mov
testb
les
arpl
insl
xchg
sbb
idivb
outsl
or
push
loop
sub
push
sbb
insl
stc
fcom
push
les
loop
lock
and
iret
out
call
dec
enter
push
stos
shll
mov
lds
stos
movsl
rcl
ljmp
pop
pop
insl
and
xchg
sub
call
shl
jns
lock
cmp
sbb
xchg
int
js
shll
push
sbb
fcomps
mov
aam
sub
xor
adc
jnp
mov
les
sarl
mov
test
daa
push
sarw
sbb
shll
jo
add
out
shll
mov
inc
out
or
cmc
cmpsl
lea
pop
pop
mov
stos
mov
outsl
push
mov
push
shlb
movsb
mov
int3
push
jle
movl
push
rol
sbb
mov
push
fnsave
insl
mov
sbb
jb
roll
adc
ljmp
jo
jmp
aam
lds
jecxz
aam
fwait
mov
nop
in
push
out
push
shrl
aad
into
bound
xchg
pop
mov
inc
andb
push
test
jb
scas
sar
dec
cmp
pop
fneni(8087
ss
cs
sbb
test
rol
push
xchg
add
inc
dec
mov
int3
cld
cmp
lret
fwait
push
add
shll
push
out
inc
pop
pop
pop
hlt
or
out
mov
rcrl
adc
cmpsb
pop
rcl
clc
mov
jbe
xchg
mov
rcll
and
mov
pop
mov
daa
aaa
inc
xchg
mov
mov
pop
xchg
pushf
push
mov
test
jge
shrb
jmp
pusha
mov
pop
jb
mov
addr16
dec
xchg
mov
stos
cwtl
pushf
push
mov
mov
xlat
xchg
xor
stos
enter
push
or
jge
jnp
aam
fldl
pop
add
adc
das
fwait
lods
lahf
mov
fs
lods
mov
and
out
mov
jnp
ss
sbb
dec
jle
shll
and
pop
test
sarl
add
shll
xor
lcall
fcmovbe
mov
popa
ja
hlt
lods
shlb
pop
push
mov
shl
shrl
inc
inc
cmp
sar
iret
sbb
rorl
sub
scas
dec
out
fs
repnz
sbb
and
fwait
xor
shl
cmp
sub
les
scas
es
push
popf
push
repz
cmpsl
cld
scas
cmp
xor
xchg
sub
adc
mov
add
cmp
jecxz
jmp
cmp
xchg
aam
cli
and
hlt
and
loop
lret
sar
pop
xchg
addr16
imul
xlat
rcll
xor
mov
dec
jnp
test
push
das
cmp
repnz
push
shll
lods
xorb
hlt
inc
stc
cwtl
cmp
or
mov
xchg
push
push
push
mov
and
mov
lahf
pop
addr16
sub
out
mov
mov
jbe
or
xor
rcrl
xchg
xor
sarl
mov
xlat
cmpsb
stc
roll
inc
push
sub
movb
shll
mov
cmpsb
aas
lods
das
rcrl
add
adc
push
cmp
ret
sarb
shl
add
cmp
lea
push
iret
movsl
int
sti
ljmp
sbb
push
shll
mov
pop
fstpt
cmp
lds
push
stos
js
dec
shll
inc
nop
xor
in
add
outsb
leave
mov
cmp
jl
sub
sub
iret
mov
je
mov
js
adc
jae
mov
mov
testb
mov
rorl
add
fcmovnbe
sbb
cs
shrl
cwtl
mov
rolb
push
and
mov
int
les
hlt
push
mov
pop
sarl
mov
or
leave
inc
shll
repnz
xlat
ja
mov
shlb
adc
setns
add
sbb
lcall
or
shll
shll
cmp
fbstp
adc
test
stos
dec
fwait
or
inc
int
roll
cmp
mov
sbb
mov
stos
roll
jg
mov
cwtl
mov
dec
leave
xor
stos
into
push
jns
dec
or
pop
mov
fst
pop
jecxz
sbb
mov
jo
jbe
out
mov
fwait
push
cwtl
jp
lock
imul
push
mov
pop
xchg
aaa
push
pop
stos
outsb
ficoml
mov
cwtl
stc
lahf
xor
jns
shl
lods
gs
stos
jmp
push
dec
pushf
sub
xor
add
add
call
rorl
inc
dec
into
and
inc
ret
adc
loopne
jle
fcmovbe
inc
dec
adc
aam
das
call
pop
in
ljmp
ds
cwtl
or
shl
mov
cmc
shl
and
aam
shrl
stc
xchg
push
mov
push
nop
mov
cs
cmp
ret
sbbb
rol
das
in
adc
dec
rcl
shrb
mov
and
mov
jno
pop
adc
push
jge
repnz
dec
sti
loope
shll
stos
jbe
outsl
mov
add
adc
ret
jno
lcall
sub
inc
fwait
xlat
mov
jnp
cmp
icebp
in
rcll
jl
test
xor
xor
call
mov
push
cli
pop
pop
pop
xchg
jbe
mov
ret
loope
xchg
sub
add
leave
dec
pop
sub
js
xor
insl
cmc
mov
shll
in
add
lods
ficomps
out
lds
enter
pop
stos
sbb
shl
lcall
mov
push
fsubr
ror
aaa
int3
in
sub
pushf
shll
sti
mov
xor
lret
scas
mov
xchg
and
sar
inc
xchg
mov
hlt
add
loopne
mov
push
pop
frstor
int
add
sarl
fbld
popa
sti
or
lods
inc
arpl
shrl
jne
js
imul
lret
cmp
rorl
mov
ror
mov
add
in
rcll
pop
mov
repnz
stc
mov
ds
popf
jb
cmp
call
dec
stos
insl
xchg
loopne
leave
pop
sub
inc
imul
repnz
and
mov
push
mov
pop
xor
mov
lods
imul
add
dec
adc
jo
repz
loopne
cld
mov
mov
pushf
adc
mov
inc
or
cmc
pop
pop
aam
mov
mov
shll
push
sbb
and
sub
pop
stos
rorl
fwait
or
popf
xchg
shll
and
sub
xchg
mov
push
add
mulw
rcll
gs
insl
lods
sarb
jmp
mov
adc
sarl
and
imul
mov
aas
sti
std
test
cmovbe
inc
pop
jno
cmc
scas
mov
scas
mov
dec
xor
clc
int
dec
das
shrl
xchg
mov
pop
roll
push
sbb
cli
sti
dec
mov
outsl
movsb
les
test
shrl
int
mov
cmp
mov
jne
dec
xchg
nop
mov
into
sti
add
dec
jl
imulb
mov
xchg
sub
fsubrl
push
push
jp
push
dec
clc
out
imul
push
iret
aad
mov
insl
jae
jge
testb
roll
inc
sbb
or
mov
pop
pop
lret
insl
push
outsl
inc
mov
shrb
stos
add
imul
shll
aad
in
push
in
or
or
mov
outsb
inc
inc
scas
mov
mov
adc
mov
mov
lcall
or
shr
lret
jp
sbb
rorl
pop
outsb
add
movsb
inc
rcll
dec
xchg
mov
js
inc
sarl
xlat
lret
stos
aam
push
push
sahf
ja
push
xchg
push
aas
jg
add
rcll
jns
test
test
inc
es
data16
dec
push
sbb
out
popa
jo
in
out
inc
pop
call
js
lock
lret
out
cwtl
test
rcll
clc
pop
stos
mov
push
or
popa
push
and
lods
lret
pop
mov
jle
adc
repz
mov
mov
dec
shl
into
fildll
cmp
pop
jp
sub
loop
sub
bnd
cltd
mov
pop
mov
gs
dec
shll
test
mov
xlat
pop
push
in
jg
xchg
imul
cmp
aaa
sbb
inc
push
xorl
scas
adc
stc
imul
mov
add
rcrl
faddl
ret
dec
or
addr16
xorl
xchg
repz
int
lret
xchg
out
fnstsw
pop
jmp
xchg
shr
std
push
adc
add
dec
mov
pop
ret
sub
in
jle
pop
mov
mov
push
adc
popa
sub
ret
cmp
pop
out
xor
in
cmp
fmull
sarl
clc
and
std
sahf
into
roll
cmpsb
rolb
xor
mov
mov
pop
aam
xor
pop
push
shll
rorl
push
push
inc
adc
test
jecxz
cs
sub
rcrl
scas
mov
out
push
aad
dec
push
pop
ret
int
cltd
test
sbb
sbb
lcall
repnz
push
shll
jg
rcrl
int
ds
mov
sub
test
dec
test
shll
out
daa
add
sarl
testb
addr16
pop
cmp
mov
cwtl
aad
jb
lahf
andl
shrl
lret
mov
jmp
rol
adc
jns
push
fcomps
mov
cwtl
xchg
jmp
shrl
ljmp
sarl
cmp
and
je
pop
daa
fwait
push
insb
sahf
rol
aas
shll
outsl
xchg
rorb
jl
mov
xlat
push
xor
xor
bound
mov
push
aad
sub
mov
ja
sbb
ljmp
sahf
push
repz
jg
jnp
cmp
mov
rcrl
aas
cmc
fcomp
pop
adc
repnz
jbe
stc
cs
jmp
sub
test
nop
idivl
mov
mov
aas
pmaddwd
imul
sarl
loopne
mov
jne
xchg
xor
rcrl
lods
movsb
xor
sub
dec
lret
loop
dec
add
cltd
pop
mul
add
sbb
jp
xor
xor
rol
mov
xchg
out
ja
mov
pop
sarb
push
inc
clts
push
xor
add
xchg
mov
test
mov
mov
cmpsb
or
test
nop
scas
das
adc
jno
enter
push
cli
or
sarl
inc
pop
jbe
sub
shlb
rcll
xchg
sbb
inc
rep
sbb
into
mov
cmp
pop
sub
jb
jp
push
mov
xchg
aaa
jne
cmpsb
push
mov
ss
mov
sbb
push
sbb
lcall
mov
push
adc
push
mov
mov
rcrl
loopne
xor
imul
shll
ljmp
push
xor
stos
mov
push
sbb
xchg
or
outsl
mov
sarl
scas
mov
adc
movsl
hlt
rcl
xor
outsb
jl
lea
shrl
repz
and
jbe
push
inc
xlat
dec
push
jle
inc
cmp
insb
repz
pushl
insb
rorl
cltd
adc
rcr
movsb
lcall
cwtl
jecxz
roll
and
or
in
cld
roll
imulb
mov
ds
inc
shl
xchg
shrl
sahf
pop
rcrl
pop
fsub
inc
sub
cmp
shll
fdivrl
lret
mov
arpl
xor
mov
adc
test
push
in
nop
shll
sbb
or
mov
jo
fistl
out
dec
out
rcll
repz
ja
dec
bound
xor
movsb
pop
pop
aaa
lods
shll
stos
inc
mov
or
shll
xor
adc
xchg
mov
cli
cmp
lods
push
shr
add
cmp
lds
push
pop
fisttps
in
std
xchg
ljmp
into
movb
shl
jb
dec
push
daa
add
rorl
iret
dec
shll
xchg
jbe
aam
push
in
xchg
push
subb
cmpsl
into
lods
pop
popl
out
mov
jge
adc
fnstcw
enter
cmp
pop
shrl
or
cli
jmp
pop
mov
addl
int3
xor
dec
push
jecxz
jle
cmp
and
push
jnp
das
add
out
sbb
imul
movsb
pop
dec
shrl
pushf
pop
shll
mov
es
adc
pop
push
add
sub
inc
push
xchg
push
mov
add
mov
mov
push
sub
xchg
cmp
mov
xchg
mov
in
adc
mov
popf
push
adcb
loopne
pushf
or
xlat
pop
push
in
mov
xchg
mov
inc
roll
sub
stc
into
test
rcr
enter
pop
fwait
xchg
inc
loope
dec
aas
das
or
test
imul
lahf
lret
insb
or
sub
sbb
or
sub
roll
adc
and
xchg
pop
xchg
lods
ret
add
ljmp
sbb
sub
mov
rcr
pop
test
jl
fsubr
scas
mov
cld
pop
int3
lods
rorl
cs
xchg
movsl
jbe
inc
fildl
add
test
in
cmp
shl
lds
out
inc
cwtl
jo
sub
sub
divl
add
repnz
mov
shrl
cmp
jecxz
push
les
and
pop
roll
sbb
push
repz
jl
bound
movb
adc
xchg
cltd
mov
jnp
ljmp
icebp
fdiv
mov
xor
repz
lods
xlat
ljmp
push
cmp
mov
push
hlt
xchg
test
sbb
rcrl
ljmp
adc
pop
cmp
dec
ror
mov
subb
shr
stos
imul
inc
in
mov
push
ss
fsts
sub
mov
std
mov
arpl
neg
push
xor
sarb
rorl
inc
shrl
std
mov
ljmp
int3
lret
mov
jae
sar
cmpb
dec
mov
fnstsw
cmpsb
or
and
scas
leave
loop
cmp
clc
lahf
inc
mov
cmp
test
xchg
lods
xorb
rcll
nop
shrb
mov
mov
mov
cli
inc
jl
movsb
test
push
dec
std
xor
jb
xchg
mov
lods
xchg
jnp
inc
nop
mov
roll
adc
xor
push
iret
ror
lret
stos
sub
iret
sbb
push
ja
rcr
adc
push
sbb
iret
aad
xchg
call
notb
rcrl
add
in
or
out
rcrl
pop
sarl
push
mov
sbb
lds
and
rorl
test
enter
decl
cmpsb
shll
mov
jbe
pop
mov
pusha
shr
in
xlat
into
xor
inc
mov
repz
adc
shrl
cltd
ljmp
mov
xchg
rorl
lcall
xchg
shl
test
and
jle
in
adc
xor
push
shll
jle
add
hlt
mov
add
sbb
jecxz
imulb
pop
icebp
pop
sbbl
lret
out
mov
xor
cmc
jno
cmp
mov
jns
cmp
dec
mov
mov
fisubrl
sbb
xchg
add
jo
dec
loopne
inc
xchg
mov
xchg
inc
bound
inc
xchg
pop
inc
test
imul
xchg
mov
adc
xor
push
fdivrs
adc
ret
mov
ret
nop
ret
lds
pusha
repz
shll
call
jp
jno
jl
cwtl
ret
shll
add
mov
rorl
dec
sub
aam
and
pop
jbe
outsl
jl
add
shl
imul
lret
clc
fadd
inc
push
sbb
jl
movsb
adc
mov
cld
stc
shll
ja
movsl
or
push
mov
ret
shrl
repz
sub
cmp
push
nop
mov
andl
inc
in
shl
and
pop
divb
aaa
cltd
jge
dec
stc
mov
dec
or
fidivl
sbb
ret
call
mov
shrl
or
inc
rcll
sarl
adc
mov
data16
shll
pop
jl
sarl
adc
mov
sub
dec
insb
test
hlt
rorl
pushf
push
clc
loop
pop
adc
cmp
xor
ss
jg
shrl
in
rcll
dec
fmuls
or
cmp
loope
push
shl
das
in
adc
fs
cwtl
sub
mov
nop
or
push
rol
and
dec
push
or
shrb
xchg
shl
xchg
add
sarb
cmp
jmp
xchg
mov
mov
aam
cwtl
mull
mov
rcll
out
dec
movsl
mov
scas
add
push
outsl
cmp
dec
scas
iret
out
adc
negb
ljmp
sub
test
dec
aas
jbe
jns
xor
lods
push
cmpsl
fwait
inc
sub
cmp
add
andl
js
pop
popf
pusha
push
xchg
pop
shrl
and
rorl
frstor
jecxz
aad
mov
shll
push
pop
sub
lods
push
shll
mov
sbb
loope
dec
repz
lds
pop
push
sar
sbb
movsl
fisttps
in
jnp
in
xchg
sbb
outsb
aas
or
push
cli
lahf
mov
test
and
mov
imul
push
and
jge
jle
push
push
roll
in
mov
jge
xchg
sbb
and
ss
xchg
js
mov
xor
sub
add
clc
jl
gs
out
rcrb
jnp
mov
inc
out
adc
pop
repz
and
mov
jl
xor
cmp
outsb
enter
mov
push
stos
arpl
int3
rcll
sbb
shll
fs
push
cmp
or
rcll
add
femms
jmp
mov
adc
mov
rcr
sbb
sbb
movsb
js
push
scas
push
sub
outsl
ljmp
cltd
fimuls
loopne
shrl
mov
pop
ret
int
rorl
out
sbb
rorl
add
leave
ficoml
push
push
add
jne
mov
std
sub
and
dec
sarl
pop
test
push
push
mov
add
push
jo
out
jae
or
in
repz
push
jl
shr
or
push
sbb
das
push
shlb
mov
idivl
cmp
cli
xor
add
lret
mov
ret
imul
movsl
and
push
lea
jle
or
jnp
out
imul
nop
xlat
dec
cmp
loop
add
and
add
sbb
popa
rorl
adc
shr
cmp
mov
jo
sar
and
dec
jb
cmpl
shrl
loop
jb
ret
js
and
xchg
pushf
into
push
sbb
fsubs
inc
shll
jg
jae
lret
arpl
jecxz
push
clc
jns
mov
rorl
data16
lret
mov
and
mov
jo
and
push
lret
lock
cmc
sbb
dec
aaa
movsl
in
push
pop
stos
xor
push
mov
sarb
xor
xlat
inc
mov
jle
xor
and
xchg
push
pop
sub
sub
rcll
dec
pop
icebp
rcl
ffreep
lcall
mov
movsl
or
jp
lret
orl
les
add
push
loope
shr
adc
dec
lea
rcll
sahf
fs
fildll
push
mov
fsub
into
loop
ss
sarl
lds
test
roll
jb
add
xchg
stc
enter
and
and
fidivrs
sbb
repz
ret
aam
pop
jnp
notb
int3
push
popf
xchg
dec
mov
lret
push
cmp
mov
cmc
out
push
xchg
sbb
loop
int
lea
dec
xchg
jecxz
rcl
adc
pop
aad
mov
and
cmp
dec
xor
cmpsl
in
cmc
stos
inc
es
sub
jle
push
cld
sahf
fstpt
repz
dec
insl
fwait
scas
lret
xor
cmp
sarl
push
and
mov
fsts
out
lds
outsb
inc
sbb
ja
sbb
pushf
das
test
mov
fildll
lea
mov
shll
sub
xchg
mov
rcr
jp
enter
pop
push
les
fwait
loope
int
das
inc
arpl
andl
lret
rorl
sbb
jne
lods
mov
jge
inc
push
sbb
cs
dec
xchg
xchg
aas
scas
cmpsl
in
lcall
lret
add
jle
fisttpll
fsts
into
pop
addr16
adc
fiaddl
jl
ret
mov
in
rol
lods
or
and
push
lods
mov
stos
add
cmp
mov
xchg
xchg
in
sarl
xor
shll
mov
gs
rcll
and
sarl
mov
shll
mov
xchg
popf
fidivl
pop
sarl
xlat
cmp
int3
adc
aaa
mov
mov
adc
fsubrl
out
insb
add
xlat
shrl
ljmp
shrl
jno
mov
push
cld
repnz
xor
mov
cmp
sub
or
push
push
xor
push
lret
fdivrl
roll
ds
outsl
jle
psrlq
mov
inc
roll
lods
stos
inc
mov
or
pop
cs
xchg
call
aad
xchg
lods
fs
addb
xchg
scas
jae,pn
add
clc
movsb
roll
call
add
mov
mov
in
mov
jl
fnsave
adc
pop
roll
push
mov
mov
hlt
mov
push
cwtl
test
dec
aam
cmpsb
fildll
test
xchg
sub
fcoml
pop
xchg
fcmovbe
jl
pop
stos
adc
rcrb
add
push
xchg
imul
pop
inc
rcrl
mov
cli
fst
push
mov
sbb
adc
adc
cmp
roll
pop
je
into
nop
mov
shll
mov
xor
lret
mov
mov
push
js
sbb
sbbb
inc
push
aad
shl
mov
push
aas
mulb
cwtl
sarl
fimull
or
lods
push
movsl
rcrl
jns
addr16
cld
push
outsl
sub
pop
loop
aad
and
fcompl
mov
mov
dec
xor
hlt
mov
shll
imul
ror
in
xchg
into
int3
xlat
lret
push
inc
cltd
shl
jl
popf
clc
out
lds
adc
lods
lcall
mov
jecxz
push
jmp
mov
shrl
jo
in
xchg
roll
lods
xchg
push
fst
js
mov
cmp
imul
jo
daa
icebp
dec
rclb
mov
roll
mov
sbb
jns
repz
mov
fucom
xor
jo
pop
jb
pop
ss
sub
dec
sub
push
jmp
test
mov
fmulp
push
or
push
rcl
xor
out
sarl
arpl
imul
aaa
int3
xchg
out
fbld
or
push
insl
imul
jp
push
sbb
orl
shll
jmp
adc
pop
rcll
inc
and
out
xor
mov
cli
in
push
sub
add
mov
sar
jl
mov
pop
int
roll
jo
ror
mov
stc
push
mov
xor
cli
and
in
ffree
adcl
jnp
shrl
int3
lret
pushf
fisttps
and
adc
fisubl
shl
out
xchg
push
mov
sarl
mov
pop
pop
mov
jle
mov
out
pop
xchg
dec
inc
xchg
roll
adc
push
mov
mov
xchg
jg
in
cmp
mov
jnp
mov
shll
mov
cli
je
rcl
or
roll
pop
and
repz
insb
fisubrs
push
xchg
xchg
addr16
mov
xchg
pushf
rcrl
out
xchg
push
add
scas
mov
xorps
sub
aam
or
pop
dec
push
mov
add
ja
jmp
mov
rcr
fs
lret
fwait
shrl
sub
inc
out
mov
ffree
cmp
mov
int
incl
jno
xor
and
enter
pop
sbb
mov
jmp
shr
addr16
out
fcmovbe
push
sbb
mov
sub
aam
lods
pushf
shrl
jb
shll
test
je
dec
cmp
outsb
jb
iret
sub
sahf
pop
sti
push
std
cwtl
fwait
push
inc
clc
sub
call
aas
jle
push
fwait
and
test
dec
sbb
push
les
push
popf
or
xchg
int3
in
xor
insb
andl
rcrl
mov
dec
lcall
imul
shr
icebp
mov
shl
inc
xchg
jle
std
mov
inc
dec
ds
rcll
adc
xchg
adc
stos
lahf
lock
shrl
sti
cs
rcl
mov
roll
xchg
rcrl
fildll
mov
jg
fidivs
outsb
sbb
cmpl
out
shrl
mov
repz
mov
cmc
arpl
gs
rcll
xchg
sub
xchg
inc
mov
clc
pop
push
fnstcw
in
scas
iret
int
test
enter
lods
mov
pop
push
rorl
icebp
rcrl
shll
std
sub
sbb
mov
mov
test
ror
jne
repnz
mov
inc
xlat
outsb
rcl
vandps
mov
push
sti
out
lret
mov
inc
xchg
scas
movsb
pop
push
mov
stos
std
mov
or
rcr
sbb
jge
xchg
ret
jne
hlt
inc
mov
add
imul
adc
dec
dec
jo
aam
out
and
fcmovbe
test
sbb
in
test
ret
dec
rcrl
sub
dec
push
push
mul
lea
cmp
jecxz
or
jae
stos
stc
sbb
add
outsl
sub
xchg
and
cmp
imul
dec
sbb
fsubrs
mov
push
push
push
or
xchg
clc
inc
add
roll
xchg
rcll
push
and
shll
push
mov
cmp
mov
push
push
and
jb
in
cmpsb
xor
cmp
shrl
dec
in
pop
mov
push
fisubrl
js
lock
inc
aam
ss
and
ljmp
shl
or
cmp
cmp
mov
dec
lret
xor
rorl
mov
xlat
test
and
add
fstpl
stc
sbb
orps
daa
jno
jo
mov
push
out
xor
fdiv
iret
addr16
or
dec
test
aaa
mov
or
mov
mov
xor
rcrl
xchg
xchg
enter
aam
shrl
mov
pop
inc
push
jbe
sar
insb
clc
aad
inc
xchg
mov
cs
orl
ljmp
pop
xor
jns
dec
xchg
ss
movsl
sub
add
push
jmp
fwait
jecxz
test
jbe
repnz
dec
add
in
ror
das
icebp
imul
jae
insb
mov
jg
jns
jo
ja
and
add
sti
jb
scas
imul
mov
and
cmp
ja
cli
mov
fcompl
icebp
pop
lcall
jp
adc
mov
rol
insl
arpl
and
mov
cmp
cmp
adc
stc
ds
dec
xor
out
pop
xor
xchg
dec
ljmp
mov
pop
ss
in
jp
roll
push
jo
sbb
push
lds
push
dec
shll
rcrl
sarb
fwait
into
imul
ficoml
call
scas
dec
mov
shll
clc
adc
rcll
cmc
pop
into
shrl
xchg
lcall
mov
shll
mov
mov
loop
test
xchg
pop
mov
sahf
loope
rcll
test
sbb
or
cmp
lret
es
nop
bound
repz
inc
testb
pop
arpl
int
cld
lds
subb
shll
mov
les
arpl
or
pop
enter
addr16
push
fcomp
cmp
shl
sub
mov
andl
pop
lods
jo,pn
mov
movsl
sub
push
add
imul
iret
lret
pop
jl
or
sub
dec
sbb
stos
roll
repnz
inc
mov
imul
fincstp
popf
out
mov
pop
sub
iret
jb
xchg
xor
test
cmpsl
je
adc
adc
pcmpgtb
bnd
fcom
je
ljmp
fs
lock
inc
cld
xchg
pop
jecxz
add
mov
add
sarl
xchg
out
in
ret
shll
sub
sbb
into
mov
dec
rclw
push
xor
or
inc
gs
xor
add
stos
xchg
cmpsb
rcrl
jmp
jnp
xorl
stc
pop
scas
out
lods
shrl
rcl
or
xor
or
jg
jne
ja
cmpsb
into
rcr
pop
sbb
in
shl
inc
mov
xchg
jae
sub
xchg
test
or
sub
rol
leave
xlat
scas
ret
push
xchg
xchg
cmp
ret
jmp
adc
test
shlb
shll
push
cmp
jns
push
xchg
sbb
fsub
movsb
mov
inc
push
mov
rcr
std
push
inc
cmp
lahf
mov
aaa
adc
rcll
xchg
out
movsb
jne
and
xor
push
mov
je
shr
mov
push
or
mov
roll
add
popa
jge
fcompl
push
push
sarl
push
aad
in
cmp
mov
xchg
dec
push
lcall
or
mov
xchg
cmc
loope
push
sub
mov
sahf
call
add
push
insb
scas
call
imul
jp
push
sbb
jmp
push
mov
out
aam
mov
out
xlat
movsl
adc
loop
and
adc
cltd
xchg
adc
out
inc
mov
cmp
cmpsl
out
shl
ljmp
push
xchg
jnp
or
call
rolb
ret
add
js
int3
orl
fmuls
mov
cmp
jbe
sub
fldl
fs
pusha
outsb
xor
cwtl
ret
fcmovnb
and
jns
lret
outsl
sarl
popfw
sub
sbb
mov
push
rclb
pusha
rclb
bound
shll
jnp
hlt
stos
mov
xchg
test
pop
arpl
xor
jg
mov
jle
cmpsb
out
cmpb
jno
ljmp
cld
fistpll
insl
or
imul
jp
inc
leave
cmpl
fucomi
roll
mov
fmull
cs
les
jbe
rcll
test
imul
or
cs
addb
and
sbb
xor
cmpsl
add
xchg
push
jb
xor
stc
mov
sarl
cli
sbb
std
sbb
sarl
ffree
cmp
ret
push
sub
int3
call
out
lds
lea
and
shll
cld
out
mov
into
add
ffree
ljmp
das
pop
roll
fs
adc
hlt
sarb
adc
mov
inc
xchg
les
jnp
push
icebp
sahf
inc
insl
mov
push
lea
stc
xor
sarb
mov
jae
pop
xor
add
mov
pop
insb
lcall
sbb
pushf
mov
addr16
mov
xor
mov
mov
jnp
sub
sbb
gs
add
xchg
sti
enter
lods
pop
jmpw
cmp
arpl
mov
lret
lock
xchg
sub
shrl
mov
xchg
shr
dec
pop
cmpsl
cmp
and
sub
add
mov
lcall
std
addr16
fcoml
scas
cmp
mov
popa
adc
movsb
fcomps
movsl
loop
flds
ret
out
dec
into
add
dec
in
iret
xorl
dec
shl
cwtl
fdivs
sub
add
stos
mov
in
scas
aas
inc
jno
xchg
inc
mov
je
push
push
fwait
pop
adc
popa
inc
scas
lock
notl
xchg
aam
pop
clc
jbe
daa
fcom
add
push
stos
ljmp
fidivrs
jecxz
pop
loop
shll
dec
jmp
rcll
leave
out
push
mov
adc
mov
inc
sub
jp
aam
push
add
xchg
data16
js
xor
lea
in
mov
leave
push
xchg
rcr
ret
sets
mov
sub
push
stos
int
int
jmp
pop
lea
jg
ja
shrl
and
mov
cltd
lcall
jp
push
notl
cmc
mov
mov
ret
mov
shrl
jae
mov
loopne
loopne
fldl
or
mov
add
js
pop
pop
xchg
arpl
imul
shrb
inc
jecxz
clc
pusha
push
xchg
jne
mov
fs
rcrl
sbb
adc
hlt
sti
jb
pop
scas
or
out
shll
push
mov
out
push
xchg
push
mov
rcll
sarl
xchg
outsb
jne
shrl
lods
nop
cmp
push
jp
leave
int3
addl
lret
out
sub
inc
push
rcll
sbb
fmull
xchg
adc
sub
rcr
jae
cmpsl
xchg
div
xlat
aaa
push
pushl
cwtl
or
mov
sbb
mov
push
pop
outsl
rcll
loop
pop
and
shll
mov
ret
imul
pop
push
stc
test
push
es
xchg
and
fsubr
pusha
or
mov
les
aad
mov
adc
mov
std
loop
arpl
pop
lcall
lods
or
shll
xchg
and
shrl
fwait
js
filds
cli
xor
outsb
rorl
pop
jns
push
fsubrs
test
aas
jg
aam
mov
sarl
or
fistl
jnp
jns
xor
test
int
adcl
xchg
cmpsl
push
mov
mov
jmp
rcll
loopne
lock
or
shll
mov
test
aaa
mov
xor
rorl
inc
xchg
mov
adc
mov
enter
mov
fistl
mov
in
repnz
add
rcr
fidivs
loopne
aam
call
enter
cmpl
rol
add
jbe
dec
and
cmpsl
mov
mov
pop
lods
adc
into
sbb
nop
sub
loope
repz
jp
scas
adc
cmpsl
repz
add
mov
cmp
loop
pusha
pop
or
mov
inc
sbb
test
ret
out
pop
cld
and
sarl
fxch
pop
std
mov
rol
jp
andl
test
cmp
adc
out
rorl
mov
dec
push
xchg
rorl
lahf
mov
xchg
sarl
fistl
add
inc
scas
pop
jg
sub
rolb
js
mov
fcmovu
xchg
sahf
and
push
dec
sarl
push
jo
imul
cmp
mov
sub
rorl
lock
rorl
sub
call
add
int
mov
lahf
and
sub
mov
out
mov
xchg
ds
sbb
fdivrl
mov
xlat
enter
std
pop
out
mov
das
rolb
and
add
push
sub
dec
icebp
mov
jge
ret
jne
adc
or
pusha
inc
dec
cmpsb
jnp
scas
in
es
and
xchg
fwait
xchg
pushf
repnz
add
loopne
std
xchg
fwait
cmp
inc
sarl
lret
jo
fisubrl
cmp
jl
cmpsw
mov
popa
xchg
pusha
dec
lods
jae
fcmovbe
xor
add
add
mov
dec
cmp
fsubrl
sarl
cltd
pop
add
aas
outsl
dec
sub
loope
mov
adc
push
add
cmp
and
jmp
push
add
les
mov
mov
pop
pop
add
push
mov
bound
adc
inc
jns
sub
in
clc
mov
ja
rcl
ljmp
push
cmp
in
push
cmp
scas
xchg
cld
shll
cmp
ret
adc
mov
xchg
cld
clc
shl
or
fld
iret
sub
pop
pop
jecxz
cmp
add
scas
pcmpeqw
shl
jmp
inc
inc
hlt
push
stos
rcrl
jbe
or
jle
rcl
dec
cmp
lods
rcrl
pop
sub
sbb
add
ficompl
dec
into
and
roll
test
mov
inc
dec
jp
mov
pop
ds
cmpsb
adc
cmp
scas
mov
pusha
shrl
shrb
add
sbb
cmpsb
mov
and
sub
nop
out
sarl
xchg
ror
xor
rcl
pusha
push
lret
push
adc
mov
lret
test
roll
pushf
xchg
out
std
aaa
xor
cmp
mov
adc
dec
roll
push
subl
sub
mov
push
push
rclb
enter
aam
lock
cs
vsqrtsd
shr
push
push
push
push
fdivrl
mov
add
xchg
not
mov
int
xchg
push
dec
scas
shrl
pop
lahf
call
xor
rorl
arpl
push
sbb
inc
inc
mov
add
mov
push
and
adc
mov
fcmovne
hlt
jle
xchg
xchg
jns
lea
mov
sar
pusha
mov
shll
mov
adc
test
cltd
fsubp
mov
mov
shll
sub
rcll
lock
or
rcrl
xor
adc
xchg
js
pop
xchg
mov
dec
jb
xchg
jae
push
out
stos
icebp
push
arpl
jno
ss
nop
js
les
push
test
cmp
and
fldcw
movsb
sbb
inc
pop
mov
shrl
jne
push
rorl
mov
mov
push
mov
outsl
dec
shll
loopne
lods
or
mov
das
mov
xchg
add
leave
mov
sbb
jle
xchg
rorl
out
xchg
lret
std
rcll
lcall
dec
loope
shll
insl
push
add
call
adc
dec
add
ret
push
inc
add
lret
cmc
jmp
dec
roll
aam
out
roll
jbe
test
in
or
ror
imul
cmp
arpl
push
int
cli
push
mov
mov
mov
addb
enter
cmpsl
mov
inc
insl
sti
movsl
mov
lret
cli
dec
mov
roll
ret
pop
sbbb
gs
aam
int3
les
inc
stos
fwait
lds
ss
push
inc
pop
mov
xor
leave
or
jge
in
mov
dec
sbb
sti
rcl
mov
mov
out
in
xchg
insl
jmp
sbb
fistpl
aaa
and
in
out
adc
inc
cwtl
ret
push
pushf
outsb
aam
xchg
sahf
adc
roll
mov
mov
xorl
inc
xchg
adc
lock
rorl
and
insb
aad
ja
xchg
test
adc
int
pushf
out
ret
xor
mov
sti
xor
repnz
mov
sub
dec
dec
cwtl
mov
dec
js
jb
test
movsb
cmp
loope
shrl
lock
fs
pop
sub
test
mov
js
rorl
int
fstps
xor
cmpsb
scas
adc
mov
call
add
loopne
sarl
push
mov
pop
adc
int
sarl
push
mov
popa
adc
xchg
jmp
loopne
push
add
xor
pop
out
cmp
test
lods
and
mov
mov
sarb
loopne
sbb
aas
push
jl
bnd
lds
adc
cmp
xor
sub
es
addr16
pop
pop
rcll
popa
dec
xor
imul
mov
mov
push
mov
adc
addr16
sub
ja
adc
lret
dec
psrlq
out
fcom
test
ds
mov
in
popf
adc
mov
aad
jb
ficompl
sub
std
mov
ds
ja
rcl
inc
popf
subb
inc
rcl
sbb
stos
stos
sbb
or
shlb
lret
ss
dec
je
lods
lock
mov
repz
add
fincstp
iret
jns
imul
dec
shlb
xor
dec
dec
push
mov
in
inc
lret
sub
scas
clc
shrl
inc
sub
aam
jne
cmpsl
push
xchg
adc
test
sub
arpl
js
lea
and
scas
push
cmp
mov
clc
and
cmc
rorl
ja
pop
pop
push
jnp
fs
repz
movsb
jb
adc
mov
inc
add
push
adc
loope
sub
dec
mov
shll
das
pushf
xor
jne
leave
mov
add
push
repnz
push
push
outsl
jnp
lret
sbb
and
mov
jnp
cmpsl
cmp
jno
aad
scas
inc
jae
add
dec
sbb
sar
xor
or
mov
jg
mov
sbb
outsl
push
lcall
test
mov
xor
push
int3
jne
push
sub
cmpsl
lea
out
push
xchg
lds
xor
fcoms
xlat
pop
inc
xchg
inc
add
mov
insb
sub
cltd
and
repnz
je
jns
rorl
push
cmp
enter
pop
int3
push
and
int
outsb
shll
xchg
popl
mov
xor
pop
sbb
shrl
leave
fcom
in
or
cli
nop
jno
shl
xor
jg
mov
mov
mov
dec
xchg
fcmovnbe
or
aad
test
in
data16
fisttpll
stos
xor
pop
shll
adcl
sbb
lock
aaa
call
push
inc
cld
mov
stos
les
lods
rcl
and
add
shll
push
inc
cmpb
test
rorl
push
add
movsl
dec
roll
mov
insl
rorl
daa
and
lret
mov
loop
dec
jecxz
xchg
aaa
inc
xchg
roll
call
inc
rorl
fsubrp
aam
and
js
mov
add
data16
cltd
push
and
push
and
dec
repz
and
add
aam
incb
jae
add
aad
iret
sbb
pusha
cmpsl
ret
mov
das
mov
int3
cmp
test
adc
lock
loope
sbb
jp
pop
push
sub
outsb
inc
in
jge
daa
sbb
loopne
add
pop
sbb
lcall
pop
push
out
stos
mov
jecxz
lret
rcrl
ja
xchg
push
push
repnz
jbe
push
dec
subb
xor
and
roll
negl
mov
in
pop
pop
leave
cltd
rorl
dec
roll
xchg
push
loope
adc
ss
mov
aam
in
int3
subl
push
outsb
lock
shl
push
dec
lods
mov
enter
add
loope
movsl
pop
shrl
gs
jno
fs
test
popf
aad
sub
xchg
pop
mov
jae
rcll
pusha
inc
int
cwtl
xor
adc
and
mov
xchg
cltd
repnz
roll
gs
rcll
sahf
jbe
pop
jmp
fiaddl
sub
add
mov
cwtl
shrl
out
adc
shl
add
pop
add
xor
cmp
stos
imul
iret
fsubrl
cltd
cmpsb
jl
jo
sub
loopne
xchg
xchg
adc
aas
mov
loop
repnz
xlat
je
rorl
dec
cmp
stc
cli
imul
popf
fnstenv
in
pop
jle
loop
push
imul
cmpsl
dec
jecxz
adc
mov
or
out
aaa
jmp
jmp
stos
xchg
xlat
insl
ljmp
mov
mov
cmp
cld
loopne
arpl
cmc
jg
xchg
ljmp
push
or
or
lahf
jecxz
cld
sub
test
or
cmp
sub
btc
rcr
inc
daa
adc
or
and
push
andb
imul
sub
xchg
add
int
testl
mov
shlb
fnstcw
mov
imul
in
adc
xchg
inc
inc
scas
adc
mov
jmp
fisttps
add
xchg
test
xor
arpl
sub
rol
bswap
scas
aad
idivl
clc
mov
or
jne
aam
stc
push
pop
into
sub
shll
sti
xor
jno
aad
not
in
sbbb
mov
fucomp
xchg
adc
nop
push
xchg
rclb
cmpsl
mov
fnsave
pop
push
mov
stos
jmp
lret
push
cld
sub
into
sub
pop
fsts
adc
loopne
sbb
push
ss
mov
imul
pop
xchg
testb
push
in
cwtl
jne
sarl
mov
fwait
jno
sbb
mov
mov
ja
push
imul
mov
mov
ds
lods
xchg
fiadds
loopne
or
fucomi
mov
mov
adc
xchg
loopne
lods
xor
mov
adc
mov
xchg
daa
lock
lcall
jg
jecxz
lret
mov
aam
int
in
adc
adc
or
dec
mov
xchg
lret
lcall
lods
sbb
jae
mov
xlat
icebp
push
mov
jo
xor
mov
lahf
mov
mov
test
roll
and
cmp
sarb
repz
fwait
dec
push
mov
lock
adc
sbb
and
outsl
or
push
into
pushf
mov
mov
xor
and
adc
insl
mov
push
shrl
dec
mov
jbe
push
call
outsb
inc
iret
ljmp
stc
mov
nop
add
xor
or
aam
mulb
jno
push
cli
mov
sbb
xor
push
inc
sti
dec
sar
mov
or
sbb
adcb
push
cmpsb
pop
addl
mov
rol
jbe
jns
outsb
or
pop
int3
rolb
dec
adc
ffree
cltd
sar
sahf
and
call
dec
push
pop
repnz
push
out
xchg
es
shl
pop
dec
dec
push
add
mov
rcrl
or
test
pop
les
cmpsb
in
fisubl
mov
mov
lea
adc
push
xor
xchg
ss
clc
pop
rcl
cmpsl
outsb
out
inc
shll
shl
rorb
push
mov
cmpsb
hlt
insb
and
pop
xchg
scas
mov
sub
sub
inc
js
xchg
inc
mov
shll
mov
sub
sub
or
dec
dec
int
adcl
jo
pop
js
fabs
rcll
shrb
fwait
inc
mov
fs
adc
mov
pop
shll
mov
inc
shrl
sahf
mov
rcl
dec
fs
scas
sub
xchg
in
xchg
adc
dec
add
loopne
mov
mov
shll
adc
ficoml
rcll
mov
popa
sbb
xchg
xchg
cs
aam
ret
sub
mov
rorl
adc
jg
pop
pop
aam
icebp
inc
cwtl
xchg
mov
jecxz
in
xchg
rorl
repnz
lods
pop
push
je
mov
fwait
mov
in
cmp
fcoml
es
aaa
popf
mov
mov
lret
mov
mov
mov
fs
fwait
inc
push
and
adc
pop
jmp
aam
enter
xchg
std
lods
rcll
xor
pop
sarl
or
ds
push
rcrl
cmc
icebp
cmp
adc
rorl
dec
and
or
push
sbb
les
repnz
cmp
lock
xchg
pminsw
aam
inc
mov
subl
fwait
dec
in
push
push
icebp
cmpsb
lods
popf
sub
mov
jecxz
add
je
and
rol
jo
gs
mov
shrb
das
xor
cmpsl
mov
inc
ret
arpl
shrl
sbbl
jo
mov
inc
shl
push
cld
movsl
int3
test
clc
shrl
arpl
pop
lds
sbb
mull
test
push
cmp
rcr
xchg
jl
negl
shrl
jge
andl
lahf
sti
popf
or
fldl
xchg
pushw
repz
std
mov
insb
daa
shll
mov
fidivs
sub
jne
cld
shl
nop
daa
cli
aaa
add
rorl
out
sbb
mov
adc
xor
xlat
cmc
data16
xor
push
ror
fsts
jae
rorb
notb
pop
dec
call
dec
jge
or
sarl
and
in
jl
mov
outsl
rcll
jge
cmpsb
or
jb
sbb
out
mov
shll
hlt
rcll
cmpsl
push
cmp
mov
aas
or
push
pusha
push
add
lods
xlat
shll
dec
inc
and
push
mov
jecxz
cmp
cltd
shrl
stc
daa
dec
repnz
lcall
insb
lods
jecxz
outsl
and
loop
jecxz
xor
mov
sarl
inc
adc
xchg
cmp
enter
rcrl
fcom
cli
shll
xchg
xor
jg
pop
divl
push
add
enter
scas
jns
and
test
push
cmpsb
fst
pop
in
sbb
mov
jmp
aas
fldl
push
out
pop
lock
or
dec
bound
test
roll
jp
or
inc
mov
xor
aaa
shrl
xlat
cli
sub
movl
push
sarl
jb
dec
iret
push
dec
roll
mov
nop
adc
cmp
shrl
or
andl
int3
ret
movsb
addr16
fstpt
dec
test
sbb
push
insb
in
lret
pushf
imul
xor
scas
pop
dec
mov
shrl
andb
lret
jb
aad
sbb
xchg
bound
jge
mov
xor
dec
rcl
ret
mov
inc
shl
int3
inc
jge
dec
enter
lds
movsb
out
push
ss
shll
ja
jge
push
add
gs
roll
xchg
pop
push
xchg
push
xchg
pop
fwait
add
sarl
cli
addr16
shrl
inc
in
jo
inc
shll
add
rcrl
sub
xchg
ljmp
dec
lods
sbb
shr
es
mov
ret
jmp
mov
test
push
inc
adc
fwait
xchg
rcl
push
xchg
fdecstp
and
push
fisubrs
mov
mov
push
loop
fldcw
loopne
shrl
das
pop
xorb
je
lods
rcl
rclb
sub
shll
ror
push
sbb
adc
hlt
mov
xor
push
push
scas
int
push
fsts
dec
lock
shll
into
jbe
xchg
lcall
loopne
add
push
jge
add
and
jp
fidivl
xchg
push
sarl
xlat
mov
popa
sbbl
push
adc
in
mov
sbb
rol
jmp
jbe
push
iret
cltd
out
pop
ja
movsl
cwtl
and
mov
aaa
mov
cmp
push
xchg
mov
adc
fwait
mov
rcrl
or
mov
xor
pop
push
outsb
xor
cmc
ror
sbb
adc
rcrl
shll
jmp
mov
pop
cld
je
cs
cmpsl
mov
jg
cld
xor
ds
sar
cmc
inc
cmpsl
pop
adc
out
xchg
xchg
xchg
lahf
bound
sub
into
inc
into
sarl
pop
in
sarl
insl
push
push
inc
call
inc
inc
add
xchg
js
iret
dec
xchg
xchg
mov
ss
mov
cmc
hlt
ja
sbb
add
inc
fdivl
gs
ret
xor
push
push
inc
pop
lret
jl
pop
jnp
in
pop
js
mov
inc
shl
mov
je
push
push
xor
test
mov
arpl
js
rorl
pop
jbe
rcll
rolb
cld
or
mov
xchg
je
add
adcl
push
xchg
shll
fbstp
rcrl
mov
sarl
out
ficoms
call
xor
push
nop
movsl
sbb
add
or
mov
xchg
push
sub
add
push
push
sub
fmull
dec
rcrl
inc
mov
sub
xchg
notb
shrl
ljmp
sbb
mov
scas
shll
sbb
leave
shll
or
insl
pop
push
mov
mov
shll
or
and
push
das
ljmp
out
scas
xchg
push
stos
pusha
test
pushf
inc
shll
repnz
lock
leave
xor
sahf
in
int3
pop
xlat
jecxz
mov
loopne
add
sub
aas
sarl
in
mov
inc
dec
add
mov
add
sbb
shll
cltd
lret
push
jo
icebp
dec
adc
and
xor
fstp
repz
ret
xchg
jns
out
jge
ss
andl
mov
aam
mov
push
jae
test
push
out
lods
add
cmp
mov
jne
repz
test
pop
xchg
subb
mov
mov
shrl
dec
xor
nop
test
js
or
push
in
mov
mov
int3
dec
push
jecxz
cmpsl
fbstp
adc
insl
mov
jo
nop
jp
dec
push
sbb
adc
mov
incb
bound
or
shll
aam
movsl
push
hlt
jbe
fsubrl
in
jge
add
jo
data16
inc
std
pop
inc
shl
sub
mov
arpl
insl
popa
push
inc
orb
xchg
clc
xchg
jmp
rolb
imul
sbb
fldl
and
int3
imull
cli
dec
and
out
xchg
das
pop
or
pop
lock
cmpsb
push
test
mov
roll
jge
or
imul
lahf
mov
push
xchg
js
icebp
outsl
and
lea
lret
mov
mov
stos
cmc
shl
shrl
inc
cli
test
sarl
out
pushf
rcrl
mov
mov
shlb
movsb
push
inc
mov
adc
fwait
pop
pop
pop
jae
mov
inc
xor
xchg
sar
cmpsb
ret
adc
hlt
out
rorl
imul
aam
or
jecxz
int
xchg
das
shll
mov
dec
sub
enter
mov
loope
gs
imul
mov
leave
shll
push
sub
cmc
outsl
sbb
decl
roll
int
pop
mov
mov
inc
lea
adc
and
test
shrl
push
movsl
in
dec
flds
lret
mov
sahf
or
mov
bt
xchg
shrl
push
mov
lods
stos
jge
inc
cs
pop
aaa
movsl
mov
test
jo
add
sub
pop
jmp
ficomps
sub
xchg
mov
aas
imul
repnz
adc
push
push
sar
cmp
and
insl
daa
push
adc
add
ret
inc
pop
shl
or
cmp
push
or
mov
xchg
lret
fs
mov
shll
add
jmp
ja
imul
testl
cltd
xchg
mov
imul
rcr
xor
xchg
out
pop
push
and
dec
gs
mov
shr
repz
movsl
pop
fsts
or
and
xchg
jns
stos
cld
lods
cmc
push
or
pop
cltd
xchg
imul
sub
negl
lods
stos
adc
sub
push
lea
add
out
shl
rcll
gs
xchg
rol
push
inc
sarl
aam
stos
mov
rcl
fcompl
jo
mov
pop
add
mov
rorw
lea
test
shll
imul
rcrl
cmp
subl
pop
popf
mov
rorl
mov
push
xchg
imul
and
rcll
push
sti
cli
dec
mov
sbb
movsb
dec
jae
roll
ja
cmp
cmp
dec
test
dec
mov
stc
faddl
jne
jg
nop
xchg
cmpsl
leave
mov
mov
lock
lcall
cmpsb
mov
push
push
fcoml
in
stos
rcl
imul
push
imulb
loop
incl
lock
xchg
mov
sbb
nop
lcall
in
inc
loop
mov
fldenv
sbb
imul
popf
xor
roll
xchg
lea
ds
out
push
lock
add
push
sub
inc
or
rcll
dec
mov
adc
shr
cltd
pop
add
push
pop
xor
push
and
cmp
sarl
aas
jecxz
popf
int
test
pop
in
xchg
shlb
bound
mov
shl
sahf
idiv
inc
iret
push
roll
je
pop
rorl
push
mov
jbe
push
popa
testl
adc
rcrl
inc
fildl
movsl
ret
jnp
test
push
iret
sbb
inc
add
mov
push
in
mov
imul
fcom
lock
mov
push
adc
test
lcall
orb
sub
fcmovnbe
and
cmp
mov
jle
popa
mov
push
roll
rorl
pop
mov
rorl
repz
in
pop
iret
shrl
icebp
and
xchg
mov
sarl
lods
dec
addl
int
sbb
roll
mov
cmc
dec
ljmp
jbe
push
loope
in
xchg
xchg
into
jecxz
or
jne
les
cmc
push
adcb
iret
push
mov
filds
pop
cli
ljmp
push
clc
sbb
push
add
fnsave
inc
jge
sbb
dec
int
inc
adc
cmp
mov
jmp
push
vaddps
mov
lods
inc
mov
sahf
mov
xorb
pop
shrl
mov
outsb
cmc
xchg
push
xor
ljmp
mov
ds
pusha
xchg
shll
inc
jae
lcall
xor
cmp
rorl
mov
inc
outsl
sub
rcrb
shl
inc
jnp
mov
pop
fnsetpm(287
mov
roll
or
xchg
push
aas
xchg
push
pushf
adc
arpl
xor
or
mov
push
rcl
sub
pop
xlat
dec
sahf
shl
enter
pop
shl
into
aam
cmpl
enter
xor
sub
sub
pop
mov
adcb
test
or
mov
scas
xchg
int3
lods
lds
lret
rclb
out
outsl
pop
out
push
outsb
sti
lods
push
or
ficoml
fisttps
mov
rorl
dec
arpl
sarl
repz
popa
push
incb
shll
pop
sbb
cli
std
sub
push
cmp
je
pop
in
imul
out
les
push
repnz
inc
xor
pop
or
sar
add
xor
into
shll
adc
push
cmp
jo
sub
fists
jno
inc
mov
push
inc
repz
sbb
pop
rcll
ds
addr16
cmc
push
call
imul
or
shrb
push
xchg
rcl
cmp
scas
xchg
and
shrl
cmpb
sub
push
and
xor
loop
fwait
lods
pop
xchg
sarl
sub
jo
das
cmp
add
mov
or
gs
shrb
jo
mov
rcll
push
xor
loope
andl
mov
rorl
data16
test
sub
mov
outsl
push
sbb
in
popa
scas
fldt
pop
lahf
clc
lea
iret
icebp
xchg
xchg
push
addr16
fsubs
and
out
and
sti
inc
lcall
movsb
lahf
pushl
iret
aam
push
std
ss
cmp
sar
rclb
jmp
sarl
sub
stos
shrl
add
push
cmp
jbe
push
rcll
and
lret
cmpsb
jmp
iret
daa
push
pop
or
sbb
sarl
push
aaa
adc
aad
shrl
jae
js
mulb
push
mov
jmp
inc
rorl
mov
sub
push
mov
inc
inc
mov
sahf
and
in
mov
sub
hlt
add
fsubr
out
lea
jl
sbb
shll
mov
push
push
inc
sahf
sub
mov
mov
push
cltd
mov
shll
lcall
jecxz
stos
test
mov
daa
shrl
std
sbb
roll
add
xchg
add
js
fwait
int3
popl
test
xor
jne
sahf
shrl
xor
icebp
add
mov
pushl
shrl
insb
fcmovnbe
mov
jns
rcrl
mov
push
pop
stos
fstp
jnp
jecxz
mov
aas
mov
clc
shl
and
and
push
sbb
dec
lock
sub
int
ljmp
aaa
push
or
stos
daa
ds
mov
dec
out
xor
imul
ss
push
jge
scas
push
or
or
mov
push
dec
mov
jae
insl
sub
lods
shll
xlat
imul
dec
sub
inc
roll
pop
shr
pusha
sbb
ja
mov
lock
addr16
jbe
fs
or
jae
sbb
xor
and
orb
mov
fwait
sbb
hlt
rcll
push
js
sbb
pop
rol
or
aas
add
rorl
dec
jb
movsb
mov
repz
jmp
mov
pop
inc
shr
cwtl
mov
lahf
fistpll
into
roll
rolb
pop
mov
rorl
xchg
mov
rcll
testb
shll
mov
mov
jnp
xlat
sahf
xor
iret
out
into
sbbl
shrl
jecxz
mov
pop
adc
mov
insb
sar
xor
xchg
lcall
out
scas
and
mov
xor
rorl
sub
push
fdivrl
dec
jae
mov
pop
push
sbb
daa
loope
addb
xchg
xor
mov
test
ja
mov
jae
movsl
push
clc
dec
int
adc
fisttps
shlb
pop
sarl
xchg
outsb
jecxz
addl
rcl
out
fptan
cli
push
addr16
clc
dec
add
rcll
or
int
lods
ror
scas
xor
xchg
rorl
inc
add
xor
mov
iret
shll
push
cwtl
push
les
xor
mov
add
xchg
aam
repnz
out
sbb
cmp
and
jb
ror
es
push
rcll
aam
imul
dec
shrl
cmpsl
sbbb
outsb
mov
adc
jbe
xor
jnp
bound
icebp
jge
xchg
jl
xchg
dec
mov
pop
sti
dec
and
cld
jb
xor
cmc
filds
add
popa
enter
push
in
and
push
sub
movsb
cmp
push
cmp
inc
test
ljmp
loope
imul
pop
inc
xchg
push
push
stos
fxch
lahf
or
push
cmp
loop
sub
lds
stc
lods
pop
sbb
jge
shrb
xorb
mov
roll
mov
mov
pop
mov
push
adc
sub
inc
pop
fildl
xchg
repnz
ficoms
cli
test
dec
arpl
push
leave
enter
push
dec
scas
dec
shrl
clc
insb
push
mov
repz
push
jl
rcrl
jne
adc
andb
scas
sar
xlat
push
sbb
and
cs
flds
inc
sarl
std
call
push
enter
sbb
roll
xchg
icebp
xor
sub
fmull
pusha
in
leave
cwtl
jecxz
mov
test
arpl
cld
hlt
mov
jg
sbb
shl
fdivl
scas
mov
jae,pt
inc
popa
xchg
mul
js
push
incl
insb
or
sarl
ret
sbb
test
push
xor
ror
xchg
in
pop
mov
mov
jbe
xchg
imul
xor
shrl
addr16
enter
sarl
push
call
xlat
shrl
hlt
ljmp
dec
dec
das
fdivrl
xor
daa
pop
lock
inc
push
arpl
push
dec
push
jecxz
sbb
das
fwait
in
imull
outsb
mov
jmp
mov
loopne
sub
xchg
rol
mov
jnp
enter
push
in
stos
gs
icebp
test
es
sub
sti
ljmp
fstpt
int
mov
sbb
push
test
jbe
fnsave
sahf
shr
sbb
xchg
inc
mov
mov
jo
push
pop
out
mov
shr
sbb
clc
sub
bound
data16
test
xchg
mov
stos
push
jmp
call
shl
mov
xor
loop
mov
jle
or
scas
vmaxsd
mov
sub
sbb
lods
shr
insl
pushf
adc
push
lret
clc
xchg
orl
xchg
jle
insb
dec
rorl
data16
rcll
jbe
dec
push
fucomp
mov
jecxz
into
push
mov
cmp
mov
mov
rolb
xorb
pushf
inc
stc
mov
fadds
shrl
push
cli
lods
int3
pusha
sbb
xor
push
ret
inc
push
push
and
push
jo
stos
jmp
lds
push
sbb
jb
jbe
dec
insl
xchg
out
cmp
sarl
mov
repz
jnp
daa
inc
cltd
xchg
shrl
mov
adc
iret
push
mov
pop
sbb
in
add
pop
inc
pop
repz
mov
shll
sahf
jmp
dec
js
ror
inc
xor
shrb
mov
fs
lds
pop
lods
mov
pusha
insb
and
daa
xchg
add
and
pushf
sbb
js
add
call
jg
xchg
sub
sbb
push
es
cmpsl
lock
enter
insl
pop
mov
mov
das
or
sbb
rcll
int
lret
outsl
cltd
ret
sub
es
mov
xor
fdiv
int
repz
dec
orb
mov
cld
xchg
shr
ret
test
insb
scas
mov
pop
xor
rcll
dec
addr16
sbb
pop
xchg
divl
call
repnz
mov
lods
push
jg
insl
cs
mov
rcl
add
push
fcmovb
repz
rcrl
in
cmp
xchg
dec
rorl
and
xchg
sub
pop
repz
addr16
push
fsubs
cld
mov
push
cmc
xor
les
out
adc
popf
fdivrs
std
or
jae
cmp
xor
rorl
sbb
mov
dec
mov
fnstsw
fisubrs
inc
sarl
cmp
jns
push
stc
leave
fidivs
insb
rol
cld
mov
xchg
into
pop
cmc
xchg
jp
adc
test
jbe
in
xor
push
xchg
sub
dec
sbb
cmp
and
cmpl
sqrtps
pop
lcall
fsubl
push
mov
repz
lods
scas
fcmovnbe
lret
sub
xlat
test
lcall
repnz
gs
mov
xchg
sbb
jge
mov
shrl
stos
push
mov
sarl
cli
fiaddl
rol
lea
ljmp
push
arpl
ret
pop
cmpsb
pop
in
imul
popf
scas
push
ret
in
cmp
push
xchg
or
clc
repnz
sub
je
cwtl
js
pop
xchg
insb
rcl
sub
pushf
push
adc
rorl
movsb
cld
bound
push
fcomp
push
xchg
inc
cmp
shll
fdivp
xchg
fs
xor
mov
sub
nop
ja
push
push
xlat
leave
and
dec
mov
stos
aam
sub
mov
mov
lods
push
aas
fsubl
dec
inc
xchg
adc
and
mov
in
cmp
sub
sarl
aam
mov
cmp
sbb
add
push
insb
lock
out
into
loop
dec
push
mov
scas
inc
fisttpll
rclb
data16
hlt
push
mov
enter
pop
or
aam
out
aad
and
stos
sub
mov
bound
pop
adc
mov
cmp
test
shll
rorb
adcb
movsl
outsb
sbb
push
xchg
addr16
sti
das
subl
adc
xchg
fcom
cmp
push
clc
icebp
push
fdivrl
sbb
push
fisttpl
loopne
sub
stos
icebp
cmc
fucom
sub
jns
sahf
jecxz
jo
stos
sbb
out
mov
push
pop
lock
cmovb
dec
stos
test
aaa
sub
stos
lods
dec
into
shl
inc
cmp
shl
jmp
loope
rcrl
scas
mov
outsl
push
shll
jmp
loopne
filds
jno
adc
jp
cs
cmpsl
rcrl
mov
dec
arpl
insl
xor
cmp
jmp
clc
dec
adc
loope
aam
orl
shrl
push
pop
arpl
das
jmp
push
jg
fiaddl
test
jb
movsl
cmp
push
adc
pop
in
cmpsb
cli
mov
mov
xchg
sahf
add
mov
or
cmpsb
and
mov
push
dec
addr16
fdivs
sarl
mov
push
movsl
shl
rcr
pop
fcomps
scas
fdivr
xchg
xlat
mov
adc
push
dec
mov
sarl
pushf
sbb
aam
cmpl
mov
repnz
inc
mov
push
push
mov
int3
movl
cmp
shrl
cmp
mov
imul
mov
rcll
mov
push
pushf
repz
pop
outsb
dec
rcrl
xor
shll
sub
pop
popa
mov
adc
ror
jle
adc
jno
inc
push
das
in
andb
out
and
les
out
push
mov
into
loope
adc
data16
int
hlt
rorb
cld
popf
scas
inc
mov
movsl
notl
ds
mov
rcrb
bound
addr16
xchg
hlt
shll
out
int3
shll
xor
xor
lods
in
loop
movsl
js
mov
add
fidivl
or
cmp
mov
push
roll
xchg
cwtl
mov
mov
sub
stos
aas
jne
mov
and
les
fwait
mov
jb
cmp
aam
jecxz
push
clc
shll
popf
xor
mov
lods
dec
sar
test
pop
adc
lahf
js
adc
mov
pusha
stos
and
push
jne
jmp
dec
add
jle
fadd
xchg
shl
fs
jno
repnz
pop
arpl
roll
xchg
adc
sarl
daa
scas
sub
dec
roll
dec
sub
test
mov
jae
rcll
cmp
sbbb
jmp
shl
adcl
fidivrl
xchg
sub
add
aad
pushf
fcomps
sub
ja
adc
lret
pushf
jno
rclb
in
push
jne
sarl
cmpsb
mov
sarl
stos
xor
out
adc
fwait
inc
inc
mov
mov
loope
push
out
xchg
adc
shll
and
cmpsb
and
shrl
scas
pop
and
cmp
clc
push
repnz
test
mov
xchg
add
mov
rcr
rorl
loopne
mov
rcr
lcall
sar
addl
mov
pop
fidivrl
sub
inc
out
adc
imulb
cmp
or
rorl
nop
lea
pop
leave
lds
push
dec
rorb
or
inc
addr16
push
xchg
push
xchg
pop
push
adc
scas
cmp
or
inc
and
jae
movsl
push
shll
pop
dec
call
pop
inc
fs
push
popa
inc
sbb
adcl
jge
rep
divb
ss
aas
sbb
mov
fldcw
cmc
enter
lds
and
mov
dec
xchg
stos
pusha
pop
lock
inc
push
rolb
fs
jb
dec
test
xchg
in
cltd
dec
mov
daa
rcll
inc
lcall
or
and
pusha
jg
xchg
cmp
insb
in
repnz
inc
cltd
ret
add
stos
adc
pusha
js
sub
sbb
cwtl
test
push
xchg
push
inc
icebp
mov
jg
loopnew
mov
call
rcl
fistpl
and
sarb
jbe
mov
jo
and
popa
fstpl
cmp
shll
adc
lahf
in
jae
clc
push
stos
push
mov
stos
shll
dec
shrl
in
mov
sub
and
fnsave
sarl
fdivrs
rcpps
and
addr16
dec
pop
outsb
clc
ror
mov
movsl
loopne
call
jp
or
xorl
arpl
enter
dec
ret
jmp
sar
sbb
pushf
imull
mov
in
leave
shll
imul
and
lds
adc
and
icebp
jecxz
jb
shrl
sti
aad
pop
popa
out
jnp
cli
adc
mov
xchg
rcll
sub
sub
imul
lds
rcl
xor
cmovs
inc
shrl
pop
test
out
jo
add
jge
mov
mov
add
aam
js
cld
xchg
pop
shrl
mov
test
in
push
jo
sub
add
aas
jnp
rcl
rcrb
insb
cld
rol
pop
jl
xor
shrb
mov
mov
jg
pop
movsl
adc
mov
inc
mov
xchg
and
push
adc
in
pushf
adc
fwait
pop
mov
cwtl
inc
xor
xorl
xchg
lods
sarl
enter
push
fdivl
or
dec
aam
mov
inc
inc
jmp
jecxz
sti
fs
xlat
insl
lret
inc
adc
shll
lret
int
fs
sti
lret
rcl
scas
ds
and
rclb
xchg
in
cmp
loopne
add
or
scas
flds
fdivrl
addr16
lds
inc
dec
jl
iret
shll
popa
mov
stos
lods
sbb
mov
cs
sbb
add
or
cmp
test
sbbb
cmp
subl
aaa
std
push
rcll
xchg
or
mov
fwait
shrb
lods
cmp
in
and
popf
mov
pop
inc
pusha
incb
fdiv
push
xor
lea
mov
ljmp
cmp
movzbl
jmp
xchg
push
xor
lret
shl
xchg
pushf
or
out
sar
lds
adc
aas
xchg
mov
std
in
push
xor
scas
test
lahf
xor
fs
mov
shll
rcrl
punpckhdq
out
rol
nop
and
aad
stos
inc
pop
push
or
mov
jnp
fmull
mov
lods
aaa
cmpsl
shrl
jg
xor
fldl
notl
scas
gs
rol
mov
into
xchg
fcmovbe
mov
and
add
mov
pop
jnp
push
cmpl
popa
inc
rcll
pop
rorl
inc
cmp
arpl
mov
mov
sbb
adc
dec
cmp
mov
pusha
or
roll
xchg
test
pop
stos
shl
call
push
jno
xchg
inc
sti
repz
mov
icebp
pop
movsb
ror
jl
pmaxsw
push
test
je
adc
cli
sub
xor
nopl
cltd
pop
ror
push
xchg
lret
aam
in
cmp
push
rsqrtps
outsb
fmull
add
imul
jle
jae
popa
xor
pop
and
push
stc
lods
jb
or
xchg
pop
in
sbb
xchg
fldenv
push
push
decl
loop
testb
sub
mov
repnz
dec
mov
push
mov
jmp
mov
aas
arpl
fsubrl
cwtl
inc
enter
mov
dec
cmp
cltd
xlat
or
push
xchg
rcrl
scas
shrl
mul
std
dec
ret
push
mov
or
sub
pop
in
lcall
xchg
push
sbb
xchg
pop
fistpl
mov
jmp
dec
pop
test
shl
fwait
jbe
cmpl
mov
pop
mov
xor
push
sbb
pop
sarb
test
shlb
fnsave
inc
iret
pop
mov
stos
mov
shr
push
dec
sub
jl
pop
ret
out
rcr
test
shlb
popl
stos
and
pop
add
out
xor
mov
jle
in
mov
sbb
push
test
and
mov
pop
roll
insl
sbb
out
aas
mov
jp
mov
sub
xor
pop
test
mov
loopne
dec
shll
outsl
aam
or
pop
in
jl
pop
imul
into
rorl
sbb
outsb
mov
jbe
and
xorb
out
sar
sar
rcrl
addl
sbb
push
aas
sbb
sub
inc
lcall
int3
fidivrs
push
pop
lds
shll
out
in
cmp
dec
into
out
stos
rcll
jnp
mov
dec
add
jp
daa
pop
xchg
lcall
adc
mov
mov
pop
loopne
outsb
in
fnstsw
movsl
xchg
jl
cmc
shlb
shr
sbb
push
push
mov
fwait
mov
test
rcl
xchg
inc
inc
popf
xor
mov
bound
sub
pavgb
shr
add
pop
pop
sbb
xchg
loope
dec
mov
sub
sub
int3
into
mov
dec
cmp
aaa
rorl
pop
xor
out
jle
shll
mov
mov
sahf
fs
jmp
mov
pop
test
sbb
xchg
pop
push
fimull
adc
inc
sarb
rcrl
stos
add
loopne
inc
mov
or
xchg
arpl
scas
jnp
ficoml
xlat
test
xchg
xchg
or
popa
cmp
mov
int
sbb
movsl
loopne
fiaddl
enter
pop
sar
cmp
push
dec
inc
sarl
pop
aam
aam
mov
shll
jp
imul
je
sbb
lret
rcrl
add
es
jo
popfw
xchg
sbbb
dec
iret
paddd
mov
loope
adc
mov
sub
cmp
ja
lcall
dec
lahf
or
repz
sub
mov
xchg
cld
shll
adc
xlat
arpl
dec
popf
clc
xchg
adc
mov
dec
or
cmp
xchg
push
shll
test
test
repnz
rcrl
pop
orb
pop
inc
stos
xchg
dec
fwait
or
mov
sub
xor
mov
sub
scas
scas
movb
sub
mov
gs
push
and
pop
out
jmp
scas
repz
inc
mov
pop
shl
pop
lret
mov
cmpsb
inc
push
dec
fucomip
mov
jb
push
scas
push
sbb
arpl
cmp
xchg
push
and
test
or
or
pop
inc
cmp
in
iret
sbb
push
sbbl
inc
sbb
ror
movsb
adc
push
and
imul
dec
pusha
lcall
xor
mov
nop
push
inc
iret
mov
leave
mov
adcb
call
inc
sub
pop
jge
rcll
xchg
push
push
fdivr
mov
aad
adc
mov
jp
push
adc
rorl
es
add
sbb
nop
adc
loop
pushf
test
and
data16
or
imul
ja
lcall
cmpsl
out
out
add
pusha
add
daa
roll
dec
sti
mov
adc
xor
and
and
out
jecxz
adc
and
mov
popf
adc
in
or
mov
call
xchg
std
cmc
js
xor
hlt
in
sbb
fcomp
fildll
shl
mov
test
and
push
pop
test
jbe
js
jns
sub
test
aaa
mov
fcmovu
gs
icebp
rcrl
pop
adc
push
shll
in
adc
push
lock
push
bound
rcrl
test
std
sar
cmc
stos
sub
push
cmp
push
xchg
xchg
adcl
pop
xchg
adc
fs
call
insl
into
mov
mov
xchg
andl
rorl
jb
add
pop
aaa
jmp
out
adc
fs
xchg
shll
pop
imul
imul
add
lcall
mov
scas
push
shll
testb
jb
jmp
stc
mov
jp
dec
cli
test
call
ret
mov
sbb
mov
pop
push
dec
test
inc
jns
js
arpl
and
mov
pop
outsl
xor
push
out
or
or
movsl
rcll
xor
jmp
sub
xor
inc
xchg
jae
adc
sarl
mov
add
pslld
ds
xor
testb
sahf
repz
push
inc
imul
jle
cmp
push
roll
inc
push
lret
and
movsl
lcall
shll
and
push
push
iret
cmpsl
pushf
inc
ret
or
es
xchg
in
and
mov
inc
push
push
sub
in
aam
mov
xchg
gs
enter
pop
fdivrl
rcll
das
sbb
push
xchg
fs
mov
aaa
lea
or
scas
push
push
push
adc
int
inc
jecxz
lods
rorl
mov
adc
rcl
aaa
xchg
loop
bound
loopne
subl
dec
dec
inc
subl
mov
jl
add
mov
mov
and
cs
clc
jge
movsl
cmp
jle
jne
push
push
aad
movsb
cmp
mov
iret
in
cli
lds
dec
adc
sub
mov
cmp
dec
sarl
stos
mov
shlb
shll
setnp
cld
enter
sbbb
rcrl
dec
popf
mov
push
pop
xor
insl
push
push
lcall
cmpsl
push
ja
adc
mov
add
mov
inc
loope
lahf
sub
ljmp
outsl
repz
jmp
jno
xchg
jo
ljmp
vmovupd
adc
aam
leave
xchg
mov
or
lret
and
sub
dec
icebp
mov
pop
roll
jge
rcrl
sti
xor
sbb
fwait
cmp
adc
sub
xchg
addb
mov
sub
sub
add
lods
mov
xchg
movsb
rcl
mov
sarl
xor
cmp
mov
je
lods
adcl
sbb
stc
outsb
mov
test
test
sub
pop
cmpsb
not
rcrb
pop
xor
cmp
hlt
or
or
push
xchg
mov
dec
push
pop
jecxz
je
jbe
mov
out
sti
pop
js
sbb
ret
cmpsb
jae
push
andw
xor
mov
mov
in
inc
xchg
and
jne
adc
aas
nop
rcr
lahf
add
push
sbb
cwtl
cmc
shll
sub
mov
push
popf
push
xor
leave
push
shll
fdivp
aad
mov
jae
xor
negb
push
push
cmc
mov
rorl
les
data16
mov
shll
loop
shlb
shr
cmp
scas
imul
sub
xchg
push
rorl
inc
dec
or
fiadds
sbb
mov
inc
es
adc
aaa
push
leave
cltd
pushf
xor
push
notl
mov
jecxz
lods
jp
stos
out
rcll
outsb
jnp
shll
inc
aas
pop
rolb
xchg
clc
sbb
incl
pop
mov
fdivrs
xchg
push
sbbb
aam
push
mov
add
cmc
xor
inc
lret
fldt
push
test
test
mov
data16
mov
push
dec
mov
jo
dec
and
push
push
arpl
shll
adc
sub
test
aaa
cmp
cli
stos
mulb
mov
mov
xlat
mov
clc
push
xor
mov
loope
mov
ss
mov
sbb
push
lea
mov
insl
and
shr
sbb
hlt
dec
ljmp
fsubp
fiadds
rcll
daa
dec
sub
aam
sbb
mov
adc
imul
into
xor
xchg
adc
sbb
xor
pop
jb
xor
stc
or
arpl
notb
dec
rcrl
push
sbb
jg
lahf
push
add
push
testb
out
pop
lds
out
out
pop
and
cwtl
aam
scas
sbb
lods
aam
add
adc
insb
mov
mull
dec
push
pop
sbb
mov
stc
jmp
scas
mov
shrl
aad
inc
fwait
test
cmpsl
jnp
mov
sahf
sub
lock
nop
jge
xor
rol
hlt
adc
mov
shll
jle
pop
jnp
rorl
or
scas
insb
xor
data16
xchg
lret
pushf
mov
dec
pop
cs
push
mov
js
fadds
jp
and
lods
xor
dec
inc
int3
sarl
inc
dec
pop
enter
pop
gs
mov
shrb
jo
mov
mov
push
rcll
xchg
xor
mov
cmc
roll
int
mov
cmp
insl
xchg
and
xchg
add
aam
fcoms
test
jg
cmpsl
add
push
jl
fwait
sbb
and
mov
cs
mov
fadds
loope
sahf
mov
insb
sub
cmp
pop
or
iret
rcll
pop
xchg
rcrl
pushf
lods
add
mov
xchg
push
aas
inc
mov
shl
dec
data16
cmp
add
xchg
es
roll
jne
gs
mov
fbld
cli
xor
xchg
xor
adc
mov
pop
clc
adc
inc
iret
push
push
ja
pop
es
push
sub
cmp
jno
mov
cld
pop
subl
ljmp
stc
xchg
or
in
or
bound
sub
xchg
je
std
cmp
popa
jmp
lahf
push
in
and
or
stos
enter
clc
push
dec
ss
pop
xchg
movsb
xchg
xor
sub
test
roll
jno
xchg
imull
sbb
xchg
shll
push
xchg
inc
mov
dec
mov
in
rcrl
addl
mov
sub
and
arpl
xchg
ret
lret
pop
jne
cmp
mov
cmp
clc
pop
imul
xchg
xor
push
pop
rcl
cld
jns
push
loop
add
push
int3
aas
sbb
rol
movsb
jne
rorl
push
xor
out
out
stc
int3
sub
push
pushf
das
ficoms
xchg
push
mov
xor
daa
stos
test
sti
nop
dec
push
roll
xor
gs
decl
xor
sub
jg
call
push
hlt
imul
push
fcmovbe
xor
xor
xchg
cltd
negb
fcmovnbe
loope
adc
rorl
imul
sbb
enter
shr
or
and
jp
cltd
mov
push
imul
mov
dec
lea
int
repz
and
push
sub
pusha
add
push
inc
es
roll
mov
push
ficoms
cltd
addr16
pop
daa
and
out
cmp
mov
adc
and
arpl
test
shrl
cmp
xchg
push
mov
jo
and
sbb
roll
mov
pusha
jne
jno
and
xchg
stos
xor
repnz
fistl
in
aaa
push
cmc
pop
rcll
hlt
sbb
fst
xor
ret
mov
shll
out
sbb
imul
push
lock
addr16
bound
add
sub
imulb
stos
sbb
arpl
push
mov
rcrl
xor
mov
jle
shlb
iret
push
push
xor
mov
adc
pop
insl
xchg
aaa
inc
call
jp
mov
subl
test
ret
pop
add
push
push
mov
mov
or
aam
outsb
ljmp
pop
mov
push
into
scas
popa
rcl
inc
jno
imul
cmp
pop
cli
jb
ror
stc
in
or
pop
pop
jae
mov
sbb
ss
test
aaa
movsb
int3
push
adc
loope
inc
fistps
and
xchg
sub
xor
sub
inc
out
dec
mov
jge
popa
inc
sbb
fidivs
add
ret
xor
xchg
pusha
push
shrl
sbb
rcr
pop
dec
and
shll
mov
jnp
inc
or
hlt
push
inc
popf
xchg
push
adc
mov
push
arpl
xchg
mov
mov
shrl
fcmovb
roll
insb
pop
mov
das
adc
pop
sbb
pushf
fs
pop
rol
mov
xchg
repnz
movsl
mov
push
data16
mov
loop
pop
dec
mov
cltd
adc
lea
dec
mov
push
lock
xchg
xor
lret
push
std
pop
je
jbe
test
jl
int
xchg
repz
test
scas
aam
popl
xchg
mov
into
loopne
imul
sarl
mov
ficoml
xchg
jl
and
pop
mov
shll
fidivrs
pop
movsl
add
add
outsb
clc
adc
mov
mov
pop
rcr
cwtl
adc
leave
sub
rorl
aas
jecxz
fwait
cmp
cmc
jo
je
xor
fwait
shl
call
shrl
dec
add
rcr
inc
mov
fs
decb
xchg
xor
in
pop
cmpsl
sub
push
notl
daa
push
dec
and
jmp
cmc
nop
pusha
shr
xor
sub
dec
pop
shll
test
dec
jno
stos
shll
cld
cmp
cli
cmc
jge
out
adc
xchg
or
or
subb
mov
lret
cwtl
xor
jbe
pcmpeqb
mov
mov
sbb
dec
cld
or
notl
icebp
shrl
imul
push
hlt
mov
or
das
xchg
xor
loop
in
out
shr
jg
rcr
pop
mov
shll
and
lcall
pop
adc
jae
mov
scas
jl
push
and
test
loop
ret
arpl
mov
add
scas
mov
out
clc
mov
push
je
xchg
mov
mov
xchg
shrb
xchg
push
sub
push
dec
sbb
aam
bound
addr16
or
push
addl
shll
jne
xchg
shll
enter
or
cwtl
push
xchg
pop
outsl
rcr
mov
jmp
pop
cmp
adc
jae
into
inc
push
push
xor
movsl
cmc
mov
sub
adc
pusha
push
push
push
push
or
mov
jg
arpl
cmp
dec
cmp
leave
xor
shrl
xor
cmp
cwtl
shll
or
pop
mov
mov
mov
mov
mov
sub
cltd
ror
or
mov
shll
nop
jecxz
mov
xchg
and
and
outsb
add
imull
dec
fstl
xchg
pusha
shrl
sub
roll
sbb
popa
frstor
inc
cmp
test
mov
out
shlb
std
mov
push
test
dec
scas
xchg
leave
roll
fucom
mov
sbb
or
enter
cmp
movsl
xchg
jl
or
aad
and
bound
leave
shl
aaa
xor
or
and
jmp
xor
push
lock
fcoms
mov
aam
push
xchg
orb
fists
ljmp
das
ror
jp
cmpsb
mov
xchg
dec
sar
dec
push
mov
ret
lods
add
cmc
in
popa
jmp
out
scas
dec
aam
sbb
aam
jno
jbe
cli
roll
in
push
in
imul
mov
sub
mov
cmpb
arpl
call
stos
stc
jo
mov
cli
shll
sbb
sbb
inc
mov
rcll
mov
int3
roll
push
add
push
out
xchg
shr
pop
enter
in
fmull
jge
repz
mov
pop
daa
jecxz
shl
xor
pop
out
roll
xchg
out
mov
adc
inc
push
dec
mov
cmpsl
sub
testl
scas
leave
sbb
repnz
push
test
in
repz
fwait
adc
rcl
cmpsl
rcrl
mov
dec
mov
sar
insb
imull
shr
adc
push
and
inc
jne
scas
xor
loopne
mov
sti
pop
pop
sub
push
ljmp
loope
enter
jmp
push
repz
adc
shll
xorl
jnp
fidivl
mov
add
xchg
mov
push
adc
scas
sub
out
inc
xchg
jp
test
loopne
push
push
push
xchg
mov
mov
addr16
add
cmp
movsl
mov
shrl
mov
lods
hlt
adc
cs
ror
shld
popf
add
shll
movsb
cmp
je
fstpl
hlt
mov
cmp
fstl
sub
aam
mov
push
sbb
sbb
push
push
je
es
cmp
and
xchg
push
add
popf
xor
fcomi
inc
push
call
push
cmpsl
out
in
adc
shll
fimull
ja
pop
mov
inc
dec
mov
pop
shlb
cld
sarl
jge
mov
dec
cmc
shl
stos
sbb
pop
data16
xchg
rcrl
cld
orl
loope
lahf
shl
out
sub
rcl
mov
cmp
pop
and
fidivl
cs
adcb
ljmp
jmp
or
je
mov
ja
enter
push
xchg
lahf
jecxz
mov
jb
in
pushf
push
xchg
mov
jl
inc
rcrb
adc
xor
push
mov
inc
mov
or
test
fisubl
inc
jp
jecxz
mov
cltd
push
lcall
in
iret
rorl
push
shrl
sbb
jne
clc
push
repz
mov
je
push
pop
push
xlat
xor
sbb
lret
push
ret
push
sar
mov
pop
in
dec
movsb
pop
cmc
dec
pop
sbb
push
std
mov
mov
rcrl
adc
dec
xor
xchg
xchg
xchg
or
sahf
nop
adc
add
add
movsb
rcl
mov
add
aam
sbb
mov
push
std
push
scas
mov
stos
jmp
dec
rcl
add
add
and
imul
add
ljmp
push
xor
mov
mov
push
sbb
dec
cmp
shll
mov
sub
testl
xchg
mov
lea
shrl
out
imul
pusha
add
ficoml
xlat
cmp
mov
aaa
rcll
fistpl
cmp
push
lods
lcall
pop
push
jecxz
mov
and
mov
ss
mov
or
cltd
and
xor
pushf
pop
into
push
negl
fadd
jle
push
roll
icebp
shl
cmp
shll
sbb
pop
shrl
fisttpl
les
jns
pop
mov
pop
inc
mov
fst
loope
sbb
bound
jo
add
out
sarl
xchg
lock
dec
xor
push
and
shll
iret
es
jb
push
or
pshufw
sarl
mov
std
rcrl
jae
dec
jmp
xchg
mov
sbb
xchg
dec
mov
mov
pop
insl
mov
movl
roll
loop
cmp
ret
inc
cs
mull
aad
jbe
adcl
imul
roll
cmpsb
mov
lahf
loopne
inc
mov
clc
pop
imul
ficompl
pop
mov
pop
cli
cwtl
gs
sbb
int3
repz
scas
in
mov
aaa
mov
pop
rol
push
pop
std
and
inc
test
dec
adc
imul
and
jge
inc
repz
rorl
shll
sbb
shll
mov
adc
shll
sub
xor
sarl
in
ret
filds
push
mov
jbe
inc
xchg
and
aad
loopne
inc
mov
adc
xor
push
and
shll
shl
mov
pop
mov
jmp
insb
and
iret
xchg
adc
jns
pop
out
xchg
pushf
or
pop
dec
xchg
mov
xchg
fistpll
fidivl
rcl
mov
cmpsb
sub
mov
ret
mov
mov
pop
decb
loope
je
das
fs
mov
mov
dec
xchg
sub
add
shll
sub
movsl
arpl
dec
sbbb
and
stos
adc
cltd
add
loopne
xchg
notl
lret
lods
fldenv
mov
dec
fiaddl
aad
sarl
cmc
mov
popa
scas
or
lods
imul
jmp
insl
scas
cmp
pop
push
into
sahf
mov
push
add
cwtl
push
fwait
repnz
sub
cli
mov
jecxz
aas
mov
inc
push
repnz
fwait
rcl
adc
out
and
lcall
lods
sub
pop
mov
cmpsl
ret
xor
dec
push
or
shll
idiv
ss
jmp
jnp
push
ljmp
lock
repz
push
sbb
ds
imul
arpl
jmp
inc
push
test
inc
xlat
push
sub
shll
out
sbbb
jg
stos
jo
fmuls
push
clc
add
xchg
lret
popl
imul
sub
or
add
ret
and
lock
in
inc
mov
cltd
jnp
mov
inc
push
lcall
pop
ss
out
subl
inc
pop
rcll
clc
push
jae
jnp
test
cmpsb
arpl
xchg
add
xchg
xchg
scas
lock
clc
shll
or
and
int
xchg
sbb
in
push
insb
fsts
push
fsub
jbe
xor
movsb
call
stos
addr16
dec
sarl
cli
iret
fcomp
mov
out
sbb
jne
outsb
dec
nop
sarl
add
les
lret
popa
ss
dec
daa
xchg
pop
loopne
push
push
and
mov
sbb
push
xchg
push
out
dec
pop
push
mulb
push
xor
rcll
mov
add
or
into
jno
sbb
lods
ja
mov
jbe
or
loop
cmc
pop
and
mov
rorl
or
push
aas
inc
jecxz
xchg
add
pop
xor
roll
rcl
add
inc
subl
int
xchg
mov
cltd
mov
xlat
lcall
stc
cs
push
mov
shll
mov
shr
adc
jmp
push
push
sbb
ss
sub
inc
dec
push
xchg
test
push
push
sbb
es
sub
icebp
pop
rorl
jg
aam
mov
shrl
ret
fistpl
pushf
push
stos
test
cli
data16
fnsave
mov
lahf
mov
jo
inc
push
out
mov
sub
imul
bound
mov
or
stos
cwtl
mov
gs
shl
xchg
xor
shrl
jle
adc
or
inc
xchg
test
in
push
fists
sahf
jnp
mov
dec
shr
data16
jp
push
enter
pushl
pop
subl
loopne
stos
cmpsl
add
in
mov
and
push
push
aam
pop
xor
in
arpl
push
shrl
clc
push
sbb
dec
roll
push
jno
cmpsb
ror
shll
aas
insb
mov
jb
sub
stc
cmp
scas
push
push
sbb
jg
ret
xor
roll
cmp
stos
pop
insl
jmp
and
sarl
rcrb
rcll
out
mov
mov
xchg
mov
shr
sub
pop
mov
lahf
mov
mov
push
pop
fcmovnb
in
packuswb
ljmp
jnp
xor
or
add
rorl
jno
cld
shl
push
rcr
cli
mov
jp
roll
mov
mov
lcall
sar
adc
rcl
pop
or
push
inc
push
pop
xor
push
xor
inc
gs
cmp
xor
enter
rcrl
xchg
xchg
loope
jle
mov
mov
fs
sub
test
cwtl
bound
fsubs
movsb
dec
xchg
cmp
jg
roll
loope
ja
xchg
add
loopne
mov
push
mov
lret
sti
insl
addr16
test
jl
daa
mov
popa
sub
dec
lods
rcrl
add
shll
loop
shll
hlt
cmp
mov
rcrl
test
pop
icebp
fiadds
mov
mov
fsubs
pop
aas
push
push
repnz
adc
or
mov
sub
shll
imul
les
push
popf
and
in
pop
push
jmp
xchg
ffree
addr16
cmpsl
shr
data16
stos
pop
les
jg
push
jmp
ja
mov
fidivl
add
repz
rcl
jno
in
cld
add
push
jbe
ret
cmc
and
mov
or
inc
lahf
mov
sti
fcomi
test
rcl
repz
in
pop
mov
jmp
out
sub
aam
stos
ret
adc
or
shl
xchg
pop
adcl
mov
or
lock
fimull
add
dec
not
cmpsl
cmpl
rorb
xchg
xor
xchg
mov
inc
adcb
pop
into
cmpsb
notl
sbb
and
arpl
mov
insl
pop
roll
stos
dec
loopne
add
adc
out
test
rcll
int3
push
sbb
add
rcll
pop
stos
cmp
rcrl
add
in
jle
shrl
cmp
pop
push
adc
xchg
push
mov
cwtl
add
or
movsb
aas
jae
test
std
shll
pop
or
mov
pop
xorb
rcll
add
scas
jne
not
test
add
xchg
add
les
fbstp
push
or
or
cmp
fbld
rol
aaa
push
mov
movsl
aad
aad
dec
jae
xchg
idiv
cld
lret
push
push
imul
rcr
and
sbb
mov
and
push
test
addr16
mov
jge
and
popf
int3
hlt
in
shll
push
and
cltd
lea
adc
push
aad
cmp
mov
mov
xor
mov
and
cltd
sbb
sar
lcall
shll
pop
jp
and
mov
in
roll
scas
das
in
pushf
sub
rcl
xor
js
add
sbb
mov
repnz
jg
inc
shrl
aam
ja
cmp
rcll
and
data16
sarl
fs
push
sbb
jno
and
jo
out
pusha
fstl
into
shrl
jmp
pop
push
test
shlb
shll
imul
cmp
stc
sbb
xor
out
jmp
shl
jle
dec
jmp
mov
mov
loope
jecxz
fbstp
pop
rol
in
call
jp
push
ret
addl
push
jmp
lds
xchg
shr
sti
pop
sahf
dec
mov
repz
jbe
rorl
cltd
sahf
imul
shll
into
mov
jo
jae
shrl
ret
sbb
enter
gs
add
or
xchg
insl
cli
ror
xor
ret
dec
jecxz
faddl
mov
sub
rol
aas
popa
lea
shrl
out
xchg
pop
shrl
out
out
pop
inc
movsl
jge
push
lea
dec
sar
or
pop
outsl
push
roll
xchg
or
adc
aam
btc
mov
pop
js
mull
inc
imul
in
cwtl
sahf
shr
xlat
sbb
ficomps
fdivs
rcrl
insb
inc
push
pop
push
mov
pop
jb
pop
subl
out
insb
inc
xor
adc
inc
rcrl
mov
fists
std
pop
mov
imulb
mov
cwtl
rorl
enter
pop
shrl
lea
das
sarl
sbb
fnsave
lret
repz
ljmp
push
cmp
adc
lods
mov
or
rcrl
scas
stos
mov
repnz
xchg
icebp
xchg
lods
add
loopne
adc
fldcw
pop
cmp
sarl
cwtl
jl
aaa
ret
loopne
adc
shlb
in
cs
push
mov
out
add
test
loopne
pop
and
mov
jle
data16
roll
adc
inc
mov
mov
push
je
decl
cmp
rcr
ret
les
rcrl
inc
pop
shll
dec
decb
xor
insl
xchg
dec
cmpsl
es
adc
sub
js
and
xchg
popf
rcll
sbb
sar
ljmp
push
jl
stos
pusha
shll
mov
cld
icebp
ret
sarl
jnp
jns
push
jg
rcll
mov
adc
rorl
stos
int
lahf
sbb
sub
mov
xchg
shl
jb
inc
ror
lds
aas
rcll
fildll
dec
push
cld
pusha
xchg
scas
divl
shrl
pop
adc
mov
mov
repz
shl
and
xlat
gs
mov
xor
adc
ret
roll
test
pop
push
cmpsb
les
inc
out
jo
stos
sbb
mov
sbb
inc
test
fsubl
int3
cmpsb
scas
adc
sbb
fidivl
scas
lea
lods
cmp
clc
mov
mov
shll
pop
xchg
sarl
sti
imul
std
movsb
int
push
addl
cmp
cltd
xor
and
sarl
fdivp
push
shll
out
mov
xchg
lods
nop
fsubrs
fwait
sbb
xor
push
jecxz
push
adc
sub
xor
ja
or
sub
fdivl
sub
mov
repnz
idivb
addr16
inc
loop
or
mov
pusha
rorl
outsl
pcmpgtw
adc
xor
mov
push
dec
imul
stos
push
push
cli
jle
lea
pop
rcr
out
add
push
xlat
mov
jns
movsb
cmp
inc
adc
jno
cltd
jecxz
shll
mov
push
ret
sahf
pop
sub
fwait
xor
push
inc
imul
aaa
inc
inc
outsb
data16
and
mov
bound
xchg
xchg
es
jecxz
jns
lods
pop
push
adc
imul
pop
pop
mov
inc
jg
sbb
mov
inc
ja
xor
movsb
jmp
shl
loop
jns
popf
jge
push
dec
pop
gs
ja
fidivrs
xchg
mov
jo
mov
out
pop
adc
mov
shrl
add
pop
shrb
aaa
sbb
jb
aam
sarl
mov
lods
dec
xor
sbb
mov
daa
add
shll
in
rorl
mov
dec
rcll
ss
nop
call
jp
int
orl
stos
cmp
jmp
aaa
hlt
dec
rcrl
fucomip
jbe
adc
shrb
cmc
shrl
into
sub
shrl
mov
pushf
shll
cmpb
fwait
stc
push
in
fsts
cmp
push
dec
and
popf
rcl
ret
cs
add
dec
shll
dec
push
icebp
jbe
and
leave
mov
pop
lret
mov
jge
jle
sbb
dec
inc
stc
push
rcll
pop
mov
mov
outsb
adc
movups
pop
pushf
cmpsb
shl
mov
inc
shl
jp
mov
rol
lret
pop
sahf
inc
jle
push
roll
test
xor
sarb
ljmp
pop
pop
pop
jmp
mov
fs
insb
mov
push
mov
mov
pushf
xchg
add
pop
rcrl
dec
xchg
aas
stc
ja
aam
int
mov
stos
push
sub
popf
push
fidivrl
pop
outsb
pop
enter
fistpl
cmp
loope
or
mov
cltd
jle,pt
mov
ret
fmul
loop
ror
sub
scas
xlat
mov
or
cmc
push
xchg
pop
xchg
adc
cmp
into
scas
inc
fmull
and
pop
lods
push
xchg
dec
xorl
and
loopne
pop
xor
mov
clc
fnstenv
mov
daa
fisubrl
add
xor
mov
mov
insl
movsl
mov
fsubrl
cmp
jae
iret
push
outsl
js
lcall
jp
out
rorl
mov
pop
inc
aas
push
sbb
jecxz
mov
or
cli
cmp
rcr
pop
es
in
popf
fs
cwtl
iret
pop
ret
stos
xor
add
mov
cmpsl
loopne
lret
adc
mov
push
and
mov
mov
aas
and
sub
dec
cmc
out
rep
sar
dec
jno
arpl
cld
and
pop
int
xchg
mov
lock
pushf
xchg
dec
mov
sub
cmpsb
scas
push
test
pop
and
adc
mov
cpuid
sbb
cmpb
inc
fmuls
jmp
xchg
ds
loop
push
inc
mov
cmc
leave
push
subb
sbb
mov
dec
pusha
dec
idivl
js
rolb
mov
push
jae
out
push
roll
fwait
jecxz
mov
jbe
adc
shl
mov
inc
cmpsl
shl
mov
push
and
hlt
pop
rcrl
arpl
gs
adc
jnp
shrl
scas
sub
cmp
clc
add
aad
shll
pop
and
push
pop
sarb
sti
shl
jbe
sbb
jne
rcrl
aaa
push
jle
mov
shr
shl
cmp
lret
sub
mov
and
xor
jne
sbb
mov
pop
imul
push
ficomps
out
jle
pop
bound
outsb
jmp
loope
aas
push
out
mov
imul
push
je
popa
jae
rcr
div
add
lahf
push
and
arpl
push
xchg
shll
sbb
stc
adc
out
not
out
jmp
out
ficoms
mov
mov
ficompl
cmp
xor
pop
add
divb
out
repz
pusha
sbb
rcll
rclb
inc
jns
shl
mov
push
lahf
push
sbbl
lret
test
add
push
pop
jecxz
xor
loopne
movsl
mov
into
shl
jmp
mov
sti
shll
or
dec
rcl
sbb
leave
mov
cmpsb
xchg
icebp
lret
jg
adc
movsb
mov
xor
or
inc
lock
push
shrl
test
xchg
cmpsl
fst
xor
xor
jo
xor
scas
push
sub
lock
dec
sti
mov
test
fpatan
shl
stos
adc
clc
or
int
dec
mov
outsb
mov
inc
mov
fbld
sub
jl
arpl
movsb
dec
sbb
and
ja
leave
loope
rol
mov
orl
or
roll
add
dec
jmp
fwait
scas
dec
push
loope
mov
xor
cmpb
mov
bound
stos
push
fldl
dec
lock
mov
inc
sahf
and
and
push
jb
push
cmp
stc
int3
fistl
pop
fcoms
xchg
sarl
xor
jmp
cwtl
in
pop
add
jns
jle
shlb
lds
mov
sbb
shll
add
imul
sbb
into
mov
dec
push
lea
pop
insl
call
add
ss
xor
pop
and
testb
xchg
mov
fwait
addr16
sahf
mov
imul
sub
sbb
rcl
pop
js
inc
les
mov
pop
push
lcall
insb
bound
mov
lods
pushf
jae
ret
pop
icebp
cmp
xchg
push
mov
sub
xchg
jecxz
mov
aam
sub
scas
add
cmp
roll
enter
pop
cwtl
mov
outsl
shrb
jbe
push
push
mov
sub
pop
lret
aam
test
pop
mov
cmp
and
int
jo
push
fdivl
pop
and
into
pop
xchg
dec
cli
insl
add
loopne
mov
push
jne
rcr
sbb
sarb
mov
ficoml
sbb
add
popa
fxam
rorl
cs
and
inc
lea
shll
lds
jecxz
je
iret
icebp
int
pop
scas
ret
cwtl
pop
pop
cmp
jo
ja
mov
addb
mov
dec
je
or
mov
mov
cmp
pop
movsl
shll
test
lret
sbb
rcrl
xchg
ljmp
rcrb
cmpsl
and
into
imul
dec
sti
and
lret
ja
outsb
xor
ljmp
call
repz
arpl
insl
imul
xchg
sub
ds
mov
cmp
fsubrs
adc
fwait
dec
adc
pop
pop
or
mov
jnp
jno
repnz
shl
mov
push
sbb
rcll
fwait
pop
nopl
dec
andb
add
rorl
fsts
jmp
fdivrl
add
and
push
nop
pop
idivl
inc
pop
gs
jb
shll
mov
addl
mov
pop
jo
or
and
and
icebp
sbb
mov
inc
sbb
test
loopne
push
inc
icebp
cmpsb
mov
mov
ljmp
cmp
loopne
lock
adc
rcrl
filds
adc
and
xor
inc
mov
test
rorb
insb
es
inc
jge
sarl
jne
fimuls
dec
das
test
jne
fcmovnbe
nop
fstl
cwtl
mov
rcll
fcomi
lret
ljmp
insb
push
mov
mov
cmp
push
jle
xor
into
xchg
jo
jae
and
divb
fstpl
lea
lock
sub
add
in
add
imul
jg
push
push
lret
into
mov
or
pop
nop
out
jmp
sub
shll
xchg
rorl
das
adc
rcll
daa
sbbl
sub
out
jb
and
or
das
outsb
aaa
xchg
lcall
sbb
aaa
js
xlat
jmp
inc
sbb
cwtl
fsub
stos
push
ffree
icebp
dec
inc
jecxz
mov
push
pushl
stos
shl
push
rorl
jns
mov
roll
mov
fucomp
push
push
sbb
dec
mov
shll
jnp
out
cwtl
in
push
jae
aad
insl
pop
rcl
aam
jb
cmp
mov
aaa
push
sbb
stos
mov
mov
push
mov
aad
imul
je,pt
jle
rcrl
mov
xor
mov
stc
incl
mov
insl
pop
mov
mov
sarl
lock
in
and
dec
sub
add
rorl
or
jmp
arpl
cwtl
dec
inc
mov
into
push
jbe
popa
push
in
fwait
dec
lret
imul
cmp
int3
roll
and
andb
mov
sarb
stc
push
jno
jecxz
cmp
sar
or
inc
dec
ret
dec
rcll
add
sub
lods
dec
cmp
vandps
jnp
xchg
inc
repnz
mov
sub
jge
adc
mov
xor
popa
outsl
roll
shrb
aam
neg
add
mov
lds
in
add
inc
repnz
lcall
sub
fnsave
adc
rcl
xor
fcompl
xorb
pop
push
daa
xor
insb
rorb
rcr
adc
movsb
lods
pop
aad
xchg
mov
orl
sub
mov
dec
cld
xchg
enter
mov
rcr
loope
cmp
rcl
inc
xchg
mov
sarl
xor
rorl
ds
push
shl
cmc
and
iret
xchg
call
inc
scas
pop
mov
and
lods
imul
loopne
sti
xchg
push
mov
std
insb
mov
mov
mov
inc
jl
adc
test
pop
jp
test
addl
fs
xchg
rcrl
or
sbb
mov
push
insb
sbb
pop
mov
xor
data16
and
mov
je
daa
fwait
push
xor
les
sbb
pop
pop
sarl
and
xor
add
cmpsl
std
jns
mov
xor
and
andb
ja
test
dec
ljmp
movsb
repz
in
mov
and
cld
inc
cmp
mov
adc
rorl
fwait
or
aad
mov
das
sub
test
xchg
adc
ljmp
rcl
mov
psubq
subb
and
call
fwait
fs
xchg
js
jecxz
jp,pn
and
and
mov
test
jecxz
dec
inc
sub
loop
aaa
das
add
push
inc
xor
jl
cmp
inc
in
mov
mov
pop
loopne
movl
mov
mov
test
xlat
fbld
sbb
jp
jecxz
sbb
dec
scas
gs
cmp
inc
adc
or
inc
mov
pop
je
insl
hlt
shrb
fsubrl
sti
repz
sbb
mov
movsb
popa
pop
roll
dec
in
cmp
push
pop
jge
push
shll
rcll
and
mov
mov
roll
dec
sub
leave
mov
xchg
lret
repz
dec
imul
ds
nop
daa
out
fmull
fstpl
shll
and
test
mov
in
jge
pop
aam
mov
lock
sub
aad
ja,pn
shll
push
push
loop
aam
and
lcall
imul
shll
jne
cmpsb
iret
or
xchg
add
or
call
and
xchg
dec
mov
shll
push
push
repnz
aas
cwtl
jecxz
loopne
push
and
mov
in
lret
outsb
out
rcll
pop
in
add
inc
xchg
leave
into
xchg
sarl
imul
mov
not
mov
jg
lds
sarl
xor
adc
shll
jns
mov
mov
in
fstpl
cwtl
push
sbb
out
or
nop
jo
loopne
out
outsl
out
rcll
jb
lock
addr16
bound
push
test
aaa
rolb
mov
push
or
pop
mov
xor
mov
adc
orl
push
push
and
jo
or
fs
shrl
pop
insl
mov
dec
call
jp
adc
dec
ret
xchg
rol
jno
cmpsb
add
div
shr
call
dec
stos
gs
sbb
dec
jbe
cmpsb
shr
iret
push
jne
xchg
imulb
inc
dec
xchg
mov
adc
fcmovnb
dec
and
cmp
inc
fdivs
stc
mov
das
or
rcrl
pop
lret
ret
mov
mov
add
out
int3
push
sbb
dec
xchg
shrl
mov
xor
adc
roll
out
push
mov
jge
rcrl
repnz
lcall
mov
sarb
adc
cmp
int3
pop
push
and
roll
push
sub
jnp
fisttpll
fcoml
mov
fwait
mov
push
inc
ja
inc
jae
cmp
pop
xchg
jns
mov
daa
outsb
add
inc
push
rcll
ja
in
adc
sbb
subb
xchg
sahf
cmc
push
divb
sbb
cmp
shll
into
push
jle
rcl
enter
pop
leave
xor
inc
loope
nop
mov
mov
pop
inc
mov
jle
shrl
aad
adc
cmp
jecxz
jae
bound
push
jg
loope
mov
lea
bnd
rcrl
cmp
push
jecxz
flds
es
sbb
jmp
pusha
jl
dec
imul
mov
pushf
repz
lods
jb
fldt
xor
mov
sub
cltd
fiadds
dec
jo
xchg
rcrl
cmp
in
cmp
jo
cwtl
push
lods
shrl
and
dec
sarl
filds
repnz
push
ret
lock
ds
fcomi
inc
shll
xchg
repnz
jmp
jns
pop
inc
jnp
rcll
cmpsl
cmp
lret
icebp
push
and
into
mov
int3
shrl
jl
cmp
in
repz
fwait
jecxz
lea
int3
cld
mov
cmp
cmc
or
sarl
mov
repz
or
fsubs
roll
test
cmp
rcrl
movmskps
insl
and
jns
cmp
stos
xor
pop
lds
rcr
imul
mov
testl
mov
mov
xchg
int
movsb
xchg
sbb
imul
xchg
rcrb
push
sbbl
cmp
movsl
mov
rcr
mov
test
aas
jbe
cmpsb
mov
hlt
rcrl
aam
adc
sahf
rcll
clc
movsl
std
or
popa
sbb
pop
nop
das
jns
rclb
je
jae
pop
rcrl
fcoms
movsb
mov
lods
roll
dec
cmp
outsb
xchg
loop
cmp
iret
pop
lahf
jb
push
mov
rcl
mov
icebp
imul
daa
iret
dec
jmp
clc
adc
push
mov
aad
cmpsl
scas
pop
rol
out
pop
adc
cmp
cmp
pop
push
fisubs
dec
sar
outsl
dec
push
in
rcl
ss
push
rcl
push
leave
mov
out
or
mov
xor
das
imul
shl
jne
inc
mov
adc
sub
mov
xlat
or
adc
push
nop
mov
repz
aad
int3
mov
adc
jecxz
jmp
push
mov
hlt
repnz
fists
push
ffree
mov
shlb
inc
dec
sbb
jmp
or
jo
cld
mov
dec
std
mov
sbb
push
cmc
jmp
sub
inc
inc
outsl
jecxz
jae
aas
lret
lods
lds
cmpsl
mov
xchg
loopne
iret
jae
sti
xchg
mov
lcall
nop
pop
cld
out
fsub
popa
sub
daa
push
bswap
inc
jg
push
xchg
mov
push
sub
jecxz
inc
mov
jge
les
pop
ss
sub
sub
mov
in
pop
ret
adc
and
cltd
fsts
nop
fidivrl
lret
fdiv
mov
cmp
dec
sahf
adc
inc
pop
addl
jecxz
lret
mov
iret
mov
push
xchg
icebp
mov
in
lahf
imulb
pop
mov
push
in
leave
xchg
lods
cli
loope
les
loopne
jp
aad
push
push
out
mov
jmp
adc
dec
or
xor
cmc
mov
inc
nop
fistl
daa
push
mov
test
sub
and
rcrb
jo
jno
js
pop
inc
mov
xchg
loopne
push
mov
incl
jb
mov
lds
mov
xchg
notl
ficoms
xchg
enter
or
js
cmpsl
mov
push
iret
fcmovbe
idivl
push
dec
mov
repnz
cmpsl
jp
iret
mov
and
negl
cmc
xchg
cmpb
dec
sub
push
lds
sub
or
adc
add
cli
push
sti
fwait
sub
cmpsl
cmpsb
sbb
clc
adc
push
ret
test
out
jbe
adc
hlt
lods
sahf
push
movsl
addr16
push
outsb
mov
mov
aad
cmp
mov
jnp
jp
xchg
ss
dec
xlat
daa
js
xchg
popf
pop
lahf
inc
pop
cmp
mov
icebp
fbstp
jns
imul
xchg
out
mov
flds
popf
insl
sti
dec
inc
push
jmp
cwtl
popl
sub
xchg
xchg
xor
shl
and
cmc
jnp
dec
jno
fcomps
in
arpl
mov
cmpsl
fisubl
mov
mov
jnp
dec
mov
jne
inc
rcrl
movsb
arpl
xchg
les
aad
mov
cmp
fldcw
adc
cmp
sahf
inc
xchg
cltd
mov
or
sarl
shlb
fidivs
outsb
adc
pop
mov
push
or
daa
rol
out
and
cmc
cmp
fiaddl
dec
mov
aad
int
dec
lret
aaa
neg
xchg
stos
popf
push
lcall
out
test
pushf
ror
jns
cs
loope
popa
mov
pop
cwtl
je
xchg
das
inc
ret
roll
xchg
jecxz
out
sub
loop
push
out
mov
jo
jne
sbb
into
add
jecxz
xor
mov
insb
faddl
aaa
aad
inc
scas
daa
pop
iret
adc
xchg
adcl
push
add
push
xchg
mov
cmpsl
call
and
imul
jae
cmc
xchg
scas
int
mov
cltd
ja
insl
loopnew
push
in
sub
stc
jp
int
fwait
fwait
sub
stos
loopne
dec
lds
rolb
fmul
pop
fstps
movsl
test
stc
mov
aad
test
cmc
mov
test
dec
cmp
data16
cmc
shrb
ljmp
pop
mov
aad
daa
addr16
xchg
sub
mov
mull
xor
cmpsl
pusha
ljmp
sub
pop
cs
je
ret
pop
inc
repnz
adc
push
lret
mov
xchg
daa
call
mov
fwait
mov
mov
adc
mulb
test
push
dec
sti
adc
push
jae
cmpsl
jp
mov
daa
jns
adcl
xor
cmpsl
iret
jae
sub
xor
xlat
imul
popa
jecxz
mov
cmp
rcll
jae
push
fcomps
insb
push
adc
mov
mov
cwtl
out
in
scas
mov
lds
jle
addr16
inc
inc
mov
or
into
cmpsl
out
inc
add
sub
in
int3
ret
mov
push
push
lcall
cmp
adc
repz
jle
int3
add
aad
out
scas
pop
lcall
mov
rcll
sub
aad
mov
mov
sbb
inc
pop
xlat
mov
sub
cmp
jnp
notb
jb
or
xchg
pop
sbb
in
stc
pop
aaa
loope
adc
jne
sarb
loopne
icebp
adc
sbb
scas
aaa
es
cmc
jbe
sbb
jg
adc
push
enter
ret
push
lods
cmpsl
mov
das
leave
cs
mov
int3
aaa
xchg
daa
addb
pop
scas
sbb
outsb
repnz
cmp
nop
sub
stc
ja
jns
and
fwait
cmp
out
and
push
out
lcall
movsb
ds
stc
jmp
out
sbb
push
push
mov
push
inc
mov
addr16
rclb
adc
dec
loope
xor
int3
arpl
fwait
jnp
push
sbb
adc
shll
stc
add
test
pop
fwait
psrlw
iret
shr
pop
daa
shlb
out
push
ret
lret
jne
xchg
repz
push
mov
fprem1
sub
dec
fsub
push
dec
lret
ficompl
outsb
ja
xor
les
add
push
push
add
out
xchg
out
gs
out
std
push
pop
mov
xchg
dec
imull
andb
pop
arpl
sbb
pop
cmpsb
cmc
xchg
testl
fisttpl
mov
adc
add
cmp
sbb
loop
lret
movl
fcmovnu
adc
push
sbb
mov
push
jecxz
push
fsts
sti
mov
inc
sbb
in
out
push
fnsave
lds
shr
jge
ja
fstp
popf
clc
jecxz
mov
out
imull
daa
lcall
aad
dec
sub
xchg
xchg
jge
push
mov
or
cli
xchg
fisubl
or
movsb
addr16
mov
rcrb
ja
pop
xchg
mov
and
and
out
mov
mov
mov
sahf
repz
push
fldl
adc
test
or
mov
subl
push
adc
outsl
sub
gs
daa
lds
pop
mov
ja
fistpl
inc
sbb
mov
and
hlt
shl
pop
jmp
lcall
decb
rcrl
aad
xchg
cmpsb
rol
out
mov
jecxz
shll
lcall
or
jmp
push
in
ret
cltd
pushf
fistpll
out
mov
rclb
addr16
sub
or
sbb
rolb
sbb
xchg
shr
idivb
push
cmpsl
mov
fwait
add
push
lcall
sbb
jg
rorl
hlt
or
mov
idiv
jecxz
or
out
cmp
mov
cmp
repz
pop
imul
dec
clc
cmpsl
inc
jo
stc
push
push
xor
sahf
dec
sub
fsubs
sbb
ss
pop
xlat
into
pop
push
xor
cmp
ja
int
cli
js
inc
adc
jecxz
aaa
leave
push
xchg
push
repz
and
ja
jg
xor
jecxz
adc
cs
rcll
sub
ret
adc
inc
ficoms
lahf
test
outsl
int
xchg
and
mov
mov
push
and
xor
aas
push
nop
push
sub
dec
sub
mov
test
push
frstor
add
sti
fstps
mov
les
stc
dec
sbb
scas
jp
jmp
loopne
or
sbb
shll
rcll
mov
aas
jle
push
ljmp
sbb
sar
xorl
mov
pop
jecxz
dec
ret
ret
sbb
cmpsl
inc
sub
pop
add
xchg
push
mov
mov
scas
aaa
unpcklps
jle
cmp
mov
inc
cmp
ja
cmc
das
mov
aad
rcll
sub
outsl
push
outsb
xor
mov
repz
test
adc
sbb
scas
cmpsl
insl
outsl
xchg
movl
aaa
mov
mov
jne
bound
push
sbb
jp
sub
mulb
stos
rcll
push
mov
inc
and
pushf
or
jae
mov
pop
dec
mov
xor
or
pop
leave
js
mov
loope,pn
popf
sahf
andb
roll
shrb
cmpl
pop
scas
fldl
in
cmpsl
ds
cld
scas
je
lret
jne
push
scas
xor
mov
aad
xchg
dec
jecxz
and
jmp
pop
rcll
dec
iret
push
push
pushf
xor
jmp
cmp
int
push
xchg
gs
jmp
inc
mov
ret
dec
rcrl
mov
mov
scas
adc
adc
xchg
mov
into
test
imul
test
repz
push
mov
mov
jle
ret
je
cmpsl
adc
push
outsl
mov
ja
stc
ljmp
les
xor
sti
mov
inc
mov
dec
push
aad
pop
sti
call
aam
daa
fldenv
cmp
add
pusha
addr16
lahf
daa
ret
jecxz
xor
fs
inc
ret
mov
rcl
pop
mov
mov
insb
pushf
fs
ret
ret
vandpd
insl
imul
dec
shlb
mov
inc
inc
sti
in
into
lahf
and
mov
fildll
cmp
ffreep
sub
add
je
push
sbb
pop
cmpsb
das
mov
aaa
bnd
jo
jnp
fcomip
inc
xor
jns
out
pop
mov
push
pop
xchg
cs
movsl
xor
push
aas
dec
sub
mov
push
xlat
inc
adc
or
in
shll
xchg
in
stc
add
and
ja
push
mov
cwtl
mov
sbb
movl
sar
push
nop
or
mov
popf
xor
mov
add
push
mov
add
lret
shrb
cmp
push
ds
rorb
mov
addr16
daa
xor
test
cmp
out
fisubl
std
xorl
pop
jo
ficoml
xor
jnp
nop
daa
jne
cmp
sub
popf
mov
cmpsl
int3
or
fwait
imul
aad
testb
fidivrl
negb
cmc
pop
adc
popf
movsl
call
sub
lahf
sub
mov
push
mov
mov
jle
sarl
sbb
mov
lcall
loop
fildl
push
jecxz
pop
pushf
adc
mov
daa
insb
leave
sarb
ret
jl
std
popf
out
xor
sbb
imul
int
cli
xchg
ror
ficoml
lods
js
shrb
xor
xor
stos
adc
sub
cli
out
sbb
mov
push
lods
xchg
test
int
or
mov
lods
rclb
popa
jg
jecxz
xor
pmaxub
aaa
inc
xchg
inc
pushf
pop
repz
mov
mov
iret
pop
adc
push
ss
cmp
enter
pop
dec
in
pop
and
xchg
adc
test
loop
add
cmp
push
cmp
pop
ret
mov
inc
cmpsl
mov
adc
inc
jae
mov
or
pop
jmp
mov
outsl
les
jae
movsl
ljmp
cmp
pop
cmpsl
mov
mov
cmp
inc
testb
inc
xchg
ja
mov
sub
add
push
pop
sbb
notb
aas
loop
jae
inc
xor
lcall
push
pop
js
daa
ljmp
ss
adc
les
sub
adc
sbb
divl
push
or
adc
loope
mov
push
je
cli
shl
sub
push
push
fistps
sarb
add
xchg
adc
call
lcall
inc
fbstp
sbb
adc
aad
movsl
pop
aad
push
fxch
imul
ror
jae
aas
xchg
and
and
ja
add
fcmovnbe
pop
add
push
xchg
fidivrs
sub
shrl
dec
adc
push
testl
mov
add
xor
aad
jo
loop
jne
aam
push
pop
cltd
jns
int3
sahf
rcrb
les
pop
jle
fnstcw
fnstcw
dec
mov
and
fwait
push
fs
test
aad
pop
test
aas
out
add
cmpsl
movsb
xchg
filds
cmpb
lcall
out
lea
adcl
pop
aas
repz
inc
cltd
sbbb
out
xchg
cli
sbb
bnd
pop
push
cltd
xor
outsb
push
outsb
jno
push
loopne
daa
adc
xchg
add
scas
loope
daa
fsubrs
clc
push
push
iret
push
jns
fistpl
add
mov
push
mov
mov
ja
sbb
jno
mov
maskmovq
sub
xor
push
dec
mov
negl
je
fsubl
fadd
sub
std
pusha
inc
addr16
cmpb
cmc
stos
push
sbb
rclb
mov
cmpsl
inc
inc
cmpl
jmp
test
cmc
icebp
jp
push
add
mov
mov
cmpsl
lret
mov
repnz
dec
testl
dec
popf
cwtl
dec
dec
mov
out
sbb
je
push
sarl
mov
xchg
sbb
shl
lods
ret
icebp
push
scas
movsl
loope
lret
push
add
xchg
imul
in
xchg
lds
pushf
xchg
loopne
test
lcall
adc
mov
cmp
push
push
add
ret
cmp
js
mov
out
jns
outsb
aas
popf
mov
daa
and
sti
and
out
jge
push
jb
out
inc
cmpsl
adc
je
adc
out
cmp
jns
mov
ror
jb
mov
jns
adc
movsb
push
sahf
xor
daa
pushf
arpl
fisubs
jno
fstpl
mov
daa
push
testb
pushf
inc
std
mov
cwtl
int
je
jnp
mov
pop
int3
fxch
rcll
idivb
sbb
addr16
sbb
std
push
sub
jecxz
dec
mov
lds
es
and
call
or
mov
jno
jge
add
rcrb
loopne
xchg
mov
inc
inc
flds
jecxz
pusha
fisubrl
das
aaa
mov
mov
shll
ret
arpl
cs
lret
xor
fwait
shlb
xor
sbb
jle
xor
cmpb
jns
jae
pop
or
push
movsl
aas
sbb
pop
cmc
jnp
mov
lods
add
fcoms
add
mov
in
xor
outsl
rolb
xlat
outsb
dec
mov
outsb
shr
sahf
cmp
jp
aad
push
shll
inc
pop
movsb
out
jns
aaa
je
push
inc
add
jg
push
out
sbb
xlat
popf
sarb
ret
test
push
dec
jbe
cmpsl
and
dec
out
shl
jmp
jmp
sub
rclb
pop
pushf
pop
fwait
cltd
sti
mov
repnz
push
mov
lcall
mov
mov
lahf
daa
and
repz
and
ljmp
iret
sti
jns
push
rorl
or
pop
push
cld
push
mov
sub
leave
xchg
fimull
push
mov
xchg
cltd
mov
push
stc
daa
inc
imul
and
pop
or
xlat
push
fdivr
cmpsl
rorl
in
shlb
pop
push
add
lcall
cld
inc
dec
pop
adc
mov
addr16
push
xlat
sbb
in
cmc
pushl
aad
cltd
sarb
jbe
push
cmpsw
adc
push
xchg
adc
ret
adc
fwait
jne
pop
enter
lret
xchg
dec
ss
inc
mov
dec
xchg
daa
dec
int
ja
inc
aad
loopne
and
mov
movsl
pushf
scas
pusha
adc
jo
pop
sbb
lods
scas
xor
jg
and
mov
popl
popf
jns
xchg
lcall
rcr
sbb
mov
out
mov
cli
or
sub
sbb
test
push
fadds
push
pop
stos
stos
add
jecxz
incl
inc
out
fstps
dec
or
mov
xabort
test
int3
sub
js
mov
decb
ja
jb
adc
or
cs
xor
ret
jmp
sbb
xor
dec
inc
mov
inc
jns
fnstcw
mov
mov
pop
sub
stos
jle
push
in
fs
mov
mov
xor
add
popf
xchg
cs
xchg
cmp
in
out
cld
int
idivl
xor
mov
adc
js
xchg
scas
mov
sbb
mulb
fstpl
push
or
xchg
aam
inc
jo
xorl
xchg
clc
mov
cmpsl
mov
xchg
loope
adc
ficoml
push
xor
pop
and
int
repnz
scas
mov
pop
or
dec
pushf
inc
hlt
xor
mul
imul
mov
cli
fidivrl
xor
dec
cmp
cmpsl
push
into
subb
out
repz
cmpsl
pop
mov
and
imul
fidivrs
and
mov
repnz
or
lahf
js
xor
daa
lods
stos
lret
cwtl
stos
lock
iret
sub
fldl
pop
add
inc
mov
adc
push
sbb
xor
daa
ret
int
cld
jecxz
ret
pop
dec
jle
ja
out
sahf
pop
repz
stc
or
cwtl
lret
sub
inc
hlt
rclb
add
daa
mov
or
fisubrs
cmp
ds
mov
mov
pop
mov
or
mov
orb
xor
add
mov
sub
push
js
add
sti
lods
mov
lret
mov
jno
xor
dec
jmp
inc
repz
fidivl
mov
sbb
das
sbb
hlt
mov
sub
jmp
and
jnp
icebp
mov
jno
ret
jp
rcrb
xchg
negl
daa
push
dec
fs
inc
cmpsl
jle
fdivrl
mov
lods
cltd
dec
rcl
out
adc
lcall
negl
fcmovnb
inc
fsts
movsl
cmpsl
sub
mov
jecxz
outsb
mov
dec
cs
mov
push
daa
push
test
sub
call
scas
repz
inc
les
and
jecxz
mov
jmp
out
xchg
push
xchg
inc
cmp
mov
shll
cli
adc
mov
pop
jecxz
lock
jp
orl
mov
mov
cmp
stos
or
adc
sub
pop
sub
pop
push
mov
cwtl
js
push
sbb
mov
push
pop
cmpl
add
sti
xchg
mov
lahf
loop
nop
repnz
ror
out
aas
sbb
xchg
mov
add
mov
mov
push
push
clc
inc
sbb
xor
lret
jp
jl
mov
sbb
sbb
mov
stos
repz
pop
lcall
fcomi
fnstcw
fisubrs
cmp
int
jae
pop
shlb
cli
pop
sti
ja
filds
push
lret
sbb
mov
add
cmpsl
jle
insl
imul
mov
repz
daa
faddp
fdiv
mov
out
imul
das
aad
pop
ret
cmp
das
inc
cmp
or
shr
xor
pop
in
xorl
inc
xlat
inc
jo
sbb
test
popf
mov
lea
sbbl
sbb
decb
scas
adc
xchg
push
cmpsl
push
mov
lret
pusha
mov
ret
adc
push
mov
int3
cmp
sti
sub
jge
add
and
pop
add
and
arpl
lcall
pop
pop
lods
mov
jecxz
push
les
int
and
jge
aad
or
and
cmpsb
test
repnz
ror
sub
incb
jmp
int3
dec
iret
call
xor
xlat
sbb
xchg
gs
cmpsl
bnd
xchg
xchg
jecxz
add
pop
adc
data16
sub
inc
ret
orps
inc
mov
cmpsl
xor
xchg
sti
cltd
xchg
xchg
push
or
ret
popa
xchg
je
call
xor
clc
daa
lock
popf
fnstenv
test
mov
lahf
imul
push
lea
mov
shlb
repnz
sub
mov
sub
sbb
xchg
sub
cmp
test
leave
rolb
lea
ds
cmp
aas
dec
push
ret
dec
cltd
aad
push
imul
mov
mov
adc
decb
or
mov
mov
and
dec
sti
fidivrl
daa
in
lcall
ret
lret
push
sub
mov
sub
cmp
push
scas
sti
adc
ds
or
sbb
clc
mov
sub
cmp
rorl
testl
push
cmpsl
in
adc
jns
rcl
mov
out
inc
in
ret
ret
idivb
mov
xlat
rclb
mov
pop
mov
mov
jecxz
lods
sub
push
cmpsl
hlt
ret
mov
sahf
sti
sub
xchg
lods
mov
in
push
pop
add
lods
push
fmulp
test
pusha
rorl
xchg
popa
inc
pop
push
inc
pop
pusha
cmp
movsl
pop
addr16
push
xchg
lds
inc
push
aas
dec
xchg
push
dec
mov
xlat
out
lods
imulb
inc
push
rcrl
scas
leave
mov
out
mov
lret
in
sub
pop
stos
push
adc
mov
fucomip
ret
out
push
jmp
out
push
into
mov
hlt
cmpsl
imul
dec
inc
cmp
shll
lcall
and
test
outsb
or
mov
adc
xchg
aas
jae
mov
push
jnp
mov
lcall
ret
push
push
fmull
sti
out
insl
push
xchg
lcall
mov
push
iret
sti
in
xchg
outsl
mov
popf
cmc
leave
cmpsl
fidivs
cmc
push
clc
imul
es
push
mov
out
daa
jl
shlb
mov
pop
pushf
push
jbe
xchg
cmpsl
jmp
fdivr
push
sub
addr16
imul
mov
int
es
hlt
jmp
aad
adc
inc
popf
stos
add
aam
push
or
in
dec
in
add
in
sbb
fadd
sbb
daa
push
cli
xchg
jecxz
jbe
xor
fdivl
jnp
icebp
inc
and
out
stc
mov
xor
sbb
cmp
jbe
xchg
data16
stos
cmp
orb
mov
sub
notl
sbb
fimull
cli
adc
and
ret
sti
jae
out
stos
pop
cmp
pop
cmpsl
pop
aad
xchg
ds
daa
mov
outsb
push
mov
test
mov
pop
xchg
xor
sub
out
inc
inc
sti
inc
fcomps
adc
das
test
xchg
mov
push
fisubrl
jno
xorb
pop
repz
cmc
xchg
repz
fmul
fldt
dec
test
and
clc
in
movsl
aam
push
adc
jnp
jo
lock
sbb
mov
test
pop
loope
sub
lods
js
daa
loopne
xor
inc
subb
out
pop
xchg
shrl
sbb
xchg
xchg
mov
xchg
mov
and
ficompl
sbb
repnz
cld
lahf
roll
negb
loop
xchg
fnstsw
cmpsl
fnstcw
lret
loope
out
test
add
pop
inc
mov
cmpsb
push
mov
pop
jg
sbb
mov
sbb
cmpsl
xchg
ret
ret
add
decb
pop
sub
imul
push
sub
jmp
sahf
jnp
aad
inc
adc
lahf
ficoml
pop
test
out
sbb
roll
xchg
testb
mov
rcrb
jecxz
sti
mov
push
sbb
sub
iret
jmp
jg
ficomps
dec
xor
jns
mov
xchg
inc
jae
sarl
pop
or
xchg
nop
lods
int3
and
imul
jle
mov
adc
nop
sbb
cmpsl
comiss
xor
ss
inc
sbb
leave
bound
inc
push
mov
daa
test
into
aas
fwait
jecxz
out
testb
fs
daa
cmp
pause
xchg
ret
or
es
push
inc
daa
ss
add
je
shll
sub
mov
nop
mov
add
out
mov
icebp
cmpsl
mov
movl
cmp
sbb
ja
mov
dec
mov
popf
repz
insb
jbe
or
fsts
pop
ret
lcall
sahf
and
data16
add
addl
lea
pop
aam
fistl
stc
stc
lods
xor
fnstcw
xchg
pusha
sahf
daa
xchg
jae
mov
mov
mov
jns
jecxz
jb
les
adcl
sbb
jl
xchg
jp
jne
into
sbb
add
mov
imul
out
add
filds
in
dec
pop
jg
sbb
or
xchg
jmp
fwait
popf
cltd
aam
movl
sub
xchg
adc
cmpsl
repnz
out
in
jno
into
popf
fcmovb
or
jae
daa
arpl
imul
lcall
jbe
push
pop
mov
xchg
sbb
xchg
clc
and
jl
pop
jbe
imul
call
leave
stos
xchg
daa
and
mov
addl
repnz
add
jge
adc
stos
fiaddl
rorl
mov
mov
sbb
cld
std
inc
cwtl
adc
mov
sti
je
pop
stos
cs
cmp
daa
sti
out
inc
lcall
sahf
mov
inc
out
repnz
xchg
sub
pushf
sbb
bound
hlt
pop
mov
xchg
arpl
cmc
fcompl
lahf
cmp
inc
out
jnp
gs
incb
loope
cmp
push
out
dec
add
jns
in
xchg
test
nopl
jnp
xchg
mov
jge
arpl
dec
adc
mov
cmpsl
inc
mov
push
ja
lea
shl
out
ljmp
lahf
cmp
sar
jae
into
fadd
jge
fidivl
sub
pushf
ja
sub
cmp
shrb
sub
sub
sahf
push
adc
pop
sbb
mov
sbb
jecxz
sti
jo
stos
cmp
add
stc
mov
pop
test
imul
aaa
inc
xor
das
aam
push
test
popl
mov
add
ficoml
sti
dec
mov
dec
inc
inc
xchg
adc
out
iret
add
arpl
ss
cmp
xchg
jno
mov
aad
inc
dec
fildl
lea
push
clc
pop
mov
dec
ret
jns
test
fiadds
inc
hlt
fdivrl
mov
inc
and
jae
aam
test
fistpl
in
shrl
std
dec
ret
lret
out
movsb
cs
psllq
les
popa
push
sbbl
dec
jle
pop
mov
mov
cmpsl
inc
lret
push
cwtl
mov
push
leave
test
repz
mov
sub
jmp
sahf
in
lock
imull
dec
shl
xchg
adc
rorl
pop
rorl
loop
outsb
pusha
cmpsb
aad
jp
cmpsl
stos
cmp
das
clc
outsl
shll
les
xchg
jle
stos
or
xor
imul
dec
stc
popa
fidivrl
cwtl
jmp
xchg
or
jp
jae
mov
cmp
mov
icebp
xchg
mov
movsb
outsb
push
fwait
xor
shlb
sub
sbb
aad
pop
cmp
and
cmpsl
lods
mov
shrl
pop
or
call
leave
xchg
jae
add
mov
cs
mov
xchg
jecxz
addl
movsb
xchg
rcrl
mov
and
loop
movsb
mov
stc
test
xchg
inc
inc
xchg
cli
pop
mov
rolb
cs
jl
fninit
add
es
add
ja
dec
cmp
out
popa
inc
lcall
jno
jp
wbinvd
outsl
cmp
or
push
lds
sub
adc
or
adc
cwtl
cmp
aad
sti
and
xchg
xor
aas
xlat
rclb
hlt
and
iret
jnp
inc
jbe
jecxz
int3
sbb
repnz
mov
cmpsl
sub
call
repnz
push
pop
jl
xchg
add
xchg
loop
lret
pop
lahf
movsl
imul
xchg
clc
cmpsl
push
jge
sub
and
xorl
add
jmp
xor
lds
xchg
jge
das
inc
push
aad
push
aad
stos
or
daa
jnp
addr16
push
and
mov
iret
jg
inc
movl
repz
and
lock
adc
xchg
xchg
adc
data16
xchg
sub
decb
pushf
ja
adc
adc
enter
cmpsl
cli
dec
scas
iret
pushf
lcall
into
push
cmp
rcrl
jbe
cmpsl
fnstsw
mov
nop
std
mov
xlat
inc
and
fnsave
mov
stos
jmp
jno
test
cmp
cli
sbb
adc
call
sub
and
sbbl
mov
dec
fwait
adc
sahf
shrl
xchg
sarl
cs
mov
aad
lock
pop
sti
jb
js
imul
mov
sub
fisubl
je
mov
jp
sub
xchg
fisubrl
sub
sbb
sbb
mov
testl
int
mov
rol
jnp
repnz
aas
sti
dec
cltd
out
jecxz
jbe
test
int
sbb
add
call
push
pushf
roll
jg
xchg
daa
cmp
lods
mov
mov
cs
and
ret
dec
cwtl
es
lcall
loopne
in
arpl
push
jnp
insl
jbe,pn
loope
scas
push
cmpsl
sub
dec
pop
xchg
cmp
gs
inc
adcb
push
sbb
inc
add
mov
fcomi
imul
out
jbe
fnsave
sbb
jb
daa
mov
pop
adc
filds
fsubs
adc
es
xchg
lea
daa
js
mov
in
xchg
cmp
xchg
ljmp
out
jno
lock
jmp
add
push
out
push
inc
ret
imul
loopne
and
rorl
adc
cmpsl
xchg
mov
rcl
mov
or
sbb
cmp
xorl
mov
jns
add
lods
js
loope
inc
cmpsl
jecxz
xchg
xchg
les
es
fmull
mov
cmpsl
clc
jnp
popf
pop
push
stos
or
adc
adc
adcb
push
es
mov
jecxz
scas
push
xchg
xchg
add
mov
fdivrs
ret
into
push
jbe
add
push
mov
xor
dec
into
mov
daa
jns
pop
pop
push
cmp
pop
ret
mov
jnp
xchg
mov
jg
sar
pop
sub
jecxz
mov
cmpsl
pop
loop
adc
out
sub
mov
clc
and
shll
js
sti
push
pop
mov
ss
hlt
popa
cmpsl
adc
mov
or
inc
repnz
mov
pop
cmpsl
add
push
sub
or
inc
aaa
test
test
jecxz
sbb
andl
shl
sarb
mulb
out
repnz
outsb
rolb
pushf
cld
lahf
mov
popf
xchg
clc
cmp
dec
rolb
rorb
jp
sbb
mov
ds
out
jbe
test
icebp
imull
test
hlt
sbbl
fldenv
xor
jmp
js
jns
daa
call
or
test
mov
xor
xchg
rcll
push
out
shll
loop
push
mov
xchg
fadd
lods
mov
pop
dec
mov
notl
in
cmpsl
push
xor
pop
push
mov
mov
adc
lahf
fwait
mov
inc
ret
or
icebp
daa
xor
js
xchg
lret
stc
int3
mov
iret
sub
test
cmpsl
jge
sub
adcl
fstps
dec
xchg
push
cmpsb
xchg
clc
cli
lock
push
sbb
lcall
int
dec
sbb
test
push
mov
data16
cmp
inc
push
ja
mov
add
or
test
ja
in
popf
rorb
push
adc
imul
dec
shlb
push
push
shll
sub
notb
daa
xor
push
adc
icebp
push
aad
adc
jno
inc
fwait
sahf
aam
sbb
inc
sahf
dec
rcrb
inc
mov
sbb
stc
shl
aam
push
or
nop
sbb
in
aas
sbb
or
sbb
add
fbld
mov
hlt
dec
cli
shl
adc
push
pop
and
movsl
xorb
cmpsb
repnz
sub
xor
jo
movsl
dec
pop
fdivrs
inc
sub
sahf
out
add
mov
pop
es
cmp
test
jecxz
jo
cmp
repz
sti
mov
fnstcw
out
push
sub
aam
pop
sti
and
mov
xlat
mov
cmp
sbb
das
ds
pop
scas
das
jbe
das
scas
inc
mov
mov
leave
cld
add
mov
fisubs
fiadds
fadd
xchg
fcomip
stos
fs
enter
jb
adc
fstpt
mov
rcll
daa
inc
sub
lea
movsb
push
out
cmc
in
inc
sbb
push
mov
cmpsl
pop
mov
mov
adc
ficoms
imul
xor
cld
lock
cmp
ret
push
cmpsl
iret
clc
pop
jns
inc
sub
cli
sbb
mov
int3
lds
dec
sbb
mov
ja
into
jecxz
rclb
lahf
or
stos
pop
sub
out
rorl
outsl
lock
shll
pop
popf
or
rcrl
fisubrl
mov
roll
sti
cmc
add
push
insl
in
rcll
jnp
hlt
jne
rcl
mov
push
mov
sbb
add
pop
jae
in
push
in
rcr
lock
or
xchg
adc
mov
fildl
fnstcw
sbb
push
mov
mov
stos
push
aad
and
jle
js
fdivrl
jmp
and
shl
jae
shrl
repz
sbb
dec
rcrl
push
jno
shr
lock
call
dec
in
das
rcll
mov
fstpt
int
ds
jecxz
dec
lcall
bound
jle
mov
insl
inc
loope
arpl
adc
out
push
jo
jge
lods
insl
mov
addr16
and
fbstp
arpl
mov
push
shlb
and
aad
sbb
and
push
push
cmp
xor
enter
jns
add
repnz
xor
fwait
xchg
cmc
fsubrl
not
jecxz
mov
jmp
mov
pop
pop
inc
fs
xlat
js
repz
stos
adc
test
and
shrl
jge
xor
sbb
xchg
and
loopne
dec
inc
sarb
add
shll
test
dec
movhps
sbb
je
rcll
xor
mov
scas
insb
je
divl
xor
jne
fs
push
icebp
repnz
iret
inc
aad
cmp
mov
shll
rcl
mov
es
pop
mov
xchg
pop
push
or
mov
push
or
rcll
in
and
movsl
mov
xor
inc
loop
sti
xchg
cmc
pop
inc
mov
rorl
roll
in
jae
scas
mov
shll
rorl
clc
ret
cmp
jne
inc
and
add
pop
rcr
mov
pop
xchg
sbb
shll
pushf
or
jne
sbbl
test
shll
xor
dec
lcall
cmp
pop
xchg
cmp
cld
repz
mov
inc
popf
inc
gs
add
adc
mov
cmp
sbb
and
hlt
icebp
fidivl
adc
stc
mov
pop
lahf
sarl
cmp
pushf
xor
out
lock
fcom
aam
add
mov
lods
repnz
sarb
repz
mov
pop
mov
movsb
xor
adc
inc
arpl
mov
pop
test
sub
push
out
outsl
lret
shl
hlt
idiv
sar
jns
repz
fs
inc
xchg
ret
rcrl
push
lods
fcom
loope
adc
mul
lcall
mov
iret
outsb
xor
rcll
stos
mov
rorb
mov
jb
out
sbb
xchg
dec
rol
sarl
and
sarl
imul
shrl
ljmp
cmp
insl
in
sbb
test
cmp
xor
push
adcl
push
xchg
cltd
and
shll
shrb
xchg
mov
mov
mov
mov
fwait
jge
sbb
ds
cmp
std
mov
push
adc
push
cli
outsl
shrl
movsl
addr16
mov
hlt
cmp
jge
imul
mov
cmc
mov
push
rclb
bound
ret
sbb
mov
mov
jp
mov
xchg
mov
mov
mov
cmc
and
jle
adc
ror
pop
sbb
scas
xlat
shl
xchg
jne
fwait
and
out
rcrl
jnp
mov
rorl
jp
int3
stc
movsb
inc
rcll
ss
pop
mov
out
jle
rcr
lahf
inc
outsb
fcom
cmp
pop
js
inc
push
add
sti
movsl
pop
push
mov
shrl
xchg
fisubrl
pop
mov
sub
shrl
cmpsb
ror
shrb
inc
les
shrl
outsb
sbb
ret
xor
push
ljmp
sarl
and
gs
dec
push
insb
fsubrl
cmpsl
aad
rolb
mov
jae
rorb
and
bound
xor
shll
pop
lcall
cmp
mov
pop
adc
rcl
in
cmovg
mov
hlt
jo
jns
lret
addr16
xchg
push
sbb
mov
or
cld
cmpsl
rcll
imul
mov
mov
xchg
fcom
lods
call
xor
shll
fs
cmp
outsb
mov
int3
adc
or
xchg
popf
les
xchg
jb
bound
rclb
sbb
xor
pop
push
xlat
loope
push
xor
add
sub
inc
out
inc
mov
xchg
fcmove
repnz
jno
repz
in
push
fsubrp
pusha
xor
cli
fcmovbe
inc
cld
add
jno
imul
mov
mov
push
fiadds
and
data16
test
in
ds
lea
adc
das
rcll
in
jns
mov
test
add
sbb
mov
pop
rorl
and
xlat
pop
fistps
shr
sub
add
mov
loop
cmp
cmp
push
in
jno
jae
xchg
mov
pop
xchg
cmp
and
test
jns
popl
add
and
or
inc
roll
shll
aam
rcrl
stc
sarl
adc
lcall
fcmovbe
out
adc
shrl
lcall
out
or
js
movsb
rcl
ss
adc
cmp
ret
sbb
shll
and
and
cmpsb
fs
daa
jge
outsl
xor
push
add
sbb
int3
adcb
push
insl
adc
rcrl
push
out
mov
cmp
andps
sarb
xlat
mov
shrl
cmpsl
sbb
in
push
js
fmull
bound
push
push
xorb
out
call
leave
loope
adc
mov
xchg
dec
repz
rcll
inc
mov
repz
rorl
sbb
sub
stos
jo
jecxz
movsl
rcrb
enter
lock
add
sbb
rcrl
push
adc
imul
push
xchg
adc
push
stc
xchg
daa
dec
adc
loope
xor
repz
xchg
fisubl
shll
xchg
or
clc
cld
cmp
sbb
rcll
inc
sarl
cmpsl
mov
divl
inc
xchg
int3
or
cmp
shrb
mov
adcl
faddl
shrl
vpsllw
xlat
sti
bound
int
mull
and
push
shl
mov
pushf
and
mov
and
xchg
lcall
enter
mov
mov
mov
les
jp
jne
rcrl
sub
jbe
in
dec
imull
fisubrl
test
fsubs
stos
test
and
subl
sbb
push
xlat
or
and
jo
testl
xor
loopne
sahf
mov
notl
imul
adc
leave
sarl
sbb
or
adc
dec
sbb
xor
mov
arpl
repz
jp
repnz
xchg
push
sub
xchg
jo
rorl
loopne
gs
dec
jle
les
not
out
mov
repnz
sbb
fiaddl
in
shll
push
clc
jmp
ret
jg
popf
push
sub
mov
pop
sbb
sub
je
daa
mov
shr
mull
roll
in
sub
jmp
shll
mov
shr
mov
test
xchg
push
fwait
pop
push
ret
aam
mov
roll
shl
adc
fadd
movsl
in
imul
fistpl
ljmp
or
or
test
xchg
inc
mov
ret
fidivl
clc
shlb
jne
cmp
lea
mov
rcll
sub
icebp
test
aam
pop
dec
out
pop
xor
cmp
inc
repz
cmpsl
shll
mov
mov
mov
pop
rcl
lahf
push
cmpsl
imul
sub
fiaddl
sti
stos
adc
lret
roll
mov
mov
sarl
repnz
cmp
jle
adc
pop
insl
xchg
loop
into
push
mov
adc
das
mov
icebp
fcomi
iret
lahf
cmc
inc
rcl
add
pushf
xor
pop
int3
jb
push
not
std
xor
pop
mov
jg
rcr
pop
mulb
inc
arpl
jle
add
push
lea
jae
pushf
dec
cmp
push
cltd
rcl
mov
push
inc
cs
cmc
xchg
pop
adc
push
inc
adc
movsb
mov
ljmp
rcrl
and
jge
push
jnp
mov
bound
add
cltd
mov
pop
cmp
sub
aam
movsl
mov
jmp
test
sbbl
les
mov
notl
pop
sbb
js
shrl
movsl
aaa
enter
mov
jbe
enter
movsb
mov
mov
dec
cmp
test
jbe
push
clc
les
or
scas
or
fiaddl
xor
jp
std
stos
imul
push
xchg
adc
ja
mov
mov
shl
daa
jl
dec
xchg
fdivs
enter
outsb
lcall
repz
dec
jno
lahf
cwtl
les
lret
push
pushf
jp
inc
and
mov
inc
movsl
jns
repz
fistpl
rorl
fstl
push
testb
push
bound
and
imul
popf
xor
push
sub
mov
mov
shl
bound
and
push
rolb
fpatan
jmp
rcll
test
xor
addr16
data16
fidivrl
jle
or
fstps
movsl
add
adc
mov
rcr
and
xchg
push
aas
mov
mov
xchg
sarl
xor
enter
pop
pop
repz
in
shrl
repnz
shl
pushf
xor
idivb
clc
int
inc
in
stos
sar
jbe
rcll
and
stc
rcr
sbb
sub
rcl
adc
imul
jp
loop
and
rol
lods
call
sbb
out
jb
int3
jp
rcll
sbb
in
ret
xor
shll
lahf
rcrl
sub
pushf
shlb
push
inc
mov
mov
xchg
jb
rolb
push
stc
lret
sbb
push
test
lret
shrl
data16
fucomi
mov
insl
mov
fcmovnbe
arpl
pop
inc
pop
fstps
pop
lds
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
dec
inc
pusha
fstl
ret
xor
and
and
and
and
and
and
and
and
and
adc
and
and
and
es
xchg
and
andl
and
and
mov
and
and
lret
aad
fisubl
adc
add
xor
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
lcall
in
ljmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
dec
xlat
inc
aam
fldenv
adc
add
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
cmpsb
cmp
aas
frstor
ret
sub
cs
ror
dec
repz
lock
cmc
dec
cli
dec
decl
loope
out
jmp
call
dec
push
dec
mov
mov
and
rorl
hlt
jno
jl
imul
mov
xor
xor
xor
xor
xor
fistps
inc
add
inc
xor
into
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
sbb
add
or
xor
cmp
and
sub
sub
sub
iret
push
cmc
add
mov
mov
sub
loope
lea
push
dec
ficomps
jns
mov
cmp
lods
aam
iret
int3
xchg
hlt
mov
xor
pop
popf
ja
xlat
add
xchg
jo
pusha
mov
arpl
mov
jmp
leave
ljmp
sti
jmp
mov
mov
test
cmpsl
repnz
cltd
pop
xchg
lods
stos
push
dec
ljmp
sub
mov
hlt
fwait
xchg
xorl
hlt
movsl
adc
dec
sbb
mov
mov
dec
rorl
jmp
dec
mov
std
int3
out
hlt
xchg
xchg
mov
mov
dec
jne
cli
add
mov
xlat
sbbl
je
hlt
adc
xor
push
call
aaa
or
lahf
cmp
mov
aaa
cmp
ret
into
inc
mov
dec
cltd
sbb
mov
testl
and
mov
mov
or
push
mov
sbb
xrelease
mull
push
stos
mov
dec
dec
jle
pusha
dec
xor
ror
hlt
sbb
sbb
int3
fbld
fldl
sbbl
repnz
insl
xor
add
dec
rcrb
add
out
xor
mov
mov
mov
cmpsl
jmp
test
ret
sahf
out
jmp
mov
cmp
aam
leave
pop
hlt
icebp
xchg
jns
lea
shrb
loopne
mov
mov
and
push
enter
jo
pusha
cld
adc
sub
xor
pop
sbb
dec
or
mov
mov
add
dec
repz
cltd
dec
or
xor
int3
stos
jmp
into
icebp
into
bound
int
dec
mov
push
dec
mov
dec
divb
add
push
int
aaa
arpl
ljmp
dec
ljmp
adcl
and
adcb
sub
aaa
jmp
sub
adc
add
xor
loop
push
dec
lret
and
or
mov
jp
push
sbb
lret
orl
into
add
cmc
aam
mov
push
xchg
cmp
push
sub
aam
das
jb
enter
add
dec
loop
and
dec
sahf
xchg
xor
imul
pop
out
gs
adc
outsb
xchg
adc
hlt
inc
xchg
dec
xor
push
lea
jg
cld
inc
jp
lcall
imul
lret
arpl
jmp
stc
test
dec
dec
dec
test
dec
out
xor
testb
leave
out
test
push
int
xchg
inc
xchg
or
mov
pop
xor
enter
cmp
outsl
xor
cmp
testl
mov
into
ror
dec
imul
lret
int
jmp
pop
dec
fistps
xor
sub
dec
fdivl
cmp
daa
aas
sub
jmp
scas
mov
fisttpll
into
sbb
rclb
add
mov
jns
arpl
lods
and
mov
sahf
out
or
adc
clc
cmp
aas
push
and
daa
sbb
scas
repnz
or
aam
loope
sbb
dec
ljmp
icebp
sbb
cld
je
add
xor
xor
xor
jae
addr16
test
test
test
cmp
aas
and
jno
xchg
adc
movsl
int
cmc
stos
pusha
addr16
pop
lds
inc
icebp
in
pusha
mov
and
leave
int
aaa
sti
cmp
shll
mov
mov
mov
test
aad
std
sbb
aaa
cmc
jecxz
mov
fwait
mov
add
push
sbb
or
push
sbb
pop
xor
sbb
sbb
mov
aaa
push
jae
fistps
xor
mov
imul
divl
mov
push
cmc
jecxz
loope
hlt
in
jmp
sti
pop
out
lcall
jae
fwait
loope
lahf
lods
popf
lods
sbbl
mov
mov
mov
mov
dec
lods
push
fcmovne
fnstenv
sarb
and
jbe
je
into
cmc
mov
popf
dec
or
xor
es
dec
filds
jo
loope
xor
scas
pusha
lods
lods
lods
fwait
lods
lahf
lods
shrd
ror
ljmp
inc
lds
jb
push
xchg
iret
jne
jmp
in
pushf
xchg
fcompl
sbb
sbb
sbb
sbb
cwtl
mov
sbb
cwtl
mov
int3
push
xlat
mov
mov
mov
lods
mov
lcall
lods
mov
xlat
call
shr
in
idivl
mov
dec
mov
leave
lcall
xchg
sti
lods
stc
lahf
mov
std
lods
jecxz
out
sarl
jmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
rorb
in
jo
pusha
inc
adc
jne
jnp
sub
lods
lahf
lods
popf
lods
subl
lods
mov
lods
scas
sub
xlat
cmpsl
aad
fldt
lods
lds
iret
addr16
das
icebp
das
imull
stc
das
ljmp
std
das
in
insl
das
adc
fwait
das
popf
das
subl
das
das
lea
mov
mov
mov
mov
mov
das
mov
xchg
dec
movsl
dec
stos
shrb
dec
rcrl
rcrb
je
shlb
pop
push
popa
and
push
mov
sub
pop
int3
pop
jb
popa
movsl
stos
gs
sbb
cwtl
mov
into
sbb
add
push
iret
xor
cwtl
hlt
pop
leave
xchg
sbb
push
sub
scas
adc
fstpl
xchg
fdivl
roll
stos
add
ds
cmpsl
das
movsl
popa
aad
xlat
dec
dec
push
ret
push
fsts
xor
xor
xor
xor
xor
ss
xor
aaa
cmc
arpl
das
jecxz
loope
out
leave
dec
jmp
jmp
inc
xchg
push
int3
xchg
mov
fcompl
das
or
cli
mov
and
mov
mov
mov
lods
mov
pop
cmpsl
sbb
lcall
inc
ljmp
fcmovne
testb
sub
cltd
sub
sub
sub
sub
sub
sub
stos
icebp
loopw
das
sti
das
stc
das
ljmp
std
das
jecxz
loope
inc
in
sbb
lcall
sub
jmp
in
lahf
negb
xchg
mov
mov
loope
mov
mov
mov
rcrb
mov
sbb
sbb
sbb
test
dec
shll
fldt
lret
mov
scas
popf
cmpsb
pop
lret
adc
repz
in
imul
cmc
in
sti
in
stc
hlt
call
xor
xor
xor
xor
aaa
jmp
xchg
int
inc
xchg
push
xchg
push
int
and
subl
mov
pop
cmpsb
sbb
sbb
adc
iret
ffree
dec
sbbb
pop
adc
sbb
or
push
dec
push
sbb
lret
fmul
sbb
pop
jns
jg
out
sbb
sbb
sbb
sbb
sbb
sbb
lcall
addb
mov
cmpsb
scas
fisttpl
dec
jge
jmp
orb
and
fcomps
sbb
je
sub
inc
dec
jne
call
xor
in
cmpsl
test
les
jo
pusha
add
mov
fcmovbe
mov
fistl
ja
and
mov
leave
or
mov
fdiv
mov
stc
loop
mov
loope
mov
ss
mov
das
in
in
dec
xchg
inc
xchg
xchg
aam
stos
lds
mov
mov
into
in
mov
mov
inc
mov
lea
mov
mov
xor
rcrl
xlat
adc
mov
push
mov
mov
mov
adc
cmpsb
sti
lods
stc
mov
xor
in
jmp
xchg
ss
arpl
test
lahf
inc
popf
xchg
scas
andl
jbe
mov
lods
mov
mov
fmull
mov
mov
stos
pushf
mov
scas
sbb
xlat
stos
out
fsts
ss
xor
das
cmc
testl
icebp
mov
fcomps
std
adc
loope
out
fidivs
loope
ss
jae
xchg
das
xchg
das
xchg
out
ret
dec
cltd
lds
or
sub
dec
faddl
rorl
scas
mov
lods
sub
nop
out
ja
jne
jnp
in
sub
orl
inc
jmp
cwtl
testb
jnp
imul
out
cltd
sub
fwait
adc
sub
iret
vpsllq
test
std
lods
jecxz
loope
out
in
nop
pop
jmp
xchg
lods
xchg
lods
cwtl
lods
pushf
cltd
xchg
pop
mov
movsb
adc
dec
pop
inc
js
jle
jl
bound
pusha
xor
and
push
mov
lods
adc
sbb
sbb
add
add
add
cmpsl
or
push
das
or
movsb
dec
xor
xor
cmp
ds
cmp
lods
and
and
sub
sub
and
push
into
push
aaa
push
cmp
and
pop
sub
das
inc
das
inc
leave
lea
dec
lods
dec
or
jbe
je
jp
js
jle
outsb
lods
insb
lods
adc
aam
sbb
hlt
cmc
aam
add
lcall
lock
mov
jae
mov
inc
jb
xor
and
scas
adcl
pop
mov
js
lret
cmp
adc
rorb
scas
inc
lcall
repnz
in
adc
mov
fsubrl
pushf
push
and
fimuls
mov
add
cmp
cwtl
pop
hlt
xchg
xchg
xchg
add
mov
inc
xchg
sub
jl
adc
cltd
cmp
sbb
push
dec
fcomps
jp
jecxz
ror
iret
and
add
or
aaa
jmp
aaa
icebp
cmp
sbb
push
negl
push
aaa
shlb
fiaddl
mov
int
inc
imul
fldenv
mov
ret
sbb
leave
adc
jo
pusha
and
rolb
sbb
fimull
jmp
stos
inc
ror
mov
int
mov
lods
ficompl
cmp
fwait
jae
les
aaa
cld
cmp
lds
adc
ljmp
dec
je
push
dec
dec
mulb
out
add
fistpl
pop
ja
jno
test
iret
sub
test
nop
mov
jmp
ret
jmp
clc
hlt
cltd
fdivs
push
mov
notl
into
or
aam
dec
std
hlt
add
push
aam
hlt
repnz
fs
pop
arpl
cld
movsl
out
cwtl
mov
ss
push
int3
imul
mov
and
push
xlat
mov
xor
pusha
imul
aad
pop
dec
clc
sbb
jecxz
xor
mov
adc
fidivrl
int
lds
movsb
adc
ret
dec
dec
dec
inc
bound
nop
add
mov
into
loope
lcall
je
xchg
cmp
mov
int3
into
les
repnz
mov
into
sbbb
jns
xchg
aam
int
hlt
call
sub
aaa
push
cmp
mov
jmp
inc
sti
xchg
test
sub
stos
in
push
sbb
fldt
lret
jno
movsb
hlt
icebp
sub
jmp
cld
push
fldl2e
xor
inc
test
enter
aam
dec
push
xor
fcoms
mov
pop
arpl
jmp
mov
pop
dec
xor
and
icebp
dec
dec
lods
inc
clc
push
lods
sahf
jo
arpl
call
pushl
icebp
lret
das
out
stc
insb
scas
ljmp
arpl
sbb
mov
aam
mov
push
iret
les
call
rol
icebp
daa
xor
int
sti
call
test
sarb
fistpl
leave
aam
int3
ja
cmpsb
mov
adc
inc
gs
pusha
adc
adc
pop
xor
mov
clc
xchg
and
pop
or
aaa
aaa
xor
push
mov
inc
lret
daa
and
adc
add
sub
inc
imul
mov
cmc
add
out
sub
sub
push
xchg
push
dec
push
sbb
adc
pop
mov
scas
es
fstpl
dec
sbb
rcr
cmpsl
rcrb
adc
jl
fsubrs
dec
mov
mov
testb
mov
fnstsw
arpl
lret
dec
leave
inc
mov
pop
adc
mov
fstpt
add
cmc
stos
jmp
mov
lcall
jmp
aas
push
mov
push
fnstenv
incl
repnz
lret
jmp
xchg
rol
jg
cwtl
mov
ret
cmp
mov
shll
int3
push
dec
inc
sbb
aas
loope
loope
in
bnd
add
mov
fisttps
fadds
leave
jecxz
push
jmp
out
into
out
adc
ficoms
je
cwtl
pusha
add
les
jno
bound
xchg
xchg
mov
pushf
fsubrl
inc
cmc
jo
loope
cmp
scas
ret
mov
shl
or
jae
push
xor
les
lods
sti
push
inc
ret
roll
loopne
cmp
outsb
jo
loope
or
xlat
mov
negl
ljmp
fisttpll
mov
pop
lods
xchg
enter
push
pushf
mov
and
fucomp
sbb
aam
or
jbe
mov
fdivs
hlt
push
mov
sub
sti
out
mov
adc
into
cmp
dec
jge
gs
insl
mov
xchg
fninit
ret
lods
loop
lds
arpl
pop
fwait
loop
lret
dec
jle
out
leave
ljmp
jecxz
inc
aad
repnz
cmpsl
out
jo
ljmp
push
out
into
sbb
push
lret
inc
arpl
cmp
mov
fwait
aam
dec
leave
hlt
mov
xchg
mov
cmpsb
icebp
in
jmp
repz
adc
adc
ss
lret
jl
inc
mov
les
mov
lods
and
das
sub
lret
or
stos
imull
lcall
xchg
inc
xchg
push
cmc
add
mov
addb
test
adc
aad
lods
movsb
inc
aam
test
xchg
dec
pop
stos
out
mov
dec
test
jmp
sbbb
cmp
rcrl
std
mov
pop
mov
in
mov
stos
scas
sti
xchg
ljmp
rol
lcall
xchg
inc
out
xlat
insb
iret
clc
inc
lahf
adc
sub
in
mov
hlt
cmpsl
xor
stos
sub
call
xlat
pop
aad
fcmovnu
fstps
fstpl
sbb
sbb
sbb
test
jo
and
and
and
and
and
and
and
mov
sbb
cmpsl
out
in
jmp
int
xchg
xor
xor
xor
xor
aaa
cltd
jp
pop
sbbl
mov
mov
mov
mov
mov
mov
sbb
movsb
mov
add
or
pop
mov
aam
ret
xchg
lret
xor
push
mov
jmp
call
shl
cld
xchg
pop
arpl
neg
fistl
cli
repnz
js
lret
push
hlt
xchg
subl
push
das
or
stos
aaa
aaa
lods
cmp
aam
lret
inc
xchg
inc
xor
push
jb
out
in
mov
in
or
or
mov
stos
stos
cld
mov
aaa
in
cmp
dec
leave
mov
popf
lcall
push
jecxz
mov
mov
cltd
movsl
das
stos
out
dec
xlat
into
aad
lcall
sbb
ja
lds
int
imulb
nop
sub
xchg
mov
mov
mov
mov
xchg
jae
inc
aaa
decl
shr
cmp
lcall
jbe
lds
xchg
das
cltd
mov
stc
aad
mov
jl
lods
ss
and
mov
stos
sbb
sbb
sbb
rcrl
fcmovnu
push
cld
ljmp
imul
out
repz
call
mov
lea
mov
xor
aaa
test
pop
sbb
mov
lret
dec
ljmp
movsl
mov
lods
outsl
shr
in
cmc
jbe
mov
lods
out
adc
jmp
jmp
and
and
mov
lods
mov
fnsave
xor
aaa
lds
lods
leave
and
and
and
and
and
mov
stc
jae
std
in
dec
loope
out
enter
mov
xor
xor
ss
sti
mov
xchg
adc
cmpsb
pop
sbbl
xchg
test
sbb
mov
adc
mov
and
mov
stos
xchg
fldcw
shll
inc
stos
dec
test
jg
jge
push
insb
lods
cwtl
lods
pushf
lods
lea
xchg
mov
mov
rorb
roll
cltd
icebp
and
loope
addr16
rorb
and
lds
fstl
pop
sbb
ret
int3
bound
add
sahf
inc
aaa
and
ret
mov
data16
cltd
push
fwait
cmp
xor
ss
in
in
lods
je
xchg
mov
fwait
jl
pusha
daa
sub
das
add
stos
mov
stc
sbb
ds
xchg
inc
mov
imul
test
inc
inc
arpl
cwtl
dec
cmpsl
insb
ror
cmpsl
addr16
pusha
xchg
and
sbb
scas
shl
iret
mov
dec
std
gs
jmp
dec
adc
xchg
rclb
lods
adc
in
les
shll
lcall
mov
std
cmp
mov
fidivrl
mov
ret
jbe
push
les
in
addl
dec
jo
push
cmpsb
sarl
rcrb
adc
pop
lcall
out
cmp
push
jecxz
dec
je
xchg
lods
dec
leave
push
enter
fidivs
out
shrl
xchg
in
arpl
mov
mov
ja
inc
sahf
xchg
mov
xchg
leave
jecxz
sahf
std
jne
push
clc
aam
int3
adc
xchg
xchg
add
push
mov
xlat
dec
push
xchg
xor
cwtl
mov
jecxz
inc
je
sbb
fstl
dec
xor
cmp
pop
inc
dec
inc
xor
jbe
xchg
in
out
mov
popf
ja
lret
repz
sbb
lds
add
xor
dec
jbe
aam
mov
mov
mov
sub
sbbl
mov
push
mov
loope
andl
mov
flds
stos
cltd
sbb
add
into
stos
mov
arpl
dec
xchg
fisubl
into
jb
jecxz
xchg
div
mov
hlt
adc
out
icebp
in
sbb
push
in
sbb
add
or
and
push
mov
mov
and
hlt
iret
mov
imul
cmp
stos
mov
lret
dec
dec
les
js
jmp
cmp
sarb
out
hlt
xor
sahf
dec
into
adc
les
pushf
or
dec
jbe
in
mov
nop
rcl
mov
jns
gs
or
mov
mov
xchg
loopne
push
sarb
test
fdivl
inc
cmp
iret
jb
aam
mov
popa
and
test
jmp
mov
mov
mov
sbb
stos
stos
test
movl
fsubr
fucomi
fldln2
fucomip
fnstsw
mov
rcrl
cwtl
repz
jmp
jle
xor
mov
mov
xchg
in
mov
mov
mov
mov
mov
mov
push
repnz
xor
aaa
scas
aas
negl
sbb
mov
or
sub
jnp
loope
les
sbb
xchg
mov
in
stos
mov
ljmp
cmp
movsl
mov
xor
xchg
test
mov
lea
outsl
stc
pop
mov
push
fisubs
test
dec
roll
fistpl
out
ja
stc
rcr
mov
mov
inc
mov
fmull
inc
mov
mov
mov
leave
aam
faddl
xchg
lock
nop
inc
out
notb
shlb
sub
jmp
arpl
in
pop
in
add
mov
xor
ss
shr
sub
fistl
rclb
out
int3
add
ror
mov
int
les
and
cmpsl
mov
and
clc
push
iret
pop
inc
outsb
cmp
inc
leave
insb
mov
add
loop
mov
ljmp
jbe
idivb
jge
loope
insb
cwtl
sbb
mov
stos
xlat
into
inc
mov
sbb
dec
dec
inc
into
ja
fs
sbb
mov
lcall
scas
jecxz
cltd
jle
xchg
cwtl
sbbl
pushf
imul
leave
iret
xchg
adc
xor
sbb
add
aaa
fistpll
das
movsb
inc
aam
rcl
std
andl
pop
cmpsb
shl
cmp
ret
inc
fnstsw
mov
xor
push
mov
int3
or
xchg
sbb
fmul
push
sbb
daa
adc
dec
das
inc
sub
repz
mov
xchg
ror
dec
pop
enter
gs
xor
mov
push
mov
pop
stos
pop
test
mov
int3
mov
stos
das
test
scas
scas
fimull
outsl
clc
imul
mov
das
push
into
aam
dec
push
icebp
xor
std
das
jecxz
push
fxam
xor
aaa
out
arpl
push
xchg
lahf
aaa
popf
jae
xchg
ret
xor
dec
stos
push
rorb
scas
incb
in
clc
sub
jno
mov
adc
mov
lret
xor
sti
icebp
rorb
mov
jno
loopne
push
ficoms
dec
mov
cmpsl
scas
sub
jle
sti
dec
lret
jg
xchg
stos
aad
nop
jg
out
iret
dec
jnp
push
sti
cmc
divb
fsub
jb
fisttpll
sbb
sahf
xchg
in
nop
out
pop
icebp
and
mov
pop
sub
ja
call
roll
enter
push
ljmp
xchg
fbstp
stos
xor
inc
mov
out
out
dec
gs
xchg
pop
out
mov
lret
sarl
jle
pushf
in
and
cli
cmc
rcr
mov
add
shll
lods
negb
stos
shr
or
mov
nop
add
sbbl
fdivrl
inc
loop
cmp
jae
imul
mov
mov
mov
dec
pop
inc
dec
arpl
outsb
push
lods
lods
push
into
clc
rcr
shll
clc
dec
pop
rorl
inc
jae
daa
inc
movsl
ret
addr16
sub
xchg
lret
add
mov
in
repnz
dec
inc
jge
xlat
rorl
pop
mov
xchg
mov
out
sbbl
aam
arpl
inc
mov
mov
add
pop
int3
jne
sbb
pushf
aas
pop
fldenv
mov
jmp
repz
aam
test
pop
dec
inc
lcall
or
and
ljmp
andb
adc
xor
mov
xchg
xchg
adcl
adc
mov
pop
loope
push
cmpsl
lea
push
xor
adc
push
popf
lret
pusha
insb
adc
pop
push
ret
pusha
inc
adc
inc
cmc
mov
adc
stc
scas
mov
std
dec
jecxz
loope
jl
xor
lret
pop
stc
pop
insl
mov
xor
mov
movsl
aam
pop
and
in
loope
jle
adc
lcall
cmp
cmpsb
das
sub
aam
or
imull
jb
inc
add
lcall
pop
and
aaa
and
aam
leave
mov
cmp
call
js
push
xchg
pop
xor
inc
enter
dec
das
aam
dec
sahf
jbe
mov
enter
pop
aaa
sar
testb
cld
je
out
xor
cmp
mov
aam
shll
cmpsl
in
sti
mul
xchg
mov
stc
xchg
scas
sbbb
stc
stos
sti
mov
bswap
aaa
fwait
xchg
cmp
xlat
inc
aad
mov
mov
jo
test
in
popa
xchg
mov
cltd
jge
test
into
mov
mov
cmp
xchg
stos
stos
out
sti
jbe
mov
std
mov
scas
in
mov
shr
mov
xchg
lods
xchg
mov
add
jmp
push
mov
jg
andl
inc
lahf
sbb
mov
mov
ds
mov
and
sub
push
into
xchg
mov
divb
mov
ss
aas
mov
xlat
cld
mov
dec
cwtl
inc
mov
xchg
xor
dec
fcmove
xchg
xchg
out
in
out
jb
jo
cli
or
lods
xchg
lods
sbb
add
mov
mov
and
push
and
ret
in
lcall
mov
sbb
sub
out
sub
stos
mov
dec
fldt
js
cmpsl
sbb
sbb
adc
jle
js
shll
aad
xor
addb
decl
mov
mov
mov
stos
mov
hlt
movsl
push
icebp
adc
ja
mov
jg
lock
sbb
mov
sti
sahf
nop
jno
lret
xchg
mov
mov
push
movb
out
pop
loopne
loope
shlb
cwtl
das
pushf
outsb
push
addb
adc
mov
jnp
out
xchg
inc
xor
push
jo
je
push
pushf
ss
stc
icebp
ret
mov
mov
gs
imul
mov
mov
push
lods
je
lret
dec
cld
mov
arpl
ficoml
lcall
dec
xchg
cld
ss
mov
xor
mov
test
mov
addr16
mov
xchg
dec
loop
xor
mov
add
cwtl
mov
daa
das
loope
out
pop
xchg
in
stc
in
jbe
push
test
shufps
and
cmpsl
out
shrb
out
les
icebp
xor
or
std
mov
jge
in
jmp
sub
mov
lods
cwtl
sbb
sbb
je
std
push
in
xchg
jns
xor
push
out
lcall
cmp
rcl
fstpt
sti
cli
xor
filds
fxch
stos
cmc
js
fistpl
xchg
mov
xor
and
and
daa
and
xchg
cld
xchg
movsl
cmpsb
dec
test
shll
aad
lea
lret
inc
mov
pusha
shrb
add
cwtl
or
out
outsb
lods
insb
sbb
test
mov
push
rep
mov
mov
movsl
jnp
pop
pop
lret
jns
repnz
xchg
cltd
enter
in
mov
mov
out
cltd
sbb
cmp
cmp
ds
scas
push
mov
adc
jno
jl
lock
push
adcb
test
test
test
lods
mov
pop
inc
xor
jns
sti
fwait
inc
mov
subb
imul
pop
dec
jle
aam
divl
mov
in
push
fwait
arpl
mov
cmc
pop
ljmp
cmpsl
push
mov
fstl
adc
ss
xor
int
repz
icebp
mov
jns
roll
xor
mov
jmp
xchg
pushf
cltd
cmp
lcall
dec
xchg
arpl
lea
fidivl
mov
dec
mov
cmpsl
and
inc
scas
sbb
imul
scas
dec
mov
mov
scas
daa
ja
ffree
movsb
push
jnp
aas
stc
das
bound
pusha
into
adc
std
lock
mov
ds
mov
cmpsl
repz
mov
ljmp
mov
inc
jmp
cmpsb
sbb
leave
sbb
jmp
push
sbbb
mov
movsl
sbb
test
mov
fs
repnz
sbbl
xchg
or
xor
xor
xchg
cli
sti
mov
int
cmc
in
and
leave
test
or
adc
mov
mov
mov
sar
in
mov
mov
stos
xchg
mov
rcr
rcrb
clc
cmpsb
inc
clc
pop
mov
das
xchg
dec
mov
sbb
mulb
mov
xlat
iret
pop
mov
shl
mov
aaa
stos
sub
in
insl
notb
push
movsl
popf
aaa
test
lods
mov
and
cmp
sbb
lods
pop
cltd
mov
rorb
jge
cmpsl
cli
in
sbb
mov
in
and
mov
stos
add
mov
shr
rcrl
subb
movsl
lea
ret
fs
xchg
xchg
out
out
aaa
lock
icebp
and
aam
movsb
ret
dec
mov
shlb
push
into
imul
leave
push
rcr
int
iret
or
xor
das
or
mov
into
sarl
mov
push
enter
dec
dec
int
inc
push
xchg
in
mov
mov
xor
aaa
divb
out
das
in
out
mov
sti
popf
in
lea
out
repnz
icebp
out
sbb
out
aaa
test
cmp
sbb
jo
xor
and
and
cmpsl
pop
xchg
in
out
pop
cwtl
lods
mov
cmp
cmc
movsb
out
subb
sarb
adc
add
sbb
jle
cli
cmpsb
jbe
std
andb
imul
xchg
fcoml
fcoml
cwtl
adc
pop
or
mov
rorb
or
ljmp
leave
or
test
fadd
sbb
fadd
mov
leave
sbb
xchg
int
lds
sbb
std
sbb
addr16
jmp
movsl
mov
outsl
jmp
mov
test
loope
push
cld
mov
std
and
and
dec
lock
loopne
subb
enter
mov
aam
lods
aaa
leave
and
out
data16
js
mov
xor
xchg
lcall
mov
loop
sbb
push
arpl
lret
in
aaa
xorb
aam
mov
sub
mov
push
xchg
mov
xor
and
cmpsl
sbb
xchg
roll
stos
pop
sbb
xchg
cmp
mov
fldl
jp
jae
mov
cmp
and
shll
push
fldl
div
pop
lcall
mov
mov
sub
std
jno
aam
xor
jl
fimull
sbb
sub
mov
cmp
dec
xor
cmpsl
shld
sbb
movsl
xor
insl
cmp
pop
into
jne
shlb
mov
pop
inc
mov
mov
cli
shrl
stos
xchg
xchg
fmulp
inc
cmpsb
push
sti
sbb
loopne
dec
sarb
sbb
lret
hlt
ja
std
add
insb
pop
or
mov
pop
push
enter
outsb
dec
pop
push
xchg
jbe
sbb
add
or
rcrl
mov
les
xchg
jbe
ljmp
int
sbb
fwait
ds
push
push
jbe
sbb
xor
and
mov
dec
xchg
fsubp
jmp
ja
rcll
dec
jb
mov
or
pop
scas
mov
stos
xor
push
mov
rcrl
idivb
sub
pop
enter
fs
mov
mov
lods
fisubrl
out
xchg
push
lds
daa
sti
fldenv
adc
rcll
rcrl
cmpsl
mov
ret
jmp
scas
and
jmp
add
sbb
int
nop
jmp
sahf
addr16
cs
testl
out
and
sbb
adcl
cmpsl
sub
inc
loop
andl
ficoml
mov
fsubr
sub
lcall
out
enter
add
mov
xor
add
sarb
into
pop
in
mov
push
ror
pop
mov
mov
es
push
xchg
lcall
in
cli
adcl
inc
or
sub
dec
inc
lret
leave
sbb
cmpsl
bound
push
jmp
ret
stos
mov
cwtl
leave
fcompl
fnstenv
cmpsb
testb
enter
inc
adc
pop
xor
mov
fsubs
loopne
int3
and
cmp
pop
cltd
cmp
push
in
xchg
ret
or
jnp
jge
xorb
int
lds
mov
jmp
sbb
mov
ja
fwait
xlat
iret
dec
xor
dec
les
mov
sbb
mov
and
add
scas
addl
cld
and
mov
and
xchg
lds
roll
test
jmp
call
jns
cld
fmulp
mov
mov
repz
cltd
lret
ficompl
cmpsl
scas
loop
xchg
push
insl
pop
frstor
xor
movsb
sbbl
sbb
fdivs
push
rcrb
push
push
dec
jle
fadd
test
inc
scas
xchg
cmpsl
enter
jmp
test
jae
xchg
in
lahf
adc
iret
hlt
repnz
pusha
insb
adc
popa
shl
mov
jae
add
lret
mov
mov
ja
mov
lret
jmp
leave
fsubrp
aam
mov
pop
inc
pop
jg
jge
movsb
inc
popa
jnp
pop
imul
outsl
pop
insl
and
into
xchg
scas
adc
cmpsb
push
mov
test
fs
mov
pop
iret
int
scas
sbb
stos
repz
sbb
loope
jns
mov
inc
xchg
stos
lcall
rcll
enter
xchg
inc
push
xchg
jmp
cltd
stos
fidivl
xor
fucomi
sbb
into
cld
fldl
sbb
aad
daa
lahf
pop
cmp
daa
mov
inc
fstl
pop
adc
inc
cld
testl
fcmove
hlt
fwait
sub
and
loopne
scas
int3
jmp
outsl
push
fimull
ds
xor
inc
cli
pop
or
out
xchg
push
cmpsb
cmp
push
clc
sub
shrl
mov
sbb
lret
add
pop
ja
mov
sti
stos
enter
xchg
xchg
sti
sahf
je
and
cmpsl
and
push
mov
mov
pop
mov
fisttpll
cmpsb
sbb
and
rcrl
push
mov
pop
daa
jae
sub
sub
das
dec
out
in
aad
enter
mov
mov
mov
cwtl
mov
cld
lret
test
inc
jne
test
mov
sbb
dec
pop
pop
fdivs
pusha
adc
pop
mov
test
mov
add
ljmp
lret
outsl
dec
push
cmp
mov
sti
dec
negb
mov
inc
enter
mov
mov
dec
fcmovne
lds
pop
rcll
push
subb
ficoms
lahf
jl
jne
mov
dec
jmp
dec
lds
mov
and
inc
rclb
mov
xchg
push
jbe
js
arpl
scas
in
outsl
ja
incl
adc
std
pop
mov
jle
stos
mov
rcr
sbb
fcomps
adc
mov
rcrb
pop
xor
sub
xchg
aam
iret
xor
sbb
into
jns
dec
sub
subb
cwtl
mov
int3
push
fdivl
fadds
xor
lods
das
ror
push
aad
jl
stos
lds
xchg
jecxz
xchg
inc
stc
jg
cmp
sbb
xchg
mov
lods
ja
sti
int3
divb
movsb
ja
lods
rcrl
addb
lock
push
mov
ja
push
and
test
stos
ret
xor
stos
mov
push
push
inc
lret
sbb
imulb
mov
subl
dec
fdivrl
dec
popa
icebp
and
mov
ja
push
das
add
xchg
movsl
cmp
lods
adc
lret
mov
imul
cmp
pop
xchg
push
mov
arpl
xchg
out
sub
stos
xor
sarb
push
sbb
mov
cltd
lds
lcall
push
enter
call
pusha
cmc
dec
dec
cmp
sub
sub
mov
icebp
or
or
jmp
jbe
push
scas
adc
pop
add
ret
jl
mov
or
mov
mov
add
mov
mov
inc
jmp
hlt
repnz
ljmp
mov
cmp
aam
jnp
jg
bound
push
xor
xchg
or
xor
push
hlt
mov
sbb
popf
pop
or
mov
jl
mov
lods
nop
and
and
js
mov
ficoms
pop
xor
das
jne
stos
das
jle
push
aam
xor
in
in
inc
adc
rcrb
mov
xor
aaa
cmp
mov
push
mov
inc
fcmovb
jl
sub
repnz
cwtl
test
or
movsb
mov
mov
push
push
lret
fdivs
fdivrl
shr
enter
jb
aad
adc
cld
pop
lods
sub
push
mov
ret
fmul
stos
shlb
push
scas
cwtl
adcl
test
rclb
sbb
pop
iret
inc
in
roll
in
out
inc
adc
dec
mov
mov
repnz
jno
stos
out
cmpsl
lds
mov
jg
xchg
inc
int3
sarl
mov
nop
lret
ja
in
lahf
fiaddl
out
and
cli
jbe
rolb
into
sarl
icebp
xlat
out
sub
cmc
mov
sbb
je
push
push
test
cmpsb
mov
dec
shlb
in
ja
rolb
roll
movsb
mov
rol
pop
ror
pop
sti
xchg
jle
push
test
jmp
jg
stos
testl
out
push
negb
mov
mov
mov
xor
popf
push
sbb
lds
sbb
mov
stos
cmp
les
popf
test
mov
push
das
xor
cmp
stos
inc
aad
les
jecxz
xlat
inc
jmp
shll
fmuls
das
or
aaa
jmp
or
les
pushf
jle
add
sbb
lcall
jae
inc
aaa
js
mov
jmp
into
xchg
inc
add
into
adc
movsl
and
jae
mov
rcr
fmul
inc
jge
les
popa
push
mov
pop
dec
fisubl
leave
add
adc
shrl
rcrb
sub
arpl
dec
aas
int3
inc
mov
ret
repz
cmpsl
cmc
or
scas
cmp
int
and
fistpl
sti
sarl
xchg
mov
mov
sub
inc
sbb
stos
jnp
xchg
hlt
outsl
xchg
mov
test
stos
xchg
jge
out
repz
lcall
shl
mov
fld
lods
mov
push
stos
cmp
adc
aaa
mov
jb
jecxz
push
shr
in
out
xchg
lods
adc
mov
aas
iret
inc
les
and
mov
scas
testl
subl
mov
jbe
test
sbb
mov
hlt
sti
or
jmp
movsb
lcall
andb
stos
jmp
nop
ja
xchg
das
mov
out
inc
das
adc
inc
loopne
loope
idivl
imul
scas
repnz
movsl
cld
scas
mov
cli
lods
out
lcall
sub
fld
inc
fadds
mov
mov
mov
mov
push
dec
lret
retw
cld
mov
in
xchg
jl
mov
fcomps
fcmovb
scas
ret
sub
sub
das
dec
das
jae
push
fsubrp
jg
stc
in
mov
mov
jl
xchg
mov
mov
pop
subb
pop
mov
ror
repnz
jmp
sbb
jge
mov
cld
sarl
lahf
lods
sahf
jl
test
popf
pop
dec
or
addl
loop
addl
shrb
lods
inc
pusha
repz
out
rcll
mov
in
into
aam
lds
das
mov
lea
shrb
roll
pop
in
lods
icebp
or
mov
popa
lea
mov
loope
roll
cli
mov
aam
das
xchg
cmovle
lahf
rcrl
push
in
xchg
pop
bt
cmp
jns
fdivrs
xchg
sti
rorl
into
loop
insl
arpl
lods
mov
add
cld
subl
icebp
xor
out
inc
sub
movsl
push
mov
stos
je
cld
cltd
mov
add
ss
in
out
rcl
cld
ja
clc
inc
or
mov
sbb
mov
add
jp
loop
in
xchg
sbb
sbb
fmuls
mov
pushf
mov
xor
shl
mov
inc
dec
dec
int
les
test
clc
sahf
pop
ljmp
pop
mov
dec
js
icebp
call
jmp
mov
mov
jp
sbb
dec
je
fs
mov
loope
int3
or
ljmp
push
cmpsl
lcall
mov
xor
andb
repnz
inc
std
cltd
jecxz
repz
lcall
mov
out
test
into
out
sti
dec
loopne
aam
mov
xor
push
sbb
cmp
mov
rcll
push
add
mov
rol
xchg
mov
stos
ror
xor
add
lds
jae
fadd
test
sbb
xor
lcall
dec
inc
sbb
lods
nop
stos
add
adc
jb
out
pop
out
xchg
dec
inc
jae
or
jmp
movsb
popf
cmpsb
mov
ljmp
inc
int3
jg
xchg
aaa
repnz
xchg
rorl
ja
hlt
mov
fnstsw
adc
call
or
xor
cmp
xchg
int
mov
pushfw
jbe
std
rcrl
lods
stos
test
or
aam
inc
ja
jb
inc
mov
shr
mov
jmp
cmpsb
out
xlat
dec
jbe
add
add
xchg
sbb
dec
movsb
lea
test
insb
movsl
ja
pushf
mov
xchg
call
push
movsl
pop
mov
mov
fwait
xchg
mov
repnz
pop
sub
idivb
repz
dec
scas
inc
sub
xchg
jp
inc
cmp
outsl
add
or
mov
mov
out
out
addl
loope
xlat
mov
push
xor
aam
mov
fdivr
std
or
aam
lock
jg
in
repz
jbe
incb
fwait
sbb
fmuls
jbe
or
sbb
pop
sbb
lods
subl
xor
dec
dec
repnz
sbb
je
mov
cmp
lcall
lret
leave
repnz
xchg
sar
xchg
push
les
js
fnsave
sbb
mov
daa
xchg
push
add
cmp
xchg
xorb
sub
addr16
into
add
push
xchg
dec
or
clc
add
add
xor
cmc
cmp
aad
xchg
inc
and
inc
sub
jmp
inc
sarl
lret
push
inc
push
jo
pusha
pop
adc
push
in
pop
aaa
fidivs
loope
lcall
push
add
fs
mov
mov
xchg
jge
xchg
dec
sub
jecxz
jo
pusha
mov
xor
stos
in
stos
in
test
scas
mov
xor
cmp
mov
rcrb
xchg
test
jp
push
xchg
aam
jmp
jmp
mov
or
lods
dec
lcall
lods
mov
adc
rol
jmp
push
xchg
aaa
addl
in
mov
jg
aam
movsl
and
test
aad
enter
and
jg
in
mov
mov
mov
rclb
mov
orb
aam
mov
sti
push
repnz
mov
pop
mov
out
in
pop
jmp
cltd
cmpsl
dec
mov
lret
lods
cwtl
test
xor
mov
sarl
in
in
push
test
test
stos
sbb
push
mov
enter
cmpsl
jl
xchg
pop
dec
mov
iret
fimull
subl
scas
push
dec
neg
aam
popa
ss
filds
ror
push
int
bound
jno
cli
jmp
out
out
hlt
xor
sahf
ljmp
rorl
lret
lods
shrb
sbb
cwtl
into
adc
ret
pop
mov
fidivrs
sbb
mov
fmull
and
push
dec
pop
cwtl
pop
je
leave
push
jbe
ljmp
push
lock
xchg
xchg
or
in
cld
aaa
loopne
shr
les
adc
stos
std
add
shrd
mov
push
ret
jns
xchg
xor
loope
je
leave
ss
aas
fsubrl
das
mov
addr16
mov
and
stos
or
fists
xor
jbe
push
lahf
and
stos
call
je
hlt
gs
fs
push
push
mov
adc
sbb
sbb
icebp
notb
jmp
fimuls
stc
and
sti
ret
mov
daa
repz
dec
jbe
mov
mov
js
mov
dec
loopne
in
push
ljmp
push
mov
cwtl
movsl
push
xlat
std
push
pop
pop
cmpb
hlt
in
cmpsb
sbb
xchg
orb
dec
or
mov
aam
stos
and
adc
jle
sahf
in
outsl
mov
rcl
cltd
mov
aaa
fdivrl
inc
shrl
lods
sbb
mov
mov
fstpl
lds
jne
ja
sahf
jbe
test
push
call
cld
inc
cltd
push
mov
cltd
mov
mov
mov
cld
aad
int
mov
sbb
fcmove
cmpsl
std
cwtl
sub
in
lock
jmp
pop
push
andl
and
in
test
lods
stc
sbb
pop
cmp
movsl
add
int3
push
mov
jb
dec
in
int
inc
xchg
mov
test
mov
add
xchg
push
adc
ret
jmp
pop
push
mov
xchg
pop
leave
loop
xchg
jl
adc
mov
fdivrs
sbb
sbb
fstpt
lcall
cmpsb
push
mov
pop
xchg
rcrl
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
lods
mov
push
xlat
hlt
adc
arpl
loopne
imul
pop
stos
sbb
or
xor
mov
scas
test
dec
fs
cltd
lock
ret
loop
sbb
loop
addr16
mov
jmp
lcall
scas
mov
in
subb
ret
ret
mov
adc
pop
lcall
jl
int3
fnstsw
lock
mul
cltd
out
in
or
lea
xchg
iret
xchg
xchg
jnp
cmp
out
adc
aaa
idiv
loop
in
xchg
testb
mul
lods
sbb
jns
fstpl
mov
fsts
lahf
adc
aaa
loope
out
in
popf
jbe
cmp
test
and
stos
in
pop
xchg
pop
sbbl
fstl
mov
cld
in
mov
mov
leave
lret
sbb
mov
inc
mov
xchg
jmp
mov
popf
push
sbb
lods
lcall
sbb
pop
cltd
sbb
sub
divl
out
mov
in
xchg
or
xor
aas
sub
test
lods
pop
negb
pop
in
out
popf
imul
loope
mov
fucomi
cld
iret
std
jl
adc
repnz
mov
fwait
inc
sbb
cld
out
pop
jg
inc
loope
sahf
cmpsl
xor
inc
push
clc
add
mov
inc
jecxz
fldl2e
mov
ja
scas
lret
leave
jnp
out
jmp
es
adc
dec
adc
scas
test
push
into
push
cwtl
push
mov
pop
aaa
mov
pop
out
cwtl
inc
xor
xor
xor
dec
nop
cmpsb
sub
repnz
imul
lds
repz
dec
mov
sub
ja
xchg
push
repz
jg
inc
and
xchg
hlt
or
cmp
pushf
push
int3
into
jg
test
mov
fwait
jl
push
xchg
js,pt
leave
test
mov
rorl
jmp
mov
pop
lret
push
aad
loope
movsb
xor
hlt
sub
das
cld
das
loop
loopne
out
in
ljmp
mov
leave
adc
fimuls
test
and
push
enter
add
and
sub
jecxz
mov
addl
in
pop
orl
sahf
mov
jge
lock
inc
add
mov
mov
mov
pop
dec
jns
mov
sahf
jg
mov
rorl
xchg
gs
roll
xchg
pop
pushf
inc
outsl
push
fldl
lret
inc
lods
fstp
mov
jae
rol
mov
mov
sbb
inc
dec
jae
in
out
xchg
popf
dec
aaa
popa
cli
xchg
or
mov
cmp
mov
rcrl
mov
movsl
bound
inc
aaa
loopne
ret
sub
stos
test
add
test
mov
out
cmpb
dec
push
dec
xor
pop
dec
dec
add
cwtl
jmp
fstps
pop
sbb
mov
pop
lcall
xor
dec
mov
negl
jge
sahf
adc
mov
pusha
adc
push
sbb
push
aad
mov
xor
mov
sub
cmpsl
push
dec
jmp
dec
dec
int
lds
ljmp
in
roll
sbb
xchg
inc
dec
jns
mov
adc
add
shlb
roll
into
ljmp
nop
cmpsl
inc
sahf
shr
xor
lods
and
aam
push
dec
fiaddl
stos
pusha
test
mov
xchg
fcomps
dec
xorb
hlt
imul
push
sbb
sbb
cwtl
stos
stos
fcomps
or
jl
aad
sbb
mov
ret
js
call
push
repz
outsb
stos
scas
add
xchg
icebp
rcr
imul
pop
mov
loop
adc
and
mov
pop
mov
and
lret
lock
aam
pop
sbb
fsubs
rclb
rorb
data16
stc
in
fistpll
test
int
iret
in
xchg
das
enter
or
lcall
mov
testb
pushf
mov
ja
imul
mov
icebp
jmp
ror
lret
inc
fwait
sbb
je
lret
int3
pop
int3
xchg
lds
imulb
iret
lods
sbb
dec
jbe
js
lock
call
xor
or
xor
cmp
sbb
push
in
fistpl
pop
inc
lcall
std
inc
push
jecxz
aaa
out
xor
adcb
and
movsl
test
daa
loope
lahf
hlt
inc
push
mov
loope
sahf
pop
in
jl
lahf
cmpsl
hlt
adcl
jge
aam
loope
je
xor
lods
stos
shr
mov
scas
mov
js
mov
std
mov
addb
mov
in
call
rcrl
rcrl
lds
aad
mov
in
mov
cltd
or
out
lcall
push
mov
mov
out
rorl
mov
pop
lds
scas
jmp
stos
std
mov
mov
iret
or
mov
aas
mov
jno
flds
xchg
in
jmp
hlt
xchg
push
cmp
push
jmp
ret
inc
test
pop
jg
loop
xor
cmp
and
stos
inc
dec
jle
xchg
cmpsl
xor
test
daa
mov
sub
mov
fsubrp
fsubrp
inc
hlt
lret
mov
jae
mov
jnp
into
std
js
lods
gs
xchg
inc
push
sti
pop
jae
pop
push
cmpsl
mov
or
xchg
pop
mov
cmp
ds
sub
sub
mov
leave
test
inc
pop
dec
scas
dec
jb
ja
les
jl
rorb
xchg
lret
adc
addb
add
push
cmp
cmp
in
lods
adc
hlt
insb
sbb
add
or
mov
outsb
fidivrl
stos
hlt
and
and
stos
xchg
push
cwtl
mov
hlt
or
cltd
pop
stos
ret
rcr
push
rcr
movsb
out
dec
incl
sub
call
mov
xchg
stos
test
pop
stos
sbb
scas
out
stc
lods
jmp
xor
das
inc
inc
xor
or
xor
daa
lods
aam
pop
add
repnz
mov
das
cld
mov
pop
jle
cld
sub
stos
xchg
incb
lahf
jo
cld
push
gs
mov
sbb
fcoms
xor
jl
push
lcall
ret
jo
sti
fwait
xchg
mov
repnz
ror
sub
iret
sub
inc
stos
xlat
sbb
roll
or
inc
add
dec
mov
jae
mov
ja
out
jns
jg
jge
arpl
push
mov
out
inc
fists
jbe
mov
arpl
test
je
xchg
stc
xor
lods
cmp
lods
daa
sbb
ret
jge
xchg
push
inc
push
jo
pusha
pop
adc
rorl
pop
fstl
jb
xlat
cmp
cmp
fsubs
ja
and
fstpl
cs
sub
bound
ficompl
pop
das
inc
das
inc
push
repz
int
dec
cmovno
aaa
mov
lods
aas
lods
cmp
and
lods
pop
in
cmpsl
stos
ret
adc
pop
int3
fmulp
mov
ljmp
xor
popf
stos
pop
dec
fimull
fsubr
sbb
fisubs
iret
xchg
ror
ljmp
fisubl
mov
divb
xor
adc
rorb
stos
dec
js
movsl
in
jbe
je
jp
test
ja
bound
mov
lods
outsb
sbb
adc
mov
inc
lea
test
lods
outsb
mov
in
adc
adc
push
in
adc
sbb
push
jae
add
add
mov
cld
iret
push
scas
call
fdivl
pop
mov
les
aaa
repnz
jge
ret
dec
clc
inc
arpl
aaa
xor
shlb
out
xor
popa
jmp
mov
xchg
mov
dec
test
xor
aaa
das
cmp
mov
xor
icebp
push
add
ficomps
out
jecxz
cwtl
inc
mov
jecxz
cwtl
jbe
mov
es
rorb
mov
aam
fsubr
and
icebp
push
lret
mov
aam
fsubrs
inc
jbe
mov
jp
sarl
jl
bound
lods
push
push
lods
adc
cli
pop
sbb
sbb
add
ror
loopne
mov
int3
xchg
icebp
jmp
in
insl
in
mov
aam
cmc
xchg
and
and
and
dec
dec
push
into
push
dec
push
int
dec
pop
int3
pop
inc
pop
imul
dec
mov
or
and
aad
jbe
mov
iret
lods
into
fdivrs
adc
xchg
pop
cmp
add
add
add
pop
or
sbb
sbb
es
xorl
loope
and
daa
arpl
pop
sbb
leave
dec
lcall
out
fldl
jae
jge
arpl
popa
das
addr16
gs
xchg
fisubrs
rcrb
xor
adc
addl
stc
cwtl
jo
adc
mov
leave
iret
jl
sbbb
push
fwait
stos
pop
push
add
adc
and
xchg
dec
xor
aaa
jae
cmp
cmp
aas
das
cmp
dec
daa
lret
dec
xor
and
scas
pop
sti
fisubrl
xchg
sbb
pop
sti
or
into
mov
jmp
inc
enter
mov
add
stos
mov
repz
std
rcr
mov
mov
xchg
das
sbb
ljmp
sahf
je
mov
pop
sub
inc
stos
inc
mov
mov
xchg
std
sbb
test
in
mov
sbb
dec
cli
aad
xlat
jbe
mov
mov
ss
mov
out
ret
push
dec
mov
and
hlt
into
mov
mov
scas
fcmovbe
mov
movsl
jnp
push
leave
lcall
jbe
subl
fidivrs
stc
int
dec
push
xor
stc
test
in
xchg
andb
pop
xchg
push
and
sbb
jno
ja
push
fnstsw
in
jg
jge
arpl
test
outsl
xor
xor
xor
ss
js
xchg
fcomi
mov
xchg
insb
dec
ret
cs
adc
cmp
push
xchg
and
xor
ss
inc
jmp
pop
cwtl
pop
adc
inc
sub
inc
push
mov
jae
inc
das
inc
das
inc
lds
dec
movsb
stos
jne
xchg
aam
push
iret
pop
jge
inc
xorb
mov
into
jl
mov
repnz
int3
and
push
into
pop
lods
in
lea
in
fidivl
insb
xor
mov
mov
sub
mov
xor
mov
aam
xchg
in
mov
mov
mov
int
cmpsl
or
sbb
fnstenv
andb
or
shr
aam
aam
test
les
scas
sbb
lods
fdivs
iret
sti
push
aam
push
xchg
jae
test
push
sub
iret
movb
or
mov
fwait
push
cmc
in
loop
movsb
and
mov
sti
adcl
jmp
mov
and
das
sti
mov
dec
enter
popf
mov
out
cwtl
mov
test
lods
pop
inc
dec
inc
push
test
jb
ja
cmp
pop
ljmp
adc
xchg
xor
cmp
stc
test
rorb
aam
fsubrs
les
adc
out
hlt
jmp
iret
inc
call
xchg
data16
lods
mov
pop
mov
ret
push
push
hlt
pop
xchg
repz
aaa
mov
push
cld
jl
test
lahf
stc
sti
pop
mov
std
pop
stos
jmp
dec
scas
sti
push
loope
fdiv
in
mov
xchg
aad
rolb
test
mov
jle
push
std
mov
cmp
test
xlat
adc
dec
in
outsl
arpl
push
inc
mov
mov
imul
xchg
fs
flds
pushf
and
outsl
rcrl
or
icebp
xor
out
xchg
jecxz
pusha
insl
cmpb
add
rorb
rorl
icebp
push
jmp
test
xchg
or
jl
out
imul
sbb
sbb
cwtl
mov
mov
mov
fidivl
call
in
addr16
adc
xchg
xor
test
or
movsb
mov
out
push
dec
inc
inc
loop
push
stos
xchg
jbe
and
inc
loope
popa
cmpsl
adc
jmp
movsb
mov
clc
out
ficoml
jmp
dec
daa
jp
ret
fimuls
js
repz
loop
jecxz
stc
cmpsl
shrl
jne
xchg
dec
push
inc
mov
rorb
out
inc
mov
shll
fucom
sbb
fwait
xchg
lcall
sbb
testl
out
sub
stos
lret
cld
mov
mov
jnp
pop
mov
pop
mov
iret
rol
xchg
hlt
into
push
in
jnp
xchg
arpl
pop
imul
inc
adc
push
mov
adc
iret
in
and
mov
dec
test
pop
jmp
orb
mov
cmp
cmpsl
je
sub
mov
sbb
mov
insb
notl
pushf
jmp
addr16
inc
jmp
push
sub
pop
aas
fld
mov
gs
dec
xor
jecxz
out
loope
or
cld
dec
icebp
je
icebp
outsb
test
aad
cltd
decb
in
call
out
mov
into
sbb
cmpsl
inc
ss
push
inc
mov
lret
lcall
mov
inc
addr16
mov
cli
lods
icebp
inc
outsl
jmp
hlt
cwtl
adc
push
in
sti
fsubrp
test
mov
ljmp
jb
iret
push
out
xor
xor
ss
mov
mov
xor
mov
dec
data16
mov
jl
mov
jl
lret
inc
arpl
jnp
push
fisubl
imul
jno
xchg
nop
mov
mov
mulb
ficoml
mov
lahf
ja
sahf
inc
loop
jecxz
cmc
negb
mov
subb
jle
or
iret
sti
lds
sbb
loope
dec
cmp
push
negb
popa
sbb
sbbl
adc
jbe
out
lea
push
test
rcrb
jae
ret
jmp
icebp
movsl
pop
or
cs
mov
rcr
push
ffreep
mov
jle
cmpsl
into
lcall
push
xor
mov
stc
or
das
mov
into
out
iret
or
jecxz
add
lahf
push
sbb
call
xlat
fcom
dec
fiadds
mov
ror
outsb
lds
ja
mov
sub
movsb
xor
aam
popa
pop
outsl
lods
mov
push
mov
mov
and
pop
fs
fidivl
clc
pushf
fdivrl
adc
negl
cmp
jb
lret
inc
js
fldenv
mov
or
mov
mov
ds
movsb
repz
dec
neg
setae
les
arpl
std
mov
sbb
jg
loope
mov
inc
xchg
mov
js
test
xchg
movsl
mov
mov
fdivp
fcoml
sbb
mov
sbb
cld
or
lods
out
inc
loopne
scas
adc
fwait
daa
mov
mov
mov
int3
adc
adc
shlb
sbb
imul
push
lcall
shrl
lcall
jnp
add
push
pop
insl
adc
clc
icebp
loopne
roll
repnz
fucomip
lcall
xchg
push
jbe
stos
mov
les
fdivs
shlb
mov
ja
pop
scas
clc
jbe
push
jns
sbbb
mov
fs
pop
mov
sti
mov
mov
lahf
stos
outsb
bound
pop
xlat
sub
in
mov
in
xchg
nop
cld
and
stos
rorb
fdiv
in
icebp
in
int
cltd
or
mov
rcl
push
outsb
mov
cltd
andl
in
movsb
or
adc
mov
flds
scas
loope
je
mov
jmp
cmpsl
mov
orb
loop
or
xlat
cmpsl
sbb
aam
cmp
adc
ror
push
std
xchg
adc
fcompl
xchg
sub
rorb
cli
scas
aas
add
fs
add
repz
int
mov
insb
xor
insb
sbb
mov
test
inc
mov
jmp
fstps
cmpsl
push
or
lods
add
loop
es
xorl
lret
xor
push
dec
lods
cmc
icebp
jmp
jmp
cltd
mov
in
mov
mov
mov
shll
push
aam
out
fsubr
pushf
jbe
subl
mov
bound
mov
adc
les
movsb
dec
push
aam
jg
inc
out
outsl
jbe
mov
cwtl
xchg
pop
test
push
in
pop
pop
jecxz
cmc
adc
lret
sbb
sbb
sbb
adc
test
lods
lret
cld
ret
fsubrs
xlat
les
inc
aad
cld
clc
cmp
sbb
xor
lcall
cltd
mov
imul
and
xchg
fmulp
adc
outsb
subl
or
test
dec
test
mov
mov
lods
push
pop
clc
aaa
jns
lods
addr16
cli
pushf
fstp
inc
cwtl
inc
and
xchg
jecxz
sbb
xchg
das
xchg
das
add
pop
mov
or
xor
cmp
and
push
movb
mov
jle
push
mov
xor
lods
stos
inc
enter
cmpsl
jp
imul
mov
mov
and
dec
dec
inc
aam
shr
hlt
jbe
fisubs
outsl
sbb
out
inc
iret
inc
xor
imul
paddsw
mov
cld
mov
or
pop
data16
and
mov
int
call
xchg
cld
in
sbb
cli
jbe
ret
mov
setb
cmp
sbb
or
rcl
out
lcall
dec
insb
or
dec
add
sahf
cmc
fldt
icebp
popa
mov
add
xor
fcmovnb
pop
dec
jbe
adc
xorb
xchg
xchg
aam
push
mov
jae
into
and
lahf
out
add
mov
jo
loope
mov
in
mov
add
pushf
test
cld
leave
sub
stos
shrb
rep
inc
movsl
subl
cmp
testb
cmpsb
js
mov
inc
xor
rcll
mov
nop
in
daa
in
and
lcall
test
mov
mov
fs
xchg
pop
iret
dec
mov
pop
pusha
xorl
das
aas
push
subb
dec
inc
call
data16
movsb
jmp
loop
mov
jmp
jae
jno
xchg
jecxz
xchg
jo
and
test
pop
add
out
test
cmpsb
lea
xor
es
mov
jmp
xchg
subb
mov
cmp
mov
aad
dec
stc
adc
xchg
push
aam
lds
mov
lods
jl
shll
pop
in
into
sub
es
das
enter
mov
addr16
in
mov
test
imul
sbb
xorb
scas
cltd
sbb
mov
stc
xchg
das
or
inc
sub
test
mov
adc
mov
sub
stos
mov
pop
push
mov
push
jo
jle
xchg
aaa
add
les
mov
xor
test
je
mov
cmpsl
dec
sbb
jge
mov
add
xor
xor
cmp
rep
sbb
push
inc
pop
icebp
les
fs
outsb
lds
mov
stc
aam
gs
lcall
sbb
push
xor
out
fnsave
addr16
das
in
subl
in
mov
mov
xchg
dec
jmp
das
subl
mov
mov
jne
mov
inc
sbb
xchg
adc
push
les
xor
xor
cmp
push
out
inc
inc
xchg
sahf
add
or
movb
je
js
mov
or
xor
sbb
shlb
push
scas
push
aaa
cmp
shll
out
mov
sub
jns
stc
add
mov
cs
jge
jg
mov
stos
lds
fwait
dec
sarb
xor
jbe
arpl
les
in
gs
imul
xchg
lea
mov
out
lcall
addb
aaa
mov
cltd
outsb
shll
mov
push
ret
push
push
mov
jge
out
ljmp
xchg
jl
loop
cmp
roll
inc
or
test
call
lret
cwtl
push
adcl
in
sti
int
outsl
xchg
test
ficomps
pop
addl
inc
test
mov
xor
cltd
lret
std
pop
cmpl
dec
fimull
pop
xor
mov
in
sub
push
movsl
mov
push
popf
sbb
or
out
mov
xchg
xor
push
ficompl
scas
xor
adc
cwtl
mov
adcb
mov
lret
xor
repnz
clc
int
cmp
push
cmc
daa
dec
fwait
lret
jbe
into
shlb
icebp
enter
or
or
test
in
cmp
xchg
leave
mov
cmp
inc
clc
cmpsl
pop
sub
sahf
xorl
ljmp
loop
inc
dec
je
mov
add
repnz
cmp
lods
sti
pop
and
mov
or
xchg
fdivs
pop
adc
cmpsl
cmc
or
mov
icebp
jge
fldt
cmp
fildl
rcr
mov
stos
cltd
mul
push
repz
pushl
lcall
les
cwtl
inc
in
fcompl
pop
push
cwtl
xor
pop
stos
testb
jno
enter
lds
cwtl
jns
fmuls
push
dec
imul
add
int
inc
mov
je
push
in
test
dec
js
add
jmp
jmp
jp
ficoml
dec
cmpsl
rcl
dec
call
lahf
dec
ds
incb
inc
fidivs
dec
aas
into
push
mov
std
mov
xchg
scas
xchg
bswap
mov
testl
mov
inc
mov
jbe
pushf
gs
das
cli
das
inc
shr
lcall
lods
xchg
sbb
lods
add
push
scas
lahf
mov
rcrb
sub
xor
sbb
xchg
or
and
push
int3
je
adc
adc
loopne
ljmp
or
mov
jg
iret
adc
pop
addb
fdivl
jle
popf
add
inc
inc
cmpsb
mov
dec
xorl
dec
out
dec
in
inc
xchg
push
fwait
cmp
pop
and
mov
jecxz
fs
adc
lods
add
aas
stos
pop
sub
fidivs
cmp
push
jmp
arpl
push
push
mov
pop
pop
test
and
andb
inc
aas
inc
and
jnp
jg
ljmp
out
aad
and
push
aam
stc
push
jmp
and
mov
sti
ficoml
stc
inc
dec
jae
mov
push
lea
mov
mov
call
cwtl
add
mov
out
ds
push
mov
out
ja
cmp
pop
outsb
pop
movsl
enter
mov
xchg
pop
cmp
test
add
xor
lcall
mov
fsub
mov
fdivs
test
jno
mov
movsl
out
dec
fcmove
imul
mov
add
addr16
push
cmp
pop
into
sub
pushf
fists
dec
mov
cmpsb
dec
mov
dec
inc
lds
pushf
neg
sbb
cltd
jmp
mov
popf
mov
sti
pop
pop
call
xchg
xor
dec
mov
cld
arpl
in
andl
getsec
sbb
aaa
out
dec
cmp
movsl
enter
clc
push
int
inc
stos
mov
rorb
dec
lret
jmp
testl
stc
rcrl
or
jnp
mov
nop
aaa
push
and
mov
adcb
popf
ficoml
push
daa
enter
jp
movsl
sti
sub
adc
into
test
dec
push
fmulp
add
xchg
pop
mov
dec
scas
leave
lock
push
sbb
cmp
shlb
hlt
test
cmp
mov
jl
lret
test
fsub
sbb
xor
cs
into
xor
jge
xchg
aaa
cmp
je
icebp
cmpsb
sub
xchg
jmp
inc
add
insl
sub
dec
adc
or
inc
jb
leave
clc
mov
sbb
mov
mov
mov
lods
and
fsubs
pop
mov
ret
mov
inc
fwait
mov
sbb
out
loopne
inc
xor
iret
hlt
mov
negl
loope
in
xchg
cld
sbb
lahf
jbe
pop
lcall
dec
dec
jmp
sbb
mov
sub
orl
fldl2t
mov
cmp
stos
in
popa
or
xlat
repnz
dec
invlpg
rclb
push
xchg
inc
hlt
repz
jbe
jle
aam
sub
out
dec
xor
mov
sub
and
xor
dec
mov
adc
push
cwtl
rcrb
lret
mov
scas
mov
stos
mov
fwait
pop
cli
mov
jae
nop
inc
push
fisttpll
xlat
mov
jmp
int
cmc
cmpsb
into
lcall
xor
mov
dec
pop
sti
std
jbe
xchg
mov
std
mov
cld
movsb
mov
addr16
in
test
nop
ror
int
js
sbb
nop
inc
push
mov
ja
push
in
std
pop
inc
fiaddl
lds
jae
mov
jae
xchg
mov
fyl2xp1
xorb
out
mov
icebp
lcall
out
bnd
and
stos
lds
sbb
mov
dec
mov
test
lods
nop
lods
xchg
scas
stos
jle
xchg
daa
mov
iret
lods
cmc
stc
lds
xchg
ljmp
xchg
push
mov
mov
cwtl
cmp
sahf
aam
ja
adc
pop
jmp
enter
test
adc
rol
sbb
sbb
addb
push
inc
xchg
cli
mov
push
test
addr16
mov
cltd
sbb
mov
test
scas
sti
jmp
sbb
faddp
in
int3
inc
repnz
mov
dec
cmpb
mov
jg
inc
ljmp
mov
lcall
stos
mov
push
mov
or
xchg
mov
sbb
lcall
mov
aaa
adcl
jne
outsb
mov
mov
int3
cwtl
jae
and
and
idiv
icebp
jmp
dec
imul
mov
adc
int3
or
mov
repz
push
repz
rorb
es
andl
and
popf
shl
sti
xlat
mov
inc
adc
mov
aam
lock
iret
je
stos
mov
movsl
insb
or
adc
xchg
mov
cs
ror
or
fldl
rcr
ljmp
and
loope
xor
jmp
inc
xchg
lret
arpl
lret
lods
std
fcmove
mov
orl
rclb
ljmp
mov
mov
and
jle
iret
push
out
fstpl
fcmovnu
lret
dec
mov
jle
xchg
cmpsb
xlat
enter
cmpsl
push
idiv
ret
insb
sbb
fisubrl
xchg
mov
dec
test
fstpl
or
test
jecxz
push
movsl
xlat
inc
or
out
inc
push
mov
jbe
call
scas
lcall
in
in
dec
cwtl
mov
jge
test
in
cld
hlt
xchg
stc
mov
pop
cmp
cmpsl
loope
sti
mov
outsl
xchg
das
test
loope
cmp
scas
adc
lahf
repz
imul
add
push
cmc
cld
sbb
repnz
inc
xor
rcrb
inc
shl
and
mov
adc
mov
mov
ljmp
jnp
faddl
shlb
cld
sub
sub
stos
in
outsl
icebp
fadds
mov
xor
xor
mov
jp
inc
jnp
add
mov
push
mov
mov
jbe
stos
repz
sbb
push
pushf
jp
repz
inc
iret
test
mov
mov
test
nop
mov
std
ljmp
fcmovu
andb
sti
mov
adc
mov
in
mov
jl
cld
cmp
xchg
movsl
cmc
or
ret
shl
aaa
adc
dec
and
int3
out
inc
cltd
adc
mov
add
fidivs
std
stc
mov
xchg
adc
or
pop
add
mov
inc
popf
cld
pop
subb
pop
in
scas
inc
mov
add
xlat
rcrl
pusha
dec
push
leave
cli
in
inc
cmp
sub
pop
cmpsl
iret
into
arpl
inc
mov
iret
int3
mov
and
insb
or
inc
dec
in
shll
or
out
pusha
mov
mov
mov
arpl
sbb
mov
inc
rolb
arpl
dec
mov
sub
lods
mov
cmpsb
jo
loope
mov
sbb
out
mov
xlat
insb
mov
ljmp
in
cmp
hlt
jle
aam
sbb
push
mov
jmp
aaa
jmp
fwait
inc
add
mov
lcall
dec
add
js
cmp
sub
sti
test
add
and
lods
fistps
sub
cmpsl
clc
sbb
out
mov
inc
hlt
add
inc
jmp
jmp
in
cmpsl
loop
es
daa
adcl
mov
sbb
outsb
inc
dec
ljmp
cmpb
mov
leave
fdivr
rorl
xchg
mov
cmpsl
rorb
es
subl
mov
es
sarl
add
aaa
adc
add
mov
xor
xor
aaa
xchg
mov
test
sub
sub
pop
insb
mov
mov
lret
cmp
mov
sbb
jecxz
popa
sub
lret
mov
mov
pop
fdivrl
mov
mov
int3
fdivrs
mov
cmp
iret
loopne
fmulp
and
sub
into
xchg
ds
ljmp
stos
test
push
arpl
bound
mov
aam
leave
cwtl
fisttpl
dec
into
adc
add
and
xchg
mov
xchg
inc
xor
in
pop
mov
inc
repnz
add
repnz
ljmp
mov
xor
lcall
or
inc
out
in
std
dec
mov
mov
andl
rolb
cmp
das
into
push
dec
or
out
mov
mov
lods
pop
inc
into
adc
loop
iret
popf
inc
test
cmovl
in
or
repz
test
cmpsb
sahf
mov
test
push
push
aam
xor
adc
fldl
jmp
push
mov
enter
out
sbb
addr16
test
mov
ret
push
mov
push
dec
in
aad
sbb
mov
cmc
hlt
addl
pop
pop
hlt
lods
jg
cld
xor
push
outsb
je
adc
aaa
push
cmp
lds
rcrl
aas
or
mov
iret
aam
shr
ret
out
dec
jbe
xor
lret
test
sbbb
and
stos
out
mov
mov
scas
testb
jmp
adcl
stos
fcomps
add
mov
fidivrs
sbb
lock
push
stc
mov
lock
hlt
push
test
xchg
mov
stos
cmp
in
fcoml
lcall
pop
aad
ficompl
xchg
and
cmpsl
inc
dec
xor
inc
mov
fld
mov
ret
in
pushf
je
add
cli
ja
sarl
lods
aam
adc
lea
and
and
int3
fmuls
inc
mov
push
sbb
pop
inc
sbb
in
xor
aaa
push
call
push
add
stos
cwtl
ja
xchg
adc
aaa
push
mov
xor
inc
and
fcmove
rcrl
arpl
dec
dec
dec
inc
sti
mov
push
cmpsb
insb
mov
inc
jl
fmull
cmp
hlt
icebp
push
jbe
sti
shr
leave
out
jne
jg
xchg
inc
sbb
mov
lcall
es
enter
stos
add
cld
mov
jb
std
sbb
call
sahf
jg
rorl
insb
cmpsl
dec
or
mov
iret
add
mov
cmc
mov
mov
mov
fnstcw
call
cmpsb
insb
arpl
subl
scas
inc
xlat
dec
sbbb
leave
adc
xor
xor
xor
aaa
mov
aaa
mov
cmpsl
dec
cwtl
rolb
into
cwtl
jmp
xchg
inc
pop
lcall
pop
in
push
sarl
mov
out
fdivrs
test
mov
mov
mov
rcl
or
lret
mov
jae
ds
mov
mov
push
in
ret
mov
bound
pop
repnz
xor
pop
roll
dec
mov
das
repz
push
scas
jb
jl
pusha
stos
xchg
fidivl
shrb
inc
mov
adc
setns
das
es
and
repz
pop
lret
addr16
xchg
jns
sti
jae
xor
sub
and
mov
addr16
jge
xchg
pop
or
xchg
lock
adc
lods
pop
dec
ljmp
dec
mov
movsb
clc
popf
repz
addr16
mov
sbb
sub
stos
sti
cs
pop
stc
mov
inc
ljmp
jle
rcll
aas
repz
xlat
iret
jbe
aam
jno
jne
out
adc
cmp
iret
rolb
lret
lcall
adc
rol
aaa
mov
mov
cs
in
adc
pop
in
add
push
in
add
xor
es
sub
dec
shl
adcb
ror
cmp
pop
popa
pop
adc
out
push
out
push
mov
xchg
pusha
int
inc
push
adc
ror
out
xchg
bound
test
jmp
jbe
xchg
call
repz
out
xchg
xlat
lret
jge
xchg
call
filds
lods
sbb
jmp
mov
les
lcall
std
sbb
lcall
xor
aaa
cmpsb
orl
leave
ljmp
fcomp
lea
les
into
stos
cltd
repnz
lock
ja
cmc
lock
sub
xchg
pmulhuw
mov
hlt
xchg
pop
lret
xor
jne
jnp
or
xchg
das
xchg
cwtl
mov
ss
loopne
xchg
sbb
mov
mov
enter
lock
in
in
ljmp
xchg
pop
in
jne
imull
adc
scas
orb
jbe
ror
rorb
in
ficoml
or
popl
mov
xor
sub
mov
mov
or
sbb
bnd
xor
aaa
loope
into
mov
call
sbb
fstl
stc
fcmovbe
jns
fucomip
int
push
push
lret
repz
enter
in
gs
fsub
sbb
inc
xchg
fucomip
add
cmpsl
adc
jbe
lret
xchg
shlb
dec
jbe
movsb
lods
lret
pop
jp
aam
or
mov
mov
mov
ljmp
pop
les
pop
mov
dec
sbb
ss
xchg
mov
aas
movsl
scas
mov
sahf
jmp
out
and
in
into
add
dec
add
mov
lcall
cmpsl
and
dec
adc
xchg
int3
push
cmpb
push
xchg
push
les
cltd
jmp
aaa
insl
dec
mov
adc
mov
push
movsb
ret
sub
jecxz
stos
fmul
cmp
das
inc
push
xor
pusha
int
int
inc
or
mov
pop
popf
aam
daa
imull
lret
jmp
fwait
test
mov
mov
jge
incl
mov
movb
fsubr
or
cmpsl
shr
arpl
push
sbb
loope
ret
addr16
aam
xchg
sbb
movsl
mov
pop
out
out
in
stos
dec
sbb
stos
and
popl
xlat
nop
lods
pop
push
mov
xchg
shll
push
cmpsl
xchg
icebp
stos
fidivl
jg
stc
faddl
mov
fisubl
hlt
sbb
lods
mov
sbbb
push
mov
movsb
out
addl
lcall
popf
jmp
movsl
push
inc
dec
jnp
jmp
lcall
mov
iret
clc
dec
mov
mov
inc
sbb
in
in
inc
js
mov
outsb
adc
das
mov
roll
scas
xor
sub
les
int3
arpl
xchg
orb
das
shl
inc
out
ljmp
xchg
add
or
xchg
cmp
xchg
mov
idivb
push
sub
xchg
cmp
dec
inc
jnp
pop
mov
inc
sub
and
push
push
das
add
xchg
mov
aaa
rcrb
aaa
xor
ficompl
roll
mov
jbe
int
cwtl
lock
dec
pop
inc
enter
lret
sub
dec
pop
pop
xor
loope
cmp
test
sbb
int3
jge
fldcw
lahf
cltd
adc
adc
xor
cmp
lods
loope
push
dec
inc
mov
movsl
sbb
fcmovnb
out
inc
outsb
sarl
dec
stos
mov
inc
sbb
xchg
mov
int3
mov
xchg
movsb
stos
add
sarb
push
lret
ret
mov
cmp
insb
adc
lcall
fst
enter
add
out
fcoms
cwtl
cmp
mov
dec
sub
push
mov
leave
lds
lahf
ds
lret
mov
ljmp
ffree
loop
nop
mov
xchg
iret
pop
mov
jl
repnz
lods
ficomps
incl
idiv
int3
cmp
clc
lcall
int3
ret
cmp
ret
mov
inc
adc
xchg
mov
and
pop
sub
lcall
in
dec
dec
xor
subb
fistl
into
adc
sbb
jl
xchg
out
and
xchg
mov
test
inc
mov
push
jge
aad
mov
mov
mov
mov
inc
cmp
push
cmp
out
stc
aaa
adc
hlt
xlat
popf
fcmovbe
test
movsl
jl
or
ljmp
and
popf
ret
sbb
rclb
xchg
sbb
dec
push
cmpsb
pop
leave
and
out
or
in
jmp
ret
fstl
inc
lret
rep
mov
xchg
lods
out
ds
and
push
in
mov
lods
out
int3
in
hlt
in
cld
in
loopne
imul
jl
stos
mov
rolb
aam
out
dec
pop
scas
in
fwait
add
mov
inc
jge
iret
icebp
insb
lea
shlb
lcall
call
mov
fwait
jbe
push
cli
fisubrl
push
movsb
dec
jo
loope
mov
lods
nop
lods
sbbl
sbb
rolb
mov
jge
rcr
mov
mov
inc
lods
aad
test
insl
mov
xchg
adc
xor
outsl
arpl
adc
addl
lods
mov
or
fldl
dec
and
mov
jmp
push
fstpt
aaa
imul
testb
rolb
movsb
loop
push
in
xchg
ss
cld
imulb
xor
mov
cltd
sub
clc
mov
repnz
or
movl
fdivl
icebp
mov
nop
xor
push
bnd
adc
xor
aaa
xchg
std
mov
dec
aaa
lds
test
pop
dec
leave
or
mov
sbb
icebp
shll
xlat
stos
xchg
jmp
out
ja
sti
in
sub
in
mov
mov
ljmp
inc
test
test
xchg
repz
mov
adcb
mov
cmpsb
pop
jle
adc
pop
into
aaa
pop
out
mov
idivb
sub
push
jecxz
inc
cltd
std
dec
lods
repnz
shl
push
mov
inc
adc
and
sbb
lcall
psllq
dec
fsub
iret
cli
scas
push
fmull
add
and
aad
addl
dec
popl
xor
call
cmpsb
sbb
sahf
push
xchg
test
int3
daa
stos
popa
int
rol
sbb
mov
out
lods
xchg
cltd
out
iret
test
fdivrp
daa
mul
ffree
mov
cmc
mov
addb
ja
xchg
int
dec
cmp
dec
inc
mov
leave
jbe
xchg
in
or
jae
pusha
into
shlb
ljmp
mov
std
fadds
mov
pop
mov
imulb
dec
push
out
cmpsl
call
xchg
xchg
push
mov
in
in
sbb
or
popf
and
enter
in
lods
loope
xor
movsb
sub
sbb
fdiv
ja
jecxz
jmp
subb
adc
dec
ficompl
and
jmp
adc
cmp
add
adc
cltd
adc
fldt
sbb
xor
ret
pop
repz
mov
or
cwtl
mov
pop
mov
xchg
test
mov
dec
lret
add
shll
repz
fildl
arpl
pushf
inc
push
int3
ds
mov
movb
scas
xchg
test
xchg
xchg
iret
fisubl
cltd
push
mov
cmp
imul
fcompl
idivl
lret
movl
fidivrs
sbb
sti
mov
lea
pop
fidivrs
popf
jl
adc
cltd
cmpsl
fcmove
pop
cmpsb
les
loopne
call
out
push
xchg
xchg
in
mov
cwtl
stos
enter
lods
subb
and
mov
mov
lcall
stos
mov
lods
xlat
or
push
ret
shll
xlat
lods
mov
in
lcall
lds
sbb
les
sub
inc
push
aad
cmp
les
xchg
jl
mov
in
loope
out
xchg
cmp
inc
cmp
mov
es
xchg
cs
scas
cld
ss
std
lods
pop
std
lcall
imul
inc
lret
dec
shlb
mov
out
dec
ljmp
arpl
mov
cltd
cmpsl
testl
dec
inc
int3
dec
inc
dec
and
dec
shlb
jo
cld
pusha
into
pop
out
or
add
pop
lea
popf
fbld
scas
push
cmc
dec
je
add
mov
mov
sbb
sbb
sbb
scas
mov
lods
aad
ljmp
adc
mov
enter
pop
mov
orb
inc
loope
jb
scas
jmp
fwait
or
out
push
pop
into
testb
in
add
pop
repz
mov
sub
mov
imul
ret
push
test
push
in
shl
decb
or
mov
inc
xlat
lret
ja
mov
lods
jns
call
add
push
int
movsb
aam
loop
out
in
adc
sbb
sbb
in
xor
cmp
sub
pop
stos
mov
dec
pushf
pop
std
push
sbb
xchg
in
xor
aas
in
and
jbe
inc
and
jne
les
aaa
lcall
into
xor
xlat
dec
cld
xchg
fdivl
fdivr
mov
push
test
jmp
jle
lea
xchg
into
je
notb
cli
mov
imul
adc
test
sub
mov
call
cld
int3
pushf
jbe
shr
mov
je
es
sysenter
mov
push
lods
mov
inc
stos
lds
stos
dec
mov
cmp
adc
sbb
mov
sbb
mov
mov
fsubrs
mov
lods
sahf
or
fdivs
mov
cmp
loopne
stos
je
lods
cmp
sbb
das
bound
dec
insl
dec
push
dec
cwtl
inc
xchg
out
int3
daa
aaa
ss
push
xchg
lret
clc
ret
pop
pushf
push
aas
cmp
ret
roll
fdivl
ficoml
push
scas
cwtl
out
mov
mov
into
addl
ljmp
repz
jmp
sbb
add
or
test
outsb
into
push
dec
imul
jmp
out
out
mov
xchg
movsb
adc
scas
add
pop
or
sti
sbb
aam
add
add
roll
xchg
cld
mov
xchg
inc
arpl
mov
sub
iret
divb
mov
orb
push
test
hlt
aad
lret
xor
cmp
call
push
sarl
decb
fs
mov
scas
jno
push
lcall
insb
adc
test
cld
mov
js
orl
shlb
aaa
lea
repnz
push
ja
push
cmp
loope
adc
mov
add
mov
xor
push
dec
jge
cld
xor
xchg
jmp
dec
lret
pop
push
les
scas
stc
call
repnz
jbe
and
test
movsl
jle
jl
bound
jmp
adc
sbb
ljmp
adc
cmp
mov
mov
in
divb
in
push
dec
shrb
push
les
test
fdivrp
cmc
adc
movsl
test
jge
movsl
xor
cmpsl
les
mov
cli
mov
test
xchg
adc
adc
rcrb
in
test
xchg
cmc
pop
jnp
cli
ficompl
and
xor
leave
xor
dec
pop
test
icebp
nop
lcall
pop
enter
iret
frstor
jmp
pop
fidivrl
cmpsl
scas
sub
cmp
cmp
stos
ret
fadds
fnstsw
rorl
cmp
mov
jmp
push
dec
repz
into
cmp
push
jae
cmpsb
jmp
jbe
movsl
cmpsl
les
lcall
xchg
jmp
xchg
int
sbb
xchg
ret
sub
mov
mov
inc
push
arpl
repnz
lret
jo
in
jmp
sti
imul
mov
cmp
out
push
dec
mov
cli
fmul
mov
pop
or
out
mov
jae
mov
aaa
xor
jmp
ffree
leave
fs
dec
lock
outsb
xchg
xchg
pop
in
loop
shrb
lret
dec
stc
or
fiadds
repnz
dec
js
pop
dec
jle
lcall
mov
cltd
jns
in
or
loope
cmp
dec
dec
add
sbbl
mov
lods
adc
jecxz
lret
jle
test
add
insb
sarl
xchg
int3
xor
int
fwait
out
push
adc
push
mov
int
xor
sbb
movsl
xchg
ljmp
adc
xchg
mov
jecxz
rolb
push
adc
pop
mov
inc
mov
dec
cmp
imul
mov
jl
xlat
fs
fsubrs
rcll
sub
sub
test
jae
mov
mov
mov
jecxz
push
lods
loope
add
and
xchg
fadd
je
pusha
push
xchg
jae
cwtl
in
out
in
scas
fidivl
adc
sar
fucomp
pop
je
push
test
je
pop
jne
cmpsl
bound
data16
in
push
and
mov
push
inc
dec
pop
stos
inc
cld
dec
sub
clc
arpl
insb
and
xchg
dec
pop
inc
or
mov
pusha
mov
pop
xor
mov
mov
ja
sub
pop
cmpsl
ret
popf
lcall
ja
jmp
mov
adc
andb
stos
or
fcomp
jbe
les
stos
adc
push
ret
push
push
xchg
sarb
cmp
push
lods
cmp
cltd
ljmp
ficoms
mov
scas
mov
cli
mov
adcb
cmp
xchg
fimull
popa
mov
mov
or
mov
movsb
push
mov
xor
fidivl
test
inc
inc
arpl
dec
popa
mov
push
lods
push
mov
xchg
push
dec
push
mov
inc
std
push
adc
lcall
ja
lcall
cmp
cmpsl
stos
push
clc
mov
testb
adc
mov
les
cld
add
imul
lahf
inc
int
lret
das
push
in
roll
pop
adc
inc
das
cmc
es
mov
jmp
fldl
int3
scas
out
cmc
lcall
pop
xor
xor
aaa
addb
mov
and
push
insl
sbb
ljmp
cmpsl
movl
cmp
cli
das
loope
jmp
mov
and
fcom
dec
fisttpll
icebp
idiv
xchg
stos
mov
imul
add
shlb
dec
jle,pn
mov
iret
outsb
mov
xor
xchg
jmp
stos
aas
jmp
push
call
adc
ss
mov
mov
pop
mov
fildl
mov
sarb
fsubs
aam
fcoml
ja
xor
int3
sub
stos
stc
jns
into
in
out
in
xchg
in
push
mov
clc
scas
ret
cmp
push
in
ja
lahf
adc
cli
mov
mov
scas
sbb
stos
jmp
mov
fdiv
pop
mov
pop
sbb
xlat
mov
cmp
mov
ffreep
inc
mov
jle
mov
jbe
sbb
sbb
sti
push
jmp
jmp
dec
mov
cmpsb
xor
iret
les
scas
stos
ret
xchg
into
mov
lret
jbe
test
testb
fwait
test
clc
stos
fimull
mov
mov
push
xchg
cmp
push
jmp
mov
ja
and
data16
push
push
fcoms
aaa
sbb
ds
and
lods
jle
aam
addr16
imul
sbb
testb
cmp
and
rol
push
cmpsb
shll
mov
xor
jecxz
aaa
and
movsl
fst
dec
ret
pop
jo
jmp
sbb
xchg
fidivl
sub
adc
inc
icebp
inc
or
lods
push
xchg
pushf
mov
stos
mov
or
clc
sbb
fisubs
lret
sbb
push
arpl
mov
mov
hlt
cmpsl
adc
add
mulb
lods
call
ret
subb
scas
ja
cltd
dec
hlt
mov
leave
imul
cld
jle
mov
iret
or
shlb
fs
sbb
and
mov
lcall
mov
xor
xchg
push
clc
xchg
jno
cmp
cltd
mov
imul
jb
into
iret
push
movsl
mov
subb
inc
sub
cmp
out
loopne
pop
and
repz
mov
mov
insb
repnz
xor
push
mov
aas
xor
lret
xor
and
push
cld
inc
shll
pusha
inc
orb
scas
iret
push
pop
adcl
inc
iret
xchg
sbbb
loop
aas
inc
cmpsl
mov
in
jmp
in
cmp
inc
jg
cld
out
arpl
popa
loopne
xchg
std
sti
into
test
aaa
dec
mov
jmp
ss
fsubr
in
lea
inc
push
mov
mov
sbb
xchg
pop
aaa
inc
out
lods
popf
call
aam
pop
hlt
repnz
jp
stos
call
xchg
push
stos
clc
in
aaa
jl
cmpsl
mov
jl
push
int3
insl
push
pop
inc
out
add
mov
and
lret
ret
and
repnz
cld
shrl
inc
fisubl
fadd
cltd
jmp
bound
mov
dec
jb
jb
xchg
cmp
xchg
out
mov
rolb
xchg
jns
or
dec
mov
pop
mov
ljmp
lret
fwait
data16
mov
sub
outsb
into
mov
jmp
mov
loopne
clc
inc
xlat
dec
int
jo
jbe
push
rcl
gs
xor
ljmp
xorb
sarb
int
ror
lcall
int3
sub
sbb
adc
in
push
aad
pop
std
lea
fdivrs
inc
lock
cmc
shll
subb
mov
rorb
xchg
xchg
movsb
lea
movsl
jae
mov
push
mov
dec
int
cmpsb
leave
jbe
aam
xor
and
sbb
push
xchg
sub
push
cli
cmc
arpl
xor
mov
js
nop
repz
int
jae
jne
mov
cmp
sbb
push
call
scas
shll
add
hlt
mov
movsb
adc
cmpsb
mov
loopne
lahf
ljmp
lcall
pop
aad
jmp
dec
sbb
dec
icebp
mov
imul
or
push
lcall
movsl
dec
or
loopne
push
dec
pusha
and
jl
vpperm
lahf
xchg
mov
leave
out
cmp
mov
adcb
lock
inc
rol
cltd
std
fidivl
and
pusha
sti
adc
aaa
sub
notl
cmc
test
adc
in
or
xor
shll
push
jmp
dec
cmpsl
inc
nop
jmp
fwait
dec
mov
movsb
and
cmp
in
movsl
mov
aad
pop
icebp
dec
out
inc
adc
mov
sbb
aaa
arpl
pop
int3
push
nop
mov
hlt
jg
pushf
inc
fs
dec
sbb
mov
out
stos
lahf
inc
dec
dec
sbb
xor
rcl
push
push
ret
sub
xchg
push
dec
pop
sbb
imull
mov
fdivrs
push
enter
mov
je
aam
cmp
push
inc
mov
js
jl
clc
inc
out
xchg
mov
mov
mov
mov
in
sbbb
insl
push
sti
aam
out
sti
mov
mov
push
fidivs
stos
jmp
aam
popw
adc
fld
out
inc
lahf
dec
out
je,pt
aam
fcoms
jge
push
ljmp
into
xchg
xor
xchg
movsl
pop
js
test
xor
into
insb
pop
iret
insb
lcall
xchg
jl
adc
jmp
aad
lcall
mov
test
or
sahf
je
test
out
jmp
and
inc
lods
cld
sbb
mov
pushf
xlat
sbb
testb
inc
loop
and
mov
out
ja
xchg
jge
mov
lcall
mov
or
xchg
scas
inc
sub
fistpl
repnz
out
rolb
negl
mov
out
mov
rolb
js
mov
mov
clc
hlt
mov
test
xchg
xlat
addr16
movsb
pop
cwtl
cmpsl
mov
jle
push
mov
inc
push
test
dec
xor
aad
inc
clc
stos
pop
lock
das
add
loope
jmp
das
lcall
or
sbb
xor
and
push
stos
daa
and
scas
outsb
fcomps
inc
test
pop
dec
fdiv
sbbl
lods
xchg
mov
pop
fwait
jbe
sub
mov
leave
inc
pop
xor
in
lods
xchg
sbb
inc
ret
mov
sub
sbb
call
lret
in
sub
sbbl
es
or
das
sub
mov
inc
out
cli
je
pop
push
lret
out
or
sub
call
push
mov
xchg
adc
aad
add
or
out
push
inc
xchg
icebp
inc
inc
jae
aam
cli
jbe
xor
aad
out
inc
dec
out
int3
out
adc
outsb
in
push
mov
and
inc
add
or
stos
xor
sarb
lods
ss
out
sbb
mov
into
add
mov
aad
pop
jmp
outsl
mov
or
je
xchg
lock
out
out
scas
or
mov
repz
inc
adc
inc
add
test
pop
xchg
dec
push
xchg
mov
outsb
add
ficompl
int
mov
jbe
mov
mov
and
and
aam
cmpsl
jg
cmp
push
ret
call
leave
pop
insb
push
xchg
fwait
pop
loope
sbb
cmp
fsubrp
data16
out
aam
dec
in
xor
jmp
call
fwait
mov
rcll
aad
sbb
mov
out
jl
mov
in
jle
call
in
sbb
test
inc
mov
sbb
sbb
inc
jg
lock
jg
sub
and
xchg
mov
dec
xchg
jecxz
js
mov
out
xor
frstor
xchg
scas
clc
cmpsl
xchg
inc
call
lret
in
lods
std
hlt
imul
nop
mov
push
ds
rorb
adc
pushf
or
mov
int
or
cmp
ljmp
out
inc
mov
mov
ficompl
mov
int
dec
test
scas
jecxz
rorb
xchg
push
fisubl
ret
in
je
stos
lock
int3
into
adc
lock
sub
sub
sub
sub
orl
repz
and
stos
out
stos
cli
sbb
test
clc
inc
push
push
mov
test
faddp
mov
xchg
or
pushf
sbb
ds
mov
rorl
pop
scas
jmp
push
inc
mov
cmp
shlb
sarl
cwtl
mov
jl
sbb
movsl
stos
push
or
mov
sbb
xchg
push
xchg
mov
mov
rorb
lods
fdivr
fdivrs
aam
jae
dec
into
adc
negb
lret
fwait
mov
pop
es
adc
xor
aad
add
mov
shll
mov
movsl
cmp
shl
fiaddl
loop
jo
imul
or
xlat
stc
aas
mov
pop
add
cwtl
lods
inc
stc
int
aad
shlb
fsubr
and
xchg
sub
xor
fsubp
aam
jg
bound
push
repnz
pop
mov
xchg
inc
or
jmp
imulb
pop
cmpsl
pop
sbb
xchg
lds
jo
loop
outsb
mov
ljmp
mov
cltd
push
xchg
testl
pop
icebp
push
ret
mov
into
inc
in
mov
pop
mov
stos
loope
scas
out
jmp
sti
out
xor
jb
mov
xor
push
push
into
ret
hlt
dec
mov
jne
push
mul
and
add
into
push
out
fidivrs
cwtl
nop
and
sbb
in
inc
sbb
sbb
test
stc
nop
sbb
inc
lock
out
rorl
sbb
lds
push
in
adc
mov
rcl
lods
pop
subl
sub
mov
in
push
dec
sbb
and
inc
test
shlb
test
jbe
stos
mov
pop
pop
mov
in
stos
jmp
mov
and
push
enter
shlb
pop
jp
mov
shll
pop
popf
fwait
pop
js
insb
pop
sbb
fcoms
adc
adc
cmpsb
pop
lea
daa
ja
push
test
in
dec
adc
mov
ret
mov
insb
mov
stos
popf
jae
xchg
fsubl
test
loopne
stos
mov
pop
test
dec
andl
inc
pop
xchg
pop
jnp
mov
fcoms
scas
loope
cmpsl
xchg
mov
adc
aam
xor
sti
scas
jbe
ljmp
push
enter
pop
movsl
lods
lods
je
ret
xchg
adc
lods
dec
mov
mov
movsl
decb
out
scas
sbb
mov
and
popl
addl
push
mov
mov
adc
je
stc
into
out
inc
insl
push
ret
xor
outsb
es
mov
stc
int3
sahf
sbb
ljmp
addl
in
xor
push
mov
lods
popf
pop
sub
mov
mov
scas
icebp
test
dec
cld
inc
lods
out
push
lods
shll
test
inc
aas
arpl
cmpsl
cmc
sbb
add
test
jecxz
mov
pushf
pop
loope
fdivp
dec
fcos
out
aaa
stos
shr
neg
iret
jbe
jmp
pushl
mov
mov
xchg
push
icebp
mov
mov
mov
xchg
mov
fcmovu
cmpsl
movl
stos
ret
lahf
sahf
mov
test
xchg
decb
imul
xor
sub
les
in
ret
push
mov
rcl
cltd
mov
fcmove
loopne
mov
aam
xchg
pop
mov
xchg
into
push
dec
sub
dec
in
sti
mov
into
inc
cmc
popf
adc
jbe
stos
xchg
ja
mov
das
mov
push
cltd
sbb
mov
sbb
cmpsl
outsl
or
add
push
sbb
rcll
mov
cmpl
rorl
fdivrs
mov
xchg
cmpsl
loopne
push
cmp
fwait
test
adc
iret
mov
mov
fcmovbe
xchg
addb
fmull
sbb
pop
xchg
mov
sub
fcoml
push
add
mov
mov
xchg
aam
push
jo
add
add
mov
mov
fimull
je
aad
lods
fistpll
mov
lods
fcomp
xchg
xor
mov
in
icebp
andl
fsubs
jmp
scas
ret
fbld
ja
in
icebp
inc
popf
mov
mov
fisubrl
es
mov
mov
lea
test
ror
aad
lds
jmp
outsb
push
jmp
icebp
adcl
test
mov
xor
mov
icebp
ljmp
ficompl
std
movsl
mov
jbe
stos
ret
cld
movsb
stos
mov
std
xchg
ret
mov
mov
cld
jbe
jle
add
fwait
push
test
std
push
mov
pop
mov
mov
mov
cld
ret
aam
lcall
int
into
sbb
sub
push
rorl
xchg
add
sub
mov
inc
xchg
loope
in
mov
test
xchg
in
add
filds
mov
out
pop
mul
repz
mov
scas
cmp
rol
sbb
sbb
push
in
sti
jecxz
xlat
xchg
hlt
xchg
jbe
sub
insb
pop
jmp
out
js
xchg
testl
in
pushl
data16
mov
fwait
ljmp
call
cltd
lock
cmc
hlt
add
dec
inc
cmp
cli
test
mov
cmpsb
add
imul
rorl
icebp
enter
leave
inc
leave
insb
add
loope
adc
cwtl
xchg
es
fdivrs
fcmovbe
mov
std
dec
sbb
lods
cmpsl
subl
movsb
ret
movsl
lret
pop
repz
imul
inc
clc
jecxz
out
xor
mov
or
mov
imul
mov
mov
mov
jns
pushf
fcmovne
ret
or
fidivrl
leave
mov
ljmp
ja
test
mov
inc
stos
stos
jl
mov
rorl
mov
mov
fisttpl
cwtl
cmpsl
mov
fcomip
mov
hlt
and
out
mov
clc
jg
insb
loop
lahf
aaa
mov
lds
sbb
push
push
ja
scas
loope
sbb
loop
sbb
and
xchg
fwait
xchg
push
jl
in
and
mov
xor
mov
jl
mov
add
je
fisttps
lcall
loope
xchg
das
fs
mov
out
mov
nop
repz
incl
jmp
pop
leave
dec
mov
rcll
mov
mov
ja
cltd
dec
pop
mov
jg
jmp
sbb
and
xchg
mov
in
jle
adc
xchg
stos
fistpll
fucomip
sbb
addl
cmpsl
movsl
fsts
movl
inc
stc
lods
test
shrl
xchg
lret
fildl
cmp
ljmp
mov
sahf
jbe
mov
stc
lock
mov
mov
iret
xchg
out
pop
int3
xchg
cltd
out
ja
out
outsl
nop
add
icebp
les
lahf
cli
jl
pop
ret
fnstenv
fwait
in
mov
mov
repz
test
lea
pop
rclb
rol
test
cli
jmp
in
inc
roll
lcall
mov
in
cld
les
cltd
jbe
push
mov
cmpsl
pop
outsb
leave
mov
push
ror
sarb
mov
cmp
mov
mov
insb
jle
js
jmp
push
ret
mov
dec
nop
retw
movsb
ret
icebp
aad
sbb
jmp
ret
sbb
rorb
dec
hlt
stc
fcmovu
es
xchg
mov
fwait
in
lcall
and
leave
testb
push
outsl
fistpl
mov
lods
lret
or
or
subl
dec
aam
cmp
arpl
push
mov
int
dec
xor
mov
adc
push
das
iret
shl
rcr
sti
out
inc
fsubl
test
cmp
inc
mov
stc
std
mov
push
lock
adc
pop
inc
js
mov
test
orl
jae
int
int3
aam
jo
out
xor
sub
push
pop
lret
fs
shll
sahf
dec
aaa
inc
into
push
scas
pop
cld
test
xor
mov
cmc
mov
clc
std
jecxz
lahf
popl
sub
fmuls
ljmp
pop
push
stos
xchg
cmc
stos
sbb
fidivrl
jl
mov
test
fildll
mov
sbb
xchg
movsl
loope
mov
test
mov
scas
push
mov
jg
or
push
xchg
dec
dec
icebp
js
dec
xchg
roll
mov
mov
stos
sti
pop
mov
enter
orl
mov
jmp
jle
mov
rorl
int
int3
push
fwait
icebp
xchg
xlat
stc
sbb
scas
jle
dec
loop
sbb
in
adc
leave
hlt
outsl
mov
fmull
lcall
sbbb
pop
dec
mov
xor
fcmove
pop
dec
aas
push
fmul
fnsave
and
inc
ror
scas
lret
fwait
cmc
lret
jns
sahf
lret
cwtl
insb
mov
jg
lret
inc
mov
mov
mov
pop
sbb
cmpsl
mov
test
xchg
scas
xor
lcall
pop
cs
fwait
jecxz
mov
or
loop
arpl
or
xchg
xchg
adc
arpl
rolb
cmp
stos
pop
or
je
cwtl
sti
enter
or
and
push
nop
inc
insl
adc
aaa
test
xlat
pop
popf
je
stos
bnd
mov
sarb
outsl
jmp
popf
push
lods
nop
pop
cmpsl
push
int
inc
mov
stc
testb
gs
call
dec
dec
pop
shlb
xchg
pop
rorb
stos
loope
pushl
jmp
aam
add
scas
sub
in
repz
mov
in
jne
repz
inc
mov
lret
jge
rcrl
aam
and
stos
lock
mov
sub
nop
setno
int3
xor
std
divb
enter
push
aam
mov
lods
clc
dec
aam
cmp
mulb
cli
test
iret
aas
test
hlt
sbb
push
jae
cmp
xchg
scas
aam
xchg
xchg
jae
ja
loop
out
push
int3
pop
dec
lods
rcrl
vphsubbw
lods
jbe
lahf
jmp
fsubs
orb
sbb
xor
mov
dec
or
cmp
mov
xor
call
mov
cltd
mov
int
lret
cwtl
inc
fldcw
dec
xor
fistpl
jae
insb
push
xchg
into
test
dec
aas
in
sub
aam
out
and
stos
lret
ficompl
insb
call
xchg
cmpsl
mov
dec
stc
stos
loop
pop
loopne
call
jle
scas
cwtl
push
imul
mov
xchg
aad
ret
add
push
sbb
mov
or
neg
rolb
lcall
subl
pop
xchg
cltd
cmp
jmp
pop
movsb
aam
pushf
pop
rolb
cli
dec
xchg
aaa
add
mov
and
or
sti
mov
lods
test
jbe
adc
add
lahf
push
sbb
push
imul
fisttpll
movsbw
call
and
push
idivl
inc
dec
ret
loopne
mov
mov
aam
fldenv
mov
jl
inc
sbbl
and
lods
pushf
add
aad
fwait
xchg
repz
xor
xor
mov
inc
dec
mov
sar
inc
iret
fldt
lock
dec
scas
out
xorl
scas
out
je
add
sub
in
xor
fisubl
mov
adc
test
mov
jl
cs
xorl
scas
stc
mov
mov
dec
dec
dec
nop
jb
adc
inc
cld
dec
aaa
add
pop
in
arpl
inc
xor
in
ss
or
push
cmp
leave
mov
lret
stc
mov
sub
jecxz
xor
xchg
fnstcw
push
fldl
push
jnp
sarl
inc
gs
movsb
sbb
add
or
mov
add
push
sbb
out
jne
xorb
xchg
rolb
mov
jbe
aam
mov
jne
push
hlt
mov
neg
test
jle
jbe
cmp
daa
in
idivb
cmpl
shll
iret
pushf
fcoms
push
mov
adc
loope
addr16
xor
stos
les
mov
xor
movsb
adc
inc
daa
mulb
movb
inc
and
pushf
insl
pop
mov
mov
shlb
push
in
cltd
hlt
dec
gs
popf
xchg
fldl
xchg
icebp
xchg
int3
xchg
fistpll
lahf
mov
aad
in
adc
pusha
addr16
in
and
or
ret
and
mov
mov
and
pusha
pushl
cmp
jmp
les
push
stc
jle
movsb
out
add
sahf
rcrl
popa
sbb
xor
loopne
push
pop
pushf
sbb
int3
add
cmp
mov
adc
cld
add
mov
cmp
pop
ret
add
in
mov
iret
add
xor
shl
rcrb
sub
das
fwait
jae
push
cli
jle
aas
sbb
faddp
xlat
repnz
dec
hlt
cld
scas
lret
push
pop
and
add
aaa
inc
jns
lret
pusha
sub
and
add
push
push
adc
cld
adc
mov
jg
leave
and
test
dec
mov
sti
mov
sbb
mov
cmpsb
aas
sarb
lods
and
jp
loope
sti
mov
push
sbb
mov
or
cli
mov
sub
pextrw
inc
sub
daa
sub
jg
in
cmpl
ss
sbb
mov
adc
jmp
mov
mov
xchg
push
jnp
int
dec
mov
push
pop
ffreep
int3
sub
sub
out
mov
jge
pop
test
lahf
jg
push
pop
test
mov
xor
pusha
inc
mov
out
inc
inc
outsl
dec
lea
push
fdiv
rcl
aad
or
push
out
xor
sub
sub
dec
pop
hlt
mov
sub
nop
sti
jle
jle
imul
mov
mov
and
cmp
hlt
ret
outsb
fwait
pop
sbb
mov
adc
repnz
popf
push
jp
pop
mov
adc
ja
mov
and
icebp
inc
cmp
mov
outsl
mov
xchg
jbe
pop
xor
sti
adc
movsl
xor
jns
mov
test
hlt
xchg
push
cmpsl
dec
stos
push
add
add
or
vlddqu
cmpsb
ret
lock
rdpmc
js
enter
into
mov
inc
xchg
rcr
test
jae
sub
into
xchg
dec
out
inc
jo
mov
ds
adc
fbstp
lock
cld
mov
mov
int3
mov
ret
int
cwtl
cmpsb
push
sbb
sub
int3
and
pop
lds
insb
cld
leave
test
loope
dec
es
cld
stos
into
cwtl
push
dec
arpl
pop
testb
rclb
es
dec
sbb
scas
cwtl
add
fdivrl
push
cmp
out
and
mov
arpl
xchg
out
hlt
andb
into
inc
loop
lret
dec
test
adc
scas
inc
xchg
bound
nop
ljmp
and
call
mov
adc
dec
xorb
sahf
lods
hlt
xchg
mov
add
lret
adc
aad
mov
adc
gs
cld
rcll
pcmpgtb
or
ret
inc
fwait
int
clc
int3
in
jno
mov
fisubl
dec
push
into
imul
stc
add
and
mulb
shll
push
jge
fdiv
std
jle
loop
sub
dec
loope
and
pop
lret
fimuls
cmpsl
ret
nop
in
outsb
cmp
in
jmp
add
push
inc
in
xchg
leave
ja
dec
mov
inc
add
sub
inc
xor
rcl
xlat
jne
dec
les
and
int
lock
daa
mov
cwtl
sbb
dec
je
pop
mov
out
mov
push
jge
movsb
imul
jmp
pop
aas
ficomps
add
pushf
aas
cmc
push
push
sub
ljmp
call
pop
jmp
repz
stos
outsl
xchg
jmp
mov
sbb
out
push
push
sub
sbb
mov
push
pop
psubsb
add
pop
fistpll
es
aad
fxch
sbb
lds
and
or
adcb
test
push
lods
xor
xor
ret
mov
fs
gs
mov
sub
cmpb
ss
or
in
les
lcall
repnz
leave
push
in
jmp
or
sbb
das
insl
stos
dec
xor
sub
ds
lea
in
mov
cmpsb
sbb
lods
push
inc
mov
mov
jle
in
jp
sub
cs
hlt
inc
add
push
mov
ficoms
mov
je
jbe
pusha
cmc
jb
je
mov
sbb
xchg
std
mov
xchg
adc
and
add
push
imul
movsb
inc
xchg
in
sbb
hlt
mov
outsb
addr16
mov
data16
ret
dec
push
add
inc
shrb
mov
lcall
arpl
add
je
xor
cmc
jmp
and
add
push
or
xchg
jecxz
xchg
mov
cmp
push
ret
jnp
lods
dec
or
mov
cmc
dec
dec
sbb
jg
push
push
mov
scas
push
aaa
inc
cmp
sub
in
add
mov
rcrb
and
je
iret
mov
in
test
addr16
or
and
push
mov
fcmovnu
sti
out
daa
inc
mov
insb
xchg
jle
frstor
mov
pop
inc
jo
xchg
inc
leave
mov
jge
push
adc
push
xlat
mov
mov
out
dec
jno
js
add
xchg
ficoms
pop
leave
cmpsb
mov
jecxz
dec
pop
xchg
jmp
jmp
ljmp
lods
jns
imul
sti
jb
fstpt
push
out
out
aam
cmp
lahf
xor
test
push
mov
add
test
std
dec
push
xor
and
les
sbb
sbb
scas
lock
push
xchg
inc
adc
inc
and
xchg
sub
or
ljmp
dec
cwtl
push
outsb
add
pop
push
xchg
rcl
xchg
push
stos
sub
adcb
addr16
mov
mov
into
jae
nop
xchg
mov
push
hlt
sbb
lods
pop
fs
xchg
daa
insl
dec
and
pop
dec
stc
scas
cmp
fiaddl
stos
orb
fisubrl
sub
stos
lret
fstpt
loopne
mov
ja
sub
lods
push
pop
push
or
jb
cmp
les
ficoms
int3
mov
and
inc
hlt
aas
mov
sbb
pop
sbb
fsubrs
lcall
xchg
bound
cld
or
insl
cmp
call
jle
insb
sbb
lcall
jns
sbb
mov
ret
scas
mov
int3
mov
not
jbe
ja
and
inc
sub
fsubs
ret
dec
idivl
aam
fisubl
int
push
cltd
testb
mov
add
cmp
xor
and
sbb
jecxz
cmp
mov
jns
addr16
cs
in
ds
cmc
sbb
lret
sbb
xchg
cmp
lods
aaa
mov
mov
or
out
pop
xlat
pop
add
iret
xor
outsb
loopne
jecxz
jl
jp
jp
cmp
out
roll
or
ja
fsubp
and
push
add
mov
mov
jnp
incl
jbe
in
mov
xchg
dec
add
mov
push
xor
xchg
shlb
test
repz
inc
daa
in
test
arpl
clc
shlb
cmp
cld
lret
ds
xchg
push
arpl
int3
js
imul
add
inc
push
mov
clc
xorl
lods
pop
shr
cmpsb
sbb
test
mov
mov
into
and
aad
mulb
adc
push
int
fisttpl
pop
mov
fsubl
cmp
jbe
cmp
bt
mov
cmc
test
pushf
lea
je
stc
add
pusha
cmp
call
pushf
pushf
pushl
pushf
movl
jmp
jmp
lea
jne
cmp
and
xor
shld
aaa
lea
mov
xor
add
add
rcl
call
test
add
push
orl
mov
inc
mov
shrb
mov
and
sahf
dec
ja
sub
mov
adcl
xor
or
and
mov
adc
jo
cmp
dec
jle
rcrl
add
loopne
add
out
pusha
dec
push
fisttpll
adc
cmovbe
cwtl
and
jae
add
adc
lahf
jl
push
lret
lock
loop
adc
sti
mov
data16
jne
jl
in
test
push
scas
xchg
cltd
dec
xor
test
ret
cmp
dec
movl
pop
dec
mov
or
dec
push
ss
dec
rcr
sub
dec
sar
mov
adc
mov
fwait
stos
imul
mov
adc
xchg
mov
dec
sub
and
jne
pusha
shl
mov
shr
sub
movsbw
sub
rcr
cmc
lea
cmc
sub
mov
pusha
bt
pushf
pushl
popl
clc
cmp
cmp
mov
call
xor
sub
pop
inc
or
cmp
xchg
mov
mov
jo
and
testl
lods
sahf
adc
aaa
sub
push
stos
add
xchg
repnz
push
push
mov
imul
cmc
fcmovnbe
cmpsl
xchg
or
gs
sti
dec
es
es
cmpsb
mov
inc
ret
mov
int3
dec
or
cmp
and
and
push
lret
bound
out
popf
xor
fidivl
test
adc
jp
das
mov
push
cmpb
adc
clc
in
ficoml
and
add
add
xchg
add
xchg
dec
mov
mov
sbb
mov
push
pmaxub
mov
in
vsqrtss
dec
dec
push
xchg
fsts
loopne
insl
inc
adc
mov
dec
jae
jmp
int3
xor
pop
shlb
lock
cli
bound
pusha
nop
scas
fildll
fwait
repnz
ret
imul
mov
add
sti
fcomps
notb
js
or
jo
adc
int
or
jge
push
fidivl
ss
cmpsl
les
inc
nop
gs
mov
enter
ret
jg
jo
sub
rep
mov
je
and
cmp
pop
cs
jnp
lret
inc
imul
popa
std
fbstp
fdivp
int3
push
pshufw
ljmp
lds
enter
adc
lock
push
add
jmp
ljmp
in
sub
repz
fs
addl
cltd
lds
cmpsl
jne
ret
sub
xchg
sti
mov
pop
dec
mov
pop
pop
imull
pop
fimull
push
sub
xchg
mov
and
mov
push
loope
and
or
adc
sahf
int
lahf
mov
fstps
mov
mov
cmp
jnp
rcr
jle
adc
inc
stc
dec
push
in
push
xchg
arpl
xchg
scas
push
jg
popf
mov
push
sbb
xchg
test
jp
push
inc
out
pop
fisubrl
push
pop
inc
sbb
cld
sub
push
repnz
fisubrl
dec
lods
scas
sar
cmp
lret
mov
mov
cmp
cmpsl
mov
call
sub
aas
sub
int
or
add
call
jae
xor
gs
ret
dec
jmp
shll
test
jmp
bsr
xadd
shl
mov
pusha
rcr
sar
xor
add
stc
jmp
lea
jae
bsr
bts
mov
bswap
pushf
movzbw
mov
mov
ror
movsbw
sub
mov
cmp
stc
mov
xor
push
clc
test
repnz
pushf
lea
jne
call
add
inc
js
je
jb
arpl
jae
subl
aad
dec
in
loop
pushf
mov
mov
mov
xchg
sbb
test
pop
das
lcall
adcb
fcmovb
aam
insl
mov
push
mov
sbb
fildll
pop
dec
rolb
sahf
ret
pushf
lock
ds
cmp
add
imul
imul
fnstcw
sahf
xor
test
nop
dec
gs
addl
jmp
pop
jg
sahf
xchg
popa
xchg
enter
xor
ret
inc
mov
fisubrs
lret
cmp
ja
stos
shrb
pop
cmpsb
pop
js
bound
cmp
call
es
push
xchg
mov
cmp
add
add
dec
and
divb
jl
cmp
shl
dec
js
ss
movsb
push
sub
dec
ja
and
ja
call
xlat
xchg
cld
ss
jp
push
dec
mov
mov
fs
loop
js
jbe
dec
adc
cmc
mov
out
push
inc
mov
adc
inc
sbb
into
push
mov
xor
mov
jbe
push
mov
jl
jns
mov
pop
test
xchg
cmp
xchg
mov
loop
mov
cmpsb
js
add
das
lds
in
cs
cli
ret
test
test
xchg
jnp
insb
jecxz
loope
pop
ss
ret
rcrb
or
sub
push
xchg
ror
add
movzbw
jmp
dec
xchg
or
jecxz
fcmovne
add
scas
xchg
sarb
jecxz
int3
push
mov
mov
sub
lea
mov
in
sub
mov
clc
jo
in
mov
in
cli
jno
and
fbstp
jg
sub
push
hlt
cmp
popf
xchg
scas
outsb
ret
xchg
repz
xchg
lods
cli
out
out
jmp
adc
sbb
lea
dec
cmp
or
cwtl
lahf
mov
sbb
imull
jmp
jnp
jg
int
in
jp
lcall
lods
loopne
imul
mov
notb
int
pusha
rclb
jnp
xchg
xor
out
push
cmpsb
insb
pop
cmp
xchg
ret
adc
xor
jbe
cmpsl
pop
add
test
or
pusha
notb
cmp
shll
inc
push
ficoml
xor
or
or
cmp
mov
xchg
insb
bound
xor
imul
cmp
pop
arpl
rep
pop
daa
mov
cmp
sti
adc
dec
xchg
cmp
in
mov
out
mov
pop
bound
scas
jmp
mov
mov
mov
repz
sbb
jg
adc
test
mov
mov
iret
lret
sbb
and
or
mov
lds
xchg
callw
and
test
outsb
ret
fldl
mov
xchg
add
sbb
or
sbb
or
push
sti
and
test
sbb
push
mov
dec
pop
pop
inc
cmp
mov
dec
insb
cmpl
mov
in
add
mov
mov
inc
mov
adc
mov
sub
stos
dec
push
mov
fwait
push
push
sub
ds
cmc
loope
dec
mov
mov
push
in
adc
add
ds
xor
push
or
mov
add
and
mov
xchg
or
push
adc
jbe
xor
test
shl
xchg
add
fstpt
cld
dec
push
in
arpl
sub
or
test
xchg
test
or
mov
scas
jnp
sbb
decb
inc
scas
in
test
dec
inc
aad
pop
mov
inc
nop
mov
xchg
fiadds
stc
call
mov
pop
enter
cmpsb
mov
pusha
mov
or
pop
daa
push
rcll
out
insb
addb
and
sub
pop
pop
cmp
repnz
ret
icebp
sbb
xchg
nop
pop
dec
enter
dec
dec
lahf
mov
ret
cmpsl
ret
icebp
decb
out
and
push
into
pushf
adc
push
and
mov
xchg
addr16
mov
aaa
sub
aas
sub
push
arpl
push
or
fwait
push
mov
mov
rcrb
fucomp
fsubrp
or
ret
xor
mov
xchg
rorb
repz
mov
out
cli
adc
mov
mov
ror
mov
jp
bnd
lcall
cs
mov
mov
jle
insb
fwait
ret
insl
mov
xchg
push
les
inc
dec
jae
in
dec
and
push
jmp
vdivss
dec
imul
adcl
push
xchg
cmp
push
push
bound
lcall
adc
inc
or
out
xchg
fnstsw
xchg
paddq
scas
ret
add
jmp
xchg
mov
add
rclb
ret
push
lock
sbbl
adc
movl
hlt
cli
or
push
inc
push
mov
jns
insl
mov
jne
out
push
test
clc
lss
pop
sbb
mov
mov
adc
pop
mov
dec
cmp
xor
cmp
enter
add
bswap
not
setg
lea
push
movl
jmp
mov
jmp
stc
ror
movb
pusha
pushf
movl
dec
cmp
neg
stc
push
cmp
mov
mov
call
rcr
jg
mov
adc
fdivs
mov
or
or
addl
sar
lcall
mov
xchg
aam
pop
aad
xor
scas
jl
xor
stos
les
out
fidivrl
mov
in
mov
stc
xchg
pop
ret
jmp
mov
fildll
jns
mov
aaa
dec
jns
lcall
inc
stos
std
addb
cmpsl
in
cmp
inc
sbbb
fs
divl
xor
and
cwtl
mov
lahf
fildll
inc
mov
pop
std
into
les
ds
jmp
and
cmp
clc
mov
pop
stc
and
or
inc
or
lods
out
xchg
or
xor
pop
lret
lock
inc
stc
adcb
aad
stos
bound
jl
push
mov
loopne
jg
adc
shll
arpl
loope
jb
inc
cmpsl
inc
cmp
xchg
jmp
ljmp
lret
sub
pop
push
fucomi
sarb
jmp
push
aam
repz
cld
fiaddl
out
fsts
adc
rcrl
or
rcrb
adc
jne
xchg
lahf
xlat
xchg
inc
aad
mov
cmp
dec
aas
xlat
stc
xchg
jne
jno
sbb
test
push
iret
fwait
jb
scas
repz
mov
xchg
xchg
mov
cltd
in
leave
stos
lods
dec
or
push
leave
mov
jnp
fnstcw
mov
orl
push
rcll
imul
push
inc
push
lods
cmc
loope
leave
ret
into
pop
push
jge
inc
push
or
mov
jmp
outsl
loop
push
cmpsl
jmp
and
faddp
out
gs
sti
ljmp
push
dec
jp
cmc
je
jno
repnz
dec
sti
std
xchg
push
dec
outsl
dec
enter
int
jl
jp
sub
xchg
int
adc
loopne
dec
stc
and
popa
dec
jns
push
fdiv
cs
enter
movsl
cmp
aad
push
pusha
dec
cmc
jo
icebp
or
mov
dec
dec
lret
enter
bound
lret
dec
xchg
jmp
ljmp
mov
mul
xchg
pop
gs
outsl
aas
sub
notl
fdivs
dec
call
sahf
sbbl
xchg
jno
inc
roll
xchg
fnstenv
adc
fcmovne
adc
stc
mov
jnp
xchg
fwait
sbb
ret
mov
xchg
clc
mov
mov
xlat
test
fldcw
jae
xchg
adcb
cmc
shll
xlat
icebp
jmp
mov
repz
aad
pop
iret
fucom
xchg
sub
push
fst
rcrl
mov
out
cli
roll
jmp
lret
jno
mov
cltd
inc
xchg
std
lock
inc
mov
loope
hlt
mov
cmpl
jbe
inc
cmpsl
sti
out
cmp
jp
mov
outsl
mov
sbb
fcmovnu
lock
xor
mov
lock
cmpl
jo
cmc
mov
pop
test
xor
pop
fists
jmp
ja
and
icebp
dec
shr
mov
adc
mov
sbb
lret
shll
imul
movsl
arpl
lret
in
aad
insl
xlat
dec
sbb
mov
mov
mov
testl
xlat
jecxz
imul
xlat
cltd
xchg
add
mov
push
xchg
bound
ret
jmp
dec
fcomi
pop
sti
pop
xchg
xlat
mov
fucomip
sbb
xchg
mov
rcrl
xchg
ret
cs
push
scas
repz
mov
jmp
xlat
aad
ret
pop
lahf
dec
stos
push
xlat
mov
xchg
add
mov
popf
das
fildll
mov
rcr
xchg
mov
xchg
push
lahf
lea
mov
pushf
adc
popf
sub
mov
fsubrl
cmc
arpl
loop
pop
lret
push
sbb
jb
cmp
out
lret
adc
aam
icebp
je
shl
popa
bound
pop
dec
lods
xchg
push
push
icebp
bnd
sub
and
daa
imul
pop
pushf
inc
push
inc
hlt
lahf
jne
xlat
mov
ror
adc
pop
popa
nop
dec
aad
arpl
jno
addr16
fcomi
in
insl
aaa
mov
push
ret
roll
lock
addr16
push
cwtl
inc
sahf
aad
cld
jb
addr16
bound
stc
pop
leave
mov
int
scas
push
jo
xchg
adc
mov
jae
std
pop
fistps
and
aad
sbb
ret
shrb
sti
scas
notl
fnsave
inc
mov
lret
cmp
fldlg2
out
dec
jmp
std
inc
int
mov
mov
cmpl
xlat
xlat
neg
sbb
ret
lret
pop
iret
pop
cmpsl
sbb
ret
xchg
inc
negl
mov
in
popa
out
ret
int
in
mov
movl
les
hlt
pop
xchg
push
inc
out
inc
lret
lret
mov
fs
inc
int3
jmp
ljmp
lret
cmpsb
in
and
addr16
mov
iret
jmp
enter
fdiv
insb
push
imul
int
loopne
ljmp
loope
fwait
push
loopne
lods
stc
out
movsl
arpl
rorl
stos
lret
pushf
aam
cwtl
xchg
call
outsb
mov
inc
or
inc
fisubl
pushf
inc
dec
aad
inc
int3
nop
shrl
ds
mov
ljmp
imul
lods
sub
into
dec
fsubl
push
push
mov
ret
and
inc
push
iret
enter
loope
shl
loopne
push
pusha
cmpsl
mov
loop
int3
add
cmpsl
inc
jecxz
jb
jae
stc
and
int3
imul
int
dec
jbe
loop
call
nop
xchg
adc
out
xor
pop
iret
xchg
fst
push
jae
repnz
gs
popa
pop
out
ljmp
cwtl
sbb
in
adc
xor
shl
minps
shl
inc
add
loope
lahf
jmp
cmp
mov
cmp
jne
int
pop
and
lcall
outsl
mov
push
fwait
rol
movsl
dec
mov
rcl
lret
je
data16
fcmovb
hlt
push
flds
dec
movsl
lret
jle
jo
mov
out
out
lret
push
dec
mov
jg
pop
xchg
leave
hlt
out
add
je
push
sub
add
cltd
loope
cli
xchg
roll
mov
xchg
jl
das
pop
decb
mov
xchg
sub
fbld
fiadds
jp
sbbl
in
dec
xchg
mov
fstpt
and
in
mov
into
lret
mov
xchg
xchg
ja
pop
test
imul
iret
in
add
jle
cli
mov
pop
jecxz
push
inc
stos
cmc
fwait
mov
leave
repz
sti
fcmovnbe
gs
mov
ret
cltd
test
pushf
stos
jg
stos
fucomp
popf
adc
mov
ja
movsl
outsl
inc
hlt
sti
icebp
test
jnp
jmp
xor
jnp
sti
dec
repz
dec
mov
push
popf
jno
stc
mov
mov
stc
fldenv
stc
cmpsl
jnp
orl
mov
xchg
iret
cmc
cli
mov
cli
in
flds
xchg
lods
xchg
outsl
divl
mov
xchg
jmp
cli
sbb
cmp
loope
sbb
adc
roll
sti
inc
ror
cwtl
lds
popf
sti
int3
lock
idiv
add
push
mov
stc
lret
rcrl
test
stos
xor
add
imul
fcmovu
jns
loope
mov
mov
inc
lods
aad
gs
aad
loope
push
pusha
ret
imul
push
arpl
movsb
push
push
sbb
mov
shl
adc
mov
fmuls
dec
inc
inc
dec
inc
jp
icebp
in
hlt
or
cld
std
adc
movsb
mov
add
pusha
outsl
jle
jge
in
inc
stc
negl
cmc
in
fwait
mov
repz
fsubs
into
cltd
repnz
and
mov
jns
lock
iret
adc
xchg
pop
rorb
insl
int
stc
ja
jne
jl
cli
mov
sub
hlt
jo
jb
jns
xchg
mov
ja
lds
mov
jg
inc
inc
roll
ja
xor
ret
pusha
cmpsl
jb
shlb
mov
dec
insl
rorl
mov
mov
cltd
ljmp
fwait
negl
mov
rcrl
int
sbb
ret
rol
pop
push
roll
mov
dec
das
push
pop
stos
rcrl
scas
test
fscale
imul
sub
ds
es
jo
jle
xchg
test
mov
in
cmpsl
add
xchg
mov
stc
add
loope
ljmp
mov
jo
jmp
jge
xchg
negb
add
in
pop
xchg
mov
mov
mov
mov
mov
adc
popf
lretw
mov
mov
cld
jle
clc
inc
cmc
jl
int
stos
scas
fnstsw
inc
loope
fistl
test
outsl
lahf
push
inc
xchg
and
push
adcl
push
mov
outsl
mov
jmp
push
hlt
fs
add
jno
pop
lock
jmp
in
scas
stos
sbb
outsb
mov
add
pop
mov
sub
data16
sub
sub
sub
fcomip
dec
mov
imul
adc
push
loop
cmpsb
push
popa
into
push
sbb
test
mov
pusha
lds
adc
pop
jns
data16
sahf
pop
stos
mov
pop
repz
popa
in
les
or
fsub
imul
inc
and
push
sti
jmp
ljmp
adc
fs
jmp
dec
fisttpl
inc
gs
mov
push
jmp
icebp
mov
js
repz
insb
fadd
or
mov
call
gs
out
ss
cwtl
mov
sbbl
fimull
xchg
push
arpl
ret
shrl
xor
subl
gs
jmp
loop
pop
fwait
inc
mov
insb
xlat
iret
rcl
into
push
fcoms
xchg
cmpsl
lds
ret
mov
jno
mov
icebp
xchg
ret
mov
mov
pop
loope
push
shll
ret
mov
push
mov
cltd
mov
mov
cltd
aaa
xlat
cmp
mov
pusha
push
mov
push
mov
neg
sbb
inc
xchg
jno
lret
mov
push
sbb
ret
jle
xchg
aad
lds
fwait
push
jmp
fmul
lock
sbb
in
adc
mov
lods
clc
push
pop
mov
pop
stos
jno
inc
pushl
pop
shlb
sti
or
cli
push
jnp
pop
cmp
push
out
std
mov
xor
shll
mov
mov
push
jmp
aad
icebp
inc
fisttps
repz
xlat
repnz
pop
rorl
or
lock
out
icebp
leave
mov
adc
pop
xor
dec
mov
mov
int
xlat
ret
lahf
or
ret
mov
std
mov
mov
out
xchg
xchg
xor
xor
ss
out
push
mov
mov
cmp
not
ljmp
xlat
fstpt
xlat
jmp
add
xlat
int
aad
mov
and
lea
xlat
in
imul
leave
sbb
ret
loope
pop
xchg
ficompl
sbb
lods
xchg
aad
adc
fcmovb
shl
stc
sbb
ret
xchg
adcl
fidivl
sbb
cmp
icebp
loope
xchg
popa
aaa
pop
ror
popf
rcl
push
lock
mov
push
or
xlat
shll
rcrl
aad
out
rcl
cltd
int
xor
inc
repz
rorb
ror
push
shrb
push
lock
ja
push
pop
ficomps
pop
fstp
ret
inc
in
fld
inc
mov
mov
cmp
pop
pop
mov
xchg
adc
jnp
mov
xor
mov
and
stos
jb,pn
fcmovnu
push
xchg
fcmovnbe
xchg
lret
lret
les
dec
scas
clc
xor
cwtl
or
lahf
into
xor
mov
enter
ret
inc
loopne
and
ljmp
mov
lret
jb
jg
ret
cmc
orb
loop
cmpsb
mov
andl
iret
shlb
sti
jno
jo
mov
in
or
notb
push
lret
jno
pop
push
pop
lret
pop
xor
adc
fstps
or
inc
inc
out
popf
lret
xchg
clc
repz
sbb
mov
xchg
mov
fdivp
xlat
roll
into
push
jmp
pop
out
loop
push
xchg
ss
inc
aad
loope
ja
mov
mov
icebp
stos
test
xlat
xor
ret
aad
pop
ffreep
ret
sbb
ret
leave
fcmove
ror
repz
ret
cmc
sti
pop
stc
sar
jecxz
loope
out
in
pop
sarb
iret
rcrl
and
xlat
popa
fucom
xchg
fistl
mov
lock
sbb
std
rcr
xchg
inc
jmp
pop
fnstenv
shlb
fistpl
fdivrl
roll
jmp
out
shll
sub
push
push
mov
mov
push
jle
mov
mov
rclb
fwait
shrl
movsl
add
mov
fisttpl
pop
loope
mov
aad
aam
sahf
jb
fwait
mov
or
repz
sti
adc
fcmovnbe
push
mov
xlat
rcrb
nop
frstor
rorb
stc
sub
dec
aas
fistl
xchg
fiaddl
push
mov
push
leave
xlat
push
mul
push
in
adc
sbb
push
sub
add
cmp
or
movsb
push
rol
fmul
daa
jo
sbb
insl
sub
or
inc
pop
aas
dec
sub
adc
xor
ret
icebp
xchg
shll
pop
ret
ret
repz
pop
jecxz
jmp
in
negl
icebp
mov
mov
gs
inc
inc
jno
hlt
icebp
cli
fcmovne
pop
out
and
xchg
repnz
push
jo
aad
cmc
fwait
mov
jnp
shll
mov
aaa
cmp
xor
xor
aas
mov
cmp
and
and
and
arpl
imul
push
stos
xchg
lret
adcb
or
dec
ror
dec
iret
dec
jae
jb
fdivs
shlb
cmpsl
xchg
fcmovnu
aas
rorl
cmp
cmp
mov
jg
ret
dec
adc
and
jge
fisttpll
popa
mov
inc
add
in
jae
stos
pop
fiaddl
adc
mov
leave
jae
xlat
mov
push
gs
test
mov
repnz
sbb
pop
lret
adc
jo
test
push
ficoms
les
xlat
jg
mov
mov
stc
adc
fcmovbe
dec
xlat
add
mov
dec
inc
jecxz
pop
sbb
aaa
ror
call
inc
sahf
xor
jne
ret
inc
arpl
push
add
push
out
arpl
add
rcr
ja
adc
pop
pop
inc
popa
shl
jg
fucomi
clc
ret
fcomi
xchg
mov
rcr
popf
pop
cli
inc
jnp
ret
cltd
pop
mov
popa
pop
mov
clc
ret
sarl
ret
xchg
fcmovnbe
test
lret
inc
mov
lret
xchg
pop
xorb
cs
stc
iret
orl
and
pop
icebp
rcrb
rcll
sbb
icebp
fldenv
add
fcmovb
fcomip
push
sbb
bound
icebp
lret
inc
incl
pop
lcall
ficompl
sbb
ret
fidivrs
rcll
mov
pop
sbb
ret
ficompl
std
not
sbb
ret
ficompl
cltd
notl
test
stos
pop
out
mov
xchg
lret
pop
pop
shll
push
ret
fisttpl
icebp
rol
pop
xlat
fcmove
push
fmull
sub
jmp
cmpsl
pop
jne
fimull
pop
adc
lret
xchg
push
test
ret
out
add
cltd
fiaddl
sbb
mov
test
or
ret
movsb
int
sub
incl
es
mov
loope
cmpsl
je
int
fneni(8087
push
dec
push
jno
aam
aad
popa
push
popa
push
hlt
mov
adc
rcll
or
sub
push
mov
sub
push
push
mov
ss
aad
notb
pop
iret
lahf
xchg
in
aaa
shrl
mov
ljmp
xchg
lahf
inc
push
cmc
cltd
sbb
push
cmc
aad
adc
rep
das
mov
push
sbb
cs
lods
fisubrl
sbb
ret
xchg
xchg
pop
adc
adc
xchg
notl
push
jmp
and
add
xchg
adc
sbb
and
xchg
sbb
popf
rcll
xlat
aad
or
test
adc
cmpsl
ret
mov
ret
ror
repz
ret
jmp
mov
fsts
pop
fstp
rol
test
icebp
iret
ret
xchg
stc
stos
daa
cmp
out
jmp
lret
mov
mov
push
push
pop
push
aam
adc
mov
rol
inc
pop
mov
shrl
repz
das
pop
ret
fisubrl
sbb
ret
std
sub
jmp
test
sbb
sub
fisubrl
sbb
and
movsl
fcmovu
shll
lds
cmpsb
inc
repz
jae
ja
shrl
leave
jle
push
rolb
fwait
pop
inc
neg
adc
jmp
xlat
push
push
push
imul
insb
ja
pop
pop
aad
xchg
out
jne
jmp
callw
aaa
fdiv
not
push
jmpw
mov
xchg
add
sbb
fwait
mov
ret
xchg
inc
push
inc
pop
rcr
pushf
cltd
hlt
push
xchg
iret
jl
adcl
and
jmp
mov
testb
fisttpll
push
movsb
cwtl
pushf
or
cltd
mov
mov
fildl
in
repnz
mov
mov
mov
mov
ret
mov
fs
out
push
lahf
testl
xchg
lret
push
out
mov
fcomp
icebp
xchg
xlat
lock
lock
xchg
pop
mov
sti
mov
mov
flds
ds
loope
out
sub
addr16
ror
ret
cmc
arpl
je
adc
sub
inc
inc
dec
add
loope
and
dec
repz
outsl
fdivrs
push
jl
jne
iret
shrl
addr16
add
ds
adc
pop
aad
popa
arpl
inc
addr16
imul
imul
jae
mov
loopne
inc
call
sbb
push
mov
adc
cltd
dec
jmp
add
repz
rcrb
sti
cmc
aam
ds
int
in
repnz
adc
mov
cs
mov
sbb
out
inc
test
mov
xlat
shrl
in
icebp
aad
xchg
negl
mov
in
dec
xchg
fstpt
in
sbb
xchg
icebp
fnstcw
pop
aas
insl
pop
and
outsb
ficompl
inc
fwait
xchg
scas
fldcw
mov
lods
in
neg
dec
sbb
and
outsb
pop
lds
mov
pop
pop
sti
add
das
mov
scas
push
push
loope
fadds
insl
inc
push
fbld
rcll
int3
mov
scas
sub
int
int
pop
sbb
add
dec
sbb
ja
jp
stc
jns
jb
loop
push
inc
dec
jne
inc
jbe
cmp
pop
jb
mov
lock
fisubl
jmp
jl
jae
in
repnz
jno
popf
dec
imul
imul
inc
in
pop
pop
xor
push
movsb
loop
mov
sti
das
cmpsl
jle
inc
dec
jge
pop
inc
lret
jle
adc
stc
fiaddl
jns
and
cmpsl
add
stos
pusha
sub
pusha
jnp
sub
into
test
lock
dec
mov
ds
jbe
jmp
inc
repnz
imul
mov
jno
jo
imul
jb
xor
in
mov
aaa
aam
pop
and
aad
popa
pop
mov
icebp
inc
pop
lea
outsl
clc
es
inc
ret
fld
in
mov
insl
iret
aad
xor
in
fcmovnbe
in
out
or
in
jecxz
mov
aas
xchg
lret
in
ret
inc
adc
adc
pop
popf
push
jl
shlb
enter
imul
xchg
mov
inc
ret
je
mov
push
cmc
test
mov
rcl
call
aam
mov
add
xchg
lret
jecxz
add
add
mov
adc
cli
out
in
das
popa
cmp
inc
data16
inc
mov
sub
push
cltd
ror
push
pop
out
in
les
rorb
loop
adc
rcrb
mov
xchg
inc
mov
sub
sub
fsubrs
push
pop
push
push
adc
pop
pop
aam
push
push
ffree
inc
shrb
pop
fnsave
push
insb
sbb
dec
outsb
and
faddl
sbb
pop
inc
fists
sub
aad
pop
push
ret
shlb
push
fbld
rolb
push
inc
or
sub
shrb
dec
push
inc
fildll
iret
push
ret
mov
scas
jne
xlat
repz
jecxz
out
icebp
pop
sbb
sarl
pop
pop
ret
into
jo
jp
loop
xchg
negl
icebp
mov
pop
movsl
pop
rcll
ret
jge
pop
xchg
ficompl
sbb
ret
mov
adc
fcmove
inc
cmp
pusha
icebp
xchg
pushf
pop
test
shll
mov
dec
mov
dec
cld
lret
mov
in
repz
loopew
loopne
imul
loop
ljmp
out
pop
mov
idivb
inc
outsl
mov
les
out
stc
aaa
stc
gs
outsl
scas
lds
push
lock
and
je
loope
cmp
xorl
andl
in
fdivrl
lea
out
hlt
mov
ret
test
sbb
dec
xor
call
sbb
fnsave
cld
sbb
push
pushf
mov
in
mov
cmp
outsb
mov
sti
inc
sub
or
inc
out
cmp
push
adc
call
scas
mov
mov
add
insb
sbb
xchg
arpl
pusha
imul
push
push
pop
xor
loop
loope
fsubrp
lcall
adc
cli
inc
je
jg
data16
in
bound
outsl
mov
mov
pop
push
shlb
in
jmp
aas
mov
or
rcl
imul
push
lock
push
sbb
jmp
pop
insb
fchs
sbb
in
sti
ja
ss
mul
stos
pop
cwtl
jmp
inc
loope
aas
jl
imul
push
inc
lret
aam
repnz
cltd
repnz
jmp
xchg
insl
push
jbe
dec
push
in
gs
jbe
jb
mov
insb
in
ja
inc
ja
jns
mov
inc
punpcklwd
inc
adc
xchg
or
lds
sub
mov
mov
dec
int3
xor
test
mov
scas
inc
and
fnstcw
xor
scas
pop
ret
sbb
repz
pop
addr16
stos
out
pushf
out
call
repnz
nop
dec
mov
imul
cmpsb
dec
jnp
ds
shll
mov
mov
mov
lods
loope
push
into
xor
dec
adc
dec
leave
push
pop
imulb
aam
fs
ja
loopne
xchg
pop
cltd
iret
popl
scas
mov
inc
pop
fsubr
out
and
xor
pop
cmp
rcr
push
shrl
sub
push
pop
xchg
xlat
push
lods
filds
fistpl
push
push
push
pop
stos
fcmovnbe
push
mov
xlat
pminub
lods
fsts
aam
pop
add
inc
ret
out
stc
ret
shrb
push
in
adc
xor
fdivl
adc
cli
pop
push
mov
imul
sub
mov
stc
imul
push
fistpl
pop
fprem1
pop
out
inc
fildll
xlat
fcompl
inc
rol
inc
movl
les
dec
dec
ror
dec
int3
dec
repz
bound
out
out
in
mov
jmp
sbb
rcl
call
jle
jge
jl
ret
mov
in
insb
xchg
adc
nop
adc
xchg
adc
lcall
lahf
pop
sahf
rcrl
popf
sbb
adc
addl
xchg
push
test
mov
or
jle
mov
xor
mov
mov
mov
ss
mov
mov
mov
aas
mov
cmpsl
daa
cmpsb
movsl
shll
stos
sub
scas
das
scas
lods
push
sub
int
fistps
jmp
loope
push
pop
neg
sbb
fdiv
pop
inc
pop
rcr
roll
sbb
lock
mov
inc
push
dec
pop
into
fidivl
jnp
stc
add
js
loope
push
loopne
jmp
outsl
ret
pop
fwait
pop
cltd
ficompl
sbb
mov
or
divl
icebp
mov
das
ret
rcl
not
sbb
ret
fcomp
pop
ret
test
jbe
out
mov
daa
aad
mov
lret
mov
cmpsl
fstps
pop
les
push
shr
rcl
jnp
sub
inc
mull
xor
fisubl
and
lret
shrb
jae
ret
scas
repnz
push
jg
mov
push
pop
sub
popa
push
push
stc
out
ljmp
dec
jp
jmp
lret
enter
shll
mulb
add
push
push
jne
out
lds
loopne
mulb
cs
fnstenv
pusha
fisubrs
mov
inc
je
pop
pushf
fwait
popa
call
adc
add
jbe
ja
not
jo
ret
int3
xchg
into
dec
lods
dec
ror
jb
inc
sub
xchg
adc
imul
cmp
sti
xor
inc
test
lahf
fmul
ret
lea
pop
rcl
or
pop
xchg
leave
scas
pushf
rorl
jmp
xchg
cmp
xorb
pop
out
mov
test
xchg
aaa
jo
sbb
das
sbb
xchg
xor
aam
test
sbbl
lock
aad
lds
nop
xchg
shll
divl
jge
push
rorl
pushf
lcall
sar
jecxz
inc
imul
cmc
rcrl
cmp
push
in
loopne
into
cltd
movsl
testb
mov
pushf
jp
push
cli
hlt
jns
sbb
mov
pop
cmc
push
scas
cmp
fwait
out
adc
pop
leave
aas
push
stos
xor
ss
xlat
push
sbb
dec
jo
lods
jae
mov
pusha
flds
int
sub
scas
insb
xlat
out
fs
mov
xchg
push
sbb
hlt
std
lock
push
es
fsts
push
cmp
aad
lock
es
pop
inc
pop
jae
xlat
fsts
or
dec
cmp
cmp
add
pop
ds
mov
pusha
cmp
push
xor
bnd
pushf
cmpsb
out
loope
and
fdivrs
jae
xor
adcb
lret
inc
lds
or
push
test
push
lret
lret
push
pusha
leave
add
into
push
mov
push
pushf
fstl
dec
sub
sti
sbb
ret
xor
nop
mov
mov
test
pusha
gs
jmp
sbb
fwait
in
movsl
inc
mov
in
jle
inc
push
inc
dec
pop
sub
lcall
neg
xchg
pop
dec
mov
adc
xor
xor
lret
shl
cmp
xor
icebp
call
fwait
jmp
push
popa
mov
jno
sbb
ret
lods
mov
jb
imul
xchg
ja
mov
jno
add
fiadds
in
call
push
push
ret
pop
fsts
pop
fcmovu
je
push
push
adc
xchg
sbb
sbb
cmp
loopne
pop
xor
mov
inc
cmp
add
mov
rolb
xlat
sbb
mov
push
fst
xchg
insl
jne
cmpsl
fildl
popf
mov
stos
cmpsl
int3
sub
mov
cwtl
mov
stc
int
icebp
sahf
or
aad
loope
jb
mov
outsl
cltd
push
inc
andl
push
cmc
sub
push
test
mov
jnp
fucomp
out
pop
sbb
mov
inc
cmpsl
push
lahf
mov
push
imul
xchg
loop
popf
dec
xlat
sbb
out
xchg
jno
jno
icebp
adcl
leave
sahf
push
sub
sbbl
sub
lock
mov
lahf
aad
add
out
mov
xlat
sbb
divl
adc
fwait
mov
sub
mov
mov
fistps
iret
inc
sub
jb
mov
lods
jb
lods
cmpsl
adc
pop
xchg
popf
insb
xchg
sti
sbb
jecxz
std
rclb
jmp
out
xchg
insb
fwait
jo
stos
out
mov
lret
adc
sub
push
stos
xchg
fdivl
mov
lods
jb
lods
stos
adc
mov
jb
lods
pushl
xchg
out
out
pop
mov
mov
mov
out
mov
repnz
stos
jmp
aad
ret
stos
fsubrs
fidivrl
lea
xchg
add
popf
insb
ret
xchg
stos
test
jo
stos
fwait
ror
ret
fldcw
mov
lods
pop
lods
jno
data16
mov
sti
jno
icebp
addr16
ljmp
pusha
mov
dec
xor
jmp
sbb
inc
mov
je
fcoms
pusha
fsubp
filds
jns
clc
loope
inc
jae
add
clc
addr16
or
jl
icebp
cwtl
bound
popf
push
sbb
aaa
repnz
mov
ret
inc
stos
rcrl
ret
cs
xchg
xchg
cmpsb
shr
stc
jne
imul
filds
int3
pop
inc
ja
jne
pop
lret
ljmp
inc
sbb
jb
adc
mov
iret
ret
mov
dec
stc
mov
push
fdivrs
jmp
gs
loopne
dec
lods
sub
aaa
lock
and
into
mov
pop
loopne
mov
roll
sub
push
stc
stos
je
inc
and
cmp
cmp
dec
lods
cmpsb
inc
data16
mov
loopne
fadd
mov
rolb
sar
add
shrl
jg
out
pop
mov
jnp
dec
pop
js
fistl
iret
mov
sarl
pop
inc
imul
xchg
xlat
imul
cli
jp
and
or
loope
mov
adc
inc
pop
imul
ja
jae
out
adc
scas
add
stos
fstps
push
mov
jl
jne
ret
mov
add
in
pop
pop
mov
icebp
jp
ret
repz
pop
insb
mov
sahf
jae
pop
jb
and
dec
pop
add
divb
stos
outsl
imul
push
sbb
in
push
repz
call
bnd
jl
lret
idiv
or
ljmp
popa
adc
dec
add
or
in
cmp
push
into
leave
negl
xchg
push
adc
aaa
jmp
adc
inc
lret
in
sahf
or
loop
and
xlat
je
out
push
inc
loope
cmp
pop
jmp
adc
movsb
bnd
or
mov
pop
jp
sbb
loope
adc
dec
jg
inc
cmc
jge
mov
arpl
sbb
out
inc
sub
sub
clc
fildl
inc
push
in
xchg
dec
cld
int3
inc
ljmp
jb
mov
dec
inc
je
arpl
jmp
gs
addr16
mov
jae
jb
test
cmpsb
movsl
jae
cmc
in
push
lds
popa
pop
inc
inc
enter
outsl
adc
int3
ss
pop
in
lcall
jge
push
cmp
mov
push
jge
and
add
insl
cli
pusha
sbb
hlt
bnd
push
out
imul
cmp
cmp
dec
rcrl
cmpsl
out
inc
scas
fndisi(8087
leave
dec
into
in
repz
hlt
test
mov
lds
out
and
out
adcb
fwait
stos
addl
ret
push
jl
fs
arpl
push
cmc
call
stc
fdivrl
ja
hlt
inc
les
xbegin
in
icebp
jb
movsb
lret
ljmp
lock
jns
icebp
int
inc
lahf
pop
ljmp
jl
sub
sub
pop
ds
push
sti
test
jbe
and
inc
ds
lds
hlt
jge
ficompl
sbb
int3
imul
jge
aam
xchg
cltd
pop
pop
icebp
cltd
ljmp
fnsave
cmc
jne
inc
jg
out
jae
out
add
and
push
into
std
loop
jge
fwait
imul
mov
out
adc
fs
xchg
or
clc
and
das
movsb
mov
pushf
xor
mov
jb
stos
inc
pop
andb
imul
in
push
loope
cmp
in
call
ljmp
inc
pop
xchg
sbb
outsb
push
inc
adc
lock
mov
inc
imul
xor
test
sub
xchg
xchg
cmp
gs
out
cmp
pop
popa
roll
push
les
ja
inc
sbb
jmp
aam
cli
sub
popl
or
aaa
jg
cmpsl
push
push
test
ffree
cli
aad
mov
xchg
inc
sbb
fcmovnbe
mov
jl
jmp
adc
loope
in
push
push
in
and
jl
in
cltd
ret
cld
add
push
lcall
cmc
xor
jp
push
arpl
loop
mov
int
pop
test
jne
inc
imul
out
imul
ljmp
aam
cmp
pop
orl
jmp
loopne
insb
loope
ds
outsl
aaa
cmp
jo
mov
int3
inc
push
into
mov
adcl
shrb
dec
xchg
bound
out
imul
or
or
das
loope
insb
inc
bound
pop
loop
push
mov
mov
pop
loop
cltd
jb
sbb
jae
sub
dec
sti
cmp
cmp
dec
ret
comiss
sub
xchg
jb
cmp
inc
popf
pop
sbb
jb
movsb
je
out
cmp
inc
push
out
jns
inc
in
mov
clc
mov
orb
test
in
loope
test
and
adc
dec
outsl
outsl
cmp
inc
bound
out
dec
lahf
enter
mov
cmp
jge
cld
dec
pop
mov
cli
jp
movl
addr16
out
rcr
loopne
leave
out
test
mov
ret
addb
out
popf
scas
adc
gs
lcall
lcall
loope
ret
insb
fmull
or
push
mov
mov
and
dec
cmp
sbb
push
mov
fadd
je
push
cmp
xor
das
addr16
std
cbtw
mov
mov
inc
push
push
push
adc
movl
out
inc
xchg
mov
jp
or
push
push
push
mov
imul
ds
xchg
mov
dec
adc
cmpsb
add
in
mov
loop
out
jno
mov
into
testb
clc
adc
addr16
inc
sbb
dec
dec
std
mov
leave
mov
fucomi
push
and
je
and
add
xchg
les
shlb
mov
ficompl
idivl
mov
sbb
and
pop
call
imull
xchg
inc
mov
ret
or
dec
or
inc
push
clc
rcr
xchg
jb
adc
sbb
popf
lods
jl
or
aam
mov
ljmp
mov
xlat
dec
mov
mov
jne
xor
popa
or
fisubl
lahf
cmp
mov
sbb
xor
adc
cltd
mov
inc
out
adc
lea
xchg
ffree
xor
fnstenv
inc
xchg
loope
push
jmp
push
iret
icebp
repz
sti
shl
out
jmp
out
icebp
xchg
xchg
xchg
cmc
pusha
mov
mov
mov
lea
mov
mov
mov
iret
movsl
jb
xor
fidivl
sbb
test
and
ret
rol
leave
fcmove
shl
cmc
sbb
ret
loope
pop
jmp
notl
icebp
addl
sbb
movsl
xchg
mov
addr16
push
lds
int
cmc
sar
in
lahf
fcmovnbe
out
in
jno
sbb
ret
popf
adcl
divl
icebp
lods
shl
push
aad
ffree
shl
sbb
ret
icebp
cmc
pop
stc
shl
in
jmp
cltd
pop
popf
pop
in
xchg
rcll
dec
lea
mov
mov
leave
ret
mov
jmp
ret
mov
jno
push
xchg
ret
cltd
popf
pop
sbb
lea
mov
mov
mov
movsl
shrl
pop
aad
fyl2x
ffree
pop
ror
icebp
sbb
ret
std
loope
in
jmp
sbb
ftst
fwait
sbb
out
push
mov
mov
jno
inc
sbb
push
mov
push
icebp
xchg
cltd
pop
popf
fiaddl
sbb
mov
shll
rcrl
ret
pop
rcr
ror
int
icebp
ret
stc
std
pop
loope
in
jmp
ret
xorl
xorb
pop
movsl
ficoml
pop
aad
add
mov
lea
fs
in
push
aaa
pop
icebp
leave
iret
pop
icebp
shl
stc
sbb
ret
loope
pop
jmp
jmp
xchg
divl
jnp
push
ret
ret
in
addr16
test
movsl
ret
mov
scas
push
ret
xorl
xchg
ja
push
das
pop
out
pop
icebp
cmp
jmp
icebp
fcmovnu
pop
ret
fcmovb
ror
iret
sbb
ret
sti
call
lods
mul
sbb
ret
xchg
xchg
pop
ficompl
sbb
mov
mov
mull
mov
fcmovnb
fcomip
ret
sbb
ret
iret
repz
neg
sti
sar
jecxz
out
jmp
out
xchg
pop
xchg
ficompl
sbb
mov
mov
mov
sbb
xor
rcl
rcr
fistps
ret
ret
lret
iret
pop
repz
sar
lcall
jecxz
out
jmp
pop
xchg
ficoml
sbb
pop
mov
mov
mov
mov
shrb
out
adc
push
fcomi
ffreep
pop
fcmove
ror
repz
ret
jmp
pop
out
jmp
fneni(8087
daa
lea
pop
ret
test
sarb
ret
ret
jno
xor
mov
aad
fcomi
fstpl
sti
ret
std
xchg
in
adc
jbe
push
out
dec
push
sub
sarl
movsb
pop
je
mov
xchg
movsb
imul
jb
cltd
out
outsl
fimull
std
adc
ror
lods
fidivl
out
outsb
arpl
jge
fisubs
std
mov
adc
cmpsl
adc
lods
push
loope
scas
loop
dec
mov
or
pushf
lock
shr
jp
lds
scas
jns
pop
insb
jb
insl
and
iret
stos
popf
jmp
lret
mov
inc
cmc
fsub
pop
sub
xor
pop
test
add
mov
mov
pushf
cmp
out
sbbl
lods
mov
mov
sub
inc
fcoml
imul
stos
or
test
btr
movl
pop
push
das
lret
sub
sub
pop
nop
jno
incb
mov
mov
pop
es
push
push
jl
jnp
jno
xchg
or
dec
adc
aad
jge
sub
push
sarb
mov
jne
jae
addl
out
adc
mov
repz
jbe
test
mov
lods
xor
into
xchg
or
popa
push
adc
push
mov
ret
fnstcw
pop
cmc
stos
mov
arpl
push
or
dec
xchg
aaa
mov
das
sub
mov
ja
repnz
and
in
aam
or
daa
aaa
lret
sbb
ret
push
cwtl
sarb
mov
push
adc
push
cld
mov
mov
je
sbb
daa
mov
sub
cmp
mov
cmp
jl
dec
fldt
and
or
call
xchg
dec
lret
and
or
test
sub
sbb
shrl
lret
add
lods
addr16
in
sbb
stos
ss
push
shll
cmpsb
and
rcrb
sbb
xchg
xor
ljmp
jecxz
xchg
pop
test
stos
data16
dec
outsl
popa
fs
imul
add
adc
cmp
jmp
jne
push
in
mov
xchg
arpl
and
sbb
jp
pop
repz
call
push
lahf
mov
xchg
pop
pop
dec
stos
xor
jo
and
loop
pop
test
aas
and
loopne
push
bound
mov
add
fsub
cld
push
xor
int
ds
push
inc
outsl
dec
sub
out
push
pop
cmpsl
leave
dec
int3
xor
lods
mov
fsubr
sti
dec
jecxz
dec
mov
add
jnp
ret
gs
push
mov
je
sub
cmp
lea
call
pusha
stc
cmp
pusha
push
pushf
jmp
push
adc
adc
xor
add
andb
add
ja
lahf
test
or
add
lahf
push
or
pop
dec
ror
lods
ljmp
lds
inc
loope
scas
mov
cmp
pop
rcll
mov
cmp
jp
fistpl
loop
mov
fbstp
iret
pop
mov
jo
fcmovnb
inc
incl
movzbw
not
setno
mov
movsbw
lea
jmp
call
pushl
movw
lea
jne
pusha
jmp
pushf
pusha
call
pop
or
sbb
inc
xchg
ss
in
xchg
imull
vpmulhw
pop
push
xchg
sti
pop
lods
jo
loop
xor
or
js
mull
pusha
inc
cmc
jo
and
imul
push
stos
aaa
pusha
pusha
lock
pop
popa
rolb
mov
inc
mov
fisubl
call
int3
call
fdivrp
cmp
xchg
and
push
and
ja
test
jo
insl
aad
in
jp
cmp
mov
inc
mov
push
pop
aaa
inc
and
test
xor
gs
out
sbb
cmc
cmp
jg
mov
into
lret
jo
jb
and
in
pop
aam
xor
add
adc
js
js
or
pop
push
add
add
mov
adc
stos
add
add
add
fbstp
aam
ret
mov
je
push
adc
mov
adc
loop
mov
mov
sahf
dec
sub
pop
pop
sub
jle
jmp
fisttps
lret
cmc
test
cmp
call
push
sbb
mov
pushf
bt
bt
cmpb
push
movb
mov
pushf
lea
jmp
cmp
call
fcoms
pushf
mov
xchg
mov
scas
cmp
push
pop
addb
sbb
arpl
loope
xchg
pop
or
push
pop
into
and
mov
mov
pop
cld
je
jo
outsb
jns
push
test
mov
pushf
call
lahf
xchg
push
add
in
gs
mov
jecxz
add
dec
sahf
enter
or
stc
dec
comiss
outsl
mov
push
add
xchg
std
aam
stos
inc
cwtl
xchg
mov
fs
jle
jle
push
inc
jg
cld
sub
aam
outsb
inc
and
and
out
xor
out
pop
cltd
push
shlb
or
sahf
mov
lahf
rorb
or
lret
inc
fdivrs
pop
push
cwtl
insb
mov
jbe
mov
cltd
std
adc
jl
mov
testb
cltd
sub
pop
ret
sub
je
xchg
ret
jmp
jnp
mov
sti
xchg
repnz
dec
mov
inc
adc
fadds
cmc
inc
test
lods
stc
jmp
or
lcall
adc
das
mov
xor
insb
cmpsb
lahf
dec
mov
outsb
sti
adc
lds
call
dec
sarb
dec
outsb
enter
mov
jns
mov
and
mov
xor
fstl
inc
cli
fistps
xchg
pop
insb
arpl
mov
dec
je
clc
gs
dec
cli
ret
test
shlb
push
dec
and
sbb
daa
out
outsb
dec
mov
orb
inc
jg
and
push
or
xor
imul
inc
push
lcall
mov
push
scas
pop
fsubs
jne
mov
int3
shll
adc
imul
in
cmp
push
dec
xor
mov
bound
xchg
loopne
test
fcomps
cmp
test
sbb
add
rcrl
jmp
push
adc
enter
mov
mov
xchg
sti
test
test
in
test
xchg
enter
hlt
scas
push
push
mov
movl
mov
out
bound
daa
xor
mov
pop
jno
inc
push
movl
adc
push
rcl
inc
inc
fwait
dec
add
jo
in
jmp
inc
lods
mov
ja
jo
mov
int3
jno
repz
lea
mov
rcrl
mov
aaa
add
and
pop
jp
pop
mov
test
mov
sbb
pop
jno
mov
jl
xor
dec
push
xchg
lds
iret
stc
stos
cli
xchg
sbb
inc
inc
out
cmpsb
rorb
shl
call
xor
repnz
ret
mov
mov
add
ficoms
aam
inc
push
xor
into
int
mov
outsl
ljmp
popa
jne
jge
int3
xlat
push
pop
jnp
jge
adc
cwtl
fiadds
das
out
adc
sbb
mov
imul
sbb
scas
jae
test
xor
dec
aas
insl
pop
repz
stc
cwtl
jg
scas
push
add
dec
addl
cmp
cmc
ret
rcrl
jge
aas
cmp
xor
sub
pop
jno
into
xchg
adc
jbe
pop
xchg
negb
or
notl
pop
cmpb
and
and
mov
pop
adc
enter
jno
mov
adc
loopne
or
aad
adc
test
aaa
xchg
jg
insl
sti
lret
inc
push
andl
cli
add
pop
popa
mov
daa
mov
mov
push
xor
dec
popf
jecxz
in
cmp
pop
mov
ret
jl
xchg
cmpb
dec
inc
inc
sub
sub
dec
stos
jg
int
decl
dec
inc
cmp
or
icebp
inc
xchg
in
xor
test
jae
xchg
push
shll
iret
shrb
imulb
scas
fadds
pop
add
cli
mov
cmpsl
mov
xchg
jae
push
xor
push
cli
into
fadd
inc
rolb
dec
fstl
in
push
push
pushf
lea
jmp
pop
shr
inc
jg
inc
lods
mov
dec
aam
pop
and
and
sub
cltd
cld
mov
inc
movsl
cmpb
js
hlt
push
sbb
and
call
mov
jnp
inc
pop
and
outsb
in
lret
das
icebp
rclb
or
jns
xchg
add
std
bnd
pop
outsb
adc
add
enter
bound
sub
ss
jg
mov
sbb
sahf
dec
loopne
xor
and
and
and
pop
mov
lds
sti
js
icebp
std
sbb
or
rcr
push
inc
mov
mov
inc
jle
mov
cmp
xorb
sub
int
iret
lods
scas
lods
rcr
mov
mov
fadd
cmpsl
movsb
pop
je
leave
scas
pop
loopne
cmp
dec
sbb
cwtl
inc
repz
or
pop
push
fmull
dec
sbb
mov
in
dec
rcr
lea
jne
call
add
dec
outsl
arpl
inc
jb
add
icebp
inc
jmp
mov
mov
addl
sti
test
mov
inc
out
test
mov
xchg
push
ljmp
push
adc
mov
data16
xchg
push
jne
mov
xor
sub
mulb
mov
sub
stos
cmp
adc
inc
jg
and
addl
cmc
jge
fs
xor
push
in
gs
pop
clc
pop
mov
daa
hlt
sarl
xor
and
xor
cmp
sub
pop
mov
push
les
jae
lahf
or
pop
cmp
ljmp
leave
xchg
insb
sub
pop
jne
jae
aaa
adc
leave
test
sub
pushf
jb
push
pop
mov
xchg
fs
add
jb
inc
mov
push
mov
mov
and
adc
mov
xor
mov
dec
pop
repz
popf
xchg
jno
rol
inc
aam
loop
adc
imul
mov
mov
je
or
test
add
clc
jmp
stos
xor
mov
stos
fistps
push
inc
and
lods
pop
add
loope
addb
rclb
xchg
xchg
add
fcompl
daa
cmc
fsubrp
lods
cmp
fiaddl
outsl
jp
sbb
add
mov
incb
int3
push
push
inc
mov
add
lds
add
mov
dec
ret
jae
insl
pop
push
jg
scas
bound
adc
jle
mov
jmp
pop
jg
lea
enter
movsb
cld
and
pusha
mov
mov
sub
fstpt
cli
hlt
test
mov
sbb
pusha
dec
frstpm(287
inc
repz
rcrl
sbb
jb
sbbb
repnz
mov
imul
mov
pop
lahf
icebp
jp
out
cmc
add
shlb
inc
push
sub
shlb
test
xchg
inc
loop
nop
idivl
movsb
jnp
cmp
call
outsl
add
neg
lea
jb
clc
stc
cmc
cmp
push
pushf
lea
pusha
lahf
push
mov
push
push
push
call
rcrb
popf
fcmovu
ficompl
fcomps
fstps
leave
fisttpll
xchg
lcall
sbb
fwait
mov
fisttpll
cltd
mov
popf
mov
popf
fstps
popf
lcall
fcmovnu
pop
mov
ficompl
sbb
leave
pop
rolb
jmp
scas
add
push
cli
xchg
je
push
sub
cmp
and
mov
push
xlat
jl
jle
mov
icebp
fcmovb
xchg
adc
add
add
pop
push
insl
sbb
mov
push
xor
or
lret
inc
dec
mov
fbld
push
and
jae
xlat
inc
les
push
push
int
mov
ret
push
cltd
mov
cmp
mov
dec
leave
pop
or
push
jmp
sbb
adc
repnz
add
inc
inc
call
icebp
pushf
lcall
xor
lock
push
addl
adc
inc
aas
orb
push
cs
ss
cmp
out
and
ljmp
in
mov
cmc
inc
jg
inc
shrb
cltd
ss
inc
into
imul
xchg
outsl
cmp
movsl
fwait
pop
jne
aas
pop
sub
xor
sti
pop
push
jg
sbb
pop
push
xchg
insl
jno
enter
sbb
xchg
sub
daa
scas
inc
lds
mov
mov
dec
mov
cmc
inc
xor
test
jo
jns
add
popa
aad
jmp
sarl
fs
mov
imul
cmpb
in
decl
xor
inc
fisttps
push
push
xchg
fnsave
cmp
xchg
adc
add
jmp
sahf
test
dec
jg
push
inc
in
leave
and
in
add
lea
sbb
fimuls
stos
call
pop
cmp
lret
inc
push
pushf
push
insl
les
adc
push
lcall
sbb
in
push
movsl
js
mov
outsl
leave
in
jg
rcll
jle
addb
jnp
cmc
and
fwait
int
ljmp
mov
out
lea
pushf
dec
and
lock
xor
xor
pop
mov
test
mov
xchg
push
dec
add
mov
push
cmpl
aaa
mov
out
mov
lahf
cmp
hlt
lea
inc
stos
shll
daa
sub
ja
and
minps
pop
add
dec
pop
and
or
mov
aad
mov
lock
shlb
nop
dec
dec
jg
cmp
lods
loop
or
into
xchg
shr
xor
pop
xlat
mov
test
pop
mov
add
fisttpl
dec
cli
das
cmpsb
jmp
fdivrp
and
nop
ds
cmp
out
jle
cli
mov
or
stos
push
jb
sbb
jne
dec
add
and
sbb
or
pusha
popf
test
xchg
das
mov
mov
in
push
push
inc
push
dec
into
in
mov
push
cmpsl
mov
dec
or
test
std
adc
inc
aad
les
pop
xor
stc
mov
repnz
push
push
call
mov
dec
jg
ja
push
or
testb
or
push
and
and
test
lods
sub
pop
sub
sub
ret
add
xchg
decb
sbb
popf
xchg
and
sub
mov
push
fs
cmp
push
xchg
fs
test
in
push
or
jno
es
ret
pusha
je
testl
cmp
gs
rcrb
out
xor
mov
call
mov
push
test
jmp
popa
sub
jg
cltd
sbb
inc
xchg
adc
cmpsb
fneni(8087
pop
fwait
cld
mov
movsb
je
xchg
xor
mov
lea
test
pop
cmp
scas
int
sub
jne
movsl
fucom
sbb
xchg
inc
xchg
sub
jo
dec
pop
stos
in
jle
sub
aam
mov
test
scas
popf
hlt
xchg
lock
cmpsl
movsb
push
mov
and
sbb
stos
mov
adc
push
mov
cmp
lds
insl
mov
sub
pushf
test
inc
and
in
ljmp
gs
push
pop
fs
and
inc
ljmp
mov
and
push
push
outsl
ja
jb
lods
push
in
hlt
dec
lds
push
int
or
sub
xor
fs
ja
push
lea
jb
jmp
clc
rcl
movzbw
mov
test
push
test
stc
and
mov
add
add
cmp
bt
stc
clc
add
push
dec
pushf
call
sahf
jg
dec
jg
sub
out
dec
sub
cmc
mov
push
dec
daa
xchg
es
aas
loope
pop
fistpll
inc
div
fcmovu
mov
push
outsb
aas
cli
jecxz
fidivs
imul
je
scas
add
inc
scas
lea
test
cwtl
push
and
mov
mov
pop
jb
aam
out
pusha
nop
les
sbb
or
lahf
mov
arpl
sbb
das
sti
xchg
scas
xchg
aam
jmp
adc
cwtl
or
jp
test
sub
or
adc
cs
gs
xchg
sbb
sub
cmpsb
push
fidivs
mov
and
cmpb
jle
add
int3
ret
jg
dec
int3
inc
mov
mov
fcmovu
pop
scas
sbb
inc
cmpsb
cwtl
in
ror
mov
lds
or
fldenv
in
add
pushf
je
or
popf
hlt
add
and
decl
clc
push
sti
outsl
lea
jb
clc
cmp
call
lret
dec
jg
call
push
int3
and
push
sbbb
cmp
leave
inc
push
es
mov
aam
cmp
pop
shl
add
inc
mov
jnp
push
mov
test
lret
push
mov
mov
fcmovbe
inc
mov
outsl
ja
test
imul
mov
cmpsl
jg
adc
lock
das
inc
push
out
xor
into
ret
push
jo
xchg
sarb
sub
ret
loopne
sbb
cmovle
popa
mov
push
imul
and
pop
inc
dec
push
je
hlt
mov
push
lret
sbb
xchg
mov
jne
sub
rcrb
hlt
xor
xor
cmp
insl
rorl
jno
lret
shlb
fcoms
jmp
pop
dec
out
rol
sahf
movsl
xchg
sbb
mov
jo
div
fisttpll
pop
dec
and
adc
xor
dec
repnz
push
xor
xchg
add
pop
ret
xor
aad
add
or
lret
sub
aaa
and
sbb
pop
js
test
fisubl
or
adc
dec
ret
add
insl
pop
daa
fisttpl
xchg
rclb
arpl
dec
addl
sbb
imul
and
fidivrl
dec
dec
mov
xor
pusha
movb
movl
mov
pusha
call
pushf
lea
je
push
push
pusha
lea
jmp
insb
cs
dec
jg
pushf
dec
in
out
fsubs
push
fwait
fists
xchg
insl
std
jno
out
and
jno
mov
jbe
and
fwait
mov
in
and
out
in
cld
call
jecxz
pop
sarb
pop
outsl
das
adc
add
jo
xchg
lret
popf
fcompl
push
outsl
fwait
cmp
das
push
in
fwait
shrb
xorl
xor
mov
dec
dec
jg
aaa
push
pop
push
pushf
mov
shl
pop
aam
sbb
mov
lods
mov
je
pop
daa
jl
add
jmp
mov
ds
shll
ret
jge
test
xchg
xchg
insl
inc
cmpsl
inc
add
jg
jae
clc
imul
pop
std
or
xlat
insb
mov
hlt
mov
hlt
pushf
pop
in
and
push
pop
scas
aaa
pop
pushf
call
cmp
sub
jne
and
stc
mov
pop
jae
xchg
mov
pop
dec
shr
push
jg
fsubrl
sub
xchg
jbe
and
inc
jo
cltd
test
data16
loop
push
cli
cmpsl
jg
xor
push
out
mov
add
aad
xchg
sub
decl
inc
pusha
test
inc
sub
cmp
in
adc
push
jb
sarb
sub
push
jb
sub
roll
imul
outsl
xchg
popa
and
ret
xchg
pusha
shl
fsubs
mov
xchg
rol
inc
ss
repz
mov
inc
xchg
mov
jg
lahf
jne
pop
pushf
jns
cwtl
hlt
adc
sbb
jle
daa
push
imul
cmp
fildll
adc
xor
xchg
jge
test
pusha
push
sbb
lret
scas
insl
dec
push
and
sub
mov
mov
xchg
fcoml
cld
and
or
adc
jbe
mul
cmpsb
jns
xchg
dec
lock
incl
and
sub
jp
std
cmp
or
mov
push
pop
jp
nop
jg
pop
cmp
dec
jmp
and
iret
push
out
pop
test
test
pushf
lea
je
test
cmc
jg
stc
sub
cmp
test
cmp
push
movb
movw
movb
lea
ja
cmc
imul
push
pusha
movw
lea
jmp
out
inc
push
jg
xor
mov
insb
or
pop
loopne
xor
jns
pop
sbb
cmp
jle
mov
gs
test
addr16
rorb
imul
mov
xchg
cmp
xchg
push
xchg
add
add
cmp
pop
push
jecxz
int
pop
push
aas
or
fsubrs
cmp
cmp
xchg
aaa
xchg
imul
cltd
cwtl
cmp
movl
and
jne
clc
btc
inc
mov
pusha
jmp
mov
test
adc
into
ret
rolb
lea
repnz
xor
mov
xchg
adc
xchg
add
in
out
mov
adc
call
jmp
lds
xchg
cltd
xor
lds
pop
addl
sub
push
mov
jo
xor
or
into
cld
adc
mov
pop
inc
push
pop
sbb
cs
in
nop
jno
xor
divl
sub
test
pop
or
mov
mov
jecxz
dec
inc
sarb
inc
xor
sub
in
push
sahf
ljmp
cltd
and
mov
ja
in
repz
ficoms
sti
push
inc
ljmp
xor
or
push
and
pop
fprem1
push
jg
inc
loop
push
rcll
int3
xor
xorl
xor
iret
aam
es
subb
cmp
scas
jb
push
or
push
cli
stos
jg
jo
push
in
inc
int3
ficomps
cmp
outsb
add
push
pop
inc
nop
mov
sub
jge
pop
ss
mov
mov
rcl
mov
cmc
mov
dec
lods
loopne
dec
bound
test
hlt
dec
sbb
or
movsl
xlat
sti
xchg
lods
int
adcl
mov
mov
push
arpl
mov
push
js
xor
call
movb
lea
je
clc
cmp
pusha
lea
jns
pushf
lea
je
push
lea
jmp
pop
je
push
jg
loop
sbb
enter
and
mov
xor
xchg
mov
dec
mov
jge
cmp
outsb
lcall
inc
stos
mov
pop
sub
scas
pop
inc
adc
pop
cmpsl
mov
enter
xchg
push
xchg
loopne
sub
push
jnp
mov
cs
add
mov
inc
repnz
sbb
in
movsb
sbb
lock
jl
xchg
testb
fwait
adc
hlt
or
mov
jecxz
f2xm1
out
jbe
sub
inc
adc
clc
adc
push
jg
sbb
mov
sarl
shrb
push
inc
xor
cmp
loop
and
loop
adc
vpcmpeqd
mov
ss
rcl
clc
negb
dec
dec
int
ds
fldenv
pop
jge
push
push
ja
pop
testb
pop
push
xor
cmp
mov
mov
out
flds
out
ret
mov
imul
and
mov
lock
xor
pushf
dec
push
push
dec
jne
mov
push
jg
movsl
call
adc
cmpb
mov
adc
xchg
adc
test
xor
inc
in
int
cmpsl
adc
loope
xor
cmp
sbb
ficoms
loop
shlb
movsl
or
outsl
fadd
je
aas
icebp
add
inc
ja
or
fisubrl
jmp
cli
jns
das
mov
fcoms
mov
movsb
fcoms
adc
ljmp
push
outsb
push
jg
shrb
inc
call
adcb
push
jo
popf
jae
add
pop
xchg
fimull
adcl
mov
jb
push
scas
cmp
mov
push
outsb
test
insl
dec
sbb
popa
xor
insb
loopne
sub
mov
xchg
leave
stos
fldcw
jle
or
mov
mov
fcompl
movsb
xor
add
out
or
inc
aaa
mov
mov
shll
xchg
pop
xor
add
repz
push
movl
pusha
movl
pushl
mov
pushf
mov
lea
jmp
sbb
jg
loop
ljmp
in
pop
sub
in
scas
gs
or
and
iret
pop
testb
mov
les
adc
ja
cmpsl
aam
cmpsl
and
add
int3
fwait
push
iret
out
scas
sub
mov
push
aam
div
aam
sub
push
sub
jl
or
dec
inc
and
or
or
pop
add
movsb
xchg
ja
and
xchg
in
pop
jg
out
int
scas
pushf
cmpl
or
add
lahf
out
pop
jmp
or
jb
std
daa
in
mov
ss
add
es
out
stos
shlb
inc
repz
mov
pop
push
cmpl
sub
arpl
int3
add
dec
loope
push
es
std
xchg
orb
jl
bound
mov
mov
insl
cmp
or
cmpsl
add
fs
cmpsb
dec
ja
jno
xchg
jle
and
negb
ljmp
xchg
int
mov
out
in
repz
jp
test
adc
pop
jg
outsb
and
push
insb
stc
repz
mov
out
cli
jge
and
negb
loop
ds
add
push
inc
mov
lret
call
lods
lcall
pop
inc
roll
lods
into
fdivrl
cmpsb
xchg
inc
adc
insl
push
sub
rcl
and
mov
add
sub
pop
faddl
icebp
sbb
outsb
mov
dec
mov
cmpsl
les
inc
pop
aad
leave
insl
bound
mov
mov
push
cli
mov
push
lea
jb
push
jmp
cmp
movw
jmp
jmp
repnz
movb
call
pushf
lea
jne
pusha
or
mov
xor
aam
pusha
cmp
mov
stc
ror
sub
clc
add
adc
sar
mov
bt
movb
test
push
push
movb
lea
je
push
bt
cmc
call
dec
std
sbb
adc
jnp
lds
xchg
mov
jne
into
adc
inc
int3
mov
inc
mov
pop
mov
mov
std
jecxz
sahf
daa
pop
sbb
pop
bound
movq
call
add
sbb
pop
pop
pop
stos
pop
jbe
pop
stos
aas
inc
pop
movsl
jmp
jb
in
sub
pusha
xchg
lcall
in
inc
out
dec
lret
rcl
movsb
mov
stos
mov
pop
mov
xchg
xor
push
push
and
xor
jno
push
jmp
loop
call
mov
xor
mov
std
shrd
sub
mov
fcoml
cs
pushf
jl
and
aam
mov
sub
inc
push
popf
test
jecxz
cmpb
repnz
ucomiss
push
inc
scas
push
aad
jg
daa
loop
fsub
xchg
sub
loop
push
lret
repnz
es
call
add
adc
outsb
push
hlt
icebp
and
xlat
dec
lock
sbb
pusha
mov
sbb
push
lock
cltd
cmp
cs
inc
stos
xchg
fildll
xor
jbe
fdivl
daa
sbb
fdiv
sub
or
push
shl
and
cltd
pop
xchg
push
pop
sub
or
out
lods
pop
push
mov
lods
sub
iret
std
xor
and
adc
pop
jg
and
jns
adc
cmpl
daa
add
pop
add
fidivrl
jl
xchg
in
imul
xor
push
cmp
xchg
imul
jp
jb
jae
adc
packuswb
cmpb
jp
push
mov
sub
xchg
and
mov
insb
jbe
enter
add
lods
xchg
int3
pop
push
jp
into
pop
xchg
outsb
sub
pop
out
mov
call
or
fcomps
adc
jmp
mov
xchg
negb
js
repnz
inc
cmp
xor
jl
pop
mov
xor
xchg
push
cwtl
lods
mov
lds
push
push
movsb
cli
inc
pop
aas
stos
lock
jmp
sbb
mov
mov
mov
sub
stos
push
cltd
sbb
xchg
pusha
lret
fldenv
mov
dec
outsl
cmp
clc
cmpsl
sub
out
push
bound
hlt
scas
lret
adc
cmp
mov
xor
repz
sub
mov
add
or
xorb
nop
or
mov
stos
gs
dec
pop
scas
sbb
popa
push
rorb
xor
mov
orb
pop
outsb
mov
mov
cmpl
lods
xchg
aam
test
push
aas
arpl
mov
mov
pop
pop
in
cmp
cli
jmp
cmpl
mov
pushf
lods
cmc
pushf
cmc
neg
jmp
pushf
lea
jne
shld
bt
mov
mov
dec
pushf
sub
btr
shl
lea
add
bt
sub
cmc
cmp
cmc
push
pushl
popl
pusha
bt
cmp
jmp
imul
add
push
test
pushf
call
mov
add
adc
add
mov
xlat
cmp
jle
mov
fmul
cli
pushf
iret
pop
subb
mov
test
ljmp
lret
repz
push
push
dec
sbb
sbb
xchg
mov
mov
je
lret
jecxz
dec
sub
jbe
xchg
mov
orb
fmuls
mov
mov
mov
sub
mov
push
aaa
addb
pop
jg
or
push
jae
jge
divl
aad
js
stc
pop
mov
outsl
dec
aaa
pop
int3
adc
lahf
jl
adc
mov
xchg
test
mov
adc
push
imul
sbb
cmpsb
xchg
out
adc
inc
lods
and
repnz
in
inc
adc
loope
movsl
sub
cmp
pop
repz
imul
jb
popa
push
cmp
sbb
fcmovu
xor
movsl
pop
enter
insb
push
cmpsl
or
dec
xor
cs
dec
dec
add
es
pop
jg
xor
sub
data16
mov
fisubs
fcmovne
ds
fidivl
inc
stc
xchg
jns
dec
jp
call
inc
cmpsl
aam
call
pop
inc
cmp
push
or
out
or
out
mov
jle
fimuls
je
mov
dec
mov
add
stos
or
push
mov
mov
xchg
lea
bound
inc
sub
mov
push
fisubrl
ret
jge
mov
loop
add
sbb
stc
pop
mov
push
lahf
lods
stc
mov
aas
sub
push
stos
pop
xor
jl
lahf
and
popa
cs
imul
test
rcrb
dec
push
mov
repnz
pop
lret
jp
sbb
inc
imul
pop
jl
cmc
pusha
cmp
pop
xchg
test
imull
rol
xor
sbb
cmp
mov
mov
test
xchg
mov
pop
and
mov
pushf
movb
lea
jnp
push
pushf
jmp
neg
stc
movl
bt
ror
push
jmp
jmp
dec
insb
mov
adc
jne
outsl
or
push
sbb
stc
xor
aad
mov
push
cli
fistpll
cmpsl
xchg
inc
push
dec
fmuls
rcll
arpl
jg
xchg
add
inc
adc
mov
xchg
mov
cmp
sub
mov
adc
and
pop
scas
test
xchg
mov
and
pop
inc
scas
cs
sub
ja
bound
xchg
movsb
fwait
sub
das
push
adc
scas
jo
xor
out
mov
inc
incl
sets
cwtl
push
lahf
lea
call
in
das
jmp
jg
cmp
in
push
xchg
pusha
and
imul
lret
and
out
sarb
imul
inc
ja
out
jp
sub
xlat
and
sbb
xchg
ds
jae,pt
jb
mov
mov
fdivr
jns
cltd
or
jno
scas
inc
sub
sbb
mov
jge
call
adc
mov
sbb
push
sub
mov
mov
push
icebp
subl
stos
dec
fstps
dec
jns
sbb
pop
sti
lods
adc
sete
mov
cmp
cmpsl
dec
lock
pop
call
xlat
enter
hlt
adc
xchg
orb
xchg
enter
test
push
mov
jmp
push
fbstp
stos
repz
mov
add
stos
push
inc
testl
ror
sub
loopne
mov
sbb
lea
jmp
out
mov
jno
das
rcl
mov
xchg
repnz
movsb
cwtl
jecxz
dec
imull
fwait
xchg
jae
pusha
push
pop
xchg
mov
mov
jge
mov
adc
jmp
lea
ja
inc
sub
test
neg
add
test
btc
movzbw
xor
mov
pushf
mov
clc
pusha
repnz
movl
pushl
mov
push
lea
jne
jmp
int
add
adc
in
stos
xchg
xchg
cmp
sbb
add
inc
js
test
adc
and
jmp
lret
sbb
rep
enter
stos
iret
mov
cmpsb
scas
dec
je
pop
ror
sbb
push
inc
out
inc
fnstsw
cmp
jmp
and
shr
lcall
sbb
fdivl
jge
imul
pusha
dec
xchg
jge
mov
jg
filds
or
aad
orb
add
cmp
das
pushf
rcr
sub
pop
lret
loope
mov
dec
ret
jg
scas
cmp
scas
scas
inc
pop
adc
shrl
mov
out
inc
cmp
repnz
fidivrs
jecxz
xor
add
push
mov
das
hlt
dec
mov
les
dec
and
jno
in
cld
lds
fsubl
pop
sub
sub
push
je
dec
fstl
lea
je
clc
cmc
or
call
movl
pushl
popl
call
sub
call
mov
mov
mov
iret
cmp
push
fwait
adc
cmp
fcmovu
mov
dec
and
xchg
popf
or
jbe
pop
ficoms
jmp
daa
clc
fstl
xchg
mov
dec
sbb
ja
addl
icebp
add
fiaddl
mov
sti
fneni(8087
sub
cli
push
lahf
cmp
sub
mov
cwtl
sti
dec
push
add
and
idivb
and
push
cmp
into
popf
in
pop
ds
mov
sbb
push
push
gs
rcll
enter
dec
ja
jmp
jns
mov
xchg
mov
mov
jmp
int
scas
mov
div
xchg
mov
and
push
lds
sub
imul
xchg
jnp
and
add
mov
jp
popf
add
cmpsl
adc
add
push
jl
push
pop
sbb
inc
xor
dec
jp
push
push
insb
js
sbb
push
or
xchg
or
vpsubsb
push
in
adc
popa
dec
iret
mov
pop
pop
pop
stc
addb
cs
and
stos
push
inc
mov
xchg
hlt
ret
mov
insb
push
test
aaa
in
ja
in
inc
xchg
lods
js
test
shlb
je
pop
adc
or
cs
enter
mov
sti
mov
stos
inc
mov
dec
and
jle
hlt
jmp
add
xchg
lea
cld
repz
rorb
mov
mov
mov
shl
add
pop
movzbw
mov
jmp
pop
pop
sbb
jg
or
sbb
sbb
fcmovu
sub
mov
push
mov
ret
mov
sub
inc
sbb
cli
add
sub
and
dec
cltd
mov
sarb
jecxz
pop
daa
insb
pop
mov
or
or
pushf
shll
mov
inc
xchg
pop
loop
push
push
pop
shll
out
push
pop
fsubp
push
pop
hlt
addl
pop
mov
lock
xor
jmp
add
cmp
in
xor
cwtl
or
out
cmpsl
mov
icebp
inc
ljmp
movsl
std
lods
adc
push
sbb
push
lahf
lcall
lods
cmpsb
enter
loope
adc
enter
sub
ret
mov
xchg
sbb
leave
mov
push
dec
inc
dec
ja
mov
imul
popf
or
push
push
cmp
xchg
ret
inc
movsb
sub
adc
xor
ds
jge
jl
pop
rorl
jnp
lea
mov
mov
push
dec
inc
push
jmp
lods
int3
aam
mov
mov
icebp
ss
xor
stos
cmp
leave
call
add
or
and
push
in
mov
sets
cli
xlat
movl
dec
push
imul
into
fcomi
data16
sbb
out
fdivr
dec
jae
xchg
xor
and
fs
pop
or
pop
lock
jge
push
lods
das
loopne
in
repz
push
dec
in
repz
jo
cs
push
adcl
pop
add
outsl
mov
jb
xchg
mov
mov
adc
arpl
adc
dec
stos
xor
icebp
dec
sbb
das
lcall
inc
scas
test
lods
xchg
shl
hlt
adc
mov
mov
fsubs
push
lods
xor
xchg
fldenv
scas
and
push
fstp
movsl
mov
outsb
pop
jne
inc
js
or
test
shlb
lret
adc
cmpsl
repnz
cmpsb
mov
clc
pop
not
pushf
mov
imul
xchg
mov
repnz
or
fbld
adc
or
or
jecxz
jne
xlat
dec
xor
daa
mov
pop
repz
jnp
and
leave
fcom
xor
inc
adc
cli
es
jo
je
ljmp
icebp
fsubrp
adc
or
mov
dec
or
adc
lcall
pop
jecxz
imulb
cmp
testb
mov
xchg
pushf
pop
jmp
lods
jb
mov
jg
sahf
pushf
loope
mov
push
loop
cmp
xchg
dec
scas
cmpsl
mov
bndldx
pop
cmp
inc
shl
es
mov
dec
daa
test
add
std
mov
into
mov
in
pop
mov
jg
icebp
out
add
cmpsb
push
xor
add
sbb
fadd
xor
std
and
in
ja
add
sbb
or
sub
in
adc
scas
and
fisubrs
sbbl
test
mov
add
loope
js
add
sub
stc
push
pushl
popl
pusha
clc
pushf
cmp
pushf
jmp
cmp
or
adc
xor
test
adc
cmp
dec
jecxz
ds
inc
cmovg
push
cltd
into
dec
popa
test
cmpsl
jb
mov
daa
xchg
les
mov
push
fadds
mov
mov
push
sub
sbb
stos
mov
dec
dec
inc
test
fsubrl
add
insb
xor
adc
adc
pop
sahf
aad
inc
jno
lods
jle
add
pushf
lea
jmp
nop
adc
imul
mov
sub
cmp
sbb
pop
imul
cmc
orb
xchg
test
xchg
sbb
pusha
lret
shl
call
pop
call
out
ja
leave
in
aad
ja
mov
add
dec
testb
imul
stc
mov
xor
cmc
js
mov
stos
sti
dec
add
movsb
in
xor
test
jle
dec
mov
push
mov
pop
out
pushl
pusha
mov
lea
call
jmp
movb
mov
push
push
push
pushl
ret
xchg
jle
imul
int
jg
xchg
scas
jmp
fldl
imulb
pop
in
rcr
sub
outsl
sub
pop
pause
add
lahf
xor
mov
cwtl
jge
call
fcoml
dec
outsb
cmp
inc
shrl
mov
nop
jmp
bound
sbb
and
dec
aaa
pop
sub
inc
cmp
js
jo
aaa
mov
mov
clc
and
inc
sub
repz
pushf
clc
aas
outsb
popf
aam
inc
stc
push
lahf
fisubs
fstpt
stos
mov
test
mov
stc
pusha
cmp
cwtl
lea
bswap
call
lea
je
cmp
call
bsr
stc
btc
movsbw
mov
test
test
test
call
push
movl
push
push
mov
lea
jmp
lea
je
jmp
mov
push
call
cmp
push
add
icebp
scas
or
cmpsb
arpl
in
jp
mov
xchg
mov
fildll
mov
push
loop
les
sub
mov
sbb
pop
jne
mov
cwtl
sbb
adc
hlt
mov
mov
xlat
adcb
push
mov
and
sbb
pop
push
das
ret
in
add
dec
popf
stc
in
and
into
data16
fstpt
cmp
aad
xor
pushf
popa
dec
jb
adc
fiadds
mov
dec
adc
xchg
xchg
jl
xor
movsl
pop
mov
pop
mov
sti
push
jns
xchg
and
sbb
pop
cmp
jnp
ljmp
cmpsb
xchg
repz
xor
cwtl
jmp
addr16
or
dec
les
lcall
mov
shr
hlt
test
iret
pop
clc
lods
jae
add
test
jmp
cmpsb
sub
inc
repnz
pushl
pushf
lea
jne
sbb
stc
mov
sub
sub
inc
rcl
lea
mov
pushf
clc
stc
sub
bt
pushl
popl
bt
cmp
jmp
setle
mov
call
pushl
insb
jg
jg
insb
icebp
fimuls
pusha
popf
out
xor
ljmp
rol
out
or
dec
jae
es
and
in
adc
xor
imul
int3
mov
scas
xchg
dec
cmp
jge
pop
push
or
cmp
repnz
mov
jp
sbb
les
pop
dec
push
les
mov
sub
push
test
pop
out
mov
sub
shrb
xor
sbb
call
sbb
xor
mov
lods
push
cmp
mov
faddl
and
sbbb
sub
aas
jo
mull
dec
sbb
ss
inc
adcb
in
xor
adc
test
loope
pop
add
cld
adc
xchg
test
jbe
jns
jle
cld
movsl
xchg
pop
flds
pop
adc
inc
sub
mov
pop
mov
inc
fwait
xor
cmc
cmp
pop
repz
aas
sti
jge
stos
and
scas
ljmp
mov
faddl
cli
popa
scas
icebp
xor
dec
lret
xchg
xchg
bound
inc
mov
push
mov
sarb
outsl
subb
adc
pushf
in
or
pop
fsubs
movsb
clc
mov
inc
cmp
push
stos
mov
add
lock
lahf
cli
fsubs
gs
insb
xchg
and
mov
gs
fbstp
mov
test
jno
fistps
mov
add
jnp
data16
push
movzbl
not
mov
movzbl
seto
cwtl
lea
jmp
int
pop
insl
jg
scas
push
test
dec
ja
dec
push
mov
repnz
xchg
jecxz
imul
mov
fstp
pop
nop
push
add
clc
dec
inc
testb
je
in
pop
and
push
test
mov
jl
mov
repnz
stos
jns
test
xorb
roll
psrlq
movl
mov
dec
subb
mov
and
imul
dec
enter
pop
push
or
xchg
je
pushf
cmpb
jmp
sub
cmp
pushf
bt
cmp
call
inc
fstpl
xchg
fimull
mov
fcmovb
cld
mov
insl
push
stc
movsb
loope
sbb
sbb
xor
and
mov
jp
popf
cmp
mov
ss
fsub
sahf
adc
mov
inc
ds
shl
mov
ret
arpl
into
orl
or
or
cmp
lds
fstpt
mov
aam
fimull
sbb
or
mov
jge
aam
outsb
jg
inc
test
out
inc
pop
xchg
pop
orb
lods
hlt
xor
push
out
call
cmp
mov
cmpsb
inc
pushf
fs
into
cmp
daa
test
cmpsl
mov
arpl
in
movsl
in
xor
xlat
lret
xchg
loop
int3
jg
and
push
mov
es
imul
mov
mov
fs
push
movsl
push
incl
pop
addr16
xchg
rcrb
adc
shr
cmpsl
repnz
jmp
pop
outsl
jg
dec
call
jmp
subb
mov
outsl
testl
fisttpll
stc
mov
movsl
hlt
pop
xchg
mov
in
lahf
clc
test
cmp
andl
add
xchg
or
sub
jo
jo
pop
mov
or
out
ds
testl
test
fsubs
aam
pop
mov
jg
call
inc
inc
in
das
push
xchg
data16
add
es
pop
cmp
lret
mov
xchg
mov
fs
and
mov
inc
adc
mov
cmp
and
es
jp
repnz
lret
into
ficoms
pop
pop
mov
imul
fcmovbe
lret
fisttpll
in
push
movsb
cs
add
pop
fildll
xor
cmp
loop
xorb
cmp
bound
cwtl
jle
stc
add
pop
std
std
mov
mov
inc
xchg
mov
sub
xor
pop
nop
ss
mov
fxam
adc
or
pop
pop
ret
add
out
fsubrs
adc
test
int
andl
cltd
repz
xchg
push
mov
and
sahf
or
orl
cmp
fimuls
push
adc
adc
out
call
mov
mov
test
add
inc
ja
les
xchg
mov
movsl
sarb
and
jnp
xlat
notl
mov
stos
push
bound
xchg
loope
jae
mov
rorb
or
fwait
pop
xor
cmp
cltd
mov
and
pop
shlb
push
or
arpl
and
fdivs
mov
sub
sub
pop
bound
lret
pop
jge
fwait
loopne
dec
fldenv
dec
adc
inc
fidivrl
sahf
sbb
outsl
xor
mov
mov
mov
mov
aam
xor
cmp
leave
aam
insb
or
sahf
dec
roll
sub
mull
dec
cmp
sbb
jle
loope
ficoms
lods
lods
xor
ja
stos
ffreep
jg
bound
inc
or
add
jmp
std
adc
stos
inc
xor
add
xchg
pushf
sub
imul
ror
sbb
jae
imul
sarb
or
aam
push
adcl
or
add
xlat
sub
hlt
xchg
mov
inc
shll
aad
sbb
daa
jge
ret
shll
int
xchg
popf
repz
les
repz
fwait
pop
mov
jg
insl
sub
stos
inc
cmp
sahf
adc
adc
inc
sub
ds
jo
es
push
lret
inc
popf
loopne
mov
lcall
out
dec
xor
adc
fnsave
pop
les
movsb
stc
loop
and
arpl
xchg
fstpl
sbb
iret
mov
mov
cli
mov
add
addb
insl
test
mov
leave
rcrb
add
orb
push
out
imul
xchg
sti
cmp
rclb
sbb
xor
js
fcmovnu
sbb
or
xlat
dec
pop
inc
rolb
out
leave
push
mov
pop
mov
cli
xchg
je
pop
pop
cmp
pop
mov
adc
cmp
out
pop
and
pusha
das
ret
mov
dec
imul
aam
dec
push
mov
push
xchg
shll
pushf
adc
push
or
fsubrl
mov
or
mul
sub
mov
lods
xor
mov
shl
bound
pop
push
adc
movsb
push
xor
test
fs
dec
pop
insb
mov
jae
pop
in
adcb
mov
mov
xor
xlat
nop
sarl
add
shll
in
or
je
mov
in
fldenv
ljmp
mul
sbb
xlat
xor
mov
jno
and
inc
je
jb
mov
lds
jg
cli
test
movsb
test
lods
popa
aad
jp
mov
gs
scas
pushf
cmp
lret
fidivl
jnp
jno
out
push
cmp
or
out
xchg
pushf
sub
insb
jmp
mov
je
adc
inc
jmp
and
into
fwait
and
out
cmp
jno
int
pop
cmpsl
shll
fidivrl
push
in
mov
aam
loope
aad
pop
dec
into
popf
adc
adc
add
push
les
mov
xor
jae
pop
popf
push
xor
pop
popa
xlat
sub
sub
in
repz
mov
cli
pop
inc
dec
imulb
xor
sbb
sbb
fdivrs
out
mov
jp
or
mov
ret
push
repz
and
xchg
dec
ret
sub
push
mov
push
inc
push
popf
mov
push
ret
pop
lods
inc
push
mov
jg
mov
xchg
stos
fcoml
sub
mov
insb
mov
stos
pop
pop
sub
fisubrl
push
push
arpl
iret
lods
mov
sbb
stos
shlb
xchg
ret
aam
ret
push
jmp
push
jecxz
fldl
adc
sti
rclb
scas
add
xchg
and
xchg
mov
adc
dec
int
mov
not
mov
push
shrl
shrl
leave
repz
pop
icebp
push
push
cli
leave
push
pop
pop
stos
lret
mov
pop
inc
push
sub
sarb
or
repz
jb
imul
pop
insb
mov
xchg
xor
sbb
inc
jecxz
and
shrl
aad
jmp
lret
lcall
sbb
icebp
dec
insb
sbb
push
push
ficoml
testl
mov
xlat
sbb
xor
rclb
xlat
out
ret
jne
push
lret
ror
push
and
xor
push
xchg
sub
insb
adc
ja
popf
inc
lods
pop
push
shrl
jecxz
iret
scas
sahf
neg
push
fisttpl
leave
add
mov
ret
fiadds
testb
xchg
xchg
push
repz
repnz
repz
mov
adc
loop
leave
rol
mov
inc
xchg
dec
xlat
out
fbstp
leave
fwait
push
and
or
not
mov
xlat
sarb
popf
ljmp
jmp
daa
dec
filds
mov
aad
iret
fbld
push
jmp
shl
push
aad
and
stc
adc
xlat
jecxz
xlat
ret
lret
aam
hlt
sub
jle
mov
dec
ss
xor
int3
adc
daa
ret
inc
in
xlat
push
fdivr
xlat
pop
aad
push
xchg
aad
mov
adc
mov
dec
out
inc
lret
pop
roll
shll
lret
mov
xchg
jne
lods
cli
push
jae
push
pop
mov
jae
push
shll
jae
stos
cmc
out
dec
push
mov
repnz
mov
pop
adc
lahf
inc
xchg
sub
dec
fstps
sub
ror
cmc
ret
lret
fldenv
scas
sub
sti
inc
sbb
fld
out
push
int
jo
scas
cmp
inc
jno
cltd
adcb
xchg
dec
inc
testl
xchg
fnstcw
pop
fptan
js
jno
push
sti
add
inc
xchg
add
inc
adc
mov
fsts
imul
pop
pop
scas
sti
cmp
iret
xchg
push
jbe
cltd
mov
in
push
pop
leave
jb
iret
adc
bnd
xlat
adc
sub
leave
ret
jo
sbb
repnz
testl
inc
popa
ret
dec
rolb
lret
bound
hlt
sbb
iret
scas
test
cmc
out
add
mov
ja
cs
xor
rcll
das
ficomps
test
idivb
adc
xchg
fcmovne
repnz
jno
push
inc
jg
add
leave
jp
fsts
inc
mov
lcall
out
inc
fs
pop
mov
inc
adc
jne
lods
dec
scas
jge
sub
push
mov
or
push
scas
xor
dec
iret
lret
icebp
sbb
xlat
adc
pop
cld
andb
mov
insl
nop
xchg
popl
jno
push
push
fidivrl
dec
jge
flds
out
in
and
mov
aam
sub
icebp
push
jno
cwtl
shrb
bound
xchg
stos
xchg
fldenv
jg
iret
std
inc
sub
adc
xchg
adc
orl
mov
enter
fcompl
xchg
fxch
loopne
jb
mov
stos
mov
testl
pop
loope
jo
pop
xchg
sub
cltd
loope
add
lret
inc
loope
xchg
flds
jb
sbb
out
loopne
movsl
lret
div
lock
out
imul
je
xchg
mov
icebp
push
xor
rolb
jb
test
leave
aaa
push
sub
jnp
fwait
pop
xchg
xchg
lret
fnstenv
sbb
xchg
add
movl
sahf
and
fsts
xor
cmp
test
shll
mov
loope
xchg
xchg
addr16
iret
loopne
jb
aaa
sub
adc
lods
xor
ja
add
fxch
mov
icebp
addb
fldenv
test
xchg
xchg
mov
movb
xchg
inc
ret
and
mulb
in
dec
lds
flds
loopne
push
xchg
insb
popf
repz
inc
icebp
sub
pop
dec
pop
sub
xlat
out
cwtl
and
pop
ds
shll
pop
pop
mov
pop
mov
push
inc
loope
sbb
daa
dec
xchg
sub
push
popf
mov
adc
fsts
mov
mov
aad
filds
jns
xchg
cmpsb
je
fldenv
push
flds
je
addl
xchg
je
in
fld
pop
inc
mov
iret
inc
mov
subl
scas
lret
adc
popf
add
jnp
mov
fistpl
pop
jmp
jmp
shlb
jmp
or
lods
je
fcomi
push
xchg
sub
es
fnstsw
add
cli
and
inc
push
into
jp
mov
jne
inc
fmuls
inc
inc
jb
inc
sub
addb
out
mov
dec
cli
cli
mov
ss
call
sbb
jo
inc
loopne
mov
shl
cmp
incl
pop
jmp
sahf
lret
push
mov
je
fnstsw
inc
in
fsubp
pop
push
inc
fnstsw
neg
loope
inc
div
dec
sahf
add
and
test
jmp
pop
or
pop
sahf
outsl
cli
dec
mov
testl
push
xchg
sarl
inc
mov
leave
repnz
sub
pop
jmp
shrb
lahf
push
movb
scas
inc
sbb
pop
lods
add
xor
dec
xchg
sub
icebp
rclb
fucom
lock
sarl
in
test
jp
fucomp
sbb
ffree
inc
in
std
clc
jno
mov
inc
ret
cmpsl
sti
aaa
rorl
lret
sbb
add
fcompl
sbb
popf
jne
cmc
cmpl
popf
lcall
push
lret
push
inc
adc
push
and
cmpsb
sub
ret
ret
ficomps
or
aad
push
lret
sbb
in
sbbl
repz
inc
xchg
cli
pop
push
movsb
adc
arpl
inc
fldt
push
mov
pop
out
jns
repz
push
jns
iret
imul
rclb
dec
xchg
xchg
dec
dec
lods
lret
xchg
repnz
addr16
shl
jmp
push
rcl
inc
icebp
push
jmp
mov
sub
jne
push
fildl
dec
lods
pushf
push
ret
ljmp
loop
push
inc
iret
cmp
dec
adc
xchg
fwait
insb
xchg
adc
scas
mov
scas
cli
dec
fildl
fistpll
or
jmp
sub
iret
inc
push
fcmovne
ret
rcll
and
aas
ret
mov
repz
daa
dec
jmp
inc
mov
insb
gs
aad
mov
stos
push
mov
lods
lret
mov
aad
test
popf
cs
aad
sub
inc
mov
and
test
loop
sub
and
or
cmc
scas
lods
xor
ror
add
pop
int
repnz
push
sub
icebp
inc
push
mov
int3
inc
cli
push
gs
int
sub
fnstcw
push
jmp
fcmovne
loopne
fwait
mov
lds
xchg
and
or
ffreep
dec
ds
inc
scas
stos
subl
sub
pop
sub
dec
pop
fildll
xchg
pop
filds
mov
in
xor
mull
fwait
int
mov
stos
fwait
test
sbb
cmp
or
fmuls
ljmp
push
aaa
pop
bswap
push
inc
aas
ljmp
cli
cmc
cmc
test
xor
lret
cmpsl
push
pushf
mov
jl
inc
pop
xlat
movsl
stos
jecxz
jmp
xchg
sub
sub
int
popf
lods
inc
sub
mov
sar
iret
imul
test
push
negl
aam
inc
pop
stos
lret
clc
xlat
inc
fs
pop
mov
adc
xor
xchg
and
xchg
aad
xchg
int
movsb
inc
stos
lret
mov
fldt
xlat
push
pop
push
jmp
pop
icebp
jno,pt
insl
rclb
push
jne
jp
ret
push
jmp
mul
into
icebp
popa
mov
loopne
ret
rep
jo
aad
jl
rorl
adc
jns
fs
in
outsl
jmp
mov
sbb
inc
popf
inc
les
dec
imul
insl
addr16
fchs
loop
out
jno
mov
lds
in
gs
mov
loop
fucomi
gs
add
mov
ret
jecxz
stc
jmp
or
cli
xchg
cmp
ljmp
ja
loopne
icebp
outsl
mov
shrb
out
inc
xor
sbb
xor
pop
add
sbb
jmp
out
addr16
pop
loop
mov
jne
xlat
xchg
arpl
rcr
loope
pop
arpl
lret
bound
sbb
ljmp
js
mov
ret
lcall
rcr
imul
mov
jp
dec
pop
xchg
leave
mov
gs
out
cli
in
stos
fisubs
iret
out
adc
in
icebp
mov
loope
push
gs
xlat
fs
in
gs
pop
addr16
xchg
inc
jne
loope
dec
inc
adc
sti
enter
dec
and
adc
flds
fcmovu
arpl
and
pop
pop
inc
lcall
mov
in
shl
pop
call
xchg
sahf
out
test
sti
mov
sbb
faddl
aad
fcomps
sbb
fidivs
int
loopne
jmp
les
xchg
jnp
out
shr
addr16
rorb
cwtl
cmc
rcrb
sbb
inc
fwait
xlat
fcoms
jg
leave
add
inc
lret
sbbb
stc
mov
jnp
jmp
sub
ja
lcall
sti
lcall
repz
stos
rol
int
rcr
dec
dec
mov
lds
lret
inc
shl
push
push
int
push
addb
aas
ret
pop
loop
or
mov
mov
cli
dec
movsl
les
pop
sarl
lahf
out
sbb
andl
cli
jmp
cmc
out
jns
enter
lock
loope
push
pushf
xchg
jp
xchg
jne
andb
out
push
xlat
inc
leave
xchg
loopne
pop
hlt
dec
add
je
jbe
shlb
les
loopne
dec
jns
rolb
loop
mov
popa
stc
loopne
or
stc
in
popa
sbb
cld
jmp
jp
mov
jb
cmpsb
test
mov
xchg
sbb
sbb
xchg
jmp
in
out
test
cli
mov
cmc
addr16
aas
ret
inc
stc
ffreep
in
dec
mov
bound
imul
xchg
jne
icebp
inc
ja
dec
xchg
cmp
out
out
popl
in
aaa
fsubrp
mov
jmp
std
jae
or
mov
idivl
test
jno
imul
and
mov
stos
fs
mov
mov
cmp
lods
ficompl
enter
icebp
pusha
sbb
push
jne
mull
jmp
mov
bound
xchg
sar
push
xor
in
ret
gs
xchg
popa
popf
test
mov
pusha
popf
inc
pop
lock
pop
cwtl
dec
xchg
testb
int3
sahf
lret
icebp
daa
inc
mov
mov
stc
cld
jmp
jne
sahf
cmp
das
add
loope
mov
lcall
cmp
mov
pop
out
out
cwtl
in
popa
pop
dec
idivb
lcall
bound
out
sbb
jno
iret
mov
hlt
call
loope
inc
mov
jbe
cmpsl
inc
mov
sahf
lods
lock
xchg
pop
popf
das
out
scas
cmp
lret
popa
mov
fiadds
pushf
sbb
ljmp
in
mov
push
out
mov
sarl
popa
ret
gs
pop
and
inc
aam
test
mov
test
cmp
rclb
jmp
loopne
mov
les
lret
scas
pop
adc
into
jno
pop
push
jp
mov
inc
sahf
loope
dec
roll
cmc
fbld
ret
popf
sbb
loopne
gs
loope
enter
sbb
notl
jmp
hlt
stc
ret
lock
out
js
cltd
in
or
data16
xchg
lcall
out
ffreep
jp
stos
mov
fcmovu
sub
jmp
push
and
addr16
adc
dec
jne
jns
ss
jbe
pop
nop
mov
sbb
movsl
leave
cwtl
jmp
cwtl
lahf
push
push
mov
jb
push
jne
inc
mov
push
addr16
pop
inc
rcrl
mov
mov
loopne
mov
fisttpll
push
lret
sbbb
cli
dec
outsb
std
jle
xchg
xchg
lods
loopne
fsts
mov
mov
adc
popa
das
mov
enter
outsl
xor
xchg
cmc
xlat
mov
aad
lock
push
inc
arpl
rolb
movsl
jno
dec
mul
iret
fidivrl
shr
popf
cmc
adc
mulb
sbb
lret
mov
lea
mov
loop
mov
fldenv
xchg
in
call
mov
inc
fisubl
adc
jne
xlat
push
dec
jg
mov
push
shlb
lret
insl
into
aam
push
div
lret
add
arpl
nop
fdivrs
outsl
sbb
cwtl
cmp
test
test
movswl
testb
imul
das
std
ficoml
ljmp
mov
repnz
xchg
mov
in
into
clc
in
jne
fnstenv
fistpl
roll
fbstp
and
imul
stos
cwtl
ss
xor
cmp
movsb
enter
dec
jecxz
popa
lods
pop
mov
jmp
cld
stos
aaa
jle
cltd
jmp
or
inc
mov
aam
dec
fsubp
int
and
lock
mov
mov
in
add
les
out
sub
lock
jmp
fndisi(8087
fmuls
shlb
mov
mov
ret
sub
jl
clc
out
repnz
in
out
pusha
movsb
addr16
xchg
cwtl
cmpsb
ljmp
sbb
pushf
jg
jb
mov
jp
xchg
adc
lcall
lds
clc
jl
popa
testl
xchg
je
jp
lcall
inc
pop
scas
maskmovq
mov
stos
mov
pop
test
sar
addr16
xchg
ljmp
inc
cmc
popa
int
nop
divb
aad
fcom
lock
add
sbb
fucomp
mov
stos
pop
scas
fsubp
mov
jmp
pop
outsb
icebp
inc
push
add
sti
lcall
hlt
jmp
pop
rep
std
rolb
hlt
jne
loope
les
icebp
ficoml
cmpsl
xor
pushf
xlat
out
add
jb
sub
jo
mov
and
add
sub
daa
sub
daa
sbb
jl
or
xlat
imul
lock
aas
loope
push
sarl
icebp
pop
mov
xor
mov
fdivrl
lods
mulb
mov
mov
sahf
out
inc
jmp
fimull
in
mov
je
ret
stos
stos
cmpsb
jle
inc
leave
fsubrp
jne
pop
pop
in
sub
lock
test
mov
sbb
mov
fisttps
jp
test
pop
outsb
repz
in
add
popa
imul
out
mov
rcrb
xor
pop
outsl
mov
sbb
sbb
addl
pushf
sbb
ficoml
scas
sbb
movsb
mov
sti
lds
mov
ret
lcall
add
jmp
mov
mov
mov
xchg
stos
jg
xor
push
cli
jnp
loope
or
add
mov
les
leave
cli
pop
test
cmovbe
in
fistpll
pop
adc
subl
inc
push
mov
rcr
cli
pop
out
push
fwait
out
sbb
sbb
int3
ja
mov
lds
push
icebp
sbb
pop
out
jecxz
ljmp
cmp
cld
repz
sti
stos
test
aad
cmove
loop,pt
mov
lock
out
leave
add
loop
pop
popa
pushl
aas
out
das
loop
out
arpl
mov
addr16
xchg
sbb
mov
in
mov
cmpsb
jb
jno
push
dec
push
shl
popa
data16
neg
xchg
pop
mov
sub
aad
outsl
shlb
cmc
xchg
pop
push
cli
outsl
fnstenv
in
fisttpl
mov
and
push
mov
lret
rcrb
pop
jp
mov
data16
mov
ss
je
ja
call
sahf
sar
outsl
in
inc
lock
ljmp
sbb
lcall
imul
mov
mov
fidivs
sti
dec
mov
jo
ss
pop
hlt
fidivl
jp
dec
scas
gs
aam
lret
jno
jmp
adc
gs
out
mov
ss
loope
out
pop
inc
jno
idivl
loopne
mov
jo
mov
shll
fimull
jle
jg
out
popa
mov
xchg
leave
mov
sti
and
inc
inc
imul
and
in
lds
lahf
mov
jnp
aam
cmp
add
inc
inc
loope
xorb
out
mov
out
popa
imul
into
or
test
mulb
xlat
sbb
repnz
fwait
lods
test
jmp
imul
sbb
xchg
popa
test
mov
or
jne
pop
into
ljmp
lret
pop
test
or
lock
mov
stos
lods
mov
dec
repnz
cmpl
test
cltd
sahf
cli
pop
int
imul
ds
xorb
stos
cmc
test
pop
fucomip
stc
cli
arpl
cmp
jo
cli
ljmp
jmp
pop
icebp
subb
cwtl
in
mov
pop
inc
sbb
lods
fiaddl
sbb
imul
jns
enter
loope
cwtl
shll
pushf
test
mov
in
jmp
push
jae
ret
mov
inc
mov
or
addr16
cmp
rcrl
cld
cmc
cli
xor
cmp
jne
rclb
cli
sbb
int
jmp
jb
mov
aas
ret
ljmp
fadd
sbb
cmpb
pushf
lds
mov
push
ret
shl
sbb
or
cwtl
jp
pop
mov
icebp
mulb
mov
mov
outsl
shl
lods
pop
loope
lds
cmp
xor
add
jbe
clc
aas
imul
andl
iret
inc
inc
jae
lcall
out
in
mov
mov
dec
in
xchg
out
mov
test
mov
xor
cmpsl
int3
in
jp
loope
ljmp
iret
stc
hlt
pop
test
subl
stc
push
ljmp
jne
scas
fcompl
pusha
test
pushf
add
mov
stos
movsl
stos
shl
or
insb
int
imul
iret
jne
repz
jnp
cmc
dec
stc
les
sbb
pop
out
sbb
mov
inc
arpl
loope
cmp
gs
les
or
enter
or
xchg
cli
pop
clc
lods
fdiv
sub
aad
loope
push
icebp
jg
imul
jmp
in
pop
int3
jmp
aaa
outsl
mov
hlt
into
xchg
icebp
inc
xchg
movsb
lcall
cmp
mov
jp
in
test
cmp
mov
jmp
ret
loope
ss
inc
push
add
fstps
pop
jmp
test
popa
out
mov
scas
insl
sbb
add
mov
dec
add
addr16
inc
scas
lret
aaa
xchg
inc
mov
int3
pushw
iret
rolb
fstps
es
mov
repnz
mov
imul
sub
out
xor
fstps
sbb
mov
neg
stos
in
ljmp
and
mov
or
dec
dec
jecxz
push
fstl
dec
mov
into
int3
jbe
mov
mov
inc
aam
jmp
movsb
nop
popf
or
or
mov
testb
int3
xchg
ret
fucomi
cld
cwtl
das
popa
inc
mov
jmp
shlb
xchg
and
cmpsl
cmpsb
aad
icebp
popa
adc
loope
inc
daa
fnsave
lock
sbb
rorb
sahf
sar
cmc
inc
out
loop
xchg
mov
cmc
lock
jno
addr16
mov
jbe
aad
sahf
and
data16
sbb
jg
je
jmp
jle
rorl
mov
sti
mov
fwait
popf
das
lret
inc
das
lahf
cli
mov
mov
add
mov
mov
sbb
xchg
cmp
mov
pop
pusha
popf
loopne
inc
hlt
in
jbe
roll
ljmp
sbb
cltd
mov
stos
mov
cmpsb
call
in
mov
adc
jnp
mov
mov
das
loopne
inc
jmp
enter
cwtl
cmp
data16
mov
mov
xchg
mov
iret
sahf
bound
lret
std
sar
pop
in
loope
aas
lds
mov
mov
inc
xchg
cmp
clc
inc
cld
mov
lcall
aad
roll
add
hlt
out
mov
lock
cmc
clc
lods
mov
mov
iret
inc
fnsave
cmpsl
fsubl
xchg
cli
fstp
jns
sahf
cmpsb
sahf
out
sbbb
mov
icebp
loopne
lret
pusha
lcall
fldl
cltd
push
cmp
push
imul
aas
mov
popf
lahf
sbb
pushf
inc
xor
add
in
or
inc
mov
je
les
mov
xchg
in
fidivl
stos
stos
lret
movsb
enter
jg
push
arpl
add
pushf
fidivrl
xchg
rorl
mov
push
xor
add
jnp
pop
enter
jmp
hlt
jne
test
cmp
gs
fwait
cli
pop
fldl
mov
lcall
push
mov
mov
in
or
stos
hlt
addr16
jl
test
jle
movb
sbb
and
dec
mov
inc
fildl
mov
lcall
jne
mov
out
in
cld
or
cld
movsl
sbb
or
cmp
push
xchg
mov
dec
outsb
dec
cmp
sbb
lods
cmp
fnstsw
add
scas
hlt
leave
aad
mov
lock
dec
cwtl
lahf
sub
inc
jb
iret
jno
adc
inc
popa
out
push
sbb
popf
das
dec
jle
out
mov
call
or
cmpsl
std
fwait
mov
loope
pop
mov
jmp
nop
push
hlt
add
data16
enter
into
adc
cmp
adcl
popa
xchg
ja
xchg
out
mul
je
out
add
out
fnsave
or
dec
stc
ljmp
cmpsb
jp
fsub
inc
test
mov
push
mov
int
add
in
je
into
mov
in
ljmp
rorl
iret
mov
dec
repnz
pop
push
into
adc
aam
lock
rorb
dec
push
sti
rcl
cmc
popa
push
loopne
push
pop
push
dec
stc
and
push
ffree
loope
xor
outsl
in
push
xlat
loop
push
arpl
pusha
add
jmp
cmp
in
xlat
adc
lds
inc
inc
repz
sbb
shrl
jp
in
add
aad
push
in
popa
in
testl
cltd
mov
push
sub
and
sub
inc
push
test
xchg
aam
push
push
bound
arpl
les
out
ljmp
jno
jae
push
cmc
stc
jl
imull
jp
xchg
loope
leave
aad
xchg
and
mov
stc
popa
out
jmp
pop
shrb
push
aam
hlt
arpl
rclb
dec
jp
outsl
lods
push
fldenv
repz
mov
push
push
aam
arpl
jb
and
and
cmpsb
in
lock
je
sub
int
out
pop
in
mov
ja
bound
shl
cmp
mov
inc
cmc
arpl
loop
sub
ror
loop
ret
icebp
inc
movsl
fistpll
and
inc
dec
rolb
xlat
jae
bound
out
sub
fmuls
ror
movsb
push
push
loop
jg
jp
jne
outsb
ja
nop
inc
sbb
xchg
mov
jns
dec
jecxz
repz
push
idiv
frstor
mov
push
inc
sbbb
sbb
sahf
rorl
mov
idivl
in
loopw
ja
push
gs
push
inc
mov
icebp
bnd
xchg
xchg
push
icebp
dec
sahf
push
inc
iret
int3
dec
aaa
jp
out
sarl
mov
shrl
je
or
xlat
fsub
pusha
stc
insl
and
loopne
and
cmc
aam
sarb
gs
lret
pop
mov
adc
fstpl
cli
push
pop
push
shlb
fwait
sub
add
push
inc
shl
loopne
adc
icebp
jae
mov
notl
shll
fistpll
xor
push
pop
stc
call
inc
jno
xor
inc
fadd
outsb
xchg
aam
cli
jno
cmpsl
je
hlt
adc
push
and
aam
xlat
push
sbb
cli
push
pop
inc
dec
pop
or
inc
pop
push
dec
dec
push
xchg
ja
push
dec
lcall
popa
cld
inc
ficoml
push
clc
push
xor
hlt
jb
pop
cli
sub
lret
lret
cmc
ja
lock
inc
lret
push
imul
ret
push
pusha
add
inc
out
jnp
mov
jns
lahf
xchg
push
pop
sahf
xchg
rclb
add
push
push
push
xchg
mov
push
out
pop
aaa
push
jbe
push
lcall
xchg
jb
jbe
testl
inc
outsl
jbe
shl
push
bound
cmp
sbb
push
pop
cmp
xchg
aad
sti
sbb
cld
call
fwait
or
ret
xlat
in
xchg
fldcw
loopne
push
and
pop
pop
add
mov
ficompl
pop
mov
shl
in
ja
pop
loop
push
out
outsl
pop
cli
pop
dec
mov
and
mov
test
cmpsl
in
jbe
add
mov
arpl
lods
xlat
repnz
test
pop
xchg
inc
rcrb
js
shlb
fisubl
push
cmp
add
jbe
push
dec
in
mov
pop
leave
jns
aam
push
stc
std
jno
dec
jmp
xchg
repnz
lahf
ljmp
pop
jae
imul
cmp
dec
loope
mov
push
cltd
pusha
xchg
mov
jae
imul
dec
int3
push
cmc
int
in
dec
sti
ljmp
adc
lods
aam
arpl
je
mov
ljmp
dec
dec
aad
movl
dec
push
jg
inc
in
pop
incl
jmp
dec
repnz
aad
adc
aad
lods
dec
jb
les
fstpl
mov
int
mov
inc
or
movsl
sar
aam
dec
loop
popa
ret
stc
jle
jp
sbb
pop
push
mov
call
shll
fs
push
popa
push
aam
cmp
or
cli
jb
jg
rclb
xchg
sub
xchg
inc
pop
xchg
cltd
push
pop
pushf
push
mov
je
push
inc
inc
lcall
arpl
push
rorb
in
sbb
xor
pop
rclb
out
js
aad
mov
loope
push
mov
or
gs
pop
dec
pusha
mov
je
jne
sti
lock
push
shl
xor
sbb
fstl
jl
loop
repnz
call
jg
in
test
popl
add
negl
add
inc
push
add
xor
hlt
in
dec
nop
rcl
loope
shr
je
inc
mov
sarb
out
adc
pop
mov
xchg
jo
jle
arpl
leave
inc
lahf
sahf
push
push
fnstcw
sub
nop
movsb
movsl
das
jp
push
jb
loopne
or
addr16
dec
xchg
inc
popa
pop
lret
fmuls
push
leave
in
xchg
sti
xlat
repnz
mov
pop
ret
shl
hlt
pop
add
and
out
aaa
iret
pop
fistl
shlb
ret
imull
into
lret
imul
inc
fcmovb
in
fcom
rolb
jg
mov
clc
pop
push
pop
sub
in
mov
arpl
icebp
in
and
out
out
mov
imul
aad
aaa
cmpsl
or
push
jne
mov
popf
cltd
push
es
loopne
inc
aam
ja
int
mov
roll
xchg
cwtl
xorb
insl
ret
cmpb
mov
jg
add
jmp
and
loop
sub
adc
push
inc
sbb
dec
ss
mov
cmp
pop
xchg
mov
or
daa
jo
adc
jmp
push
sbb
pop
call
stos
jnp
cld
jno
andl
push
fistpl
frstor
and
rcr
mov
repnz
stc
pop
ret
ja
aad
fsts
jae
pop
leave
sbb
mov
nop
rol
popa
add
pop
add
dec
test
fs
stc
stos
rolb
mov
jg
imul
scas
mov
push
xchg
push
jmp
orl
cmp
xchg
mov
jmp
push
jbe
xor
leave
sbb
cmpsb
fprem
repnz
lea
mov
js
movsb
jecxz
int
adc
and
mov
js
sub
sub
ficoms
out
pop
lret
lret
cs
mov
in
adc
adc
movsl
push
cli
mov
fwait
pop
xchg
lret
ljmp
popf
out
orl
sub
lcall
xor
call
mov
loop
mov
sub
mov
inc
push
mov
cmp
cmp
cli
mov
xor
push
mov
clc
mov
mov
mov
push
cs
les
sarl
notb
lock
lods
mov
movzbl
cwtl
mov
movb
not
push
not
not
lea
push
lea
pushf
movl
mov
pushf
call
lea
jne
and
bsf
shl
cmc
mov
dec
rol
xor
sub
ror
pusha
add
shl
lea
clc
sub
clc
mov
pushl
popl
jmp
fcompl
cwtl
jg
jno
icebp
scas
ret
mov
stc
ds
mov
ss
push
cli
cmp
dec
xor
sub
sbb
insb
mov
leave
rolb
sbb
xchg
in
push
sbb
out
mulb
push
nop
adc
test
mov
aam
je
fcmovu
sti
scas
incb
push
mov
jge
jg
mov
push
cwtl
jg
inc
orb
cmp
dec
sub
and
cmp
inc
or
lahf
mov
mov
dec
xchg
dec
rcrb
int
js
dec
outsb
cmc
push
leave
les
or
xchg
sub
adc
inc
ret
pop
pop
adc
dec
addl
xchg
jg
ss
pop
aad
adc
xorl
mov
or
mov
jecxz
hlt
out
dec
mov
pop
push
lods
pushf
mov
mov
xchg
fmul
inc
movb
loope
scas
pusha
jmp
jmp
adc
adc
cmp
push
and
mov
jnp
pusha
subb
cmpsb
addr16
lret
dec
mov
cmpsb
lcall
pop
push
add
daa
mov
fwait
test
adc
test
aad
sbb
jbe
push
iret
imul
lods
jno
jmp
mov
lret
xor
jo
movsl
push
adc
fadds
std
push
lea
ja
call
inc
das
dec
cltd
jg
popf
dec
jge
daa
sub
jle
enter
sahf
add
cltd
mov
mov
popf
mov
sub
cmpsb
pop
sbb
jge
arpl
mov
sbb
pop
xchg
push
mov
jl
xchg
sbb
nop
aam
or
movsb
jbe
scas
repnz
jecxz
jb
ss
push
jne
adc
cmp
xchg
cs
les
andl
or
repnz
mov
pop
inc
outsl
insb
add
adc
sbb
fs
and
inc
lret
pusha
lods
fstps
lock
inc
aam
lods
inc
jo
sub
sbb
in
std
xchg
rcl
cwtl
or
shll
lea
xchg
pop
add
les
pop
cs
dec
cmp
test
out
cltd
jg
pop
scas
push
dec
add
insl
hlt
jnp
ret
jle
mov
push
mov
lret
dec
xor
mov
jle
cmp
inc
jecxz
adc
jne
popa
imul
jg
adc
ja
jno
arpl
jge
aaa
iret
cli
repnz
xchg
lds
into
iret
inc
or
andb
pushf
sbb
ret
inc
cmp
cwtl
fsts
ja
jb
cltd
adc
xchg
or
aam
dec
dec
lret
mov
cmpsl
add
jo
adc
push
flds
pop
iret
and
jae
pop
loope
sub
movsb
cmp
in
xchg
sub
inc
data16
xchg
inc
push
dec
fdivrs
int
arpl
cmp
dec
jle
out
cmp
jmp
xchg
pusha
call
daa
inc
pop
lcall
inc
int
daa
mov
inc
push
fcom
pop
cmp
lds
push
lods
insl
sbbb
sbb
dec
jp
popf
xchg
xchg
loopne
xor
clc
jnp
lcall
adc
push
imul
ds
sub
sub
xchg
lcall
mov
pop
or
xchg
loope
jg
lds
or
out
jnp
dec
scas
imul
sbb
test
fwait
jg
mov
popf
and
or
stos
fmuls
cmpsl
pop
mov
push
mov
push
into
sbb
scas
dec
jmp
flds
sahf
jbe
cli
iret
jae
rclb
pop
sbb
cmpsl
rol
dec
pop
lods
mov
fs
or
jns
inc
mov
cmpsb
adc
enter
jmp
cld
adc
mov
pop
xchg
aas
and
jns
leave
imul
stos
xchg
in
insl
mov
cmpsb
dec
sbb
dec
mov
addr16
pop
add
das
std
lret
sub
xlat
dec
mov
ds
mov
aad
nop
mov
dec
int3
sbbb
add
cwtl
pop
push
push
dec
or
shl
sbb
loopne
jg
into
hlt
sub
dec
sbb
xor
jg
mov
sbb
lahf
adc
xchg
xor
cmpsb
das
or
divb
rclb
sub
mov
xor
or
stos
sub
xchg
push
cli
xlat
std
mov
ljmp
bnd
std
mov
aaa
dec
sub
push
mov
movsb
mov
and
xchg
movsl
and
stos
push
adc
ficoms
adc
bound
mov
into
loope
push
imul
add
jp
sbb
push
cmp
stos
loopne
repnz
inc
push
push
xor
cs
dec
dec
add
into
ljmp
pop
into
fstpt
inc
pop
hlt
xorl
loopne
dec
mov
sub
push
mov
bound
cmpsl
sahf
fisttps
jle
add
xorb
jns
cmp
addl
outsb
push
ret
ud2
mov
push
imul
push
mov
fwait
shlb
lods
xor
stos
jns
jns
adc
push
fsubrl
aaa
pop
lret
jg
cmp
int3
xor
mov
imul
dec
ret
out
loop
sarl
test
push
cmp
fcompl
fs
std
mov
sub
mov
bound
testb
mov
cmp
xchg
lret
fistl
mov
test
hlt
jmp
cmp
lret
push
shlb
ljmp
pop
in
sahf
pushf
mov
pushf
lea
call
jmp
ficoml
popf
jg
sbbl
mov
pop
add
or
shlb
imul
data16
dec
les
jecxz
aaa
shlb
std
int3
pop
cld
inc
xor
bound
jge
push
inc
inc
xchg
orb
insb
sbb
pop
loopne
add
enter
popa
sub
mov
aaa
mov
imul
test
push
repz
repz
mov
jp
dec
gs
jg
push
push
into
mov
aam
push
lret
push
gs
lahf
imul
lea
jb
popf
fnstsw
dec
push
and
xchg
xor
cmp
pop
mulb
aad
xor
pop
popf
xchg
xor
shll
out
add
xchg
ficoml
in
enter
test
out
movsb
jo
sahf
lea
push
push
popl
jle
mov
cs
je
jg
bound
push
jp
cmp
push
fwait
dec
cmp
cltd
cwtl
out
mov
pop
xchg
xchg
repz
test
xlat
ret
mov
mov
les
pop
in
adc
sub
imul
addb
and
mov
daa
and
push
fdiv
lahf
jg
inc
or
in
xchg
sub
mov
std
jns
mov
xor
xor
jle
sbb
in
and
mov
les
cltd
add
inc
xor
or
add
push
lods
lds
cmp
movsl
jnp
xor
jo
out
cmp
rsqrtps
mov
insl
enter
orl
lret
xchg
pop
lcall
or
rorb
xchg
dec
lahf
jg
mov
jo
cmp
add
jb
or
mov
rorl
in
out
pop
shl
xchg
push
stos
movsb
enter
aam
lret
cmp
and
cmp
imul
lock
xor
mov
leave
sbb
notb
pop
mov
mov
test
pushf
adc
jne
in
outsb
and
inc
clc
mov
jne
stos
mov
in
push
inc
xchg
sub
or
fucomip
and
clc
es
mov
decl
add
jmp
lea
je
clc
add
sub
sub
bt
not
shr
or
not
mov
pusha
test
adc
add
and
ror
cmp
bsf
add
add
xor
sub
or
mov
stc
pusha
pusha
shr
cmc
cmp
call
int
nop
mov
adc
cmp
dec
pop
enter
add
mov
sahf
lock
dec
cmpsb
lock
mov
or
lods
std
add
xchg
es
cli
lahf
xor
call
mov
imul
js
movsb
mov
das
test
ret
cmp
shll
or
cmp
sbb
jns
add
dec
ljmp
xlat
and
or
mov
mov
cs
aam
dec
aaa
jp
add
arpl
in
cwtl
mov
mov
sub
add
pushf
shlb
dec
shlb
jne
push
push
add
js
or
cmp
ja
das
ret
cmp
out
andl
xchg
pop
imul
push
xchg
lahf
push
and
ss
lret
xchg
pop
sbbl
cmp
inc
push
push
dec
add
repz
mov
sub
je
test
and
inc
test
and
xchg
bound
inc
jmp
mov
mov
cmpsl
scas
rolb
bound
xor
dec
fldl
mov
es
mov
mov
ret
pop
in
fstpl
mov
in
jno
sub
bound
mov
xchg
lret
nop
fisubs
mov
outsb
repnz
and
in
jns
movsl
cmp
fwait
inc
push
nop
adc
jmp
inc
gs
jne
lds
pushf
enter
cltd
mov
sub
aam
push
cmp
lea
fwait
push
scas
fcmovnu
mov
je
push
fadds
insl
xor
push
and
cmpsl
sbb
sub
sar
lea
add
movsbl
movzbw
bswap
mov
pusha
pusha
pushf
lea
jmp
mov
movzbw
xchg
movsbw
pushf
mov
mov
pushf
pop
mov
jmp
out
shr
mov
out
mov
rcrl
clc
insl
mov
jge
dec
popa
fisubrl
cli
sub
xchg
mov
enter
sahf
les
stos
adc
test
inc
cmpsl
dec
insb
js
ret
icebp
mov
test
inc
insl
cs
call
or
xchg
iret
lea
mov
xchg
ss
pop
imull
add
sahf
loop
pop
jl
mov
sbb
add
lahf
jne
imul
push
inc
lahf
adc
xchg
enter
stc
push
outsl
mov
sbb
out
enter
lret
repnz
adc
sbb
adc
dec
loopne
scas
cmp
mov
add
fstpt
roll
int
push
scas
aaa
lret
cs
addr16
dec
or
jno
sub
xchg
movsb
pop
adc
sbb
imul
push
call
daa
test
movsb
jae
ss
je
jg
bound
mov
xor
mov
dec
imul
fs
pop
popf
stos
push
mov
mov
xchg
mov
mov
dec
inc
jl
push
cs
call
mov
add
or
adc
add
add
loope
adc
adc
or
jecxz
dec
mov
out
xchg
imul
out
xchg
or
jp
pop
fcmovnu
pushf
pushl
pushf
pushf
xchg
jmp
aam
pop
movsb
jg
dec
nop
push
dec
pop
xor
sub
ljmp
push
add
scas
fsubs
movl
dec
xchg
out
lahf
sbb
adcl
xor
add
and
test
push
sub
mov
and
mov
ret
je
sub
mov
mov
mov
push
mov
sub
addr16
sbb
movsl
jg
es
xchg
jl
inc
inc
fadds
test
sub
sti
jmp
push
sarl
mov
mov
aam
jno
sub
mov
push
xchg
add
arpl
sub
in
sti
mov
ja
leave
mov
idivb
fldcw
popa
fidivs
jbe
cmp
ret
lret
lahf
mov
jecxz
movsl
mov
repnz
sub
pop
xor
adc
movsb
adc
sbb
cmp
add
pusha
lea
jmp
lea
jae
push
pusha
push
lea
jne
pusha
jmp
ret
cmpsb
jg
push
fisubrl
cltd
imulb
test
hlt
addl
jecxz
call
imul
xor
cmc
mov
or
xchg
cmc
or
sti
cmp
insl
push
mov
mov
pop
in
cmp
jle
mov
xor
push
mov
push
jmp
adcl
push
xchg
nop
cld
sub
mov
lock
daa
and
rolb
sbb
sub
scas
sbb
inc
inc
cmpsb
jg
in
fcmove
pop
mov
ret
sbb
shll
xchg
dec
mov
int3
je
cmp
aad
mov
in
cli
push
pop
pop
cli
sbb
cmpsl
pushf
rorl
push
imul
cmp
dec
mov
push
xor
je
sahf
inc
inc
jl
int
shll
cwtl
ror
push
mov
stos
loop
and
insl
jl
adc
clc
aad
sub
cmpsl
jg
outsl
add
inc
mov
stos
pop
jl
jp
test
mov
pusha
out
push
nop
lds
sbb
and
adc
pop
pushf
lds
cs
add
adc
add
dec
decb
xchg
jnp
dec
add
icebp
inc
push
inc
call
aad
cld
or
rol
test
pusha
bound
dec
fcoml
gs
sbb
mov
test
jl
ljmp
leave
ret
cmp
call
cltd
dec
cmpsl
jg
push
push
mov
mov
pop
xchg
jo
jb
sbb
xchg
mov
sbb
and
lock
jae
pop
adc
cmpsl
les
in
lods
or
out
cmpsb
out
imul
lods
std
cmp
ljmp
inc
sbb
pop
call
pop
clc
arpl
nop
mov
ja
pop
push
sbb
lds
lret
cltd
icebp
adc
lahf
shll
jmp
orb
fdivl
out
lock
sbb
into
std
dec
cltd
aad
mov
jg
lahf
lds
adc
dec
jge
xchg
lea
mov
pop
cmp
mov
pop
add
sub
neg
in
sarb
adc
xchg
add
inc
adc
sub
fdiv
mov
scas
movsb
nop
sbb
lret
jne
fdivrs
iret
addr16
push
mov
popf
xor
and
es
jecxz
dec
enter
aad
fidivl
push
inc
push
inc
inc
ja
aad
mov
rcll
pop
xor
add
push
mov
xchg
lret
mov
xchg
jg
push
pop
test
xor
imul
imul
lock
jmp
out
pop
xchg
xchg
and
shll
pop
cmp
push
and
jl
and
jmp
icebp
ss
lret
xchg
test
xchg
out
mov
notb
jge
data16
imulb
push
mov
test
gs
mov
push
push
les
idivl
lahf
jbe
inc
pushf
mov
pusha
lea
call
call
movsl
lcall
stos
jg
or
sbb
outsb
sub
in
jp
inc
stc
sub
sbbb
in
shll
fs
jnp
jb
push
or
push
cld
mov
notb
popf
ljmp
and
mov
jnp
add
pop
mov
and
sbb
iret
mov
shlb
enter
xchg
xchg
adc
xor
stos
movsl
out
test
iret
nop
xchg
mov
in
cmp
fbld
or
insl
xchg
pop
mov
xchg
xchg
push
imul
std
lods
cmp
or
push
inc
adc
es
jne
inc
mov
pusha
adc
pusha
mov
push
lea
jmp
push
leave
lods
test
cmc
jb
xor
cmpsb
lret
call
rorb
xchg
data16
loope
adc
fdivs
sub
popf
rorl
push
iret
mov
in
aas
jmp
pop
in
jecxz
inc
fstps
lahf
add
outsl
sub
cmpsb
daa
addl
inc
fsubs
mov
mov
push
dec
ja
int
and
jnp
clc
call
mov
bswap
not
mov
setle
not
mov
mov
mov
lea
mov
pushf
mov
pushf
lea
pushf
push
mov
push
pushl
pusha
pushl
ret
call
adc
scas
movsb
adc
lret
add
inc
sti
fxch
leave
mov
imul
add
aas
add
jl
shr
inc
fcomps
mov
test
mov
js
sub
xor
dec
stos
jg
push
bound
mov
scas
inc
add
adc
xor
mov
ljmp
cmp
scas
xchg
sbb
es
lcall
out
push
fs
dec
pop
aad
jl
mov
in
mov
mov
aas
jno
xchg
popa
insl
dec
adc
pop
or
inc
mov
insl
add
sbb
cmpsb
dec
sbb
jbe
jb
stos
jg
loopne
lock
aaa
jl
xchg
sub
daa
fistps
ret
out
sbbb
adc
sub
shrb
add
jge
pop
or
orb
repz
or
jns
rorb
test
inc
ficoml
xor
imul
fbstp
nop
int3
enter
psubw
mov
pop
loop
sti
xor
scas
jne
jnp
sub
cld
push
enter
cmp
jmp
pop
daa
pop
add
add
add
add
add
add
sbb
add
add
jl
push
add
add
add
mov
add
add
add
sub
add
adc
add
lds
add
es
add
add
out
push
add
and
xchg
mov
add
and
add
add
jecxz
leave
lods
jg
sbb
mov
push
int
loopne
cwtl
cmpb
leavew
lock
das
bound
or
movsb
push
sti
jo
imul
jp
test
adc
aad
adc
pop
sahf
bound
mov
xor
mov
leave
mov
cwtl
mov
xchg
rcll
test
cmpsb
lret
stos
fcoml
dec
int3
xchg
mov
div
cmp
xorl
daa
out
xchg
pop
push
call
xlat
pop
push
xor
fisubrl
jmp
popf
mov
jecxz
lea
dec
sub
jae
jnp
cmp
jecxz
daa
xlat
xchg
or
jns
sub
xchg
arpl
pop
cmpsb
andl
lcall
and
movsl
push
test
lret
call
lahf
mov
adc
cmp
int
stos
jne
mov
and
popf
pop
pop
sbb
jle
sti
ja
out
or
sbb
push
pop
dec
repnz
faddl
lds
add
push
lret
scas
jg
adc
pop
sub
bnd
xchg
out
push
sbbb
adcb
in
imul
pop
aas
out
lods
push
test
sti
icebp
loopne
lcall
and
and
sbb
and
out
xchg
add
lods
adc
in
mov
lret
es
pop
xchg
and
outsl
dec
adc
xchg
cmp
test
lret
xlat
xchg
or
scas
jg
mov
or
rcrb
incl
mov
dec
shlb
int3
mov
mov
and
jg
cltd
or
adc
out
jns
aaa
dec
lock
cmp
push
js
sbb
dec
imul
or
lods
neg
ret
mov
ret
jle
bound
pop
test
rclb
pop
xchg
cmp
xor
insl
push
roll
rcr
jg
add
mov
push
movsbl
bswap
mov
push
pushl
pushf
lea
jmp
jecxz
jns
jg
addr16
fimull
push
dec
cmp
es
mov
movsl
imul
cs
dec
add
aam
or
push
into
js
add
movsl
pusha
dec
push
and
mov
sbb
ret
mov
xchg
popa
sbb
int3
pop
xchg
mov
and
ds
push
loop
divb
sbb
pop
sub
cmp
nop
shlb
xchg
inc
mov
jb
xchg
aam
cwtl
pop
lods
shll
inc
bound
scas
sahf
aad
arpl
inc
ljmp
cmc
out
adc
jg
xor
dec
aam
mov
pusha
test
arpl
nop
mov
stc
mov
out
or
in
outsl
mov
pop
or
or
aaa
test
jnp
push
enter
lock
push
or
pusha
add
inc
addl
jae
fimuls
jecxz
mov
pop
xchg
cmp
jl
fstp
inc
dec
clc
call
adc
daa
mov
sahf
mov
fdivr
out
jae
out
xchg
ljmp
movsl
fisubrl
mov
push
mov
mov
pop
push
rcll
outsb
ffreep
xchg
fidivs
add
sahf
adc
jl
ret
jne
xchg
cmpsl
call
out
xor
cmp
xchg
jb
leave
pop
ret
jno
push
xor
test
popa
je
jl
fwait
rorb
loope
pushl
sbb
fisubrl
pop
notl
clc
shrd
shl
mov
bt
pushf
cmc
cmpb
pusha
lea
jmp
xor
test
pusha
repnz
call
in
xorl
push
cmp
cs
mov
dec
pushf
popa
pusha
push
adc
and
xorl
sub
ret
or
inc
enter
int3
les
pop
leave
in
push
ss
imul
sub
out
inc
pop
stc
iret
pause
push
lock
add
outsb
movsb
and
scas
fwait
xchg
jae
cmc
shll
ss
in
sbb
out
inc
je
xor
xchg
js
add
or
add
cmp
jg
iret
adc
add
push
jmp
and
push
shrb
in
jne
inc
add
in
add
sti
inc
jp
ss
sbb
or
loope
fs
mov
mov
mov
adc
rorl
dec
mov
loope
mov
jbe
mov
pop
jle
xor
push
insl
sub
pop
dec
mov
inc
mov
inc
xchg
lahf
icebp
xchg
push
orb
pop
fs
cltd
push
repz
mov
cltd
xor
divl
enter
cmp
mov
jo
inc
ffreep
sarb
into
sbb
test
gs
jbe
sub
rcrl
addr16
sbb
push
mov
inc
lds
subl
in
jg
rcrl
or
movsb
mov
cld
mov
dec
xchg
in
cli
movsl
outsl
xor
lock
and
push
mov
lea
call
jmp
dec
loopne
jg
into
leave
dec
sub
or
adc
jo
jle
lahf
int3
mov
dec
adc
jo
sbbb
jnp
fisubs
pop
ret
fcompp
or
xchg
push
lahf
sub
daa
test
aas
sub
pushf
xchg
mov
popf
jge
xlat
in
aaa
and
xor
adc
popa
pop
pop
mov
lods
sub
pop
pop
push
mov
pop
ja
call
leave
andl
cmp
and
or
js
js
jge
lds
ret
jg
out
mov
adc
fbld
pop
fsubrs
and
leave
sub
das
shr
xor
cwtl
cmp
and
outsl
cmp
add
lods
push
mov
xchg
pop
and
arpl
mov
pop
repz
mov
sbb
mov
aas
jecxz
inc
sub
push
xorb
dec
icebp
jbe
shl
add
scas
je
jbe
push
rolb
cld
and
in
adc
ljmp
adc
mov
jmp
xchg
outsb
mov
daa
pcmpeqw
xchg
cld
or
sub
les
fldl
aaa
iret
hlt
jmp
enter
test
xor
dec
mov
xor
aad
mov
push
cs
sbb
mov
arpl
pop
cmpsl
mov
cmp
test
lods
data16
movsb
sbb
jae
jno
neg
lods
mov
add
loope
pop
jns
jg
lret
ss
enter
cmp
inc
sti
mov
in
lods
lock
outsl
cmp
dec
push
add
cmp
push
push
xchg
hlt
lock
mov
sub
stc
lock
adc
ret
jmp
pop
outsb
cmp
mov
mov
repz
adc
stos
cmp
push
xchg
aas
loop
jmp
pusha
lods
mul
jae
les
in
aaa
or
push
sub
out
or
inc
ret
call
sub
pop
jo
inc
testl
sub
sti
jne
inc
sub
mov
push
xor
out
mov
push
adc
jne
jge
popf
jns
sub
mov
outsl
mov
in
inc
push
fsubl
call
adc
xorb
xor
mov
cli
je
jge
enter
push
mov
mov
cmp
push
loop
aam
xchg
fsubrl
cmpsl
and
push
mov
xor
dec
aas
dec
xchg
fisubrl
dec
mov
fidivs
fpatan
inc
add
lods
stos
push
jmp
scas
dec
sti
repz
inc
and
in
mov
inc
or
dec
icebp
cltd
test
xor
mov
and
jns
repz
push
lds
sbb
insb
jle
imull
push
pop
jmp
mov
xor
add
inc
shr
and
mov
in
cmpsl
inc
mov
cmc
fsub
sti
push
subl
mov
jns
test
test
dec
push
jg
push
outsl
movsl
adc
cs
repz
pop
mov
fisubrl
pusha
out
ds
inc
clc
xchg
dec
lock
xor
or
mov
adc
adcl
out
icebp
xor
dec
pop
out
out
insl
ljmp
and
pop
and
mov
mov
fsubs
or
push
jno
int
push
mov
inc
or
pop
data16
insl
dec
addl
jno
pushl
cmpb
call
pop
pop
lret
pop
cltd
orb
adc
and
sub
pop
lahf
xor
mov
adc
data16
xor
xchg
and
mov
imul
aam
xor
mov
xchg
enter
mov
in
mov
jecxz
cli
xchg
mov
mov
mov
jmp
xor
xor
xor
pop
sub
or
jno
xchg
lret
mov
push
mov
sub
lea
jge
das
xchg
cmpsl
mov
pop
jnp
out
sti
aas
sbb
xchg
sbb
lcall
mov
xchg
stc
and
mov
cs
mov
pusha
lea
jmp
sbb
mov
adc
dec
adc
arpl
mov
out
shrl
sub
stc
push
pop
push
loop
xchg
stos
in
push
in
notl
out
pop
sbb
push
add
push
and
jb
stos
loope
sub
sub
scas
in
gs
mov
imul
loopne
inc
shl
dec
mov
imul
or
mov
xor
std
in
mov
pop
push
push
inc
push
xor
cs
dec
dec
add
cmp
add
jmp
call
jnp
into
mov
adc
jae
insl
cmp
sub
push
or
insl
jb
mov
push
movsl
inc
adc
movl
xor
sarb
and
lahf
ss
daa
aas
rcrb
clc
test
sbb
popfw
rcll
faddp
scas
cwtl
aad
popa
mov
jl
rolb
jl
jmp
jne
mov
mov
fadd
xchg
scas
rclb
mov
test
mov
push
int
adc
jno
pop
xor
loopne
xor
xchg
add
xorb
aas
lods
mov
enter
push
dec
insl
test
mov
movsb
popa
fisubs
jle
imul
aaa
and
fcomps
mov
push
ss
cld
push
fdivs
cmp
xor
imul
je
orl
add
push
lods
pusha
sub
daa
iret
xchg
push
jbe
jns
push
out
mov
lahf
ds
test
lea
movsl
add
rclb
sub
jbe
pushf
pushf
movl
call
loopne
mov
jnp
sub
data16
xchg
aaa
mov
inc
xorb
cmc
aaa
pushl
inc
sub
add
mov
mov
mov
mov
lahf
loopne
cwtl
adc
and
push
andb
in
popf
xor
notb
in
push
xor
or
in
or
dec
mov
adc
test
test
mov
lods
movaps
jns
xor
outsl
lret
jp
das
lret
and
shlb
sbb
dec
icebp
push
je
jl
out
add
faddl
add
add
cmp
stc
cmp
xor
bt
test
bt
cmp
repnz
pusha
call
pushf
jbe
mov
jecxz
gs
das
sub
outsb
jmp
in
ret
insl
push
push
push
mov
push
xchg
fdivl
push
add
sbb
fildl
aam
push
adc
mov
pop
dec
xchg
fnstcw
mov
mov
jne
into
pop
out
je
fsubrs
out
xchg
test
fbstp
outsl
sbb
and
mov
or
stos
mov
pop
and
mov
std
lret
clc
pushf
adc
add
xchg
cmp
push
cmpsl
xchg
movsl
faddl
clc
call
pusha
mov
not
mov
stc
movsbw
dec
shr
add
btr
movsbw
rcl
mov
pushf
or
push
call
pop
adc
pop
sbb
roll
imul
movsl
fbstp
loop
dec
in
push
jb
cmp
xor
popf
inc
adc
sub
fcmovnb
fs
dec
dec
out
test
pop
jg
dec
imul
lahf
push
add
cmpsb
clc
mov
popf
inc
in
ret
mov
aaa
xor
dec
repz
lock
jbe
cld
jmp
jne
lahf
xchg
jg
and
out
xor
repz
push
aaa
add
test
je
xchg
add
jae
ds
mov
mov
loopne
lcall
sub
add
inc
sbbl
movsl
lock
aas
and
sbb
mov
inc
or
fstps
pop
sahf
lds
add
popf
or
lock
add
jg
mov
mov
jbe
mov
rcl
xchg
repz
pusha
rorb
push
xchg
pop
das
xor
popf
adc
inc
inc
cmp
fwait
aad
data16
pop
popa
mov
adc
ret
add
stos
adc
and
mov
into
inc
data16
mov
mov
movsb
jge
mov
shrl
or
inc
aas
or
cmc
leave
ds
jo
push
and
mov
xor
adc
pop
ljmp
fs
jne
bswap
lea
movb
pusha
jmp
mov
jge
jg
imul
and
xlat
pushf
jmp
xor
aam
pop
xor
jecxz
jo
mov
pop
or
add
jle
loopne
xor
les
iret
jo
cmp
shll
ljmp
xchg
xor
pushf
jb
nop
shlb
sub
popf
mov
jno
int3
sti
xchg
mov
jge,pt
and
inc
in
dec
fisubs
mov
fs
jae
stc
jmp
lea
jne
rol
sub
jmp
bound
mov
ja
or
lret
loopne
out
icebp
push
push
lods
pushf
pushf
and
pop
in
mov
pop
xchg
pop
jle
bound
xchg
push
pop
cmp
mov
jbe
ss
push
dec
or
sti
push
test
imul
dec
mov
dec
insb
sbb
add
push
adc
jno
sub
jo
xchg
add
mov
mov
aam
lcall
mov
sbb
add
cwtl
fwait
lcall
sub
jg
cwtl
repz
rolb
icebp
into
mov
stos
les
shl
or
push
jns
outsl
in
aam
cmp
rol
fistl
icebp
int3
test
jecxz
fcoml
and
cmpsl
dec
pop
pop
dec
dec
sbbl
ret
inc
rsqrtps
xor
jne
arpl
daa
cmp
ja
in
pusha
pop
xchg
enter
adc
dec
sbb
andb
inc
xchg
mov
in
mov
out
add
jnp
cmp
rcll
mov
adc
sub
shl
mov
stos
lret
mov
aam
mov
out
xchg
sti
push
leave
test
cmp
push
js
into
add
xchg
and
push
jnp
lods
mov
cmp
push
inc
push
sub
and
adc
ret
cli
in
loope
stos
sbb
xchg
clc
ret
add
xlat
ss
mov
mov
fwait
mov
loopne
andl
sub
mov
push
iret
pushl
enter
decl
mov
lahf
adc
pop
int
or
adc
idiv
lahf
sub
lcall
test
mov
mov
sub
popf
jns
jne
scas
fstl
push
adc
jle
adc
xor
push
xor
mov
add
call
add
bt
mov
stc
mov
cmp
cmp
sub
movl
call
lock
lods
xchg
fldenv
mov
xchg
cmp
std
shl
test
lcall
ror
mov
xor
std
jecxz
jne
sbb
out
outsl
movsb
stc
jne
xchg
inc
xchg
jo
sbb
inc
sahf
out
and
roll
aas
mov
add
out
dec
enter
dec
fisttps
test
fs
xchg
and
jb
mov
and
mov
call
call
pop
pop
mov
loop
bound
fldcw
scas
xorl
dec
push
popf
mov
adc
inc
je
lret
push
mov
fstps
rorb
enter
int
xchg
xor
daa
test
jmp
dec
inc
ret
dec
fstp
cmp
pop
clc
push
lahf
nop
cmp
lock
adc
jg
add
sub
ret
imul
lods
ds
jg
push
sarb
cltd
inc
inc
jbe
movsl
or
push
divb
fists
enter
adc
mov
lret
loope
hlt
dec
jae
int
add
mov
ja
decb
test
jg
bound
and
or
cmp
ret
xchg
rcl
std
mov
shrb
call
and
mov
pop
push
movsl
sbb
fdivl
mov
loopne
xor
cmpsb
xchg
and
xor
mov
mov
jmp
js
inc
jbe
movsb
and
and
inc
stos
shrl
subb
scas
arpl
pushf
push
test
push
push
std
adc
jg
inc
mov
lea
and
orb
sub
pop
sub
mov
mov
bt
bt
cmp
jmp
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
movw
pushl
ret
mov
mov
pushf
pushl
ret
jno
push
lea
call
push
mov
lea
jmp
xor
adc
or
push
stos
call
mov
jae
mov
add
sub
jle
fnstcw
mov
xchg
mov
stc
daa
lock
test
es
sbb
jp
test
dec
xor
mov
clc
popl
mov
mov
ret
mov
xchg
das
pop
mov
xlat
lahf
fbstp
clc
inc
mov
sub
repz
cmp
adc
xor
pop
pop
mov
outsb
sub
into
sarl
lret
xor
xor
lcall
testl
and
dec
xchg
mulps
rclb
cltd
fldl
sbb
sbb
push
mull
cmp
adc
cmp
pop
daa
orb
in
inc
or
fidivrl
sti
cmpsl
add
jmp
fdivrs
repnz
jg
cmp
push
fwait
mov
inc
sar
xor
add
push
ret
cmpsl
repnz
in
sub
cmp
insl
sbb
int3
cmc
stc
push
xor
rcrl
or
pop
int3
stc
dec
mov
stc
jge
shlb
mov
mov
or
mov
nop
mov
jae
cmpsl
mov
mov
stc
lods
inc
push
jne
mov
gs
pop
stc
dec
repz
sbb
ljmp
pushf
pushf
pusha
movb
lea
jne
stc
mov
jmp
jmp
adc
test
jle
clc
in
jp
sbb
sub
xor
adcl
cmpsl
pop
lret
pop
mov
pop
jle
ljmp
jg
shrl
cmpsl
sbb
lods
ret
fsubs
aas
push
in
mov
movsb
loope
sub
std
pop
xchg
adc
pop
cmpsb
dec
xor
aaa
repz
push
leave
pusha
aaa
testb
mov
jp
push
sub
pop
sbb
call
jle
jg
sarb
insl
loop
xchg
icebp
pop
mov
lods
shlb
in
jmp
popl
in
rorl
imul
xchg
or
xchg
data16
incb
jmp
rcrl
mov
lea
leave
cs
add
lods
jmp
jmp
ret
push
xchg
outsl
add
stc
dec
mov
pop
mov
outsb
test
in
adc
cs
or
mov
mull
jnp
aad
add
pop
or
jno
mov
cmp
xchg
lahf
sahf
jne
mov
xor
cmpsb
xor
sub
xchg
jae
inc
inc
ljmp
loopne
dec
cmp
cli
dec
xor
ss
push
test
push
xor
or
jmp
push
mov
jg
xchg
xchg
je
xchg
sub
roll
mov
mov
test
mov
hlt
push
imul
fwait
js
mov
mov
mov
test
jne
xchg
jns
mov
std
subl
xchg
fs
or
jmp
movsl
dec
jmp
jns
call
les
nop
jmp
and
mov
call
or
add
xchg
ss
sbb
push
push
ret
rorb
std
out
leave
push
out
sbb
iret
mov
rcll
xchg
imul
insb
cwtl
mov
pop
ret
cmpsl
in
insb
add
bswap
std
pop
cltd
mov
ret
repnz
nop
sbb
push
lret
imul
sbb
inc
xchg
scas
push
int3
les
xor
pop
jg
loope
loope
xchg
mov
cli
cmp
xchg
sar
adc
inc
mov
jae
jmp
jecxz
clc
xor
ret
push
dec
mov
xchg
adc
sahf
js
sbb
pop
test
je
mov
sbb
sbb
lcall
and
sbb
dec
dec
push
mov
jne
pop
imulb
dec
je
sub
mov
mov
xchg
popf
add
pusha
xor
cmc
xchg
shrl
adc
pop
push
xor
int
mov
mov
xchg
xchg
and
xlat
mov
setb
sbb
incb
movsb
and
sub
test
sub
mov
fcompl
push
jnp
add
inc
inc
and
stos
imul
sbb
fisttpll
aaa
cmp
nop
lret
mov
les
sbb
stos
add
mov
repnz
aas
push
das
das
mov
mov
mov
les
jb
mov
xchg
pop
shll
push
jae
push
adc
ret
push
pop
adc
iret
push
add
pop
add
dec
add
in
inc
bnd
sbb
fstpl
popf
sbb
ficompl
pop
pop
fstpl
popf
mov
popf
fstps
popf
lcall
fcmovnu
pop
mov
ficompl
sbb
leave
pop
shlb
bts
not
mov
movsbw
mov
inc
shr
mov
inc
not
xor
lea
sete
lods
setg
call
push
inc
lea
push
lea
call
push
push
pusha
push
adc
call
clc
sub
clc
clc
repnz
pushf
movb
lea
jne
not
dec
sub
rcl
mov
shl
bswap
shl
movzbw
sub
push
push
mov
lea
pushf
sub
call
pusha
lea
jne
call
pushfw
popw
pushf
ror
mov
mov
bt
ror
cmp
push
test
pushf
xor
movl
clc
neg
jmp
lea
jne
push
movb
stos
pusha
pusha
lea
jmp
inc
movb
rol
mov
push
call
enter
jg
cld
lret
cltd
into
mov
les
pop
jp
icebp
inc
in
in
mov
pushf
or
push
pop
mov
das
add
inc
insb
inc
cmp
pop
xlat
fdivl
leave
cmpsl
sahf
es
in
jne
enter
loop
pop
xor
cmpsl
je
jb
repnz
sarb
clc
mov
push
fisubrl
rolb
mov
dec
sbb
mov
add
xadd
ret
into
inc
fdivrl
dec
jns
sbb
jb
pop
shll
hlt
and
ljmp
jo
pop
mul
push
adc
cmp
jbe
rcr
cmp
jno
ja
fisubl
pop
adc
adc
cmp
lods
fdivl
mov
sbb
dec
fwait
call
jmp
pusha
lea
call
stc
stc
sub
pushf
movw
pusha
call
rorb
movsl
stos
mov
lods
adc
int3
mov
dec
mov
addr16
shrl
icebp
sbb
hlt
stos
xor
jnp
mov
and
cmp
sbb
into
cmp
xchg
mov
mov
das
push
xchg
pop
inc
mov
mov
sub
dec
cli
dec
xlat
adc
movl
fimull
jo
lock
or
cmp
push
and
ss
inc
mov
xchg
and
mov
adc
dec
rcrl
cld
es
je
in
stos
cltd
push
xchg
inc
push
cld
mov
mov
mov
cmp
imul
mov
jl
cli
jge
or
lret
push
add
fwait
mov
mov
js
test
std
add
push
push
cwtl
push
or
or
sub
push
sbb
in
lea
or
lods
adc
dec
and
dec
ds
incb
dec
sahf
out
mov
dec
leave
jg
fwait
out
fldt
dec
out
ret
or
push
ret
and
setb
aaa
inc
xchg
test
int
loopne,pt
mov
or
or
adc
mov
mov
push
inc
sbb
fcompl
jae
mov
or
mov
add
int3
adc
adc
sub
int3
inc
movsb
push
dec
xchg
sub
orb
in
jae
int
js
xor
popa
xchg
pushf
push
push
mov
ljmp
out
aaa
iret
cmp
ret
inc
and
sbb
mov
aam
cmp
shlb
mov
and
or
jg
mov
pop
movsb
xchg
scas
or
rcl
movsl
pop
stc
xchg
test
mov
icebp
jle
add
lea
sub
clc
mov
leave
inc
test
mov
popf
push
bound
sub
jmp
rorl
imul
lahf
les
pop
jno
mov
add
int
mov
iret
jb
jo
adc
out
jge
lds
push
xchg
add
xchg
xor
rcl
push
movsl
and
repnz
sbbb
ficoml
dec
ret
jg
jg
shll
ss
xchg
adc
xchg
add
mov
xchg
lret
test
js
dec
je
mov
into
xchg
movsb
xorl
repz
sti
push
inc
inc
insl
mov
or
adc
mov
rorb
sbb
cmp
sbb
and
enter
push
jle
clc
push
loopne
inc
xchg
or
adc
fs
pop
push
inc
mov
nop
push
push
inc
pop
data16
inc
cmp
hlt
ss
fdivl
jo
lret
gs
pop
xchg
cwtl
aam
jmp
jmp
cmp
add
stc
jp,pt
inc
out
scas
or
and
pop
cmp
arpl
adc
lret
jg
dec
dec
pop
stos
mov
bound
test
mov
inc
shll
dec
cs
adc
adc
sbb
dec
pusha
push
xor
cmp
ret
les
lret
mov
cmp
pop
shl
add
push
mov
xor
sub
nop
push
sbbl
notb
inc
mov
jns
out
in
cltd
or
insb
dec
sbb
mov
push
aas
stos
push
shll
mov
push
push
dec
cltd
mov
pushl
mov
push
pushf
lea
jmp
lea
jb
call
lea
jae
stc
cmp
jmp
push
call
insb
push
jb
jg
les
inc
mov
fstpl
push
loope
sbb
mov
pop
imul
pop
mov
std
jb
sahf
aad
stos
mov
fdivs
iret
jnp
sub
sub
in
aad
imul
mov
pop
jg
xchg
xchg
jnp
outsb
lods
and
bswap
cmpsl
out
inc
and
pop
adc
out
movsl
cmp
loop
subb
lods
mov
iret
push
fldenv
add
jmp
inc
and
negb
add
inc
and
dec
jmp
sub
jg
dec
xchg
xor
inc
sub
scas
dec
js
test
ja
ret
stc
adc
push
mov
push
sbb
mov
cld
jo
adcb
cmp
cltd
xchg
fildll
xlat
aad
in
icebp
inc
in
adc
fmul
nop
lods
loop
outsb
jno
add
mov
xlat
add
mull
pop
rep
fnstenv
and
frstor
mov
fmulp
jg
int3
shr
and
ds
cmc
jp
xchg
pop
jle
mov
cmp
hlt
push
iret
cmpb
jmp
stos
adc
popa
fcoml
and
jbe
clc
and
push
xchg
in
mov
sbb
insl
scas
pop
push
pop
lret
push
jbe
mov
leave
addr16
std
ds
cmpsl
stos
lds
inc
out
add
lahf
jnp
hlt
mov
mov
jb
jmp
and
jg
or
pop
add
das
xor
xor
cmp
adc
in
jno
jnp
cmpsb
dec
inc
mov
std
addl
mov
jge
out
or
mul
push
jno
out
push
mov
or
arpl
je
inc
popf
je
jmp
aas
sbb
das
iret
jecxz
sbb
enter
xor
pop
iret
jb
sbb
inc
imul
into
jg
xchg
adc
mov
dec
mov
or
push
dec
ret
into
aam
sub
jp
daa
js
adc
xlat
sti
sub
lret
fs
push
jbe
jg
jmp
xchg
shlb
gs
repz
mov
data16
js
sub
cmpsl
mov
dec
xor
iret
call
jmp
sub
sbb
out
imul
rcrb
orl
enter
mov
std
pop
jb
cmp
lcall
lret
add
nop
movsl
dec
lcall
mov
mov
push
mov
mov
push
pushl
ret
push
fs
iret
jg
in
cmp
mov
fcomip
inc
inc
pop
bound
out
mov
mov
pop
mov
xlat
mov
dec
xchg
push
or
or
shr
rcrl
out
gs
popa
addr16
mov
mov
fidivrs
push
aaa
lods
imul
lea
jmp
cmp
pop
sub
int
pop
push
inc
mov
ds
or
adc
mov
or
rcrb
mov
adc
je
dec
mov
inc
test
jg
xlat
subb
pop
mov
int
cmpsl
adc
or
sti
imul
popa
xor
pop
lret
mov
lods
mov
pop
push
pop
mov
and
ja
adc
pop
mov
mov
mov
negl
lods
insb
adc
test
push
imul
xchg
mov
jb
pusha
sub
loop
push
sub
push
push
les
mov
push
arpl
jmp
clc
mov
mov
or
lea
call
pushf
pushf
lea
jmp
rol
add
jg
repnz
sbb
sbb
and
adc
dec
jmp
add
xchg
je
push
pop
jno
jl
das
ljmp
mov
jo
xor
mov
lret
lret
xchg
mov
js
mov
mov
in
test
pop
stos
sarb
sbb
ret
rorb
insl
cmp
mov
jno
pop
inc
pop
sub
mov
and
popa
imul
jp
adc
test
out
mov
mov
sbb
lret
pop
ds
movsb
xor
and
push
dec
imul
push
call
inc
mov
sub
add
pop
xor
test
sti
adc
inc
ret
aad
add
xor
mov
or
das
test
insb
mov
mov
dec
aaa
sub
lea
sbb
popw
fidivrl
push
push
or
adc
jl
cs
push
hlt
sub
pop
popf
data16
push
scas
sub
inc
out
testl
pop
pushf
pop
cld
data16
cltd
in
jg
loopne
inc
repnz
clc
push
add
cmp
pusha
push
stc
cmp
jmp
cmp
sarl
mov
imul
stos
call
mov
dec
enter
lods
xchg
mov
pop
jns
cli
sbb
daa
sbb
fisubrs
fcomp
cmp
push
xor
cmpsl
andb
mov
leave
psubw
mull
imul
pushf
mov
jge
jns
mov
mov
dec
and
lods
sub
mov
stos
cmc
inc
and
and
push
adc
mov
xchg
lds
adc
mov
sbb
sbb
cmpsl
fisttps
mov
outsb
inc
fidivrs
push
sarb
cmpsb
inc
inc
orl
dec
jl
es
cmc
cmp
sub
mov
shl
dec
push
adc
mov
in
sbb
cmp
adc
or
cmpsl
popf
cs
add
xchg
xlat
into
jge
and
fisubrl
dec
add
inc
xor
repz
and
in
hlt
sub
inc
add
xchg
addr16
jmp
or
push
jg
mov
xor
sbb
lock
push
js
outsl
cmp
mov
popl
cmp
and
add
push
fcompl
outsl
jae
dec
es
not
cltd
out
movsl
push
or
add
sub
cmpsb
push
jne
enter
add
cmp
pop
arpl
daa
push
and
lock
jl
xchg
push
xlat
pop
push
loopne
jecxz
push
test
mov
add
mov
push
aas
nop
jecxz
lods
ret
mov
sbb
jp
popf
imul
cltd
into
fmulp
jno
push
or
pop
scas
out
dec
sub
or
push
fldt
jns
push
push
sbb
dec
jae
rorl
inc
out
outsl
cmpsb
push
cmp
adc
xlat
in
stos
and
lahf
xchg
push
adc
jl
in
push
hlt
dec
xor
scas
mov
aas
jge
bound
leave
mov
xchg
pop
test
dec
lahf
push
pop
imul
cld
loope
out
dec
loop
mov
mov
sub
push
shll
jge
pop
or
pushf
sbb
lds
cmpb
xchg
jge
adc
adc
pop
pop
shrb
pop
out
xchg
mov
add
mov
add
xchg
popa
lea
push
call
sub
loopne
xchg
inc
or
mov
aaa
mov
jecxz
push
push
inc
mov
add
je
outsl
insl
insl
popa
outsb
fs
imul
and
jg
adc
jae
in
daa
in
xchg
jge
outsb
mov
xorl
outsl
jl
xchg
bound
rcll
fstp
loope
mov
roll
inc
lds
inc
rclb
push
aas
ljmp
push
dec
cmp
add
shrl
stos
sarb
adc
mov
sub
mov
pop
pop
lahf
mov
mov
sbb
mov
mov
or
cmp
inc
in
pop
jle
aad
adc
pop
div
imul
inc
shl
add
sti
dec
sbb
mov
mov
jbe
mov
or
rclb
xchg
or
push
repnz
inc
imul
xlat
ljmp
add
pusha
sbb
pushf
subl
movsb
jnp
cltd
orb
inc
sti
loop
adc
pop
int
adc
and
not
mov
push
rcl
mov
pushf
pushf
cmpb
pusha
movw
push
lea
jmp
or
dec
aad
adc
lock
pop
dec
imul
and
pop
test
imull
addb
xchg
pop
sub
mov
cmp
int3
aaa
and
sarl
enter
sbb
push
pushf
lock
or
jecxz
icebp
inc
jno
out
mov
mov
in
or
bound
mov
jge
dec
jg
popf
sbb
push
fmull
jbe
dec
int
outsl
in
loopne
sub
push
mov
aam
pop
cmpb
mov
int3
add
xor
in
into
imul
sahf
outsb
mov
xchg
in
xor
jno
mov
jp
mov
push
sub
adc
inc
or
add
sbbl
inc
mov
or
sub
loopne
fwait
sub
push
shll
scas
in
xor
and
pushf
pushf
pushl
ret
adc
xlat
jg
hlt
sbb
stc
mov
pop
xchg
mov
lcall
cmp
push
dec
test
or
rolb
dec
ds
shl
xor
adc
addr16
mov
outsb
popf
xor
mov
xchg
int3
cmp
jno
xor
mov
xchg
je
sbb
fsubl
mov
rorl
cmp
hlt
sub
cmp
cmpsb
pop
sub
xorb
push
insl
pop
movb
cmp
push
xor
punpckhbw
imul
subl
xchg
xchg
mulb
ja
dec
popa
mov
dec
and
and
ja
xchg
mov
fbstp
mov
adc
cmp
pop
dec
cvtdq2ps
repnz
jle
adc
pop
sarl
pop
lds
adc
scas
jl
ss
or
cmp
jg
add
xor
movb
lea
jne
rol
mov
mov
jmp
jnp
push
fnstcw
or
scas
sbb
mov
cwtl
or
icebp
inc
adc
sarb
shrb
pop
push
dec
mov
cmp
mov
aad
xor
std
ljmp
push
addr16
inc
scas
aad
in
scas
mov
xchg
sub
or
clc
cmp
fs
loop
ja
xchg
push
int3
std
sub
andb
pop
rcll
adc
movsb
adc
loopne
cmp
mov
lret
push
adc
jne
dec
scas
inc
adc
push
cmp
push
xorb
addr16
test
and
sbb
jb
lahf
clc
fimuls
xchg
lcall
cmp
enter
repnz
push
inc
cld
jp
pop
cmp
mov
sbb
and
fildll
cmpsb
pop
mov
rsqrtps
dec
shr
cmp
sbb
scas
push
xchg
mov
cmp
idivb
mov
sti
pushf
insb
lret
fcmovnu
mov
xlat
push
mov
add
add
add
addl
cmp
outsl
in
fdiv
xchg
mull
pop
std
mov
jg
pop
cli
mov
repnz
int3
xchg
scas
jmp
or
outsb
dec
pop
lahf
sub
adc
test
dec
or
aam
sbb
push
sbb
and
xor
sbb
add
ljmp
jl
push
popa
mov
lods
or
ficoml
arpl
push
dec
xchg
push
and
daa
movsb
jns
jo
iret
sahf
push
and
adc
mov
daa
sub
add
cmp
cmpsl
cmc
pushf
neg
jmp
xor
or
jg
pop
fidivrs
mov
push
pop
add
in
inc
in
push
xchg
mov
test
dec
es
push
or
test
mov
mov
cld
sti
movsb
mov
jle,pt
js
sub
push
fistl
pop
out
inc
test
ljmp
xchg
fmuls
inc
xchg
push
cmp
push
imul
pusha
out
jle
inc
sbb
adc
in
push
mov
dec
xor
jns
call
enter
jg
add
add
push
sub
repnz
lahf
test
mov
add
mov
jae
push
push
outsl
arpl
fildll
cli
lock
push
inc
rorb
into
and
cli
push
sub
and
pop
xlat
sbb
or
and
rol
rol
adc
fwait
dec
arpl
loop
imulb
lods
and
mov
pushf
mov
loopne
cmp
xchg
loop
xor
fldenv
push
test
pop
and
fidivrl
xchg
sbb
sahf
mov
mov
in
push
add
es
addr16
add
sub
push
nop
jns
test
fcoml
inc
lods
mov
dec
dec
dec
sbb
cmp
jle
shrb
aad
outsb
aaa
shl
dec
mov
push
mov
jecxz
cmp
ret
ret
std
mov
movl
and
mov
mov
pop
movsbw
pushf
lea
pusha
movb
push
movl
push
mov
movb
pushf
pushl
push
pushl
ret
fsts
iret
fstpt
mov
addr16
jmp
sub
or
andl
sub
jb
mov
int3
xchg
mov
loope
adc
pushf
out
lock
test
in
cmp
jne
sub
mov
lahf
mov
shrb
adc
jge
jo
mov
lods
aas
clc
pop
imul
sbb
jp
addr16
or
add
cmp
xchg
cmpsl
jl
add
ss
cli
rcrl
gs
lret
mov
sbb
ret
cmovp
mov
mov
ret
nop
jge
aas
pop
jno
ret
fsubs
pop
xor
pop
aam
movsb
inc
xchg
out
xor
aam
or
xchg
int
lods
mov
call
mov
and
push
mov
push
cmp
movsl
fimull
mov
mov
jbe
enter
gs
mov
inc
xchg
mov
sub
adc
lea
ds
push
fmuls
pop
out
repnz
jmp
mov
movsbl
lea
call
cmp
fnstsw
push
add
mov
hlt
jae
inc
stc
xchg
pop
xchg
lds
push
lds
and
jbe
mov
pusha
popf
xchg
push
xchg
dec
inc
adcb
inc
xchg
stos
sbb
adc
push
in
popa
xor
pop
lock
andb
andb
mov
jge
jae
xchg
mov
jno
es
inc
insl
inc
dec
ss
aad
in
test
sbb
fcmove
or
or
fiaddl
mov
das
into
cli
cmp
dec
cmpsb
inc
pop
idivb
xorb
xchg
dec
ds
mov
sbb
loop
mov
add
testb
fdiv
or
xchg
sub
and
cmp
sub
xor
sahf
xchg
lahf
push
xor
cmp
pop
inc
lcall
pop
cmp
cmp
cmpxchg
fwait
ja
call
addl
icebp
cmp
push
fcompl
pop
jbe
push
mov
inc
push
add
xorb
outsl
int3
sbb
pop
ja
mov
cmc
imul
xor
mov
adc
dec
jecxz
mov
push
dec
adc
jb
jne
pop
rcrb
or
pop
adcl
cs
pop
jno
mov
lahf
mov
cltd
jg
repnz
jno
dec
repnz
into
sub
es
or
sbb
xor
arpl
xor
stc
shl
or
pop
arpl
ljmp
ja
cmc
jmp
cltd
jnp
fidivrs
test
sbb
jle
add
movsb
lea
sbb
push
mov
fwait
inc
pop
xor
pop
andl
scas
pusha
jecxz
lods
sbb
xor
jecxz
ljmp
cs
dec
movsl
sub
loope
loop
dec
cmp
push
repz
inc
adc
sbb
ja
out
jno
outsl
add
cmp
repz
aam
xchg
fstpt
and
out
pop
in
pop
adcl
xor
mov
sub
ds
push
addl
inc
aaa
pushf
loope
jae
lds
jnp
pop
test
scas
addb
mov
in
adc
int3
or
fimull
ljmp
push
rcrl
mov
jb
and
push
lea
ss
add
cmp
addr16
sub
dec
mov
mov
inc
push
mov
jl
fs
jnp
in
out
or
movsb
add
mov
in
clc
xor
jne
mov
in
cmp
fs
push
jmp
push
call
xor
add
jg
out
sub
inc
pop
fadds
jae,pn
in
mulb
or
mov
mov
inc
movb
xor
xor
cmp
int3
inc
lret
cmp
mov
cltd
insb
pop
xchg
arpl
lea
add
sbb
xor
mov
xor
pop
shufps
mov
xor
pop
mov
and
lods
mov
xor
sbb
xor
jle
and
mov
mov
out
shr
lret
inc
dec
xor
dec
lock
jle
mov
inc
incl
cmpb
ja
push
fs
jl
xchg
jecxz
mov
int3
test
fisubrs
sahf
dec
sbb
mov
dec
and
aad
insb
mull
addl
and
ret
inc
fwait
sarb
mov
jge
in
push
rorl
arpl
insb
xchg
aad
mov
or
xchg
sub
fistpll
fcoml
out
fsubrs
out
fdivrs
and
cli
sub
inc
jg
fs
pop
outsl
out
push
or
jge
xor
push
andb
mov
pop
jae
jns
clc
rcr
xchg
leave
xchg
push
mov
sub
xchg
inc
lea
sbb
mov
xor
and
push
subl
pop
xor
mov
push
test
aam
sbb
shll
pushf
and
push
into
lods
decl
push
shll
cmp
mov
push
jno
push
jb
insl
stos
sub
push
cmp
rcrl
in
les
mov
and
rcll
inc
shlb
lock
push
push
dec
out
push
mov
iret
rcrl
cmpsb
lret
gs
push
xchg
and
decl
jb
jg
les
test
jecxz
xchg
jb
add
fwait
xchg
jle
fnstenv
jp
filds
mov
jo
mov
lret
fcmovnbe
pop
adc
pop
shlb
lret
cs
out
inc
jge
in
loope
inc
imul
push
in
nop
xchg
pop
hlt
fisubrl
rcrb
bound
sbb
pushf
imul
js
hlt
xchg
mov
repnz
andl
jl
jecxz
adc
mov
push
push
pop
outsb
ret
xor
sub
jge
adc
outsl
in
inc
dec
adc
sbb
ret
ret
cmp
add
xchg
adc
in
or
mov
xchg
out
adc
cmc
gs
pop
sbb
push
lods
pop
adc
shl
jnp
add
cmp
test
addb
push
sub
sub
bound
fimull
insl
pop
adc
jb
mov
sbb
jg
mov
cmp
rorl
out
xchg
push
push
fwait
loop
leave
cmp
add
aam
jp
hlt
or
outsb
dec
xor
ljmp
dec
pusha
fsubl
sti
btc
setg
shrd
rcr
add
rcl
shld
neg
movzbw
mov
add
setge
neg
mov
pusha
repnz
movl
mov
lea
jne
jmp
stos
in
jecxz
adc
push
dec
insl
sub
and
sti
out
inc
pop
movsl
mov
pop
fistpll
loope
bound
clc
mov
rolb
cld
or
loop
cs
and
outsb
xchg
ds
fidivrs
pusha
ss
cmp
mov
scas
imul
out
outsl
pusha
imul
cmp
clc
xchg
xor
jno
mov
fwait
sbb
jo
push
in
or
mov
push
mov
mov
pushf
cmpb
pusha
pusha
movl
lea
jmp
pushf
lea
ja
adc
neg
inc
sub
setle
and
add
dec
shr
rol
mov
add
rcl
add
cmp
mov
clc
jmp
movzbw
lea
cwtl
call
jg
pop
lret
loope
orl
fidivl
xchg
push
in
outsb
test
sbb
cmpsl
ja
sti
or
adc
jmp
ss
sub
add
lods
mov
or
xor
mov
mov
es
dec
push
dec
xchg
aas
insb
pop
int3
pop
dec
mov
ds
inc
fwait
mov
js
lahf
imul
push
dec
mov
in
sar
nop
aaa
jmp
fmuls
push
shlb
sub
mov
add
out
adc
xor
mov
movsl
in
adc
push
inc
mov
or
icebp
scas
sub
pop
xchg
dec
pop
or
enter
orl
sub
xchg
vxorps
int3
loop
mov
pavgw
mov
sub
dec
jmp
pop
mov
xor
testl
fs
jmp
repnz
rcll
clc
dec
lock
push
out
jo
adc
sbb
rcrb
add
sub
and
je
call
lahf
cmp
in
adc
xchg
fs
testb
cmp
insl
sub
je
out
fcmovbe
xchg
mov
sti
cmp
arpl
inc
mov
outsb
dec
enter
add
filds
test
lcall
push
or
adcl
js
lahf
ret
mov
outsb
pop
xchg
xchg
mov
lods
inc
test
sub
pop
xchg
jo
rorl
cmp
movsl
int3
jmp
adc
xchg
lods
push
pop
pop
pop
imul
nop
push
lret
pop
pop
lock
out
adc
mov
icebp
outsb
push
sbb
ror
xchg
lret
push
jecxz
cmpsb
std
insl
mov
inc
bound
sarl
lods
dec
in
inc
sub
out
jno
aaa
cmp
xchg
adc
int
outsl
in
adc
add
in
lahf
sbbb
adc
scas
repnz
sbb
mov
cmp
out
fistpl
xchg
push
and
add
and
outsl
mov
fdiv
loop
mov
aad
cmp
adcb
cmp
lahf
lods
adc
inc
add
xor
xchg
ss
jnp
inc
pop
out
adc
jne
pushl
push
shll
or
fmull
mov
pop
pop
loop
and
mov
test
dec
ja
pop
xchg
mov
mov
sbb
xchg
inc
out
or
dec
je
jmp
in
dec
add
cmp
push
xor
les
shrl
add
cmpsb
mov
loop
inc
flds
sti
loop
sbb
xchg
fs
adc
ja
rorl
repnz
cmp
jmp
pop
movzbw
xchg
push
jmp
fcompl
or
jl
rcrl
or
ja
inc
divl
push
sti
nop
fs
sbb
gs
mov
mov
lret
mov
cmpsl
push
cmp
ret
dec
insl
arpl
adc
test
and
inc
loopne
fcmove
sahf
jmp
dec
cmp
shr
loope
mov
dec
inc
je
cmpsb
rolb
cmp
pushf
lock
ja
mov
and
sbb
imul
mov
sub
ja
mov
ret
stos
mov
pusha
and
sub
inc
clc
sbb
mov
lcall
gs
es
sbb
jecxz
les
leave
es
push
push
and
stos
lods
jne
hlt
leave
pop
stc
xchg
sbb
shrl
mov
dec
insb
stos
cmp
leave
in
dec
xchg
sbb
in
int3
push
mov
adc
shll
pop
push
and
lret
adc
aam
sbb
inc
push
popa
sar
fs
sub
mov
pop
jg
test
pop
adc
outsb
xor
ja
inc
mov
cmp
or
sbb
inc
mov
xchg
mov
and
ljmp
add
xchg
push
lret
sbb
out
pop
in
nop
decl
mov
push
or
xchg
cmp
mov
stos
repnz
nop
lods
jmp
sahf
sti
mov
xchg
jno
icebp
mov
loopne
xlat
cmpsb
or
mov
pop
push
jecxz
inc
mov
push
aas
pmuludq
jp
xchg
jb
in
inc
inc
pop
test
dec
mov
xor
sub
test
pop
or
mov
cmp
pop
ja
stos
inc
or
inc
shrl
aad
mov
xor
xor
adc
pushf
lea
jbe
sub
test
adc
xadd
sub
bsr
mov
inc
shl
add
bt
mov
not
add
ror
shl
shr
bsr
xadd
xchg
movzbl
mov
or
add
pushf
movzbw
mov
pusha
mov
call
aas
popa
jge
jg
iret
sbb
mov
ret
loopne
mov
pop
xchg
mov
pop
mov
in
stos
xor
test
cwtl
or
and
in
aam
pushf
inc
and
mov
adcb
fs
push
imul
jecxz
pop
mov
fisttps
jne
loope
mov
mov
xchg
xchg
pop
out
addr16
das
pop
cmp
inc
cld
mov
fnstcw
lahf
mov
sarb
out
incb
std
out
ljmp
es
xchg
loop
aam
push
jmp
fmuls
in
lcall
fildl
jo
popa
call
fistl
lret
cwtl
imul
mov
js
cmp
pushw
lea
hlt
fsubl
ss
call
in
mov
mov
cmpsb
cmp
inc
mov
lret
pop
pcmpgtd
psrlq
lock
in
dec
mov
pop
inc
xor
mov
inc
xor
cs
dec
dec
add
mov
jg
loopne
inc
lods
addb
jle
push
fcompl
sahf
push
or
push
adc
roll
call
pop
stos
and
dec
rcll
inc
fldl
pop
std
jb
lds
mov
add
mov
jmp
sub
andb
xchg
xchg
pop
push
push
inc
rorb
push
mov
insb
or
js
arpl
movsl
fwait
and
jl
addr16
push
xor
push
inc
xor
xchg
popa
mov
mov
mov
scas
lock
ja
pusha
ror
add
pushl
sub
xor
rcl
lea
add
shld
mov
cmp
cmc
shr
mov
bt
clc
cmp
pusha
repnz
call
lea
ja
pusha
sub
inc
sub
lea
add
add
jbe
movzbw
mov
push
pushf
lea
jmp
push
int3
call
in
arpl
jns
inc
nop
xor
fcom
adc
dec
and
ret
sarb
es
fs
push
or
pop
aas
arpl
inc
mov
adc
xor
add
pop
jnp
aaa
jae,pn
sub
mov
sub
push
mov
or
popa
and
shlb
orb
addr16
fcomi
push
jg
pop
in
lret
add
loop
add
int3
ljmp
loope
ds
in
jg
lods
pinsrw
adc
gs
rcl
call
and
sub
sti
ret
and
mov
ficoms
fbstp
inc
ficomps
iret
cld
jg
jecxz
dec
lods
or
mov
loope
or
adc
imul
dec
ret
cmp
mov
andb
add
sub
dec
lea
mov
xchg
int
mov
fcmovnbe
xchg
enter
jl
add
or
cld
sub
mov
ljmp
adc
adc
je
xchg
js
jp
movsl
mov
mov
sbb
add
push
pop
mov
test
pop
pushf
fsubrs
pop
push
out
aad
orl
stc
out
pop
dec
loopne
addl
push
sub
mov
fwait
test
mov
mov
adc
mov
cmpl
xchg
in
fsubs
gs
jg
inc
in
mov
mov
mov
arpl
aad
ds
in
jg
lods
pop
hlt
pop
push
dec
js
pop
aas
in
push
dec
pop
cmp
in
sub
pop
lods
push
movsb
nop
testl
push
mov
dec
icebp
rorb
mov
repnz
pop
movsb
mov
in
aad
aaa
mov
cmp
add
push
push
in
int3
lods
aad
add
jbe
mov
enter
lods
mov
inc
imul
sbb
imul
sarb
mov
jge
ret
or
xchg
xchg
sti
sub
imul
jg
in
cwtl
in
ficompl
and
push
push
or
mov
adcl
popa
cwtl
mov
clc
cmp
cmc
loope
lahf
mov
push
sti
or
out
orb
dec
pop
sub
inc
lea
mov
xchg
sub
xchg
push
pop
pop
ja
int
outsl
mov
mov
dec
jb
and
jge
lea
mov
push
cmpsb
imul
daa
jbe
test
mov
sub
paddsw
pop
sub
pop
sbb
jb
inc
pop
out
cmp
or
mov
xchg
stos
sbbl
orl
jne
addr16
sbb
jecxz
out
aam
mov
subl
enter
cli
mov
sahf
jbe
jb
inc
mov
sahf
mov
lods
inc
sbb
icebp
jno
or
stc
jbe
out
mov
fdivp
es
sub
jb
call
std
cmp
lea
mov
out
jg
out
xchg
and
mov
inc
sbb
push
inc
mov
sub
or
adcb
lret
mov
test
pop
mov
mov
xor
lahf
dec
das
lcall
push
inc
adc
cltd
bound
mov
sbb
jle
sub
mov
adc
aam
aam
dec
mov
xlat
mov
lods
outsb
add
jb
pop
inc
sub
sub
fxam
dec
and
addb
sbb
pop
jae
push
inc
mov
les
clc
sub
pushf
pushf
pusha
mov
lea
call
call
int3
mov
lock
in
add
daa
push
mov
dec
jg
dec
pusha
stos
movsb
inc
or
in
cltd
dec
loopne
jo
ljmp
out
dec
dec
and
sbb
andb
mov
daa
xchg
repnz
inc
xchg
xchg
pop
das
fdivrl
xchg
xor
inc
test
push
jns
fcom
orb
sti
repz
aas
push
mov
cmpsb
xchg
popa
jbe
cmp
and
sbb
mov
movb
imull
lock
inc
push
sub
push
jmp
cs
or
ret
daa
into
xor
and
in
aaa
cmpsb
mov
jg
cmp
popl
xor
ljmp
lahf
adc
dec
push
push
cmp
mov
push
sub
xchg
push
dec
jae
sub
push
inc
cmp
mov
and
fs
fists
ret
aaa
add
inc
push
loope
mov
sti
cld
popa
mov
sbb
incl
sbb
divb
push
sahf
xchg
dec
loop
in
mov
jp
dec
out
jp
lret
and
adc
movsl
inc
adc
add
shll
int3
mov
xchg
or
xchg
outsb
jnp
jb
insl
sbb
cmp
ja
xchg
mov
mov
orb
sbb
jmp
cs
nop
jns
mov
jns
sbb
jo
cmp
scas
or
test
jge
sub
js
mov
lock
int3
mov
out
mov
add
iret
gs
inc
mov
into
pop
mov
jo
inc
mov
lea
scas
push
push
push
cmp
jb
je
in
jge
dec
bnd
popf
dec
dec
addb
test
jb
test
pop
jmp
lods
xor
add
and
test
test
mov
jecxz
lcall
sti
cmpsb
jmp
jo
aam
adc
jo
insb
into
pop
int3
adc
xchg
test
xchg
popa
idiv
lcall
int3
rclb
mov
adc
lret
jg
or
mov
dec
sbb
out
xlat
bnd
aad
outsl
adc
push
or
shrb
and
outsb
into
xor
jae
repz
mov
and
mov
adc
xor
mov
rolb
pushf
lods
int3
sbb
inc
shl
rorb
repnz
pop
xor
sahf
or
sub
lock
sub
fcomps
out
incl
and
or
stc
jo
in
in
stos
cmp
das
lods
dec
das
sbb
cmp
mov
push
ljmp
shl
test
movzbw
btr
push
call
push
clc
repz
dec
lea
cld
xor
push
or
in
stos
push
dec
pop
mov
outsb
push
push
mov
bound
in
nop
jne
mov
movb
mov
fcoms
inc
movsb
out
jnp
jbe
adc
add
ljmp
int3
lea
jmp
or
adc
es
fstl
pop
jge
mov
lds
shll
imul
add
jg
in
pusha
push
push
cmc
int3
jmp
popa
inc
out
pop
sahf
mov
pusha
cld
push
sbb
stc
ds
mov
jle
add
mov
or
fisubl
idivb
mov
stos
adc
inc
jno
dec
jo
movsb
cmovne
sarl
cld
mov
mov
mov
ljmp
out
daa
push
add
mov
mov
xchg
push
xchg
call
add
xor
ja
push
pop
push
xor
push
popf
lods
and
clc
pop
lea
pop
dec
fdivp
jns
jo
mov
add
test
lods
jmp
jmp
mov
call
lock
cmc
jg
mov
add
or
shrb
lret
mov
or
scas
mov
xchg
mov
or
movsb
xchg
ret
nop
push
or
shlb
insl
jmp
adc
or
ffreep
in
jl
add
dec
mov
aas
or
mov
aas
xor
adc
ja
jmp
loop
in
test
ja
dec
add
iret
push
mov
inc
sub
mov
fs
nop
jns
mov
mov
adc
dec
mov
data16
pop
inc
mov
cmp
mov
in
or
mov
and
push
mov
jg
rorl
mov
sbb
lcall
xchg
sub
xor
push
cmpsb
add
pop
in
outsb
pop
pop
xchg
and
roll
repz
mov
in
jle
popa
aad
outsb
or
fmull
adc
push
mov
lret
sub
ja
out
ds
mov
lods
fmul
lea
pop
dec
xlat
sbb
mov
cltd
cld
imul
push
dec
repz
inc
pop
stos
jg
das
sbb
es
insl
outsb
testl
xchg
jge
mov
adc
pop
jle
lret
hlt
addr16
dec
mov
jne
and
idivb
sub
pop
pop
rorb
rcrl
or
sbbb
sbb
inc
add
test
inc
cwtl
mov
insl
dec
sbb
ror
pusha
mov
xor
jg
sub
shrb
dec
addr16
pop
xor
cli
xchg
js
pop
dec
pop
push
fstp
stos
lods
jl
repz
fsubp
andb
mov
dec
and
mov
jns
jbe
sbb
fbld
loop
jb
push
pushl
ret
mov
adc
repz
out
rcr
xor
add
pop
sub
fdivrs
jle
add
adc
jne
fwait
mov
fistl
sarl
and
dec
adc
push
adc
add
mov
adc
lock
jbe
test
sub
lret
inc
call
mov
pushf
pusha
cmp
call
pushf
movl
pusha
call
mov
not
pop
pushf
pusha
movl
pusha
pushl
ret
test
xor
adc
pop
sub
shll
inc
or
jae
int
repz
inc
push
cmp
cwtl
jge
sub
pop
xor
movsb
jo
jbe
ds
mov
and
data16
lret
or
mov
sbb
and
add
pushf
adc
xchg
popf
ljmp
mov
push
mov
stos
jp
xor
push
inc
jg
xchg
push
add
sbb
push
ret
outsl
jnp
xchg
add
pop
mov
dec
sbb
jno
push
mov
xchg
shrb
out
push
repz
push
lret
and
and
or
sub
and
mov
out
loop
cmp
adc
stc
imul
decl
xor
mov
fiadds
sbb
inc
inc
pusha
or
push
inc
fldenv
cmc
adc
add
inc
scas
aad
ror
pop
sbb
or
or
inc
push
aaa
push
xor
rclb
and
cmpsl
xchg
mov
enter
cmp
insl
and
mov
popf
movsl
ja
into
repz
jl
dec
mov
je
loop
je
mov
repnz
lods
xor
lods
stos
mov
pop
das
xchg
cmp
jg
sbb
sbb
leave
mov
inc
lock
call
xor
adc
daa
in
and
cmpsl
pop
sbb
pusha
xchg
mov
leave
dec
stos
imul
cld
jno
idiv
stc
mov
ss
mov
pop
cmpsl
pop
jb
push
push
stos
mov
call
dec
xlat
enter
add
inc
push
idivb
cmpb
dec
js
jnp
hlt
and
shrl
xor
dec
pop
daa
mov
sbb
jb
lods
push
xchg
je
arpl
jmp
mov
inc
stc
jg
cltd
add
xchg
push
test
out
pop
mov
cvtps2pi
in
aaa
push
lds
cmp
mov
inc
sub
sbb
rclb
inc
es
jmp
stos
clc
faddl
and
data16
aaa
sbb
cmp
mov
movsl
dec
imul
ljmp
jmp
pusha
jmp
jg
adc
and
push
jne
push
cmp
pop
dec
stc
inc
ljmp
sub
or
pop
add
mov
repnz
addr16
ret
jmp
ret
icebp
mov
ljmp
pop
je
pusha
adc
sbb
cmp
jnp
lahf
sahf
mov
jnp
and
inc
lahf
cmp
icebp
or
int
popa
inc
push
insb
inc
mov
cmc
test
fldcw
dec
and
lock
in
mov
jp
cmp
in
lahf
xor
cli
jg
jns
mov
dec
xchg
daa
pop
add
dec
loop
pop
test
lret
nop
loop
adc
shll
dec
imul
cmp
cwtl
jmp
ss
cmp
xchg
aaa
add
fistl
mov
movsl
jb
repnz
addr16
mov
sub
into
or
test
pop
sub
xor
movsb
ret
mov
jmp
jo
adc
push
xor
xchg
sbb
inc
nop
test
jb
mov
ss
idivb
sbb
and
sub
push
sbbl
int
imull
dec
sub
xor
and
lods
xchg
je
in
test
jnp
sub
outsl
dec
push
mov
xor
mov
jbe
pop
repnz
jmp
sbbb
sub
iret
sbbb
shr
gs
fs
jbe
lds
or
fnsave
stc
popf
cltd
imull
data16
jae
repz
mov
ret
push
leave
js
push
dec
stos
dec
mov
jg
sbb
fs
jge
pushf
clc
ror
jmp
cmc
neg
jmp
push
test
clc
add
test
push
clc
mov
movw
test
jmp
notl
mov
enter
cmp
incb
adc
fwait
pop
mov
aas
cmpsb
mov
mov
xchg
int
repz
aam
mov
cs
inc
daa
mov
iret
dec
mov
pop
jmp
mov
cld
mov
add
iret
cmp
mov
es
in
dec
sbb
pusha
les
aam
sbbl
mov
and
cmp
ss
dec
mov
mov
add
adc
xchg
add
leave
out
xor
adc
insl
sbb
ror
jnp
mov
jp
ret
cltd
inc
xchg
lods
cmpsl
in
dec
inc
dec
bound
insb
dec
fisttpll
dec
and
aaa
xlat
je
push
jne
enter
jp
dec
in
pop
add
insb
sbbl
push
test
inc
rolb
divl
out
jg
xor
mov
fimuls
inc
test
dec
mov
dec
les
xchg
jbe
je
add
test
outsb
lods
cwtl
lret
scas
add
and
call
push
pusha
jmp
cmp
mov
jg
orl
push
iret
in
pop
insl
fdivs
adc
xchg
push
mov
jns
sarb
mov
pop
arpl
mov
push
outsl
test
xor
pop
jae,pt
mov
jbe
or
pushf
mov
repz
test
sarl
rclb
xor
and
xacquire
push
lret
fs
popa
dec
aas
out
int
sti
mov
std
xorb
bswap
push
btr
push
cmc
jmp
pushl
pusha
lea
jae
pusha
mov
pushf
lea
jno
inc
setg
pushf
mov
mov
lea
call
add
add
jg
push
scas
push
sbb
sahf
shll
push
stc
and
and
rcr
ljmp
lea
push
out
repz
sub
aam
xor
sbb
sub
jae
mov
jne
mov
sbbb
push
lods
jns
les
cltd
dec
addr16
test
jg
ret
add
cwtl
pushf
mov
pushf
pushl
ret
mov
movzbw
lea
bswap
bswap
mov
movw
jmp
lea
je
add
movsbw
bsf
add
and
stc
mov
cmp
add
cmp
cmc
mov
shr
mov
bswap
bsf
mov
call
or
imul
adc
mov
adc
in
xor
inc
aad
dec
adc
loope
cmpsl
inc
aas
popa
or
and
imul
or
out
mov
outsl
pop
dec
xchg
lods
push
mov
xor
inc
pusha
jno
mov
sub
xor
dec
aaa
rorl
int3
stos
mov
jge
jnp
xchg
cmp
imul
dec
rolb
add
outsl
xchg
and
sbb
xor
test
std
xor
jbe
int
push
mov
and
pop
insl
cmpl
test
shll
out
jmp
rorb
cmpl
lods
sarl
pushf
call
jl
pop
dec
pop
mov
dec
mov
or
push
mov
mov
dec
imul
andl
push
mov
das
sbb
pop
in
and
mov
mov
sar
mov
fs
jne
not
clc
xor
not
mov
call
pop
test
popf
mov
jnp
mov
ja
mov
xchg
cmpl
mov
scas
jae
push
ds
jbe
ja
jecxz
ds
mov
mov
xchg
push
out
pop
cmp
jg
sub
rcrb
mov
jg
jns
xchg
in
add
mov
in
movsl
lock
xor
cmp
push
inc
insl
psrld
sub
fsubl
pop
jo
pop
pop
outsb
add
lods
stos
nop
out
sbb
loope
inc
icebp
rcrb
je
or
call
push
loopne
lret
cmp
stc
xor
clc
repnz
call
pop
leave
in
adcb
stos
fistps
lcall
out
mov
lcall
jno
cwtl
dec
in
mov
pop
and
add
int
xchg
jg
mov
dec
leave
rcl
test
fstpl
sahf
adc
or
lds
testb
jno
mov
filds
push
add
adc
jb
inc
fisttpll
lds
mov
jo
push
add
or
iret
and
loope
cmp
sub
pushf
ljmp
jae
push
pop
xor
and
sbb
nop
repnz
les
cltd
sub
push
lret
mov
sbb
sub
inc
dec
cmp
jne
dec
xor
xlat
push
dec
xor
loop
js
sahf
lds
cmp
xchg
push
movq
jbe
push
in
lcall
cmc
jp
xlat
dec
cltd
or
lods
cmpsb
add
stos
jb
loope
lods
mov
jb
jge
fistps
mov
rorl
inc
shrb
sahf
shlb
test
push
or
cmp
call
cmp
je
in
ss
stos
sbb
addps
jmp
xlat
cmpsb
and
bsr
sbb
stos
push
test
lret
push
lods
jl
test
orl
dec
xchg
ljmp
data16
sbb
pop
mov
push
jo
inc
pop
sti
lret
sub
add
jne
mov
jns
fwait
sub
mov
popa
rclb
xchg
icebp
inc
add
mov
inc
lahf
xchg
bound
insb
call
push
xor
test
xchg
bound
mov
jmp
lods
cmpsb
push
mov
fs
push
mov
cmpl
jge
cmc
xor
jb
lret
xor
shll
mov
in
dec
xchg
popf
inc
xor
pusha
out
mov
cwtl
cmpsl
aam
fidivrs
add
repnz
insb
icebp
pop
imul
addr16
imulb
adc
in
shl
dec
in
push
lret
sbb
mov
jmp
and
cli
sbb
push
pop
or
jae
jbe
mov
mov
add
bound
insl
clc
sub
cmp
lahf
lcall
lahf
rcrl
cs
xchg
sub
mov
mov
stos
add
inc
fisttps
xchg
cmp
shlb
outsb
stc
aam
stc
pusha
xor
lea
call
push
mov
pusha
pusha
pushl
pushl
lea
jmp
fidivl
dec
ljmp
test
or
adc
jo
mov
aam
inc
push
outsl
out
cmpsl
add
loop
lods
adc
test
sti
jmp
push
sub
call
mov
out
inc
xchg
ss
jne
rep
lea
mov
pushl
movb
push
lea
jmp
es
add
xchg
nop
in
jb
add
outsb
sub
comiss
jnp
das
push
int
jle
insl
sub
subl
jo
sub
ja,pn
mov
int
iret
sbb
fmul
dec
shll
in
into
add
mov
or
jbe
push
lods
js
pop
add
cmp
mov
daa
push
std
pushf
jnp
roll
into
cmc
mov
notb
push
fistps
inc
pop
add
adc
mov
pop
call
dec
shlb
popa
pop
push
add
rcrl
adc
stos
in
imul
mov
into
popl
sti
fisttps
pop
sub
mov
xlat
pop
push
and
xchg
mov
hlt
or
out
sbb
sbb
mov
sbb
cltd
sbbl
mov
and
xchg
xchg
fwait
and
enter
push
arpl
pop
sbb
jle
dec
rcr
sbb
nop
push
pop
jns
add
pop
jnp
add
mov
cld
call
out
jg
sub
shrb
xor
inc
dec
adc
cmpsb
sub
jge
pop
push
shlb
orl
jb
or
enter
test
mov
adc
ficomps
adc
push
repz
mov
lcall
mov
std
pop
jl
fadds
sbb
nop
jl
cmp
stos
sub
or
dec
sbb
mov
call
jp
cltd
cmp
inc
ja
dec
and
push
push
bts
lods
jl
pop
dec
jae
adcb
nop
ret
pop
xchg
pop
lea
mov
in
mov
pusha
xchg
sub
stc
cmp
inc
adc
or
cs
out
xchg
mov
cmp
mov
dec
jmp
pusha
jmp
cmp
xor
adcb
fldcw
pop
in
outsb
imul
sub
inc
pop
ds
sub
imul
out
cmpsb
repz
insb
jns
push
or
mov
addr16
test
sub
daa
sbb
and
dec
sub
in
lcall
jl
shr
scas
dec
mov
jmp
pop
faddp
fimuls
dec
push
push
mov
bound
and
xchg
loopne
scas
pop
push
and
push
mov
out
in
push
loop
jb
lea
cmpb
aaa
lea
jae
xor
adc
seta
cmc
mov
jae
bsf
rol
mov
push
bts
movsbw
ror
mov
test
jmp
add
dec
gs
popa
addr16
outsl
js
add
add
cmp
jns
call
jmp
incb
dec
push
adcb
push
xor
jl
sub
flds
rcrl
nop
cwtl
add
sahf
out
adc
in
cmp
mov
mov
imul
inc
sbb
sbb
insb
loop
cmp
sbb
outsb
enter
or
mov
ja
jg
loop
call
mov
jg
lds
pop
in
adc
loope
popa
movsb
cwtl
push
add
repnz
fadd
pop
or
outsb
add
adc
sbb
push
lcall
xlat
test
sbb
jge
daa
xchg
jo
jo
push
mov
jns,pn
sbb
test
push
stos
arpl
xchg
ret
xor
mov
or
adc
xor
cwtl
lahf
ss
loopne
push
sbb
xor
inc
xchg
in
cmp
pushf
mov
mov
lea
ja
pusha
rcr
sub
bswap
pusha
and
sub
add
adc
ror
bswap
ror
mov
dec
and
mov
push
repnz
pushf
push
lea
jne
setnp
movb
pusha
pusha
push
movsbl
mov
bswap
lea
pushl
jmp
jnp
and
adcb
ret
loopne
push
je
ss
add
sub
cli
xor
clc
imul
mov
cmc
scas
xor
mov
cmpsl
inc
shll
sbb
xlat
xor
jo
adc
test
jo
mov
mov
dec
cwtl
test
push
out
adc
arpl
mov
jbe
and
add
aas
sbbb
jo
inc
repnz
add
sbb
adc
and
jl
mull
bt
add
clc
pusha
pusha
cmp
pushf
call
movsbl
add
movzbw
dec
rol
shr
btr
bt
mov
dec
add
pushf
movzbw
call
test
or
mov
loope
leave
jns
gs
inc
xor
sarb
adc
loope
add
popf
push
in
push
out
jecxz
push
fstp
hlt
fcomps
and
pop
stos
stos
cmpl
ja
add
pop
adc
imul
cmp
xchg
or
bound
rolb
cmp
clc
cli
in
cmpl
mov
or
shll
std
add
jae
xor
int3
repnz
sub
lcall
lcall
imul
fdivrs
pop
xchg
fisubl
int
shll
aas
xlat
pop
cs
sbb
mov
mov
jl
push
stos
lods
push
movb
out
adc
mov
out
popa
repz
jne
or
test
push
or
xor
xacquire
pop
pop
imulb
aaa
sarb
mov
je
mov
sub
ret
cs
xchg
jne
imul
test
cwtl
push
mov
add
xor
test
fidivs
mov
out
ret
movl
imul
dec
jns
into
ret
lea
ret
int3
fdivrp
or
and
sbb
or
jbe
out
lds
adc
mov
and
fiaddl
stos
pop
sbbl
les
test
fwait
sbb
dec
pop
inc
push
mov
push
push
add
xor
mov
cmc
sbb
jne
and
cmp
je
xlat
push
faddl
xor
mov
add
xchg
sbb
test
inc
push
rorl
ret
xchg
pop
sbb
imul
fwait
orb
xchg
hlt
sbb
sti
bound
xchg
xor
clc
pushf
clc
stc
imul
pushf
pusha
push
mov
lea
jmp
jmp
xchg
movsl
rorl
adc
test
xchg
aaa
xor
adc
xchg
std
mov
jg
lods
jb
lods
hlt
adc
fbld
decb
push
les
icebp
jb
loope
test
xor
jl
mov
ds
xor
call
pop
dec
fnstcw
jge
jecxz
mov
pop
test
xchg
roll
or
ja
dec
adc
andb
adcb
fidivrl
ror
fists
cmpsb
pop
sub
leave
and
out
loop
adc
sub
adcb
loop
cmpsb
sub
shll
xchg
push
mov
sti
mov
push
les
xchg
cmp
into
out
mov
adc
and
mov
add
pop
jb
mov
jne
loopne
inc
mov
idivb
pop
shrb
add
stos
or
test
into
testl
jmp
clc
aaa
incb
fmuls
std
ljmp
loopne
roll
icebp
xor
adcb
xor
mov
rcrl
dec
xor
mov
data16
inc
mov
mov
jg
mov
cltd
cwtl
push
pop
test
and
repz
mov
pop
dec
mov
jge
fwait
add
les
mov
inc
adc
xor
inc
push
ret
leave
add
loop
stc
mov
jne
push
ja
sbb
mov
push
fstpl
dec
inc
scas
loop
popf
mov
in
cmpsl
insb
test
add
xor
test
ffreep
adc
mov
mov
mov
cld
mov
jl
push
mov
sub
xchg
arpl
lock
orb
jb
jne
or
pop
lret
cmp
pop
rol
mov
jnp
push
xchg
push
adc
mov
and
dec
in
std
test
pop
mov
call
adcl
cmp
and
push
inc
jmp
fcmove
pop
jno
fstpt
or
outsl
adc
xchg
stos
push
lret
lret
pop
repnz
mov
jbe
lods
push
cmp
mov
xor
into
dec
sbb
add
and
pop
outsb
sub
or
mov
cmpsl
and
mov
popl
aad
cmp
inc
mov
pushf
push
test
push
adcb
pop
lods
xor
fwait
call
stc
inc
repz
out
mov
sbb
or
fsubr
jne
jecxz
test
sbb
cs
pop
popf
out
sahf
aam
out
fsubl
cmpl
fmull
jl
push
addr16
test
lret
inc
ds
lahf
jecxz
aad
out
pop
test
rcrb
inc
xchg
xlat
cmp
es
xchg
push
push
dec
push
pop
xor
rorl
js
cltd
mov
mov
not
call
std
out
push
adcb
push
inc
ds
enter
in
enter
negb
inc
movsl
stc
add
xchg
cmp
and
pop
test
in
sub
jecxz
add
les
xor
jg
insb
xchg
mov
pop
shl
lods
push
in
push
mov
enter
add
mov
xchg
push
cmp
loop
lret
xchg
jg
inc
aas
fisubrs
or
faddp
push
imul
in
jmp
call
clc
cmc
test
jmp
add
pop
daa
pop
add
add
add
add
add
add
sbb
add
add
jl
push
add
add
add
mov
add
add
add
sub
add
adc
add
lds
add
es
add
add
out
push
add
and
xchg
mov
add
and
add
add
add
adc
pop
sub
push
jnp
sbb
popf
orl
add
hlt
jmp
in
outsb
out
sub
mov
imul
dec
add
popf
push
dec
push
mov
cmp
bound
xchg
pop
sub
mov
jle
in
movsb
pop
mov
fbld
stos
cmp
dec
jbe
mov
sub
xchg
call
cli
jge
mov
dec
shrd
shr
cmc
mov
push
add
jl
add
jmp
push
rol
mov
jmp
add
pushf
call
fwait
jmp
adc
aam
inc
mov
cmc
push
ja
add
ljmp
push
cmpsw
aam
nop
jne
test
jle
sub
xor
sbb
xor
incb
stos
pop
push
jecxz
pop
ret
and
out
fsubrs
popa
outsl
lds
call
jecxz
add
mov
outsl
scas
test
mov
mov
mov
js
sbb
adcb
in
mov
mov
mov
cs
das
lods
xorb
jae
jmp
fcomps
lods
stos
push
jne
in
lea
sarb
test
lahf
cwtl
mov
loope
fsubrs
pushf
mov
mov
js
xor
fwait
cmp
xor
push
sbb
aas
add
int3
cli
out
mov
inc
and
lods
ficoms
je
add
fs
jmp
xchg
aam
shll
popf
push
pop
mov
pop
es
jno
mov
std
xchg
and
push
push
and
sub
iret
xchg
push
adc
xlat
jecxz
pop
fldt
cmc
jecxz
jno
daa
and
and
out
inc
inc
xlat
add
test
push
dec
leave
push
xchg
mov
mov
mov
icebp
jmp
jecxz
pushf
pop
push
ror
push
or
mov
shlb
jmp
push
shl
test
xchg
jl
add
out
aas
pop
shlb
jno
xchg
xor
push
dec
popf
jecxz
adc
lret
mov
xlat
aad
cmpsl
mov
orb
int
ja
xlat
add
pop
daa
bound
rcr
out
fidivrs
sti
iret
push
leave
out
xchg
push
fwait
cmpsl
ja
mov
aad
ljmp
adc
adc
gs
and
aam
sub
jns
loopne
mov
dec
outsl
mov
aaa
sub
jae
mov
clc
mov
lds
sti
daa
push
jnp
cmpsl
mov
xchg
rcl
movsl
and
aad
movsl
std
jecxz
lcall
loopne
rcll
pushf
out
xchg
or
stc
adc
sbb
push
test
lret
stc
mov
dec
push
lret
in
imul
or
lcall
icebp
cmpsl
mov
mov
imulb
insl
or
out
lret
dec
shrl
in
push
mov
daa
xchg
cmp
loop
shrl
repz
out
push
roll
cmpsl
xchg
sahf
jmp
mov
popf
dec
fcmovb
aad
add
adc
xor
ret
lahf
test
xchg
jne
popa
pop
mov
push
pop
aad
push
and
jp
std
mov
pop
test
pop
inc
lcall
lock
xchg
ret
movsl
iret
icebp
xlat
pop
mull
sarb
icebp
pop
mov
loopne
cld
popa
dec
lret
mov
cmp
mov
push
pop
cmpsl
sahf
ja
fwait
mov
pop
dec
cmp
punpckhdq
ffree
daa
pop
push
xchg
fimull
shrb
repz
add
mov
dec
mov
cmpsl
ds
cmp
test
adc
adc
inc
js
rolb
stos
subl
inc
xor
push
icebp
push
aad
mov
sbb
aas
sti
test
cmpsb
cmc
das
roll
adc
lods
sub
mov
pop
sub
aas
orb
sub
mov
mov
jecxz
lods
xor
mov
push
dec
xchg
rorb
ffreep
mov
cmp
mov
push
js
and
aad
xchg
mov
push
popf
xchg
repnz
push
out
lock
inc
pop
lds
mov
sbb
aaa
fldl
xor
sub
push
enter
cmp
dec
fistl
cwtl
fisttps
aas
shrb
pop
xor
adc
in
stos
mov
push
push
mov
mov
mov
aam
mov
ror
daa
jno
cs
inc
stos
cmpsl
xor
mov
arpl
das
movsw
aaa
adc
rcrl
lcall
negl
mov
mov
add
fstl
std
icebp
pop
sbb
sbb
daa
xor
adcb
mov
push
and
movsb
dec
sub
arpl
cmpsl
mov
cli
movsl
push
dec
frstor
pop
ret
mov
pop
lds
add
test
repz
icebp
push
adc
repz
jecxz
push
sbb
lds
ret
repz
mov
jecxz
aaa
ret
mov
leave
rcr
scas
xchg
jns
das
iret
and
ljmp
push
neg
je
leavew
das
addr16
add
mov
xchg
adc
sti
je
cli
fstpt
adc
mov
adc
xor
mov
jne
push
leave
pop
test
pop
dec
mov
stos
scas
idivb
or
shll
pusha
inc
mov
call
lret
xor
or
out
push
shll
push
xchg
shll
push
in
sbb
sub
stos
pop
lcall
aad
in
jmp
push
xlat
sbb
lcall
push
bnd
stos
push
push
mov
mov
xchg
sahf
jnp
loopne
add
sub
stc
or
xor
dec
cmpsl
mov
fistps
shl
jae
test
in
lahf
es
gs
or
repz
clc
pop
arpl
pop
aas
into
cwtl
jno
clc
loop
push
pop
xchg
xchg
cmp
adc
fstps
fists
xor
xchg
adc
push
mov
and
mov
aaa
jns
push
mov
adc
mov
jecxz
lock
push
nop
out
and
lock
xor
xor
mov
not
shl
mov
fsubrs
popf
test
cmp
inc
sbb
in
xchg
mov
rcrl
or
push
loopne
push
cmp
fldt
or
push
shl
testl
jae
ret
jecxz
and
loopne
outsb
fldt
jmp
xlat
push
mov
addl
ror
daa
dec
push
fdiv
add
lds
lahf
loopne
push
scas
aad
pop
push
sub
dec
repz
repz
repz
sub
mov
sub
xor
repz
mov
repz
push
xor
lods
inc
flds
push
sub
jae
lods
fnstcw
mov
xchg
adc
arpl
xor
cmpsb
push
mov
mov
not
and
mov
fsts
jmp
fstps
repz
cmp
inc
cmc
shrl
inc
stos
mov
imulb
inc
push
sub
mov
ret
or
jae
arpl
xchg
xlat
mov
fbstp
xlat
loope
sbb
xchg
inc
stos
mov
lods
cmc
aad
fcmovu
xlat
fwait
leave
jo
scas
inc
scas
mov
mov
aad
repz
pop
xor
push
repnz
aad
out
mov
mov
repz
lock
popf
xchg
xchg
rcll
rcll
mov
jne
push
flds
xchg
out
rcll
sahf
iret
fcmovbe
xchg
mov
jne
pop
mov
xchg
test
ret
adc
test
pop
fnstenv
loopne
iret
xchg
rcll
cmc
or
pop
iret
shll
ljmp
shll
iret
mov
icebp
hlt
xchg
mull
fcmovne
xchg
fcmovnu
sbb
mov
cs
dec
fnsave
mov
sti
pop
cmc
repnz
out
fnstenv
test
out
cltd
clc
movsl
jnp
xlat
repz
push
scas
xchg
sahf
fwait
lret
out
jne
add
scas
inc
add
inc
shll
lahf
jmp
xchg
inc
cmc
rcll
adc
xchg
movl
stc
inc
xchg
push
mov
cmpl
popf
popf
cltd
mov
xchg
cmc
xor
and
out
lea
push
push
inc
inc
jecxz
lahf
mov
daa
shl
in
or
aam
scas
sub
jecxz
pop
das
push
sar
push
lahf
mov
mov
push
mov
rcrb
lods
xchg
cs
scas
mov
adc
lahf
and
out
mov
movsb
popf
xor
push
cmc
ljmp
push
popa
push
jg
dec
movsb
and
in
or
inc
sub
push
lods
jne
mov
insb
pop
out
js
inc
aas
mov
mov
dec
mov
cld
lds
cmpsl
mov
das
dec
test
fidivl
mov
xlat
mov
fcmovb
cwtl
and
mov
daa
cmpsb
push
cwtl
inc
cwtl
cmc
adc
stos
arpl
xchg
aam
divl
sub
mov
mov
sbb
jns
and
xchg
daa
mov
mov
adc
sbb
insb
pop
xchg
ja
nop
inc
cmc
clc
fidivl
icebp
jnp
pop
sub
mov
out
dec
int3
mov
mov
push
xor
iret
jb
enter
sbb
push
sbb
sub
pop
push
mov
push
scas
jae
addl
push
enter
mov
xchg
pop
sbb
push
mov
nop
test
dec
or
cmpsl
test
in
push
fsts
in
pop
lcall
adc
xchg
inc
pmulhuw
das
push
jecxz
push
push
movsl
enter
jecxz
xor
mov
popf
out
cmpsl
fistps
sbb
fnsave
jg
aad
lea
and
cmpb
lret
aad
jp
daa
aam
pop
lret
in
push
decb
stc
fwait
and
popf
cmpsl
in
inc
cmp
lds
xlat
dec
daa
dec
addr16
xor
int
ficoml
add
call
sub
ret
aad
repz
scas
dec
negb
push
out
pop
shlb
mov
in
into
pop
lods
lcall
mov
mov
loopne
inc
dec
jl
std
lahf
pop
jmp
loop
push
movsb
icebp
xor
daa
adc
mov
sbb
mov
xchg
jp
xchg
add
inc
mov
add
rol
mov
in
inc
addr16
inc
shrb
fiadds
jecxz
cmpsl
loop
scas
lahf
push
cmp
rcll
inc
lods
daa
test
jle
lea
xchg
rcll
cmpsl
js
dec
push
insl
rcr
xchg
push
pop
fstps
mov
lret
sbb
cmc
test
mov
ds
fcmovbe
pop
rolb
mov
mov
mov
enter
in
cmc
test
push
xor
repz
mov
jecxz
add
scas
cs
imul
popf
jnp
loopne
adc
dec
mov
lret
mov
das
push
cmpsl
aam
inc
in
hlt
loop
daa
aad
or
sti
js
mov
inc
icebp
mov
pop
xchg
ss
and
bound
pop
xor
mov
xchg
daa
jmp
mov
jno
mov
mov
iret
fidivrl
ror
push
aaa
repz
cmp
mov
jge
xchg
mov
ret
sarl
sarb
inc
push
xchg
jecxz
add
lds
sarb
loopne
test
fcoml
sub
dec
leave
inc
je
sbb
or
mov
pop
test
sarl
sbb
fildl
outsl
mov
das
test
aad
jne
testl
push
mov
jno
aaa
adc
mov
adc
jnp
lea
pop
and
pop
fwait
aam
fwait
pop
int
adc
loopne
out
add
rorl
mov
fwait
into
std
fcomi
mov
insl
repz
push
and
cmpsl
test
movsl
out
mov
je
add
das
ret
mov
js
cli
jo
xor
xchg
add
into
aad
popf
push
jae
inc
inc
sub
mov
stc
sbb
cmpsl
pop
pop
pop
xchg
cwtl
aad
icebp
jg
fdivr
sbb
js
xchg
xchg
push
fsts
pop
lahf
push
xchg
lods
test
and
xchg
iret
scas
ror
int
andb
ja
adc
xlat
pop
dec
jne
mov
addr16
fnsave
lahf
sbb
popf
sahf
cmp
push
adc
stos
idivl
jl
lret
notl
push
jl
xlat
imul
fistpl
je
inc
test
addl
pop
cmc
sub
mov
jns
push
cli
push
fistl
bswap
push
repnz
jbe
xor
popa
jb
adc
adc
insl
jecxz
fbld
lcall
add
adc
xor
xor
aad
adc
je
pop
ror
scas
popf
adc
mov
daa
int
xorb
jae
shrl
dec
in
ja
pop
push
lock
fwait
mov
dec
lcall
ss
lcall
mov
aam
adc
xor
push
fistl
jecxz
sbb
ret
jl
icebp
mov
fdivrs
bound
movl
outsb
or
sub
stc
sbb
test
mov
sbb
sbbl
data16
lock
xor
sbb
iret
xor
jno
into
xchg
ret
dec
fcmovb
lret
xor
outsb
jns
fwait
stos
add
mov
add
aaa
xchg
jne
dec
cmpsb
fcomi
add
sub
add
push
inc
inc
inc
sub
aaa
mov
pop
sti
das
sub
dec
js
mov
cmpsl
sbb
paddsw
icebp
xlat
lods
rclb
cmp
add
das
nop
add
icebp
and
repz
fsubrs
popa
cmpsl
xchg
push
xchg
xchg
pusha
aad
aad
hlt
pop
push
imul
aam
clc
push
repz
rcll
aaa
xor
pop
sahf
enter
lret
scas
ss
pop
mov
sti
ror
daa
lea
hlt
xlat
fdivp
cmpsl
jne
arpl
sub
aad
sbb
mov
out
dec
fcmovbe
xchg
in
test
mov
inc
testl
daa
les
flds
add
scas
sbb
xchg
fs
or
je
and
scas
sub
lds
cmp
aaa
testb
test
lds
lods
mov
mov
xor
sub
into
rorb
xor
scas
rol
cmp
jp
pop
testb
pushf
push
aaa
fcmove
jae
pop
adc
cmpsl
lahf
rcll
push
cli
je
add
ja
imull
mov
lahf
lcall
sti
xchg
cmp
rorl
out
mov
loope
push
into
ret
mov
mov
lods
and
sbb
inc
cs
pop
mov
and
das
arpl
pop
out
testb
aaa
repnz
inc
popa
xchg
inc
lock
fisubrl
leave
xor
xchg
inc
push
sar
cmpsl
mov
lock
icebp
hlt
daa
std
ret
xor
mov
adc
dec
or
addb
mov
rorl
loop
das
jo
test
pop
icebp
pop
mov
add
cmp
hlt
cmp
mov
mov
lahf
adc
inc
cmpsl
fistpl
pop
push
inc
fimull
add
adc
rcl
out
xlat
js
add
in
test
ljmp
icebp
movsb
inc
popf
mov
dec
cltd
pslld
aad
cmp
lods
adc
imull
mov
adc
pop
lahf
aad
sbb
sbb
inc
mov
mov
fistl
scas
sbb
pop
push
cmp
mov
fwait
out
dec
fs
mov
adc
jmp
lahf
xchg
add
je
fstps
shl
dec
sbbb
cmc
pop
xchg
in
inc
cmp
repnz
popf
in
mov
jae
sbb
test
test
sti
sbb
dec
cmc
ret
shl
lcall
xorl
aad
cmp
ret
paddb
pop
mov
xchg
jnp
ljmp
sbb
cmp
jmp
jecxz
mov
in
push
push
sub
lahf
cmp
mov
fs
sub
or
ret
lcall
fwait
push
push
out
ja
pop
hlt
jle
jns
clc
inc
push
jnp
jbe
sahf
call
rolb
mov
jp
mov
adc
xchg
addr16
push
arpl
stc
push
xchg
inc
pop
je
cmpsl
cmc
and
mov
sub
arpl
loope
not
loope
mov
lods
xchg
inc
cmpsl
mov
out
repz
mov
adc
movsl
dec
std
ret
outsl
ret
lods
or
xor
xchg
aam
mov
enter
cmpsl
pop
push
int
lcall
sub
sub
enter
sbb
in
nop
movsl
push
inc
out
stos
mov
mov
outsl
jne
movsb
jb
hlt
pop
mov
mov
sbb
sub
loope
out
push
pushf
inc
pop
add
xor
sub
inc
cwtl
shrb
es
sub
mov
adc
mov
cmpsb
ret
jns
daa
clc
movsl
mov
push
and
dec
push
mov
fucom
packssdw
or
sbb
mov
mov
out
mov
jp
pop
ret
dec
fsub
mov
aam
sub
sbb
ret
xchg
sub
mov
add
mov
gs
pusha
xlat
andl
push
cmpsb
out
je
add
sbb
fistpll
cmp
pop
clc
mov
jl
push
fisttps
repnz
cmpsl
push
cmpb
clc
mov
sub
push
add
lcall
adc
dec
roll
mov
xor
dec
xor
insb
scas
sbbl
push
leave
adc
out
jo
cmpsl
push
outsl
fsubrp
cli
push
mov
pop
jecxz
loopne
push
popf
fwait
or
idivl
inc
xlat
and
pushf
loopne
inc
loope
jecxz
insb
sub
leave
dec
stos
inc
lcall
js
mov
pop
fisubl
sub
sarl
leave
adc
mov
inc
out
ret
dec
inc
sti
adc
xchg
insl
ret
aaa
pop
mov
les
push
adc
stos
in
add
sub
mov
inc
cmp
sarb
adc
jp
sbb
sub
into
into
push
lahf
movsl
sbb
inc
inc
and
sbbb
test
daa
out
shr
fmul
xor
mov
add
mov
xchg
test
inc
inc
cmpb
dec
mov
fcmovu
scas
xchg
imul
aad
js
add
daa
jne
fcmovu
cmpsl
sbb
data16
ret
mov
enter
subb
rcll
mov
lods
jne
rcrb
sub
out
das
mov
fsts
addr16
out
push
es
fisttps
scas
inc
sub
popf
int
mov
push
xchg
xor
out
shrb
loopne
dec
jp,pn
mov
xor
and
jge
cli
shll
jecxz
daa
lods
sahf
adc
mov
xlat
scas
sahf
jle
daa
xor
mov
out
jnp
cmpsl
andb
das
in
cmp
mov
stc
sub
lods
std
iret
pop
push
enter
mov
xorl
sbb
xchg
and
stos
int
repz
int
cwtl
pop
fisttpll
jb
cmp
ja
mov
in
push
iret
mov
mov
inc
adc
leave
or
push
and
mov
xor
ret
ja
push
in
sbb
out
stos
sbb
add
push
iret
mov
fwait
adc
xlat
pop
mov
in
repz
das
xor
add
repnz
lock
mov
xor
inc
or
push
dec
test
ss
jnp
aaa
sub
fcompl
std
lret
jno
fs
push
out
mov
clc
imul
fmull
mov
mov
push
mov
add
ja
and
in
push
pop
repz
std
mov
add
pop
xor
adc
lods
xchg
cmp
or
xor
clc
das
out
cwtl
push
sub
js
dec
pop
and
xor
scas
movb
push
add
lods
pusha
hlt
and
lahf
mov
sub
roll
out
mov
cmpsb
mov
mov
aad
jnp
daa
ljmp
add
stc
mov
or
out
xchg
lret
or
ljmp
push
out
or
cmp
aas
aaa
std
cmp
pop
fs
fs
push
jcxz
push
pop
add
or
pop
xor
addr16
iret
mov
fldenv
jecxz
mov
adc
mov
lea
adc
arpl
testl
outsb
xchg
push
xchg
mov
jns
cmp
cmp
repz
in
inc
mov
jmp
sub
test
sti
xor
daa
inc
movsb
push
push
cmpsl
roll
xor
cltd
xchg
mov
add
jg
cmpsl
movsl
das
repnz
mov
xor
rorl
out
fst
into
inc
xchg
icebp
in
jbe
xchg
adc
out
popf
jnp
outsl
adc
sti
imul
mov
or
add
nop
dec
mov
jl
mov
std
mov
arpl
cs
repnz
daa
pop
xchg
cmp
lar
lds
scas
andl
xchg
daa
mov
mov
rol
push
jmp
jg,pn
fnstcw
pop
lahf
and
or
push
xchg
inc
ret
lret
cli
out
filds
xor
mov
ret
pop
repz
cmpsl
mov
jmp
outsl
mov
out
xor
mov
cmp
inc
arpl
cmp
push
mov
sbb
addb
cwtl
rcrb
inc
add
jno
mov
cmp
ja
sub
sbb
xor
mov
scas
rcrl
jns
jmp
loopne
lahf
mov
fwait
xor
negl
pop
test
add
mov
jle
ss
inc
lret
movntq
sahf
in
pop
out
xlat
pop
stos
cmpsl
jbe
adc
js
lds
mov
in
cmp
inc
icebp
aas
lret
ja
inc
pushl
and
js
inc
inc
jns
mov
sahf
test
cld
push
pop
inc
cmpsl
pop
and
mov
loop
jbe
test
mov
push
push
cmpsl
pop
inc
repnz
jecxz
loop
cmpsb
cmpsl
rorl
sarb
test
repz
test
push
movsl
imul
or
cmp
and
mov
lret
xor
inc
fcmovnbe
daa
mov
rcrl
pop
aad
sub
out
les
cli
pop
popf
das
xor
shlb
rol
adc
cmpsl
frstor
and
mov
add
jmp
sbb
sar
xor
fcomp
sbb
nop
adc
mov
les
std
es
mov
jecxz
loop
pop
jnp
push
pusha
sub
mov
ss
cmp
outsl
push
jecxz
daa
push
xchg
sub
fwait
repnz
lods
lock
lahf
jae
daa
out
popf
imul
daa
cmp
xlat
adc
scas
cmp
mov
aaa
push
push
adc
xor
mov
push
adc
jg
pop
jecxz
shll
push
mov
js
mov
stc
movsb
out
jb
popf
into
test
loopne
adc
sarw
lret
push
jno
fists
ja
push
int3
mov
mov
lret
fstpl
je
adc
and
std
push
repnz
adc
mov
mov
es
sub
xor
lds
cmpsb
push
and
ja
cmc
pop
lods
cmpsl
incl
xchg
mov
movsb
mov
push
cmpb
mov
icebp
mov
int
cmpsb
mov
xchg
pushl
in
jl
lods
or
cmpsl
divb
nop
das
lods
xor
jbe
xchg
pop
sub
lock
cmp
add
xchg
ja
cmp
leave
inc
mov
cmpsl
js
xchg
add
loop
mov
shrb
rcl
adc
push
adc
sub
adc
cmpsl
scas
sti
fildl
mov
add
and
movsl
lods
dec
jg
hlt
aaa
sub
shll
aad
adc
outsb
imul
jle
in
sbb
xchg
repz
fidivs
pop
lcall
or
test
xchg
push
mov
in
push
lcall
hlt
and
xchg
das
ret
mov
push
push
imul
add
loop
movsl
push
xchg
mov
out
cli
enter
mov
fldenv
fcoml
movsb
jae
xchg
mov
test
pop
dec
das
mov
dec
mov
daa
clc
es
mov
inc
jecxz
mov
or
mov
jb
into
gs
mov
das
lahf
gs
xchg
addr16
nop
test
sbb
inc
daa
cmp
shlb
push
mov
mov
xchg
sbb
insl
xlat
lds
push
fstpt
cli
mov
jae
xchg
adc
jmp
nop
arpl
clc
mov
jg
lds
xor
sub
mov
aaa
js
xor
mov
adc
idivl
adc
pop
dec
xlat
push
cmp
pop
push
ljmp
lods
dec
ret
xchg
mov
push
mov
rorb
popa
push
lds
mov
adc
adc
adc
daa
filds
pop
pushf
sub
out
cmc
xchg
ficomps
fnstenv
daa
push
and
mov
push
out
mov
mov
fs
fadds
adc
mov
add
mov
pusha
cwtl
lods
loop
sbb
gs
clc
push
cwtl
ret
subb
cmpsl
cs
sahf
cmpl
adc
or
pop
nop
out
mov
xchg
cmpsl
cmp
sti
imul
outsb
adc
xchg
int3
add
dec
addr16
rcrl
xchg
loopne
je
xor
mov
cmc
pop
adc
pop
stos
cmp
mov
xchg
lea
cltd
loope
cmp
pop
iret
popf
adcb
insb
stos
xchg
jg
int3
shl
jmp
imul
lock
ret
and
jecxz
jle
clc
adc
jl
cmpl
in
stos
test
aad
or
sub
xor
adc
daa
leave
lock
and
jmp
lods
insl
movsb
int3
dec
adc
jecxz
push
xchg
pushf
xchg
add
inc
mov
jne
lods
xor
repz
clc
jbe
sub
popa
push
inc
inc
pop
add
pop
int3
ja
xchg
inc
push
pop
and
divl
and
pop
mov
sub
rcrb
std
jae
jae
cs
shll
js
fld
xor
cmpsb
call
mov
lcall
test
shl
sbb
mov
stos
xchg
leave
lahf
push
or
in
mov
test
fnsave
sbb
rolb
or
icebp
out
loop
mov
cmc
mov
mov
sbb
sbb
inc
push
fcomip
enter
xchg
flds
mov
outsb
cmp
pop
mov
pop
fisubl
jbe
je
push
fisubl
inc
stos
mov
inc
xlat
sbb
push
xchg
outsb
adc
fbld
loopne
or
adc
or
jbe
lock
inc
mov
and
pop
jbe
jecxz
rcll
fnsave
imull
shl
insb
fdivrs
sub
mov
xchg
or
inc
push
lods
test
cmp
leave
xchg
mov
aas
mov
push
movsb
add
mov
arpl
sbb
mov
push
mov
mov
jmp
lahf
jb
adc
sbb
jge
xlat
lods
in
rclb
jg
xlat
mov
fcoms
mov
push
lret
repz
add
fdivs
out
ret
out
sub
xchg
adc
pusha
mov
mov
mov
inc
mov
fnstenv
adc
mov
hlt
jnp
inc
loope
fwait
sti
iret
fdivrp
lock
shl
push
cmpsl
push
loop
cmp
out
fidivrl
inc
push
gs
aad
mov
mov
push
mov
pusha
fwait
jnp
nop
std
iret
lods
push
mov
and
adc
nop
mov
push
daa
es
mov
addb
ror
insb
orb
add
movsl
sub
ljmp
repnz
add
adc
jp
movsl
sub
mov
cmp
push
sub
xchg
lods
repnz
shlb
imul
dec
xor
lds
fwait
lea
nop
cmpsl
mov
out
aaa
addr16
out
or
push
fcoms
fwait
mov
cwtl
pop
sub
push
jns
fcomp
lds
mov
loop
test
push
rclb
mov
push
adc
out
decl
dec
sti
ljmp
dec
adc
fcoms
jle
pop
lcall
adc
push
aad
fucomp
sahf
sbb
xchg
fisttpl
int
fistpll
mov
cmp
mov
and
push
dec
mov
stc
xchg
psubusw
andnps
pop
sti
mov
sub
fistps
fsts
fnsave
xchg
stos
addr16
stc
ficoml
dec
insb
stc
incl
pop
sub
cmc
or
push
push
cmpsb
mov
daa
cmp
pusha
loop
jmp
mov
mov
push
shll
fisubl
mov
sub
jmp
arpl
loop
pop
rcrb
lret
mov
or
cmp
fwait
or
sahf
xchg
dec
repz
out
add
pop
sbb
pop
push
jne
jbe
and
xchg
xchg
adc
int3
mov
sbb
lods
push
or
jmp
adc
cmpsl
push
fdivrs
inc
mov
jle
xchg
jecxz
imul
jp
cmpsl
lds
cmp
adc
loopne
test
into
adc
mov
in
movsl
mov
aad
push
sbb
ja
adc
sahf
js
xor
nop
pop
cmpsb
push
cmp
mov
cmp
clc
add
jecxz
adc
iret
mov
movsb
jns
xchg
mov
scas
cmc
jae
rolb
shll
jno
das
push
push
adc
adcl
clc
push
cmp
inc
test
push
lahf
scas
xchg
fwait
jne
dec
repz
rcll
adc
out
mov
and
movsl
or
sub
fwait
into
daa
jle
mov
fcoml
cli
pop
lret
pop
xchg
jg
in
es
mov
fwait
push
jl
loop
fs
sbb
gs
rorl
incb
push
popf
fsts
fwait
mov
cmp
xchg
jecxz
test
outsl
jbe
jge
popf
jno
and
rcll
es
xchg
cltd
sub
pop
arpl
or
jge,pt
inc
push
lcall
bound
add
ret
jle
jmp
xchg
adcb
sarl
pop
mov
rclb
push
push
testl
imul
inc
sar
pop
push
stc
mov
sbb
mov
in
and
call
mov
mov
xor
out
xchg
in
push
jp
ljmp
cwtl
js
inc
mov
xchg
out
jecxz
adc
sahf
lret
lods
cmp
mov
mov
adc
xchg
xor
xor
or
jmp
fisubl
out
add
adc
pop
mov
dec
cmpsl
xchg
xchg
mov
popf
push
xchg
daa
lret
mov
adc
xchg
iret
inc
jbe
andl
pop
fs
sbb
push
jg
or
sbb
sti
ret
mov
sbb
stos
jmp
stc
mov
push
xlat
jg
aad
lret
xchg
xor
jp
lcall
lods
mov
shr
test
cmpsl
jnp
jno
or
cmpsl
das
push
out
and
cmpsl
mov
jp
icebp
sahf
dec
enter
xchg
cmpsb
or
or
je
fwait
out
jns
stc
daa
adc
addl
mov
sti
xchg
push
test
pop
daa
scas
incb
xchg
sub
fwait
push
sbb
sti
mov
and
fcmovu
aam
daa
ja
idivl
and
jmp
or
add
std
push
dec
test
cmpl
sahf
subb
adc
mov
xor
repnz
movsl
out
scas
inc
mov
adc
stos
push
mov
in
push
mov
mov
mov
mov
jmp
push
loope
xlat
cmpsl
xor
scas
repz
scas
addr16
clc
mov
hlt
mov
out
fisttps
out
or
mov
lret
rcl
movsb
mov
aaa
mov
jo
shll
mov
cmp
mov
ret
inc
shr
mov
jno
icebp
mov
inc
xchg
std
lock
pushf
pushf
inc
in
xlat
sti
sbb
pop
push
push
daa
mov
push
jg
adc
or
aaa
fwait
or
push
sub
fcmovnb
push
cwtl
pop
subb
ja
lret
or
popa
cltd
mov
xor
clc
int
inc
aad
adc
fsts
popf
push
out
or
mov
xchg
nop
mov
jg
fdiv
add
cmpsl
cli
cmpsb
mov
inc
nop
mov
jnp
and
push
mov
sbb
pusha
xor
dec
mov
pop
push
mov
cli
sbb
roll
xchg
jg
icebp
cmpsl
in
push
pop
rcrl
xor
daa
mov
cmpsl
out
dec
adc
fwait
iret
cmpsb
filds
push
stos
mov
imull
adc
aaa
push
push
push
push
sbb
repnz
sub
adc
sub
jae
mov
test
xchg
push
cmp
mov
lahf
jge
jnp
cmp
pop
test
imul
fs
sbb
add
xor
add
lods
jg
ja
pushl
in
sbb
add
xchg
inc
les
popf
jmp
sbb
mov
pushf
mov
movl
or
jnp
sbb
cmp
cmp
sbb
xor
xchg
ficompl
sub
xchg
jb
cmp
mov
dec
shlb
xchg
dec
or
xchg
or
out
xchg
xchg
outsb
ret
imul
fwait
pop
stc
mov
push
add
repnz
daa
mov
add
dec
repz
inc
push
mov
stc
pop
cmc
in
ss
xchg
in
mov
jae
cmpsb
jae
addl
mov
dec
insl
repz
push
int
mov
femms
jnp
inc
fdivs
notb
inc
sti
std
pop
jl
popf
clc
sbb
or
mov
xchg
cld
hlt
push
daa
pop
sbb
out
arpl
movsl
xor
mov
pop
out
push
bound
ja
jmp
push
sbb
pop
cs
test
jecxz
pop
mov
sub
mov
jmp
dec
xorl
lret
movsl
and
jle
add
ds
sub
dec
sarl
je
adc
jecxz
cmpsl
cltd
popf
xor
push
cmp
sbb
addr16
outsb
lret
stc
jp
aad
test
fnstenv
rcrl
imul
pop
insl
out
pushl
cmpsb
cli
jns
or
jmp
cmpsl
mov
cmp
js
daa
jae
inc
add
bound
mov
mov
sti
mov
ret
jecxz
fcoms
sub
jecxz
adc
or
rolb
icebp
pop
lahf
dec
pop
aaa
dec
or
fcoml
aas
push
rolb
adc
repnz
aad
sub
vmovmskpd
daa
aam
push
mov
shl
pop
ret
mov
sub
cmp
fadds
nop
leave
mov
mov
out
xchg
lods
dec
push
cmc
push
test
jo
mov
dec
jno
sti
jnp
rclb
outsl
in
jecxz
mov
pusha
unpckhps
jbe
stos
negl
lcall
push
lds
push
push
daa
pop
pop
sbb
xchg
jno
cli
hlt
xchg
lock
pop
push
rcrb
in
fwait
sub
ret
jg
mov
dec
shlb
fistps
aaa
jg
test
lret
out
call
adc
icebp
dec
push
jbe
lods
xor
add
push
xor
mov
jge
js
inc
sbb
xchg
adc
lds
lcall
sbb
fcmovnb
outsb
imul
movsb
dec
in
emms
dec
stc
fbstp
sti
inc
test
sbb
shrl
add
xor
daa
fs
rcrl
lcall
ss
xchg
dec
or
cmpsl
sub
xorb
mov
das
jmp
leave
jle
adc
lea
xlat
mov
pop
out
insl
aaa
insl
mov
flds
clc
mov
push
inc
cltd
jge
push
ret
std
cwtl
shll
imul
adc
push
mov
rol
ret
cmp
movsb
mov
test
fistl
ja
add
out
xor
jle
cmpsb
push
jecxz
xchg
loopne
out
xor
mov
aam
cld
mov
push
sbb
mov
popf
cmp
mov
imul
mov
xor
push
jbe
and
dec
rcr
mul
pop
stos
add
and
sub
scas
or
xbegin
daa
int3
lock
cmp
into
call
aad
gs
fsub
std
pop
fists
adcl
mov
lds
std
loop
or
rcrl
mov
loope
pop
test
pop
fldl
push
add
mul
jb
mov
inc
cmc
aas
cmp
lahf
pop
sub
ret
out
push
hlt
bound
xlat
scas
scas
mov
sar
daa
pop
add
dec
out
enter
jle
add
fstpt
arpl
cmp
test
fcoms
push
or
add
mov
and
stc
sub
fs
xor
push
imul
lds
cltd
mov
fstpl
xor
negl
add
sti
mov
js
push
push
mov
loop
mov
or
fcmovb
ror
adc
add
fisttpl
xor
ret
icebp
jp
jne
ljmp
cmp
mov
jmp
shrb
or
jp
sbb
repnz
je
jecxz
hlt
fldcw
pushl
jns
daa
dec
mov
outsl
aam
push
or
xchg
push
push
pop
sub
addr16
xor
and
and
sub
inc
mov
jmp
cltd
dec
divl
lods
sti
xor
dec
cwtl
ss
mov
ret
jge
ljmp
ret
clc
stc
daa
adc
imul
push
mov
js
cmpsl
sbb
icebp
movsl
cmp
xchg
xchg
cmp
or
pop
daa
sbb
or
or
bound
ret
stos
aam
push
loope
ljmp
adc
inc
dec
shlb
js
jno
mov
cmpsl
test
inc
xlat
sbb
pop
cmc
out
leave
mov
aad
loope
js
or
out
fwait
xchg
in
lret
sti
jge
mov
or
stos
icebp
xchg
mov
iret
mov
fbstp
lds
pusha
in
es
icebp
ret
unpcklps
mov
mov
adc
cmpsb
dec
adc
xor
orb
daa
inc
imul
adc
iret
xor
mov
clc
adc
addl
jmp
sub
fbstp
cwtl
xchg
shll
sub
sub
inc
cmc
fwait
lret
mov
push
inc
shl
pushf
fnsave
daa
xchg
and
idivl
dec
ss
inc
xchg
mov
test
mov
jl
sub
add
lcall
xor
sub
cmp
or
add
loopne
pop
mov
js
stos
mov
stos
mov
xchg
into
xchg
xor
arpl
ja
nop
cmpsl
and
in
roll
lds
add
mov
in
mov
xlat
pop
jmp
inc
int
jg
aaa
cmp
das
fstcw
cli
call
daa
dec
pop
mov
insl
xchg
or
ret
xchg
int3
xor
addl
sbb
or
adc
inc
pop
cmp
or
movsb
sahf
fdivl
test
adc
addl
in
hlt
xlat
inc
mov
jae
nop
mov
shrl
add
push
xchg
and
cmovbe
and
and
cmpsl
push
notb
adc
aad
movsb
push
std
mov
test
mov
fidivrs
or
loope
add
incl
lret
cmpsl
stc
cmpb
cltd
mov
icebp
or
pop
popf
cmp
adc
je
test
stc
call
pop
pop
jle
mov
jnp
mov
in
jp
jno
xchg
cmp
sbb
mov
xlat
aad
fstps
adc
push
iret
mov
jae
shr
pushfw
push
daa
xchg
movl
pop
icebp
jae
mov
stc
mov
lahf
xchg
shlb
xchg
jl
mov
stc
aas
mov
dec
fwait
inc
inc
mov
cmpb
mov
push
pop
out
pop
pop
add
stos
push
cld
or
in
leave
ror
inc
fists
xchg
jne
adc
enter
mov
rcrb
pop
push
xchg
xchg
insl
add
stc
sub
out
inc
in
dec
lds
xor
add
sub
cmp
sub
fldenv
add
jne
shl
or
pop
std
mov
sbb
pop
les
inc
sub
xor
enter
fdivr
hlt
or
push
add
cmp
xchg
test
jmp
icebp
stc
jnp
ficompl
ret
out
push
cmpsb
pushf
not
pop
leave
mov
add
sbb
or
xchg
sbb
push
mov
cmpsl
lcall
inc
xchg
push
cwtl
xchg
mov
std
pop
aad
inc
orl
xchg
clc
lcall
cltd
test
cltd
inc
pop
notb
xor
mov
aad
daa
or
fidivrl
lcall
cmpsb
pop
test
add
dec
out
xchg
daa
and
or
aam
aad
mov
cmpsl
dec
rcr
ret
cli
dec
and
out
mov
faddl
out
pop
add
fwait
cmp
push
aas
xor
xchg
lds
stc
pop
scas
fwait
pop
cltd
xor
push
xchg
push
push
cmpsl
and
pop
xor
lahf
push
inc
mov
inc
popa
or
jge
pop
and
repz
mov
sbb
aaa
es
aad
test
imul
xchg
pushf
mov
fidivl
rclb
or
stc
push
shlb
dec
arpl
mov
shl
add
add
jnp
jecxz
mov
push
pop
jp
jbe
mov
ret
dec
clc
lods
sbb
ljmp
shl
mov
outsl
mov
push
adc
pop
pop
hlt
push
xchg
cwtl
std
cld
test
dec
loopne
mov
jbe
xor
adc
push
cli
mov
in
push
xor
jp
inc
rcrl
cmp
pushf
out
notb
or
push
cmpsl
outsl
cli
jnp
fmul
cmc
sub
pop
pop
shlb
out
and
daa
rcrb
xor
sarb
arpl
push
push
xor
jb
mov
or
mov
ret
in
push
push
mov
icebp
rcll
fmull
outsl
loope
add
es
xchg
or
mov
dec
dec
sbb
xchg
pop
mov
sub
hlt
mov
cli
negb
repz
pop
out
or
push
xlat
pop
in
push
jecxz
call
xchg
negl
pop
xchg
xor
jo
pop
mov
inc
leave
sbb
adc
and
cmp
xlat
daa
lock
fstpt
clc
mov
aad
shlb
dec
lcall
lret
add
inc
xor
pushf
inc
test
jecxz
cmpsl
les
popf
addr16
xor
and
sbb
xor
jp
out
and
jl
cmpsl
std
jno
jg
sbb
push
repnz
or
std
fmul
push
sbb
rcrl
sahf
mov
testb
insl
xchg
jmp
cwtl
mov
in
xor
xchg
in
dec
xchg
repz
ja
add
repz
popfw
lret
adc
movsl
loope
daa
xchg
repz
xchg
loop
loope
test
push
mov
cld
mov
pop
jbe
popf
jo
aam
mov
cli
mov
mov
add
xchg
sbb
lcall
ret
out
and
sarb
sbb
xor
fstpl
pop
rcrl
insb
mov
outsb
cmp
subl
cmp
push
add
lahf
add
nop
jae
repz
lods
sbb
cltd
aaa
cwtl
daa
pop
in
bound
ds
xchg
mov
xor
test
adc
and
dec
lahf
inc
out
repz
in
push
or
and
jle
lds
aad
push
xchg
fcomp
push
add
cmpsb
pop
pcmpgtd
es
roll
dec
out
add
lahf
in
ret
nop
in
pop
enter
fnstenv
imul
test
or
dec
mov
test
inc
repz
push
cmpsl
jo
xchg
pop
dec
pop
fistl
inc
lcall
cmc
mov
pop
mov
mov
cmp
outsl
inc
push
ss
aaa
cmpsl
int3
cld
lcall
ja
inc
rcr
cmp
lock
rorl
xlat
push
jmp
ljmp
dec
xlat
daa
inc
add
and
out
scas
lcall
mov
jecxz
xchg
jno
push
int3
jl
imul
push
add
jp
cmp
cld
fisttpll
cmpsl
xchg
mov
pop
scas
push
cli
fwait
cmp
dec
shl
out
test
seto
mov
xlat
cmpsl
mov
adc
daa
pop
sbb
scas
xchg
imul
ficoml
push
outsl
pop
jns
fucomp
cmpsb
outsl
or
push
adc
or
fisttpl
loope
push
inc
cmpsl
mov
ret
inc
bound
out
stos
xor
add
out
pop
daa
cmpsb
pop
fistps
push
mov
xchg
inc
dec
inc
inc
xchg
ret
test
daa
in
xor
pusha
aaa
sbbb
pop
lods
inc
fwait
gs
lcall
insb
test
sbb
lahf
lret
jp
divb
call
out
stos
mov
test
fstps
cli
shrb
mov
fcomi
je
and
cmp
shl
and
mov
jecxz
adc
xchg
fists
add
data16
cs
mov
mov
cmc
pop
pop
jo
fwait
mov
and
mov
mov
fwait
pusha
or
and
cmp
inc
inc
mov
push
xorb
lahf
mov
push
adc
jecxz
jmp
push
xor
loope
dec
sbb
xchg
les
mov
mov
mov
jnp
rorl
or
push
jecxz
mov
sbb
mov
daa
iret
mov
mov
xchg
aam
into
loopne
inc
pop
scas
mov
sub
and
lahf
fwait
mov
jbe
push
subb
mov
int3
ret
or
pusha
sbb
push
stos
movsb
and
xchg
or
nop
daa
push
sbb
cmc
pop
jnp
pushf
sub
lret
push
pop
jbe
mov
lret
lahf
jnp
bound
jl
ja
aas
jp
shlb
dec
inc
shrb
xor
fs
mov
stc
sti
dec
cmp
test
jecxz
orb
adcb
cmp
push
enter
rcll
add
lods
dec
mov
sbb
mov
adc
lds
mov
fistpl
sbb
mov
push
out
or
jl
ret
jp
cmp
dec
jecxz
daa
pop
cmp
outsb
push
mov
fs
pop
loope
fwait
mov
pushf
ds
rcrl
negl
jecxz
or
sub
and
ficoml
test
push
rclb
jno
jne
sub
sti
mov
outsb
inc
and
xchg
sub
mov
jmp
lret
in
add
xchg
lea
repz
cmpsl
sub
test
jae
inc
and
mov
inc
mov
sub
mov
push
inc
inc
push
stos
out
cmp
or
popa
xchg
gs
or
add
ds
push
out
subl
icebp
mov
cmpsl
andl
lds
xchg
stc
mov
mov
es
in
adc
test
cli
lods
cmp
add
insb
xor
inc
mov
pop
aad
jecxz
mov
shlb
in
dec
addb
adc
dec
sbb
hlt
pop
ret
dec
mov
aaa
add
add
mov
data16
shl
out
js
imul
mov
mov
fsubrs
lea
divl
inc
dec
fwait
les
cwtl
inc
push
and
mov
add
ret
ds
call
pop
jae
icebp
in
rcr
test
cmp
dec
mov
push
stc
dec
xchg
adc
inc
outsl
loop
push
mov
adc
pushf
xor
ss
push
dec
aas
iret
fsubl
push
inc
or
test
sbb
sub
leave
push
or
out
xor
or
fmuls
orl
ja
js
pop
out
pop
sahf
scas
or
push
jecxz
mul
mov
flds
popf
fistpl
and
andl
jae
lret
decb
shlb
shl
jecxz
push
mov
popf
or
call
test
or
div
rclb
adc
cmpsl
cmc
std
popf
cmpsl
hlt
lds
add
int3
lret
andl
cs
inc
add
add
aas
xor
inc
lock
mov
cmp
inc
mov
ret
pop
fsubrs
push
repnz
jl
dec
sbb
loope
push
test
xchg
stc
xchg
sbb
jb
test
jecxz
movsb
aas
dec
shll
add
cltd
adc
add
imulb
xor
shrb
jo
dec
ret
out
push
xchg
lcall
jge
or
daa
jnp
push
xchg
fwait
sbb
daa
fcom
jle
sti
inc
and
out
xchg
je
ljmp
sbb
fimull
add
shlb
jns
fnsetpm(287
loope
push
mov
pop
cld
lock
ja
jle
hlt
in
jg
mov
sub
add
adc
add
scas
and
daa
sub
jmp
inc
jl
mov
dec
sbb
aaa
cwtl
pop
mov
xchg
outsb
push
adc
ds
adcl
ficompl
ja
popf
lock
mov
lret
lcall
xchg
sub
popf
icebp
or
int
aam
nop
cmpsl
dec
mov
push
dec
pop
xor
xor
ss
icebp
pushf
shl
adc
dec
or
pop
adc
xchg
inc
es
cmp
test
repz
fnsave
call
xlat
cmpsl
ja
xor
adc
repnz
fnstenv
clc
aam
lds
out
insl
leave
or
adcb
inc
lret
hlt
out
lods
rcrl
and
cmp
adc
mov
mov
adc
ret
cmp
into
mov
jno
push
cmpsl
adc
pop
pop
xor
enter
idiv
jecxz
adcl
cs
out
pop
mov
aad
cltd
mov
xchg
stos
jbe
pop
cmpsl
add
and
jle
cmc
sbb
or
and
sbbl
xor
push
mov
pop
push
out
stc
dec
push
fwait
pop
push
rcll
xchg
cmpsl
sub
or
push
test
test
pop
jbe
sbb
and
fdivrs
mov
add
cmp
push
ret
loopne
sbb
sarl
inc
sbbb
in
cmpsl
es
js
xor
aam
and
cld
test
mov
xorb
lcall
mov
mov
mov
inc
lods
fbstp
jns
inc
es
jb
cltd
subb
fdiv
jbe
nop
cmp
push
test
out
xchg
pushl
inc
sbb
sbb
rcrl
dec
lret
cmc
insl
das
or
pusha
jno
out
fcoml
daa
out
out
sub
mov
pop
cmpsl
pop
stos
xchg
mov
sbb
dec
sbb
int3
adc
mov
push
sarb
jno
jnp
outsl
in
popf
jmp
inc
mov
je
jns
xchg
xor
enter
mov
cmpsl
and
dec
xchg
fwait
leave
mov
cs
adc
push
push
popl
mov
pop
dec
test
push
inc
stc
jb
pop
xchg
lcall
sti
jno
lds
and
aam
pop
filds
push
movsl
fwait
dec
add
fwait
lahf
sbb
jae
mov
pop
sbb
mov
and
repnz
mov
lds
test
jge
fwait
xor
divl
ret
jl
xchg
xchg
aad
ficoms
or
fidivrl
adc
push
sub
leave
dec
mov
mov
stc
jbe
push
rcr
pop
push
xchg
filds
out
mov
add
sub
xchg
jge
imul
push
jl
arpl
jle
les
cmp
mov
iret
adc
popf
xor
or
negb
sti
clc
pop
movsb
ret
push
cmpsl
test
mov
mov
shll
adc
into
push
jo
push
adc
add
shlb
pop
xchg
daa
or
xchg
pop
dec
mov
ss
mov
or
pop
jg
inc
jno
cwtl
js
or
xchg
sbbl
xor
push
xor
mov
daa
mov
and
cmpsl
xor
hlt
or
dec
adc
int
iret
daa
lods
imul
in
cltd
mov
push
in
mov
hlt
and
sahf
imul
sub
add
fisttpll
pop
inc
inc
fistl
aaa
clc
js
and
fisubl
outsb
mov
cmp
mov
or
test
repz
pusha
push
scas
pushf
pop
daa
fcmove
pop
sarl
dec
mov
add
icebp
push
cmpsl
jecxz
xor
push
push
xor
jl
push
sub
jne
arpl
stc
fld
sbb
test
rolb
inc
xor
cmp
or
cmp
lret
mov
jb
mov
pop
dec
hlt
jae
mov
inc
push
ss
fstl
mov
sti
fistpl
fnstenv
arpl
push
icebp
mov
iret
mov
test
sbb
iret
out
stos
jb
fcoms
cmp
jae
daa
call
lcall
ds
jl
pop
into
cmpsb
and
lds
xorb
aam
push
popf
js
cmp
ljmp
adc
out
leave
mov
sti
pop
xor
cmc
sbb
push
cli
scas
jne
jecxz
push
inc
repz
mov
pop
inc
icebp
fisttpll
dec
idivl
push
cmpsl
push
daa
shll
popf
jl
xchg
jae
shl
test
out
imulb
mov
jecxz
hlt
dec
and
int
sbb
movsb
cmc
das
add
pop
ds
lods
outsb
xchg
daa
jno
hlt
mov
pop
pop
outsl
divl
mov
mov
in
rol
daa
sahf
inc
mov
lock
sbb
add
jns
jb
fwait
mov
ret
jmp
cmpsl
shr
shl
xchg
aad
or
bound
mov
mov
ds
push
std
xor
bound
push
fists
push
lcall
hlt
xchg
fwait
xor
jnp
inc
cmpsb
push
mov
cmpsl
fmuls
insb
jae
sbb
pusha
add
arpl
out
loope
xchg
pop
scas
iret
inc
rcll
push
mov
jbe
divl
pop
jne
mov
add
lods
xor
rcll
and
nop
ljmp
jp
adcl
popf
inc
adc
xlat
sar
pop
mov
or
repnz
mov
fcmovnb
xchg
inc
sub
xor
hlt
xlat
cmp
xor
inc
dec
arpl
fistl
xchg
hlt
inc
fcomi
xor
xchg
mov
cmpsl
push
fildll
or
jbe
ret
scas
xchg
fnstcw
jnp
cltd
sarb
bsr
je
cmpsl
jno
mov
pop
inc
ret
jns
pop
daa
mov
mov
aad
mov
int
jge
dec
dec
push
imul
jp
mov
shll
mov
adc
mov
mov
pop
xchg
sbb
stos
mov
jmp
jmp
cmp
add
icebp
mov
sbbl
or
jl
and
gs
sti
dec
sub
xorl
fdivrl
iret
sahf
jne
fdivl
sbb
lret
jnp
sbb
mov
aam
sbb
xchg
sub
enter
faddp
les
cli
out
add
in
loopne
fildll
mov
into
cmpsl
leave
or
daa
cmc
aad
aaa
sahf
dec
jl
ja
pop
jg
sbb
lods
loopne
jno
pusha
aaa
mov
cmp
xchg
xlat
out
in
cmpsl
fidivs
sbb
pop
mov
cmp
stc
aas
xlat
mov
fistl
lret
or
test
push
fisttpll
sbb
ret
es
xchg
fildl
mov
test
inc
mov
jecxz
fdivrp
ja
cmpb
ja
mov
sub
cmpsl
add
sub
stc
cld
je
add
fisubl
pop
cld
sarb
imul
cmp
pop
push
into
int3
push
jecxz
xor
jle
mov
iret
inc
ret
push
mov
test
xchg
ret
xchg
fisubl
rcrb
mov
jbe
das
loop
mov
mull
adc
sti
inc
jne
lods
pop
dec
jp
test
je
cmc
outsl
sub
dec
dec
stos
cmpsl
pop
sbb
lcall
pop
nop
push
rcrl
stc
out
jbe
out
dec
push
jno
rcl
xchg
repz
stc
or
mov
dec
testb
xchg
jbe
adc
and
ror
lahf
inc
jecxz
or
mov
inc
mov
mov
ret
sbb
das
xchg
popf
sbb
daa
xchg
adc
aam
xchg
mov
adc
ljmp
add
test
mov
shlb
inc
pmaddwd
sbb
xor
mov
fstl
or
inc
inc
jno
ds
mov
pop
popl
stos
adc
push
xchg
pop
cmpsl
or
adc
out
sub
insb
inc
out
pushl
cmpsl
jmp
insl
pop
fiaddl
or
cmpsl
sbb
pop
adc
daa
add
in
jecxz
or
mov
sub
popa
adcl
cmpsl
xchg
cmp
lahf
mov
imul
cmc
daa
call
lahf
push
xchg
insl
pop
cwtl
rorl
shrl
icebp
in
fidivrs
les
daa
es
push
cmpsl
push
orl
clc
lahf
cs
inc
divl
in
adc
jns
lods
push
imul
mov
dec
jg
pop
ljmp
dec
sub
jb
repz
jg
xchg
out
push
call
aad
or
icebp
mov
lcall
inc
pusha
jns
fcmovbe
jnp
mov
inc
iret
mov
popa
loope
adc
in
out
cmpsl
icebp
or
inc
jae
cmpsb
dec
mov
jne
mov
cmp
cmpsl
jb
icebp
dec
cli
shrl
push
xlat
push
xchg
adc
pop
jmp
or
xor
mov
es
mov
outsb
addl
adc
add
xchg
mov
mov
push
xor
xchg
xchg
adc
jge
stos
out
pop
adc
cmp
sub
lods
push
mov
stc
push
pop
or
mov
cmc
stos
fs
add
pop
jo
insb
push
add
cmpsl
lret
mov
mov
cmovo
jg
int
ret
push
rcl
push
sbb
repz
mov
fsts
stos
xchg
push
daa
xchg
imul
xchg
lds
dec
out
notl
aad
mov
ja
ss
leave
jb
sub
hlt
cmpsl
xchg
cmp
fdiv
rcrl
jp
sti
add
scas
adc
in
das
push
lcall
dec
mov
inc
mov
je
jecxz
ret
arpl
cmp
out
pop
jle
shlb
in
cmp
cmp
add
pop
cmp
dec
xchg
push
jns
fwait
sahf
pop
mov
push
stc
xchg
aad
rcrb
loope
fcoms
cltd
sub
cmp
lds
mov
fcmovbe
out
mov
xor
stc
popf
nop
in
jns
cmpsb
daa
hlt
and
mov
lret
dec
cmc
rcll
mov
adc
dec
adcl
jb
inc
and
sub
ret
sbb
jns
jg
lock
pusha
mull
outsb
lcall
xchg
mov
ret
inc
ja
daa
push
mov
push
push
aad
pavgb
jb
mov
xchg
mov
outsl
push
push
movsb
ss
xchg
sub
cmc
ret
inc
sbb
push
xchg
adc
notl
sbb
mov
add
xlat
xor
or
mov
loop
rorl
pop
vxorps
shlb
in
daa
fwait
stc
ljmp
icebp
test
sbb
dec
push
cs
add
loopne
mov
push
out
jl
dec
gs
mov
imul
pop
jae
mov
in
mov
mov
lds
imull
aad
sbb
cltd
sub
fcmovne
out
jmp
jl
das
inc
stos
inc
scas
jg
es
add
push
and
stos
cmp
pop
fidivs
fistl
into
push
mov
stc
fsub
cmpsl
gs
insb
roll
xchg
stc
daa
inc
jl
jp
aad
pusha
add
mov
push
xlat
dec
cli
mov
push
sbb
movl
mov
dec
mov
iret
pop
cmc
cld
hlt
rclb
push
xor
cmp
mov
xor
ss
add
rcrb
scas
insb
out
sbb
pop
daa
bound
sbb
daa
aas
push
jnp
fcmovbe
rep
adc
and
inc
inc
leave
shlb
jle
inc
sbb
daa
adc
data16
js
ja
sti
shl
rorb
pcmpeqd
pop
and
cltd
fcoml
sarb
fsubrs
loope
lock
mov
sub
dec
out
neg
imul
nop
lds
mov
je
mov
inc
mov
push
lahf
lret
mov
jmp
mov
jo
out
cmp
call
xor
test
out
js
fwait
dec
daa
or
jle
push
stos
xchg
adc
iret
sbb
nop
jecxz
xor
pop
mov
popf
mov
and
xchg
jbe
mov
and
mov
cmp
and
cmc
inc
daa
test
inc
mov
cmpsl
mov
add
in
out
int
loopne
jo
repz
sbb
sbb
mov
js
fadds
push
push
mov
xchg
clc
std
cmpsb
mov
scas
rol
daa
int3
mov
push
lret
push
std
and
pushf
stos
ret
xor
sbb
inc
add
iret
jns
adc
jnp
lret
jecxz
xor
pop
cmc
andb
call
mov
push
testl
jno
into
in
xchg
push
mov
int3
cli
cmpsl
cmp
scas
ret
scas
jno
pop
mov
adc
jnp
vmwrite
jo
mov
push
shlb
and
rorl
jecxz
js
push
fistps
test
xlat
mov
jns
dec
mov
mov
aam
outsb
inc
push
sti
icebp
ret
cli
pop
negb
pop
call
repz
push
out
aaa
jae
and
in
adc
jge
aaa
or
in
push
mov
leave
scas
aam
mov
int3
lret
mov
scas
divl
pop
fadds
fldenv
sahf
fcompl
mov
sub
lret
pop
popf
sarl
jge
aam
call
sub
push
mov
pushf
mov
sahf
shl
hlt
dec
pop
sahf
jl
mov
out
cwtl
insl
mov
jae
inc
pop
push
or
sbb
test
mov
pusha
sbb
sbb
cld
icebp
lret
fcompl
push
push
lret
jne
dec
jno
stos
jecxz
inc
xchg
sti
sub
in
mov
sbb
mov
lods
pop
and
shl
push
lea
sahf
dec
xor
jne
xchg
adc
clc
pop
popf
ds
adc
mov
lahf
stos
inc
cmpsl
shrl
push
out
js
mov
pop
lea
arpl
cltd
fnstsw
lret
aaa
push
mov
les
xchg
divb
lahf
lret
xor
xor
push
add
add
fnstcw
rcrl
or
push
aaa
jnp
in
push
scas
or
fwait
movsl
xor
push
add
sbb
push
push
test
and
mov
jnp
push
or
fldt
push
rcrl
test
cmc
push
js
inc
inc
roll
dec
lret
jmp
mov
pushf
cwtl
inc
lahf
nop
mov
xorl
cmc
adc
lcall
in
cmp
adc
adc
popa
repnz
jns
repnz
mov
sub
int3
popa
inc
fadds
cmc
sbb
jae
and
cmp
push
push
jns
sbb
inc
aam
inc
test
shl
ja
clc
sbb
fwait
psubusw
jbe
insl
pop
jle
push
mov
cli
dec
fnstsw
lcall
xchg
cmp
pop
push
dec
inc
sti
dec
hlt
das
and
aad
pop
sti
or
xlat
cmp
fadd
cmpsl
add
lahf
and
mov
mov
push
or
xlat
xchg
rorl
mov
or
pop
adc
mov
in
mov
cmpsb
pop
jecxz
jg
push
xor
cmpsl
adc
cltd
fistpll
mov
pop
int
icebp
in
ror
cli
jno
jbe
outsl
xor
push
sti
lods
out
jl
pop
aam
inc
ret
mov
cs
test
adc
push
jecxz
fdivp
outsb
sti
push
out
pop
loopne
sub
sub
cmp
addr16
sbb
aad
cmp
sbb
and
js
in
push
cmp
xchg
mov
mov
shlb
cmp
frstor
xor
movsl
out
testl
and
sbb
mov
lret
jbe
hlt
mov
es
cmpsl
mov
lret
imul
stos
rcll
adc
sbb
sahf
stos
into
push
cmc
mov
test
mov
ud1
mov
cld
push
roll
cwtl
xchg
sbb
inc
rcr
sub
mov
inc
sbb
sbb
sbb
bound
mov
jnp
test
xchg
daa
out
xchg
jmp
movsl
pop
push
out
mov
outsb
pushf
sbb
test
out
out
pop
insb
sbb
je
fcoml
jno
js
mov
das
mov
out
xlat
daa
mov
aad
orb
jnp
mov
jns
in
push
sbb
int3
leave
cld
fstps
xchg
fs
in
mov
xchg
das
xor
addr16
sbb
jge
cmp
jl
mov
xlat
andb
cmpsl
or
sarl
mov
imul
fwait
test
jle
test
pop
mov
sbb
xchg
or
div
inc
push
je
inc
lcall
cmp
jle
imul
sbb
sub
cmpsl
jae
mov
inc
mov
inc
pusha
push
and
adc
mov
cmpsl
xchg
pop
imul
rcrl
cvtps2pi
or
ja
pop
dec
aad
cmp
inc
dec
xchg
ret
scas
mov
jbe
jl
mov
imul
shlb
int
jae
jecxz
rcrb
fisttpl
frstor
or
js
xor
addr16
fs
in
insb
cs
xor
dec
jns
int3
cmpsl
dec
lods
mov
aaa
mov
daa
fwait
clc
push
inc
jecxz
adc
shrl
in
and
push
std
jo
xchg
repnz
xchg
mov
pushl
notb
daa
mov
repnz
loop
mov
xchg
xor
cli
xchg
test
shl
lea
add
stc
cmp
xlat
stc
mov
mov
cmpsl
imul
stc
jp
jne
ljmp
xchg
popf
in
xchg
add
cmp
xchg
fisttpl
push
adc
and
mov
cmpsb
mov
push
push
push
std
aad
xchg
sar
ss
shl
daa
mov
aas
inc
sbb
mov
inc
lret
ds
mov
xor
jmp
out
cmpsb
cs
xor
popf
pushf
xchg
mov
push
adc
out
ficoml
and
jmp
sub
push
mov
adc
aad
cmpsl
sub
hlt
sarl
sbb
xchg
sahf
mov
leave
daa
in
jl
clc
cmp
and
inc
xchg
jnp
aad
pop
xchg
aaa
inc
testb
push
add
lret
mov
mov
mov
push
rorl
push
fistl
clc
fwait
stos
push
jnp
inc
cmc
js
lods
xchg
adcb
dec
xor
sarl
jb
jle
pop
cwtl
test
cmc
ficoml
loopne
mov
daa
sbb
or
stos
pop
jecxz
dec
pop
je
data16
outsl
ret
cmp
cs
mov
or
shll
fldt
gs
lods
mov
andl
xor
mov
dec
adc
inc
or
xchg
nop
ret
push
jae
push
push
push
sti
sahf
inc
mov
or
or
sbb
xchg
lds
outsl
gs
sbb
fisttpl
cltd
dec
push
dec
int
xor
sub
mov
addr16
std
cmpsl
aas
adc
jp
js
daa
imull
loop
pop
fiadds
arpl
pop
in
sbb
lock
adc
and
out
inc
insb
fisttpl
xor
sahf
sarb
add
pop
jae
push
or
inc
inc
inc
cmp
ljmp
sbb
out
stos
xor
test
or
push
repnz
fcom
fwait
adc
jne
xchg
test
dec
sbb
pusha
xchg
pusha
jg
pushl
nop
movsb
jp
push
push
cmc
imul
cmc
aam
jae
cmp
lds
fcmove
outsl
mov
mov
mov
jecxz
mov
jno
into
repz
xchg
rclb
out
adc
popa
bound
and
push
je
lods
pop
shl
cmpsb
xchg
cmc
xchg
arpl
jns
out
mov
daa
mov
add
xor
inc
fldcw
push
out
nop
lret
iret
sti
outsl
jno
add
rol
xor
sbb
faddl
ret
mov
daa
mov
push
ret
int
xchg
jg
push
jecxz
sarl
daa
jge
xchg
xchg
cmpsl
xlat
scas
aaa
xchg
xor
sbb
mov
rorl
into
mov
sbb
shlb
push
push
sub
mov
jnp
dec
fcoms
cmpsl
idivb
dec
daa
lret
dec
cli
fbstp
dec
fidivrs
add
fwait
dec
cmpsb
mov
fldt
popf
pop
not
rcll
push
sub
out
fwait
mov
aaa
dec
lods
jl
pop
dec
dec
or
or
nop
aad
pop
mov
xor
in
rcrl
jbe
pop
cwtl
xchg
lods
cmc
mov
daa
es
pop
or
xchg
aaa
cmp
lahf
ret
mov
add
xchg
sub
repnz
shr
popf
lock
adc
adc
dec
shl
out
jnp
push
mov
inc
pop
jle
adc
mov
daa
xorl
jle
mov
int
test
jle
out
sti
pop
lods
cld
clc
iret
jge
sbb
cmpsl
inc
out
mov
pop
fdiv
jne
or
sti
out
xor
js
xor
stos
push
mov
shll
js
push
ret
sub
or
sub
js
cmpsb
cli
mov
out
insb
out
cltd
in
xor
jmp
jge
pop
mov
ds
dec
push
fisttpl
das
lock
rclb
adc
cmp
shll
sti
push
lds
jo
in
negb
es
cmpsl
mov
xchg
pop
shll
int
cltd
clc
push
daa
sbb
shlb
push
xchg
push
shl
adc
inc
xchg
aam
popl
inc
lock
add
fcmove
cwtl
inc
mov
idiv
mov
fisubrl
sbb
divb
mov
dec
cmp
mov
test
lea
pop
stc
jb
xchg
jns
pop
push
xchg
aam
jge
rorl
sarb
or
pushf
mov
xchg
xchg
sbb
fsubrp
mov
notl
in
imull
cmp
into
notb
cltd
daa
sub
jae
clc
frstor
xor
fisubs
je
movsb
insb
shl
into
push
aam
pop
mov
test
cld
mov
cmp
xor
out
out
ss
and
jp
cmc
jg
cltd
adcl
movsl
cmp
cmpsl
mov
xlat
fs
rcrb
subb
repz
push
inc
in
jne
push
or
add
arpl
jb
mov
push
jecxz
and
mov
into
mov
or
xor
or
add
push
add
or
test
repz
push
in
jbe
cmp
cmp
pop
dec
mov
mov
mov
cmpsl
xchg
dec
roll
push
jmp
xchg
xchg
mov
jns
loopne
jne
fdivp
fwait
and
idivb
fdivr
adc
jae
cmp
les
out
xor
out
sbb
ja
test
je
push
sbb
push
pop
daa
dec
stc
cmpsl
cmpsl
jns
mov
sbb
test
jbe
push
pop
or
repnz
mov
inc
iret
int3
inc
rolb
mov
mov
jp
je
pop
mov
jae
push
mov
out
in
call
out
push
push
mov
scas
mov
xor
sbb
pusha
es
lret
cwtl
popf
insl
iret
inc
out
sbb
jle
mov
ja
lcall
shl
rcll
sub
push
xor
lahf
mov
mov
cmp
bound
jns
xor
mull
daa
jae
js
push
jge
imul
lret
push
adc
in
shl
cmp
pop
or
mov
mov
inc
jnp
loope
mov
lds
fists
add
cld
test
inc
imul
and
add
shll
jae
orb
xchg
inc
std
sahf
jae
pop
lods
ret
fnsave
adc
inc
lcall
movsb
es
lods
push
inc
out
in
sbb
in
in
jecxz
or
mov
jle
jo
push
jmp
fs
jl
jmp
pop
aaa
outsb
int3
xor
cmpsl
test
push
fistpl
movsb
shll
dec
xchg
xchg
cmp
insl
shll
xor
lods
or
rcrb
cs
pop
ret
addr16
mov
sbb
sti
jns
lds
ficoml
cmp
mov
xlat
or
jae
cmpsl
push
adc
int3
test
xchg
lds
mov
out
push
jmp
or
cmp
inc
nop
mov
repz
decl
shlb
xchg
push
js
ret
call
mov
inc
mov
es
jbe
xchg
and
adc
dec
nop
sub
pushf
cli
sti
sbb
fwait
inc
jne
fwait
cmpsl
pop
sbb
mov
aas
push
ds
jb
pop
shl
mov
jp
adc
idivb
mov
loop
lahf
mov
jns
cmp
jb
sbb
push
mov
lahf
and
mov
xorb
fsts
fadds
daa
mov
adc
out
mov
mov
loope
test
push
push
xor
xchg
inc
sbb
mov
popf
imul
fidivl
jns
mov
lret
jp
sbb
rol
pop
std
xchg
cltd
pop
cmp
cmp
int
mov
push
xchg
in
jle
sbb
rcll
and
adc
ds
mov
and
inc
mov
cmpsb
fcmovbe
dec
movsb
rorl
pop
cmp
out
pop
daa
add
push
rcr
dec
popf
movsb
int3
test
movsl
popf
test
adc
neg
fsubs
and
mov
sbb
jno
lcall
cmp
ja
cltd
into
mov
fnsetpm(287
sti
out
push
aas
ret
ret
inc
sbb
push
adc
int
jb
sbb
pop
jns
jb
stos
adc
test
push
loopne
sub
repnz
mov
or
jnp
xlat
mov
shll
mov
cmp
ret
sub
repz
call
dec
fbstp
cmpl
mov
pop
inc
aam
sahf
adc
mov
pop
fnstcw
pop
outsl
push
imull
jae
push
jg
sub
popf
mov
les
addb
imul
inc
pop
pop
jbe
jle
fwait
dec
inc
dec
out
pop
xchg
cwtl
push
mov
cwtl
adc
fisttpll
bound
or
dec
std
xor
sbb
mov
and
js
sbb
cmp
mov
cmpsl
mov
jl
sbb
int3
mov
mov
dec
fs
stos
int3
push
int
mov
jbe
xchg
mov
push
vpcmpeqw
pop
test
lret
es
sub
push
jno
jbe
das
shr
clc
aaa
int
sahf
dec
les
mov
cmpsl
jo
subb
pop
and
imul
int3
push
cmp
fs
popf
in
iret
sti
adc
jmp
lahf
mov
cmp
add
sbb
mov
mov
push
pop
sub
mov
arpl
jge
cmp
out
repz
pop
lods
or
out
adc
or
aaa
bnd
arpl
rcrl
pop
aad
lahf
sar
cmpsl
and
imul
pop
popf
addl
out
dec
hlt
lds
fwait
mov
fdiv
lcall
mov
aad
lret
adc
cmp
xchg
pushf
scas
into
lahf
sti
int3
push
cltd
push
xor
and
mov
lcall
fbld
pop
adc
daa
xchg
ret
jecxz
xor
arpl
inc
xchg
or
fcomi
xor
mov
mov
inc
cmp
push
rorb
adcb
cmpsb
push
add
push
iret
into
aam
sahf
scas
or
mov
sbb
xlat
lock
in
jne
aaa
test
fsub
push
test
ss
std
lret
movsl
mov
xchg
push
mov
decl
scas
pop
and
lcall
mov
cmc
sbb
mov
ja
cld
int3
push
std
test
inc
aad
mov
lret
and
sti
andl
mov
and
xrelease
pop
rcrb
fmuls
jne
fbld
fsubl
ljmp
aas
jmp
inc
adc
pushl
and
xchg
jb
inc
mov
rcrb
add
inc
in
loop
mov
out
cmp
cmpsl
movb
xchg
mov
stc
cli
and
fwait
dec
je
fldcw
xchg
jo
lods
ret
cmpsl
jecxz
cmp
shl
adc
rol
cmpsb
cltd
stos
xchg
pop
jmp
sub
leave
incl
jecxz
lds
testb
std
sar
aas
jne
fstl
mov
mov
jae
mov
adc
loope
pushf
loop
imul
decl
mov
nop
testl
mov
jbe
popf
out
fcomps
faddp
shl
inc
test
cmp
lret
inc
out
jle
push
ds
mov
jns
sbb
cmpsl
mov
popl
iret
movsl
dec
repz
pop
push
mov
in
icebp
repz
sbb
out
add
dec
sub
daa
lock
cwtl
push
mov
mov
cltd
xchg
scas
jns
xchg
mov
es
in
fidivrs
push
repz
xor
loop
sub
sbbl
shl
push
cmp
call
daa
cmpsl
aaa
sub
mov
xor
xor
mov
out
mov
add
adc
jge
push
push
and
sbb
out
addr16
inc
xchg
pop
adcl
mov
mov
pop
push
into
loopne
shlb
pop
cmc
adc
xchg
pop
cmp
js
xchg
mov
push
cmpsb
jne
rolb
push
mov
mov
andl
jnp
sahf
mov
inc
ret
mov
fbld
jg
in
jno
or
hlt
xchg
in
adc
movsl
int3
ja
adc
imul
and
push
out
std
push
sbb
int
aaa
mov
fiaddl
cld
sub
sub
test
pop
cmp
jecxz
enter
xlat
jo
rclb
push
js
fidivs
pusha
or
xchg
mov
int3
inc
mov
insb
inc
mov
cmp
cmpsl
or
bts
sub
pusha
mov
ror
sbb
iret
or
xor
inc
or
adc
inc
jbe
adc
pushf
xlat
pop
push
or
push
cmp
cmp
fcompl
inc
sti
pop
mov
rorl
stos
mov
push
cmp
imul
arpl
shll
iret
xchg
dec
cmp
jae
insl
scas
jae
or
xor
fisttpl
push
adc
push
mov
cmpb
push
ret
lods
sbb
daa
jne
out
stos
jae
inc
cmp
xor
mov
daa
dec
fisubl
sar
mov
cmpsl
das
xor
jae
mov
pop
fimuls
push
imul
mov
jns
and
ror
and
sbb
test
mov
add
cmp
mov
out
sti
shll
sahf
repz
or
pop
shll
xchg
call
sarl
loop
mov
cmpsl
es
mov
arpl
jno
xchg
ret
outsl
pop
sbb
negb
lock
js
daa
out
sub
mov
das
push
sbb
outsl
div
cld
mov
jp
xchg
or
add
inc
mov
jbe
sbb
mov
jo
mov
aad
jecxz
cli
or
leave
jo
xchg
xchg
inc
aaa
mov
aas
gs
daa
add
sbb
adc
icebp
lret
repz
mov
sbbl
pavgb
in
mov
movsl
xchg
dec
aaa
outsb
push
fwait
mov
fnstenv
dec
push
sub
fs
scas
fistps
xchg
mov
imul
dec
dec
fs
int3
daa
movb
inc
inc
push
sub
fs
mov
add
and
fcmovbe
popf
test
jg
fwait
pop
out
or
mov
cmpsb
mov
icebp
repz
das
push
inc
aam
mov
loop
jae
ret
int3
repz
popa
shlb
in
lret
push
dec
pop
pop
pop
ret
jge
cltd
leave
mov
bound
sarl
pop
push
jno
call
inc
scas
inc
pop
xor
sub
sbb
dec
pop
pop
fwait
daa
ss
popf
inc
test
adc
ret
add
shlb
or
adc
dec
xchg
add
push
inc
cmp
loop
cmp
cmc
xchg
dec
das
in
in
cmpl
fwait
adc
aad
int3
out
je
roll
mov
loopne
adc
test
popf
xchg
rcll
loop
daa
xor
mov
in
ja
scas
sub
neg
add
fsub
inc
repnz
movsb
insb
out
mov
add
adc
mov
shlb
xchg
shlb
out
mov
sbb
cli
andl
out
inc
in
push
inc
jbe
loopne
lods
data16
mov
xlat
xchg
push
pop
add
popf
inc
add
repz
xor
sub
repz
ret
jg
ror
and
bound
imul
jne
notb
paddq
jmp
or
jecxz
sub
fninit
mov
inc
sub
dec
daa
cwtl
inc
adc
jmp
push
sbb
inc
out
repnz
cld
inc
cmc
jns
lcall
xchg
aam
stc
inc
fcompl
pop
push
xor
push
hlt
call
into
addr16
rcll
mov
movsl
faddl
inc
inc
ror
jge
mov
sbb
dec
outsl
ss
fwait
mov
stos
jle
adc
xor
loope
cmp
sub
xor
ret
pop
je
add
xchg
cmp
xchg
xorb
mov
mov
ret
inc
aad
sub
daa
cmp
popf
cmp
adc
cltd
push
das
cmp
mov
lods
sbb
jecxz
mov
lahf
jecxz,pt
xor
pop
sub
dec
push
cmp
jecxz
mov
add
inc
push
sub
xor
les
mov
aam
cli
and
pop
adc
imull
add
loope
or
ja
pop
cmp
cmpsl
insb
xor
pop
cmc
rcrb
lcall
mov
std
ror
jl
gs
flds
out
mov
loope
lahf
ja
lds
les
xor
loopne
rorb
mov
in
cmc
jnp
adc
jnp
mov
cmp
aas
pop
push
cld
lods
cmpsl
xchg
jp
iret
cltd
inc
jae
lock
cmpsb
ret
mov
dec
mov
xor
fists
adc
jne
dec
dec
jp
jecxz
popf
test
das
lock
mov
in
adc
pop
cmc
jae
ret
xlat
xchg
push
outsl
pop
xchg
xor
sti
outsb
out
into
mov
xor
mov
rcr
dec
jp
inc
ret
cmp
out
std
imul
mov
inc
lahf
rorl
mov
clc
and
aad
mov
jo
rcrl
xlat
out
jmp
into
inc
cmovg
sbb
sub
pop
rcr
and
in
das
inc
mov
push
add
out
adc
std
jg
test
sarb
mov
int3
mov
aad
and
jb
les
stos
loop
push
loopne
jp
pop
jb
ja
repnz
xor
mov
xlat
std
lds
ja
push
ds
and
fsubs
mov
scas
inc
pop
cli
inc
dec
repz
cli
aas
je
mov
mov
xlat
push
mov
pop
and
lret
subb
xor
stos
push
out
je
daa
adc
cmp
lock
shrl
cmpsl
out
mov
rcl
mov
mov
cwtl
cwtl
push
repz
push
push
add
push
cmp
ret
pop
loop
daa
fstpl
pop
loop
addb
ret
pop
js
add
movsb
mov
arpl
negl
sub
aad
in
mov
push
mov
sub
sbb
outsl
push
scas
rcll
xor
into
mov
jno
out
lcall
xchg
adc
jne
jp
mov
clc
sub
sbb
adc
icebp
push
pop
les
rolb
ja
in
inc
mov
jp
rcll
repnz
lret
jo
xchg
adc
roll
or
xchg
xchg
cmp
xor
adc
int
dec
adc
jp
inc
movsb
repz
ret
sarb
push
out
mov
xchg
iret
or
jb
out
pop
jo
inc
stc
imulb
mov
out
dec
gs
test
fisubl
xor
rclb
jl
sub
inc
push
lret
outsb
daa
mov
mov
inc
xchg
loope
adc
daa
sti
mov
decl
test
mov
sbb
jge
cwtl
mov
mov
mov
notb
scas
fwait
or
push
inc
repz
stc
shl
outsb
adc
and
add
pop
mov
sbb
daa
orb
fs
and
mov
push
mov
push
fwait
mov
push
xchg
movsl
mov
lods
pop
or
ret
jbe
cmp
adc
or
das
fistl
test
push
mov
test
pop
cmpsl
outsl
loopne
inc
int
cmp
insl
je
fisubl
pop
cmc
sbb
dec
fidivl
mov
stos
pop
lcall
cmpsl
in
xor
push
je
sub
jecxz
or
repz
lahf
mov
or
jge
movsb
cwtl
cmp
daa
mov
lods
mov
out
xor
idivb
clc
push
mov
inc
push
fistl
shrb
push
sbb
ljmp
push
ljmp
push
pop
push
jne
xor
out
pop
adc
xor
xor
cli
loop
push
xor
or
ret
mov
sub
hlt
sbb
fcoms
ret
cld
push
xchg
mov
xor
sahf
rclb
cmc
daa
xor
sub
mov
js
test
jecxz
mov
fnstcw
addr16
cmpsl
aaa
lds
push
sbb
daa
push
adc
cmp
shl
je
test
shrl
xchg
je
push
or
mov
cmpb
sbb
jo
mov
test
jbe
mov
push
sub
aas
int
jecxz
xchg
or
sarb
dec
push
out
aad
sbbl
jle
rorl
test
montmul
cmpsb
test
lock
shlb
cmp
stos
iret
inc
push
pop
call
notb
lcall
add
repz
sbb
mov
jl
cmp
adc
and
push
out
push
add
mov
cld
fptan
push
stc
test
iret
lret
sub
push
rorl
push
lcall
xchg
and
push
push
test
cmpsb
fsub
ret
nop
mov
pop
daa
inc
enter
aas
leave
mov
adc
jmp
push
out
insl
mov
jbe
xlat
mov
fwait
stc
les
push
inc
mov
push
imul
sbb
push
dec
repz
popf
shl
push
inc
pop
mov
sbbb
inc
lods
mov
scas
push
icebp
jl
les
lcall
xchg
hlt
pop
pushf
imul
push
addr16
js
push
popf
test
fimull
std
andl
add
pop
dec
call
mov
daa
in
push
ret
add
js
lret
icebp
sbb
and
jne
daa
pop
lock
jne
popa
cmp
fists
ja
push
dec
adc
cmpsb
xchg
ret
inc
jbe
jae
repz
js
dec
cmp
adc
push
ds
out
jl
inc
subb
stc
jne
cmpsl
cmp
lret
dec
inc
xchg
dec
ds
xchg
jecxz
mov
jo
ficompl
fs
subl
pop
push
pop
pop
sub
xchg
xchg
and
fwait
out
xchg
sbb
shlb
cmpsl
mov
fs
pop
jmp
ret
push
fstl
sar
push
dec
push
rcr
mov
push
daa
cli
jbe
inc
lcall
or
sub
out
mov
mov
loope
cld
dec
aad
stc
pop
fwait
sti
jecxz
popf
sbb
bswap
and
pop
and
stos
fmul
negb
cmp
stos
insl
inc
jp
pop
or
pop
push
fildll
inc
jle
shll
jnp
aas
lahf
mov
adc
push
fwait
popf
aas
sub
inc
jle
or
imul
inc
imulb
mov
in
inc
sti
ret
cmp
int3
and
adc
aad
aad
hlt
cltd
mov
cmpsl
ljmp
add
int
lock
jbe
in
jo
or
lcall
lret
lret
pop
inc
push
or
mov
sbb
dec
fwait
sbb
jp
mov
lret
jecxz
popf
and
fisubl
data16
stos
jne
mov
les
dec
push
xchg
loop,pt
mov
out
fiaddl
jecxz
cmp
cmp
cs
mov
jo
out
dec
in
pop
div
stos
pop
pop
jae
ja
push
outsl
dec
pop
out
mov
fld
mov
push
mov
inc
push
sub
int
fists
xchg
mov
loope
loopne
mov
sub
inc
mov
dec
popa
inc
push
aad
mov
xchg
push
cmp
daa
mov
lock
aaa
push
ret
popf
daa
sbb
ljmp
aad
pop
lds
push
xchg
pop
dec
repnz
cmpsl
stc
ret
sbbb
or
into
pop
enter
lahf
jns
sub
xor
sub
outsl
rcl
sub
stc
push
into
cli
cli
fidivrs
inc
mov
stc
cwtl
xor
or
adc
mov
popf
rcll
pushf
mov
jecxz
jnp
and
inc
xchg
test
js
jns
or
dec
cmpsb
aad
push
sti
daa
into
mov
xorl
push
adc
pop
in
dec
rorl
mov
and
lret
or
mov
icebp
push
xchg
mov
sub
outsl
jbe
xor
js
jb
push
inc
scas
xchg
cmpsl
dec
mov
xchg
push
dec
outsl
pop
movb
out
insb
not
pop
dec
push
movsb
loop
bound
sbb
and
mov
fwait
jle
pop
pop
scas
push
insl
xchg
lods
push
pusha
arpl
ffreep
rcl
cli
cmpsl
or
or
iret
mov
push
adc
dec
fldenv
and
mov
fisubl
jg
pop
add
mov
cwtl
jnp
mov
mov
lret
out
stos
lret
push
aad
or
mov
mov
out
dec
popaw
pop
mov
int
jne
adc
inc
mov
cmp
mov
out
adc
aas
mov
test
lret
out
push
mov
mov
aas
mov
es
aas
xchg
inc
pop
cmp
lret
push
sub
xchg
js
ja
mov
jb
fstps
adc
sub
das
insl
inc
mov
mov
mov
xchg
daa
cmpsb
xor
mov
sahf
test
mov
adc
in
push
add
nop
aas
fwait
sbb
sbb
and
mov
pop
dec
sub
jecxz
int
cmpsb
scas
outsl
adc
int
mov
test
imulb
cmp
push
loope
or
outsl
cmc
testb
andl
rcl
mov
push
push
add
xor
outsl
addb
cld
xlat
or
push
mov
lock
inc
jbe
repz
jecxz
inc
pop
jle
and
push
xchg
push
stos
push
cmp
out
xchg
in
es
cmp
popa
not
fwait
mov
mov
loope
xchg
jns
push
out
les
add
mov
xchg
rcl
pop
jnp
lds
mov
or
inc
not
popl
push
push
pop
cvtps2pi
int3
ret
stc
push
add
loopne
jmp
mov
out
movsl
sbb
scas
jo
cmpsl
adc
shll
mov
jnp
fcmovb
shrl
xchg
mov
pusha
cld
lods
orl
add
repz
repz
repz
daa
in
loop
and
xor
fisubl
pusha
pop
shll
cmp
pop
movsb
repz
scas
sub
daa
mov
loope
mov
les
cmp
add
scas
xchg
test
sbbl
sub
push
out
xchg
jmp
mov
inc
lahf
addr16
pop
and
mov
mov
fstl
push
lock
scas
adc
xlat
sti
jnp
or
shlb
pop
fidivrl
loop
lods
fwait
loop
jp
jnp
outsl
jle
adc
inc
add
jmp
sbb
sub
jecxz
fcomp
mov
fwait
pop
jge
loopne
push
daa
cli
js
xor
int
push
inc
cld
sub
lret
cmpsb
ss
push
aad
mov
adc
cmp
leave
or
adc
movsl
mov
repnz
inc
xor
mov
pop
inc
push
les
jno
add
in
xchg
and
sbb
aas
dec
out
pop
les
xor
fidivs
sbb
mov
into
push
sub
call
les
fsts
sub
sub
jecxz
jb
ret
xlat
lds
mov
inc
jecxz
jl
scas
mov
andl
push
pop
cmp
fimull
sar
fs
fisttps
inc
sbb
add
push
daa
xor
adc
shl
and
or
adc
mov
inc
adc
push
aaa
cli
mov
lock
xchg
test
mov
hlt
sbb
daa
cmp
and
lds
mov
stos
jnp
aad
scas
imul
mov
leave
call
clc
sbb
cmp
movsb
xor
sar
int3
test
fwait
push
movsl
scas
cmp
mov
lock
mov
scas
xchg
repz
stc
jecxz
sbb
repz
cmc
popa
xchg
jnp
test
sbb
add
popf
vsqrtpd
ret
clc
aad
and
ffree
xor
mov
shlb
add
lea
add
xchg
mov
iret
js
sbb
add
rcl
out
xchg
jae
jge
adc
loopne
movsb
ret
iret
xchg
xchg
repnz
cmp
cmpsl
scas
aas
jbe
test
repz
out
pushf
xor
outsl
in
xchg
in
sbb
insl
repnz
frstor
cmp
pop
rorb
adc
mov
sbb
jmp
repnz
mov
cwtl
lds
mov
and
test
insl
sbb
aam
mov
inc
in
cmpb
jp
in
jmp
imul
daa
addl
inc
add
sbb
lret
add
inc
push
hlt
int
mov
mov
gs
pop
adc
aas
dec
mov
pop
or
popf
call
xchg
fwait
push
daa
sbb
or
mov
cmpsl
inc
xor
dec
mov
mov
ficompl
jmp
cmp
xchg
mov
iret
push
and
sbb
ss
sbb
lret
mov
or
outsb
jg
sbb
push
push
ja
pop
data16
ja
test
mov
stc
icebp
lret
jbe
aam
repnz
xor
out
mov
mov
dec
add
mov
fbld
cltd
repnz
clc
cwtl
jmp
ficoml
push
imul
or
adc
mov
sbb
add
stos
repz
push
mov
in
inc
mov
jb
sti
mov
and
hlt
cmp
pop
fsqrt
ss
vhsubpd
clc
xchg
mov
div
mov
lahf
sbb
sbb
mov
sbb
scas
or
and
call
dec
xor
xorb
add
lods
mov
mov
stc
inc
fs
icebp
mov
or
psubd
rorl
ret
xchg
in
add
cmpsl
sbb
popa
push
add
sub
lock
loop
mov
mov
sbbl
rcl
out
scas
mov
or
icebp
cwtl
inc
dec
cmc
cmp
and
xchg
and
or
jle
arpl
loopne
bound
out
sti
mov
xor
or
sarb
sbb
out
sub
cmpsb
adc
push
sbb
pop
leave
sbb
movsl
loopne
dec
pop
mov
shll
or
xchg
out
in
or
rorl
scas
push
test
adc
push
mov
popf
ficomps
cltd
fwait
pop
iret
push
cltd
cld
lods
pop
addr16
les
loop
insb
jmp
jbe
or
jnp
xchg
inc
fldenv
cwtl
pop
sbb
adc
push
jno
mov
ror
repnz
int3
shl
push
lods
insl
cmpsb
push
mov
enter
cs
adc
inc
fisubs
sahf
mov
popf
mov
push
shll
xor
shrl
inc
jne
jo
test
cmpsl
int
and
icebp
cmpsl
mov
movsl
xor
pop
push
xorb
ljmp
loopne
sub
push
xchg
and
pop
or
jle
sbb
cmp
aaa
push
sub
and
cmpsl
leave
fstpt
fildll
mov
sub
xor
in
out
or
hlt
xor
popa
fcomps
push
sbb
lcall
and
int3
jb
dec
push
insb
jge
inc
pop
mov
repnz
int
cmpsl
addr16
mov
test
mov
jne
ja
push
xlat
ret
in
cmp
and
das
cmpsl
ss
adc
sbb
scas
dec
cwtl
mov
pop
int3
stos
adc
mov
hlt
int
xchg
data16
jecxz
insl
inc
mov
lods
mov
movsb
je
sti
scas
repz
dec
testb
loope
xchg
mov
pop
sub
sti
fistps
fucomip
popf
push
outsb
daa
fldt
pop
pop
popl
xchg
je
push
movsl
incl
xchg
mov
fcmovbe
int3
push
adc
dec
lods
aaa
enter
cmp
dec
lods
imul
lods
rcll
stos
xor
out
fmuls
mov
fcompl
add
repnz
pop
jp,pt
and
cmp
fsubrl
inc
jo
cmpsl
sbb
fwait
or
fidivrl
test
pop
push
shll
enter
add
subl
out
pop
jecxz
mov
ja
stc
xchg
movsb
mov
or
ss
or
lret
sub
mov
jae
loope,pn
jge
test
jbe
cmpsb
ret
jle
inc
aam
out
add
jmp
mov
and
push
movsl
push
imulb
ja
mov
jae
dec
sub
mov
es
sarb
push
adc
in
push
clc
fiaddl
lock
xchg
aad
loopne
cmp
fildl
fisttpll
cmp
and
icebp
das
flds
sub
leave
js
stos
xorl
push
sahf
push
jb
nop
jbe
fsubs
pushf
cmp
adc
jne
out
fmull
mov
hlt
hlt
adc
jmp
pop
stos
mov
test
cmp
push
ret
repnz
and
aas
cmp
sub
sbb
mov
fidivl
daa
pop
xorl
pop
mov
subb
or
in
or
outsb
push
xchg
fistps
mov
stos
in
push
js,pn
sub
cmpsl
inc
add
mov
inc
pop
mov
xlat
pop
cmp
insb
aas
xor
imul
les
cmp
clc
ficompl
xor
mov
mov
push
rcl
mov
test
cmc
das
daa
rcrb
pop
and
jb
mov
je
jecxz
movsl
push
inc
pop
lods
daa
mov
xchg
adc
loope
push
inc
gs
xchg
ret
push
jl
popa
insl
in
orl
pop
inc
lods
or
iret
out
jg
lahf
in
pop
cmp
hlt
fwait
mov
das
xchg
xor
add
mov
sub
rcr
fildl
shll
inc
lods
xchg
push
test
pop
mov
mov
data16
jnp
popa
mov
adc
xchg
cmpsb
loop
mov
pop
dec
xchg
mov
push
sub
aam
pop
push
mov
inc
mov
out
or
xorb
cmp
cmpsl
xchg
adc
mov
sbb
sub
sbb
mov
ja
pop
mov
fadds
rcrl
adc
and
dec
mov
sub
imul
inc
aam
inc
pop
xchg
fistl
aas
lea
mov
sbb
jp
inc
pusha
xchg
int
mov
divb
inc
sahf
add
sbb
js
icebp
test
out
jg
mov
mov
imul
sub
testl
daa
aas
jmp
ljmp
xor
fnstcw
stos
fidivs
call
adc
push
rcr
and
or
stos
pop
mov
xchg
imul
scas
dec
sub
sub
shl
pop
sub
pop
pop
jp,pt
or
dec
popf
js
mov
jecxz
lds
push
mov
icebp
insb
mov
pop
xchg
ds
push
pushf
xor
pop
mov
mov
mov
mov
mov
lods
nop
je
mov
loopne,pn
xchg
daa
adc
sub
fsubl
stc
xchg
pop
mov
es
xchg
push
pop
clc
cmpsl
cld
test
xchg
jb
ret
pop
lahf
in
sarl
xchg
mov
and
xchg
jp
pop
clc
pop
xchg
inc
daa
pop
aam
fldcw
push
xchg
hlt
push
cmpl
std
aam
add
les
mov
cmp
lods
hlt
add
lcall
loopne
repz
mov
popa
fs
leave
jp
icebp
add
pop
repnz
call
dec
xor
insb
repz
movb
cmpsl
mov
mov
adc
sahf
negl
mov
mov
pusha
inc
subl
test
xchg
repnz
cmc
cmc
sbb
push
subl
xchg
test
scas
dec
rol
sub
js
cwtl
xor
sbb
push
ja
sbbb
push
inc
sub
ret
sbb
rolb
jmp
out
cmc
dec
sbb
dec
rcrl
pop
cmp
xlat
popf
jmp
fists
lea
imul
testb
arpl
xchg
and
xchg
and
sbb
push
push
dec
fld
sti
movsb
mov
fistl
inc
jno
and
jb
inc
daa
xlat
push
sbb
push
cmp
data16
clc
loopne
mov
je
outsl
mov
pop
push
mov
scas
cmpsl
mov
jmp
add
mov
mov
push
ss
popa
xchg
cmp
fwait
push
jae
cmp
fimuls
data16
sbb
fldenv
sub
pusha
addr16
jnp
ss
fistl
push
xchg
scas
inc
inc
int3
fwait
push
aad
pushf
adc
clc
inc
in
int3
and
jg
les
daa
test
inc
pop
scas
inc
xchg
inc
mov
xchg
push
mov
xchg
sbb
mov
cmp
test
jmp
rcl
mov
jecxz
repnz
xchg
fists
cmpsl
sbb
clc
jb
mov
jns
mov
cld
push
ja
stc
scas
les
jp
gs
mov
cltd
pop
loope
loope
mov
cli
sub
ljmp
std
dec
ljmp
cmpsb
xor
loop
daa
imul
pop
cmp
jnp
dec
pusha
add
jp
gs
mov
call
pop
roll
lahf
sub
ljmp
push
daa
jns
lea
xlat
fidivrs
sbb
stos
jp
cmpsl
inc
pop
std
ljmp
push
cmc
insl
pop
out
arpl
outsl
jle
call
fadd
sub
mov
mov
cmc
jl
shl
dec
mov
jno
sbb
sub
adc
jne
pop
shlb
leave
in
dec
mov
pop
daa
sbb
xor
adc
in
stc
and
icebp
push
imul
sbb
cmp
jl
pop
repz
mov
decb
lods
cmp
pop
pop
cmp
jmp
mov
ret
sbb
ret
sbb
and
pop
daa
sub
mov
dec
aad
addr16
jnp
pop
adc
sub
call
add
pop
add
cmpsl
xchg
aaa
adc
xor
cmpsb
mov
scas
inc
sbb
push
cli
push
pop
cmp
cmpsl
das
cmp
xchg
cmp
sub
lret
jl
rcll
add
mov
and
in
daa
sbb
mov
pusha
hlt
ja
xor
decl
loopne
bnd
pop
xchg
aad
push
out
jne
hlt
adc
leave
push
push
and
and
in
iret
ss
in
adc
daa
jl
xchg
mov
stos
scas
jmp
add
adc
xor
cltd
pop
or
jae
dec
fdivrs
inc
shrl
mov
mov
out
jo
pop
mov
mov
sub
shrl
popf
or
cmp
jb
ds
aaa
xor
orb
mull
mov
push
sub
lods
roll
into
mov
int
pop
xorb
sahf
ficompl
lcall
lods
xchg
icebp
xchg
or
sub
lock
inc
mov
pop
out
add
pop
into
cmp
ja
sub
pop
fnstenv
xchg
lock
ffreep
mov
sub
lods
ret
das
xchg
jno
test
push
mov
push
mov
jae
fs
int3
imul
push
inc
out
fldt
sti
mov
cmpsl
bound
out
sub
fidivrl
sub
inc
aaa
pop
test
mov
pop
add
outsb
ficompl
xchg
out
xchg
aas
repz
add
in
fisubl
push
mov
and
and
dec
fwait
popf
sub
rcrl
push
in
ss
mov
xor
inc
pop
rorl
or
xchg
jecxz
addl
dec
test
cmp
mov
out
mov
jge
mov
inc
rol
xchg
push
sbb
mov
sub
movsb
clc
lods
push
adc
xor
fisubl
sbbb
js
adc
popf
or
fwait
scas
shlb
jg
add
inc
out
out
paddsw
fbld
xchg
cmpsl
inc
jle
jg
lcall
add
push
add
pop
sbb
jbe
loopne
std
push
mov
pop
or
fld
in
out
mov
idiv
push
or
fwait
addr16
lds
subl
out
inc
outsl
dec
sbb
mov
pop
adc
xchg
imul
out
cmc
mov
push
xchg
call
pop
mov
sahf
mov
cmpsl
outsb
jp
daa
sbb
dec
movsl
xlat
mov
cmpsb
push
jp
push
hlt
cmp
dec
jge
pop
cmp
in
add
repnz
js
lcall
mov
adc
inc
pop
flds
mov
fidivrl
rcll
arpl
xor
cmp
mov
xchg
stc
cltd
int3
ljmp
mov
or
sti
sbb
xchg
shll
cmpsl
sub
jle
pop
lods
shl
daa
icebp
sti
xchg
movsb
mov
inc
repnz
js
imull
std
fistl
or
test
in
lret
js
adc
push
aam
push
xor
cli
aam
add
ret
push
cli
les
test
add
in
leave
jmp
pop
xchg
and
fcompl
add
cmp
aam
mov
mov
test
jb
fwait
xor
pusha
out
pushl
sub
pop
xlat
negl
jmp
rcrb
mov
adc
mov
clc
inc
push
xor
pop
cmp
mov
push
fcoms
dec
fwait
mov
iret
pop
cmp
mov
fwait
cmp
mov
testb
ss
dec
movl
adc
aaa
pop
lahf
push
aas
lret
or
dec
jnp
rorl
daa
leave
aad
bound
push
into
les
xor
pop
xchg
pushf
sub
push
or
xchg
pop
jae
fldcw
xchg
loopne
arpl
jmp
mov
pop
cmc
jns
pop
out
jle
mov
xchg
inc
cmp
shr
inc
fwait
data16
sub
push
shll
mov
rcl
lods
dec
cmpsb
jp
sub
hlt
or
jg
rcrl
jae
mov
mov
cmp
mov
cmpsl
push
cmp
stc
cmc
inc
adc
mov
sbb
jecxz
ds
cwtl
inc
mov
mov
dec
fcomip
fwait
jns
xchg
mov
jmp
loop
sahf
daa
std
test
js
out
out
push
or
sti
aad
and
jl
mov
jns
pop
scas
adc
js
daa
push
mov
jno
cmpsl
rcll
jge
data16
lods
mov
xor
popf
lds
xchg
addb
push
and
popa
mov
dec
mov
cld
jo
aaa
xchg
pop
call
jno
test
push
pop
hlt
or
out
rcr
xor
popf
movlps
xlat
adc
push
out
dec
add
clc
jns
and
pop
mov
repz
xor
add
mov
jnp
imul
jne
test
sub
xor
ja
lret
xor
rcl
je
imul
pushf
adcb
inc
jb
push
adc
or
add
mov
inc
adc
and
stc
inc
add
xlat
jmp
das
dec
push
sbb
iret
or
jp
sub
subb
stos
inc
push
cmpsl
stos
xchg
out
jp
aas
sbb
mov
movsb
repnz
inc
shl
lock
mov
adc
xor
pusha
pop
cmpsl
xchg
test
cli
scas
out
insb
jbe
mov
cmpl
push
sub
cmc
and
lcall
mov
loop
test
in
loope
loopne
cld
lret
jae
cmp
out
js
jp
adcl
xchg
icebp
daa
jns
aaa
movsl
ret
in
add
push
cltd
aad
fildl
pop
cmpsl
pop
xchg
jl
adcb
or
fmull
std
aaa
ljmp
cld
mov
data16
out
out
add
push
daa
or
fsubl
dec
call
xor
mov
xor
mov
fwait
mov
dec
mov
dec
adc
leave
lcall
lods
fnstenv
ret
popa
fs
pop
sub
repz
pop
lahf
sbb
cmpsl
shll
adc
inc
or
cmp
rcll
data16
cld
adc
loopne
mov
mov
push
or
or
push
es
add
jge
outsb
jno
push
pop
mov
ret
ja
fcoml
jnp
cli
mov
daa
cmpl
xchg
in
rolb
mov
and
inc
ljmp
cmp
es
xchg
aaa
out
and
inc
lcall
jae
fidivl
je
dec
rol
rcrl
mov
ljmp
cmp
mov
dec
cld
mov
xchg
sbb
pop
pop
daa
cmp
movsb
sbb
pop
fsubrs
ret
lock
or
mov
cmpsl
ret
rep
push
sbb
daa
jo
fabs
push
in
xlat
lea
inc
push
roll
int
mov
dec
iret
jae
js
rcll
cmp
sub
cmpsl
xchg
or
jecxz
push
leave
push
cmpsl
jbe
cmpsb
sub
sub
jnp
jae
ret
sahf
das
sbb
outsb
cli
popf
test
or
fs
rcll
mov
sub
jno
js
test
adcl
aam
xchg
adc
push
in
sbbb
inc
push
ljmp
adc
push
adc
xchg
pop
in
movsl
pop
fsub
loope
push
loop
xchg
sbb
xchg
gs
jno
jbe
stos
mov
jns
cmp
jnp
push
fistpll
sbb
insb
add
push
shl
nop
aaa
leave
cmpsb
cld
xor
mov
dec
jp
cmpsl
pop
stos
xorb
imul
add
xlat
repz
ss
insl
test
cmc
push
jns
xchg
aaa
sti
call
clc
cmpsl
push
pop
push
add
enter
cltd
pop
xchg
mov
xorb
sbb
jbe
mov
fisubl
mulb
rorb
sub
sub
pop
sbb
fdivs
jae
pop
sbbl
cmp
dec
insl
mov
cli
int
xor
inc
jg
mov
sub
adc
mov
in
push
mov
in
xorl
jae
int
mov
lret
popf
xchg
add
andl
fidivrl
add
mov
fldcw
push
inc
insb
sahf
ljmp
add
inc
cmpsl
mov
xchg
hlt
inc
and
repnz
and
cmp
pop
sbb
popf
sbb
jg
data16
mov
cmpsl
pop
mov
xor
xor
xchg
sbb
ret
addr16
ret
jae
loope
jmp
fwait
or
fistps
sbb
out
aaa
ss
mov
mov
inc
pop
out
les
pushf
or
imul
lea
jl
add
stos
pop
dec
jno
mov
jnp
sub
mov
lret
fnstcw
inc
pop
inc
sbb
jp
inc
sbb
mov
push
push
fldt
mov
xor
and
test
lcall
pop
push
pop
jns
dec
mov
mov
mov
jb
out
sarb
jle
out
inc
push
cmpsl
lds
mov
mov
out
xchg
push
jbe
daa
clc
mov
mov
mov
add
addr16
xchg
xchg
jge
push
jp
pop
xor
insl
icebp
test
dec
xor
notl
int
inc
jecxz
mov
push
lcall
mov
xor
cmpl
inc
or
xchg
jp
sar
jbe
mov
mov
out
jl
ss
stc
stc
stos
arpl
pop
push
adc
jl
jb
daa
mov
stos
in
mov
inc
aad
sub
adc
ret
mov
mov
lahf
ret
or
out
das
and
imul
push
int
orl
mov
out
aaa
jbe
mov
lods
sti
mov
inc
clc
push
repnz
or
xchg
mov
clc
sarl
mov
jle
ja
pop
call
and
pop
fcmovnbe
or
sahf
outsl
xor
push
imul
or
in
fs
xor
leave
push
push
adc
mov
arpl
lret
inc
add
lock
sub
xchg
cmp
scas
shlb
fistl
fnstcw
ss
mov
iret
iret
push
les
jno
lods
xchg
outsb
mov
sbb
fistpll
mov
xchg
mov
mov
jno
mov
pop
fnstenv
dec
push
into
jne
mov
hlt
dec
pop
lahf
pop
mov
cmp
lods
add
xchg
sar
push
testb
push
xchg
daa
cmp
xchg
roll
pop
inc
imul
xlat
jb
xchg
fwait
out
sbb
es
inc
lahf
or
cmpsl
hlt
pop
xchg
pop
pop
cmp
mov
cmp
stc
push
push
mov
iret
out
jo
rcr
jp
adc
pusha
insb
add
clc
stos
mov
in
sub
pop
mov
stos
out
mov
fcompl
fbld
mov
pushf
push
jae
in
lahf
dec
js
xlat
jecxz
or
das
jg
jae
sbb
adc
popf
clc
pop
xchg
push
out
insb
loop
outsl
clc
aas
xor
push
adc
mov
xor
pusha
ret
in
inc
mov
cmpsl
ja
xor
sahf
stos
icebp
adc
jno
push
sub
cmpsl
push
lret
mov
sti
mov
inc
xor
jl
push
or
jle
lods
jae
push
add
push
out
jmp
dec
sahf
div
adc
lods
rcl
mov
pop
push
inc
hlt
fwait
xchg
decb
or
leave
jmp
cwtl
shl
adc
cmpsb
aad
cmc
push
fbld
jno
add
cmpsb
loopne
imul
sbb
jmp
les
mov
jae
mov
lea
mov
xchg
pop
cmp
xchg
je
sbb
xchg
mov
fstpt
push
sbb
ret
aad
fisttpl
jl
push
jb
fiaddl
daa
iret
jbe
xchg
push
aaa
push
xacquire
mov
and
push
push
lcall
repz
or
inc
mov
push
pop
xchg
or
adc
or
and
cwtl
mov
ret
jae
jbe
sub
push
jbe
mov
cmp
mov
sti
repz
xchg
js
inc
addl
and
rcl
sbb
jnp
xlat
mov
inc
cmp
ljmp
adc
rcrl
mov
notb
or
push
xor
mov
jne
rcrl
xchg
repz
cmpsl
jl
fcom
aam
xor
cli
inc
mov
aad
sbb
xchg
jbe
lret
mov
inc
xchg
out
cmpsl
iret
stos
inc
ror
mov
adc
aas
mov
sub
mov
mov
test
dec
sub
insl
lret
lcall
xor
pop
jg
es
or
or
fisttps
cmc
hlt
sub
push
popf
xchg
or
bound
mov
and
int
cmc
dec
xchg
pop
pop
sub
push
sbb
ds
fistps
xor
jnp
dec
xlat
sbb
jae
loope
jno
out
fnsave
jns
push
icebp
inc
arpl
je
xchg
les
cmp
jge
ds
push
ss
clc
cmpsl
add
add
fsub
inc
in
xorb
jecxz
pop
adc
dec
subl
and
inc
xchg
cmpsb
mov
jbe
lods
iret
in
popa
pusha
sbb
mov
jbe
sahf
aaa
ret
xchg
adc
push
mov
call
fwait
dec
jb
ja
icebp
pop
xor
cmpsb
dec
es
cmp
or
and
popa
into
sbb
jecxz
rcrb
and
out
adc
insb
hlt
rcrl
out
mov
dec
das
scas
jnp
int
icebp
add
aad
sub
jl
add
mov
or
lret
sbb
dec
scas
into
loop
fwait
cmpsl
mov
bound
fimuls
jne
adcl
popf
mov
jno
jae
dec
sub
lock
pop
add
push
add
mov
icebp
fidivl
jmp
pop
daa
outsl
and
sbb
lea
mov
sub
movsl
pop
sbb
xchg
ljmp
mov
mov
jbe
cmpsl
ret
out
daa
sbb
ss
andb
mov
jmp
add
stc
inc
lcall
xchg
mov
shl
mov
loope
mov
rol
fwait
inc
or
cmp
mov
in
insl
xchg
addr16
xlat
out
xor
adc
inc
mov
jecxz
mov
xchg
jp
clc
and
push
add
pop
aad
int3
out
jae
into
nopl
stc
pushl
scas
mov
pop
push
fldl
movsl
cmpb
xchg
pop
pop
mov
jb
ja
ds
cld
repz
mov
les
aam
test
fistpll
push
out
test
dec
pop
push
imul
adc
mov
xor
call
cmc
mov
jno
daa
jmp
cmpsl
cld
outsb
aas
fcoms
xchg
adc
or
inc
mov
add
fisubs
test
fisttps
ret
iret
mov
repnz
mul
mov
ds
mov
mov
mov
in
cmp
and
orl
xor
fisttps
xchg
mov
orb
inc
ret
sub
int
scas
mov
inc
xchg
lret
int
filds
call
and
cmpsl
xor
pushf
hlt
push
popl
xor
leave
jnp
cs
adc
xchg
jne
hlt
inc
aad
dec
js
cmp
and
adc
sub
aam
or
fidivrl
push
pop
pop
and
jbe
dec
addr16
and
hlt
mov
jae
push
or
mov
pop
mov
icebp
xchg
lret
loopne
ret
push
adc
inc
ja
ds
fs
push
push
testb
xchg
cs
daa
jg
pushf
or
push
popa
xchg
lods
rorb
pop
and
mov
loope
cltd
mov
jns
rcr
ret
subl
and
add
jae
out
push
pop
add
inc
fmull
sbb
out
jne
inc
jp
jb
lock
jo
test
push
inc
sbb
loop
stc
gs
adc
cmc
int
adc
stc
adc
xchg
mov
out
fildl
sahf
adc
cld
bound
cmpsl
mov
sbb
outsl
icebp
pop
xchg
cs
add
sbb
jmp
or
ret
pop
push
sub
hlt
int3
cmp
pusha
push
mov
dec
lret
mov
leave
lcall
cmpsl
mov
pop
or
mov
mov
xchg
cmc
in
mov
popf
popf
jp
mov
push
out
xchg
mov
jne
mov
out
push
shlb
jns
jo
xor
addr16
out
imul
lret
stos
mov
jle
scas
jmp
sbb
or
pop
jb
push
add
mov
outsl
pop
push
cmpsl
cmpsb
mov
dec
xchg
repz
dec
xor
arpl
jne
jbe
inc
dec
jecxz
fsubp
daa
cwtl
stc
stos
pop
adc
mov
insl
mov
xor
dec
xchg
ljmp
pop
lahf
push
imul
loop
out
mov
fs
jbe
mov
insb
test
in
jg
push
add
pop
pop
mov
aam
int3
fdivp
cmp
sbb
lods
inc
push
adc
pop
fs
repz
push
jl
pusha
lahf
push
fdivs
dec
adc
sti
pop
leave
stc
stc
jbe
jmp
dec
add
mov
cwtl
mov
jecxz
or
data16
aad
dec
mov
stos
lock
lds
ret
jecxz
lahf
andps
xchg
lret
pop
scas
dec
mov
cmpsl
mov
inc
aaa
jo
lcall
cmp
pop
repz
mov
mov
icebp
or
mov
pop
jns
leave
ret
inc
or
mov
js
xor
ds
add
cmpsl
or
stc
mov
out
pop
jne
inc
loope
pop
or
mov
aas
push
pop
fistpll
sahf
inc
push
addr16
adc
bound
pop
fnstcw
mov
inc
mov
sti
xchg
negb
or
or
cmp
xchg
xchg
cmpsl
repz
mov
repnz
jg
jns
fiadds
pusha
mov
je
or
daa
pop
adc
mov
lock
pop
pop
popl
adc
mov
add
arpl
mov
inc
imul
es
lods
fsubrs
dec
push
data16
push
fbld
imul
push
ret
and
divl
pushl
aad
push
jbe
mov
jne
lret
xor
sti
cmpsl
jp
scas
inc
addr16
sub
daa
lret
mov
sbb
push
pop
into
add
xor
out
jae
test
ret
adc
lahf
sti
int
out
jecxz
sti
orl
sbbb
mov
jle
jl
pop
xor
cwtl
lret
xor
jnp
loop
mov
fcmovnbe
push
cli
mov
or
add
faddl
xchg
xchg
and
sti
aad
jle
aam
jp
imul
nop
out
pop
stos
cmpsl
mulb
xchg
dec
ja
in
mov
data16
xchg
in
stc
xchg
sbb
dec
pop
test
lods
push
jg
jge
fprem
cmp
jecxz
and
aas
testb
shrl
push
jae
and
mov
jle
add
or
inc
cmpsb
popf
add
inc
in
subb
push
jg
xchg
cli
fbstp
jno
popf
mov
mov
or
orl
dec
imul
mov
mov
jnp
and
js
xchg
inc
cmp
add
xlat
loopnew
jcxz
fistl
pop
daa
movsb
and
in
insl
add
std
js
cmp
mov
jnp
fdivr
movsb
dec
cmp
xor
int3
mov
stos
getsec
cmp
pop
clc
pop
insl
cmp
jnp
cs
call
xchg
mov
test
fwait
or
sarl
sub
sti
ret
loop
xlat
das
and
xchg
jae
or
fisubrs
mov
jge
push
mov
cmpsl
out
cs
pop
les
es
cmp
int
cmc
mov
push
in
cmp
cmpsl
mov
jb
daa
inc
cs
out
sub
nop
inc
scas
or
xchg
push
iret
in
sub
pop
pop
mov
or
imul
hlt
jns
jbe
jbe
and
xchg
jo
je
push
in
and
add
add
adc
and
repnz
rolb
rorb
gs
cltd
inc
cmp
rcrb
stos
push
cmp
and
mov
repnz
fwait
in
ss
push
mov
addr16
cmpsl
push
xchg
mov
or
aaa
out
jae
mov
xchg
inc
icebp
lods
jnp
sbbl
dec
dec
clc
xor
pop
daa
fidivrs
cli
insb
xchg
cmp
popf
jbe
int
cmp
adc
cmpsw
dec
subb
mov
aaa
clc
ret
loopne
and
es
in
jp
cmpsl
add
cmpsl
adcb
dec
cwtl
ja
mov
jg
pusha
pop
repz
repnz
inc
pop
shll
cmp
adc
fnstsw
les
std
insb
lret
dec
mov
movsb
sbb
adc
test
adc
outsb
add
cmc
sbb
fsts
push
or
fldcw
daa
mov
call
xchg
dec
jae
shrl
je
stos
or
pop
mov
xchg
jae
xchg
out
pop
sub
movsb
mov
insb
cmp
ret
movsl
inc
mov
sub
dec
xor
iret
or
mov
mov
scas
mov
lahf
adc
movsl
bound
mov
int3
cmp
div
subl
popf
inc
push
fistl
add
push
mov
mov
push
cmp
mov
cld
fsubl
icebp
or
adc
mov
pop
push
loop
xchg
in
jns
add
xor
scas
es
sub
or
test
addr16
push
push
lret
in
dec
mov
adc
pop
inc
shrl
push
and
mov
add
insl
lahf
push
ret
jge
out
imul
repz
in
pop
popf
sub
iret
or
ror
mov
stos
movsb
jne
dec
push
nop
xchg
cld
jp
in
das
test
inc
icebp
xchg
mov
jbe
push
sub
adc
sub
imul
inc
jns
call
inc
aaa
push
sbb
pusha
mov
sbb
testl
mov
addr16
daa
pop
scas
push
cmpsb
cli
jp
push
cmpsl
and
movsb
xchg
dec
popf
cli
jp
push
xchg
add
imul
ja
mov
xorb
std
and
sbb
sarl
pop
jae
fisubs
jecxz
inc
arpl
push
xchg
repnz
sbb
cmp
shll
mov
sbb
adc
daa
add
test
sbb
lock
cmpsl
scas
sti
sub
pop
push
mov
and
stos
es
mov
testb
cmp
test
mov
xchg
pop
mov
sbb
adc
mov
pop
sub
pop
and
sbb
leave
ja
dec
inc
lods
push
jmp
data16
adcl
add
sbbb
or
lret
inc
repnz
dec
loopne
push
mov
push
sti
data16
inc
faddl
fmuls
insb
push
dec
daa
ja
cmpb
test
add
daa
lcall
aad
outsb
cmp
jbe
fisttps
push
dec
inc
outsb
repz
mov
fstl
xchg
xchg
stos
xchg
pop
not
or
inc
js
subb
push
cmp
and
dec
or
jg
in
cmpsl
movsb
hlt
fcoml
bound
stc
push
lcall
push
inc
mov
sti
fnstcw
add
repz
mov
inc
aaa
pop
rorb
insl
mov
aam
add
fisubl
sbb
repnz
lods
xor
andl
cltd
mov
push
fstps
ss
cli
lcall
loopne
xchg
outsb
sbb
mov
imul
xor
sub
aaa
push
inc
cltd
frstor
lret
xor
test
jbe
cltd
mov
lods
add
js
daa
inc
push
jb
inc
inc
fildl
pop
bound
lea
cmp
fwait
into
push
push
jns
jbe
mov
dec
pop
scas
insb
mov
dec
int
lahf
jae
je
jne
lret
mov
fdivl
mov
cld
mov
fwait
insl
sub
cmpsl
arpl
dec
cmp
lret
into
les
push
dec
mov
pop
xor
cmp
pop
sbb
dec
lods
addr16
xor
pop
sbb
push
add
nop
pop
cmc
fyl2xp1
xchg
mov
xchg
or
jno
push
fidivs
pop
jb
sti
int
xchg
sbbb
xchg
int
mov
push
test
jecxz
test
test
daa
inc
fildll
jle
fidivrl
push
jmp
ljmp
mov
lret
call
push
int3
or
inc
daa
and
add
flds
hlt
popf
sub
add
or
mov
fisttps
push
xor
andl
daa
or
stos
push
mov
fbld
data16
add
scas
add
push
mov
std
jne
notb
sti
cmpsl
js
dec
ret
inc
xchg
flds
pop
scas
pop
xor
std
sbbl
dec
jnp
pop
imull
stos
and
call
shlb
jnp
push
in
out
pop
inc
aas
ret
ss
mov
push
and
sub
xchg
lock
outsl
loope
stc
daa
and
fwait
insb
jg
ss
out
mov
out
pop
std
sub
jle
rcl
xchg
and
cli
les
test
hlt
xor
mov
aad
sbb
inc
nop
addl
shrl
test
cwtl
mov
out
dec
sbb
icebp
xor
jb
or
inc
pop
add
mov
adc
push
loop
enter
fists
jp
sbb
out
adcl
fisttpl
mov
push
push
sub
lret
or
push
sbb
mov
mov
test
mov
push
or
jl
mov
data16
push
cwtl
mov
es
sbb
addb
enter
xor
or
adc
lods
roll
pop
in
adc
or
ret
sahf
pop
loop
pop
out
adc
out
push
pop
out
out
sub
add
lret
fisubrl
push
xchg
cld
out
mov
mov
sbb
lcall
mov
leave
ficompl
xchg
xchg
sbb
sub
push
mov
push
push
out
scas
or
xor
lods
inc
push
mov
adc
daa
aaa
or
negb
fdivr
mov
arpl
push
out
sbb
cwtl
jp
shlb
scas
sbb
hlt
idivb
mov
incb
in
aad
or
sub
scas
sbb
xor
cmp
mov
jns
inc
jnp
and
arpl
sbb
push
call
pop
mov
ret
ja
pushl
loope
iret
cmpsb
hlt
test
xorl
pop
icebp
and
xchg
rol
mov
push
or
xchg
and
mov
pop
inc
lea
mov
mov
into
jo
sub
push
imul
mov
push
xlat
test
sbb
pop
sbb
cmpsl
lds
and
push
adc
aad
lods
mov
stc
out
enter
adc
sub
push
mov
or
inc
call
lds
sub
notl
loopne
sbb
lret
cmpsb
cmc
jns
jb
rcr
dec
out
or
push
arpl
cmpsl
and
xchg
xlat
ret
or
sar
addr16
leave
xchg
or
push
call
lret
push
shr
out
nop
mov
daa
push
xor
or
push
cmpsl
ret
mov
cld
fdivrp
movsb
inc
lcall
clc
dec
fcomps
data16
or
inc
cmovno
in
rclb
xor
mov
xor
roll
daa
adc
jb
cmpsl
jl
addr16
fcomp
inc
test
in
mov
adc
jne
mov
add
cmp
jns
inc
sarl
mov
add
sub
rclb
cmp
sbb
xchg
jle
cld
clc
xchg
push
loope
push
ja
push
scas
mov
scas
and
add
fdivs
scas
arpl
daa
std
mov
mov
jns
jno
push
shl
mov
adc
jecxz
add
scas
push
push
call
push
rclb
push
sbbl
out
xchg
xchg
std
sbb
in
rorl
sbb
adc
xchg
cmpsl
pop
mov
test
lock
mov
repz
out
ret
inc
jg
jecxz
daa
jge
mov
pop
or
loope
mov
mov
aaa
lret
xchg
adc
popa
daa
pop
sbb
cmp
popf
cmp
divb
xchg
das
add
in
call
xor
lahf
enter
jae
mov
imul
pop
lret
push
jecxz
xor
jle
mov
push
and
daa
les
pop
incb
push
and
loop
jbe
cmp
sub
scas
popf
jecxz
int3
adc
rcl
pop
xlat
fs
addr16
dec
sub
mov
rclb
xchg
mov
add
sti
jns
hlt
sub
arpl
arpl
dec
addl
hlt
pop
mov
mov
repnz
xchg
sub
mov
mov
inc
mov
mov
repnz
jp
clc
push
popl
inc
jno
stc
cmp
shll
jge
mov
fcomp
ja
insl
mov
test
icebp
fbstp
aam
jecxz
cmpl
mov
mov
adcb
std
push
xchg
mov
nop
add
js
cmp
pop
mov
pop
inc
enter
pop
add
inc
push
stos
popf
mov
loope
rolb
rcrb
out
in
or
sub
xchg
movsb
dec
sub
inc
sub
jne
sar
popf
mov
cmpsb
into
xchg
stos
ja
cmp
aaa
inc
add
xchg
jg
inc
mov
ret
jl
aam
push
rcll
leave
mov
and
jmp
lock
movsl
xchg
cmp
inc
call
cmpsl
and
ret
imul
pop
popf
mov
adc
cld
pop
stos
out
adcb
sub
mov
loop
cmp
xlat
fadds
sar
mov
adc
js
jbe
orb
mov
cld
sub
ljmp
adc
faddl
pop
ret
lahf
test
cmpsb
ret
adc
sbb
in
inc
mov
or
mov
out
das
cmp
or
adc
mov
daa
shll
push
fcmovbe
cmpsb
lret
scas
dec
mov
je
rsm
push
fwait
lods
push
mov
mov
rorl
ja
ss
test
je
mov
fs
inc
jnp
cli
mov
test
imul
fdivrp
or
mov
cltd
push
fisttpl
daa
mov
je
inc
popa
push
sbb
xor
xor
push
mov
negb
and
mov
stc
ljmp
in
lods
inc
scas
sar
ficompl
jae
das
mov
mov
jmp
out
mov
les
push
ret
cltd
xchg
cmpsb
inc
sbb
sbb
pop
sub
inc
pop
push
jg
or
in
daa
fidivs
stos
nop
cmpsl
push
ret
xchg
xor
and
cmp
jg
or
sub
rorb
subl
shll
cltd
mov
sbb
dec
cmp
sub
cmpsl
fistpl
hlt
mov
out
mov
add
dec
insl
sbb
fdivrl
ret
and
inc
xor
mov
jo
mov
idivl
fdivl
mov
add
test
insl
outsl
lcall
xchg
ret
cmp
es
mov
jmp
test
inc
cltd
sti
pop
sbb
insb
xor
daa
aaa
fnstcw
add
sub
pop
jae
or
dec
cmpsl
inc
cmp
notb
das
fiaddl
and
xchg
add
sub
scas
repnz
fwait
push
out
push
test
std
xchg
push
cmpsl
div
adc
scas
ret
insl
out
loop
lods
mov
cmp
fisttpll
xchg
inc
or
cmpsb
aaa
aad
int3
shll
mov
cld
mov
push
pop
push
push
jecxz
imul
mov
add
adc
mov
pushf
mov
dec
mov
cmpsb
fstpl
lods
add
mov
fstpt
inc
mov
outsl
stc
shlb
aaa
jle
lock
mov
dec
jbe
ffree
mov
jle
ret
cmc
rcr
adc
out
fs
ja
or
mov
stos
jo
fimull
decl
out
imul
aaa
aaa
inc
nop
cmp
nop
jge
aaa
hlt
mov
push
jge
push
nop
in
cmp
shll
jae
repnz
sub
xchg
add
clc
mov
inc
xor
rcrb
or
push
js
ljmp
and
and
pushf
jbe
lds
and
aad
jae
sbb
pop
mov
movb
je
xchg
in
push
jecxz
aaa
and
inc
lahf
movsb
shrl
test
add
xor
js
sbb
out
mov
xchg
add
outsl
add
stc
add
add
cmpsl
hlt
lods
mov
and
mov
imull
rorb
cmp
jno
add
jecxz
test
in
test
popf
cwtl
add
cli
out
fisubrs
or
repz
mov
mov
rcll
ss
stos
cmp
in
test
mov
mov
push
int3
ss
sub
lea
repz
mov
and
xchg
addr16
adc
cmp
test
daa
jg
fstpt
outsb
stos
ja
cmpsl
cmp
mov
jns
pop
push
popf
mov
jge
adc
fbld
mov
dec
sub
std
xchg
xchg
cmpsl
in
sahf
sub
mov
outsl
add
fisubs
jns
addr16
mov
lock
jle
add
adc
sub
loope
out
sti
sub
jo
lods
inc
xchg
push
add
pop
dec
dec
or
jo
cld
je
lds
movsb
jmp
daa
bound
xor
ficoms
and
mov
push
ss
push
push
pop
xor
sub
fdivrs
cmp
jne
or
sahf
scas
insl
mov
imul
out
jmp
js
pop
jae
lret
xchg
dec
outsb
cld
les
cld
daa
sbb
movsb
jns
mov
lahf
inc
mov
inc
add
ss
mov
lds
cmp
imulb
push
jmp
fisttpll
popa
push
subl
fwait
mov
add
mov
mov
jb
inc
mov
jo
js
push
clc
scas
jo
mov
pop
daa
in
iret
outsl
xor
jno
lahf
mov
inc
or
cld
cs
mov
lret
stos
out
rcr
mov
add
in
jo
pop
repz
inc
fcomip
mov
inc
pop
sbb
add
insl
add
sub
mov
mov
jl
add
mov
shl
daa
jb
pop
inc
jmp
shrl
inc
dec
push
xor
aaa
xlat
inc
mov
insl
shlb
ss
aas
data16
xor
push
aas
mov
sub
inc
pushf
rcl
incl
cmpl
daa
lea
adc
test
xchg
cltd
xchg
xchg
out
cmp
jg
and
iret
mov
xchg
movsl
mov
sub
scas
cmp
cmpsl
cmpb
jbe
sub
daa
mov
mov
xchg
setl
xchg
icebp
jl
pushf
xlat
repz
into
or
lahf
mov
sbbl
js
out
repnz
ljmp
cltd
fadds
jle
and
sbbl
sbb
xor
addr16
aam
lods
cmpsl
es
add
push
aad
xchg
test
pop
cwtl
sbbb
pop
dec
adc
mov
jnp
roll
mov
dec
mov
pop
jae
mov
ror
and
ret
call
test
int3
js
add
adc
push
enter
icebp
pop
sub
cwtl
outsb
mov
jecxz
xlat
daa
xchg
sbb
ljmp
aas
lock
mov
pop
add
inc
adc
cmpsl
cld
aaa
xchg
leave
or
and
adc
cmp
inc
mov
add
aad
cmpsl
xlat
mov
test
push
cmp
cmpsl
inc
adc
cmp
das
bndstx
push
test
test
mov
loop
cld
int
mov
mov
push
jbe
std
shrl
add
push
or
add
rolw
jnp
xorl
jecxz
xchg
pop
movsb
daa
fs
aaa
xchg
fcmovu
das
sub
inc
jns
and
xor
pop
daa
inc
xchg
push
inc
mov
inc
addr16
movsl
sub
xchg
mov
iret
lret
push
push
out
outsb
inc
scas
hlt
pop
loopne
in
pop
dec
adc
pop
and
hlt
xchg
std
push
xchg
adc
cmpsl
lret
xchg
aad
or
gs
sbb
jg
jp
out
cmp
test
loope
sbb
push
push
jns
notb
out
and
pop
sbb
sbb
ret
pop
jl
sub
jmp
out
repnz
mov
push
fs
cmpsb
ror
cmp
cmp
stc
cltd
pop
xchg
mov
mov
daa
cld
or
cmp
or
rorb
mov
xor
mov
jbe
inc
imul
test
adc
out
xchg
dec
mov
push
or
daa
imulb
cmp
jge
mov
test
lcall
jle
fwait
sbb
jl
call
mov
push
xchg
xor
cld
jbe
push
fisubs
inc
daa
inc
lret
push
incb
dec
sub
jecxz
push
xchg
test
test
xor
inc
jle
test
cwtl
in
hlt
cmp
jp
cld
mov
fstps
mov
cmp
pop
xchg
dec
mov
loop
sbb
push
inc
push
and
out
pop
fwait
test
ficomps
out
imul
jnp
add
aas
inc
lods
xor
fbld
insb
or
insl
cmp
lret
outsb
cmpsl
orl
add
and
push
cld
jne
icebp
les
outsl
add
pop
xchg
cmpsl
xchg
mov
xlat
sbb
mov
xlat
loop
pushf
push
or
insl
out
xchg
push
pusha
insb
dec
xor
xchg
xor
adc
mov
call
aas
adc
fcoml
or
arpl
aas
dec
loopne
dec
ret
fdivs
sbb
lahf
pop
bound
push
movsb
dec
pop
fisttps
pop
jge
push
fisttpl
shl
adc
jb
in
xor
sub
lods
cli
cmpsl
mov
fs
xor
ret
ret
mov
xor
repz
add
popf
inc
cmp
xchg
adc
mov
xchg
jl
adc
push
mov
pop
sbb
or
xchg
cli
ds
add
icebp
push
xchg
popf
les
xchg
pop
sbb
lods
fcoms
cmpsl
pusha
and
inc
sbb
or
lea
test
xor
pop
mov
std
push
lds
iret
dec
sbb
sub
push
adc
lret
push
adc
add
mov
and
aam
enter
rorl
xor
pop
mov
sub
icebp
or
xor
adc
daa
cmp
pop
enter
jp
jecxz
pop
cmpsl
jns
cld
scas
add
adc
daa
js
loopne
scas
mov
nop
mov
push
xchg
shlb
out
sub
jecxz
fwait
xor
ficompl
push
leave
clc
in
xor
pop
cmpsl
sti
sbb
out
fwait
inc
cld
adc
mov
mov
jbe
pop
aam
out
call
loopne
fwait
or
push
lcall
ja
push
daa
jae
and
push
mov
push
sub
ret
cld
jmp
and
mov
or
xchg
loope
lea
out
xchg
fcomps
and
sbb
sub
adc
stc
shll
dec
mov
mov
stos
push
je
test
inc
js
cmp
add
mov
ret
mov
push
sbb
pop
add
lcall
pop
push
insl
int
sbb
inc
push
clc
push
jae
push
popa
shrb
lock
fbstp
cmpsl
ficoms
adc
out
xor
xchg
ds
push
fnstsw
lock
insl
test
mov
adc
mov
mov
scas
movsl
mov
lea
rorb
test
shlb
push
xor
mov
add
mov
lret
pop
inc
mov
faddl
sbb
test
movsb
ret
rolb
fistpll
stc
mov
add
dec
jge
fsubs
ret
inc
xchg
shrb
cmp
add
jmp
sbb
aam
and
lea
jmp
out
pop
in
xchg
sti
adc
and
xchg
mov
loop
mov
pusha
adc
and
dec
xchg
inc
cwtl
sar
lds
sbb
mov
mov
outsb
fisubl
xor
xchg
les
sbb
movsb
inc
addr16
in
push
fsubrs
arpl
pop
xchg
lock
pop
push
hlt
ret
lods
aam
sbb
add
jbe
roll
jns
movsb
pop
pushf
outsl
sbb
add
inc
cli
ret
jns
or
jp
das
arpl
das
lock
popf
imul
cltd
aaa
hlt
imul
jl
arpl
cmp
mov
cli
jle
xchg
imul
mov
popa
lahf
icebp
add
xor
adc
push
stos
leave
cmpsl
jbe
bound
sub
jnp
cmpsl
outsb
inc
cmpsl
ret
dec
sbb
cltd
push
bound
jp
aam
aad
ret
jb
out
xchg
out
lret
imul
std
or
inc
out
test
in
jnp
pop
adc
rorl
cmpsl
emms
loope
push
ret
out
jno
mov
ljmp
add
popf
sbb
clc
cs
loope
cmpsl
pop
aad
mov
xchg
lret
loop
clc
aaa
push
lcall
or
ret
cs
inc
ret
jns
jae
and
jp
xor
jmp
adc
dec
sbb
lock
shl
or
adc
mov
das
jl
iret
mov
push
jns
xlat
cmp
inc
lods
cmpsb
icebp
lret
push
mov
push
mov
sbb
add
or
mov
adc
adcb
ret
dec
xchg
jg
jecxz
dec
pop
xor
daa
out
pop
or
xor
push
adcb
pop
cmp
aaa
lods
adc
lds
imul
and
lcall
daa
and
sbb
stos
imul
loop
adc
mov
daa
lds
jmp
and
or
adc
cmpsl
dec
outsb
inc
adc
pop
push
or
dec
aaa
std
sub
sbb
xor
int3
movsl
mov
add
jl
sbb
jnp
xor
pop
gs
clc
jne
jecxz
mov
cltd
xor
insb
mov
and
test
jae
mov
ret
sbb
into
lahf
lcall
jno
mov
add
daa
scas
jbe
mov
push
xor
and
sbb
rcrl
ret
cmp
mov
cmpsb
push
pop
xor
dec
fisttpll
mov
pushf
out
mov
out
mov
fisubrl
inc
rorb
and
dec
push
adc
sub
add
sbb
adc
mov
insb
cwtl
jo
popa
xchg
icebp
mov
sbb
pop
push
into
sahf
es
dec
mov
xchg
aaa
jg
dec
mov
cmp
lcall
pop
cmpsl
negb
cwtl
cld
inc
movsb
cmpsl
in
push
sbb
rclb
lds
jae
push
pop
xchg
aas
repnz
ret
cmp
hlt
cli
add
lcall
inc
xchg
ret
std
sub
in
aaa
dec
jne
stos
inc
and
pop
inc
add
cmp
stos
call
inc
mov
xor
cli
mov
es
pop
xlat
sub
aaa
shrl
daa
cmpxchg
jmp
mov
xor
add
js
idivb
out
stos
std
ret
push
pop
cwtl
push
jge
mov
pop
fwait
mov
cld
inc
test
mov
subl
mov
sub
fs
test
adc
cmp
inc
insb
adc
sahf
mov
cmp
jne
push
fxch
pop
je
add
sarb
lea
fistps
icebp
add
movsl
lods
fsub
cmpsl
mov
and
mov
inc
in
pushf
insl
hlt
cli
out
in
push
lods
inc
add
push
rorb
sbb
es
push
jbe
sub
daa
int3
adc
sub
inc
int
jnp
push
xor
push
xchg
xchg
loope
sahf
daa
frstor
addr16
inc
imul
das
cmp
daa
les
mov
shlb
js
fcmovnu
daa
lahf
add
sarl
mov
std
mov
inc
loope
jecxz
or
adc
add
inc
lcall
jno
add
addl
mov
dec
je
in
jp
mov
jo
fnstcw
repnz
idiv
pushf
cmp
or
xor
and
scas
outsl
imul
icebp
ficomps
cmpsl
lret
out
subb
std
sbb
mov
fwait
clc
mov
aad
inc
test
adc
adc
jns
popa
xchg
repz
fsqrt
sub
es
test
push
adc
and
cs
cltd
std
adc
jne
cmpsl
jmp
xchg
push
repnz
add
scas
jle
jns
in
or
out
out
in
daa
lret
lret
adc
ljmp
adc
pusha
test
mov
mov
daa
jmp
idiv
sbb
ret
cmc
cmc
mov
fcomi
cs
jne
pop
pushf
int3
sbb
in
jecxz
xchg
out
or
cmc
gs
mov
es
sub
ret
xor
cmp
cmp
cmpb
and
mov
lods
stos
jne
mov
mov
jl
mov
pushf
cmp
popa
fists
popf
inc
rcll
sbb
mov
mov
xor
call
incl
xchg
or
incb
je
xorl
jecxz
adc
cmp
pop
pop
fisubl
mov
dec
pop
mov
and
sbb
dec
push
add
pop
out
loope
pop
ss
popf
repz
jle
scas
mov
andb
ret
xor
fdivrs
push
add
leave
xchg
inc
shrb
stc
shlb
fdivs
mov
pop
lret
mov
sub
jae
xchg
les
test
test
xchg
xor
add
sbb
fildll
ljmp
mov
inc
cmpl
scas
sbb
jnp
mov
fwait
jle
shll
sub
jne
cwtl
repz
mov
jno
xchg
sahf
sti
xchg
mov
inc
stc
jmp
sti
inc
xchg
cmp
cmpsb
xchg
pop
pop
fimull
popl
aad
add
dec
in
mov
ficompl
or
das
xchg
in
movsb
mov
fadd
call
outsb
mov
es
jae
dec
icebp
jg
cmp
loope
xor
push
push
pop
jo
ja
sub
push
lcall
insl
push
mov
popf
mov
jns
push
mov
cmpsl
div
inc
fldcw
mov
mov
negb
idivl
dec
push
int
xlat
fcompl
sbbb
pop
cmp
std
int3
lea
sub
inc
cmp
xor
test
cmpl
daa
test
push
mov
mov
or
ficompl
call
push
fistps
xchg
adc
inc
adc
pushf
and
pop
addl
mov
inc
or
sbb
inc
bound
xchg
adc
fwait
or
push
aad
insb
loope
sub
in
push
ret
cmpsl
cmp
xchg
loope
adc
arpl
daa
adc
add
xor
add
aad
nop
push
adc
jno
mov
mov
sub
mov
orl
in
or
insl
fwait
adc
stos
and
fiaddl
xlat
shrb
jbe
jne
inc
pushf
rolb
mov
cmpsl
dec
or
add
inc
cmp
daa
mov
mov
pop
lods
push
mov
xchg
sub
pop
repnz
jb
lods
ja
loopne
ror
ret
movsl
stos
dec
fistpl
jmp
sub
std
mov
pop
cmp
sub
jbe
sbb
scas
dec
rcl
xor
mov
stc
xchg
sbb
mov
xor
sbb
add
sbb
add
dec
and
jg
xchg
loop
loope
inc
es
ss
jne
cld
mov
xlat
icebp
adcb
imul
fldl
push
adc
adc
xor
xor
pop
in
shlb
popf
xchg
xchg
ds
lock
cs
daa
in
ja
repz
lret
scas
test
mov
stc
shlb
cli
icebp
jl
out
and
je
push
sbb
imul
xorl
mov
sub
and
cmpsl
mov
cmp
gs
dec
jns
out
lcall
repz
cmpsl
xchg
mov
jecxz
stc
jae
loope
and
daa
inc
movsl
push
fcmove
jl
clc
popf
sub
imul
jo
sbb
inc
ljmp
xlat
fstpl
dec
push
je
pop
inc
mov
inc
add
test
or
push
or
adc
in
jg
rcll
xor
xchg
bound
xchg
lods
or
xchg
add
movl
or
xor
jecxz
mov
add
aas
inc
mov
push
sub
mov
stos
cli
das
aam
fmull
cmpsl
push
test
jmp
add
jae
inc
mov
sarb
add
out
test
inc
test
fwait
adc
xorb
or
scas
jle
out
sbb
stc
fs
or
inc
adc
add
xchg
rcll
movl
add
cmpsb
mov
push
mov
pushf
pushf
popl
call
mov
pusha
call
shrd
bsf
rcl
movzbl
test
shl
bt
or
xor
bt
add
rcr
push
rol
rcr
stc
neg
not
add
xor
call
mov
movb
mov
movl
mov
movb
movb
lea
jmp
call
mov
jmp
sub
pushf
call
mov
mov
mov
lea
jno
push
pushf
mov
pushf
jmp
pusha
sub
pushf
call
sar
mov
bt
sub
pushf
cmp
pushf
bt
shl
jmp
call
stc
mov
call
movw
mov
pushf
pushf
call
mov
mov
pushf
call
xor
mov
push
call
dec
clc
stc
bt
push
ror
test
movb
sub
cmp
movl
sub
jnp
cmc
sub
pusha
jmp
call
call
mov
mov
repz
popl
pushf
push
lea
jmp
push
aad
mov
pushf
call
pushf
pusha
pushl
popl
movl
lea
jmp
push
pushl
popl
push
lea
jmp
movb
push
mov
jmp
mov
jmp
call
movw
mov
pusha
pusha
movl
mov
mov
mov
pushf
mov
pushf
movb
mov
mov
push
pushl
jmp
mov
movb
push
lea
jmp
pushf
movb
jmp
sub
pusha
cmp
bt
clc
shr
call
mov
pushf
lea
jmp
mov
pushl
mov
pusha
push
mov
pushf
mov
push
mov
jmp
push
mov
call
pushf
push
mov
movb
pushf
pushl
lea
jmp
call
push
clc
sub
clc
sub
jmp
mov
mov
mov
lea
jmp
mov
pushf
movb
jmp
rcr
inc
rol
or
movzbl
jmp
mov
mov
bt
test
bt
sub
jmp
mov
push
pushl
mov
pushf
pushf
pushf
mov
pushf
repz
popl
pusha
pushf
push
lea
jmp
pushf
lea
jne
call
xadd
sbb
sar
lea
movzbl
sbb
rcr
sbb
bts
xor
setp
bswap
push
setp
not
lea
pusha
inc
movzbw
inc
movzbw
and
neg
setbe
or
rol
bts
xor
bt
call
call
push
lea
ja
and
mov
movsbw
lea
stc
and
shld
sar
sub
rcl
lea
pusha
bt
jmp
pushf
call
mov
push
call
jmp
neg
xor
jmp
inc
cmp
cmc
neg
bt
jmp
xadd
inc
add
stc
mov
cmc
sub
push
mov
clc
test
test
add
pushf
jmp
push
pushf
popl
jmp
call
sub
call
call
mov
movb
mov
movb
pusha
mov
pushf
push
repz
popl
mov
pushf
mov
pushf
lea
jmp
pushf
pusha
bswap
jmp
stc
cmc
push
not
movzbw
jmp
pushf
jmp
movb
movl
pusha
mov
call
lea
jp
pushf
mov
pusha
pushf
push
lea
jmp
pushf
pusha
mov
pushl
jmp
sub
call
bt
cmc
push
not
pushf
sub
test
call
mov
push
jmp
sub
pushf
mov
jmp
pushf
dec
cmp
clc
and
and
neg
mov
push
cmp
pushf
test
add
push
mov
pushf
lea
jmp
push
mov
movw
pop
jmp
add
push
mov
pusha
pushl
lea
jmp
pushl
pushf
popl
push
call
mov
pushf
call
cmp
pushf
pushf
xor
jmp
lea
movl
mov
movb
movb
lea
jmp
lea
jns
mov
pusha
jmp
xchg
call
jmp
cmc
ror
bswap
call
call
call
mov
pusha
jmp
call
sets
aad
rdtsc
jmp
push
ror
pushf
call
mov
jmp
pushl
pusha
pushl
popl
movb
movb
mov
movw
lea
jmp
pushf
popl
pushf
jmp
pushf
pushf
popl
push
call
inc
seto
jmp
pushf
jmp
call
push
call
mov
call
push
pushf
pushf
pusha
mov
call
pushf
pushl
mov
push
mov
jmp
pusha
pusha
mov
pushl
pushl
pushf
mov
lea
jmp
decl
jmp
push
mov
pushf
pushf
push
lea
jmp
repz
popl
pushl
push
lea
jmp
cmc
stc
shl
pusha
bt
call
call
sub
jmp
clc
sub
cmc
cmc
add
pusha
lea
jbe
pushf
pusha
pusha
pushf
pushl
popl
push
lea
jmp
jmp
mov
mov
call
movzww
cmc
pushl
cmp
xor
cmc
pusha
xchg
call
pushf
inc
call
pusha
pop
sets
not
not
ror
ror
pushf
movzbw
dec
sub
test
mov
and
call
mov
jmp
bt
test
pushl
jge
cmc
add
clc
popf
push
movb
mov
pushf
lea
jmp
mov
test
cmp
add
mov
cmp
add
bt
pushf
shrd
call
pushf
jmp
jmp
mov
bsr
and
pusha
mov
jmp
mov
lea
jo
pushf
mov
mov
mov
jmp
pushf
repz
popl
push
push
mov
mov
lea
jmp
pushf
pushf
ror
shl
mov
stc
cmp
not
rol
mov
mov
pushl
cmc
sub
pushf
stc
shr
pushl
lea
jns
pushf
push
mov
call
mov
mov
jmp
movb
repz
popl
mov
lea
jmp
push
movb
mov
add
pushf
mov
pushl
pushf
movw
mov
lea
jmp
pusha
pushf
call
lahf
notl
dec
cbtw
aam
seto
mov
jmp
pushf
mov
movb
pushf
pushl
jmp
jmp
jmp
mov
mov
push
lea
jmp
pushl
popl
pushf
mov
mov
lea
jmp
clc
jmp
call
not
pushf
call
push
push
movl
pushf
jmp
call
inc
not
cwtd
mov
rcr
inc
cmp
inc
mov
jmp
call
pusha
call
call
bsf
lea
aas
mov
js
bt
bt
sub
call
cmp
sub
push
mov
pushf
lea
jmp
call
call
add
add
repz
popl
pushf
mov
push
lea
jmp
repz
popl
mov
pushf
push
pushl
lea
jmp
pushf
movw
pushf
mov
call
pusha
pushl
popl
pushf
movl
lea
jmp
add
mov
bt
call
lea
not
pushf
mov
pushf
mov
movsbw
lea
std
std
pusha
pushf
xchg
std
not
mov
mov
cld
pushf
pushf
cld
cld
mov
rep
sar
mov
movw
and
mov
cmp
pushl
popf
pushf
movw
mov
lea
jmp
jmp
pusha
mov
jmp
mov
push
lea
jns
push
call
mov
call
add
pusha
mov
mov
lea
jmp
pushf
mov
push
pushf
popl
call
jmp
mov
movb
mov
mov
repz
popl
pushf
lea
jmp
mov
pushl
mov
pushf
pushf
call
aam
shrd
adc
not
mov
jmp
dec
cwtl
bt
and
lea
test
cmc
cmp
push
pusha
call
pushf
mov
jmp
mov
pushf
mov
mov
movw
pushl
call
mov
call
pushf
call
cwtl
pushf
cmc
movb
stc
sub
push
call
call
lea
jmp
movsbw
mov
lea
jae
dec
inc
stc
bt
pusha
not
cmc
inc
test
sub
sbb
mov
call
lea
jne
bsf
pusha
movzbw
stc
mov
cmp
pushf
pusha
and
cmc
bt
push
cmp
cmp
call
jmp
shr
call
jmp
jmp
push
bswap
pushl
jmp
pushf
repz
popl
push
lea
jmp
mov
call
pusha
mov
call
mov
pusha
jmp
push
mov
jmp
pusha
jmp
lea
push
pusha
mov
movb
lea
jmp
push
mov
pushf
push
mov
movw
pushf
call
mov
push
repz
popl
pushl
lea
jmp
pushl
popl
movb
push
mov
lea
jmp
pusha
pusha
call
mov
pusha
mov
repz
popl
pushf
mov
pushf
pushf
lea
jmp
mov
call
lea
jge
pusha
mov
pushf
call
mov
mov
pushf
mov
push
pushl
jmp
cwtl
mov
pushf
lea
cpuid
pushf
pushl
jmp
pushf
pusha
add
call
jmp
mov
mov
mov
pushf
jmp
pushf
push
mov
movb
jmp
mov
pushf
mov
jmp
pushl
popl
pusha
pushl
lea
jmp
divb
in
pop
pusha
xchg
pop
lret
pop
push
mov
pop
dec
mov
in
pop
iret
movsl
in
pop
out
mov
in
pop
mov
movsl
in
pop
pusha
xchg
pop
divb
in
pop
push
mov
pop
call
xchg
pop
divb
in
pop
cs
pop
add
in
pop
loope
in
pop
mov
xchg
pop
mov
mov
in
pop
adc
in
pop
and
in
pop
and
in
pop
iret
movsl
in
pop
in
in
pop
out
mov
in
pop
lods
test
pop
push
mov
pop
call
mov
in
pop
push
movsl
in
pop
lahf
mov
pop
and
mov
in
pop
add
in
pop
and
in
pop
in
mov
in
pop
adc
in
pop
mov
mov
in
pop
iret
movsl
in
pop
push
movsl
in
pop
out
mov
in
pop
mov
in
pop
sti
mov
in
pop
mov
in
pop
mov
in
pop
xchg
mov
in
pop
insb
mov
in
pop
mov
mov
in
pop
pop
stos
in
pop
mov
movsb
in
pop
aas
mov
in
pop
mov
in
pop
sahf
mov
pop
pop
in
pop
lods
test
pop
push
mov
in
pop
adc
in
pop
mov
lods
in
pop
push
movsl
in
pop
out
in
pop
push
mov
in
pop
lahf
mov
pop
push
mov
in
pop
iret
movsl
in
pop
push
mov
in
pop
in
mov
in
pop
lods
test
pop
push
mov
in
pop
mov
in
pop
and
in
pop
divb
in
pop
mov
in
pop
lret
pop
cs
pop
out
in
pop
das
mov
pop
sti
mov
in
pop
and
in
pop
das
mov
pop
push
movsl
in
pop
loopne
in
pop
out
mov
in
pop
mov
in
pop
das
mov
pop
mov
in
pop
lods
test
pop
das
mov
pop
aas
mov
in
pop
fstp
in
pop
mov
fldlg2
pop
push
movsl
in
pop
loopne
in
pop
dec
mov
in
pop
mov
in
pop
repnz
pop
insb
mov
in
pop
mov
in
pop
push
mov
pop
aas
mov
in
pop
lods
test
pop
xchg
mov
in
pop
mov
in
pop
push
movsl
in
pop
out
in
pop
and
mov
in
pop
push
mov
in
pop
mov
in
pop
loopne
in
pop
adc
in
pop
pop
in
pop
mov
mov
in
pop
push
movsl
in
pop
and
in
pop
std
mov
pop
mov
in
pop
and
in
pop
insb
mov
in
pop
push
mov
pop
and
in
pop
add
in
pop
std
mov
pop
mov
fldlg2
pop
push
movsl
in
pop
insb
mov
in
pop
mov
in
pop
push
mov
in
pop
insb
mov
in
pop
mov
in
pop
inc
cmpsl
in
pop
push
mov
in
pop
cs
pop
mov
mov
in
pop
push
mov
in
pop
mov
in
pop
sbb
pop
push
pop
xchg
mov
in
pop
fstp
in
pop
lods
test
pop
divb
in
pop
xchg
mov
in
pop
inc
cmpsl
in
pop
push
movsl
in
pop
sti
mov
in
pop
mov
in
pop
push
mov
in
pop
mov
in
pop
call
mov
in
pop
mov
in
pop
insb
mov
in
pop
lods
test
pop
push
movsl
in
pop
loopne
in
pop
std
mov
pop
mov
in
pop
pop
stos
in
pop
mov
in
pop
mov
xchg
pop
sub
in
pop
das
mov
pop
fstp
in
pop
push
mov
pop
inc
cmpsl
in
pop
mov
movsb
in
pop
push
movsl
in
pop
xchg
mov
in
pop
std
mov
pop
mov
in
pop
pusha
push
mov
push
push
mov
pushf
lea
jmp
cmc
xor
bt
pushf
clc
add
cmc
bt
jmp
lea
je
test
sub
test
xchg
stc
pusha
cmc
pusha
mov
call
pushl
test
mov
or
jmp
pushf
popl
pushl
pushl
call
mov
pushf
popl
call
repz
popl
pusha
mov
mov
lea
jmp
jmp
pusha
mov
jmp
mov
jmp
call
test
xor
mov
pushf
call
rol
movzbl
mov
movsbw
shld
sub
bts
push
setne
sbb
neg
call
mov
mov
mov
mov
call
pushf
mov
movb
pushf
movw
pushf
popl
mov
pushl
popl
pushl
pushf
pusha
pushf
lea
jmp
pushf
bt
mov
pushf
test
call
jmp
mov
pusha
movw
call
pushf
mov
push
mov
call
jmp
pop
jmp
mov
pushl
popl
mov
push
lea
jmp
call
mov
pushf
lea
jmp
movzbw
jmp
mov
lea
jge
push
pushl
mov
mov
movb
movb
jmp
shld
xor
mov
stc
inc
add
setnp
mov
pusha
mov
push
mov
pushf
push
lea
jmp
push
pushf
call
pusha
jmp
cmc
sub
pusha
clc
shr
call
mov
mov
push
mov
mov
pushl
ret
pushf
call
pushl
jmp
pushf
cmp
cmp
add
call
pushf
push
pushf
popl
push
push
lea
jae
popl
pusha
lea
jmp
mov
jmp
pushf
pushl
pusha
mov
pushf
pushf
pushf
mov
pushf
call
pusha
mov
pushf
mov
pushf
call
repz
popl
push
mov
pushf
pusha
lea
jmp
clc
neg
jmp
pusha
pushl
mov
push
jmp
push
call
push
push
mov
mov
pushf
pushf
call
mov
pop
jmp
pushf
and
push
pushf
mov
pusha
mov
jmp
mov
movb
repz
popl
pushf
pushf
lea
jmp
bsr
cmc
mov
sbb
adc
add
add
pusha
inc
bts
mov
sets
sub
bt
rol
ror
push
call
call
pushf
pushf
jmp
call
test
mov
push
mov
bt
call
jmp
ror
xchg
add
mov
pusha
shr
xor
mov
call
mov
push
call
push
push
mov
call
bt
pushf
stc
add
clc
bt
bt
cmc
xor
cmc
call
pusha
pushf
push
mov
pusha
mov
mov
call
mov
jmp
mov
push
lea
ja
pusha
repz
popl
pusha
mov
pushf
mov
lea
jmp
jb
push
pusha
mov
jmp
call
movb
push
pushl
popl
mov
lea
jmp
cmc
sub
push
pushf
mov
mov
movb
pushf
pushf
lea
jmp
mov
call
das
shrd
cmp
clc
mov
shl
ror
bswap
call
pushl
call
shr
movb
add
pusha
not
mov
call
mov
jmp
push
mov
pushf
lea
jmp
call
push
pushf
not
push
pushf
push
jmp
cmc
xor
pushf
inc
bt
bt
sub
pushf
pushf
mov
mov
movw
pushl
pushf
lea
jmp
pushf
popl
pusha
mov
mov
pushl
popl
pusha
lea
jmp
pushl
popf
mov
lea
jmp
call
mov
pusha
pushl
jmp
mov
pushf
movb
pushl
mov
mov
pushf
pushf
jmp
rol
stc
pushf
pushl
jmp
call
mov
pusha
repz
popl
pusha
movb
pushf
lea
jmp
movb
repz
popl
push
mov
movw
lea
jmp
movzbl
stc
cmc
jmp
mov
pusha
pusha
lea
jmp
call
mov
jmp
lahf
push
jmp
call
call
pushf
pushl
popl
movb
mov
lea
jmp
push
movb
pushf
jmp
jmp
neg
jmp
call
call
jmp
mov
jmp
movl
mov
call
mov
push
pushf
mov
pusha
push
push
push
mov
jmp
pushl
mov
pushl
push
mov
pushf
pushf
movb
mov
push
call
pushf
bt
sub
test
movw
mov
mov
call
jle
push
push
mov
push
pusha
mov
movw
call
push
mov
mov
call
pusha
movzbw
movsbw
inc
dec
setnp
setb
not
sbb
sub
push
cmc
mov
pusha
add
test
push
clc
mov
clc
cmc
add
pushf
push
lea
jmp
call
xchg
mov
cltd
mov
pushf
lahf
mov
bswap
bswap
mov
push
pusha
pushl
pushl
ret
mov
mov
jmp
mov
not
movzbw
mov
push
divl
pushl
mov
mov
jmp
call
mov
mov
pushl
popl
movb
mov
lea
jmp
push
mov
jno
pusha
pusha
mov
call
movw
mov
mov
pushf
pushl
lea
jmp
mov
call
repz
popl
movb
lea
jmp
mov
jmp
jmp
repz
popl
push
lea
jmp
and
sbb
sub
pushf
call
sub
clc
clc
shl
movb
push
movb
push
mov
call
mov
mov
mov
push
mov
mov
jmp
call
mov
pusha
pushf
push
lea
jmp
inc
sbb
dec
adc
add
neg
bsf
call
movb
lea
jae
mov
pusha
lea
jmp
pushf
adc
mov
cld
pop
clc
bswap
cmc
pop
cltd
cwtl
rol
popf
lea
mov
call
call
call
push
movb
pushl
pusha
pushf
popl
mov
movb
call
pusha
pushf
movb
call
mov
pushf
pusha
pushf
lea
jmp
movb
movw
mov
call
pushf
pusha
mov
call
call
jmp
ror
mov
mov
jmp
cmc
mov
pushf
stc
or
pushf
pushl
mov
jmp
cmc
rcr
mov
pushf
cmp
cmc
sub
test
pusha
neg
pusha
dec
cmp
cmp
test
push
not
test
sub
stc
mov
call
mov
lea
jne
pusha
mov
jmp
test
call
ror
pushf
bt
bswap
mov
pushl
add
mov
pushf
pushf
pusha
lea
jmp
mov
mov
jmp
mov
cmp
add
mov
movb
stc
mov
test
bt
add
movb
push
lea
jmp
push
push
pusha
jmp
or
mov
pushf
add
mov
mov
lea
jmp
sub
movb
lea
jmp
bt
sub
push
pushf
lea
jmp
pushf
mov
push
jmp
jmp
mov
bswap
mov
push
jmp
call
movb
mov
mov
call
pushf
mov
jmp
cwtl
mov
lahf
mov
rdtsc
movzbw
mov
pushf
cwtl
mov
bswap
not
lea
mov
mov
push
pushl
ret
pushl
popl
pusha
movb
movb
push
lea
jmp
push
jmp
push
pushl
popl
movw
pushf
pushf
lea
jmp
xor
pushf
sub
not
bsf
inc
movzbl
lea
mov
movb
clc
pushf
xor
cmp
add
jmp
pushf
popl
pusha
pushl
popl
movb
movb
lea
jmp
pusha
jmp
repz
popl
pushl
lea
jmp
call
pushl
mov
mov
jmp
bsf
call
and
mov
shr
shl
inc
mov
jmp
call
mov
mov
call
movb
repz
popl
pushf
lea
jmp
mov
setb
lea
jb
movsbw
pop
xchg
mov
push
mov
cltd
lahf
mov
jmp
not
pushf
mov
pushf
push
mov
pusha
lea
jmp
push
movb
lea
jne
bts
shr
pushf
xorb
lea
jmp
pushf
popl
pusha
mov
pushl
popl
pushf
mov
pushf
lea
jmp
add
xchg
mov
movsbw
add
clc
xor
bswap
cmc
dec
mov
call
inc
rol
inc
mov
rcr
bsr
mov
bt
test
pushf
pusha
add
push
jmp
mov
mov
jmp
push
movb
mov
jmp
pushf
jmp
stc
lahf
shl
mov
bt
mov
bt
cmp
not
bt
not
clc
clc
cmc
and
pushf
movl
pushf
pushf
mov
jmp
push
pusha
test
cmc
xor
pushl
not
call
repz
popl
sub
btr
xor
clc
shl
pushl
btr
inc
push
bswap
adc
rcl
movzbw
mov
shrd
bsr
and
sar
xor
movzbw
movzbw
pusha
inc
bswap
pop
rol
dec
lea
xchg
clc
mov
sar
sub
bsf
bts
mov
call
mov
pushf
mov
jmp
inc
mov
stc
stc
pusha
call
pushf
pushl
popl
pushl
pushf
pushl
lea
jmp
mov
call
jmp
mov
call
movsbw
ror
mov
adc
mov
add
mov
jmp
mov
mov
mov
mov
lea
jmp
clc
xadd
mov
sbb
mov
stc
cmp
jns
add
pusha
jmp
movzbl
add
and
mov
not
add
mov
clc
call
push
call
call
call
xchg
push
mov
pop
mov
bswap
bswap
mov
movw
xchg
push
pushf
pushf
setno
mov
jmp
movb
pushf
mov
movb
pushf
popl
pushf
pushl
popl
pusha
movb
push
lea
jmp
jmp
mov
pushf
pushf
movw
pushl
lea
jmp
inc
jmp
mov
movb
repz
popl
push
push
mov
movb
lea
jmp
push
mov
pushf
pushf
pushl
push
pushl
ret
pusha
jmp
mov
movl
lea
jbe
pusha
mov
pushf
pusha
jmp
neg
jmp
pushf
popl
push
call
pushf
popl
pushf
call
mov
push
pushf
jmp
neg
inc
mov
shr
sub
mov
jmp
movb
jmp
xor
pusha
cmc
cbtw
bt
push
cwtl
bt
test
cmp
sub
pushf
call
movb
dec
call
push
mov
call
pushf
mov
mov
jmp
pushl
jmp
lea
push
mov
pushf
pusha
bswap
cwtl
mov
mov
jmp
mov
mov
mov
lea
jmp
add
pusha
movl
pushf
mov
pushl
call
movb
pushf
repz
popl
mov
mov
pushl
movb
lea
jmp
movw
call
pushf
daa
mov
test
mov
sub
call
mov
push
lea
jmp
jmp
mov
mov
push
pushf
pushf
mov
jmp
mov
jmp
and
bsf
sbb
mov
call
mov
jmp
xor
jmp
lea
jp
pusha
pusha
mov
call
push
push
pusha
mov
mov
pushf
pushl
lea
jmp
mov
movb
movb
push
mov
jmp
pushf
mov
push
mov
pusha
pushf
lea
jmp
pusha
pushf
pushf
movb
mov
pusha
mov
pushf
movw
movw
mov
movw
jmp
jmp
pushf
jmp
call
pushf
mov
xor
pushf
not
pushf
pushl
pushf
inc
call
mov
movb
mov
pushf
movb
mov
movb
mov
pushf
pushf
push
pushf
lea
jmp
inc
stc
pushf
bt
sub
pushf
pushf
mov
mov
mov
lea
jmp
pushf
pushf
jmp
cmc
shld
pushf
call
not
bt
and
shl
mov
jg
pusha
xor
call
jmp
call
jmp
call
movsbw
mov
pushf
mov
lea
pushf
popl
jmp
mov
push
repz
popl
mov
pushl
lea
jmp
mov
pushf
movb
mov
jmp
mov
pushf
movb
mov
jmp
pushf
pushl
pushl
popl
movb
mov
pushf
pushf
lea
jmp
mov
mov
pushl
mov
push
repz
popl
mov
lea
jmp
mov
lea
jne
pusha
sub
call
inc
stc
neg
call
movw
mov
call
pushf
push
mov
jmp
push
add
push
pushf
pusha
pushf
popl
movb
call
neg
cmp
clc
add
stc
bt
pushf
xor
bt
clc
cmp
cmp
sub
stc
cmp
bt
jmp
ror
mov
push
sbb
not
mov
lea
ja
sub
pusha
bt
bt
shr
call
pushf
mov
pushf
jmp
cmp
sub
jmp
pushf
mov
pushf
jmp
mov
call
jmp
push
push
pushf
movb
mov
pusha
mov
pusha
jmp
pushf
pushl
pushl
popl
pushf
pushf
pushf
lea
jmp
bsf
mov
jmp
repz
popl
mov
push
lea
jmp
mov
pushf
pushf
pushf
mov
pushf
mov
movb
jmp
lea
jnp
pushf
not
jmp
pushl
movb
jmp
jmp
sub
pushf
pushf
pushl
jmp
bts
lea
test
lea
mov
shrd
rcr
mov
bt
clc
add
pusha
jmp
test
bswap
inc
sub
mov
cmc
add
jmp
mov
pushl
mov
lea
jmp
lea
bswap
mov
jae
push
pusha
lea
mov
pushf
mov
mov
movw
lea
jmp
push
pusha
mov
pusha
mov
call
call
mov
pusha
mov
push
call
xchg
jmp
das
sete
test
cmp
mov
clc
pusha
stc
add
pusha
pushf
push
push
mov
pushl
jmp
sub
clc
pusha
test
cmp
and
push
pushl
lea
jb
pushf
call
pushf
call
sub
pushl
cmc
cmc
mov
shl
movw
pushf
pusha
lea
jge
mov
jnp
pushf
jmp
mov
pushf
jmp
mov
call
mov
call
jmp
pushf
push
mov
call
add
pushl
call
cmpl
call
call
mov
mov
push
push
pushf
mov
pushf
mov
pushl
movb
pushf
mov
jmp
stc
inc
bt
mov
cmc
call
mov
mov
pushf
popl
pushf
pushl
popl
push
lea
jmp
push
movw
call
