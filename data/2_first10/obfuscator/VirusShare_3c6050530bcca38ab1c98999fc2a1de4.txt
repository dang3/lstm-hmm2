add
fucomi
add
or
pcmpeqb
or
rcr
push
cld
pop
add
orps
rol
and
movw
sbb
sub
or
movb
or
jmp
sbb
inc
add
cld
pop
pminsw
add
sbb
or
shr
and
movl
sbb
or
sub
sbb
paddw
or
imul
pmulhw
sub
xor
movb
push
stc
pop
or
jg
sub
jne
adc
punpcklwd
xor
or
jmp
mov
imul
add
add
shr
inc
movb
and
addps
or
pcmpgtw
push
xchg
pop
jmp
leave
add
xchg
pop
jmp
sbb
rcl
jne
xor
xchg
movb
psubusb
js
or
jns
unpckhps
adc
subps
movl
add
unpcklps
xor
or
xor
sub
add
movlhps
sub
inc
movl
sbb
and
sub
sbb
je
and
add
jmp
repnz
add
add
jo
add
imul
sub
rcl
jl
push
cmc
pop
or
ror
ja
jmp
inc
jo
adc
and
jmp
test
notb
add
mov
lret
jno
add
or
call
jmp
xchg
add
pop
sub
movb
and
ja
paddd
shr
jmp
outsb
dec
clc
xor
psrad
jmp
ret
orb
rclb
hlt
adc
movb
shr
push
stc
pop
ja
xchg
cmpl
jne
adc
mov
jmp
add
push
cmpsb
dec
adc
out
adc
dec
push
pop
lds
mov
stos
mov
in
inc
dec
push
in
inc
mov
clc
mov
cmc
scas
sti
cwtl
mov
adc
movsb
mov
mov
mov
jnp
lods
out
adc
stos
pop
lods
cmc
scas
inc
jp
aas
add
mov
gs
jno
cmc
scas
inc
jp
stos
sub
inc
dec
push
jnp
mov
lods
adc
mov
sti
jbe
scas
adc
divl
or
mov
cwtl
fildll
adc
test
sti
lods
out
adc
xor
cmp
lods
adc
mov
cmp
mov
lea
adc
scas
mov
adc
lea
push
stc
mov
data16
add
mov
gs
mov
lret
mov
push
shll
xor
mov
ds
xchg
jle
mov
cmp
mov
xchg
or
nop
lods
adc
mov
cwtl
lds
and
add
mov
mov
dec
clc
test
lods
mov
in
inc
dec
push
cs
pop
scas
adc
andb
jne
cwtl
mov
mov
in
inc
gs
cmp
cwtl
mov
pusha
inc
xor
lea
cmpsb
cwtl
imul
and
cmp
cwtl
mov
test
ret
xor
mov
mov
adc
cmc
lahf
lcall
scas
adc
cmc
lahf
cwtl
stc
mov
scas
lcall
xchg
sbb
out
pop
xor
mov
inc
cmp
cwtl
stos
rorl
and
mov
pushl
sub
aas
subl
aas
subl
aas
subl
aas
xorl
testb
sti
cwtl
mov
pop
cwtl
inc
jecxz
xor
popf
mov
fcmovu
loopne,pt
cmp
adc
js,pt
inc
loop
imul
adc
sub
mov
popf
xchg
cwtl
test
cmpsl
clc
pusha
mov
popf
mov
mov
das
xor
scas
adc
mov
xchg
cmp
js
dec
mov
pop
mov
mov
push
loopne
outsl
sarb
shlb
add
mov
nop
xorl
sub
sbb
adc
dec
push
adc
jo
sarl
mov
aam
sbb
adc
dec
push
adc
jo
sarl
out
notb
mov
add
nop
js
sub
mov
ficoml
mov
mov
ds
adc
imul
imul
je
roll
jg,pt
jns
scas
adc
lods
sub
mov
test
mov
push
or
cltd
and
cmp
lcall
cmpsl
jb
dec
gs
sub
or
scas
adc
mov
pop
adc
jae
jnp
mov
dec
adc
jae
jnp
mov
jp
mov
jae
inc
rcll
push
mov
mov
lcall
pop
add
mov
test
inc
fstl
stc
mov
sti
push
mov
adc
mov
aad
loopne
js
mov
cmp
out
addr16
aam
push
lret
ror
adc
addr16
aam
push
aad
shlb
shlb
jno
aam
push
mov
jbe
in
jl
hlt
lret
ja
rcr
pusha
mov
flds
pop
int
sarl
stc
jp
ret
ljmp
adc
rcr
int3
shr
fcmovnb
enter
jge
hlt
scas
pop
int
fidivl
int3
out
fnstsw
rol
xlat
in
jl
rcr
pusha
mov
mov
adc
mov
adc
mov
push
mov
hlt
scas
adc
add
sti
mov
add
fadds
add
dec
or
add
add
add
add
add
add
add
add
add
push
icebp
notb
js
pushf
cltd
jne
sub
xor
loop
jmp
cmc
ret
sarb
jnp
or
sub
add
mov
add
add
add
xchg
and
cmp
jbe
xchg
jnp
rcll
mov
inc
fwait
cld
adc
pusha
loop
sbb
enter
and
mov
int
jnp
sbb
mov
sahf
push
nop
inc
jo
and
cld
pop
shrl
loopne
add
add
add
add
add
add
dec
cmp
add
add
add
add
movsb
lds
add
add
inc
add
add
add
mul
jmp
add
out
dec
add
add
add
add
sbb
add
add
add
add
jne
add
add
add
add
aad
add
add
add
add
pop
add
inc
add
dec
add
add
add
add
add
movb
add
add
xlat
add
add
fld1
add
add
add
lock
mov
add
add
add
add
icebp
test
stos
xor
add
loopne
mov
add
dec
or
add
add
loope
pop
arpl
add
jne
add
xchg
sbb
add
aad
filds
add
dec
neg
insl
dec
add
add
add
add
xchg
add
ret
add
imul
daa
add
jl
add
add
push
mov
mov
add
pop
adc
add
add
and
mov
fdivl
cmp
cmp
mov
call
xor
popa
sahf
push
dec
mov
test
loopne
adc
mov
sbb
or
dec
jo
add
mov
jno
jb
add
das
jae
adc
test
fisttpll
test
push
js
jb
rcr
mov
lret
inc
orb
or
push
iret
cmp
aad
jp
or
jne
cmp
sub
ss
or
mov
xlat
jo
lret
scas
xor
aas
mov
fs
cmp
popa
std
and
or
sub
inc
fs
mov
add
mov
pop
jno
mov
les
nop
jl
cld
push
or
icebp
jo
xor
imul
ret
outsl
xchg
not
scas
iret
inc
out
add
pop
loope
in
fchs
in
arpl
sbb
pop
pop
int3
mov
xchg
enter
aam
xchg
jo
test
jle
sbb
or
adc
test
sub
cmpsb
sub
jnp
pop
aad
ret
stc
popa
into
daa
leave
in
cli
pop
jae
ret
movsb
and
lock
inc
je
inc
enter
in
ret
mov
jno
sbb
or
ja
call
daa
lahf
sub
pop
orb
dec
mov
jb
pop
mov
fbstp
sbb
shrb
adc
sbb
in
mov
dec
inc
aaa
incl
jbe
dec
repz
fsubl
inc
stos
addb
in
mov
shr
icebp
call
lret
repnz
daa
dec
repnz
sbb
std
jmp
popf
into
xchg
adc
out
jb
cltd
jg
push
test
or
aaa
mov
rclb
push
repnz
aam
mov
jmp
je
mov
inc
divl
push
fidivs
aas
mov
mov
lret
dec
xlat
ret
in
dec
shrl
push
js
dec
xor
fidivrl
push
mov
mov
push
adc
push
push
cmpsb
sti
into
out
jge
dec
pop
sbb
sub
pop
add
pop
xorl
jbe
xchg
pop
jl
mov
xlat
pop
int3
fdivr
out
stos
outsl
addb
push
sahf
mov
out
fmuls
inc
dec
mov
push
jbe
push
test
andb
inc
mov
and
hlt
iret
jg
xchg
push
out
mov
shll
cs
sub
adc
out
popa
push
loope
js
sub
data16
jno
popa
aaa
loopne
mov
cwtl
jle
dec
jnp
popf
mov
jnp
cltd
or
outsb
das
outsb
into
fs
sti
push
cltd
push
insl
or
out
jp
call
jle
mov
data16
lea
into
sub
dec
inc
imul
sub
sbb
sahf
cmpsl
pop
popa
jae
push
push
push
rclb
into
cld
push
sub
loope
call
dec
lcall
cmp
jnp
rolb
jp
jne
fwait
stos
repz
add
test
mov
mov
and
xchg
jge
mov
sub
lahf
out
push
pop
test
mov
sub
mov
jle
leave
pop
or
fidivrl
mov
in
xchg
cmp
sbb
pop
and
addl
test
dec
cmc
scas
dec
mov
mov
mov
xor
sarb
imul
cmp
push
adc
cld
mov
jg
fisttpll
mov
lods
fldl
dec
or
jge
test
adc
inc
test
js
sub
cs
pop
mov
shrl
std
aad
inc
in
mov
lret
lea
and
dec
inc
mov
add
int3
fwait
mov
roll
movsb
mov
jg
or
xor
bound
adc
inc
scas
jo
mov
call
jmp
test
pop
xor
xchg
sti
inc
jmp
stc
cmc
push
aas
add
or
dec
mov
fldcw
or
xchg
jne
out
push
cmp
fsubrl
ss
mov
push
lahf
add
dec
push
hlt
mov
data16
out
sub
in
das
cmp
iret
clc
xorl
jg
push
sbb
shrl
js
mov
pop
or
sarb
movsl
and
xchg
out
pop
mov
or
or
cltd
mov
mov
lahf
sub
pushl
inc
in
les
arpl
inc
hlt
push
dec
hlt
adc
ja
loope
jb
lods
push
lock
dec
ss
cmp
or
cmp
pop
imul
mov
xlat
dec
mov
push
push
xor
sub
add
loope
sbb
pop
shll
dec
outsl
jne
xchg
pop
sbb
cmpsb
xor
lret
ja
aam
stc
and
add
add
cld
cmp
xor
or
std
movsl
bound
add
xchg
jl
add
fidivrl
adc
fmuls
test
inc
ret
jb
ret
das
sbb
int
jmp
add
mov
mov
nop
jg
arpl
loope
test
xchg
dec
mov
repnz
cli
movsl
pop
jne
sub
push
out
pop
cmc
test
pusha
push
in
repz
aas
popf
lods
push
stc
aad
and
testb
sarb
dec
cli
pop
fimuls
xor
pop
push
mov
add
xor
js
sub
cmpsb
mov
sub
dec
cmp
lret
mov
leave
outsb
mov
xor
fistpll
mov
pop
push
js
adc
int3
jbe
push
sub
ret
sub
xchg
jl
outsl
add
sbb
jae
mov
jns
jmp
ret
dec
and
sbb
pop
punpckhdq
or
add
dec
mov
test
lods
testl
inc
pop
mov
cmp
popa
push
push
test
xor
mov
or
mov
push
sub
fidivrs
jnp
or
cwtl
mov
add
dec
cmp
inc
mov
addb
mov
imul
jo
mov
shll
rcrb
or
jbe
xor
adc
inc
fcoml
lcall
xchg
negl
xor
jecxz
xchg
add
in
adc
nop
in
mov
loope
dec
shrl
jle
push
xlat
xchg
arpl
ret
dec
mov
fmul
adc
aam
mov
enter
fs
aaa
or
sti
dec
fistl
aad
pusha
std
ret
and
test
lret
jo
lods
test
pop
testl
mov
push
xor
mov
or
ss
enter
jecxz
inc
add
jns
aad
outsl
mov
cmp
xor
hlt
or
lahf
inc
ljmp
xor
loop
das
test
or
mov
je
nop
xor
sub
push
adc
cwtl
hlt
sub
paddsb
xchg
lds
imul
es
sbb
sub
pop
ss
xor
in
loop
aaa
sahf
fstps
lret
lahf
lret
lods
es
cmp
push
dec
inc
orl
push
inc
insb
dec
xchg
or
fnstsw
lret
aam
cmc
std
inc
je
pop
mov
test
dec
das
loope
cmpb
sahf
xchg
jmp
dec
ss
aad
adc
add
fnstsw
into
ja
pushw
int
mov
pop
pop
ja
push
sub
ja
sub
xor
sbb
or
mov
cltd
mov
test
jle
push
jne
jle
aaa
inc
jl
push
in
cmc
inc
adc
mov
nop
and
ficoml
decl
ret
int
imul
fidivs
pop
pop
pushf
mov
mov
dec
mov
ss
mov
sub
jae
sub
scas
insb
fistl
shrb
pop
rol
sbb
cmp
adc
lock
mov
jbe
gs
add
pop
pop
lret
lret
sub
sti
nop
stc
inc
stc
lahf
leave
outsb
mov
js
cmp
loop
or
xorl
ss
sahf
or
cmc
mov
sub
es
rcl
mov
jmp
xor
std
dec
or
adc
outsl
fwait
cld
xchg
iret
mov
in
cmc
fdivrs
cltd
ss
idiv
sbb
stos
push
push
iret
or
mov
dec
hlt
mov
subb
jno
imulb
cmp
fstps
cmp
lret
shl
adc
call
jbe
or
adc
aaa
subb
pusha
mov
xchg
dec
orl
sar
cli
icebp
repz
xor
push
insb
repz
sbb
addr16
add
les
rol
or
repz
test
jmp
loope
testb
sub
xlat
inc
adc
add
popa
repnz
dec
jle
int3
mov
je
lods
gs
rorb
dec
idiv
mov
push
cmovbe
xchg
pop
fucomip
xchg
pushf
das
adc
or
stc
notl
ret
pop
pop
xchg
dec
pop
adc
mov
out
pop
shll
dec
ljmp
rcl
cwtl
loop
push
xor
int3
and
sbb
or
loop
xlat
adc
repnz
enter
mov
mov
adc
bound
sbb
inc
add
fwait
in
out
gs
xor
stos
adc
mov
sub
jns
jae
push
inc
loopne
fwait
int3
neg
dec
jge
xor
mov
inc
hlt
push
subl
clc
bound
fdivrs
jne
sar
nop
mov
shrb
mov
jae
push
imulb
stos
std
cmpsl
inc
add
push
push
aas
lret
add
cmpsl
fwait
sti
cmp
pop
aas
int3
lods
out
sbb
sarb
push
sbb
inc
lods
lcall
xor
jae
std
lea
or
inc
scas
loopne
xchg
fcompl
sbb
mov
int3
sbb
call
mov
lods
mov
add
lds
sarl
add
ret
repnz
jb
lds
aad
xchg
xchg
nop
int
push
add
xchg
xchg
shrl
leave
imul
or
and
insl
mov
xchg
repnz
pop
pop
jo
mov
rorl
dec
jnp
inc
sbb
roll
sub
cmp
and
mov
nop
stos
lret
sti
sub
sbbl
or
jne
stos
pop
push
push
arpl
pop
sub
mov
pushf
out
sub
insl
fcmovne
push
inc
xchg
xor
mov
in
jbe
dec
pop
mov
adc
xchg
adc
inc
adc
pop
cwtl
inc
mov
fdivrs
inc
ja
mov
adc
fidivl
xor
or
hlt
jl
push
pop
enter
mov
adc
jle
shll
shll
fisubrl
jle
fnstcw
mov
cli
popf
insb
jmp
mov
cwtl
pop
or
out
data16
adc
cmpsl
push
data16
jns
sbb
dec
je
cmp
or
mov
xchg
stc
mov
add
clc
adc
adc
xlat
test
loope
inc
xor
popa
mov
pop
imul
inc
dec
pop
mov
fcom
ds
jbe
insl
add
dec
fistpl
test
std
mov
ss
out
out
fwait
lcall
iret
mov
dec
out
cmp
pop
adc
sar
dec
notl
icebp
data16
inc
jo
jnp
mov
push
sub
push
push
mov
inc
add
jo
pop
inc
addr16
leave
jl
mov
faddl
fidivs
mov
xchg
js
fisttps
pop
xor
xchg
nop
push
sbb
cmp
lcall
mov
in
mov
mov
xor
dec
ds
ret
scas
jns
push
and
jp
rcrl
decb
pop
js
xchg
insl
repnz
jmp
adc
push
cmp
loope
out
inc
sbb
in
push
loope
push
std
or
call
cmovge
inc
andb
xor
fisubrs
push
mov
mov
xchg
out
into
testl
testb
cli
movsl
jae
mov
stc
out
mov
aas
pop
fldcw
dec
sub
out
test
sub
xchg
xor
mov
ljmp
ljmp
mov
lods
mov
lock
cltd
inc
cmpl
jge
pop
mov
fnsave
cmpsb
js
mov
sbbb
push
int
ret
lds
sub
and
rcrl
enter
adc
push
dec
fisubrs
mov
mov
pop
shl
jo
gs
push
push
shrb
ror
test
mov
inc
jae
in
fbstp
popf
inc
pop
sti
mov
insl
shlb
movsl
pushw
repnz
pop
xor
daa
loop
mov
or
xor
cmpsb
mov
jp
xchg
sbb
cmp
pushf
outsb
movsl
add
jmp
fiadds
mov
cmpsb
adc
mov
leave
std
sbb
rolb
cmp
dec
test
sbb
inc
loop
mov
hlt
sahf
shr
es
pop
inc
sbb
rcrl
sarl
sub
mov
jb
jmp
lock
bound
xchg
xchg
mov
jo
bound
cmc
mov
rcr
and
adc
mov
ret
xchg
fiadds
dec
mov
fmuls
jecxz
test
mov
bound
data16
fstps
leave
xor
push
mov
rcll
inc
push
lods
call
push
mov
mov
or
les
xchg
enter
xchg
int3
and
scas
jp
out
mov
ljmp
xchg
mov
pop
mov
mov
xorb
jp
popa
xchg
cmp
out
cmp
push
sbb
stos
add
push
out
cmpsb
mov
xchg
popf
mov
cmpsb
lcall
jecxz
movsl
daa
sahf
mov
loope
and
lret
faddl
dec
or
xchg
clc
out
xchg
xchg
fcmovu
jno
add
sub
and
loopne
ret
sbbb
jne
and
std
es
pop
cmp
mov
ljmp
pop
and
testb
cld
nop
xor
rorl
pop
sbb
dec
aaa
adc
lahf
jmp
aas
fidivs
dec
into
leave
shlb
xor
sub
pop
jg
mov
mov
push
sbbl
jnp
jle
aam
pop
ds
in
mov
shlb
enter
in
dec
pop
jle
sub
and
fisubrl
addb
cmp
pop
js
mov
jmp
mov
cmc
push
inc
adc
popa
ds
jmp
jp
dec
std
sub
call
lcall
or
aam
push
pusha
repz
lea
rol
out
jge
push
scas
inc
cmp
sbb
insb
leave
sbbl
rorb
mov
ja
dec
adc
sub
dec
mov
adc
xchg
clc
sub
js
in
sbb
mov
sub
xchg
mov
push
nop
fimull
popa
xchg
int3
addr16
rorl
aas
sbb
xor
mov
js
jne
adc
cmp
aam
fmul
loopne
enter
sbb
shr
push
call
arpl
pop
movsb
push
sbb
push
lret
stos
cli
xchg
jbe
jae
cmp
cmp
xchg
scas
ljmp
fisttps
in
lahf
jl
ss
push
mov
push
pop
fcmovnu
xor
and
adc
sub
mov
test
arpl
push
adcl
push
mov
pop
add
lcall
pop
push
shrb
popa
mov
adc
into
fwait
mov
adc
aad
das
test
repz
aad
sbb
test
les
xchg
add
clc
aam
sub
dec
ret
ljmp
mov
outsb
inc
mov
test
sbb
cmp
sbb
fs
mov
pop
push
pop
or
push
scas
adc
push
ja
sub
in
aad
jl
jne
call
sbb
int3
stos
or
sbb
scas
lods
mov
add
pop
jg
popf
data16
cmp
mov
movsl
push
adc
jecxz
int
mov
jp
jb
movsl
push
je
jbe
jl
fisubrl
idivb
mov
push
add
add
push
xchg
xchg
mov
push
inc
pop
sar
sub
dec
push
inc
mov
into
jg
sub
xchg
addl
mov
xor
popa
pop
lahf
xchg
push
enter
pusha
mov
push
fsts
inc
out
xor
sbb
mov
arpl
fisttpl
mov
lds
lahf
cmp
mov
mov
push
mov
cld
daa
aaa
shrl
jne
inc
outsb
mov
fcoml
cmp
jns
adc
les
push
fwait
out
ret
sbb
movsb
cmp
cmp
out
subl
cmp
push
dec
fwait
das
repnz
repnz
out
call
jecxz
mov
mov
or
mov
out
js
movsl
xchg
or
pop
sub
push
xchg
les
fwait
and
push
xchg
dec
xor
fists
or
add
sbb
mov
arpl
cld
faddp
adc
push
in
clc
or
sbb
push
loop
inc
push
movsb
mov
mov
addb
xchg
fsubrl
cwtl
lock
test
fs
xchg
fdivl
inc
sbb
xchg
mov
in
loope
shr
mov
add
jp
dec
movsb
cs
in
repnz
jle
sub
xor
cmp
cwtl
fldt
ret
aam
pusha
jmp
inc
push
adc
fs
rolb
jmp
fnsave
sub
out
mov
mov
imul
xchg
scas
xchg
aaa
hlt
ss
adc
jns
adc
imul
lcall
mov
push
and
loope
push
mov
jg
xor
pop
pusha
jmp
jb
xor
mov
lahf
inc
incb
dec
or
adc
sbb
insl
push
adc
push
and
and
mov
int
lods
cli
xchg
sbb
nop
push
repnz
test
sub
xchg
loope
ja
bound
les
push
stos
lds
xor
stos
les
fidivl
xchg
test
stc
jge
aad
popa
jne
mov
fmul
xchg
xchg
popa
pop
mov
xor
xchg
sub
mov
sub
xchg
push
or
lea
imul
int3
cltd
outsb
pop
cmp
ja
rcll
fmulp
xchg
mov
pusha
sarb
xchg
roll
insl
sub
pop
jns
daa
cmp
call
mov
inc
and
mov
push
push
fwait
scas
xor
cli
jmp
out
jp
in
jg
popa
fdivl
jno
cmp
dec
sub
movsl
inc
incb
icebp
test
adc
rcll
cs
fistpll
inc
idivl
cmp
pop
or
xchg
adcb
cmc
ret
and
cmpsb
push
inc
bound
mov
jo
ret
fdivp
pcmpeqw
sahf
fists
imul
dec
clc
mov
in
inc
pop
or
call
jne
or
lcall
mov
sub
sub
test
js
orb
ret
sbb
popf
out
sarl
dec
cli
add
shll
xchg
addr16
sbb
jmp
and
and
mov
adcl
movsb
mov
pop
sbb
jg
aaa
or
mov
push
jns
mov
xorl
pop
jl
ss
push
nop
stos
pop
leave
cmpsb
mov
pushf
pushf
sti
mov
imul
cmp
pushf
xlat
aad
int
adc
popa
fcom
divl
mov
pop
in
loop
fwait
std
pop
dec
ret
cs
xor
bound
xlat
gs
loope
roll
sub
jmp
out
sub
push
imul
mov
cmpsl
or
sbb
ds
push
or
xor
test
xor
xorl
dec
aad
addr16
or
imul
mov
jmp
ror
arpl
pop
incl
cmp
lods
and
push
inc
out
mov
leave
pushf
and
push
icebp
fldcw
aaa
adc
xchg
xor
cmp
test
adc
pushaw
nop
fcoms
push
jle
andl
sbb
push
stos
adcl
cmp
mov
pop
mov
push
ficoms
sbb
lods
sub
sub
push
fwait
push
ja
mov
sbb
pop
insl
shlb
add
addl
cmp
xchg
lods
mov
lahf
jae
ffree
push
mov
lret
or
insl
pop
xchg
xor
and
in
xor
jg
dec
push
ja
push
mov
or
jp
or
jge
popf
xchg
aaa
ja
fst
or
mov
jne
std
imul
popf
in
test
sub
mov
dec
mov
mov
cmp
test
cltd
fistpl
pop
loopne
inc
aam
sub
ss
and
dec
outsb
add
jl
mov
add
dec
push
adc
sbb
dec
pusha
xor
jno
jecxz
sahf
cltd
hlt
sbb
popf
lock
inc
jmp
push
cltd
xor
cli
test
xchg
and
mov
add
jg
sub
fsubp
sub
pop
sbb
sub
jecxz
and
hlt
in
xchg
push
sbb
lcall
add
sub
mov
stc
imul
nop
pop
testl
dec
in
cmc
pop
lea
xchg
or
pop
push
roll
sar
sbb
xchg
cltd
repnz
pop
or
aas
push
push
cmc
xor
imul
ret
jno
push
push
push
xor
sarl
fidivrs
pop
adc
test
ret
sbb
ftst
and
xlat
sahf
push
cmp
scas
mov
fwait
mov
xor
adc
lods
mov
push
in
std
xor
je
mov
add
adc
mov
lcall
mov
jo
jge
test
mov
imul
or
jge
popf
std
mov
mov
mov
hlt
mov
outsb
outsl
dec
pop
enter
sbb
push
xor
lds
push
addr16
add
leave
aas
sbb
fdivl
fbld
sub
xchg
icebp
cmp
mov
cmpsb
lock
cli
mov
scas
mov
jl
xchg
in
pop
shll
jp
jmp
mov
mov
cmp
adc
test
add
lret
jge
fmull
and
inc
xchg
push
cmp
mov
jae
cmp
int3
xor
fists
xchg
cmp
lods
test
rorb
in
adc
stos
scas
dec
xchg
cmp
lahf
stos
xchg
dec
push
or
loopne
out
sub
daa
inc
scas
and
jmp
loop
mov
pop
adc
xor
push
leave
add
xchg
loopne
fcmovnu
fdivp
in
add
xor
jae
movsb
inc
and
cmpl
lods
mov
ja
jnp
push
pop
movsl
mov
xor
gs
cmpsl
pop
test
ror
aaa
dec
adc
adc
add
mov
xor
test
adc
sub
xchg
jnp
cli
in
int3
inc
adc
arpl
mov
sbb
loop
push
inc
lret
out
fwait
inc
pop
das
mov
inc
xor
mov
push
cmp
in
hlt
adc
lcall
scas
jecxz
ja
call
lods
mov
dec
enter
rorb
pushf
std
push
push
test
and
push
nop
int
imul
cmpsl
sub
es
das
sub
jnp
lds
enter
loopne
scas
mov
xchg
mov
push
movsl
cltd
gs
or
mov
and
push
adc
stc
test
and
cmp
cmp
ds
hlt
cld
xor
jne
push
jnp
add
test
adc
adc
xor
xor
inc
cltd
pop
push
add
in
jbe
cmc
test
xchg
std
xor
cmp
lahf
sti
ss
jg
xchg
jp
in
jl
pop
add
hlt
ja
arpl
mov
enter
hlt
aas
aad
pop
enter
add
jle
cmp
xor
adcl
mov
jne
mov
inc
fstsw
aad
lret
sbb
ss
xor
xchg
out
mov
mov
mov
sarb
fs
pop
es
adc
push
jnp
dec
ficoml
mov
mov
jnp
push
and
add
adc
jle
jne
xor
add
std
add
jo
pop
mov
jo
dec
push
mov
lea
adc
fwait
mov
jnp
add
mov
xchg
add
repnz
push
xchg
addl
push
les
push
cmp
push
ss
pop
add
lcall
push
xchg
in
inc
cwtl
imul
test
test
adcl
loopne
lahf
ljmp
jmp
jb
icebp
stos
mov
jb
lods
sbb
pop
outsb
popa
sub
or
pop
jmp
dec
sub
xor
mov
andl
call
pop
push
and
sub
shlb
fldcw
jns
mov
xorl
es
stos
pop
aam
cmp
mov
test
xor
sbb
stc
das
cmp
add
sti
dec
sub
xchg
fisubs
daa
aad
jl
inc
iret
mov
pop
in
adc
mov
jbe
test
dec
xchg
pop
xchg
dec
ficomps
out
dec
cmpsb
adc
mov
cltd
das
mov
subl
push
mov
pop
addr16
out
jle
xorb
jbe
or
pop
jecxz
jnp
pop
lret
ret
lret
jns
gs
dec
jb
mov
into
or
ss
mov
filds
mov
inc
or
inc
jne
iret
xor
orl
lret
pushf
jo
jnp
sbb
gs
push
sti
xlat
lea
dec
mov
xor
stos
sahf
dec
mov
cwtl
test
fs
mov
test
inc
aam
cmpl
add
rep
sbb
out
xchg
pop
out
push
sbb
in
sub
add
mov
push
pop
fmull
xor
js
les
mov
jo
fistl
push
lods
dec
rcrl
call
out
dec
xor
call
stos
stos
xchg
jns
aas
bound
pop
lahf
clc
ret
leave
ds
addb
ja
mov
ja
arpl
inc
movsl
lret
jp
mov
push
mov
enter
sub
add
psubq
jle
fiadds
sub
pop
sub
mov
stos
repz
mov
jp
mov
out
addr16
pusha
dec
pop
mov
pop
sarb
mov
jnp
jno
sub
adc
mov
jg
dec
scas
mov
sahf
shll
or
movsl
pop
xor
or
andb
or
and
and
mov
jbe
repnz
sbb
mov
xchg
xor
stos
add
mov
fisttpll
mov
add
shll
cmpl
lods
cmpsl
in
cmpl
push
andb
jmp
push
test
hlt
push
and
adc
cmp
mov
lcall
pop
pop
mov
mov
stos
je
or
cmp
mov
cmpsb
leave
sub
aad
dec
js
enter
int
inc
jmp
out
fistpl
daa
lds
jge
pslld
jmp
icebp
test
cwtl
test
adc
mov
je
mov
or
push
sub
jne
jg
fidivs
notl
sub
xor
dec
test
sbb
xlat
daa
or
mov
pop
xor
fidivs
jl
and
movsl
xchg
notl
ljmp
xor
sahf
xchg
or
mov
test
push
ljmp
scas
xorl
sti
pop
jnp
rcr
mov
ljmp
and
test
sub
sbb
jmp
es
pop
imul
testb
imul
test
push
cmp
popf
lret
jnp
jns
jg
inc
movsl
movsl
cmp
and
jmp
jecxz
jg
push
jae
rol
mov
pop
pushf
sub
sbb
cltd
xor
sbb
mov
xchg
fldpi
popa
jo
bound
mov
cmpsl
inc
and
test
jae
xor
xor
jg
dec
loope
call
push
daa
adc
mov
sahf
xor
sahf
xor
jl
and
jo
jne
movsb
jbe
or
insb
leave
pop
push
xor
xchg
mov
mov
jnp
and
lea
lds
fucomp
or
insb
pop
inc
sti
pop
cltd
and
ficoml
hlt
mov
sub
loope
xor
jno
mov
and
jp
mov
sbb
test
es
hlt
pop
lcall
je
xor
jne
sqrtps
pop
ret
addr16
aad
pop
dec
jae
inc
adcb
pshufw
jecxz
add
subb
mov
jne
add
xchg
dec
in
aam
sarb
inc
xchg
dec
xchg
lgs
or
pushf
jmp
mov
xchg
xor
cmpsl
fldt
push
insb
push
dec
daa
inc
es
inc
or
jle
dec
sti
and
jp
pop
dec
arpl
lods
iret
cltd
cmpsb
aad
lods
call
xchg
faddp
mov
mov
jp
mov
ljmp
mov
mov
cmp
jb
std
xchg
push
jge
mov
mov
or
push
xor
jecxz
andl
stos
xchg
push
sub
test
es
push
mov
ds
imul
xchg
cwtl
jb
or
jae
mov
fwait
dec
or
js
mov
iret
dec
jne
mov
enter
cmovl
je
in
cmpsb
pushl
mov
mov
cmp
lods
mov
stos
stc
cs
xor
scas
stos
add
push
fwait
cli
outsb
lock
sti
sti
jno
xor
arpl
iret
std
std
sub
addr16
dec
mov
add
cs
sub
insb
cs
mov
sti
imul
aas
mov
xor
addr16
xchg
mov
sti
sub
int3
sbb
adcb
gs
add
insb
lcall
pop
mov
pop
mov
sarb
and
or
lret
outsl
add
jecxz
sbbl
pop
inc
xchg
rcrl
cmp
andb
mov
int
or
xor
inc
push
push
movsb
add
punpckhdq
mov
dec
jbe
cmp
dec
pop
rorb
add
cmp
xor
pop
jmp
repz
enter
dec
cld
jbe
jecxz
sub
loopne
sahf
dec
cmp
push
cli
mov
push
es
popf
int
jle
in
cmp
or
ret
sar
test
add
in
cmpsb
pop
and
adcl
shll
mov
es
imul
repz
mov
jbe
xchg
mov
mov
cmp
mov
lds
mov
jle
push
sub
lcall
scas
ljmp
lea
add
xchg
dec
mov
push
test
mov
pushf
pop
lret
test
call
sub
push
rolb
out
pushf
out
int
mov
push
adc
adc
push
and
sbb
aaa
xor
xchg
mov
add
iret
aaa
out
add
adc
in
cmp
pop
aam
cmp
add
ds
push
daa
aas
sub
gs
pop
mov
sbb
jae
gs
leave
andl
dec
popa
aad
or
loop
dec
das
cmp
pop
notl
inc
fnstsw
cli
inc
out
xchg
je
xor
or
sti
arpl
sbb
xchg
pop
adc
cmpsb
lret
pop
mov
int3
rolb
and
xchg
push
fucomp
test
add
ss
push
sub
rcll
pop
mov
jl
cmpsl
mov
push
add
and
fisubl
sub
push
sub
and
and
cltd
inc
add
clc
mov
mov
sti
xchg
pop
lret
inc
cwtl
jmp
xchg
ljmp
pusha
fcoms
add
mov
in
xchg
ljmp
dec
pop
mov
xchg
sbb
enter
jae
dec
mov
mov
rcll
dec
or
or
cmp
popf
hlt
xchg
add
mov
sbb
mov
jp
mov
in
or
push
iret
popa
xchg
push
cwtl
jnp
adc
or
aad
mov
in
insb
push
data16
pushf
xor
or
xchg
loopne
fcomps
jnp
and
cld
xor
movsb
or
pop
cmp
or
scas
and
fsubrl
jnp
adc
add
jle
xor
sbb
cwtl
adc
mov
data16
cmpsb
xchg
js
cmp
out
and
cmpsl
xchg
movsb
dec
ja
sub
lock
adc
or
mov
jo
jbe
xor
mov
dec
mov
stos
shlb
fistps
push
push
cmpsl
in
bnd
pusha
and
cmp
adc
rorb
inc
cmp
in
sbb
mov
jle
xor
xchg
jmp
les
clc
adc
adc
cmp
jb
mov
push
sbb
add
je
pop
push
dec
sti
fwait
push
xchg
pop
leave
aas
test
sub
xor
mov
lret
divb
push
sbb
add
add
packssdw
int
mov
mov
cs
jmp
cmp
enter
mov
dec
out
stos
in
mov
add
nop
and
or
add
loope
cs
in
int
dec
or
mov
and
add
mov
and
arpl
cmpsl
imul
mov
js
push
mov
cmpb
add
hlt
push
cmp
inc
ret
mov
mov
cmpsb
cltd
mov
pop
sub
pop
test
lock
xor
xchg
push
xor
out
and
adc
cmp
adc
hlt
push
jmp
sub
pop
clc
lea
mov
and
mov
addr16
mov
pop
mov
lahf
nop
jle
ljmp
mov
je
or
xor
sub
popf
shrb
inc
fucom
mov
jge
aad
or
jns
pushf
pop
push
pop
movsb
mov
aaa
js
add
pop
adc
xor
push
popf
mov
loopne
sub
repz
fcomi
leave
mov
nop
sub
sbb
and
sub
xor
mov
sbb
imul
pop
pop
ds
xchg
inc
jmp
js
and
sbb
mov
mov
into
rcrl
or
stos
sbb
xor
inc
insb
out
add
hlt
sarb
adc
jmp
ds
les
jbe
adc
jb
inc
dec
test
xor
outsb
sti
cld
pop
mov
pop
shll
testl
fildll
sahf
push
les
enter
push
lock
nop
shlb
lcall
sbb
add
pop
add
stos
lret
jge
lock
fwait
jb
pop
mov
lcall
sahf
fstpl
or
jle
call
fisubl
or
sbb
fiadds
mov
pop
or
sbb
cmpsb
cmp
movsl
addr16
pop
and
mov
in
cmp
ja
inc
mov
push
or
xchg
in
shlb
out
jbe
movsb
mov
xchg
aas
jb
cmp
jns
addr16
xorb
aaa
cmc
and
jp
imul
or
sti
mov
cltd
insb
fnstcw
xchg
adc
addr16
mov
rol
and
clc
mov
xor
and
stc
stc
stc
jmp
xchg
cmp
aam
sbb
dec
xor
scas
xor
enter
sub
mov
xchg
dec
jno
xor
or
mov
adc
dec
mov
sub
pusha
cld
xchg
mov
fsubl
mov
dec
adc
mov
movsb
mov
inc
dec
mov
mov
fstps
fcmovnbe
push
adc
jg
shll
inc
add
push
cmp
add
xor
xchg
sub
xchg
push
leave
adc
xor
dec
mov
mov
and
mov
sbb
pop
or
push
in
adc
cmp
xor
bnd
sar
aaa
leave
xchg
sahf
lock
lock
push
push
cli
imul
ror
mov
lods
scas
fiaddl
cltd
fcoml
cmp
inc
mov
mov
icebp
mov
rcrb
mov
cmc
mov
sahf
xchg
mov
jp
popa
movsl
sub
mov
push
outsb
add
and
push
sti
mov
fstps
inc
movsl
fnstenv
adc
daa
sub
cltd
or
incl
add
mov
mov
sbb
aaa
popf
outsl
jo
pushf
cmp
xchg
repz
jb
rclb
idivb
xchg
dec
fldt
and
sub
pop
roll
fnstsw
and
adc
stc
xchg
adc
xchg
mov
mov
ja
es
mov
nop
push
push
das
addr16
ja
mov
xchg
int3
bswap
xor
repz
insb
add
ja
and
and
ja
push
mov
or
pop
pop
xor
pusha
sti
aam
cmp
push
dec
bound
js
cmp
sbb
imul
sub
out
sarl
out
jnp
addl
push
cmpsl
inc
add
jno
rorl
mov
mov
in
mov
ja
lret
cmc
mov
fldt
stos
fdivr
sub
rcrb
stc
shlb
popa
and
and
mov
pop
adc
xorb
xchg
bnd
fidivl
pop
push
inc
jmp
xor
ljmp
xchg
cltd
gs
adc
cmp
lret
adc
push
adc
stc
ffree
lret
adc
fimull
mov
push
fdivp
cltd
cmp
sbb
das
rorb
lcall
sbbl
in
clc
lock
sahf
das
fists
and
mov
daa
fsubr
xchg
cmp
jo
enter
adc
pop
in
fnstsw
daa
rclb
rcll
lods
stos
mov
arpl
insb
jo
js
int
mov
inc
es
int3
inc
xor
fldcw
inc
sahf
sbb
sub
xlat
pop
jl
and
aaa
loop
or
mov
fistpll
imul
cmp
lock
or
xor
mov
cltd
sbb
test
dec
sbb
or
sbb
mov
lds
popf
cmpxchg
pop
pop
adc
and
dec
loop
pop
inc
inc
ffreep
or
daa
or
lahf
xchg
push
ret
sahf
mov
lahf
inc
xor
xchg
and
lahf
sarl
pop
adc
push
rclb
inc
inc
cmp
popa
ficomps
out
cmp
insb
hlt
sub
and
fsubrs
adc
sub
push
push
push
add
push
out
mov
mov
daa
pop
inc
gs
mov
mov
and
sub
push
testl
push
inc
xor
cmp
and
xchg
mov
lea
mov
and
mov
and
shll
stos
ljmp
dec
out
pop
imul
pop
xor
pop
and
or
pushf
inc
sbbl
mov
xchg
sbb
mov
push
lods
scas
sbbl
inc
dec
mov
scas
mov
decb
lods
pop
adcb
add
push
dec
out
push
jae
push
cmpsb
mov
pop
adc
das
and
repnz
sti
jge
mov
sarb
mov
adc
mov
ds
js
pop
cmpsl
fwait
imul
enter
hlt
loopne
scas
cmp
icebp
sbb
into
mov
movl
adc
mov
jl
jnp
popf
mov
push
push
and
imul
xor
scas
xchg
sub
xor
jge
fisttpll
sub
inc
mov
mov
jb
lret
into
push
out
xchg
adc
pop
icebp
add
stos
push
pop
xor
mov
inc
and
xor
call
pop
fcomps
xchg
add
xor
adc
ds
cmpsl
add
imul
or
adc
in
fimull
bound
and
loope
cmpsb
pop
mov
dec
notl
dec
out
pop
std
xchg
lds
sbb
pop
and
mov
mov
mov
add
jbe
fcompl
pushf
push
lret
cmp
divps
inc
stc
jne
pop
mov
push
mov
jle
jnp
fdivr
cmpb
adc
sub
jmp
mov
jge
jmp
sub
push
shll
mov
dec
sub
in
jge
imul
lea
cmpsl
scas
pusha
mov
shrb
cmp
shll
lret
push
aas
in
fiadds
imul
decb
or
das
rolb
jno
dec
xor
jb
or
les
inc
clc
inc
push
orl
lds
and
rcrb
icebp
add
outsb
loope
test
jl
mov
jecxz
sub
sbb
mov
mov
and
adc
ljmp
dec
outsb
lahf
fucomip
mov
mov
int
aaa
xlat
test
xchg
sbb
push
insb
jnp
or
in
push
push
in
in
in
push
cmp
jmp
shll
jae
pushf
push
insl
arpl
js
mov
mov
dec
dec
cmp
fs
cmp
jmp
cmp
mov
imul
xchg
cmp
sahf
fs
fs
aam
popa
cmc
out
push
cmp
aaa
jge
jecxz
loope
mov
push
das
mov
jecxz
scas
aam
lahf
sbb
test
sub
xor
pop
aaa
stos
testb
fdivl
jl
mov
arpl
pop
add
fdivrp
imul
inc
xchg
mov
test
or
das
dec
sarl
outsl
dec
lock
in
lea
popw
add
jg
je
xor
pop
or
pop
push
sbb
sub
sbb
out
pop
insb
mov
imul
mov
pusha
xor
push
fadds
jo
sbb
fucomi
xchg
loop
push
adc
xor
rorb
cmp
test
call
mov
fdivs
nop
pop
mov
rcrl
pushf
sbb
cli
aam
xor
ret
divl
push
jo
cmp
aaa
cld
rorb
movsb
jle
lods
xchg
stos
cmpsl
push
fimull
inc
push
mov
add
fidivrl
enter
out
inc
jns
aas
add
fildll
inc
push
jp
adc
lret
test
xlat
lock
in
cmp
dec
sub
ror
inc
push
scas
test
xchg
or
cmp
adc
aaa
repnz
adc
shrb
popf
hlt
ljmp
sbb
jg
ja
fisttps
mov
mov
inc
js
push
pop
ret
stos
call
test
outsl
adc
mov
mov
and
pop
outsb
pusha
push
popa
pop
inc
mov
xchg
cmp
cmpl
mov
xor
xchg
add
inc
inc
adc
and
mov
jb
arpl
mov
fstps
push
dec
movsb
adc
xchg
and
scas
repz
mov
push
pushf
pusha
enter
pop
adc
push
cmp
jne
add
mov
mov
and
jmp
cmpsb
xchg
nop
sub
test
and
dec
xchg
mov
out
mov
test
imul
fisubl
push
lahf
push
lret
xor
leave
fnstenv
xor
stos
cltd
orb
ljmp
mov
dec
inc
icebp
mov
mov
das
arpl
lea
test
inc
mov
pop
mov
mov
lcall
test
orb
or
and
stos
xor
push
inc
fs
push
inc
jns
in
aaa
inc
xlat
push
arpl
or
mov
mov
jle
adc
pop
aad
pop
sub
test
cli
scas
adc
xor
movsl
loopne
xorb
outsb
int3
adc
mov
adc
sub
loope
jo
insb
inc
call
pop
nop
and
pop
jne
xor
cmpsb
push
lahf
sbb
loope
test
out
pop
sub
jno
dec
xchg
push
rolb
aam
inc
rcrl
out
sbb
pmaddwd
xchg
ja
sbb
jno
xchg
popa
mov
xor
sahf
lock
test
inc
mov
mov
xor
push
cmp
icebp
sbb
mov
pop
scas
xor
push
sbb
cmp
hlt
fs
loope
mov
data16
orb
lret
fsubl
or
sub
push
add
sub
mov
sub
rolb
xchg
lret
sbbl
cmp
or
in
xor
dec
sbb
mov
adc
mov
mov
cmp
sbb
xor
sbb
pop
sarl
inc
jp
test
jns
and
loope
cli
hlt
lret
mov
mov
inc
add
mov
cmp
mov
dec
stc
mov
push
out
pop
pop
test
cltd
int
and
and
arpl
sub
sarl
jmp
mov
push
movsl
arpl
dec
int
into
mov
out
iret
lds
pop
jl
push
push
mov
sahf
test
jbe
nop
clc
pop
or
aam
pop
xchg
fs
gs
jno
movsl
cmpsb
rol
add
xor
push
mov
cmpsl
cmc
outsb
push
push
into
push
out
repz
add
or
pop
sti
cmpsb
jmp
loope
xorb
aas
arpl
popa
mov
jnp
adc
aam
inc
xlat
push
fs
stos
xchg
lret
std
push
xchg
and
cmpsb
xor
push
push
sbbb
adc
mov
lahf
adc
dec
xor
push
test
jb
add
and
sbb
push
ret
jp
jl
cwtl
cld
lret
loop
mov
xor
and
loope
xor
dec
les
adc
jne
add
test
xchg
sub
mov
pop
and
and
sub
pop
insb
pop
mov
les
fstl
lods
jmp
mov
or
data16
mov
vpmaxsw
sahf
fld
sahf
sub
sarb
fistl
mov
cmp
dec
int3
outsb
adc
ror
push
mov
and
xchg
mov
out
cmc
adc
sub
inc
fimuls
xor
shl
mov
push
enter
cld
ret
mov
adc
fsub
lea
fiadds
jno
data16
and
ljmp
sbb
dec
sar
sub
push
xchg
jbe
add
jecxz
aad
or
inc
sar
sub
mov
mov
ret
gs
aad
mov
dec
daa
dec
fnstcw
daa
les
enter
scas
fwait
dec
jge
jb
jb
std
jae
or
data16
les
jb
xchg
or
fsubrs
push
ror
iret
sub
stos
lcall
mov
push
sbb
int3
rcl
jmp
std
push
aaa
rolb
jnp
loope
ss
lods
xor
pop
xchg
jge
jbe
xchg
jmp
adc
nop
adc
sub
int3
dec
xchg
or
jge
mov
add
lods
add
shl
in
mov
mov
into
lock
mov
je
pop
addr16
gs
dec
in
jp
orb
test
push
adc
imul
lret
pavgb
movsb
mov
or
out
test
sub
mov
js
adc
pop
lahf
movsl
test
fs
xchg
ss
rcrl
mov
add
addr16
es
mov
jmp
mov
jbe
shlb
scas
inc
xor
adc
sub
pop
sar
push
ja
pop
and
popa
mov
cmpsb
in
xchg
push
das
fimuls
iret
push
sub
cld
test
and
pop
nopl
ret
aam
lcall
add
repz
in
jae
mov
mov
ret
dec
gs
mov
nop
aad
out
imul
in
and
sbbb
js
mov
rorb
pop
aad
aam
pop
test
lea
dec
loop,pt
int3
dec
push
sub
push
stos
js
jno
rorb
and
lods
push
and
xor
dec
inc
sub
or
jo
fldl
pop
cmp
push
stos
sbb
nop
ret
sub
cltd
lcall
lock
pop
jl
ret
scas
gs
push
jae
jno
data16
es
call
cwtl
imul
xor
inc
mov
jmp
or
call
out
inc
jge
xchg
and
push
cmc
sub
dec
mov
fcompl
loop
pop
push
and
das
rcr
int3
rcl
xchg
mov
lock
xchg
inc
test
jbe
cli
mov
mov
jg
push
cli
or
pop
lods
jecxz
push
in
mov
fidivl
dec
xchg
mov
sarl
xor
sbb
pop
hlt
icebp
ss
lds
loope
lock
arpl
rcll
fs
loope
pop
scas
rcr
dec
loop
fcmovbe
jb
lret
scas
test
shrl
ss
les
sub
pop
orl
add
pop
jmp
pop
xor
in
adc
arpl
xor
pusha
test
movsb
push
pop
push
ds
lea
mov
mov
aad
outsl
sub
dec
mov
subl
scas
insb
add
test
or
aaa
mov
fdivr
push
das
aad
pop
push
lret
xor
stos
adc
adc
fs
lods
in
orb
movsb
aam
and
shr
mov
sub
into
movsb
adc
push
out
and
mov
jns
xchg
nop
cltd
pop
lcall
int3
cs
ror
or
xchg
test
sub
in
sub
popf
lret
lock
dec
push
jge
lods
jl
sub
jp
mov
add
xchg
mov
pop
fldl
fisubrs
push
dec
fwait
loop
out
aam
dec
std
sbb
push
shr
cmp
les
lret
dec
ret
fnsave
out
js
mov
pop
fsubl
push
pop
outsl
and
xor
dec
into
xor
jne
outsl
pop
or
mov
out
cmp
aam
leave
xor
stos
push
imulb
pusha
movsb
out
into
xor
movsl
inc
ja
mov
or
ljmp
out
mov
shll
sub
shrl
dec
adc
outsb
decb
pop
hlt
in
cmc
lahf
adc
or
out
rcl
mov
mov
push
cmpsb
lahf
jns
dec
adc
push
lcall
mov
repnz
adc
adc
pop
dec
push
subb
xchg
sub
and
out
jge
dec
sub
mov
sub
int
add
pop
call
mov
dec
fcompl
xor
outsl
inc
mov
hlt
cmp
dec
cmpsb
ret
jnp
xchg
xchg
stos
repnz
aad
cmp
pop
lret
cmp
daa
addr16
add
xchg
jp
ret
stos
mov
outsb
sarb
xor
or
dec
add
jae
push
add
insb
jp
pop
fdivs
lods
mov
sub
std
and
add
ss
bound
jne
stc
jecxz
loopne
subb
xor
repnz
jnp
pusha
xchg
sub
rorl
xchg
inc
test
imul
pop
loopne
xchg
dec
iret
fsubl
dec
out
stos
mov
pop
xchg
xor
mov
xor
ret
xchg
push
sahf
popf
sub
mov
add
or
out
jo
push
xchg
and
or
mov
imul
jno
sub
and
aaa
push
divb
popf
dec
rorl
lds
jo
push
push
pop
arpl
lea
jmp
jnp
xchg
xchg
stos
cmc
mov
xorl
adc
inc
or
and
jmp
ds
das
push
daa
pop
sbb
and
mov
mov
mov
adc
xor
push
aam
mov
cmpsl
fwait
insb
ds
push
cmp
repz
sbb
into
stos
push
cmp
movsl
mov
lret
cld
nop
jmp
into
sub
adc
loope
sub
jns
in
enter
mov
add
pop
lret
pop
xchg
cmpl
das
rcll
fistpll
cmp
mov
mov
ljmp
cmp
ja
pop
inc
sahf
push
push
pop
jae
mov
push
outsb
fadd
xchg
fsubs
and
aad
add
sub
sbb
mov
jle
dec
xchg
xor
test
dec
mov
lret
stc
out
mov
dec
xchg
lret
adc
sbb
push
testl
int3
mov
repnz
lods
add
ss
lods
cmp
and
cli
ss
mov
sbb
sub
shl
mov
cmp
fsubs
mov
shrb
in
xlat
cs
cmp
pushf
jmp
cwtl
sbb
xchg
rcr
sbb
jbe
les
push
gs
inc
mov
pushf
incb
shrb
ja
and
jmp
repz
lods
fcomi
xchg
cli
jbe
and
insb
lods
shrl
adc
sbb
adc
mov
test
mov
cmc
test
outsb
subl
xchg
push
push
xchg
sub
and
xchg
cmp
sub
mov
mov
gs
outsb
pop
rol
push
fistpl
outsb
xor
adc
test
mov
jecxz
dec
rol
xor
in
inc
xchg
lea
rcl
loopne
rorb
jg
mov
xor
sbb
sub
insb
mov
aas
std
or
test
sub
sti
bound
cmp
xor
cmpsl
cmpsl
xchg
mov
imul
jns
or
rclb
mov
call
adc
pop
push
aad
mov
add
push
out
fildll
rclb
mov
fs
enter
or
das
test
cmp
fsubrl
test
test
es
ret
test
jmp
insl
out
pop
es
pop
cmp
aam
mov
sub
les
aas
int3
mov
pop
mov
xor
mov
imul
mov
popf
pop
push
xchg
xchg
jecxz
xchg
cmpsb
out
add
cmc
dec
mov
rcrl
jge
ja
jbe
jno
jge
inc
loope
mov
pop
stos
rcll
inc
push
xchg
jno
cmpsl
cmp
jl
mov
dec
jno
fisttpll
cld
cltd
mov
daa
sub
pop
inc
fnstenv
and
pop
shlb
popa
cmp
mov
pop
push
es
add
xor
xchg
cld
popf
and
push
add
mov
shrb
rcl
gs
lret
jo
aam
add
xor
mov
in
mov
mov
push
sarl
push
inc
cld
dec
mov
cmp
les
ficomps
ret
sahf
inc
cltd
mov
pop
scas
fcom
sub
cmpsl
xor
pusha
js
int3
stos
pop
mov
jo
mov
pushl
jecxz
leave
xchg
or
cwtl
dec
rolb
movsb
sub
push
push
ret
mov
cwtl
sbb
cs
fisubl
xor
les
out
rcr
mov
inc
cmpsb
mov
jnp
clc
int
mov
add
ds
pop
hlt
add
outsb
xorb
es
or
aaa
sbbb
add
adc
andl
enter
cmpsl
sbb
imul
jmp
and
bound
xchg
shl
dec
and
jge
sbb
push
dec
xchg
jb
push
pop
fwait
xlat
in
jge
inc
test
fwait
popa
cmp
ret
insb
lret
loope
std
mov
nop
push
jno
pop
and
add
mov
add
adc
bound
push
mov
test
leave
js
sahf
xlat
pop
mov
mov
in
cmp
mov
subb
cmp
sub
and
les
into
cmp
mov
push
neg
test
lret
xor
and
xor
push
shr
in
iret
sbb
jae
inc
add
mov
aas
cmc
inc
test
std
pop
mov
lds
xchg
sub
sub
idivb
cmp
mov
fnstenv
sar
sub
jae
pop
xchg
out
mov
les
cwtl
int3
jge
xchg
sahf
insb
loopne
and
call
xor
mov
push
sub
jp
sbb
jp
aam
add
sub
fmul
les
mov
adc
xor
loope
and
rorb
mov
out
js
xor
and
std
and
jno
in
out
sub
mov
scas
jg
out
js
and
dec
or
dec
sub
jl
cmc
scas
cld
call
js
push
adc
call
fnstsw
rolb
dec
test
pop
mov
cmp
test
arpl
test
push
or
lods
push
dec
stos
cmp
inc
mov
jle
mov
rclb
and
mov
push
leave
xchg
jnp
scas
ds
hlt
push
add
vpavgb
outsl
dec
test
cmpl
out
aam
jno
jg
pop
jp
stos
mov
gs
fwait
cld
pop
movsl
test
xchg
imul
jo
stos
or
xchg
nop
mov
or
fsub
or
daa
add
pop
repnz
fidivrl
fists
lcall
dec
frstor
mov
ret
sbb
cwtl
dec
cltd
sbb
adc
sbb
or
cmp
lods
mov
enter
jne
mov
lcall
cli
inc
mov
or
cmp
mov
and
add
fmul
mov
mov
xchg
cmp
add
cmpsl
js
mov
rcr
shl
cmpsb
js
lahf
int
inc
mov
leave
dec
jmp
dec
pop
lea
mov
outsb
dec
cli
rcll
cmp
aaa
lret
imul
imul
js
xor
mov
mov
mov
outsl
jge
pop
stos
shll
mov
cmp
cmp
stc
and
and
ljmp
pusha
adc
leave
sahf
sub
cmp
shl
dec
xchg
mov
stc
add
in
cwtl
icebp
xlat
inc
sarb
and
sub
mov
xor
scas
ljmp
xchg
lret
pop
sti
adc
cmc
cmpsb
push
fdivrl
in
or
mov
lea
dec
sub
loopne
aaa
jge
sub
adc
rolb
jbe
nop
cli
sahf
sbb
and
mov
push
aaa
xor
and
fnstcw
pop
test
xor
ficoml
stos
or
mov
add
dec
fs
movsl
out
divl
pop
shl
mulb
fmull
xor
xor
inc
jle
cld
pmulhuw
pop
imul
popf
sbb
xchg
jae
push
jle
lods
pop
loopne
js
sub
mov
aas
inc
cmp
aas
ja
xchg
leave
mov
cmpsl
xchg
add
arpl
fsubs
fs
mov
fldenv
and
jns
ds
xchg
lcall
xor
sbb
fcmovnb
adc
mov
fsubs
aaa
imul
sub
sbb
and
sti
jns
and
xchg
aam
xchg
outsb
or
adc
lods
mov
shl
pop
mov
into
jmp
roll
loop
sbb
aam
popf
adc
out
hlt
ss
xlat
pop
cmp
enter
jmp
inc
sub
push
flds
push
rorb
inc
hlt
inc
cmp
jle
andb
mov
iret
pop
jmp
popa
icebp
xchg
add
inc
sbb
adc
ljmp
in
cmp
xor
xchg
out
mov
pop
pop
lock
js
rcl
fs
jle
enter
mov
mov
adc
bound
xchg
cmp
jae
or
inc
outsl
shll
cmpsl
fisttpll
mov
in
cwtl
sarb
shll
iret
outsl
pop
les
sahf
sahf
aas
sub
or
fs
mov
sbb
sti
jns
cmpsb
dec
cmpsl
adc
fwait
fs
adc
outsl
cwtl
lea
sub
adc
das
dec
mov
and
add
ja
nop
in
pop
lods
xor
mov
push
out
cmp
sub
mov
inc
cmp
xchg
lahf
sbb
jle
test
shll
jmp
jle
lds
lds
mov
mov
fisttpll
mov
cmpsb
arpl
int3
lahf
ja
jg
out
sub
out
insl
jnp
inc
jno
sbb
scas
mov
pushf
dec
test
cld
outsl
rep
aad
outsl
in
int
cmpsb
cli
mov
push
pop
fs
popa
cmp
scas
push
mov
pop
lds
push
cmc
pusha
aaa
pop
sbb
dec
push
xchg
jle
dec
mov
gs
enter
xchg
pop
ljmp
imul
lea
mov
ficomps
or
inc
shlb
pushf
mov
arpl
mov
cwtl
push
sub
inc
decb
fimull
sbb
push
cltd
ret
sub
dec
dec
ds
ljmp
fdivrl
mov
push
mov
lds
sub
ds
in
stos
ds
mov
xor
das
cs
cwtl
pop
xorl
das
inc
or
inc
cmp
imul
sub
movsl
std
jmp
lds
inc
rorb
ja
jl
or
jno
dec
cmp
rorl
loop
mov
push
ficoms
sbbl
lret
push
stos
inc
sbb
leave
push
pop
push
jno
data16
aas
dec
js
lds
enter
bound
cli
sub
mov
or
inc
push
xor
imul
push
mov
dec
mov
jg
push
and
mov
rolb
push
mov
fwait
std
fstl
dec
loopne
mov
icebp
js
push
xor
jle
aas
movsb
xor
in
lds
adc
shll
sahf
jl
push
dec
fstpl
mov
add
in
xchg
xor
fs
bnd
int3
inc
sbb
mov
or
mov
movb
mov
push
cmp
mov
outsl
mov
add
mov
lret
add
push
cwtl
inc
int3
dec
popa
jmp
mov
or
mov
mov
addr16
lods
in
adc
loopne
pusha
pop
or
outsb
adc
inc
pushf
or
mov
xchg
xor
ret
ret
jae
push
jbe
in
clc
and
fdivrs
aaa
sbb
push
pop
add
andl
xor
jl
inc
add
mov
ret
sbb
pop
sub
inc
and
int
int
jns
jbe
mov
js
lret
or
mov
or
adc
dec
arpl
inc
hlt
aas
iret
pushf
adc
repz
cs
dec
push
cld
and
out
rol
cmovne
sbb
insb
add
mov
pop
loop
stos
pushw
push
mov
jae
test
or
stos
dec
sbb
xchg
ret
out
rol
sub
in
sub
dec
scas
out
push
jnp
je
adc
cmp
mov
test
jb
lret
and
dec
xchg
mov
sti
ja
fldl
in
mov
bound
sub
aad
cmc
rcr
int
inc
insb
enter
mov
repnz
lock
inc
in
outsl
inc
push
dec
add
inc
xchg
test
mov
cs
push
ds
push
mov
rorb
cmp
dec
cld
testl
enter
mov
sti
js
fwait
fmul
or
or
or
or
mov
add
sbb
push
int
mov
push
jp
out
movsb
jp
push
std
adc
jno
pop
jmp
ss
ss
aas
ljmp
add
call
mov
rorl
mov
ljmp
ds
adc
pop
pop
in
and
int
in
sahf
iret
or
stc
ja
mov
xorb
mov
fdivl
outsb
xor
notl
rorl
out
movb
jns
int3
cmovnp
adc
pop
cmpsl
int3
and
push
pop
push
jbe
insl
cmc
push
es
mov
test
mov
pop
aas
cmp
inc
repz
jp
dec
dec
add
inc
ret
dec
lret
push
das
and
decb
inc
and
and
out
sar
mov
fs
test
shrl
jne
sarb
negl
rorl
lea
mov
or
dec
fists
jp
push
clc
daa
cwtl
cmp
jnp
or
push
push
jp
dec
adc
jno
or
mov
jnp
bound
pop
lock
cmp
mov
xor
mov
insl
hlt
loope
es
les
xchg
push
fwait
add
shlb
loope
mov
or
inc
lcall
mov
outsl
loop
or
mov
stos
inc
mov
push
jecxz
push
sub
sbb
test
inc
insb
lret
stc
mov
and
jnp
dec
pop
add
mov
cwtl
in
xchg
dec
jecxz
cs
add
pop
cmp
lret
add
mov
in
pop
xor
push
inc
fsubl
sbb
inc
loope
mov
pop
into
into
push
lods
stos
jbe
lret
movsb
inc
lret
popa
jo
mov
inc
pop
cwtl
fisubl
cltd
mov
mov
dec
adc
jp
and
repnz
lods
mov
xchg
fidivl
push
mov
mov
xchg
dec
insl
dec
dec
lods
or
imul
cmp
out
mov
movsl
or
adc
cmpsw
loopne
jl
imul
sub
int3
test
pop
nop
push
popf
sub
fsubp
gs
or
loope
jmp
jns
ss
push
jg
aad
push
ret
add
add
iret
nop
data16
ss
insl
call
fisubrl
mov
and
xor
dec
jecxz
xor
pop
or
jo
adcl
or
mov
lret
mov
pop
xchg
and
cmp
test
mov
add
mov
push
ficoml
fsubrs
aam
gs
fstpt
mov
nop
xchg
lret
arpl
sbb
cmp
add
adc
cmp
int
rorl
cmpl
jo
mov
mov
iret
fmuls
pusha
sahf
mov
or
xor
idiv
push
test
fstpl
and
cmp
inc
lock
mov
shrb
in
rcr
das
sbb
pop
xchg
push
mov
fcom
mov
sti
stc
insl
xchg
inc
or
jl
pushf
jb
ret
outsb
inc
incb
aam
addr16
xchg
std
adc
xor
lret
imul
lret
shl
or
shrb
dec
xor
adc
mul
push
or
adc
xchg
fdivrs
dec
sbb
add
shll
jbe
mov
jg
and
std
or
std
rol
sub
jmp
mov
out
and
shll
cmp
enter
dec
test
jg
test
mov
cmp
icebp
mov
out
int3
jle
xchg
dec
jg
pop
jnp
sbb
lahf
fstpl
or
mov
lret
test
das
loope
lret
mov
mov
add
inc
dec
pushf
push
cmp
add
xchg
inc
jl
mov
lret
addr16
jae
movsl
xchg
xlat
fwait
std
icebp
mov
xchg
push
xchg
fistps
lret
mov
cmpl
push
or
je
mov
repz
in
icebp
lret
xor
out
test
lret
popf
aad
cs
gs
js
push
mov
mov
xchg
dec
loope
push
cmova
inc
mov
mov
inc
pop
call
stos
daa
pop
cmp
mov
dec
dec
mov
scas
adc
jl
or
push
adc
shl
add
xchg
notl
mov
xchg
xchg
andl
mov
ret
int3
jl
sbb
sbb
movsl
flds
jae
mov
or
push
jnp
adc
cld
scas
jp
mov
lods
out
sbbb
out
xchg
xlat
stos
ficompl
cmp
and
pop
inc
mov
inc
inc
ds
mov
imul
sub
movsl
scas
push
dec
jl
mov
fs
add
sub
mov
test
sarb
jne
loopne
mov
cmpl
push
pop
outsl
cld
ss
rcrb
not
mov
ljmp
js
ret
dec
enter
insb
xchg
dec
mov
pop
inc
outsl
mov
jle
mov
mov
xorb
dec
or
sub
popa
int3
les
mov
das
jmp
xchg
stc
lret
dec
idivb
or
loopne
lds
std
pop
inc
aas
loop
test
loopne
inc
xchg
enter
dec
es
jge
cmp
pop
sarb
mov
mov
mov
jge
mov
xor
sbb
push
sbb
cmc
aaa
push
lods
es
movsb
rcl
push
std
push
lods
fs
dec
jbe
in
xor
push
pop
cmp
pop
cmpsb
jno
push
xchg
call
loopne
sub
dec
cmp
jns
xchg
shl
jmp
out
and
rep
xor
or
outsb
sbb
adc
rcl
xor
insl
jns
mov
push
test
std
sbb
jo
jge
inc
xor
fiaddl
cld
imul
jmp
mov
dec
push
sbb
and
jno
pop
dec
or
add
iret
ret
add
jno
dec
fcmovb
cmpsb
int3
xchg
stc
les
cmc
xor
dec
das
in
mov
sti
mov
scas
xchg
leave
fs
fnstsw
ljmp
data16
sbb
test
cmpsl
andl
cmp
imull
cmp
out
lds
jo
xor
xor
mov
inc
icebp
xchg
imul
mov
leave
fcmovu
ss
jp
mov
xchg
and
sti
mov
xor
mov
lcall
inc
aaa
arpl
push
lahf
movsb
cmp
dec
data16
imul
mov
lret
negl
in
pop
mov
in
jecxz
andl
add
jl
lds
mov
jno
inc
xlat
dec
ror
ja
lahf
mov
nop
imul
cli
ljmp
sub
pop
xchg
jnp
push
cwtl
mov
dec
or
dec
stos
mov
ljmp
cmp
xor
js
inc
clc
test
lods
inc
scas
inc
imul
int3
pusha
popa
add
jmp
aad
movsl
and
cmpb
mov
addr16
sbb
popa
ja
sbb
sti
mov
and
pop
jge
imul
adc
aas
lret
lret
sbb
push
fs
pop
daa
sbb
fnsave
mov
fdivr
add
loopne
mov
xor
jae
lods
out
outsb
rorb
out
dec
rcrl
mov
mov
mov
adc
movsl
lahf
fdiv
inc
imul
in
int3
cwtl
push
mov
test
mov
arpl
xor
loope
rolb
mov
jbe
add
jmp
jl
xchg
fs
cmp
loop
xchg
xchg
jmp
mov
pop
int3
push
fs
mov
xor
inc
ret
and
es
pop
mov
inc
imul
jne
cltd
pushf
repz
mov
push
xlat
jns
fsubrs
jno
repz
push
imul
jg
dec
mov
shll
enter
mov
push
mov
rcr
outsb
jbe
out
jae
sahf
mov
lea
jmp
inc
stos
lods
cli
testb
ja
ss
and
pop
leave
jnp
cmp
xchg
dec
mov
jne
jb
cmp
loopne
adc
sbb
daa
sbb
inc
fcoml
fwait
in
sub
out
repz
pop
adc
pop
jne
aad
jmp
jbe
mov
adc
ja
cwtl
outsl
ret
and
out
frstor
add
cmp
ret
xchg
add
xor
lds
int3
and
lret
adc
mov
pop
inc
and
and
push
rcll
add
ficomps
inc
cmpsb
or
xchg
jg
loope
mov
push
or
sbb
stos
sahf
insb
lret
add
dec
jle
mov
aas
and
gs
mov
sub
xor
rcll
roll
xorl
iret
repnz
stos
mov
sub
test
leave
movsl
push
mov
les
mov
aas
inc
jbe
sub
mov
and
test
pushf
pop
sbb
fucomp
lea
pop
std
push
xchg
js
ds
mov
mov
or
mov
movsl
mov
ret
fmull
dec
add
aad
xchg
bswap
xor
inc
push
xorl
repnz
int
jg
bt
mov
imul
pop
loopne
push
in
in
cmp
mov
shll
inc
clc
dec
in
mov
loope
dec
xor
adc
pop
mov
sbb
nop
mov
ret
mov
fdivr
popa
aam
out
sti
mov
enter
push
add
xchg
mov
jp
inc
out
lods
ljmp
rclb
jle
pusha
cmp
ljmp
add
mov
in
cmp
mov
sbb
outsb
clc
lds
scas
fidivrs
sahf
or
out
jb
shrb
mov
nop
hlt
cmpsb
adc
adc
call
scas
push
pop
scas
testb
mov
jno
jb
push
sub
xlat
jecxz
dec
mov
shlb
or
mov
push
xchg
clc
mov
stos
shlb
inc
in
incb
ret
xchg
mov
xor
out
adc
or
popl
mov
clc
imul
divb
cmpsb
int
clc
cmp
test
push
testb
lret
inc
test
stos
je
out
sbbl
inc
sub
loope
pusha
in
lret
or
pop
cld
lcall
dec
cmpsb
jae
xor
test
incl
jo
ljmp
stc
pop
adc
dec
arpl
ja
std
and
leave
stos
divl
cli
jecxz
or
mov
int3
stc
lret
insl
lret
jbe
add
mov
mov
nop
pop
cmpsb
stos
xchg
mov
shrb
jmp
mov
add
subb
inc
jmp
add
jl
add
gs
scas
jmp
push
jle
stos
leave
imul
jbe
push
hlt
imul
ds
adc
xorl
hlt
mov
mov
pop
mov
mov
ret
aad
out
xor
sahf
aad
mov
fnstsw
push
insl
push
push
jbe
enter
shlb
into
loope
jp
or
dec
inc
shrl
mov
iret
mov
jg
loope
or
popf
sbb
int3
dec
popa
int3
cmpsl
cmpb
or
out
out
lds
push
lahf
cmp
enter
cmp
mov
clc
shll
filds
push
cmc
movsl
and
dec
and
cmpsl
cld
adc
pop
lret
rclb
stos
flds
stc
mov
mov
insl
sbb
dec
add
fldl2t
fidivrs
cwtl
xchg
jge
add
and
popa
cltd
repnz
shll
in
mov
fstpl
mov
xor
call
loope
and
pusha
sahf
or
sub
or
lahf
movsb
lds
int
imulb
cmpsl
ffree
jns
inc
jge
call
pop
dec
subl
into
arpl
dec
pop
dec
scas
lock
push
popf
jge
xlat
or
and
daa
push
in
test
mov
mov
push
aas
jae
js
sub
add
or
pop
stc
test
out
daa
out
push
xor
jb
pand
lea
jnp
jp
inc
aam
pop
jmp
add
mov
mov
ljmp
icebp
outsb
lock
stc
lcall
mov
xchg
hlt
xor
xchg
aam
test
and
mov
stos
jbe
jp
sub
mov
clc
push
jbe
cmp
xchg
mov
test
fnstsw
pushf
stos
ret
adc
push
sbb
xchg
int
ja
inc
inc
sub
cmp
stos
dec
mov
nop
sub
rcl
lods
in
insb
xor
in
jno
mov
sahf
pop
dec
inc
imul
fdiv
jo
pop
jns
jp
in
rol
mov
xchg
rorb
iret
mov
dec
mov
arpl
hlt
loopne
divl
jg
xchg
mov
xor
pop
mov
es
push
add
pushf
lret
stc
loop
xchg
xchg
jmp
ja
and
loopne
lret
dec
iret
push
jae
xchg
jp
mov
jl
call
mov
xchg
jae
inc
loop
mov
fistps
adc
int
out
neg
cmp
add
lret
push
repnz
or
pop
rclb
cwtl
fnstsw
rorl
mov
add
jp
outsb
xchg
pop
jo
shll
fs
sahf
jbe
decb
lret
fldl2e
jecxz
push
stc
adc
pusha
jg
dec
xlat
clc
fdivr
aad
xor
pop
in
jg
cmpsl
jae
aaa
inc
mov
sbb
insb
xchg
cmpsb
fadd
jle
dec
js
icebp
inc
adc
jns
add
iret
dec
mov
cmpsb
insb
and
mov
mov
fbstp
mov
mov
out
lock
pop
scas
add
jb
jns
sub
add
or
fldenv
cmpl
push
cmpsl
daa
pop
mov
push
and
inc
pop
frndint
je
out
test
jnp
add
mov
test
cmp
and
push
mov
mov
cmp
jo
mov
stos
repz
lahf
loopne
sbbl
pop
enter
mov
sbb
push
dec
jns
inc
aas
ss
movsb
int
add
push
xchg
movsl
pop
xchg
dec
movsl
pusha
das
cwtl
push
jle
shl
jnp
mov
mov
sub
push
aaa
pop
sbb
sub
cmp
sub
int3
dec
rorb
mov
addb
xchg
jbe
js
lret
inc
cwtl
iret
xor
outsl
mov
ljmp
adc
rolb
out
int3
test
mov
bound
in
jmp
adc
out
in
sbb
pop
pop
jge
aaa
ljmp
imul
aas
push
test
jecxz
and
fdivl
sbb
jmp
movsb
pop
jno
pop
jnp
jle
push
jbe
xor
cld
push
outsb
cmovne
or
mov
adc
clc
jno
in
or
mov
and
arpl
mov
mov
sub
sbb
lcall
push
add
cmp
imul
mov
insb
loop
push
fstps
in
cmpsb
imul
mov
les
inc
test
imul
mov
or
mov
sub
sarl
pop
sbb
and
jbe
pop
push
sub
ret
adc
arpl
cmc
nop
int
sahf
fistpll
nop
adc
aam
push
inc
mov
mov
jmp
fisttpll
and
scas
wrmsr
inc
mov
rcrl
jmp
ljmp
mov
cli
test
mov
addr16
fcomi
outsb
insl
in
dec
aad
imul
repz
sub
filds
jp
not
or
jmp
inc
in
cmp
int3
inc
push
xor
punpckhwd
adc
es
inc
lock
pop
push
mov
jecxz
fnstsw
mov
mov
test
es
or
insb
sti
cwtl
aam
adc
stos
int
mov
sbb
fistl
ffreep
add
add
dec
jle
xchg
sub
outsb
scas
push
xor
loopne
aas
nop
or
outsb
xchg
or
or
jp
cli
or
pop
jns,pt
fs
dec
cmc
rorb
jg
imul
pop
in
aad
jmp
cltd
popa
fisubrl
mov
pmulhw
fwait
stos
cmpl
movsb
push
cmpsl
test
jnp
jnp
sbb
dec
clc
cmc
lret
jmp
imul
stc
push
mov
in
sbb
test
adc
loopne
inc
frstor
jb
outsl
out
jb
je
repz
add
imul
mov
cmp
xchg
arpl
jo
mov
sub
push
mov
popl
or
xchg
dec
arpl
mov
pop
aaa
aaa
test
xor
rcll
cmp
inc
imul
and
lcall
pop
fisttps
or
add
push
popf
pop
imul
jecxz
out
xchg
jno
test
and
addr16
fstpt
adc
sbb
inc
jmp
mov
mov
push
cld
fnsave
sar
ds
jmp
bound
dec
ds
bound
lock
push
inc
adc
inc
sub
pop
xchg
push
adc
cld
es
nop
cs
jno
cmp
in
stos
ficomps
add
lock
cwtl
bound
dec
js
add
xchg
jae
pusha
mov
mov
pop
es
in
outsl
pushf
int3
sbb
or
call
fstpt
mov
add
add
js
lret
push
into
mov
add
sub
mov
vpshab
test
ficomps
out
insb
imul
daa
movsl
sbb
mov
cmp
add
out
xor
out
pop
push
dec
pop
inc
or
jl
dec
pop
fisttps
xor
and
setl
sti
cltd
lds
lahf
cmp
mov
aam
sub
cmp
lods
xlat
mov
add
cmc
sbb
sbbl
mov
push
xchg
movsl
xor
fnstenv
cmc
scas
or
int
lea
hlt
xchg
cltd
test
add
in
mov
lods
sub
or
inc
inc
jnp
out
ss
fldcw
mov
std
ror
test
cmp
pusha
push
mov
jle
leave
insl
cs
scas
lods
in
rcrb
aad
and
push
mov
in
pop
pop
cwtl
or
and
stc
orb
pop
fs
or
adc
xor
pop
cmc
sbb
adc
out
dec
pushf
push
jl
inc
mov
aaa
shr
and
push
hlt
repz
mov
fstl
bnd
inc
mov
adc
xchg
mov
ljmp
int3
lods
rcrl
adc
js
ret
add
lcall
push
bound
cmpsl
mov
rcrl
cmp
sahf
into
movsb
int3
lret
jecxz
iret
fidivrs
mov
xchg
xchg
jle
jge
inc
sarb
movsl
adc
or
or
mov
jecxz
pop
sbb
mov
stos
mov
cmp
pop
shll
insb
das
aas
iret
fdivl
xor
mov
cmpsb
das
js
push
test
mov
add
pusha
jns
scas
mov
stos
sbb
adc
cld
and
cmc
lcall
aad
movsl
insb
in
pop
cwtl
or
jmp
je
inc
out
push
nop
add
out
outsl
mov
cmp
ret
loop
ds
sbb
pop
mov
test
daa
inc
hlt
pop
push
scas
sub
push
rcr
push
inc
je
push
push
dec
cmp
lds
fwait
repz
imul
stc
lahf
pop
push
out
jg
ret
add
lcall
sbb
and
cmpl
jnp
adc
or
jge
flds
xorl
repnz
jae
dec
rolb
fstl
insl
sahf
push
fiadds
aad
mov
int
std
dec
pop
std
jecxz
cwtl
mov
pop
mov
stos
ds
sub
mov
and
xchg
dec
bnd
inc
adc
mov
jecxz
cli
mov
sub
in
imulb
and
scas
fucomip
add
imul
xchg
pushl
stos
fabs
hlt
insl
sub
in
fildll
push
test
fs
orb
popa
int3
test
mov
sti
lahf
push
push
mov
cmpsb
or
inc
jb
dec
and
mov
imul
pop
addr16
fbstp
jbe
pminub
mov
call
bound
jmp
ror
xchg
or
out
addps
pop
leave
imul
adc
aam
pop
fcomps
icebp
cmp
pop
cmpsl
jle
fiaddl
inc
jb
or
push
xchg
or
inc
adc
pop
adc
inc
add
in
cmc
mov
sbbl
repnz
mov
or
test
or
add
sahf
shlb
mov
xor
cmp
icebp
andb
pop
sbb
sbb
adc
lret
jne
imul
fnstcw
sbb
addr16
mov
roll
xchg
and
shrb
jbe
sar
mov
jecxz
mov
popf
push
push
dec
popf
push
adc
lods
js
mov
inc
test
into
shrl
pop
fsubrl
test
ljmp
aam
out
pop
mov
fucompp
jb
imull
push
int3
arpl
test
xchg
jns
xor
cmc
push
mov
pop
popf
sub
mov
mov
lds
push
inc
filds
push
pop
dec
cmpsl
ds
fadd
arpl
mov
pushf
jb
fwait
lahf
xchg
les
pop
jbe
mov
xchg
aam
pop
imul
ss
push
scas
jno
dec
xor
jle
sub
loop
cli
loope
stc
dec
outsl
xchg
insb
das
sub
les
mov
imul
mov
js
jnp
shrl
loop
adc
das
flds
icebp
cwtl
imul
jns
bnd
jmp
outsb
pop
add
xchg
adc
push
imul
scas
roll
outsl
cmpsb
pushf
cmpb
lds
cmp
arpl
mov
loop
jecxz
shll
xor
inc
ret
cltd
xchg
xchg
cmp
xor
sub
lahf
test
loopne
inc
iret
and
pop
adc
jl
push
inc
hlt
test
arpl
scas
lds
loopne
or
add
lret
or
dec
cs
fisttpl
xchg
cmp
pop
out
mov
lcall
xor
inc
or
mov
dec
adc
adc
pop
push
cwtl
push
ja
pop
jbe
mov
push
pushf
xor
xor
dec
fistpll
push
divb
std
cld
pusha
popa
lods
fdivl
mov
and
mov
sub
adc
mov
mov
cmpsl
inc
mov
sub
jecxz
arpl
pop
pop
mov
mov
in
pushf
cmp
es
mov
fstl
xchg
pop
fisttpll
out
cli
mov
inc
and
out
dec
das
mov
orl
clc
sub
shrb
dec
lahf
aad
fiaddl
fs
jg
sahf
lock
sahf
icebp
movsb
sahf
mov
xor
lcall
mull
gs
sbb
mov
mov
sbb
popa
cmc
inc
mull
xor
cmpb
mov
push
sbb
pop
lahf
sub
push
scas
fs
sbb
jmp
push
sbb
adc
push
jg
mov
pop
fistps
lea
or
outsb
adc
push
movsb
in
stos
out
push
test
bound
fcoms
and
in
push
xchg
aam
xor
mov
iret
jg
and
test
cmp
cmp
stos
andb
jle
test
push
imul
loopne
data16
stos
lea
jnp
negl
ds
les
ret
adc
cmpsl
in
enter
outsb
repz
lds
xchg
jge
and
loop
inc
and
mov
mov
mov
jnp
mov
fst
mov
into
ds
test
outsb
xchg
inc
hlt
loop
lret
movd
insl
jnp
repz
add
fldenv
sbbb
movsb
pop
fidivl
cmp
data16
add
shl
rcr
pop
pop
push
fbstp
pop
mov
clc
pushf
mov
inc
adc
daa
cld
lods
xchg
lcall
lcall
fsts
mov
pop
int3
xchg
ja
jl
gs
in
and
out
insb
push
test
ss
push
or
std
jmp
lret
insb
addr16
ljmp
loope
and
and
int3
xchg
stos
aaa
push
rolb
je
jb
sub
cmc
fcomps
push
sbb
cltd
and
sub
scas
sub
imul
or
ljmp
mov
push
f2xm1
mov
in
mov
in
dec
pop
adc
and
fpatan
inc
pop
xchg
cwtl
inc
je
das
and
pushf
adcl
imul
inc
xor
pusha
mov
add
mov
pop
mov
ret
cmp
lea
adc
sub
xchg
popf
cld
insb
pushf
mov
inc
xchg
outsb
sbb
push
test
add
pop
lret
lret
sti
cmp
xchg
xchg
push
jo
pop
rcrl
cs
adc
dec
fisttpl
or
aas
aam
ret
sub
inc
addr16
cmpsb
jb
xchg
add
hlt
test
fstp
mov
call
sbb
sub
sbb
push
mov
dec
jns
add
sbb
sbb
mov
pop
add
iret
fs
ret
cli
popf
jmp
dec
imul
fs
xchg
or
in
sub
jmp
outsb
popf
pop
jbe
jae
mov
fwait
dec
or
and
pop
lods
mov
sub
pop
mov
ret
mov
lods
fisttpl
ret
pop
sarl
mov
lods
lea
inc
mov
fabs
or
add
mov
sbb
and
scas
in
adc
or
pop
mov
push
mov
shrb
addr16
jbe
sbb
lock
sahf
inc
mov
mov
sbb
mov
out
out
pop
pop
fdivrl
in
inc
sbb
das
pop
add
out
dec
dec
sub
outsl
gs
jg
adc
and
cmpsl
xchg
inc
xor
sub
and
pop
popa
nop
outsb
xchg
popa
or
sub
outsl
cs
pop
jmp
xchg
outsb
inc
fnstenv
xor
push
lods
pop
inc
in
inc
loopne
mov
and
adc
nop
adc
shl
sahf
xchg
aad
jns
pop
add
pop
fdivrp
gs
mov
aam
lods
leave
lret
mov
iret
push
mov
inc
ftst
jge
rorb
imul
sub
jecxz
jg
lcall
inc
mov
pop
dec
xchg
or
mov
bound
mov
pop
xchg
stos
or
sbb
mov
jmp
xlat
rol
js
insl
xor
mov
dec
mov
imul
sbb
xchg
out
adc
cmp
arpl
pop
mov
mov
mov
add
mov
jle
push
xchg
outsl
push
xor
sub
pop
mull
js
test
addr16
aad
arpl
repz
call
cmpsb
lahf
movsl
or
lods
add
negb
xlat
lods
cld
sub
mov
pop
ljmp
clc
push
stos
mov
loop
cld
or
add
cmp
ret
inc
adc
not
stc
cmp
rcrl
leave
mov
push
call
imul
aam
lods
inc
push
out
imul
loopne
repnz
cmp
ror
mov
sub
mov
and
popa
fmull
xor
xchg
sbb
cmp
sbb
sbb
daa
pushl
in
inc
add
std
inc
inc
sbb
jecxz
jmp
das
sbb
call
and
xorl
loopne
push
add
adcb
and
movsb
push
fwait
mov
testl
dec
dec
inc
enter
rcr
out
call
loop
pop
idivb
fnsave
inc
xor
mov
mov
rol
dec
or
push
mov
enter
lods
movsl
push
or
les
shrl
add
adc
or
inc
aam
jo
movsb
jmp
sbb
into
daa
mov
leave
faddl
lahf
mov
xchg
dec
and
and
sub
loop
jmp
loopne
or
jg
and
sbb
dec
dec
fidivrs
ljmp
stos
sbb
fidivl
add
aaa
fiadds
jle
pop
adc
dec
xchg
pop
adc
mov
aaa
mov
pop
aad
and
sbb
dec
mov
mov
xchg
pop
xor
inc
jmp
mov
rorb
aas
and
dec
dec
das
adc
pushf
sbb
pusha
in
mov
push
cld
mov
push
mov
icebp
mov
stc
lock
addr16
repz
cmpsb
mov
out
dec
dec
push
sub
jp
pushf
mov
lea
xchg
sti
daa
scas
in
scas
cmpsb
sbb
shlb
pop
push
pusha
movsb
fimuls
nop
int
enter
in
pusha
push
popf
pop
int3
mov
xor
pop
rorl
loope
mov
sbb
push
sahf
ljmp
sbb
movntq
out
jge
out
out
jmp
push
cmp
push
mov
jns
repnz
dec
shlb
andl
push
lods
add
jne
xor
mov
fwait
and
sahf
cmpsb
ljmp
in
into
pushf
lock
adc
or
imul
or
in
jmp
add
inc
pop
outsl
push
enter
loopne
stos
jmp
int3
daa
fs
pop
int
ja
pop
andb
outsl
fidivrl
or
jo
jmp
nop
idiv
and
out
jne
jecxz
in
mov
popf
add
jl
jecxz
je
jecxz
ljmp
insb
shrl
repnz
cltd
cmc
cmpsb
loope
fidivs
jle
negl
jl
xchg
mov
arpl
iret
pusha
adc
scas
add
push
in
je
movsb
mov
fcomi
dec
xchg
mov
sbb
sbb
mov
mov
mov
pop
add
roll
lods
jne
jge
stos
repnz
lret
mov
insl
in
dec
mov
jno
cwtl
sahf
pop
test
mov
rorl
cltd
xchg
jne
mov
mov
jbe
inc
mov
std
dec
push
mov
ficomps
and
mov
dec
xchg
and
xor
push
mov
sub
jne
scas
in
sub
adc
add
leave
and
lret
fimuls
fwait
gs
insb
xchg
lds
xor
stos
mov
je
cli
popa
loop
cs
iret
stos
cmp
in
or
lcall
pushf
add
outsb
mov
jne
jmp
je
bswap
shrb
scas
sbb
cmpsl
test
push
into
jge
dec
mov
loopne
dec
xchg
add
and
loop
add
ljmp
and
or
cmp
nop
mov
shrb
nop
int
jge
adc
sbb
fdivl
jge
cs
inc
xchg
rorb
xor
inc
or
cmc
test
mov
sub
xchg
aaa
cld
les
mov
addr16
dec
sahf
xchg
pop
mov
push
imul
jmp
nop
out
loopne
mov
stos
cmp
and
aad
mov
aaa
adc
xlat
inc
ret
xchg
std
adc
adc
in
outsb
inc
aas
enter
pop
in
int3
xlat
and
lods
jb
and
ljmp
aas
adc
jns
scas
lds
addr16
aaa
pop
in
sub
lcall
pop
dec
xorb
pushf
fwait
mov
sub
in
ja
xchg
pop
sbb
inc
sti
pop
sub
icebp
inc
scas
dec
movsl
or
cmp
out
xchg
lock
push
inc
pop
ss
aam
mov
nop
idivb
mov
sub
inc
mov
mov
inc
xchg
and
pop
scas
dec
push
cmp
cmpl
mov
jne
sub
rcr
dec
outsl
test
pop
mov
xor
cmpsl
enter
jmp
xchg
popa
insl
add
mov
jo
icebp
and
xchg
mov
loopne
xor
rorb
xor
xchg
adc
sub
dec
sbb
jbe
dec
shll
bnd
scas
repz
fisubrl
cltd
add
xchg
xchg
inc
cmp
sti
dec
loop
push
adc
fistpl
stos
mov
jbe
gs
mov
orl
dec
andps
testb
pop
test
mov
cld
dec
or
pop
repnz
mov
cmpb
sub
jecxz
in
div
mov
xlat
xchg
cltd
xchg
cli
mov
or
push
xor
xlat
test
mov
je
cmc
les
mov
movsl
pusha
jg
mov
xchg
cmpsl
aas
mov
pop
das
adcl
nop
push
jnp
add
inc
outsb
xchg
cld
in
mov
lea
jmp
aaa
and
mov
lahf
jge
push
scas
cmc
add
mov
jne
xchg
fcmovnu
jo
xchg
add
xchg
adc
out
sbb
and
jg
pop
jns
jo
jmp
icebp
sbb
rcll
push
mov
lods
inc
sub
inc
stos
push
enter
ret
pop
and
pusha
lods
xor
lahf
into
xor
inc
mov
add
data16
shll
repz
out
bound
jnp
cmpsl
mov
leave
inc
push
sbb
sub
cmp
clc
jge
ljmp
mov
repnz
adc
insb
push
sbb
mov
insl
jg
test
loop
and
notl
pop
push
movsl
xor
cmp
test
dec
cmpsb
js
mov
sub
notl
sub
xchg
imul
aas
mov
xchg
mov
loopne
fs
add
lds
stos
jb
cmc
cmp
sub
dec
ret
outsb
mov
leave
loopne
xlat
xchg
cwtl
js
or
push
sbb
lret
jl
insb
pop
outsb
xchg
pop
sub
mov
xor
jo
fwait
loope
sahf
outsl
push
in
mov
hlt
adc
jne
inc
out
std
cmp
lds
loop
pop
cs
es
inc
mov
push
cmp
push
dec
jae
or
dec
or
test
xchg
xchg
adc
movsb
mov
push
es
test
lcall
or
ds
jmp
out
adc
ficoms
push
sbb
outsb
cmp
xchg
stc
lcall
inc
cmp
ss
mov
stc
inc
adc
cwtl
lahf
aas
cmpsl
xor
inc
inc
mov
cmp
pop
mov
outsl
test
push
push
push
cli
cmp
in
sar
outsl
sbb
sbb
xor
lcall
scas
mov
jp
push
insl
add
pop
or
mov
clc
mov
nop
xchg
aaa
pop
arpl
xor
or
jle
mov
sbb
popf
std
scas
mov
cmp
out
sub
cmpsb
lret
loopne
adc
aaa
pop
jno
aas
mov
movsb
inc
loop
sarl
sbb
testl
jnp
xchg
xchg
lret
add
jae
mov
xchg
js
push
and
push
ret
jecxz
jns
xor
orl
adc
push
xor
stos
mov
or
int3
push
stos
icebp
cld
mov
cwtl
movsb
imul
or
mov
mov
mov
xlat
cli
iret
sbb
mov
ss
jge
addr16
sbb
dec
sub
cmp
jg
sarb
adc
fsub
adc
sbb
sbb
xchg
adc
lods
xchg
mov
outsb
xchg
stos
stc
sahf
imul
jo
mov
inc
pushaw
aas
sub
xor
lock
fwait
jp
xchg
or
pop
xchg
adc
sub
cs
inc
mov
xor
jecxz
xor
lcall
adc
mov
sbb
subb
lock
inc
sbb
rorl
jnp
cli
subl
daa
mov
nop
cmp
add
push
inc
add
or
es
fisubrs
mov
lret
pushf
hlt
fistl
inc
push
jnp
inc
mov
xchg
pop
mov
or
dec
sar
fisubs
jbe
cmovae
mov
mov
aam
outsb
sbb
test
jne
inc
sbb
into
mov
jno
and
sbb
rorb
test
ja
mov
jg
mov
repz
aam
cmp
pop
add
movsl
dec
fcoml
or
sti
lea
ljmp
jnp
mov
jo
rclb
adc
test
pusha
add
pop
mov
xchg
mov
mov
cmp
push
jl
loop
es
xor
addr16
cmpsb
dec
je
cmp
scas
cmp
push
adc
push
mov
and
sar
ret
sub
push
xchg
xor
gs
in
sub
mov
fs
jno
xor
sbb
cli
inc
ja
mov
test
jno
rcr
sbb
push
inc
inc
pop
mov
pop
xchg
jge
jno
int3
mov
shlb
adc
in
or
mov
cli
outsb
int3
test
scas
jnp
ss
scas
shrl
mov
arpl
xor
mov
mov
popa
add
sbb
cmc
lods
repnz
jge
cwtl
xchg
movsb
inc
fnstsw
rolb
or
or
jb
ja
or
xor
negl
mov
in
mov
cmc
xchg
lods
ret
xor
mov
push
call
stos
cltd
dec
scas
dec
add
push
cmpsb
add
orb
sti
mov
es
xchg
clc
sbb
iret
jecxz
icebp
push
cld
mov
inc
decl
push
mov
add
xchg
push
jnp
pop
or
sub
mov
add
cmp
es
iret
push
xchg
insl
cmp
mov
push
sti
sbb
inc
cli
pop
jg
out
imul
sbb
int3
scas
repnz
adc
mov
neg
mov
fcoml
mov
scas
shrl
nop
or
dec
fimuls
jnp
add
dec
mov
push
cs
mov
sbb
pop
lock
test
ss
push
xchg
nop
mov
das
ds
pop
mov
jo
adc
mov
lahf
fwait
ret
xor
stos
xchg
data16
inc
mov
mov
xchg
ret
rolb
mov
gs
out
mov
mov
mov
std
or
mov
fcoms
aam
cmp
fnstsw
sub
movsl
dec
icebp
mov
mov
push
shlb
dec
int
cltd
cmp
cwtl
ds
repz
pop
cs
xchg
idivl
add
mov
sub
xchg
icebp
testl
scas
mov
mov
mov
std
add
shlb
aaa
lods
idivl
cs
push
aam
pusha
mov
jne
pop
loope
add
lret
inc
cli
sbb
and
stc
mov
inc
mov
ret
xchg
jmp
leave
mov
lods
stc
sub
sbb
test
cmpb
ret
js
add
mov
cmpl
adc
jnp
jo
mov
xor
dec
xrelease
shrb
popa
bound
clc
dec
adc
stos
add
or
mov
dec
sarl
test
pop
mov
shll
xor
xor
dec
pop
stc
add
ret
movsb
ret
mov
inc
and
adc
ss
ficoms
in
adcl
cwtl
ja
sbb
xchg
cld
sub
mov
inc
out
and
jl
or
and
imul
xchg
jb
cmc
lret
xor
stc
nop
cmp
sub
xor
cltd
or
cmp
inc
inc
fists
aad
mov
les
addb
lahf
ja
shl
adc
or
test
incb
jae
bswap
notl
add
data16
sub
nop
test
xor
lods
jle
fs
jno
hlt
fnstcw
cmpb
incb
push
sub
pusha
insl
js
lds
cmc
or
in
cltd
dec
mov
pop
sarb
or
xchg
xor
mov
adc
pop
sub
lods
xor
mov
clc
inc
enter
xchg
int3
mov
cld
mov
sbb
popf
jae
jno
addl
cmpsb
add
ret
repnz
ds
dec
sub
xchg
mov
jae
int
sub
mov
xor
shrb
stc
repnz
xchg
dec
jmp
cmp
mov
adc
push
js
int3
sbb
nop
sbb
or
and
add
test
xor
enter
and
sbb
cmc
dec
dec
andb
in
and
pop
cmpsb
imul
loope
mov
and
mov
and
xchg
sbb
add
mulb
jo
cmc
xor
aaa
sbb
push
mov
fldl
mov
mov
xchg
sbbl
repnz
inc
inc
fucom
fstpt
mov
or
or
xchg
push
mov
dec
xor
cmp
xchg
ljmp
sub
aaa
lea
push
inc
mov
mov
lcall
aad
mov
repnz
aas
sub
std
mov
loopne
ret
dec
mov
cmp
adc
mov
xorb
push
stc
inc
shr
idiv
xor
notl
adc
lods
xchg
popf
xor
cmp
fst
lea
sbb
sub
sbb
cs
or
fdivl
mov
mov
nop
lds
mov
in
cmp
sub
push
enter
outsb
or
bound
mov
push
xor
incl
aaa
or
repnz
dec
jge
in
pop
cmpsl
out
push
sub
inc
out
sbb
sarl
mov
notb
dec
xchg
test
nop
imul
in
das
push
ja
mov
addr16
cmp
xchg
rcr
test
cld
xor
popf
push
pop
or
inc
hlt
lock
and
cmpsb
icebp
scas
or
aas
out
mov
loop
clc
jle
aaa
or
xchg
repnz
mov
sbb
push
pop
sahf
mov
js
inc
stos
into
xchg
cs
cmc
xchg
add
mov
std
mov
mov
rclb
sub
push
mov
lods
xchg
add
and
or
popf
jae
std
flds
push
add
jno
push
mov
push
add
or
repnz
mov
pop
cltd
sbb
and
sub
mov
jp
jb
faddl
jg
pop
or
filds
cmpb
pop
inc
fdivrs
shlb
movsb
rep
mov
lret
ffree
xchg
mov
leave
jecxz
lret
mov
or
xchg
adc
xor
lret
add
ljmp
lods
add
jae
stos
ret
xor
xor
in
jns
push
aaa
sbb
out
cld
rcl
mov
sarb
shll
jle
pop
addr16
mov
xorb
jmp
mov
dec
cmp
fstpt
inc
fcoml
fbstp
cmpsl
imull
out
aaa
stc
dec
pop
push
xchg
push
daa
mov
iret
push
cmpsl
adc
cwtl
adc
imul
cmp
mov
and
or
cmp
or
mov
pop
mov
mov
jl
dec
jb
into
mov
scas
or
out
int3
xchg
insl
xchg
push
inc
outsb
cmove
lret
jae
push
jecxz
adc
inc
pop
adcb
repz
test
mov
pop
cld
popa
mov
mov
cmp
es
add
imul
stos
mov
scas
rorb
push
mov
add
ss
dec
mov
sub
jae
sbb
xor
stc
mov
sub
mov
dec
scas
jns
cmp
jmp
mov
loope
div
or
repz
int
addl
xor
fistpl
les
sbb
lcall
stc
or
sarb
push
cli
mov
ds
push
or
push
movsl
mov
fucom
repnz
jns
or
mov
in
add
test
call
ret
xchg
icebp
leave
sbb
push
add
mov
jb
imul
push
fisttpll
cwtl
push
ljmp
leave
mov
pop
xorb
fdivs
add
imul
test
lods
fwait
push
out
mov
adc
testb
sub
cmp
or
push
mov
nop
push
lret
mov
or
xchg
ds
jg
xor
fisubrs
cmc
mov
push
adc
adc
and
mov
add
jl
xlat
hlt
fists
testb
cmp
dec
repz
push
adc
sti
les
loop
fwait
cmpsl
sbb
lcall
and
mov
sub
int
les
cmp
scas
push
cmp
xchg
mov
ds
xchg
scas
leave
aad
mov
mov
ret
adc
das
adc
mov
mov
stc
dec
int
add
sti
inc
push
inc
jmp
push
push
test
mov
mov
and
push
xbegin
lret
dec
out
sahf
movsb
mov
es
mov
lea
adc
lret
xlat
mov
and
xchg
xchg
xchg
and
xchg
cmp
or
dec
stc
inc
mov
int3
movsl
xchg
jno
sub
mov
cmpb
mov
ret
or
or
std
cwtl
mov
cmp
shrb
mov
xchg
or
mov
sub
mov
cmp
roll
inc
jmp
repnz
rorl
fdivrl
aaa
mov
lret
mov
fidivrs
jns
mov
push
sub
clc
les
sbb
dec
or
xchg
pop
pop
test
stos
inc
mov
add
push
insb
aas
xchg
mov
jno
pop
push
test
mov
mov
inc
dec
mov
add
shll
rolb
and
aas
push
mov
sub
add
adc
or
xchg
jns
cmp
add
xchg
cld
jns
sub
pop
cltd
ret
stos
int3
or
jl
adc
cmp
das
mov
aad
in
push
or
lahf
sub
je
push
mov
lods
mov
xlat
mov
cmp
jmp
sub
aaa
and
data16
int3
arpl
add
mov
movsb
sbb
mov
in
push
int
loopne
push
push
dec
rcrb
cltd
push
ljmp
mov
dec
and
pop
ret
shrb
pusha
and
fwait
popa
mov
sub
ret
in
daa
je
pop
push
jns
test
cmp
iret
mov
push
adc
push
or
xchg
test
sub
cmpsl
jo
pop
mov
mov
add
mov
dec
test
lods
bound
jae
mov
jo
sub
shrl
cmp
mov
pop
insb
or
or
scas
xchg
mov
adc
in
xor
fdivl
outsl
mov
rorb
and
int3
and
pop
stos
sti
or
and
rolb
aas
dec
shlb
jns
call
jae
cmp
xor
inc
mov
loope
jae
shll
repz
pushf
fsubs
lea
scas
xor
cli
insl
jno
getsec
xor
adc
mov
and
inc
in
cld
int
xlat
cwtl
dec
mov
sar
cltd
xlat
iret
inc
cmp
gs
inc
xchg
mov
call
xchg
insl
mov
xor
mov
test
mov
add
xor
mov
pop
adc
lea
xchg
dec
cld
or
sahf
add
pop
shl
xchg
sahf
jne
or
cmc
jae
pop
jp
fadds
in
push
and
adc
aas
mov
cmp
push
jmp
xchg
bound
add
dec
test
xchg
xor
insb
aad
aas
push
mov
sti
dec
cmp
into
sub
dec
stos
xchg
test
sub
les
sbb
jle
in
jle
ljmp
stc
jecxz
out
pop
inc
or
push
es
aas
lods
and
je
xchg
xchg
lea
cmp
adc
add
in
shll
and
adc
xchg
push
or
push
jne
in
cmp
sub
pop
xor
xor
or
cmpsl
stos
movsl
arpl
test
xchg
add
dec
aaa
cltd
mov
pop
add
faddl
daa
into
add
stos
sti
inc
les
sub
xor
mov
push
xchg
dec
pop
adc
add
test
lods
xor
xor
xor
jge
test
inc
jle
in
imull
out
adc
movsb
lods
sub
sub
adc
stos
int
sbb
mov
sbb
shrl
cmp
ret
lock
jnp
lods
loop
fs
test
ret
mov
sar
arpl
dec
out
shrl
imul
xchg
xchg
jno
fmuls
bound
fstps
dec
or
cmpsl
xor
jno
outsb
test
sub
pop
mov
je
sbb
into
outsb
inc
dec
adc
or
jge
outsb
cmp
xchg
cwtl
xchg
pop
lcall
js
pop
pop
mov
push
scas
jb
in
push
add
pop
add
nop
js
fucomip
cmp
out
dec
ljmp
int
dec
mov
mov
inc
xchg
lcall
mov
je
inc
int3
test
and
pop
mov
push
push
sub
inc
lret
xor
add
stc
mov
out
orb
add
jle
dec
imul
cmpsb
xor
adc
test
enter
andl
les
xor
mov
jge
mov
xor
push
int
popf
mov
dec
call
and
stos
pop
mov
test
lock
divl
test
add
add
fdiv
sbb
and
dec
pop
xchg
mov
pop
xor
jg
int
nop
nop
xchg
push
mov
faddl
in
push
and
cmpsb
cwtl
hlt
popa
xchg
pop
mov
in
xor
mov
insl
call
lock
repz
mov
lret
add
daa
xlat
xchg
pushf
and
fwait
sbb
cmp
pop
xchg
or
xchg
sub
mov
sbb
sbb
adc
pop
mov
out
rolb
loope
scas
fimull
shll
ja
mov
out
add
and
repnz
adc
leave
shl
cs
mov
repnz
sub
and
in
sti
int
test
outsl
xor
push
mov
data16
push
xor
lret
push
sbb
clc
inc
dec
pop
aas
push
test
and
bound
aas
pop
add
aad
insl
xor
jb
stos
ret
hlt
mov
mov
push
jns
sbb
cmp
mov
xor
in
popf
leave
mov
scas
out
pushf
jge
cmpsb
mov
xchg
das
aad
dec
sub
xchg
ss
mov
cmp
sets
movsl
push
gs
adc
stos
mov
fmull
out
pop
and
nop
dec
mov
and
xor
dec
bndldx
add
cwtl
dec
int3
dec
cmp
push
mov
mov
ficomps
popa
insb
cmp
fchs
ss
dec
repz
push
repz
sub
test
stos
jl
ljmp
cld
icebp
adcb
scas
psrad
cmp
mov
popa
push
sub
sub
xchg
cmpsl
sbbl
dec
fnstenv
xor
stos
test
lcall
dec
cwtl
mov
into
and
in
jp
orb
out
rep
shlb
jbe
loope
push
hlt
dec
and
cs
push
xchg
adc
inc
ja
xchg
imul
scas
mov
sbb
inc
sub
inc
test
xchg
test
mov
lss
nop
pop
in
loopne
mov
cmc
rcl
loope
ret
inc
js
inc
mov
aam
add
mov
pop
cmp
nop
dec
or
jle
mov
pop
test
sub
jmp
sbb
pop
das
mov
out
and
test
push
movsl
pop
add
inc
sbb
insb
mov
idivb
dec
jne
out
cwtl
xchg
sub
jl
mov
xor
and
mov
xchg
lods
jp
push
mul
push
push
pop
xor
lods
sbb
sahf
pop
sbb
fldt
imul
int
or
movsl
sbb
push
inc
dec
lods
hlt
imul
imul
mov
out
notl
xchg
xchg
ja
outsl
fsubl
and
cld
clc
fistpl
in
lods
loopne
cmp
sbb
sahf
xor
lret
jp
stc
lahf
dec
das
in
movsb
test
mov
inc
mov
cmpsb
push
mov
mov
jg
dec
rcrl
fstpt
fists
xor
lahf
adc
cltd
xor
and
xchg
lock
and
add
std
push
fsubrl
push
jge
rcll
test
and
jbe
mov
mov
xchg
stc
xor
cmp
test
repz
addr16
xor
jge
test
scas
or
je
enter
push
ret
pusha
enter
ss
mov
add
stos
pop
lds
mov
cmpsb
or
mov
jo
pop
aaa
lcall
pop
dec
loop
mov
lods
mov
fisubs
lea
ljmp
in
or
in
adc
xor
jp
and
mov
cmp
xchg
insl
pop
daa
cli
fadds
cmpsb
lahf
xor
popf
inc
lcall
and
sub
add
xchg
mov
aam
mov
pop
repnz
xchg
sar
push
rcrb
movsb
push
sarl
rcr
push
dec
mov
mov
lahf
mov
sbb
pop
lahf
lods
cmpsl
ljmp
sub
jns
mov
pop
fsubl
sub
faddl
loop
add
pop
inc
loopne
mov
jecxz
dec
leave
cli
jmp
in
aaa
xchg
push
xor
das
jg
xor
popf
and
inc
test
leave
mov
outsb
push
les
aam
mov
inc
js
stos
ret
adc
mov
movsb
xchg
and
les
loop
out
xor
inc
lea
mov
nop
cmp
movsl
cmp
pop
sbb
in
push
dec
adc
xor
jg
and
pusha
out
cwtl
test
pop
adc
and
pop
nop
mov
xchg
inc
daa
jb
in
sarl
dec
scas
inc
loopne
fwait
orl
mov
pop
sub
insl
sub
movsb
faddp
fwait
jl
sarb
pop
jmp
push
sti
push
xchg
sti
xchg
dec
sub
sarl
stos
cmpsb
xchg
mov
movsl
inc
sub
cmp
push
aaa
push
das
and
shrb
pop
les
cs
push
stc
mov
dec
adc
add
shl
jmp
cltd
rcrb
xchg
addr16
lods
mov
lcall
mov
cmp
mov
adc
push
sbb
roll
mov
cld
fidivs
iret
mov
incl
popa
sub
add
and
imulb
in
sub
mov
lret
and
xchg
mov
call
je
daa
jmp
mov
in
rorl
mov
push
repz
ds
xchg
ret
lods
xchg
in
fcmovb
scas
push
adcl
lahf
fimuls
inc
adc
pop
mov
in
sbbl
mov
clc
push
mov
push
dec
xor
xor
mov
xchg
lret
and
pop
addl
push
pop
push
xchg
loope
pop
andb
dec
fists
or
sbb
push
sbbb
xor
aaa
sub
js
mov
cs
sub
das
xchg
fs
mov
or
inc
inc
mov
mov
adc
mov
jns
mov
xor
mov
xchg
push
dec
push
xchg
push
or
push
int
int
insb
jecxz
inc
mov
mov
jmp
xchg
ret
daa
fstl
aaa
pop
inc
scas
xorl
arpl
dec
daa
push
push
mov
leave
adc
sbb
push
inc
lods
cmpsb
int3
imulb
cmpb
xor
and
aaa
ss
xor
out
jecxz
jae
pop
shr
lret
xchg
or
jge
fmulp
xchg
ljmp
jb
stos
push
dec
jo
pop
fdivp
pop
dec
cltd
adc
das
in
lods
fcmovne
sub
sub
lods
loopne
leave
push
cmp
cltd
sbb
andl
dec
loop
cmpsl
scas
sub
ds
icebp
cmp
pop
jmp
jnp
and
data16
andl
sub
add
test
andl
sbb
jns
and
push
push
mov
jns
add
cltd
adc
mov
sti
jbe
mov
mov
lahf
fcomip
outsb
es
xlat
fwait
jnp
inc
dec
pop
stc
inc
mov
mov
sub
push
lds
notl
pop
adc
xchg
into
xor
mov
push
cmpsb
jb
or
xchg
cmpsb
in
mov
sub
cltd
sbb
sarb
xchg
arpl
mov
aaa
sub
inc
sbb
pop
or
gs
rcll
or
stc
enter
rorl
enter
mov
lds
push
or
jne
cmpsb
jmp
xor
mov
inc
xor
jg
scas
pop
into
jnp
mov
adc
pop
scas
aad
fstpl
pop
push
cmc
pop
popf
sbb
mov
outsb
repz
jg
xchg
rcrl
jecxz
or
addb
imul
shrl
sub
cs
insb
sarb
js
arpl
or
lret
xchg
add
lods
jb
ja
mov
mov
dec
fsubrl
jge
insb
pushf
sbb
cltd
jns
inc
dec
pop
arpl
ss
xor
inc
xchg
and
call
add
ficompl
inc
sub
fidivrl
inc
xchg
push
cmc
xlat
push
or
sub
loop
enter
add
and
cli
lcall
icebp
ret
stc
mov
je
jne
data16
push
sbb
insl
sti
and
fsubs
sarl
cmp
shl
hlt
icebp
fsub
mov
ja
es
insb
mov
lret
xchg
jp
sub
and
adc
pop
insl
and
or
push
addr16
pop
les
lods
mov
scas
std
push
outsl
mov
inc
add
xchg
test
loopne
mov
cmpsl
sub
pop
lret
adc
jmp
sub
imul
and
mov
mov
jae
xlat
pushf
sbb
adc
xor
dec
xor
pusha
and
rcrb
mov
xlat
mov
shll
aas
or
pop
push
inc
shll
mov
mov
test
fs
lock
or
shlb
jne
scas
stos
add
hlt
sub
add
jo
cmp
or
jnp
je
popa
jbe
and
int
jno
int
adc
mov
pusha
xchg
int
xchg
ds
add
fsubrs
bound
call
test
pop
inc
xchg
pop
jbe
mov
xor
sub
jp
out
adc
out
movsl
xor
imul
cmc
sub
shrb
popa
cmpsl
js
mov
int3
sub
cli
sub
inc
je
js
xor
push
sbbb
dec
imul
addr16
jge
rcll
ja
outsl
dec
mov
cwtl
divl
mov
cwtl
cwtl
and
in
sbb
lahf
or
sbb
mov
cmp
jmp
insl
out
shl
lret
aas
pop
lcall
mov
ror
pop
jg
mov
iret
insl
and
cltd
mov
shrl
jae
mov
and
gs
sub
fcmovnbe
sub
leave
pop
xor
cmp
pop
or
fadd
popa
frstor
lods
pop
push
into
push
cld
push
or
xchg
push
shll
repnz
repnz
jl
mov
jo
insl
test
movsl
pop
lods
cli
jecxz
jb
mov
push
bound
nop
cmc
daa
arpl
and
xchg
das
pop
repz
cmc
popf
pusha
push
sbb
xor
ljmp
cwtl
popf
sub
outsb
sar
cmp
arpl
add
lcall
inc
sub
pop
enter
subl
xchg
ret
xor
arpl
sub
mov
add
jl
push
rcll
dec
pop
repz
lods
jecxz
jecxz
imul
adc
dec
pop
insb
push
push
arpl
push
pop
inc
or
lret
pop
out
aad
xor
stos
and
mov
xchg
mov
inc
ljmp
insl
push
mov
das
sbb
push
test
aam
mulb
mov
hlt
test
cld
int
fcompl
xchg
jge
xchg
repz
jecxz
sub
and
mov
push
sub
pop
outsl
loope
fisubrl
lods
fbld
sub
pop
inc
in
push
arpl
xor
ljmp
and
push
mull
mov
ret
addb
mov
inc
push
je
jb
pop
adc
mov
cmp
jb
ljmp
int
mov
movsb
subl
fucomp
stos
or
and
adc
mov
push
mov
loope
mov
xor
push
stos
push
pusha
sarl
xor
test
add
mov
jo
ret
pop
mov
mov
push
and
mov
mov
lea
sbb
mov
stos
incb
rorb
mov
cmc
jns
xor
adc
sbb
pop
repnz
xor
dec
inc
adc
dec
loope
dec
xchg
jle
cmp
mov
das
arpl
andl
xchg
jae
nop
cmpsl
bound
iret
or
mov
sub
popf
dec
cmp
jne
sbb
and
lret
xchg
sub
std
xor
lret
add
jo
and
insb
inc
imul
inc
pop
xchg
pop
fbstp
sub
and
test
mov
jb
rclb
push
adc
and
and
fisttpll
pop
int3
xchg
mov
or
int
sbb
push
popa
in
icebp
xchg
cmp
pop
push
pop
mov
jle
std
mov
sub
xchg
mov
lahf
xchg
cmpsl
mov
sbb
cmp
fidivrl
clc
xor
jg,pt
xchg
call
cwtl
lods
bound
in
dec
inc
add
inc
clc
out
and
dec
testl
adc
xchg
roll
mov
popf
scas
addr16
out
lods
dec
packuswb
push
pop
sbb
lea
shr
out
imul
les
icebp
cmp
pop
cld
outsb
cmp
in
mov
pop
cld
xchg
mov
ret
cmp
pop
lea
mov
sbb
lea
fistl
xor
ret
jns
and
or
lahf
inc
sbb
sub
repnz
and
sbb
xchg
mov
push
inc
fnstsw
and
int
sub
cmpsl
lods
mov
es
lods
stc
sbb
sbb
les
mov
mov
sahf
mov
mov
nop
sub
test
xor
add
xchg
xor
jbe
and
xchg
inc
popa
sub
dec
in
inc
lahf
lock
sub
and
sti
fisubl
xchg
js
cmp
or
test
lds
and
and
fnstenv
cld
sub
jmp
jp
pusha
adc
mov
cmp
pop
xlat
mov
loopne
mov
xchg
rcr
cmp
dec
ret
mov
stos
mov
mov
mov
xor
dec
popf
leave
jp
push
cltd
xchg
es
lret
in
mov
mov
jg
mov
iret
xchg
nop
mov
bndstx
lcall
fcompl
mov
mov
push
lahf
mov
pop
stos
mov
push
mov
adc
aad
cli
js
adc
xor
sti
jp
mov
lcall
add
outsl
jmp
movl
xchg
cmpsb
loope
sbb
xor
dec
xchg
dec
fstps
add
les
roll
adc
inc
xchg
icebp
mov
jmp
data16
mov
add
adc
inc
push
ficompl
pop
xchg
out
imul
xor
xor
icebp
lock
test
rcl
rorl
xchg
ds
stos
and
mov
adc
outsl
xlat
incl
or
shrl
and
imul
adc
mov
mov
add
cmp
inc
cwtl
lret
stc
xchg
es
stos
xchg
dec
adc
jne
loope
addb
cmpsb
inc
pusha
dec
jge
mov
xor
mov
mov
arpl
rorb
aaa
xchg
pop
push
push
dec
or
insb
adcl
adc
fwait
in
fcmovu
scas
cmp
sub
cs
sbbl
push
inc
mov
pop
jae
pushl
test
aas
ja
sub
xlat
inc
ljmp
movsl
xor
ds
out
scas
cmp
cmp
sub
test
std
fisubs
push
fs
inc
and
sbbb
xchg
je
mov
stos
int3
pop
cwtl
xchg
jbe
test
mov
sub
int
iret
rcrb
and
roll
sbb
mull
out
mov
xor
inc
and
into
jne
cmp
and
incl
add
test
xchg
and
in
mov
addb
sub
mov
add
cmp
dec
cmpsl
sbb
mov
int
shl
movl
inc
lret
push
ljmp
sbb
in
das
and
mov
push
or
mov
push
dec
int3
rorl
or
divl
xchg
jge
in
andb
or
ljmp
jl
jmp
inc
aaa
xchg
cmp
and
test
setbe
subl
ss
xor
and
pop
adc
mov
mov
and
xchg
sub
pop
inc
and
je
xor
sahf
push
lds
lea
lods
add
inc
outsl
inc
mov
out
add
xchg
mov
mov
out
mov
incl
or
pushf
std
pushf
adc
cmp
jge
push
pop
cli
aas
jmp
push
xchg
and
addl
fsts
out
add
ljmp
mov
shlb
fmull
shl
imul
lea
mov
or
mov
mov
mov
xor
xlat
sub
jg
mov
ljmp
data16
dec
pop
out
nop
dec
jmp
pop
enter
shr
cltd
addb
cld
push
shlb
scas
sbb
pushw
aas
stos
inc
test
push
int3
loopne
add
aad
cmpsl
nop
std
sti
sub
into
pop
add
jb
inc
in
jnp
jnp
mov
ret
ret
stos
rcr
insl
outsb
clc
mov
mov
dec
or
mov
xor
jg
and
jno
or
lods
sbb
inc
outsl
inc
and
lock
jae
and
cmpsb
adc
inc
xor
xchg
pop
pop
mov
ficoms
inc
inc
ret
icebp
jle
lea
les
sub
sub
jnp
add
adc
add
sar
test
or
push
repz
xchg
sbbb
push
daa
xchg
dec
dec
pmaddwd
leave
mov
mov
dec
imul
cs
rcrb
inc
or
sbb
pushl
pop
xchg
xor
sti
pop
inc
or
aad
out
push
or
add
into
test
cmc
push
jae
mov
negb
movsl
jb
imul
cmp
movsb
add
mov
in
mov
stos
mov
fldt
and
pop
je
mov
xchg
pop
mov
out
pop
outsl
and
inc
mov
xchg
inc
lds
push
aas
mov
xchg
divb
into
fcompl
or
dec
cld
gs
dec
repz
rcrl
adc
cmp
pop
dec
fnstsw
xchg
mov
pushf
dec
adc
loop
mov
add
jnp
sarl
fsts
inc
pop
inc
cltd
inc
jge
and
dec
out
pusha
mov
jne
and
mov
ds
push
stos
cmc
cmp
dec
aas
mov
xor
lret
jne
ret
ja
xor
cmpl
and
xchg
push
imul
mov
rcll
fisttpll
jg
in
stos
cmp
lret
in
mov
test
fsubp
mov
jle
data16
xor
push
inc
sub
repnz
mov
sbb
and
mov
jae
sbb
scas
mov
cmp
push
xchg
sahf
jae
mov
jb
mov
sbb
or
int3
mov
mov
pusha
pop
stos
jmp
bound
jnp
lea
sti
push
repz
negb
and
loop
pop
mov
cmp
mov
ret
repnz
mov
out
cmp
shr
out
or
ljmp
xor
jge
mov
pop
inc
pop
inc
xor
fwait
bound
pop
mov
enter
in
test
xchg
dec
jmp
stc
repz
aas
inc
mov
inc
xor
out
dec
stos
jle
orb
test
fisttpl
push
xchg
insl
std
mov
and
call
cltd
dec
lret
iret
pop
xchg
add
cmp
mov
fsubp
movsl
insb
mov
incb
repz
ljmp
in
outsl
and
sub
repz
xor
xor
cmpsb
movsb
and
fidivs
js
roll
xor
jb
mov
sbb
and
lret
inc
fwait
ljmp
les
test
clc
pop
sti
enter
push
jl
inc
pop
sti
sub
repnz
sti
js
ds
push
mov
mov
or
dec
sbb
lock
lods
mov
xchg
pop
std
inc
mov
xchg
and
in
pushf
push
je
into
aad
adc
push
repnz
sub
shl
cltd
jmp
cmc
fisubrl
jno
stos
pop
imulb
jae
cmp
inc
lcall
je
in
or
rorb
loopne
mov
mov
cmp
fstl
mov
int3
xor
das
pop
jb
jns
enter
mov
jg
insl
cwtl
xor
inc
xlat
cmp
repnz
push
aad
cld
mov
and
int3
fcomi
loopne
lds
sbb
add
jbe
sub
adc
lahf
fmuls
mov
test
fsubl
dec
bound
fs
push
lock
add
dec
jl
popf
sub
mov
mov
jge
pop
stc
cmpsl
push
popa
lock
push
sub
or
add
loop
pop
pusha
pop
ret
xchg
mul
jle
movzbl
jle,pt
or
aad
sbb
add
dec
insl
into
notl
xor
rcrl
and
jecxz
sar
cs
and
adc
pusha
daa
loop
repnz
jb
inc
add
jge
popa
das
pop
cmpsb
mov
dec
adc
inc
cmpsl
xchg
adcb
dec
mov
jmp
into
icebp
xor
dec
cwtl
sub
and
mov
sbb
roll
xor
repz
gs
ds
xchg
cmpsl
arpl
xor
dec
sbb
lcall
xchg
jp
pop
or
mov
js
fincstp
xchg
pop
adc
or
xor
mov
fisubrl
push
in
dec
pop
mov
fs
subb
mov
cmp
imul
xchg
dec
pcmpgtd
cmpsl
pushf
ds
aaa
inc
xchg
jge
jnp
ja
aam
out
sarl
icebp
cmc
lods
inc
cmpsl
add
mov
or
cmp
jae
cmp
push
sbb
sub
mov
je
xchg
ds
xchg
rep
shrl
imul
test
repz
xchg
push
add
hlt
pop
sub
jp
in
out
and
sbb
and
cmp
test
sub
push
subb
mov
jns
insb
je
imul
das
fwait
inc
repz
repnz
js
loop
lret
lcall
jo
cmp
or
clc
mov
data16
addr16
lods
repnz
aas
xchg
xor
fadd
push
add
in
fndisi(8087
jnp
push
std
jge
lret
rol
movsl
in
jg
shlb
inc
jge
lret
aad
push
mov
mov
mov
dec
jns
dec
mov
arpl
loopne
xchg
lock
xchg
adc
fisttpl
pop
or
addb
and
clc
mov
movsb
mov
rol
stc
cmp
push
mov
mov
imul
push
hlt
cld
lods
mov
cmp
movsl
lahf
push
mov
rcrb
dec
and
out
pop
imul
and
dec
and
jg
add
sti
sub
dec
dec
adc
lea
mov
sub
push
dec
adc
mov
jecxz
shrb
jecxz
jbe
in
in
int3
cli
jbe
test
lds
stos
mov
mov
jne
xchg
sub
mov
cmp
sbb
push
push
cli
lds
xchg
out
subb
loope
out
cmc
dec
icebp
ss
ret
push
jb
mov
stc
xchg
jl
cmpb
sbb
add
sar
sub
xor
movaps
dec
inc
cs
push
out
mov
das
out
pop
mov
adc
or
lea
mov
in
jno
stos
mov
mov
mov
mov
add
in
ja
stos
sbb
mov
ljmp
rorb
or
sarl
and
xor
inc
cltd
loop
movsl
adc
inc
adc
comiss
jmp
pop
push
loope
xor
sbb
outsb
scas
std
pop
data16
adc
mov
lret
xor
outsl
mov
je
cmp
orb
or
cmc
mov
sub
push
int
loop
int
jmp
add
jno
lret
out
jno
jb
dec
or
and
dec
popf
mov
jbe
incb
int
cmp
mov
cltd
or
mov
cmc
jle
loopne
add
add
dec
leave
fdivl
popa
sub
pop
or
mov
mov
add
push
jne
mov
inc
mov
sub
add
outsl
sub
mov
gs
push
mov
jbe
fistps
cs
push
mov
sub
xlat
push
lret
arpl
imul
cmp
addb
jmp
into
sbb
rorb
mov
sub
or
int3
andl
xchg
hlt
shrb
or
xor
aam
and
iret
aas
mov
adc
xor
mov
mov
nop
lret
rorl
imul
in
jno
pop
push
xchg
mov
mov
mov
cmp
sub
enter
jg
sti
pop
enter
scas
pop
jo
sub
cmpsb
jecxz
fincstp
lods
repz
repz
cwtl
or
and
fimuls
cmpsl
xchg
jae
xchg
mov
jl
shl
icebp
int
pop
pop
jmp
jbe
fsts
in
or
scas
into
repz
mov
push
jge
insb
add
dec
jbe
jo
stc
inc
or
cwtl
testl
gs
call
xor
adc
adc
add
push
push
jno
fsubrp
leave
mov
fistpll
test
jnp
cltd
or
dec
jbe
int
data16
pause
push
dec
testb
mov
insb
fcomps
pop
push
scas
inc
rcr
mov
mov
cmp
or
xchg
adc
dec
inc
xchg
imul
in
or
jp
rcl
mov
cmp
idivb
stc
push
scas
or
xchg
int3
mov
adc
xchg
mov
xor
push
lock
sub
repnz
clc
push
jno
or
dec
inc
mov
loope
outsb
jns
dec
in
jnp
shrb
test
adc
stos
push
iretw
loopne
adc
and
adc
rol
mov
mov
popa
arpl
inc
pop
pop
mov
test
fmull
inc
mov
dec
repz
pop
pmulhuw
insl
andb
pushf
shrb
outsb
fcompl
push
cmp
popf
jl
cmp
lock
fdivrp
push
arpl
stc
pop
or
loope
imul
mov
mov
sahf
repz
dec
icebp
sbb
push
jbe
lods
int
push
sub
fdivs
cs
mov
addl
lock
ret
cmp
push
pop
sub
scas
fs
push
add
jns
mov
test
pop
sub
push
repnz
push
mov
add
lahf
loop
out
xchg
mov
or
call
mov
push
mov
dec
jp
ud0
fidivrl
sub
popf
mov
loop
movsl
mov
hlt
data16
xor
mov
mov
xor
test
stos
jle
add
jmp
idivb
cli
inc
insl
lea
and
arpl
ret
enter
push
pop
scas
push
pop
fsubs
out
ret
adc
stos
dec
or
out
je
stos
cmp
push
into
mov
cmpsl
jmp
jmp
jmp
cwtl
sub
jecxz
stos
mov
icebp
ja
add
imul
pusha
mov
addr16
idivb
cmpsb
or
add
lods
fcmovnb
idivl
stos
cwtl
mov
mov
mov
les
enter
ljmp
enter
jmp
ljmp
mov
or
pop
push
cli
and
jns
xchg
or
pop
push
or
jno
imul
imul
xchg
std
mov
xor
jno
mov
sbb
fisttps
and
repz
mov
mov
pop
jp
mov
xchg
inc
mov
insb
mov
ret
sub
je
cs
and
sbb
nop
imul
cmpsl
cmp
pop
mov
jo
push
inc
fldenv
decl
rcrb
mov
js
sbb
push
into
lret
addr16
dec
lds
xlat
mov
imul
inc
and
aam
cmp
addr16
jb
enter
nop
test
mov
out
jno
xorl
add
push
or
sub
mov
xchg
rol
stc
inc
pop
cli
lret
aam
jl
dec
insb
js
jl
xchg
or
std
pop
ljmp
xchg
aas
sub
sti
or
mov
mov
push
lahf
mov
xor
out
jo
aad
insb
xchg
gs
mul
ret
imul
es
push
imul
loopne
add
jnp
sub
jns
repz
add
ror
gs
sub
inc
into
subb
jle
in
and
call
lods
sahf
xor
shl
lock
mov
loopne
sbb
lret
add
jle
inc
sbb
addr16
dec
test
jle
pop
mov
xchg
je
fadds
pop
sarl
mov
rcll
test
ja
ficompl
xor
test
add
mov
sbb
mov
jb
repz
inc
popa
jnp
hlt
rorl
loop
xchg
pop
cmp
inc
or
rclw
or
iret
cmp
adc
inc
ljmp
addr16
sub
loop
xor
cmc
inc
xchg
mov
stos
daa
test
int
je
and
aas
push
mov
mov
dec
loop
pop
dec
xor
pop
xchg
push
adc
test
lahf
movsb
ret
iret
fcmovne
inc
mov
iret
dec
pop
or
or
repz
mov
push
sahf
insl
cmpsl
mov
mov
mov
repz
pop
leave
shrb
xor
iret
std
fiaddl
lock
push
inc
incl
or
xchg
sbb
or
fistpl
test
lcall
lea
jnp
js
cmp
gs
adc
jb
arpl
push
jecxz
gs
in
vmwrite
add
jecxz
outsl
adc
fcomp
lock
pop
stc
and
lock
mov
cmp
call
dec
xchg
subl
shrb
xchg
fstps
loope
les
sub
adc
aas
add
fcomps
fisttpl
loope
pop
dec
cmp
inc
js
jb
test
or
pop
fwait
mov
mov
movsb
int3
shrb
into
pop
or
rorl
adc
push
sahf
adc
das
loope
cltd
addr16
repnz
pop
in
sbb
lret
outsl
fisubs
mov
test
dec
jb
dec
lret
jbe
cmc
push
or
xor
das
mov
fwait
in
lds
jg
cmc
sbb
xor
pop
dec
pop
xor
mov
jge
shlb
sbb
sub
adc
push
test
sbb
ret
xchg
sbb
es
je,pn
aaa
xchg
or
ss
hlt
jnp
inc
xchg
roll
movsl
xchg
and
sub
adc
loope
in
les
sbb
sbb
mov
mov
inc
call
pop
sarb
lds
faddl
xor
mov
mov
jecxz
shrl
pusha
fwait
mov
jecxz
xchg
ss
adc
inc
jb
mov
ds
aad
adc
inc
adc
push
inc
xchg
mov
pop
negb
inc
xchg
jb
adc
adc
pop
jb
lret
add
xchg
mov
stos
sti
mov
fstpl
lcall
xchg
push
aas
jle
test
add
aas
loope
mov
sub
and
sti
dec
push
and
out
notb
stos
fdivrl
sub
xchg
jmp
movsb
add
shl
xchg
lret
int3
sbb
in
xchg
jae
cmp
add
xor
mov
in
aad
scas
mov
loope
or
add
xor
inc
pop
call
out
imul
jae
fsubrl
pop
sbb
xor
sub
sub
jmp
mov
sahf
and
insl
cmp
jmp
out
pop
imulb
sbb
stc
andl
insb
and
lds
pop
aaa
mov
mov
jno
aas
jo
out
and
sbb
adc
je
pushf
jnp
cwtl
jo
pop
in
xchg
les
mov
fisubl
ror
clc
push
jns
pop
ss
or
cltd
aaa
and
lcall
rcrl
cmpsb
popf
xchg
cmovo
xor
jbe
cmp
mov
outsb
mov
repz
dec
mov
sar
cmp
jns
paddw
test
jg
imulb
mov
in
jle
outsb
lods
cld
xchg
aas
dec
pop
insb
rcll
cmp
test
gs
std
pop
loop
mov
cltd
pop
xor
insb
mov
dec
rcrb
rorl
sbb
andl
cmpb
sbb
pop
insl
in
test
loope
jb
mov
add
pop
xchg
fucomp
ja
test
push
pop
mov
sub
push
mov
and
in
ficoml
outsl
mov
jnp
mov
and
sub
inc
pmulhuw
dec
mov
push
imul
jns
popf
cmpsl
push
pop
xchg
dec
clc
adc
shrb
imull
mov
int3
push
ret
aas
rolb
loope
sub
fsubrs
jg
jecxz
fstl
mov
mov
xor
scas
pop
addl
inc
mov
loopne
int3
sti
push
repnz
shrb
add
test
insl
push
mov
adc
jae
icebp
add
sbb
mov
mov
mov
mov
loop
stos
xor
or
jno,pt
stos
adc
sahf
mov
push
movsl
out
idivb
sub
sbb
push
call
or
adc
aad
and
iret
jb
push
sti
add
sti
mov
dec
in
dec
sbb
aam
test
cmp
pop
das
jnp
inc
sub
xchg
repz
xor
push
out
in
into
xor
xchg
mov
sub
stos
rcr
cld
and
mov
je
xchg
iret
bnd
pop
cmc
inc
int3
les
dec
jb
sbb
or
adc
shll
popf
popa
inc
cmp
xchg
push
jg
sbb
imul
and
out
adcb
push
add
mov
push
lcall
jne
stc
ret
mov
jmp
adc
adc
dec
lock
xor
sbb
xor
orl
stc
or
xchg
data16
arpl
xor
push
ret
mov
jl
shlb
lret
cmp
push
lret
dec
int
outsl
mov
loopne
xchg
or
mov
xchg
cmc
or
mov
call
ret
pop
adcb
mov
daa
pop
stos
lds
jp
out
adc
sbb
popf
push
xchg
cmp
or
push
xchg
sti
sar
and
into
shlw
jge
cli
pop
push
dec
lods
add
xchg
outsb
hlt
lock
mov
mov
and
sbb
jecxz
lds
adc
stos
pop
gs
sbb
mov
pop
inc
and
push
mov
sbb
and
xlat
and
dec
sbb
cltd
xchg
adc
arpl
and
sarl
out
pop
sbb
jg
jmp
jbe
data16
ret
into
or
pop
mov
popa
in
sub
inc
ret
mov
or
imul
shl
fnstsw
or
mov
mov
push
dec
push
jge
out
inc
shrb
iret
push
inc
dec
jo
mov
std
lock
out
das
out
scas
jmp
xchg
xchg
clc
sbb
xorb
outsb
push
lock
sbb
xor
cwtl
in
or
idiv
icebp
or
jns
mov
jecxz
mov
loopne
xchg
sti
cmp
mov
cmp
daa
rclb
push
push
and
xchg
add
ja
int3
shlb
idivb
sbb
fs
jle
ljmp
inc
outsl
repnz
js
insl
xlat
cmp
sub
outsb
or
out
push
sub
xchg
cs
adc
sub
xchg
lret
jae
mov
hlt
aad
or
pop
sbbb
mov
bound
ficompl
jbe
or
mov
xlat
arpl
pop
mov
mov
cmp
aam
shl
out
add
aad
push
inc
lock
push
inc
xchg
lret
loope
fidivrs
push
cwtl
adc
inc
lea
insl
add
sbb
and
addr16
andl
xor
pop
loopne
xor
loop
pop
cmpsl
dec
addr16
xchg
sti
cmpxchg
xchg
fwait
cmpsb
ret
adc
xchg
pushf
sbb
dec
pusha
xchg
scas
xchg
sub
push
daa
out
in
shlb
mov
dec
es
rolb
mov
shrb
cld
orb
cmpsl
gs
xor
clc
hlt
pop
jb
je
cmp
hlt
pop
imul
xlat
cmpsl
jmp
movsb
stos
sub
out
insl
add
fistps
push
sub
mov
icebp
pop
ficoml
dec
jecxz
or
adc
mov
jl
icebp
adc
xsave
shl
jnp
out
cwtl
stos
sub
jle
jp
xchg
push
push
adc
sbb
mov
jecxz
mov
mov
mov
mov
mov
jae
cmpsb
jle
pop
out
stc
dec
daa
pop
pop
mov
pushf
ret
jns
pushf
xlat
mov
test
mov
pop
sbb
lods
push
out
dec
ret
iret
and
jmp
fwait
push
ss
nop
outsl
jmp
add
push
daa
stos
mov
in
pop
mov
daa
ljmp
sbb
popa
lods
or
out
insb
jmp
push
xorl
pop
in
mov
gs
or
leave
jge
inc
imul
jecxz
mov
out
mov
in
negl
pushw
imul
es
push
repz
fsubs
mov
sbb
or
add
jg
adc
out
lds
add
ret
sub
or
mov
ss
xlat
push
fs
adc
sbb
imul
and
add
or
jo
inc
es
jbe
add
pop
sahf
pop
shrl
add
mov
push
int
xchg
jne
or
xor
or
fisubrl
hlt
cmp
inc
cmp
hlt
lret
adc
dec
dec
push
jo
xchg
out
cmpsb
ret
insb
mov
push
dec
push
ss
test
into
jecxz
push
cltd
inc
outsl
cltd
adc
bound
lock
stos
out
int
fs
jbe
xlat
je
xchg
fdivs
push
mov
lret
cs
mov
out
adc
dec
out
ss
xchg
adc
imul
and
push
mov
push
outsl
test
in
jmp
movsl
push
pop
icebp
movsl
hlt
inc
subl
or
mov
dec
jp
pop
lret
outsb
sub
xor
fstp
stos
cld
sub
fisttpll
dec
decb
or
cmp
insb
cmp
inc
jbe
movsl
xor
bound
loope
mov
mov
je
push
cmp
cltd
xor
mov
test
loop
push
jae
push
xor
bnd
sbb
xchg
xor
enter
mov
cmp
out
jmp
and
aaa
and
xor
into
jle
scas
arpl
sub
loope
inc
pop
inc
pop
jp
stos
out
xor
jno
jle
sarl
pop
push
insl
and
push
dec
push
out
push
sbb
nop
sbb
fwait
mov
sahf
cmpsb
loope
mov
ja
jecxz
add
int
movl
push
pop
ret
out
sub
push
lea
mov
cltd
hlt
test
jg
mov
pushf
addl
out
adc
cs
mov
lods
ss
out
lds
decb
enter
aaa
idivb
into
or
scas
fadd
jne
pusha
push
ret
mov
mov
mov
out
incb
pushf
push
or
xor
out
inc
ret
test
cmp
add
inc
adc
xchg
movsl
adc
mov
das
adc
notb
notb
scas
mov
arpl
inc
jmp
xor
lcall
filds
test
loope
mov
or
or
mov
push
mov
jecxz
sub
sub
shrl
ja
bound
dec
outsb
push
push
mov
mov
shr
std
push
popa
jp
xor
sar
andb
jae
loop
and
popf
stos
movsb
ja
bound
cmp
xchg
stc
fs
das
je
and
push
in
mov
push
cli
mov
xchg
popa
cmp
ljmpw
popf
xlat
int
jp
dec
movsb
cmpsl
in
or
mov
push
xchg
xor
push
lea
sbb
xorb
andb
inc
jg
mov
fisubs
out
cmp
clc
test
iret
sbb
adc
outsl
and
shr
outsb
cwtl
loopne
cmc
fsubr
cmp
push
fldenv
jbe
adc
arpl
dec
icebp
xchg
xor
inc
inc
sahf
daa
loope
aam
les
out
pop
sub
fs
cmp
push
or
sahf
out
jnp
xchg
cmp
in
sub
cwtl
inc
xchg
cmpsl
adc
mov
jle
sahf
jmp
cmp
hlt
ds
jmp
gs
and
adc
xchg
cmp
and
in
and
push
rcr
lret
sbb
xor
je,pn
sbb
fldcw
jo
push
sti
xchg
fisttpl
adc
sub
dec
loope
imul
repz
mov
mov
mov
adcl
jmp
pusha
mov
pop
inc
insl
jb
hlt
jno
cmp
mov
mov
int
adc
xor
adc
inc
fldcw
insb
imul
loopne
jbe
fiadds
in
mulb
rclb
sbb
data16
jnp
inc
aad
xor
pop
jp
in
lret
fcoms
movsl
pop
cmpsb
mov
cltd
rclb
mov
xchg
xor
sbb
push
inc
leave
push
inc
sub
mov
xchg
xchg
xchg
jnp
je
jne
adc
les
sub
inc
ljmp
je
arpl
mov
lret
rcll
or
movsb
rcl
in
fldenv
xchg
insl
dec
call
xchg
mov
out
subb
pop
and
or
cltd
sarl
mov
sub
pusha
xchg
mov
push
test
lods
loope
aas
into
gs
jo
jl
aam
xor
push
jmp
xor
fs
jecxz
xor
adc
loop
push
ds
dec
movsb
xor
mov
cmpsb
lock
notl
push
xchg
scas
and
mov
inc
mov
jae
and
pop
mov
enter
jb
ljmp
mov
in
fwait
and
insl
xor
cltd
inc
popa
shlb
mov
sahf
mov
ljmp
sub
movsb
enter
lods
fcoml
jg
or
mov
and
incl
add
cmp
or
shr
push
cmpsb
mov
or
dec
stos
inc
pushfw
push
outsb
mov
das
push
test
pop
je
pop
mov
jge
std
xor
jmp
push
jne
sbb
xchg
or
inc
clc
or
add
adc
adc
mov
stos
in
xor
xor
xchg
aad
loop
fbstp
push
in
inc
fldl
dec
sti
cmp
jb
hlt
dec
add
icebp
push
sbb
jp
push
add
imul
sub
push
jle
jne
jne
xchg
push
mov
insb
in
fs
call
popf
or
out
inc
les
iret
lods
fdivrs
cltd
nop
popa
insb
shrl
adc
in
ret
shrl
mov
addl
lods
xchg
add
mov
scas
iret
shl
dec
mov
mov
dec
cltd
loopne
jae
js
jns
jo
fldt
leavew
add
in
movsl
fisubrs
inc
mov
dec
cltd
fwait
ss
sahf
adc
ljmp
push
nop
cmp
ss
mov
dec
mov
sub
push
lea
fwait
ds
xchg
leave
mov
dec
std
or
mov
mov
fdivs
pusha
mov
jno
test
mov
xor
repz
dec
out
inc
lahf
ss
mov
sub
test
fldl
jmp
jo
lock
push
and
test
sahf
sbb
dec
add
aaa
push
xchg
rorb
cli
movsl
or
cwtl
xchg
popf
sbb
lds
sahf
mov
mov
movsl
push
es
outsb
xchg
cli
xchg
xor
cld
repz
jle
mov
xor
in
in
aas
imul
sub
inc
nop
sbb
lahf
inc
inc
sbb
mov
sub
sahf
sarl
and
shufps
xchg
aam
ds
lds
outsl
pop
adc
and
aad
push
shlb
lcall
movl
andl
icebp
aam
movsl
fldl
dec
push
mov
sub
lcall
ficoms
push
sahf
daa
mov
cli
mov
cmpb
pushf
js
cmpsb
pop
and
cmp
mov
imul
stc
sbb
jmp
cld
aad
add
push
in
sub
adcb
lods
pop
mov
fsqrt
cltd
jl
jno
imul
fstpt
sti
push
cld
sub
rcr
aaa
jno
xor
xchg
imul
ss
dec
pop
ljmp
sub
lret
push
xchg
pop
adcl
or
out
mov
xlat
fistl
jge,pn
fmuls
inc
stos
mov
xchg
or
sahf
adc
push
pop
push
push
fmuls
out
mov
inc
scas
mov
or
dec
jg
xchg
ja
movsb
lret
lds
out
adcl
xor
sbb
repz
mov
mov
mov
jp
test
rcr
loopne
jl
xchg
cmp
dec
das
movsl
xchg
dec
push
pop
adc
aas
mov
mov
mov
xor
inc
xor
and
sub
insb
icebp
repnz
lret
push
inc
mov
inc
dec
mov
jp
jae
ret
popf
aaa
or
sbb
cld
mov
stc
aam
and
mov
outsb
outsl
pop
fwait
js
adc
push
fstps
xchg
clc
movsb
jnp
fwait
mov
lahf
sbb
enter
cld
inc
scas
aad
in
and
call
les
fdivrl
fcomps
cmp
push
mov
repz
repz
xchg
mov
jl
sub
jp
xchg
std
aaa
mov
mov
sub
insb
xchg
fwait
nop
daa
mov
mov
xchg
mov
add
or
stos
data16
jp
shl
lahf
fdivl
test
cmp
in
pop
xor
orl
mov
aas
out
clc
data16
in
out
sbb
sub
pop
je
dec
dec
adc
cld
or
dec
aaa
xor
pop
incl
stos
inc
xchg
test
lret
lret
dec
adc
mov
aas
xchg
dec
daa
mov
in
mov
fcmovnu
or
xor
data16
push
mov
adc
dec
in
mov
rcrl
leave
mov
into
daa
cld
push
loope
cmp
lock
add
pop
arpl
adc
js
inc
out
movsb
push
jg
xchg
xchg
push
mov
inc
test
adc
rolb
testb
fwait
adcb
mov
jle
mov
sub
test
lods
icebp
push
jne
lret
mov
mov
cmpsl
add
dec
xor
ljmp
lahf
js
xor
fsubrs
xchg
movsl
sub
in
sbb
sbb
push
lret
xchg
cmc
jg
xor
inc
xor
lcall
adc
xchg
cwtl
xor
push
mov
pusha
aam
pop
movsl
fcmovne
outsb
icebp
in
daa
jecxz
add
scas
inc
and
xchg
loop
hlt
cmp
mov
outsl
cmpb
bnd
jmp
enter
mov
fcmovnb
push
sbb
shrb
sets
aam
iret
mov
mov
cmpsl
and
lcall
cltd
sbb
enter
in
rorl
int
icebp
gs
sbb
fbld
enter
jae
xchg
ljmp
add
pop
inc
stos
pop
mov
daa
dec
xor
ffreep
jns
adc
pushf
shlb
mov
push
test
xor
mov
adc
adc
arpl
dec
sbb
cmpsb
inc
jmp
das
ds
mov
sub
test
jns
sub
loope
add
inc
dec
nop
xchg
jmp
jne
mov
jb
add
cmp
setle
ja
das
pop
pop
sub
or
mov
stc
sbb
add
mov
push
jl
rcrb
xchg
or
addr16
pusha
push
rolb
stos
and
xadd
ljmp
sbb
push
lahf
push
adc
sbb
jecxz
shlb
cmp
loopne
outsl
clc
daa
cmp
cmp
cmpsl
addr16
xchg
bound
neg
pop
dec
iret
xorb
repz
int3
flds
mov
add
add
jl
mov
notl
or
aam
sbb
rcrb
mov
jecxz
repnz
sti
sahf
int3
mov
jo
movsl
sti
js
repz
test
ljmp
sbb
lahf
push
cmp
ror
or
and
sbb
mov
cmpps
test
sbb
xchg
mov
pslld
dec
mov
addr16
into
xchg
out
inc
repnz
test
xchg
js
dec
cs
cmp
les
push
jecxz
cmp
jbe
scas
repnz
push
push
icebp
push
cli
mov
inc
add
dec
fld
cmp
les
arpl
stos
lds
jnp
push
xor
sahf
adc
push
dec
xor
adc
movsb
pop
xchg
nop
jae
imull
fsubs
sbbl
call
sbb
subl
xchg
jbe
xor
add
cmpsb
mov
mov
mov
xchg
mov
lea
cmpsl
adc
sub
mov
adc
clc
push
push
inc
in
in
xchg
mov
pop
add
mov
call
jnp
addr16
inc
out
dec
shl
mov
mov
mov
inc
ss
sub
int3
mov
testl
mov
roll
xor
lods
pop
cmp
push
lahf
loop
jbe
fwait
mov
test
pop
jb
cmp
jns
cmpsb
scas
stc
or
sbb
inc
adc
cmp
jmp
push
stos
xchg
xorb
pop
aaa
mov
int3
adc
adc
std
punpcklwd
adc
xchg
xchg
pop
xor
imul
jo
repz
xchg
xor
and
mov
mov
adc
cwtl
ljmp
inc
cmp
popa
mov
flds
cmpsl
stos
loop
adc
out
inc
ficoms
mov
xchg
rolb
sub
gs
adc
aam
loopne
sbb
pushf
inc
movaps
xor
mov
jno
std
jne
push
mov
in
pop
addb
sbb
in
aaa
sti
adc
lods
mov
sti
mov
sub
or
daa
clc
jb
or
push
pushf
cmp
mul
loopne
sarl
scas
shl
inc
dec
adc
int3
mov
mov
lock
mov
jl
lahf
mov
arpl
mov
dec
and
icebp
mov
ja
arpl
in
rolb
mov
out
xor
lcall
outsb
push
and
mov
scas
out
jns
mov
fs
or
push
pop
clc
mov
test
in
mov
or
adc
ss
imul
stc
scas
cltd
lret
add
daa
adc
leave
jne
jmp
fwait
xchg
movsb
mov
mov
inc
mov
sub
sub
and
dec
mov
jge
cmp
xchg
mov
pushf
or
push
sub
sub
sub
or
push
mov
jecxz
cmpsl
mov
stc
xchg
in
adc
jns
not
je
jnp
das
lret
xlat
lret
js
fbld
cmp
jl
pop
mov
push
std
push
stos
sbb
outsl
shrb
or
dec
jle
pop
dec
sbb
cmp
jae
mov
paddusb
adc
or
shr
pop
and
push
rcrb
loopne
test
bound
push
mov
lods
jp
lahf
dec
std
enter
loop
lea
out
shl
rol
jl
mov
push
test
pusha
shrb
inc
jmp
xchg
pop
adc
jo
outsl
jno
pop
mov
lret
inc
xor
lcall
jb
dec
xchg
stos
ds
aad
sub
mov
sbb
stos
sbb
mov
jo
xchg
and
pop
lods
or
push
cmp
leave
not
mov
mov
sti
test
lret
cmp
pop
imul
lds
daa
mov
leave
aad
xlat
xchg
in
xchg
ljmp
out
scas
push
std
clc
adc
push
mov
dec
or
sub
dec
mov
cltd
add
lock
pop
insl
enter
jmp
inc
inc
lds
adc
nopl
jmp
ss
mov
pop
fwait
inc
dec
xchg
xorb
or
in
xor
daa
dec
out
pop
popf
push
sbb
sahf
daa
into
gs
push
dec
jle
sti
add
inc
insl
push
or
sti
das
pop
cs
in
inc
cmpsb
inc
inc
mov
dec
fabs
popf
mov
and
ja
push
inc
jo
or
out
js
push
or
out
test
jo
inc
shll
dec
adc
imul
lahf
adc
pop
sub
aas
dec
sub
psubw
add
xchg
pop
leave
je
mov
inc
adc
mov
in
out
mov
push
jge
and
nop
lcall
cmp
addr16
out
push
xor
lret
inc
pop
loop
fs
ret
sti
pop
cs
jge
inc
insl
iret
aad
jp
scas
sarl
inc
mov
pop
xchg
ja
jecxz
and
mov
ljmp
movsl
jae
xchg
push
xor
sub
out
pop
testl
jo
or
dec
add
add
pushf
addl
sti
scas
ror
add
test
mov
mov
adc
lcall
sbb
in
sub
mov
sub
xor
nop
hlt
testl
or
jecxz
lea
mov
nop
test
mov
sub
add
mov
mov
mov
adc
sbb
xchg
mov
pushf
mov
jle
into
rorb
mov
das
dec
mov
aad
xor
lds
xchg
sahf
inc
jge
adc
sbb
mov
mov
push
leave
xor
or
push
fstpt
add
clc
mov
pop
fwait
jle
adc
jge
xchg
cmp
shlb
movl
and
insl
les
btl
loop
lret
add
imull
inc
pop
pop
cmp
fisttps
adc
mov
sub
pop
mov
sub
push
lcall
dec
lods
scas
cs
aas
inc
ljmp
add
mov
inc
pop
andl
push
cmp
lock
test
add
lds
je
adc
daa
dec
ljmp
cmp
adc
fstpl
shrb
call
mov
fwait
cmpb
jb
ds
repnz
mov
inc
mov
or
loopne
push
mov
mov
xor
xor
cmc
addr16
sub
add
push
mov
fs
xchg
push
aam
jbe
inc
aaa
in
cmp
test
pop
cmp
fs
in
notb
clc
pop
loop
sub
push
dec
icebp
mov
cs
and
insl
cmpb
xor
mov
fcmovu
xor
fnsave
inc
sahf
inc
inc
es
add
test
mov
sub
jle
lret
in
fimull
adc
inc
or
add
inc
xor
inc
or
inc
dec
stos
cmp
dec
lcall
mov
sub
cld
mov
jne
adc
adc
fwait
cmpl
push
xor
mov
jp
les
orb
or
popa
ja
xchg
jnp
jne
mov
push
test
ljmp
fimuls
mov
movl
dec
hlt
sbb
mov
or
dec
mov
push
mov
xchg
test
mov
std
shrl
out
shll
dec
inc
movl
dec
jle
mov
jo
lcall
je
jge
addl
aaa
inc
lret
add
ja
xchg
aaa
in
sbb
ja
pop
push
jmp
push
mov
lods
xchg
out
add
jecxz,pn
scas
neg
cmp
adc
fsubs
rcl
test
sti
int
adc
insb
movaps
mov
add
inc
sbb
stos
scas
add
fisubrl
add
aaa
dec
test
mov
push
adc
ret
ror
das
push
xchg
into
sub
push
mov
lock
lds
outsb
aad
movsb
in
push
leave
jecxz
dec
cli
xchg
int
push
dec
insb
popa
cli
xchg
inc
mov
or
addr16
jae
inc
inc
mov
lock
jae
pop
xchg
jnp
jns
mov
test
leave
pop
jle
inc
add
arpl
sbb
cmp
hlt
xorb
pop
lcall
in
push
xor
lock
popf
out
insb
xchg
pusha
xor
or
mov
pop
and
lahf
sub
adc
push
rcr
pop
xchg
push
or
addr16
adc
mov
mov
pop
add
int
pop
mov
push
mov
ret
cmp
jo
das
addb
sbbl
pop
sti
inc
push
or
jmp
inc
test
leave
iret
adc
jp
addl
pop
pop
shlb
loopne
mov
xchg
repz
test
lock
jbe
xchg
loop
inc
fmuls
pop
ds
jae
pop
dec
pushf
mov
xor
xchg
js
inc
loopne
in
push
xchg
inc
sub
dec
jl
mov
sti
loop
int3
aaa
push
movsb
mov
sbb
pusha
outsl
lret
push
mov
scas
sub
lea
stos
jnp
in
aad
xchg
loopne
subl
pop
test
in
bound
mov
jbe
pop
int
add
scas
addr16
repnz
sbb
daa
enter
sbb
leave
sub
jns
and
pop
repz
loop
xchg
sbb
sub
push
rolb
test
fwait
push
scas
incl
adc
jl
mov
xlat
dec
add
stc
and
clc
ss
aas
pop
std
mov
dec
add
shrl
mov
cs
jbe
jmp
repnz
or
inc
xor
pop
cmpsb
xchg
repz
push
dec
sarb
pop
leave
insb
mov
xor
ljmp
xchg
aad
into
ja
mov
dec
addr16
aad
mov
shl
shll
cmc
lods
outsb
cmpb
jo
dec
shlb
dec
ja
imul
rcll
mov
pushl
jl
scas
or
sbb
adc
daa
loop
sbb
and
data16
push
or
add
test
daa
xor
push
xor
cmp
mov
inc
sbb
cmpsb
push
sub
stc
xchg
and
sbb
int3
dec
ja
arpl
jne
push
int3
dec
sarl
add
pop
sbb
and
inc
pmaddwd
lahf
aas
mov
mov
xor
movsl
popf
jne
scas
dec
adc
inc
loop
fadds
lahf
fbld
dec
test
cld
pop
mov
jge
jle
or
repnz
lahf
enter
adc
mov
sub
push
pop
cmp
fistpl
scas
rorb
repz
mov
mov
jne
xor
ds
push
rcrb
jp
push
loope
ficoms
mov
mov
mov
lds
jecxz
sbb
test
mov
std
ret
and
fsub
sbb
push
subl
repnz
sub
pop
mov
dec
in
add
pop
or
stos
cld
inc
push
push
sahf
mov
mov
stc
es
fs
lea
xor
out
ret
dec
out
adc
sbb
cmpsb
mov
adc
pop
xlat
sbb
xor
stos
push
xchg
mov
or
xchg
leave
int
lock
pop
or
addr16
andb
gs
lcall
mov
xor
dec
or
daa
lahf
loope
mov
adc
es
scas
dec
ret
pop
cmp
jne
inc
jecxz
insb
xchg
cltd
sti
fs
xor
frstor
xor
inc
or
popf
movsl
cmp
dec
dec
sub
js
jb
jns
cmpl
bound
sbb
push
jno
sti
out
int3
popa
arpl
mov
cmp
mov
mov
int3
inc
jno
push
mov
mov
sahf
test
imul
test
pop
add
or
leave
int3
xor
dec
clc
xchg
loopne
fisubrs
mov
popf
pop
ja
sahf
xacquire
sbb
ljmp
dec
sub
dec
test
cltd
pop
mov
rcl
int3
xchg
cltd
sbb
ja
xor
movsl
mov
in
imul
sub
mov
mov
cmpsl
lret
mov
stos
inc
mov
es
cmp
imul
mov
popf
call
xchg
arpl
mov
repnz
lcall
ror
dec
subb
dec
das
fcomps
fnstenv
adc
div
pusha
pusha
shll
bnd
pop
pop
xchg
add
std
dec
in
popf
stos
stos
imul
sub
in
xchg
call
movsl
cwtl
and
outsl
mov
adcl
adc
shrw
mov
inc
push
in
stos
shrb
push
fucom
insb
xlat
lret
ret
jecxz
pop
jle
enter
frstor
or
repz
ds
jno
push
sbb
and
inc
push
mov
jns
cwtl
xchg
nop
adc
imul
test
das
aas
jb
les
dec
addr16
stos
shl
xor
fistl
sub
pushf
cmpsl
leave
fmuls
inc
ret
out
stos
inc
int3
mov
int3
in
jmp
or
loope
mov
stos
aaa
les
mov
mov
jb
or
cwtl
or
fs
add
movsl
loopne
dec
pop
push
ficompl
cmp
addr16
add
sub
adc
shrb
mov
sahf
fchs
mov
jl
imul
jbe
dec
and
dec
push
mov
movsl
fistpll
push
xchg
and
outsb
adc
leave
push
pop
call
and
bound
insl
mov
pusha
xor
lret
or
push
cld
cmp
sub
loope
dec
js
aaa
leave
lret
push
clc
addr16
mov
pop
sarl
dec
fists
add
push
rcl
xlat
sahf
push
imul
xor
rcll
jecxz
dec
imull
or
pop
int3
xchg
push
adc
adc
movsb
shll
negb
icebp
jle
mov
cmpsl
out
pushf
sub
jne
out
shr
sub
clc
sbb
pushf
jp
int
ja
fdivl
mov
mov
in
iret
xlat
aad
or
mov
or
icebp
xor
and
mov
inc
cmc
lret
int3
and
insl
push
or
lret
xchg
dec
push
sub
lock
lcall
lds
push
cmpsl
popa
pop
adc
aaa
mov
sbb
pushf
push
sbb
inc
sub
jno
fdivs
sub
insb
inc
js
cmp
push
sbb
and
sahf
sbb
out
mov
mov
jp
mov
test
enter
insb
and
fstl
rorl
mov
mov
mov
insl
addl
outsb
sbb
mov
insl
fcoms
call
xorb
in
and
dec
scas
out
jnp
and
sbb
in
pop
mov
cvtps2pi
inc
incb
cmp
test
mov
and
rclb
add
mov
lds
nop
adc
mov
mov
mov
cmpsl
loop
push
js
push
xchg
mov
sti
popf
data16
movsb
and
ficoml
sbb
popf
cs
arpl
orb
and
fwait
or
jmp
int
insb
xchg
inc
fadds
and
sti
out
clc
jae
imul
push
roll
es
rorb
cmp
xor
inc
mov
cmp
adc
shll
jp
nop
xchg
jl
cmp
pop
jecxz
stos
xor
pop
or
loopne
adc
loop
and
test
bound
add
add
mov
fldl
sbb
sub
arpl
sbb
loopne
fs
jno
pop
jg,pn
popf
mov
add
nop
jmp
test
scas
adc
scas
xlat
outsb
outsl
cli
add
pop
dec
push
mov
in
push
mov
jge
pop
push
rorb
jnp
mov
je
push
xchg
ret
ficomps
jnp
mov
xlat
pop
push
push
lahf
mov
pop
and
std
lahf
pop
mov
mov
pop
fs
lahf
or
push
cmc
xchg
and
test
out
in
loope
daa
fildll
and
dec
inc
int3
xlat
fwait
and
xchg
mov
lea
mov
jp
or
xchg
mov
loop
and
flds
xchg
sub
js
pop
mov
stos
aaa
lea
and
jo
and
mov
fadds
sbb
repnz
repz
mov
pop
cmp
xor
lcall
cmp
cmpsl
fcmovbe
jmp
imul
inc
mov
pop
add
xchg
stos
in
mov
inc
scas
loope
movl
mov
adc
mov
lahf
rcrb
fcmovb
rclb
dec
mov
mov
out
dec
dec
cmpsb
mov
andl
pop
jo
xorl
aad
out
shrl
mov
dec
sub
push
lock
dec
push
jbe
xchg
fnsave
lock
lahf
inc
dec
ja
dec
mov
icebp
add
cs
arpl
mov
jge
pop
sahf
add
mov
mov
adc
daa
lret
arpl
inc
aas
xchg
aaa
mov
out
fldcw
sbb
ja
lods
shl
add
test
dec
mov
pop
sbb
push
aaa
pushf
int
xchg
pop
inc
xor
adc
ffree
push
clc
adc
sub
push
hlt
std
in
pushf
xchg
rorb
iret
jno
push
popf
popa
push
leave
rorb
ficompl
inc
aaa
xchg
and
dec
gs
xchg
test
add
sbb
pop
add
call
in
fbstp
test
loope
sub
pop
sbb
nop
and
or
xor
ja
cmpsb
xchg
sahf
sbb
mov
or
rorl
arpl
stos
repnz
out
mov
lcall
dec
insl
xor
test
mov
jo
add
jne
fdiv
out
push
rcrl
lahf
and
jg
fs
dec
and
or
dec
mov
fcoms
cld
negl
pop
shlb
out
adc
sub
fwait
pushf
out
and
imul
shrl
in
cmpsb
push
cld
jne
jg
push
jmp
stos
cmpl
data16
data16
xor
je
sti
and
imul
push
cmpb
out
and
and
mov
push
mov
xchg
popf
xor
xchg
lds
aam
js
cmp
push
xchg
sub
mov
dec
mov
dec
fistpl
mov
pusha
xlat
push
pop
andb
jmp
lea
adc
inc
adc
sub
adc
sbb
push
mov
sub
ret
jns
loopne
fdivs
mov
inc
inc
je
mov
cmp
add
push
and
adc
std
cld
addb
sbb
fsubrs
rcrb
hlt
and
out
push
sti
and
das
ljmp
jb
lods
sbb
mov
jno
jmp
andb
push
adc
repz
js
or
mov
iret
scas
ss
pop
mov
adc
xchg
xor
cltd
scas
fidivs
pop
cmc
sbb
dec
es
imul
cmp
push
mov
adc
adc
cmp
out
cwtl
nop
mov
jg
shll
repnz
mov
clc
sub
outsl
mov
shlb
xchg
jl
test
xor
clc
mov
aas
test
scas
cmp
and
push
and
je
out
add
or
add
es
mov
pop
negl
ficoml
rorl
out
xor
mov
clc
icebp
gs
int
rclb
icebp
and
xchg
scas
test
ja
and
sti
aaa
mov
pushf
sti
xchg
ja
nop
cwtl
add
xchg
xchg
adc
sub
movsl
shrl
mov
rcrb
or
in
sbb
mov
sbb
stc
in
scas
push
pushf
xor
jp
rcl
and
test
add
mov
int3
aam
shll
stos
xchg
stc
fst
icebp
mov
pop
cmpsl
xchg
stos
pop
dec
cmc
pop
cs
pop
out
imulb
fwait
stos
inc
mov
fstps
imul
popa
pop
lds
out
and
mov
pusha
sbb
or
mov
bound
aam
mov
mov
add
sub
push
and
js
cld
fnstcw
rolb
cwtl
xor
push
test
ljmp
mov
lock
pop
data16
adc
lea
rcrb
insb
sbb
lock
cmpsb
inc
cmc
ja
push
rcrb
cmpsl
pop
jge
cs
mov
jb
pop
clc
jnp
or
sub
aas
mov
iret
mov
nop
lret
sti
pushf
inc
arpl
adc
shl
push
jge
mov
sub
sbb
out
out
pushf
and
jecxz
in
mov
mov
add
inc
cld
dec
data16
jp
push
mov
movsb
or
and
sub
mov
and
add
sub
fdivrs
lret
stc
insl
jno
mov
sub
and
loope
xchg
jne
xor
jmp
sahf
xchg
sub
loop
into
pcmpeqw
ror
sbb
cmc
xchg
nop
in
mov
add
cmc
fcoms
inc
fdivrl
mov
in
ret
mov
jae
shlb
enter
jne
test
aaa
xor
jnp
div
jl
ret
adc
adc
subl
pushf
out
sbb
stos
shrl
fs
push
cmpsb
push
cmp
lds
mov
cmp
add
inc
push
add
xor
sbbb
repz
sub
jle
mov
aam
xor
aaa
test
sub
sahf
out
cmpsb
xchg
cli
dec
xor
out
sub
out
imul
pop
insb
adc
dec
pop
xchg
sbb
push
mov
xchg
rclb
pop
loopne
fmulp
jl
add
out
int3
das
xor
int3
sbb
lahf
sub
lret
pop
cmp
and
mov
sbb
add
mov
jbe
mull
jns
scas
cli
xchg
pop
je
dec
and
mov
push
mov
add
in
dec
repnz
in
xchg
lahf
mov
mov
mov
and
pop
or
ljmp
sub
and
cld
lds
ds
jo
hlt
push
sub
inc
sub
jmp
fidivrl
adc
jecxz
mov
mov
fcomip
add
fstpl
pop
mov
cmp
jnp
and
add
xchg
or
sti
and
lahf
aas
frstor
icebp
or
popa
push
dec
mov
sbbl
out
enter
inc
mov
out
jl
xor
push
fbstp
sarl
sahf
mov
jg
adc
test
es
pop
mov
mov
mov
push
mov
movsl
add
daa
lcall
mov
pusha
jp
xchg
je
out
jne
fs
loopne
push
loopne
scas
mov
jecxz
or
ljmp
mov
mov
sub
xor
out
lea
pop
andb
jne
out
dec
shll
sarb
or
sti
cmp
inc
sbb
cmp
test
test
into
push
cli
xchg
push
xchg
push
push
mov
int
fisubrs
mov
push
or
shll
cmpsl
sub
push
mov
arpl
stos
dec
xchg
std
adc
cmc
xchg
xor
mov
cmc
or
outsb
pop
xchg
loope
or
and
rcl
mov
bound
add
iret
xchg
inc
mov
ror
xor
inc
out
xor
mov
cmc
out
test
xchg
cmpsb
push
push
sarb
lret
mov
xchg
mov
lds
xor
sar
xchg
pop
push
push
inc
adc
cmpsb
cmp
inc
jle
push
je
shlb
dec
inc
xchg
mov
lcall
jne
out
cli
cmpsl
pop
mov
divb
and
stc
nop
add
add
je
sub
lds
rcrb
push
lret
adc
clc
inc
call
rolb
mov
movsl
mov
adc
jbe
adc
inc
xor
divl
xchg
add
sub
sbb
push
pop
out
es
lar
mov
pop
cmc
sahf
fxch
add
stc
rcl
popa
mov
push
iret
inc
cmp
sbbb
push
dec
popa
pop
outsb
pop
shlb
and
xchg
pop
jecxz
clc
jp
push
add
ret
push
inc
pop
das
pop
mov
jno
jle
aaa
leave
add
out
hlt
ss
mov
test
call
jl
jmp
jnp
sbb
xchg
and
dec
mov
mov
cli
in
out
pop
movsl
xor
out
jnp
xlat
imul
loope
jl
cli
cld
sar
sub
daa
out
in
push
pop
sbb
fistpl
jns
lods
shl
inc
out
jae
aad
cwtl
shr
and
decb
push
pop
sarb
jno
imul
jb
cwtl
mov
jmp
sarl
aam
lret
lahf
lods
adc
lsl
mov
or
cmp
das
dec
mov
insb
daa
les
dec
xlat
ss
ja
lret
pusha
aam
mov
dec
pop
push
call
lock
mov
xor
cmp
adc
add
in
cld
repnz
inc
lock
icebp
aaa
leave
stos
lods
push
jmp
cltd
int3
pop
jl
xor
adc
xchg
xor
jg
loopne
outsb
jb
jmp
pusha
adc
fs
lea
pop
jg
sarb
imulb
and
adc
adc
adc
push
adc
cmp
cmpsl
inc
and
out
mov
jno
push
or
clc
shlb
jl
sub
xchg
js
lods
shl
arpl
add
hlt
fdivl
das
movsb
xchg
test
jae
imull
add
dec
cmpsb
out
in
and
daa
xchg
icebp
jecxz
shl
pop
stos
test
add
das
lock
pop
sarb
mov
iret
clc
cs
mov
scas
insl
into
repnz
sahf
ss
jae
mov
pop
pop
xchg
test
pusha
pop
mov
das
and
pushf
sub
arpl
push
pop
add
stos
ret
mov
lahf
mov
mov
int3
dec
testb
movsb
add
out
les
repnz
les
outsb
stos
lahf
gs
leave
cld
fwait
pop
ds
imulb
inc
dec
loop
mov
sbb
ljmp
xchg
insb
mov
xlat
lods
jp
fdivrp
dec
mov
repz
into
pop
mov
loop
add
scas
cmp
adc
jnp
inc
xchg
xor
sbb
inc
test
mov
adc
dec
mov
push
add
in
mov
jbe
cmp
jmp
dec
jecxz
mov
out
mov
rolb
mov
popf
mov
inc
adc
mov
lds
add
xor
push
fstl
mov
add
inc
fbstp
hlt
sarb
ds
pop
mov
stos
jg
imul
addb
jmp
jb
push
inc
cli
mov
mov
xchg
outsl
xor
loope
and
scas
movl
dec
adc
clc
outsb
nop
mov
subl
cmpsl
dec
sub
div
and
decl
arpl
sti
insl
in
add
or
pop
cmp
xlat
cmp
loop
ja
inc
out
bound
fnsave
jmp
hlt
iret
cmpsb
inc
call
cmp
pop
lods
and
inc
adc
in
mov
add
int
fiaddl
les
jge
dec
imul
sbb
dec
rcr
aas
adc
jne
inc
shlb
inc
popa
mov
jb
or
jg
rcll
stc
mov
mov
lea
mov
mov
dec
pusha
inc
push
clc
push
lahf
jno
push
jle
cltd
movsl
sub
mov
int
fistl
test
and
shll
mov
jle
scas
into
rorl
ljmp
xchg
sbb
dec
or
je
and
hlt
das
popf
out
cmpl
inc
mov
inc
clc
xor
cmp
mov
adc
nop
int
pushf
sbbb
or
push
adc
cmp
andb
in
sbb
into
lret
cmp
les
out
into
add
mov
and
js
dec
sbb
mov
adc
cmp
jp
mov
mov
xchg
les
lods
hlt
pop
pushf
pop
and
repnz
pop
inc
dec
pop
clc
addb
mov
repz
dec
fimull
cli
push
lret
aad
in
or
into
test
js
fidivs
or
mov
subb
mov
ds
mov
adcb
dec
mov
movsl
mov
mov
gs
xor
js
test
popfw
cltd
mov
iret
in
mov
inc
insb
fcompl
pop
lea
mov
jle
iret
cmpxchg
clc
in
pop
mov
loope
add
nop
xchg
push
jo
xor
cmpsb
test
stc
stos
or
shr
out
insb
xor
lret
sub
filds
sbb
push
adc
jmp
cmp
adc
dec
ss
adc
mov
loope
adc
iret
cli
out
and
insb
sbb
ja
faddp
inc
xorb
push
push
mov
sub
jecxz
fldt
je
enter
out
pop
sub
jno
inc
push
imul
xchg
push
and
pusha
jb
fildl
gs
inc
xchg
inc
mov
lock
outsl
push
shl
add
les
ja
cld
sub
jns
dec
inc
cmpsl
out
sarb
lds
and
mov
mov
cwtl
push
add
gs
fstpl
call
jecxz
test
sbb
or
jo
add
mov
js
aaa
out
cs
mul
test
ret
pop
fistpl
loopne
fidivl
stos
enter
or
add
test
xchg
jne
leave
and
andl
lods
into
mov
inc
cli
cmp
fwait
add
push
and
icebp
push
mov
mov
sbb
or
or
xchg
push
mov
adc
and
addl
clc
mov
adc
jbe
test
inc
aam
cmp
test
adc
lret
add
adc
dec
mov
fisttps
mov
inc
jnp
mov
je
xchg
repnz
pop
or
cmpsb
and
jno
xchg
rorl
sar
dec
in
in
lahf
add
shll
call
dec
repz
push
iret
push
mov
add
in
ljmp
push
insl
adc
push
pushf
jmp
push
fstp
push
push
pop
mov
cltd
xchg
hlt
jns
out
lret
imul
inc
sbb
adc
dec
enter
fildl
and
test
lret
je
rolb
test
out
sbb
out
mov
xor
call
mov
dec
cmp
dec
adc
cmpb
sub
inc
xorps
mov
cld
mov
popf
mov
imull
enter
hlt
push
lret
stc
inc
push
loope
fiadds
iret
in
clc
xor
jb
and
fs
iret
jnp
daa
call
enter
lret
mov
or
out
jbe
pop
lock
mov
lahf
mov
xchg
out
mov
add
or
out
fwait
pop
or
pop
pop
mov
mov
xchg
arpl
mov
scas
lret
fisttpll
iret
fidivs
orl
out
dec
inc
aas
out
sbb
jmp
xchg
insb
dec
ret
cmovl
mov
jg
mov
dec
out
pop
jno
dec
push
sbb
sub
std
sahf
sub
out
push
std
std
dec
push
mov
or
cld
jb
xchg
cmc
mov
jb
mov
jo
mov
adc
sahf
and
mov
sub
mov
push
push
inc
sbb
xor
mov
fbstp
xchg
decb
lret
jle
repz
jp
mov
cld
mov
sbb
arpl
and
dec
fstps
pop
sub
sub
xchg
jg
call
sti
xor
nop
imul
jecxz
mov
vpmaxsw
pop
dec
test
xchg
mov
sub
inc
out
fimull
xorl
std
cli
popl
js
inc
xchg
mov
sbb
lahf
mov
movsb
sbb
pop
pop
mov
push
data16
out
mov
xchg
call
push
add
pushw
shr
movsl
jns
cmpsb
lds
push
xorl
std
aad
dec
push
nop
or
adc
push
pop
inc
pop
int
testl
pop
iret
test
and
shll
push
inc
neg
repz
dec
adc
in
jbe
jl
scas
add
cmc
xor
lods
push
inc
icebp
addps
jg
mov
pop
aad
ret
fwait
mov
sahf
test
mov
cmpl
mov
lock
push
mov
dec
insb
jae
getsec
jo
stos
inc
mov
push
sarb
mov
mov
mov
stos
xchg
aaa
fsubr
dec
mov
ret
lock
mov
mov
in
icebp
mov
ret
push
xchg
push
nop
out
cmpsl
lcall
xchg
xor
sbb
jmp
jl
dec
jae
mov
inc
loope
mov
stos
fcoms
pusha
inc
pop
aad
or
movsl
dec
inc
std
sbb
push
movsl
clc
mov
dec
fsubrl
xchg
es
cwtl
movsb
jle
xlat
flds
outsb
loop
xchg
lahf
int3
icebp
cltd
orl
adc
jns
std
mov
cmc
inc
call
pop
scas
in
pop
add
mov
or
inc
test
jmp
hlt
test
mov
and
cmp
add
in
jae
cs
push
in
sub
popf
adc
sti
add
dec
pop
push
cmpsb
mov
sbbl
inc
jne
jne
xor
sub
testb
dec
mov
mov
loop
icebp
xor
nop
add
push
mov
idivb
dec
ret
out
jbe
lods
in
push
sub
cltd
lret
ret
in
jge
dec
pop
ror
xlat
xor
mov
pushf
sar
mov
mov
inc
rorl
into
fsubrl
and
sub
push
loopne
mov
in
das
dec
imul
aad
pop
inc
insb
mov
out
in
fs
cmc
fldl
cmp
cmovg
clc
daa
roll
push
aam
in
mov
into
sub
lods
add
mov
paddw
mov
idivl
mov
outsb
mov
pop
jae
ja
jae
pop
je
fdivr
jecxz
jl
lahf
sbb
sub
insl
pop
mov
jle
popf
in
xlat
jb
inc
pop
adc
push
icebp
dec
jo
idivb
testl
aaa
mov
stos
push
hlt
in
push
xchg
pushf
push
add
xchg
and
dec
hlt
or
lods
jle
or
xor
or
rcr
mov
mov
imulb
jb
sti
jmp
mov
push
and
shlb
enter
je
testl
stos
add
jmp
cld
test
xchg
adc
iret
add
in
add
aam
push
pop
jp
insl
jne
out
icebp
fbstp
js
or
mov
add
xchg
sbb
inc
xchg
leave
xchg
add
jnp
lods
mov
mov
scas
cld
test
adc
or
int
inc
shll
outsb
shll
shr
jmp
mov
loop
sbb
cmp
pop
push
and
not
jno
ret
sub
or
xor
lcall
jo
cmc
cmp
mov
int3
test
jb
insl
xchg
cmpl
negb
repnz
push
mov
loopne
xchg
in
clc
addr16
mov
fldl
cmp
sbb
out
jno
neg
mov
scas
mov
loope
negb
lahf
ret
xor
mov
test
pop
add
lcall
jecxz
add
out
mov
pop
or
or
add
imul
jnp
pushf
cmp
xchg
add
jp
mov
lcall
enter
out
adc
rcl
test
in
stos
mov
cmp
stc
fisubl
mov
imul
adc
jmp
loopne
mov
ja
xchg
xchg
sbb
fsts
bound
repnz
imul
loope
jge
test
ja
mov
repnz
sbb
sub
jb
dec
mov
push
fstps
push
mov
in
fnsave
adc
loope
ljmp
push
rclb
pop
mov
xchg
push
rcr
jo
jo
mov
out
js
add
insb
shlb
xchg
pop
insb
imul
fcompl
mov
aam
add
in
es
sbb
pop
pop
stos
push
mov
add
fstpl
xlat
ret
mov
jo
dec
inc
out
jb
jp
dec
ds
movsb
pushf
nop
inc
adc
mov
enter
pop
bound
adc
pop
js
inc
inc
and
jno
xor
shll
lods
mov
sahf
stc
jae
mov
jae
ja
jo
lods
cmpsb
fdivr
xor
out
mov
outsl
ret
sub
imul
pop
incb
pop
cld
pop
lock
xchg
xlat
repz
popf
fs
dec
xor
and
sbb
inc
push
in
sbb
mov
jnp
lcall
imul
mov
push
icebp
xchg
cmpsb
adc
cmpsl
int3
xorl
pop
pop
or
rol
lock
lods
mov
mov
mov
mov
leave
repnz
pop
sub
subl
cli
push
jne
inc
aad
insl
lahf
sub
ret
fimuls
pop
mov
push
into
mov
hlt
dec
push
mov
into
xchg
arpl
inc
lds
imul
add
pop
ljmp
mov
mov
mov
movsb
inc
fcomi
lea
in
lahf
in
mov
jg
fsubrl
xchg
jno
mov
mov
daa
fdivrs
inc
jg
cmpsl
call
push
push
lds
mov
pop
lock
subl
fisubrl
lds
je
jbe
push
jns
stos
cld
ret
shl
and
and
sub
jle
sbb
pop
inc
lcall
xor
es
roll
mull
fwait
out
roll
ror
loop
sub
aaa
push
adc
add
cmpl
add
and
insb
scas
jl
adc
addl
aam
push
fistps
in
dec
in
jl
xchg
and
arpl
fcoms
imul
stos
push
aam
pop
cs
xchg
cld
inc
pop
in
shlb
stos
xor
lcall
mov
daa
lcall
xor
ret
mov
fsubrl
clc
inc
test
outsl
cmc
fnstcw
stos
mov
bound
adc
sub
jae
or
js
jge
add
cmp
dec
out
xor
insl
fnsave
loope
shll
call
push
addb
pop
jmp
inc
divl
push
cltd
cltd
jb
sub
pusha
pop
repnz
xor
or
fdivrl
cli
test
in
das
mov
int
mov
jle
add
jne
ds
adcb
push
ds
pop
mov
mov
loop
sub
sbb
cmc
in
aas
mov
rclb
mov
push
pushl
in
sub
movsb
inc
cmc
adcb
or
popa
dec
cmp
mov
adc
fs
enter
cmc
testl
movsb
jbe
pop
jns
mov
leave
mov
mov
pop
call
xchg
fstp
cmpsb
out
push
icebp
mov
dec
pop
sbb
clc
repnz
mov
stc
arpl
lret
sahf
cmc
adc
data16
sub
push
sub
mov
ds
lret
xor
push
inc
fldpi
lods
je
subl
int
or
mov
xchg
mov
jnp
mov
mov
mov
fidivs
repnz
xor
shll
mov
mov
xchg
inc
cld
cli
pop
pop
pop
lret
sbb
lret
int
hlt
rcr
sub
std
iret
mov
mov
mov
in
or
xchg
cmp
adc
jne
and
sbb
jb
xchg
push
xor
mov
imul
pusha
cmpb
ljmp
je
pop
lds
push
add
push
sbb
outsb
or
and
int3
outsb
mov
cmp
movsb
xchg
fwait
cmp
ja
test
rcr
xchg
es
cmp
jb
mov
mov
lods
or
pop
adc
mov
sub
notb
mov
adc
push
push
je
mov
jb
and
pop
stos
pushf
inc
enter
ss
mov
add
test
inc
push
mov
xor
test
lret
inc
pop
imul
aad
ret
xor
mov
lret
cld
jbe
adc
add
adc
mov
fsubrl
fsubrp
inc
xor
jp
rorl
aad
sub
push
dec
xchg
pop
xchg
inc
jbe
add
xchg
fisttpll
cmp
push
sbb
fdiv
xor
jmp
cmc
inc
add
or
leave
push
cwtl
xchg
sbb
jns
cmc
out
andb
sahf
shll
mov
xchg
test
lods
pop
push
test
xor
push
sub
test
sub
mov
insl
xchg
cmpsb
shrb
ficompl
push
jns
addr16
or
cmc
fsubrl
sbb
gs
pop
mov
mov
push
xchg
cmc
setae
popf
stc
aas
cs
xchg
sbb
in
sbb
popa
in
cmc
jno
je
imul
cwtl
cmpb
and
sbb
adc
test
add
movsl
jno
xchg
sbb
dec
jbe
sub
jp
inc
shl
test
sbb
mov
fadds
jns
rcl
lock
stos
jns
push
rcrl
jl
loopne
or
pop
sbb
dec
lods
cmp
jb
mov
sub
inc
add
adc
repz
aad
mov
sub
jmp
jnp
outsb
or
mov
push
pop
mov
lcall
cmp
mov
test
mov
or
aas
add
jp
pop
mov
inc
cltd
test
adc
clc
mov
cld
add
push
sbb
pop
ds
fwait
xchg
fcoms
mov
xor
mov
xchg
jl
out
enter
out
in
aad
pop
dec
cmp
sbb
pop
sbbb
lea
mov
mov
test
pop
aam
ret
push
imul
cmc
push
mov
test
push
mov
push
pop
xor
decl
sub
mov
fdivrl
cli
inc
fnstcw
mov
es
inc
xlat
push
in
fiadds
cld
inc
test
in
pushf
test
sbb
into
mov
pop
sbb
loope
dec
jp
loope
aad
repnz
lret
ds
inc
sahf
std
adc
out
in
insl
popa
push
xor
test
mov
and
test
in
icebp
pop
jne
inc
insl
and
rclb
imul
jle
fnstenv
arpl
cli
mov
js
mov
fisubrs
cwtl
or
sbb
mov
jl
jl
pop
jo
out
je
or
in
sbb
and
pop
push
test
pop
xchg
lahf
mov
leave
in
and
cmc
jge
mov
scas
push
stos
or
imul
dec
es
xchg
and
add
inc
pop
jbe
lock
rcr
add
mov
rcl
sbbl
lcall
push
xor
mov
sbb
and
pop
push
dec
scas
cmp
sti
sub
test
xor
mov
imul
push
repz
je
sbb
inc
or
cmc
out
add
enter
sahf
outsl
stos
jp
andl
and
jo
mov
lods
std
mov
jae
adc
movsl
jno
push
pushf
fs
mov
pop
ljmp
pusha
mov
int3
xor
insl
sub
push
in
adc
and
push
imul
inc
dec
out
fwait
mov
inc
ret
mov
push
mov
lcall
mov
insl
hlt
sbb
call
out
fstpt
loopne
repnz
popl
js
out
clc
pushf
jae
es
std
jp
das
mov
pop
lcall
enter
fwait
popa
adc
add
sbb
jle
jb
mov
andl
data16
sbb
push
inc
ljmp
xor
sub
ret
mov
ds
out
mov
fldcw
aaa
lock
and
icebp
lahf
xor
pop
jl
rolb
insl
inc
add
das
sahf
lret
loop
popa
insl
mov
ss
push
cmp
iret
and
sbbb
jb
or
xchg
sarl
xchg
mov
pop
fwait
jnp,pt
daa
mov
mov
out
inc
pop
cli
xlat
std
pop
dec
jbe
cmpb
mov
insl
daa
jg
clc
sbb
rorb
push
mov
loopne
jno
lods
jne
aaa
je
pop
lods
xor
imul
xchg
fbld
mov
dec
jae
push
xchg
xchg
test
and
xorl
mov
lcall
push
sbb
test
xor
jnp
cmp
fsubrs
jbe
adc
pop
xchg
push
imul
dec
sbbb
mov
bound
mov
and
neg
adc
dec
movsb
sbb
mov
cmp
and
push
mov
and
add
dec
insl
xchg
cld
in
mov
test
sbb
cmpsb
mov
adc
adc
mov
fdivr
mov
in
mov
call
sbb
xchg
adc
js
mov
mulb
mov
pop
mov
enter
mov
cld
sti
mov
fistpll
popa
test
sbbb
out
shr
adc
das
push
dec
iret
inc
scas
fisubs
xchg
inc
dec
jb
movups
in
and
std
aaa
test
xchg
insb
or
and
lret
pop
mov
fiaddl
cli
lahf
jbe
cmp
push
pop
push
repz
adc
ds
rcrb
mov
sete
ret
add
pop
lds
inc
jns
mov
arpl
adc
xor
jge
jmp
cmpsb
mov
cmp
push
mov
cmp
mov
xchg
jno
fisubs
nop
mov
js
jecxz
arpl
cmp
add
xorl
aaa
and
cmp
clc
jmp
add
xchg
adc
pop
xchg
int3
jp
and
repz
fdivrs
jno
pop
outsl
aam
imul
in
dec
clc
repnz
jle
mov
stos
push
enter
rcrb
psadbw
push
loope
cmp
std
inc
scas
sbb
mov
dec
jno
dec
shlb
and
push
sti
push
mov
shlb
pop
and
test
pop
addb
jbe
jg
xchg
movsl
fs
push
or
inc
repnz
pop
inc
push
xchg
adc
pop
mov
xor
mov
push
loop
fcoms
pop
std
repz
mov
xor
pop
fdivl
cmp
push
add
shrb
cmp
sbb
xchg
clc
jecxz
mov
aad
decb
lcall
in
mov
cmp
sbb
mov
push
mov
in
xchg
incb
jl
xchg
or
mov
mov
xchg
inc
push
push
or
scas
sub
pop
push
jge
sbb
or
cs
lcall
aas
pop
fs
mov
loopne
pop
jl
mov
mov
inc
xlat
repz
sbb
and
push
in
mov
in
pop
mov
xlat
adc
addb
dec
sti
pop
out
les
icebp
or
daa
cmp
lds
pushf
stc
jmp
sarl
dec
cmp
nop
fisubrs
dec
pop
xchg
les
xor
das
sub
stos
sub
aam
jbe
sbb
mov
lock
or
ss
shll
or
pop
insb
scas
push
clc
cmp
out
and
imul
inc
mov
fwait
sbb
js
jle
adc
cmp
cwtl
xchg
std
mov
cmp
int3
adcw
jp
pushf
cmpsl
aam
xchg
test
push
xchg
push
push
xchg
fisttpl
fxch
cmp
lods
fcomip
sub
cli
push
xchg
mov
fiaddl
push
jb
in
daa
adc
dec
lea
mov
sub
sahf
scas
push
adc
pop
mov
sub
vmovhps
popa
imul
lahf
inc
outsl
add
pop
rcll
std
dec
push
pop
scas
add
arpl
mov
imul
fbld
xlat
dec
dec
jne,pt
insl
mov
fdivrs
lret
out
lds
rorb
movsb
cld
add
mov
or
jl
or
inc
mov
adc
dec
jno
dec
sbb
cmpsb
sarl
divl
sub
jg
lahf
add
fstps
and
sti
mov
test
popa
fstpt
xlat
fisubs
int
cmp
sarl
js
sbb
sbb
fcompl
lods
jmp
inc
nopl
push
scas
mov
and
and
xchg
iret
andb
cmc
xor
daa
jb
cmpsl
inc
out
sarb
clc
cmp
push
dec
sbb
pop
inc
jns
sub
adc
sub
mov
leave
in
adc
mov
mov
xchg
xor
cld
js
sub
push
mov
icebp
subl
testb
push
cmp
icebp
std
stos
cmp
cmpsb
mov
int
push
xlat
sbb
int
orl
iret
mov
mov
scas
pop
inc
mov
jg
or
es
cmpl
test
jnp
aam
loope
adc
cmpsl
dec
scas
jmp
adc
and
adc
stos
jle
cmp
mov
dec
pop
and
mov
cltd
fdiv
lret
enter
push
enter
cmp
test
repz
and
sti
pop
stc
cmp
xchg
xor
xorb
cmpb
sub
jge
mov
testl
movsl
mov
mov
std
ret
sbb
xchg
cmp
pop
ret
mov
out
lret
lea
mov
lods
pop
std
xchg
sbb
mov
stos
xchg
dec
sub
push
mov
call
push
adc
testb
xor
int
xchg
mov
cld
jnp
enter
xchg
and
sub
out
mov
sub
ss
lret
xlat
inc
mov
jmp
fstpl
and
mov
xlat
jbe
jp
sbb
insl
cwtl
mov
scas
and
jne
stc
adc
xor
inc
mov
xor
shlb
and
cmc
cmc
add
sbb
sub
inc
or
fwait
pop
mov
lret
xchg
xor
pop
or
repz
lahf
in
in
jbe
popf
mov
lahf
hlt
dec
xor
sti
pop
xor
mov
aam
sbb
mov
xor
cmp
push
adc
sbb
sub
out
js
imul
aas
mov
adc
mov
ficoml
jno
aam
pop
and
dec
add
loopne
adc
dec
adc
cmp
std
std
fstpl
addr16
add
je
or
add
mov
xchg
fs
cmp
mov
lahf
mov
movsb
mov
mov
lds
mov
fwait
into
pop
movsl
jg
popa
push
imul
xchg
mov
push
test
movsb
je
out
pop
xor
repz
loope
sbb
addl
lea
pop
sub
rcrb
add
add
in
xchg
mov
pop
movsb
andl
stos
xor
mov
call
push
or
inc
sub
inc
mov
push
mov
cmp
sbb
push
mov
mov
mov
mov
sub
pop
xor
cmc
xchg
addr16
jmp
mov
push
xor
mov
fiadds
jge
leave
jo
add
ss
icebp
or
xor
cmc
je
cmp
mov
adc
shufps
xchg
and
pusha
ret
div
popa
or
mov
jo
iret
in
cmp
int
dec
je
xchg
es
lcall
lock
push
or
xchg
imul
fidivrs
sbb
idivb
movl
mov
xchg
xor
mov
repz
and
push
add
ljmp
cmc
lock
mov
mov
or
xchg
sbb
push
dec
jno
rorl
sub
adc
mov
and
bound
inc
mov
out
jmp
sbb
dec
icebp
mov
inc
hlt
insb
es
movd
xchg
inc
push
out
sbb
jae
sub
in
imul
gs
shl
shlb
sti
addb
bound
cmc
outsl
pop
int3
cmp
fcoms
cmp
xchg
icebp
popa
inc
xor
pop
cli
enter
xchg
pop
sub
pop
cmp
dec
mov
lods
xor
and
lock
ds
mov
mov
lret
leave
imul
or
inc
sbb
jns
movsl
jnp
or
lret
test
mov
cmp
push
dec
sub
pop
les
cmp
arpl
fistpl
mov
cmc
pop
mov
test
inc
out
push
fidivrs
pusha
mov
popl
dec
mov
daa
dec
ss
xor
lret
mov
hlt
add
fcmovu
out
dec
jmp
adc
push
mov
or
xor
or
insb
push
filds
into
push
lea
jg
fisttpl
sbb
cld
sahf
push
jle
jae
xlat
xchg
xor
add
mov
sub
test
xlat
mov
scas
push
jmp
fisubl
mov
or
mov
and
fidivrs
jno
aaa
jp
mov
bound
fisubrl
repz
adc
notb
ficoml
jle
stos
and
cmpsl
jo
repz
test
mov
and
adcb
sub
or
or
ret
fstp
push
adc
add
cmc
mov
out
add
das
imul
lea
mov
mov
testl
push
aad
xor
push
jb
mov
movsl
dec
mov
popa
and
sbb
mov
orb
jno
push
inc
xchg
insb
scas
stc
add
int3
push
sbb
xor
imul
push
mov
scas
xchg
sbb
push
sti
push
sbb
rcrl
mov
adc
loopne
ret
or
test
cli
dec
sbb
test
mov
repnz
xchg
xchg
add
dec
dec
mov
or
sub
outsl
rcrb
dec
xchg
cs
or
cmp
sub
pop
adc
je
scas
or
mov
mov
sub
or
xchg
leave
orb
insl
mov
mov
outsl
test
mov
cmc
pusha
push
push
push
mov
cwtl
or
sub
sub
mov
jno
adc
imul
jp
cmp
inc
repnz
lret
frstor
adc
out
lds
bound
inc
imul
lcall
ss
jp
jp
push
jne
add
push
cmpsb
mov
test
or
mov
sub
out
mov
mov
xchg
adc
or
mulb
and
sbb
inc
push
mov
pop
and
pop
je
xchg
das
push
iret
add
popl
pusha
or
and
push
xchg
stos
ja
aaa
nop
or
stc
jne
pushf
enter
sahf
xchg
leave
lea
jmp
dec
aad
mov
fsubrs
mov
outsl
push
lods
or
hlt
mov
push
or
push
cwtl
push
dec
xchg
mov
mov
xchg
fisttpll
rcl
cltd
lret
lock
inc
sbb
jecxz
out
es
sub
int
test
icebp
leave
in
aaa
inc
and
mov
add
sub
outsb
sar
in
jmp
or
rorl
pop
dec
xrelease
lock
out
jg
dec
data16
and
ret
sbb
pop
test
jnp
cmc
pop
push
stc
mov
aaa
aas
dec
xlat
cmp
and
notb
clc
aad
ficomps
test
nop
les
es
pushf
mov
insl
xchg
sbb
adc
cmp
add
mov
es
xor
orb
adc
mov
pop
pop
sahf
jg
cmpsl
xchg
mov
test
cmc
add
lock
fistpll
int
pop
test
mov
xchg
adc
push
adc
ja
dec
adc
mov
pop
pusha
adc
fiadds
mov
nop
jle
pop
sahf
cmp
cmp
mov
push
cltd
lcall
xchg
andb
pop
mov
lds
lea
pop
aas
pop
sub
jno
add
dec
jle,pt
jnp
repnz
shrb
inc
imul
jne
dec
lods
lock
cli
rorb
inc
scas
lret
icebp
sbb
push
popf
sbb
pop
outsl
stos
cmc
dec
dec
popf
jb
or
xchg
add
pop
jg
mov
jmp
xchg
xchg
jno
sub
lds
dec
push
nop
fstpt
sbb
xor
aaa
insl
mov
fcmovne
jecxz
mov
fstl
sub
pop
sub
xchg
fs
scas
sub
add
xchg
movsb
mov
cwtl
inc
inc
cld
and
insb
jae
add
int3
add
jmp
imul
push
fldcw
cwtl
push
repz
jp
push
enter
xchg
mov
ret
sbbl
lods
mov
sti
cmp
jl
mov
outsb
or
push
jb
sbb
and
dec
dec
mov
fdivr
mov
jp
stos
loopne
push
sahf
xchg
and
xor
sahf
sbb
sbbb
gs
mov
popf
inc
sub
dec
cmpsl
mov
outsb
les
idivb
lret
add
push
hlt
call
or
out
pop
mov
nop
inc
clc
xchg
lret
aas
xor
fmul
in
aas
or
xor
movsb
add
mov
fs
xchg
add
mov
ds
cmp
rdmsr
cltd
stc
mov
cmp
lea
adc
xchg
push
lock
pop
loopne
xorb
xor
push
punpckhwd
inc
and
insb
ja
frstor
jmp
aas
or
hlt
sahf
test
sub
pop
cmp
pushf
jo
mov
stc
movsl
imul
cmpsb
and
imul
mov
aas
push
scas
sahf
jg
inc
subb
push
in
cmpsl
cmc
enter
shll
add
pushf
xchg
mov
test
stos
push
cmp
gs
xor
push
aam
xor
jbe
xchg
cwtl
out
sbb
rcrl
mov
ret
in
mov
dec
dec
loope
fucomip
xor
cmc
into
ss
lret
sbb
jp
xchg
mov
pop
das
loopne
pop
xor
cmp
inc
mov
pop
je
rcr
push
mov
shrl
sub
aam
mov
out
cld
in
repz
inc
cmp
fwait
andb
mov
cmc
aaa
sbb
push
jg
out
fldcw
ss
sub
shll
lock
repnz
push
jle
cli
xor
xor
adc
fldenv
popa
cli
pushf
inc
out
mov
ret
daa
sub
fcoml
mov
and
cmpsl
push
xchg
sbb
jg
imul
mov
rolb
lret
push
jae
outsl
dec
add
cltd
xchg
cmpsl
push
mov
inc
mov
test
mov
mov
add
xor
cs
xchg
pop
xor
loop,pn
cltd
mov
faddl
dec
fistps
jle
cld
cmp
shll
push
in
std
or
xlat
out
clc
dec
shlb
fstl
mov
hlt
das
pop
lods
popf
inc
inc
test
pop
adc
movsb
decb
ds
adc
test
adc
mov
roll
out
movsb
movsb
jns
mov
xchg
xchg
iret
repnz
mov
jae
pop
bound
movsb
fsubs
or
aas
xor
mov
inc
or
sbb
leave
daa
pop
jge
cmpsl
mov
int3
cmc
cltd
cmp
imul
xchg
pushf
sahf
fnstsw
rcrb
dec
scas
std
push
lea
in
mov
push
cmp
xlat
sbb
mov
inc
jecxz
popa
and
lods
mov
outsb
xor
mov
outsl
push
out
aam
in
mov
sarb
incb
lds
sahf
sahf
cwtl
mov
xor
pushl
stos
movsb
jmp
push
imul
test
sub
fs
mov
push
lahf
test
and
dec
inc
roll
xchg
inc
inc
xchg
mov
and
xchg
dec
addb
inc
xlat
fwait
iret
push
mov
ficoml
sbb
dec
sbbb
xchg
int
cmp
insl
jl
rcrl
hlt
std
adc
and
inc
je
inc
adc
mov
fistpll
or
push
fcomps
jle
cmp
ja
mov
mov
inc
xchg
xchg
add
push
mov
sti
int
jl
jae
outsb
pop
add
pop
sbb
pop
mov
int
ljmp
dec
mov
rcrb
add
or
inc
jo
jmp
repz
cmpsb
mov
cmp
lods
divps
nop
sahf
adc
xor
pop
shlb
ljmp
out
jmp
popa
stc
xchg
aam
dec
rorl
jl
adc
or
dec
push
ja
jl
and
clc
or
addr16
fwait
or
mov
sbb
jmp
xchg
mov
iret
jge
insb
sub
mov
lahf
inc
pop
inc
out
push
pop
mov
cmp
push
pop
frstor
ja
loopne
leave
xchg
push
pop
push
push
lret
sbb
nop
ss
xchg
fldlg2
test
jns
dec
cmp
jns
jo
das
pop
jns
std
or
sbb
dec
adc
jb
shrb
pusha
pop
pop
add
xchg
repnz
sbb
fs
and
aam
gs
cli
mov
subb
dec
clc
das
cmp
dec
imul
shll
test
push
mov
loop
stos
fdivrl
push
xchg
push
cmpb
push
push
jl
jbe
fisttpll
xchg
adc
jmp
out
icebp
sahf
xchg
movsl
in
mov
clc
push
pop
mov
sahf
push
mov
ret
sbb
mov
fnsave
stos
sub
rol
scas
xchg
pop
adc
scas
test
inc
pop
dec
enter
lods
jge
cmp
cmp
xchg
mov
mov
dec
cmpb
cli
mov
xchg
cmp
or
pusha
inc
push
cli
xor
xchg
jg
jl
mov
adc
xor
clc
movsl
daa
js
clc
mov
pop
je
ret
aam
sub
js
cmp
das
push
push
pop
sbb
add
mov
outsl
xor
push
movsb
sbb
aaa
aas
int
pop
leave
test
ret
inc
adc
lods
popa
lods
inc
mov
pusha
or
pop
sbb
dec
and
jl
cli
rcr
or
repnz
xor
stos
lds
ljmp
xchg
xchg
sbb
cmp
push
sbb
cli
testl
js
ss
sub
rcrb
pop
lret
push
in
push
mov
ret
xlat
pop
daa
mov
mov
pop
jno
imul
loope
mov
mov
inc
lret
pop
pop
jge
hlt
mov
push
fcoms
sub
pop
mov
fstpl
popa
mov
je
dec
cmp
das
leave
cs
cmc
lods
subl
adc
fwait
mov
pop
cmpsl
jp
push
sub
cltd
test
lahf
jae
adc
push
jl
mov
xor
xchg
lret
and
repz
fists
sub
hlt
push
inc
jecxz
mov
mov
or
xchg
cmp
fnstenv
pop
xchg
xchg
ljmp
jo
mov
sub
dec
push
xchg
pushf
add
in
nop
repz
sub
or
inc
lcall
pop
popa
xchg
lock
sbb
sbb
sbb
inc
bound
movsl
sub
dec
or
xchg
and
arpl
push
sarl
sub
dec
mov
or
call
xchg
fs
mov
repz
pop
js
inc
push
iret
repnz
movsb
orb
std
mov
lahf
ljmp
pop
xor
or
lods
jmp
mov
insl
jle
cmp
push
bound
test
in
enter
cmp
in
lods
pop
nop
movsl
or
pop
mov
in
pushf
loopne
cs
sbb
cli
lret
mov
pop
cmpsl
pop
inc
and
movsb
mov
jle
int
inc
loopne
cmp
call
mov
scas
sbbl
ficompl
jb
out
mov
fldcw
scas
mov
outsl
outsb
in
xor
fists
adc
dec
and
xchg
dec
sub
mov
popf
sbb
jmp
xor
test
fisubs
push
ret
clc
stos
sbb
cld
rcll
adc
add
and
xchg
movsl
or
and
jbe
mov
int
nop
mov
cmpsb
inc
cmp
push
jle
pop
or
mov
das
mov
sahf
mov
xchg
out
lcall
shld
insl
adc
inc
adc
addr16
cmp
test
cld
cmpsl
mov
das
daa
or
cmp
outsb
fcmovnbe
cmc
cwtl
adc
mov
rcrb
out
cmp
mov
xchg
cltd
movsl
or
jle
mov
aas
cmpsl
pop
and
mov
enter
mov
jmp
hlt
xor
ficoms
mov
stc
dec
mov
and
int3
ja
sbb
repz
daa
push
iret
cltd
mov
mov
and
dec
and
jecxz
popf
popa
pop
mov
mov
movsb
shrb
movsl
jecxz
aam
mov
pop
in
ret
sbb
cld
rcll
sub
jmp
inc
aas
movsb
or
adc
mov
ds
lds
imul
nop
adc
scas
das
push
test
push
out
xchg
push
arpl
mov
out
je
fnsave
sub
movsl
add
gs
lea
pop
out
dec
xchg
ficoml
xor
test
sub
adc
adc
and
outsb
fcmovnbe
orl
mov
icebp
lcall
andl
imul
adcl
and
sbb
ljmp
fucomip
dec
clc
mov
sbb
mov
in
fnstsw
dec
push
sbb
pop
scas
sbb
cwtl
mov
and
int
adc
mov
fs
aad
bound
shlb
stc
imul
jns
aaa
and
adc
jnp
aas
rcrb
sub
dec
test
inc
repz
adc
push
xchg
push
iret
and
test
ds
pop
cmp
sbb
stos
scas
stos
push
mov
ljmp
call
pop
loope
add
inc
cmpsb
add
bound
inc
scas
test
stos
and
das
cmpl
ret
cmpsl
mov
adc
outsb
sub
into
push
test
ret
fsubrs
aas
cwtl
data16
sahf
add
pop
jne
arpl
sub
xlat
sbb
sbb
inc
inc
daa
into
das
adc
test
fistps
scas
jp
pop
jne
and
inc
mov
and
xchg
pushf
or
cmp
push
push
sahf
adc
sub
incl
iret
sbb
pop
rorl
arpl
sbb
sbb
mov
pop
dec
loope
mov
js
add
mov
loopne
and
jmp
into
into
addr16
sbb
jo
ret
xchg
push
dec
stos
xchg
xchg
test
movsl
dec
and
xchg
dec
mov
push
fadd
xor
sub
jecxz
cs
sbb
mov
andl
out
les
push
mov
xor
jno
adc
xchg
mov
popa
sbb
loope
inc
inc
xchg
jge
stos
mov
jmp
lar
gs
scas
test
dec
cwtl
nop
out
and
or
icebp
sub
mov
and
sub
test
loop
adc
push
jne
sbb
leave
rorl
in
mov
ds
push
inc
test
lahf
out
fildl
arpl
jecxz
test
dec
and
stos
sub
mov
shrl
mov
sub
lcall
shlb
push
xchg
push
dec
cmpsl
add
mov
dec
mov
or
daa
mov
lds
clc
cmp
sub
shlb
xlat
rcll
scas
loop
loop
adc
mov
fnstenv
xchg
mov
cmp
xor
popf
mov
loop
repnz
add
shrl
cs
sti
nop
mov
xor
lret
mov
sub
xor
lcall
fwait
xor
sub
ret
sbb
decb
lea
fsubr
xchg
popf
mov
inc
push
inc
xchg
mov
addr16
or
and
xchg
ds
test
jmp
fistpl
mov
lds
int3
in
movsl
mov
rcrb
imul
sbb
ds
dec
movsb
add
outsb
jne
into
ret
lock
jbe,pn
sbb
je
mov
push
add
and
insl
push
jo
roll
jae
clc
mov
insb
loope
mov
or
insl
pop
xor
mov
inc
sub
mov
das
orl
mov
dec
add
push
cli
test
xchg
loop
stos
adc
mov
lods
or
out
mov
pop
sbbl
inc
xor
sub
sub
sub
add
sub
scas
insl
xor
sub
mov
xor
loope
xchg
adc
aad
pop
sbb
mov
mov
lock
enter
adc
cmpsb
out
inc
sarb
cmpsl
push
call
pop
ljmp
stos
and
enter
xchg
xchg
mov
aad
pop
insb
idivb
cmpsl
mov
into
dec
cs
pushf
rcr
sub
cmp
mov
jo
gs
xchg
cmp
sbb
and
cld
rol
hlt
into
jecxz
fsubrl
in
jmp
sub
insl
out
pop
int3
xor
and
cltd
pop
xlat
sub
adc
pop
adcl
data16
mov
sub
jbe
jb
roll
xchg
add
fistps
or
stos
and
xor
lcall
add
fs
dec
push
push
aaa
dec
push
leave
xchg
mov
clc
icebp
mov
daa
pop
jl
mov
cs
subl
xchg
test
push
dec
pop
cld
mov
sub
mov
scas
mov
xchg
xor
jp
in
shrb
xor
jl
lret
xchg
addl
xchg
lods
add
imul
cmp
pop
or
ss
popa
or
push
iret
dec
cwtl
pop
xchg
push
lds
mov
mov
fnstsw
iret
push
pop
fwait
jno
ss
mov
dec
lret
xchg
jnp
jp
mov
or
stos
fisubrl
jl
insb
daa
cli
lods
jmp
daa
xor
mov
dec
adc
inc
cs
pop
test
js
aaa
ret
sbb
xor
shrl
mov
and
addr16
push
aaa
mov
test
frstor
sub
and
or
push
lret
in
adc
mov
push
pop
into
mov
pushf
pop
call
and
popa
lea
lods
pop
pop
xchg
push
ds
ja
das
jecxz
mov
inc
mov
movsb
fdivl
cmp
jbe
addl
cmpsl
pop
stos
fsubl
sti
mov
xchg
and
fisttps
sbb
or
insl
mov
pop
or
ja
insb
pop
push
push
and
in
mov
inc
xlat
cmc
dec
fwait
jo
xchg
ret
loopne
in
and
xchg
sub
in
cmpsl
or
divl
pop
shrb
lods
lret
aad
scas
jmp
add
inc
sti
xor
iret
pop
movsl
xlat
xchg
ss
loopne
jnp
pop
mov
js
lret
inc
or
jmp
addl
add
or
add
mov
cmp
movsb
fldpi
cmpsb
adc
inc
pmaxub
add
cwtl
push
adc
out
mov
insb
xchg
imul
roll
call
mov
xor
push
jl
dec
push
loop
dec
outsl
into
ret
dec
loope,pn
xor
mov
add
cmpsl
dec
mov
outsl
jmp
mov
sub
jmp
xchg
daa
push
pop
test
das
xchg
cmp
sub
clc
push
testl
xchg
call
inc
adc
daa
mov
mov
rolb
out
and
push
and
scas
repz
ja
into
pop
scas
orl
mull
sub
or
ja
jmp
cli
mov
ljmp
xor
and
out
pusha
fisubl
push
fstl
cmpsl
sub
sbb
add
xchg
in
inc
xor
leave
loop
insb
xor
and
add
jmp
xchg
jp
or
inc
pop
lahf
lahf
aas
fwait
inc
sbb
sbb
and
fisttpl
out
lea
push
dec
cmpsl
cmp
mov
pop
push
popa
push
adc
mov
sub
push
mov
xchg
or
xlat
pop
into
outsl
ds
push
and
and
or
test
or
xchg
ret
popf
mov
cwtl
or
pop
aam
or
imul
mov
aam
push
shrl
insl
shrl
xchg
insb
in
inc
in
cwtl
ja
xchg
cmp
mov
cmp
and
fsubl
cs
imul
in
or
cld
rcll
insl
xor
jecxz
icebp
cmp
nop
jbe
cmpb
scas
les
pop
sti
loop
shrl
dec
ret
lods
inc
das
push
rcrl
jecxz
and
cmpsl
and
fcomi
jne
push
divl
and
mov
mov
ss
pop
cmpb
adc
cltd
mov
fdivr
popa
cld
xchg
xchg
fdiv
pop
pop
push
lahf
and
imul
fidivrs
dec
icebp
cmpsl
jmp
sbb
adc
push
xor
push
mov
jb
cld
daa
fnstsw
mov
fistpll
mov
push
xchg
sub
adc
notb
add
cmp
jg
adc
jno
add
rorl
rcr
fmull
and
mov
enter
je
push
pop
xlat
testl
test
and
mov
repnz
pop
gs
jb
mov
fstpt
push
aam
lcall
aas
adc
test
jmp
xchg
fcomp
outsb
int
bound
into
add
xor
imul
ljmp
pop
cmpsl
sarl
and
lret
mov
sub
inc
sub
mov
add
pop
movsl
inc
inc
or
sbb
fisttpl
addr16
mov
out
hlt
sub
sub
and
outsl
rol
push
xchg
add
adcl
arpl
sti
push
or
dec
pop
jle
pop
sbbb
outsl
cmp
mov
inc
int3
clc
jne
stos
repz
fs
inc
jo
fcmove
jmp
adc
or
dec
lahf
stc
outsl
call
lods
cmc
fidivrs
sti
mov
dec
push
imul
xchg
fs
sub
inc
jnp
mov
mov
inc
hlt
cmp
icebp
cmp
popa
mov
push
and
js
mov
lock
ljmp
add
lods
test
hlt
adc
xor
add
jmp
adc
xchg
add
push
add
mov
push
mov
scas
push
add
cmc
adc
add
add
add
add
add
push
add
test
add
mov
add
add
test
out
lcall
add
jg
mov
popf
and
bound
aam
cmp
add
test
pop
loop
push
pop
push
push
mov
jmp
add
sbb
add
add
sub
xchg
add
xchg
aam
cltd
push
add
adc
add
mov
cmp
pop
add
inc
lcall
call
loopne
add
fcoms
inc
add
popf
cmp
xor
add
bound
fldcw
sub
add
xor
add
cltd
decl
fbstp
cs
mov
sub
popl
add
ror
push
pop
fcom
push
fsubl
inc
xor
add
stos
fidivl
ja
cmpb
cwtl
jo
mov
and
loope
add
pop
lcall
fldenvs
pop
sub
add
call
pop
fisubrs
dec
dec
lods
add
sbb
ret
arpl
sbb
sub
mov
xor
out
add
lds
fmul
insl
mov
xor
call
sub
icebp
insb
mov
cmp
icebp
adc
repnz
sahf
xchg
cmp
jmp
inc
xchg
adc
dec
cli
mov
icebp
imul
fnstcw
js
pop
push
add
mov
mov
repz
inc
add
add
mov
fwait
mov
adc
std
jecxz
or
aam
adc
add
inc
sub
in
mov
cmp
mov
insl
insb
add
inc
and
loope
cmpsb
add
icebp
sti
lea
lcall
add
jb
adc
dec
cmpsb
dec
fisttpll
stos
add
imul
xchg
out
xor
aad
xor
int3
mov
fs
aam
daa
or
aad
lea
pop
addl
cld
movlps
scas
add
loope
pop
movsl
add
push
mov
push
lahf
fldl
add
fsts
inc
mov
jno
and
xchg
aad
xor
fmul
fisttps
or
jnp
jecxz
dec
jns
dec
int3
fs
or
icebp
imul
mov
cmpsl
jb
ja
fimull
adc
lods
adc
std
xchg
add
jl
mov
es
add
outsl
add
or
stos
push
push
pusha
push
push
add
cs
jg
add
shl
xchg
ret
test
jl
scas
and
aas
add
mov
adc
xor
lret
sub
or
add
cmp
fiadds
add
cmp
into
or
add
cld
lret
cmpsl
scas
pop
fmulp
push
mov
jp
or
add
pop
adc
or
push
push
pop
outsl
imul
add
out
aad
mov
inc
imul
xor
pop
add
or
mov
add
add
in
rcl
pop
sub
stc
aas
and
test
mov
push
add
das
dec
xchg
add
pop
pop
out
cmp
mov
cld
fistps
mov
stc
add
insl
mov
fmuls
jae
add
sbb
and
add
cmp
sti
add
je
mov
pop
insl
mov
data16
add
jne
in
jecxz
pop
xchg
movsb
repz
cmpsb
push
cs
scas
push
in
xchg
sarl
jno
adc
mov
mov
sbb
pop
outsb
mov
ret
pop
xor
dec
mov
mov
cmc
data16
add
adc
add
add
and
sbb
or
add
insb
scas
push
add
addb
std
int
rclb
shl
ja
enter
xchg
push
cmpsl
insb
inc
out
mov
popa
addr16
jle
mov
sbb
cltd
pop
imul
add
arpl
or
cmp
movl
xor
into
add
bound
or
push
add
add
add
pop
cmc
out
add
hlt
add
xadd
movsb
insl
sub
add
pop
shrl
add
mov
js
and
xor
add
xor
adc
sahf
stc
dec
test
mov
inc
jmp
imul
mov
int
xchg
jmp
pop
mov
jle
jnp
sarb
mov
int3
repz
mov
add
jmp
mov
fbld
dec
jb
pusha
inc
add
ror
pop
test
xchg
repz
add
jg
les
outsl
add
mov
add
inc
dec
inc
add
scas
call
pop
sub
add
add
add
aaa
iret
push
pop
call
add
mov
enter
add
jp
imul
mov
add
setb
add
lds
es
stc
add
mov
cmp
out
test
mov
aam
pop
inc
in
mov
aad
add
in
mov
add
idivb
iret
add
js
add
ds
mov
sub
push
xor
bound
mov
add
cmpsb
fidivl
popf
xchg
and
cmpsb
out
add
xchg
out
inc
add
sbb
add
pop
in
daa
add
pusha
jnp
mov
cmpsb
fchs
movsb
dec
call
add
mov
clc
and
imul
lods
mov
add
jb
cmp
cli
in
add
inc
testl
sub
addb
xor
add
imul
imul
les
xor
les
cld
aaa
lret
mov
add
xchg
cmp
add
mul
jne
add
mov
cmpl
add
cltd
sarb
addb
and
repnz
testb
add
test
xor
jmp
add
jno
or
data16
add
popa
lods
aam
cld
nop
add
add
add
loope
push
ss
sub
ret
bound
aaa
sbb
loopne
add
mov
adc
enter
aad
in
sbbl
sti
and
push
ja
lds
loopne
repz
pushf
xchg
cld
shlb
rcll
or
mov
pop
sbb
add
push
pop
jmp
mov
jns
mov
jae
xorb
add
add
popa
mov
jne
cltd
hlt
pop
imul
jae
add
add
add
call
or
push
or
lahf
repz
and
xor
add
lds
inc
addr16
ds
xor
lret
out
add
sbb
sbb
mov
add
add
sbb
js
add
or
xor
add
add
add
mov
xor
mov
add
add
aam
add
popa
daa
out
or
add
rcrb
add
mov
add
mov
add
and
inc
lock
adc
ljmp
add
rcl
rorl
adc
mov
sub
jae
add
and
out
mov
inc
aam
jle
fsubrl
cmp
sbb
lds
sldt
rclb
into
lods
lcall
cmp
jecxz
test
mov
dec
shll
pop
pop
fcoml
lea
rcrl
pop
imul
lret
pusha
dec
xchg
dec
mov
movzwl
gs
cmp
mov
insl
mov
add
pusha
ljmp
stos
ljmp
add
sub
lds
add
decl
mov
mov
add
shrl
js
adc
scas
lret
sti
popf
notl
mov
cmp
adc
jge
sarb
add
in
cmpsb
sub
add
xchg
ja
add
clc
or
jo
out
xchg
mov
add
cmp
xchg
rolb
std
dec
aad
jnp
les
and
xchg
dec
cltd
adc
xlat
or
cmpsb
stos
dec
sub
sub
add
xchg
or
add
add
add
add
leave
cmp
mov
stos
adcl
add
sbb
jp,pn
add
addl
jnp
sbb
mov
or
pop
std
xor
fsub
or
lcall
es
cltd
ja
insb
sbb
jae
lock
aam
mov
cmp
sbb
in
sub
cmp
ljmp
mov
xchg
les
cmpsb
push
mov
addr16
add
das
ljmp
and
pop
rclb
popf
mov
aad
xlat
xchg
pop
stc
ljmp
mov
xchg
mov
xor
shl
lods
xchg
jge
sti
out
add
clc
add
ja
add
add
sub
cmp
mov
mov
add
loopne
add
and
out
add
pop
stos
fiaddl
js
push
add
adc
imul
mov
push
scas
fisttps
adc
test
popa
sub
jecxz
in
xchg
and
cmc
xlat
fs
movsb
jecxz
xor
jle
sub
cmp
mov
nop
loop
sarl
or
pop
imul
and
sub
inc
stc
mov
xor
rcrb
add
push
shll
imul
lock
dec
push
leave
jge
cwtl
mov
cmc
add
adc
pop
clc
enter
or
in
xchg
in
ret
aad
or
or
add
fistpll
loope
hlt
cmp
mov
xadd
cld
jg
add
dec
popl
dec
std
les
out
fwait
cmp
lds
xchg
or
add
pop
add
into
movsb
or
shr
pop
or
add
int
loopne
repz
das
mov
sub
mov
scas
add
xchg
xor
or
jle
sbb
std
dec
icebp
sbb
cwtl
inc
out
sub
sahf
adc
xchg
push
cwtl
inc
adc
lock
fwait
es
cmp
sbb
clc
mov
add
pusha
dec
cltd
ret
cmpsb
sbb
movsb
repz
sbb
xor
or
lcall
addr16
add
enter
add
cltd
ret
je
sub
pop
mov
ljmp
add
mov
push
push
push
add
fsubl
inc
pop
and
fs
cli
imul
add
or
aam
add
push
mov
pusha
rolb
lock
mov
fbld
dec
jb
aad
add
jle
mov
mov
mov
dec
mov
add
mov
rol
inc
subl
or
add
xorb
or
dec
test
inc
mov
or
sub
sbb
add
add
xchg
and
cmp
push
dec
xor
out
out
daa
jne
lahf
adc
lret
dec
cmpsb
sbb
ss
jmp
orb
out
test
int3
xchg
and
mov
mov
fisttps
enter
scas
movsb
fstpl
xor
pop
fisubrs
add
jae
adc
and
sahf
mulb
add
inc
mov
fcom
add
or
not
aad
push
push
add
scas
and
fldl
fs
add
push
std
jg
xchg
pop
jp
inc
repz
add
shlb
sub
jae
call
outsl
fldenv
xor
add
test
add
cmp
or
lret
leave
add
add
fwait
push
adc
jp
stos
dec
imulb
mov
add
pop
inc
jp
lods
push
roll
xchg
dec
xchg
mov
xchg
add
add
cmc
xor
push
mov
inc
bound
fldcw
add
add
add
adc
sub
xor
add
rcrl
pop
jb
jae
add
add
or
lods
or
add
mov
push
loopne
ja
sub
pop
add
fnsave
out
jbe
mov
sub
xor
add
sar
lock
add
sbb
cli
test
push
add
loope
add
xchg
push
mov
inc
xchg
call
add
xchg
mov
ljmp
imul
hlt
in
leave
add
push
add
push
lods
mov
mov
xor
push
adc
hlt
push
arpl
sbb
iret
push
aas
mov
xchg
adc
movsb
cmp
push
mov
sti
xor
cmp
mov
inc
stc
jbe
fwait
push
inc
sub
add
call
push
sbb
add
and
inc
rolb
add
stos
push
add
imul
jp
add
inc
repz
test
push
mov
jle
rorl
or
subl
ficoms
sub
gs
and
ret
adc
add
lods
mov
sbb
jae
shl
add
and
push
mov
test
add
iret
xchg
mov
pop
inc
aas
in
sub
je
add
dec
xchg
add
dec
scas
into
or
add
out
xchg
mov
cs
sub
mov
push
mov
sub
cld
in
leave
add
lcall
sub
notl
push
mov
mov
pop
inc
xor
add
add
xor
push
ret
aaa
out
add
test
cmc
sbb
scas
pop
int
inc
lahf
addr16
xor
test
add
mov
xor
inc
out
xor
in
and
das
testl
mov
sub
cs
test
fldl
neg
jl
adc
sbb
jo
out
jge
arpl
and
pop
scas
xchg
sbb
add
aam
adc
sub
add
push
inc
sub
mov
dec
jae
jp
add
cmpsl
leave
loope
mov
inc
push
std
imul
add
hlt
dec
hlt
or
popf
add
aaa
and
in
inc
jmp
or
dec
jbe
dec
add
stc
mov
mov
dec
push
xchg
pop
or
add
xlat
inc
lock
js
pop
ja
dec
cltd
ss
sbb
stos
das
push
incb
sub
test
jb
add
sub
add
scas
imul
jp
aas
scas
lret
jg
std
scas
mov
lcall
idivl
cmpsl
sbbb
lods
adc
test
add
sti
add
inc
mov
push
pop
xor
lcall
stc
jmp
rcl
hlt
mov
lea
mov
std
jmp
vpshlq
dec
cmpsl
push
xchg
add
sub
dec
or
adc
hlt
push
sub
push
outsb
iret
imulb
mov
lcall
jecxz
int
pusha
int3
push
inc
or
xor
add
sahf
sub
add
add
jnp
inc
in
or
bound
add
icebp
mov
in
ja
push
add
add
inc
mov
leave
sbb
addr16
add
test
mov
jnp
inc
cmc
int3
add
lock
je
rclb
add
sahf
xchg
test
stc
fnsave
arpl
add
push
cmpsl
decl
add
add
jbe
mov
add
ja
add
and
mov
add
cmp
arpl
lds
push
ret
add
cmp
lods
xchg
jmp
add
mov
pop
iret
imul
adc
add
adc
and
push
jecxz
add
movsl
dec
push
mov
mov
add
add
sub
add
mov
cmp
add
stos
mov
bound
add
lcall
inc
xchg
movsl
out
inc
xchg
arpl
and
fs
and
aas
pop
mov
sahf
lret
sbb
add
fistpl
ljmp
test
roll
inc
sub
js
add
ds
cmp
add
es
aas
add
add
mov
and
add
test
jg
ss
mov
adc
sub
aam
inc
xchg
clc
loopne
shlb
dec
lods
movsb
cltd
in
or
and
add
add
push
add
cmp
xor
fdivrs
fistpll
dec
ret
in
and
add
ror
pusha
mov
loopne
add
adc
fidivrl
cmpsb
sarl
add
and
aaa
xor
add
inc
pop
int3
and
cld
call
outsl
or
sbb
or
add
pop
rolb
add
xchg
mov
push
push
push
xor
pop
scas
push
icebp
add
stos
adc
ret
rcrl
pop
sub
lods
imul
arpl
mov
mov
outsl
scas
add
dec
add
imul
jbe
sarb
push
add
sti
mov
add
in
rcrl
idivb
addl
pop
cmp
mov
call
pop
add
add
add
sbb
or
mov
or
mov
jmp
clc
insb
inc
mov
cltd
add
pushf
sub
mov
mov
add
out
push
add
push
mov
cmp
sbb
pop
rorl
scas
mov
add
add
shlb
clc
shlb
dec
out
jg
add
out
xchg
mov
outsb
int
inc
jmp
aad
cmp
rol
add
sub
out
aam
lock
daa
fisttpll
roll
in
add
add
daa
xlat
js
adc
nop
jne
fwait
scas
add
add
push
or
loope
jl
push
fildl
test
icebp
aaa
add
push
xor
mov
mov
addl
inc
sbb
jns
add
inc
push
popl
jbe
rcrb
add
add
add
add
add
add
imul
cmp
inc
fwait
insl
inc
sub
js
add
aaa
xor
add
shlb
addr16
dec
jae
add
pop
pushf
add
jg
sub
push
inc
mov
push
add
add
fsub
adcb
arpl
dec
sbb
pop
bound
sbb
lock
stos
add
ds
pop
add
inc
jbe
dec
push
add
sbb
or
mov
leave
add
mov
lret
test
xlat
xchg
jp
sti
xchg
test
jae
xlat
lcall
shrb
test
or
pop
out
jne
add
xchg
pop
dec
mov
or
add
js
add
add
lods
ja
and
inc
add
pop
stos
and
push
or
sbb
outsl
lods
and
sbb
pop
aaa
add
inc
add
add
mov
add
pop
stos
mov
add
outsl
or
cltd
adc
adcl
dec
rcl
std
imul
outsl
fadd
add
add
push
ss
ffree
cmp
add
add
lret
ss
cmovns
fbstp
push
push
xor
daa
pop
stc
dec
mov
shl
jl
pop
add
add
cmp
shrb
and
add
jns
push
enter
enter
mov
inc
iret
pop
gs
loop
add
fnstcw
repz
fstpl
pop
xlat
mov
pop
add
ljmp
nop
mov
pop
je
fldcw
jns
dec
jns
and
sub
jnp
test
inc
adc
dec
pop
rorb
inc
jo
out
outsb
and
mov
repz
add
jno
jno
test
jno
fisubs
xor
addb
cld
aaa
ret
inc
ret
adc
sub
sub
pop
xor
add
jbe
in
pop
pop
cwtl
into
cld
add
lods
push
ss
sarl
add
mov
sbb
mov
inc
cmp
cwtl
jmp
cmpsb
and
add
rcll
daa
mov
xlat
sbb
mov
sbb
nop
cmp
add
movsb
test
icebp
push
mov
add
push
mov
insl
fiadds
add
adc
sbb
mov
lret
pop
push
stos
mov
jecxz
sub
cld
push
std
xchg
push
daa
clc
fsubl
add
mov
sar
lahf
or
add
imulb
stos
dec
cmpsb
push
ss
testl
mov
sub
clc
out
xor
cmpsb
mov
je
iret
add
addr16
add
std
xchg
int
mov
cmp
add
adc
cmpsb
mov
das
popa
unpcklps
push
or
pop
mov
jnp
mov
out
dec
fdivrs
add
icebp
ds
push
test
outsb
xchg
gs
inc
add
rolb
inc
cmpsb
in
test
mov
jo
pop
sbb
inc
dec
scas
jle
and
mov
les
mov
cld
adc
aad
mov
add
outsb
adc
adc
cmp
shl
sub
and
inc
xchg
jbe
fmull
stos
stos
enter
test
dec
mov
inc
sbb
mov
sbb
movsb
adc
push
sbb
jno
mov
adc
add
mov
push
lcall
rolb
mov
add
sbb
push
sarl
xor
aam
xchg
xor
cli
cmp
test
dec
mov
jge
cmp
ret
dec
fs
cltd
sub
jbe
push
fdivl
push
int3
mov
pop
add
pop
add
add
mov
push
push
aam
add
cmc
cs
xor
mov
sarb
and
mov
mul
and
jge
test
dec
cltd
cltd
js
orl
cmp
and
inc
in
fs
xchg
add
pop
add
add
jbe
sbb
inc
sbb
ja
sub
add
movsl
icebp
movsl
dec
dec
cltd
stc
hlt
jo
mov
jl
add
add
mov
jmp
mov
pop
mov
mov
nop
mov
testb
mov
pusha
and
sbb
add
aaa
add
add
add
add
scas
jecxz
add
add
jmp
sub
pop
xchg
popf
out
cmp
add
out
dec
cli
add
dec
jae
das
sub
and
lret
mov
add
aaa
add
add
xor
ret
arpl
fcomps
mov
add
jg
test
mov
add
in
movsl
or
jmp
mov
xchg
mov
aad
ficompl
iret
ret
mov
and
inc
dec
add
loop
jg
fstps
cmp
inc
lods
mov
jmp
lret
add
cmp
sub
jge
in
js
outsl
adc
arpl
rol
testl
push
add
lahf
jp
sub
adc
lea
and
mov
cwtl
add
fdivs
inc
or
aad
std
sbb
xor
pop
mov
pop
xchg
in
pop
cmp
jae
addr16
out
xor
jmp
cmp
push
out
inc
jns
add
loop
and
dec
fwait
test
outsl
popf
xor
xor
xchg
mov
xchg
adc
dec
fdivs
mov
add
sub
incl
aad
jae
lods
xchg
cmp
out
ss
cmp
mov
jns
pop
maxps
dec
mov
stos
leave
mov
out
insl
or
adc
jno
adc
push
inc
push
aad
push
add
add
arpl
rcl
xor
add
movsb
movsb
js
add
mov
into
inc
mov
jp
std
pop
int
xor
sbb
scas
pop
add
jno
push
push
std
pop
fsts
cmp
arpl
or
mov
addr16
xor
add
cltd
js
orl
and
add
and
pop
xchg
cmpsb
inc
cltd
xchg
pop
aas
xor
cwtl
addb
push
xchg
pusha
aaa
aam
pop
nop
push
xchg
dec
lds
mov
add
subb
cltd
stos
nop
inc
lock
ret
imul
repnz
pop
add
pop
mov
test
enter
add
jecxz
xchg
mov
aad
add
sbb
lock
push
mov
jp
add
add
inc
das
into
pop
pop
in
stos
inc
aad
daa
mov
pop
mov
aad
je
jp
push
mov
cmp
int
aad
add
add
mov
xlat
jmp
and
push
mov
rol
xchg
shl
sbb
dec
add
mov
fcmovnbe
dec
pop
add
xlat
loope
popf
loope
outsl
mov
add
inc
enter
cmp
push
sbb
lds
add
daa
lods
cmpb
pop
into
push
dec
cmp
or
adc
jge
movsl
or
rolb
mov
xor
fs
dec
popf
cmpl
or
push
decb
pop
mov
add
and
push
push
popa
inc
out
mov
or
add
mov
fnstenv
push
xlat
stc
cld
mov
sahf
cmpsb
movsb
or
mov
sub
stos
enter
sbb
mov
sbb
maxps
push
or
adc
sahf
lret
add
enter
arpl
dec
jbe
pusha
not
test
ljmp
pusha
les
mov
mov
jne
pop
jns
or
fiaddl
inc
push
or
adc
pop
arpl
shl
dec
popf
cmp
es
sahf
sbb
sub
add
add
push
inc
xor
add
mov
lcall
pop
pushf
mov
lods
pusha
data16
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
xchg
subb
pop
jne
imul
shlb
in
add
adc
mov
cs
push
cmpsl
fidivrs
sbb
jge
xor
ret
shrl
jge
shl
iret
jle
loope
jns
pop
es
movsb
stos
jo
lahf
rclb
cwtl
push
mov
inc
lds
add
rclb
add
add
mov
roll
lret
sarl
jno
add
add
rolb
aaa
inc
mov
add
add
add
scas
add
cmp
inc
mov
xchg
clc
add
icebp
add
cmp
add
adc
mov
adc
lock
jmp
mov
dec
or
xor
mov
add
in
imul
sub
ret
add
imul
adc
xchg
xor
loop
call
jne
lock
cld
pop
mov
fld
add
into
inc
pushf
je
add
in
xor
add
int3
jnp
add
sahf
test
inc
add
xchg
shrl
imul
pop
testl
pop
lods
xor
or
enter
sahf
icebp
sub
ret
cli
sub
xlat
xchg
insl
inc
inc
out
enter
dec
flds
adc
adc
rolb
movsl
in
dec
xchg
or
jl
inc
mov
jge
ljmp
pop
sbb
mov
pop
adc
dec
cmc
or
add
or
add
and
shll
je,pn
mov
adc
cmp
and
push
mov
jae
mov
cmp
jl
dec
sbb
in
pop
adc
add
add
add
int3
fcompl
ret
sbb
dec
pop
pop
mov
pop
add
pushf
fcmovnu
lods
cltd
add
mov
pop
add
mov
fcoml
mov
jg
sbb
add
add
sti
jecxz
mov
decb
ret
je
cmp
dec
flds
add
clc
dec
cmpsl
mov
cltd
jge
iret
xchg
in
dec
jns
push
adc
cmp
dec
sub
std
rcll
inc
inc
xchg
mov
les
dec
subl
mov
cmc
mov
cli
jge
add
add
dec
outsb
out
adc
or
add
and
jae
sbb
popf
sti
cmp
sub
cmp
lods
loopne
cmpsb
jmp
lock
add
stc
ret
fnstcw
pop
cmp
add
add
test
loop
pop
sbb
add
cld
sbb
iret
out
into
add
mov
inc
sub
nop
xchg
imul
daa
mov
inc
lods
cmp
arpl
sub
in
dec
jne
ja
mov
add
xchg
pop
adc
shr
inc
jecxz
add
test
add
adc
adc
std
and
mov
xchg
scas
fstl
pushf
dec
add
dec
fsubrl
lods
push
add
xor
xorl
push
sbb
xchg
add
cwtl
add
sub
or
jle
sub
aas
out
es
push
add
add
sub
es
enter
ret
outsl
adc
stc
add
negl
fisubrs
dec
cltd
insb
adc
and
sarb
imul
lahf
in
jmp
xchg
je
cmp
test
or
push
sub
jl
and
push
cld
adc
das
call
out
pushf
inc
add
dec
arpl
inc
scas
inc
jge
movzwl
mov
xchg
insb
fiadds
add
add
add
setp
add
adc
add
fwait
jae
lods
add
lret
jae
or
add
test
les
inc
mov
popf
mov
cmp
mov
push
loop
inc
lahf
js
xlat
cmp
testw
add
sub
xchg
push
popa
dec
out
sub
ret
jmp
mov
cs
push
repz
fs
cmp
and
adcl
add
cmp
sahf
add
sub
or
jne
mov
jge
hlt
out
addr16
aam
les
cmpsb
lock
fwait
lret
in
aad
inc
adc
inc
cmp
out
xor
xor
loopne
stos
sub
sbb
icebp
mov
mov
scas
call
pop
jo
push
negl
add
aaa
test
sbb
fdivs
push
cmp
add
aaa
push
pop
mov
push
add
xchg
fwait
dec
js
movsl
push
mov
jae
jo
xor
sub
sbb
jg
btr
loope
insb
xlat
cmp
stos
cwtl
xchg
cld
decl
jae
jb
rcrb
hlt
jno
xchg
jl
shrb
movsl
adc
mov
jb
out
xchg
dec
mov
shrb
add
sbb
mov
int
mov
daa
cmp
sbb
shr
add
push
adc
cmp
xchg
arpl
sub
mov
outsb
out
fcoml
sbb
lret
pop
icebp
xor
cmpsl
jno
or
sahf
out
test
mov
ss
sub
lds
pusha
push
addr16
lods
ficoml
mov
call
inc
pop
mov
push
mov
xchg
jecxz
call
dec
jle
rclb
mov
mov
jmp
mov
mov
jecxz
loopne
mov
out
roll
adc
xor
cmp
xor
mov
cwtl
mov
mov
ljmp
sbb
fs
pushf
and
mov
sahf
cmp
mov
test
pop
inc
mov
mov
rcrl
repnz
mov
mov
dec
in
mov
jmp
add
xchg
sub
fisubl
cld
mov
add
add
add
dec
cmp
add
add
add
add
je
pop
mov
cmp
icebp
or
dec
std
insl
mov
jno
es
mov
fwait
add
scas
mov
add
rcl
mov
pop
fsts
into
adc
shlb
mov
fldl
dec
push
scas
fcomps
jo
sbb
ret
mov
push
js
mov
pop
cmp
jp
cltd
cli
repz
insb
sub
inc
mov
or
mov
insb
aad
je
mov
push
out
mov
mov
jmp
cmc
dec
jmp
push
mov
movsb
xchg
out
mov
mov
push
jl
adc
xchg
sub
mov
pop
jl
insb
and
xchg
inc
mov
cmpsb
dec
lea
inc
arpl
test
jecxz
add
xlat
mov
jno
cmp
and
aas
fbld
dec
add
xor
sbb
sub
scas
arpl
or
sbb
and
mov
sub
add
cmp
jecxz
movsl
jo
ret
xorl
jle
adc
add
mov
shl
jl
dec
pop
and
mov
imul
push
scas
pop
add
push
push
add
dec
hlt
cmpsb
add
out
fbld
and
js
mov
lret
pop
fidivrs
addb
mov
mov
mov
push
mov
std
inc
adc
outsb
mov
rcrl
mov
insb
push
fs
jbe
mov
jg
pop
sbb
repz
mov
pusha
xchg
jo
or
dec
sbb
mov
add
xor
icebp
mov
leave
fmuls
bnd
cmpsb
add
add
sub
scas
test
out
stos
or
mov
dec
add
out
xchg
jnp
sbb
fistpll
mov
mov
dec
test
cwtl
ljmp
pop
subl
add
xchg
ret
jnp
push
aad
loop
movl
js
add
mov
jbe
mov
and
imul
sahf
popa
outsl
xor
add
ret
int
arpl
stos
fwait
xor
lcall
cwtl
sub
mov
add
out
and
lds
add
cmp
push
add
idivl
out
add
xchg
jecxz
add
mov
sub
stos
scas
mov
inc
mov
add
mov
add
xchg
cmp
adc
cmpsb
pop
jae
mul
add
jmp
mov
add
sti
in
cmp
add
or
fdivrl
or
xor
mov
std
out
inc
mov
mov
sbb
call
sub
hlt
jg
xchg
cmp
icebp
into
mov
dec
push
cmpb
add
jno
fiadds
dec
aas
mov
add
cltd
cs
adc
sub
aas
idivb
add
sub
cwtl
inc
cmpsb
push
cmp
nop
int3
sub
lods
sbb
movsl
repnz
fildl
add
jnp
arpl
daa
mov
xlat
aam
les
mov
call
add
and
pop
les
push
jl
mov
push
pop
adc
lods
mov
cmpsb
imul
mov
dec
idivl
mov
pushf
lahf
cmpsl
pop
fmull
psubw
xlat
jmp
add
fwait
ss
imul
add
and
cmpl
cld
add
aad
mov
cmpsb
xlat
call
jecxz
xor
pop
lods
sub
or
sub
mov
ja
ret
push
addr16
lods
loop
inc
je
dec
jmp
push
or
sbb
push
out
sahf
jno
xchg
pop
or
cmpsb
rorb
and
mov
loope
mov
pop
xor
xchg
das
mov
mov
leave
add
push
stos
mov
pop
andl
mov
pop
inc
xchg
lahf
add
pop
mov
dec
fmull
sub
sahf
pop
mov
sbb
sub
or
popa
fcom
ljmp
jbe
ljmp
shl
roll
cmp
pop
lods
xor
jae
flds
sbb
ljmp
mov
pop
in
imul
push
cwtl
outsb
inc
add
sub
leave
jmp
push
add
sbb
add
aaa
pusha
iret
xor
movsb
mov
dec
push
xchg
pop
fcompl
cwtl
pop
and
in
mov
add
lahf
sbb
in
jp
loop
add
inc
ret
adc
sti
repz
xlat
inc
pop
mov
fldl
out
inc
adc
sub
mov
add
add
and
inc
add
fistpll
or
iret
out
sub
add
add
fsubr
xchg
jae
sbb
mov
testl
stos
ja
nop
movsb
data16
leave
and
out
imull
pop
in
test
adc
mov
mov
mov
xchg
stc
inc
fcompl
ret
sub
arpl
out
add
inc
test
in
ret
add
les
add
iret
dec
mov
into
mov
add
add
subl
add
adc
ds
add
inc
lea
add
add
jge
sub
add
loopne
add
cmpsl
inc
mov
push
shl
add
and
pxor
push
add
mov
or
fwait
xchg
out
push
test
push
leave
sub
add
xor
cwtl
add
out
add
add
aas
adc
xor
add
add
shrl
sti
sub
add
aas
add
add
inc
sbb
or
fnstsw
nop
cmpsb
mov
dec
out
addb
iret
orl
jne
dec
and
adc
mov
outsl
arpl
ja
aas
mov
add
cmp
ret
dec
fiaddl
xchg
dec
mov
sbb
add
loopne
xor
sbb
aad
lds
je
mov
into
out
mov
add
add
and
jg
stos
pushf
loop
add
mov
mov
pop
add
loop
imulb
subl
pop
and
sub
nop
cmp
mov
add
add
pusha
daa
cmc
lahf
in
movsb
add
push
repz
sbb
out
test
insb
sub
clc
loopne
mov
jmp
pop
mov
lds
sbb
loopne
popf
pop
cmp
dec
das
jno
xchg
jecxz
mov
inc
add
xor
inc
inc
xchg
mov
add
xlat
std
jg
or
ret
push
pop
cs
sarb
mov
aas
mov
lcall
fisttps
add
sahf
sbb
cmp
jae
mov
mov
das
add
jae
add
add
or
das
lret
add
cmc
xchg
mov
mov
into
or
jns
sbb
mov
fwait
lods
lcall
das
add
dec
das
sti
or
add
sub
repz
jno
add
js
xchg
ror
lahf
inc
xchg
arpl
call
add
iret
data16
add
dec
inc
mov
add
aad
fsubr
mov
loopne
add
shl
lds
cld
add
dec
stos
add
xchg
xlat
inc
outsb
lods
xchg
scas
ljmp
js
add
jle
mov
xchg
cli
add
shll
and
add
lret
sbb
or
xchg
rcl
ds
imul
add
add
fstpt
push
dec
addr16
stos
imul
cli
xor
cmp
add
add
add
add
out
add
test
outsb
add
stc
out
inc
cwtl
or
add
add
and
lcall
push
pop
mov
mov
hlt
ljmp
sahf
daa
dec
imul
add
add
xor
mov
fsts
inc
ss
mov
test
cld
sbb
mov
sub
add
cmp
ret
add
cmc
cwtl
ret
sub
mov
inc
mov
mov
dec
pop
xor
adc
jmp
add
sub
pop
and
out
sbb
add
pop
adc
inc
lcall
add
sbb
lahf
scas
xchg
adc
adc
pop
sbb
add
add
or
dec
testb
xchg
and
js
push
sbb
test
add
stc
mov
jmp
mov
aaa
push
add
xchg
adc
fstl
pop
add
dec
jecxz
adc
sbb
test
pusha
repz
mov
cmpb
cmp
leave
mov
xchg
inc
cwtl
xchg
es
adc
jno
mov
outsl
cmp
push
pop
or
or
in
dec
imul
insl
ljmp
push
xor
add
add
in
rep
sub
stos
mov
or
push
test
cmpsb
cmc
cmpsb
jge
sub
pusha
lret
fiadds
add
lds
fimuls
fstps
ja
stos
and
orl
add
adc
jb
add
and
push
insb
in
sub
int
pop
cmp
movsb
xor
lods
mov
aam
push
insb
in
sub
lea
imul
adc
add
jnp
cmp
cmp
or
mov
popf
sub
adc
add
cmp
cwtl
add
add
xchg
enter
and
push
shll
or
add
xlat
rorl
sub
cs
inc
add
sahf
ljmp
adcl
cmc
sub
filds
sarb
add
into
subl
int
dec
fidivl
ljmp
int3
mov
mov
insb
roll
xor
call
mov
jecxz
shrb
iret
sub
mov
out
xor
and
movsl
xlat
push
rclb
loope
push
outsl
leave
jbe
lcall
jmp
pop
inc
andl
fldl
xchg
push
pop
add
xchg
add
and
add
div
add
cmp
push
add
insl
dec
in
popf
and
push
add
mov
mov
ja
cmp
scas
hlt
jg
mov
bound
dec
sahf
lea
add
and
stc
inc
imul
adc
add
or
add
fbld
popf
stc
sbb
ds
sub
fs
sahf
cmc
test
push
xor
stos
or
leave
ret
sarb
lret
xor
cwtl
and
shl
push
out
xchg
out
sub
push
xor
cmpb
cmp
inc
insl
mov
stos
sbb
cmc
xchg
sbb
insb
push
addb
mov
jnp
pop
add
cmp
mov
pushf
push
add
add
divl
ret
jbe
push
in
fs
push
dec
test
adc
call
repz
add
or
mov
insb
xchg
mov
mov
pop
fwait
pusha
dec
fs
inc
sub
outsb
add
pop
add
cmpsl
cmpsl
sarl
scas
in
mov
xchg
int3
fidivs
push
fcoms
jo
inc
in
inc
ljmp
xchg
rcrl
pop
cmp
je
and
pop
cmp
cmp
push
insb
mov
hlt
cwtl
jmp
adc
pusha
adc
sub
in
rcrl
add
insl
test
xor
add
sti
add
mov
add
lret
int
pop
fldenv
mov
and
pop
push
cmpsl
mov
sahf
in
xchg
int3
cmp
or
adc
push
or
cmp
je
push
sbb
add
out
and
imull
jecxz
sub
add
add
icebp
ret
loop
push
sub
add
add
sbb
das
xchg
xchg
add
mov
push
cmpsb
adc
lcall
fnclex
or
insl
add
stos
adc
sti
sbb
call
lods
adc
clc
jmp
push
push
xor
mul
push
adcl
add
add
stos
cmp
push
fistps
xor
lods
jmp
aaa
test
inc
lcall
add
sub
jp
sti
fwait
cmp
dec
dec
lods
dec
scas
add
add
out
add
pop
pop
shrb
pop
and
test
dec
lds
ss
mov
add
sbb
test
shlb
add
add
int3
xbegin
add
or
adc
dec
add
add
cmpb
jmp
mov
add
mov
or
or
add
add
add
repz
call
adc
or
add
fs
ss
decl
add
add
mov
mov
sbb
inc
xor
xchg
add
add
add
add
mov
inc
sub
dec
fwait
xlat
lea
add
add
pop
pop
pop
popl
xorl
push
pusha
loope
pop
icebp
xor
mov
in
sbb
jl
mov
cltd
insb
mov
scas
ja
cmpsl
sbb
addb
pop
sbb
cmp
mov
addr16
loope
bound
cmpsl
roll
lods
aaa
inc
ljmp
add
add
stc
popf
shrb
add
add
mov
loop
mov
add
insl
or
jp
add
add
mov
adc
mov
mov
and
add
or
mov
sub
add
stc
arpl
mov
sbb
invd
sahf
lcall
jle
add
das
aaa
add
add
or
or
daa
push
int3
movsb
insl
loop
add
add
add
mov
dec
pop
les
out
sub
mov
xchg
sub
nop
add
add
leave
sbb
cmc
xor
dec
mov
add
add
xchg
aam
nop
jecxz
add
add
movsl
and
cmp
add
add
sub
dec
in
out
push
in
push
test
mov
pop
add
add
sub
ret
push
loop
int
popl
lcall
add
arpl
add
add
popa
shll
sarb
push
rcl
sub
lods
sahf
xor
lahf
inc
xchg
aaa
fcoml
pop
xchg
stos
enter
iret
xchg
jecxz
pop
or
ljmp
or
movsl
jmp
or
mov
pop
out
jbe
icebp
jp
repnz
add
movsb
nop
hlt
stos
dec
adc
inc
scas
insl
js
dec
adc
rorb
sahf
add
xor
sbb
aas
xchg
xchg
in
into
mov
xlat
out
les
sbb
mov
jbe
scas
loopne
pop
int3
or
xor
in
add
and
cmp
cmp
stos
mov
add
add
and
notl
movsb
lret
lock
in
dec
add
es
push
sbb
aas
aaa
sahf
xchg
push
fcoms
add
cmp
xchg
repz
xor
jo
sbb
adc
cmp
inc
das
inc
movb
cmp
loope
push
xchg
pop
lods
xchg
cmp
sub
pop
out
lcall
adc
jecxz
out
in
imul
das
insb
addr16
ja
add
mov
xchg
in
cmp
ficoms
mov
sbb
inc
shl
fstpl
mov
movsl
pop
aas
mov
fsubs
dec
sub
xchg
or
add
xor
dec
fs
sti
pushf
in
scas
dec
xchg
fldl
inc
fimuls
ja
rcll
and
das
fidivrl
add
imul
add
inc
rcrb
pop
repnz
fsts
repz
lret
arpl
xchg
mov
jmp
arpl
or
push
push
add
int
jg
sub
inc
sub
sub
mov
lret
inc
xorb
stos
dec
mov
add
ljmp
mov
sbb
in
add
sbb
icebp
dec
or
roll
test
in
cltd
ror
adc
and
sbb
test
ja
roll
add
test
xor
add
xlat
adc
imul
lahf
bound
mov
mov
inc
xchg
sub
adc
and
fbstp
cwtl
fcmove
cmp
cmp
hlt
lea
push
fs
shll
cmp
jle
pop
addl
xor
cmpsb
add
sub
rcrl
lods
mov
addr16
dec
mov
mov
shll
dec
je
insb
js
jb
xor
loop
ja
inc
pop
pop
add
mov
or
sbb
add
pop
jl
cmp
add
arpl
lds
fildl
add
push
jnp
add
shlb
fnstenv
push
enter
cmp
movsl
or
aam
add
mov
mov
add
add
clc
js
mov
jo
and
pop
arpl
cmp
add
add
mov
pop
arpl
add
add
aas
aas
popf
add
push
sub
xlat
add
pop
cmpsl
inc
ret
add
std
inc
in
mov
pop
fs
add
outsb
xor
sub
in
cld
cli
lahf
and
repz
add
sub
add
add
or
add
push
pop
mov
add
inc
aad
roll
mov
adc
pusha
push
add
arpl
xor
adc
leave
push
adc
sub
popf
addb
in
add
mov
leave
enter
jnp
rolb
inc
popf
movsb
adc
ja
xchg
add
add
jbe
sbb
cmp
mov
add
mov
imul
outsl
push
or
sahf
cltd
adc
iret
add
push
jne
sarw
lret
repnz
test
lret
add
aam
lock
mov
incl
cld
cmp
add
mov
add
xor
mov
mov
cmp
fucom
add
xchg
pop
out
fisubrl
dec
fcoml
je
adc
insl
inc
pop
push
and
jns
loopne
icebp
jae
mov
into
insl
lret
inc
movsb
test
push
aas
cmp
fs
popl
jbe
nop
mov
adc
cmc
mov
add
add
or
jp
mov
adc
imul
lods
mov
xlat
sbb
jae
shl
add
pushf
jle
fmull
add
test
negb
sbb
scas
mov
call
subb
inc
mov
mov
push
push
mov
and
add
add
mov
sarb
mov
cli
int3
sbb
xor
or
in
mov
xor
jecxz
xchg
add
push
mov
aas
mov
add
add
pop
fwait
cmp
shl
imul
dec
ja
xchg
add
loope
add
jne
aaa
add
imulb
add
dec
pop
inc
add
jno
add
add
add
sub
jmp
movb
adc
in
jmp
sub
rcll
fcmove
test
scas
dec
add
dec
inc
xor
add
jecxz
lret
std
insb
sbb
pop
pop
mov
add
add
jecxz
outsl
ljmp
and
mov
cltd
scas
enter
adc
inc
push
popa
sbb
aaa
cmp
out
xor
inc
shlb
add
sarb
pop
xor
add
jmp
sbb
lahf
addr16
push
inc
sbb
jecxz
sub
movsl
mov
sbb
mov
add
cmp
sarl
add
repz
lea
scas
mov
dec
sbb
stc
adc
out
lods
adc
pop
jne
lcall
mov
shll
dec
add
add
add
minps
iret
cmp
sub
std
xchg
mov
pop
into
pop
fmull
sbb
inc
or
fisttps
mov
out
xchg
nop
mov
sub
xor
inc
mov
add
add
or
movsl
sti
pop
adc
std
push
insb
sti
arpl
scas
dec
sarl
nop
cmp
pop
mul
cmp
add
int
add
xor
int3
sbbb
xor
push
dec
mov
dec
xchg
xor
cmp
in
lahf
jb
lcall
subb
in
rcl
ret
sbb
xchg
jae
sub
mov
dec
mov
call
loope,pn
or
add
inc
mov
cmp
imul
pop
jb
outsl
cmp
and
aam
xchg
fiaddl
add
arpl
xchg
out
push
test
fnstenv
dec
add
add
sbb
fdivrl
mov
imul
ja
inc
fldt
mov
out
bound
outsb
mov
push
js
add
shr
repnz
dec
ret
sti
test
into
lcall
mov
jbe
push
iret
sbb
stc
sub
pop
or
sti
cmp
dec
inc
push
or
repz
push
test
lods
dec
cltd
ret
cmpsl
xor
inc
jecxz
add
add
or
add
fidivl
sahf
mov
pop
or
dec
push
pop
rcrl
jns
push
sub
or
lahf
adc
imul
jno
mov
cld
aam
mov
jo
sub
cmp
aam
pop
outsb
ja
cmp
bound
dec
sbb
scas
mov
or
cltd
popa
push
pop
push
mov
fwait
pop
add
sarl
aaa
xchg
mov
testb
mov
ss
add
xor
je
inc
lods
movsl
add
rorb
jecxz
add
fdivrl
add
roll
sbbl
pop
and
add
gs
cmp
add
sbb
adc
lret
nop
out
jnp
add
cmc
xlat
adc
fsubs
dec
movsl
sti
adc
lock
jge
push
out
inc
mov
pop
test
arpl
rcrl
out
mov
and
lods
iret
loop
daa
iret
or
sbb
inc
test
pop
and
cmp
out
sbb
mov
pop
clc
xor
and
jne
adc
ret
sahf
xchg
xchg
dec
push
mov
mov
aaa
add
lods
ret
xchg
mov
ret
mov
push
aam
mov
stc
test
add
iret
loope
loopne
mov
cmp
cmc
sub
and
lock
push
pop
lret
pop
xchg
mov
xor
add
jecxz
inc
ficomps
cmp
out
jle
mov
dec
mov
hlt
add
push
out
gs
aad
fidivrl
ficompl
stc
lds
jne
adc
xorl
add
add
cmp
stos
push
sub
andb
jl
mov
push
int
add
lret
js
imul
mov
js
push
add
add
add
sub
sbb
int3
push
fcmovnu
add
bound
subb
ss
sbbb
out
adc
jecxz
flds
add
addl
jns
sbb
in
scas
out
adc
and
sub
sbb
cmpsl
daa
test
aas
lods
out
enter
lahf
jg
cmp
add
aas
mov
mov
ja
dec
add
add
push
add
dec
rorb
sti
data16
inc
lea
in
cmp
adc
push
pop
inc
ljmp
xchg
ror
xor
lds
cmp
add
add
in
push
out
mov
mov
pop
lods
pop
shll
cs
sbb
sub
add
mov
cmpsl
mov
pop
shlb
sarb
aad
adc
adc
sub
jno
fistpll
inc
mov
add
iret
adc
sti
das
shrb
das
and
inc
push
out
les
or
in
jnp
inc
aad
cwtl
lcall
jns
mov
ret
add
add
outsl
orl
pusha
add
add
iret
mov
lea
and
add
add
fwait
xor
outsb
xor
add
sub
add
add
mov
bound
imul
inc
das
sti
sbb
sbb
sbb
xor
lds
and
addl
push
sbb
dec
std
mov
fiaddl
mov
into
imul
frstor
mov
jns
cmp
sbb
xchg
add
stc
popa
call
ds
jl
insl
dec
add
sub
fcomi
pop
test
fs
pop
xchg
loopne
add
add
push
xchg
ret
xor
ret
daa
dec
inc
cmp
add
add
inc
repz
cmpb
adc
inc
dec
stos
xor
nop
mov
xor
mov
sbb
test
mov
dec
inc
xchg
testl
sbb
add
xor
cwtl
or
add
add
fisubrs
dec
add
add
add
add
mov
pop
or
insb
dec
adc
sldt
add
movsl
add
add
add
or
mov
addr16
jo
pusha
inc
xor
aad
rcl
mov
sbb
aam
sarb
imul
ficoms
mov
sbb
add
dec
mov
jae
mov
sbb
xchg
std
cmpsb
fisttps
jae
inc
push
sub
xchg
push
cmp
fistpl
jecxz
out
dec
andl
ret
push
stos
xchg
add
and
or
imul
insl
scas
add
push
add
pop
int3
add
mov
flds
inc
or
ret
or
or
pop
jne
dec
pushf
pop
pop
test
add
mov
outsl
sbb
inc
add
mov
stos
cld
sbb
dec
test
xchg
stos
popf
notb
stos
pop
scas
inc
xor
jae
mov
push
in
add
add
dec
adc
jb
or
push
inc
cmp
mov
int
scas
sub
xlat
dec
mov
xchg
clc
loop
sub
push
cltd
insl
inc
jg
aas
jge
insb
adc
pop
jmp
and
push
ljmpw
mov
jbe
dec
jl
push
mov
push
add
and
add
add
cmp
mov
xchg
xor
push
or
add
or
add
fdiv
mov
fnsave
pop
mov
lcall
aas
das
add
test
sbb
out
inc
out
rolb
mov
mov
faddp
xchg
sub
push
aas
sbb
mov
test
inc
in
xor
dec
nop
cltd
add
jb
and
cli
dec
push
nop
adc
mov
cwtl
mov
fadds
mov
mov
gs
inc
add
mov
jo
ret
add
outsl
popa
cltd
ret
add
cmp
or
movsb
imulb
push
mov
sub
push
lods
lds
mov
or
lret
adc
lods
xlat
pop
push
data16
ljmp
lahf
jmp
mov
in
movsl
sub
movsl
push
jmp
cmpsb
mov
das
popf
add
test
fs
jmp
out
in
out
test
incl
add
xchg
or
or
sub
pop
shll
lods
push
inc
test
add
es
ret
pusha
les
mov
out
jnp
iret
sti
std
mov
mov
outsb
imul
cltd
cld
or
xchg
cmp
xchg
push
arpl
pop
rcrb
lcall
push
xor
push
inc
daa
cs
mov
jl
mov
sbb
mov
movsl
xchg
notb
xchg
subb
pop
fs
mov
in
sti
enter
pop
mov
xorl
jle
sbb
enter
test
pop
jp
jne
add
cmp
adc
or
sbb
vpsubw
add
rclb
outsl
aam
dec
lcall
jae
mov
daa
dec
cltd
push
sbb
xor
cmpsb
test
shlb
ret
bound
cmp
jo
lcall
dec
pop
add
mov
fildll
inc
pop
mov
pop
add
js
dec
dec
add
test
pop
xor
cmp
add
ss
cwtl
cmp
add
lods
ja
scas
sbbb
ret
cmp
push
lcall
jns
movsl
shr
fnsave
std
subl
xchg
fdiv
addl
add
xlat
xor
arpl
jnp
or
mov
xlat
mov
int3
sub
jnp
inc
add
cltd
arpl
cmc
in
jnp
sbb
bound
int3
int3
add
daa
adc
add
mov
mov
fsubrl
dec
mov
movsl
and
add
cltd
or
outsl
and
add
jb
push
xchg
lret
add
add
add
sbb
ljmp
stos
dec
mov
and
and
stos
test
add
in
in
add
pop
test
add
lahf
sti
std
adc
add
add
dec
stos
inc
mov
mov
add
lret
int
push
test
lcall
mov
fsts
add
inc
adc
fstpl
fildl
or
pop
out
add
jbe
sar
out
aas
pop
int
add
jno
das
jge
add
xor
icebp
sub
mov
repnz
aas
jno
push
or
mov
ret
aaa
xor
sbb
xlat
fnstenv
sub
les
out
movsb
mov
inc
je
lods
std
outsl
mov
adc
incb
rcrb
test
push
das
mov
add
notl
inc
xchg
dec
popa
fcoml
dec
pop
js
ret
je
insl
andl
fcmovnu
push
stos
repnz
and
loope
dec
jno
pop
sub
push
xchg
add
cltd
or
nop
cmp
add
add
out
xchg
pusha
mov
cltd
out
enter
add
cmp
add
xlat
movsl
push
lods
jns
iret
xchg
xor
add
cmpsl
test
cmp
mov
xor
jle
jb
pusha
sub
sbb
js
fcoms
jl
roll
mov
add
add
out
dec
rorl
add
pushf
jnp
movsb
fsubrl
add
or
js
or
add
dec
xchg
xor
or
pop
adc
dec
jo
inc
rclb
sbb
jl
inc
pop
jmp
push
or
jmp
aad
pop
or
or
mov
les
out
inc
mov
addb
and
add
repz
mov
sbb
repnz
cmp
jmp
outsb
jl
dec
rcr
shlb
xchg
cmp
xor
add
clc
outsl
stos
aad
cmpsl
mov
cwtl
pop
stos
iret
push
cmc
dec
icebp
and
inc
mov
add
xchg
xor
cmp
inc
ljmp
jno
xchg
xlat
mov
sbb
mov
mov
jnp
push
sub
xor
dec
xchg
mov
xor
test
mov
sti
arpl
mov
aas
popf
jb
sbb
jbe
rcl
mov
aad
mov
mov
push
xchg
add
or
jg
push
das
push
add
jns
loope
fmul
add
gs
adc
fnstsw
and
push
or
inc
filds
das
ljmp
outsb
add
jecxz
mov
addb
and
ja
fdivrs
cld
add
add
mov
jl
mov
mov
add
jp
jg
adc
add
and
sub
xchg
add
mov
xor
pushf
adc
into
arpl
cmc
or
lcall
sti
or
inc
add
scas
jecxz
xchg
arpl
stc
aas
xor
sbb
fldl
add
mov
imul
mov
add
idivl
nop
jp
xchg
ret
nop
mov
add
lret
cmpsl
add
in
push
rcrl
jnp
add
fadds
add
push
inc
push
mov
movsl
lods
movsb
mov
add
jbe
xchg
push
pop
insb
cmpl
xor
or
ret
aas
shll
push
jae
test
mov
jecxz
les
mov
dec
mov
add
pushf
pop
mov
rcrb
lret
add
insl
xor
test
stos
cmp
ret
mov
insl
addr16
test
aam
orl
in
out
mov
jae
xchg
lea
in
add
sub
xchg
sbb
mov
dec
addb
shll
daa
les
jae
lret
les
cmp
mov
les
and
jl
ret
aam
xlat
xchg
arpl
inc
mov
scas
fildll
jle
cmp
pop
popa
sub
jae
and
jecxz
fcompl
scas
roll
inc
les
lret
nop
cli
push
inc
adc
sarb
mov
and
popa
insl
jp
rcrb
sti
sbb
aas
cmp
adc
js
or
testl
rclb
lret
xor
mov
add
clc
push
lea
add
lods
movsb
fwait
outsl
mov
sbb
mov
add
add
cmc
jnp
jae
or
ds
mov
dec
or
xchg
outsb
mov
in
or
imul
lret
pop
divb
cmc
inc
add
fimull
filds
add
xor
dec
mov
jecxz
sub
or
cwtl
mov
push
pop
inc
outsl
and
mov
xor
dec
cmp
aad
inc
jb
xor
inc
jl
imul
negb
inc
sub
sbb
repz
add
jae
cmp
mov
orb
mov
sub
lret
inc
iret
jl
dec
rcrb
jp
scas
ret
mov
cmpsl
scas
pusha
inc
fwait
jp
enter
push
jnp
dec
xchg
cwtl
xor
dec
push
cmc
repnz
mov
push
aas
adc
dec
push
fadds
xchg
add
out
ja
or
pushf
mov
mov
sahf
push
adc
lret
leave
cmp
ficoml
stos
inc
fs
jns
test
iret
jae
popa
dec
lods
cmp
push
add
add
mov
xor
lods
sti
or
add
fcoms
jns
mov
or
adc
in
or
xchg
cwtl
xor
lea
dec
jne
popa
push
js
mov
fsubrs
mov
pop
add
jg
pop
inc
mov
inc
xchg
xchg
mov
mov
clc
add
add
jne
xor
leave
pop
adc
in
xorl
jg
movsl
ja
xchg
arpl
mov
cmc
sub
xlat
out
and
jmp
pop
push
dec
dec
mov
mov
jne
nop
cmp
insl
inc
out
add
and
pop
cwtl
aaa
lahf
sbb
sti
lret
sub
sbb
adc
enter
fdivr
fidivl
sti
add
add
xchg
fbld
xchg
sub
popa
sbb
mov
push
push
push
mov
cmp
ds
jb
and
add
pop
les
add
sahf
mov
add
lea
pop
push
add
or
repnz
jno
iret
iret
mov
pop
cmp
iret
ja
pop
mov
xchg
mov
je
and
pop
jg
mov
pop
movsl
scas
sbb
ret
mov
dec
andl
daa
xor
cwtl
div
sahf
aad
stos
xchg
add
lods
and
jmp
xorl
or
sti
cmc
lahf
mov
scas
aad
or
sbb
loope
fwait
mov
movb
dec
sub
cmp
mov
xchg
xchg
push
out
sbb
aas
mov
sarl
aaa
and
testb
and
ficomps
ds
adc
adc
enter
dec
cltd
es
cltd
mov
je
jae
nop
adc
outsb
add
or
add
add
and
scas
push
cmc
mov
lea
xor
or
add
cmp
mov
das
mov
add
push
mov
jnp
cwtl
dec
pusha
bound
xor
fisttpll
or
mov
jg,pt
add
clc
out
jecxz
and
jp
mov
arpl
lcall
and
jl
iret
aam
add
sub
in
lds
cwtl
mov
add
push
inc
dec
mov
rorb
add
add
add
stc
xchg
mov
ss
lcall
inc
add
ret
movsl
inc
dec
out
pop
add
inc
push
pop
cmp
mov
call
rcl
lahf
mov
insb
jbe
and
xchg
js
pop
add
add
leave
mov
inc
shlb
nop
in
popa
pop
mov
sbb
test
jecxz
dec
in
arpl
add
inc
push
xor
jno
daa
pop
jmp
subb
xor
sub
mov
add
add
xchg
ljmp
cmp
movsb
push
fisttpll
push
movsl
insl
loop
sti
mov
stos
mov
pop
sbbb
loopne
jg
pop
in
xor
sbb
mov
fcoms
add
xchg
inc
mov
pop
inc
jbe
sbb
sar
ljmp
out
add
add
sub
add
arpl
bnd
jg
push
rolb
mov
dec
pushf
pop
pop
mov
pusha
ret
movsb
push
adc
or
inc
cwtl
or
scas
push
inc
jno
mov
movsb
movsb
cs
cmp
mov
mov
sar
lret
dec
sahf
lods
pusha
rcl
cmp
xor
or
hlt
in
repz
sub
pop
mov
es
pop
pop
mov
jg
dec
scas
dec
pop
mov
in
push
sbb
mov
sbb
sbb
movsb
or
dec
inc
das
cmpsl
mov
jbe
outsl
ficomps
and
sbb
enter
sbb
movsl
or
or
cmp
sbb
and
mov
pop
xor
sbb
mov
xor
lcall
andl
sbb
mov
jnp
add
cli
sub
mov
scas
mov
cmp
xchg
xchg
movsl
in
je
or
lds
or
mov
in
mov
add
add
inc
add
add
add
insb
pushf
push
add
movsbl
sbb
cmp
out
mov
mov
dec
and
mov
cltd
mov
xor
and
add
jecxz
add
add
loope
push
adcl
rorl
add
loope
mov
inc
xor
mov
xchg
mov
adc
add
pusha
out
icebp
jno
dec
cltd
push
sub
insl
push
jl
ljmp
or
cltd
es
lds
in
test
fmull
add
inc
cwtl
jle
ss
add
dec
aas
mov
or
jo
mov
inc
cmp
cmp
pop
popf
jb
mov
dec
lods
add
cmp
xlat
mov
mov
aad
adc
ss
or
aas
dec
loopne
and
out
inc
adc
add
xor
rcr
xchg
mov
scas
or
push
jecxz
jne
fistps
loop
mov
or
jns
mov
add
mov
mov
jnp
xlat
mov
adc
divb
mov
mov
xorl
fldenv
mov
pop
sub
arpl
mov
xor
rol
aaa
popf
xor
mov
icebp
mov
std
imul
pusha
inc
fwait
in
icebp
or
dec
cltd
insb
pushf
hlt
cmpb
jmp
xor
lock
push
cltd
scas
push
imul
stos
enter
sarb
les
cld
ljmp
pop
sub
mov
pop
sbb
add
sub
mov
add
arpl
cwtl
es
aad
pop
leave
add
add
enter
insb
pushf
rolb
add
loopne
inc
sub
mov
dec
inc
cmp
add
pop
loope
test
mov
sub
add
add
jno
stos
add
add
inc
mov
popa
sub
scas
rsm
xchg
jp
es
pop
ljmp
xchg
pusha
and
sahf
inc
cmpsb
ja
pop
jae
movsl
push
xor
adc
notl
fs
jl
add
rcrb
dec
movsl
cmpsb
dec
cmp
push
es
inc
mov
mov
add
ret
cmp
jmp
scas
std
test
mov
dec
dec
dec
punpcklbw
sbb
or
rolb
sahf
lahf
cmp
push
cwtl
sti
stc
lahf
out
fcompl
stos
jp
push
loopne
push
icebp
jmp
push
lret
sub
adc
push
inc
dec
mov
add
add
pop
mov
mov
clc
push
mov
add
add
jae
mov
in
ljmp
iret
imul
ss
clc
pusha
pop
leave
mov
add
xchg
imul
lds
dec
dec
fs
xor
sbbb
mov
lahf
pop
stos
cmp
mov
jge
and
cli
dec
push
nop
adc
sub
testl
add
mov
das
push
pop
movsb
mov
fldt
sbb
push
outsb
jge
cld
mov
xchg
push
push
cwtl
ljmp
xor
mov
sbb
pop
test
pop
jg
test
lret
sldt
add
rclb
adc
popa
out
out
mov
ret
lcall
mov
jge
fmul
lods
push
xor
jnp
fwait
cltd
sti
pop
aaa
jo
imul
mov
adc
sub
mov
mov
cmc
cltd
aad
jmp
pusha
mov
dec
adc
xchg
dec
nop
sbb
cmp
dec
js
mov
pop
mov
outsl
imul
jb
xchg
stc
mov
pop
push
add
add
icebp
dec
je
lsl
add
dec
test
or
ds
cmc
xchg
add
mov
add
add
push
mov
push
pop
jbe
push
lret
ret
adc
dec
das
dec
jge
add
leave
ret
push
fnstsw
xchg
arpl
adc
adc
ja
shrl
xor
test
or
adc
mov
filds
das
mov
sbb
or
pop
push
data16
sbb
jmp
es
mov
mov
cli
jl
cld
lret
mov
xor
mov
stc
aas
loopne
ret
sbb
mov
or
lret
int3
dec
dec
out
dec
pop
xor
imul
sub
fimull
mov
jb
dec
push
ss
stos
add
imul
lret
lret
cltd
incb
aas
inc
mov
mov
leave
add
cmc
testl
or
add
jb
jecxz
call
mov
add
sub
and
mov
push
xchg
add
dec
and
and
cmp
add
add
cld
or
jmp
aam
or
pop
pop
pop
push
add
and
mov
add
lods
sti
and
jbe
shrl
or
aaa
sub
inc
mov
adc
pop
in
add
adcl
sub
pop
sub
fadd
out
push
sub
jmp
shll
mov
xor
scas
adc
add
mov
dec
lds
jl
mov
pop
sahf
mov
ret
sub
add
fcmovu
lock
mov
out
push
and
add
lea
pop
scas
lock
mov
add
sub
or
shl
cmp
cmp
xor
inc
jb
push
pop
shl
scas
je
ja
mov
add
ja
dec
das
fimull
mov
in
cmp
dec
cmc
imul
outsl
loopne
scas
lock
cltd
add
es
push
adc
lds
xor
add
cli
dec
into
push
out
repz
and
sub
lock
lcall
jno
and
mov
push
add
stos
xchg
loopne
cmp
add
fwait
popl
popa
add
scas
add
lret
sti
fisubrl
adc
or
mov
pop
sub
je
stc
xchg
cmp
arpl
out
aaa
scas
lcall
cmpsb
daa
bound
jmp
add
add
loop
mov
rol
in
roll
jo
stc
sahf
mov
add
add
inc
inc
add
dec
sbb
enter
push
push
cmp
add
mov
shrl
jmp
pop
out
shl
das
pop
jg
fdivrl
jp
mov
out
dec
jl
fbstp
mov
cmp
lock
pusha
dec
bound
add
push
mov
xchg
add
das
outsb
add
add
not
add
sub
int
mov
mov
and
ficomps
xor
dec
lods
js
add
and
sbb
jmp
pop
add
xor
push
add
mull
sbb
add
lods
cmp
xchg
cmp
and
adc
add
mov
in
lods
jp
les
out
cs
dec
add
add
shll
fs
add
xchg
jecxz
cmp
dec
push
addr16
movb
add
pop
sbb
add
add
testl
aas
add
test
sub
add
mov
lea
or
or
add
out
les
cmpsb
mov
mov
add
xor
cmovne
add
lods
call
es
jge
fiaddl
cmc
add
rcll
jb
add
shr
lods
sti
movsb
and
sbb
out
arpl
add
add
add
lcall
sub
inc
jns
aad
ficompl
jl
dec
neg
xlat
add
add
sbb
icebp
arpl
mov
or
pop
hlt
xor
inc
add
add
test
push
adc
sbb
add
add
add
iret
lds
lret
negl
jmp
mov
fsubrl
cmp
std
pop
jl
push
fdivrl
push
adc
fsubr
add
ss
pop
adc
add
icebp
add
add
push
adc
std
add
add
sbb
out
add
add
mov
push
mov
out
inc
mov
mov
out
faddl
cmp
inc
cmp
add
jae
in
scas
or
popa
add
sti
push
sbb
iret
daa
test
bound
lret
jmp
in
inc
mov
or
add
cmpsl
mov
mov
xor
xor
ss
sbb
sub
dec
repz
add
add
xchg
subb
scas
add
xchg
aad
ret
aaa
clc
cmp
mov
and
mov
push
inc
push
adc
and
cwtl
insb
xchg
adc
and
xor
cld
pop
pop
dec
shrb
in
fisubrl
ret
iret
cmc
pop
cmp
lret
inc
pop
jae
stc
nop
xchg
std
or
pop
lods
sbb
lods
adc
inc
mov
inc
int3
inc
int3
jge
jmp
jmp
mov
jns
out
repnz
sbb
xchg
sbb
or
dec
dec
das
cmpsl
pop
in
xchg
movsl
in
scas
push
cmpsl
jle
iret
fnstenv
stos
enter
xor
xor
sahf
into
add
jg
push
shlb
sub
pushf
and
adc
das
add
add
and
shrb
ljmp
popf
push
call
mov
xor
in
in
add
add
pop
dec
aas
cmpsl
xchg
jne
inc
iret
sahf
add
jbe
pop
ud0
das
add
inc
and
and
xchg
xchg
bound
ret
movsl
push
cwtl
sbb
ret
add
std
and
test
adc
mov
push
xor
leave
ror
mov
dec
mov
bound
xor
inc
daa
pop
add
push
shrl
push
adc
and
mov
movsb
jae
cld
lds
mov
jne
push
fdivrl
clc
mov
out
xchg
outsb
mov
mov
shl
or
loopne
add
cltd
mov
mov
test
sbb
jle
test
int
nop
aas
mov
sbb
or
lret
add
mov
inc
xchg
dec
mov
dec
daa
jns
and
lcall
into
ffreep
sub
mov
mov
inc
outsb
js
cli
xchg
mov
or
repz
fdivs
adc
and
add
jns
leave
ret
fsts
jg
mov
incb
stos
jno
add
xchg
out
cmc
addb
xchg
pop
std
mov
mov
add
icebp
and
cmp
add
pop
test
cmpb
fsubs
je
xorb
das
mov
dec
add
add
ret
mov
or
pop
aaa
lds
rol
fisttps
data16
mov
push
add
loope
pop
icebp
xor
inc
adc
jbe
test
leave
roll
add
or
adc
insb
cmc
enter
loop
mov
pop
test
jge
jne
add
mov
leave
xor
cltd
mov
fadds
push
add
add
pop
fdivl
adc
int
enter
push
movsb
cmpsl
stc
ds
cmp
cmp
imul
imul
test
push
push
les
and
adc
dec
xchg
add
cmp
or
fldl
mov
pop
adc
mov
push
pop
addr16
or
mov
movsl
cmp
and
pop
xchg
sbb
pop
cmpl
leave
fld
aad
scas
inc
mulb
outsb
out
sahf
test
mov
sub
xor
and
adc
mov
mov
pop
adc
repnz
and
iret
pop
or
sub
pop
xorl
cwtl
fmul
mov
icebp
pop
dec
push
xlat
jle
js
jmp
adc
xchg
jp
rcl
pop
mov
and
add
add
lock
cld
les
and
add
lcall
daa
xlat
xchg
loop
pop
cmp
add
icebp
add
xchg
lock
dec
add
aas
shll
add
cmp
xchg
xchg
sar
jnp
call
shl
push
pop
jne
add
popf
push
mov
add
jo,pn
mov
sub
add
push
ds
add
movsb
not
mov
dec
sbb
rcrb
test
scas
jae
dec
adc
mov
add
cmp
mov
jns
add
add
add
adc
cmp
pop
jne
push
pushf
xlat
popf
mov
mov
push
and
add
sub
sbb
movsl
add
ret
je
sbb
jp
idivb
mov
or
out
nop
add
add
pop
add
pop
xchg
fnstenv
push
loope
dec
push
sbb
or
xor
fisubrs
add
add
mov
lret
push
enter
sbb
adc
inc
dec
out
lcall
arpl
mov
push
test
sub
sahf
sti
dec
and
loopne
add
push
add
mov
mov
mov
add
add
xor
loop
popf
popf
lret
lcall
sub
lods
ffreep
add
add
xor
mov
stos
lods
fildll
std
data16
cs
xor
repnz
add
pshufw
std
aaa
dec
rcrb
repz
sti
lcall
push
jmp
lahf
add
ficomps
or
aaa
lds
cltd
clc
xor
es
call
cmp
mov
mov
ds
popa
push
fisubrl
pop
arpl
or
xchg
push
jp
add
ds
pop
sahf
ret
cmc
mov
sub
and
and
pop
push
inc
xor
inc
or
addb
jecxz
sbb
gs
ljmp
pop
dec
nop
repnz
scas
add
add
enter
mov
cmpsl
mov
mov
cmc
imul
ja
repnz
xchg
inc
xchg
jb
iret
cmpsl
loopne
les
dec
xlat
fstps
add
movsl
cltd
aas
mull
clc
dec
adc
xlat
cmp
pop
push
fs
hlt
add
out
shl
xor
insb
inc
mov
ret
loop
pop
int3
lds
int3
sti
add
out
xorps
add
fsubl
and
stos
rol
out
popf
cmp
push
rolb
mov
loope
push
push
xlat
lods
inc
testb
jp
dec
test
add
int3
addr16
out
rcl
pop
and
int
push
or
lcall
orb
and
add
jl
loop
dec
push
xchg
pop
insb
mov
mov
xor
mov
iret
xchg
xlat
call
shrl
sbb
test
jno
loope
and
xchg
popa
pop
or
stc
lds
es
push
out
mov
je
xchg
jae
mov
xchg
sub
xchg
stos
test
push
rorb
nop
dec
lods
out
arpl
cmp
fistl
inc
inc
mov
lret
dec
mov
sbb
mov
dec
in
test
cli
pushl
je
adc
sub
sahf
jae
aaa
aam
outsb
lods
xchg
out
adcb
add
cs
dec
push
add
inc
test
pusha
and
cli
or
js
les
adc
mov
test
int
lret
xor
mov
in
mov
cld
lock
shrl
xchg
xchg
aas
pop
jge
rolb
xchg
aas
bndldx
push
mov
cld
insl
sahf
sub
pop
rcrb
testb
add
leave
mov
mov
inc
push
inc
enter
dec
or
add
mov
jg
pop
imul
cmp
add
dec
lret
ljmp
cmpsb
mov
pop
loope
push
jbe
mov
mov
xor
out
xor
lret
out
popf
inc
pushf
fidivrs
mov
divl
lret
fnsave
push
add
add
mov
je
mov
call
test
sti
xchg
push
in
fidivrl
push
add
shl
dec
fldt
pop
adc
push
or
xchg
add
std
lods
cli
jecxz
pusha
hlt
jne
xchg
jp
jp
jo
or
sub
dec
mov
add
hlt
cmp
jl
test
outsl
incb
ss
lcall
add
add
out
add
movsb
add
cmpsb
rolb
loopne
add
mov
popf
ret
jno
stos
jae
add
xlat
add
cmp
add
iret
add
or
out
add
in
lds
pop
pop
push
add
push
add
cmpsb
iret
add
sub
xchg
add
lods
sbb
cmp
aad
sub
adc
mov
xchg
cmp
add
inc
adc
add
dec
movsl
add
lods
add
push
inc
add
pop
loopne
mov
pop
push
add
adc
cmp
mov
mov
add
icebp
add
loope
add
les
mov
cmc
ja
mov
mov
push
roll
cmp
lock
pop
pop
add
jle
add
xchg
or
inc
and
in
push
sbb
dec
add
movsb
add
add
out
addb
add
add
add
add
lods
add
add
cmp
push
lcall
add
test
add
fadds
pop
sbb
icebp
fsubs
mov
add
add
pop
mov
add
add
xchg
xchg
lock
cmp
stos
inc
ja
add
add
add
jne
std
repnz
push
or
or
addr16
push
les
mov
dec
add
sbb
lods
jp
lods
mov
mov
adc
mov
mov
repnz
jo
int
lods
out
pop
dec
popa
loopne
jl
test
mov
popf
jp
int3
roll
sahf
mov
jne
aaa
jg
add
rorb
mov
xchg
jo
test
xorl
pop
mov
rorl
xchg
push
ret
jl
aas
dec
xchg
bnd
enter
add
add
test
lock
xchg
jmp
out
mov
xor
iret
sub
adc
pop
fisubl
shl
pop
xchg
sbb
cwtl
out
rol
pop
mov
test
je
adc
and
call
popa
cltd
pop
or
test
sub
cltd
dec
pop
mov
stos
sbb
pop
jecxz
sub
daa
int
fists
xor
push
add
xlat
adc
push
das
loope
xor
addl
mov
xchg
lcall
test
mov
mov
inc
add
inc
jecxz
ljmp
cmp
lret
fldt
rorl
test
xor
addr16
xchg
int
int3
inc
mov
ret
subb
xchg
cwtl
and
rcrl
cmpsb
xchg
push
std
sub
jnp
push
sub
add
loop
call
jg
lods
or
call
fnsave
iret
xor
xchg
xor
in
push
or
push
cmpsl
pop
xor
add
add
add
mov
in
sbb
pusha
into
inc
xchg
sbb
and
call
js
sbb
mov
add
dec
push
mov
lods
push
mov
pop
jmp
sbb
and
lods
mov
jmp
into
sbb
hlt
ficoms
pop
xor
cmovge
mov
scas
xchg
add
sub
loop
mov
or
pop
iret
cmp
movsl
mov
add
add
mov
mov
addr16
push
lret
and
aam
dec
sbb
repnz
xor
dec
sbb
inc
mov
int3
xchg
xchg
outsl
ljmp
mov
rorl
xchg
sbb
daa
aad
inc
cmp
addr16
xor
add
add
into
push
out
cmc
aam
cmp
pushf
sub
add
sub
pop
je
jmp
mov
notl
cmp
fisttps
stos
pop
cmp
add
add
and
into
cmp
out
jmp
orb
int3
pop
in
xor
dec
stos
jo
xchg
add
xchg
inc
call
sbb
sbb
xor
mov
sub
popa
mov
pop
hlt
clc
adc
jno
dec
mov
mov
xchg
sub
push
outsb
add
add
and
in
sub
push
fsubp
mov
push
andl
mov
mov
xor
insl
xor
lods
in
mov
add
add
jns
movsb
pop
cmp
ljmp
rolb
mov
std
or
pushf
pop
sub
jmp
add
add
aam
push
out
mov
fadds
xor
pop
std
mov
dec
mov
or
sub
add
add
je
xchg
jmp
hlt
mov
addr16
ds
sub
add
nop
jmp
xchg
fidivl
cld
xchg
cmpb
mov
push
dec
ja
roll
cwtl
xchg
andl
or
and
pop
inc
mov
mov
clc
jo
out
cli
sub
sub
jmp
xor
fwait
adc
hlt
rcrb
push
outsb
add
push
shrb
xchg
outsl
or
sbb
push
gs
xor
adc
inc
andl
jmp
and
inc
sub
jl
test
out
fs
outsb
add
add
mov
sbb
lret
adc
aad
xlat
xchg
enter
or
jbe
mov
lcall
out
psrld
add
ss
aam
push
in
mov
sarl
push
movsl
or
cld
mov
popa
daa
pop
add
add
out
inc
mov
pop
xchg
mov
loope
sti
xchg
adc
and
push
push
lea
add
add
shll
or
and
sub
dec
cmpsb
in
stos
sbb
jg
loope
and
rolb
add
jp
jns
mov
and
gs
mov
jle
push
add
outsl
shlb
out
orl
addr16
jecxz
add
add
add
roll
add
xchg
add
add
add
add
add
xor
add
add
add
aaa
add
xchg
jecxz
add
add
add
inc
add
xor
add
add
adc
add
add
add
add
add
dec
add
add
add
add
test
add
add
add
add
add
lock
add
add
add
ret
add
fs
add
add
add
add
add
add
add
popa
sti
or
int
mov
add
flds
clc
add
arpl
out
stc
add
mov
add
sub
add
add
clc
ja
and
mov
mov
add
or
add
scas
in
and
push
cld
mov
add
mov
ljmp
pushf
jne
aaa
xor
add
add
scas
cmpsl
sub
sub
fwait
pushf
mov
add
aaa
add
adc
sbb
cmc
pop
or
push
scas
cmp
xchg
sti
fistps
add
dec
jae
fsts
mov
jmp
jmp
inc
xchg
dec
pop
mov
xor
xchg
jnp
enter
add
add
fists
xchg
add
add
add
dec
jg
push
inc
mov
sbb
loope
je
mov
cmp
mov
pop
out
rcrl
push
push
cmp
pop
push
decl
cmp
jne
repnz
test
filds
cltd
imul
leave
cwtl
movsl
loopne
scas
nop
pop
subb
out
inc
add
js
push
cmp
cmc
push
iret
jecxz
dec
ret
xlat
add
pmullw
rclb
lods
fistl
cmpb
int
cmc
mov
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
loopne
push
add
dec
add
add
rolb
dec
add
add
add
add
add
add
add
xor
add
add
add
add
incl
dec
add
add
add
add
int
adc
stos
add
mov
sahf
add
add
add
add
add
cmp
mov
icebp
add
add
add
add
add
add
add
add
add
add
outsb
add
in
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
out
sub
jle
cmc
add
add
add
add
add
add
push
add
add
sti
add
add
clc
add
add
add
add
pop
add
add
add
add
add
add
push
add
add
jne
les
mov
outsb
add
ljmp
add
add
add
add
add
pop
add
add
sbb
jno
aad
adc
pop
jb
xlat
popf
jge
xor
movsb
lcall
imul
test
sub
xchg
outsb
add
mov
test
je
addb
add
add
jmp
imul
inc
adc
fsubrs
mov
push
mov
mov
push
push
xor
jecxz
cmp
pop
and
loopne
push
add
dec
add
add
loop
jge
xchg
add
push
add
add
lods
add
add
add
add
add
add
add
add
iret
add
or
push
add
ret
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
lock
add
add
add
popf
lret
add
cmp
lahf
stos
sub
loop
das
lret
sbb
jno
mov
jmp
pop
xor
mov
mov
dec
inc
inc
out
jno
aad
jg
inc
or
int
rorb
jmp
je
data16
aad
adc
pop
icebp
ret
sahf
jge
xor
movsb
cltd
out
rolb
imul
mov
outsb
pop
sbb
dec
add
add
push
push
cmp
push
cmp
sbb
out
sub
xchg
jnp
std
inc
xor
gs
adc
mov
lcall
dec
mov
std
or
dec
mov
add
add
stos
inc
and
sbb
subb
incl
mov
mov
jge
pop
pop
xor
and
pop
sbb
xor
inc
pushf
sbb
add
add
lahf
mov
mov
pushl
fsts
in
xchg
idivb
cmp
add
outsb
xchg
lret
movsl
mov
sbb
xchg
out
int
and
out
pushf
inc
adc
scas
movsb
outsl
and
inc
sbb
dec
cmpsl
push
pusha
mov
mov
mov
shll
lods
xchg
sar
mov
mov
cmp
and
jp
push
push
push
js
adc
push
sbb
sahf
movsl
sub
in
pop
addr16
out
sub
test
jns
js
cli
inc
xor
pop
loop
adc
pop
pop
std
fwait
cmp
dec
mov
or
dec
mov
pop
sub
cwtl
je
mov
push
push
push
add
cld
xorl
ds
dec
lret
jl
push
pop
xor
and
pop
add
xor
xor
inc
fwait
sbb
enter
dec
or
mov
pop
adc
rclb
jne
mov
xchg
clc
pop
out
js
push
dec
mov
jno
popf
stc
jmp
jns
dec
cmp
leave
fildll
ret
xchg
dec
scas
jmp
les
into
mov
mov
in
lret
mov
out
aam
lock
sub
or
inc
mov
add
adc
ss
test
ret
push
clc
cmp
rcl
imul
arpl
mov
jp
test
add
pop
or
jns
mov
adcl
sbb
int
xchg
das
adc
lret
or
lods
fadds
adc
cmpsl
fwait
or
stos
dec
jae
mov
jne
orl
jl
negb
mov
jp
insl
pushf
push
insb
inc
jnp
les
pusha
insl
jge
into
and
or
out
mov
loopne
push
cmp
adc
mov
orb
arpl
jp
or
xchg
sub
divb
rcrb
dec
dec
cmp
push
lret
fldcw
shr
lret
lods
stc
pusha
or
or
lea
sti
cmpsl
leave
mov
jmp
subb
or
inc
pushf
or
inc
mov
sub
dec
jb
aaa
add
stos
sub
movsb
push
stc
ss
rcl
ljmp
dec
push
cwtl
and
add
add
fnstcw
mov
dec
add
xor
ds
add
aam
add
add
stos
push
add
in
add
movsl
jp
mov
add
add
jns
fsts
dec
add
add
ljmp
enter
push
add
cmp
fwait
add
add
mov
add
clc
test
lcall
add
and
add
mov
dec
pop
add
add
xchg
loope
xor
add
jno
shll
jle
xchg
add
flds
imul
or
stos
cltd
xchg
add
cld
mov
add
inc
add
and
push
add
add
push
sbb
add
mov
add
add
cmp
cmp
add
in
mov
xor
or
adcb
add
hlt
or
push
les
add
scas
popf
add
jle
sub
push
add
xchg
add
push
xchg
stos
mov
lcall
add
add
aas
loop
lods
in
push
out
fs
or
enter
lds
lock
pop
adc
ja
add
add
add
add
add
mov
push
mov
add
lods
add
pushf
inc
add
add
add
je
dec
add
add
jg
stos
enter
add
inc
jp
jp
sub
std
add
aam
fildll
jl
add
push
cmp
xchg
dec
mov
add
add
add
fiaddl
add
add
sub
lods
add
add
jno
aad
add
add
adc
or
add
add
add
les
add
add
add
add
stos
lds
add
add
test
mov
pop
sarb
lds
add
add
outsl
ja
xabort
inc
add
add
mov
add
add
adc
add
mov
jo
std
or
add
add
push
xchg
add
aad
add
add
mov
mov
add
in
lret
add
std
xor
add
add
es
push
pop
add
add
leave
leave
jg
add
add
mov
add
add
imul
add
add
incl
add
add
add
add
add
mov
mov
add
xchg
add
add
add
xlat
mov
rcll
add
xor
imulb
test
add
add
add
mov
fwait
add
add
mov
sub
add
add
jmp
movsl
or
add
add
add
add
push
iret
add
add
jno
sbb
add
add
or
and
test
sub
add
add
inc
stos
iret
testb
add
test
xor
add
add
xlat
aam
add
add
fisubrl
add
add
add
loop
mov
add
add
pusha
inc
fwait
add
add
insb
inc
out
add
add
outsb
out
add
add
add
addr16
add
add
mov
adc
add
mov
add
cwtl
mull
add
es
add
add
mov
mov
add
loopne
add
add
shr
mov
add
add
test
add
add
inc
sbb
push
les
add
add
sarb
add
add
add
add
mov
adc
add
add
push
cmp
mov
add
add
add
add
das
add
add
sub
lods
add
add
push
arpl
add
add
test
cmpsb
xlat
add
add
cmpsl
sahf
sbb
add
add
insl
aad
dec
add
add
mov
add
add
add
add
add
add
sldt
add
jno
or
add
ja
mov
adc
cs
add
jl
add
sub
add
ret
add
inc
lahf
outsl
add
cmp
add
loop
add
mov
add
rolb
test
ret
jg
add
daa
lcall
xchg
push
add
pop
enter
mov
shr
inc
add
jae
add
cmp
mov
add
sbb
add
jmp
add
sbb
adc
cmp
add
repnz
movb
aam
add
or
aas
data16
add
fiadds
inc
roll
insw
imul
inc
clc
movsl
add
mov
incl
outsb
add
jge
add
xchg
add
sub
inc
sbb
add
cltd
add
mov
add
mov
add
int3
sti
add
push
mov
xchg
mov
add
testb
add
add
push
jo
call
xchg
pop
fisubrs
popa
add
repnz
cs
mov
sub
push
sbb
iret
cmp
in
cmp
insl
lar
fcompp
push
lret
mov
add
push
jge
test
fsts
movsl
cmp
bound
add
mov
add
xor
mov
fmuls
and
add
inc
ret
pop
lcall
add
fsub
fiadds
xor
xor
jmp
fwait
mov
jge
sub
add
jno
mov
xor
jl
pop
jecxz
insl
movsb
inc
es
lea
insl
add
add
lods
xor
cmpsb
mov
pop
iret
xor
movsb
fdivrl
lods
sbb
cmp
aas
rcrb
sti
in
inc
dec
jno
fildll
outsl
sub
shlb
fistl
rcrb
inc
add
inc
aam
shll
mov
enter
repnz
add
push
adc
mov
dec
xchg
mov
add
aam
push
inc
xorb
stos
test
mov
jecxz
mov
loop
es
inc
xor
lea
add
inc
sub
aad
jge
shll
add
add
orl
pop
pop
data16
add
add
and
outsl
ud1
iret
add
xchg
inc
inc
test
fimuls
mov
mov
inc
in
test
mov
push
ja
and
add
std
mov
addr16
push
mov
aaa
inc
and
push
shlb
adc
pushf
mov
imul
jns
push
cmpsl
cs
movsb
mov
adc
scas
xchg
in
incl
add
cmpsb
mov
cmp
xor
dec
stos
ljmp
add
lcall
push
neg
insl
dec
add
cmc
mov
cli
cwtl
in
sbb
dec
and
mov
test
stos
enter
scas
inc
cmc
ret
test
mov
test
cmp
lcall
daa
enter
aas
and
mov
xchg
add
ja
pop
stc
stos
mov
roll
jge
xor
loope
negb
leave
in
dec
xchg
adcl
jnp
mov
ficoml
add
push
jp
data16
test
fildll
push
add
mov
nop
lock
adc
dec
cmpsb
dec
mov
adc
pushf
test
js
in
repnz
sub
lods
mov
mov
lods
add
pop
adc
pop
sarb
test
xchg
adc
inc
adc
or
push
popa
stos
xor
call
loope
sbb
mov
or
add
loope
inc
pusha
out
ja
jecxz
add
or
lret
iret
add
cwtl
icebp
sbb
fisttps
leave
mov
mov
or
out
xchg
jno
add
je
mov
pop
lea
stos
cmp
sub
push
push
divb
roll
pop
sti
sub
mov
mov
xor
push
mov
pop
ss
jle
out
dec
xchg
lret
mov
push
out
add
sub
mov
jae
sub
xchg
mov
scas
add
addr16
xchg
pop
push
xchg
rorb
add
mov
repz
inc
dec
stos
jo
ret
or
push
scas
movsb
pop
jnp
jmp
lods
cmp
add
mov
and
cmp
pop
dec
and
add
add
mov
jl
add
dec
ds
inc
popa
xchg
subl
add
in
nop
ror
stos
scas
xchg
add
inc
adc
inc
mov
mov
add
add
add
add
add
mov
add
add
add
cs
add
insb
add
lock
loopne
add
sbb
add
outsb
add
add
aaa
sub
add
ja
add
add
or
add
add
xor
add
add
add
popf
add
ret
adc
sub
add
xchg
outsl
std
add
imul
add
add
das
push
add
add
add
add
fcomps
add
add
add
add
aad
push
add
add
add
add
add
add
add
and
add
add
add
pop
add
add
add
mov
add
in
add
xor
add
cltd
add
add
stos
dec
pusha
mov
add
add
ss
lds
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
cli
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
dec
add
add
add
add
add
add
add
add
add
add
add
fiadds
add
fwait
add
add
add
roll
add
jb
add
stc
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pushf
add
add
add
arpl
add
ret
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
mov
add
jnp
add
lods
add
add
add
mov
add
add
add
add
lds
add
add
incl
add
lret
add
add
fldl
icebp
xorb
cmp
add
mov
add
add
add
pop
dec
add
int
add
les
add
cmp
adc
les
or
cli
mov
lods
add
add
add
lret
xor
ret
stc
lea
arpl
xchg
xlat
ja
add
push
repnz
fcomps
push
fldenv
xlat
jns
aaa
dec
test
ljmp
add
add
repz
scas
sbbl
mov
jnp
mov
mov
cmp
sub
scas
sub
inc
sub
mov
shrb
aam
sub
add
add
add
xor
into
push
mov
and
sbb
mov
xlat
add
add
add
orl
test
xchg
bnd
dec
sub
add
add
mov
or
js
pop
cmp
cltd
push
sbb
add
pop
mov
jg
das
jle
add
adc
add
add
add
test
add
add
add
add
add
add
push
pop
jl
add
add
test
add
add
add
xor
inc
jl
add
add
add
add
add
add
add
add
add
fnstsw
repnz
add
xor
add
add
add
jnp
add
add
add
mov
cmp
jecxz
in
add
add
add
std
mov
add
add
arpl
add
xor
mov
add
xor
jne
xchg
outsb
cmp
push
add
push
cmpsl
sub
add
add
push
fsub
add
add
add
add
add
add
add
add
add
xor
add
add
add
roll
repz
add
ljmp
add
add
add
add
cwtl
or
stos
jo
add
push
addl
or
add
add
rcr
int3
add
js
add
xor
push
jecxz
lods
outsb
push
add
add
cmpsb
xlat
mov
mov
add
add
add
sbb
adc
add
lea
add
mov
add
dec
or
jne
int
add
and
mov
je
add
mov
add
push
add
add
sub
arpl
cltd
add
xchg
roll
std
cltd
add
fdivl
fsub
stc
add
mov
add
loopne
add
les
add
test
add
lea
push
pusha
dec
add
addr16
add
xlat
pop
add
jge
hlt
xchg
sti
mov
shll
add
test
rolb
add
lret
hlt
add
add
add
add
add
add
push
incb
icebp
in
dec
add
js
add
les
mov
inc
add
mov
add
inc
stc
add
dec
cld
add
sbb
xchg
out
add
add
add
add
add
add
add
cs
and
add
test
add
xchg
sub
add
add
stos
adc
add
movsl
dec
add
testb
in
adc
enter
sbb
add
add
add
dec
mov
ljmp
add
jp
add
mov
add
add
add
add
add
popf
add
cmc
call
add
fistps
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
inc
jbe
add
pusha
fdivs
cmpl
loopne
mov
add
add
mov
dec
aas
push
inc
pop
in
jno
out
jnp
push
sub
mov
fmul
fdivrs
movsl
mov
mov
cmp
loop
pop
fucomp
outsl
lds
mov
arpl
and
out
mov
insb
fcmovnb
add
mov
cmp
not
dec
pop
pop
data16
sahf
aad
pop
cmp
ljmp
ret
bound
inc
push
inc
imul
mov
dec
hlt
sbb
jbe
jmp
mov
out
aad
rorl
inc
push
out
ja
popa
les
dec
push
pop
sahf
xlat
in
shl
je
aaa
pop
mov
or
add
fucom
mov
jo
imul
mov
jns
sub
jl
cmp
push
add
mov
aad
pop
pop
filds
push
clc
lds
mov
adc
cmpsb
dec
mov
jmp
aad
sarb
daa
pop
loopne
cmp
negl
cmp
jmp
sbb
mov
ljmp
and
fnstenv
cmpsb
mov
mov
cmp
insb
les
mov
pusha
test
ss
and
inc
insl
fadd
add
and
scas
cwtl
xchg
loope
and
sub
pop
adc
xor
mov
mov
jb
leave
scas
repz
jecxz
mov
lods
cltd
dec
aam
push
inc
push
psubsb
lret
outsb
cmp
inc
inc
dec
jae
addr16
sbb
xchg
mov
and
xchg
test
stc
insb
es
cs
ja
push
das
pop
scas
scas
jne
mov
jb
jne
jp
or
mov
lcall
push
push
mov
shll
pop
rorl
adc
pop
movsb
push
cli
fldt
mov
adc
mov
shll
int
xchg
fdivrl
and
arpl
mov
dec
stos
andl
mov
push
lods
test
fisttpl
js
or
fcmovnb
xlat
jo
mov
inc
mov
sub
sbb
fwait
dec
sbb
xchg
daa
sub
mov
imul
adc
adc
incb
xor
or
das
or
adc
or
xchg
data16
lds
lods
sbb
push
hlt
nop
lock
pop
movsb
pop
xchg
dec
into
outsb
gs
pop
xlat
inc
sahf
or
dec
fs
or
jbe
lretw
xchg
xor
ljmp
mov
es
inc
adc
pop
xor
mov
pop
gs
pusha
mov
inc
xchg
adc
jmp
in
test
cmp
mov
mov
and
or
or
std
sar
aam
stos
dec
insb
fdivrs
not
jo
notl
and
jb
pop
dec
int3
mov
or
repnz
pop
mov
iret
divl
jecxz
jg
cmp
imull
cmpsl
mov
leave
ficompl
xor
xor
inc
mov
test
jo
mov
fcomps
daa
movsb
xor
dec
sub
cmp
js
nop
int3
into
enter
pop
sub
mov
xor
pop
nop
rcrb
insl
in
mov
mov
cmpb
xor
pop
adcl
and
push
outsl
incl
jge
hlt
int3
xchg
movb
inc
in
int3
pop
mov
add
mov
addr16
push
mov
pop
maskmovq
scas
stc
push
or
sub
mov
inc
sbb
jb
dec
or
xchg
mov
mov
push
sub
loop
pop
dec
stc
shl
fisttpl
inc
push
aam
mov
aam
add
jb
inc
push
int3
jl
sbb
test
add
push
repz
imul
dec
inc
ljmp
std
sarb
pop
leave
fnstcw
aaa
std
dec
dec
gs
sub
movsb
jae
jmp
nop
add
sti
nop
je
es
mov
es
push
int
arpl
les
insb
mov
cmp
lret
shr
call
notl
pop
insb
data16
iret
fldl
dec
push
daa
jb
jo
cmc
push
lret
jnp
jbe
cltd
insl
les
push
inc
mov
add
ds
repz
xchg
cld
mov
inc
lods
jmp
imul
mov
and
add
cmp
ljmp
leave
and
add
pop
dec
clc
add
repz
rorl
lds
idivb
pop
clc
loopne
or
push
jns
cmp
fists
js
mov
lock
data16
or
js
push
inc
push
fsts
ret
cmp
pop
or
cld
leave
je
cmp
dec
movsl
jb
loopne
mov
scas
lahf
addr16
cli
out
scas
iret
add
xorb
lret
imul
pop
sub
stc
movsl
xor
pop
xchg
fstps
push
in
sarl
lea
jns
das
enter
ljmp
imul
pop
stos
jl
test
inc
inc
out
sti
roll
xlat
into
insb
cltd
add
mov
jl
mov
mov
lods
push
push
push
or
mov
jecxz
and
push
push
int3
xchg
clc
mov
mov
dec
xor
jecxz
pop
dec
clc
test
repz
dec
popa
fldl
lret
out
repz
fidivrs
add
imul
movsl
sbb
filds
cmp
lret
mov
adc
dec
inc
icebp
xor
test
inc
pop
pop
mov
cmp
rcrl
push
scas
leave
push
xchg
addr16
in
pop
into
pushl
xchg
cmc
add
and
iret
loopne
hlt
inc
xor
mov
aas
push
popf
fcoml
mov
mov
stos
cmp
jb
je
dec
pop
xchg
jmp
cmc
imul
adc
std
stc
ret
sbb
into
add
push
cli
js
sarl
inc
gs
inc
push
add
push
add
sub
dec
adc
pop
nop
cs
lahf
cli
add
mov
xor
rclb
cwtl
jb
xor
cmc
xor
mov
push
inc
je
fdiv
pop
add
nop
std
push
out
stos
shl
mov
pushf
fwait
jl
mov
push
sarb
sub
jmp
std
adc
mov
jge
cmp
cld
fisubrs
punpckhdq
inc
in
pop
mov
sti
ret
shrl
pop
or
cmp
sub
mov
mov
mov
xchg
bound
pop
xor
mov
int3
xor
jns
pushf
xlat
adc
call
ficoml
mov
jne
mov
enter
mov
jo
int
mov
out
pop
jno
sbb
sbb
sub
mov
pop
pop
push
cld
inc
mov
test
add
test
cli
into
inc
adc
mov
sti
fbstp
push
pop
xchg
and
dec
push
push
add
pop
ss
lock
out
divl
fwait
scas
push
ds
aaa
in
jmp
inc
fstpt
inc
movsl
shll
mov
pop
lcall
outsl
pop
dec
push
sbb
pop
test
mov
jl
adc
cli
cli
mov
pusha
nop
imul
in
ss
ljmp
mov
inc
mov
pop
cwtl
xor
mov
pop
mov
cltd
or
loop
sbb
iret
ret
inc
jb
testl
out
lret
push
repz
lcall
mov
xchg
movsb
push
cmpsl
popa
cs
push
jno
and
int3
dec
push
je
pop
sbb
sub
dec
mov
out
xor
sbb
adc
mov
inc
sbb
inc
bound
lret
movsb
sahf
xchg
loopne
push
push
add
lcall
sbb
fsts
pop
pop
mov
sbb
push
sub
adc
push
mov
ret
jbe
scas
test
and
arpl
outsb
adc
adc
add
fisttpll
cmpsl
mov
adc
mov
repnz
mov
std
call
imul
inc
repnz
pop
xchg
data16
cmp
imul
fxch
xor
xchg
aam
jbe
repz
xor
mov
xchg
iret
mov
lods
out
dec
inc
pop
sbb
pusha
mov
jne
push
outsl
jnp
ret
mov
xor
push
push
es
jmp
loop
test
sbb
lock
sub
aaa
inc
jge
jne
rol
dec
push
mov
jo
mov
rcr
jmp
pop
pop
push
push
cwtl
and
dec
fs
inc
mov
xlat
mov
popa
cmc
lods
xor
mov
push
aas
movsb
cmp
call
mov
xchg
je
into
dec
mov
loope
andl
adc
inc
adc
mov
neg
jae
stc
pushf
jge
sbb
mov
jge
push
or
movsl
aaa
cmpl
dec
pop
lahf
add
sbb
and
jae
lcall
in
repnz
xor
add
repz
jnp
push
test
mov
clc
dec
cmp
mov
push
cwtl
xor
push
pop
shr
xchg
push
sahf
mov
js
sub
sub
gs
and
cmp
es
lret
adc
jge
hlt
fcoml
pop
hlt
repnz
mov
xor
addr16
dec
pop
leave
arpl
push
xchg
dec
or
mov
sbb
xchg
fcomps
incb
jno
push
jno
mov
popf
stc
scas
sub
pop
cmpsb
into
daa
inc
cs
daa
imul
pop
out
jl
fsub
repnz
test
adc
xlat
inc
pop
rorl
cmpsl
imul
cmpsl
jle
mov
je
pop
jp
mov
js
arpl
jg
xor
ret
xlat
mov
dec
add
fiadds
es
fstps
push
inc
mov
mov
pusha
lcall
in
mov
shrb
loope
ljmp
lods
ficompl
enter
daa
push
int3
fadds
inc
sbb
and
ljmp
pusha
out
push
daa
jae
mov
xchg
dec
fstps
repz
mov
or
dec
stc
int3
mov
fs
insl
pushf
xchg
push
ljmp
jecxz
sti
push
xchg
fsubrs
mov
sbb
clc
cmpsl
out
jle
xchg
repz
das
sti
mov
cmovnp
int3
and
ret
mov
cwtl
jns
cld
dec
cmpsl
fucom
hlt
rorb
jle
sub
push
fnstenv
aaa
push
cmpsb
push
lock
mov
fdivrl
jl
sti
mov
jae
cmp
and
call
xchg
dec
sbb
roll
cmp
pop
pop
cmpsb
mov
fwait
jno
and
adc
dec
cli
mov
popa
sbb
rol
ja
fidivs
ds
test
je
data16
mov
aaa
adc
adc
sbb
in
sub
xor
sbb
test
lds
push
fdecstp
out
imul
xchg
push
mov
push
pop
xchg
sahf
sbb
jnp
repnz
ret
mov
lcall
dec
in
add
pop
xlat
mov
ss
ss
dec
cmp
aam
push
add
and
push
in
mov
lcall
imul
cmpsb
je
xchg
mov
dec
sbbl
fiadds
jne
ja
imul
mov
andb
clc
rclb
out
add
cmp
xor
lea
mov
xor
adc
outsb
in
mov
in
dec
leave
add
jbe
sbb
jmp
call
addr16
cmpsl
andb
ficoms
int
outsl
jmp
jae
aaa
add
and
mov
sub
pop
or
adc
mov
shrb
push
dec
xchg
es
sti
jp
cmp
push
hlt
mov
jbe
push
lahf
mov
adc
movsl
push
mov
ljmp
imul
aas
cwtl
jecxz
add
mull
nop
pop
stos
add
push
jbe
iret
mov
mul
arpl
mov
jmp
mov
enter
fidivl
adcb
fisubl
fstpt
out
sahf
jge
or
in
and
mov
pop
push
dec
fsub
mov
add
pop
sbb
icebp
xor
mov
cmp
jb
push
mov
pop
std
loope
sahf
jb
and
mov
pop
leave
xchg
imul
dec
in
inc
lods
mov
jmp
jle
jno
subb
movsb
push
icebp
fldcw
lock
aaa
sbb
jl
push
add
es
xor
and
mov
push
dec
cld
negl
sar
fnstcw
in
inc
cmp
dec
xorl
pushf
jl
bound
dec
pop
ja
add
sbb
lods
push
mov
cmpsb
ljmp
inc
cmp
fldt
xchg
jle
or
shlb
ljmp
mov
push
in
fcmovnbe
loopne
mov
scas
push
push
adc
mov
aad
push
fildl
ss
clc
mov
fwait
add
pusha
fadd
push
mov
leave
std
mov
mov
mov
add
test
inc
cmp
inc
lcall
out
mov
bound
push
rcl
in
out
mov
movsl
jl
bound
fistl
mov
jle
ss
and
dec
xchg
and
dec
dec
pop
out
add
mov
xlat
mov
lea
in
xchg
fdecstp
jge
es
jno
mov
sahf
jg
xchg
add
or
sbb
pop
out
push
lds
lods
fisubrl
adc
scas
sbb
fsubrs
aaa
push
cmpsl
xor
aas
out
shrb
fidivl
mov
fdivp
imul
scas
cli
test
push
popa
push
fstps
scas
addr16
not
mov
push
jne
movsl
sar
xor
jns
imul
andb
xchg
in
insb
and
pop
add
add
pusha
pop
dec
bound
in
dec
or
xchg
mov
ret
into
fdivs
mov
rorb
out
jno
jno
mov
stos
pop
outsb
pop
pop
aad
xchg
shrb
repnz
or
outsb
sahf
das
pop
cmp
pop
pop
xor
dec
mov
xorb
in
sbb
lock
jle
adc
outsb
pop
mov
adc
jge
mov
push
fnstcw
push
insl
lock
ror
lret
dec
pop
sbb
sbb
or
or
mov
fucom
lds
cli
dec
mov
loop
notl
enter
arpl
push
and
repnz
jge
lds
sbbl
out
fcmovbe
add
push
fdivr
mov
test
idiv
mov
jecxz
popa
push
add
les
gs
push
pop
repz
sbb
dec
cmp
dec
mov
out
imull
insb
es
dec
fcmovb
jno
in
repnz
mov
test
add
iret
cmp
in
or
dec
ret
sub
movsl
fidivrs
cmp
inc
sub
adc
outsl
ret
cmc
out
dec
push
push
push
mov
addl
dec
xchg
add
pop
outsl
lcall
in
mov
aam
mov
sti
mov
jo
or
int3
js
jne
mov
and
jo
xor
adc
bound
test
push
jno
call
dec
stos
loopne
loopne
mov
bound
adc
and
add
lret
out
jbe
push
push
out
clc
nop
push
xor
movsl
jl
or
xchg
mov
leave
jmp
fldl
sbb
lret
addr16
movsb
mov
inc
add
push
ljmp
xor
fiaddl
fsubl
jo
sbb
inc
aam
or
fisubrs
stos
cs
jge
dec
xchg
in
mov
adc
loop
mov
pop
shrb
jbe
xor
and
loopne
add
cmpsl
stos
dec
and
mov
in
bound
rcll
jmp
ja
mov
inc
rcll
xchg
imul
add
dec
out
inc
in
mov
push
jno
outsb
test
cmc
or
push
pusha
ret
lods
aam
lock
push
xchg
insb
lahf
xor
ja
pusha
leave
cmp
addr16
lods
out
fiadds
sti
push
out
lock
cmpsl
movsb
ret
popf
dec
dec
stos
adc
hlt
mov
or
jno
in
lcall
dec
loop
bnd
cmpsb
cmp
aad
cmp
push
mov
xor
inc
out
insb
pop
rcll
cs
mov
mov
sbb
or
push
jecxz
ss
lcall
ret
in
and
cmp
mov
out
ljmp
popf
in
ja
insb
sbb
add
xchg
sbb
shlb
nop
lds
add
rol
cmp
mulb
sub
cmp
call
bound
es
push
mov
xor
and
scas
dec
mov
sub
adcb
push
mov
in
push
aas
mov
lods
add
scas
das
cmpsb
ja
push
mov
ss
in
mov
outsl
dec
adc
loope
mov
cmp
inc
add
leave
mov
shl
jno
bound
pop
mov
call
push
fwait
or
test
loope
test
xor
call
pop
mov
jae
into
xchg
adcl
mov
inc
adc
in
pop
or
mov
xor
mov
or
inc
cmc
dec
ds
xchg
out
out
jecxz
loope
push
hlt
gs
mov
nop
andl
xor
adc
sbb
cwtl
jno
xor
stc
sahf
mov
outsb
fiadds
out
add
cmp
add
jg
adc
das
mov
mov
jae
into
ljmp
cmp
xchg
outsl
add
fcoms
inc
xchg
pop
xchg
addr16
push
adc
inc
add
je
scas
sbb
sti
pop
popf
ret
dec
dec
sub
xchg
es
fwait
bound
mov
and
jae
out
outsb
subl
jp
mov
cli
xor
pop
adc
mov
dec
das
add
or
jb
test
stos
scas
sub
jo
loope
sti
dec
scas
pop
inc
cmp
ja
mov
xor
icebp
divl
dec
adc
or
scas
push
dec
popf
and
inc
cmp
mov
enter
mov
popa
gs
pop
out
jno
adc
outsb
addr16
mov
je
ss
lret
lret
mov
iret
out
divb
in
popf
cmp
das
or
setge
adc
loop
outsl
cmp
fbstp
and
out
pusha
mov
mov
outsl
lahf
insb
inc
loope
pop
imul
cmpsl
jno
mov
cmpsb
lret
leave
lods
out
jae
mov
lcall
xorl
ret
xor
aam
clc
jbe
jb
insb
inc
cmpsl
and
mov
sub
pop
sub
cmpsb
cmp
jge
cli
lds
lock
dec
push
sbb
jb
out
xchg
sub
dec
push
push
fs
jae
adc
sub
jecxz
clc
andl
sub
scas
mov
in
inc
xor
bswap
dec
out
repnz
pop
std
push
insb
aaa
pop
adc
shlb
lods
rclb
leave
cmc
jo
dec
mov
fnstsw
shll
pop
test
sub
and
and
cmp
xchg
sub
mov
insl
lret
lods
ss
xchg
gs
mov
xchg
add
add
mov
lahf
popa
lcall
mov
stos
fwait
mov
xchg
jb
and
testb
xchg
and
rcrb
pushf
push
or
outsb
fildll
notb
cmpsl
xchg
in
mov
in
mov
mov
and
pop
xor
int3
pop
cmpl
insb
add
popa
in
test
fldt
mov
mov
jo
iret
sbb
xchg
and
ljmp
mov
push
push
mov
sub
shrb
insb
test
dec
mov
int
out
cmp
adcb
dec
in
aad
cmc
add
bound
shl
clc
cmp
les
rclb
pop
jns
jns
cmc
add
cmp
mov
lods
movsb
lods
int3
xchg
and
mov
jmp
xchg
sbb
xcrypt-cfb
cmpsl
and
and
movsb
stos
push
out
shll
shl
xchg
cmc
in
pop
push
and
arpl
inc
jl
sbb
out
data16
inc
call
loope
push
pop
test
out
scas
aad
inc
sbb
mov
lock
fistpll
les
jo
cmc
es
mov
lcall
dec
je
cmpsb
or
fisubl
in
lret
je
filds
out
rcl
xchg
std
jb
pop
lods
cs
mov
jge
fsubrl
or
repz
adc
stos
ds
or
pop
andl
push
leave
dec
cmp
jmp
cltd
imul
pusha
inc
pop
pop
mov
ret
bswap
in
movsl
fimuls
fisubl
test
lods
aam
xchg
out
or
out
test
jne
push
lds
or
mov
mov
sti
ljmp
and
mov
sub
cmc
arpl
gs
lcall
add
push
call
in
adc
mov
xchg
imul
jnp
pop
mov
ret
cmp
fisttpl
mov
cmp
je
rol
sub
dec
mov
cmp
pop
mov
xchg
adc
test
mov
fsub
pushf
mov
or
shrb
pop
fldcw
sbb
addb
pop
or
jg
inc
adc
loopne
cmpsl
or
and
adc
jecxz
mov
dec
mov
inc
shl
cwtl
call
inc
cmp
in
cmc
out
iret
aaa
pop
test
pop
lret
and
cmpsl
cld
xchg
ljmp
sub
mov
mov
or
icebp
cli
pop
fadds
jp
xchg
mov
lret
add
stos
add
pop
xor
popa
hlt
adc
add
xor
loop
ret
inc
add
add
add
sti
mov
aam
add
add
add
icebp
xlat
inc
fstpl
add
leave
popf
sahf
call
add
add
sarl
cmpsl
add
jp
add
sti
fstpt
insl
fxam
shufps
fisttpll
into
roll
and
pop
mov
xchg
pop
add
shlb
lea
adc
jmp
lret
fnstcw
popf
xchg
outsb
add
jno
add
sbb
icebp
pop
xor
mov
push
jne
sub
arpl
sub
lock
sahf
sbb
cmpsl
or
add
out
loopne
add
add
std
pushf
sbb
mov
sbb
dec
add
xchg
add
sbb
dec
sub
mov
xchg
not
jmp
add
add
push
push
add
add
arpl
sub
and
fbstp
add
push
add
jmp
pop
cmp
je
hlt
add
sbb
arpl
sbb
xchg
dec
mov
lea
and
jmp
iret
mov
jno
rorb
mov
pop
frstor
push
pop
lods
sbb
in
das
push
jne
shl
cli
pop
push
jne
mov
rorb
dec
sti
mov
mov
xchg
or
test
pop
cmpl
push
outsl
inc
mov
rcll
pop
pop
repz
pop
jne
mov
jne
push
out
clc
roll
pop
clc
fwait
pusha
mov
ret
fcoms
add
imul
xchg
imul
vphsubdq
repnz
sub
jb
or
dec
dec
adc
mov
ljmp
test
aam
pop
cmp
pop
jne
xchg
mov
jne
add
rorb
fsubrl
dec
add
inc
or
xchg
add
pushf
cltd
repnz
jbe
push
pop
mov
pop
xchg
out
mov
cli
fsubrs
xchg
mov
pop
fdiv
shll
in
pop
pop
mov
mov
rolb
fcoml
cld
dec
inc
push
lret
js
sbb
dec
inc
push
pop
test
dec
inc
add
pop
pop
test
cwtl
jne
push
mov
les
fisttpll
cwtl
inc
adc
pop
adc
fisubs
clc
fisttpl
cmp
cmp
call
jne
sub
jne
lret
pusha
pop
jl
mov
jno
cld
xchg
xchg
fisubrs
bound
pushf
fldenvs
stos
call
dec
iret
adc
packsswb
leave
shrb
pop
pop
test
pop
jne
stc
pop
add
pop
fbstp
push
jne
cmp
jle
xor
cmc
cmpl
sub
cmp
jne
inc
pop
add
das
insl
stos
xchg
and
push
fldl
push
pop
stos
mov
dec
jl
mov
xchg
dec
push
adc
xor
sbbl
add
add
roll
pop
jne
cmp
pop
clc
add
pop
inc
jno
pop
pop
cli
xchg
push
fadd
rolb
pop
pop
adc
jne
inc
pop
shr
loopne
cmc
cmpsl
jne
ja
push
add
push
push
jne
mov
sub
enter
mov
shlb
mov
out
cmp
push
stos
add
push
inc
mov
push
pop
imul
call
movl
fimull
outsb
push
inc
push
roll
pop
aaa
mov
in
into
add
jns
xor
sahf
push
jne
pop
nop
mov
out
ljmp
mov
pop
xor
adc
insb
pop
xchg
mov
xchg
jp
adc
push
loope
ss
sbb
or
fstl
lock
es
xchg
push
daa
dec
js
mov
xchg
mov
mov
mov
push
adc
fmull
mov
sbb
jne
ss
stos
outsb
arpl
sub
enter
pusha
pop
xor
fwait
mov
xchg
lods
rcrl
inc
or
mov
mov
jg
loop
cli
xchg
orl
pop
mov
mov
jmp
decb
in
inc
xor
cmp
gs
mov
mov
jecxz
pusha
cmp
out
cmc
cwtl
pop
lcall
mov
sub
adc
inc
fisttpll
adc
movsb
pop
fldl
test
pop
dec
add
scas
imul
inc
pusha
dec
adc
adc
fwait
gs
divl
adc
aam
lea
jg
mov
fiaddl
sub
mov
repz
leave
xor
sub
mov
lock
loop
xor
dec
fcmovbe
add
xor
and
mov
imul
jno
imul
setg
cmp
adc
test
or
mov
bound
push
mov
sbb
test
mov
push
xor
pop
cmp
add
stos
mov
dec
mov
inc
sbb
notl
je
lahf
fadd
push
in
scas
daa
in
lods
stos
fldenv
sbb
into
dec
jl
mov
cmp
in
or
cs
dec
mov
fstp
test
sarb
xchg
mov
push
rdmsr
or
add
or
lds
ds
and
mov
cmpsb
mov
push
mov
mov
mov
mov
fildl
jbe
ret
sbb
daa
adc
cmc
jmp
xchg
loopne
xchg
stos
mov
mov
cmp
movsb
aam
fdivr
lea
mov
cs
sub
pop
repnz
clc
cmc
sbb
jbe
ret
dec
lret
decb
pop
and
in
into
push
pop
xchg
sbb
jge
add
insb
inc
mul
adc
loopne
out
out
pop
mov
mov
sbbb
lret
jmp
sbb
insb
cmp
pop
xchg
cmp
lods
call
jo
mov
adc
leave
xor
cmpsb
mov
add
lcall
neg
mov
mov
push
xor
pop
enter
xchg
or
mov
daa
insb
or
es
adc
pop
movsb
out
out
lahf
ja
mov
push
xor
xor
sbb
xchg
sti
mov
rcll
push
lret
cmp
mov
roll
nop
or
mov
cmpsb
and
outsb
mov
cmpsl
pusha
cwtl
rolb
sub
imul
data16
lea
imul
push
pop
dec
adc
icebp
insb
mov
and
mov
sub
jle
out
push
imul
popf
mov
lds
test
lea
inc
add
aam
xchg
xchg
cmp
dec
rorb
pop
xchg
dec
ja
test
sti
sbb
push
testb
outsb
xchg
ss
cmpsl
int3
add
test
xchg
mov
ret
into
out
cs
jns
mov
mov
insl
mov
fisubl
inc
insl
jbe
aam
mov
add
pop
lea
repz
test
xor
out
push
addr16
adc
push
imul
inc
clc
cmp
dec
ret
mov
cltd
xor
shl
lods
roll
repnz
lds
fisubs
sbb
fwait
inc
lods
pop
pop
push
mov
gs
mov
jp
leave
fsts
xchg
cwtl
fs
xlat
and
dec
ja
mov
cwtl
leave
js
loop
imul
cmpsb
mov
idiv
add
adc
cmpsl
in
xor
cmp
mov
nop
xorb
or
cmp
rclb
sub
std
lea
fnstcw
movl
out
xlat
xchg
cmpsb
adc
adc
cwtl
subl
out
push
cli
jmp
call
jbe
mov
testl
ds
adc
push
mov
sbb
aad
or
pop
in
int3
jne
fsts
xchg
mov
in
add
mov
pop
jb
data16
pop
mov
repz
andl
insb
insl
pop
pop
jns
loope
mov
xchg
repz
aad
aas
mov
dec
pop
fstpl
add
loope
incl
cmp
mov
mov
adc
dec
cmpl
stos
mov
push
lcall
jbe
div
and
xor
sbb
jb
jbe
sbbl
xchg
mov
cmpsb
imul
and
xorl
and
xchg
scas
and
imul
aam
lods
xchg
dec
lods
cmp
mov
and
out
addr16
sub
dec
add
lods
clc
jno
cmp
faddp
loop
cmp
mov
mov
or
stc
push
adc
xchg
jns
mov
cmc
mov
adc
shll
push
add
jmp
inc
push
jo
pusha
xchg
push
fiadds
jns
push
xchg
stos
and
mov
fisubrl
xor
cld
popf
sub
dec
cmpsl
in
inc
cli
cmpsb
add
fidivl
ds
pop
push
js
movsl
idiv
loop
cmp
add
push
pop
sbb
loopne
loop
mov
ret
jnp
add
mov
nop
mov
mov
xchg
adc
outsb
jp
xor
adc
lret
dec
sbb
sbb
pushl
jl
mov
movsl
lret
enter
outsl
fsubrs
orb
aam
pop
fs
and
jl
mov
loope
bound
jg
mov
add
cld
rcrb
outsl
in
lock
cmp
movl
push
repz
dec
cltd
jmp
in
push
cmp
aaa
lahf
sub
clc
jbe
mov
lret
xor
sbb
xchg
push
jb
push
and
cmpsl
sar
and
fldl
dec
cmp
cmc
cmp
outsb
in
add
shlb
jne
adc
jno
push
aaa
insb
or
xor
xor
std
xchg
sbb
xlat
in
mov
div
jle
jmp
imulb
and
cmp
xor
je
mov
shr
fistps
jp
inc
xchg
lcall
xor
jne
idivl
aam
or
fwait
jecxz
lahf
test
add
lret
rcr
popa
or
or
adc
mov
inc
orb
cmp
ja
push
push
or
scas
push
xchg
push
jne
push
testl
push
mov
in
adc
out
lods
sbbl
mov
iret
cmp
cmp
popf
push
imul
stc
xor
arpl
sbb
xor
jns
mov
mov
fcmovnbe
push
leave
cmp
lahf
loopne
shlb
les
xor
cmp
ja
outsl
movsb
jb
and
xchg
loopne
pushf
and
out
dec
imul
in
cmpsl
fwait
subl
dec
fs
lods
inc
sub
shlb
out
or
pop
xchg
inc
bound
or
cmc
push
mov
cmpsl
dec
cltd
cmp
inc
xchg
sbb
inc
imul
arpl
insl
xchg
jmp
inc
jae
jbe
xor
and
and
outsl
xor
xchg
lods
loop,pn
mov
lods
mov
sti
out
lock
dec
dec
ret
loopne
mov
imulb
push
jge
and
stos
rcrb
jmp
sub
jge
lcall
clc
sub
jecxz
sahf
pop
pop
lea
add
cmp
mulb
mov
or
ja
pop
push
movsb
fisubs
nop
inc
repz
jae
xchg
add
ja
dec
mov
int
notl
out
out
xchg
mov
push
sbb
sti
movsb
jle
sahf
imul
xchg
enter
mov
add
fisubrl
gs
jo
scas
mov
mov
push
xor
imul
xchg
mov
loopne
adc
test
xor
les
loopne
sub
insl
subl
cmpsl
inc
mov
inc
push
test
mov
mov
bound
or
stos
shll
idivb
lods
gs
jb
sbb
dec
push
in
push
repz
mov
pop
lea
iret
mov
jae
lods
repz
dec
mov
push
push
pop
out
mov
inc
cmpsl
push
pop
mov
jp
jo
stos
xchg
adc
sti
les
dec
mov
xchg
lcall
jo
lods
js
scas
fistpl
sub
and
jp
dec
xchg
inc
mov
push
je
push
jno
es
cltd
popa
xor
jmp
push
icebp
inc
leave
hlt
pop
lret
movsb
daa
loop
cmp
jnp
dec
push
cltd
and
mov
test
and
dec
xchg
cmp
fiaddl
fdivs
or
fdivp
stc
daa
jne
mov
xchg
inc
mov
lods
lahf
fbstp
movsb
js
out
in
mov
sarl
mov
mov
aas
mov
xor
stos
es
fildl
lods
mov
loop
lcall
or
pop
mov
xchg
xchg
shll
push
fidivrs
mov
dec
flds
xchg
dec
sbb
negl
jb
push
je
ret
hlt
pop
sub
jno
lods
cmp
in
pop
xchg
jnp
dec
pop
inc
shrb
dec
push
push
loope
lahf
mov
notb
andl
dec
push
sbb
adc
dec
cmp
fwait
jns
xchg
jmp
add
cmp
clc
push
mov
push
cwtl
into
rcrl
sub
loope
push
mov
inc
iret
pop
rcr
inc
mov
sub
push
jl
cmpsl
ret
scas
movsb
or
std
sahf
or
outsl
iret
jl
mov
or
adc
xorl
sub
jp
cld
push
jo
add
incb
pop
test
pop
jnp
fnsave
dec
jo
lods
mov
adc
call
ja
sub
lret
icebp
jmp
inc
lods
mov
inc
icebp
ljmp
mov
loopne
mov
cltd
mov
adc
fwait
adc
fwait
repnz
xchg
ret
fsubl
and
loopne
icebp
sub
mov
xchg
xchg
call
adc
shll
loope
xor
xor
inc
out
ds
ret
leave
dec
pop
xchg
lcall
test
jne
test
xchg
adc
or
mov
popf
add
les
repz
pop
lods
test
outsl
push
outsb
inc
pop
mov
add
lea
in
xor
dec
cmp
sub
out
insb
pop
dec
stos
ja
cmp
fidivrl
inc
adc
adc
fsubl
mov
fldenv
jl
pusha
ds
inc
fs
and
je
mov
cltd
dec
add
push
incl
lea
mov
inc
iret
test
cmp
jmp
andb
mov
push
inc
outsl
faddl
xlat
pop
jbe
stc
jae
add
jnp
or
mov
outsl
sub
sbbb
sar
loop
cmc
outsl
mov
ret
mov
imul
jb
bound
stc
adc
repz
cwtl
jl
mov
jge
pop
and
push
xor
jmp
add
mov
jb
jns
ficompl
xor
and
jl
outsb
aad
inc
fs
cltd
mov
outsl
test
dec
pusha
and
cmc
movsl
aas
xor
out
lret
sbb
rcrb
dec
pop
jge
sub
dec
stc
mov
dec
cltd
test
jb
fs
sbb
inc
sbb
in
or
aam
leave
jmp
sarb
scas
jb
hlt
add
lods
daa
xchg
scas
mov
out
pop
push
js
out
dec
dec
mov
cmp
fsub
rcrb
inc
lret
mov
sub
mov
lods
cmpsb
out
aad
mov
cmp
jle
adcb
xchg
psubsw
stc
adc
dec
ficomps
push
push
sub
xchg
hlt
aam
sahf
int3
jb
push
xchg
js
fisubl
mov
push
cmp
xchg
mov
stc
in
pop
insb
xchg
cmp
pop
mov
pop
repz
fs
jle
push
or
repnz
mov
sbb
xchg
jecxz
insl
lods
mov
dec
lcall
daa
out
jbe
add
fwait
push
pop
xchg
inc
inc
cmp
mov
das
sbb
or
outsb
movsb
mov
or
repz
cmpsl
pop
and
cmpsl
fisttps
xor
or
push
jno
out
popa
push
test
sub
lahf
ficoms
leave
xor
cmpsl
mov
cwtl
jae
pusha
push
dec
inc
gs
add
jp
adc
cli
cmpsl
int
or
jo
cwtl
sub
shrl
aaa
iret
enter
leave
or
rcr
iret
and
sbb
jl
jne
mov
sbb
push
add
cmp
push
mov
xchg
or
jl
loopne
cwtl
sub
mov
lods
pusha
jp
adc
sti
jl
insl
dec
pop
xor
jge
rcll
repz
xor
push
cmp
ret
push
dec
fistl
repz
insl
inc
aaa
inc
movsl
mov
cmc
out
cmpsb
jle
dec
cmp
and
pop
icebp
insl
push
adc
fs
out
jnp
push
mov
aas
test
inc
bnd
out
cmp
mov
das
data16
jp
jp
incl
aad
lcall
inc
js
or
adc
pop
xor
pop
jae
push
pop
xlat
cld
xchg
mov
dec
dec
pop
in
xchg
push
add
cmp
mov
jno
clc
add
sbb
mov
imul
and
mov
mov
inc
jecxz
scas
inc
lods
sahf
push
mov
lods
jl
aad
dec
jae
mov
mov
mov
sbbl
push
jmp
sti
mov
call
pop
and
mov
jg
arpl
jbe
add
repnz
add
and
aad
or
ljmp
pop
adc
cmpsl
dec
test
dec
enter
or
imul
xchg
adc
in
xchg
bt
nop
cli
scas
cmpsb
add
push
mov
jo
das
pop
in
push
cmp
or
addr16
inc
stos
mov
mov
mov
cwtl
and
mov
int
pop
xchg
xlat
or
arpl
int
lods
dec
mov
repz
mov
or
insb
mov
jns
aam
sbb
stos
push
fistps
push
cmpsl
jle
jp
in
movsl
imul
sarl
out
mov
or
popfw
mov
fstpt
test
rcrb
mov
inc
mov
cli
aad
dec
clc
cli
mov
cld
jl
imull
cmpsb
lods
jb
add
pop
andb
out
mov
rcr
pop
dec
xor
imul
in
jmp
mov
jo
stos
cwtl
and
adc
imulb
sub
dec
fwait
sti
push
out
iret
push
adc
dec
mov
lods
ljmp
or
imul
dec
push
in
xor
pop
mov
mov
cli
mov
js
pop
inc
and
sub
lahf
ffree
cmpb
imul
xor
xor
js
scas
xchg
popa
filds
or
pop
loopne
and
leave
cs
sbb
movsl
loop
and
mov
cwtl
iret
sbb
mov
insb
mov
mov
fcomp
loop
pop
sti
push
outsb
ffreep
inc
push
or
pop
jbe
cmpsl
push
mov
aad
test
xorb
shll
dec
movsb
hlt
jbe
sbb
push
pop
je
out
int3
ds
mov
dec
aaa
inc
jecxz
sbb
xor
cwtl
bound
adc
xor
mov
loope
push
push
bound
pop
dec
in
jb
mov
loop
fs
dec
or
jle
jle
lahf
into
jb
mov
push
mov
and
jg
insl
push
das
dec
mov
dec
jno
mov
mov
hlt
xlat
add
jl
xchg
fcmovbe
mov
jb
mov
jno
dec
in
andl
sbb
inc
mov
lret
dec
cmp
mov
repnz
loop
pop
sbb
fadds
or
xchg
cwtl
addl
clc
hlt
ljmpw
loope
cmp
jb
or
xor
or
cwtl
int3
insl
xchg
test
jg
lret
mov
arpl
js
sahf
test
push
cwtl
mov
mov
fnstsw
xchg
hlt
inc
mov
sbb
or
ret
or
cmp
mov
scas
mov
insl
fld
add
pop
jmp
add
add
popf
sbbb
sub
mov
ljmp
or
shlb
inc
mov
xor
push
push
das
push
nop
mov
fnstcw
mov
inc
push
sub
xor
lods
inc
inc
jno
or
jp
mov
xchg
push
popa
aas
mov
mov
rcll
mov
mov
pop
mov
lea
mov
inc
sub
lahf
jnp
insl
add
je
or
add
jmp
and
or
push
mov
push
mov
pop
sarb
adc
xchg
push
stc
jne
insb
xor
fisubrl
rcl
nop
lock
mov
sub
jmp
mov
add
dec
sar
cmp
jns
imul
ret
mov
mov
ds
push
mov
test
xchg
xchg
mov
stos
mov
or
push
sbb
cltd
cmpb
dec
push
aaa
xor
cmp
cld
ret
sub
in
cld
add
cmpsb
mov
sub
and
aam
test
push
push
lret
fsubs
daa
cwtl
inc
cld
mov
int3
push
testl
sub
push
je
sub
outsb
mov
cmp
xor
flds
jne
pop
add
dec
stc
inc
enter
xchg
cmpsl
mov
jae
repnz
adcl
jmp
dec
out
popf
in
aaa
dec
dec
cmp
lea
mov
es
cmp
inc
cmp
xchg
mov
xchg
and
sbb
inc
arpl
popa
repnz
out
negb
cmp
adc
and
add
xchg
xor
int
js
or
les
xchg
add
xchg
pop
mov
mov
lock
jne
shll
or
enter
xor
cld
mov
push
or
int3
fisttpl
scas
pop
jmp
cld
gs
sbb
cs
mov
stc
push
mov
data16
bound
outsb
push
shll
mov
in
fs
add
out
mov
data16
mov
cwtl
mov
pop
push
movsl
in
fpatan
repz
xlat
daa
cmp
sarl
aaa
adc
ficoml
fildl
leave
cmp
lds
subb
addr16
xor
cmc
pop
and
repnz
push
jge
inc
je
insl
or
pop
aas
xchg
rolb
fwait
nop
sub
sub
or
dec
push
fiaddl
test
push
test
and
sarb
mov
cld
rcrl
xchg
mov
dec
and
mov
lock
ret
add
inc
test
adc
or
push
sub
ja
add
and
jo
cmp
fnstsw
cmp
flds
scas
push
or
inc
ret
pop
xor
outsb
ljmp
mov
push
repnz
push
leave
int
add
les
repnz
loope
mov
lods
push
push
clc
pop
jecxz
pop
dec
data16
jle
pinsrw
dec
call
out
mov
mov
sbb
aad
mov
fldcw
add
cmp
cli
clc
cmpsl
movsl
dec
rorw
lcall
xchg
je
lahf
pop
push
push
movsb
pop
adc
divb
jecxz
leave
jnp
iret
mov
int3
xor
iret
outsl
popf
sbb
mov
into
inc
sbb
in
sub
mov
mov
cs
inc
test
inc
dec
mov
daa
roll
notl
pushf
sub
and
xchg
shrl
mov
aad
dec
lods
into
mov
int
push
daa
cld
push
dec
mov
push
pop
mov
fidivl
adc
mov
fcmovb
add
and
fidivrl
sub
adc
cld
das
sub
shl
std
sar
jo
mov
shlb
mov
mov
pop
lods
cmp
subb
daa
movl
fisttpll
xor
add
mov
pop
pop
sti
xor
cmpsb
add
cmpsb
loop
add
xchg
test
fmul
pop
jg
mov
loopne
nop
sbb
shrl
jecxz
push
jns
mov
aad
js
xor
std
sbb
or
in
inc
div
cwtl
xor
pop
add
aas
and
adc
push
aam
lcall
subl
bound
push
xchg
inc
xor
loopne
insb
dec
jne
mov
mov
push
ret
mov
add
test
xor
and
addr16
loopne
mov
fsubr
lds
icebp
pop
aaa
and
xchg
movsb
cmp
sub
daa
and
or
mov
mov
cmp
mov
je
xor
in
push
xor
scas
icebp
push
xchg
insb
inc
jmp
xchg
mov
cmp
outsb
or
lcall
sbb
and
xchg
addb
cs
repz
pushf
imul
insl
scas
pop
jmp
loopne
loope
loope
jae
mov
cmp
fcomip
mov
movsl
aas
inc
add
mov
or
out
hlt
add
add
cmc
cmp
sub
test
arpl
sub
cli
nop
aaa
leave
int
sub
mov
test
sbb
pop
pop
mov
enter
or
add
aam
pop
lcall
pushf
stos
mov
and
scas
pop
push
pushf
push
fdivs
pop
ja,pt
lods
mov
fwait
int
rorl
cmp
inc
mov
in
lret
mov
js
dec
sbb
dec
test
and
push
lock
pop
or
sub
aaa
add
je
out
mov
arpl
outsb
xchg
inc
push
fstl
adc
jns
icebp
and
nop
jge
sti
xchg
imul
in
test
mov
xchg
mov
hlt
call
lret
ds
je
adc
jb
or
mov
addr16
adc
push
mov
nop
gs
sbb
mov
loopne
mov
sub
mov
in
dec
mov
nop
test
mov
xorl
inc
in
xchg
push
jne
inc
pop
push
pop
scas
push
pop
push
xor
xchg
subb
and
mov
dec
shrd
dec
xlat
fidivs
arpl
mov
clc
shrb
rcrl
repnz
push
sub
loope
lret
inc
mov
push
inc
test
mov
test
es
fsubp
or
dec
aaa
mov
xor
sbb
xor
test
scas
mov
mov
mov
movsb
clc
and
aam
lods
lret
jbe
sub
cwtl
jmp
cmp
lcall
jbe
cmp
or
dec
dec
sub
sbb
mov
les
in
mov
cmp
dec
iret
cld
sbb
pop
pop
pop
mov
sbb
push
adcl
addb
jmp
int
mov
insb
scas
lahf
adc
mov
test
in
push
orb
bound
outsl
fs
loopne
test
jbe
pop
xchg
or
or
leave
dec
adc
jne
loop
lock
push
inc
dec
mov
sub
in
pop
shlb
lods
test
sub
cmp
int3
cmp
shlb
push
iret
sub
aaa
xchg
xor
adc
xchg
jb
push
scas
insl
fstpt
pop
push
ljmp
movsb
inc
pop
mov
inc
mov
icebp
inc
xor
dec
fsubp
jb
out
rclb
xor
jmp
mov
jo
stos
aaa
es
sub
out
ret
adc
mov
push
out
xchg
sbb
test
and
ret
jmp
lahf
pop
mov
pop
dec
mov
addr16
aaa
jns
xchg
pop
push
hlt
dec
xchg
xor
cmc
mov
imul
not
into
stc
arpl
shlb
xchg
mov
jle
add
and
fucomp
ds
lcall
mov
mul
push
mov
pop
and
stc
mov
adc
dec
in
icebp
in
call
addr16
sarb
add
xchg
mov
scas
jle
test
or
shl
dec
scas
cwtl
mov
hlt
out
adc
adc
daa
jmp
das
outsl
add
aad
aaa
data16
leave
mov
xchg
cmp
in
jno
decl
xchg
arpl
mov
xchg
ja
insb
inc
stos
mov
js
movsl
adc
mov
and
pop
cmpsl
sub
lods
mov
in
movsl
dec
mov
lock
daa
fcmovnbe
shl
pop
fs
nop
adc
dec
flds
push
mov
push
push
pop
jge
xor
and
pop
call
adc
hlt
jb
mov
cmp
sar
cmp
dec
xor
les
or
iret
call
fdiv
shl
add
fisttpl
and
ds
mov
or
sarb
fistl
pop
adc
mov
sub
jbe
pop
pusha
push
dec
loope
inc
test
sbb
dec
pop
push
push
add
ror
insl
pop
ret
push
jbe
mov
cmp
jl
imul
adc
mov
inc
in
int3
fidivs
loopne
dec
clc
sbb
cwtl
fdivrs
push
inc
jns
dec
popa
fistl
int
push
aas
and
add
repnz
xchg
pop
test
mov
dec
push
cld
mov
cmp
and
ljmp
mov
scas
ljmp
mov
xchg
jnp
xor
jl
movsl
aas
ret
arpl
cld
inc
mov
dec
adc
inc
cmp
jo
dec
dec
cs
rcrl
xor
xor
sbb
sbb
inc
fisttpll
sub
jae
lods
cmc
mov
cmp
mov
ret
jb
in
out
test
lret
call
or
jecxz
lock
add
movsl
sub
sub
loop
addr16
cli
test
cmp
push
cs
adc
scas
cmp
dec
popf
mov
js
inc
mov
inc
mov
rorb
push
dec
clc
jecxz
xor
or
add
dec
adc
push
jbe
mov
mov
sbb
imul
inc
mov
fs
sub
sbb
pop
mov
add
or
jae
imul
cmp
xor
js
lods
stos
imul
aad
stos
std
jbe
mov
nop
jae
std
hlt
sub
test
sub
js
adc
dec
push
cmp
sub
adc
xor
cmp
mov
xchg
push
push
push
and
sub
insb
repz
pop
add
daa
add
int3
and
jecxz
rorb
push
imul
insb
lret
xchg
mov
clc
repnz
dec
das
sti
clc
push
ret
pop
or
push
xchg
and
clc
aad
pop
mov
out
mov
xchg
lahf
je
mov
andl
cmp
fdivs
cwtd
mov
lds
inc
pusha
lds
repz
je
adc
shl
mov
ss
jmp
adc
pushf
adc
pop
out
adc
xchg
sbbb
and
int3
push
sub
ret
pop
dec
adc
add
rcrb
std
fadds
mov
loopne
sbb
jbe
or
xor
add
add
mov
pop
in
lcall
loope
jns
and
std
mov
jg
jg
xor
out
shr
outsl
sub
ret
or
cmp
xor
lods
or
mov
test
xor
gs
xchg
repz
cli
pop
push
sub
hlt
push
leave
push
push
inc
sti
dec
xchg
cmp
dec
nop
or
xor
icebp
inc
repz
incl
rorb
std
lcall
add
js
lods
xchg
xchg
and
sub
mov
xor
aaa
adc
sbb
into
or
adc
push
or
cwtl
ss
pop
xchg
stc
mov
add
push
fistpl
fisttpl
push
cmpsl
jne
movsl
dec
xor
xor
xchg
xor
sub
pop
sbb
lahf
out
cs
mov
pop
frstor
insb
test
push
and
push
jg
mov
xchg
xchg
nop
sbb
xchg
mov
mov
in
mov
sub
sbb
jae
outsb
mov
cld
push
xor
aas
xor
inc
pop
cld
cld
out
pop
lock
lret
test
or
xlat
pop
leave
jmp
pop
pop
sbb
xchg
mov
int
mov
cli
xchg
pop
mov
int
lret
xchg
push
pop
add
aam
cmpl
leave
pop
inc
insb
mov
inc
cwtl
push
push
imul
call
sbb
fldt
mov
aad
ret
jl
pushf
add
loope
cmp
and
push
sub
and
stos
dec
inc
dec
inc
or
xadd
test
ret
sarl
mov
cs
mov
or
mov
inc
popa
mov
sub
pusha
repz
sbb
dec
lahf
cmp
xorl
fbld
cmp
and
pushf
in
fisubrl
adc
clc
in
mov
shrl
mov
add
adc
cmpsb
rcl
jecxz
stos
loopne
jne
cs
cmp
leave
sub
cmc
pusha
fwait
mov
or
sbb
mov
dec
iret
dec
pop
cmp
cs
fsubs
or
sbb
pop
cmp
cmovs
adc
mov
xchg
mov
pop
cmp
push
stc
cmpsb
and
xor
dec
mov
into
adc
xchg
ja
jo
mov
inc
push
aas
les
std
xor
sub
popa
rcll
pop
cld
mov
pop
push
scas
mov
mov
mov
sbb
sbb
cmp
mov
jmp
or
push
movsl
inc
sti
add
inc
outsb
mov
mov
cmp
inc
test
inc
cli
bound
sarb
les
push
mov
add
test
ret
dec
cli
jns
loope
mov
cmpsl
pop
pop
aaa
lds
ja
inc
cmp
stos
pop
pop
mov
sbb
daa
xorl
ja
xor
cwtl
cmpsb
es
fstpt
mov
sbb
add
pop
and
std
add
lahf
push
or
mov
imul
mov
cmp
repz
div
rcr
cld
jno
inc
mov
xchg
in
gs
jp
fsubrs
test
mov
cmp
lods
dec
xchg
push
push
bound
insl
or
cmp
xor
add
push
fcomps
outsb
or
into
xchg
jns
stc
arpl
lcall
std
push
movsb
push
shlb
sbb
or
daa
in
enter
insb
and
adc
insb
jmp
add
repz
out
pusha
ljmp
push
inc
inc
sub
mov
cmp
jp
jo
pop
nop
mov
mov
cmpl
outsl
in
mov
movsb
movsb
mov
scas
push
mov
push
dec
test
repnz
jmp
xchg
sbb
gs
lea
sub
mov
jae
je
js
pusha
lock
aam
jg
dec
mov
lahf
mov
fwait
loopne
outsb
lock
outsl
scas
and
xor
fildl
lret
xor
ja
cmp
mov
std
fsincos
dec
mov
lea
push
pusha
xor
test
out
imul
mov
and
jle
arpl
mov
loope
cmp
ljmp
mov
std
push
rcll
push
je
sti
cltd
mov
or
stos
jns
mov
daa
push
fadds
lret
pop
dec
xchg
movsb
test
lds
pop
adc
fadds
in
sub
je
xchg
cmp
scas
mov
add
mov
mov
xor
push
mov
into
jns
push
cltd
scas
adc
loopne
ss
cmc
inc
add
add
repnz
jo
push
sub
pop
fwait
jae
cld
inc
inc
outsb
pop
mov
loop
cmp
popa
dec
jecxz
lock
mov
xchg
pop
adc
pushf
sti
arpl
insb
ljmp
push
orb
scas
add
or
ja
jae
mov
cs
push
pop
push
xchg
sub
decl
cmp
sbb
outsl
sarl
or
push
dec
push
sbb
subl
xor
dec
movsb
mov
adc
sbb
sbb
lret
movsl
inc
mov
inc
movsl
dec
iret
inc
mov
lods
popa
mov
mov
sbb
test
psubq
in
or
xchg
and
sar
mov
sbb
subb
dec
sub
jle
mov
adc
enter
adc
cmp
adc
clc
sahf
sub
jne
and
aad
sahf
stc
mov
sbb
stos
in
xchg
mov
pop
mov
inc
adc
xchg
push
dec
stc
leave
xor
repnz
stos
cwtl
and
cmp
aaa
xlat
sbb
dec
cmp
inc
xchg
pop
dec
jl
lods
insb
aaa
cmp
inc
incl
ljmp
outsl
cld
or
push
roll
dec
mov
test
mov
lods
mov
add
push
mov
adc
and
daa
pop
mov
adc
in
daa
out
inc
jg
popa
cmova
and
mov
and
fisubl
pop
xor
dec
pusha
mov
iret
dec
mov
inc
fistpll
stc
loope
stos
int
loop
jg
aad
sub
push
mov
aaa
sahf
mov
sub
xor
dec
mov
sti
cli
dec
inc
out
xchg
and
sbb
cmp
leave
lds
mov
enter
cli
out
pop
aaa
daa
xchg
testl
jp
xor
scas
mov
aam
mov
add
xchg
jl
fisttpl
orl
pop
mov
insb
push
insb
iret
jne
add
jae
or
scas
adc
push
imulb
mov
ret
repz
push
loop
mov
lret
xor
notb
push
mov
arpl
jg
adcl
sti
xchg
loop
das
mov
in
jl
ret
mov
cltd
in
loop
ror
lahf
sbb
fstps
xor
or
xchg
mov
push
add
movsl
dec
int
mov
rorb
into
cli
sbb
lahf
fs
inc
mov
push
mov
call
adc
push
sbb
outsl
push
pushf
cli
outsb
fnsave
fdivl
out
xchg
clc
mov
add
or
addb
fisttpll
and
xchg
pushf
mov
out
jmp
stos
or
mov
jmp
lcall
in
in
fnstenv
cltd
scas
call
cmp
test
xor
xchg
ret
push
in
outsb
lods
out
ljmp
cmp
sti
cwtl
xchg
add
aad
jl
xchg
mov
gs
mov
xchg
xchg
cmpsl
add
fisubrl
and
jne
test
lret
cwtl
add
insl
mov
jno
adc
lods
xchg
shl
and
in
xchg
sbb
fbstp
ds
push
in
test
push
dec
dec
adc
inc
shrl
bound
xchg
lret
addr16
aad
hlt
adc
mov
enter
lods
lods
jmp
bound
insl
cmc
in
inc
pusha
addr16
push
mov
lods
xor
insl
pop
outsl
xor
sub
sub
and
clc
sti
xor
vmwrite
fisttpl
in
stos
incl
jb
leave
sbb
sahf
divl
jl
jae
cld
outsb
ficoms
jg
inc
pop
sbb
xchg
shl
xor
sbb
sbbl
add
out
movsb
ret
push
mov
dec
pop
or
push
jmp
xorl
cmp
sahf
stc
lods
push
fisttpl
dec
inc
xor
mov
dec
xchg
cmp
cmpsb
push
jbe
mov
mov
aas
out
mov
mov
jmp
push
loop
jnp
sub
std
outsb
xor
or
xor
in
popa
cmc
mov
mov
mov
inc
mov
loop
inc
jno
insb
shl
push
ficoml
pop
push
int3
mov
mov
xchg
inc
loope
scas
inc
into
lcall
callw
test
imul
lret
ror
xor
popf
fistpl
or
ficoms
call
or
in
push
sbb
shl
mov
mov
push
push
sub
mov
mov
test
pop
bound
or
pop
mov
out
xor
stos
mov
stos
icebp
jmp
xor
repnz
xchg
js
insl
bound
pop
xor
aaa
push
pop
pop
notl
and
insb
lods
aaa
lret
push
xchg
ret
rcrb
lods
jbe
enter
sub
or
sub
xlat
test
mov
add
pop
fdivrs
clc
jecxz
and
dec
shrb
insb
test
push
insl
fcoms
test
sbb
fnstsw
pop
mov
xor
xchg
sub
adc
xor
lock
push
pop
cli
pop
aas
push
loope
ficoml
sbb
dec
dec
mov
or
dec
pop
scas
inc
cs
xrelease
outsb
lds
jp
fbstp
les
cld
outsb
inc
and
push
xor
jb
dec
inc
lret
mov
push
cs
stc
and
icebp
sbb
iret
adc
jmp
mov
subb
dec
dec
jmp
ret
mov
xchg
sub
xchg
and
mov
adc
scas
cmp
pop
and
mov
dec
repnz
push
mov
mov
dec
pop
jmp
cs
pop
push
jle
enter
mov
cmc
ljmp
xor
xchg
aam
iret
push
pop
inc
add
cwtl
xor
pushf
xchg
mov
stos
int
bound
das
mov
xchg
pop
mov
cmpsb
pop
dec
dec
cltd
xchg
inc
xor
pop
cld
xchg
lret
insl
xchg
pushf
divb
dec
aad
or
sti
aad
mov
dec
xchg
sbb
in
xor
sarb
clc
popa
test
sub
xor
cs
stc
and
ret
shrb
leave
test
out
ror
mov
xlat
sub
add
adc
or
call
pop
push
aaa
xchg
shll
iret
lea
xor
dec
mov
cs
cmp
mov
fdiv
call
mov
cmp
ficomps
add
or
mov
inc
loope
mov
aad
scas
cmpl
xor
jmp
cltd
xor
xor
sbb
pop
sbb
or
jne
dec
add
test
shll
jecxz
neg
push
push
add
inc
lock
cltd
pusha
outsb
and
dec
int3
push
test
jmp
bound
and
inc
add
jle
adc
cmp
pop
movsb
mov
push
push
gs
gs
cmp
inc
aam
sarb
inc
outsl
jecxz
dec
adc
or
loope
or
hlt
test
pop
dec
mov
inc
into
cmp
shlb
sub
jns
les
or
pop
push
ljmp
jecxz
lret
test
movsb
push
mov
mov
cmc
jp
push
pop
insb
mov
mov
int3
jecxz
aad
fimull
sahf
fsubs
jae
cmc
divb
cmc
xor
xchg
stos
adc
ror
pop
ret
test
in
xor
fldl
loopne
mov
lret
and
shrb
jbe
mov
mov
adcl
stos
aam
enter
push
lods
movsl
dec
cmp
add
mov
mov
ljmp
out
adcb
dec
push
inc
fistpl
pushf
aas
mov
xlat
imul
push
stos
xchg
lahf
and
jl,pn
xor
sub
mov
test
jo
ss
fisubrl
push
pop
icebp
inc
testb
sub
mov
jnp
inc
sub
loope
pop
in
xor
or
adc
jmp
out
rorb
xchg
push
rorb
cmp
int3
mul
adc
fistpll
lea
cmp
iret
enter
jne
not
and
mov
add
loop
xchg
xor
push
mov
mov
jne
and
push
add
cmp
cltd
pop
ljmp
leave
pop
sarl
push
or
sbb
ljmp
push
mov
xchg
out
loop
mov
dec
pop
push
cmp
add
idiv
hlt
inc
push
push
or
les
in
ss
xor
pop
ficompl
and
jnp
leave
sti
jle
jo
nop
insl
jp
insl
orb
test
stos
pop
lods
divb
jb
mov
pop
jno
add
dec
pop
lods
mov
orb
stos
clc
test
leave
in
pop
mov
lea
xchg
stos
xchg
stos
lahf
pop
or
sahf
push
addr16
push
repnz
mov
movsb
fwait
lods
xor
cmp
scas
je
jecxz
cld
push
cmp
push
push
inc
lret
sub
mov
push
jecxz
pop
call
mov
jnp
push
sub
mov
cmc
jb
stc
leave
push
cmp
popf
push
rcrl
mov
xor
xor
aaa
imul
daa
dec
nop
inc
push
dec
jno
mov
push
dec
adc
loopne
les
scas
xchg
jp
jecxz
leave
stc
sub
out
xchg
push
out
mov
cmc
icebp
movsb
je
jae
iret
popa
out
dec
fldcw
pusha
mov
lcall
test
xor
jmp
bound
sub
mov
cld
fimuls
mov
jae
adc
and
push
orb
fiaddl
and
xor
loopne
call
gs
fcmovne
stos
fmuls
pop
shll
std
add
dec
jb
mov
and
or
pop
nop
cli
push
imul
dec
das
lea
pop
stos
inc
inc
push
mov
xor
xor
out
cmp
add
xchg
lock
shrb
mov
sar
test
in
jg
mov
into
mov
and
sti
aad
test
aam
fs
adc
mov
xchg
dec
and
inc
push
movups
jmp
lock
xor
mov
aam
or
je
inc
dec
movsb
add
add
adc
in
cmpsl
and
ja
imul
sub
push
cmp
push
clc
stos
int3
cmp
push
push
daa
dec
adc
lock
sahf
adc
lds
dec
lock
dec
sbb
jno
mov
rcll
loop
dec
cmp
mov
fs
push
or
or
fbstp
lret
xor
xchg
data16
xchg
inc
push
jecxz
mov
xor
xor
enter
xor
add
aaa
mov
inc
pop
sbb
std
testl
and
pop
aam
addr16
add
pusha
sbb
lds
out
dec
push
cmp
mov
add
adc
xor
xor
push
in
outsl
or
mov
or
popf
out
out
int3
add
cmp
enter
jo
les
pop
lock
mulb
subl
jmp
add
fmull
out
fs
stos
insb
jge
mov
dec
das
sbb
jae
divl
outsl
pop
shrl
lret
inc
addr16
pusha
mov
push
pop
shlb
jecxz
pop
jns
add
shrb
ret
and
add
xor
pop
fcomip
add
in
out
int3
push
jne
pop
outsb
das
push
pop
shll
int
stos
adcb
loopw
xchg
jnp
add
mov
jle
sbb
lahf
inc
orb
pop
fildl
clc
cmpsb
sbb
adcl
mov
inc
pop
popa
mov
int
popf
daa
and
push
cwtl
push
jecxz
sub
mov
adc
jnp
add
out
movsb
shlb
push
in
push
scas
xorb
test
mov
add
add
out
xchg
sbb
jo
mov
fcoml
icebp
cli
divl
lods
arpl
fnstcw
push
and
cmp
insl
sbb
sbb
push
adc
int
jae
stc
pop
jle
inc
push
scas
mov
call
movsl
int3
add
pop
jmp
cli
clc
aad
je
pusha
imul
aad
scas
imul
push
adc
add
jp
pop
sub
or
add
xor
outsl
mov
out
pop
loopne
icebp
repnz
xor
out
sub
shrl
adc
or
add
rorl
jp
push
dec
push
repnz
xlat
xchg
add
popa
out
dec
xor
mov
jae
stos
push
cmpsb
pop
cmpsb
inc
add
mov
loope
sbb
xchg
inc
fadds
leave
mov
fidivrl
pop
shrl
sub
xor
pop
inc
rorl
pop
jo
mov
jae
cmpsb
xchg
push
inc
nop
mov
mov
push
lret
test
stos
xchg
or
or
popa
push
ficoml
pop
lea
daa
js
repz
fisubl
movaps
es
push
enter
fldenv
neg
inc
scas
addr16
fcoms
gs
push
jnp
dec
stos
aas
pusha
push
inc
ds
jmp
push
dec
aas
push
pop
rorb
in
or
pop
cmpl
mov
dec
sub
jp
dec
rcrb
push
int3
or
stos
push
movsl
adc
rol
sbb
cmp
mov
inc
jne
sbb
sti
lret
jno
pop
jae
mov
loopne
mov
mov
lods
jp
inc
lock
pushf
add
insl
sub
cltd
mov
fstl
jnp
cmc
lcall
sub
add
roll
lret
fcoml
fmull
loopne
dec
and
push
mov
loope
imul
popf
cmp
into
fisubrl
inc
fs
xor
fcomip
adc
roll
rolb
mov
pop
ret
in
mov
in
popa
xchg
xor
xchg
and
mov
jle
ljmp
mov
loop
adc
mov
pop
cmc
xchg
sti
adc
jge
dec
mov
cmp
xchg
outsb
mov
and
and
insl
mov
pop
inc
lds
cmp
or
add
mov
inc
jb
push
or
push
pop
sbb
and
sti
mov
mov
adc
cmp
mov
add
adc
insl
mov
ds
stos
dec
lock
loope
and
into
std
pushf
rclb
mov
ss
in
mov
jge
mov
addr16
lret
add
fisubs
int
loope
hlt
mov
pop
push
or
mov
call
xor
shrl
or
movhlps
mov
inc
xchg
imul
and
loope
popf
inc
pop
mov
push
mov
inc
out
nop
cmp
divl
das
and
xor
add
xlat
dec
mov
lcall
jmp
stos
movsl
divb
xor
lods
frstor
sub
dec
loopne
add
das
icebp
shll
subl
jne
push
daa
jno
ret
insb
xchg
daa
fidivrl
lcall
mov
out
mov
push
push
mov
push
dec
test
cwtl
push
push
sbb
xchg
mov
cmpsb
push
cmpsb
test
sti
stc
jne
add
mov
in
xchg
divb
stos
sbb
pop
fnstsw
cmp
sbb
cmpsl
cmp
jg
std
mov
jnp
pop
lcall
xor
xchg
ja
dec
jnp
push
inc
push
pop
in
xor
out
movsl
push
mov
call
outsb
cmp
push
cmpsl
test
out
cltd
jecxz
test
lds
fldt
push
or
pushf
push
pop
inc
cli
sti
sub
cmp
push
insl
push
fmuls
mov
mov
mov
hlt
ja
dec
repz
dec
pop
cld
aad
popa
lret
xor
push
jns
or
sbb
divb
lahf
mov
xorb
shrb
xor
inc
mov
lcall
fdivrl
mov
dec
sbb
sub
je
push
sbb
stc
inc
inc
sti
pop
sarb
inc
sahf
mov
movsl
push
int
js
sbb
cli
push
cmpsb
loope
cmpsl
push
dec
imul
loope
insb
xchg
jbe
mov
imul
mov
or
les
sbb
out
mov
cld
sbb
pop
jae
mov
pop
cli
rcl
or
add
pop
add
lea
shrb
jp
cmc
outsl
into
and
adc
mov
pop
pop
jecxz
mov
movsb
xchg
sbb
adc
rcr
aad
imul
rcll
push
dec
addr16
std
movsl
fiadds
pop
mov
inc
mov
add
in
fsubp
imul
mov
enter
jp
pop
psubb
fldt
gs
ret
pusha
inc
inc
test
ret
jae
std
cs
cmpb
sbb
mov
dec
cpuid
cli
shlb
push
push
xchg
inc
pop
mov
cs
insb
pop
mov
lods
test
dec
dec
ss
push
xchg
cmpsl
jo
cmpsl
adc
sub
add
mov
add
or
sti
hlt
lret
pop
cltd
xchg
adc
mov
jb
cld
mov
into
mov
lds
inc
xor
push
cmc
add
inc
adc
mov
cmpb
sub
jge
popf
add
adc
pop
push
add
mov
mov
test
add
xchg
daa
ret
lcall
imul
roll
adc
stc
out
test
lret
xchg
sub
pop
mov
dec
cmc
or
mov
inc
fstl
cs
or
insl
push
mov
imulb
cs
dec
mov
mov
fwait
sub
jns
repz
adcb
lcall
jp
pop
sub
pop
jns
mov
inc
cs
and
xor
ret
sub
lea
and
fsubl
data16
loope
addr16
push
fdivl
bound
or
daa
adc
dec
inc
mov
scas
loop
or
inc
lea
jl
push
xchg
sub
dec
cmp
sbb
and
loopne
inc
push
fldl
xchg
sbb
dec
xor
jb
dec
es
test
dec
mov
fwait
xchg
es
movsb
jp
inc
push
cmp
pop
stos
es
and
pop
mov
mov
xchg
cmpsb
int3
insb
data16
dec
and
ja
imul
in
push
adc
cmpsl
xchg
push
test
mov
lock
push
xchg
cmc
rclb
sub
jb
ficoml
mov
mov
add
jp
pop
pop
repnz
out
aas
adcb
cmpsl
xchg
cmp
mov
das
dec
xlat
in
int3
mov
mov
idivl
mov
mov
pop
mov
xchg
mov
mov
stos
pop
cld
imul
pop
roll
pop
or
sub
xor
inc
push
dec
scas
aas
add
jp
pop
in
cltd
xor
js
sub
lods
inc
cmpsl
mov
dec
in
iret
mov
dec
ret
push
and
pop
and
mov
icebp
mov
xchg
imul
adcb
sbb
sahf
jb
ljmp
xchg
imul
push
dec
repnz
cmp
jge
fsubrs
les
mov
sarl
sub
mov
aaa
sub
fmull
mov
or
lcall
inc
dec
andb
inc
jne
dec
cmp
sbb
cld
pop
adc
xor
jge
rcrl
pop
mov
xor
xor
pop
mov
outsb
cmp
pop
sub
popa
adc
fbstp
inc
or
push
jo
push
nop
push
cld
xor
xor
or
adc
push
push
call
lds
mov
xor
push
popf
inc
lods
inc
loope
sbb
push
or
data16
popf
push
mov
jo
cltd
cltd
mov
rcrb
sub
pop
adc
sbb
mov
jnp
cmc
xlat
lcall
fadds
jmp
data16
cltd
mov
aad
rorl
ds
xor
testb
bound
dec
out
test
pop
aad
xchg
inc
push
jnp
pop
push
std
and
out
dec
mov
je
fstps
pop
cli
push
xchg
lock
repz
or
es
fucomip
fsubr
cld
jmp
push
jmp
shrl
lea
sbbl
xlat
and
ret
inc
data16
icebp
xchg
addr16
add
mov
sarb
mov
leave
divl
pusha
iret
pop
lea
loope
inc
jmp
popf
push
adc
lahf
pop
jbe
mov
fmuls
mov
jmp
mov
scas
out
push
in
push
imul
mull
pop
jle
clc
cmp
push
inc
push
and
stos
sbb
push
dec
xchg
cmp
sbb
aas
xchg
pop
dec
push
repz
push
rcrb
jb
mov
push
cmp
mov
cmp
cmp
push
data16
adc
out
loopne
out
mov
cmc
xchg
and
sbb
or
mov
movsb
and
rcll
adc
and
in
cli
and
fcmovu
fsubl
xchg
aad
cmp
enter
fsubr
pop
xor
subb
mov
add
push
xchg
ret
sbb
xchg
out
xchg
cli
xchg
negb
sbb
data16
sbb
add
mov
jb
xor
jns
sbb
in
aaa
in
sbbb
cmpsb
xor
je
test
rep
sti
out
jl
notb
int3
fcmovbe
mov
fnsave
icebp
dec
mov
clc
aad
out
add
xor
mov
or
out
or
cld
sti
nop
inc
pop
das
dec
pop
icebp
push
jne
mov
enter
faddl
pop
jne
push
out
jo
stos
pop
into
push
jne
mov
pop
pop
jns
imul
sbb
push
faddl
les
notl
add
push
jne
cmp
adc
sbb
adc
add
mov
sti
mov
add
shl
sub
xchg
push
pop
pop
pop
push
jne
xchg
dec
dec
rcr
push
sti
xchg
push
fcoml
pusha
lds
sbb
and
sub
les
push
jne
lock
rolb
in
es
dec
mov
addr16
push
xlat
dec
aaa
mov
push
pop
pop
xlat
pop
pop
jne
mov
pop
rcl
pop
pop
lock
rolb
push
dec
and
stc
test
or
push
jne
lret
fs
add
in
rclb
les
inc
push
inc
add
pop
jne
std
sub
test
push
shll
push
pop
jne
bound
add
xchg
addr16
mov
pop
jne
rorl
movsb
nop
lcall
dec
adc
adc
dec
aaa
insl
insb
push
mov
pop
inc
sub
