mov
mov
or
mov
fwait
gs
into
or
cmp
jecxz
pop
ficomps
cltd
js
insl
cs
inc
gs
mov
call
mov
int
rolb
push
pusha
jmp
xchg
cmp
nop
dec
bound
test
cmp
pop
in
jne
out
out
es
push
popa
out
sbb
or
js
mov
adc
xchg
dec
in
nop
mov
or
ljmp
test
and
test
daa
fisttps
in
cmp
rclb
and
call
xchg
or
inc
test
mov
jmp
ss
inc
out
push
xor
add
cltd
cli
jl
out
mov
mov
sbb
stos
daa
idivb
in
lock
imul
xor
not
pusha
mov
lea
xchg
not
jmp
add
inc
gs
outsl
fs
gs
imul
add
clc
push
out
mov
mov
pushf
pop
lea
movb
movl
push
jmp
pusha
mov
lahf
movsbw
mov
movzbl
lea
push
movl
push
call
xchg
je
aam
inc
out
mov
and
lock
dec
pop
adc
xorb
shl
loopne
xor
ret
or
push
in
jb
add
std
jp
outsl
sbb
or
add
pushf
es
xor
sub
push
int
pop
in
in
pop
sub
push
sti
pop
fwait
pop
pop
hlt
adc
imul
mov
mov
rcl
xor
faddl
lahf
sub
std
lret
imul
test
cs
scas
push
gs
and
xor
mov
std
lret
inc
adc
mov
fisttpl
ret
bt
clc
push
cmpb
movb
pushf
movb
jmp
pushf
mov
lea
pusha
pushf
movb
jmp
out
jbe
addl
cmp
jno
mov
sbb
bound
cltd
iret
cs
rcrb
outsl
xchg
arpl
cmp
ljmp
imul
in
xchg
jns
add
leave
push
mov
xlat
movsb
push
mov
jmp
xor
roll
aad
jecxz
jecxz
mov
push
mov
lahf
jns
and
push
fwait
scas
xchg
out
mov
insl
cmpsb
out
in
not
mov
jmp
cmp
sub
pop
mov
imul
push
cmp
mov
loopne
mov
pop
popf
jns
adc
jb
fsubs
push
add
addl
xchg
into
in
mov
sti
mov
or
jns
aaa
movsl
mov
lret
test
adc
adc
js
xchg
les
push
rcrl
fdivrl
fwait
jno
cmpsl
or
mov
pop
push
gs
adc
inc
push
ss
push
cmp
dec
inc
sahf
pop
pop
out
out
mov
sbb
mov
sub
mov
subl
addr16
adc
jo
jo
loop
jb
mov
lds
mov
cmpsb
cmpb
push
cmc
dec
lods
mov
sahf
mov
out
ljmp
ljmp
or
data16
mov
inc
mov
fisubrl
mov
cmp
call
pop
outsb
mov
mov
fsts
out
hlt
fnstsw
pop
and
jg
popa
sub
dec
outsl
scas
pop
jno
mov
fdivs
pop
sub
push
cmp
mov
dec
pusha
pusha
dec
lretw
enter
out
subl
cmpsl
jp
pop
ret
scas
inc
sub
out
lahf
mov
and
roll
inc
inc
dec
mov
subb
out
test
stos
jnp
pop
mov
lods
mov
sbb
std
aam
cs
and
mov
or
ljmp
in
inc
pop
lock
sbb
push
lea
ja
stc
call
dec
setg
inc
jmp
movsbl
mov
jmp
dec
and
rolb
mov
or
and
and
mov
xor
cmp
sub
out
data16
les
leave
mov
jbe
bound
jle
pop
mov
cmpsb
lcall
dec
arpl
fs
dec
hlt
mov
pop
out
rcrb
sbb
ljmp
and
jns
lock
fstps
in
push
jmp
movsl
cmp
mov
mov
icebp
insb
out
out
orb
movb
lea
je
jge
movsbw
pusha
mov
not
pop
lea
mov
call
shr
pushf
push
jmp
popf
mov
push
push
pop
rcll
or
icebp
popa
mov
push
pop
outsl
or
addl
mov
rol
mov
xlat
mov
mov
mov
lcall
lds
lahf
into
mov
mov
pop
fstps
pushf
xchg
fbld
dec
sub
cmp
fsubrs
jmp
inc
out
enter
push
mov
or
mov
push
pushf
popa
push
or
sbbl
pop
popa
dec
jecxz
xchg
imul
jo
nop
sbb
push
xchg
popa
les
mov
push
xchg
jb
ret
negl
pop
mov
mov
mov
pop
cmpsl
popa
dec
js
push
add
mov
les
cmpsl
outsl
icebp
jnp
jmp
jle
rol
fmuls
decb
push
add
or
and
ret
loop
js
jnp
loop
jle
mov
stos
lcall
xchg
jle
xchg
adc
popa
das
es
jecxz
ret
pop
pop
xchg
mov
repnz
mov
outsl
fmuls
add
nop
add
adcb
add
jmp
dec
mov
mov
pop
mov
jo
lcall
xorb
push
push
nop
xor
aas
in
cmp
les
lret
mov
in
loopne
imul
push
pop
jecxz
in
aad
push
das
xchg
imul
push
jnp
icebp
mov
mov
xchg
mov
popa
pop
mov
cmp
rorl
mov
andb
nop
mov
mov
adc
xchg
out
jno
loopne
mov
mov
push
push
push
ficomps
pop
push
sahf
outsl
or
cmpsb
jno
out
jno
jns
aad
xchg
jle
mov
push
fcmovbe
js
xchg
push
roll
jnp
push
xchg
jo
int3
imul
jne
lock
push
add
add
xchg
insb
sbbl
mov
sub
int3
pop
in
xchg
js
push
lock
xor
lods
sbb
push
pop
cmp
xchg
sub
clc
mov
andb
pop
push
je
mov
shlb
pop
cld
xchg
pushf
cmpl
jl
nop
xchg
dec
andl
xchg
mov
sub
pop
pop
cwtl
xchg
faddl
xor
mov
cmp
push
lock
push
cltd
mov
and
pusha
xor
pushf
out
bound
in
je
stos
jo
ret
les
push
push
sahf
pusha
ds
pusha
mov
loopne
push
pusha
xor
sub
pusha
dec
pop
xchg
push
mov
mov
jno
pop
sar
loopne
and
adc
les
push
push
xchg
mov
pop
popa
pusha
lcall
cmp
pop
outsl
imul
shll
test
lods
divl
pop
fs
xchg
mov
jle
nop
xchg
mov
mov
mov
inc
push
lcall
push
add
movsl
pop
push
xor
sahf
arpl
pop
dec
push
loope
xlat
mov
insl
mov
sbb
mov
xor
add
lock
and
call
test
mov
mov
ret
jle
mov
add
lahf
push
fimuls
push
loop
stc
pop
mov
sbb
pop
pop
loop
mov
adc
or
aad
inc
mov
les
test
cwtl
insb
imul
outsb
cltd
bound
jns
les
in
push
dec
xor
mov
xorl
mov
je
lds
pop
popa
mov
imul
pop
xor
mov
mov
mov
or
mov
jno
xchg
pop
lock
fs
lock
add
and
sar
fadds
je
pop
and
outsl
popa
push
mov
fwait
in
adc
mov
push
cmp
push
jae
aam
cs
mov
jno
mov
fimuls
rcrb
pop
imul
push
in
push
mov
jno
mov
cwtl
pusha
sti
mov
mov
dec
mov
inc
mov
push
cwtl
ret
pop
fsubr
and
fs
bound
loope
mov
fs
pop
xlat
stos
rcll
push
mov
sahf
inc
cmpsl
fwait
jno
push
pushf
pop
jl
nop
inc
test
adc
push
cmpl
xchg
xchg
negl
leave
scas
addr16
and
pop
sbb
push
cld
pop
pushf
je
inc
add
sbbl
movsb
fcomps
pop
imul
or
cmpsl
mov
mov
aad
shl
popa
mov
xchg
push
mov
dec
pop
mov
xlat
pusha
cmp
mov
mov
aas
lcall
test
xchg
push
insl
and
mov
pop
xor
pusha
dec
dec
dec
add
and
push
roll
inc
sub
xchg
mov
popf
mov
mov
andb
sub
xor
rorb
inc
jl
in
xchg
adc
push
xchg
pop
jl
xorl
push
inc
cmpsl
sahf
fsub
ficompl
lcall
ret
mov
pushf
mov
adc
and
push
and
push
inc
mov
push
inc
int3
mov
xor
adc
mov
fs
pushf
mov
je
test
jmp
push
sbb
sub
loop
nop
sahf
xor
subb
mov
mov
data16
sbb
and
bound
je
adc
out
insb
xchg
mov
jle
sahf
fisubs
xor
pushf
fcomps
mov
popa
push
aam
mov
insb
mov
leave
jns
add
test
push
sbb
push
cmp
push
lock
scas
jae
mov
sub
cmpsl
ret
mov
jo
push
pop
push
xchg
mov
enter
pop
jnp
je
cmpsb
push
ficoml
jae
fsts
ret
roll
xchg
xchg
mov
je
imul
les
add
mov
idivl
int3
test
les
mov
movl
and
leave
lock
rolb
mov
ja
mov
js
andb
mov
test
fs
add
lahf
push
jl
push
rolb
nop
repnz
sahf
inc
jle
imul
xchg
push
lcall
lock
cwtl
or
mov
pushf
cwtl
hlt
sub
mov
imul
movsl
fstpt
ret
mov
jns
mov
fnstenv
and
cmpsb
cmpsl
inc
sar
xchg
xchg
dec
jo
addl
dec
int3
fisttpl
push
mov
pushf
movsl
pop
outsb
cmp
push
sub
mov
pop
sbb
mov
loopne
pop
xchg
pop
fxch
inc
mov
gs
pop
fstpl
xchg
mov
imul
adc
push
pop
pop
outsl
das
inc
clc
pop
aad
leave
sbb
sbb
fists
imul
cmpsl
imul
jle
inc
stc
jne
push
push
mov
mov
rol
adc
jmp
into
adc
dec
push
les
jle
xchg
inc
sahf
xor
pop
pusha
inc
popf
cmp
xchg
pop
mov
xlat
cmp
into
lock
popa
mov
loope
lds
xchg
clc
pop
push
sbb
lods
adc
pop
roll
fnstcw
inc
pop
xor
mov
fistpl
stos
mov
hlt
subb
and
xor
push
sbb
stos
adc
push
and
clc
push
call
enter
pop
mov
cmp
in
repnz
addr16
mov
repz
sti
jl
nop
adc
fisttpl
push
or
pusha
cmpsl
push
mov
push
fs
mov
cmpsl
mov
test
mov
in
lock
subl
mov
xchg
sub
sub
jb
leave
lcall
outsl
sub
push
xchg
fwait
test
insl
mov
inc
mov
adc
mov
sub
jno
and
outsb
or
dec
jo
mov
aam
sbb
and
pushf
mov
inc
mov
push
cmp
pop
jne
push
mov
stos
fs
mov
in
std
notb
jecxz
fisubl
xor
xchg
mov
sbb
shll
xor
mov
mov
imul
fmuls
lds
or
xchg
imul
in
adc
jg
cmpsb
xchg
fsubs
cmpsb
fcmovu
in
bound
je
rolb
rcl
fstpl
mov
ret
mov
lea
xchg
xchg
test
mov
lock
mov
xor
xchg
pop
movl
mov
movsl
ljmp
fsubrs
fs
mull
or
cwtl
std
xor
fisubrs
movsb
mov
add
mov
sbb
ret
adc
sbb
ret
scas
lea
mov
mov
adc
fdivrl
jbe
xchg
mov
add
cmp
push
jmp
ret
xchg
cmpsl
push
fidivl
in
inc
and
jmp
daa
pop
jecxz
adc
aam
sub
fstl
push
pop
xchg
push
mov
mov
incb
xchg
addl
cmp
pushf
cmp
mov
sahf
xchg
push
pop
movsl
sub
lcall
cltd
out
mov
repnz
inc
mov
or
xor
mov
cmp
cli
enter
push
imul
mov
icebp
icebp
pop
jmp
mov
cmp
les
in
or
fstps
loope
enter
lock
fcoms
imul
addps
or
push
rcrb
jno
es
xchg
sar
fildl
xchg
xchg
popf
je
fcomps
mov
xchg
mov
sub
clc
xor
push
mov
lods
push
xchg
pop
sbb
nop
test
sbb
cwtl
jecxz
add
jmp
fistpll
cmp
popf
mov
rcl
mov
cli
sbb
add
or
mov
pop
sahf
xor
scas
icebp
pop
push
mov
jge
mov
icebp
cwtl
imul
pop
fimuls
aaa
dec
cmpsb
push
outsl
stos
pop
jno
push
pop
andl
jp
sbb
mov
aad
lea
or
dec
mov
test
xchg
out
dec
mov
lcall
inc
xchg
pop
ret
clc
mov
adc
mov
pop
sarl
push
orl
mov
sub
lock
adcl
dec
test
mov
push
cld
mov
jbe
lahf
xchg
jae
mov
push
insb
jnp
xor
fnstsw
ret
sbb
fldl
out
mov
mov
out
cltd
int3
inc
insb
fs
popa
adc
jl
dec
lock
or
sbb
call
bound
je
cwtl
cmp
jge
fs
js
fsts
rcr
mov
push
loopne
jno
mov
add
pop
xchg
es
fnstcw
addr16
jle
sbb
jno
jb
jno
icebp
test
imul
pop
in
repnz
add
sbb
xchg
cmp
push
jg
pop
data16
js
mov
shll
mov
pop
xchg
in
sbb
or
int
cwtl
pusha
scas
xchg
cltd
mov
ret
clc
pop
shll
and
lods
inc
or
dec
jnp
loop
aam
jns
cmp
mov
and
or
lock
mov
rolb
push
xor
and
shlb
dec
xor
out
bound
ret
push
jae
jmp
mov
rol
insb
push
xchg
cmpsb
loope
movsb
scas
mov
mov
mov
lahf
stos
je
in
mov
mov
mov
push
dec
mov
add
xor
rclb
rol
les
push
mov
mov
leave
or
rcrl
aas
in
cmp
cwtl
ljmp
gs
mov
and
repz
xor
add
sub
les
cld
arpl
cmp
add
std
mov
mov
mov
xchg
fs
xchg
xchg
cmp
std
jb
xchg
popa
cli
cmp
sbb
test
loopne
jb
mov
test
popa
ss
loopne
push
cld
xchg
lds
xchg
xorb
andl
mov
dec
call
pop
lret
xchg
push
mov
mov
push
cwtl
push
mov
jo
rolb
xchg
push
cmp
test
xchg
sarl
popa
cmc
clc
cmp
cmpsb
and
xchg
imul
mov
xchg
push
jp
dec
lock
add
mov
stos
add
std
inc
ret
mov
stc
sahf
mov
push
mov
sarl
mov
mov
movsb
fs
fs
test
mov
mov
lcall
mov
imul
add
arpl
std
adc
orb
pushf
mov
xorb
xor
inc
dec
jge
push
jl
js
mov
add
ret
out
adc
mov
add
test
adcb
fcmovb
jbe
mov
mov
mov
push
mov
jns
add
lahf
and
std
mov
negb
push
jmp
pop
cmp
push
adcl
pop
jb
cwtl
inc
popf
pushf
lcall
data16
dec
mov
arpl
and
xchg
push
or
push
arpl
push
sub
mov
push
add
pop
lods
xor
jno
rcr
imul
mov
repz
add
jecxz
sbb
fisttps
push
and
sbb
fs
nop
xchg
push
sbb
je
jae
adc
push
mov
fists
mov
push
divb
pop
sti
popa
xchg
xorb
pop
adcb
xor
fdivs
mov
pop
aas
push
sbb
xlat
pop
dec
fbld
xchg
push
add
mov
jl
popa
loop
adc
push
hlt
jo
or
popa
push
push
and
push
push
push
enter
popa
mov
jg
xchg
cld
icebp
adc
loope
es
out
inc
sub
iret
push
dec
and
andb
dec
rcll
dec
mov
nop
cmp
scas
popa
cmp
mov
pusha
or
xor
gs
lds
clc
sbb
inc
push
push
jae
popa
push
call
pop
push
mov
popa
push
jo
sarb
test
ja
sbb
insb
cmpl
jno
aaa
sbb
add
pop
lcall
rclb
mov
jo
stos
ficomps
push
jno
pop
push
hlt
call
icebp
test
push
mov
adc
jns
and
ret
pop
xor
cltd
loopne
mov
sbb
lods
push
sbb
les
mov
mov
mov
sub
add
pop
fnstsw
xchg
into
pusha
cmp
dec
sarl
jb
repnz
add
fnstenv
bound
enter
pop
or
xchg
xchg
cmpsb
fld
jmp
bound
insb
cwtl
pop
fmuls
jno
jb
xchg
push
push
fsqrt
in
je
cwtl
loopne
mov
sahf
xchg
test
pop
bound
or
sub
sbb
xchg
clc
call
je
cwtl
shl
jb
xchg
addb
inc
or
jb
xchg
push
or
cld
out
je
cwtl
enter
test
cwtl
mov
jb
fs
or
and
adc
cld
xchg
add
fxch
bound
icebp
mov
xchg
xorb
pop
sub
and
je
cwtl
hlt
fadds
imul
or
jno
jb
xchg
cmp
jb
in
mov
jno
pop
xchg
cwtl
stos
fld
fidivrl
pop
adc
ljmp
mov
jb
push
push
jo
outsb
icebp
jp
mov
enter
out
clc
jb
xchg
xor
inc
jno
pop
push
fs
cwtl
test
xchg
jb
xchg
mov
jno
sbb
icebp
add
adc
mov
stc
cld
int3
pop
sbb
bound
icebp
shlb
xchg
cld
dec
mov
bound
adc
out
fcmove
fld
jno
adc
rcrl
sub
sbb
push
jb
xchg
in
fld
shlb
in
fcoml
push
aaa
je
scas
xor
shlb
xchg
icebp
xchg
xchg
push
fstps
icebp
and
push
icebp
pop
bnd
xchg
int3
push
sahf
jb
xchg
test
push
pop
sub
jno
jb
movsb
mov
test
pop
xchg
icebp
test
xchg
bound
and
xor
cwtl
or
cld
jb
xchg
in
fld
bound
nop
jb
xchg
pop
dec
mov
addr16
icebp
add
repnz
loop
fnstcw
cwtl
sahf
icebp
mov
outsb
fstps
push
push
xor
and
adc
xchg
lock
shlb
je
cwtl
xchg
icebp
mov
xchg
outsb
fsts
or
cwtl
adc
adc
xchg
lock
les
jb
adc
dec
add
aam
je
pop
mov
mov
mov
je
bound
sub
adc
pop
popa
dec
xchg
xchg
mov
insb
icebp
pop
sub
cmp
sbb
fprem
bound
hlt
subb
je
cwtl
jo
fs
xchg
addr16
popa
push
add
imul
xchg
add
fxam
out
repnz
cmc
icebp
imul
pop
xchg
push
pop
fstps
push
je
mov
aad
sbb
call
mov
pop
push
jbe
jo
push
jmp
pop
sub
xchg
or
fldlg2
mov
les
pop
aam
call
and
xor
sbb
jbe
xchg
xchg
cmpsb
mov
enter
out
cwtl
adc
and
xchg
xor
push
jb
jle
mov
xchg
test
fnop
clc
icebp
add
xchg
sbb
fnstcw
bound
push
sbb
icebp
mov
xchg
stos
mov
je
cwtl
push
icebp
sbb
xchg
push
dec
fstps
insb
jb
jp
mov
dec
sub
mov
xchg
dec
mov
lds
push
pop
cmp
movsl
cmp
or
insb
jg
or
test
sbb
dec
mov
lods
push
and
pop
andl
push
push
mov
push
test
push
sahf
pop
aam
bound
push
mov
xchg
jle
arpl
sbbl
jno
push
mov
pop
jo
push
test
jno
add
in
imul
sbb
jo
sbb
jno
jge
push
rol
sbb
pop
xchg
pop
and
cmpsb
mov
adc
repnz
push
loopne
mov
pop
sub
daa
xchg
bound
aam
dec
mov
push
out
sub
bound
pop
ret
sub
push
test
xlat
lahf
mov
stos
pop
outsl
cmp
mov
les
sti
es
pop
cwtl
mov
mov
pop
inc
adc
ror
mov
les
pusha
sub
fldcw
push
push
xchg
and
sbb
shrl
nop
xchg
mov
aaa
daa
cli
sbb
pushf
popa
mov
mov
mov
mov
jle
push
add
icebp
sbb
or
add
cmp
xorl
aaa
push
push
mov
or
arpl
cmp
lahf
fs
and
mov
sahf
cmpsl
mov
pop
jno
shlb
dec
push
jo
test
addb
mov
cmp
and
sarl
nop
les
fldcw
insb
add
sbb
cmpb
pop
jp
push
int
addr16
cmpsl
mov
cli
pop
icebp
mov
addr16
nop
mov
jl
cmp
jb
stc
jecxz
pop
lds
lahf
es
or
jno
subl
pop
sti
ror
jo
pop
cs
fistps
js
and
pop
inc
adc
mov
mov
xchg
mov
xchg
ljmp
fldt
sbb
fadds
shlb
iret
leave
adc
jo
enter
cmp
push
sahf
xor
mov
test
xchg
xchg
xchg
dec
loopne
jge
jns
jmp
arpl
fisttpl
jb
jne
repz
cmp
loop
dec
or
out
ss
xorl
xchg
out
mov
mov
cmp
jae
ds
rcrb
push
push
push
nop
idivb
iret
dec
xchg
daa
jge
fisubl
fwait
bound
adc
inc
xchg
js
aaa
loop
loopne
pop
iret
cmp
ja
mov
mov
ret
je
cwtl
in
jl
imul
or
adc
xchg
mov
addb
cltd
adc
stos
pop
push
mov
push
xchg
aaa
jno
pop
xchg
cmpsl
mov
mov
rcll
or
jno
out
xor
shrb
sbb
dec
sbbb
int3
adc
aad
jno
xorb
push
js
in
jo
test
xor
icebp
mov
mov
lea
mov
icebp
mov
and
jae
rcll
fidivl
andb
push
add
jo
in
dec
outsb
int3
fwait
nop
jnp
jo
out
out
icebp
jmp
ret
icebp
ss
aaa
mov
cmp
jae
inc
add
sbb
dec
rep
jae
xor
mov
fxch
subl
mov
inc
push
mov
cltd
daa
xor
xor
icebp
sahf
inc
mov
xchg
mov
mov
or
xchg
jb
jae
inc
int3
jbe
xlat
mov
mov
pusha
sub
sbb
xlat
loope
imul
sub
xor
icebp
mov
cltd
mov
into
std
insb
mov
xchg
xchg
enter
mov
jo
incl
bound
jne
jbe
cmpsb
mov
lds
xchg
xor
xchg
outsl
xor
jl
inc
insl
lret
mov
cli
iret
xchg
inc
lahf
je
mov
outsb
jmp
sarb
lcall
xorb
ds
sbb
ds
cwtl
cmp
lods
aam
xlat
test
mov
movsb
mov
das
mov
lods
out
mov
xor
push
das
and
test
dec
loopne
nop
cmpsl
mov
ret
xor
fmull
push
bound
xchg
xor
jns
mov
pop
lea
pop
mov
xchg
enter
and
xor
xchg
sub
cli
ret
xlat
lock
pop
add
mov
xor
dec
adcl
push
adc
je
mov
test
cmp
and
pop
cmpsb
lock
jae
xor
pushf
pop
les
jae
popf
jo
jmp
pop
and
les
jns
pop
sbb
mov
pop
sbb
pop
mov
fwait
outsb
jle
movsb
mov
sbb
test
or
nop
je
cmp
adc
insb
jo
dec
mov
add
push
outsb
js
sahf
out
inc
ret
popf
pop
testb
in
dec
jmp
stos
pop
outsb
lods
mov
mov
ret
pop
xchg
mov
jns
push
push
fistl
inc
pop
adc
scas
rclb
push
pop
mov
push
jne
cmp
dec
popf
or
add
and
loope
pop
scas
scas
lods
adc
loopne
jo
add
int3
adc
inc
test
cmpl
fldenv
jno
cmpsb
and
je
jb
outsl
rorl
dec
sbbl
addb
into
cmp
and
into
imul
std
jle
sbb
popa
jae
pop
enter
movsl
div
clc
dec
fs
pop
lret
jmp
mov
adc
jb
pop
lea
das
and
xchg
cmp
jno
cmovle
mov
xchg
cli
mov
add
shll
mov
popa
ss
jp
cmp
lds
pop
outsl
adc
cmpsb
jnp
fwait
inc
dec
aam
mov
mov
mov
add
fxam
dec
dec
push
mov
mov
sbb
cmpsl
cs
loopne
jge
mov
jno
loope
fisubs
mov
cmpl
pushf
rcrl
mov
mov
push
mov
pop
pop
xor
imul
add
xchg
popa
mov
jp
sbb
test
mov
ja
div
sbb
add
mov
mov
xchg
mov
jmp
loope
cmp
fldt
push
pop
fstl
mov
mov
push
sbbl
movlps
mov
clc
dec
aad
test
jmp
lods
push
arpl
mov
div
mov
hlt
call
adc
addr16
inc
js
xchg
rcrb
pop
mov
outsl
and
in
mov
pop
jge
jo
jnp
dec
mov
test
cmp
pop
dec
mov
push
cmp
pop
insl
sbb
testb
mov
into
pusha
adc
dec
pop
push
fldcw
stos
push
mov
scas
mov
jb
addl
arpl
inc
outsl
xchg
in
jne
jle
mov
test
mov
or
dec
decl
sbb
clc
mov
popf
es
insl
xor
test
adc
lock
cmp
adcl
sub
sarb
shrb
adc
stc
pop
sbb
imul
andb
aas
add
cwtl
and
sub
adc
call
je
outsl
pusha
imul
negb
xchg
pushf
cmpsl
outsb
or
cmp
lret
jo
fs
jbe
popf
sti
flds
loopne
xor
xor
push
pop
pop
icebp
mov
scas
inc
shlw
inc
cmpb
add
ret
jne
fst
lds
and
mov
popf
clc
mov
cmp
gs
add
mov
jae
mov
xor
aam
add
adcl
xchg
cmc
movsb
or
jo
sub
dec
outsl
push
into
dec
in
pop
mov
sarb
pop
dec
pop
movsb
cmp
aam
test
xchg
push
sbbl
mov
cwtl
mov
mov
in
adc
xchg
jo
in
mov
xchg
shrb
mov
enter
mov
mov
dec
jbe
and
icebp
sbb
cmp
push
imulb
int
lea
pop
jge
mov
lods
bound
fisttpl
fistpll
dec
popf
xchg
jbe
jle
jg
cld
push
push
dec
cmp
lods
push
ficompl
and
adc
pop
cmp
stos
sub
dec
rcll
test
aad
lds
mov
mov
cmp
cwtl
jbe
aaa
cltd
icebp
scas
repnz
imul
mov
pusha
xorb
imul
ficomps
push
ljmp
andb
inc
lret
stos
add
pop
push
jb
mov
gs
lahf
mov
inc
and
mov
add
mov
icebp
into
push
das
push
or
lock
in
xchg
in
add
cmp
rorb
hlt
lcall
sti
jb
push
loopne
icebp
out
fs
scas
icebp
or
push
icebp
incb
jo
fsubs
stos
sub
cmp
in
mov
mov
hlt
test
shlb
fsincos
shlb
lds
adc
cwtl
jle
daa
je
fcoms
icebp
sbb
ret
icebp
fwait
xchg
lret
inc
andb
imul
out
xchg
mov
stos
popa
cmp
stos
into
loopne
add
add
push
inc
mov
lcall
js
loopne
pusha
shll
push
cmpsl
pop
sbb
pop
push
mov
cli
js
xor
pop
push
push
jl
in
pop
and
pop
fstp
std
testl
ds
incb
cmc
gs
repnz
jl
sarb
into
dec
loope
cmp
adcb
jl
pop
dec
ret
shrb
imul
pop
roll
orb
and
xchg
aad
sub
xchg
sub
xchg
pop
loopne
js
fdivl
mov
jp
push
inc
pushf
popf
adc
repz
mov
adc
scas
sbb
aas
xchg
or
stos
cmp
scas
repnz
lahf
sub
jno
test
add
leave
cwtl
icebp
lock
andl
jbe
push
scas
add
push
or
jo
leave
xor
xchg
adc
js
jns
jno
inc
outsl
add
dec
loope
xchg
mov
ss
pop
jo
push
sahf
stos
push
outsb
jno
bound
mov
clc
sbbb
test
pop
mov
mov
adc
not
rorb
lock
int3
loopne
adcb
pop
push
lock
adc
je
in
cmp
and
push
pop
aaa
je
adcb
push
int3
rclb
add
cmp
ss
mov
inc
mov
inc
std
repnz
add
dec
pop
test
dec
lahf
or
inc
add
push
push
mov
add
adc
xlat
push
pop
mov
enter
outsl
popa
shll
nop
fdivrl
jbe
inc
outsl
pop
popf
lds
add
je
pop
ja
hlt
shll
insb
popa
jno
mov
les
push
rolb
inc
xorb
je
and
les
jle
sbb
push
inc
cmp
mov
pop
ja
push
rol
push
dec
pop
cmp
push
imul
mov
fadds
add
dec
push
jb
into
cwtl
in
stos
call
ja
jmp
add
mov
mov
popa
lret
imul
sahf
xchg
adcb
jl
cmp
cmp
outsl
pop
push
xor
arpl
jno
iret
jb
loopne
les
and
and
test
mov
cmp
push
cmp
add
pop
sbb
out
loope
inc
sbb
add
xchg
jo
add
pop
shll
cmp
les
push
cmp
xlat
sbb
dec
loope
mov
cmp
stos
mov
in
aas
cmp
cli
xchg
fisubl
or
jnp
popf
jge
aaa
data16
imul
pop
sarl
lock
aad
mov
idivb
xchg
and
xor
cli
cltd
mov
xchg
mov
push
cmp
adc
or
test
and
fs
add
jae
jo
call
cmp
xchg
fisubl
adcb
add
and
icebp
mov
je
clc
jo
cld
insb
addb
hlt
lods
imul
inc
outsl
lds
adc
notb
inc
cmp
jl
rcr
mov
les
pop
fmulp
jo
mov
jmp
mov
cmp
sbb
js
cmp
mov
cwtl
or
movsl
mov
and
loop
jno
dec
popf
test
push
popa
pop
nop
loope
pop
sahf
loopne
push
aam
int
fidivl
mov
inc
subb
jno
pop
fcmovne
out
mov
gs
push
sbbl
xor
lock
mov
dec
loop
jbe
mov
loopne
dec
out
inc
xchg
xlat
mov
aad
lcall
sahf
rcl
xchg
push
rclb
xchg
cs
fistl
test
pop
ss
sahf
inc
das
xchg
fs
imul
lret
in
ds
pop
cmp
xor
jle
dec
lea
mov
fs
loopne
loopne
mov
dec
je
inc
fstps
inc
sahf
inc
pop
sub
jne
and
mov
lahf
adcb
dec
loop
bound
pop
mov
mov
lret
mov
call
push
cld
jecxz
mov
andb
cmpb
shll
push
mov
push
aam
adc
call
cltd
push
and
mov
fs
jmp
fstps
sbbb
loopne
flds
xchg
cmp
test
sub
stos
loopne
xchg
arpl
push
add
lds
dec
cwtl
inc
iret
jmp
adc
out
mov
inc
leave
movsb
pop
das
xor
icebp
fcmovnbe
lds
push
in
and
orb
aaa
and
sub
cmp
ja
pop
mov
jle
adc
push
cmp
sub
test
shr
and
sbb
fcmovnu
iret
les
xchg
mov
enter
sub
and
mov
jns
mov
out
ret
adc
test
jno
mov
push
test
push
ljmp
lds
mov
js
dec
mov
mov
lahf
pop
dec
test
nopl
loop
adc
mov
cmp
je
xchg
mov
push
mov
push
imul
orb
inc
cmpsb
ror
or
xor
clc
add
mov
shll
jb
cmpsb
iret
cmp
mov
jb
mov
add
xchg
imul
dec
leave
lcall
leave
or
xchg
xchg
pop
jl
adc
fucom
xrelease
in
push
inc
xor
pop
das
popaw
jno
xchg
not
adc
xchg
pop
into
shrl
int
out
gs
lods
pop
xchg
dec
imul
fistpll
adc
out
add
mov
cli
dec
lcall
jns
je
stc
test
sbb
mov
mov
insb
jae
push
mov
push
subb
popf
fs
movsl
shr
out
pop
imul
repnz
int3
mov
subl
add
pop
push
hlt
push
popf
mov
scas
xchg
adc
sbb
fwait
sbb
fldt
pop
add
ss
push
add
jle
into
rcrb
mov
pop
push
dec
scas
scas
lret
cmpsb
mov
insl
pop
sahf
data16
pop
pop
mov
int
jns
jo
dec
mov
into
mov
hlt
xchg
push
pop
push
cmp
mov
data16
xchg
aas
add
int
add
aaa
pusha
mov
fiadds
sub
out
aam
mov
mov
fisubl
test
stos
aam
push
fimuls
jae
xchg
or
mov
int
shrb
or
xchg
pop
insl
pop
adc
in
mov
or
mov
add
adc
fstpl
lahf
dec
dec
jge
pop
mov
movsb
cmp
adc
fisubs
cmp
cmp
ja
inc
cmp
pop
jbe
dec
jne
ret
dec
mov
push
mov
lcall
movsl
cmp
test
stos
mov
mov
cmpsl
or
ss
push
outsb
xchg
dec
jb
loopne
adc
jl
adc
mov
pop
int3
in
bound
push
mov
mov
clc
add
mov
popf
mov
cmpsl
pop
int
mov
jg
filds
mov
xchg
mov
out
xchg
inc
inc
outsl
inc
pop
fldt
je
rorl
mov
sub
sahf
mov
cs
popf
cmp
imul
popf
rcrl
in
fs
nop
cmpb
popa
push
xchg
imul
jns
cmp
nop
sub
cmp
in
sub
inc
aad
test
int
sub
xlat
inc
jnp
ret
mov
add
jo
fdivrs
popa
les
cmc
loope
test
fcom
loopne
outsb
adc
js
xchg
popf
repnz
cwtl
xor
jo
mov
push
xchg
insl
pop
xchg
or
jno
aam
xor
push
push
sbbl
cli
xchg
pop
int3
xorl
mov
sub
xchg
loop
sbb
mulps
jb
aad
inc
jno
xor
sbb
push
xor
adcl
mov
xor
testb
fs
movsl
pop
pop
cmpsb
aam
icebp
sbb
mov
adc
mov
sbb
pop
bound
mov
leave
insb
and
jl
bound
les
jp
inc
mov
pop
push
leave
xor
imull
flds
jo
dec
aas
cmp
jne
xor
push
mov
rorb
imul
mov
xor
mov
into
scas
mov
push
lahf
push
adc
sbb
jbe
ds
mov
les
fsubr
ljmp
repz
jo
pop
jbe
push
inc
test
add
shll
stos
push
daa
out
cwtl
in
inc
divb
mov
mov
dec
out
icebp
mov
mov
int3
dec
icebp
mov
pop
mov
lds
inc
pop
movsl
je
ds
insb
jne
cmc
repz
jb
jl
xchg
stos
mov
out
adc
inc
loope
fdivrs
xchg
xlat
mov
ss
in
sub
add
sbb
push
inc
addr16
adc
enter
sarb
les
flds
push
ljmp
les
add
mov
inc
insb
adc
mov
jae
pop
in
pop
fsubr
sbb
pop
mov
xor
cmp
push
or
out
int3
out
push
add
imul
sub
fidivrs
out
cmpsb
in
orl
dec
fimull
push
sub
mov
popa
or
push
mov
mov
shrl
dec
push
in
mov
flds
cwtl
adcb
stc
pop
dec
int3
mov
push
scas
sbb
cmp
sbb
pop
mov
dec
cmp
lcall
ljmp
shufps
push
pop
pop
pop
push
fsts
loope
shr
sbb
sbb
or
stc
add
sbb
adc
mov
dec
push
fldenv
mov
std
push
andl
jne
pop
cwtl
dec
enter
insl
mov
test
imul
shll
dec
dec
sub
popa
pop
sbb
push
fstps
ret
dec
cltd
inc
jne
mov
icebp
mov
pop
popa
cs
sub
std
in
int
fadd
fldenv
and
jo
jl
les
aam
push
mov
ljmp
cmp
cmp
orb
jl
jb
test
fisubl
sub
ljmp
push
pop
mov
repz
and
gs
pop
jge
fcomi
xchg
test
fdivrl
jno
sbb
je
and
insb
cmpl
enter
les
mov
jne
xor
les
movsl
cmc
jno
xor
mov
xchg
jo
push
jbe
dec
cmpsl
push
scas
cmc
enter
inc
xor
push
mov
fcoms
in
std
ficomps
add
lcall
fistps
rcrl
sahf
mov
fwait
loope
push
movsl
push
dec
pop
mov
rolb
push
cmp
aad
jo
mov
and
loope
dec
inc
pop
xlat
aam
jg
inc
lret
mov
xchg
fidivrl
mov
push
pop
mov
mov
cmpl
mov
cltd
fistpl
pusha
jae
pop
pop
andl
mov
jne
mov
push
jg
dec
imul
loopne
push
stos
mov
data16
cmp
lea
add
les
aam
dec
cmp
sbb
cwtl
andl
add
or
in
inc
jns
js
cmp
pusha
fcmovne
test
in
pop
js
pushf
imul
cmpsl
gs
xor
cmp
fwait
cmpb
vpsubusw
orl
cwtl
les
jge
lahf
push
push
jl
int3
and
fisttps
push
push
inc
lds
leave
fst
push
movsw
jo
cmp
sti
shll
imul
clc
in
sub
push
sub
sahf
loopne
movsb
imul
roll
xor
inc
mov
pop
push
mov
xchg
fisttpll
sub
and
mov
cmp
fs
andb
les
mov
push
mov
pop
push
clc
jle
mov
inc
cmp
add
mov
mov
loope
fwait
dec
pop
xchg
mov
jns
cs
shll
sbb
into
push
scas
cmp
xor
or
pop
cmp
mov
icebp
rcll
pop
loopne
test
sti
xor
add
ret
sub
push
push
push
rclb
jns
cmp
inc
cmc
je
cld
insl
push
sub
sub
inc
inc
xlat
xchg
or
inc
mov
sbb
into
outsb
ret
push
mov
aaa
rclb
push
xchg
iret
neg
mov
cmp
sbb
pop
xorl
js
jle
mov
cmpsl
xchg
into
push
repnz
push
outsl
insb
negl
scas
and
mov
mov
mov
pop
xchg
aas
cmpsb
je
flds
bound
xlat
sbb
push
and
icebp
shlb
stos
sub
sbb
dec
test
cmp
xor
mov
repz
shll
pop
cmp
hlt
cltd
arpl
xor
es
pop
aas
inc
mov
scas
and
lods
icebp
sub
psrlq
dec
cmc
sahf
cltd
adc
cmpsl
ja
inc
xor
out
aam
idivl
xchg
fs
aaa
lds
imull
dec
popa
xchg
add
mov
pop
divb
dec
dec
arpl
jb
repz
cmp
adcl
mov
cmpsb
cmpsb
pop
pop
pop
idivb
jbe
fs
loop
test
add
jg
xchg
xor
jbe
mov
hlt
cmpsl
stos
out
sbb
jmp
fs
outsb
pop
jnp
mov
repnz
or
inc
jle
mov
xchg
adc
or
jb
mov
jp
ja
mov
mov
jno
cmp
inc
mov
addr16
jae
jo
adc
nop
cmp
adc
dec
sbb
pop
push
push
mov
addr16
adc
jmp
xor
xchg
test
mov
mov
sti
add
add
arpl
gs
fsubs
pop
gs
dec
add
push
arpl
nop
adc
int3
pop
jns
pop
sub
pop
in
push
mov
adc
clc
and
adc
cli
shrb
mov
adc
repnz
fadds
mov
dec
pop
lods
sub
sbb
fldenv
scas
bound
aas
adc
call
inc
icebp
addb
jno
pop
sub
mov
addr16
pop
movsb
xor
mov
lods
in
mov
insb
mov
addr16
xchg
push
lds
scas
shlb
push
jecxz
insb
xchg
xchg
in
fisubs
dec
xorl
gs
lods
cmp
fdivs
hlt
pop
fiadds
ret
xor
mov
xchg
push
bound
pop
insb
lds
jb
jno
hlt
mov
loop
shl
std
push
push
hlt
add
gs
stc
cmp
and
loopne
arpl
stc
xchg
mov
movsb
rep
cmp
insb
lcall
test
sbb
pop
pop
fstp
pop
fwait
lds
mov
push
ret
cltd
jo
mov
les
out
xor
fs
sahf
push
daa
pop
pop
ret
insl
cmp
in
pop
pop
dec
ret
sbb
pop
cmp
push
sub
mov
bound
xchg
xlat
xor
xchg
adc
xor
pushf
xchg
sbbl
sbbb
aam
sbb
sbbl
aas
flds
adc
pop
mov
mov
or
scas
icebp
cmc
jle
cmp
aas
push
lahf
js
xchg
xchg
mov
js
push
jecxz
jbe
cld
sbb
mov
lds
mov
lods
sub
rcll
cwtl
dec
imul
push
mov
icebp
mov
inc
movsl
addr16
push
mov
fsubrs
xchg
push
mov
ljmp
sub
gs
push
mov
imull
jbe
push
sbbl
mov
pop
mov
and
or
lea
push
data16
les
insb
cmp
ljmp
add
or
mov
sbb
xchg
les
xor
jb
sbb
xchg
cmpsl
sub
je
lahf
sub
icebp
push
mov
pop
lods
jne
in
xchg
pop
jns
sub
xchg
jo
dec
cwtl
and
xor
jne
jno
mov
cmp
int3
arpl
out
xchg
insb
mov
jno
dec
stc
insb
cmc
fmuls
pop
loopne
imul
data16
insb
push
andl
xorl
or
jne
popa
xchg
pusha
loop
test
hlt
loope
es
ja
push
out
stos
push
rcll
push
adc
lret
insl
inc
inc
push
clc
pushf
push
jg
and
nop
pop
lcall
out
cli
addr16
mov
and
jg
test
je
mov
cmp
repz
pop
les
xchg
into
fidivs
push
jo
std
pushf
cmpl
jge
push
sahf
pop
pop
mov
xor
cmp
test
fstps
mov
xchg
pop
or
cltd
xchg
mov
lds
addb
icebp
std
into
sub
out
dec
xchg
mov
pop
adc
and
aam
jle
cmpsb
pop
clc
imul
orl
sub
fdivrs
fsubl
pop
js
cltd
sbb
scas
je
mov
inc
mov
push
jo
pop
fdivl
les
hlt
sbb
or
mov
push
test
mov
rclb
mov
mov
sub
cmpsb
and
lea
testl
xchg
cmpb
jo
test
fcomps
xchg
popa
je
or
int3
pop
mov
sbb
sub
jae
testl
cwtl
ss
sub
ret
movsb
inc
or
loopne
icebp
daa
jo
pop
push
xchg
cld
scas
adc
pop
xor
insl
fisttpll
imul
into
movsb
sub
add
xchg
push
mov
fwait
push
xor
and
mov
loopne
pop
dec
lret
orb
mov
jo
mov
into
jne
aam
cmp
adc
pop
mov
and
pop
mov
jg
mov
pop
cmpsb
mov
push
data16
int
sti
mov
mov
pop
aas
dec
xor
mov
lock
sbb
pop
adc
mov
int3
popf
cmp
ja
addl
daa
inc
sub
clc
int
jo
lds
xchg
push
fsubs
sbb
sub
ljmp
mov
mov
cmpsl
in
ljmp
cs
xchg
pop
cmp
mov
fnsave
and
jl
scas
pushf
loope
jnp
pop
leave
push
addb
outsl
sbb
push
mov
sub
lea
sahf
mov
jnp
xlat
pop
mov
je
push
jne
loop
loopne
int
mov
rorl
int3
cmp
mov
js
mov
and
add
xchg
into
aam
and
mov
sarb
sbb
pusha
adc
mov
cmpsb
inc
push
popa
lahf
lds
scas
movsb
inc
mov
add
push
cwtl
aas
mulb
push
mov
les
cmp
and
fldenv
int3
add
stos
push
adc
les
inc
aad
int3
xchg
push
lret
adc
pop
in
xchg
mov
mov
sub
call
je
push
jae
mov
pop
xor
std
adc
push
fidivrs
daa
or
add
jo
fldenv
imul
sahf
jp
pop
pop
inc
pop
xor
fwait
jbe
fs
push
fwait
inc
daa
mov
pop
mov
xchg
shrb
enter
aaa
inc
mov
frstor
test
sub
cwtl
push
gs
rcrl
jo
hlt
cmp
aad
cmpsl
xchg
sub
sbb
jae
scas
stos
gs
inc
arpl
jb
fs
jecxz
jmp
outsb
jg
int
mov
inc
sbb
push
jae
and
mov
dec
mov
fsubl
push
fldt
jae
fs
sub
xchg
push
std
mov
stos
push
xchg
pop
mov
call
scas
add
sahf
mov
in
jge
add
or
fcompl
pop
sub
sahf
mov
xor
fdivrs
push
cld
sti
xchg
add
outsb
in
movb
push
enter
data16
in
bnd
fldcw
cmp
cwtl
sub
fisubrl
mov
jle
jecxz
cmp
cmpsb
loopne
sbb
dec
adc
imul
xchg
clc
mov
add
sbb
mov
pop
cmp
cli
pop
fdivs
insb
cltd
int
jb
inc
enter
das
fstpl
push
pop
jae
mov
cmpsl
sub
pop
or
in
enter
cwtl
pop
add
inc
push
out
cmp
sbb
std
pusha
jl
je
pop
jno
rcr
pushf
es
imul
jg
rclb
les
xor
cmpsl
cmp
and
fadds
adc
fcmovbe
dec
adc
adc
sbb
sub
jl
mov
addr16
lds
loope
ror
xchg
addr16
hlt
fadds
callw
jne
pop
mov
push
nop
jb
imul
push
addl
mov
rcll
es
insb
popa
loope
add
stc
cltd
movsb
ds
arpl
cmp
add
loopne
mov
jle
xchg
cmc
sbb
fsub
xchg
add
xor
mov
divl
sti
loope
mov
aad
pextrw
imul
jecxz
xchg
test
and
arpl
shl
add
sub
mov
and
mov
push
xchg
aam
repnz
aaa
stos
rcr
in
insl
mov
and
pop
mov
call
mov
mov
cmc
je
popa
jl
xlat
jmp
mov
push
mov
add
fs
dec
add
test
or
xchg
xchg
fstps
inc
jl
inc
lret
mov
dec
scas
aaa
mov
mov
pop
cmp
push
dec
sarb
mov
pop
lret
xchg
addr16
bound
mov
xchg
jo
jb
sqrtps
les
dec
test
in
imul
daa
mov
test
xchg
dec
fcoms
inc
push
mov
cwtl
int3
jnp
mov
ja
xchg
pop
lods
insb
divl
cmpsl
cmp
pop
mov
cmpsl
or
mov
mov
jg
mov
mov
loopne
lcall
test
push
in
inc
shl
fcompl
int
fs
imul
lret
in
pop
out
fldenv
jne
fldenv
repnz
nop
fs
je
out
aad
mov
test
push
or
adc
dec
test
test
xchg
out
jne
add
lea
rorb
and
ror
fldenv
xchg
filds
sbb
lods
test
fldl
push
pop
les
push
sbb
lret
cmpsb
mov
lcall
loop
inc
aad
xchg
push
pop
mov
mul
popa
lods
dec
cmp
rorl
fcoml
les
xlat
ficoml
shll
xor
pop
push
pmullw
add
sbbl
push
imul
and
inc
mov
sub
dec
imul
jl
nop
mov
test
rcl
loopne
shlb
mov
je
cmp
or
fwait
add
inc
sbb
in
jge
test
sub
push
mov
jge
test
push
shlb
cmp
and
imul
pop
pushf
and
mov
ficomps
pop
mov
cli
mov
gs
adc
pop
pop
push
mov
ror
pop
xchg
jo
ja
jne
xchg
fsubr
push
in
mov
dec
or
push
push
pop
xchg
xor
mov
cmp
xchg
fiadds
pop
pushf
mov
cmp
loop
lock
out
mov
mov
push
subl
outsl
xor
in
push
or
sti
pop
lds
out
sbb
push
scas
nop
lds
xorb
xor
pop
out
pop
out
adc
push
lods
mov
pop
leave
xor
bound
dec
push
icebp
adc
xor
adc
adc
jno
xchg
int3
sti
mov
push
mov
sub
mov
jge
lcall
rcl
cmp
adc
jle
or
add
add
pop
cmp
sbb
out
js
and
pop
inc
scas
hlt
pop
dec
ret
js
and
es
push
cmp
fstpl
mov
cmp
jle
nop
push
mov
dec
test
js
inc
lods
lock
or
insb
cmp
or
lds
cwtl
cli
xchg
xorb
js
test
mov
sbb
sub
out
stos
fnstcw
push
push
cwtl
flds
jne
mov
dec
mov
psubb
cmc
ss
pop
push
jno
jecxz
out
mov
sub
mov
adc
fidivs
dec
xor
or
lds
push
xchg
fdivp
pop
mov
mov
push
mov
mov
push
cmpsb
mov
scas
fnsave
popa
mov
movsl
cs
inc
cmp
inc
xlat
pop
les
xor
outsl
mov
and
scas
push
in
loopne
fmull
lret
bound
jecxz
dec
mov
ret
sahf
mov
xchg
jl
sub
or
mov
inc
scas
cmp
inc
lret
pop
mov
xchg
push
add
fisttps
push
xor
lret
fldcw
cld
out
loopne
inc
movsb
and
pusha
mov
add
jp
or
pop
fldcw
jg
dec
adc
loop
lock
sbb
ljmp
cmp
add
mov
pop
push
jb
clc
movsb
fnstcw
stos
sbb
pushf
jle
loope
lds
mov
pop
fdivrp
aam
and
push
or
push
pop
push
mov
ja
sahf
pop
aad
push
loopne
pop
pop
dec
nop
mov
sub
dec
cmpsb
sbb
pop
dec
pop
jo
cs
into
fwait
jns
mov
testb
adc
cmc
lret
es
sbbl
stos
sbb
fcmovnb
jb
xchg
jl
mov
cmp
push
mov
dec
sub
sarb
jmp
shrb
mov
xchg
imul
fsubrl
push
shll
lcall
popf
dec
mov
mov
fcompl
and
mov
sbb
push
cmp
shll
mov
aaa
ja
scas
pop
pop
pop
sbb
and
les
mov
leave
ja
sub
les
sbb
ja
push
subw
shll
imul
insb
sbb
sbb
or
pop
insb
xchg
ljmp
mov
cmp
add
push
rcrb
sarl
mov
stc
pushf
push
jecxz
push
lock
pop
cmp
xchg
loope
sbb
lahf
xchg
dec
mov
mov
cmpsb
push
pop
outsb
sahf
fbld
js
mov
dec
shrl
mov
cltd
ljmp
cmp
sbb
movsl
mov
scas
fs
cmp
jns
cmpsb
xchg
arpl
clc
shll
push
mov
push
shlb
xor
outsb
lcall
popa
or
mov
mov
outsb
shll
sti
pop
loope
pop
push
stos
loopne
mov
jmp
xor
in
hlt
cmp
negb
ret
pop
fistl
lds
pushf
call
pop
pop
inc
mov
and
fistpl
rcr
push
aaa
or
mov
adc
lods
mov
adc
xchg
push
mov
test
mov
stos
jge
cmp
lds
cmp
lahf
xor
int3
clc
fs
inc
andl
cmp
sub
xor
sbb
cmp
cmpsl
sub
ljmp
pop
jo
in
fadds
scas
jmp
je
mov
data16
mov
in
popa
and
fsts
les
mov
dec
shl
cmpsl
fldl
aas
mov
jge
cld
push
fcom
xlat
fcmovb
pop
jecxz
pop
or
cmp
push
push
inc
mov
mov
sbb
out
mov
cmp
test
fldl
mov
mov
pop
shll
bound
pop
jl
loope
fstp
and
jne
sbb
add
cmpsl
cmpsl
lock
cmpsl
jae
lcall
stos
loopne
cmp
mov
mov
outsb
js
push
pop
shll
outsb
xchg
mov
stos
jbe
inc
aas
or
enter
int3
mov
adc
or
sbb
fucom
lret
cmc
push
in
dec
pop
push
pop
push
mov
jp
mov
jo
push
push
aam
xor
xchg
enter
adc
push
aam
movsb
sbb
test
mov
clc
push
mov
in
mov
cwtl
pop
jb
xchg
mov
xchg
sbb
or
jmp
mov
int3
mov
mov
mov
pop
xchg
dec
jb
mov
lds
pop
test
rcr
arpl
cmp
std
pushf
bound
dec
pop
shl
andl
adc
sub
loopne
inc
orl
popl
ja
imul
and
xchg
adc
mov
je
adc
ds
cmp
mov
mov
pop
pop
mov
pop
xchg
sub
mov
rcrb
movsb
cwtl
push
lret
xchg
mov
js
shlb
dec
mov
fsubrl
jg
push
sahf
add
jp
cwtl
push
pop
mov
push
xchg
mov
push
xchg
rcr
cwtl
nop
mov
jo
shrl
test
adc
add
fcoms
push
fld
mov
rclb
push
enter
fdivrp
pop
int
ret
mov
andb
push
fstl
sbb
sbb
loopne
clc
imul
pop
out
jmp
outsl
orl
pop
dec
iret
rcrb
dec
jmp
loopne
mov
mov
jo
push
pop
fcomps
mov
pop
jp
jl
sbb
nop
insl
xchg
cmp
imul
pop
add
inc
add
orl
push
pop
mov
sbbb
insb
sub
andb
jnp
jl
nop
and
pop
add
cmp
dec
adc
je
fnop
mov
test
cmpb
pop
jo
subb
loope
push
mov
dec
mov
mov
sub
pop
shrl
lds
inc
stc
jle
pop
rcrb
int3
fisubl
jo
mov
mov
mov
icebp
lretw
pop
rorl
push
pop
mov
mov
shl
out
add
jnp
enter
mov
ja
mov
xchg
movsb
jl
repz
inc
cmp
popa
scas
nop
testl
push
rcrl
aad
ret
jo
push
sahf
or
imul
jo
jns
cltd
inc
pop
in
push
int
lret
aaa
mov
sbb
orb
int3
jg
xchg
adc
repz
test
lret
fwait
add
mov
jns
mov
fs
in
dec
add
push
arpl
imul
sbb
pop
cmp
inc
inc
pop
rcl
mov
bound
clc
add
push
mov
adc
lock
dec
out
sbb
jne
fstp
mov
cmpsl
loope
jo
testl
xchg
dec
iret
andl
leave
test
dec
mov
and
cmp
icebp
insb
push
popf
dec
pop
aad
scas
ljmp
mov
and
push
pop
clc
popa
les
jo
pop
mov
cmp
mov
mov
pop
mov
ficomps
dec
xchg
in
es
test
je
dec
xor
addr16
inc
add
sahf
adc
cmp
lret
push
clc
loopne
insb
repnz
push
mov
adc
mov
iret
mov
fcomi
mov
dec
pop
andl
push
lcall
scas
loop
repnz
lcall
jg
jle
push
dec
mov
aam
or
aam
dec
outsb
cltd
mov
mov
int3
sub
xchg
dec
nop
scas
lock
test
out
cmpsb
cs
jmp
loop
jle
cmpsl
leave
add
cs
xchg
pop
jne
and
mov
inc
aad
enter
mov
mov
gs
jle
push
lcall
xchg
xchg
lea
push
mov
nop
lahf
fdivr
out
mov
fnsave
je
push
bound
mov
call
das
addr16
inc
jne
or
jo
push
pop
mov
mov
fwait
arpl
daa
pop
sbb
xchg
hlt
in
clc
add
xchg
xor
push
lods
mov
push
and
leave
lods
cmp
sarl
in
cmp
mov
mov
cli
fs
push
and
dec
mov
daa
inc
rcrb
sub
pushf
push
rcrl
xorb
es
cmp
ret
fs
movsl
jo
sbb
dec
and
inc
pop
push
jbe
and
sbb
push
repz
pop
into
insl
cmpsb
and
mov
lcall
adc
popf
or
fwait
aam
fisttpl
xchg
js
jo
out
jns
push
push
std
fnsave
addr16
movsb
mov
cmpsl
xchg
in
pop
inc
cmpsb
push
shlb
fistl
inc
mov
sarl
cmpsl
lds
fistpll
js
cwtl
in
pop
pop
loop
std
clc
out
ret
loopne
in
pop
pop
lds
xor
ret
mov
adcb
jg
cwtl
inc
push
dec
mov
push
ja
pop
shll
jo
pop
add
js
lock
inc
lds
push
pop
in
data16
xchg
mov
mov
stos
nop
inc
test
stc
aam
add
inc
stc
popa
mov
mov
stos
js
mov
cmp
mov
pop
xor
loope
push
out
les
test
cmp
jns
andl
rclb
imul
adc
mov
add
add
in
push
fbstp
pop
pop
adc
sarb
fimuls
adc
fnsave
dec
pop
xchg
ret
inc
js
ja
lcall
mov
sbb
fiadds
jp
sbb
loopne
mov
xchg
arpl
std
cwtl
mov
mov
mov
jb
lcall
push
jge
xorb
mov
mov
aam
mov
fsubs
imul
outsb
aam
xor
xchg
adc
call
mov
jl
mov
jb
xchg
mov
jb
xchg
jo
and
and
gs
sbb
push
adc
out
mov
push
sub
cmp
or
jb
pop
mov
xlat
cltd
push
lret
pop
xchg
xchg
or
pop
fistpl
loope
jno
mov
mov
rcrl
sbb
mov
loopne
insl
mov
cmp
pop
dec
int
pop
jo
into
push
loope
mov
jno
subl
push
push
mov
dec
arpl
movsb
dec
nop
jp
adcl
sbb
push
fadds
push
mov
fs
cmp
or
gs
push
xor
or
xor
stos
and
ror
jne
push
adc
jge
cltd
xor
pop
and
shll
push
cmpsb
sbb
mov
pop
fcoml
push
rclb
lods
push
jo
dec
add
add
mov
loope
js
gs
mov
jne
add
mov
mov
mov
mov
mov
cmp
sub
mov
xor
aam
jp
mov
fnstcw
cmp
shlb
iret
dec
ret
or
or
sbb
push
mov
mov
mov
pop
test
scas
push
shlb
pop
sub
add
idivb
xchg
push
sbb
add
adc
or
push
in
test
pop
test
popa
or
or
inc
xor
pop
enter
dec
xchg
pop
and
insb
nop
imul
lcall
arpl
push
jo
dec
sbb
fnstenv
ds
add
out
lods
jecxz
cmc
mov
mov
jne
and
lds
fs
shlb
and
push
bound
pop
mov
lds
inc
push
in
iret
mov
shll
cwtl
test
mov
arpl
inc
pop
cmp
inc
cld
ljmp
push
sub
push
aaa
lret
cmpl
aad
lahf
mov
int
add
sub
inc
jo
loop
fidivl
mov
push
mov
adc
push
int3
push
inc
scas
enter
adcl
mov
mov
aad
cmp
es
xchg
xchg
dec
dec
cmc
xor
imul
cmp
cmp
dec
mov
test
cwtl
inc
xchg
sub
mov
cmp
mov
leave
dec
pushf
inc
fstl
and
dec
cwtl
jl
mov
add
jle
movsl
fcmovb
stos
jo
or
pop
in
loopne
adc
xor
lods
leave
jl
test
pop
test
mov
repz
les
in
ret
jl
adc
popa
fldcw
insl
pop
xchg
faddl
call
fmul
inc
cmp
loop
and
and
lock
rcl
mov
sti
mov
call
pop
push
pop
sub
ficomps
xchg
cmc
and
test
lret
sbb
inc
or
mov
jb
lock
insb
fwait
jns
pop
test
dec
stc
jns
imul
fdivl
lods
cmp
int
int3
jnp
cmp
xor
jg
fidivl
inc
loope
inc
inc
aas
fnstenv
stos
out
loopne
push
pop
popa
xchg
scas
pop
inc
test
jg
shl
dec
dec
test
push
fstl
sub
pop
sub
xor
or
adc
jmp
mov
xchg
sub
mov
jae
lock
movsl
pop
pusha
in
insb
mov
mov
scas
ret
xchg
stos
scas
scas
dec
repnz
mov
pop
repz
arpl
js
jno
mov
pop
inc
xchg
xchg
inc
mov
mov
imul
jp
pop
xchg
pop
in
mov
sbb
ss
pop
fsubrs
add
mov
sub
pop
subb
adc
addb
xchg
pop
fsubrs
gs
xor
inc
mov
addr16
cli
pop
insb
pop
inc
movsl
mov
inc
pop
inc
xchg
dec
orl
adc
push
mov
lds
mov
sub
adc
mov
mov
jno
outsl
sbbb
mov
mov
push
cmp
enter
ja
mov
les
rorb
ret
int3
jmp
push
aas
push
shll
popa
movsl
icebp
clc
jns
repnz
dec
xor
arpl
in
jno
int3
pop
or
push
xchg
xchg
les
xchg
mov
jg
xchg
dec
rcr
popf
jbe
mov
stos
xchg
ljmp
nop
and
pop
dec
gs
das
cli
cbtw
pop
popa
bound
daa
add
mov
push
push
cmp
pop
jo
data16
push
jp
mov
sub
adc
mov
or
cwtl
cs
inc
dec
xchg
dec
sub
jae
sub
sbb
dec
xchg
das
mov
aam
and
mov
mov
es
aad
cmpsl
jg
jnp
in
xchg
andl
imul
jno
or
lds
sbb
loope
aad
or
adc
fwait
hlt
cli
test
out
rcll
int3
das
cmp
or
into
popa
in
loop
sbb
inc
jns
sub
mov
clc
imul
mov
or
out
test
loope
lahf
push
repz
bound
add
dec
int
adc
cmp
cmp
adc
lcall
jmp
sub
push
push
or
inc
inc
add
mov
cmp
mov
in
jbe
push
in
xchg
popf
pop
mov
sbb
dec
mov
jno
imul
jae
fbld
cmp
adcb
cmp
scas
xchg
fstl
in
lods
lock
outsb
xor
enter
jle
pop
xchg
jmp
and
sti
fisttpl
fsubrs
sbb
xor
adc
push
jg
test
das
cmc
ret
dec
mov
xchg
test
insb
clc
inc
scas
aad
cmp
xor
jo
adc
dec
jno
imul
and
xchg
add
cli
sahf
enter
dec
mov
jp
mov
sarb
dec
les
push
inc
inc
cmp
push
in
jno
xor
andb
adc
mov
adc
sarl
mov
int3
int
xlat
cmp
jge
mov
jne
cmp
jae
xchg
push
pop
lds
and
dec
shr
jne
xchg
dec
mov
lds
push
data16
mov
mov
cltd
cmpsl
or
xchg
data16
sbb
lock
into
fst
inc
push
inc
loopne
pop
loopne
mov
nop
mov
pop
push
sub
xchg
enter
fstps
xchg
pop
adc
les
pop
es
arpl
sub
mov
cmp
movsb
xchg
pop
cwtl
std
cli
mov
jle
aaa
std
lahf
xor
bound
outsb
push
xchg
enter
push
loop
push
sbb
push
fstl
push
mov
xor
insl
or
sub
ret
fs
lcall
push
jae
mov
push
jecxz
mov
mov
repz
push
into
test
jne
mov
loop
xchg
stc
cmpsb
dec
mov
lods
and
shll
dec
cmc
dec
and
mov
cmp
dec
inc
sti
fstps
xchg
stc
faddl
pop
jb
inc
cmp
arpl
enter
push
adc
int3
push
fcom
xchg
mov
mov
fnsave
xor
push
mov
loope
pop
cmp
sarl
push
xchg
in
inc
outsl
bound
nop
lcall
inc
xor
sbbl
mov
in
mov
mov
push
and
rcll
add
cmp
call
cli
mov
cmp
mov
loop
inc
sbb
jmp
adc
jo
fs
shll
out
lods
pushw
mov
pop
sub
dec
mov
andl
adc
rcll
or
mov
dec
jle
mov
xor
or
cld
cmp
cmpsb
dec
add
inc
cmp
mov
shlb
rorb
mov
scas
into
pop
fisubl
jne
or
jp
pop
add
mov
and
lods
sub
jnp
out
mov
out
pop
or
stc
pop
into
lods
lock
les
addl
out
mov
movsb
add
test
popf
xor
lcall
jmp
add
fs
cmp
negb
jl
fisubl
out
jecxz
pop
bound
lock
push
cwtl
ljmp
out
bound
fs
mov
outsl
push
pop
xchg
in
daa
jecxz
mov
loopne
aam
cmp
xor
xor
cwtl
mov
ja
rcr
cmpsl
mov
mov
dec
loope
lods
push
dec
cmp
mov
ss
dec
mov
shlb
fdivs
sbb
out
sbb
fs
jl
sahf
sub
xchg
pop
adc
sbb
imul
xchg
ljmp
pop
shll
sbb
clc
and
inc
lds
mov
adc
into
adc
and
fcmove
je
xor
pop
fistpll
rcll
rcrb
subb
iret
loop
adc
jb
push
sbb
inc
cli
inc
sbb
push
mov
loop
rclb
aam
pop
cmp
in
popf
clc
dec
inc
mov
dec
mov
mov
in
cmpl
add
mov
nop
and
push
in
inc
ret
pop
addl
jne
cwtl
dec
push
jle
inc
daa
fisttpl
sbbb
movsb
jns
push
pop
iret
fs
fnstsw
movsb
push
xor
push
xchg
mov
test
xchg
add
ljmp
fwait
and
test
mov
or
xchg
xchg
xchg
iret
fcoml
mov
mov
jg
fildl
repnz
jbe
xor
push
cltd
jmp
js
rcll
pop
push
sbb
mov
mov
push
inc
fistpl
push
and
int3
inc
jno
mov
cmp
push
xchg
enter
xchg
imul
jge
push
pop
jp
jae
xchg
notl
mov
mov
fsubs
popa
cmp
and
and
jo
mov
dec
mov
adc
sub
dec
sbb
jbe
sbb
mov
push
leave
xchg
cmp
push
call
push
mov
cmpsb
rcrb
fildll
fwait
push
dec
sub
ret
pop
mov
sbb
lds
out
cmpsb
ret
mov
dec
cmpsl
mov
inc
cmp
push
inc
xor
jmp
aam
adc
pop
in
mov
jp
gs
xor
inc
mov
or
push
scas
aam
xchg
mov
scas
adc
popa
movsb
pop
aas
test
xor
pop
negb
fucomip
dec
enter
popf
and
cltd
adc
sbb
icebp
in
loop
jp
adc
sbb
pop
push
and
lret
psubsb
faddl
sbb
lock
popf
mov
add
sbb
pop
out
push
mov
fldenv
pop
fst
pop
jo
cmpsb
mov
xchg
les
test
js
xorb
cmp
xchg
add
scas
or
loope
cmp
push
imul
mov
imul
xlat
jl
add
aas
insb
or
js
call
mov
pushf
out
or
and
shrb
mov
test
cltd
mov
pop
rol
and
ror
jne
cwtl
push
popa
push
mov
jg
dec
push
outsl
jo
lahf
push
stc
addl
outsb
xchg
mov
lahf
cmp
cmc
shrb
pop
hlt
pop
xchg
mov
push
shr
pop
mov
fdivl
cmpl
aad
pop
pop
pushf
sub
fs
push
pop
push
ja
sub
jp
cmpl
daa
inc
add
jo
pop
inc
jl
dec
in
dec
inc
jg
dec
mov
lcall
dec
push
lods
mov
mov
shl
rcr
iret
mov
mov
pop
mov
jae
adc
cmp
inc
popa
jbe
mov
shrb
iret
ds
pop
cmp
dec
gs
jb
add
ret
cmp
push
adc
and
mov
jne
inc
ja
mov
cmp
cmp
mov
mov
fdivl
out
pop
push
add
mov
cmpl
sahf
mov
mov
mov
loope
dec
push
es
or
fwait
inc
jnp
ja
lcall
test
jl
test
enter
jae
push
das
adc
subl
mov
sub
fmuls
pop
cli
cmpsl
inc
pushf
mov
mov
inc
adc
out
pop
inc
mov
push
cwtl
gs
push
das
fstpl
pop
mov
mov
and
sub
fcomps
xor
mov
xlat
fnsave
mov
mov
sti
pop
in
hlt
lea
mov
rcrb
cmp
arpl
outsb
adc
xor
cs
test
mov
mov
out
adc
bound
loopne
mov
pop
movsb
xchg
nop
int
xorb
adc
dec
data16
inc
cmpl
add
sbb
rolb
pop
cmp
clc
mov
cmp
imul
lcall
pop
or
loopne
adc
fcom
div
cs
inc
fldz
js
pop
pop
jo
imul
xorl
sbb
les
pop
fs
cwtl
insl
rcr
test
out
add
lcall
cwtl
mov
pop
mov
fcomps
xchg
js
xchg
push
push
push
push
add
inc
imul
adc
add
and
push
adc
fwait
rolb
fidivl
mov
xchg
call
cmp
rcll
pop
fwait
jl
mov
mov
dec
add
je
or
js
pop
call
rcrl
fildl
movsl
pop
add
loopne
mov
inc
pop
or
mov
mov
mov
iret
jbe
push
jp
push
cmp
gs
xchg
pop
lods
lret
push
loopne
or
inc
pop
in
jne
mov
rcrb
nop
dec
lods
cmp
loopne
dec
sub
mov
int3
cmpsl
jp
call
sub
lea
es
cli
push
dec
mov
or
aad
daa
dec
mov
mov
add
hlt
imul
inc
dec
mov
repnz
mov
push
rcrl
cmpb
stc
push
sbb
test
sarl
popa
sti
sbb
dec
lahf
mov
inc
aaa
mov
outsl
sbb
and
sbb
dec
mov
xchg
xorl
sub
cmp
arpl
ret
sub
outsl
cmpsb
fldcw
pop
sub
test
mov
jne
outsb
jne
loope
out
sub
add
sarb
jno
test
movlps
fistps
pusha
push
and
xor
sbb
fwait
in
jae
pop
xchg
jle
add
movsb
hlt
pop
xchg
outsl
dec
arpl
inc
and
jl
shll
cld
jl
xchg
insb
fdivl
push
cs
cmp
mov
cmpsb
icebp
cmc
ret
lds
orl
dec
rcrl
pusha
jo
inc
add
and
mov
xchg
call
cmpsb
in
in
std
dec
hlt
mov
lret
repz
in
sbb
inc
and
pusha
outsb
mov
fsubl
and
add
fcoms
xchg
js
imul
cmpsl
jne
aaa
adc
adc
push
icebp
int3
push
adc
scas
xchg
cmpsb
push
adc
mov
into
or
enter
ja
dec
test
xlat
jg
stos
adc
inc
pop
inc
xchg
insl
jp
outsl
cmpl
test
stos
scas
insl
sub
out
xor
leave
cwtl
sub
mov
int
leave
sbb
pop
femms
add
sub
xor
mov
js
ja
inc
movb
data16
mov
add
cmp
dec
ljmp
jge
into
test
mov
decl
data16
mov
push
cmp
cmp
add
icebp
lods
mov
js
push
mov
xor
pop
mov
rcl
sbb
fnstenv
test
xor
cmpsb
sbb
lret
adc
lcall
sub
cmp
pop
push
pop
add
xor
cmp
dec
push
dec
sub
sbb
or
push
pop
cmp
rcrl
inc
push
mov
loope
push
pop
popa
out
jo
daa
pop
inc
shll
leave
push
test
xor
imul
loope
lock
stc
popa
mov
andb
or
xor
dec
and
stc
pop
push
gs
arpl
cmp
push
mov
loope
xchg
push
lcall
or
sub
insb
mov
fldt
dec
hlt
push
shlb
inc
sbb
push
mov
add
push
xchg
inc
fstl
or
jo
push
push
sub
mov
dec
add
scas
int3
fxch
push
xor
cmpsl
cmp
fwait
pop
cmpsb
push
ss
hlt
cwtl
fmull
mov
add
stos
sbb
adcb
jle
sub
or
mov
test
mov
mov
jnp
add
lcall
adc
sahf
cmp
fwait
cmp
xchg
fst
push
push
lds
lds
inc
mov
cmp
int3
je
push
mov
cld
inc
fistpl
test
jb
stos
push
adc
andl
movsl
in
in
cmp
or
cwtl
jne
mov
popa
rclb
push
pop
mov
xchg
push
js
cmp
in
shr
mov
stos
xor
inc
dec
inc
cmp
stos
pop
cmpl
xor
pushw
imul
push
int3
push
cmpsl
cli
push
cmpsl
je
inc
cmp
and
inc
addb
ds
jge
mov
repnz
mov
sarb
sub
aad
mov
dec
and
adc
rclb
pop
pop
pushf
cmpl
mov
call
subl
stos
ret
add
and
pop
inc
pop
jo
xchg
repnz
pop
push
sbb
mov
call
push
fst
mov
hlt
popf
in
or
push
jae
cmpl
dec
cmpsb
adc
cld
popa
pop
enter
rcrb
loopne
jne
cmp
loop
mov
add
testb
aam
fistl
mul
stos
mov
adcl
jecxz
xor
fsubr
test
sub
cmp
ret
jecxz
lahf
adc
dec
lock
aam
pop
sbb
pop
push
mov
jo
add
jns
inc
insb
ja
cltd
nop
leave
pop
loop
cmpsb
inc
lds
or
jbe
adc
adcb
mov
dec
dec
pop
das
jb
shll
adc
push
lods
mov
dec
jecxz
push
add
sub
and
mov
add
mov
in
outsb
push
cld
sahf
cmp
lds
sahf
push
mov
repnz
dec
arpl
jo
pop
pushf
test
es
idivb
cwtl
inc
fdivs
stos
jmp
xchg
icebp
xchg
je
jno
cmpsb
mov
cmp
sub
lahf
sub
fs
out
inc
mov
mov
jge
sbbb
and
mov
call
subl
stos
xor
fcoms
mov
je
loopne
inc
fldenv
jbe
jmp
cs
xchg
jb
mov
aas
jns
pop
aas
mov
push
xchg
or
mov
loopne
push
xlat
jle
push
jo
shlb
clc
push
lcall
sub
lcall
in
jae
loopne
mov
nop
cltd
mov
ftst
js
test
xchg
lock
stos
rorl
mov
xchg
sub
inc
fnstsw
inc
cld
pop
dec
mov
push
pop
mov
and
stos
sbb
lock
daa
in
sbb
jo
out
sbb
inc
xor
hlt
call
sbb
jecxz
sti
mov
testb
arpl
insb
pop
sub
rcr
jp
sahf
shrb
sbb
ror
mov
push
fisttpll
push
inc
jo
stos
lods
add
jge
addr16
inc
sub
sahf
pause
cmp
setnp
pop
sbb
add
daa
mov
shrl
lds
pop
cmp
fistl
mov
imul
les
mov
sub
insb
mov
inc
daa
dec
jns
push
nopl
int
outsb
cmp
add
arpl
xchg
mov
mov
sub
les
lds
jg
adc
fsts
sub
les
cmp
lock
inc
xorb
ljmp
lods
repnz
pop
pop
sarb
andb
push
cmp
mov
jo
inc
mov
neg
mov
ficoml
dec
movsb
push
fistl
lret
mov
dec
shl
aam
inc
pshufw
fildl
xor
mov
mov
adc
pop
pop
je
dec
daa
pop
inc
xchg
data16
mov
dec
in
popa
cmp
push
mov
mov
lahf
lds
hlt
jo
loopne
push
inc
pop
loopne
fsts
cmp
loopne
and
bound
push
test
jo
adc
cmc
dec
mov
fists
or
out
pushf
test
jp
call
push
mov
das
mov
xor
jne
push
jae
xchg
mov
scas
jg
mov
int3
push
test
push
xchg
pop
jg
leave
adc
cmc
pop
mov
jg
jae
cmc
lcall
mov
sbb
sbb
pop
inc
ficomps
nop
fstl
cmp
jp,pn
or
xor
xchg
cld
xorb
imulb
sub
dec
sbb
fnstsw
clc
push
mov
mov
pextrw
push
push
xor
xor
xor
jle
stos
and
mov
fstl
bound
inc
mov
rorb
sub
inc
imul
pushf
ljmp
jmp
clc
fs
bound
or
fs
dec
mov
push
aaa
inc
sahf
cld
in
andb
inc
sbb
test
jne
xor
xor
cmpsl
loope
cmp
mov
xchg
ja
push
int3
mov
and
addb
mov
stos
fisttpl
pop
mov
xchg
mov
mov
cmp
jae
xor
sub
push
pop
mov
inc
fidivl
into
mov
cld
mov
das
in
fwait
or
sub
sub
test
js
and
xchg
push
mov
jle
cmpsl
lea
daa
pop
xor
loop
das
hlt
push
lcall
adc
cmp
inc
inc
jno
push
scas
add
pop
cli
rcll
jae
sub
cs
sbb
movsl
pop
or
mov
loop
mov
mov
sbb
adc
dec
push
push
in
stc
imul
pop
jo
sbbl
mov
mov
pop
adc
les
push
xor
stc
stos
mov
pop
arpl
test
lds
stos
adc
cmp
add
cltd
push
add
adc
xorb
scas
push
enter
xchg
pop
push
call
adc
mov
rol
mov
cltd
mov
and
ficomps
fdivl
fs
popa
lcall
popa
dec
adc
mov
jge
cmp
sub
in
fs
jle
mov
adc
push
cli
push
das
jbe
adc
pop
jp
jo
ja
lds
mov
xor
cld
pop
ja
adc
lahf
fsubrl
push
mov
jns
adc
lahf
adcl
dec
out
inc
imul
pop
cmpsb
mov
inc
add
pop
push
clc
push
push
pmuludq
push
loop
fcomps
popa
or
fnstsw
push
xbegin
lods
push
dec
mov
dec
mov
imul
lret
js
sbb
call
cmp
add
outsb
dec
lds
push
sbb
aam
inc
lea
ja
fidivrl
fs
push
cli
sbb
fstpt
cli
jl
aaa
pop
js
cltd
repnz
bound
cmpb
sbb
inc
lock
cmpb
cs
enter
xchg
push
fcomps
mov
nop
js
or
stc
or
xchg
jbe
mov
xchg
cmpsb
gs
or
dec
aas
add
mov
cmpsb
inc
arpl
and
mov
push
cmpsl
les
jecxz
xor
push
mov
jge
push
pop
insb
sbb
jg
std
cmp
push
aad
push
call
std
lods
lods
mov
data16
daa
leave
int3
repnz
clc
repnz
scas
lods
add
push
movsl
and
adc
pop
push
pop
push
repz
gs
rcrl
in
and
pushf
js
test
adc
sarb
bound
sub
pop
iret
popa
push
pop
dec
mov
test
cmpsb
subb
out
leave
add
stc
js
test
mov
mov
rorl
cmc
addr16
xchg
movsb
inc
shll
cmp
mov
and
inc
ret
fnstcw
in
jbe
jge
and
push
daa
mov
stos
jno
pop
adc
scas
mov
scas
cmp
or
insl
sub
fdivl
daa
mov
pop
bound
repz
int3
cs
into
movsb
sbb
push
pop
jg
imul
sahf
subb
lahf
dec
pop
loopne
xlat
test
xchg
fbstp
sbb
daa
dec
shl
mov
sbb
dec
test
mov
lods
jo
cmp
aam
xchg
mov
jbe
jns
xlat
pop
and
adc
movsl
xchg
push
xor
push
jne
scas
jbe
jo
movsb
in
xchg
jp
jne
inc
pop
or
rorb
push
clc
roll
out
movsl
scas
test
adc
shll
push
je
dec
imul
fidivs
arpl
pop
jo
xlat
out
inc
sahf
push
cmpsl
fdivrl
into
inc
fnsave
mov
mov
pop
jl
pop
inc
push
cwtl
cltd
popf
pushf
jg
sti
mov
jnp
pop
in
insb
iret
sar
and
mov
cmp
push
ljmp
dec
fldcw
pop
insl
imul
enter
es
aas
mov
mov
push
shlb
pop
std
sbb
jl
push
adc
fists
jnp
test
add
orb
rcrl
push
aam
dec
rcl
jno
cmpsl
lret
or
and
into
mov
fs
pop
xchg
push
popa
push
pop
iret
fwait
aad
push
stc
inc
iret
cmp
insb
imull
cmp
js
fsubrs
add
ljmp
bound
lock
les
stc
cmp
in
xchg
ja
imul
les
cmp
int
pop
jge
ljmp
xchg
jmp
pop
bound
mov
jne
xlat
pop
fs
loopne
into
jo
dec
mov
adc
push
pop
lcall
insb
pop
pop
push
frstor
nop
mov
fs
shlb
arpl
cmp
mov
xchg
shrb
shrl
imul
cld
cmc
pop
cmp
loope
outsb
iret
clc
inc
cmp
mov
ja
aad
js
push
ja
inc
push
pop
insb
gs
rclb
lds
pop
aas
jp
jl
push
ja
xchg
jns
jb
sub
mov
push
cmp
push
loope
test
fcoms
js
insb
xchg
push
xor
out
loope
dec
cmp
jge
arpl
push
std
gs
push
cmp
or
hlt
cmp
xor
push
cmpsb
shrb
arpl
pop
fcoms
jo
mov
shl
test
es
lods
aam
mov
ljmp
mov
adc
bound
jnp
mov
bound
loop
or
mov
gs
hlt
shrl
enter
add
push
mov
test
mov
loopne
es
xor
dec
jmp
add
lcall
cmp
mov
rcll
nop
loope
les
inc
cmpsl
add
jl
lds
mov
cmpsl
dec
fs
adc
mov
sbb
jo
stos
mov
shlb
xor
inc
pop
in
iret
nop
inc
arpl
mov
inc
mov
push
pop
dec
add
cmpb
push
xor
int3
inc
cwtl
mov
xchg
cmp
xchg
mov
loope
test
shrb
dec
fnstcw
mov
sbb
and
fisttpl
pop
test
cs
insl
jmp
pop
aam
sub
fsubs
dec
mov
cmpsb
popf
pop
into
repnz
jb
sbb
xor
mov
data16
mov
mull
or
cltd
add
add
jo
mov
lcall
out
jge
push
sub
xorb
xchg
stos
pop
or
xchg
into
jp
dec
in
add
fs
std
stc
sbb
push
imul
xchg
into
mov
loopne
sbb
sbb
rol
or
cwtl
outsb
insl
sub
add
sahf
inc
xor
int
jl
in
inc
into
sub
pop
mov
xchg
and
popa
cmp
push
das
dec
roll
in
add
data16
xor
bnd
insb
movsb
add
test
add
sub
cmpsl
cmpsb
or
int3
sub
cwtl
jle
pop
mov
jmp
mov
sub
lahf
push
fmuls
mov
mov
scas
test
jae
rclb
nop
push
insb
cmp
adcl
xchg
sbbb
mov
cmp
xor
push
xorl
lods
clc
repnz
shr
cs
pop
push
inc
xchg
mov
inc
into
xchg
pop
jo
aad
stc
dec
jle
shl
lock
dec
sub
inc
imul
mov
cmpl
and
mov
pop
pop
mov
push
sub
imul
test
fwait
loope
nop
in
lock
mov
inc
icebp
fdiv
pop
fdivl
lock
jb
in
xor
cmp
xchg
adc
loope
xchg
cmpsl
in
aas
push
adc
out
or
cmpsl
ja
out
xlat
hlt
fwait
push
lods
fistl
push
xor
insb
mov
mull
xchg
mov
jo
test
ret
gs
fdivl
xchg
xor
arpl
pop
dec
inc
ret
xchg
aad
mov
pop
sti
bnd
in
fmuls
ja
loop
outsb
push
addl
clc
pop
push
cmp
xor
in
movsb
xor
pop
aaa
sub
das
mov
test
call
mov
arpl
and
das
mov
jp
mov
jecxz
mov
dec
pop
inc
xchg
dec
xor
loopne
sarl
pushf
test
pop
mov
scas
or
mov
sbb
push
or
iret
rcrl
mov
jge
mov
sti
mov
addl
rcr
jo
ret
or
cmc
shlb
fistpl
cmpsb
pop
add
popl
mov
stos
call
repz
movsb
push
in
divb
mov
ljmp
dec
cmpsl
mov
jno
inc
insl
mov
lods
mov
fimull
or
ret
sbb
xlat
sub
xor
pushf
addb
mov
lcall
ss
inc
or
hlt
push
adc
jns
les
push
int
mov
movsl
xchg
loope
sub
mov
out
jno
nop
inc
mov
sarl
xchg
pusha
push
mov
jmp
jp
sahf
roll
inc
out
mov
xchg
mov
lds
or
lea
test
insl
in
je
cmpsb
stos
xor
pusha
mov
int3
xor
dec
push
jne
sbb
xlat
mov
or
mov
mov
mov
cmpsl
addr16
add
cmp
sub
xchg
movsl
xchg
push
lahf
je
fs
data16
or
mov
xor
mov
das
mov
fxch
popf
xchg
and
imul
and
stos
jne
adc
out
in
inc
movsl
imull
test
mov
mov
scas
lds
andb
shl
push
sub
inc
xchg
adc
gs
fsts
shrb
lods
imul
insl
mov
jbe
mov
fwait
ds
mov
sbb
jo
pop
fdivl
addr16
cmp
das
ljmp
dec
int3
xchg
jmp
xor
hlt
pop
lahf
adc
xlat
fbld
mov
fwait
and
insl
xchg
cmp
into
sbb
dec
pop
xor
xchg
icebp
jp
shrb
nop
mov
out
xor
jg
jns
ret
std
or
inc
sahf
inc
cmpsb
out
xchg
mov
clc
pushf
xchg
lds
sti
or
mov
dec
divl
jae
mov
lods
enter
adc
and
jno
adc
repnz
les
dec
fmul
je
hlt
ljmp
cmp
lods
or
mov
adc
nop
les
push
fstps
dec
movd
mov
mov
stos
ss
addr16
incl
jne
add
int
sub
push
or
inc
arpl
data16
cmpsl
fs
hlt
lds
sub
jno
pop
mov
pop
lahf
fs
pop
mov
jno
jge
xchg
xchg
fs
shr
sub
inc
jle
push
xor
testb
sbb
inc
pop
subl
cs
ficompl
enter
fstl
fwait
pushf
xor
push
sahf
icebp
icebp
pop
sbb
lcall
and
fcompl
sub
les
push
cmp
xchg
fdiv
int3
mov
outsb
insb
mov
aaa
movsl
call
js
jnp
fildll
push
mov
sub
addb
push
ds
imul
in
mov
xor
or
lock
jne
dec
std
hlt
es
sahf
shlb
or
push
jno
loop
lds
imul
mov
cmpsb
inc
jbe
jle
adc
out
push
mov
bound
sbbl
mov
scas
jecxz
inc
pop
adc
adcl
clc
adc
or
and
fsub
push
adc
test
cli
push
leave
jbe
lds
mov
push
sub
arpl
or
popa
jo
sbb
stc
xchg
xor
std
imul
pop
fst
fsubs
lds
aas
xchg
push
lods
add
add
ret
jle
in
xchg
bnd
insb
jl
data16
sbb
inc
xchg
mov
icebp
ss
pushl
push
xor
mov
std
rorb
insb
jb
rdpmc
mov
push
xchg
add
jbe
bound
ja
xor
dec
fsts
rolb
cmp
or
inc
jp
push
add
arpl
jl
fadds
or
mov
mov
lds
outsl
jp
mov
popa
xor
mov
neg
add
inc
mov
push
mov
mov
adc
xlat
mov
push
aas
jbe
pop
push
neg
iret
pop
fidivrl
xchg
notb
push
gs
call
inc
sbb
and
hlt
dec
pop
pop
cmp
xor
fs
mov
mov
and
push
pop
jb
mov
cmp
in
call
mov
adc
mov
push
jecxz
scas
sti
les
sub
fstps
push
jnp
push
xor
add
inc
into
call
pop
pop
les
lock
iret
out
push
adc
jmp
adc
test
and
fstl
jecxz
popa
cmp
mov
rcr
xchg
pop
adcb
rcll
push
xor
into
cmp
pop
ja
and
jb
sti
sbb
cli
add
fs
test
test
mov
cmp
jne
je
sub
and
cli
push
cmp
cmp
int3
mov
cmp
gs
lock
adc
shrl
pop
dec
sub
and
lahf
enter
push
jl
jno
or
into
jae
test
js
aaa
adc
mov
repnz
movsb
dec
rol
lahf
sarl
push
insl
jge
inc
es
mov
mov
and
mov
mov
sub
rol
iret
stos
dec
scas
daa
sti
orb
scas
or
xor
loopne
insl
mov
sbb
icebp
sbb
out
and
push
das
popa
mov
mov
ja
fneni(8087
clc
xor
pop
popf
inc
fldenv
inc
fildl
mov
push
nop
sahf
dec
int3
imul
pop
adcb
pop
push
mov
push
xchg
sub
repz
push
es
mov
jae
das
mov
dec
inc
gs
push
pop
mov
xor
shll
push
test
or
jmp
push
dec
xor
fwait
inc
dec
push
ljmp
jge
insl
dec
ret
add
rclb
ret
jne
lcall
push
cmp
stos
adc
push
mov
xchg
pushf
int3
push
mov
xchg
out
jecxz
notl
lock
xor
mov
push
mov
loope
xchg
inc
repz
sub
ret
jno
jbe
shll
jo
mov
fs
jae
jbe
sti
scas
loopne
int3
aaa
prefetchnta
jo
or
mov
pop
mov
mov
pop
dec
xor
jo
into
loopne
in
cwtl
cld
mov
gs
mov
sbb
push
loopne
sbb
inc
cmp
push
aas
dec
mov
xchg
cmpsl
roll
push
jmp
mov
adc
lcall
or
sbb
push
dec
sbb
loop
mov
xchg
sub
lods
sbb
fmull
or
incl
and
xchg
leave
mov
xacquire
inc
frstor
cmpsb
jmp
mov
jmp
mov
jmp
imul
jo
andb
mov
scas
nop
add
lea
inc
jne
les
cmp
dec
xorl
push
cmp
fcmovnbe
in
pop
insb
dec
mov
mov
and
push
rorb
dec
sub
fsubrs
adc
nop
into
daa
xchg
sbb
test
dec
ja
or
mov
sub
sbb
pop
in
sub
ror
mov
pop
xor
and
bound
cld
enter
push
mov
mov
fstpt
inc
das
addb
cmp
scas
mov
pop
outsb
dec
xchg
push
fwait
aad
jmp
popa
sti
and
push
in
aam
sti
xor
xchg
mov
aas
cmpsl
jecxz
push
add
inc
in
cli
sarb
pop
aaa
pop
mov
cmp
aaa
rcll
lds
pop
cltd
mov
lods
mov
movsl
jbe
fstps
cmp
test
dec
insl
repz
setb
mov
aad
pop
push
stc
mov
fcoml
rcll
jmp
jg
cmpsb
push
imulb
fdivl
jae
das
mov
or
cmp
aam
psubq
xor
push
idivl
repz
nop
idivb
jne
mov
into
jg
mov
xchg
in
add
sar
mov
aam
sbb
inc
mov
jo
adc
dec
jo
fincstp
mov
cmp
fcmovbe
test
out
sub
cmp
adc
mov
cmp
sarb
out
nop
inc
add
out
add
mov
add
or
sahf
sti
movsb
pop
mov
mov
int3
nop
mov
mov
sub
push
addl
xor
aam
inc
insl
jnp
pop
jle
jge
cmpl
aas
popa
lret
cmp
mov
clc
data16
mov
mov
daa
jg
jne
jne
mov
push
mov
inc
loop
or
leave
push
pusha
dec
add
jbe
dec
ja
push
sub
pop
mov
lods
and
and
aam
fstpl
fstpl
pop
jg
clc
and
mov
mov
jo
or
rorb
test
out
cltd
out
jo
in
lret
shl
or
jg
pushf
pushl
mov
mov
jmp
sarl
insb
popa
jecxz
lea
out
xchg
xor
jne
xor
push
repnz
lahf
or
daa
xchg
out
shrl
and
int3
movsb
ljmp
insb
in
jne
out
sbb
mov
test
pop
pop
ret
sti
jge
push
adc
mov
push
sub
push
mov
fsts
push
cltd
nop
cmpl
repz
lods
loopne
loope
dec
cmp
jae
js
test
sbb
sahf
sbb
into
sub
stos
xchg
xor
fwait
aam
pop
mov
repnz
inc
cmp
nop
xor
sub
jmp
mov
test
mov
jno
fldcw
ss
jg
mov
jne
bound
outsl
insl
icebp
add
cmpsb
ss
sub
aaa
cmp
jo
lds
addr16
jnp
ljmp
popf
or
int3
jae
cmp
mov
push
repnz
xor
scas
sbb
sbbb
push
outsl
xchg
push
mov
sbb
je
nop
fisttpl
mov
mov
out
mov
xor
test
sbbb
or
pop
dec
lds
cli
jl
orb
push
push
icebp
sbb
cmp
test
mov
pop
js
fidivl
push
mov
mov
gs
pop
adc
inc
imul
cmp
sahf
aam
add
test
roll
lcall
cmpsb
jge
popf
pop
pop
xor
adc
mov
sub
xchg
mov
scas
pop
inc
push
pop
push
cltd
pop
mov
push
sub
in
or
hlt
xchg
ror
sbb
mov
loopne
xchg
pop
xchg
sbb
mov
ret
aas
ja
andb
sub
cmc
shlb
je
mov
sbb
adc
mov
xor
jo
data16
mov
mov
sahf
adc
sub
push
jo
dec
fwait
sti
je
or
lcall
cmpsb
or
daa
jecxz
testb
je
imul
push
mov
sbb
cwtl
inc
jae
pop
sbb
add
fisubrs
mov
mov
mov
cmpsb
jo
movsl
dec
shlb
pushf
sbb
jne
dec
mov
ja
inc
push
in
mov
in
xchg
std
dec
sub
sarl
fistpl
call
xor
into
xchg
and
push
stc
paddsw
dec
mov
popf
xor
inc
push
cmp
setb
cmp
jo
push
pop
mov
insb
xor
inc
xchg
adc
cltd
fs
lea
sub
xchg
sbb
push
fs
or
scas
or
sub
sbb
data16
push
pop
loopne
ret
ljmp
xlat
xor
lock
jge
nop
sub
pop
test
ja
fwait
cmc
pop
les
jbe
add
sub
hlt
ljmp
int
pop
stos
push
dec
cmp
fwait
jp
lods
insb
xor
jno
lock
xchg
jmp
add
inc
addr16
je
or
test
dec
sub
lds
and
test
aad
push
insb
aam
hlt
xchg
cmp
push
test
test
neg
cmp
mov
mov
out
jno
rolb
and
mov
sarb
adc
and
xor
and
stos
iret
add
jl
imul
dec
cmp
jp
into
xchg
push
mov
pop
sbb
into
insb
cmpsl
scas
or
push
inc
fists
stos
fcmovu
mov
pop
xor
loope
push
sti
bound
leave
mov
mov
push
pushf
pop
movsb
dec
pop
cmp
xor
sarb
or
pop
inc
and
mov
fdivs
mov
add
jo
push
shll
aaa
rcrb
mov
movsl
icebp
les
pushf
push
or
les
out
mov
lret
xchg
pop
or
or
push
in
cmpsl
mov
add
inc
mov
fwait
xchg
cltd
cmp
aas
or
loopne
fildl
sub
int3
divl
movzbl
pop
inc
mov
std
xchg
cmp
es
repnz
popa
jno
sahf
or
call
rcrl
popa
sbb
bound
cltd
cwtl
adc
adc
loope
test
pop
push
cmp
stos
pop
sbb
sub
sbb
rcr
push
xchg
jo
add
ja
push
push
in
push
dec
pushf
lea
cmp
out
add
pop
cwtl
test
sub
mov
xlat
lea
mov
mov
sbb
inc
fcmove
js
xorl
lahf
add
mov
push
jg
test
das
nop
push
or
push
movsl
jmp
iret
stos
test
and
fld
dec
les
aas
adc
pop
dec
in
arpl
andl
rcr
cli
xorb
push
push
into
sbb
lock
and
sub
int
pop
ja
ja
inc
lcall
pop
fnstcw
das
jo
xor
cmpsb
test
js
xchg
shlb
loope
scas
dec
fwait
inc
jb
fistpl
lods
cmpsl
mov
push
aam
stos
cmpsl
ss
xchg
push
add
stc
or
scas
clc
sbb
insb
orb
cmpsl
cmp
std
mov
ss
adc
lods
cmc
sub
mov
lahf
xor
loope
movsl
mov
and
jg
cmp
pop
les
dec
fsts
mov
sbbb
xlat
rcrl
pushf
pop
fwait
loope
dec
jecxz
jp
jb
sbb
mov
cmpsl
dec
arpl
cmpb
jno
mov
push
call
js
je
cmp
repz
adc
or
cmp
sbb
cmp
mov
popf
fstps
data16
xchg
cmp
rorl
clc
loopne
xchg
mov
in
jge
in
mov
lcall
mov
sahf
push
pop
cmp
fwait
into
sbbb
in
cli
pop
xchg
je
dec
push
pop
pop
mov
ret
xlat
cld
push
fs
mov
sbb
mov
xlat
shlb
mull
cmpsb
mov
push
stos
jne
mov
xchg
xchg
mov
sti
je
cli
cltd
rcll
mulb
aaa
ret
jns
ja
je
cmovae
fnstenv
jo
divb
jge
add
movsl
loop
repz
addr16
cmpsb
je
int3
or
mov
icebp
jl
cmpsb
mov
mov
movsb
fisttpll
sbb
pop
and
mov
popf
int
dec
cmpsl
fdivrl
test
xchg
lds
movsl
outsb
pop
xor
imul
dec
mov
je
jmp
pushf
jecxz
push
test
adcb
or
push
jge
loopne
lret
test
mov
iret
jb
mul
subb
fcmovnbe
pcmpeqd
out
out
iret
push
mov
bndstx
ja
sbb
cmp
cmp
fistl
test
jg
mov
ljmp
pop
lds
cmp
sub
pop
mov
adc
inc
adc
scas
rcrb
icebp
notl
dec
push
pop
adcb
lds
cmp
sub
sub
rorb
jmp
mov
popa
or
sbb
outsl
cmp
ss
aam
mov
jb
dec
ficoml
xchg
je
dec
xchg
fstl
xchg
sti
mov
push
mov
jne
sub
cmp
sti
aam
les
fdivrs
dec
xchg
decb
inc
cli
jg
lcall
out
fsts
das
cli
jo
mov
popa
cmp
mov
mov
or
pushf
scas
cs
pop
movb
push
jg
aaa
stos
cmpsl
dec
jb
lods
lcall
lret
shll
fstl
in
push
mov
push
out
cmc
icebp
fnstenv
test
xchg
sbb
flds
dec
fdivrp
sbb
mov
aas
rclb
addr16
push
test
sbb
jg
mov
cld
imul
std
lods
pop
fdivrp
jno
movsb
subl
fldenv
inc
leave
push
cld
and
sub
mov
mov
popf
sub
mov
popa
mov
js
xchg
mov
inc
sbb
inc
shll
add
add
nop
push
loopne
adc
dec
aad
and
arpl
cld
aam
add
inc
cmp
pushf
xchg
repnz
dec
sbb
push
sahf
popa
ja
in
add
inc
fldenv
loop
inc
or
shll
mov
int
xchg
mov
cmc
shll
je
daa
in
jae
and
inc
shlb
nop
subl
in
fdivr
in
xchg
fs
mov
shlb
in
jne
shll
cmp
fmul
jmp
inc
add
push
and
test
mov
cmpsl
scas
sbb
lret
push
xor
addl
xor
stos
jne
stos
push
cmp
int3
inc
shll
pop
push
and
push
rcrl
inc
adc
stos
and
ljmp
cltd
stc
push
ret
rcll
repz
pushf
aam
mov
push
les
sarb
push
movsb
mov
into
push
fisubs
fldenv
pop
cmc
imul
shll
cmp
pop
mov
sbb
mov
fildll
adc
data16
or
fwait
cmp
movsl
in
and
or
inc
pop
pushf
lock
sub
adc
or
lahf
pop
jp
lret
add
dec
sbb
or
cld
lods
or
xor
xchg
cmp
andb
sub
sbb
scas
lahf
mov
pop
inc
mov
mov
inc
push
xchg
jno
xacquire
adc
pop
mov
cmp
ficoml
mov
pop
js
sbb
lcall
cwtl
jmp
xor
xchg
push
aam
fidivrl
push
jb
sbb
jecxz
imul
fsts
fnstcw
push
mov
push
sbb
rclb
push
inc
jge
ss
mov
mov
sub
jb
jg
mov
dec
push
into
dec
mov
lods
arpl
sahf
inc
bound
add
shrl
movsl
push
ret
das
xor
push
fldcw
mov
sahf
sbb
or
mov
dec
repz
and
jmp
cmp
mov
stos
pop
and
xchg
je
js
ss
sbb
or
bound
push
out
xchg
add
adc
popf
int
dec
into
insb
test
mov
daa
fld
cmpsb
push
push
icebp
jno
sti
jle
xchg
jne
dec
sahf
std
jno
mov
mov
pop
xchg
inc
mov
and
fldcw
cli
loopne
sbb
mov
fsubs
fistps
lcall
mov
cli
pop
push
sbb
sbb
lds
test
mov
dec
cld
js
cmpsb
sti
cmp
cmp
insb
iret
jecxz
push
mov
faddp
pshufw
icebp
adc
sarl
pop
pop
or
lcall
lahf
mov
pop
iret
cs
dec
testl
repnz
mov
push
xchg
test
mov
jmp
push
mov
pop
push
jne
popa
sub
add
mov
test
imul
lcall
inc
out
fld
jl
dec
jno
rcr
sahf
clc
movb
cmp
out
mov
cmpsb
fimuls
cmp
mov
jae
push
fwait
pop
push
mov
nop
push
pop
push
and
mov
andl
xchg
push
add
addl
dec
cmp
mov
gs
adc
fistps
aad
rclb
push
lods
roll
and
adc
xchg
fst
jne
dec
out
fidivs
jo
and
pop
mov
cmpsb
scas
jb
shrb
mov
sar
fcomip
sub
in
mov
test
les
fnclex
lds
adc
cmc
nop
jb
lcall
hlt
daa
bound
std
jmp
pop
adc
into
rcrl
rcll
lcall
bound
jmp
test
out
dec
and
add
or
xor
push
pop
xor
cwtl
jo
jne
lret
add
imul
les
mov
fisttps
pop
xchg
xchg
nop
sub
mov
repnz
lahf
rol
mov
mov
or
icebp
adc
cmpsb
mov
fldenv
pop
rcrl
jl
outsb
cmpl
push
icebp
xor
adcl
push
daa
xchg
sub
adc
add
iret
jecxz
push
subl
cmp
loopne
xchg
push
mov
imul
pop
iret
push
ror
adc
xchg
xchg
sbb
mov
sub
mov
inc
xchg
dec
jo
je
xorl
lods
sbbl
in
test
js
fs
sbb
in
xlat
rcll
mov
cmp
test
ss
mov
mov
mov
test
fsts
push
insl
push
mov
int
pop
dec
insl
mov
stos
lahf
jb
fldcw
stos
mov
mov
in
fcmove
out
xor
dec
lock
jb
insb
sbb
movb
fs
mov
sbb
sbb
fildl
sbb
aam
pop
inc
fs
loope
popa
pusha
cmp
or
and
pop
ss
lcall
dec
into
gs
aad
push
aam
insl
jne
cltd
cwtl
xor
dec
jbe
inc
in
jo
cmp
mov
mov
loope
in
dec
cwtl
cmp
or
adcl
mov
lods
lock
sub
mov
xor
and
xchg
rcrl
rcll
add
bound
add
fdivrl
pop
jae
orl
mov
mov
lret
fnsave
data16
sbb
cmpsb
movsb
pop
xchg
aam
fs
dec
lea
imul
pushf
pop
mov
inc
in
call
cli
and
pop
shlb
add
sub
push
jo
in
adc
daa
adc
leave
dec
sahf
lea
or
or
xchg
jo
push
rcll
push
ret
js
test
adc
cmpsb
lock
mov
movsl
fldt
mov
js
inc
ret
adc
cmp
mov
push
mov
je
ret
les
aad
sbb
sarl
pop
inc
imul
cmp
jo
imul
jmp
pushf
rcl
jno
fsts
pop
xchg
push
imulb
les
mov
es
fsubs
movsb
lock
pop
push
jp
lcall
je
dec
pop
inc
cmpsl
pop
addl
adc
shll
jge
cmpsb
dec
push
pop
mov
push
rolb
mov
mov
lock
daa
dec
popf
ficoms
test
mov
out
push
jmp
jb
nop
inc
sub
pushf
add
mov
jmp
daa
ja
cmpsb
inc
rclb
mov
mov
jmp
imul
cltd
enter
or
jae
arpl
data16
xchg
dec
xchg
rcll
push
ja
imul
adc
in
data16
dec
pop
and
jnp
nop
mov
xchg
dec
mov
movsb
push
push
iret
jmp
daa
mov
push
jb
sub
xchg
mov
cmpsl
mov
xor
fstpt
int3
out
repnz
push
scas
mov
pop
popf
cmpsl
mov
cli
fsts
mov
inc
rolb
lock
cli
stos
mov
xor
add
ret
jae
xchg
xchg
push
movsb
sub
fs
jbe
rcll
je
and
test
fldl
push
xlat
mov
int3
adc
cmp
insl
call
cmp
or
int
mov
in
nop
mov
dec
fs
int
cwtl
rcr
xchg
ds
test
cld
cmp
cltd
jg
les
data16
or
in
addr16
mov
sbb
les
xchg
lds
iret
jne
bound
sarl
mov
cmp
call
mov
popa
cmp
xchg
ja
add
imul
jl
adcb
add
inc
cli
insl
inc
test
js
sub
nop
rol
and
cmp
mov
push
nop
xchg
lea
push
int3
jb
adc
cmp
pop
dec
push
jp
test
mov
jae
loopne
ror
mov
test
in
mov
mov
inc
add
fildl
mov
jo
cmp
cmp
and
adc
inc
mov
std
dec
xor
aam
cltd
aad
hlt
aaa
add
arpl
aad
jne
jb
cmp
push
jae
mov
xor
movsb
aam
xor
add
ja
aam
xchg
sbb
mov
pop
pushf
gs
stos
mov
mov
cmpb
loopne
fstpl
cmp
push
imul
mov
push
jp
mov
mov
cmp
frstor
xchg
scas
repz
sbb
clc
cmpsl
pop
xchg
jo
pushf
mov
push
inc
fs
push
and
mov
or
lods
xchg
pop
push
cmp
fisubrl
mov
test
pop
mov
xchg
sub
mov
xor
aam
sub
rolb
dec
loope
loopne
add
mov
pop
pop
or
xlat
cld
fldcw
pop
pop
xchg
cmp
insl
jno
test
and
into
xchg
fxam
cmp
in
jecxz
lcall
mov
test
popa
pusha
mov
sarl
aad
les
sub
jb
jmp
les
mov
cmp
mov
xchg
fldt
cltd
fnstcw
push
cmpb
loope
in
fiadds
fsts
and
push
push
mov
sbb
or
sti
and
mov
call
ljmp
adc
jg
je
mov
sbb
loope
sahf
jae
loop
test
xor
mov
mov
clc
cld
loopne
push
sub
push
andb
sbb
ljmp
push
imul
pop
adcb
jecxz
stos
xchg
push
sub
cld
ficompl
pop
stos
push
pop
or
mov
fs
aam
cmpsl
lds
sbb
mov
fldenv
pop
repnz
pop
mov
xchg
movsl
xlat
cmp
subb
push
pop
orb
push
sub
dec
pusha
dec
inc
decb
push
cltd
ficoml
and
jecxz
lea
xor
fisubl
fiaddl
fisttpl
mov
dec
loope
xor
lods
cmp
push
lods
mov
lret
fldenv
unpckhps
sub
hlt
fnstenv
mov
insb
cmp
movsl
nop
or
push
mov
adc
add
adc
jo
push
nop
adc
addb
insb
cmpsb
rolb
sbb
cmp
pop
cltd
repz
movsl
fst
imul
loope
pop
jo
mov
cmp
inc
push
dec
or
fs
add
cmp
push
jb
cwtl
popl
and
clc
adc
js
xor
push
roll
xchg
test
and
std
dec
test
lds
dec
xor
scas
adc
lock
cmp
and
xor
xor
sub
lods
cmp
or
or
push
stc
sbb
push
cmpsb
enter
repz
lret
mov
cmp
test
popa
mov
jns
xchg
cmp
inc
push
add
push
mov
test
jg
jo
repz
mov
mov
lock
testb
xchg
fsubrs
mov
movsb
insb
and
cmpsb
pop
jbe
les
movsb
scas
or
xchg
push
cwtl
les
adc
inc
test
or
lds
push
ss
bound
push
ret
pusha
mov
and
subl
test
rcll
outsb
push
sbb
push
or
dec
mov
loop
test
or
mov
pop
cwtl
inc
inc
pop
push
ret
fstpl
jnp
fisubrs
scas
sbb
lret
stos
lock
or
push
lsl
jo
mov
xor
aaa
fwait
rorb
aaa
pop
cmp
mov
jb
test
loope
or
pop
mov
or
rsqrtps
fisttpl
push
daa
fstl
cmpsb
sub
loope
cmp
scas
mulb
data16
cmp
outsl
mov
cmp
aad
arpl
add
in
orb
lret
cwtl
aaa
jno
jp
movb
mov
xchg
sbb
jne
test
mov
or
jnp
cld
and
lock
and
stc
jle
mov
pop
iret
fucomi
inc
sub
mov
les
in
xor
inc
fsubs
xor
icebp
xor
pop
aad
lods
or
dec
pushf
mov
cltd
push
lds
mov
outsl
xchg
mov
mov
xchg
mov
pop
imul
jno
cmp
fwait
stos
pop
cmpb
cli
lret
sbb
cmpsb
lods
jb
pop
inc
sbb
and
pop
jg
and
adc
jmp
mov
cmpsb
add
xchg
ljmp
psrad
ja
xchg
lds
je
cmp
inc
push
cmpsb
mov
jne
or
sbb
lds
lcall
pop
ficoml
fcoms
cmp
and
mov
outsl
sbb
scas
flds
iret
xchg
mov
pop
ret
push
jnp
xor
popa
nop
push
jno
push
daa
pop
adc
data16
inc
adc
push
ret
push
mov
dec
clc
aaa
mov
fwait
push
and
pop
loopne
rorl
pop
push
xor
sbb
cs
and
mov
cmp
scas
cmp
ffree
and
pop
enter
adc
mov
or
dec
sbb
daa
test
mov
enter
orb
pop
mov
insl
mov
inc
aas
pop
scas
push
hlt
adc
js
push
cld
xchg
mov
cmp
imul
xor
negl
and
push
call
cmp
repz
dec
fsubl
sbb
mov
add
fdiv
jo
lahf
mov
sahf
out
pop
cmp
sbb
popa
in
add
mov
cmpsl
mov
shrb
jecxz
dec
push
mov
outsb
call
push
mov
add
xchg
je
inc
sbb
arpl
setne
addr16
jne
add
inc
dec
push
push
jo
push
dec
and
sub
jmp
mov
stc
ljmp
popf
fcmovnbe
arpl
icebp
aam
pop
dec
jnp
les
subb
push
adc
mov
jne
dec
notl
pushf
lds
imul
jno
push
jbe
sub
fdivs
sub
ficompl
dec
or
add
sub
imul
lret
pop
add
fmuls
hlt
loop
inc
pop
pop
mov
scas
orb
int
rcrb
bound
add
inc
mov
mov
jb
or
push
jle
add
data16
jo
adc
ljmp
frstor
add
sub
inc
repz
dec
inc
xor
fwait
lods
push
mov
testb
hlt
xchg
loopne
add
dec
xchg
fdivs
dec
adc
sub
lock
sbb
dec
orb
push
pop
bound
or
es
mov
mov
ret
es
loopne
jo
ret
inc
add
rcrl
data16
cmpsl
push
jae
leave
fisubrs
inc
les
lcall
mull
mov
cmpsl
aam
mov
cmpsl
aas
ljmp
sbb
es
cmp
iret
lahf
shl
rcrb
lea
loope
aas
sub
or
bound
xor
xchg
pop
xchg
dec
sbb
shrl
and
rcll
xchg
xchg
pop
cld
lea
nop
push
shld
cwtl
mov
je
cwtl
mov
icebp
xchg
mov
jge
mov
sbb
mov
repnz
mov
test
ljmp
outsb
mov
xchg
mov
jo
pop
sbb
sbbl
addb
test
das
jnp
movzbl
pop
sbb
neg
sub
and
or
lahf
dec
pushf
adc
mov
das
rcrl
fsubrs
pop
ficompl
jo
and
bound
xchg
int3
insb
jp
subb
add
bound
mov
mov
pop
cmp
fldenv
pop
repz
jbe
mov
mov
das
xor
outsl
jae
lods
fadds
arpl
pop
mov
dec
imul
inc
popa
loope
mov
aaa
and
fwait
mov
pop
mov
test
scas
add
test
fdivs
or
sub
xor
jns
mov
mov
jle
mov
mov
pop
push
dec
mov
xchg
decl
fcmovb
inc
test
call
sub
sbb
sbb
xchg
pop
xorl
imul
mov
or
lahf
pop
jns
aad
jb
push
cld
and
je
rorb
testl
adc
sub
incl
pushf
jnp
fcmovne
int3
lcall
lret
gs
and
xor
movsb
sub
jne
movsb
popa
enter
lods
jo
pop
push
and
aad
jns
mov
jnp
scas
stos
shld
xchg
scas
int
subb
jecxz
cmpsb
test
mov
lret
dec
jl
or
or
sub
push
fcompl
mov
hlt
dec
or
jns
sbb
scas
data16
cmpsl
aam
cmpsb
mov
push
loopne
cmp
jge
andb
and
mov
cltd
movsl
pop
decl
popa
xor
jns
ret
fwait
inc
dec
xchg
decb
push
popa
xor
out
adc
mov
xchg
cmp
lods
pop
mov
in
xchg
cmp
xor
xlat
mov
dec
aad
inc
rolb
cs
les
mov
imul
sbb
jno
sbb
inc
std
xchg
or
cmp
xchg
sbbb
inc
pusha
fadds
sbbb
sbb
je
cmpsb
cwtl
fwait
mov
adcb
xor
arpl
aas
loope
cmp
cmp
bound
out
jmp
push
cld
sbb
cmp
bound
leave
es
jmp
mov
add
ja
lea
or
int3
push
insb
nopl
scas
push
push
xchg
clc
popa
fcoms
adc
or
sbb
lret
insl
xor
sub
mov
shrb
add
jo
push
jns
and
lahf
or
push
mov
add
push
push
push
inc
les
or
mov
fistpl
sbb
andb
mov
mov
push
mov
lock
int3
xor
pop
into
ret
in
pop
loopne
nop
mov
scas
fcomi
inc
icebp
cmp
ja
xor
push
out
mov
call
mov
in
xchg
push
mov
pop
negl
or
dec
push
mov
repnz
ss
push
ja
test
lea
loope
in
mov
out
dec
aaa
push
imul
scas
mov
xlat
cmp
xchg
push
xchg
pop
push
sub
sahf
pop
adc
int3
imul
push
xchg
rclb
push
adc
imul
sbb
imul
repz
aam
loope
push
add
or
aam
mov
adcb
mov
fnstsw
aas
inc
je
cltd
push
icebp
push
pop
xchg
sub
fldcw
sar
cmpsb
dec
pop
jge
cmp
pushf
das
mov
or
adc
pop
or
fcom
cmp
arpl
pop
sbb
sbb
fld1
xor
loop
shl
push
les
loopne
in
push
pop
fcomp
lock
in
js
mov
pop
jmp
mov
jno
test
loopne
pop
inc
adc
les
sbb
fldenv
jae
aam
cmp
sbb
dec
xor
fisubl
pop
dec
lock
repz
test
pop
cmp
in
imull
les
inc
daa
lods
arpl
outsl
and
int3
popf
mov
gs
decl
pop
popl
andb
mov
xchg
pop
mov
mov
loopne
sbb
cmp
mov
data16
test
sbb
dec
imul
insb
lcall
arpl
jns
les
push
lods
or
aam
insb
pop
mov
jno
cmp
pop
jbe
add
push
jb
rcr
ja
mov
jbe
popf
out
cwtl
icebp
dec
sbb
cmp
dec
fiaddl
pop
mov
push
loopne
lds
mov
mov
cmp
jbe
loop
aad
cmpb
lahf
js
nop
inc
lds
push
adc
lret
test
movsb
xchg
jecxz
fistpl
jl
cmp
repnz
out
sbb
bound
lret
jmp
scas
and
mov
jmp
and
subl
int
push
jge
pop
leave
js
fs
xchg
dec
nop
addl
jo
adc
dec
popa
pop
cmp
fs
mov
xchg
stc
cmpsb
inc
push
pushf
dec
mov
fmul
jns
out
pop
and
push
rclb
aam
clc
add
sub
nop
push
add
xchg
jle
push
out
aad
leave
rorb
add
pop
push
mov
jnp
insb
les
jp
imul
push
insl
push
cmp
push
mov
add
adcb
mov
addl
jp
push
bound
sub
jo
push
rclb
push
loopne
jns
in
inc
pop
lds
test
popf
fldl
mov
andb
dec
pop
cmp
imul
cmc
iret
cmc
nop
sahf
mov
into
fs
addl
add
lds
sbb
and
lahf
mulb
push
push
scas
imul
lret
push
js
sbbb
push
cmc
or
cmp
xor
mov
cmp
add
xor
sbb
in
xchg
loopne
sub
loopne
sbb
pop
scas
pop
rcrb
lock
lret
insl
pop
push
sti
mov
push
bound
filds
cmc
loope
ja
add
and
xor
stos
movsb
sbb
and
pop
pop
xchg
lods
and
test
inc
jo
pop
mov
dec
xchg
mov
popa
cmp
fs
arpl
movsl
ljmp
cmpsb
fisubs
jo
xchg
mov
xchg
data16
ret
ja
xchg
int3
ret
mov
movsl
cmp
cmp
xchg
imul
sbb
mov
outsl
mov
bnd
js
ljmp
out
cli
ficoms
xchg
movb
fucomp
xchg
ljmp
and
in
add
or
dec
sbb
xor
pop
cmp
mov
fstl
dec
loope
adc
push
cmp
es
fistpl
fstp
or
sti
call
jp
repnz
sahf
xchg
lahf
js
aam
dec
dec
pop
push
loope
jbe
pop
push
andb
mov
xchg
push
or
mov
push
cmp
das
inc
arpl
pop
fisubrs
or
xchg
xchg
cmp
pop
cmpsl
pushf
jl
dec
incb
pop
push
push
fcoml
pusha
sub
stos
pop
dec
andl
jg
push
aam
xchg
add
xchg
fisubl
imulb
stos
test
add
test
ss
ffree
pop
mov
test
and
int
sbb
cwtl
pop
stos
dec
outsb
add
icebp
ljmp
movb
cmp
jo
jl
movsl
jle
in
inc
xchg
jbe
inc
xor
fidivrl
shlb
cmp
mov
aaa
nop
pushf
mov
lods
add
shll
loope
pop
scas
ja
bound
jae
inc
and
jno
xchg
pop
cmpsb
imul
sbb
icebp
icebp
jb
xchg
or
sbb
pop
pop
push
inc
cwtl
pushf
jecxz
pop
xchg
adc
mov
pop
sbb
aaa
pop
pop
sbb
and
leave
jne
mov
shlb
nop
mov
stc
xchg
jno
push
jns
loope
inc
pop
jo
mov
jno
mov
mov
cmp
fsub
in
jo
add
mov
icebp
mov
sbbb
mov
loopne
jmp
bound
adc
sbb
popf
sub
sbb
fdivrs
testb
lcall
sbb
aas
mov
pop
pop
cmp
xchg
push
loopne
push
std
pop
test
movsl
push
xchg
fs
push
adc
js
cli
in
out
into
sbb
lds
mov
add
out
jmp
test
add
scas
jno
fwait
scas
repnz
nop
dec
imul
int3
adcb
idivb
jne
movsl
push
and
jo
mov
lds
pop
mov
cmpsb
xor
jp
cwtl
or
lea
sbb
subb
pop
lret
pop
loop
inc
mov
aam
loopne
and
fadds
out
shrl
sub
test
aad
dec
xchg
xchg
xadd
inc
fldpi
leave
jns
and
jnp
jno
lcall
mov
mov
cli
les
lret
jle
fisttpll
lods
inc
orl
addb
jecxz
je
add
pop
dec
jb
cs
mov
arpl
in
int
lret
cmp
lock
es
sbb
xchg
mov
pop
std
aad
loopne
jmp
shr
int
xchg
sub
inc
jge
lock
out
in
jl
jmp
cwtl
hlt
jge
jo
xchg
mov
xchg
insb
je
mov
les
pop
call
mov
cli
repz
jle
mov
jle
and
mov
shl
and
fwait
adcb
aas
push
sbb
jnp
in
outsb
inc
xorb
pop
lds
mov
mov
shrl
ds
call
mov
xchg
mov
or
mov
pop
lock
and
jge
push
cmp
shll
scas
pop
inc
stos
xor
loopne
and
xchg
xchg
jne
lea
xchg
push
mov
stos
and
mov
shrl
scas
cmp
or
push
rorl
push
lds
arpl
mov
in
adc
out
flds
imull
cmpsl
and
push
dec
mov
dec
dec
test
fnsave
insb
cmpsb
push
sbb
sub
dec
jne
sbb
xor
jg
dec
add
inc
rcl
cltd
mov
jo
arpl
mov
jo
pop
shlb
loope
sbb
das
mov
or
inc
call
inc
test
mov
loopne
dec
push
popf
xchg
dec
push
jno
adc
loopne
aam
fwait
jo
enter
mov
imul
pusha
sti
jnp
pop
arpl
inc
cmp
xchg
pop
xchg
dec
mov
and
sbb
cwtl
xchg
scas
ds
hlt
in
sahf
cld
sahf
loopne
xchg
jge
pop
arpl
ja
pop
push
dec
add
mov
pop
sub
adc
add
popa
push
out
push
push
push
push
pop
dec
inc
cmpsb
fnop
and
dec
jmp
jp
push
aam
inc
stos
xorb
pop
in
xor
and
and
test
mov
insb
mov
cmp
inc
decl
out
lods
sub
mov
dec
scas
mov
dec
fstl
sub
mov
xchg
mov
push
push
cmp
pop
popa
movups
out
cwtl
pop
sahf
jmp
cmp
sahf
pop
dec
or
cmp
push
roll
mov
xchg
fwait
xchg
sub
fs
icebp
lock
iret
xor
je
insl
mov
gs
jl,pn
scas
mov
loope
push
jl
mov
setae
test
dec
rorl
fxch
lds
aam
xor
xchg
lods
nop
outsb
scas
cmp
popf
jo
stos
mov
aam
nop
and
call
xchg
and
add
adcl
std
inc
lods
jecxz
pushf
ror
add
or
mov
xorb
add
cs
add
fsubr
aaa
sbb
inc
pop
mov
leave
rcrb
xor
pop
xchg
add
cmp
stos
lods
stc
rolb
js
out
in
stos
mov
mov
cmp
cld
aas
fsubs
or
int3
push
mov
loopne
xchg
cmpb
adc
sbb
jg
les
mov
fnstsw
mov
jmp
inc
dec
jae
add
dec
mov
cmp
cmp
sub
cmc
mov
cwtl
jns
inc
mov
mov
rorl
les
ss
loop
xchg
push
jne
imul
scas
xor
cltd
movsb
push
flds
and
xor
mov
shll
mov
adc
fdivr
push
dec
jbe
xchg
stos
cmp
push
pop
pop
dec
data16
push
repnz
cmpsl
out
lcall
xor
add
bound
enter
ljmp
cmp
sub
call
sbb
adc
inc
dec
xchg
aad
cmpsb
jo
add
pminub
jno
jae
in
pop
das
inc
jecxz
pop
add
mov
sub
mov
nop
jge
jne
sti
xchg
ja
cmp
int
and
mov
roll
cmp
jnp
sbb
stos
dec
test
lcall
jmp
push
call
movsl
xor
sub
mov
xchg
int3
xchg
stc
xlat
das
pop
icebp
or
aam
addl
aam
dec
fxch
outsb
xchg
add
jbe
inc
mov
hlt
data16
mov
jmp
loopne
dec
nop
enter
adc
push
push
fstpl
jns
jne
pop
dec
fldcw
jmp
cmp
jae
push
cld
or
cmp
xchg
clc
addr16
inc
mov
lahf
or
and
push
fidivl
jbe
push
and
pop
inc
adc
dec
addr16
dec
addr16
in
mov
inc
cmpsb
cltd
cltd
dec
sub
sub
add
scas
out
mov
cmp
jl
jo
sub
jne
and
mov
idivb
pushf
jne
sbb
inc
jmp
cltd
cmp
fistpl
mov
mov
xchg
ja
clc
lds
mov
or
add
push
mov
lea
lock
test
cmpsb
mov
ljmp
fisubl
mov
sub
shrl
add
nop
iret
je
insl
inc
xchg
mov
mov
mov
les
ljmp
lods
fnstsw
cmpsb
insl
jnp
dec
adc
inc
push
xchg
aam
pop
pop
pop
mov
adc
bound
mov
aaa
shl
jg
or
cs
cli
adc
loope
mov
nop
insl
insb
jno
repnz
insb
xchg
lock
outsb
cmc
mov
aam
mov
or
ja
lds
daa
mov
xor
sahf
inc
sbb
cmp
cmp
or
adc
mov
out
std
ret
pop
push
in
call
pop
lods
in
fcomps
les
jae
stc
adc
adc
icebp
pop
mov
push
lcall
jb
dec
subb
pop
xchg
cs
xchg
and
push
jo
lea
xorl
int3
out
inc
or
sub
pop
push
rolb
jb
popa
push
mov
mov
leave
aam
mov
pop
sbb
pop
push
iret
mov
mov
test
fs
icebp
add
xchg
pop
imul
pop
andb
xchg
bound
add
incb
dec
pop
push
sbb
testl
and
pop
or
stos
sbb
add
fsubs
xchg
je
mov
jb
xchg
sub
pop
pop
jg
mov
jno
add
cltd
push
mov
xchg
push
pushf
jp
test
andb
call
sbb
adc
mov
xchg
out
clc
fldenv
pop
mov
je
pop
add
loopne
ficoml
lcall
fxch
loop
or
xor
mov
lock
jo
test
push
sbb
dec
pop
add
fwait
pushf
addb
mov
cmp
shr
push
dec
sub
js
aam
inc
pop
dec
inc
add
xor
faddl
dec
test
aam
iret
sti
sub
cwtl
jmp
in
mov
insb
mov
es
cmp
xchg
push
mov
mov
mov
push
jno
iret
add
loopne
sbb
cld
sub
jno
cmpsl
fdivrl
or
mov
clc
cli
xlat
jo
push
lock
pop
pop
test
sub
std
mov
jo
mov
add
test
sarb
cwtl
push
sarb
fisttpl
jo
popa
xor
jb
xchg
mov
mov
shlb
cwtl
dec
hlt
mov
cmp
sbb
sbb
sbb
pop
arpl
mov
mov
je
fmull
mov
xor
sub
pop
lcall
in
mov
jne
adc
and
fimuls
adc
dec
lock
popa
pop
jnp
aaa
imul
sahf
aas
fdivr
pushf
fs
dec
and
movsb
mov
enter
shr
rorl
loopne
and
pop
lds
pop
lcall
imul
add
adc
in
sbbl
sbb
jnp
fiaddl
mov
cld
jne
lahf
es
cmpb
cmc
lods
mov
push
sarl
gs
jl
std
fisubl
pop
xchg
and
in
sub
fldcw
loop
shlb
jl
sub
cmp
sbb
test
pushl
push
or
fucomip
push
adc
push
add
repz
add
push
aam
xchg
shrb
jl
andl
mov
cltd
jbe
push
push
pop
pop
cmp
sbb
andb
out
inc
cltd
and
cmp
cmp
scas
mov
ljmp
push
mov
sub
fmull
cmp
mov
push
das
push
sbb
add
jns
pop
test
arpl
mov
inc
jne
cmc
test
jge
scas
shlb
ljmp
int3
sbb
imul
add
pop
jge
idivb
leave
inc
push
or
in
or
ds
lret
cmp
mov
nop
add
xchg
dec
pushf
out
sub
adc
or
or
pop
pop
je
dec
and
mov
stc
push
adcb
je
jp
sbb
jb
mov
pop
roll
pop
mov
lods
mov
and
pushf
mov
xchg
stos
pop
xchg
mov
pop
stos
add
mov
cld
adc
je
mov
aam
jnp
and
push
sbbb
mov
cltd
stos
rorb
mov
iret
push
vcvtdq2pd
mov
outsl
cmp
ucomiss
and
xor
mov
dec
jg
adc
addb
xchg
fs
test
adc
ret
addb
rclb
add
arpl
test
fprem1
mov
mov
in
sub
dec
iret
mov
inc
stos
mov
mov
pushf
lcall
data16
test
int3
lock
pop
repnz
cmp
scas
xor
mov
jns
out
scas
ss
pushf
mov
arpl
add
jo
fs
clc
xor
scas
or
or
mov
cmp
push
xchg
out
sbb
mov
test
pop
loopne
fldenv
sbb
xchg
cmp
mov
ffree
sbb
pop
xchg
inc
mov
xor
sbb
mov
cmp
sti
dec
imul
lcall
fwait
enter
rol
mov
fsubr
icebp
subb
in
iret
rcrl
cmc
mov
ljmp
fwait
cmp
xchg
cmpsb
xchg
inc
push
les
hlt
in
stos
iret
std
aad
dec
ficoms
mov
or
hlt
push
test
js
je
adc
mov
andb
test
lahf
das
cmpsb
inc
mov
cli
cmp
pop
jl
pop
movsl
add
xchg
add
scas
je
in
mov
fstpt
xchg
mov
or
push
inc
pop
outsl
cmpsl
mov
das
lods
ja
dec
mov
das
or
stos
sbb
insl
adc
iret
sub
or
fs
sbb
hlt
or
bound
cmp
mov
jo
cmp
addr16
jle
push
jle
or
sub
cmp
jp
outsl
pop
cmc
sub
add
pop
dec
cmp
fwait
push
aam
cltd
dec
cli
inc
ja
fimuls
scas
dec
arpl
dec
dec
push
push
jne
jmp
jo
data16
mov
fisubs
bound
dec
mov
pop
jo
pop
sub
jle
iret
adc
xchg
pop
les
cmp
inc
sti
adc
mov
popl
pop
in
leave
clc
bound
and
popa
xchg
enter
push
mov
mov
adc
inc
test
jne
adc
into
dec
add
je
sahf
ljmp
lds
or
call
or
jecxz
lds
jo
addl
repnz
pop
xchg
add
sbb
sti
std
dec
test
movsl
sbb
mov
xor
sarb
test
dec
adc
sub
cmp
adc
mov
cltd
pop
xor
dec
push
push
mov
dec
insb
out
sti
jb
dec
and
movsl
mov
fsubl
pop
lds
push
insl
stc
mov
aad
pop
stc
and
sbb
add
push
dec
mov
cmp
mov
lods
hlt
jecxz
inc
jp
mov
mov
out
sarb
cltd
ret
in
sar
into
js
mov
or
insb
sbb
mov
outsl
push
jecxz
xor
je
hlt
fwait
stos
fsubs
xor
mov
jno
push
lds
shl
daa
cmc
fisttps
push
mov
arpl
push
out
call
cmp
stc
jle
test
aas
je
shr
sahf
inc
fucom
fsubs
stc
jb
outsl
dec
int
push
cmp
rol
dec
push
rcr
inc
mov
mov
out
cmp
xor
and
mov
in
imul
fwait
arpl
fstps
sbb
fiadds
ret
iret
adc
push
pop
jns
stc
mov
dec
ficoms
mov
rcrl
add
push
and
aam
les
loop
xchg
aad
jmp
xchg
jp
in
jg
inc
cmp
cmpsb
mov
fcomi
lahf
bound
jne
gs
adc
mov
insb
xchg
mov
ja
rorb
sub
nop
push
pop
sahf
pop
xlat
call
outsb
mov
fnsave
push
or
rorb
rcrb
push
cmp
ret
cmp
in
sub
inc
push
push
cmp
mov
jne
nop
mov
xchg
or
cltd
xchg
popf
je
fs
inc
je
insl
cmp
mov
xor
je
jl
js
pusha
les
sbb
cmp
sub
loope
xchg
lds
cmpsb
mov
insl
cmp
cmp
cmpsl
xchg
mov
jl
xchg
in
xchg
test
sahf
jo
popa
aad
scas
cmp
rcrb
scas
outsb
movsl
and
or
lret
jge
mov
jb
out
cmp
mov
add
cmp
and
in
or
ljmp
sahf
loope
aad
rcrl
in
insl
sbb
xchg
xlat
lock
mov
or
inc
test
mov
or
rolb
jo
mov
push
xchg
rorl
mov
out
popf
fsubrl
cmp
arpl
mov
xchg
cmp
std
mov
cmp
aad
push
fildl
les
cmc
and
cmpsl
sbb
ja
pop
lcall
orl
pop
or
fsubrs
loope
data16
inc
mov
jo
jns
pop
pop
imul
mov
inc
push
pop
xchg
mov
pop
sti
sbb
pop
xor
fsubrl
push
pop
std
mov
stos
jo
sub
stos
dec
push
sbb
mov
push
cltd
or
push
icebp
sub
mov
mov
sbbb
sbb
leave
pop
idivb
insb
das
cmp
push
pop
mov
fwait
cmp
call
adc
or
les
cld
push
pop
push
adc
adc
adc
sub
xor
data16
mov
bound
icebp
pop
jbe
dec
mov
loope
pop
mov
mov
or
lahf
adc
sub
push
mov
in
icebp
pop
repnz
sub
jmp
xchg
clc
pop
add
jecxz
push
or
pop
mov
mov
mov
mov
mov
mov
mov
pushf
jno
aad
add
jle
xchg
mov
fs
inc
jo
subl
movsb
inc
inc
dec
sbb
pushf
shlb
sbb
cmc
sbb
xchg
sbb
jo
and
shlb
dec
push
lods
sbb
jle
sub
rorb
jno
lods
add
jo
or
mov
repnz
cmc
sbb
sbbl
sbb
shlb
sbb
lret
divl
test
add
rorb
shlb
test
add
test
mov
movsl
jo
setnp
shlb
push
shll
xor
mov
pop
arpl
test
mov
pop
cwtl
xlat
jle
fsubs
adc
pop
xor
adc
jo
adc
in
jg
mov
scas
fdivrl
sbbl
icebp
pop
jmp
and
call
scas
test
jecxz
pop
cli
repnz
jecxz
es
pop
loopne
sub
cltd
mov
les
xchg
sbb
xor
inc
add
jmp
mov
add
jmp
popf
daa
mov
sub
ss
pop
outsl
mov
xor
xchg
clc
out
mov
icebp
inc
iret
mov
mov
xchg
mov
cmp
repz
xchg
xchg
mov
mov
mov
dec
test
push
mov
adc
pop
aam
lret
ror
inc
inc
lds
lock
out
les
push
mov
mov
pop
jne
les
adc
mov
shll
jecxz
fs
iret
aas
arpl
xchg
push
cmp
mov
mov
mov
mulb
sbb
adc
aad
orb
xchg
fwait
mov
loopne
cmp
inc
lahf
cmpl
scas
push
ja
mov
dec
and
fimuls
mov
inc
xor
sub
sti
test
aaa
aam
sub
pop
out
xchg
repnz
bound
mulb
cmp
loopne
outsb
fistl
int3
adc
xor
cmp
mov
cwtl
sub
pop
xchg
push
mov
push
jns
pop
adc
and
or
gs
pop
sub
adc
xor
cmpsb
inc
loopne
loope
popa
lds
push
les
jne
fistl
push
fcoms
xor
aaa
push
dec
pop
es
jno
mov
pop
and
ja
mov
scas
pop
mov
push
repz
push
rclb
out
adc
outsb
inc
loopne
and
into
inc
and
adc
mov
stc
call
fnsave
movsb
pop
dec
or
push
pop
xchg
jb
pushf
or
insb
cld
pushf
pop
push
sbb
outsl
pop
fnsave
rcrb
jmp
fbstp
add
bnd
jb
cmp
mov
sahf
mov
jmp
pop
xchg
xorb
adc
and
loope
push
mov
xchg
inc
pop
fnstenv
fucomi
pop
and
rolb
pop
aaa
fs
cld
sbb
or
fisubrl
rcr
jmp
fs
aam
jno
mov
jmp
xorl
out
leave
cwtl
jmp
fs
jp
jno
pop
mov
stos
add
xchg
cmpb
push
push
mov
cmp
cmp
pop
sahf
jae
dec
xchg
cmp
enter
hlt
xor
jno
jae
aas
jo
aam
mov
sahf
mov
sub
pop
xor
mov
cmc
in
ss
cld
or
in
je
divb
add
insb
pop
nop
fisubrs
fldenv
ret
add
fdivrs
fwait
ret
xor
call
jb
mov
pop
xchg
xor
stos
and
mov
int3
jo
leave
jbe
cld
fdivl
xor
fdivl
pop
mov
dec
fstl
cs
adc
mov
jo
stos
cmpb
mov
flds
loopne
out
pop
jecxz
imul
cs
xchg
pushf
pushf
cmpsb
pop
rcr
fs
dec
out
cs
js
mov
loope
pop
repnz
ds
pop
js
mov
repz
test
push
sbbb
jae
mov
sar
fadds
xchg
pop
mov
out
jl
cld
test
rorl
loopne
mov
push
jo
ds
mov
or
push
pop
vcvtps2pd
insb
or
imul
mov
loop
push
inc
aam
test
scas
jg
and
add
test
jnp
and
push
jmp
adcb
mov
xor
push
stos
dec
jns
mov
jp
push
or
mov
test
push
ss
xlat
or
fldl
lahf
arpl
sbb
scas
jnp
dec
outsb
fstl
es
out
inc
add
jnp
add
bound
cmp
mov
inc
cmp
outsl
cmp
js
mov
xchg
loopne
shr
leave
arpl
les
lods
jge
dec
shlb
jno
push
lret
std
ret
test
cmp
pop
sahf
adc
push
movsl
push
xor
scas
nop
lcall
pop
push
mov
push
add
pop
inc
pop
cmp
ret
adcl
jns
push
adc
cmovb
sbb
mov
test
call
sub
mov
cmp
xchg
test
mov
aas
je
push
dec
pop
jg
mov
nop
les
fistpl
and
and
mov
inc
sbb
fwait
movb
arpl
dec
push
fdivs
js
outsb
add
jae
scas
mov
fcmovnbe
jg
jl
dec
hlt
pushf
adc
dec
cmpsb
scas
mov
cmp
jmp
lock
hlt
mov
jb
fcoml
mov
push
lds
mov
icebp
ja
add
arpl
xor
jns
popf
adc
mov
push
sti
jp
fucom
xor
push
push
adc
cld
popa
add
out
jae
aas
or
outsl
mov
mov
fdivrl
cld
sbb
scas
iret
xchg
jecxz
xchg
shlb
pop
mov
sub
insl
fildl
daa
jo
aaa
int3
cmpl
lret
and
fucomi
loope
out
dec
pushf
mov
mov
mov
mov
and
xorl
ljmp
and
fwait
ret
jbe
adc
inc
leave
cmp
inc
jl
fyl2x
js
sub
jo
push
mov
mov
xchg
sbb
xchg
es
movsb
test
pop
push
sbb
cmpsb
or
add
cltd
cmp
adc
mov
cmpsl
pop
jb
out
mov
mov
fadds
test
std
push
push
movsb
test
int
mov
inc
pop
cmp
fldcw
or
and
andl
pop
int3
jl
mov
sahf
pop
gs
shlb
loopne
jo
inc
inc
mov
fstpl
shlb
out
lods
cmp
mov
inc
jno
xchg
push
cld
lret
aas
pop
mov
cltd
call
mov
lret
js
inc
pop
xchg
mov
mov
jb
adc
sub
cmp
das
mov
test
jmp
add
pop
jg
mov
call
dec
and
jno
jae
xor
cmpsb
pop
enter
mov
pop
movsl
fsubs
inc
in
cmpsb
sahf
test
mov
je
cwtl
test
mov
cltd
in
sbb
test
xor
mov
loope
xchg
xor
jo
sbb
cmp
mov
fnstenv
fxch
xor
xchg
in
imul
out
jno
icebp
pop
xor
in
mov
addb
inc
jno
push
stos
call
jge
push
mov
ja
sbb
lds
dec
and
setne
adc
out
ljmp
ja
pop
daa
in
pop
out
idiv
in
mov
aaa
push
sub
imul
push
push
adc
test
dec
push
stos
push
pop
cmpsl
cmpsb
fnop
inc
cmp
fsubs
sbb
and
mov
cmp
sbb
fstl
js
enter
daa
adc
inc
mov
clc
jb
lods
cmpsl
stc
es
outsl
cmpsl
rclb
mov
pop
shrb
shrl
pop
addr16
inc
out
mov
stc
pop
test
dec
push
fs
xor
pop
je
mov
jl
pop
faddl
clc
arpl
sub
jno
pop
dec
ljmp
inc
fcompl
orl
fistl
testb
cmp
cmp
mov
in
js
cli
jns
jmp
dec
leave
mov
hlt
mov
insb
test
cwtl
mulb
sahf
cmpb
dec
bnd
jbe
sbb
sbb
in
cmpsl
mov
fsubrl
mov
jp
adc
mov
cmp
leave
stos
xchg
xchg
pusha
int
fstl
int
pop
inc
popa
test
mov
xor
mov
lret
jge
sub
idivb
and
fsubrs
add
inc
fstpt
sbbl
cmp
lret
push
jmp
stos
imul
fwait
loop
jne
or
push
cmp
aam
jno
mov
hlt
or
and
rcrb
xor
push
enter
adcl
lahf
popa
push
call
dec
clc
jbe
test
sbb
jg
push
ds
ret
popa
in
push
add
pop
or
xchg
ficomps
out
or
sti
clc
jecxz
das
adc
fisttpll
inc
xor
xchg
ljmp
mov
cmp
in
add
loope
pop
mov
gs
movsl
or
xchg
mov
mov
xchg
into
test
popa
xor
cmp
adc
sarl
insb
sarb
sbb
push
push
mov
inc
mov
sub
lcall
jb
cmp
mov
jg
ror
test
push
notb
xchg
xchg
in
scas
rorl
push
fildl
arpl
in
nop
stc
pop
cmpsl
jnp
leave
push
sub
aad
es
cmp
sarl
xchg
jns
mov
jno
add
bound
int
movsb
and
and
mov
xchg
and
add
in
je
jmp
push
jns
mov
mov
jl
sarl
ficompl
lcall
out
add
mov
insl
cwtl
repz
popf
loopne
mov
insl
in
hlt
cmp
arpl
jle
and
push
gs
js
addr16
fdivs
ja
adc
mov
cmp
sbb
dec
js
popa
cltd
mov
and
hlt
shl
lock
scas
fimuls
into
dec
sbb
ss
sub
pop
mov
xor
add
cmp
cmpsb
push
inc
xor
jo
inc
jg
pop
pop
inc
cmpsl
mov
jmp
or
enter
inc
pushf
jo
push
dec
jecxz
lea
inc
dec
inc
xchg
fs
pop
sbb
gs
insl
and
xchg
or
push
loopne
ffree
pop
setno
jns
mov
pop
shlb
ljmp
inc
and
or
repz
pop
mov
sbb
gs
xchg
adc
mov
cmp
loope
test
push
pop
xchg
add
int3
out
loopne
inc
out
call
mov
les
sar
mov
test
jns
mov
lods
push
add
js
loopne
jg
pop
aaa
mov
push
mov
fcomps
test
mov
sbb
xor
movsb
inc
and
movsb
or
push
movsl
push
lcall
bound
or
sub
xor
jo
repnz
jecxz
into
jae
and
jg
mov
dec
pop
cmpb
xchg
lock
xchg
sbb
lret
pop
out
jno
jle
out
xor
imul
icebp
pop
ss
repz
test
cwtl
push
icebp
adcl
imul
sbb
xchg
pop
pop
imul
mov
dec
or
mov
sbb
pop
inc
mov
out
xor
adcb
sbb
mov
sbb
xchg
out
jb
clc
in
out
sbb
xchg
fimull
mov
pop
mov
jmp
fs
mov
int3
sbb
mov
sbb
cmc
xchg
jo
hlt
imul
cmc
cmp
cmp
orb
sbb
xor
loope
mov
pop
sbb
sub
xchg
nop
jo
and
lods
call
loope
negl
sub
xchg
ficompl
dec
mov
cmp
mov
jmp
enter
inc
enter
fdecstp
xor
adc
sbb
into
popa
or
jo
mov
sbb
fstpt
xor
mov
ds
xor
adc
icebp
test
add
add
mov
pop
add
mov
jno
xorl
push
nop
shl
cmp
pop
jo
stc
xor
xor
or
jo
mov
enter
push
and
pop
xchg
loop
mov
pop
mov
pop
mov
shl
mov
enter
xchg
je
cwtl
dec
mov
imul
sbb
popa
inc
ljmp
loopne
movsl
stos
xorb
push
xor
sbb
mov
fsts
jb
jae
or
es
jno
push
fmull
push
dec
adc
push
das
push
and
mov
mov
adcb
in
xchg
movsb
out
mov
mov
imul
mov
out
add
sti
or
loop
add
fstp
and
mov
pop
loopne
movsb
into
clc
cmp
stos
ficomps
fmuls
pop
addr16
adc
fistpl
cli
ffreep
fs
data16
in
lock
add
cmpsl
jecxz
pop
mov
or
int3
dec
add
push
or
scas
lock
push
clc
add
pop
add
popa
sub
loope
jne
mov
mov
popa
mul
push
shrl
test
xlat
pop
cmp
stos
loope
icebp
pop
sub
push
int3
cwtl
jo
mov
xchg
sub
test
shlb
movb
xorb
sti
sub
push
hlt
push
leave
jns
or
je
xchg
xchg
rcrb
pop
sbbl
jns
in
in
pop
das
jmp
and
push
repz
pop
jae
std
mov
push
fsubs
push
movsb
push
out
or
icebp
nop
sti
mov
mov
mov
cmp
xchg
pop
aad
sub
in
lret
xor
lret
jns
pop
mov
sbb
testl
inc
cmpsl
int3
insl
xchg
lds
pop
and
lea
insb
loopne
rorl
add
pop
push
cli
jns
sub
mov
and
aad
sbb
test
jbe
xchg
nop
scas
fistl
pop
pop
adc
cltd
test
cmpsl
cli
out
jno
jl
lahf
adc
imul
in
repnz
mov
xchg
cmp
push
sbb
mov
jecxz
xor
or
repz
mov
jnp
mov
sbb
lcall
bsf
sbbb
jmp
adc
add
jge
and
sub
test
mov
adc
cmp
jo
and
fsts
icebp
mov
data16
mov
pop
repz
pop
call
ja
les
mov
sbbb
push
out
jb
add
add
cmpl
dec
pushf
xor
mov
sbb
outsl
cltd
sbb
out
push
lds
jnp,pt
cmp
adc
adc
push
or
fld
jno
pop
mov
aaa
mov
scas
cld
mov
push
orb
ss
mov
shlb
jge
imul
stos
test
enter
test
xor
push
scas
cmp
mov
dec
movsb
push
js
jmp
fsin
rcr
mov
adcb
push
outsb
inc
sarl
jecxz
insb
jae
aaa
pop
loope
mov
dec
xor
stos
mov
xchg
mov
cli
rcl
xchg
push
xor
int3
out
sub
inc
xchg
addr16
daa
lahf
ljmp
pop
sub
mov
lock
cmp
jnp
movsb
loopne
sbb
repz
lcall
cld
fsubl
imul
dec
sti
dec
rclb
das
lcall
ret
jae
roll
out
stos
bound
outsb
loopne
xor
pop
pop
inc
sub
mov
daa
cmpsl
and
xchg
outsb
popf
push
mov
aas
and
mov
out
add
xchg
add
jecxz
pop
push
push
mov
scas
adc
pop
adc
push
cmpsl
pop
xlat
jb
or
push
dec
mov
into
sub
add
xchg
pop
lret
xor
adc
movsl
sahf
lods
dec
add
xchg
jae
jge
inc
jg
in
xor
test
push
imul
cli
pop
int
scas
test
movsb
xchg
rcrb
ja
jnp
jl
in
stos
jo
ss
es
mov
mov
xlat
lret
icebp
rclb
test
mov
aaa
jl
addr16
scas
ret
subb
fistpl
mov
sbb
mov
insl
mov
pop
and
lea
fs
mov
pop
lds
lds
mov
dec
dec
fcomp
ret
pop
js
push
mov
mov
out
jnp
outsb
loope
insl
and
enter
pop
lea
and
mov
pop
clc
xor
push
mov
fs
inc
movsl
sbb
inc
pop
push
xor
adc
pop
ljmp
and
jne
sbbl
popa
fiaddl
or
fnstcw
scas
rcrl
clc
je
and
xchg
ss
add
dec
xor
imul
fstpl
daa
sahf
mov
mov
lds
test
fdivl
js
dec
aam
repz
fucom
cmp
mov
adc
cmp
dec
push
mov
jo
cld
jbe
dec
outsb
loopne
in
ret
fildl
bound
mov
xor
adc
les
cmp
xor
into
pop
imul
pop
cmp
std
test
xchg
add
ret
movsb
sahf
sbb
mov
mov
mov
in
dec
fcomip
lock
fstl
enter
pop
mov
add
cwtl
lock
pop
mov
dec
mov
shl
test
movsb
mov
mov
pop
loopne
push
bound
sbb
bound
nop
cmp
mov
insb
push
lods
lock
pusha
xchg
push
iret
xor
cmp
push
sbb
jge
nop
dec
lock
je
inc
loop
pop
icebp
scas
adc
nop
cmp
cmp
lahf
adc
xor
jg
mov
cld
add
ret
test
imul
mov
adc
xchg
pop
and
cltd
sbb
stos
lret
loopne
aas
xor
mov
fwait
pop
loop
cmp
rclb
mov
jmp
jno
jno
rcl
ret
dec
out
idiv
es
or
repnz
fld
push
pop
cmp
andl
push
outsb
push
fistpl
sbb
xor
lret
push
push
xor
test
lret
daa
or
push
sbb
push
sbb
out
and
ds
repz
out
loop
xchg
daa
faddl
lret
or
int3
mov
cmp
sub
jnp
mov
popa
push
dec
mov
js
gs
stos
pop
xor
aas
dec
adc
mov
out
ja
sbb
adc
outsl
les
push
lret
ds
sbbb
mov
fs
repnz
dec
pop
mov
xor
xchg
mov
adc
mov
pop
and
out
push
fsts
arpl
or
pop
adc
aam
cmp
dec
pushf
sbb
mov
xchg
mov
test
jl
push
rorl
lahf
shrb
jb
daa
cmpsl
pushf
xchg
movsb
mov
sti
or
fs
mov
cli
push
inc
loopne
lods
and
mov
cmp
mov
es
out
call
movsl
adc
cmpsl
scas
popf
fs
pop
xor
les
sbb
sahf
mov
xchg
loope
rorb
push
cmp
push
fcomps
jge
adc
and
mov
idivb
push
cmp
push
mov
push
mov
scas
sbbl
adc
cwtl
xchg
test
pop
lods
xchg
js
shlb
dec
lods
jo
cmp
scas
loope
cmp
orl
icebp
sbb
fdiv
mov
outsb
jb
cmp
jb
call
push
mov
push
xchg
mov
repnz
mov
sbbl
pop
movsb
xchg
sbb
or
clc
xchg
shl
mov
enter
jg
lds
sbb
xchg
push
jns
xchg
mov
cmpsl
and
mov
push
mov
add
mov
jnp
das
push
dec
cltd
test
push
push
mov
sbb
icebp
cmc
mull
or
pop
jge
iret
xchg
cwtl
adc
lock
cmp
and
sahf
push
push
xor
xchg
pop
addl
insb
jb
imul
mov
adc
rclb
cmpsl
lret
xlat
fisttpll
mov
es
adc
cmp
mov
inc
xchg
rcr
ror
pop
or
in
pop
jae
lock
sbb
xor
cmp
xchg
ss
iret
cli
fldenv
fildl
daa
pop
add
jp
or
dec
out
sbb
imul
lcall
lcall
sbb
dec
ror
push
int
and
dec
sub
push
jno
aam
or
mov
cli
xor
push
xchg
test
mov
test
push
pop
cmp
xor
mov
dec
imul
push
push
and
popa
les
das
lret
and
bound
sahf
dec
in
sbb
fldenv
les
enter
out
cmp
adc
enter
push
sub
cs
movsb
js
stos
outsb
stc
sub
lds
dec
sbb
push
lock
pop
xchg
sahf
aad
pop
push
dec
add
fildll
icebp
bound
scas
jp
lahf
cltd
cld
das
repz
gs
push
dec
inc
adcb
mov
into
pop
outsb
dec
hlt
cmp
rorl
call
rcrl
cmp
sbb
dec
mov
shl
insb
push
adc
push
shll
adc
shl
mov
mov
pop
stc
add
inc
nop
and
outsl
shrl
leave
xor
popa
out
lds
cld
jmp
dec
jae
stos
cmp
cmpl
and
push
mov
subps
clc
dec
in
les
sbb
adc
xchg
and
and
scas
mov
pushf
push
rcrb
popa
or
cmp
insl
dec
stos
bound
test
pop
pop
fstpt
add
sbbb
jne
jb
incb
push
repnz
pop
sub
je
mov
cwtl
pop
movsb
cmp
movsl
pop
cmp
movsl
fists
scas
xor
xchg
dec
cmp
dec
sbb
fstps
mov
xchg
cmpb
mov
jnp
mov
aam
cmp
xchg
push
push
inc
push
sbb
dec
jecxz
fldt
mov
ret
mov
push
loopne
sub
hlt
dec
xor
or
sbb
xchg
aad
ja
sbb
ftst
push
push
dec
mov
push
repnz
enter
mov
into
das
shll
jns
jb
ds
mov
sbb
stos
scas
int
daa
pop
add
dec
daa
lret
lcall
int3
stc
pop
je
xor
iret
and
testl
test
daa
mov
mov
andl
scas
push
aad
push
addb
cwtl
mov
pop
pushf
and
add
xchg
shrb
pop
sub
dec
mov
mov
scas
negl
out
adc
fidivrs
sbb
mov
cmpsb
or
dec
data16
daa
mov
pop
lret
dec
and
daa
sti
sub
xchg
jo
ljmp
ret
bound
rcr
sbbl
dec
dec
pop
mov
jno
inc
mov
sahf
inc
insl
cmp
das
jb
jecxz
cmpsl
or
aaa
cmp
xchg
mov
icebp
sahf
insb
into
rcr
pop
repnz
adc
mov
nop
adc
data16
lret
xor
mov
pushf
push
mov
pop
mov
dec
jns
push
inc
sbbb
xorb
addr16
push
int3
test
inc
ret
push
jp
push
jb
push
out
dec
daa
fwait
mov
dec
cmp
jb
enter
aad
cmp
pushf
inc
push
and
cmpsl
push
imul
int
dec
cmp
pop
jns
cwtl
loope
mov
adc
mov
sub
lods
pop
dec
rclb
or
push
in
mov
inc
sub
outsl
movsl
insb
mov
aas
mov
push
cmp
repnz
xlat
scas
and
into
pop
fs
test
mov
jge
jo
inc
and
jo
sbbl
pop
aad
pushf
push
jp
xchg
xchg
push
popa
pusha
loopne
jo
cmpsb
aam
sub
icebp
ret
mov
dec
sub
xchg
inc
sbb
cmp
test
adc
mov
cmp
push
in
xor
mov
test
test
add
push
pop
addb
pop
ret
lret
out
loope
jge
and
scas
xor
repnz
stos
cmp
add
ljmp
jle
shrb
icebp
mov
ja
incl
mov
and
movsb
inc
popa
sbb
call
jnp
roll
push
sbb
or
dec
sahf
pop
cmp
add
mov
lea
lret
cmp
push
sub
inc
jp
imul
subl
imul
jno
inc
jle
ljmp
in
bound
jb
stos
mov
inc
push
call
mov
pop
clc
fs
cmp
nop
mov
push
and
adc
rol
add
scas
xchg
cmp
fistps
or
dec
mov
mov
pusha
adc
mov
js
rclb
sbbb
fiadds
jnp
out
jb
int3
lods
adc
and
dec
fnstcw
in
repnz
test
mov
push
sbb
les
mov
pop
loope
xchg
addr16
shlb
scas
je
repnz
mov
aad
dec
movsl
push
adc
lock
orl
jmp
cmpb
imul
fucom
jbe
push
jo
mov
jp
cmp
pop
cmp
addr16
pop
cmp
out
cmp
xlat
pop
fsubrp
pop
mov
xchg
jle
data16
mov
adc
enter
call
cld
mov
or
and
adc
jae
mov
mov
push
mov
push
js
sbb
or
push
pop
cmpsl
mov
fistl
cmp
mov
stos
in
sbb
cltd
and
or
mov
mov
cli
int3
sbb
mov
pop
cmp
test
push
xor
inc
mov
xchg
inc
mov
fs
mov
mov
icebp
sub
mov
cli
xor
insl
fisttpll
hlt
ljmp
lea
push
fnstcw
insb
mov
arpl
dec
jmp
fdivrl
fdivr
fwait
pop
push
mov
mov
and
add
lds
jge
data16
test
adc
jno
pop
addr16
sub
out
sahf
mov
sti
cmp
push
inc
out
test
lret
pusha
jg
jo
rorl
mov
movsb
fnsave
jle,pn
jge
mov
bound
push
jp
fcmovb
loop
movsl
mov
shlb
push
mov
insl
roll
int3
xor
ss
nop
or
xchg
enter
in
fsts
cli
mov
mov
inc
sbbb
sub
add
cmpsl
stos
jg
arpl
xor
cmpsl
jno
inc
aam
test
inc
sub
subl
cmp
and
inc
push
idivl
mov
sahf
in
lahf
dec
mov
mov
les
shll
pop
idiv
cmp
scas
clc
leave
loop
push
mov
cmc
mov
cmp
push
inc
pop
cmpsb
cmp
or
ret
xchg
pushf
inc
push
push
pop
xchg
loop
jge
xchg
and
mov
fwait
dec
stos
dec
addr16
popf
pop
mov
int
pop
int3
leave
aad
cwtl
push
dec
sub
or
lahf
cmp
fcoml
das
mov
pop
fisttpll
mov
movsl
pop
imul
push
lea
dec
jnp
dec
lahf
popa
mov
push
xorl
push
mov
popa
ds
les
jbe
call
mov
mul
in
xorb
scas
mov
nop
mulb
jecxz
dec
jge
in
mov
add
aad
cmp
and
ficoml
out
scas
lods
lcall
push
xchg
mov
xchg
pop
stos
add
and
out
xchg
ds
cmp
xchg
int3
das
loope
jb
inc
adc
stos
lods
test
dec
jo
popa
mov
je
xchg
push
cmp
pop
aam
pop
sbbb
xchg
cmp
daa
push
fnstcw
mov
lea
je
pop
pop
enter
sbb
inc
ss
cmp
push
stos
push
jo
pop
es
cmp
or
and
sbb
mov
jle
je
xchg
mov
mov
cld
lcall
fmulp
pop
cltd
jo
adc
or
cmp
xchg
mov
addl
mov
lds
jp
and
cmpsb
mov
int3
cmp
vmovd
je
dec
push
jae
shr
mov
mov
outsb
insl
ficoml
push
pop
add
popa
test
jne
insl
mov
adc
dec
cmpl
loope
jo
mov
xchg
adc
iret
stc
sub
push
cwtl
mov
mov
lahf
fs
mov
xchg
dec
es
mov
push
cmp
rolb
fistpl
dec
push
insl
mov
cltd
lds
orb
out
jo
pop
loope
push
push
push
insb
pop
and
addb
sbb
nop
jle
popa
fs
js
addr16
sub
lds
aam
push
test
fnstsw
shlb
jnp
dec
xor
rorl
or
mov
pushf
lret
jge
filds
push
dec
jecxz
gs
bound
mov
adc
mov
xor
mov
movsb
xchg
data16
lds
mov
pop
pop
rorl
lret
aad
and
xchg
scas
xchg
add
mov
fstpt
and
rorb
push
or
push
or
jno
lock
fnstsw
scas
jb
sahf
mov
sbb
and
push
mov
adc
jns
movsl
fsubp
dec
clc
sbb
pop
arpl
xor
dec
pop
mov
sti
cs
arpl
push
cwtl
jae
mov
aas
mov
dec
flds
cmp
lret
loopne
push
sarl
pop
stos
xor
jg
xchg
gs
dec
or
movsl
aad
mov
cmp
arpl
loope
mov
cmp
or
or
dec
push
sti
xchg
lock
pop
jno
bound
mov
pop
fsubp
imul
arpl
cli
roll
jg
mulb
cmp
aaa
inc
mov
dec
cmc
fldenv
rolb
cmp
mov
sarb
sarl
sbb
pop
lret
mov
push
push
mov
gs
xchg
out
sub
jnp
xor
fstps
xchg
dec
cmp
pop
mov
lds
lret
test
mov
jnp
xchg
inc
sbb
cs
sub
push
pop
ljmp
mov
push
pop
pop
lcall
inc
mov
or
add
push
dec
cmp
jecxz
repz
mov
cmp
add
fwait
or
dec
leave
mov
cld
movsw
adc
int
mov
pop
fists
jbe
sar
mov
nop
scas
dec
xchg
iret
push
push
rcll
push
loop
mov
xchg
cmc
lock
popf
or
pop
fisubrs
lods
mov
outsl
rsm
loopne
push
adc
xchg
dec
arpl
sarl
inc
push
mov
loop
loope
xchg
mov
mov
fwait
dec
movsl
decl
jns
fs
movsl
loop
ficomps
mov
mov
clc
das
in
scas
pop
in
repz
into
into
pop
popa
pop
sub
pop
jge
lods
xchg
clc
aas
outsb
push
loop
dec
mov
cli
or
bound
test
fmul
dec
scas
arpl
and
sbb
daa
mov
adcl
cmc
mov
xchg
lcall
xor
fwait
or
data16
bound
outsl
pusha
mov
fdivrl
imul
inc
jo
test
out
pop
sti
adc
add
dec
pop
fisttpl
jb
cli
call
push
fldt
lret
test
push
aad
mov
mov
arpl
adc
out
cmp
jnp
xor
test
movsl
and
lret
int3
cmp
mov
push
sub
jg
pop
ss
push
lret
loopne
sub
loop
push
mov
nop
movsl
push
xor
lcall
repz
or
cmp
int3
nop
testl
add
mov
or
aas
xchg
cmpsl
jnp
lods
add
lods
add
out
cmp
mov
pop
push
sbb
arpl
mov
pop
sub
gs
push
ja
stc
sbb
std
enter
mov
pop
gs
inc
lahf
ja
daa
fs
daa
divl
arpl
inc
aad
loopne
fadd
addr16
mov
fwait
imul
jecxz
push
jne
mul
imul
bound
scas
bound
dec
out
stos
addr16
dec
jle
adcb
call
inc
sbb
test
mov
xchg
fistpll
or
and
or
out
push
repnz
aad
lock
jo
mov
shll
xchg
sahf
test
out
xor
fcomip
push
out
inc
xchg
into
mov
push
fldenv
adc
nop
loop
lods
jecxz
cmp
cmpsb
sbb
lods
test
cltd
cwtl
inc
mov
cmp
jo
jae
adc
insb
test
pop
imul
lahf
push
mov
aad
jl
xchg
pop
cmpsw
icebp
sbb
pop
je
xchg
jno
cltd
or
dec
or
rcll
loopne
jnp
out
push
lea
addr16
jnp
sbb
test
insl
pushf
and
cmp
add
lods
xchg
jle
js
test
add
and
add
out
ds
pop
js
push
add
out
movsl
je
cmp
lock
insl
fwait
dec
sbb
pushf
mov
subl
js
adc
mov
xor
out
and
jae
scas
in
and
out
dec
ret
cmc
dec
insl
int
pop
or
scas
lcall
shl
dec
jns
jae
mov
sysexit
pop
mov
pop
insb
imul
loopne
popa
sbb
dec
and
sbb
stos
adc
mov
cmp
xor
and
aam
stos
push
inc
lea
jecxz
sub
jne
xchg
andb
cmp
mov
jne
lds
test
inc
shll
outsl
lock
jns
xlat
xchg
cs
xchg
jecxz
jg
push
into
data16
pop
or
jb
pop
add
shll
inc
int3
ja
sbb
mov
add
jle
xor
push
sbb
jbe
mov
xlat
repz
cs
inc
xchg
cwtl
mov
dec
subb
outsl
push
notl
inc
add
mov
cs
lds
pop
xor
or
imulb
mov
imul
cs
inc
jp
pop
jnp
adc
data16
lock
adc
fucom
cwtl
pusha
adc
jae
or
and
and
cmp
lcall
pop
inc
xor
cli
test
fsts
mov
xor
push
stos
les
popf
adc
mov
subb
pop
lahf
inc
mov
push
imul
daa
sbb
xchg
fstps
test
fstl
mov
pop
hlt
add
movsb
mov
int3
dec
loopne
cmp
xchg
iret
mov
movsb
in
cmc
lret
out
sahf
or
scas
dec
push
popf
xlat
outsl
orl
jbe
mov
and
xchg
push
mov
and
clc
xchg
pop
jno
push
adc
pop
inc
xchg
fstps
cmc
jecxz
cli
lods
cwtl
sbb
add
pushw
subl
cwtl
push
or
cmp
arpl
lds
sub
subb
in
imul
std
adc
test
std
sub
cmp
imul
retw
jb
adcb
xor
and
inc
push
arpl
fldenv
dec
push
adc
bound
lods
xchg
or
jb
sbb
mov
sahf
cmpsl
sub
popa
add
addr16
adc
cld
pop
in
hlt
push
cmpsb
lock
jmp
mov
sbb
dec
xor
jnp
or
sahf
clc
cmp
cmp
pop
cmc
and
sbb
xor
mov
sarl
pusha
cs
dec
add
sbbl
jne
scas
lea
sub
pop
ficoml
sahf
cwtl
je
lock
push
inc
cltd
scas
je
xchg
cwtl
andl
inc
sub
push
add
and
inc
push
jl
push
push
and
test
or
cli
add
sbb
pop
cmp
imul
fstps
sti
je
pop
insb
mov
add
das
pop
sar
pop
aad
push
dec
loope
adc
sub
fdivl
and
mov
xchg
rcrl
subb
inc
jno
iret
or
push
dec
jb
bound
push
jno
lods
add
push
adc
cmp
pop
jecxz
loope
lods
lds
add
cs
jne
imul
shll
addr16
cmp
loopne
xchg
inc
mov
sub
dec
pusha
cltd
dec
lods
pop
loop
cwtl
push
les
jecxz
adc
xchg
fstps
mov
call
or
sbb
cmp
movsb
hlt
enter
sbb
cmp
cmp
loope
add
fstpl
ret
mov
addl
jmp
dec
mov
lcall
pop
loope
into
push
adc
mov
sub
mov
pop
inc
scas
scas
adc
dec
stos
jg
xor
aam
sbb
int3
in
xchg
xchg
bound
gs
cld
fdivs
test
add
test
shlb
inc
cmp
lahf
push
idivb
push
clc
repz
ret
cmp
dec
sbb
fcoml
push
dec
xor
insl
sbbb
js
repz
movsl
movsl
mov
test
mov
mov
bound
xchg
iret
pushf
jb
cld
jl
cmp
icebp
mov
imul
lods
sub
mov
stos
aam
sbb
sarb
lret
ds
mov
pop
cmp
lret
ljmp
add
movntq
sub
repnz
jnp
xchg
mov
aaa
stos
scas
aad
cmp
and
scas
stc
cltd
mov
popa
or
fstenv
fldcw
stos
cmc
cmc
pop
mov
imull
cmp
mov
imul
lcall
test
les
aam
clc
and
adc
push
mov
jb
cmp
push
mov
mov
test
gs
mov
xchg
insb
pop
cmp
iret
jmp
push
cwtl
fs
xor
lahf
and
mov
xor
mov
frstor
jp
add
add
in
inc
scas
cmp
cmpb
loopne
push
pop
lds
pop
sub
xchg
pop
pop
mov
mov
scas
xor
adcl
cmp
mov
cmp
jae
mov
js
gs
push
and
aad
rorb
jns
dec
xor
ja
fs
sub
ret
sbbb
setb
das
je
or
ret
leave
leave
pop
popa
mov
xor
arpl
pop
jmp
add
fistps
jno
sub
ficoml
push
fldcw
orl
jae
xchg
mov
push
aam
xchg
mov
outsl
gs
arpl
mov
jns
test
popf
add
insl
imul
loope
pop
pop
loope
pop
push
jg
bound
mov
andl
cwtl
fs
dec
es
les
cmp
inc
pop
iret
jnp
fidivl
inc
fsts
mov
loope
push
pop
or
fcoml
fwait
cmp
jecxz
or
add
cmp
lds
jle
pop
popf
sbb
dec
cmp
dec
adc
pop
xorb
ja
mov
mov
mov
mov
mov
add
scas
shll
je
mov
sahf
push
add
out
pushl
mov
cmp
xor
mov
xchg
push
adc
dec
mov
push
or
add
pop
incl
add
pushf
push
ja
sbb
ficomps
and
cli
push
xchg
pop
les
add
fstl
or
add
sub
mov
cmpsb
mov
arpl
ret
dec
sbb
mov
imul
and
adc
push
cmpsl
xchg
out
bound
jns
sub
sub
adc
into
pop
sbbb
push
pushf
fsts
sub
adc
mov
dec
and
xchg
iret
or
add
sub
loopne
into
orl
mov
sub
mov
add
rorl
dec
int3
mov
out
cmp
xlat
pop
and
rol
mov
std
les
mov
or
mov
mov
dec
cmp
and
cmp
aad
icebp
xor
jae
and
jbe
dec
cmp
aam
adc
or
pop
jle
rolb
pop
jle
mov
js
push
mov
fs
xchg
dec
lcall
rcll
aam
gs
lret
in
fs
ja
mov
in
and
mov
stos
sub
xchg
scas
cltd
add
insb
frstor
xor
call
dec
pop
jge
movsb
mov
dec
mov
stc
cltd
fs
and
out
inc
mov
test
testb
stos
cld
cwtl
je
subb
push
iret
adc
mov
mov
pop
std
add
add
inc
rcrl
aam
push
or
push
cmpsl
mov
fabs
push
hlt
scas
mov
imul
pop
orb
pop
aas
rorb
add
hlt
or
int3
push
fidivrl
fnsave
imul
cwtl
nop
loopne
lret
jne
lcall
xlat
gs
mov
mov
mov
mov
mov
addb
xchg
xchg
push
icebp
nop
push
pop
pop
stc
or
mov
les
hlt
pop
fsts
sahf
dec
sbb
out
aad
and
inc
sbb
lock
sbb
push
loope
jno
and
xchg
jg
sub
popf
push
push
lock
int3
and
fst
fsts
mov
push
cmp
adc
int
inc
push
push
cmp
jg
mov
add
dec
pop
mov
pop
xchg
dec
sbb
xchg
pop
pop
fistl
pop
jno
sbb
movsl
cmp
divl
dec
or
add
mov
andl
test
pop
in
outsl
adc
xor
dec
int
push
pop
xor
outsb
pushf
mov
push
out
adc
adc
add
cmp
dec
daa
xor
cmp
adc
and
call
ja
pop
loopne
jg
pop
adc
mov
mov
and
cmc
loopne
scas
int3
sahf
ljmp
xchg
pop
cmpl
jge
lds
hlt
cwtl
mov
icebp
push
fstl
cmp
xchg
rcll
sub
sub
xchg
dec
pop
clc
cmp
cwtl
cld
jno
fwait
sarb
pop
or
push
jmp
add
or
pusha
lahf
lret
inc
push
xchg
fs
or
cmp
ds
notl
and
dec
mov
pop
mov
adc
fmull
push
stc
push
push
dec
mov
dec
fsts
test
and
mov
push
popf
push
jae
or
sbb
cmp
ret
lods
jge
enter
scas
sub
adc
add
jmp
cmpsl
mov
add
or
cmpsl
cmpsl
inc
bound
mov
stos
sub
jne
js
ja
arpl
lods
insb
mov
nop
aad
push
and
cmp
jmp
xor
add
std
push
or
repnz
outsb
push
add
out
pop
cld
push
mov
les
lds
out
add
aam
inc
cmp
iret
cmpsl
cmp
sub
lds
mov
movsb
inc
mov
sub
call
les
jge
pop
add
rol
dec
jne
addr16
mov
hlt
cmp
pop
jg
jae
cmp
mov
std
mov
repz
lret
pop
xchg
xor
mov
negl
scas
out
cmp
mov
mov
stos
cmpb
sub
mov
ds
mov
jge
outsb
push
out
xchg
sbb
sub
imul
icebp
scas
pop
cltd
je
nop
mov
push
fmul
es
sbb
pop
fstpl
mov
into
outsl
shll
jo
loop
sbb
insl
cmp
push
and
mov
insl
push
jo
sbb
nop
fistpl
pop
fsubrs
push
xlat
pop
add
add
loopne
popa
loop
push
inc
pop
cmp
in
mov
lcall
inc
scas
push
nop
add
xor
push
mov
hlt
mov
or
dec
mov
repnz
fwait
call
inc
xor
push
aaa
dec
mov
jb
mov
inc
sahf
mov
mov
mov
push
mov
fmulp
mov
mov
testb
pop
hlt
jns
clc
mov
cltd
roll
enter
fidivl
mov
pop
jo
and
jae
dec
test
adc
popf
xchg
cmp
push
jp
ficoms
aad
aad
aas
loope
xor
in
pop
mov
pushf
push
xor
es
addl
push
jbe
js
fisttpl
orb
push
popf
sbb
mov
inc
xor
test
jnp
sti
add
mov
mov
jne
movsl
xor
mov
cmc
cmpsl
push
in
out
mov
xchg
aas
idivb
into
pop
cld
mov
sbbl
xchg
movsb
sbbl
insl
sbb
jno
sub
pop
cmpsl
push
cmc
subpd
movsl
add
movsl
inc
xchg
ja
bound
mov
cmpsb
cmp
jp
mov
push
lds
hlt
dec
push
incb
pop
int
pop
pop
test
xor
or
xchg
and
ljmp
shrl
sub
je
jne
xchg
jle
xor
dec
fnstcw
mov
cmp
int
push
xor
pop
jne
xchg
jg
out
scas
scas
push
mov
jp
in
push
or
dec
push
xor
pop
pop
bound
pop
dec
movsb
shll
inc
test
fdiv
andb
push
sub
xor
js
bound
jmp
dec
adc
mov
inc
sbb
pop
inc
out
jg
fisubs
loope
push
dec
mov
fmuls
add
mov
int3
lret
mov
add
movsl
jo
es
pop
sti
jno
aam
data16
fistpl
lcall
mov
mov
push
fidivs
xor
lahf
js
repz
in
scas
inc
add
push
addr16
inc
add
mov
cmp
lea
sbb
aam
lahf
push
aam
insb
xor
pop
fnstenv
jg
and
hlt
mov
sub
or
sbb
repnz
mov
adc
sbb
sub
test
inc
sbb
pushf
mov
push
lcall
xor
jb
dec
cmovg
xchg
int
xor
dec
xchg
in
jae
sbb
popf
pop
mov
jo
fwait
subl
mov
adc
cmpb
outsb
dec
add
sahf
jne
cs
and
sbb
pop
xchg
cmc
int
xor
hlt
jo
inc
jge
inc
sbb
mov
xor
jae
cmc
mov
icebp
xchg
pop
lcall
popa
sbb
cmp
int3
ja
xor
subb
and
cltd
cmpsl
je
addr16
inc
xor
pop
fst
xor
lock
arpl
test
dec
push
int
mov
int3
mov
mov
dec
roll
popa
adc
xchg
mov
mov
jmp
mov
loop
push
roll
mov
add
xor
and
xor
dec
bound
and
xor
popa
pop
aam
int3
jbe
loop
in
shlb
jle
out
mov
call
lret
clc
adc
xchg
outsb
leave
inc
push
repz
test
xorb
arpl
and
pushf
pushf
cmp
add
arpl
xchg
mov
ljmp
popa
push
out
mov
outsb
jae
xchg
cmp
mov
fbstp
lods
sub
daa
or
sub
clc
inc
stos
in
jge
cmp
rep
mov
push
lds
push
into
std
inc
fs
jp
pop
lcall
sbb
xchg
mov
xor
jl
xchg
jg
adc
pop
jge
push
or
fld
stos
les
ljmp
andb
xchg
out
fiadds
and
test
insb
and
out
mov
movsl
js,pn
xor
lea
cltd
fnsetpm(287
test
test
dec
mov
push
jg
repz
in
outsl
mov
mov
cmp
jb
add
sub
or
xor
scas
jo
pop
popa
push
mov
outsl
mov
insl
dec
pop
dec
dec
jge
ja
dec
cmpsl
pusha
mov
sahf
push
mov
dec
cmp
mov
xor
xchg
mov
mov
push
xor
shrb
int
mov
push
cmp
js
xor
fistps
imul
aam
inc
je
pop
jae
dec
xchg
loopne
inc
mov
inc
pop
xchg
clc
and
lret
ljmp
push
pop
int
push
and
sti
jne
or
in
je
mov
and
inc
es
mov
scas
mov
pop
mov
int3
pop
mov
dec
ret
repz
shll
mov
push
shlb
dec
dec
cmp
inc
pop
inc
in
rcrb
xor
jecxz
cmp
into
lcall
xchg
sahf
mov
pop
pop
jle
jo
fldcw
mov
pop
push
mov
in
mov
fs
data16
les
inc
or
out
add
jae
sbb
add
movsb
cmp
or
dec
sub
pop
pop
dec
fdivrs
fsubs
int
jns
push
cmp
jne
aam
hlt
lock
push
xlat
jno
or
mov
fsubrl
pop
mov
rcl
stos
mov
jb
dec
sbb
mov
add
mov
aas
xor
in
gs
paddb
cmpsl
jno
sbb
jecxz
jno
and
leave
xchg
and
fsts
sub
cmpsl
jge
arpl
and
mov
sar
iret
jecxz
test
push
imul
add
push
movsl
orb
int3
mov
fyl2xp1
lahf
addr16
int3
sbb
add
mov
sub
fs
xchg
mov
inc
jg
jecxz
repz
add
iret
mov
popa
and
mov
popf
movl
or
push
lods
cld
adc
test
sbb
mov
decb
pushf
mov
cli
les
push
xor
xchg
push
adc
popf
pop
pop
mov
mov
inc
cmp
cmpsl
sbb
adc
test
or
setb
push
repnz
jb
bswap
shl
jge
add
lods
mov
dec
push
pusha
inc
push
fldenv
fmuls
xor
jp
xchg
xchg
sub
mov
xchg
mov
fs
sub
xor
loop
int
push
and
pop
mov
std
inc
inc
jl
fs
fstl
push
lds
cld
std
loop
fwait
inc
mov
mov
scas
pop
pop
sub
scas
pop
adc
push
jne
cmp
lock
mov
bound
int
repnz
in
mov
mov
cmp
mov
outsl
fsubs
rol
xchg
mov
sbb
push
xchg
or
cmp
jge
dec
fdivl
mov
dec
cmp
pop
lods
xor
shlb
aad
xchg
push
sbb
fdivl
les
cmp
pop
iret
stos
loope
and
es
js
cmovnp
add
scas
cmpl
icebp
shrl
or
test
cmp
negl
or
xchg
stos
sub
std
int3
mov
dec
pop
push
pop
mov
aad
insl
test
pushf
pop
sbb
xchg
dec
inc
and
mov
les
and
lods
mov
lcall
sarb
sbb
jp
pop
fs
ljmp
jo
mov
lret
adc
aas
lock
lock
aam
arpl
shrb
mov
in
lea
cmpsb
xchg
out
fs
and
sbb
cltd
push
shlb
mov
xor
lcall
or
popa
decl
lret
mov
fs
cmp
sub
mov
lahf
orb
xor
xchg
mov
rol
cmp
mov
xchg
mov
add
push
jne
dec
jge
cmp
pop
or
cmpsl
bound
dec
cmpsl
pop
in
cld
pop
hlt
push
dec
push
mov
and
stos
cmp
pop
push
inc
popa
ja
test
jne
sub
pop
push
in
push
fsubrs
lret
shll
xchg
fsts
sbb
mov
pop
ficoml
push
add
cmp
fdivs
pop
mov
mov
xlat
lret
je
aad
lods
movsb
scas
push
adcb
mov
and
inc
je
fnstcw
cmc
cmpsl
pop
push
mov
cmpsb
dec
rcrl
adc
inc
push
pop
test
jae
xchg
inc
pop
les
push
adc
enter
cmp
xor
cmp
mov
ret
mov
xlat
cltd
stos
mov
mov
xchg
insb
or
push
sbb
enter
cwtl
jbe
adc
fwait
adc
sub
es
mov
test
cmp
loopne
mov
mov
xor
xlat
pop
lds
dec
nop
push
sbb
xor
aad
xchg
sbbl
out
je
fstpl
mov
out
inc
out
into
mov
movsb
mov
lcall
mov
mov
repnz
jp
lock
clc
cmpsb
rcrb
stc
ficomps
in
cmpsb
jp
fildll
adc
push
pop
add
push
lret
adc
dec
shll
cmp
cmp
jmp
dec
movsl
aam
and
movsb
cmpb
xchg
aad
addr16
mov
popa
mov
mov
repnz
and
test
xor
or
mov
cmp
mov
test
stc
or
repz
dec
stos
jae
dec
inc
pop
fs
fsts
bound
mov
outsb
shll
dec
pusha
xor
fisttpl
dec
hlt
fs
push
cmp
jnp
jp
push
out
inc
jl
mov
fyl2x
aad
fldt
xlat
dec
popf
adc
outsb
xchg
push
mov
pop
dec
push
xchg
inc
loope
push
mov
test
xchg
push
insb
nop
gs
sbb
dec
mov
xchg
mov
xor
pusha
push
pop
adc
cmpsl
ret
dec
shl
popf
fstl
adc
inc
cli
adc
fdiv
fnsave
sub
xor
pop
fcmovne
mov
fbstp
imul
ret
add
dec
shlb
xchg
inc
sub
in
jae
mov
shr
add
push
mov
push
add
in
mov
lahf
pop
inc
dec
lcall
je
test
test
pushfw
cmpsl
sub
test
xor
push
mov
add
dec
arpl
aad
inc
shlb
ds
adc
push
je
bswap
xchg
jae
sub
pop
push
ret
mov
stos
pushl
mov
xchg
mov
fisttpl
xchg
nop
lret
and
rorl
and
and
or
popa
dec
into
push
inc
int
jne
js
and
pop
mov
xchg
scas
xor
aaa
dec
stc
dec
das
xor
sbb
insb
lahf
cli
mov
sub
xchg
and
pop
cmpsl
ficompl
adc
aas
pop
repz
push
push
mov
pop
or
out
adc
rcrl
jne
adc
dec
mov
adc
cli
xor
pop
ficoms
lahf
js
adc
adc
shlb
mov
imul
hlt
push
or
arpl
xchg
or
mov
ret
rcrb
fldl2e
inc
inc
lea
in
push
stos
cmp
test
loop
jno
cmc
cmp
dec
dec
cmc
clc
outsl
ret
aam
leave
arpl
inc
sarl
sahf
arpl
sti
inc
lds
cmp
icebp
enter
sti
cltd
cld
inc
daa
mov
mov
repz
arpl
push
lods
and
jg
pop
je
push
popf
xchg
jbe
cmp
pop
mov
ss
jl
lods
inc
movsb
cmpsl
cmp
jb
mov
ja
insb
push
or
xor
fldenv
cmp
jg
lods
ficomps
in
in
and
mov
jnp
jmp
xchg
pushf
test
popf
shr
bnd
cltd
ljmp
sub
loope
sub
cwtl
dec
je
addr16
adc
add
pop
mov
xchg
mov
icebp
pop
mov
and
fcomps
or
pushf
add
pop
cmp
add
push
mov
mov
shll
adc
repz
popf
in
push
jne,pt
dec
ret
mov
gs
call
push
fdiv
test
mov
pop
mov
pop
jo
pop
mov
adc
mov
dec
cmp
inc
fprem
pushw
or
or
push
push
int3
or
pop
pop
mov
push
mov
test
cli
in
cli
faddl
mov
push
sar
sbb
in
jno
mov
pop
stos
clc
pusha
repnz
lods
stos
int3
pop
cmp
movsl
adc
pop
xchg
pop
lea
add
jne
aad
outsl
ja
je
js
jge
push
push
jp
arpl
bound
shlb
lea
lods
or
scas
stc
mov
cs
stos
jns
shr
adc
iret
jecxz
bound
adc
dec
mov
pop
add
dec
xor
cmp
mov
les
aad
popf
sbb
arpl
sbb
dec
lock
or
pop
mov
adc
out
push
out
gs
cwtl
insl
or
enter
mov
ficoms
adc
out
push
mov
jbe
fs
jmp
sbb
mov
pop
xchg
dec
pop
jno
fldenv
mov
sub
test
insb
dec
lea
mov
cli
movsl
rol
jne
cmp
push
pop
xchg
dec
cltd
mov
lods
ljmp
hlt
cwtl
pop
mov
push
cmpsl
push
dec
hlt
mov
lds
lods
sbb
and
jne
int3
cmpsl
lock
ja
adc
test
sbb
rorb
inc
ror
in
aam
cmpsl
bound
sti
cmp
shll
andb
cmpxchg
sbb
xor
movsl
aas
pushf
xchg
cmp
nop
dec
je
shlb
in
jb
add
cld
insb
mov
mov
ljmp
popf
sahf
push
cmp
push
cli
xor
cmp
sbb
cmp
dec
push
cmp
jno
or
fcomi
inc
fdivs
popf
mov
jns
bound
sbb
sahf
pop
jne
push
lock
addl
xchg
gs
rcll
jnp
push
lret
fcmovnu
mov
fs
call
push
pop
out
cmp
inc
xor
stos
rcrb
cmp
in
shll
xchg
in
jge
mov
ja
xchg
pop
pop
mov
jno
sbb
std
dec
fs
mov
lcall
ret
fmull
cmp
cmp
cmp
cwtl
fs
fwait
pop
xor
out
faddl
mov
mov
xchg
mov
fnstsw
fsubr
mov
jo
pop
daa
dec
aam
dec
sub
iret
sub
out
xor
lret
sti
push
iret
mov
je
cmp
popf
push
mulps
and
clc
mov
test
cmp
cmp
jns
cmpl
nop
push
pop
mov
test
push
mov
aam
dec
ss
cmp
js
or
cmp
rorl
mov
pop
push
mov
mov
bound
in
or
int
bound
push
popa
adc
xlat
repnz
fsin
sub
mov
pop
add
dec
mov
cmp
lahf
xchg
cltd
pop
enter
sub
psrlq
push
rcll
lcall
dec
loop
xchg
jns
push
daa
mov
in
dec
les
cmpsl
imul
je
orb
clc
xchg
scas
adc
outsl
stos
fcomp
pop
in
dec
cwtl
push
mov
xchg
mov
scas
scas
nop
push
xchg
mov
pop
mov
push
loop
int
xchg
mov
loope
push
pop
mov
imul
jns
bound
sub
xor
cmp
cmpsb
hlt
xchg
push
sbb
mov
adc
and
and
jne
add
fstl
into
int3
cwtl
or
xchg
mov
nop
adc
std
jmp
jae
jmp
shl
jge
fwait
cmpb
roll
shl
lds
jns
mov
jno
scas
inc
leave
mov
movl
sbbl
lods
mov
pop
cmp
lods
in
dec
dec
dec
lock
sbb
pop
cmp
ljmp
mov
xlat
pop
bound
push
push
sbb
cmp
push
fsub
movsl
loope
into
enter
xchg
xchg
cmp
xchg
adc
xchg
pop
lds
xor
loope
push
test
adc
or
xor
fsubs
movsl
pop
cmp
mov
sbbl
cmp
imul
mov
cltd
or
das
hlt
inc
xchg
pop
cmp
inc
jbe
xor
aad
cmp
repnz
jl
fmull
js
loope
mov
iret
mov
push
imul
stos
dec
nop
les
xchg
lcall
mov
shlb
adc
jl
enter
shrb
pop
fstp
jp
sub
xlat
ja
mov
fcmovnb
ror
jno
insb
jae
arpl
mov
sbb
clc
rorb
addr16
loop
rcl
adcl
mov
jo
popa
ds
out
or
addr16
sarl
jg
xchg
jo
adc
push
sti
sbb
or
xlat
mov
aaa
xchg
cmp
sbb
cmpsb
dec
xchg
lcall
in
std
in
cmpsb
xchg
arpl
inc
sbb
xchg
push
cmp
mov
scas
loop
mov
push
stos
cmp
aam
mov
gs
lds
mov
push
js
ret
int3
pop
inc
inc
xchg
addb
and
cmp
icebp
lcall
repz
sahf
test
cwtl
shl
pop
rclb
dec
test
out
jg
mov
push
rcrb
dec
pop
mov
fwait
icebp
sub
inc
loopne
aaa
xchg
mov
int3
mov
test
jo
cmpsl
inc
push
lds
in
cmpsl
lods
lea
inc
adc
or
jmp
insb
repz
aad
cmp
xchg
pop
jl
xchg
cmp
add
iret
jecxz
fsubl
arpl
scas
les
mov
mov
dec
lods
nop
outsb
adc
push
iret
inc
in
cmpb
outsl
xchg
mov
sbb
jp
push
fwait
dec
andl
push
sbb
incl
ja
or
out
out
and
daa
in
add
xlat
dec
xchg
pushf
adc
xchg
pop
mov
vorpd
mov
arpl
scas
in
sub
aam
les
or
cmp
pop
push
out
or
add
shlb
std
divl
jne
shll
mov
sub
fs
loop
roll
sbb
test
rcl
les
mov
cmp
xchg
data16
stos
mov
mov
lcall
addr16
xor
ficoml
out
pop
inc
clc
pop
jae
pushl
shrl
cmpb
push
sahf
dec
lods
fcomi
cs
jnp
pop
sub
out
xchg
jnp
andb
loopne
stc
push
pop
inc
add
cmpsl
cwtl
imul
adc
and
mov
fdivs
fwait
cmpl
cmp
int
loopne
fstl
pushf
pusha
outsl
cmp
adc
xchg
mov
jne
int
jecxz
cmpsb
mov
arpl
in
dec
xor
lds
jp
mov
cwtl
xchg
or
adc
orb
pop
test
nop
mov
lds
mov
xchg
cmpl
fisttpll
clc
out
xchg
pop
mov
mov
lods
and
js
adc
cmpsl
rorb
imul
aas
mov
xor
pop
cmp
sti
imul
push
cmpb
cmp
adc
std
or
pushf
mov
lret
popa
cmp
mov
pop
cmp
bound
fstpl
and
mov
inc
xorb
mov
in
into
adc
xor
mov
cs
jbe
into
fwait
div
out
adc
lahf
xor
repz
rcrl
and
push
pop
xlat
cmp
das
cmp
fnstcw
dec
jle
inc
sar
add
mov
in
cltd
jle
in
popl
sub
fidivs
lds
js
push
sub
arpl
sbb
popa
mov
xchg
stos
pop
inc
mov
adc
pusha
je
roll
les
cmpl
push
lock
cmp
pop
icebp
mov
bound
loope
add
sbb
movsl
int3
mov
lods
notb
dec
mov
jg
or
cmp
ss
mov
jg
adc
clc
cmovb
lret
out
lcall
xchg
xchg
push
divl
lock
outsl
cmp
hlt
sbbb
aam
mov
fdivrl
out
jno
push
mov
fdivs
inc
jno
icebp
jns
dec
xor
scas
ja
pop
jnp
mov
pmaxub
test
cmp
jns
mov
mov
push
js
les
jle
pop
mov
push
aam
inc
add
fucomip
loopne
xor
je
icebp
int3
dec
inc
jnp
js
in
adcl
dec
mov
fucomp
rorl
dec
aad
subb
loop
iret
mov
pop
and
fisttps
cmp
or
stos
pop
dec
mov
pop
sti
pop
inc
mov
or
ret
jmp
pavgw
clc
call
inc
mov
fwait
xchg
movsl
sbb
std
dec
mov
jge
addl
jno
pop
jae
iret
jne
inc
pushf
sbb
pop
push
stos
xor
cmp
add
iret
repnz
in
xchg
pop
arpl
sbb
fucomp
lcall
stos
fucomp
and
and
mov
add
sbb
jmp
sbb
mov
mov
mov
xor
addl
inc
mov
add
in
mov
jbe
and
imul
cmp
in
cltd
dec
adc
jl
push
jno
call
xchg
push
hlt
fdivs
push
mov
ret
jo
scas
sub
pop
push
cmp
negb
jno
xor
adcb
test
outsl
cmpl
jns
lcall
cwtl
inc
ljmp
shrb
ficoms
fadds
jb
mov
sbb
cltd
iret
mov
test
jmp
pop
mov
add
pop
sbb
dec
test
fnstenv
sub
mov
mov
rclb
pop
inc
jg
jmp
mov
pop
lock
inc
sbbl
cs
mov
cmp
fbstp
jmp
bound
pop
iret
xor
dec
cmp
gs
arpl
and
push
inc
jb
lret
push
push
shlb
jns
jo
add
mov
pop
push
int3
push
push
pushf
inc
outsb
jno
mov
add
jbe
pop
add
std
mov
fnstcw
sbb
call
aad
lock
xor
imul
pop
jg
dec
jg
jo
fidivs
rcr
inc
imul
in
out
jo
cmc
iret
xchg
and
jb
lahf
mov
inc
push
insb
pop
jns
xchg
jo
xor
out
xchg
nop
jp
lods
push
jl
in
add
cmpb
outsb
out
pop
push
pop
ljmp
jb
lea
fs
ss
arpl
das
test
addr16
mov
aad
xchg
pop
stos
push
cmpsl
cs
lods
gs
jo
fsubs
mov
xchg
das
xchg
jae
mov
and
cmp
or
lea
mov
in
in
in
xchg
loope
shl
mov
mov
xor
jp
push
jo
dec
out
aam
sub
xchg
loopne
cwtl
adc
adcb
dec
out
jo
xor
subl
mov
cmpl
stos
and
pusha
pop
push
fsubr
out
inc
xchg
pushf
cmp
dec
xchg
jecxz
sarb
xchg
aas
arpl
dec
mov
popa
nop
sbb
popf
push
dec
mov
jo
mov
dec
push
push
pop
gs
insb
add
out
ljmp
mov
xchg
std
inc
std
mov
or
shrl
or
push
repz
pop
fists
xor
or
sbb
iret
stc
add
leave
push
fs
lret
dec
jno
ljmp
add
sbb
push
fadds
push
dec
and
mull
jns
dec
and
iret
adc
fcomps
in
popa
cmpl
mov
cmpsl
movsl
ljmp
mov
scas
cmpsl
adc
xchg
pop
and
push
sub
mov
pop
sbb
push
jl
mov
push
mov
adcl
push
movsb
push
lcall
les
in
leave
ja
std
push
int
scas
adc
or
in
mov
fldenv
loopne
pop
mov
jmp
adc
jnp
mov
dec
sub
dec
out
stos
push
pop
mov
stos
sbb
aam
dec
shlb
mov
cmp
popf
lcall
mov
fisttpll
icebp
mov
scas
mov
fistl
and
jnp
mov
adc
add
mov
inc
mov
fs
or
lcall
mov
frstor
sarb
mov
mov
xchg
icebp
imul
out
push
in
in
push
nop
lock
mov
mov
ficoml
aad
inc
lods
and
add
fdiv
xchg
jne
rorb
cmp
stos
cli
jbe
jbe
fdivrp
mov
mov
add
cmpsl
sti
or
aam
pop
sub
sub
out
xlat
rclb
pop
test
int3
jne
loope
fstl
lock
cmp
lcall
mov
stos
sub
sub
cmpsl
shl
movsb
push
clc
rcrl
test
mov
fld
cmp
clc
daa
adc
movl
jmp
fadd
mov
xor
pop
jnp
inc
mov
lret
insb
jl
cmpsl
mov
test
ret
inc
scas
fidivl
xor
fwait
test
jge
push
lret
adc
je
jmp
pop
rorb
cwtl
lods
movsl
jecxz
sub
lods
aaa
fwait
mov
add
mov
mov
adc
ficoml
stos
bound
ds
jg
xor
sub
lea
push
push
loopne
dec
and
addr16
ficoml
into
inc
dec
movsl
outsb
outsl
daa
call
mov
daa
adcb
jl
push
xor
pushf
ret
fwait
xor
fadd
in
jp
lahf
nop
lahf
push
js
je
lds
pop
push
pop
sbb
cwtl
jecxz
pop
xchg
loopne
dec
leave
sahf
shrl
mov
aad
xchg
stos
pop
mov
cld
repz
pop
xchg
push
stos
pop
insb
pop
int3
push
push
cmpb
adc
jno
and
pop
je
repnz
pop
lret
xchg
fs
fldenv
sahf
roll
aaa
leave
jns
nop
adc
and
insb
adc
pop
jle
movsl
or
mov
stos
mov
add
xor
lds
cmpsl
pusha
mov
inc
in
sub
les
fadds
rol
push
loopne
push
jmp
push
cmpsl
jne
jb
insb
jne
sbb
cmp
sub
faddl
test
stos
nop
ds
test
cli
or
inc
in
or
test
icebp
inc
push
in
fstpl
pop
bound
adc
int
mov
lock
sub
or
mov
inc
jp
or
sahf
movsb
pop
or
push
jno
scas
mov
jb
xchg
mov
push
nop
movsl
mov
and
cmp
mov
orb
jge
sti
popa
sub
pop
dec
out
sbb
xchg
mov
jne
andl
loop
push
popf
push
mov
or
icebp
dec
fwait
xchg
je
pop
xchg
xor
loopne
sbbb
cmp
out
lods
add
xorl
xchg
es
push
orb
mov
std
incb
and
mov
adc
popa
test
mov
lock
outsb
mov
jno
mov
dec
dec
dec
mov
lret
xchg
loop
loop,pn
mov
scas
inc
xlat
sub
shlb
pop
mov
pop
aad
in
bound
shrb
lods
adc
inc
sbb
mov
sar
pusha
mov
pop
mov
pushf
daa
daa
int
jg
push
movsl
movsb
mov
pushf
pop
sub
or
sub
pop
bound
dec
leave
shlb
jno
push
lcall
xchg
pop
jo
jne
aas
or
mov
andl
clc
add
sbb
cmp
cmp
adc
xor
cmp
pop
mov
int
inc
xor
and
jp
stos
push
xchg
adc
jno
jno
xor
pop
mov
or
xchg
ja
int3
jge
lock
mov
frstor
push
xor
push
fimuls
fldenv
bound
insb
xchg
xchg
pop
fistl
inc
add
sbb
cmpsb
loope
loopne
loopne
loope
mov
stos
add
outsl
mov
pushf
cmp
out
xor
and
imul
dec
outsl
cmc
or
fmul
xor
push
mov
data16
push
fs
les
push
loope
sbb
or
pushf
cmp
jle
fldl
xchg
push
insb
jo
push
adc
fldcw
jle
cs
lods
jns
outsb
jnp
scas
inc
int3
mov
scas
sbbl
pop
push
push
divl
mov
cmp
int
push
mov
mov
jne
cli
push
lds
jl
scas
push
mov
and
popa
and
in
fmull
pop
aaa
loop
xchg
out
enter
inc
mov
mov
popa
leave
push
cmc
das
neg
push
mov
mov
lds
pop
mov
dec
cli
push
lea
jge
push
mov
fcom
aad
cmp
loope
fists
and
mov
out
mov
jnp
repz
xor
jns
xor
int3
ret
pop
mov
push
cmpsl
jecxz
dec
xor
js
pop
jl
adc
jnp
daa
cmp
pop
cld
cmp
cld
pop
xor
aam
movsb
adc
repnz
push
movsl
sub
cmpsl
sub
in
mov
jp
mov
and
mov
mov
movsl
xor
sarl
addr16
loope
cmp
xor
jg
adc
lea
arpl
and
adc
cmp
jbe
mov
fdivl
lcall
push
inc
int
loop
mov
push
js
add
mov
lods
xor
jge
scas
ret
push
or
lock
pop
fimull
outsb
pusha
in
int3
in
mov
iret
jmp
push
fldt
mov
ficompl
mov
int3
add
mov
loop
push
pop
jae
xchg
pop
mov
push
ficomps
ficoms
jo
dec
pop
ss
dec
je
push
mov
out
aad
sti
dec
shr
mov
push
jo
bnd
sahf
sub
jbe
dec
insb
bound
inc
xchg
xchg
fcoml
jo
es
loopne
jb
lcallw
enter
sbb
cwtl
or
sub
push
sbb
sarl
add
xchg
jb
push
in
xlat
faddp
out
dec
push
adc
mov
ficoml
cmp
xor
int3
inc
sbbl
mov
leave
out
ja
cmp
lahf
mov
test
push
add
jecxz
insb
pop
and
inc
or
adc
loope
insb
xchg
scas
xchg
imul
je
inc
popa
push
or
fbstp
cmpsb
int
add
or
pop
jno
aad
pushf
mov
jo
imul
xchg
sbbl
sbbl
jle
mov
inc
mov
fcom
dec
ljmp
cmp
and
xchg
orb
cmp
xor
pop
in
cmpsl
fs
push
mov
negb
jne
loopne
ficoml
mov
mov
inc
test
pop
xor
repz
xchg
pusha
xlat
insb
mov
fnstenv
dec
dec
bound
mov
test
mov
dec
imull
mov
nop
jp
les
push
mov
or
in
and
lahf
insb
push
add
shll
cwtl
jnp
lods
or
imul
xor
into
ds
jp
or
pop
notl
outsb
adcl
dec
push
mov
cmpsl
inc
test
aas
add
fsubs
fldt
das
mov
xorl
nop
inc
sahf
in
sbb
fs
cmp
sti
jno
push
orl
lock
sbb
adc
shld
xor
mov
inc
cmp
cltd
jns
nop
stos
imul
inc
mov
in
test
cwtl
sbb
cmp
lods
es
shrb
mov
ret
and
pop
or
stos
movsb
mov
mov
insb
xchg
daa
or
mov
cmpsl
jg
ret
jno
cs
les
fwait
xor
jl
adc
nop
popa
and
loopne
iret
push
mov
pop
jne
lret
aam
adc
movsb
push
or
add
mov
sub
insb
pop
outsl
ficomps
in
sub
cwtl
push
sbbb
pop
pop
xlat
mov
inc
push
in
adc
int
pop
cli
fnstcw
mov
rorl
mov
and
cmpsb
cmp
add
sahf
insb
add
sbb
mov
add
add
loope
xor
pop
and
sub
adc
inc
scas
jge
push
jb
subb
dec
loope
aam
mov
loop
jo
packsswb
xor
jle
adc
movsb
loopne
inc
out
lock
mov
fs
mov
sub
fwait
pop
aam
shlb
pop
fildl
loop
mov
jle
sbb
jp
mov
jb
inc
adc
les
or
jb
lcall
mov
cmp
or
pop
addr16
leave
sbb
xchg
cmp
mov
xchg
stc
sub
cmp
pushf
inc
fcmovu
cld
pop
add
dec
out
mov
dec
mov
dec
inc
adc
enter
mov
mov
sbb
loope
cmp
pop
xchg
push
cld
gs
push
lods
xchg
pop
xor
jno
inc
pop
xlat
jg
cli
dec
mov
sbb
les
pop
out
pop
sub
scas
adc
dec
cmp
push
mov
aas
pop
stc
icebp
pop
in
mov
push
ja
xor
pop
sub
xor
stos
cli
xchg
je
inc
add
fistpl
cwtl
fwait
mov
mov
lcall
imul
out
jle
clc
and
xchg
xor
out
cltd
shl
cli
sbb
je
dec
stos
or
cmp
repz
mov
jno
fcom
or
addl
and
adcl
sar
inc
rcll
push
aam
ss
inc
inc
push
jbe
or
jge
mov
and
push
std
pop
into
adc
lea
mov
xchg
out
jp
std
xchg
insb
xchg
pop
insb
insl
cmp
xor
mov
je
xor
mov
xchg
push
subb
je
pop
repnz
jp
jo
rol
fisubl
xchg
fdivs
in
add
das
lods
xor
popf
pop
roll
push
bound
sahf
mov
test
mov
subl
mov
push
mov
adc
movsb
push
mov
sub
sbb
adc
icebp
sbb
loope
push
rcrb
lods
dec
adc
pop
scas
jbe
xchg
shl
mov
aaa
pop
jne
mov
mov
dec
sbb
bound
bndstx
fdivrs
lahf
loope
in
dec
or
pop
push
cmp
push
jp
out
jle
repz
mov
loope
jo
dec
mov
sub
jg
inc
cmp
aaa
leave
fdivr
sahf
dec
xchg
and
cmp
mov
ret
dec
add
inc
mov
adc
add
out
add
push
frstpm(287
or
shrb
fisubrl
xchg
jecxz
and
popaw
sbb
mov
clc
pop
jb
iret
jle
sbb
loop
enter
out
je
dec
pop
push
ljmp
lret
clc
je
lds
jo
push
cmp
out
xor
in
fnstcw
cltd
push
xor
addr16
and
test
mov
dec
frstor
cli
push
addr16
cmp
cltd
mov
jnp
cmpsl
and
jecxz
add
inc
imul
xor
les
xchg
mov
adc
and
outsl
mov
push
popa
push
rorl
pop
fbstp
int
into
push
adc
jp
inc
movsl
ja
xchg
test
fstpt
mov
mov
pop
jne
jno
in
xchg
sbb
clc
push
pop
add
mov
mov
cmpsb
xor
mov
jl
fwait
mov
outsl
mov
or
ja
jo
shll
pop
aaa
jno
aad
mov
cmp
rcrb
int3
pop
push
sti
xor
or
adc
lds
push
cmp
pop
xchg
dec
dec
jne
push
stc
sub
js
pop
repnz
jge
movsl
add
shrb
push
sub
mov
push
mov
or
mov
lock
fidivrs
mov
mov
push
jg
pop
test
insb
push
pop
xchg
repz
clc
pop
lahf
imul
fcomps
mov
sbb
cmp
add
pusha
and
lds
jg
sahf
jno
mov
mov
vphaddbd
fs
jg
push
jecxz
sub
rcrl
and
std
insl
fistps
pop
cmp
cmp
add
fnstsw
insb
inc
pop
or
out
movsl
or
das
mov
gs
insb
push
inc
aaa
loopne
dec
push
les
pop
pop
cmovp
xor
or
or
push
sbb
sti
adc
iret
ja
rorl
fmuls
into
mov
pop
push
adc
into
push
cwtl
sti
cmp
fildll
and
jmp
and
cmp
icebp
add
sbb
ret
or
lahf
nop
inc
push
stc
loop
jle
push
jo
jo
push
stc
fimuls
xlat
xor
jo
mov
xor
cwtl
loop
inc
shrl
aad
sub
xchg
xor
mov
cmp
sbb
mov
loope
dec
fs
es
sahf
sbb
std
inc
icebp
js
push
or
fistl
jge
outsl
in
jno
cwtl
aam
aas
pop
push
jb
jae
dec
aad
imul
pop
cmp
fdivrs
scas
push
mull
add
clc
pop
cmp
mov
out
cltd
les
lods
ja
sbb
inc
mov
aad
lods
testb
inc
cmp
mov
push
inc
push
mov
xchg
loopne
repnz
out
popa
mov
jbe
pop
movsb
push
or
dec
mov
xchg
push
cmp
cmpsb
sti
push
dec
movsl
cmc
addl
mov
pop
cwtl
push
cmp
call
mov
mov
shll
push
cmp
popf
adc
imul
mov
dec
jno
cwtl
repnz
mov
pushf
scas
arpl
cmp
adc
bound
push
fmull
cmp
imulb
dec
das
repz
fstpt
out
sbb
push
mov
das
int3
lds
fcom
add
inc
cmp
pop
push
enter
loopne
pop
int
out
jae
xlat
aam
push
incl
pop
fs
push
pop
gs
push
mov
mov
xor
mov
adc
rorl
add
orl
mov
and
shlb
mov
je
test
rcrb
lds
and
arpl
cltd
cmc
adc
pop
mov
iret
jo
les
jo
scas
cmp
push
sbb
imul
std
jge
es
xchg
xchg
lcall
mov
test
push
scas
mov
cmpsb
cli
jns
cmp
push
xchg
cltd
xchg
imul
call
pop
and
xchg
push
xorb
loope
adc
or
sbb
outsl
jb
sbb
sti
mov
mov
les
mov
aaa
out
mov
pop
js
xorb
cmpl
mov
sbb
sbb
fdivrl
jo
fcmovu
pop
cmp
lds
shr
sub
ss
mov
cmpsl
loope
jl
pop
test
lock
fisubrl
adc
jne
mov
outsl
hlt
cmp
stos
mov
aam
cld
mov
ds
aaa
fisubrs
in
lret
das
sbb
xchg
xor
lods
push
mov
popf
mov
sbb
push
push
inc
pop
xchg
icebp
sbb
scas
lock
jecxz
imul
jb
and
jno
fstpt
lahf
int
fidivs
in
push
enter
icebp
mov
mov
aaa
es
lret
xchg
mov
xchg
cwtl
xchg
jl
ljmp
rcrl
or
lds
mov
call
lahf
imul
insb
les
dec
repz
sub
pop
xchg
mov
les
cmp
lcall
clc
mov
mov
jbe
in
in
cmp
xchg
movsl
jb
pop
pop
iret
pop
xchg
jno
clc
test
test
stos
sbb
xchg
std
and
rclb
aam
cmc
xor
mov
mov
clc
cmp
pop
sub
xor
in
data16
adc
push
pop
xchg
push
dec
pop
mov
fsubrs
or
cmpsb
data16
jns
das
fiadds
inc
jae
lret
scas
lods
das
add
fs
pop
dec
loop
adc
jne
jecxz
lds
adc
adc
sbb
cmp
xchg
mov
pop
cs
xchg
int
add
fwait
xor
sbb
das
aad
lret
punpckhbw
mov
hlt
inc
mov
les
cmp
imul
movsb
aas
or
sub
adc
push
lret
sti
adc
push
int3
dec
cmp
ja
push
lahf
cld
ret
adc
xorb
gs
je
cmpsl
inc
stos
popf
scas
jp
test
sub
jle
stos
shlb
sbb
or
mov
pop
push
fisttps
sbb
inc
imul
push
scas
pop
mov
pop
fbld
adc
mov
mov
cmpsl
inc
inc
cmp
dec
ljmp
sbb
cmc
std
fisttpl
imul
cwtl
sahf
movsb
ret
int
pushf
js
pop
insb
cmp
adc
nop
lods
data16
jnp
popa
popf
dec
sti
out
mov
pop
mov
loope
push
out
and
data16
jmp
sub
lret
push
xor
pop
lcall
ret
inc
adc
dec
mov
outsb
inc
das
xor
cmpsl
je
movsl
mov
jbe
mov
jb
push
pop
cmp
addl
loopne
stos
inc
sub
mov
and
mov
adc
xor
scas
adc
stos
stc
sub
pop
jbe
cmp
jnp
stc
loop
mov
sub
jne
cmp
nop
loopne
inc
or
es
ret
push
xchg
insb
loope
mov
scas
iret
and
int
les
dec
push
push
sahf
adcb
imul
in
push
or
stos
pop
push
mov
mov
dec
mov
lahf
add
movsl
mov
add
fldt
push
sarb
push
mov
fdivs
jl
push
mov
pop
sub
addr16
fsts
ret
movsl
sub
jo
sub
je
hlt
xchg
movsb
roll
pop
pop
mov
int
mov
inc
xchg
xchg
nop
pop
adc
or
arpl
outsl
sub
push
dec
mov
sub
inc
mov
cmpsl
mov
addb
cmpsl
fwait
jns
lret
adc
jl
fs
push
push
aad
out
fiadds
push
inc
test
jns
je
in
xor
shlb
iret
add
shr
shl
cmp
popa
jp
mov
mov
mov
push
fs
jae
inc
test
mov
adc
into
xchg
and
fcomps
mov
and
mov
mov
gs
mov
adc
lahf
leave
inc
cmp
xor
ljmp
jnp
adc
push
or
test
movsb
subb
imul
sbb
mov
addr16
jo
scas
dec
flds
mov
scas
or
lea
divb
pop
jnp
cs
add
cmc
js
fldt
jp
push
cmp
fcmove
lcall
dec
or
push
xor
push
in
into
stos
mov
cmp
out
add
fcoms
adc
cmc
out
dec
cmp
inc
ret
cmp
icebp
and
xor
cltd
cwtl
loope
jb
lret
inc
icebp
and
sti
addr16
test
xor
and
adc
fdivrl
lds
shrl
jnp
lret
adc
ja
sbb
arpl
pop
in
sbb
mov
sub
xchg
sbbb
adc
dec
sbb
mov
popa
notb
sbb
sub
sbb
scas
push
leave
sahf
cmp
repz
mov
stos
dec
cltd
lock
cmp
jb
loopne
fstpl
sub
mov
xor
enter
pop
jg
mov
fwait
insb
loope
xor
dec
pop
add
jne
sbb
int3
adc
int
mov
test
sbb
dec
mov
push
cmp
push
jne
xor
fs
dec
sbb
enter
lods
push
dec
int3
push
scas
scas
sub
mov
xor
pushw
movsb
dec
stos
sbb
pop
mov
hlt
adc
sub
scas
inc
jmp
dec
cli
dec
push
dec
xchg
js
xchg
repnz
in
inc
mov
mov
cld
pushf
data16
cld
sbb
ja
ret
xchg
xchg
jbe
mov
aad
adc
loop
test
bound
dec
add
lods
jmp
cli
mov
cmpb
dec
in
sahf
je
adcl
push
fldcw
jp
xchg
lcall
jnp
int3
repnz
sahf
jo
call
js
sub
inc
ljmp
fs
icebp
testb
pop
lock
fistpl
push
pop
out
xor
ja
les
sarb
mov
movsb
xchg
and
push
jp
mov
xor
and
or
mov
and
dec
fldcw
subl
pop
sub
cmp
xchg
push
jns
dec
xchg
imull
xchg
mov
sub
out
sbb
sub
ja
xchg
mov
add
inc
enter
dec
jo
mov
and
jge
bound
push
adc
jle
cmp
out
and
adc
aam
loope
jnp
push
clc
push
push
cmc
aaa
mov
arpl
mov
jge
lret
mov
inc
mov
xor
lcall
rcrl
in
jge
pop
pop
xchg
rcrl
pop
out
scas
mov
mov
sahf
pop
cmp
in
or
mov
xor
or
and
cmp
sub
jle
sarl
adc
push
mov
pop
xchg
clc
push
fldt
rorl
jecxz
ficoms
and
outsl
scas
ret
cmp
lock
imul
repnz
ja
addr16
loopne
shll
push
add
sbb
insb
orl
xor
stc
adc
cmpsl
jle
mov
mov
sub
xchg
hlt
shl
sar
mov
inc
push
je
xchg
mov
xrelease
sbb
cmpsl
fdivrl
or
mov
mov
mov
stos
mov
sahf
fwait
push
pop
dec
jecxz
xchg
rcl
add
dec
push
cwtl
xchg
mov
movsb
pop
shr
xchg
push
aaa
mov
xchg
jnp
sbb
pop
test
inc
movsl
aaa
mov
rcr
inc
push
int
mov
test
daa
push
fldl
jl
pop
push
loop
out
je
jo
stc
test
sarb
sbb
insb
hlt
int
adc
jle
arpl
jae
push
cmp
fldt
daa
test
push
scas
mov
xchg
into
push
adc
push
sbb
ja
mov
mov
and
push
fisubl
sub
sub
jg
and
sbb
and
adc
cwtl
mov
push
mov
add
sbb
xchg
test
mov
xor
lahf
cmp
push
mov
xor
pop
mov
push
push
ret
jno
and
mov
xchg
js
push
inc
sbb
xor
lds
mov
repnz
mov
test
or
xor
sub
inc
xorb
aam
xchg
pop
loop
push
xor
xchg
mov
jecxz
cmp
es
pop
icebp
fsubl
and
int
jne
data16
jnp
cltd
pop
dec
nop
fsts
je
jae
push
loopne
mov
lahf
lret
push
shrl
mov
arpl
pop
and
leave
int3
adc
lds
fxch
add
ret
nop
out
fcoms
jo
aam
aam
pop
jecxz
filds
pop
pop
push
lods
dec
cwtl
inc
popf
pop
in
shl
mov
pop
cmp
out
scas
fs
movl
cs
xlat
xor
push
xchg
cmp
mov
jnp
mov
stos
mov
cwtl
dec
icebp
inc
push
cmovnp
add
lds
popa
mov
add
les
xor
jmp
and
fnsave
cmpsb
cmpsb
cli
sub
ficomps
and
pop
out
fisttpll
jmp
fs
and
push
add
stc
mov
popa
aad
fidivrs
das
xchg
sub
imul
rclb
mov
xor
and
and
xchg
cmpsl
fs
or
popa
das
insb
mov
fwait
push
orb
push
mov
push
add
adc
dec
dec
loope
cmc
dec
cltd
in
outsl
dec
ljmp
subb
jecxz
lea
cmpsb
shlb
push
sub
push
mov
sti
clc
cmp
out
leave
ja
xchg
int
jo
pop
inc
xchg
fcompl
adc
xlat
add
adc
aas
push
loopne
xchg
mov
xor
repz
arpl
pop
leave
xor
dec
jl
cmpsl
fwait
add
sub
dec
sbb
divl
pusha
loope
loopne
pop
xchg
push
mov
mov
mov
in
nop
pop
in
sbb
pop
push
jge
pop
mov
in
adc
cmp
popa
cmp
ret
inc
inc
ficomps
imul
jp
ja
xchg
xor
sub
jge
ror
mov
in
mov
add
out
fs
mov
jne
sbb
and
fs
inc
arpl
push
fcoml
sub
xchg
into
push
pop
test
push
int
xchg
ds
dec
cmp
shll
scas
xchg
mov
lds
sbb
in
xor
xor
subb
mov
scas
mov
in
loope
cmp
lods
cmpsl
daa
sbb
icebp
jbe
test
and
xchg
popf
mov
data16
cmp
and
or
scas
ljmp
jl
cmp
push
add
in
jge
jmp
js
xchg
mov
lcall
inc
push
and
mov
js
inc
dec
jp
jmp
cmpsl
clc
ret
or
mov
add
mov
fs
jbe
bound
dec
cli
push
clc
push
outsl
or
cmp
insl
add
mov
sub
fsubs
pushf
je
add
cmp
jmp
add
sbb
data16
push
sbb
inc
xchg
out
mov
fisubl
mov
fistl
in
mov
lds
sti
mov
mov
push
adc
cmpsb
xchg
sub
mov
dec
popf
ljmp
pop
mov
insl
sub
push
testl
into
shl
fisubrl
push
movsl
ljmp
shl
inc
mov
shrb
jno
scas
mov
inc
fnstenv
pop
mov
orb
inc
out
or
or
dec
dec
fbstp
rolb
addr16
sub
sub
xor
icebp
pop
outsb
jb
outsl
out
jle
push
dec
or
push
das
add
je
js
xor
jno
jmp
haddpd
test
fcomps
mov
stc
insb
test
pop
shl
jo
xchg
mov
mov
mov
enter
in
hlt
ss
jg
push
into
jge
xchg
mov
lea
call
loopne
sti
out
movsb
jl
loope
xchg
stos
xchg
add
push
aam
jno
addl
fildl
push
call
jne
adc
inc
cld
ficompl
jno
push
fcomps
mov
jl
pop
and
mov
sti
xchg
mov
pop
adc
stc
fsubrs
mov
cmpsl
jbe
aam
mov
pop
out
mov
sti
pop
xorl
in
sbb
call
sbb
mov
jns
outsb
sbb
xchg
test
sbb
jno
pop
data16
adc
jb
dec
in
sbb
sub
mov
cmc
xor
popf
xor
dec
js
mov
jo
adc
cmc
lods
sbb
push
fsubs
in
sbb
mov
loope
xor
sub
cmp
sbb
jp
sbb
or
xor
jp
sbb
sub
icebp
pop
and
and
lret
sbb
fmul
cmp
je
in
mov
and
jl
shl
lock
movsb
in
push
mov
pop
xchg
xor
jmp
mov
call
jo
inc
jo
aaa
inc
add
inc
adc
loope
mov
repz
call
sbb
push
sbbl
xchg
cmpb
test
lock
repnz
pop
xchg
push
xchg
mov
out
jmp
jno
lea
sbb
adc
shll
ror
and
jp
lods
pop
push
push
icebp
push
or
addb
mov
xchg
jmp
arpl
cmpl
sub
cmp
push
add
hlt
addl
pop
addr16
pop
jg
cmp
mov
mov
xchg
jns
pop
ja
mov
in
sub
and
cmc
fs
jg
push
xchg
nop
in
faddl
loope
jmp
loop
pushf
jl
pop
rcrl
dec
xor
pop
cmp
mov
add
sbb
sbbl
xchg
mov
mov
push
mov
jo
push
xor
inc
imul
pop
pop
lret
lock
adc
clc
jbe
mov
jb
popa
lock
aam
jle
data16
jl
pop
xlat
icebp
call
xchg
xchg
popa
mov
push
nop
cmpsb
mov
xchg
pop
jg
adc
pop
in
icebp
sbb
push
jo
sbb
xchg
bound
fdivrs
push
pop
dec
enter
mov
popa
popa
jb
lods
ja
sbb
jo
pushf
push
pop
xchg
ds
sbbl
test
xchg
daa
sbbb
pop
cmpsl
fldcw
ret
jb
pop
mov
cltd
stos
sbb
imul
pop
jo
pusha
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
imul
pusha
pop
pop
pop
jo
bound
fs
out
mov
xchg
in
sub
ds
dec
std
mov
dec
lea
push
sbb
push
mov
or
fcmovb
xor
cwtl
mov
sahf
fs
stos
mov
pop
mov
int
fcmovb
lret
jb
pop
lea
enter
sub
sbb
das
inc
sub
adc
inc
cmp
loopne
cmp
hlt
add
fs
push
out
cltd
jne
xchg
adc
mov
pop
xor
repz
xchg
jae
mov
into
fmull
dec
addl
pop
xor
clc
stos
and
cs
xchg
out
lock
stos
nop
adc
pop
lcall
ss
mov
adc
xor
imul
mov
jo
jg
and
lods
lock
cmpsb
pop
in
cli
aam
das
push
jp
sbb
mov
mov
sub
les
cmp
sub
cmpsl
rolb
inc
rclb
pop
hlt
jno
cltd
int3
push
or
ljmp
inc
iret
enter
loopne
movsl
mov
fdivr
jmp
inc
cmp
sub
push
aaa
rcrb
fmuls
arpl
adcb
out
aaa
vmulss
xor
enter
add
mov
xchg
xchg
fmull
push
into
out
scas
in
cmp
and
push
mov
lret
mov
mov
pop
fs
out
ljmp
jbe
xchg
test
pop
mov
inc
fnstsw
jbe
mov
cld
popf
xchg
mov
stc
and
cmp
jo
adc
shlb
mov
fcoms
test
mov
sahf
test
ret
sub
jnp
push
push
stos
dec
aad
push
jne
ficompl
jb
cmp
jno
mov
mov
data16
ret
jle
bswap
add
dec
mov
sbb
dec
add
add
dec
orl
sahf
push
out
scas
cmp
jmp
push
mov
scas
or
mov
inc
or
xlat
cmp
and
adc
fsts
popa
data16
and
repnz
gs
push
jle
aaa
dec
jg
jbe
sarb
lcall
mov
movsb
scas
jle
add
mov
ja
cmp
nop
pop
into
push
cmp
icebp
imul
jne
in
sbb
push
cmp
subps
scas
imul
rcrl
mov
adc
and
fidivs
mov
orl
lcall
sbb
pop
sbb
xchg
sbbb
cmpsb
cmp
adc
push
js
cmpl
fsubs
push
and
mov
shrl
insl
test
cmpb
adc
lcall
js
repnz
hlt
cmp
es
pop
cwtl
pop
inc
sahf
inc
dec
jge
fldenv
mov
jno
jge
pushf
and
pop
cmp
rclb
xchg
pop
sbb
into
jo
and
pop
cltd
pop
xchg
rcrb
xchg
jne
enter
mov
loopne
xchg
xabort
dec
gs
outsl
loopne
push
xchg
test
cmp
cltd
hlt
cmp
mov
jmp
test
mov
std
test
popa
jo
arpl
mov
js
jp
aam
jb
pop
adcl
xlat
add
jne
cmp
xorl
xor
dec
push
mov
frstor
xchg
lret
pop
fstp
pop
cmp
sub
pop
rol
lds
pop
jbe,pn
imul
jbe
clc
pop
xor
cltd
das
xor
push
pop
fwait
pop
mov
push
rorl
sbb
test
or
xor
adc
in
pop
cmp
clc
rcl
cmpsl
fstl
movsb
inc
lret
fmul
pushf
push
push
in
hlt
jne
test
push
mov
jo
dec
cmp
int
loop
jne
lods
sub
sub
aaa
or
fucomp
stos
mov
push
adc
cmpsl
adcl
jbe
fcomps
add
xchg
push
push
andl
or
in
push
fsub
shrl
je
pop
push
sti
pop
lcall
stos
inc
cmp
push
mov
cmpsb
cmp
sub
push
sbb
fnstcw
movsb
jno
dec
fscale
xchg
rolb
jb
shr
mov
mov
adc
into
jl
cmpsb
pop
mov
jl
add
mulb
stos
add
sbb
cmp
pop
jp
pop
div
sbb
pop
lcall
cmp
out
inc
fwait
dec
mov
jp
loop
enter
xor
mov
hlt
mov
subl
popf
js
cmpsl
hlt
test
mov
sbb
stos
ja
add
js
imul
loopne
sbb
mov
insb
jo
xor
xchg
js
mov
xchg
sbb
push
mov
mov
mov
ja
inc
cli
lahf
sti
ficomps
nop
cld
pop
pop
decl
pusha
pop
lcall
push
and
jg
lock
ja
pop
inc
scas
push
mov
push
ret
and
lahf
jg
xchg
ljmp
insl
into
push
cwtl
or
jno
imul
sub
jnp
mov
push
mov
leave
loop
fst
push
sbb
adc
xchg
aad
dec
cmp
call
jo
push
ret
movsb
mov
into
std
inc
stc
cmp
test
roll
pop
rcrl
or
insb
aam
dec
fstl
fwait
addr16
mov
stos
sbb
sub
jae
mov
xchg
jg
adc
xchg
jno
jae,pn
in
scas
add
pop
jge
insb
mov
imul
fldl
xchg
rol
leave
mov
decl
sbb
call
push
mov
sahf
push
loopne
jbe
add
xchg
dec
mov
loope
cwtl
les
lods
gs
pop
jo
mov
mov
and
jne
xor
les
push
xchg
addr16
push
jno
sub
lock
sub
loope,pt
pop
or
loop
imulb
add
arpl
pop
push
pop
cmp
inc
int
int
lock
ljmp
ret
xchg
into
xchg
popa
pop
lock
jge
leave
mov
xchg
arpl
xchg
in
push
push
aad
push
inc
mov
push
xlat
movl
dec
or
push
mov
pop
sbb
jo
cwtl
sbb
cmpsl
daa
icebp
xchg
jns
jnp
push
push
mov
xchg
loopne
pop
bound
cmp
cmp
pop
dec
cmp
xor
lea
rcl
mov
nop
jae
mov
push
cmp
addr16
fwait
loope
push
jo
leave
scas
xor
ret
int3
lds
or
lcall
xchg
aaa
test
cld
push
jns
loopne
mov
cmp
xlat
jno
jbe
outsb
fstpl
enter
gs
push
or
jecxz
fwait
ret
pop
stos
xchg
jle
call
sahf
pop
lret
les
test
scas
lret
push
sti
or
dec
jp
jb
xchg
add
xchg
pop
sbb
in
stos
jmp
jns
fdivp
pop
lahf
jge
imul
fs
vcomisd
push
daa
data16
sbb
pop
cwtl
pop
js
fsts
sbb
sub
and
jae
cmp
lods
adc
das
lock
std
jb
call
cmp
int3
int
dec
les
fldcw
adc
in
push
adc
inc
push
push
aad
ja
jnp
scas
xor
insb
popa
fcoml
js
pop
in
jmp
xor
jb
inc
sbb
int
lret
rolb
push
fs
push
dec
xor
sbbb
fstp
inc
es
or
lahf
inc
push
mov
test
dec
inc
clc
mov
cmpsw
dec
call
pop
push
sub
test
push
clc
sub
js
ljmp
pop
movsl
ficompl
js
stc
pop
je
lcall
in
dec
sbb
nop
shrb
rclb
and
frstor
les
js
bound
mov
stos
sbb
adcb
cmp
je
es
inc
pop
fstpl
sub
sub
imul
ss
inc
jecxz
aam
cli
lret
add
xchg
fcomps
mov
mov
notb
int3
push
rorl
sub
scas
hlt
xchg
fstp
fbstp
nop
pop
jl
mov
pop
jp
in
in
xchg
int
pop
push
cmp
cwtl
jo
imul
push
outsb
fwait
or
xchg
loopne
inc
iret
lret
subl
mull
push
jecxz
in
push
test
cmp
xchg
cmp
loopne
enter
pop
jecxz
les
rol
pop
add
mov
test
pusha
cmc
les
or
aam
sbb
sbb
cmp
jno
jmp
enter
dec
dec
arpl
jo
aad
jo
repnz
fnsave
cmp
jge
out
das
imul
leavew
xorl
roll
mov
adc
mov
xchg
mov
push
mov
imul
mov
stc
out
out
adc
jno
xchg
dec
arpl
bound
mov
dec
js
mov
mov
hlt
dec
andb
jg
inc
add
cmp
lret
cmp
mov
sub
popa
insb
push
sbb
sahf
pushf
jmp
push
std
pop
pop
lds
data16
orb
mov
mov
mov
pop
outsb
lods
popa
and
xor
cwtl
sub
cmp
mov
shl
sbb
fcmovnb
jg
popa
xchg
cmpsb
cmp
adc
sahf
popa
pop
mov
int3
xor
stc
cmp
jo
fistps
pop
cmp
movsl
test
call
push
push
les
outsl
mov
ret
inc
cmpl
pop
ret
inc
addl
adc
outsb
scas
dec
push
call
fwait
xor
aaa
hlt
popa
out
inc
roll
or
adc
mov
rorl
jbe
xchg
fcoms
iret
mov
je
js
cmp
or
mov
fstps
mov
loopne
imul
inc
rcrl
sbb
fistpl
mov
lds
dec
cmp
arpl
int
cltd
div
pop
xchg
fptan
stc
and
lock
aam
nop
push
cmp
cmp
data16
out
shlb
mov
cmp
lea
xorl
sahf
mov
es
sbb
movsl
pop
jg
and
xchg
sbb
sbb
popf
and
jno
xchg
stos
dec
dec
mov
xchg
mov
mov
dec
mov
xchg
aam
call
rorl
iret
in
adc
cmp
mov
nop
cmp
or
pushf
sbb
fdiv
scas
push
mov
fsts
sti
mov
test
imul
xchg
push
scas
mov
cmpsb
test
and
lds
insl
cwtl
jae
leave
into
ds
lds
mov
xor
mov
xor
aas
popf
push
inc
outsl
addb
les
mov
and
int
cmp
test
push
int
fldenv
sbb
cmp
movsl
cmp
cmpb
int3
shrb
jbe
jae
xor
lret
sbb
std
and
xor
jno
ja
mov
inc
clc
adcl
jecxz
pushl
cltd
scas
cmp
fcmove
xchg
jbe
mov
dec
out
mov
sub
sbb
in
xchg
dec
in
and
icebp
out
pop
xchg
fistpl
and
out
mov
scas
lods
adc
std
push
rclb
les
leave
mov
outsb
push
cmpb
daa
xchg
xchg
insl
mov
sub
cmc
xchg
mov
daa
mov
xchg
pop
pop
inc
loop
jb
inc
ja
mov
mov
aad
pop
jmp
mov
jge
scas
xor
inc
xchg
push
addl
test
push
dec
mov
cli
popa
rcrl
add
jmp
mov
stos
sbb
mov
fwait
ja
leave
lahf
jecxz
add
jno
jo
mov
shll
les
mov
int
push
cltd
jecxz
fcompl
stos
pop
sbb
int
jp
mov
lret
sti
vmwrite
mov
insb
scas
scas
mov
xor
push
test
jle
popa
cmp
pop
aam
push
pop
inc
xchg
xchg
sahf
xchg
outsb
jae
sub
mov
mov
mov
rolb
pop
fs
sbbb
sub
iret
add
test
mov
mov
ljmp
fdivrs
repz
psubsw
pop
jae
fs
clc
stc
and
mov
mov
repz
shll
dec
test
jp
bound
sbb
ja
in
cwtl
addr16
add
jnp
jo
fildll
sbb
xchg
js
aam
test
pop
scas
adc
popa
sti
jo
imul
cltd
fimuls
pop
outsb
pushf
mov
imul
mov
adc
xchg
cwtl
pop
push
jno
arpl
aas
add
ja
sahf
enter
mov
mov
xchg
fstl
mov
pop
test
mov
imul
sbb
scas
adc
ror
fimuls
mov
rorl
and
push
sub
dec
sub
inc
dec
jmp
aad
lds
mov
imul
push
movsb
jno
push
cmp
inc
fdivs
mov
push
jl
dec
arpl
xor
scas
adc
call
cmp
lret
int
mov
mov
xor
adc
mov
xor
and
insb
sbb
lds
or
mov
loop
mov
pop
push
pop
sbb
push
movsb
shr
in
test
ret
pop
add
je
out
in
add
mov
sarl
fsubl
xor
adc
push
add
xchg
jae
jge
sub
sbb
out
arpl
push
out
sbb
in
inc
test
popa
insl
leave
mov
push
int3
cmpsl
or
arpl
data16
pop
movsl
lea
inc
sub
cmpsb
mov
pop
and
repnz
data16
add
imul
out
fistpl
pop
ljmp
jns
push
push
lock
inc
mov
adc
loope
aam
andb
xchg
lret
jnp
inc
cmpsb
mov
inc
xchg
cmp
dec
fsubr
push
xchg
mov
push
stos
mov
int3
cwtl
mov
das
mov
pop
or
bound
sub
mov
rcr
push
das
sub
loope
mov
jb
dec
rorb
icebp
mov
pop
aad
sbbb
dec
dec
cwtl
mov
stos
fstl
cmp
arpl
dec
int3
js
xchg
sub
ljmp
fsubp
xchg
mov
inc
ljmp
sub
mov
ficomps
popa
mov
enter
adc
cmp
inc
inc
xchg
xchg
pop
push
jbe
dec
loopne
dec
mov
jnp
cwtl
ret
fisttps
data16
push
shlb
xor
jb
dec
sbbb
bound
je
push
dec
inc
mov
vmwrite
jb
mov
jo
lea
mov
pop
insl
mov
push
loope
jno
dec
jmp
data16
sbb
sub
xchg
add
sbb
jle
mov
andl
repnz
in
aaa
sbb
into
mov
out
imul
cmp
jb
popf
xchg
and
test
cmp
jb
dec
mov
xchg
add
pop
rcr
sub
xchg
call
fbld
jb
into
in
sbb
pop
cmpsl
fs
shll
outsl
xchg
jns
pop
sub
mov
pop
sarb
mov
popa
mov
inc
mov
xor
ds
jbe
or
adc
mov
jb
adc
sbb
cltd
es
mov
mov
jno
gs
mov
mov
cmp
mov
iret
mov
pop
pop
movl
pop
cmp
mov
mov
out
mov
roll
inc
pop
mov
sbb
movl
xchg
stos
sbb
pop
je
mov
pop
mov
jno
cmp
in
fdivrs
arpl
bound
pushf
jl
jno
sbb
mov
mov
inc
negl
and
xor
mov
push
ljmp
cmpb
mov
insb
imul
push
shr
mov
imul
je
pop
cmp
pop
sbb
add
xor
jns
adcb
xchg
fldenv
negb
je
pushf
fsubr
adc
pop
scas
icebp
ret
jb
mov
xchg
and
xor
mov
jne
push
adc
fdiv
movsl
insl
arpl
bound
ror
pop
stos
iret
test
adc
xor
aam
mov
mov
push
mov
push
jo
sbb
or
xchg
fdivs
enter
fildll
or
fisubs
andl
and
xchg
jg
imul
mov
push
arpl
jns
inc
mov
pop
imul
scas
sbb
int3
mov
sahf
mov
push
xchg
out
cmp
xchg
aad
xor
cmpsl
int3
add
push
pop
lods
loop
bound
dec
add
call
adc
fisttpll
push
jns
cmc
push
fists
jae
rcrl
sub
jmp
or
out
ljmp
sbb
cmpsl
lret
inc
out
fidivrl
dec
in
mov
insb
fdivs
out
sub
xorl
int3
je
cmc
cmpsl
mov
movsl
push
adc
sub
bound
or
and
rorl
arpl
mov
mov
cmp
fistl
mov
adc
dec
push
sub
shll
lea
div
cmpsb
inc
sbb
imul
stc
mov
dec
jle
add
xor
push
ret
pop
pop
add
ffree
dec
insl
xor
cli
sub
stos
scas
shl
out
insl
in
popa
loope
js
sbb
jo
shl
fsub
pop
insl
fprem
sub
cmp
mov
in
andb
in
xchg
or
mov
dec
lds
dec
mov
nop
or
mov
lcallw
cmp
iret
call
out
fdivrp
adc
lods
push
stos
or
cmpsb
int3
xor
add
pop
mov
test
cltd
repnz
in
xchg
dec
roll
push
insl
stos
fldcw
jmp
sahf
adc
out
mov
aam
dec
dec
lahf
pop
xor
jg
js
aam
lods
adc
shl
xchg
adc
mov
aas
cmpsl
add
adc
jb
pop
daa
mov
push
inc
lret
mov
or
outsb
sub
pavgw
pop
mov
leave
loopne
fistpll
mov
into
lock
pop
xchg
out
cmpl
or
movsl
xchg
and
push
sub
push
inc
sub
mov
jmp
js
fistl
push
and
je
mov
dec
imul
fwait
icebp
js
mov
dec
jbe
push
jg
xor
lcall
cwtl
insl
ja
les
sbb
mov
add
mov
call
mov
sbb
dec
outsl
mov
out
outsl
or
dec
jnp
dec
adc
jne
push
fsts
sub
push
sbb
lcall
add
pop
iret
add
jl
xlat
jge
sub
mov
push
xchg
fistpl
adc
sub
outsl
pop
sub
outsl
add
addr16
stos
andb
je
push
or
loope
js
push
sub
popa
mov
mov
dec
jne
das
adc
cmp
out
ret
lods
xor
push
sub
pop
mov
imul
fcomip
hlt
icebp
lea
xlat
jp
or
mov
mov
shlb
jno
sub
push
ja
int
dec
inc
cmpsl
das
mov
std
movsl
call
insl
cmpsl
push
mov
jge
test
jno
xchg
xor
stos
ljmp
int
jnp
cmp
fnstenv
adc
bound
xlat
cmp
sub
fdivr
enter
push
push
sub
xor
jle
aaa
mov
mov
mov
faddp
and
lcall
mov
arpl
pop
sti
test
mov
int3
push
iret
jl
dec
xchg
call
pop
addr16
fidivrs
xlat
xchg
push
pop
mov
or
aad
xor
addr16
mov
sbb
pop
inc
jo
les
lcall
lahf
lock
cli
cs
mov
mov
aam
push
out
xchg
in
jo
ds
stc
push
adc
jo
xor
pop
icebp
xor
insb
cwtl
hlt
cmc
lods
in
sbb
jmp
adc
fstpl
stc
clc
aam
cmp
mov
xor
into
sub
push
jbe
sahf
sbb
pusha
adc
outsb
in
mov
je
push
jnp
sub
in
leave
mov
jecxz
pop
es
lock
jae
icebp
lods
test
jp
les
out
leave
in
cmp
jo
mov
repz
shl
imul
fnstsw
jb
dec
fcmovnb
and
cmp
std
or
cld
inc
mov
mov
push
and
iret
sarl
call
imul
or
jns
fs
arpl
cli
outsb
push
dec
inc
test
cmp
or
adc
addl
jp
fstps
scas
aas
adc
push
add
mov
cmp
mov
cmp
movsl
rcrb
push
aam
shll
jo
sbb
les
sbb
fimuls
inc
das
and
fdivr
fs
fsubrs
enter
popa
aad
lcall
xchg
and
fisttpl
cmp
aam
fisubrl
repz
cmc
dec
jb
leave
lret
cmp
aam
fucomip
data16
pushf
pop
sbbl
int
adc
lods
pop
sub
jno
aam
cmp
les
pop
adcb
xchg
popa
xchg
mov
loope
jno
rorb
pop
xchg
add
fs
arpl
outsl
or
mov
or
xlat
bound
lock
in
add
mov
outsl
add
adc
xchg
cmc
xor
js
shll
pushf
imul
ficoms
int
in
repnz
jg
mov
inc
mov
and
xchg
test
xchg
mov
mov
dec
cmp
loop
scas
and
mov
sub
jne
shlb
test
push
hlt
in
aas
sub
fcoml
mov
mov
pop
mov
jle
fcmovu
mov
cld
popa
cmp
push
pushf
pop
loop
imul
fiadds
andb
hlt
jne
repnz
stos
and
mov
mov
xchg
stos
or
dec
je
and
hlt
or
xchg
aam
aam
aaa
out
pusha
dec
mov
fisubl
fstpt
jo
sub
fwait
stc
mov
popa
push
lret
rcrb
push
popa
cli
mov
loopne
rolb
xor
inc
pop
lds
pop
jle
je
aad
clc
jb
jmp
mov
scas
fwait
data16
mov
in
sub
or
int3
insb
lea
pop
mov
hlt
fldt
mov
je
push
cmp
in
aas
adc
sub
movsl
lds
add
imul
jle
mov
in
mov
mov
xor
icebp
push
in
mov
insl
sub
cmpsl
xchg
sbb
cmpsl
adc
pop
pop
shl
insb
inc
insb
outsl
sbb
insl
adc
or
jle
imul
loope
insl
sub
jp
addb
sbb
jae
jno
in
mov
cs
jnp
pop
and
cld
fisubrl
lea
cmp
js
jle
push
fidivs
mov
insb
push
cmpsb
push
xchg
aad
je
mov
mov
xchg
ljmp
adcl
orl
cmp
test
sahf
cmp
into
mov
fsubr
pop
mov
stos
cmpsb
add
test
dec
ljmp
out
pop
cmpsb
lret
inc
stos
mov
dec
adc
pop
pusha
cmp
loopne
insl
in
jbe
jbe
sti
mov
out
inc
popf
mov
jp
fcmovb
inc
cmp
lds
jo
shrb
jno
in
pop
popa
imul
jb
adc
push
nop
xchg
mov
add
pushl
and
and
inc
dec
push
data16
xor
bound
clc
jno
cwtl
push
sbb
dec
adc
and
jno
lods
test
adc
test
imul
jno
xchg
xor
outsb
jb
sbb
sbb
jmp
jns
scas
mov
inc
popf
aad
mov
pop
pop
mov
cmpsb
push
pop
js
js
mov
mov
push
push
fs
push
and
xor
cmpsb
scas
xchg
aas
dec
cltd
dec
pop
adc
dec
scas
push
xchg
gs
mov
mov
cmpsb
xor
xchg
or
out
mov
cmp
out
push
sbb
loop
sbb
add
mov
test
int
mov
adc
jo
xor
int
cltd
jl
jbe
cmc
push
out
fyl2xp1
iret
mov
loopew
jb
jge
scas
xchg
hlt
pop
or
mov
mov
aaa
add
pop
xchg
jo
lock
addr16
out
xchg
cwtl
scas
aaa
lock
into
rorl
inc
or
sbb
or
mov
fwait
sbb
sub
pop
pop
loope
outsl
mov
icebp
xor
pop
xchg
gs
or
jnp
rorb
jle
mov
nop
mov
xchg
lods
jb
in
xchg
inc
cld
sub
inc
popa
insb
shll
loopne
pop
sub
adc
out
sub
cmpsb
mov
aad
mov
addr16
jb
in
xor
movsb
pop
and
jne
scas
dec
push
call
sub
inc
dec
test
aam
aas
sbb
inc
loop
mov
pop
xor
jb
push
pop
iret
rcrb
mov
or
pop
xchg
add
loop
aad
mov
dec
lds
cwtl
arpl
test
adc
fxtract
cmp
push
sbb
mov
mov
loopne
test
loopne
or
cs
add
shrl
sbbb
or
sbb
xlat
rsqrtps
scas
lods
in
lahf
cmp
leave
mov
imul
adc
cli
int3
lods
aas
jne
sbb
popf
dec
mov
dec
andnps
mov
sub
enter
dec
in
push
cmc
stc
popa
clc
fsubl
pop
jne
dec
je
jne
push
pop
stos
movl
stos
mov
int
cli
xchg
mov
arpl
pushf
dec
cs
popf
push
mov
mov
cmp
xchg
arpl
das
lds
dec
inc
xorb
or
mov
iret
cmovbe
push
mov
inc
fwait
stos
add
loope
scas
adc
inc
and
stc
adc
fldl
pop
xchg
mov
mov
push
xorb
or
xor
dec
orl
cmp
and
xchg
adc
cli
jns
jl
xor
cmp
rorl
les
cmp
xlat
in
xor
cmp
or
rclw
mov
add
mov
pop
in
xchg
mov
aad
dec
lcall
imul
adc
loopne
xchg
push
nop
xor
lock
in
je
inc
cmp
rcrb
in
adc
adc
or
lods
cmp
cmp
test
push
loopne
movb
pusha
cltd
lret
aad
popa
addr16
rorl
mov
mov
push
jmp
xchg
sar
jno
xor
xchg
mov
popa
iret
nop
sbb
icebp
popf
jne
xchg
pushf
pushf
sahf
sbb
add
js
cmp
mov
pop
sub
fwait
inc
adc
pop
in
and
cmp
mov
or
aas
cmp
inc
jmp
gs
fadds
into
rclb
mov
dec
push
mov
iret
and
push
les
data16
rol
shrb
call
pop
mov
mov
lds
cmpsl
inc
cmp
xor
push
movsl
sbb
mov
fildl
fists
jecxz
xor
sub
xchg
mov
lods
xchg
push
or
push
mov
push
push
in
mov
pop
lret
jmp
jno
popa
leave
pop
das
cmpsl
mov
adc
data16
sub
lods
imul
add
mov
js
fs
jae
push
ja
enter
xchg
cmp
je
push
out
push
mov
sbb
mov
pop
sti
into
rorl
mov
mov
aad
adc
movl
movsb
pop
dec
rcrl
insb
adc
stos
mov
jno
adc
cwtl
xor
pop
jmp
fcmovu
lods
pop
jl
pop
loope
bound
cmpsl
lret
xchg
xor
lods
dec
xchg
in
stc
mov
ja
inc
fcompl
popa
movsb
inc
inc
dec
push
jo
loope
sbb
sbb
add
cmp
jo
aam
fst
and
and
add
mov
leave
scas
imul
rcll
mov
and
adc
pop
pop
cwtl
mov
sub
dec
fstps
rol
insb
dec
cmp
cltd
stos
sbb
adc
insb
xor
push
loop
mov
bound
mov
push
pop
dec
xchg
sbb
lods
sbb
adc
bnd
aam
jle
adc
lahf
push
xor
lcall
into
fidivrs
or
aad
fsub
lret
out
bound
dec
imul
out
out
int3
cmp
jno
push
cmp
mul
lahf
dec
dec
mov
mov
in
xor
outsl
fmuls
inc
std
clc
adc
mov
mov
or
jnp
loop
mov
stos
test
mov
cld
aad
imul
lahf
push
mov
imul
push
xor
mov
mov
ret
out
inc
cmp
shr
jne
mov
xor
pop
jb
sbb
pop
imul
push
xchg
loope
pop
push
push
cmpsl
cmp
test
aaa
test
push
jae
and
mov
and
adcl
mov
pop
sbb
lods
scas
mov
xchg
jecxz
adc
jmp
nop
mov
inc
mov
repnz
aad
int3
jl
fnstcw
pop
inc
mov
out
icebp
pop
lcall
inc
into
xor
fwait
cli
pop
notl
stc
lcall
mov
jne
aad
xchg
arpl
faddl
sahf
cli
mov
inc
sbb
add
sbb
inc
adc
out
pop
push
or
jp
or
add
push
scas
nop
xor
sub
shlb
xchg
dec
aad
inc
pop
inc
adc
pop
jp
cmp
notb
and
fildll
push
jnp
ds
or
xor
pop
or
inc
imul
jge
pop
sbb
push
jg
les
hlt
mov
stos
fs
jp
xchg
cmp
fs
pushf
fnstenv
mov
mov
mov
test
push
dec
int3
sbb
rorb
bound
jne
cmp
aad
xchg
sbb
pop
sbb
int
sbb
ret
push
add
setl
or
mov
test
out
add
sbb
push
aam
add
in
test
push
mov
dec
fistpll
add
in
push
popa
push
insb
out
lock
mov
fadd
xchg
lods
cwtl
popa
cmpsb
and
push
in
fnstenv
inc
cs
test
addr16
hlt
cmpb
in
fcoms
mov
mov
jo
adc
call
not
lret
sarb
outsb
or
data16
cli
arpl
or
pop
jle
xor
sahf
lret
fwait
jb
daa
mov
lock
bound
imul
or
fst
adc
mov
frstor
pusha
and
push
stos
aam
les
or
pop
out
cmp
sbb
shll
sar
inc
fsub
lds
inc
cmpsb
lret
popa
and
pop
inc
xor
adcb
mov
dec
popf
addr16
test
loop
fsubp
xor
hlt
data16
popa
xchg
leave
pop
push
push
pushf
aam
mov
stos
mov
dec
ret
xor
fndisi(8087
push
mov
popa
lcall
xor
in
je
push
aas
xchg
into
dec
icebp
sbb
loop
sbb
sbb
outsb
mov
sti
daa
pop
test
pop
mov
in
xchg
lock
add
xorl
loop
sbb
out
daa
in
les
iret
test
cli
xchg
or
jae
adc
mov
cmpsl
pop
in
mov
pushf
cmpsl
mov
or
fisttps
push
pop
mov
mov
lods
cmpsb
sahf
fsub
mov
or
mov
in
jecxz
jno
test
daa
aaa
inc
cmpsl
jp
mov
sbb
adc
push
pop
add
movsl
andb
fwait
adc
push
shlb
sti
add
pop
fst
rcl
je
cltd
add
into
inc
icebp
push
cmp
mov
call
and
or
dec
insb
fxch
jo
cmpsl
stos
adc
mov
scas
cmp
pop
jns
mov
jge
fcoml
bound
xchg
mov
push
or
andb
movsb
jo
pop
push
sbb
vdivps
or
int
fdivs
adc
pushf
push
js
aad
xchg
push
mov
mov
addr16
fst
sahf
lods
movsb
push
mov
jg
bound
jns
stos
or
and
push
icebp
pop
out
sbb
stc
mov
xchg
cmpsb
out
pop
pop
out
jo
push
and
les
sbbb
imul
sbb
mov
gs
call
fdivr
aam
sbb
and
sbb
inc
mov
clc
dec
fldenv
outsl
insb
icebp
insl
fsub
dec
ror
les
inc
ret
outsl
mov
push
push
scas
aam
out
xchg
shrl
jnp
pushf
xor
pop
mov
cmpsl
pop
iret
lock
push
xor
outsl
addr16
xchg
inc
pushl
ret
lods
xorb
and
mov
mov
cmpsb
lods
cs
enter
cmp
and
aam
std
out
sub
int
jno
dec
fdivrs
or
in
pop
cmp
test
mov
lret
inc
repnz
mov
pop
les
fwait
push
je
dec
mov
cwtl
mov
xchg
dec
or
add
stos
sub
jecxz
bound
inc
popf
xlat
shrl
lahf
pop
add
dec
inc
clc
imul
stc
pop
dec
popf
fcmovb
pop
pop
test
add
jo
mov
jne
mov
mov
in
aad
les
lcall
xchg
mov
insb
pop
stos
dec
push
sub
add
cmp
lahf
movsb
data16
xchg
nop
push
ss
test
dec
into
add
pop
mov
push
mov
cmp
jp
xchg
sub
cmp
mov
jp
adc
lea
adc
ds
lds
inc
sarl
out
xchg
lea
rcll
pop
sbbl
pop
pop
in
mov
popa
andb
fiaddl
in
lods
aas
loope
out
arpl
addr16
jmp
shll
lds
cmp
js
ds
pop
scas
mov
inc
xchg
push
pop
fs
mov
push
js
sbb
push
scas
fs
outsb
xchg
pop
outsl
les
jno
jo
jb
pop
and
movsl
aad
std
mov
les
fwait
mov
data16
push
push
sahf
aas
imull
std
dec
cltd
cli
inc
int3
repz
mov
cwtl
xchg
sar
sbb
lahf
addr16
arpl
push
push
enter
mov
jne
call
stos
pop
inc
movsl
cwtl
jb
jb
mov
inc
shll
xchg
out
ret
dec
xchg
jg
jo
adc
fldt
lahf
mov
popa
fisubrs
mov
loope
lock
add
outsb
imul
je
dec
aas
cs
clc
divl
pop
xor
popf
adc
imul
adc
cmp
lods
xchg
adc
sbb
fucomp
imul
sahf
pop
dec
je
loope
aad
jae
lcall
scas
int
mov
in
fldenv
mov
cld
in
call
add
aad
lock
sti
fmull
dec
ds
into
int3
pop
pop
dec
daa
and
mov
cmp
roll
movsl
mov
xchg
mov
mov
or
repnz
notb
and
sub
and
movsl
in
gs
andb
inc
push
pop
push
test
jbe
mov
sub
adc
and
je
ret
lds
insl
push
out
out
jne
sti
mov
test
jge
ja
cwtl
or
insb
mov
and
cmp
fdivrs
lahf
enter
mov
lcall
cmp
jae
out
cmc
xchg
xchg
popa
mov
sub
sub
pop
push
inc
iret
sbb
popa
jg
dec
inc
jecxz
test
dec
mov
mov
call
rcrb
sbb
mov
xchg
cmpsb
insb
lds
scas
push
jb
lock
imul
dec
sbb
popf
outsl
mov
daa
and
jbe
xor
fldcw
jne
bound
pop
and
xchg
sbb
dec
out
xor
dec
ljmp
in
mov
cmpsb
fstl
out
push
add
fsubl
jg
jbe
mov
int3
fsubrs
ret
dec
add
in
xchg
lods
leave
push
jg
mov
fcomp
sbb
int3
inc
fcmovb
push
adc
mov
fcmovne
scas
icebp
jmp
xchg
mov
outsl
dec
xchg
scas
ja
jb
data16
mov
xorl
mov
repnz
imul
mov
pop
mov
push
lea
aam
subl
movsl
push
in
push
pushf
mov
pop
nop
testl
aam
imul
std
xchg
shl
stos
lcall
sbb
testl
or
push
mov
jno
jb
clc
out
cmp
pop
mov
xchg
jnp
inc
mov
or
mov
cs
gs
add
outsl
andb
dec
inc
mov
addr16
shll
mov
or
fdivrl
inc
cmp
mov
stc
add
negl
mov
pop
subl
jo
mov
pop
imul
or
jo
mov
popa
adc
adc
dec
je
pop
xor
out
jo
add
repz
loopne
ja
loopne
fidivrl
pop
jbe
loopne
push
sahf
movsb
mov
mov
enter
cmp
sbb
rcrl
sbb
mov
sub
xchg
add
pop
or
xor
xor
iret
jp
mov
jno
fnstenv
lret
mov
orl
aas
push
rcrb
jo
rsm
push
fidivrs
mov
pop
xchg
fimull
push
adc
test
cmp
pop
fstpt
test
icebp
call
popf
ror
cmp
jp
sbb
cltd
pop
mov
fcoml
ds
mov
pop
jae
mov
bound
sbb
mov
pop
pop
xor
push
push
cmp
aam
scas
push
aam
pop
aaa
repz
push
mov
loope
call
fstpl
pop
jmp
fidivs
orb
dec
jno
lock
stc
jb
icebp
push
leave
xchg
jp
pop
popf
jmp
pop
in
sub
push
mov
jns
mov
cmp
inc
mov
mov
sbbb
ret
cmp
or
std
cmp
cmp
pop
outsl
decl
add
aaa
push
dec
sub
mov
and
adc
dec
bound
pop
mov
jmp
pop
arpl
xchg
pop
cmp
jmp
shlb
dec
xor
jo
testb
pop
mov
jmp
jno
in
test
adc
cmc
lret
xor
in
xor
shrb
mov
ljmp
imul
mov
in
sbb
jae
mov
pop
andl
mov
fxch
jo
fs
imulb
jbe
jae
add
test
shll
sbb
arpl
or
sub
ja
adc
mov
shr
or
loopne
xlat
ja
cmp
pop
sbb
icebp
fs
test
icebp
pushw
sbb
push
js
insl
enter
inc
in
sub
mov
lock
insb
cmc
push
outsb
inc
clc
je
jg
enter
adc
je
icebp
lock
leave
sub
scas
xlat
popa
sbb
jmp
and
inc
pop
mov
mov
nop
popf
cmpsb
pop
iret
mov
cmpsl
add
insl
mov
lret
xor
rcr
inc
lods
pop
out
pop
xchg
add
pop
pop
insb
jno
jb
xchg
test
pop
mov
imul
mov
andb
mov
xchg
stc
cwtl
call
icebp
pop
popf
jb
xchg
stos
push
adcl
jg
push
cmpl
push
imul
imul
fnstcw
lea
pop
pop
orl
pop
xchg
inc
and
cwtl
cltd
inc
jmp
jmp
jmp
jmp
jmp
jmp
icebp
pop
inc
jb
subb
mov
sbbb
xchg
cltd
or
stos
imul
sbb
and
pop
jp
cmp
dec
stc
pop
out
enter
test
push
xor
mov
fwait
aam
ds
jecxz
roll
jge
mov
mov
cmp
pop
xor
push
fnstcw
aaa
push
test
push
bswap
add
das
sahf
mov
std
pop
pop
jo
ret
jecxz
mov
cmp
insb
or
cmp
jge
arpl
mov
push
int
push
enter
pop
jg
and
daa
push
cmovg
sbb
imul
xchg
push
ret
call
lcall
insl
inc
push
fcmovnb
and
out
and
stos
dec
aaa
les
add
subl
gs
cwtl
cmpsb
outsl
xchg
mov
loope
or
test
andb
cmp
lock
repnz
xor
dec
sbb
dec
fcmove
mov
les
sti
test
js
sbb
push
mov
gs
test
sbb
push
int3
adc
mov
lret
cmp
js
jae
dec
fistps
mov
bound
imul
jp
jo
push
rorb
xchg
mov
int
push
test
sbb
mov
fsubs
lods
dec
xchg
test
inc
adc
sbb
stos
call
fadds
rclb
loop
call
outsb
sbb
mov
cwtl
push
sbb
lea
adc
fstpt
mov
jo
fimuls
push
aas
les
mov
rcl
shll
inc
xchg
push
mov
and
dec
cmpsl
dec
test
mov
mov
pop
nop
xor
adc
das
xor
xor
add
or
cmpsl
std
mov
lret
ds
mov
inc
mov
das
inc
cwtl
negl
repnz
push
inc
arpl
pop
lahf
pop
or
mov
pop
sub
shlb
and
pop
push
inc
mov
fistpll
je
xchg
push
dec
repz
bound
mov
iret
arpl
mov
jo
fistpl
out
clc
imul
jo
push
imul
push
popa
and
psubusw
lods
lods
jecxz
sub
adc
fcomps
pop
cmp
arpl
imul
sar
roll
sbbl
shll
js
enter
stos
scas
dec
cli
out
and
pop
pop
mov
add
sbb
and
repz
movsb
xor
pop
clc
xlat
push
shll
ljmp
test
lds
cld
dec
jbe
and
pop
cmpsb
cmp
clc
dec
dec
pop
mov
add
arpl
sbb
fcoms
and
push
movsb
push
pop
mov
push
js
jb
adc
popf
push
lcall
and
add
fcomps
push
icebp
mov
insb
call
lock
mov
jns
lret
add
arpl
or
mov
loop
mov
xor
or
sub
jae
mov
dec
add
fdivr
mov
nop
and
andl
adc
push
mov
inc
mov
shlb
insb
divl
lcall
subl
mov
inc
dec
mov
adc
sahf
scas
dec
je
cmp
movsb
int
stos
mov
int3
pop
loope
push
js
mov
movsl
data16
pop
inc
mov
cs
fcompl
aam
dec
cmpsb
fsts
loope
inc
sti
mov
lds
xchg
and
push
aad
mov
jp
xor
lods
lahf
cmp
pop
jne
cmpsl
xchg
mov
fsubl
jno
mov
cmpsl
pop
push
jo
jbe
jae
lods
ds
cmp
mov
mov
and
outsb
rol
lret
pop
push
rclb
out
sub
pop
dec
push
xchg
cmp
or
aaa
lds
movsl
mov
cmp
pop
push
fs
cmp
push
fcmovu
ret
dec
sbbb
fildl
movsl
pop
dec
mov
je
popa
aam
xor
xor
push
pop
dec
lods
fxch
jge
pop
jae
sahf
das
call
and
mov
popa
mov
pop
in
jae
aam
mov
shll
dec
mov
push
stos
iret
sub
jns
xorl
loope
push
dec
xchg
imul
xchg
fs
dec
fcomps
pop
orl
dec
jae
xchg
push
inc
aam
pop
fsubrs
pop
pop
fnsave
repnz
pop
push
adcb
rcll
mull
jno
jbe
jb
xchg
fdivrs
iret
jo
je
daa
add
push
cltd
pop
shll
push
and
arpl
xor
adcb
stos
pop
sbb
pop
scas
stc
push
shrb
push
jne
pop
dec
mov
incl
mov
fdivrl
std
sub
sarl
add
push
scas
xchg
jecxz
mov
popa
cltd
push
mov
jg
fldenv
aas
jo
scas
add
push
jbe
sub
cmp
mov
pop
int3
mov
pop
cs
mov
mov
xor
adc
dec
pop
movsb
mov
pop
rsm
addl
push
jns
lods
xchg
xchg
pushf
cmp
fwait
push
popf
pushf
push
dec
cmp
loope
xor
mov
rorl
push
pop
hlt
mov
cmp
dec
lret
or
cmc
pop
cmp
aaa
cli
pop
mov
push
cmc
loope
sbb
loopne
inc
xlat
push
les
and
pop
int
out
jno
push
xchg
imul
rcrl
aad
fsubrl
push
es
add
pop
dec
test
scas
scas
jb
sbb
adc
fwait
or
xlat
push
xchg
cmp
je
xchg
stos
jl
add
fnstenv
popa
sahf
insb
push
mov
cmp
cld
movb
rclb
out
mov
ja
hlt
rcll
addr16
scas
mov
fnstenv
inc
mov
int
scas
cwtl
pop
sbbl
out
fistpl
pop
les
scas
movsb
push
or
jno
stos
sbb
push
pop
movsb
sbb
pop
inc
sbb
in
cmp
test
jp
loope
sbb
cli
push
cwtl
and
jge
in
pop
or
shll
sbb
test
sbb
xor
push
xchg
mov
mov
test
xor
dec
inc
sbb
mov
mov
inc
mov
aam
lods
les
mov
push
add
pop
sub
popa
mov
cli
xchg
enter
mov
dec
sbb
mov
stos
add
and
fs
nop
pop
cmc
dec
add
mov
mov
mov
xor
add
mov
cwtl
scas
call
fldlg2
test
inc
dec
cwtl
pop
adc
jbe
dec
xor
nop
adc
mov
cmp
pop
adc
jne
les
fcomps
fidivs
mov
pop
fldt
outsb
ficoml
or
aam
mov
outsl
inc
jmp
fnstcw
stc
test
jl
mov
jmp
in
dec
add
mov
dec
pop
cwtl
insb
negl
fadd
insb
popf
pop
hlt
subl
mov
jge
lcall
fs
push
stos
pop
dec
mov
into
pop
jecxz
sbb
and
icebp
mov
push
lret
sub
ffree
out
sti
fs
sahf
xor
cmp
mov
push
aaa
stos
fmuls
ret
inc
movsl
mov
sbb
push
aaa
sub
push
data16
loope
mov
jb
stos
dec
insb
loop
dec
push
inc
sti
scas
sbb
dec
rorl
push
jl
pop
scas
lahf
sbb
rcrl
push
mov
loop
xor
jo
mov
pop
aas
sbb
orb
cmp
mov
mov
fwait
push
and
int
mov
jne
dec
add
cmp
mov
outsb
mov
jb
js
lea
fsubrs
mov
lahf
fidivrl
push
mov
pop
lods
clc
mov
ja
mov
sahf
or
sahf
popa
push
test
arpl
and
fsubl
fisttpll
dec
cmp
push
mov
imul
orb
xchg
jbe
pop
or
add
imul
daa
cmp
push
fs
xor
ja
adc
enter
jae
and
cmovle
fisubl
xchg
ret
fidivl
fwait
jl
fistpl
mov
inc
shl
adc
xchg
dec
mov
rdpmc
insl
das
fwait
sahf
xor
popf
xor
mov
inc
jb
push
inc
bound
add
xchg
pop
push
xchg
rolb
pop
les
push
xchg
scas
outsb
inc
gs
hlt
outsb
popa
xchg
jae
icebp
mov
dec
fwait
dec
ds
notl
sbb
inc
bound
test
jecxz
in
insb
jne
xchg
add
test
push
mov
jecxz
bound
repnz
push
jbe
jno
jo
mov
aas
or
pop
ret
xchg
rep
sub
cltd
daa
adc
lods
scas
aaa
bound
push
xchg
mov
mov
js
cli
jns
jl
jle
ficompl
inc
adc
jb
add
or
es
xchg
xor
mov
or
xchg
push
push
loope
pop
xchg
xchg
pop
jo
rorb
xchg
scas
mov
adc
xchg
popl
push
or
call
pop
cwtl
xor
mov
pop
js
pop
jo
adc
lods
cmpl
js
inc
pop
lea
xchg
filds
mov
fsubs
dec
lods
pop
lea
xchg
push
mov
adc
jge
dec
sub
ret
scas
ja
sub
bound
push
pop
arpl
pop
loope
pop
sbb
xchg
andl
jmp
faddl
or
sahf
or
or
fimull
cmpsl
mov
dec
jg
int3
push
sbb
testb
mov
outsb
les
mov
addr16
adc
sbb
sbb
push
incb
sbb
mov
xchg
dec
jnp
pop
movhps
ss
dec
push
dec
cltd
inc
push
lods
cmp
jne
jae
mov
das
sbb
mov
fsts
movl
inc
gs
pop
jle
pushf
repnz
mov
pop
xor
adc
push
push
sbb
adc
cltd
das
aas
xor
cmp
scas
jecxz
repnz
xchg
mov
dec
jo
das
inc
cmc
ret
xor
rcrb
and
sbb
jne
imul
lds
mov
sub
push
lret
scas
cmpb
daa
and
dec
adc
popa
fnstenv
insb
bound
xchg
mov
insb
hlt
jo
call
jb
and
jb
xchg
icebp
jae
es
pushf
insb
scas
clc
pop
sahf
in
cli
repnz
cmp
pop
and
sub
adc
cmp
adc
rcrl
fisttpl
sbb
les
xchg
pop
cwtl
les
addr16
sti
dec
outsl
push
or
pop
adc
adc
cmp
popf
sbb
jo
xor
pop
cmc
or
lds
fimuls
pop
jle
nop
and
push
and
enter
adcb
jle
mov
movsl
add
repnz
adc
scas
insl
rol
xor
mov
cmp
jne
cmpsl
dec
cmp
sub
jb
out
pushf
sarl
les
cltd
insb
mov
addr16
into
inc
jmp
adc
mov
add
or
or
loope
fidivl
fmuls
xchg
inc
dec
pop
pop
lds
mov
stos
call
and
daa
bound
cmpsb
pop
outsb
cmp
out
mov
pop
les
shll
push
pop
xchg
cli
cld
ret
es
sub
out
pop
clc
jp
cmp
jae
imull
clc
loop
je
mov
dec
cmpsl
rolb
in
xchg
fs
xor
mov
fwait
pop
mov
xchg
int3
xchg
sbb
fs
xchg
xorb
push
fstpl
jb
scas
push
xor
loopne
dec
jle
push
dec
push
mov
popl
rclb
cltd
dec
out
xlat
scas
into
iret
sbb
dec
or
test
daa
les
call
mov
popa
movsl
pop
int3
pop
lds
sysret
es
ja
cmp
mov
arpl
mov
es
and
or
cmp
jmp
inc
push
xor
fdiv
sbb
in
repnz
sub
cltd
lock
mov
pusha
sub
xchg
and
in
mov
mov
push
mov
iret
cmp
inc
mov
lret
sub
jo
loope
in
jle
fcomi
cmp
movsl
cmpsb
aaa
clc
iret
je
or
xor
jp
jne
shlb
test
mov
lods
jo
dec
sbb
movsb
imul
icebp
fs
and
mov
cmp
repnz
xchg
or
sbb
sbb
rol
sbb
sub
pop
inc
pop
scas
cmp
pop
adc
fsub
insb
repz
mov
inc
int3
adc
sbb
push
dec
jmp
outsb
cs
insl
pop
in
mov
lds
cmpsl
aaa
rcll
cld
mov
xor
or
ja
xor
and
lods
pop
pop
lds
mov
mov
adc
int
inc
pop
push
out
mov
push
mov
int3
aam
movsl
cmp
nop
xchg
nop
push
jmp
xchg
iret
jno
inc
adc
push
stos
jne
inc
dec
mov
movsb
popf
int
inc
inc
pop
mov
mov
jl
and
mov
mov
xchg
xor
add
mov
shrl
lea
or
imul
icebp
jg
push
push
xor
in
add
cmp
cltd
pop
icebp
rolb
push
aaa
in
and
fistpl
dec
jne
xor
dec
fs
loopne
cld
aas
in
adc
and
pop
stos
jo
sbb
sub
int
sub
pop
ds
pushf
arpl
jns
mov
scas
sbb
hlt
shr
cmp
aad
sub
sti
jno
mov
pop
addl
and
nop
jmp
pop
mov
jl
orl
pop
outsl
sahf
dec
nop
jo
cmp
cmp
push
inc
jb
dec
in
cmp
cmpsb
rcrb
cmpsl
mov
nop
orl
sbb
and
cmp
icebp
pop
add
sbb
fstpl
fcmovb
notb
pop
leave
je
mov
pop
xor
fistl
dec
and
mov
mov
add
mov
xchg
dec
mov
jo
clc
lods
mov
lahf
notb
sbbl
movl
imul
roll
mov
xor
mov
notb
cmp
ljmp
in
aad
sub
out
xchg
nop
mov
xor
xor
pushf
xor
mov
and
pop
ljmp
mov
loopne
fildl
cmpsb
aad
cmpsl
addr16
fmul
orb
test
subl
int
sub
icebp
test
xor
mov
aad
std
mov
dec
push
push
cltd
out
xor
dec
ljmp
add
loope
jg
pop
push
xchg
and
mov
pop
push
xchg
data16
add
xchg
rorb
sbb
aaa
addr16
incb
cwtl
int
lea
and
inc
mov
pop
sub
adc
arpl
inc
jl
jb
cmp
lcall
pop
sbb
fdivs
scas
stos
mov
xchg
js
shl
mov
or
or
gs
inc
leave
jb
fs
lods
or
int
int3
lock
sub
repnz
jl
inc
inc
ja
adc
lret
stc
mov
sbbb
xor
adc
inc
test
lahf
ds
xor
inc
js
dec
sub
cmp
mov
lock
sti
lds
repnz
mov
push
pop
lret
js
lods
adcl
mov
dec
pop
insb
pop
xchg
mov
and
lea
dec
lret
sbb
cmp
jo
pop
movsb
cwtl
inc
fprem1
dec
leave
push
dec
adc
push
mov
in
fsubs
stos
js
xchg
mov
xchg
xchg
xlat
lea
dec
cwtl
push
pop
in
jl
mov
lahf
push
jp
mov
fidivrl
jae
stos
ror
pop
jae
jo
or
xchg
scas
dec
push
into
int3
sbb
cmp
sub
out
mov
xor
aam
cmpsl
sub
mov
pusha
mov
push
mov
into
adc
clc
jne
adc
es
or
icebp
xchg
movsl
cmpsb
push
out
rol
les
mov
stos
xchg
movsl
lods
mov
cmpsb
popf
cmpsb
mov
push
jne
lods
popf
sub
out
ret
shlb
pop
daa
xor
xor
mov
mov
xor
adc
ret
dec
cmc
sbb
movsb
lret
mov
mov
iret
inc
push
inc
mov
shrb
xor
cmpsb
mov
add
cltd
mov
mov
jno
bound
dec
lock
les
fwait
lds
test
nop
dec
inc
xchg
push
rorl
fistpl
dec
sub
adc
cmp
fs
and
or
or
inc
adc
out
jg
shrb
pop
jnp
lcall
xchg
rcr
out
jnp
mov
cld
popf
mov
add
jnp
stos
sbb
xor
mov
scas
jbe
xor
icebp
and
or
xor
xchg
hlt
lds
pop
mov
fisttps
inc
les
pop
add
loope
xor
jecxz
fadds
pusha
fcmovne
pop
and
sarl
mov
nopl
ret
test
and
cld
mov
pop
int
cmpsl
lds
sub
popa
xor
stos
lret
cmpsb
pusha
lcall
popa
popf
pop
cmp
xor
push
mov
dec
fs
mov
push
enter
mov
xor
xchg
popa
jae
or
mov
inc
adc
jg
inc
xchg
pop
jns
mov
dec
dec
outsb
add
outsl
mov
cmp
mov
feni(8087
inc
ss
scas
or
add
fwait
movsb
dec
int3
stos
repz
xor
in
lock
push
leave
mov
sbb
test
mov
cli
daa
cmp
nop
es
jno
push
fucomp
test
dec
pop
fdivs
cmp
pop
cmp
mov
xchg
mov
xchg
idiv
jb
cmp
stc
pop
fsubs
mov
fstp
andb
add
hlt
cmpl
jb
push
scas
sub
mov
js
cs
mov
ds
lods
jne
fidivl
loope
dec
mov
stos
jae
and
push
pop
lcall
sbb
push
mov
push
jo
jb
push
scas
bound
mov
or
mov
pop
push
jne
cmp
loope
pop
pop
lock
push
rcrb
or
xchg
pushf
jle
or
andb
fs
push
pushw
into
mov
fs
mov
lret
scas
or
fs
mov
xor
mov
in
int3
and
jg
fwait
cmp
lods
xor
push
in
es
sub
aam
int
sbb
cs
push
aas
fmuls
and
or
insb
xchg
mov
ss
inc
clc
in
xchg
jecxz
cltd
test
sub
adc
into
dec
jnp
cmpsl
jg
stos
fs
jo
fdiv
cmpsb
sub
stos
test
push
insb
xor
add
push
push
jg
dec
xchg
arpl
push
and
test
shlb
and
loope
mov
pop
xor
es
and
cmp
push
jo
and
movsb
aam
xchg
push
jb
out
arpl
push
dec
mov
shlb
mov
test
xchg
dec
bound
jno
dec
xchg
out
xchg
xor
xchg
and
test
fsts
arpl
xchg
mov
aam
frstor
js
adc
or
jae
pop
andb
mov
cmc
rolb
mov
cld
loopne
rorl
cmpsl
push
push
popa
lds
push
fistpl
inc
mov
mov
in
cld
xor
lcall
xchg
and
sahf
ret
addb
loope
stos
js
orl
iret
iret
inc
ljmp
cli
jnp
std
movsl
sub
xor
cmpsb
leave
insb
insb
pop
sub
xor
das
aad
dec
in
jo
out
scas
sbb
push
mov
mov
sbb
and
cmp
bound
dec
loope
cmp
pop
test
mov
and
sbb
or
addb
xchg
and
sbb
js
lods
je
subb
sbb
gs
bound
sarl
lea
out
jnp
imul
jl
loopne
pop
jle
adc
mov
aad
int
xchg
inc
mov
push
push
movsb
outsb
in
jle
or
out
frstor
dec
xchg
xchg
xchg
mov
jo
pop
loopne
ss
adc
mov
cmp
mov
je
mov
lret
mov
adc
push
and
xchg
or
push
sti
lods
rclb
xchg
mov
push
les
rcrl
push
xor
mov
and
mov
pop
je
inc
sub
or
push
fistl
cltd
mov
add
lret
mov
jno
fisubl
jg
inc
mov
enter
mov
gs
les
add
je
cmp
and
jbe
jb
popf
mov
mov
outsl
imull
mov
xchg
add
push
cmp
mov
push
or
rcll
cmp
mov
jl
test
cmp
and
cmp
or
arpl
dec
xchg
fisttpll
movsl
add
lahf
call
sahf
pop
cmp
dec
repz
je
fsubs
popa
xchg
insb
fwait
lret
jo
jae
pop
in
fs
xlat
lret
sbb
outsl
and
inc
push
shll
jo
sbb
call
and
adc
cli
pushf
fucomi
or
cmp
dec
add
xor
aas
xchg
mov
fcomi
shr
mov
mov
pop
fdivl
inc
out
les
xor
pop
mov
aaa
push
xchg
cmp
les
cmp
dec
lods
les
sar
push
pop
jb
jbe
lds
in
fcmovbe
xor
dec
mov
test
lcall
dec
aad
mov
jae
xchg
cmp
fidivrl
mov
push
imul
mov
dec
mov
hlt
push
push
xorb
fdiv
xlat
stos
stc
sbb
fs
jno
xchg
in
test
mov
fsts
es
mov
push
pop
pop
scas
dec
sbb
leave
adc
test
fwait
or
mov
mov
cwtl
loope
pop
stos
hlt
or
fs
cmp
xchg
add
out
xchg
movb
icebp
mov
dec
clc
pop
in
pop
enter
jne
data16
xchg
pushf
cld
addr16
cltd
mov
mov
ss
fwait
push
mov
movsb
pop
mov
fwait
adcl
pop
test
je
and
dec
sub
movsb
xor
lcall
push
daa
xor
sbb
adc
cltd
push
mov
js
in
test
lret
popf
jo
test
sahf
js
cmpsl
icebp
call
out
mov
mov
lahf
mov
movsb
push
inc
fstps
inc
int
add
hlt
xchg
xor
or
popa
jbe
outsl
fiadds
push
mov
mov
adc
sub
push
int
inc
inc
xchg
cmp
mov
dec
add
les
movsb
ror
lcall
push
adc
inc
adc
sub
clc
pop
stc
in
shrl
fwait
andb
imul
clc
aas
sub
jne
pop
je
ret
es
rcrb
insb
into
mov
addr16
mov
addb
xor
jbe
dec
jae
mov
repnz
cmp
leave
xchg
jmp
inc
jecxz
das
leave
int
popa
push
and
push
or
jl
int3
ja
mov
add
pop
push
fidivl
sbb
fmul
add
xor
jnp
cltd
dec
das
cwtl
rorb
xchg
das
hlt
mov
or
pop
mov
mov
sti
pop
xchg
imul
push
lret
jb
fdivrs
je
mov
stos
fldt
loopne
mov
inc
aam
sbb
jmp
sbb
mov
jg
test
xchg
jnp
push
pop
andl
movsl
icebp
mov
ret
xchg
adc
arpl
push
xchg
fsubrp
rcr
cmpl
lahf
xchg
add
jae
pop
adc
jl
xor
pop
add
xchg
push
lret
mov
mov
std
movsl
repz
ret
adc
cmpsl
push
fstl
sbb
shl
outsb
xor
mov
shrb
je
and
iretw
cmp
in
cmp
add
in
movsb
test
lahf
jp
pop
out
jno,pn
lock
lock
or
add
add
dec
stos
lea
push
xchg
mov
push
cmc
cli
lds
sbb
stos
pop
cld
aaa
stc
icebp
fsubrs
inc
pop
mov
jbe
xchg
ror
pushf
fs
pop
push
push
ret
xchg
in
mov
sbb
cmpsl
les
inc
and
leave
push
testl
jo
xor
adc
push
test
out
xor
loopne
adc
adc
gs
pop
dec
add
popf
sbb
movsl
dec
sbb
fldenv
xchg
aam
call
loopne
xchg
nop
add
fldln2
lea
jge
stc
jb
arpl
icebp
loope
aam
and
dec
sbb
mov
push
je
out
insb
jb
xchg
push
in
xor
lock
aad
repnz
call
dec
scas
out
std
scas
clc
imul
cmpsb
loopne
in
add
icebp
pushf
xchg
or
and
fnstcw
pop
cmp
in
fdivrl
or
add
mov
out
cmp
jne
pop
add
aad
mov
xor
movb
in
adc
leave
ret
cld
sti
xorb
imul
dec
stc
aam
push
dec
in
mov
jo
add
add
jae
into
insb
pop
fcoms
sbb
cltd
fistl
mov
cli
add
outsb
push
cwtl
stos
inc
ds
push
fisubs
mov
loopne
xor
or
test
push
loop
sub
in
loop
pop
out
sub
inc
lcall
sub
adc
inc
mov
data16
sbb
lcall
sub
push
push
pop
mov
mov
scas
or
mov
stc
add
mov
gs
addr16
fcoml
insl
xchg
sbb
popa
cmp
test
fisttpl
in
sbb
jnp
repnz
mov
lea
enter
add
jo
mov
imul
push
pop
jne
add
data16
inc
je
pop
loop
add
inc
test
jo
and
pop
xchg
popa
ss
jb
push
jp
xchg
data16
cmpsl
xchg
insl
mov
sete
jle
inc
xchg
lock
leave
jbe
data16
pushf
jbe
sbb
hlt
cmp
xchg
cmp
pop
push
les
out
dec
movsl
arpl
cwtl
pop
insl
popa
cmp
mov
adc
xchg
jae
loopne
mov
mov
gs
mov
cmp
movsb
cmc
xor
jo
or
inc
adc
pop
push
shrb
mov
inc
push
add
mov
xor
xchg
pop
mov
scas
and
popa
sub
sub
sbb
shll
push
add
adc
mov
mov
ret
je
mull
insl
dec
dec
popa
in
sarl
jno
dec
sub
leave
fs
and
xchg
push
in
hlt
andl
sub
call
je
les
xchg
fcmovne
iret
push
xor
cltd
dec
jl
faddl
loop
mov
mov
call
les
mov
adc
lock
adc
mov
imul
pop
sub
mov
mov
in
decl
cmp
sti
cmpsb
dec
jne
in
imul
cld
cli
fcoms
lods
add
adc
dec
jno
add
push
push
pop
or
repnz
add
pop
and
push
add
xlat
jns
daa
imul
or
call
xchg
lret
xor
mov
mov
jae
sahf
jmp
lahf
pop
cmp
jmp
bound
jne
test
jge
and
clc
mov
dec
rcr
int3
mov
popf
dec
push
fsin
dec
mov
xchg
jg
mov
repnz
cmp
cmp
addr16
outsb
psubusw
mov
scas
push
mov
mov
pop
mov
aaa
iret
sub
jge
or
testb
cltd
sti
pop
mov
stos
test
aad
movsb
loope
stos
xor
push
lahf
cmp
dec
or
cltd
jno
rcrb
dec
mov
xlat
and
pop
cmp
aad
jno
cmc
dec
fmuls
ss
push
aad
mov
cmp
dec
jle
movsb
adc
popa
sahf
hlt
mov
enter
push
lods
dec
pop
fwait
push
sub
push
stos
xchg
ljmp
push
sbb
mov
lcall
data16
sub
dec
js
in
mov
lret
lahf
mov
push
and
popa
pushf
pop
dec
mov
adcb
dec
xor
dec
sbb
dec
xchg
mov
or
xchg
add
jecxz
insb
divb
mov
je
sarb
adc
mov
pop
push
pop
enter
out
sub
push
or
or
int3
push
jo
sbb
inc
imul
je
add
jle
and
fldl2e
jnp
xchg
js
aas
fidivs
and
int
repz
jp
dec
mov
jecxz
cld
push
and
hlt
imul
fidivl
push
xchg
lds
push
int
jne
sub
jo
jge
dec
outsb
fcmovnu
aad
insl
hlt
and
pop
divl
inc
leave
mov
jo
fs
dec
je
jae
stos
andb
frstor
add
jl
xor
enter
enter
insb
test
in
xor
push
push
cmp
sbb
pop
xor
push
aam
popa
stc
gs
out
cmp
call
dec
out
or
sbb
call
aam
cmpsl
loope
push
mov
sub
fneni(8087
sub
idivb
js
push
sub
sbb
enter
mov
fwait
jo
xor
add
in
gs
inc
and
ret
dec
roll
or
push
xor
add
mov
ret
insb
pop
sbbl
pop
mov
adc
sbb
xlat
cmpsb
imul
fucom
fnstenv
adc
jo
add
xchg
jno
bound
int3
arpl
int3
add
sbb
mov
cwtl
pop
xchg
mov
inc
popa
push
xor
or
bound
mov
pop
and
popa
pusha
adcb
insb
int
imul
or
xor
shrb
sarb
mov
sub
nop
mov
ja
cmpsl
sub
aad
in
cmp
mov
add
in
shll
es
movsb
inc
jo
je
mov
xchg
dec
imul
or
jo
test
addl
mov
mov
xorb
test
push
pop
mov
jb
movsl
popa
pusha
fimull
push
sbbl
cmp
cmp
xor
mov
mov
fistpl
pop
sbb
mov
mov
jo
cmp
je
mov
nop
hlt
jb
mov
adc
mov
fwait
or
jns
je,pt
jmp
into
rcrl
int
mov
mov
jp
jae
jp
not
into
jne
inc
inc
mov
xchg
es
dec
mov
and
push
aam
xchg
pop
lret
sub
enter
mov
mov
adc
movsb
test
or
aad
cmp
pop
popa
jae
sub
pop
jecxz
test
pop
jo
call
xchg
cmp
jl
ljmp
dec
jecxz
xorl
fldenv
mov
in
pop
push
loopne
push
fldenv
les
fadds
bound
jb
push
add
inc
scas
dec
ja
and
es
loop
jbe
xor
mov
call
sbb
and
xchg
into
rcll
pop
inc
fwait
pop
jge
dec
pusha
add
lds
jo
shrb
rclb
cmp
jg
scas
lcall
dec
dec
in
aaa
test
dec
push
inc
mov
sbb
ret
es
push
loop
cltd
addb
pop
shrb
shll
inc
iret
cmpsb
fidivrl
cmp
std
scas
xchg
add
jg
mov
jle
jle
jp
montmul
cmpsb
xchg
xchg
xchg
scas
stos
dec
mov
ja
xor
pop
in
pop
les
and
adc
and
push
scas
adc
orb
clc
push
repz
jne
pop
insb
jl
dec
mov
out
adc
cmpsl
mov
sbb
imul
dec
bound
push
push
sbb
xchg
lret
adc
loope
outsl
pop
pop
add
mov
ljmp
and
add
mov
pop
testl
mov
pop
sub
int3
mov
add
jge
test
fildl
cmp
adc
ja
push
ljmp
jp
test
scas
fmul
int
xor
test
push
cmp
cli
loope
and
xor
pop
cld
mov
mov
push
pop
fneni(8087
les
pushf
pop
xor
mov
inc
ss
fdivrs
js
cmpl
pusha
push
les
or
mov
dec
mov
outsl
popa
les
cmp
lret
les
enter
push
fdivr
cmpsl
fwait
dec
pop
imul
cli
xchg
mov
mov
orb
mov
roll
and
andb
push
push
bound
loope
icebp
shll
xchg
rcl
fsts
je
cwtl
fstpt
sbb
out
loope
mov
subl
hlt
out
sub
pop
inc
fs
or
lahf
sbb
fcompl
dec
mov
mov
cwtl
add
sbb
pop
scas
int
pop
test
push
dec
loopne
push
and
in
mov
mov
inc
sbb
inc
lret
cmpsl
mov
test
in
jle
adc
nop
jo
int3
pop
push
jb
out
xchg
push
mov
inc
pop
lret
loopne
pop
add
subl
bound
pop
jno
std
and
and
pop
pop
push
dec
popa
mov
je
mov
add
movsl
loop
mov
add
fs
mov
xor
add
clc
mov
adc
inc
rcll
cmpb
fisubrl
mov
inc
sub
je
xchg
push
pop
mov
stos
enter
pop
inc
or
and
lcall
movsb
negl
movsl
mov
mov
cwtl
mov
add
xchg
jmp
int3
jns
mov
les
in
pop
repnz
scas
and
subb
xchg
mov
mov
das
xchg
in
pop
out
aam
popa
outsb
or
arpl
nop
dec
sbb
add
adc
push
inc
orl
sub
outsb
jo
ja
lods
jae
mov
std
cmpsl
pop
inc
mov
pop
jne
scas
xor
dec
push
stos
jne
notl
scas
pop
mov
loope
fwait
mov
out
les
cmpsl
push
repnz
jmp
popf
popa
lds
cmp
xlat
push
test
pop
in
negl
sub
nop
adc
insl
jl
std
iret
arpl
mov
outsl
imul
inc
cmp
scas
fwait
cli
loop
in
cmp
fs
jmp
rcr
push
sbb
lcall
sbb
xchg
je
mov
push
loopne
mov
mulb
cmpsb
leave
fld
jl
pushf
cwtl
mov
out
dec
xchg
push
cli
roll
inc
fsubl
aam
jne
xchg
cltd
loop
jnp
jae
push
subb
add
or
jmp
stos
dec
mov
iret
push
cmp
add
fst
xchg
les
xchg
hlt
mov
pop
je
jno
scas
xchg
mov
movsb
sarb
out
dec
cltd
push
test
xchg
pop
hlt
enter
xchg
jne
or
inc
mov
movb
xchg
add
jg
arpl
dec
jl
aam
pop
rolb
lods
sarb
cmc
pop
mov
faddl
mov
test
cmp
add
mov
xchg
jno
insb
push
mov
lds
jecxz
cmp
lods
jo
inc
sbb
dec
pushf
cmpsb
jl
xorl
add
rcr
push
lahf
imul
sub
jge
xchg
dec
fcomp
out
add
insb
xor
lds
mov
sub
dec
loopne
fs
sub
loopne
fstps
pop
inc
xchg
in
scas
fwait
mov
in
dec
pop
addl
and
aad
pusha
scas
mov
int3
ja
xor
arpl
lcall
and
fwait
pop
movsl
fnstsw
and
dec
cmp
mov
addr16
pushf
push
jno
call
faddl
pushf
pushf
mov
cmp
iret
ss
jg
cmp
and
mov
cmc
stos
imul
repnz
fidivrs
arpl
sub
scas
inc
dec
jecxz
test
or
les
sub
dec
cmp
mulb
ljmp
xorl
pop
and
mov
loop
fcomps
mov
pop
aaa
xlat
pop
sarl
pop
lds
cmp
cmp
mov
xor
mov
clc
push
pop
lock
adc
push
pop
push
cmp
stos
lcall
pop
cmp
hlt
incl
and
mov
jo
add
jp
xlat
into
fwait
test
int
test
push
xchg
mov
mov
mov
cmp
std
cmc
stos
movsl
lahf
inc
fsts
cmp
out
lds
arpl
mov
aam
fidivrl
mov
push
fldcw
sarl
cmp
pop
negl
sub
or
push
xchg
dec
fcmovu
out
pop
jg
mull
xchg
jns
mov
fwait
sahf
mov
or
inc
movlhps
mov
out
add
cmp
pop
mov
or
push
fwait
mov
jnp
insl
shll
outsb
fcoms
pop
or
out
push
fstl
mov
daa
mov
cmp
jmp
aaa
inc
sub
cmpsl
dec
jg
mov
xor
cmc
xor
add
bound
dec
daa
sti
cmpsb
out
push
fyl2xp1
test
inc
xchg
push
sub
rcll
jno
divb
je
mov
push
push
push
pop
test
mov
popa
loopne
les
cmp
inc
daa
movsb
or
sub
inc
aad
rcll
sti
adc
int
sub
orl
mov
loopne
notl
add
lods
fcoms
cmp
jge
push
int
xor
hlt
inc
xchg
je
fimuls
and
mov
sbb
pop
loopne
fidivrs
shlb
shlb
les
mov
or
insl
push
bound
ja
cmpsb
rcrl
mov
sub
push
test
aas
pop
or
or
add
fidivs
pop
aam
stc
mov
dec
jp
pop
ja
dec
sbb
ljmp
dec
add
mov
or
jmp
inc
xorl
sbb
push
std
lcall
test
pop
sbb
xchg
cmp
std
imul
push
adc
mov
mov
add
mov
test
mov
push
les
mov
nop
sahf
hlt
out
jl
arpl
push
cmpsb
pop
or
hlt
movsl
movsl
xchg
insl
call
fs
in
pop
push
mov
aam
into
fs
lods
flds
xchg
sub
xchg
pop
fsubr
les
int3
in
loopne
mov
adc
test
sti
ds
pop
cwtl
pop
mov
mov
bt
jns
rcll
sahf
xor
adc
les
outsl
scas
ficompl
lock
cmpb
pop
push
test
fcompl
and
push
divl
les
jo
outsl
dec
shlb
rcll
push
int
cmp
add
or
fcoms
cmp
inc
out
fwait
lret
clc
jle
fs
aam
pop
jne
aad
jmp
ffree
mov
pop
scas
xchg
enter
insb
ror
dec
mov
mov
jo
enter
pushf
and
pop
dec
sub
repz
fs
cmp
ljmp
je
cltd
ljmp
fs
dec
ret
fstps
mov
mov
cwtl
cmp
adc
xchg
adc
pushfw
push
pop
mov
in
inc
imul
mov
int3
and
jbe
xchg
mov
or
pop
shll
pushf
sub
cmp
pop
pop
fistl
cmp
dec
and
lret
shlb
shll
cmp
fbstp
mov
dec
out
xchg
ja
flds
insb
scas
les
cld
je
pop
stc
nop
jp
adc
in
cmpsb
outsl
and
xchg
lds
push
mov
sub
out
xlat
into
jo
lods
lahf
dec
pop
outsl
ja
jg
mov
push
lock
lods
dec
popa
jb
call
sahf
lds
fistl
mov
cwtl
mov
lods
cmp
sbb
cmp
mov
sub
imul
push
mov
sub
dec
mov
push
add
in
pop
sub
cmc
das
mov
xchg
push
fadd
xor
mov
int3
scas
jne
jns
arpl
xorb
fcoml
mov
xchg
cmp
insb
jne
test
mov
inc
lds
aas
dec
int
mov
cmp
mov
in
outsb
mov
pop
icebp
pushf
xchg
in
sti
push
xchg
imul
dec
mov
scas
fdivrl
js
leave
lret
jne
mov
push
arpl
jno
call
fnsave
cmp
call
sahf
cmovns
dec
movsb
popf
aam
inc
call
fdivs
test
mov
xchg
jl
adc
rcll
push
data16
lock
out
dec
inc
xor
sub
loop
pop
cmpsl
stc
enter
and
inc
pop
movsb
mov
insb
pop
inc
pop
and
push
je
push
pop
js
ret
sbb
jl
add
scas
ja
sti
shrl
and
sub
js
push
int3
mov
add
call
inc
dec
mov
sbb
jp
les
add
in
adc
sarb
cmpsl
jno
push
cmpsb
and
dec
fcompl
insb
push
insl
cmc
pop
fcomip
jb
fldlg2
cmp
add
xor
add
sahf
sarl
pop
jl
dec
add
stos
into
outsb
insl
shrb
and
clc
int3
fwait
or
loop
add
xchg
mov
inc
test
in
aam
dec
add
xchg
mov
mov
mov
push
push
fldl
daa
imul
std
call
jle
sahf
ficoml
into
push
mov
mov
xchg
xchg
push
daa
cmpsl
jno
lret
xchg
xchg
pop
cmpl
das
scas
mov
xorb
dec
fsubs
or
inc
jno
xor
mov
inc
test
jge
pushf
cmp
xchg
pop
cmp
mov
add
inc
sbbb
cmp
sahf
js
or
or
pop
lcall
mov
insl
arpl
xor
into
sahf
lahf
add
pushl
mov
push
loopne
jecxz
push
mov
sbb
lock
pop
sub
in
mov
outsb
sysret
push
sahf
mov
mov
cmp
inc
fldt
fwait
mov
inc
sub
jg
js
push
test
jae
movsl
mov
fldl
aaa
and
bound
xchg
pop
fistl
mov
mov
adc
test
ret
fistl
in
out
and
cmp
sbb
fldl
push
test
addr16
or
and
push
mov
and
fnstcw
les
jb
rorb
pop
in
gs
jne
xchg
dec
mov
or
sti
das
rorl
test
lods
dec
jmp
sbb
inc
les
cmpsb
aas
mov
or
inc
xor
add
mov
and
andl
xchg
mov
mov
stos
push
mov
scas
nop
inc
push
test
adc
imul
mov
int3
pop
ja
push
scas
xchg
sarb
dec
inc
in
cmp
aas
jg
rolb
stos
add
mov
movsl
cmc
dec
sahf
mov
lods
lret
mull
inc
stos
cld
cmp
inc
jae
frstor
push
popa
pop
pop
rcr
cmp
outsb
cmpl
mov
cmp
mov
and
cmpsb
push
pop
rorl
insb
push
arpl
iret
push
xchg
in
daa
fdivrl
ja
cmp
pop
jbe
fsubrl
das
mov
xor
sub
cmp
push
decl
pop
into
or
pop
adc
pop
dec
xor
and
sbb
pop
cmpb
mov
mov
adc
xchg
push
aam
cli
arpl
ljmp
int
adc
les
sub
pop
lds
mov
sbb
push
or
repz
lcall
adc
ljmp
fcompl
stos
sbb
ret
in
les
or
in
call
outsb
je
xchg
mov
ret
mov
jb
pop
fstl
pushw
pop
lods
xchg
scas
pop
xor
lret
fwait
or
mov
imul
sbb
cmp
imul
ja
xlat
rcr
or
mov
cmp
and
fcmovb
pop
les
mov
add
popa
aam
scas
into
mov
cwtl
insl
xchg
cmc
iret
or
jmp
cmp
clc
scas
popa
cmp
addr16
fs
xor
sub
clc
push
xchg
leave
inc
test
shll
popf
push
mov
movsl
dec
xchg
xor
push
rcll
mov
cld
mov
pop
ret
bound
xchg
dec
loopne
pop
int3
cwtl
scas
int3
sub
data16
cwtl
clc
data16
mov
cwtl
mov
notl
movsb
mov
stos
jns
mov
pop
lods
ja
aad
cmpsl
and
bound
sahf
pop
dec
jb
dec
fdiv
js
fsub
jns
test
scas
aam
loopew
cmc
dec
mov
sbb
out
push
mov
lds
sti
inc
in
pusha
popa
mov
jmp
adc
push
xchg
push
push
insb
adcb
lcall
lds
jge
popa
or
mov
stc
push
mov
cmp
dec
loope
push
pop
fst
adc
iret
adc
jno
insl
stos
xchg
mov
mov
movsl
inc
fcomi
adc
pop
dec
jne
push
sbb
inc
xor
adc
mov
aaa
shlb
dec
mov
lahf
test
cmpb
mov
je
arpl
fstl
push
test
push
pop
movl
incl
lahf
lcall
push
pop
cli
mov
std
cmp
sti
cld
mov
stos
adc
ret
scas
lock
daa
lock
add
dec
dec
addl
cmp
aad
add
mov
test
fsubrl
bound
adc
in
jg
insb
inc
mov
clc
mov
xchg
mov
mov
jl
jo
loope
dec
int3
stos
leave
push
push
mov
outsb
je
push
ror
sarb
arpl
fsubl
pop
push
pop
push
stos
ja
movsb
xchg
cli
cmpsb
sbb
jge
mov
jle
inc
stos
fwait
cmpsl
push
and
hlt
jo
pop
jae
mov
fcoms
inc
and
sbb
adc
jg
loope
sahf
mov
into
adc
push
divb
mov
sahf
lahf
or
inc
mov
xor
aaa
mov
inc
jl
pop
inc
and
in
push
push
mov
test
lds
add
aam
mov
fadds
mov
sbb
outsl
jg
jo
inc
fistps
xchg
push
xor
pop
les
sub
stc
pop
push
push
daa
es
mov
subb
pop
outsb
inc
jb
push
aad
or
pop
mov
fdiv
sub
out
ret
js
lret
sahf
lock
fcomps
jg
icebp
mov
pop
pop
jno
xor
lcall
sub
cmp
lds
pop
addr16
mov
out
jecxz
cmp
jno
sub
inc
or
nop
int3
sub
sub
mov
push
shll
push
xchg
movsb
out
xor
and
repnz
es
dec
in
iret
out
scas
jmp
xchg
nop
add
cmp
xchg
lods
pop
movsl
dec
jo
decb
lods
hlt
jo
mov
inc
jbe
in
in
jmp
mov
push
in
and
lods
pop
cmp
les
ljmp
dec
ror
mov
inc
scas
jecxz
sbb
xor
lret
scas
into
fwait
scas
xor
mov
cli
test
xor
mov
addr16
xchg
adcl
lret
cwtl
sbb
jae
into
stos
pop
xchg
aaa
push
push
xchg
scas
fs
shll
out
push
or
out
mov
sub
push
cmpsb
nop
cmp
cs
cmp
cmp
imul
loope
push
scas
lods
adc
push
cs
jbe
jne
outsb
push
lret
test
bound
jge
cmp
pop
cmpsl
add
insb
xor
cmp
popa
ret
mov
xchg
mov
ljmp
repz
fsts
scas
dec
or
daa
inc
mov
rol
sub
daa
xchg
cmp
adc
fmul
jbe
fwait
cmpsb
jmp
sbb
adc
lret
add
leave
xchg
pop
jmp
iret
loopne
push
shlb
fsts
push
jno
push
jmp
aas
push
pop
out
pop
rcrl
pop
fisttps
push
xor
mov
iret
xchg
movsb
lcall
stc
xor
cwtl
test
xchg
repz
sub
jne
xchg
dec
pop
add
popa
mov
adc
dec
jl
cld
lret
popa
int3
aad
mov
sbb
movsb
pop
jae
jg
pop
int3
gs
cmpsl
cmp
scas
fstpt
aad
push
mov
fcoml
adc
dec
jne
jmpw
sbb
arpl
push
mov
adc
test
test
out
cmpsl
adc
jno
jnp
cmp
out
xor
ds
pop
inc
jb
jno
or
sbb
sub
mov
mov
mov
pop
jb
ljmp
popa
jns
dec
in
or
or
fidivl
xor
cmp
dec
cmc
sti
sbb
test
test
xchg
push
addr16
add
mov
callw
sbb
sahf
out
or
and
mov
push
or
xchg
and
roll
push
andl
leave
ja
mov
sub
and
mov
fimull
bound
sub
fidivrl
xor
je
sbb
ret
jg
mov
xor
mov
cli
xchg
jno
rcrb
pop
adc
push
js
or
cmpsb
xchg
cwtl
mov
int
aam
shll
fwait
cmp
pop
jmp
add
sbb
xchg
push
repnz
jecxz
fcomip
cli
cwtl
mov
cmp
or
fdivl
mov
addr16
lahf
stos
add
test
imul
das
test
dec
pop
int3
es
and
popf
xchg
pop
mov
inc
or
add
inc
enter
jnp,pn
push
mov
cmp
movsb
wbinvd
jge
and
jo
cmp
shlb
xchg
idivb
lcall
pop
or
cltd
fisttpl
cmp
test
push
pushf
fsubrl
pop
gs
es
inc
or
push
bound
xchg
lds
mov
push
pop
das
mov
add
fdivrs
sub
jb
xor
dec
jmp
xor
in
outsl
adc
add
ja
les
adc
je
in
mov
in
or
inc
jp
stos
pop
inc
sahf
sti
in
jle
mov
and
sahf
clc
dec
rorl
orl
jp
roll
inc
xchg
aam
loop
into
fistpll
fwait
repz
bound
lods
jecxz
mov
outsb
dec
shrb
stos
pop
les
je
push
fldcw
add
cmc
ret
push
in
jle
cmp
and
push
lock
lahf
fs
sub
mull
jecxz
sbb
lahf
pop
or
cmp
int3
int3
es
xlat
dec
xor
loop
xchg
add
sub
xor
out
mov
jecxz
lea
mov
mov
mov
fstps
ret
push
insb
cmp
dec
mov
mov
mov
cli
mov
mov
lcall
stc
dec
sub
das
inc
incb
hlt
jle
int3
std
movsl
dec
adc
cmp
movsl
das
inc
lahf
in
cmpsl
jmp
addr16
sbb
xchg
lods
dec
cmp
lods
lods
stos
mov
push
and
jb
mov
and
mov
in
push
cmc
lods
mov
aam
xorl
data16
xchg
sub
or
add
or
adc
add
into
xlat
aad
arpl
add
or
adcl
push
shll
sbb
jb
fidivl
inc
jnp
fidivs
mov
xchg
imull
faddl
add
lods
sub
fistl
push
lcall
jne
lahf
sbbl
jns
pushl
movsl
dec
sbb
jecxz
xor
push
sbb
test
xchg
icebp
outsb
in
inc
push
mov
xlat
ja
mov
jns
push
push
sub
lock
daa
data16
lods
test
js
imul
jecxz
sbb
aad
dec
push
sti
add
popa
xor
fcoms
out
jno
fwait
dec
sbb
enter
adc
lahf
xor
cmp
add
shl
lock
push
js
jmp
mov
sbb
sbb
ficoml
frstor
cmpsl
in
jmp
lds
jo
loope
clc
and
xchg
call
inc
push
add
fs
nop
xchg
and
jae
mov
cmp
dec
stos
cwtl
testb
cmp
les
xchg
int3
push
mov
dec
fcmovnb
test
mov
sbb
inc
cmp
jl
pop
pop
lahf
hlt
das
mov
mov
xchg
sub
cmp
xchg
adcl
into
int3
movsb
orb
adc
and
pop
or
cmpb
je
out
inc
xor
clc
rorb
or
fistpl
out
add
inc
sbb
js
cmp
addr16
and
icebp
jecxz
add
or
or
ss
cmp
dec
js
xchg
bnd
pop
mov
lods
mov
rorl
bound
out
jno
push
scas
jecxz
inc
pop
dec
mov
imul
mov
dec
sub
fnstenv
add
loopne
cmp
insb
inc
cli
xchg
push
rcrb
dec
repz
and
inc
je
loopne
fstpt
ficoml
shlb
jbe
or
test
or
ss
andl
jnp
or
cwtl
pop
mov
ja
push
and
test
dec
dec
fldl
mov
cmp
pop
push
xorl
push
stc
imul
mov
sbb
jo
mov
ss
jno
sub
pop
and
jne
scas
fldenv
fstpl
mov
jbe
pop
in
sub
mov
xchg
cmpsb
jo
ficoml
les
cmp
loope
cmp
lods
push
push
fwait
adc
mov
cmp
pushf
icebp
mov
mov
xor
loopne
sbb
fnstenv
push
aas
sbb
repz
outsb
sub
mov
das
mov
pxor
push
xor
cmpsl
sbb
sbbb
sbb
cltd
push
fs
pop
in
outsl
mov
sbb
or
je
fisubl
aad
sbbb
mov
lods
dec
mov
jbe
in
xor
push
call
out
jbe
xchg
lahf
loope
cltd
jns
test
js
pop
pop
cwtl
xor
xor
and
adc
cwtl
js
fidivrs
jo
pop
bound
aam
mov
in
or
adc
jle
xor
jmp
jne
or
jge
jo
loopne
jecxz
jle
pop
mov
jmp
pop
lods
ret
jle
mov
or
leave
popf
sbb
cmp
ret
and
mov
rorl
stos
ret
pusha
call
lret
je
push
push
ja
inc
dec
pop
jne
mov
add
out
push
add
dec
xchg
xchg
and
mov
adc
cmp
fdivl
rol
into
sub
inc
les
outsl
sub
mov
mov
push
push
push
aad
pop
int
popf
call
sbb
inc
sbb
push
icebp
dec
cmpsb
mov
arpl
out
bound
lds
ret
sub
and
lcall
test
clc
clc
sub
dec
push
dec
in
sub
jbe
scas
cltd
mov
shll
loop
jne
cmp
mov
fst
bound
or
mov
mov
es
fnstenv
jmp
mov
repnz
enter
cmp
pop
adc
or
inc
loopne
sahf
pop
mov
sbb
jne
sbb
ret
lret
fwait
mov
jg
jne
out
cld
jl
cmpsl
insb
int
subb
mov
adc
pop
add
push
pop
js
push
out
xchg
out
or
pop
pop
add
lds
cmp
lret
test
and
bound
addr16
fcomp
icebp
test
mov
scas
inc
jne
cmp
jnp
imul
inc
dec
dec
fsts
les
push
and
or
or
cmpsb
mov
inc
bnd
xchg
cwtl
insb
aad
imul
std
mov
sbb
mov
aam
or
sub
stos
xlat
into
xchg
xchg
rclb
push
scas
pop
jge
xor
push
stc
aam
cltd
repz
cmp
pop
cli
push
hlt
mov
mov
or
inc
pop
pop
mov
adc
cmp
popf
mov
pop
aam
fsts
cmp
ljmp
cmp
pop
sbb
pop
jbe
div
push
shrb
mov
mov
cmpsb
mov
and
jg
push
adc
fs
jg
je
test
icebp
imul
xlat
lds
xchg
js
test
mov
movb
sub
int3
filds
scas
bound
gs
xor
lret
xor
adc
addr16
sub
xlat
movsl
movsl
outsl
or
pop
pop
lods
shll
jbe
pop
jge
pop
cltd
lret
cld
je
pop
mov
dec
mov
mov
popa
sub
mov
dec
les
cs
outsl
mov
mov
cmp
loope
fisttps
decb
sbb
push
fchs
je
inc
loop
cltd
gs
and
fsubl
push
ja
cwtl
bound
test
ss
aaa
dec
stos
cmpsl
popf
clc
pop
in
into
sbb
xchg
lods
push
adc
insb
inc
rep
arpl
xchg
stc
mov
popa
push
sahf
push
push
push
mov
jge
sbb
jnp
icebp
enter
sbb
adc
stos
test
fs
mov
popa
loope
cmp
add
jnp
lcall
cmpsb
rclb
adc
xchg
add
add
pushf
ret
gs
lds
push
psrld
cmp
into
pusha
fcmovbe
and
pop
sahf
test
jno
fstl
mov
scas
cmpsl
inc
aas
cmp
mov
aas
mov
push
jbe
outsb
push
cmpsb
ljmp
inc
mov
nop
std
ljmp
sbb
cmp
imul
negb
jp
dec
mov
ja
scas
sti
jnp
dec
arpl
outsl
and
adc
xchg
push
sub
mov
cmp
push
jnp
arpl
int3
push
mov
stos
jns
cmpsl
test
jg
xchg
cmpsl
sbb
repz
mov
jg
das
sbb
stc
in
inc
or
mov
inc
push
push
mov
cmp
jl
testl
push
lods
mov
les
stos
mov
int
mov
movsb
rcrb
cmpsb
cwtl
cmpsl
les
in
push
xchg
cltd
test
test
xchg
mov
push
jmp
sub
insb
rolb
je
mov
scas
push
jecxz
pop
inc
pop
xchg
push
mov
repnz
xor
sub
popa
adc
push
dec
mov
sub
rolb
fistl
cmp
mov
repnz
jmp
cmpsl
mov
popa
push
xor
insb
fmuls
sti
aam
lods
mov
or
test
adc
jle
repnz
pop
push
orl
nop
in
add
push
or
pop
mov
inc
push
dec
sbb
fstpt
lds
sbb
movsl
or
gs
push
popf
jo
dec
shll
xor
sti
cmp
pop
icebp
mov
ret
jecxz
mov
lods
push
fsubs
pop
mov
and
movsb
dec
in
cmpsl
fisttpll
out
adc
pop
pop
cmp
int
call
popa
out
jb
in
push
insl
stos
rolb
imul
fs
in
or
inc
outsb
fiadds
mov
lds
and
push
mov
in
adc
shlb
sub
fcoms
fcmove
repz
add
mov
test
xchg
mov
or
dec
xor
data16
addr16
ficomps
inc
enter
bound
pop
loop
hlt
movsl
mull
fidivl
adc
xor
jbe
test
lahf
sub
cmp
fcmovnb
std
and
mov
bound
sub
xor
gs
bound
fcom
add
or
jmp
adc
loop
lret
add
cmp
inc
mov
out
sbb
xor
insb
mov
xchg
loop
push
push
mov
mov
popa
lcall
xor
inc
cmpsl
cmp
dec
ja
fwait
test
dec
shrb
xchg
mov
xchg
dec
lds
shlb
lods
add
jb
push
cmp
jl
xchg
mov
cwtl
pop
push
mov
bound
cs
sbb
lcall
mov
pop
popa
shll
cmp
inc
lock
dec
stos
das
rcll
std
shll
ror
and
pop
push
dec
inc
stos
or
fisttpll
or
adc
mov
pop
jo
mov
fldt
push
shlb
adc
push
addb
adc
adcb
add
adc
pop
cmp
adc
rcrb
sub
jb
mov
push
mov
flds
int
decb
xchg
jne
ss
outsb
xchg
sbb
xchg
cmc
aas
push
rclb
clc
jbe
fiadds
rorb
shrb
mov
imul
lcall
cmpsl
mov
xor
pop
les
xlat
out
in
and
or
mov
cld
jae
sahf
sarb
orl
pop
mov
sub
pop
pop
jb
dec
jno
ja
xor
dec
stos
jg
gs
mov
jno
jo
cli
jl
ficomps
push
push
cltd
aaa
jl
sub
stc
movsb
fs
jecxz
je
dec
ret
mov
push
jl
cmpsl
and
aas
xor
subb
inc
xor
and
rcrl
inc
jg
sub
sbb
out
ret
int3
dec
fstpl
sub
int
xlat
or
cmpsl
iret
stc
mov
out
pop
cmpsl
dec
lea
and
in
arpl
and
int3
mov
mov
aam
adc
ret
not
andb
aas
lcall
xchg
pop
fdivp
xor
mov
shr
insb
stos
lds
mov
dec
mull
cmpsl
adc
mov
inc
fnstsw
clc
js
fwait
fs
mov
test
leave
mov
dec
aam
pushl
sti
cmp
scas
or
xchg
adc
adc
repnz
mov
shlb
lds
cltd
push
stos
fiaddl
push
bound
mov
mov
cmp
dec
call
rcr
and
jl
inc
mov
into
jg
jmp
roll
push
jo
shrb
mov
mov
jno
xchg
fstpt
pop
hlt
pop
ror
cwtl
lock
aaa
insb
popf
inc
dec
out
pop
int
push
jns
int
mov
clc
add
movsl
mov
cmc
pop
xor
scas
bound
adc
clc
pop
adcb
jo
push
orb
adc
leave
movsb
sbb
mov
mov
dec
or
push
adc
les
sub
ja
sbb
in
into
negb
sub
dec
enter
jb
xchg
in
sub
xor
push
jb
mov
ljmp
jns
jns
lock
iret
je
adc
push
xchg
dec
push
mov
ret
pop
jo
xchg
bound
cwtl
test
cwtl
cld
arpl
xchg
cmp
xor
ljmp
cltd
daa
call
add
test
jg
xchg
fildll
push
xchg
lods
mov
popa
into
fnstcw
jg
pop
push
mov
mov
push
pop
fcmovu
mov
out
fdivrl
hlt
lock
cld
mov
sahf
mov
and
mov
pushf
cmp
add
mov
scas
push
in
jns
sub
jne
push
sbb
fwait
cwtl
mov
subl
je
ss
pop
jle
mov
jne
xor
imul
jo
lock
cltd
mov
lds
fsub
sub
xchg
in
int
fs
xchg
scas
inc
flds
or
push
int3
into
mov
pop
mov
and
jg
shr
addr16
sahf
push
or
test
inc
mov
insl
arpl
enter
lcall
push
fwait
pop
or
int3
pop
mov
cmp
outsb
xchg
pusha
leave
xor
fldcw
ljmp
push
xchg
insl
ret
mov
clc
in
fcmovnb
mov
ds
jg
push
lods
fwait
xchg
insb
in
shrb
mov
push
pop
testb
xchg
enter
mov
pop
leave
das
mov
mov
les
add
test
xor
mov
in
mov
mov
sbb
cltd
enter
xchg
ret
cmp
insl
fsin
bound
call
adc
lcall
push
pop
lcall
les
dec
fsubl
fstps
out
jno
lret
and
insl
push
fstpl
sub
xor
cmp
mov
mov
mov
insb
jg
mov
out
lahf
xchg
into
mov
adc
mov
insl
call
sbb
pop
repnz
inc
cltd
cmpsl
lret
scas
inc
call
or
cwtl
sub
dec
fldcw
inc
cmp
pushf
jb
cmc
mov
pop
movsl
push
aas
mov
loope
mov
mov
cmp
push
jg
sub
ja
jo
repz
out
cmp
add
add
out
mov
arpl
dec
fsubrs
daa
dec
addb
mov
cltd
jecxz
sbb
or
fnstsw
xor
xchg
push
les
je
stos
xlat
mov
out
mov
js
adc
add
xor
sub
dec
loop
lcall
pop
pop
push
rorl
mov
inc
test
popf
in
push
sub
sbb
add
test
dec
fstps
cmp
add
mov
rcrl
cs
fstl
mov
lock
aad
aas
sub
stos
clc
ja
sub
cltd
daa
xlat
mov
mov
lock
mov
pop
xlat
mov
adc
add
loop
or
pop
imul
xor
push
mov
pop
mov
and
sbbl
imul
fldenv
pop
sbb
fcmovb
fs
pop
xchg
dec
shlb
mov
pop
inc
out
pop
push
jb
mov
insb
push
es
test
or
lock
sahf
jae
ja
sahf
ja
stos
inc
xlat
mov
cmc
push
inc
push
repnz
and
je
outsl
in
adc
push
pop
andl
mov
int3
xor
mov
cmp
push
dec
pop
xor
les
mov
imul
pop
push
xchg
enter
rcl
movsb
or
icebp
fcmovne
lahf
in
or
nop
sub
cmp
pushf
push
cmp
xor
scas
jb
iret
test
and
push
pop
jmp
xchg
add
mov
inc
loop
insb
insb
out
mov
mov
inc
js
xchg
arpl
mov
fmull
cwtl
pop
jo
es
xchg
push
imul
inc
sahf
mov
movsb
lret
xchg
lods
les
and
aam
pop
movsb
jns
pop
xor
mov
mov
in
cli
mov
add
setnp
push
adcb
sub
push
stos
xchg
push
or
out
fwait
in
js
push
push
mov
lock
stos
rolb
push
push
in
mov
xor
cmp
enter
push
cltd
fldcw
cmp
arpl
xchg
nop
sub
jne
push
aaa
in
mov
jne
sbb
bound
pop
push
outsl
xchg
std
mov
iret
fcmove
rcll
inc
jo
mov
cmpsb
scas
push
mov
hlt
scas
xchg
sahf
sti
cmpsb
or
jo
push
sub
hlt
ja
pop
push
mov
icebp
jne
ss
loop
loope
pop
nop
push
subb
xlat
or
xchg
out
rclb
pop
aam
shrl
cmpsb
xchg
fs
jg
aaa
outsl
mov
outsb
loop
push
xor
cmpsl
shll
push
cmpl
das
fnstcw
push
adc
in
xchg
loop
iret
bound
fs
les
cwtl
mov
ror
enter
xchg
insb
inc
mov
es
mov
jg
mov
test
das
push
mov
cmp
and
shll
cmp
xchg
clc
int3
push
push
inc
dec
push
cmpsb
popa
push
pop
fldcw
out
xor
fnstsw
dec
jp
arpl
gs
fs
jp
xchg
pop
add
xor
inc
and
outsb
jbe
jo
repz
fidivl
popa
jnp
incl
xor
pop
push
xchg
push
push
mov
pop
ljmp
xor
or
sbb
xchg
and
imul
fs
ret
xchg
insb
cmpsb
dec
and
and
arpl
in
push
fmull
popa
icebp
les
adcb
xor
sub
fucom
xor
jb
xor
mov
cmpsl
pop
sub
out
rcr
push
fildl
fiaddl
rcrb
push
dec
lds
ds
lahf
xchg
sbb
repz
gs
xor
pop
push
enter
les
push
sbbb
jg
js
insb
lds
push
dec
data16
out
xchg
xor
mov
and
dec
cmp
es
push
movsl
cs
add
sbb
cmp
sbb
cmp
data16
xchg
pushf
mov
insb
jo
in
outsb
xchg
andb
cmpl
lret
adc
cmp
mov
out
lds
cmp
dec
inc
xchg
or
shlb
cwtl
cmp
push
ss
lds
out
sahf
into
fwait
subb
cmpsl
add
push
mov
test
mov
fstpl
dec
mov
hlt
pop
xchg
fimuls
sbb
stos
mov
inc
dec
push
out
mov
push
mov
dec
rcr
and
jmp
fcmovnb
cwtl
stos
and
pop
fsubl
fcoml
int
xor
outsl
inc
mov
pop
popa
insb
loopne
inc
mov
lcall
inc
inc
cmpsb
cmpsl
sahf
and
sbb
rcr
mov
dec
pop
add
mov
or
jecxz
cmp
adc
in
mov
loopne
sbb
jne
clc
jo
gs
int
sbb
cmp
aam
cmp
xchg
dec
enter
push
subl
into
sub
hlt
shrb
pop
popf
push
cmp
sbb
aaa
movsl
lcall
cmpsl
lods
push
scas
jae
outsb
or
fnsave
subb
outsb
fs
push
jnp
rorl
jp
je
sbb
daa
mov
and
lods
cmp
and
mov
clc
lcall
ret
in
addr16
dec
jg
cmp
push
cmp
jg
inc
mov
sbb
data16
fldcw
sti
je
push
jmp
mov
lds
call
data16
inc
aam
popa
cmp
ret
mov
push
cmpsl
repnz
out
insl
loopne
popa
aam
in
adc
sahf
int
xorb
fadds
jns
inc
mov
xor
out
push
shl
fsubrs
roll
popa
pop
aas
cmpb
popf
dec
shrl
dec
jp
fs
jns
jle
cmp
pusha
js
arpl
dec
cmp
rcrb
mov
jae
out
jmp
aam
aaa
fnstsw
xor
mov
repz
das
or
aam
xor
xchg
jp
mov
pushf
pop
xchg
test
scas
ret
push
jle
rcrl
mov
mov
jb
cmp
gs
test
mov
mov
push
pop
cwtl
gs
mov
push
iret
push
cwtl
cmp
sbb
lahf
test
ret
pop
mov
lea
mov
cmp
dec
xchg
lahf
repz
es
lret
lahf
fstl
mov
out
test
aam
cmp
and
ret
lcall
jno
push
rcrl
lock
inc
outsb
iret
aad
pop
inc
add
sbb
push
aam
jmp
or
sti
fs
mov
or
fsub
mov
sub
cld
mov
into
jle
dec
push
pop
les
and
adc
fwait
cmpsl
mov
rorb
push
sub
in
mov
jbe
mov
mov
loop
in
xchg
test
cmp
psadbw
xor
inc
mov
nop
fst
dec
push
in
aaa
dec
adc
mov
cld
test
idivl
lds
test
and
or
adc
faddp
jo
sbb
repz
ja
xor
jns
adc
cs
add
mov
out
fiaddl
mov
fstl
mov
inc
inc
shr
into
inc
test
movsb
cmp
jae
out
add
shr
dec
int3
stos
jp
in
xor
repz
aam
adc
and
cmp
ja
push
iret
or
nop
cmp
pusha
jecxz
mov
clc
push
add
shrl
fiadds
inc
stos
popa
xlat
add
pop
cmpsb
enter
fadd
cmp
xchg
add
dec
lahf
push
into
aam
mov
pop
pop
movsl
mov
fwait
cmp
inc
and
int
in
add
push
dec
pop
les
lret
xchg
pop
leave
add
sub
imul
xchg
mov
push
loopne
in
dec
lret
mov
inc
jae
cmp
push
addr16
into
fwait
sbb
adc
cmp
sbb
fwait
in
pop
iret
xchg
popa
lcall
insl
mov
mov
js
pop
push
pop
icebp
sbb
fst
int
jmp
sub
or
int
addps
push
push
mov
and
rcll
sbb
lock
mov
adc
inc
sbb
fistpl
scas
mov
sbb
pop
inc
fidivrs
cld
xchg
xchg
push
jnp
lods
cs
inc
and
lods
push
pop
fsubrp
xorb
test
insb
jl
pop
jp
out
into
aad
fcoml
test
leave
xchg
cmpb
adc
cs
jp
jnp
mov
jp
pop
es
inc
flds
fiaddl
test
je
fildl
cltd
sub
lret
and
movsl
cmp
bound
movsb
insl
fs
inc
mov
mov
arpl
pop
mov
in
cmp
fwait
jo
sarb
cmp
andl
ficomps
lret
or
push
sbb
push
js
and
sahf
jge
cmp
cmp
aad
xchg
cmc
push
into
inc
fucom
push
fiaddl
push
sub
bound
push
xchg
pop
mov
fdivrs
lcall
sbb
lahf
xchg
fmull
sub
fxch
add
adc
pop
pop
test
push
xchg
outsl
jmp
mov
cmpsl
lods
es
lret
adc
jl
sahf
loope
cld
mov
cltd
call
cmp
mov
jge
mov
insl
mov
es
lret
gs
pop
dec
mov
jl
add
andb
std
or
mov
mov
dec
pop
adc
push
ffree
and
aam
bound
jo
les
cmpsl
lcall
push
addl
loope
mov
mov
out
xorb
shl
mov
sahf
inc
pushf
pop
je
jnp
cmpsl
mov
mov
cmp
jp
pop
stc
fdivl
jo
les
fwait
push
cli
mull
push
and
sbb
lock
push
xor
pop
rorl
movsl
push
popa
or
push
or
bound
sub
jne
jne
mov
lods
inc
sub
popf
xchg
popa
xchg
addr16
sub
mov
and
dec
adc
jmp
popa
lcall
inc
and
jne
lods
hlt
adc
sub
jns
sarl
push
pusha
out
mov
into
fwait
sbb
cmp
fwait
and
nop
lret
ljmp
pop
adc
mov
lds
ja
xor
ret
add
mov
stc
lcall
xchg
in
mov
in
and
les
xor
bound
jno
inc
jle
mov
mov
scas
js
mov
jns
xor
shlb
idivl
or
fdivrs
mov
or
loop
and
mov
cmpsw
push
fcomps
xchg
inc
sbb
jne
pop
xchg
mov
inc
jmp
push
jmp
fnstenv
addr16
mov
fwait
adc
sub
sbbb
pop
enter
inc
xchg
jmp
popa
jo
aam
xchg
cmp
sub
pushf
out
std
bound
sti
mov
dec
sub
popa
rolb
movsb
mov
out
jo
out
repnz
das
inc
add
or
cmp
dec
icebp
rcrb
and
dec
lcall
mov
jo
inc
mov
jne
jno
fnstenv
mov
lcall
xchg
cmpsl
cmpsb
hlt
jg
push
stos
pop
outsb
scas
fildl
push
jecxz
test
push
stos
xorl
mov
push
fs
dec
sbb
ret
ficoml
cmp
cmpsb
shlb
cli
mov
lea
dec
lods
mov
mov
test
inc
mov
rcrb
cwtl
popa
mov
jl
pop
arpl
iret
rcr
mov
pop
fistpll
rclb
push
inc
mov
leave
jno
scas
dec
aad
jo
addb
shrb
jmp
jb
mov
loope
jle
mov
push
xchg
je
lock
xchg
movsb
push
adc
cmp
loop
mov
daa
in
pop
cmpsb
and
fldenv
inc
sbb
adc
int
sbb
shl
jns
dec
lret
clc
mov
bound
and
es
mov
loop
popa
fistl
and
add
mov
mov
out
sub
cltd
adc
subl
cmpsl
cmp
pop
dec
mov
push
cmp
loop
lea
pushl
loopne
rcll
mov
leave
stos
out
lock
loope
push
repz
cwtl
rclb
cmpb
push
movsb
xor
popl
js
outsb
add
mov
xchg
mov
shlb
imul
sbb
cwtl
lcall
repz
setg
push
fmull
xor
dec
sub
iret
arpl
inc
les
hlt
mov
sbb
adc
lea
jl
xor
jb
push
fsub
imul
push
jb
pop
cmp
or
sub
sahf
fs
in
rcrl
pop
pop
cmp
pop
fs
subb
bound
mov
or
mov
mov
setnp
decb
cmp
hlt
pop
and
test
sahf
lods
and
js
std
xchg
mov
xchg
in
ljmp
mov
in
sbb
arpl
test
push
xchg
pop
iret
fwait
push
inc
out
push
fstpl
imul
push
notb
cld
cmp
add
pop
enter
ja
gs
mov
mov
fnstenv
and
jne
and
jnp
in
xor
inc
sti
and
call
cmp
scas
jae
scas
mov
sub
or
fs
fdiv
push
insl
jne
lock
lods
jmp
dec
inc
add
pop
int3
in
mov
xchg
mov
enter
sub
in
cmp
pop
divl
lods
mov
mov
scas
cld
mov
dec
aas
jp
dec
mov
mov
sahf
xor
icebp
push
push
xchg
jge
mov
dec
inc
pop
mov
cltd
int
bound
clc
cmp
xor
nop
int
sbb
or
push
inc
push
unpcklps
fmul
arpl
popa
or
pop
mov
adc
mov
lock
jmp
jae
mov
cs
mov
dec
aad
dec
rcrb
jne
sahf
xstore-rng
cmpsl
lds
jne
int
cmp
mov
adc
leave
cmp
mov
dec
inc
sub
aam
push
or
adc
pop
es
cmc
sar
mov
movsl
add
jge
daa
jb
pop
pop
or
mov
add
fnstenv
pop
je
fdivl
push
test
stos
push
sub
dec
jmp
or
sub
fists
xchg
jae
imul
loop
and
pop
jb
bound
orl
mov
out
gs
xor
push
jg
jnp
rolb
js
ss
bound
sub
in
insb
fadd
push
repz
out
int
loope
sub
push
das
adc
loope
mov
push
sahf
ds
xor
mov
cmpsl
dec
jnp
in
cmp
jg
xchg
jg
hlt
mov
sbb
js
mov
mov
dec
xlat
pop
pop
xor
fstpl
clc
roll
jle
nop
stc
xchg
ljmp
shlb
lods
cmpb
sub
xchg
cmp
xchg
icebp
in
pop
fstps
dec
mov
mov
xchg
ret
xor
xchg
sahf
insb
mov
sbb
xchg
imul
lds
dec
mov
cmp
loopne
divl
push
jne
inc
and
iret
or
mov
jne
dec
adc
out
insl
dec
adc
addr16
jl
cli
and
add
jae
and
cmp
push
cmp
fwait
cmpsl
cmp
fwait
lret
push
stos
push
sub
popf
xchg
int
and
or
sub
lods
ja
or
cmp
js
lock
mov
xchg
cmp
cmc
lods
push
les
pusha
les
pop
pop
wrmsr
mov
bound
push
add
adc
rcrl
mov
cmp
scas
push
lcall
out
lahf
insb
mov
fwait
sti
sub
lahf
outsb
test
cmc
imul
push
ret
mov
cwtl
and
mov
jns
cmp
push
lret
les
jne
cltd
mov
mov
outsb
inc
sub
imul
lds
add
data16
fistpll
fstp
inc
cmpsl
inc
add
fcoml
loop
xchg
es
int3
scas
push
loope
jnp
jle
rcr
add
int
lret
fdivr
gs
mov
mov
test
add
sub
clc
xchg
xchg
adc
push
dec
pop
mov
push
test
and
ret
sub
fsubrs
sub
and
cmc
cmp
xor
insb
arpl
cltd
sbb
pop
sbb
idivb
outsl
movsl
arpl
jns
clc
mov
mov
dec
push
mov
cmovp
arpl
pushf
mov
jns
cmp
es
adc
and
cmp
in
ret
or
push
push
shll
push
es
cwtl
mov
mov
cli
arpl
mov
stos
xchg
cmp
cmpsb
fildl
outsb
push
push
mov
cmpsb
pop
pop
fs
adc
sbb
adc
or
lods
jg
lret
into
pop
icebp
lock
es
cmp
shll
loopne
jo
add
mov
je
addr16
hlt
jg
dec
js
dec
sti
mov
ds
mov
iret
stc
iret
dec
lret
mov
push
lcall
loopne
mov
les
push
cmc
int
jnp,pt
cmp
inc
lods
jecxz
in
outsb
and
add
test
xchg
dec
into
sub
jno
fstpt
push
cmp
ja
pop
movsl
movsb
sub
add
and
cld
jmp
mov
xor
mov
push
ret
sbb
jb
push
cmp
stos
je
mov
sahf
mov
adc
inc
lcall
notl
ja
test
in
lret
jmp
aad
fcompl
push
lret
stc
repz
adc
ss
repz
fdivrs
in
xor
int3
mov
pop
or
push
add
fs
mov
jecxz
scas
popf
or
add
mov
sub
sti
test
xor
push
mov
cs
push
mov
mov
xor
xchg
jo
ja
inc
fmul
loop
add
ds
daa
pop
mov
int
inc
jmp
inc
mov
outsb
loopne
cltd
adc
mov
fstl
push
les
mov
das
dec
je
mov
orb
xchg
add
popf
ljmp
xlat
mov
cmc
rclb
dec
push
lds
shll
jo
ret
push
cmp
sarb
test
ds
and
lret
fistl
push
xor
fnstcw
sbb
and
jno
cmp
fcoml
fs
push
imul
xor
loopne
pop
jne
cmp
xor
fwait
dec
call
cli
cmp
ss
aas
pop
jecxz
jb
mov
sbb
add
ss
xor
cmpsl
loope
sbb
mov
loop
andl
jo
data16
sbb
mov
or
and
push
mov
adc
push
imul
jmp
pop
aam
xchg
xor
or
jmp
cmp
and
adc
inc
pop
dec
fninit
shrb
cmpsl
sbb
and
sub
cwtl
pop
cmp
bound
lds
mov
stos
jnp
push
adc
fldcw
xchg
mov
dec
bound
pop
cmp
jg
pop
in
or
xchg
mov
in
adc
and
lods
bound
mov
or
jecxz
xorb
aad
and
pop
fisttpl
insl
sahf
mov
mov
mov
shll
jge
jb
lcall
adcb
aam
pop
push
add
icebp
mov
gs
pusha
data16
movsl
dec
add
dec
add
mov
pop
into
lsl
outsb
aas
adc
fbld
lods
mov
inc
mov
mov
mov
dec
jg
push
inc
and
loopne
bound
sarb
push
and
cmpsl
stos
push
or
rclb
push
pop
cmp
or
shlb
or
fwait
jo
fstpt
mov
pusha
sub
or
loope
fsts
jbe
mov
xlat
xchg
aad
pop
into
movsb
add
pop
mov
cmpsb
mov
aad
js
dec
mov
fsts
sbb
adc
stos
xchg
incl
mov
repnz
ficompl
dec
movsl
and
lcall
jne
loop
dec
outsb
sbb
pop
adc
insb
repz
scas
mov
adc
nop
push
lcall
mov
in
cli
lock
cmp
pop
loopne
cmp
les
sbb
scas
dec
push
sbb
popa
and
mov
mov
jl
mov
mov
pop
hlt
mov
push
clc
pop
jo
mov
jge
nop
push
push
or
ret
dec
pop
adc
loope
bound
mov
into
xor
jecxz
push
sbb
movsb
inc
mov
sbb
mov
sub
push
outsb
cmpsl
mov
cld
mov
sbb
pop
lahf
xchg
pop
test
xlat
ret
or
int3
jns
mov
inc
mov
rcrb
pop
jnp
leave
mov
test
jecxz
add
mov
mov
cltd
fs
inc
inc
inc
idiv
cwtl
pop
sub
or
xchg
mov
xchg
sbb
jne
xchg
out
cmpsb
jl
xorb
jle
lcall
xchg
mov
cwtl
bound
sbb
cmp
fs
mov
arpl
pushf
in
ret
mov
mov
les
ljmp
jmp
out
popf
outsb
sbb
loopne
test
dec
into
and
pop
or
fstpl
mov
fwait
pop
xor
iret
mov
jo
cmp
inc
adc
jo
sbb
movsl
pop
clc
popa
xor
jbe
out
push
mov
xchg
mov
lret
jbe
js
lahf
fistps
mov
test
out
jno
mov
insl
je
jno
jl
inc
insb
mov
les
fsubs
jb
cmc
enter
fcmovnbe
cwtl
xchg
mov
fnstenv
out
jo
filds
xchg
cs
cwtl
mov
dec
pop
push
cmp
jno
cwtl
cmp
enter
lods
mov
mov
aad
fstpt
cmpsb
fs
mov
bound
loope
mov
pop
in
jbe
cmp
loop
pop
cmp
cmp
adc
mov
and
sbb
movsb
sub
pop
andb
aam
jl
xchg
mov
bnd
xchg
loope
js
jb
enter
mov
mov
stos
sbb
popf
mov
xor
lds
jecxz
mov
and
push
jno
xor
dec
in
cli
sbb
aad
data16
test
dec
sub
dec
lods
xorb
mov
sbbb
add
mov
hlt
aad
xchg
in
adc
push
insb
mov
pushf
das
js
mov
inc
int
adc
cli
imul
pop
ja
scas
push
fwait
inc
cmp
les
in
sbb
lock
cmp
mov
and
push
testb
rdtsc
sbb
je
aad
mov
cmp
lea
loop
insb
daa
ret
je
rolb
lods
shlb
sub
mov
cmpsb
into
mov
popf
add
cmp
jo
jbe
fs
shll
sbb
cmp
inc
insl
ds
or
pop
fcompl
sub
dec
adc
lds
andb
push
sub
add
mov
inc
pop
repnz
and
cltd
sbb
dec
into
inc
rcrb
lret
xchg
adc
mov
add
pop
pop
je
outsl
add
jo
sbb
xor
aad
pop
shrb
fsubs
orl
stos
das
xor
movsl
test
rcrb
popa
jo
jmp
mov
sti
fdivs
mov
arpl
xor
orl
pop
outsl
mov
xchg
mov
adcl
push
out
stos
cmc
add
mov
pop
repz
mov
pop
cmp
push
xor
pop
push
iret
adcl
outsb
xchg
sub
test
call
and
lds
cmpb
jmp
daa
mov
cmp
sbb
pop
out
dec
fsubr
push
packsswb
add
mov
sub
jno
mov
out
repz
ljmp
push
stc
hlt
ret
mov
xor
ss
or
daa
les
fcmovu
push
jne
mov
fwait
or
pusha
pushf
lds
sahf
insb
cmp
outsl
call
stos
cmpsl
add
aam
jbe
aas
mov
out
sub
enter
and
stos
les
sahf
cld
sub
jnp
adc
cwtl
dec
mov
popf
fsubr
ds
sbb
sbb
test
xor
cmp
loopne
push
les
test
repnz
pop
cmp
mov
push
mov
push
mov
sbb
clc
dec
sub
sub
mov
pminub
mov
push
push
dec
cmp
push
xchg
into
inc
imul
xchg
lock
sti
test
shll
push
das
dec
pop
mov
push
clc
dec
sbb
sbb
jo
sub
in
jo
arpl
repnz
push
inc
out
jge
addl
call
mov
xchg
mov
out
popf
rorl
pop
mov
push
mov
mov
and
push
push
rcl
scas
pop
movsl
lret
mov
outsl
fidivs
fwait
lahf
arpl
cmp
inc
or
push
ficoml
add
lcall
subb
jecxz
add
pcmpeqd
mov
jno
fistpl
pop
mov
pop
int3
loop
fisttps
imul
icebp
jae
or
ficompl
mov
mov
push
or
mov
sti
xor
push
test
push
lret
ret
mulb
xchg
adc
jnp
dec
aad
outsb
sbb
add
fucompp
test
andb
push
cmpsl
daa
add
add
fisubs
push
xchg
add
loope
in
rcrl
movsl
repnz
fdivrs
aad
loope
mov
mov
lcall
hlt
andl
pop
lock
in
jno
dec
push
pop
jo
push
hlt
pop
mov
bound
das
xchg
push
subb
mov
pop
fstl
ds
cltd
sub
jmp
std
fnstcw
je
mov
stos
scas
sub
pop
ficoml
xchg
jecxz
mov
sarb
cwtl
push
push
aaa
in
scas
sbbb
cmp
out
add
cmp
jno
stos
into
aam
cmp
mov
icebp
jle
jb
data16
arpl
cmp
ds
cmp
sbb
jmp
outsl
std
jo
iret
popa
imul
push
sarl
nop
les
jb
jno
sub
xor
movsl
mov
fdivr
cmp
cmpsb
jae
lahf
int
bound
pop
cmp
insb
or
push
jmp
cli
sbb
in
pop
jno
push
add
pop
mov
fisubrs
jns
add
mov
lret
cmpsb
dec
jno
cmp
jmp
lcall
add
mov
mov
xchg
cltd
mov
cmp
hlt
out
loop
stos
shlb
push
and
aam
nop
cmp
xchg
pushf
cmpsb
dec
push
aas
je
xchg
mov
pop
dec
es
mov
mov
aaa
pop
xchg
push
pop
test
out
pusha
sahf
sbb
jo
push
pop
pop
lock
fs
xchg
inc
mov
mov
jb
inc
inc
pop
cld
cmc
js
pop
iret
stc
xchg
fistpll
dec
cmp
lahf
fisubrs
enter
lods
je
push
push
repnz
sbb
dec
sbb
jge
icebp
xorb
repnz
mov
bound
mov
dec
repnz
jne
jb
pop
or
aad
add
cmp
or
push
jnp
dec
cs
loop
mov
pop
adc
or
and
ds
cli
xchg
es
sbb
divl
push
in
bound
pop
push
mov
push
cmp
mov
out
mov
cmp
cmp
mov
sbbb
rorl
ret
xor
cmp
mov
sub
add
pop
popf
lret
insb
mov
push
jge
pop
ret
pop
xorb
push
arpl
out
mov
fs
aaa
stos
dec
xchg
sarb
dec
lea
bound
mov
sub
sub
cmp
adc
adc
xor
mov
jne
push
hlt
pop
add
sbb
dec
movsb
fdiv
loopne
cmp
mov
dec
inc
cmpsl
cwtl
pop
sub
adc
dec
sbb
pop
pop
clc
pop
lcall
shl
xchg
jno
mov
cmpsl
lret
scas
inc
pop
mov
daa
pop
into
addr16
aad
cmc
loop
jns
lods
fucomi
sub
xchg
jae
rcrl
mov
je
fadd
out
fstpl
mov
imul
test
scas
nop
sbb
pushf
or
data16
into
inc
sbb
adc
mov
shlb
and
divl
adc
scas
xor
mov
xchg
jge
or
addr16
push
std
jge
add
push
frndint
popa
push
test
dec
je
push
xchg
mov
xor
mov
add
adc
mov
adc
fldl
cwtl
and
mov
into
out
dec
pop
fstl
mov
dec
mov
pop
subb
test
outsl
shl
mov
ds
negl
ss
mov
call
fiaddl
orb
push
mov
loope
scas
xor
das
aam
push
inc
subl
loopne
dec
jne
cmc
nop
dec
aad
jg
mov
ljmp
push
loope
imulb
shlb
pop
cmp
movsb
fadd
repz
jns
daa
lret
cld
jne
mov
add
loop
mov
and
jne
cmp
in
lcall
daa
mov
iret
pop
or
push
test
or
lea
fcomps
daa
cmp
rcr
xchg
push
sbbb
divl
ror
cmpsb
and
mov
push
pop
jbe
in
mov
adc
push
in
scas
outsl
cwtl
loope
mov
shll
dec
in
pop
aam
mov
mov
push
sarb
inc
sub
xorl
movl
leave
sbbb
in
inc
jno
arpl
sahf
cmc
cmpl
jge
cmp
arpl
in
or
mov
pop
out
iret
loopne
stos
mov
inc
jb
mov
push
xchg
sarl
fstpt
jg
jp
mov
cmc
bound
dec
xchg
push
rclb
adc
fildll
inc
int
fndisi(8087
sub
bound
mov
sahf
xor
aam
out
shlb
outsb
mov
jle
mov
lret
mov
incb
or
or
mov
cwtl
mov
or
jb
scas
test
insl
ret
mov
lds
cmp
dec
cmpsb
bswap
jmp
fisubl
icebp
into
sbb
inc
push
cltd
sub
aad
les
sahf
subl
fistpl
out
insb
repnz
jp
adc
cmpsb
mov
mov
jb
lahf
mov
add
cmpsb
sub
add
mov
xchg
cmp
cmp
hlt
data16
sarl
push
fldenv
jo
rcr
loopew
ret
js
movsl
or
insl
push
pop
cmovno
mov
and
je
dec
ljmp
push
aam
jbe
inc
lds
les
clc
push
adcb
cmp
je
bound
js
jmp
mov
cmc
pop
pushf
pop
iret
cmc
xor
js
lods
inc
out
in
lock
popf
adc
xchg
pop
xchg
test
mov
fst
dec
movsl
mov
sbb
push
pop
pop
or
lock
call
loop
mov
js
push
ss
int
es
test
mov
pop
insb
xchg
addr16
shlb
outsb
call
add
je
cmp
push
orb
jb
je
fcmovne
mov
push
notl
xchg
jl
push
imul
bound
mov
clc
in
sahf
daa
xor
xchg
jge
jmp
inc
xchg
mov
xor
fneni(8087
shrb
ja
sub
repz
loop
adc
jnp
inc
jns
mov
jecxz
mov
idivl
xor
std
sti
shrl
xchg
scas
clc
and
das
leave
adc
faddl
push
pop
mov
jne
xchg
lds
mov
pop
pop
popa
jbe
dec
ret
adcb
push
mov
stos
popa
bound
cmp
push
aam
push
mov
mov
imul
mov
adc
mov
jb
inc
and
xchg
xchg
bound
movsb
clc
cmp
cmp
shlb
cmp
xchg
out
icebp
loop
hlt
mov
out
imulb
push
pop
mov
mov
sti
mov
pop
jl
add
mov
std
jp
mov
jge
ficoml
xlat
add
ret
jno
jle
push
fsubs
xor
ds
out
into
insb
sarl
sahf
fdivrl
lods
daa
ja
fnsetpm(287
pop
mov
jg
daa
fdivl
cmp
mov
dec
push
jne
mov
in
mov
inc
adc
cwtl
mov
stc
call
xor
cltd
push
push
cmc
shrb
lock
stos
flds
adc
stc
pop
popa
loopne
mov
addr16
dec
push
in
aad
pop
dec
sahf
out
cmp
clc
vpsllw
hlt
sub
or
xor
notb
sbbb
dec
negb
shl
mov
int3
mov
les
movsl
shlb
adc
test
insb
lcall
nop
xchg
arpl
xchg
fwait
test
cmp
xchg
adc
loopne
lret
lcall
jecxz,pn
or
jne
shrb
push
lock
and
lahf
rsqrtps
sub
pop
sub
xor
adc
xchg
push
and
je
pop
push
or
xchg
sbb
push
add
mov
mov
mov
fs
test
scas
ds
sbb
mov
lds
js
mov
fwait
push
or
adc
les
stos
mov
xchg
decl
or
clc
xchg
in
test
inc
cmp
gs
cmpsl
sub
jbe
sub
adc
in
pushf
fidivrl
popa
out
lods
dec
ja
mov
hlt
lcall
xorb
add
mov
gs
mov
shlb
dec
or
cmp
jmp
jb
mov
test
push
fsts
pop
fnstsw
fwait
add
out
test
aas
addl
loope
cld
mov
adc
notb
popa
xchg
int
cmp
cmp
cld
pop
mull
jle,pn
jns
inc
das
pop
sub
es
ljmp
xchg
pop
sbbb
cmc
sub
pop
xchg
jmp
dec
popa
in
and
mov
fistpl
mov
mov
mov
xchg
fs
push
jb
addb
mov
cltd
cwtl
pop
je
xchg
xchg
mov
sbbb
mov
std
iret
scas
jbe
shlb
mov
cmpsb
pop
xchg
aam
enter
xchg
cmpsb
cli
inc
jns
cmp
clc
lds
in
xchg
jle
xchg
mov
lds
sar
xchg
sbb
mov
test
loopne
div
xchg
aad
jg
ss
fwait
and
sbb
cmp
push
push
adc
test
push
repnz
add
out
addr16
frstor
pop
mov
cwtl
fmull
mov
test
mov
popf
pop
and
stc
repz
subb
xchg
in
pop
gs
hlt
and
bound
neg
test
das
push
lret
pop
dec
mov
enter
mov
les
call
mov
mov
push
les
int3
xor
test
adc
and
push
loopne
mov
push
fs
adc
dec
sbb
movsb
xchg
mov
subl
nop/reserved
and
bound
jo
das
jbe
movl
ljmp
aam
imul
in
sub
and
imul
cmp
outsl
dec
inc
outsl
cmp
ds
mov
pop
adcl
popa
pop
jge
cmp
stos
out
mov
and
add
pop
mov
dec
enter
sub
loope
std
or
adc
push
add
add
jnp
rclb
scas
stos
in
movsl
xchg
ja
icebp
out
adc
jle
fstps
popf
icebp
mov
mov
cmp
xchg
and
ja
and
lea
sub
mov
popa
mov
lds
xchg
sbb
je
int3
mov
ret
out
mov
jmp
gs
jp
or
out
fimull
push
mov
in
jle
lcall
sbb
into
fwait
push
in
rcrb
imul
dec
icebp
arpl
and
pop
movsb
dec
je
add
stos
dec
cwtl
hlt
push
cmpsl
adc
jo
fwait
lret
sahf
int3
dec
rcl
shll
hlt
dec
movsl
lcall
pop
jmp
test
push
jo
mov
mov
sub
data16
pop
loopne
daa
les
ss
sar
xchg
pop
jp
jle
xor
xor
push
xor
push
inc
mov
cmp
push
pop
jbe
push
pop
fsts
xor
lock
jns
loop
xor
jl
pop
xor
int3
sbb
adc
jb
sti
in
mov
cmpsl
lods
aam
leave
cmpsl
mov
cltd
push
cld
add
adc
mov
mov
dec
out
sti
sbb
in
xor
mov
jns
jo
pop
lock
jno
push
mov
fs
sbb
cmp
ret
jnp
mov
xchg
xor
cmp
add
test
sahf
decl
xchg
or
mov
pop
push
or
jecxz
dec
test
xchg
cltd
push
int
mov
clc
cmp
or
stc
mov
aam
pop
dec
aad
popf
or
cli
mov
orl
out
cld
xor
sti
push
sub
call
dec
push
mov
dec
repz
sbb
or
ljmp
cmpl
movsl
popa
adc
das
loop
adc
out
aaa
jb
sahf
push
cli
fisubl
insb
cmp
lahf
mov
into
lret
fs
fildll
inc
and
iret
inc
out
jp
push
in
jle
xchg
mov
mov
jl
jb
jo
imul
pop
fiadds
add
in
addl
add
scas
sti
mov
into
cmp
fnstcw
into
es
shl
push
ss
jg
es
add
jge
xchg
lret
push
test
lods
nop
icebp
hlt
xor
mull
or
mov
dec
test
push
cmp
fnstsw
push
mov
jp
cmp
outsl
lahf
mov
je
fwait
xchg
xor
sbb
cmp
clc
lock
cld
xor
data16
sbb
mov
stos
push
movsl
pushf
xor
push
out
adc
cmp
cmp
xchg
fdivrs
push
mov
inc
lds
test
pop
pop
pop
filds
jle
jb
fcomps
mov
xor
stc
dec
inc
lret
jno
xor
sbb
mov
jmp
lds
push
jo
cmp
or
fstps
test
daa
dec
adcl
fidivs
push
jg
inc
popf
flds
fs
lret
in
add
xor
loope
jge
push
mull
ds
ja
mov
push
stos
dec
mov
out
clc
cmp
lds
addr16
rcll
insb
int
movsl
add
stc
push
fisttpl
fldlg2
or
jne
inc
cmc
fcompl
lods
test
imul
mov
les
xor
fwait
mov
push
mov
mov
gs
ror
imull
int3
out
dec
test
scas
xchg
cmp
push
stos
xor
push
push
or
std
in
stos
fnsave
out
rclb
cmp
jae
fsts
xchg
sbb
dec
stos
ss
and
ss
lret
repnz
inc
xchg
mov
test
jb
mov
lods
mov
jne
lcall
jge
jb
xchg
cmpsl
pushf
cwtl
es
dec
scas
scas
stos
adc
adc
xor
fwait
push
sbb
and
jo
fdivs
xchg
imul
push
cmp
mov
jl
mov
push
in
insl
pop
sahf
add
outsl
fsubrs
das
shl
fisubrs
insb
jo
pop
xor
daa
rorl
pushf
je
aas
xor
fwait
cs
fisubs
or
arpl
jne
cli
data16
mov
movsl
push
mov
adc
cmp
dec
ds
and
jecxz
jb
fmul
sbb
mov
out
cmpsb
adc
jnp
mov
js
xor
fwait
sub
popw
sub
pop
shrb
sbb
cmc
sub
loop
scas
lods
fidivl
mov
xor
cmp
aaa
add
fwait
sub
push
data16
stos
inc
pop
mov
cmp
hlt
stos
popa
pop
inc
pop
arpl
dec
inc
inc
psubd
in
rcrl
iret
push
das
pop
jae
popa
mov
icebp
nop
into
imul
cmpsb
stc
loop
out
call
xchg
xchg
jb
int3
ss
fistl
cmp
jle
insb
aas
into
sub
mov
xlat
out
pop
push
orb
cmp
sbb
push
or
sahf
dec
fmuls
cwtl
jl
adc
cwtl
gs
push
hlt
push
mov
mov
sbb
jecxz
inc
mov
sti
cmp
lahf
jnp
out
adc
repz
sbb
jns
or
testb
or
jmp
das
loop
add
adc
ret
mov
lret
lret
lret
ja
mov
call
sub
push
scas
inc
mov
in
into
aam
call
and
fmuls
jne
clc
lcall
cld
mov
push
iret
into
mov
js
scas
clc
shr
ja
mov
add
stos
xchg
enter
fsubs
push
push
stos
int
popw
sbbl
xchg
jle
int
iret
sahf
lcall
xchg
stc
and
pop
mov
or
movsl
inc
adc
mov
outsb
xchg
or
cmp
adc
mov
out
add
mov
inc
sbb
mov
js
orb
inc
out
xor
out
fisttpl
pop
clc
repnz
xor
cs
pushf
sub
jp
cltd
test
rcr
add
sub
je
or
dec
ret
push
outsb
test
mov
cltd
jnp
xchg
lods
imul
xchg
les
xor
mov
push
aam
pop
xorb
fxch
fs
add
and
je
mov
jae
clc
sbb
cmp
sub
int3
pop
add
jne
sbb
mov
push
stc
mov
test
fcmovu
xchg
xor
jl
add
les
outsb
jae
jmp
imul
loopne
mov
sub
jg
pusha
mov
subb
scas
jne
mov
js
lds
mov
stos
enter
aam
cmpb
out
enter
jo
or
mov
std
in
inc
push
not
mov
out
and
inc
aam
in
pop
stos
shr
call
push
outsl
pop
lods
cmp
mov
imul
inc
or
mov
jg
sbb
aam
cltd
xor
pusha
out
cmp
cltd
mov
jns
sub
stos
test
out
or
negl
xorb
fwait
and
push
mov
in
pushf
cwtl
cmp
scas
icebp
clc
fisubrl
jecxz
push
stos
adc
jno
fisttpll
sti
mov
push
fldt
int
cmpsl
loopne
sbb
int
adc
pop
pop
arpl
jge
xchg
push
or
add
push
add
aam
mov
mov
bound
fstpt
ja
notl
inc
out
in
int3
std
cmc
jmp
scas
push
arpl
push
fdivs
adc
aam
push
dec
xor
vpshufhw
or
jb
in
popa
jo
les
bnd
push
je
frstor
insb
idivb
js
add
dec
je
sub
sbb
lock
and
jp
mov
scas
andb
inc
push
daa
out
mov
enter
xlat
repz
sbb
popf
or
xor
mov
inc
imull
mov
dec
adc
movsl
xor
sub
dec
loope
push
imul
aam
shll
addr16
hlt
insb
les
push
sbb
push
test
adc
cmp
jne
enter
jmp
in
fxch
pop
and
aam
pushf
mov
das
sbb
sahf
shl
in
push
xor
mov
rcl
xlat
sub
fs
inc
js
jno
cltd
shll
movsl
aam
data16
pop
mov
lcall
lcall
insb
push
je
fisttpl
loop
lret
lock
sub
pop
ljmp
test
popf
mov
mov
mov
es
fdivrs
add
jl
stos
mov
mov
sub
push
aam
out
dec
push
mov
jnp
inc
adc
cs
je
mov
repnz
ja
sub
dec
stc
pop
fsubl
cmpsl
mov
dec
mov
sbb
iret
nop
cltd
add
loop
lcall
mov
aas
or
push
ljmp
fldcw
cmp
pop
and
and
pop
arpl
dec
or
lret
jl
fstl
test
int3
mov
pop
inc
mov
mov
dec
mov
mov
xchg
lret
xorb
movsl
cmp
pop
mov
cltd
leave
out
out
mov
cmp
mov
popa
mov
push
rcll
insb
cwtl
hlt
aad
mov
push
data16
cmp
lret
mov
mov
mov
cmc
movsl
aam
jo
adc
sub
push
loopne
xor
and
and
orl
aad
stos
scas
pop
pop
mov
shlb
in
test
dec
arpl
dec
and
lods
scas
adcl
lds
mov
sub
jg
lods
sbb
gs
test
lock
pop
and
dec
mov
mov
loopne
gs
sbb
stc
pop
mov
jnp
mov
int
cltd
jp
sbb
and
xorb
sub
sbb
pop
jb
mov
adc
js
or
add
js
imul
out
cmp
dec
dec
inc
in
int3
fnstsw
mov
cmp
adc
iret
push
sti
cmc
pop
push
popf
jp
fimuls
hlt
movsl
les
rcll
xchg
jae
jnp
gs
mov
mov
xchg
and
mov
stc
jl
fwait
xor
mov
pop
int
into
xchg
rorl
outsb
pop
inc
dec
das
and
push
xchg
loopne
jge
push
dec
lods
sbb
pop
stos
lods
mov
adc
push
mov
js
add
dec
lods
sbb
rclb
mov
repnz
or
add
jo
pop
adcl
sub
neg
mov
sub
xor
call
inc
lds
imul
push
push
pop
into
pop
xchg
loope
xor
jbe
pusha
lret
xor
sub
pslld
mov
pushf
mov
dec
fmuls
jge
push
mov
push
push
fsubrs
xorl
js
mov
sub
fmuls
scas
stos
or
mov
sbbl
mov
pop
rclb
loop
lds
add
scas
ja
mov
test
stos
dec
les
call
mov
mov
shl
push
fmull
mov
pop
mov
inc
lcall
jo
ss
fs
jo
sbb
das
stc
imul
sbb
imul
mov
inc
adc
pop
mov
mov
fwait
orl
push
sub
rcl
jo
movsl
outsl
gs
insb
mov
mov
mov
mov
pop
inc
mov
call
icebp
pop
ficoml
rorb
sarb
dec
jae
mov
rol
pop
movsl
adc
lock
and
jmp
xorb
dec
sub
xchg
sbb
sub
xor
pop
xchg
insb
fsubl
pop
pop
aas
mov
mov
mov
pop
xchg
mov
xchg
mov
mov
mov
push
pop
cwtl
jmp
out
mov
je
push
push
jno
stc
pop
dec
xchg
mov
pop
or
sub
pop
xor
adc
fnstenv
xchg
adc
jmp
mov
jo
sub
es
clc
jmp
sbbl
fyl2x
pop
jecxz
in
andb
xchg
inc
cmp
xchg
enter
xchg
stos
jno
push
leave
and
rcll
and
push
jmp
addr16
repnz
cmp
mov
adc
jmp
mov
arpl
addr16
stos
cmp
cmp
adc
repnz
jp
call
adc
lea
xchg
mov
adc
and
test
push
pop
jo
lods
jo
dec
cmpb
xlat
cwtl
out
lods
push
out
jno
lcall
imul
sub
sbb
ret
imul
pop
rclb
je
xchg
pop
pop
mov
pop
loope
dec
icebp
mov
xchg
add
mov
arpl
andl
or
shlb
call
jo
sbb
inc
adc
sbbb
sbb
adc
ss
push
adc
jl
xchg
pop
push
adc
jmp
mov
jbe
jmp
jmp
jno
push
or
jmp
push
xchg
in
call
pop
xchg
xor
push
and
push
out
pop
mov
or
push
fidivl
stos
pop
outsl
aaa
arpl
test
pop
in
shll
in
scas
in
into
ror
cmpsl
xchg
mov
jb
in
mov
out
bound
pop
in
and
fldl
sub
mov
adc
std
push
sbbl
mov
dec
arpl
data16
jbe
divl
ret
mov
and
scas
pop
push
cmpsb
daa
xor
mov
mov
cmpsl
lds
xor
cmp
pusha
outsl
lds
fldenv
bound
rolb
pop
shll
dec
mov
pop
mov
in
int3
int
mov
das
loop
das
push
cmp
push
cmp
scas
inc
fdivl
mov
in
lds
mov
fisttpll
mov
xor
cmp
mov
jmp
dec
cmp
cmp
push
int3
push
push
dec
iret
mov
hlt
sbb
clc
cwtl
inc
and
push
push
mov
das
and
push
pop
lcall
push
jne
xchg
push
jns
lods
sub
cmp
dec
sbb
xchg
jno
fsub
mov
das
cld
inc
xchg
lds
out
fstl
lcall
mov
inc
inc
cmp
sub
adc
jecxz
ffree
mov
adcb
mov
rcr
in
fiaddl
and
pop
sbb
ficompl
fbstp
and
pop
stos
fdivrs
or
cld
punpckhbw
xchg
pop
push
jecxz
cmp
inc
pop
pop
fidivrl
cmp
or
mov
aam
push
cmp
add
dec
int3
out
sub
mov
in
push
xchg
clc
mov
ss
pushf
das
push
jmp
jp
jns
push
mov
sub
cmp
dec
imul
es
pop
mov
dec
repnz
push
mov
mov
cmpsl
xchg
xorb
call
leave
ss
mov
or
les
adc
cmp
stc
arpl
scas
test
jbe
push
cmp
mov
inc
movb
xchg
scas
jge
rcr
int
cmpsb
mov
inc
iret
push
jne
popa
lds
sahf
adc
int3
and
lret
push
mov
mov
xchg
push
out
lahf
jo
int3
stos
sbb
lds
mov
jo
popf
pop
sahf
loopne
ss
pop
inc
pop
or
sbb
cmp
mov
push
cltd
pusha
les
cmp
add
push
sti
sbb
incl
pop
pop
ret
popl
or
bound
xor
testl
adc
sub
sub
mov
imul
xor
stos
and
and
mov
or
bound
les
mov
push
dec
push
leave
aaa
push
sub
out
mov
sub
in
dec
out
sub
test
jns
loopne
loopne
into
movsb
and
cmpsb
jg
inc
ja
das
imul
mov
sbb
cli
push
sahf
xchg
add
ret
enter
movsl
xor
rorb
dec
jge
in
jmp
stc
cmpsl
in
dec
add
cmp
xor
testl
repnz
jg
sub
mov
mov
mov
orb
outsb
sbb
outsl
lods
mov
push
mov
test
flds
mov
xor
dec
dec
out
mov
pop
or
loop
scas
xchg
stos
xor
cld
xor
mov
ljmp
int
adc
mov
sahf
shl
xchg
adc
sub
and
dec
xchg
sbb
and
adcb
pop
popf
pop
stos
hlt
lods
inc
jl,pn
sti
mov
add
pop
xor
movsl
dec
mov
and
pop
sti
fldt
stc
fwait
or
mov
in
rcll
insb
push
pop
loopne
mov
hlt
nop
repnz
inc
xchg
in
cli
aam
or
jmp
and
cmp
int
test
xchg
test
movsb
pushf
lahf
mov
pop
jb
ljmp
pop
test
jg
das
mov
aad
je
sti
imul
pop
leave
jl
sbb
xor
and
iret
insl
call
scas
xchg
mov
and
mov
popa
jp
xor
cmpsl
std
or
jo
ds
test
mov
xor
push
xchg
fdivr
ret
xchg
es
inc
ret
push
inc
test
js
or
and
stos
lret
int
xor
fwait
sahf
repnz
test
jae
idivl
mov
insb
mov
push
popf
xor
mov
fstpt
aam
lods
lret
outsb
jecxz
fildl
shrl
push
mov
movsl
dec
sub
dec
jmp
sub
and
jg
mov
add
pop
fwait
imul
das
mov
mov
jns
mov
sti
mov
cmpsl
leave
pusha
addb
call
cmpsl
ljmp
andb
pop
adc
mov
push
cli
mov
enter
aas
jns
sbb
xor
je
bound
mov
addr16
add
outsb
cmovae
loopne
sub
cmp
push
aam
les
lcall
shrb
aad
and
push
popa
imul
jno
cmp
add
aam
xchg
lahf
push
and
scas
dec
and
fnstenv
sarl
or
in
test
pop
cwtl
jge
js
pop
out
leave
data16
stos
sub
loope
and
mov
jecxz
mov
loop
push
scas
test
or
ret
lahf
jnp
lds
mov
outsl
insl
add
xchg
mov
xchg
xchg
jge
adc
fisttpll
js
adc
push
dec
icebp
sub
or
pusha
adc
fnstcw
mov
sbb
ret
or
inc
and
mov
ljmp
xor
cmpsl
pop
setb
adc
push
fcomps
clc
dec
fldt
dec
outsl
fucomp
fdivrl
or
xlat
cmp
sbb
mov
xorl
fs
cltd
ffreep
dec
jb
inc
cmp
mov
stos
lds
jae
clc
push
scas
les
mov
mov
test
mov
mov
lahf
dec
mov
sub
lods
loop
inc
mov
mov
sbb
dec
fwait
jge
push
jmp
jae
dec
xchg
xlat
outsb
add
rclb
addr16
shll
gs
pop
mov
mov
mov
add
gs
mov
push
jb
and
jge
out
mov
fs
lret
jmp
mov
jae
pop
arpl
xorb
mov
mov
jle
addb
push
and
loopne
jl
xor
xor
pop
sbb
psubusb
cmp
mov
repz
inc
jecxz
push
cmp
outsl
xchg
push
cwtl
outsl
lods
adc
jg
fwait
scas
push
scas
pop
push
mov
inc
lcall
and
loope
mov
lahf
iret
cltd
leave
sub
xor
dec
or
xchg
sbb
inc
pop
xchg
or
lahf
and
mov
mov
nop
dec
out
movsl
jmp
mov
pop
cli
push
rcrl
adc
les
pop
push
je
mov
insl
dec
rorl
lds
dec
adc
aam
lods
sbb
les
dec
dec
lds
mov
out
mov
pop
jns
das
mov
jb
ja
push
add
je
sub
fistps
aad
shl
cmp
jb
mov
sti
sbb
test
lock
out
js
rolb
jb
adc
out
add
push
rclb
lods
hlt
xor
ljmp
sarl
mov
inc
mov
pop
dec
into
imul
xchg
les
and
and
mov
test
cmpsb
cmpsl
pop
cs
mov
pushf
loop
or
je
in
mov
scas
xchg
mov
lods
pop
push
adc
movsl
dec
ret
mov
adc
sarl
push
mov
incl
pop
cli
pop
out
pop
cmp
xorl
shlb
repnz
mov
mov
decb
or
sbb
mov
sbbl
es
loop
mov
jno
sbb
pop
loop
sarb
lds
ja
mov
fimuls
mov
mov
push
xchg
inc
ret
cmp
adc
lcall
fadds
cmp
adc
mov
orl
cmp
ret
sub
movb
mov
push
popa
push
cmp
sub
cmc
jge
fidivrs
mov
xlat
in
cmp
daa
les
dec
ret
in
fimull
push
out
subl
test
push
fisttpl
inc
adc
cmc
push
adcb
cmp
aad
in
or
shr
out
mov
push
and
and
pop
scas
addr16
inc
cwtl
cmpsl
test
mov
sub
inc
insl
inc
dec
int3
ds
pop
mov
cld
xlat
inc
or
jnp
aad
add
inc
dec
aad
aas
sbb
pop
dec
jb
xor
lock
addr16
bound
int3
stos
fldenv
aam
in
jnp
push
test
arpl
je
sbb
xor
jo
ja
cmp
scas
out
out
pushf
subl
mov
mulb
pop
jbe
sub
cli
fs
mov
imul
flds
xchg
pop
cwtl
add
push
mov
or
mov
repnz
mov
mov
cmc
jae
lock
pop
cmp
xchg
adc
lcall
xor
lret
inc
test
cmpsb
xchg
mov
mov
adc
sub
xlat
addr16
leave
sarb
in
dec
inc
andl
nop
or
push
cmp
pop
xchg
pop
mov
cld
sbb
sbb
hlt
das
rcrl
pop
mov
popf
mov
inc
in
pop
mov
ror
push
ret
pop
lds
hlt
les
sbb
cmp
cli
cmp
int3
fistpll
shr
test
dec
clc
add
and
pop
cmc
pop
in
aam
xchg
mov
inc
sbb
xchg
jnp
loopne
insl
push
jmp
popw
sbb
bound
cs
xchg
jo
aaa
cmp
jg
dec
fwait
movsb
push
lahf
sub
mov
jno
loop
loope
jmp
das
adc
sbb
scas
adc
jnp
inc
lret
fnstsw
mov
arpl
cli
mov
inc
adc
fisttps
or
sbb
cmpsl
cmp
push
sti
mov
push
or
xor
cwtl
push
ds
mov
test
test
push
mull
adc
sbb
and
les
popa
dec
lods
sub
fdiv
pushf
ror
iret
cltd
clc
adc
fwait
push
or
lods
sub
dec
sub
or
dec
mov
bound
mov
sbb
sbb
subl
aaa
in
in
and
pop
push
enter
out
call
loopne
push
rcrl
sbb
jb
mov
popf
dec
roll
lcall
cmc
scas
jg
aas
fsubl
adc
js
xor
das
test
stos
daa
push
lock
pop
jo
xchg
movsl
xchg
cmp
sub
jbe
or
out
jns
push
cmp
fdivrl
sahf
int3
lods
rol
mov
push
adc
bound
and
adcb
jl
sarb
pop
add
clc
inc
pushf
and
nop
cmpsb
js
cmp
test
sub
dec
pop
jb
in
jnp
dec
jmp
out
lcall
mov
int3
out
popa
mov
in
xchg
fldcw
insb
cmp
mov
xor
in
ja
sbb
xchg
stos
js
sti
adc
scas
lahf
call
dec
jno
mov
dec
or
jo
popf
inc
push
out
test
dec
cs
push
aas
cmpsl
jae
cltd
inc
mov
ss
call
scas
shll
aad
cmp
jnp
cmp
fwait
cmp
pop
lea
or
cmpsl
js
add
addr16
inc
jmp
cmp
inc
insl
jge
and
cmc
push
fs
int
test
sbb
fwait
push
aas
jno
inc
pop
xchg
cmp
gs
cld
pushf
stos
jb
push
or
loop
jne,pt
cmp
adc
les
arpl
out
sahf
pop
icebp
pop
movsb
pop
jo
je
add
in
mov
les
jbe
lret
mov
jns
fisttpl
nopl
icebp
sub
lcall
jo
fdivl
fnstenv
xchg
std
adc
jp
jns
and
incl
push
push
int
jno
mov
push
loope
jno
les
insl
mov
xchg
dec
dec
int3
mov
mov
xchg
movl
inc
ret
shlb
push
jno
or
lock
mov
add
add
push
mov
jbe
into
inc
push
mov
lds
out
pusha
fs
ja
xchg
cmp
sub
insl
push
stos
jge
pop
xchg
lea
xor
xchg
sbb
xchg
loop
adc
movb
outsb
ret
jbe
pop
mov
mov
dec
lret
dec
cmp
pop
mov
stos
scas
jo
cs
push
lods
push
sbb
fnstenv
ret
int3
cmp
movsl
dec
dec
cwtl
lea
push
lea
push
js
imul
enter
out
ret
and
lcall
ja
mov
dec
pushf
jecxz
fwait
xchg
cmc
and
jle
add
cmp
cmpsl
stc
cmpsl
aam
enter
xor
sub
lret
mov
je
inc
push
cld
iret
jmp
fs
jp
or
mov
arpl
lds
or
mov
push
or
or
cmp
lock
push
pop
pop
xor
xchg
jbe
xor
into
mov
push
or
arpl
inc
inc
mov
inc
cmp
push
mov
xor
mov
es
fdivp
xchg
rcl
pop
and
hlt
ret
jne
push
ja
cmc
test
in
arpl
and
sub
xor
push
insb
sahf
push
push
leave
mov
pop
lods
mov
aam
cli
fmuls
loope
lahf
mov
dec
test
popf
stos
or
aaa
xchg
out
xchg
divl
mov
sbbl
jo
pop
cltd
pop
pop
mov
mov
pop
int3
inc
out
stc
imull
dec
cmp
call
mov
xorl
mov
push
dec
sbb
lcall
inc
and
ja
cmpsb
mov
sahf
fstl
mov
mov
jp
mov
mov
fdivs
shll
xchg
loopne
arpl
and
unpckhps
cmc
int
sarl
push
push
cmp
mov
jecxz
arpl
jns
inc
nop
es
cmpsl
adc
bound
in
mov
xchg
lret
lret
lea
push
or
mov
cmp
inc
pop
cmpl
stos
inc
shr
scas
jo
fisubl
adc
in
push
out
icebp
xchg
repnz
push
pop
mov
test
scas
xor
jne
imul
xor
push
add
and
cli
dec
test
adc
repnz
dec
test
cmp
sbb
or
lret
jae
out
adcl
in
pop
adcb
push
jmp
sub
js
lret
popf
inc
fstps
dec
data16
push
in
insb
lahf
mov
mov
mull
adc
cli
xchg
sar
stos
push
sub
outsb
popa
rcll
push
pushf
stc
scas
int3
push
in
test
lcall
or
sarl
mov
push
mov
sahf
mov
sub
jg
fdivrs
data16
andl
xchg
repz
xchg
mov
xor
xchg
icebp
enter
into
shll
fcmovnu
jle
jns
jp
xorl
ljmp
xor
repnz
lcall
xchg
inc
xchg
data16
pop
xor
sbb
jb
scas
in
mov
test
pop
sub
add
sbb
mov
jl
adc
icebp
xchg
xchg
xchg
lea
dec
bound
pushf
pop
pop
icebp
jle
xlat
sahf
gs
mov
int3
loope
rcl
jmp
cwtl
xor
adc
lcall
pushf
adc
adc
test
inc
add
jl
mov
adc
in
pushf
xchg
jecxz
mov
lds
sahf
mov
popl
adcb
sbb
shrb
xchg
add
call
popw
mov
repz
lret
mov
mov
or
idivb
test
in
mov
fisttpl
xchg
add
adc
sbb
pop
jmp
xchg
test
fsubrl
fwait
test
enter
mov
mov
mov
cmp
mov
cs
out
pop
adc
pop
cmp
mov
pop
xchg
jo
push
pop
loop
pop
push
popa
rorl
jb
xchg
jnp
cmp
es
pop
dec
adc
mov
dec
mov
add
jp
jnp
js
aad
outsb
repnz
inc
mov
jnp
push
sbb
or
fistpl
pusha
and
dec
mov
adc
inc
movsb
fistl
mov
daa
mov
xor
fistpl
inc
lock
adc
imul
loope
xlat
gs
cli
outsl
sbb
xchg
bound
pop
ja
loop
movsl
or
scas
xor
in
xchg
iret
mov
les
sub
fcoml
cli
fs
jb
out
test
movzbl
test
jp
mov
fildl
in
push
test
cli
loope
lods
inc
lret
ja
movsl
icebp
push
aam
lea
fisubs
sbb
cmp
mov
or
xchg
lock
mov
or
mov
bnd
inc
mov
cmp
mov
jns
mov
push
imul
or
sub
jns
sti
jge
jp
ljmp
mov
aad
fwait
lea
mov
lock
lods
in
cmpsb
mull
add
fsubrl
adc
push
int
scas
sub
pushf
and
xor
icebp
or
incl
mov
cmp
mov
loopne
sub
fisubrl
push
lock
jmp
fst
iret
adc
jl
sub
insb
xorl
call
ret
idiv
fwait
aas
mov
push
mov
lcall
cmp
cmpsl
out
xor
call
sahf
adc
push
add
stos
cmp
mov
mov
dec
cmp
test
jns
inc
in
cwtl
ljmp
lds
inc
popf
add
cltd
mov
cmp
cmpb
outsb
inc
sbb
fldt
gs
fxch
pop
aas
push
lcall
dec
sbb
icebp
pop
inc
ss
mov
push
dec
add
lret
aam
adc
icebp
and
test
sahf
xchg
add
shll
rorl
xor
jnp
scas
aas
cwtl
adc
sbb
cmp
jo
inc
push
imul
subb
outsb
jge
out
inc
jb
mov
rcll
scas
dec
add
sbb
int
jge
cs
imul
jg
mov
sub
pop
and
int3
lds
ja
mov
jmp
outsl
mov
xchg
gs
mov
jne
dec
es
loopne
scas
aaa
rcrl
pushf
mov
lds
inc
scas
dec
clc
test
dec
xchg
inc
dec
mov
ljmp
mov
sub
pop
loopne
pop
fnstcw
and
je
add
mov
pop
loopne
add
fdivrl
sarb
ja
sti
push
pop
push
pop
jno
dec
cmp
mov
lret
mov
cwtl
pop
jo
daa
lcall
dec
mov
test
push
lds
dec
jle
insl
out
pop
inc
push
cmpsb
cmp
negb
sub
lock
cmp
mov
in
sarb
hlt
loope
aaa
dec
cltd
loop
add
packssdw
adc
fwait
sub
dec
movsl
rol
enter
in
imul
add
popf
ljmp
loopne
dec
sarb
jno
jnp
out
sub
scas
jb
popf
addl
iret
mov
pop
xor
lods
scas
inc
cmp
sbb
sbb
add
mov
push
cmp
lret
xor
jo
or
dec
push
scas
adc
push
adc
cmpsl
push
inc
mov
dec
cmpsb
mov
cmp
adc
pop
out
pop
arpl
mov
dec
repnz
shll
xor
dec
mov
sbb
and
cmp
mov
xchg
xchg
pop
fs
mov
lock
push
loope
aam
pop
outsl
sbb
cwtl
hlt
cmp
std
and
pop
push
mov
test
arpl
fstpl
jmp
ss
pop
mov
cmp
xchg
mov
add
fiadds
daa
xchg
andnps
movl
inc
iret
dec
cmpsl
in
fs
lds
lret
mov
fnstcw
inc
mov
jne
clc
inc
jno
sub
push
pop
xor
sub
mov
lock
jae
dec
cmp
aad
loop
mov
mov
push
ret
popa
push
mov
jo
ds
push
stos
scas
fldenv
fnop
cmpsl
mov
ja
push
cmpsl
xor
cmc
test
sbb
fidivs
pop
int
sti
sub
pop
les
pop
dec
popa
mov
jns
lods
push
sub
stc
sahf
and
gs
cmp
push
out
jb
fs
jns
loop
movsl
inc
or
ret
lret
sbb
pop
test
mov
jge
push
movsl
push
or
dec
push
mov
ret
mov
dec
rclb
nop
adc
push
dec
xchg
mov
xor
mov
jo
fwait
cld
sub
mov
hlt
mov
in
dec
mov
adc
lock
push
mov
rcr
daa
stc
data16
jbe
test
pop
push
cmp
jg
xor
dec
inc
add
movsl
mov
pop
inc
or
lret
push
fs
jnp
popf
or
mov
test
dec
add
xor
mov
dec
xchg
aaa
cld
xor
fildl
jo
stos
repz
enter
push
pushf
cmp
ss
xchg
dec
xchg
mov
fmull
mov
cmp
or
jo
mov
push
scas
and
inc
inc
adc
lods
popl
pop
sahf
dec
inc
and
xor
daa
cmp
mull
cltd
roll
push
sub
sbb
add
mov
in
or
dec
inc
push
enter
jb
mov
dec
push
lcall
jb
push
imul
fs
ret
pushf
adc
outsb
jns
dec
sbb
call
int3
push
cmp
mov
jge
in
xor
cmp
imul
in
push
sub
loopne
mov
mov
xor
mov
stc
mov
movsl
int3
cli
pop
push
dec
lock
sub
adc
mov
fs
sub
sub
testb
dec
sbb
add
jo
int3
into
mov
push
int
fisttpl
in
push
xor
clc
mov
orb
push
sub
out
add
and
pop
loope
sbb
lods
clc
inc
jecxz
fldcw
out
push
loop
add
jnp
jge
in
pop
inc
jo
int
inc
mov
js
mov
adc
ret
aad
pop
cwtl
cli
dec
loope
xchg
rclb
and
pop
imul
push
pop
and
ja
out
out
pushf
and
xchg
clc
js
push
out
in
ret
stos
addr16
arpl
into
pushf
inc
out
or
hlt
xor
outsb
jnp
jle,pt
es
push
dec
jmp
inc
es
jmp
mov
lock
lret
fwait
cmc
jmp
shl
add
andb
jnp
test
fwait
or
sbb
dec
arpl
insl
jo
pop
mov
in
jecxz
imul
jbe
inc
daa
cmp
hlt
sbb
in
pop
hlt
or
cwtl
sbb
push
fxch
push
inc
sahf
adc
sbb
cmp
icebp
adc
test
mov
fs
hlt
push
sbb
fcmovnbe
pop
in
pushf
adc
dec
mov
loopne
lcall
mov
insl
pop
frstor
dec
cmp
mov
test
push
inc
jne
movsl
dec
xchg
cltd
jne
sub
push
mov
lcall
ljmp
mov
leave
mov
pop
popf
push
fldcw
insb
mov
xchg
cwtl
stc
lea
out
xor
mov
loope
dec
fstl
push
xchg
test
icebp
pop
lea
jae
movsb
or
int
es
in
cmpsb
push
test
pop
mov
mov
jno
lcall
test
pop
adc
or
pop
dec
jl
push
punpckldq
pop
cmp
xor
sbb
inc
push
cmp
mov
int
pop
pop
mov
icebp
int3
dec
pop
scas
pop
push
sahf
clc
pushf
lahf
cmp
ja
inc
out
mov
adc
mov
in
bound
jo
pop
mov
inc
cmp
inc
push
insb
push
xchg
add
mov
sbb
mov
cwtl
pop
push
xchg
stos
jb
insl
out
fisubs
dec
std
mov
adc
mov
lret
arpl
test
sbb
scas
scas
or
cwtl
ljmp
or
push
daa
adc
push
sbb
aam
mov
pop
push
fisubrl
out
mov
sbb
mov
pop
bound
ret
adc
inc
fistpl
std
inc
jns
int
in
mov
mov
ret
xchg
sub
hlt
mov
pop
xor
dec
mov
mov
pop
in
fiadds
in
xchg
mov
and
sub
stos
sbb
test
sub
into
jge
push
dec
pop
mov
das
mov
mov
bound
mov
cltd
mov
sub
sbb
sbb
test
lcall
int
cmp
clc
icebp
lds
lods
and
mov
xchg
xchg
mov
or
xchg
out
dec
test
xchg
lods
or
js
jo
jns
int3
and
dec
mov
mov
cli
cmp
repz
es
or
adcb
mov
or
out
inc
loope
push
push
mov
lods
bound
lret
adc
mov
frstor
sbb
stc
das
and
mov
hlt
andl
idivw
movsb
scas
in
jecxz
pop
mov
xchg
dec
jne
and
mov
sbb
jo
pop
inc
lds
arpl
rorl
mov
or
sub
in
call
cmpsb
mov
push
adc
push
pop
lahf
jg
cmpb
xchg
cltd
pop
push
aaa
mov
xchg
push
sbb
fbstp
pushf
mov
lahf
dec
lock
sbb
cwtl
mov
movsl
hlt
test
xor
jno
mov
iret
scas
scas
rorl
cmp
push
sbb
mov
popa
adc
adc
mov
push
lcall
and
inc
mov
test
mov
cltd
mov
gs
jb
ffree
das
dec
dec
xchg
mov
xlat
pop
cmpsl
outsl
outsl
fs
push
gs
aad
out
push
shrb
jno
subb
push
sbb
add
cmp
mov
push
shrb
loop
into
subb
dec
xchg
add
sub
inc
movsb
xchg
push
cmp
or
push
aam
cli
loop
dec
out
adc
xchg
sub
and
push
mov
adc
adc
mov
es
adc
les
fwait
fs
or
sbb
sub
pop
pop
shrb
dec
xor
or
inc
daa
jmp
add
push
shrl
dec
push
sbb
test
and
jmp
lds
les
push
imul
mov
ja
cmp
daa
adc
push
fstps
fsubr
cli
xchg
std
mov
bound
jp
call
les
cmpsb
aam
push
lcall
test
dec
popa
jge
mov
fsub
pop
movsl
jo
mov
inc
jnp
stos
pushf
loopne
imul
ret
fisubs
xlat
fcmovnbe
lds
cli
add
loop
jnp
cmpsb
or
jb
test
gs
mov
into
sub
mov
inc
lds
dec
pop
jmp
and
adc
jne
fistl
rorl
cmpsl
aas
loopne
hlt
xchg
adc
or
cltd
jo
insb
hlt
xchg
cmpsl
or
imul
inc
sub
jmp
mov
mov
cmp
out
mov
inc
test
je
fstpl
mov
imul
or
and
dec
scas
or
jb
stos
jno
movsb
push
jmp
daa
call
test
add
lods
shll
call
adc
fcompl
loopne
push
mov
add
and
jl
jmp
fldt
pop
mov
pop
fbstp
fldl
lods
mov
insl
inc
sbb
jge
cmpsb
fcoml
mov
jno
scas
arpl
add
mov
and
push
je
push
xchg
cmp
popa
aas
push
stos
jae
fildll
pop
clc
test
sub
sub
subb
jo
aad
bound
pop
test
lock
push
push
pop
test
lock
sbb
sbbb
adc
bound
jbe
sarl
pusha
cmp
imul
js
jne
scas
out
mov
pushl
fbld
cmp
rclb
das
ret
inc
jecxz
cmp
loopne
pop
cltd
mov
loope
dec
outsl
mov
leave
shlb
iret
xor
stos
xor
lret
movb
inc
in
loop
xchg
xchg
xchg
mov
mov
and
test
imul
and
sbbl
dec
repnz
sbb
testb
inc
dec
stos
and
lods
std
fwait
and
cmp
cmp
mov
pop
aaa
xor
sub
andb
mov
movsb
pushf
sbb
pop
sahf
pop
int
sub
mov
and
sbbl
mov
arpl
add
jbe
pop
mov
pop
inc
data16
decb
imul
leave
js
scas
mov
lds
pushl
jo
cmpsl
mov
test
xchg
fs
pop
test
mov
push
jl
xchg
mov
push
xorl
lods
fsubs
jae
xchg
mov
sbb
lahf
sub
out
cmpsl
js
rcll
xor
and
in
and
ds
jle
leave
xchg
jne
jmp
xchg
sub
push
cmp
fwait
cmp
rol
mov
xchg
xchg
dec
inc
icebp
pop
fsubr
xchg
fwait
movsb
inc
insb
push
ja
ss
xor
push
into
arpl
je
cmp
sub
ret
jno
cmpsl
mov
int
and
mov
xchg
sub
dec
and
push
mov
cmpsl
popa
fstps
call
daa
cltd
popf
inc
and
dec
stc
lahf
fucomp
loop
data16
out
test
fsubs
mov
and
seta
or
push
scas
lods
movsb
gs
lret
daa
cmp
popf
mov
jg
cmp
sub
punpckhbw
mov
inc
mov
add
xor
mov
sbbb
mov
fs
mov
pushf
or
aas
pop
pop
xlat
cmp
xchg
mov
jb
loope
cmp
in
cwtl
sub
clc
sbb
std
testb
pop
lcall
movsb
leave
fs
cmpsl
loopne
je
push
mov
lods
arpl
cwtl
ljmp
jno
fs
jge
sub
mov
pop
fcom
fistl
and
in
sub
fsubl
test
and
adcb
sub
insl
fidivs
add
bound
jbe
xchg
jns
lods
jg
xchg
jl
adc
int3
sahf
pop
fs
pushw
or
out
or
adc
sti
xchg
enter
push
mov
cmc
aad
mov
or
cmp
mov
mov
cltd
dec
lods
sbb
mov
xchg
in
pop
sub
xchg
adc
icebp
mov
fwait
sub
call
lods
movsb
mov
mov
push
add
add
inc
subb
xchg
fs
mov
mov
mov
idiv
cmpsl
cltd
push
lret
andl
pop
pop
push
iret
xorl
adc
arpl
aaa
fs
mov
jo
xchg
loope
outsb
fistl
scas
lods
lret
fwait
negl
cwtl
adc
jnp
pusha
loope
loopne
ja
mov
or
shll
in
lcall
mov
les
mov
mov
insl
sti
inc
rorl
insl
sbb
mov
or
sbb
rep
sbb
mov
mov
and
sar
xor
daa
dec
dec
push
cwtl
insl
movsb
bound
dec
dec
les
jnp
fwait
or
xor
hlt
outsb
mov
mov
dec
out
bound
or
fcmovbe
pop
dec
out
xor
dec
mov
test
jbe
inc
adcb
ds
daa
mov
xchg
mov
cmp
loopne
jnp
testb
test
xchg
out
nop
mov
loopne
ds
test
cmp
xchg
xor
arpl
fildl
int
in
mov
jge
insl
iret
icebp
and
adc
xchg
sub
adcb
lret
cmp
pushw
scas
scas
xor
stos
lcall
int
sbb
jo
loop
cmp
scas
std
imul
cbtw
insl
fcmovb
mov
ja
dec
les
addl
and
jns
fiaddl
insb
add
fstps
cmpsl
adc
push
xchg
sarb
int3
stos
fwait
and
mov
in
cs
and
add
out
das
mov
or
addr16
or
lds
out
and
mov
pop
add
push
push
les
lds
pop
xor
cmp
xchg
inc
jo
les
mov
scas
cmp
arpl
add
inc
pushf
roll
fstps
xchg
hlt
sahf
jnp
mov
js
jne
push
stc
lea
in
popa
pusha
push
cmp
outsb
out
les
or
dec
es
iret
shl
popf
inc
pop
pop
pmulhw
int3
scas
cmp
das
les
push
sete
int3
xchg
cmpsl
xchg
notl
push
push
les
xchg
inc
mov
jnp
pop
inc
adc
or
ret
in
mov
sub
inc
js
cmpsb
lds
cwtl
mov
js
sti
stos
icebp
push
jb
jmp
idivl
insl
or
arpl
mov
mov
stos
and
pushf
inc
inc
in
mov
push
int3
fimuls
outsb
xlat
ljmp
ljmp
aaa
sbb
out
jg
stos
push
mov
dec
int3
jo
sbb
cmp
sbb
lods
insb
xor
push
mov
fadds
adc
cwtl
insl
cmp
or
push
push
insb
outsb
add
mov
shll
iret
test
add
bound
sbb
movsb
or
or
ja
imul
out
xchg
adc
pop
adc
sbb
jo
les
pop
int3
or
les
mov
pop
lea
mov
cmpsb
xchg
mov
daa
sti
xchg
push
les
ja
hlt
cmp
xor
gs
mov
cwtl
push
arpl
add
jnp
sbb
aad
push
addr16
sub
sub
jbe
add
dec
sub
cmp
lret
jge
rcll
cmpsl
subb
pop
mov
rcrl
sarb
bound
inc
sub
mov
popa
push
mov
fistpll
mov
jae
ljmp
movsb
pop
lcall
adc
push
jb
or
andl
pushl
sbb
xor
jae
or
adc
fsts
and
sahf
fwait
xor
xchg
int
push
sti
pop
movsl
add
loop
mov
ss
into
or
testb
fnstenv
movsl
aaa
bound
xchg
cmp
dec
int
inc
les
out
push
cmp
lods
xchg
insb
sbb
movsl
sub
or
and
xor
scas
or
cs
jb
jno
loopne
fdivrl
push
shl
pop
sbb
mov
sub
insb
fdivrs
arpl
pop
pushf
ja
jmp
pop
pop
jne
inc
pop
fldcw
cmp
push
test
pop
add
push
mov
xor
arpl
fistpll
dec
icebp
inc
cmp
inc
lret
xchg
lea
aaa
lret
aaa
daa
repnz
cmpsl
sub
daa
dec
and
lods
mov
sbbl
adc
jae
xchg
popa
daa
ja
dec
cmpsl
in
mov
cmc
int3
insb
stos
dec
pop
orl
movsl
mov
int
jne
icebp
lret
fcomps
jle
jne
or
dec
icebp
xor
mov
stos
loope
pop
insl
lret
test
dec
pushf
mov
mov
fisttpl
in
add
sub
mov
popf
loopne
lea
xchg
loop
faddp
int3
lds
and
mov
stos
push
sub
fistl
jns
jne
push
fbstp
adc
cli
sbb
push
mov
loopne
data16
fdivl
mov
jge
mov
dec
shlb
lds
inc
lds
flds
push
mov
jmp
inc
push
data16
adcb
cld
mov
inc
jge
call
sbb
shl
mov
mov
or
xor
daa
ljmp
xchg
pop
int3
cwtl
jp
jl
pushf
out
push
mov
adc
mov
jbe
js
xchg
test
inc
jb
and
and
sahf
push
dec
mov
mov
pop
dec
aam
xchg
test
and
iret
mov
mov
mov
shll
les
lds
cmp
pop
and
pop
cmp
int3
jb
push
dec
les
addr16
jb
inc
mov
or
leavew
inc
repz
mov
lret
rcll
add
jne
pop
addb
les
xor
pop
movsl
jp
jge
les
loope
xchg
mov
in
sub
dec
cld
xor
push
dec
lock
inc
xor
arpl
clc
xchg
pop
mov
sahf
test
add
mov
pop
push
aam
fsts
lret
xchg
inc
loopne
mov
cmp
mov
cwtl
lock
test
or
fcoms
shlb
orl
lcall
mov
jmp
push
clc
push
and
loope
fsubl
incl
aaa
iret
sub
jge
aam
adc
stos
push
xorl
lea
sbb
icebp
xchg
andl
outsb
loopne
sbb
push
mov
cmp
in
sbbl
inc
repnz
xchg
sub
lcall
push
cmp
sti
mov
bound
xor
in
or
rcrb
pop
sub
nop
int
ja
jo
cli
sbb
pop
loope
adc
xchg
arpl
pop
pop
inc
mov
push
cli
fadds
fiadds
pop
fstps
popf
cli
xchg
dec
dec
adc
inc
sub
add
mov
pop
les
movsb
fwait
mov
inc
dec
adc
jl
bound
mov
inc
sbb
loop
fs
xorl
xor
add
mov
jns
hlt
adcb
rorl
fs
mov
mov
pcmpgtw
adc
ret
test
flds
cmpsl
jb
popa
inc
sub
cmpsl
rorl
mov
inc
loop
std
jnp
xchg
xchg
gs
cmpsl
dec
call
lret
or
xor
add
xor
pop
daa
loop
inc
mov
fwait
or
cmp
inc
roll
call
sbb
jo
lds
fucom
and
testl
xor
mov
xchg
mov
push
pop
or
into
fsts
jnp
mov
int
dec
cmp
shll
notl
inc
or
jnp
cmp
cmp
iret
int
inc
lds
and
xor
inc
test
push
pop
cmp
xor
jno
or
aam
inc
inc
add
loop
gs
xchg
pop
inc
addl
test
cmp
add
push
add
pushf
test
inc
push
cltd
aad
imul
or
imul
aaa
aas
stos
adc
jno
cmpl
and
push
lds
push
loope
pop
pop
sbbb
call
stos
jge
xor
into
ljmp
fistl
jl
fcomp
xchg
cwtl
jnp
idivb
adc
dec
aam
push
les
xor
ja
fcomps
sbbl
xchg
jne
and
pop
aad
sti
pop
dec
rol
pop
push
and
orl
adc
cmpsl
push
push
xor
xchg
js
and
sbb
je
cwtl
call
bound
sub
lods
cmpsl
lahf
cwtl
insl
mov
data16
cmp
pop
dec
dec
das
sub
mov
sub
or
flds
mov
enter
call
xchg
cmp
mov
push
mov
int
push
push
arpl
loop
aaa
scas
xchg
xchg
mov
into
mov
in
aam
cmp
mov
adc
or
fcom
loop
pop
sub
fisttpl
aas
ljmp
push
and
int3
jo
xchg
jg
iret
jno
xchg
pop
rorl
inc
cmp
loope
cmp
lahf
dec
sub
addr16
bound
sbb
xchg
push
mov
test
adc
inc
and
shrl
gs
push
repnz
or
pop
lods
mov
cmp
adc
xor
test
dec
and
mov
jg
ficoms
adc
rorl
or
rcrb
mov
dec
adc
js
int
popf
imull
adc
fstpt
push
mov
fsubl
pushf
or
movsb
fistl
aam
arpl
sub
std
pop
lods
dec
sub
arpl
andl
add
icebp
cmc
sbb
lcall
pop
repz
mov
pusha
mov
out
inc
in
push
push
xor
into
xor
jns
and
pop
fstl
rclb
cmc
icebp
mov
mov
mov
loopne
xor
mov
popf
lahf
pop
dec
insb
pop
cmp
subb
in
test
in
icebp
jecxz
adc
mov
mov
add
das
sbb
cs
mov
ja
and
push
test
sub
pop
push
add
jo
je
out
add
push
fldl
fcomp
shll
inc
xchg
aaa
and
out
pop
aaa
leave
into
loopne
push
int
mov
bound
test
adc
test
pop
jge
mov
fs
xchg
pop
adcb
fs
das
arpl
sbb
sub
fxch
addr16
mov
jecxz
jb
repz
dec
xor
stos
push
push
mov
pop
fisubrl
ja
outsb
push
sub
jp
stos
cmpsl
push
bound
or
cmpsb
xchg
int3
lea
adc
into
jg
push
jo
enter
mov
dec
cmp
xor
lahf
nop
jbe
push
lds
mov
loopne
xor
jge
insb
jl
cmpsb
cmp
pop
inc
dec
aam
and
add
xor
push
aaa
ret
mov
mov
push
or
lds
flds
pop
mov
inc
stos
cmp
sbb
pop
push
cmp
mov
xor
arpl
push
ret
sbb
push
adc
popf
inc
scas
jae
mov
negl
fsubp
addr16
adc
loope
dec
lcall
fisubrs
push
fmuls
push
add
loopne
xor
hlt
push
addr16
lods
jno
mov
adc
gs
mov
xor
lret
je
outsl
pop
mull
sbb
dec
jp
pop
in
shrl
ljmp
cmpb
pushf
push
out
inc
xchg
imul
push
mov
adc
movsb
dec
fwait
cmp
std
jns
pop
jl
lea
xor
fisttpll
pop
ds
gs
repnz
pop
lcall
dec
cmp
mov
lcall
mov
push
dec
imul
sub
and
sarl
cmc
outsb
cmc
cmpsb
es
and
cwtl
push
daa
loopne
pushf
mov
push
out
sbb
int3
xor
sbb
setle
dec
push
sbb
inc
cmp
pop
mull
sub
cmp
cmp
repnz
stos
sub
arpl
jle
out
lods
loop
rdpmc
arpl
popf
jnp
dec
pop
int3
jnp
shrl
lret
mov
sbb
stc
sub
xchg
pop
mov
es
jne
call
and
lret
push
xor
int
cmp
andl
cmp
cmp
into
xchg
rorb
dec
stos
je
rclb
or
pop
pop
xlat
pop
mov
or
and
pop
and
cmpsl
xor
stc
std
sbb
pop
sbb
cmp
push
xchg
dec
popa
les
adc
jns
jecxz
cmp
ret
xor
pop
fsts
cld
sbb
and
mov
pop
popa
movsl
into
or
xor
inc
sahf
jb
xor
bound
test
add
cmp
and
dec
int3
sti
dec
rorl
nop
sahf
cwtl
clc
cmp
xchg
cmp
test
lods
mov
sub
mov
clc
enter
and
add
push
lds
dec
mov
mov
fs
scas
dec
mulb
nop
and
inc
roll
bound
mov
data16
nop
push
fcompl
jge
xlat
insb
inc
mov
js
add
test
clc
roll
stos
or
inc
push
pop
fwait
sub
sbb
pop
les
fwait
mov
adc
adc
push
adc
inc
sub
xchg
mov
pop
mov
and
inc
push
mov
fiaddl
clc
icebp
insl
dec
pop
and
outsb
les
adc
flds
inc
js
out
jo
daa
inc
fisubs
push
movsb
icebp
sahf
out
push
jnp
sbbl
pop
loopne
cmp
inc
fldcw
rcll
fimull
mov
adc
mov
fbstp
rolb
mov
in
out
sub
jg
or
out
cwtl
sahf
cmp
push
xchg
rolb
push
cmp
mov
rcr
sahf
add
add
cmpl
cwtl
pop
xor
mov
loopne
fsts
test
jo
inc
out
cmpsb
xchg
lret
jnp
push
int
mov
sub
xlat
mulb
ret
cmp
dec
mov
negl
lods
test
insb
inc
pop
mov
rorb
dec
mov
pop
loope
out
sbb
rcrl
push
mov
add
ja
adc
mov
inc
push
arpl
stos
repz
arpl
dec
xchg
fidivrs
adc
or
in
xchg
sub
nop
outsb
push
aas
in
dec
or
push
jo
or
aam
mov
push
orl
inc
push
pop
pushf
xchg
and
call
test
pop
lods
xchg
mov
xchg
mov
adcb
je
xor
pop
adc
inc
pop
sbb
hlt
sbbb
test
lock
clc
out
adc
mov
and
cmp
dec
int
mov
shl
inc
sbbb
sub
clc
jno
jp
fs
sbb
dec
xchg
and
jge
push
aad
mov
xchg
push
sbbb
dec
sbb
cmp
idiv
pop
sbb
mov
or
push
sti
xor
jns
ljmp
pop
push
xchg
js
push
add
mov
jp
jmp
js
popa
push
xchg
inc
subl
and
aam
fcom
xchg
faddl
rorb
fsub
cmpsb
jbe
bound
or
cmpsb
mov
movl
popa
fwait
popa
jle
push
cmp
dec
dec
scas
pop
xchg
dec
scas
inc
inc
aad
ffreep
stos
push
add
insb
adc
xchg
outsb
popa
scas
fwait
arpl
arpl
xor
and
mov
loop
popa
lds
sbb
pop
aad
dec
fistps
cmp
fldcw
arpl
mov
xchg
les
stos
jns
pop
push
pop
stc
mov
gs
fisubl
inc
mov
scas
or
pop
arpl
mov
cmp
psubb
adcl
sbb
mov
dec
push
nop
or
pop
fsubr
cmp
jmp
lock
cmpsl
addr16
fmuls
hlt
lea
mov
jl
mov
mov
dec
test
jge
and
stc
adc
jae
pop
sub
call
mov
lds
mov
xchg
mov
aas
in
iret
cltd
jg
push
adcl
dec
cmc
fabs
outsl
sub
insl
mov
pop
xor
cmpsl
jbe
into
out
test
dec
mov
xor
je
and
ja
std
mov
push
loope
testb
lret
lds
pop
shl
cmpb
mov
pop
insb
and
ret
leave
cmp
fisubrl
mov
mov
inc
int3
andl
popa
lret
out
pop
add
jp
and
and
cmp
adc
mov
stos
mov
bound
pop
lods
cmp
jns
int3
cli
fwait
push
sub
scas
scas
insb
das
cmp
rcrl
outsl
ret
push
bswap
pop
imul
lods
bound
xor
out
pop
es
test
es
in
add
pop
out
and
loope
pop
jnp
sbb
test
loope
push
clc
pop
addb
fadd
xorl
jo
fstl
mov
imul
stos
or
dec
sbb
stc
lahf
cmc
cmp
xor
and
int
nop
fisttpl
push
inc
sbbb
popf
jns
stos
cmp
sub
or
je
fxam
into
loopne
cmp
lds
aaa
pushf
in
jecxz
aad
or
adc
xchg
jecxz
enter
cmp
lods
sbb
inc
cli
inc
add
dec
dec
les
pop
jg
jl
push
lods
push
jecxz
cli
add
out
ret
push
push
dec
repnz
pop
shl
rcrb
sbb
and
std
push
add
lret
mov
insl
dec
mov
or
fcoml
lahf
xor
sbb
xor
xchg
or
pop
xor
fstps
cld
sub
sub
popf
ds
cmp
and
gs
pop
adc
mov
aad
pushf
test
push
push
ss
pop
loop
mov
jmp
pop
mov
in
fnsave
int
jnp
movsb
and
and
pop
gs
fmull
repz
loope
mov
out
mov
scas
jl
or
push
mov
pop
dec
jo
xchg
mov
imul
ljmp
imul
lahf
jno
jp
lret
mov
cmpb
imul
aam
fmull
sbb
mov
cli
fs
push
fdiv
pop
sarl
andl
test
fwait
stos
and
addl
repnz
dec
sti
sbb
pop
adc
jmp
or
popa
push
int3
jecxz
push
sub
xchg
bound
fcmovne
add
fcomps
test
out
pop
loope
push
and
or
push
imul
pop
mov
mov
fwait
dec
xor
pop
push
lods
jnp
je
lods
stc
jle
mov
fldenv
lds
aam
mov
jno
push
cmpsb
popl
push
push
repz
popa
inc
push
jg
push
inc
fistpl
int
sbb
popa
sub
sarl
imul
push
adc
xchg
push
cltd
mov
flds
insb
adc
xchg
jo
pop
dec
nop
sub
xchg
clc
out
mov
pop
les
mov
push
aam
mov
imul
pop
mov
lret
mov
or
or
loop
mov
inc
push
push
pop
sbb
mov
sti
adc
cmp
cmp
arpl
subb
cmp
mov
mov
repnz
insl
push
jne
in
jb
dec
aam
mov
push
hlt
dec
stos
movsl
push
xor
xchg
xlat
pop
and
loope
jno
aad
je
adc
jno
cmp
jae
clc
aad
push
dec
jo
enter
fisubrl
pop
sbb
int
in
mov
aad
lock
frstor
addr16
imul
cmpsl
es
adc
out
repnz
push
test
sti
bound
cmp
outsl
fwait
push
sbb
lods
test
fistpll
in
movsb
outsb
clc
or
lea
jns
sbb
lds
jle
push
hlt
je
xchg
pop
jne
xchg
pop
arpl
mov
adc
insb
cltd
je
jge
sbb
aam
cli
call
cmp
pop
es
cmp
sbb
lods
shrb
and
test
pop
push
out
ja
leave
pop
loop
cmpsb
pop
lcall
mov
rcll
rcr
push
pop
jno
and
jg
ret
push
cwtl
lcall
out
ret
adc
fsts
sbb
movsl
mov
mov
fmull
fbld
dec
fs
fcom
push
loopne
xorb
rcrl
push
cmp
xchg
lods
adc
pop
jle
ljmp
adc
push
mov
fbstp
dec
mov
pop
hlt
fs
sbb
inc
daa
out
ja
out
mov
push
bound
out
lods
mov
xchg
push
mov
in
cmpsb
jne
inc
dec
mov
pushl
dec
jle
pusha
jns
and
cmp
sub
dec
push
les
sub
popa
in
fldcw
insl
fdiv
clc
pop
cmp
out
sarl
scas
xchg
cmpsb
cmp
daa
xor
jl
insb
add
in
stc
jecxz
dec
loope
aad
int3
dec
pop
clc
mov
les
ljmp
in
int
cmp
xchg
cmpsl
push
call
jp
cmp
aam
cmp
push
add
mov
mov
jo
pop
mov
mov
gs
mov
decb
les
mov
js
sub
rorl
cmpsl
jge
mov
mov
dec
jo
les
mov
add
mov
les
push
cwtl
jo
xor
sub
lods
leave
sbb
adc
mov
aam
mov
xchg
cmpsb
or
fadd
testb
insb
cmp
xor
je
loop
addb
xor
stc
push
pop
dec
sub
pop
sub
and
iret
test
insb
rol
sahf
mov
sub
dec
and
incl
xchg
fldenv
cltd
and
mov
mov
lods
shrl
add
pop
leave
mov
mov
and
jbe
jo
lcall
int
dec
inc
sub
faddl
pushf
dec
cmp
inc
mov
rorb
nop
inc
in
jbe
pushf
fs
into
ljmp
and
adc
sub
xchg
inc
cmp
lock
cmp
xchg
testl
mov
sbb
in
adc
loopne
dec
mov
xchg
and
sub
push
fistl
cwtl
imul
aaa
imul
dec
call
mov
adc
jbe
lret
cmpb
push
ret
pop
and
sub
or
push
or
mov
add
xchg
adc
shlb
sbb
pop
iret
dec
adc
jg
in
or
jo
add
loop
in
jne
jo
in
push
cmp
out
mov
lock
mov
or
mov
add
mov
or
add
movl
lds
fsubr
jo
adc
and
or
cmp
mov
les
push
rdpmc
xchg
cmpsl
and
andb
movsb
fbld
repnz
test
lods
adc
xchg
loope
jnp
cmp
cmpsb
push
sub
inc
jle
mov
data16
sub
test
jns
and
fmull
clc
add
or
mulb
mov
je
gs
push
sbb
jno
push
sbb
inc
lea
cmp
test
mov
dec
loop
mov
data16
mov
jnp
xchg
imul
lock
fwait
inc
cwtl
add
xor
fwait
repnz
xchg
dec
cld
jb
decl
cwtl
or
jmp
jecxz
mov
shrb
adc
mov
mov
scas
jecxz
dec
sarb
jns
jne
pop
es
mov
stos
loopne
xor
mov
or
mov
mov
cmpsb
test
push
sbb
dec
mov
popa
or
std
mov
daa
mov
str
cmp
fsts
flds
adc
jge
popa
inc
icebp
mov
loope
fsts
out
inc
lahf
test
repnz
bound
add
int3
inc
paddd
daa
ret
xor
hlt
mov
cmp
jge
or
cmpsb
pop
fwait
mov
mov
mov
in
dec
rolb
mov
adc
xchg
jnp
mov
push
xor
cmp
std
or
orl
cld
xchg
iret
fcmove
xchg
data16
out
pop
push
out
fisubl
mov
repnz
stc
int
xchg
in
mov
mov
in
sbb
loopne
xor
stos
ja
mov
arpl
mov
xchg
xchg
in
fmuls
inc
and
adc
outsb
repnz
movsl
or
mov
cmpsb
jne
add
and
and
or
sahf
xchg
mov
bound
mov
rclb
jo
bound
cmpsl
jno
push
ss
or
mov
and
dec
arpl
popa
loope
xchg
int
xor
inc
mov
and
lea
add
sbb
mov
push
fcom
std
fiaddl
lock
jb
popa
jmp
loop
adc
or
lret
shlb
lahf
adc
addl
mov
xchg
fwait
arpl
sbbl
or
fmull
fwait
cli
in
fiaddl
push
push
fstps
jg
push
fistps
movsl
rorl
mov
mov
subb
imul
adc
jne
mov
mov
pushf
push
into
push
mov
movsl
sbb
pop
pop
push
xchg
test
lds
add
in
jne
adc
sub
cmp
fcos
fldl
cmp
icebp
jns
jg
pushf
jp
ja
push
lds
cmpsb
mov
push
push
jbe
add
pop
add
mov
jno
cmp
scas
mov
or
bound
andb
gs
jns
mov
rclb
mov
int
mov
xchg
add
repnz
ficomps
xor
pop
fsubrl
and
addl
fstl
sbb
xor
aad
out
cld
popa
fs
pop
fistpl
and
movsl
fsubs
into
addl
push
fmuls
inc
add
and
in
aad
fstps
je
jl
int
shll
and
jle
out
arpl
add
adcl
dec
dec
stos
ror
loope
dec
stos
lock
add
dec
adcl
fabs
cmp
std
jp
aad
add
stc
stos
xchg
xchg
flds
push
push
push
push
dec
movsl
out
and
ds
leave
or
adc
jl
add
jl
arpl
jge
sub
mov
enter
icebp
push
inc
and
jo
lahf
pop
iret
mov
xchg
les
lods
cmpsl
sbb
add
cwtl
arpl
pop
fstpl
xor
cmp
or
pop
mov
lahf
push
and
mov
imul
jo
xchg
fnsave
fsub
mov
dec
cmp
jb
push
in
mov
xchg
mov
shr
cmc
push
test
aas
sbb
adc
scas
fwait
pop
lcall
pop
mov
cmpsl
popa
stc
ffree
insb
jle
adc
aas
push
push
pop
dec
jge
dec
jbe
sbbb
jmp
push
pop
scas
bound
in
daa
pop
pop
mov
in
repnz
add
aad
fucomi
inc
xchg
lock
or
fstpt
je
inc
js
gs
jno
jbe
jnp
ror
insb
pushl
mov
test
push
push
out
je
add
loop
inc
iret
mov
sbb
add
mov
test
push
xchg
add
mov
mov
push
dec
loop
inc
vandnpd
sti
mulb
cmp
xchg
jb
jno
dec
cmp
inc
push
sub
js
dec
pop
scas
jo
incb
int
sub
sarb
in
add
je
push
fbstp
das
sbb
mov
int
sbb
cmp
cmp
cld
orb
cmp
ljmp
inc
mov
pop
add
cmp
adc
nop
mov
jl
jbe
stos
dec
or
es
and
cmpsb
fstpl
stc
cltd
dec
fisttpll
lcall
cmpsb
xchg
test
gs
ja
cmp
addb
sarb
js
jnp
adc
xchg
stos
dec
add
push
mov
ja
test
mov
dec
fwait
aas
sbb
mov
divl
mov
add
fsubs
les
movsl
sub
xchg
pop
add
and
xor
int
stos
add
and
lods
inc
in
cmpsb
cmpsb
fistl
xchg
sub
xlat
mov
dec
test
cli
fadd
jo
test
cmp
in
mov
lret
out
sub
push
dec
scas
xor
in
into
pop
test
pop
ja
dec
pop
sahf
iret
cld
cmc
xchg
xchg
mov
ss
mulb
addl
cmp
jne
stc
sahf
daa
hlt
mov
in
repz
push
adc
or
fs
sahf
pop
pop
les
lcall
adc
cmp
xor
inc
orb
icebp
sar
lret
or
xor
or
ss
mov
mov
and
inc
xchg
push
jb
inc
enter
xchg
adc
and
pop
or
insl
cmp
cmc
and
inc
fsub
pop
out
add
addl
lcall
mov
push
jg
sbb
push
jge
add
inc
xlat
insl
mov
movsb
cld
outsb
in
in
and
fs
addl
xor
dec
dec
sbb
adc
outsb
nop
dec
outsl
stos
push
sbb
ficompl
daa
xchg
inc
fcmove
push
aam
sub
ficoml
fwait
in
gs
insl
mov
repz
mov
mov
push
movsb
xor
sub
in
mov
loop
loope
cmp
fnstsw
fldcw
adc
out
test
je
roll
in
xor
lea
loop
add
pop
out
movsl
ja
loop
fdivp
xchg
and
cmp
andb
lcall
cmp
lds
nop
or
dec
lahf
in
pop
and
mov
les
dec
insl
pop
fstps
dec
pop
cmp
test
push
sbb
in
cli
and
mov
cmp
mov
pop
push
push
scas
cmpsb
xor
call
test
pop
fbstp
jns
jnp
subl
sahf
nop
sub
les
mov
rorl
inc
xor
push
dec
jnp
mov
fnstcw
or
xchg
ja
and
in
aad
loop
or
loope
repnz
pop
outsl
les
ret
repz
pop
das
je
daa
push
out
pop
cltd
inc
je
aad
ja
cld
jecxz
fld
pop
iret
arpl
scas
dec
imul
popf
into
lahf
fs
cmp
cwtl
xchg
pushf
fstps
aas
pop
inc
push
adc
adc
or
cmp
pop
popa
add
and
dec
fistpl
orl
and
mov
fnstenv
cmovge
xchg
scas
je
and
dec
lods
xor
push
inc
push
ss
cmpsl
les
pop
add
push
fldl
lds
dec
xor
clc
clc
in
inc
mov
iret
in
dec
cmpsl
jne
mov
std
dec
adc
push
jmp
clc
push
lock
loope
and
pushf
dec
arpl
mov
test
movsl
cs
pop
mov
fwait
aam
sar
je
rolb
movsb
dec
adc
cmpsb
je
aam
cmc
mov
cmpsl
push
inc
push
mov
movsl
icebp
imul
call
mov
mov
sbb
jp,pt
jl
int
adc
aam
sti
cmc
arpl
inc
aad
jge
rorb
iret
ja
fsubs
les
fsubs
fcoms
sbb
lock
lcall
jp
jle
mov
fists
xor
dec
mov
rcrl
pop
outsl
sub
cld
mov
mov
outsl
inc
jmp
fs
jno
test
mov
pop
int
push
cltd
daa
ss
fadd
dec
jp
icebp
xor
inc
dec
outsl
pop
ss
fcoms
or
cmp
jb
jno
sbb
movsb
mov
xlat
xchg
divl
icebp
outsb
jmp
popf
cmpsl
add
fstps
jno
pop
enter
dec
sub
ja
cld
lods
mov
pusha
arpl
mov
je
dec
cmpsl
inc
push
pop
aam
test
sbb
jnp
xor
pop
pop
mov
pusha
fwait
cmp
pop
jecxz
and
push
fistl
lods
loop
mov
subb
mov
shl
inc
and
jne
fs
cld
dec
bound
ret
fwait
or
sub
jb
xor
mov
xchg
push
ja
jb
jo
hlt
es
in
nop
stos
inc
jbe
and
mov
loopne
mov
popa
scas
adc
pushf
jns
repnz
adc
outsb
sub
xchg
lcall
aaa
jb
mov
mov
lcall
ja
stc
sar
mov
sti
lds
andb
adc
pop
addb
rcll
je
imul
or
lcall
je
adc
dec
iret
out
movsb
cmpsb
mov
mov
js
out
and
rcrb
sbb
aas
push
sbb
mov
sub
pop
shll
imul
pop
dec
push
pushf
roll
faddl
scas
cli
jnp
subl
pop
sbb
les
sub
push
mov
clc
push
sbbb
lods
push
sbb
sbb
int
xor
iret
lock
mov
aad
or
push
int3
mulb
xchg
arpl
out
clc
push
data16
jl
aam
scas
addr16
push
jg
push
call
lahf
push
cld
pop
pop
cli
aas
xchg
arpl
mov
push
mov
frstor
jg
arpl
fwait
nop
sub
inc
das
adc
inc
mov
mov
lret
sbb
scas
scas
sub
ss
inc
and
push
push
lds
jne
push
fnstsw
int3
push
imul
les
push
xor
xchg
jo
or
push
push
and
fs
pop
adc
dec
pop
popa
cmpsl
cmp
fwait
dec
xor
arpl
lods
jae
outsb
pop
lds
stos
xchg
std
xor
dec
negb
rorl
pop
aam
cmp
ss
adc
mov
sbb
xchg
lea
fs
cld
cwtl
add
insb
mov
jmp
inc
cmpl
data16
adc
or
cmp
jno
cs
rcr
pop
and
bound
dec
mov
fwait
sbb
dec
and
scas
insb
ret
fists
cs
jns
mov
jp
lds
adc
aam
loope
test
sbb
mov
rcll
mov
lock
lahf
aam
nop
pop
scas
cmp
out
movsl
mov
pushf
mov
dec
test
add
mov
lcall
mov
nop
ret
or
fidivrs
aaa
pushf
out
cmp
jnp
mov
jg
popa
jle
mov
aam
std
or
repz
out
xchg
xchg
int3
mov
inc
jb
dec
js
mov
stos
cmp
jmp
sti
loop
fwait
sub
fcmovne
xchg
adcb
fldcw
lock
cmp
push
cmp
mov
dec
in
movsl
push
cmp
call
sub
scas
dec
in
ficoml
fnstenv
andb
loop
movsl
fdivrs
xchg
and
adc
dec
sub
jae
adc
pop
sti
out
jge
xchg
test
mov
in
rcrb
fstps
hlt
ja
and
jge
aaa
and
ds
arpl
pop
or
addr16
out
movsb
pop
mov
ja
push
adc
fmull
scas
hlt
dec
jno
fidivrs
lea
mov
divl
scas
push
mov
es
xor
stos
out
push
mov
test
std
cli
cmpsl
cmc
shll
ret
cmpsl
loopne
inc
stc
loope
jnp
int
dec
push
scas
scas
mov
mov
cmp
pop
push
mov
pop
mov
mov
cmp
push
rclb
add
ds
mov
daa
fdivrl
rclb
test
fcmove
mov
mov
in
mov
jg
jnp
xlat
xchg
jo
dec
cmp
or
inc
push
pop
arpl
fidivrl
out
fidivl
out
pop
int
test
in
jae
xchg
and
jmp
test
xor
or
scas
fbstp
cmp
xchg
aam
push
push
mov
push
add
lea
into
insb
xor
pop
sarb
rorb
add
cmp
xor
jle
sub
addr16
push
icebp
sbb
imulb
lret
push
gs
addr16
ret
pop
je
pop
and
push
pop
fistpl
xor
jns
xchg
pop
cmp
pop
subb
adc
jbe
cmp
popa
push
xchg
sbb
push
lret
xchg
jo
adc
inc
pusha
fs
loope
bound
imul
cmp
jnp
jmp
bound
out
xlat
adc
or
or
or
out
stos
dec
mov
dec
mov
or
js
adc
hlt
fwait
lea
stos
out
int
les
jo
mov
adc
stos
cmp
sar
sarl
xchg
imul
je
repz
pop
cmp
js
dec
scas
mov
jb
dec
cmp
and
adc
rorl
pop
aad
mov
ljmp
addr16
mov
push
or
xchg
and
popa
orl
push
xlat
fldcw
push
into
pop
mov
loop
fs
sbb
test
cltd
fldenv
insl
dec
jne
scas
int
dec
test
xchg
mov
ret
fsubr
xchg
xchg
jmp
mov
xchg
inc
jle
pop
in
cmpsl
lods
psllw
pushf
loopne
adc
lods
iret
aas
pop
dec
dec
shlb
jne
xor
cs
xchg
push
mov
and
push
inc
loopne
or
jb
mov
mov
adc
mov
movsb
mov
rcll
shll
mov
jae
push
lcall
out
cwtl
insb
adc
movsl
inc
adc
loopne
sarb
fmuls
test
cwtl
xchg
sub
cmp
repnz
jp
rcll
cmpsb
loop
mov
adc
mov
gs
jmp
subl
scas
sub
jbe
xchg
int3
lret
cmp
mov
add
aam
dec
dec
pop
cmc
shl
mov
flds
cmp
dec
dec
jp
xorl
push
xchg
popa
lret
mov
and
or
nop
push
cmp
push
sub
repz
push
push
rcrb
push
repnz
cmp
out
aad
imul
push
jb
flds
inc
js
jge
and
inc
mov
lods
inc
mov
cli
sub
cmp
scas
js
arpl
xchg
dec
push
mov
fsubl
test
lret
dec
dec
xlat
aam
stc
dec
adc
fs
lock
lods
mov
mov
jg
testw
fdivl
jo
xor
pop
fs
pop
jecxz
jno
pop
sbbl
sbbb
sub
rorb
sub
push
aam
mov
js
iret
sbb
sub
pop
mov
popa
jnp
loope
bound
in
mov
jae
add
push
inc
push
or
dec
and
add
and
cmp
xchg
push
dec
push
jo
cmp
in
aas
or
insl
dec
subl
inc
dec
mov
mov
xchg
lahf
dec
inc
rorl
jb
popa
daa
js
fldt
fstl
adc
leave
cwtl
dec
xor
inc
mov
int3
mov
ja
lds
cltd
enter
arpl
adc
jbe
lahf
sub
inc
into
imul
push
sbb
push
les
cmp
fidivrl
or
and
filds
int3
jbe
fmuls
push
and
jb
cld
adc
pop
movsb
mov
mov
scas
packuswb
cmp
fs
jnp
jae
inc
jne
pop
and
movsl
inc
int
xor
add
cmp
pop
notb
xor
adcl
out
jbe
shrl
andb
pop
xlat
repz
and
movsb
mov
cmp
push
leave
mov
int3
and
adc
mov
out
nop
inc
mov
popl
fisttpll
push
scas
add
out
or
in
fsts
ret
and
pushf
stos
andl
daa
dec
cmp
dec
sbb
xchg
mov
pop
mov
adc
mov
ds
and
xchg
dec
js
out
xor
mov
outsl
loopne
scas
sbb
sbb
daa
pushf
scas
adc
fs
mov
dec
xchg
sbb
stos
mov
pop
andb
push
and
in
mov
inc
dec
mov
mov
hlt
lods
mov
fwait
or
lret
aaa
sub
cmp
and
cmc
gs
jbe
fsubr
push
mov
mov
sbb
sub
pushf
pop
data16
dec
xchg
xchg
dec
mov
cmp
cltd
push
fisubs
fs
dec
xchg
pop
and
cmova
sub
hlt
adc
xor
dec
shlb
dec
push
cmp
lcall
iret
mov
fs
movsb
dec
aad
iret
dec
aas
jp
mov
jnp
push
lret
aaa
cmc
shl
dec
out
les
mov
out
sti
clc
xchg
ja
mov
push
cmc
jns
test
add
in
nop
dec
lcall
iret
xor
addr16
popa
cmp
fsubs
cwtl
enter
int
cmp
fistl
sti
jne
ss
andl
sbb
fadds
push
lock
pop
dec
push
push
enter
andb
mov
mov
push
dec
push
popa
imull
jmp
fdivs
clc
imul
je
pushf
dec
shrl
pop
loopne
push
inc
fwait
push
std
push
jmp
pop
pop
mov
fnstenv
dec
pop
lock
push
pop
or
or
pop
inc
xchg
sarb
into
inc
popa
push
dec
push
call
jl
push
dec
lds
adcb
dec
push
or
push
jb
xchg
xchg
fcomps
out
bound
sub
sarb
mov
stos
push
sbb
jo
jno
or
cmp
imul
sbbl
je
sbb
jbe
add
adcb
push
xchg
js
jno
enter
mov
push
adc
push
js
sbbl
jb
lock
xorl
cmpl
jno
icebp
pop
movsb
imul
mov
jno
pop
xchg
aam
loopne
sbb
pop
pop
iret
fmull
dec
xor
add
xor
pop
pop
mov
stos
cli
xchg
mov
mov
pop
jae
fnstsw
jne
mov
xchg
bound
dec
jb
push
jb
adc
pop
mov
or
jb
mov
sbb
stos
imul
fs
jno
jb
xchg
in
popa
mov
add
or
pop
jg
cmp
xor
cwtl
sbbb
add
gs
mov
shlb
push
ret
push
orb
mov
adc
je
test
jno
fcoml
je
mov
mov
cwtl
stos
or
aad
or
mov
pop
popa
js
lcall
leave
and
dec
xor
imul
ss
push
pop
test
in
cmpb
cmpsl
pop
mov
out
or
dec
scas
hlt
jo
mov
ficomps
adc
stc
in
pop
jecxz
test
fdivs
imul
or
pushw
push
mov
and
fstl
mov
rcr
xchg
adc
iret
sub
or
pop
insb
jp
cwtl
mov
jecxz
xor
pushf
les
cmp
into
js
pop
adcl
mov
pop
mov
jno
iret
mov
jo
daa
cld
cmp
cmpsl
push
js
or
cmp
cli
xlat
fcomps
lock
aaa
pushf
or
std
add
sarl
enter
js
or
fcoml
imul
mov
hlt
daa
adc
push
cmp
pop
xchg
fsubrp
flds
xchg
clc
add
jb
stc
mov
xor
mov
cmp
imul
xchg
or
inc
mov
jns
mov
rcrb
jb
xchg
sub
fcomps
lea
lds
cmp
jns
sbb
fcomps
add
adcb
ret
rcl
jg
movsl
ret
pop
jno
cmp
sub
sbb
andb
scas
arpl
cmp
or
mov
dec
inc
jne
enter
push
loopne
aas
in
pop
jnp
in
cwtl
insb
inc
cmp
and
mov
sarl
pop
jns
in
mov
icebp
pop
xchg
popf
pop
xchg
subb
or
fs
call
clc
fistl
aam
mov
andb
mov
into
and
xchg
fwait
push
dec
popf
pop
cmp
adc
sub
test
pop
pushf
shlb
pop
sbb
test
pop
pop
mov
lods
jo
rcrl
cmp
pusha
insl
inc
ja
insl
clc
push
pop
add
jl
int3
add
mov
mov
sub
mov
jecxz
pushf
push
jns
sbb
jmp
jmp
test
outsb
mov
nop
pushf
jno
and
jb
mov
fwait
or
jno
pop
repz
into
mov
adc
jle
cmp
sbbl
shrl
or
mov
test
dec
cmp
mov
adc
mov
mov
push
sub
rorl
jecxz
push
sub
pop
sub
fcmovnu
lds
cmp
fsubs
iret
or
and
adc
mov
lods
mov
incl
adc
pop
pop
stos
std
ja
movsbl
mov
mov
lahf
xchg
sub
push
out
fadd
jne
sbb
jl
popa
fidivrs
jg
and
lret
repnz
mov
jb
dec
lret
hlt
lods
xchg
imul
xchg
add
cwtl
scas
sbbb
pop
xchg
pop
xchg
fstpt
into
popa
loop
daa
fimull
fidivrl
mov
xor
sahf
adc
in
scas
stos
fwait
cmpsl
mov
repnz
dec
cmp
ss
int
insl
push
les
dec
hlt
fldt
adc
fs
mov
insl
jno
adc
pop
aas
or
mov
repz
imul
adc
push
jno
test
dec
call
xor
jnp
les
outsb
inc
xchg
mov
xchg
aam
movsl
dec
pop
inc
fldcw
es
push
add
dec
in
in
out
les
cli
pusha
xor
push
ret
push
inc
hlt
icebp
pop
negl
push
dec
push
push
lds
dec
test
cmc
movsb
push
sub
cmp
add
sti
out
xor
sbb
lds
lds
inc
gs
les
mov
adc
adc
cmp
jns
ret
mov
in
add
mov
ret
sbb
iret
adc
in
ror
rorl
jmp
ret
xlat
sbb
fldenv
lds
cmp
insb
les
inc
aaa
jns
in
je
loope
jne
dec
mov
lea
dec
loop
shlb
xor
inc
loopne
movsl
xor
mov
fwait
inc
dec
in
haddps
xor
add
or
sbbb
sbb
andl
gs
idivb
push
inc
orb
push
pop
aam
popa
xchg
xchg
jge
add
faddl
inc
repnz
fmull
dec
push
popf
daa
fisubl
mov
addr16
sahf
test
imul
fwait
dec
pushf
and
add
test
fmull
sub
push
mov
add
imul
inc
lods
fwait
dec
adc
inc
fdivs
jge
mov
adc
push
into
add
dec
jge
cmpsb
popa
les
jg
hlt
aam
mov
add
sbb
mov
and
ja
mov
outsb
push
jae
mulb
cli
sub
addr16
cmp
addr16
mov
mov
cmp
xchg
test
test
sbb
mov
push
aas
jb
xor
and
popa
xlat
pop
fstl
pop
xchg
rclb
sub
scas
push
cwtl
scas
out
pop
pop
popa
std
mov
call
push
jb
bound
mov
rolb
lret
cmp
xlat
mov
sbb
scas
pop
mov
popa
shll
xchg
fs
daa
jle
inc
insb
xchg
push
popa
push
fimuls
in
push
or
sub
dec
stos
adc
aas
jae
movsb
pop
outsl
mov
mov
outsb
xchg
lods
out
pop
cmpsb
mov
ss
cmp
pop
into
popa
into
mov
int
fwait
test
inc
jmp
test
push
into
push
lds
rorb
lret
mov
push
aad
inc
in
arpl
les
cld
cmpsl
mov
sti
call
or
xorb
punpcklwd
hlt
dec
sbb
add
or
sbb
out
and
fcoms
inc
sbb
dec
inc
jb
cmpsl
fdivs
xchg
mov
out
fldenv
jle
sete
add
push
xor
scas
fwait
aas
outsb
mov
pop
push
test
dec
and
sub
mov
mov
jne
mov
shlb
popf
test
stc
test
data16
test
adc
add
imul
cmp
nopl
js
fadds
and
scas
mov
loop
jl
or
psrlw
movsl
xor
mov
fistl
dec
xchg
mov
outsl
mov
or
mov
push
or
push
repnz
sub
cmc
fldenv
dec
xchg
bound
inc
cmp
xchg
pop
shrb
sbb
mov
inc
mov
xchg
adc
xor
sub
add
movsl
and
jno
sub
lret
je
lahf
fs
mov
movsb
jbe
std
inc
shlb
adc
mov
cmp
add
test
adc
add
sar
addl
call
add
mov
mov
xchg
shlb
mov
out
adc
inc
xchg
scas
les
outsl
mov
scas
fstp
into
clc
fldenv
int3
shlb
mov
out
sub
shlb
jb
fwait
xchg
mov
popa
sbb
fs
dec
dec
mov
jl
pop
pop
push
mov
push
jmp
dec
jecxz
bnd
pop
mov
push
jmp
cs
push
push
mov
jns
push
addr16
ds
sub
popa
cmp
mov
negl
mov
adc
std
repnz
cmp
cmp
inc
jb
lds
push
out
mov
push
fcmovne
insb
xor
inc
mov
out
jae
vmovq
jb
adc
movsl
les
sbb
jns
lods
adc
int
int3
dec
in
sahf
std
aaa
xor
push
test
inc
mov
mov
lcall
sbb
xor
les
es
repnz
int
jle
outsb
xor
jp
pusha
rclb
test
les
fmull
push
sbb
jb
movaps
fwait
dec
popa
and
lds
cmp
sti
jg
dec
jecxz
pop
sbbl
fimull
into
xor
pop
mov
iret
repnz
popf
jne
mov
or
jne
inc
add
pop
add
or
incl
outsl
cmc
test
imul
fs
outsl
fstps
jb
data16
out
xchg
aam
xchg
dec
mov
xchg
jp
cmp
jno
fisubl
out
addl
loope
shll
add
movsb
pop
push
mov
pop
adc
jne
pusha
mov
add
in
fs
arpl
jne
cmp
js
sbb
xchg
out
arpl
insb
movsb
push
test
lcall
adc
adc
sub
scas
push
xchg
pop
mov
int
test
fincstp
mov
les
mov
mov
test
int3
jmp
mov
dec
rorb
loopne
mov
mov
dec
jb
inc
cmc
int
ljmp
pop
mov
test
push
pop
out
ja
iret
fs
lock
leave
nop
lret
mov
add
or
push
gs
mov
mov
pusha
xchg
lods
cmpsl
mov
repz
adcl
fwait
dec
push
loope
mov
jecxz
sbb
cmp
sbb
test
mov
insl
nop
cmp
shll
in
daa
xchg
aas
insb
mov
add
pop
nop
jnp
and
jne
lock
mov
arpl
cmpsl
jno
in
xor
test
shrb
pop
cli
in
adc
xchg
sar
mov
fs
pop
xor
jp
sbb
push
sbb
mov
and
rorl
cmpsb
int3
int
dec
lods
mov
pop
fiadds
cltd
fists
push
adc
in
aaa
mov
out
fdivr
sbb
es
and
push
fsubr
insl
mov
fs
js
jl
adcb
adc
or
jne
ss
js
fwait
or
mov
adc
scas
sbb
lock
pop
mov
dec
out
push
out
shll
cmp
push
dec
xor
cmpsb
cmpsb
jnp
mov
mov
inc
in
push
push
mov
mov
pop
imul
and
lock
out
jns
nop
xchg
push
out
inc
push
sbb
call
inc
loopne
lea
cli
sbb
daa
mov
add
cmp
test
cwtl
mov
fstpt
mov
cvtps2pd
imul
xor
movsl
xchg
bound
mov
and
pop
xorb
stos
pop
cmp
imul
pop
bound
sub
pop
push
push
mov
xchg
int
lcall
cmpsb
repz
jmp
addr16
dec
mov
sbbl
jmp
xor
neg
imul
inc
or
nop
mov
gs
mov
nop
rcrb
cmp
es
xor
mov
jae
arpl
mov
cwtl
sbb
test
dec
pop
cmpb
dec
andl
pop
cmc
loop
push
mov
mov
lods
or
jg
dec
leave
ja
outsl
nop
sbb
sti
pop
iret
outsb
imul
pop
popa
jno
ja
lret
shll
lea
xor
popf
push
mov
cli
xor
hlt
loope
mov
inc
roll
fs
adc
test
in
je
mov
stos
outsb
je
cmp
xchg
int
aam
cmp
fildl
hlt
xor
loopne
mov
cmpsb
jp
pop
push
les
push
or
setne
mov
push
lahf
pop
inc
lods
aad
sbb
jb
imul
mov
cli
lock
mov
outsb
sub
popa
push
cmpsb
icebp
mov
stos
xchg
xchg
sbbl
in
and
dec
adc
mov
cmp
les
popa
adc
adc
sbb
mov
mov
mov
loop
pop
xor
pop
cmp
in
cmp
or
and
fsubl
lods
js
loopne
pop
push
push
cmp
dec
jb
push
scas
mov
imul
bound
sarb
lahf
sub
jbe
fidivl
popf
xchg
mov
dec
and
jge
inc
xchg
sti
sbb
mov
jp
divb
mov
mov
rcrl
mov
popa
andb
aaa
test
fstl
dec
ss
add
inc
cwtl
and
hlt
pop
and
enter
mov
sbb
mov
and
das
stos
in
jge
mov
pop
js
stos
sub
lods
cs
imul
mov
test
dec
mov
sahf
adc
jns
jle
sub
dec
fs
ss
fists
movsb
bound
xor
jl
xor
pusha
bound
leave
mov
jo
xchg
dec
or
call
into
sbb
adc
sbb
cmp
push
xlat
push
xchg
mov
jge
call
jmp
mov
jo
xchg
cld
add
sbb
fwait
pop
pop
sbb
xchg
test
mov
jne
cmpsb
les
sbb
imul
xor
adc
mov
sti
and
xchg
sbbb
fs
stc
pop
xchg
and
jecxz
jns
jb
sbb
fsub
aam
gs
mov
jl
std
imul
adc
scas
adcb
in
or
pop
inc
sub
mov
sub
adc
push
rcr
sbb
cmp
insb
mov
fs
lcall
fildl
add
jae
pop
hlt
sbb
pop
xor
out
orb
pusha
aam
and
dec
xchg
mov
out
cmp
jle
push
sub
xchg
xchg
pop
add
add
xchg
fs
fisubl
loopne
pop
aad
add
les
mov
push
ja
std
add
xchg
out
lds
adc
cli
loope
cmp
les
or
mov
jae
push
push
pop
push
jb
fdiv
leave
inc
push
int3
imul
mov
insl
or
in
pop
fstpl
outsb
cmpsb
add
rcll
xor
or
mov
inc
add
and
andb
mov
jb
fsubs
outsl
lret
loop
dec
adc
mov
inc
xor
xchg
test
enter
add
int
sub
cmp
push
test
scas
mov
xor
aam
mov
mov
push
jle
xchg
mov
jno
adc
push
xlat
or
or
cmp
addb
mov
cmpsl
icebp
fstp
mov
das
mov
xchg
cmp
jg
jl
and
int
lods
sbb
inc
rorl
cmpsl
les
jg
ljmp
pop
push
lds
pop
das
push
lret
scas
mov
nop
jne
or
aas
aam
cmp
and
mov
push
mov
push
lods
cmp
std
jecxz
insb
ret
xor
mov
mov
jbe
fs
xchg
in
sbb
jge
mov
xchg
pop
inc
jno
jg
mov
mov
mov
mov
mov
inc
sahf
dec
mov
xor
mov
out
loop
enter
add
pop
lahf
push
popa
mov
mov
mov
insb
les
cmp
mov
es
clc
push
adc
arpl
rcrl
mov
inc
inc
test
imul
mov
xchg
lods
dec
cmp
lret
ret
xchg
add
mov
lea
pop
in
js
jb
xor
das
sbb
fisubl
dec
mov
cmp
and
cltd
and
sub
bound
iret
dec
mov
adcb
jne
shl
push
sbb
cltd
push
in
pop
mov
shll
dec
imul
jp
cli
cld
arpl
dec
das
lret
imul
jne
jae
div
and
lock
mov
andl
call
xor
mov
mov
mov
dec
push
ja
and
jne
dec
xor
xchg
imul
pop
aam
call
outsl
push
out
pop
aam
dec
roll
pop
mov
fcmove
das
imul
add
sub
test
cmp
test
scas
mov
jne
cmp
stos
je
test
out
xchg
push
idivl
fcmovb
dec
imul
jb
mov
mov
and
stos
inc
int3
push
jp
popa
inc
call
mov
and
lock
mov
mov
xchg
or
sbb
out
jb
decb
hlt
pop
fcoms
ljmp
imul
fdiv
and
or
push
and
js
clc
mov
shll
outsb
mov
cmp
cmp
nop
lock
imul
bnd
pop
bound
cs
jae
xor
lds
cltd
push
dec
xor
sub
cmp
out
mulb
sahf
lock
pop
fldl
movsb
lock
movsl
mov
out
dec
addb
dec
or
shl
jge
popa
into
out
mov
cmc
gs
xor
pushf
gs
fwait
orb
dec
sbb
daa
push
jns
jl
aad
mov
push
mov
adc
mov
cmp
clc
cmp
cmovae
mov
sarl
out
inc
cltd
lds
mov
movsb
pushl
sbb
test
adc
cmpsb
cwtl
addr16
xchg
icebp
call
sub
les
cmp
xor
push
cwtl
stos
mov
flds
mov
ficomps
jmp
pop
in
aas
xor
lahf
dec
mov
inc
push
sub
test
movl
or
adc
ljmp
sub
xchg
int3
adcl
gs
idivl
mov
jnp
push
jno
ja
scas
xchg
jge
loope
ret
bound
pop
and
movsb
outsb
fwait
pop
jnp
cmpsb
jl
in
loopne
mov
insb
push
loop
mov
push
sarl
dec
and
inc
lretw
fnstenv
scas
into
or
out
jecxz
sti
inc
push
fdivs
jnp
add
dec
call
arpl
pop
and
and
xchg
lahf
xchg
stc
jp
lahf
or
fsqrt
and
leave
cmp
jnp
cmp
lods
sub
or
jp
adc
psllw
fwait
dec
mov
or
fmul
lcall
push
push
outsl
iret
xchg
and
pop
mov
pop
test
leave
add
push
push
addl
insl
fisubl
add
sbb
sub
pop
jb
addr16
in
mov
cmp
mov
in
pop
lcall
and
jnp
mulb
arpl
sbb
in
mov
pop
in
cmpsb
sahf
jo
cmp
cmpsb
movsb
outsb
fstpt
scas
dec
xchg
xlat
sbb
mov
out
mov
xchg
xchg
jo
push
adc
lcall
mov
add
push
pop
out
neg
shrb
dec
adc
dec
inc
add
or
mov
sarb
js
lods
loop
jb
pop
mov
mov
xor
and
mov
mov
add
mov
mov
pop
push
lds
mov
fisubl
nop
and
test
dec
test
xchg
dec
mov
inc
loope
sub
jne
and
out
jnp
push
icebp
mov
push
fucomip
push
mov
add
lds
lret
xchg
andb
dec
popa
fmull
dec
jns
leave
shll
mov
xchg
mov
je
push
jge
lods
xchg
pop
ja
jnp
test
cmpsb
mov
das
mov
insb
mov
adc
mov
iret
andl
call
cwtl
adc
cmp
adc
mov
dec
test
or
mov
aad
mov
fildll
lods
cmc
inc
xor
aam
icebp
js
insb
cmp
ret
pop
cmp
sbb
mov
jge
dec
xchg
fnstenv
cmp
call
jb
lea
mov
dec
xchg
xorl
jae
enter
add
imul
icebp
cld
aam
mov
test
int3
lret
push
pop
mov
fiadds
out
enter
bound
int3
loop
fldcw
repnz
out
jno
int
pop
cmp
fs
pop
mov
fs
pushf
xor
push
movsl
stos
sub
mov
or
scas
xor
lods
pop
mov
dec
jmp
mov
xor
mov
mov
add
int
dec
cld
sbb
aas
jnp
leave
add
into
fidivrl
gs
mov
push
push
iret
xor
push
in
cmp
out
inc
pop
jne
cmpsb
cmpb
sbb
jmp
mov
mov
aas
loop
aaa
fs
in
lock
mov
push
xor
repz
out
scas
cwtl
lret
adc
push
fiadds
rcl
xor
inc
pop
icebp
xchg
lahf
bt
xor
adc
add
call
lahf
cmpl
push
fnstenv
cmpl
add
lcall
add
mov
adc
fsubr
mov
dec
mov
adc
dec
in
lods
fwait
enter
xorb
addl
xchg
add
fistl
scas
sub
xchg
mov
inc
mov
lock
les
aad
push
dec
sbb
cltd
adc
jp
mov
je
iret
repnz
int
mov
lahf
dec
in
and
aaa
scas
or
fs
call
jo
sub
pop
decb
jg
adc
mov
outsl
ret
mov
jo
xor
inc
pop
cmp
pop
xchg
cmp
out
sub
ljmp
push
test
xor
stos
sbbb
mov
push
push
inc
adc
scas
inc
es
push
out
dec
icebp
lret
jno
and
out
push
sbb
les
dec
jo
dec
or
cmpsl
cwtl
int
jmp
pop
mov
aam
jns
or
imul
lock
je
pop
outsl
cltd
rorb
je
rcll
jne
cltd
test
xchg
into
push
jg
adc
pusha
loopne
dec
mov
pop
je
push
push
lahf
pop
push
push
add
cmp
jo
and
xchg
mov
mov
aam
jmp
push
lahf
xchg
icebp
stc
rclb
cs
xor
push
mov
dec
out
dec
imul
movsb
jnp
jae
mov
lods
aam
in
cli
inc
jbe
call
lods
enter
xchg
xchg
je
insb
dec
cmpsb
mov
ret
xchg
or
push
push
test
push
mov
negl
idivl
cltd
pop
adc
mov
out
jno
arpl
cwtl
das
adcl
push
negb
insb
and
je
mov
sub
sbb
shll
cwtl
popa
adc
out
sti
loope
addb
cmp
mov
fisttpl
mov
xor
aas
pop
sub
addr16
xchg
and
gs
pop
and
mov
push
test
lods
jns
and
test
sti
sbbb
ret
push
jecxz
mov
push
and
test
sub
sub
inc
xor
pop
test
mov
jmp
ljmp
sahf
xchg
sbb
lods
fisubl
ss
addr16
xor
bswap
arpl
xorl
jne
js
mov
ficompl
aam
jg
mov
sub
and
pop
cmpxchg
pop
add
pop
push
add
in
xor
mov
mov
xchg
ljmp
into
test
mov
push
push
mov
es
divb
mov
cmc
dec
les
mov
jg
push
dec
les
adc
stos
inc
sub
mov
cwtl
mov
std
pushf
ljmp
repnz
es
sbb
dec
sub
push
jo
fstpl
dec
mov
mov
pop
lret
jne
mov
mov
push
mov
jg
sbb
js
jge
gs
iret
push
xchg
mov
push
pushf
add
je
or
mov
cmp
int3
jno
jne
mulps
lods
movsl
repnz
dec
pusha
mov
cmpsb
pop
and
insl
popl
gs
jns
into
aam
jae
mov
adc
aad
fadds
mov
notb
pushf
mov
aad
out
jno
xchg
int3
mov
or
and
cmp
dec
mov
loopne
sbb
xchg
stos
jp
or
jg
leave
movsl
mov
pop
pop
aam
loopne,pn
xchg
cmp
mov
loopne
les
rorb
mov
fldcw
mov
das
js
sub
movsb
push
and
push
cmpsl
into
add
das
sbb
scas
mov
push
sbb
rclb
jl
mov
ret
push
mov
cmp
push
push
xchg
arpl
insl
xchg
mov
pop
mov
push
hlt
pop
xor
repnz
mov
mov
mov
xor
mov
and
sbb
xchg
int3
fsubr
push
xor
pop
fildl
dec
cmc
cwtl
fldenv
xchg
mov
shl
xlat
mov
cmp
jmp
fnsave
adc
fnsave
lret
or
divb
aad
lock
jecxz
pop
lret
pop
inc
or
push
nop
pop
inc
xchg
mov
mov
xor
fildl
call
popa
cld
mov
ljmp
xchg
mov
cmpsl
cld
inc
lcall
in
loop
ret
ja
mov
dec
ror
jbe
mov
orl
jmp
jge
inc
pop
fidivl
call
inc
and
bound
cmp
test
xor
in
js
xlat
add
cmpsl
test
jo
sbb
jo
jne
cmp
pop
jno
cmpsl
test
or
xchg
mov
jp
pop
jbe
iret
sub
rcr
cmp
les
out
pop
cmp
xchg
adc
xorb
loope
push
jl
pop
push
and
movsl
stos
icebp
add
outsb
pop
int3
arpl
aaa
adc
sub
and
cli
lods
movsl
sub
xchg
dec
pop
push
inc
jne
mov
jne
push
scas
and
push
cmpsl
jo
mov
in
mov
inc
mov
push
imul
push
jae
jo
addb
push
dec
pop
jo
icebp
push
fcomps
dec
andb
sbb
jp
jg
adc
cmp
pop
xchg
push
pop
iret
xor
arpl
jne
and
sbbb
and
cmp
std
lcall
loope
and
push
mov
and
mov
and
js
xchg
cltd
adc
jl
addl
cli
subl
mov
adc
aaa
and
je
sub
push
lds
jg
add
jg
adc
sti
sub
fnstcw
push
repnz
jo
push
cmpsl
cld
sub
cmp
test
cmpsb
movq
fistps
mov
dec
iret
sarb
and
lock
icebp
mov
cmpsl
subb
xchg
pushf
mov
pop
dec
mov
loop
mov
into
jae
pop
push
incl
mov
jl
xchg
lahf
push
cmp
add
cmpsb
xor
insb
xor
cmp
jo
repnz
mov
cmp
pushf
adc
cmp
out
mov
cmp
int3
mov
popa
jle
mov
loopne
stos
movsl
xor
and
mov
xchg
imul
jmp
aam
push
or
subb
cmp
lcall
pop
cmpsl
lea
push
xchg
push
cmp
add
dec
adc
dec
test
xor
ffree
mov
ja
enter
jae
pop
add
mov
loope
loopne
cmp
movsl
push
and
adc
jmp
jbe
add
xor
cmp
sbb
pop
movsl
ret
scas
jae
pop
add
xchg
push
fs
jno
dec
sbb
push
lahf
fst
push
jno
xchg
dec
push
push
adc
mov
xchg
push
aam
and
push
push
sub
cmpsl
or
movsl
sub
cmpsl
imul
cmp
pop
mov
les
add
xchg
xlat
icebp
inc
jp
fwait
mov
gs
dec
fdivrs
xchg
cmp
sub
fildl
shll
jge
les
loop
pop
popa
daa
sbb
scas
inc
inc
xchg
subb
pop
xchg
jnp
xor
out
test
cmp
fcoml
adc
into
add
sub
scas
movb
pushf
sbb
shl
sub
sub
pop
or
jg
pop
cmovp
mov
xor
and
lea
lds
cmpsl
dec
out
or
xchg
adc
cmp
cmp
in
addr16
mov
scas
sbb
jl
sub
outsl
add
rolb
arpl
pop
pop
cwtl
adc
cmp
outsl
cli
jnp
es
sbb
lock
pop
daa
out
aas
ror
sub
and
int
iret
aam
cmp
add
xchg
nop
out
xor
cmpsb
nop
lret
xchg
popa
in
mov
xchg
adc
outsb
and
aam
sahf
push
in
or
lods
int
lods
sahf
pop
pop
mov
popf
jecxz
paddsw
iret
adc
inc
bound
aaa
jae
js
fisttpl
aaa
mov
jno
repnz
fs
out
mov
pop
aam
inc
cwtl
push
cmp
sub
pop
push
mov
mov
insb
mov
cmc
xchg
pop
or
inc
and
fldl
xchg
int3
mov
imul
bound
movsb
aam
xchg
arpl
insb
mov
jnp
mov
int3
add
push
aas
add
or
ret
inc
fsts
xlat
dec
push
sub
push
mov
pop
js
and
pop
ret
pop
xor
bound
call
bound
and
push
add
std
jb
popa
xchg
sbb
scas
and
fnsaves
in
xor
mov
popf
pop
add
outsb
jbe
pop
pop
mov
inc
xchg
dec
jne
das
in
sbb
les
push
or
xchg
jo
push
fiadds
fstpl
push
adcl
popa
in
cmpsb
ja
or
mov
les
inc
sub
lds
jno
push
jp
mov
stos
lahf
add
unpcklps
sub
mov
or
aad
jno
sbb
sub
std
push
addr16
xchg
or
ss
mov
ret
test
add
movsb
cmc
in
adc
add
rol
sbb
test
jp
ja
and
sbb
pop
pushl
mov
add
pushf
imulb
add
xchg
arpl
jo
les
shll
das
cmp
fs
xor
xchg
out
jnp
jl
xor
or
insl
cmp
aas
pop
adc
adc
dec
inc
arpl
andb
gs
fldcw
fldt
inc
cmpsb
cmc
pushf
sbb
cmp
fsubrp
sbb
fs
cwtl
jnp
add
dec
insl
bnd
jecxz
or
push
mov
test
mov
mov
add
rol
jp
cmpsb
xor
xchg
aas
pop
fidivrs
lahf
or
inc
add
icebp
cltd
inc
and
fs
fnstcw
fs
jae
lock
mov
xor
jo
popw
xchg
stc
add
add
adc
clc
mov
pop
xchg
push
mov
in
sbbb
popa
aam
xor
cmpb
filds
sbb
xlat
repnz
int3
cmpb
mov
push
jnp
les
xchg
lea
push
je
fisttpl
cmp
inc
jbe
adc
jbe
fistl
bound
pop
sub
jecxz
outsb
aad
arpl
push
cmp
mov
sbbl
mov
mov
ds
mov
lock
and
ss
add
fimull
neg
mov
pop
fidivrl
dec
arpl
in
adc
bound
aaa
mov
mov
je
ja
xor
nop
mov
push
cs
mov
push
inc
mov
pop
rorl
cmp
dec
insl
adc
imul
pop
popa
and
ror
dec
fcompl
push
adc
iret
adc
in
lahf
or
lcall
mov
add
imul
inc
xchg
pop
push
dec
test
push
jb
das
xchg
movsb
pop
and
lahf
dec
or
xchg
cs
xchg
push
and
push
in
jbe
and
cmp
pushl
sub
adc
repnz
inc
stos
popa
inc
sahf
push
sub
sbb
cmp
repnz
loopne
nop
rcrl
adc
pop
pop
fldenv
and
inc
cmp
xor
fstps
int
sub
clc
or
scas
cmp
jmp
mov
cs
into
pushf
jbe
data16
adc
jo
pop
cs
les
fstl
cli
in
fimull
dec
jb,pt
jb
xchg
jmp
imul
rorl
sti
addb
cmc
lock
pushf
ficomps
adc
cmpsl
mov
jne
out
push
mov
ja
cmpb
cli
jns
xchg
jp
pushf
xchg
ljmp
push
dec
dec
lds
and
xchg
push
mov
jnp
jo
repnz
adc
repnz
ljmp
lods
xchg
push
xor
sub
cmp
in
dec
lret
in
inc
dec
loopne
lea
jg
push
mov
fdivs
adcl
enter
fwait
mov
loop
mov
sub
xchg
fcomps
push
cmp
jne
sub
and
jnp
pop
pop
adc
sub
or
scas
clc
cwtl
push
sbb
dec
out
sub
xchg
xchg
pop
and
sbb
les
or
adc
cmpsl
mov
xor
es
and
pop
push
push
jns
das
mov
jne
fs
mov
test
ljmp
int
sti
repnz
push
add
mov
clc
pop
subb
or
popf
and
cmp
ficoml
movsb
dec
adcl
inc
inc
cmp
lock
pop
xlat
cmpsb
es
cmp
mov
pop
popf
adc
push
fs
mov
sub
ja
cltd
mov
add
movsb
xchg
dec
sbb
xor
adc
out
or
fbstp
or
in
ret
cmp
stos
and
dec
insl
test
repnz
pop
lahf
cwtl
sub
pop
sbb
icebp
push
stc
pop
inc
mov
xor
mov
pop
inc
pop
jb
popf
adc
pop
lcall
cmp
outsl
fstpl
push
ljmp
xchg
out
insb
aam
jb
jno
inc
adc
gs
lods
inc
ds
insl
sub
sub
dec
mov
dec
add
and
imul
out
xor
push
lahf
insb
cmp
bound
mov
sahf
push
xlat
and
out
pop
aam
jne
repnz
dec
push
stos
jne
jns
jle
or
xor
out
jnp
push
loopne
les
pop
call
mov
cmc
test
in
bound
adc
je
aas
or
adc
scas
rcrl
push
jl
mov
js
jg
mov
mov
jnp
sbbb
push
shlb
cmp
push
sbb
in
mov
std
xor
push
ret
inc
dec
adc
pop
cmpsl
or
and
cmp
dec
cmpb
pop
test
jno
ljmp
push
mov
les
test
fistl
outsb
lds
loope
push
ret
xor
lods
flds
jno
inc
mov
jge
insl
int
clc
shlb
cmp
mov
adc
mov
test
push
lods
outsb
sub
int3
add
dec
lcall
mov
add
outsb
mov
aas
dec
mov
popa
popf
jo
rorb
fs
mov
loope
xor
sbb
sub
arpl
add
sbb
push
nopl
outsl
pop
in
es
fstps
sub
cwtl
jl
xlat
dec
jg
xchg
add
loopne
pop
test
pop
lods
sbb
fiadds
out
cli
fdivs
popa
cmpsb
and
xor
xchg
xor
dec
decl
dec
sti
xor
cmpb
inc
repz
xor
cmpsl
into
das
out
mov
int3
out
or
sub
sbb
push
aad
push
mov
cmpsl
xchg
nop
movsb
imul
fiaddl
out
aad
wrmsr
lahf
bound
cmc
nop
in
and
aaa
push
jg
leave
sub
shll
dec
pop
mov
pop
in
pop
sub
push
xchg
push
adc
xor
cmp
cwtl
test
and
jnp
sbb
insb
dec
push
rolb
ficompl
aam
lds
mov
adc
sar
cmp
in
pop
and
clc
dec
xor
push
mov
xchg
xchg
push
int3
adc
loopne
icebp
xchg
push
adc
push
mov
loop
rcrb
out
xchg
pop
xchg
lock
xchg
jnp
nop/reserved
add
rorb
test
sbb
lcall
test
popf
xor
dec
int3
hlt
pop
mov
orl
pop
pop
shll
and
mov
int
lret
pop
adc
inc
lds
data16
fistpl
or
jp
dec
pop
das
test
pop
sbb
aam
push
lds
cmp
lods
loopne
int3
mov
test
sti
cmpsl
in
jo
insb
cmp
sbb
cmpsl
mov
sbb
test
xchg
in
cld
repnz
mov
icebp
outsb
aad
xchg
dec
lret
mov
pop
xchg
jb
movsb
flds
and
jg
fs
adc
test
iret
bound
arpl
push
les
xor
adc
jle
xchg
push
sbb
jmp
and
xchg
mov
xor
fstpt
test
pop
dec
cmp
add
xchg
xchg
cmpsb
nop
xchg
push
xor
dec
aad
in
mov
jecxz
push
cwtl
mov
dec
sarb
mov
rcr
das
out
cwtl
jbe
aam
aas
push
clc
add
sub
push
das
test
pop
icebp
dec
insb
mov
pop
sahf
inc
cs
lahf
lret
rorb
xor
sbb
imull
negb
jo
into
clc
or
stos
and
and
dec
cmc
xor
in
pushf
cld
les
ja
bound
fdivl
nop
jno
jl
insl
cmp
lods
ja
and
adc
dec
insb
mov
inc
jl
mov
fs
and
sub
jbe
xorb
ret
xchg
pushf
int
imul
mov
hlt
lahf
popf
outsb
adcb
int3
xchg
pop
push
iret
or
cmpsb
dec
xchg
push
hlt
cwtl
or
sub
popf
adc
ja
dec
inc
in
rcr
mov
int3
push
jecxz
push
dec
push
sahf
cmc
imul
test
in
imul
fnclex
adc
out
jo
popa
cld
outsl
and
mov
add
jno
jo
lock
fcmovu
xchg
inc
mov
sti
test
loope
leave
test
ja
push
out
or
insb
push
adc
into
xchg
or
mov
loope
js
outsb
test
cmpsl
adc
mov
leave
inc
insb
lcall
jne
mov
scas
dec
cltd
ja
out
push
pop
fcomps
cmp
inc
and
xchg
sub
ja
hlt
mov
or
xchg
jecxz
insl
fwait
arpl
and
xchg
pop
mov
sti
call
adc
jg
jnp
mov
dec
mov
lds
inc
gs
and
push
outsl
or
fisttps
mov
mov
push
aas
out
out
mov
out
xchg
jl
mov
mov
cmp
int3
into
mov
xor
or
bound
clc
mov
add
pop
dec
pop
ficompl
xor
mov
pop
out
adc
xor
test
sbb
divb
js
lds
push
sbb
test
cmp
jae
mov
ss
xchg
and
fistl
pop
mov
cltd
repnz
out
xchg
inc
pop
popa
outsb
pop
pop
fdivp
push
lds
push
pusha
shlb
aam
push
je
mov
pop
cmp
icebp
out
int3
and
jp
xchg
dec
fwait
cmpsl
xor
ret
inc
push
in
into
loope
cmc
imul
lret
jno
mov
sub
cmc
jmp
ret
lahf
inc
jge
idivb
movsb
or
mov
icebp
vmovaps
lret
out
push
xchg
idivb
test
push
popa
or
xchg
lock
inc
and
xchg
pop
push
jae
scas
sbbl
push
push
sbb
xchg
pop
mov
fs
push
mov
pushf
popa
out
and
dec
jne
fldcw
inc
rorl
add
enter
mov
cmp
enter
mov
cmpb
lret
ret
faddl
mov
add
test
inc
cli
and
ja
xchg
nop
push
test
sbb
push
bound
mov
jg
cmp
sbb
enter
dec
js
pop
in
pop
and
pushf
sti
outsl
int3
push
iret
pop
mov
xchg
mov
jg
aad
aam
jns
popa
push
stos
jns
push
loop
pop
aam
jp
ds
les
stc
fcmovb
xchg
dec
ficompl
rcrl
imul
mov
or
mov
cli
ja
cmpb
cwtl
out
cmp
in
push
push
inc
hlt
fnstcw
movsl
mov
jae
addr16
stos
std
std
inc
cs
les
pop
popa
test
ret
test
fs
clc
std
xlat
scas
sbb
lahf
arpl
enter
outsb
dec
jl
mov
mov
imul
cltd
iret
mov
negl
sub
sbb
movsb
ja
dec
inc
in
pop
push
insl
movsb
ret
fcom
idivl
inc
clc
xlat
fcompl
out
mov
sti
int
insl
add
cld
shlb
mov
std
in
shrl
dec
dec
jb
stos
mov
insb
add
mov
lods
rolb
hlt
mov
daa
out
ja
aaa
lock
imul
iret
je
push
adc
hlt
pop
mov
adcl
jne
pop
nop
cli
fnstcw
mov
jno
add
aaa
sahf
cmpsl
lods
inc
lock
xor
test
std
push
fcom
push
fcompp
jnp
imul
popf
and
cld
dec
es
push
jg
mov
xchg
mov
imul
mov
jmp
dec
cmp
psubq
fstpt
sub
or
inc
cwtl
pop
mov
jge
mov
out
adc
fs
mov
dec
adc
xchg
fnstsw
push
jo
xchg
mov
and
cmc
mov
cmp
fldl
mov
jg
scas
fnstsw
and
push
ljmp
hlt
or
cmp
jns
rclb
aad
lock
sbb
fidivs
jo
loope
and
push
jl
cmp
andl
sahf
or
aas
dec
pop
mov
cmp
mov
nop
pop
dec
xorb
cld
jno
in
ja
insb
push
jne
sti
mov
fmuls
mov
out
jo
adc
jb
test
hlt
lds
and
mov
sbb
sahf
push
push
loope
push
out
inc
sahf
fsubrs
push
xor
out
int
jo
and
lods
lods
jecxz
je
lods
xchg
cmp
dec
sbb
stos
dec
mov
enter
loop
push
lret
ds
or
js
inc
pop
mov
loop
cmp
or
cmp
dec
std
rcrb
or
or
in
dec
sub
add
je
sub
insb
mov
cs
push
mov
ds
sub
mov
and
sub
jo
pop
jo
stos
xchg
inc
daa
leave
loop
scas
rcrl
insb
mov
pop
dec
dec
les
sarb
push
je
mov
inc
or
popa
lds
ret
das
xchg
push
data16
ficompl
rolb
jbe
cmpsb
loope
add
cmp
xchg
insb
add
bound
cltd
add
xchg
jo
icebp
mov
inc
cltd
iret
mov
out
sub
dec
xor
scas
sub
push
lret
aam
pop
insl
mov
ret
insb
cmp
aad
pop
or
negl
popa
pop
les
mov
aam
push
add
les
test
xchg
adc
and
push
dec
push
movsl
cmpsl
push
lds
iret
shlb
adc
mulb
outsb
inc
xchg
pop
pop
push
lds
movsb
or
iret
lret
mov
mov
dec
les
nop
stc
cmp
shrl
daa
add
xlat
ds
shl
jg
iret
test
enter
mov
mov
cmc
int3
mov
sbb
scas
in
call
es
sbb
xchg
mov
pop
push
push
dec
loop
mov
fdivr
pop
std
movsb
out
adc
pop
pop
js
bound
or
mov
and
push
aam
sbb
pop
jmp
fdivrs
jle
jns
push
pop
jno
test
ss
icebp
ror
popa
jp
stos
int3
in
jno
scas
dec
mov
xor
push
clc
inc
and
pop
add
repnz
daa
decl
cmp
or
cmp
jo
fiadds
divb
gs
data16
movsl
int3
mov
std
mov
push
xor
hlt
cmp
dec
pop
mov
std
jns
enter
loop
sub
test
push
lcall
xchg
iret
arpl
movsb
scas
cmp
daa
sti
bound
xor
xchg
aas
mov
cmpsl
int
xchg
and
push
scas
popa
inc
cmp
dec
int
cmp
in
icebp
pop
movsb
test
fstpl
iret
cmp
mov
mov
repnz
les
push
arpl
push
ds
dec
fisttpll
dec
into
pop
int3
into
push
cmc
mov
inc
ds
cmp
dec
subl
pop
test
sarb
mov
bound
or
jns
roll
inc
dec
mov
xchg
jl
sahf
jb
imul
js
mov
repnz
jmp
subl
scas
scas
or
fistpll
out
cmp
xchg
cld
xor
out
daa
cmovae
shlb
dec
sub
test
inc
dec
inc
push
ss
or
xchg
out
mov
cmp
fdivrp
push
test
dec
nop
or
out
bound
aam
xor
mov
imul
fldz
outsb
ja
fwait
insl
cwtl
clc
push
arpl
fadds
lods
cmc
test
mov
dec
scas
dec
adc
dec
loopne
cmpsb
loopne
jno
cmp
pop
jo
xor
in
jbe
fisttps
jl
pop
movsb
xor
pop
cmp
shll
pop
lahf
pop
iret
sbb
mov
mov
cmp
cld
ds
dec
and
das
int
rcrl
inc
pop
push
jecxz
sahf
push
mov
repz
cmpsb
cmp
cmp
inc
inc
aad
aam
mov
mov
mov
adc
xlat
and
dec
into
scas
jmp
push
fmull
fsts
aam
inc
in
es
arpl
push
das
xorb
fdivs
cmc
scas
js
or
dec
mov
insb
push
testl
sbb
les
dec
jp
push
adcb
mov
movsb
xor
xor
stc
jg
mov
lcall
pop
dec
mov
scas
negl
fdivs
std
jp
ret
mov
cltd
xchg
dec
jg
push
mov
xlat
push
jno
push
bound
bound
iret
test
cmp
test
mov
pop
mov
xchg
mov
lds
xor
scas
and
cli
test
int
mov
mov
cmp
bound
adcb
fcoms
fs
push
loope
test
xchg
jge
icebp
lea
xchg
sbbb
lahf
flds
mov
push
mov
orb
popa
adc
push
arpl
inc
pushf
xchg
push
mov
movsb
fs
mov
out
scas
lret
pop
cmp
inc
xchg
xchg
push
push
fsubl
jo
sbb
adc
pop
js
imul
xchg
fprem1
mov
cli
fldt
js
lods
hlt
in
jne
cmp
scas
sub
xor
mov
push
pop
mov
pop
pop
xchg
cmp
test
aam
jle
jns
xor
jno
mov
fstpl
cmp
ja
sbb
cmpb
hlt
arpl
in
add
add
cmp
fwait
push
mov
pop
push
mov
cmp
mov
scas
jg
xchg
insl
jae
pop
lods
ja
addl
jno
icebp
aad
fstpl
mov
xchg
pop
inc
mov
dec
mov
mov
and
subb
test
xor
pop
aam
pop
ja
cmpsb
mov
xchg
jbe
js
loopne
xor
cltd
jno
inc
pop
out
jns
jne
nop
jb
pop
shlb
stos
pop
mov
incb
stos
sub
xor
nop
push
hlt
jp
loop
fisubs
pop
and
xchg
stos
and
xchg
movsb
icebp
out
push
mov
cltd
scas
cmp
fsubr
sbb
sarb
push
lods
inc
shlb
lret
dec
adc
jno
cld
pushf
inc
sti
fnstenv
or
movsl
mov
mov
push
cmpsl
inc
push
push
andb
fsubr
incb
mov
mov
xchg
adc
adc
push
add
ss
test
ja
dec
mov
cmpsl
bound
sub
mov
in
lret
mov
sub
and
cmp
movsl
mov
add
mov
xor
enter
fs
pop
sub
cltd
mov
mov
inc
xchg
fmull
adc
cmp
sarl
aad
in
sti
in
adc
hlt
pop
mov
mov
mov
xchg
test
pop
pop
cltd
mov
gs
xor
push
mov
cltd
cs
mov
adc
xor
ret
xchg
dec
es
sub
pop
stos
fistpll
int3
mov
daa
ljmp
mov
icebp
adc
clc
cmp
mov
xlat
cltd
dec
sub
out
mov
or
sub
jno
and
test
sbb
jge
pop
cmp
hlt
mov
and
adc
mov
inc
lds
mov
dec
lcall
push
jo
ljmp
sub
mov
mov
in
jnp
mov
inc
sub
lods
mov
jne
loop
pushf
pop
and
inc
xor
bnd
jno
lods
pop
mov
mov
scas
add
add
cwtl
pop
cs
pop
arpl
mov
out
cmpsl
sbb
lahf
inc
mov
and
mov
or
std
or
imul
stos
add
jle
mov
xor
pop
js
stos
mov
and
and
in
lods
jns
js
pop
je
test
dec
push
jl
xchg
stos
dec
mov
dec
inc
outsb
mov
jp
push
imul
mov
fistpl
popa
ficoml
and
push
dec
jns
jo
cmp
data16
sub
mov
sbb
push
xchg
arpl
repz
loopne
pop
sbb
jne
mov
jp
sbb
inc
xlat
sbb
rol
fcmovnu
push
adc
roll
cmp
jno
push
aam
call
flds
lea
cmp
mov
xchg
and
sbb
aam
mov
xchg
pop
js
jb
fistpl
cmp
pop
adc
stos
dec
pop
inc
mov
jae
fcom
out
fmull
jecxz
aad
jno
cmp
push
into
adc
cli
iret
push
cltd
fxam
inc
inc
xchg
xor
fcmovu
out
insl
hlt
ret
pop
add
adc
cmpsb
cld
outsb
hlt
pop
or
pushf
mov
inc
lahf
or
cmpsl
inc
data16
movsl
jne
es
adc
inc
jg
mov
insb
out
fdivs
cltd
shlb
scas
lahf
jo
adc
xor
xchg
out
mov
mov
out
adc
aam
adcl
pop
mov
aad
mov
subb
sbb
xor
out
mov
dec
pop
push
xchg
out
cmp
out
push
stos
fimull
fists
cmpsb
cmp
in
pop
in
lahf
dec
rolb
sbb
push
mov
out
push
stos
scas
pop
mov
or
sbb
ds
mov
mov
push
in
lods
and
movsb
clc
add
int
or
decb
or
mov
inc
lds
nop
pop
ja
jl
and
mov
test
mov
scas
xor
ja
inc
add
scas
int
xchg
lret
wbinvd
push
lds
push
andb
rorl
loop
sbb
dec
mov
rclb
cwtl
insl
popf
scas
pop
leave
stos
add
jbe
or
and
rsqrtps
xlat
xchg
loopne
push
add
jnp
jno
sbb
enter
mov
pop
dec
orl
jne
and
cld
push
in
into
ret
jg
add
dec
repnz
cmp
xor
mov
aad
negl
mov
mov
gs
cmp
popf
inc
jns
inc
pop
cmpsl
jge
cld
ss
es
popa
jmp
bound
jl
xor
cld
and
lock
jbe
push
lods
or
ds
mov
scas
iret
js
cmp
jb
add
push
insb
pop
loop
or
test
lcall
jle
int3
popf
add
pop
push
pushf
fxch
ja
lds
and
push
adc
sub
stc
std
xchg
sbb
repz
pop
mov
jo
push
ja
push
adc
dec
jl
cmp
scas
xchg
sbb
lahf
sub
mov
cmp
and
stos
fstpt
iret
pop
pushl
mov
stc
cmp
sahf
push
fdivrs
movsb
loop
shl
testb
mov
push
mov
mov
imulb
add
fisubrs
mov
xchg
add
dec
mov
test
mov
iret
jb
push
imulb
jecxz
adcb
jnp
push
inc
sbb
xchg
sbb
mov
xchg
adcl
pop
out
and
sbb
and
fwait
jne
fistpll
push
sub
xchg
fwait
mov
dec
scas
in
arpl
clc
lods
add
dec
in
lahf
int3
pop
and
xor
sarb
inc
cmp
jo
rorl
jo
cmp
int3
leave
std
and
scas
jle
or
into
movsl
mov
sub
roll
ja
mov
in
lock
ret
fisubrl
lds
out
sahf
rorb
in
sbb
and
sub
test
cmp
pop
inc
pop
ret
mov
into
mov
jns
push
insl
jbe
sbb
ljmp
mov
push
cmp
xor
nop
mov
pushf
in
push
mov
aaa
push
mov
loopne
gs
sub
inc
cmc
inc
push
iret
shl
rcll
repz
dec
sti
xchg
mov
outsb
movsl
and
dec
lret
or
cmp
mov
adc
jnp
pop
sbb
in
fwait
movsl
fs
xorb
ja
push
mov
xor
pop
mov
repnz
jne
fists
fcomi
sub
push
movsb
rclb
movl
out
shl
adc
inc
mov
xor
push
sub
cmp
jecxz
cli
lods
in
stos
sti
sahf
lcall
sub
xchg
lock
iret
repnz
int3
aam
add
sbb
jmp
iret
push
jno
rcrb
dec
dec
push
jno
fbld
push
dec
loop
out
push
es
je
fs
push
jno
xchg
dec
pop
xor
xor
stos
aad
lcall
popf
fdivr
imul
cmp
inc
mov
push
push
mov
cmc
daa
mov
pop
jecxz
es
adc
insl
jo
or
mov
pop
into
js
mov
cmp
lods
rcr
and
jmp
popa
fstps
je
xor
loope
push
jne
ret
xchg
jg
cld
or
push
lret
jle
shlb
subb
lcall
sub
pop
ja
outsl
cmp
popa
jg
pop
bound
push
xchg
xor
cmpsb
inc
fcomps
sbb
and
sbb
or
scas
or
and
sbb
pop
test
pop
xchg
pop
push
pusha
clc
scas
cmp
addl
and
lcall
aad
add
in
and
std
inc
mov
iret
fldenv
jns
imul
les
test
xor
cli
ret
es
mov
push
and
incl
lods
add
jns
jb
pop
popa
daa
xor
xor
orb
push
fucomp
adcb
jp
push
jbe
inc
es
insl
cwtl
mov
mov
and
push
inc
ljmp
push
and
sbb
das
cmc
imul
in
rorl
jb
rcrb
mov
loope
lahf
fs
cmp
cmp
xchg
jmp
push
and
aad
mov
vmwrite
jnp
adc
pop
cmpsl
sub
push
repz
ja
cmp
icebp
jg
fidivl
sbb
jo
rcr
xor
fs
nop
aad
cmp
or
add
xchg
scas
mov
push
mov
push
pop
pop
aad
push
mov
push
cwtl
outsl
bound
mov
fidivrl
mov
fnstcw
scas
adc
dec
mov
int
in
dec
gs
push
pop
xor
xchg
xor
or
cmpb
sbb
or
popa
adc
adc
andl
cmpb
inc
dec
xlat
jo
repz
cwtl
adc
add
inc
das
mov
sarl
push
ljmp
xchg
pop
push
mov
outsb
jg
xor
dec
setg
push
mov
hlt
or
mov
out
ret
iret
xchg
push
jge
dec
daa
sub
lds
addb
dec
jmp
dec
jno
mov
jne
inc
xchg
sub
sbb
sub
sar
pop
push
mov
pop
je
push
es
repz
cld
pop
fwait
or
repnz
daa
sub
aad
dec
mov
sub
inc
loopne
shll
rcrb
xchg
fisubrs
out
jg
dec
push
scas
pop
out
and
repz
pop
je
mov
jno
je
scas
sahf
xchg
jp
xor
dec
cmp
inc
roll
or
add
push
jge
test
mov
movsb
xor
inc
rcr
in
sub
mov
fldcw
aad
cld
gs
popf
clc
dec
push
xchg
or
fstl
shlb
enter
lods
xor
rcrl
cs
pop
xorl
push
jg
sub
cmp
outsb
xchg
cmpsl
enter
rclb
and
imul
push
jo
into
xor
pop
iret
addr16
sub
xchg
call
add
lcall
out
ds
jae
fmuls
in
dec
jb
mov
xchg
sub
sahf
push
mov
and
cmpsb
mov
pop
jle
shll
pop
scas
sbb
pop
mov
inc
popa
xchg
mov
add
inc
into
push
in
xchg
sahf
rolb
jne
and
into
out
pop
cmp
cmc
mov
bound
shlb
leave
xchg
cmp
push
add
addb
sub
imul
mov
jb
popa
subl
xor
incb
cld
mov
xchg
lock
fnstenv
xchg
mov
xor
cmp
ljmp
jo
mov
cli
in
inc
mov
test
rcll
bound
and
lahf
aam
pushf
push
in
pop
pushl
pop
adcl
in
ffree
shlb
imul
mov
mov
enter
aam
or
push
jnp
lods
bound
dec
scas
jmp
dec
mov
fsubs
int3
cmp
mov
ja
xchg
xor
and
pop
aam
mov
mov
pop
data16
aaa
push
rol
pop
pop
out
xchg
ficoms
mov
push
mov
mov
pop
fmuls
sbb
test
mov
mov
mov
ret
and
pop
out
xchg
mov
imul
add
jg
jne
inc
sbb
adc
push
and
mov
jb
or
or
arpl
aad
push
push
cmpb
clc
jo
inc
and
mov
gs
negb
sbb
mov
mov
ja
cli
adcb
pop
pop
mov
das
bound
dec
xchg
sahf
and
push
add
fs
jmp
cmpsb
mov
test
fstps
loopne
test
shll
lahf
fcoml
cmpsb
bound
les
fcmovnbe
fisubrl
mov
mov
jo
test
aam
lds
movsl
adc
inc
mov
clc
cmp
or
sub
pop
lds
adc
adc
pop
lahf
lcall
dec
push
push
test
cmp
jge
jp
fwait
mov
dec
loop
push
imul
push
dec
inc
xchg
shll
jl
stc
sahf
test
pop
pslld
mull
mov
sbb
fwait
enter
in
ds
xchg
je
pop
mov
in
mov
fstp
loopne
loopne
popa
and
push
addr16
pop
add
fmul
scas
sahf
stos
add
push
js
daa
pop
inc
sbb
dec
sahf
sub
sbb
xchg
xor
mov
pop
adc
loope
inc
jle
cmp
mov
icebp
mov
push
xlat
push
outsb
jo
and
test
out
je
or
fcompl
scas
stos
dec
nop
subl
inc
adc
loop
cmc
and
mov
cld
fcoms
fcoml
loopne
jo
das
adc
xchg
fs
or
andb
jae
pop
aad
into
add
and
jno
enter
xchg
adcl
add
sub
lds
imul
push
loopne
mov
es
mov
test
cmp
data16
insl
aam
fs
adc
rolb
icebp
inc
scas
jmp
mov
dec
ljmp
sar
mov
cmp
jmp
jnp
pop
sub
xchg
in
lods
xor
mov
dec
scas
pop
inc
in
fnstcw
cmpsl
leave
iret
fwait
cs
das
xchg
xchg
mov
dec
xor
lock
les
pop
andb
je
psllq
int3
imul
adc
cmp
mov
mov
mov
das
rclb
nop
adc
cmp
push
repnz
sahf
pop
xor
test
push
xchg
icebp
dec
mov
dec
sbb
arpl
push
testl
sahf
shlb
aam
mov
inc
push
int3
jae
or
lock
into
jecxz
popa
cmp
or
and
sub
icebp
xchg
jp
ja
mov
cli
mov
mov
cltd
and
fsubrp
lret
and
addr16
mov
in
fucomip
popa
loopne
iret
and
push
pop
cmp
lcall
daa
fwait
dec
mov
hlt
mov
lcall
test
cwtl
int3
jo
xor
cmp
sub
add
ja
adc
je
roll
sbb
scas
mov
jo
mov
inc
fcomps
inc
xorl
mov
bound
mov
aam
hlt
or
out
mov
std
jbe
das
adc
pushf
inc
les
test
or
in
adc
pop
jae
fmul
repz
jg
xlat
out
mov
mov
xchg
sahf
sbbl
addb
leave
dec
mov
jae
jno
push
addr16
jne
jo
push
stos
clc
jnp
push
cld
scas
xchg
pop
fldcw
lcall
ja
scas
dec
jns
fstpl
fwait
dec
js
mov
out
pmovmskb
push
dec
sbb
ja
pushf
and
fs
jmp
lcall
sub
cmc
fidivs
das
add
jnp
jne
clc
cmp
or
mov
scas
dec
sbb
cmp
fidivs
xor
mov
fucom
iret
bound
adc
fisttps
mov
inc
and
and
adc
imul
jmp
adc
mov
dec
lds
dec
test
lahf
in
cli
shrb
psrlq
cmc
shrb
xchg
inc
fwait
add
jl
sub
mov
add
adc
lods
cltd
cmpsb
xorb
pushl
faddp
xor
in
add
xor
xor
and
push
xlat
ret
sar
or
icebp
sahf
dec
fdivr
aad
int3
fadds
lock
mov
adc
adc
fs
loopne
mov
sbb
fnstcw
or
loope
mov
pop
outsb
push
pushf
mov
or
js
xchg
dec
push
popl
add
loopne
push
fisubl
dec
adc
dec
pop
push
jg
int
fisttpl
pop
mov
xchg
cmp
mov
mov
in
jo
cmp
lock
insb
pushl
push
scas
rorb
cmc
leave
in
daa
cmp
ss
stos
lods
dec
test
fnstcw
test
lods
addb
adc
jo
inc
cmp
in
fistl
flds
mov
lods
push
mov
lods
cs
shlb
lret
or
dec
mov
push
testl
and
imul
lock
imul
adc
xor
jnp
dec
cwtl
fmul
ja
movsl
aas
jle
nop
mov
and
adc
or
jo
das
xchg
mov
hlt
dec
jle
cmpsb
aad
stc
xchg
lock
movsl
icebp
add
xor
cli
and
cld
xchg
mov
fistpll
jo
out
outsb
stos
rcl
cmovnp
pop
arpl
popf
push
mov
xchg
imul
popa
sub
lret
mov
test
add
lret
inc
jns
js
loop
dec
sub
fs
iret
callw
push
pop
je
pop
dec
mov
sbb
fcoms
adc
mov
push
dec
pop
push
xor
fdivrs
inc
pop
push
cmpsl
push
mov
add
and
jns
sub
lret
cs
sbb
lods
clc
jl
push
mov
cmc
cli
xchg
jnp
push
inc
cmp
push
push
and
mov
push
mov
fcoms
les
icebp
movsb
into
mov
pop
xchg
pop
jecxz
movsb
mov
in
out
daa
xchg
xchg
mov
popa
lret
ljmp
push
mov
push
add
push
jnp
sbb
push
popf
in
fdivs
ficoml
fstl
insl
dec
pop
xchg
pop
je
push
cmp
mov
les
and
call
cmp
jo
push
bound
fldenv
cmp
mov
add
arpl
push
cmpsl
jo
imul
push
xchg
cs
shll
aam
hlt
xchg
jnp
xor
dec
cld
loope
movsl
cmp
mov
js
push
cli
xchg
shll
pop
jmp
fdivrl
lock
hlt
jne
test
mov
movsb
faddp
jl
out
stc
int3
sbbb
iret
movsl
mov
and
ret
mov
pushf
mov
cli
cmp
inc
testl
ljmp
dec
adc
adc
mov
jno
cmp
jnp
dec
xor
push
int
adc
bound
cmp
adc
out
jecxz
pop
dec
in
mov
sbb
mov
les
push
inc
aam
sti
bound
jb
insb
push
mov
icebp
inc
xchg
xor
jns
std
std
push
into
jae
sbb
add
jne
mov
pop
push
lods
mov
add
fnstcw
arpl
in
mov
mov
cwtl
jno
and
orl
out
pop
dec
fs
adcb
jl
push
pop
adc
mov
inc
mov
popa
pop
jg
dec
aad
xchg
pop
lret
mov
insb
jg
inc
and
les
jp
pop
pop
rcl
aas
sub
mov
mov
add
xchg
pop
jb
insb
in
je
push
inc
cmp
aam
or
in
addr16
data16
jge
cwtl
mov
xchg
xchg
sub
mov
stos
out
clc
stos
cmpsl
cmp
push
sub
xchg
daa
sub
aam
push
jge
or
les
push
jno
hlt
leave
mov
ja
sub
mov
fwait
add
fs
ss
test
cmp
sub
mov
pop
testb
aam
lcall
lcall
stos
dec
pop
fcompp
cmp
push
imul
enter
sub
mov
mov
xchg
dec
and
stc
pop
xchg
push
xorl
sahf
pushl
sbb
fcomps
pop
fildll
xchg
push
stos
push
insb
jg
push
jl
add
mov
shlb
mov
sub
sbb
daa
cmp
repz
sbb
in
adc
and
test
dec
repz
aad
sbb
into
xchg
xchg
jo
sbb
cmp
xor
scas
cmp
arpl
out
add
mov
mov
and
lds
pop
in
mov
push
fsincos
mov
andb
push
out
in
pop
mov
imul
imul
push
xor
ja
sub
cmp
dec
jne
mov
jge
push
je
bound
cmp
or
push
aad
sbb
mov
cmp
aam
xchg
or
subl
or
inc
push
rcrl
xor
inc
fnsave
or
or
xchg
int
push
je
leave
cli
mov
ljmp
push
push
adc
loop
movl
pushf
xor
ja
push
rol
fidivl
pusha
scas
das
and
push
and
sbb
and
adc
rcrb
cmp
cmpsb
mov
aas
and
cmp
cmc
or
pop
adc
call
and
sahf
movsl
cmp
mov
sub
sub
inc
imul
sbbb
cmp
lock
pop
jle
xchg
add
xor
clc
call
decb
aam
sbb
movsl
lods
mov
lea
mov
shl
shrl
les
jl
add
push
cltd
push
xchg
mov
pop
push
pop
mov
mov
sarb
mov
adc
hlt
rcll
push
cmp
scas
lcall
stos
mov
dec
cmp
jg
inc
adc
and
icebp
bound
add
push
pusha
fcmovnb
push
cmp
cmp
push
sbb
jmp
enter
cld
popf
cmpsb
mov
retw
adc
nop
addr16
xor
lds
jl
or
pop
push
jl
cwtl
lret
test
push
or
sarb
out
fistl
sbb
fs
je
sbb
add
dec
fwait
scas
fs
sbb
dec
pushf
daa
adc
bnd
lcall
repz
and
popl
dec
jg
sbb
insb
mov
add
xor
outsl
pop
loop
lahf
lcall
out
xchg
push
hlt
jp
add
mov
decb
adc
test
repz
jmp
sbb
orl
jge
fidivs
imul
lcall
fwait
xlat
sbb
nop
aam
fnstenv
cmp
cmp
pop
mov
fs
push
std
imul
inc
push
push
pop
jmp
imul
dec
cld
bound
inc
mov
pop
mov
dec
es
test
mov
push
and
sbb
add
out
fs
into
aam
arpl
push
lret
jl
sub
or
sbb
es
pop
add
lahf
push
mov
xchg
cvttpd2pi
test
adcl
inc
sub
loopne
mov
push
rcr
test
mov
inc
in
or
jle
jl
pop
pop
mov
fs
cmpsb
push
aaa
test
add
xchg
and
imul
in
aaa
sbb
mov
das
mov
xchg
jnp
dec
jg
int3
and
xorb
loopne
stos
xor
je
bound
outsb
sahf
js
mov
in
mov
pop
add
sbb
dec
mov
mov
shrb
jnp
cs
xchg
cltd
xchg
pop
movsb
mov
shl
sti
add
into
jb
loopne
dec
loopne
sub
mov
jb
adc
adc
insl
shll
lods
jo
jg
lods
or
rolb
push
ljmp
addb
fcomp
mov
in
xor
cwtl
and
scas
lcall
inc
clc
adc
mov
inc
nop
cmp
adc
xor
or
cltd
mov
jae
sub
mov
cmp
in
leave
pop
insl
sub
dec
out
xchg
sbb
cmp
or
mov
das
adc
sbb
xchg
pop
mov
bound
dec
push
loope
mov
xchg
scas
insb
shrl
cmp
and
scas
dec
add
inc
xchg
fimull
sbb
fisttpl
bound
orb
fildl
mov
sub
lds
pop
add
int
fs
adc
xor
cmp
ret
sbb
jmp
sbb
jns
cmp
pop
sbb
fwait
adc
mov
repz
outsb
lock
mov
xchg
aas
aam
sbb
jo
mov
and
pcmpeqw
cmpsl
and
jp
lods
cltd
add
ja
movsl
fidivrs
cltd
aaa
mov
fwait
adc
fstps
mov
and
mov
call
fstps
adc
jb
jo
mov
scas
xchg
dec
mov
ss
inc
aam
jp
popa
addl
xchg
shl
pop
cmp
dec
cmp
mov
mov
cltd
push
std
xlat
sbb
mov
jge
je
push
pop
xchg
insb
stos
xor
les
xchg
test
sbb
sbb
repnz
xchg
push
xor
sub
sbbb
push
stos
xchg
rcrb
xchg
cwtl
push
andb
shlb
outsb
pop
cli
lahf
outsl
sarl
jg
aas
fistpll
fcomip
xchg
mov
xchg
js
loopne
dec
in
out
fstp
jne
je
sub
push
jb
aam
movl
es
je
push
adc
lds
sbb
jb
push
nop
loop
daa
dec
outsl
je
jbe
cmpsb
pop
push
roll
dec
mov
int3
rcl
push
iret
lods
std
les
push
mov
nop
pop
xor
sbb
lock
movsl
jns
inc
int3
fdivrs
ja
mov
das
jbe
call
es
ret
mov
dec
dec
clc
adc
dec
popa
lds
enter
sti
mov
jecxz
mov
mov
test
enter
sbb
leave
and
sbb
push
movsb
gs
sub
nop
and
into
in
xor
xchg
stos
rolb
adc
outsb
jno
pop
fbld
lods
or
mov
fidivl
mov
pop
lret
and
pop
mov
xor
jb
push
insl
jae
fsubs
push
les
jg
subl
push
in
sbb
dec
push
cwtl
mov
mov
pop
and
jmp
loop
mov
insl
out
mov
jge
stc
andb
mov
lds
cmpsl
cmc
push
inc
in
sub
mov
inc
in
mov
in
cmpsl
out
pop
sub
scas
aam
inc
inc
cmpsb
pop
aaa
cli
pop
dec
rcll
std
lea
mov
cmpsb
sbb
icebp
add
jmp
inc
and
jbe
repnz
push
in
inc
xor
push
add
inc
fwait
and
mov
inc
addr16
cmpsb
or
lds
inc
aaa
and
xor
and
inc
or
cmp
cmp
in
add
rcr
push
cwtl
nop
outsb
cmp
sbb
les
xor
fisttpll
inc
repnz
loopne
leave
cmp
arpl
int
mov
dec
andl
or
sbb
pop
and
ficomps
inc
xorl
out
fcoms
cwtl
dec
inc
sub
enter
inc
int
sbb
lret
pop
add
push
xchg
rolb
xchg
les
add
pushf
xchg
popa
adc
mov
xor
sahf
fisubs
daa
rol
mov
fwait
push
lcall
imul
mov
fstpt
cmp
leave
xlat
mov
arpl
cmpb
scas
jne
push
data16
cmc
mov
jmp
push
sub
cmp
mov
fcmovu
cltd
in
hlt
test
sbbb
js
popa
sbb
jne
scas
and
mov
add
daa
js
push
push
pop
addl
and
push
je
mov
out
push
movsb
xchg
sbb
dec
or
hlt
jmp
sahf
dec
sti
in
popa
sbb
arpl
pop
inc
cli
or
pushl
or
test
mov
out
jl
dec
imul
pop
jmp
loop
fs
mov
pop
shll
push
fs
push
lcall
test
inc
movsl
jecxz
sbb
pop
cmp
pop
pop
enter
xchg
inc
test
jno
cmp
push
mov
and
pop
mov
pushf
jmp
dec
pushf
into
icebp
scas
xchg
xchg
or
cltd
jp
scas
jbe
cs
and
mov
lcall
ds
push
cmpsl
scas
out
rcrl
dec
and
add
or
jae
sti
add
movsl
jbe
pop
xchg
xor
es
popa
les
lcall
mov
inc
imul
xchg
in
push
xlat
push
cvtps2pd
cs
clc
cmp
xor
es
incl
mov
aad
fwait
cld
aad
ss
push
data16
xchg
jne
fstps
in
scas
mov
ja
cmp
in
popf
inc
push
push
cmpb
inc
nop
dec
mov
push
push
sub
push
int
xlat
push
sub
loopne
mov
push
mov
and
cli
or
scas
dec
xor
ja
pop
mov
leave
arpl
pop
clc
push
les
pop
pushf
or
mov
shlb
aam
notl
jge
in
pop
xchg
dec
scas
push
add
arpl
inc
jns
dec
daa
mov
popf
sarl
mov
arpl
push
adc
je
imul
mov
loope
xor
mov
jb
fwait
inc
cs
rcl
pop
push
push
xchg
test
push
les
dec
and
out
in
fs
std
test
repz
aam
mov
fwait
jno
cmpsb
js
mov
xor
ja
jge
sarl
sub
mov
cmp
lock
cwtl
sbb
loop
dec
cmp
jle
orl
push
lcall
arpl
or
xchg
ds
inc
fwait
arpl
lret
pushf
enter
mov
add
jmp
cmpsl
arpl
cmp
push
inc
icebp
pavgw
xorl
insb
adc
adc
xchg
pop
lds
push
scas
outsb
fs
mov
mov
push
insl
mov
inc
sahf
inc
cli
test
push
icebp
pop
adc
xchg
cmp
nop
and
cwtl
lea
add
daa
inc
in
jnp
push
lods
cmp
xchg
mov
push
loopne
push
jae
lock
inc
pop
jg
int
popa
fldt
dec
lock
fwait
cltd
testb
stc
dec
pop
into
inc
mov
add
jbe
bound
test
aam
cmp
xchg
push
xchg
mov
cltd
test
jno
in
mov
xchg
mov
sbbb
sbb
ror
daa
scas
mov
in
xchg
mov
roll
icebp
sti
aad
js
or
int3
icebp
les
jns
fmuls
push
daa
cmpsl
pop
xor
pop
cmp
mov
scas
sbb
fxch
and
mov
ja
jb
and
push
fcom
popf
jne
cld
call
cltd
popa
gs
inc
xorl
int
rclb
ja
adc
sbb
movsb
mov
dec
aam
mov
rcr
sub
mov
mov
xchg
loope
inc
dec
sbb
aad
sub
sub
in
outsl
lcall
cld
dec
scas
inc
icebp
sub
xlat
jg
push
lret
dec
fmul
stos
clc
icebp
jecxz
test
adc
mov
stos
lahf
dec
scas
fwait
jle
mov
cmpsl
or
push
lock
dec
jg
jo
mov
arpl
adc
mov
bound
icebp
xchg
mov
test
ljmp
add
in
cmp
out
adc
fists
pop
jp
inc
pop
leave
mov
nop
pop
cltd
xor
inc
shlb
and
push
mov
mov
lret
sub
fstps
fsubrs
sbb
mov
pushf
into
xor
mov
lds
fcmovnbe
lret
xchg
xchg
mov
jo
or
mov
bound
mov
mov
cmp
sbb
out
icebp
lahf
je
icebp
loop
clc
and
xchg
or
cmp
adc
mov
jmp
push
fs
sub
pushfw
mov
test
shlb
aam
dec
xchg
lock
push
int3
mov
lea
dec
flds
stos
jb
inc
jecxz
jno
xchg
sbb
push
nop
push
fldenv
js
lods
lods
lods
adc
sub
inc
push
xchg
sti
jno
fwait
fwait
sti
fistl
sub
pop
cmp
mov
dec
xchg
pop
lcall
cld
sbb
ds
mov
inc
stos
jge
push
sub
adc
or
mov
mov
dec
mov
pop
jp
les
fcmove
dec
jo
popa
mov
push
xchg
popa
sbb
sti
xchg
stos
jno
mov
cmpsb
insl
jno
out
mov
jae
mov
lea
enter
dec
mov
and
dec
fwait
shrl
cmpb
loop
sbb
xchg
pop
sub
cmp
fnstenv
xchg
jge
wbinvd
clc
push
js
hlt
cmpb
mov
iret
and
fst
push
or
or
xor
test
lods
fcoml
or
hlt
cli
repnz
stos
cmp
outsb
les
stos
pop
push
cli
mov
leave
xchg
adc
lods
xor
pop
jecxz
into
mov
int3
xchg
sti
push
inc
aad
push
gs
xorl
pop
cld
cli
add
pushf
icebp
insb
jge
dec
test
adc
das
insb
repz
push
push
mov
cmp
into
insb
in
fdivl
aad
or
fdivs
inc
je
push
lret
adc
mov
mov
mov
xchg
test
subb
push
pop
divl
sbb
or
lcall
jb
and
cmp
outsb
add
push
mov
arpl
sub
fstpt
nop
and
mov
dec
add
mov
add
in
jecxz
cmpsl
mov
insb
adc
cmp
push
pushf
fbld
ficoms
adc
les
das
push
int3
fisubrl
push
in
pop
cli
fstl
inc
adc
fwait
aad
insl
orb
iret
ja
mov
cmpsb
mov
mov
push
jb
in
icebp
dec
push
popa
inc
cmpsb
lods
push
lock
scas
jnp
hlt
cs
lret
pop
pop
jg
add
jl
sbb
repz
lcall
push
jns
addr16
aaa
fnstenv
mov
cld
xor
popa
les
and
fnsave
test
outsl
jb
repz
insl
mov
fsubr
movsl
outsl
aad
pop
push
enter
mov
rcrb
mov
cmp
std
clc
nop
dec
xchg
adc
movsl
mov
js
test
push
dec
inc
jecxz
adc
or
push
scas
mov
mov
gs
stos
inc
xor
popa
push
cwtl
das
xchg
dec
jle
icebp
dec
popf
loop
inc
xor
lret
cli
test
inc
int
insl
imul
cmp
call
cmp
mov
js
sti
pop
mov
arpl
and
pop
mov
xchg
jo
sbb
mov
xchg
jmp
andb
loop
pop
mov
dec
jnp
add
or
pop
cmpsb
or
add
pop
cmp
repz
or
sahf
int3
lods
mov
and
test
jb
inc
imul
jno
xlat
mov
pop
ja
pop
jmp
sub
xchg
inc
pop
sbb
fsubrl
sbb
mov
xor
pop
sbb
cmp
mov
bswap
lahf
or
aas
cmc
mov
dec
xchg
sbb
out
imul
test
cmp
test
jo
insb
inc
lock
mov
dec
fnstenv
adc
je
add
jo
sahf
int3
xor
xor
push
stos
addb
or
dec
xorb
pop
loopne
dec
in
test
das
jne
loop
cmpsb
mov
enter
imul
mov
mov
lock
sbb
dec
loopne
inc
push
loope
pop
sub
ss
in
pop
cmp
xchg
sbb
dec
jp
pop
push
mov
cmpsl
lret
pop
or
lods
push
aam
sbb
jo
idivl
decl
sbb
int3
movsb
xchg
xor
dec
aam
adc
pop
jb
add
lods
cwtl
int3
mov
inc
iret
mov
in
or
js
fs
stos
js
and
sti
xor
jae
ss
jle
xchg
adc
movsl
fs
cld
ss
mov
xchg
stc
xchg
mov
leave
pop
xlat
mov
push
mov
mov
jle
sahf
test
outsl
sub
adc
pop
in
iret
jno
insl
std
or
test
jmp
call
and
lods
xchg
dec
das
repz
fldt
mov
mov
mov
or
jno
dec
fists
mov
das
not
sbb
mov
dec
xorl
data16
or
cmpsl
cwtl
sub
aaa
xor
sbb
scas
sbb
add
loope
clc
iret
dec
nop
fmull
ret
subl
push
xor
enter
inc
mov
std
daa
xchg
mov
mov
sti
sbb
mov
dec
clc
inc
sbb
mov
inc
or
adc
rorb
shll
dec
or
lcall
out
jb
lcall
cmpsb
bound
sub
lcall
add
cmp
mov
lods
mov
and
ja
push
cmpsl
mov
pop
cmpsl
fdiv
test
mov
cmp
jnp
xor
or
test
pop
subb
cwtl
push
stos
jnp
jne
psubusw
push
ret
inc
shrl
insl
push
push
mov
jne
ljmp
int
jo
push
cld
cmpsl
inc
test
int
jb
popf
add
jmp
shlb
fwait
scas
cli
sbb
fnstcw
sub
mov
arpl
nopl
aam
jo
jmp
mov
movsl
cwtl
mov
add
sbb
jno
or
sahf
je
xchg
out
out
mov
cmp
fcmovne
scas
push
mov
jnp
push
cmpsl
and
in
loopne
mov
jo
ds
cmpsb
mov
ljmp
bound
mov
sti
sub
xchg
push
jecxz
pop
adc
lret
inc
je
jo
outsb
jmp
test
pop
shl
xchg
aam
push
cmpsb
loop
add
popa
jl
pop
in
jno
dec
clc
jg
mov
das
mov
scas
dec
fnstenv
dec
fsts
test
jl
in
outsb
xchg
add
add
mov
sbb
sub
lcall
and
xchg
clc
jbe
sbb
mov
push
call
jns
inc
imul
mov
mov
outsl
cmpsl
mov
addl
xor
jg
in
lahf
pop
inc
mov
mov
and
xchg
mov
bound
addb
fwait
les
stc
cli
mov
lcall
adc
imul
jo
repnz
push
lods
insb
lods
loope
pop
xchg
addr16
push
jns
mov
add
sbb
insl
jae
jne
arpl
cs
popf
mov
jge
and
pop
push
fsubs
repz
jge
movsl
lcall
jp
jae
xchg
mulb
push
cmp
outsb
sub
sub
fwait
cli
xor
or
cmp
cmc
mulb
imul
xor
pop
add
or
dec
ret
std
les
ret
popf
rcr
into
adc
cmp
imul
sub
add
jp
outsl
les
stos
adc
cwtl
jae
push
stos
add
stos
push
out
add
mov
loopne
sahf
inc
inc
mov
int
adc
sbb
push
xor
je
dec
cmp
sub
je
dec
push
xchg
sbb
mov
jecxz
ret
in
add
movsl
inc
mov
les
jne
jns
sub
mov
push
aam
ret
inc
push
xor
mov
cmp
scas
xchg
xor
sub
dec
sbb
cmpsb
rep
or
jge
test
aad
dec
dec
xchg
jbe
mov
mov
rclb
mov
mov
xchg
gs
es
mov
sarb
les
je
fidivs
lret
inc
dec
in
jg
jmp
ja
sbbl
movlps
lock
jg
pop
inc
call
insl
lods
mov
pop
fwait
arpl
popf
push
jl
and
iret
push
ret
pop
enter
push
lock
mov
adc
jb
mov
push
cmpsb
push
popa
fsts
add
inc
loop
sar
int
addl
jmp
inc
movsb
popa
push
push
mov
mov
imul
lods
ficomps
dec
insl
pop
ss
into
scas
push
cli
ret
lret
mov
mov
jle
daa
cmp
mov
sbb
int3
sbb
bound
inc
cltd
mov
adc
fmulp
jae
lret
lods
scas
mov
aad
xchg
int
cmp
repnz
pop
add
push
xchg
sbb
and
pop
jns
lar
test
mov
dec
or
pop
data16
sub
and
cmp
pop
repnz
roll
movsl
sub
mov
pop
les
mov
xor
arpl
pusha
arpl
and
pop
ret
inc
jl
jbe
outsl
jge
lret
mov
mov
rcl
inc
mov
decb
mov
cmp
inc
dec
dec
out
jge
add
jmp
fwait
jg
insb
scas
fisubs
push
inc
jnp
outsb
mov
pop
cmp
test
jmp
fldcw
idivl
cmp
dec
jne
mov
sarl
sub
js
xchg
aam
jl
mov
lcall
add
cltd
inc
loop
cltd
movsb
inc
inc
aam
jbe
push
into
je
fwait
xchg
lahf
xor
leave
addl
fdivp
or
fcomps
movsl
cltd
xchg
mov
int
iret
cmp
xor
mov
xor
cmpsl
xor
mov
jnp
adc
cmp
fsubrl
cmp
ret
ljmp
push
and
std
loop
mov
pop
lret
nop
dec
xchg
ja
cmp
fs
fildl
into
and
jg
arpl
cs
mov
xor
dec
sbb
fistpll
xchg
dec
add
shrb
icebp
sub
cld
bound
shrb
jne
gs
into
jge
jno
cmpsb
cwtl
in
loop
xor
or
sub
iret
push
add
mov
jp
or
adcl
lea
adc
repz
and
andb
cmpsb
sub
js
popa
jnp
mov
iret
outsb
test
das
xchg
int3
insb
mov
or
add
or
sub
cmp
hlt
xor
inc
mov
inc
ret
xor
testl
cmp
mov
pop
lcall
enter
je
cmp
xor
addl
int
cmp
dec
add
arpl
das
adc
pop
dec
jbe
and
push
sbb
mov
shll
push
xor
loope
pop
js
push
jp
popa
push
sbb
adc
push
xor
mov
inc
pop
mov
jle
cmp
xchg
pushf
mov
mov
nop
mov
cmp
mov
js
or
and
lods
cltd
mov
mov
push
addl
inc
push
xchg
xchg
pop
mov
inc
and
mov
mov
js
cwtl
ffree
in
sti
sbb
mov
mov
jmp
imul
scas
arpl
fnstcw
cmp
jge
adc
cmp
xor
gs
mov
cmpsb
cmp
add
or
mov
aad
and
cwtl
aaa
jb
xchg
push
scas
stos
adc
cmp
or
in
jae
pop
push
js
mov
xlat
adc
inc
in
fildl
fisubrs
fsubrl
inc
mov
dec
mov
lods
or
outsb
movsl
xchg
push
mov
xor
cmp
dec
leave
mul
int3
pop
dec
fstl
push
push
sti
xchg
ret
outsb
dec
in
pop
jb
dec
dec
fmul
cmp
lock
push
mov
leave
dec
xor
xchg
sbb
in
mov
movsb
jno
sub
test
fiaddl
js
dec
add
jp
daa
daa
test
test
mov
jmp
lds
fstpl
jae
xchg
jb
push
test
add
lcall
mov
rorl
push
cwtl
outsb
lock
xor
adc
ljmp
and
sub
sbb
push
jo
inc
mov
pop
lahf
push
or
push
add
sub
gs
jl
int
mov
and
push
arpl
xchg
std
mov
hlt
inc
or
leave
shrd
lret
pop
stc
add
xchg
andb
movsl
fs
hlt
daa
jle
xchg
jg
loope
cmp
fcompl
mov
dec
mov
cmp
int3
fidivrs
xchg
rclb
fcoms
mov
jbe
pop
es
into
cmp
cmp
dec
push
outsl
mov
xor
and
push
fwait
fs
mov
xor
cmp
das
rcr
cmp
fcomp
cmp
mov
add
xorb
test
subl
dec
push
mov
test
sub
leave
sub
sub
adc
into
jns
pushf
push
out
fnstenv
data16
subb
add
xchg
xchg
idiv
lcall
fwait
out
add
out
sti
imul
loope
and
in
add
fucomp
cwtl
jg
jno
push
stos
sub
pushf
cwtl
jnp
push
fidivl
sbb
cmc
fnstcw
jne
cld
adc
adc
push
adc
xchg
in
push
lahf
sbb
push
push
mov
push
cmpsl
and
fs
imul
mov
push
cmp
inc
mov
fnsave
dec
test
pop
sbb
xchg
int
and
xchg
dec
int3
or
shll
xor
sub
movsl
mov
jns
mov
inc
sti
jge
push
stos
inc
pop
push
daa
mov
lock
loop
adc
inc
out
cmpsl
aad
test
test
cmp
inc
clc
out
push
jns
pop
adc
add
adc
fcoms
push
jne
sbbl
pushf
xchg
mov
mov
test
xchg
movsl
cs
nop
xchg
imul
pop
dec
mov
inc
rcll
pushf
cmp
js
mov
add
je
scas
or
mov
js
mov
add
jns
arpl
sbb
cmp
pop
mov
push
or
or
les
add
or
cmp
lods
dec
add
test
fldcw
leave
cld
insb
cs
mov
js
pop
bound
xor
pop
movsl
or
pop
add
popa
jp
vcvtpd2psy
enter
dec
adc
sbb
imul
addr16
adc
add
inc
loop
fldl
push
daa
in
inc
jo
cwtl
jecxz
and
dec
es
push
dec
cltd
scas
fimuls
add
jns
aam
mov
sahf
or
pop
add
fs
scas
push
or
rcrl
push
cmp
fcmovbe
les
add
lods
fdivrs
or
xchg
jnp
out
leave
int3
sbb
cmp
pop
movsl
loope
pop
mov
fiaddl
pop
mov
cwtl
cli
hlt
pop
loope
stc
shlb
gs
mov
leave
lret
pop
fwait
test
jne
sbb
pop
cltd
test
jp
js
jb
movsb
mov
xchg
fstp
cli
icebp
rcll
pop
cmp
lock
sbb
adc
fs
pop
dec
xchg
enter
fisttps
das
into
adc
pop
sbb
imul
sbb
or
sbb
or
push
sbb
in
cmp
shlb
jl
mov
fnstsw
int
inc
pop
fwait
orb
mov
les
fst
pop
shll
xor
dec
repz
xor
fs
pop
and
add
loope
mov
inc
aam
test
or
pop
popa
fldenv
cli
subl
pop
stos
andps
aam
data16
lock
fcomps
cmp
xchg
in
add
xchg
rcrb
and
orl
mov
mov
out
inc
mov
ret
mov
les
pop
cmp
jbe
insl
push
js
push
pop
jae
pop
outsl
pop
xor
jle
jo
sahf
dec
pop
pop
mov
push
ljmp
jne
push
je
into
or
push
stos
fimull
mov
inc
in
jne
jns
outsb
and
cmp
xor
clc
jns
jne
jo
sub
fwait
jne
cmovno
pop
add
pop
pop
das
push
mov
mov
mov
insb
fstpl
push
iret
dec
inc
or
mov
push
lock
pop
fnstcw
fimuls
lahf
and
lds
popl
mov
addb
push
mov
xor
cmovbe
inc
lcall
pushf
sbb
ffreep
out
mov
cmp
adc
cmpsl
cmp
fs
or
sbb
add
outsb
lcall
xorl
icebp
test
mov
lret
add
fnstenv
cmp
addr16
push
dec
add
clc
sti
mov
out
sub
cltd
xor
cmp
ffree
adc
add
out
cmp
dec
push
pop
cmpsl
dec
cs
stos
shl
pop
inc
add
pushf
jle
scas
jb
fsubrl
adc
inc
sahf
fsqrt
out
push
inc
fcomps
sub
dec
xchg
adc
cmpsb
jne
fnsave
mov
mov
mov
lock
stos
cmpsl
xchg
out
ret
mov
cmp
push
les
xchg
and
pop
push
das
mov
add
inc
or
arpl
add
cmp
sub
dec
push
in
push
popa
mov
xchg
mov
mov
ja
mov
scas
sub
aam
cmp
jmp
sbb
shll
push
ljmp
sar
add
out
fldenv
pop
inc
fcomip
das
push
ja
rol
cltd
cld
cmpsb
fisubrl
push
frstor
push
xlat
push
lret
daa
jmp
xchg
xchg
daa
sbb
jg
mov
inc
in
xor
out
rorl
int3
push
ret
xchg
jp
mov
xor
data16
notl
mov
stos
subl
add
jb
jae
pop
push
aam
mov
aam
mov
aas
cmc
fs
js
je
jbe
dec
imul
push
inc
pop
mov
cmp
pop
ret
cmp
faddl
push
insl
inc
lret
or
dec
and
fucomp
mov
pop
mov
loop
sbb
jns
addr16
sarb
out
mov
je
nop
pop
mov
cmp
lds
jb
rcll
je
out
je
fnstenv
enter
lcall
xchg
shrl
jo
sahf
movsb
out
push
imul
pop
or
jno
iret
dec
cmp
xchg
lock
lahf
fs
or
or
into
mov
clc
aas
sbb
adc
and
fwait
incl
xlat
xor
std
rorb
push
repnz
xchg
rol
pop
dec
dec
adc
or
mov
pop
inc
mov
push
jbe
cmp
push
mov
and
cmp
daa
gs
bound
inc
push
inc
add
test
js
jae
jl
jmp
jno
pop
or
imul
jne
cmp
xchg
jne
cmpsl
scas
fidivs
iret
pop
sbb
mov
fwait
les
lret
movl
cld
adc
xor
jmp
add
adcl
lods
loope
arpl
rolb
scas
pop
or
add
imul
mov
pop
cmp
lret
loop
fistpl
stc
arpl
out
sbb
out
loope
mov
push
jmp
cld
ficompl
cwtl
in
jp
or
roll
into
rcr
sti
sahf
js
xchg
lock
jecxz
jle
outsb
jne
push
xchg
xor
stc
sub
xchg
mov
xchg
jl
fidivs
test
jae
mov
xchg
push
add
lods
cmp
shl
dec
leave
and
inc
add
lahf
loope
sbb
mov
shrl
fdivrs
or
repnz
jns
push
sbb
popa
mov
dec
test
dec
daa
jmp
test
mov
stos
xchg
adc
push
fstp
sub
adc
idiv
call
sbbl
or
pop
mov
into
insb
pop
dec
les
pop
dec
clc
dec
stos
test
fs
lds
xchg
stos
repnz
ds
and
cli
sbb
xchg
add
dec
loope
pop
inc
push
add
in
stc
push
cmpsl
test
jo
lcall
add
dec
push
push
in
xor
scas
mov
mov
gs
jns
mov
xor
cmpsb
cmp
hlt
mov
push
fsqrt
aas
aam
mov
fbld
cld
cmpsb
add
aas
sar
mov
movsb
arpl
dec
cmpl
lret
test
pop
push
fsubl
rcll
jo
scas
repnz
popf
nop
cmp
pop
pop
cmp
lcall
es
xor
dec
das
js
clc
insb
in
popa
je
ret
int3
xchg
ljmp
adc
or
pop
movsl
push
pop
or
push
lds
jecxz
sbb
data16
shrb
int
lods
dec
es
data16
pop
fidivs
adc
int3
hlt
jg
jne
or
imul
test
mov
xchg
cmp
sbbb
lods
lds
mov
pop
scas
cmp
cli
adc
jns
enter
and
mov
js
call
mov
dec
hlt
pop
xchg
sbbl
pop
pop
scas
inc
xchg
sbb
xchg
bound
add
mov
ja
cmp
cmp
addr16
aam
adc
jb
mov
es
sub
fcomps
jo
mov
jle
lods
xor
dec
rsm
inc
lcall
or
dec
sub
cmp
fstpl
and
ror
xor
jb
in
xchg
bound
dec
jl
inc
out
xchg
dec
ds
jo
adc
popa
add
mov
pop
in
sub
pop
lcall
and
mov
adc
pop
out
dec
divb
andb
xchg
push
push
repnz
hlt
jno
inc
mov
fldcw
cmp
xchg
mov
jl
les
pop
cmp
mov
cmp
das
enter
inc
push
fisubl
sti
push
fs
orb
mov
fidivs
jno
pop
xchg
jo
jg
and
pop
push
movsb
mov
lahf
mov
pushf
leave
scas
std
inc
arpl
arpl
push
push
jb
add
or
fmull
inc
int
xchg
cmpsl
and
addr16
xchg
xor
xor
or
cmp
cmp
ss
test
xchg
lods
outsb
mov
cmp
int
cmp
test
or
pop
rorl
fs
cli
xor
or
mov
mov
shll
or
mov
push
data16
shrl
lcall
and
or
out
cmp
fstl
mov
rorl
pop
mov
scas
mov
pop
lods
mov
arpl
cli
jnp
test
mov
js
int3
daa
repz
add
fwait
mov
pop
adc
ss
cli
jge
xsha256
cmpsb
xchg
orl
and
mov
repz
insb
aam
repz
dec
int
pop
xchg
in
aam
inc
ret
jmp
fsubs
ja
xchg
mov
lret
mov
popa
outsb
sub
jo
pop
test
lcall
inc
repnz
fldcw
inc
jno
jnp
fcompl
jmp
call
popf
push
dec
mov
out
rcll
out
or
mov
push
adc
xchg
push
fwait
insl
lods
mov
cmpsl
inc
shll
push
jl
in
lock
ficomps
stos
pop
adc
lret
int3
insl
or
cmpsb
push
or
lods
inc
cli
jmp
or
pop
loop
mov
scas
push
fnstcw
shlb
jb
push
sahf
sub
out
mov
cmc
mov
jne
sbb
fldcw
mov
dec
scas
add
push
pop
lds
das
pop
es
inc
pop
cmovne
inc
rorb
cmpb
mov
push
in
popf
lods
xchg
imul
mov
fdiv
sub
ljmp
jmp
xchg
or
lcall
inc
ljmp
sbb
dec
fsubs
in
call
jmp
xor
push
sub
xchg
arpl
dec
xor
imul
pop
out
dec
cmp
mov
fdiv
and
mov
jae
mov
stos
adc
cmp
and
xor
fnstcw
insl
jecxz
sahf
jo
out
addl
mov
push
pop
sbb
cmp
mov
test
int
fcomip
pop
mov
aad
add
xchg
mov
data16
inc
mov
dec
mov
mov
cmp
lods
and
int
mov
sub
push
cmp
insl
sbb
leave
and
or
inc
mov
addr16
mov
mov
xchg
cmpsb
jb
inc
shlb
mov
mov
jb
int
addr16
pop
push
or
out
xor
jns
into
mov
insb
cli
fimuls
jns
cmp
xchg
je
xor
mov
clc
and
addr16
popf
jne
jl
cmc
sub
mov
add
loopne
jg
inc
push
loop
sub
pop
and
arpl
fnsave
loope
cmp
into
cwtl
and
rcrb
test
sbbb
mov
cli
sbb
push
cmp
mov
dec
jle
jmp
add
popf
and
push
fidivrl
mov
pushl
das
call
cmc
ret
cld
js
mov
adc
jns
push
data16
adc
aas
push
inc
out
sbb
aaa
popa
fsts
inc
sub
stos
push
clc
fcmovbe
insl
sbbl
push
js
pop
jo
scas
cmp
stc
inc
jmp
jb
data16
jge
jno
fwait
push
dec
and
pop
outsl
add
mov
outsl
je
adc
movsl
push
loope
out
fisttpl
in
push
and
cmp
push
sbb
sbb
dec
xorb
mov
push
push
cmp
lcall
icebp
ja
loop
rcrl
cmp
pop
cmp
lds
mov
mov
testl
cmp
add
shlb
xor
adc
and
and
add
jecxz
gs
and
jp
mov
cmpsb
cld
jge
cmpsl
sbb
rclb
aaa
scas
inc
mov
pop
lahf
xchg
cmpsb
in
mov
mov
dec
ljmp
fstl
mov
mov
fs
pop
adc
lods
arpl
inc
xor
out
and
sbb
test
inc
cmp
cmp
ss
cmp
movsl
xor
or
inc
push
and
mov
loop
add
and
lret
fsts
fdivs
test
fmul
xor
inc
in
imul
fcompl
cltd
cmpsl
std
mov
add
push
aas
jmp
movsl
insb
add
cmpsb
pop
dec
stos
push
arpl
clc
jae
fildll
dec
mov
in
pop
dec
xchg
and
arpl
fldl
dec
cmpsl
sub
ret
adc
nop
pop
dec
dec
adc
xorl
jne
mov
out
icebp
push
cmpsl
dec
jmp
adc
cmpsb
mov
leave
testb
int
popfw
sub
xchg
fnsetpm(287
cltd
push
dec
jg
in
aam
sub
add
pushf
dec
pop
cmp
fstpt
mov
out
inc
cmp
cli
mov
sbb
cmp
and
xor
adc
daa
arpl
sbb
mov
xor
add
jb
in
pop
pop
cs
mov
movsb
int
push
jecxz
jecxz
cmp
dec
fsincos
lods
or
push
jne
mov
adc
loopne
mov
cmpsb
lods
int
xchg
lds
call
aam
js
push
loope
fldcw
aam
xchg
in
and
push
cmpsb
repz
out
cmpsb
lahf
mov
mulb
mov
movsl
dec
paddw
outsb
nop
and
andl
sbb
add
test
xchg
jne
insl
sbb
xchg
xchg
dec
cwtl
mov
mov
clc
cmpsl
maskmovq
negl
fmull
jle
pop
out
dec
int3
stc
hlt
push
jmp
jmp
ja
jno
popa
add
pop
ljmp
jno
push
es
mov
ret
fldenv
in
test
push
push
xchg
icebp
jae
ss
push
cmp
test
dec
dec
aaa
and
daa
dec
add
pop
pop
cmp
push
add
mov
push
and
adc
fldl
js
adc
dec
xchg
xor
dec
cwtl
fdivs
xchg
cmp
scas
sbb
mov
int3
fisttps
jo
dec
add
shlb
xchg
mov
lret
gs
bound
push
call
ja
push
dec
mov
pop
add
bound
push
test
xchg
adc
mov
jbe
dec
mov
ficompl
adc
add
xchg
jno
sbb
lret
int3
add
dec
fdivp
ss
cmp
dec
or
stos
cmp
push
mov
cmpsb
push
cmc
jge
xor
outsb
out
mov
add
cli
pop
mov
jno
inc
aad
push
jp
in
jns
dec
out
xchg
push
xchg
inc
cmpsb
test
lods
xor
aam
push
push
fnstenv
fwait
sub
insl
pop
sub
repnz
sbb
outsl
aad
adc
mov
dec
int
add
xchg
fsts
fld
jo
mov
jl
ficoml
scas
fildl
nop
dec
mov
pop
fdivr
lret
mov
xorl
dec
pop
pop
imul
and
sub
int
js
or
cmp
loop
mov
in
xchg
insb
scas
fstps
or
repz
adc
rcll
add
in
std
pop
fistl
call
hlt
or
icebp
into
sub
jg
imul
orb
out
or
fisttps
inc
push
stos
cmp
jne
dec
inc
cltd
aam
cmp
mov
xchg
adc
push
mov
incl
rorl
pop
mov
dec
out
jno
cmp
jmp
jno
sahf
mov
add
mov
sub
xor
push
push
adc
push
pop
fdivrl
rolb
cmpsl
jp
xchg
daa
jae
repz
fildl
jne
pop
insl
xchg
fucomp
fcoml
aam
sub
sbb
mov
sbb
add
ret
adc
mov
inc
hlt
mov
add
icebp
dec
push
adc
mov
inc
mov
cmp
sti
jb
mov
into
and
call
sbb
mov
mov
aad
mov
xchg
fstpl
pop
mov
jnp
pop
loop
jge
xor
mov
mov
icebp
xlat
sahf
lcall
clc
fcomps
inc
mov
outsb
xchg
imul
aam
push
lds
cmp
mov
inc
lds
and
xsavec
hlt
dec
packuswb
mov
and
lret
xchg
je
int3
ja
sbb
addb
cmc
lods
adc
stos
fs
pop
push
mov
push
jo
icebp
pop
sbb
lret
jo
arpl
in
push
xor
xor
cli
jo
sub
cmp
and
jae
stos
in
and
movsb
xchg
jnp
cmpsb
xchg
mov
or
and
in
jae
dec
lcall
push
mov
fxch
sbb
push
mov
arpl
popa
nop
mov
push
mov
insb
pop
cmp
and
in
arpl
in
insb
sbb
xchg
cmpb
mov
mov
add
repnz
xchg
push
ret
and
or
scas
ret
ja
cmp
or
fisubl
pop
cmp
fwait
or
scas
popa
push
popf
andb
adc
ret
dec
nop
aas
add
adc
insl
shll
pop
inc
ret
adc
xor
popf
enter
add
cmp
loop
out
adc
xchg
pop
push
pop
ret
pop
push
repnz
jge
lret
inc
mov
dec
dec
sub
xchg
movsb
aaa
jl
in
mov
scas
mov
mov
xchg
mov
cwtl
adc
fwait
dec
mov
push
outsb
out
sbb
loopne
aam
sahf
xchg
cwtl
les
mov
in
inc
fisttpl
adc
or
inc
scas
and
mov
xchg
cmp
lea
sti
xor
jno
fwait
int3
pusha
pop
lds
push
cmp
or
lea
shll
js
or
pop
inc
mov
popa
jne
test
dec
scas
lds
scas
add
xchg
mov
pop
sub
mov
daa
imul
cmp
or
cltd
mov
xor
insl
je
fimuls
jecxz
jmp
imul
pushf
mov
xchg
pop
add
fs
test
inc
push
out
and
pop
sub
pop
mov
jl
cmpsl
mov
pop
stos
mov
mov
in
stos
movsl
mov
mov
xor
out
insl
int3
and
inc
xchg
popf
or
ret
call
cmp
sub
mov
xchg
jne
in
pop
imull
sbb
cmc
adc
xor
jecxz
xor
or
in
cld
dec
inc
adcb
mov
xor
repnz
jo
andl
aam
aad
or
dec
es
jo
testl
push
jae
xchg
adc
loope
sbb
mov
add
imul
mov
aad
aad
ss
aam
divl
dec
mov
hlt
dec
mov
cmp
addr16
xchg
js
iret
and
jo
push
lret
movsb
test
xchg
push
xchg
mov
orl
into
dec
pop
aad
dec
sbbl
cmpb
and
jbe
pushf
mov
push
aad
pop
xchg
push
pop
jg
mov
adc
dec
mov
dec
xor
mov
loop
bound
jb
lea
mov
mov
sbb
adc
inc
jno
call
jg
or
movsl
ljmp
stos
add
fwait
dec
rcll
push
cmp
fnstsw
insb
xor
add
adc
loop
dec
xor
icebp
dec
xchg
push
icebp
lock
xor
sarb
fidivs
jo
fsubp
pop
jo
xor
subl
xchg
ja
icebp
mov
mov
and
fdivrs
mov
sbb
fsubl
aam
pusha
xchg
push
xor
mov
fwait
mov
cmpsb
jl
xchg
xor
lock
scas
ficoml
xchg
aas
push
aam
hlt
arpl
arpl
sub
fucomip
out
adc
js
shlb
aam
loop
fistl
stos
add
or
stc
ror
fisubrl
les
mov
std
push
mov
mov
outsl
jbe
or
movb
loope
xor
popf
sbb
xor
fsubp
cmp
nop
rolb
and
lods
jo
and
je
adc
test
cwtl
add
xor
mov
jo
mulb
dec
jge
dec
xor
leave
js
pop
jne
xchg
dec
add
out
xor
lret
sub
add
pop
imul
ja
sbb
movsl
inc
test
sti
mov
inc
xor
sbb
std
and
xchg
fs
cwtl
mov
daa
repnz
and
jb
pop
test
xor
pushf
ss
xor
out
and
lds
movsl
rol
sbb
xchg
inc
jns
or
mov
mov
lret
stos
push
sub
mov
jp
pop
push
out
bound
scas
mov
mov
mov
pop
pop
loope
adc
gs
mov
inc
lahf
pop
sbbb
push
aam
cmpsl
add
dec
add
jmp
lcall
icebp
nop
mov
jecxz
das
jp
inc
adc
pop
fsts
test
dec
fwait
mov
jo
fbld
xor
sbb
mov
test
dec
add
aam
mov
clc
lcall
lahf
mov
lds
add
pop
daa
mov
in
pusha
les
lret
jo
and
icebp
dec
mov
lcall
inc
jne
test
mov
lds
clc
dec
mov
pop
out
xor
fstl
mov
out
cmp
mov
dec
ret
add
lea
adc
stc
add
mov
mov
dec
test
test
daa
fimull
in
pop
lds
lret
dec
std
shlb
mulps
popf
subb
jns
fcompl
jp
fdivl
add
mov
xor
dec
loope
daa
cld
jle
fcmove
test
dec
fcomp
or
jns
rcr
dec
mov
jge
adcl
dec
jg
pushf
sbb
xchg
jae
cmp
mov
je
inc
fisttpl
call
jo
cmp
cld
cmp
fbstp
movsb
mov
psllw
push
aad
push
loope
adc
dec
outsb
cld
pop
test
addb
iret
inc
into
push
and
cwtl
cwtl
in
push
mov
jo
xor
sub
push
inc
mov
xchg
shlb
and
scas
repnz
sub
mov
xchg
into
xlat
aam
mov
aam
sub
fidivrs
mov
add
lahf
sti
add
or
sbb
loop
scas
xchg
mov
dec
out
sub
stos
xchg
cmp
cli
push
and
sahf
iret
xchg
sbb
mov
ficomps
mov
sbb
stos
lods
mov
cmp
leave
mov
mov
fildll
rorl
mov
fwait
adc
arpl
cli
jg
jle
fadds
fisttpll
insl
mov
inc
mov
inc
pop
inc
sahf
lret
sub
pop
xor
sub
adc
outsl
es
push
mov
or
in
das
adc
inc
mov
sub
add
out
pop
mov
push
test
inc
dec
mov
push
or
pop
sarl
xchg
xorl
imul
push
mov
push
mov
daa
lcall
rcrl
jecxz
add
imul
sbb
mov
mov
mov
pop
cld
mov
enter
mov
cmpsb
cmp
sub
imul
aam
inc
lahf
mov
imul
mov
jl
mov
ja
andl
stos
push
pop
dec
xor
xor
jne,pt
push
out
outsl
lock
out
out
push
or
les
dec
push
jg
inc
dec
negb
leave
mov
call
cmp
icebp
or
lock
testl
rolb
add
dec
lcall
pop
and
repz
or
cmc
mov
cmpsl
test
lcall
sbb
mov
cli
hlt
mov
jno
jp
cmp
pop
jg
inc
out
cmp
int3
and
lret
rcr
and
aaa
loopne
pop
mov
cmp
cmpsb
in
outsl
inc
loope
adc
xchg
pop
add
jae
lds
cmp
loop
sbb
adc
lea
sub
stos
inc
call
dec
and
mov
loope
cwtl
xor
loope
push
xchg
lret
ror
ja
test
je
ljmp
clc
push
je
out
push
sbbb
fcomip
fucomi
lock
shl
add
fnsave
inc
push
jo
test
test
pop
mov
inc
or
lods
pop
test
pop
ja
addb
popf
loope
mov
pop
subb
cmpsl
push
and
mov
aad
in
ffreep
bound
jns
pop
je
les
inc
lods
test
sbb
cmp
pop
push
movsl
dec
mov
and
jecxz
pop
dec
sbb
je
push
mov
xchg
ficomps
pop
adc
mov
xor
xchg
hlt
pop
mov
add
nop
cmp
pop
imul
xchg
mov
pop
fisubs
jmp
icebp
aad
pop
loopne
shlb
dec
test
enter
mov
push
xchg
pushf
pop
push
jg
jp
cld
pop
lods
jo
lret
dec
adcb
xor
popa
cli
subb
jb
mov
lock
aam
and
aas
rorl
cmp
push
lock
into
adc
pop
adc
sahf
pop
dec
sub
lods
dec
out
xchg
jae
push
jbe
cmpsb
xor
push
mov
frstor
mov
add
push
xor
js
shl
inc
scas
inc
imul
mov
jp
test
add
sub
inc
in
movsl
adc
jae
je
sub
jl
adc
dec
fcmovbe
push
insl
mov
and
inc
idivb
push
inc
pop
jb
adc
jne
les
into
jo
cmc
or
lahf
mov
hlt
pop
mov
inc
dec
pop
xchg
push
jno
es
js
imulb
pop
mov
pop
pop
enter
jno
adc
mov
cmpsb
push
mov
push
mull
push
sbb
jne
divl
cmpsb
add
lods
divl
pop
ret
inc
and
shlb
add
push
push
xor
jp
fs
and
or
sarb
pop
dec
lods
loop
scas
xchg
negl
push
sbb
jp
std
add
fld
add
add
pop
dec
scas
inc
and
add
pop
lods
in
rcll
sbb
repnz
jle
cmp
lods
sahf
mov
sub
popf
scas
mov
cld
fs
mov
cld
ret
fwait
xor
repz
jl
int
out
mov
ja
push
divl
jo
mov
daa
jno
int
cmpb
leave
sub
nop
xchg
jge
fs
pop
repz
mov
inc
and
cmp
sub
xor
scas
icebp
mov
or
lods
mov
jge
sbb
jmp
jo
pop
lcall
nop
out
add
mov
inc
push
je
jae
pop
sbb
cmc
gs
xchg
ljmp
push
movsb
in
into
out
and
inc
pusha
les
lds
sahf
adc
jg
mov
push
push
shll
test
aaa
lcall
pop
jb
or
movsb
adcl
and
jb
dec
fimuls
mov
xchg
rcrb
cmp
mov
push
jl
insb
roll
fldl
xchg
push
add
aas
std
dec
std
jnp
lods
aam
inc
or
pop
cmp
repnz
dec
ret
fxch
xchg
ljmp
dec
into
mov
les
iret
hlt
fs
and
ja
ss
jnp
and
call
adc
lret
fcom
mov
push
les
aaa
inc
adc
lcall
pop
mov
pop
jmp
xchg
mov
addr16
enter
fs
in
pop
and
test
imul
pop
cmc
loope
pushf
movl
rcl
orb
push
xchg
push
sbb
push
pop
mov
mov
mov
mov
outsb
fstl
jb
sub
and
mov
imul
xchg
cmp
dec
jmp
mov
jge
lcall
pop
mov
out
arpl
mov
popf
xor
fstpl
jnp
mov
or
out
sbb
sahf
push
mov
mov
fistl
shlb
in
flds
dec
andl
sub
arpl
cmp
pop
mov
mov
jbe
mov
ds
xchg
mov
rcrb
jge
test
inc
inc
jb
cmp
jo
jle
and
jp
mov
rcrb
adc
insb
arpl
repnz
arpl
dec
jns
inc
mov
fistpl
bound
add
pop
mov
ljmp
cmp
jns
ja
inc
or
into
or
sbb
inc
daa
addr16
mov
arpl
xchg
xor
or
xor
fwait
inc
fcompl
mov
adc
scas
pop
cld
sbb
cmp
mov
repnz
xchg
pop
test
sub
nop
ss
pop
push
scas
fs
dec
and
bswap
xor
gs
xchg
movsl
push
fwait
imul
cmp
add
dec
jle
test
xor
cmp
inc
or
les
gs
mov
idiv
adc
pop
stos
clc
dec
orb
nop
pop
mov
adc
test
sub
repz
mov
test
jp
insb
test
leave
imul
out
dec
in
jle
call
js
dec
inc
je
cmp
repnz
xchg
dec
jb
cmp
xorl
int3
fs
into
je
sbb
lock
subb
jns
mov
out
jg
and
cmpxchg
and
pop
xor
cmc
cmp
jo
inc
mov
dec
gs
int
xor
out
scas
sub
jno
dec
cwtl
xor
inc
test
cmp
jo
inc
dec
ret
iret
hlt
jb
insl
add
xchg
pop
xchg
out
fisubs
popf
jnp
push
mov
inc
dec
frndint
sub
sub
ss
scas
jl
cmp
push
cld
add
lods
cmp
inc
push
les
push
inc
mov
imul
loope
insl
dec
push
loopne
stos
int
add
push
cmp
ja
xchg
mov
push
imul
or
shrl
mov
out
inc
mov
pop
mov
dec
les
inc
fwait
inc
pop
inc
outsb
out
xor
orl
insb
jg
dec
daa
ds
jnp
ja
sub
iret
ljmp
pop
lds
aam
dec
pop
pop
inc
cmp
daa
cmpb
cmp
sbb
sahf
stc
scas
dec
jae
cwtl
xchg
jo
jae
icebp
loop
pop
lahf
loop
mov
cmp
loope
std
das
push
loop
push
xor
test
lock
aas
mov
pop
dec
in
or
test
fstpt
push
fnstsw
mov
fdivs
dec
lcall
negl
mov
or
and
jno,pn
push
add
cwtl
mov
sbb
in
pop
ret
addr16
sub
mov
adc
or
mov
sub
cmp
fnstcw
cwtl
pop
fisttpll
or
dec
repnz
in
fs
aaa
stc
xchg
dec
push
pop
cmp
jb
dec
subl
pop
shlb
jp
push
add
inc
dec
aad
push
lock
cmp
sarl
enter
in
add
std
dec
xchg
push
dec
mov
sbb
xchg
add
add
movsl
out
outsb
bound
add
aaa
clc
in
out
sub
sub
jle
mov
adc
mov
fdivl
stos
dec
sbb
inc
test
pop
cmp
je
fcoml
xor
jno
and
aas
jne
push
jns
jecxz
mov
leave
lock
scas
mov
xchg
adc
jecxz
dec
inc
loope
pop
fcmovbe
test
cwtl
xchg
mov
push
jge
dec
sub
outsl
nop
out
insb
lods
cmp
int
in
xchg
shrb
adc
into
pop
dec
xlat
jo
fcom
sbb
mov
cwtl
jge
xchg
clc
addb
xlat
add
pushf
iret
sahf
dec
adc
adc
adcb
dec
mov
mov
adc
mov
aad
jo
fcoms
cmp
ret
aad
push
andb
loop
imul
sbb
xchg
push
xlat
adc
sbb
bound
imul
adc
jp
sub
int3
not
sub
push
fs
fisubl
cmp
inc
idivl
scas
jns
daa
pop
lock
addb
ja
dec
fbld
aam
les
and
jge
fcmovnbe
test
lds
inc
pop
add
mov
insb
jp
popa
fwait
xchg
mov
lcall
mov
sbb
inc
mov
xchg
insl
mov
jecxz
sub
ljmp
jno
sbb
pop
jno
mov
ret
hlt
jno
mov
sbb
mov
sbb
cmp
jg
mov
ljmp
inc
stos
xchg
dec
mov
js
xor
and
jbe
jne
ss
mov
mov
mov
leave
fisubl
sti
je
or
mov
cmp
xchg
jnp
stos
xchg
and
loopne
cmpsb
jg
mov
push
mov
xchg
mov
outsb
mov
lds
or
cmpsb
rcl
jnp
insl
jne
inc
pop
imul
cmp
mov
fistpll
popa
xor
flds
cmpsb
pop
push
out
and
ds
clc
adc
mov
int3
bound
inc
ror
push
mov
bound
xor
lods
sbb
sub
mov
inc
xchg
xor
lock
xchg
push
sub
cmp
nop
pushf
es
inc
cld
pop
push
mov
call
lret
xor
mov
sub
std
rcrb
loopne
push
and
pop
cmp
movq
dec
mov
jle
cwtl
jecxz
sahf
mov
jp
dec
xor
pop
jnp
inc
outsb
sbb
xchg
pop
sti
fucomp
shrl
lret
dec
ds
pop
mov
les
jno
insl
jl
out
add
and
xorl
and
xchg
push
xchg
nop
inc
lds
stos
pop
xchg
push
cmp
roll
cltd
rcl
jns
shll
imul
cmpsl
aas
mov
lock
mov
mov
test
mov
lret
jno
into
sub
jl
loope
xchg
fstl
fcoml
and
cmpsb
loope
and
pop
sub
imul
pop
aam
adc
in
clc
lods
scas
push
adc
mov
scas
cmpps
xor
xchg
xor
andl
xchg
pop
scas
adc
cmp
data16
or
cmp
js
test
xchg
mov
mov
les
repz
fs
dec
or
aad
sub
xor
push
and
jae
fsubl
int3
xchg
data16
pop
aam
data16
arpl
push
arpl
mov
fnstenv
cmp
jp
rep
enter
jno
push
mov
mov
pop
mov
icebp
icebp
fisubs
sbbl
repnz
fildll
addr16
out
lret
out
inc
lret
pop
and
jo
adc
sub
xor
in
cwtl
cmc
pop
jnp
loop,pn
cli
sub
pop
stos
js
sub
lods
ja
lds
mov
dec
adc
inc
pop
in
cmc
cmp
cmpsl
imul
xchg
int3
shrb
push
xchg
push
inc
shlb
dec
sysenter
mov
jp
jg
dec
xchg
mov
cltd
mov
cmp
push
pop
fmull
addb
mov
orb
dec
add
in
test
cmp
push
shlb
sub
add
and
xchg
lods
dec
jmp
iret
mov
fcoms
push
and
dec
mov
adc
jo
neg
inc
pop
mov
fcos
and
repnz
fwait
pop
adc
mov
data16
cmp
xor
cmp
jg
cmp
pop
int3
nop
sub
xor
cmp
scas
jecxz
and
jbe
inc
mov
push
jmp
in
repnz
ret
pop
push
and
lods
push
inc
lcall
repnz
sahf
clc
fldenv
fs
sbb
mov
mov
pop
sbb
xchg
test
in
push
loope
fs
or
pop
dec
movsl
ljmp
movsb
lcall
xchg
push
dec
push
sarb
xchg
cmpsl
movsb
mov
ja
daa
hlt
and
and
inc
les
loopne
pop
xor
pop
or
lds
data16
sbb
jno
sub
sub
mov
push
lods
mov
mov
or
dec
push
gs
loop
enter
xchg
lea
jp
pop
mov
and
mov
fistl
mov
mov
mov
ficoms
sub
enter
jb
dec
mov
inc
dec
cmp
mov
push
stos
cmp
icebp
mov
or
or
adc
jmp
cmp
mov
xor
subl
mov
je
aaa
jg
push
les
data16
pushf
mov
cmpsb
test
push
out
test
icebp
inc
adc
mov
nop
daa
cli
sbb
or
iret
icebp
cmpsb
mov
loope
push
mov
lahf
pop
js
lea
lock
pop
les
cmp
dec
jnp
js
jnp
jne
pop
xchg
pop
js
scas
sbb
mov
lcall
mov
popf
daa
add
js
mov
fs
pop
xchg
mov
xor
js
ret
jb
pop
rcl
bound
mov
in
bound
jbe
fs
shl
mov
xchg
cwtl
jmp
hlt
das
aam
mov
dec
aad
loope
xchg
dec
fdiv
divl
mov
mov
int3
and
sub
je
sub
pop
into
iret
cwtl
jg
js
rcrl
fcmovbe
or
xchg
call
mov
sbb
xchg
movsb
cmp
adc
mov
adc
mov
xchg
pop
pop
xchg
ror
cmp
outsl
and
hlt
inc
cmpsb
repnz
sarl
scas
cwtl
dec
ljmp
cmpsl
push
je
lcall
xchg
mov
iret
push
ja
lods
cmp
aas
loopne
cli
pop
cld
xlat
rcll
addr16
cmp
sbb
sub
rcrb
jbe
xchg
repz
pop
jne
mov
rcrl
push
popf
inc
decb
cltd
xor
mov
cmpsb
jo
les
adc
pop
shll
xor
out
in
mov
jo
cmpsl
sub
mov
dec
push
add
adcl
cmp
xor
sbb
stc
ja
lods
pop
in
sub
sbb
sbb
lds
mov
out
arpl
fwait
pop
sub
mov
lods
jnp
mov
pop
stc
fld
gs
push
sub
insl
js
fistps
repz
ret
mov
cld
clc
mov
and
push
popa
hlt
cltd
dec
test
popf
jae
mov
call
insl
inc
stos
cmp
aas
in
aaa
shl
xlat
pop
pushl
jecxz
dec
mov
outsl
pop
cmp
jmp
orl
cmp
hlt
fwait
pop
push
movsl
mov
cmc
inc
popf
out
and
rcr
mov
shll
sahf
mov
xchg
mov
int3
mov
xorl
aam
dec
loopne
push
and
adc
ljmp
lcall
stc
out
jp
push
pop
fsubl
arpl
out
mov
mov
arpl
sbb
dec
sub
sub
arpl
adc
mov
arpl
ret
xchg
int3
aam
arpl
sbb
bound
sbb
outsl
jnp
fwait
icebp
cmp
repz
loope
cmp
mov
push
icebp
pop
fisubrl
push
rorl
inc
fstps
ljmp
inc
mov
shrb
enter
lds
sbb
data16
add
xor
push
sub
push
daa
mov
imul
cmp
xor
nop
fsqrt
int
movsl
xor
stos
int
shll
pop
nop
icebp
arpl
mov
sub
pop
xor
cltd
in
lods
out
movsl
shl
cs
jo
add
add
cmp
push
push
hlt
push
mov
cmp
mov
xchg
popa
fcompl
mov
pop
test
add
dec
aad
cmp
push
fildll
xor
and
ja
inc
in
cmp
dec
mov
cmp
jbe
lods
aaa
adc
negb
test
out
adc
add
mov
mov
shll
jmp
test
fs
cmp
in
insb
dec
xchg
aaa
andl
dec
ret
sub
test
sub
sub
cmc
push
movsl
mov
dec
cmp
js
inc
pop
push
xchg
push
out
cmp
std
mov
data16
out
in
and
sarb
popa
mov
addb
pop
daa
xor
scas
adc
jo
xchg
dec
arpl
jne
sub
jb
xor
int3
arpl
cmp
fstl
bound
mov
das
imul
inc
pop
adc
dec
js
arpl
and
xor
sbb
addr16
cmp
lds
cld
cmp
addr16
cwtl
es
lods
cmpsb
inc
je
outsb
aam
jbe
dec
fistl
lock
fdivrs
adc
inc
mov
adc
mov
fwait
adc
jge
fnstcw
stc
push
cmpsl
cmp
lock
push
repnz
rcl
pop
push
mov
mov
nop
mov
shll
pop
or
scas
sbb
nop
rorb
int3
stos
jne
jp
ljmp
cld
fistps
fdivl
sbb
dec
jne
inc
inc
jb
hlt
add
ja
adc
jno
jb
pop
clc
ret
insb
inc
inc
pop
dec
scas
cmpsb
sub
pop
imul
adc
ret
sbb
mov
pop
inc
xchg
or
mov
jno
adc
mov
pop
adc
mov
cmp
mov
pop
insl
fst
decl
dec
out
mov
cmp
add
shrl
and
dec
rcrb
call
jo
fistpl
ja
xchg
xchg
int
xor
test
cs
xor
sbb
leave
lods
popa
and
bound
push
sub
push
jo
cmpsl
jle
sub
pop
loopne
rcr
lahf
jb
sbb
outsl
mov
inc
fwait
je
cmp
pop
pop
roll
xor
mov
xchg
jb
lcall
inc
aad
pop
fstpl
addr16
add
jg
jge
imul
cmp
inc
cmp
xchg
mov
add
push
adc
pop
cmp
jge
push
out
jbe
and
xorb
cmp
add
push
dec
in
jmp
xor
cmp
push
mov
cmc
pop
inc
xor
movsl
outsl
les
test
mov
aam
fs
dec
cmpsb
stos
mul
fnstsw
inc
xchg
fiaddl
pop
inc
xorb
jno
mov
aad
push
and
cmpsl
gs
data16
arpl
jp
xchg
fs
mov
inc
hlt
addb
fsubrs
jbe
pop
mov
push
dec
test
rcl
pop
jbe
into
jo
aad
cld
xchg
dec
xchg
push
loopne
nop
fstpl
cmp
and
lcall
into
arpl
sahf
lods
pop
mov
nop
or
mov
xchg
aaa
fsubrs
push
inc
stos
dec
push
outsl
mov
cmpsl
jp
lods
pop
cmpsl
jnp
cmp
push
repnz
xchg
hlt
pushf
fnsave
mov
test
mov
rcll
mull
mov
cmp
xchg
fcom
dec
pop
stos
cmp
and
outsl
push
pop
rcll
stc
dec
cwtl
in
aam
cltd
add
test
pop
pop
aam
sub
loope
pop
in
push
jno
adc
cmp
add
cmp
and
fs
in
shrl
aas
mov
insb
rorb
xor
mov
jle
jo
loopne
jo
gs
loop
cwtl
jbe
repz
push
insl
sub
dec
inc
mov
add
scas
out
inc
jne
push
push
fstps
daa
xchg
shr
xor
ja
add
fwait
pop
stos
xor
stos
mov
lods
cmp
inc
mov
ss
dec
out
dec
mov
pop
iret
sub
sbb
arpl
jne
fs
inc
push
and
icebp
and
adc
mov
fisubl
mov
pop
fbstp
and
jae
xorl
adcl
cmpsl
lcall
cmpsb
lahf
xchg
inc
inc
xor
pop
xor
adc
push
cmp
rorl
and
push
xchg
cltd
xor
dec
jmp
sbb
or
in
cmp
jo
add
loop
mov
arpl
xor
loopne
cmpsb
clc
call
stos
pushf
in
rcrb
hlt
dec
push
xor
int3
movsb
adc
sbb
lret
xor
cmpsl
fxch
mov
insl
mov
outsl
aas
adc
mov
jb
int
push
sub
add
mov
mov
and
mov
ljmp
outsl
fnop
mov
jne
aas
jnp
xchg
or
bound
jae
xchg
xchg
jnp
das
loop
addb
or
jl
adc
movsb
add
push
or
adc
movsb
es
js
push
out
mov
loopne
dec
std
das
mulb
popf
jae
xchg
insb
sub
fcmovnu
dec
movsb
fstpl
pop
dec
dec
movsl
sbb
aam
repnz
leave
addl
data16
cmpsb
mov
cwtl
mov
cmp
mov
jg
outsb
jge
je
fst
xchg
test
out
and
addr16
sahf
dec
repnz
mull
addr16
pop
sub
cwtl
bound
loope
dec
cmc
mov
clc
pop
mov
push
jno
jnp
and
jo
rol
mov
jg
push
jo
fisubrs
mov
nop
test
fiadds
sub
pop
mov
dec
pop
jb
out
ficoml
repnz
mov
xor
pop
push
imul
jle
pop
jno
jns
jae
dec
push
pop
push
jecxz
cmpsl
mov
dec
sbb
pop
popf
and
and
aam
jle
push
ret
jnp
xor
pop
repnz
in
fsts
jg
and
gs
dec
lret
sbb
cmc
jnp
ret
fst
vmwrite
in
jle
data16
sub
xchg
popa
or
fwait
mov
int3
ficoml
jg
cmpsb
mov
test
or
insb
pop
fidivl
sbb
cmp
xor
mov
dec
aas
in
lods
loopne
insl
mov
shl
dec
add
push
cld
fyl2xp1
insb
inc
mov
mov
push
sbb
cmp
mov
mov
inc
sub
xorl
in
rcl
push
lahf
mov
hlt
outsl
push
roll
mov
jbe
stos
inc
testb
push
adc
icebp
sub
lods
stos
push
mov
pop
hlt
jo
fimull
fistl
repnz
sbb
cmp
push
out
sbb
cmpsl
scas
cmpsb
repz
sbb
les
testb
push
push
dec
fs
or
pop
imul
sti
mov
out
es
sarl
adc
pop
and
mov
xor
pop
push
rorl
cmp
jo
into
mov
aad
mov
pop
mov
adc
xor
xor
xor
jae
inc
xor
dec
pop
mov
pop
or
mov
xchg
cmc
jge
lock
int3
or
xchg
cmp
inc
icebp
test
ljmp
pushf
push
mov
aas
int
push
mov
mov
adc
mov
jb
enter
fstpt
fnsave
rorl
sarl
outsl
mov
lret
add
hlt
or
jo
icebp
aaa
lock
pop
inc
out
jo
fucomip
subl
add
dec
and
mov
and
mov
gs
pop
aam
mov
xorl
inc
add
clc
sbb
xlat
test
mov
aad
add
push
inc
jne
nop
loopne
ficoms
adc
je
daa
sbb
outsl
jbe
shll
dec
pop
or
aam
xor
lret
cmp
jge
fs
push
sti
daa
jno
fisttps
push
push
je
push
arpl
nop
fldenv
mov
cs
fsubrl
push
test
ja
leave
sbb
mov
xorb
aas
push
dec
xor
push
out
jo
mov
ljmp
mov
dec
pop
jp
mov
xchg
fisttpll
jb
pop
in
dec
mov
in
dec
mov
std
sub
mov
les
inc
cwtl
or
mov
iret
insb
rol
mov
cmp
inc
mov
dec
enter
push
ficoml
push
cmp
cmp
subb
fdivrs
rcll
lock
aam
hlt
jae
adc
jmp
fimull
jp
mov
ja
mov
mov
je
es
divb
cmp
rol
dec
outsb
push
int3
repnz
pushf
push
sahf
cmpsl
or
sub
push
inc
iret
xchg
dec
hlt
cwtl
nop
into
xchg
and
call
add
int3
mov
dec
xchg
test
mov
int3
pop
sarl
jbe
mov
mov
ror
dec
ret
dec
lret
push
jb
lcall
mov
lret
mov
cmp
lock
lock
pop
sub
enter
dec
sub
lret
cmc
cld
loope
jmp
lock
jnp
inc
mov
pop
add
lods
adc
lds
jl
cmp
mov
and
adc
lods
popa
mov
push
jl
aas
nop
leave
jmp
or
out
pop
and
bound
ja
sub
ljmp
jo
aad
pop
jnp
and
or
and
cmp
dec
mov
or
adc
jne
test
inc
jg
mov
inc
bound
cwtl
ret
mov
fs
jo
sbb
movsb
in
loop
fnstenv
sub
push
in
pop
js
pop
sarb
mov
sbb
pop
adc
dec
insl
inc
mov
out
push
fmulp
dec
xor
cmp
mov
sbb
adc
dec
fs
sub
xchg
mov
add
jecxz
cs
fwait
int
inc
adc
out
int3
pop
jp
xchg
icebp
addl
sahf
les
mov
and
test
inc
int3
out
or
repz
shll
dec
enter
inc
sti
add
sti
loopne
les
fadds
xchg
jl
enter
imul
sbb
call
jp
mov
test
shrb
inc
cli
hlt
dec
rorb
lret
and
ficomps
add
or
jo
cmp
loopne
test
ret
imul
cmpsb
fdivr
push
ja
cmp
inc
pop
fstps
mov
sub
out
orb
or
xchg
adc
mov
jle
add
xchg
fwait
cld
push
mov
jno
xor
cmpsl
mov
fsubl
aas
push
mov
push
xchg
xor
adc
es
jl
sbb
cmpsb
call
ret
das
sub
scas
add
sub
jae
adc
cmpsl
xor
lods
inc
jno
jb
sub
pushf
jb
push
xchg
cmp
inc
insl
repnz
sub
sbbl
mov
pop
and
push
aam
dec
fucomi
jae
call
push
fistl
aaa
jmp
outsb
dec
mov
aad
fisubs
mov
push
pop
inc
jo
popl
jno
movsl
xchg
mov
xchg
in
mov
or
mov
jne
sti
xor
loop
and
ret
jns
loop
dec
push
xchg
mov
fnstenv
stos
jge
mov
push
sub
inc
cmovg
fcmovnu
lret
push
cmp
aam
push
shll
fwait
xor
rcrl
lds
mov
push
xchg
cmp
jae
fnstsw
lock
aad
push
loopne
jo
nop
rcrb
add
sub
xchg
int
jp
out
and
stos
imul
fcmovnbe
mov
mov
mov
mov
ljmp
loopne
cwtl
push
mov
inc
incl
neg
imul
mov
mov
cmpsl
jle
xor
or
xchg
cmp
stos
dec
mov
mov
fs
mov
cmp
notl
testl
push
mov
xor
push
mov
cmp
fidivrs
lcall
add
pop
jo
push
add
sub
or
movsl
sbbb
adc
push
aas
sbb
sub
xor
jge
xchg
mov
mov
adc
xchg
orl
fistl
loope
mov
negl
mov
jb
ja
dec
loop
loope
test
mov
repz
lahf
xor
push
mov
cmpsb
mov
jg
jae
ja
insb
gs
gs
add
fabs
mov
jno
nopl
adc
jb
int3
in
sub
xchg
in
les
js
push
loope
insl
and
sbb
mov
movsl
push
in
sbb
lret
dec
mov
jbe
add
sub
test
sbb
xchg
fidivrl
lea
or
ficoms
outsl
xchg
push
hlt
pop
fldl
or
push
dec
shl
and
mov
pop
mov
dec
push
divl
inc
leave
cwtl
cltd
jo
sbb
cld
mov
inc
xor
mov
arpl
xor
add
out
mov
inc
jg
dec
adc
flds
cmp
cld
aam
jge
push
pop
test
addr16
jle
cmp
or
pop
cmp
hlt
adc
stc
xor
outsl
xchg
test
xchg
pop
xchg
xlat
pop
popa
aam
xchg
loopne
pop
push
dec
xchg
data16
or
pop
cmp
mov
aad
sbb
nop
lds
push
add
pop
cmp
xor
out
xor
add
insb
and
dec
jo
imul
pop
sub
in
jbe
mov
push
jo
mov
cld
xchg
pop
mov
inc
dec
fdivrs
aas
cmp
cmp
in
test
test
cmp
rol
out
ss
lret
inc
sub
arpl
cmp
fsts
pop
mov
jnp
inc
inc
popa
jb
es
jp
jnp
push
icebp
push
in
xor
insb
mov
mov
pusha
shll
pop
sub
xchg
cmp
rorl
cmpsb
js
orb
cmpsl
not
orb
outsl
test
sub
cli
or
shlb
movl
mov
xchg
xor
lds
stos
icebp
fsub
and
in
xchg
push
jb
insb
cmp
mov
scas
fstpt
adc
pop
mov
sub
jmp
jmp
pop
jo
testb
cli
push
adc
movsl
mov
mov
and
into
test
ja
fwait
xor
mov
rcr
mov
sub
dec
dec
pop
pop
pop
roll
add
pop
cli
and
fadds
or
jnp
mov
add
jp
testl
jae
xchg
pop
jnp
cmc
xchg
adc
fldz
cmpb
clc
adc
lea
es
es
push
or
repz
ja
mov
adc
sbbb
mov
in
inc
mov
fidivrs
or
sub
sahf
push
int
mov
aam
mov
or
call
aam
xor
je
imul
fwait
push
cmp
ficoms
push
sbb
mov
xchg
jg
mov
or
jl
ds
inc
push
loope
sbb
daa
xchg
outsb
xor
fldcw
sbb
xor
inc
iret
xor
add
inc
imul
sub
lock
sahf
subb
inc
ret
in
sub
stos
shr
sbb
mov
pop
out
shlb
xor
dec
jmp
int3
fs
ja
ds
call
inc
in
int3
lahf
nop
cmp
jle
mov
icebp
arpl
sbbl
out
push
push
inc
nop
sti
adc
fstpl
push
and
mov
pop
cmp
idivb
cmp
ja
leave
lds
push
repnz
popf
bound
inc
jmp
daa
in
add
cmpsb
dec
cwtl
push
lahf
test
incl
sbb
sub
sub
mov
sub
sub
jmp
sbb
orb
enter
and
xchg
movsl
jae
adc
punpcklwd
adc
push
mov
mov
xor
push
sub
in
shlb
or
rclb
ret
std
jae
rcr
outsb
gs
inc
shrl
pushf
mov
mov
sub
mov
loope
push
cmp
popf
push
mov
jb
inc
mov
mov
jo
jp
or
popa
into
mov
jo
dec
fcomps
popa
fs
lret
pop
bound
and
push
sbb
test
pop
or
clc
je
mov
movsl
fsubs
fwait
shrb
outsl
push
mov
pop
pop
loop
adc
dec
fisubs
stos
xor
xchg
lods
pop
sbb
arpl
dec
push
xlat
stc
pop
cmp
jo
aam
sub
cmp
push
push
jge
mov
icebp
push
sbb
sub
push
lahf
mov
xor
sbb
adc
mov
ja
cs
sarl
call
push
mov
xchg
sbb
movsb
push
push
popf
fwait
dec
dec
mov
mov
fwait
lcall
fldl
xchg
jbe
loope
stos
das
mov
mov
add
scas
inc
inc
pushf
xchg
jno
iretw
pop
ror
pop
in
pop
mov
enter
aad
mov
loopne
leave
lret
jno
pop
movsb
push
xor
jbe
cmc
scas
mov
push
dec
iret
fs
sub
dec
addr16
loope
sti
loope
imul
pop
cmp
adcb
lret
lods
jo
dec
flds
outsl
mov
and
dec
bound
jp
outsl
test
scas
push
popf
sub
sbb
je
xor
pushf
jp
lret
subb
je
push
mov
sbb
lret
fists
test
movsb
dec
fistl
cmp
xor
arpl
aam
int3
jg
out
scas
stos
mov
push
xor
int
or
mov
jns
out
push
or
pop
dec
mov
dec
jnp
bnd
push
or
jns
test
in
fstpl
pop
adc
in
mov
xor
and
mov
dec
jnp
scas
dec
call
je
mov
out
dec
clc
adc
sub
pushf
stc
loop
sub
pop
lret
mov
mov
cltd
xor
pop
sbb
fildl
fcmovnb
pop
in
adc
pushf
cmp
fimuls
into
pop
mov
loop
fisubs
mov
mov
test
loopne
and
jl
shl
xchg
cmp
lahf
popa
cli
mov
popa
int3
pop
mov
stos
fbld
adcb
xchg
xorb
rcrb
cwtl
push
mov
push
sbb
mov
xor
ret
add
jo
and
lock
lret
sub
movsb
nop
imul
pop
dec
loop
jecxz
pusha
mov
cwtl
les
mov
cmpsb
call
aad
pop
lock
cmpsb
movsb
mov
mov
cmp
lock
enter
lcall
movsl
xchg
mov
jl
insl
pop
cmp
out
push
or
jo
test
push
dec
xchg
adc
pop
pop
sbb
shr
arpl
xchg
push
out
lret
cmp
push
cmp
decl
je
inc
fwait
push
jmp
lods
adc
rcrb
dec
jno
jmp
mov
bound
sbbb
into
cmpsb
fnstsw
inc
je
arpl
es
addr16
pop
cwtl
repz
mov
stos
add
jns
les
nop
inc
mov
jle
in
cmp
push
mov
jns
jne
pop
cwtl
pop
mov
and
xchg
int3
cmp
lret
jns
psrld
pop
andnps
jbe
jge
sub
jle
pop
adc
insb
insl
stc
outsb
jne
and
mov
imul
out
adc
jo
cmovg
int
mov
out
or
ret
out
daa
clc
xor
xchg
jle
add
std
test
cmp
fcompl
into
out
fcompl
xor
mov
je
shll
adcb
jb
mov
iret
dec
cmp
call
shrl
push
sub
movsb
add
jns
dec
xchg
cs
out
dec
js
cmp
sub
dec
aaa
in
stc
cwtl
call
xchg
outsb
push
cmp
mull
mov
push
adc
dec
and
ret
pop
fstpt
int3
out
jae
sbb
fcmovnbe
out
jne
repnz
pop
setbe
lock
test
cmp
int3
pop
mov
xchg
arpl
je
imul
xor
ja
call
inc
sub
jl
push
adc
popf
dec
jecxz
cmp
mov
jns
test
cli
inc
xor
sti
subl
pop
imul
cmpsl
test
rcr
push
cmc
daa
push
dec
jge
dec
mov
sub
pop
imul
rorl
les
push
push
fsts
movsl
mov
cli
mov
pop
sbb
lea
es
and
hlt
pop
mov
imul
pushf
clc
sub
push
and
fcompl
dec
inc
imul
cltd
insl
sbb
mov
lret
xor
mov
pop
jne
outsb
bound
js
stos
mov
test
pop
mov
pop
jo
stc
ja
dec
add
mov
int3
pop
sub
test
xchg
scas
in
bound
or
jno
push
push
gs
adc
xchg
and
push
jae
sbb
divb
out
aas
mov
or
mov
cmpl
xchg
pop
dec
push
xlat
jo
xor
xchg
pop
fdivs
mov
test
add
bound
push
popf
jno
push
repz
movsb
mov
xchg
sbb
clc
pop
les
pop
sbb
clc
jb
test
lea
push
mov
aad
push
stos
in
sbb
pop
jno
popa
fists
pop
dec
loope
lea
stos
fdivr
insb
mov
lock
pop
and
stos
loopne
mov
shll
jno
sbb
test
cmpsb
subb
mov
pop
mov
sub
inc
mov
jo
sub
sbb
adc
sbb
movsl
lods
mov
sbb
mov
insb
xor
out
adc
mov
pusha
xchg
lds
mov
jb
xchg
jo
repnz
je
outsl
inc
cmp
jo
fstpt
mov
test
sbbb
mov
cmp
dec
xchg
or
mov
push
ret
lds
adcl
fisubs
and
push
push
gs
push
lds
testb
dec
mov
push
push
or
lcall
pop
sbbb
lahf
cmpsl
ljmp
dec
inc
add
add
fsubl
in
jns
dec
lcall
fsts
pop
pop
xchg
or
mov
jae
fs
cmp
fsubl
mov
fisttpll
cmpsl
dec
add
push
cmp
dec
cmp
adc
pop
lds
xor
les
outsb
dec
cmp
and
cld
stos
xchg
nop
cmc
push
cld
in
test
jb
in
aad
cltd
loop
push
xchg
jo
mov
ja
mov
pop
push
push
aas
hlt
inc
mov
mov
pop
pop
dec
jno
push
push
cmp
in
ja
sahf
pop
jns
es
cmp
ss
cmpsb
jo
cmpsb
push
jno
loopne
jo
les
mov
jne
in
pop
je
mov
pop
cmpsb
loope
push
cmpb
fwait
cmpsl
movsb
or
mov
orl
loop
jb
fcoms
cmpsl
mov
insl
mov
xor
sbb
mov
push
mov
pop
or
call
jno
cmp
rcrl
cmp
sets
mov
jl
adc
mov
js
mov
les
xorl
mov
sahf
fstl
ss
push
inc
xchg
enter
shlb
dec
test
aam
dec
shr
cmp
mov
insb
cmp
movsl
cltd
cwtl
mov
sbb
push
xchg
xchg
bound
sub
sbb
rorl
pavgb
or
mov
sub
jns
in
shll
fstps
popa
cmp
call
xchg
jo
test
xchg
mov
fidivrs
lea
repnz
cs
mov
jae
adc
les
lods
movsl
lret
inc
mov
sub
test
inc
pushf
jmp
sbbb
fwait
lcall
pusha
mov
fldenv
mov
sbb
xchg
testb
and
into
fs
pushf
dec
aas
ja
loope
shll
push
sbb
jo
cltd
push
lds
fwait
sbb
test
sahf
dec
push
sub
xor
out
lods
add
cltd
mov
bnd
jg
cmpsb
bound
es
push
push
subl
dec
adc
jge
bound
sbb
inc
loope
cli
xor
addr16
sub
mov
jg
cmp
adc
sbbb
es
cmp
xchg
ret
movsb
push
mov
or
dec
adc
xor
mov
lods
pop
inc
mov
stc
mov
pop
nop
add
popa
mov
xor
adc
jne
jae
push
inc
loopne
insl
adc
or
dec
inc
je
fbld
push
in
pop
arpl
jae
sbb
hlt
mov
mov
mov
lock
mov
cmp
shl
icebp
mov
test
scas
xor
dec
cmp
loop
les
cmp
pop
mov
hlt
pop
xchg
ja
xchg
scas
inc
sar
jnp
sub
aaa
ja
pop
insl
inc
xor
rorl
cmp
or
cmp
sahf
mov
xchg
add
in
test
test
mov
movsb
std
fcmove
inc
push
popf
mov
pushw
les
lea
daa
mov
fs
je
sbb
fcomps
cmpsl
mov
sahf
inc
jmp
dec
ret
std
scas
pushf
cmp
xchg
fs
clc
lds
lds
ret
sarb
mov
xor
add
pop
inc
xchg
outsb
fistl
lods
mov
fistpll
jle
aas
pop
sbb
bound
sub
mov
and
es
sbb
imul
inc
lret
stc
lret
pop
fwait
nop
nop
inc
shll
addr16
cmp
cwtl
or
cmp
mov
mov
insl
xchg
and
scas
sahf
cmp
jno
xchg
dec
jne
es
pop
and
mov
outsb
jae
ljmp
and
dec
repz
test
push
fistpl
incb
dec
xchg
sbb
arpl
sbb
push
jmp
in
push
mov
test
out
xchg
and
rcll
xchg
mov
push
mov
jb
push
lods
mov
xchg
and
hlt
lock
mov
mov
rol
shrl
cmpsl
and
test
inc
test
out
fistpl
mov
test
lea
or
and
xorl
pop
xor
and
fbld
mov
or
dec
sarl
dec
clc
test
or
aaa
in
pop
les
gs
stc
sbb
sar
jne
pop
and
adc
mov
inc
pop
test
lods
test
cltd
cs
popf
aaa
dec
in
stc
adc
test
nop
adc
loop
scas
lods
jae
cmp
ja
xor
mov
cmp
mov
push
xchg
mov
repz
add
lret
jne
pop
mov
int3
xorl
aad
stos
lret
mov
sub
stos
mov
adc
pop
mov
jo
cmpl
lret
xchg
mov
adc
stos
in
push
mov
xlat
gs
data16
dec
jbe
adc
mov
add
stc
lods
dec
lods
pop
sub
dec
pop
icebp
add
xchg
push
mov
fisubs
and
mov
jne
fidivrl
fdivrs
mov
arpl
add
cwtl
pop
push
popf
cmp
mov
bound
inc
or
jg
jns
jne
shrl
push
or
aam
jno
sub
pop
cmp
lods
data16
out
adc
pop
lods
jno
adc
shll
out
pop
sbb
push
js
cmp
jno
stc
inc
mov
cmp
push
push
std
mov
out
cmp
sbb
mov
rcll
mov
inc
flds
or
movsb
fcmovbe
mov
jo
jo
cmpsb
push
pop
cmpsl
pop
das
adc
rcrb
jne
cmpsb
mov
adc
lret
test
mov
inc
fld
mov
mov
bound
cmp
push
int
aam
test
mov
sti
test
cmp
bound
aad
mov
leave
daa
inc
hlt
negb
dec
xor
jge
mov
or
adc
test
xorb
mov
or
out
jbe
sub
out
iret
daa
xchg
lret
pop
fldcw
mov
insb
loopne
hlt
and
mov
inc
int
shll
test
xor
dec
icebp
adc
std
pop
dec
fwait
xchg
mov
call
lock
jp
fstl
and
adc
lahf
out
les
cmp
cs
cltd
loope
jle
outsb
pop
mov
call
frstor
test
fstps
xchg
and
das
inc
js
xchg
pushf
cmpsl
rorl
inc
cwtl
fstps
leave
mov
nop
cmp
pusha
push
loopne
sbb
mov
mov
aas
xor
xchg
mov
mov
cmp
ss
xchg
xchg
lcall
fcompl
mov
imul
les
sarb
add
flds
cs
into
fs
push
out
pop
mov
sbb
je
inc
push
insl
mov
fnstsw
jp
sub
in
xor
imul
loop
or
loopne
push
jg
pop
cmc
mov
pop
je
inc
das
sub
mov
adc
cmpsl
sub
stos
or
fdivl
fdivl
pushf
iret
jno
pop
push
hlt
outsl
cmp
addr16
mov
cmp
push
or
arpl
or
in
dec
out
leave
movhlps
loope
cmp
cwtl
xchg
push
push
aaa
xchg
cld
fisttpll
jge
cmpl
ljmp
negb
in
arpl
iret
xchg
cmpsb
dec
cmp
roll
dec
stos
nop
fs
js
in
cltd
dec
and
mov
lds
push
fs
sbb
mov
adc
addl
jb
cwtl
push
fnsave
je
and
push
pop
xor
jno
cmp
fsts
pop
xchg
adcb
jnp
pop
or
push
cmp
push
andb
test
je
popa
pop
rcl
int3
jg
xor
mov
push
mov
inc
sbb
adc
mov
mov
add
test
sbb
andb
fucomp
ret
and
fdecstp
mov
add
cltd
iret
ret
imul
fst
rclb
jae
pop
fcmovnbe
rcrb
jmp
les
out
cmp
bnd
sub
jne
xchg
xchg
and
mov
jg
cmp
enter
dec
xor
pop
fs
mov
push
jb
xor
stos
leave
mov
pop
jno
pop
jno
enter
aad
jno
pushf
lock
cmpsl
imul
jno
popf
push
ss
push
dec
xchg
and
inc
jbe
xor
repz
add
jo
pusha
fisttpl
cmpsb
out
sub
jg
push
dec
cmp
and
pop
icebp
or
int
and
xchg
aad
push
imul
mov
jns
dec
cli
mov
in
shrl
movsb
sub
loop
scas
and
push
inc
int3
mov
sti
cmpsl
aas
js
cmp
pop
lds
fldl
fcoml
les
mov
outsb
sbb
push
aaa
xor
fs
pop
insb
insb
sbb
inc
push
hlt
or
movsl
cltd
xchg
xor
and
pop
lock
push
xor
mov
movsb
lret
jl
push
xchg
cmpsl
jo
or
fidivs
sahf
dec
insl
test
incb
imul
and
cwtl
neg
daa
dec
xor
pop
andl
push
fcmovbe
mov
stc
mov
inc
adc
mov
mov
mov
fcomps
loope
push
sti
and
and
adc
push
scas
dec
std
sbb
jbe
xchg
inc
xor
dec
mov
je
and
fadds
dec
or
les
dec
in
fnstcw
push
push
cmp
fs
je
xrelease
lods
fdivrl
inc
xchg
addl
cmp
das
and
pop
xor
inc
int3
and
les
sbbl
xlat
js
pop
jbe
xchg
bound
stos
push
xchg
frstor
decl
std
insl
popa
mov
lret
pushf
push
mov
fxch
pop
jb
ficomps
test
xchg
xchg
or
push
push
sub
dec
lret
mov
add
mov
cli
mov
andb
mov
mov
jmp
push
sub
jno
push
mov
dec
add
int3
jne
aam
cld
les
add
loopne
push
loopne
pop
jp
adc
popa
dec
xchg
shrb
shl
loopne
mov
dec
cmp
cmp
inc
lock
jl
push
fnstsw
jnp
push
xor
lret
push
rcrl
push
inc
idivl
repz
js
stc
pop
pop
cmp
jno
xchg
pusha
inc
push
insl
mov
loope
push
cmp
xchg
push
push
cmp
cs
mov
cmp
xchg
xor
inc
mov
adc
dec
xor
fsub
mov
dec
xchg
or
in
mov
sbbb
jne
lock
push
xor
inc
iret
sbbb
in
pop
int3
gs
mov
outsl
push
sbb
icebp
mov
frstor
ficompl
push
int
iret
pushf
push
inc
aaa
push
mov
pop
add
xor
hlt
insl
ja
loope
cli
inc
call
icebp
mov
cmp
mov
mov
out
mov
inc
jbe
add
pop
cwtl
mov
int
mov
inc
loop
mov
int3
adc
mov
cmp
pushf
mov
les
push
cmp
pop
or
push
repz
mov
cmpsb
adcl
outsb
and
push
mov
mov
jne
aas
aaa
test
int3
jg
arpl
je
inc
cmp
pop
mov
adc
mov
mov
pop
inc
push
dec
mov
jns
inc
jp
xor
or
sti
stc
or
jo
insb
pop
pop
daa
bound
clc
cmc
xor
in
loope
jmp
pop
rcr
in
fldl
stc
fldt
cld
xchg
cmpb
out
lds
mov
in
addb
sub
outsl
in
es
mov
cmp
pop
fldcw
fwait
cmp
cmp
notl
mov
or
out
adc
mov
ja
scas
ret
popf
rep
mov
andb
pop
movsl
xor
aaa
xchg
roll
xchg
int
jp
kmovw
cmp
rolb
jp
rol
and
mov
pushf
adc
test
in
sub
fistl
enter
stos
test
or
movsb
addr16
jo
bound
shlb
gs
adc
popf
mov
ja
nop
hlt
mov
adc
dec
iret
ljmp
mov
fstpl
mov
stos
pop
inc
in
add
rcrl
push
pop
insl
mov
lret
sbbl
add
cli
les
dec
pop
mov
push
loopne
jbe
xchg
out
stos
inc
push
add
into
pop
mov
ret
mov
outsl
xchg
add
cs
leave
lea
adc
sbb
inc
mov
xor
jle
and
psrad
arpl
jo
fs
les
push
scas
push
lods
push
ja
in
fs
lds
rorb
lods
mov
or
sbb
out
lods
mov
fstps
cmp
arpl
ficompl
mov
add
inc
inc
mov
rolb
hlt
pop
mov
dec
dec
cmp
dec
mov
les
xorb
loope
pop
mov
mov
fwait
addr16
pop
adc
pop
jns
pop
icebp
ret
pop
lock
lods
ja
add
scas
sub
inc
out
sbb
sub
femms
push
cmpsl
cmp
lahf
xor
xchg
jne
cmp
pop
les
call
out
pop
aam
les
cmp
imul
lahf
adc
and
loope
jne
js
ret
xchg
jns
arpl
pop
in
fcoms
outsb
jb
mov
cli
das
cltd
push
pop
popf
jg
insb
mov
shrb
ja
sub
cmp
mov
jns
mov
in
inc
or
fld
enter
sbb
pop
addr16
test
ret
out
lahf
test
cmp
movsl
gs
mov
push
gs
pop
pop
push
scas
xlat
dec
test
test
inc
js
pop
mov
sub
or
clc
mov
pop
mov
and
insb
cmp
bound
sub
lock
bound
lea
shlb
push
inc
pop
jae
push
mov
jp
inc
clc
xchg
jae
faddl
mov
nop
cmp
xor
lret
les
or
xchg
lret
popf
dec
sbb
sahf
test
in
push
add
rorb
test
mov
and
cwtl
mov
out
movsl
hlt
fsubs
aad
mov
jne
xchg
xor
push
fs
lahf
mov
jae
cmp
pop
jmp
or
lods
jo
divl
mov
test
dec
xor
cmp
les
rcrl
pop
imul
pop
inc
xor
jb
fs
push
jb
jg
ljmp
pushf
je
clc
sahf
cmp
dec
add
mov
mov
fstpt
mov
ret
and
mov
and
fs
jmp
in
mov
gs
mov
jmp
mov
sahf
lock
xchg
loope
sbb
cmp
pop
nop
mov
fbld
je
sti
in
sbb
stc
fwait
mov
out
mov
pop
adc
fwait
lods
pushf
fstps
cmp
addr16
push
xlat
push
jno
pop
push
xlat
lds
clc
dec
ret
jns
aam
dec
inc
push
bound
pop
and
daa
mov
jge
bound
lods
mov
sbbl
iret
dec
mov
dec
bound
add
test
mov
push
pop
iret
filds
xor
push
gs
inc
iret
mov
lcall
gs
mov
dec
pop
dec
es
gs
mov
rcll
mov
or
mov
mov
jle
mov
insl
mov
cmp
hlt
ljmp
dec
xor
sti
and
aam
or
imul
cwtl
pop
push
mov
js
inc
repz
cmp
sub
test
popa
repz
pop
dec
sti
jne
js
pop
pop
in
sti
rcrl
add
mov
xchg
xchg
hlt
test
fabs
fs
cmp
inc
mov
cmpsl
dec
sub
xor
test
mov
fidivl
jae
addr16
pop
popa
ja
fstpt
xchg
shrl
bound
in
movsl
pop
aad
jo
lock
pop
cmp
outsl
inc
aad
mov
aas
push
push
mov
shr
pop
jno
iret
sbb
les
inc
xchg
imul
sub
aam
mov
adc
or
imul
mov
jmp
push
xchg
filds
dec
push
push
loope
push
ss
lret
xor
jl
lret
int3
mov
mov
push
repnz
and
push
aam
bound
loopne
sbb
sahf
inc
negb
sbb
pop
cli
fsubrs
jp
push
cmp
lock
dec
ret
imul
or
fstps
cmp
outsl
rol
xor
sarl
movsb
fwait
sub
addl
fdivp
jb
popf
loopne
les
and
pop
mov
jb
stc
pop
cmpl
inc
outsl
frstor
push
and
dec
cmp
fsts
fisubl
mov
pushf
push
xchg
xchg
rcll
frstor
das
xor
les
fidivl
pop
mov
pop
orb
and
int3
push
pop
cmp
mov
sbb
fimuls
pop
cmp
xchg
xor
mov
ficompl
jb
insl
mov
sbb
add
lret
sub
ss
jp
sub
dec
pop
ficompl
pop
fsubrs
pop
push
dec
jo
dec
mov
push
push
rclb
xchg
loopne
jb
aam
lock
test
js
xor
sub
pushl
push
outsl
jle
pop
xchg
mov
dec
mov
out
and
addb
xchg
addr16
mov
sbb
fs
or
stc
pop
mov
xchg
aaa
mov
mov
fdivl
pop
js
popa
ret
fnstcw
push
aam
cmp
mov
fstl
test
addr16
fidivrs
ds
dec
jae
sub
xchg
fsubl
or
sub
inc
sti
cli
xchg
push
and
inc
aam
loop
fisubrl
sbb
adc
adc
adc
push
mov
pop
lock
and
pop
cmp
mov
imul
push
ret
jns
js
repz
stos
cmp
add
fcmovu
shll
jecxz
fstps
outsl
rol
lock
mov
repz
test
stc
xchg
frstor
fnsave
aam
xchg
lds
cmp
arpl
arpl
data16
cmp
lods
ficompl
daa
sub
sahf
mov
jb
adc
mov
pushf
lods
sub
in
int3
add
mov
lds
pushf
rcrl
pop
xor
je
jo
popf
xchg
jo
dec
insb
push
jnp
cmp
inc
orb
lds
sbb
loopne
mov
sub
call
sti
mov
or
add
mov
add
cli
xchg
push
jno
out
mov
add
push
pop
inc
jbe
imul
sbb
lods
cmpsl
adc
aam
or
xchg
pop
fsts
dec
jns
mov
cmp
sub
sbb
push
jne
push
mov
mov
gs
pop
inc
sub
pop
loope
setp
cmp
test
xchg
idivl
adc
pushl
cwtl
pop
mov
mov
add
cwtl
loopne
cmp
pop
adcl
fstps
pop
dec
movsl
pusha
jp
jae
mov
jno
xorb
dec
jge
test
movsl
ret
inc
jnp
rolb
cltd
push
mov
repz
fisttpl
insl
lret
cmp
sbb
test
inc
add
aas
dec
push
mov
fst
push
xorb
pusha
adc
outsl
mov
mov
mov
rcr
ficompl
mov
shlb
ret
pop
bound
movsb
push
in
sbb
or
push
jo
push
dec
cmc
and
mov
adc
cmp
cmpb
inc
mov
pop
or
imul
jnp
jl
xor
cltd
inc
cli
push
pop
fucom
push
lock
nop
cmp
mov
jns
pop
imul
scas
dec
cmp
mov
dec
dec
pop
inc
inc
xor
push
push
jmp
js
xorl
rcll
or
pushf
test
and
xchg
add
cmp
and
mov
mov
sbb
jae
fldl
movsb
loop
imul
push
sbb
sbb
inc
sub
dec
cmc
pusha
in
push
loopne
and
or
jo
mov
push
loopne
shll
pop
sahf
js
and
add
push
ret
pop
rorl
push
push
rcr
push
test
aad
dec
push
xor
sbb
sub
rolb
bound
xlat
sahf
dec
popf
jmp
jo
xor
mov
push
insw
ljmp
lods
sbb
xchg
ficoml
cwtl
cmc
add
loopne
mov
les
lds
mov
arpl
adc
mov
into
cmp
adc
pop
mov
ret
mov
sub
push
push
jae
pop
push
sbb
shlb
inc
ret
sarb
sub
shlb
or
xor
mov
cmp
jne
sub
bts
loopne
ret
insb
jnp
fldenv
iret
fdivrs
loopne
pop
aad
pop
pop
adc
push
pop
pop
xchg
dec
cmpsl
and
fcomps
cmp
or
and
adc
mov
or
gs
ss
and
add
cmp
aam
xor
int3
jle
push
pop
mov
push
xchg
sbb
mov
cmp
rclb
cmp
pop
call
adc
test
push
adc
stos
gs
cwtl
or
test
scas
lock
mov
bound
xor
adc
cmp
mov
lds
clc
fistps
add
cmp
je
in
or
and
inc
adc
mov
ja
hlt
mov
inc
and
xchg
push
sub
pop
and
cmp
popa
xchg
mov
or
repnz
mov
rorb
lea
adc
jle
faddl
xor
push
lock
ret
imul
push
sbb
sahf
xor
pop
add
mov
pop
pop
mov
pop
test
sbbb
rolb
insb
push
jbe
jo
js
aam
gs
sub
fistl
jne
sti
jae
fists
push
cmp
dec
repz
sbb
xor
cwtl
mov
aam
push
adc
test
in
jne
mov
jo
loopne
call
das
test
mov
scas
idivl
mov
jno
roll
loope
jg
pop
js
mov
mov
sbb
pop
lahf
mov
gs
mov
fists
nop
pushf
pop
sbb
push
cmp
xor
cltd
push
or
jae
out
dec
mov
and
rclb
jmp
das
lret
lods
xchg
and
icebp
data16
shrl
pop
dec
movq
jg
pushf
sub
sbb
pop
and
add
lock
cmp
jo
mov
mov
cmpsb
lods
mov
leave
xor
imul
push
ja
xchg
pop
int3
fnstenv
bound
jbe
push
sbb
or
adc
adc
cmp
js
stc
mov
cmpsl
pop
cmp
nop
icebp
js
test
data16
lret
data16
push
jge
fs
lods
gs
and
xlat
mov
add
arpl
pop
into
js
sbb
mov
pop
and
xchg
pop
push
and
push
bound
xchg
fldenv
out
mov
add
pop
jne
inc
jbe
and
jns
add
cli
fsubrs
dec
in
lds
cmp
mov
imul
push
addb
dec
push
imul
aad
push
clc
fisubrl
test
pop
hlt
and
popf
xor
push
xor
aas
xchg
pop
add
push
cli
loopne
push
lahf
pop
fadds
fbstp
and
test
das
out
ljmp
jecxz
stos
push
scas
xchg
pop
pop
imul
xchg
repnz
xchg
repz
sahf
mov
nop
push
dec
xchg
insb
sub
bound
imul
cmpsb
cmp
and
je
inc
push
mov
jp
xchg
push
cmp
jne
jno
das
jae
pop
test
cmp
dec
xchg
xchg
nop
sti
xor
aad
pop
jbe
fnstcw
dec
rcrb
xor
xchg
push
mov
icebp
xadd
push
je
push
icebp
push
fistl
mov
push
shlb
jb
xor
or
fistl
adc
jl
mov
mov
jl
rcll
cmpsl
cmp
loop
cltd
fiaddl
xchg
and
in
xchg
and
push
sbb
addr16
pop
adc
cmc
mov
clc
ffreep
scas
mov
inc
sbb
imul
fwait
cmp
sub
push
loope
mov
cmpsl
loop
ret
inc
lock
add
loope
fs
mulb
jns
push
adc
pop
mov
jp
loopne
test
jo
cmp
adc
inc
pop
pop
xlat
lret
jb
sub
adc
cmpsl
insl
lds
fwait
cwtl
dec
iret
mov
mov
adc
push
xor
xor
pop
lds
aam
dec
add
popa
mov
dec
aaa
sahf
shl
mov
pop
flds
fidivrl
into
mov
mov
push
jae
pop
movsb
dec
jl
jne
pusha
popf
movsl
pop
push
xor
mov
add
int
loope
xor
mov
or
mov
adc
mov
and
fsubrl
mov
xor
fistps
jg
mov
pop
mov
inc
inc
js
jge
fwait
xor
mov
inc
dec
add
sbb
xor
sbb
rcll
pop
mov
and
dec
ljmp
inc
xor
test
pop
arpl
orl
sub
push
push
xchg
fwait
push
dec
ss
roll
jmp
xor
push
cs
dec
or
sbb
fistl
mov
in
push
dec
and
dec
push
jo
cltd
aam
nop
cli
xchg
lds
dec
mov
inc
daa
jmp
popf
mov
dec
aam
andl
xchg
adc
xor
fs
test
add
jbe
lea
add
adc
out
sbb
inc
rorb
adc
test
hlt
ss
mov
and
enter
pop
mov
xor
cmc
in
mov
jmp
push
cmp
in
ds
icebp
gs
aam
mov
subl
cld
push
nop
mov
ja
pop
jmp
fs
daa
mov
callw
sub
insb
and
jge
xchg
dec
dec
scas
jg
mov
test
mov
insb
xor
and
imul
mov
outsl
ss
ljmp
pop
cmp
in
shrl
add
mov
das
pop
sub
leave
lock
sub
mov
xchg
push
adc
mov
cmp
mov
push
mov
cmp
adc
mov
mov
pop
mov
mov
xchg
outsl
xor
mov
xchg
push
andpd
cltd
cmpsl
daa
push
and
and
sarb
jp
add
adc
je
pop
cmpsb
scas
shr
xchg
lahf
and
lcall
jnp
hlt
pop
push
lea
test
mov
in
aam
or
arpl
call
mov
insb
mov
xor
pushf
xor
hlt
lcall
xor
add
std
jb
mov
sbb
xchg
adc
dec
pop
in
mov
pushf
fists
addr16
mov
loope
mov
mov
sahf
lcall
pop
dec
cwtl
xchg
cmp
mov
mov
jb
imul
mov
mov
jp
aad
outsl
xor
hlt
jo
flds
cmp
iret
fucomp
outsb
loope
push
cmp
inc
mov
jnp
pop
add
pop
pop
fistpll
pop
inc
mov
hlt
mov
mov
lock
xor
xchg
xorb
jge
adc
pop
insb
cmp
repz
pop
jb
aad
iret
mov
inc
push
loop
push
fstpl
repz
jle
stos
hlt
lock
ja
les
out
mov
mov
fwait
daa
loopne
jo
lock
xlat
cli
nop
sub
pop
mov
inc
dec
push
out
sti
mov
lods
mov
bound
mov
push
dec
cwtl
scas
fcmovnb
xchg
and
mov
loope
rolb
fstps
loop
imul
cld
hlt
add
mov
adcb
clc
mov
test
outsl
sarl
add
push
cmp
test
fcmovnb
jl
pop
ljmp
dec
rorl
rcrb
dec
mov
xchg
sbb
mov
lds
nop
mov
xchg
dec
or
pop
mov
js
stc
addr16
jns
icebp
rcr
cmp
jno
test
rcll
push
test
push
imul
outsb
adcb
adc
pop
sub
icebp
shlb
jb
out
push
loop
xchg
jno
push
and
and
cmp
dec
add
sti
das
cmp
pop
add
stc
xlat
push
adc
add
push
inc
jnp
test
pop
jmp
nop
fidivs
mov
mov
ror
sub
clc
adc
clc
popa
inc
adc
push
dec
jae
les
cmp
adc
pop
std
sub
lods
jl
shll
mov
sub
jo
lea
jmp
insb
cmc
push
pop
pop
cmp
fcoms
fs
fadds
push
pop
pop
sub
test
cmpsb
popf
bound
xchg
pop
mov
hlt
push
cmpb
inc
mov
push
inc
scas
mov
cmp
mov
jo
rcrl
mov
pop
add
out
je
push
ja
push
loopne
mov
jae
add
movsw
lret
pop
icebp
mov
leave
xchg
pop
mov
adc
mov
or
mov
into
dec
xchg
arpl
mov
and
das
outsb
mov
pop
adc
mov
out
in
add
nop
cmp
jl
jmp
cs
lds
cld
pop
push
cmpsl
jo
les
mov
js
icebp
mov
mov
fldl
cmp
xchg
adc
cmpsb
jle
shlb
dec
pop
fistps
push
cmp
scas
arpl
dec
sub
dec
xchg
adc
cmp
mov
test
lds
repnz
cmp
in
mov
mov
add
mov
fsubl
xchg
sub
add
push
mov
addr16
shll
push
cmp
pushf
xchg
jne
les
cmpl
jb
aam
orb
jae
fcmovnbe
dec
mov
jnp
xor
mov
mov
xchg
or
dec
enter
pop
je
sti
sbb
repz
rcrl
outsl
dec
in
xchg
jo
fstpt
aam
add
pop
outsb
popf
push
insb
cmc
mov
pop
pxor
xchg
jo
push
fndisi(8087
test
scas
pop
jnp
sub
cmc
aas
imul
dec
add
xchg
outsb
or
enter
jnp
xor
frstor
pop
loope
dec
push
daa
cmp
jp
mov
mov
cmp
das
adc
jl
sub
std
dec
inc
xchg
lahf
jae
enter
jno
js
pop
adc
movsl
xchg
xchg
sbb
mov
shl
push
fmulp
jne
negb
jno
xchg
loope
or
jb
dec
div
lods
pop
mov
adc
mov
cwtl
mov
roll
divps
les
or
imul
out
or
pushf
cmp
bound
insl
mov
fstpl
xor
pop
pop
jge
pop
ja
ja
pop
inc
sahf
dec
ss
pop
or
movsb
push
les
cmp
fs
inc
ja
adc
pop
xchg
enter
out
ss
push
mov
cmpsb
int
push
mov
inc
decl
test
lods
scas
xor
loop
adc
roll
cmp
cmp
mov
out
push
nop
mov
andb
mov
repz
sub
xchg
push
out
mov
imul
mov
sub
pop
sahf
jno
negl
pop
cmpl
add
mov
leave
or
pop
push
rcl
cmp
clc
cmp
adc
fs
jne
mov
mov
nop
xor
fistl
clc
jo
or
sub
or
pop
cmp
hlt
cmp
push
loopne
pop
iret
rorb
ret
sub
cmp
push
jp
pop
lock
lds
push
lds
push
dec
cmc
jnp
fimuls
inc
mov
jecxz
jg
push
push
sbb
loop
outsl
js
and
and
shlb
shlb
rcr
repz
jmp
mov
sub
xor
sahf
imul
shr
cmp
andl
int3
xchg
xchg
imul
push
fs
and
and
cmc
xadd
jbe
push
mov
push
jno
pop
into
jl
adc
dec
adc
adc
insl
mov
sbb
pop
shrb
jb
and
repnz
xlat
imul
xchg
lcall
mov
test
jne
jle
rcrl
xorb
jno
cmc
dec
cld
cs
js
xchg
jne
xor
and
data16
dec
out
inc
xchg
jne
fidivrl
jge
dec
dec
das
enter
gs
movsb
scas
in
ja
test
sbb
add
mov
fwait
mov
sbb
clc
dec
pop
push
sbb
sahf
into
outsb
outsl
push
fsubs
mov
setb
lahf
mov
lcall
jno
cmp
jnp
fnstcw
add
mov
ja
dec
stos
fwait
push
popf
dec
repnz
fwait
push
pop
fcom
xchg
imul
jns
push
cmpsl
cmp
mov
inc
jb
int3
cli
dec
imul
mov
sbb
lds
pop
dec
je
mov
mov
imul
add
push
jno
cmp
jne
aam
ss
clc
mov
pop
adc
xor
xchg
jbe
inc
xchg
imul
xor
sahf
sbb
jno
and
adc
dec
test
lds
push
pop
rorl
decl
jb
sub
clc
mov
out
pop
lods
push
jbe
repnz
fisubs
jg
xorl
aaa
push
fwait
std
cmp
sub
mov
mov
in
vunpckhps
pop
mov
mov
mov
lcall
rcl
mov
movsb
pop
mul
add
mov
push
mov
idivb
cmc
cmpsl
or
add
mov
movsb
stos
aad
and
sub
pop
cmp
add
inc
ja
out
push
cmc
inc
cmp
xor
cmp
add
mov
and
popa
cwtl
mov
lods
rcrl
push
pop
fnsave
aad
sbb
inc
jp
dec
fmuls
bound
or
mov
cld
lcall
mov
xchg
and
pop
mov
lds
xlat
xchg
sarb
and
jo
ja
ss
stc
imul
std
loopne
fxch
cmpsb
jo
sbb
aam
add
sub
push
pop
ljmp
dec
mov
shlw
sub
lds
or
test
in
fadds
add
ss
mov
and
mov
pop
loop
lods
hlt
and
xlat
dec
dec
and
mov
mov
in
add
shl
shll
mov
jbe
xor
loope
push
pop
out
ret
inc
jg
test
pop
cmp
and
mov
lcall
fnstcw
inc
ljmp
cmpb
clc
lea
scas
jg
cmp
aam
dec
lahf
pop
and
push
add
je
mov
and
push
test
push
jae
cld
in
sbb
mov
test
imul
and
jno
xor
xchg
pop
int
dec
dec
mov
jmp
and
dec
push
lahf
dec
xchg
cwtl
sbb
gs
sahf
pop
mov
pop
mov
mov
xchg
pop
mov
fmuls
ret
imul
andb
add
ds
ret
mov
movsl
inc
xor
push
cmp
mov
mov
popf
xchg
loope
pop
mov
loope
pop
lcall
xchg
test
pop
insl
sarb
adc
inc
stos
sbbb
je
icebp
pop
je
lret
cmp
cmp
push
dec
sbb
andl
jp
push
adc
ds
cmp
sbb
cmp
add
loop
pushf
mov
insb
pop
fildll
mov
arpl
repnz
push
mov
jle
xchg
rcl
lock
test
enter
jns
nop
fisttpl
pop
popa
lds
push
pop
push
pop
jb
mov
in
cwtl
sbb
mov
xchg
jmp
lahf
xchg
add
sub
jl
sub
add
or
ret
rol
cs
xchg
lahf
xchg
je
pop
mov
pop
fiadds
insb
cmp
xor
push
arpl
pop
mov
xchg
add
jnp
cltd
sbb
sbb
sbb
std
dec
clc
adc
push
scas
lret
sub
xor
push
int3
sbb
cmp
push
in
aad
shrl
fwait
mov
aad
gs
cmp
sbb
sub
out
push
mov
pop
jl
mov
std
mov
xor
cmp
daa
mov
imul
lds
sbb
adc
fwait
mov
stos
dec
and
int3
jp
cmp
add
jnp
and
sbb
xchg
or
rcll
lahf
iret
rcll
test
push
jo
and
test
xor
adc
test
mov
dec
dec
pop
int
test
sbb
and
sbb
fwait
les
rorb
int3
jmp
clc
pop
or
out
fistpl
mov
push
mov
inc
xchg
lret
or
mov
lds
lret
cmc
rolb
gs
je
outsb
mov
ret
sub
ficoml
and
repz
fs
mov
fadds
inc
pop
leave
xorl
jp
jns
leave
sub
pop
jb
xchg
add
push
sbb
insb
mov
dec
sahf
sarb
dec
adc
xlat
faddl
or
pop
das
xor
jle
call
cmp
inc
lock
in
scas
xchg
push
pop
jb
xchg
fxch
shrb
inc
or
arpl
add
fadd
cmp
jb
cmp
or
adc
nop
inc
fsubrs
xlat
xchg
mov
jp
fcomp
test
push
mov
push
push
push
inc
sub
dec
and
cmpl
or
gs
ficompl
xchg
pop
shlb
notb
pop
jne
jmp
inc
mov
adc
dec
stos
mov
insl
into
scas
xlat
xchg
ljmp
jne
mov
xchg
mov
cmc
cmpsl
push
shll
mov
imul
orl
cmp
sbbb
rcrb
fadds
in
pop
jb
lret
stos
jno
out
jp
adc
fwait
shrb
mov
jp
dec
mov
loope
test
mov
mov
and
add
cmp
fstl
daa
loopne
mov
dec
adc
movsb
int3
pushf
mov
popf
aaa
inc
bound
cmp
jnp
scas
sub
push
inc
int
add
pop
and
or
mov
jae
mov
mov
popa
mov
int
fldenv
sub
or
imul
jl
mov
pop
fldl
sub
js
cmp
sub
nop
cmpsb
ss
inc
cmp
add
jo
pop
lahf
xchg
and
inc
jo
ret
cs
sbb
mov
vphaddubd
ss
xchg
mov
testb
xchg
test
and
lock
and
jnp
loop
xchg
jle
xchg
jae
lds
into
xchg
jle
pop
ffree
mov
push
lock
jbe
mov
inc
inc
push
lods
adc
mov
adcl
hlt
lret
aam
fdivrl
fistl
sbb
sbb
cmp
pop
and
test
fwait
sub
dec
lods
pop
inc
mov
push
sbbl
and
rcl
add
push
mov
mov
jno
and
gs
mov
jg
jo
data16
ja
aam
in
fnstenv
data16
loopne
and
push
jge
mov
push
imul
push
pop
lock
xor
xchg
sub
pop
outsb
imul
or
mov
push
aad
js
pop
stos
shrb
jne
cs
bound
popf
movsl
pop
jnp
stc
scas
das
jmp
push
inc
pop
insb
pop
shlb
cmp
insl
inc
test
jo
jo
xchg
je
sbb
cmp
insl
sti
jmp
in
xorl
lahf
jno
fidivl
lock
daa
fistl
jle
or
mov
push
sbb
pop
imul
movsl
ljmp
cmpsb
loope
sbb
sahf
mov
ljmp
pop
lds
and
stos
dec
cmpsb
js
fmuls
subb
test
mov
add
cmp
repz
lret
jo
mulb
xchg
xor
fs
pusha
jb
mov
sarb
mov
mov
call
mov
dec
mov
rol
cmp
or
addb
and
shll
int3
jmp
in
out
out
lcall
mov
aas
pop
cmpsb
xor
push
das
sbb
pop
dec
cmp
insl
rcrl
popa
push
idivl
adc
push
xchg
push
push
shrl
and
sbb
dec
aaa
xchg
jb
gs
int3
cmp
shll
cmp
sub
loope
xchg
dec
cmp
fldcw
inc
add
in
and
lds
inc
fwait
pop
hlt
movsl
jb
test
push
ftst
call
jbe
into
jno
gs
cmp
add
xchg
adc
pushf
jno
data16
mov
js
jo
in
xchg
nop
mov
push
lret
mov
push
cli
xor
call
xchg
pop
pop
jns
aaa
fbld
add
adc
cwtl
jno
mov
xor
out
jne
testl
pop
push
pop
add
lock
test
pop
ja
xor
jne
jg
adc
jo
faddl
adc
fisttps
fs
push
mov
and
push
iret
mov
stos
cmp
xchg
subb
call
lds
xchg
mov
outsb
sub
xlat
hlt
fistpl
mov
and
mov
or
hlt
mov
movsb
push
adc
fidivrl
push
ljmp
cmp
mov
adcl
push
inc
xchg
stc
mov
loope
jo
sbb
sbb
loopw
mov
pop
mov
inc
bound
xchg
jl
push
lcall
js
les
jae
lea
cmp
inc
mov
into
mov
jo
jne
clc
add
cmp
in
arpl
pop
pop
sub
stos
mov
inc
sbb
mov
mov
adc
sahf
jo
out
arpl
add
rcrl
daa
hlt
arpl
sti
pop
push
jae
push
xorb
or
pop
cmpsb
cmp
lock
push
pop
cwtl
lds
xor
and
add
and
loopne
dec
or
jno
data16
pop
push
div
inc
imul
hlt
dec
and
pop
test
inc
jno
idiv
sahf
jno
and
in
sub
loope
je
cmp
lods
into
je
and
sahf
out
dec
jge
or
push
rol
and
xor
adcb
pop
xor
cmp
push
aam
xlat
lcall
les
lahf
push
pop
ret
insl
mov
movsb
imul
adc
enter
xchg
sub
cmpsl
mov
add
add
add
pop
lret
pop
mov
loope
or
cmpsl
pop
mov
mov
into
mov
popf
sub
loop
lds
out
push
push
or
in
mov
call
cmp
movsb
lret
pop
sub
push
icebp
shlb
mov
inc
push
js
sbb
and
pusha
enter
push
mov
mov
push
mov
ret
fistpl
gs
push
lods
sbb
mov
lods
xchg
jb
dec
push
dec
mov
add
cltd
cmp
in
jg
add
push
xchg
and
inc
jecxz
stc
jae
into
and
je
callw
inc
pop
arpl
fs
repnz
jp
mov
cmp
xchg
xchg
mov
push
fs
lahf
xchg
sbb
bswap
hlt
arpl
lea
lret
push
pop
xchg
xchg
mov
loopne
push
rsqrtps
sti
outsb
into
inc
out
arpl
cli
mov
scas
xchg
sahf
insb
mov
into
dec
mov
mov
cmp
and
addb
sbb
icebp
xor
push
flds
mov
popa
mov
push
cld
je
cwtl
add
sub
mov
mov
call
std
dec
mov
mov
lahf
fs
mov
stos
jno
sbb
xor
inc
pop
mov
dec
dec
xor
inc
fs
fisttpll
push
movsb
test
loopne
sub
mov
fmulp
sbb
cmp
jle
or
arpl
sahf
mov
popf
xchg
iret
lock
cmp
bnd
dec
jo
test
xchg
mov
es
inc
lcall
lds
cmp
scas
and
pop
les
out
addr16
cmp
mov
pop
bound
popf
sbb
mov
adc
ret
sbbl
fcomp
add
pushl
jnp
add
pusha
mov
mov
cmc
int
cs
pop
xor
inc
outsl
sbb
dec
scas
and
lret
mov
push
xchg
lock
mov
jns
arpl
pop
sbb
ljmp
sub
or
push
ds
jmp
lahf
xor
adc
movsl
sahf
insb
outsb
cmpsl
test
xor
xor
aaa
insb
arpl
pop
jnp
cmpb
int
scas
xor
xor
in
lahf
push
inc
or
pop
call
mov
in
fimuls
in
cmp
jg
adc
and
mov
gs
add
cltd
xor
add
jbe
jnp
adc
popa
fwait
les
push
jmp
idivb
mov
mov
nop
lds
popa
les
dec
jae
rcrl
sbb
je
stc
insl
sbbl
pop
lds
loope
push
adc
push
push
aas
dec
test
xchg
push
mov
mov
into
mov
mov
xchg
jb
arpl
cmc
loop
incl
pusha
stc
lds
and
push
mov
lods
loopne
insb
push
jbe
inc
push
cmp
cmpl
mov
mov
mov
cmp
mov
bound
fistpll
stc
push
dec
je
cmp
dec
mov
ja
inc
das
fldlg2
cwtl
bound
rcrl
mov
jae
sbb
enter
imul
es
pop
cmp
sub
ja
and
pop
push
hlt
jge
jp
arpl
bound
cltd
mov
mov
mov
push
cmpb
subl
int3
loope
jo
cmp
in
stos
jns
inc
test
frstor
cmp
lcall
mov
lcall
mov
pop
incl
add
negl
dec
add
jns
lds
xchg
lods
push
inc
repnz
iret
imul
int
fdivs
insl
mov
fwait
arpl
pop
jo
push
pop
fxch
nop
push
lds
ror
sub
movsb
out
mov
cmp
mov
fs
xchg
imul
outsl
sbb
sahf
es
popa
les
adc
hlt
pop
sbb
adc
pop
sub
cmp
dec
in
rcrb
jb
xchg
pop
cli
jns
and
push
das
cmp
idivb
jp
add
and
jge
jo
mov
loopne
mov
dec
cmp
xchg
aad
xchg
movsl
inc
aad
xchg
jae
cmp
xor
call
fisttpll
lahf
or
cmc
adc
aad
push
cltd
jge
cmpsb
cmp
adc
mov
out
or
mov
xchg
jg
loopne
mov
push
sub
xchg
jle
cmp
into
pop
es
or
test
mov
imul
push
mov
mov
add
leave
fsubs
roll
xor
out
mov
out
xor
shrb
dec
xor
fcomip
imul
push
sub
dec
push
pushf
xor
jecxz
xchg
adc
add
rol
xchg
and
mov
inc
outsl
in
push
and
pop
adc
js
fwait
push
dec
fnstsw
mov
daa
xchg
push
xor
mov
cmp
sbb
jnp
out
dec
mov
rolb
adc
jl
out
jbe
fistpl
adc
mov
cs
xor
jo
jmp
les
pop
aad
loope
lcall
imul
mov
lock
cltd
mov
loope
xor
jl
inc
add
add
cmp
push
sbb
pop
fstpl
dec
inc
cmp
es
scas
mov
xor
jne
bound
imulb
mov
pop
imul
test
cmp
aam
adc
and
mov
pop
cltd
add
pop
movsl
gs
push
pop
jl
addr16
mov
xchg
test
outsl
jmp
insl
jne
addr16
xchg
popa
lock
insb
repnz
movsl
call
mov
incl
mov
cwtl
adc
aaa
xchg
shl
jg
repz
loope
pop
leave
ljmp
push
or
fisubs
aam
mov
inc
mov
addr16
bound
idivb
mov
lcall
xchg
adc
push
in
mov
shrb
push
adcl
popf
sbb
cmc
push
adc
scas
sub
cmp
sub
sbb
cmp
add
xchg
adcl
bound
insl
lock
testw
incb
cmp
cmp
jo
push
lret
inc
call
pop
mov
aas
mov
jne
incb
push
jbe
adc
inc
xchg
andb
adc
xchg
sbb
divb
adc
jmp
xlat
mov
fs
pop
jge
fsts
fs
stc
sub
cmpsb
push
push
aam
mov
sarb
loopne
dec
dec
mov
sbb
nop
cmp
dec
in
jno
push
lock
in
sbb
cld
sub
les
out
push
mov
loopne
loop
bound
pop
xor
pop
sbb
test
mov
jo
sti
xchg
or
arpl
aaa
pop
imul
lock
ficoml
pop
movsl
fs
test
jnp
xchg
jmp
call
mov
push
das
mov
in
xchg
mov
dec
or
in
adc
adc
rcl
daa
fldenv
inc
or
ret
pop
ja
xor
jnp
test
xor
int
loop
movsl
xor
cmp
iret
push
jecxz
in
lock
lcall
popa
sbb
cmpsl
xor
nop
jbe
loop
xchg
or
push
shlb
xlat
xchg
push
in
jb
addr16
decl
sub
jg
rcr
mov
and
inc
fldz
std
sub
jb
lods
das
stos
adc
adc
data16
repnz
xor
sub
cltd
orl
mov
addr16
test
in
loop
jo
and
ficoml
pmaxub
push
push
and
dec
bound
aad
cmp
shll
xor
xchg
cmp
dec
add
jl
lret
and
loope
nop
cmpsb
jb
cs
cmp
dec
sub
dec
pusha
in
pop
popa
clc
push
in
ret
dec
ljmp
dec
popa
push
pop
fmuls
ret
cld
dec
inc
cmpsb
push
jno
mov
mov
lret
push
push
dec
leave
push
push
jnp
aad
adc
sbb
push
popa
xchg
inc
or
xchg
arpl
loope
sub
jo
dec
adc
mov
add
lret
xchg
test
mov
bound
pop
xchg
sbb
fldt
std
push
sbb
jo
rclb
lds
sbbb
call
stos
push
stos
xor
jbe
in
mov
and
sub
adc
lcall
jb
cmp
hlt
jecxz
les
mov
mov
fs
faddl
les
adc
cs
cmp
fsubrs
pop
sbb
lahf
mov
jbe
fs
or
pop
scas
js
push
js
imul
rcr
inc
int
jg
mov
fwait
sti
jmp
bound
mov
cwtl
sbb
push
pop
stos
paddusb
mov
mov
adc
or
jmp
cltd
push
jmp
and
mov
cmp
repz
mov
iret
incl
mov
push
push
cmp
repz
icebp
or
jae
cmp
adc
int3
inc
ja
test
movsb
xchg
js
in
out
cwtl
add
pushf
pop
push
into
xor
je
jl
lods
cmc
decl
mov
dec
adc
cmpsl
sbb
mov
lock
addb
xchg
add
fldcw
push
cmp
pop
jg
cmp
push
iret
fistl
inc
and
rol
je
cld
bound
push
pop
push
pop
cmp
and
sbbb
dec
jmp
pop
out
cmp
cmpsb
cmp
jne
lret
xchg
popa
xchg
dec
cwtl
lock
iret
ja
mov
xchg
xor
ret
sbbb
pop
int
test
mov
lahf
rorl
fists
cmp
jo
mov
sahf
sbbb
int3
sbb
loope
mov
xchg
sbb
and
push
nop
dec
push
in
inc
jne
push
lock
push
jb
sbb
jns
mulb
loope
cmp
mov
pop
pop
and
or
shll
cwtl
pop
cmp
rcrl
loope
cmpsl
mov
add
aad
mov
sub
or
popa
pop
mov
pop
sarb
cmpsl
out
xchg
dec
xchg
jg
fcoml
pop
data16
cmpsl
xchg
repnz
push
cmp
or
jo
and
push
xchg
cld
pop
dec
add
and
add
ss
pop
pop
enter
cmpsb
je
cwtl
push
cmp
add
add
adc
push
mov
fmul
adcb
dec
cwtl
push
xchg
mov
cmpsl
push
jns
sbb
cmpsb
nop
mov
jae
push
dec
and
lock
inc
adc
push
pop
nop
mov
scas
mov
adc
andl
pop
mov
xchg
mov
lcall
mov
fwait
sti
push
scas
mov
rcl
out
or
cmc
xor
sarl
lret
out
cmp
mov
lods
xor
jno
push
in
insl
dec
scas
or
xchg
std
jo
xchg
push
out
clc
cmpl
scas
test
dec
out
push
imul
push
stos
dec
in
shll
cmp
jle
inc
xor
pop
into
push
stos
mov
push
in
cmpb
push
andl
cmp
ror
test
xchg
pop
or
je
fs
or
les
push
pushf
mov
negb
fcomi
test
or
pop
adc
and
mov
xor
dec
mov
xchg
test
scas
cli
mov
pop
inc
push
in
xchg
popa
jno
add
add
pop
mov
push
cmpsl
insb
push
xor
sbb
mov
enter
xlat
inc
pop
dec
jo
cmp
loopne
out
add
pop
lahf
pop
inc
jns
or
mov
xor
lret
push
int
xchg
icebp
push
ja
cmpsb
data16
data16
clc
test
scas
lcall
push
inc
adc
pop
push
insl
sub
add
mov
and
test
stos
inc
and
and
cmp
mov
push
mov
pop
push
or
les
arpl
nop
cmp
jnp
loop
stos
loopne
xchg
test
xlat
in
mov
xorl
stc
cmp
nop
sub
and
pusha
stos
ficomps
xchg
jne
adc
fwait
push
push
pop
neg
dec
repz
xchg
lret
xchg
in
pop
xchg
in
jle
push
scas
aad
jmp
or
add
jno
add
in
fmull
aad
insl
cmpsl
cmp
push
faddl
mov
lea
sahf
clc
pop
adc
xchg
pop
mov
pop
xchg
pushf
in
mov
lahf
adc
push
sbb
arpl
mov
adc
push
lea
dec
mov
lcall
fisttpl
les
dec
cmc
dec
jge
imul
inc
ret
out
stc
scas
adc
adc
jecxz
bnd
arpl
fsts
jo
or
sbbb
addr16
add
lret
shll
mov
inc
lret
pop
in
cmp
or
test
cwtl
nop
jae
and
xor
rolb
insl
nop
les
call
xchg
mov
xchg
pop
jbe
cmp
arpl
inc
mov
mov
rcr
cwtl
xchg
mov
mov
jp
or
movsb
pop
jl
sar
jbe
gs
mov
mov
mov
jnp
aam
aad
jecxz
fcoms
pop
xor
jae
addb
fstps
cmp
mov
lret
shlb
xchg
les
adc
and
dec
ljmp
mov
lret
inc
cmp
and
inc
pop
nop
rcll
mov
and
jle
les
mov
movsb
aad
jbe
aas
bound
es
push
cld
aad
pop
xchg
pop
mov
sbb
jb
pop
jbe
sub
mov
dec
addl
std
lods
sub
jnp
cmp
cmp
push
adc
mov
xor
pop
xor
dec
cmp
subb
scas
mov
push
jmp
insb
mov
jb
loop
push
fnstsw
mov
fistpl
add
pop
or
inc
loope
mov
loop
and
movsl
sub
mov
xchg
xchg
out
pop
dec
sub
or
int3
jbe
xor
rorb
popa
sub
adc
fwait
jo
mov
add
js
mov
fstpt
and
imul
in
bound
pop
add
out
jnp
mov
mov
outsb
xor
push
clc
gs
aas
out
mov
xchg
out
imul
push
push
inc
in
in
cmp
inc
mov
nop
jle
inc
cwtl
aad
mov
sbb
dec
adc
insl
fldcw
arpl
mov
test
shll
scas
dec
ja
sub
dec
test
into
add
cmp
lods
jb
push
cwtl
pushl
popf
dec
jg
and
pop
cmp
jg
lods
into
pop
xchg
mov
push
mov
mov
mov
xor
mov
cmpb
dec
and
cmpsl
dec
xor
dec
xchg
jle
jmp
cmpsb
and
inc
std
lahf
jns
dec
xchg
push
dec
addr16
push
pop
mov
into
cld
mov
iret
push
outsl
xchg
ss
insl
push
sti
adc
lds
aad
daa
fs
sbb
in
jge
sahf
push
dec
cltd
sub
mov
mov
pop
or
popa
jnp
lcall
sub
andb
pushf
jo
insl
enter
sub
into
fs
ret
push
cmp
gs
mov
push
repz
leave
jae
cmpsb
cltd
push
jno
mov
insb
je
outsb
ja
jo
sbb
gs
fstp
mov
addb
mov
dec
bound
mov
rolb
data16
dec
push
jmp
dec
mov
cmp
xchg
insb
jns
dec
mov
shrl
add
inc
mov
lock
jb
or
adc
mov
xorb
xor
and
xor
add
xor
out
aam
mov
inc
mov
mov
mov
mov
push
inc
je
mov
popf
or
mov
sbb
xchg
fisubl
sti
sahf
inc
add
jns
mov
cltd
jae
scas
and
les
mov
and
mov
scas
in
cmp
jo
pop
test
mov
jne
jo
or
test
add
notb
mov
aas
aad
push
sbb
test
loop
mov
lret
in
in
dec
sbb
pop
push
aaa
fildl
and
and
or
outsb
aas
add
pushf
daa
int
dec
push
mov
imul
pop
sti
jnp
jb
push
negl
xchg
inc
iret
mov
dec
push
fs
dec
or
mov
cmp
push
pop
fimuls
shll
push
cmp
outsb
mov
in
js
and
inc
ja
xor
sbb
incb
push
lods
mov
cmp
cmp
fisttpll
ret
clc
shll
loop
jnp
mov
mov
ja
imul
das
movsl
fisttpl
lcall
les
add
ret
and
jo
and
pop
pop
test
lds
outsl
mov
mov
js
mov
dec
cvttps2pi
subl
cmp
sbb
xchg
jb
mov
imull
sub
icebp
stc
mov
mov
adc
cs
sbb
jp
repnz
in
pop
pop
jns
inc
add
xor
test
sub
mov
lea
cwtl
jl
and
mov
xchg
mov
pop
jns
sub
sbb
jbe
stc
jno
or
fs
jmp
sahf
fld
leave
mov
pop
test
push
jae
sbb
pop
cmp
dec
xchg
and
mov
push
outsb
in
sbb
or
adc
sub
test
mov
inc
test
pop
shll
les
roll
push
fs
cmp
inc
fidivs
inc
pop
js
aas
les
mov
jge
fcmovne
sbb
rolb
jl
arpl
cwtl
pop
sbb
ja
ja
les
jo
fidivs
imul
repnz
out
inc
cwtl
dec
and
shrl
pop
clc
bound
cmpw
pop
ret
test
cmpsl
jl
push
push
jecxz
or
and
mov
scas
es
data16
and
ret
js
fdivrs
pushf
and
lods
push
jg
mov
dec
fwait
movsl
pop
mov
stos
jae
ds
pop
jns
push
fs
jmp
fnstcw
dec
push
jp
call
mov
mov
cmpsl
pop
inc
or
cmp
ja
jno
fstp
push
jle
or
sub
pop
adc
movsl
inc
mov
cmp
cli
and
into
jbe
xchg
outsl
add
cmp
pop
fwait
jge
je
xchg
fdivrs
jne
fistps
xchg
shll
xchg
sub
in
adc
adc
pop
xchg
cmp
pop
nop
push
adc
jle
lods
repnz
pushf
dec
lods
add
les
negl
and
jle
cmp
gs
sbb
das
in
xor
pop
in
data16
sarl
jne
and
sar
jmp
stos
or
mov
pop
pop
stos
sbb
sub
push
ss
pop
lret
daa
movsl
mov
clc
dec
ret
cmp
pminub
sbb
es
sub
inc
fsubr
jge
pusha
adc
jecxz
xor
scas
jb
outsb
sub
arpl
dec
in
xchg
and
rcl
je
les
ljmp
fisttpll
in
adc
xchg
test
rcrl
push
divb
dec
cmp
lock
data16
subb
xchg
je
pop
adc
jl
stc
adc
xor
inc
jl
cmpsl
jbe
xchg
xchg
andl
enter
xchg
and
add
js
mov
push
dec
scas
sti
js
sahf
pushf
movsb
inc
pop
test
idivl
and
nop
leave
adc
testl
int3
test
js
gs
push
fstpl
jb
mov
jbe
xor
lahf
js
andb
andl
mov
pop
in
xor
cmp
mov
xchg
rorl
push
andb
test
in
or
aam
dec
cmp
add
sbb
adc
loope
fisubrl
test
xor
sbb
sbb
cmc
push
pop
mov
dec
cmp
mov
pushf
xchg
jno
ror
into
inc
les
adc
ret
fwait
sbb
mov
mov
or
lods
pop
dec
pop
mov
gs
xor
dec
pop
stos
mov
pushf
lcall
rolb
jb
xchg
sbb
in
push
dec
es
sub
fmuls
jg
cld
jne
popf
mov
loopne
xor
int3
pop
mov
test
jnp
and
test
or
jg
lods
dec
ds
ja
fmuls
setne
mov
data16
je
mov
mov
aaa
and
out
push
pop
pop
scas
cld
xor
xchg
cmp
fs
adc
add
pop
jmp
lret
pop
push
insb
lret
lock
mov
xlat
cltd
testl
jg
cmp
pop
xorb
xor
lock
lret
jno
lods
cmp
cmp
orl
popf
icebp
mov
jp
push
andb
pop
test
scas
push
loop
jge
jno
cmpsb
insl
aam
jecxz
sub
stos
out
xor
das
fdivs
mov
fidivrs
cmp
daa
cmpsb
xor
mov
lods
cmp
add
int
inc
imul
in
outsb
ja
movsl
int3
pop
xor
pop
sbbb
jmp
xor
lds
fmuls
mov
add
ja
and
push
fbstp
repz
mov
js
jb
xchg
xor
xchg
xor
fwait
lds
in
repnz
sahf
pop
xor
mov
enter
scas
sub
test
adc
adc
inc
lock
data16
rcrl
mov
rolb
xchg
xor
mov
mov
jg
push
lods
mov
dec
enter
fcomps
mov
cmp
push
cmpsl
icebp
out
pop
sbb
rcrb
aad
lret
or
lea
loop
push
xor
sbb
out
fidivrs
imul
ss
dec
insb
mov
loope
aam
cmp
push
jo
sub
in
sub
test
and
cmpsl
sbbl
mov
xchg
dec
push
shrl
shl
and
cwtl
mov
aaa
add
jl
mov
stos
mov
add
mov
icebp
faddl
xor
adc
bound
ret
push
adc
daa
adc
pop
cmp
mov
mov
push
mov
stos
jb
call
add
ret
pop
xor
outsl
rorl
lds
sti
aaa
xchg
dec
jle
fs
sbb
push
cmovg
xchg
sbb
vmovshdup
dec
mov
bound
js
cltd
pop
test
xor
lret
iret
and
adc
xchg
xchg
push
out
cld
jecxz
in
pop
push
push
xor
pop
fldl
jno
push
jbe
inc
cmp
pop
mov
aam
cmp
nop
mov
sbb
sub
adc
mov
shrb
sahf
aad
dec
xchg
es
imul
mov
push
outsl
clc
sub
or
scas
dec
pushf
jne
push
xor
lret
push
pop
pop
mov
fs
test
add
or
mov
or
outsl
mov
data16
addb
pop
jo
jno
fs
adc
push
pop
cmpsl
mov
bound
scas
orl
mov
sub
jne
call
sti
push
inc
push
xchg
es
loope
xchg
fs
notl
xchg
out
test
rcr
insl
orb
nop
loope
cmp
jo
addr16
dec
in
mov
dec
mov
push
arpl
pop
decl
add
jge
jnp
in
add
icebp
push
imul
mov
repnz
push
popa
mov
clc
add
jnp
push
test
cwtl
pop
sbb
inc
rol
rorl
mov
mov
and
cli
lods
fwait
stos
jno
pop
jbe
mov
cmp
xchg
adc
ficompl
or
arpl
xor
or
adc
lds
mov
iret
lds
jmp
xor
xor
mov
push
pop
mov
push
push
fistpl
mov
sar
jo
xor
sar
mov
je
call
movsb
aas
mov
sbbl
sbbb
jge
pop
stos
std
les
cld
into
lds
mov
mov
jno
jne
xor
je
fcompl
fisubs
add
cmp
enter
push
push
aad
test
sub
or
fnstcw
sbb
loopne
jno
in
arpl
dec
nop
pop
mov
xor
in
out
or
pop
sarb
iret
lods
lret
shr
and
adc
flds
or
xchg
fldt
into
adc
inc
lret
mov
sbb
cmp
xor
mov
call
repz
push
push
pop
jmp
bound
das
hlt
mov
inc
test
inc
rdpmc
mov
cmp
divb
into
fstpl
push
stos
loope
xor
ljmp
inc
xlat
push
push
aaa
shll
es
mov
aad
mov
out
and
in
loopne
or
push
outsl
mov
jno
mov
sbb
fdivs
incb
ret
adc
out
ficoml
pop
and
xor
lahf
add
inc
into
pop
sub
ror
and
mov
int3
out
mov
stos
ja
pop
mov
out
xorw
imul
bound
bound
push
inc
cmp
daa
sarl
fcmovbe
je
mov
mov
movsb
mov
pop
cmp
es
ffreep
fwait
xchg
xchg
push
ja
dec
dec
jb
aas
inc
mov
lret
jp
push
xlat
mov
addr16
xor
fs
pop
push
out
push
and
movsb
lret
out
xor
shll
test
imul
mov
into
cmpsb
data16
nop
insb
pop
push
ljmp
inc
icebp
test
jae
xchg
inc
loopne
push
sbb
mov
xlat
dec
jo
lods
or
outsb
in
cmc
lods
add
push
test
jle
jae
pushf
mov
mov
dec
adc
icebp
int3
rorl
or
pop
aam
pop
inc
mov
loope
dec
or
mov
xlat
fnstenv
inc
fnstenv
mov
sbb
push
jg
bound
adc
cli
or
lcall
xchg
push
aas
test
cmp
sahf
ss
xor
lahf
addl
mov
mov
inc
dec
je
push
js
nop
outsb
scas
addb
jg
cmp
push
mov
enter
mov
push
jl
cltd
cltd
nop
jp
das
xchg
adc
and
mov
sub
stc
cld
push
loop
cmp
fists
mov
pop
xchg
mov
jb
cld
adc
dec
jg
inc
sbb
loopne
add
xchg
jge
lds
es
rcrb
jnp
cld
cmp
or
mov
mov
mov
or
test
addb
and
clc
push
fstpt
add
inc
es
ret
gs
insb
sbb
lock
mov
or
idiv
add
loope
fs
je
cmp
lods
outsb
bound
imul
loope
dec
push
cmpb
inc
xchg
pop
jo
test
pop
test
test
cmc
pop
loope
pop
jo
les
push
bound
daa
xor
adc
sti
loop
jb
xchg
adc
rorl
jecxz
divb
and
mov
or
test
push
jmp
loope
cld
test
jne
push
mov
pop
sbb
mov
mulb
repz
jp
xchg
or
mov
mov
ljmp
into
or
gs
jns
cli
mov
or
cwtl
inc
sbb
or
out
xchg
int
enter
lods
sbb
pop
xchg
cmpsl
inc
sub
jo
outsl
xor
icebp
iret
mov
cmp
lea
fcmove
ljmp
outsb
dec
cmp
fsubl
out
bound
dec
sub
js
les
pop
mov
jne,pn
mov
push
js
push
mov
mov
mov
pop
sub
fs
inc
mov
sub
and
jl
lret
in
sarb
mov
sbb
pop
ja
sub
xchg
enter
imul
cmp
inc
cmp
xchg
in
iret
cmc
ljmp
or
cmpsl
adcb
xchg
dec
je
jp
icebp
add
push
fsubs
sbb
xchg
sub
push
cmp
cmpsl
out
fadds
cmpsb
in
push
dec
push
cmp
adcb
test
push
rorl
loopne
jne
and
push
outsl
lock
sbb
lods
dec
out
mov
push
dec
dec
int
mov
test
sub
push
push
int
mov
adc
cmp
outsb
or
bound
push
adc
insb
mov
sbb
pop
fisttpll
mov
pop
in
idivb
jle
xlat
xor
loope
fcompl
shll
loope
jnp
lret
dec
pop
mov
xchg
inc
add
outsb
inc
shlb
dec
sub
movsb
cs
les
mov
ljmp
repz
jo
mov
shl
loop
cmp
pop
shrl
sub
inc
dec
and
sub
pushf
push
repnz
gs
cmp
sbb
push
je
popa
rolb
adc
jo
cli
jp
inc
roll
cmpsb
cmp
mov
pop
addl
or
bound
sub
addr16
pop
pop
xlat
sbb
pop
xor
lea
pop
push
fstps
lahf
push
pop
adc
enter
dec
dec
movsb
fld
jg
push
pop
mov
int
or
sub
int
pop
int3
mov
pop
cmp
jne
mov
out
xchg
cmc
pop
push
cli
popa
sub
cmp
mov
daa
mov
and
inc
scas
fnstcw
lods
jecxz
push
jne
jno
fyl2x
adc
mov
mov
cmpsl
aad
xlat
and
lock
inc
or
andl
enter
or
lahf
loope
test
push
xchg
jo
and
cltd
cmpb
cmp
push
cmpsl
push
add
fidivl
adc
scas
mov
jge
lods
cmp
lahf
xchg
bound
jbe
dec
data16
xor
stos
mov
rcrl
push
roll
les
xorl
in
mov
int
mov
rcl
inc
cmp
test
xchg
or
mov
push
rcr
fstp
push
jb
adc
rcrl
jge
xorb
les
mov
pop
pop
stos
inc
js
pop
popa
xchg
rcll
jo
scas
rclb
pop
cmp
daa
push
add
arpl
iret
loop
int
add
xor
fwait
roll
mov
cs
mov
lds
into
pop
sbb
ror
in
ffreep
xchg
rclb
jno
aad
fldcw
les
inc
cs
out
adc
cmp
nop
insb
arpl
es
adcb
or
enter
dec
mov
loop
in
dec
inc
in
cmpsb
sbb
aad
stos
add
mov
mov
fstpt
cmp
faddl
popf
push
aad
flds
shll
inc
js
pop
aad
pop
loopne
cmc
and
cld
cmpb
ficompl
mov
xor
inc
jbe
mov
xchg
cld
cld
mov
mov
lods
rorb
xchg
js
aad
sbb
dec
scas
xchg
pop
pop
mov
push
cmp
insl
or
pop
push
sbbl
jne
testl
std
mov
pop
jecxz
imul
inc
lods
cmp
dec
fcomp
mov
mov
subb
lods
lret
aam
decb
adc
lret
pop
daa
std
jl
lock
inc
mov
mov
bound
jo
pushf
loope
movsl
pop
or
movsb
and
adc
push
xchg
adc
push
jecxz
or
push
scas
stc
into
fwait
pop
test
arpl
push
jno
cmpsl
push
movsb
jecxz
push
or
cs
and
gs
shll
mov
cli
icebp
pop
cmp
les
pop
dec
icebp
dec
pop
not
shl
cmp
loop
and
inc
dec
lcall
les
mov
jno
pop
adc
clc
push
and
cmp
mov
cmp
cmp
nop
cmp
mov
lock
pop
pop
jo
in
adc
xor
sahf
jb
adc
xor
stos
wrmsr
xor
les
movsl
cld
mov
push
cmp
repnz
mov
loope
test
xchg
das
cmp
jecxz
jno
mov
jo
push
clc
in
fs
je
or
jns
rcll
shl
or
outsb
rorl
mov
jne
jmp
inc
inc
jns
orl
loopne
gs
cmp
pop
push
mov
outsb
rclb
repz
fcompl
fnstenv
cmp
repnz
xor
nop
in
cmp
or
cmpl
test
stos
mov
stos
mov
mov
test
pushf
into
mov
push
sub
xchg
outsb
jne
cmp
cmpsl
in
aam
xchg
mov
jge
aad
mov
fsubr
test
jbe
sbb
adcl
push
add
jb
mov
push
jmp
push
sbb
jno
es
jmp
into
mov
movsb
aas
jns
push
hlt
or
add
mov
mov
add
mov
add
imul
or
sti
sbb
shlb
push
pop
outsl
jno
imul
jo
sbb
xchg
cmpb
adc
mov
sahf
jne
jne
mov
iret
aad
push
js
ret
dec
test
jmp
inc
loope
xor
mov
xor
adc
inc
xchg
cwtl
shlb
mov
aaa
iret
jge
rolb
hlt
inc
dec
jae
jge
fs
mov
fcoms
dec
aad
loop
data16
imul
in
push
mov
test
cmc
jno
push
iret
pop
mov
fwait
das
mov
sbb
movsb
mov
insl
jb
dec
cmp
cwtl
push
xchg
mov
loope
cmp
mov
ret
sub
roll
dec
jl
dec
insb
adc
fistpll
mov
fs
in
imul
sub
dec
test
insl
pop
and
lea
sub
xor
add
xor
pop
in
ja
mov
or
outsb
cmp
stos
mov
lahf
cmpsb
cmp
lahf
cmp
or
pop
js
mov
rorl
push
add
cld
test
xchg
sub
jb
mov
popa
out
jcxz
loop
jae
pop
inc
js
push
xchg
and
scas
rcrl
cli
pop
movsl
adc
jno
sub
jo
fstp
out
js
fs
push
das
test
adc
jl
xchg
rcrb
push
xchg
inc
jmp
ja
sub
bound
mov
jp
in
pop
inc
pop
xchg
idiv
imul
ret
pop
scas
mov
movsl
push
movsb
ljmp
push
and
jl
insl
jp
push
rcrb
cmp
xchg
popf
daa
sahf
in
cmp
xor
hlt
cmp
jns
mov
fmuls
rorl
cmp
dec
mov
adc
and
aas
rclb
jno
jl
xchg
sub
in
bound
or
adc
jle
mov
jbe
mov
adc
mov
sbb
xchg
xor
rcll
movsl
lock
fidivl
and
push
sub
pop
push
sub
cltd
xchg
sbb
lret
repnz
int
mov
fs
jae
nop
shlb
mov
movhps
pop
sub
mov
into
push
out
and
data16
lret
and
cld
fsubs
jle
jp
pop
dec
push
sub
add
lret
push
outsl
jmp
loopne
jl
in
mov
adc
dec
mov
cmp
dec
rsm
imul
dec
insb
cmp
test
std
inc
and
sub
data16
xor
xchg
push
fdivrl
shll
xchg
push
pop
fdivl
jg
sub
or
mov
xchg
loopne
sbb
iret
fs
push
pushf
lret
scas
jge
mov
lahf
fdivl
pop
out
adcb
jns
in
repz
mov
adcl
addr16
movsb
popa
fsubrs
xchg
sub
sbb
clc
dec
test
test
fsubl
insb
mov
and
arpl
dec
push
xchg
sti
pop
lock
pop
aaa
adc
js
mov
jae
xchg
aam
jle
lods
imul
pop
add
scas
cmp
in
or
or
cmc
push
bound
inc
shrb
ds
shl
cmp
bound
test
dec
outsb
and
xorb
push
mov
loopne
lods
xchg
add
add
mov
pop
jae
push
daa
mov
xchg
aaa
jae
inc
add
jns
cmc
add
aam
dec
inc
flds
bound
pusha
add
je
mov
jb
lods
loopne
xor
cmc
fstl
rorb
dec
pushf
fnstenv
pop
pop
out
test
mov
push
or
cltd
mov
and
cmpb
pop
push
in
int3
test
les
rcrb
jecxz
cwtl
movsb
mov
mov
cmpsl
push
lods
mov
mov
jo
cmpsl
jb
stc
mov
stc
mov
out
xor
daa
je
lds
add
jp
mov
mov
loope
push
cmp
mov
sub
and
outsb
outsl
xchg
cmp
loopne
in
lahf
imul
sub
inc
bound
fnstcw
test
mov
push
fimuls
in
aas
sar
aad
pop
les
test
sbb
in
pop
int
jne
or
fisubs
mov
xor
push
ds
jnp
clc
jl
sarb
jle
in
jnp
push
cld
xchg
mov
xchg
loope
mov
bound
int3
pop
shl
mov
mov
test
not
push
subb
clc
leave
movsl
mov
xor
dec
inc
fs
aam
xorb
aam
cmp
jbe
js
push
into
mov
addb
js
mov
mov
cld
mov
add
outsl
test
cmp
loope
sub
xor
mov
dec
lea
cmp
pop
sbb
sub
dec
sbb
cmp
data16
js
shl
scas
ja
movsb
scas
sbb
jl
ss
test
or
push
addl
jnp
icebp
mov
cmp
hlt
les
push
addl
push
hlt
pop
testl
pop
sti
jno
dec
rolb
pop
in
or
xchg
cmp
jns
mov
jne
jb
test
mov
sbb
loop
add
xchg
int3
lods
adc
aad
add
push
scas
push
lret
mov
sbb
push
adc
negl
aam
cltd
jle
lret
stos
jne
cs
int
pop
sub
shld
bound
mov
pop
dec
lahf
mov
fs
cmp
mov
out
adc
pushf
and
push
fnstsw
sbb
movsb
jle
and
xchg
lea
mov
push
jnp
pushf
int3
loopne
sub
push
in
mov
mov
imul
and
adc
sahf
insl
out
imulb
mov
push
frstor
je
mov
push
mov
push
jne
cmp
fldenv
cmp
out
mov
cmc
popf
jns
data16
ljmp
out
test
ret
jecxz
add
fdivl
jle
dec
loopne
into
test
and
mov
mov
pop
bound
cmp
xchg
movsb
lret
enter
sahf
mov
aam
movsb
xor
sbb
sti
mov
cmpl
fistpl
les
fiadds
xchg
shrb
jge,pn
cmp
out
orl
and
push
mov
notb
xchg
sub
xor
fistl
test
dec
insl
or
je
cmc
mov
test
cmp
lods
popa
js
pop
dec
jmp
enter
xchg
push
pop
mov
enter
mov
mov
xchg
shll
jge
adc
jb
adcl
xchg
dec
ficompl
aam
jg
xchg
sub
cwtl
mov
mov
xor
mov
jg
lock
push
xor
pop
sub
pop
test
inc
add
dec
xor
jb
jle
dec
mov
test
daa
inc
je
les
cmp
mov
lea
outsb
xchg
mov
cmp
shlb
int3
lock
mov
add
sbbb
xor
js
les
fiadds
jecxz
push
cmp
mov
sbb
add
cmp
adc
in
mov
or
dec
dec
jge
push
xchg
mov
mov
js
and
ficoms
cmp
roll
in
mov
js
mov
fcmovu
ficomps
pop
fldcw
jno
in
dec
xchg
pop
test
lret
jmp
mov
adc
lcall
call
lds
pop
cwtl
data16
sbbl
pushf
addl
ljmp
inc
arpl
mov
ret
sarl
pop
xchg
xchg
xor
jmp
jne
iret
mov
fwait
adcl
fimull
aam
mov
sbb
push
push
jns
jnp
inc
xlat
cmp
dec
xchg
mov
inc
xor
dec
sbb
push
lcall
les
shll
cltd
sub
and
xchg
jno
dec
mov
cmp
movsb
jmp
fdivs
mov
fistpl
cmpsl
push
test
rol
pop
inc
push
add
outsb
les
insb
dec
mov
pop
das
scas
push
fcmovnb
stos
into
ret
mov
cmp
ret
in
mov
mov
jecxz
sbb
jno
jae
inc
loopne
dec
hlt
out
sbb
push
repz
test
call
xchg
cmp
mov
push
fs
les
push
pop
out
add
cltd
loop
cmpsl
mov
mov
add
cltd
ret
mov
fisttps
mov
mov
mov
je
stos
cmpsb
sub
call
insl
jmp
jl
xchg
stos
dec
add
sub
lea
imul
fyl2xp1
dec
daa
xchg
mov
rorb
sbbl
rcr
xchg
mov
in
gs
sti
pushf
movsb
insl
je
sbb
std
and
jmp
in
inc
movsb
jl
mov
repnz
push
add
sbb
loop
js
lcall
jae
stos
mov
ret
inc
cmp
jmp
cwtl
sbb
shl
popa
push
hlt
loope
ret
fisttpll
jae
test
loope
cmc
mov
mov
andl
cmp
shr
jmp
xchg
popa
fwait
push
jo
mov
dec
mov
cmpsb
cmpsl
cld
in
pushf
mov
jne
iret
icebp
push
ja
inc
test
icebp
pop
xor
mov
push
or
mov
lds
mov
xor
fs
ficoml
jae
pop
fs
or
mov
pop
fistl
aas
addr16
call
dec
jae
dec
cli
dec
call
dec
mov
popf
mov
lock
jmp
jg
mov
adc
sahf
arpl
lret
lods
jp
push
testb
fiadds
cmp
sti
pushf
popf
mov
push
jnp
rorl
fidivs
jo
pop
rcrl
data16
dec
fldenv
sub
jmp
loopne
inc
inc
ret
or
jp
fwait
dec
ljmp
into
bound
jae
xchg
cmp
cmp
add
fnstenv
dec
es
shl
mov
outsl
mull
in
push
pusha
popf
xor
inc
clc
pop
cmp
js
addr16
mov
aas
push
into
js
nop
shrb
loopne
shll
mov
sub
cmp
cmp
test
adc
sarb
push
js
repz
lahf
ja
mov
les
pop
xchg
pushf
pop
cmpsl
cmp
xchg
call
fsts
dec
dec
push
mov
fsubl
ds
js
pop
scas
fldl
jo
mov
cmp
imul
push
and
jl
mov
and
adc
jl
loop
leave
mov
data16
pop
mov
xchg
dec
dec
in
xchg
outsb
jb
inc
pop
push
cmpb
mov
jne
inc
pop
sub
fs
pop
ds
push
mov
cmpsl
sti
enter
inc
xchg
adcb
out
xor
ja
inc
sub
in
je
inc
scas
andb
outsb
mov
pop
mov
adc
outsb
adc
adc
outsl
int3
xchg
rcrb
test
inc
adc
in
sub
lcall
sbb
pop
jo
imul
adc
cmp
sbb
inc
cmp
in
lahf
jo
sub
daa
dec
cmp
popa
lahf
arpl
mov
hlt
or
sahf
pusha
push
movsb
arpl
adc
fnsave
xchg
lahf
sub
sbb
xor
inc
pop
fxch
cmpsb
test
push
jnp
ffree
iret
inc
xor
dec
add
and
push
mov
jne
push
jnp
enter
jo
inc
cwtl
push
or
scas
daa
loop
mov
xchg
stos
leave
push
cmp
lods
mov
push
jg
mov
cmp
jge
mov
loope
data16
push
fcoms
cmpsb
push
push
fisubrl
lock
fldl
inc
pop
jo
loopne
sub
xchg
stc
xchg
pop
push
insb
push
inc
pop
or
pop
iret
imul
xorb
sbb
xchg
xchg
pand
mov
pop
push
mov
push
adc
in
insb
xor
jg
mov
fldcw
jnp
iret
call
add
cli
mov
push
pop
adc
mov
mov
ljmp
adc
lcall
in
lods
mov
aam
loope
enter
fstpt
andl
cmp
popf
fstl
jg
xchg
test
pop
hlt
add
adc
pop
dec
call
jmp
add
mov
and
js
shrb
push
lds
cwtl
push
xor
popa
pop
or
cltd
jecxz
push
sbb
out
shrb
push
dec
dec
pop
les
pop
and
andl
pushf
movsb
add
dec
push
cltd
popf
or
movsb
ffreep
mov
mov
stos
mov
imul
sar
sbb
jns
mov
inc
cltd
jbe
aam
push
cld
lret
adc
push
push
push
xchg
or
push
test
xchg
inc
mov
cmp
aad
cwtl
sbb
add
ss
jbe
pop
add
into
xor
test
lods
cmp
dec
mov
movsb
mov
fcomi
fdivr
adc
loope
jo
repz
cmp
les
cmp
stos
jo
aam
loope
clc
add
push
fisubl
repz
lock
cmp
stos
fidivrl
inc
sarl
gs
mov
sbb
inc
pop
das
push
mull
jb
pop
arpl
adc
jl
andl
xor
mov
sti
inc
mov
lret
xchg
inc
mov
aam
inc
jge
sbb
sbbl
loop
jne
dec
dec
bound
bound
cmp
push
cmc
xor
pushf
fldenv
les
inc
movsb
xor
adc
push
sbb
mov
mov
jnp
gs
or
jns
xchg
jns
cmp
fdivs
add
outsb
call
cs
in
bound
jae
push
inc
dec
outsl
in
cwtl
pop
aad
and
popa
cmp
fidivl
xchg
pop
cmp
addr16
mov
pop
lcall
and
test
cmp
inc
call
call
fldcw
xor
cmp
pop
jg
jl
fdiv
pop
jb
jo
outsb
xchg
fidivrs
mov
nop
cmp
mov
cmc
add
jno
in
xchg
cltd
scas
fsubs
insl
mov
call
dec
scas
push
mov
stc
scas
add
add
leave
mov
mov
mov
jno
mov
dec
jno
je
cmc
imul
pop
sarl
xor
mov
data16
xchg
mov
add
push
push
push
dec
cmp
jg
push
int3
mov
push
push
inc
push
and
push
outsl
xchg
stos
cld
xor
and
imul
pop
or
and
dec
xchg
adc
test
call
sbb
scas
push
or
scas
cmp
sbb
add
xchg
dec
xchg
fidivrs
and
xlat
adc
in
cld
inc
es
loopne
orb
dec
xchg
out
test
js
into
jne
jo
dec
or
xor
out
sbb
movsb
mov
push
adc
mov
push
int3
pop
cmp
fs
je
jnp
dec
dec
jns
pop
push
push
and
inc
out
fdiv
push
cld
xchg
adc
inc
inc
icebp
frstor
jp
out
push
loopnew
pop
push
pop
scas
xlat
adc
or
push
dec
cltd
add
imul
loope
xor
push
fildll
cltd
sub
fwait
add
dec
sub
int3
sahf
jge
xchg
push
jno
pop
lock
mov
imulb
cmc
scas
jb
push
sub
jo
sarw
and
daa
outsl
clc
xchg
mov
mov
jle
int
xchg
lds
addr16
fldl
mov
pop
pushf
mov
hlt
dec
xor
enter
out
cmp
ljmp
dec
pop
dec
in
dec
mov
rcrl
ljmp
cmpsl
fldcw
mov
and
in
clc
jns
dec
loopne
cmpsl
pop
inc
cs
xchg
fnsave
out
shrl
aad
add
push
or
cltd
dec
push
fcmovb
push
out
test
fidivrl
lahf
popf
in
in
das
cmpb
je
out
sahf
mov
mov
mov
frstor
outsb
pop
out
push
jno
and
mov
je
aam
mov
into
ret
push
mov
lcall
repz
cmp
lds
lret
cmp
leave
rclb
ret
les
jb
pop
jbe
inc
imul
pop
fsin
data16
mov
movsl
mov
xlat
cmc
and
out
mov
out
mov
arpl
adc
jge
jbe
and
cmp
and
adc
push
inc
movl
dec
lds
cmp
sbb
ret
loope
xor
icebp
jo
fcmovnu
loop
nop
add
int
lock
cmpl
sahf
sub
mov
push
mov
mov
push
pop
nop
xchg
pop
cmp
push
pop
cmp
fstpl
dec
fistpll
dec
cmp
mov
data16
add
inc
decb
imulb
hlt
lahf
pop
add
xchg
in
lcall
jge
fdivl
and
push
xchg
je
jle
subl
dec
and
pop
inc
mov
jbe
popa
in
mov
mov
fsubs
fistpl
jnp
pop
mov
jne
or
and
or
mov
leave
push
dec
das
pop
pop
jne
pop
fbstp
and
outsl
ja
sahf
loopne
lcall
jno
lea
or
insb
js
jg
into
jnp
je
mov
mov
adc
imul
push
adc
out
cmp
xchg
xor
in
dec
arpl
int3
jns
mov
sbb
sub
add
es
sbb
xchg
add
lods
test
outsl
inc
sub
sbb
push
rcll
push
int3
jae
movsl
pop
jp
stc
inc
dec
sbb
clc
or
daa
add
je
movsl
push
call
sub
int
or
sbb
stos
pop
push
jns
test
mov
jle
in
mov
jp
mov
pop
insl
out
sarb
sahf
dec
xchg
xchg
int
ds
lret
les
ja
adcl
es
pop
arpl
bound
pop
pop
jb
pop
loope
xchg
daa
mov
mov
sbb
ds
call
out
daa
test
mov
mov
xchg
icebp
inc
jns
pop
aam
cmp
fisubl
je
cmp
cmp
lds
mov
jmp
sar
jl
movsl
ljmp
jae
adc
bound
and
dec
cmpsl
popa
ret
dec
jo
in
rclb
push
jo
sub
xor
jnp
clc
adc
int
pop
es
push
mov
xor
data16
mov
pop
ds
addr16
jmp
adc
xchg
lea
mov
jnp
jl
fs
cmp
jnp
fstpt
pop
lahf
jnp
push
ret
or
int3
fcoms
cmp
dec
or
loopne
push
scas
fstl
sbb
lock
loope
adc
stos
clc
test
dec
es
test
lods
nop
arpl
cmp
inc
rorl
xchg
inc
inc
and
sahf
addr16
xor
std
xlat
add
sub
fs
shrb
pop
rorb
sbbb
xchg
sbb
jno
push
push
stos
or
bound
pop
xchg
mov
sub
push
xchg
sbb
icebp
into
cmpb
mov
ja
jmp
mov
jl
or
daa
add
popa
je
outsl
inc
push
test
inc
jp
gs
hlt
cmpsl
cmp
shlb
rcrl
cmp
cmp
je
aad
push
cmp
pop
adc
cmp
loopne
in
cmp
sub
in
cltd
jb
out
inc
mov
pop
rcr
sub
xchg
jne
mov
jle
out
data16
push
cmpsb
mov
imul
jo
jmp
loopne
mov
jb
add
push
arpl
sarb
ret
movsb
add
jg
mov
adc
cltd
pop
ffree
in
jno
push
mov
dec
mov
idivl
rcrl
mov
call
lcall
adc
cmp
jmp
sbb
outsb
dec
xor
stc
mov
inc
add
je
mov
mov
ret
loop
rcl
pop
dec
mov
loopne
push
ffree
inc
cmc
sub
fs
lods
push
sub
pop
mov
fcompl
jo
push
lea
and
sahf
mov
cs
in
mov
adcl
jno
mov
cmp
pop
jne
or
sbb
mov
rorl
cld
fnstsw
arpl
cltd
lcall
xchg
dec
repz
sahf
in
dec
divl
cmp
xchg
fs
cmp
jmp
xorl
pop
insb
lds
aad
popf
pop
pop
mov
cmp
mov
imul
fldt
jb
adc
mov
gs
inc
sub
lods
call
xchg
dec
sbb
loop
dec
shlb
mulb
mov
loop
out
test
add
mov
jnp
jl
or
mov
scas
test
push
pop
push
mov
jns
pop
in
jbe
xlat
popa
jmp
jae
lods
ja
push
cld
mov
iret
fnstenv
fcomi
lahf
mov
outsb
idivl
in
cmpb
sbb
mov
push
daa
clc
stc
cmp
addl
mull
sbb
mov
cmp
daa
pushf
xchg
xlat
roll
add
or
sahf
shlb
xor
popa
dec
popa
lds
xchg
mov
cmp
pop
jp
in
dec
mov
outsb
test
dec
lods
xor
dec
call
mov
sbb
cmp
xchg
and
sbb
xor
ljmp
mov
mov
and
cwtl
jl
lea
mov
out
pop
lahf
xchg
jo
dec
out
mov
aaa
xchg
and
test
mov
dec
nop
pop
fimull
sub
repz
push
loopne
sbb
pop
mov
sub
icebp
repz
or
xor
sahf
cs
cwtl
test
push
adc
sub
aam
hlt
rclb
add
xchg
int
shl
ja
pop
rorb
fdivrs
cwtl
js
and
add
lahf
sbb
or
ret
int
addb
dec
jo
data16
insb
cmp
mov
int3
pop
sbbb
add
sub
sub
adc
shrl
shlb
xchg
sahf
mov
mov
push
mov
sbb
mov
leave
fisubl
dec
adc
and
cwtl
lret
loope
scas
dec
inc
xchg
ret
cs
cmp
sub
mov
adcl
movsb
stos
loope
aam
xchg
imul
ss
test
pop
cmp
scas
fcomps
int
fistpl
loopne
lds
xor
cmc
dec
popa
stos
xor
sbb
fwait
cmp
xchg
ficoms
jne
dec
sarl
in
lcall
mov
sahf
add
cmp
mov
lds
mov
jo
pop
ljmp
dec
outsl
cmp
push
loop
xor
xchg
roll
mov
dec
xor
jle
js
test
push
jbe
fdiv
jnp
mov
pop
dec
or
cmpsl
lret
iret
adc
cli
ficoml
arpl
or
jp
xchg
gs
dec
jne
mov
loopne
cli
push
xor
outsl
xor
push
mov
dec
mov
push
lock
stos
pop
jno
cmp
cwtl
insl
xor
push
adc
jmp
cmp
in
pop
inc
jnp
xor
mov
fisubs
jb
in
pop
cmp
push
sbb
stos
pop
adc
push
sbb
adc
inc
stos
cld
int3
sub
lock
cmp
in
out
mov
std
popa
dec
mov
mov
pop
sub
daa
jno
cmpsl
jl
sbb
sbb
push
cmpsb
mov
dec
push
lea
dec
stos
popa
mov
mov
dec
cltd
and
xor
shrb
mov
dec
jne
sub
jo
enter
pop
in
dec
sbb
sti
dec
cmp
or
loopne
mov
cmpb
aam
mov
loope
dec
adc
cmp
push
jl
xor
xor
push
mov
adc
mov
push
stos
pop
dec
popa
popf
pop
mov
jne
xor
imul
addr16
shlb
or
ret
sahf
pop
xor
orl
jns
pop
scas
xchg
mov
leave
xchg
mov
in
and
and
sbb
loope
fdiv
push
arpl
mov
add
and
pop
fdivrp
or
sub
cwtl
push
push
xchg
push
lods
into
xchg
push
sub
jl
or
dec
or
jmp
xchg
xchg
push
xor
pop
mov
mov
mov
inc
mov
cmp
inc
fcmovb
mov
sbb
rcrl
stos
cltd
jne
push
je
add
cmp
xchg
jns
push
adc
es
jo
js
mov
mov
stc
jp
lods
jns
sbb
fdiv
add
into
mov
pop
sti
adc
adc
das
pop
and
lea
lods
adc
pushf
pop
lock
dec
adc
dec
hlt
mov
jp
add
gs
cmp
mov
add
enter
and
loop
mov
in
lcall
add
xchg
xchg
hlt
mov
jmp
shrb
aam
out
stos
push
inc
or
dec
incl
sahf
test
int3
inc
daa
or
fisubs
mov
cmpsl
mov
gs
or
mov
es
lods
inc
loope
out
pop
loope
pop
push
ja
pushf
imul
sub
pushf
loopne
cld
xchg
xchg
jo
add
lcall
or
pop
adc
enter
push
jo
mov
les
daa
mov
cltd
pop
fisttpll
mov
cli
pop
push
lcall
cmpsl
push
sahf
jl
pop
mov
jmp
push
loope
ljmp
test
inc
adc
loopne
xchg
jo
bound
cmp
insb
fnstsw
pushf
xchg
fs
cmp
add
stos
adc
sbb
mov
pop
ret
xor
jbe
lods
push
int3
js
sub
xchg
adc
mov
jb
xchg
or
sbb
in
cli
lcall
jp
mov
jae
je
jb
or
outsb
inc
arpl
add
daa
dec
push
lds
fsubs
fstps
pop
fs
bound
dec
pop
fistps
push
sub
popa
xchg
or
adc
cmpsb
call
and
inc
jb
push
movsb
mov
mov
and
mov
imul
enter
xchg
stos
adc
or
pusha
sbb
jo
push
faddl
cmp
fmull
sahf
adc
subl
jmp
mov
mov
lcall
cwtl
xchg
push
and
add
fildll
iret
mov
insb
sub
lretw
fs
push
jecxz
popf
fsts
cmp
movsb
push
add
bnd
test
dec
dec
pusha
mov
lcall
stc
les
jnp
in
test
push
xchg
pop
mov
sub
push
addr16
mov
pop
cmpb
loop
insb
inc
call
mov
lock
cmp
inc
jp
js
ficompl
push
outsl
xor
xchg
mov
out
and
insl
mov
push
dec
sbb
lahf
scas
in
jae
andl
insl
push
fsubl
mov
aam
sti
inc
pusha
jns
flds
pop
push
into
imul
sbb
decb
sbbb
cmpsb
lret
xor
sbb
dec
xchg
dec
call
cmc
cwtl
mov
imul
mov
cmp
xchg
xchg
jo
movsb
scas
mov
in
insl
mov
pop
sbb
xor
mov
daa
mov
test
fsubrs
push
mov
pusha
jne
cmpsb
ret
cmp
aas
sbb
gs
inc
jl
setne
jae
pop
fcoml
cmp
cli
scas
rcll
mov
cmp
loopne
sahf
jno
les
add
and
push
mov
jns
movsl
pushl
aaa
sub
aad
inc
mov
add
int
lcall
clc
inc
jae
movsl
cmp
push
mov
mov
sub
pop
pop
andl
bound
pop
cmpsl
jo
pop
sub
sub
xchg
clc
cli
test
adc
shr
insb
icebp
inc
loop
jae
xchg
xor
cmp
mov
dec
xor
mov
sbb
push
pop
sbb
xchg
insb
add
pop
push
inc
pop
jbe
fldenv
ja
sbb
inc
xor
mov
add
rcrb
scas
mov
pushw
rcrl
jle
orps
jnp
testb
stos
mov
std
inc
cmp
jae
and
inc
cmpsl
in
or
lock
notl
ret
adc
clc
neg
and
inc
dec
mov
lods
pop
push
xchg
mov
imul
xor
hlt
xor
mov
cmpsb
fnsave
int
repz
repz
inc
test
rcrl
ficompl
je
dec
lcall
cmp
push
xchg
pop
adc
cmp
xor
dec
test
shll
xchg
xchg
shll
arpl
lea
adc
cmpb
mov
mov
jbe
xchg
mov
pop
fcompl
or
jb
dec
scas
mov
and
popa
mov
popa
mov
mov
jmp
dec
data16
clc
push
add
test
jb
adc
jo
int
int3
dec
mov
sub
xor
pusha
add
ja
add
xor
fbstp
icebp
pop
mov
loopne
pop
mov
sarb
cmp
cmc
imul
cmpsb
mov
push
mov
mov
movsb
push
mov
xchg
push
or
cmp
loop
xor
pop
popa
cmp
shrl
push
mov
inc
les
cmp
fstl
xor
fistps
push
mov
cmp
xorl
addr16
mov
cmpsb
xor
mov
xchg
cmp
dec
ss
pop
adc
shlb
imul
shll
add
jg
push
mov
hlt
pop
mov
into
imul
ret
movsb
cs
push
jnp
arpl
mov
jo
xchg
xchg
mov
push
mov
aad
jl
and
adc
movsb
mov
cmpsl
cmp
jg
cmp
psrad
inc
adc
scas
icebp
mov
mov
cmp
addl
js
sub
add
and
cmp
popa
mov
mov
popf
cwtl
push
gs
lret
js
jne
pushl
sbbl
jno
inc
js
mov
dec
fistpl
cld
xchg
cmp
pop
add
imul
les
push
xor
movsb
js
or
cmp
pop
int
pop
sbb
jo
loop
lret
into
nop
rcrl
sub
test
fisttpl
loop
xor
mov
mov
lret
dec
pop
fistps
xchg
and
xlat
pop
jmp
ficompl
mov
andl
movsl
jae
mov
jno
mov
cmp
pop
das
adc
cmp
pop
inc
mov
push
jo
movsb
loop
addr16
dec
or
push
lds
adc
cmp
test
outsb
or
dec
cld
pusha
push
lds
xor
pushf
push
and
xchg
out
mov
dec
cmc
push
pop
push
xchg
lods
scas
testl
mov
jl
lock
xchg
mov
rep
jbe
gs
jns
cmp
dec
dec
hlt
scas
jo
and
jle
xchg
add
dec
daa
inc
adc
movsb
inc
js
addr16
mov
cmp
outsb
aas
mov
jno
and
adc
jns
pop
jl
repnz
xor
xor
subl
push
ss
mov
jecxz
adc
stc
notl
push
rcrl
sarl
test
xor
and
or
cmp
jge
xor
push
rorb
xchg
fnstenv
bound
popa
lds
aas
les
test
add
sti
xor
pop
cwtl
test
cltd
lret
in
sarb
movsl
rcrl
mov
mov
cmpsl
rorb
pop
cmp
js
les
inc
fildll
insl
cmp
out
jmp
test
adc
sub
daa
outsb
or
fsubs
out
fdiv
sysexit
pop
inc
xor
jo
xchg
js
cltd
jo
pop
pop
ror
imul
mov
outsl
arpl
stos
mov
dec
and
push
sti
call
pop
pop
aaa
lcall
jg
inc
cmc
cmp
pop
lods
pop
cmp
lea
jno
mov
rclb
enter
je
jns
js
jmp
mov
dec
mov
cmp
xor
adc
and
fldenv
stc
hlt
ds
jmp
pop
sahf
cwtl
lds
xor
and
mov
mov
repz
add
jns
test
mov
push
pop
icebp
cmc
sarb
mov
jbe
test
test
sahf
add
xchg
pop
rcrb
sbbl
mov
movb
cmp
add
inc
jns
dec
cmp
daa
push
outsl
loop
mov
pop
in
pop
loop
loopne
nop
loopne
sahf
adc
test
je
xor
into
test
lock
fnstenv
mov
cmp
fwait
xchg
aas
sub
data16
rep
test
std
fnstsw
ror
fnstcw
jg
data16
sarb
arpl
ja
xor
mov
sbb
jnp
lds
enter
mov
cmc
shlb
pop
loopne
outsl
fsts
jo
loopne
jge
push
jo
fcompl
pop
jl
xchg
fadds
mov
mov
push
xchg
push
loop
jge
mov
pop
sbb
and
mov
sub
mov
adc
xchg
push
jnp
pop
fdivrs
push
in
jg
add
ja
cmpsl
mov
je
ds
and
push
xlat
mov
pop
into
xchg
jge
push
jno
dec
jl
pushf
pop
data16
sti
mov
jg
dec
cld
pop
mov
int3
and
call
and
hlt
filds
push
pop
je
scas
and
mov
inc
es
pop
dec
sub
cmp
xor
mov
negl
mov
int
mov
xchg
push
pushf
push
ret
gs
push
ror
sahf
pop
cmp
fcomps
mov
jbe
lods
cmp
je
jo
xlat
mov
notb
call
pop
adcb
push
jle
inc
cmp
pop
dec
pop
fistpl
lods
imul
stos
xchg
pop
mov
insl
jg
gs
and
fnstcw
push
jp
out
push
mov
imul
scas
jne
or
cwtl
xchg
pop
add
in
aaa
and
popf
push
mov
std
mov
pop
pop
out
dec
int
mov
xchg
call
cmp
aam
mov
popf
adc
adc
jbe
pop
xor
shl
add
mov
sub
and
cs
mov
outsl
js
jg
pop
and
call
loop
repnz
jnp
sbbl
andl
fwait
xchg
or
fsub
fisttpll
inc
pop
xchg
jne
scas
dec
jle
shlb
aas
mov
fs
lret
xlat
sahf
enter
dec
shlb
inc
out
and
xor
dec
pushf
insb
adc
and
mov
pusha
jae
pop
out
and
es
mov
push
data16
adc
movsl
mov
pop
fwait
loopne
mov
bound
or
fadd
lret
jne,pn
cmp
mov
decl
icebp
inc
dec
in
bound
xchg
mov
cmp
loopne
lds
cwtl
add
vcvtpd2psx
jb
dec
fistps
jp
aas
clc
cmpsl
mov
adc
inc
cmpsl
imul
adc
dec
pop
jo
ja
mov
enter
inc
stos
mov
movsb
add
lret
out
lret
int
sub
dec
jo
je
jae
lahf
movsb
filds
jl
dec
test
xchg
cmc
imul
pop
sub
add
xchg
inc
jo
js
and
loopne
pop
dec
cmp
sbbb
movsb
nop
pop
push
sub
ror
out
ror
pop
shrb
daa
xor
pushf
outsb
sub
mov
scas
cmpb
add
and
cmp
scas
dec
jns
insb
adc
mov
push
inc
and
lods
inc
or
xchg
pushf
loope
lret
xchg
fidivs
mul
push
mov
mov
fsubr
jmp
aad
cmpsb
fcoml
bnd
xchg
aas
das
dec
cld
addr16
cmp
push
fidivrs
outsl
repnz
xchg
jne
div
cmpsb
cmp
lret
xor
movsb
insb
aam
jg
xchg
pop
pop
fcmovnbe
or
lahf
fiaddl
cmp
inc
ds
gs
test
adc
and
lret
add
sbb
fstpt
dec
loop
bnd
dec
push
cmp
rcll
xchg
or
movsb
jo
incl
push
aam
cwtl
dec
sahf
les
mov
or
test
adc
adc
push
pop
dec
jnp,pn
stc
push
cld
cmp
push
pop
lcall
call
bound
sub
pop
and
pop
inc
in
je
rcl
sbb
push
mul
sbb
int3
jnp
mov
mov
cmp
loopne
jne
mov
imul
xchg
mov
addr16
adc
arpl
push
movsb
pusha
outsl
fsubs
fs
loopne
sub
call
add
cmp
pop
jge
iret
xchg
cmp
dec
bnd
xchg
push
or
sbb
mov
out
loopne
push
hlt
cmp
adc
in
dec
xchg
cmp
shr
jnp
and
pop
mov
cmp
push
mov
push
into
loope
lds
mov
fists
clc
push
xchg
fbld
test
pop
movsl
sbbb
mov
mov
mov
icebp
movsl
inc
lods
aad
jo
test
pop
rcrb
loopne
pop
mov
movsb
jae
je
xchg
xchg
sbb
mov
sti
js
les
mov
in
jg
jmp
mov
movsl
aam
mov
jge
mov
cmp
mov
jb
add
jl
stos
and
xchg
cltd
mov
mov
fs
jle
sub
mov
mov
jl
mov
popf
insb
push
and
pop
pop
int
jnp
or
push
fstl
scas
push
or
fstpl
inc
jns
push
dec
fnsave
fcompl
insb
dec
je
cmpsl
or
push
add
test
cwtl
shrb
jne
xlat
std
pop
fildl
and
aas
cli
push
loope
cmp
adc
gs
jne
ss
mov
sbb
decb
fildl
xchg
inc
mov
test
cmpsb
mov
fsubp
lods
out
cmp
push
lods
jp
lret
loope
addl
sbb
inc
xchg
lcall
popa
jne
lds
and
mov
call
xchg
sbb
mov
rcr
sbb
inc
into
dec
popa
loopne
int
sub
or
iret
cmp
ss
push
push
cmp
mull
pop
cltd
push
dec
adc
lahf
stos
call
mov
lods
adc
adc
jnp
outsl
or
add
xor
xchg
enter
pop
scas
enter
js
jno
int
test
aam
cmp
clc
mov
pop
add
inc
cltd
fs
adc
dec
mov
negl
pop
mov
cmpb
adcb
xorb
outsl
loop
cmpsb
sbb
mov
lret
mov
loopne
mov
sbbl
js
push
and
pop
lods
cmp
xchg
in
push
adc
xchg
rorl
inc
mov
add
popa
sarl
cmpsb
or
sarb
jne
inc
movsb
aad
xchg
pop
dec
jo
leave
adc
push
repz
push
jmp
push
lcall
adc
add
xchg
add
xchg
loopne
mov
jae
inc
in
inc
pop
sub
and
xchg
xor
jnp
mov
ss
xlat
ret
in
adc
je
lock
ja
dec
dec
daa
and
push
cmp
stos
dec
lret
arpl
pop
cmp
aas
flds
xor
fstl
mov
aam
stos
pop
int
or
sbb
push
jbe
cmp
mov
jae
push
and
xor
jae
imul
jo
inc
push
mov
movsl
add
shl
dec
jbe
js
ja
lds
andb
mov
lea
jns
fwait
ss
fcompl
scas
popa
xchg
mov
sarl
sub
and
imull
push
cmp
pop
ret
test
jno
cmp
sbb
arpl
scas
xor
jbe
out
add
arpl
push
fadd
ljmp
das
mov
outsb
ficompl
lds
clc
cmp
mov
mov
cmp
mov
xor
pop
push
inc
xchg
push
lds
add
jle
incl
sbb
push
cmp
loop
orb
inc
mov
incl
jno
inc
lcall
mov
std
insb
enter
scas
aam
xor
ficompl
clc
loope
pop
pop
fstp
stc
sti
xchg
mov
cmp
push
xchg
movsl
test
lahf
or
je
test
jno
cmp
jp
sar
jle
rclb
xchg
push
jge
lahf
shll
cmp
jno
fwait
push
outsb
nop
xor
push
cmp
pop
cltd
push
cmp
lret
in
jge
xchg
repz
sub
adcb
push
xorb
xor
lock
dec
cltd
or
inc
test
pop
push
jnp
mov
ficoml
pop
and
icebp
hlt
rcl
fisubl
mov
push
fs
aad
push
dec
insb
pop
loopne
arpl
xchg
sub
dec
inc
mov
stos
push
je
xor
sub
mov
sbb
fmuls
or
sub
xor
jg
pop
mov
xchg
adc
pusha
movsb
jge
push
jge
xlat
mov
js
pop
and
scas
mov
fstl
cmp
in
or
pop
mov
cmp
sarl
or
popf
pop
test
cmp
jle
ffreep
bound
fcompl
dec
pop
cmp
jl
shr
xor
or
subl
mov
ds
pop
shlb
xlat
iret
mov
or
mov
xchg
xor
fs
xchg
loopne
add
pop
add
cli
xor
sbb
mov
push
data16
arpl
cs
dec
int3
mov
loopne
pop
fimull
fisttpl
cltd
jp
pop
imul
int3
jo
shll
dec
enter
mov
push
xchg
dec
loop
mov
insl
jle
fnstcw
sub
add
rcl
xchg
outsl
sti
mov
into
mov
into
ja
jge
mov
ret
and
adc
add
push
rcll
fs
jecxz
cmp
add
in
aad
mov
and
cli
mov
fisttpl
or
add
ror
aad
mov
sbb
cmp
inc
mov
mov
aaa
shll
xchg
xchg
and
lods
lock
xor
shl
subb
lods
jne,pn
sub
xchg
es
aam
aas
incb
and
dec
fnstcw
scas
xorl
push
mov
push
mov
cs
loop
or
movsl
pop
cmpsl
shrb
and
sbb
jg
mov
out
int3
mov
mov
xchg
mov
and
mov
lret
adc
or
mov
xchg
fnstenv
pop
add
inc
jnp
fwait
test
fadds
out
aad
inc
dec
repnz
arpl
outsb
fadds
cmovp
mov
in
cltd
dec
fnstcw
jmp
cmp
jne
mov
xchg
adc
jae
pop
addb
mov
popa
cmp
xor
adc
and
bound
loopne
ficompl
push
leave
idivl
arpl
frstor
inc
or
sbb
cmp
test
rolb
add
andb
cmp
jg
adcl
ja
ss
pop
lods
cmp
fcoms
cmp
push
sbb
icebp
ja
ja
adc
mov
popa
insl
jno
push
jb
pop
outsb
mov
insl
cmpb
mov
pop
loope
lods
cmp
popa
jns
sbb
bound
scas
gs
sbb
sbb
cmp
inc
test
sub
xor
gs
dec
pop
xchg
mov
mov
cmp
rorl
jl
gs
arpl
cmpsb
bound
pop
push
xchg
daa
fmuls
fs
arpl
sti
pushf
shrl
jge
int3
push
add
pop
pop
ret
mov
xlat
add
out
mov
loope
dec
sbb
negb
pop
mov
in
jecxz
lods
xchg
fnsave
pop
iret
sbb
dec
pushf
lock
cltd
mov
fisubl
xlat
inc
fstps
shll
lahf
mov
lds
push
push
jge
es
pop
jbe
push
orw
mov
arpl
mov
pop
sarb
scas
push
add
cmp
adc
movsl
mov
ds
or
mov
cs
les
inc
mov
arpl
push
xchg
and
pushf
mov
ss
cli
adc
add
aam
cmp
cmp
mov
cmpsb
or
mov
pop
mov
enter
push
ja
mov
pop
jno
in
mov
mov
aad
jg
popa
sahf
push
inc
cmp
enter
add
mov
mov
div
add
cltd
lahf
jnp
in
push
xchg
jbe
ss
dec
ss
cltd
add
stos
mov
cltd
lods
push
pushf
pushf
test
je
lcall
xchg
mov
into
popf
push
popf
cmp
ja
cmp
jecxz
int3
xor
stos
scas
paddd
ret
fwait
mov
pop
mov
in
dec
sub
faddl
hlt
jp
cwtl
scas
ret
adc
in
cmp
mulb
xchg
jno
pop
popf
mov
ret
sarb
pop
loope
scas
push
xor
push
fcmovbe
call
pop
push
mov
insb
sbbl
js
fiaddl
shl
cmc
pop
xchg
push
lret
pop
ljmp
xlat
data16
out
pop
fsubrs
pop
cmp
les
aam
cli
inc
push
arpl
jns
cltd
sub
sub
fldcw
lods
imul
push
xor
lahf
dec
and
inc
sti
popa
test
les
lcall
into
test
pop
shr
dec
or
lds
add
daa
cmp
je
loope
int3
mov
int
fstpl
inc
fistl
in
int3
push
aam
dec
add
inc
sar
dec
mov
out
jae
aam
fisubl
shll
divl
scas
add
adcl
cltd
enter
fcmovnbe
dec
in
adc
push
push
push
push
out
fstps
movsl
jmp
bound
xchg
push
jne
xor
add
jne
fst
adc
popf
repnz
bound
popa
jnp
mov
lods
int3
sub
repnz
cmp
jmp
mov
inc
adcb
cmp
mov
dec
loop
test
cli
mov
mov
jae
fisubrl
pop
jb
clc
shl
repz
adc
addr16
adc
pop
jns
mov
push
fnstenv
cmp
ret
jg
sbb
adc
fs
inc
xchg
xchg
dec
xchg
inc
test
hlt
icebp
shlb
xchg
rcrl
cld
leave
data16
sbb
cmp
mov
ja
jl
bound
les
imul
mov
addr16
cmp
inc
cltd
lods
pop
fcoms
sbb
js
enter
mov
loop
sub
mov
or
mov
jns
push
ffree
cmp
insl
and
pop
xchg
pop
push
cmp
mov
push
cmpsl
repz
mov
jbe
loopew
mov
mov
jge
bnd
push
pop
rorl
out
jle
fwait
xor
cltd
xor
adc
fld
and
das
movsl
push
push
aam
hlt
sbb
mov
xor
mov
push
add
cmc
cwtl
jecxz
icebp
mov
push
xor
lcall
in
jl
cmp
in
out
inc
outsl
fcompl
fwait
out
xor
cs
shll
popa
xlat
inc
push
into
sub
loop
dec
cltd
adc
push
in
xor
ret
add
fs
jno
add
ret
es
ficompl
ss
gs
fldenv
dec
adcl
sbb
fstps
and
sbb
and
push
xor
stos
fstp
xor
repz
repnz
mov
popf
push
fsub
outsb
dec
or
xor
lahf
xchg
out
bound
sbb
in
dec
mov
inc
stc
mov
js
or
movsb
cs
and
xchg
and
jg
mov
jmp
int3
enter
or
das
outsb
xlat
cld
es
loop
pop
mov
les
fsubs
outsl
fldenv
in
fmul
iret
inc
sahf
adc
xchg
push
mov
aaa
lahf
dec
rcl
lods
xchg
aas
push
insb
xchg
push
pop
enter
nop
test
push
push
cmpl
mov
pop
popf
fs
pushl
shll
andl
bound
loopne
jb
adc
aam
int3
test
mov
adc
xor
cmp
inc
lods
push
mov
jno
mov
fdivl
pusha
rorl
lcall
ds
inc
mov
ljmp
mov
pop
in
dec
lock
xchg
dec
push
scas
inc
das
out
bound
lret
dec
jns
jno
inc
mov
adc
ss
insw
inc
sarb
daa
nop
scas
jo
inc
je
xchg
notb
dec
mov
into
push
cmp
xor
sarl
push
arpl
adc
push
xlat
ficoml
stos
mov
aaa
xchg
xor
mov
loopne
and
cmp
inc
xlat
cmpsb
jo
jmp
ja
or
lret
rcr
ror
fldl
cld
xchg
rorb
mov
jo
test
push
shr
inc
push
into
push
pop
dec
push
movsb
arpl
arpl
imul
sbb
and
jne
orb
xchg
and
xor
push
insl
pop
dec
sub
mov
test
dec
mov
arpl
push
push
sarl
mov
mov
out
adc
pop
aad
cmp
xchg
jne
push
dec
sbb
mov
or
rcr
sub
out
subb
addr16
inc
or
fmul
adcl
lea
nop
daa
ja
daa
mov
sub
lds
xchg
mov
test
cli
rol
xchg
adc
mov
or
js
add
push
sbb
in
cmpsb
fwait
mov
push
das
imul
fs
dec
xorb
jg
adc
jp
fs
aaa
pop
mov
and
ja
insl
js
pop
adc
mov
or
dec
das
mov
movsb
aaa
int
mov
pop
loopne
std
push
jno
xor
push
lds
les
lock
fwait
add
push
push
lahf
dec
sbbb
add
jns
push
pop
pop
cltd
jne
push
jg
xchg
xchg
mov
gs
inc
xchg
push
popa
vfmsub132ss
pop
and
mov
jne
lcall
pop
xor
adc
cmc
outsb
mov
subb
movsb
mov
inc
in
repnz
cwtl
jae
push
mov
test
push
mov
jbe
push
test
daa
jne
inc
and
inc
iret
push
dec
stos
sub
sub
pandn
inc
dec
dec
psubd
push
stos
dec
aam
pop
pop
fiadds
cmp
imulb
xor
dec
lcall
jo
les
inc
mov
into
dec
hlt
push
stos
xor
mov
pop
cmp
cwtl
mov
sbb
int
jnp
adc
mov
push
popf
stos
xchg
ljmp
aam
imul
cmc
addr16
shlb
sub
mov
jnp
pop
cmp
mov
movsl
mov
xchg
sbb
adc
cmp
mov
dec
add
imul
add
stos
pop
xor
rcl
and
out
mov
add
push
imul
sbb
jo
and
aam
inc
cmp
jne
xlat
cmp
int
jo
bound
pop
ret
sahf
daa
insl
int3
aaa
mov
cmp
adc
sahf
pop
adc
inc
lea
mov
adc
addb
push
mov
cs
xchg
lock
and
jo
rcrb
sub
nop
sub
mov
loop
jns
pop
fdivrl
xchg
arpl
xor
adc
into
jo
test
je
mov
andl
push
out
adc
dec
jns
popa
mov
lahf
and
das
jmp
insl
pop
rclb
dec
mov
iret
js
and
cmp
fld
nop
adc
mov
enter
or
push
fs
mov
hlt
movsb
xor
push
mov
xchg
mov
cmp
sub
cmp
and
fcompl
in
xor
xor
pop
and
xor
movsb
dec
call
mov
inc
ljmp
xor
jbe
push
jnp
data16
lods
push
hlt
mov
clc
test
push
and
push
lcall
jo
lret
mov
push
xchg
inc
lods
fs
inc
rorb
data16
mov
movsb
ja
insl
in
popf
ss
push
fwait
lods
inc
xor
adc
enter
xchg
rcrl
xor
rcrb
fdivrl
ret
adc
fmull
mov
add
pop
mov
cmp
xchg
dec
inc
push
imul
xchg
mov
sub
fs
in
aas
xorl
or
push
in
sbb
adc
jecxz
outsb
pushf
cmp
sub
lods
and
sub
cld
pop
lret
insb
dec
jo
xchg
and
cmp
les
push
jo
jmp
das
imul
sub
add
push
pop
jno
xchg
fldt
jo
dec
mov
mov
aad
xor
pop
add
pop
pop
adc
mov
mov
xchg
lret
scas
enter
fldenv
cli
mov
insl
inc
and
sbb
fiadds
fstl
push
in
test
fwait
enter
fisubl
xor
adc
xor
leave
jge
stos
and
sbb
insb
cwtl
fs
fxch
rorb
les
push
addr16
imul
jnp
arpl
sbbl
adc
cwtl
incl
mov
in
xchg
pop
fsubs
adc
mov
daa
fcmovne
hlt
mov
hlt
mov
pop
and
push
xchg
bound
xchg
int3
insb
cmp
loopne
mov
in
dec
pusha
lahf
fstpl
mov
call
test
arpl
popf
pop
xchg
data16
pop
xchg
pop
jb
scas
mov
pop
test
aam
mov
dec
lcall
dec
imul
push
sbb
rcrl
jo
pop
xchg
hlt
and
pop
lods
mov
inc
sbb
cmp
push
pop
pop
mov
scas
pusha
sbb
pop
pavgw
sub
dec
dec
fwait
imul
mov
cmp
or
shll
push
adc
cmpsb
mov
sub
ret
mov
and
mov
clc
xor
arpl
xor
sub
je
popf
push
xor
jno
sbb
pop
xchg
pop
pop
and
lret
add
ffree
or
scas
out
ret
mov
push
dec
pop
xchg
jo
lods
cmpl
pop
jnp
pop
xor
mov
in
enter
sbb
shll
call
inc
push
mov
jne
pop
test
adcl
cld
xchg
push
iret
push
fisubs
scas
ficomps
nop
sar
fisubrl
and
pop
icebp
xchg
pusha
cmpsl
fisttpl
xor
or
cltd
icebp
fcoml
dec
sub
pop
test
dec
icebp
popa
aad
mov
and
cmovs
push
lcall
sbbl
ret
pop
cmp
mov
mov
pop
push
test
test
or
push
mov
cmp
push
icebp
scas
ja
data16
mov
icebp
imul
je
call
imul
divl
int
sbb
fnstenv
jb
xor
js
and
mov
pushf
cwtl
jnp
jmp
sbb
mov
les
cltd
pop
and
sbb
jo
jne
leave
roll
fcoms
stos
gs
hlt
xchg
push
sarb
iret
fbld
cmp
push
pop
fstpl
jo
stos
bound
insl
mov
outsl
inc
lock
mov
insb
push
loope
pop
or
bound
addl
mov
sti
popa
mov
jae
sbb
adc
xor
mov
fisttpll
mov
sub
xchg
pop
test
dec
sbb
je
push
cmp
adc
adc
in
xlat
jl
outsb
mov
mov
jmp
dec
leave
fwait
or
roll
lret
pop
mov
cmp
js
sbb
jne
scas
lahf
popf
xchg
testl
test
in
cpuid
lock
stos
sub
xchg
aad
xchg
and
mov
adcl
adcl
popf
bound
xchg
or
mov
insb
dec
negl
xor
push
add
xor
push
notb
data16
xchg
jecxz
sub
sbb
or
xchg
adc
js
cltd
gs
mov
sub
adc
insl
addr16
and
push
adc
addr16
sbb
pop
aad
mov
in
scas
mov
fucomp
push
push
mov
lds
mov
imul
cmpl
adc
in
mov
xchg
adc
scas
pop
pop
out
cmc
ja
adc
and
mov
jo
popa
jge
dec
push
sahf
mov
xor
pop
out
incb
sbb
push
pushf
outsb
jle
shl
push
je
jle
cmp
fsubs
or
jg
fsubs
aas
and
push
jnp
int3
nop
fcoml
pop
dec
sbb
pop
hlt
sbb
call
test
pop
jae
into
das
out
cmp
fldenv
pushl
cmp
jno
mov
pop
sub
push
mov
cmpl
cmp
jp
adc
test
xchg
push
subl
jns
lahf
popf
lcall
xlat
insb
inc
movl
mov
push
cmpb
xchg
and
pop
dec
leave
adc
shrb
or
xor
in
mov
loopne
popf
mov
imul
scas
js
cmp
jl
mov
cmpsl
repnz
repnz
inc
mov
inc
mov
pop
jl
arpl
or
loop
add
fldl
test
aaa
pop
cmp
insb
cmp
cmp
fistpl
and
fidivs
fs
cmp
test
mov
imul
ss
imul
les
xchg
stc
jmp
popaw
cwtl
pop
push
xchg
mov
jno
cmc
leave
flds
jp
ja
enter
in
jo
js
mov
lahf
xor
jp,pn
addr16
mov
sub
push
cmpsb
inc
imul
lock
loopne
mov
imul
fidivs
fldt
and
and
inc
sti
or
sahf
mov
mov
arpl
ss
mov
outsb
sub
sub
jbe
das
arpl
lea
mov
adc
xchg
mov
out
mov
xchg
ffree
pop
cmp
std
flds
mov
cld
lea
mov
mov
lds
dec
loop
and
fld
push
lds
xor
mov
push
mov
les
inc
pop
popa
scas
pop
sbb
pop
es
int
push
dec
mov
jae
js
and
add
xchg
cwtl
jge
negb
fs
jl
cmpsb
mov
leave
mov
or
xorb
mov
xchg
cld
and
jnp
aas
js
in
hlt
cli
mov
jo
orl
mov
out
fstpt
in
xchg
or
add
jg
push
mov
cmp
xchg
push
xor
aam
pop
je
outsb
inc
stos
and
test
xlat
push
mov
test
push
cmp
jmp
or
les
lea
mov
mov
aam
pop
jge
popf
pop
std
mov
out
push
jb
in
dec
fld
js
rorb
call
out
repz
push
in
adcl
push
inc
ds
loope
pop
std
adc
loope
inc
push
xchg
sbb
xchg
ficoms
js
pop
jns
push
pop
idivb
cltd
jno
xchg
gs
adc
dec
mov
mov
jae
push
adc
fistpl
push
out
cmp
sbb
sbb
repz
sub
popa
jo
fldt
sbb
sbb
inc
sub
cltd
mov
dec
pop
adc
stos
stos
enter
add
cmp
scas
jno
lahf
and
jmp
mov
and
insl
cmp
icebp
outsl
add
sub
stos
xor
cmc
jns
subl
int
jnp
push
fs
mov
adc
lock
add
push
insb
sar
xchg
clc
sbb
dec
add
pop
cmp
or
fs
bound
scas
adc
movsl
iret
leave
mov
arpl
in
jbe
call
in
add
bound
mov
out
cmp
sti
push
lret
inc
fidivrs
push
fstps
sbb
mov
mov
outsb
mov
int
pop
xchg
xchg
jle
popf
or
add
pusha
out
jnp
shll
push
inc
movsl
adc
xchg
xchg
fistl
pop
xor
sbb
addr16
int3
inc
bound
inc
sub
in
cmpsb
push
sbb
mov
repz
and
cltd
cmpsl
adc
mov
push
xor
scas
mov
mov
int
mov
daa
inc
push
addr16
pop
inc
les
lret
dec
unpcklps
andl
outsl
ret
mov
pop
push
int
mov
xchg
pop
pop
lock
sbb
jb
in
fwait
jg
jecxz
lea
je
bound
xor
xchg
cmp
icebp
addl
jle
sbb
jnp
flds
into
inc
stos
fiadds
pop
jmp
test
pop
out
loop
push
ficoml
loopne
js
loopne
movsl
cwtl
in
movsb
add
sub
push
enter
pop
arpl
ljmp
out
fs
lret
arpl
push
dec
fdivs
jo
je
adc
dec
xorb
cmp
cli
loopne
mov
test
cmp
hlt
imul
pop
loope
xor
lods
or
out
lea
jmp
mov
add
pop
pop
mov
inc
pop
sbb
in
cmpsb
les
pop
and
loopne
test
jnp
ss
cmp
or
xchg
push
fwait
lcall
inc
movsbl
sub
scas
test
imul
inc
clc
gs
pop
sahf
adc
rol
pop
mov
neg
cmp
jnp
dec
cmp
push
movsl
dec
loope
xchg
mov
cld
xchg
pushf
lods
loope
xor
outsb
mov
enter
inc
cmp
push
rcll
cmp
popf
pop
rol
data16
int
jne
push
inc
cmp
fimull
add
ljmp
cmovge
call
xchg
out
mov
popa
sbb
add
test
imul
dec
xor
fstp
test
jnp
jb
push
jmp
inc
push
inc
ljmp
cmp
imul
cmp
mov
inc
xor
mov
push
push
cmpsb
fwait
cmp
adc
ljmp
sbbb
lds
sbb
xor
pop
xor
clc
repnz
leave
sbb
adc
imul
sti
jo
fadd
jecxz
mov
sbbl
hlt
push
repz
sbb
mov
sub
xor
push
aad
inc
insb
xor
mov
cmc
decb
addr16
pop
sub
sbb
fstps
sub
or
loop
xchg
pushf
jno
jecxz
gs
jb
jb
ret
sbb
pop
lds
pop
xchg
and
xor
mov
sub
push
subb
stc
lods
adc
mov
int3
je
cmpsl
mov
dec
fdivrs
pop
bound
and
add
outsb
sbb
scas
xchg
inc
js
mov
ja
xchg
pop
test
ja
inc
and
mov
jne
push
leave
adc
sbb
outsl
cmp
lret
es
sahf
mov
aaa
andl
push
aaa
iret
pop
loope
shlb
int
inc
cwtl
popf
cltd
pushl
fistpll
mov
adc
loope
or
add
or
add
mov
inc
adc
lds
jo
mov
test
fcomps
cmp
mov
bound
cmp
flds
aaa
idiv
or
push
cmp
nop
pop
jns
js
mov
cmpl
dec
lds
dec
mov
imul
int3
xchg
shlb
push
scas
mov
stos
into
pop
negl
add
jae
lods
loopne
lret
out
dec
out
push
xchg
rcll
pusha
ljmp
dec
push
out
mov
push
fmul
aad
loopne
xchg
in
xchg
xchg
insb
add
mov
out
popa
test
sbb
mov
xor
nop
and
sub
loop
movsb
das
addr16
mov
loope
jns
sub
shll
int
push
repz
xchg
jno
in
notl
fdivrl
jne
imul
add
daa
fwait
adc
adcl
pop
xchg
jle
mov
stc
xchg
xor
stc
insl
in
mov
inc
jne
sti
inc
cmpsb
cmp
xor
or
pushl
adc
repz
out
jge
popf
adc
sbb
push
movd
sahf
jo
fcoml
test
and
movsl
jne
sbb
xchg
adc
test
xchg
repz
add
adc
lods
mov
int
cmp
cmpsl
mov
push
adc
pusha
cmp
cmp
shr
into
mov
aas
jno
lods
jbe
sub
mov
jno
pop
in
bnd
cmp
xchg
inc
pop
or
cmp
mov
in
cmc
sbb
mov
or
test
cmpsl
xor
cmpsb
pop
cmp
add
ds
cmpsl
or
insb
imul
jmp
pop
xchg
ja
adc
mov
pusha
addr16
inc
mov
imul
push
dec
sbb
cmpsl
in
int3
fldcw
push
arpl
scas
cmovno
pop
bound
icebp
test
mov
fcomps
mov
and
xor
dec
sbb
dec
inc
ja
adc
push
out
xacquire
xor
xor
adc
popa
xor
arpl
jns
jecxz
jae
and
mov
adc
sub
dec
fs
les
std
dec
mov
lock
dec
repnz
gs
mov
cmp
je
dec
sbb
arpl
stos
mov
push
mov
cmp
loope
pop
rcr
cltd
cmp
lcall
jl
dec
mov
cmpsl
mov
cltd
inc
arpl
lcall
or
inc
ficompl
lahf
iret
test
sub
mov
inc
jo,pt
or
fidivs
sbb
or
fs
mov
cmp
xor
add
push
inc
dec
int
fucomp
aad
imul
pop
mov
xchg
jo
lock
bound
pop
mov
push
cmp
sti
sbb
lock
push
js
icebp
fwait
aaa
dec
je
cli
dec
in
aad
push
call
sbb
test
jae
push
ror
in
arpl
mov
adc
jne
xchg
pop
test
sti
cmp
out
aad
mov
cwtl
mov
sbb
pop
jmp
jbe
jae
fildl
sub
shlb
dec
sti
push
xor
dec
sbb
shlb
inc
int3
push
mov
jno
test
imul
shrl
mov
mov
imul
add
sbb
mov
aas
xor
fisubl
mov
adc
popa
inc
les
mov
sub
mov
jle
pusha
mov
sub
imul
jae
sbb
ljmp
je
push
push
mov
push
inc
fsubrl
movsl
sub
enter
jge
adcb
xor
bound
inc
subl
mov
cmp
jl
cwtl
clc
and
adc
fstps
movsb
cmpsb
jmp
and
and
pop
cvtpi2ps
cmp
mov
pop
sbb
push
movsb
ljmp
push
or
and
mov
lret
mov
das
fisttpl
mov
inc
jle
mov
push
xchg
push
push
push
add
ja
jnp
movsb
imul
loope
ljmp
xor
jns
clc
cwtl
and
cmp
pop
rolb
xchg
xchg
ret
pop
lea
mov
cmp
push
mov
cld
dec
es
adcb
jne
push
movsl
mov
jle
mov
jbe
outsb
mov
addr16
jae
andl
jg
pop
mov
icebp
xchg
xchg
pop
js
xchg
fnstenv
jmp
fs
mov
or
cwtl
mov
mov
int3
pop
pop
lods
pop
jnp
jnp
pop
mov
mov
pop
ja
loope,pn
stos
add
push
mov
movsb
xchg
test
jge
pop
and
fdivl
inc
mov
inc
inc
jbe
js
sbb
push
pop
and
int
pop
in
scas
jbe
leave
out
in
je
repnz
cmc
push
hlt
cmp
push
add
js,pn
pop
test
xchg
outsb
daa
stc
rorl
mov
push
jle
pop
and
test
xchg
in
dec
sti
xor
inc
lods
out
enter
mov
pop
xchg
stc
enter
pushw
jo
pop
xchg
call
add
pop
mov
test
jecxz
test
jg
das
les
scas
mov
arpl
sbb
jns
movsb
mov
lahf
adc
push
cmpb
pop
sub
mov
add
pop
inc
mov
xlat
mov
rclb
jmp
mov
int3
add
movsl
xchg
push
or
xor
xchg
cmpsl
ret
fcompl
das
add
aad
jecxz
push
mov
mov
mov
and
inc
or
aaa
xchg
xrstor
not
insb
or
adc
mov
jnp
xlat
aam
xor
pop
inc
loopne
or
inc
sti
pop
adc
stc
lret
aam
data16
pop
fmull
adc
fwait
js
addb
sarb
xchg
mov
jo
sbb
enter
fwait
insb
push
sub
inc
xchg
add
push
ror
xor
pop
sbbb
inc
or
add
mov
jae
sbbb
and
jns
push
test
call
push
or
dec
movsb
push
dec
fdivl
mov
addr16
je
jo
into
jg
js
xor
loope
cmpsl
mov
fstpl
inc
test
lds
insl
loope
and
fcomp
mov
push
shlb
push
icebp
mov
mov
shll
sti
lret
jp
dec
jo
popa
pop
les
ss
test
cmp
cld
stos
adc
xchg
arpl
clc
xor
fwait
or
into
pop
sbb
jp
push
xorl
lcall
scas
ja
adc
push
push
outsb
add
shrl
pop
mov
add
rolb
out
fistpl
jmp
out
cmp
jno
lahf
push
mov
popa
hlt
dec
and
rclb
iret
inc
xchg
inc
jo
loopne
loope
dec
ds
jb
pop
dec
inc
and
data16
jo
xchg
stos
cmp
cli
and
jl
nop
cmp
ljmp
flds
jo
mov
dec
sbb
cmp
xchg
pop
lahf
jecxz
dec
mov
fs
hlt
pop
dec
pop
insb
mov
push
push
es
jb
loopne
xor
sbb
out
lock
mov
loope
nop
popa
insb
js
dec
hlt
pause
mov
cmp
push
lcall
imul
pop
fs
andb
ret
mov
sbb
add
nop
sub
fwait
push
xlat
fcmovnbe
in
push
pop
inc
int3
push
mov
bound
push
jl
call
jl
es
xchg
fiadds
loope
sbb
xchg
and
das
nop
adc
or
in
movsb
call
mov
scas
jb
call
pop
and
jne
data16
pop
xchg
fxch
loop
outsb
into
ss
mov
cmpsl
push
fildl
mov
lds
ret
sub
push
push
pop
shl
xchg
aaa
cmc
icebp
push
mov
jns
int
lock
fcomp
shrl
cmpsb
push
xor
ror
cmp
pop
add
mov
or
or
fwait
popf
dec
int
and
aaa
or
rep
psadbw
sbb
js
call
out
lock
xchg
dec
cmp
sub
test
push
in
pop
or
push
es
xchg
jp
adc
scas
addr16
sahf
add
xchg
or
sahf
or
mov
push
sbb
sbb
insb
xchg
ret
jmp
cmp
pop
cmp
pop
add
inc
mov
mov
jp
or
out
inc
inc
bswap
in
cmp
cld
pop
into
sbb
fbstp
cmpsl
inc
sub
and
cmp
adc
dec
popa
xor
addr16
push
loope
fs
push
pop
sbb
add
and
shrb
adc
in
rol
dec
add
pop
sub
pusha
sub
adc
movsb
lretw
xor
lds
mov
jl
loope
mov
jmp
popf
adcl
mov
pop
popf
add
push
and
xor
xchg
push
mov
push
iret
jo
in
adc
cmp
or
movsb
test
jp
sub
iret
pop
das
push
inc
ret
imul
pop
sub
jno
jge
push
push
into
xchg
cmp
dec
sub
fstl
cmp
xor
xor
push
pop
pop
mov
out
push
xor
xchg
lods
loope
jo
sbb
int
js
xchg
mov
pop
pop
into
ficoms
lds
add
movsl
push
push
pop
push
test
xor
int3
jb
pop
cmp
vorps
sti
push
sbb
xorb
lock
jne
enter
mov
popf
data16
mov
push
cs
imul
add
movsl
sbbl
ss
fwait
sub
cmp
aas
mov
inc
dec
lcall
cmp
test
andb
aam
adc
aas
stos
adc
ja
fbld
xchg
outsb
pushf
gs
sub
lahf
out
fucomip
mov
xchg
inc
frstor
mov
sbbb
sbb
stos
pop
dec
shrb
pop
data16
int
aad
jbe
adc
xchg
fnstsw
sti
bound
jl
cs
adc
sub
and
or
cmp
xor
xchg
jbe
mov
cli
xor
pop
loopne
jle
sbbl
xchg
mov
ss
xchg
out
dec
mov
shll
testl
lods
dec
js
and
dec
popf
shrb
and
xorb
pop
push
inc
les
cli
fdivr
or
pushf
sti
in
jl
out
adc
iret
mov
rorb
movsl
sahf
out
mov
ja
xchg
mov
int3
pop
cmpsl
popa
ret
push
les
dec
cwtl
lcall
xor
hlt
pop
or
jno
cmp
cmc
sbb
out
add
mov
repnz
repz
mov
mov
push
nop
sahf
es
lock
dec
pop
mov
fstps
dec
iret
mov
jno
lds
push
divb
add
xor
call
fdivrs
sbb
jge
outsb
ror
adc
arpl
and
imul
rorb
cwtl
jne
mov
hlt
pop
mov
mov
and
aas
fcomps
mov
jne
fadd
je
dec
pop
movsl
mov
xor
xor
fstpt
jae
fwait
test
push
pop
push
ljmp
dec
mov
lret
pop
push
cltd
sti
fildll
and
mov
loop
fistpl
test
pop
rolb
cld
cmp
lret
inc
mov
fcmove
testl
fildl
mov
stos
mov
dec
adc
lods
cmc
lds
outsl
mov
pusha
subl
fdivr
pop
das
xchg
cmp
dec
and
sbb
and
jno
gs
test
mov
push
fnstsw
mov
lret
add
fldenv
dec
pop
cmp
fidivrs
out
test
arpl
fildl
push
sub
mov
mov
pop
mov
mov
out
jecxz
stos
xor
dec
cmpsb
or
loope
cmp
movb
xchg
test
addr16
jl
sub
imul
or
mov
lds
mov
mov
repz
mov
jns
mov
inc
rcll
mov
cmp
dec
je
mov
jp
addr16
dec
push
test
out
jg
mov
cmp
add
cmp
lods
shr
stos
repnz
pushf
out
add
mov
jno
fcmovne
iret
pop
loope
xchg
fs
jns
jne
xchg
adc
push
and
xor
push
fstpt
ds
dec
pop
mov
lret
test
and
stos
out
addb
pop
fsubrs
js
sbb
shr
pop
or
adc
js
pop
jl
arpl
pop
arpl
clc
cmp
ficoml
push
inc
xor
mov
xchg
cli
mov
or
lods
ss
imul
mov
int
testl
fst
mov
xchg
imul
es
arpl
inc
xor
dec
xor
pushf
mov
push
pop
mov
cld
aas
sbb
pusha
jecxz
into
sbb
out
lock
xchg
push
scas
popa
adc
push
cmpsl
icebp
push
adc
js
jmp
xlat
or
fistpl
xchg
mov
push
xchg
mov
pusha
std
das
jmp
push
add
subl
mov
ja
je
popf
push
adc
fs
ficoms
or
push
test
xor
xor
das
dec
and
outsb
cli
pusha
mov
ret
mov
in
dec
and
shrl
fwait
mov
mov
inc
dec
pop
nop
adc
repnz
dec
xchg
sbb
pop
fdivs
rclb
push
stc
sub
jmp
loop
push
mov
sysenter
cmp
das
imul
cmp
xor
push
inc
cmpsl
fistpl
cmc
cmp
adc
mov
mov
xchg
add
daa
data16
push
pop
pop
int3
fwait
cmc
sarb
mov
or
loop
movsl
xchg
testl
push
lret
arpl
out
ljmp
repnz
fwait
dec
mov
xchg
xchg
add
inc
sbbl
or
aaa
mov
mov
loope
mov
movsl
xchg
jecxz
sarl
mov
xor
mov
int
mov
arpl
mov
adc
lods
adc
ss
sub
in
adc
pop
or
lock
xchg
popf
inc
cmp
lds
cld
mov
add
imul
jbe
cwtl
hlt
or
enter
in
pop
push
cmp
mov
jp
mov
arpl
ja
xchg
popa
jne
inc
bound
repz
arpl
faddl
mov
gs
lods
add
les
lcall
stos
scas
stos
lods
push
je
mulb
adc
out
sbb
jnp
mov
stc
out
cmpl
lret
bound
push
mov
jb
ficoml
xchg
add
cmp
and
arpl
mov
ljmp
or
lods
stos
cltd
jge
leave
push
or
jne
aam
sbb
ror
mov
shrl
xchg
test
cmpb
mov
pop
mov
dec
cmp
ljmp
call
jo
js
push
andl
mov
movsl
xor
mov
sbb
and
nop
sbb
iret
add
stc
repnz
ja
imul
sarb
fidivs
out
pop
push
push
push
xchg
sub
test
push
addr16
dec
imul
or
sarb
pop
push
test
and
fsubrs
xlat
loop
test
mov
js
fwait
lock
jb
ds
mov
jp
popa
xchg
cmpb
xlat
mov
movntq
out
sbb
icebp
and
loop
daa
sbb
aad
cmp
dec
bound
fmull
in
inc
jno
mov
mov
push
fidivl
xchg
push
xor
fs
push
sbb
subl
jg
xchg
sarl
daa
jno
mov
js
xchg
pop
imul
icebp
lahf
mov
popa
cmp
call
mov
loope
mov
sub
lds
out
mov
addr16
jmp
mov
js
jo
cltd
xchg
push
in
ret
xchg
lahf
mov
divl
pop
mov
dec
push
jmp
push
imul
mov
mov
mov
jns
dec
pusha
mov
jae
leave
aad
adcb
shlb
push
js
xor
adc
mov
fcomip
add
mov
outsb
int3
xlat
icebp
icebp
inc
loop
xchg
jecxz
inc
shll
sbb
dec
xor
push
add
xchg
negb
testl
mov
cmp
mov
xchg
mov
in
sub
pop
fisttps
pop
imul
andl
pop
arpl
insb
add
pop
clc
icebp
shll
xchg
in
add
jno
aad
add
pop
jbe
cltd
call
jo
cmp
xchg
cmp
ja
sbb
jo
clc
cmp
js
aad
into
inc
xchg
cmp
or
nop
lahf
jecxz
ss
mov
in
jo
cmpsb
mov
je
icebp
mov
loopne
inc
mov
add
or
pop
cli
popa
or
mov
popa
test
pop
sub
rclb
gs
adc
jo
push
ljmp
rcrl
pushf
mov
shrb
popf
das
fcompl
mov
pop
scas
cwtl
mov
jns
jne
mov
pop
fnstenv
jo
xchg
ret
sahf
mov
xor
data16
es
cmpl
enter
ja
cmp
popa
mov
lock
jo
js
sbbb
mov
add
xor
and
in
insb
lock
jne
shrl
mov
pop
sahf
je
cwtl
popa
icebp
pop
jb
xchg
outsl
or
adc
cwtl
andb
cwtl
scas
icebp
les
xchg
add
mov
bound
je
xchg
mov
stos
xor
jmp
fs
jo
fcomps
jno
cmp
orl
xchg
je
loopne
add
nop
or
push
test
pop
pop
imul
pushf
xor
pop
add
aaa
call
nop
subb
dec
inc
pushf
cmp
xchg
out
fldcw
test
mov
or
pop
es
push
inc
xchg
mov
dec
cwtl
lds
mov
les
and
add
aad
sbbb
test
mov
xchg
mov
xchg
xor
scas
aad
je
sub
pop
fisubl
mov
test
jb
xchg
mov
push
push
js
pop
nop
jno
enter
push
inc
jb
arpl
mov
and
gs
addr16
and
shrb
or
pop
nop
in
addr16
fbstp
insb
mov
stos
loopne
out
xchg
xorl
jne
or
pop
aad
xorb
shlb
mov
test
test
adc
push
push
adcl
shll
icebp
pop
das
jb
xchg
sub
fsubs
rol
dec
add
fadd
sub
cli
aam
pop
xor
movsl
xor
xchg
adc
call
dec
add
shr
sbb
loop
mov
sbb
icebp
pop
mov
call
add
lds
popf
xchg
lds
fldt
push
out
aam
lahf
mov
add
jno
jb
call
scas
cld
clc
xchg
in
xor
in
movsl
in
rorb
pop
xchg
cmp
adc
mov
xchg
andb
push
dec
clc
adc
loopne
iret
adc
and
fsubl
pop
sub
sub
daa
ret
push
cmp
push
cwtl
jbe
xor
pop
sbb
int
sbb
sbbb
push
jo
xor
insb
nop
dec
xor
xor
je
xchg
inc
ss
push
xor
pop
mov
and
ret
mov
mov
aas
mov
jle
dec
push
mov
jmp
lock
repnz
push
jo
dec
xor
fcomps
and
nop
out
sbb
leave
push
inc
mov
sbb
cmp
test
push
pop
lods
imul
movsb
mov
xchg
imul
loopne
pusha
and
mov
xor
aaa
or
push
ja
loopne
and
dec
push
int
lcall
push
adc
popf
aad
or
mov
adc
push
jo
and
mov
push
jnp
jno
jns
ret
sti
mov
and
mov
push
repz
xchg
bound
inc
repz
bound
imul
jnp
mov
adc
or
push
in
push
and
xlat
fcomip
fildl
mov
daa
fucomip
jl
and
rcl
pushf
sub
push
push
out
loop
pop
add
pusha
mov
fcmovnb
sbb
incl
in
jo
mov
push
dec
add
pop
jle
je
loopne
shl
mov
xor
fistl
cmpb
loopne
icebp
cltd
lock
adc
nop
into
push
mov
loop
add
mov
mov
js
cli
stos
fsubrl
xchg
mov
jp
adc
daa
icebp
xor
andl
pop
mov
lea
inc
mov
mov
jb
leave
xchg
in
aaa
fisubl
les
pop
cmpsl
je
xchg
jno
pop
pop
fcomps
mov
les
movsb
lods
fstps
xrelease
imul
fs
les
pushf
lds
mov
adc
inc
lret
mov
cltd
repz
xchg
and
sub
icebp
jg
pop
mov
fnstenv
enter
inc
orb
int3
icebp
pop
outsl
jb
xchg
xor
sub
popa
and
adc
subb
inc
ret
mov
mov
pop
jo
mov
mov
leave
in
jp
call
mov
je
xchg
cltd
cmpl
loopne
or
pop
lret
negb
jmp
and
add
pop
fs
cmp
jo
xorl
lds
mov
and
mov
rcrb
pushf
lahf
mov
pop
pop
repnz
sahf
xchg
outsb
loopne
lahf
popf
mov
mov
mov
adcb
shll
stos
sbb
inc
push
cmp
xor
cltd
mov
xchg
mov
lds
shlb
mov
mov
les
test
sar
cmp
mov
xor
ret
mov
add
cmp
push
add
dec
scas
cmpsb
test
add
sub
xchg
mov
dec
mov
ret
dec
out
xorl
lcall
mov
mov
mov
mov
push
nop
in
or
sbb
or
scas
mov
ret
popa
rcl
lahf
mov
fistl
call
dec
movsl
jb
std
cmpsb
sbb
xchg
scas
jl
fnstsw
popa
ret
icebp
rcrb
adc
das
mov
pop
test
cmpsb
loopne
popf
jle
adc
jl
inc
cs
sti
mov
add
inc
add
pop
pushf
cmpsb
pop
cld
xchg
addr16
pop
xchg
cmpl
divb
push
inc
mov
aaa
xorb
popf
stos
mov
mov
rcl
mov
mov
inc
sbb
fs
cmp
ret
adc
dec
mov
pop
mov
cltd
divl
adc
and
es
cmp
scas
in
subb
pop
jmp
sub
addb
push
or
js
pop
or
jo
iret
or
xchg
adc
lods
add
mov
call
stos
js
dec
ss
jo
push
cmp
pop
insl
mov
xchg
fs
mov
mov
jns
fstl
xchg
mov
jg
lods
cmpsb
ds
cmp
lret
pop
ret
add
mov
pop
test
fwait
jo
mov
addr16
call
jl
bound
aam
mov
xchg
insl
cld
popf
ja
mov
rcrl
xchg
movsl
push
xchg
mov
lcall
addb
xchg
xor
test
fistpl
pusha
inc
fs
sbb
or
inc
in
cld
fs
mov
iret
cmp
add
leave
mov
ret
dec
dec
roll
lahf
dec
les
xchg
dec
inc
ret
lods
clc
fwait
mov
sub
jo
mov
inc
jecxz
fs
cwtl
cmpsl
outsl
inc
jge
xchg
pop
cmp
jo
pop
es
jno
jg
add
jge
xchg
mov
mov
jb
insl
xchg
push
fcmovu
pop
fcomip
popa
jb
xchg
sbb
fstps
fdivl
lock
pusha
push
mov
insl
push
jno
cmp
sub
jo
jb
js
xorl
loopne
jae
ja
xchg
out
cmp
pop
xchg
mov
or
popa
mov
mov
xadd
cmp
mov
jle
outsb
stos
mov
mov
fs
aam
mov
sbb
mov
adcl
push
push
popa
test
add
leave
mov
push
or
cmp
jae
cmpsl
fwait
dec
fcoml
push
dec
leave
pop
in
xchg
add
or
nop
jl
les
imul
jl
pop
xorl
xchg
sti
jle
cmp
dec
and
addb
xchg
mov
fabs
xor
movsb
shlb
fldcw
cmpsl
ljmp
lret
test
rol
xchg
add
int
push
pop
shrb
mov
mov
cmpsb
or
pop
add
push
scas
test
popa
xchg
sbb
lds
adc
xor
out
cmp
mov
pop
mov
sub
imul
cmp
rcll
insb
scas
dec
ljmp
mov
fiaddl
fsts
stos
cli
sbb
push
mov
mov
push
fstps
aas
xchg
and
xor
pop
pushf
je
jno
shll
dec
fdivr
loop
daa
inc
ret
shlb
test
in
shr
pop
adc
sahf
iret
insb
dec
ja
xor
jl
mov
sbb
pop
and
and
dec
cmpsb
sti
xor
mov
dec
push
shlb
fistpl
stc
flds
and
or
rcrb
loop
cmp
dec
aam
xor
mov
lds
mov
loop
shlb
lock
cmp
lods
pop
pop
fistpl
sti
sarl
inc
push
jb
je
mov
fstpl
fs
arpl
insl
cmc
add
nop
mov
enter
stos
cmp
inc
xchg
xchg
xor
je
clc
inc
repz
jp
and
add
hlt
jbe
mov
push
loope
fistl
cmp
int
aas
xchg
adc
dec
sub
sub
hlt
or
push
pop
xchg
rcl
pop
aas
cltd
ror
shr
insb
test
mov
xchg
and
push
sbb
push
shll
pop
push
shll
movsb
push
mov
sub
fisubl
frstor
jle
mov
push
or
aaa
add
imulb
adc
jecxz
dec
lods
mov
push
mov
pop
movsb
dec
inc
outsb
out
scas
fistpll
icebp
dec
cmp
push
das
xchg
pop
cmp
aas
setb
pop
add
mov
loopne
jne
sub
xor
mov
mov
push
ja
mov
fiaddl
xlat
adc
fsts
aam
xlat
das
dec
sub
lahf
lds
mov
push
jl
sar
js
lahf
pop
push
subl
inc
push
mov
pop
mov
push
jbe
scas
dec
xor
pop
into
mov
leave
jle
mov
pushf
loop
lcall
cmp
push
les
pop
jp
sub
jl
cmp
and
sahf
push
aaa
push
cltd
pop
lods
mov
sti
or
pop
fwait
daa
repnz
ret
int3
add
mov
les
aad
scas
cmp
lods
popa
dec
pushf
setns
mov
mov
movsl
int3
je
imul
insl
cmp
stos
cmp
jg
cmp
xchg
aad
cwtl
mov
test
inc
cltd
or
xor
repnz
faddp
cmp
hlt
js
fs
cmp
andb
pusha
push
sub
das
mov
arpl
dec
jns
jo
jno
mov
mov
cmp
cmpsl
add
rcr
out
add
loop
pop
dec
xor
daa
pop
xchg
inc
aas
jne
into
loopne
pop
cmp
mov
cmpsb
fsqrt
mov
arpl
mov
pushf
adc
cmpsl
mov
repnz
jns
std
pop
call
imul
fs
or
flds
sbb
xchg
out
mov
cmp
push
cmp
jl
lods
xor
and
int
xlat
or
nop
cmpsl
jle
cmpb
pop
push
rcrb
mov
pop
scas
sahf
cs
loope
xchg
out
inc
xchg
dec
ss
ror
sbb
rcll
mov
sub
or
jo
and
movsb
andl
push
icebp
fiaddl
mov
fldenv
and
and
inc
mov
movsb
mov
fdivrl
mov
out
test
dec
pop
cs
movsb
mov
cmp
mov
gs
push
icebp
pusha
in
push
into
jne
fs
sahf
insb
push
test
cmp
cmc
lret
dec
jns
fimull
or
fcompl
les
bound
aas
mov
sbb
pop
fs
repnz
fstpl
cmc
popa
mov
push
or
push
cmpsb
mov
ret
ja
ret
lcall
dec
cmp
mov
aam
or
add
outsb
mov
arpl
dec
gs
mov
pop
xchg
xchg
fsts
xchg
jecxz
and
dec
stos
jl
cltd
imul
mov
in
pop
push
gs
aam
mull
mov
fcomip
inc
imul
ss
adc
cmpsb
call
dec
and
push
cmpsl
mov
sbb
mov
outsb
dec
and
and
fldcw
cmp
xchg
sbb
dec
push
mov
sbb
sbb
mov
jnp
cmpsb
and
cmp
sub
bound
test
int
ret
push
push
cmp
sbb
or
lds
mov
and
pop
adc
fnstcw
mov
sub
push
mov
sarl
pop
mov
shlb
fidivl
sarb
xchg
mov
dec
adc
insl
movsl
js
inc
icebp
ja
es
xor
mov
push
push
sub
loopne
pop
dec
xchg
je
push
jmp
fwait
pop
jae
in
out
add
enter
add
push
push
hlt
mov
jno
daa
cmpl
adc
push
mov
push
shrb
sub
pop
sbb
push
fs
mov
test
sbb
fwait
arpl
xchg
mov
in
dec
cmp
mov
movb
push
push
shlb
jae
mov
push
insb
shl
push
js
add
lods
mov
loop
push
inc
int3
inc
je
adc
or
pop
div
mov
push
mov
rep
adc
leave
popa
gs
mov
ror
push
pop
sbb
clc
pop
cmp
sub
xchg
xor
lds
sub
xor
push
xchg
xor
mov
dec
sub
addb
dec
jge
insl
cmc
dec
adc
lret
mov
js
xchg
sub
dec
loope
cmp
xchg
xor
stos
dec
jo
mov
push
imul
sbb
imul
xor
cmpsb
xchg
push
jo
sub
aam
dec
jle
out
roll
pop
dec
jb
pop
fdivs
sbb
dec
mov
adc
sub
dec
xchg
loop
ja
jo
pop
cltd
movsl
fnsetpm(287
ficoms
dec
xor
push
scas
ror
ss
jl
add
pop
inc
xchg
push
mov
test
adc
or
dec
inc
std
adc
popa
js
push
mov
adc
mov
push
int3
inc
mov
jge
rolb
sub
int3
dec
or
repz
xchg
or
mov
adc
sbb
call
sbbl
xchg
pop
or
fdivp
xchg
inc
das
enter
jo
sbbl
or
sbb
xor
in
out
sub
xchg
mov
shrl
mov
adc
ja
loope
inc
cltd
mov
jb
leave
mov
pop
cmp
std
nop
lds
mov
or
shll
imul
cwtl
sub
add
push
jge
sub
mov
xchg
xchg
sbb
data16
hlt
scas
clc
inc
adc
jg
push
lock
test
push
fstp
cmp
loope
cmp
push
cmp
jae
rcrb
into
cli
cmp
xor
xchg
adc
faddp
jo
dec
out
fs
ja
fnsave
lea
adc
fnstcw
into
push
testl
jae
pop
andl
jb
jbe
xor
sbb
arpl
je
leave
pop
cmp
bound
repz
pop
je
mov
sti
insl
into
les
pop
mov
int
lods
movsb
pop
push
and
mov
int3
mov
pop
add
mov
arpl
mov
mov
imul
or
xor
fists
les
xor
lock
cmp
jne
dec
mov
mov
and
js
mov
and
cltd
dec
and
out
por
fwait
dec
lcall
inc
pop
pop
in
or
jae
ret
lock
sbb
cmpsb
dec
mov
lods
mov
aaa
aam
ret
popf
inc
mov
mov
daa
sarb
mov
adc
and
add
testb
mov
out
aam
fistpl
lock
cmp
add
imul
aad
imul
mov
lret
pop
pop
pop
repz
push
je
push
lock
push
push
shlb
jge
xchg
out
insb
int3
xchg
pop
setge
mov
mov
sbb
fcompl
je
popa
pop
lcall
dec
cwtl
ljmp
mov
add
pop
dec
xchg
jne
je
or
mov
decb
pop
andl
in
ja
call
je
lock
lret
sahf
clc
js
aas
and
dec
adc
jb
lods
xchg
fwait
data16
pop
push
fmuls
lock
adc
jnp
pop
icebp
nopl
aad
xchg
jo
cld
push
xchg
pop
sbb
adc
iret
jo
push
inc
nop
cmp
pop
pop
lcall
mov
add
test
or
pushf
push
mov
mov
hlt
xchg
pop
add
push
mov
jbe
mov
mov
lods
cmp
lods
jno
mov
mov
mov
subb
fxch
xchg
std
push
sbb
and
icebp
jo
ret
repnz
jmp
fldt
enter
inc
sub
pop
push
and
add
dec
insl
ds
mov
mov
imul
lret
adc
cmp
call
lea
arpl
andb
rcll
mov
nop
adcb
pop
inc
adcb
imul
dec
in
mov
pushf
pop
dec
in
xchg
pop
pop
xchg
fstpl
cmp
mov
fcmovnb
cmc
inc
push
jecxz
inc
dec
and
les
mov
pop
cmpb
xorb
imul
mov
cs
mov
sub
xchg
nop
es
and
sti
fsubrs
xor
rclb
cld
test
loope
lea
shl
push
lret
movb
push
leave
jo
out
mov
cltd
dec
jae
pop
xchg
mov
aam
pop
mov
in
loopne
jae
int
sbb
and
in
addb
xchg
clc
fcom
lock
adcb
dec
dec
pop
test
nop
mov
xchg
in
pop
cld
mov
insl
ret
jp
mov
jo
cmpl
andb
mov
cmp
repnz
jmp
pop
frstor
icebp
xor
jns
and
xor
add
insb
pop
ljmp
mov
inc
xchg
and
test
sbb
jo
and
cmp
jl
fdivp
mov
xlat
mov
dec
dec
push
inc
fstpl
mov
or
and
pop
jp
push
int3
adc
into
xor
pop
flds
or
jbe
inc
fistpl
daa
push
lret
add
and
pop
mov
int
xor
mov
ror
jne
andl
mov
test
cli
xor
inc
inc
ja
je
jo
jb
pop
iret
and
cmp
mov
movsl
in
sub
pop
cwtl
les
ret
pop
pop
and
sub
sti
mov
test
loop
adc
pushf
jbe
cmp
or
sub
sub
xchg
push
es
dec
mov
int
pop
fdiv
ja
mov
je
mov
dec
sbb
cmp
sub
std
push
bound
mov
mov
mov
mov
pop
add
pop
fstp
lock
cmp
pop
fs
adc
mov
testb
mov
fstpl
add
sti
inc
xchg
js
jl
lods
neg
jbe
pop
inc
lcall
inc
arpl
push
mov
sub
pop
lock
xchg
icebp
in
scas
mov
jbe
jns
aam
pop
mov
pushf
std
and
xchg
orl
in
jns
js
inc
outsb
xchg
pop
gs
cmp
and
mov
xor
icebp
xchg
js
pop
mov
lea
fcompl
xor
ds
push
push
pop
xchg
inc
mov
sbb
cmp
cmp
aam
int
inc
push
shll
push
pop
xorb
les
mov
shll
xchg
out
jb
fwait
rcr
mov
pop
xorb
test
fldt
int
jl
mov
scas
xor
scas
mov
je
pop
dec
test
ret
lds
cmp
cmp
push
loopne
adc
add
lcall
jg
xchg
cmc
fisttps
push
mov
inc
dec
mov
loope
inc
daa
dec
sbb
lds
fstpt
lds
mov
jne
jno
je
or
insb
hlt
xchg
cmp
or
fiadds
or
jmp
cmpsb
cmpsl
or
jno
xor
or
aas
scas
pop
cmp
sbb
inc
mov
bound
mov
stos
push
pop
in
mov
stc
sub
je
inc
xor
negl
bound
cmp
mov
pop
xchg
enter
lods
dec
cwtl
sbb
addl
add
mov
cmpsl
les
lret
mov
sahf
bnd
push
mov
loop
jl
pop
sub
pop
xor
mov
push
inc
pop
mov
cld
adc
sbb
xchg
mov
jl
fsubs
pop
pop
mov
orl
loop
adc
addr16
pop
mov
push
aad
sub
fstl
xchg
and
nop
dec
or
push
mov
popa
jne
js
fwait
jge
nop
test
into
pop
mov
sub
test
je
faddl
jbe
mov
adcb
pop
into
imul
int3
fst
mov
lds
popa
push
int3
cmp
pop
xchg
lods
push
pushf
or
sahf
mov
mov
loope
xchg
aad
aaa
mov
test
jae
fldenv
or
fiadds
or
jno
push
push
jnp
les
push
pop
pop
push
lds
sbb
in
lcall
gs
cmc
cmpsl
mov
jecxz
iret
push
repz
mov
cmp
loopne
cmp
fwait
lret
inc
jnp
push
in
push
fcoms
sbb
movsl
fcoms
fsubrl
adc
fistpl
mov
pop
out
push
shrl
jbe
sbb
fld
loopne
cmp
cmc
dec
inc
mov
fsub
sbbb
xchg
add
cmc
fsubr
add
inc
mov
or
mov
push
dec
sar
stc
data16
fsubrs
cmp
adc
call
push
pushf
jo
fisubrl
adc
cmpsl
xsha1
cmpsb
into
adc
pop
jge
dec
int
fistpl
or
xor
xorl
fsubp
daa
cmp
jmp
jmp
outsl
or
mov
push
popf
push
into
rorl
jg
sub
mov
push
fld
xor
cmp
mov
sub
xor
lcall
mov
jo
sarb
insl
fwait
cmc
test
movsl
dec
jno
insl
and
cld
cli
mov
inc
cmp
inc
sahf
xor
mov
or
inc
icebp
je
xchg
in
push
xchg
negb
shlb
bound
sbb
jmp
loop
xchg
scas
push
jbe
mov
pop
cmp
mov
movsl
lock
pop
cmpsl
cld
mov
jo
inc
dec
xchg
fs
cmc
cmp
add
dec
cmp
sbb
pop
js
adc
mov
cltd
cmp
add
pop
test
fimuls
test
sbb
mov
mov
insl
fsts
shr
mov
lods
notb
ja
andb
mov
xor
dec
xchg
mov
xchg
add
aas
cmp
cmpsl
or
pop
out
xchg
lock
ljmp
sbb
pushf
lock
ret
fcmove
adc
mov
xor
enter
mov
xchg
mov
adc
stos
js
add
pop
push
add
pop
mov
dec
adc
out
outsb
xchg
xor
sbb
pushf
mov
jae
xchg
fwait
pop
jae
xchg
hlt
ret
or
mov
loop
mov
adc
fwait
leave
pop
lcall
dec
aad
pusha
cmpsl
int3
mov
popf
in
or
xchg
fst
loopne
mov
les
fsubp
and
pop
mov
jo
mov
mov
int3
addr16
cmp
pop
push
int3
lods
inc
shrb
jecxz
dec
jns
pop
lock
push
cmp
xchg
ss
sbb
jecxz
jnp
mov
mov
mov
outsl
cmp
loopne
push
jb
fdivl
int
cmp
lea
xor
pop
push
pushf
into
mov
lahf
xchg
int3
lcall
aad
fidivs
or
sahf
xor
adc
xor
xchg
repz
pop
jae
cmp
ss
insb
cmp
les
sub
sub
fisttpll
cli
and
cmp
add
xchg
lods
les
addr16
cltd
jp
jge
stc
test
lret
arpl
push
sub
out
rclb
js
dec
ja
adc
jne
insb
and
push
cmp
mov
jmp
in
in
call
mov
punpckhbw
pop
pop
and
pop
jg
aaa
cmp
les
jo
stc
mov
cmpsb
sbb
bound
test
jle
int
jg
imul
push
les
and
sbb
fxam
sub
cmpsb
mov
loopne
push
cwtl
jle
ficomps
movsb
add
movsb
iret
pop
aas
inc
or
jl
int3
pop
stc
mov
and
in
jg
into
insl
pop
inc
lea
jbe
out
push
dec
bound
pop
jp
ret
mov
rclb
mov
fdivs
call
mov
insl
jno
into
cltd
push
dec
adc
ret
mov
jns
pop
mov
cmpsb
sbb
frstor
cld
pop
mov
and
mov
inc
push
aaa
in
jno
xor
js
add
pop
lds
xchg
jl
scas
dec
sbb
dec
aaa
cmp
push
dec
cmpsl
mov
or
arpl
dec
cmc
shrl
gs
cmp
jmp
fcomps
push
pop
dec
pop
cmp
cmc
cwtl
repz
leave
fists
mov
mov
jns
hlt
dec
aaa
pop
je
cmpsl
movsb
jae
icebp
mov
shrb
pop
xor
testb
mov
sbb
jae
dec
lock
sti
je
cmpsb
xchg
and
add
xchg
cmp
in
jecxz
sbbb
in
lock
push
xor
inc
out
movsl
add
cmp
mov
rcll
insl
jbe
pop
or
xlat
jo
and
popf
mov
icebp
ds
mov
imul
xchg
pop
xorl
mov
mov
mov
insb
inc
aad
divb
sbb
xor
sti
fwait
push
and
xchg
sbbl
mov
mov
in
add
mov
jae
mov
fstps
xchg
inc
pushf
js
jne
mov
movsl
js
ds
test
push
pop
mov
cmp
imul
push
mov
ret
gs
ret
je
mov
addr16
cmp
pop
lock
jae
stc
add
imul
cvtpi2ps
pop
sub
xor
jno
adc
mov
iret
clc
jo
shrl
pop
fmuls
and
and
aam
sub
jg
sbb
clc
jp
test
std
mov
fwait
stc
fsubrs
push
mov
mov
sahf
lds
sti
jne
clc
scas
popf
divl
mov
je
cmpsl
aas
fstpl
stc
dec
push
inc
loope
sbb
stc
mov
or
push
sbb
cmpb
or
mov
xorb
cmp
adc
insl
xor
inc
ljmp
outsb
jle
les
pop
js
xor
xor
xchg
adc
xorl
insb
ret
gs
bound
sbbl
xchg
loopne
inc
leave
pop
xchg
jo
dec
dec
in
aas
mov
mov
lcall
loop
sub
movsb
mov
pop
xchg
aaa
mov
push
mov
ds
jge
xchg
imul
xlat
push
fldl
popa
push
mov
les
rcr
adcb
adc
adc
inc
dec
jbe
fcomip
inc
addb
jno
adc
les
sbb
cmp
int
arpl
jg
outsl
push
addr16
push
and
or
bound
jg
mov
imul
or
cld
push
mov
pop
in
adc
xor
loope
mov
aaa
and
jne
daa
dec
adc
jno
xor
mov
cld
loope
push
insb
adc
or
push
mov
jbe
loope
jo
cmpsl
cmp
add
mov
push
ret
and
adc
test
movsb
daa
pushf
inc
inc
jle
jecxz
shll
test
mov
lods
pop
movsb
les
clc
lahf
sub
cmp
aad
je
add
test
cmpsb
xor
sbb
sbb
test
out
xchg
mov
pop
mov
jns
inc
bound
rcrb
mov
push
cmpb
and
sub
jg
push
push
or
add
and
push
jne
mov
mov
mov
push
pop
fsts
jno
pop
sub
pop
pop
jo
sbbb
push
xor
mov
adc
dec
push
test
jo
fistpl
ret
insb
stc
add
test
add
addr16
hlt
insb
fadds
lahf
in
stc
xchg
lret
mov
pop
clc
add
incb
shll
into
adc
cmp
push
add
xor
movsl
lods
mov
xchg
mov
cmp
insb
lret
push
les
push
lds
xchg
movsb
cwtl
mov
dec
xchg
mov
aaa
jbe
mov
pop
xor
fildl
rolb
xchg
pop
loop
cli
and
clc
das
arpl
ljmp
mov
dec
push
sub
pop
lret
add
sbbl
cwtl
jb
push
lahf
sar
sub
fcoml
or
cld
push
sbbb
fiadds
sub
push
ja
adc
gs
sub
cmp
jno
cmp
sub
xchg
mov
jle
aad
test
xchg
dec
mov
mov
data16
movsl
push
jb
add
cmp
fwait
mov
fisttpl
mov
push
addb
xchg
xor
jp
push
xchg
cwtl
add
aas
xchg
jmp
repnz
icebp
pushf
into
push
jb
jno
pushf
jge
movb
push
mov
imul
shll
push
mov
sahf
push
xlat
inc
cmp
dec
sbbl
pop
add
xchg
pop
jecxz
mov
inc
enter
cli
pushl
dec
gs
cmp
push
aam
adc
rclb
cmc
sahf
push
sbb
add
bound
mov
sahf
cli
mov
pop
pushf
cli
and
pushf
movsb
icebp
fdiv
push
cmpsl
mov
pop
xor
jp
fs
cwtl
push
push
jp
mov
bound
pop
lods
adc
inc
and
cmc
push
cmp
push
cs
sbb
inc
jl
mov
dec
hlt
jmp
add
je
repz
mov
scas
jp
test
pop
sub
lret
jge
adc
into
push
pushf
cmp
fmuls
pop
or
sahf
pop
mov
in
stc
push
test
in
jnp
ret
hlt
bound
stos
mov
xor
adc
xchg
cmp
xchg
cmp
and
adc
fistl
mov
les
lea
fisubrs
sahf
mov
pop
or
mov
std
dec
lahf
mov
mov
mov
sahf
mov
xor
pop
fs
sahf
inc
imul
inc
push
and
and
xchg
repz
je
push
in
icebp
push
inc
pop
dec
popa
fcmove
or
mov
cmp
or
xor
jbe
jne
adc
cltd
jmp
jo
insl
stos
add
jb
fwait
pop
pop
cmp
and
hlt
out
fs
mov
insb
xchg
rorb
mov
pop
fistl
push
stc
cwtl
fmull
and
pop
dec
inc
and
inc
push
call
int
test
jb
mov
pop
cmp
ror
inc
int
hlt
fdivl
dec
daa
outsb
aaa
xchg
test
pop
mov
popa
push
les
sahf
lds
pop
test
adc
add
sarb
adc
sub
jle
mov
cltd
adc
cmp
in
leave
out
push
imul
mov
aas
out
pop
dec
lds
mov
push
js
cmp
mov
ja
push
xchg
mov
out
dec
lods
sub
imul
xchg
xchg
jo
mov
push
add
add
cmp
fcomps
popa
imul
imul
lds
sbb
cwtl
das
jbe
fistl
jb
adc
popa
jmp
dec
jb
jnp
push
mov
nop
fmull
dec
test
or
push
xchg
in
xor
fwait
repz
sub
insb
jne
jecxz
xchg
popf
je
mov
inc
outsb
in
leave
ljmp
push
out
popa
inc
orb
in
push
call
jno
fsubrs
in
pop
sbb
cmp
jns
popa
lods
fnsave
or
call
xor
in
push
pop
fmuls
xlat
mov
insl
jle
pusha
clc
stos
and
cmp
lods
inc
cmp
mov
lods
jl
ficomps
lods
push
cmp
fwait
movsl
out
leave
push
pop
add
mov
movsl
lock
aad
pushf
clc
out
stos
ljmp
cwtl
mov
jecxz
rolb
es
daa
sbb
ja
add
cmp
xor
scas
inc
popf
xchg
add
inc
sbb
lock
clc
cmp
call
push
jae
push
mov
clc
mov
dec
cmp
push
sbb
shrl
push
in
cwtl
xor
adc
mov
xchg
insl
fmul
out
clc
xchg
call
movsb
mov
or
adc
mov
shll
hlt
inc
mov
out
add
jb
movsl
movsb
dec
fwait
cmp
mov
mov
mov
push
insb
sbb
pusha
cmp
les
or
and
loope
push
mov
pop
xor
stos
adc
adc
scas
jne
into
fdivrl
imul
imul
jns
and
push
into
mov
ljmp
push
int3
aam
lds
jp
jg
mov
scas
repnz
xchg
mov
adc
insb
push
or
out
in
mov
imul
scas
das
aam
stos
jge
mov
sbb
pop
fiaddl
push
pop
sahf
cmpsb
and
pushf
es
pop
scas
mov
les
pop
out
aam
dec
cmp
es
jg
aas
mov
jno
leave
cmpsl
push
fidivl
add
fstp
mov
sti
aaa
fs
fstpt
fnstcw
shlb
cmp
in
js
add
bound
jle
scas
adc
jnp
daa
adc
pop
lds
or
arpl
into
xchg
push
fmuls
push
inc
scas
outsb
xchg
fs
cmpsl
stc
inc
addr16
push
outsl
rcll
mov
pop
xchg
repz
inc
and
negb
jl
sbb
nop
jae
out
test
or
aaa
inc
push
adc
dec
pop
rcrb
push
add
jg
cli
cmp
xor
inc
cmp
fisttps
nop
aad
cwtl
pop
mov
jae
out
mov
iret
pop
jns
fs
xchg
xcrypt-ctr
cmpsl
pop
jo
iret
repnz
mov
pushf
inc
dec
ficomps
fs
test
cli
sub
pop
jno
repnz
mov
pop
add
jno
repnz
fstp
in
adc
push
mov
dec
aam
iret
mov
pop
jno
and
adc
divb
dec
fstp
insb
iret
enter
ljmp
adc
or
cmp
mov
scas
pop
cmp
xchg
mov
push
cmp
call
clc
push
sbb
pop
aam
mov
jecxz
mov
les
mov
jne
test
ja
arpl
adc
cmp
fwait
movl
rclb
mov
mov
mov
inc
enter
fisubs
mov
mov
cmp
push
fs
mov
mov
mov
pop
scas
cmp
push
push
ret
cmpsl
fcmovne
cwtl
mov
mov
dec
shll
sete
in
cmp
push
dec
pop
js
pop
jp
mov
push
pop
rcll
movsl
push
add
ljmp
jns
imul
arpl
popf
inc
dec
out
pop
shrb
inc
mov
sbb
sub
cmp
in
push
scas
dec
aam
lds
movsb
push
adc
xchg
sahf
sbb
adc
shrl
rcr
test
icebp
ja
stc
lea
in
sub
repnz
add
jns
mov
pop
xor
call
adc
inc
or
sbb
mov
test
cmc
xchg
dec
cmp
jno
or
pop
xor
xchg
adc
cmp
scas
push
pop
push
adc
jae
cwtl
mov
xchg
dec
std
pop
mov
fistpll
xchg
and
aad
pop
decl
insl
subl
insb
fisubrs
or
pop
jae
jmp
jnp
es
and
fwait
out
jns
adc
jg
dec
xchg
scas
andl
int
les
inc
leave
arpl
pop
lock
jne
in
sti
inc
push
hlt
shlb
cltd
enter
fistl
mov
add
mov
sub
rorl
and
lahf
add
pushf
jnp
clc
cmp
push
dec
inc
dec
mov
mov
rcrl
mov
int3
es
cmpsb
pop
or
xchg
cmpsb
xchg
std
inc
mov
popf
or
mov
cmp
movsl
push
insb
and
pop
lods
clc
fwait
mov
test
shrl
push
push
les
push
xchg
lret
xchg
cmp
xchg
fwait
xchg
add
and
xchg
lds
jno
adc
insb
ror
mov
xchg
out
test
loop
cltd
add
mov
fdivl
clc
xchg
repnz
out
out
imul
dec
and
stos
sbb
lret
mov
orl
call
bnd
xor
ficomps
les
push
es
jb
sub
mov
fwait
xchg
push
dec
mov
cmc
inc
shl
add
insb
or
sti
clc
push
aad
lret
gs
lock
shr
lds
push
repnz
mov
fdivs
push
addr16
jno
xchg
std
adc
pop
and
cmp
inc
inc
popa
dec
cmpsl
mov
add
push
jae
xor
push
ljmp
adc
and
xchg
shll
and
mov
xor
dec
fs
xchg
push
jne
push
push
cwtl
pushf
bsf
je
int
das
pop
negl
pop
push
pop
lds
pop
rorb
xor
aad
nop
andb
popa
lret
lock
outsl
lcall
js
pop
push
dec
lcall
lds
fwait
xor
jg
lret
mov
clc
add
cltd
mov
xchg
shrb
mov
pop
daa
test
cs
xchg
test
daa
out
bound
pushf
inc
rcl
pop
loopne
inc
push
sub
pop
and
cmp
jmp
lcall
fs
movsb
pop
aad
jae
movlps
xchg
add
sarl
aam
adc
movsb
insb
xchg
jb
or
push
aam
sbb
mov
lds
pop
out
pop
fwait
adc
lods
cpuid
and
cmp
jmp
dec
loope
sub
jnp
inc
xlat
mov
ja
push
std
popa
pop
das
jle
inc
xchg
jl
cmp
inc
dec
mov
mov
or
and
pop
sub
icebp
lods
push
ja
inc
out
ret
jb
repnz
mov
sbb
mov
sti
xchg
lret
pop
mov
adc
subl
sbb
mov
dec
cmpsl
mov
jg
push
pop
int
fldcw
fwait
jge
out
adc
js
mov
xchg
xchg
jp
mov
inc
cmp
loope
pop
in
daa
jno
push
cmp
arpl
push
xchg
and
cmp
xchg
push
mov
lahf
out
pop
ficoml
call
mov
sub
clc
mov
ret
aad
inc
add
pushf
pop
mov
aad
add
mov
mov
ret
mov
lcall
jl
aad
xchg
lea
lock
gs
ficoml
xlat
icebp
inc
sbb
xchg
pop
ret
outsb
mov
pop
push
cli
mov
inc
xchg
xchg
outsb
pop
jno
dec
rclb
ret
rcrb
mov
bound
mov
mov
xlat
inc
mov
nop
or
test
jo
jl
pop
mov
je
jg
cmp
inc
push
je
xor
insb
push
xchg
fwait
mov
sbb
cltd
inc
fwait
mov
cmpsb
add
xchg
mov
bound
jo
mov
mov
adc
adc
repz
adc
sub
insb
ja
cmpsl
int
out
xor
inc
sti
cmpsb
lret
xor
leave
xchg
lcall
cmpb
test
pop
sub
jne
jo
pop
adc
jmp
dec
sbb
and
mov
lods
or
fisttpll
pop
in
cmp
leave
push
adc
mov
scas
lcall
mov
or
test
outsb
dec
fwait
mov
cmp
stc
dec
daa
in
cmp
mov
pop
mov
ja
dec
push
pusha
into
push
aad
dec
aad
pop
fdivp
repnz
lret
pusha
or
mov
or
mov
xchg
push
mov
mov
mov
icebp
push
mov
bound
shll
test
cmp
dec
and
push
cmp
pop
push
or
test
mov
jns
ficoml
pop
sbb
or
movsb
sbb
cmp
push
push
adc
cmp
test
mov
fcmovnu
in
cmc
or
mov
stos
outsl
add
inc
jg
sti
cltd
popf
sarb
inc
stos
inc
mov
rolb
pop
out
dec
xorl
cmp
ret
xchg
cli
stos
jl
adcb
rep
mov
cwtl
or
scas
mov
pop
jbe
jae
jmp
adcl
dec
insb
xchg
jns
jl
subl
xchg
add
ret
int
pop
repnz
faddl
mov
popa
hlt
aas
mov
in
icebp
mov
aaa
hlt
fcmovnu
lds
mov
std
xchg
daa
jns
xchg
jne
pop
repnz
mov
fldcw
add
shll
loopne
outsl
in
mov
cmp
cltd
lahf
aas
cmp
and
push
je
pop
dec
jp
push
jo
les
and
cmpsl
aad
mov
sbb
pop
test
inc
in
lahf
xchg
mov
pmulhuw
bound
cmp
jl
add
adc
sbb
clc
pusha
xchg
sahf
sarb
sbb
xor
mov
mov
movsl
add
lcall
into
dec
in
mov
and
mov
or
push
push
cmc
pop
les
adc
imul
mov
gs
jg
ljmp
lock
add
jp
xchg
les
sbbl
imul
icebp
icebp
aad
adc
popf
jb
and
in
mov
stos
cmp
filds
adc
pop
ss
add
jmp
in
jno
jo
cmp
mov
out
shlb
sbb
mov
stos
xor
fs
fs
ds
jo
loop
stc
aad
cltd
jl
or
int3
mov
jo
aad
addl
jae
adc
sub
scas
cmp
fcoms
add
sahf
adc
popf
pop
xchg
xor
push
mov
add
add
pop
mov
ficoms
je
fs
aad
mov
stc
addr16
shrl
xorl
js
jle
pushf
jne
lock
add
mov
jno
imul
fisttpl
data16
rcrb
mov
adc
jle
outsl
jne
lcall
mov
push
data16
fstpl
insb
mov
cmpsb
fsubrs
mov
ss
lcall
sbb
insl
ljmp
mov
cmc
xor
xchg
sbb
subl
scas
adc
or
jne
pop
leave
out
arpl
dec
mov
and
sbb
mov
gs
int
jno
rcl
clc
adc
clc
mov
xlat
jge
into
fcompl
adc
mov
inc
icebp
out
popf
arpl
push
push
stc
and
push
pop
daa
bnd
push
pop
adc
or
xor
arpl
mov
pop
or
mov
push
test
jo
xor
test
or
into
je
popa
xlat
test
cmp
add
jbe
fdivr
mov
push
stc
add
sbb
and
lods
mov
jnp
push
shrb
sub
mov
jnp
pop
fsubs
mov
cmp
push
scas
mov
pop
lea
xchg
fidivl
fmulp
mov
lock
mov
stos
add
mov
mov
ret
cwtl
daa
dec
cmp
icebp
jl
js
mov
mov
push
mov
shrl
pop
jo
mov
mov
pop
inc
fiadds
push
xor
daa
dec
mov
xchg
mov
rcrb
aad
mov
mov
mov
xchg
pop
rcll
maxps
stc
mov
int
adc
pop
xchg
push
imul
jbe
insb
mov
mov
or
je
les
push
loope
push
pop
push
int3
pop
pop
movsl
aaa
ret
pop
cmp
shlb
sbb
mov
inc
lcall
xchg
push
daa
dec
xor
mov
mov
cmp
jns
jae
cmp
inc
dec
dec
insl
lcall
xchg
fstl
sbb
pop
push
ljmp
stos
lds
sahf
cmp
mov
or
inc
dec
pop
fcompl
dec
sbb
jo
int
push
fisttpll
test
xchg
mov
in
nopl
inc
jne
int3
repz
push
dec
push
sub
in
cmp
daa
lock
mov
jo
loope
dec
jo
aas
or
loope
lods
sbbl
cmc
or
ret
mov
in
pop
sbbl
mov
pop
dec
fadd
mov
fcomps
mov
ss
rcrl
mov
jae
jmp
dec
xchg
aam
pop
dec
roll
outsb
or
jns
loope
pop
jmp
jae
sbb
sub
imul
pop
mov
pop
mov
das
cmp
cmp
cltd
test
rolb
ficoml
fwait
pop
insb
and
adcb
je
jo
nop
clc
pop
lods
jo
rclb
cmp
roll
lret
jno
mov
mov
push
push
pop
int3
arpl
lcall
cmp
inc
and
mov
insb
cmpsl
add
shll
jecxz
outsl
fdivs
cmpsl
mov
xor
imul
push
mov
into
push
xlat
lods
cmp
pop
orb
add
or
out
hlt
lahf
setp
cltd
mov
mov
mov
lods
fildll
shll
sbbb
fnop
add
test
dec
fidivl
out
dec
std
or
data16
lds
add
add
je
iret
addr16
loopne
stc
out
inc
xchg
pop
insl
sub
push
inc
cmp
rep
pop
mov
add
lahf
je
jge
push
les
jle
mov
inc
dec
test
jno
or
fwait
out
in
push
in
in
fs
fidivs
bound
or
mov
lret
mov
jecxz
xchg
xlat
push
popf
push
rcll
push
sbb
and
xchg
mov
mov
push
push
repz
push
pop
frstor
mov
in
cmp
or
cmp
lds
pop
xchg
mov
mov
sbb
mov
or
loop
in
jmp
lahf
in
les
cli
add
inc
andb
js
jne
rcll
test
icebp
inc
jns
out
sbb
mov
mov
mov
pminub
adcb
dec
push
cmp
sub
inc
imul
xchg
pop
int
jo
pop
out
popf
and
xor
daa
outsl
repnz
bound
hlt
mov
pop
xor
pop
sbb
sahf
and
subb
xor
push
mov
push
out
xchg
mov
sbb
mov
in
mov
xchg
aad
cmpsb
imul
fimull
int3
rorb
into
sbb
mov
inc
jno
insl
push
mov
xchg
mov
fcoms
test
cmpsl
jle
and
dec
mov
fldenv
imul
cmpsb
ret
shlb
push
add
test
lods
aam
outsb
mov
cmp
je
sahf
jo
vpcmpeqb
mov
popa
leave
cmp
es
mov
sbb
clc
arpl
inc
repnz
mov
jno
cmp
aaa
rorl
test
loop
int3
shr
xchg
mov
inc
inc
popa
cmp
decb
enter
or
movsb
adc
cmp
aaa
xor
mov
loopne
mov
add
xor
into
xchg
imul
movsl
sbb
daa
fnstenv
adc
pop
jb
sti
popa
jge
xor
andl
sbb
xor
inc
out
mov
js
dec
jo
mov
lea
cmp
shll
ret
add
push
outsb
stos
jno
sbbl
sti
add
adc
add
shlb
dec
push
cli
sbb
je
xchg
lock
cli
mov
mov
xor
push
xchg
push
pop
loopne
mov
les
push
jge
dec
dec
jne
xor
push
jo
stos
aad
cmp
out
mov
xchg
pop
mov
es
mov
xor
test
mov
jp
arpl
sahf
repnz
out
dec
push
xor
pop
insb
fstl
fsubl
cmp
cmp
fdivr
jmp
scas
mov
sub
ficoml
loopne
push
test
mov
fucomi
adc
mov
jb
cmp
jge
stos
hlt
push
pop
in
pop
loop
fists
pop
les
iret
addr16
cmp
ljmp
xor
aad
mov
xchg
scas
xor
mov
test
jbe
out
cmp
inc
mov
test
mov
pop
je
jno
scas
lods
inc
push
pop
cvtpi2ps
mov
je
pop
dec
out
lcall
and
dec
aaa
or
cmpsl
ja
pop
js
mov
gs
cmp
in
push
mov
xchg
inc
push
aad
nop
test
aad
cltd
sub
icebp
imul
fxch
popf
outsl
cmpsb
cmp
cmp
or
mov
test
mov
mov
mov
dec
xor
mov
leave
jge
push
int
adc
jp
pop
cmc
jno
sahf
inc
sar
xchg
rcr
adc
push
mov
cmpl
xor
das
lcall
jnp
or
aas
popa
adc
add
pop
icebp
int
pop
cwtl
in
xchg
pop
jae
out
mov
movl
scas
jl
sbb
aad
mov
dec
mov
xchg
inc
push
les
jne
jg
push
cmpb
xchg
jae
es
add
stos
and
push
mov
andl
cmp
lock
add
pop
and
icebp
and
bound
cmpsb
movsb
pop
jns
fs
jl
jge
adc
movsb
stc
dec
inc
fnstcw
jmp
aam
mov
dec
insl
mov
mov
mov
lcall
call
bnd
pop
jns
jp
rolb
xchg
or
mov
sub
hlt
imul
mov
sub
xchg
add
out
test
sub
xchg
nop
inc
push
hlt
push
xchg
sbb
sub
sub
mov
sbb
dec
nop
or
push
ds
lds
jl
rorl
mov
and
inc
jnp
and
jecxz
loope
arpl
jbe
test
mov
or
xlat
pop
push
loopne
stos
pop
push
cli
mov
sbb
mov
xchg
pop
sub
push
repz
jp
pushf
add
or
jae
loop
clc
dec
sbb
lcall
loop
bound
xchg
fs
subb
insb
mov
fcomps
dec
mov
fcoms
jl
push
popa
mov
push
inc
push
fdiv
xor
xor
xchg
push
repz
stos
sbb
dec
jg
inc
dec
lret
jg
fstps
sub
fistpl
je
js
pop
adc
push
push
mov
dec
xchg
cmp
nop
cmpb
or
fisttpl
add
jl
sub
fnstsw
cmpsb
xchg
js
hlt
rol
clc
je
push
jb
pop
dec
push
sub
fildl
cmp
into
sahf
pop
push
pop
pusha
adc
mov
orl
js
cmp
ljmp
test
adc
ljmp
mov
aad
scas
add
mov
and
aad
test
pop
adc
xor
adc
mov
insb
pop
cwtl
cwtl
test
pushf
hlt
jp
sub
mov
inc
std
xchg
outsb
pop
pop
mov
test
sbb
xor
icebp
mov
jae
std
popf
mov
jne
xlat
xor
fcomp
mov
mov
popf
mov
pop
inc
lcall
dec
das
mov
push
push
jne
pop
mov
pop
test
sbb
fnstcw
xchg
dec
fsubl
imul
incb
dec
loop
loop
cmpsb
cmpsl
adc
fwait
mov
inc
dec
pop
adc
aad
and
pop
fisttpl
mov
les
imul
shrb
in
xlat
test
scas
cltd
je
push
jg
mov
and
dec
cmp
fwait
xor
or
loop
mov
out
adc
mov
mov
mov
jns
dec
and
mov
bound
mov
mov
dec
cld
push
or
mov
sti
cmc
dec
imul
es
push
dec
mov
mov
loopne
pop
cmpsl
cmp
cld
dec
cs
sub
xchg
mov
rcr
sbb
das
out
sarb
loope
lds
mov
add
jecxz
leave
sub
cmp
outsb
orb
cwtl
pop
scas
loope
cmp
add
dec
lds
or
add
lods
out
enter
in
popa
lcall
jg
xor
dec
push
ss
fadd
aas
jns
fs
push
inc
into
fnstenv
ret
add
jne
aam
xchg
sti
push
fidivrl
cmpsb
jp
in
pop
and
mov
lock
mov
pop
nop
cmp
lock
xorb
call
popf
pop
clc
testl
mov
sbb
add
aaa
adc
icebp
or
cmpsl
cwtl
cmpsb
mov
adc
imul
mov
jle
ja
xchg
orb
sub
lds
cmp
xchg
mov
shlb
mov
dec
and
xor
cmpsl
mov
inc
jge
and
js
sub
mov
inc
cltd
add
fcompl
push
call
int
xchg
add
sbbl
clc
mov
pop
sub
mov
in
pmaddwd
add
mov
push
mov
or
adc
int
loope
pop
push
push
loope
outsb
mov
daa
dec
and
adcl
pushl
push
aam
mov
subb
icebp
outsl
adc
cmpsb
xor
sbb
out
subb
xor
add
adc
adc
js
sub
sbb
sub
js
and
or
js
mov
hlt
popa
fs
mov
ret
pop
adc
cmpsb
movsb
pop
lret
popf
inc
je
xchg
mov
xor
stos
or
and
mov
add
pop
push
pushw
sti
ret
daa
adc
fucomip
cltd
bound
sbb
and
inc
inc
adc
or
or
sbb
inc
mov
testb
mov
xlat
loop
inc
mov
mov
data16
cmp
mov
iret
mov
pop
cmpsl
je
push
dec
mov
sbb
pop
movswl
add
sbb
inc
pop
jg
sub
mov
cltd
and
dec
stos
rclb
adc
cmpsb
jbe
pop
iret
in
cmp
sub
mov
add
fs
xchg
cli
jbe
dec
ret
sarb
es
mov
add
rcll
hlt
adcb
test
scas
pshufw
cltd
aas
mov
out
sbb
stos
lahf
mov
cltd
jg
repnz
subb
stos
in
cld
aam
mov
jle
fidivl
jns
test
xchg
ss
lcall
mov
xchg
jb
cmp
pop
mov
loop
or
pop
fldcw
mov
imul
lds
pop
clc
inc
jns
dec
push
loop
add
lods
je
inc
or
jno
pop
cmp
sub
xor
inc
push
shlb
push
popa
and
mov
loope
dec
and
jne
add
adc
sub
mov
pushf
shrb
vpshab
pop
shll
pop
and
inc
add
mov
mov
cli
into
and
sbb
jne
cmp
push
xchg
xchg
mov
sub
push
es
fisttpll
pop
mov
jbe
pop
flds
cmpsb
testb
shlb
test
test
inc
cmp
je
cwtl
andb
ja
cmpb
ja
jl
pushf
test
jne
cmp
aad
int
gs
lods
loop
and
adcb
sbb
xchg
nop
dec
cmpsl
stos
xor
shll
sub
cwtl
jae
pop
popa
stos
push
fisttpll
add
pop
jnp
or
hlt
pop
push
pop
cmp
outsb
fsubl
push
in
incb
hlt
push
jmp
movlps
cmp
into
insb
fsts
notl
call
push
les
arpl
fldenv
mov
stos
shlb
out
xchg
inc
dec
jo
sub
bound
pop
fwait
jnp
pop
icebp
and
pop
cwtl
sub
cmc
adc
sarb
mov
jmp
xor
movb
sbb
xchg
jl
push
xchg
imul
int
aam
xchg
or
sbb
mov
sbb
fadds
int3
lods
pushf
xchg
movsl
ja
mov
push
insb
inc
jge
stos
dec
cmpsl
sub
std
pop
les
repz
adcl
and
rolb
mov
addr16
repz
and
push
pop
addl
aad
sub
pop
mov
hlt
pop
jl
aad
icebp
pop
mov
jae
hlt
jo
fistpl
lea
mov
sbb
pop
pop
pushf
cwtl
xchg
test
xchg
aad
pop
xchg
mov
push
inc
pop
xor
xchg
pop
jae
lock
fmuls
cld
mov
jae
incl
jae
and
pop
jo
xchg
inc
mov
scas
mov
dec
test
stos
mov
imul
fs
push
hlt
push
mov
hlt
pop
push
jb
pop
mov
imul
jo
rcrb
into
push
push
cmpb
mov
fs
jae
js
fwait
std
iret
and
jp
lods
sub
shll
mov
pop
mov
mov
push
cwtl
scas
test
push
mov
dec
jge
mov
fyl2x
loopne
gs
mov
dec
jno
mov
push
cmp
js
pop
fmull
xor
mov
cmp
test
cltd
es
outsb
lds
fdivr
test
jno
sbb
cmp
out
outsb
and
in
xchg
lahf
ret
mov
iret
pop
adcl
mov
push
sbb
arpl
pop
adc
and
test
neg
dec
fidivs
mov
or
mov
les
test
dec
mov
jo
sahf
add
xchg
pop
bound
and
imul
psubsw
bound
mov
cmp
sub
arpl
into
mov
cmp
mov
jg
dec
lods
mov
dec
into
das
frstor
cmp
data16
les
add
sbb
cmp
jb
ficoms
leave
dec
movswl
fildl
arpl
xchg
sbb
push
fldcw
in
dec
adc
aas
add
add
jno
arpl
imul
loop
arpl
and
mov
sti
andl
jne
xor
pushf
or
test
inc
fsubs
stos
lods
fs
fisttpl
and
scas
enter
outsb
popf
add
and
pop
lock
jne
call
sbb
out
mov
dec
add
xchg
pop
pushf
mov
das
pop
lock
add
mov
lods
and
and
repz
pop
xchg
fwait
sbb
enter
xor
in
jae
gs
jp
jo
mov
mov
pop
push
sahf
mov
jno
pop
inc
aam
dec
xlat
pop
xor
jae
cmc
add
jg
repnz
out
pop
jno
inc
jns
mov
outsl
jno
lcall
jo
or
mov
dec
mov
cmpsl
bound
cwtl
scas
and
scas
sub
lods
cmp
fiadds
mov
mov
push
adc
in
and
sarl
jb
adc
mov
sub
lds
orl
lds
cld
bound
bound
xchg
xchg
xchg
aam
mov
fdivs
loope
jge
fstps
pop
fcoml
pop
add
leave
cs
popa
cmp
fistps
mov
aam
pop
jg
arpl
mov
jmp
pop
mov
sbb
add
cmp
pop
adcl
test
pop
cmp
add
mov
sbb
sti
fs
lods
pop
sti
aad
adc
pop
sbb
mov
xor
pop
add
jmp
mov
in
pop
xor
clc
jno
repnz
mov
jno
xchg
jbe
adc
and
pop
das
dec
rcrb
xlat
fmuls
xchg
sbb
out
stos
loop
xor
je
ja
and
test
iret
push
fdivl
dec
scas
aad
jnp
push
cli
fdiv
movsb
xchg
popa
pop
andl
and
mov
and
into
push
les
add
in
sbb
mov
inc
inc
ja
loop
mov
fwait
jg
bound
ja
sbb
xchg
fs
xchg
lret
test
das
lcall
enter
sub
iret
rorl
jae
inc
jg
xchg
fdivrl
dec
mov
test
push
cmpsl
pop
lds
adc
fidivs
push
pop
rol
add
call
repnz
iret
rolb
and
and
flds
mov
movsb
push
mov
push
mov
cmc
faddl
mov
loop
add
test
xchg
cli
cmc
sbb
gs
lret
pop
inc
xchg
sbbb
inc
sub
mov
sahf
fwait
mov
inc
cmp
dec
xor
fs
jge
push
or
cmp
push
mov
int3
dec
sub
push
addb
movb
jno
loope
hlt
mov
or
jge
sub
dec
test
xor
xchg
sbb
mov
push
and
aad
add
mov
add
out
pop
xchg
cwtl
sbb
cmp
xchg
jae
lock
xchg
mov
pop
xchg
pop
xor
das
pop
xchg
pop
xor
andb
or
cmpsl
fs
jo
xor
jnp
repz
xor
insb
clc
aam
sbb
cld
jno
repnz
adc
adc
popa
cwtl
mov
lahf
ds
out
push
or
std
dec
jns
xor
jns
push
sbb
inc
fucompp
dec
dec
insb
add
inc
orb
out
xchg
adc
fsub
mov
ds
mov
cltd
mov
mov
cltd
dec
leave
fmulp
test
sub
test
xchg
movsb
outsl
sbbl
mov
mov
insl
scas
pop
cld
gs
sub
jne
lretw
sub
pop
inc
sahf
jecxz
pop
pop
in
fs
mov
pop
rcr
clc
inc
out
push
mov
cmp
push
inc
lock
pop
mov
cltd
icebp
rcrl
cli
push
lock
insl
add
neg
jl
stos
inc
push
jno
pop
subb
dec
mov
jl
in
mov
outsb
stos
addr16
mov
bnd
cld
jg
shlb
scas
xchg
sarl
xor
out
bound
inc
xchg
adcb
and
leave
out
jge
inc
mov
inc
out
dec
insb
out
fs
dec
jnp
adc
repnz
out
out
cmp
xchg
add
push
cs
incb
adc
fdivrl
xor
cmp
dec
add
or
push
push
data16
sub
pop
sub
iret
daa
lret
jbe
xchg
mov
scas
aam
push
pop
dec
xlat
mov
mov
cmp
mov
dec
cmp
pop
sub
push
fsub
sbb
in
leave
aam
push
push
test
xchg
cmp
aas
jbe
xor
dec
jno
iret
cmpsl
add
mov
je
jne
movsb
mov
scas
cltd
fscale
xchg
lods
ficoml
fcoms
mov
scas
mov
fmuls
xchg
cmc
subb
shll
cmp
mov
iret
push
inc
jecxz
movsl
lock
subl
xorb
call
je
xchg
insl
movsl
icebp
xchg
cld
pop
dec
sahf
dec
mov
cmpsl
sbb
mov
xor
test
or
dec
ljmp
icebp
vmwrite
pop
dec
movsb
adc
es
jne
push
pusha
dec
push
pop
mov
jg
cmpsb
dec
insb
test
mov
cmp
dec
stc
rep
insb
adc
icebp
sbb
sbb
cwtl
push
xor
dec
pop
and
mov
sub
cmpsb
cmpsl
cmpsb
mov
hlt
cltd
loope
shrb
pop
les
and
in
ljmp
xchg
in
out
lds
and
stos
in
loopne
mov
inc
ror
loopne
inc
xlat
pop
popa
mov
push
fldcw
add
push
mov
xchg
daa
or
movsl
cs
mov
add
pop
vunpcklps
orl
jb
cmp
mov
or
jecxz
xchg
je
xor
dec
mov
cli
fstl
mov
ss
fsubs
mov
test
cmp
rolb
fmul
jnp
fwait
jbe
lcall
inc
pop
add
mov
xchg
cmc
pop
adc
xlat
pop
in
loope
lret
rcl
mov
ficomps
xchg
or
xchg
pop
mov
cli
inc
push
arpl
mov
mov
js,pn
int3
js
aam
jp
lcall
cwtl
cmc
js
int
out
xchg
mov
shlb
dec
test
xor
cmpsb
pushf
and
inc
pop
outsb
add
pushf
or
push
dec
cmp
mov
adcl
psubusw
in
add
out
pop
xchg
fstp
fstps
arpl
mov
mov
pop
mov
dec
insb
es
jbe
pop
mov
bound
lcall
fldenv
test
icebp
ja
imul
andb
mulb
aam
rclb
iret
push
or
sahf
mov
jno
push
xchg
movsb
jmp
out
inc
test
mov
in
movq
add
nop
iret
cmp
inc
mov
ljmp
movsb
in
xchg
sbb
lcall
adc
les
ret
pop
dec
mov
scas
or
add
dec
xchg
or
mov
insl
cmp
cs
jno
inc
les
cwtl
lds
int
rclb
pop
pop
jo
stos
dec
bound
loopne
mov
pop
sahf
insl
movsl
xchg
cwtl
cmp
bndstx
mov
push
out
in
dec
ss
sbb
fwait
cmp
js
push
aam
in
fidivrl
jg
out
mov
push
loopne
adc
cmp
fwait
push
pop
arpl
popf
dec
jno
adc
lds
xor
jo
xchg
xchg
fidivrl
andb
jmp
hlt
addr16
mov
std
cmp
cmp
adc
push
mov
stos
pop
cmp
dec
mov
or
insb
roll
ret
mov
insl
mov
dec
xlat
pop
out
mov
popf
jns
fs
jne
pop
jbe
into
dec
push
loop
xchg
dec
ficompl
mov
cmc
popa
rcrl
jne
jae
std
ss
ljmp
pop
mov
and
mov
lds
mov
mov
xor
fsts
sbbl
mov
data16
mov
push
movsb
or
cmpsb
push
xchg
sub
push
add
shll
push
adc
xor
mov
rorl
dec
push
xchg
mov
divl
arpl
js
cmp
loope
mov
jge
ret
adc
push
sbbb
push
mov
lds
adc
pop
cmpl
sub
sub
testl
out
push
imul
movsl
inc
push
jo
mov
and
js
and
fldcw
ret
or
imul
into
cwtl
push
dec
std
mov
rorl
push
adc
push
mov
in
sub
jb
popa
pop
lds
nop
jmp
push
adc
lea
inc
aam
pop
mov
mov
dec
cwtl
in
cmc
dec
jp
arpl
clc
push
fwait
inc
sahf
addr16
loop
xchg
leave
iretw
xchg
pmaxsw
imul
fmulp
inc
dec
test
dec
push
adcb
push
add
lods
test
inc
test
bound
popf
add
fistpl
pop
push
cli
or
adcb
int
pop
mov
jo
mov
push
call
inc
mov
bound
pop
jno
shll
add
jo
add
push
mov
lsl
icebp
push
out
cmp
cmpsl
add
fdivs
data16
adc
shlb
in
mov
xor
push
pop
fsts
pop
jnp
test
cmpsl
push
icebp
mov
inc
mov
dec
jne
bound
out
sub
aad
push
pop
adc
mov
xchg
je
or
lea
fsts
dec
jno
sub
adc
pop
pop
popf
into
xchg
and
pop
shlb
std
pop
add
xchg
outsb
aas
pop
leave
cwtl
cltd
cltd
and
nop
pop
sarl
pop
out
push
enter
push
cli
add
mov
jnp
xor
pop
loopne
rorb
pop
add
cmp
pop
mov
fcomi
cli
fneni(8087
push
insb
cmp
mov
stos
and
jae
sub
mov
xchg
push
lret
cmp
lea
iret
mov
test
xlat
iret
lds
loope
cmp
push
rolb
cwtl
fs
mov
mov
rclb
pop
or
sbbb
cmp
mov
je
cmp
icebp
mov
std
fistpll
sbb
cwtl
push
lds
lcall
sub
je
in
pop
arpl
mov
popf
pop
and
sbb
pop
pop
mov
fnstcw
inc
push
mov
pushfw
mov
mov
jmp
mov
fxch
push
aam
sbb
cmpsl
xlat
jecxz
je
cmp
sub
sbb
and
scas
mov
jo
fisttpll
faddl
inc
cmpsl
cmp
fldcw
jb
shl
push
inc
mov
lods
pop
sub
xchg
loopne
mov
cmp
or
add
push
mov
xor
mov
inc
xor
popa
jge
mov
or
cltd
fisttpll
int
test
push
cld
aaa
test
adc
cs
fistpl
mov
popl
js
xor
mov
mov
aaa
out
jmp
sbb
dec
loop
mov
test
stos
dec
stos
call
cwtl
outsl
fistl
into
arpl
jnp
mov
sub
inc
dec
int3
mov
jo
jp
mov
mov
arpl
cmp
cmp
xchg
test
cwtl
shrl
xchg
cwtl
push
in
sbb
sub
push
ljmp
fisttpl
and
mov
into
xor
cmp
test
js
pop
xchg
pinsrw
cmp
push
inc
mov
lock
aam
jae
out
lods
jo
jns
ss
insb
pop
jl
es
xchg
cmp
xor
cld
jns
test
mov
fimull
in
xorl
cli
dec
arpl
insl
cmp
inc
adc
imul
mov
jne
es
ljmp
cmp
mov
or
xorb
fsubrp
sbb
jecxz
mov
mov
icebp
mov
mov
push
sbb
adc
xchg
aad
arpl
or
sub
lods
fcmovne
pop
and
cmp
filds
dec
insb
mov
test
dec
sbb
mov
sub
pop
mov
and
bound
sub
adc
add
dec
pop
fnstcw
fnstcw
scas
jo
js
inc
lds
cmpxchg
lods
in
aas
or
mov
rclb
int
stos
pop
add
mov
lret
jo
arpl
arpl
inc
dec
pop
ds
test
or
lcall
jnp
pop
aas
push
mov
jnp
lret
jmp
lea
cwtl
retw
mov
int3
mov
push
pop
ret
mov
loop
jns
loop
xchg
cli
jge
pop
inc
ja
stos
dec
aad
add
xlat
mov
pop
mov
test
call
jns
mov
cmpsb
or
xchg
addr16
dec
mov
sarb
and
inc
into
daa
lock
pop
xchg
mov
fnsave
fxch
push
call
mov
mov
cli
or
push
adcl
stos
fmuls
out
andl
pop
jge
push
test
popa
pop
jl
pop
jnp
mov
jno
inc
jl
in
jp
int3
and
int3
cmp
mov
push
sbb
pop
cltd
adc
pop
adc
inc
packsswb
sbb
pop
push
ja
popf
lods
repnz
inc
pushf
rclb
sbb
xchg
xor
xchg
mov
js
stos
das
mov
sbb
repnz
push
fldenv
push
mov
sbb
inc
cmc
outsb
shll
pop
xor
add
xor
sahf
or
imul
icebp
adc
cmp
stos
adcl
lcall
or
push
pushf
mov
cld
xchg
pop
mov
loope
mov
mov
out
add
mov
push
sub
sub
ds
sbb
je
jle
mov
out
ret
mov
cwtl
jo
or
sbb
sbb
xorl
xchg
mov
rclb
xchg
xor
inc
fidivrl
movsl
insb
cmpsb
ds
cli
in
push
pop
icebp
cmpsl
aam
orl
mov
xchg
mov
imul
pop
mov
push
add
xchg
mov
or
add
adc
jge
xchg
enter
int3
mov
test
cmpsl
jae
subl
sbb
jge
mov
mov
mov
sahf
push
cmp
cmpsb
mov
cmp
mov
mov
dec
mov
mov
jo
pop
cmp
sahf
xchg
and
mov
enter
xchg
dec
in
or
int3
subl
mov
bound
push
adc
push
pop
pop
add
fcompl
mov
push
ja
or
jbe
push
mov
js
push
xchg
jnp
mov
inc
push
lods
insb
xchg
or
movsb
fdivl
in
mov
fsubl
cwtl
cli
jae
jo
jae
mov
jp
rclb
fbstp
push
pop
jnp
xchg
push
cmpl
sbb
sub
xor
sbb
sbb
mov
mov
popa
lahf
jo
jae
jo
jae
mov
jo
jae
mov
jp
les
pop
mov
js,pn
xor
xchg
mov
push
cmpl
popa
int
mov
shr
push
jl
stos
lods
ret
pop
test
nop
psllq
mov
push
in
gs
dec
in
xor
push
orl
ret
push
and
pop
iret
fwait
lods
test
jnp
push
xchg
mov
sub
test
popa
xor
jo
xor
xchg
xor
dec
xchg
sbbl
adcl
xchg
jae
or
xchg
or
js
xlat
jno
aad
adc
aam
test
lods
outsb
and
and
iret
lahf
les
cltd
adc
pop
loop
xor
mov
sbb
std
lods
movsl
mov
scas
push
fcoms
cmp
rcr
mov
pop
icebp
mov
or
call
cmp
or
popf
adc
xchg
les
lock
mov
cmp
pushf
xchg
into
dec
sarb
addr16
popa
pop
pop
fistps
sub
lea
insb
jge
js
scas
push
sbbb
push
mov
sub
or
mov
pop
imul
cmp
add
fadds
pop
xchg
cmp
jae
xor
xchg
std
pop
cwtl
cmp
mov
pop
adc
push
sarb
fmuls
outsl
icebp
push
iret
xchg
les
cmpb
cmpl
mov
cmp
or
imul
sarl
inc
les
je
push
push
sbb
push
enter
dec
sub
cmp
test
ret
jno
pop
adc
pop
adc
cmp
sarb
cwtl
jns
ret
cmp
mov
popf
mov
pop
adc
add
lahf
cmpb
lahf
lcall
pop
ds
enter
dec
jno
push
jp
jecxz
sub
pusha
sub
xchg
and
mov
sbb
and
repz
jne
dec
jp
jle
xchg
mov
push
lahf
add
nop
or
mov
cmp
ljmp
bound
lds
inc
js
mul
jbe
xchg
cmp
in
cwtl
jns
mov
insb
hlt
jbe
mov
movsl
jo
pop
push
adc
xor
outsb
out
popa
aam
mov
cltd
xchg
push
hlt
jo
pop
and
add
xchg
les
push
call
sbbl
fs
dec
pop
mov
xchg
loopne
inc
test
cmp
mov
xchg
push
xchg
sbb
mov
or
jns
and
test
js
fcoml
xchg
push
jb
fs
mov
lods
jno
xchg
movsl
fimuls
subl
or
push
aam
jae
mov
mov
dec
fmuls
ficoms
sbb
cmp
inc
andb
jp
push
push
jmp
out
jns
fisubrl
jmp
xchg
in
adcb
pushf
jl
fbstp
fcomps
aad
mov
xchg
pop
jae
jo
add
xchg
jae
aas
dec
sbb
adc
jl
xchg
dec
sbb
jl
jae
adc
jb
fs
lods
mov
xchg
fsub
stc
cmp
out
std
dec
mov
mov
mov
cltd
mov
dec
out
pushf
pushf
cmp
sub
jge
add
shlb
cwtl
rep
xchg
add
cmp
aas
fiadds
inc
scas
cmc
inc
scas
out
xor
xor
test
mov
ss
push
fsub
imul
hlt
out
sbbl
stos
mov
jb
cld
cs
filds
addr16
pop
xchg
xchg
inc
jo
pop
cmp
idivb
add
fs
in
lret
scas
pushf
out
in
incb
jle
jle
lret
dec
jo
andb
sbb
push
mov
lahf
xchg
popa
mov
loope
cmp
loop
hlt
lea
fcompl
adc
mov
xchg
jo
fs
cmp
movsb
inc
mov
xchg
cwtl
hlt
inc
mov
bnd
inc
adc
dec
fisttpll
jnp
dec
fcoms
or
mov
movl
adc
cmpb
int
sub
push
aas
outsl
inc
add
iret
scas
xlat
sub
jle
jg
out
jo
dec
rcl
cwtl
popa
pop
cmp
lds
dec
xor
push
sbb
imul
pop
mov
scas
xor
xchg
cmpsl
pop
fs
sub
xor
aam
mov
push
push
jae
test
or
aas
iret
out
mov
xorps
or
xlat
mov
js
out
popf
stos
sbb
loope
cmp
stos
mov
add
mov
testl
xchg
jb
push
dec
push
cmp
adc
adc
lds
pop
and
out
dec
mov
imul
cmp
cmpsl
add
mov
push
dec
shrl
cmpsl
mov
sub
sbb
jge
into
pushf
cmpsl
inc
add
jnp
adc
and
cmp
cmp
cld
xchg
fcoml
imul
or
pop
into
lock
pop
mov
int
outsb
out
jae
cmp
mov
repz
stos
xchg
jle
test
pop
adcb
pushl
sahf
sbb
sbb
in
ficoms
dec
pop
aam
cmpsb
or
cmp
dec
lds
sti
cltd
xchg
mov
inc
shrb
out
xchg
and
xchg
out
scas
aaa
jnp
jg
push
adc
imul
push
push
push
test
loopne
int
push
sbb
cmpsl
mov
fs
outsl
fwait
dec
roll
enter
pop
mov
mov
xor
cmp
das
shll
fucomip
dec
into
xchg
out
add
testb
sbb
imul
loop
and
test
aam
bnd
cmp
in
add
mov
shll
push
pop
mov
jo
popa
adc
push
fs
fidivrs
fildl
iret
dec
adc
sarb
dec
mov
pop
jo
mov
stc
mov
pushf
mov
adc
lcall
mov
jp
out
lock
dec
sbb
movsl
sub
mov
int3
popf
ret
mov
dec
imul
cmp
in
seto
inc
add
pop
hlt
jp
sub
mov
icebp
cmc
in
shlb
push
or
call
cwtl
imul
aam
movsl
cli
push
daa
jb
pop
cmp
dec
mov
fdivl
popa
xchg
bound
xchg
js
mov
cwtl
and
mov
inc
mov
jbe,pn
pop
xchg
inc
fs
jo
out
mov
mov
adc
and
sbbb
xor
pushf
push
aas
and
cmp
in
inc
dec
pop
pushf
ret
cltd
lea
test
rcll
push
cmp
inc
jb
testl
xchg
loope
mov
xchg
cmp
add
mov
loope
test
clc
popf
in
lcall
sub
out
pop
cmpb
inc
pop
lret
cmp
std
dec
ficomps
mov
sti
sub
in
in
push
mov
adc
mov
test
dec
aam
xchg
mov
add
mov
and
jg
cmp
outsb
fs
imul
lcall
xor
stos
add
mov
pop
push
mov
in
fwait
adcb
sarb
fdivrp
xchg
mov
pop
sti
xchg
pop
xor
sbb
mov
cmp
sub
scas
sbb
daa
fldcw
mov
mov
mov
call
xchg
in
mov
clc
jge
mov
mov
popa
ja
icebp
mov
rcrl
arpl
mov
xor
dec
shlb
mov
add
xchg
jae
cmp
ret
stos
hlt
das
fwait
lcall
jl
add
pusha
mov
iret
cmpsb
std
cli
mov
shll
jae
je
cmc
sbb
loopne
fcmovne
stos
cmc
adc
jg
movsb
call
shl
fcom
jb
nop
test
int3
pop
add
xchg
mov
pushf
push
sbb
mov
sbb
lods
ja
out
sahf
pop
dec
jns
stos
mov
je
dec
icebp
imul
jp
xchg
cmpsb
fidivl
fsub
jno
daa
mov
js
jae
aam
cmp
popf
shlb
mov
imul
orl
jl
and
loop
push
dec
fs
call
sub
icebp
addr16
xchg
inc
jo
xor
aam
cltd
test
fcmovne
lret
test
push
icebp
mov
inc
jl
sahf
pop
cmp
push
setle
les
cwtl
sbb
mov
pop
jb
jbe
push
rcr
sub
mov
xlat
jge
cwtl
repnz
hlt
cmp
cmp
xchg
loope
inc
push
mov
div
mov
mov
push
and
or
sub
outsl
addr16
jle
inc
push
test
push
cmp
aam
shlb
les
aam
lock
jne
fs
jne
sub
fnsave
in
pop
cmp
push
clc
mov
in
xorl
sub
adc
mov
lods
nop
mov
mov
test
mov
lds
pop
adc
mov
fisubrl
mov
mov
jns
push
xor
aaa
pop
push
and
cmc
incl
pop
jae
cltd
sti
enter
loope
jno
adc
fwait
adc
lahf
add
cmp
mov
cmp
ret
or
cs
xchg
vmread
inc
cmp
inc
push
in
or
fst
dec
dec
rcll
cli
mov
or
cmp
cmp
mov
mov
idivb
jge
push
jo
sbb
mov
sub
mov
and
in
add
jbe
aam
sbb
dec
mov
int3
sbb
jge
out
out
mov
pop
mov
xchg
adc
ficoms
mov
xlat
jo
and
mov
dec
jmp
fwait
xlat
js
test
cmp
xor
sahf
pop
jge
iret
arpl
pushf
ficoms
fwait
emms
push
in
adc
out
adc
movsl
mov
inc
scas
clc
dec
mov
push
movsb
jno
pop
mov
mov
sub
adc
and
cltd
jb
fiadds
jle
jb
mov
test
jmp
fnstcw
mov
sbb
sahf
push
push
nopl
out
and
and
or
lea
push
mov
leave
inc
bound
insb
jns,pn
pop
pop
ror
pop
cmp
dec
popa
out
mov
sbb
add
push
fbld
dec
ret
sbb
push
popf
dec
negl
fcoms
push
in
mov
je
stos
movl
sub
sbb
add
push
stos
jg
mov
lods
push
cld
jae
aam
pop
fdivl
fbld
push
sub
sub
movsb
imul
fcmove
pop
out
imul
push
xchg
mov
inc
pop
or
fadds
jne
ja
mov
fsts
mov
and
inc
loope
jl
fsubr
xchg
mov
movsb
test
pop
sti
jp
xor
fidivrs
dec
fstps
add
pop
sbb
decb
stc
sti
nop
push
dec
insb
mov
pop
in
sub
mov
outsb
fwait
dec
jne
lods
test
ss
mov
jg
outsl
cwtl
cmp
out
pop
mov
pop
ljmp
jle
lea
insb
insb
mov
outsb
and
xchg
and
addl
cmp
in
and
pop
or
cmpl
inc
les
cmpsl
xor
int3
xchg
lea
adc
je
out
std
jae
les
or
adc
outsl
sbb
push
push
pop
rcrb
mov
and
push
mov
jmp
pop
mov
adc
mov
es
sub
mov
sarl
xchg
cli
mov
pop
lret
xlat
sbb
jge
aam
les
cmp
dec
jmp
sub
pop
pop
out
pushf
popf
xor
mov
iret
mov
bound
mov
cmp
cmp
insb
push
out
int3
adc
jmp
mov
sahf
shll
cli
jge
adc
setno
arpl
xor
xor
dec
push
cmp
leave
inc
outsl
jg
mov
fsts
sbb
xchg
aaa
idivl
jb
sbb
stc
das
mov
pop
jl
cmp
cmc
int3
repz
jne
xor
data16
je
cmp
mov
loope
out
insb
push
out
nop
fadd
test
popa
aaa
mov
dec
pop
sahf
mov
push
pop
xchg
sub
lods
popf
scas
in
shrl
popa
cmp
add
es
popa
push
jp
sub
int
cmp
sbb
movsl
stos
lods
or
pop
xor
jp
jle
dec
jb
cmp
jmp
shl
inc
xchg
xchg
xchg
mov
jne
loope
cmpsb
cwtl
jp
jmp
mul
adc
jnp
rol
adc
cmp
mov
mov
xchg
jecxz
mov
mov
iret
movsl
loop
stc
xchg
popa
push
ljmp
stc
loope
rcrl
jae
mov
dec
nop
in
jecxz
sbb
xor
inc
xchg
imul
mov
adc
das
jno
jno
iret
pop
jle
mov
dec
sub
stos
pop
cmp
enter
addb
pop
xchg
nop
push
sbb
pop
mov
adc
sub
add
popa
mov
cmp
jns
mov
and
dec
mov
jae
push
repnz
lock
cmp
jns
push
pop
pop
mov
mov
fs
xor
and
mov
mov
sbb
daa
icebp
lahf
fcomps
and
xchg
xchg
aam
dec
and
and
pop
push
aaa
jne
pushw
push
xchg
xchg
jne
test
adc
loope
pop
xchg
pop
lret
xchg
aam
loop
jge
test
rol
push
ljmp
xor
push
pop
inc
inc
call
cmpsb
out
loope
cmp
push
mov
mov
out
xor
sbb
mov
mov
std
push
fdiv
jb
sbb
js
inc
add
int
and
scas
push
arpl
dec
fildll
jns
icebp
xor
imul
inc
stos
push
mov
and
loop
push
sti
leave
dec
jbe
adc
and
dec
jo
jo
fwait
jne
mov
outsl
fs
jl
dec
aam
inc
icebp
jo
pop
jae
mov
lock
add
repnz
add
in
gs
xor
or
call
adc
insb
xchg
sub
jae
and
xorl
scas
fdivs
mov
test
addr16
xor
syscall
sahf
das
pcmpeqb
mov
lahf
cmc
mov
mov
xchg
ss
es
xchg
xchg
add
mov
ja
inc
dec
repz
aam
lahf
mov
test
jb
mov
adc
push
fcmovne
cmpsl
jmp
sbb
rcrl
data16
jg
or
test
dec
insl
dec
pop
movsl
les
sti
fwait
mov
pop
sub
jmp
xchg
mov
add
sbb
and
lock
push
pop
xorl
adc
xchg
sbb
inc
cmp
aad
adc
cwtl
adc
js
out
stos
push
imul
clc
sbb
les
scas
xchg
jl
xchg
xchg
or
fnstcw
push
mov
fdivs
xor
inc
popa
aad
cs
cmp
jo
sbb
xor
cmpsl
push
fwait
and
mov
into
stc
gs
add
arpl
sbb
fcmovnu
cmp
stos
addr16
push
push
es
vaddsubps
pop
mov
pop
jno
push
or
ss
lods
mov
xchg
or
jmp
fadds
shl
fs
jmp
imul
push
lcall
cltd
jmp
lcall
mov
in
cwtl
jp
movsb
pop
xchg
inc
sbbl
jmp
aad
sbb
xorb
jae
jo
sbb
daa
insb
push
repnz
cmp
push
xchg
sub
xchg
popa
jae
insb
cmp
sbb
push
mov
imul
test
dec
je
nop
cltd
xchg
mov
mov
fs
push
rolb
sbb
ficoms
or
or
dec
mov
jo
add
out
sbb
jmp
arpl
mov
bound
mov
pop
cmp
or
add
mov
ss
push
xchg
imul
bound
pop
mov
mov
pop
inc
test
xchg
cmpsl
pop
or
mov
mov
xor
xlat
out
or
add
jnp
inc
pop
xor
dec
jno
and
mov
stos
jb
mov
xor
pop
push
cld
test
jae
push
sbb
xchg
xor
xor
fsubrs
orl
adc
cmpsb
je
daa
xor
popf
sub
xchg
add
roll
cmp
shr
out
xor
xchg
jge
loop
push
sbb
and
pop
cmp
fistl
stc
pop
pop
pop
adc
inc
jb
outsl
int
hlt
pop
xchg
int3
gs
fadds
into
into
shl
pop
mov
mov
sub
pop
loope
lods
test
mov
dec
subl
js
js
jp
dec
push
icebp
out
outsl
into
sbb
popa
mov
hlt
sahf
xlat
les
jo
lds
inc
cmp
add
je
lea
int3
out
or
dec
xchg
xchg
pop
cmp
mov
pop
lods
rorb
in
ret
out
test
pcmpgtd
push
dec
inc
push
subl
inc
cmp
push
mov
inc
jno
push
sahf
xor
rol
les
dec
mov
les
test
or
xor
mov
adc
xchg
add
stc
jns
test
ret
je
mov
mov
dec
push
push
mov
fnstenv
loopne
cld
mov
jns
jnp
pop
push
js
lea
xchg
push
jnp
mov
pop
jmp
imul
pop
aad
mov
aad
xchg
scas
ja
rcr
xlat
insb
xor
push
xchg
cmp
pop
repnz
mov
loopne
xor
push
inc
ds
pop
mov
cmp
adc
iret
jnp
pop
pop
icebp
ljmp
ja
adc
xor
into
push
std
aad
dec
inc
repnz
xchg
xor
les
insb
fsubrl
fcmovnb
dec
filds
lods
adc
mov
sti
shrb
dec
leave
les
dec
ljmp
mov
les
mov
lds
mov
aam
inc
test
xchg
into
pop
leave
out
mov
mov
cld
repnz
out
cmp
jge
pop
test
xlat
jo
cmp
aam
gs
dec
pop
sbb
sarb
aad
out
jb
xchg
sti
sbb
mov
fdivs
int
popa
pop
cmpl
arpl
fcomps
cvtpi2ps
push
jg
mov
movsb
inc
cmp
xchg
cmpsl
jns
xor
out
xor
test
dec
pushf
inc
mov
cmp
pop
ret
cmp
insl
mov
cltd
jg
pop
cmpsb
and
cmp
add
mov
insl
fsubp
jo
jo
lcall
jnp
dec
js
inc
jecxz
ss
js
daa
cmp
addr16
inc
dec
pop
cwtl
xchg
rorl
inc
mov
stos
xchg
xchg
jns
pop
fcomps
fs
push
jns
sbb
jmp
jno
scas
pop
jo
inc
xchg
subl
rclb
cwtl
xchg
or
fadd
rcl
cwtl
fsubs
adc
xchg
movsb
xor
dec
push
sbb
pushf
or
jmp
push
jo
pop
fstps
mov
mov
ss
test
push
call
lea
out
or
mov
jb
mov
fmuls
into
sahf
and
lea
sub
push
jne
popa
pop
rep
push
mov
or
xor
cmpsl
out
push
movsb
cmp
and
jae
and
dec
adc
or
pop
pop
es
mov
in
jno
outsl
test
mov
mov
push
cmp
adc
cld
in
cmp
gs
mov
mov
outsb
inc
xlat
insl
dec
pop
sub
call
aam
movsb
jns
adc
sbbb
fisubrl
sub
xchg
test
bound
sbb
xchg
pop
cld
cmp
xor
lcall
dec
jo
jno
xor
arpl
js
cwtl
lcall
cwtl
pop
jne
adc
jo
mov
comiss
dec
push
stos
jmp
imul
mov
mov
or
pop
js
stc
jg
cltd
xchg
insb
data16
mov
cmpsb
out
imul
fcoms
xor
mov
movsb
adc
js
stc
xchg
mov
xchg
aad
sbb
jge
bound
fs
add
xor
sub
dec
jno
inc
mov
xchg
sub
sub
xor
jnp
icebp
push
or
test
sbb
xchg
dec
sbb
sbb
inc
push
jge
xchg
push
into
in
pusha
rclb
mov
dec
out
std
or
icebp
mov
lahf
push
shrb
rorb
cmp
cmp
cmp
inc
xor
pushl
repnz
out
push
cmp
add
int
incb
jbe
cltd
inc
cwtl
xor
mov
or
push
xchg
fwait
and
cmc
mov
adc
mov
mov
fdivr
insl
xchg
sub
test
and
add
mov
add
in
mov
or
add
icebp
sbb
adc
mov
fs
inc
subl
lcall
mov
stos
jge
and
mov
mov
xchg
xchg
push
push
out
add
dec
jno
push
jl
inc
inc
je
jne
inc
mov
add
fs
arpl
in
or
out
pop
cmpsl
cmp
mov
mov
imul
test
in
jl
adc
mov
lahf
test
jle
dec
sbb
jmp
pop
adcl
xor
pop
stos
dec
cmpsb
inc
sbb
xchg
jle
aam
push
arpl
cs
jnp
pop
push
fldl
mov
gs
data16
shrl
adc
cltd
popf
int3
jae
gs
jae
inc
gs
jle
sub
mov
inc
xor
adc
popa
ficompl
scas
xchg
outsb
lea
dec
fwait
icebp
fnstcw
repz
mov
cmp
mov
iret
bound
xchg
xor
mov
xor
inc
ret
sahf
mov
les
into
into
cmp
push
sub
les
push
pop
es
outsl
jle
push
rorl
add
les
cmp
sbb
mov
ds
jecxz
test
xchg
xor
push
xchg
fxch
xor
mov
popf
pop
mov
sbb
push
enter
dec
dec
lods
test
mov
adc
xchg
xchg
cmpl
inc
jmp
cmp
stos
mov
fdivs
popa
scas
icebp
adc
adc
add
mov
sbb
adc
frstors
aam
adc
cmp
mov
test
fdivp
push
ja
add
fadds
inc
repnz
mov
jge
bound
mov
fwait
mov
cmp
inc
or
jns
lods
cmp
inc
cmp
add
sub
scas
scas
pop
jae
ret
mov
xchg
stc
xchg
mov
test
mov
and
test
mov
jg
jb
add
fldenv
and
lock
das
cmc
inc
push
movsb
add
sub
cmp
sbb
dec
adc
pop
jno
and
jb
jne
jmp
jp
shlb
or
sahf
cwtl
sbb
xor
outsl
sbb
xchg
cltd
mov
mov
outsl
aam
sbb
and
insl
mov
xorl
adc
repnz
jne
outsb
push
jno
aam
push
mov
mov
xlat
jno
xchg
add
outsb
xchg
or
xlat
fs
inc
addr16
jno
mov
in
cwtl
adc
inc
mov
cmp
mov
jb
mov
jno
jb
xor
fisubl
add
mov
call
lock
nop
pop
cmp
jae
cmpsb
mov
inc
adc
mov
dec
push
dec
adcb
push
mov
push
xchg
jne
cmp
mov
pop
nop
outsb
cmpsb
sbb
and
cwtl
push
mov
mov
dec
shll
pop
pop
loope
dec
icebp
adc
ret
aad
je
push
in
test
add
cs
inc
scas
xchg
lcall
pusha
adc
jl
dec
jge
int3
nop
push
stos
add
jb
mov
cmp
xchg
mov
dec
sub
sub
mov
cmpsl
inc
into
jae
xchg
jb
aaa
sarb
jp
dec
add
loop
call
dec
inc
mov
lods
loop
mov
ret
mov
test
pop
jge
xchg
sbb
dec
xchg
sbbl
jbe
xchg
lds
adc
push
popa
or
jae
and
sbb
jg
cwtl
test
fsts
jmp
jno
xorb
ss
call
jo
mov
pusha
sbb
push
mov
and
lea
and
dec
jbe
int
pop
insb
cmp
jne
lret
shrl
scas
pop
cmpsl
rorl
hlt
fstl
in
cmp
ret
jnp
imul
mov
xchg
mov
mov
jp
fidivs
sub
jnp
test
daa
xlat
mov
sbb
jns
fisttpl
xchg
out
fs
mov
cmp
sbb
pop
adcl
lahf
or
out
test
pop
pop
mov
add
movsl
push
adc
cld
and
pop
pop
jl
jl
out
mov
fldlg2
or
test
and
sbb
xchg
dec
test
and
sahf
aad
insb
push
cld
mov
and
inc
mov
int3
aam
mov
repnz
int
mov
push
xor
sub
add
xchg
add
inc
test
cli
pop
mov
mov
into
push
cwtl
mov
out
jns
and
push
int3
inc
xchg
fmull
mov
add
pop
jb
insl
stc
sbb
jo
out
and
gs
mov
lds
mov
xchg
dec
cli
repz
xor
xor
in
cmp
sub
ficoml
imul
jbe
mov
nop
xor
rorb
loopne
pop
and
dec
and
ljmp
in
pop
adc
pop
ja
sahf
adc
ja
rcll
cmp
dec
lods
mov
out
xchg
int3
aad
sub
pushf
dec
mov
into
push
mov
addb
mov
stc
jo
fildl
bound
pop
or
ljmp
test
shrb
es
or
in
jecxz
xchg
cmpsl
and
daa
dec
push
mov
xchg
push
inc
push
or
push
sbb
cvtps2pd
bound
sbb
stos
dec
shll
hlt
mov
push
push
push
inc
mov
popa
loop
or
in
cli
je
ret
int
pop
sub
add
jnp
aad
subl
or
je
mov
test
pop
xchg
fldt
cwtl
mov
idivb
sub
and
lea
sbb
xor
xchg
mov
mov
push
gs
sub
inc
inc
mov
dec
adc
add
rorl
cmp
xor
test
hlt
xor
jnp
add
xorl
lods
lock
inc
mov
sub
addr16
aad
ud0
cli
pop
rcrb
rcr
xor
jmp
aaa
daa
js
imul
js
xchg
xor
mov
push
sbb
mov
cmpsb
lahf
sbb
mov
pop
sbb
or
xchg
add
sbb
icebp
mov
jae
cmp
jae
dec
lock
xor
sub
stos
unpcklps
popa
sbb
xchg
les
xchg
je
mov
xor
sbb
stos
pop
cli
mov
push
jecxz
jo
sub
hlt
push
in
pop
cmpsb
outsb
cltd
fimull
cmpsl
mov
sbb
xchg
mov
jmp
sar
jb
clc
les
inc
mov
adc
adc
mov
cmp
out
cmp
fsts
cmp
inc
movsl
mov
mov
data16
jl
daa
sbb
shlb
aad
push
pop
xchg
sub
cmp
or
fcoms
es
outsl
lret
mov
arpl
lock
fstpl
push
stos
loop
test
lret
lcall
enter
sahf
lods
or
std
or
pop
orb
iret
or
mov
aad
fcoml
xchg
inc
fnstcw
fcmovbe
mov
push
dec
sbb
pop
xchg
pop
push
mov
mov
jae
cmpl
call
inc
iret
stc
ds
in
fcmove
sub
dec
pushf
scas
lcall
imul
adc
pop
outsb
xchg
dec
fsubs
cmpsl
orb
std
sahf
lock
test
cmp
push
pop
iret
adc
stos
dec
xor
fstl
xchg
scas
jb
cld
push
aam
out
mov
je
int
inc
add
xchg
call
scas
mov
xchg
scas
lock
andl
push
mov
std
cli
test
sbb
adc
stos
mov
mov
enter
adcl
call
jecxz
cmpsl
popf
dec
mov
mov
mov
repnz
nop
or
sub
hlt
sub
cld
cmp
shrb
or
sub
loop
jmp
jns
pop
adc
aaa
in
cltd
stos
stc
push
jns
movsb
adc
js
fdivrs
cmc
jbe
ss
push
cmp
or
imul
cmp
xor
jmp
mov
cltd
daa
jmp
lcall
repnz
fistpl
stc
in
out
in
cmp
out
gs
push
inc
xchg
lds
lret
jge
mov
in
test
out
sub
push
popf
inc
xor
int
sbb
xor
aas
cltd
lea
lret
imul
les
into
jge
push
hlt
add
lods
cmpsb
stos
add
in
shll
xchg
xor
icebp
jae
out
je
add
mov
adc
xchg
mov
loopne
mov
jae
cmc
lods
dec
jg
jg
sub
push
push
push
mov
mov
movsb
pop
xchg
cli
pop
movsl
mov
push
pop
insl
out
notb
and
sub
pushw
into
data16
jl
insb
mov
cs
push
mov
in
xor
into
rcll
int
dec
xchg
and
push
pop
push
dec
pop
hlt
fidivrl
shrb
in
aad
in
pop
js
pop
cmp
mov
cmpsb
mov
lds
iret
lahf
xor
cs
fisubrl
xor
pop
lock
call
push
pop
scas
repz
movl
inc
mov
aam
les
jne
jb
mov
cli
bound
jne
popa
jle
add
dec
push
pop
pop
inc
les
fbstp
clc
call
aad
lds
stc
cmpsl
cmp
and
cs
imul
fldenv
cmp
mov
lcall
es
cld
out
xchg
sbb
jno
ficoms
push
mov
jne
cli
mov
bound
fs
adc
aad
adc
mov
mov
jnp
iret
data16
fldt
inc
sub
scas
add
test
push
push
dec
je
xchg
pop
bound
bound
cli
mov
lods
xchg
test
aam
inc
ja
or
andl
jno
out
xor
push
sbb
and
int
cmp
les
lahf
push
cmp
fwait
mov
jp
pop
bound
fs
and
mov
imul
inc
cmpsb
mov
mov
hlt
xchg
sub
mov
movsl
push
loop
andb
xchg
adc
jns
imul
and
cmp
arpl
dec
jae
jbe
adcl
xchg
fcompl
pop
stos
adc
and
imul
or
sub
mov
sti
mov
lcall
js
adc
cmp
in
call
mov
fwait
into
cmpsb
in
jno
ret
cmp
pop
xor
mov
cmp
pop
rcll
cltd
mov
inc
push
jo
fdivrs
ja
jne
fstl
jecxz
notb
cmp
pop
jno
gs
push
push
push
int3
mov
xchg
inc
gs
xor
mov
rcl
xchg
insw
mov
cld
sbb
iret
mov
xchg
fdivrs
fisubl
je
mov
loop
cld
push
cmp
sti
mov
inc
enter
int
movsb
add
out
mov
insb
imul
clc
dec
xor
call
cld
adc
icebp
lock
enter
iret
mov
sbb
stos
xchg
sub
sub
repnz
sbb
xchg
push
es
fsubrs
pop
pop
sbb
fyl2xp1
mov
sti
xlat
jmp
loope
cmp
pop
sbb
cmp
out
test
insb
fcompl
fisttpl
ret
fs
pop
lds
adc
and
aas
fimull
call
jo
sbb
cwtl
adc
inc
push
sub
pop
cmp
adc
inc
cmp
xchg
xor
dec
jne
gs
in
xor
push
push
hlt
xchg
adc
mov
push
inc
jnp
adc
lret
xor
dec
jbe
sbb
push
setp
add
sub
cmp
in
xchg
mov
rorl
jge
mov
jae
mov
aam
xor
jo
aam
popa
xor
adc
adc
bound
jns
bound
lret
pop
outsl
adc
addr16
pop
add
xor
outsb
or
adc
stos
lock
imul
cmp
dec
jge
cmp
dec
mov
mov
sahf
pop
or
sub
mov
pushf
aad
mov
push
scas
aam
imul
xchg
inc
insb
lret
cmp
dec
data16
add
dec
pop
xorl
or
and
mov
fs
push
pop
cwtl
xchg
push
loopne
inc
pop
and
rorb
xchg
sbbb
mov
imul
push
pop
int
sbb
fs
les
sub
cmp
cmp
and
xchg
pop
xchg
into
add
jo
jmp
loop
je
js
mov
bnd
pop
lds
cmp
jg
cwtl
lcall
sbb
cmp
inc
dec
xorl
inc
jecxz
dec
adcl
lcall
in
jnp
dec
fs
in
xor
int
lret
xchg
call
jnp
sbb
or
loopne
lds
push
sbb
cmp
test
and
orl
fwait
dec
orb
cmp
in
lods
xchg
loopne
mov
lcall
mov
out
aam
jmp
cli
pop
mov
je
jns
mov
sahf
repnz
and
push
std
cmp
stos
mov
dec
cmc
dec
test
scas
push
cmp
test
cmp
jno
adc
push
dec
lock
les
mov
fucomi
mov
sahf
addl
fists
sbb
sbbb
xchg
add
add
mov
fcomps
pop
jle
cltd
insb
push
enter
bound
jg
sub
in
xor
add
pop
xchg
mov
jge
push
add
cmp
adc
mov
stos
jnp
inc
icebp
add
mov
stos
add
aam
nop
fldt
add
lcall
mov
push
int3
mov
sahf
or
and
arpl
dec
or
xchg
sbb
dec
jecxz
lock
dec
decb
cmpsb
pop
test
or
jg
mov
sarb
lahf
jmp
jno
jecxz
dec
sbb
loope
pop
cmpsl
mov
mov
insl
loope
cmp
ds
pop
loop
cwtl
or
jo
mov
shlb
adcb
jns
xchg
cmp
cmp
int
out
mov
xchg
call
lods
in
gs
pop
aas
jg
jae
movhlps
insl
cmp
mov
cld
sbb
push
dec
in
cmp
add
jno
outsl
hlt
loope
arpl
or
mov
jge
xchg
gs
jbe
sti
sahf
dec
aaa
stos
ret
insb
dec
push
adc
inc
inc
or
push
mov
bound
jnp
adcl
mov
mov
mov
cmpb
test
xchg
pushf
jne
iret
push
sbb
cmp
jae
jnp
andb
push
stc
cmc
inc
ret
adc
das
xor
scas
cld
xchg
fs
xorb
inc
xchg
mov
dec
or
and
int
pop
sbb
mov
aad
out
add
out
aas
jns
xor
lahf
adc
je
jl
jns
popa
mov
xchg
arpl
aad
push
fs
cwtl
clc
push
xchg
jo
push
and
pop
mov
jo
fwait
roll
fldt
mov
pop
sbb
jno
mov
sti
or
cwtl
jnp
xlat
xor
mov
dec
rcr
push
jle
xor
push
adcl
lcall
mov
and
add
mov
bnd
clc
jge
dec
mov
fdivs
sub
addb
mov
call
pop
jge
jae
enter
subb
mov
mov
ss
push
push
add
mov
and
cmpsl
push
movsl
jno
cmp
lods
sbbl
xchg
fldt
leave
subb
iret
jb
jno
inc
sub
addr16
pop
xchg
aas
mov
sbb
mov
insl
lea
xor
loop
dec
mov
push
pop
pop
popa
sahf
insb
push
push
out
xorl
add
incl
mov
xor
aam
aam
pop
movsb
jp
dec
xchg
dec
jle
andl
add
leave
rolb
sub
inc
sub
scas
pop
jp
bound
cwtl
xor
rolb
frstor
pushf
lcall
mov
int3
arpl
mov
cmp
data16
xchg
cs
xor
fcomps
cwtl
sbb
adc
dec
call
adc
jbe
or
cwtl
addl
cs
popa
fcmovnbe
and
clc
dec
adc
add
or
fdivl
dec
icebp
xor
xchg
psubb
loope
clc
xchg
out
and
mov
push
rcl
add
cmp
jb
aam
pop
mov
dec
jle
cmp
insb
cwtl
cmpsl
push
or
jnp
fs
lds
mov
jae
xchg
arpl
pop
xor
sarl
popa
fwait
or
dec
subb
cmp
into
push
mov
inc
pop
aam
and
cmpsl
pop
xchg
push
jno
cmp
and
popl
fcompl
aad
mov
push
gs
addb
add
dec
xchg
aad
sub
fnstcw
stos
xor
cmp
cli
ret
cmpsl
mov
dec
xchg
cltd
in
imul
pop
dec
xchg
cmp
int3
mov
clc
mov
mov
jecxz
dec
inc
push
jg
pusha
jnp
mov
inc
popa
inc
and
fs
xchg
dec
dec
bound
cmpsl
sub
jne
push
xchg
xor
aad
lds
xor
dec
scas
jmp
sub
xor
sbb
ljmp
xor
push
insl
and
xor
push
cmpsl
cmp
push
push
sbbl
sti
lret
mov
or
lds
int
mov
setb
jge
fs
or
sub
jo
adc
and
fsubs
mov
or
push
test
adc
or
inc
lea
lahf
int3
loope
imul
mov
lea
jl
fnstsw
push
daa
cmp
mov
ret
sbbl
sub
fwait
mov
daa
int3
mov
fdivl
and
xchg
andb
mov
jge
and
cli
mov
dec
push
test
xchg
cmp
push
loope
imul
jns
cmp
insb
pop
sub
fisubrs
frstor
fmul
adc
imul
mov
ret
hlt
mov
jne
or
add
fiadds
jns
arpl
jge
jbe
icebp
fnsave
lods
cmp
scas
je
add
nop
aad
add
mov
sbb
and
pop
test
sbb
cmpsw
test
andl
mov
mov
into
shrb
xchg
test
adc
sbb
out
fsubrs
jno
or
fstpl
dec
in
sub
jne
mov
lock
out
repnz
mov
inc
int3
jg
mov
push
mov
movsb
ds
jmp
add
dec
aad
dec
adc
and
xchg
pop
xor
jb
stc
subb
loop
add
inc
mov
pop
jl
sahf
mull
pop
pop
pop
rcll
addl
scas
push
ja
mov
mov
jbe
cltd
cmpsb
sub
jae
or
xorb
xchg
es
lds
push
mov
test
scas
je
sbb
or
jle
mov
cmp
dec
negb
mov
adc
cmpsb
sub
push
mov
dec
jecxz
dec
sbb
jo
lock
hlt
fadds
and
sub
jecxz
std
adc
push
cmp
inc
push
pop
pop
inc
movsb
ljmp
dec
pop
scas
xor
arpl
push
clc
cmp
popf
inc
andb
jmp
ss
dec
or
sbb
mov
out
mov
pop
dec
mov
lahf
inc
sub
fcomps
xor
ja
push
frstor
es
sbb
xor
imul
lahf
adc
push
push
pushl
lcall
clc
movsl
inc
cs
jge
aas
xchg
notb
fstpl
lds
pushf
addr16
push
jecxz
mov
xchg
out
ret
orl
cs
mov
popf
movsb
ficoms
test
adc
fnsave
dec
gs
aad
mov
adc
movl
dec
sbb
push
mov
mov
int3
mov
fdivp
lret
ss
xchg
outsl
ja
lret
push
sbb
pop
stc
xor
mov
mov
push
push
fldenv
jge
jp
jns
out
cwtl
cmp
sbb
sub
fisubl
loope
incl
xchg
mov
sti
or
mov
subb
repnz
dec
loop
inc
les
mov
push
loop
insb
fbld
popa
xchg
dec
aam
cmpsl
cmp
movsl
ljmp
xchg
rcll
fwait
inc
hlt
push
stos
sahf
add
jmp
dec
mov
lret
add
jno
xor
fcomp
cmp
lock
enter
aas
sbb
and
jl
insb
sub
bound
repz
push
js
mov
mov
scas
aam
add
aas
pop
lahf
mov
sub
je
jo
lods
lock
clc
mov
push
repnz
dec
movsb
popa
and
xchg
push
rcll
mov
hlt
cmp
ss
icebp
push
jne
fisubl
scas
les
shll
enter
mov
cmpsl
cltd
cmp
mov
sub
sub
fidivrl
out
jecxz
lahf
movsl
out
cmpsb
xchg
fldt
test
xor
adc
adc
adc
dec
add
jno
stos
add
int3
push
movsl
test
inc
subl
enter
fwait
cmp
xor
xchg
push
sub
sub
adc
les
dec
repnz
ss
flds
into
fwait
xor
jo
test
add
jnp
popf
popa
jle
ja
mov
outsb
and
sub
jg
fs
cmpl
push
mov
xchg
ljmp
in
out
or
and
outsl
lock
loope
cmpl
xor
lock
cs
shll
das
shll
jo
and
out
loopne
inc
out
jmp
dec
pushf
lods
cwtl
mov
pop
ja
cwtl
jecxz
mov
pop
rcrl
dec
lcall
pop
out
cwtl
rcr
jo
jb
xchg
sub
das
outsl
aam
in
mov
aam
cmp
movsb
sbb
popa
mov
fbstp
xchg
cmc
mov
addr16
add
mov
andb
adc
into
cmp
sub
and
jo
incb
and
aam
jnp
jl
adc
mov
in
mov
xchg
sub
pop
pop
out
icebp
and
mov
xchg
and
movsb
mov
xorb
bound
mov
into
jg
inc
mov
mov
dec
aam
insl
decb
sbb
cmpsl
jns
pop
pop
mov
mov
and
mov
jg
or
xchg
jle
cmp
pop
xor
sbb
push
adc
add
inc
mov
xor
fldl
push
pop
mov
jg
dec
in
les
mov
popa
mov
jge
push
sub
add
adc
mov
fwait
cmp
mov
inc
cmp
jno
push
sbbb
or
out
int
adc
push
xor
xlat
push
xchg
inc
pop
jno
daa
xor
lods
mov
cmp
insl
adc
cwtl
ret
jge
xor
push
ret
test
cmp
fdivs
cwtl
mul
adcl
les
lea
jnp
stc
xchg
mov
pushw
cmp
popa
or
sbb
std
add
sbb
inc
jg
xchg
mov
scas
movsb
xchg
jge
lret
call
and
add
sub
mov
mov
lret
inc
icebp
adc
lea
jge
inc
and
mov
and
jb
stos
add
cwtl
mov
bnd
leave
dec
cmp
jge
call
ja
inc
ja
test
pop
and
adc
adc
mov
mov
mov
mov
mov
icebp
adc
insb
xchg
mov
call
arpl
xchg
sahf
mov
lods
movsl
push
jp
outsb
sub
js
jnp
jl
lock
jle
xchg
mov
sbb
cmp
push
cwtl
cmp
lret
jne
das
pop
cli
jge
ret
push
dec
mov
xchg
or
nop
add
leave
xor
orl
add
jg
lds
mov
xor
clc
mov
fwait
pop
push
les
out
repnz
jns
imul
into
pop
ret
div
push
es
mov
out
mov
dec
cmp
icebp
push
fildll
sub
mov
fsubrl
xchg
mov
scas
lcall
cmp
js
gs
xor
adc
jg
dec
mov
dec
std
addr16
int
fidivrl
iret
pop
sbb
mov
adc
jp
rolb
aad
fisubrl
int3
mov
dec
push
icebp
mov
adc
les
and
dec
pop
imul
pop
nop
mov
or
das
mov
pop
adc
cmpsl
aas
addl
mov
fisttpl
jp
lods
inc
cwtl
popf
push
inc
and
arpl
iret
mov
test
mov
shrl
inc
addr16
pop
cmp
sti
flds
scas
xchg
cmp
loope
add
pop
lret
xchg
jp
pop
cmpsb
cmp
iret
ljmp
mov
xchg
xchg
or
mov
jne
pop
sbb
movsl
mov
mov
sbb
pop
xlat
fadd
pop
cmp
or
dec
mov
je
inc
cwtl
sbbl
lret
push
cmp
into
outsb
adc
fsts
pushf
into
mov
loope
fmuls
add
arpl
rcll
test
mov
ficoms
mov
push
cmp
jmp
lods
sbb
pop
les
adc
loopne
out
sarl
jno
jmp
cmc
mov
dec
mov
je
cmp
dec
inc
andb
mov
jg
addw
mov
int
push
push
jb
adc
fwait
movsb
inc
mov
dec
or
insb
cmp
out
orl
movsl
popa
insl
dec
mov
rcrl
add
pop
or
push
mov
xchg
dec
fsubrs
fldt
cwtl
and
xchg
inc
and
jae
lds
dec
je
aas
dec
aaa
aad
cmp
sbb
xchg
dec
testl
inc
test
pop
lcall
lahf
pop
pop
xchg
cmp
pop
jl
ficoms
nop
test
mov
aad
sbbl
pop
mov
push
cmp
jne
aam
jecxz
test
cmp
aas
cltd
dec
push
fdivs
jno
mov
mov
test
cmpsl
add
clc
test
pop
int3
loop
ficompl
push
stos
and
jge
or
xchg
nop
push
mov
out
fs
sbb
cmc
cmp
xor
jnp
jns
jne
jbe
stos
or
push
push
cmp
add
out
cmc
jb
pop
jge
inc
cld
fdivrs
loope
xor
push
lds
pushf
fldt
movsl
cmp
test
mov
cmpsl
cmp
dec
or
dec
fdivs
jne
fs
daa
sarb
cmc
sti
pop
cmp
cmpsl
cmpsb
xor
mov
aad
orl
cmp
test
and
pop
pop
sub
xor
xchg
pop
cmpb
stos
pop
movsb
cmp
test
lods
repz
pushf
mov
pop
ja
mov
mov
cmp
pop
lock
mov
fcomps
jnp
dec
push
test
jo
lds
iret
pushf
pop
loopne
sahf
cmp
jae
add
in
pop
imul
pop
leave
inc
ja
inc
jne
inc
jne
lret
mov
mov
aas
xchg
add
mov
dec
jnp
mov
scas
cmp
lds
pop
or
loopne
cmpsl
test
iret
mov
test
jnp
jne
mov
lds
jg
dec
aaa
push
xchg
mov
arpl
pop
jle
test
mov
in
mov
mov
sbbl
sahf
cld
mov
cmc
lock
mov
rcrb
mov
push
inc
mov
cmp
mov
aam
lods
test
pushf
cmp
fmuls
mov
inc
les
jecxz
jo
sub
push
dec
pop
icebp
jo
sbb
and
les
or
sub
jl
cltd
xchg
xchg
jecxz
cltd
jg
mov
test
pop
and
jb
sub
es
push
sbb
cmp
pusha
mov
or
push
das
jl
push
add
pop
subl
fisubs
shrl
push
mov
gs
lret
std
fs
dec
imul
arpl
ffree
inc
outsl
mov
frstor
sbbb
out
xchg
xor
xchg
inc
pop
fcompl
xchg
mov
lods
test
push
xchg
push
xchg
loope
pop
in
test
dec
or
cmpsl
outsl
addl
andw
dec
lock
lock
xchg
cwtl
cmpsl
sub
push
push
arpl
ja
mov
popa
cmp
cmpsb
lods
xorb
mov
push
pushf
push
fwait
sub
sub
testl
les
mov
mov
lds
inc
pop
imul
mov
lods
shrl
mov
jnp
addr16
dec
sub
mov
inc
scas
dec
pop
inc
iret
and
adc
loope
mov
movl
mov
pop
jl
arpl
push
stos
cmp
xchg
jo
jne
sub
ja
xchg
in
push
dec
push
cmpsl
cmp
jp
fildl
adc
in
test
mov
int
push
stos
rcll
gs
notl
test
and
sbb
jg
mov
and
sahf
dec
sbb
int3
jl
mov
ja
pop
mov
jecxz
bound
test
inc
stos
into
in
fcomps
cld
cwtl
cwtl
sahf
mov
lods
fwait
mov
sub
dec
add
clc
into
hlt
or
push
or
ja
jge
movsb
jge
mov
mov
mov
popa
inc
cmp
iret
inc
adc
das
lret
xor
in
cmp
pop
cltd
lcall
mov
jge
mov
lcall
shll
loop
pop
iret
jp
pop
pop
les
mov
jmp
xor
jle
test
ja
or
jg
push
mov
popf
sbb
fldenv
mov
xor
or
and
or
cmpb
outsl
test
repz
arpl
andb
push
xchg
mov
mov
fmull
xor
sbb
clc
push
add
scas
scas
sub
sub
and
andb
aad
pop
fdivs
popa
out
xchg
cmpsl
add
scas
sti
scas
sub
jecxz
call
push
mov
mov
fwait
mov
fadds
in
cmp
sub
outsl
inc
mov
subl
aam
mov
xchg
mov
gs
adc
push
xchg
fcmovb
pop
xchg
cltd
lods
imul
ficomps
mov
add
pop
repnz
push
mov
fstps
mov
fsubrs
out
jno
cmp
xor
and
inc
ret
cmc
cwtl
pop
cmp
in
js
push
fucom
rcrl
mov
jp
ret
ror
lahf
xor
dec
xor
adc
data16
jg
sbb
cmpsl
and
out
mov
jae
push
inc
ljmp
inc
add
jle
lea
dec
xchg
lret
cmp
or
pusha
ljmp
xor
mov
cli
pop
lods
int3
inc
pusha
xchg
mov
ret
fwait
js
adc
fbstp
mov
cmc
icebp
cwtl
mov
in
shlb
pusha
out
call
idivl
jne
pushf
loop
mov
pop
imul
ret
jg
mov
icebp
push
mov
lock
pop
push
xor
fsubl
call
pop
mov
cmp
or
fs
push
xor
xlat
push
outsb
push
push
sbb
int
sbb
jno
inc
jnp
je
add
push
mov
imul
call
das
cmp
mov
mov
jno
data16
and
cmovbe
mov
call
stc
sbb
inc
in
jo
mov
pop
mov
or
nop
or
pop
sbb
out
push
leave
mov
inc
sub
xor
lods
popf
fcmovnu
xlat
pop
fadds
pop
popa
je
loopne
sub
xor
and
push
loopne
mov
mov
sbbb
cmp
pop
outsl
mov
int3
pusha
pop
jo
xchg
cmp
mov
popa
fstpl
in
mov
inc
into
insb
jo
mov
lods
mov
lds
push
inc
outsl
insb
mov
cmp
mov
cmpsl
in
cmp
xor
aad
mov
arpl
xchg
fsub
mov
xchg
fidivrl
movsb
mov
orb
adc
cmp
in
push
fstps
sub
xor
ljmp
sub
inc
ja
cmc
pop
and
pushl
imul
icebp
mov
test
fcompl
popa
pushl
les
subl
or
jecxz
fistpl
xchg
push
pop
push
dec
sti
sbb
and
loop
shl
rorb
jb
jb
cld
pop
cmp
add
ja
add
push
mov
or
jne
test
mov
and
dec
repnz
stc
into
mov
or
cwtl
push
fidivrl
xchg
daa
inc
popa
jl
cmpsl
inc
and
mov
lea
loop
data16
decl
lds
push
lods
xchg
inc
cmp
pop
leave
adc
int
ficompl
sbb
call
or
into
mov
outsb
push
inc
mov
cmp
mov
jns
imul
fwait
adcl
add
adc
or
subb
fadds
mov
inc
in
gs
dec
pop
and
mov
cmc
in
stos
daa
xor
jne
in
and
cmp
or
push
inc
cmp
inc
decb
loope
mov
gs
adc
pushf
out
gs
andb
cltd
rorl
out
aam
addr16
in
push
fistpl
pop
and
leave
dec
icebp
lods
inc
int
out
or
aam
stos
inc
sub
andb
push
dec
les
push
bound
and
in
cmp
xor
call
inc
lock
mov
inc
inc
cmp
adc
jp
mov
pop
ljmp
and
sbb
insb
ljmp
mov
mov
iret
xor
mov
loopne
mov
aaa
into
lahf
xor
mov
mov
mov
add
les
out
jg
jnp
pop
inc
adcl
jbe
je
pop
les
popf
dec
popa
into
jnp
push
mov
bound
jl
fs
shrb
cmp
xchg
mov
jo
xchg
popf
cmpsb
push
in
adc
fs
scas
sbb
jo
test
pop
dec
jmp
or
addb
fwait
jne
into
es
dec
cmp
popa
lds
push
test
scas
insb
out
bound
pop
pop
gs
push
sahf
rcll
mov
bound
push
jb
push
mov
dec
mov
mov
inc
ljmp
mov
push
stos
les
add
cmpb
pop
je
mov
arpl
scas
lods
push
xor
inc
push
mov
xchg
popa
addb
pop
add
inc
xchg
xchg
push
mov
push
test
pop
jp
fisubrl
mov
adc
push
test
xor
sbb
icebp
or
jno
jbe
cmp
movsl
mov
loope
sub
inc
pop
push
jle
cltd
ss
dec
inc
inc
ljmp
dec
push
xchg
out
ss
int3
push
add
int3
jp
fbstp
mov
in
or
mov
jp
mov
sti
ja
mov
lret
inc
adc
xchg
jo
xor
xchg
test
lcall
loop
mov
js
xchg
adc
mov
and
and
aas
add
mov
movsl
inc
fldenv
push
dec
push
or
js
sbb
sahf
pop
aam
js
push
push
push
mov
mov
je
mov
js
xchg
je
dec
pop
faddl
push
imul
lods
bound
js
clc
in
insb
loop
mov
fistpll
ss
or
pop
pop
push
add
js
pop
insb
cmp
iret
in
jae
xchg
sub
xor
pop
jo
mov
or
jo
mov
or
jae
shr
popa
insl
jg
mov
or
icebp
ss
imul
mov
dec
cmp
xchg
dec
fst
mov
testl
fstl
or
cmp
loope
or
inc
mov
cmc
or
cmpsl
lahf
test
in
dec
and
hlt
mov
jne
mov
add
jmp
test
in
std
es
cmp
pop
xor
cwtl
data16
bound
jnp
jge
test
fisubl
dec
or
inc
aam
pop
outsl
fs
data16
int3
les
idivb
mov
cmp
sbb
cltd
mov
mov
dec
sub
or
lods
emms
pop
cmpsl
sahf
mov
fldenvs
fsubs
xor
sbb
push
mov
in
inc
sub
mull
mov
fildl
outsb
cld
scas
dec
sub
fldt
fsub
inc
cmp
adc
fwait
cwtl
pop
mov
bound
lds
leave
dec
pop
xchg
ss
in
mov
cmp
fiaddl
test
out
adc
arpl
add
or
repz
lds
cltd
imul
sbb
inc
inc
insb
jns
ret
jns
adc
jbe
cs
push
pop
fs
mov
dec
repnz
inc
loop
sbb
push
push
aam
dec
add
pop
into
push
mov
insb
and
cmp
jg
aaa
cmp
jg
call
enter
cmp
xchg
jo,pn
pop
mov
stos
fstp
dec
insl
pop
dec
fcompl
cmpsb
lcall
lret
rcrl
cmp
leave
push
inc
add
loope
int
pop
push
cmpsl
cltd
sti
je
cli
dec
int
dec
int3
in
sub
scas
jmp
cmp
cmpsl
mov
jg
repz
xchg
fldenv
xchg
or
aam
mov
fsubrl
cmp
loopne
add
xchg
bound
aad
out
pop
jne
repnz
insb
pushf
jnp
fisubl
adc
fcomps
xchg
iret
aad
iret
xlat
or
push
sbb
sbb
mov
xchg
inc
xor
stos
enter
cmp
dec
jmp
jno
sbb
push
push
cmp
fnsetpm(287
shll
rcll
fstps
fadd
mov
into
mov
shl
push
dec
jno
movsb
out
out
or
xchg
push
cmpsl
cmpb
fmull
icebp
mov
bound
aad
mov
xchg
or
stos
sub
xor
cmp
call
xlat
or
sti
sahf
aas
ret
push
dec
jae
jae
inc
lcall
icebp
addl
xchg
sbbb
in
fs
xor
imul
mov
imul
push
xchg
jne
jb
jmp
adc
or
test
jb
je
hlt
pop
push
add
cmp
sbb
adc
sub
bound
outsb
fidivl
adcl
test
mov
movsb
in
xor
in
fidivrl
lds
js
mov
popa
sti
mov
adcl
jns
addr16
repnz
movsl
shrl
jne
and
arpl
pop
and
les
dec
xor
push
mov
jnp
lock
stos
jno
nop
scas
lods
sbb
cmp
pop
pop
int
ret
or
andb
sbb
cmp
fsubl
pop
shl
in
push
rcrl
cwtl
pop
push
jno
arpl
pop
aas
nop
int
cmp
xorl
aam
and
les
outsb
cmpxchg
xlat
cltd
jno
sbb
cmp
push
xchg
addl
jae
icebp
ja
cmp
pushf
imul
lahf
cmp
fcompl
shlb
dec
imul
fnstcw
jo
cmc
or
clc
scas
clc
pop
xor
out
mov
mov
iret
leave
test
movsb
cmp
lods
jg
cmpsb
inc
leave
clc
pop
int
jle
ja
rcll
jge
jne
outsb
mov
and
push
fcompl
cwtl
or
mov
je
pop
pop
inc
clc
jae
cmp
cmp
sbbb
xlat
pop
mov
inc
jne
mov
test
push
inc
sbbl
popa
in
insb
cmp
mov
gs
outsl
pop
into
jl
jne
inc
inc
push
lahf
lds
push
or
inc
lods
leave
mov
dec
lock
xchg
loopne
in
xchg
adc
mov
fwait
push
dec
daa
cmc
psubusb
pop
iret
mov
scas
aad
mov
test
fwait
ds
lcall
or
in
mov
or
aam
push
mov
test
enter
pop
adc
sbb
xchg
les
push
cmp
jle
mov
insl
fcmove
insb
mov
jecxz
xchg
inc
stos
adc
lcall
cmp
xchg
pop
xorl
out
pop
fdivs
inc
pop
inc
bound
call
dec
outsl
jae
jo
repnz
jae
jo
bnd
decb
sbb
jo
movsb
xchg
xor
scas
xorl
xchg
fistpl
jnp
out
dec
push
adcl
rol
pushf
ffree
js
insl
pop
in
les
int
cmpsl
push
push
mov
cmp
test
mov
sbb
ljmp
xchg
push
rep
mov
jl
outsb
jg
aaa
add
mov
jnp
jp
int
gs
out
ret
inc
sbb
loope
mov
mov
fldcw
test
aad
int3
shrl
mov
mov
das
sbb
test
jle
arpl
lret
fcmovnb
gs
and
out
jno
mov
dec
add
cmc
daa
cwtl
dec
insl
cmc
xchg
out
subl
lret
pop
aam
lret
sub
sbb
sbb
cmpsl
jb
adc
mov
clc
aad
and
jge
leave
xchg
jnp
mov
mov
cmp
sarb
lods
push
push
sarb
test
lock
in
xchg
lret
add
mov
cmp
and
push
lds
jns
pop
fsubrp
es
lea
fsubrs
pop
cmp
dec
sub
and
push
fisubrs
jne
sbb
mov
aam
addr16
cmp
add
jno
push
aam
clc
jno
or
pushl
fistps
sti
out
mov
cmp
lret
sbb
imul
jo
cld
xlat
sbb
jae
lcall
leave
addr16
sbb
mov
aam
popf
aas
out
inc
scas
mov
jno
push
jae
xchg
mov
movsl
in
inc
in
movsl
in
mov
mov
fnstcw
ret
fs
lcall
pop
sarl
fsubrl
sbb
int3
jno
push
dec
push
lock
mov
imul
dec
adc
push
inc
push
imul
push
adc
fldl
push
cmpsb
minps
sahf
sbb
jg
ss
xchg
pushl
mov
adc
xchg
out
sbb
adc
mov
pop
cmp
pop
fnstenv
mov
cmp
xor
jecxz
jns
leave
pop
sbb
pop
xchg
int3
adc
dec
mov
xchg
cmp
sbb
daa
shll
loope
push
cmp
lcall
dec
arpl
dec
ret
test
movzbl
cmpsb
and
jae
mov
mov
dec
dec
mov
repz
jno
popa
add
pushf
fdivrs
fcompl
call
cmp
jle
out
add
jg
loopne
jmp
cmp
sbb
fcoms
fsub
ja
jg
les
pop
iret
xor
aam
enter
push
pop
cmp
add
cmp
fnsave
jns
call
pop
out
cmp
jge
sbb
jge
test
imul
inc
movsb
sbb
mov
int3
lea
aaa
pop
sub
mov
jg
lret
cli
js
mov
sub
mov
in
cmp
fadds
jns
pop
pop
pop
mov
inc
cmpsl
cmpsb
sub
lcall
aad
mov
mov
mov
ja
xor
pop
mov
fadds
jg
cmp
xor
test
aam
xor
clc
pop
repnz
cmp
mov
out
push
push
sbb
push
or
fisubrs
jno
pop
add
cs
xor
pop
pop
xlat
into
push
cmp
imul
addr16
ret
aad
dec
push
mov
inc
push
cltd
pop
xchg
xorb
jb
pop
dec
inc
fistpll
sti
fistpl
dec
push
ret
dec
fld
test
xor
mov
jge
inc
in
mov
test
test
xor
cmp
add
out
rorl
push
push
pop
pop
xchg
push
out
js
rcll
in
pop
push
stos
jle
into
enter
es
lret
out
dec
cs
movsb
pop
fcmovnbe
out
int
out
stos
inc
xchg
push
cltd
ja
gs
jp
xchg
sub
dec
push
lret
cmpsb
loope
insl
mov
xor
dec
jmp
popf
mov
mov
lahf
mov
push
add
je
repnz
fsub
leave
pop
gs
xchg
shl
mov
push
flds
jno
sbb
cmp
add
mov
xor
into
frstor
xchg
cwtl
mov
mov
push
cmp
cmpxchg
xchg
jbe
mov
into
add
cmpsb
out
in
sahf
mov
adc
and
ja
mov
push
jge
and
and
dec
mov
mov
out
sti
cmpxchg
fsubs
cmp
push
push
mov
lea
popl
cltd
cmp
cwtl
repz
cmp
sub
into
add
testb
adcl
sbb
xorl
fsubrs
mov
add
adcl
gs
mov
fwait
mov
in
fdivrs
icebp
ja
lock
les
mov
cmpb
rorl
jle
push
loopne
jns
inc
rcll
aad
pop
in
inc
scas
pop
lds
jmp
cli
push
bound
pushf
pop
sub
lods
jnp
ret
enter
daa
push
push
cmpsb
mov
push
cmc
pop
jg
ds
aam
jno
xlat
mov
test
push
loop
loope
popa
movsl
fwait
pop
fcomps
or
pop
push
int3
loopne
jmp
les
data16
je
mov
adc
mov
mov
and
das
subb
out
in
inc
ljmp
aaa
mov
add
cmp
jecxz
loopne
lcall
fsubl
cmp
clc
xchg
rclb
lds
mov
pop
sbb
jno
adc
mov
sub
mov
sbb
mov
decl
mov
pop
xor
mov
adc
mov
sbb
jmp
fst
cwtl
sbb
mov
cld
add
arpl
add
adc
out
jo
ret
jge
aas
fcoms
push
sarb
add
out
pop
cmp
jb
adc
jno
rorb
push
cmp
ds
push
scas
ljmp
fadds
dec
movsb
call
push
popl
aas
mov
outsb
mov
jmp
add
shlb
fxch
jge
fwait
dec
pop
loop
mov
cmp
push
xor
or
lcall
popf
sub
fdivs
cmp
jne
xchg
xchg
cwtl
mov
pop
sub
or
xlat
cmc
inc
xor
xchg
mov
xor
jae
mov
orl
pop
fmuls
fs
test
lock
add
lock
sub
adc
xchg
mov
mov
add
jo
mov
push
dec
dec
fildl
dec
xchg
push
cmc
mov
fs
add
test
jg
test
imul
addl
adc
popa
inc
in
movsl
mov
mull
jb
dec
xchg
leave
fisttps
fxch
sub
test
jb
mov
mov
xor
xor
jno
lret
test
inc
inc
xchg
mov
daa
xor
xor
lret
push
sub
add
lea
cvtps2pd
sub
scas
xor
or
mov
xor
test
stos
repz
flds
adcl
mov
cmp
adcb
daa
insl
arpl
jge
sub
mov
xchg
mov
dec
push
mov
mov
hlt
je
and
inc
out
push
cmpb
imul
fs
mov
insl
sbb
loope
xor
sti
cmp
addl
les
xor
test
fldcw
fisttpll
and
or
mov
xchg
pop
mov
mov
dec
sbb
sbb
sets
adc
lret
jns
inc
out
sbb
sbb
xor
rcrl
push
lods
xchg
dec
cmpb
cmpb
cmovg
mov
mov
inc
or
lret
ficomps
inc
arpl
xchg
cli
mov
ficoml
mov
aas
sbb
jae
lock
aaa
jbe
and
negb
leave
movaps
insb
cmpsb
mov
cmpsl
jmp
xchg
or
in
xchg
shll
xchg
sarb
sub
dec
mov
pushf
mov
sub
lods
aam
sub
jecxz
mov
or
in
icebp
popf
xor
test
xor
and
inc
mov
add
mov
and
insl
out
adc
mov
push
leave
xor
jns
fdivrl
out
enter
lcall
das
test
inc
mov
push
adc
push
lods
mov
fistpl
into
jno
dec
pop
cmp
pop
insb
dec
sub
mov
jb
jae
mov
or
dec
js
mov
push
push
divl
add
jbe
imul
xor
dec
cmp
cmp
lds
mov
rcll
arpl
popf
ja
push
les
loope
mov
xchg
stos
jo
shl
or
sbb
lret
dec
jnp,pt
and
inc
jnp
inc
jnp
mov
mov
cwtl
cmp
cmpsl
fdivs
inc
lock
inc
andl
xor
xor
hlt
cwtl
mov
out
rcll
aad
decl
pop
out
cld
in
rol
push
rol
mov
es
sbb
cmp
xorb
rcl
push
les
sub
popf
imul
stc
and
or
mov
repz
mov
sbb
lret
mov
into
cmpsl
nop
or
xchg
popa
aaa
jnp
test
sahf
sub
lods
push
leave
mov
aad
jo
or
mov
jns
jmp
add
aaa
aam
adc
sbb
jo
mov
test
shll
mov
das
test
mov
xchg
in
int
jmp
jae
mov
add
les
inc
scas
or
mov
fadds
mov
jne
jg
dec
movnti
cmp
aaa
not
inc
pop
mov
out
andb
cmp
push
stc
fstps
lock
dec
fwait
xor
cmp
out
cmpsb
dec
mov
add
outsl
adc
push
push
fstpt
aam
inc
jno
stc
add
dec
rorb
mov
dec
test
pop
xchg
sahf
xchg
test
and
jae
cmpsb
inc
out
in
movsb
bound
cmp
xchg
jne
cmp
cmc
sub
lods
jecxz
cmp
cmc
mov
cmpsl
pop
inc
je
or
push
out
or
test
frstor
movd
lret
mov
insb
in
inc
fimull
or
rclb
cmpsb
insl
cmp
pop
cmc
cmpsl
cmp
inc
repz
lcall
scas
push
add
dec
mov
sub
xlat
mov
xchg
dec
lret
sbb
jno
mov
dec
lds
mov
les
inc
sub
dec
faddl
adcl
sub
inc
xchg
push
int
lret
sub
shll
pushf
mov
stc
inc
jg
stos
sub
lret
mov
cmp
mov
in
cld
fistl
loopne
sub
inc
xor
pop
dec
mov
jno
mov
adc
pop
push
jbe
adc
bound
cmp
aas
lret
push
inc
mov
cmp
adc
call
outsb
cli
popa
fwait
jmp
dec
push
adc
sbb
pop
loopne
xlat
mov
mov
pop
mov
push
es
fs
inc
stc
aaa
cmpsl
iret
dec
mov
cmp
xorl
xchg
adc
inc
jmp
xorl
xor
xchg
inc
aas
jge
aas
movsb
mov
sbb
add
or
cmpsb
cmp
jnp
stos
stc
mov
loope
push
ljmp
pop
jb
ret
mov
push
cwtl
jne
leave
push
push
dec
jecxz
fnsave
sbb
mov
mov
cmp
mov
lock
adc
leave
xchg
loopne
mov
gs
dec
mov
mov
push
in
outsl
mov
xchg
fisttpl
sub
pop
imul
inc
test
add
xchg
fsts
and
and
aad
mov
dec
jecxz
orl
xor
xor
jne
sarb
fs
pop
mov
stos
mov
xor
xor
and
jle
sub
loopne
test
popa
stc
xchg
mov
lret
mov
cmp
xor
call
imull
jns
orb
outsl
bnd
divb
mov
push
mov
inc
xchg
lahf
push
push
in
adc
das
pop
cltd
and
ret
in
mov
ficomps
je
mov
ret
mov
cmp
mov
or
sbb
ja
lods
and
xchg
out
test
sub
les
dec
rclb
mov
fsubp
mov
test
leave
cmpsb
ja
inc
sub
xchg
xor
dec
dec
imul
cmp
in
jne
and
mov
outsb
fs
or
push
add
cltd
pop
jecxz
cmp
orl
ret
cmpb
cwtl
in
les
data16
dec
pushl
pop
jns
mov
imul
adc
xor
mov
lahf
rcr
xchg
lods
stc
loopne
repnz
pop
loope
enter
push
xor
xchg
jle
cmpb
aaa
fwait
notb
fs
je
rcrl
cmpsb
mov
cmp
test
cmp
mov
cmp
jb
scas
dec
test
jp
jb
ljmp
movsb
aad
dec
add
and
xchg
sub
ljmp
loop
cltd
adc
faddl
loop
stos
cmpsl
dec
lds
cltd
xchg
jp
mov
jne
xchg
xchg
int
cld
fbld
movsb
pop
cli
fbld
adc
insb
jge
dec
mov
rcl
es
dec
cmp
mov
cmp
mov
mov
cmp
cmpsl
mov
xchg
dec
repz
cmpsb
leave
repz
dec
rcl
adc
addr16
and
pop
test
or
mov
pop
cltd
mov
jb
pop
cmp
in
dec
lods
ret
imul
test
adc
jbe
sbb
xchg
pop
push
cwtl
jmp
sbbl
xchg
pop
jb
jno
pop
pop
loope
dec
push
pop
push
call
inc
and
ret
lcall
clc
add
inc
adcl
rcrl
stos
test
jo
and
in
or
pushf
insl
int
sub
fisttpl
negl
cmpb
repnz
sbb
shl
in
cmc
add
mov
test
mov
and
out
ja
add
xlat
or
mov
sbbb
cmpsb
and
les
imul
inc
sbb
mov
and
jo
or
je
mov
fmuls
insl
or
push
les
filds
insl
jo
xchg
stos
rorb
push
mov
xorb
outsb
sahf
stc
loope
push
cmp
call
pop
lahf
xor
push
pop
ficoms
jae
mov
je
orl
jp
fstl
insl
jno
mov
sbbb
int3
jmp
adc
movsb
jnp
adc
jno
push
das
sbb
pop
mov
pop
ja
sbbb
iret
cwtl
daa
clc
subl
and
imul
cli
jnp
iret
pop
je
dec
dec
mov
test
fldenv
fldcw
lods
or
mov
lods
pop
in
xchg
xor
filds
mov
fs
xchg
jbe
push
lret
xchg
pop
into
out
shll
ret
fcompl
clc
aad
dec
push
jo
sbb
je
popa
xchg
cs
negl
dec
fs
popa
jae
icebp
or
int
xchg
popa
or
mov
outsb
cmp
xchg
xor
dec
jbe
cs
rolb
addr16
dec
jnp
vpinsrw
pop
cmpsb
mov
dec
rol
jae
dec
mov
jnp
mov
jae
fwait
je
cltd
lods
movsl
test
pop
je
das
stos
adc
and
js
sub
addr16
adc
mov
gs
icebp
jno
push
shll
lock
cwtl
test
scas
push
out
mov
jmp
imul
mov
mov
fs
fs
or
mov
add
and
jae
loope
mov
out
sbb
stc
dec
loop
je
les
cmp
imul
sti
sbb
mov
pop
je
bound
mov
pop
adc
das
or
mov
stos
sbb
push
fidivs
int3
fwait
iret
je
je
mov
test
pop
xchg
push
xlat
repnz
xchg
sbb
jno
sarl
adc
push
jecxz
mov
jo
fsubr
mov
nop
mov
popa
js
lock
sbb
mov
orb
pop
mov
jl
xor
in
enter
leave
mov
xchg
jecxz
jmp
xchg
fs
xor
in
or
sbb
and
dec
nop
add
xor
xor
jne
fadds
sbbl
jb
mov
fisttpl
popl
adc
xchg
mov
nop
sub
fstl
sbb
dec
loope
push
pop
pop
int
fistl
loope
shll
push
das
pop
mov
jo
pcmpgtd
int3
xor
popf
loope
add
js
jno
andb
popf
inc
add
add
cmpsb
shll
mov
xchg
jmp
cmp
aam
clc
pop
lahf
adc
imul
lods
inc
mov
push
xchg
or
bound
test
pop
mov
pop
cmp
int3
pop
xchg
mov
test
cli
add
popa
fistl
ds
testl
jnp
es
mov
mov
cmc
aam
mov
jnp
stos
test
mov
mov
aam
mov
jns
cmpsl
popa
out
int3
ucomiss
sbb
iret
push
test
mov
mov
int3
fdivs
jmp
cmp
jge
dec
mov
lahf
jecxz
aam
xchg
xchg
fs
mov
and
sbb
mov
rcrl
xchg
mov
jno
pop
fdivl
mov
mov
in
inc
cwtl
inc
dec
dec
sbb
sarl
cwtl
pop
or
dec
xor
pop
jns
cmp
out
mov
cltd
push
and
jae
lods
add
inc
pop
sbb
lret
stos
jo
jp
jns
xor
insb
lods
mov
repnz
and
push
mov
inc
arpl
arpl
andnps
hlt
adc
jg
dec
lahf
sti
fmull
les
fldcw
in
dec
sahf
add
imul
sub
xlat
cmpsl
and
lock
in
and
mov
iret
jo
je
push
in
stc
test
sbb
push
mov
xlat
fstps
imul
adc
imul
aad
dec
cmp
mov
inc
enter
popl
lcall
jb
daa
dec
rorb
pop
or
repnz
mov
jecxz
icebp
inc
pop
scas
mov
inc
mov
je
shll
cmp
dec
mov
test
pop
in
xchg
push
lds
xlat
or
daa
in
dec
test
iret
ljmp
imul
jg
enter
mov
dec
push
cmp
jns
xor
dec
push
fwait
cltd
sbb
jno
push
jbe
hlt
popa
push
outsl
jbe
and
cwtl
push
je
sbb
add
test
test
jge
sbb
int
mov
mov
sahf
sub
add
add
arpl
stos
cltd
aas
pushf
xchg
call
add
mov
cltd
cmpsl
cmp
out
in
les
je
jecxz
ljmp
aam
and
xchg
outsb
xchg
xchg
cmp
jp
jne
cli
xor
inc
xchg
dec
cmc
mov
lds
insb
jno
imul
ret
pop
repz
addb
pop
inc
lcall
pop
lcall
cltd
or
mov
fldcw
jle
xchg
mov
adcl
cwtl
movsl
jp
ret
and
movsb
mov
test
adc
add
jne
loop
inc
jns
gs
fnstcw
jb
fisttpl
mov
pop
xor
push
pop
push
insb
ljmp
std
lods
in
xor
xchg
nop
and
popa
ret
mov
aad
push
cmp
mov
jp
xchg
mov
mov
in
xchg
testb
jecxz
or
scas
mov
jg
push
aad
lahf
jb
xchg
lcall
xchg
mov
loop
cmp
dec
mov
je
mov
xchg
hlt
mov
xchg
lds
pop
sub
loop
shlb
mov
loope
aaa
dec
xchg
adcl
cmpb
inc
sti
loop
add
imul
cmp
aas
xor
scas
cmpsb
mov
int3
dec
les
cmp
insb
popf
cmp
test
push
lock
dec
je
mov
insl
sbb
xor
fisubs
inc
cmp
adc
cmp
filds
cmpsb
cmp
add
cld
enter
mov
inc
push
cwtl
jae
xorl
add
mov
sub
jo
adc
lcall
cltd
cmp
jle
mov
aad
je
jae
mov
jg
fs
xor
out
jo
clc
xchg
aad
mov
hlt
aad
hlt
pop
jp
pop
sub
stos
cmp
push
lahf
mov
and
sbb
out
imul
sahf
repnz
pop
arpl
fs
jo
mov
cwtl
xchg
pop
push
add
pushf
sub
dec
and
inc
lret
sbb
mov
or
add
sarb
cs
inc
mov
pushf
jno
movb
sbb
dec
mov
inc
xchg
rolb
push
shll
jo
mov
mov
jmp
nop
mov
sbb
push
pop
out
fwait
enter
enter
subb
pushf
fcompl
popa
lds
movsl
cmpsb
shl
or
ja
sbb
mov
jbe
push
push
mov
xchg
lds
packsswb
scas
in
in
push
jne
dec
fldl
jo
ficomps
xchg
enter
jno
imul
adc
cs
lds
inc
dec
idivb
int3
lret
cmc
push
jg
mov
fcmove
cwtl
nop
mov
imul
and
push
jno
jno
vmread
dec
addb
pop
xor
pop
and
push
mov
mov
ss
and
scas
pop
bound
sahf
xchg
pop
push
add
dec
cwtl
sbb
into
sahf
bound
jmp
fidivl
rcll
mov
rcll
call
cmpsb
push
pop
sarb
rcll
cs
jecxz
inc
push
or
cmp
je
adc
pop
and
or
adc
cltd
test
scas
stos
cmp
jnp,pn
mov
shrl
clc
jae
sbb
or
dec
push
hlt
call
pop
iret
push
dec
adc
push
call
dec
cmc
sbb
je
push
jnp
ret
hlt
pop
cmc
jne
sti
rolb
arpl
push
cmp
fst
jne
dec
cmp
push
nop
mov
aas
je
and
ja
dec
push
loop
lds
lods
in
aaa
in
jge
push
push
push
cmp
cmp
mov
lea
testl
mov
push
sbb
push
orl
cmp
js
out
ja
jnp
xchg
jne
loopne
cmp
aad
dec
xchg
addr16
dec
into
pop
add
scas
rorl
out
mov
fadds
gs
push
stos
neg
into
mov
popa
jb
rorb
enter
xor
mov
aam
inc
push
dec
xchg
mov
rolb
push
dec
and
cmp
inc
xor
adc
pop
adc
das
rclb
pop
bound
loope
xchg
popa
pop
dec
push
sbb
rcll
push
push
cmp
mov
outsl
aad
sti
stc
pop
les
rclb
idivb
aam
and
jge
jno
push
xchg
fcompl
mov
pop
jb
fdivrl
adc
fsincos
cmpsl
enter
or
cwtl
push
cmp
add
push
orl
adc
xlat
mov
loop
push
inc
push
push
ja
mov
int3
call
cmp
rcrb
andl
test
cmp
insb
add
jns
push
mov
cmp
ds
je
outsl
outsb
cmp
mov
outsb
nop
cmp
jo
cmp
pop
cmp
aaa
push
jo
pop
dec
sub
lock
cmp
mov
call
je
jl
shlb
xorl
hlt
addr16
pop
jno
lcall
imul
add
mov
jne
test
in
jl
dec
mov
lcall
inc
push
lea
loop
int
insb
addr16
mov
in
and
push
hlt
addr16
je
fs
shrl
outsl
movsb
andl
push
mov
lea
fnstcw
adcl
in
add
lds
xlat
in
add
sbb
mov
jae
mov
imul
insl
icebp
inc
sub
push
int3
xchg
or
dec
sbb
jl
les
in
cmp
inc
scas
outsb
pop
cmp
and
cltd
mov
jb
ja
lods
mov
or
outsb
adc
adc
pop
sbb
out
mov
pushf
and
and
cmp
sub
div
lock
pop
lock
inc
ret
fwait
idiv
and
stos
sti
cltd
sub
push
inc
cwtl
outsl
add
or
out
lret
xchg
sbb
insb
mov
pop
mov
out
sub
mov
out
loop
aas
mov
xor
cmpsl
popl
fmuls
cmp
imul
int
dec
pop
cmp
fisubrs
mov
or
adc
out
adc
rcrb
adc
dec
jo
bound
pop
mov
dec
aam
jp
sahf
mov
adc
inc
cmp
or
in
shrl
inc
addr16
mov
jb
adc
mov
insl
call
jbe
insl
fisttpll
stc
imul
movsl
push
fidivrl
test
jno
arpl
or
xchg
imul
dec
jmp
fldenv
in
mov
fsubl
insb
cmp
pop
inc
xorl
es
jo
jb
or
xor
pop
xchg
ljmp
jl
aad
in
nop
cwtl
cld
test
out
test
fiadds
mov
inc
xor
adc
mov
mov
dec
ret
xchg
nop
lea
mov
jnp
pop
fsubrs
mov
insb
xchg
lock
sbbl
pop
sbb
add
cwtl
pushf
jb
pop
adc
inc
pop
fildl
out
mov
lods
or
cli
fs
lcall
sbb
sbb
rcll
mov
pop
sbb
sub
fldl
das
fnstsw
popa
stc
jne
inc
lcall
dec
mov
sub
adc
fisubs
push
les
add
xor
cmp
roll
push
test
push
mov
pop
leave
lcall
adc
ja
mov
mov
je
inc
and
jg
pusha
adc
dec
sub
imul
pusha
sub
jno
loopne
inc
lret
push
or
cmp
fistl
or
bound
xchg
add
jo
jg
cmpsb
adcl
or
jno
pop
fsubrl
lock
xor
ja
pop
mov
jns
loopne
jne
and
loop
jb
mov
pop
jbe
xor
mov
mov
mov
movsb
add
mov
mov
sbb
movsb
stos
dec
adc
push
cmp
mov
sbb
pop
ret
push
arpl
jge
add
xor
dec
cwtl
sbb
mov
mov
cmp
mov
fs
fs
into
popa
lock
inc
out
in
mov
lret
js
jmp
push
or
cmpsb
ror
rorb
and
scas
pushf
xchg
int3
jo
add
push
aam
mov
scas
sti
or
push
and
xorl
pop
cmc
test
cmp
ror
push
cmp
xchg
sub
loop
test
push
jbe
inc
sbbl
sahf
scas
cmpsl
xor
pop
push
insb
popa
inc
xchg
rclb
data16
nop
jg
mov
xchg
adc
mov
sahf
push
das
xor
xchg
arpl
pop
lods
jbe
cmp
inc
mov
pop
ficoml
or
inc
mov
jo
jo
add
dec
shll
cmpsl
jle
push
fs
mov
mov
xchg
pushf
or
pop
nop
jno
or
insb
mov
add
cmp
add
fstps
or
bound
subb
iret
pop
fwait
push
mov
cltd
inc
inc
loop
movsl
inc
call
jge
js
and
mov
push
mov
mov
out
leave
and
xor
push
mov
sbb
aad
jne
fadds
jno
jae
icebp
pop
arpl
pop
loopne
mov
cmp
into
outsl
and
fnclex
dec
inc
lahf
fcoms
fwait
and
push
lods
push
decb
jns
lods
mov
pop
scas
scas
lods
push
aaa
mov
shlb
push
bound
popa
outsl
lds
fldcw
test
loop
mov
out
insb
movsl
xchg
in
push
iret
scas
test
lcall
xor
jno
jo
pop
mov
jl
lods
subb
in
insb
inc
push
arpl
push
repnz
insb
je
popa
mov
out
mov
pop
lds
jno
add
pop
out
ret
imul
adc
push
jp
dec
bound
pop
and
push
js
mov
mov
mov
loopne
repnz
cmpsb
stc
cld
fmuls
icebp
adc
cld
fdivs
jo
jb
xchg
add
xorb
lock
stos
cwtl
add
pop
jl
fsts
cmp
rcl
or
xchg
sbb
sbb
les
mov
aam
push
add
pop
sub
pop
andb
test
jmp
mov
adc
in
mov
adc
jp
mov
lock
mov
lock
mov
data16
cmp
test
sbb
pushf
cltd
daa
imul
sti
jo
outsl
fstps
outsl
outsb
cmpl
scas
inc
int
cmp
sbb
inc
pop
push
out
cwtl
jns
flds
fsts
gs
mov
adc
iret
push
and
sbb
fisttps
dec
and
int3
cmc
rcrl
sbb
aad
push
incb
xor
ds
test
or
fstpl
dec
aam
sub
or
fistpl
fisubl
cwtl
mov
xor
mov
sbb
add
test
lods
jns
cmpsl
inc
pop
xchg
les
bound
cmpb
shrl
cmp
in
sbb
movsl
fs
mov
popf
insb
sahf
test
sbb
mov
jp
push
int3
in
addl
adc
fstl
cltd
cmp
cmp
push
sbb
pop
cmp
xlat
lds
push
mov
nop
loop
push
es
ja
pop
xchg
mov
roll
pop
stos
out
pop
rclb
iret
ffree
mov
jns
push
jnp
pop
jb
push
jae
bound
jne
dec
jmp
and
cmp
mov
shr
jns
lcall
add
mov
mov
test
fadds
cmp
dec
jb
stc
subb
push
fsubl
mov
bound
jo
mov
fst
int
jae
xorb
pop
ffree
mov
jne
inc
or
test
xchg
dec
leave
jne
mov
cmpsb
mov
scas
mul
lock
addl
das
jbe
mov
or
arpl
fwait
sbb
dec
in
cltd
icebp
xchg
pop
aas
ret
fs
mov
daa
popf
std
push
fdivrs
mov
cmp
repnz
push
andl
cwtl
sbb
pop
clc
xchg
ret
loopne
mov
cltd
dec
inc
dec
xchg
or
sub
or
mov
mov
out
imul
or
cwtl
daa
mov
dec
pop
xchg
fwait
or
sub
and
dec
fidivl
outsl
jmp
lahf
adc
sub
cld
aaa
subb
cmc
xchg
scas
adc
adc
jg
lock
das
add
stc
loope
cmp
shll
cmp
mov
xorb
push
jl
je
into
push
cltd
movsl
inc
add
fistl
movl
fnstenv
iret
sub
push
mov
adc
dec
test
dec
xchg
jo
xchg
mov
push
lds
dec
cmp
fwait
cmp
fcmove
cld
scas
add
pop
repnz
repnz
lahf
aam
cli
dec
mov
sar
loop
movsb
inc
jle
cmp
dec
dec
shlb
dec
test
icebp
bound
fdivrl
aas
popa
jge
jno
or
movb
arpl
rcrl
repnz
jp
push
imul
out
and
and
mov
push
je
mov
mov
push
pop
mov
mov
jne
dec
push
in
or
call
cmp
push
push
add
jne
push
pop
aam
dec
roll
sti
inc
xchg
movsl
dec
xchg
enter
and
mov
push
mov
jo
push
rolb
and
imul
jg
and
les
xchg
or
jge
stos
pop
mov
insl
sbb
push
scas
xchg
mov
cld
into
bound
pop
jb
sbb
daa
insl
fcompl
int3
xchg
mov
jbe
or
pop
push
stos
and
fwait
sbb
addb
xchg
mov
jl
popf
pop
cmp
sub
sub
pop
mov
and
stos
mov
fiaddl
in
adc
aad
out
cld
xchg
dec
sahf
push
push
call
pop
js
pop
test
ss
loope
jo
mov
sbb
xchg
cmp
xor
mov
stos
in
push
in
sub
cmp
imul
jp
pop
cmpsl
mov
pop
sbb
enter
xor
xor
cmpsb
fisttpll
cmp
scas
jb
inc
xor
lcall
cltd
xchg
arpl
lods
mov
adcl
cmp
loope
push
gs
push
insl
pop
clc
add
push
xchg
and
scas
jecxz
add
lahf
test
lods
pop
mov
jae
xor
movsl
cmp
lea
mov
daa
stos
aaa
mov
data16
mov
aad
les
in
scas
js
fisubrs
je
cmp
mov
and
and
or
stos
or
dec
cmp
jns
iret
addl
inc
push
fcmovu
sbb
add
lret
fnstsw
cmp
pop
and
xchg
cmpsl
dec
in
hlt
inc
inc
or
jg
out
cmp
stos
les
cltd
jo
mov
add
mov
fcomp
js
xor
aaa
paddusw
lock
aad
xor
shlb
xor
xor
mov
clc
mov
jo
push
jge
cmpsb
jb
push
lock
xchg
hlt
pop
and
mov
cmpsl
pop
rorl
mov
pop
imul
gs
stos
test
cmp
les
fwait
es
sbb
es
imul
pushl
xchg
fldt
inc
stos
xchg
in
inc
mov
stos
jmp
aad
inc
sbb
jmp
aad
push
loope
iret
pop
pop
fs
stc
fstpt
jl
addr16
and
out
fwait
add
jno
mov
aam
js
or
sbb
dec
pop
fwait
mov
add
sub
bound
aad
pop
das
movsl
scas
mov
dec
cs
adc
jo
rcrb
and
sbb
sbb
pop
out
leave
xchg
push
test
iret
push
scas
rcll
hlt
dec
pop
out
sbb
pop
push
cmpsl
pop
jmp
xchg
lcall
hlt
xchg
jne
dec
and
sbb
les
in
neg
les
ret
cmpsl
ret
add
dec
lret
push
cmc
lcall
cltd
loop
mov
sub
xor
imul
jne
shlb
lea
jo
pop
mov
cmp
jmp
fwait
ss
jne
mov
ljmp
out
scas
sbb
inc
fwait
cmpsl
cmp
jno
or
xor
xchg
push
fcompl
inc
mov
call
arpl
dec
jns
mov
test
mov
xor
cmp
mov
pop
andb
xchg
imul
ret
and
jle
jo
jne
pop
mov
pop
sub
xchg
js
cmp
cld
imul
mov
mov
jl
test
in
push
ja
pop
xor
dec
mov
xchg
mov
jl
cmp
inc
inc
adc
mov
rclb
sarb
test
push
fwait
lods
rcr
push
xorl
outsb
sbb
push
pop
fnop
insb
leave
test
jo
sbb
sub
mov
xchg
out
loope
cmp
lods
lret
shrl
mov
ret
sahf
arpl
frstor
mov
dec
bound
ret
pop
push
out
pushf
test
js
popa
or
addr16
inc
call
ds
or
fwait
js
test
push
jo
adc
outsb
cltd
js
jmp
mov
mov
lds
jb
mov
adc
stos
aad
jecxz
inc
je
add
cwtl
shrb
push
jno
inc
inc
ljmp
arpl
or
inc
andb
jae
lret
pop
mov
push
insb
bound
and
cmp
int3
dec
jge
add
ret
repnz
cmp
mov
cwtl
loopne
dec
sub
ret
cmpsl
push
push
push
mov
je
sub
push
pop
push
fcoms
sub
push
fsts
shll
mov
test
push
pop
push
mov
mov
js
mov
les
lods
mov
cmpsl
les
les
cwtl
jle
shll
pop
hlt
mov
aaa
mov
adc
and
js
movsb
push
in
addr16
lds
pop
andl
push
pop
lcall
adc
in
cltd
sub
push
out
loop
pushf
mov
inc
cmp
jne
popa
leave
sahf
jecxz
repz
sbb
dec
inc
lods
nop
test
pushw
pop
adcl
jne
dec
mov
and
push
push
js
fstl
sub
dec
jle
jp
dec
push
inc
pushf
pop
ret
jno
arpl
pop
adc
scas
mov
scas
pop
test
nop
xchg
mov
into
lcall
aam
add
out
jns
rol
sub
out
shr
add
mov
sbb
mov
lods
lret
imul
addb
adc
cmp
cmpsl
mov
imul
mov
xchg
cmp
mov
out
nop
sbb
xchg
fs
out
xchg
ljmp
xorl
mov
mov
push
and
and
sub
mov
pop
add
arpl
into
leave
cmp
in
sbb
add
pop
push
pop
pop
arpl
or
adc
sbb
pop
xor
inc
lahf
fnstcw
push
mov
mull
out
lahf
jo
enter
cmp
test
cmp
arpl
nop
cli
jge
cmp
aas
jbe
mov
mov
fsubl
in
xor
sahf
or
lret
jg
fldcw
inc
mov
cmp
and
repz
imul
enter
dec
add
inc
sub
pop
mov
sub
sbbl
lock
cmp
inc
bound
es
sub
out
bound
ja
jno
jg
rorl
insl
push
aam
mov
xchg
push
dec
cmpsb
sti
dec
push
gs
imull
mov
clc
lds
sbb
pop
xchg
sub
push
out
mov
cmp
sub
stc
icebp
daa
dec
popa
out
pop
lds
cmp
dec
adc
push
aad
popa
mov
sbb
pop
mov
les
aam
cmpxchg
imul
jne
lds
adc
arpl
add
jb
add
aad
sbb
cltd
lea
clc
addr16
sti
shll
test
mov
pop
jmp
jmp
jbe
mov
icebp
lods
inc
pop
sbb
push
gs
imul
xchg
add
pop
mov
jns
add
aas
xchg
shlb
pop
jo
or
xor
ja
jnp
inc
mov
cmp
out
lret
test
adc
mov
xchg
dec
cli
sarl
xchg
scas
lock
je
cmp
lahf
inc
xchg
fistl
inc
les
stc
jbe
sahf
push
sbb
shr
stos
push
sub
nop
out
cs
ror
in
jne
andb
mov
das
in
fsts
mov
loope
adc
push
xchg
sbb
or
addr16
mov
inc
out
in
adc
lea
in
mov
mov
outsl
mov
mov
les
dec
mov
adcb
das
outsb
lods
in
push
in
lret
sub
out
push
jnp
xor
inc
jbe
loope
dec
out
or
dec
test
loopne
cmp
scas
fcoms
xor
daa
scas
jns
xor
mov
fadds
inc
fstpl
sbb
xchg
sub
adc
jge
push
out
pop
clc
out
jmp
cmp
loopne
loope
push
lahf
push
mov
ret
lds
sbb
xchg
pop
inc
lock
jae
mov
and
cwtl
jle
test
lcall
lahf
fldt
jmp
lcall
dec
mov
cmp
sti
test
pop
cmp
insb
jge
jmp
jno
push
push
leave
jnp
scas
jecxz
dec
arpl
xchg
mov
insb
addr16
cmp
inc
test
mov
gs
lods
enter
ret
cmpsl
pusha
sahf
inc
cmp
icebp
out
loop
fcos
movsb
out
psraw
test
out
sahf
emms
add
xchg
xor
and
test
pop
mov
test
cli
andl
sub
sub
xchg
or
in
jmp
sbb
cmp
ljmp
je
jb
cmp
xchg
test
repnz
outsl
lds
ja
and
push
fdivrl
mov
cmp
cmc
cmp
mov
xchg
cwtl
mov
jo
rol
sbbb
out
repz
jmp
cld
adc
xor
mov
jp
jge
sbb
and
pop
frstor
fs
or
outsb
jae
inc
daa
xchg
ss
lds
outsb
jl
cs
fs
js
jo
je
push
xor
sbb
popa
in
arpl
out
pop
lock
add
arpl
js
jnp
mov
aam
in
sbb
arpl
rcr
fsub
mov
test
jb
or
loopne
cmp
xchg
mov
xchg
addb
fldenv
xchg
iret
lret
mov
mov
xor
stos
lock
jns
nop
int3
mov
or
sub
cmp
mov
stos
push
add
ja
enter
cmp
mov
rcrl
sbb
enter
das
inc
test
pop
cmp
xlat
in
fs
clc
rolb
dec
or
fs
aad
rcpps
push
sbbl
cmp
shl
jne
xchg
dec
mov
push
lds
fdivrl
aas
stos
bswap
and
stc
cld
xor
xor
or
xchg
pop
push
pop
imul
int
lock
loope
fimull
push
in
ja
outsl
jo
pop
xchg
outsb
xchg
push
inc
mov
inc
push
psubw
sub
push
cmp
aas
dec
add
popf
mov
pop
movsb
adc
and
mov
xor
je
cmpsb
mov
call
mov
sahf
pushf
cld
pusha
xchg
jl
pop
imul
cmp
nop
xchg
or
mov
cmp
loope
dec
icebp
hlt
ja
jo
dec
call
daa
dec
jns
int3
add
inc
mov
cwtl
enter
mov
lea
test
out
fwait
out
dec
and
cmp
test
xchg
test
out
les
mov
xchg
and
in
cmp
cmp
andb
out
sbb
pop
jno
gs
sub
adc
stos
imul
or
or
jge
fwait
push
in
shrb
arpl
cltd
shlb
dec
cltd
or
inc
stc
jne
adc
imul
inc
mov
fwait
jl
jl
jae
xchg
les
push
sets
cmpsl
imul
lds
arpl
lcall
push
mov
cwtl
adc
fldl
lock
movsl
nop
push
rcr
mov
sub
fsts
xor
repz
jo
add
or
ret
rcll
inc
loope
jge
test
mov
inc
lods
jnp
mov
dec
mov
sub
mov
fisttpll
bound
fld
je
push
out
lret
scas
xchg
in
inc
call
dec
jb
mov
mov
sahf
stos
inc
cmp
sub
popa
inc
lcall
jne
daa
aas
fwait
sbb
lock
and
pop
sub
pop
mov
inc
pop
das
test
out
mov
push
cmp
jo
inc
lock
daa
or
mov
out
jo
les
repnz
mov
jno
test
mov
mov
repnz
mov
jo
xchg
pop
int3
bound
pop
popa
repz
sbb
int
push
loop,pt
push
cltd
sub
mov
mov
xchg
fs
mov
mov
adc
adc
lahf
ret
push
push
imul
imul
out
and
cmp
test
nop
jecxz
into
and
inc
lret
clc
jmp
mov
test
les
xor
pop
mov
int3
mov
je
or
repnz
scas
pop
aam
insl
leave
jge
mov
push
int
out
ljmp
movsb
js
sub
dec
test
mov
loopne
adc
fwait
jne
loop
push
outsb
xor
or
mov
lock
pop
adc
push
jecxz
dec
aad
xchg
test
test
test
jge
shll
push
out
test
mov
sbbb
fisubl
mov
ret
je
jecxz
rcll
xor
loopne
dec
pop
sbb
fdivrs
cmc
cmp
loopne
js
mov
lock
hlt
dec
or
cwtl
jo
dec
imul
out
mov
jp
xchg
and
pop
dec
enter
int3
adc
dec
jno
sub
test
xchg
js
test
fisttps
add
dec
jae
enter
imul
repz
orl
aad
imul
jo
loope
gs
push
sahf
mov
jno
lcall
subb
xchg
mov
add
cld
cld
xchg
aad
adc
lds
nop
push
daa
jle
sbb
push
mov
call
xchg
push
paddusw
icebp
aam
aam
dec
mov
xchg
mov
sub
mov
imul
xor
sarb
pushf
jb
sbb
sbb
mov
mov
adc
dec
dec
adc
cwtl
nop
sahf
cmp
mov
mov
push
sahf
mov
aas
or
sbb
mov
jmp
cmp
or
dec
in
sbb
inc
dec
es
sub
jle
lcall
fwait
xchg
data16
and
add
jmp
dec
ljmp
xor
mov
cmp
repnz
loopne
rclb
sbb
xchg
xchg
dec
pop
mov
aaa
pop
insb
sbb
arpl
lahf
adc
outsl
pop
push
mov
inc
mov
and
push
mov
pop
addr16
and
fwait
outsl
push
lret
push
inc
scas
push
push
mov
mov
testb
mov
push
cmp
out
cmp
add
xlat
sub
xchg
fs
dec
add
enter
mov
inc
mov
jne
rclb
call
fstpl
xor
jns
stos
add
or
mov
jmp
mov
out
mov
iret
jb
gs
sbb
sbb
frstor
push
les
push
push
es
inc
and
inc
mov
out
dec
repnz
dec
sbb
sahf
cmp
sub
loope
mov
or
arpl
loop
ja
jbe
sub
das
xlat
cmp
pop
jo
jecxz
sub
push
mov
mov
mov
dec
iret
lfs
cmp
and
xlat
jne
mov
cmp
stos
add
jae
inc
lahf
mov
dec
decb
xor
inc
cmpsl
hlt
adc
sti
push
hlt
mov
mov
and
xchg
enter
jl
mov
push
mov
xchg
push
imul
sbb
jo
jno
cwtl
jb
inc
aaa
mov
push
inc
jmp
in
enter
bound
je
pop
and
jmp
push
sti
cmp
loop
ret
xchg
pop
int
ljmp
sbb
and
jbe
cmc
push
adc
fcompl
inc
xor
xchg
clc
xchg
fnstsw
cmpsb
adc
mov
cmp
sub
inc
sub
js
adc
lea
cmp
xor
mov
fs
jmp
outsb
stc
adc
ljmp
jo
mov
dec
cmpsb
in
test
test
cmpsl
js
je
sbb
shll
sub
adc
leave
pusha
outsb
stos
jecxz
outsl
adc
push
sub
negl
mov
mov
dec
push
in
sbb
lcall
push
sahf
jg
or
cmp
mov
dec
cli
push
adc
lds
push
lds
shlb
pop
gs
dec
movsb
push
ror
pop
arpl
imul
out
dec
movsb
add
fldcw
ss
outsb
iret
pop
cmp
cmpsl
bound
inc
push
imul
jge
roll
movsl
pushf
test
ficomps
cmp
mov
pop
xchg
popf
xchg
fcomps
mov
dec
js
sbbb
mov
mov
fwait
mov
aaa
adc
push
out
in
xor
adc
sar
lcall
mov
call
or
mov
arpl
fistl
les
xchg
leave
js
adc
mov
jae
add
cld
rorb
mov
dec
jnp
mov
xchg
test
pop
push
and
in
jo
ds
cmp
sti
xor
stos
xlat
xchg
lret
daa
loop
dec
mov
push
addb
push
loopne
mov
mov
cmpsb
sarb
mov
fs
imul
jne
jnp
addl
andb
adc
jae
gs
xorl
adc
ds
sub
cmp
test
jae
subl
and
daa
addr16
repnz
adc
repz
mov
sbb
mov
in
sbb
add
cs
and
lcall
addb
hlt
push
add
adc
andb
dec
xor
mov
addr16
arpl
fsubl
push
out
mov
fs
cmpsb
fwait
pop
or
test
dec
mov
je
xchg
or
mov
popf
adc
cmp
cwtl
cltd
adc
mov
cld
pop
jge
bound
sbb
mov
mov
pop
iret
mov
pop
pop
xchg
jo
outsl
ja
and
pop
sbb
cmpsb
inc
aaa
mov
and
xor
je
callw
roll
push
and
pop
lock
inc
inc
sub
xchg
sbb
fs
sbb
jnp
sti
out
and
or
xchg
mov
push
cmp
push
add
mull
ljmp
push
ja
popa
aam
sbb
xor
sub
repz
aam
fstps
insb
sub
adc
test
hlt
push
nop
sbb
insl
mov
mov
cmpsl
cmc
pop
mov
mov
sbb
les
fs
mov
sbb
jno
rorl
test
addr16
pop
insb
sbb
push
sbb
dec
in
mov
bound
sbb
mov
push
gs
in
enter
inc
adc
pop
rcl
mov
mov
sbb
outsb
out
sar
popa
jns
imul
xor
mov
test
inc
mov
es
dec
std
leave
adc
jecxz
push
jmp
fldcw
mov
popa
cltd
scas
mov
fs
push
clc
aam
into
dec
lahf
dec
jle
sub
pop
mov
mov
xor
stos
bound
push
or
lahf
mov
mov
lds
mov
add
inc
arpl
dec
enter
scas
aam
popf
push
lea
insb
cwtl
mov
sub
aaa
mov
lods
mov
sbb
inc
dec
je
push
out
adc
jne
pop
lds
mov
sbb
repz
cmc
aad
add
mov
fnstsw
cmp
call
int
lret
cld
mov
push
ficoms
cmp
jecxz
sbb
clc
call
mov
cwtl
jb
loop
repnz
bound
shll
pop
push
cmp
sahf
push
fldl2e
pop
aad
adc
pop
jne
repnz
das
cmpsb
loop
movsb
or
mov
cmp
iret
cmp
dec
lret
std
add
cmc
cmp
loopne
jo
icebp
nop
or
bound
into
push
sti
jne
sub
mov
and
xchg
jnp
mov
dec
pop
xchg
aam
int3
pop
sbb
loope
xchg
mov
jne
jle
mov
cmp
dec
sub
lds
pop
jge
inc
repnz
push
push
adc
in
cmpsl
jmp
dec
daa
mov
call
mov
into
xchg
cwtl
adc
les
adc
icebp
aam
les
cld
pop
xchg
mov
lods
xchg
aad
mov
mov
je
loope
int3
xor
out
mov
fidivrs
stos
icebp
add
push
fsincos
imul
xchg
or
scas
fisttpl
lock
aam
add
out
into
or
insl
push
push
jno
daa
mov
imul
xchg
sbb
jle
xor
dec
loope
int3
sti
mov
push
pop
shlb
scas
push
add
or
adc
pop
in
fmul
je
adc
pusha
call
jecxz
jmp
sbb
fnstenv
stos
int3
or
fwait
fs
lds
mov
mov
sbb
cmp
mov
adcb
popf
add
pop
sub
rcrb
pop
inc
sub
fcomp
sti
xchg
mov
ja
arpl
fistl
dec
cmp
cwtl
dec
sti
imul
cmp
mov
sub
and
xchg
cld
scas
repnz
jo
jno
fwait
inc
ret
icebp
mov
cli
mov
daa
cmc
pop
imul
daa
fimull
and
mov
leave
pop
sarl
ss
inc
fs
cmp
inc
sbb
cmpsl
adc
adc
bound
add
jb
mov
shll
hlt
dec
dec
in
dec
orl
cmc
inc
jmp
scas
pop
adc
cmpsl
add
ja
loope
push
add
cmp
and
add
call
jmp
test
add
push
stc
xchg
mov
test
fwait
mov
sub
add
fnstsw
and
push
adc
arpl
and
adcl
cli
xchg
dec
or
test
jge
sti
gs
cmp
lret
aad
and
out
xchg
dec
pusha
jle
test
daa
shlb
jno
int
add
shll
jp
lock
fdiv
push
adc
mov
popf
dec
into
fwait
push
xchg
xchg
or
jns
dec
jbe
std
aad
push
inc
call
insb
dec
aad
or
lcall
adc
fisttpl
sub
cmpsb
push
push
jo
jae
ficoml
xchg
mov
or
mov
fadds
push
jecxz
push
dec
jecxz
dec
mov
mov
cmpsb
fwait
int3
jae
push
sub
push
cltd
rcrl
je
in
movsb
push
bound
stos
jl
loopne
push
cmp
out
arpl
jb
les
test
push
adc
xchg
bound
cli
xorl
loopne
jle
cmc
dec
mov
mov
into
pop
test
addr16
je
inc
xchg
std
cmp
adc
cmc
mov
je
mov
sarb
sbb
lds
jae
out
and
mov
mov
int3
cs
popf
mov
push
or
dec
fidivrl
loopne
loopne
dec
les
add
push
mov
push
insl
mov
mov
out
loopne
enter
mov
xchg
inc
aas
xchg
mov
xchg
inc
sbb
fisttpl
adc
push
loopne
adc
cld
cmc
stos
ss
jle
push
cmp
pop
and
dec
imul
mov
xor
test
stos
xor
arpl
jnp
mov
repz
into
in
in
or
xchg
sbbl
mov
les
les
cmc
loope
push
cmp
jnp
cmpsl
or
jecxz
jge
lods
jl
sahf
loop
ds
xchg
stc
sub
pop
lds
jns
mov
push
pop
test
imul
jge
nop
leave
jne
flds
mov
mov
jle
pop
ja
iret
adc
sbb
sub
jbe
notb
pop
and
xchg
or
in
out
jl
cwtl
dec
shr
mov
popl
out
fwait
or
scas
or
cmpsb
shl
inc
ret
fdivrs
cld
scas
test
inc
cmpsb
les
adc
xchg
fs
pop
andb
adc
inc
out
cltd
push
cmp
bound
jne
movb
ret
sarb
sub
fsts
push
sub
push
sbb
decl
sbb
ds
inc
test
loopne
ss
cltd
les
adc
jle
or
sub
adc
test
hlt
sbb
sub
cs
sahf
nop
mov
js
jo
pop
aad
int3
sbb
scas
mov
cmp
cld
mov
aas
popa
aad
lds
enter
imul
in
dec
cltd
xor
es
ret
cwtl
pop
mov
and
cwtl
sbb
into
pop
or
mov
push
mov
jge
lret
sahf
sbb
inc
rcrl
push
sahf
in
fldcw
pop
movsb
adc
jo
outsb
pop
ror
imul
andl
or
inc
sbbl
ffreep
and
mov
adcl
mov
jp
aas
in
ja
push
cmp
dec
sbb
jne
js
push
xchg
dec
lock
mov
je
dec
pop
mov
mov
jno
dec
in
jne
push
mov
mov
adc
add
pop
scas
xlat
nop
pop
sub
xor
lods
das
fsubr
mov
sub
dec
in
mov
jb
loop
mov
lods
lds
mov
pushf
jae
push
cli
ret
adc
cwtl
mov
outsb
lcall
push
mov
sbb
jg
mov
dec
clc
push
jl
idivl
ds
pop
int3
inc
sub
dec
outsb
fsubrs
out
cmp
in
push
inc
sub
fwait
inc
rcrb
inc
inc
sbbl
rclb
jo
adc
out
inc
sub
movsb
mov
or
inc
test
jmp
call
ds
cltd
sbb
stos
test
or
daa
call
pop
cmp
xchg
cmp
sbb
cmc
shl
mov
dec
xchg
inc
pause
stos
fwait
int3
mov
pop
pop
add
and
mov
enter
adc
push
mov
out
movsl
adc
dec
scas
jmp
and
je
mov
xchg
outsl
push
das
sbb
in
lock
pop
and
aaa
xchg
jge
icebp
test
jle
mov
push
push
loope
dec
rorl
xor
jge
hlt
test
jae
scas
jge
int
int3
lea
inc
lret
gs
cmp
xor
aam
inc
test
jo
insl
add
pop
clc
sbbl
repnz
mov
jbe
push
xor
mov
inc
push
jle
js
mov
push
add
mov
mov
fs
cmp
and
sti
cmp
sti
cmp
pop
and
adc
shll
pop
cmp
xchg
lcall
fiaddl
mov
popf
pop
and
cli
cmpsb
out
push
in
imul
cld
mov
insb
dec
dec
fdivp
pusha
dec
mov
loop
test
sub
movsb
or
jne
addr16
fisubrs
into
dec
aad
cwtl
mov
js
dec
insb
push
adc
in
fsts
push
or
and
shrb
pop
sbb
push
popa
fcoml
nop
in
inc
jo
inc
xchg
pushf
jl
pop
cmpl
lods
sarl
mov
pushf
xchg
mov
inc
mov
fnstsw
jne
addl
cmp
pop
pop
test
inc
sbb
fxch
dec
mov
cmp
idivb
mov
cwtl
jg
dec
into
mov
insb
stos
call
xchg
fstl
push
inc
test
popa
add
pop
push
jnp
mov
js
lock
bnd
xor
jae
addr16
mov
mov
inc
adc
lret
xchg
cld
sahf
inc
mov
push
dec
jae
pop
sbb
xchg
insb
arpl
lock
pop
mov
push
cmpb
std
mov
in
aam
or
push
ja
and
dec
mov
xchg
pop
shlb
cwtl
dec
mov
cmp
lret
lcall
dec
add
orl
vpand
loop
sub
bound
into
movsb
ret
data16
push
and
fstl
xor
dec
xor
or
mov
ljmp
pop
aam
sbb
add
out
call
ficomps
inc
xchg
cwtl
xchg
adc
insl
pusha
jno
mov
sahf
dec
jl
cli
xchg
add
jne
loop
jnp
mov
bswap
testb
dec
je
xchg
ss
mov
inc
xchg
pop
movsb
lea
mov
js
aam
adc
pushf
enter
out
orb
je
push
add
lds
or
adc
cmp
sti
xchg
sbb
inc
fidivrl
nop
int3
push
decl
dec
push
adc
cmp
mov
das
mov
pop
mov
cld
sub
int3
pop
hlt
bnd
xchg
jbe
fsubs
and
bound
fnstsw
pop
pop
cmp
out
scas
mov
outsb
lods
ljmp
cmpsb
cmp
fbstp
iret
outsb
sub
arpl
sub
mov
test
in
cmp
mov
in
and
jno
pop
jmp
push
je
jge
fsubl
int3
bound
scas
push
pcmpgtb
test
inc
into
sti
cmp
ja
xchg
dec
lods
repnz
xchg
cwtl
loop
jo
hlt
pop
jecxz
js
enter
adc
cli
data16
jne
test
and
jp
jb
and
aas
lahf
jp
int3
in
inc
jb
pop
shrl
xchg
adc
imul
mov
inc
and
sub
xchg
jo
sbb
ud1
mov
cmp
pop
pop
cmp
adc
push
jo
pop
cmp
jecxz
test
icebp
hlt
pop
int3
push
and
dec
je
fcoms
test
jnp
pop
cwtl
pusha
pop
les
popfw
dec
dec
lahf
or
mov
popa
subps
pop
pop
fnstenv
dec
cmpsl
out
pop
xor
inc
mov
mov
push
pop
pusha
mov
adc
cmpsb
int
xchg
jge
xchg
add
push
inc
push
orb
push
les
or
movsl
or
pop
frstor
cmp
pop
push
xor
into
dec
mov
insb
add
jo
jb
push
loopne
cmp
and
and
push
dec
insl
scas
fsubrl
push
push
ja
into
push
movsl
dec
fistpll
or
mov
pop
pop
jae
lret
cmpsl
std
fcompl
push
insl
cmp
jle
xlat
jmp
sbb
pushf
pop
hlt
loop
mov
jle
push
xchg
mov
push
jo
adcl
testb
sbb
jle
pop
shrl
push
inc
jmp
xor
xchg
push
mov
push
pop
mulb
loopne
add
jl
std
push
rol
sti
js
stos
mov
add
leave
jne
je
cmpsb
cld
test
push
mov
jo
mov
mov
cwtl
loope
lock
je
dec
lcall
pop
cmp
push
bound
pop
bound
xchg
and
ja
cmp
sub
jbe
es
scas
dec
jo
jb
clc
mov
jne
repz
or
hlt
pop
leave
push
pop
dec
aad
xchg
arpl
popf
mov
lret
inc
cltd
push
mov
arpl
mov
test
dec
push
adcl
mov
cs
jb
add
arpl
adc
adc
pop
js
shll
imul
push
xor
cmp
jmp
add
push
mov
push
cmp
popa
popa
cmp
xchg
add
and
inc
in
pop
bound
cwtl
bound
inc
mov
and
adc
push
cltd
pop
push
mov
push
push
jns
xor
mov
pop
mov
cld
mov
shlb
pop
or
les
jge
sahf
or
xor
xchg
dec
out
pushf
aaa
aam
or
shr
jl
pop
cmp
push
dec
mov
mov
pop
mov
push
lock
push
js
shll
push
jle
and
xor
mov
inc
lcall
aam
push
pop
push
jno
dec
cmp
xor
jae
mov
jno
das
jmp
add
adc
aad
orl
cmp
mov
xor
add
ds
push
cmp
je
cwtl
mov
out
ret
mov
inc
cmp
add
je
add
fwait
xchg
scas
in
fwait
xorb
mov
mov
fs
jnp
mov
dec
stc
xchg
cld
add
dec
jl
push
dec
cmpsb
ret
jbe
call
arpl
sub
sub
pop
push
xchg
nop
mov
fnstsw
aad
add
mov
shr
jno
sbb
in
mov
jo
call
or
aas
or
mov
iret
inc
int3
dec
push
mov
inc
adc
push
and
pop
dec
and
push
push
mov
sbb
loope
cwtl
fldenv
adc
cmp
or
call
es
ret
or
in
imul
insb
xchg
xchg
or
cld
sub
cmc
arpl
rol
jle
mov
in
ss
and
rcl
mov
xchg
jecxz
addr16
stc
ret
fcomps
push
push
add
int
insb
rcll
std
fwait
inc
push
add
mov
sbb
cmp
xchg
ss
xchg
fwait
sbb
gs
aad
fcmovnu
gs
incl
out
mov
gs
and
sub
mov
sbb
aad
push
mov
dec
sbb
fsubl
stc
add
dec
dec
lret
inc
mov
sbb
rorl
test
mov
movsl
adc
mov
jl
jg
subb
mov
test
mov
cmp
cltd
fsubrp
outsl
cmp
mov
xchg
jnp
ret
and
push
jecxz
dec
dec
fldenv
les
push
imul
xchg
mov
cltd
iret
pop
push
mov
cmp
popa
pop
cmp
jmp
sbb
xor
push
push
les
push
mov
scas
cltd
xor
mov
addr16
fisubrl
mov
pop
or
lock
ffreep
pushf
das
or
push
add
fwait
pop
cmp
lock
addl
test
aad
insl
or
jmp
inc
inc
jne
dec
xchg
jne
and
mov
mov
pop
scas
inc
inc
loop
xlat
rcr
mov
aam
sub
add
xor
lds
lahf
les
sbb
mov
or
jg
andl
jp
sub
jne
sbb
push
xor
cmp
xor
mov
or
and
sub
push
data16
idivb
dec
insb
inc
and
xchg
sub
jle
dec
inc
fwait
pop
xor
in
lods
js
jg
movsb
and
and
pop
xor
ja
pop
cmp
mov
adc
xlat
adc
sub
fisubrl
pop
int
inc
lret
xchg
sbb
and
call
aad
cmp
dec
stc
clc
xlat
rcrl
mov
or
das
and
mov
pop
les
les
out
xor
popa
pextrw
pop
fs
push
cmp
and
pop
ljmp
movsl
inc
js
and
pop
addr16
xchg
mov
mov
fldenv
in
cmp
mov
mov
sub
mov
or
rol
sub
cwtl
add
nop
icebp
mov
xchg
dec
jo
jne
nop
pop
sbb
xor
mov
repnz
std
xor
aam
or
cmp
cmc
mov
test
push
rorl
pushf
lds
inc
mov
shrl
cmpsb
mov
lcall
cmpsl
insb
in
jmp
pop
jo
movsb
stos
sti
je
fwait
sub
and
nop
int3
fs
push
into
sahf
loope
and
xchg
popa
pop
les
lds
mov
or
cmp
gs
mov
dec
popf
dec
xchg
test
nop
stos
out
and
sbb
loope
jno
iret
mov
jno
pop
inc
pusha
idivl
pop
jo
add
push
add
adc
and
icebp
mov
jp
andl
or
lods
sub
fcoml
loop
popa
pop
add
lret
js
arpl
iret
and
or
les
sbb
inc
in
movsb
push
aas
shrl
bound
bound
mov
es
add
jo
jge
jbe
jp
sbb
push
addb
out
push
out
sub
mov
xchg
xor
aam
dec
jl
aas
jb
lds
mov
mov
fs
cmpsb
sbb
xchg
inc
adc
push
int
or
lahf
sbb
fistl
cmp
je
sbb
fs
sub
mov
mov
xlat
jle
mov
iret
js
stos
inc
push
js
hlt
and
sub
sbbb
and
fldt
jge
lods
fstpl
mov
mov
push
fcmovne
adc
push
icebp
sub
shll
mov
lds
les
sbb
mov
jns
bnd
in
notl
pop
cltd
mov
cwtl
inc
sub
fistpl
jne
mov
fs
pop
jno
mov
or
mov
insb
fimuls
cmp
icebp
icebp
xchg
fcompl
popa
rorl
pop
or
and
stc
mov
bound
fimull
cltd
das
dec
add
enter
pop
sahf
outsb
js
and
outsl
dec
mov
sti
xlat
cmpsl
or
xchg
jbe
pop
mov
stc
rcl
movl
add
mov
sarb
sbb
mov
pop
cmp
pop
rcpps
mov
xlat
push
sti
cmp
cmp
push
test
xchg
push
pop
loop
addr16
outsl
fs
push
cli
push
repnz
cmp
sti
call
jmp
cwtl
jb
loope
and
or
cmp
pop
loope
jg
xchg
xor
out
pop
cmova
int3
jae
mov
pop
mov
imul
int
cld
sub
dec
ss
pop
aam
jle
cmp
je
imul
sub
pop
nop
lods
shll
pop
fsts
lret
pop
xchg
dec
insb
cwtl
or
inc
aad
testl
cltd
in
cmc
xor
xor
mov
mov
std
fistpl
lret
push
pop
lds
mov
mov
gs
jb
icebp
lock
sbb
jns
test
pop
cmp
lcall
xchg
insb
cmp
fldenv
jo
addr16
lods
xor
hlt
mov
jg
pop
adc
fdivp
or
ds
movsl
push
inc
mov
xchg
and
push
pop
fsts
xor
rcll
arpl
xchg
xor
jbe
xchg
stos
jp
mov
push
cmpsl
test
pop
pop
mov
outsl
movsb
cmp
out
aad
rcrb
cwtl
mov
test
or
push
les
out
aaa
cltd
fs
fxch
aad
ret
or
and
sbbb
adc
jbe
jg
jns
repz
mov
ficompl
imul
ljmp
test
mov
add
and
jae
ljmp
jbe
ret
in
scas
cmp
push
fstl
xchg
pop
emms
cmp
sarl
and
pop
push
and
adc
or
sarl
scas
mov
movsl
ret
lret
insb
int
xor
jp
sti
sbb
push
movsl
loopne
mov
mov
or
lds
aam
cmp
or
sub
mov
dec
dec
cmp
daa
mov
dec
int3
sbb
hlt
push
cltd
and
nop
jnp
repnz
cmp
mov
fidivrl
movsb
jo
cwtl
sbbb
daa
loop
mov
fsts
test
sti
push
out
push
enter
lds
pop
je
pop
out
dec
pop
fwait
xor
iret
fs
je
in
push
aam
popa
arpl
loop
mov
das
mov
inc
push
xchg
sbb
add
sub
mov
adc
test
into
mov
and
push
outsb
test
pop
sub
test
js
out
pop
mov
test
xchg
cwtl
lods
inc
icebp
out
jecxz
xor
dec
mov
jne
push
fdivrs
mov
jbe
push
mov
jno
inc
pop
fucom
ljmp
dec
enter
jne
dec
imul
nop
lods
test
sbb
mov
adc
sbb
push
and
ljmp
adc
jnp
rorl
lea
shr
and
pop
mov
mov
sbb
dec
xor
imul
pop
cwtl
pop
cmp
repnz
cmp
je
cmpsl
jbe
lahf
pop
lock
movsb
out
les
jne
or
loop
mov
fisttpl
push
stos
lock
or
cmp
dec
aaa
jb
fsubrs
out
dec
fsubrl
sbb
inc
in
push
mov
push
jne
or
loopne
jmp
push
mov
addr16
out
dec
stos
test
dec
arpl
jb
testl
cli
mov
aad
fwait
pop
jecxz
adc
xchg
cmp
out
lods
mov
test
mov
adc
and
pop
push
mov
icebp
out
push
rorl
in
inc
cmp
fidivrs
mov
mov
mov
adc
mov
jbe
dec
dec
sbb
cmp
aad
mov
sbb
push
push
adc
ljmp
mov
call
loopne
dec
fstl
dec
in
mov
mov
je
jp
lock
push
lahf
out
dec
jae
mov
inc
das
testl
xor
mov
mov
xchg
add
out
sub
ja
lock
cmpsb
ret
shr
repz
cmpsl
addb
mov
mov
push
int
or
mov
sbb
fisttpll
pop
and
mov
lods
fs
insl
pop
push
hlt
imul
cmp
adc
dec
push
ret
or
in
mov
mov
movsl
and
popf
mov
or
cmpsl
fucom
pop
cmp
or
rorb
ret
inc
pop
mov
fstpl
dec
push
cmpsb
mov
es
out
mov
fldenv
outsb
out
inc
packuswb
or
outsl
test
pop
mov
cli
faddl
rcr
arpl
sub
xchg
jae
push
out
fs
mov
push
cmp
shll
cli
cmp
jne
sbb
test
dec
mov
dec
out
stos
jo
xchg
insl
fs
rol
mov
in
fnstcw
scas
jns
cmc
mov
push
jo
cwtl
xor
test
mov
inc
push
sahf
adc
xor
jle
ja
outsl
out
add
addr16
push
adc
rcl
mov
stos
jo
rorl
int3
xor
shlb
pop
mov
popf
loopne
xchg
stos
fnstcw
mov
scas
cmp
or
insl
stos
popf
jmp
dec
dec
and
mov
mov
orl
cmp
lea
pop
stos
aad
add
outsb
fs
movl
bound
loope
clc
mov
adc
int3
mov
dec
leave
sets
loopne
and
mov
sarb
insl
je
out
nop/reserved
add
mov
rcll
jne
out
mov
mov
cmpsb
jg
addr16
insl
int3
daa
out
jecxz
cmp
adc
push
test
cmp
jns
aad
loope
mov
jae
fstpl
je
cmp
mov
les
cmp
xchg
jb
pop
arpl
push
cmc
cltd
sub
sub
ljmp
add
pop
cmp
cmp
sar
pop
cmp
cmc
mov
push
push
xchg
mov
jg
dec
xchg
cmp
xchg
push
test
or
fwait
fcompl
and
in
push
dec
movlps
aas
aam
iret
inc
pop
jno
in
je
pop
cmp
bound
mov
mov
pop
fwait
in
xchg
in
aaa
push
mov
jno
or
add
inc
mov
insb
mov
mov
les
mov
pop
aas
cmp
je
and
cmp
inc
xor
lahf
addr16
in
dec
xchg
ljmp
push
into
push
sub
lahf
pop
out
aam
jae
mov
lds
sahf
mov
faddl
imul
gs
sbb
ret
mov
cld
scas
push
aas
ja
cmpsl
rcrb
pop
out
mov
in
mov
pop
xchg
pop
push
movsb
sahf
je
pop
fs
push
and
mov
xchg
cmp
es
pop
push
in
fstpl
sbb
pop
cmp
fcoms
sub
inc
scas
sbb
nop
adc
stos
test
out
mov
mov
and
xchg
insb
out
lods
cmp
daa
aad
in
arpl
cmp
jmp
out
sahf
dec
in
je
cmp
push
int
jno
and
dec
dec
shlb
roll
daa
xor
push
stos
adc
pop
pop
test
jl
jg
aas
jg
test
pop
imul
js
pop
dec
ljmp
popf
addl
mov
test
xor
pop
jbe
outsb
sub
pop
ja
sub
xchg
insb
push
in
pushf
xchg
movsb
jae
push
bound
cmpb
cwtl
sbb
pop
push
lahf
sub
mov
ja
int3
cmc
sub
imul
and
sub
jo
add
dec
loope
cmp
fidivrl
iret
jbe
popf
xchg
cmpsb
push
or
fwait
push
bnd
or
add
mov
lcall
call
rcl
add
shll
and
jbe
addr16
mov
fxch
xchg
and
jo
faddl
das
mov
dec
fcompl
add
ljmp
push
js
scas
inc
jae
in
jg
mov
daa
les
xchg
jno
jecxz
stos
mov
rclb
and
inc
gs
adc
in
jl,pt
outsb
fisubs
pop
sbb
xchg
mov
mov
mov
cmp
lods
and
imul
fsubp
mov
ret
loope
pop
loop
and
mov
into
roll
aam
cmpsl
andl
cwtl
mov
mov
jne
enter
sub
jg
loop
test
xchg
les
mov
sbb
cmpl
cmp
aas
pop
adc
sub
adc
bound
xchg
or
inc
js
std
ja
subl
jb
push
mov
add
je
sub
and
mov
lcall
and
mov
push
pop
scas
push
pop
mov
jl
stos
into
inc
movsb
mov
cltd
mov
cmp
sbb
int
addb
ljmp
lea
hlt
and
int3
iret
push
xchg
pop
sahf
loope
std
dec
shlb
xchg
adc
xor
adc
cli
dec
inc
and
mov
lds
in
cmp
ret
sbb
sbb
fdiv
insb
add
popl
js
pusha
cmp
dec
or
outsb
push
sbb
test
fs
jl
in
add
and
mov
test
out
mov
or
loop
xchg
cwtl
xchg
jne
sbb
je
inc
ror
xor
jp
scas
push
cmpsl
xor
xor
jb
jne
add
jno
mov
and
test
jge
jp
push
je
aas
xchg
fwait
dec
mov
push
add
insb
sbb
data16
stos
insb
add
mov
ljmp
fsubr
fs
xchg
test
dec
sub
sti
xor
daa
jg
jmp
push
int3
push
or
roll
es
iret
inc
mov
test
xlat
pop
adc
sti
xchg
mov
cmc
pop
sbb
mov
cwtl
bound
sbb
add
movsl
push
es
jle
scas
cwtl
fxch
xchg
enter
hlt
bound
and
mov
jecxz
push
cltd
rcll
push
sbbb
int
les
outsb
into
push
jb
mov
fists
pop
cmp
cmp
cmp
pop
pushw
adc
inc
adc
mov
outsl
inc
adc
jg
push
orb
inc
in
sarb
pop
stos
push
out
movsb
fstps
xchg
jmp
pop
xor
cmp
xor
inc
dec
and
xchg
lret
inc
pop
fldenv
orl
loop
in
xchg
or
pop
dec
sbbl
xor
jae
inc
inc
mov
lret
pop
mov
cmp
add
imul
shlb
movsb
or
cmpsb
cmp
xchg
les
push
fwait
or
push
lods
mov
pop
jno
sub
hlt
mov
cmpsb
aad
enter
lcall
sbb
lds
out
jmp
mov
sti
enter
fs
in
das
or
xchg
sbb
cli
xor
je
movsl
rolb
xchg
addl
jo
clc
orb
add
cmp
fnstcw
popa
xchg
faddl
loope
repz
cltd
fnstsw
frstor
xchg
add
cwtl
xchg
inc
inc
pop
xchg
pop
jo
mov
mov
push
xchg
cmp
sbb
cwtl
std
cwtl
jecxz
or
ljmp
ljmp
jmp
arpl
xor
jge
push
jbe
ret
dec
jg
idivl
mov
and
sub
cmp
add
xchg
xchg
dec
cmp
ret
jo
test
or
xchg
into
mov
mov
mov
pop
dec
fwait
mov
or
fcmovb
xor
jo
mov
data16
add
test
jae
sbb
jns
mov
cmp
cmp
clc
inc
jne
sub
mov
loop
inc
adc
cmp
clc
and
mov
or
cmp
mov
arpl
jle
xchg
mov
cmp
pop
lock
in
packuswb
cmp
cmpsl
mov
jge
fcomip
xchg
mov
push
daa
jge
xchg
mov
sbb
lods
lcall
fs
in
call
negl
mov
pop
int3
sub
push
aad
xchg
cmp
fsts
adc
lods
inc
mov
aas
mov
stos
add
or
push
adc
jne
sub
into
sahf
jl
inc
lahf
loope
dec
push
push
je
outsl
cmp
dec
cmpsl
hlt
push
and
inc
stos
cmp
out
cmpb
add
fstpl
inc
flds
mov
xchg
stos
sub
cmpsb
push
jb
mov
pop
in
test
aas
inc
leave
or
hlt
xchg
out
and
insb
add
aaa
mov
gs
ljmp
repnz
xor
mov
and
aad
imul
pop
fildl
adc
adcb
sub
test
cmpb
inc
sbb
aad
jg
dec
add
pusha
push
xor
adc
out
add
or
jne
push
jbe
orb
sbb
xor
imul
pop
in
sub
fisttpl
pop
out
or
iret
add
xor
sbb
jbe
pop
psadbw
stos
pop
aad
mov
jno
stos
test
ficomps
mov
movsl
aaa
inc
gs
mov
ja
inc
stc
ss
push
call
mov
out
pop
out
ja
ficomps
in
ficompl
ja
cmpsl
stc
inc
insl
mov
outsl
mov
xor
adc
dec
sahf
sbb
in
lahf
jno
push
loope
dec
cwtl
cwtl
xchg
lods
sbb
ljmp
inc
adc
std
jb
push
clc
push
add
xor
out
xchg
jmp
push
and
and
setbe
stos
xchg
cld
pop
mov
mov
adc
or
push
jmp
call
jbe
xchg
push
iret
push
mov
rclb
int3
mov
xorb
push
xchg
add
push
mov
outsb
or
int
cli
and
sbb
adcb
cmp
dec
pop
and
movsl
imul
push
mov
push
int3
pop
in
jae
pop
mov
sbb
xchg
xor
mov
push
dec
shlb
inc
pop
leave
popa
adc
mov
pop
push
jp
fildll
sub
jne
mov
jns
in
shlb
cwtl
inc
lret
dec
inc
je
sub
addr16
add
and
and
cmp
push
movsl
push
std
xor
mov
cs
bound
cltd
iret
cmp
jg
add
cmc
ja
xchg
sbb
mov
lahf
call
jns
je
in
iret
std
out
je
xor
fdivl
scas
cli
test
in
sbb
mov
xchg
or
cmp
add
imul
rcl
test
cmpsb
daa
jbe
outsl
xchg
or
and
xor
scas
or
add
and
imul
mov
or
jl
or
xchg
jnp
cld
dec
stos
test
push
pop
jecxz
lock
movsl
pop
xchg
lret
adc
dec
add
lods
or
lock
out
and
inc
cmp
and
and
sahf
cmp
xor
lds
sub
inc
adc
cwtl
cmc
mov
mov
lods
adc
cmp
push
add
push
add
xchg
lret
jne
sarl
mov
leave
pop
lret
bound
out
cltd
rclb
movsl
xor
lret
lret
push
shll
fstps
dec
xor
pop
ja
lods
sub
ds
in
dec
cmp
pop
cmp
lods
aam
dec
cltd
ljmp
lfs
xor
jl
scas
push
or
sub
fs
data16
int
jns
push
rcrl
bndstx
push
jnp
mov
push
hlt
insb
xchg
clc
pop
lret
stc
cs
int
cmp
dec
push
mov
sub
push
and
xchg
insb
sahf
inc
xchg
lcall
out
pop
push
sub
int
cwtl
insl
mov
mov
mov
shrl
int3
mov
dec
cmpsl
movb
fsts
push
inc
sar
jo
dec
int3
scas
or
adc
cli
mull
cltd
movb
cmpsb
add
rcll
cmp
cmp
loop
sub
cmpsb
stos
popa
pop
daa
mov
rcrb
insb
mov
popa
push
mov
into
pop
lret
imul
test
cmpsl
mov
cmc
in
sti
fisubl
test
cwtl
out
sbb
cli
dec
cmp
mov
dec
pop
cltd
call
hlt
hlt
in
jno
out
sbb
out
adc
adc
sbb
sub
xchg
aad
orl
scas
cmp
sbb
push
jecxz
js
ljmp
add
cmpsb
push
dec
aam
insl
iret
mov
mov
jg
fs
sub
dec
lahf
or
push
stc
imull
xchg
stos
sbb
cmpb
pop
dec
cwtl
gs
aaa
lret
pop
add
repnz
jno
or
inc
negb
negl
wrmsr
add
cltd
orb
pop
dec
movb
or
and
mov
cmp
jmp
pop
inc
jns
mov
loop
push
and
dec
sub
sub
jno
mov
fwait
in
mov
mov
jmp
and
push
data16
adc
xchg
sbb
sbbl
cld
lss
sbb
bound
cmpsl
aas
fwait
sti
or
sbb
lret
neg
into
nop
out
lods
mov
cmp
mov
pop
sub
mov
mov
mov
xchg
nop
add
adc
cmp
xchg
mov
push
or
or
nop
lds
mov
les
je
jae
loop
xchg
das
jno
xorl
ret
fldcw
in
call
mov
xor
sbb
xchg
pop
push
jecxz
loopne
dec
scas
mov
lea
or
in
nop/reserved
jo
mov
mov
sbb
jo
sub
cmp
mov
fwait
in
dec
and
sbb
jae
inc
xchg
js
into
movsl
xor
arpl
scas
scas
dec
mov
lret
sbb
inc
jnp
pop
mov
popa
lds
mov
push
in
lahf
shrb
inc
js
arpl
or
xor
js
mov
les
fnstenv
sub
lds
cmp
and
and
cmc
cmpb
add
push
ja
fildl
xchg
xor
movsl
das
add
popf
and
and
insb
xor
adc
ljmp
fdivrl
shll
xor
in
mov
addl
jge
or
jecxz
test
adc
push
hlt
pusha
test
xor
les
mov
inc
lret
xchg
mov
dec
bound
daa
and
push
hlt
push
xor
jl
int
inc
lfs
cmp
inc
loope
mov
iret
inc
imul
js
data16
or
cmp
cmp
lock
sbb
mov
aad
adc
xor
mov
data16
push
fwait
pop
xchg
pop
mov
adc
les
and
fidivl
out
mov
stc
dec
fs
jmp
icebp
test
mov
or
lods
or
imul
xor
pop
push
pop
popa
ficompl
mov
cmp
sbb
cmpsb
xchg
movsl
flds
xchg
pop
arpl
push
mov
sbb
push
cmpsb
dec
ret
sbb
push
cmp
xchg
in
xchg
bound
jne
adc
sbbl
sbb
iret
push
mov
je
pushf
test
ret
cmc
sbb
dec
dec
xlat
jnp
jl
pushw
cmpsb
pop
and
cmp
mov
mov
cld
pop
cmpsb
mov
xchg
mov
push
push
test
mov
data16
xchg
add
cmp
and
flds
pop
push
movsl
sbb
mov
stos
lcall
jne
fwait
inc
in
loope
cmp
incb
inc
cmc
jbe
ds
or
push
cmp
push
jle
mov
jno
je
push
ret
popa
jbe
out
in
xor
sbb
call
and
lds
jmp
ja
xor
imul
arpl
pop
ds
inc
adc
movl
mov
xchg
mov
data16
out
pop
cmp
inc
data16
popf
in
dec
push
cmc
pop
push
sbb
fwait
cmp
cmp
bound
fildll
test
mov
pop
mov
fs
loop
rcrl
test
fldt
mov
int
push
jbe
loop
out
adc
pop
add
js
or
aas
movsb
add
scas
enter
sub
rcpps
popf
xchg
js
add
inc
jns
push
jge
sbb
cmp
test
push
xchg
fisubrl
mov
fsubs
push
outsl
mov
jecxz
inc
push
fisttps
sub
or
adc
orb
ret
adc
cmpb
pop
in
adc
sbb
insb
dec
xor
lds
xor
xchg
mov
fcomip
insb
lds
dec
mulb
ficompl
ret
imul
bound
pop
push
pop
and
mov
rclb
test
in
fwait
push
adc
push
fsubr
push
call
vpminsw
les
fistl
mov
sbb
mov
and
mov
pop
pop
ficompl
inc
mov
adc
iret
loope
ficompl
fistpl
dec
shlb
loopne
push
xor
adc
lds
icebp
shrb
cmp
pop
cmp
popl
jb
xor
push
in
mov
test
xchg
shll
pop
mov
lcall
cwtl
cli
push
and
push
cmpsb
fs
scas
push
cmp
adc
cmp
lcall
test
push
push
fisubrs
add
add
sub
fs
lret
inc
je
xor
je
lods
mov
cmpsl
xor
and
cmp
xor
mov
push
jle
aaa
jmp
xchg
dec
scas
push
ljmp
cmpb
push
ficompl
push
loop
dec
xchg
popf
inc
pop
in
movsb
push
push
sbbl
xor
sti
sub
lods
mov
push
mov
mov
mov
cmp
adcb
push
inc
mov
insb
push
rcrl
ret
mov
sahf
inc
push
pop
loope
sub
add
xchg
push
mov
mov
and
out
mov
push
mov
inc
jmp
push
adc
push
xchg
jns
mov
sub
xchg
mov
pop
pop
jbe
bound
sub
push
mov
ret
imul
push
jnp
loopne
push
xor
add
cltd
lds
sub
mov
repz
loope
jb
mov
cmp
ret
pop
inc
mov
lea
xchg
inc
sbb
push
sub
in
add
es
inc
mov
xchg
push
daa
or
xchg
ja
js
je
cltd
lods
das
insl
pushl
outsb
pop
dec
mov
adc
pop
in
pop
add
push
or
cmc
imul
imul
in
push
inc
jne,pt
jl
cmpb
adc
rcrb
cmc
les
pop
push
imul
add
out
add
nop
int3
mov
mov
ljmp
bound
mov
push
xchg
xchg
dec
sub
mov
movsl
sub
test
xchg
push
add
ret
jns
sub
icebp
out
dec
mov
fdiv
or
cmp
pop
sbb
lock
outsl
xchg
cmpsb
movsl
pop
mov
lods
scas
aad
push
and
or
popf
adc
das
inc
lcall
fs
test
push
rclb
ss
cmp
lcall
cmp
push
movsb
inc
mov
inc
mov
fcompl
dec
mov
jb
sub
out
mov
dec
adc
pop
adc
or
js
push
dec
cmp
inc
stos
push
lds
cmp
lcall
adc
aam
cmpsb
dec
divl
mov
fwait
xchg
lcall
fsts
iret
xor
pop
gs
jo
arpl
aas
cmp
sub
cmpsl
data16
jbe
ror
pop
ljmp
inc
les
add
sub
aam
xchg
fcomps
mov
push
fdivr
mov
push
out
mov
push
mov
lahf
aam
mov
aas
inc
dec
jg
mov
movl
pushf
faddl
je
mov
pop
or
iret
mov
mov
mov
and
jb
js
jle
test
popa
test
push
insb
cmpsl
or
sub
push
inc
sti
cli
fs
imul
push
data16
inc
aam
cmp
jno
fs
dec
arpl
jle
jne
dec
fsubr
cmp
cmp
sbb
xor
int
sbbl
fsubrl
or
sub
dec
cmpl
pop
sbb
dec
push
xchg
fmuls
sbb
je
push
lahf
cmpb
ss
jb,pt
jb
dec
fadd
push
je
and
fsubs
mov
rol
or
je
lock
fisttpll
lcall
inc
fwait
in
xor
stc
pop
inc
xchg
hlt
and
mov
mov
pusha
cltd
mov
faddl
mov
sub
jle
scas
rcrl
push
rclb
ljmp
mov
fisttpll
cmp
sub
arpl
loop
lahf
add
xchg
push
mov
inc
hlt
add
rcll
mov
mov
xchg
insb
mov
mov
dec
and
xchg
xchg
nop
mov
cmp
or
clc
gs
sbb
push
bound
leave
rcrb
adc
leave
in
lods
fstpl
mov
cmp
cltd
dec
mov
fwait
cwtd
or
cltd
pop
jnp
pop
data16
pop
and
push
mov
cld
test
imul
cmp
add
add
push
cmc
sarb
dec
xchg
lret
mov
mov
pop
out
stos
dec
mov
pop
loope
dec
pop
xor
aam
push
adc
pop
imul
mov
lcall
mov
jl
push
lea
iret
jo
fs
add
mov
jo
push
push
pop
mov
xchg
fistpl
sub
push
adc
push
lcall
gs
test
lcall
test
insl
movsb
test
inc
sbb
push
pop
mulb
pop
sarl
rol
sub
mov
rolb
lret
js
jge
fstpl
pop
mov
xchg
cmp
cmp
cmp
stc
mov
test
push
pop
fists
sub
push
fistpll
mov
jg
jp
es
fdivrl
inc
xchg
mov
jg
mov
fs
pop
imul
jnp
push
dec
pop
add
sbb
and
or
pop
add
jno
mov
bound
push
ja
mov
je
test
in
jecxz
dec
pop
cmpsl
push
test
cli
in
inc
and
sahf
push
mov
lds
or
mov
push
xchg
mov
repnz
fwait
call
pop
into
cltd
mov
jne
cmpl
add
push
xor
bound
jo
push
fs
mov
insb
push
lock
icebp
jp
out
jnp
stos
dec
sahf
xchg
stos
pop
cmpsb
fldenv
xor
push
dec
xor
call
notb
outsb
adc
inc
popa
xor
pop
les
aam
ficomps
dec
adc
fcompl
lds
enter
ficoml
pop
lds
xchg
out
js
scas
xor
sub
adc
mov
add
mov
mov
jl
push
push
in
sbb
pop
push
push
inc
xchg
pop
mov
mov
cmp
jne
push
jmp
es
push
jb
lea
aas
es
das
mov
mov
nop
fwait
mov
int
pop
stos
mov
dec
aaa
xlat
mov
xchg
dec
cli
cld
mov
adc
adc
repz
mov
mov
jl
ret
push
popf
adc
and
lcall
popa
push
sarb
cmp
aad
movsl
imul
push
fnsave
or
arpl
cmp
or
lret
nop
mov
cmpl
push
push
pop
jp
or
jne
icebp
jb
lret
adc
lods
add
adc
push
xchg
xchg
cmpsb
add
dec
push
repnz
push
stos
cmc
cwtl
aam
lock
arpl
fstps
sbb
jg
mov
cmc
test
mov
xchg
scas
sub
mov
cmp
sbb
je
out
movsl
popa
jae
mov
jo
pop
add
pop
and
imul
fdivrl
nop
lds
pop
icebp
je
pushf
mov
addr16
jl
add
bound
sbbb
add
adc
push
push
outsl
push
inc
mov
movsb
mov
test
fisubl
rcr
dec
pop
jg
shll
je
dec
pop
push
jnp
mov
ret
loopne
pop
xchg
loopne
dec
pop
sar
pop
adcb
sub
mov
pop
xor
js
jnp
loope
ljmp
nop
js
insb
jnp
loop
dec
iret
test
push
cmpsb
cltd
mov
mov
mov
push
out
mov
jo
orl
insl
jg
int3
and
adc
loope
xchg
mov
in
adc
pop
push
lds
xchg
in
pop
jb
cli
xchg
out
jb
lret
in
icebp
addr16
sbb
xchg
addr16
int
push
test
inc
jg
into
ret
outsl
xchg
xchg
subb
test
fpatan
add
jo
std
xchg
sbb
stos
mov
cwtl
icebp
xchg
inc
mov
cmp
pop
jecxz
adc
mov
divb
loop
jmp
mov
out
adc
mov
or
mov
rcrb
ret
mov
pop
and
xchg
mov
mov
imul
lret
sub
mov
scas
dec
sbb
aaa
outsl
jmp
mov
mov
push
xchg
fimull
jbe
arpl
popa
fsubrp
pushf
loopne
mov
inc
cmpsl
and
stos
adc
and
push
andl
mul
adc
jne
mov
inc
xchg
scas
push
out
repnz
scas
xor
jg
mov
ret
mov
jno
sbb
fisubrl
or
sub
shll
gs
in
lds
or
mov
cltd
xchg
cld
aam
test
pop
push
pop
push
nop
in
scas
ret
xchg
adc
pop
and
cmp
icebp
movsl
mov
mov
insb
stos
push
and
mov
ret
xchg
adc
xchg
or
mov
and
jecxz
lcall
mov
repnz
cmpsb
mov
test
mov
es
push
lcall
jg
aam
repz
jl
pop
arpl
cmpsb
pop
xchg
loopne
insl
push
js
jne
hlt
imul
jge
mov
jl
daa
cmp
cmpsb
inc
push
lcall
adc
das
add
scas
or
rclb
sub
and
pop
cmp
gs
xor
fdivs
gs
mov
jne
pop
imul
hlt
pop
data16
sbb
inc
fsubrl
or
sbb
fildl
jge
lret
call
and
sbb
ja
or
aad
mov
dec
mov
and
out
jbe
jecxz
data16
mov
adc
cltd
cli
cs
clc
imull
pop
pop
xor
aaa
jmp
mov
das
xor
add
mov
xchg
pop
add
push
arpl
loope
stos
lods
out
pop
add
out
bound
xchg
or
out
test
push
xchg
cmp
dec
int
cmp
in
cmc
mov
push
inc
xchg
jo
mov
repnz
int3
outsb
movsl
movsb
sub
adc
pop
outsl
mov
pop
and
pop
lret
xchg
into
sbb
bound
mov
clc
mov
lock
div
std
lcall
outsb
jecxz
mov
into
imul
push
lahf
repnz
sub
ficoml
cmpsb
test
or
sub
jl
lea
sti
sbb
push
icebp
jl
mov
xor
stos
sbb
sub
insl
and
or
ja
stos
out
sub
bound
xor
adc
js
cmp
and
call
jo
mov
pop
lret
test
mov
ret
out
cmpsb
mov
push
lcall
ret
push
adc
pop
cmpsb
jmp
sub
adc
scas
popa
imul
xchg
mov
pushf
je
mov
mov
dec
sub
push
jp
inc
movsl
fnstsw
xor
push
and
lea
daa
inc
push
xor
and
push
mov
fnstsw
jmp
daa
sar
inc
jo
dec
pop
xchg
iret
pop
push
into
cmpb
sub
inc
icebp
pusha
push
lea
das
insb
cmp
dec
mov
lods
xchg
sbbl
rclb
arpl
xchg
insl
xchg
jns
push
enter
lahf
push
test
mov
push
fadd
lahf
jne
xchg
enter
dec
push
cmpsb
ss
insl
add
push
fucomip
xchg
mov
mov
imul
fwait
dec
ds
jg
xor
pop
mov
lret
jge
js
xchg
add
jmp
cwtl
ret
gs
mov
daa
xor
inc
mov
subb
lds
pop
neg
dec
mov
fs
lcall
insb
xchg
mov
mov
test
rcl
cmp
mov
into
bnd
jne
enter
xchg
adc
push
enter
loopne
sub
data16
rorb
sub
nop
xchg
fistpl
out
pop
fdivl
sahf
ficoms
int3
imul
repz
xor
popa
push
cmp
loop
add
fcomps
cmp
int
mov
xor
andb
pop
push
int
xlat
fisubrl
push
push
dec
sbb
dec
push
and
or
fmull
inc
adc
in
in
jp
mov
sub
and
dec
inc
stos
sbb
bound
movsl
pop
mov
inc
fdivrl
sbb
adc
and
pop
mov
popa
pop
push
cmp
xchg
jg
push
fsts
scas
jmp
hlt
push
jns
jl
cmpsb
arpl
add
inc
icebp
add
aas
in
and
lret
mov
js
mov
mov
push
dec
les
mov
incb
stos
or
push
jo
scas
mov
jl
sub
jo
jmp
mov
pushf
sahf
xchg
jae
cld
jle
xchg
ret
mov
nop
cmpl
cld
pusha
mov
dec
lock
push
sub
nop
ljmp
fistpl
aad
and
js
cld
pop
jecxz
mov
shll
dec
mov
adcb
add
pop
fstps
mov
mov
fucomp
inc
cmc
jns
xor
je
les
xor
cmp
push
fdivrs
pusha
xorb
dec
adc
or
jmp
cmc
cmpsl
cmp
mov
test
or
lahf
push
pushf
jge
std
inc
jg
pushf
in
sbb
push
xchg
jg
aam
xorb
test
je
fldenv
in
insb
inc
cmp
cmp
mov
mov
push
push
repz
add
push
dec
pop
lcall
cwtl
fs
lea
xlat
mov
jp
cmp
pushf
jnp
jbe
cwtl
loope
int
ficompl
ror
push
xor
sbb
push
jnp
arpl
movsb
or
cmpsl
pop
mov
push
jae
aas
adc
sbb
push
pop
aam
push
xor
aad
into
lcall
mov
push
jecxz
push
xor
inc
test
idivl
mov
lahf
call
fwait
in
dec
je
cmp
jmp
cmp
mov
subb
mov
fs
push
rcll
sahf
nop
xor
and
push
add
int
cmp
push
push
xor
outsb
push
je
lcall
pop
push
dec
fbstp
jle
push
pop
push
jg
popl
jge
push
mov
dec
dec
push
sub
push
push
js
fsubr
or
and
js
xor
mov
cmp
jl
mov
mov
test
pop
jmp
jae
sbbl
jl
pop
ret
bound
lret
push
stos
loopne
lds
jns
push
pop
negl
cmc
jae
jmp
pop
mov
gs
lds
mov
push
push
loope
cmpb
push
cmpb
sub
test
xchg
popf
cmp
mov
sub
xor
mov
push
movsl
insb
lcall
add
inc
mov
pop
frstor
mov
add
repnz
fs
test
bound
jp
jbe
mov
mov
in
jg
push
mov
test
cmp
xchg
nop
popf
mov
les
nop
pop
mov
push
pop
pop
lds
cmc
sub
cmpsb
je
pop
dec
int3
enter
jmp
pop
dec
push
into
cmp
push
cmp
add
jecxz
sbb
cmp
lcall
jmp
pushf
jo
fisubl
sbb
sub
lods
xor
stos
hlt
mov
mov
xchg
push
movsl
inc
push
mov
stos
out
dec
dec
cltd
cltd
push
mov
sub
nop
push
fldenv
cmpsb
and
das
sbb
pushf
aas
mov
lahf
mov
add
add
cmp
inc
dec
loope
pop
mov
mov
sub
stos
out
or
into
mov
push
jo
jnp
cmp
pop
icebp
mov
sbb
pop
fnsave
mov
aad
hlt
fsubrs
sub
fs
mov
cmp
jmp
add
cmp
adc
fs
fmuls
pop
mov
adc
mov
fs
inc
xchg
pop
inc
mov
xor
and
enter
adc
pop
inc
mov
test
xchg
xor
gs
pop
fstl
pop
pop
cmp
and
pop
andl
jg
mov
push
push
mov
cmpb
mov
divl
arpl
faddl
out
addr16
hlt
mov
xchg
insw
push
sahf
fcompl
mov
push
pop
adc
push
pop
jno
sbb
pop
fnsave
clc
push
adc
push
pop
mov
popf
sbb
enter
xor
push
out
pushf
jne
std
push
mov
mov
push
sbb
gs
sub
push
rcll
arpl
jmp
fcoms
cltd
push
rcrl
lret
js
loopne
cmp
mov
incl
mov
xchg
mov
dec
andb
mov
cmp
test
inc
jecxz
cmp
loop
cmpsb
pop
test
out
arpl
sbb
fcoms
cmp
lods
mov
loopne
sub
mov
push
jae
cltd
add
call
xchg
jg
pop
xchg
xchg
xor
insb
mov
test
repz
mov
cmp
inc
mov
iret
sub
lahf
push
push
fs
ja
push
je
mov
inc
push
andb
fmuls
stos
xchg
mov
xor
add
pop
repz
mov
adc
lret
jle
dec
xchg
rclb
jp
cmp
jle
add
outsl
out
shrl
pop
out
and
inc
rorl
add
jp
mov
push
push
inc
das
shl
and
and
adc
fsubrs
cmp
loopne
pusha
popa
mov
les
pop
jge
cmpsb
repz
shll
cmp
inc
popa
adc
jmp
int
js
sub
fs
mov
pop
test
pop
cmp
cmc
je
rcrl
popa
fistl
push
loop
idivb
stos
iret
sbb
addb
adcb
mov
sbbl
sbb
push
cmpsl
jge
cmp
sbb
mov
lahf
daa
or
gs
fbld
in
mov
xor
cmp
imul
js
mov
jecxz
je
sarb
push
add
xor
mul
xor
les
cwtl
mov
mov
inc
ret
stos
outsl
add
add
mov
jmp
lahf
hlt
sahf
enter
xchg
test
rcll
repnz
cmp
mov
dec
daa
mov
push
aam
lret
les
xchg
cli
iret
repz
je
adc
sahf
xor
in
xor
cmp
add
shll
push
cmp
xlat
xchg
cmpsb
adc
mov
hlt
out
arpl
push
mov
mov
sahf
and
jns
fcos
repnz
cld
or
jle
stc
mov
in
jno
mov
jns
xchg
enter
ds
xchg
dec
push
lret
cltd
push
jae
xchg
add
dec
movsl
inc
cmp
mov
jl
dec
xchg
popa
inc
push
cmpsb
fidivs
sbb
mov
ret
pop
movsb
lahf
popf
call
lahf
pop
jnp
add
aam
mov
outsb
inc
or
jbe
aaa
mov
pop
xchg
cmovl
xchg
xor
cmp
bound
insb
sbb
lahf
dec
stc
and
dec
mov
xor
orl
les
xchg
jae
sbb
lds
test
adc
cmp
outsl
inc
push
cmp
imul
add
imul
jge
dec
ret
mov
pop
mov
mov
pop
nop
scas
push
mov
out
push
and
adc
int3
jns
mov
jmp
js
fdivl
mov
cmp
mov
arpl
fnsave
jg
jne
pop
in
shll
popa
lret
push
xchg
cmp
nop
andb
popa
cmpsb
bound
and
or
cmp
jo
cltd
cmpsb
jb
loopne
sub
cld
scas
stos
inc
lods
push
mov
mov
pushf
xchg
xor
jno
add
inc
das
pushf
subl
aad
jnp
xor
sub
inc
push
inc
or
insb
adc
and
loopne
je
rorl
jo
push
mov
mov
iret
add
idivb
mov
in
or
sqrtps
inc
lahf
insl
shl
arpl
dec
bound
mov
stos
clc
xchg
out
and
pop
out
xchg
jne
sahf
add
inc
arpl
jbe
push
pop
mov
pop
pop
push
fdiv
sbb
cmc
sbb
lods
out
dec
sbb
jmp
sahf
int3
cld
test
shl
out
inc
pop
pop
sahf
es
adcl
lock
adc
bound
xchg
mov
sahf
mov
add
es
pop
mov
dec
adcl
test
cmpsl
fbld
and
or
insb
loope
popa
je
push
into
mov
mov
and
js
mov
out
je
test
jae
bound
into
mov
adc
or
mov
cmp
inc
sub
sahf
dec
jb
sbb
idivl
and
pushl
inc
inc
mov
mov
sub
dec
and
neg
mov
movsl
xor
lods
adcl
scas
aad
pop
testl
sbb
lahf
mov
mov
int3
sti
dec
je
popa
movsl
pop
jl
jne
push
push
loope
and
imul
das
imul
xchg
sub
sti
xchg
aam
dec
xchg
xchg
pop
jae
aas
je
loopne
cmp
pop
sub
xchg
jo
pop
cmp
inc
ficoml
inc
arpl
mov
outsl
mov
xchg
lds
push
cmp
stos
orb
pop
and
mov
rol
movsl
mov
fstps
cmp
sti
dec
ljmp
movsl
mov
std
xchg
inc
mov
pop
incl
cmp
inc
mov
pop
dec
and
test
pop
les
jns
popa
jne
jae
jns
stos
dec
or
cmp
lods
cmp
dec
jo
and
mov
xchg
or
test
jmp
cltd
push
jno
es
popf
adc
stc
pop
mov
mov
int3
mov
repz
in
pusha
fcmovb
jnp
jne
popf
cltd
lret
fstps
lret
adc
jno
std
pop
stc
mov
pop
lds
add
pop
mov
je
cmpb
lock
dec
jne
fs
pop
addb
pushw
fs
or
pop
sbb
push
movsb
jae
addb
ja
mov
lcall
mov
rcr
pop
inc
jo
cmp
sub
xor
sub
ja
jbe
dec
frstor
ret
add
cs
test
pop
cmp
xchg
mov
mov
lcall
adc
mov
jle
int
gs
shrl
js
pop
jl
and
adc
pop
sarb
xor
shl
outsb
inc
mov
lock
cmp
test
orl
pop
push
sbb
push
pop
cmpsl
shlb
mov
fistl
and
jecxz
je
xor
popf
jecxz
push
cmp
sbb
fistpl
cmp
dec
movsb
ret
cmpsl
push
xor
push
sbb
fs
fstl
push
addl
jo
and
sahf
pop
aam
bound
int3
pop
js
mov
push
and
in
pushf
mov
cmp
jb
adc
xchg
cmp
ja
fmul
inc
sbb
outsl
xor
add
jae
fldl2e
scas
mov
mov
arpl
sub
xchg
aas
jmp
push
mov
cmp
adc
popl
dec
cmp
fwait
or
push
lds
ret
xchg
lock
mov
daa
jo
stos
mov
sbb
les
jae
mov
scas
dec
imul
int3
adc
pop
ret
jnp
add
imul
jo
pop
int
sahf
out
movsl
adc
inc
and
jg
ficoms
xor
fwait
or
dec
cmp
push
sbbl
nop
popa
inc
and
or
sbb
test
insb
mov
mov
fmull
ljmp
xchg
add
call
and
les
adc
push
sbb
push
cmpb
pop
jnp
pop
mov
jg
cmpsl
in
addb
adcl
into
jl
push
pop
or
dec
fstps
cmp
into
jg
fwait
cwtl
unpcklps
out
outsl
bound
test
lea
shrb
adc
je
std
rcrb
jmp
lret
push
mov
lds
mov
fnop
cli
adc
jno
inc
mov
insb
pushf
xchg
lds
loop
fwait
out
ret
dec
sub
je
cmp
add
lock
mov
push
mov
test
mov
push
pop
fstpt
xchg
cwtl
daa
xchg
mov
in
mov
and
sbb
jne
mov
gs
cli
jno
add
mov
and
rorl
popf
int
lcall
lock
push
decb
pop
sbb
xchg
pushfw
add
lahf
jns
pop
sub
pop
lea
pop
nop
loope
mov
adc
adc
call
push
fwait
push
cmp
adc
cmp
jne
lret
or
dec
int3
ljmp
xorl
pop
xor
fiaddl
sub
mov
push
pop
cwtl
push
cmp
mov
sbb
sbb
aas
mov
vpsubsb
xchg
test
push
push
mov
push
jmp
jne
adc
jnp
add
jb
pop
cmpl
in
jle
out
xchg
ljmp
cmpsb
pop
loop
stos
movsb
andb
sub
lret
mov
xchg
fs
add
dec
mov
mov
dec
sub
pop
inc
stos
imul
sbb
push
in
data16
cmp
lds
je
pop
bnd
push
cld
and
popf
dec
mov
pusha
in
mov
lret
pop
jbe
stc
faddp
cli
push
jp
adc
add
add
dec
mov
and
xor
mov
or
gs
push
and
lret
xor
xor
adc
sub
jno
fsubs
push
cwtl
aad
sub
je
fcomps
lds
dec
or
movsl
inc
adc
dec
daa
cli
push
pop
js
xor
pop
cmp
cmp
outsl
cmpb
push
fwait
cmp
xorl
push
cld
rcll
push
pop
cmp
stos
push
pop
fcmovnu
incb
dec
lret
jnp
loop
cmp
mov
sbb
daa
ja
mov
int3
repnz
sbbb
in
lcall
aam
mov
sub
mov
push
gs
xchg
cli
cmpl
aad
cmp
data16
sbb
add
lock
aam
dec
js
and
mov
fisttpll
adc
mov
scas
mov
sbbl
cmpsb
xlat
aad
xchg
mov
xchg
stos
fcomi
imul
jb
dec
popa
inc
push
adc
dec
cltd
sub
leave
sbb
outsb
cmp
in
cli
push
add
stos
add
mov
mov
or
mov
sbb
add
notb
dec
test
xor
lock
push
xlat
cltd
sub
cwtl
sub
jmp
into
mov
mov
and
dec
cmp
jne
mov
rcl
push
decl
into
or
lock
xlat
cmp
xchg
add
add
sbbb
mov
or
mov
js
stos
fmulp
insb
arpl
mov
in
push
ffree
mov
mov
popa
shl
or
push
sahf
mov
or
lods
shlb
imul
pop
xchg
push
aaa
sub
dec
push
fcomps
fcmovnu
lds
adc
jp
dec
ret
insb
mov
out
sarl
fs
les
cwtl
jbe
mov
je
loope
lret
mov
sbb
mov
cmp
pop
xor
lods
loopne
leave
push
push
les
call
mov
test
mov
iretw
scas
js
xchg
sub
mov
dec
cmpb
ja
bound
xchg
jae
cmp
arpl
stos
subb
fisubs
add
rorb
outsl
push
sub
loope
xor
mov
daa
mov
jle
pop
jne
stc
sub
xchg
addb
pop
jnp
jne
adc
adc
mov
sbb
loope
push
data16
mov
push
adc
adc
dec
cmc
lret
idivb
and
or
dec
scas
cmp
sub
jmp
loope
push
into
lock
loopne
faddl
loop
sahf
jno
push
ret
and
cmp
and
inc
inc
mov
ja
inc
mov
paddq
inc
lods
arpl
xchg
inc
testw
stos
aad
xor
inc
scas
push
ljmp
push
push
scas
adc
push
popa
dec
aad
jns
rcr
iret
ja
sti
jmp
xorb
adc
icebp
mov
and
les
jge
ret
sbb
inc
xor
enter
enter
add
cmp
mov
push
lds
lods
arpl
cmp
mov
xchg
mov
faddp
mov
xchg
repnz
dec
mov
lahf
cmp
hlt
mov
mov
add
cli
pop
mov
cmp
pop
je
out
andb
pop
mov
mov
loop
fs
pop
dec
xchg
std
mov
es
mov
cmp
loopne
sahf
push
nop
jo
fxch
test
pushf
push
cwtl
ljmp
adc
jno
mov
xor
stos
test
push
shll
xchg
xchg
jo
push
sarb
iret
das
int
fists
and
and
roll
sbb
in
cmpsl
ljmp
mov
aaa
pop
mov
xchg
inc
adcb
jl
out
mov
in
dec
xor
daa
cwtl
xor
dec
cs
scas
sbb
lds
les
mov
test
push
inc
insl
and
jo
je
mov
outsb
cmp
dec
mov
popa
fmull
xchg
add
jg
dec
inc
repnz
xchg
xlat
mov
pop
pushf
mov
push
scas
and
sbb
cmp
jne
aaa
cmpsb
ror
and
pop
mov
mov
pop
ss
jl
adc
jg
nop
out
push
popf
dec
imul
movsl
jno
fstl
aaa
pushl
movsb
loope
or
jl
outsb
cmpb
cltd
adc
xchg
data16
gs
mov
sub
inc
mov
mov
icebp
sub
cmpsl
pop
stos
dec
inc
imul
push
enter
mov
test
popf
adc
jmp
clc
sahf
pusha
roll
dec
int3
mov
fidivs
aam
add
and
xchg
xor
push
rcrl
push
fstps
jge
ror
repnz
inc
fld
push
jg
dec
shll
fisubrl
dec
dec
sbb
andb
mov
insb
je
into
or
or
jns
jl
fstps
xchg
cwtl
subl
pop
test
mov
mov
test
xchg
test
adc
orl
jnp
dec
mov
mov
repz
jmp
cmpsb
int3
mov
push
aad
int
sbbl
nop
push
loopne
jl
fwait
jne
les
jp
pop
jle
sahf
pop
rcr
xchg
mov
gs
adc
in
cmp
je
movsb
out
ja
lods
and
lock
sub
cmpsb
inc
mov
lds
int3
int
mov
inc
jbe
add
mov
adc
xchg
lds
inc
dec
push
cmp
lcall
mov
rcr
xor
mov
mov
fists
cwtl
push
cmp
push
movsl
clc
push
into
dec
hlt
stos
in
inc
fmuls
inc
out
cmp
cmpsl
movsb
pushf
adc
mov
adc
sbb
ss
call
les
nop
nop
mov
addl
push
push
mov
xchg
incl
push
lret
mov
pop
jle
stos
mov
cmp
lea
xlat
les
mov
jge
out
cmp
add
xchg
mov
push
jb
fs
lods
mov
dec
fdivs
jne
lret
jno
push
test
inc
mov
es
pop
pop
cmc
jo
jae
jmp
pop
xchg
or
push
xchg
les
aad
fists
mov
dec
loop
popf
xor
push
mov
cmp
jne
mov
mov
cwtl
push
xorl
arpl
repnz
cwtl
add
jle
mov
loop
mov
sbb
xchg
jae
lret
je
ret
andb
and
pop
cmc
jae
mov
dec
xchg
mov
adc
dec
jb
jne
or
call
adc
popa
sbb
rcrb
push
icebp
mov
dec
dec
pushf
iret
cmpsb
imul
dec
lret
add
pop
fsub
dec
call
movsb
fs
addb
test
adc
inc
jno
dec
lods
bound
flds
mov
insb
test
imul
ss
mov
mov
jp
scas
and
push
rclb
adc
nop
jne
mov
mov
mov
nop
les
out
das
stos
bound
aaa
jae
lea
test
adc
shll
and
xor
jnp
je
sbb
cmp
mov
and
xchg
xor
push
js
ljmp
pushf
loop
jbe
sti
fstsw
rolb
pop
xchg
jl
jp
jge
mov
aam
dec
xchg
inc
jmp
mov
insb
dec
mov
stos
mov
into
je
cwtl
adc
or
adc
and
flds
dec
jb
pushf
roll
jo
sub
mov
mov
bound
pop
and
cmc
cmp
imul
jnp
gs
mov
imul
dec
loopne
mov
je
lea
push
inc
mov
push
les
xchg
fnsave
sbb
icebp
mov
jb
jo
pop
xchg
pop
je
dec
sahf
jbe
sahf
jmp
or
sbb
fisubrl
cmpsb
inc
sub
push
orl
dec
mov
adc
hlt
insl
or
lock
cmp
fs
pushf
pushf
jnp
loopne
mov
push
repnz
idivb
inc
cld
imul
jne
cmpl
sti
call
mov
or
mov
xchg
pop
shrb
pushl
mov
push
test
cwtl
pop
into
mov
hlt
xor
dec
cmp
add
int
sub
test
push
insb
into
mov
in
sbb
lock
bnd
mov
xchg
test
mov
cmpsl
and
add
out
clc
xchg
dec
jb
daa
aam
jo
lods
push
les
adc
pop
lds
jae
jns
loop
popa
dec
sbb
in
std
nop
rorl
or
jns
cmpsl
and
sarl
mov
mov
dec
fadds
xchg
fdivrl
xchg
aaa
pop
xor
call
stos
push
sbbb
out
add
enter
sbb
xlat
lret
test
lret
push
loopne
mov
jp
loopne
fistpl
ficoml
mov
iret
outsl
inc
popa
mov
mov
mov
mov
jecxz
xchg
hlt
arpl
in
call
and
dec
les
in
fisttps
cmp
mov
mov
adc
lret
sbb
xchg
mov
insl
jbe
mov
push
fcoms
cmpsl
test
mov
and
vsqrtpd
out
out
ds
cmp
push
mov
xchg
mov
xor
sahf
pop
lock
sub
stc
and
xor
arpl
loop
or
xchg
cwtl
pop
push
das
cmc
test
ds
push
push
shlb
popf
dec
lds
jno
push
loop
jle
xor
fxch
sub
mov
push
or
test
arpl
hlt
sub
shrb
adc
jns
test
popa
xlat
into
push
jmp
push
xchg
cmp
jge
jecxz
pop
push
pop
fwait
lds
cmpsb
push
cwtl
jo
icebp
stos
mov
js
pushf
ja
mov
arpl
push
sti
mov
mov
sub
mov
gs
push
repnz
loopne
mov
jge
pop
adc
mov
mov
loop
pushl
sbb
xor
push
repz
daa
clc
imul
sub
xchg
adc
loope
jecxz
sar
push
cmc
and
push
cmp
jge
stos
mov
mov
aam
and
add
dec
scas
sbb
imul
movsb
mov
cmp
stos
push
or
and
jbe
cmpsb
cmp
movsb
test
and
xchg
inc
es
dec
int3
data16
fidivl
rcrl
je
cmpl
ficoml
insl
lcall
lcall
and
xchg
adc
inc
dec
mov
pop
mov
jo
inc
inc
cmp
dec
shrd
bound
fstl
dec
jnp
mov
sbb
roll
lds
scas
scas
adc
cmp
shlb
stos
cmpsb
fcoms
mov
mov
adc
pop
bound
mov
dec
js
push
pop
mov
bound
lahf
bound
sti
divb
data16
mov
adcl
je
es
cmpsl
push
add
xchg
adc
sti
xor
lods
or
add
fisttpl
movsl
cmpsl
cmpsl
aam
xlat
int3
stc
inc
jg
mov
xor
add
pop
aam
aam
mov
stos
mov
add
cmpsb
sub
test
hlt
inc
sbb
loope
push
aas
hlt
sbb
pop
pop
sbb
push
cli
xor
dec
rorb
xchg
jno
pop
xor
imul
cmp
imul
push
dec
ret
je
out
or
pop
divl
iret
je
adc
test
rcrb
hlt
xchg
ss
xchg
mov
cli
xchg
lods
jno
fsub
cmp
cmp
in
mov
into
adc
lcall
push
inc
outsb
ficompl
jae
lods
jo
fsubs
sarb
push
int3
ss
mov
jg
pushf
shll
cmp
aam
fisttps
xchg
mov
sub
mov
jbe
mov
add
mov
jo
pushf
lret
repz
test
and
add
arpl
push
adc
movsl
jmp
jae
xor
cmpsb
dec
mov
clc
flds
dec
push
cltd
dec
lret
xchg
icebp
mov
dec
dec
adc
jp
add
push
or
loopne
movl
sarl
sarl
insl
outsb
jmp
cmp
loopne
lea
std
push
loopne
xor
sbb
dec
jl
or
and
fisubl
pop
outsl
icebp
aad
add
fadds
cli
pop
fs
inc
imulb
cmp
sbb
add
and
sahf
push
xchg
shll
andb
pop
dec
fsub
xchg
lods
mov
mov
dec
test
int3
fadds
fldt
movsl
fs
push
out
pop
jo
js
inc
mov
outsb
rcrl
cmp
insl
fistl
fs
push
dec
fpatan
jbe
cwtl
pop
xchg
xorb
and
out
fadd
xchg
push
push
sbb
pmulhuw
mov
cmpl
push
mov
sbb
aad
repz
sbb
repnz
int
xchg
insl
ret
mov
mov
mov
aad
cmp
xchg
adc
ret
movsb
adc
mov
test
dec
add
out
repnz
pop
and
jne
movsl
dec
pop
push
int3
add
arpl
andl
dec
fdivs
fists
test
jnp
xchg
lcall
mov
test
mov
in
imul
in
in
mov
sub
push
pop
aaa
or
or
movsl
testb
adc
mov
xchg
lcall
pop
mov
scas
loop
lahf
mov
test
loop
mov
pop
add
mov
pop
lea
int3
bnd
cmp
movsl
leave
add
out
push
ret
bound
mov
mov
mov
mov
cmc
nop
sbb
into
push
pop
cmp
jl
rorw
in
push
data16
dec
jb
scas
mov
icebp
xor
pusha
mov
sbb
jb
adc
ja
and
sub
xlat
xor
les
push
mov
mov
daa
adc
dec
cmp
cmp
ret
add
shlb
das
sub
jmp
sbb
pop
mov
adc
daa
mov
cmp
cwtl
jne
jae
jp
gs
icebp
push
mov
inc
jb
js
dec
cmp
gs
add
mov
je
lds
movsl
xorb
cmpsb
das
pushf
mov
sub
aad
fisubrl
das
dec
lret
jl
shll
stos
jg
je
data16
addl
addr16
mov
loope
or
pop
es
push
push
push
jl
imul
call
mov
popf
push
mov
ret
data16
cwtl
repnz
js
cs
daa
jl
rorb
push
test
mov
dec
fidivs
movsl
dec
jnp
sub
lret
lods
int3
cltd
mov
inc
pop
cmp
mov
out
xlat
popf
cmc
dec
mov
xchg
xlat
push
jl
mov
dec
pop
cmp
rclb
scas
mov
adc
ret
fnsave
fldl
jne
or
and
fwait
mov
jge
sbb
fwait
cwtl
fwait
sbb
mov
push
call
push
cmpsl
mov
pop
inc
shll
add
cmp
sbb
cmp
cmp
push
scas
mov
cmp
ret
jo
jo
pop
push
adc
imul
aaa
push
cmpsb
paddd
fstpl
jge
pushl
jbe
out
sub
repnz
adc
sub
nop
movsb
les
push
loopne
push
dec
pop
mov
adc
sbb
loope
js
mov
enter
bswap
aaa
pop
scas
sub
xchg
adc
adc
in
mov
call
cmpsl
xor
mov
and
adc
xchg
fimuls
pop
mov
fnsave
cmp
repnz
insb
push
add
scas
incb
add
aaa
rcrb
lcall
gs
pop
fwait
dec
inc
nop
xor
daa
loop
es
push
sbb
cmp
xchg
imull
icebp
stos
push
jmp
xchg
cmp
jno
pop
sub
addr16
or
jae
xchg
ds
sbb
xorb
pop
dec
xor
pop
adc
insb
sub
sub
data16
adc
or
cld
iret
jae
lea
sbb
ror
push
fs
or
fwait
inc
daa
dec
frstor
push
cmp
mov
pop
add
fidivrl
clc
in
ljmp
push
inc
adc
mov
mov
pop
jns
lret
push
and
mov
push
sub
jns
xor
cmp
lods
push
mov
push
xor
mov
fildl
mov
dec
test
dec
out
lods
jne
adc
pop
sub
nop
shrl
xor
pop
cmp
and
and
mov
mulps
rcrb
jo
cmp
push
dec
push
dec
push
in
pop
mov
mov
loop
sarb
aam
pop
rcr
fisubrl
dec
leave
sti
pop
jle
popf
sbb
lcall
inc
xor
popa
loopne
not
adc
dec
sarl
out
mov
jl
test
mov
pop
jmp
ret
movsb
mov
jp
xor
and
sub
mov
pop
sbb
pop
mov
jo
in
cwtl
lcall
mov
jo
jg
into
pop
pop
push
popa
jbe
cmp
cmc
outsl
lock
or
enter
sbb
add
inc
popa
and
lds
push
lock
aam
andb
cmp
enter
andb
xchg
aam
xor
ja
rorl
mov
lcall
push
addr16
push
inc
add
pop
shlb
xor
lds
ja
jp
fs
lret
mov
pop
pop
adc
in
sbb
inc
cmpsl
loop
fwait
aaa
cmp
cmc
lret
fldcw
daa
xchg
adc
adc
adc
nop
cmp
in
add
mov
xchg
aad
push
mov
mov
add
sbb
test
fldt
les
cld
sbb
push
addr16
rcl
bound
jno
jbe
sbb
pop
jae
adc
sub
push
popa
fucom
xchg
push
dec
xchg
pop
loope
dec
xor
dec
rcr
pop
sbb
fisubl
arpl
lods
xlat
push
shlb
cmp
cwtl
mov
stos
xchg
sbb
cmp
into
das
mov
jl
rcll
cmp
push
jnp
xchg
cmp
sub
cld
lock
or
sbb
dec
ss
int3
push
mov
push
imul
push
ds
push
mov
not
enter
add
lahf
add
mov
rcrl
out
cmp
dec
into
xchg
push
jb
in
imul
adc
andb
testb
sub
out
adc
loopne
pop
push
les
out
shl
icebp
lock
pop
xchg
popa
mov
mov
iret
pop
fnstenv
push
cld
jno
ret
movsl
js
out
sub
pop
fidivs
cmp
sbb
scas
push
lock
test
sub
pop
sti
cmpsl
push
cmp
je
or
inc
xchg
jne,pn
sbb
lock
push
push
out
mov
lret
stc
gs
and
mov
arpl
pop
jne
enter
xchg
jmp
popf
sub
fsubrs
je
lods
enter
ljmp
rcrb
outsb
divl
test
fs
sbb
jnp
mov
and
enter
push
mov
fcomps
int3
and
bswap
test
xchg
pop
cmp
sahf
lds
mov
add
or
adc
jecxz
je
jbe
shlb
mov
push
rcll
movl
xchg
loop
mov
and
cmp
push
pushf
pop
jne
ljmp
test
pop
pop
les
lret
adc
cmpsb
xor
dec
pusha
jg
cmp
xor
mov
xor
mov
dec
push
sub
fstl
sub
xor
push
in
lods
fmuls
or
jno
mov
or
fdiv
fsubrs
cmpsl
mov
cli
mov
repz
push
mov
movsl
sub
mov
cld
adc
dec
and
lods
mov
gs
xchg
adc
dec
call
mov
pop
outsl
imul
mov
push
adc
cld
mov
test
mov
pop
pop
adcl
pop
fists
cmp
add
xlat
lret
xchg
shrl
cmp
int3
int3
je
les
in
fs
jecxz
mov
imul
or
jle
in
jne
data16
orl
jae
push
insb
std
pop
rorb
arpl
aam
les
sub
stc
stc
dec
fnstenv
jp
push
fdivl
hlt
pop
lock
xchg
imul
bound
or
xchg
test
sub
mov
pop
pushf
and
pop
or
aas
hlt
hlt
push
xchg
lock
sbb
xchg
cwtl
ss
xchg
and
mov
fs
mov
idiv
mov
enter
hlt
je
jnp
shl
xchg
mov
lcall
fsubrs
gs
ret
sar
jle
sub
cmp
fldcw
inc
popf
pop
dec
xchg
jl
xchg
inc
jno
subb
rcrl
mull
int
andb
dec
xchg
mov
cmp
mov
mov
andl
fisubrl
jmp
fimuls
data16
cmp
adc
xchg
arpl
push
inc
jg
pop
xor
dec
jecxz
and
sti
arpl
add
push
push
xchg
cmp
enter
mov
dec
jne
popa
inc
mov
mov
aad
xchg
mov
mov
bnd
les
jno
cwtl
mov
cmp
sbb
in
push
mov
hlt
mov
shll
pop
add
sbb
shlb
push
cld
repnz
mov
fs
insb
aam
andb
sarb
cmc
fcompl
scas
jmp
cmpsb
dec
xor
fs
push
ljmp
adcb
outsb
inc
aad
test
jb
adc
in
pop
sbb
mov
mov
xor
xchg
jno
and
push
divl
shl
cmp
mov
sbb
aad
ret
movsl
aaa
lds
icebp
or
movsb
jg
jno
sbb
pop
xchg
gs
mov
dec
push
lret
cwtl
pop
addr16
xchg
pop
addr16
push
test
xor
jle
cmpl
or
jno
jae
test
je
repnz
jmp
daa
inc
add
cmp
and
pop
mov
loop
aam
cmp
jecxz
inc
leave
int
xor
cmpl
gs
xor
mov
addl
xchg
in
pop
int
jmp
neg
inc
imul
jns
jno
pop
xor
shll
or
fstps
jl
movsb
call
mov
mov
lcall
das
imul
inc
mov
test
call
jns
cmc
sub
jecxz
jbe
dec
nop
xchg
les
out
jg
test
fists
out
daa
mov
les
jo
lret
add
aam
cmp
jno
or
sub
mov
lds
xchg
mov
add
aam
shll
addr16
inc
into
arpl
mov
fcmovnu
pop
movsl
pop
in
mov
fs
lds
sub
cmp
sub
hlt
xor
xchg
pop
clc
pop
pop
adc
jo
pop
push
data16
sbb
lcall
enter
jno
and
jns
sub
sub
dec
push
xchg
pop
add
stos
push
rorl
popf
inc
xchg
cltd
bound
sbb
aam
mov
fbld
dec
cpuid
dec
cmp
ret
mov
or
inc
bound
push
cli
pop
mov
pop
fldenv
xchg
fs
cmp
jg
pop
fcmovbe
adc
iret
dec
inc
cmp
pop
pop
imul
jnp
jae
xchg
repnz
lds
cld
dec
dec
in
mov
inc
jl
or
dec
dec
arpl
cmp
in
das
push
push
adc
rcl
xchg
cmp
mov
jo
xor
and
fimull
mov
je
aam
dec
cmp
add
xor
add
aam
dec
jb
data16
or
jo
loope
mov
inc
lock
adc
imul
mov
pop
in
rcrb
lahf
cmp
sahf
rolb
gs
push
ja
fldcw
aam
jo
jo
out
insb
pop
fsubr
pop
pop
jp
adc
xlat
outsb
push
xor
test
les
push
insb
je
ror
or
cmp
pop
and
or
xchg
mov
or
clc
inc
push
dec
roll
mov
mov
mov
jne
popa
xchg
cmp
pushf
sub
jb
dec
lods
inc
out
add
jmp
jecxz
arpl
dec
in
imul
adc
iret
lea
outsl
fsubrs
js
inc
test
fidivl
cmp
daa
aaa
les
clc
push
sbb
lods
xchg
icebp
inc
fwait
dec
mov
adc
andb
andb
inc
and
inc
shlb
cs
push
jno
push
xor
fdivrs
pop
inc
xor
scas
xor
ss
xchg
xor
fldcw
ret
xchg
push
aaa
pop
sahf
fcom
cmp
xchg
cmp
mov
fldenv
fnstenv
and
pop
dec
xchg
sbb
push
cmpsl
dec
fwait
push
pop
cmp
push
and
lcall
je
pop
pop
lock
pop
sbb
es
decl
mov
addb
pop
dec
stos
in
pop
arpl
and
leave
jns
adc
fwait
pop
dec
mov
inc
xor
mov
mov
inc
xchg
jge
lea
gs
push
add
enter
lea
aad
mov
jge
jl
orb
ja
fstp
sbb
inc
movsl
pop
popf
pop
fmull
pop
shlb
push
in
insb
mov
jp
fimuls
int3
cwtl
xor
icebp
push
cmpsb
mov
rcll
jno
pop
sbb
lock
fsubs
fisubrl
push
fstpl
jno
mov
fstpl
pop
les
roll
jno
or
popf
jo
gs
adcl
jmp
push
xchg
mov
aam
cmpsl
loope
xchg
mov
mov
pop
adc
dec
or
cmpsl
je
inc
icebp
xchg
cld
jns
cltd
inc
xchg
stos
popf
inc
call
decl
lock
mov
xchg
inc
pop
ds
shl
aam
and
push
dec
xor
in
xor
fs
mov
mov
sub
fs
addr16
jo
arpl
mov
and
mov
stos
mov
lods
mov
lahf
pop
sbb
lret
add
inc
dec
push
lds
push
jo
pop
push
xorl
xor
inc
jo
dec
ja
pusha
loopne
mov
daa
jns
dec
jmp
push
sub
in
add
cmpsb
cmp
xchg
clc
call
mov
out
and
push
adc
pop
adc
out
xor
ret
push
dec
leave
ja
cmp
scas
cmp
jbe
push
cmc
in
and
inc
dec
push
loopne
cmpsl
loop
iret
rcll
xor
push
loop
mov
and
pop
mov
jmp
jb
sbb
es
mov
lea
mov
cltd
xor
lods
std
pop
push
push
aam
and
dec
cmc
into
pop
andb
and
push
cmp
and
adc
daa
loop
cld
sbb
push
jb
cmpxchg
mov
addr16
jp
bound
jns
dec
cltd
cmpsb
dec
jns
mov
stc
inc
cmp
stos
xor
mov
pop
mov
cld
jmp
dec
mov
stos
push
repnz
cmpb
jae
lods
adc
cmpsl
xchg
rcll
jo
jno
push
stos
mulb
fwait
cmp
fcoml
cmpsl
push
shl
mov
inc
shl
test
cmp
dec
je
faddl
fisubrl
inc
pop
push
in
das
mov
push
dec
push
or
fwait
adc
popa
cwtl
or
aam
mov
push
frstor
mov
pop
sub
arpl
add
push
push
roll
sbb
inc
into
dec
xchg
adc
adc
or
mov
and
jp
adc
jb
push
dec
lods
add
rcl
shll
fstpl
fs
jl
push
mov
pop
xchg
int3
fisubrl
xchg
aam
es
cwtl
xchg
enter
out
loopne
int
sbb
jmp
and
push
sub
jno
data16
jnp
cmc
test
roll
in
xor
repnz
jne
mov
aaa
loop
cli
enter
les
adc
mov
push
lcall
mov
mov
cmp
push
cmc
cmpsb
cmp
mov
cmp
and
in
in
mov
pop
pop
inc
pop
sahf
and
sub
dec
push
sub
sahf
xlat
dec
mov
pop
hlt
addr16
dec
push
xorb
adc
test
xlat
repz
lcall
insl
shl
movsl
adc
mov
sti
pop
mov
dec
push
orb
mov
and
mov
ficomps
mov
inc
loope
adc
jecxz
mov
dec
pop
bound
jecxz
movd
mov
arpl
adc
lea
jno
xchg
test
mov
mov
rcrb
outsb
jnp
mov
xchg
into
mov
pushf
je
sbb
push
ja
jmp
mov
rcrb
rorl
pop
mov
xchg
or
jns
jge
mov
loopne
jnp
mov
js
pop
in
push
push
testb
cwtl
popa
add
lret
arpl
psubusw
out
jg
add
push
stos
fstp
out
aad
loopne
cmp
fwait
js
movsb
jg
push
sbb
mov
clc
mov
data16
cmp
loopne
popa
cli
sub
mov
add
aaa
loope
mov
jmp
jb
in
xor
and
cmpsb
or
xchg
nop
xchg
pop
push
jb
push
aas
pop
cmc
in
fldl
bound
in
mov
sbb
add
aas
add
shll
cs
mov
in
jecxz
hlt
fistpl
int3
popf
sbb
pcmpeqd
pop
imul
pop
pop
jecxz
adc
dec
negb
imul
and
sahf
sbb
mov
repz
lds
insb
add
fistpl
mov
test
nop
adc
shlb
sbbl
movsb
imul
and
mov
pop
mov
out
sbb
mov
xchg
push
push
sbbb
xor
xchg
pop
into
pop
out
and
mov
fs
xchg
mov
sbb
push
push
dec
pop
sub
mov
and
out
lret
pop
aad
bsf
sbb
int
inc
shl
add
inc
xor
mov
cmp
out
lds
outsl
push
cmp
pop
jg
sub
xchg
push
mov
sub
cmp
xchg
mov
stos
fs
icebp
jp
cmpsl
cltd
xchg
clc
rcr
sub
mov
lret
dec
and
jge
push
mov
jl
mov
sub
jo
outsb
and
icebp
pop
jmp
jne
mov
ds
orb
ds
lahf
lret
fucomp
jnp
mov
je
inc
mov
pop
outsl
rorl
nop
xorb
xor
jl
sbb
stc
das
scas
xor
loopne
neg
mov
cmp
push
xchg
cld
mov
shll
xor
sti
push
adc
lea
andl
je
imul
cld
call
pop
dec
add
scas
ss
or
mov
sbb
imul
call
push
addb
frstor
popf
jecxz
imul
pop
mov
mov
mov
dec
xchg
push
imul
movsb
add
xchg
adc
rclb
push
mov
movsb
sub
in
adc
xlat
loope
sub
push
sub
inc
xchg
and
mov
outsl
adc
cmpsl
mov
add
xchg
in
xchg
cwtl
testb
fs
mov
adc
in
in
repz
pop
mov
test
pushl
lods
pop
mov
push
frstor
repz
fisttpl
pop
push
int3
or
data16
pop
add
in
and
movb
cmpsb
push
fldenv
push
lret
cmp
cmpl
scas
iret
mov
bound
dec
pop
fsts
mov
pop
out
lcall
ficoml
movsl
xchg
pop
popf
shr
data16
cmpsb
mov
adc
lret
daa
xor
push
xor
in
je
data16
jno
test
data16
add
insb
rcr
add
clc
sub
cmp
cmp
popa
cmp
lahf
inc
jne
cmp
jne
inc
into
add
bound
inc
and
call
push
pop
out
mov
sbb
lock
je
das
test
xchg
mov
ljmp
shlb
lock
loop
jge
in
cmpsb
and
sbb
icebp
mov
movsl
xlat
popa
jne
cmp
lret
dec
add
aam
mov
mov
dec
or
adc
jo
sbb
fisubs
add
mov
dec
aam
sub
lcall
and
dec
rolb
fsubs
fildll
in
movsb
xchg
xor
mov
insb
cmp
dec
cmp
lds
cmpsl
test
xchg
popa
mov
test
cmp
ljmp
fs
sbb
add
in
into
adc
sbb
pop
push
mov
push
ljmp
insl
mov
push
sub
sbb
jmp
loop
sbb
push
jnp
leave
fdivrs
cmp
push
aad
push
mov
sbb
mov
fldcw
inc
mov
pop
sub
les
lret
jne
push
jl
clc
mov
fcomps
data16
lock
sbb
fsubrl
sti
inc
mov
stos
adc
fwait
addr16
add
test
divb
xor
pop
xor
cmpsl
fsubrs
insl
inc
subb
clc
iret
rcl
lock
mov
cltd
mov
dec
bound
push
into
push
js
push
push
add
mov
ret
xor
hlt
mov
mov
sub
movsb
and
call
xor
mov
jmp
and
imul
in
sub
xchg
sbb
gs
xor
lahf
add
fsts
icebp
jge
pop
jns
lods
test
fadd
test
xor
cmp
add
or
mov
arpl
int3
mov
adc
pop
popf
dec
je
ja
xchg
inc
jnp
mov
dec
push
dec
cmp
es
sub
mov
cmp
pop
jno
out
mov
subl
push
inc
xchg
pop
push
and
xchg
fwait
push
sbb
into
stc
push
test
xchg
dec
cltd
rcrb
push
out
popa
sub
ffreep
orb
rcrl
push
shll
inc
cmp
inc
and
fsubs
mov
insl
dec
icebp
shrb
gs
aad
hlt
imul
dec
mov
jl
push
ljmp
and
or
lss
dec
testl
xchg
or
fcoms
bound
xchg
mov
mov
cmp
xchg
pop
jb
lahf
scas
inc
lret
arpl
in
push
mov
icebp
cltd
int
out
rclb
adc
test
data16
hlt
dec
lea
jnp
mov
pop
ret
cmp
scas
fidivrl
je
imul
inc
pop
mov
mov
push
jg
jno
dec
shlb
xchg
addr16
icebp
add
adc
pop
push
mov
incl
pushf
mov
push
push
lcall
sub
inc
sarl
push
cmp
push
leave
fs
roll
pop
scas
stos
push
in
arpl
xchg
pushf
mov
ror
jo
clc
faddl
scas
test
rcr
icebp
or
adc
push
leave
addb
jp
mov
and
jecxz
xor
stos
and
pop
sbb
jge
push
and
aam
bound
cmc
repz
adc
cmp
mov
cmpb
sbb
ljmp
cmc
in
or
sub
pop
fisubs
jecxz
jne
adc
inc
adc
out
dec
faddl
out
jns
cmpsl
push
dec
push
aam
lea
or
outsl
idivl
jle
pop
dec
sub
outsb
pop
mov
frstor
pop
cmp
jge
push
mov
cwtl
mov
repnz
cli
inc
pop
pop
cmc
loopne
push
pop
inc
push
arpl
add
jnp
mov
cltd
cmp
xchg
push
orl
pop
mov
xor
cmc
fdivrp
push
lahf
adc
insl
xor
push
push
js
or
xchg
dec
sub
aad
notb
sub
enter
jae
sub
movsb
lret
popf
nop
xchg
je
jecxz
pop
xchg
add
cli
call
xchg
enter
mov
fadd
lahf
in
push
push
push
les
adc
loopne
mov
inc
daa
mov
in
sbb
sub
stos
stos
add
cli
cwtl
sub
das
movsl
xchg
test
lock
adc
xor
out
test
mov
pushl
cs
xchg
fldcw
mov
js
xchg
pop
addr16
pop
cmpsl
push
ja
mov
out
iret
xchg
push
xchg
jo
mov
fdivs
push
mov
cmpsl
outsl
cmp
pop
les
xchg
and
jl
add
insb
sahf
bound
popf
push
hlt
mov
sbb
xchg
mov
addr16
mov
push
fimuls
loope
jo
xchg
lcall
test
sub
test
stos
lcall
dec
pop
inc
xchg
loope
les
fidivrl
jb
ss
iret
test
repnz
push
lahf
mov
shlb
roll
or
enter
pop
push
mov
xchg
test
lock
test
sbb
clc
insl
mov
add
testb
jo
js
mov
xchg
dec
fldcw
movsl
incb
movsb
push
xor
xor
mov
cmpsb
dec
fprem
jno
cwtl
es
je
scas
hlt
ljmp
xchg
popa
insl
and
cli
lea
mov
fdivs
adc
es
lret
out
test
xchg
scas
test
sub
lds
sbbl
gs
pop
nop
fs
sbb
xchg
cmpsb
pop
rorl
jns
cld
xchg
mov
mov
scas
pop
xchg
mov
jo
push
xchg
and
aas
push
ficompl
or
fidivl
push
aaa
jmp
rcrb
dec
xchg
int
sbb
das
in
add
loopne
xchg
jb
fadds
lcall
stos
cmc
fwait
out
addr16
icebp
mov
or
and
jo
sub
mov
inc
and
xchg
dec
jbe
mov
xchg
nop
sbb
les
clc
aad
xor
in
out
mov
lea
call
jnp
mov
aam
xor
test
fcomp
int3
add
xchg
in
adc
shl
sbb
in
add
jo
fs
cli
adc
rolb
data16
std
stos
aad
arpl
xchg
in
sbb
out
xchg
push
xchg
fwait
xchg
adc
pop
push
outsb
out
pushf
mov
cmp
fdivrs
pop
adc
out
mov
lret
out
pop
movsl
xor
es
mov
or
push
lods
inc
cmp
jns
mov
mov
xchg
xor
fidivs
mov
rcll
lds
cmpsl
mov
dec
jb
cwtl
out
out
pop
mov
in
mov
popa
pop
test
fistps
repnz
inc
outsl
lret
or
push
imul
push
mov
pop
stos
inc
cmp
and
or
sbb
jne
popf
push
shlb
and
sbb
fbstp
xchg
mov
sahf
push
daa
jb
mov
mov
popw
icebp
jne
fscale
ss
sarl
aaa
xchg
mov
cmpsl
loope
shrl
mov
dec
subl
and
pop
and
cltd
jbe
jnp
icebp
sbb
std
pop
int3
pop
push
test
pause
sbb
subl
sbb
sub
inc
adc
add
int3
pop
mov
push
insb
pop
jp
cmpsb
das
insb
jp
mov
push
adc
pop
pop
cwtl
mov
mov
imul
pop
fsts
cmpsl
cs
test
adc
icebp
mov
clc
fs
or
jno
pusha
jae
push
push
add
inc
popa
call
popa
dec
fcmovnu
xchg
je
dec
jnp
popa
sbbb
mov
sbb
mov
into
je
arpl
pop
popf
mov
ja
mov
mov
jl
jg
and
inc
jne
push
shrl
je
js
lock
fwait
insl
xor
fldcw
mov
jge
add
pop
rol
adcl
mov
lret
adc
dec
ror
iret
test
fnstcw
pop
cwtl
aas
inc
loope
sub
jecxz
popa
arpl
mov
mov
mov
mov
jle
dec
push
jmp
jb
aam
insl
les
mov
pop
cmc
pop
xchg
je
pop
push
stos
dec
cltd
gs
int3
and
scas
scas
fidivl
dec
imul
push
pop
dec
inc
xchg
sahf
cmp
fnstcw
fs
lock
cltd
icebp
xchg
fcoms
in
decl
shr
shll
fldenv
mov
scas
mov
jge
mov
fwait
push
loop
scas
mov
mulb
fidivl
mov
mov
sbb
jnp
imul
ja
or
pop
jle
push
es
mov
mov
push
ja
mov
ror
repnz
ljmp
sbb
dec
fcmovbe
mov
xor
out
mov
mov
sti
call
push
jecxz
jbe
mov
mov
xchg
and
insb
test
ja
call
test
ds
fmuls
sub
push
idivl
cmp
std
ljmp
inc
or
cltd
clc
adc
fwait
pop
cld
pop
bound
dec
and
cli
adc
or
scas
and
out
cwtl
sti
jnp
inc
pop
xor
jnp
xchg
push
jb
popf
push
cmpsb
mov
xlat
mov
test
sbb
movsb
inc
aaa
aad
sbb
les
xchg
and
rol
vrcpps
in
mov
sub
fwait
repnz
mov
push
jno
loopne
push
and
cmp
clc
adc
jo
jno
fmuls
int
jnp
pop
cmpsl
in
jg
mov
shlb
add
lods
sub
fbstp
cltd
xor
in
xor
pop
jnp
jmp
cmp
movsl
cs
cmp
xor
cmp
jns
les
insl
jo
bound
ljmp
not
out
cmp
mov
nop
fstpl
jb
ljmp
mov
aam
dec
data16
pop
dec
das
jmp
fbld
adc
decb
fidivl
cmc
lcall
push
mov
outsl
movsl
xlat
cltd
pop
int
inc
mov
add
jle
mov
rorl
inc
mov
scas
fcom
subl
mov
in
mov
lcall
mov
xor
fistpl
roll
idivl
mov
cmpsb
lds
cmpsl
into
jmp
lods
and
jne
out
jecxz
and
push
scas
test
pop
loop
loopne
push
sub
xor
das
mov
inc
addr16
andl
mov
cltd
cwtl
stos
mov
cwtl
or
cmp
dec
jge
push
jb
lds
xor
push
icebp
pop
cmpsb
cmp
data16
dec
loopne
sbb
out
inc
push
cwtl
cmp
push
ja
shlb
dec
mov
adc
lock
fldt
pop
xor
cmpsl
jp
in
fcom
scas
std
pop
in
sti
xchg
xchg
fcomps
cmpsl
addl
aad
nop
jecxz
call
pop
stos
shl
jae
mov
pop
loop
lods
std
adc
cmpsl
pop
in
mov
aam
int
jnp
mov
lahf
pop
test
cmpsb
sti
and
jbe
and
mov
pop
ds
mov
xor
sbb
stos
push
outsl
les
arpl
fcom
ficoms
out
data16
adc
sahf
adc
repnz
and
lret
cmpsb
bound
lods
outsb
movsb
popa
fsubrl
xchg
js
shr
fiaddl
mov
fimuls
inc
pop
aam
mov
lock
sbb
adc
shll
in
or
jle
xchg
pop
arpl
push
popf
lcall
imul
lcall
push
mov
cli
pop
frstor
adc
inc
scas
addr16
in
ret
movsl
push
inc
jno
dec
jne
push
xlat
xchg
jb
cmp
cld
cmp
add
sub
loopne
xor
jecxz
pop
inc
jmp
mov
testl
push
jne
push
xchg
inc
into
mov
popl
imull
mov
js
int
inc
inc
inc
sbb
inc
imul
jp
xor
jne
inc
int
adc
push
je
icebp
js
movsb
sbb
cltd
sbb
jae
leave
jbe
outsl
mov
or
jecxz
push
xlat
sbb
fs
mov
or
arpl
dec
mov
cmc
movb
inc
xchg
xchg
inc
jle
xchg
data16
lods
fdivr
and
pop
jae
xchg
mov
inc
adc
in
fistpll
jmp
hlt
in
xchg
inc
and
mov
mov
sub
pop
jno
cmp
adcl
icebp
adc
inc
fldcw
pop
fists
xor
int
test
test
cmp
adc
je
ficoms
mov
xchg
or
ds
roll
jg
jne
pop
pop
movsl
cmpsb
cmp
xchg
jb
rcrl
fildl
dec
mov
les
jge
int
xor
bound
mov
push
aas
pop
movsb
cmp
nop
push
cmp
or
jno
push
les
lcall
out
jg
mov
pop
cwtl
cmp
fcmovb
or
cmp
adc
cld
jno
lret
int3
add
in
fldt
mov
push
pop
cmp
push
inc
cltd
fwait
hlt
icebp
and
test
and
outsl
sub
nop
or
das
aam
mov
and
dec
mov
outsl
shll
adc
mov
shlb
int
clc
adc
popl
pop
imul
imul
mov
jg
jo
pop
idiv
adc
dec
movsb
jb
add
ljmp
inc
add
push
enter
orl
dec
push
cmpsl
inc
cmc
pop
fstp
jo
cmpsb
mov
mov
jl
cmp
mov
or
test
cmp
andl
and
xor
adc
adc
xor
adc
stc
pop
sbb
sbb
sub
mov
push
repz
jno
test
dec
mov
lret
test
and
out
or
cmc
fidivrs
hlt
xor
jmp
mov
pop
mov
mov
inc
or
add
mov
cmp
idivb
ds
stos
arpl
mov
imul
xor
repz
xchg
into
fmull
dec
jp
enter
inc
add
enter
je
mov
sbb
push
mov
addb
mov
je
mov
sbb
test
dec
sbbb
xchg
cmp
sub
mov
or
jno
sub
cli
fldt
push
test
inc
xchg
arpl
push
mov
int
out
data16
sbbl
enter
cmp
pop
push
in
ljmp
jno
sub
or
loop
enter
jno
sti
int
pop
int
int3
jno
mov
or
or
dec
cmpsl
jmp
bound
ficompl
fisubl
dec
icebp
and
pop
lret
rorw
push
jnp
jae
pop
mov
les
es
mov
idivl
or
sub
pop
out
and
sarl
xchg
or
imul
adc
push
mov
push
and
and
cmc
sti
push
cmp
fwait
mov
mov
mov
jo
push
add
mov
sbb
xor
mov
rorb
mov
sub
inc
jnp
test
stos
push
out
bound
cmp
dec
dec
loopne
push
fs
les
test
lret
test
ljmp
fldenv
jb
les
arpl
outsl
shll
aas
adc
and
xchg
push
lret
ret
imul
shlb
jo
les
roll
cmpsl
add
sbb
dec
fcmovb
int
and
mov
clc
cmp
in
xor
mov
mov
lds
push
and
fdivr
inc
fidivl
out
pop
pop
sub
mov
xor
cmp
insb
out
lods
xchg
addr16
je
stos
push
repnz
pop
xchg
lret
or
bound
cmp
mov
sahf
sbb
icebp
mov
jl
sbb
jno
flds
fxrstor
pop
adcl
fisttpl
mov
cmp
dec
xor
jno
xchg
sbb
fdivr
inc
sbb
push
jl
cmp
std
fwait
daa
out
mov
dec
xor
test
sub
aam
outsb
ljmp
lahf
test
inc
push
mov
movsl
rcl
icebp
les
sti
loop
dec
jae
fcom
dec
in
mov
mov
jb
hlt
sub
mov
mov
rolb
mov
push
aam
jo
les
push
mov
mov
mov
xor
cltd
xor
das
mov
add
mov
fidivrl
out
lds
sti
test
push
mov
mov
int
aad
or
jo
mov
jo
mov
jb
sub
lock
das
dec
fisttpl
and
pop
mov
data16
cwtl
lds
test
loope
mov
and
lock
imul
aas
addb
imul
rclb
dec
lock
repnz
aam
ret
pop
mov
test
or
jp
idivl
jnp
mov
rcr
jp
les
mov
push
xchg
aas
bound
dec
or
inc
pop
je
pop
jae
pop
cmp
mov
pop
and
notb
cli
and
out
jae
or
rcl
mov
cmp
out
cmp
mov
push
sbb
lock
mov
sarb
push
imul
arpl
sbb
or
pop
aam
mov
jl
cmpsb
les
adc
push
ficoml
mov
inc
mov
lahf
ja
mov
cwtl
loop
cmc
or
mov
sbb
xor
jge
jb
insb
xchg
fmul
aam
push
dec
sbb
inc
pop
xchg
ja
outsl
jecxz
hlt
add
test
sbb
fs
jmp
xchg
inc
es
sti
mov
rolb
lods
fsubs
data16
stc
fs
push
cmp
jae
cmp
ds
sbb
mov
jecxz
daa
cmpl
lods
mov
mov
sti
and
out
push
sbb
xor
sub
mov
sub
cli
loop
pop
push
jb
pop
xorl
jne
and
pop
lods
cmpsb
push
xchg
lea
pop
cmp
or
data16
not
bound
dec
pushf
cmp
jno
pop
sbbl
jae
sbb
push
pop
xor
int3
gs
cmp
adcl
push
pop
sbbl
mov
pop
cmp
test
dec
cmp
lret
sbb
cmp
xchg
insl
adc
push
push
mov
xchg
outsb
bound
jne
push
xchg
or
cmpb
jno
push
jmp
int3
jl
bound
pop
iret
jne
cmc
cmp
inc
inc
or
cmp
add
pop
enter
adc
in
arpl
push
ret
fucomp
push
in
imul
imul
js
or
cwtl
add
add
fcoms
loope
mov
cmp
lret
jle
jg
cmpsb
inc
dec
push
inc
push
nop
in
aaa
or
xor
sub
lret
mov
sub
insl
pop
pop
fdivrp
xlat
cmp
js
mov
mov
inc
fwait
mov
pop
lret
push
test
and
xchg
testb
mov
loope
xchg
xor
or
data16
jb
dec
lods
cmp
mov
dec
cmp
dec
cmc
and
xor
cmp
rcll
stos
mov
in
icebp
xchg
xchg
xor
inc
out
push
fwait
mov
data16
push
xlat
or
jo
repnz
push
arpl
xchg
mov
sbb
xor
adc
hlt
push
inc
nop
sub
aad
mov
stc
fistl
xor
sub
pop
lret
push
dec
add
mov
lea
sbb
andl
pop
mov
pop
out
scas
and
pop
jb
xchg
jno
pop
in
pusha
lahf
push
push
lds
pop
and
sbb
mov
adc
inc
mov
scas
mov
cmp
cli
imul
push
lds
cmpb
mov
test
in
out
or
cltd
cltd
ret
nop
pop
dec
mov
dec
xor
rol
jns
orb
push
pushf
scas
dec
pop
loop
cmp
mov
mov
cmp
ljmp
idiv
cmp
or
xchg
cmp
xor
push
loopne
or
or
orb
les
jbe
cmpsl
test
ffree
mov
inc
push
xor
push
xchg
push
push
mov
xchg
push
mov
mov
arpl
push
push
inc
loopne
mov
lock
sbb
pop
xor
xchg
mov
adc
xor
data16
clc
in
in
in
pop
mov
loopne
dec
leave
jb
jl
mov
cmpsl
pop
popf
popa
lds
mov
fstps
cmpsb
fs
xchg
inc
cld
inc
pop
insb
xchg
pop
nop
test
repz
pop
fsubs
push
jae
outsb
imul
rcr
jle
scas
jp
pop
mov
dec
push
fnstenv
js
pop
push
mov
push
nop
fcoms
inc
loopne
hlt
loop
mov
and
lds
fdivl
faddl
xor
push
orl
cmpl
cwtl
or
mov
mov
xchg
mov
mov
pop
ret
lds
test
into
sbb
lea
inc
jmp
imul
mov
ja
xor
popa
xchg
lds
xchg
aam
les
mov
jmp
pop
ja
mov
mov
lods
mov
lods
push
xchg
pop
call
shlb
mov
andb
mov
jno
loop
jl
loopne
enter
shl
fdivs
and
ja
jecxz
jae
sub
mov
lock
cs
sub
pop
mov
sbb
xchg
popa
xchg
repz
dec
pop
loop
and
cmp
imul
add
outsb
js
js
push
add
push
jns
ja
loope
lds
nop
sbb
cmp
subl
mov
cli
jbe
dec
push
lds
fucompp
push
imul
in
adc
hlt
imul
mov
ljmp
decl
xchg
sti
mov
iret
mov
bound
cmp
orb
jo
dec
adc
or
iret
dec
das
iret
mov
fsubr
mov
adc
sub
inc
leave
or
stos
cld
imul
mov
in
fwait
sbb
in
mov
mov
add
cmpsl
mov
les
mov
mov
mov
cli
pop
jnp
mov
mov
fsts
add
mov
mov
out
inc
mov
fs
or
or
fwait
negb
fs
popa
into
imul
fs
std
mov
in
test
jo
roll
or
test
push
insb
adc
add
push
jne
test
shrb
shlb
lret
addr16
mov
lret
leave
push
jg
addr16
inc
mov
cmpsl
rdmsr
int3
push
test
scas
popa
push
sbb
push
arpl
decl
and
sub
jg
inc
mov
jo
aam
mov
aad
mov
in
aas
push
push
mov
jo
adc
mov
lods
rcl
cmp
je
inc
inc
stos
cli
mov
lds
xchg
loope
ret
pop
add
movl
lcall
ja
mov
dec
movsl
insb
xchg
jnp
pop
jle
cmp
xchg
maskmovq
testl
popa
xlat
imulb
rorl
jle
mov
and
scas
cld
test
frstor
mov
into
ds
cwtl
out
mov
cmpl
adc
pop
cmpsl
jb
sbb
xor
aam
jne
jo
sbb
mov
and
lea
out
lods
pop
hlt
aas
pop
push
stos
dec
mov
sahf
sbb
jbe
je
pop
bound
xchg
aad
incl
ljmp
fidivrs
mov
les
sahf
lds
imul
aas
arpl
subb
lock
mov
lock
xor
pop
mov
test
inc
cmpsb
fldcw
arpl
mov
addr16
lds
je
mov
pop
loop
jns
jp
call
fistpl
fsts
jmp
mov
daa
es
dec
mov
xor
mov
pop
rolb
fcomip
int
push
insb
gs
arpl
cmp
in
cwtl
dec
push
outsb
stos
mov
and
mov
xor
and
fs
into
push
pop
dec
sbb
rcrb
jb
sbb
xor
pusha
push
pop
mov
int
jnp
pop
fstpl
lcall
jg
push
jp
sub
xor
and
push
mov
or
test
xor
sbbb
or
jge
in
dec
fisttpll
or
jp
mov
xchg
push
adc
mov
mov
scas
add
mov
xlat
cmp
loope
pop
jg
addl
xchg
out
mov
clc
rcll
push
push
xor
pop
mov
cmp
push
dec
xorb
adc
imul
cmp
jle
inc
sti
gs
nop
dec
inc
flds
je
xchg
dec
les
jne
repz
dec
mov
in
xlat
loope
imul
mov
rorb
ss
test
mov
xor
inc
stc
xlat
jecxz
inc
or
in
les
jl
cmpsb
jnp
and
cltd
jne
aam
or
adc
popf
cmp
shl
and
ret
je
xchg
jo
les
js
prefetch
pop
push
stos
iret
aam
dec
clc
addr16
in
mull
mov
or
adc
sbbb
xorl
imul
cmp
imul
push
loop
dec
in
xchg
pushf
inc
rcrb
fwait
orl
imul
add
aas
pop
jbe
sbb
push
mov
ret
push
dec
mov
fcomps
push
cltd
out
dec
and
xchg
dec
and
insb
xchg
add
xor
adc
addl
arpl
andb
jnp
iret
jno
clc
mov
sti
ja
and
aas
cmp
in
insl
jo
loope
cmp
push
or
gs
fstpt
mov
ret
mov
mov
jle
loopne
mov
xchg
inc
pop
or
xor
pop
mov
test
cmp
pop
xchg
push
or
pop
mov
add
jns
lds
add
ds
movsb
int
dec
lret
dec
mov
inc
cmpl
lods
mov
pop
dec
sub
popa
xchg
xor
fsubrs
je
dec
add
test
adc
lahf
ja
and
icebp
mov
mov
or
out
call
je
inc
mov
es
rcll
mov
inc
aad
or
xchg
jnp
imul
add
popf
xor
xor
mov
and
pop
fcoml
sbb
pop
popl
xchg
lcall
push
pop
ss
sbb
cmp
jae
imul
xor
mov
xor
or
and
mov
nop
adc
mov
dec
cwtl
cmp
xor
adc
enter
adc
dec
dec
dec
addr16
cmp
push
scas
dec
dec
scas
and
jle
les
js
mov
cmp
stc
addb
inc
fsub
dec
jne
xor
cmp
pop
inc
push
into
mov
arpl
inc
inc
cwtl
popa
ja
movsl
xor
mov
jns
stos
popa
cmpsl
call
movsl
hlt
push
push
int3
sbb
ret
cltd
dec
inc
stc
cmp
jne
pop
add
fcompl
out
fld
adc
sti
stc
add
leave
scas
mov
int
cmpb
cmpsl
push
imul
jg
loop
stos
cmpsb
cmp
orl
int
sahf
imulb
dec
pushf
xor
gs
cld
inc
push
or
movzwl
lea
jg
or
test
movsl
stos
shrb
jno
add
into
jge
lea
xor
push
add
dec
hlt
pop
push
dec
push
ficoml
mov
clc
sub
sbb
std
push
push
add
cli
fisttpl
int
xor
pop
xchg
mov
push
mov
aam
test
push
push
push
push
push
ja
xchg
push
imul
shrl
ljmp
inc
push
jb
int3
sahf
in
repz
les
cmp
jo
fs
out
sbb
out
jb
outsb
pop
adc
xchg
js
or
pop
adc
push
inc
mov
repnz
gs
call
jmp
lods
cmp
sbb
xchg
nop
arpl
aad
xorb
mov
imul
jbe
jl
and
inc
dec
loope
adcb
loope
inc
popa
addr16
aaa
push
lods
lods
addr16
mov
mov
lock
sub
push
clc
push
or
cwtl
lds
adc
insl
push
mov
addl
es
lds
arpl
les
andb
pop
lock
fstpl
jp
push
pop
shll
jmp
push
arpl
fs
es
stos
lock
hlt
push
jb
rcrb
mov
shrb
mov
js
scas
int3
cmp
mov
adc
push
aam
sahf
popa
incb
rorb
xchg
jge
dec
xor
inc
push
fcmovnbe
mov
xchg
andl
into
fs
test
out
jmp
mov
mov
mov
lods
push
sahf
inc
inc
inc
repnz
das
cmp
loopne
fsubp
call
call
xor
repz
mov
inc
or
mov
sub
pop
stos
bound
shl
or
push
rorl
pop
xlat
ffreep
xchg
movsl
mov
loopne
popa
aam
pop
aam
in
bound
jo
sbbl
push
fists
mov
dec
jne
push
aas
pop
jmp
inc
repnz
cld
push
imul
stos
lret
xor
xor
sarb
int3
scas
adc
les
call
cmp
movsb
in
dec
xor
add
inc
out
hlt
loop
and
daa
int
mov
lds
add
xchg
xor
dec
push
xor
mov
sahf
arpl
add
ret
add
mov
jl
cmp
push
test
jnp
xor
lock
fnstcw
cmp
bound
jb
xor
daa
xor
pop
fidivrl
orb
sbbl
aas
jecxz
iret
and
mov
xor
sahf
dec
gs
addr16
mov
cwtl
sbb
push
lcall
call
jbe
mov
mov
xchg
or
loope
movsb
dec
jp
adc
popa
fbld
rcrb
and
or
pushf
xor
cld
notb
xor
sbb
sbbb
mov
repz
pop
into
mov
repz
cmp
scas
and
xor
mov
push
cwtl
outsl
fisttpll
je
inc
xor
popa
std
arpl
rcr
cld
add
scas
cmp
inc
ja
rolb
subb
leave
jge
dec
mov
cmp
xchg
or
aam
inc
aad
hlt
pop
push
mov
dec
jno
ret
in
adc
aam
aas
sbb
fcoml
xorb
xor
xchg
mov
fmul
push
data16
sbb
lea
clc
push
into
fwait
xchg
jle
sahf
inc
pop
loope
cmp
xor
and
xor
jo
bound
test
sarl
stos
inc
dec
sub
mov
popf
push
addr16
out
jns
fldt
inc
mov
jb
inc
aam
mov
fistpll
xlat
push
cmp
pop
push
mov
nop
jbe
int3
les
shll
int
dec
ret
push
add
jl
imul
rorb
arpl
inc
jno
scas
cmp
pusha
test
jnp
les
push
jl
dec
clc
fxch
sbb
js
fs
mov
push
push
mov
pop
std
inc
dec
in
cmp
cld
jnp
aad
sub
outsb
mov
in
pop
cmp
imul
push
lods
je
dec
jb
push
jo
clc
dec
xchg
mov
std
cs
pusha
mov
mov
cmp
es
push
add
les
aad
mov
gs
pop
popf
out
and
xchg
push
mov
fildl
inc
mov
adcb
cmp
arpl
test
shll
jg
aam
pop
dec
jmp
stos
sbb
rolb
rcrb
inc
inc
int
lock
xor
dec
pop
rcl
lods
push
pop
lds
add
and
ret
imul
jae
aad
pop
fs
lds
push
rcrl
cmpsl
cld
mov
fs
add
bound
adc
pop
imul
jbe
fsts
sbb
mov
sub
dec
and
bound
adc
cwtl
in
push
sbb
aam
jecxz
fisubrl
push
sub
jo
aam
dec
arpl
arpl
sti
xchg
js
jo
sahf
mov
ja
xorl
out
adc
mov
mov
imul
inc
jo
idivl
and
mov
psllq
jmp
add
xchg
push
xor
sbb
icebp
xor
ficompl
mov
pop
push
sbb
mov
mov
push
out
inc
outsb
jnp
push
pop
aad
sbb
rorb
push
in
ret
fcmovbe
les
dec
jbe
mov
mov
rorl
xor
es
fildl
push
jns
jg
movsl
imul
dec
mov
stc
xchg
cmc
dec
fdivrs
bound
cmp
sarb
pcmpgtd
dec
aas
shlb
mov
sbb
mov
insb
aad
nop
cmp
je
sbb
jnp
dec
jg
pop
sub
or
ljmp
xor
dec
mov
mov
nop
pop
mov
outsb
xorb
sub
pop
cmpb
test
mov
mov
shlb
clc
cwtl
adc
sbb
cmpsb
int
hlt
scas
test
leave
jg
mov
and
cmpsb
push
jg
sbb
dec
fldt
jae
aad
jl
fstl
lret
mov
in
mov
cmp
outsb
scas
adc
pop
xor
jle
dec
cwtl
sahf
sub
ja
and
jmp
ficomps
call
adc
pop
mov
movsb
or
call
mov
call
push
pop
inc
shr
fcomp
mov
repnz
sbbb
push
mov
pop
pop
mov
mov
fnstenv
cmp
push
fstps
jne
cmp
pop
ljmp
nop
in
fnstcw
xchg
cmp
movsl
cmpsb
pop
cmp
cmc
pushf
cltd
cli
and
les
xor
inc
mov
dec
xor
pop
je
xor
out
mov
and
dec
or
aad
cmpsb
cmpsl
lds
pop
push
fsts
push
push
cmpsl
and
sti
int3
pop
xchg
in
int3
leave
ja
divl
or
xchg
aad
push
les
mov
popf
lahf
loopne
scas
mov
push
movl
loopne
dec
fcoms
pop
xor
ret
jp
les
cmpb
push
jo
pop
cli
int
jecxz
jns
adc
cli
cltd
lahf
andb
adc
dec
scas
fs
mov
add
out
outsb
cwtl
or
mov
dec
lods
mov
out
dec
test
push
jle
cmp
add
out
mov
dec
inc
jl
cmp
push
popa
repnz
push
aad
les
xchg
push
popa
clc
popa
lds
sbb
pminub
lods
repz
pop
call
mov
je
mov
mov
popf
ja
aas
fs
scas
mov
jmp
or
cmc
and
push
icebp
rorl
adc
lahf
or
repnz
pop
inc
fsubs
lcall
inc
jnp
pop
pusha
es
cld
clc
popa
lods
cmp
xchg
jnp
xor
mov
fists
ss
cmp
or
pop
jb
push
adc
aam
imul
clc
insb
rorb
fimull
fidivrl
lods
xor
adc
sub
dec
fnstcw
xchg
clc
pop
ffree
call
sbb
or
icebp
out
jp
sbb
call
pop
insb
and
push
jns
das
lahf
inc
mov
push
sub
jno
andps
test
pop
sbb
int3
xor
aad
cltd
shr
ljmp
pop
mov
and
and
adc
fwait
cwtl
pop
mov
out
mov
jge
in
cmp
inc
and
push
jg
xchg
cmp
cmc
xor
orb
xor
inc
inc
or
dec
xchg
cmc
aad
cmp
mov
in
xor
cmp
aas
sbb
ljmp
lock
jmp
or
out
xchg
cmp
aaa
sub
dec
popa
jmp
imul
add
outsl
pop
sbb
addr16
xchg
mov
test
add
outsb
jae
pop
lds
push
ljmp
dec
cwtl
popa
cmpsl
out
xor
dec
inc
xchg
fnstenv
mov
cmp
mov
mul
fisubl
mov
inc
je
fidivs
mov
iret
insb
fwait
int
ja
mov
mov
xchg
cmpsb
mov
push
rcl
jle
push
xor
int3
fwait
das
arpl
dec
pushf
mov
shll
jne
out
sbb
mov
inc
test
sar
push
or
mov
cwtl
adc
pop
cld
pop
dec
lock
adc
push
fstps
xchg
fsubrs
mov
pop
cwtl
push
sahf
stc
sbb
xor
jecxz
and
jne
ljmp
addr16
jb
inc
das
loop
push
lods
in
jno
xchg
pop
xchg
mov
test
and
mov
cmpsb
out
lds
in
xchg
xor
mov
out
sbb
lods
dec
mov
idivl
scas
mov
xchg
iret
push
jae
pop
and
push
pop
sbb
jo
popf
sbb
shlb
xor
and
fdivs
add
cwtl
pop
xor
jae
jo
push
lcall
push
jmp
xor
push
notl
orl
mov
sbb
ljmp
test
stc
cmpsl
add
cmp
lret
test
cmp
jnp
inc
push
sti
out
push
fdivl
daa
fmull
std
fs
adcb
mov
pop
push
xorb
out
and
push
or
mov
les
jo
mov
lret
clc
fninit
mov
push
loope
and
lret
icebp
push
enter
xchg
push
mov
dec
cmp
pop
sub
out
mov
jo
mov
imulb
imul
lret
cmp
stos
into
cwtl
add
jne
bound
repnz
jecxz
inc
mov
lds
inc
js
into
cmp
lods
insl
jnp
scas
pop
xor
adc
das
add
cmp
and
mov
inc
sti
scas
imul
cs
mov
jb
pop
jnp
mov
mov
test
inc
add
push
lea
xorl
arpl
fmul
xor
adc
or
aad
sbb
sbb
pushf
rcr
and
push
pop
push
imul
fwait
mov
cmpl
in
lahf
inc
jbe
sbb
pop
push
cmpsl
movsb
jns
mov
in
add
xor
jnp
xlat
mov
in
stos
mov
cltd
cmpsl
mov
insl
fwait
call
aam
dec
xchg
enter
ret
pusha
mov
enter
les
adc
lea
sub
mov
daa
pop
cltd
loop
mov
cmpsl
mov
sbb
fadds
or
sub
and
fsubs
mov
out
dec
loope
pop
mov
push
cmp
sbb
xchg
jns
leave
cmp
mov
jnp
jl
add
jmp
jb
jns
cld
in
cmc
out
in
mov
sbb
daa
xchg
or
or
lock
add
sahf
inc
fnsave
or
arpl
mov
bound
jnp
outsl
sbb
int3
sbb
push
add
cmovl
pop
into
lcall
xor
push
flds
sub
pop
xor
mov
dec
rclb
ja
jp
pop
mov
push
push
bound
jp
fstpt
jecxz
mov
jnp
sbb
lock
xchg
mov
push
cmp
adcl
push
or
add
rcl
mov
or
mov
scas
cmp
mov
pop
pop
or
pop
lds
jo
out
cmp
add
xchg
shrl
jge
push
call
sub
sbb
subb
jns
flds
aad
mov
or
sbb
scas
cs
mov
push
cmp
rcrl
nop
call
js
inc
mov
dec
into
popf
mov
cmp
jg
xchg
and
sti
je
loop
hlt
sub
jno
pop
ror
int3
enter
push
pushl
push
cmp
enter
push
in
in
stos
loopne
fcompl
lds
sub
js
je
movsb
loop
in
daa
test
scas
test
inc
cmp
fcoml
add
fstps
adc
cs
cmp
inc
jmp
jmp
cmpsw
mov
xor
mov
mov
cmpsb
pop
lds
mov
loop
popa
scas
scas
ret
xchg
sahf
pop
jge
enter
call
xor
mov
scas
jmp
es
movsl
imul
shl
cmp
ja
pop
push
jle
xchg
mov
clc
dec
out
and
popa
cmp
jp
xchg
loop
data16
stos
xchg
int3
scas
mov
push
test
sub
push
outsl
fisttpl
aas
mov
mov
xchg
add
cmp
cmp
stos
bound
add
xchg
aam
aaa
mov
push
fcmovu
test
xchg
jno
cmp
repz
add
pushf
jmp
sbb
xor
loop
incb
out
test
inc
incb
loopne
xchg
push
xor
stc
mov
mov
lret
sahf
mov
fstpl
movsb
and
xchg
xchg
cmp
pop
push
pop
cmp
fildl
aad
jnp
push
data16
push
bound
iret
pop
jnp
xchg
loopne
xor
cmp
rorl
fwait
lds
fwait
sti
cmpl
ds
ja
icebp
imul
lret
add
sbb
xor
into
jle
mov
sbb
pop
pop
xor
mov
push
cmp
ficomps
jmp
hlt
mov
dec
mov
xchg
cmpsb
stc
xor
jl
fldt
jno
in
add
rolb
mov
fwait
sub
inc
test
dec
pop
jb
test
ret
jns
jbe
mov
cwtl
sbb
addr16
fistpl
and
jnp
sbb
pop
les
inc
jle
rcll
inc
jp
subb
je
jo
cmp
xchg
test
ja
push
sarl
dec
jo
sub
xchg
xchg
je
into
nop
dec
cmpsb
mov
test
scas
dec
rolb
or
adc
push
xor
mov
push
cli
and
xor
mov
xchg
add
gs
cmp
xor
mov
test
mov
insb
adc
pop
adc
cli
inc
pop
sahf
pop
mov
mov
rcrl
mov
rorl
test
pop
push
mov
lea
sahf
iret
push
js
mov
xor
lock
fwait
xor
mov
or
fwait
in
push
das
out
add
js
or
das
in
fldcw
xorl
inc
sbb
jne
pushf
ret
insl
clc
push
and
jg
mov
jg
adcl
fwait
push
jo
dec
imul
nop
loopne
enter
push
push
push
pop
pop
cmp
cltd
ret
iret
pop
jp
jle
mov
lcall
setnp
dec
arpl
mov
lods
jo
push
push
mov
aas
pop
mov
adc
ja
dec
leave
lds
test
rcrl
push
mov
daa
push
xor
pop
pop
mov
jb
mov
inc
imul
dec
cmp
push
adc
sarl
jno
ret
inc
cmp
and
imulb
inc
arpl
or
pop
mov
aas
out
lahf
nop
jne
fcomps
iret
cmpsl
aas
scas
aaa
je
push
scas
xlat
lods
xchg
sub
xchg
lcall
xchg
fdivrl
pushf
leave
mov
and
mov
inc
pop
pop
xor
pop
xchg
fsubs
lds
movsl
rol
lea
dec
cmp
sar
pop
ja
repnz
nop
cwtl
cmpsb
jl
jle
sub
addb
cmp
and
inc
daa
dec
lahf
into
push
in
inc
xor
ja
cmpsl
push
es
cmpsl
ss
mov
shll
shll
sub
lret
dec
dec
or
insl
jg
dec
and
ds
out
in
out
pusha
arpl
aas
fstpt
lcall
jp
push
loope
insl
fst
cmp
orl
pop
fs
add
pop
js
dec
push
adc
jg
divb
lcall
ret
and
enter
loop
fs
nop
rcrb
nop
pop
mov
sahf
mov
add
cwtl
enter
lea
es
out
movsb
js
mov
xchg
imul
sub
sahf
sub
fcomps
mov
pop
xchg
jp
outsl
pushf
push
xor
scas
lcall
lret
and
iret
adc
out
je
dec
out
dec
inc
xor
sub
jno
lcall
cltd
xor
lret
adc
enter
jecxz
jl
cmp
pop
push
xor
aam
xchg
repz
jg
add
xchg
and
mov
ds
inc
sub
lret
fbstp
fisttpl
xchg
mov
imul
out
jne
sub
test
inc
mov
cmp
inc
in
movsl
ret
nop
int3
outsl
mov
cmp
xchg
fmul
hlt
shll
add
mov
cmp
add
sahf
jb
je
out
pushl
das
repz
fcomps
push
test
imul
pop
mov
pop
xor
mov
sbb
cmpsl
test
fwait
fwait
lahf
in
mov
push
int3
push
mov
iret
mov
ljmp
jge
inc
dec
mov
loop
setne
cmpsb
cmp
jb
cmp
movsl
into
inc
jb
or
jmp
ja
pop
in
movsl
icebp
push
pop
lock
nop
cmp
or
add
xor
jp
xorb
sbb
add
mov
pop
int3
push
fnsave
lds
pop
scas
pop
int
shrl
push
pop
or
lret
fstps
int3
xchg
rolb
push
mov
repnz
negb
xchg
movsb
cmpsl
icebp
inc
orb
or
cmpsb
mov
xchg
gs
in
int3
and
xor
cmp
sbbl
decl
fistpll
xchg
add
xor
inc
jne
sub
les
test
inc
or
aaa
pop
mov
je
push
fs
rcr
xor
sbb
insb
int3
sbb
test
or
pop
mov
or
mov
ds
cmp
cmc
lds
lea
mov
push
fwait
xchg
adc
cmp
addr16
je
ret
iret
or
mov
jge
loop
cmpsl
or
js
jl
mov
mov
cltd
and
add
pushf
or
pop
imul
push
cmp
imul
inc
loop
push
mov
in
xor
sub
test
xorb
aaa
cld
mov
pop
xchg
pushf
subl
mov
dec
out
les
iret
pop
xlat
loop
aas
out
test
sub
add
pop
mov
sub
fwait
das
mov
dec
aas
sub
aam
sbb
xchg
or
test
or
mov
rorb
push
test
inc
sub
nop
fs
push
adc
jno
jle
int3
sub
lret
loop
cmp
fs
cmpsb
les
pop
js
jmp
sub
sahf
js
fwait
adc
stos
xor
bound
cmp
incl
repz
sbb
mov
lds
dec
pusha
cmp
mov
movsb
pop
or
das
fldcw
in
sahf
pop
cld
mov
xchg
dec
mov
int
pop
outsl
adc
jne
loop
adc
aam
mov
mov
shl
mov
movswl
cwtl
jecxz
inc
or
icebp
ds
sub
in
in
mov
sbb
cltd
push
jmp
mov
jne
cld
imul
mov
cwtl
rcrb
pop
pop
mov
fcompl
incl
pop
cmpsb
js
fsubs
xchg
and
nop
cmpsl
test
lock
push
lcall
data16
dec
adc
scas
inc
pop
lds
fs
out
out
or
pop
ret
pop
mov
pop
clc
add
mov
sub
push
arpl
sbbb
cwtl
es
push
cwtl
gs
fldcw
fiaddl
lods
push
cmpsl
je
mov
or
and
dec
into
rol
dec
mov
cmp
inc
or
sbb
icebp
lock
jb
or
xchg
les
xchg
push
ret
dec
loop
or
incb
data16
scas
mov
popa
push
pop
in
outsb
dec
push
lock
push
sbb
and
and
std
xor
ret
pop
ror
inc
nop
popa
in
jl
enter
mov
or
push
xchg
sahf
xor
icebp
arpl
bound
ds
icebp
add
jle
ret
leave
stc
jge
mov
dec
push
lahf
add
fwait
cli
stos
dec
inc
push
out
inc
push
cmp
mov
push
mov
cmpsl
cmpsl
xor
fldl
inc
mov
lds
or
ljmp
imul
xor
ja
adc
pop
cmc
movb
js
jg
jecxz
aaa
out
in
cmp
inc
pop
loopne
mov
insb
jb
and
clc
inc
ja
mov
scas
ret
xchg
in
jne
inc
rorb
les
clc
outsb
inc
aam
push
imul
sbb
bound
adc
inc
pop
lods
jo
jl
adc
sub
mov
mov
pop
jecxz
adc
jl
inc
dec
mov
das
cli
cmpsb
mov
xchg
movsb
mov
insb
test
ret
cmpsb
push
sbb
mov
js
push
dec
dec
loop
int
test
mov
mov
xchg
ja
cs
and
aad
sub
pop
mov
sub
sbb
int3
mov
je
test
insl
dec
inc
mov
mov
test
arpl
jmp
cmp
testl
rol
les
push
add
or
xchg
cmp
jns
ds
test
rclb
stos
fldt
test
mull
sbb
and
xorl
fbld
dec
dec
cmpb
je
notb
or
jno
out
ficompl
push
jno
add
mov
cmp
xchg
xlat
adc
mov
dec
ror
les
stc
add
sbb
fldcw
cmp
les
jg
arpl
stos
clc
jne
dec
cmp
mov
fsubr
mov
mov
push
push
push
sub
mov
push
dec
movl
sbb
test
add
pop
insl
pushf
jno
pop
cmp
clc
clc
push
and
arpl
movsl
iret
loope
xlat
jb
dec
fisubrs
popa
push
pop
xlat
sub
dec
xchg
jno
push
mov
push
adc
fmuls
dec
cli
jnp
cmp
cli
dec
mov
add
or
pop
pop
cmp
popf
repz
adc
jl
add
stos
int3
fcoml
push
and
hlt
cli
add
imul
push
mov
jne
xchg
pop
pop
nop
jne
pop
aad
fnsave
xor
jbe
pop
dec
jb
lock
std
addr16
inc
flds
fldcw
mov
jns
dec
sbb
push
aad
inc
cwtl
pop
push
xchg
js
jne
sub
mov
push
dec
xchg
sbbl
dec
leave
cwtl
mov
icebp
mov
fnsave
pop
push
dec
call
pop
and
pop
cmp
cltd
xchg
and
ficoml
mov
pushf
jo
pop
ljmp
clc
mov
mov
ljmp
mov
pop
imul
push
andb
stos
sti
jp
insl
cwtl
lods
shll
fs
jb
dec
lock
jne
mov
insl
nop
mov
ja
jne
clc
add
jl
inc
aad
lock
dec
cmpsb
arpl
mov
jno
dec
cmp
add
inc
jg
mov
mov
stos
test
sbb
jge
fstpt
mov
js
aam
divb
jno
fcom
out
xorl
xor
jo
and
dec
xor
sub
stos
jae
and
imul
adc
insl
push
loop
sahf
pop
xchg
mov
insb
jg
push
pop
jae
push
mov
notb
dec
jo
je
rcrb
out
loope
insb
cmp
les
lea
in
movsb
pop
xlat
cmp
xlat
fcompl
inc
rcl
mov
jp
gs
xchg
popa
push
sti
jl
fs
jns
fldenv
push
mov
arpl
fidivs
sar
xchg
xchg
scas
mov
loopne,pn
jb
iret
nop
ret
vunpcklps
fsubs
jge
fsts
repz
mov
mov
mov
jne
mov
fldl
les
lods
cmp
loopne
jg
jge
pop
sbb
cmp
arpl
aam
jg
sbb
mov
mov
push
mov
in
fistpl
fstpl
or
js
outsl
xchg
cmp
push
ljmp
cmp
lock
les
sbbb
je
loop
test
mov
mov
mov
iret
bound
in
call
push
sbb
movsl
ss
and
mov
int3
pop
push
mov
push
outsl
outsl
xor
xchg
inc
mov
jno
push
nop
cmp
fstps
dec
push
aam
insb
push
jecxz
jg
pusha
std
xchg
and
pop
pusha
cltd
enter
push
mov
into
sbb
cmp
sub
shl
mov
out
inc
lret
dec
pop
stc
lea
in
and
dec
mov
ds
dec
dec
fwait
push
cmp
das
scas
arpl
rolb
jne
pop
pop
inc
adc
dec
cmp
arpl
pop
sbb
cmpsl
test
popa
sub
dec
cmp
into
das
push
mov
nop
aam
dec
das
dec
sbb
nop
mov
data16
jnp
sbb
cmp
dec
out
ss
orl
icebp
arpl
push
mov
dec
jb
test
cmpsl
mov
popf
popa
loop
sti
sbb
es
sbb
sbb
mov
sub
js
data16
xchg
insb
or
jne
enter
data16
jecxz
and
pop
mov
inc
mov
push
lock
test
mov
lcall
idivb
pop
push
imulb
pushf
push
mov
fwait
stos
insb
xlat
cmp
imulb
bswap
rorb
pop
sub
push
outsb
push
mov
push
mov
enter
xchg
jge
test
dec
fwait
jo
insl
movsl
lret
adc
cmpsl
dec
and
lret
cld
xchg
gs
mov
popa
std
push
cmpsl
mov
xor
pop
xchg
popa
adc
into
fld
push
lods
add
leave
dec
mov
ds
pop
daa
repz
mov
and
cwtl
push
xchg
xchg
ficoml
add
repz
xchg
sub
gs
xor
push
mov
hlt
sub
dec
js
daa
cmp
sarl
push
lods
pushf
jbe
pop
adc
or
frstor
cwtl
pop
leave
jno
mov
cmp
sub
or
mov
mov
les
mov
mov
fs
jns
and
add
push
mov
mov
jne
aad
push
pushf
fsubl
stos
gs
sbb
gs
pop
lds
insl
mov
shlb
and
pop
sbb
pop
int
inc
dec
xchg
xor
les
test
jne
inc
rcll
xchg
pop
lds
pop
fwait
adc
sbb
mov
test
outsl
jmp
nop
cwtl
sbb
outsb
cmpl
xor
and
dec
mov
lcall
into
nop
lahf
hlt
stc
dec
or
push
es
les
sbbb
mov
int
pushf
sub
xchg
jbe
pop
jne
aad
sub
adc
fcoml
jp
call
inc
jne
mov
shll
repz
cmp
xor
daa
inc
mov
add
mov
mov
xchg
imul
scas
rolb
inc
mov
sti
xor
jp
test
jno
jne
lahf
rorb
pop
dec
inc
fwait
popa
pop
rorl
ror
negb
ja
xchg
cmp
movsb
ss
and
mov
shrb
adc
add
call
lahf
mov
push
mov
pop
push
cmp
sub
lahf
cmp
inc
arpl
mov
stos
int
into
imul
cmp
jbe
fiadds
ficompl
pop
int3
ss
inc
mov
dec
cltd
lock
cmpsb
jo
jb
fistl
inc
mov
xor
pop
nop
repnz
popa
inc
cmp
mov
add
pop
lock
movsl
test
jle
mov
into
push
mov
lds
ja
aaa
call
test
fxch
jecxz
or
loop
mull
and
adc
pushl
int3
push
push
push
out
cmpsb
inc
sub
add
subb
xchg
cmp
dec
or
cld
mov
push
mov
fnstenv
scas
std
inc
mulb
adcb
dec
pushf
push
push
ss
inc
or
cmp
shrl
aas
lds
loope
in
scas
popf
mov
gs
js
xchg
and
cmpsb
sub
aam
movb
xor
jne
mov
sub
shl
sbb
cld
lret
pop
nop
mov
push
cmp
dec
cltd
dec
scas
into
add
mov
inc
out
pop
fnsave
insb
cmpsl
jnp
mov
test
ja
push
jne
dec
or
push
push
mov
add
push
lret
sbb
fs
call
mov
fisubl
push
or
in
push
push
mov
int3
mov
imul
jo
sub
cmc
jb
adc
mov
sbb
dec
fwait
ss
add
or
dec
jae
xchg
adc
inc
pusha
mov
or
daa
fdivs
push
inc
add
push
test
mov
xlat
cmpsl
mov
and
lds
push
or
lea
lcall
xor
push
xchg
sub
jle
out
mov
dec
adc
push
or
bound
test
dec
es
lods
xor
lahf
xor
jns
sahf
dec
adc
dec
fldt
adc
or
add
mov
dec
lfs
cmp
xchg
pop
and
mov
es
inc
inc
aam
jo
or
push
pop
popa
cmp
das
lock
pop
sbb
lods
pop
mov
lahf
fsubl
or
push
or
dec
test
jne
mov
cmc
lds
hlt
xchg
pop
xor
loope
lods
pop
mov
sbb
add
cmp
xor
rcr
pop
mov
das
xchg
int
in
cmpsl
cltd
inc
jmp
xchg
xchg
xor
fisubl
push
in
fs
in
ja
dec
notb
gs
and
arpl
aad
jecxz
inc
add
pop
adc
cld
lods
inc
pusha
cwtl
cld
push
sahf
enter
jno
and
mov
pop
mulb
mov
push
in
fs
andb
pop
sahf
leave
push
pop
add
movsb
shll
mov
bound
aas
imul
icebp
shlb
mov
leave
ljmp
xorb
loope
fwait
setb
dec
data16
xor
dec
adc
negl
pop
push
adc
stos
stc
in
loope
mov
mov
mov
pop
loope
aad
dec
cmp
mov
loope
jb
test
lret
mov
cmp
pop
pop
jno
push
repz
xchg
loopne
mov
pop
jg
adc
mov
js
lea
mov
cmp
lret
cwtl
pop
sub
dec
aam
push
ficompl
push
lock
faddl
xchg
push
push
mov
fs
push
popa
sub
icebp
xor
push
lds
inc
mov
testl
inc
ja
mov
sub
cwtl
mov
fisttpll
push
adc
mov
repnz
jp
test
test
pushf
stos
addl
jbe
sub
inc
push
jbe
cmpsl
fdivrs
pop
jnp
rol
xor
sbb
cmp
pop
xlat
inc
push
jne
aaa
out
repnz
mov
stc
movsb
pop
cmp
mov
divb
push
fisttpll
dec
les
cmp
pop
xchg
je
cmp
adc
pushf
cwtl
and
sub
jl
inc
pop
push
pop
cmp
sub
outsb
ss
mov
loope
xchg
push
jmp
pop
lock
push
jmp
pop
dec
dec
pushf
loope
scas
dec
imul
xor
movsl
sub
fs
stos
xchg
sahf
fisttps
xchg
idivb
jle
mov
pop
into
fstpl
xorl
or
xor
ja
nop
inc
push
cmp
fdivl
sbb
mov
jge
adc
arpl
scas
push
cltd
jnp
dec
cmp
sbb
and
push
or
xchg
out
cmpsb
jl
daa
popa
notl
add
test
push
shrb
push
adc
leave
shrb
fistpl
test
mov
ja
daa
and
out
fmull
imull
adc
push
fistl
std
adc
out
jl
mov
pop
xor
mov
adc
cmpb
add
jno
loope
int
xchg
loope
lahf
icebp
dec
lcall
bound
stc
inc
sahf
jns
bound
dec
lock
in
sti
daa
jo
mov
or
loope
les
mov
dec
add
mov
adc
movsb
dec
lcall
jecxz
mov
sbb
jno
mov
cmp
pop
xchg
fmuls
add
lds
push
mov
iret
cmp
mov
add
add
int3
data16
pop
test
jmp
sahf
dec
and
push
inc
loop
mov
xchg
push
inc
mov
je
mov
inc
jo
sahf
and
les
jne
xor
mov
add
hlt
fldenv
inc
push
popa
hlt
add
dec
mov
insl
insb
scas
cli
inc
mov
dec
adcb
lods
sarl
cwtl
pop
jb
pop
mov
pop
dec
inc
inc
mov
cmc
lds
je
mov
popf
cmp
fsubl
jns
imul
push
call
push
icebp
add
jo
fsts
test
xchg
ss
and
or
jbe
faddp
inc
sub
cwtd
bound
in
ljmp
movsb
sub
inc
xchg
dec
sbb
gs
out
mov
sbbl
pop
mov
push
push
pop
ja
inc
or
jne
mov
aad
pop
xchg
lea
or
push
push
in
mov
pop
test
stc
jnp
jo
dec
repz
pusha
ffree
pop
pop
mov
dec
xchg
mov
push
dec
adc
ret
jbe
push
insb
loope
lret
jp
jle
sbbl
bound
sbb
in
inc
les
out
stos
xchg
xchg
dec
and
sbb
scas
sub
xor
out
mov
dec
xor
dec
push
dec
sbb
mov
dec
add
pop
mov
cmc
cmpsl
lock
and
lds
push
mov
std
aas
mov
out
inc
arpl
sub
push
sub
dec
fldl2t
je
insl
pop
jo
call
push
cwtl
adc
lahf
orb
push
inc
dec
cmp
fsts
hlt
mov
xchg
icebp
and
pop
cmp
mov
mov
repz
js
lcall
jecxz
inc
or
pop
adc
in
cmp
bound
jbe
dec
jge
push
xchg
mov
inc
xcrypt-ecb
cmpsl
or
or
fs
xor
adcb
iret
loop
pop
xor
iret
aam
ret
jp
test
adc
aam
cmp
xchg
fistl
push
arpl
dec
push
int
dec
mov
sub
add
insb
scas
xchg
pop
mov
cmpsl
mov
cmp
lea
dec
fwait
or
and
sbb
xchg
xor
jns
imul
add
imul
imul
push
ret
icebp
arpl
dec
cwtl
add
lock
sub
mov
les
daa
adcb
mov
xchg
inc
daa
call
xchg
inc
sti
cmp
push
pop
dec
arpl
jne
rcl
in
jmp
sub
mov
mov
mov
mov
arpl
cmp
xorb
pop
ficomps
imul
js
in
lds
sub
jg
mov
cmpsl
sahf
nop/reserved
js
mov
inc
arpl
fnsave
cmp
xor
fldz
and
cli
rcll
lods
xor
insb
out
mov
fs
push
jns
test
ja
arpl
lods
and
jne
sub
int3
into
xchg
sbb
sbb
pcmpeqw
call
and
stos
mull
jo
stc
push
push
les
clc
xchg
adc
in
cmpsb
dec
mov
into
nop
les
out
adc
ss
push
dec
jnp
pushf
movsb
mov
or
or
aad
pop
cli
jb
push
cmpsl
cmp
int
jno
mov
sub
loop
std
adc
int
inc
adc
ret
ret
jne
add
pop
xor
ss
in
dec
fadds
arpl
jnp
and
orb
mov
cmp
push
enter
xor
or
jno
or
add
sbb
jl
lds
aam
subb
stos
sub
mov
or
pop
jns
push
call
pop
cmp
aam
test
pop
xor
sbb
mov
xchg
aad
sbb
fisttpll
ss
sbbl
xchg
dec
sbb
sub
adc
mov
pop
andl
imul
sub
jle
push
stos
incl
test
lcall
inc
ffree
lods
in
aam
cmp
lds
cmp
sub
push
push
xor
insb
push
clc
dec
aad
dec
lret
mov
mov
xchg
pop
cltd
mov
ror
stos
sbb
imul
jmp
mov
push
jnp
sub
dec
mov
aas
push
scas
or
add
lock
fs
or
sahf
mov
push
pop
inc
test
lods
mov
xor
adc
loopne
call
mov
rcrb
mov
jge
or
enter
push
add
divb
repnz
ret
roll
das
stos
dec
jl
fs
out
jl
aam
jge
movsl
push
mov
jg
in
jmp
xor
in
cwtl
sbb
and
pop
mov
cmpsb
jno
push
mov
cmpsb
sbb
out
jo
mov
push
int3
adc
adc
dec
stos
xor
mov
mov
pop
jnp
test
sti
ja
and
mov
jp
xor
mov
xor
fistl
aad
int3
jne
push
insb
cmp
push
stos
dec
dec
jb
arpl
mov
into
pop
je
xchg
adc
leave
sub
fldt
mov
rcrl
std
mov
out
movsl
xchg
dec
aas
sahf
in
dec
rclb
mov
in
das
pop
js
xchg
arpl
dec
jb
fwait
jnp
or
push
or
push
test
dec
sub
ja
mov
pop
sub
arpl
sbb
mov
rorb
fwait
dec
push
sbb
dec
test
aam
movsb
icebp
dec
xchg
les
push
adc
pop
sahf
mov
ja
dec
cmp
xchg
cvtps2pd
pop
cmpsb
mov
pop
cmp
sbb
mov
mov
bound
sbb
ret
insb
imul
dec
mov
push
mov
loope
lahf
js
sbb
test
cmpsl
dec
aad
inc
adc
into
xchg
iret
pop
fwait
mov
std
mov
mov
adc
test
popf
dec
cmp
mov
icebp
push
outsl
into
daa
cmpsb
adc
mov
adc
and
mov
ret
adc
and
and
in
arpl
ret
cmp
mov
rorb
lods
or
xor
add
jo
mov
mov
in
movsl
push
cmp
or
bound
push
dec
sbb
cwtl
into
rolb
add
sbb
push
cltd
fnstenv
pop
dec
sub
rcrl
lds
test
mov
sbb
mov
inc
test
cli
in
repz
and
sub
inc
lock
dec
shll
xor
xchg
jns
dec
fidivs
jns
add
rcr
pop
mov
sub
sbb
cmp
shrb
cmc
mov
pop
rcrb
shlb
iret
xchg
inc
xchg
and
push
mov
sysret
shll
or
movsb
or
popa
jnp
cmpb
rcll
cmp
mov
jnp
sub
data16
mov
mov
jae
jo
or
insb
xor
fldl
ss
ret
mov
xchg
test
xchg
cmp
cmp
mov
cs
adc
test
xor
lea
and
sub
mov
xor
mov
or
insl
cmpsb
subl
mov
pop
pop
mov
push
sbb
add
stos
mov
jb
inc
sub
lret
lock
push
les
dec
add
mov
lds
mov
xchg
mov
or
fisubl
jge
testb
xor
pop
jmp
insl
movsl
xlat
les
pop
repz
mov
cmp
or
clc
push
je
xchg
push
subl
andnps
mov
adc
mov
popa
jl
adc
aad
cmp
repz
fidivs
add
dec
jb
fs
loope
js
addr16
rcll
mov
std
rcrl
xchg
mov
int3
mov
dec
mov
jp
jg
push
movb
bound
nop
push
shr
in
lahf
jns
fwait
cmp
dec
or
pslld
jnp
xchg
inc
push
orb
clc
pop
xchg
inc
hlt
pop
xor
xor
aas
lcall
mov
cmc
push
inc
inc
mov
popa
out
push
movb
pop
jne
lods
sti
cltd
rcrb
xchg
fcompl
xchg
ljmp
jne
les
test
dec
mov
jno
add
adc
cmp
outsl
lret
push
sbb
pop
and
loopne
les
iret
lods
mov
stos
adc
xchg
sbb
clc
xor
mov
pop
pop
out
ljmp
mov
mov
jae
inc
int3
add
push
sti
test
inc
mov
dec
push
mov
adc
in
push
add
je
mov
aam
and
xchg
inc
arpl
dec
push
je
cmp
aas
mov
loop
push
jns
in
lds
rcrl
push
insl
in
bound
aam
or
testl
outsb
mov
les
xchg
popa
mov
mov
adc
inc
xchg
jle
scas
sub
insl
xorb
loope
int3
pop
jge
loope
lret
add
mov
add
jb
mov
stos
jns
xchg
rcrb
rcrl
je
repnz
pop
out
mov
ffree
mov
dec
jnp
inc
cmp
movsb
push
and
or
jo
jge
scas
pop
push
jae
lds
xor
cmp
or
inc
scas
test
xor
nop
dec
fs
mov
sahf
inc
addr16
pop
inc
movsl
mov
mov
cltd
mov
iret
mov
mov
les
jns
in
sbb
inc
pop
sbb
sub
out
aam
in
arpl
sarl
imul
mov
nop
cmp
jmp
lods
pop
pop
les
mov
cmp
cmp
or
aam
cmpsb
mov
mov
jnp
xchg
jne
xchg
fstl
fldenv
andps
fnstcw
and
jno
in
push
in
std
lcall
xor
pop
jge
dec
pop
mov
arpl
decb
sbb
adc
push
cmp
shl
out
mov
jne
sbb
subl
imul
mov
lock
aas
push
jmp
push
mov
pop
scas
mov
cwtl
movsb
repnz
jbe
ret
mov
xorl
mov
arpl
mov
push
fsts
lds
dec
in
or
in
pop
xor
and
adc
sub
jne
cmpsl
jno
fsts
push
pop
xchg
incb
dec
into
les
out
fsubrs
test
scas
xchg
loope
fisttpl
push
sub
dec
lcall
cmpsl
cmp
sub
jbe
add
fcompl
loop
mov
mov
add
add
rclb
sarl
jo
sub
mov
test
rolb
cmpsb
mov
jo
jbe
or
lock
jge
fimuls
xchg
push
cmp
and
mov
iret
enter
insb
sbb
lds
mov
loopne
pop
mov
nop
lds
andl
dec
in
cmp
orb
xor
cmp
scas
mov
stc
pop
je
push
dec
mov
dec
cmpsl
jp
cs
inc
sub
cmpsl
mov
mov
lret
aaa
fnstenv
mov
xchg
lret
cmp
insb
push
sbb
push
sub
mov
jecxz
lcall
and
fidivrl
stos
out
fsubl
adc
push
dec
stos
lahf
mov
jnp
scas
popf
bound
ja
lret
std
mov
push
and
jg
insb
mov
push
iret
push
clc
dec
pop
addr16
hlt
mov
mov
ret
lods
jno
xor
cmp
out
lahf
fdivrl
jmp
mov
xchg
and
repnz
xor
cmpb
lahf
inc
fwait
push
xchg
bound
dec
ja
mov
je
addl
mov
cmc
and
loope
add
lret
sti
lret
divl
lret
sbb
jp
adc
dec
add
inc
pop
xchg
jns
push
adc
jmp
mov
out
aam
imul
or
push
mov
sub
aas
daa
push
test
mov
sbbl
inc
cmp
mov
jno
das
pop
cltd
bound
cli
sbb
push
mov
dec
fs
ret
jmp
aas
xor
pop
lods
jo
adc
dec
pop
inc
jl
inc
les
inc
mov
pop
or
fbld
pop
les
pop
lds
addb
dec
sub
mov
or
das
loop
sbb
push
test
bound
out
stc
in
aad
jl
pop
mov
das
popa
ret
fstps
mov
mov
push
adc
sub
aam
mov
push
mov
jbe
and
xor
pop
xchg
lret
jb
in
jmp
mov
and
inc
clc
sub
dec
jmp
cmp
clc
in
les
and
mov
cwtl
xor
push
ficoms
or
jne
push
jecxz
ds
jno
insb
out
and
into
add
pop
dec
fcoms
in
mov
pop
insl
jmp
pop
leave
pop
movsb
push
scas
cmp
test
cs
sbb
mov
jns
into
pop
call
ja
jb
hlt
mov
lock
ljmp
out
inc
je
jb
negb
movsl
or
pop
adc
cld
outsb
lods
push
test
test
dec
xor
lods
out
rclb
jns
ljmp
std
pop
js
jb
lds
sbb
mov
pop
mov
adc
lods
xor
inc
mov
hlt
hlt
mov
pushf
add
in
out
push
adc
pop
ss
shll
inc
ljmp
neg
mov
fstl
shrb
mov
add
mov
imul
dec
adc
sbb
lret
imul
pop
mov
inc
int3
add
andl
fmuls
mov
dec
pushf
xchg
lods
mov
jb
les
pop
xchg
lods
pop
stos
xor
sub
lcall
mov
cltd
pop
mov
jb
scas
add
insb
test
cmpb
jo
push
aas
outsb
ljmp
outsb
mov
clc
pop
dec
dec
lret
inc
push
shll
push
sahf
pop
lds
andl
adc
int
or
into
and
jo
lcall
in
add
fildl
adc
je
movsl
and
or
sub
push
push
hlt
inc
inc
inc
scas
out
xor
loop
sbb
data16
xorb
test
lds
xor
ja
rcrb
jo
push
ljmp
pop
pop
int3
icebp
movsb
call
add
incb
movsl
add
mov
cmp
subb
sbb
jmp
data16
xchg
loop
pop
push
mov
mov
lret
inc
cmpsb
pop
push
into
xchg
cmp
jae
clc
sbb
ja
dec
mov
pushf
int
shlb
mov
sub
or
adc
sbb
shlb
dec
shlb
sbb
xchg
mov
les
loope
push
cmp
into
gs
dec
sub
jl
add
inc
jns
mov
inc
xchg
shrl
pop
ret
cmpb
data16
test
dec
aam
xor
sbb
adc
jb
mov
icebp
sbb
adcb
inc
gs
pop
xchg
je
sbb
and
ss
dec
xchg
ljmp
in
lret
ret
jns
scas
adc
repz
cmp
mov
sub
inc
into
adc
popa
jp
incl
lahf
add
sbb
out
cltd
sub
dec
mov
mov
scas
mov
jp
notb
sahf
jecxz
fwait
jbe
and
scas
shl
add
add
xor
cmp
into
push
push
test
in
adc
fs
ss
jle
xchg
repnz
mov
pop
hlt
jbe
pop
test
shlb
shr
jo
pop
add
xchg
ret
testb
adc
or
lcall
pop
ja
inc
lds
test
adc
daa
dec
mov
repnz
aam
xchg
aad
xor
pop
insl
in
xchg
ficomps
shlb
adc
adc
pop
cmp
dec
mov
fsts
xchg
fdivl
js
lcall
cmp
jnp
mov
adc
pop
dec
jo
mov
pushf
ret
push
cmp
cmp
xchg
loopne
insl
pop
sbb
and
outsb
mov
jnp
lds
mov
pop
push
cmpsl
and
mov
negb
adc
test
xor
dec
inc
sbb
xor
fs
xchg
jns
or
mov
bound
sarl
mov
loopne
test
cld
inc
mov
cwtl
lods
sarl
es
mov
dec
stos
push
xchg
je
addr16
xorl
cmp
pop
sbb
push
jecxz
subl
dec
jb
push
fsubl
push
inc
bound
lods
sahf
mov
repnz
mov
shr
scas
add
jp
rorb
jne
loop
popa
and
inc
test
xchg
and
sub
sbb
in
jmp
je
addps
fs
sub
cmp
stos
cmp
xlat
cli
cmpsl
mov
pshufw
xchg
mov
push
jne
pop
lock
jo
pop
xor
aad
adc
dec
dec
pop
xchg
loope
push
xor
adc
gs
imul
dec
sub
imul
mov
push
dec
test
lret
movsb
xchg
aaa
mov
pop
adc
or
sti
mov
in
push
test
sahf
pop
enter
mov
xchg
roll
dec
push
jg
sub
dec
push
jecxz
or
mov
push
or
stos
xchg
pop
pop
sub
cmpsb
movsl
xor
jae
xchg
mov
adc
mulb
xor
fisubrl
inc
int
js
dec
mov
jle
xor
mov
clc
daa
aad
rclb
mov
mov
fcmovnu
std
mov
push
in
movsl
jns
push
jne
je
pop
les
gs
enter
arpl
jne
inc
mov
bound
jae
fwait
bound
xor
cmp
push
pop
push
and
dec
nop
add
mov
ja
dec
out
cmpsl
mov
clc
xor
fisubs
fs
rcl
mov
mov
pop
cwtl
fwait
mov
scas
cmp
push
enter
dec
sub
or
adc
lods
jl
nop
dec
cmpsl
jo
or
das
sbb
fsts
andb
mov
out
and
sbb
inc
in
and
jmp
pop
in
mov
push
les
sub
xchg
out
sub
stc
cs
cwtl
jne
mov
mov
xor
cmpsb
mov
dec
daa
pop
add
subb
inc
xlat
aaa
rcll
sysenter
mov
jmp
mov
or
ss
cmp
call
cmp
and
dec
lea
cmp
out
cmp
ljmp
aad
mov
test
mov
add
mov
data16
mov
push
rcrl
dec
fnstsw
aaa
out
cwtl
call
test
std
mov
jl
arpl
push
adc
clc
mov
sbb
lcall
mov
lds
into
or
sarb
movzbl
cld
lahf
mov
aaa
adc
mov
sti
mov
les
in
add
push
xor
andb
aaa
std
mov
cmp
and
out
mov
adc
test
mov
lea
jle
mov
push
sarb
cmp
add
push
adcl
and
mov
pop
sbb
dec
sbb
cmp
xor
cmp
jae
push
jo
addr16
push
xor
aas
lock
fs
push
pop
int3
in
arpl
pop
in
shll
int
lret
std
getsec
jae
pop
imul
aas
inc
dec
push
inc
in
inc
popf
arpl
mov
or
jge
cmpsb
outsb
mov
jo
sbb
test
fnstcw
movsl
mov
shlb
cmp
loopne
mov
jno
fisttpll
push
xchg
idivb
sub
fldt
jle
in
push
je
push
fst
cmp
fdiv
cli
jmp
mov
cmp
fldenv
repnz
push
push
scas
mul
stos
dec
xchg
mov
scas
mov
in
lods
inc
lock
pop
mov
cmp
icebp
loope
push
sub
jecxz
bound
and
or
push
xor
stc
incl
adc
ret
cmp
es
inc
out
pop
cmpsl
adc
std
bound
and
jno
pop
fstps
and
test
cmp
mov
sbb
jae
loopne
mov
sbb
fnsave
cmpl
daa
push
sbb
pop
lcall
mov
jo
sbb
sbb
and
test
xchg
in
cmp
xor
and
lahf
lret
arpl
lock
ja
enter
push
mov
cmp
inc
push
in
test
jo
xor
push
test
mov
outsl
cmc
pop
or
outsb
cmpsl
mov
sbb
cmp
xchg
lret
add
sbb
mov
sbb
jae
jnp
test
jns
push
daa
lods
and
dec
ljmp
sbb
fistpl
lahf
test
mov
bound
and
and
or
lods
sub
sbb
fistpl
cmp
lcall
adc
jno
aad
imul
adc
sub
es
jg
imul
out
fwait
jmp
sub
rol
mov
lock
dec
pop
push
xor
sahf
sub
mov
fldenv
jno
dec
cmpsl
shl
push
push
les
pop
pushf
bound
jp
movsl
in
jecxz
shr
or
dec
loop
in
pop
hlt
inc
cmpsl
loope
xor
aas
pop
cld
std
leave
aas
orb
cmp
out
jge
cmp
mov
sub
fs
insb
mov
add
adc
clc
lock
jno
push
sub
out
push
into
shlb
ja
dec
sub
into
data16
movsl
loop
push
xor
icebp
or
jo
dec
popf
lea
cmp
xchg
mov
into
call
mov
pop
aam
and
rol
mov
jne
es
les
xchg
pop
ror
jb
pop
out
jo
pop
mov
and
jno
xlat
shrl
xchg
mov
ss
jmp
cwtl
mov
aad
push
jno
jl
inc
mov
jp
repz
fstps
cwtl
arpl
addb
sahf
outsl
fmull
cli
and
pop
add
mov
push
push
or
inc
mov
in
ret
fsts
pop
dec
ss
and
or
cltd
push
iret
mov
pusha
aam
push
les
add
mov
lahf
repnz
or
inc
xchg
mov
cmp
rorb
imul
jb
lds
lcall
xor
jmp
xlat
fisttpll
call
js
lock
mov
pop
sbb
mov
xchg
les
push
scas
sbb
inc
and
xor
lahf
scas
push
sbb
mov
imul
gs
rolb
mov
jae
sahf
xchg
daa
arpl
push
cmp
dec
jno
sub
pop
mov
cmp
fisttpll
call
mov
lods
push
sbb
mov
outsb
daa
or
subb
call
scas
fld
lret
bound
ret
data16
test
jl
cmp
fwait
cmp
pop
cmp
dec
and
sti
lret
cmp
fdivs
arpl
scas
in
aad
arpl
inc
sub
xchg
jmp
lcall
out
fs
push
xor
jno
pop
mov
mov
dec
mov
dec
mov
sarl
addr16
xorl
push
pop
pop
jp
push
pusha
jle
lea
insl
mov
jecxz
add
shll
popa
xor
adc
int
rcl
movl
rorl
pop
xchg
fmuls
mov
sbb
paddw
xchg
iret
stc
or
in
inc
push
fldcw
sbb
lods
pusha
addr16
adc
out
mov
xor
dec
xchg
jge
test
fidivrl
fistps
push
dec
or
and
mov
xor
scas
pop
mov
inc
lahf
jne
sub
in
lods
pop
cmp
addr16
mov
mov
dec
xchg
dec
xchg
shrd
cmpb
fisttpl
pop
or
in
pop
jnp
dec
aam
cli
outsb
rclb
aas
dec
jp
or
es
push
cmc
mov
xchg
ja
aaa
pop
les
or
icebp
sub
iret
pop
dec
cmp
xchg
pop
aas
pop
mov
fwait
sub
in
sub
fmull
and
fimuls
and
loopne
add
cwtl
jl
fisttpl
aad
rolb
stos
scas
pop
inc
filds
data16
push
mov
mov
repnz
cmp
aam
in
jo
cld
repnz
imul
mov
add
pop
mov
jl
add
sbb
add
add
jo
imul
gs
ss
push
mov
add
pop
loopne
test
addr16
mov
pop
cmp
dec
test
data16
jno
in
movsl
or
sarl
sbb
rcll
fdivp
hlt
mov
mov
fldcw
jecxz
dec
inc
pop
gs
sub
inc
jl
loope
jle
decl
pop
push
cmp
xlat
aaa
add
inc
pop
jmp
mov
jne
decl
mov
inc
cmp
fcomps
cli
js
cmp
cmp
or
lea
mov
fwait
cmc
or
inc
pop
int
xor
mov
or
mov
int
inc
add
mov
rcll
push
outsl
sub
sbb
mov
push
xchg
lcall
add
out
xlat
pop
shl
mov
or
jmp
shrl
cmpsl
inc
inc
paddw
scas
adc
movsl
pop
xor
out
mov
adc
fwait
lea
mov
pop
addb
jg
daa
mov
fists
fildl
hlt
push
mov
xchg
in
pushf
ss
int3
fldl
xchg
std
je
pop
iret
push
or
out
cmpsb
pop
jae
movsb
pop
inc
pop
mov
int
push
leave
call
mov
int
cwtl
mov
lock
fistpl
pop
mov
fistps
cmpsl
mov
jne
cmp
out
push
rclb
sub
insb
xchg
sahf
rcl
pop
test
mov
xchg
or
sbbb
jbe
xor
into
les
lock
mov
cmp
pop
push
hlt
jecxz
push
push
in
pop
stos
inc
pop
fidivrl
movsl
lahf
inc
ficoml
jle
mov
sti
in
aas
rcrl
popa
rcll
mov
cwtl
sub
insb
cmpsb
lret
cmp
fists
sbb
test
test
lds
and
stos
in
xor
out
pop
pop
lret
inc
nop
jmp
adc
inc
sahf
ret
push
push
sbb
pop
insb
dec
xor
arpl
sti
jb
dec
jle
cmp
mov
je
aad
dec
inc
sub
loop
cltd
sbb
add
jb
inc
test
adc
dec
scas
jp
fnstsw
mov
and
jno
xor
shlb
out
cmpsl
int
loop
repnz
adc
ja
repnz
cwtl
mov
adc
push
iret
mov
xchg
enter
inc
push
inc
sbb
pop
arpl
cmp
push
or
test
out
stos
push
fiaddl
fcoml
pop
hlt
mov
pop
jns
jno
xchg
mov
ljmp
loop
xlat
filds
inc
sbb
rcll
movsb
sub
adc
stc
je
inc
jge
mov
adc
and
or
cmp
repnz
fwait
xchg
cld
lds
js
cmp
jo
mov
inc
push
stc
xchg
arpl
jo
push
xchg
fwait
xor
pusha
xor
cmp
in
sub
cmp
ljmp
mov
push
cmp
push
pop
dec
iret
lods
cltd
inc
push
shll
sbb
xchg
jle
cwtl
and
fimuls
aaa
repnz
jbe
je
jbe
les
js
ret
in
xchg
cmp
insb
call
cmp
dec
jbe
adcl
fldt
je
lcall
nop
push
cmp
xor
jb
dec
ja
repnz
push
pop
xor
pop
into
pop
loop
repnz
jg
data16
sub
sahf
and
pop
pushf
adc
jg
cmp
cmp
cmp
mov
sbb
cmp
iret
lcall
push
adc
mov
dec
dec
sbb
push
sahf
ja
or
push
jo
fbld
and
adc
xchg
das
dec
push
lahf
push
loopne
push
pop
dec
mov
data16
icebp
sbb
cmp
lods
sub
jb
addr16
sahf
movsb
pop
repnz
mov
out
adc
mov
mov
fwait
jle
enter
cmp
cwtl
xchg
ds
rcrb
cmp
jge
aam
mov
cwtl
mov
jle
xchg
dec
inc
pop
xor
shll
mov
cmpsl
cmp
cltd
fisubl
jbe
aad
sub
mov
mov
mov
mov
lock
js
loope
adc
iret
add
jmp
cmp
into
out
or
dec
cmp
or
cltd
in
xchg
enter
adc
into
mov
cwtl
popa
aaa
js
cmp
sub
mov
or
in
fstpl
call
cmp
dec
daa
pop
mov
pop
pop
push
push
fs
add
movsl
rolb
call
mov
pop
cmp
fisttps
dec
push
cltd
push
mov
inc
push
and
cmp
xchg
in
jae
mov
mov
call
dec
mov
dec
dec
fadds
scas
lea
adc
jmp
arpl
sub
lcall
mov
aas
pop
es
pop
popa
ficomps
xchg
pop
xor
sub
sub
hlt
fiaddl
mov
mov
inc
mov
out
pop
jne
push
sbb
mov
xchg
loop
in
mov
out
lods
inc
lods
fstps
out
setae
pop
mov
nop
sahf
inc
mov
nop
les
xchg
sub
or
sbb
out
pop
ja
mov
mov
xlat
scas
in
mov
cwtl
jno
fstpl
cmc
jle
cli
in
in
dec
cmp
flds
mov
imul
dec
and
or
outsl
nop
or
mov
mov
stos
je
and
int
stos
lahf
fwait
fs
add
lret
test
orl
xor
xchg
add
loop
movsl
adc
data16
cld
loop
jae
lods
inc
test
jecxz
inc
jg
les
push
mov
imul
adc
into
mov
inc
gs
dec
jnp
jno
xchg
mov
jge
pop
cmp
mov
or
xchg
and
xchg
aas
cmpb
aam
mov
cmpsl
mov
pop
dec
sub
rorl
add
jns
outsl
imul
mov
pushf
or
add
into
lcall
pop
outsb
push
rclb
andb
xor
jne
sbb
inc
bound
xchg
pop
lcall
push
loop
scas
lds
loopne
jg
rcll
int3
cmpb
sbb
xchg
push
sbb
mov
iret
daa
test
inc
push
inc
cmp
jno
add
ss
cwtl
loop
push
aaa
jl
out
mov
cmpsb
pop
cs
inc
cltd
stos
cmpsl
lds
aam
repnz
xlat
pop
xchg
pop
les
nop
stos
inc
xchg
orl
ja
cmc
sahf
push
or
test
jmp
clc
je
jno
push
dec
dec
ss
inc
js
push
mov
lods
outsb
sbb
jg
subl
pop
test
jno
dec
ss
jg
jnp
cli
js
lock
lret
clc
jge
push
pop
aad
testb
rorb
test
lea
ja
clc
fs
inc
xor
mov
xchg
in
sub
push
inc
cmp
adc
sahf
repnz
sbb
icebp
xchg
mov
call
and
pop
jno
enter
push
outsl
jne
lea
mov
xor
rolb
jne
icebp
and
add
in
push
aaa
arpl
sahf
sub
sbb
dec
add
adcb
mov
aad
cmpsl
mov
ds
lock
sbb
and
cld
push
sub
mov
mov
sbb
jge
inc
andb
shlb
mov
int3
sbb
jmp
dec
ja
sbb
mov
mov
cmp
div
mov
int
pop
shlb
sbb
imul
hlt
sub
xor
or
dec
in
ss
ja
popf
sbb
arpl
and
in
cmpsb
xchg
mov
dec
sub
sub
je
in
ljmp
jne
inc
fwait
or
push
outsl
scas
orl
mov
orl
xchg
dec
cmp
cmc
subl
pop
out
aam
jmp
pop
adc
sub
push
pop
data16
push
xchg
xorl
adc
bound
dec
and
aad
insb
lds
loope
add
lahf
or
es
call
sbb
xchg
push
fdivr
sub
xor
insb
int3
add
jle
decb
lods
test
mov
stos
in
mov
cmp
lods
fidivl
bound
fmull
dec
mov
data16
addr16
and
pop
movsb
fcomps
dec
fldt
adc
and
pop
or
push
pop
dec
mov
lods
leave
fwait
jecxz
out
pop
addl
pushf
movsl
scas
mulb
inc
push
lds
aaa
out
mov
int3
push
cs
or
dec
mov
test
andl
cmp
lea
dec
jge
movsl
jmp
test
sub
inc
dec
push
jl
enter
cld
mov
cmp
jno
in
mov
inc
or
test
adc
xchg
addr16
xchg
mov
bound
cmpsb
into
xchg
dec
aam
jo
jbe
addr16
pop
mov
out
addb
push
cmpsl
pop
arpl
imul
push
addr16
add
jnp
mov
jg
enter
mov
pop
add
daa
in
push
lret
mov
imul
cmpl
gs
pop
fnstenv
gs
pop
test
aas
xchg
jp
inc
mov
je
shr
jge
arpl
or
and
add
stos
sarb
adc
adc
xor
fsts
push
arpl
fisubrs
scas
xor
test
xor
xchg
out
fwait
ds
addr16
adc
das
loop
sub
addl
loopne
jne
in
inc
int3
push
lea
jl
adc
fs
sub
cmp
bound
sti
mov
add
push
jb
cmc
pop
or
fildll
idivb
cmp
and
and
cmpsb
jno
or
insb
push
dec
jae
imul
nop
adc
call
movb
jno
js
in
out
imul
ror
jo
fidivs
push
cmpsl
adc
jmp
ds
add
cmp
push
sub
ss
js
fnstenv
mov
pop
xor
or
push
push
push
fwait
int3
pop
mov
dec
aad
into
addr16
cmp
push
movb
xchg
bound
imulb
lcall
in
add
repnz
shlb
lds
test
fstpl
cmp
push
dec
rolb
data16
je
dec
in
cltd
pop
data16
jge
pop
cmova
fstl
jo
cwtl
jge
xor
pop
outsb
lret
push
push
dec
sub
xor
or
mov
jno
pushf
es
scas
in
pop
popa
xor
push
shl
cmp
jg
jge
cmp
mov
stos
mov
pop
nop
dec
xchg
mov
jb
xchg
lods
mov
lock
mov
or
ficoms
aad
int
inc
adc
cwtl
out
sbb
sub
test
icebp
lcall
rcrb
pop
in
jbe
cmpsb
jne
fidivrs
sbb
mov
xor
xor
cmp
pop
cmp
sahf
pop
sub
int3
mov
lds
es
mov
jbe
mov
hlt
lret
stos
push
dec
sub
pop
xor
out
or
jge
pop
insl
cmpsl
subb
arpl
orl
xchg
add
sub
incl
mov
jnp
sbb
bound
ja
outsl
rcr
push
inc
test
push
adc
ljmp
mov
fs
cld
jl
xchg
clc
mov
inc
dec
adcl
ss
cld
mov
mov
cmp
bound
pop
shl
scas
mov
mulb
bound
sub
frstor
rsm
push
negb
pop
cmp
sbb
and
jb
adc
aad
cltd
fcmovnb
inc
addr16
test
cmp
aaa
jbe
cmpsl
sub
mov
sbb
pop
fwait
xchg
cmpsl
aas
clc
pusha
adc
or
add
mov
mov
fisttpll
loop
lods
xor
shll
arpl
xchg
lcall
adc
adc
adc
inc
les
sbb
bound
dec
mov
les
dec
loop
jmp
add
mov
adcl
int
cmc
mov
stc
fcomp
pop
push
xor
mov
jo
xchg
lock
mov
movsl
xchg
rorl
call
xchg
push
lds
jo
adc
je
cmp
push
cmpsb
mov
cmc
lds
in
outsl
scas
inc
pushl
push
jns
or
push
mov
je
xchg
in
fstl
jb
push
js
insl
js
mov
push
ljmp
cli
aad
xlat
push
push
fstps
bound
xchg
jmp
mov
in
pop
popw
fdivr
ret
shll
xlat
xor
in
repz
fsubs
push
cmp
cmpsl
or
mov
push
fcompl
scas
cmp
mov
xor
pusha
jmp
out
mov
lods
popf
call
inc
lcall
testb
imul
rclb
cmp
dec
out
jg
or
cltd
outsl
scas
xorb
imul
iret
fadds
push
mov
insb
pop
mul
inc
out
cltd
das
xchg
push
fs
bound
test
pop
mov
or
andb
arpl
cmp
test
mov
jne
out
aaa
bound
push
out
jg
sar
dec
daa
cmp
js
dec
push
loopne
iret
imul
mov
cltd
and
adc
aas
xor
aam
sub
xchg
stos
push
or
aam
jo
stc
aam
xchg
sbb
sub
lea
sahf
or
ret
int3
xlat
dec
mov
push
jns
pop
push
arpl
ja
mov
lret
adcb
bound
jge
mov
inc
cmp
sti
pop
mov
pop
in
jne
imul
fwait
nop
ja
adc
aas
lret
stos
push
sbb
mov
insl
loope
mov
dec
jb
push
pushf
mov
push
bound
or
cs
or
fcomps
ret
jnp
xor
dec
inc
jne
sahf
ficoml
and
mov
lds
leave
push
push
adc
test
imul
out
pop
rcrl
pop
xor
or
aaa
test
push
inc
adc
scas
mov
movsl
mov
cmp
and
mov
jle
lret
lods
testl
mov
xor
add
loope
push
push
mov
incb
xchg
clc
fldcw
pop
sub
test
sub
sub
jnp
mov
cs
ljmp
xor
mov
in
adc
pop
inc
loopne
sbb
xchg
push
dec
mov
xor
cmp
fadd
inc
or
fistpl
in
push
pop
mov
inc
das
cmpsl
sbb
rorl
or
and
mov
dec
int
sub
inc
push
sbb
mov
or
sub
jbe
lcall
push
loop
cmp
negb
or
in
jb
fwait
push
inc
jl
add
pop
daa
nop
aam
sti
xchg
inc
subb
mov
sbbb
xor
jbe
js
out
enter
xchg
insl
cmpsb
xor
pop
add
mov
icebp
push
sbb
push
sahf
lock
xor
and
cmp
and
inc
sahf
adc
push
fs
aam
stc
or
and
les
xchg
cltd
stos
dec
in
out
cld
fs
movsb
mov
xchg
lea
movsl
push
lock
pop
add
fldenv
std
or
inc
shl
mov
xchg
mov
mov
lock
test
cmp
pushf
ficoml
out
loop
mov
aad
test
lcall
push
and
popl
mov
mov
and
call
lret
and
nop
sub
inc
xor
push
loop
popa
ss
scas
les
inc
shll
cmp
fisttps
sbb
push
inc
les
je
or
movsb
pop
test
push
pushf
data16
aad
jne
pop
mov
sbb
les
jnp
adc
les
push
dec
subb
sub
daa
mov
inc
push
repnz
jle
mov
cwtl
fcmovu
mov
inc
hlt
fsubl
push
out
jnp
lods
cli
fldl2t
dec
iret
cmp
adc
add
adc
clc
mov
ljmp
mov
jge
xchg
xchg
bound
push
mov
lds
into
push
pop
xchg
les
sub
stos
or
xchg
daa
jg
pop
rol
mov
mov
mov
lret
mov
movsl
pop
xchg
nop
lcall
xchg
cwtl
cmpsl
les
js
push
sbb
arpl
adc
sub
popa
dec
xchg
pop
pop
enter
stc
flds
xchg
ljmp
mov
sbb
inc
mov
push
outsb
add
dec
clc
loop
xchg
jg
popa
test
les
gs
add
imul
xchg
sbb
loopne
mov
jne
aad
call
cmp
fwait
jb
inc
sbb
and
pop
mov
data16
in
and
into
pop
mov
popa
shr
mov
arpl
xor
pop
out
push
pop
insl
data16
cwtl
pop
dec
lea
shlb
jne
xor
out
fistpl
movsl
dec
mov
out
sub
xchg
cmpsb
inc
inc
fdivs
hlt
mov
push
lcall
dec
jecxz
dec
sbbb
push
cmp
std
mov
movsl
shlb
xchg
jo
shlb
insb
lds
insl
pop
jmp
mov
sub
gs
sub
dec
lock
loopne
mov
out
jmp
xchg
lcall
fdivrs
dec
rcll
stos
js
sub
je
add
and
dec
jg
ret
and
and
shlb
mov
orb
pop
pop
cmp
scas
or
cmc
pop
adc
fimuls
fldcw
pop
inc
lcall
into
push
dec
xchg
cltd
and
push
push
jne
outsb
dec
test
dec
sahf
enter
aam
test
push
pop
mov
mov
jecxz
adc
mov
cwtl
ds
sahf
rcrl
xor
repnz
cmpl
ret
sub
xchg
popa
ja
and
rcll
cmp
push
scas
mov
push
dec
aad
push
arpl
inc
jecxz
pop
jl
push
testl
add
cmp
lods
or
pop
push
imul
dec
mov
leave
sub
dec
add
bound
iretw
sbb
mov
stc
xchg
and
jo
cwtl
idivb
xchg
lds
sub
add
fsubrs
dec
lcall
push
fnstenv
test
data16
sbb
pop
push
popa
les
or
icebp
push
mov
mov
test
enter
inc
fistl
lds
xchg
loope
cs
dec
mov
add
loope
nop
sti
ficoml
and
push
add
scas
aad
pop
cld
or
dec
lock
dec
pop
cli
mov
lea
xor
adc
sub
push
pushf
xor
stos
xchg
popf
mov
call
fdivrs
dec
int3
ret
mov
jp
mov
mov
into
mov
int
cmp
dec
clc
cmpb
add
in
cmp
ljmp
dec
push
jbe
test
mov
insb
fneni(8087
push
ss
in
dec
and
push
adc
cmp
nop
cmp
addr16
push
jnp
negb
cmp
setp
lods
pop
pusha
scas
jo
pop
push
nop
fwait
push
xchg
pop
sahf
cmp
int3
inc
push
mov
in
mov
out
sbb
mov
jbe
sub
jbe
imul
js
jae
mov
xchg
les
xchg
or
xor
mov
roll
jne
push
mov
or
jnp
adc
nop
push
sub
fistpl
mov
dec
jg
fdivs
arpl
mov
jb
jnp
fstps
pop
sub
lods
int
jns
mov
push
je
notl
mov
dec
pop
lret
je
push
adc
push
dec
jo
sbb
cmp
jbe
jp
jmp
push
pop
fisttps
cmp
xchg
cmc
bnd
fldenv
push
cmp
sub
cltd
cmp
xlat
fwait
gs
sahf
dec
in
dec
stos
into
xchg
jl
test
push
testl
test
lahf
xor
inc
xchg
xchg
in
mov
les
sbb
cmpsl
js
sbb
sub
push
sub
jne
inc
xor
lcall
rcrb
popa
scas
adcb
inc
dec
cmp
in
jns
cmp
xchg
jecxz
fcmovb
shlb
int
cmp
cmp
mov
sti
negl
xor
push
inc
mov
les
cmp
add
jnp
iret
adc
add
jo
ljmp
dec
xor
outsb
popa
push
mov
int
lock
fidivl
cmp
int
mov
cmp
inc
movsb
xor
mov
cmp
dec
stos
daa
cwtl
popf
inc
xchg
push
rcll
and
mov
scas
and
test
mov
lock
js
jmp
inc
fwait
sub
sbb
mov
fldt
clc
decl
dec
lret
and
mov
jne
iret
or
lea
cmpsl
dec
dec
sbbl
sub
cwtl
and
fstpt
bound
push
in
repnz
sahf
sbbb
rcl
sbb
mov
xchg
cmc
aam
aad
clc
shrb
cmp
sub
mov
or
mov
jno
jp
test
in
jno
addr16
pop
inc
push
mov
sub
xor
cmpsb
fldcw
push
push
scas
pop
xchg
pop
mov
inc
sbbl
sbb
sbb
mov
dec
push
ret
pop
es
arpl
shl
jge
mov
pushf
and
shll
mov
xor
int3
loop
mov
push
mov
aam
ds
mov
add
jle
add
mov
jae
sub
push
mov
push
pop
ret
das
ljmp
sbb
jmp
fldenv
hlt
mov
fsts
std
push
xchg
jle
cwtl
cmpsb
notl
mov
aas
repnz
mov
dec
xor
xchg
fmul
push
fisttpll
jnp
repnz
mov
jmp
daa
fcmovnb
mov
push
std
mov
sbbb
and
fsubrl
dec
sbb
or
rcr
and
pop
push
pop
sbb
cmp
sub
pop
sti
sbb
je
cli
dec
dec
bound
sbb
dec
scas
mov
jl
push
dec
jnp
mov
push
loope
into
lods
nop
adc
jl
fwait
adcb
dec
lahf
push
mov
push
cmpsb
addr16
jg
push
loopne
xchg
cmc
mov
push
xchg
cmp
mov
sbb
testl
rcll
pop
pop
mov
adc
fistpll
das
cmp
in
cmpsl
push
sti
pop
mov
movsb
mov
mov
les
dec
mov
adc
cmpsl
imul
sub
scas
repz
aas
clc
iret
adc
jo
scas
push
lods
xchg
jg
lock
sub
dec
jns
popf
lods
cmc
imul
cmp
push
mov
cwtl
cltd
fadd
in
dec
dec
mov
aas
inc
inc
add
enter
and
xor
pop
mov
jle
push
lods
push
in
lock
push
xchg
pop
push
movsl
fs
in
adc
stos
push
fistpl
inc
sti
or
pop
sub
inc
inc
mov
sti
mov
and
push
into
cmc
pop
mov
int3
or
jo
and
mov
fidivs
sub
push
mov
mov
cmp
das
add
fldcw
in
das
jno
pop
addb
dec
sbb
mov
and
sahf
rorb
and
cmp
icebp
mov
loope
dec
enter
and
bnd
lds
lahf
cmc
les
imul
push
popa
pushf
cmp
daa
push
movsl
sub
mov
ret
xorb
out
insl
push
rcrl
push
lods
ljmp
jnp
in
and
fistpl
xor
cmp
ss
cmpsb
cltd
sbb
das
icebp
ds
mov
pop
push
xchg
lods
rorb
xor
pop
or
xchg
lds
imul
xchg
sbb
cmpsl
into
rcrl
pop
xor
les
inc
push
mov
push
adc
cmpsb
rcrb
lahf
jmp
adc
cmp
and
xchg
mov
cmc
loop
lods
aaa
div
loope
jo
loope
imul
rol
xchg
outsb
frstor
es
mov
ret
ffreep
pop
pop
or
repz
pop
mov
mov
insl
in
fs
jne
aam
scas
jge
int3
add
mov
adc
jo
aaa
cmp
popa
les
lds
loopne
arpl
xchg
pop
test
into
out
stos
cmpsl
dec
sbb
jg
push
lds
mov
mov
cmp
fs
push
testl
call
add
push
pop
enter
out
nop
push
cmp
mov
sbb
ds
xor
mov
pop
int3
adc
dec
daa
out
leave
cmp
adc
add
jmp
aaa
clc
sbb
xor
sub
ja
adc
fwait
mov
pop
fabs
xor
pop
sbb
xor
enter
mov
push
leave
push
test
push
jnp
andb
pop
aad
push
cld
daa
pop
dec
jbe
xchg
push
fwait
dec
lea
pop
ja
lock
sar
mov
cmp
mov
aad
and
gs
cltd
lods
inc
popa
dec
push
nop
es
lcall
dec
pop
jne
xchg
inc
ljmp
sbb
aaa
adc
jg
lods
es
pop
outsl
jnp
mov
lds
fmull
gs
cltd
push
rcrb
mov
leave
xchg
jecxz
incl
sar
push
in
imul
insb
pop
lods
fs
cltd
leave
xchg
arpl
js
add
inc
mov
sub
outsb
cmp
popf
mov
imul
fxrstor
dec
stc
sub
inc
pop
lods
mov
jg
xor
xchg
push
mov
bnd
push
push
cmpsb
test
je
mov
adc
sbbl
ret
cwtl
test
into
pop
and
mov
into
pop
lds
xor
int3
adc
popf
push
adc
cwtl
sbb
icebp
mov
sarl
cmpsb
insb
jge
cli
jmp
cwtl
hlt
mov
and
dec
adc
popa
sbb
jnp
lods
loopne
mov
mov
out
out
insl
xor
sbb
cmp
lock
or
roll
clc
jb
xor
dec
add
push
or
mov
jo
arpl
scas
and
test
decl
loop
sarl
pop
mov
jecxz
and
punpckldq
pop
in
mov
fisubrl
cmpsl
push
xor
and
push
mov
test
pushf
test
cmc
lds
clc
sbb
mov
orl
mov
stos
adc
shll
push
imul
mov
scas
std
cmp
xor
add
sbb
dec
test
add
popa
das
dec
movsl
xor
arpl
subl
mov
aad
enter
sahf
mov
add
roll
cmpsb
jge
test
or
setbe
pop
dec
loope
loopne
test
ror
addr16
clc
pop
ror
xchg
das
incl
ret
xor
push
push
scas
sbb
mov
xchg
sbb
xchg
and
mov
aad
push
inc
or
mulb
inc
aam
cmpsb
js
adc
shll
push
pop
xchg
shr
rcrb
mov
fldl
shll
push
popa
cli
lret
sbb
jo
push
shr
into
pop
push
push
mov
and
push
int3
int
loope
mov
xor
aam
push
adc
mov
push
jb
xchg
incl
outsl
dec
fabs
cmp
das
subl
fistpl
xor
sub
shrl
test
pop
pop
stos
pop
test
lcall
xchg
mov
aas
add
mov
jno
mov
pop
clc
popa
les
lcall
pop
mov
out
jnp
fidivrs
mov
cltd
cmp
insl
push
mov
adc
or
in
mov
sub
orb
fstps
adc
pop
in
push
lahf
mov
jae
mov
dec
sarl
test
imul
mov
push
dec
imul
xor
test
mov
add
push
ret
push
nop
roll
inc
push
loope
sbb
adc
sbb
data16
adc
mov
push
mov
bound
sahf
xor
scas
xchg
dec
imul
mov
ficoms
jne
sub
sub
inc
push
cmp
lret
test
out
outsb
dec
pop
fwait
nop
mov
aam
les
and
popf
ss
xor
pop
push
jecxz
xor
mov
fwait
test
ret
pop
andb
iret
movsl
inc
inc
sbb
fidivrl
lret
test
mov
fwait
pop
and
mov
adc
dec
ret
lock
sub
bound
inc
xchg
frstor
cmp
popa
pusha
rcll
rclb
sub
mov
adc
jne
push
cli
inc
push
pop
pop
shlb
mov
dec
xor
fldl
jno
cmp
loop
jnp
imul
mov
push
xor
jne
mov
fst
daa
imul
fs
insb
xchg
jnp
insb
mov
sub
shll
jno
fsubrs
jge
loop
imulb
cs
bnd
mov
aad
test
mov
or
push
dec
jne
dec
or
cmp
cwtl
aad
cmp
bound
lret
jb
mov
loop
jbe
push
mov
dec
scas
sbb
dec
sbb
mov
sahf
bound
mov
jl
jge,pt
fwait
jge
mov
push
sbb
je
outsb
sub
adc
push
jbe
or
in
push
fildl
and
aad
pop
loop
mov
outsl
cltd
and
in
or
or
cli
ret
push
adc
jae
xorb
inc
jbe
mov
xchg
in
les
pop
xor
out
push
fsubrl
cmpsl
out
mov
push
or
cwtl
in
jmp
jnp
xor
mov
dec
jp
add
pop
aad
cmp
adc
xchg
mov
shr
sarb
sub
add
in
or
fdiv
jne
dec
movsl
in
lods
rclb
dec
push
jge
mov
push
pop
loopne
insl
dec
cmp
mov
pop
dec
mov
push
sti
jl
out
loope
movsb
sbb
push
sarl
cwtl
fstp
cld
js
or
sub
aad
jno
std
mov
or
or
sbb
lock
xchg
in
mov
ss
incb
sahf
jmp
stos
movsb
cmpsb
cmpsl
jmp
dec
repnz
je
test
inc
jmp
outsl
loope
mov
data16
xor
or
inc
adc
pop
cltd
add
call
sub
xchg
xchg
iret
mov
sbb
mov
int
out
out
in
imul
sbb
les
jmp
jb
xchg
pushf
lret
lock
sbb
in
call
pop
aam
sahf
mov
push
in
sub
adc
fcoml
sbb
and
fdivs
icebp
cmpsl
add
int3
paddusb
push
cmpsl
pop
cmp
call
push
xchg
aaa
aad
mov
into
stos
loopne
je
ja
in
pop
fs
pop
std
ret
pop
repnz
stos
test
mov
xchg
mov
add
xchg
jae
inc
popa
push
add
mov
or
out
xchg
test
push
xchg
daa
xor
mov
cli
gs
push
dec
sti
add
add
xchg
popa
sub
xor
sbb
mov
mov
lahf
sub
jns
and
rclb
jns
scas
lock
jo
test
pop
fsubrs
iret
or
push
fstl
or
lret
arpl
jmp
push
in
pop
dec
xchg
xchg
mov
or
xor
inc
pop
push
and
jnp
fdivrl
fcomp
clc
sbb
cld
data16
push
lcall
mov
int3
sbb
jl
adc
dec
push
shll
jno
mov
adc
mov
out
in
clc
jg
cld
cltd
jnp
mov
add
cmpsl
cld
movb
out
fwait
sbb
or
test
in
clc
jnp
cmpsl
stc
jle
iret
sub
mov
mov
adcl
cltd
inc
movsl
inc
jge
hlt
mov
sbbb
sbbl
test
sub
cmp
icebp
sti
scas
mov
and
jne
cmp
outsl
movsb
jecxz
fcomps
pop
xchg
mov
aam
pop
lret
cld
mov
adc
jecxz
clc
dec
add
ficoms
sub
repnz
bound
sub
shr
movsl
mov
jnp
pop
pop
inc
lock
adc
hlt
xchg
xor
mov
lock
adc
push
out
sbb
pop
lds
into
test
pop
jb
lahf
mov
int3
aam
mov
bound
rcrb
mov
adc
repz
jmp
adc
sti
mov
lods
cmpsb
int3
cltd
inc
sbb
inc
mov
lds
mov
xchg
ret
leave
test
nop
mov
jbe
shrl
fwait
test
outsl
push
pop
andl
inc
xor
lds
js
clc
lock
pop
inc
xor
mov
xchg
hlt
call
es
sub
xchg
adc
sub
pop
sub
das
ljmp
mov
push
cmpsl
jnp
aam
or
dec
lea
outsl
push
cld
je
insb
clc
je
pcmpgtd
push
add
test
cmp
int3
xchg
fs
pop
popfw
dec
or
push
push
cmp
es
sahf
cmpsb
dec
out
mov
jmp
fdivrs
test
lods
repz
sbb
xchg
out
pop
cmpsb
cmp
inc
ja
mov
cwtl
rcrb
andps
push
cli
aad
in
dec
inc
adc
sarb
into
mov
lret
int3
outsb
rclb
push
movsl
enter
loope
push
das
int3
jp
iret
pop
sub
cmpb
push
jo
push
mov
int3
pop
pxor
stos
mov
adc
movsl
mov
clc
movsl
aam
scas
pop
xchg
repnz
les
xchg
pop
jno
into
and
push
or
mov
adc
or
sub
cld
daa
arpl
aam
or
adc
lods
inc
adc
cld
sti
sbb
and
pop
les
xlat
push
xchg
inc
fucomp
js
jecxz
call
jo
nopl
mov
push
sbbb
popa
dec
cmp
push
pop
stc
daa
aad
adc
into
lcall
and
les
test
ret
pop
jecxz
cmp
cmpl
cli
or
loop
xor
xchg
dec
icebp
mov
pushf
loope
cmp
les
scas
pop
sbbb
jb
rcll
aad
cmp
call
cmp
loope
test
mov
mov
xchg
xlat
dec
les
ja
cmp
je
je
stos
mov
in
cltd
pusha
pushf
sbb
xchg
rolb
mov
iret
test
push
push
lahf
divb
add
imul
cmp
mov
push
mov
xor
jp
and
aad
ror
jl
fstpt
inc
push
mov
pop
adc
movsl
mov
in
out
cmp
loopne
imul
test
les
push
pop
shl
push
adc
icebp
insb
iret
pop
jp
xor
shrb
dec
inc
mov
pop
repnz
jl
pop
daa
ret
addr16
mov
mov
popa
int3
icebp
lret
sub
lahf
ss
push
xor
push
jmp
and
je
popa
add
sahf
bound
sbb
das
repnz
push
adc
push
adc
mov
mov
mov
nop
pop
cmp
repnz
pop
inc
aam
and
subl
lcall
jmp
lods
or
inc
inc
jp
shrb
add
pop
lds
bound
rcrb
or
into
pop
sub
shlb
mov
and
inc
insb
mov
mov
add
pop
pop
mov
int3
lret
nop
pop
dec
cmp
or
inc
xor
lds
push
sub
xchg
cmp
fldenv
loopne
aam
in
pop
push
xor
aam
stos
stc
cmp
aaa
mov
inc
ja
jne
sbb
cmpsb
aad
cmpsl
push
out
mov
xchg
fistpl
xor
int
js
mov
imul
fcomps
push
inc
and
mov
or
iret
jl
adc
xchg
and
push
sbb
cwtl
loop
push
icebp
dec
gs
je
sub
mov
fistpll
mov
lea
add
arpl
mov
fnstenv
lcall
mov
adc
adc
xor
stc
ja
nop
out
sahf
mov
fnstsw
push
std
out
pop
jecxz
xchg
fs
insb
push
jo
pop
push
sahf
xchg
psubusb
std
in
je
and
js
ja
sbb
movsb
or
mov
mov
mov
orb
pop
nop
mov
popa
pop
pop
pushf
jo
adcl
movsb
push
mov
inc
cmpsb
scas
adc
push
mov
inc
mov
push
cmp
pop
lahf
sbb
xor
filds
jno
dec
mov
xchg
gs
push
mov
mov
sub
flds
xor
scas
out
les
pop
and
mov
push
adc
fldenv
pop
aas
add
scas
sti
inc
jne
or
je
daa
ljmp
and
testb
xchg
jb
test
les
cltd
bts
mov
fcoml
ja
mov
popf
stos
dec
jp
mov
orb
cmp
mov
mov
cmpsb
jle
aaa
add
fdivrl
stos
inc
std
lock
fsts
sbb
in
inc
popf
arpl
cmpsl
inc
mov
aad
hlt
popf
sahf
mov
into
cwtl
inc
adc
arpl
jp
lock
repnz
adc
shll
out
rcll
push
xchg
add
pop
int
fwait
sbb
jp
cmp
and
mov
mov
lock
adc
pop
push
ror
pushf
cmpsl
push
push
fstps
mov
psraw
jnp
push
dec
mov
scas
sbb
jge
or
stc
pop
rolb
cwtl
insb
mov
and
mov
ds
leave
mov
mov
movsb
mov
xchg
cltd
lods
pop
mov
test
push
es
adc
xor
dec
out
push
lret
fstpt
arpl
push
aaa
std
xchg
ja
arpl
push
xchg
sbb
fidivrl
lret
mov
or
mov
js
scas
test
sbb
push
sahf
mov
insl
xor
xchg
sbb
sbb
adc
orb
orb
sub
insb
js
and
and
pop
sbb
sbb
push
test
xchg
mov
call
clc
pop
push
sbb
push
cmpl
lock
pop
imul
push
sbb
xchg
andl
and
jmp
test
loop
lds
xchg
jp
cwtl
nop
mov
jg
les
fst
mov
mov
sahf
out
out
mov
pop
xchg
push
inc
inc
jecxz
andb
cwtl
je
dec
adc
daa
pop
mov
pop
pushf
sbb
and
int
sahf
stos
pop
cmpsb
mov
ss
and
popf
stos
pop
inc
mov
aas
aam
dec
xchg
push
jl
inc
xchg
mov
push
arpl
ja
mov
xor
aad
imul
mov
ja
sbb
fs
cltd
arpl
cmp
mov
addr16
imul
loop
in
icebp
enter
fdivrl
cli
add
js
test
lcall
ja
jno
ljmp
out
cmp
in
xor
mov
cmp
lods
cmp
mov
fstps
xor
xchg
lods
std
mov
dec
scas
loope
push
jnp
xorb
repnz
mov
jle
push
jge
xorl
push
out
fistpl
sub
lock
lret
xor
jno
lcall
dec
add
push
xchg
scas
inc
fnstcw
adc
mov
mov
rcrl
ja
mov
popf
out
gs
jbe
jbe
mov
inc
fndisi(8087
xchg
mov
nop
mov
xchg
clc
mov
mov
jmp
xor
push
ds
pop
test
sub
mov
loope
mov
les
mov
mov
xor
xor
push
mov
xchg
mov
mov
pop
lret
movsb
lods
add
mov
push
mov
sub
mov
scas
inc
aad
push
xchg
nop
pushf
addl
pop
xchg
pop
cmpsb
mov
fisubrs
aam
mov
out
push
mov
cmpsb
xor
ljmp
test
aad
push
js
ret
insb
mov
shll
scas
and
xor
xchg
mov
push
push
sarb
ret
push
lcall
dec
orl
pop
mov
ja
cmpsb
sbb
push
lret
js
push
test
cmp
insb
xchg
arpl
or
adc
repz
sbb
repnz
dec
fiadds
jno
dec
arpl
shrl
push
and
cmp
mov
jge
jg
movsb
das
jmp
xchg
popa
test
mov
cld
cmp
xor
cmp
sbb
sub
shll
dec
dec
or
add
aad
mov
mov
jbe
mov
andl
scas
push
mov
fcomi
int
insb
pop
push
jnp
push
pop
shrl
jno
jge
or
xchg
inc
icebp
dec
into
xchg
je
lds
xor
xchg
inc
jae
fidivs
adc
jo
mov
test
mov
data16
jno
mov
hlt
scas
lret
pop
shl
scas
imul
mov
cmp
xorl
jl
frstor
jg
and
push
xor
fwait
aas
mov
stos
xor
test
jo
and
cmp
movsb
fsubrp
movsb
xchg
pushf
jp
add
dec
sub
nop
pusha
sbb
imul
andl
or
fildl
pop
mov
pop
push
push
frstor
mov
jbe
push
ret
jo
cld
mov
adc
lcall
jg
and
dec
dec
dec
pushf
fs
jnp
pop
outsl
inc
scas
push
xchg
js
js
jo
mov
jp
and
push
jo
mov
lods
scas
outsb
daa
dec
adc
aam
js
lds
rolb
sbb
rol
push
scas
popf
jg
mov
bnd
loop
pop
add
pushf
sub
xor
jp
fcmovbe
into
jae
adcb
xchg
shlb
stos
xchg
dec
jo
jmp
cmp
out
pop
dec
data16
mov
aam
dec
sub
dec
ret
jbe
call
repnz
or
insb
popl
frstor
and
adc
bound
sbb
push
jmp
lods
adc
sbb
cmp
xchg
mov
push
inc
ret
stos
vpsubb
jo
push
lds
jge
push
mov
stc
or
adc
adc
mov
es
mov
nop
fwait
jmp
movsl
xorb
mov
pop
jnp
xchg
ret
mov
pop
adc
popa
cltd
xor
leave
mov
jb
mov
jo
je
cmc
lahf
inc
dec
ja
or
stos
cmp
ss
cld
xor
inc
mov
test
sti
xor
shrb
nop
jnp
ds
xchg
into
push
lcall
push
mov
std
xor
jnp
jmp
in
jno
enter
sbb
push
mov
into
push
mov
jle
push
mov
in
pop
das
mov
jns
andl
dec
shlb
movsb
mov
dec
mov
ljmp
sbb
and
xchg
sub
pop
xchg
mov
clc
shlb
pop
sbb
sbb
stos
cmp
sbbb
xor
jno
subb
pop
mov
je
fscale
lds
scas
pop
dec
jge
cli
test
or
adcb
push
pop
push
les
loopne
stc
leave
fidivrl
mov
mov
stos
or
inc
push
je
or
ficomps
out
cmp
pop
push
es
cmp
mov
push
xchg
imul
mov
les
jp
iret
adc
and
dec
ret
loope
xor
out
mov
and
mov
cmpsl
push
nop
fsubs
jne
xchg
dec
repnz
mov
nop
fistpl
xor
cmpsl
fiadds
add
mov
jnp
or
aam
insl
xor
jnp
lahf
nop
sbb
push
repnz
mov
cmp
jnp
mov
mov
pop
jl
loopne
ja
sub
push
sub
insl
je
dec
sets
push
lcall
pop
jg
dec
push
dec
lock
jae
daa
mov
sub
lahf
sub
test
push
sbb
lcall
or
repz
lds
mov
mov
hlt
dec
jbe
pop
jge
push
pop
cmp
scas
dec
dec
sbb
movsl
cmpsl
pop
call
dec
lds
jb
andb
ficoml
push
mov
dec
xor
jns
mov
sub
and
loope
stos
inc
sbb
stos
cmpsb
call
rolb
test
scas
jl
add
dec
xchg
out
pop
int3
xor
dec
push
and
jg
push
cmpsl
jbe
sub
in
dec
cmp
add
lahf
xor
xchg
jne
scas
mov
cmpsl
xor
push
aad
sbb
and
into
ljmp
cmp
mov
mov
pusha
rcl
int3
xorb
cwtl
in
xchg
pushf
jg
xorb
inc
out
shlb
adc
pop
les
pop
lret
pop
add
loopne
shlb
enter
mov
push
mov
sub
data16
clc
cmpsl
bound
xor
sub
testl
jno
out
fstpl
push
cmpsb
es
enter
xor
jne
push
sbb
push
jbe
lea
cmc
bound
das
push
push
scas
and
popa
sub
repz
sub
imull
mov
adc
fcomps
inc
mov
and
sbbb
or
mov
sub
and
and
cmp
clc
cmp
fwait
push
adc
fsts
repnz
mov
jp
push
pop
dec
push
cmc
subb
in
jne
xchg
adc
out
sub
sbb
fistl
pusha
test
pop
adc
in
and
cmpb
dec
adc
push
sbb
xchg
cmp
insb
push
fistpl
js
lds
movsl
fstpt
lock
pop
rcrl
jbe
int
pop
and
into
adc
repz
out
enter
push
lret
add
fcompl
sbb
es
outsb
mov
inc
sub
aad
jl
mov
adc
lods
xchg
jae
cwtl
mov
test
dec
fidivs
lcall
push
mov
fisttpll
lods
lods
int
int3
lds
or
in
mov
outsl
fnstcw
jle
cli
xchg
push
iret
dec
or
vmulss
out
jnp
jnp
jae
push
iret
insb
nop
jo
add
pop
push
aad
or
imul
and
in
push
cld
mov
aas
or
push
jbe
xchg
jne
das
sbb
out
xchg
idivl
pushf
inc
scas
rorb
xchg
lds
cmp
test
inc
and
jge
iret
shll
sbb
mov
pop
push
push
subb
mov
outsl
cmpsl
mov
mov
sbb
mov
mov
jbe
dec
cmpsl
jnp
js
push
and
stc
loopne
mov
das
mov
rorl
dec
mov
xchg
push
es
xchg
sub
daa
fcoms
popa
xchg
xchg
ret
mov
lock
sub
bound
jno
push
flds
dec
cmp
into
push
js
insb
loopne
or
movsb
sbb
mov
sub
pop
sbb
sbb
xchg
lods
and
js
cmpsb
insb
repnz
js
xor
mov
sbb
inc
adcl
sahf
cmc
lock
fwait
mov
iret
test
arpl
insb
push
jns
imull
fadd
je
mov
mov
call
xor
ja
jno
and
push
mov
jecxz
cmc
fisubl
cmp
and
stos
or
jge
pop
sbb
pop
iret
mov
in
xor
sub
jp
or
and
repnz
mov
adcb
dec
pop
mov
outsb
fldl
jae
pop
pop
pop
pop
jle
mov
mov
pop
cmp
pop
pop
jge
inc
add
aaa
cmpsl
in
mov
fdivrs
loop
jle
inc
mov
stos
and
movsb
in
jo
sahf
jno
out
bound
repnz
lcall
xor
lret
jge
adc
push
int
dec
sub
aam
push
and
inc
ds
bound
test
fsubrs
mov
sbb
popa
cmpsl
jp
call
mov
push
insb
mov
iret
xchg
mov
mov
mov
pop
cwtl
outsb
push
adc
cmp
sub
sub
lret
inc
nop
mov
mov
int
fs
cmp
subl
and
ljmp
stc
ficoml
xchg
adc
cs
jnp
scas
and
mov
push
cmp
fisubrs
out
cltd
lock
orb
mov
arpl
adc
mov
orb
loopne
sbb
push
jnp
sbb
sbb
xor
push
mov
iret
mov
sarb
in
inc
mov
stos
adc
adc
dec
mov
lret
fidivl
sbb
dec
lock
jle
lods
adc
push
xchg
mov
cmp
fs
les
mov
cmp
jbe
stc
inc
sbb
lods
cli
pop
dec
mov
cltd
stc
out
dec
dec
in
mov
cmpsl
int
stos
jg
int
arpl
test
ss
mov
jg
js
hlt
repnz
and
jae
push
sbb
and
inc
adc
out
jb
cld
fwait
mov
ds
xor
lods
pop
sarb
xchg
js
inc
cmc
fcom
and
push
mov
cmpsb
mov
xchg
pop
jnp
push
shll
and
cli
flds
out
jbe
add
ja
mov
lahf
mov
cmp
inc
cmp
popf
jge
adc
cmp
aaa
fmulp
cmp
push
lret
add
push
not
and
jg
aad
loop
stc
sub
ss
mov
in
adc
cltd
aad
aaa
xor
adc
dec
mov
mov
int3
fs
test
std
insl
pop
jnp
sbb
jbe
fisubrl
xchg
mov
loope
rcrl
loope
mov
inc
je
cmc
xchg
addr16
nop
xor
call
flds
rcll
inc
push
out
stos
mov
in
in
mov
sub
ret
inc
dec
lcall
js
inc
pop
jge
sub
fstpt
popf
out
sub
loop
mov
aad
jecxz
lds
sti
mov
repnz
cli
jne
adc
loope
jno
in
ja
push
xchg
cmpl
or
je
xchg
imul
mov
jmp
push
popa
mov
jbe
mov
cmp
sub
movb
movsl
lods
dec
inc
xchg
aad
lret
xchg
bound
dec
jae
mov
lret
sub
push
mov
dec
je
cwtl
jg
repnz
dec
leave
jecxz
xchg
xlat
test
test
shrb
lods
aaa
ljmp
fsubr
aad
clc
int3
test
push
xchg
icebp
mov
mov
mov
inc
or
fdivs
and
pop
fs
sysret
loop
or
dec
cmp
xor
mov
cmp
cmp
mov
std
shr
in
jmp
loope
jp
xchg
xchg
jnp
insb
loopne
fstps
sahf
js
inc
shll
mov
sahf
adc
mov
in
lcall
inc
push
and
cmp
adc
lcall
push
nop
fstps
push
inc
mov
scas
mov
pop
lcall
in
mov
retw
jle
mov
xor
mov
in
mov
mov
pop
push
shll
cmp
sbbl
xchg
addb
cmp
jne
inc
cmp
movsl
adc
cmpsb
xchg
daa
pop
loope
lock
mov
rol
pop
arpl
test
imul
les
adc
int3
imul
jae
mov
fnstenv
mov
clc
dec
aam
arpl
dec
mov
call
jmp
mov
and
lds
cmc
clc
adcb
mov
jmp
xlat
sbb
mov
mov
gs
xchg
ret
out
push
bound
mov
cwtl
fbld
inc
dec
filds
mov
cmp
lock
sub
fs
je
lea
cmp
imul
cmp
pop
pop
jnp
in
ds
into
or
sbbl
mov
ljmp
xchg
or
lock
mov
out
jle
adc
or
lea
mov
dec
adc
jge
fcmovnbe
inc
inc
pusha
sahf
mov
rolb
sbb
bound
outsl
iret
jecxz
sti
sbb
jmp
dec
aam
mov
jo
mov
jmp
pop
jo
dec
sti
fnsave
push
push
cmp
lock
xchg
lds
add
pop
movsl
jnp
pushf
sbb
loope
insb
pop
cmc
xor
cmpb
adc
or
les
cmc
jno
cwtl
fcomps
mov
loope
mov
and
inc
les
dec
icebp
fwait
cmp
jno
lods
pop
test
in
dec
adc
push
sub
ror
mov
push
lods
sarb
pop
cmpsb
mov
mov
or
add
pushf
stos
sub
scas
sub
and
jns
addr16
clc
xchg
add
sub
jae
daa
scas
jbe
inc
sti
sbb
add
inc
xchg
and
inc
jno
fstps
mov
decl
and
aas
add
outsb
dec
sub
cmp
repz
jge
aam
xchg
in
loop
scas
scas
push
xchg
cmpsb
fadds
pushf
push
pop
xchg
mov
fsubrs
or
adc
push
les
xchg
clc
push
xlat
pop
pop
popa
fucomi
pop
lcall
jns
test
ss
adc
idiv
mov
cld
adc
cmpsl
jmp
cmp
rorl
pop
push
mov
pop
es
pop
les
fcmovu
arpl
clc
sbb
cmpsl
loop
dec
mov
shll
xor
xchg
rol
add
adcb
jl
push
aam
aad
mov
insl
dec
mov
add
faddl
cltd
hlt
sub
hlt
ja
adc
jns
loope
cmp
jmp
lcall
sti
mov
jecxz,pn
push
cmpsl
mov
cmp
lods
leave
and
push
mov
loopne
xor
cmp
jg
jns
inc
jg
scas
inc
pop
pop
int
rcrb
outsl
addr16
shrl
sbb
insl
lods
fistl
setne
push
inc
testl
jns
nop
movsl
sahf
sub
mov
ret
dec
xor
and
xor
push
fistl
repz
sbb
pop
bound
dec
test
clc
shl
sub
fmull
pop
addr16
outsb
dec
inc
xor
mov
push
nop
ja
test
mov
out
mov
rorl
imul
hlt
jp
ja
mov
stos
adc
push
mov
stos
dec
jmp
in
cmpsb
iret
stos
push
gs
cltd
jae
push
pop
addr16
sti
push
fidivl
dec
dec
testb
lods
cmp
jns
cmpsb
repnz
daa
inc
sub
and
push
dec
cmove
addl
sbbl
pushf
xchg
js
xchg
shl
imul
fdivl
xor
jge
dec
and
jns
ja
lds
push
add
jp
jns
stc
mov
mov
mov
mov
in
cmp
push
mov
loop
sbb
cmc
in
xchg
int3
jo
mov
addr16
insb
sarl
movsb
lds
testb
mov
out
add
add
xchg
jbe
cld
stos
push
out
imul
or
loope
nop
sbb
pop
test
aad
out
xor
fwait
xor
sbbl
ja
and
ja
imul
out
xchg
call
out
out
test
ds
add
jbe
jp
xchg
cmp
lods
push
lock
imul
insb
mov
jnp
pop
jg
les
and
data16
dec
mov
push
xor
in
outsl
mov
cmpsl
xor
mov
push
mov
lods
add
movsl
adc
imul
jnp
les
pop
inc
mov
das
dec
jge
jle
insl
sahf
gs
push
xor
xor
dec
sub
dec
xor
inc
js
mov
jno
pop
xchg
sub
mov
je
adc
imul
lds
mov
mov
add
xor
arpl
ds
stc
xorl
mov
sbb
data16
in
jb
push
xchg
mov
in
imul
fsts
inc
xchg
enter
repz
fsubrs
in
dec
add
bound
pop
bound
fstps
mov
push
pop
inc
push
xchg
sar
in
daa
repnz
mov
cmp
pop
lds
push
or
add
mov
cmp
cmpsb
adc
and
mov
mov
dec
xchg
xor
lds
jbe
adc
pop
dec
sub
test
popf
jnp
dec
ss
sbb
cmp
mov
lret
jno
pop
cwtl
push
bound
jb
sbb
xchg
cmp
adc
dec
jo
xor
cs
imul
push
dec
pop
jno
dec
rcll
fnsetpm(287
pop
out
sbb
jno
repz
pop
xchg
scas
mov
lds
xchg
leave
mov
repnz
jmp
inc
loop
push
shlb
mov
hlt
cwtl
pop
in
fadds
push
pop
ja
pop
mov
lock
call
cmp
pushf
inc
push
push
push
hlt
dec
jmp
mov
arpl
jbe
out
sahf
mov
popf
jge
and
cmpsl
mov
xor
push
dec
leave
movsb
int3
je
mov
and
pavgb
sbb
cmp
hlt
loop
out
movsl
repnz
gs
mov
push
dec
in
lret
push
loopne
inc
inc
sahf
cltd
inc
ss
ret
mov
lds
in
push
sti
inc
pop
notb
nop
iret
test
add
mov
imul
mov
cmc
pop
enter
fnstsw
xchg
or
jno
add
inc
inc
mov
push
mov
jb
sbb
in
mov
test
shrl
mov
enter
push
int
push
lods
push
negb
sbb
mov
faddp
mov
pop
clc
lds
iret
lock
fs
pop
cld
inc
test
cmp
jp
jl
push
test
inc
loop
in
lds
or
pop
or
adc
in
lods
sbb
mov
hlt
bound
stc
and
mov
mov
mov
push
mov
add
xchg
rolb
shrl
mov
jl
pop
stos
repnz
dec
les
aam
mov
dec
mov
cmpsb
mov
mov
dec
sub
loope
jo
dec
mov
insb
sti
gs
mov
mov
dec
cmp
inc
dec
aas
sahf
jg
ret
inc
addr16
jp
cmp
pop
push
jnp
mov
xchg
cmp
scas
in
stc
in
sahf
sub
pop
loopne
fcmovnbe
or
xchg
sarl
aad
cli
push
jns
out
jns
or
mov
mov
jns
outsl
xor
mov
jne
scas
add
je
fs
gs
dec
push
movaps
lcall
dec
js
shl
lock
mov
lds
sbb
push
fstps
xor
dec
fnstsw
push
les
scas
add
imul
cmp
ret
ror
subb
sbb
lcall
imul
ret
leave
mov
incl
jae
sub
clc
mov
mov
sub
xchg
lods
lods
mov
pop
mov
pop
aas
es
fdivrl
fstl
xchg
dec
lods
insl
mov
push
mov
mov
and
dec
add
xor
and
loopne
or
pop
sbb
sbb
xor
out
jp
xor
js
ljmp
inc
xchg
aaa
sbb
push
pop
jge
xchg
in
pop
mulb
cmp
iret
mov
mov
mov
jg
test
pop
mov
and
mov
mov
inc
mov
fcompl
xchg
arpl
fsts
xchg
loop
fmuls
xchg
imul
cmp
or
out
mov
xchg
outsb
call
lods
jb
mov
add
fstl
int
cmp
push
fldt
adc
jae
cmp
sbb
mov
sbb
std
xor
adc
popa
lds
int3
aam
or
cli
testl
pop
movsl
cmp
inc
bound
sahf
jae
je
xchg
push
jl
jbe
je
mov
xchg
rcrb
inc
aam
mov
movsl
jnp
pop
mov
fcomp
fldz
je
cmp
inc
mov
movsb
int
sub
and
cmpb
gs
cmp
add
pop
sbb
shll
insb
or
xlat
cwtl
and
add
pop
rorl
je
mov
cmp
addl
xchg
enter
subb
sbb
mov
cli
dec
ficoml
sti
push
arpl
aam
adc
rep
fcoms
loop
and
out
mov
cmp
fistpl
cwtl
mov
fcoml
in
xchg
shll
mov
loop
test
das
pop
lret
sbb
pop
add
enter
aam
jo
cli
repnz
movsl
xchg
rcrl
cmp
mov
fnsave
pushw
push
je
xlat
out
fs
fcompl
dec
xlat
in
push
call
and
jmp
dec
jp
pop
xchg
jg
inc
inc
loop
adc
and
pusha
lds
and
and
aaa
popa
mov
cltd
push
into
inc
lret
mov
xchg
fsts
pop
call
shr
int
movsl
icebp
pop
inc
icebp
jb
mov
jp
xchg
jo
loop
mov
int3
or
sbb
inc
loop
bound
and
xchg
out
es
out
int3
leave
mov
cmp
and
and
inc
push
inc
and
push
xchg
or
inc
cwtl
and
xor
jns
into
jg
cwtl
push
cmp
dec
or
je
stos
jo
es
mov
inc
jmp
jp
jg
jo
pop
orl
lods
jae
stos
je
jl
cmp
push
sbb
xor
inc
outsl
imul
enter
mov
aam
shrl
and
pop
sbb
int3
loopne
test
test
sub
mov
repnz
mov
xchg
pop
push
cmp
mov
push
and
in
popa
inc
sub
jne
and
gs
clc
or
daa
push
mov
push
inc
je
cmp
ljmp
sbb
out
mov
xchg
fdivs
int3
mov
xchg
fisubs
shrl
stos
nop
fistpl
into
jo
cmpsl
jg
push
popa
mov
sarl
loopne
sbb
inc
js
adc
dec
pop
sbb
call
push
and
inc
fisttpll
nop
popa
popa
lcall
ftst
out
mov
adcb
mov
inc
xor
cwtl
jecxz
fprem
pop
mov
loopne
ljmp
cmp
dec
cltd
iret
sub
or
jg
or
mov
call
movb
test
xor
lret
jo
int3
and
jmp
in
jo
gs
xor
cmp
enter
es
je
inc
mov
addr16
inc
repnz
xor
dec
xor
lods
xchg
or
push
rclb
fwait
sarl
cmc
pushf
dec
sbb
imul
sub
cmp
mov
pop
fs
push
dec
fnstsw
stc
pop
cmp
jl
mov
jo,pt
mov
movsl
movsb
cmpb
stos
adc
jl
or
scas
imul
add
movsb
rclb
cmp
mov
in
movsl
ss
cmc
sbb
ret
in
fdivrs
hlt
jne
mov
les
pop
inc
jl
mov
push
cmp
out
in
mov
pop
adc
fwait
pop
xchg
jo
mov
xchg
fcomip
cmpsb
dec
out
xor
xor
pop
aas
pop
mov
rcl
into
js
xchg
out
sub
bound
xchg
call
leave
pop
movsb
sub
daa
testb
mov
dec
jp
stos
popa
into
std
pop
lcall
mov
data16
xor
jne
das
imul
popa
in
negl
test
call
pop
fs
ficomps
ljmp
push
mov
mov
cld
clc
fs
jbe
loope
jo
test
fbstp
add
mov
dec
popa
les
push
daa
mov
pop
pushf
iret
sub
in
mov
cmp
xor
inc
ljmp
dec
stc
sti
mov
xchg
repnz
addr16
cmp
ja
push
mov
or
xchg
loope
roll
xor
inc
push
push
cmp
pop
mov
jg
cld
or
or
inc
jnp
loope
cld
mov
dec
int3
stos
push
js
outsl
pop
lcall
cmc
xor
dec
mov
push
jg
aam
xor
popf
leave
inc
cmp
bnd
mov
mov
xchg
push
scas
mov
inc
das
sub
xchg
roll
sub
shl
dec
or
mov
mov
ror
dec
sub
bound
mov
mov
dec
pop
dec
push
les
pop
add
insl
dec
jae
iret
xor
les
sahf
call
inc
arpl
pop
mov
add
cmp
dec
lea
xor
mov
hlt
sarl
ljmp
mov
mov
in
xchg
lods
pop
in
leave
add
cwtl
jle
cmp
sbb
lahf
and
push
loope
rorb
dec
addr16
dec
sahf
sub
push
stc
pop
mov
inc
mov
repnz
adc
ret
push
fwait
rcr
push
mov
fwait
add
loope
or
fs
popa
cwtl
fidivl
in
out
jae
loope
mov
in
scas
gs
and
fdivp
ljmp
loop
inc
xchg
cmp
add
aam
pop
pop
loopne
cli
pop
lods
pop
or
add
dec
adc
jnp
xor
push
push
scas
frstor
pop
inc
mov
push
nop
aam
dec
add
lods
push
test
inc
cmpsb
punpckhdq
popa
dec
push
pop
xor
jnp
pop
leave
mov
push
test
mov
mov
sub
lahf
mov
mov
adc
and
fucomip
push
fiadds
xor
push
jo
mov
in
dec
iret
add
clc
push
bound
lret
test
push
push
mov
outsl
arpl
into
mov
and
in
negb
lcall
lret
in
dec
sbb
test
ret
and
mov
les
ljmp
sub
or
adc
push
xor
test
add
cmpsb
mov
addb
icebp
sahf
clc
in
or
lahf
jo
sbb
test
jg
test
dec
ret
inc
imul
push
aas
add
jb
lock
dec
es
subb
jo
xchg
enter
js
lcall
push
leave
cs
mov
xor
ja
inc
in
cmp
cmp
mov
lods
cmp
add
les
sahf
jno
movsb
lcall
cld
les
fiaddl
cmpsl
enter
jne
jle
shrb
add
fwait
xchg
mov
shlb
sarb
push
dec
adc
xchg
into
andb
shll
pop
inc
jmp
inc
pushf
lahf
mov
shl
adc
addb
or
add
loope
sarl
mov
xchg
enter
xchg
addl
xchg
jae
push
mov
push
mov
insb
repz
gs
xchg
mov
mov
int
loope
jecxz
xchg
scas
cltd
jo
lods
push
jecxz
cmp
xchg
jnp
iret
imul
pop
outsl
xlat
cltd
sub
push
fsubrs
push
mov
dec
push
jo
int3
adc
push
push
inc
mov
pop
pushf
push
outsl
sub
or
mov
pop
sbb
xchg
xor
fs
andb
lret
adc
push
leave
mov
bound
jb
mov
loop
adc
shlb
ficompl
lea
pop
arpl
sub
shrl
lods
push
sub
pop
incb
ret
insb
es
into
jbe
sbb
aam
push
inc
fdivrs
jge
mov
divl
jae
clc
pop
arpl
pop
ds
test
ss
fldenv
push
dec
test
jno
jnp
jbe
push
xor
or
aaa
mov
dec
mov
mov
jle
jne
cmp
cmp
xorb
mov
pop
iret
lods
arpl
pop
adc
int3
fwait
sub
aam
push
and
sbb
out
popf
inc
cmp
jp
pusha
into
mov
xchg
pop
popa
out
pusha
dec
xor
in
aaa
enter
sbb
push
lds
mov
xchg
ret
add
mov
int3
push
jnp
cwtl
mov
jle
cmpsl
xchg
adc
xor
pop
add
pop
jns
jge
add
jge
in
loop
lods
int3
pop
cltd
mov
pop
push
sbb
lahf
jo
pop
fwait
aas
stos
or
mov
mov
mov
ret
push
jge
and
repnz
xchg
imul
or
scas
mov
mov
mov
and
fwait
dec
jae
in
repz
push
repz
shl
xor
fwait
popf
adc
lcall
stos
ja
fsts
jg
push
lret
hlt
inc
cmp
mov
dec
jo
test
push
les
sarb
cwtl
test
int3
lds
mov
mov
inc
stc
push
inc
jno
lds
sbbl
jecxz
leave
dec
mov
icebp
cmp
lcall
pop
dec
dec
adc
cltd
data16
xchg
out
pop
call
dec
leave
dec
in
cli
sbb
xchg
or
add
cmp
arpl
pop
test
xchg
test
pop
pop
je
jne
jbe
push
js
imul
inc
in
push
pop
jnp
data16
call
ret
mov
or
pop
jp
mov
adc
test
sahf
push
frstor
push
xchg
into
jl
repnz
sbb
fadds
shld
ja
push
daa
test
shll
rcl
lcall
jp
or
jg
xchg
jno
sub
movsb
xchg
xor
inc
xchg
in
fstp
push
push
clc
push
lds
push
rcrb
ja
jmp
out
push
push
fdivr
cmp
jns
mov
jno
xor
mov
cltd
bound
cwtl
aam
sbb
popa
scas
aad
jns
mov
sbb
mov
jb
cmp
and
shlb
jg
test
in
jne
cmpsb
test
xchg
push
push
fisubl
xchg
imul
push
push
dec
pop
aad
cmpsb
jae
lret
icebp
adc
push
icebp
lock
mov
sub
and
icebp
out
imul
mov
jno
cmp
dec
imulb
adc
bound
arpl
ja
cmp
xor
fisttpll
and
sub
cmpsl
push
mov
sub
nop
ds
scas
ljmp
and
in
mov
adc
fwait
imul
xor
popa
push
dec
jns
push
lods
pop
ret
or
jp
jl
popf
jg
cli
pop
imul
lods
mov
mov
into
cltd
dec
mov
fcomps
imul
mov
inc
jnp
xchg
test
inc
dec
pop
adc
aas
xor
pop
cmp
jl
xlat
stos
xor
fcomi
jg
cmpsl
jmp
out
daa
jbe
xchg
outsb
mov
mov
leave
jb
filds
stos
jl
adc
idivl
pushf
lds
inc
jne
xor
lods
je
in
inc
sbb
xchg
mov
mull
in
mov
and
mov
cmp
popa
pop
pop
inc
icebp
addr16
push
sarl
push
lds
shlb
dec
push
mov
bound
or
fidivrl
pop
or
or
int
inc
stos
dec
cmpl
popa
or
jecxz
cmp
movsl
jg
push
iret
lahf
xchg
cli
jns
xchg
xor
fwait
mov
stos
cwtl
pop
cmp
jns
movq
into
les
popa
popf
inc
add
pop
mov
adc
sub
sbb
int
ljmp
jne
je
cmpsl
pop
fs
push
dec
adc
push
fists
data16
scas
incb
loopne
mov
stos
lock
sbb
inc
fsts
push
addl
mov
mov
dec
xchg
mov
jb
push
mov
daa
lahf
mov
int
cwtl
push
pushf
mov
mov
push
sbb
jmp
mov
dec
cmp
mov
mov
lds
inc
adc
gs
fldl
sbb
mov
pop
xchg
push
or
daa
cmp
cmp
adc
xor
sbb
xchg
call
mov
xlat
scas
mov
in
fsts
lcall
push
ljmp
or
pop
mov
push
sbb
xchg
jo
or
fwait
cli
scas
ljmp
aaa
dec
iret
jo
cmpsl
push
and
mov
jnp
or
xchg
push
add
mov
push
sbb
mov
loopne
jge
shrl
fs
outsl
aas
andl
ds
and
push
cli
orb
pop
call
stc
call
push
dec
dec
dec
mov
xchg
adc
xor
push
fsts
cmp
xor
inc
mov
lea
xchg
sbb
insb
pop
xchg
cmp
stc
das
stos
push
pop
je
adc
dec
cmp
mov
xor
int
lea
dec
ret
cmp
pop
add
push
jo
sbb
arpl
mov
or
dec
and
cltd
push
in
xor
in
shrb
leave
out
mov
jge
jb
je
mov
mov
frstor
insl
mov
dec
cld
je
int3
and
les
add
fdivrs
adc
je
add
jnp
jb
dec
cmpsl
sub
lcall
sbb
sub
jne
inc
std
jge
pop
fwait
std
sbb
sarb
addl
lahf
add
mov
in
cmp
aas
icebp
stc
fcoms
stos
int
mov
mov
inc
jo
push
pop
dec
fs
push
lret
in
add
shlb
lahf
pop
fisubl
aad
pop
loope
loope
cmp
je
jno
add
and
popf
add
in
es
in
lds
inc
mov
xchg
cmp
fldcw
jl
pop
pop
in
fcmovnbe
js
add
nop
mov
xchg
pop
pop
fsts
mov
nop
int3
sub
and
push
inc
lods
adc
inc
mov
movsl
adc
cli
rcll
inc
inc
and
fldcw
andl
nop
mov
jo
pop
push
sub
xor
and
test
add
push
sbbb
and
test
jno
roll
inc
popf
fs
push
cmpsl
sbb
out
into
jp
cwtl
push
jl
xor
pop
cld
orb
es
pop
push
scas
loope
pop
push
pop
push
pop
je
popf
xchg
in
pop
xchg
push
and
cmp
cmp
xor
out
loope
andl
iret
test
and
push
jle
sbb
or
out
pop
xor
mov
cs
nop
popl
int
push
in
repnz
mov
ja
mov
outsl
sahf
adc
cmp
push
shrl
andl
xchg
and
fwait
adc
sti
int
inc
pushw
jne
daa
fwait
sahf
xchg
pop
push
ss
jns
push
add
lods
lret
cmp
dec
call
adcl
push
jb
pop
cwtl
imul
int
push
jl
jb
stos
add
aaa
jl
pop
iret
arpl
andb
mov
inc
add
adcl
insb
fcompl
jge
daa
mov
xchg
fwait
mov
fdivs
pop
pop
jecxz
aam
dec
cmp
push
fs
push
pop
push
movsl
mov
les
outsl
mov
xor
push
les
sahf
mov
xchg
push
push
sbb
in
outsb
inc
mov
sub
int3
idivb
or
mov
dec
dec
testl
leave
mov
cmp
pop
lahf
pop
xor
insl
push
loopne
jge
xchg
mov
pop
push
pop
mov
pop
pop
push
and
xchg
pop
xchg
xor
add
std
or
jnp
and
mov
lea
push
out
pop
shll
imul
pop
xor
lcall
push
jns
enter
int
hlt
jns
movsb
xor
mov
movsl
cmpsl
out
popa
push
mov
xchg
jle
inc
fs
adc
fnsave
push
pop
jns
jbe
scas
test
xchg
xlat
mov
pop
push
fistpl
jge
fstl
mov
pop
fdivrp
pushf
jae
gs
fst
cmp
in
sub
rcll
jbe
sbb
push
fs
cmpsb
jne
pushw
and
ret
pop
dec
mov
pop
jle
scas
fcoms
imul
jg
mov
les
cmc
pop
push
data16
icebp
inc
lds
cli
shll
xchg
stos
jg
stc
xlat
lds
into
fimull
mov
pop
jo
dec
or
repz
neg
cmp
mov
push
pop
jb
add
addr16
mov
movb
jo
push
mov
movsb
xor
sti
mov
ret
or
pop
aad
cmpsl
xor
xchg
push
mov
sbb
dec
aas
and
xor
out
cmc
dec
add
stos
lods
popa
push
popa
cmpsl
push
inc
shrl
or
adc
push
es
imul
push
sub
addr16
mov
xor
repz
mov
inc
add
aam
movsb
sarl
mov
and
add
ljmp
subl
stc
mov
push
mov
mov
cmpsl
scas
pushf
int3
rcl
data16
push
arpl
jge
mov
fwait
std
popf
dec
popa
cltd
and
mov
fnstcw
ja
cltd
fstpl
fs
pop
cmp
out
inc
and
das
bound
dec
sbb
pop
push
cmpsb
dec
leave
adc
aad
xchg
adc
scas
mov
rolb
cmp
daa
push
cld
lods
push
addr16
dec
mov
jo
in
aam
stos
push
fcoms
or
ja
adc
rcrl
cmp
push
dec
orl
adc
mov
pop
push
rolb
xchg
out
jns
dec
pop
sahf
push
pop
les
jle
sbb
clc
pop
xchg
lock
jb
xchg
push
and
orb
popa
ret
mov
inc
dec
fistps
dec
fwait
xor
stos
adc
popa
les
movsl
mov
pop
adc
xor
sarl
xor
mull
movsl
lcall
dec
dec
jb
movsb
xchg
inc
cmc
flds
shrl
rcrb
xchg
xchg
xorl
inc
cli
inc
ja
inc
ja
jo
sub
pop
repnz
adc
inc
jp
iret
mov
addr16
movsb
or
pop
jl
inc
je
jo
or
pop
add
aad
ret
jl
pop
and
xor
fs
orb
add
jns
data16
subl
cmp
movb
mov
sbb
jns
in
xchg
pop
mov
js
cs
dec
mov
lcall
mov
pop
mov
add
cmp
cs
xchg
call
mov
cmpsb
das
lret
cmp
test
mov
js
push
cmp
dec
repz
jge
aaa
in
ds
sti
jb
cltd
and
out
scas
sbb
add
and
ret
adc
stos
dec
lock
mov
pop
in
pop
sbb
das
pop
bound
cltd
xor
scas
add
xor
mov
pop
mov
push
ja
mov
push
push
mov
push
cmp
mov
mov
mov
sahf
sub
pop
ror
xchg
insl
in
mov
jmp
and
out
jge
and
push
clc
fstpt
bnd
std
inc
std
sub
fs
in
or
inc
popa
cli
push
popa
jp
rcll
fs
mov
jle
and
cmp
push
pop
addr16
in
mov
popa
mov
adc
test
push
call
jne
jno
jne
test
jecxz
push
cwtl
loope
fisubrl
dec
mov
popa
jp
mov
xchg
push
int3
sahf
pop
pop
aad
jge
loop
dec
and
loop
scas
test
cmpsl
stos
push
out
or
pop
push
fwait
lock
push
icebp
jge
push
cmp
das
fildl
mov
push
scas
insb
loopne
fxch
jo
adc
jp
js,pt
inc
mov
push
xor
xchg
sahf
cmp
and
unpcklps
fstps
mov
les
loop
jl
sub
nop
push
inc
into
pop
fwait
test
sub
sbb
int
call
and
in
sarl
xchg
inc
jle
scas
adc
add
ja
aas
sub
cmp
add
jno
sbbb
iret
inc
fisttpl
std
loop
loope
subl
pop
sahf
js
daa
sti
dec
xor
sbb
add
inc
das
push
cmp
clc
mov
lcall
add
cmp
insb
fs
lods
dec
daa
cmp
loop
clc
dec
sub
or
mov
in
int3
push
out
leave
jae
js
dec
in
inc
add
andl
xchg
push
frstor
jo
nop
sub
daa
push
dec
jo
mov
cltd
cld
add
ficompl
mov
mov
dec
fistpl
aad
push
add
sbb
sub
shl
sahf
xor
cmc
jo
cmp
in
dec
mov
lret
pop
pop
int3
insl
cmpsb
cmpsl
lock
mov
sbb
js
jno
lcall
stos
fisttpll
jae
imul
leave
xchg
jnp
and
pop
jmp
outsl
mov
popa
or
fldt
or
leave
pop
cmp
push
adc
mov
dec
sbb
add
and
adc
pop
pop
ds
dec
push
into
lods
push
cmp
cmpsl
das
mov
in
adc
test
loope
test
iret
xor
test
mov
stos
dec
mov
scas
bound
sarl
insb
popa
mov
roll
notb
je
pop
cmp
movsl
js
mov
push
rcl
test
push
sti
pop
and
jnp
push
int
pop
lcall
pop
pusha
pop
fldt
jnp
adc
cmp
push
adc
jns
js
mov
push
fisttpll
js
jno
popa
mov
cmp
call
fwait
shlb
mov
jmp
jo
or
mov
jbe
dec
lret
inc
lret
mov
jnp
pop
push
movsb
jl
jae
push
out
mov
rcl
add
int3
xchg
xchg
aas
sbbl
lcall
fstl
pop
mov
into
test
jnp
das
test
push
lret
and
mov
xchg
mov
hlt
mov
cmp
push
leave
cli
adc
dec
sub
xlat
jge
and
push
push
push
cltd
movsb
enter
popa
mov
dec
and
and
popa
ret
aaa
cmp
popf
jge
pop
int
pop
fisttpll
aam
in
or
push
mov
mov
ficomps
loop
pop
sub
into
dec
adc
in
sbb
je
push
push
xchg
and
mov
fs
dec
sarl
mov
add
fwait
lcall
push
adc
sahf
cmp
xor
mov
outsl
push
or
xchg
pop
and
rcll
pop
xlat
mov
push
mov
push
pop
les
cmpsl
je
enter
pop
fdivl
fldenv
in
lcall
pop
pushf
xchg
call
push
mov
pop
dec
rol
inc
adc
loope
es
jp
xchg
mov
dec
dec
push
pop
dec
pop
push
mov
dec
insl
cmpl
cmpl
push
pop
das
test
imul
xchg
popl
push
jb
test
jae
ret
or
xchg
test
ret
out
and
dec
pusha
cmpsb
frstor
js
lock
pop
push
or
push
aas
xchg
js
mov
loope
inc
pop
test
sub
inc
in
bound
orb
add
fnstenv
bound
aad
pop
cld
xor
jae
and
outsb
loope
es
int
gs
mov
pushf
sbb
jp
mov
lods
jp
adc
ja
or
shrl
into
add
aas
scas
pop
std
mov
dec
dec
xchg
test
cwtl
adc
sahf
test
fstl
mov
push
mov
addb
call
pop
loope
arpl
in
in
and
push
jnp
rorl
lds
jbe
jae
test
outsl
ja
jo
dec
dec
das
je
sub
cmp
inc
push
lret
sarl
push
stos
hlt
cmp
adc
bound
cmp
sbb
jg
iret
leave
popa
push
rcll
push
mov
scas
push
sbb
test
int
outsb
fldenv
iret
jle
xchg
xor
mov
out
sbb
jnp
out
loop
scas
dec
push
or
jne
cmp
mov
push
mov
push
clc
fstpl
outsl
imul
test
jge
push
fstps
push
xchg
cmpl
pop
sbb
jnp
mov
pop
push
ja
add
cmc
pop
jae
adc
les
cmp
lret
dec
rcrl
test
decb
dec
in
cwtl
fsubr
add
popa
ret
jbe
stc
rclb
push
mov
xchg
stos
repnz
popa
ror
pop
addr16
ficomps
mov
pop
lock
lcall
mov
mov
xchg
sbb
jnp
sbb
mov
sub
shll
dec
pop
cmp
ret
rcrb
pop
mov
mov
pusha
loopne
pop
inc
ficompl
fcoms
out
dec
scas
dec
bound
jmp
ljmp
cmp
scas
sbb
lahf
jo
lods
bound
lock
sahf
out
ret
sub
dec
mov
and
pop
nop
out
pop
push
push
mov
out
lock
mov
jmp
nop
mov
lahf
icebp
in
jb
and
or
sahf
or
shl
or
mov
out
sbb
push
out
pop
out
stos
ja
addb
pop
mov
dec
cmp
cli
test
push
cmpsl
mov
mov
insl
cmc
lock
mov
pop
jge
push
out
cltd
insb
or
mov
insl
cmpsb
daa
and
xlat
adc
mov
loopne
sbb
inc
pop
inc
mov
push
push
jne
and
adc
pop
jo
fst
daa
sarb
je
mov
mov
das
jo
xchg
push
fwait
lods
stos
adc
in
push
insl
xor
sahf
ss
jle
jns
addl
dec
xor
mov
sub
icebp
js
enter
mov
xchg
and
loope
mov
les
popa
mov
push
mov
lahf
rolb
outsb
sub
mov
iret
or
jne
adc
je
mov
cmp
icebp
imul
cmp
stos
jb
frstor
jmp
mov
imul
out
adc
inc
orb
xchg
lcall
mov
imul
or
setae
andl
pop
push
mov
fs
xchg
iret
aaa
movsb
into
push
xor
into
inc
push
scas
lods
out
mov
cwtl
push
mov
jnp
xchg
mov
cmp
dec
pop
jle
mov
test
subb
sahf
rolb
fsubs
fs
js
fstpt
rcl
push
fists
pop
jge
pop
pop
xchg
mov
mov
xchg
pop
xor
and
dec
and
gs
nop
dec
ror
mov
fs
enter
jle
push
fldt
pop
lea
movsb
data16
jo
les
mov
jecxz
sub
mov
mov
pop
push
mov
xlat
repnz
mov
mov
scas
fbld
insb
nop
cltd
sbb
adc
push
cld
out
xchg
iret
popa
cmc
push
inc
mov
mov
fnstenv
into
lods
mov
jnp
mov
outsl
pop
mov
mov
cmpsl
pop
xchg
insb
es
cmp
mov
repnz
flds
cwtl
jg
jae
mov
pop
je
xchg
daa
push
or
insb
pop
inc
adc
push
fisubl
aam
fs
push
mov
shlb
and
push
imul
jle
jp
jne
adc
lret
xchg
ret
pop
pop
and
scas
cmpsb
jmp
sahf
xchg
or
outsb
mov
shll
outsl
test
mov
or
mov
fcoml
pusha
les
lea
les
mov
pop
fldcw
xchg
cmpsb
mov
mov
rcl
xchg
push
andb
dec
xchg
and
xor
cmpsb
ljmp
push
and
pop
pop
sbb
push
pop
push
rorb
mov
repz
mov
mov
mov
xchg
test
sti
into
scas
xchg
rorl
inc
inc
iret
sub
jmp
rorl
ja
pop
int
sbb
mov
mov
cmp
mov
xor
add
xchg
imul
sbb
and
lods
cmc
or
cmp
add
fwait
pop
aaa
xchg
jp
mov
jb
xchg
xor
push
and
int3
sar
xchg
pop
and
adc
je
inc
icebp
arpl
bound
adcb
movsb
loope
icebp
adc
add
push
fisubs
aaa
ret
fcmovnbe
pop
frstor
js
subl
nop
and
lds
je
xchg
mov
lcall
cmpb
cmp
add
shr
cmpsb
xchg
scas
jbe
aam
outsl
leave
lds
popf
xchg
cmpsl
inc
pop
mov
mov
xchg
das
mov
jb
insl
fldt
shlb
sbbb
iret
arpl
lods
cmc
icebp
add
test
fwait
xchg
inc
test
call
loopne
mov
sarb
cmp
jp
pop
sbb
test
les
into
jl
popf
js
stos
xor
pop
cmpsb
test
mov
aas
int3
loop
sub
leave
and
jnp
adc
cltd
lcall
mov
fnstcw
mov
and
call
rclb
vsubpd
mov
lahf
fsts
dec
fldenv
arpl
popa
les
push
aas
shl
rcrl
xchg
cli
je
sti
clc
int3
sbb
cld
xchg
and
mov
call
jne
dec
nop
aad
scas
shufps
jecxz
pop
add
push
or
inc
xchg
sub
dec
mov
loope
stos
mov
jmp
int
pushf
out
push
dec
jne
pop
insb
push
cwtl
mov
mov
dec
push
xchg
out
incl
jbe
cmp
sbb
jne
xchg
les
aam
loope
sbb
pop
adcb
push
cmc
jb
push
divb
push
clc
cltd
test
stos
insb
cmp
xlat
in
mov
cmp
pop
sysret
inc
js
and
and
inc
sub
jb
popa
lods
aaa
and
jl
cmp
jg
dec
mov
jl
sbb
out
je
sti
cmp
scas
pop
xor
sbbl
hlt
pop
movb
imul
xchg
jno
outsl
jno
cmp
jle
enter
or
stos
in
ljmp
pop
cmp
into
subb
enter
popa
jne
dec
lds
pop
ja
dec
lds
stc
dec
int3
lahf
std
sbb
or
or
mov
pop
aas
into
out
cld
lret
xor
jl
or
push
xor
mov
push
sbb
adcl
lahf
popf
adc
jl
test
subl
push
es
jle
mov
pop
xchg
mov
jb
ror
sbb
aad
enter
sbb
pop
xor
ds
inc
add
sbb
fstpl
adc
mov
dec
or
repnz
out
cwtl
aas
sub
xchg
sub
mov
scas
stos
xor
mov
jne
lret
inc
jge
jg
adcl
loop
cmpsl
sbb
sbb
pop
decb
jl
shl
shl
shrb
xlat
lds
xchg
mov
fxam
cmpsb
adc
pop
mov
mov
into
in
dec
or
int
enter
sub
ja
cld
push
adc
add
inc
cmc
cwtl
jne
sbb
je
ret
lret
or
stos
je
ret
push
push
lahf
push
cmp
inc
cmpsl
shr
cmp
je
inc
pop
jne
iret
adc
pop
mov
lods
mov
xchg
mov
mov
into
cmp
jns
fdivrs
dec
loop
daa
and
push
jnp
imulb
xor
inc
cmpb
shll
pop
adc
ja
movsl
push
cmpl
jne
dec
sub
loop
lcall
sbb
push
and
cmp
inc
jg
push
test
rolb
mov
jmp
push
jp
xchg
loopne
lret
fwait
and
hlt
jnp
mov
pop
jbe
xorl
push
das
mov
pop
clc
xchg
test
jbe
andl
xchg
pop
push
mov
outsb
sbb
push
shlb
shll
sub
pop
outsb
push
push
mov
jb
adc
dec
dec
inc
call
test
add
cmpl
test
data16
jae
jns
js
push
pop
dec
xchg
ljmp
out
into
and
arpl
xor
dec
loop
mov
imul
ror
fiaddl
cmp
xlat
add
adc
mov
hlt
lahf
jns
or
pop
or
mov
sub
data16
adc
mov
adc
push
inc
jne
roll
fcmovu
lcall
sub
mov
es
scas
shl
pop
fs
push
mov
lods
aaa
repnz
lret
fstpl
sti
je
cmp
dec
test
and
call
in
mov
xor
leave
fs
in
push
adcb
scas
xor
fwait
xchg
cmp
data16
mov
mov
sbb
inc
loope
cmp
xchg
xchg
xlat
inc
icebp
mov
out
push
sub
pop
and
ds
inc
rol
fwait
xchg
pop
mov
mov
jnp
adc
jmp
mov
movsb
stos
stos
loopne
fstps
jnp
inc
cmp
push
cmp
idivb
orl
fiadds
add
mov
dec
mov
loope
sub
and
loope
push
call
filds
push
pushf
addb
xchg
cmp
cmp
js
or
popaw
or
sbb
bnd
dec
aaa
data16
inc
inc
addb
sbb
mov
lock
sbb
enter
cmp
cmc
sarb
les
mov
inc
or
mov
int3
mov
jmp
repnz
dec
sahf
push
and
mov
int
jns
xlat
shl
imul
pop
push
jl
fs
adc
sub
xlat
cwtl
jmp
out
inc
jne
mov
push
adc
xchg
dec
aas
push
data16
sbb
cmp
dec
cmp
lcall
xchg
push
mov
pop
lock
daa
inc
lds
or
fcoms
dec
mov
mov
pop
mov
jle
push
cmp
xchg
imul
push
test
push
cmp
xchg
inc
xchg
sbb
and
mov
out
pop
fldcw
dec
lcall
les
mov
pop
js
sbb
icebp
cmp
mov
jne
cs
pop
sbb
in
lods
mov
mov
adc
in
mov
lds
cmp
add
inc
mov
add
push
ffree
shll
and
cwtl
adc
xlat
add
repnz
jge
mov
cmpsl
fsubrl
out
cmp
pop
fptan
bound
je
cmpsl
dec
fnstsw
push
imul
lret
jno
pop
push
ds
enter
dec
and
test
or
xchg
push
and
add
add
test
cmp
imul
insl
fcoml
jne
cmpsl
stos
pop
icebp
and
and
je
or
leave
lahf
shl
mov
andl
fsts
sbb
sarb
xor
mov
pop
pop
outsb
mov
pop
mov
dec
dec
pop
or
lea
aam
or
inc
or
fwait
jmp
arpl
adc
aas
jecxz
xor
pop
lods
push
sbb
dec
mov
xchg
add
push
mov
les
sbb
dec
jmp
dec
stc
inc
lds
lods
sar
xor
orb
out
es
adc
xor
jle
gs
fstpl
push
sub
xchg
fldenv
pop
sbb
mov
inc
gs
test
or
nop
int
mov
test
int
ja
and
push
cltd
mov
push
rorl
mov
sbb
xchg
or
add
jp
nop
xchg
xchg
push
lock
les
mov
bound
cmp
fsts
mov
and
dec
xchg
ja
xor
xchg
dec
jo
dec
cld
cmc
and
gs
xlat
mov
fs
mov
jmp
stos
fwait
mov
sbb
dec
dec
lds
pop
xchg
nop
int3
es
cmp
sub
sbb
imul
je
jo
inc
aad
adc
dec
mov
pop
xchg
inc
es
inc
in
sti
stc
xor
mov
addr16
jno
orb
int3
out
xor
pop
jecxz
add
ja
xchg
xchg
pop
mov
cmp
cmpsb
or
or
push
inc
pushf
cmpsb
mov
sub
dec
push
lds
xchg
or
rclb
jne
mov
lea
imul
jge
jo
lcall
lock
push
sub
cld
lods
mov
xchg
loope
pop
push
jmp
daa
fisttps
mov
mov
daa
je
cmp
mov
imul
punpckhbw
js
cmp
xchg
leave
push
es
cmp
in
adc
mov
lods
loope
popa
mov
sbb
sub
cmp
or
mov
cmp
fldcw
movsl
pop
inc
movsl
jp
jmp
pop
nopl
fidivrs
repz
mov
jno
fsts
int3
mov
fwait
mov
jle
sbb
jo
popf
movsl
dec
adcb
adc
xchg
pop
mov
cs
cmp
mov
dec
pop
push
cmp
int
aad
sbb
sbb
mov
mov
in
xchg
incl
mov
dec
popa
push
sbb
pop
arpl
xchg
push
cmp
sub
mov
sbb
out
test
adc
push
rcr
test
lods
pop
stc
mov
dec
pop
fisubrs
inc
mov
pop
cmp
xorl
dec
arpl
clc
cmpsl
dec
lahf
repz
mov
dec
xchg
cs
sub
gs
jns
cmpsl
fwait
repz
inc
xchg
out
jecxz
sbb
pop
cmc
dec
jno
sbb
cld
sub
cmc
xchg
sbb
push
jbe
and
loop
pop
jo
scas
push
rclb
sub
add
ret
xor
mov
pop
dec
jns
sahf
and
jb
dec
nop
out
cltd
cmpsl
mov
iret
jno
push
jno
jo
into
arpl
dec
cmp
daa
jno
inc
in
pop
ret
fcom
or
cmc
pop
push
int
dec
cwtl
test
jp
cmp
pop
fmul
loope
mov
popa
jb
fcoms
fidivrl
cli
outsb
pop
xchg
push
xchg
adc
push
aaa
lds
push
pop
inc
movsl
pop
fwait
addr16
mov
inc
pop
and
das
xchg
push
out
mov
sbb
arpl
aas
sub
roll
xchg
outsl
fiadds
jl
push
adc
cmp
mov
mov
ret
lahf
and
dec
lds
cmpxchg
push
jnp
shlb
dec
cltd
fnstsw
lret
daa
pop
and
scas
mov
arpl
lds
fdivrs
ljmp
cld
cli
negl
push
pop
pop
jae
or
call
cmpsl
jb
pop
xor
rcll
fistl
in
mov
sbb
mov
jns
sub
mov
fidivs
cmp
pop
fidivs
daa
push
rcll
mov
dec
aaa
repz
dec
mov
push
jns
test
inc
jo
jbe
popfw
repnz
in
jb
sbb
pop
jae
insb
ds
cmp
xchg
or
sbb
lods
dec
sub
daa
xchg
pushf
ja
hlt
mov
mov
int3
cmp
pop
mov
loope
xchg
mov
and
mov
pop
xchg
pop
test
lcall
jo
jae
jle
imul
enter
mov
subl
pop
lcall
bound
lahf
push
mov
insl
mov
xchg
pop
push
push
jp
fabs
jle
cli
fwait
push
andb
into
pop
jbe
iret
push
push
arpl
add
sbb
ds
lea
cmp
daa
daa
and
inc
imul
addb
sub
sub
xchg
ret
enter
pop
dec
cmp
cltd
cmpsl
in
mov
jnp
rcr
pop
sbbl
out
jl
sub
fisttpll
mov
cmpsb
lods
xchg
sti
mov
das
sbbl
push
fadd
xchg
insb
cmp
lea
cmc
inc
loopne
add
pop
lahf
push
arpl
pop
cmp
mov
push
ja
pop
and
mov
lds
call
scas
push
icebp
rcrl
fnsave
cmp
lock
loope
cmp
push
es
in
dec
jns
adc
and
mov
call
cmp
jl
int3
push
popf
and
dec
jb
cmp
stc
jns
jno
jl
pusha
add
subb
jo
inc
fwait
cmp
push
adc
jmp
repnz
nop
jp
or
xchg
jb
xchg
negb
fstps
movsb
ror
fs
test
lds
scas
cmp
sbb
rcll
icebp
or
pop
cmp
sub
cmp
jnp
jmp
cwtl
mov
out
cli
and
pusha
ret
sub
out
inc
pop
pop
les
mov
lea
jg
pop
dec
daa
jge
cmp
push
add
les
leave
fwait
arpl
jo
pop
stos
orl
bound
lods
pop
imul
outsb
xchg
pop
aas
sub
cmp
idivb
inc
dec
pop
call
into
mov
cmpsl
insb
push
xor
adc
cwtl
ret
push
loopne
sahf
insl
mov
mov
mov
push
fldt
lods
xor
lahf
mov
mov
jae
pop
imul
gs
bound
mov
loopne
addr16
cmp
rcr
pop
pop
test
mov
push
daa
sbb
cmp
pop
fbstp
dec
pop
lock
cmp
jae
xchg
inc
cltd
repnz
push
jbe
leave
push
pushl
jge
cmpsl
cmpsl
or
enter
add
inc
test
or
mov
ja
aad
cwtl
jg
jne
adc
fidivrs
movsb
sahf
xor
enter
stos
inc
loope
add
pop
push
lds
adc
cmpsb
pop
fs
inc
xchg
cmp
int3
jg
insl
inc
add
in
jne
adcl
dec
xchg
and
sti
xor
test
mov
repz
loope
sarb
jne
push
lcall
dec
sub
push
lea
int
jg
or
dec
je
cli
std
or
jns
sub
jbe
les
das
push
dec
or
jo
or
rcl
dec
jno
loopne
inc
ret
shll
loope
outsl
test
xchg
mov
mov
sbb
pop
adc
lahf
ret
lds
mov
ficoml
push
mov
pop
mov
rol
aad
hlt
inc
add
adc
inc
enter
fimull
push
pop
ret
inc
fdivp
out
push
xchg
sbb
jno
out
xchg
pop
dec
ficoml
pop
xor
outsb
adc
bound
push
adc
fs
add
fdivrs
pop
cmp
das
xor
pop
lea
adc
jmp
daa
jo
pop
sub
fs
addl
lods
mov
jo
shrb
xchg
dec
pop
out
aad
adc
push
mov
add
sahf
or
nop
std
bound
in
mov
pop
jb
aad
mov
dec
sahf
jnp
mov
out
nop
insb
les
mov
mov
jo
dec
pop
jl
push
repz
movsl
push
sahf
mov
nop
dec
xchg
bound
mov
cmp
pop
and
mov
ds
and
je
cld
jne
iret
pop
cmp
mov
mov
mov
adc
and
jle
xchg
ljmp
mov
sbb
adc
jl
mov
dec
mov
pop
mov
lret
stc
in
popa
les
pushf
fdivrl
fistl
in
repnz
inc
push
mov
ja
imul
dec
fidivrl
cli
cmp
pop
cltd
in
cltd
and
jbe
je
fs
jge
icebp
xchg
mov
sbb
lea
repnz
insl
push
rep
enter
jg
jl
mov
cmp
xchg
fldl
mov
jle
or
mov
movsb
loop
outsl
dec
jmp
xchg
mov
jo
dec
stos
mov
iret
aaa
mov
dec
sbb
loop
into
mov
xor
in
aaa
inc
int
outsl
cmp
js
int3
in
das
hlt
sub
sbb
add
popf
sub
mov
mov
sbb
xorl
aad
ja
dec
or
aas
loop
sti
add
lods
cli
add
cmc
bound
inc
adc
inc
test
sbb
push
cli
cmp
shrl
mov
sbbl
call
pop
push
sbb
dec
dec
push
js
and
inc
jp
jns
jp
adc
das
sub
aad
sub
mov
jl
pop
and
sahf
cmp
cmp
mov
les
pop
mov
sti
mov
or
into
mov
mov
ja
dec
jnp
mov
dec
jbe
push
imul
xor
lea
cmp
aam
cmpsb
push
cmp
push
jb
mov
sub
addr16
insb
pop
fucomp
xchg
mov
mov
popf
push
push
push
pop
fdivr
loope
pop
mov
push
push
xchg
mov
jnp
or
mov
ja
iret
in
adc
fstpl
jbe
inc
shll
jns
jl
sahf
je
fildl
scas
stos
dec
out
lods
xchg
cwtl
pop
xchg
mov
xchg
xor
lahf
ljmp
sbb
mov
jge
inc
xchg
mov
insb
mov
lret
cs
xchg
and
vmwrite
push
test
jle
cmpsb
jae
xchg
xor
xor
test
les
mov
outsb
popa
movsb
fxam
lcall
mov
and
or
push
or
addr16
fstl
in
icebp
jo
jo
push
adc
xor
xchg
lret
sbb
pop
or
rcrl
sbb
adc
int
sti
imul
adc
add
or
nop
lret
cmp
fnstenv
ret
mov
dec
and
cmp
sbb
cmp
pop
into
inc
adc
dec
push
fldenv
mov
nop
gs
mov
mov
mov
pushf
mov
mov
outsb
sub
pushf
cmpl
pop
and
adc
xor
outsl
aam
adc
in
xchg
mov
sarb
push
mov
sub
push
pop
push
xor
mov
mov
adc
insl
inc
push
jne
xchg
jo
out
in
mov
fldt
stos
adc
push
pop
aad
adc
int
lock
add
arpl
out
outsl
out
cld
mov
jl
shrl
mov
insb
push
shlb
mov
jmp
pushf
in
pop
fsubrp
shrb
cmc
scas
fdivl
imul
push
gs
addl
xchg
xor
shlb
mov
sbb
bound
fnstsw
pop
pop
sub
fneni(8087
dec
push
and
adc
int
ffree
pop
call
sti
xchg
jl
insb
jne
cmp
adc
jg
cmp
xchg
fstpt
in
xchg
pop
js
mov
jne
mov
cmc
pop
jno
xchg
dec
mov
mov
in
movsl
movsl
dec
xor
aad
push
dec
cs
jecxz
jne
inc
add
jecxz
inc
pusha
loopne
insl
iret
lcall
lods
add
mov
cli
cmpsl
aas
shlb
insl
loopne
pop
stos
mov
pop
xchg
inc
fnstcw
sbb
and
in
je
inc
movsb
dec
arpl
jmp
mov
jno
inc
adc
fnstcw
mov
mov
lods
xchg
pusha
dec
pop
and
mov
push
int
inc
xchg
adc
lock
out
mov
fcmovne
shld
fadd
dec
pop
mov
ja
mov
inc
loop
lcall
int
or
sbb
or
pop
pop
fisubrl
dec
and
int
mov
fistpl
std
insl
xor
mov
rcrb
ret
test
xchg
fs
fldcw
orb
cltd
dec
mov
inc
jmp
arpl
xor
and
pushf
je
add
mov
and
lea
sbb
test
iret
push
fstpt
dec
jmp
and
or
jne
sbb
mov
sub
push
push
fwait
daa
adc
lods
pop
jg
push
ljmp
and
in
push
aam
sbb
inc
sub
imul
xor
aad
and
xor
in
loopne
jb
dec
add
push
out
mov
test
scas
cli
hlt
adc
out
mov
inc
fs
lock
mov
insb
push
out
dec
add
lock
movsl
loop
das
jns
lods
lret
xlat
sahf
xlat
je
sbb
push
popf
bound
pop
adc
mov
sbb
adc
sub
mov
dec
stos
xchg
push
sbb
jnp
jmp
add
pop
data16
jnp
sbb
loop
xchg
hlt
int3
or
fildl
lods
jnp
adc
scas
dec
mov
call
xchg
jl
cmp
leave
sahf
dec
mov
repnz
push
dec
pop
fcomip
in
dec
repnz
dec
jge
add
cwtl
dec
sub
rcr
cmp
push
out
movsb
scas
in
int
xchg
add
jb
or
xchg
das
divb
std
mov
add
clc
idivl
xchg
test
imul
mov
cs
outsl
mov
mov
mov
mov
dec
sti
mov
jge
das
adcb
adc
iret
je
jo
sti
sbb
push
icebp
pop
xor
xor
mov
fdivl
mov
xchg
out
push
and
cmp
fldcw
add
jb
xchg
ror
loopne
iret
jne
mov
in
aaa
ficoml
pop
popf
and
xchg
xor
loopne
or
ret
and
sub
xor
push
cmp
mov
sbb
lds
xchg
mov
and
cmp
jns
xchg
xlat
in
popf
pushl
dec
hlt
cmp
add
outsb
daa
xor
fdivrp
dec
xlat
xchg
clc
arpl
and
stc
subl
test
cmp
adc
and
dec
loop
cltd
jns
cmp
mulb
or
dec
ljmp
popl
mov
fisttpl
mov
pop
outsb
mov
scas
sub
xchg
pop
mov
cmp
add
xor
jno
cmp
daa
outsb
xchg
outsl
or
mov
iret
nop
sbb
adcl
jmp
pop
jg
pop
cs
stos
lods
fistl
test
mov
fmuls
js
ret
cwtl
shll
cwtl
pop
and
sbb
add
mov
dec
int
xchg
lds
ret
push
mov
pop
ljmp
jns
xor
cmpsb
insb
mull
mov
orb
in
xchg
sub
lods
jno
mov
jbe
fs
sub
bound
in
paddq
sub
sahf
insb
dec
pop
sub
pushf
cmp
pop
std
fwait
push
loope
and
pop
andl
lds
pop
xchg
xchg
and
fucom
inc
movsb
iret
aaa
je
dec
fs
sbb
jo
mov
add
in
dec
addr16
and
ja
outsl
lea
bound
dec
xor
cmp
mov
into
xabort
fistl
jb
inc
sbb
jecxz
ljmp
push
and
fucom
mov
or
push
cmp
and
add
sarl
js
or
jmp
pusha
cmpsb
mov
or
inc
jmp
daa
test
loope
pop
sbb
mov
lea
loopne
mov
shrb
push
pop
adc
in
push
sbb
shlb
mov
repz
andl
fdivl
cmp
mov
mov
sub
aad
mov
jnp
shl
js
or
cmp
and
lahf
leave
sahf
adc
pop
cmc
cmp
lds
adc
mov
xchg
and
xor
fcmovbe
repz
mov
js
mov
push
mov
fcomip
scas
xchg
cmp
mov
jle
rolb
aaa
insl
movsl
adc
and
int
jle
sub
clc
xchg
mov
mov
mov
pop
or
mov
push
dec
cltd
leave
lahf
jle
popf
add
negb
fidivrs
out
lds
jge
in
push
push
mov
sbb
sub
push
sbb
mov
arpl
or
fcmovb
scas
ss
movsb
insb
pop
les
mov
jp
test
xchg
je
mov
roll
arpl
adc
les
sbb
push
rorb
stc
and
in
or
jo
add
push
loop
test
or
mov
daa
loopne
xor
and
cmp
sbb
mov
xchg
daa
push
ja
and
mov
lahf
pushl
or
rcrl
cmp
xor
sub
cmp
push
ljmp
add
cmp
subl
fists
ss
lret
jns
iret
add
stc
sbb
jle
je
jg
daa
sti
call
xchg
loop
lcall
pop
scas
dec
mov
and
dec
repnz
cmc
mov
push
lcall
test
jno
pop
sub
jnp
mov
fisttpll
scas
sbb
and
pop
lock
xor
sub
fnstsw
inc
outsl
xchg
cmc
dec
pop
mov
dec
push
sbb
insl
push
fistpl
inc
xchg
cmp
js
nop
in
pop
mov
dec
mov
movsb
push
imul
fdivl
cmp
std
clc
push
aad
add
std
and
pop
nop
mov
pop
jmp
cmc
arpl
cmp
call
loope
cmp
js
lds
xor
insb
cltd
ret
stos
bound
mov
arpl
orl
fwait
xor
lods
jnp
pop
inc
mov
in
iret
int
les
vcmpps
sbb
push
lcall
push
or
xor
les
fdivr
pop
cmpb
pop
pop
mov
jae
test
jecxz
cmp
inc
loope
and
mul
dec
cmp
mov
imul
clc
fildll
mov
movsl
mov
jbe
push
adc
sub
dec
pop
inc
xor
dec
fsubrp
arpl
fcomps
cmp
inc
jg
bound
cmpsl
push
hlt
out
loop
dec
xor
mov
in
int
cmpsl
inc
std
lcall
cmc
jl
inc
add
sub
mov
cwtl
data16
xchg
lods
andb
jb
adc
dec
cmc
jne
push
es
clc
fwait
shrl
sub
sbbl
xchg
jae
xchg
cltd
mov
jno
sub
mov
cmp
cmp
jmp
or
lods
or
mov
loopne
jmp
mov
enter
cmp
lcall
mov
loope
push
stos
mov
iret
divl
or
dec
dec
and
cwtl
mov
lcall
pusha
dec
mov
push
addr16
int3
imul
hlt
adc
mov
pop
stos
pushl
rcll
cmpsl
movsl
sarl
enter
outsl
data16
fs
xchg
adc
fnstenv
repnz
js
movsl
das
in
xor
fldenv
pop
or
movsb
push
cmp
loop
mov
mov
pop
or
int
pop
jnp
ss
xchg
iret
sti
mov
jb
cwtl
call
out
repz
popa
lds
mov
addr16
int
and
push
ret
insb
sbb
mov
fisubl
or
mov
xchg
cmp
fidivrl
cmp
aas
orb
insl
repnz
das
leave
mov
dec
dec
xchg
mov
pop
mov
pop
into
imul
dec
inc
fwait
jnp
xchg
lret
xchg
fisubl
cmp
mov
mov
sub
jecxz
pop
mov
lds
in
add
dec
inc
ljmp
fistpl
jp
imul
int
push
mov
pop
outsl
loopne
xchg
jne
xor
bound
and
popa
sahf
push
mov
jno
mov
lods
and
pop
loope
push
cmpsb
inc
pop
cmp
adc
dec
cmpsl
not
pop
sahf
inc
adc
arpl
adc
push
xchg
mov
mov
mov
enter
ss
pop
jno
dec
jge
inc
mov
pop
add
sub
jno
pusha
scas
inc
lahf
mov
lods
sbb
or
jbe
dec
data16
inc
leave
push
testl
pop
adc
mov
xlat
lahf
mov
xor
sbb
fcomi
cmovs
adcl
mov
mov
popa
int3
dec
cmp
and
imul
and
fwait
inc
lcall
and
xchg
sbb
cmpsb
mov
adcb
aam
into
jne
push
jne
out
inc
add
mov
or
jo
cmp
push
aad
sbb
imul
sbbl
repnz
shlb
bound
cli
test
cltd
scas
inc
lret
mov
orb
adc
lds
rcr
mov
sbb
std
pop
mov
dec
sub
ret
dec
adc
jbe
mov
xchg
mov
mov
and
add
fdivrp
xchg
sub
cltd
cld
lods
jl
and
cld
ds
push
and
inc
mov
pushf
imul
cmp
cmp
jmp
les
addr16
or
nop
add
cwtl
jnp
pop
inc
xchg
xchg
cmpsb
push
add
push
push
cmp
out
arpl
paddsb
or
sbb
sahf
or
out
bound
das
adc
pop
mov
loope
movaps
ror
xchg
sbb
lahf
inc
lea
je
in
mov
jo
mov
add
shll
dec
xchg
sbb
dec
insl
insb
cltd
test
jo
jl
iret
mov
insb
rolb
mov
and
mov
fld
cmp
popa
jl
sub
cs
jg
bnd
dec
roll
xchg
fxch
cmpsb
cmp
movsl
fdiv
mov
roll
sub
mov
les
mov
sub
jb
jo
mov
jmp
lcall
add
fstpl
and
or
push
mov
movsb
mov
call
xchg
adc
xlat
mov
mov
lahf
mov
xlat
stos
xchg
clc
xchg
jp
or
xchg
in
xor
or
les
je
lahf
push
adc
rcrb
inc
xorb
daa
popa
inc
or
into
jno
dec
pop
rorb
sbb
fwait
pop
lcall
ja
in
mov
mov
insb
and
test
outsl
sbbl
push
pop
stos
add
fdivr
add
mov
lods
ljmp
xchg
je
sbb
scas
jmp
xchg
mov
stos
repz
stos
dec
sbb
roll
gs
addl
sti
add
cmp
inc
xor
aam
rorb
les
fisttpl
jge
roll
mov
sahf
push
setnp
dec
stc
push
cmp
jecxz
loop
nop
dec
roll
cmp
lods
push
lea
cs
clc
pop
ja
stos
jns
xchg
jp
jp
orl
incl
hlt
repnz
pop
shlb
fsts
pop
sub
cmp
in
push
jo
dec
pop
cmp
inc
bound
mov
jge,pt
dec
loope,pn
and
in
jp
rorl
ljmp
jbe
aam
jo
xchg
mov
cltd
jnp
iret
shlb
pop
aad
or
in
outsl
aad
lods
cmp
sub
in
inc
icebp
cmp
imul
xor
cmp
mov
stos
filds
fldcw
jge
dec
fldcw
adc
adc
call
jmp
cmpsb
hlt
xchg
js
xorl
jae
add
test
je
lret
bound
mov
daa
cltd
shlb
push
mov
bound
cmp
mov
or
xchg
jnp
xchg
pop
or
or
jae
xchg
scas
push
inc
into
call
int
mov
scas
mov
mov
xchg
push
pop
sbb
hlt
xchg
sbb
fcmovne
lcall
lret
mov
movsb
movb
mov
dec
push
sub
jp
out
mov
das
jmp
dec
ret
jnp
push
mov
sbb
xchg
mov
jns
dec
cwtl
jae
mov
pop
push
fmul
mov
and
mov
imul
jmp
mov
mov
in
orl
xchg
or
addr16
adc
scas
mov
sub
lahf
stc
jl
test
into
sub
stc
insl
leave
fs
mov
push
lcall
imul
fcoms
hlt
fbstp
pop
mov
cmp
pop
fstpl
inc
imul
adc
or
es
fwait
pop
daa
test
xchg
fwait
mov
sbb
int3
ja
fsts
jp
cmp
les
and
xchg
mov
lods
xchg
xor
popa
sub
clc
or
movsl
and
and
movlps
mov
jno
push
inc
jae
dec
movsl
divb
sub
inc
push
sbb
push
inc
dec
xor
add
sbb
xor
addb
or
lods
call
lcall
cmpsl
test
dec
scas
negb
nop
and
or
repnz
mov
sub
mov
mov
mov
stos
mov
and
test
or
push
mov
fs
and
add
xor
ss
cmpsl
dec
mov
xchg
dec
vpunpckldq
add
lock
cmpsl
je
movsb
in
adc
std
loop
dec
ja
adc
fmul
fstpl
inc
pusha
out
push
imul
loope
loopne
adc
inc
mov
push
addb
mov
inc
mov
or
jbe
pop
cmpb
mov
xchg
and
test
scas
daa
adc
int
hlt
add
adc
jns
adc
jb
sbb
inc
adcl
jne
or
rorl
es
pop
mov
cmp
call
fsubs
jge
rcrb
fadds
lcall
push
sbb
jno
js
jae
push
les
aas
popa
xchg
add
pop
jne
mov
enter
and
cmp
cmpsb
cs
test
dec
and
cmp
cmp
and
pushf
or
jnp
jne
dec
call
xchg
jle
or
les
push
fidivrl
enter
pop
adc
xchg
stos
je
das
aam
cld
ss
cltd
stos
push
jbe
cmp
or
mov
cmp
mov
adc
push
clc
pop
pop
lret
shr
int
arpl
sub
shrb
jge
mov
inc
rcl
mov
dec
or
cmp
jecxz
fndisi(8087
add
in
push
mov
test
mov
xchg
jb
scas
insb
clc
sub
pop
jne
ret
aaa
pop
loopne
cltd
add
xchg
push
gs
cmpsl
fdivs
fwait
sub
fs
fldenv
xor
lahf
pop
mov
cmp
les
sub
jecxz
test
push
inc
and
push
mov
mov
aas
shll
or
test
push
xchg
test
mov
in
cmc
iret
mov
add
nop
or
outsl
jle
les
pop
es
repnz
cmpsl
push
outsl
arpl
cmp
or
jne
scas
push
xchg
jnp
and
lret
lods
xchg
push
cmp
outsl
mov
jo
push
push
arpl
add
push
adc
mov
gs
stos
subb
mov
call
mov
xchg
jo
dec
outsb
cmp
cmc
cmpsl
in
adc
orl
rcll
dec
cwtl
xchg
test
scas
pushl
data16
pop
cwtl
pop
mov
rcrl
pop
fucomip
aad
and
xchg
mov
jb
fbld
jae
push
loop
dec
dec
push
push
cmpsl
cwtl
mov
aam
jmp
fstpt
inc
xchg
and
inc
dec
push
fs
xchg
mov
andl
std
jbe
dec
aaa
stos
test
inc
in
push
cmpsl
out
jne
inc
jno
jb
dec
lock
xchg
sbb
imul
mov
in
jae
pop
dec
cmp
mov
jbe
scas
stos
inc
std
bound
insl
or
or
mov
fistpll
int
cmp
addl
cs
xchg
cmp
fmuls
cld
js
mov
bound
xchg
jl
xchg
std
mov
push
pop
add
adc
push
shlb
clc
inc
sbb
sub
imul
jle
xor
jae
loope
aad
inc
adc
mov
push
mov
push
rorl
adc
bound
fcompl
fnstenv
xchg
int
mov
clc
add
mov
nop
out
fwait
cltd
leave
pop
neg
outsb
mov
sbb
pop
aam
sub
add
and
aaa
pop
pop
mov
lea
pop
lds
aad
movsb
and
dec
nop
js
les
mov
adc
mov
jl
and
je
mov
push
je
sarl
gs
fnstenv
popa
jae
jg
cld
jge
dec
lret
dec
pusha
add
popw
jmp
lcall
mov
push
cmc
insl
xorl
fwait
add
push
push
dec
pop
jnp
mov
mov
push
or
mov
and
fstps
pop
jo
cmpsl
cmp
gs
popf
fs
roll
cmp
mov
or
pushf
cmpsb
js
push
loopne
es
fidivs
pop
in
test
sbb
mov
clc
in
and
test
mov
adc
push
ss
in
jno
je
xchg
test
add
jecxz
test
insb
pop
pusha
sbb
cmp
mov
cli
ja
mov
push
xchg
dec
push
jg
insl
cmp
dec
jbe
jge
cmp
jae
and
negl
inc
xchg
xchg
cmp
arpl
push
sbb
dec
adc
inc
cmp
stos
cmpsb
clc
into
jp
dec
cmc
jmp
jbe
inc
jbe
mov
xchg
lahf
push
pop
iret
lds
lds
out
out
jns
mov
jns
bound
out
cwtl
adc
push
jmp
mov
aaa
cmp
jp
add
aas
and
mov
dec
mov
cmp
add
mov
into
es
arpl
cmp
push
mov
stc
cmpsb
repnz
jle
mov
movb
mov
movsl
adc
xchg
adc
bound
or
sahf
lret
cmp
jnp
jb
pop
cltd
fiadds
icebp
xor
sbb
lea
add
sub
cmc
xor
pop
sahf
test
pop
cmpsb
data16
mov
leave
je
jp
push
add
sub
nop
and
and
loopne
adc
fs
insb
cltd
push
sarl
arpl
or
and
pop
add
pop
cmp
pop
push
jo
mov
push
pop
mov
rcrl
cmp
aaa
stc
cwtl
cmpsb
sbb
data16
jo
cwtl
aam
lcall
dec
dec
fwait
xor
cwtl
jl
or
push
mov
mov
imul
push
and
loop
into
lahf
and
xchg
xor
mov
or
cmp
lcall
jecxz
fdivrs
fnstsw
xchg
mov
testl
mov
add
into
test
lods
arpl
rcll
jmp
xchg
lods
dec
mov
loopne
mov
xchg
aad
into
enter
add
lods
lret
xchg
mov
shlb
jae
jl
dec
pushf
lods
aam
push
push
cmp
mov
jbe
les
fxch
mov
cmp
jns
jecxz
test
sub
sbb
push
mov
mov
sbb
pop
or
fs
loope
xlat
out
mov
xor
cmovb
imul
pushl
dec
cmp
mov
mov
jno
jne
xchg
imul
iret
std
inc
jbe
and
fnstcw
jecxz
xchg
xor
lods
cwtl
in
into
scas
and
dec
adc
into
les
xor
ja
iret
fistps
push
inc
dec
daa
adc
inc
and
push
lds
mov
lret
jbe
mov
sub
mov
xchg
jo
cmp
cmp
sbb
aam
in
inc
jo
push
dec
mov
sbb
or
adc
pusha
lea
fcmovnbe
and
mov
push
jp
pop
mov
jns
jp
es
test
je
std
xlat
mov
sub
push
daa
fst
frstor
aas
js
shl
xor
add
dec
inc
je
cmpsl
fstpt
scas
add
dec
lock
jl
pop
pop
shll
and
ljmp
loope
add
or
xor
cmpsl
or
cmpl
arpl
addr16
repz
cld
movsb
fstps
cmp
cmp
sahf
push
aaa
lret
jne
mov
mov
dec
cmp
sub
test
les
inc
ficompl
aas
cmpsl
insb
jb
into
mov
cwtl
js
sub
jmp
pop
jnp
sbb
pop
out
repnz
or
dec
fldcw
adc
pop
lock
int3
mov
sbb
pop
xchg
iret
dec
lcall
and
cmp
arpl
in
mov
popf
shlb
das
inc
jne
push
pop
sbb
outsl
cltd
mov
sbb
mov
adc
notb
icebp
cmp
xchg
aaa
orb
dec
imul
jg
hlt
mov
movsl
or
sub
pop
aas
int3
mov
fs
jb
pop
aam
xchg
dec
jno
mov
sub
enter
adc
xchg
or
xor
in
pop
bound
stos
int3
xor
test
sub
rorl
fwait
mov
fs
paddq
dec
into
repnz
daa
shrl
cwtl
jle
and
popa
mov
fdivl
pop
jb
lahf
xor
sub
jno
xor
icebp
sbb
xor
lea
hlt
cmp
into
pop
test
out
out
stos
call
in
xor
and
les
pop
daa
mov
xchg
gs
icebp
enter
jg
inc
inc
mov
push
sti
lods
mov
adc
mov
cmp
cmp
into
jne
xchg
stos
call
scas
jne
push
pop
imul
push
inc
dec
jnp
cmpsl
in
out
cwtl
cltd
sbb
push
jne
test
mov
cmp
push
lahf
adc
fsubrs
push
dec
xor
push
out
sbb
fs
in
idiv
or
enter
pop
push
int3
popa
add
loopne
stos
loop
push
fadds
pop
inc
xchg
int
movsb
faddl
pop
enter
sti
pop
in
dec
pop
insl
cmp
cmpsb
nop
fnstenv
lds
adc
sahf
js
cmp
cwtl
push
mov
scas
dec
into
mov
int
inc
push
popa
lds
jp
insl
into
jecxz
or
and
or
dec
repnz
jno
adc
dec
loopne
xchg
fistl
xchg
jg
dec
popa
xchg
inc
scas
jns
add
add
aam
jl
dec
inc
outsb
sbb
push
pop
xchg
es
adcb
fstps
pop
rorl
adcl
cmp
dec
and
mov
fsubrp
cmp
cmc
mov
ret
repz
fwait
int
enter
dec
int
inc
lock
mov
sbbl
mov
add
les
fisubs
pusha
sbbb
leave
je
pop
mov
jl
sbb
out
xor
roll
cwtl
enter
or
or
jg
dec
adc
xchg
jne
fidivs
out
test
loope
cmpsl
pop
int
mov
or
cld
and
jo
mov
pop
cmc
jbe
ret
sbb
xor
mov
jbe
adc
mov
je
std
in
mov
xorl
xchg
lahf
or
lret
fadds
out
dec
imul
lods
inc
xor
iret
jne
outsb
loope
in
push
pop
cmp
adc
mov
cmp
fs
or
inc
loope
dec
cmp
movsb
or
les
pop
sub
pop
jb
cmp
pop
push
inc
les
imulb
std
jl
pop
dec
xor
push
jb
mov
sub
add
or
mov
out
push
jo
jno
push
and
push
xor
outsb
and
sub
in
sar
sub
jge
lahf
bound
bound
clc
pop
cmp
lods
inc
mov
pop
mov
gs
movsl
fstp
loop
push
mov
mov
scas
push
xchg
test
inc
push
sub
xchg
push
sbbb
cmp
mov
cs
mov
insb
pop
pop
push
aad
dec
pop
add
cmp
scas
add
out
lods
or
imul
jl
dec
adc
or
jne
mov
pop
dec
jl
xlat
cmp
pop
xor
pop
push
dec
stos
call
fs
cmp
push
fadds
pop
pop
push
outsb
pop
icebp
stc
mov
sbb
push
clc
push
mov
aaa
xchg
out
dec
and
cmp
movsl
sbb
icebp
test
push
scas
sarl
add
dec
ljmp
sysexit
out
movsb
xor
xor
xchg
or
and
lods
arpl
dec
shrl
push
stos
mov
popa
jnp
mov
in
fs
and
sbb
push
arpl
dec
jp
rcll
cmp
mov
xor
and
mov
ja
icebp
mov
dec
jb
lods
enter
dec
push
and
pop
push
popf
push
or
jle
ret
dec
std
jb
js
testb
les
push
push
push
jae
inc
sub
pop
andb
mov
cmp
mov
sub
jb
inc
insb
xchg
push
inc
dec
lds
pop
mov
or
cmp
pop
lds
ss
pop
pop
movsb
jne
mov
pop
out
jmp
mov
bound
pop
push
rorl
or
sbb
cwtl
mov
test
mov
pop
fmul
int3
jne
imul
lret
inc
adc
inc
and
xchg
xchg
mov
int
movsb
or
nop
ret
enter
xchg
fucomp
hlt
in
fldt
ret
ds
scas
push
dec
mov
das
sub
insl
push
shll
lods
aas
push
int
je
mov
jl
jmp
pop
mov
mov
add
xchg
shlb
iret
mov
xchg
cltd
jmp
pop
lret
xchg
bound
push
test
div
push
pop
arpl
call
into
push
lock
out
scas
aad
int
stos
push
ret
lds
mov
pop
fnstsw
jg
and
lods
out
xchg
mov
sbb
push
std
lret
fstpl
jns
scas
fnstenv
pop
xor
adc
dec
mov
pop
fimuls
ret
and
jo
and
cltd
push
inc
adc
cli
pop
fwait
dec
mov
out
mov
sbb
sahf
int
fs
cld
jmp
out
push
lret
adc
je
repnz
pop
scas
iret
jbe
arpl
popa
inc
gs
push
pop
pushl
xor
mov
cmp
xchg
jno
cmp
arpl
fsubs
cmp
jne
mov
pop
int3
push
test
xchg
cmp
iret
dec
mov
mov
mov
add
inc
pop
cmp
fisubl
popf
cmp
xor
add
xor
push
adc
mov
sbbb
sarb
les
push
mov
lods
add
add
xchg
out
sbb
or
aam
fldcw
cmp
mov
into
add
mov
jecxz
and
pop
fucompp
dec
sbb
cmpsb
repz
fldt
fstl
jae
jnp
in
cld
shrb
mov
xor
xor
je
scas
xchg
xor
dec
add
int
xchg
mov
sub
inc
ljmp
fisubrs
es
jb
or
mov
sub
mov
mov
movsl
pop
fcomps
lea
jne
lds
enter
or
cmp
dec
push
pop
pshufw
xchg
mov
sub
adc
jne
inc
pop
pop
popf
sub
push
test
adc
ficoml
pop
cmp
les
fistpll
push
lahf
jo
push
in
icebp
fidivs
pop
lcall
lods
scas
arpl
pop
sbb
imul
and
scas
mov
sub
push
loope
push
dec
push
js
dec
jo
sbbb
pop
movsb
rcl
ror
adc
jae
cmpsb
mov
mov
jge
jae
push
mov
xor
xchg
mov
int
ret
xchg
flds
dec
es
push
into
mov
repnz
add
xor
pusha
mov
add
dec
lods
mov
xchg
addr16
cmpsl
mov
and
xor
hlt
xor
or
cmp
or
push
cmp
push
dec
mov
out
ja
jl
sbb
lods
adc
lea
test
pop
dec
in
pop
popf
cmpsl
dec
call
clc
mov
cmp
add
sbb
pop
sarb
push
out
mov
or
in
es
stos
call
and
jmp
push
js
popf
jg
dec
pop
xchg
or
mov
shlb
cmpsl
pop
scas
cmc
lds
and
dec
es
ja
jl
and
push
lcall
mov
in
adc
xchg
xor
mov
xchg
push
cmp
insl
aad
out
fldt
push
js
outsl
call
stos
jmp
aad
movsb
mov
dec
and
mov
mov
les
jo
push
nop
sub
les
shr
mov
mov
leave
shl
and
pop
outsl
pop
add
cmc
cld
repnz
dec
add
andl
sbb
adc
xchg
js
pop
adc
jo
push
adc
jl
ja
xchg
mov
jo
push
arpl
out
push
xor
in
mov
test
xlat
sbb
sahf
mov
or
cmpsb
mov
mov
lcall
js
jne
jg
shll
cltd
inc
or
imul
xor
sbb
xor
scas
int3
dec
xchg
pop
inc
adc
aad
lret
or
add
or
adc
pop
sarb
int3
inc
cmc
jg
dec
inc
and
arpl
fnstcw
subl
les
fs
cmc
addb
push
movsl
inc
inc
mov
stc
imul
pop
jb
imul
scas
je
rclb
sbb
jg
adc
movsb
or
faddl
mov
loope
repnz
push
xor
adcl
out
icebp
sahf
or
adcl
les
mov
xchg
cmp
cmp
into
and
cmp
fidivrs
push
mov
scas
xor
adc
adc
stos
inc
or
xorl
push
lds
lds
xor
mov
cwtl
stc
sarl
xor
jg
bnd
pushf
loope
scas
loope
cmp
push
sub
xor
sbb
leave
cmp
dec
xor
or
mov
cmp
add
pusha
pushf
dec
je
int3
jne
fcmovnb
rorl
mov
mov
add
stos
gs
pop
das
sub
fbstp
mov
int3
mov
stos
xor
jge
fcmove
cmp
sbb
adc
cli
or
rcl
lret
push
fstl
pop
sub
pop
enter
nop
jno
aad
adc
push
lods
or
fldl
add
arpl
jne
jbe
into
in
xor
mov
pop
pop
dec
adc
nop
call
je
jge
in
cmp
jle
push
lea
lds
pop
or
out
xchg
push
jle
es
push
scas
xor
and
push
dec
jmp
scas
mov
sbb
xor
insb
out
lds
sbb
cmp
icebp
xor
mov
sub
mov
mov
dec
shl
outsb
inc
cli
inc
hlt
cmp
jge
inc
jb
jo
sub
or
mov
cmp
scas
std
sbb
mov
adc
sbb
or
add
dec
and
test
bound
add
sahf
out
stos
sub
sar
push
dec
arpl
nopl
dec
addl
inc
mov
dec
jno
enter
mov
lret
fsubrl
mov
stos
movsb
mov
daa
lock
mov
data16
inc
mov
push
lahf
std
push
mov
rsm
mov
push
orb
inc
scas
jmp
sub
inc
adc
mov
mov
loope
mov
push
int3
push
lcall
jg
inc
adc
xor
mov
cwtl
xorb
mov
shlb
movsb
cwtl
fwait
lods
xlat
and
pop
and
out
mov
cmp
scas
fs
jne
jp
xor
jle
shl
sbb
lock
xchg
scas
push
xlat
call
out
aad
testb
xchg
mov
in
test
inc
hlt
repz
fcoml
jbe
popa
fs
jl
cmp
cli
and
inc
jne
cmp
loop
daa
mov
mov
push
jge
leave
mov
pop
leave
fsub
rcl
mov
bound
cltd
mov
repnz
test
mov
xor
add
scas
dec
xorl
fldt
insl
push
cmp
push
push
and
add
popa
mov
out
movsl
icebp
mov
mov
pop
pop
inc
jo
mov
push
add
mov
inc
ret
push
fadd
or
aaa
les
in
sbbl
cmp
pop
or
aam
adc
sarb
aas
inc
int
sub
sub
mov
mov
push
push
lret
pop
stos
ja
dec
jmp
mov
mov
cmp
jbe
mov
push
adc
mov
mov
push
call
cmpsb
or
addr16
sub
xor
data16
and
icebp
inc
push
mov
jge
pushl
inc
jno
fadds
xorb
sbb
popf
push
sbb
cld
or
cmp
les
push
les
add
inc
scas
loop
dec
jg
inc
cmc
mov
pop
mov
and
push
cmp
sub
adc
loope
iret
ret
xchg
cwtl
xchg
mov
pop
add
xor
push
adc
dec
lahf
mov
inc
xchg
pop
jmp
push
cmp
pop
push
lods
movl
adc
fstpt
xchg
xorb
dec
jmp
sub
pop
int3
nop
pop
xchg
jecxz
loopne
ficompl
or
and
jg
icebp
faddl
data16
and
jo
arpl
cmp
ds
jnp
sarb
sub
jbe
mov
inc
and
shll
pop
popf
xor
pusha
push
xchg
sub
loope
and
icebp
fs
insb
unpcklps
in
addr16
popf
and
movsb
mov
dec
add
sarl
push
sub
lcall
pop
fwait
or
push
add
mov
cmp
cmp
scas
mov
dec
jb
sub
cs
sub
mov
pop
into
mov
test
or
ja
inc
lods
inc
inc
sti
pmuludq
cmc
or
gs
sbb
aad
dec
add
and
je
inc
adc
cwtl
data16
out
insb
int
mov
mov
scas
dec
sub
jno
ja
sub
mov
call
inc
inc
stos
and
add
mov
jae
adc
pop
lock
aad
fisubrs
sbb
push
insb
jnp
inc
orb
aaa
shll
push
lds
aad
jns
pop
cmpsl
shlb
lea
dec
repnz
jo
push
lds
mov
scas
stos
add
pop
dec
dec
movsb
mov
les
nop
jb
int3
pop
pop
xchg
mov
iret
adc
mov
add
in
sub
cltd
ljmp
mov
arpl
bound
cmp
loopne
outsl
or
inc
bound
mov
cld
pop
sub
cmp
lcall
jb
fdivrl
mov
mov
jae
loope
scas
stc
popa
sub
mov
xchg
cmpb
and
sub
cmp
sub
loopne
sub
xor
inc
cmpsb
aaa
lds
jo
inc
into
fwait
or
arpl
scas
pop
jecxz
jo
stos
inc
adc
incl
int3
jge
loope
xchg
jb
rorb
push
jne
loopne
adc
std
mov
fistl
lods
in
bound
fs
or
adc
dec
je
fdivr
pop
test
leave
mov
bound
push
fidivl
lret
xchg
dec
pop
aam
inc
cmp
aaa
jecxz
mov
xor
movsb
in
fwait
inc
jbe
fs
sub
push
stos
push
inc
or
sahf
dec
push
mov
in
sub
push
rcrl
repz
and
cmp
jl
sub
lods
adc
out
lcall
jne
cmp
add
cmp
mov
mov
jecxz
repnz
jb
or
jne
jnp
mov
js
dec
jb
lea
sub
push
push
sbb
popa
xchg
aad
jns
cmp
inc
sti
push
ja
sub
or
mov
les
repnz
ret
pop
cltd
jp
test
sti
cmp
xchg
or
dec
fcmovb
mov
cmp
popf
mov
incb
jnp
xorl
pop
pop
xlat
inc
mov
mov
dec
hlt
daa
inc
sbb
fstpl
jle
mov
xor
pop
les
or
fwait
dec
dec
xor
xor
xchg
push
test
fcomps
enter
iret
mov
mov
dec
je
loope
bound
cmp
lea
filds
pop
cli
dec
pop
subb
adc
jnp
adcb
pop
mov
dec
cmpsl
push
jne
xor
push
outsb
scas
cmp
sub
sbb
ds
jle
cltd
xor
pop
mov
les
push
mov
insb
cmpsb
call
cli
subl
aam
clc
mov
dec
xchg
jo
in
daa
jne
sub
sbb
jne
out
test
sbb
ficomps
or
fcmovne
dec
xchg
in
mov
mov
cmc
lock
sbb
jns
jae
dec
ja
ret
push
push
jmp
xor
jo
iret
popf
push
mov
mov
pop
jnp
or
jnp
movsl
bound
sbb
mov
mov
sbb
outsl
adc
and
sbb
insb
bound
into
je
addr16
xlat
adc
or
xchg
dec
imull
pop
mov
add
loope
and
xchg
int
movsl
movsb
inc
or
rol
fistpl
adc
push
shll
out
fsts
sub
rolb
and
dec
aas
dec
mov
xchg
add
repz
sahf
jae
jno
out
stos
fs
xchg
lods
pop
int
movsb
adc
dec
inc
inc
stos
add
mov
repnz
mov
inc
sbb
jne
inc
or
sub
lods
cmp
push
push
lock
cltd
int
jne
or
gs
cld
fisubrl
mov
push
pop
jo
jmp
insb
xchg
push
insl
imulb
sbb
xchg
insb
fcoms
mov
insl
lahf
movsb
adc
push
arpl
gs
in
push
jo
mov
add
jae
jb
pop
xchg
sbb
mov
jbe
push
sub
mov
mov
popa
dec
adc
jp
push
adc
fs
jo
jno
mov
mov
adc
call
and
fsubrs
mov
fs
fs
fld
fs
push
fwait
xchg
mov
cmpb
mov
xchg
outsb
pop
mov
mov
cltd
adc
pushf
into
xchg
jnp
movsb
pop
push
mov
mov
gs
xchg
ja
popa
push
mov
pop
repnz
add
adc
xor
pop
or
cwtl
xchg
icebp
cmpsb
add
lcall
fstps
dec
or
je
cwtl
push
icebp
push
jb
xchg
in
fcompp
loopne
mov
sahf
cwtl
test
push
pop
xchg
push
dec
mov
bound
je
cwtl
clc
icebp
call
fld
bound
xorb
jno
or
je
cwtl
push
icebp
or
xchg
out
enter
test
cwtl
icebp
mov
xchg
fs
mov
bound
cld
cwtl
add
fidivl
xchg
mov
mov
xor
imul
jb
and
inc
or
call
or
push
xor
cmp
mov
in
pushf
push
cwtl
icebp
stos
jb
xchg
fisubl
adc
ljmp
icebp
mov
push
mov
bound
mov
mov
out
clc
je
cwtl
xor
inc
jb
adcb
je
test
je
cwtl
mov
jmp
bound
adc
mov
stc
movsl
int3
icebp
pop
xorb
lcall
ljmp
push
jb
xchg
and
flds
into
jb
xchg
rcrl
sub
sbb
je
cwtl
in
shlb
xchg
shlb
fsubl
dec
adc
aaa
sub
sub
cli
icebp
ljmp
xchg
bound
fcomps
jno
sbbl
xorb
bnd
cwtl
int3
jmp
sahf
je
cwtl
test
jbe
push
sub
push
cmp
mov
jmp
test
and
xchg
sub
or
je
cwtl
in
jb
xchg
mov
fsts
cwtl
pop
fmuls
jno
jb
push
bound
repnz
loop
loopne
mov
sahf
bound
icebp
outsb
jb
addb
xor
fldenv
bound
je
cwtl
lock
loopne
rclb
mov
outsb
icebp
bound
addb
xor
adc
lock
aam
les
push
popa
aam
out
pop
xchg
mov
xchg
dec
sbb
icebp
sub
loope
dec
fcoms
pop
insb
bound
jns
cmp
icebp
or
loope
js
push
loopne
pop
imul
fs
arpl
addr16
xchg
sbb
mov
jmp
bound
je
cwtl
repnz
add
xchg
in
fptan
icebp
test
cmc
imul
icebp
pop
push
jb
xchg
pop
push
fldcw
add
rcrb
jo
sbb
fadds
xchg
push
inc
sbb
xor
bound
je
cwtl
in
icebp
loop
fdivs
xchg
aam
frndint
bound
je
cwtl
xor
sbb
xchg
jbe
fstps
cwtl
enter
out
xchg
adc
fstps
bound
sbb
jb
jle
fstps
shl
shlb
xchg
clc
add
push
bound
je
cwtl
cmp
inc
jo
sbb
mov
lcall
icebp
loop
notb
push
je
lcall
bound
add
leave
popa
cltd
mov
mov
xchg
ret
lea
lds
clc
movsb
daa
das
out
cmp
ss
pop
pushf
pop
mov
rcl
and
popa
cwtl
dec
adc
frstor
push
push
cmpsl
cmpl
movsb
mov
lods
xchg
leave
into
shll
push
mov
in
mov
mov
pushf
push
insb
rcll
push
rcr
mov
mov
ret
repz
js
into
push
sarl
jmp
xchg
sbb
push
lret
in
push
shll
loopne
jmp
and
leave
mov
hlt
out
inc
mov
enter
clc
mov
cmpsb
jmp
mov
outsb
popa
xchg
mov
mov
xchg
jne
sti
popa
push
mov
pop
es
leave
lds
dec
movsb
mov
out
mov
adc
std
es
jmp
movsl
cmpb
cmp
out
in
push
std
daa
add
xchg
mov
jne
mov
mov
aam
pushf
ret
sbb
pop
sub
xchg
cmp
mov
xchg
pop
popa
jl
mov
mov
pop
sahf
shll
lcall
mov
xchg
or
fwait
lret
xchg
xor
lock
push
cmpsl
loop
mov
inc
mov
fdivl
icebp
out
lahf
fidivs
adc
aam
shll
xchg
mov
push
lret
js
cmp
loop
js
ret
cmc
inc
lcall
push
or
mov
outsb
mov
in
jo
fsts
mov
dec
aas
rcrb
je
xlat
mov
in
test
cmpsl
into
cltd
adc
pop
adc
insb
ret
notb
xor
popf
js
aam
insb
mov
movsl
mov
adc
mov
xchg
faddl
or
or
jl
imul
mov
pop
cli
jmp
sarl
cmp
jbe
mov
push
in
pop
shlb
or
jbe
mov
clts
mov
in
arpl
lea
mov
je
mov
aas
lds
cwtl
pop
jecxz
mov
pop
ds
mov
push
mov
imul
pop
sbb
lds
jp
add
push
mov
insl
shlb
leave
rclb
je
insl
sub
repz
ficomps
in
pop
imul
fs
xchg
popf
pop
jle
lcall
aam
sbb
test
in
push
jg
xor
xor
cmp
adc
mov
cld
add
mov
add
push
lret
inc
cmpsl
cmpsb
mov
push
mov
loop
dec
ret
mov
mov
mov
je
bound
mov
es
fs
gs
xor
shl
adcb
cmpsb
jns
pop
jb
test
and
mov
adc
adc
mov
sbb
rorl
rcr
test
bound
call
xchg
sub
in
hlt
or
in
or
mov
adc
adc
xor
push
sahf
fwait
mov
sbbb
pushf
enter
loopne
je
jg
jo
dec
and
rcll
xchg
cltd
lods
mov
out
iret
popa
stos
mov
lahf
mov
mov
roll
push
rcll
js
mov
cmp
pushf
add
jbe
adcb
icebp
cmp
cmp
outsl
in
fisttpl
popl
mov
ljmp
sbb
lahf
mov
mov
and
rorl
mov
mov
icebp
pop
cltd
cmp
cmc
outsb
call
test
je
sub
fcompl
popa
fstps
jne
nop
inc
xchg
enter
sbb
push
xor
mov
adc
and
inc
mov
add
push
mov
mov
shll
cmc
mov
in
xchg
in
je
fcomip
mov
push
outsb
jo
mov
xchg
loop
or
mov
cld
cmp
push
arpl
fwait
mov
in
movsb
inc
jecxz
js
addr16
lods
loope
jne
or
cwtl
cmp
adc
jno
sahf
xor
sub
lods
xchg
sbb
orb
push
sub
cltd
int
imul
popa
call
test
cld
test
xchg
fnstenv
mov
jl
jo
mov
pushf
cmp
mov
shlb
bound
sub
xchg
outsb
push
fbstp
cmp
divl
fwait
les
sub
mov
jmp
movsb
out
mov
hlt
cld
cwtl
gs
pop
jns
je
add
and
push
mov
mov
stos
sarb
sub
roll
movsl
push
aam
hlt
pushf
rcr
or
add
fucomp
add
sub
rolb
cld
or
add
mov
lock
xor
add
pop
addl
inc
mov
stos
shlb
cltd
out
arpl
loope
cli
jnp
popa
dec
cli
xchg
sbb
cmp
dec
jns
adc
mov
jg
dec
sbb
jno
pop
push
and
add
fidivs
lock
inc
icebp
out
jmp
movsb
jecxz
pop
aam
sbb
mov
mov
pop
jl
sub
pop
sahf
pop
push
pop
jb
xchg
shlb
jo
loope
mov
sub
data16
jae
xchg
ds
je
lock
stos
cwtl
xchg
flds
lods
rolb
mov
vpsrlw
popf
sub
push
push
xchg
cltd
in
cli
add
mov
rolb
sbb
push
jl
shl
mov
les
lock
mov
popl
push
mov
shl
andb
fsubrs
sub
sahf
movsb
out
scas
add
mov
mov
xor
or
out
cwtl
push
outsb
ljmp
xchg
iret
leave
negb
in
aas
jnp
mov
sbbb
shll
mov
out
ret
cmp
adc
outsl
mov
aad
mov
hlt
jge
mov
mov
iret
in
cmp
shlb
je
add
movsb
fs
sbb
jg
mov
pop
push
outsl
inc
cmp
and
jle
sbb
movsl
test
daa
jns
xchg
cwtl
clc
xchg
mov
mov
cmpsb
mov
int
jl
stos
mov
cmpsl
mov
add
sub
sbb
je
js
in
fdivrl
or
iret
cmp
pop
inc
pop
mov
mov
cltd
push
add
stos
mov
mov
sub
pushf
test
mov
push
test
jge
fnstenv
xchg
mov
stos
fnsetpm(287
pushf
lcall
add
cwtl
mov
mov
test
fwait
mov
mov
dec
scas
js
lds
scas
orb
aaa
jl
adc
sbb
shlb
repz
jbe
ret
fwait
lahf
adc
je
test
push
cwtl
inc
jb
push
cli
sbb
js
fdivs
cmp
and
rol
add
fsubp
adc
sub
cmpsb
jg
js
jns
pop
pop
sti
insb
mov
pop
push
hlt
stos
or
pop
push
jns
xor
mov
sti
sbb
cli
sbb
jne
mov
xor
ja
lret
xor
insb
in
dec
notb
mov
push
xchg
pushf
fs
popa
mov
add
je
pushf
sub
sbb
mov
sbb
mov
jmp
add
out
mov
adc
xchg
pop
inc
mov
ret
mov
jge
fsubrl
bound
ljmp
sbb
jb
ljmp
rcrl
add
cmp
push
rcrb
or
sahf
mov
mov
icebp
add
sbb
or
ja
imul
jle
adc
sub
mov
fisubrl
sahf
cmp
add
stos
jge
and
mov
mov
stos
inc
jl
fistps
leave
mov
fstps
push
mov
leave
or
mov
fidivl
adc
out
pop
outsb
mov
clc
stos
popf
sbb
xor
jbe
jns
sbb
in
push
and
test
cmpsb
or
lahf
les
jne
mov
in
fldcw
jne
les
push
out
les
bound
fs
mov
pop
addr16
mov
sub
mov
and
add
xor
aad
xor
lock
pop
fisubrs
sub
ljmp
shrb
push
mov
xchg
xchg
andb
inc
lcall
fwait
aam
arpl
sub
mov
xchg
xor
arpl
outsb
in
fnstenv
addb
dec
in
cmpsb
test
jge
cmpsb
mov
pop
sbb
push
pop
or
cmp
inc
cld
jne
arpl
ljmp
mov
and
cmpl
mov
mov
ret
mov
leave
popa
sbb
test
aas
sub
jbe
bound
inc
mov
push
mov
jo
jecxz
in
xor
add
cmp
in
add
in
sbb
lods
loope
dec
fstl
gs
in
mov
push
mov
int3
fs
mov
setne
lahf
inc
mov
aam
imul
std
xor
mov
scas
adc
jno
jb
fs
xchg
dec
aas
int3
dec
jle
cmp
adc
xlat
xchg
cmp
sub
fidivrl
push
jo
outsl
jp
inc
lret
or
add
arpl
xchg
lods
addl
gs
lds
jb
sbb
mov
std
and
lock
mov
lcall
out
pop
push
jge
nop
test
cmp
repz
mov
popa
xchg
popaw
pushf
mov
mov
sahf
xor
sbbb
lahf
xchg
ja
loopne
in
push
imul
movsl
addr16
ficompl
fcoml
jo
dec
mov
inc
mov
xor
add
mov
out
push
icebp
cmpsb
xchg
sti
jo
pop
icebp
jb
test
cli
cltd
inc
cwtl
imul
ss
jb
dec
mov
stos
cmc
clc
scas
bnd
fs
out
mov
lds
adc
mov
lea
js
and
mov
enter
cwtl
iret
jb
and
push
mov
aas
leave
mov
inc
dec
mov
cld
rclb
xlat
sbb
rol
lock
pushf
add
cmp
les
and
mov
jge
call
or
mov
arpl
xor
adc
pusha
gs
mov
inc
data16
arpl
test
bound
mov
call
mov
add
rorb
jo
subl
leave
xchg
push
cmpsl
shlb
subb
fldcw
mov
outsb
insb
ficompl
cmpsb
cmpsb
and
fcoms
pop
popa
addl
pop
mov
icebp
aad
jle
dec
adcb
cld
insb
fs
pop
xor
xlat
xor
or
xchg
xchg
jl
nop
xor
fcoml
fsubs
lock
xor
xor
sub
jno
sbb
jae
outsb
ret
aad
mov
enter
pop
shrl
mov
cmp
xchg
pop
inc
sub
fnsave
fsubr
or
lock
add
je
mov
enter
icebp
adc
stos
call
xor
leave
enter
mov
mov
xor
cmp
jle
xor
pop
fnstcw
push
sub
out
xor
insb
or
fnsave
mov
xor
sbb
jl
jb
lods
fcompl
cwtl
dec
or
cmp
enter
jae
call
add
pop
xchg
add
call
cld
jb
xor
insl
sub
hlt
mov
mov
js
call
adc
test
push
ret
lods
jb
cwtl
subl
movsb
sbb
pop
stos
imul
clc
fdivs
insb
ret
in
in
in
xchg
jo
cmp
movsb
fsubrl
xor
jbe
fwait
mov
mov
cmpsb
cld
mov
mov
enter
in
mov
outsl
mov
shl
mov
mov
loop
add
push
arpl
scas
subb
sub
aam
scas
negl
fstl
dec
cltd
xchg
mov
inc
xor
push
sbb
mov
movsb
shlb
xor
repnz
mov
and
inc
add
enter
xchg
fsubrl
popa
bound
js
cwtl
in
out
inc
mov
xor
pop
jp
stos
add
loopne
fwait
in
fsubrl
push
rorl
lock
push
sbb
call
sbb
dec
xchg
sbb
lock
xor
pop
push
js
sbb
pop
pop
jno
push
in
mov
cmc
mov
clc
jo
outsl
xor
push
loope
cmc
js
sub
xchg
xor
je
in
cmp
cld
pop
jno
imul
push
jne
js
dec
fsubrl
mov
push
adcb
mov
pop
insb
push
mov
pop
jge
dec
mov
sbb
cwtl
inc
pushf
xor
cmpsl
push
add
andb
and
pop
fadd
xor
js
test
adc
xor
mov
loopne
mov
fdivl
and
clc
pop
sbb
xor
fdivs
fidivl
test
es
adc
push
inc
jmp
xchg
daa
subb
sbb
cmp
enter
and
jno
jno
sub
clc
xor
subb
xchg
cwtl
jae
icebp
call
shll
push
jae
icebp
adc
sub
pop
sub
adc
pop
cmp
cmp
jb
cmpl
mov
pusha
enter
cwtl
fildl
dec
mul
lock
call
sbb
clc
popf
pop
andl
xchg
scas
imul
mov
jb
xchg
push
shl
fs
add
outsb
xchg
notb
mov
cwtl
mov
mov
cli
xchg
out
ljmp
xchg
data16
call
pushf
xchg
movsb
fdivr
fdivrl
add
test
lea
rcll
rcrb
mov
mov
sarl
xlat
mov
pop
stos
rcr
mov
and
jo
push
mov
xor
dec
fsts
cwtl
mov
sbbb
mov
lret
shr
jo
mov
addl
call
repnz
loopne
ret
daa
sbb
inc
adc
fisubrs
pop
or
and
fcoml
push
mov
adcl
rcr
xchg
les
mov
push
std
cmp
jl
bound
sbb
push
icebp
sbb
pop
dec
xor
fdivs
popa
push
push
jno
adc
popa
mov
xor
insl
imul
xchg
popa
push
pushf
loopne
or
popf
int3
scas
aam
cmp
cmp
xor
adc
pop
push
cmpb
mov
cli
cli
repz
fmull
jl
push
jne
mov
je
adcb
mov
pop
mov
popa
pop
inc
popa
inc
fdivs
mov
stos
test
mov
stos
xorb
lods
or
inc
xor
mov
int3
js
dec
lds
cwtl
cmp
repz
jl
popa
push
negb
push
ficoms
pop
sbb
leave
fistps
lock
lock
mov
hlt
add
rcl
sbb
das
pop
jno
cmc
loope
out
inc
dec
pop
mov
clc
shll
ret
mov
xor
dec
icebp
pop
mov
sub
bnd
push
ss
add
lock
mov
pop
sub
scas
push
and
lods
push
and
cs
dec
push
xchg
into
in
cmpsl
push
fstpt
scas
cmp
shll
sub
sbb
fisubs
imul
ret
popa
rolb
sbbb
int
arpl
mov
mov
sbb
mov
sbb
jmp
dec
add
nop
scas
rcll
shlb
jnp
subl
in
mov
xchg
mov
mov
xchg
popf
pop
mov
jmp
push
test
push
inc
jmp
ret
or
in
sbbl
mov
movsl
mov
pop
fisubrl
test
or
xchg
mov
pushw
lahf
bound
mov
repnz
push
push
rcrb
mov
xor
inc
xor
fidivl
les
add
test
pop
sarb
orl
push
mov
popf
mov
mov
movsl
popf
xor
icebp
call
into
in
dec
and
insb
xchg
mov
test
push
cltd
xchg
sub
add
mov
enter
les
jbe
push
mov
jge
int
imul
mov
in
in
pushf
xchg
mov
stc
jbe
mov
mov
int3
cmp
dec
ss
jo
rorb
dec
aam
shlb
mov
or
push
fwait
jne
mov
aaa
cmpsb
rcl
cmc
xchg
mov
xor
xchg
shr
sbb
sbb
mov
enter
cmpsb
cs
mov
cmp
mov
ret
or
adc
popa
in
jo
pusha
sbb
sar
mov
mov
hlt
imul
addr16
fmul
lahf
shl
cmp
andb
mov
pop
jnp
push
fs
pop
rolb
add
jne
es
jns
pop
pop
push
lods
push
ds
jnp
push
cmpsl
popf
scas
or
and
leave
pushf
test
push
mov
push
jnp
addl
ror
pop
roll
pop
or
xorb
test
ljmp
push
push
out
xchg
push
sbb
data16
faddl
dec
mov
movsb
scas
movsl
ret
mov
adc
lret
fs
ret
sarl
and
andl
and
insb
stos
fs
enter
sbb
loopne
insb
dec
inc
insb
rcrb
addr16
sbbb
fldl
into
push
xor
inc
outsb
fsubrs
test
popa
pop
fwait
push
fs
mov
dec
xchg
jae
pop
gs
jo
and
mov
mov
out
pop
je
hlt
cmc
pop
cmc
es
fsubrs
cmpsl
rcrb
mov
stos
mov
test
jmp
out
cwtl
cmp
insb
cli
fs
cmp
stos
jp
out
nop
test
lcall
mov
jbe
cmp
and
mov
pushf
test
in
cltd
insb
xchg
mov
mov
xchg
push
jmp
ja
test
outsb
jne
pusha
or
mov
xor
mov
or
xchg
mov
subb
bound
icebp
lock
sub
pushf
jne
xor
mov
xchg
push
jle
push
in
cwtl
cld
js
jbe
out
jle
dec
aad
aam
lock
xchg
mov
lds
mov
mov
or
mov
xchg
lcall
or
sahf
ret
ror
out
loopne
fiadds
mov
cmp
test
and
xchg
jb
xchg
icebp
pusha
mov
fdiv
ret
mov
loop
sub
mov
inc
hlt
lds
push
cltd
fdivrp
jae
loop
sub
mov
xor
dec
xchg
notb
cwtl
mov
mov
mov
mov
shr
pop
inc
mov
dec
cmp
into
xchg
imul
and
das
cmp
xlat
xchg
enter
jb
sbb
out
and
nop
or
mov
jae
jge
mov
mov
and
popf
xchg
pop
mov
outsl
mov
adc
xchg
push
addr16
xchg
pop
pop
adc
jnp
subb
xchg
fs
sbb
js
mov
adc
push
sub
adc
insl
outsl
imul
inc
mov
nop
in
sub
in
and
out
loop
mov
mov
jmp
hlt
call
fwait
js
jne
xor
sbb
pusha
in
or
aad
mov
cwtl
pop
scas
xchg
loopne
clc
lock
out
mov
pop
or
fstps
pop
jns
add
jns
jo
test
jns
call
pop
adc
jnp
icebp
adc
je
adc
xor
loop
enter
adc
mov
ja
movsb
aam
aad
jne
add
mov
mov
jge
jb
xor
mov
rcl
xor
pop
into
test
cmp
rorb
push
and
loopne
pushf
xchg
push
sahf
mov
xchg
mov
inc
fildll
data16
mov
ret
sbb
sbb
cli
jp
xor
stc
push
in
shll
mov
scas
data16
cmp
call
mov
or
cltd
jle
ficoml
sub
bound
fcom
push
lcall
pop
std
push
pusha
lods
mov
cld
nop
sbb
adc
rcrb
js
aaa
loopne
mov
mov
dec
in
popa
inc
lret
jne
pop
mov
push
iret
xorb
pop
hlt
enter
xchg
mov
in
dec
cmpb
mov
mov
lds
les
xor
into
in
jo
jle
pushf
repnz
pop
insl
subb
mov
in
sahf
lock
lret
xor
js
ja
cwtl
xor
lock
dec
and
mov
pop
jge
push
lods
mov
mov
dec
lds
jge
test
sarl
push
icebp
out
push
insl
mov
enter
jo
hlt
add
imul
mov
mov
pushf
mov
pop
xor
cld
push
in
xchg
mov
xchg
outsb
lcall
mov
lds
xchg
mov
test
lahf
fwait
sahf
flds
aaa
andb
inc
mov
and
aam
aas
sbb
rolb
lret
and
cltd
mov
test
fmull
dec
push
mov
loopne
mov
mov
out
ljmp
ja
cmp
sub
cmp
fmul
xchg
jge
cmpsl
ret
pop
icebp
aam
sub
ljmp
int3
enter
jge
mov
mov
out
jns
xchg
je
mov
mov
testl
inc
xor
cmovb
insb
into
xchg
cmpsl
into
std
mov
adc
cmpsb
mov
or
inc
pop
jo
dec
imul
push
das
mov
outsl
mov
mov
fs
jns
xor
xchg
fcom
movsb
push
in
pop
pop
push
jle
jo
repz
push
and
add
jmp
or
dec
pop
sbb
gs
sti
mov
out
xchg
decb
jb
xor
ja
or
frstor
movsb
jo
ret
rolb
sub
pushf
pop
jle
push
aad
sqrtps
enter
mov
std
nop
xchg
push
jo
loopne
push
inc
nop
mov
jno
rol
movsb
in
mov
enter
sbb
cmpsb
cltd
fs
add
jp
pushf
int
orl
and
lods
mov
push
aas
sub
insb
dec
pop
scas
cmp
ret
daa
idivb
xorb
xchg
das
bound
mov
or
mov
movsb
xorl
jo
aas
jecxz
xchg
xchg
lret
jle
popa
sbb
pushf
scas
mov
xchg
jno
pop
setno
imul
in
gs
xchg
popf
je
cmp
je
dec
je
push
inc
mov
sub
jg
jle
fistpl
sbb
imul
dec
mov
fcompl
test
xchg
loopne
stc
insb
dec
sub
push
or
popa
or
pop
insl
loope
test
ja
bound
dec
cmpsl
push
add
lock
mov
les
lcall
or
inc
lcall
cld
sarb
fwait
rcrb
push
nop
adc
int3
rcrb
jle
push
and
inc
shrb
lock
fsts
sub
popa
xor
mov
or
jb
or
mov
jno
ja
dec
jno
test
cli
ficoml
js
xor
jo
and
dec
inc
mov
mov
mov
push
jb
xchg
push
pop
lahf
clc
jno
call
push
bound
sbb
mov
insl
fmull
repz
mov
fmull
xchg
push
sarb
rcrb
andl
pop
loopne
xor
xor
fdiv
lock
mov
sarl
push
loope
mov
in
stc
push
xchg
jg
inc
ja
fisubrl
sub
fldcw
bound
mov
push
jmp
xor
dec
xor
sub
xlat
in
push
subl
mov
pop
scas
aas
insb
push
jge
sbb
push
mov
xlat
jo
pop
and
push
fistl
pusha
sbb
mov
lods
cmp
out
xchg
push
sbb
mov
push
pop
pop
clc
cld
xor
mov
idiv
shrb
lock
jl
xchg
in
mov
sbb
je
xchg
es
loope
push
jecxz
lcall
cld
pop
insb
scas
test
pop
push
push
jo
mov
jb
xchg
jo
fnstenv
xchg
je
cwtl
xor
jo
lods
jb
xchg
or
shl
jno
xchg
lods
imul
bound
cmpsl
fcompl
sub
lret
cwtl
dec
icebp
sbb
xchg
or
data16
xor
pop
push
mov
jo
push
in
fs
sbb
mov
fs
sbb
les
data16
adc
mov
call
bound
mov
xchg
xchg
jns
test
mov
mov
add
jmp
mov
jb
xchg
ret
nop
in
add
loope
mov
addb
icebp
fnstcw
out
jmp
hlt
not
xchg
idivl
add
push
sbbb
xor
mov
out
scas
aad
leave
popf
aas
and
mov
test
mov
popa
outsb
xchg
outsl
mov
stos
enter
add
jno
stos
nop
pop
sahf
je
cmpsb
dec
aam
mov
icebp
popa
cmp
xor
lds
cld
loop
push
orb
xor
jmp
push
jb
xchg
push
mov
popa
push
fldenv
bound
push
push
pop
jb
push
push
pop
cwtl
call
mov
test
pop
stos
mov
subb
imul
push
fstpt
xchg
adcb
push
je
cwtl
pop
in
mov
jo
dec
insl
dec
push
push
sbb
icebp
test
pop
xchg
shlb
fsubs
je
cwtl
enter
leave
xchg
xor
fnstcw
int
call
shll
fyl2x
cwtl
jo
push
jb
fcomip
arpl
mov
and
xor
pop
je
cwtl
pop
icebp
and
xchg
sub
push
bound
cmp
pop
sbb
mov
bound
je
scas
mov
shrb
adc
sbb
mov
sbb
inc
push
xchg
dec
fstps
jno
pop
push
xor
xor
mov
pop
mov
fdivs
add
bound
xchg
arpl
fldenv
je
dec
or
push
cwtl
icebp
icebp
cwtl
jb
xchg
shl
enter
push
lock
cwtl
clc
icebp
outsb
jb
xchg
outsl
sub
andb
adcl
mov
fnstenv
jmp
add
call
jno
jb
xchg
imul
imul
jb
xchg
mov
jnp
rcrb
mov
push
or
ret
bound
je
cwtl
cmp
leave
shlb
jno
push
push
nop
je
cwtl
cwtl
or
je
cwtl
lock
fwait
jb
xchg
pushf
and
popf
bound
je
cwtl
push
icebp
lahf
jo
pop
jb
xchg
xorb
mov
mov
dec
bound
icebp
adc
xchg
sbb
je
cwtl
stos
in
jo
xchg
stos
js
lods
bound
icebp
scas
jb
xchg
scas
fcomp
shlb
rcrl
xchg
mov
fnstcw
mov
xchg
nop
mov
je
cwtl
mov
xchg
lock
clc
ret
jb
xchg
push
fcomps
loope
bound
icebp
jb
xchg
enter
addr16
lret
xchg
lret
adc
int3
bound
je
cwtl
inc
icebp
into
jb
xorb
jo
and
xchg
js
fldenv
test
add
fsubr
jbe
add
adc
add
cwtl
mov
jl
arpl
push
cmp
mov
je
cwtl
mov
xchg
cwtl
mov
je
cmpsb
jp
jb
mov
xchg
sub
bound
je
cwtl
sub
push
jb
sbbb
sub
mov
mov
xor
mov
jno
push
push
call
adc
pop
mov
aam
subl
dec
into
sbbl
js
xchg
mov
outsl
lock
mov
sbb
clc
into
xchg
or
into
xchg
sub
outsl
lock
dec
pop
xchg
xor
lock
mov
xor
dec
mov
xchg
fadds
outsl
lock
dec
or
inc
xor
xlat
xor
dec
pop
push
cmpl
into
xchg
test
mov
fcom
xor
dec
or
add
pop
sbb
into
xchg
dec
inc
pop
imul
inc
mov
cwtl
dec
test
xor
dec
fcomps
call
or
xchg
inc
sub
cmp
xlat
xor
outsl
jo
dec
js
xor
dec
test
sbb
fsubrs
call
or
popl
adc
imul
sbb
test
lock
fmuls
pop
sbb
into
dec
pop
sbb
into
xchg
cmp
outsl
fcomps
int3
xchg
push
mov
xlat
xor
dec
enter
into
xchg
call
or
outsl
lock
xlat
xor
insl
dec
push
orl
inc
enter
dec
call
orl
sub
pop
sbb
sbbl
js
xchg
mov
outsl
lock
mov
sbb
clc
into
xchg
or
into
xchg
sub
outsl
lock
dec
pop
xchg
outsl
xor
lock
mov
xor
dec
mov
xchg
fadds
outsl
lock
dec
or
inc
xor
xlat
xor
dec
pop
adc
push
dec
cs
pop
test
into
inc
test
stc
sbb
sbb
std
jo
jo
push
test
fistps
push
pop
adc
pop
mov
push
mov
fsubr
mov
cwtl
jmp
xor
fistps
in
push
sbb
fistps
call
jno
ljmp
pop
jo
or
pop
xor
adc
jo
sbb
pop
xor
and
push
pop
jo
mov
pop
push
cmp
xor
push
mov
mov
add
mov
in
xor
fistps
int3
push
test
fisttps
xlat
mov
fists
pop
mov
or
mov
cmpb
adc
mov
aam
jle
mov
shl
cmpb
test
mov
fadds
stos
mov
mov
jns
jo
les
jge
dec
addr16
push
popf
shrb
mov
add
jns
xorb
mov
movsl
xorb
inc
jbe
and
mov
popf
addb
lock
dec
push
xor
fisubrl
loopne
xor
inc
dec
xchg
fadds
cwtl
loope
pop
jo
mov
nop
mov
xchg
push
idivb
mov
pop
pushf
fs
mov
jo
inc
inc
movsb
into
in
int3
jo
mov
xlat
icebp
or
scas
xor
rolb
cwtl
out
fdivr
loope
pop
imul
loopne
shl
mov
jo
adc
lock
mov
push
mov
jo
cmp
pusha
xor
xrelease
clc
pop
mov
adc
xlat
or
repnz
cltd
add
js
jo
pop
xor
popa
adc
jo
out
pushf
and
out
jns
sahf
nop
mov
add
jo
or
push
insb
sbb
mov
and
sbb
add
pop
mov
adc
push
push
xor
mov
dec
push
and
and
pop
shlb
xchg
aam
bound
shrb
add
pop
mov
aam
je
xor
and
adc
adc
cmpb
mov
xchg
pop
sub
test
pushf
loope
fwait
jo
xor
mov
lods
push
ret
jb
scas
xlat
loopne
cld
mov
fadds
and
rclb
lds
jecxz
xchg
fcompl
mov
aam
push
imul
scas
test
in
mov
data16
inc
xchg
add
fcom
mov
push
add
pop
mov
adc
movl
xorb
enter
or
xlat
pop
mov
or
push
out
adcb
in
jns
add
sub
enter
push
adcb
mov
cwtl
mov
or
xorl
xor
rcll
ds
test
pop
or
arpl
fs
pop
add
pop
jo
dec
sti
fistps
std
push
fdivr
fistps
call
add
pop
mov
push
sbb
fistps
in
fsub
fistps
add
int3
fistps
lock
shl
fistps
xlat
push
clc
fistps
fistl
cmpsb
xchg
pop
adc
test
rolb
insb
add
test
es
mov
xchg
mov
pop
xchg
lcall
scas
fisubs
pop
lahf
mov
popa
imul
shrl
adc
mov
mov
sti
es
je
or
xor
xchg
in
sbbb
jmp
subl
loope
shll
gs
lcall
or
jge
sarb
adc
mov
jno
push
cli
fsubrs
sub
pop
xchg
jp
mov
jae
roll
lods
add
xchg
aam
movsb
lods
fnsave
xor
xchg
repnz
repnz
jne
dec
add
fwait
stc
shl
xchg
mov
lds
lea
xchg
mov
and
fisubrl
stos
mov
jp
mov
jmp
pop
je
ret
pop
mov
shr
xchg
imul
fmull
or
inc
in
ljmp
and
mov
mov
andb
dec
sbb
aaa
in
into
icebp
enter
and
jb
add
adc
sbb
xchg
cmp
loop
mov
mov
jp
add
add
clc
arpl
sbb
cli
enter
dec
mov
ja
insb
mov
mov
mov
inc
dec
jbe
cwtl
ss
lea
addr16
jns
sbb
ljmp
ljmp
cmp
add
out
jae
xor
mov
sub
pop
jb
add
js
adcl
and
pop
mov
add
xor
mov
push
insb
push
test
lods
ds
outsb
adc
lret
mov
add
aas
jbe
les
add
mov
jle
push
arpl
xchg
lock
pushf
scas
fdivs
sub
icebp
out
je
mov
leave
or
fidivrl
gs
fsubrp
push
addr16
lret
xchg
in
mov
and
mov
bound
jbe
out
hlt
jbe
fidivrl
imul
loop
ret
sub
lahf
loop
stos
fwait
rcrb
stos
testb
pop
jecxz
xor
xchg
mov
ficoms
test
les
xchg
pop
lods
cwtl
push
mulb
cmp
fsubl
xorb
sbb
sar
insb
fs
addb
in
mov
std
push
pop
xor
push
pop
push
arpl
sub
pop
pop
pop
push
push
pop
pop
ficoml
push
andb
dec
fdivrs
sbb
jo
loop
out
sub
fcom
jo
sbb
xor
dec
xchg
and
fucomip
pop
jbe
lahf
push
or
hlt
shl
sbb
je
arpl
fidivl
mov
jecxz
arpl
stc
sub
std
or
push
xor
add
pop
sub
cltd
bound
cli
push
pop
les
mov
mov
fsubrl
aaa
jge
out
mov
pushf
jle
nop
sbb
lock
leave
imul
inc
ret
js
sar
or
jmp
and
jge
dec
cmp
sub
xchg
cmp
out
jle
lcall
mov
xchg
addr16
jle
and
jne
jmp
std
outsl
popa
push
fcoms
dec
popa
sbb
jno
addl
push
inc
pop
push
inc
fsubrl
xchg
mov
xchg
and
js
mov
push
inc
das
push
fildll
cmc
fcmove
xor
enter
add
mov
incb
push
rcll
push
insl
jo
test
cwtl
popa
dec
xor
push
dec
xor
jns
es
aad
les
inc
pop
rcrl
pop
cmp
pop
test
push
xchg
popa
mov
xor
push
aad
pop
cwtl
pop
xlat
sbb
jl
xchg
push
loope
sbbb
mov
mov
mov
mov
addb
jmp
aam
stc
jo
xchg
pop
mov
mov
ss
and
imul
mov
int3
cmpl
mov
movsb
outsb
js
js
sbb
loopne
je
xchg
push
ja
dec
sub
subb
stos
pop
pop
jl
xchg
add
mov
push
push
push
loop
pop
aas
cld
mov
mov
or
fstpt
jle
mov
mov
adc
mov
sbb
aad
fmull
jp
adc
mov
or
mov
mov
sbb
mov
cmp
filds
push
sbbl
mov
imul
push
jmp
jne
mov
mov
lret
cltd
xchg
sub
cs
movsb
or
or
stos
lods
in
and
pop
mov
push
gs
push
xor
xchg
add
mov
inc
or
shl
jp
push
bound
push
out
sbb
mov
scas
scas
add
shll
xor
fldt
cmp
cmpsb
mov
dec
gs
jo
bound
pshufw
fwait
xorl
cmp
rcl
jo
lock
push
mov
fiaddl
fisubrs
xchg
and
and
cmc
je
mov
scas
fsubl
sub
sub
mov
loopne
test
clc
pop
out
inc
lods
and
popa
ds
cmp
shl
xor
jo
enter
mov
mov
xchg
shll
shlb
inc
cmpsb
es
sub
aad
sbb
movsb
cwtl
pop
add
mov
or
mov
jb
je
fnsave
mov
iret
in
jo
enter
flds
push
pop
cmp
test
jo
xchg
iret
aaa
and
jo
inc
push
and
jo
jno
iret
stos
jo
adc
les
xor
sub
and
test
mov
or
pop
xchg
pop
outsl
std
push
icebp
popa
cmp
fcoms
dec
test
cmp
xor
sti
lods
dec
xor
rcrb
fstpl
xlat
jmp
jl
js
pop
dec
filds
mov
and
rclb
pop
push
jo
loop
gs
pop
clc
sub
les
shrb
adc
pop
clc
ret
in
int3
add
les
sbb
jo
icebp
jo
jnp
stc
cmpb
pop
fists
aam
in
mov
or
inc
fldl
sahf
pop
adc
ja
fidivs
push
adc
je
mov
fisubrs
xor
iret
clc
xchg
mov
jl
xor
cmp
push
push
or
or
add
push
mov
jo
pop
inc
sbb
in
inc
enter
ret
adc
sub
lret
faddl
lret
push
fdivl
cmpsb
mov
xorl
enter
iret
pop
push
mov
fistpll
jo
arpl
std
nop
push
push
jo
and
mov
leave
negb
stos
hlt
das
loopne
pop
std
push
add
ljmp
xlat
pop
jmp
enter
scas
jo
lret
dec
sbbb
lock
loopne
leave
cli
popf
popa
mov
add
jmp
mov
lock
int3
inc
test
dec
dec
inc
lea
nop
jae
sbb
insb
pop
jnp
sbb
out
mov
pop
dec
add
scas
orb
dec
pop
push
xor
sahf
into
pop
cli
popf
jno
sbb
mov
fwait
sbbb
jne
adcl
sahf
movsl
outsb
repnz
jge
pop
lret
xor
mov
sub
call
inc
sbb
push
out
addr16
cmpsb
jae
inc
scas
cltd
lds
jo
inc
popa
call
insl
jno
cmpsb
pusha
cmpsl
jmp
jp
dec
ljmp
xor
xchg
pop
mov
outsb
popa
stc
pop
mov
add
and
fwait
test
jo
jmp
push
add
repz
inc
repz
enter
std
xor
mov
stos
aam
popl
sbb
cli
xchg
popa
xor
shlb
push
cmp
fmul
fwait
pop
add
fs
or
mov
movsb
dec
mov
movsb
push
cmp
jo
dec
xchg
xchg
push
xor
movsb
push
popa
pushf
mov
xchg
cmp
pop
xchg
push
mov
gs
push
push
repnz
je
xchg
push
popa
jle
dec
roll
dec
pop
in
sbb
frstor
adc
add
cmpsl
jnp
mov
scas
lret
push
dec
lcall
push
je
cwtl
mov
loopne
jno
xorb
pop
inc
rolb
mov
pushf
push
inc
cmc
pop
pop
dec
iret
pop
dec
push
cltd
lret
enter
mov
pop
popa
lods
jno
sbb
add
pop
push
bound
outsl
cwtl
loop
mov
mov
hlt
push
sub
cwtl
inc
shlb
push
push
pop
push
std
cwtl
sub
inc
cmp
pop
imul
mov
data16
js
insb
mov
mov
outsl
cmc
push
xchg
aaa
imul
iret
sub
js
insb
pop
test
cwtl
or
stos
pop
mov
push
xor
push
pop
push
pop
jp
pop
sahf
sub
mov
pop
xchg
js
xchg
nop
ljmp
in
pop
xor
addr16
jle
mov
cwtl
mov
jbe
les
push
jo
daa
repnz
loop
shll
cmpsb
pop
pop
mov
test
xchg
in
inc
arpl
dec
push
cltd
push
stc
andl
jl
dec
cmp
push
mov
push
push
xchg
dec
sbbl
addr16
xchg
fdivs
fldcw
bound
jp
push
shl
push
fwait
in
mov
push
rclb
xchg
inc
mov
repz
fcomps
push
xchg
jo
mov
push
imul
dec
js
cmp
fadd
andl
pop
mov
pop
push
jae
pop
les
lahf
aam
xchg
out
pop
fbstp
lahf
cmpsl
fidivl
push
andl
mov
js
push
fisubs
je
push
mov
and
fs
and
push
mov
mov
cwtl
outsb
inc
pop
inc
mov
xchg
mov
out
jge
outsb
bound
xchg
cwtl
sbb
mov
mov
aam
xchg
pop
sub
mov
shlb
push
jp
jmp
push
sub
mov
push
jno
inc
shr
insb
cwtl
xchg
add
ja
aad
nop
jle
mov
push
jbe
pop
into
inc
cmpsl
push
das
pop
mov
xchg
cmp
xor
bswap
andl
pop
jo
push
cmpsb
sarl
es
jecxz
push
push
push
inc
sar
test
outsb
daa
mov
ret
jns
add
ret
loopne
mov
pop
pop
shlb
enter
jmp
inc
jo
xor
out
cmp
ror
mov
insb
push
fisttpl
add
pop
xchg
pusha
out
xchg
jno
push
mov
push
mov
mov
pop
add
fcoml
fadds
fldt
fdivrs
mov
ret
xchg
pop
pusha
add
les
mov
push
xlat
movl
xorb
adc
repnz
lock
test
pop
xor
out
add
pop
mov
out
pop
and
xlat
dec
xchg
orb
gs
sbbb
out
jno
push
jmp
imul
hlt
sbb
stos
pop
popf
pop
xor
jns
mov
loop
add
mov
fidivrl
cwtl
pushf
mov
sbb
aam
bound
add
das
push
cmp
pop
shr
adc
dec
pop
fstl
pop
xchg
xchg
xor
sbb
jl
mov
test
jo
aas
xlat
ljmp
icebp
je
int3
out
stc
pop
jmp
mov
nop
sbb
rorl
mov
jo
out
mov
xchg
es
mov
adc
mov
sub
stos
mov
das
mov
xchg
loope
loope
fstps
pop
add
dec
ffree
pop
nop
pop
cli
push
fadds
push
mov
jp
in
sub
cltd
push
sub
pop
jo
stc
movsb
pop
sbb
arpl
neg
ljmp
pop
call
xchg
loope
cs
hlt
test
adc
divb
test
dec
ljmp
or
or
xlat
je
mov
shr
shll
inc
dec
pop
xor
sbb
inc
pushf
dec
mov
rclb
mov
repz
shll
pop
xorb
enter
je
add
or
frstor
movsb
mov
shrl
xchg
jno
add
push
push
or
ffreep
mov
mov
mov
mov
jb
and
sahf
shlb
pop
mov
mov
xchg
das
decl
cwtl
rcl
inc
xlat
cs
mov
push
lock
mov
out
and
js
loop
pop
rol
mulb
int
lea
cwtl
repnz
cmpsb
in
les
into
in
jmp
loope
adc
mov
fsubl
jno
fisubs
pop
inc
sar
addr16
xlat
mov
push
xchg
fs
fsts
popa
xchg
dec
out
pop
fstpl
addb
pop
shrb
bound
in
mov
jo
nop
jo
xchg
sbb
pop
imul
pop
jo
pop
push
push
test
add
data16
push
test
push
lods
addl
sbb
fs
add
pop
jle
imul
lahf
push
pop
in
mov
mov
push
gs
mov
jo
data16
push
push
imul
mov
jo
mov
xor
movb
data16
push
arpl
inc
pop
shl
int3
cmp
adc
dec
push
xor
jo
jno
sbbl
cld
pop
ret
xor
push
js
push
xchg
push
pop
not
jno
xchg
add
mov
movsb
loopne
add
shlb
pop
flds
inc
loopne
negb
rcr
push
cmpsb
push
rclb
iret
loopne
push
jecxz
repnz
jmp
push
xor
mov
pop
pop
jmp
jo
aam
pop
jb
cwtl
and
push
jge
aam
push
push
mov
pop
bound
sbb
pop
arpl
int3
in
and
out
jo
dec
mov
call
rcr
xchg
and
mov
pop
inc
subb
add
out
gs
xor
adc
xlat
dec
lahf
mov
push
nop
into
or
pop
in
xor
int3
in
hlt
je
xor
rcrl
or
callw
fucomp
insl
pop
jno
out
sub
jmp
jne
cmp
jle
les
jno
push
jbe
xchg
out
movsl
fisttps
loopne
mov
fcoms
ljmp
cmp
mov
xchg
ss
out
ja
cmp
icebp
ljmp
adc
add
hlt
cmp
lahf
mov
test
sbb
sbb
dec
repnz
arpl
mov
sbb
ljmp
out
mov
jmp
inc
sbb
inc
jae
mov
pop
frstor
mov
fadds
mov
lock
cmp
push
mov
ficoms
and
bound
fsubp
inc
repnz
icebp
je
lret
stc
dec
jo
add
xor
out
fxch
hlt
mov
fstpt
imul
in
aad
xchg
test
jno
lds
bound
in
cmpl
icebp
jp
in
aam
int
add
pop
xchg
jb
jo
pushf
pop
aas
sbb
pop
xorl
mov
pop
icebp
add
push
xchg
repnz
dec
dec
ja
adcb
jo
pop
loop
inc
xchg
sbb
fiaddl
in
lea
mov
mov
jl
pop
les
and
ss
inc
mov
pop
loop
pop
xchg
jl
jo
out
lods
ljmp
fcoms
decb
add
je
add
push
popf
or
add
hlt
mov
sbb
jle
bound
hlt
jo
mov
sti
push
sbb
popf
bnd
cltd
inc
xchg
push
xor
mov
cwtl
test
out
xchg
pop
addl
add
sbb
pop
dec
lea
cmp
xor
bound
mov
push
mov
notb
sbb
pusha
movsl
cmpsb
adc
test
cld
in
out
ret
dec
pop
fs
clc
pop
lock
mov
push
les
fldenv
push
jp
cmp
ss
je
sub
cltd
xchg
mov
imul
and
xchg
rcrl
mov
in
jmp
pop
lahf
jo
mov
push
cmpl
push
ljmp
xchg
and
and
add
iretw
cmp
push
clc
push
out
mov
mov
ret
loop
jo
xor
xchg
and
push
mov
std
lcall
repnz
hlt
imul
xor
rcrb
fbld
sarl
dec
test
push
cwtl
fcoms
popf
aam
int3
int3
inc
xchg
popf
sub
dec
aad
adc
adc
repnz
ljmp
mov
cmc
jg
into
test
in
call
xor
aam
and
or
lret
add
xchg
imul
enter
data16
arpl
push
nop
sub
push
loopne
movsb
rclb
dec
pop
or
jnp
ror
cmp
pop
in
mov
cmp
mov
mov
cmpb
xchg
mov
sbb
mov
pop
inc
pop
pop
ljmpw
pop
fs
add
cmpb
xorl
push
jp
icebp
mov
sbb
js
push
cmc
ds
add
sarl
ljmp
pop
pop
xor
les
xchg
cld
push
lret
push
push
xchg
rorl
sbb
inc
lea
jb
int
push
fs
pop
scas
mov
adc
les
ret
jo
xchg
mov
or
xchg
pop
inc
mov
scas
or
pop
pop
call
out
loopnew
jle
cmp
test
mov
jb
in
shrb
in
push
mov
pop
in
mov
push
std
mov
jns
pop
jo
testb
push
clc
cld
pop
pop
pop
jbe
loopne
test
push
jnp
mov
shr
in
mov
repnz
push
std
mov
stos
loopne
cwtl
in
add
pop
dec
cli
stc
push
cwtl
jb
mov
pop
in
fs
mov
jo
lock
pop
movups
iret
add
and
push
ljmp
movsl
and
adc
or
fs
iret
les
and
inc
dec
add
jb
je,pt
or
sbb
push
xor
inc
lock
dec
add
lock
push
shrb
adc
aaa
push
icebp
rcrb
sbb
pop
jb
lods
loop
movsb
iret
mov
imul
adc
mov
pop
stos
push
pop
xchg
jp
fs
mov
dec
cmc
ficoms
pop
repz
outsb
and
stos
pop
insb
pop
jp
lock
xor
cwtl
jo
stc
bnd
clc
sbb
jmp
clc
cmp
fdivs
mov
push
jns
mov
fmull
es
add
mov
add
bnd
or
jo
pop
mov
or
mov
push
nop
pop
scas
dec
aam
pop
inc
sbb
add
mov
mov
hlt
in
dec
and
adcl
scas
pop
ds
xchg
int
mov
mov
ja
adc
fsts
test
push
push
loope
push
enter
cltd
pop
sahf
mov
push
mov
inc
pushf
mov
jo
dec
inc
fstl
out
jl
stc
xchg
stos
push
jnp
insb
test
push
push
cs
xchg
xchg
push
orb
loop
mov
insb
jne
pop
xor
insb
cmpsb
imul
pop
pushf
fisubs
push
mov
shlb
sub
and
or
imul
je
sub
xor
mov
aaa
jns
push
mov
in
lods
outsb
test
lcall
pop
adc
and
pop
mov
mov
xchg
sbb
sub
push
sbb
rcrb
pushf
int3
mov
jno
lahf
jns
mov
es
insb
cmc
jnp
xchg
push
sbb
pop
cld
mov
mov
push
addr16
push
int
je
fs
and
jo
pinsrw
dec
jecxz
gs
sbb
repnz
ret
mov
cld
dec
cmc
cmpsb
fucom
jo
pop
mov
pop
push
dec
cmc
cmpsb
xchg
xchg
mov
jle
movsb
mov
hlt
dec
cltd
push
mov
pop
in
push
shl
push
sub
push
mov
jg
sahf
pop
fs
sahf
jecxz
je
add
in
test
sbb
orb
xlat
mov
aaa
jne
inc
addr16
pop
adc
add
push
sbb
push
add
test
mov
pop
pop
pop
test
hlt
mov
and
sbb
push
cmc
repnz
dec
lahf
cmpsl
mov
xor
add
stc
inc
jge
sub
testb
jl
jno
cmc
push
into
lahf
pcmpeqd
enter
popf
orb
push
loopne
pop
fcomps
shll
push
push
jne
pushaw
mov
dec
jb
inc
push
mov
pop
dec
cmc
icebp
inc
dec
shll
fs
dec
dec
notl
pop
xchg
dec
and
or
jp
push
cmp
sbb
push
mov
pop
adc
leave
bound
loop
push
jbe
jbe
fisubs
pop
data16
insb
iret
outsl
push
inc
rclb
push
leave
sub
enter
ja
andb
pop
fnsave
ret
inc
push
and
testl
push
pop
inc
xchg
fiaddl
cmpsb
das
loopne
jo
sbb
fistpl
arpl
push
enter
les
repnz
adc
dec
psubsw
scas
adc
mov
sar
fs
sbb
cs
test
sub
fwait
ss
fcomps
in
mov
mov
js
fmull
mull
xor
jecxz
sbb
cmp
mov
push
mov
jo
aad
pop
pop
lret
in
imulb
out
mov
jecxz
cmp
mov
cmpsb
fadds
fs
dec
subb
inc
fs
dec
pop
repnz
aam
test
mov
popf
mov
loop
jns
pop
sbb
shl
xchg
jmp
bnd
test
movsb
rolb
fwait
jo
push
lcall
jo
mov
fistpll
in
add
divb
mov
sub
pushf
adc
sub
pop
sub
pushf
or
adc
xchg
test
sbb
stos
ficoms
xor
sbb
mov
add
addr16
xor
pop
dec
rolb
mov
push
nop
add
cwtl
push
ret
scas
push
sub
lret
pop
int3
fwait
pop
cwtl
cs
mov
aad
pop
cmp
sbb
xchg
sarl
push
jns
js
mov
adc
fwait
mov
push
int
sbb
insb
cwtl
dec
jg
mov
sbb
js
xchg
mov
aas
outsb
movsb
movb
negl
mov
clc
out
or
sub
out
cmpsl
inc
fs
push
and
mov
jbe
push
pop
dec
and
sahf
out
xor
popf
je
dec
out
pop
nop
imul
push
psrad
dec
je
push
mov
push
andb
push
jo
loop
jb
pop
mov
mov
push
into
test
lahf
jle
in
fs
mov
cmc
ds
enter
push
add
jb
cmp
dec
mov
jo
push
adc
push
push
clc
inc
jmp
jo
push
jns
es
dec
aam
jne
pop
push
ja
sub
xchg
out
mov
cltd
jb
je
jo
jb
pop
call
push
sahf
sub
ja
mov
jne
mov
mov
xchg
jo
aam
mov
mov
pop
mov
mov
iret
cltd
jle
jo
xor
add
pop
adc
sbb
es
mov
dec
into
sbb
xor
lea
mov
xchg
ret
in
pop
rcrb
imul
andb
add
ret
iret
mov
mov
push
xchg
xor
fsubs
push
pop
loopne
mov
xor
cld
sub
cmp
movsl
jecxz
into
idivl
mulb
cmpsb
pop
mov
mov
leave
js
push
ja
insb
jb
xchg
mov
mov
loopne
mov
rcll
push
js
sbbb
xchg
mov
fs
bound
nop
lcallw
adc
mov
test
inc
mov
xchg
imul
sbb
mov
inc
dec
cmp
or
out
mov
or
cli
sbb
mov
mov
jl
or
mov
test
xchg
js
push
je
nop
mov
pop
mov
push
pushf
imul
add
xor
mov
cmp
cld
adc
jl
int3
cmp
add
cmpsl
div
mov
add
inc
jmp
mov
cmp
jmp
movsb
xor
loopne
inc
sub
pop
ljmp
and
adcb
mov
inc
iret
sbb
push
sbb
movsb
mov
stc
push
jbe
mov
jle
mov
adc
sahf
insb
mov
inc
cmp
adc
ret
out
rolb
add
sar
dec
incb
test
sub
out
pop
lea
sahf
dec
daa
aas
dec
testl
es
negb
loopne
loopne
gs
push
pop
push
popa
push
lahf
in
lods
and
cltd
or
jle
imul
dec
mov
inc
mov
les
dec
cmc
dec
pop
mov
int
jb
hlt
fidivs
es
lds
add
xchg
adc
andb
es
test
mov
dec
push
popa
xchg
cltd
js
push
mov
sbb
je
xor
mov
adc
xor
lahf
movsb
xor
mov
mov
in
lods
loopne
ret
sub
mov
test
mov
jnp
outsl
xchg
mov
add
test
nop
insb
mov
sbb
pop
jl
lock
pop
inc
subl
push
jb
xchg
cmp
mov
pop
enter
mov
pop
push
jb
xchg
xor
xchg
rcrb
fdivrs
jno
jb
andb
loopne
xor
cld
jb
pop
push
les
jno
jo
jo
mov
jno
lods
bound
jb
arpl
cmp
add
push
inc
xchg
mov
loopew
bound
mov
in
lods
jo
jb
xchg
sbb
lock
test
push
or
subb
cmp
pushf
insl
jno
jo
outsb
jb
xchg
sub
mov
and
bound
jb
adcl
jno
jo
jae
fcoml
fsubrs
loopne
xor
cld
xchg
jo
pop
icebp
sub
js
add
sbb
nop
jp
in
dec
jb
jnp
and
fs
outsl
cmp
xchg
mov
js
xor
jo
sub
icebp
jno
loopne
pop
sbb
test
pop
jecxz
and
mov
xlat
mov
xor
mov
in
cwtl
push
inc
jo
repz
dec
cltd
test
push
push
psubb
scas
ret
sub
lods
hlt
cmp
xor
mov
dec
repnz
jne
insl
je
push
jnp
add
mov
test
mov
sbb
adc
push
mov
or
lahf
sbb
pushf
fnsave
xchg
sbb
dec
xchg
jo
xorb
mov
cmpsl
mov
mov
push
gs
enter
ret
push
xchg
xchg
sarb
int3
stos
xchg
push
test
sbb
mov
clc
mov
sahf
lock
mov
sbb
lods
sbb
data16
inc
mov
and
dec
shr
test
mov
nop
jns
bound
hlt
adc
add
mov
and
call
push
push
mov
pop
pop
pop
pop
scas
jno
sbb
test
xchg
clc
pop
call
push
insb
mov
xchg
xor
mov
out
cmp
lods
sbb
and
in
call
sbb
mov
and
jae
in
pop
add
les
pushl
mov
rol
stos
ret
cmpsb
mov
jl
xchg
and
jp
pop
sbb
adc
outsb
cmp
popa
stc
fcoms
jbe
and
scas
mov
dec
pop
loopne
int
or
push
divl
xchg
cmp
in
cmp
and
dec
loopne
jae
push
imul
call
xor
insb
jl
xchg
test
fcomi
jp
bound
fcomi
xor
mov
xchg
negl
in
addr16
jns
imul
jno
and
or
fs
push
pop
mov
mov
inc
sbb
pushf
mov
fsub
test
negl
pop
enter
gs
ja
pop
shlb
scas
xchg
dec
loopne
jo
fsubp
pop
cmpsb
mov
jb
add
jl
mov
jbe
and
jecxz
sbb
push
mov
aad
fnstenv
test
xchg
push
and
test
push
push
jns
lods
in
pop
sbb
jmp
sahf
pop
mov
mov
je
xchg
or
push
mov
imul
test
and
dec
sbb
stos
or
and
in
sbb
adc
fidivs
push
inc
mov
pushf
cmpb
or
xchg
pop
sbb
mov
jmp
and
loopne
mov
fiaddl
arpl
xchg
and
js
mov
or
xchg
movsb
jb
sbb
cmp
gs
outsb
adc
out
xchg
xor
enter
cmc
jle
jp
push
outsl
push
cld
mov
test
pop
addl
xchg
or
pop
pushf
jecxz
out
xchg
sub
xchg
push
fcomps
fldcw
push
add
mov
jne
add
add
mov
or
jg
loop
mov
pushf
xor
sbb
pushf
mov
pop
sub
sbb
pushf
mov
cmp
les
aam
pushf
jne
sbb
ss
test
cmc
sbb
pushf
insl
dec
divl
cmpsb
mov
jns
pop
sbb
pop
push
adc
cwtl
sub
xchg
sbb
into
adc
sbb
enter
mov
mov
loop
hlt
lock
iret
jae
in
mov
mov
pop
jp
fnstenv
nop
lods
jg
fdivr
ss
mov
mov
xchg
sbb
jo
push
xor
icebp
and
mov
nop
imul
cmc
ret
out
sbb
jns
mov
sbb
mov
xor
sub
mov
inc
push
pop
cmp
adc
movsb
mov
add
or
pop
adc
sub
cmp
add
xchg
aam
adc
jl
mov
xchg
pop
inc
aam
xor
jns
mov
xor
xchg
adc
pop
call
push
adc
adc
and
jle
adc
jl
in
gs
dec
dec
sub
pop
mov
mov
adcb
lods
and
aas
jo
inc
in
ljmp
mov
js
push
cmc
inc
xor
xchg
rorl
divb
push
and
adcb
adc
pop
lods
andl
sbb
pop
fcomi
iret
cwtl
test
sbb
les
jo
or
fisubs
xchg
and
and
vpmacssww
ss
mov
test
cmp
hlt
mov
sbb
xlat
jo
or
xchg
push
jae
icebp
in
aad
les
pop
jle
pushf
into
pushf
xchg
aad
xchg
iret
nop
push
int
dec
push
or
fcoms
xchg
pushf
orb
lods
push
pushf
aad
push
mov
test
hlt
addr16
sub
daa
sbb
sbb
mov
jb
test
add
clc
mov
xchg
push
dec
cwtl
jl
xchg
cld
mov
dec
test
orb
fdivs
jg
and
dec
mov
mov
jno
push
gs
add
fdivl
xchg
inc
rorl
adc
pop
jno
aad
or
add
mov
mov
fcomi
fcompl
mov
in
jge
pop
mov
xor
sbb
mov
or
mov
mov
or
and
xor
sbb
adc
mov
rcr
pop
push
adc
sbb
jno
and
mov
je
or
negl
loopne
xchg
lods
jo
lahf
mov
and
hlt
mov
fs
insb
cld
xchg
test
or
je
mov
fnstenv
lahf
sbb
or
sbb
mov
pushf
add
shr
cwtl
insb
mov
fdiv
or
push
fstpt
mov
fmul
test
negl
inc
ficompl
lock
adc
adc
pop
in
andl
int3
bound
enter
pop
add
mov
ret
cld
jmp
and
iret
mov
cltd
je
or
int3
cmp
push
pop
jno
jb
cmp
lcall
push
ret
mov
fidivrs
sti
mov
jno
push
fcomps
xchg
cld
pushf
inc
insb
cwtl
or
push
jno
push
fcmovb
mov
pop
jno
out
loop
mov
or
imul
cwtl
pop
test
les
in
cwtl
cmp
sahf
push
lock
mov
arpl
mov
adc
jb
xchg
adcl
loopne
jne
jmp
and
out
enter
jo
lahf
loop
push
lret
andb
ret
adc
enter
add
pop
xor
push
push
jo
loopne
cmpsb
mov
jns
pop
sbb
jg
adc
jo
adc
cwtl
sbb
xchg
sbb
into
pushf
mov
int3
xchg
sbb
mov
aam
lock
in
mov
push
arpl
leave
inc
lods
sbb
and
lods
mov
negl
xor
dec
loopne
ficomps
mov
mov
jnp
jns
mov
cmp
xor
or
cmpsb
pop
sbb
icebp
enter
pop
or
inc
cmc
sbb
pop
fsubl
mov
jnp
mov
push
mov
clc
pop
in
sahf
add
pop
mov
mov
and
fsubl
xchg
adc
and
lcall
fldt
rcrb
sbb
xchg
mov
dec
pop
xor
mov
mov
and
lods
sbb
jne
or
sbb
mov
dec
mov
lock
add
popf
or
jl
mov
cwtl
mov
add
je
scas
roll
jb
xchg
jmp
pop
mov
mov
sbb
in
jbe
mov
mov
std
sbb
pushf
jl
enter
sbb
movsl
jo
mov
jle
sbb
fmull
adc
clc
mov
mov
enter
jnp
sbb
hlt
inc
into
jle
add
push
fwait
sbb
cwtl
mov
lahf
mov
sbb
gs
pushf
orb
shlb
pop
jo
ficoml
mov
push
push
addr16
xorb
xor
lods
mov
mov
pop
xor
fdiv
pop
adc
cmp
sbb
mov
aam
mov
mov
sbb
inc
or
clc
pop
add
fs
sbb
jno
add
cmp
jp
in
aam
jg
fsubs
icebp
jbe
xchg
sbb
push
mov
mov
sub
cmp
sub
sbb
std
movsb
pop
mov
mov
int3
cltd
push
inc
sbb
mov
clc
xchg
std
xchg
adc
lcall
hlt
rcrb
cld
sbb
mov
mov
jno
pop
mov
xor
sbb
pop
lret
in
mov
pop
xchg
xchg
and
movsl
mov
sbbl
sbb
into
xor
pushf
test
jo
addr16
adc
jle
jp
push
rcrb
icebp
aam
pop
mov
nop
pop
pop
fdivl
cmp
into
rcl
jb
jg
mov
scas
pop
jg
xchg
sbb
loope
pushf
insl
lock
pop
inc
je
out
insb
ret
subl
sbb
jo
loopne
inc
loope
mov
xor
lods
pop
adc
pop
mov
adc
addb
out
out
dec
adcb
nop
out
fs
bound
push
add
add
or
mov
pop
xchg
clc
pushaw
sub
and
rorb
popf
add
push
popa
pusha
adc
test
rcrl
insb
jno
ss
lcall
push
inc
sbb
popa
out
and
leave
aad
push
push
js
xchg
xor
jae
push
jno
inc
adcb
fcomip
aam
rolb
lock
add
shrl
push
pop
lock
mov
adc
mov
dec
je
clc
xchg
mov
jb
inc
bound
push
popa
lock
outsb
int3
fwait
push
icebp
dec
hlt
insb
loop
fcomps
adc
int3
mov
in
add
je
cwtl
in
test
add
push
cwtl
out
dec
pop
hlt
enter
rcrb
jmp
ljmp
rol
mov
push
xor
push
xor
or
xor
ss
loopne
aaa
dec
xor
cwtl
pop
adc
int3
cld
fisubl
sub
cmp
jo
push
mov
ficoml
int3
sub
push
pop
addr16
icebp
add
push
mov
mov
xor
add
push
repnz
lea
push
sub
push
push
cmc
xor
notl
arpl
mov
sar
push
cli
outsl
jo
fs
xchg
sti
sbb
adc
mov
fldcw
push
subl
inc
sub
adc
jae
pop
xchg
xchg
pop
cmpsb
cmp
clc
je
cwtl
add
loopew
bound
mov
jb
xchg
addb
xchg
push
fcomip
in
enter
fisttps
subb
roll
arpl
aad
imul
xchg
mov
jp
divl
nop
icebp
sbb
push
mov
mov
fistpll
mov
mov
add
xor
xchg
push
cwtl
xchg
dec
subb
xchg
mov
xchg
push
rclb
insl
jno
jae
xor
jnp
push
cwtl
mov
mov
sub
fwait
push
cwtl
pushf
dec
mov
cmpsb
popf
push
jae
xor
pop
sub
cmpsb
lahf
push
shll
and
ja
adc
sbb
xchg
lock
cwtl
mov
push
andb
stos
sbb
movsl
push
and
cmpsb
push
push
roll
or
push
push
mov
mov
bound
jge
jne
dec
cmpsb
je
sbb
icebp
mov
jb
xchg
jbe
cwtl
jbe
rcrb
ja
sub
bound
mov
fisttpll
pop
arpl
xor
jnp
push
icebp
mov
mov
mov
dec
rcrb
movsb
push
jle
sub
sbb
pop
arpl
cwtl
jnp
push
push
shl
sub
int3
dec
in
push
or
push
push
mov
fisttpl
test
adc
push
push
mov
xchg
scas
cld
adc
mov
sub
shlb
inc
test
xchg
negl
xor
cmp
xchg
mov
push
pop
push
push
fisttpl
xor
pop
nop
pop
sti
jne
in
push
push
loopne
es
popa
mov
jmp
push
jo
xor
cmp
lret
push
adcb
cmpsb
pop
jo
insb
pop
mov
adc
mov
jo
enter
fadds
pop
push
sbb
xlat
xor
dec
jno
pop
mov
push
push
arpl
gs
mov
nop
fisubl
push
lahf
mov
outsb
insb
mov
arpl
outsb
add
jae
outsl
adc
mov
or
js
enter
fstl
sarl
xor
ja
nop
mov
mov
sbb
jo
xchg
jp
and
loopne
add
hlt
out
inc
pop
cmc
js
pop
pop
addb
pop
add
cltd
xchg
push
jb
mov
ss
test
pop
icebp
js
pop
je
pop
jl
pop
xlat
lock
inc
pop
outsb
xchg
pop
sbb
leave
jo
pop
jns
je
bound
xlat
lock
outsb
xchg
data16
push
push
enter
lock
inc
insl
out
cltd
outsb
pop
sbb
outsb
xchg
sbbl
fwait
pop
jns
je
jne
pop
jbe
lock
js
xchg
jns
jp
jnp
cmpl
jg
inc
nop
out
xchg
xchg
sbb
pop
addl
les
jle
mov
cmpsl
push
int3
xchg
mov
icebp
mov
jno
addl
mov
adc
sbb
call
loopne
xchg
loope
call
mov
rolb
fmul
and
loope
xor
hlt
xchg
adc
mov
jg
pop
jns
stc
dec
pushf
jmp
lods
sub
scas
jb
pop
jnp
inc
jb
add
jl
mov
inc
int3
fdivs
dec
mov
adc
jmp
mov
xor
pushf
subl
add
adc
lods
test
dec
in
enter
cltd
pushf
mov
jmp
in
pop
fadd
mov
push
imul
mov
mov
stc
cmc
xchg
and
pop
add
stc
in
in
sub
mov
add
and
sbb
jns
icebp
mov
mul
cwtl
add
push
jns
sbb
pop
cltd
xchg
sbb
sub
mov
fsubr
test
lock
cmp
cltd
push
js
les
jmp
jmp
fmuls
fldcw
mov
imul
pop
dec
jmp
arpl
pop
xchg
push
mov
movsb
mov
push
mov
rcrb
or
pop
cltd
cmpsb
xchg
xchg
rol
dec
test
sahf
les
mov
push
imul
mov
imul
shrl
mov
mov
ljmp
sahf
loopne
fs
rclb
sbb
les
int
add
mov
fcomps
mov
das
lcall
cmp
negl
dec
out
inc
xor
add
xorb
adc
mov
mov
out
test
shr
or
push
adc
mov
push
mov
xor
xor
popa
ds
lahf
ret
add
repz
cmp
enter
xchg
xchg
and
push
cld
insb
addl
test
mov
jnp
sub
fs
in
ja
in
int
mov
or
sub
insb
negb
lcall
pop
mov
xchg
rcll
push
adc
shll
mov
hlt
les
fbstp
lahf
in
pop
popa
hlt
jno
mov
mov
fs
mov
mov
cmpsb
cltd
shll
pop
dec
sub
push
mov
arpl
push
cmpsl
call
mov
insb
push
push
mov
jecxz
push
jecxz
lahf
cwtl
xor
jecxz
pop
ror
je
js
sub
outsl
cmpsl
mov
pusha
push
cld
arpl
dec
xor
pop
mov
dec
scas
mov
inc
ds
and
and
ss
sti
jnp
sahf
sub
imul
neg
xchg
js
pop
js
inc
inc
jns
cltd
jns
loopne
int3
adc
add
fmull
adc
subb
inc
data16
xchg
cltd
sbb
sets
push
js
lods
arpl
cmpsl
jo
rorl
pop
or
rclb
aaa
mulb
mov
fs
mov
mov
dec
and
mov
push
jae
adc
jns
and
ret
movsb
jp
pop
addr16
cmp
mov
mov
gs
dec
inc
fnstcw
cmp
je
jl
call
push
jno
lods
pop
sbb
subl
loopne
bound
cltd
mov
in
in
or
jns
sbb
pop
in
push
and
xor
add
and
and
or
fsubs
hlt
movsb
je
cmp
mov
adc
mov
in
mov
cs
clc
add
jmp
jmp
in
pusha
mov
pop
lea
jns
ret
inc
pop
int3
gs
jns
out
sbb
inc
gs
jo
cld
je
cmc
outsl
aad
xchg
data16
adc
xchg
mov
sbb
in
dec
mov
mov
pop
cmpsb
addr16
push
push
cltd
mov
fs
in
test
lds
and
ret
test
xor
das
xchg
and
shl
shrb
sub
rclb
add
imul
stos
hlt
cmp
jns
mov
js
pop
scas
arpl
bound
imul
fdivrs
push
push
mov
lock
jo
mov
stos
dec
push
sti
sbb
mov
je
mov
inc
lods
push
mull
ret
mov
ja
rorb
nop
insl
mov
outsb
repnz
adc
imul
jg
fs
cmp
mov
xchg
jno
mov
cltd
xchg
mov
lods
pop
aam
sahf
sub
sbb
mov
jo
inc
xor
mov
push
mov
sub
and
push
pop
xor
xchg
js
out
lds
fnsave
cs
cmp
insl
loope
mov
sahf
js
cwtl
mov
jb
rclb
in
fcmovu
movsb
mov
pop
sbb
mov
fimull
sub
in
jl
cmpsb
mov
outsl
js
push
movsl
inc
cwtl
push
mov
in
push
pop
js
dec
jge
sbb
cld
enter
nop
add
adc
addr16
adc
jo
imul
pop
cwtl
mov
jl
jecxz
stos
add
std
imul
call
lea
sar
and
les
jb
aad
push
nop
call
add
adc
and
jl
imul
jae
clc
cmp
sahf
test
jl
xor
cmpsl
out
jnp
cmpsb
in
add
pop
cltd
inc
rcll
fnstenv
loop
les
push
xchg
pushf
or
clc
orl
or
in
cmp
nop
popa
js
jns
int3
cmpl
adc
mov
mov
xor
into
jp
mov
xor
clc
add
js
and
gs
jl
adc
inc
ficompl
adc
cmp
movsb
rorb
ret
in
fisttpl
mov
and
sub
pop
push
test
cltd
mov
or
loopne
and
ret
inc
je
add
jg
mov
mov
mov
pop
cltd
push
xor
mov
hlt
adc
fwait
add
jns
hlt
pop
out
scas
test
lds
jp
mov
inc
out
dec
in
jp
js
and
or
jp
mov
xor
add
sub
or
fs
movsb
pop
jg
cltd
jne
cmpsl
je
jl
add
orl
jns
lds
subl
xchg
xor
push
js
xchg
jg
cmc
push
cmpsl
data16
dec
sarb
ret
xchg
or
sbb
les
push
nop
jle
inc
shlb
push
sahf
je
push
push
pop
leave
jp
cltd
mov
pop
int
mov
cltd
pop
xor
mov
mov
pop
loope
adc
mov
sub
or
cwtl
leave
mov
js
jns
scas
add
test
adc
jo
rclb
sbb
cs
mov
xchg
ret
aad
push
cmp
cltd
xor
mov
mov
jge
xchg
add
xchg
js
mov
push
xchg
jno
xor
push
loop
mov
insb
pop
pop
push
popa
dec
ret
push
stc
je
cwtl
adc
mov
xlat
mov
pop
fwait
sbb
jns
enter
push
add
mov
aaa
mov
and
mov
mov
xor
fsubl
hlt
push
mov
lock
lods
push
mov
mov
fs
lods
rcrl
out
or
mov
xchg
inc
popa
mov
or
push
push
nop
mov
sub
xchg
jbe
xor
js
imul
xchg
cmp
jns
sub
call
rcrl
pop
nop
mov
xchg
sub
int3
dec
add
pop
nop
dec
shl
push
cld
cmp
mov
push
xchg
adc
xchg
xchg
mov
les
and
push
popa
movsl
shrb
popa
pop
nop
stos
mov
nop
cwtl
sar
ret
rcrl
xchg
test
flds
cmp
nop
jmp
xchg
push
insb
pop
sbbb
sub
jle
jecxz
pushf
loop
xchg
mov
xchg
test
mov
jns
pop
clc
pop
push
cmp
lds
push
fs
push
pop
xchg
push
out
jo
repz
lret
pop
js
xchg
or
xor
loop
push
fs
shll
mov
or
test
inc
cmp
push
cmc
adc
ret
jl
shlb
sbbb
cmpb
add
and
mov
lret
mov
inc
mov
mov
xchg
cmc
push
mov
push
lcall
insb
int3
cmp
bound
sub
in
mov
jns
out
clc
aad
jns
adc
mov
rcll
test
push
xchg
or
xchg
pop
jo
fbstp
jecxz
cmp
mov
in
cli
test
rclb
xchg
mov
mov
lcall
mov
dec
xchg
aad
mov
push
mov
adc
fs
adc
xchg
pop
push
test
jmp
fldenv
inc
repnz
gs
jnp
xchg
jne
jl
and
mov
or
sbbl
movsb
mov
mov
pop
jo
mov
and
mov
xorb
jo
push
aam
jnp
xchg
sbb
sbb
pop
xchg
adc
add
pop
scas
jge
sub
push
xchg
xor
lock
xchg
jg
int
data16
rorl
insb
hlt
je
nop
pop
push
pop
outsl
push
xchg
xorb
mulb
pop
nop
sub
mov
rcrb
mov
mov
bound
cmp
sbb
mov
aam
inc
xorl
loopne
lock
lock
add
push
nop
cmc
adc
jl
mov
pop
mov
testb
cmp
mov
mov
xor
add
shlb
mov
xor
ss
mov
fisubl
adc
push
cmp
mov
and
mov
je
pop
pop
xchg
stos
xor
fisubs
xchg
sbbb
mov
rorb
or
add
loopne
sbb
mov
mov
sub
mov
aam
xchg
jo
icebp
xor
xchg
leave
fmull
inc
mov
insb
gs
loopne
imul
movsl
test
frstor
jno
xchg
stc
mov
or
aad
rorl
test
fxch
mov
and
xchg
mov
ret
mov
in
insb
jecxz
adc
push
test
in
pushf
pop
pop
imul
push
repz
incb
push
insl
nop
and
mov
xchg
pop
pop
fnstcw
mov
cmp
mov
add
mov
pop
or
adc
leave
test
cmp
jl
mov
clc
loope
sar
and
fwait
ret
testl
xor
mov
in
xchg
mov
xchg
mov
test
in
aam
stc
pop
xchg
mov
insl
outsl
jno
shlb
and
bound
mov
and
fcmove
gs
mov
fnstenv
loopne
mov
cwtl
inc
ret
or
cmp
jno
insb
nop
shll
jne
mov
fs
push
arpl
insb
mov
mov
add
cmpsb
std
xchg
add
cltd
mov
xchg
clc
insl
jno
popf
ror
push
xchg
loope
sbb
call
in
andb
jb
bound
loopne
pop
push
mov
add
push
pop
jnp
ror
mov
repz
mov
loopne
push
nop
pop
bound
xchg
test
pop
xchg
dec
xchg
pop
mov
gs
dec
jl
fcompl
nop
sbb
jns
popa
shlb
enter
jns
cmp
add
mov
mov
out
repnz
add
ror
cmp
jns
cmpsl
xchg
movsb
adc
xchg
insb
jo
fdivr
jnp
sahf
insb
pushf
pop
mov
sub
nop
fbld
lock
bound
sahf
insb
je
dec
insl
mov
test
push
in
cmp
and
push
icebp
insb
lahf
fsub
nop
jns
lock
addr16
cmpsl
add
lods
push
xor
into
int
xor
fs
lods
jbe
cli
push
jle
std
push
xor
cmc
xchg
shlb
jl
lock
call
xchg
adc
bound
pusha
mov
arpl
xchg
outsb
addr16
mov
fsubr
js
rcrb
push
inc
jmp
pushf
js
push
xor
hlt
test
clc
fs
nop
and
adc
adc
mov
test
lock
cmp
clc
andb
sub
add
adc
imul
ret
data16
mov
jmp
std
mov
nop
addb
dec
mov
push
mov
pop
test
mov
sub
movsb
pop
lock
mov
jp
inc
xor
idivl
mov
cwtl
nop
pop
enter
jne
cltd
jge
xor
mov
mov
push
nop
and
shrb
int
cbtw
and
stc
pushf
push
pop
lds
shrb
fstpl
dec
xor
sbb
dec
or
lds
xor
push
xchg
sbb
xor
repnz
insb
push
add
dec
gs
jne
mov
hlt
in
je
out
mov
fs
loopne
inc
and
outsb
hlt
pop
mov
and
add
movsb
mov
push
pop
mov
xchg
adc
sub
lcallw
imul
pop
push
mov
jge
push
or
sbb
push
push
pop
push
test
pop
pop
gs
ja
out
pushf
jl
mov
cs
inc
pusha
or
arpl
gs
inc
mov
xchg
mov
mov
jo
aad
sub
push
adc
sbb
orl
cltd
aam
insb
test
xor
pop
push
test
cltd
sub
test
pop
jb
mov
mov
jbe
fcoms
rclb
call
test
pop
jo
mov
push
xchg
add
addr16
popf
repnz
xchg
movsb
pop
mov
pop
xchg
in
movsb
mov
mov
xor
and
nop
jns
bound
pop
sub
in
imul
loope
cmp
cmpl
mov
xor
aas
cmpsl
fdivp
hlt
je
aam
jle
enter
push
cmp
pop
ds
sub
cmp
mov
jns
fs
mov
ret
mov
mov
push
sarb
jno
mov
popf
jg
movsl
push
insb
sbbb
add
inc
ljmp
enter
jo
leave
mov
or
sbb
pop
push
frstor
mov
nop
pop
outsb
imul
mov
int
inc
adc
mov
push
sub
test
cmp
out
lods
stos
mov
adc
dec
xor
movsb
rolb
in
in
sbb
inc
mov
mov
mov
les
imul
arpl
jp
je
sbbb
jmp
dec
pop
shrb
dec
lods
loopne
int3
pop
add
nop
mov
les
rolb
sarl
cwtl
addr16
aad
cmpsb
in
mov
sub
cmp
lods
cwtl
add
insl
adcb
jl
cwtl
jno
aad
adc
ss
in
mov
sub
lea
call
pushf
and
add
ret
mov
inc
xor
shll
pop
cltd
mov
xchg
bound
push
js
repnz
aam
add
cwtl
insl
adc
aaa
mov
and
push
xor
les
test
push
in
stc
fsubrl
sub
mov
add
test
xchg
rcl
mov
push
fs
pop
push
pop
jbe
sarb
xchg
adc
mov
ja
bsf
fnstcw
jae
jo
mov
sbb
call
pushf
fcmovnbe
insl
jo
mov
neg
xor
jle
cmp
jnp
fdivp
dec
sbb
jne
push
clc
jl
stos
push
test
pop
lock
sahf
in
hlt
enter
loopne
xchg
mov
jb
out
jmp
leave
mov
adc
loopne
fsubrs
ja
sub
sbb
imul
aaa
cwtl
xchg
jne
data16
subl
push
sub
out
mov
lods
test
push
sub
pushl
pop
jl
mov
cmp
mov
push
pop
js
cwtl
cmc
jmp
aam
andb
inc
jns
lcall
pusha
movsb
decb
nop
cltd
inc
les
push
push
mov
mov
jge
xor
jns
or
inc
dec
rclb
pop
nop
std
lods
mov
and
push
jno
jl
jb
mov
addl
icebp
mov
add
mov
movsl
mov
jmp
push
jb
xchg
mov
fsubs
cwtl
jno
sub
mov
jbe
xchg
pop
xchg
or
xor
pop
mov
fsubrl
rolb
nop
jle
testl
jb
lods
out
jmp
lods
sarb
aam
fsubrs
pusha
cmp
xchg
test
ljmp
enter
insb
and
test
sahf
push
loop
nop
pop
shr
hlt
repnz
ja
repz
call
adc
imul
scas
insb
rcr
nop
test
mov
mov
sbbl
lock
mov
aad
cltd
jo
push
pop
nop
int3
sbb
pop
test
jo
insb
aam
and
xor
mov
jne
cltd
mov
ljmp
xchg
mov
cwtl
push
insb
lds
mov
cltd
cmpsl
xchg
in
bound
lock
lock
adc
push
mov
jb
inc
popf
sbb
xor
xchg
incl
push
add
mov
enter
sub
xchg
push
mov
mov
mov
mov
jns
pusha
ja
mov
jae
jo
sbb
ret
insb
sub
add
rorl
loop
inc
cwtl
lret
jo
push
arpl
pop
pop
jb
loopne
clc
rcll
jb
in
add
push
movsb
xchg
inc
pop
mov
jge
ljmp
shrb
pop
push
xor
shlb
shll
adc
fstpl
fdivrs
push
or
arpl
leave
aam
pop
cmp
jl
or
xchg
inc
sti
js
xchg
pop
fidivrl
fs
inc
jne
sub
mov
int3
int3
aad
xor
insb
flds
in
xchg
pop
cmc
adc
push
addl
out
ljmp
pushf
cmp
dec
cmc
mov
or
addb
or
je
rolb
mov
jbe
nop
dec
pop
cwtl
cmp
mov
push
push
adcb
ret
insb
stos
jbe
test
pop
enter
sub
add
addr16
dec
popf
repnz
mov
push
mov
out
mov
js
int3
push
out
repz
div
mov
jne
insb
out
add
out
loope
sti
movsb
mov
pop
cmp
fistpl
xchg
lock
cwtl
js
adc
xor
mov
push
pushf
pop
add
pop
data16
mov
icebp
in
mov
push
inc
test
ret
mov
ret
lret
mov
pop
add
rolb
cwtl
rcll
mov
les
rclb
je
aam
fnstenv
mov
nop
adc
lea
dec
jne
pop
jp
mov
fldl
and
ffreep
inc
fcomps
sbb
inc
lock
jg
pop
push
push
jecxz
addr16
mov
sahf
pushf
push
fldenv
icebp
jl
aaa
lahf
cld
cmp
cmp
jp
das
loop
aam
sbb
bound
fldcw
fs
clc
or
mov
push
jne
test
xchg
nop
test
imul
mov
dec
add
rcll
outsb
rcrb
ror
cld
add
mov
ret
mov
dec
sbb
and
jp
sbbb
add
jne
lds
js
jp
jb
and
mov
jg
cmp
ljmp
jns
jecxz
fidivl
mov
nop
or
fstps
push
xchg
fs
push
mov
jne
mov
clc
fs
jb
jb
das
fmul
fadds
mov
arpl
jo
rcr
fwait
adc
or
adc
fld1
xchg
push
lods
data16
ret
push
nop
jno
cwtl
les
outsl
jns
push
jl
mov
test
push
test
rcll
adc
sahf
mov
adc
and
aam
jmp
pop
hlt
call
movsb
addb
jo
in
cs
cmp
mov
mov
inc
cld
js
stc
push
adc
enter
cwtl
push
add
rolb
ja
test
pop
sbb
popf
shll
subl
stc
divl
gs
push
add
jno
loop,pn
jo
hlt
js
lock
sarb
repz
aaa
lock
cmc
lock
shll
hlt
mov
sub
test
jmp
sbb
sahf
cli
insb
shr
sbb
fsubs
cmp
into
lahf
cmp
xchg
pop
movsb
clc
leave
scas
push
mov
jl
mov
mov
insl
xor
cli
inc
dec
cs
xchg
shlb
test
int
fwait
add
pop
push
nop
int3
pop
mov
fisubl
lock
test
jo
dec
mov
cld
jl
fs
nop
mov
sbb
push
arpl
je
cli
jno
push
add
aad
lahf
cltd
arpl
cmpsl
add
jo
nop
lods
xchg
push
lods
popf
ret
insb
mov
nop
dec
mov
insb
xchg
inc
ret
fwait
in
mov
mov
nop
add
pop
aam
pushf
sbb
mov
sbb
ficoml
insb
mov
sbb
xchg
mov
repnz
lock
nop
jns
dec
js
movsw
mov
test
test
mov
int
pushf
mov
jbe
push
fs
jl
cmp
sahf
mov
ficomps
movsl
cmpsl
xlat
andb
jae
movsb
repnz
xchg
mov
and
lahf
jge
in
out
xchg
stc
data16
xor
sbb
int3
orl
nop
jo
insl
ret
or
jnp
mov
inc
test
rcl
mov
hlt
push
mov
outsl
sbb
cld
and
shlb
insb
push
mov
out
testb
mov
jo
push
push
nop
adc
sbb
stos
in
mov
jae
mov
nop
mov
test
std
xchg
test
ja
mov
pop
imul
test
inc
std
mov
in
push
xor
enter
xor
cmpsl
mov
push
insb
pop
shlb
pop
pop
lea
push
xor
stos
xor
scas
mov
ret
ret
adc
jge
les
or
mov
add
leave
fs
sarb
adc
add
fs
lods
bound
mov
int3
mov
sub
pop
push
nop
add
jo
into
das
jle
lds
adc
test
jns
add
mov
push
pop
aam
iret
inc
insl
fmul
push
inc
rcrb
js
jnp
jb
pop
scas
imul
add
addr16
add
hlt
nop
mov
test
mov
jmp
mov
dec
lret
in
dec
fsts
jnp
addb
lds
out
push
js
mov
je
in
data16
mov
jbe
pop
repz
lret
push
add
fcoms
mov
jl
test
push
fsubs
add
out
lea
xor
mov
mov
dec
cmpsb
xor
insb
sub
arpl
sbb
push
and
mov
loop
push
js
nop
rcl
mov
bound
jb
fs
daa
xchg
xchg
movsb
fs
gs
and
inc
loop
aam
dec
addr16
and
lock
insb
mov
jnp
pop
sub
pop
sbb
rolb
mov
loope
xor
add
mov
subl
lock
jbe
ja
pop
in
adcl
insb
loopne
icebp
clc
aad
iret
sarb
pushf
push
aam
jns
mov
js
cwtl
test
push
mov
test
scas
jp
test
pop
sahf
mov
daa
test
popf
je
loope
in
mov
ja
jecxz
rorl
lods
mov
hlt
xchg
jl
jne
mov
movsb
adc
mov
sbbl
lock
lock
iret
ss
rolb
lcall
aas
mov
jmp
and
ja
push
ljmp
xchg
and
subb
xchg
mov
and
inc
outsb
mov
jg
xchg
outsb
orb
shll
in
orb
sarb
fs
push
rcl
dec
xchg
cwtl
jb
das
inc
mov
push
and
cwtl
test
jnp
xchg
sti
push
je
adc
addb
dec
mov
imul
push
sbb
loopne
or
jb
xchg
fisubrs
cltd
adc
icebp
pop
nop
push
add
int3
sbb
lcall
test
jmp
mov
nop
rorl
faddl
clc
sahf
jle
lods
lods
mov
jns
addb
in
lahf
mov
call
push
sbb
xor
inc
inc
jge
inc
js
test
clc
pop
enter
xchg
push
jb
je
cmp
pushf
jnp
add
loop
fistpll
shr
adc
lret
sub
subb
adc
cld
fdivrp
in
loope
nop
popf
adc
aaa
bound
les
fistps
mov
xchg
loop
jle
and
cmp
fcoml
ret
mov
test
cwtl
mov
shll
mov
push
pop
cwtl
lcall
pop
cwtl
xchg
cmp
imul
and
xchg
or
lock
jle
leave
movsl
jns
mov
mov
les
mov
adcb
nop
mov
adcb
jg
pop
nop
pop
push
aad
jbe
pushf
insl
mov
sub
repnz
adc
pop
dec
icebp
stos
testl
xor
cmpsb
inc
mov
stc
pop
pop
nop
mov
cmpsl
add
fs
mov
add
mov
cmp
stos
dec
negb
sbb
fs
cmp
sbb
xor
sub
push
daa
xchg
xor
std
mov
pop
jl
test
stos
fdivrs
shlb
shlb
lock
push
loope
int
fmull
test
push
xor
test
les
pop
lods
xchg
stos
mov
jo
pushf
sub
daa
push
adc
sub
stos
into
outsl
jg
cmp
jmp
enter
mov
pop
shrb
xchg
push
mov
aam
addl
jbe
test
movsb
mov
insb
jns
test
push
jno
rol
inc
push
loope
pop
test
jo
mov
pop
iret
sbb
adc
shlb
jl
nop
clc
data16
fs
je
jg
clc
stos
inc
in
jb
mov
enter
mov
ret
clc
ja
andb
cmpb
mov
inc
jge
popa
push
sbb
enter
lock
inc
aaa
pop
mov
movsl
in
adcb
push
pop
jle
ret
lret
jg
pop
jge
mov
mov
dec
xchg
jbe
mov
cmp
mov
adc
add
loopne
sub
data16
xor
popf
jbe
mov
scas
in
movsb
cmp
pushf
fs
aad
cwtl
dec
mov
int
mov
cwtl
nop
lret
cs
outsb
xchg
mov
mov
test
lock
and
insb
call
es
rorb
xchg
ret
adc
clc
dec
add
xchg
orl
aam
mov
sub
pushf
subl
loop
mov
or
or
mov
outsb
hlt
subb
shrb
das
push
in
loopne
and
rcrb
mov
pop
sub
les
clc
and
sub
ja
arpl
push
ret
mov
int
leave
movsb
xchg
xorl
push
adc
je
mov
dec
out
add
sbb
jbe
xorb
roll
xchg
js
pop
adc
jbe
in
push
cmp
dec
cmp
insb
mov
and
mov
loopne
lcall
jl
cmp
fs
leave
rclb
xor
xor
push
shrl
fsubrs
mov
fs
cwtl
dec
adc
stc
sub
sbb
fs
push
mov
scas
inc
add
rcl
aas
movsl
jp
mov
shr
push
test
mov
jl
mov
data16
lock
jge
pop
and
sarl
mov
xchg
out
sbb
xchg
adc
xorl
lcall
je
mov
pop
xchg
pop
scas
or
scas
roll
xor
or
pushl
jns
or
mov
out
pop
cmp
gs
push
imul
and
push
add
test
ja
mov
inc
bound
mov
fcmovbe
xchg
test
test
lods
jecxz
imul
nop
imul
stos
mov
fs
add
xchg
add
loopne
mov
inc
mov
push
push
push
mov
or
mov
adc
fisttpl
jns
ret
push
into
fdivs
fcmove
jmp
or
and
cmpb
gs
mov
ret
push
in
xor
cmpb
test
sbbb
imul
mov
call
push
fs
fsubr
fildll
mov
pop
fadds
mov
jmp
inc
imul
lock
sbb
ljmp
enter
shll
xchg
lahf
or
mov
jo
pop
adc
nop
mov
cmp
mov
fiaddl
es
js
loopne
push
pusha
mov
mov
adc
lock
insb
popf
lods
xchg
add
pop
cmpb
mov
pop
clc
les
pop
out
push
inc
jb
sbb
pop
popa
pop
mov
ret
shll
hlt
pop
insb
nop
test
xor
push
nop
lret
add
mov
sarb
jns
mov
add
jl
dec
fdivrp
sub
adcb
dec
vmread
xchg
fwait
mov
in
daa
clc
adc
dec
fdivr
inc
jge
scas
dec
xor
pop
mov
in
gs
cmp
pushf
into
and
fcmovbe
shr
insb
fisttpll
xchg
lods
je
and
addl
aam
mov
mov
stos
mov
pushf
fcmove
sahf
sub
xchg
mov
int3
sbb
push
int
xchg
call
jl
adc
mov
lods
fcoml
jo
push
mov
mov
mov
jbe
mov
fmuls
sbb
sbb
dec
mov
jge
push
fwait
mov
nop
js
enter
sarb
nop
js
pop
lret
inc
mov
jae
shrb
shl
imul
aad
lea
xchg
fstpt
movsl
mov
hlt
mov
repz
mov
mov
pop
mov
cwtl
roll
sub
popl
fwait
mov
cld
mov
xor
mov
lock
or
nop
ljmp
dec
outsb
pop
in
xchg
mov
test
fmuls
xchg
mov
ja
push
lock
jl
xlat
mov
inc
ret
dec
add
or
mov
add
sbb
sbb
loopne
jns
add
mov
and
loope
xchg
sbbl
sbb
mov
insb
mov
or
arpl
xchg
push
jno
sbb
mov
pop
xor
mov
inc
pop
rolb
mov
jge
xchg
mov
ret
and
mov
cmpsb
fnstcw
imul
data16
jbe
mov
test
insb
out
popf
out
test
add
shl
in
ja
in
in
inc
mov
xchg
adc
xor
add
mov
push
je
mov
mov
add
push
lcall
icebp
subb
cmp
outsb
push
sbb
imul
xchg
js
mov
jns
fdivrs
sahf
mov
pushf
jle
aad
pop
jo
lds
push
xchg
mov
insb
insb
gs
mov
jp
data16
aad
insb
fs
hlt
add
jle
addr16
cmp
pop
dec
xchg
addl
push
mov
jb
jge
inc
sti
xorb
mov
inc
int
inc
movsb
jb
outsl
mov
mov
jae
nop
and
jns
std
lods
mov
push
aad
xchg
pop
adc
sbb
mov
sahf
cmp
add
cmp
dec
mov
imul
jns
push
xchg
in
xchg
cwtl
lock
pop
cwtl
mov
enter
imull
test
shlb
push
lcall
mov
mov
jp
ret
out
mov
subl
dec
sub
mov
pop
clc
lcall
xor
div
insb
enter
adc
and
and
push
xchg
popf
mov
cld
push
pop
cmpsl
arpl
cmpsb
lds
mov
and
ret
mov
dec
jg
xor
push
mov
xor
lods
rorb
adc
stos
inc
mov
in
outsl
jne
punpckldq
test
je
lea
insb
xchg
mov
orl
enter
jne
jecxz
cwtl
jle
cmpsl
xor
jae
xchg
xchg
jg
add
repz
js
mov
fsubrs
fs
jo
or
mov
xor
adc
jbe
fdivrl
add
arpl
jl
imul
cmc
leave
inc
hlt
xchg
mov
mov
jp
xacquire
gs
mov
stos
subb
fs
fdivr
in
insl
xor
xchg
aaa
sbb
aad
sbb
fsubrs
cmc
mov
fwait
sbb
mov
clc
ret
lcall
fildll
daa
dec
jbe
popf
mov
fidivs
out
test
mov
mov
cmpxchg
mov
bound
into
mov
mov
je
imul
push
push
jp
popa
shrl
add
aam
leave
push
aaa
test
popf
add
das
hlt
sub
mov
scas
sahf
je
test
aas
mov
mov
sub
cltd
pop
xor
imul
sahf
mov
shl
arpl
mov
repnz
mov
shrb
add
lcall
xor
mov
or
cmc
lahf
fldenv
xchg
lds
out
cmp
repnz
jne
clc
sub
test
and
repz
xor
mov
enter
jae
sti
cli
sbb
sbb
aam
inc
cltd
sbb
mov
mov
jmp
jmp
mov
jecxz
mov
outsb
in
stos
or
das
mov
cmp
cltd
mov
out
sub
mov
sbb
mov
leave
leave
xor
xor
addr16
repnz
sub
mov
jnp
adc
rolb
insl
lcall
movsl
outsb
xchg
fidivrl
mov
bswap
or
pop
sub
jle
into
aam
in
cmp
xor
sbb
clc
ret
fwait
lret
lds
sarb
mul
ds
rcrb
in
adc
cmp
add
xchg
cmp
arpl
fiaddl
push
mov
xor
jae
mov
imul
enter
jb
shlb
icebp
inc
sbb
dec
push
mov
cwtl
cmpsl
inc
mov
xor
hlt
fnsave
mov
stos
jns
stos
inc
jle
adc
ljmp
ja
or
cmp
and
test
add
pop
addr16
mov
xchg
mov
jg
sub
data16
jle
or
lods
cld
add
mov
xorb
xchg
sub
and
stos
lcall
ret
or
cmp
jbe
orb
out
ret
pushf
xchg
in
in
jne
fcoms
mov
ret
je
test
clc
fwait
jg
inc
hlt
jge
mov
sbb
xchg
sbb
mov
inc
mov
dec
ret
and
add
xchg
out
xchg
aam
inc
xchg
sbb
xchg
mov
ret
stc
aad
cs
mov
cmp
not
outsb
jne
cmp
xchg
mov
sub
sub
xchg
mov
mov
cmpsl
js
ljmp
mov
rclb
pop
mov
incl
test
jp
inc
lods
sub
shlb
lods
inc
mov
fdiv
or
mov
adc
lods
adc
stc
faddp
add
push
aam
sbb
pop
xor
sbb
and
std
in
push
jne
add
enter
sbb
add
scas
or
push
jge
in
xchg
imul
push
mov
fs
push
fisubs
insb
add
xchg
outsl
add
mov
push
jns
sub
adc
subl
test
push
jecxz
testb
mov
mov
adc
stos
js
adc
lea
cmpsb
xor
add
jp,pt
pop
out
cmc
movsb
cmp
inc
or
in
fsubrs
mov
js
jo
jle
sti
xchg
jmp
adc
sub
test
xor
movsl
mov
in
and
cmp
test
les
mov
pop
jmp
jb
movsl
ret
dec
ja
das
les
sahf
jl
and
dec
mov
in
outsl
mov
jb
js
sarl
sbb
jae
adc
dec
int3
insl
addr16
mov
arpl
enter
ljmp
mov
mov
ret
mov
ds
xchg
out
mov
add
fwait
pop
popa
popl
out
test
xchg
fstp
in
jl
dec
xchg
loop
sub
in
jne
test
mov
pop
xchg
cmp
jge
daa
sub
pop
or
call
xchg
ja
mov
mov
sarb
xchg
push
hlt
clc
insl
fnstcw
fldt
jns
xor
imul
out
sbbl
test
pop
loopne
es
mov
in
mov
jno
inc
stos
test
cli
ret
mov
out
jmp
fiaddl
jg
ror
xchg
push
jle
add
sub
icebp
jae
movsb
ss
mov
pop
mov
pop
cld
ljmp
jle
subl
mov
addb
insb
lods
aas
pop
sarb
adcb
sub
pushf
jg
jge
push
hlt
dec
xor
jo
mov
jae
adc
aas
mov
nop
inc
add
jns
je
dec
lock
shll
mov
ja
mov
ficoml
mov
into
movsb
mov
rcrl
xchg
les
test
ja
dec
inc
das
xor
fcmovb
pop
mov
jne
clc
push
fwait
mov
push
fs
mov
xrelease
pop
testb
sbb
ret
inc
dec
divl
push
lret
mov
je
jb
frndint
mov
dec
jg
nop
pushf
call
cmp
scas
sahf
nop
loop
cmp
ss
xchg
cmpsl
ffree
sub
adc
jl
mov
add
xchg
lds
dec
sbb
enter
in
jae
pop
jle
cmp
ret
loop
movsl
mov
cld
ja
add
jne
movsl
repz
push
rcrb
gs
sbb
pushf
jge
dec
pushf
jne
mov
js
lcall
int3
stc
mov
jle
pop
cltd
test
mov
jmp
xchg
jp
lds
mov
fistpll
fidivrl
fsubrs
add
pop
sbb
fldenv
sbb
add
loop
ja
lret
mov
inc
cmpsb
inc
inc
push
jbe
mov
ja
fdiv
lds
outsl
mov
mov
std
leave
out
sbb
mov
fwait
mov
add
add
int
and
dec
jp
scas
sahf
adc
sub
js
shl
mov
mov
sub
jg
daa
cs
leave
scas
mov
pushf
mov
icebp
js
out
xor
adc
push
insb
mov
mov
and
in
fsubrl
sti
jbe
jbe
add
test
xor
push
and
lret
loope
mov
sarb
sbb
sbb
fwait
nop
ljmp
mov
movsl
pop
mov
bound
dec
jns
jg
lods
insb
divb
xchg
mov
fs
es
pop
aam
sbb
pop
in
jo
push
enter
call
xor
cld
fwait
test
cmpsl
jmp
jmp
lcall
and
inc
imul
mov
jg
inc
inc
xor
negb
and
lods
shll
cwtl
nop
ss
ds
sti
add
les
jge
data16
cwtl
lret
aam
clc
in
bnd
push
mov
out
inc
pusha
push
lret
sbb
stos
adc
out
sbb
bts
adc
and
mov
lds
cwtl
lods
not
add
jl
js
movsl
cld
in
mov
mov
leave
pop
in
sub
mov
mov
insl
xchg
int
sahf
fwait
and
jg
scas
jne
lcall
xor
xorl
mov
lcall
fwait
sub
inc
mov
or
xor
sub
xchg
jno
add
inc
xchg
xchg
testl
mov
je
pushf
lods
dec
leave
mov
mov
jge
enter
jns
ficoml
sub
cmp
idivl
movsb
adc
cmp
or
aas
add
adc
jmp
mov
push
sbb
jle
xchg
jbe
insl
hlt
scas
in
pushf
test
jg
mov
in
pop
and
mov
pop
pop
and
test
lret
mov
ljmp
cmpsl
fnstenv
mov
mov
xchg
cmpsl
sti
mov
sbb
in
movsl
mov
fcomi
rorl
inc
sub
dec
mov
fsub
sbb
sbb
dec
mov
mov
mov
lds
les
lcall
es
sti
stos
add
lcall
mov
dec
cld
xchg
shlb
pop
sub
mov
outsb
imul
and
iret
in
pop
xchg
movl
pop
mov
xchg
mov
lahf
callw
sbb
sti
ret
jnp
adc
fs
pushf
add
lods
lds
push
mov
mov
gs
jmp
fistpl
mov
cli
rolb
jbe
sub
sub
data16
adcl
and
add
leave
jae
loop
jo
jo
dec
or
sbb
lds
push
mov
cld
cld
js
mov
jnp
push
mov
icebp
mov
cli
out
sbb
shlb
fsubs
ffreep
xchg
mov
jecxz
xchg
mov
pop
or
int3
popf
jae
pusha
xchg
sbb
jne
mov
aam
mov
dec
pop
leave
xor
rclb
ja
out
icebp
jp
sahf
ss
mov
ja
int
and
mov
add
jle
movsl
ret
inc
or
jo
mov
sub
aam
lds
adcl
mov
mov
hlt
lcall
leave
sub
xchg
jo
stc
pop
inc
or
xor
nop
xchg
fs
jne
clc
jge
jle
in
imul
mov
out
add
xchg
shr
lods
jecxz
mov
jp
icebp
clc
data16
xor
icebp
lock
add
mov
mov
lret
pusha
stc
cmp
int
mov
sbb
adc
fldt
push
mov
sbb
stos
xchg
push
cmp
mov
xor
mov
push
dec
inc
fwait
neg
iret
ds
xor
js
jle
sub
in
and
add
and
jp
in
test
lods
mov
push
loop
inc
xor
fildl
jno
ret
push
sbb
stos
je
add
mov
js
push
mov
js
fcomi
and
xor
daa
pop
cld
mov
inc
ss
outsb
out
ror
js
ret
mov
icebp
mov
mov
mov
rcrl
fwait
add
lea
movsb
add
je
test
jp
stos
cmc
jecxz
xchg
sbb
inc
repz
jecxz
pop
int3
mov
add
in
js
data16
mov
inc
jp
xor
xor
mov
daa
mov
pop
cs
mov
mov
adc
mov
stos
jl
test
fisubl
aad
xchg
cltd
arpl
cmpsb
mov
lahf
add
roll
mov
cltd
insl
adc
lcall
insl
sbb
cwtl
inc
mov
les
mov
stc
repnz
mov
xor
clc
jnp,pt
ja
in
ljmp
cmp
ss
daa
add
imul
xor
mov
loop
xor
jge
ljmp
out
sti
mov
out
pop
jle
test
adc
aam
ja
dec
push
test
mov
cltd
xchg
inc
dec
adc
popf
pop
mov
idivl
ret
xor
popf
addr16
mov
jg
cmp
mov
jl
jne
or
fwait
inc
sahf
stos
daa
aam
mov
icebp
test
jp
sarb
xchg
mull
inc
out
push
ja
sbb
test
push
push
mov
cmp
lahf
fistpl
xchg
imul
pop
add
loop
fwait
ret
mov
dec
aam
mov
sbb
xchg
leave
sbb
mul
popf
sub
mov
mov
mov
mov
shr
sbb
out
xorb
arpl
cld
fcmovu
sub
mov
mov
pushf
push
cwtl
inc
push
bound
add
jnp
negl
testl
xchg
add
or
jecxz
fwait
xchg
and
mov
fwait
add
mov
imulb
and
inc
mov
and
and
movsl
mov
jle
stos
or
int3
roll
and
jo
jp
mov
jnp,pt
arpl
out
jecxz
inc
out
dec
pop
mov
mov
cmp
je
movsb
mov
xor
xor
out
mov
ljmp
inc
insb
xchg
fldlg2
stos
leave
test
arpl
lret
and
jns
out
aad
or
mov
inc
cmp
in
mov
push
imul
aas
pop
jmp
cmp
addr16
pop
cmpsl
mov
out
jmp
jns
mov
sbb
lahf
sub
jp
out
push
icebp
lcall
cmp
add
sahf
loop
add
insb
mov
or
xchg
jp
test
or
lock
mov
in
mov
push
mov
mov
iret
out
mov
cmc
dec
jmp
dec
push
xor
out
clc
sub
xchg
mov
sbb
test
xor
jl
mov
inc
pop
push
inc
icebp
fidivrl
sbb
sub
scas
or
sahf
xor
inc
out
cltd
ss
je
in
repnz
pusha
and
jge
out
mov
into
stos
cmp
ds
aas
add
sub
mov
push
shr
les
cmc
int
adc
or
fucom
xchg
mov
jge
insl
imul
dec
lods
add
add
sub
push
adc
andl
mov
rclb
mov
add
aas
sbb
pop
xor
clc
aas
sbb
negl
hlt
jmp
sbb
into
push
lock
lds
repnz
jno
jbe
jno
pop
repnz
test
js
stos
roll
fs
cmp
into
jne
hlt
arpl
dec
jle
xchg
aaa
enter
inc
mov
or
xchg
or
inc
jnp
leave
cli
fisubrs
inc
mov
leave
pushf
sahf
and
pop
jecxz
mov
xor
xchg
xlat
mov
jecxz
mov
hlt
cmp
or
out
fildl
sub
xor
dec
mov
mov
xor
fcompl
lock
cmpsb
xchg
jmp
push
mov
sbb
subb
xchg
add
xor
xchg
fsubrl
fwait
add
lods
xor
lods
scas
sbb
bound
sbb
inc
lret
jo
cmc
incl
mov
hlt
pop
mov
sub
hlt
mov
js
lret
lret
in
aaa
xor
arpl
jns
mov
xor
mov
aas
test
test
jns
sub
mov
inc
dec
mov
mov
in
jno
pop
adc
das
fsubl
orb
mov
adc
sahf
sbb
mov
les
push
adc
inc
pusha
ffree
mov
imul
test
jo
jnp
loop
aaa
inc
mov
js
sub
addr16
jne
jge
sar
mov
bound
jns
insb
imul
addl
ja
adcb
ja
dec
ret
pushl
push
sahf
mov
lret
daa
mov
fs
sub
ljmp
into
fisubrs
sbb
mov
leave
add
cmpsb
add
mov
pcmpgtb
in
je
pop
ja
lds
sti
inc
aad
xor
add
fisttps
mov
cmp
stos
jl
dec
jns
idivb
scas
mov
mov
jbe
pushf
loope
mov
cmp
mov
or
or
cltd
bound
int3
add
test
mov
mov
fs
jno
sub
hlt
xor
mov
mov
test
shlb
clc
jg
fstpt
mov
out
jl
push
inc
test
adc
pop
das
jne
push
cmc
leave
loop
leave
insl
add
dec
jne
popa
lock
fucom
std
stos
enter
call
xchg
cmp
jecxz
int
rcrl
lods
dec
movsb
xorb
cld
pop
dec
fldenv
xchg
add
pop
cmp
dec
hlt
call
and
mov
sbbl
clc
arpl
adc
shll
jecxz
leave
mov
mov
mov
arpl
jmp
into
sub
or
mov
ret
add
add
int3
and
fwait
sbb
leave
sysexit
rclb
les
xor
cli
fwait
daa
outsb
lds
xor
push
in
aas
scas
add
popf
jae
shl
or
aam
clc
add
sbb
fwait
dec
mov
and
repz
in
lahf
js
mov
pop
sahf
js
jns
dec
xlat
int3
lds
jecxz
les
mov
shl
or
outsb
not
out
lret
lret
mov
mov
adc
jo
shlb
and
push
push
mov
imul
cmpsb
add
test
jl
dec
jle
xchg
repnz
xor
jp
ss
cmc
xor
bound
inc
sti
ret
sahf
jg
jl
adc
adcl
fcomip
pop
out
mov
jle
std
mov
dec
pop
insb
js
xchg
mov
vaddsubps
cmp
mov
xchg
push
add
adc
int3
in
or
loopne
les
add
mov
pminsw
lcall
push
xor
dec
add
xchg
add
and
mov
jle
out
jne
shl
es
outsb
scas
sub
lds
mov
loop
pop
lcall
cmp
jle
jecxz
mov
stc
sbb
ror
push
inc
in
stos
fisubl
aad
shll
add
les
fldt
loopne
or
aam
call
mov
jecxz
jnp
mov
movsl
cmp
or
push
sbb
mov
test
lds
je
lds
cmp
xor
jle
mov
xchg
dec
ror
xor
movsb
adc
sub
push
scas
data16
xchg
sbb
mov
fisubrs
imul
cltd
clc
std
cli
cld
or
cltd
inc
shlb
cmc
jge
sub
xchg
cmp
push
hlt
xchg
movsb
out
int3
sbb
push
outsb
mov
fmul
xchg
mov
fists
inc
repz
add
dec
xchg
fstpt
pop
dec
mov
pop
scas
hlt
stos
ret
fdivp
mov
sub
mov
cwtl
test
stos
mov
cmc
dec
add
xchg
gs
jg
xchg
jl
lods
mov
fwait
ret
or
or
sub
movsl
int3
cltd
cltd
jne
jge
nop
out
popf
mov
mov
rol
js
cmp
rcr
orb
sub
mov
pop
je
inc
mov
push
mov
pushf
pop
jle
data16
jns
iret
adc
mov
hlt
sub
js
fsubl
xor
js
cmc
cld
sbb
dec
mov
ja
std
mov
lahf
mov
ret
shl
es
push
cmp
int
movb
sub
imull
lret
shrl
ljmp
fwait
inc
mov
mov
and
aad
ds
mov
fwait
or
lea
mov
into
mov
sahf
jae
stc
mov
data16
repnz
xor
sbb
mov
push
or
stc
mov
lock
hlt
cmp
cli
jge
mov
cltd
ljmp
and
jge
pop
mov
stc
scas
ljmp
sub
inc
dec
es
cmpsb
xor
ret
lods
pop
scas
jns
test
pop
mov
cmpsb
popf
insb
dec
jg
loope
fcmovnb
sahf
jmp
fwait
hlt
outsb
xchg
lea
pop
and
loopne
cmp
add
mov
arpl
test
add
jg
sbb
mov
sub
pop
xchg
out
je
js
pop
sbb
or
imul
jle
cwtl
or
mov
in
jmp
add
cmp
and
lock
fwait
pop
ljmp
loop
repnz
jge
mov
sub
fistpl
add
mov
push
into
sub
sub
pop
mov
or
sub
jne
fcompl
movsb
add
mov
mov
out
mov
in
sub
ret
movsl
fs
out
test
sub
lods
jne
pop
out
cltd
cs
jge
lock
lret
lahf
sub
out
divl
cmc
pop
xor
repz
mov
cli
mov
cwtl
add
jne
imulb
jnp
sahf
jno
mov
sti
fiaddl
ja
sahf
jo
rorl
lds
mov
xchg
xchg
cmp
or
push
mov
xchg
cmp
add
xor
loop
pop
mov
fwait
into
jne
clc
xchg
sahf
lds
mov
inc
insb
cmp
pop
lcall
ret
or
add
pop
loop
popf
repz
dec
scas
dec
sub
jge
mov
push
hlt
cmp
cmp
fldenv
icebp
push
lret
shrl
ret
imul
ret
std
mov
divl
inc
insb
cld
in
cmp
stos
dec
mov
stc
push
mov
add
in
and
jle
test
fwait
jecxz
jnp
mov
dec
xchg
jle
out
outsl
push
je
stos
stos
jmp
inc
sbb
mov
rcr
push
xor
mov
sbb
adc
out
hlt
mov
or
mov
cmpsl
jnp
pop
ret
stos
shrb
fstp
jnp
and
adc
jnp
pop
int3
pop
fstpt
dec
inc
pop
adc
movsl
pop
adc
jge
and
inc
cmp
aas
cltd
mov
nopl
stos
ret
test
dec
loopne
scas
xor
in
out
jge
add
outsl
std
into
ret
mov
mov
dec
cmc
jg
fnstcw
insl
adc
jl
mov
mov
mov
add
cmc
aam
ret
aam
inc
push
jbe
leave
rorl
pop
stos
out
aaa
inc
outsb
movsb
or
out
rcrb
imul
xchg
xchg
xchg
jns
xchg
mov
mov
mov
push
mov
cmp
outsb
mov
and
dec
jle
pushf
fwait
clc
test
jg
xchg
dec
pop
jle
pushf
inc
lods
mov
mov
insb
mov
cmpb
cld
xchg
icebp
jb
pop
mov
in
jecxz
sbb
and
fwait
or
and
jnp
inc
mov
fcmovne
sbb
push
std
fwait
mov
adc
sbb
xor
mov
andb
mov
xchg
movsb
sbb
and
jl
sub
xor
lods
outsb
out
jle
sbb
xchg
mov
jl
dec
sbb
stos
arpl
xor
mov
iret
into
test
pusha
dec
int3
xchg
fwait
adc
out
push
cmc
add
and
adc
dec
insb
aad
popf
cwtl
imul
lret
mov
cmp
in
gs
add
cltd
adc
mov
popf
mov
ljmp
ret
sahf
lcall
mov
fisttps
sbb
hlt
sub
mov
push
sti
jno
cwtl
out
jns
cmpb
cwtl
frstor
add
sbb
fnstcw
mov
out
pushf
int3
in
aaa
test
add
movsl
xchg
add
insb
inc
in
out
add
fwait
ja
sbb
lahf
xor
mov
cs
add
sbb
jge
mov
adc
les
cld
aas
and
xchg
xacquire
fistps
test
icebp
call
jge
mov
sti
test
cli
sbb
out
push
jg
adc
sahf
cmp
inc
jns
into
fistps
scas
mov
movaps
mov
mov
shll
xchg
sahf
jge
jl
scas
aam
jmp
xor
das
and
cmc
add
test
xchg
enter
insb
jg
push
cs
sub
fwait
sub
out
add
inc
sti
scas
xor
cmc
jge
lods
xor
lret
popf
mov
add
imul
popf
mov
mov
inc
sbb
sub
jne
int
inc
and
dec
out
push
lcall
das
out
sahf
aaa
in
stos
aaa
lret
pop
cmp
data16
mov
lret
jg
outsl
jge
in
cmp
ror
cmpsb
jl
test
int
push
pushf
ja
push
fsubl
fucomip
add
push
push
inc
and
mov
int3
paddsb
sbb
daa
xchg
adc
stc
call
out
inc
insl
xchg
ja
nop
jecxz
or
mov
push
enter
ror
push
fs
insb
mov
mov
or
lods
movsb
and
and
test
mov
jnp
rorb
mov
jecxz
or
add
enter
jg
xchg
add
mov
loop
cltd
inc
or
mov
jmp
ja
cmp
xor
xor
xchg
push
add
out
push
jne
fs
mov
mov
cwtl
int3
ror
int3
stc
xchg
loope
mov
push
xor
push
lock
xor
lock
inc
cmp
test
jnp
cmpsl
mov
out
and
sahf
movsb
scas
lret
xchg
jns
lret
or
xchg
cli
mov
js
jg
jns
jl
xor
xorb
mov
cmpl
or
lahf
inc
inc
es
mov
jb
lods
in
ja
mov
mov
movsl
cmp
loope
rcll
jmp
cltd
jg
or
mov
push
pop
mov
jo
insb
pop
pop
xlat
insl
popa
push
iret
sbb
pop
mov
jo
push
add
push
pop
jge
out
jno
mov
pop
adc
ret
push
test
mov
subb
rcrb
jae
in
pop
sbb
push
jmp
loopne
hlt
push
bnd
add
pop
push
fisubrs
call
push
jge
jno
inc
popa
push
add
out
adc
pop
jo
pop
push
push
xchg
js
jo
xchg
push
jae
icebp
mov
movsl
clc
mov
adc
mov
test
xchg
loopne
mov
popa
cmp
push
jns
clc
insb
adc
sarb
sbb
leave
sbb
jo
aad
cmp
enter
dec
pushf
jo
xchg
pop
jno
push
fmuls
xor
les
fs
adc
jo
mov
push
hlt
pop
mov
pop
fcmovb
jo
fadd
shr
mov
insb
loopne
mov
pop
fsubr
add
adc
jae
jno
and
sbb
icebp
pop
adc
ret
push
jo
stc
rclb
jo
fldcw
push
jo
add
fmuls
jmp
pop
and
pusha
push
xchg
shlb
in
cwtl
push
sbb
call
clc
pushf
mov
ss
jo
inc
sub
insb
push
divb
pop
popa
mov
test
aam
fs
sbb
imul
xchg
data16
jmp
testb
mov
shrb
xorl
mov
insl
and
add
mov
fimull
jo
cmp
adc
popa
push
push
jo
mov
pop
push
pop
jl
adc
shrl
adc
js
mov
rorl
dec
push
xor
shlb
subb
enter
outsl
jae
in
test
or
mov
mov
popa
fcoml
loope
adc
mov
pushf
cwtl
adcb
aam
dec
nop
mov
rcrl
ja
enter
lock
adc
nop
cmpb
or
sbb
push
les
ret
jmp
enter
xchg
cmpl
adc
ret
mov
pushf
enter
shlb
push
adcl
jno
adc
jae
push
push
in
pusha
xor
push
push
popa
adc
ret
cwtl
jbe
inc
insb
mov
mov
icebp
mov
enter
push
push
lock
jns
js
jno
adc
or
xorb
sub
jno
jns
dec
aas
pop
pop
adc
shll
ja
xchg
push
jo
popf
xor
push
mov
test
mov
jmp
loopne
lods
jnp
mov
mov
push
push
inc
adc
push
loopne
xchg
dec
push
nop
addr16
mov
test
lods
mov
jecxz
add
fsub
fs
repz
rcr
and
in
inc
nop
add
fs
addr16
pop
sub
imul
je
push
sbb
fadds
pop
sub
push
pop
mov
movsb
movsl
push
jl
out
mov
fs
je
add
pop
pop
pop
push
cwtl
xchg
jl
jp
push
mov
mov
dec
or
push
gs
jae
push
sbbb
mov
inc
pop
insb
pop
jecxz
jns
fs
jmp
cwtl
mov
mov
call
int3
push
fs
fs
pop
enter
mov
in
mov
icebp
popa
pushf
je
mov
jmp
pop
mov
mov
int3
ljmp
add
in
aam
cwtl
fcomps
test
popa
mov
mov
xchg
jmp
enter
mov
in
jne
mov
in
clc
sbb
in
enter
in
push
pop
adc
stos
sub
add
fxch
icebp
pop
hlt
mov
inc
sahf
hlt
xchg
cwtl
aam
sbb
dec
fdivl
jecxz
mwaitx
bound
mov
lcall
mov
fisttpll
xchg
mov
fs
mov
mov
insb
idiv
nop
cwtl
sbb
xchg
mov
dec
mov
mov
repnz
movsb
cwtl
xlat
lock
sub
movsl
xchg
rcrb
mov
mov
enter
push
fisttpll
xchg
cmpsl
mov
repnz
test
xlat
lock
push
sub
test
imul
and
xchg
stos
jae
mov
push
sbb
je
xchg
pop
jno
lods
xchg
pop
das
repnz
lods
adc
lods
sbb
cwtl
scas
lock
imul
movsb
outsb
xchg
scas
jae
mov
enter
pop
mov
add
rcrl
mov
mov
or
mov
adc
push
pop
xor
xchg
push
push
fsts
pop
je
cwtl
pop
icebp
pop
jb
xchg
pop
pop
fstps
jo
pushf
imul
add
xchg
sbb
inc
arpl
sbbb
mov
mov
loopne
in
int3
add
mov
test
add
jbe
push
pop
jnp
popa
cmc
outsb
mov
or
gs
hlt
nop
sbb
icebp
loopne
xor
lahf
dec
jl
enter
and
je
or
mov
fdivrl
dec
cmp
rcl
fdivrs
push
adc
push
mov
sbb
push
sbb
test
enter
push
push
xchg
mov
repz
scas
or
xchg
cwtl
adc
xchg
js
leave
fs
call
lret
lock
inc
lret
outsl
icebp
int3
jo
arpl
int3
outsb
xchg
and
xlat
lock
lods
fwait
xchg
jns
mov
outsb
and
xchg
cld
out
and
jno
or
test
xchg
xchg
add
cmp
add
xchg
shll
fs
jns
add
and
aam
push
hlt
repnz
aad
xchg
nop
js
aad
push
mov
mov
in
pushf
js
imul
xchg
lods
js
xlat
pop
push
in
movsb
mov
xchg
int3
jl
fcom
cwtl
push
or
and
clc
out
daa
cmpb
cwtl
jbe
lods
pop
xchg
add
je
lahf
cmp
add
xchg
icebp
fstpt
fdivl
mov
pop
gs
jb
mov
outsl
hlt
mov
mov
addr16
cld
xor
sarb
cmp
and
push
stos
pop
shrb
lods
xor
rcrb
inc
js
push
mov
xor
negb
mov
mov
mov
xlat
lock
sbb
popa
rcl
pop
mov
xchg
enter
cmp
outsb
xchg
into
jae
mov
lods
jb
loopne
iret
mov
mov
call
fcmovb
fldenv
pop
sbb
jle
subl
xchg
mov
xchg
pop
sbb
pop
sbbl
inc
data16
sbbl
and
inc
add
imul
bound
outsb
xchg
bnd
mov
lods
jb
xor
mov
les
hlt
xchg
jno
jo
imul
out
xor
jno
jb
sub
jno
arpl
leave
bound
icebp
arpl
fsubs
jo
sbb
inc
lods
jb
je
gs
mov
pushf
xor
xchg
outsb
and
outsb
xchg
push
in
lock
push
cwtl
lock
push
add
fcomi
cwtl
adc
les
icebp
fs
fsts
andl
jo
push
imul
into
fcomi
cwtl
mov
outsl
flds
pop
subl
xchg
sbb
lock
jb
pop
imul
addl
xchg
jb
clc
adc
stos
stos
cmpl
push
andb
je
cwtl
data16
addr16
xchg
imul
insl
cwtl
outsb
icebp
outsl
jb
xchg
xorl
pop
adc
inc
jbe
repz
pop
mov
shl
lock
lcall
nop
or
pop
add
and
push
movsb
pop
fnstenv
pushf
icebp
enter
or
andb
sbb
pop
fsub
das
imul
scas
jp
inc
clc
dec
mov
loop
or
cwtl
xchg
sarb
dec
inc
icebp
jo
mov
jno
ja
mov
mov
mov
pop
mov
xlat
push
out
mov
leave
mov
fsub
js
out
pop
arpl
dec
fsubs
inc
jb
xor
xchg
lock
into
xchg
ljmp
mov
les
je
int3
add
aaa
loope
add
sbb
mov
inc
bound
js
xchg
add
enter
cmc
cmpb
mov
xchg
mov
leave
test
jb
sub
dec
rorb
jmp
out
and
int3
addl
cmp
aam
pop
pop
mov
movsb
dec
aam
jmp
jecxz
push
dec
pusha
fadds
cmp
mov
push
aad
mov
loope
popa
mov
bound
push
xchg
in
cmp
sbbb
or
push
lods
mov
xchg
loopne
push
push
std
mov
cmpsb
xor
xchg
sub
mov
insb
mov
cmpb
lods
mov
mov
enter
pop
or
test
push
sbb
in
mov
fmuls
push
mov
push
in
mov
test
inc
jmp
ftst
outsl
mov
inc
enter
sbb
pop
mov
adc
inc
pop
cbtw
xchg
jl
pop
mov
xchg
and
pop
test
pop
icebp
add
xor
xchg
imul
fdivrl
mov
mov
mov
enter
add
insl
sbb
push
hlt
pushf
ret
xchg
movsb
jnp
mov
sbb
test
jo
repnz
sub
mov
enter
lods
pop
pop
std
mov
push
push
xlat
push
lock
shrb
repz
outsl
mov
jnp
enter
mov
jno
mov
inc
push
sub
xor
mov
hlt
fdivs
inc
pop
fs
decb
mov
push
push
xlat
push
in
mov
ror
lock
icebp
movsb
inc
cmc
mov
aad
data16
imul
addr16
enter
divb
xor
xchg
push
mov
imul
xchg
testl
mov
insb
movsb
fmul
insb
xchg
clc
pop
xchg
outsl
lock
cmpsl
insb
mov
enter
inc
dec
mov
sbb
enter
stc
icebp
lods
inc
addr16
sbb
enter
in
insl
mov
mov
aad
call
sahf
mov
andb
add
and
cli
dec
aas
pop
imul
orb
hlt
pop
jae
xchg
sti
fdivr
add
sti
call
xchg
jae
clc
mov
mov
je
test
cld
sbb
jne
dec
bound
push
mov
fs
ror
jne
xor
jbe
enter
insb
xchg
jbe
mov
add
je
or
cmc
push
loop
cmpb
xchg
xor
fs
sbb
lods
mov
jl
ja
or
testl
sbb
movsb
in
xchg
jns
std
sub
fs
rclb
xor
adc
stos
bound
lock
nop
jnp
pop
add
xchg
shlb
jge
int
push
lock
adc
cmpsl
jge
jns
push
in
mov
mov
and
enter
cwtl
cmp
insb
mov
lock
sub
stos
mov
enter
mov
sub
adcl
mov
cmpsl
xchg
mov
enter
inc
mov
add
loopne
or
loopne
push
xchg
add
subl
cmp
test
cmp
jb
loope
loop
xor
enter
push
stc
enter
and
push
addb
mov
fs
gs
enter
dec
pop
xchg
mov
cwtl
jmp
orl
inc
mov
shr
add
xchg
push
dec
dec
adc
xchg
bound
imul
push
mov
pop
ficoms
pop
sbb
pop
mov
xchg
push
jae
xchg
push
mov
neg
jo
xchg
sub
push
xchg
bound
icebp
sbb
xchg
cmp
mov
push
subl
insb
rcr
call
push
nop
sbb
pop
jno
push
insb
imul
adc
adcb
sbb
xor
pop
or
test
add
xor
arpl
imulb
insb
pushf
sub
in
xchg
xor
mov
cltd
les
adc
cmp
add
sub
pop
push
jmp
inc
sbb
pop
loopne
or
dec
xor
shl
cld
jb
xorb
in
fstps
dec
jne
dec
xor
jg
dec
push
imul
pop
xchg
inc
nop
out
clc
jno
lahf
hlt
test
push
clc
or
in
or
jl
arpl
inc
push
cmp
nop
sub
fs
nop
ja
adc
lods
ja
sahf
cltd
xchg
shlb
dec
lods
cwtl
push
and
adc
ret
lds
mov
pop
adc
imul
adc
push
data16
les
push
or
add
stos
add
push
adcb
test
jl
movsb
sbb
shlb
push
jb
xchg
int3
sbb
sub
mov
addb
int3
add
leave
mov
push
pop
je
hlt
mov
addb
jecxz
push
sbbb
pop
adc
xchg
leave
push
fs
outsb
pushf
test
lock
data16
mov
pop
xchg
xor
xor
cmp
adc
cwtl
pop
mov
icebp
xor
xor
dec
insb
mov
aad
jl
fs
imul
add
push
lock
nop
xor
push
and
mov
mov
and
lock
sbb
rclb
sub
cmp
je
xchg
outsl
pop
enter
aam
inc
sbb
pop
jl
fsubl
dec
call
lock
sbb
sarl
xchg
repz
popw
inc
pop
out
sbb
bound
mov
loope
pop
xchg
aam
fldenv
bound
stos
adc
icebp
inc
jo
outsl
jb
add
cwtl
cmc
sub
dec
fldcw
add
sbb
add
push
dec
sub
xchg
pop
jo
jbe
pop
or
outsl
out
out
idivl
mov
adc
movsb
shlb
out
fldcw
movsl
and
fiaddl
outsl
cwtl
fwait
sbb
popf
mov
nop
js
insb
mov
daa
fistps
ja
and
cwtl
shlb
or
in
in
inc
jns
enter
aad
nop
enter
dec
pop
lock
sub
aam
pop
push
push
xchg
or
std
cwtl
icebp
or
cmpsl
push
mov
jno
push
pop
or
mov
mov
push
fs
test
xchg
andb
or
cmp
jno
mov
sbb
outsb
xchg
inc
cmpsb
sbb
pop
pop
callw
sub
jno
ljmp
mov
cltd
or
insb
aam
outsl
push
mov
jo
inc
cmp
jl
add
or
movsb
fmuls
add
xchg
jns
adc
popa
jge
sbb
pop
push
loopne
mov
xor
or
or
dec
mov
fsubrs
cld
fdivr
aam
in
in
push
fnstcw
xor
subb
aam
insb
enter
pop
jecxz
loopne
adc
in
stos
mov
push
fadds
pop
mov
inc
shlb
mov
aaa
and
and
pop
fadds
mov
push
pop
imul
jae
lock
add
enter
jge
fadds
enter
adc
int3
pop
addb
enter
lcall
enter
adc
fcomip
adc
cwtl
stos
es
push
enter
xchg
enter
xor
ret
adc
mov
test
jo
or
fsubs
adc
adc
aad
mov
jo
add
in
outsl
ja
cmp
andl
mov
sbb
les
pop
pop
hlt
sub
mov
pop
pop
fmuls
xchg
mov
cmp
mov
xor
xchg
enter
cld
dec
fwait
push
subl
fists
push
aam
lods
xchg
push
push
cmp
in
adc
hlt
ret
hlt
or
xor
popa
roll
jae
icebp
fcompl
add
sub
pop
subl
loopne
hlt
sbb
xor
and
pusha
jge
dec
xchg
and
add
jb
adc
mov
je
sub
push
sbb
pop
pop
push
jno
jb
xchg
or
fadds
je
cltd
push
lods
lock
stos
sbb
sub
sbb
xchg
sbb
icebp
xor
push
sbbb
out
stos
sbb
sub
sbb
sbb
push
lcall
sub
hlt
xchg
js
lahf
xor
adc
jmp
shlb
loop
movsb
std
jnp
sbb
xor
in
les
xor
sbb
xchg
sub
cld
iret
rcrl
push
lret
lock
icebp
mov
xchg
inc
imulb
mov
js
notl
pop
jae
cmp
sub
cmp
xor
fmuls
sbb
mov
mov
cmp
jnp
cmp
xor
insb
sub
jl
std
outsl
insb
jne
hlt
mov
lcall
mov
jae
insb
cmc
leave
hlt
mov
mov
xchg
inc
xor
or
mov
test
pop
imul
dec
pop
int3
cmpsb
push
mov
jl
or
jne
inc
xchg
or
jne
sub
cmpsb
pop
mov
lods
test
data16
fiaddl
aas
xor
push
xor
out
test
insb
sub
out
stc
clc
scas
hlt
into
add
stos
mov
push
sub
insb
sub
sbb
add
xlat
mov
movsb
call
bound
mov
rep
add
mov
dec
mov
insb
lret
hlt
xchg
inc
mov
mov
inc
lds
or
pop
push
insb
movsb
in
hlt
add
hlt
insb
pop
jae
inc
lcall
lea
out
hlt
in
pop
jae
mov
in
push
in
hlt
sahf
jno
inc
jne
mov
out
dec
aam
pop
sbb
hlt
add
mov
sub
adc
lcall
out
adc
pop
sub
fdiv
mov
in
hlt
leave
inc
bound
mov
mov
mov
enter
hlt
xchg
outsb
jo
xchg
jge
cld
and
adc
lods
hlt
add
xor
sbb
mov
fwait
pop
repnz
hlt
pop
enter
in
pop
xchg
sbbl
mov
sbb
jae
clc
xchg
jae
dec
leave
dec
pop
je
lock
sbb
mov
mov
jno
jg
icebp
movsb
dec
fimull
dec
jg
insb
add
mov
mov
cmp
add
jbe
dec
cwtl
mov
nop
lods
test
sub
js
xchg
or
js
leave
fdivrl
sbb
sbb
in
daa
js
adc
jne
cmpl
mov
fsubrs
jnp
jne
jno
jp
mov
jl
in
sbb
mov
add
xchg
jge
or
inc
mov
xor
add
testl
loop
cld
inc
push
fs
inc
shrb
addl
xchg
aad
inc
sbb
cmp
or
or
sbbb
in
mov
cmc
enter
mov
clc
mov
les
loopne
push
mov
or
shll
rcrb
xor
and
mov
pop
out
sub
push
rcrb
push
jo
arpl
cwtl
jae
enter
push
pop
rcrb
mov
cmc
roll
dec
jae
push
jae
je
lods
sbb
xor
cmpsl
outsb
mov
pop
aam
or
repnz
outsb
in
sub
jl
push
jne
mov
xor
aam
and
mov
int
or
pop
add
xchg
mov
mov
popa
dec
fadd
nop
filds
scas
and
inc
loop
nop
repnz
popa
dec
mov
clc
mov
dec
cltd
lods
push
popa
dec
cmpsl
out
andb
pop
fadd
mov
adc
dec
cmpsl
insl
je
push
or
inc
cmpsl
out
ret
aam
aam
sti
int
and
add
xchg
test
push
fs
cmpsl
test
mov
pop
aad
sbbb
das
lock
add
imul
xchg
js
pop
cs
pop
sbb
lret
xchg
nop
ret
lcall
popa
xchg
add
popa
mov
jns
sbb
xor
and
adc
xchg
and
mov
cmp
sbb
cmpsl
or
mov
into
add
sub
test
nop
jno
jbe
clc
sbb
mov
sbb
fsts
rcr
aam
cld
rorb
xor
dec
jnp
mov
subb
jae
jbe
jp
xor
jp
sbb
xchg
and
enter
mov
jp
sbb
and
mov
aad
fs
enter
sbb
icebp
mov
sbb
mov
repnz
out
in
je
add
sbb
xor
xchg
adc
xchg
int3
pop
into
jo
ja
fsubrs
scas
xchg
sub
mov
or
sub
cmp
adc
jle
jge
xchg
push
cltd
lods
cwtl
xlat
mov
xor
sub
sbb
fldcw
and
int3
add
sub
sub
pop
cwtl
mov
cwtl
leave
jnp,pn
aam
cs
and
int3
and
cwtl
cli
jb
jae
adcb
inc
mov
xor
cwtl
flds
dec
lods
fwait
inc
repnz
clc
jl
pop
mov
or
dec
shll
jle
mov
or
or
dec
shll
jle
mov
or
inc
cmpsl
gs
xchg
xor
jle
jne
xor
add
clc
xor
insb
loopne
mov
in
cwtl
mov
int3
in
cwtl
mov
ss
inc
inc
push
fs
sub
clc
jl
pop
enter
mov
jl
enter
aaa
jno
xorl
push
and
jl
enter
lret
jge
jl
rcrl
or
jne
sub
inc
push
xor
add
sbb
repnz
mov
cmp
sbb
inc
in
xor
mov
mov
xor
adc
xchg
lahf
jl
fs
mov
ja
xor
ss
jnp
mov
fdivs
xrelease
cmp
add
xchg
or
mov
xchg
push
stos
pop
mov
cmp
or
xor
push
loop
sub
lods
call
je
push
out
cmp
add
push
jae
push
jne
push
iret
mull
lods
mov
pop
in
fdivs
jo
push
jne
dec
fstl
sbb
push
pop
xchg
mov
pop
in
lods
and
sbb
js
clc
jno
ja
xor
gs
xchg
jns
enter
xchg
cwtl
or
in
js
out
addr16
out
scas
pop
call
sarb
xchg
push
jecxz
jmp
dec
scas
js
js
push
js
fs
inc
jo
sbb
fs
jg
xchg
add
fiadds
das
jo
mov
or
jg
xchg
add
push
jo
mov
xchg
int3
jo
addr16
xchg
xor
cmp
jo
mov
cli
mov
pop
xchg
out
mov
test
or
jne
inc
les
or
iret
jo
out
xchg
dec
sub
enter
sub
ja
shlb
mov
in
loopne
inc
add
lea
mov
jo
andl
aad
outsl
mov
gs
lahf
push
mov
out
je
jne
xor
hlt
push
out
cmp
cltd
mov
not
jl
cmp
cmp
rorb
xor
rol
and
mov
sub
ljmp
xor
or
cmc
in
in
mov
push
xor
cmpxchg
std
mov
shlb
std
push
sahf
cmp
jnp
fmull
sub
mov
jl
mov
add
inc
sahf
test
jo
test
push
pushf
adc
outsl
mov
pushf
out
xor
cmp
wrmsr
add
xor
xor
in
xor
stc
xchg
int
idivl
pushf
cmp
in
xor
mov
xor
mov
test
pop
fcomps
mov
lods
mov
xor
mov
pop
loop
mov
fwait
add
jle
xor
jnp
and
xor
add
xchg
fadds
pop
cmc
cs
xlat
mov
mov
movsb
pop
arpl
jnp
mov
dec
inc
adc
in
out
je
arpl
out
xor
inc
test
mov
mov
fwait
or
ds
mov
cmp
nop
pusha
and
movsb
xchg
arpl
clc
lods
std
push
fs
les
push
nop
push
imul
pusha
fwait
les
les
or
pop
repnz
adc
inc
clc
decl
cmp
dec
loopne
cmp
and
push
sbb
icebp
adc
pop
and
inc
cmpb
mov
mov
jl
pushf
loope
dec
addr16
enter
sarb
repnz
xchg
dec
test
jnp
jno
test
lcall
cmp
js
out
test
fmuls
lock
add
pop
dec
fisubrl
or
xor
les
in
in
mov
movsb
cltd
scas
fsubrs
test
or
sub
nop
fsubr
icebp
sbb
mov
and
fisubl
test
dec
pop
mov
or
cli
lods
enter
int3
sub
push
fmul
sub
push
hlt
fdivr
notl
cmc
stos
loopne
call
push
xor
sarb
xchg
stos
push
fs
aaa
sub
mov
xchg
std
sti
jns
test
jb
push
out
cmp
sub
pop
jo
xchg
push
std
cwtl
cmc
lods
adc
testl
sub
cmp
mov
mov
leave
int3
testl
sub
push
mov
jno
lcall
xchg
push
sbb
mov
push
or
sbb
adc
sbbl
or
adc
mov
pop
bound
xchg
pop
inc
pop
jne
jl
pop
incl
icebp
cmp
adcb
inc
pop
je
mov
xor
pop
outsl
jp
call
int3
add
jg
mov
jo
add
jno
mov
xchg
xchg
sub
arpl
addb
mov
xchg
movsb
jge
incl
in
lods
js
addb
sub
xchg
mov
push
addb
fs
in
mov
mov
ret
test
pop
xchg
hlt
or
sbb
inc
je
xchg
pop
jnp
nop
out
int
inc
push
mov
cmpsl
in
sbb
mov
clc
push
fs
ds
ds
mov
aas
cmpsb
movsb
notl
imul
push
add
inc
rcrb
pusha
movsl
call
std
mov
fdivrl
pusha
inc
xlat
mov
dec
stc
je
pusha
dec
jne
xchg
int
jg
pusha
xor
pusha
cli
subb
add
insb
mov
push
inc
xlat
mov
adc
insl
mov
mov
es
test
repz
add
mov
jnp
mov
cmp
pop
mov
push
jnp
sbb
mov
std
mov
outsl
enter
bswap
pusha
xchg
mov
movsb
mov
mov
inc
mov
mov
and
jnp
pusha
inc
or
leave
adc
pusha
xchg
xorl
mov
pusha
xor
ljmp
inc
aam
es
and
dec
pusha
ds
mov
push
jnp
sbb
add
js
and
dec
pusha
ds
mov
je
push
iret
pusha
arpl
xchg
pop
std
idivl
cwtl
cmp
pusha
xlat
mov
enter
pusha
jmp
add
js
mov
int3
pusha
xlat
mov
jns
int3
pusha
movsl
imul
js
cwtl
dec
scas
insl
pusha
add
pusha
ja
pop
jmp
sub
imul
addr16
test
sub
out
pushf
cmp
test
movsb
cmp
mov
lods
dec
pop
insl
lret
rcl
insb
jnp
push
pushf
ficoms
and
subb
jnp
aam
jns
dec
aam
pop
add
cmp
sub
cld
mov
add
xor
adc
adc
test
enter
add
insb
jl
mov
mov
xor
mov
xchg
mov
mov
inc
shll
or
in
adc
jl
mov
mov
or
adc
test
flds
out
movsb
in
mov
cmp
mov
mov
mov
fidivl
jns
int3
daa
add
mov
jle
es
add
out
sub
fstpt
fdivrl
mov
mov
fcoml
in
add
jl
mov
outsl
mov
add
lods
or
test
fucomp
mov
lcall
adc
fsubs
fimuls
sbb
lds
stos
nop
mov
sub
addr16
scas
pop
test
popl
mov
fildl
lahf
test
or
test
lea
cmp
test
mov
add
and
pop
stc
mov
cmp
dec
cmc
movsb
mov
movsl
xchg
lods
mov
dec
idivl
push
jno
daa
xor
lds
push
and
ret
ljmp
push
jns
jl
pop
jo
adc
imul
dec
icebp
js
mov
inc
fcomps
push
pop
rclb
je
les
sbb
jae
lea
out
cwtl
sbb
mov
adc
mov
stos
shlb
scas
nop
sub
loop
and
rclb
dec
mov
mov
daa
xor
sbb
outsb
mov
add
push
movsb
daa
add
ds
mov
int3
stos
dec
aam
sbb
lret
mov
inc
cmp
mov
rolb
aaa
mov
inc
insb
leave
cmp
js
jp
test
aas
mov
jb
mov
sub
rcll
mov
jge
dec
inc
jge
icebp
jle
push
mov
jle
xchg
std
mov
aaa
nop
mov
nop
mov
xlat
add
sbbb
nop
js
sbbb
mov
adcl
stos
sbb
js
test
xchg
int3
cmc
js
adc
xchg
in
cmc
js
xchg
add
js
cmpb
pop
or
sub
inc
jno
jle
nop
je
cwtl
int3
std
mov
mov
lcall
inc
mov
mov
xor
mov
push
hlt
inc
lea
jl
icebp
jl
clc
je
or
pop
xor
xor
jne
pop
test
movsb
xchg
mov
shll
stos
sub
push
jne
test
std
mov
int3
fs
sbb
fsubrs
in
mov
jnp
hlt
mov
lods
add
cmpsl
lret
jl
push
push
std
mov
mov
test
js
test
mov
cwtl
jnp
mov
lods
loopne,pt
mov
cmp
fsubrp
sbb
mov
cmpsb
mov
mov
stos
jg
in
xor
in
clc
xchg
sbb
fs
push
adc
cs
inc
xlat
mov
lds
cmp
dec
mov
mov
mov
leavew
inc
jg
in
add
mov
ja
sbb
xchg
test
inc
outsl
mov
sbb
xchg
movsb
sbb
fs
push
pushf
add
mov
in
sbb
adc
mov
movsb
test
int
push
adc
lock
in
pop
mov
clc
push
pop
inc
in
cmpsb
xor
xchg
icebp
fs
stos
pop
sbb
jecxz
in
add
mov
mov
test
js
clc
push
sti
mov
ds
int3
mov
xchg
sbbb
cltd
ret
lods
mov
mov
push
add
loopne
and
int3
pop
insl
in
add
in
icebp
icebp
jnp
add
fs
pop
or
scas
mov
daa
addr16
in
cmp
in
mov
daa
push
mov
add
fs
hlt
xchg
nop
out
mov
scas
xor
xor
test
negl
or
int3
scas
dec
dec
mov
push
xchg
ja
popf
leave
mov
popf
mov
test
mov
mov
xchg
js
or
dec
jp
sahf
add
pop
cmp
fdivrs
push
js
cs
dec
test
jp
lods
adc
sbb
jae,pn
push
xchg
jnp
mov
loope
jl
lahf
add
jp
cmpl
std
test
jge
mov
mov
bound
jge
hlt
xchg
mov
rclb
adc
sub
data16
cmp
add
xchg
and
clc
jle
xorb
cmpsb
pushf
in
cmp
jg
sub
movsb
xchg
mov
mov
add
leave
aam
push
fs
repnz
imul
xor
cmc
inc
aam
ret
xchg
adc
jnp
clc
ss
rcrl
adc
in
mov
test
imul
mov
pop
addl
xchg
xchg
xchg
mov
xchg
add
xlat
dec
gs
jg
enter
xchg
mov
xchg
fcomps
xchg
fcomp
xor
xchg
fs
mov
popa
jb
pop
mov
enter
pop
xchg
mov
xchg
aam
fnstenv
xchg
pop
jnp
mov
insb
enter
sub
divb
fisubs
stos
pop
sbb
pop
out
ds
test
cwtl
mov
aaa
pushf
scas
dec
fmuls
fs
push
repnz
pop
enter
ret
es
scas
jns
push
push
pop
pop
nop
adc
lcall
stos
das
clc
sbb
int3
and
in
dec
push
in
adc
adc
add
je
xchg
push
jae
fdivrs
adc
push
or
sub
lock
xchg
insb
pushf
ficoms
mov
push
xchg
jl
pop
mov
inc
pop
xor
bt
movsb
mov
xchg
sub
mov
out
cmp
movsl
sbb
outsl
scas
xchg
test
sbb
scas
dec
adc
cwtl
sub
push
mov
cld
dec
inc
pushf
push
mov
cmpsl
aad
rcrl
pushf
test
test
int3
inc
test
add
adc
cld
adc
test
lods
mov
test
shlb
pop
dec
adc
inc
adc
test
rolb
dec
xchg
lret
fsubrs
les
jg
test
add
loope
scas
lret
fsubrs
xor
scas
es
lods
xchg
scas
stos
xor
sbb
rol
fs
pop
pop
sbb
jecxz
int3
fsubs
xchg
xchg
pop
data16
mov
mov
pop
sbb
pop
jl
xchg
pop
dec
jo
lock
jno
xchg
imul
cwtl
jae
daa
lock
pushf
imul
repz
testb
dec
mov
bnd
xor
mov
pop
cwtl
cwtl
lods
or
or
test
xor
sbb
hlt
sti
int
mov
xchg
adcb
cmpsl
orb
adc
pop
call
push
scas
int3
push
in
xor
outsl
aam
xchg
mov
cmp
scas
imul
sbb
stos
aam
clc
jg
test
xchg
mov
les
in
cmp
aad
jp
aad
cmpl
add
clc
clc
cmp
mov
imul
insb
mov
nop
ljmp
xor
in
scas
repnz
clc
mov
test
mov
pop
in
mov
filds
lods
fsub
sub
mov
enter
je
xchg
movsb
adc
test
mov
xchg
and
fsubs
adc
mov
clc
mov
sub
xor
mov
xchg
mov
mov
mov
mov
andl
mov
je
mov
mov
mov
fcmovnbe
subl
sub
jge
sub
outsl
fdivs
add
jecxz
fcomi
subl
lret
mov
mov
jb
cmpsb
dec
mov
mov
subl
sub
jge
je
ja
test
adc
push
stos
inc
fadd
xlat
mov
mov
jne
test
cmpsb
and
int
mov
dec
jne
mov
je
rcrb
std
js
fdivrl
inc
in
je
mov
mov
movsb
add
gs
lcall
insb
test
test
mov
add
int
je
ret
stos
mov
enter
movntps
mov
int3
pop
dec
imul
ret
out
je
push
enter
jecxz
cmp
movsb
aad
les
enter
sub
lret
push
mov
jo
add
aad
fwait
mov
xchg
call
in
insb
mov
or
dec
add
js
adc
inc
fadd
xlat
mov
flds
inc
in
xchg
mov
int3
add
or
fadds
mov
mov
iret
jle
jg
ss
outsl
mov
addr16
call
leave
std
sub
js,pt
out
mov
mov
push
scas
sbb
fadds
inc
lret
sbb
add
mov
lock
lret
jno
xorb
pop
inc
inc
call
mov
push
movsb
pop
pop
inc
pusha
jno
jno
pushf
xor
pop
dec
push
test
icebp
aam
pop
int
mov
mov
int
add
inc
lret
leave
fcoms
bound
lcall
inc
add
mov
into
mov
and
sbb
popf
mov
fadds
jle
nop
hlt
mov
fsub
in
mov
fsubr
enter
sti
mov
enter
jle
nop
repnz
mov
lock
add
add
mov
mov
mov
scas
cmp
xor
bound
push
push
push
bound
adcb
js
mov
mov
insb
and
jae
cmpl
icebp
push
mov
js
lods
dec
push
sbbl
test
mov
push
jae
icebp
in
sbb
cmp
mov
mov
pop
or
mov
clc
je
cltd
xor
lods
pop
xchg
call
mov
fsubrs
call
fsubrs
xchg
sahf
jo
sub
mov
js
sub
clc
dec
movsb
test
xchg
out
mov
test
sub
jo
test
fwait
test
dec
add
int
cmp
jns
js
rorb
jl
xchg
test
in
cli
pop
in
sbb
movsb
adc
loop
pop
jb
xchg
inc
sub
xchg
jo
cmc
js
pop
sti
push
jl
sbb
mov
int
fsubr
sbb
sbb
dec
jl
sbb
xchg
in
js
sbb
je
fcomps
pop
add
or
sub
add
or
add
dec
aad
lock
cmp
mov
pop
mov
inc
inc
xlat
in
mov
js
fdivrs
fstps
bound
outsb
xchg
fiaddl
je
mov
jmp
dec
js
fdivrl
ficoml
mov
mov
and
int3
pop
in
clc
xor
fdivrs
dec
fistps
sbb
add
out
and
icebp
jo
mov
icebp
push
cld
movsb
and
sub
pop
dec
hlt
scas
xlat
add
jecxz
add
sbbl
mov
add
jmp
js
cmp
into
xchg
out
cmc
mov
out
dec
call
call
mov
or
filds
jge
mov
movsb
mov
hlt
ja
fdivl
sub
mov
cmp
mov
les
inc
fdivrl
enter
jmp
adc
loopne
adc
out
or
xchg
push
lcall
enter
fnstsw
and
sbb
xor
add
inc
sub
in
mov
call
in
sub
mov
xor
and
sbb
mov
pop
jno
in
gs
mov
repnz
push
enter
in
sub
outsl
mov
cltd
movsl
insl
pushf
jmp
mov
lret
int3
pop
je
sti
mov
cmp
mov
in
fdivrs
jl
movsb
xor
into
fdivl
mov
fs
out
or
xchg
push
sbbl
ss
jle
mov
mov
dec
fdivrl
pop
mov
cmp
out
fcompl
add
nop
mov
mov
out
or
lcall
jge
rcr
ret
and
inc
push
adcl
cwtl
test
gs
inc
imul
leave
inc
shl
mov
mov
les
xlat
mov
scas
nop
jge
fs
lcall
add
mov
cmc
cmpsl
in
sub
mov
hlt
movsl
ss
push
pop
lock
add
gs
mov
mov
in
mov
in
mov
loopne
push
xor
imul
ds
mov
sbb
in
mov
imulb
in
ja
or
cmpsb
orb
sbb
mov
sti
push
sub
testl
add
inc
sub
mov
adc
testl
dec
clc
lret
inc
or
das
mov
pop
mov
ds
notl
faddl
enter
stc
xchg
cmp
push
sahf
or
dec
pop
into
fsubl
and
js
loopne,pt
cli
adc
mov
mov
scas
xchg
add
dec
inc
jp
xchg
clc
ret
inc
and
out
mov
fs
clc
sub
outsb
faddl
clc
out
outsb
fsub
les
mov
mov
jno
xor
decl
push
add
adc
pop
inc
add
cmovne
std
cmp
orb
inc
xchg
mov
or
sbb
les
adc
mov
push
xchg
xor
movsb
test
lock
push
mov
push
add
push
js
stos
xchg
dec
adc
inc
adc
cld
xchg
ds
mov
inc
xor
xchg
leave
adc
lods
movsb
xchg
mov
cld
xchg
inc
mov
lods
xchg
xor
mov
out
add
mov
add
add
rorl
sti
adc
pop
jae
mov
fs
inc
and
adc
mov
mov
lods
lea
sbb
lea
push
or
fisubs
adc
loopne
mov
or
add
imul
loopne
rcrb
andl
mov
hlt
nop
mov
enter
insb
xchg
orb
jae
movsl
adc
orb
popa
xchg
xchg
mov
xchg
data16
jl
xchg
xchg
adc
fcomip
adc
mov
nop
or
xchg
aad
test
xchg
mov
xchg
jo
enter
les
xchg
test
mov
enter
int3
xchg
cltd
jb
dec
outsl
jae
lock
cwtl
mov
test
xchg
lcall
je
int3
or
xchg
adc
fwait
test
mov
enter
lret
popf
jb
xchg
sbb
or
sub
popf
aad
mov
pushf
mov
jo
add
dec
outsl
jae
fsubs
lahf
pop
subl
shrl
jno
cmpsl
outsb
mov
mov
jl
mov
shlb
inc
mov
movsb
xchg
mov
mov
rolb
cbtw
mov
sbb
rclb
dec
data16
xchg
movsb
adc
popa
jb
pop
mov
mov
xchg
rolb
lock
xor
les
cmpsl
mov
mov
mov
xchg
test
int3
add
test
inc
push
fs
pop
fsub
test
test
mov
icebp
jl
and
daa
pushl
mov
dec
mov
pmaxsw
and
into
xchg
pop
lcall
xchg
mov
dec
sub
arpl
push
or
lock
push
sbb
ret
xchg
outsb
addl
pop
scas
repz
sub
jne
cmp
in
jo
lcall
in
adc
incl
sub
repz
add
jns
iret
ret
sbb
jb
inc
mov
adc
sub
mov
dec
dec
inc
cmp
or
call
or
mov
or
scas
repnz
mov
sbb
test
push
out
xor
cld
in
out
sub
dec
in
aam
jns
nop
xchg
mov
push
or
iret
fcoms
and
lods
jb
call
cltd
int3
jl
xor
pop
enter
mov
pop
cmpb
hlt
flds
insb
jno
test
in
xor
pop
bound
jb
xchg
and
mov
les
out
pushf
mov
in
xchg
dec
or
or
icebp
or
stos
test
test
pop
add
jnp
mov
xchg
pop
cmc
and
add
lods
lds
nop
or
fistpll
or
nop
xor
mov
orb
aad
insb
sbb
push
jg
push
or
aas
jle
jg
shl
and
nop
or
pop
pop
cmpl
rcll
push
rcrb
sub
lods
loope
cwtl
lret
ljmp
xchg
pop
sbb
aam
lret
add
dec
pop
pop
xlat
leave
jo
andl
jno
scas
mov
push
fcomps
add
adc
cmpsb
mov
scas
pop
jl
cmp
js
addr16
cld
jl
clc
mov
js
or
xor
loop
inc
inc
xchg
das
adc
mov
push
fsubr
sub
lock
bound
scas
inc
aaa
je
dec
popa
jae
adc
sub
stos
and
cmpsb
xor
xlat
mov
fcoms
out
dec
lcall
lock
mov
cltd
dec
mov
adc
push
mov
lea
fdivl
lock
jo
es
loopne
cli
inc
pop
add
and
push
xchg
aam
test
sbb
jnp
pusha
xchg
jl
das
leave
or
lods
cld
dec
or
lock
pop
xor
and
aam
jge
cld
and
sub
js
mov
add
mov
repz
mov
dec
nop
movsb
or
int3
out
hlt
and
movsl
jno
lcall
call
std
fdivrs
pop
mov
inc
push
sbb
int3
int3
add
jmp
cmc
mov
or
int3
or
jo
sbb
sbb
aad
scas
jo
xlat
mov
clc
push
pop
ss
cld
ds
mov
clc
fdivr
jb
xchg
nop
sbb
mov
pop
scas
repz
mov
xor
shll
xorb
decl
in
cmp
fdivs
jecxz
int3
insb
xor
test
cmpsl
in
dec
add
cld
test
adc
jp
stos
or
ds
mov
inc
cmpsl
dec
cld
dec
and
out
cmp
stos
sub
int3
in
cld
cmpsl
pop
and
xchg
and
add
mov
mov
imul
add
scas
es
add
js
repnz
aam
lret
mov
sub
mov
insb
jge
inc
test
push
or
movsl
pop
jo
add
scas
pop
push
sub
sub
shrl
insb
cmp
in
int3
push
scas
out
inc
xchg
test
outsl
pop
js
add
push
xor
dec
push
xor
rorb
xchg
pushf
xor
mull
jnp
hlt
mov
push
xchg
mov
inc
mov
jle
fs
inc
mov
jle
fs
jp
cmpsl
inc
add
js
pop
test
xor
mov
lods
insl
fs
in
dec
mov
fs
mov
or
lock
pushf
stos
add
cmp
ljmp
cmp
and
push
mov
mov
aam
mov
ds
out
shlb
call
jae
lea
mov
pop
push
jge
mov
int
adc
push
sarb
jb
xchg
enter
bound
cwtl
hlt
icebp
inc
jb
sahf
test
add
je
cwtl
cwtl
cmc
int3
inc
cs
sub
movsb
xor
xor
cmp
xchg
mov
int3
sub
lock
fbstp
inc
jo
xorl
enter
subl
in
nop
push
jns
push
mov
jg
cs
aam
jns
shl
ljmp
mov
test
movsb
movsb
dec
sub
jne
test
rorb
xor
ss
inc
aaa
addr16
setae
inc
jae
stos
sbb
push
pop
lock
jl
ljmp
movsl
bound
repnz
xor
add
repnz
jnp
fnstenv
test
xor
jp
lcall
lock
lods
mov
jp
rclb
rorb
stos
ss
jg
in
jne
sarb
scas
scas
cmp
jg
in
jne
sarb
and
inc
cmp
clc
adc
xchg
std
cmc
js
in
jmp
inc
lret
push
push
add
mov
in
inc
inc
js
insb
pop
and
mov
mov
loop
add
movsb
out
sub
jo
and
lcall
pinsrw
push
lea
and
inc
jns
mov
loopne
es
cs
jae
lods
adc
xchg
mov
out
mov
fdivs
jno
dec
pop
dec
cli
in
dec
mov
vaddps
pop
enter
jo
xchg
sti
xchg
xchg
cld
xchg
push
es
mov
cmp
sbb
jno
push
sti
fiaddl
dec
or
sahf
js
clc
xor
add
fadds
mov
js
cld
and
clc
xor
clc
sbb
mov
std
mov
add
clc
add
mov
pushl
std
js
pop
sub
jge
pop
lret
lods
imull
cmc
adc
sub
jg
cwtl
std
std
js
jo
clc
xlat
mov
fnstenv
iret
xchg
cwtl
mov
xor
add
mov
ja
xchg
pop
imull
add
inc
cmp
mov
or
clc
dec
lods
inc
cmp
cmp
cltd
lret
push
cmc
push
and
call
inc
mov
mov
jb
xchg
and
mov
mov
add
shl
cmc
js
sarb
sbb
sbb
xchg
movsb
mov
ret
mov
test
int3
roll
enter
lods
add
mov
repz
sbb
data16
xlat
mov
xchg
ret
mov
scas
stos
mov
in
fmuls
dec
xlat
mov
xchg
nop
enter
enter
js
nop
xchg
mov
bound
les
in
mov
fs
pop
xchg
push
jg
and
pop
mov
xor
nop
jno
xor
gs
rorb
les
lock
fisubl
pop
gs
mov
fdivr
pop
nop
add
mov
nop
data16
xor
mov
scas
add
cld
push
push
or
repnz
sbb
mov
and
push
jge
loop
and
jg
push
shr
aas
xchg
or
out
cmp
test
push
push
add
xor
jno
pop
fildll
clc
push
jb
in
int3
push
sub
leave
test
leave
test
inc
outsl
mov
out
in
cmp
leave
in
and
dec
shrb
ja
dec
pusha
sahf
test
jae
adc
dec
imull
jns
push
lock
xor
lret
aas
addr16
lret
test
int3
or
jae
cmp
pop
xchg
pop
sbb
cmp
sbb
xor
or
jle
cmp
notl
sbb
sub
iret
inc
ss
dec
dec
mov
mov
mov
out
scas
cmpsb
es
cld
fwait
mov
add
loope
cmp
nop
lods
add
movsb
pop
jb
jnp
rorl
fwait
stc
loopne
in
mov
sub
jb
shll
mov
adc
lock
sub
sub
xchg
pop
lods
dec
enter
jecxz
jl
aam
jmp
fs
jle
hlt
add
es
dec
sub
loop
dec
ljmp
or
in
fs
mov
dec
mov
mov
xor
push
push
mov
out
jl
pop
addr16
mov
js
out
sbb
pop
bound
fwait
pop
dec
mov
fwait
js
pop
dec
mov
rcrb
enter
rorb
inc
rolb
xor
xchg
jl
stos
xchg
adc
hlt
xor
and
nop
jno
mov
add
mov
aad
xchg
das
mov
mov
inc
in
xchg
pop
mov
fmull
jge
mov
mov
jno
jnp
mov
pushw
in
xlat
mov
xor
scas
xchg
pop
pop
xchg
mov
pop
enter
jg
sbb
mov
inc
out
sbb
pop
mov
mov
arpl
xchg
negl
mov
jno
jnp
mov
xchg
leave
in
ds
mov
adc
or
cli
enter
mov
jno
mov
sbb
outsl
mov
jb
jae
mov
bound
lret
sbb
mov
inc
in
adc
nop
mov
push
fs
push
push
mov
in
pop
and
mov
mov
push
fwait
or
loopne
fs
push
mov
mov
mov
bnd
inc
sbb
jns
jo
xor
inc
mov
fwait
movsb
cmp
adc
and
inc
and
lods
les
xor
add
jae
leave
inc
imul
dec
aam
daa
js
cli
jle
stos
data16
jne
and
lods
scas
push
decb
mov
not
or
push
adc
dec
cld
xor
fldcw
in
jo
add
mov
imul
addr16
jp
sahf
xor
add
mov
mov
or
sahf
xor
add
jne
xor
add
xorl
mov
add
jbe
insb
fmuls
mov
jo
sbb
in
add
in
and
add
movsl
in
lock
outsb
fidivl
nop
xor
fs
xchg
out
fistpll
sub
mov
sbb
lock
xchg
inc
mov
mov
push
call
mov
mov
add
test
push
out
int3
lock
push
addr16
add
cmp
ret
js
int
fdivs
mov
cmp
mov
jae
cmc
iret
or
mov
xchg
out
jae
pop
xchg
adc
ret
shlb
in
sbb
daa
sub
sbb
enter
mov
pop
sbb
shrl
cltd
push
notl
shrb
int
push
mov
pop
lock
xor
imul
jg
fmul
test
fsubrs
lods
jae
test
addb
adc
test
jae
test
test
sub
je
ret
dec
test
jne
aad
jne
test
mov
jbe
jmp
push
fs
cli
sub
addl
jns
outsl
xchg
decl
xchg
pop
sbb
pop
mov
pop
pop
fisttpll
pop
adcl
pop
inc
xor
scas
pop
dec
jp
or
in
or
movsb
xchg
sbb
add
stos
pushf
dec
jl
pop
in
shll
clc
aad
int3
or
shlb
add
in
test
xchg
jno
mov
shll
xor
pop
nop
xchg
in
or
loop
or
and
js
ret
sub
inc
aam
push
mov
inc
int
std
js
mov
inc
and
ja
sbb
mov
mov
mov
xor
xor
lret
sbb
mov
aas
fidivrl
mov
push
jle
xor
jne
inc
ret
lahf
js
mov
dec
mov
fcompl
das
enter
xor
call
xor
xchg
sbb
mov
loop
in
xchg
jo
mov
mov
js
out
mov
mov
mov
cmp
mov
mov
sub
and
je
std
scas
out
testl
pop
push
sbb
insb
xorb
xchg
xorl
es
push
adc
mov
or
adc
cltd
fs
popf
jl
mov
mov
cmp
in
inc
cmp
cmp
xchg
dec
xchg
xchg
loopne
mov
movsb
or
xor
cmp
inc
inc
test
fistpl
push
inc
fwait
cwtl
inc
mov
and
je
push
xchg
mov
xchg
dec
inc
aas
scas
cmp
inc
aam
jns
jb
int3
icebp
or
and
pop
sbb
xchg
fimull
lcall
mov
mov
sti
ret
ret
cmp
pop
into
mov
dec
test
aam
nop
or
mov
rcrb
test
sub
lcall
mov
das
ds
aam
xchg
xchg
js
xchg
or
movsb
hlt
and
sbb
call
pusha
fstpt
lahf
enter
fldcw
dec
cmpsb
cmpsl
popa
mov
jecxz
inc
inc
cltd
jne
mov
xchg
mov
int3
in
lcall
and
mov
mov
pop
mov
adc
mov
pushf
xchg
mov
addb
jo
subl
or
push
mov
xchg
mov
jns
add
mov
popf
dec
xchg
loopne
lds
add
sub
push
pop
sub
add
pop
jge
dec
sub
mov
dec
jno
xchg
pop
fstps
xchg
lahf
dec
ficoml
jecxz
ljmp
pop
xor
and
dec
push
mov
mov
mov
call
adc
sub
sub
jge
adc
lahf
mov
fs
mov
pop
push
xchg
arpl
push
mov
jg
pop
adc
mov
mov
sub
xchg
jge
dec
and
mov
mov
loopne
rcrb
cbtw
stos
je
lock
push
xor
inc
lock
enter
imul
push
aad
or
enter
dec
xor
jp
or
daa
add
add
aas
xor
cmc
cmp
movsb
stos
cmp
mov
cmp
jl
lea
xchg
jne
mov
add
stos
mov
lret
es
xor
jb
jo
sub
mov
push
jp
inc
jnp
mov
inc
push
lret
test
or
cmp
mov
mov
xor
jne
mov
push
xchg
mov
inc
movaps
adc
mov
movsb
cmpsl
ja
scas
cmp
scas
cmp
push
fucom
test
push
add
fs
push
ljmp
mov
mov
pop
fwait
cmp
fcoml
adc
leave
clc
mov
lcall
fdivr
test
stc
enter
daa
mov
inc
jl
enter
xor
sub
sbb
loope
cmpsb
mov
je
nop
ljmp
lods
mov
mov
out
xchg
cmp
clc
add
inc
adc
lds
cmp
out
inc
fmul
dec
pop
cmp
mov
iret
pop
mov
mov
lcall
push
outsb
gs
inc
cld
lcall
or
or
fcmovnb
aad
pop
adcl
lahf
cmp
scas
in
cwtl
into
shrl
mov
scas
in
dec
adc
mov
xor
mov
push
xor
stos
mov
dec
or
jno
push
iret
mov
jno
mov
pushf
into
mov
mov
or
roll
mov
jl
scas
xchg
mov
out
xor
inc
xor
cwtl
fnsave
mov
cwtl
mov
dec
sbb
pushf
imul
adc
xchg
mov
cmp
mov
sbb
cmp
inc
cmp
pushf
daa
repz
lret
mov
stos
inc
push
leave
sbb
jle
les
out
push
lahf
or
loopne
popa
and
cmp
xor
shl
repz
lods
or
dec
mov
inc
mov
push
js
pop
jnp
jo
and
mov
push
adc
dec
mov
inc
insl
adc
insl
loopne
mov
push
jle
cmp
rcrb
push
jp
pop
jb
pop
push
mov
jb
dec
pushf
mov
bound
fcomps
popa
push
pop
pop
sub
pop
xchg
in
iret
push
dec
push
inc
iret
dec
outsl
mul
xor
xchg
aad
sbb
pop
into
mov
enter
dec
popa
rorb
ret
push
sub
push
leave
arpl
add
xchg
mov
jle
and
pop
aaa
jb
xchg
in
push
cld
loopne
insl
inc
xor
push
pop
push
arpl
sub
pop
pop
xlat
jb
fcmovu
bound
push
loop
loopne
jmp
aam
pop
xchg
push
jns
xchg
je
adcb
pop
enter
cmp
sbb
fnstcw
jnp
cmp
cmpb
push
sbbb
sarb
inc
ret
inc
mov
or
xchg
push
push
mov
sbb
sarb
mov
mov
xchg
js
imul
push
pop
mov
sbb
enter
pop
adc
jge
jnp
mov
mov
mov
or
pop
push
mov
stos
jb
pushf
movsl
ret
mov
add
jb
fwait
inc
adc
lahf
cmc
xchg
and
popf
pop
mov
mov
movsb
mov
sbb
xchg
loop
lcall
sbb
jbe
add
shlb
jl
outsb
jno
xorl
in
mov
in
mov
inc
jbe
pop
cwtl
les
pop
js
dec
sub
and
aad
xlat
inc
add
pushf
stc
fcmove
add
mov
mov
xchg
pop
jae
cmpsb
ss
pop
loopne
cltd
rolb
and
loop
loopne
add
scas
pop
pop
jl
loop
jnp
jns
mov
movsb
aad
mov
leave
rcrb
mov
addr16
lock
mov
clc
rclb
push
lds
js
movsb
mov
insl
mov
jns
movsb
mov
ret
icebp
cld
sub
movsl
js
sbb
jb
sbb
jp
cmpsl
xchg
inc
sub
enter
mov
inc
mov
movsb
mov
fcompl
push
popf
movsb
mov
mov
add
ret
xlat
xchg
stc
jbe
je
in
divb
movsb
adc
mov
shr
mov
cltd
ret
add
mov
xchg
aaa
add
xchg
jns
mov
add
adc
mov
push
cld
xchg
sbb
push
push
imul
xor
dec
ret
jmp
subl
sub
push
and
nop
movsb
in
cmp
sub
mov
gs
jle
sbb
sar
leave
ficomps
sub
pusha
hlt
pop
cwtl
mov
mov
xchg
sbb
add
andl
pop
je
sarb
inc
mov
mov
outsl
pushf
jb
add
dec
fwait
pushf
sbb
jne
loop
xor
imul
xchg
mov
mov
movsb
mov
or
test
cmc
mov
rcr
andl
jecxz
cmc
sbb
shrb
test
mov
dec
ja
insb
mov
dec
sub
mov
into
lea
into
sbb
shl
cwtl
ja
inc
cltd
aad
xor
cmpb
nop
cmp
xchg
add
mov
and
sbb
shl
xchg
add
inc
subl
popf
adc
movsb
mov
push
sub
xor
xor
xor
rcll
dec
mov
js
scas
inc
xchg
fs
push
xchg
pop
lds
mov
enter
fsubs
sbb
and
test
out
xor
insb
ret
nop
add
jmp
adc
mov
mov
lods
je
add
xchg
jmp
call
enter
mov
mov
in
inc
outsl
pop
inc
inc
out
leave
jp
cmp
sub
test
xor
insb
das
aam
fdivl
rcl
scas
push
sbb
icebp
aam
cltd
sbb
fidivrl
mov
movsl
jle
test
or
mov
jo
std
jl
add
out
into
fwait
test
or
jecxz
ficomps
js
stos
je
mov
loope
jbe
mov
mov
popa
shrl
fwait
leave
jmp
mov
xchg
repnz
push
lock
add
test
out
icebp
lret
in
push
loop
in
jl
lds
sub
mov
in
sub
lret
mul
jecxz
enter
xchg
or
lock
pop
hlt
mov
sub
cmp
test
pop
movsb
jmp
cmp
nop
sub
cmpsb
jne
jle
sarb
cmpsl
sbb
jne
repz
enter
mov
int3
mov
test
jns
xchg
leave
fcomps
js
lds
hlt
sbb
fisubl
je
les
pushf
mov
mov
mov
xchg
mov
pop
into
xchg
scas
jge
jo
adc
jmp
xor
sbb
jbe
mov
nop
xchg
ret
ljmp
fwait
fs
hlt
fldenv
jl
mov
xchg
jl
daa
xor
idivb
sub
stc
fmull
jle
bound
sahf
imul
xchg
sahf
inc
pop
xlat
mov
je
sub
popf
dec
pop
nop
jae
cld
and
xlat
nop
jge
rclb
shr
push
int3
mov
test
loop
fs
aam
loopne
xchg
es
mov
pop
xchg
mov
popa
rclb
lahf
addr16
negb
adcl
jne
xchg
data16
xchg
xorl
add
xor
xorb
outsl
jl
fwait
add
jbe
movsb
sbb
pop
movsb
out
xchg
mov
and
js
fs
jne
pop
jmp
test
int
sub
xchg
outsl
mov
cmc
jne
out
mov
call
add
sbbb
movsl
out
add
fmull
cmpsb
icebp
out
lds
popa
xchg
cmc
out
stos
and
jg
fdivs
adcl
scas
mov
mov
inc
cmpb
sbb
mov
data16
cmp
cmp
fidivrs
mov
inc
and
rorb
mov
lods
inc
pop
in
mov
mov
xor
xchg
gs
insb
loop
scas
cmpsb
out
sub
out
and
ja
dec
mov
test
jae
jmp
js
movsb
lcall
rorl
jb
mov
loop
cmpsb
dec
jae
mov
push
iret
push
insl
stc
clc
cmc
ljmp
iret
call
pop
mov
popa
pop
fldt
xor
mov
fidivl
scas
frstor
jp
mov
jle
je
fbld
fildll
lods
or
sub
jnp
lods
jns
mov
andb
cwtl
icebp
test
jl
cld
pop
jmp
hlt
cmpsb
stc
lods
test
mov
cmp
arpl
andb
xchg
jp
jbe
jl
aad
jecxz
mov
in
cwtl
pop
out
in
iret
push
adc
insb
orl
lahf
int3
mov
pop
aam
sub
movsl
pop
adc
jl
insb
data16
xchg
cmp
gs
jl
xchg
cmp
add
int3
jl
xchg
cmp
and
enter
les
cmpsb
and
mov
stos
std
jae
adc
push
sbbb
and
ss
lods
sbb
imul
mov
adc
mov
xchg
mov
inc
jno
jo
jne
xor
and
xchg
jl
cltd
cmp
and
jbe
adc
jl
icebp
cmp
js
xor
xor
mov
mov
scas
jp
xchg
lea
pop
cmpsb
call
jl
push
scas
popa
fisubrs
cmc
xchg
call
jle
test
in
jnp
push
pop
push
mov
mov
inc
mov
mov
pop
cmp
add
mov
mov
arpl
inc
rorb
mov
xchg
and
mov
in
sub
jg
lock
stos
cs
rcrl
mov
mov
aam
stos
pop
insb
dec
dec
pop
ja
inc
lods
gs
loopne
mov
jbe
push
dec
mov
mov
test
or
js
pop
loopne
enter
sub
cmpsb
fucom
jo
sbb
sub
sub
lods
push
sub
daa
jmp
cmp
stos
xchg
sub
jbe
dec
sbb
push
xor
call
mov
test
xchg
mov
int3
add
clc
mov
mov
stos
xor
push
stos
pop
xchg
mov
pop
cld
shlb
sbbb
pop
dec
add
cmpsl
dec
sahf
cwtl
popa
lods
mov
stc
insb
mov
dec
loop
adc
test
sbbl
aam
pop
xor
mov
pop
mov
mov
sub
out
xchg
dec
jle
add
mov
pop
sbb
mov
jno
loope
jbe
dec
stos
daa
clc
mov
pop
enter
lods
mov
push
or
imul
jns
jns
ja
test
push
test
lods
cmp
xlat
sub
scas
fcmove
inc
pop
clc
aad
xchg
add
repz
jp
jne
jg
popa
pop
insb
test
insb
andb
movsb
jge
xor
enter
push
and
daa
mov
and
jg
dec
add
out
syscall
mov
fdiv
push
sub
popa
and
and
jb
xor
cli
jle
dec
mov
cltd
rcrl
or
mov
push
shlb
adc
sbb
js
cli
jmp
xchg
shlb
and
pushf
subb
or
sub
jl
ret
cmp
hlt
mov
dec
loop
jns
mov
push
mov
ret
add
stc
inc
inc
imul
test
sahf
lret
ret
mov
in
je
mov
cwtl
sub
aaa
in
test
punpckldq
adcl
fwait
stos
in
jno
shrb
push
cld
fdivrl
mov
or
dec
mov
in
adc
rcr
imul
mov
js
stc
xchg
fisubs
xchg
lock
mov
lock
mov
xor
lock
xorb
lock
jne
movsl
and
lods
sbb
add
in
add
ret
jg
fs
fistpl
stos
je
int3
pushf
ret
xchg
jg
ret
int3
add
pop
je
lret
cwtl
and
xor
sbb
in
dec
arpl
jge
push
jne
xor
or
sti
sahf
loop
pop
nop
inc
pop
adc
add
mov
or
sbb
fsubs
arpl
fs
push
add
popa
jb
lcall
pushw
pop
xor
add
cmp
pushf
stos
add
icebp
sbb
pushf
fadds
test
dec
push
or
mov
ficompl
mov
arpl
rcrl
inc
jnp
shll
mov
dec
mov
lahf
cmpsb
lcall
pop
lret
jp
data16
imul
xor
add
jl
mov
sahf
lds
pop
insb
mov
bound
enter
xchg
insb
jae
cmpsb
lods
pop
sub
mov
or
pop
sub
push
leave
cmpsb
mov
jns
xchg
test
xchg
sbb
sarb
nop
and
pop
mov
lock
adc
cwtl
orl
mov
dec
pushf
or
sarb
adc
push
stos
pop
nop
and
cld
mov
mov
adc
enter
dec
enter
jbe
push
dec
aam
mov
fisubl
pop
fcmovb
mov
out
mov
out
fwait
jbe
sub
rclb
push
xor
xor
add
inc
sub
sbb
add
xchg
mov
xor
notl
mov
or
fld
sbb
les
fwait
aaa
aaa
inc
js
xchg
xchg
mov
fwait
cmp
test
pop
mov
sahf
fildll
nop
fsubr
mov
jl
add
cmc
dec
sub
and
xor
scas
fildl
js
push
ds
add
popa
sub
adc
mov
data16
dec
push
sbb
jp
or
push
js
movsl
into
sub
test
jmp
inc
jne
inc
les
lcall
cwtl
xchg
movsl
inc
les
movsb
fbld
popa
mov
mov
movsb
jecxz
loopne
mov
fwait
cmp
clc
pushf
inc
pop
in
mov
cltd
fs
stos
push
sub
mov
cmp
insb
ret
inc
cmp
mov
jbe
scas
mov
sbb
jl
lock
jne
jle
cld
stos
mov
sahf
jns
pusha
push
jecxz
std
into
push
out
add
add
mov
dec
ljmp
push
and
js
test
xchg
inc
fs
lea
add
jbe
nop
xor
mov
in
xchg
inc
sub
fwait
jmp
xchg
movsb
fadds
adc
sahf
push
pop
lcall
int3
sarb
int3
rcrb
pop
popa
add
nop
xor
jge
xchg
sbb
xor
mov
jmp
mov
adc
mov
xlat
cmc
lret
push
add
in
inc
jne
xor
xchg
cmc
bound
cltd
mov
out
fdivs
cwtl
aaa
cmpsl
sub
push
mov
xchg
mov
test
adc
mov
mov
xchg
push
aam
or
movsl
aas
jg
jmp
xchg
push
test
mov
daa
das
jle
cli
insb
xchg
adc
int
mov
xchg
fnstenv
cmp
cmpsb
cwtl
lods
ret
xchg
push
js
jne
popf
adc
pop
es
jne
lods
xchg
and
add
mov
push
jne
adc
pop
out
std
pop
in
xchg
enter
out
push
push
jg
pop
push
jg
mov
or
test
sbb
sub
pusha
arpl
mov
outsb
std
enter
js
loope
jbe
fimull
or
or
dec
dec
enter
in
fmuls
out
les
clc
inc
loop
fisubrs
sbb
leave
stos
pop
inc
test
lock
lret
add
shr
test
enter
and
mov
scas
push
filds
xor
jae
mov
arpl
fdivrl
pop
cmc
nop
lret
aam
aaa
out
shlb
addb
push
gs
xchg
gs
push
sub
popa
iret
jae
cltd
jne
popa
push
xor
popa
push
xorb
jmp
arpl
dec
or
bound
sti
shlb
dec
pop
dec
lret
lds
adcb
addb
mov
nop
adc
fisttpll
aad
pop
dec
das
add
xchg
push
nop
inc
xorb
aad
mov
and
pusha
cmpsb
nop
xor
xor
test
mov
std
jb
inc
andb
push
push
cltd
dec
dec
arpl
out
in
nop
bound
xor
pop
xchg
roll
jo
xor
push
xorb
jmp
mov
in
pop
jge
scas
bound
push
jne
rol
pushl
in
mov
ret
mov
xor
stc
in
mov
and
andb
stos
push
add
rorl
fisubs
mov
mov
mov
xchg
lods
or
pop
js
fs
jge
arpl
jnp
mov
mov
jbe
std
and
jbe
push
xchg
sbb
cmpsl
std
xorb
es
cmpsl
adcl
jae
mov
cwtl
sti
insb
jge
mov
aaa
cmc
in
gs
sub
xchg
mov
rorb
popa
xor
sub
push
sbb
dec
enter
mov
adc
mov
inc
push
movb
cmc
adc
xor
inc
sbb
decl
xor
mov
or
xor
mov
adc
mov
sub
movsb
scas
popf
je
sti
test
fidivrs
xchg
les
add
inc
fs
cmpsb
movsl
mov
mov
adc
repnz
ret
movsb
sbb
add
outsb
es
sbb
push
mov
mov
lret
fdivrl
and
adc
and
and
popf
jne
cltd
les
cmp
lret
mov
lds
cmc
js
addl
subl
or
cmpsb
jl
inc
sub
mov
data16
cmp
pop
sbb
mov
jne
data16
int3
inc
mov
push
jbe
xchg
jle
int
dec
fnstsw
sub
mov
mov
and
cltd
lods
xor
je
pop
lret
mov
rolb
aaa
mov
lret
or
xor
arpl
lret
movsl
fs
push
push
mov
es
lret
aaa
scas
aad
cli
mov
ret
jmp
in
push
into
adc
mov
mov
out
ret
mov
mov
sahf
shlb
fidivrs
jge
movsb
mull
mov
push
mov
hlt
ret
out
mov
aaa
xchg
popf
int3
lods
shl
stos
adc
shl
adc
xchg
or
mov
jne
ja
lods
push
xchg
test
outsb
repnz
or
xchg
inc
cmpsl
idivl
fstp
jl
sti
clc
mov
icebp
or
aaa
ss
or
mov
les
and
mov
push
xor
jbe
add
scas
push
ljmp
cltd
mov
fdivl
push
pop
inc
stos
xchg
add
sbb
xor
xchg
mov
roll
mov
ret
out
sub
jge
test
push
lock
js
mov
mov
mull
stc
push
jecxz
jge
test
mov
sbb
or
popf
enter
gs
sbb
and
jge
dec
pop
push
hlt
sbb
cmpsb
lret
jne
push
movb
and
pop
es
push
jo
xchg
push
les
fwait
je
mov
add
cmc
xor
cltd
xchg
jbe
and
sti
xor
cli
xchg
and
mov
jl
xor
xchg
sti
jl
mov
aaa
test
cmp
fs
add
or
clc
loope
mov
jbe
jns
jne
pop
inc
and
jno
sahf
lcall
inc
gs
xor
xchg
mov
mov
arpl
mov
pop
out
xchg
jo
icebp
or
ja
les
aad
adc
ret
sahf
push
sbb
pop
dec
hlt
orb
lock
les
jge
loop
xchg
jmp
call
push
sbb
clc
dec
push
adc
es
fwait
sub
loop
in
sti
daa
int3
repnz
lock
and
sub
add
divb
hlt
scas
rorl
loop
mov
data16
mulb
push
xchg
jnp
ljmp
jmp
into
stos
in
cld
stos
jns
cmpsb
add
jmp
aad
jne
xor
scas
inc
stos
sub
stos
les
xorb
mov
fidivl
bound
inc
daa
mov
call
bnd
or
sbb
inc
ret
sbb
out
in
sbb
mov
cmp
cmp
mov
cmp
mov
ljmp
jl
test
lock
loop
test
cwtl
jl
add
es
pop
icebp
aas
cwtl
pop
dec
sub
jle
jbe
movsb
loop
incb
mov
imul
ljmp
je
ret
jne
xchg
into
fadd
sti
insb
mov
jl
dec
cmc
loop
nop
mov
mov
sbb
mov
add
jae
sahf
sub
aam
xchg
cltd
xor
in
adc
lahf
les
outsb
popa
jns
lods
inc
or
stos
lods
xchg
cltd
mov
and
enter
jecxz
les
repz
adc
out
sbb
xchg
sbb
fdivrp
sub
jno
jp
sbb
andb
leave
and
xchg
out
cwtl
jns
js
sbb
dec
stos
js
gs
repnz
push
sbb
push
jl
cwtl
mov
push
jb
mov
sbb
test
and
ret
lretw
pop
scas
insb
movsb
out
in
mov
sahf
outsb
add
ja
xchg
mov
mov
outsb
xchg
loop
fsubrs
loop
inc
jg
mov
stos
js
out
hlt
pop
loopne
pop
rolb
cmp
jmp
jle
and
sub
push
gs
cmpl
mov
fidivl
mov
xchg
mov
sub
inc
add
sub
jp
sarb
mov
fnsave
xorb
mov
add
in
addr16
lret
and
jo
adc
rorb
sar
mov
cltd
mov
mov
mov
fld
out
call
mov
xchg
outsb
lock
xchg
leave
and
xchg
mov
pop
mov
in
mov
jge
or
or
sbb
gs
leave
mov
mov
and
fdiv
dec
push
inc
mov
mov
cmp
ret
rol
mov
sbb
jb
mov
int3
or
jl
inc
jge
adc
pop
sub
xchg
sbb
in
jl
lahf
ret
aaa
fwait
sbb
daa
aam
in
lret
mov
hlt
jge
test
sbb
xchg
into
dec
mov
pushf
repz
cli
cs
mov
cli
cwtl
jle
push
arpl
bnd
xor
inc
jle
fsts
loop
jns
xchg
sar
mov
psubusw
cltd
push
mov
fsubl
orb
into
xor
and
and
push
xchg
xor
fcmovb
sbb
mov
movb
icebp
outsb
sbb
mov
lcall
movsl
std
out
in
push
mov
enter
icebp
inc
xchg
xor
sbb
sbb
adc
inc
mov
push
ljmp
fwait
mov
dec
adcb
pop
pop
xchg
cmpsb
ret
add
push
jnp
fidivl
in
inc
andl
sbb
out
mov
js
mov
or
sbb
ja
insb
inc
loopne
mov
call
in
jecxz
call
adc
popa
in
stc
mov
push
loop
lcall
cltd
dec
fcomps
sarb
sahf
sub
mov
nop
stos
mov
sbbl
mov
stc
pop
push
or
in
pop
ret
test
xor
repnz
fs
mov
lcall
jle
mov
cmpsb
fwait
mov
or
inc
adc
mov
mov
gs
jg
loop
outsl
std
cld
icebp
cli
fwait
imull
out
ljmp
hlt
roll
inc
stos
mov
mov
cmp
ljmp
std
jp
clc
sbb
rcrb
outsb
jge
ret
jmp
and
stc
jp
sahf
jg
xchg
movsb
je
stc
and
jne
inc
aam
xchg
cltd
clc
les
ss
cwtl
pusha
repz
imul
ret
in
xchg
mov
stc
test
mov
and
les
movsb
push
cmp
fs
ret
adc
out
sub
sti
adc
in
jmp
je
cmc
ret
jle
lahf
mov
and
jge
cmp
filds
lods
ret
ss
adc
sbb
cmp
jne
inc
in
jne
inc
xor
xor
mov
mov
inc
in
mov
add
xchg
in
mov
or
jnp
cmp
cmpsl
in
fdivrs
es
mov
adc
or
stos
pop
in
jge
xchg
cli
jne
les
fs
mov
xchg
bound
push
inc
mov
call
inc
mov
jb
loop
sbb
jns
hlt
out
ret
push
out
aad
inc
mov
fcmovne
cmc
cmp
lds
and
push
jge
fs
pop
sti
ljmp
test
icebp
shl
xchg
shl
sbb
in
fnstenv
sub
stos
lret
nop
sahf
aad
jg
and
mov
xor
pop
lcall
xchg
notl
jo
mov
dec
sahf
sub
stos
mov
mov
inc
inc
in
jle
lcall
mov
or
stc
xchg
jp
jecxz
movsb
pop
jl
sub
and
movsb
leave
mov
hlt
add
ret
pop
daa
jecxz
or
push
xor
mov
and
mov
movsl
adc
aas
mov
sbb
xor
dec
cli
scas
mov
pop
cmp
scas
lahf
mov
push
dec
jp
enter
aaa
shl
cli
int
int3
pushf
std
test
inc
cmpsb
lock
mov
add
daa
mov
bts
hlt
std
orb
pop
test
shll
jge
fs
repnz
dec
dec
sahf
inc
clc
cmp
arpl
add
adcb
movq
std
mov
jne
setb
leave
pushf
out
mov
sbb
add
or
mov
out
push
jg
lcall
xchg
jo
and
pop
in
pushl
adc
in
lret
js
scas
push
jns
pop
nop
loop
adc
mov
in
sahf
je
lods
mov
std
xchg
push
jns
or
add
mov
fidivrl
pop
xchg
or
add
jns
cmc
sub
fwait
jp
fisttps
insl
movsl
in
divb
mov
sub
shll
sbb
mov
enter
jle
test
mov
mov
popf
jmp
sahf
rcr
bound
or
clc
out
rol
xchg
sbb
ret
aad
mov
in
jns
lret
arpl
adc
test
inc
or
fwait
cmpsb
mov
js
std
mov
xor
cmp
mov
loopne
bound
ds
clc
dec
jp
xor
adc
mov
lcall
movl
xchg
mov
mov
ja
stc
mov
dec
lret
fidivs
sbb
scas
mov
fsubrl
shlb
xchg
jae
and
sbb
in
in
mul
test
inc
jle
call
subb
pop
stos
xchg
sub
fwait
push
cwtl
stos
dec
fadds
add
push
mov
sub
lcall
pop
xchg
inc
subl
arpl
cmp
push
mov
fwait
cmp
loop
or
hlt
sahf
xchg
and
aas
or
data16
mov
inc
fisttpl
dec
jge
pushl
cmpsb
mov
adc
jg
pushf
sbb
xchg
lret
xchg
stos
in
sahf
cmp
gs
xchg
outsb
fwait
cmp
cmc
dec
push
pop
inc
ja
pop
ror
and
fs
ret
repnz
xor
push
fiaddl
cmp
mov
xor
pop
stos
repz
js
addb
ss
push
push
jg
sub
sbb
xchg
fdivrs
mov
filds
outsb
aaa
stos
sti
xchg
gs
out
iret
fdivrl
inc
inc
mov
dec
scas
repnz
sub
les
lea
cld
cmpsb
lret
pusha
xor
into
jns
cld
dec
lcall
data16
inc
lahf
push
ja
mov
xchg
ret
dec
leave
ret
nop
scas
dec
sbb
mov
test
xchg
sbb
pushf
xor
fisubrl
lods
iret
push
adc
push
lods
inc
xchg
filds
lret
push
cmp
jo
push
stos
in
or
add
jb
adc
pop
mov
or
ficomps
dec
xchg
sub
or
addr16
sbb
scas
lcall
sub
adc
add
sti
jne
lods
inc
ret
into
fbstp
mov
push
ficoml
enter
out
inc
add
adc
stos
sub
mov
out
std
mov
jp
mov
out
imulb
mov
andb
pushf
mov
dec
lret
jmp
cld
mov
dec
jae
movsl
jno
std
jae
hlt
jp
xacquire
gs
lret
in
in
add
or
ljmp
ret
xor
sbb
sub
stos
adc
or
jg
movsb
fnstenv
rol
in
cmp
jbe
jp
orb
adc
out
xor
xor
mov
cmc
ret
pop
push
sahf
stc
clc
shl
ret
and
jl
xchg
in
ret
ljmp
test
fsubrs
cmpsl
orb
call
out
std
pop
cmp
or
add
sbb
fdivrs
movsl
repnz
mov
scas
inc
dec
inc
inc
in
dec
ljmp
in
idivb
xchg
jle
push
inc
cmc
in
fiadds
adc
dec
movsb
stos
xor
dec
movsl
out
enter
mov
aas
lea
cmp
or
fwait
dec
dec
and
call
loope
in
pop
or
lret
hlt
repz
mov
jl
mov
in
or
push
ret
cs
mov
rorb
xchg
out
jb
lds
in
out
pop
data16
cmp
sbb
add
dec
xor
mov
sbb
mov
mov
lcall
pop
sub
mov
cli
jns
outsb
jl
push
fnstcw
in
orl
xlat
inc
lcall
movl
sbb
mov
or
mov
cs
mov
data16
cs
and
adc
lcall
inc
jne
out
leave
xorb
loop
fwait
stc
push
or
mov
testb
mov
add
jge
adc
sbb
lds
cmpsl
sbb
jg
inc
add
xor
fs
mov
pop
ficoms
mov
pop
adc
pop
mov
loop
ficomps
mov
push
mov
push
lahf
dec
cmp
xchg
scas
mov
lods
icebp
pushf
inc
fwait
jnp
scas
int
outsl
ljmp
lret
jne
or
mov
out
xchg
dec
push
leave
add
or
outsb
add
push
lods
out
fidivs
dec
sbb
mov
in
in
lret
nop
cmp
cmp
inc
dec
jnp
ljmp
mov
js
shl
mov
ds
out
es
mov
sbb
out
inc
aas
jecxz
push
or
das
pushf
rsm
repnz
outsl
push
je
add
fwait
add
mov
xchg
cmpsb
loop
testb
xor
ja
cmp
pop
dec
mov
mov
out
cmp
shll
xchg
jb
test
stc
dec
cmpsl
fs
mov
daa
fwait
cmpsb
push
lods
dec
iret
mov
lds
or
or
or
scas
aad
mov
jg
xor
add
hlt
pushf
ljmp
mov
pop
jl
scas
xor
or
and
lahf
jle
inc
xor
popf
pop
add
in
xchg
movsb
mov
sub
add
inc
mov
mov
mov
sahf
imul
outsl
cmpb
mov
push
hlt
scas
push
dec
dec
xor
pushf
lcall
in
mov
fwait
pop
cmp
push
scas
jnp
stos
lea
adc
inc
fisttps
inc
int3
daa
repz
mov
mov
or
sub
test
mov
shlb
in
mov
mov
inc
mov
xchg
xor
mov
sbb
fwait
dec
clc
hlt
cmp
mov
divl
inc
std
pop
fidivrs
pop
push
xchg
out
and
cmp
mov
outsl
dec
ja
mov
mov
subl
andb
ret
ret
mov
pop
push
fmul
imul
add
mov
jnp
jg
inc
cmp
sahf
lgs
inc
push
dec
and
loop
add
in
mov
mov
int
pop
repnz
lock
mov
sti
inc
xor
mov
jg
xchg
mov
push
pop
xchg
push
mov
push
shlb
mov
xchg
rcll
rol
jg
repnz
jae
cmp
sbb
scas
popf
pop
enter
lock
inc
stos
cmovae
fistps
daa
xchg
push
in
or
mov
daa
in
mov
sahf
mov
mov
sbb
sahf
sub
clc
lcall
sbb
gs
mov
sub
mov
mov
mov
aaa
movsl
push
xchg
inc
mov
mov
lret
bound
das
leave
xchg
ja
inc
fidivl
xchg
sbb
push
dec
xor
jle
out
push
stos
aas
fsubrs
out
or
mov
cmpsb
in
add
dec
add
jle
mov
scas
in
inc
and
xor
mov
in
and
leave
ret
loopne
mov
out
xor
cwtl
out
dec
hlt
xor
outsb
mov
daa
jg
mov
roll
or
cmpsb
out
insb
lods
dec
cmpsl
popf
scas
lret
jo
xor
dec
and
dec
sbb
into
pop
and
cmp
push
daa
inc
or
push
pop
in
xor
lea
or
pop
xor
lds
mov
data16
into
sbb
scas
outsb
in
lcall
test
scas
dec
adc
mov
std
stos
data16
es
pop
jnp
stos
lds
cmpsb
pop
ret
je
pop
pusha
sub
mov
cmp
inc
inc
fwait
xchg
add
cmc
or
aaa
cli
decb
cmp
lods
stos
sub
or
xchg
out
jp
stos
jo
jg
sub
fwait
add
add
sub
dec
pop
out
ficompl
test
subb
cmp
inc
or
mov
jle
xchg
sub
xchg
sub
sub
mov
push
out
les
scas
lock
addr16
xor
mov
xor
movsl
cmpb
das
jg
add
sbbl
xchg
aad
cmpsl
outsl
pop
dec
stos
mov
mov
in
mov
hlt
into
unpckhps
scas
jecxz
jecxz
out
pushf
xchg
ljmp
mov
and
bound
pop
push
mov
int
pop
jp
dec
clc
xchg
jb
jns
jbe
jle
push
add
cltd
lds
xor
outsl
cmp
jl
and
xor
adc
push
and
enter
mov
mov
lcall
adc
push
std
inc
das
insl
mov
fwait
dec
jle
mov
ljmp
sub
leave
movsb
sub
xchg
jnp
rorb
stc
mov
cld
mov
in
mov
jg
repnz
cmpb
cmp
movsb
hlt
repz
dec
xchg
inc
mov
xor
data16
in
pop
ret
sub
mov
mov
rol
jp
mov
mov
jp
mov
arpl
test
arpl
bnd
sahf
pop
cmp
jecxz
jl
push
idivb
mov
ret
ss
inc
mov
in
lret
dec
cltd
sub
cmp
dec
cmp
dec
pushw
mov
in
xchg
add
jl
dec
mov
jg
icebp
ljmp
mov
negb
xor
push
add
ficoms
cmpsl
hlt
xor
shll
mov
idivl
pusha
lock
stos
jge
jnp
xor
fisttpl
pusha
add
nop
inc
aas
iret
jne
xor
rorl
inc
lret
aam
jp
sub
das
and
lret
movsb
out
js
movsl
test
cmp
lcall
scas
push
pop
stos
inc
adc
sub
mov
rorb
mov
mov
push
inc
fcmovnb
inc
clc
int
popf
fcmove
std
adc
out
pusha
stos
cmpsb
cmpsb
iret
cmp
mov
mov
ljmp
mov
cwtl
es
or
mov
dec
jnp
and
sbb
or
cli
sbb
sbb
mov
ja
lret
in
or
test
fisttps
rcrb
cmpsl
ss
ss
inc
mov
xor
fs
shrb
dec
fstpt
mov
scas
mov
and
daa
repz
mov
sub
or
xor
mov
addr16
pop
bound
push
jp
andb
fwait
and
dec
pop
scas
andb
mov
js
pushl
lahf
std
push
or
testl
stos
jg
xchg
imul
movsl
push
outsl
mov
bound
test
enter
cmp
dec
pop
es
mov
jle
jp
scas
psrlw
xor
cmpsb
adc
pop
dec
icebp
inc
ret
fwait
les
or
and
push
inc
shl
mov
fisttpl
push
mov
outsb
jb
clc
add
cmp
test
sahf
or
and
jg
sahf
xor
lcall
sbb
ret
ljmp
pop
je
mov
stos
dec
sahf
sub
std
insb
inc
cmpsb
in
or
imull
test
jge
adc
cmp
scas
mov
iret
mov
lret
adc
cmp
and
xor
hlt
cmp
mov
jne
jle
data16
scas
aad
fists
pop
lcall
fwait
popl
add
mov
push
jg
in
loop
mov
cmpsb
push
ret
push
in
bound
imul
xchg
out
call
or
xchg
pusha
push
in
movsb
arpl
imull
es
sarl
stc
cli
clc
ret
in
pushf
lret
rclb
in
inc
push
stos
mov
test
inc
cmp
sbb
daa
in
std
mov
stos
iret
bound
pop
and
mov
test
adc
cwtl
lock
sti
xor
repnz
int3
hlt
int
jle
jecxz
cltd
les
fwait
clc
stc
mov
mov
mov
inc
lea
shl
sub
jg
mov
negl
jb
dec
es
jecxz
notb
cmc
negb
push
xchg
add
test
scas
stc
in
sti
das
dec
and
adc
mov
mov
or
pop
adc
repnz
cld
cmpsb
cli
stos
add
mov
into
in
mov
arpl
lock
or
pmaxsw
mov
xlat
into
ljmp
testl
mov
adc
jp
lahf
aam
mov
sahf
cmp
lret
sub
sub
stos
lods
lods
adc
repnz
fadd
test
dec
lret
push
pop
and
popl
push
ffreep
dec
sahf
stc
and
mov
xor
in
sbb
sub
sbb
push
data16
data16
cmp
fistpll
mov
pop
xchg
sub
fmuls
outsb
lcall
sub
in
xchg
in
push
inc
out
rorb
test
mov
sbb
in
xor
jecxz
inc
sbb
into
lock
jbe
cmp
and
les
dec
leave
mov
fs
dec
repnz
jbe
mov
sbb
lds
xchg
rorl
loop
fisubrs
jb
or
push
or
mov
ret
and
shll
aam
adc
or
or
pop
or
jp
push
lock
sti
out
aam
lods
push
hlt
rolb
insl
fdivrl
sbb
inc
bound
mov
ja
loopne
jge
add
scas
pusha
iret
mov
dec
hlt
or
cmpsb
cmp
xchg
dec
jp
mov
xchg
rorb
and
out
repnz
lods
and
rorb
or
push
aam
scas
inc
xchg
stc
pop
cmp
jecxz
xor
add
hlt
cmp
cmc
aas
int
mov
jbe
lock
mov
and
scas
add
in
add
jns
into
mov
mov
add
mov
cmpsl
gs
jg
lods
out
adc
orb
or
or
jnp
hlt
div
sahf
add
mov
leave
clc
outsb
lcall
pop
iret
dec
movsb
xor
pop
test
xor
das
inc
mov
jb
mulb
imul
jle
and
cmp
add
sub
mov
or
add
xchg
cmpsl
or
stc
rcrb
push
scas
or
scas
push
cmp
sub
push
mov
pop
in
mov
add
mov
lods
cmpsl
add
mov
mov
mov
jp
sahf
bound
nop
cli
int3
lods
xchg
and
out
movsb
or
sarb
mov
testl
and
mov
inc
stos
inc
movzbl
pop
sub
dec
mov
cltd
mov
mov
test
lods
in
mov
mov
push
inc
add
ret
aam
mov
xor
insl
mov
add
in
enter
jecxz
fimuls
mov
aas
mov
sub
cmpsl
repz
lods
xlat
out
jbe
and
lods
mov
daa
or
add
cmpsl
dec
sbb
hlt
mov
call
dec
jnp
stos
cld
push
std
subb
inc
push
or
rorb
scas
idivb
sbb
pop
out
lods
sbb
xchg
dec
shr
stos
int
mov
cmpsb
fadd
test
mov
out
jo
out
mov
fwait
jle
xchg
sub
in
mov
mov
xchg
mov
aas
sbb
add
hlt
mov
lret
and
in
inc
mov
enter
dec
cmp
dec
jg
add
xchg
sub
cmpsb
cmp
loopne
or
jle
cmp
cwtl
out
lock
xor
mov
cmp
push
test
add
call
lahf
add
cmp
xchg
jecxz
sub
clc
lods
cmc
mov
lret
cmpsb
in
fdivrs
adcb
pop
movsb
loop
jg
mov
push
mov
dec
mov
push
lods
adc
sbb
inc
mov
dec
repz
inc
dec
sbb
cli
push
stc
pop
mov
les
int
lock
dec
sub
test
mov
negl
jl
mov
jg
shlb
and
lret
sub
and
cs
sub
and
adc
xchg
push
into
lcall
sahf
pop
into
testb
mov
dec
jle
inc
xchg
or
inc
subb
ret
outsb
and
daa
je
dec
sbbb
out
inc
lds
subb
xchg
mov
add
dec
dec
mov
lcall
hlt
cmp
ret
and
inc
fwait
mov
and
dec
test
sub
inc
cs
bound
pusha
fwait
aas
jns
mov
add
ds
inc
data16
sub
pushf
sub
test
add
lods
lcall
lods
popf
push
lcall
in
idivb
add
lods
mov
or
xchg
repnz
xor
je
inc
out
add
pop
pop
popf
into
mov
add
into
or
inc
mov
jg
jge
sahf
xchg
jne
mov
ret
push
mov
adc
cmp
sarb
or
mov
int3
jmp
js
pop
sbb
cld
bound
adc
test
scas
adc
aaa
ljmp
mov
sbb
out
pop
dec
cmc
test
lds
in
dec
in
jge
mov
out
scas
out
ret
mov
push
sbb
sub
xor
push
jecxz
sbb
lret
hlt
stos
and
jl
xchg
rolb
into
mov
out
inc
data16
negb
cmp
dec
jp
js
jl
jl
stos
mov
or
lret
test
jmp
mov
cmpsl
jne
push
scas
cmp
mov
jle
shrl
cmp
cmp
push
scas
test
cmp
inc
push
add
xlat
cmpsb
fwait
dec
insb
ds
jecxz
shl
nop
fstpl
mov
lods
lret
test
cmp
pop
scas
add
popf
cld
sahf
inc
call
movb
dec
jle
ja
xchg
xchg
push
push
sbb
rorb
mov
push
inc
jmp
cmp
sbb
pusha
dec
scas
test
cmp
shll
fdivp
in
fcoml
xor
jg
xchg
pushf
lea
daa
in
call
jecxz
jb
xor
fnclex
ds
and
and
cltd
ret
mov
mov
sbb
ss
aaa
pusha
xor
idivb
fisttps
add
out
push
fsubrl
out
out
xchg
mov
push
scas
or
ds
or
jge
and
repnz
lret
jle
mov
nop
into
mul
or
mov
sub
add
mov
cmp
cmc
in
dec
fnsave
xchg
daa
xchg
fwait
or
fmull
jge
mov
and
push
gs
sbb
xchg
mov
jp
jg
scas
invd
repz
arpl
sbb
or
dec
jp
pop
popa
out
nop
sbb
mov
cmpsl
dec
imulb
xchg
sti
dec
mov
xchg
dec
lret
mov
repz
fdivs
stos
iret
je
dec
xor
cmp
cmp
sbb
or
mov
in
adc
lret
jp
cwtl
lcall
mov
mov
icebp
and
jnp
fdivrs
sahf
jl
push
cmc
inc
push
aam
sti
xor
xor
or
scas
gs
inc
mov
mov
dec
leave
dec
add
movsl
dec
add
mov
test
je
into
sahf
lahf
std
cld
cmc
push
xor
jecxz
jg
sbb
outsl
jbe,pn
inc
lahf
cmc
inc
push
loop
mov
aas
addb
movsl
sahf
sahf
fistpl
ret
adc
in
inc
jg
nop
adc
sub
mul
pusha
out
mov
adc
repnz
cwtl
xor
sbb
xchg
and
jb
mov
sub
mov
adc
mov
pushf
add
rcrl
cmp
jnp
mov
mov
sar
shl
inc
les
outsb
or
sbb
mov
fadd
in
data16
sbb
or
adc
sahf
aas
mov
test
orl
mov
jg
lea
jns
inc
xchg
dec
or
out
jnp,pt
test
jg
inc
and
scas
mov
inc
jle
sub
stc
inc
pop
push
mov
sbb
dec
mov
mov
jbe
pop
in
out
cli
cli
das
mov
mov
mov
dec
mov
and
mov
or
clc
scas
dec
xor
jg
int3
xchg
ret
jbe
xchg
pop
leave
inc
iret
imul
pop
adc
ret
mov
sub
lods
inc
es
test
dec
notb
inc
in
add
or
jno
inc
int3
mov
inc
cmp
inc
mov
cmp
mov
adc
jnp
jne
out
fwait
lods
out
and
push
mov
and
mov
xor
inc
mov
push
rclb
pop
mov
mov
int
cmc
stc
popf
xor
lahf
jo
add
imul
pop
ja
and
add
scas
cmp
or
popf
cmp
cmpb
notb
mov
scas
sahf
pusha
sub
mov
mov
or
clc
fwait
cmpsl
mov
mov
push
js
and
test
mov
mov
dec
incl
sti
fwait
clc
hlt
add
sbb
inc
daa
sbb
dec
fs
push
ja
add
pop
out
jl
pop
jae
adc
test
inc
and
jne
ljmp
push
icebp
add
mov
gs
out
or
jo
cmp
and
xor
int
cwtl
sbb
adc
mov
dec
idivb
std
iret
subb
ljmp
imul
hlt
cmp
xor
out
lret
outsb
dec
lods
movb
mov
lahf
rorb
mov
inc
enter
pop
add
mov
cltd
pop
sbb
test
feni(8087
fwait
or
sahf
cmp
cmc
fs
stos
mov
mov
cwtl
and
enter
mov
push
loop
sti
xor
and
pop
xor
pop
js
push
int3
in
rcrl
inc
bswap
inc
lods
loope
jl
dec
cmp
xor
sbb
jo
inc
int3
in
mov
sub
or
xor
mov
sub
mov
and
cld
lcall
stc
ret
mov
mov
mov
neg
leave
mov
push
fld
inc
inc
cwtl
lock
repnz
dec
pop
dec
xor
mov
into
jae
xor
lcall
add
stos
xchg
mov
jbe
test
dec
add
dec
xchg
or
cmc
repz
es
pop
in
mov
mov
jle
inc
fistl
aad
push
or
add
or
test
cmpsl
add
out
mov
lcall
std
xchg
mov
adc
cmp
movsl
loop
std
test
jp
push
sub
stos
sbb
dec
pop
inc
sub
mov
incb
mov
cmc
or
inc
loop
jp
jle
daa
out
push
stos
cmpsl
addr16
dec
in
sbb
pushl
ds
hlt
dec
jnp
scas
dec
leave
int3
jg
js
outsl
or
stos
inc
addr16
xchg
or
ja
or
lds
es
cmp
sub
les
sbb
ret
fisubrl
daa
in
sbb
addr16
das
cmp
pop
repnz
std
sub
lahf
inc
rcrl
hlt
dec
idivl
jecxz
jnp
or
out
push
ret
iret
sub
xor
out
lahf
ret
dec
nop
mul
lret
jg
in
push
ja
loopne
dec
into
call
jg
scas
cmp
inc
aas
sub
sub
stc
mov
jb
adc
ret
out
lcall
sub
loopne
bts
cmc
add
or
mov
xchg
adc
inc
repz
out
xor
dec
ds
scas
out
add
jle
mov
test
shr
push
test
dec
mov
sarl
rep
ljmp
mov
and
lods
jne
cld
mov
dec
loop
data16
add
add
jae
dec
mov
ret
jmp
sub
jns
fld
leave
pusha
sbb
cmp
out
stos
gs
inc
das
ljmp
fldl
jo
sti
sbb
hlt
add
xchg
mov
or
decb
lods
lods
jae
sbb
push
xlat
popa
adc
cli
out
push
mov
pop
or
inc
pop
insb
jne
fs
mov
xchg
cli
lods
movsb
add
popa
lods
sbb
pushf
mov
out
int3
cwtl
rcrl
cmp
in
push
pop
js
fs
cmpsb
jns
sbb
inc
cmp
je
jns
lret
aaa
sbb
outsl
je
popa
rcrl
cli
mov
mov
push
cmp
xlat
mov
push
xor
sub
mov
lock
in
push
insl
cmpsb
jecxz
inc
mov
jno
adc
xor
jo
cs
cmpsb
frstor
push
fldenv
test
repz
mov
gs
jl
lods
fisttps
dec
in
sbb
mov
arpl
or
or
push
push
sbb
xchg
pop
aas
pop
cmp
push
ljmp
std
fwait
rorb
imul
push
jg
and
jne
mov
jno
add
test
cmp
push
out
mov
push
sbb
xor
rcll
sarb
xor
mov
ljmp
ljmp
lock
fnstsw
ljmp
mov
push
mov
mov
stos
add
movsb
pop
out
stc
insl
push
nop
xchg
jg
xchg
add
aad
jae
test
jge
loop
lcall
imul
mov
mov
jl
sub
push
pop
lods
mov
cmc
mov
lcall
jb
jecxz
and
pop
mov
xor
cmc
scas
inc
sahf
mov
mov
loopne
push
jmp
xchg
pop
lock
dec
mov
int
bound
or
enter
add
xor
sub
mov
fwait
push
ja
mov
cltd
les
aas
jecxz
fildl
sub
bound
cmp
sub
gs
scas
sub
push
movsb
pop
push
xchg
inc
xlat
fs
ja
mov
ret
ret
mov
lret
lret
ror
xlat
into
fcmovne
jecxz
out
jmp
out
into
repz
test
add
pop
into
or
bswap
adc
pop
into
sbb
pop
into
and
daa
into
sub
das
into
xor
fldl
and
push
test
xchg
mov
jle
mov
test
dec
lock
mov
repnz
loope
xlat
call
jecxz
repz
adc
je
test
mov
push
adc
inc
pushf
inc
mov
movsb
inc
int
fldl
or
mov
js
jg
test
inc
fimuls
dec
add
dec
cld
dec
adc
dec
or
dec
and
dec
mov
cmp
and
clc
mov
scas
in
out
loope
xchg
ret
subb
add
push
push
popf
xchg
xchg
test
mov
xor
imul
lea
xchg
popl
mov
popf
mov
movsl
pop
mov
mov
pop
loope
aad
in
jmp
cmc
stc
std
je
pop
mov
rorl
repnz
and
mul
pop
std
xor
jno
ljmp
xlat
cmp
inc
sbb
push
rcll
repnz
mov
fimuls
push
test
popa
xchg
jp
into
cmp
push
xchg
lahf
mov
mov
pop
mov
xor
push
xchg
mov
int3
into
enter
loopne
cmp
dec
movsb
jg
xlat
loop
insb
in
clc
xlat
jl
lahf
ja
xchg
fdivs
xchg
sbb
ret
mov
sbb
mov
cld
mov
push
mov
lahf
xor
hlt
push
or
dec
push
mov
cmp
mov
mov
mov
outsb
add
mov
lea
xor
insb
push
test
in
xor
push
cwtl
xchg
jne
xchg
cld
pop
xchg
imul
add
mov
clc
loope
push
sbb
rcrl
mov
mov
sahf
sbb
mov
repz
enter
filds
mov
cmp
jle
loop
call
into
adc
sbb
xor
daa
into
cs
ss
cmp
popa
pop
sahf
pop
fisubs
sbbb
test
and
xlat
pop
push
cltd
push
aaa
test
mov
xchg
pop
cltd
cmp
cmp
cmp
cmp
xchg
call
cmp
cmp
or
adc
sbb
xor
daa
aaa
mov
out
enter
addb
outsb
push
out
es
sbb
fsubrl
out
in
call
into
clc
into
cld
into
adc
or
or
and
adc
sbb
sbb
xor
and
sub
sub
inc
into
cmp
cmp
into
dec
into
dec
inc
test
push
les
pop
enter
int3
push
into
je
js
jl
dec
mov
or
cwtl
dec
pushf
dec
mov
movsb
dec
test
lods
dec
rorb
orb
rorb
dec
enter
loopne
aam
fmuls
dec
lock
call
ret
clc
dec
cld
dec
adc
dec
or
dec
and
dec
sbb
loop
into
sub
inc
dec
inc
dec
dec
push
test
repz
add
and
insb
inc
addb
inc
nop
inc
test
mov
xchg
inc
cwtl
inc
mov
movsb
inc
test
lods
inc
rolb
inc
mov
inc
enter
loopne
aam
fadds
lock
in
call
inc
hlt
inc
clc
inc
cld
inc
adc
or
and
xchg
sbb
pop
mov
sahf
in
fimuls
pop
sbb
xchg
loope
icebp
repz
xor
inc
sbb
inc
dec
inc
dec
push
push
mov
enter
int3
cmp
pop
push
mov
jno
push
lahf
jge
test
push
xchg
dec
pushf
dec
cmpsb
dec
lods
dec
mov
mov
dec
hlt
dec
xor
dec
cmp
outsb
jae
ret
xchg
push
sub
cmpsb
dec
lods
dec
loopne
aam
adc
cwtl
into
lock
in
call
hlt
clc
cld
adc
or
and
sbb
xor
sub
inc
xor
push
popl
dec
rorb
mov
lea
insb
jle
mov
js
jl
nop
jl
std
dec
or
inc
dec
dec
ljmp
popf
enter
int3
push
into
es
dec
arpl
je
mov
lds
nopl
mov
push
nop
imul
loop
enter
mov
xor
popa
xchg
jo
fisubrs
jbe
cmp
dec
xchg
dec
cwtl
dec
sahf
dec
movsb
dec
stos
add
adc
into
xlat
into
adc
insb
mov
adc
or
jecxz
lahf
les
pop
cmp
inc
pop
dec
adc
pop
jecxz
rep
add
and
inc
mov
stos
inc
mov
mov
inc
adc
mov
test
dec
and
into
pop
aad
ljmp
aaa
mov
sbb
xchg
fisubrs
adc
mov
fildl
push
mov
in
mov
loop
xchg
addb
out
adc
repnz
pop
adc
jnp
xchg
repz
add
or
out
sub
xor
cmp
push
cmp
dec
xor
jo
xor
jne
jl
jle
mov
into
lods
into
mov
rolb
loope
fisttpl
mov
fstl
inc
jmp
repnz
stc
dec
and
dec
aaa
ljmp
xor
sub
out
inc
outsb
inc
out
dec
push
pop
xchg
mov
loopne
cmp
xor
push
xor
xor
lds
out
push
mov
out
pushf
out
mov
movsb
lahf
inc
lods
pop
rcrb
pop
mov
pop
les
enter
dec
aam
fmuls
dec
lock
in
call
dec
hlt
dec
clc
dec
cld
dec
adc
dec
or
dec
and
dec
sbb
dec
xor
dec
sub
dec
inc
dec
xor
push
dec
inc
or
cmp
pop
insb
cmp
cmp
cmp
mov
ss
and
movsb
inc
test
lods
inc
rolb
mov
pop
aam
fdivrs
fdivrl
lock
in
or
adc
mov
in
out
insl
repz
enter
jl
xchg
insl
sahf
out
sub
lea
xlat
cmpsl
xlat
stos
cmc
mov
push
lock
ljmp
inc
push
test
into
adc
sbb
and
sub
inc
into
cmp
aas
into
inc
into
dec
insb
push
mov
push
je
jp
aaa
push
lock
inc
lods
dec
dec
mov
pop
mov
insb
cld
xchg
lock
lods
jecxz
sahf
loopne
fiadds
pop
xor
xchg
push
xor
scas
dec
inc
dec
dec
loope
push
sbb
pop
sub
cmp
orb
js
jl
nop
dec
test
enter
dec
xchg
dec
cwtl
dec
pushf
dec
mov
movsb
dec
test
lods
dec
rorb
mov
les
dec
int3
dec
loopne
aam
dec
into
fmul
lock
in
push
in
pop
add
hlt
pop
clc
sbb
hlt
incb
jo
inc
and
dec
xor
dec
sub
push
popf
cmp
dec
dec
rorb
sbb
jp
fs
push
cltd
push
js
nop
nop
cmp
mov
pushf
inc
mov
movsb
inc
test
mov
dec
mov
mov
cs
jnp
nop
mov
xor
inc
or
inc
cmp
insb
lods
pop
imulb
aam
xchg
adc
xor
test
mov
je
in
out
mov
mov
das
mov
sbb
mov
outsb
aas
loop
cltd
lret
pushf
mov
cmpsb
dec
mov
mov
aad
fisttpl
push
and
sarb
roll
xlat
push
mov
loopne
aam
fdivrs
in
mov
out
hlt
jecxz
sarb
test
into
or
or
and
mov
mov
je
shr
insl
shr
fldt
in
sub
jne
aam
loop
sub
dec
or
out
push
push
test
pop
test
outsb
xlat
outsb
fsubp
in
shl
inc
stc
mov
into
cmp
inc
into
dec
insb
push
xchg
pop
jl
outsb
insl
outsb
je
imulb
xlat
test
mov
mov
into
in
into
add
hlt
into
clc
into
cld
into
adc
add
or
or
and
cs
jo
inc
mov
add
aaa
dec
imul
idivl
insl
mov
out
aaa
push
lcall
adc
fdivs
nop
sbb
test
test
repz
insb
pop
xchg
in
and
mov
mov
idivb
mov
pop
mov
shll
outsb
jecxz
repz
mov
shlb
out
xor
mov
lods
mov
mov
sub
inc
mov
in
pop
pop
lahf
bound
fildl
jl
nop
out
fmulp
mov
mov
into
mov
movsb
into
test
lods
pop
scas
jmp
dec
adc
aas
adc
mov
lahf
nop
push
sbbb
outsl
ja
pop
adc
icebp
xchg
sbb
sarb
inc
arpl
push
xor
jle
sahf
xchg
aas
lock
adcl
not
mov
dec
icebp
dec
jns
stos
mov
lret
out
out
into
test
jbe
cwtl
in
movsl
lods
inc
rorl
push
xchg
pop
enter
clc
fildll
adc
cmp
and
mov
fwait
in
hlt
loop
lock
gs
jns
jge
loop
lret
shrb
xlat
scas
mov
ja
xchg
add
dec
movsb
cmp
cmp
xlat
dec
out
testb
cmp
fmuls
out
insl
imul
jnp
test
sbb
dec
int
out
inc
testb
inc
inc
inc
push
mov
jl
filds
mov
cmp
ss
inc
js
dec
xor
or
enter
int3
dec
inc
inc
pop
fisubl
pop
out
sahf
test
fcomi
mov
dec
les
outsl
xorb
lahf
mov
idivl
cmp
cmp
xor
add
xchg
push
jne
xlat
pusha
rcll
into
cmp
cmp
cmp
cmp
pop
loop
xor
pop
push
jg
lods
sbb
iret
cmp
ss
jecxz
sub
ss
insb
bound
jge
adcl
xchg
xor
pop
out
rolb
sbb
sub
and
mov
je
aam
lock
out
out
outsl
adc
sbb
and
sub
mov
insl
jae
jg
mov
xchg
mov
lret
aam
data16
icebp
ja
xlat
adc
cmp
cmp
cmp
jecxz
inc
inc
push
push
pop
mov
repz
mov
sahf
leave
out
fimuls
jbe
xchg
loop
lcall
push
test
call
shlb
jbe
nop
mov
cli
mov
jae
scas
pop
xchg
test
hlt
xchg
fcom
jl
fidivl
pushf
and
sub
adc
sbb
and
xor
dec
push
dec
inc
les
xchg
lret
pop
idivl
adc
mov
in
mov
lea
mov
popl
insb
push
scas
loopne
lock
adc
out
sbb
inc
adc
adc
sbb
xor
dec
adc
pop
loop
mov
add
into
clc
into
cld
stos
adc
or
pop
push
and
adc
sbb
sbb
xor
and
sub
sub
xor
dec
cmp
dec
dec
dec
loope
push
sbb
or
push
enter
adc
push
or
dec
mov
int
int
sbb
mov
out
add
aam
adc
in
jb
in
call
jecxz
sarb
mov
jp
dec
pop
inc
xchg
testl
pop
jbe
xorb
sub
mov
shl
add
sbb
hlt
pop
and
sub
xor
xchg
out
sbb
xor
ret
imul
fwait
ret
int
aad
xor
sub
js
js,pt
pop
les
enter
loopne
aam
jb
in
push
je
add
jbe
xor
jbe
lret
je
mov
sub
xor
loop
call
test
pop
enter
int3
push
pop
inc
js
jl
nop
sbb
mov
pushf
dec
mov
movsb
dec
test
rorb
mov
test
enter
je
aam
fsubr
fsubr
lock
in
call
out
hlt
out
clc
out
cld
out
adc
add
or
or
and
adc
sbb
sbb
xor
and
sub
faddl
xlat
mov
push
xor
dec
and
jo
mov
push
cmpsb
js
nop
test
insb
mov
sbb
movsb
cmp
mov
push
mov
mov
ret
fadd
in
call
lcall
add
or
dec
and
dec
sbb
xor
fsubrl
dec
sub
inc
dec
cmp
dec
push
or
into
dec
lods
dec
ljmp
jo
fs
in
out
cs
jp
add
push
push
xchg
mov
and
mov
mov
and
push
xor
out
sub
cmp
mov
xchg
pop
mov
aad
xlat
cs
insb
cmp
jl
nop
call
push
stos
mov
pushf
xor
movsb
iret
test
lods
into
ror
into
mov
enter
xor
mov
cltd
mov
jno
jo
push
ret
xor
and
push
xchg
mov
cs
sbb
call
in
ja
xor
jecxz
iret
out
mov
icebp
in
adc
out
pop
in
out
cmp
cld
test
sbb
sbb
pop
xor
push
add
outsl
dec
out
dec
or
in
pop
insl
pop
out
jo
push
out
je
js
jl
nop
loop
inc
insb
mov
flds
inc
cwtl
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
in
gs
xor
push
gs
imul
lret
jg
pushf
pop
mov
xchg
loop
push
in
in
insb
sbb
sbb
xor
sub
in
jb
add
cmp
outsl
dec
out
jmp
insb
fadds
pushf
fisubrs
mov
dec
rorb
mov
int3
loopne
aam
xchg
fdivrl
lock
in
popl
jge
xchg
xchg
xchg
sbb
and
sub
inc
dec
xor
aam
test
sahf
dec
xlat
push
push
int3
fisubrl
out
jo
fs
inc
fidivs
dec
jl
nop
out
push
in
cmp
cmp
test
lods
pop
jl
es
mov
out
enter
aam
fsubr
fsubr
lock
in
call
jecxz
add
push
add
cmp
and
or
sub
sub
into
xor
dec
push
dec
dec
dec
dec
or
subb
jno
push
xor
jo
dec
xor
xor
inc
addb
inc
jl
push
pushf
test
mov
lahf
pushf
adc
inc
test
lods
les
outsl
mov
mov
enter
sub
push
je
dec
sub
dec
inc
dec
xor
outsl
push
out
inc
out
dec
out
dec
or
in
pop
arpl
fs
shr
insb
dec
orb
js
jl
pop
cmp
push
mov
pushf
dec
mov
test
lods
mov
mov
mov
pop
les
enter
loopne
fcomps
fcompl
lock
dec
lret
stos
add
sar
inc
cld
inc
adc
and
outsl
and
adc
sbb
sbb
xor
and
sub
sub
inc
out
xor
loop
xor
insb
lods
es
jecxz
xchg
jle
mov
xlat
fldcw
div
adc
or
sarb
cmp
pop
push
test
jno
addr16
xchg
pop
lahf
cltd
lods
pop
cs
xchg
sub
or
jne
and
xor
and
or
push
cmpsb
mov
std
clc
cwtl
jne
mov
and
ret
xor
inc
lods
mov
adc
jl
enter
ja
xor
fnstcw
in
cld
and
jb
nop
push
les
das
sbb
sbb
fldenv
push
jbe
xor
lock
popf
inc
xor
mov
sahf
fdivp
mov
sahf
fsubrp
sbb
sub
mov
fs
dec
xor
enter
sbb
dec
in
ljmp
popf
mov
sub
iret
in
test
sti
jecxz
add
movsb
jmp
fidivl
sbb
inc
or
mov
add
push
lret
aam
idiv
pop
orb
mov
xor
xlat
stos
jp
mov
mov
mov
jne
and
cmovp
dec
or
popw
ficomps
adc
lods
jecxz
repz
pop
adc
and
lret
loope
xlat
stos
ljmp
add
aas
into
adc
and
inc
dec
int3
mov
bound
xchg
jle
pop
bnd
push
call
adc
inc
fidivrs
dec
inc
dec
dec
or
jo
mov
xor
jg
les
push
rol
into
dec
mov
mov
or
and
test
test
xchg
stos
lcall
mov
rolb
sbb
add
sub
inc
sub
jl
xor
jae
jp
filds
mov
mov
mov
cmp
out
roll
icebp
mov
dec
std
dec
add
rcrb
call
add
loop
into
into
insb
ret
movsb
test
sarl
xlat
mov
xchg
cmp
roll
int
aas
fildl
jmp
add
or
push
sub
xor
adc
repz
scas
inc
or
push
es
xor
popa
mov
pop
jg
push
lock
into
xchg
scas
popf
pop
dec
stos
sbb
dec
into
mov
push
test
or
sub
into
xor
cmp
inc
push
les
je
mov
add
mov
arpl
mov
mov
jle
cs
add
jbe
mov
scas
mov
lret
shl
mov
sti
pop
add
or
enter
cmp
cmp
cmp
jno
imul
lahf
xor
cmp
out
jl
sbb
inc
fs
mov
out
xlat
push
stos
mov
xlat
maskmovq
notl
xor
dec
dec
dec
popa
in
ret
cld
mov
push
mov
je
jo
stc
push
mov
mov
add
pop
loopne
nop
insb
mov
mov
out
fldt
loop
adc
mov
xor
jnp
pop
les
xchg
mov
test
mov
add
inc
cmc
cmp
mov
mov
mov
cltd
jg
xchg
xchg
out
cltd
mov
call
sub
dec
xor
dec
xor
inc
dec
inc
stc
clc
push
sbb
adc
adcl
dec
mov
dec
fimuls
les
cmp
dec
dec
push
jl
cmp
mov
mov
in
add
pop
sub
outsl
pop
push
sbbl
movsl
loop
mov
inc
adc
movups
mov
sbb
dec
movsb
scas
adc
imulb
mov
jecxz
repz
adc
cmpsl
push
and
push
jo
inc
and
adcb
and
xor
imul
sub
adcb
xchg
leave
mov
je
or
rep
stc
out
push
bound
out
outsl
es
lahf
push
push
pop
inc
pop
push
sbb
scas
push
lret
xor
push
addb
lods
mov
push
rorl
pop
sbb
fldt
out
adc
or
jg
aad
adc
push
sub
ss
dec
sbb
and
stos
xor
mov
add
rcr
scas
mov
fcom
pop
dec
ss
or
mov
pop
popl
shl
aam
sbb
stos
and
xor
xchg
insb
xchg
mov
sahf
int3
pop
xor
fisttps
jo
inc
insb
ljmp
mov
push
lods
or
cmp
loop
bound
inc
jb
xorps
jae
mov
jne
cmp
cwtl
xchg
lea
dec
stc
add
sbb
fcmovnu
jno
movsb
dec
out
mov
sub
pop
jp
flds
repnz
pushf
pop
mov
xlat
push
cmpsl
ss
and
cmp
push
into
push
scas
push
fs
sarb
aad
add
adc
cmp
insb
mov
push
nop
gs
fs
shl
sub
inc
dec
xor
aad
arpl
test
ja
push
mov
adc
xor
sub
adcl
bnd
inc
cwtl
xor
js
hlt
mov
mov
gs
xchg
adc
inc
rorb
loope
mov
ljmp
int3
add
adc
clc
add
xchg
pop
inc
stos
jg
stos
mov
sbb
and
lds
dec
cmp
inc
lods
std
outsb
dec
stos
mov
sbb
mov
and
in
adc
and
xor
dec
xlat
push
xchg
addr16
pop
xchg
ja
sbb
mov
lahf
lcall
or
test
into
sub
pop
loop
adc
addl
dec
push
mov
sub
lcall
inc
je
mov
les
push
insb
push
mov
loop
add
ja
lcall
call
jae
out
cmp
test
inc
mov
enter
mov
adc
jecxz
repnz
aam
fisubl
inc
pop
and
ljmp
xchg
out
mov
cmpsb
rclb
sarl
dec
sbb
add
lahf
fstpl
sub
fwait
inc
dec
xor
lcall
fsts
jl
lcall
pop
xchg
movsb
add
rcll
mulb
cmp
fwait
ja
test
lret
into
sahf
jb
inc
cltd
nop
jl
sahf
and
jmp
repz
jg,pn
mov
into
ds
cld
mov
adc
and
cmp
outsl
mov
push
add
out
repnz
out
sbb
inc
dec
inc
out
push
push
mov
bound
bound
ja
movsb
lcall
dec
ret
xchg
inc
ljmp
out
push
ljmp
loop
shrl
mov
out
sub
test
arpl
cld
mov
inc
std
test
sbbb
aam
push
arpl
cmp
mov
loope
adc
adc
or
bound
into
enter
pop
lock
mov
test
cmp
jbe
dec
lea
xchg
cs
sbb
mov
xor
inc
mov
adc
pop
adc
mov
mov
jne
shrb
mov
xor
fmuls
roll
jbe
repz
cmp
push
jbe
xor
nop
sbb
add
cld
fwait
pop
push
push
jge
adc
call
sahf
test
shlb
sub
xchg
divl
in
push
outsb
pop
xlat
loopne
add
aam
clc
push
pop
test
loope
out
xor
test
xor
xlat
xor
stos
mov
fimuls
adc
add
loop
mov
mov
push
out
push
fisubs
push
lock
loop
imul
xor
lock
xor
test
mov
ror
mov
add
or
jp
mov
lcall
js
cmp
aam
fadd
fdecstp
leave
fsubs
dec
fwait
adc
test
dec
cmp
xor
repz
daa
inc
mov
push
jne
xor
enter
dec
sub
pop
pusha
cmp
inc
scas
dec
pop
xor
cmp
ja
xchg
in
push
scas
lahf
pop
cmp
rcrl
out
outsl
xor
pop
mov
into
mov
mov
cmpsl
cmp
pop
xor
pushf
cli
xor
push
inc
scas
push
ljmp
loopne
xlat
lcall
mov
sbb
mov
bound
sbb
mov
and
mov
daa
and
cwtl
insb
cmp
adc
aad
pop
jmp
push
fists
insl
stos
cmpsb
push
je
lods
outsl
xor
call
int3
pop
enter
test
dec
cs
arpl
ss
pop
adc
jge
xlat
push
xchg
xlat
test
lret
ret
mov
jne
rcrl
insb
mov
add
jmp
jge
movsl
test
scas
mov
and
or
xor
and
divl
neg
dec
loope
test
mov
sbb
std
jp
pop
or
in
pop
cltd
sub
sub
cwtl
inc
idivl
mov
lock
fisubs
fmull
shlb
xor
sub
pushf
sbb
xor
dec
enter
mov
mov
add
aad
lret
mov
push
fwait
in
inc
clc
sti
dec
add
dec
jle
sub
pop
jo
insl
sahf
jbe
andb
jecxz
sarl
scas
dec
arpl
add
pop
mov
lcall
push
push
jnp
pop
cmpsb
mov
xchg
pop
popf
pop
cmpsl
sbb
dec
mov
rcll
dec
cli
xlat
pop
inc
cmp
addl
lcall
out
sub
ja
ret
nop
adc
push
test
test
adcl
je
arpl
push
dec
mov
aas
mov
pop
pop
mov
test
dec
mov
adc
push
mov
dec
adc
bound
cmp
and
xchg
cmpsb
xor
push
add
sahf
lret
nop
or
add
adc
and
sbb
dec
dec
push
xchg
pop
test
rcr
mov
cmp
adc
mov
sahf
adc
cmp
stos
mov
iret
xlat
je
mov
xlat
inc
cmc
xchg
add
call
push
loope
xor
in
cmpb
leave
mov
mov
mov
push
cmc
inc
push
cmpsl
or
stos
stos
mov
mov
test
std
adc
movsl
cmc
lret
fsubs
or
movsw
lods
mov
add
mov
cli
rol
inc
add
cmp
pop
or
hlt
cbtw
add
out
into
clc
mov
movl
into
push
movb
xchg
es
jecxz
mov
push
push
push
push
mov
outsb
push
outsb
sub
xor
adc
int3
mov
arpl
je
js
jg
xchg
out
xchg
out
mov
stos
adc
dec
leave
pop
push
or
clc
xor
aaa
jne,pt
push
mov
xchg
push
cmp
mov
cmp
ss
testb
adc
lret
mov
push
xchg
stos
popf
pop
mov
mov
ss
lods
jecxz
test
scas
es
lret
cmp
loop
addr16
pop
test
jne
xor
and
push
dec
outsb
test
jnp
mov
xor
scas
xchg
mov
sbbb
aam
jp
dec
ret
fstpt
adcb
cmp
sbb
dec
inc
je
jecxz
add
ljmp
cltd
cs
je
jo
lret
adc
jmp
cwtl
mov
jo
push
jne
out
jne
stos
lret
sub
subps
jp
mov
test
scas
negb
fs
out
mov
adc
add
sbb
out
bound
pop
mov
aaa
shrb
cli
sahf
push
pusha
in
daa
popa
pushf
jne
cmpsb
into
pop
movsb
sub
pop
shll
insl
add
push
push
inc
add
enter
push
cmpsb
pop
mov
push
pop
pop
inc
fwait
mov
clc
call
dec
jmp
jne
aas
out
cmp
adc
cwtl
outsl
fidivrl
dec
out
rclb
popa
or
mov
repnz
mov
lods
vzeroupper
int
hlt
aad
or
out
inc
out
dec
aad
subb
mov
mov
push
std
cmp
aaa
xor
add
mov
and
ljmp
pop
mov
test
xchg
cmc
mov
repz
push
jmp
sub
and
cwtl
cmp
xchg
xor
scas
lret
jb
into
enter
adc
adc
stos
adc
fisubrs
aam
xchg
sbbb
sub
dec
aam
xchg
inc
jb
in
pop
bound
adc
test
into
dec
fwait
jo
mov
pop
pop
inc
je
inc
les
push
lahf
sub
cltd
lret
add
xchg
rcrb
lret
loop
dec
xchg
ret
ret
cmp
or
bound
out
cmp
in
sarl
dec
dec
test
fwait
pop
rcrl
mov
outsl
sub
dec
mov
lea
jg
and
dec
fdivrs
pop
sub
jb
fstl
lret
aaa
cmp
push
jle
ret
push
fwait
dec
pop
jb
ja
aam
out
loop
xor
cmp
popa
mov
fcomps
out
imull
or
and
cli
jg
xchg
xchg
in
dec
sbb
cmc
shlb
cmpsb
les
or
fwait
cs
mov
sbb
test
shl
stos
das
shr
push
xor
lcall
cmpsb
mov
mov
xor
dec
inc
or
sbb
es
fstpl
push
ret
test
jg
aad
or
sbb
xchg
push
cli
sbb
adcb
mov
or
push
pop
adc
pop
lods
xchg
ja
lahf
out
nop
hlt
xor
mov
jecxz
jmp
and
mov
in
sbb
int3
xor
jnp
lds
aad
js
add
clc
mov
xchg
jnp
push
mov
aam
push
daa
aam
sub
push
pop
js
mov
push
test
jecxz
push
push
inc
insl
pop
push
data16
in
loop
in
scas
jo
add
mov
repz
cmp
test
rorl
adc
xor
scas
cmpsb
xor
cmc
fstps
nop
ret
cmp
mov
and
push
push
pushf
jmp
lret
outsl
test
scas
ficoms
xchg
or
das
into
stos
pop
inc
repnz
gs
xchg
xchg
add
testb
pop
ljmp
loopne
jge
push
data16
sub
lcall
dec
mov
jne
dec
pop
jp
mov
sbb
mov
xor
repz
xchg
sbb
loope
mov
push
nop
bound
cmp
fisubrl
jge
xchg
rclb
movsb
arpl
sbb
add
jne
rcrl
jae
jne
inc
pop
ja
loopne
sahf
test
push
mov
outsb
stos
jns
xor
enter
leave
and
sbb
movsb
les
dec
jbe
cmp
inc
and
jno
xchg
enterw
fildll
loop
scas
icebp
scas
fnstcw
in
rolb
adc
inc
push
sbb
and
dec
xor
mov
js
jle
lea
mov
enter
ja
mov
add
adc
cmp
mov
pop
fdivrl
push
push
repnz
les
data16
sub
mov
enter
mov
adc
in
xchg
je
pop
push
ja
xchg
das
xor
jecxz
adc
enter
arpl
pushf
mov
fs
ret
mov
push
jp
mov
test
call
jp
sbb
fcoms
cwtl
pop
mov
lret
xor
or
pop
js
cltd
aad
into
bound
add
inc
leave
in
mov
push
ljmp
ljmp
mov
mov
test
jmp
adc
pop
popa
ja
jp
in
jmp
inc
pop
stos
mov
adc
mov
loopne
jbe
adc
push
fdivrs
add
andb
rcrb
xor
inc
insb
xchg
sbbb
cmp
adc
dec
bnd
jo
hlt
shrb
cmpsl
push
push
pop
clc
les
xchg
xchg
xchg
mov
loop
lcall
jl
js
xchg
jg
push
out
lods
inc
loop
dec
mov
addr16
popl
mov
loopne
push
int3
subl
dec
jp
sub
and
mov
insb
cmpsb
in
bound
or
mov
dec
xor
jb
add
pop
repnz
adc
cmp
aas
adc
repnz
push
mov
jno
lock
mov
mov
adc
jecxz
repz
test
sbb
shrl
adc
test
inc
sbbb
rcl
pop
movsb
nop
mov
fcoml
cli
into
jge
jne
xchg
mov
jl
push
in
fsubrs
mov
out
hlt
or
loop
xor
sti
lcall
std
fidivrs
jnp
fcompl
das
mulb
or
add
dec
lahf
dec
insl
in
mov
add
les
adc
bound
in
adc
lcall
and
pop
add
push
add
sub
outsl
daa
aam
xchg
adc
shrb
mov
out
mov
lret
dec
mov
xor
les
fldt
inc
jp
and
cmp
adcl
and
movl
pushf
push
pop
cmpsb
xchg
cltd
jb
sbb
popa
cli
jns
mov
inc
mov
rcrb
repnz
cmpsl
mov
jnp
shlb
or
jl
imul
mov
hlt
lretw
mov
jne
test
int3
xor
mov
push
jne
lods
imulb
arpl
push
sub
xchg
mov
jge
xlat
sub
xor
stos
sarb
pop
shll
jne
or
inc
aam
fcoms
mov
shrb
rorl
xchg
xor
sub
loopne
out
add
adc
into
adc
idivl
cmpsb
loop
inc
mov
push
mov
loop
fisttps
ljmp
inc
clc
add
mov
lcall
push
jg
aad
mov
rclb
jle
les
inc
or
fdiv
nop
insb
in
ljmp
jl
pop
stos
xchg
aas
pop
into
jle
stc
int3
aaa
sub
shrl
inc
stc
mov
sbb
mov
push
jbe
and
mov
push
jbe
fs
cltd
pop
mov
fwait
and
push
test
cltd
sub
cmp
mov
inc
dec
sbb
js
stos
mov
mov
lcall
sahf
mov
mov
movsb
js
adc
and
in
pop
insl
cmp
fs
je
movsb
mov
jne
push
jle
push
andb
cli
test
cld
imul
inc
hlt
ss
dec
inc
jl
test
cs
es
fwait
add
lret
out
mov
inc
push
adc
xchg
leave
les
les
popf
pop
push
ja
pop
repnz
dec
mov
scas
push
mov
and
aaa
es
inc
dec
out
in
dec
insl
shr
dec
bound
mov
sti
xor
popf
or
sub
insl
test
out
movsb
rorl
iret
repnz
and
mov
or
repz
shll
jecxz
repnz
sub
xlat
call
xor
cmp
sub
dec
xlat
xchg
loop
mov
xchg
mov
xor
inc
enter
mov
aad
or
mov
xor
shll
adc
fstps
jmp
xchg
mov
mov
inc
jg
and
jbe
mov
add
xchg
xchg
stos
lcall
mov
cs
test
rep
dec
aam
sti
adc
loop
mov
adc
mov
lret
push
push
push
mov
dec
pushl
jg
rorl
cmp
pop
cmp
aad
adc
test
push
insb
mov
push
adcb
das
pop
xorb
inc
pop
and
lahf
lods
cmp
pop
out
sbb
enter
into
or
and
hlt
xor
inc
lret
sbb
sub
scas
out
out
lods
mov
js
or
stos
test
add
xchg
adc
cmc
out
jp
js
std
popf
add
adc
movsl
xor
into
pop
adc
lahf
push
leave
sbb
push
sbb
aad
fsts
xchg
icebp
inc
in
push
in
les
cmc
dec
stc
or
and
or
into
and
inc
dec
inc
dec
push
adc
jne
inc
into
iret
ja
aaa
test
bound
bound
add
sahf
xor
fs
add
clc
xchg
je
iret
jl
loop
add
jp
sub
push
test
jl
or
and
xchg
cld
jle
repnz
adc
aam
mov
push
inc
bound
xchg
mov
icebp
js
test
insl
mov
xchg
repz
adc
repnz
flds
iret
push
lock
into
popf
pop
ficompl
xor
mov
mov
shrl
mov
popa
xchg
or
pop
repnz
push
add
popf
pop
push
push
repz
mov
mov
push
lock
push
ljmp
push
out
rcll
lea
xchg
push
mov
in
push
and
in
insl
scas
leave
sub
push
lahf
pop
cli
dec
rolb
mov
mov
lahf
xor
and
mov
out
mov
push
jb
push
jb
popa
xorl
xchg
lahf
roll
les
outsb
les
or
mov
shlb
aas
adc
add
jne
jae
inc
int3
and
and
push
and
push
xlat
aam
add
imul
rcrb
lahf
pop
fsts
dec
or
ja
jb
in
mulb
sbb
in
mov
bound
mov
sub
xchg
js
je
ret
sbb
sbb
lcall
ss
ror
jbe
shl
inc
sar
adc
iret
mov
test
mov
shlb
test
mov
jo
fnsave
adc
gs
mov
mov
mov
movsb
jmp
mov
stc
addr16
cmpsb
clc
pop
out
dec
les
insb
imul
or
xor
sbb
xor
push
bound
pushf
mov
out
mov
dec
outsb
stos
mov
push
aad
in
cmp
scas
push
xor
or
dec
bound
dec
sbbb
test
lock
out
test
xor
push
pusha
cli
addb
insb
test
jle
mov
xchg
mov
lcall
mov
xor
dec
addr16
fwait
pusha
mov
inc
enter
add
cmc
jge
pop
call
nop
push
fdivs
aam
dec
clc
js
push
xor
add
push
pop
test
push
gs
loopne
insl
push
lock
or
cmp
pop
loop
les
lcall
and
jle
and
in
cmp
in
aad
mov
pop
add
cmc
sahf
dec
and
mov
sub
stos
sub
loopne
add
in
ret
jge
mov
jne
and
movl
mov
in
xlat
mov
loope
xchg
sarb
mov
into
adc
fidivs
pushf
adc
lahf
bound
mov
lcall
inc
inc
outsl
adc
rolb
fisttps
insl
imulb
sub
inc
in
xor
jmp
sarl
sarb
pop
aam
jecxz
dec
loop
lods
xchg
insl
arpl
mov
sbb
das
cltd
push
and
rorb
pop
int3
fsubrs
shrl
loope
lea
mov
out
lods
pop
rclb
jo
movsb
scas
out
or
xchg
fs
xor
leave
adcl
mov
xlat
mov
inc
cmp
int3
mov
mov
ljmp
pushf
icebp
mov
sub
out
push
cmpsl
arpl
dec
nop
xchg
sbb
xor
sub
mov
jge
mov
in
dec
arpl
aam
and
lock
mov
mov
add
mov
cmp
loop
testl
test
xor
dec
rcll
iret
repz
xor
insb
fldcw
push
inc
push
in
out
clc
push
lods
test
inc
lahf
pop
pop
jle
mov
lahf
mov
mov
pop
dec
out
sahf
push
jp
dec
dec
and
push
xchg
mov
inc
sub
call
loop
sub
mov
adc
cmpsb
jge
movsb
add
rcl
rolb
icebp
outsl
imul
or
ds
fsubr
and
mov
out
and
pop
mov
scas
pop
pop
cmc
pop
and
js
mov
jne
xlat
aas
dec
hlt
mov
adc
inc
bound
adc
pop
sbb
mov
jp
dec
ret
xchg
pop
push
push
outsb
lea
scas
sbb
mov
mov
mov
fs
data16
and
push
clc
insb
dec
pop
mov
arpl
xchg
in
jne
jp
jb
mov
imul
ror
pop
pop
dec
mul
ret
sarb
adc
insb
push
test
subl
sarb
in
cmp
push
scas
shl
mov
push
adc
cmp
and
add
test
cs
repz
and
outsl
mov
stc
adc
dec
rclb
out
and
jecxz
inc
les
imul
cltd
fistps
inc
clc
mov
stos
arpl
test
jg
stc
aam
loopne
inc
inc
add
sbb
fists
orb
push
inc
pushf
jge
pop
test
lcall
xchg
pop
jp
sarl
fidivrl
mov
mov
pop
nop
sub
inc
cmpb
mov
sub
stos
pop
push
and
bound
mov
adc
cmp
push
rclb
leave
and
aad
or
pusha
mov
jge
test
stos
and
inc
push
addl
loop
iret
push
push
adc
dec
xchg
mov
call
stos
sti
es
bound
dec
fsubrs
scas
in
push
int3
inc
into
aaa
push
mov
add
cmp
lods
xor
rclb
mov
mov
and
ss
cmp
into
aam
mull
adc
push
adcb
loopne
scas
mov
mov
rclb
les
and
mov
jne
mov
mov
push
xchg
xchg
es
arpl
enter
sub
sbb
shr
lods
test
enter
lcall
cmp
push
stos
mov
push
inc
fdivs
pushf
fs
mov
jg
mov
lods
dec
ret
arpl
clc
cmp
aad
lods
clc
pop
mov
fs
xchg
lods
or
arpl
dec
sub
mov
stos
dec
jbe
adc
push
outsb
inc
jecxz
divps
xor
or
adc
mov
pop
loop
ja
stos
pop
jo
sbb
shll
mov
test
mov
in
loop
sub
and
inc
mov
aad
push
jp
push
push
scas
adc
cltd
clc
jl
lds
adc
pusha
gs
lahf
test
xchg
rclb
push
mov
cs
bound
pop
mov
sub
in
pop
push
shlb
mov
icebp
adc
cmp
dec
mov
push
lods
aas
mov
jb
push
cltd
push
and
loop
ficompl
arpl
lcall
or
inc
sahf
jp
cmp
fincstp
loop
xor
sub
add
repnz
insb
xor
daa
mov
mov
into
addr16
mov
pop
mov
out
dec
addr16
adc
lods
push
addr16
sbb
xor
mov
adc
rcrb
push
push
repnz
scas
icebp
xor
pop
bound
inc
adc
loop
dec
lcall
inc
js
jo
pop
jo
jno
test
xchg
adc
std
dec
stos
adc
inc
xlat
push
mov
test
pop
jge
arpl
fcompl
les
dec
inc
ljmp
cmp
sub
jno
ja
xor
and
adc
lock
mov
mov
lret
addr16
pop
lds
pop
cmp
fcmovne
and
mov
push
mov
in
sub
jp
stos
push
pop
loop
sar
loope
cmp
jne
xor
inc
dec
pop
push
xchg
push
xchg
sub
daa
cld
sarb
shll
sub
jge
rcrb
add
and
pop
add
imul
cwtl
sbb
cld
in
mov
mov
pop
clc
cmp
outsl
xchg
mov
push
repz
xchg
in
in
dec
outsb
sti
loop
loopne
les
and
mov
push
jg
mov
mov
jo
sub
and
push
sbb
or
jg
push
loop
cmp
inc
and
pop
enter
in
out
cltd
bound
fxch
jp
daa
scas
adcl
addb
pop
mov
push
bound
stc
xchg
push
inc
mov
das
ja
in
mov
push
dec
mov
mov
rorl
std
jne
das
dec
pop
sub
mov
cltd
shrb
push
inc
scas
popl
lods
sbb
aam
mov
pop
faddp
sbb
out
shrl
cmpsb
repz
sub
call
pop
popl
inc
mov
data16
pop
jge
xor
cmp
ja
movsb
movsb
push
data16
push
nop
out
test
cld
aas
ja
xlat
repnz
test
push
jbe
pop
push
out
mov
adc
es
pop
les
mov
je
cmp
pop
dec
dec
out
mov
add
std
ds
and
repnz
fwait
xor
push
dec
inc
dec
push
mov
dec
mov
mov
mov
dec
test
jne
aam
xchg
cmp
dec
ret
stc
add
ja
push
adc
repnz
mov
scas
mov
and
push
jb
aam
icebp
add
popa
adc
jae
inc
jne
xlat
fidivs
hlt
xchg
mov
mov
cmp
jge
aas
sub
dec
out
inc
loop
sbbb
dec
enter
scas
popf
sbb
mov
out
arpl
shll
add
cmp
out
pop
cltd
data16
ljmp
mov
cltd
es
pop
mov
out
cs
or
lods
lret
adc
pop
jne
pop
and
jnp
inc
xchg
adc
adc
push
xchg
ss
clc
ljmp
movsl
add
adc
ret
loope
and
mov
into
outsl
gs
xchg
lods
hlt
pop
rclb
fwait
push
inc
and
jne
ss
stos
mov
sahf
arpl
add
andps
aaa
mov
loope
add
lds
adc
sbb
fmuls
push
sti
mov
mov
ret
adc
jl
bound
icebp
rorb
mov
pop
fwait
pop
shll
inc
outsb
mov
pop
js
lahf
fstpl
out
fsqrt
movsl
icebp
cwtl
or
mov
rorb
xchg
loop
dec
adc
adc
sbb
loop
or
jne
test
lret
mull
rclb
nop
add
inc
sbb
subl
jg
push
jg
xlat
repnz
cmp
outsl
int3
loop
adc
movsb
out
insl
cli
addr16
ja
push
and
clc
int3
jg
pop
mov
dec
adc
push
mov
pop
dec
insb
lret
push
outsb
into
jb
jbe
loop
int3
aas
sbb
lahf
cmpsb
sub
sub
push
loopne
shll
enter
cmp
xchg
xchg
add
je
push
mov
dec
hlt
pop
test
bound
insl
add
call
cltd
enter
adc
repnz
push
fwait
and
mov
cwtl
gs
dec
ja
xor
push
mov
push
fdivl
out
rclb
and
icebp
pop
jp
cltd
fisubl
jnp
ljmp
adc
into
js
ret
jne
mov
in
adc
dec
bound
adc
in
jmp
mov
mov
xchg
jl
mov
or
push
pop
ss
pop
cmpsb
push
xchg
fwait
mov
and
jbe
pushw
dec
and
insl
sbb
subl
xor
pop
xor
sbb
shr
mov
and
lahf
movl
sub
push
in
and
int3
jne
adc
loope
and
inc
push
andb
cmp
push
loopne
dec
stos
lock
push
push
xchg
test
and
hlt
aaa
push
cmp
cmp
push
outsb
inc
out
cmc
adc
cmp
pop
ljmp
push
cmp
movsb
xchg
and
mov
into
ficompl
jg,pn
and
gs
and
imul
sub
xor
jl
jge
jno
push
mov
inc
push
shlb
je
cltd
jge
cmpsb
mov
mov
out
loopne
iret
test
ret
faddl
cmp
cmp
jge
mov
mov
jne
inc
bnd
test
mov
data16
pop
cmp
insb
bound
add
or
popa
and
jb
test
out
addr16
rcl
add
jbe
xchg
pop
cli
and
mov
pop
jne
push
xor
or
sub
cltd
jno
je
or
mov
aam
mov
js
mov
push
xor
enter
lahf
into
push
movsb
jne
jns
pop
cltd
mov
adc
and
mov
add
jo
nop
push
xor
jg
dec
outsl
xchg
data16
cmp
ret
mov
push
out
xor
mov
dec
aas
mov
outsb
cmpb
lahf
lds
sub
mov
or
sub
mov
test
xor
inc
aad
push
cwtl
out
rcrb
arpl
fcoml
loop
adc
mov
pop
push
sub
fwait
js
loop
test
int3
lods
sahf
mov
jle
bound
sub
fwait
out
mov
data16
adc
test
sub
push
lcall
nop
mov
adc
fwait
push
aam
push
js
xchg
mov
xor
add
cli
mov
cmp
sbb
xlat
fimuls
sub
cmp
sub
or
shlb
xchg
rclb
jecxz
repnz
jo
cmc
loop
xchg
sbb
lahf
int
in
xor
call
inc
je
sbb
push
xor
pop
out
insb
jne
push
xchg
movsb
push
sbb
outsl
jge
mov
test
or
add
test
or
aad
frstor
dec
xchg
out
xlat
lret
cmp
pop
mov
and
adc
mov
outsb
sub
jle
test
mov
mov
out
rclb
jae
dec
test
in
inc
les
lods
sub
rol
leave
lods
push
ss
and
jmp
out
aad
cld
jecxz
sbb
push
dec
addb
push
adc
arpl
rolb
dec
addr16
fwait
sub
and
mov
lret
ja
or
cld
cs
pop
mov
rorb
push
fdiv
xchg
pop
aam
xchg
and
xlat
rorb
loop
pop
sahf
push
and
sub
test
cmp
dec
jo
cmp
pushf
dec
inc
js
pop
adc
out
pop
mov
mov
jne
and
sti
shrb
rorb
dec
mov
iret
push
lock
ljmp
mov
icebp
mov
sub
or
stos
movsb
scas
inc
pop
dec
or
pop
pop
mov
cmc
lods
push
cmp
xchg
mov
jg
xor
mov
cltd
in
pop
xor
inc
je
stos
in
xor
pop
jb
sbb
adcl
push
das
je
push
out
xor
xchg
xor
dec
fistpll
ljmp
dec
push
rclb
stos
cwtl
shr
mov
into
add
and
cbtw
add
sahf
and
ficomps
pop
fs
push
lahf
je
cmp
dec
mov
or
xchg
out
cwtl
out
pushf
out
cltd
repnz
test
dec
mov
pop
inc
mov
enter
dec
aam
lret
pop
call
cld
bound
cmp
and
dec
sub
and
cmp
push
push
inc
inc
and
sbb
inc
out
ljmp
inc
out
in
divl
not
dec
into
out
push
in
adc
sub
gs
not
inc
mov
ss
mov
pop
mov
pop
scas
dec
sub
aas
jnp
sahf
cmp
mov
or
sahf
xor
aas
jnp
sahf
xor
or
add
lret
sub
out
xchg
push
mov
lcall
fcomi
lahf
cmp
add
or
daa
std
lods
ds
and
les
cs
into
jge
into
lret
bound
jg
and
push
add
mov
pop
mov
movsb
cmp
cmp
scas
int3
push
sbb
push
std
lret
mov
push
or
sbb
fsubr
or
push
add
cwtl
pop
cmpsb
out
inc
push
sbbl
or
adcb
mov
sbb
ja
test
mov
jl
loop
and
mov
into
arpl
push
mov
out
push
insb
ret
jecxz
or
mov
es
jge
xor
pop
sbb
shlb
mov
cli
pop
mov
testb
rorl
cmp
push
adc
push
push
mov
inc
in
fcomps
pushf
jge
and
add
cmp
sub
aad
rcl
fwait
mov
icebp
fimuls
or
xor
mov
sub
xor
cmp
jge
xchg
jmp
nop
mov
lods
and
div
adc
cmp
dec
jae
adc
daa
loopne
test
lods
cmp
mov
int3
in
and
cmp
ret
add
lock
rclb
aam
xchg
aad
rcrb
sbb
add
mov
push
mov
jno
xchg
jl
dec
in
loopne
push
add
mov
aad
pop
push
inc
mov
or
mov
mov
jne
enter
inc
jne
inc
lcall
adc
mov
xor
and
jns
pop
loop
lcall
enter
mov
mov
jne
lock
add
sbb
negl
xchg
mov
ja
popa
mov
inc
sbb
rclb
pushf
pop
stos
push
fdivs
addr16
call
sahf
sub
fildl
jo
sub
cmp
pop
pop
fwait
mov
stos
rcll
jnp
cmp
mov
mov
sub
sub
xor
xlat
add
flds
dec
sub
mov
in
mov
adc
inc
xor
mov
mov
jg
pop
bnd
xor
rcrb
xor
movsb
jge
xlat
in
aad
inc
not
dec
ljmp
std
cmp
gs
test
cmp
pand
mov
mov
dec
nop
xchg
loop
and
sbb
and
jne
jl
rol
int3
out
push
out
pop
je
movsb
inc
arpl
adc
dec
fisubrs
out
inc
shlb
push
xor
lcall
adc
mov
cmp
cmpsb
test
js
enter
push
sbb
pop
fstps
mov
adc
inc
push
cmp
xor
mov
lods
leave
out
fstl
sbb
adc
xchg
add
notl
mov
out
lret
adc
xor
popf
inc
test
xchg
ja
and
je
or
sbb
pop
in
cmpsl
cmp
jl
add
mov
ja
xlat
scas
xchg
xlat
sbb
inc
loope
bound
jl
fs
aam
rol
lret
pop
inc
and
xor
cld
fwait
push
nop
mov
push
xor
inc
xor
jg
cmpsl
xor
jmp
sbb
fsubrs
mov
in
mov
lea
xchg
push
clc
test
push
ror
arpl
in
push
cmp
fs
xchg
jge
int
push
je
mov
test
sub
mov
mov
imul
push
sub
jecxz
ds
adc
mov
scas
inc
pop
into
mov
scas
mov
or
cmp
mov
mov
push
outsb
cld
std
mov
insb
pop
lea
mov
stc
in
or
bnd
es
insb
arpl
dec
fsts
shrb
lahf
lret
push
inc
movsl
ja
aaa
push
cs
cld
rcr
pop
inc
fwait
xchg
dec
shrl
mov
test
je
add
pop
jle
dec
in
or
pop
add
pop
push
add
jle
inc
sarb
add
pop
int3
mov
lret
shrl
sti
shll
xor
and
lds
xchg
mov
add
call
jge
fwait
push
and
clc
jno
jne
and
les
je
add
and
arpl
and
int3
sub
clc
inc
xor
clc
mov
push
cmp
push
jle
dec
cwtl
ja
dec
mov
xor
jecxz
repz
cmpsb
pusha
outsl
dec
pop
ja
loope
jnp
adcb
mov
into
pop
lahf
push
adc
scas
sub
jo
jo
data16
xchg
inc
xor
inc
push
fsubs
je
fwait
mov
adc
rcrl
mov
xor
popf
push
and
sbb
pop
jnp
mov
cmc
es
out
cld
adc
cmpl
cltd
fadds
sbb
inc
sub
xchg
loop
cmp
mov
add
jecxz
repnz
int3
lret
aad
mov
ja
sarl
pop
push
lock
rcrl
loop
cltd
jl
enter
ficoml
idivb
push
enter
pop
test
push
popa
lea
insb
scas
and
add
lds
cltd
rcrb
test
pop
cmp
jge
sbb
cmp
mov
add
and
xchg
jg
sbb
xor
fwait
adc
mov
push
out
push
xchg
repnz
sarl
dec
into
in
xlat
mov
stc
push
adc
pop
inc
mov
nop
cmp
push
mov
add
sarb
push
out
inc
mov
lahf
push
fsubs
in
xor
faddp
stos
stos
cmpsl
cld
dec
jge
aad
cmp
lcall
pop
mov
sbb
hlt
movsb
out
loop
negl
inc
aad
add
stos
or
rol
dec
sbb
xchg
in
data16
adc
into
mov
outsb
loop
cmp
jo
out
pop
and
stc
ljmp
aaa
out
or
lea
add
xor
xor
bound
jle
ljmp
xor
cmp
dec
pop
popa
test
or
or
andnps
fildl
add
adc
sub
stc
sbb
and
bnd
sbb
mov
xchg
mov
add
in
call
aam
push
lods
into
jecxz
adc
or
xchg
bound
push
add
or
xor
bound
lret
pop
add
jb
scas
test
mov
jne
loopne
addr16
sahf
subb
dec
loop
scas
pop
pop
ljmp
into
in
lret
sarl
dec
cltd
sub
outsb
imul
add
xor
jle
stos
mov
or
pop
test
ljmp
xchg
sub
stc
adc
es
mov
pushf
stos
adc
jb
xor
dec
xor
ficomps
push
xor
test
mull
js
jne
test
bound
cli
jp
and
dec
cmp
adc
cmp
ljmp
pop
fmuls
xchg
rorl
jl
mov
mov
in
in
mov
in
or
adc
and
movsb
sub
in
in
add
xchg
mov
in
mov
fbstp
sbb
test
lahf
scas
pop
xor
mull
cmp
arpl
push
cmp
mov
push
out
and
inc
cmp
orl
fisttpl
bound
cwtl
ucomiss
setnp
add
sbb
scas
stc
sbb
rorl
mov
mov
lea
jne
inc
mov
flds
pop
out
mov
shll
lret
je
add
xchg
lods
scas
aaa
mov
jmp
sub
mov
pop
sbb
out
insb
repnz
fdivrs
rorl
inc
lcall
enter
mov
pop
and
mov
cs
cmp
cmc
push
add
aad
push
repnz
dec
ljmp
loopne
cmpsb
xchg
ss
into
push
insb
movsb
jecxz
adc
push
mov
inc
pop
in
mov
arpl
jae
mov
cwtl
shrb
dec
lcall
or
scas
push
adc
sub
xchg
lret
add
loop
lods
sub
cmp
or
je
xchg
inc
in
in
loop
adc
in
add
inc
out
jl
pop
setnp
fninit
xor
loopne
lahf
pop
loopne
je
movsl
clc
cwtl
mov
jne
aad
popl
push
sahf
push
movsb
in
bound
mov
pop
lcall
js
jle
pop
and
mov
dec
jge
mov
xlat
stos
inc
jne
out
inc
mov
jecxz
adc
inc
sub
sahf
cmpsb
adc
sarl
and
dec
and
xor
mov
mov
jge
test
adc
test
and
inc
adc
cmp
jp
les
or
jle
mov
ficompl
enter
popa
or
orb
push
ret
jle
lcall
aaa
fwait
and
xchg
push
and
mov
scas
sarl
xor
aaa
jp
adc
stos
fwait
rcrl
mov
scas
cli
adc
xor
scas
jbe
test
inc
and
cmp
pusha
sbb
outsl
xor
repnz
ja
lea
clc
cmpsb
or
iret
pop
aad
jl
call
addr16
nop
in
pop
add
cwtl
in
jno
ja
dec
aaa
les
scas
jns
data16
aam
dec
dec
stos
jne
xlat
cmp
mov
sahf
fwait
stc
rorb
lea
sub
mov
lods
lahf
loopne
inc
xlat
enter
insl
lret
bound
mov
add
std
add
xchg
cmp
pop
xor
cmc
and
inc
les
insb
test
loope
loopne
ja
out
mov
hlt
bound
shrb
imul
xchg
jp
mov
sub
insb
pop
loop
push
mov
out
js
and
leave
mov
mov
pop
hlt
scas
jns
push
ljmp
sbb
outsl
sub
test
cmp
add
bound
mov
or
fisttps
sbb
sbb
rol
test
sub
mov
fwait
xchg
push
and
je
insb
into
aam
mov
dec
pop
outsl
mov
mov
shlb
dec
sbb
cmp
and
out
pop
jno
push
mov
inc
pop
fcoml
inc
adc
push
lcall
out
dec
jae
and
les
rcrl
add
inc
pop
data16
add
push
push
inc
lahf
cmp
hlt
frstor
pop
cmp
rcl
into
repz
sub
add
ja
pop
add
fnstcw
pop
xor
mov
jne
xlat
movsb
mov
dec
pop
push
out
cli
pop
sbb
xor
sub
int3
jne
xor
int
sarl
fdivrl
add
loop
clc
dec
fnstcw
pop
fs
sub
push
into
dec
scas
pop
adc
jl
test
call
out
adc
sbb
mov
ficomps
pop
xlat
mov
fimuls
shlb
nop
mov
push
sub
pmullw
cmp
jo
faddl
add
into
jmp
repnz
add
mov
ret
cld
mov
mov
jecxz
jmp
xor
inc
mov
pop
mov
les
add
xchg
xor
es
repz
scas
xorb
dec
add
pop
cwtl
sbb
orl
sub
dec
stos
sahf
pop
pop
insb
movsb
and
xor
cmp
mov
mov
mov
cmc
dec
aas
rcrb
mov
push
flds
dec
jmp
scas
stos
xor
enter
inc
jbe
inc
xchg
sarl
aam
mov
sahf
sti
fwait
dec
fldcw
sbb
call
std
sub
dec
cs
xor
out
cmp
inc
addr16
shlb
mov
lret
jg
push
jl
add
mov
rorl
mov
dec
or
dec
bound
shlb
pop
fisubrl
xlat
push
mov
jb
push
cltd
push
pop
lfs
jmp
cwtl
sub
push
jae
pop
adc
and
lods
push
pop
pop
and
dec
adc
mov
movsb
out
xlat
je
test
dec
shlb
push
bound
lds
lret
or
jl
jge
rorb
loope
int3
cmp
xchg
stos
mov
sahf
outsl
sti
loop
dec
pop
xchg
not
mov
cltd
mov
ja
shlb
movsb
jmp
divb
lock
push
stc
cld
je
sub
rorb
cs
pop
hlt
ss
clc
enter
xchg
mov
add
or
inc
adc
icebp
cmp
jne
pusha
adc
dec
cmp
test
xor
mov
pop
or
sub
adc
repnz
idiv
jne
or
jge
push
pop
pop
dec
into
ja
and
test
push
push
jg
outsl
xor
cmpsl
je
shl
enter
sbb
sbb
loopne
cmp
aas
addl
jne
dec
insb
xchg
adc
push
mov
mov
xor
dec
shr
dec
addr16
cli
jg
xor
movsl
push
mov
add
data16
pop
ja
rol
jle
xorb
push
mul
dec
shlb
cmpl
cmpsl
sahf
lret
pop
pop
push
fwait
adc
sahf
stos
pop
pop
push
sub
xor
orb
mov
push
test
mov
inc
fcoms
les
dec
jno
aam
outsb
cmp
notb
add
mov
stos
adc
ljmp
push
cmc
sbbb
loop
inc
jb
hlt
cmp
add
dec
push
pop
adc
pushf
shlb
bound
lahf
pop
mov
xor
jmp
loop
xor
inc
jne
ror
lcall
cmp
mov
push
fwait
outsl
adc
sbb
sbbb
mov
xor
jg
cli
cld
cmp
pop
hlt
sti
fidivl
aam
cmp
inc
adc
outsb
sbb
test
sahf
filds
mov
dec
push
or
in
cmp
add
ret
lahf
jg
ret
push
push
incw
test
or
shlb
sbb
ret
fs
les
dec
wrmsr
hlt
cwtl
gs
fwait
adc
mov
aam
les
jb
call
into
and
xor
fcmovnbe
jns
push
hlt
je
adc
cli
shlb
dec
jo
bound
movsl
out
fmull
nop
push
inc
mov
adc
arpl
cmp
decb
mov
lea
jne
mov
faddp
mov
lahf
fldenv
or
inc
jg
sub
sub
push
mov
ja
mov
or
jg
es
inc
sahf
cmp
iret
adc
or
shll
pop
ja
xchg
jecxz
dec
inc
mov
andb
out
in
aam
adc
es
dec
pop
stc
cmp
out
hlt
adc
loop
cmp
xor
adc
push
mov
and
pushf
int3
out
mov
test
jne
sub
stos
add
gs
jg
push
insb
inc
xchg
mov
pop
pop
mov
rol
or
dec
mov
imul
dec
cs
out
push
push
cmpsb
or
stos
aam
and
insl
or
repnz
inc
test
aam
add
aad
mov
pop
push
and
fsts
test
test
sahf
add
adc
push
push
lcall
dec
lahf
xor
push
push
sub
sar
mov
sbb
nop
out
add
inc
out
add
push
sub
dec
sbb
enter
subb
call
popf
shr
sub
dec
fimull
lea
ret
fiaddl
call
mov
hlt
stc
inc
jb
push
adc
xor
push
enter
push
push
jns
push
test
or
mov
pusha
into
xor
scas
dec
outsb
mov
rcl
sbb
sahf
lock
fnstenv
repnz
xchg
mov
scas
jp
fdivl
jmp
sarb
dec
pushf
out
adc
out
pop
bound
xor
fwait
cmp
cwtl
jno
mov
lahf
enter
xorps
jbe
es
mov
xchg
scas
xor
lret
lret
push
sub
xchg
mov
ljmp
push
jbe
pop
push
aaa
pop
shlb
cmp
nop
jne
push
mov
scas
pop
pop
mov
push
or
aam
fistl
and
and
imul
and
js
mov
mov
rorl
fdivrp
add
int
iret
adc
jg
pop
push
lods
outsl
je
or
mov
in
inc
aas
or
push
fs
pop
mov
imul
add
orb
in
hlt
jo
popa
jne
shlb
cltd
js
jge
scas
cmp
push
mov
bound
or
je
faddp
push
xchg
pop
mov
js
jle
pop
scas
fwait
pop
clc
mov
pop
jne
orb
in
adc
push
ljmp
test
lods
fstps
xchg
inc
popf
sti
sub
dec
add
adc
repnz
scas
rclb
inc
mov
stos
pop
adc
jnp
loop
scas
add
lds
in
push
adc
add
push
push
pop
aam
mov
aam
jmp
sbb
out
adc
in
enter
adc
dec
and
cmp
jg
test
lcall
push
shl
scas
inc
pop
sub
shl
sahf
adc
test
inc
mov
mov
sub
push
sub
dec
xlat
dec
icebp
or
clc
pop
jge
mov
push
scas
cwtl
addr16
push
mov
jne
shll
into
sub
mov
pop
dec
push
in
scas
xchg
and
pop
sbb
into
outsl
inc
rclb
scas
into
mov
pop
mov
subb
jge
sarl
mov
mov
hlt
jne
and
mov
pop
xchg
sti
sub
sub
xor
out
jp
je
in
mov
aas
cmpsl
cmc
sbb
cmp
pop
pop
xchg
pop
lahf
lret
add
and
dec
push
js
mov
mov
lock
enter
pop
push
iret
pop
icebp
push
shrb
jecxz
repnz
add
adc
imul
aam
pop
mov
movsb
push
enter
adc
lcall
lret
lock
fidivrs
ja
xor
and
inc
pop
mov
and
stc
xor
inc
imul
lods
adc
fcomps
pop
mov
cwtl
cmp
dec
sbb
cwtl
std
add
sbb
and
add
dec
arpl
sahf
lock
cmp
int3
xchg
sub
sub
scas
out
adc
xor
pop
xchg
cli
nop
add
sahf
mov
data16
and
or
adc
inc
hlt
push
jge
pop
push
fsubrs
sbb
dec
shr
cld
addr16
adc
sub
js
mov
push
arpl
lea
mov
mov
add
dec
and
push
xor
mov
test
lock
xchg
mov
out
in
or
dec
or
cltd
mov
jns
dec
jge
xor
movlps
dec
loop
dec
je
jge
push
jbe
mov
mov
mov
popf
testl
cmp
shrb
pop
int3
scas
in
or
cmpsb
xchg
bound
mov
in
cmp
sar
loope
mov
repnz
hlt
inc
cli
dec
or
inc
mov
xor
dec
repnz
and
pusha
arpl
bound
push
clc
fimuls
jg
xor
pop
cltd
inc
pusha
cld
dec
bound
push
or
cvtps2pd
xchg
insb
cmc
out
inc
hlt
outsl
add
pop
and
lock
jle
inc
in
fwait
loop
rcll
sub
jle
and
clc
jo
icebp
popa
xor
mov
pop
lahf
fnsave
lret
pop
mov
and
xor
sbb
jl
xor
or
xchg
xchg
lret
pop
sbbb
push
lods
jp
pop
xchg
xchg
cmp
pop
mov
pop
fwait
mov
mov
pop
push
xor
ss
ds
xchg
iret
adc
stos
ret
adc
xor
dec
imul
mov
mov
adc
xor
sbb
jne
xor
stos
cli
shlb
adc
lods
push
repnz
and
dec
shrb
dec
ret
cs
jne
inc
jbe
push
mov
arpl
adc
pop
mov
les
bound
dec
test
xor
jb
lcall
data16
es
inc
sub
adc
mov
pop
xor
shr
sbb
ret
push
stos
lods
cmpsb
jp
add
rorl
popf
cld
fdivrl
enter
adc
mov
addr16
imul
dec
shrb
xchg
movsb
push
addr16
inc
pop
and
mov
lret
or
adc
jl
iret
loope
mov
xlat
sbb
fcomps
test
pop
rcrl
sbb
mull
adcb
cld
push
jbe
mov
pop
lock
pop
and
mov
arpl
loopne
xchg
dec
leave
cmp
push
cmp
jle
es
mov
mov
xor
lret
cmp
shrl
pop
in
jnp
xor
dec
xor
in
mov
into
pop
dec
xchg
es
insl
lds
out
adc
push
or
jg
sarl
scas
pop
dec
push
cmpsb
js
jns
js
mov
mov
stc
idiv
xor
mov
xor
les
rorb
lods
dec
pop
push
mov
or
hlt
or
mov
je
lcall
call
lods
imul
mov
mov
mov
or
in
rorb
and
je
mov
fcom
test
aam
cmp
ret
out
dec
test
dec
pop
bound
lods
js
push
lcall
fimull
rcl
jl
dec
cltd
jno
into
push
jb
stc
cvtdq2ps
xor
sahf
sbbl
add
aam
ss
sbb
mov
inc
loopne
pop
nop
outsl
push
pushf
stos
mov
pop
dec
loopne
inc
fdivl
adc
cld
add
out
xor
add
in
cwtd
loope
mov
lods
cmpsb
addr16
lahf
mov
fldt
pusha
les
shrb
bound
adc
push
movsb
jb
cmp
adc
mov
and
test
adc
movsb
call
into
and
inc
ja
pop
mov
enter
pop
add
jbe
push
movsl
out
cmp
jo
push
shrb
dec
adc
or
jbe
cld
loop
adc
popa
repnz
sbb
and
mov
ss
pop
cmp
jecxz
rcrb
test
sahf
lods
adc
scas
sub
sub
arpl
ret
mov
pop
sub
leavew
adc
and
inc
mov
xchg
xor
pop
pop
push
fidivrs
sub
in
jge
mov
repnz
jbe
sub
and
mov
push
enter
ds
test
test
cs
addr16
cmp
scas
mov
add
sbb
scas
loop
movsb
out
push
dec
insw
data16
cmp
jp
daa
ret
es
inc
in
push
mov
je
mov
dec
aam
lahf
push
loop
cmp
cmp
and
icebp
lcall
sub
stos
scas
rcl
stos
jecxz
aam
cs
test
jg
and
dec
mov
cmpb
mov
into
adc
shl
sahf
je
cli
jne
cmpsb
jo
repnz
add
dec
xor
and
adc
dec
jae
shrb
mov
or
or
aaa
adc
jae
mov
loop
adc
add
stos
outsl
xor
es
outsb
cmp
inc
xchg
mov
or
mov
les
push
lret
xor
pushf
rcl
add
cmpsb
jg
mov
cltd
daa
in
push
jne
xor
fs
into
ja
mov
pushf
push
jne
enter
fwait
ja
adc
int
cmp
xchg
mov
out
out
stos
clc
rcrb
mov
stos
outsl
adc
dec
aad
arpl
cmp
add
cmp
lcall
stos
jne
adc
xchg
mov
jp
inc
lret
adc
pop
pop
xor
lcall
repnz
sahf
or
mov
movsl
pop
cld
push
dec
call
aad
cld
ret
jge
inc
cmp
dec
mov
aam
fsubp
ror
shlb
addr16
jbe
mov
push
out
or
pop
dec
test
mov
push
sub
cmp
pop
push
fcoms
in
mov
xchg
in
dec
sbb
or
jecxz
adc
adc
cmpsb
fnclex
mov
arpl
stos
inc
les
mov
mov
sbb
fsubs
sub
dec
hlt
push
rclb
mov
iret
or
jmp
movsb
mov
jne
rcrl
test
jne
xchg
je
loop
push
or
call
inc
nop
loop
adc
push
mov
lea
test
adc
test
scas
fs
jl
shll
inc
jne
and
mov
jo
push
mov
psllq
and
xor
cmpsl
ret
sbb
mov
mov
lret
fcmovnu
and
jg,pn
lock
cmp
mov
and
pop
fs
xor
and
xchg
bound
pop
aas
push
idivb
rol
aaa
scas
mov
jp
enter
inc
fdivl
fwait
scas
adc
cmp
push
push
mov
adc
test
add
in
jo
xchg
ljmp
push
push
pop
xchg
and
test
xor
fcoml
outsb
mov
xlat
out
add
ret
push
push
arpl
xchg
pop
ror
mov
movsb
adc
inc
dec
xor
rclb
mov
dec
or
mov
fstl
pop
pop
mov
inc
mov
ret
arpl
push
mov
jge
rorl
mov
fstpl
enter
pop
cmp
mov
add
pop
loope
mov
jge
aad
out
add
add
dec
outsl
and
mov
popa
lock
in
cmp
ds
mov
jmp
add
xlat
pop
mov
mov
pop
inc
jns
xor
lea
mov
xchg
jge
push
sahf
adc
mov
cwtl
push
cmp
pop
rol
sub
sahf
pop
adc
arpl
xor
push
push
test
aam
sar
repnz
fdiv
hlt
rcll
rcrb
xchg
int3
pop
data16
push
xchg
xchg
je
hlt
ret
jg
out
outsb
orb
jge
xlat
pushf
in
fimuls
xor
pop
ret
fcoml
iret
sbb
pop
or
fcompl
xchg
divl
aas
pop
push
in
push
sbb
xor
mov
xor
mov
lock
push
data16
jne
mov
add
lcall
xchg
sub
roll
push
push
in
fs
xor
mov
test
cmp
jge
fldlg2
int
sub
dec
mov
dec
movsb
xchg
adcb
push
sub
dec
cwtl
cld
push
insb
test
in
pushf
test
les
scas
fwait
dec
adc
and
scas
roll
xor
lcall
xchg
push
sbb
bound
pop
dec
rcr
call
lock
or
enter
mov
xchg
scas
scas
addr16
mov
ja
push
push
leave
jne
adc
pusha
add
mov
rcll
int3
out
mov
mov
into
xor
push
push
jg
into
loop
pop
dec
dec
xchg
mov
pushf
xchg
jne
and
adc
add
dec
bound
clc
pop
jne
aad
cmp
testb
cltd
dec
mov
test
pop
pop
push
pop
bound
pop
aas
sub
jb
jbe
sahf
jle
xorb
pop
jbe
sbb
scas
mov
dec
add
adc
das
ss
cmp
mov
sub
out
out
scas
adc
xchg
mov
mov
cmp
pop
mov
pushf
hlt
mov
lods
mov
mov
cwtl
cmpsb
jge
push
xchg
and
lret
xlat
pop
cwtl
xchg
mov
sbbb
or
shl
mov
xorl
and
mov
adc
in
jle
cwtl
imul
cs
mov
jp
insb
push
loop
or
jg
push
xor
out
cltd
adc
cs
arpl
clc
fimull
lock
mov
jne
add
sbb
lcall
inc
inc
lahf
or
bound
cld
loop
and
push
dec
xor
inc
or
scas
xor
cld
inc
or
push
push
push
xor
cwtl
xchg
push
aas
pop
adc
mov
jns
sahf
mov
mov
adc
mov
lret
xchg
loop
clc
or
jle
jo
xor
or
cmp
adc
jle
mov
add
sub
dec
adc
push
jg
enter
shlb
ljmp
cmp
mov
cltd
ljmp
add
mov
icebp
je
jp
mov
ljmp
repnz
int3
les
shlb
test
scas
cmpsb
pop
dec
add
jno
sub
mov
into
cmp
out
mov
mov
pop
cmp
sub
dec
mov
sbb
mov
stos
lods
jbe
sub
data16
adc
adcw
adc
outsl
pop
out
adc
jge
aad
xchg
dec
in
mov
movsb
cmp
dec
hlt
or
add
in
sahf
popa
pop
mov
mov
fisubrs
add
outsl
xor
ss
scas
movsb
xor
sahf
inc
aam
stc
repnz
dec
jmp
pop
lods
cmp
push
lods
outsb
jmp
cli
jecxz
push
arpl
pop
adc
adc
push
fisubrs
in
mov
sub
ljmp
ret
popa
pop
push
pop
jno
leave
cltd
loopne
mov
out
inc
subb
jg
xchg
mov
out
xlat
add
add
inc
out
stos
dec
scas
jne
push
fcompl
pop
repnz
ljmp
jg
jb
in
jecxz
add
aaa
arpl
ljmp
jge
xor
out
sub
movsl
adc
inc
shrl
mov
rclb
movb
les
fyl2x
jmp
or
ds
dec
or
loop
or
icebp
int3
pop
int3
inc
fistl
and
adc
push
fisttps
addr16
test
xor
jnp
sub
cli
test
pop
incb
xlat
inc
cwtl
je
or
sar
push
mov
rcrl
mov
ret
call
xchg
jg
clc
ret
aad
adc
push
rol
jge
lcall
adc
pop
pop
mov
mov
out
adc
cmp
in
lock
into
inc
sahf
shrb
not
lock
and
cmp
pop
bound
loopne
inc
scas
sbb
punpcklwd
pop
and
test
fwait
xchg
pop
into
loopne
mov
mov
rcrl
xchg
mov
cmp
pop
sbb
loopne
lods
jo
mov
xor
popa
sbb
mov
pop
pop
fwait
mov
jae
in
lods
and
jbe
lea
cmp
lcall
cld
mov
aad
gs
cmp
push
pop
jmp
jno
push
dec
xchg
into
sbb
loope
pop
mov
xor
clc
je
bound
test
popf
aas
scas
stos
xor
lret
mov
xor
lds
aam
xor
xor
insl
adc
cmp
sub
lret
popa
pop
sub
nop
insb
aaa
out
push
jbe
addb
mov
aad
clc
clc
lods
pop
arpl
mov
cmp
or
rcrb
scas
lahf
adc
mov
pusha
fistl
ds
and
push
mov
aad
ja
xor
lret
aaa
jne
mov
jnp
mov
lods
sarl
aaa
push
sub
cmp
add
dec
and
mov
dec
mov
rcll
or
jecxz
shrb
lcall
pop
sbb
xor
addr16
add
and
jg
mov
fs
xor
cltd
or
jne
enter
lahf
iret
shll
out
repz
xor
sbb
inc
js
xor
out
test
rolb
lcall
or
and
jbe
mov
jg
mov
in
jo
jne
xor
stos
mov
enter
call
add
and
out
adc
test
ret
and
or
sbb
xor
lcall
clc
sub
test
loopne
int3
in
rcrb
xor
jo
cmp
ficoml
mov
inc
fldenv
clc
lcall
data16
pop
cltd
xchg
cld
jnp
pop
jl
data16
push
insb
mov
cltd
dec
push
mov
cli
pop
aaa
add
xor
scas
pushf
sbb
mov
mov
jg
repnz
adc
sbb
push
push
stc
and
je
enter
out
jne
lods
je
add
sbb
jo
int3
fsts
loop
dec
jb
lock
push
out
dec
lcall
push
out
inc
stos
pop
or
fists
sbb
loopne
lock
divb
pop
sbb
into
dec
stos
pop
repnz
lods
mov
cwtl
ss
jb
sarb
call
in
and
fs
sub
cmp
xor
dec
ret
sahf
test
pusha
xchg
inc
pushf
cmp
lods
mov
sahf
int3
cld
repnz
fdivrl
xlat
cld
hlt
ss
adc
or
adc
fisubrs
out
adc
enter
push
pop
insb
cli
pop
xchg
jl
xor
cmp
mov
aad
les
nop
xchg
fmull
dec
in
out
sarl
dec
push
or
jle
jo
aas
mov
add
xor
data16
cld
cmp
jg
adc
stos
cmp
cmpsb
adc
aad
or
adc
or
cmp
xchg
cmp
or
xchg
les
cmpsb
cmp
sbb
shl
stos
mov
hlt
aam
cmp
fidivrs
add
sarl
mov
mov
mov
or
add
incb
orb
popf
add
lea
jo
xor
and
and
and
arpl
cltd
pushf
clc
xor
and
arpl
mov
fsub
rclb
push
and
jo
dec
and
push
push
je
xor
or
nop
pop
dec
enter
cmp
push
cwtl
jl
in
out
cmpsb
out
insb
inc
mov
pop
test
push
add
push
cltd
push
hlt
in
ret
lcall
aas
cmp
movsb
cmp
je
inc
clc
cs
movsb
into
lods
into
mov
mov
push
loop
fs
cwtl
test
xchg
jb
xchg
mov
dec
aad
popa
push
inc
popa
mov
and
mov
lods
mov
pusha
les
pusha
cmp
push
pop
push
enter
mov
cwtl
xor
push
push
add
lea
out
out
lahf
xchg
pop
jb
push
pop
jecxz
dec
push
fisubs
in
popa
push
fst
xchg
cmpsl
jns
bound
das
pusha
add
insb
jp
push
lahf
lahf
sti
fwait
hlt
mov
mov
cmpsb
andb
ds
jbe
into
cmp
arpl
dec
dec
mov
jo
or
push
push
jne
jo
imul
insb
cmc
pop
lods
ret
scas
gs
pause
pop
fwait
mov
out
xchg
outsl
clc
insl
push
push
int
pusha
pop
arpl
mov
mov
mov
ret
les
mov
nop
mov
sbbl
sbbb
jns
jp
fs
test
vaddsubps
iret
cmp
mov
jb
mov
nop
mov
sahf
lahf
sbbb
movsb
test
xchg
mov
mov
mov
xchg
sub
pop
nop
outsb
addr16
jp
add
stos
int
das
loop
fildl
ss
in
and
in
push
loope
cwtl
enter
xor
and
push
push
mov
inc
insb
adc
mull
pop
jno
cmpsl
sub
sbb
pop
stos
push
test
dec
rcrb
imul
sbb
in
pusha
and
jne
int
jo
popa
mov
dec
push
cmp
into
sti
outsb
scas
out
xlat
jge
jno
fcompl
pop
shl
and
sbb
push
aam
int3
or
add
lcall
cmpsb
jmp
into
and
out
add
xchg
and
push
daa
les
arpl
pop
mov
pop
loop
into
popa
jno
fidivs
and
mov
pusha
xor
into
inc
mull
ret
test
xor
in
sub
pusha
dec
xchg
lea
pusha
cmpsb
inc
fidivrs
addr16
ss
mov
leave
mov
pusha
in
fiaddl
cli
stc
and
sbb
fistps
pusha
add
js
adc
jns
pusha
loop
push
or
lock
xadd
mov
ret
loopne
in
lahf
aam
cld
movsl
mov
sbb
push
mov
inc
cmp
pusha
lret
mov
popa
adc
xchg
xor
adcl
jns
or
xchg
xchg
add
mov
pop
xor
sbb
jno
nop
mov
andb
cmp
mov
mov
xchg
mov
mov
push
xchg
lret
sbb
pop
stc
jg
rol
je
insb
shll
ret
jnp
outsb
dec
inc
rcr
popa
jb
sbb
pop
push
pop
push
loopne
lret
xlat
cmp
popa
push
mov
jnp
cmp
loopne
pop
gs
add
lock
pusha
ja
aam
mov
push
mov
hlt
push
lahf
fnstsw
aaa
mull
ljmp
icebp
pop
inc
add
push
cmp
pusha
sahf
push
dec
jmp
test
mov
jge
ficoms
push
adc
pusha
out
mov
xchg
pusha
movsl
es
aad
push
cmp
pusha
jmp
pop
and
push
in
je
sub
arpl
sarb
adc
insl
popf
xor
outsb
inc
and
pop
mov
stc
ret
nop
cwtl
lahf
sub
mov
sbb
lret
adc
or
adc
inc
mov
add
xchg
xchg
stos
lret
push
dec
aam
pop
xchg
adc
or
push
adc
loopne
sbb
dec
pusha
iret
scas
mov
lock
jle
inc
inc
mov
rorb
popa
cli
lahf
lock
clc
pusha
jb
out
bound
ret
add
rcr
push
jnp
xchg
push
pusha
pushf
mov
in
popa
jp
push
aam
icebp
inc
jl
test
fwait
adc
loope
mov
push
lcall
stc
out
jle
lods
cmp
mov
je
je
lcall
in
bound
mov
in
test
xchg
add
lea
xchg
cmp
loopne
fmuls
and
cld
test
insb
aas
inc
js
arpl
movsl
pop
sbb
outsl
fs
gs
pop
push
int
push
and
pusha
jge
lahf
mov
jl
sub
je
mov
or
pusha
aad
jae
fists
popf
push
inc
int3
lret
sub
fisttpl
push
jecxz
mov
emms
lret
mov
and
pop
call
push
push
and
jno
mov
pusha
cmp
in
lods
mov
mov
mov
ret
mov
cld
punpcklbw
push
mov
cmp
je
push
mov
pop
mull
xor
dec
mov
push
andb
dec
je
insb
and
mov
inc
pop
mov
das
mov
xchg
jnp
jns
pop
jb
xchg
mov
mov
bound
xchg
xchg
mov
loop
push
xor
mov
jbe
fnstenv
cmpsl
outsb
nop
insb
push
push
pop
loope
inc
mov
add
push
nop
cmp
inc
mov
leave
mov
cmp
in
andb
insb
and
pop
repz
div
movsl
insl
stc
loopne
and
aaa
mov
sahf
imul
enter
cmp
stc
fnsave
dec
dec
pop
in
repz
in
add
jmp
ffreep
pusha
cmpb
cld
pusha
sbb
pusha
insb
fucomip
aam
add
jae
insl
mov
pop
pusha
popa
loop
out
mov
ljmp
jl
pop
add
xchg
cmp
mov
cmp
js
pusha
clc
cmp
aam
pusha
or
mov
int3
pusha
add
jge
pushf
cmp
add
mov
ljmp
out
push
stc
cmp
jnp
loope
call
push
mov
insl
xchg
pusha
in
push
imul
movsl
xchg
insl
add
loopne
mov
dec
imull
mov
sbb
pop
js
andl
or
cmpsb
push
stos
dec
hlt
mov
pop
pop
mulb
loope
cmpsl
inc
push
mov
sub
loopne
in
adc
pusha
ret
sbb
pop
repz
push
aad
roll
push
cmc
mov
repnz
xchg
mov
out
jo
xor
inc
pusha
mov
into
add
ficoms
add
lea
rcl
xchg
pusha
in
pop
and
inc
out
outsl
test
or
je
jno
lods
mov
pop
sbb
sbb
aaa
addl
add
inc
dec
daa
mov
loopne
stc
xchg
sbb
sub
out
jo
mov
lahf
push
xchg
pop
xor
stos
add
mov
cli
pusha
imul
push
mov
add
and
repz
movsb
insb
pusha
dec
sbbl
cld
pusha
mov
shlb
pusha
ss
pop
mov
or
push
cmp
dec
loopne
pop
fsubrs
in
jo
and
loopne
push
pusha
add
inc
adc
mov
pop
mov
js
bound
es
or
adc
xor
xor
rolb
pusha
xor
fiaddl
mov
imul
add
and
push
in
mov
mov
mov
pop
repnz
and
sbb
sub
popa
xlat
jecxz
out
mull
add
sbb
push
adc
push
jo
pop
jmp
cli
jno
and
mov
ret
sub
icebp
mov
rsqrtps
divb
jno
push
xor
cmp
xlat
pop
pop
xor
rol
mov
jo
nop
pop
pop
push
arpl
or
ljmp
mov
jae
xorl
mov
inc
mov
sahf
out
shll
repnz
mov
test
push
mov
inc
jg
pop
mov
and
ss
pushl
outsl
je
add
sub
cmp
xchg
sti
sub
mov
mov
add
mov
mov
inc
mov
sbb
sub
lcall
out
outsl
cltd
inc
mov
pusha
std
pop
push
mulb
rcrb
cltd
movsb
lcall
jecxz
xchg
pusha
xchg
lds
push
sti
pop
in
lahf
or
pop
mov
cli
xor
fcoml
fcomps
popf
dec
outsl
sahf
pusha
jno
and
pop
mov
or
or
insl
dec
push
jae
shlb
sbb
inc
aam
jmp
pop
ror
test
lock
pop
mov
lods
imul
sbbl
push
push
sbb
lea
xchg
inc
pusha
dec
mov
add
cwtl
popa
lret
pop
mov
rcll
popa
dec
mov
push
fwait
fs
inc
xchg
ss
pop
sub
jne
loopne
repz
jo
je
rcl
mov
adc
not
test
daa
movsb
pop
mov
cmp
dec
fs
jns
or
sbb
out
test
jle
adc
test
imul
mov
rclb
xchg
jp
arpl
adc
and
xlat
cmp
pop
mov
add
mov
cwtl
xor
pusha
fsubrl
aaa
imul
push
add
dec
pusha
ja
jge
out
dec
repnz
mov
xchg
das
or
push
pop
pop
es
sbb
cmovno
aad
sub
pusha
and
mov
insb
scas
mov
loopne
stc
in
fisubrl
jbe
xchg
pop
cmp
ffreep
xor
pusha
sub
je
in
push
pusha
cmpsb
movsb
in
insb
mov
cmc
leave
xor
add
mov
std
lds
nop
mov
repz
xchg
dec
fcoms
xchg
popa
shll
add
out
cld
inc
or
cmpsb
xor
jp
sub
loopne
push
ja
shl
dec
mov
loope
fwait
pusha
add
mov
stc
negl
pop
push
and
xchg
and
jp
push
movmskps
cwtl
sub
ja
xchg
dec
mov
aas
je
stos
outsb
push
xchg
pusha
xchg
inc
subb
das
pusha
leave
lret
cld
mov
fdivl
imul
mov
pop
sbb
rcll
adc
popa
test
jge
aad
fiadds
int3
test
out
cmp
test
mov
sbb
xchg
mov
xchg
loopne
jmp
push
pop
pushf
int3
jle
dec
add
pop
mov
daa
jecxz
inc
add
push
xchg
lahf
ljmp
push
aas
movsl
adc
mov
dec
inc
inc
mov
out
or
cs
test
ja
pusha
xor
movsb
cmp
jo
pusha
inc
jnp
imul
insl
push
adc
loopne
ret
jbe
pusha
cmpsl
jnp
jns
lock
xor
repz
adc
or
test
test
sahf
movsl
rorl
nop
push
popa
subb
push
add
test
testb
mov
insl
mov
mov
mov
pusha
sbb
xchg
pop
aad
ficompl
pop
sbb
fwait
dec
loopne
out
lcall
pop
push
pop
cmp
test
shlb
pop
orb
and
dec
in
jb
mov
sbb
test
push
dec
mov
or
cmp
stc
mov
xor
xchg
mov
mov
sti
and
cmpsl
cmp
cltd
ret
pop
cmc
fisubs
adcb
jg
add
dec
scas
jbe
add
xlat
mov
rolb
addr16
loopne
enter
hlt
lahf
nop
scas
in
shll
push
xchg
sbbl
fidivs
mov
mov
jle
cwtl
jg
lret
push
xchg
data16
js
ret
fnstcw
jle
jp
jle
das
aaa
lods
arpl
test
arpl
sub
dec
testl
sbb
cmp
push
dec
mov
add
xchg
in
pusha
cmp
xchg
insb
orl
data16
rcrb
sbb
pusha
adcb
insl
notl
fbld
into
xchg
movsl
imul
nop
icebp
mov
pusha
flds
mov
pusha
loopne
push
adc
push
js
pusha
pop
rcrb
xchg
xor
cwtl
pusha
lods
or
loop
mov
dec
ljmp
fdivrl
add
rcl
mov
push
popa
cmc
jnp
test
sbb
fnstcw
mov
pop
push
mov
xchg
les
rcrb
push
push
popa
adc
jnp
jmpw
cmp
sahf
inc
fwait
sar
cmp
sub
dec
das
ror
xchg
pusha
lods
sbb
lret
sahf
sub
or
outsb
pusha
xchg
dec
jecxz
repnz
pop
out
pusha
xor
popf
lret
ja
pusha
mov
testb
in
or
xchg
rclb
xor
jnp
pushf
mov
or
add
push
nop
imul
xchg
pop
es
lret
pop
test
outsb
xor
inc
outsl
in
insb
push
xchg
bound
jo
sub
push
or
faddl
nop
mov
xchg
lods
nop
stos
add
enter
mov
mov
pop
add
orb
hlt
push
pop
dec
mov
mov
adcb
mov
aaa
sbb
pop
stc
push
or
dec
cs
loopne
add
insl
pusha
sub
sbb
push
ret
in
frstor
and
and
leave
add
add
jbe
cmp
sbb
rolb
or
pushf
xchg
movsb
and
pusha
adc
sbb
adc
jnp
pusha
xor
dec
shll
xor
inc
sub
enter
rcrb
and
repnz
rorl
pop
in
sbb
cmp
shlb
push
mov
ret
sub
lods
adc
xor
ja
in
popf
xchg
xchg
shlb
jno
int
out
adc
scas
leave
adc
sbb
or
xchg
cmpsl
lock
push
inc
mov
xchg
sub
pop
mov
pop
or
mov
dec
rcrb
and
mov
mov
insl
pusha
push
cvtps2pi
or
insb
mov
inc
lds
mov
gs
jl
es
push
fwait
pushf
adc
cwtl
xchg
testb
ja
and
dec
scas
or
shrb
gs
pop
sbb
fs
push
push
xchg
pop
in
dec
or
cmp
pop
push
test
mov
mov
mov
and
pusha
shrb
jmp
scas
insl
xchg
inc
pop
loopne
jmp
or
jns
mov
fisubrs
lods
inc
fsubs
xor
jle
movsb
sar
test
xor
add
adcb
outsl
cmc
pop
and
enter
pop
outsb
push
imul
pusha
cltd
jle
xchg
rorl
out
out
enter
nop
sbb
sub
out
pusha
mul
mov
data16
stos
ja
call
divb
inc
scas
fsubrs
xor
leave
and
js
imul
xchg
push
jo
ljmp
mov
pusha
sti
xchg
or
mov
jbe
pusha
jge
dec
clc
add
dec
xchg
lock
or
loope
jg
adcl
jno
faddp
aas
outsb
sar
pusha
pushf
call
sub
pop
fldcw
jle
and
lods
cmp
push
jecxz
or
enter
pusha
mov
push
shrb
or
orb
xor
out
and
mov
enter
std
loopne
cmc
mov
sub
pushl
cmp
push
lea
ja
pusha
call
call
inc
cmc
mov
clc
xchg
sar
rcl
mov
rcr
mov
test
stc
push
clc
ror
rcl
sub
mov
stc
sub
call
push
push
lea
je
push
movb
cmp
pushf
lea
je
clc
push
pushf
cmp
call
push
movl
push
push
pushf
push
lea
jmp
je
fwait
xor
repz
xchg
jns
lea
mov
repnz
dec
pop
imul
or
pop
add
sub
fistpl
popa
xchg
inc
mov
pop
lea
pushf
adc
xlat
and
gs
mov
mov
fucom
fldl
sub
or
dec
jne
iret
rcr
mov
dec
aaa
mov
ds
mov
bnd
movzwl
bsr
jmp
pushf
call
pusha
movb
test
repnz
pusha
push
pushf
lea
jne
pusha
cwtl
pusha
bswap
movb
jmp
xchg
pusha
pusha
movl
jmp
sbb
aam
shl
mov
stc
bt
pusha
pusha
shl
pushl
call
ror
pusha
sub
clc
cmc
cmc
rol
jmp
lea
jmp
sbb
inc
popa
sub
cwtl
mov
xor
je
nop
adc
popa
rorb
lods
push
push
jge
jne
jle
dec
sub
adc
or
loopne
jne
mov
xor
shrb
or
pop
fcoms
sub
fwait
ret
sub
lahf
into
fisttps
movl
jmp
jmp
pusha
jmp
xchg
daa
and
jl
and
xchg
adc
int
and
xchg
mov
rorl
outsl
mov
insb
lret
nop
cmp
xchg
dec
sub
inc
push
cmp
loope
stos
in
loopne
xlat
mov
leave
jge
dec
stc
xchg
arpl
ja
out
pusha
lahf
add
or
fmul
movsb
in
jne
sbbl
repz
jl
cmp
jns
lahf
mov
mov
xor
decb
cli
lcall
sub
int
scas
mov
dec
xchg
push
out
push
sbb
sub
xor
jp
loopne
inc
lcall
pop
aaa
push
and
push
sbb
movsb
mov
ja
cmp
xchg
sub
cltd
int3
ljmp
xor
outsl
xlat
mov
ds
pusha
daa
mov
lret
test
xchg
daa
push
dec
dec
pusha
pop
xchg
adcb
pop
or
pop
pushf
or
std
or
sti
outsl
xchg
iret
aad
sub
cmc
pushl
popl
cmp
cmp
push
movb
pushl
mov
lea
ja
clc
sub
stc
sbb
sub
bts
or
add
shl
neg
mov
shr
mov
pusha
stc
jmp
pushf
lea
je
test
bt
test
add
cmp
cmp
pusha
pushf
call
pusha
movl
push
jmp
imul
push
clc
add
pushl
lea
jmp
xchg
rep
jo
cmc
in
aas
sub
push
sub
pop
sub
xchg
scas
sbb
add
mov
jmp
lea
jo
stc
mov
jg
and
and
dec
mov
cmp
sub
add
add
inc
pop
xlat
fcoms
dec
mov
faddl
std
pop
dec
mov
lret
xor
mov
in
mov
iret
shrb
adc
cli
or
push
movl
mov
in
sub
inc
cmp
xchg
push
std
mov
jmp
ss
add
jl
inc
xor
inc
outsl
mov
pushf
aam
sub
idivb
les
test
negb
shr
rolb
sub
pushf
addr16
cltd
out
test
lods
dec
outsb
push
mov
in
orb
mov
repz
mov
inc
sub
inc
inc
mov
pop
ficomps
push
xor
lahf
inc
sub
inc
jno
fmull
shlb
jo
js
into
leave
js
inc
sub
subb
xlat
jle
jle
nop
popa
cwtl
mov
mov
pop
xor
mov
lahf
mov
add
dec
mov
adc
pushf
lods
xchg
insl
inc
mov
imul
adc
pop
rcl
shlb
add
in
add
outsb
cmp
inc
xor
pop
jae
scas
cmpsl
ljmp
add
enter
mov
add
inc
add
mov
fadds
sub
lds
adc
sub
inc
cs
dec
ficoms
out
adc
or
push
pushf
movsl
aaa
inc
push
push
sub
xor
pop
xchg
les
repnz
clc
je
in
cmp
and
pushf
cmpsl
call
call
bt
clc
sub
cmc
push
pushl
popl
cmp
pusha
movb
clc
cmp
jmp
push
js
push
pushf
lea
jmp
repnz
lea
jp
pusha
pushf
movw
lea
jne
sar
mov
cmc
bsf
mov
neg
rol
sub
sub
shld
push
lea
pushf
stc
bt
sub
push
pushl
popl
cmc
push
bt
pushf
cmp
jmp
pushf
call
mov
lea
jne
cmp
sar
bt
mov
cmc
cmp
call
lea
jne
rol
sar
dec
shld
mov
test
cmc
movsbw
clc
sub
movzbw
sar
shl
mov
mov
clc
call
movl
pusha
jmp
pushf
lea
je
push
pusha
pusha
lea
jmp
lea
je
call
cmp
movzwl
lea
xor
pusha
rcr
mov
pushf
add
bt
cmc
pusha
mov
test
test
pushf
movw
lea
je
cmc
call
lea
je
inc
jmp
push
daa
sub
or
fs
mov
loopne
stos
fldl
ficoms
push
add
cmp
repz
fisttps
mov
mov
or
mov
dec
push
lcall
mov
push
push
iret
fucomi
clc
mov
pop
mov
loopne
iret
or
xchg
dec
cld
mov
outsb
push
mov
sbb
sub
in
and
lock
aas
xchg
mov
test
movsbl
mov
push
push
jmp
lea
jne
movzbl
lahf
lea
not
movb
movsbl
push
not
pusha
pusha
lea
pushf
movb
jmp
rep
jmp
pusha
lea
jae
bswap
mov
bsf
rcl
mov
not
lea
movsbl
ror
mov
stc
clc
xor
pushf
bt
repnz
pusha
push
jmp
pushf
jmp
stc
jmp
stc
stc
pusha
or
pushf
pushl
pushf
lea
jne
rol
mov
jmp
pop
push
pushl
pushl
ret
pop
pushf
call
pushl
lea
je
bt
add
pusha
lea
jmp
movb
xchg
mov
pushl
popl
pushf
pop
not
bswap
mov
pusha
movsbw
movl
lea
lea
lea
push
movl
jmp
test
xor
jl
pop
pop
lcall
daa
push
and
adc
cmp
fwait
dec
loop
and
out
je
cwtl
cltd
lcall
cwtl
push
mov
ss
push
dec
cltd
in
ss
pop
mov
sbb
dec
xor
sub
addl
ja
cmp
cmpsb
vcvttps2dq
inc
aaa
in
iret
and
sti
hlt
cmp
mov
sbb
or
aam
cmpb
mov
push
lahf
cli
jmp
fcoml
and
scas
mov
imul
xor
lea
jne
bt
lea
shrd
xor
cwtl
aaa
btc
push
mov
ror
add
test
sub
inc
mov
stc
clc
cmp
movw
test
jmp
pushf
pushl
repnz
pusha
jmp
shl
bt
mov
clc
bt
cmpb
pusha
pushf
call
xchg
pop
sahf
sub
xchg
int3
add
fs
push
fs
enter
inc
cltd
sbb
push
add
in
or
aam
jge
insb
mov
aas
mov
lretw
mov
cltd
cs
mov
xchg
js
mov
mov
daa
jb
mov
mov
add
adc
out
push
lods
mov
iret
lods
ret
sub
ret
mov
subb
sbb
xor
push
lret
pop
jle
adc
scas
and
mov
fs
jle
loope
es
fimull
ficomps
sbb
cmp
add
push
fdivs
sahf
loopne
sbb
ret
movsb
in
cs
sbb
lds
in
ds
mov
das
in
push
setb
jp
shlb
sti
cs
sbb
bnd
mov
lea
jne
test
xadd
mov
jmp
xor
mov
movb
jmp
lea
call
pop
lea
movsbl
movzbw
mov
pushl
lea
ja
pushf
lea
jle
call
add
add
add
dec
gs
popa
addr16
outsl
js
add
out
jmp
inc
xor
es
xchg
popa
push
jnp
aad
mov
jo
sbb
xchg
inc
scas
aad
ds
pop
hlt
in
xor
pop
push
call
out
sbb
pop
ja
adc
and
and
pop
fdivrs
dec
mov
mov
mov
test
mov
xor
aas
xlat
test
cmpsb
push
fcmovnu
push
cltd
xchg
mov
popf
adc
int
ds
or
or
stc
pushl
je
inc
xchg
std
ljmp
mov
xor
mov
xchg
cmpsb
imul
movsl
stc
add
fstpt
sbb
inc
or
jmp
shlb
pop
movb
pusha
mov
movzbw
movsbw
mov
lea
pushf
pushl
movb
movl
jmp
jmp
movl
mov
pushf
movb
movl
movw
pushf
pushf
lea
jmp
btr
push
not
push
movzbw
lea
sbb
pusha
mov
lea
btr
xchg
rcl
pop
add
mov
test
dec
call
mov
movb
movl
pusha
pusha
movl
mov
lea
jmp
add
clc
pushf
test
call
lea
jne
pusha
call
repnz
and
jmp
inc
cmp
mov
pop
xor
mov
jno
add
add
and
and
or
outsl
adc
mov
pushf
mov
dec
addr16
cltd
mov
add
push
mov
lds
add
cmp
cs
ja
and
test
test
or
lods
add
test
in
cmp
std
push
inc
cmpsl
push
arpl
out
in
dec
ss
popf
add
lds
gs
or
dec
inc
mov
inc
and
adc
xchg
decl
mov
add
add
pushl
pushf
pushf
lea
jmp
push
inc
jle
jecxz,pt
dec
xor
mov
jbe
pushf
mov
insw
add
leave
mov
push
and
ret
adc
scas
sbb
aam
lahf
mov
nop
out
jne
or
stc
bound
lods
lea
xchg
shl
pop
sub
jle
inc
mov
push
filds
push
test
jecxz
cmp
xlat
movsl
xor
pop
outsb
xchg
and
jnp
jle
push
or
push
mov
jl
xor
test
std
xchg
imul
xor
or
push
or
mov
bswap
jmp
je
pushf
pusha
push
mov
lea
jmp
xchg
and
xor
jb
push
jg
xchg
xchg
cwtl
jle
inc
push
jg
mov
or
fcmovne
pop
aas
andb
data16
sbb
stos
sub
jne
clc
or
pop
xchg
jmp
test
xchg
scas
mov
mov
int
mull
aam
lret
cmp
movsl
add
pop
or
dec
fildl
psraw
aas
cld
sub
jmp
movw
cmp
movb
call
mov
inc
leave
adc
jg
mov
xchg
mov
sahf
lcall
cltd
pop
inc
pop
lea
insl
add
cld
xorb
lret
es
lods
sub
mov
dec
movl
lret
std
xchg
dec
call
sbb
cmp
dec
insl
jg
mov
pop
repz
sbb
pop
popf
lds
mov
inc
and
push
dec
mov
scas
xchg
fcmovne
mov
mov
cld
cmp
cmp
outsb
pop
in
fdivp
cmp
sub
movsb
imul
idiv
scas
mov
and
cwtl
fnstcw
add
push
mov
leave
jns
fisttps
pop
arpl
dec
sub
aad
push
in
mov
pop
jno
sbb
bound
mov
adc
mov
cmp
sub
lea
mov
lcall
lcall
xchg
mov
cmp
std
xchg
pop
stc
add
fnstcw
insl
call
add
cmp
ret
hlt
call
add
arpl
and
test
add
mov
mov
movzbw
bswap
mov
push
pushf
pushf
pushf
lea
jmp
or
pop
and
and
and
out
adc
outsl
inc
outsl
sarb
or
jle
inc
sbb
pop
div
and
pop
fwait
cwtl
loopne
pop
leave
mov
ror
inc
lods
movsl
shlb
movsb
pop
push
cmp
mov
push
lret
pop
add
jmp
pushf
pusha
lea
jne
shrd
cmp
sub
or
test
bsr
mov
shl
cmp
rcr
add
shr
add
sbb
cmp
mov
pushf
test
pushf
pusha
lea
je
cmc
bt
call
mov
inc
test
es
mov
test
jle
jge
jecxz
sbb
test
adc
insl
pop
sbbl
pop
lahf
add
mov
xchg
fistpll
clc
pop
pop
lock
cmpsl
cmpsb
fwait
cwtl
add
jno
inc
fdivr
sub
subb
popa
in
sbb
mov
push
lock
dec
sbb
bound
iret
in
mov
mov
adc
inc
mov
pop
inc
aad
dec
fs
mov
jp
xor
inc
in
jge
jmp
add
xor
mov
xor
push
loopne
in
cmp
lods
pushf
add
push
xchg
cmp
mov
fsubrl
incl
dec
movsb
ret
ljmp
ret
or
in
mov
mov
popa
enter
mov
sti
cmpsl
pop
fiaddl
jl
sbb
pop
sbb
cltd
xorb
dec
fidivrs
cltd
cmc
scas
pcmpeqd
push
pusha
pushl
pushf
movl
pushf
movb
movl
movb
lea
jmp
push
call
stc
add
push
cmp
pushf
lea
jb
jne
test
test
cmp
pusha
call
lea
je
pusha
pusha
pushf
sub
cmp
bt
call
pushl
mov
lea
jne
pusha
mov
pushf
movb
mov
call
cmpb
call
lea
jne
sar
push
shl
mov
stc
shld
sub
pushf
neg
lea
bt
push
movb
sub
bt
pushf
call
imul
gs
xor
cs
insb
add
add
cmc
test
sub
pusha
bt
rol
test
clc
mov
mov
sub
cmp
call
call
inc
adc
push
jl
adcl
mov
ja
cmpsl
mov
sbb
and
sbb
cmpsl
hlt
ds
repnz
jne
ret
cli
inc
inc
mov
aaa
mov
cwtl
pop
cli
fiadds
and
push
xorl
mov
out
lahf
mov
enter
push
insb
loop
data16
clc
insl
imul
lock
push
pop
pop
int3
addr16
xchg
mov
mov
adc
adcb
mov
xor
stos
test
je
aam
pop
mov
cmc
jb
lock
push
push
jl
je
bound
repnz
xchg
es
pop
gs
add
loope
movsl
ljmp
out
loope
push
inc
inc
sub
les
and
aad
push
add
mov
jge
out
ljmp
jb
or
mov
ret
mov
cmp
movsl
add
cmp
add
call
clc
sti
out
lea
jne
bts
aam
bswap
not
sub
xor
movzbw
add
mov
mov
cmc
cmp
rol
add
add
sub
mov
cmc
test
jmp
pusha
mov
lea
jne
lea
jmp
jmp
add
push
add
addb
add
rorb
add
fistps
ljmp
add
loope
add
add
add
aaa
xchg
inc
lea
je
jmp
add
nop
sbb
int3
or
movsb
add
int3
mov
pop
cmpsb
push
or
nop
jmp
pop
ret
cltd
and
add
fdiv
pop
cwtl
xor
push
sbb
in
pop
mov
loop
outsl
jmp
pusha
movl
pushl
lea
jmp
push
lock
std
std
adcb
add
dec
mov
ret
dec
sub
pushf
mov
pop
sub
xor
and
lea
pop
in
enter
and
aam
push
int3
add
out
aad
adc
test
in
xchg
icebp
mov
and
pop
cmpsl
and
imulb
in
xchg
push
data16
aam
dec
ficomps
mov
dec
cmpsb
and
or
lods
adc
dec
adc
push
call
not
clc
add
pushf
pusha
ror
clc
call
or
mov
hlt
xor
mov
mov
sbb
jb
mov
xchg
nop
sub
push
gs
iret
into
sub
add
mov
ja
fidivs
add
addr16
inc
inc
cmpsb
cmp
add
cli
mov
mov
adc
mov
test
cmp
mov
stos
addr16
and
push
movsb
add
cli
ljmp
cmp
pop
jne
jge
cmpsl
add
mov
outsb
test
xchg
sbb
dec
inc
cmpsb
out
mov
lahf
je
test
ljmp
mov
test
jmp
movl
pushl
lea
jmp
adc
pushf
pushf
pusha
pushf
lea
jae
call
pushf
pusha
cmp
push
push
movl
jmp
jmp
inc
xchg
jmp
xchg
scas
call
jle
ror
mov
roll
stos
jg
cmpsb
pop
insl
add
les
nop
aam
mov
stos
xchg
jecxz
aas
xorl
pop
mov
pop
ficoml
inc
mov
aam
ret
add
stos
cltd
sbb
lret
inc
cmp
aad
stos
pop
es
shlb
xchg
lret
lock
dec
repnz
fidivs
sahf
mov
push
lods
lahf
push
out
lcall
xchg
into
sbb
jno
xlat
movzwl
and
sbb
bswap
bswap
mov
mov
add
pusha
movb
call
movsl
sub
sub
dec
test
fcmovnb
xchg
shrl
imul
in
mov
pop
sbb
cmp
pop
sbb
nop
add
negl
movsl
cmpsb
cld
stc
call
xorl
call
pop
or
inc
xor
mov
jns
scas
jmp
pushf
lea
jne
call
sbb
add
cltd
nop
lods
ljmp
jg
aad
aas
inc
arpl
popf
mov
dec
cmp
iret
mov
lahf
push
lcall
add
jb
outsb
fisttpl
adc
inc
mov
xchg
sbb
inc
xchg
dec
outsl
popa
fs
imul
add
clc
xor
bt
jmp
or
pushl
lea
je
lea
call
stc
stc
cmp
pushf
call
jmp
push
lea
je
or
mov
rcl
mov
add
sbb
shl
mov
push
clc
bt
test
push
pushf
pusha
lea
je
not
cmp
add
ror
mov
pushf
add
pusha
mov
btr
call
push
lea
ja
pushf
cmc
pushf
pusha
add
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
push
negl
jl
and
aaa
aam
in
faddl
mov
pop
pop
daa
jle
or
stos
fstp
xor
cld
filds
cmp
arpl
mov
pop
push
jecxz
movups
leave
lret
pxor
jo
and
movsl
cmp
mov
push
lret
push
shlb
lds
in
inc
pop
jl
jno
in
and
lock
ja
imul
out
nop
pusha
push
dec
mov
and
sahf
popf
stc
clc
out
push
mov
clc
aaa
insl
pop
mov
and
jp
sahf
pop
punpcklwd
cmp
sbb
ss
jnp
aas
je
mov
inc
sbbb
pop
cld
in
mov
int3
jecxz
jg
fwait
cld
ljmp
inc
add
stc
jmp
std
test
jge
imul
stos
lahf
and
sbb
push
out
divl
or
imul
mov
sub
adc
loop
or
add
enter
pop
cmpsb
pop
pop
add
xor
inc
jecxz
fsubs
mov
lret
das
mov
jns
arpl
inc
xor
xor
mov
sbb
aad
push
inc
aad
cltd
lcall
in
xchg
lret
jnp
adc
push
test
add
mov
jmp
fcomip
push
inc
cmp
lcall
test
push
adc
mov
add
test
inc
stos
jp
lock
jle
lods
pop
jl
lcall
adc
pop
out
into
icebp
cmp
push
mov
pop
iret
mov
inc
mov
int3
mov
sub
xor
movl
jbe
div
pop
push
stc
scas
xor
xchg
push
add
xchg
xor
flds
fiaddl
jl
out
ffreep
repz
int
cmpl
adc
push
call
dec
adc
push
jl
pop
pushf
rcrl
pop
inc
add
shll
xchg
clc
xchg
pop
adc
jge
pop
insl
add
or
xor
subb
jmp
pop
ret
dec
lock
sub
shrb
add
bound
xchg
cld
filds
std
bound
xor
xchg
je
out
dec
mov
mov
insb
add
add
xor
push
call
hlt
in
sbbl
dec
pop
cs
add
push
mov
dec
mov
sbb
push
aaa
test
call
push
lcall
lods
loopne
sbb
xchg
mov
ja
gs
xchg
icebp
or
aas
or
mov
hlt
in
and
popf
pop
push
push
mov
mov
loop
cmc
add
xor
test
repz
nop
mov
aas
adc
cltd
jne
push
pop
mov
fisubs
movsl
mov
cmp
movsl
and
enter
push
dec
push
jl
iret
inc
jne
test
inc
addl
adc
aam
pop
mov
hlt
mov
add
pop
hlt
xor
dec
mov
mov
jl
aas
mov
mov
dec
sub
xchg
push
mov
mov
pusha
cmp
sub
adc
inc
pushf
jbe
adc
cmc
testb
popa
mov
repz
in
int3
dec
loope
outsl
adc
cli
aaa
adc
sbb
adc
pop
mov
cli
fisttpll
test
xor
and
jb
jb
clc
cmp
call
pushf
lea
call
push
lea
jne
lahf
mov
pusha
pushf
lea
jmp
sub
inc
pop
in
pop
daa
pop
mov
ret
mov
fldl
pop
imul
add
mov
adc
push
push
push
mov
les
lds
adc
clc
mov
dec
nop
fdivrl
loope
and
mov
shrb
dec
shlb
mov
mov
push
lods
bound
cwtl
and
add
push
in
call
push
and
push
pop
popa
clc
mov
hlt
add
or
mov
xchg
arpl
xchg
in
ficoms
jl
imul
sub
rclb
call
inc
test
xor
rcr
repz
decl
mov
xchg
or
jne
cs
orb
inc
movsl
cmp
cmp
sub
mov
xchg
das
or
insb
sarl
push
test
popf
xchg
sar
add
std
ljmp
fdivrs
adc
xor
je
sbb
out
jbe
stos
or
and
enter
jmp
mov
pushf
pushl
ret
pushl
pushl
xchg
mov
pushf
pushl
popl
lea
call
fwait
pop
sahf
adc
add
mov
into
mov
push
cmp
adc
push
sbb
cmpsb
cmp
repnz
frstor
lahf
jne
lods
mov
cmp
sbb
test
xchg
pop
int3
popf
stos
xchg
into
mov
adc
cmp
add
and
scas
add
inc
jle
jne
mov
adc
int
adc
adc
and
mov
arpl
pop
les
je
xchg
movsb
jmp
mov
push
and
mov
and
mov
pop
push
iret
mov
in
adc
ja
mov
insl
xchg
fildl
sub
jecxz
mov
cmp
jnp
popa
test
pop
pop
mov
dec
je
pop
clc
cmp
aam
fs
inc
je
in
sbb
pop
sub
dec
mov
jl
xchg
in
out
imul
fcompl
adc
sahf
int
adc
gs
loope
shrl
or
xor
stc
dec
or
cmpb
push
mov
xchg
mov
loope
lock
aas
shl
loop
hlt
fcmove
adc
and
sub
ret
arpl
inc
fdivs
inc
dec
adc
mov
mov
adc
jg
and
sub
gs
add
mov
test
test
mov
movl
call
pop
pop
notb
jl
jns
push
or
add
insl
cmp
pop
pop
inc
test
sub
mov
cltd
inc
xor
adc
sti
mov
xor
mov
sub
mov
cmp
daa
jnp
inc
es
mov
shll
adc
pop
ja
loop
call
and
stc
adc
int
popf
ja
sbb
xchg
sub
mov
mov
and
sahf
jecxz
lcall
cld
fcmovnbe
xor
popf
bound
into
popa
lcall
mov
pop
add
cli
push
inc
scas
push
jp
lock
cmpsl
test
pushf
call
in
jns
jl
into
es
add
and
scas
xor
je
jo
push
jg
jg
push
lahf
enter
xor
pop
jle
rclb
lock
inc
stos
mov
cmpsl
shlb
mov
xchg
addr16
or
add
loopne
ret
push
pusha
mov
jmp
popf
cpuid
nop
jno
pushf
mov
pusha
movl
jmp
push
jmp
movl
pushf
push
jmp
jns
and
jl
dec
xor
cmp
dec
imul
pop
sub
cmpsl
bnd
push
sbb
out
xchg
push
add
iret
negl
icebp
fwait
xchg
lea
scas
cmpsl
sbb
xchg
testl
inc
sbb
and
jne
neg
xor
mov
cmp
pushf
bt
add
cmp
cmp
cmp
call
cli
mov
or
inc
lahf
mov
divl
outsl
cmp
dec
pop
mov
mov
cmpsl
cltd
mov
push
sub
je
outsl
adc
push
pop
jo
or
adc
mov
dec
mov
xor
sub
add
out
sub
test
js
ja
add
int
es
or
mov
or
aad
inc
push
mov
mov
mov
ds
jecxz
push
mov
add
push
andl
scas
xchg
aaa
js
sahf
loopne
adc
cwtl
add
or
jno
inc
push
jne
dec
nop
push
dec
mov
pop
jne
ret
fwait
mov
cltd
call
ja
jo
mov
rcr
and
mov
lods
add
or
cmp
push
mov
pop
nop
mov
pushf
dec
fsub
ret
ljmp
sbb
pop
dec
push
inc
orl
arpl
inc
xor
mov
mov
and
fisubrs
pop
mov
pop
pusha
jg
push
fs
in
repz
std
mov
stos
dec
shl
xor
in
push
mov
cmp
push
push
sbb
movb
pop
push
sub
repz
cmpsb
lock
cmp
cmp
jg
jo
push
paddsw
jns
cmp
loope
fisttpl
push
dec
je
js
push
push
and
jecxz
sbb
sub
repz
jnp
fistps
push
inc
imul
outsl
insb
test
jmp
gs
test
cwtl
cs
or
push
gs
aam
jle
dec
and
sub
jge
and
xorb
mov
adc
pmaddwd
fisttpl
mov
mov
fimuls
sub
in
scas
lret
cwtl
aad
loope
out
mul
call
pushf
jmp
shrd
sub
cmp
mov
mov
cmc
pushf
cmp
sub
clc
test
push
pushl
popl
bt
pushf
pusha
cmp
pushf
pushl
mov
pushf
lea
ja
cmc
xor
xor
sub
pushf
dec
lea
and
add
add
btr
mov
not
pushf
cmp
and
mov
sub
jg
bt
test
pusha
repnz
jmp
clc
rol
push
call
pushf
movl
call
cmc
push
or
movb
lea
jne
movzbw
mov
test
pusha
or
push
call
push
mov
pusha
jmp
shlb
mov
fwait
sbb
aam
dec
mov
mov
push
leave
dec
or
adc
xchg
mov
sub
nopl
adc
cmp
mov
adc
jle
loopne
cs
addr16
mov
pop
ljmp
pop
push
ficoms
inc
stc
dec
sub
test
adc
cmp
insb
frstor
jne
lods
mov
mull
xchg
mul
or
xchg
mov
mov
jno
scas
dec
lods
pop
loopne
movsbl
mov
movb
pushf
pushl
pop
movzbw
mov
pusha
movzbw
lea
movw
movw
movb
mov
movl
pusha
mov
pushf
mov
pushl
ret
bt
test
call
into
cwtl
gs
inc
loop
pop
mov
fdivp
cmc
in
pusha
pop
push
mov
daa
xchg
mov
jmp
repz
add
sbb
add
enter
xor
pop
jbe
ret
jl
push
pop
and
ror
dec
dec
jne
pop
jno
xchg
xchg
in
xorl
lret
js
add
setae
sub
inc
dec
movzbw
bswap
sub
add
call
movb
movl
call
lea
call
pushf
call
pushf
not
mov
mov
jmp
xor
movzbw
jmp
subb
jl
mov
cmp
aaa
bound
mov
out
lock
mov
cmpsl
ror
into
int
pop
iret
lock
dec
xor
jle
rcrl
jno
fwait
mov
js
or
aas
mov
mov
or
cltd
shr
bnd
fidivrl
xor
dec
xchg
add
jl
inc
les
daa
or
push
addr16
sbb
push
sub
ss
mov
fildll
push
cmpsb
icebp
add
mov
xchg
push
push
and
xchg
sti
ficomps
lahf
push
dec
mov
jbe
jge
cmpsb
stc
bound
roll
inc
out
fs
push
and
xchg
adc
repz
fldl
adc
sbb
das
jbe
in
dec
scas
inc
test
inc
shll
pop
xchg
out
arpl
cmp
dec
mov
jl
gs
dec
adc
or
je
ror
xor
cmpsl
cmpsl
add
fcmovbe
or
inc
fcoms
cmp
stos
aas
cmp
shl
xor
test
fmull
leave
mov
xor
into
mov
fwait
cs
ror
movsb
repz
outsl
push
add
movl
push
mov
pushf
lea
jmp
sub
adc
btr
cmp
mov
cmp
test
cmp
cmpb
jmp
lea
jbe
or
ror
bsr
rol
mov
adc
xor
add
rol
xchg
shl
mov
shl
clc
sub
add
and
test
btc
bts
movl
bt
bswap
shl
pusha
mov
sub
clc
call
movw
pushf
mov
call
mov
mov
call
jl
mov
jl
nop
int3
and
adc
and
xchg
ret
or
cmp
pop
mov
dec
sub
arpl
int3
leave
rol
mov
movsl
jge
mov
je
pop
cmp
sbb
push
mov
movsb
adc
mov
cmc
shl
pushf
not
pushl
lods
stc
test
pushf
add
movl
ror
cmp
jmp
pushl
movl
jmp
cmc
mov
jmp
jne
neg
jmp
lea
not
pop
call
repnz
pusha
lea
jne
cwtl
cwtl
bswap
movb
movsbl
movsbl
pushf
mov
mov
not
bswap
lahf
lea
jmp
lea
jb
clc
push
cmp
movl
call
pushf
mov
pop
movl
pushf
lea
movb
movl
jmp
movl
pusha
movl
pushl
pushf
pushf
lea
jmp
jmp
call
enter
jl
scas
jnp
mov
fcomps
add
sbbl
sbb
xor
ja
dec
sbb
jecxz
pop
rol
aaa
addr16
lea
aaa
xlat
push
lret
in
je
movsb
sbb
or
int
jg
ret
sarb
or
and
sbb
mov
mov
movl
pushf
movl
lea
jmp
pushw
testl
daa
insb
push
movsb
lea
aam
sub
cld
xchg
mov
dec
fcomi
daa
add
mov
movsb
jmp
xor
jmp
shl
dec
cmp
test
lods
incb
rorb
rcrb
jae
aam
mov
std
sbb
mov
leave
push
insb
stos
incl
mov
imul
fistps
call
daa
or
mov
sub
mov
lret
sub
loopne
cmp
orl
push
pop
cmp
movlps
jmp
cmp
fidivrl
dec
mov
loopne
fsubp
rolb
dec
pop
add
mov
das
add
dec
mov
jmp
not
stc
cmp
sub
clc
ror
test
cmc
xor
cmp
cmp
cmp
call
pop
xor
cmpsl
jns
mov
movhlps
cmpsb
test
or
bndldx
mov
fiaddl
dec
cli
enter
cmp
fmull
ficoml
sbb
xchg
push
loop
orl
es
pop
inc
push
pop
aas
dec
shll
mov
mov
or
xor
loope
mov
mov
cmp
inc
cmp
jb
dec
fdivrl
mov
pop
mov
ror
mov
in
test
jmp
mov
and
shl
mov
clc
pusha
sub
pushl
pushf
movl
push
rep
not
call
call
pushf
movl
push
movb
pushl
popl
movb
movb
pushf
pushf
pushl
ret
pushf
rol
jmp
push
hlt
or
jl
jle,pt
pushf
inc
outsb
lea
adc
dec
adc
sbb
sub
iret
test
orl
xchg
mov
xchg
jg
adc
fildl
mov
and
adc
cmpsb
jnp
stos
in
dec
gs
jecxz
fcompp
pop
xor
jmp
sub
xchg
clc
js
or
mov
push
pop
dec
loop
adc
inc
cmpsl
inc
fwait
mov
sub
mov
adc
jl
fcmovne
out
aaa
sbb
cmp
dec
popa
pop
cmp
test
inc
jp
jecxz
jne
or
inc
scas
subl
outsl
addr16
seta
into
pop
cmc
cmp
mov
xchg
push
sub
cmp
add
adcl
add
sbbl
add
mov
rcrl
add
inc
pop
popf
fsubl
call
pop
pop
popa
mov
or
out
repnz
cmp
scas
enter
mov
js
cmp
cmp
pop
cmp
mov
fbld
repnz
pushl
pushf
jmp
lea
pushf
push
pushl
lea
jb
push
push
movb
pushf
mov
push
pushl
ret
pushf
pusha
push
pushf
lea
jmp
adcb
xchg
mov
test
cmp
jecxz
lods
jmp
iret
aas
sub
jg
push
jg
mov
mov
pop
andb
add
sarb
sub
cmc
icebp
push
inc
pushf
pop
insl
pop
adc
xorl
cli
sti
mov
dec
dec
scas
ret
rorl
xchg
stos
mov
or
mov
xor
popf
xor
jl
inc
fwait
mov
sub
cmp
and
adc
in
mov
stos
imul
lea
mov
mov
daa
cmpsb
cmp
mov
aad
sbb
pop
out
add
pop
sar
decl
shr
mov
push
add
sub
adc
sub
xchg
sub
addl
int
mov
outsb
add
ljmp
xor
push
les
dec
dec
testb
add
adc
adc
adc
mov
mov
bound
imul
inc
sbb
sbb
sub
pop
jnp
iret
adc
test
roll
lods
pop
xor
mov
add
insb
ret
fcmovbe
push
arpl
dec
lods
cmp
push
mov
inc
lods
xor
cmpsl
or
and
pushl
mov
lea
jmp
inc
sub
add
xchg
int
icebp
and
test
lods
pop
ss
xor
mov
cmp
jg
popa
test
xchg
pushf
mov
adcb
nop
mov
jne
call
push
cmpsb
mov
nop
in
jo
fistpll
mov
add
pop
cwtl
std
dec
loop
fwait
dec
aad
pop
cmp
stos
scas
sub
cmp
and
dec
pushf
in
jecxz
pop
addr16
add
pop
xchg
mov
icebp
sbb
out
dec
cmpb
std
or
rorb
or
push
lret
shl
jnp
mov
fisubl
ja
and
lods
lock
sahf
mov
inc
lret
test
xchg
aas
add
jbe
es
repz
shl
in
cltd
mov
sub
loopne
fnstenv
push
into
scas
sbb
sbb
xchg
cltd
sub
push
xor
or
jge
xchg
mov
call
adc
jae
sbb
int3
shll
pop
loope
scas
xchg
xchg
push
out
mov
dec
stos
xchg
sbb
cmc
dec
scas
addr16
in
leave
aaa
popa
cltd
les
aad
fidivs
and
mov
stc
in
cld
cld
adc
or
and
shll
pusha
mov
jg
cmp
rcll
out
adcb
aad
xchg
leave
push
inc
loopne
pop
xor
shlb
mov
cwtl
out
mov
nop
out
cmp
das
mov
mov
or
nop
adc
and
sti
pop
movsb
push
xchg
jnp,pt
mov
imull
insl
sub
jmp
ficoms
test
pushl
inc
lea
jo
mov
push
jmp
jmp
lea
jae
call
add
pushf
ror
stc
sub
jmp
inc
pop
inc
add
cmc
sbb
ss
mov
mov
inc
lcall
jecxz
push
test
xor
adc
pop
testb
je
mov
inc
fsubrp
stc
mov
div
sub
rolb
outsb
int3
scas
fcomps
lea
rcrb
fstpt
ja
or
xchg
movsl
cmp
adc
sub
jnp
mov
sbbl
in
lds
out
aam
pushf
add
mov
pop
mov
cmp
dec
mov
xor
pop
ljmp
sbb
sbb
add
push
jmp
fwait
aas
xor
pop
pop
ja
add
imul
out
or
arpl
push
jae
outsl
mov
out
in
iret
push
ja
data16
movsl
pop
and
dec
lret
lea
ja
call
push
jmp
jmp
pusha
lea
jae
test
call
pusha
push
pusha
lea
jge
push
push
call
jno
inc
jnp
aam
into
and
hlt
inc
xor
dec
cmp
imulb
and
adc
mov
sbb
push
movsl
rol
loopne
shrl
jge
sbb
fadds
push
pop
mov
fcmovb
into
movsb
add
lock
inc
idivb
adc
sbb
pop
mov
idiv
stc
test
popf
mov
pop
loop
jp
sub
movsb
and
sub
mov
addr16
lds
orb
or
push
movsl
scas
pop
or
mov
pop
test
jne
cmp
lods
cmpsl
mov
insl
mov
and
aam
add
push
fs
jae
inc
and
repz
mov
movsb
std
mov
movsl
nop
pushf
jmp
out
ljmp
mov
dec
push
push
push
imul
icebp
pusha
xlat
jge
inc
pushf
aas
je
xor
aaa
and
xor
enter
jl
loop
aas
sub
leave
insl
nop
add
imul
jmp
inc
rcr
sbb
adc
movsb
je
jnp
mov
sub
pop
fcmovne
xchg
cli
fisubs
xchg
add
scas
dec
dec
push
inc
je
mov
xchg
iret
notb
adc
repz
rcrb
or
fnstcw
rcll
jl
push
pop
cmp
shrl
cltd
das
rcll
jns
stos
cmp
sbb
jb
adc
or
add
sub
cmp
mov
popf
add
xchg
xchg
mov
stc
push
adcb
insl
imul
sub
loop
negb
cmp
cld
xchg
xchg
add
notb
cli
mull
mov
or
xchg
cmc
fcoml
lea
or
push
in
adc
sti
jecxz
lcall
add
add
sbbl
in
add
pop
sub
aas
mov
or
insl
pop
aaa
push
mov
outsl
repz
insl
add
data16
xchg
into
shll
jnp
add
fs
fcompl
jns
cmpb
leave
rcl
cmp
aaa
mov
in
lds
mov
rol
inc
jmp
dec
mov
aam
mov
inc
out
sbb
jbe
ds
ds
mov
cmp
cmc
cmpsl
lods
popa
pusha
test
sbb
js
fs
inc
data16
out
cs
cmp
popf
icebp
sarl
sahf
pushl
popl
cmp
call
jmp
cmp
jnp
mov
push
push
inc
fs
xor
outsb
or
es
clc
lret
and
push
mov
adc
orb
imul
cmp
fcomip
adc
pop
ljmp
bound
fs
ret
mov
xchg
mov
cmp
pusha
and
test
flds
loop
push
cmc
ss
and
or
test
divl
cmp
clc
fists
leave
ds
add
push
in
into
cltd
add
movw
lea
jne
push
call
pusha
pusha
movl
mov
lea
jbe
pushf
push
movl
pusha
lea
jmp
mov
imul
andb
sbb
insb
loop
inc
xor
jo
inc
cltd
mov
insl
add
loopne
adc
loopne
pop
adc
repnz
lea
fsubl
jge
in
pop
in
arpl
inc
lods
mov
cmpl
pop
sbb
test
inc
sbb
xchg
sub
out
sbb
pop
jle
mov
pop
adc
cs
cmp
mov
jmp
ret
sbb
and
push
and
mov
shrd
bts
xor
mov
clc
test
cmp
and
pushf
pusha
stc
cmp
add
pushf
pushf
lea
jmp
add
push
push
lea
jmp
setae
lods
clc
bt
sub
pusha
clc
rol
cmp
stc
sub
cmp
cmp
clc
not
cmp
sub
cmc
ror
cmc
stc
clc
xor
jmp
mov
pusha
jmp
push
call
pop
lea
lea
movzbw
mov
pushf
call
jmp
inc
and
cli
jnp
ds
mov
xchg
lods
adc
add
nop
jne
mov
not
sbb
dec
dec
pusha
lahf
fsubp
test
xor
mov
mov
inc
cmp
daa
sub
or
sub
daa
popa
pop
ret
pop
rcrb
mov
rorl
lods
in
lret
jb
inc
divb
test
lret
fnstenv
jbe
test
xor
adc
inc
out
jno
sub
les
cld
push
mov
and
pop
xchg
xchg
je
adc
mov
jae
mov
icebp
jp
fmul
bound
and
mov
push
mov
andb
loope
pushf
xchg
jmp
pusha
movl
pushl
pushf
pushf
mov
lea
jmp
pusha
clc
cmp
add
push
stc
stc
mov
movzwl
or
bsf
mov
test
pushf
add
cmp
push
mov
stc
cmp
jmp
jg
ljmp
jmp
popa
bound
sub
pusha
pushf
fadds
jbe
inc
mov
pop
leave
scas
cltd
mov
xlat
adc
addr16
pop
mov
push
notl
cmp
mov
stos
ret
stc
xchg
mov
adc
in
pop
inc
js
nop
push
aaa
incl
leave
mov
add
push
jne
jnp
lds
xor
gs
aaa
jbe
fs
cmp
lds
cmp
adc
mov
push
xor
or
addr16
inc
fistl
add
add
cld
out
xor
xor
sub
imul
mov
repz
out
lret
jnp
or
aam
sbb
leave
mov
pusha
cmp
ljmp
fidivrs
sbb
clc
jnp
sbb
mov
pop
jge
cmp
push
loope
pop
mov
push
in
sbb
cmp
mov
stos
clc
and
iret
loopne
cmp
or
cli
enter
test
int
dec
mov
push
inc
std
loop
popa
movsb
mov
xor
and
bound
pusha
and
jnp
in
mov
icebp
push
jecxz
outsb
les
dec
xor
inc
in
out
or
xlat
pop
and
mov
dec
mov
outsl
mov
in
inc
cs
xchg
movsb
cmp
dec
jle
fists
pop
aas
jo
in
fistpll
mov
imul
sub
mov
pop
lods
out
xchg
aaa
loop
mov
imul
add
xor
enter
fdivrl
jecxz
jae
jnp
shlb
lock
std
std
xorl
push
mov
ret
je
and
ror
pop
sub
pushf
mov
pop
imul
lret
xor
mov
jns
inc
mov
pop
and
aam
pop
movb
fisubrs
adc
test
xchg
loope
fsubrp
add
push
add
xchg
push
stos
mov
int
mov
jne
mov
enter
flds
push
movb
pushl
push
lea
jmp
push
call
jmp
clc
mov
shrd
xor
btr
sub
rcr
dec
inc
cmc
lea
call
hlt
lcall
push
pushf
insl
dec
xchg
xchg
stos
test
and
adc
xor
movsl
dec
fwait
add
or
xchg
inc
lret
adc
inc
inc
xor
mov
xlat
fstl
cltd
cmp
push
scas
cmpsl
aam
into
pop
je
mul
mov
lea
shrl
xor
sub
cmp
sub
mov
jl
mov
inc
xor
mov
sbb
mov
lods
out
lea
jb
jne
aas
aaa
call
pushf
movl
push
push
lea
jmp
mov
idivb
mov
mov
in
mov
mov
sub
xchg
lods
pushl
add
ss
pusha
js
icebp
imul
orb
sub
pop
cmp
mov
lock
bound
xchg
into
ret
push
lahf
decb
cli
jne
cmp
sub
int3
movsb
mov
fs
lea
ja
pusha
call
lock
scas
idivb
cltd
mov
jmp
xchg
cld
xchg
imul
sub
imul
mov
mov
popa
test
pushf
or
cmp
adc
je
das
movsl
test
and
pop
push
insb
out
adc
pop
cmpsl
mov
popa
xchg
stos
push
nop
xchg
icebp
rcr
jle
jns
mov
nop
add
and
ljmp
xor
mov
insl
jae
insl
popf
mov
inc
push
dec
sub
jns
pusha
leave
or
arpl
sti
xchg
pop
aas
xchg
cmpsb
mov
xchg
mov
or
in
lret
pop
sbb
mov
cwtl
stos
jp
jbe
enter
rorb
ret
mov
xor
arpl
out
str
jmp
lea
je
cmp
test
add
push
test
test
pushf
cmp
pusha
call
hlt
loop
cmc
jnp
push
push
dec
jl
testb
xchg
xchg
xorb
pop
dec
jp
push
outsb
icebp
ja
inc
cmp
cs
add
add
mov
lea
bnd
adc
pop
dec
inc
mov
imul
or
mov
inc
mov
das
or
icebp
pop
sahf
ret
mov
fdiv
add
jbe
pusha
jns
or
push
pop
sub
dec
pusha
movl
movw
lea
js
pushf
movl
pushf
push
pushl
lea
jmp
bt
sub
jmp
call
push
lea
jne
push
jmp
mov
push
lea
jbe
sbb
rol
add
inc
sub
shl
shrd
neg
add
mov
dec
sub
sar
shl
mov
bts
movzbl
or
lea
add
jmp
mov
lea
bswap
pusha
mov
mov
pusha
movw
movb
pushl
ret
or
inc
adc
stos
ljmp
andl
cs
paddsw
imul
xor
cmp
mov
pop
gs
inc
inc
ss
jecxz
inc
fsubrl
dec
push
test
jp
xchg
out
int
xor
xchg
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
stc
xor
lea
push
call
jne
gs
xor
fs
insb
add
push
repz
divb
jne
lea
fdivl
mov
dec
xor
dec
inc
imul
out
std
rcrb
out
push
and
popa
bound
pop
aaa
dec
mov
inc
adc
loop
sbb
stc
lahf
xchg
call
out
xchg
or
jb
or
enter
aad
scas
stc
ficompl
shll
sbb
hlt
shll
rorl
popa
outsb
pop
les
or
les
adc
xchg
xchg
aam
push
movb
dec
scas
bnd
push
push
aaa
push
inc
sbbb
test
popa
pop
jns
shl
aaa
cwtl
scas
jae
mov
data16
dec
sub
fcmove
das
sub
sarb
rorb
jge
out
jbe
push
icebp
js
or
sbb
pop
fcompl
into
movsb
movsb
sbbb
add
push
pusha
mov
mov
push
pushf
lea
jmp
add
incl
insl
mov
add
incl
fsts
incl
shlb
incl
and
add
add
insb
cmpsb
add
add
or
add
dec
incl
cld
pushl
push
xchg
push
inc
add
incl
cli
ljmp
add
test
sbb
incl
push
push
sub
jg
add
incl
mov
and
sbb
incl
jae
rolb
mov
add
jb
add
incl
xchg
and
sbb
incl
inc
lds
adc
incl
dec
xorl
ds
es
add
incl
adc
in
sbbl
scas
incl
pop
hlt
jp
sbb
incl
imul
incl
cli
pushl
add
incl
push
or
incl
mov
scas
incl
in
xchg
pop
add
sahf
aaa
out
lret
add
incl
cli
stos
xchg
add
incl
aad
fcompl
cltd
mov
push
push
incl
cli
incl
add
incl
sbb
add
adc
incl
outsl
popl
subl
add
incl
bnd
adc
add
incl
scas
bound
sbb
incl
hlt
jmp
pop
sub
incl
ds
shl
jns
add
incl
mov
add
incl
lock
add
add
add
mov
add
add
add
rcrb
add
pop
incl
mov
mov
add
incl
sbb
inc
add
dec
incl
pop
nop
pop
in
mov
add
pop
out
popf
into
sbb
sub
push
dec
pop
pop
pop
add
test
sbb
xor
pop
dec
xchg
aam
mov
or
sbb
call
add
into
jle
xchg
test
xor
fs
sti
push
inc
sub
sbb
imul
push
in
mov
call
xor
test
aam
fdivrs
rcll
add
cmp
hlt
xchg
jge
jmp
cmp
or
sub
mov
jl
xchg
sub
out
jnp
jne
ficoms
push
loope
leave
leave
lds
gs
jl
dec
iret
ret
movsb
sub
push
jg
sub
outsl
mov
movq
and
iret
ljmp
pusha
inc
loopw
cmpsl
stc
mov
mov
cld
jecxz
push
sbb
inc
inc
cmp
xchg
sub
xchg
sbb
jbe
repz
movsl
fwait
jl
nop
scas
out
lods
out
jnp
insl
loop
xor
dec
adc
push
imul
gs
sbb
mov
add
popa
in
shlb
push
add
and
sbb
lahf
mov
daa
mov
jno
push
leave
cmp
cmpsb
movsb
stc
rcrl
add
xor
aam
jnp
shr
data16
stos
mov
inc
and
cmc
jno
cmp
or
mov
or
outsb
push
mov
jo
adc
movsb
push
lret
mov
pushl
inc
pusha
mov
inc
pushf
pushl
push
lea
jmp
call
jmp
inc
lea
push
pusha
push
lea
call
pushf
jmp
mov
jl
jnp
lret
pop
dec
lea
lcall
mov
xchg
inc
cltd
pop
push
icebp
xor
insl
add
gs
call
push
bound
out
leave
outsb
sbb
fbld
push
mov
movsl
sbbl
fsubrl
xchg
scas
xchg
sarl
enter
cmp
lock
inc
cmp
xchg
cmp
mov
mov
sbb
out
or
cmp
jle
push
dec
insb
pop
add
js
ljmp
xchg
into
loop
or
xchg
in
lcall
mov
jmp
movsbl
pushf
movzbw
lea
mov
pusha
jmp
imul
pusha
clc
test
stc
add
pushf
push
lea
jmp
nop
js
in
jnp
ret
add
adc
cmp
mov
icebp
and
dec
push
enter
mov
add
jo
dec
sub
mov
fucom
mov
xor
mov
xlat
sub
adc
mov
fldl
mov
loope
fs
arpl
je
adc
out
out
popa
cli
push
data16
pop
pop
lock
outsb
fists
mov
repz
leave
sub
jecxz
scas
dec
pushf
pushl
jmp
pusha
call
xor
call
cmp
xor
jnp
pop
jno
mov
xbegin
lods
push
insb
repnz
fsubrl
dec
shrl
into
pop
out
cmp
sahf
test
popa
or
movsb
mov
cwtl
add
arpl
jbe
leave
fsubl
pop
dec
rcll
bound
sub
pusha
mov
sbb
sub
in
jnp
daa
adc
pop
xchg
mov
mov
inc
out
out
pop
repnz
fadd
lods
inc
fadds
dec
roll
sub
mov
lock
ljmp
jb
adc
mov
push
dec
push
pop
movsl
loope
push
or
xchg
add
fnsave
pop
cmpsl
lds
adc
mov
sarl
lea
sbb
in
add
dec
jp
pop
add
aas
cli
jno
xchg
test
stc
push
dec
xor
clc
jno
jno
jge
repz
repz
fs
jne
pushf
pushfw
popw
cmc
sbb
push
shl
mov
cmp
cmp
add
stc
call
movl
lea
jne
push
pusha
push
push
lea
call
push
lea
jmp
mov
movl
pushl
push
lea
jmp
pop
xor
ljmp
jl
pushf
das
js
mov
js
inc
jle
ret
jno
js
and
lods
popf
add
sbb
jnp
arpl
pop
in
add
cmp
je
lret
fldl
movsb
mov
in
jle
cs
lods
jge
sub
ds
je
pop
push
leave
mov
pop
jecxz
dec
cmpsb
test
jnp
loopne
mov
adc
mov
adc
cwtl
xor
cmp
jae
cmp
dec
sub
addr16
shlb
cmpsl
mov
mov
es
leave
bound
sbb
pop
and
into
movsb
mov
pusha
mov
push
lea
je
shr
sub
bts
sub
das
add
mov
rcr
mov
stc
shr
shl
bswap
sar
seto
mov
pushf
or
pushl
lea
je
xadd
add
mov
sub
clc
bt
shr
bswap
rcr
call
jmp
pushf
pusha
movw
adc
movb
pushf
movb
lea
jmp
pusha
pushl
popl
bt
bt
cmp
cmp
pushf
pushf
pushf
movb
lea
ja
mov
sub
pusha
shl
add
add
lea
mov
stc
mov
test
call
jmp
cmp
jnp
or
pop
jo
cmpb
dec
inc
popa
int
bound
add
loop
daa
outsb
xchg
ret
cmp
pop
mov
or
outsl
xchg
xlat
sbb
xor
xlat
dec
movsb
stc
roll
sbb
addb
lahf
mov
imul
aaa
sbb
inc
pop
dec
scas
xchg
jl
or
stos
test
mov
lods
push
push
pop
pop
js
rolb
sbb
addb
pop
sub
add
addb
add
rorb
add
fistps
ljmp
add
loope
add
add
movl
pushf
lea
jmp
inc
push
dec
mov
pushf
jmp
or
pushf
lea
jne
dec
mov
pushf
or
pusha
lea
je
lea
xchg
lea
pusha
movzwl
movzbw
push
lea
lea
call
movb
mov
pushf
mov
mov
pusha
pushf
mov
jmp
lea
call
jmp
pushf
ss
out
inc
cmpb
fs
push
cmp
cmp
dec
lea
movsb
push
mov
and
js
inc
addr16
insl
cmp
mov
or
mov
dec
pusha
pop
pushf
push
adc
ss
stc
sub
ret
mov
pop
jl
jmp
daa
dec
add
adc
pop
pop
push
test
add
stc
and
test
rcll
mov
or
arpl
andb
pop
lahf
xor
mov
mov
pushf
mov
cmp
push
xchg
mov
cmp
mov
mov
popf
mov
sbb
xor
lods
xor
cmp
ret
add
into
scas
into
in
hlt
add
mov
add
xor
mov
ss
push
into
sarb
push
lods
and
bnd
add
adc
jbe
push
je
imul
jl
xor
stos
mov
daa
pusha
xchg
push
imul
fs
mov
adc
inc
push
lret
mov
jb
in
les
enter
cmp
out
inc
enter
mov
add
mov
call
pushl
lea
jb
cmp
cmpb
pusha
pusha
lea
jne
ror
mov
jae
pusha
cmc
add
call
sub
cld
xor
insl
mov
aad
repz
out
add
lea
mov
repz
insl
add
fmulp
pop
test
leave
loopne
sub
xor
ja
dec
outsl
xor
jne
sub
fiadds
and
stc
mov
mov
dec
mov
lea
sbb
mov
pop
cs
xor
jmp
cmpsb
jecxz
sub
mov
call
pop
push
xor
inc
into
stc
aam
inc
inc
cmp
cmpsb
xchg
arpl
add
sbb
mov
inc
jle
sub
aad
mov
xor
dec
jae
mov
mov
setp
call
pushf
lea
jae
pushf
clc
cmp
pusha
pusha
jmp
jmp
pop
not
movzbw
pop
pushf
mov
pusha
pushl
ret
test
pushw
popfw
mov
call
pop
sub
jnp
shrl
sub
nop
aad
xorl
sbb
mov
mov
insb
call
subb
pop
xchg
jg
cld
jecxz
xchg
adc
push
insb
or
shll
aaa
pushf
xor
dec
lds
jge
inc
inc
sub
dec
pop
mov
inc
mov
mov
ret
mov
aad
ljmp
sub
stos
xchg
fucomp
or
dec
aas
ss
mov
cmp
fildl
test
cmp
or
ror
cmc
daa
sbb
push
test
out
mov
jno
jnp
icebp
xor
xchg
pop
push
dec
gs
cs
xor
sbb
xor
out
or
pop
pop
sbb
test
rcrb
ss
pusha
mov
xchg
and
jle
xchg
mov
push
popf
mov
or
push
or
mov
insb
or
push
or
or
in
inc
adc
scas
fildl
sub
test
mov
int3
xchg
daa
jo
push
pushf
aas
adc
or
sub
clc
and
sbb
xchg
stc
enter
mov
pop
adc
mov
repz
scas
fadds
mov
movsb
fcoml
rcl
pushf
and
jnp
es
inc
jno
popa
cs
test
cwtl
scas
mov
jl
mov
sbb
filds
insl
add
popf
pushf
popf
lcall
stos
lret
xchg
rcrb
jnp
xchg
outsl
repz
adc
fcompl
cmp
xor
aas
sbb
test
mov
cli
cmp
mov
iret
lods
mov
pop
fstpl
sub
and
popf
push
ss
rorb
icebp
add
iret
mov
or
and
jecxz
pop
hlt
mov
xchg
inc
sub
jmp
add
lea
fidivl
orl
adcb
sbb
adc
push
leave
push
mov
mov
mov
add
xor
mov
cli
aaa
in
inc
adc
jl
mov
xchg
js
scas
adc
add
movsb
jno
pop
inc
daa
adc
leave
push
xlat
lea
add
mov
push
inc
jnp
arpl
mov
clc
int
arpl
call
adc
xorb
out
loopne
in
or
mov
outsb
mov
pop
leave
and
or
inc
mov
sub
iret
push
pop
movsb
or
pop
push
popf
imul
xor
pop
insl
mov
pop
idivb
fsub
vmovntps
add
cmc
xchg
xor
push
popa
mov
movb
and
loopne
xchg
xor
fs
jp
test
adc
jb
pop
pop
xchg
mov
or
and
xor
sub
pop
fs
inc
and
pusha
movl
pushf
pushf
movb
lea
jmp
movl
push
mov
pushf
pushf
lea
jmp
jb
shl
inc
scas
es
sub
movsb
xchg
stc
faddp
ficompl
pusha
les
or
mov
lahf
ljmp
and
lcall
push
cmp
imulb
fs
daa
leave
clc
xchg
adcb
leave
cld
inc
je
dec
lods
nop
jle
fwait
mov
xchg
lods
daa
or
std
imul
mov
aad
ficomps
add
movsb
loop
inc
jne
jg
stos
cmpsb
cwtl
mov
sub
add
or
jno
sbb
jb
xchg
fst
cmpsl
out
aam
fildll
sti
loopne
jmp
imul
inc
push
and
jns
jnp
jp
adc
aad
arpl
adc
in
mov
mov
sti
push
pop
dec
cld
cmp
icebp
lcall
insb
mov
out
hlt
sti
jmp
jmp
or
inc
popf
insl
cmpsl
adc
xor
fstp
cmp
and
adc
dec
cs
mov
push
test
push
insb
aas
push
insb
cmp
je
hlt
outsl
mov
add
add
movb
pusha
mov
xor
call
jmp
cmpsl
sahf
jp
jnp
lahf
push
mov
fiaddl
mov
push
xchg
ljmp
and
pop
xchg
ret
jl
mov
or
in
pop
xor
jo
icebp
sub
movq
inc
lea
cli
aas
arpl
xchg
mov
cmp
xor
leave
jbe
sbb
sbb
ja
ret
xchg
jle
fdivs
out
mov
sub
sbb
out
mov
movzbw
pushf
mov
setne
mov
pushf
movl
mov
shl
pop
mov
pushl
pusha
pushf
push
or
pushf
lea
je
pusha
or
jmp
and
inc
outsl
inc
or
imul
bound
mov
dec
inc
xor
push
adc
cwtl
fmuls
jmp
adcb
incl
js
cli
mov
aaa
or
movsb
add
cmp
jp
push
scas
add
ds
call
push
lds
iret
xchg
outsl
sub
and
or
adc
add
mov
mov
sbbb
rcrb
or
jnp
pop
lock
sub
shrb
fnstsw
sbb
lods
xchg
mov
cli
dec
sbb
aam
cs
addr16
adc
mov
aas
mov
lcall
or
or
mov
mov
test
sbb
mov
and
cmp
adc
loope
push
out
ret
and
js
test
sbbl
out
int
mov
loop
adc
mov
add
mov
repz
es
jo
pusha
add
jl
inc
fcoml
add
dec
mov
pushf
xor
sub
add
aaa
mov
and
scas
mov
jo
cmp
repz
sub
inc
jbe
sbb
stos
fistpll
popf
mul
mov
test
insb
mov
sahf
add
lds
mov
stc
addr16
decb
xchg
scas
lods
mov
mov
sbb
mov
hlt
aad
int3
cmp
and
shr
mov
push
push
aam
push
inc
mov
mov
sbb
movsl
cmp
fstp
jnp
cmp
xchg
mov
xchg
nop
jge
push
inc
inc
inc
fucomi
mov
jno
dec
cmp
jle
loop
mov
loope
inc
mov
jbe
lods
adc
mov
imul
in
clc
test
mov
cmp
cmp
scas
ficomps
fistpll
fwait
mov
fidivrs
inc
jg
jmp
sbb
pop
inc
xor
push
adc
mov
nop
xchg
sub
clc
test
out
xchg
xchg
js
mov
cmp
sub
mov
sbb
dec
ror
xchg
fadd
push
pop
sahf
pop
pop
lock
loopne
loopne
sbb
jns
mov
pop
mov
mul
cmp
ss
inc
mov
xchg
fisubs
adc
mov
lea
pop
pushf
cmp
addb
add
popf
stos
addl
inc
inc
xlat
pusha
call
cld
pusha
mov
inc
in
shlb
in
cltd
movsb
lods
or
push
add
jl
add
shrl
incb
bt
or
jmp
adc
pusha
pushf
pushl
ret
outsb
gs
jnp
xchg
aam
adc
add
stos
inc
sbb
dec
mov
mov
add
dec
inc
xchg
cli
push
addr16
in
adc
sti
push
sub
pop
fcom
inc
cmpsb
lea
repz
dec
xor
rcll
mov
pop
xor
pop
push
lret
iret
data16
xor
or
mov
or
decb
insl
pop
pop
push
imul
xchg
stc
fwait
or
xor
add
cmp
cmp
int3
mov
inc
cmovbe
shlb
adc
or
test
pusha
mov
lea
jmp
lea
ret
clc
call
lea
jae
cmc
pusha
cmp
push
call
mov
mov
jmp
lea
je
bswap
pusha
lea
mov
lea
jmp
lea
jae
push
sub
pusha
push
jmp
cmp
push
pushf
movb
lea
jb
test
cmp
pushf
pushf
call
jmp
lea
je
pusha
adc
lea
pusha
pushf
jmp
mov
inc
jno
jo
movsb
cmpsl
mov
dec
nop
sub
mov
push
sub
push
ss
mov
iret
fcmovne
jmp
clc
neg
ja
flds
jg
sbb
mov
in
dec
sub
xchg
rclb
mov
lea
jmp
sbb
pop
fdivrl
add
pushf
ret
lock
bound
dec
mov
xchg
stos
xlat
shl
int
fwait
outsl
or
aad
mov
push
sbb
add
pop
pop
sbb
xorps
push
loope
loop
test
jo
in
xor
inc
out
xor
into
add
cmp
loope
push
mov
sbb
cs
pop
xchg
or
push
xor
repz
in
add
testb
imul
inc
adc
lea
pop
cmpsl
cld
inc
iret
xchg
sub
les
push
jg
psadbw
cltd
rolb
icebp
ret
pop
dec
push
adc
and
repz
pop
xor
pop
rcll
add
mov
push
insl
ja
es
mov
je
out
imul
adc
jno
leave
orb
jns
add
add
mov
push
or
mov
bts
sub
rcr
mov
mov
sub
cmp
cmp
cmp
repnz
push
lea
jne
sub
bt
mov
btr
cmp
movsbl
jmp
pushf
lea
je
pushf
call
mov
xlat
fnstcw
cwtl
pop
dec
sub
leave
lret
or
sbb
popa
and
loopne
pop
sti
sbb
adc
insb
cli
jecxz
out
ljmp
cli
dec
enter
sbbl
test
loopne
stc
sub
mov
cmp
pop
inc
mov
movsb
sub
dec
pop
mov
mov
ss
xchg
cs
mov
loopne
sbb
not
movzbw
push
and
xor
rcl
mov
cmp
bt
push
test
call
pusha
call
lea
ja
xor
inc
clc
add
cmc
jmp
xor
data16
mov
dec
jo
je
xchg
mov
dec
inc
stos
cmp
mov
pop
sub
mov
ret
subl
int
fldt
push
jle
and
call
loopne
clc
cmp
dec
push
sub
pop
push
fildl
cmpsb
add
mov
fadds
ret
add
cltd
xchg
xchg
xchg
test
shrl
pop
aas
daa
cmp
sub
cs
test
ss
push
call
ficomps
cmpsl
jo
push
call
pushf
jmp
call
fmul
xor
jnp
adc
xlat
add
pop
xchg
jle
ficomps
pop
inc
insb
sub
inc
jl
inc
cltd
scas
mov
int
sbb
mov
mov
fadds
arpl
cmp
cwtl
std
jmp
and
shlb
mov
out
mov
pminub
ficompl
mov
add
dec
rcrb
pop
mov
fsubl
push
inc
hlt
fcom
mov
cmp
mov
data16
cmp
jae
ja
sbb
repz
jmp
test
fdivrs
rorb
lock
xchg
cmp
fs
jno
jnp
movsl
mov
xlat
cmp
mov
mov
fwait
movsl
cmp
les
lock
bound
imul
jns
pusha
clc
and
and
gs
shrb
sbb
out
sti
aam
add
out
addl
xchg
scas
mov
mov
jg
jns
stos
mov
fisubrl
or
enter
xor
mov
bswap
cwtl
movl
lea
jmp
pusha
mov
pushf
mov
push
lea
jmp
lea
jae
push
pusha
bt
shl
mov
shl
inc
mov
sbb
bts
test
mov
pushl
mov
call
pusha
dec
scas
fdivrs
cwtl
fidivl
and
and
dec
mov
subb
std
add
or
outsl
sbb
cmc
jp
mov
aas
xor
sub
xchg
and
add
test
adc
add
insb
ret
pop
es
push
jo
repz
dec
cmp
dec
dec
pop
xchg
jl
cltd
add
and
fmuls
mov
lret
scas
mov
and
dec
es
call
sahf
jns
xlat
jnp
rolb
xlat
out
cld
in
repz
jmp
or
aaa
cmp
cltd
repnz
inc
sub
shl
dec
inc
testb
imul
sbb
or
mov
xchg
cmp
ror
xchg
jb
inc
movsl
jno,pt
stos
jae
inc
cmp
mov
loope
cwtl
repz
repnz
testb
ret
mov
add
loop
fbld
adc
loop
pop
pop
pushl
movsl
jp
aam
aas
cld
add
xchg
int
jecxz
dec
lcall
cmp
adc
sbb
test
cwtl
sbb
gs
sbb
addr16
pop
cwtl
sbb
insl
int3
sbb
cwtl
xchg
sbb
fs
sbb
add
add
rorb
jnp
daa
popf
loop
mov
cwtl
cli
push
pop
push
in
stc
and
shlb
mov
pop
addb
lds
sahf
mov
mov
mov
xor
shll
pop
sbb
adcb
leave
mov
out
ja
push
mov
pop
inc
int3
rol
mov
mov
and
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xor
call
js
pop
jnp
mov
jmp
sub
xchg
sbbb
imul
cwtl
xchg
xor
enter
and
mov
xlat
into
sub
nop
mov
leave
xor
fwait
outsb
add
and
add
enter
or
test
dec
lret
sub
sbb
lea
pushf
jl
jnp
repz
jmp
shrl
and
sbb
dec
mov
pop
aas
push
mov
les
out
push
mov
in
cmp
add
leave
out
icebp
cmpb
pop
dec
ss
mov
sub
in
rcll
dec
mov
cmp
add
pop
out
cs
mov
int
inc
das
nop
fidivl
mov
shr
dec
adc
in
sbbl
inc
out
xorl
pop
adc
push
and
adc
add
and
jae
push
cmc
cmp
pusha
movb
lea
jae
stc
bt
cmp
call
xchg
mov
btc
rcr
add
bswap
shl
shl
add
lea
shld
mov
clc
shr
test
cmp
bt
cmp
pushf
lea
jnp
pusha
lea
je
cmc
cmp
call
cwtl
gs
inc
or
shll
repnz
push
push
les
les
stos
dec
cmp
mov
fcom
shrb
push
sub
shrl
mov
push
mov
div
pop
hlt
cmpsb
stc
inc
and
cmpsb
lret
jb
icebp
loop
and
je
sub
xor
cltd
jl
test
movzbw
shrd
test
test
mov
clc
and
call
gs
aam
inc
add
inc
adc
sbbl
or
insl
mov
xor
adc
inc
cmp
mov
fistl
xor
and
fistl
lods
xchg
pop
cli
mov
sbb
inc
test
push
cmc
fmull
bound
pop
movsl
ficomps
push
sbb
inc
imul
in
clc
mov
or
mov
ss
cmpsl
or
stos
loop
mov
adc
arpl
jns
les
ja
xchg
aad
leave
mov
ss
rol
ret
sub
mov
sub
or
aad
dec
cmp
aaa
jo
lds
push
xor
jmp
cmp
sets
stos
xor
add
push
cmp
iret
or
add
ret
mov
gs
jns
jmp
inc
rorb
inc
cmp
dec
fldln2
mov
je
add
xor
pushf
pushf
movb
pushl
ret
and
sbb
jnp
sub
pop
pop
orl
call
shrb
leave
lcall
imul
subl
mov
scas
jmp
sub
stc
or
and
dec
jae
dec
int3
add
cltd
xchg
aad
adc
leave
xchg
push
jnp
frstor
pusha
push
cwtl
xor
into
mov
fcompl
fcmovne
add
and
in
ret
mov
sub
or
mov
xchg
jle
inc
push
sbb
pop
inc
sti
lcall
and
in
enter
and
pusha
xor
leave
jl
lods
inc
sbb
lahf
stos
xchg
jmp
or
js
mov
ds
pop
insl
add
nop
jns
sub
push
mov
mov
pushf
pushl
pushf
push
lea
jne
mov
lahf
mov
pusha
lea
jmp
lea
lret
inc
jge
scas
dec
mov
mov
mov
shlb
sub
push
in
sub
lods
mov
mov
rol
mov
nop
mov
icebp
scas
je
bound
or
mov
gs
cmp
int
jo
ss
into
mov
out
inc
aaa
adc
je
outsb
dec
mov
cli
and
adc
out
pop
insl
aaa
push
test
sub
loop
shr
dec
dec
out
mov
lret
and
mov
dec
inc
cmp
mov
shll
mov
movsb
cmp
out
xchg
push
call
pushf
movl
pushf
mov
push
mov
push
lea
jmp
pushf
call
push
push
movl
pushf
pushl
popl
pushf
pushl
ret
push
lea
jne
call
call
test
pusha
clc
test
add
pusha
jmp
mov
cmp
sub
not
rcr
add
test
mov
bt
test
bt
test
pushf
lea
je
bt
call
push
cmp
movw
movb
mov
movb
lea
ja
clc
imul
jmp
rol
rol
rcr
rol
pushl
pushl
pusha
setno
stos
movb
call
sub
and
jnp
and
dec
sbb
adc
dec
in
push
dec
push
mov
add
mov
mov
dec
sub
sarl
cmp
adc
lock
inc
cmp
sub
mov
scas
sub
or
fs
jbe
inc
mov
sti
inc
push
add
pushw
inc
jecxz
pop
and
mov
inc
sub
in
insb
cmpsb
loope
imul
add
hlt
les
fwait
xchg
movb
psubb
sbb
out
out
ss
push
in
xchg
sub
push
lods
add
jb
or
sahf
or
sbb
not
not
bswap
pop
jmp
xchg
xchg
or
jnp
addr16
ss
mov
push
xor
xlat
loopne
fwait
aam
dec
jecxz
out
leave
push
in
and
movsl
fwait
std
sahf
subl
lahf
cmp
mov
jle
iret
pop
jl
movsb
cmp
jnp
andb
enter
aaa
push
gs
fwait
pop
push
inc
lret
pusha
imul
insb
mov
inc
hlt
push
mov
jnp
nop
adcb
jb
mov
adc
push
xor
rcrb
or
fwait
outsb
jb
shll
jae
lds
xchg
subl
jmp
ret
popf
fwait
cmp
in
out
xlat
mov
daa
es
inc
cmpb
cs
pushf
or
mov
mov
pop
hlt
jmp
mov
movb
fnsave
cmp
into
jnp
lea
sbb
sub
push
popf
mov
icebp
outsb
rcrb
pop
ficompl
test
mov
mov
push
testl
cmp
xlat
mov
fidivrl
out
mov
dec
fidivrs
or
mov
data16
iret
xchg
xor
mov
sahf
addr16
clc
aaa
xchg
jmp
sti
negl
mov
xchg
mov
xchg
sbb
mov
or
mov
xor
leave
add
punpckhbw
movl
pushf
lea
jmp
sub
pop
int
inc
push
and
mov
mov
repz
inc
pop
aad
hlt
ds
icebp
xchg
jl
mov
mov
cs
sub
pop
xor
xor
jns
lret
inc
mov
jnp
int
inc
stos
xchg
jne
in
and
test
shlb
jno
cmp
cld
ds
push
xchg
xchg
xchg
sub
push
push
mov
cmp
xchg
imul
outsl
push
xchg
mov
pusha
push
push
inc
inc
ret
sarl
cmp
xor
push
movsl
adc
sarl
std
or
jnp
mov
lret
sub
neg
in
jns
filds
cmp
inc
cmc
scas
inc
inc
mov
push
xchg
loop
pop
dec
fnstcw
mov
cltd
sti
mov
pushl
movl
pushf
pushl
pushl
ret
jmp
inc
and
rcl
sub
or
xchg
sbb
push
mov
pushf
bt
mov
call
lahf
test
xor
jno
loope
sbb
xlat
push
negl
sbb
mov
int3
mov
adc
and
cmpsb
sbb
cmpsl
mov
and
mov
xor
cmp
cmpsb
mov
cmp
sahf
lahf
cmp
fists
xchg
adc
dec
dec
hlt
push
xchg
repnz
sbb
and
jb
pusha
movb
pusha
pushf
pushl
ret
or
inc
inc
fwait
cmp
mov
mov
test
enter
mov
ljmp
xor
lret
and
pushf
fists
scas
sbbb
jo
ret
inc
ljmp
bound
cmp
sbb
push
pop
ret
jle
lcall
test
add
pusha
fstl
ret
rcr
shrb
sbb
jmp
mov
pushf
lea
jnp
lods
clc
call
pusha
stos
push
pushf
pushf
pushf
lea
jmp
lea
jb
cmc
cmp
jmp
cmp
bt
add
call
pusha
cmc
push
cmp
pushf
pushf
call
call
pushf
test
test
pushf
lea
je
push
clc
add
bt
clc
jmp
mov
inc
popf
movsb
imul
or
pop
inc
push
icebp
test
lods
int3
loope
xchg
test
aas
jmp
push
push
daa
mov
fucomp
sbb
push
mov
std
push
pop
repnz
or
adc
mov
pop
push
hlt
inc
fnstsw
rorb
out
xor
xchg
outsl
pop
push
jbe
jnp
scas
lods
push
idivl
repnz
in
mov
mov
je
push
pop
fstl
inc
lods
mull
rcl
mov
in
test
sub
imul
push
pop
cmp
clc
sbb
sub
imul
pop
cld
ficomps
inc
xor
pop
sahf
add
push
aam
fidivrs
sub
ds
int
xchg
insl
icebp
push
into
sti
les
push
jmp
ljmp
lcall
mov
cmp
cltd
xor
loope
out
out
inc
cs
jl
sub
in
fs
push
lods
imul
popa
cwtl
call
push
in
adc
jnp
or
mov
and
adc
sahf
pop
outsb
jno
xchg
lret
xchg
mov
pop
pop
rol
mov
inc
add
lods
popf
pop
ret
mov
stc
in
cmp
aaa
into
ret
adcl
cmpsb
mov
notl
xor
sbb
cmp
stc
xchg
pop
incl
jmp
dec
in
les
jmp
sahf
sub
sbb
shl
mov
jnp
pop
xlat
cmpsb
in
fucomp
mov
inc
movsl
lea
pop
add
push
push
mov
les
xor
push
andl
out
into
sub
aad
pushf
loopne
iret
imul
imul
xchg
mov
sbb
leave
lods
test
js
fcoms
adc
cmp
add
inc
mov
xchg
mov
sub
inc
cmpsl
movsb
dec
enter
in
lret
lret
cmp
mov
ficomps
mov
mov
jnp
insl
dec
push
dec
xor
pop
ret
pop
cmp
mov
sarl
cmp
imul
pop
xchg
jno
lds
in
faddl
jae
and
sub
aaa
pop
push
rcr
fwait
pop
shr
dec
cmp
push
pop
dec
lods
inc
outsl
xchg
repnz
cmp
or
and
call
jnp
test
loop
xlat
inc
ficoml
sub
je
leave
mov
mov
popf
lods
push
sbb
nop
cmpl
cltd
ficomps
aas
sub
inc
enter
pop
bound
iret
loop
mov
inc
addb
stc
mov
xchg
arpl
lods
push
push
pop
lea
jle
jle
fcomp
ret
xchg
rorl
nop
jl
fstpl
xor
push
push
imul
add
push
dec
cs
ret
shr
pop
into
mov
flds
and
pminub
inc
cmove
hlt
jae
aas
push
push
pop
dec
scas
inc
sbb
and
mull
adc
cmpsl
cmp
jno
fwait
shlb
sub
mul
sti
sub
add
jnp
push
jecxz
in
and
cwtl
std
ljmp
adc
pop
mull
adc
mov
push
add
movups
sub
push
xor
cmpsl
loop
add
mov
stos
testb
add
ret
dec
dec
sbb
repnz
xchg
dec
cmp
pop
xchg
xor
or
xchg
push
mov
dec
scas
cwtl
pushw
outsb
push
mov
in
push
dec
das
sub
ud0
xor
lea
in
and
out
xlat
jne
mov
cmpsl
sub
adc
dec
cs
add
dec
outsl
arpl
inc
jb
add
clc
call
pop
push
pusha
pushl
ret
jmp
inc
jnp
add
xchg
jg
mov
rorb
mov
int3
test
dec
sbb
push
mov
lods
ret
repz
adc
mov
jle
lds
call
cmp
shll
pushf
into
xchg
xchg
cli
xor
aas
mov
nop
stos
push
sub
lds
inc
adc
push
arpl
es
jl
aam
ja
int3
mov
cmc
imul
and
nop
or
bound
ror
imull
cmp
and
push
inc
mov
xchg
ficomps
and
mov
stc
pushf
repnz
pushf
push
jmp
repnz
mov
jnp
nop
or
cmp
push
daa
or
outsb
mov
adc
adc
xchg
mov
in
dec
cmp
fidivrs
push
shl
fsub
or
aas
fsubs
cmp
mov
jb
push
jns
or
inc
iret
movsb
push
inc
xchg
inc
jnp
sbb
test
into
incl
add
ljmp
ja
xchg
lcall
lahf
lods
ret
sub
loopne
out
inc
cmp
dec
out
stc
sbb
div
cmp
popa
insb
gs
and
movsb
jmp
repnz
call
test
inc
iret
mov
clc
pop
dec
and
lret
jmp
xor
mov
imul
pushl
sbb
xchg
inc
test
stc
push
pop
dec
and
aam
sahf
jno
xlat
fnsave
inc
fisubrl
enter
lahf
mov
push
in
bound
lret
or
call
adc
fwait
and
call
xchg
jns
inc
sub
mov
roll
cwtl
in
inc
insb
fists
shrb
ja
and
or
pushl
jmp
repz
jns
xchg
arpl
addr16
test
aad
nop
gs
call
out
xchg
insl
test
stc
push
mov
sti
jno
jl
mov
scas
pushf
mov
pop
and
push
and
dec
popa
jmp
shll
popf
in
mov
cmpsb
mov
jae
popa
jo
pop
or
xorl
mov
test
ja
repz
xchg
push
push
adc
stos
cwtl
sub
dec
xor
test
or
jb
push
aam
bound
add
std
sbb
add
add
add
add
add
add
mov
icebp
sbb
movsb
icebp
sbb
add
add
add
stos
icebp
sbb
xchg
xchg
jp
jno
in
outsl
popf
insb
pop
mov
pop
dec
xchg
ljmp
ret
cmpsl
sub
dec
xorb
mov
sbb
and
inc
cmc
insl
fstpl
add
sar
aaa
cmpsl
aad
aam
outsl
inc
dec
pop
lock
xchg
fwait
dec
xchg
stos
outsb
push
pop
movsl
stos
js
inc
xchg
dec
flds
sbb
call
inc
repz
jbe
cmp
push
bound
pop
aaa
jno
inc
lret
cmp
ss
pusha
xchg
mov
sub
daa
and
push
and
gs
or
cmp
pop
cmp
adc
in
int3
cmp
fidivrs
negl
fisttpl
sbb
push
mov
ficomps
jne
loopne
mov
fs
cmp
aaa
outsb
cs
pushf
push
jmp
in
out
enter
push
cmp
int
ret
xlat
pop
inc
ds
stos
dec
into
or
cmpsl
xchg
xchg
and
inc
or
mov
sbb
dec
cmp
mov
out
mov
fldt
arpl
add
dec
add
ret
rolb
gs
mov
jp
test
rorb
data16
ror
push
pop
push
popa
pop
fists
push
and
sar
sub
cmc
pop
arpl
mov
bound
inc
dec
pop
push
pop
and
push
sbb
stos
adc
xor
push
dec
or
mov
jl
adc
repz
movsl
es
sahf
ret
sti
cmc
test
push
cli
dec
adc
jbe
mov
mov
adc
sbb
call
fsubrs
mov
ficoms
fstpt
enter
xchg
cs
dec
inc
movsb
mov
dec
std
pushf
fiadds
mov
jne
mov
loopne
inc
fstps
pop
mov
dec
adc
out
pop
lock
xor
scas
stos
enter
mov
cmp
lods
xor
cmp
js
loope
test
lahf
mov
or
lcall
pop
shl
aas
repz
sub
repz
jl
out
test
cld
mov
xor
pop
jbe
push
hlt
test
loope
push
push
aaa
inc
rorl
jbe
mov
lcall
xchg
mov
sbb
mov
stc
sahf
push
push
scas
je
stc
and
ja
leave
std
inc
mov
xchg
ret
mov
lar
ret
sbb
pop
enter
cs
mov
rorl
jge
popa
xlat
cmp
sub
je
xchg
mov
dec
into
dec
scas
xlat
cmp
mov
insl
ljmp
or
jp
ljmp
mov
std
cmp
fdivr
ljmp
sbbl
pop
sti
mov
inc
lret
cmp
aam
ds
ret
sbb
scas
mov
sbb
enter
shlb
ds
mov
or
mov
out
add
popa
test
outsb
mov
cmp
jecxz
inc
aaa
pop
cmp
repz
scas
ds
cmp
mov
mov
and
dec
add
rcrl
scas
in
arpl
dec
jg
sub
nop
or
sub
or
cmp
daa
lcall
mov
pop
inc
into
mov
int3
jbe
and
push
movsl
xor
jno
xchg
adc
or
not
add
sbb
das
add
movsb
loopne
sbb
dec
sbb
push
mov
das
pop
ficoml
cwtl
out
mov
sarb
les
pop
imul
cltd
cmp
popf
sbb
dec
jmp
or
hlt
jno
xchg
leave
add
inc
push
js
xor
fcomps
inc
test
mov
xlat
aaa
jle,pt
loopne
sub
clc
imul
pusha
mov
jno
dec
pop
sub
cmc
jbe
test
inc
bnd
cmpsl
sbb
fiaddl
inc
xor
loop
jp
mov
ss
push
daa
xchg
es
into
pop
fwait
stc
mov
push
pop
add
mov
add
mov
push
popl
cmpsb
mov
pushf
outsb
popf
dec
pop
loope
sysenter
cmpsl
lcall
fwait
call
and
out
hlt
data16
sbb
je
mov
jp
pop
gs
sbb
dec
add
lret
mov
rolb
push
cwtl
insb
fidivrl
les
test
lea
bound
into
addr16
roll
stos
cmp
pop
outsb
cmp
inc
cmp
nop
lcall
inc
lods
cmp
push
xor
adc
pmulhw
ljmp
ljmp
subb
xchg
inc
cmp
push
movq
pusha
mov
aaa
inc
cmp
cmpsl
inc
pop
mov
push
push
and
iret
rorb
mov
imul
xchg
outsb
fdiv
test
sbb
es
push
cwtl
jae
dec
ss
rorb
mov
push
out
mov
loopne
int
pop
pop
add
mov
insb
mov
mov
ret
xor
out
or
repnz
orb
push
test
out
adc
add
xor
cwtl
dec
inc
imul
push
sub
in
mov
data16
lret
xor
mov
clc
test
popa
push
leave
out
aam
dec
sti
jb
push
sahf
mov
push
xor
mov
sub
shr
subl
mov
fists
aaa
add
std
fsubrs
pop
jnp
mov
pop
add
jmp
cmpsl
xor
jnp
mov
pop
into
xchg
xchg
jns
cwtl
mov
jmp
mov
mov
dec
dec
xlat
adcl
xchg
mov
addr16
js
aad
fs
lods
sbb
jbe
imul
movsl
dec
into
adc
dec
fadd
repnz
mov
negb
loope
xor
jl
push
mov
xchg
lods
mov
xor
xor
xor
test
sahf
fimuls
mov
inc
or
decl
sub
popf
and
or
jle
ret
pusha
pop
inc
rol
inc
fcompl
pushf
inc
jmp
sub
testb
inc
movsb
stos
lds
mov
test
cmpsb
sub
aam
mov
add
pop
enter
aam
fiadds
outsb
push
sbb
test
jae
push
push
fcomi
jne
les
lods
mov
in
lock
cmc
pop
into
ret
daa
mov
out
or
out
sub
jmp
push
cmp
xor
cmp
ret
ljmp
mov
and
daa
subl
jne
xchg
cmp
cmpsl
inc
xor
les
andb
mov
xchg
hlt
xchg
shlb
clc
adc
push
or
xchg
ret
imulb
and
mov
mov
adcb
aad
jb
sahf
xor
repnz
and
sub
adc
fs
stc
cmp
lcall
inc
jnp
cmp
ds
fadds
xchg
mov
lds
mov
mov
dec
push
lret
mov
movsb
out
imulb
cmp
adc
pop
jb
jle
xchg
dec
mov
jg
int
fidivs
mov
pop
test
mov
mov
bound
jno
shlb
roll
js
std
rorl
xlat
adc
jmp
push
in
imul
fmulp
rorb
and
push
dec
mov
jle
or
jno
fstps
ret
movsl
or
fildl
add
ss
das
push
push
imul
dec
jmp
sub
aaa
push
mov
mov
stos
fisttps
fmull
lcall
loop
test
dec
inc
cmp
mov
push
mov
adc
fistpll
mov
xchg
jmp
adc
stos
mov
das
adc
ja
or
adc
sub
cmp
and
ja,pt
or
xor
push
pushf
xor
imul
jp
cmp
pop
out
lea
push
cltd
jnp
movsl
mov
jne
clc
pop
popf
sub
pop
test
add
jp
gs
adcl
jne
xchg
jl
cmp
xchg
std
xor
push
push
rcll
popf
addb
sub
inc
mov
aam
sub
mov
dec
clc
cmp
rorb
dec
xchg
sbbb
and
sub
fbld
xchg
jae
mov
cmp
cmp
scas
xor
cs
sbb
or
jmp
push
pop
aad
mov
test
subw
push
stc
jle
mov
push
sbb
pop
pop
int3
and
sbb
push
jno
xlat
rol
test
mov
js
push
scas
sub
ret
jnp
sbb
jl
movsl
clc
ljmp
pop
das
jne
lret
or
pop
adc
and
adc
adc
test
cmp
push
loopne
push
push
jle
xor
or
and
jle
cmp
jno
xor
mov
push
pop
outsb
push
and
popf
adc
and
sub
xlat
fsubp
sub
mov
sbb
xchg
imul
sbb
inc
adc
mov
mov
sbb
xchg
mov
jns
bound
sub
or
imul
or
in
cmpsl
repnz
sub
sub
jecxz
cltd
xchg
mov
ljmp
sbb
jge
push
dec
imul
aas
aad
insl
imul
into
dec
xchg
inc
loop
xor
jmp
and
jl
scas
daa
push
outsb
sbb
loop
arpl
int3
cmpsb
jmp
stos
into
inc
fists
movsb
gs
xchg
lahf
adc
fidivrs
and
sbb
fstps
mov
pop
sarl
mov
loopne
dec
imul
jnp
ss
mov
aam
setno
pushf
icebp
pop
jae
imull
pop
cmpsb
movsb
add
pop
aad
push
jecxz
loope
cmp
sub
mov
mov
in
pop
sbb
xchg
inc
and
les
dec
pop
gs
bound
lahf
dec
pop
cs
jne
xchg
scas
lds
jns
hlt
xorb
lea
push
xchg
xchg
xlat
imul
xor
hlt
mov
mov
mov
mov
nop
adc
hlt
sbb
andb
dec
adc
int
std
mov
pop
mov
ror
daa
jns
xchg
test
test
pop
dec
inc
pop
lea
mov
mov
sahf
leave
pop
repz
mov
cmpsb
enter
out
add
add
pusha
lea
jb
cmc
stc
pusha
cmpb
call
dec
ss
mov
inc
xorb
dec
inc
push
push
mov
mov
ss
or
mov
adc
cmp
es
sbb
xchg
int3
lods
xor
repnz
leave
mov
lret
sub
push
movsl
jmp
or
pop
pop
mov
jns
jae
call
loope
movsb
mov
add
sbb
sub
mov
mov
and
mov
ret
cmovs
lret
test
dec
inc
push
insb
ficomps
roll
lds
sub
sbb
xchg
loopne
repnz
mov
out
jecxz
cld
jno
sub
pop
cwtl
inc
xchg
lahf
sbb
mov
mov
dec
fisubrs
les
fcoml
test
add
rclb
jg
cli
pop
push
push
inc
sub
mov
mov
or
sub
mov
fldl
gs
dec
sub
mov
inc
sub
or
pop
cltd
sarb
dec
mov
in
fisubrs
popa
pusha
cli
negl
cmp
jo
repz
iret
push
enter
ror
cmpsb
mov
jo
rolb
lcall
fs
js
add
jnp
aam
mov
mov
mov
xor
mov
pop
dec
adc
lock
add
bnd
dec
popa
fadds
xchg
sbb
mov
mov
movsb
push
mov
iret
adc
incl
add
test
add
call
call
push
adc
inc
push
push
test
mov
pop
fucomp
pusha
jl
fcomps
mov
jge
lret
mov
pop
xchg
je
inc
test
push
and
adc
cmpsl
mov
mov
jle
sahf
xor
dec
push
test
sub
sahf
and
pusha
mov
das
push
jbe
mov
out
in
test
sbb
add
xchg
jo
mov
lods
faddl
imul
dec
mov
or
pop
pop
int3
push
mov
fnstcw
inc
int3
js
cmp
outsl
out
mov
sub
and
dec
fcmovnb
loopne
pop
repz
addr16
mov
fst
outsb
cmpl
mov
mov
cmp
and
and
xor
pop
into
or
movsl
push
cmp
xchg
in
rclb
out
ret
nop
cmp
sub
xchg
push
cmp
sbbl
inc
xlat
cs
and
lahf
jg
jae
sub
mov
icebp
pop
push
ljmp
and
in
jb
push
jo
aad
js
fadd
cmp
hlt
or
pop
xchg
repz
and
dec
sub
xor
cmp
movsl
jnp
in
cmp
dec
dec
pop
cwtl
push
inc
xor
cmp
mov
mov
cmp
pop
jo
and
enter
jle
sti
addl
call
pop
shll
popa
push
iret
lcall
and
pop
add
pop
mov
js
jp
dec
stc
jp
rclb
cmp
mov
xor
mov
sahf
shlb
loop
in
loop
cmp
pop
add
dec
mov
pop
inc
sub
popa
and
fisttpll
push
int3
jo
xor
xchg
test
xlat
inc
je
nop
xor
push
xchg
cs
stos
add
fildl
sub
cmp
add
popa
cli
in
mov
sub
adc
cmp
pushf
cmp
cmp
mov
push
mov
pushf
cmp
nop
dec
push
ficompl
mov
ds
lret
movsb
insb
cld
xchg
mov
shll
mov
nop
sbb
push
push
pop
jo
bound
subb
fstps
decb
mov
xchg
add
pop
arpl
push
push
loope
mov
movsl
out
loopne
dec
loopne
mov
jl
test
adc
mov
push
pop
mov
clc
pushf
aam
mov
inc
cld
loopne
inc
outsl
pop
or
mov
movsb
mov
pop
or
and
scas
jp
jns
mov
mov
push
or
push
subb
push
sbb
mov
pop
adc
xchg
pop
hlt
and
cltd
sbb
ficoml
jo
jno
arpl
insb
inc
dec
pop
mov
mov
and
jnp
mov
jno
sbb
cmpb
xorb
sbb
loop
pop
fcomps
fdivs
cwtl
adc
cld
dec
nop
mov
fdivl
cmpsb
jp
fidivl
mov
test
test
pop
aam
xchg
jmp
push
bound
and
pop
jno
adc
inc
xchg
push
mov
test
stos
push
mov
cwtl
mov
xor
sub
inc
sub
sub
mov
add
cmp
je
sbb
fld
lock
jecxz
pop
jno
addl
ljmp
push
shrb
sub
loop
fsubrs
sbb
push
lock
cld
xor
lock
cltd
mov
adc
aam
pusha
mov
aam
mov
shlb
xor
test
cmp
mov
test
les
mov
pop
mov
add
rcl
hlt
clc
je
inc
call
and
hlt
xorb
dec
and
pop
jl
sbb
repnz
inc
aas
sbb
fst
pusha
shrb
adc
movsl
xor
cmpsl
aad
adc
sbb
daa
push
cmc
adc
mov
mov
or
cmp
shll
repnz
icebp
jl
jo
aaa
int3
cmpsb
dec
dec
cmp
inc
pop
fnsave
rolb
repnz
fsubs
cmp
mov
pop
fmul
jo
imul
cmp
bound
out
out
xor
aam
push
dec
sbb
jl
sbb
ficoms
loopne
mov
sbb
xor
aam
xor
xchg
inc
out
loope
cmpsl
mov
and
cltd
inc
daa
mov
cwtl
ss
inc
xchg
push
gs
cmp
pop
or
xor
cmp
or
inc
ficompl
mov
aas
test
jmp
mov
cli
fnstenv
fsubs
cmp
jno
jne
stos
jbe
mov
test
xchg
bound
mov
pop
push
push
mov
fstps
sarb
mov
mov
push
mov
push
add
mov
bound
cmp
rcrb
into
mov
out
repnz
js
mov
push
pop
xor
fldenv
jne
dec
jne
in
mov
lods
int
aaa
cmp
adc
or
ret
call
dec
lock
pusha
cmp
je
je
pop
sub
pop
out
cmp
inc
jl
ljmp
mov
push
pop
push
mov
jmp
add
in
jp
sbb
js
mov
in
fadds
mov
xchg
adc
xchg
pop
or
push
out
mov
ficoml
adc
or
push
and
xchg
mov
cltd
scas
movsb
mov
xlat
push
scas
aad
test
dec
sbb
je
rcl
mov
insl
jg
push
pop
xor
mov
jo
push
movsl
dec
dec
cmp
out
ljmp
lods
rolb
iret
mov
xchg
mov
push
je
clc
sbb
aad
in
iret
je
inc
mov
mov
xor
inc
xchg
jle
inc
jb
push
xlat
dec
cmp
inc
xchg
jl
pop
out
cmp
sbb
xchg
pop
pop
jl
xchg
insb
arpl
popf
push
add
dec
pusha
in
mov
and
jo
push
imul
fadds
int3
jecxz
pusha
xor
aam
cmp
cwtl
cmp
pop
push
into
arpl
pop
push
cld
in
popf
xor
inc
bound
dec
sarb
inc
mov
fists
jns
mov
mov
and
aam
sub
lods
add
outsl
dec
and
adcb
sbb
xchg
push
ja
adc
pop
xchg
fs
rcll
adc
and
hlt
and
icebp
xlat
pop
outsl
iret
jno
movsl
jbe
dec
dec
aas
loope
dec
into
dec
sub
repz
pop
in
xchg
cmp
ja
rclb
pop
call
mov
add
xchg
xchg
bound
dec
lcall
inc
popa
loopne
scas
pop
and
xor
cwtl
icebp
dec
and
arpl
rclb
int
leave
push
inc
lods
js
mov
cmp
stos
loopne
inc
pop
enter
mov
das
inc
loopne
fnsave
inc
stos
std
xor
das
mov
fstl
js
inc
dec
fsub
push
mov
loopne
xchg
imul
lret
cmp
mov
js
les
and
clc
adcb
pop
or
sysexit
fbstp
adc
sub
and
pop
cmp
mov
adc
mov
xor
push
and
xor
aam
shll
mov
add
xchg
cmp
test
roll
negb
add
rcrb
dec
fnstsw
popf
jo
mov
cmp
divl
std
or
xor
xor
inc
sub
xchg
adc
addb
stos
jne
xchg
jae
je
mov
mov
sbb
sub
mov
sub
mov
jmp
adc
mov
inc
push
repnz
pop
mov
add
popa
push
sbb
add
add
cmp
es
fimull
aaa
cmp
mov
sbb
add
fptan
push
jg
stc
cwtl
nop
insl
jnp
shll
or
test
out
cmp
decb
movsb
push
insl
aam
lret
popa
push
lods
inc
push
cmp
js
jl
pop
insl
stos
push
push
mov
adc
fsubr
push
sbb
into
repnz
jp
frstor
mov
subb
pop
movsl
pushf
loopne
and
cmp
loopne
hlt
loopne
add
xchg
in
and
mov
iret
cmpsb
inc
fdivrl
or
push
pop
mov
cltd
dec
leave
mov
loopne
adc
xchg
inc
mov
xchg
fdivrl
nop
pop
sbb
mov
jo
sub
pop
jp
lods
push
pop
sbb
sbb
popf
cwtl
push
test
je
mov
int3
bnd
and
mov
outsb
rcl
adc
mov
pop
aad
aam
cwtl
pop
mov
fs
jo
test
cwtl
mov
lock
add
adc
jnp
int
repnz
or
cltd
adc
je
dec
jno
sub
nop
add
or
shll
add
sahf
orb
in
pop
sbb
xchg
mov
jecxz
mov
mov
test
sub
rcrb
and
sbbb
shll
fdivr
and
hlt
shl
xor
mov
cwtl
adc
jo
dec
mov
bound
test
mov
sbb
mov
xorl
add
rcrb
mov
shlb
jns
adc
int3
ds
movsb
lock
push
pop
push
push
cmp
in
mov
gs
test
mov
adc
pusha
mov
sbb
ficompl
sub
in
adc
sbb
mov
lcall
add
in
adc
or
ret
loope
les
insb
jne
es
lret
pop
mov
push
test
xor
mov
sbb
push
dec
adc
push
adc
push
fldenv
adc
jnp
jmp
mov
popf
dec
rcrb
pop
dec
inc
jne
popa
adc
add
and
jo
and
ja
xchg
popa
and
mov
sbbb
lret
jb
sbb
lock
inc
xor
sbb
mov
stc
and
cmp
jbe
xchg
pusha
and
push
and
cmp
xor
pop
shrb
shlb
push
sahf
pop
pusha
int
sub
fiadds
cmp
mov
xchg
in
cmp
inc
arpl
in
dec
adc
cmp
test
nop
cmp
psrlw
sbb
fnstenv
push
sbb
cmp
rolb
in
push
outsl
movsl
aad
pop
popa
popa
test
shll
stos
pop
xchg
push
fcmovbe
push
pop
mov
bound
popa
push
ficoml
iret
mov
mov
sbb
arpl
hlt
and
adc
xor
mov
xchg
dec
xchg
pop
sbb
push
loope
ja
pop
imul
inc
shll
jp
cmp
cmp
mov
stos
fisubl
test
push
in
mov
push
pop
pop
xlat
sub
jmp
xor
clc
cmp
cmp
aam
mov
enter
imul
mov
mov
cmp
arpl
push
rclb
xor
inc
mov
rcrb
mov
arpl
stos
add
nop
dec
inc
fs
sbb
pop
fmuls
pop
scas
cmp
ss
add
sahf
dec
xorb
and
push
pop
fistpl
add
and
mov
fldt
mov
mov
movsl
sbb
xor
lret
rcr
cmp
inc
lret
dec
dec
cwtl
and
in
jle
in
mov
test
jb
cltd
jp
mov
test
aaa
das
push
or
cs
jl
xchg
mov
xlat
scas
fcoml
lea
sub
xchg
mov
daa
dec
dec
arpl
in
pushf
xchg
inc
sbb
gs
test
clc
mov
mov
push
jno
add
sbb
das
leave
imul
pop
scas
cmc
jge
fldl
dec
push
sub
dec
push
int
bound
cmp
incl
repnz
xlat
mov
sbb
dec
and
je
cmp
clc
push
adc
and
push
jecxz
mov
out
dec
and
gs
mov
push
push
test
adc
out
fldenv
scas
xchg
fsubrs
cmp
push
jl
push
lock
popf
and
sahf
mov
sarb
dec
pop
pop
jmp
jo
mov
insl
and
loopne
cmp
sub
sub
pushl
mov
sbb
lock
inc
aam
inc
dec
aaa
pop
xor
dec
pop
push
xor
adc
in
xchg
cvttps2pi
adc
pop
pop
cmp
fiadds
mov
test
xchg
push
cmp
addr16
stc
mov
arpl
push
sbb
cmp
ljmp
jl
xchg
out
or
pop
call
mov
rclb
loope
adc
inc
inc
pop
inc
adc
mov
jbe
or
jae
cmpsb
adc
cmp
dec
in
int
mov
xchg
push
fisubl
stc
lea
lret
jmp
pop
in
mov
adc
jbe
jle
shll
mov
mov
fwait
cmpsb
xlat
xchg
mov
xchg
cmp
mov
mov
push
inc
and
xchg
movsb
data16
and
inc
mov
sbb
dec
nop
adc
or
fisubs
rcrl
lock
mov
mov
movsl
pop
cmp
test
rcr
sti
mov
jge
mov
mov
aam
xor
adc
dec
lcall
jbe
cmp
sbb
fs
fsubr
cmpsb
in
mov
cmp
shr
xchg
out
mov
fcomps
ror
add
mov
xor
sbbb
movsl
scas
daa
jne
inc
daa
push
lahf
cld
loop
jl
je
xchg
insb
fsts
daa
es
mov
fdivs
shl
in
andl
push
dec
insb
es
lock
popa
int3
mov
cmp
dec
lea
mov
pop
and
push
cmp
call
loopne
cld
inc
jo
popa
add
inc
jp
cmpsl
dec
sub
jb
jno
sub
sahf
sbb
mov
scas
popa
push
shrb
test
aaa
outsb
and
inc
in
jns
hlt
or
add
stos
xchg
cmp
pop
push
push
test
jnp
cmp
bound
xlat
sbb
in
mov
insl
mov
add
dec
jo
xchg
adc
push
xor
dec
push
pusha
clc
hlt
inc
push
loopne
dec
test
sub
jmp
dec
insb
sbb
fsub
or
push
ljmp
outsl
in
sbb
fwait
pop
adc
mov
mov
mov
enter
adc
cmp
push
sarl
mov
lcall
mov
cmp
rcl
sbb
dec
and
dec
popf
popl
fs
loopne
mov
jecxz
mov
sbb
dec
mul
mov
push
fidivs
mov
cmpsb
inc
mov
push
push
out
inc
adc
dec
out
xchg
cmp
add
repnz
movsb
fs
repz
in
or
test
push
std
daa
pushf
sti
lret
mov
and
adc
pop
sbb
sbb
jle
inc
cmp
nop
mov
jo
push
dec
sbb
pop
pop
nop
dec
dec
cs
popa
and
mov
jae
xor
scas
fldenv
sub
icebp
dec
cmp
fdivrs
cltd
push
cs
test
mov
xchg
cmp
rcrb
mov
mov
dec
push
orl
cmp
daa
pusha
pop
or
fnstcw
and
push
andl
sub
pop
push
aam
cmp
aaa
and
and
push
xor
nop
sub
push
pop
insb
dec
pop
and
mov
adc
call
in
mov
aaa
xor
pop
xor
arpl
rcrl
mov
pushf
lock
cmpsl
popa
push
dec
push
stos
xchg
je
fistl
aad
push
movsb
pop
rolb
hlt
or
adc
push
bound
jb
repz
sub
mov
cmp
dec
and
and
popa
shl
lods
jne
lock
cs
lods
jmp
lds
cmpsl
add
insb
push
lods
cmpsb
mov
and
fists
mov
cltd
fs
rolb
jl
test
push
call
fcomp
das
adc
jl
in
mov
mov
popa
mov
andb
pop
mov
pop
push
test
xchg
and
pop
jnp
sti
test
bound
lea
loope
mov
insl
jp
outsb
pushf
and
mov
mov
add
xor
ret
test
pop
jl
into
jno
lods
xchg
aad
sbb
jbe
popa
pop
arpl
adc
adc
xchg
fbstp
lret
sbb
cmp
add
and
arpl
xor
mov
and
mov
jo
add
test
rcrl
adc
ja
lahf
call
popa
pop
dec
mov
daa
pusha
mov
xchg
pop
sbb
mov
dec
cmp
xchg
fdivrl
and
frstor
pop
dec
and
outsl
mov
cmp
in
test
adc
decb
sbb
push
pop
daa
dec
aad
fsts
dec
cmp
push
and
push
add
mov
fildll
aad
movsl
icebp
cld
repz
push
cmp
cmp
mov
xchg
pop
mov
mov
test
loop
inc
aaa
mov
push
push
arpl
inc
cmpsb
push
pop
add
inc
sub
pop
out
jmp
ja
divl
lret
je
push
fs
mov
push
and
sbb
je
inc
loope
aad
jns
mov
pcmpeqb
xchg
in
leave
sub
mov
aam
mov
sub
push
dec
sub
scas
cwtl
rcrb
xor
jl
loopne
dec
sahf
test
ss
jns
cmp
fwait
xor
fwait
stc
shll
hlt
int
xor
inc
pop
in
test
push
or
into
inc
sbb
imul
push
rcll
or
mov
sahf
pop
mov
shlb
hlt
xchg
mov
pushf
call
fsubs
jo
enter
mov
mov
lcall
in
mov
lcall
jg
jne
cmp
out
nop
roll
jmp
cmp
int
out
or
movsl
cmp
xor
cmpsl
movsb
mov
cld
jo
sbb
jle
in
cltd
sbbl
mov
cmpsb
mov
fsubl
loopne
pop
ss
jb
arpl
rcll
js
inc
push
push
push
pop
rcrl
dec
xor
shlb
lds
daa
sbb
jno
ret
xor
movsl
sbbb
or
inc
add
pusha
js
push
pop
out
inc
enter
and
sbb
mov
nop
and
sbb
mov
fsubl
mov
xchg
jge
andb
and
xchg
cmp
xchg
call
add
xchg
cmp
mov
adc
mov
in
xlat
les
test
cmp
lahf
in
push
lcall
cmp
dec
mov
pushf
mov
push
stc
bound
pop
daa
outsb
les
push
jbe
xchg
mov
lret
shlb
sbb
cmp
std
clc
lret
jb
popa
mov
cmp
mov
xor
pop
and
mov
sarb
xor
das
mov
imul
out
jns
lods
mov
shlb
or
rcrl
js
aaa
jbe
lret
hlt
or
pusha
and
fnstcw
out
push
repz
mov
jl
push
sbb
or
add
and
mov
fildl
pusha
jo
jg
mov
mov
loopne
sub
cmp
or
movsl
test
inc
sti
insb
shlb
in
lret
adc
jp
sub
and
aam
loopne
sub
fcoms
mov
arpl
pop
cmp
pop
aas
push
pop
and
pop
loop
out
dec
cmp
mov
cmpsb
ffree
xchg
mov
outsb
dec
popf
pusha
or
je
dec
or
in
jns
icebp
pop
pop
inc
call
fstps
cmp
push
and
xchg
xor
jns
sarb
mov
add
int3
dec
cmp
fisttpll
push
xchg
cmp
not
imul
inc
and
mov
fstps
jmp
pop
xlat
loope
cmp
mov
andb
pushf
orb
jae
stos
pop
jns
add
mov
adc
cltd
and
mov
cmc
push
aaa
data16
adc
imul
roll
sbb
cli
in
add
push
lods
cmpb
adc
lcall
aam
inc
add
lret
dec
adc
je
jne
loope
mov
out
mov
jnp
in
cli
push
xchg
test
sub
sti
bound
jp
pop
sbb
sbb
or
in
andl
inc
jae
rorl
and
mov
clc
jmp
fsubl
ds
out
adc
lds
cwtl
cltd
adc
xor
xor
xor
dec
je
in
test
dec
push
das
mov
jl
outsb
les
fwait
jl
mov
imul
in
jg
mov
fdivr
bound
mov
sbb
inc
push
xor
testb
mov
jecxz
mov
ja
andl
sub
inc
push
test
mov
pop
jmp
sbb
ljmp
add
pop
cmp
or
aaa
repnz
cli
jge
out
scas
imul
je
std
fistpl
mov
dec
hlt
push
and
pop
and
jp
jns
sub
xchg
mov
out
test
xchg
push
jo
pop
mov
rcr
dec
fwait
sbb
inc
pop
jo
sub
fs
xor
aas
mov
stos
push
sbb
shrl
xchg
jo
inc
addr16
rcrl
cmpsb
repz
fnstcw
push
aaa
dec
push
repnz
inc
push
loopne
lods
dec
popa
out
enter
cmp
push
jl
mull
cltd
jae
arpl
jne
fmull
call
cmp
fs
insl
rcl
xchg
divl
jbe
or
shlb
xchg
pushf
cwtl
cltd
shll
movsb
out
add
cmp
push
sbb
andb
xchg
cli
in
sbb
in
adc
fdivr
xor
dec
adc
sarb
adc
push
jno
pushf
inc
xor
loope
test
inc
fists
push
push
std
xchg
nop
jl
and
test
mov
movsl
popa
fisubrs
dec
mov
int
push
mov
mov
and
nop
sbb
dec
dec
pop
andl
cmc
inc
adc
into
dec
minps
lock
xor
mov
xlat
fstpt
mov
cmp
xor
jo
lea
dec
mov
jge
mov
rcll
push
push
adc
mov
data16
sti
mov
sbb
into
push
stos
aad
dec
push
xor
test
mov
xor
push
push
int3
test
inc
mov
mov
push
push
test
sub
js
cmp
push
xor
pop
loopne
fildll
xor
inc
push
aad
fldl
mov
loope
rclb
inc
sahf
push
shlb
cmp
push
loop
mov
insl
insb
and
popf
icebp
xor
bound
mov
and
movsl
inc
or
jecxz
lods
add
js
push
add
imull
pop
dec
pop
adc
pop
xor
sarl
cltd
xlat
adc
loopne
in
les
jle
rorb
sub
sub
loop
movsb
xorb
pop
and
jns
or
inc
addr16
shll
adc
inc
imul
or
movsb
popa
int
pushf
inc
rcll
movsb
mov
mov
aad
movsb
in
shl
sbb
aam
dec
inc
jle
pop
mov
fdivs
mov
and
mov
xchg
adc
mov
push
mov
outsl
daa
pusha
je
dec
add
popf
sarb
loop
pushf
hlt
mov
sbb
frstor
xchg
jne
dec
cmpsb
out
sbb
xor
jb
insl
cmp
pop
pop
adc
push
mov
out
subb
lcall
je
push
js
shr
xor
cwtl
loopne
cmp
mov
je
push
cli
mov
in
inc
loope
jg
jb
pusha
aam
dec
adc
cmp
jmp
test
push
cwtl
sub
in
and
shrb
and
sub
shr
sbb
popa
movsb
cmp
jne
dec
ret
adc
sbb
jbe
push
and
fisttpl
pop
enter
pushf
cmp
sub
std
push
fucomp
mov
cs
xor
sub
out
ss
out
add
inc
popa
nop
sarb
dec
and
xorl
jbe
mov
insl
xor
fiadds
mov
cmp
cmp
xchg
push
mov
jecxz
mov
aaa
cwtl
jle
inc
cltd
cltd
shlb
outsb
xor
repnz
shll
cmp
mov
ret
push
fyl2x
out
cmp
mov
in
loop
call
adc
mov
lcall
frstor
mov
xor
sbb
aas
pop
jmp
leave
inc
push
sub
xchg
int3
push
cmp
clc
dec
leave
aam
out
cld
outsl
lods
sbb
pop
stc
or
push
jne
pop
jo
jae
loop
dec
frstor
outsl
enter
cmp
jecxz
inc
sub
add
sbb
push
dec
jg
pop
out
test
push
jl
adc
ja
ret
lret
rorb
outsl
mov
stc
jns
adc
fwait
mov
mov
test
pop
ds
and
loope
ja
xor
jne
aam
in
loopne
cmp
cltd
add
jge
adcb
mov
mov
imul
in
scas
bound
hlt
out
and
mov
movsb
mov
je
pop
cli
or
data16
ficoms
sbb
inc
dec
cmp
or
or
cmc
andl
xor
lds
insl
xchg
inc
test
pop
ss
push
scas
sub
mov
in
push
stos
loopew
inc
sub
cmp
dec
orb
dec
push
adc
xor
aaa
mov
pop
sbb
and
jle
cmp
jb
lods
dec
xor
cmp
pop
fnstcw
mov
sub
in
jne
add
lret
jbe
lods
pop
fstp
sbb
loopne
push
pop
movsb
and
push
les
push
sub
cmp
and
xorb
dec
push
mov
sub
inc
es
pop
shlb
insl
push
inc
sbb
aad
lcall
xchg
push
mov
cmp
pop
cmp
cmp
arpl
dec
pop
addr16
jl
rorb
mov
jg
push
mov
cmpsl
jb
dec
add
jmp
cmpsl
nop
nop
and
ja
inc
ret
hlt
xor
mov
fdivrs
cmp
test
mov
and
ret
jbe
pusha
mov
mov
push
sbb
ljmp
pop
pop
out
leave
movsb
cmp
imul
rorb
aad
jl
aam
ss
mov
pop
cmp
add
stc
aad
xchg
jb
adc
sbb
pop
push
mov
loopne
jmp
sar
inc
dec
inc
inc
dec
mov
adc
pushf
adc
pop
sub
cmp
aam
cwtl
push
cmp
inc
pop
cmc
dec
ljmp
js
xchg
cltd
popa
in
loope
test
mov
cmp
and
mov
das
sarb
cmp
fstl
mov
mov
ja
jmp
cld
cmpsb
sti
mov
fsubs
data16
mov
push
mov
xor
xchg
shlb
cmp
mov
and
mov
sub
xor
lcall
popa
and
daa
loop
fwait
push
je
arpl
cmc
or
nop
push
push
adc
push
mov
rol
test
lea
add
xlat
rcll
pop
cwtl
cmp
and
push
sbb
cmp
jmp
mov
mov
add
sbb
test
aas
push
adc
shlb
rorb
mov
repz
jg
and
cwtl
pop
inc
fs
jae
pop
mov
popf
mov
mov
adc
and
repnz
mov
pop
sub
push
cmp
inc
test
mov
and
dec
arpl
lcall
out
fnstcw
cltd
push
inc
in
xor
dec
jp
inc
movsl
dec
out
sbb
cld
lahf
push
insl
pushf
push
jne
dec
aam
inc
push
sbb
test
stos
inc
imul
movsb
icebp
xor
addr16
xor
rcl
imul
cmpb
inc
int
fiadds
add
mov
jne
jns
cmp
inc
sub
jle
xchg
movsb
mov
test
adc
and
rol
or
and
xchg
pop
int
push
ficoml
test
test
xlat
or
pop
and
inc
aas
sbbl
lcall
mov
add
mov
movsl
aas
repnz
adc
push
movsb
loope
rclb
popa
and
and
push
jmp
shll
push
loop
add
dec
pop
dec
fldcw
adc
sbb
repnz
inc
mov
xor
jne
add
push
mov
mov
out
adc
adc
ds
in
data16
cltd
repnz
sub
stos
repz
loope
or
add
dec
pop
push
int3
xor
aam
jo
sub
in
js
movsl
cmp
inc
lock
clc
bound
arpl
cmp
loope
fstps
sbb
clc
jg
mov
xchg
stos
in
bound
icebp
xor
xchg
cmpsb
sbb
aam
and
cmp
jb
std
scas
lahf
mov
cld
das
mov
shll
mov
mov
dec
push
cmp
push
push
decb
jge
lcall
in
insl
adc
xlat
dec
cltd
sbb
push
ss
arpl
mov
in
adc
aam
pop
xor
sub
jbe,pt
pop
push
hlt
sub
lahf
subb
cmp
repnz
out
insb
adc
sub
push
roll
sbb
dec
xor
aad
inc
pop
cwtl
sub
push
mov
cltd
xlat
pop
insb
xor
jns
push
adc
sbb
adc
ret
pop
je
sub
fistpl
out
mov
cmp
cld
imul
aaa
xor
dec
sti
dec
cmc
sbb
in
test
int3
adc
dec
xor
xor
jnp
out
cmp
jb
mov
aad
pop
push
stc
sub
testb
mov
aad
cmpsl
nop
mov
je
pop
mov
dec
and
push
hlt
push
movsb
lock
pop
inc
add
aad
sbb
adc
pusha
mov
inc
and
loop
push
sub
scas
mov
mov
cmp
bound
out
rolb
loope
add
pop
xchg
adc
xchg
enter
push
mov
sbb
add
push
dec
or
xor
cs
add
sbb
cmp
jge
sub
stos
lea
out
or
or
cmp
popaw
inc
pop
jb
mov
mov
ljmp
test
dec
add
mov
scas
aaa
sub
insb
mov
in
pop
jne
aam
cmp
js
fs
in
xorb
xor
pop
sti
js
cmp
push
pop
outsb
repnz
jno
ret
jl
cli
les
adc
cmp
imul
cmc
and
call
inc
stc
adc
adc
adc
push
lea
movsl
pop
cltd
js
sub
lea
in
loope
mov
mov
sbb
rcrl
jmp
push
stos
movsl
lock
pop
pop
nop
dec
les
out
push
push
cmp
inc
repz
repz
lods
mov
aad
shlb
dec
jns
jle
cmp
sub
loope
and
pop
leave
shrl
imul
out
mov
mov
xor
jle
dec
daa
call
pop
pop
cmp
jae
jbe
sub
sub
cmp
pop
inc
andb
adc
bound
mov
pop
jge
arpl
and
cmp
popf
dec
xor
out
ret
xor
push
sbb
pop
cmp
repz
or
shlb
dec
nop
and
dec
and
inc
out
pop
ljmp
pop
repz
adc
faddp
mov
xchg
mov
ds
shrl
sub
push
xor
movsl
jle
jle
mov
dec
rcrl
push
mov
jne
or
or
sub
or
push
icebp
pushf
mov
cld
add
mov
and
hlt
inc
subl
imul
sbb
cs
jo
nop
in
jne
jecxz
pop
dec
push
mov
sahf
inc
cmp
stos
call
and
mov
test
cmp
mov
dec
sbb
xlat
mov
test
inc
mov
dec
pushf
or
nop
cmp
arpl
and
add
sbb
shl
popa
xor
and
fnstcw
std
ret
jecxz
push
xchg
cmp
dec
testb
stos
movsb
xchg
adc
nop
cmp
rclb
and
arpl
adc
and
dec
mov
mov
es
loopne
xor
cmpsl
and
mov
fsubl
in
test
daa
movsl
jecxz
cmp
push
add
pop
pop
popf
outsb
data16
lods
es
je
push
repnz
pushf
iret
jmp
ds
inc
jecxz
ret
mov
out
mov
imul
adc
pop
lock
jg
fdivl
cmpsl
dec
test
repz
add
mov
movsb
pushf
insb
subb
mov
aam
cs
popa
dec
test
dec
out
or
adc
push
cmpsb
mov
dec
mov
movsl
inc
pop
pop
ljmp
and
pushf
dec
sub
push
adc
xlat
inc
cltd
rcr
insb
add
xchg
mov
and
push
clc
in
inc
pop
pop
mov
loopne
push
int3
mov
ljmp
xchg
sub
jmp
pop
xor
imul
mov
xchg
xchg
sub
xorl
les
enter
adcl
dec
icebp
jmp
aas
popa
je
fs
xor
in
bnd
aaa
in
out
jmp
adc
jl
movsb
and
add
inc
pop
loope
mov
int3
or
pop
or
xchg
pusha
std
loope,pt
jle
sbb
pop
add
mov
fcmovnu
jo
jecxz
pop
movsl
outsb
push
cmp
fistpll
fwait
rclb
dec
aam
call
sbb
movsb
scas
jne
and
cwtl
and
xchg
or
data16
mov
xchg
and
xchg
rcll
and
jb
sub
out
pop
lods
ret
pop
pop
cmp
aas
insb
shlb
pop
out
sbb
lcall
mov
fnsetpm(287
insb
pop
mov
cmp
mov
jns
iret
push
pop
xchg
aas
add
xor
loope
jp
jge
xchg
mov
bound
jmp
cmp
adc
adc
push
mov
fsubr
inc
lahf
lods
fucomp
nop
andb
adc
dec
rcr
jnp
pop
mov
add
je
mov
and
insb
adc
inc
fwait
fwait
add
jl
jle
test
bound
jle
and
arpl
push
xchg
jge
pop
mov
fdivr
push
popf
mov
pop
cmp
sub
inc
adc
rcr
push
bnd
ret
cmpsl
adc
insb
je
and
in
and
fisttpll
mov
inc
pop
daa
dec
add
mov
loope
sub
ja
push
and
adc
and
push
push
and
cmp
xor
ret
data16
dec
and
outsb
lcallw
loopne
inc
xor
cmc
inc
mov
bound
push
xchg
jae
fdiv
cmp
fsubl
inc
pushf
cmp
ss
loope
add
inc
addr16
cmp
sbb
push
movsb
fmuls
out
sbb
jo
mov
cmp
adc
or
push
roll
cmpsb
aaa
mov
and
push
call
push
aam
cmp
and
mov
pop
outsl
out
and
mulb
dec
add
dec
ret
orb
lcall
mov
dec
icebp
mov
cmp
subb
pop
dec
xor
xchg
xchg
adc
or
cmpsb
sub
popa
mov
hlt
bound
mov
inc
lds
inc
pop
pop
dec
mov
popa
repnz
cmp
movsb
sbb
mov
incl
mov
jns
dec
mov
jl
nop
mov
jno
push
add
mov
insl
popf
sub
cwtl
cmpb
fldenv
or
xor
popf
jns
jge
push
sub
xchg
sub
mov
lds
jl
jne
push
loopne
scas
out
inc
pop
mov
ja
or
jmp
sahf
pop
push
adc
pop
sbb
sbb
xor
adc
inc
mov
sub
mov
hlt
push
cmp
pop
cmp
mov
ret
sub
popf
push
dec
js
aam
inc
das
mov
jne
pop
xchg
into
lahf
jl
adc
enter
in
push
mov
inc
push
cmp
dec
arpl
adc
js
pop
ja
dec
icebp
xchg
pop
nop
push
xchg
add
jle
adc
pop
jns
add
or
lahf
repnz
std
mov
dec
aad
in
rolb
mov
and
enter
movsl
push
in
subb
xor
cmp
shrl
mov
mov
rol
je
xchg
cmp
lahf
popa
lahf
inc
mov
xor
in
addr16
xor
js
add
pop
mov
test
mov
les
or
test
pop
dec
inc
and
cwtl
cmp
cmpl
js
adc
or
test
inc
push
xchg
jo
jnp
sbb
sub
test
bound
xchg
lret
adc
test
psubusw
mul
aad
and
inc
nop
mov
mov
xchg
lock
ret
push
xlat
dec
push
lcall
loopne
pop
mov
std
jecxz
xchg
cmp
jne
fwait
lret
mov
aad
and
cmp
xor
mov
xchg
in
aad
shl
adc
xor
fwait
test
adc
fwait
movsb
andl
mov
xchg
sbb
punpcklbw
push
xor
je
pop
adc
fsubrs
cmpb
loop
lret
gs
shrl
sti
add
fcompl
sbb
nop
sti
sub
mov
movsl
mov
cmpsl
sbb
push
mov
push
inc
imul
pushf
pop
leave
cmpsl
xchg
fs
xchg
loopne
sub
gs
sbb
jp
fistl
dec
cmp
cmc
xchg
inc
js
jl
jnp
mov
mov
push
mov
cwtl
pop
nop
das
negb
mov
sbb
inc
jne
dec
or
sahf
xor
sahf
push
lock
xchg
adc
movsb
mov
dec
lods
pop
lods
xor
imul
dec
icebp
add
push
dec
adc
pop
and
aam
sti
sbb
push
push
inc
sbb
in
xchg
iret
rolb
add
push
movsl
push
push
std
mov
xchg
jnp
repnz
rcrb
push
inc
test
add
mov
cmp
call
fmuls
clc
fnstsw
add
enter
adc
cmc
dec
mov
dec
cmp
loopne
inc
xor
pop
cmc
inc
adc
arpl
mulb
lcall
sbb
cmp
cltd
sub
and
ljmp
add
in
cmp
andb
fildll
cmpsl
addl
jge
push
jp
jge
jno
in
and
mov
mov
adc
mov
out
inc
jne
xor
cmp
dec
cli
ljmp
dec
lret
ss
ror
mov
stos
sbb
hlt
loope
int
neg
cmp
add
fcoml
adc
push
lcall
pop
inc
imul
cmp
daa
mov
and
and
gs
sti
fidivl
push
loopne
inc
xor
mov
and
dec
or
push
or
orb
clc
popa
inc
loope
stos
add
and
das
pop
inc
pop
mulps
adc
xor
push
aam
and
cmp
xchg
popa
inc
or
mul
xchg
mov
and
popa
and
jmp
push
dec
jne
xor
aas
pause
or
loopne
leave
daa
sbb
sub
inc
add
pop
pop
mov
cmp
je
pop
std
inc
popf
pop
popa
loope,pn
fs
in
inc
cli
int3
mov
fsubrp
bound
add
addr16
dec
lock
dec
bound
frstor
cmp
sub
ret
in
popa
imul
mov
into
incl
or
dec
arpl
add
pop
dec
cmp
in
in
jne
push
adc
jbe
rcl
or
dec
push
xchg
cmpsl
or
data16
and
or
pushf
adc
test
loope
and
scas
sbb
adc
jne
repnz
lret
andb
pop
or
xchg
inc
mov
nop
das
xlat
sub
cwtl
push
test
mov
dec
or
mov
je
nop
scas
ret
adc
in
inc
pop
pop
shl
lock
jmp
arpl
jbe
pop
jg
cwtl
ss
es
push
test
notb
xchg
or
cmp
aad
mov
fwait
ds
cmpsb
pop
mov
dec
mov
neg
stos
and
insb
out
in
xchg
or
pop
and
xchg
pop
call
mov
sarb
mov
cmp
sub
push
jb
arpl
pop
cmp
imul
sbb
mov
xlat
jne
cmp
pushf
add
and
fcompl
xchg
fadd
out
pop
cmp
xor
jle
add
adc
inc
push
and
xchg
fisubs
inc
popf
mov
fstl
sub
jb
inc
cwtl
mov
and
fisttps
jne
into
sub
dec
neg
rcr
fs
rcll
push
xor
sub
out
addb
pop
scas
dec
lock
lret
jo
test
xchg
mov
repz
pop
movsb
icebp
repz
aaa
jns
xor
add
shlb
pop
jo
mov
jle
andb
movsb
adcb
lret
xchg
out
xchg
xor
loopne
and
inc
and
push
add
aam
mov
mov
jge
adc
or
insb
dec
cmp
jns
pop
cmp
fwait
rorl
sbb
sbb
adc
xchg
jo
jo
out
adc
je
mov
lds
lcall
mov
js
push
mov
fsubr
sub
in
fwait
add
jb
pop
nop
pop
loope
sub
add
arpl
stos
cld
psrlq
test
mov
addr16
jne
adc
sbb
out
into
fsubs
out
popa
sarb
lcall
mov
mov
enter
xchg
test
adc
sbb
cmp
shlb
in
and
out
inc
pop
push
mov
call
or
pop
or
loope
fcoml
icebp
sarl
jmp
in
rorb
addl
mov
popa
or
and
setl
dec
jae
jmp
scas
push
and
loop
js
shlb
test
fxch
imul
mov
and
in
lcall
loopne
and
push
in
in
xchg
xlat
cmp
push
shl
js
scas
xor
mov
test
aam
aaa
repnz
mov
scas
and
sub
dec
or
xchg
jno
rcrb
daa
xchg
movb
sbb
pop
lret
mov
lret
fs
cltd
cmp
inc
mov
and
pop
in
or
pop
mov
fdivrp
popa
mov
mov
in
pop
shrb
sbb
mov
ss
outsb
mov
jl
pop
sbb
push
cmp
lds
dec
jg
fsts
fwait
pusha
je
imul
dec
inc
push
popf
aam
mov
and
push
loop
imul
dec
pop
lock
sti
dec
nop
stos
sbb
shlb
mov
dec
jge
shl
hlt
cmp
sbb
mov
and
push
inc
dec
xor
repz
arpl
into
pop
adc
cmp
pop
jl
mov
bound
mov
and
cmp
mov
lcall
lods
clc
xorb
int
pop
or
pop
cmp
adc
adcb
repz
sub
cmpsb
arpl
push
decb
lods
mov
test
jno
ja
repnz
inc
cs
mull
fsubs
inc
imul
test
arpl
push
jnp
mov
bound
ret
aam
mov
fdivl
fadds
stos
mov
jb
jne
fnstcw
push
pop
pop
or
in
jb
je
test
jmp
nop
int3
push
fstpt
sub
push
inc
adc
inc
ret
mov
dec
inc
loopne
scas
movsl
loopne
loope
sbb
mov
sbb
scas
inc
xor
push
rcll
dec
dec
sbbb
mov
adc
or
int3
mov
fwait
sbb
cwtl
push
ss
out
jne
pop
or
push
stc
test
dec
test
mov
ss
cmp
or
mov
push
jmp
lcall
and
icebp
lret
repnz
jae
testb
jle
or
cmp
mov
add
fisubs
cmp
fsts
sarb
ss
sarb
fmull
jle
fwait
jge
mov
out
cmp
bound
into
popa
cmp
iret
and
adc
sbb
lods
fldcw
dec
and
jl
test
mov
lods
and
xor
push
fs
pop
scas
cmp
jmp
and
lret
imul
mov
cmc
icebp
test
test
fadd
mov
cmp
repz
cwtl
fmull
jl
in
mov
lods
rcrl
fs
cmp
fsts
je
sbb
popl
lret
bound
cmp
rcl
popf
add
hlt
xor
insb
xchg
xor
sbb
xchg
out
sbb
xor
iret
push
and
or
or
enter
mov
inc
arpl
pop
add
shrb
push
xchg
cmp
decl
jo
mov
ss
push
leave
push
jne
shll
pop
dec
jecxz
movsl
mov
sbb
cmpsl
pop
jbe
push
sbb
pushf
or
test
icebp
dec
and
stos
mov
mov
inc
loopne
adc
mov
jne
and
xor
ja
inc
push
sbb
xor
aad
and
arpl
pop
adc
imul
ret
je
pop
lea
out
jns
add
lock
mov
imul
push
cmpsb
jecxz
je
sbb
add
adc
xorb
lods
pusha
cmp
stc
cmp
pop
leave
jecxz
ja
je
jo
ja
mov
mov
rcr
and
or
mov
pop
in
dec
fldenv
or
test
loope
stos
mov
or
push
dec
cld
je
pop
sti
dec
lds
xor
dec
pop
loop
lods
lods
push
mov
aam
and
inc
jge
push
rcrb
dec
sbb
cmp
pop
dec
jbe
xlat
push
lahf
icebp
mov
movsl
inc
xlat
mov
test
xchg
jle
mov
int3
xchg
mov
fwait
mov
stos
lds
pushf
lahf
arpl
jns
lds
mov
sbb
fnstsw
pop
mov
jne
test
cs
sahf
and
pop
ja
sbb
sub
mov
cmp
out
imul
out
add
dec
test
mov
cmp
test
rcrl
imul
fwait
adcl
call
decb
push
pop
in
ftst
inc
loopne
mov
and
push
jo
xchg
aad
js
and
or
cmp
jmp
jns
jns
jne
push
push
movsl
jns
and
repz
mov
test
stos
cmp
mov
cld
sbb
cmp
push
out
inc
bound
nop
rep
addr16
sbb
and
pop
inc
xor
cmp
repnz
pop
ja
es
push
pop
in
js
mov
xchg
and
adc
fwait
push
loopne
mov
adc
dec
jge
inc
sub
insb
cmp
scas
and
xor
nop
pop
mov
out
add
hlt
outsl
mov
test
addr16
pop
pop
jl
cmp
mov
stos
neg
movsb
mov
xor
inc
insl
loop
and
adc
xorb
sub
nop
add
inc
fldl
xchg
hlt
push
mov
clc
daa
fcmovnb
pushf
or
fldt
std
std
hlt
push
push
adc
pop
pop
std
inc
data16
mov
pop
int3
je
add
outsb
jge
push
or
mov
shlb
inc
stos
test
push
add
pop
fimuls
and
rclb
cmc
bound
addr16
shr
adc
cmp
rclb
xchg
mov
add
mov
mov
push
jge
or
xor
pop
cmp
mov
aaa
jo
into
lds
fistl
dec
popa
sub
and
mov
dec
shlb
jne
cmp
cmp
push
jbe
cwtl
xchg
xchg
jo
xchg
mov
cmp
or
fldenv
adc
scas
inc
and
sbb
push
add
inc
sti
cmp
cltd
cwtl
push
jge
push
nop
xor
lret
jl
mov
lahf
xor
jge
and
out
cmp
jnp
sarb
in
movsl
and
xlat
jmp
inc
rolb
sbb
cwtl
xchg
push
outsb
adc
jo
dec
sbb
out
xor
inc
int3
jg
push
repnz
hlt
sbb
std
push
or
dec
adc
mov
les
mov
xchg
push
sbb
mov
xchg
pop
mov
sti
idivb
mov
and
mov
into
out
mov
cs
nop
push
push
xchg
loopne
sub
pusha
jge
or
nop
cmp
push
scas
popa
xor
cmpb
push
xchg
imul
stos
shll
and
push
inc
dec
out
loopne
sbb
xchg
in
popa
cwtl
cmp
js
xor
mov
data16
push
or
pop
pusha
mov
pop
pop
arpl
adc
imul
jp
xchg
loop
aam
loopne
cmp
adc
xlat
xor
pop
push
sbb
lods
nop
mov
lcall
push
adc
jb
and
sahf
cmp
pushf
popa
fnstsw
sbb
mov
arpl
lret
in
sbb
or
push
sbb
fdivr
fcomps
sbb
lahf
aam
pop
jo
add
in
gs
bound
clc
inc
ret
nop
rcll
dec
inc
jle
dec
nop
mov
mov
and
xorb
addr16
and
add
loop
nop
movsl
sbb
rcll
iret
xor
incb
xor
dec
inc
loop
jb
mov
lahf
xchg
int3
inc
sahf
inc
fldl
test
sti
jl
movsb
inc
sbbl
stos
cli
sbb
cmp
and
in
pop
sub
cmp
cmpsl
inc
ret
div
fdivs
mov
sbb
adc
jne
lcall
mov
jne
xchg
push
sbb
popa
aad
adc
inc
jp
pop
loope
fld
scas
aaa
sbb
std
mov
outsb
jg
ret
jbe
jbe
xchg
mov
leave
vmovd
aaa
lret
mov
repnz
call
popa
xchg
ret
pcmpeqd
daa
hlt
ljmp
push
test
in
loopne
aas
mov
sbb
push
pop
or
dec
pop
mov
popa
inc
popa
cmp
loopne
jo
ljmp
mov
rorb
dec
cmp
ficompl
loopne
loopne
or
daa
pop
or
dec
adc
in
jno,pt
fmuls
test
push
andl
fisubl
push
inc
add
add
pop
inc
add
mov
in
push
movsl
dec
cmp
jns
jg
cmp
cmp
mov
xchg
jbe
adc
lahf
cmp
scas
pop
popa
pop
das
jns
mov
jb
push
fsts
inc
sbb
sahf
inc
mov
andb
dec
add
xor
aas
adc
dec
pop
pop
inc
cmp
and
cmp
add
cltd
sbb
cmp
cmp
xchg
cs
or
pop
cld
push
out
mov
push
or
ret
test
pop
mov
or
sub
aam
cmp
popf
jmp
push
cmpsl
inc
jnp
loop
stos
repz
cmp
jl
mov
loop
push
push
cmp
orb
mov
pop
or
mov
adc
cmp
outsb
fdivs
je
arpl
pop
aad
add
pop
xchg
and
adc
push
adc
pusha
dec
clc
lcall
push
stc
into
data16
lds
push
ja
push
mov
rcl
aam
adc
das
or
movsl
push
in
xor
mov
fdivrl
mov
pushf
lods
fwait
scas
jmp
addr16
or
ret
jnp
les
mov
xor
sti
stc
lcall
inc
sub
cmp
sub
test
lret
push
out
enter
pushf
xor
push
cmp
inc
or
sarb
daa
add
push
cltd
mov
pop
and
push
sub
jne
not
jnp
test
cltd
jl
xchg
ja
mov
mov
and
mov
xchg
arpl
cmc
xor
incl
jp
pop
addr16
adc
and
clc
flds
sarl
cmp
sbb
pop
inc
adc
pop
add
and
in
pop
sbb
fwait
and
mov
std
fstl
fnstcw
xchg
out
hlt
fiaddl
push
lock
sub
jno
fstpt
out
xor
imul
xor
je
cli
mov
scas
mov
jb
mov
sub
inc
out
stos
push
xor
jmp
dec
or
pushf
and
jmp
mov
sub
sbb
cltd
pop
cmp
push
aad
sub
out
cltd
shr
out
scas
rclb
js
lahf
in
pop
mov
andb
fsubl
mov
test
mov
mov
mov
xchg
lret
jo
jle
lcall
in
jnp
jae
arpl
lock
or
push
jo
push
rcll
push
mov
shll
inc
inc
add
cs
dec
in
add
outsb
push
call
adcb
sub
jb
cmpsb
in
aam
jo
mov
hlt
jge
push
jne
add
mov
xor
inc
dec
push
jmp
fsubrl
lock
sub
inc
lahf
push
sbb
cmp
pop
dec
adc
cmp
push
mov
xchg
jno
and
popa
xor
insb
push
jo
js
dec
aas
xchg
mov
in
int3
adc
adc
cmp
aam
mov
je
sbb
out
std
int3
pop
iret
pop
outsl
xor
or
rorl
shlb
xor
sub
fbstp
out
incl
push
loop
aas
dec
push
or
lds
adc
jb
jo
repz
inc
sub
outsb
sbb
push
adc
and
fdivl
int
xor
inc
and
lret
jmp
es
jno
pop
hlt
sub
mov
pop
ja
mov
mov
sub
shlb
push
cs
push
and
mov
das
fstpl
xchg
stc
xchg
mov
or
mov
inc
insb
icebp
clc
xchg
push
pop
and
cmpsb
das
in
mov
mov
sub
add
cmp
or
xchg
jo
jno
dec
lock
inc
test
adc
sbb
test
mov
sar
pop
add
inc
hlt
pop
jns
stc
pop
test
mov
push
mov
xorl
cwtl
mov
bound
mov
fs
pushf
xchg
je
dec
jno
xor
imul
lock
jge
jnp
xor
in
xchg
inc
mov
sahf
pusha
xchg
clc
popf
pusha
xchg
nop
jne
andl
push
dec
adc
pop
gs
add
xor
xchg
and
xor
and
lret
mov
cmp
hlt
mov
sbb
adc
push
cmpsb
mov
sbb
mov
mov
and
cmp
movsb
ljmp
and
clc
jb
add
aam
hlt
lods
rclb
sbb
and
xor
in
xchg
mov
je
fstps
mov
mov
pushf
pop
xor
pop
ljmp
adc
sub
rcll
insb
loopne
pusha
mov
jle
fimull
ja
xor
add
test
inc
jno
pop
xorl
or
sbb
cmpb
jmp
dec
sbb
aam
movsb
popf
mov
bound
in
xor
pop
sbb
in
arpl
xor
push
jne
or
sbb
loope
jmp
into
out
or
les
lock
or
jg
push
pop
lcall
cmp
xor
dec
xlat
in
sbb
sbb
mov
in
push
or
mov
in
cld
movb
mov
mov
into
mull
sarl
and
enter
jbe
out
and
sbb
xor
or
fiaddl
sarl
aad
xor
push
pop
cmp
inc
xchg
cmp
popa
addr16
xor
pop
inc
dec
inc
fbld
xor
dec
xor
in
xchg
out
adc
jmp
pop
mov
call
sarb
clc
mov
adc
push
mov
dec
stos
imul
sarl
sbb
sbb
mov
insl
xchg
or
int
sub
ret
fsts
inc
and
and
pop
add
xor
stc
inc
and
ja
xor
aam
dec
cmp
sub
add
mov
xor
pop
fsubl
sub
popa
or
and
jne
popa
cld
hlt
hlt
int3
mov
fsubrs
cltd
in
imul
clc
insb
adc
or
sarb
in
dec
add
sub
repnz
jae
jo
outsl
insb
je
ret
adcl
fistpl
mov
mov
jg
out
lods
cmp
dec
push
push
das
sbb
mov
or
out
mov
mov
fmuls
xchg
jl
out
adc
cwtl
ds
sbb
fadds
jg
inc
fldt
int3
fwait
sbb
in
mov
cld
jg
aas
out
pop
mov
push
pop
in
inc
aas
roll
out
xchg
lods
mov
aad
or
sub
cmp
sbb
xor
call
repz
addr16
cmp
call
jmp
fdivr
add
pop
out
bound
push
int3
das
ja
popf
xchg
pop
ljmp
jb
sub
pop
cmp
sub
sahf
fiadds
and
aaa
xor
sahf
cmp
inc
orl
aam
imul
push
and
dec
out
mov
sub
aas
lods
pop
ror
xchg
dec
cmp
jle
xlat
repnz
jb
inc
sub
pushf
addl
and
adc
push
xchg
out
stos
movsb
xchg
idiv
cmp
add
daa
xor
popa
shr
jg
xchg
mov
cwtl
jno
push
xchg
pushf
cltd
loope
or
sahf
pop
sbb
movsb
jge
xorb
lds
and
mov
inc
scas
filds
cmpsl
add
fdivrs
ret
sahf
sti
adc
dec
xchg
aaa
cs
and
es
push
std
aaa
and
and
pop
stc
adc
call
dec
jg
mov
movl
inc
lea
movsl
or
cwtl
cmp
in
repnz
call
mov
es
jno
je,pn
mov
mov
push
mov
in
pop
inc
and
pop
or
test
xor
fistpl
nop
adc
xor
and
enter
fidivrs
push
or
inc
xlat
fwait
adc
pop
dec
pop
cmpsl
add
and
pop
hlt
js
jno
outsl
push
insl
aam
movsb
xor
fbstp
push
cmp
outsb
or
and
and
and
aas
lods
outsb
pop
push
mov
mov
pop
sahf
xor
and
inc
cld
xchg
mov
push
add
push
ss
dec
fnstcw
loopne
jno
loope
cli
push
push
out
pop
pusha
cmp
pop
fnstcw
orl
cmp
add
cmp
xor
lahf
jl
test
out
mulb
add
xchg
nop
push
xchg
add
lret
push
adc
pop
inc
dec
jg
xchg
pop
xchg
cmp
fildll
fldt
mov
movl
push
leave
lcall
add
rol
sahf
mov
jmp
outsl
xchg
stos
or
pop
lcall
xor
inc
push
push
and
push
fmull
out
push
pop
cmp
push
ret
in
mov
add
imulb
and
scas
add
mov
mov
jge
aam
test
cmp
fnstenv
cmp
dec
push
push
data16
jnp
jnp
sub
add
mov
inc
or
aam
ja
xchg
xor
aad
inc
scas
xor
dec
push
mov
xor
aaa
push
inc
aas
pop
aad
fiaddl
adc
les
dec
sbb
jge
inc
lods
dec
fsubrs
mov
mov
test
jno
rorb
neg
scas
and
mov
mov
and
je
rolb
gs
je,pn
cmp
popf
iret
into
out
mov
jne
and
cltd
ss
jge
mov
ja
sbb
push
mov
loope
mov
xchg
aam
inc
dec
inc
push
insb
pop
mov
orb
adc
mov
imul
pop
scas
mov
aad
cmp
dec
adcb
pop
out
push
sub
out
mov
repz
icebp
addr16
adc
call
mov
inc
xchg
push
loope,pt
push
and
or
push
xchg
pop
sbb
clc
test
das
jmp
xor
nop
daa
mov
adc
inc
fbstp
push
ret
mov
jl
adc
push
cmp
xor
or
enter
dec
push
and
cltd
dec
add
adc
movsb
cli
nop
clc
jp
jge
push
mov
mov
cmp
lock
fstpt
divl
fmuls
xchg
dec
sahf
pop
xchg
popa
imul
out
dec
das
adc
pop
jnp
jb
mov
cs
arpl
jbe
xor
jbe
xchg
xlat
out
cmp
mov
or
jl
test
adc
jbe
and
sub
xor
sub
mov
cmc
dec
negb
ss
mov
repnz
push
mov
xchg
push
pop
or
das
adc
lahf
ret
std
ror
xor
loop
pop
push
sbbb
aam
cltd
and
dec
popa
mov
outsb
and
stc
cld
mov
xchg
lret
nop
scas
and
push
cmp
lret
loopne
adc
xor
or
data16
xchg
movsl
out
mov
cmpsl
in
mov
or
lods
pop
xchg
xor
cs
aaa
int
jg
inc
gs
xchg
inc
loope
sub
ss
outsb
mov
inc
mov
push
sub
out
ds
mov
out
sub
mov
pop
push
pop
mov
or
insl
leave
sbb
and
shrb
mov
xchg
mov
enter
and
mov
cmp
nop
sbb
mov
frstor
push
lret
sahf
mov
cmp
jbe
arpl
dec
dec
or
adc
test
inc
push
adc
ds
or
xor
jg
movsb
mov
mov
adc
mov
jecxz
data16
push
cmp
jo
dec
or
inc
hlt
pushf
out
or
cmp
xchg
mov
rolb
xor
es
mov
lods
sarb
fs
in
mov
je
xchg
aam
cs
sub
pop
pop
mov
jmp
sbb
rorb
mov
adc
sub
push
dec
fdivrl
inc
mov
ret
sbb
ja
gs
sahf
cmpsl
pop
cmp
mov
adc
adc
jae
dec
dec
adc
or
jge
adc
bound
fmuls
bound
adc
mov
xchg
jg
aas
std
les
mov
xchg
cmp
lods
adc
add
dec
daa
cmp
sbb
mov
xor
scas
adc
xchg
sti
out
or
pop
and
cli
and
inc
push
pop
mov
push
xor
xlat
pusha
jo
inc
push
dec
sbb
dec
inc
imul
cld
cmp
cs
pusha
adc
mov
pop
rorb
and
add
sarb
sbb
mov
and
dec
addr16
loop
dec
jne
fbld
xor
and
notb
ds
inc
cmp
pushf
add
adc
sti
fcompl
push
in
jl
divl
fmull
inc
add
loopne
mov
jnp
jl
rcrb
mov
cmp
aam
and
int
pusha
outsl
jbe
fisttps
addb
mov
sahf
jae
ss
xor
mov
cmpsl
or
scas
movsl
mov
sbb
sarl
xchg
sub
scas
repnz
jecxz
pop
cltd
cmpl
dec
push
and
or
push
jle
mov
jmp
enter
jne
pusha
pop
mov
jno
cwtl
lret
fwait
or
and
imul
inc
sti
popa
pop
and
popf
jle
movsb
push
cmp
das
iret
jno
add
xor
xchg
inc
cmp
push
imul
std
inc
pop
pop
inc
adc
icebp
pop
cmp
mov
cmc
inc
pop
mov
push
xchg
jb
jmp
cmp
mov
dec
xchg
aas
inc
cmp
dec
outsl
push
mov
cs
dec
aam
bsf
add
popa
sub
inc
mov
das
dec
lret
add
sub
popf
in
bound
rolb
sbb
or
sbbl
pop
rcl
sbb
sbbb
adc
pop
leave
aam
clc
test
xlat
jns
inc
xchg
mov
mov
pop
adc
xlat
popl
fmull
sbb
inc
mov
stos
pop
jl
pop
es
mov
loopne
cmp
add
bound
in
fimull
stos
aaa
pusha
jmp
dec
pop
test
leave
daa
movsb
loopne
cmpsl
pop
insb
and
sub
sbb
rol
out
test
ret
pop
js
cmp
push
call
cmp
std
xor
cmp
mov
fcmovbe
xor
adc
fisubl
bound
mov
into
pop
add
jbe
inc
sub
leave
mov
pop
push
test
inc
push
mov
cli
jno
dec
adc
jnp
sbb
dec
aad
daa
jle
cmp
jbe
movsl
mov
push
jl
lret
inc
or
or
fsubs
leave
insl
lods
subl
lret
cmp
ja
inc
pop
lret
inc
cli
jge
inc
mov
test
fcoms
cmpsl
ja
cmpsb
int3
lahf
sbb
bound
adc
loope
addr16
insb
fnstcw
lcall
adc
sbb
or
cmp
subl
insl
fwait
mov
and
cmp
mov
push
gs
fmull
dec
dec
and
in
sbb
cltd
jns
fcoml
pop
jecxz
ret
dec
shlb
push
cli
cmc
div
and
cmp
and
sbb
popw
sti
mov
aas
in
aam
sahf
cmp
dec
dec
fstpt
xor
lods
ja
and
and
or
jnp
xor
nop
es
mov
sbb
mov
pop
arpl
aad
imul
ffree
dec
mov
jns
stc
sbbl
mov
mov
jbe
std
xor
cmp
scas
arpl
fstpt
xor
aad
inc
pop
mov
adc
shll
loope
cmp
in
adc
stc
pop
pop
addr16
ja
and
cmp
loopne
loop
pop
lcall
inc
push
adc
dec
mov
adc
push
outsl
imul
enter
xor
mov
movsb
sbb
mov
imul
cmp
inc
inc
and
push
mov
adc
inc
shl
jmp
seto
or
aam
or
add
cmp
hlt
loope
or
sahf
shlb
fwait
insl
add
insb
cmp
lods
in
cmp
pop
cmp
addr16
decl
push
in
push
in
push
repnz
inc
xchg
push
push
loopne
sub
orb
push
cmp
addr16
pop
or
insb
dec
cmp
ret
cld
cmp
aaa
xchg
stos
sbb
and
mov
bound
push
loopne
loopne
sbb
sub
je
or
or
leave
sahf
mov
test
arpl
jle
push
push
je
xor
push
rolb
scas
inc
and
adc
mov
jl
sbb
sub
dec
adc
jecxz
mov
fnstenv
jo
sahf
push
mov
movsl
fs
sahf
add
inc
push
es
leave
cmc
call
pop
int
ret
cs
loopne
mov
mov
stos
aad
mov
pop
sbbb
movsl
xchg
jg
imul
mov
pop
cmp
icebp
jae
push
in
imul
cmc
xor
int3
cltd
or
int3
adc
cld
je
cltd
mov
in
loopne
cmp
inc
sub
loopne
xchg
adc
pop
push
dec
rcl
add
pop
mov
and
dec
std
mov
fbstp
adc
je
popa
mov
lret
mov
cmp
in
xchg
mov
test
xchg
or
cmp
ss
test
lods
es
scas
dec
shr
pcmpgtd
pop
hlt
aaa
lcall
in
mov
xlat
inc
inc
jle
jg
dec
sbb
cli
push
xchg
pusha
inc
mov
in
mov
dec
adc
pop
lock
stos
stos
mov
data16
cld
jae
xor
push
mov
repz
outsb
repz
inc
imul
pushf
test
in
xchg
pop
ret
nop
imul
in
mov
outsl
stos
ficoms
inc
push
in
mov
fmuls
jo
add
aas
mov
sub
out
jne
xorb
cmp
dec
in
inc
loopne
mov
fldt
adc
sbb
leave
imul
push
cmp
pop
adc
aaa
repnz
aaa
data16
sbb
pop
mov
mov
inc
popa
sub
cmpsb
xchg
insb
aas
loope
and
and
orl
xor
movsl
and
popf
imul
inc
sbb
pop
or
lahf
hlt
hlt
or
push
movsl
icebp
push
mov
fisubrl
scas
mov
mov
xor
push
inc
test
xor
jo
and
loopne
xchg
loopne
cmp
sbb
cwtl
push
out
push
fwait
ss
jecxz
orb
xchg
rcll
imul
outsl
out
mov
xchg
subl
xchg
adc
push
push
mov
movsb
mov
mov
sarb
lock
popa
jne
dec
scas
sub
addb
inc
repz
push
jl
loope
push
mov
add
out
xor
pop
mov
push
xchg
adc
cltd
mov
inc
bound
inc
or
mov
push
inc
scas
dec
nop
sub
xor
xor
pop
and
lock
bnd
stos
mov
in
subl
adc
int3
xchg
sbb
push
lret
sti
rclb
and
mov
lahf
gs
sbb
dec
cmp
cmp
fs
fdivrs
scas
add
rcll
add
pop
icebp
mov
push
and
mov
jbe
and
mov
sbbb
mov
lret
ja
addr16
dec
cmp
add
fildl
fdivrl
dec
vandps
cmp
lahf
or
jne
xor
out
jge
pop
mov
cmp
notl
in
dec
bnd
lret
jo
or
lahf
inc
addr16
jno
mov
fadds
mov
add
cmc
in
mov
scas
sub
lret
xorl
cmp
ret
mov
out
in
in
mov
or
mov
icebp
aad
cmp
sbb
or
xor
rorb
repz
mov
lds
xchg
sbb
xchg
aas
or
mov
ret
push
loopne
dec
sarb
mov
lock
lcall
and
push
es
or
pop
orl
aad
pop
andl
movsb
fistpll
jle
stc
fsubs
pusha
mov
mov
in
or
and
pop
mov
xchg
ficoms
popa
jp
and
adc
sbb
int
cmc
add
inc
jb
ljmp
pop
mov
sbb
rcll
jmp
cmp
push
cmc
push
jp
xor
clc
jnp
int3
fprem
arpl
enter
inc
push
les
and
xor
in
mov
xor
inc
aaa
hlt
jp
out
pop
stos
cmpsb
sbb
sub
xchg
jl
mov
inc
cmp
adc
mov
in
arpl
fmuls
rorb
cltd
ljmp
or
cwtl
cmpsl
xchg
and
lahf
iret
mov
loopne
mov
in
or
cld
in
arpl
inc
add
lcall
rcll
push
inc
std
mov
jno
push
or
cmc
idivb
popf
mov
lods
mov
dec
lcall
int
mov
negb
pop
pop
jo
aam
xor
in
aaa
dec
push
mov
ljmp
inc
fwait
mov
cmp
xlat
and
pop
and
pushw
adc
mov
pop
mov
push
push
inc
cmp
in
dec
and
aam
push
insl
mov
fs
inc
hlt
out
xor
pop
repz
or
mov
adc
jp
ljmp
mov
jb
outsb
aad
adc
sbb
mov
test
mov
aam
icebp
pop
cmpsb
inc
bound
cli
and
lods
stos
inc
inc
pop
xor
sbb
fcom
mov
adc
mov
dec
clc
test
je
sub
js
cmp
add
mov
pop
mov
mov
mov
pop
add
divl
jnp
add
popa
cmp
push
aas
aad
cmp
iret
sbb
dec
arpl
mov
mov
mov
data16
ret
sbb
aam
call
mov
dec
xorl
sbb
push
scas
mov
jo
sbb
rcr
push
out
leave
cmpsb
call
xchg
mov
cmp
sub
cmp
or
jge
movsb
mov
push
repnz
pop
inc
out
cmp
lock
push
dec
dec
adc
fisttpll
dec
mov
push
mov
pop
loope
xchg
jle
cltd
fldenv
lcall
xlat
adc
cs
fs
fwait
push
mov
sbb
mov
jecxz
hlt
out
lahf
pop
mov
mov
scas
xor
shl
mov
pop
ja
pop
das
inc
push
shrl
dec
push
sub
push
aad
and
jmp
jo
movsl
sahf
bound
scas
call
cmp
imul
inc
mov
pop
cmp
inc
inc
out
lret
xor
sbb
mov
mov
jge
shlb
cmc
int3
mov
adc
or
bound
jno
inc
pop
pusha
dec
frstor
arpl
push
add
cmpsl
cmp
mov
in
cld
gs
inc
jp
je
idivl
pop
fucom
push
jo
ja
sahf
or
pop
dec
data16
fsubl
adc
push
dec
sbb
repnz
mov
daa
pop
pop
pop
jb
sbb
jne
out
xor
xor
and
or
jl
xor
in
fs
aad
mulps
dec
add
and
push
scas
push
mov
mov
add
push
call
pop
pop
xchg
pusha
mov
and
push
fnstsw
adc
out
pusha
inc
js
cmp
pminsw
sahf
add
push
sahf
jo
sub
or
out
mov
in
jle
cmpsb
mov
jle
add
sbb
xor
sub
popf
dec
out
or
stc
cld
inc
xchg
jo
sbb
and
rcr
adc
out
rorb
push
dec
inc
xchg
je
dec
inc
sbbl
std
cmp
lcall
cmc
pop
pop
movsb
cmp
push
aas
mov
sbb
inc
xchg
add
and
push
lds
sbb
dec
lea
or
andb
mov
mov
stos
out
dec
mov
mov
call
ds
jb
add
inc
cld
sbb
jo
mov
jl
push
xlat
sbb
and
sub
mov
add
bound
push
ja
xorps
push
add
pop
cmpsl
pop
mov
sahf
decb
sbb
dec
cmpb
lock
out
lahf
pushf
cld
push
loope
cmp
sub
adc
pop
cmpsb
jns
inc
cli
and
xchg
sbbl
inc
ja
mov
sbb
xchg
adc
cltd
inc
test
jl
repz
lahf
movsb
inc
out
jno
or
sbb
out
lods
pop
pslld
mov
mov
pop
nop
cmp
scas
cmc
pop
push
add
dec
dec
dec
or
dec
dec
jns
movsl
es
in
aam
aad
push
mov
jb
lock
dec
arpl
and
mov
cmp
fnstenv
sub
dec
cmc
stos
lret
loopne
loopne
shlb
divl
xor
inc
cs
fldt
inc
int3
ret
out
cld
pop
insb
jae
ja
sar
rorb
jne
pop
push
test
add
mov
inc
int3
pop
rcrb
mov
adc
mov
dec
jge
push
pushf
jne
jns
cwtl
xor
push
imul
xchg
rclb
movsb
and
mov
and
and
sbb
dec
sub
ja
cld
loope
and
inc
jmp
sub
orl
and
js
in
mov
inc
sub
cmp
or
xchg
xor
int
xor
cmp
adc
add
add
add
pop
add
pop
pop
jle
aam
jo
jb
xor
jo
cmp
sbb
fcoms
js
and
push
cmpl
inc
adc
push
lock
ja
mov
stc
addr16
push
sub
mov
add
cltd
dec
data16
mov
loopne
and
nop
lea
mov
hlt
cmp
inc
pop
pop
and
mov
pop
add
and
cmpsl
sub
mov
arpl
aas
push
mov
test
iret
xorb
cmp
lods
fwait
sub
adc
pop
adc
cmp
jp
rcrb
inc
loop
dec
inc
ror
pop
aad
push
movsl
cmp
fs
and
pusha
movsb
gs
out
xchg
and
jle
fsubl
lods
pop
mov
inc
or
dec
shll
mov
jns
sub
repnz
push
mov
jl
fistpl
jmp
sub
nop
cmp
cmpsl
push
push
xor
insl
pop
jb
add
push
mov
test
cmp
dec
in
stos
cltd
outsl
orl
shl
imul
aam
or
imul
adc
cmpsl
ss
fwait
inc
nop
int
adc
loopne
int3
cmp
dec
outsl
lds
sti
mov
sbb
add
jne
in
xor
xchg
mov
loop
test
mov
xchg
mov
inc
push
adc
rcr
sub
shrl
inc
pop
or
cmp
xor
or
fildll
adc
out
rcrb
mov
xchg
lahf
cmp
shl
mov
test
not
test
sbb
jnp
pop
call
je
popa
push
rep
lret
cltd
dec
js
sbb
in
out
fs
scas
pop
inc
aas
in
movsb
and
stc
mov
cmpsb
inc
adc
push
mov
out
lret
mov
xor
or
mov
popa
mov
dec
mov
loopne
jp
pop
push
xlat
call
outsb
or
pushl
cmp
and
xchg
js
dec
adc
sbb
test
arpl
add
sub
js
sub
lock
mov
jle
sub
xchg
lock
pop
sti
inc
int
data16
adc
and
push
movsb
mov
leave
aaa
push
icebp
mov
je
dec
xchg
mov
sbb
adc
push
mov
mov
fists
call
sidtl
jbe
bound
xchg
mov
into
mov
mov
and
push
adcb
mov
inc
aam
adc
mov
sbbb
adc
mov
jbe
sub
and
push
add
int
addb
jnp
xor
scas
xor
das
cmpsb
pop
out
or
subl
imul
scas
dec
lret
lods
or
cwtl
pop
fldt
push
lods
fnstsw
std
jmp
stos
sbb
mov
dec
mull
xor
xor
sti
js
xchg
mov
in
in
push
sbb
arpl
sbb
xchg
mov
test
loopne
push
jge
mov
cli
add
jne
mov
pop
insb
pop
xor
xor
dec
mov
sbb
xor
lds
das
shll
out
adc
enter
jo
fcmovbe
mov
decl
jb
xchg
or
lea
add
push
out
fstl
sbb
out
push
xchg
push
in
and
bound
xchg
loope
sbb
jno
sti
addr16
add
mov
cld
xor
push
mov
fnstsw
std
and
rorl
adc
ss
js
rcrb
scas
push
inc
cmpsl
lock
sbb
inc
mov
aas
rcr
cmp
sbb
fwait
dec
addr16
mov
pop
mov
jecxz
jb
xchg
aas
and
cmp
or
jp
cmp
sbb
sbb
loop
dec
mov
add
jle
jmp
enter
and
pop
insb
je
decl
jae
les
outsl
loopne
mov
mov
mov
fdivl
pop
and
fildl
cmp
ret
out
or
xor
insb
fwait
pop
pop
hlt
aaa
dec
and
lds
adc
bound
pop
adc
out
pop
cmp
mov
pushw
lock
jg
hlt
bound
pop
adc
enter
iret
movsb
xchg
shr
mov
cmpsb
pop
pop
cmpl
popf
xor
mull
pop
cld
scas
fwait
repz
fwait
add
mov
arpl
aam
pop
sub
cmp
out
out
push
and
jne
loop
xor
shlb
scas
call
jne
int
clc
pop
mov
lret
enter
xor
mov
jo
push
mov
adc
xor
sbb
pop
push
shll
mov
fs
aam
clc
sti
sarb
sub
mov
adc
out
add
lcall
mov
and
mov
iret
add
test
jl
fimuls
mov
bound
sbb
mov
push
pop
jl
inc
sub
mov
notb
sarb
jae
pop
lods
popl
mov
sbb
add
sbb
imul
dec
mov
test
cmp
icebp
add
in
aaa
xor
push
push
add
and
rclb
and
pusha
push
fstp
test
out
xor
pusha
mov
dec
sbb
and
inc
push
push
pushf
test
stos
sarb
mov
pop
aaa
and
clc
add
cwtl
pop
loopne
xchg
in
sub
cmp
inc
pop
or
std
stc
fsubrs
out
loopne
push
mov
dec
sbb
jle
and
dec
push
fldenv
clc
cmp
inc
sbb
daa
movsl
sti
jne
dec
push
cld
lret
sarb
push
faddl
push
pop
fldenv
lcall
inc
fiadds
aad
push
mov
loope
adc
jle
jae
out
les
int
mov
cmp
and
js
ret
movsb
pusha
aas
test
rcll
pop
fstpl
push
test
js
movsl
jns
scas
bnd
imul
sahf
sysenter
sbb
int3
pop
xor
pushf
outsb
xorb
jge
mov
xlat
mov
hlt
push
jne
cmp
inc
and
js
js
mov
stc
jbe
mov
hlt
xor
or
lds
sub
ja
push
icebp
jns
nop
mov
jne
loopne
cmp
mov
enter
dec
dec
xor
push
jmp
xchg
and
add
bound
push
push
xchg
xchg
in
xor
sub
and
std
and
outsb
mov
inc
cmpsl
mov
aaa
jmp
inc
adc
xchg
inc
xor
stc
ja
sbb
pop
mov
imul
mov
bound
and
cmpsb
jo
pop
ret
popa
mov
in
jbe
xor
fsubrs
push
sbb
cwtl
movsl
mov
in
xor
xor
bound
jns
sub
push
xlat
and
mov
mov
cmp
push
es
repnz
fucomp
xor
pop
lock
jg
cmp
cmp
arpl
divb
ror
inc
xor
sarb
loope
incb
out
or
push
add
mov
add
cmp
push
out
or
xchg
loopne
and
cmp
ret
test
push
sbb
cwtl
inc
jno
cmc
push
sbb
mov
adc
aad
ret
lods
bound
adc
out
pop
jnp
cs
push
outsl
rcll
dec
arpl
cmp
sub
das
jle
fcomps
into
jmp
test
sub
jg
xchg
cltd
xor
xor
push
push
cmp
mov
repnz
cltd
mov
cwtl
jle
out
js
aam
cmp
or
bound
cmp
fists
into
mov
pop
jl
cmpsb
push
xchg
cmp
mov
pop
sbb
mov
jns
pop
cmpsb
mov
hlt
arpl
xor
push
cmp
push
mov
cmp
ret
pop
cmp
pop
lcall
mov
cs
xchg
and
movsb
imul
movsl
xchg
cmp
mov
fwait
into
cmpsl
loop
push
jle
icebp
rorb
movsb
dec
pop
addb
arpl
aaa
in
leave
ljmp
sbb
jp
push
pushf
mov
das
cmp
xchg
xor
orl
insb
sahf
mov
add
xor
sbb
ror
aaa
inc
in
test
push
xchg
sub
in
sbb
xor
jmp
je
pop
shlb
push
xor
leave
mov
jp
je
mov
icebp
sbb
xor
jb
popf
sub
xor
cmp
sarb
push
fmull
mov
push
and
fwait
sub
movsb
cmp
or
xorb
lods
inc
add
stos
jne
add
mov
dec
sahf
popa
call
cmpb
out
mov
cltd
jmp
jo
stos
mov
xchg
jge
jmp
and
gs
loopne
fucom
xchg
scas
jg
fcomps
loopne
pop
mov
xor
aam
push
js
ret
xchg
fstl
loope
xchg
sti
pop
std
cmp
sub
nop
icebp
pop
movsb
arpl
jne
shll
hlt
bound
or
repz
in
push
cmp
in
cmpsl
movsl
std
jb
cmp
daa
xchg
mov
dec
lods
and
xchg
sbb
add
aam
pop
insb
push
push
inc
mov
sahf
mov
shl
push
sti
cmp
and
jns
fdivs
fdivp
xor
loope
push
test
ret
and
push
adc
mov
insl
pop
sbb
inc
or
call
add
loop
fwait
out
cmp
repz
cmp
inc
dec
mov
adcb
into
pop
jge
add
les
mov
xor
mov
aaa
ret
cmp
dec
dec
in
add
adc
or
ret
rolb
scas
push
das
push
lds
imulb
gs
lods
pop
pop
shlb
dec
aas
rsm
jns
push
and
gs
push
imul
inc
jg
sub
inc
pop
ret
lret
stos
fdivr
mov
jmp
mov
addr16
fildl
adc
sbb
repz
das
push
sub
pop
fwait
sbb
mov
xchg
rcl
les
sub
jg
inc
les
jae
in
jne
int3
lret
dec
pop
jge
cmpsl
push
mov
in
mov
fstl
inc
cmpsb
pop
and
cwtl
inc
push
cmp
mov
cmp
sbb
arpl
sbb
push
sahf
sbb
fstl
jecxz
mov
pop
or
mov
push
xlat
das
cmpl
add
inc
flds
mov
sub
add
ficoml
push
and
mov
jmp
scas
jno
adc
push
inc
repz
xchg
repnz
lea
hlt
and
mov
cmp
in
jns
daa
fcom
pop
jge
push
xchg
sahf
loopne
add
int3
out
cmpsl
cmp
in
aad
sarl
mov
int3
aam
jo
mov
pop
loope
mov
call
xchg
ds
mov
in
inc
adc
mov
mov
sub
inc
cmpsb
xchg
mov
leave
test
dec
push
add
ss
jp
and
scas
pop
inc
sub
and
dec
out
test
out
ljmp
inc
pop
sbb
push
pop
ja
push
aas
dec
popa
outsl
xor
das
dec
jo
sbb
mov
adcb
and
add
push
repz
clc
in
loopne
inc
mov
pusha
cmp
bound
jnp
jp
adc
and
and
in
mov
addr16
mov
mov
ljmp
fisubrs
jo
js
ret
or
adc
push
or
push
xor
mov
inc
pop
sub
arpl
sbb
sbb
sub
pusha
cltd
fnstcw
adc
inc
push
and
outsl
dec
ja
test
inc
dec
enter
jecxz
and
mov
lods
es
jno
nop
in
pusha
repnz
dec
fst
push
test
daa
inc
or
push
sub
mov
enter
pop
mov
test
aaa
push
test
test
sub
mov
mov
jae
push
add
fwait
cmp
cs
stc
test
jo
scas
pop
jmp
inc
divl
mov
loope
adc
mov
ds
sub
cmpsl
jne
xor
int
aas
xlat
scas
addb
sub
pop
cltd
sarb
push
jp
nop
inc
push
cmc
xlat
dec
and
push
inc
mov
stos
leave
lahf
loopne
pop
loopne
lods
nop
aam
stos
addr16
mov
cli
xor
jecxz
scas
xor
mov
roll
xor
adc
adc
jge
sbbb
in
cmp
push
add
int
sbb
add
loopne
mov
jmp
xchg
sti
fmull
rclb
dec
ljmp
idivb
sarb
xchg
icebp
ds
call
insb
add
lahf
sub
popf
xchg
pop
push
mov
and
inc
je
mov
xor
inc
push
jmp
push
sti
and
push
movsb
lahf
out
inc
mov
sbb
hlt
xchg
cmp
mov
sub
test
push
push
xor
sarb
scas
out
adc
xorl
push
pop
cmp
daa
jae
jecxz
mov
sarl
mov
inc
inc
lods
and
or
mov
data16
sbb
pusha
nop
xor
ficoml
and
dec
pop
push
out
and
aam
adc
fsubs
es
add
and
fcmovne
pop
imul
add
imul
mov
add
mov
sbb
stos
in
add
pop
das
loopne
rorb
loopne
jge
int3
arpl
sti
in
cmpsb
sub
dec
mov
mov
and
mov
add
mov
repnz
add
aad
shl
cmp
in
cmp
leave
mov
jo
repnz
and
mov
push
cwtl
push
pop
mov
cmp
mov
mov
rorl
call
mov
pop
ss
lret
jmp
dec
mov
dec
or
int3
xor
jmp
lahf
mov
dec
mov
mov
and
xlat
pusha
mov
mov
daa
sbb
cmp
movsb
mov
loope
sub
mov
cmp
inc
xchg
std
cltd
in
scas
push
pop
fiaddl
aad
or
mov
xchg
push
jb
inc
cli
clc
push
rcl
in
iret
call
jmp
dec
stos
gs
int3
add
xlat
fisubrl
sbb
jo
data16
jae
lods
mov
stos
or
stc
dec
out
lret
jl
push
sti
lahf
and
ljmp
xchg
rorb
sbbb
mov
or
and
imul
sbb
push
xor
inc
adc
adc
lahf
adc
cmp
mov
dec
int3
hlt
jecxz
xor
pop
addr16
std
push
fbstp
cli
in
or
pusha
das
and
pushf
adc
pop
add
pop
or
sub
ja
mov
aad
dec
push
add
into
std
in
aam
daa
scas
jo
mov
and
mov
cmp
ds
addr16
sbb
xor
cmp
test
add
adc
jne
fdivrl
sub
adc
xor
andb
aaa
lods
and
pop
icebp
and
mov
mov
in
adc
jmp
jo
lods
push
xchg
jno
scas
cmp
pop
lahf
inc
push
mov
cmp
cmp
cltd
jecxz
mov
mov
add
xorb
xor
out
xchg
jne
jae
ret
mov
sbbb
movl
cmp
dec
xor
mov
jne
adc
loopne
cmp
out
push
loopne
dec
cmp
xchg
xor
into
outsl
sbb
jne
cwtl
and
inc
pop
out
mov
cmc
and
ds
fdivrs
sub
mov
jno
dec
adc
testb
and
lret
aad
cmp
adcb
xor
dec
mov
jmp
or
fsts
shrb
pop
and
iret
push
loope
add
and
xchg
or
and
fisubl
or
cmpsb
call
ja
test
jg
push
movsl
add
mov
inc
mov
and
cs
or
sarl
aam
xchg
loope
pop
ffreep
mov
ret
adc
out
adc
xchg
icebp
inc
repz
cmp
test
enter
inc
jmp
pop
imul
sbb
adc
loopne
fisttpll
pcmpgtd
cmp
loopne
or
dec
popa
fnstenv
mov
mov
inc
in
pop
call
and
push
ljmp
nop
fs
loope
inc
loop
mov
out
iret
xor
cmp
mov
add
enter
sahf
cld
push
cmp
lods
pop
cmp
hlt
in
add
fsts
les
ja
adc
and
pop
and
push
xor
cmp
aad
mov
and
shrl
jl
mov
test
out
imul
pop
cwtl
and
iret
enter
shlb
mov
sub
pop
insb
ja
or
add
jo
shrl
push
push
jno
lret
pop
lods
push
bound
sbb
mov
cmp
out
fbld
imul
xchg
stos
pop
mov
jle
ds
push
rolb
fnstcw
out
inc
dec
hlt
push
loope
pushl
adc
sub
pop
and
pop
ret
sub
xchg
and
test
inc
jb
pushf
sbb
fnstcw
xor
push
sbb
lods
mov
xchg
mov
push
jge
sub
jae
jns
fldenv
jl
mov
push
cmp
push
pop
repnz
leave
or
cmpsb
nop
and
inc
dec
or
scas
jge
out
cmpl
out
or
pop
test
cmpsb
addb
test
xor
mov
aas
loope
mov
scas
sub
scas
cwtl
and
bound
xor
test
add
fadd
imul
jno
push
outsb
sahf
push
mov
cmp
xchg
jmp
sti
and
shrb
sub
or
mov
dec
sub
pop
rorl
jo
push
ds
into
mov
pop
std
ljmp
das
push
add
js
inc
pop
xchg
xchg
push
cwtl
fmuls
jo
push
push
out
pop
push
call
and
in
in
in
decl
cmpb
imul
and
cwtl
jo
or
adc
hlt
fimull
movsb
fcoml
fcmovnbe
jecxz
xchg
or
mov
dec
or
test
arpl
xchg
mov
subl
fs
mov
sbb
jle
xorb
popl
loopne
sub
adc
fcoml
in
add
and
push
mov
insb
repz
pop
push
out
push
fdivl
aam
xor
or
je
cwtl
pushf
push
jno
jo
sbb
les
in
enter
fistps
cld
fnsave
je
mov
call
xchg
inc
bound
cmp
pop
movsl
add
fistps
xorb
rcll
movsb
xor
nop
mov
je
mov
cmpb
aam
mov
fsubrs
jo
xor
nop
loopne
cmp
xor
in
pop
add
jo
dec
mov
lcall
sbb
mov
lock
mov
xor
add
sarb
adc
mov
enter
dec
mov
sub
xchg
jo
clc
imul
and
cltd
xorb
addb
cltd
pop
or
sbbb
and
sbb
lock
pushf
je
mov
ljmp
add
inc
add
jo
add
mov
sub
xor
sub
lock
sbb
jg
jo
xchg
mov
and
cmp
inc
in
rolb
and
push
mov
pop
xor
add
push
mov
and
push
mov
loopne
cltd
pop
xchg
inc
in
add
add
jne
inc
inc
jmp
mov
sbb
cltd
fwait
pop
ret
cs
arpl
rolb
js
cmp
xlat
shr
je
clc
or
inc
out
outsl
arpl
jg
push
cmp
xchg
fld
mov
inc
nop
bound
cmp
push
fldl
sbb
sub
adc
sbbb
or
pop
dec
fstl
imul
fnstenv
arpl
sbb
mov
js
out
push
and
mov
mov
add
adc
dec
push
bound
sub
rorl
aas
sub
and
jge
push
icebp
xchg
cmp
cld
je
push
or
mov
repz
jnp
sahf
xchg
mov
push
cmp
mov
outsl
xor
cmpsl
and
xchg
and
scas
js
loop
cs
adc
mov
xchg
in
mov
dec
sbb
call
cmp
mov
jg
andb
outsb
popf
push
mov
or
lahf
das
enter
fst
fs
mov
inc
dec
setp
sub
inc
ljmp
shll
push
lret
out
add
test
cs
sub
pop
xor
jo
jb
sahf
in
popa
push
mov
clc
aam
call
movsl
pushl
mov
xchg
lret
fstpt
fisubs
cmp
mov
fnsave
mov
scas
das
jecxz
dec
sbb
sub
andb
sub
rcll
mov
inc
mov
dec
outsl
mov
add
outsl
js
and
pop
inc
cmp
scas
inc
fwait
mov
movsb
inc
cmp
pop
and
push
bound
push
inc
loop
dec
mov
cmp
into
andb
fsubl
cmp
outsl
adc
addr16
scas
jo
sbb
out
imul
fcmovnu
pop
loope
xor
adc
dec
push
das
mov
test
sub
pop
iret
pop
push
and
std
in
and
sub
or
cmp
jge
test
lret
bnd
les
popf
pushf
into
pop
mov
xor
xchg
popa
mov
or
and
movsb
out
inc
out
aad
inc
and
scas
mov
in
shl
loope
pop
aam
push
loope
mov
xchg
and
repnz
sti
dec
arpl
mov
call
cmp
test
adc
and
sbb
dec
mov
cmp
das
nop
mov
push
enter
cmc
sbb
xor
jo
sbb
addb
fs
sbb
dec
push
insb
dec
dec
stos
nop
aas
xchg
mov
push
out
repnz
jmp
mov
inc
adc
inc
push
leave
nop
adc
mov
mov
test
cmp
inc
mov
pop
mov
xchg
inc
es
cmp
or
mov
in
incl
mov
add
out
mov
lock
adc
adc
mov
mov
out
cmp
mov
or
out
or
mov
xchg
lods
jl
aam
lahf
cmp
out
cwtl
ja
fldcw
xor
out
jb
mov
jge
adc
push
aaa
popf
sub
xor
cs
dec
sub
inc
push
outsb
pop
jp
test
xor
fsubrl
loope
mov
and
scas
bound
xor
mov
in
or
mov
cmc
scas
adc
les
loop
or
push
pop
mov
mov
dec
into
lcall
popa
add
shll
mov
or
xchg
fcoms
scas
push
dec
cmp
xchg
fdivl
scas
insb
or
or
out
xchg
mov
ss
and
clc
adc
xor
push
cmpsb
int
pop
mov
mov
loopne
bound
pop
mov
les
xchg
cmp
fsubrl
gs
pop
mov
orb
push
mov
fs
fs
lds
inc
xchg
jo
cmpsl
addr16
and
mov
jo
mov
mov
ds
push
sub
push
mov
adcb
jl
xchg
pop
push
dec
cwtl
mov
fcomps
in
hlt
js
push
into
aam
xor
mov
xchg
add
fcoms
mov
sti
xorb
mov
jns
cld
mov
fdivl
lods
arpl
icebp
in
cld
xchg
iret
and
loope
call
ffreep
push
jbe
clc
aam
js
orb
adc
test
pop
bound
mov
push
call
aam
shl
add
pushf
test
loopne
icebp
adc
adc
xor
loope
and
js
fs
xchg
pop
mov
adc
lock
sbb
jae
pop
mov
cmp
jo
and
pop
sub
iret
jecxz
add
js
mov
push
mov
andb
mov
and
adc
xchg
push
or
addb
mov
icebp
xchg
addb
rcl
pop
adc
pop
lock
jbe
xchg
cmp
jae
addb
add
sub
mov
dec
mov
bound
xor
jl
lock
rcr
mov
shlb
ljmp
mov
mov
inc
cwtl
int3
cltd
lods
in
xchg
mov
fs
loop
mov
fcomp
fs
pop
cmp
hlt
add
sub
sub
mov
xchg
and
adcb
shr
bound
xchg
rolb
shl
add
push
insb
outsb
hlt
movsb
jg
filds
fistl
and
mov
popa
xchg
dec
inc
mov
jb
lods
mov
and
in
icebp
and
xlat
cmpsb
jg
test
js
lea
lods
mov
sti
fstl
in
rclb
and
dec
mov
dec
movsb
out
cmpsb
xor
lret
or
pop
clc
dec
sbb
ja
pop
pop
aad
out
mov
movsb
mov
dec
inc
insl
adc
xchg
cmc
inc
mov
sahf
mov
sbb
jb
mov
inc
cmp
mov
lret
aaa
repnz
popa
xchg
mov
dec
push
pop
out
and
jne
sbb
sub
dec
mov
shll
lret
xor
add
dec
push
pusha
and
and
mov
call
outsl
cmp
lea
dec
rcl
imul
mov
xchg
push
inc
mov
icebp
fwait
pop
data16
mov
xchg
inc
out
inc
hlt
pop
and
rolb
stos
adc
add
daa
pop
mov
fmull
das
mov
in
mov
rcrb
xchg
and
pop
dec
or
mov
xor
imul
inc
dec
xchg
shl
imul
fwait
mov
sub
test
repnz
leave
mov
inc
xor
dec
sarb
push
inc
or
imul
cmpsl
mov
mov
sub
pop
pushf
sub
out
sub
dec
and
dec
subl
test
stc
out
aam
lret
cmp
mov
inc
sub
les
pop
fst
je
xchg
gs
inc
fadds
inc
cmp
xor
inc
pop
jae
pop
aam
leave
jne
mov
mov
jge
out
xor
adc
mov
xchg
add
cmp
shrb
sarb
and
sbbb
fstl
cli
in
xchg
jbe
sti
test
clc
cs
call
xchg
lahf
pop
xchg
fnstsw
mov
iret
push
repz
mov
out
pop
cmpsl
ja
addb
jl
sub
in
push
mov
fbstp
je
pop
or
jo
fcomp
push
fstps
adcl
and
inc
and
push
lret
or
lock
mov
fsubrs
mov
jecxz
add
into
cmp
int3
dec
adc
in
fmull
jno
push
ror
insb
cmp
aad
sub
xchg
aaa
jb
fcomps
pop
cmp
or
loop
stos
push
sub
mov
adc
mov
mov
sbb
lds
shl
mov
adc
sbb
movsb
ficoml
pop
pop
adc
mov
adcb
cmpsl
push
and
call
jg
jl
out
scas
dec
xchg
mov
dec
and
push
pop
mov
vpaddusw
jmp
lret
lahf
fnstenv
das
loop
sahf
shrb
cmpsl
jno
pop
inc
dec
test
dec
sub
out
hlt
add
push
adc
fwait
addr16
aam
ds
jmp
cmp
push
dec
sbb
cwtl
jo
xor
arpl
push
cli
or
pusha
jl
or
mov
push
jmp
mov
hlt
pop
mov
jb
jo
mov
dec
adc
movsb
lea
inc
enter
cmp
ffree
push
jo
mov
aaa
je
xlat
iret
adc
inc
sbb
sbb
xor
clc
ljmp
bound
adc
idivb
push
sbb
adc
in
xchg
je
sub
leave
push
scas
ret
xor
ljmp
addr16
jnp
idivb
sub
fwait
jmp
addb
imul
adc
pop
cmp
loopne
dec
inc
in
inc
data16
jne
movl
jae
dec
inc
out
addr16
inc
sub
sbbb
subl
sub
push
adc
pusha
mov
sarb
out
mov
je
xor
and
mov
add
and
mov
mov
jge
pop
jne
xor
adc
aaa
leave
stos
push
sub
nop
xchg
or
aad
cmp
dec
pushf
mov
in
jmp
adcb
cli
popf
fildl
je
and
rol
adc
inc
fwait
mov
shlb
sbb
pop
sahf
lods
dec
xor
add
sbb
sbbb
xlat
pushf
out
sub
sbb
inc
sarb
jecxz
jb
xor
scas
andb
jp
jp
mov
or
push
xchg
xor
and
mov
xor
sub
setb
cmp
adc
pop
sbb
jo
jns
jp
jge
testb
mov
mov
xchg
les
or
sti
inc
mov
jbe
inc
mov
mov
jge
mov
push
or
aas
sbb
mov
andb
test
ljmp
cmp
or
cmp
pop
cmpsb
dec
or
fisttpll
inc
cmp
or
mov
xlat
sbb
mov
or
sbb
inc
cmp
lock
xchg
lret
rcl
js
loop
loopne
sub
xor
ror
jl
and
sub
cld
mov
popa
inc
pop
ds
jle
imul
jl
into
push
inc
push
movsl
rolb
movsl
cmovne
fwait
sub
xchg
pop
fcomps
sarl
push
pop
adc
cmp
xchg
hlt
add
les
push
repnz
jo
scas
arpl
pop
cmp
mov
mov
pop
cmp
and
bound
xor
loopne
repz
xor
mov
test
gs
mov
mov
sub
lea
jo
fcomps
sti
mov
int
ret
clc
mov
cmp
arpl
in
adc
xchg
cmp
adc
aas
in
lods
push
aad
mov
out
sub
sbb
ljmp
je
push
out
push
cmp
ret
lods
jmp
and
xor
and
push
cmp
cmp
aaa
cmpsb
cmp
sahf
test
int
inc
movsb
xchg
outsb
jb
mov
bound
jo
push
scas
push
sub
jo
loop
int3
or
cmpb
dec
popa
or
cwtl
nop
jae
sub
pop
aad
push
je
push
pop
int
push
dec
fcompl
or
jnp
test
dec
imul
pause
cwtl
or
mov
shlb
jmp
gs
enter
xchg
lahf
push
clc
mov
sbb
push
imul
or
clc
inc
mov
sub
cmp
jl
rclb
loope
xchg
jp
js
test
mov
or
jge
jmp
xchg
mov
movsb
insb
mov
pop
ret
xchg
push
scas
cli
jo
jo
sbb
xchg
dec
xchg
nop
movsl
pusha
imul
jno
addb
jns
push
nop
sub
and
pushf
jo
push
addl
into
lcall
lock
sbb
sub
adc
ljmp
pop
test
dec
jo
ret
repnz
pushf
mov
mov
fs
sbb
add
sbbb
test
jae
mov
sbb
test
sub
xor
push
mov
jbe
mov
and
aam
xorb
xor
or
push
mov
aad
in
mov
fisubrl
movsb
and
cwtl
je
addl
cwtl
add
pop
mov
imul
fadds
sbbb
adc
push
loop
mov
sarb
fisubs
gs
loop
rolb
sbb
addb
xchg
cmp
xor
mov
in
mov
ja,pt
sets
or
push
dec
pop
sbb
stos
pop
lret
mov
mov
ja
or
ja
scas
out
imul
imulb
les
push
pop
je
mov
loopne
adc
cmp
jns
movsb
inc
inc
imul
jb
or
lret
lcall
pop
out
mov
notb
pop
inc
jbe
ds
fs
int3
repnz
leave
ret
dec
fsubs
and
fsubl
or
cmp
mov
aam
and
push
stos
mov
repz
cmp
fcomip
adc
cmp
or
and
or
jae
mov
sbb
shl
lds
mov
inc
jo
jmp
fsubs
movsb
mov
mov
roll
sti
inc
push
and
imul
jg
rcrb
out
iret
cmpsl
cmp
push
and
outsl
lret
mov
fcomi
fsubr
xchg
pop
dec
inc
xchg
data16
push
out
pop
push
js
aaa
jo
in
pop
push
cmp
fdivs
lret
inc
inc
sti
adc
pop
das
std
or
inc
sahf
push
out
mov
mov
inc
xor
mov
clc
xor
jb
dec
inc
inc
pushf
ja
movsl
jne
dec
test
loop
bound
aam
add
xchg
cltd
dec
in
pusha
mov
in
dec
nop
sub
pop
xor
shlb
pop
push
sbb
mov
insl
sbb
jecxz
and
or
lcall
xchg
sub
ljmp
nop
cld
mov
cltd
int3
ret
push
mov
aad
cwtl
adc
cmp
mov
pop
pusha
into
lahf
sbb
and
fwait
push
mov
cltd
jle
and
iret
jb
adc
inc
cli
subb
mov
and
mov
sub
dec
sbb
add
andb
and
push
int
fwait
stos
lcall
lods
ljmp
rcll
jmp
jne
int
push
xchg
mov
and
mov
daa
stos
insb
scas
rcrb
shrl
sbb
mov
pop
cmp
dec
ret
jnp
imul
out
ss
jecxz
aad
xor
push
imul
cmp
loop
adc
inc
loop
push
adc
ss
lods
jae
jo
sub
or
sahf
ds
outsb
adc
das
ljmp
stc
mov
mov
dec
gs
pop
cmc
repnz
sbb
mov
loop
and
push
mov
and
add
repnz
push
push
xchg
mov
pop
daa
shr
repz
jecxz
bound
loopne
insb
cmp
xorb
into
adc
mov
das
jmp
je
xor
cmp
int3
outsl
bound
jmp
subb
adc
in
mov
and
jg
xchg
ror
add
inc
dec
mov
movsb
nop
adc
push
stc
outsb
std
xor
sbb
fisttpl
pop
add
ljmp
testl
or
nop
sbb
test
xchg
aas
mov
cmp
adc
pop
cmpsb
pushf
dec
bound
lods
sbb
bound
cmp
sbb
pop
fdivrl
arpl
cs
or
or
fwait
push
rcr
call
lea
jne
xchg
jge
inc
sub
shlb
xchg
mov
ljmp
pusha
jecxz
loope
jns
sahf
nop
loopnew
shll
and
fs
cmpsb
stc
jae
imull
cwtl
jne
jecxz
fisttpll
cmpsl
prefetchwt1
or
mov
mov
les
jne
and
pop
sub
imul
ss
call
imull
flds
cwtl
mov
mov
aam
cmp
jne
fidivrl
jmp
js
aam
movsl
sarb
scas
lock
comiss
dec
push
push
push
cmp
insb
pop
cmp
pop
jne
inc
nop
sbbb
mov
lock
xor
mov
push
aam
or
dec
popa
cmp
iret
fs
ss
mov
dec
jge
pop
adc
sub
xchg
decb
mov
out
inc
fldcw
mov
int
vcvtdq2ps
fbstp
movsb
lds
xor
pop
sarl
shrb
xchg
rcrb
or
in
mov
mov
jno
int3
ja
xchg
sub
adcb
pop
xchg
decb
adc
xchg
lret
cmp
test
lock
dec
loop
push
and
ret
pop
lods
dec
xlat
out
or
cmpsl
popa
or
mov
mov
dec
rclb
addr16
xor
cmc
inc
jns
loopne
xor
cmp
loopne
dec
mov
add
dec
aad
and
dec
dec
pop
inc
cmpsl
and
push
lods
dec
cmp
and
leave
pop
insb
dec
call
cmp
loopne
addr16
xor
cli
daa
inc
rcll
popa
xor
and
push
clc
cmp
cmpsb
add
out
cmp
mov
mov
aam
sub
adc
inc
cmpb
cmp
enter
fsubl
lods
sti
nop
cmp
jno
call
ljmp
and
mov
jecxz
add
mov
fs
and
or
push
inc
imulb
lret
xchg
dec
mov
stc
add
rcrb
loopne
and
out
shl
jno
ja
fstpt
adc
and
test
mov
jg
or
jno
xorb
nop
inc
or
test
jp
sbb
sti
stos
push
xor
cmp
mov
mov
push
movsb
sbb
jno
xchg
mov
jp
dec
test
nop
int
adc
inc
dec
out
dec
mov
dec
lods
cwtl
xor
stc
xor
push
out
rcll
push
mov
xor
lahf
test
xchg
lcall
data16
adc
xchg
dec
out
adc
cmpsl
jge
int3
in
cmpsb
push
sbb
pop
incb
out
mov
cmp
adc
rorl
sub
jns
scas
les
arpl
and
and
and
cs
and
mov
cmp
sbb
push
data16
dec
cld
jo
ja
aam
mov
add
push
xchg
int
cmp
cltd
outsb
dec
push
enter
iret
xor
scas
mov
cmp
mov
xchg
test
pusha
jl
mov
push
hlt
mov
inc
jae
cwtl
hlt
mov
repz
xor
xlat
out
repz
cmp
add
push
or
cld
lcall
negl
js
jb
lret
add
aaa
push
cmp
pop
lcall
dec
jo
mov
or
test
pop
cmp
inc
mov
outsb
icebp
mov
xchg
jg
lods
mov
in
loop
punpckhwd
cmp
push
mov
or
and
pop
xor
aaa
lock
cmp
scas
add
cmp
add
cwtl
sbb
arpl
data16
lea
maskmovq
fstpt
dec
push
push
loop
orb
inc
cmpsb
mov
and
popf
dec
lds
jns
or
pop
mov
aas
jl
in
sub
inc
pop
jp
cltd
inc
cs
push
push
adc
in
dec
test
jg
nop
and
paddsb
fistpll
cld
sub
and
cmp
push
fstps
loopne
int3
xchg
inc
mov
xor
ret
jl
fisubl
mov
pop
lock
dec
and
pop
cmpsb
mov
aam
rclb
addb
pop
cli
jb
mov
sbb
xchg
in
fwait
sbb
cli
dec
insb
rclb
or
push
pop
daa
sbb
mov
mov
mov
sbb
stos
mov
inc
sub
ja
pop
leave
in
push
cmp
sbb
push
loopne
ds
out
dec
in
mov
popf
cmp
mov
mov
xchg
dec
cmp
ja
xchg
ja
sbb
mov
cmpb
xchg
movsl
loope
push
pop
sbb
xlat
in
add
cltd
cs
test
pushf
je
mov
pop
xchg
mov
ret
cmp
out
dec
jbe
sbb
gs
movsb
cmp
or
popa
inc
mov
mov
test
sahf
cmpsl
xchg
mov
test
mov
jmp
add
in
into
lds
fisubrl
fiadds
xor
dec
mov
mov
loop
int3
sbb
fldln2
xor
dec
cmp
out
leave
pushf
movsb
enter
repnz
sbb
es
sub
inc
loopne
and
xor
ror
or
cmpsb
sbb
mov
pop
sahf
mov
xchg
test
and
in
iret
lret
ljmp
sbb
adc
cmpsl
lcall
jnp
scas
jecxz
sub
mov
xor
sahf
jecxz
adc
or
mov
into
mov
dec
out
loop
xchg
mov
bsf
inc
pop
loopne
sub
mov
lods
cmp
mov
pop
std
add
fwait
cli
mov
shlb
repz
pop
repnz
or
xchg
fstl
into
out
iret
jnp
sub
bound
psadbw
push
push
lods
jp
jo
xor
cmp
push
test
stos
test
loop
inc
xor
loopne
mov
mov
mov
sarb
ds
and
jp
add
xchg
jne
mov
popf
insb
adc
push
ficoml
cmp
das
enter
out
and
cmp
loopne
dec
ret
dec
inc
sub
and
pop
fs
sub
stos
pop
push
add
bound
mov
loopne
jge
or
lods
cmp
dec
push
jnp
mov
push
or
jne
sbb
pop
xor
out
mov
loope
mov
mov
adc
and
push
scas
scas
outsl
and
fsubr
push
clc
or
in
addr16
cmc
sti
xchg
roll
adc
aad
faddl
mov
sbb
pop
fnstenv
sbb
popa
call
add
jnp
inc
jmp
popa
mov
dec
cmp
je
rcl
es
cmp
inc
mov
addr16
push
std
imul
add
movsl
push
repz
push
xor
cmpsb
mov
scas
pop
imul
cmp
outsb
aad
dec
test
cli
daa
shrb
mov
mov
xchg
iret
mov
sbb
adc
pushf
insl
fwait
mov
cs
add
mov
mov
lods
ret
fnstenv
adc
ffree
mov
data16
sti
in
jecxz
mov
icebp
dec
ja
aad
cmp
cli
loope
out
stos
cmc
sbb
and
xchg
cwtl
inc
jl
cmpb
jb
dec
xlat
jle
mov
jecxz
pop
cmp
and
aam
ja
pop
test
or
push
arpl
xorl
inc
dec
jg
xchg
jg
aaa
fisubrs
lret
xchg
lods
push
addr16
hlt
addb
rcrb
push
lahf
data16
iret
stc
pop
test
xchg
dec
jmp
in
jg
fildl
add
loop
dec
lahf
movsb
outsl
aaa
mov
jns
test
xor
add
cmp
inc
pop
loope
pushf
int
in
lds
sahf
cmp
cwtl
cmpsb
mov
fsubs
add
add
jns
mov
xchg
jno
jg
cmp
mov
jg
mull
fisttpll
lret
dec
sbb
scas
mov
push
je
or
push
ret
cmp
test
sub
xchg
clc
cltd
ljmp
xchg
xorb
stos
and
cli
flds
sbb
js
dec
fstpl
cmp
mov
test
push
mov
pop
push
aam
mov
pop
hlt
cmp
lods
cltd
cmpsl
mov
out
mov
xchg
lcall
es
call
jle,pt
scas
xchg
cmp
mov
mov
pop
popf
push
mov
in
pop
in
ffree
ds
xchg
mov
loope
lods
inc
movsb
in
adc
cmp
xchg
cmp
cltd
rolb
and
lret
sbb
pop
cltd
movsl
push
pop
jo
lods
js
inc
mov
shlb
xor
jne
mov
shr
adc
pusha
arpl
xor
into
sbb
and
sbb
lret
dec
xor
jnp
pop
cltd
outsl
cmpb
dec
sbb
lods
fstpl
in
imul
add
jbe
sub
je
cmp
shrb
stc
mov
sbb
cmp
adc
int
es
lods
push
jnp
add
fsts
cmp
sahf
popa
xchg
aam
mov
lea
push
mov
ja
cmpsb
xchg
pop
add
inc
dec
and
dec
cwtl
xor
cmp
ja
pushf
pop
loope
in
repnz
and
jmpw
insb
and
inc
orl
jne
cld
ret
fcmovb
insb
ljmp
xchg
test
pop
adc
in
mov
xchg
dec
cmp
pop
jb
ror
cmc
mov
or
cmp
adc
mov
or
xor
outsl
mov
fnstcw
xor
pushf
jg
iret
mov
loope
dec
dec
jne
pop
and
xchg
xchg
jg
push
into
and
lcall
sbb
dec
xor
push
push
xor
lea
xor
or
pop
jne
dec
int3
cmp
divl
addr16
jne
aas
mov
and
mov
aam
fwait
ds
es
ss
pop
lock
add
scas
pop
aam
cmp
sahf
mov
xchg
enter
repnz
cmp
popa
fldl
pop
sub
and
popa
jl
push
push
cmp
mov
xchg
mov
and
lds
mov
inc
push
call
scas
push
add
pusha
repz
or
add
push
adc
js
dec
ds
fs
fsubrl
lret
ds
or
pop
lcall
xchg
cmpsb
andl
or
pop
mov
dec
push
rolb
call
xor
mov
cmpsl
cmp
push
clc
adc
dec
shlb
loopne
iret
mov
imul
sbb
test
xchg
mov
inc
mov
jl
sbb
cmp
and
push
mov
repz
push
and
xor
jl
push
lahf
mov
stos
loop
and
pop
icebp
push
repnz
and
je
loope
pop
jo
add
imul
cmpsb
push
xchg
sbb
jl
or
imul
hlt
int
xor
cmpsl
sbb
or
push
in
cli
jecxz
ret
pop
fmull
mov
jg
push
pop
lcall
push
cmp
jbe
aad
call
xchg
cmpsb
sbb
cmp
xor
insb
ds
jg
mov
mov
mov
out
pop
dec
shl
cmp
push
stos
out
xor
jl
ret
lret
xlat
sbb
cmp
ret
mov
ds
mov
push
mov
cmp
adc
sub
stos
jle
sbbb
lret
ucomiss
mov
fsubrs
xchg
lods
inc
and
loope
bound
aad
jns
mov
lock
jne
cmp
iret
bound
inc
and
pop
mov
sbb
jne
or
mov
sbbl
sub
jb
cmpsl
movsl
stc
pop
jg
xchg
mov
sub
jg
jbe
ds
dec
ja
mov
popa
stos
mov
xor
lods
aam
push
jecxz
lcall
sbb
add
mov
and
test
cmpsb
and
inc
cmc
std
imul
dec
nop
sub
int3
mov
xor
cmpb
lock
push
aad
gs
pop
rcrl
sub
dec
sbb
jb
aas
mov
jl
cmp
push
mov
mov
cli
adc
ds
dec
leave
cmp
std
in
mov
movsb
paddusb
shr
sbb
cld
in
push
sbb
add
push
lds
js
aad
fwait
or
inc
xor
mov
cmp
mov
xchg
fldl
xor
mov
xor
lods
xchg
call
call
loopne
add
out
test
jne
mov
in
cld
adc
inc
dec
sahf
outsb
push
adc
add
mov
mov
pop
js
testl
ja
lds
xchg
mov
imul
mov
movsb
in
mov
cmc
test
cmpsb
mov
pop
movsb
pushf
inc
adcb
lahf
cmpsb
js
mov
xor
cltd
jmp
push
mov
cmp
cmc
dec
test
mov
rol
mov
and
test
arpl
popa
pop
pop
test
inc
adc
lock
scas
shlb
adc
and
jmp
lods
push
dec
ljmp
cmp
cltd
inc
mov
loopne
add
icebp
pushf
push
xchg
and
ds
jo
mov
scas
adc
movsl
cmpsb
add
dec
dec
dec
cwtl
dec
popl
lcall
adc
or
jecxz
push
and
addr16
jle
shlb
cmc
test
xchg
pop
xchg
jns
push
xor
and
sbb
inc
repnz
jmp
cmp
cmp
sbb
xor
adc
inc
inc
jge
int3
mov
xor
loop
xchg
jmp
nop
xor
insb
nop
cmp
sub
cs
aad
mov
dec
adc
movsl
dec
mulb
mov
sbb
pop
cmp
es
ljmp
adc
pop
aam
mov
out
fsts
clc
lret
sahf
fs
xor
mov
mov
pushf
ljmp
xchg
dec
aad
sbb
xor
sub
mov
mov
xchg
out
xor
cli
jo
fwait
lock
mov
cmp
dec
ljmp
fucomi
aad
lods
mov
setp
loope
sub
jne
pushf
xchg
aam
fisttpl
rorb
adc
je
in
mov
inc
and
pop
shl
xor
mov
push
jno
mov
jae
adc
mov
adcb
in
mov
jle
cmp
jecxz
rolb
iret
ficoms
lock
xchg
repnz
mov
mov
adc
cmpsl
jbe
lods
mov
push
in
lods
cmpsl
std
loope
stos
data16
sti
cltd
out
sub
xor
js
stos
and
mov
push
cmpsl
dec
test
cmp
imul
mov
jp
dec
fsub
cmp
bnd
pop
xchg
push
fdivl
add
mov
jnp
push
add
or
inc
or
fnsave
pop
jge
mov
and
test
inc
mov
jno
mov
jnp
rorb
push
repnz
imull
jmp
out
fsubrs
pop
jo
adc
clc
scas
insl
ds
lahf
dec
pop
gs
xchg
pop
fdivp
ror
push
es
xor
lret
out
pop
jp
pusha
mov
call
fnstcw
and
xchg
cltd
sbb
sbb
push
sarb
jl
mov
arpl
fistps
cmp
push
and
xlat
stos
cld
and
xchg
add
int3
mov
mov
or
cwtl
stc
cwtl
jmp
push
cmp
insl
aaa
jg
sub
in
xor
xor
loopne
test
adc
sbb
mov
es
cmp
cmp
stc
sub
mov
sbb
popl
inc
sub
mov
adc
shlb
pop
mov
mov
jne
xchg
in
mov
xchg
mov
jo
adc
jb
add
lret
push
or
stos
hlt
jg
rcrl
xchg
dec
imul
xchg
sbb
int3
sbb
fldcw
mov
adc
test
cmp
ret
pop
popf
loopne
dec
cmp
and
scas
movsb
mov
dec
pop
or
inc
push
cmc
scas
es
push
and
push
aam
pop
cs
out
ss
push
pop
lret
push
jle
push
popf
sahf
outsl
inc
mov
sbb
xor
jns
loope
imul
and
out
fldenv
popl
dec
cmp
stos
lock
mov
mov
pop
or
out
pop
cmp
out
xchg
pushf
mov
jp
inc
cmp
sub
sbb
orl
or
bound
pop
rorb
sbb
lcall
js
shll
inc
push
int3
popa
mov
and
jge
mov
add
nop
stos
xor
movsl
stos
xor
pop
push
aaa
das
daa
xchg
cli
test
add
inc
mov
cmp
mov
movsb
gs
call
and
cmp
sarl
cld
push
cmpsl
sbb
call
jo
pop
mov
aaa
push
adc
jnp
or
and
mov
push
rolb
mov
cmp
dec
mov
nop
sub
pop
jmp
outsl
out
scas
lods
sbb
pop
inc
int3
mov
and
dec
mov
inc
imul
incb
or
in
or
push
or
pop
imul
push
inc
xchg
outsl
push
pop
add
je
mov
js
mov
fxch
cwtl
mov
and
mov
dec
hlt
add
add
mov
cmp
loopne
out
mov
add
cmp
mov
and
mov
test
repnz
pushl
and
pop
scas
je
mov
or
into
pop
pop
inc
in
das
loop
and
aad
xchg
add
sbb
cmp
sbb
adc
movsb
inc
jge
push
xor
ds
and
int3
sbb
js,pn
push
dec
pushf
inc
fistpl
dec
aam
cmp
cmp
mov
sub
in
por
insb
rorl
mov
xor
cmp
cmc
pop
mov
scas
mov
cmp
aam
clc
clc
sbb
add
loopne
mov
imul
xchg
hlt
test
jne
les
and
dec
lret
push
arpl
cmpsl
xchg
hlt
rorb
aam
aas
arpl
or
pop
pop
cmpl
popa
test
mov
xchg
enter
jge
adc
divb
mov
pusha
cmc
push
pop
cmp
mov
test
call
adc
jne
sti
push
sub
test
push
lret
rcll
sbb
fsts
mov
push
inc
out
lods
jb
daa
pop
popa
dec
cmp
and
jno
sub
jne
gs
les
mov
xchg
out
fdivs
mov
xor
jp
pop
test
es
adc
mov
into
ret
xchg
push
ret
dec
daa
ss
sub
jle
push
cmpsb
mov
in
lods
mov
xor
dec
shlb
cmp
jb
inc
lahf
pop
aaa
mov
insb
cmp
cli
push
movsb
fsubs
mov
in
adc
push
ds
stc
sub
insl
das
lods
or
fcmove
mov
dec
in
jnp
bound
enter
mov
test
out
mov
mov
shlb
cmp
mov
hlt
xchg
adc
cmp
and
mov
push
jae
pop
and
aam
mov
pop
cmp
lcall
xor
sub
cmp
daa
test
lcall
xor
mov
test
sub
or
mov
mov
dec
loop
iret
jno
fisttpl
sti
ja
mov
pop
push
push
xor
in
mov
mov
in
pop
cmp
push
dec
aam
sti
dec
xchg
or
mov
xor
push
dec
add
jnp
stos
and
adc
call
loop
push
icebp
or
mov
jp
mov
fxch
dec
mov
mov
into
popf
push
adc
enter
icebp
mov
call
mov
cmp
scas
repz
mov
popf
cmp
mov
sbb
and
cmc
xor
nop
xchg
xchg
in
lahf
and
fistpll
and
fsubrs
inc
pop
and
push
mov
push
or
pop
sbb
cmp
xchg
push
cmp
out
cmp
fucomi
sub
fsts
cmp
sub
adc
int
loopne
inc
ret
mov
and
xor
aam
adc
cmp
or
sbbl
loopne
inc
aam
dec
cmp
and
add
xchg
rcl
popf
jecxz
dec
movsb
lock
pop
cmp
jmp
mov
xor
cmp
inc
mov
xorl
aas
mov
arpl
jnp
adc
ljmp
fistps
cmp
leave
sbb
outsl
loop
aas
sbb
aad
sbb
sbb
mov
dec
aas
push
jl
and
push
cmp
call
fwait
mov
xchg
jmp
cmc
stos
int3
inc
pop
inc
sub
cmp
add
and
dec
or
stos
jmp
mov
inc
and
adc
push
mov
or
test
jne
dec
adc
mov
mov
call
popf
dec
cmpsb
out
and
jo
loope
or
rcrl
cmp
pop
or
pop
jne
push
cltd
in
ret
aam
lret
cld
setnp
jns
aam
movsl
pop
shl
or
out
iret
mov
inc
cwtl
or
enter
xor
orb
ja,pn
arpl
lcall
stc
xchg
fiadds
sbb
rolb
lcall
aam
push
lods
jo
mov
xchg
shll
inc
fs
pop
add
push
xchg
lea
push
pop
in
pop
jns
mov
pop
jl
pop
mov
lods
mov
int
test
push
push
movsb
std
push
pop
jns
push
nop
add
enter
popa
fs
mov
popa
or
lcall
pushf
jae
jns
hlt
repz
push
pop
pushf
mov
lret
mov
in
enter
mov
mov
mov
mov
je
pusha
mov
adc
pushf
cmpsb
nop
jo
or
jl
fldcw
cmc
inc
test
je
repz
sbb
add
inc
jno
loope
cmp
mov
pop
pop
dec
stos
popa
rcrl
cmpsb
xor
push
lock
mov
clc
mov
jo
mov
hlt
xchg
pop
cltd
xchg
xchg
call
cs
je
pop
test
test
jecxz
cltd
xor
add
mov
test
jns
mov
nop
call
movsb
mov
test
xor
in
cltd
and
cmpsb
push
mov
orl
push
adc
dec
adc
pop
je
sbb
cmp
mov
cwtl
je
aam
jbe
pop
aam
bnd
cwtl
xchg
add
cwtl
js
aaa
clc
fcoml
cmp
lcall
jo
push
pop
adc
pop
in
jo
hlt
mov
lock
xchg
adc
icebp
sub
pop
cmpsl
sub
out
cmp
dec
sahf
push
push
jb
jo
mov
mov
cmp
cmp
popa
mov
jle
push
dec
push
inc
loopne
cmp
jbe
arpl
cld
ja
inc
loopne
fstpl
push
sbb
cmp
sbb
loop
mov
adc
ja
cmp
push
pop
cld
inc
loope
pop
loopne
xor
mov
lods
xor
mov
and
cmp
imul
cli
inc
inc
adc
push
pop
pop
pop
scas
cmpsl
mov
inc
movsl
cmp
into
aam
dec
fcomps
in
xor
daa
cmp
shl
dec
sti
loop
and
ffree
out
cmp
mov
js
aas
xor
inc
push
cmp
add
jnp
cmp
cmp
pop
int3
nop
mov
out
movsb
jp,pn
and
jns
sub
xor
push
inc
pop
pop
push
xchg
cmp
pop
mov
inc
in
mov
lahf
dec
rcrb
mov
in
lret
rolb
add
test
test
ja
call
pop
add
shll
cmc
push
out
popa
cmp
in
pop
movsl
mov
push
push
sbb
out
ja
jb
cmpsb
std
lods
ja
adc
pusha
loopne
mov
and
js
push
in
loopne
int3
push
push
push
nop
sub
in
push
jb
add
xchg
cmp
adc
pop
push
clc
in
mov
xor
std
scas
aas
cmp
scas
js
test
les
jno
pushf
cmc
dec
mov
outsl
loopne
les
imul
pop
push
push
push
addr16
mov
pop
cmp
xor
mov
sub
dec
sub
cmp
iret
test
dec
aam
cmpsl
jmp
stc
mov
push
mov
pop
cmp
jp
jp
sahf
inc
pop
xlat
dec
xor
leave
mov
scas
cld
mov
push
leave
xlat
mov
sbb
add
add
pop
movsb
xchg
mov
mov
imul
pop
dec
inc
popa
pusha
dec
scas
fldl
sbb
inc
and
dec
fdivrs
xchg
test
mov
fnstcw
lods
add
dec
std
dec
in
push
cltd
mov
arpl
loope
test
stos
mov
dec
jne
xor
sbb
jecxz
pop
pop
cmp
sbb
out
and
xor
pop
ffreep
imul
lock
aaa
outsb
lock
pop
test
or
push
push
inc
fistps
and
mov
xchg
mov
imul
add
mov
add
test
cli
pop
adc
fisubs
dec
sbb
push
cmp
or
and
aas
pop
cmp
pushf
jp
cmp
or
mov
adc
lcall
mov
iret
enter
repz
xchg
pushf
int3
mov
pop
jno
jecxz
das
jns
nop
mov
fstpl
test
xchg
addr16
sbb
mov
cmp
fwait
or
mov
arpl
mov
in
lahf
xorb
les
and
and
movsl
jno
xlat
mov
stos
xor
jno
ficomps
mov
stc
enter
popf
test
out
rcrb
and
push
inc
cmp
dec
mov
dec
cs
push
int3
mov
fnsetpm(287
xor
mov
daa
addr16
mov
and
aam
cli
lahf
jne
mov
fadd
js
cmp
and
cmpsl
pop
inc
jnp
adc
push
cld
jecxz
in
andl
movsb
in
dec
cmp
jbe
mov
push
or
out
jb
cltd
popf
lds
xchg
mov
cld
and
add
push
movsl
in
popa
sarb
clc
push
push
xor
out
pop
add
fldcw
and
or
cmp
loopne
dec
ja
les
arpl
inc
das
mov
pusha
mov
rcrb
pusha
mov
in
cwtl
cmpsb
shlb
loope
sub
ja
inc
shlb
rcr
push
or
adc
xor
adc
in
and
nop
cmc
push
mov
ds
lcall
mov
mov
dec
push
adc
and
pusha
dec
push
inc
jne
push
inc
add
lds
in
adc
cmp
fs
lds
and
jle
sbb
add
dec
pop
jge
adc
mov
or
arpl
repz
cmp
xor
push
sub
dec
rcll
xor
cmp
xchg
inc
cmp
scas
sti
in
adc
popa
or
in
je,pt
adc
arpl
fdivr
sbb
pop
cmpsb
loope
test
and
xor
lahf
loope
jb
dec
inc
inc
aaa
pop
popa
in
mov
and
xchg
je
xor
mov
test
xor
loope
xchg
push
imull
pop
es
test
loope
dec
pop
sti
push
jle
adc
fstpt
es
cmpb
jns
cmp
xlat
and
mov
pop
sub
loopne
and
bound
call
dec
jg
popl
cmp
mov
lock
cmp
mov
sbb
and
inc
push
mov
ds
in
dec
or
push
pop
cmp
and
push
pop
vpor
pop
lcall
or
fldenv
xor
addr16
adc
sti
shrb
int3
mov
xchg
mov
es
jl
cmp
aad
pop
pop
inc
sub
pop
hlt
dec
imul
lock
mov
fs
loop
and
push
and
in
rcr
pusha
inc
ret
rolb
jle
fistl
jmp
sbb
mov
fldl
pop
shlb
arpl
dec
aad
outsl
jg
adc
in
dec
pop
dec
xchg
in
or
and
out
clc
sbb
jae
ja
push
mov
pop
mov
popa
sub
test
out
out
ljmp
xor
aam
xor
xor
lretw
fimuls
xlat
divb
and
lret
inc
sbbb
mov
or
dec
add
mov
mov
in
dec
inc
adc
sbb
pusha
jge
lods
lret
mov
xor
pop
cmp
push
dec
mov
rcll
shrl
prefetcht0
sub
outsb
lds
xlat
dec
pop
and
xchg
out
cmc
faddp
ja
out
jp
imul
cmp
sbb
add
loopne
inc
and
xor
xchg
arpl
sub
pop
inc
jns
dec
sub
stos
push
popf
xchg
loopne
bound
push
outsb
dec
rorl
popa
pop
and
in
scas
jns
rcr
adc
push
pop
pop
xor
adc
mov
fcompl
jle
xchg
mov
sbb
mov
ret
cltd
aad
daa
jmp
addr16
ss
fcmovbe
js
inc
in
aam
scas
mov
scas
shl
stos
cmp
fwait
andb
xor
lret
push
je
mov
fcompl
fwait
sub
mov
js
ror
cs
push
dec
insl
pop
insb
in
fmuls
and
arpl
repnz
and
loop
and
ds
daa
mov
jge
cmpsl
mov
add
mov
ja
cmovp
pop
add
cld
or
cmp
sbb
cmp
or
mov
adc
add
cmp
pushf
pushf
iret
adcl
stos
scas
movsl
sub
nop
mov
pop
mov
xchg
fldt
in
outsl
sbb
leave
movsl
adc
divb
mov
pop
cmp
shll
add
push
inc
fldenv
or
pop
fdivs
fs
pop
adc
cmp
jmp
xor
aam
cmpb
lds
mov
pop
aad
lock
sti
in
data16
push
iret
jb
js
arpl
imul
aad
cmp
add
jl
ret
repz
movsl
and
sarb
push
sub
int
mov
mov
xchg
and
sub
ljmp
int
pop
aad
fwait
or
popa
arpl
pop
push
fsubrl
push
push
mov
pop
imul
jge
xchg
clc
push
push
mov
gs
jecxz
sti
dec
or
and
mov
mov
adc
mov
test
pop
inc
inc
ja
adc
popa
dec
loope
sbb
popf
cld
jp
jns
lods
js
adc
cmp
hlt
adc
movsl
xchg
xchg
gs
push
and
mov
add
push
dec
sbb
into
cwtl
rclb
or
das
fmuls
or
dec
sub
dec
dec
ja
add
lods
sarb
jg
scas
outsl
sbb
and
ja
gs
std
xchg
stos
movsb
outsb
xor
dec
mov
inc
add
aas
movsb
adc
xor
stos
or
jno
loope
loope
cltd
push
arpl
adc
adcb
imul
jo
cmp
mov
and
push
lret
sti
add
popf
dec
sub
pop
xlat
cmpsl
pop
push
lea
out
sub
mov
mov
dec
xchg
les
jecxz
movsl
jns
push
mov
enter
mov
mov
leave
pop
cmpsb
dec
sahf
stc
mov
test
pop
jl
data16
cmpsl
movsl
aaa
aaa
pop
mov
enter
mov
ret
add
ret
cmp
fcomps
aad
cmp
pop
mov
inc
cmp
cld
loope
cmc
dec
imul
jae
pop
jae
inc
fldl
xchg
ja
cwtl
rclb
cli
fucomi
push
aam
scas
and
sub
sarb
jmp
sbb
add
je
or
dec
or
push
xor
dec
mov
rcll
mov
mov
push
xor
or
jb
fstps
push
and
push
adc
inc
movsl
subb
pop
add
lods
mov
xchg
out
or
scas
push
out
mov
adc
int3
dec
xchg
mov
jnp
jbe
call
jecxz
loopne,pt
lret
cmp
push
loope
mov
mov
sahf
fdivs
push
jo
dec
jo
cmp
sub
aaa
pop
lods
xchg
inc
aam
push
jmp
cmp
jno
xchg
push
sbb
pop
sub
mov
jb
int3
adc
xor
stos
jne
adc
arpl
cmpsl
xchg
or
arpl
add
cmp
rorl
jno
and
gs
cmpb
xchg
call
pop
cmp
jle
shlb
push
rcl
cld
inc
push
mov
rcll
cwtl
dec
xor
and
cmp
push
adc
push
lret
rcl
in
daa
aad
sbb
outsl
mov
xor
imul
or
cmp
and
dec
push
add
scas
push
ja
outsb
and
hlt
cwtl
mov
inc
cmpsl
mov
mov
and
adc
cld
ljmp
or
inc
in
arpl
mov
jmp
into
xchg
ja
or
xchg
sub
and
andps
pop
mov
mov
mov
movsl
andl
fcomps
pop
cli
lea
or
mov
leave
mov
xlat
rorb
pop
loopne
pop
cltd
in
sets
push
orb
jne
pop
test
push
out
out
jg
and
rorl
and
xor
stos
adc
inc
sbb
sbb
mov
jge
xchg
lods
inc
mov
add
and
int
cmp
xchg
in
sti
cmpsl
mov
inc
das
jne
and
rorb
mov
lods
pushf
jne
rcrb
fnstsw
dec
sbb
xor
mov
xor
push
sbb
jns
cld
jb
cltd
fldenv
fldln2
dec
fnsave
aad
xchg
jae
scas
scas
inc
sahf
push
xor
and
mov
dec
inc
xor
dec
push
mov
mull
sbb
popa
cwtl
cmp
sbb
lret
int3
pop
jbe
jge
aad
rclb
mov
aaa
movsl
push
outsl
cmp
mov
sahf
add
and
fst
push
insb
push
sub
sbb
cmp
push
xchg
cwtl
adc
pusha
xchg
dec
and
adc
adc
out
dec
ja
loope
pop
fisubrs
fcompl
int
sub
pushf
jecxz
es
jg
cmp
xorl
jl
lock
addr16
addb
call
adc
cld
mov
jge
sub
dec
aam
idiv
pop
add
fadds
push
hlt
ds
mov
lcall
imul
xchg
sbb
dec
pop
xlat
pop
out
pop
ja
cmp
sbbb
fnstenv
fstl
scas
sub
add
push
push
jns
clc
xchg
das
jle
test
shll
mov
inc
adc
push
xor
sbb
xor
fsubl
push
loop
lcall
mov
push
inc
mov
mov
pushf
jg
xlat
movsb
js
fnop
ror
cmp
mov
in
in
cmp
mov
adc
addl
repz
xchg
xor
mov
mov
fdivl
and
ja
pop
das
pop
les
dec
mov
cwtl
pop
mov
in
mov
adc
adc
cmp
xor
adc
dec
xchg
pop
adc
pusha
int
adc
fnstenv
fstpt
push
js
push
mov
lock
bound
hlt
scas
pop
push
ds
jne
call
cltd
decl
lds
push
xchg
sarb
fadds
iret
push
out
mov
mov
pop
pop
popf
out
xchg
cmc
jmp
mov
fstps
mov
dec
xor
lea
pop
je
frstor
rcll
fldenv
or
dec
xchg
in
icebp
out
adc
pop
xor
mov
aam
inc
fidivrl
mov
dec
or
filds
jl
or
push
mov
mov
xchg
pop
stos
sbbb
mov
inc
nop
jle
inc
ja
push
cmp
dec
aaa
xor
sub
sbb
and
jp
sub
aas
push
je
jge
ds
jle
or
sub
addr16
lods
in
je
push
inc
nop
aam
xchg
popf
clc
cmp
mov
aad
cmp
sahf
cs
sbbl
sti
inc
mov
mov
lahf
xor
jne
mov
cld
inc
pop
les
in
cmpsb
loope
jl
add
xchg
lret
stos
xor
jae
lock
push
and
jp
pop
pop
sbb
aas
cmp
and
aam
push
sbb
test
cmp
jmp
push
cmp
pop
stos
enter
scas
sbbb
mov
mov
fmuls
pop
xchg
cmpsl
fcomps
cmp
bound
fdiv
xor
jo
mov
sub
pop
push
dec
or
adc
out
cmp
jae
or
pop
xchg
scas
xor
idivl
xchg
les
dec
sarb
mov
data16
mov
cmpsl
repnz
int3
push
push
sub
xor
and
sbb
mov
roll
rorl
pop
mov
pop
aam
in
jbe
les
push
pop
lods
pop
loop
sbb
imul
bound
mov
fldcw
ss
push
push
jbe
or
or
or
lcall
pop
lods
jnp
xor
xchg
push
inc
fwait
mov
push
loopne
scas
dec
inc
stos
xchg
and
outsl
aam
add
lods
enter
mov
sbb
hlt
mov
push
mov
jne
sbb
jl
or
cmp
mov
adc
jo
cmc
dec
js
cmp
jmp
push
test
fcoms
push
mov
xorb
xchg
xor
and
ds
lock
cmp
adc
add
cmp
jle
movsb
aaa
call
cltd
imul
pop
xchg
roll
jno
sub
jo
xorl
mov
jmp
je
dec
leave
hlt
arpl
cs
cmpsb
inc
add
pop
jb
sub
cmp
sub
jns
jmp
js
mov
bound
xor
cmp
cmp
icebp
xor
hlt
lret
add
pop
inc
subb
push
sub
push
cmp
adc
dec
jge
inc
jb
loopne
inc
jbe
ret
loopne
in
mov
cmc
push
pop
jae
xor
mov
imul
int
mov
pop
mov
push
stos
das
addb
cmp
cltd
popf
pop
or
dec
mov
xchg
cld
mov
lods
jb
fidivl
fnstenv
jno
jo
cmp
lods
cmpsl
pop
push
or
dec
push
stos
mov
test
push
lods
ss
pop
sarb
and
jg
rcr
lods
dec
sbb
aad
xchg
mov
pop
arpl
mov
xchg
sbb
les
adc
dec
xor
jae
xor
and
and
push
cltd
push
aas
stc
pop
pop
xchg
fs
aam
cmp
cmp
and
dec
setp
cmpsl
dec
push
pop
and
ds
das
jp
adcl
mov
lcall
arpl
mov
and
lahf
dec
cmpsl
pop
aam
les
pop
shlb
mov
mov
dec
inc
mov
jns
hlt
pop
jle
adc
pop
fadd
mov
cltd
cmpsl
push
in
andl
sub
cmp
pop
inc
cmp
and
in
add
dec
adc
stc
mov
xor
cmpl
mov
jne
adc
mov
jne
shlb
mov
movsl
cmp
cmp
in
xchg
mov
pop
sub
jl
adc
inc
sbb
fldl
mov
push
push
jl
dec
push
clc
adc
and
push
sbb
dec
notb
bound
pop
push
mov
or
out
mov
lcall
jb
fmull
xor
inc
lahf
jae
in
xlat
fstpt
mov
jns
mov
icebp
jo
sahf
js
sbbb
adc
div
mov
sbb
in
sarb
mov
lods
adc
pop
mov
stos
je
ljmp
push
dec
pop
xchg
mov
jge
lcall
pop
jne
insb
stc
mov
sbb
jo
xchg
out
dec
arpl
cmpsb
enter
cmp
inc
clc
ret
ljmp
fldenv
fnstenvs
call
push
push
sbb
adc
dec
pop
je
push
pusha
pop
jns
mov
pop
inc
jae
cmp
scas
push
subb
mov
mov
insl
sub
add
jg
and
add
pop
pop
nop
sub
push
fcompl
cmp
js
data16
push
jne
sub
jo
xor
adc
shr
test
push
mov
or
enter
mov
ja
repz
stc
dec
jno
pop
jne
sub
jmp
sbb
test
push
add
jl
je
pop
cmp
repnz
js
adc
inc
out
leave
out
fldenv
adc
daa
mov
pop
icebp
pop
xchg
and
cmp
cli
jae
popa
push
jne
push
xor
imul
ret
jne
and
out
pop
mov
bound
inc
push
ljmp
incl
push
mov
mov
pusha
dec
push
and
loope
call
addb
and
popf
scas
push
mov
or
cmp
rclb
in
pop
push
je
pushf
add
lret
push
mov
and
xchg
sbb
popa
inc
xor
push
loopne
sbb
xlat
dec
mov
and
push
cmp
xchg
bound
aaa
mov
sahf
daa
leave
cmp
mov
inc
loop
push
ja
rorb
xchg
bound
xchg
stos
inc
mov
mov
jns
mov
push
dec
add
push
and
sahf
push
pusha
loopne
xchg
cmp
sti
hlt
mov
mov
jge
imul
or
jne
cmp
xchg
test
mov
repnz
adc
bound
jne
ja
movsb
imul
inc
mov
ljmp
popa
dec
mov
xchg
pop
pop
lock
in
cmpsb
inc
insb
pop
nop
cmp
iret
shlb
pop
notb
adc
jmp
xor
xchg
and
push
xchg
into
fwait
daa
movsl
dec
jno
cld
xor
nop
jle
dec
push
dec
xor
inc
dec
subb
add
and
movsl
enter
adc
mov
dec
or
ljmp
add
mov
popf
andb
mov
cmp
pop
cmp
xchg
negl
cmp
push
mov
mov
xor
bound
mov
xchg
aam
adc
test
push
mov
push
fidivrs
push
cmp
ja
xchg
sbb
aam
mov
int
das
sahf
fnstcw
in
js
movsb
cmpl
pop
push
inc
stos
popf
add
push
mov
or
mov
pop
leave
cwtl
or
mov
ja
pop
jmp
sahf
cmp
adc
xor
sub
shll
push
jl
pop
cld
fimull
and
aas
adc
dec
mov
push
cmp
cmp
out
and
sub
mov
pop
inc
dec
cmp
cmp
adc
js
mov
movsb
mov
pop
in
dec
es
dec
mov
jo
lcall
sahf
pop
scas
jge
ljmp
inc
and
jp
aam
mov
sbb
lea
sub
movsb
cmp
daa
in
insb
or
jl
cmp
int
dec
pusha
cmpsl
lods
mov
scas
lret
push
cmp
movsb
out
in
dec
sub
aaa
mov
pop
into
cmp
push
push
lret
pop
xchg
dec
pop
adc
sub
stos
sub
push
mov
jbe
in
xchg
mov
movsl
jnp
out
jle
hlt
dec
sbb
pop
fisubrl
jle
pop
mov
pop
sub
push
cmp
push
push
mull
push
loope
inc
pop
dec
js
push
lock
in
ficomps
cmp
dec
or
cmpsb
jecxz
in
sub
ja
repnz
mov
jmp
stos
mov
jae
xor
adc
imul
pop
daa
leave
xor
jg
xor
jns
in
xlat
sbb
fwait
hlt
inc
push
add
push
bound
xchg
dec
pop
pop
pop
mov
lret
mov
in
scas
aam
cmp
in
outsb
scas
cmc
xchg
sub
and
xchg
xchg
push
inc
xchg
cli
cmp
insb
or
lods
dec
lcall
cltd
test
push
jg
mov
les
arpl
rol
mov
adc
std
sub
or
insb
mov
stos
dec
xchg
xor
push
jg
mov
rorl
cmp
push
mov
aad
into
sar
dec
movsl
orl
adc
cmp
mov
mov
cmc
addr16
aad
iret
jns
iret
rclb
nop
aaa
fstl
in
movsb
ficompl
dec
je
dec
test
cli
test
popf
jge
ja
sub
xchg
es
lods
xor
in
call
jle
jp
lods
add
aam
dec
cmp
nop
adc
cmp
ror
xor
lcall
xchg
lret
add
pushf
loop
cmpsb
jo
popf
shr
xchg
fnstenv
pop
hlt
mov
pop
addr16
cwtl
fs
jbe
ret
iret
hlt
sbb
mov
lret
cmp
icebp
push
std
aas
adc
add
bound
cwtl
filds
stc
mov
xchg
sbb
test
loopne
imul
sarb
insb
adc
cmp
roll
sbb
or
jecxz
xchg
cmp
dec
repz
aad
out
and
movsl
fsubr
mov
in
inc
sbbb
lcall
fldcw
mov
cmp
jae
insb
mov
pop
repz
loope
and
push
jg
push
cmc
sub
pop
subb
aam
sbb
sub
cmp
cmpsb
cmc
adc
mov
dec
test
ss
jno
jne
clc
cmc
out
out
scas
aas
shlb
cmp
xor
sub
arpl
xchg
mov
pop
mov
adc
push
cmp
popf
jae
jne
les
mov
sub
stos
sub
push
and
movsl
adc
out
cwtl
mov
lock
in
jmp
ret
popf
pop
mov
adc
arpl
cmp
add
aam
adc
scas
xchg
dec
adc
cmc
xchg
lods
xor
hlt
sub
cmpsl
pop
out
insb
adc
rcr
jno
scas
pop
mov
or
lahf
jp
js
stos
gs
out
inc
test
adc
or
mov
cmc
shl
inc
or
rcl
cli
jns
insl
xchg
fildll
mov
aad
fsubs
and
divb
jecxz
adc
mov
or
push
sub
mov
int
sbb
and
xchg
loopne
mov
shl
sub
mov
dec
rcrb
cld
fldenv
int
or
cmp
cmp
stos
dec
cmp
outsl
cmp
or
in
in
jge
push
lods
jb
push
lahf
mov
int3
sbb
jl
mov
xchg
dec
and
cmp
cmp
sarl
jo
jmp
mov
mov
aam
repnz
jle
fadds
lret
jl
popf
stos
mov
jbe
lods
push
sbb
pop
addr16
rorl
xchg
mov
jns
int
push
stos
test
sahf
fidivs
mov
sub
cltd
cmpsb
sbb
and
imul
mov
adcb
shld
sub
pushw
rol
lods
jp
ss
dec
out
jge
pop
adc
and
daa
cmc
and
xor
jb
bound
arpl
add
js
fisubrl
lock
mov
test
or
movsb
movsl
in
pop
pop
jmp
call
dec
pop
fwait
pusha
sbb
mov
stos
mov
xchg
fidivs
dec
mov
cmp
jae
inc
push
sbb
fisubs
movsb
seto
loope
or
movsb
add
jg
sbb
add
loop
mov
cmp
bound
test
adc
dec
aam
bndldx
iret
dec
data16
xchg
fsubl
stos
arpl
ljmp
cmp
addl
popa
mov
mov
das
stos
loope
data16
cmp
je
xor
jg
or
push
add
push
fadd
add
movsb
sar
pop
push
cmpsl
sahf
hlt
pop
cmp
xchg
push
or
and
pop
xchg
daa
movsl
push
addr16
mov
mov
mov
jo
lret
fs
xlat
fists
insb
jo
jo
pop
push
addl
mov
xorl
test
jl
xor
es
pop
andb
jns
stos
je
popf
mov
movsl
mov
xchg
test
jbe
mov
mov
push
push
fstpl
inc
push
repnz
and
movsb
push
mov
jge
test
fsubrs
rcrl
xchg
in
sub
fdivrl
xchg
jns
pop
cmp
inc
pop
movsb
movsb
test
je
add
insb
jnp
dec
cld
sbbl
pop
push
add
or
movsb
test
orl
or
insb
pop
fdivl
insb
test
test
pop
popf
mov
xchg
adc
loop
loop
fcmovbe
sbb
popf
test
rcrb
sbb
push
test
jo
push
lock
cltd
push
push
lock
xorb
jo
cmpsb
pop
jno
mov
insb
xchg
mov
nop
fdivl
xchg
lock
lods
bound
xchg
sub
or
aam
int3
gs
lock
ljmp
clc
push
lods
lock
fadds
js
sub
nop
push
adc
cmp
dec
add
xchg
adcb
daa
inc
mov
and
cld
adc
mov
hlt
pop
dec
xor
cwtl
aam
add
test
sub
xor
cmp
loopne
fs
xor
in
cwtl
insb
xor
js
lods
push
push
cmp
fmul
push
pop
jne
mov
push
jle
sbb
fistps
int3
and
lcall
dec
jne
sub
adc
cmpsb
cmp
mov
lea
xor
cmpsl
insb
xor
andb
jo
xchg
sub
adc
loopne
inc
add
out
pop
es
pop
cmp
mov
push
xchg
imul
xchg
out
xchg
dec
add
frstor
jg
cmp
mov
inc
in
in
lcall
fucomi
mov
mov
sub
jne
movsb
nop/reserved
xchg
fs
sub
dec
es
jg
fwait
mov
xchg
fs
and
push
fcomps
loopne
xchg
into
pusha
mov
imul
pop
push
mov
jno
xchg
push
cmpsl
sbb
ja
adc
cmp
jle
sbb
lds
add
movhps
movsb
add
adcb
cli
cmp
mov
fcompl
jp
adc
and
outsl
gs
bound
shll
dec
jl
leave
or
js
inc
lods
out
mov
pusha
mov
ffree
cli
imul
mov
mov
and
pop
add
orb
and
xor
push
push
das
mov
orl
fsubrs
pusha
insb
sub
out
in
sub
inc
divl
shrb
or
loop
movsb
das
and
imul
lcall
push
mov
xchg
lcall
fs
xchg
and
inc
sti
push
je
inc
loopne
xor
rcl
lock
cmc
jg
test
lcall
inc
and
jg
fwait
ja
aaa
into
push
arpl
lea
xchg
xchg
cmp
lcall
push
xchg
iret
mov
cmp
xchg
inc
lock
mov
adc
mov
adc
jae
pop
ss
add
sahf
cld
mov
push
ja
add
call
hlt
movsl
cmp
sub
mov
inc
jge
mov
jo
aas
ja
cmovs
and
test
mov
outsl
fs
ds
sub
push
cmp
or
cltd
inc
lds
in
dec
add
lret
nop
sub
lret
out
pop
push
mov
int3
lret
ja
aaa
sub
mov
push
inc
mov
es
or
cmp
push
push
fwait
mull
mov
push
test
xor
int3
push
xchg
pop
mov
loope
pop
faddp
push
and
sbb
and
repnz
enter
lock
or
adc
ja
xchg
mov
test
test
dec
ficomps
cmp
pusha
mov
dec
push
cwtl
scas
mov
xchg
and
jbe
mov
mov
pusha
sbb
test
ds
push
in
fdivrs
jns
xchg
push
mov
pop
mov
icebp
cmp
mov
and
dec
pop
test
add
repnz
and
inc
loop
fs
js
cmp
inc
cmpsl
cmp
ljmp
xor
sub
push
in
xor
jg
ds
fidivrl
call
jne
xor
adc
cmp
or
flds
xsha1
cmpsb
iret
pop
and
repnz
sub
pop
push
cmp
cmp
cmpsl
lock
push
data16
mov
add
in
mov
rolb
rclb
lret
movsb
scas
mov
pop
call
out
cmovb
pop
push
and
in
lock
imul
fwait
lods
flds
and
cmp
dec
jne
ds
jle
mov
sub
or
notb
pop
std
lret
fucom
lods
dec
and
jne
adc
sub
cmp
dec
and
push
aad
cmp
jb
ret
test
cs
paddusw
add
aam
cmp
std
cltd
and
mov
push
fimuls
dec
jo
mov
xor
addr16
push
shlb
pop
loope
hlt
into
popf
cmp
pop
mov
scas
test
cltd
subb
stc
jp
push
dec
push
pop
leave
and
addb
loopne
xlat
cmp
ret
lcall
sub
cltd
cmc
lods
and
dec
jl
sarl
sub
xor
cli
mov
mulb
pop
and
fidivl
lret
inc
dec
cs
pop
sahf
sub
cmp
xor
or
push
mov
or
lods
and
or
es
xor
xchg
pop
cmp
add
in
and
out
rcrl
ja
andb
mov
mov
lret
clc
push
jp
daa
push
repz
adc
add
in
sub
mov
adc
js
cwtl
stos
mov
loopne
jno
fsubl
decb
ret
pop
pshufw
bound
mov
dec
xchg
jecxz
sub
and
frstor
repnz
rorb
je
push
push
xor
dec
lcall
out
fimuls
xchg
mov
rcrb
les
popa
adc
fsts
ret
shrl
cli
in
xor
jl
aad
xchg
add
jnp
and
mov
push
cmpsl
and
loopne
inc
daa
jecxz
enter
dec
sub
inc
pop
inc
sbb
xchg
popa
adc
xor
dec
cmp
cltd
push
outsl
push
mov
sbb
or
push
mov
out
sbb
fs
cmpsl
push
scas
dec
incb
push
sbb
sub
or
push
imul
mov
scas
into
rolb
data16
in
mov
cmp
pusha
daa
mov
inc
sub
sbb
fs
js
mov
adc
push
jne
stos
into
imul
pop
out
sub
ds
fsubs
pop
test
sti
jle
je
cmp
movsl
mov
add
xor
stos
shlb
scas
inc
adc
add
adc
xor
outsb
ret
mov
cmp
mov
dec
pop
add
rcl
das
jnp
inc
sbb
std
or
fstps
and
push
and
mov
loopne
mov
adc
stos
dec
cmp
movsb
mov
neg
push
dec
stos
push
dec
mov
xorl
rcrl
scas
popa
mov
out
inc
stos
cli
cmpsl
and
xchg
dec
fstps
aas
pop
in
aam
adc
sbbb
sbb
sbb
inc
push
mov
aam
cmp
sbb
pop
in
mov
call
jmp
outsb
xor
adc
mov
cmp
mov
sub
hlt
daa
cmp
or
push
adc
mov
push
xor
nop
or
sub
data16
add
into
aam
cmp
iret
cmp
in
icebp
test
repnz
lret
dec
sub
or
and
js
sub
ja
xor
stos
popa
or
mov
test
rep
push
push
and
cmpsl
pop
jge
dec
jmp
cmp
xor
push
stos
ret
dec
dec
scas
iret
sbb
stos
adc
add
lahf
or
outsl
or
stc
sub
dec
lea
or
mov
data16
aam
jno
inc
lret
outsl
push
rorb
or
sbb
imul
jno
cmp
lock
cmp
xchg
pop
mov
in
call
pop
cmp
in
rcrl
jno
jmp
cmp
iret
inc
sub
sub
jo
jno
mov
int3
jge
fadds
adc
pop
jne
push
and
push
push
shlb
retw
popa
cmp
inc
xorl
mov
mov
mov
in
aad
hlt
push
dec
sbb
cmp
jg
push
in
addr16
sub
and
mov
cltd
stos
movsl
ja
xchg
pop
outsb
and
sbb
std
inc
jecxz
xchg
sub
and
inc
ja
xor
fcoml
sub
sar
lret
cmp
push
inc
adc
xchg
scas
sub
out
mov
data16
in
outsb
int
pop
adcl
scas
out
jo
scas
out
dec
arpl
lea
cmc
cld
jge
out
adcl
cmp
test
and
scas
loopne
mov
dec
dec
push
nop
cmpsl
cmp
idiv
lret
lahf
mov
and
mov
dec
jb
popa
icebp
shrb
mov
jb
sahf
call
cmp
push
or
xchg
jge
add
mov
int
add
out
pusha
or
fdivrs
imul
or
push
sar
aad
or
xchg
clc
mov
popa
add
mov
into
xor
dec
pushf
jbe
pushf
pop
fcoms
movsb
jge
idivb
pop
shlb
and
cmpsl
ret
cmp
in
xor
mov
jecxz
inc
hlt
outsb
xchg
in
mov
and
mov
jge
nop
sub
xor
push
mov
outsb
gs
dec
cmp
dec
push
xlat
dec
insb
mov
and
clc
cs
es
sti
pop
dec
inc
cmp
xor
sub
and
stos
jns
lahf
rorb
push
mov
movsl
jb
lock
inc
rclb
sbb
stos
xchg
movsb
dec
hlt
inc
adc
js
and
roll
in
test
xor
cmpsl
xchg
stos
mov
cmp
dec
test
sbb
test
je
mov
and
or
sarb
in
ja
mov
cmp
jmp
xchg
inc
lcall
push
jle
sub
enter
loope
sbb
sub
xor
cmp
adc
gs
mov
nop
dec
xchg
jns
and
push
cmp
loope
jle
or
inc
mov
and
cmp
cmp
das
ja
nop
xorb
lahf
fadds
sub
in
push
dec
scas
xchg
jns
cwtl
push
rorl
aas
call
sbb
movsl
rolb
cli
pusha
mov
or
bound
lea
lods
mov
lret
nop
inc
scas
cmp
arpl
adc
stos
push
inc
jbe
cltd
cmp
dec
int
aam
push
aaa
jg
cmpsl
int
cmp
lcall
nop
int
jo
inc
dec
jne
mov
out
pop
ja
or
out
aad
mov
call
mov
jmp
or
es
cltd
dec
stos
pop
dec
push
mov
mov
push
push
jecxz
addr16
inc
xor
mov
shrb
loopne
mov
dec
mov
pop
mov
in
mov
out
mov
or
sbb
add
icebp
pop
mov
pop
repz
mov
in
sub
pusha
xor
inc
jl
pop
aaa
fsubrs
fcoml
and
xor
in
dec
out
out
lcall
fwait
cld
pusha
and
sbb
mov
movsb
out
push
inc
sub
aam
clc
or
fisubrs
pop
mov
mov
push
xchg
inc
les
jae
stc
fsts
xchg
and
mov
xchg
push
push
outsb
insl
push
repnz
fsts
lahf
inc
push
movsl
cmp
lock
fcom
sub
mov
jae
ficoms
call
lods
orb
push
fmuls
push
lds
out
inc
loop
dec
iret
adc
aas
mov
cmpsb
dec
dec
mov
push
push
fwait
dec
xchg
push
mov
popa
add
or
sub
stos
sbb
cmp
mov
jbe
xlat
insb
mov
test
shll
xchg
subb
fstpt
sub
adc
cmp
pop
out
or
ljmp
and
jnp
dec
xor
inc
js
mov
fcompl
test
add
pop
sti
nop
rcll
add
add
push
sbb
and
push
fcmovnb
cs
inc
outsb
mov
inc
arpl
loope
neg
dec
cmpsl
loop
mov
in
sbb
push
dec
cmp
cs
lea
negb
bound
mov
push
in
bound
cmpsl
dec
xor
mov
and
pusha
dec
adc
rorb
jns
mov
daa
daa
jb
fsts
loop
sarb
cmpsb
cmp
push
scas
cmpl
jle
scas
xchg
shl
dec
and
arpl
repz
cmc
dec
addr16
inc
sub
nop
insb
cld
add
push
and
push
push
addl
inc
addr16
lret
movb
add
jge
jg
adc
xlat
fwait
das
bound
ljmp
push
popa
testl
fisttpll
or
loope
mov
adcb
ret
cmp
mov
fwait
mov
xor
dec
add
or
out
sahf
cltd
xchg
push
stos
xchg
push
jne
add
cmp
pop
mov
lods
lods
imul
pop
out
sbb
xchg
push
add
sub
roll
cmpsb
xchg
push
cmpsl
iret
dec
fldenv
jne
addr16
adc
out
adc
int3
push
stc
lods
in
and
xchg
sbb
pop
push
cmpsb
add
lods
dec
mov
lods
movsb
inc
lret
and
push
sti
shll
addr16
test
inc
iret
out
lds
rolb
pop
and
insb
cmc
jg
addr16
mov
out
push
stos
aas
push
sub
outsb
or
xchg
ja
addr16
pop
mov
sarb
pop
cmp
jae
mov
aad
xchg
push
jo
and
cmp
es
inc
mov
mov
scas
push
jne
dec
imul
jbe
or
xor
dec
lods
jp
rcrb
and
dec
fnsave
sar
mov
mov
outsb
int
out
lods
pop
cmp
popf
jae
outsl
fdivr
push
lods
sub
pop
sbb
gs
fstp
es
cltd
adc
dec
call
sarl
fsubrl
xchg
nop
cmp
sub
and
inc
in
fs
mov
jg
cmpsb
daa
jne
add
orb
ds
push
lods
pop
js
iret
mov
adc
xor
mov
test
jmp
add
pop
shr
push
jne
mov
xlat
mov
imul
dec
cmp
bound
movsb
inc
jne
xsave
sbb
sbb
lds
popa
push
dec
das
icebp
cmp
test
nop
flds
std
xchg
and
mov
push
pop
call
fdivrs
cmovne
movsb
loopne
xor
lods
add
jb
loopne
mov
cmp
push
fisttpll
sbb
push
sub
mov
int3
outsl
sahf
pushf
cli
nop
icebp
call
in
ret
je
pop
cmp
iret
arpl
adc
pop
daa
fwait
nop
test
pop
aam
xor
outsl
dec
bound
push
cmp
lods
dec
push
jne
jle
pop
dec
cmp
aaa
call
clc
test
loope
int3
ret
push
jmp
adc
icebp
int3
out
mov
push
jbe
cmp
inc
pop
gs
xchg
pop
fmuls
push
cmp
cltd
repnz
fcoml
xchg
push
inc
fs
push
dec
cmc
subb
xchg
push
clc
cmp
jb
cmp
int3
xor
sbb
shl
mov
std
xchg
xchg
mov
ja
add
and
mov
cmp
xchg
sbb
add
loope
pop
lds
enter
sub
cld
mov
sbb
jle
cmp
sahf
inc
and
and
repz
xor
mov
dec
pop
out
fwait
sarl
lods
inc
or
sub
mov
pop
cmp
cmpsl
xor
or
jmp
shl
xor
shll
cwtl
cli
and
dec
mov
shr
lock
jl
mov
sbb
pop
push
test
out
jge
push
dec
jns
fwait
push
push
sahf
test
outsl
adc
inc
adc
push
and
add
addr16
adcb
xchg
mov
sbb
mov
cmp
pop
iret
sarl
cmpsb
iret
jae
xor
jle
mov
pusha
test
aad
push
cmp
mov
int
loope
idivl
dec
mov
ret
cmp
xor
addr16
std
inc
jg
mov
mov
ja
jne
sar
push
out
in
and
jecxz
clc
popa
lea
jns
cmp
mov
sbb
outsl
nop
cmp
sarb
jnp
dec
cltd
mov
or
aam
jmp
cmp
jle
jbe
adc
push
cli
mov
jo
fst
arpl
xor
jae
cmc
xor
cmp
lret
push
dec
in
lahf
ljmp
mov
adc
xchg
in
mov
stos
ss
add
dec
mov
mov
test
faddp
push
mov
xor
mov
add
addr16
xlat
mov
data16
or
bound
cmp
movsl
repnz
ret
aaa
xchg
push
mov
movsb
adc
pop
sub
cmpsl
dec
out
addr16
and
jle
ja
xor
movsl
ja
mov
out
sarl
movsl
arpl
and
cmp
jnp
push
pop
xchg
inc
stos
incb
scas
rolb
inc
jae
dec
fs
jp
adc
push
push
sar
cmp
mov
jne
cmpsl
dec
mov
and
std
rolb
sub
sub
sbb
sbb
xorl
jp
in
xchg
inc
push
pop
aas
popa
mov
dec
stos
jbe
and
arpl
dec
in
jns
loopne
pushf
mov
jle
lahf
mov
pop
fwait
ret
sbb
jge
mov
xor
nop
pop
pushf
movsl
imul
ja
mov
sbb
dec
push
add
arpl
add
lods
mov
daa
ret
adc
dec
mov
or
loopne
dec
push
or
mov
add
movb
dec
stos
and
inc
scas
shrl
fld
ror
mov
fadds
out
sbb
xchg
iret
bound
mov
lds
pop
cmp
insb
jb
or
pusha
mov
add
pop
lds
stos
orl
dec
popa
cwtl
outsl
arpl
mov
ljmp
cmp
fisubs
call
cmp
bnd
rcl
jns
rol
fdivs
add
mov
inc
stos
data16
jns
leave
xor
push
cmp
dec
dec
xchg
and
jnp
pop
cmp
mov
test
aad
xchg
jae
sub
push
jns
fistpl
lds
movsb
mov
mov
pop
push
cmp
mov
lret
push
dec
cmpsb
xlat
pusha
cmp
cmp
dec
jbe
mov
sub
pop
pop
dec
fisttps
xchg
es
adcl
lock
mov
jnp
scas
sbb
lods
dec
push
push
ficomps
adc
jo
call
cmp
push
xor
enter
adc
mov
push
pop
inc
jl
dec
add
pop
cld
cmp
mov
xor
mov
xchg
pop
dec
test
repz
lret
sbb
ds
bound
or
jne
test
cmp
out
pop
jno
aam
jbe
dec
pusha
mov
cltd
push
push
mov
adc
pop
pushf
enter
cmp
mov
sahf
adc
cmp
and
das
cmpsb
cmpsl
into
sbb
pop
mov
and
mov
aad
pop
push
cmp
scas
loope
mov
and
in
adc
cmp
mov
mov
sbb
popa
cmp
loopne
lods
inc
mov
mov
lea
mov
cmp
mov
or
inc
ret
mov
insb
push
insb
arpl
bound
cmpsl
jo
cmpsb
pop
loopne
mov
outsl
andl
jb
lret
std
pop
dec
test
in
adc
and
je
jmp
dec
and
and
loope
inc
aad
popl
add
ja
loopne
push
sbb
pusha
xchg
sbbb
in
scas
dec
mov
dec
sbb
cmpsb
jg
mov
pusha
sbb
push
lahf
push
mov
push
and
clc
fcoml
sub
push
subl
xchg
cmc
cmc
inc
or
xchg
out
cwtl
xor
iret
test
stc
aam
add
xor
int
popa
test
inc
aam
mov
loopne
push
xor
xchg
and
cmp
dec
push
loopne
out
in
in
mov
lea
sbb
sti
scas
in
in
cmp
outsb
lret
in
cwtl
push
jp
cmp
cmp
adc
leave
inc
popa
mov
clc
and
cmp
shl
shlb
jle
pushf
cmp
xchg
out
mov
fwait
outsl
dec
stc
cmpsl
pushf
xchg
lds
pop
pop
sub
push
pop
push
subl
les
sbb
loope
scas
pushl
jae
adc
js
pop
rol
pop
mov
inc
out
add
fwait
jg
dec
je
pop
mov
movsb
inc
in
ljmp
jle
lods
and
insl
imul
xor
cwtl
outsl
inc
dec
out
pmaddwd
das
mull
cmp
xchg
inc
pop
lock
loopne
inc
dec
mov
mov
outsb
mov
mov
dec
lock
int3
stos
loopne
es
loope
or
jg
outsb
lods
ret
push
dec
pushf
out
and
icebp
pop
aam
cmp
dec
fwait
pop
xor
sti
push
cmp
jl
mov
push
xor
xchg
dec
cmp
es
xor
cmp
lahf
out
xor
or
or
adc
push
mov
jns
jns
and
sub
mov
lods
lods
xchg
push
aad
adc
dec
xor
adc
push
inc
jo
sahf
mov
pop
fwait
pop
inc
sbb
cmp
iret
jnp
movsl
mov
stos
add
lahf
xchg
mov
nop
cmp
push
repnz
aad
mov
test
fwait
movsb
jp
dec
in
add
fwait
stos
sbb
lods
jbe
sub
movsl
adc
jl
arpl
push
ljmp
xor
int
jno
arpl
dec
shr
lods
lods
les
pop
push
pop
pop
jnp
cmp
les
data16
inc
cmp
mov
test
sbb
mov
sarl
fsubrs
call
push
dec
jge
lcall
xor
aam
cmpsl
fnstsw
shr
pop
dec
mov
movsl
mov
rorl
xchg
inc
fists
sbb
cwtl
or
loopne
lret
pop
shrl
scas
add
push
or
mov
lcall
push
mov
add
cmp
cmp
add
testb
dec
sbb
sahf
mov
push
pop
mov
jp
flds
sarl
inc
push
test
fisubl
rorb
push
outsb
cmpsl
sbb
or
xchg
adc
sub
lds
mov
faddl
mov
xchg
xchg
pop
cmp
mov
xchg
faddl
and
dec
movb
jne
xchg
repz
adc
adc
icebp
or
bound
aaa
out
mov
addr16
test
movsl
mov
cmp
cmpb
sub
shll
fnstsw
adc
iretw
fwait
cmpsb
jecxz
or
sbb
gs
adc
mov
mov
out
xchg
mov
sarl
movsl
push
xchg
sbbb
jg
cmc
rcl
ljmp
dec
iret
cld
mov
push
lret
dec
and
mov
fidivl
mov
outsl
ss
cmp
jg
dec
lret
aam
fcomip
orb
push
sub
dec
xchg
xchg
fnstsw
push
add
adc
rorb
ja
fidivrl
mov
aad
jae
jo
pop
lret
push
jne
and
and
add
push
fisubrl
cmp
dec
in
sarb
jbe
mov
mov
jnp
ja
shlb
hlt
and
push
push
clc
jo
sub
sbb
in
and
arpl
jo
xchg
fwait
inc
cmp
adc
leavew
idiv
loop
fwait
xchg
cmp
and
pop
xorb
jge
cwtl
and
mov
jne
xchg
stos
and
test
inc
daa
xor
and
stos
push
mov
sbb
cltd
sahf
mov
fldl
xchg
pop
cwtl
mov
idivb
xor
iret
ret
pop
jmp
or
pop
out
daa
jp
loope
pop
sbb
jmp
mov
adc
aas
movsl
or
cmp
bound
pop
aam
cmp
sub
loope
inc
and
rorb
mov
sub
and
mov
out
push
or
flds
call
xchg
and
dec
jg
push
adc
loop
inc
aaa
sahf
mov
push
andb
mov
xchg
mov
imul
and
add
ds
push
xchg
ret
fwait
push
inc
dec
jae
shr
popa
mov
jne
jp
popf
xlat
stos
outsl
sbb
xchg
add
adc
aaa
push
adc
iret
lahf
xchg
shlb
jmp
repnz
inc
mov
cmp
sub
imul
loope
cmp
cmp
sub
cmc
cmp
mov
loope
mov
jne
mov
inc
outsl
in
shl
adc
test
cmp
cmp
lahf
or
pop
insb
repz
or
fucom
sbb
pop
rcr
cmp
pushl
push
sub
testb
sbb
stos
push
popf
scas
pop
adc
mov
fisttpll
daa
push
je
fwait
dec
sub
push
outsb
adc
xor
ja
sarb
mov
test
scas
and
lods
lods
or
mov
aaa
dec
scas
push
fsubr
xor
xchg
inc
jae
inc
ss
fstps
jnp
jp
cli
daa
xor
loop
in
out
dec
ja
inc
xchg
inc
pop
mov
cmp
inc
jbe
mov
mov
adc
pop
push
xorb
std
mov
sbb
les
cmp
rcll
xor
cmp
cwtl
mov
dec
in
hlt
mov
cwtl
xchg
popf
fabs
mov
test
push
insb
inc
sub
or
push
shrl
mov
xor
mov
fisttpl
rclb
or
into
inc
pop
clc
mov
and
lods
xor
fsubrp
sti
mov
mov
mov
fnstenv
in
lock
sbb
sbb
inc
popf
mov
gs
jge
pop
or
iret
adc
add
mov
mov
sub
loop
sbb
and
xor
stos
repnz
pop
dec
add
add
into
add
cmpsl
push
mov
sbb
sbb
push
pop
aas
and
out
mov
scas
adc
dec
int
rcl
repz
daa
mov
bound
xor
push
repnz
push
cmp
dec
fdivrl
xor
ljmp
jge
lock
push
jg
dec
movsl
jmp
filds
scas
mov
xchg
jno
mov
test
add
outsb
hlt
jno
mov
sbbb
sbb
fiadds
sub
inc
jecxz
inc
je
aam
sub
sub
inc
stc
aad
mov
cli
mov
mov
dec
cwtl
lds
loope
cmp
fmull
movsb
cmp
aad
cmp
push
test
cmp
and
jns
push
das
adc
mov
jg
lcall
push
stos
fcoms
dec
cmc
pop
xor
push
inc
es
std
push
out
inc
pop
mov
lahf
scas
cmp
dec
aas
data16
aas
call
sarb
pop
adc
mov
mov
mov
cmp
sub
cli
pop
stos
in
loopne
ss
imul
sbb
les
adc
jne
mov
push
rclb
loopne
adc
sbb
adc
jno
dec
inc
dec
lock
lods
in
std
insl
cmp
daa
pop
mov
jmp
fisttpll
mov
mov
rolb
lods
cmp
inc
mov
cwtl
cmc
loope
repnz
rcll
lock
mov
inc
pop
xchg
frstor
add
mov
and
in
test
pushf
cmpsl
sbb
je
mov
sub
add
jne
stos
xor
xchg
jne
push
arpl
or
mov
mov
pop
or
cmp
andl
dec
adc
pop
mov
loop
fsubl
loope
dec
xor
dec
sti
pop
and
or
addr16
push
mov
inc
push
out
sbb
and
add
sbb
sbb
lret
and
xor
mov
push
mov
dec
nop
sbb
push
pusha
nop
clc
inc
ja
inc
dec
movsb
sbb
loopne
mov
in
filds
mov
xor
int3
outsb
out
loope
and
sub
jle
shll
jle
mov
fs
push
xor
cmp
pop
dec
jb
and
push
fldenv
out
mov
push
cmp
mov
icebp
data16
sbb
xchg
pop
sbbl
sbb
add
xchg
mov
add
dec
cmp
ds
cmp
mov
xor
dec
repz
int3
mov
test
insb
or
add
pop
cmp
dec
xor
seto
test
fwait
inc
or
push
and
adc
push
rclb
sub
and
cmp
sbb
add
add
pop
and
imul
subb
andb
es
and
addb
xor
shrb
jecxz
ss
icebp
outsl
add
shlb
push
xchg
ret
loope
dec
mov
cmc
aas
sub
mov
loop
push
sbb
add
adc
push
push
icebp
dec
sbb
inc
dec
xor
lret
arpl
push
insb
cmpsb
loop
test
sahf
cwtl
xchg
clc
pop
sub
jmp
call
push
inc
add
and
cmp
dec
fstpl
rolb
or
pop
je
cmp
loopne
pop
dec
fwait
mov
cmpsl
xor
push
mov
ret
addl
cmp
adc
addr16
rorl
out
int3
stos
rclb
ljmp
jb
aam
dec
stc
add
sub
xor
adc
adc
stc
and
in
cmp
sbb
std
ljmp
cmp
in
pop
xor
loopne
lcall
adc
or
fwait
mov
lahf
sub
imulb
cli
inc
mov
mov
jae,pn
or
pop
and
sbbb
inc
jmp
aas
aam
xor
loope
mov
jnp
jg
xchg
mov
or
fidivs
outsl
adc
scas
or
scas
cmp
in
push
and
jns
dec
dec
inc
cwtl
sbb
stos
loopne
mov
les
jo
push
pop
jg
push
and
stos
xchg
dec
sahf
js
inc
sbb
clc
push
add
in
cmc
cmpsl
mov
roll
lahf
lcall
pop
dec
lret
js
or
ds
xor
leave
fs
imul
cmp
or
or
in
sti
mov
incl
xor
xchg
mov
inc
adc
shrb
jae
fldcw
push
xchg
cmp
movsb
pop
xchg
int
sti
sbb
xchg
xchg
std
arpl
and
fsubs
xor
and
shrb
jbe
push
fldenv
lret
and
js
cmpsl
in
stos
jbe
mov
adc
dec
loope
gs
xor
cmp
jg
nop
inc
adc
aaa
cld
clc
fwait
pusha
xchg
ficoml
cmp
out
repnz
ljmp
sbb
cmp
push
inc
and
sub
mov
cmpb
data16
lock
daa
cwtl
pop
lret
sti
jl
sbb
inc
pop
nop
movsl
loopne
es
push
insb
dec
push
mov
inc
adc
test
xchg
and
push
sbb
cmp
daa
xlat
inc
outsb
or
or
sbb
push
outsl
pop
inc
dec
adc
dec
jo
pop
sbb
mov
lcall
mov
iret
adc
lods
adc
fadds
or
mov
push
loop
jl
add
inc
int3
je
ds
sub
fucomp
repz
xchg
jle
lods
fs
int3
fwait
dec
jb
shlb
mov
cs
adc
xchg
sahf
or
push
inc
add
clc
enter
bound
bound
andps
sub
dec
sub
push
jg
ret
std
aaa
lahf
pop
jecxz
push
fistpl
sbbl
push
push
xchg
dec
push
mov
cmp
and
movsb
mov
mov
bound
std
push
or
jne
shrb
sbb
lock
jb
xchg
push
mov
jge
test
insb
movsb
data16
inc
sahf
cmp
inc
cs
in
cld
icebp
lds
cltd
push
mov
pop
adc
out
orl
inc
mov
xor
ja
scas
cmpsb
mov
adc
out
fadds
mov
dec
sub
add
and
ficoml
sbb
and
fucomi
mov
popa
push
mov
loopne
dec
sbb
ficompl
movsb
out
movsl
sti
sbb
lcall
adc
xor
mov
lock
adc
fcoml
rcl
repnz
pop
xchg
and
push
sub
jecxz
or
cmpsl
mov
jne
bound
or
js
stos
push
dec
mov
fstp
mov
mov
movsl
or
or
stos
add
sar
xchg
mov
add
xor
cwtl
subb
shll
fwait
pop
xor
cmp
and
sbb
sub
mov
xchg
push
pop
xor
inc
cmp
hlt
adc
cwtl
mov
pushf
sbb
mov
push
pop
jle
dec
arpl
mov
push
bound
inc
sub
aaa
mov
or
fs
fld
loope
adc
mov
cmc
stos
stos
out
fdivl
pop
pop
ss
push
push
call
sarl
dec
repz
adc
leave
cld
int3
jne
xor
movsl
lock
imul
inc
addr16
lcall
cmp
and
icebp
stc
cmp
test
cmp
pop
xlat
cltd
lods
shrb
dec
jnp
dec
cltd
jg
ret
out
cwtl
mov
and
lret
xchg
rol
cli
xor
mov
movsb
cld
movsb
adc
movsl
repz
lahf
xor
pop
cmp
fidivrl
sub
dec
push
ja
ficoms
jmp
inc
add
jl
lods
inc
sub
adc
inc
jne
xor
ror
lret
xchg
cmp
cmp
cwtl
loope
js
mov
cmc
insb
dec
inc
nop
add
pop
loopne
pop
je
xor
lods
mov
adc
out
mov
ljmp
arpl
mov
mov
iret
push
sbb
dec
enter
in
inc
sub
pop
repnz
xchg
lret
fisttpl
push
jnp
mov
and
dec
push
fadd
dec
mov
push
dec
jae
or
stc
imul
cltd
mov
aaa
mov
stos
dec
dec
andb
pop
fldenv
daa
jbe
adc
mov
mov
add
imul
andl
cmp
pop
mov
xor
xor
nop
pop
xchg
int
outsb
adc
and
loope
subb
cmpsb
xchg
dec
lea
lahf
imul
sbb
dec
popa
mov
or
data16
arpl
pop
pop
ja
dec
bound
xchg
iret
cltd
pushf
jb
testl
movsb
pushf
adc
bt
pop
ja
cmp
inc
test
std
scas
cs
adc
inc
sahf
inc
pushf
sub
and
imul
inc
inc
dec
xor
pop
pusha
sbb
adcb
shll
aas
sbb
mov
clc
sarb
lods
lock
sbb
addr16
cmp
add
inc
add
cmpsl
xchg
ror
jne
mov
dec
test
cmpb
dec
mov
or
and
outsl
add
or
or
mov
mov
popa
movsl
fwait
lock
dec
iret
pop
pushf
daa
xchg
jo
jb
mov
push
mov
stos
scas
sub
lcall
incl
lds
pop
push
xor
clc
push
ja
cmp
cmpl
jecxz
push
sub
cmpb
mov
hlt
fsin
xchg
shll
dec
lods
pop
cmp
fcoml
popl
mov
punpckhdq
lock
std
sub
loopne
add
or
push
xor
jns
sbb
and
push
pop
cmp
push
jmp
out
mov
and
jl
je
push
and
xor
mov
jg
mov
mov
cmp
insb
movsl
dec
xchg
pop
inc
dec
mov
fisttpll
sbb
cmp
sahf
add
rcr
pop
and
mov
sarb
mov
icebp
inc
shl
dec
push
pop
cmp
mov
sahf
adc
incb
inc
push
mov
mov
je
lea
cmp
inc
out
jns
lods
lret
hlt
mov
mov
mov
sbb
mov
lea
cmc
push
mov
mov
into
insb
cltd
dec
sahf
mov
fsubr
scas
fists
sbb
popa
cmp
pop
xor
or
arpl
pop
inc
push
sbb
dec
jns
jge
dec
mov
lret
mov
and
inc
jne
jg
lock
cmpsb
in
adc
cmp
aam
or
in
roll
jnp
cmpsl
sbb
and
mov
xchg
and
xchg
aam
jg
push
arpl
aad
inc
inc
push
mov
xchg
popa
adc
pop
aaa
test
jmp
fs
scas
push
sti
call
sbb
pop
loope
add
cmp
fdivs
mov
dec
dec
lds
or
dec
sub
and
mov
cmp
add
push
aaa
shlb
int3
mov
cmp
or
mov
sub
lahf
jbe
stos
fwait
aas
mov
add
popa
push
xor
mov
xor
cli
inc
inc
xchg
pop
aam
je
jecxz
add
mov
mov
pop
and
ja
mov
mov
lock
popa
test
test
sbb
mov
mov
sbb
sub
test
sub
xchg
call
sub
in
mov
jmp
rorb
sarb
or
cmp
loope
cmp
adc
dec
push
lods
aaa
idivb
pop
popf
mov
pop
dec
call
mov
hlt
pop
and
scas
and
cmp
inc
int3
dec
jp
and
leave
or
inc
mov
int3
jne
lock
pop
jle
jbe
inc
mov
aas
push
mov
idivl
sbb
addb
addr16
pop
sub
sbbb
add
mov
adc
sub
in
inc
aaa
arpl
inc
pop
ss
mov
clc
and
sbb
sbb
mov
xor
inc
sub
jo
jle
aad
pop
adcl
add
imull
mov
xor
sub
fstps
and
adc
xchg
cmp
and
jnp
mov
inc
inc
mov
dec
sub
in
gs
push
stos
push
add
aam
out
outsl
popa
xor
cli
mov
je
sub
adc
sbb
mov
and
loope
push
pop
test
lock
sub
mov
test
or
outsb
fisubs
dec
loopne
push
pop
out
inc
jmp
mov
fmuls
jo
data16
fdivr
and
mov
pop
and
pop
sub
nop
cmp
and
aam
data16
mov
sti
flds
add
aam
dec
repnz
and
and
jae
fs
in
iret
dec
into
daa
repz
icebp
stos
js
lret
subb
push
jg
and
loopne
sbb
mov
dec
xor
cltd
arpl
mov
push
shlb
outsl
push
arpl
enter
jge
pop
pusha
sub
gs
or
daa
mov
sbb
dec
mov
ja
and
mov
pop
mov
aaa
lahf
cmp
insl
clc
gs
sub
stos
test
adc
cmc
lock
xor
hlt
cmp
pop
and
popa
mov
cmp
ss
shl
cmp
xor
decb
hlt
cmp
xorl
or
xchg
push
adc
aas
pop
addb
and
mov
cmp
das
daa
jle
cmp
shr
shll
testl
ljmp
and
push
stc
mov
sub
dec
les
lahf
push
xchg
mov
arpl
mov
or
fistpl
jg
int3
mov
aas
lods
sub
mov
loop
xchg
stos
icebp
fwait
je
push
aas
fistpl
lcall
out
filds
fwait
xlat
push
sti
pop
sbb
int
mov
in
pop
xchg
iret
cmp
sub
xor
inc
cmc
test
cltd
mov
dec
add
mov
aaa
cmp
sub
sbbb
sbb
sbb
mov
xor
mov
or
pop
stos
insl
pop
insb
lock
push
xor
dec
fsubp
mov
push
movsb
pop
jmp
popf
or
shr
dec
sbb
xor
fnstenv
lret
jns
mov
seto
sbb
xchg
push
cmp
aaa
int3
jecxz
fs
repnz
pop
pop
outsl
inc
loop
dec
jae
add
stc
rol
inc
mov
pop
arpl
std
add
cmpsl
leave
divl
into
repnz
fsubs
or
jmp
and
xor
adc
add
bound
loopne
dec
gs
push
mov
mov
xchg
or
lcall
mov
out
cmp
daa
ja
jo
lcall
jmp
imulb
add
dec
fisttpll
mov
mov
mov
ljmp
in
sbb
push
adc
inc
in
inc
imul
and
and
push
xor
mov
sub
fdivl
jo
push
lea
dec
pop
and
inc
mov
jne
movsl
dec
leave
xor
sti
sbb
lcall
daa
mov
cs
pop
mov
cwtl
cmp
xlat
fs
movsl
push
cmp
add
sahf
std
xchg
mov
inc
jb
adc
cltd
loopne
mov
scas
addr16
lahf
leave
cld
insb
xor
or
nop
mov
push
movsb
jge
and
imul
movsb
jbe
lea
es
jle
pushf
dec
cmp
mov
sbb
mov
xchg
test
xor
fwait
dec
sti
lock
sbb
jecxz
or
into
xchg
xchg
cmp
loope
mov
dec
cs
cmpsb
sbb
lcall
xor
lcall
inc
cltd
dec
adc
fisttpl
and
sub
scas
in
cmp
sbb
nop
loop
mov
in
aad
in
aaa
test
cmp
lods
loop
sbb
dec
add
jecxz
pop
push
pushf
in
jg
pop
cmc
push
xchg
aas
data16
push
ja
mov
sub
xchg
mov
test
inc
cmp
pop
sarb
cwtl
jecxz
and
subl
das
pop
imul
rclb
jnp
mov
cmp
ret
sub
dec
icebp
fstps
cwtl
cwtl
jns
cld
dec
loopne
adc
sti
imul
and
arpl
add
sbb
lcall
addb
xor
fwait
ljmp
movsb
push
mov
or
cltd
call
out
lahf
cmpl
push
adc
push
ret
pop
sbb
and
or
popf
hlt
rorl
pop
or
push
dec
jl
pop
fidivs
adc
mov
clc
push
jmp
inc
xchg
das
add
xor
dec
cmp
mov
pop
cmpsl
xor
fists
jbe
in
mov
cmp
dec
into
out
aas
xchg
mov
or
stos
and
stos
scas
adc
dec
cmp
jb
fnstcw
push
xor
int3
dec
mov
pop
movsb
popa
mov
mov
stos
js
enter
enter
cmp
icebp
ds
lahf
cltd
and
add
xor
mov
xor
push
dec
loope
inc
aam
sbb
cmp
sahf
dec
sbb
jmp
daa
int
cmp
adc
inc
andl
push
add
jbe
std
into
mov
pop
inc
int
pop
jle
popf
push
mov
js
sbb
nop
xor
hlt
cmp
das
scas
arpl
mov
aam
daa
xchg
inc
jnp
jno
rorb
pop
sbb
enter
in
sti
orl
push
xchg
lcall
addr16
add
and
xchg
dec
xor
pusha
icebp
in
pusha
cmp
push
and
loope
loopne
jmp
bound
mov
rolb
ret
popf
sub
test
loopne
shrl
mov
lods
xchg
pushf
or
sbb
test
fwait
call
gs
fldt
and
cld
in
mov
dec
stos
or
jmp
add
jecxz
lret
xchg
stos
enter
sbb
mov
mov
cmpl
mov
adc
xor
inc
pop
mov
cld
out
subb
adc
loop
cld
int
imul
cmpsl
push
aam
and
dec
pop
lcall
xchg
aas
mov
rorb
or
xor
in
jmp
cmpb
icebp
cmpl
mov
push
mov
mov
rcrl
dec
push
inc
mov
cmp
or
pusha
cmp
in
test
push
jecxz
and
push
dec
pop
in
cmp
jo
mov
test
and
daa
out
orl
loop
push
je
jecxz
xchg
pop
shll
sbb
jo
push
js
and
push
ja
mov
dec
in
enter
add
mov
cltd
mov
fsubrs
cmp
adc
push
pushf
mov
mov
in
lret
clc
mov
and
hlt
sti
sub
jnp
mov
mov
aam
add
mov
xchg
lcall
icebp
adc
add
pop
cmp
leave
loope
cmp
dec
xor
mov
mov
bound
stos
mov
mov
and
push
xchg
mov
mov
jmp
daa
jmp
xor
and
cmpsl
and
out
dec
sbb
loop
cmpsl
test
outsb
mov
dec
and
and
lods
gs
popa
adc
push
jnp
je
loopne
or
jne
push
mov
arpl
xor
ffree
mov
adc
mov
cmp
cmp
loopne
cmp
push
xor
in
loopne
inc
inc
push
jns
xor
and
addr16
mov
adc
cmpsb
int3
loopne
xor
push
cmc
xor
sbb
dec
push
loopne
ret
dec
test
cld
jne
push
inc
sub
and
shrl
dec
cmc
mov
pusha
xor
and
push
popa
mov
dec
loopne
adc
mov
aad
int3
ret
sar
es
pop
insb
data16
cli
stos
sbb
sbb
arpl
clc
sub
es
in
fistpll
add
pop
icebp
lock
cmp
inc
std
loope
in
pop
mov
sub
std
and
pop
jp
mov
xor
rclb
clc
mov
out
stc
cs
inc
lds
add
dec
scas
dec
cmp
mov
cmp
lea
cmpsb
sbb
fsubl
in
orl
and
outsb
mov
add
mov
or
stos
fidivrs
lret
sub
dec
mov
test
in
mov
mov
xor
scas
mov
fwait
nop
lret
jbe
fisttpll
pusha
lret
and
loopne
xor
inc
xlat
cmc
sub
mov
sbb
and
xchg
push
movsb
cli
lds
call
clc
pop
test
lock
ds
or
ret
movsl
lret
mov
rcrl
push
daa
shll
push
cmp
fwait
mov
cmc
push
and
push
loopne
adc
cs
in
inc
push
cmp
fs
cmpsb
aas
in
aas
xchg
sahf
pop
mov
in
iret
jno
dec
testl
movsl
lret
clc
cli
out
aam
jbe
dec
mov
pop
aam
sub
inc
xor
push
fcom
cs
adc
or
mov
dec
bound
and
fstp
xor
jp
xchg
imul
repnz
cmpsl
sbb
mov
imul
cmc
sub
arpl
push
loopne
outsb
sub
adc
inc
out
jmp
or
push
sbb
scas
stos
sbb
pop
cltd
loopne
and
iret
cmc
cli
xchg
mov
pop
jge
call
push
inc
pop
xchg
cmp
xlat
pop
fsubs
or
dec
fdivr
xlat
add
xchg
dec
cmp
sti
mov
inc
data16
rorb
movsb
xchg
dec
and
sub
cld
push
cmp
idivb
hlt
sbb
test
mov
mov
cmp
push
add
repnz
lcall
lcall
inc
insl
jle
xchg
ret
dec
fcmovnbe
dec
scas
mov
jmp
cli
dec
jns
sti
and
and
fwait
or
xlat
xor
enter
push
lcall
pop
repnz
popa
push
push
inc
orb
jns
push
mov
rolb
stc
mov
inc
fwait
lret
mov
pop
mov
add
xchg
cmp
les
mov
and
cmp
jns
push
cmp
mov
les
add
in
out
add
imul
popa
pop
cmpsl
lret
push
rorl
push
xlat
stos
sub
xchg
movsb
movsb
int
insl
adc
cmp
ds
rclb
divb
cmp
jno
pop
fwait
lods
cmp
push
push
jmp
cmpsb
pop
jecxz
and
insl
idivb
dec
jnp
jne
cmp
add
scas
xor
fsub
sub
int3
nop
insb
push
loopne
ss
je
mov
push
mov
mov
jb
and
inc
mov
pop
addr16
pop
inc
cmp
js
push
out
dec
xor
bound
cltd
stc
lahf
mov
sbb
insb
mov
sbb
lds
xchg
ljmp
and
fcmovbe
rorl
aam
dec
out
xchg
pop
in
mov
jae
pushf
jge
push
jne
lods
out
pop
cmpsl
cli
fldenv
pop
pop
adc
cmp
nop
fxch
pop
imul
xor
adc
cmpsb
mov
aaa
cmp
je
pop
sbb
jne
rclb
in
dec
call
push
push
es
rorl
jae
mov
adcb
outsl
dec
adc
and
push
and
cmp
movd
dec
jp
mov
clc
dec
je
in
out
in
add
adc
in
les
jg
sbb
mov
xchg
pop
xchg
xor
jne
aas
add
or
and
pop
mov
and
inc
into
jg
sarb
cli
daa
inc
mov
mov
cmpsl
and
ret
bound
cmp
pop
inc
adc
push
sub
dec
push
jno
mov
aam
scas
ljmp
adc
sub
mov
je
or
stos
adc
ret
xor
in
add
pop
nop
cmp
fdivrp
jg
mov
les
xor
dec
inc
leave
jne
negl
cmp
adcb
xchg
stc
mov
lds
cmc
rcr
and
adc
pop
dec
mov
outsl
adc
dec
push
sbb
sbb
loopne
iret
stos
dec
inc
bound
mov
test
xor
fisttpll
andb
and
xor
mov
stc
pusha
dec
mov
jo
aam
inc
rcl
loopnew
stos
cld
test
pop
jg
fwait
adc
dec
pop
add
ss
pop
mov
xchg
push
out
ss
jne
xor
mov
fdiv
notl
out
stc
jb
add
mov
dec
stos
data16
or
iret
cmp
xorb
jbe
or
aam
mov
adc
inc
cmp
mov
xchg
js
pop
loop
dec
outsl
imul
lods
test
jne
mov
and
jg
and
adc
stos
dec
jb
and
les
sub
inc
dec
push
rolb
lods
rolb
shll
or
push
out
sub
movsb
xor
test
cmp
test
dec
popa
mov
out
stos
dec
js
cmp
pop
cli
jo
inc
jmp
in
cmpsl
cmp
push
pop
push
addr16
sbb
sbb
xchg
movsl
sbbl
cmp
fisubrl
cld
jecxz
popa
out
sub
sub
lret
xlat
push
ljmp
pusha
push
or
icebp
mulb
inc
int
mov
enter
and
in
or
ljmp
sub
loopne
mov
cmp
data16
scas
or
jle
mov
sub
ret
sbb
xor
in
adc
cld
adc
adc
frstor
pop
add
aam
inc
aas
cmc
dec
jp
bound
in
fldenv
decl
out
call
jecxz
test
mov
pop
hlt
cmp
and
sahf
cwtl
dec
mov
dec
push
inc
jg
lods
push
aam
sbb
sub
adcl
int3
jo
mov
int3
mov
movsl
and
sbb
dec
stos
push
mov
jmp
sub
aaa
lret
rcrl
fldenv
jmp
std
xchg
cmp
mov
sbb
arpl
sbb
in
ds
inc
in
cltd
push
adc
push
push
lds
popf
sub
mov
cmpsl
call
fcoms
xchg
fwait
cmpsl
push
fcomi
stos
sbb
adc
push
pop
xchg
xchg
mov
mov
stos
insb
ds
arpl
imul
mov
ja
ljmp
push
iret
mov
xchg
std
stc
je
orb
je
adc
adc
mov
orb
pop
cmp
push
xchg
xor
fidivl
fcom
insb
mov
out
and
orl
out
leave
xor
popf
inc
jns
shlb
and
popf
lcall
or
jne
pop
xchg
adc
jmp
lcall
fsubl
stc
loopne
mov
pushf
loopne
pop
sbb
ret
cmp
xor
xor
push
xchg
jge
stc
shrl
hlt
mov
adc
push
call
test
and
pop
loopne
pop
fidivrl
fwait
xor
cmp
fdivrs
inc
sbb
or
cwtl
inc
push
cmp
push
test
gs
push
js
ja
jne
push
sahf
sbb
lret
loopne
sub
outsl
stos
data16
cli
es
shlb
sahf
mov
call
sbb
push
mov
aad
imul
movsl
push
lods
test
shlb
fnstcw
adc
mov
mov
xchg
fdivs
mov
or
imul
xor
scas
cld
fwait
stos
xor
pop
jno
sub
and
cltd
sub
leave
pop
dec
fidivs
movsl
in
sbb
lret
fisttpll
dec
arpl
jecxz
insb
rolb
jne
nop
dec
fs
jge
pop
and
mov
push
cmp
jmp
movsb
or
push
loope
mov
add
dec
rcrb
imul
and
lods
insb
jno
pusha
sub
out
dec
bound
fucomp
lock
loop
and
fadds
xchg
dec
inc
decb
cmp
stc
jne
push
and
adc
and
lret
push
test
dec
rclb
sub
movsl
jp
int3
push
dec
xor
aas
lahf
inc
dec
jo
ja
dec
pop
flds
fcomps
pop
loopne
das
adc
push
sbb
cli
cmp
jmp
jns
fmuls
mov
mov
push
add
lret
ficoms
in
call
mov
cmp
mov
pop
jae
andb
cs
dec
pop
push
push
clc
push
lcall
or
mov
loop
xchg
fmuls
cmp
outsb
jo
mov
xor
lods
xchg
stos
xor
cmp
aas
loope
inc
out
jp
and
jmp
sbbb
test
dec
in
sbb
int3
and
mov
and
xor
inc
bound
es
ja
xchg
mov
inc
jecxz
aad
scas
cmpb
daa
mov
lahf
and
mov
pushf
lods
xchg
jmp
inc
fmuls
sti
cmp
add
inc
and
pop
adc
cwtl
fs
and
sub
mov
xorb
xchg
ds
xchg
in
shlb
insb
sbb
dec
out
sarb
mov
js
pop
pop
shr
jl
dec
rcr
jg
dec
push
popf
stos
fs
out
stos
sub
in
dec
pop
jle
xor
jbe
cwtl
cmp
or
sbb
push
or
inc
add
add
cmpsb
shlb
sub
xor
fiaddl
scas
jmp
popa
call
shl
push
jnp
test
sbb
jnp
pop
and
movsl
stos
jne
je
ds
out
xor
cmp
inc
or
mov
inc
push
aam
std
mov
xor
lret
and
push
out
push
je
fsubs
cmp
sub
push
dec
ret
xor
dec
cmp
push
sub
pop
xchg
xor
movsb
mov
sub
push
push
enter
inc
js
scas
or
ds
mov
dec
and
shll
mov
negb
test
xchg
and
ljmp
cmpsb
mov
jle
scas
inc
sarb
cmpsl
adc
out
movsb
ljmp
sub
cmp
daa
xchg
aaa
sub
pop
scas
sahf
push
mov
rorb
cltd
jbe
mov
sbb
inc
cmc
pop
cmp
es
jecxz
dec
lock
cmp
out
bound
inc
scas
mov
fnstcw
push
test
inc
jb
mov
sub
mov
xor
sahf
and
loopne
jo
sbb
cmpsl
nop
std
jge
fstpt
data16
nop
adc
std
push
inc
adc
cmpb
popa
in
add
push
push
in
sbb
xchg
movsl
jb
out
adc
jg
mov
in
cmp
or
mov
fisubs
fildl
in
inc
inc
or
xchg
push
lods
xchg
push
add
call
dec
es
push
fs
push
and
cmp
mov
or
scas
movsb
insl
inc
mov
ret
mov
push
pop
mov
cmp
mov
arpl
ret
xorl
fwait
sbb
inc
pop
sbb
fst
adc
movb
into
inc
cmpxchg
mov
arpl
clc
inc
arpl
inc
or
adc
loop
inc
mov
inc
adc
lahf
test
scas
sub
cmp
jnp
inc
fwait
pop
xor
or
loop
push
popa
das
loopne
add
lods
jge
sbb
pop
dec
sub
shlb
jne
inc
inc
mov
jne
hlt
out
cwtl
mov
dec
into
lea
dec
test
jno
and
sar
shrl
cmc
shrb
mov
ficoml
xor
int
and
rcr
xchg
jnp
lea
inc
subb
add
cltd
loopne
loope
inc
stos
jg
aam
jp
dec
in
sarb
xchg
mov
pop
push
adc
frstpm(287
dec
bound
loop
out
xor
cmp
insl
andb
xor
mov
cmp
loopne
adc
xor
fadds
and
in
cmpsl
filds
test
inc
sub
or
jmp
cmp
mov
sti
aas
fsubl
jo
pushf
arpl
iret
jmp
xchg
fwait
and
mov
jno
sahf
in
out
sahf
imul
lods
xor
xchg
ja
cmp
nop
inc
loop
sbb
mov
xor
jno
mov
cmpsb
aam
jns
scas
jnp
sub
fldl
mov
cmpsb
xchg
push
inc
and
pop
push
dec
imul
dec
jge
mov
jo
xor
cmp
fcmovnu
pop
in
or
xchg
or
mov
jmp
cmp
cmp
push
js
jne
adc
bound
ja
jl
lods
mov
push
and
xchg
adc
ja
or
arpl
cmp
arpl
decl
repnz
subb
pop
jl
dec
sbb
sbb
dec
test
or
mov
addr16
jb
int3
xchg
aad
dec
data16
push
or
roll
je
and
fneni(8087
mov
mov
sete
js
ds
arpl
repz
lock
inc
xor
cmp
add
mov
dec
in
add
stos
push
adc
leave
repz
mov
jbe
popf
xchg
aad
out
cltd
out
and
mov
and
cmpsl
adc
jmp
xlat
aas
in
test
icebp
push
pop
dec
jge
sahf
adc
sbb
or
jnp
lock
dec
and
dec
hlt
out
pop
rcrl
test
and
cs
push
sahf
fnstcw
cmp
sbb
popa
and
pop
cmpsl
aad
dec
in
loope
decl
das
loopne
js
and
in
ja
push
xchg
idivb
cltd
dec
mov
dec
pop
outsb
lea
icebp
nop
insb
pushf
xor
dec
popa
pop
sbb
adcb
sub
mul
in
cmp
lcall
fdivp
lods
bound
in
lods
xchg
xor
dec
pop
stos
addr16
adc
cmp
mov
repnz
out
inc
xor
sub
and
sbb
dec
aaa
test
insl
and
ficoml
inc
in
pop
pop
adc
jae
lret
test
hlt
push
add
out
xchg
cmpsl
push
sub
mov
fcom
xor
push
mov
cmp
jge
cmpsb
mov
push
iret
xor
cmp
cwtl
adc
test
xchg
dec
push
lock
and
push
and
or
cmp
test
outsb
je
scas
fs
jle
jge
leave
cwtl
push
adc
inc
and
xchg
sahf
cmp
push
cmp
adc
and
push
cwtl
lods
pusha
das
push
pop
ja
rol
add
sub
pop
loopne
dec
out
inc
push
fiaddl
jle
cld
cli
add
cmp
jne
sbb
dec
sarb
pop
xor
jae
loopne
cld
push
sbb
sbb
push
push
insl
sbb
out
aas
lret
mov
and
loopne
inc
dec
and
sub
mov
jp
lcall
mov
cmp
popf
das
ret
std
lahf
in
xor
in
sarb
or
adc
cld
arpl
in
xor
adc
sbbb
xchg
xlat
in
cmpsl
andb
jae
cmp
jl
mov
stos
lock
and
loop
aaa
je
or
aam
push
adcb
jge
cmpsl
sbb
repz
loopne
mov
lcall
adc
and
arpl
fld
push
dec
inc
pop
repnz
sub
adc
cwtl
and
dec
ss
dec
dec
cltd
test
mov
xchg
mov
lods
cmp
ds
or
xchg
decb
dec
add
ss
bound
fdivl
int
pushf
dec
in
call
jl
lahf
cmc
fwait
pop
stc
rcr
cmpsl
nop
jbe
testl
stos
ja
or
jns
daa
stos
frstor
loope
cmp
insb
pop
pop
roll
rolb
orb
popa
les
sbb
xchg
cld
addr16
fdivrs
cmp
imul
ja
cmpsb
add
mov
dec
cmp
mov
dec
lods
pusha
sub
in
cltd
mov
dec
dec
jbe
xchg
movsl
repz
inc
std
addb
pop
jl
shl
out
sarb
sbb
push
cmc
rcrb
pop
and
loop
cld
sub
inc
daa
outsb
pop
fwait
stc
mov
mov
sbb
out
lret
xchg
aaa
je
mov
sahf
stos
stos
cld
and
mov
cld
js
mov
fcmovbe
nop
cmp
mov
insl
xlat
mov
or
fsubl
pop
dec
push
dec
popa
stc
mov
cmp
cmp
aaa
repnz
or
call
ljmp
loopne
stos
js
lret
dec
dec
shll
icebp
hlt
and
and
mov
inc
xor
push
test
cmp
shr
insb
lcall
jne
sbb
and
and
in
adc
lea
mov
loope
cmp
add
jle
out
push
cmp
sbb
cmp
dec
push
adc
inc
dec
mov
in
mov
bound
pusha
mov
fldl
mov
add
scas
popl
rcrl
xchg
pop
ror
mov
jne
cmpsb
lods
fsubs
inc
je
mov
or
insl
fsubrl
insl
add
std
jl
fmull
jo
test
rcrb
movsb
mov
pop
dec
inc
pop
fcompl
push
jno
sti
and
ret
cmp
popa
dec
in
xchg
and
cwtl
lock
ffreep
jl
xor
icebp
xor
push
mov
fsubrs
mov
pop
in
xor
lods
add
dec
mov
loopne
jecxz
mov
ret
aas
add
adcb
aad
and
dec
fsts
icebp
lds
lea
sbb
and
dec
add
push
pop
clc
fs
cltd
les
xchg
mov
pop
inc
cmp
pop
and
rcrl
jle
ficoml
mov
cmpsb
lret
aaa
data16
mov
adcl
loopne,pt
sub
das
sub
jg
sbb
fsubrl
scas
in
and
fprem1
or
ljmp
bound
jp
ds
lret
cmpb
and
xchg
mov
dec
pop
xor
jo
pop
adc
mov
sbb
stos
push
dec
cmp
dec
push
push
aaa
arpl
jle
sub
enter
mov
lea
and
sub
jns
xor
mov
push
dec
incl
stos
sbb
lret
add
adc
xor
pop
push
dec
lock
and
test
adc
in
mov
inc
pushf
ljmp
push
pop
sbb
dec
out
jmp
mov
shr
dec
mov
xlat
aas
outsl
push
dec
fucom
fistl
mov
nop
jge
adc
jmp
cmp
subl
sbb
das
cmpsl
push
lret
nop
cmp
mov
call
pop
repz
push
mov
addl
and
adc
jge
hlt
jno
in
loopne
mov
lahf
dec
mov
lock
push
fnstcw
add
inc
in
jmp
loop
fdivrl
jl
dec
in
xchg
jecxz
loope
das
aaa
in
in
adc
mov
imul
arpl
jbe
enter
jge
jne
aas
inc
adc
test
out
ss
cmpsb
mov
mov
cmp
loop
jnp
xchg
ret
nop
pop
and
scas
xor
cltd
jp
jne
loopne
sarl
add
inc
nop
inc
mov
and
sub
push
movsb
scas
loop
lcall
fcmovne
xchg
mov
mov
adc
or
cli
cmc
cwtl
jmp
repz
lcall
test
mov
fwait
addb
jnp
mov
sbb
cs
cwtl
push
gs
inc
xchg
dec
lods
add
fprem1
push
and
loopne
cld
and
jns
test
sub
or
fs
in
loop
add
stos
dec
rorl
and
sub
scas
lock
dec
loopne
push
jbe
push
inc
addb
xor
dec
dec
rclb
pop
lods
ljmp
xor
lds
cmp
xchg
pop
iret
and
sarl
jp
aam
or
sbb
mov
lret
loopne
ss
cwtl
leave
mov
mov
mov
arpl
int
fdivrs
scas
in
add
fstp
or
dec
inc
sub
es
cltd
loop
iret
jl
xor
js
inc
cmpsl
icebp
cmp
xchg
mov
movlhps
jo
pusha
pop
jecxz
nop
dec
loopne
and
or
push
push
inc
cmp
xor
push
jg
je
loopne
js
fsubrl
adc
jnp
add
scas
push
scas
xchg
xchg
mov
mov
loop
or
test
add
jmp
push
loope
and
jne
mov
xchg
add
shl
fnstenv
addb
loope
nop
add
dec
cmp
cmp
adc
je
cmp
sub
push
mov
or
inc
and
std
sub
pop
cmp
jecxz
dec
pop
pop
push
inc
push
push
fmulp
pop
sub
jno
std
jno
arpl
add
out
mov
sbb
aad
xchg
out
stc
xor
sbb
nop
ds
shll
cltd
dec
rorl
in
mov
loopne
mov
sbb
and
sub
cmp
lahf
popa
lcall
pop
cmp
aaa
cmp
xor
movsl
cmp
pop
loopne
push
dec
inc
adc
sub
cs
push
popf
and
dec
pop
out
sbb
dec
stos
aad
les
dec
sbb
inc
test
adc
rclb
mov
scas
pop
jnp
adc
rorb
subb
jnp
rcll
push
hlt
bound
dec
mov
imul
xchg
push
push
sahf
push
aam
js
out
ds
lock
jns
pop
push
cld
mov
popa
jle
popa
pop
xchg
push
insb
je
jns
push
in
pop
das
mov
loope
aad
loope
mov
push
sarb
loopne
dec
push
test
mov
pop
stc
mov
push
sbb
loopne
xchg
sbb
mov
adc
and
repnz
mov
mov
mov
insb
xor
lock
aam
outsl
push
push
adc
sarb
xchg
xorl
popa
mov
xor
adcb
aam
jns
xor
fcompl
or
mov
subb
mov
mov
xor
push
dec
mov
jo
test
push
fcoms
mov
cltd
scas
test
ret
add
in
aam
push
gs
aad
mov
fdivrl
xchg
cwtl
pusha
cli
mov
call
inc
cli
ror
mov
rcrb
lcall
cmp
loopne
jle
js
in
lret
mov
in
pusha
cmpsl
pop
outsb
jl
rcrb
sbb
mov
fdivr
test
test
in
test
xor
js
gs
xchg
mov
xchg
sub
fdivl
jbe
push
test
mov
aam
jmp
je
aam
rclb
adc
add
xchg
jo
mov
mov
stos
je
in
fdivr
mov
add
fs
shrb
test
xor
jle
push
adc
jl
xor
or
fadds
jo
jl
aam
mov
mov
and
sbb
jnp
test
je
fadds
jge
out
jg
mov
into
ja
movsl
sbb
lods
mov
push
out
mov
call
lcall
dec
out
jle
mov
and
inc
div
dec
movsl
pop
push
or
inc
pop
sub
mov
dec
mov
jne
sarb
popa
dec
xorl
dec
imul
adc
in
cmp
sub
je
dec
pop
inc
ja
pop
push
insb
sbb
xlat
adc
xor
jns
add
mov
lahf
sub
fisubs
push
dec
enter
cmp
out
sbb
scas
inc
and
jg
xor
pop
adc
mov
or
mov
mov
in
dec
jns
inc
fildl
movsl
mov
push
insl
pop
repz
fimuls
enter
leave
ret
or
and
bound
clc
push
push
dec
dec
cmp
sti
mov
xor
pusha
lds
fucomip
cmp
repz
xor
xor
push
stc
fistpl
fdivrs
nop
loop
sub
add
test
divb
mov
insb
cmpsl
cmp
push
and
outsb
sub
xor
cmc
imul
mov
xchg
cli
rorl
xchg
aad
loope
bound
sbb
into
arpl
sbb
inc
les
imul
mov
jb
arpl
adc
ja,pt
push
inc
jp
repz
rcr
adc
pusha
fwait
shl
imul
push
mov
and
sub
frstor
cmp
loopne
roll
rcrb
in
mov
dec
cmp
jp
sbb
call
xchg
movsl
loop
das
pop
xchg
dec
jo
shrb
movsl
cmp
lods
repnz
and
pop
cmp
int
roll
sub
xchg
push
inc
mov
cmc
xchg
rolb
and
inc
js
push
pusha
inc
mov
cmp
add
mov
fwait
subl
bound
sarb
push
and
sbb
xchg
leave
mov
les
dec
xchg
ret
stos
mov
aad
out
sub
mov
cmp
cmp
into
lock
in
mov
or
or
mov
cmp
nop
int
mov
les
nopl
lock
rclb
stc
fsubrl
cmc
movsb
clc
fs
mov
movsl
movsb
into
cmp
pop
xchg
pop
jbe
movsb
jg
ret
cmc
cmpsb
mov
jae
xchg
in
dec
push
loope
hlt
popf
dec
outsb
imul
imul
scas
add
xor
and
or
enter
iret
notb
bnd
lea
dec
push
dec
pop
sub
xchg
push
pop
dec
and
inc
pop
aas
aaa
pop
push
inc
sub
mov
movsl
sub
scas
and
mov
fisubl
test
call
cwtl
xchg
pusha
and
sub
or
mov
aam
jle
pop
xor
xor
aad
cmp
push
orl
mov
or
pop
cltd
ss
je
inc
shll
lret
xlat
xchg
fsubrs
inc
sahf
sub
ror
pop
jle
in
push
ja
movsl
push
cmp
andb
jno
push
jle
xchg
lahf
push
loope
cmp
daa
bound
int3
dec
out
aas
shrl
les
shlb
mov
test
cmp
push
jns
loop
dec
mov
dec
xchg
je
aad
movsb
xchg
push
push
lock
mov
into
xor
loop
out
je
mov
in
arpl
imul
push
mov
out
and
sbb
dec
mov
jl
ljmp
in
sbb
jge
mov
imul
and
nop
in
and
and
push
dec
es
notl
aas
les
add
and
ffreep
mov
inc
pop
arpl
loope
mull
enter
cmp
das
mov
rolb
loope
mov
pop
ds
jbe
shlb
dec
push
sahf
fmuls
add
cmp
pop
sbb
push
lock
pop
pop
je
in
movsb
xchg
xchg
xor
jp
aas
push
cmp
lret
push
rorl
xorb
jnp
aaa
xor
push
pop
add
inc
sub
mov
cwtl
mov
movsb
xchg
push
int3
push
movsl
sarb
mov
and
push
and
push
cmp
sti
sub
cwtl
xchg
aad
pop
loopne
daa
iret
xchg
aam
lock
js
sarb
mov
push
inc
xchg
ja
stc
xor
data16
ret
and
sbb
adc
sti
and
pushf
out
call
inc
lock
mov
pop
xchg
xchg
or
inc
adc
push
jecxz
sbb
dec
xchg
in
das
fs
lock
sbb
add
into
adc
mov
jae
xchg
inc
insb
gs
repz
xchg
in
aam
cmp
and
mov
pusha
mov
pop
daa
xchg
ljmp
add
mov
orb
adc
cmpb
sub
clc
stc
jno
mov
mov
push
sub
hlt
enter
dec
ret
out
adc
clc
ficomps
data16
xorb
movsl
mov
cmp
pop
adc
ljmp
shlb
mov
add
insb
fcmovbe
mov
dec
dec
je
mov
xor
or
push
es
clc
pop
test
imul
daa
push
pop
mov
das
push
add
cmpsb
jg
inc
loop
lods
inc
pop
pusha
and
icebp
jns
leave
jno
out
stos
std
pusha
mov
xchg
inc
adc
cmp
repnz
lret
out
popa
imul
add
jns
mulb
mov
nop
in
cwtl
imul
add
nop
fstpl
lahf
orb
bound
fwait
in
lods
mov
dec
fwait
ja
mov
xchg
sbbb
xchg
xchg
pop
inc
iret
jo
lea
dec
mov
mov
out
xor
ss
dec
mov
mov
pop
pop
stos
push
jmp
lods
lock
mov
xor
insb
push
dec
repz
mov
sbb
xor
and
xorl
not
xor
xor
pusha
lcall
and
loope
test
mov
push
loope
cmp
jp
fwait
sbb
ljmp
or
mov
fadds
jne
mov
imul
aaa
aad
mov
inc
outsb
or
pop
mov
dec
jmp
jae
jge
daa
jge
sub
fnstenv
in
daa
adc
stc
in
adc
and
rclb
stc
test
lods
xor
ss
cmp
bound
pop
dec
jae
ss
adc
mov
mov
mov
jne
mov
cmp
fnsave
dec
push
jg
sbb
or
pop
cmp
mov
cli
mov
fstps
pop
mov
jae
mov
inc
inc
inc
popf
popf
and
push
out
xchg
mov
mov
pushf
insb
cmp
in
adc
lret
cmp
or
inc
aad
aad
cli
push
push
sub
cwtl
mov
shl
cmpb
movsb
pop
sub
add
je
je
js
insl
popa
loopne
ljmp
sub
adc
bound
xor
add
stos
dec
fsubrs
inc
jno
add
mov
and
ja
sti
dec
jmp
push
mov
fisubrs
in
push
sub
cmc
inc
pop
xchg
cmp
and
adc
ret
xor
push
cltd
inc
xor
jne
subb
mov
pop
aad
push
scas
rorb
ds
dec
jp
cmp
xor
scas
imul
ss
jg
inc
cmc
aam
sbb
add
mov
je
ds
jo
xchg
push
aaa
ljmp
push
xor
call
pushf
stos
insb
stc
mov
sti
add
add
imul
fdivs
inc
push
xor
lds
icebp
mov
inc
test
out
or
and
push
add
or
addr16
cmp
push
pop
daa
ret
jne
mov
mov
cmp
rcrl
iret
sub
je
out
fcoml
shrb
into
leave
arpl
and
fnstcw
aad
fs
xchg
push
push
push
out
sbb
outsl
add
pop
lds
push
adc
or
sub
rorb
out
sub
dec
out
int3
sbb
jno
rcll
pop
outsb
inc
imul
mov
fs
cmpsb
popa
sbb
aad
sarl
push
ja
cmp
dec
ljmp
jmp
xlat
mov
or
jmp
pop
sar
or
dec
push
fs
nop
sbb
sub
lock
cmp
clc
jg
lock
lcall
cmp
call
lahf
mov
lret
cmpsb
lea
fdivs
clc
dec
add
je
mov
je
jne
add
push
fildl
lret
jnp
test
mov
xchg
push
pushf
jl
add
or
stos
in
dec
in
lret
and
pop
add
inc
push
mov
pop
mov
cmc
call
stos
cmp
jns
lods
lret
in
dec
mov
dec
cmpsb
push
fldenv
ds
push
xchg
mov
xor
push
test
mov
push
into
out
sub
add
push
cmpsb
mov
test
cmpl
jns
mov
mov
test
aad
mov
insb
dec
out
call
pushf
jns
repz
jecxz
adc
call
dec
inc
and
cli
pop
mov
pushf
mov
dec
dec
add
push
movsl
popa
cmpb
adc
mov
mov
xchg
insb
js
xor
inc
rclb
mov
jnp
lods
cmpsl
sub
cs
sbb
push
ds
adc
xchg
lock
fistpll
sbb
adc
and
or
push
lods
arpl
cld
sub
in
mov
in
xor
cmp
adc
lcall
cld
nop
and
in
es
mov
je
jle
pop
test
sbb
stos
out
fsubs
lret
sbb
int
xor
ja
inc
movsl
lcall
aaa
fbld
mov
stc
pop
lock
mov
mov
ret
xorl
jne
rorb
add
pop
loop
mov
stos
sbb
aaa
mov
mov
jmp
dec
ret
aam
dec
mov
out
push
adc
inc
cmp
das
adc
and
inc
mov
jne
cmp
cmp
nop
fistl
aad
push
hlt
push
mov
test
dec
inc
push
pop
and
dec
and
ljmp
scas
outsl
fstpt
adc
outsl
dec
adc
sub
inc
push
sbb
lahf
inc
mov
sti
jno
mov
clc
lods
pushf
or
push
sub
cmp
push
jp
adc
dec
inc
lods
adc
push
or
mov
stc
imul
mov
loope
inc
pop
and
push
jl
xor
push
lcall
test
xor
leave
ret
das
rolb
rcrb
jno
mov
push
stc
int3
ds
mov
stos
pop
dec
fcoms
jp
add
pop
test
mov
and
loopne
push
pop
sbb
lcall
sub
jecxz
xchg
or
sbbb
aam
jp
lahf
loopew
sbbb
test
fcomps
jns
or
cli
mov
stos
jnp
jo
insb
popf
fcomps
repnz
pop
leave
fsts
pop
jg
push
loop
jo
loopne
lock
fs
push
xchg
lock
or
aam
lahf
push
push
sbb
imul
fimull
pop
sub
pop
leave
popl
bound
pop
mov
orl
mov
jo
enter
jo
lock
xorb
xchg
push
xor
lods
ljmp
pop
xchg
nop
mov
inc
cld
inc
adcb
aam
add
aad
or
dec
aam
sar
add
pop
add
cmp
orl
dec
mov
jp
dec
mov
lock
fcomps
cwtl
jl
icebp
lea
adc
jl
aam
je
int
ret
cltd
test
ljmp
sbb
push
mov
pop
in
cwtl
lock
pushf
movsb
lock
hlt
xchg
fs
popf
mov
loop
test
mov
call
and
nop
andb
inc
subl
pop
negl
xorb
fcompl
int3
lock
inc
xchg
cwtl
test
sbb
stc
sub
cmp
mov
jl
enter
sar
hlt
aam
jnp
jg
test
mov
cmp
in
dec
fmull
cmp
xor
mov
jge
jmp
jle
mov
inc
in
loopne
stc
fisubl
jmp
fwait
in
lds
inc
adc
push
push
sub
lahf
cmp
das
rorb
call
mov
mov
jge
pushf
inc
ss
mov
fstps
cmpb
cmp
cmp
inc
roll
filds
push
jl
imul
lods
or
push
pop
popa
inc
pop
mov
dec
ffree
dec
mov
dec
jns
cmp
and
pusha
mov
push
push
pop
insb
decl
into
fstp
mov
imul
in
ret
push
push
mov
inc
scas
push
imul
pop
fucom
add
pop
int
inc
sub
pop
sbb
addr16
add
cmp
mov
mov
ja
jno
push
inc
arpl
cmp
add
jbe
loopne
dec
fildll
data16
idivb
insb
adc
lods
pushf
mov
in
mov
movsb
lods
imul
mov
jmp
daa
rorb
outsb
or
scas
pop
shll
pop
pop
pusha
push
sbb
pop
popf
mov
mov
mov
pusha
aam
pop
in
fucomi
pop
cmpl
jge
popa
les
adc
rol
add
xor
scas
filds
adc
fwait
xlat
dec
mov
mov
mov
adcl
and
inc
adcb
test
lret
jb
inc
adc
in
push
mov
jmp
mov
mov
fldt
and
xor
adc
cmp
mov
push
pop
bound
and
mov
push
aam
mov
insb
test
and
cmp
mov
ja
mov
cmp
add
popa
pop
call
movsl
add
dec
push
in
mov
mov
jle
mov
dec
aaa
cmpsl
aaa
sbb
arpl
pop
jmp
add
aaa
sub
mov
cmp
lcall
push
jb
mov
xor
inc
inc
sahf
pop
adc
jb
loope
mov
nop
jo
cmp
fmull
jge
mov
fdiv
dec
cmp
push
add
call
out
sub
cmpsl
jno
or
sbb
jmp
clc
dec
addr16
adcl
cmp
rol
fdivrl
dec
fcomps
daa
xchg
rclb
stos
call
pop
pop
addr16
pop
lcall
popa
push
test
adc
bound
repnz
push
add
fdivr
cmpsb
and
push
dec
inc
bound
jno
iret
pusha
mov
call
orb
cmp
jne
and
in
push
repnz
push
mov
js
adc
jo
push
mov
mov
cmpsl
dec
push
icebp
nop
cwtl
add
push
jne
icebp
int
mov
add
jecxz
sub
cmc
cmp
pop
mov
imul
inc
leave
insb
jmp
je
pop
jmp
jmp
jo
jecxz
cmp
sub
cli
test
sub
mov
nop
mov
push
icebp
add
push
ss
xor
outsb
mov
mov
in
cmp
push
sbb
pushf
xor
add
out
or
xor
lods
mov
andb
fmuls
push
pushl
into
inc
or
pop
dec
push
loop
push
out
rorb
int
leave
sub
or
adc
pop
popa
test
cmpsb
mov
xor
nop
dec
pushf
xor
fsqrt
mov
ss
mov
mov
insl
cmpsl
inc
mov
or
loop
push
es
pop
push
adcb
pop
scas
cmpsb
jle
or
dec
mov
xor
dec
les
inc
in
sbb
mov
sub
mov
jmp
lock
jecxz
xchg
js
lea
lock
sarb
cmc
mov
shrl
pusha
inc
pop
sbb
lock
popl
das
pop
into
jno
fstl
xor
test
pop
xorb
fs
scas
xor
movsl
hlt
jecxz
in
inc
add
jl
adcl
and
push
aas
out
push
mov
jno
jmp
fstpt
mov
into
dec
mov
cli
aas
jb
lods
sub
inc
mov
jmp
jne
xchg
push
cli
clc
and
test
call
imulb
mov
push
flds
iret
test
mov
popa
std
sub
mov
out
cwtl
jo
jnp
in
rcl
cmp
pop
sbb
push
enter
inc
cmpsl
fsubrs
shrl
arpl
sbb
repz
cmpsl
xlat
inc
out
rcrb
xchg
mov
adc
mov
nop
push
leave
and
clc
in
pop
cld
or
or
push
push
sbb
imul
add
maskmovq
dec
mov
dec
cltd
pop
cmpsl
lds
icebp
mov
mov
or
mov
shr
cmp
in
in
push
mulb
mov
mov
add
mov
xchg
dec
lcall
pop
push
out
mov
shlb
lods
lahf
push
adc
lcall
int
mov
ljmp
cmc
jmp
mov
movsb
mov
push
push
dec
shll
lret
adc
push
outsb
insb
xor
clc
imul
xor
roll
jnp
inc
ja
scas
xor
mov
sbb
repnz
and
cmp
ficomps
jo
and
bound
mov
fcomip
adc
cwtl
inc
out
jns
fldenv
in
out
jl
mov
sub
leave
mov
mov
jne
cltd
cmp
rcll
dec
loope
cmp
in
or
stos
xor
imul
or
mov
imul
lock
lcall
fbstp
jl
pop
pop
xor
mov
and
or
add
bound
xchg
xorb
in
inc
sbb
push
cmp
lock
cmp
dec
cmpsb
fstp
ljmp
jl
pushf
xchg
jmp
pusha
addr16
mov
in
out
sbb
loop
inc
xchg
bound
xchg
dec
cmp
jno
jmp
xor
jl
pop
hlt
pop
pop
jno
cmpl
mov
jmp
pop
pop
jnp
mov
xor
popf
movsb
sub
adc
xlat
dec
mov
dec
mov
sub
xchg
orl
movb
cmp
mov
in
mov
fisubl
incl
clc
pop
dec
scas
mov
add
rcl
gs
push
mov
ss
test
das
cmp
lret
sbb
mov
and
call
mov
js
pop
out
arpl
iret
popl
jns
mov
and
adc
stos
hlt
shlb
pusha
scas
mov
xchg
mov
cmpsb
cmp
and
lcall
mov
mov
sti
push
out
dec
rclb
sub
adc
mov
sbb
mov
aam
pop
mov
or
loope
and
inc
push
pusha
mov
andb
adc
arpl
mov
out
out
sub
inc
ss
in
pusha
pop
adc
stos
jae
dec
adc
or
dec
repz
xchg
or
popa
ljmp
push
sub
scas
pop
mov
pop
popa
dec
int
jb
push
inc
pusha
jg
rol
jo
add
aam
data16
nop
loopne
push
aaa
and
outsb
mov
push
pop
fstps
dec
icebp
ret
pop
jns
popa
lock
popa
sbb
mov
das
jne
pop
ss
je
enter
sub
inc
mov
adc
in
xor
push
add
pop
xchg
mov
push
repnz
jg
sbb
mov
jle
adcb
inc
xorb
and
jo
jmp
bound
pusha
lahf
arpl
popa
pop
movsb
sarl
mov
inc
or
lcall
xor
iret
dec
adc
repz
clc
mov
push
sub
je
cmp
nop
cmp
cltd
clc
insb
shl
clc
nop
pushl
je
shlb
outsl
xor
and
pushf
jle
jae
jb
pop
popa
iret
loopne
xchg
add
pushf
push
outsl
outsb
scas
outsb
fsubr
dec
push
outsl
push
mov
cltd
jno
jae
enter
sub
je
xor
mov
pushf
outsb
insb
repz
jg
sbb
pusha
movsb
scas
arpl
int3
enter
iret
xchg
push
mov
outsb
repz
nop
clc
outsl
push
pop
jnp
add
movsb
fidivrs
repnz
mov
out
lea
jmp
pop
xor
or
dec
sbb
es
sbb
ficompl
ficoms
outsb
xchg
mov
mov
xchg
icebp
mov
in
mov
sub
lea
push
lret
inc
js
adc
imul
sbb
cld
xchg
stc
xor
dec
mov
shlb
mov
push
call
fdivs
out
mov
dec
mov
mov
in
arpl
popa
cmpsl
lock
fcmovne
pop
out
movsb
cwtl
rcrb
mov
rol
orb
mov
rclb
notl
js
dec
in
mov
pop
xchg
pop
sub
or
movsb
ror
push
pop
fcmovnu
xor
mov
jmp
add
jne,pt
loopne
add
and
inc
or
dec
fldcw
mov
out
adc
fadds
xchg
mov
push
xchg
lcall
add
xchg
fwait
mov
sbb
pop
bound
inc
dec
subb
pop
mov
mov
mov
mov
cmp
std
movl
cmp
push
push
nop
mov
mov
cmp
pushf
sarb
pop
sub
js
sti
add
jnp
adc
aad
cltd
in
fdivs
pushf
push
ds
mov
cmp
mov
cmp
fs
mov
cmp
pop
or
test
push
bound
popa
or
ret
dec
jl
jne
ss
fwait
jo
cld
pop
mov
loop
adc
lea
rclb
out
movsl
ja
jecxz
xor
pop
rorb
lahf
jne
scas
mov
enter
xchg
call
jge
loop
aaa
add
dec
push
xor
mov
inc
mov
pop
pop
add
iret
sub
push
xor
ret
sti
lret
das
arpl
bound
sahf
pop
xchg
dec
lds
jmp
fidivl
test
push
cmpsl
dec
sbb
or
out
dec
js
gs
je
add
std
sbb
popa
cmpsb
sub
shl
cmp
fmuls
mov
or
xchg
popa
mov
cli
add
xchg
mov
dec
ud1
lahf
push
cmp
flds
pop
shlb
int
xchg
push
sbbl
dec
dec
mov
dec
xor
lea
jne
mov
arpl
imul
in
sbb
pop
test
cmc
in
mov
fsubs
jge
daa
fcomip
sub
jne
aaa
mov
ja
jg
enter
jns
movsl
inc
pop
sbb
ret
mov
in
insl
rorb
xor
shlb
xlat
bound
pop
dec
push
jmp
pop
mov
inc
xchg
pushf
push
int
pop
out
mov
and
cmp
test
dec
jne
cmp
out
inc
out
into
mov
xchg
out
test
jmp
xchg
cmp
add
jbe
in
xchg
rcrl
js
pop
fidivrl
and
mov
mov
lret
les
rolb
ret
mov
xchg
pusha
dec
mov
dec
or
aam
clc
fsubp
pop
dec
push
std
test
mov
jne
mov
adcl
fdivr
dec
and
or
inc
in
stc
cmpsb
andl
or
mov
mov
push
scas
ds
sbb
nop
popa
aam
cmp
cwtl
dec
out
loop
stos
adc
push
fldenv
lret
cld
xchg
in
cmp
inc
mov
pop
sub
adc
push
scas
popa
mov
popf
sub
sarb
cmp
push
dec
jns
popa
mov
iret
dec
lret
mov
jle
or
inc
es
jl
loopne
ljmp
aad
lock
and
into
sbb
popf
mov
scas
flds
add
bound
cmp
push
into
sbb
loopne
cli
jmp
lock
sbb
in
and
scas
xchg
mov
iret
fcompl
clc
in
movsb
fstl
mov
repnz
rolb
sub
mov
sbb
cmpsb
add
out
or
push
in
mov
pop
jo
les
dec
cmp
movsl
stos
cld
cmpsl
push
mov
dec
or
lock
cmp
adc
test
jne
cwtl
dec
addr16
sub
cmp
arpl
fcoml
loope
inc
aas
push
and
leave
mov
adc
fidivl
scas
addr16
add
and
and
xchg
lahf
in
insb
dec
and
jbe
mov
jno
loope
mov
pop
cmc
dec
jle
test
into
cmp
in
fstp
andl
ds
lea
out
xor
inc
scas
dec
xor
nop
cmc
xor
jb
dec
dec
mov
popa
fwait
sub
push
jp
outsb
ss
fisubs
or
xor
fsubs
faddl
outsb
enter
dec
aad
inc
and
pop
lock
pmaxub
xor
pop
sub
and
mov
adc
mov
jns
dec
dec
mov
xchg
push
lods
in
aam
pop
mov
rcrl
push
mov
sub
out
cmp
and
adc
adc
push
xchg
in
adc
mov
xor
cli
sbb
cmp
jbe
cmpsl
int
fbld
and
ret
les
xor
cltd
fidivrl
lcall
mov
dec
cmp
pop
mov
mov
out
lock
and
jbe
add
push
xchg
push
adc
shr
pop
cmp
or
xchg
mov
xlat
add
pop
js
sahf
outsl
stc
push
jnp
inc
or
loop
jne
push
imul
jmp
fs
jl
jns
mov
aas
xor
imul
jne
xor
movsb
loopne
data16
jae
pop
bnd
loopne
call
sbb
test
cmp
aaa
dec
fistpl
adc
cmp
push
xchg
loope
jo
push
inc
addr16
jp
pop
mov
mov
sti
sub
add
addb
fstpl
cmp
dec
ja
pushf
cmpsb
cltd
jno
mov
push
mov
mov
inc
call
or
mov
or
mov
mov
in
shr
add
mov
sub
pop
icebp
ret
cmp
hlt
jl
sbb
inc
dec
lahf
in
in
dec
cmp
loopne
andl
push
mov
mov
call
dec
pop
std
cmpsb
leave
xchg
jg
pop
pop
jle
call
mov
pushf
cmpsb
pop
insb
adc
popa
cwtl
jmp
adcb
jg
push
cmp
inc
adc
and
jle
call
out
mov
fidivl
pop
bnd
shlb
dec
fs
rolb
flds
xchg
sub
xorl
lods
in
inc
loop
sarl
cltd
loopne
push
push
mov
push
std
int
jae
dec
lds
ljmp
lcall
push
rcll
push
divl
bound
xlat
insb
out
xor
popf
pop
xchg
test
push
or
mov
xchg
faddl
cmp
xchg
rolb
fstpt
inc
cli
push
sarl
outsb
ds
mov
outsl
dec
fcom
push
loop
mov
inc
mov
adc
pusha
lahf
sub
shrd
xlat
xchg
pusha
jo
inc
sub
int
pusha
jmp
xchg
inc
je
lcall
aas
pusha
sub
call
mov
dec
pusha
out
addl
imul
outsb
push
pusha
clc
les
cs
fldenv
call
sbb
lods
gs
xchg
mov
mov
adc
lds
xchg
jg
js
je
push
out
enter
mov
int
jns
xor
pop
pop
and
mov
pusha
gs
out
out
pop
push
int
xorl
data16
sub
jne
pop
sub
mov
xlat
push
popa
in
sub
add
add
or
out
ret
mov
je
adcl
ja
popa
mov
insb
insl
int
fsts
sub
push
je
and
test
pusha
xor
jp
outsl
clc
call
sub
or
push
scas
mov
enter
aaa
int3
inc
pusha
jbe
adc
sbb
ficoms
clc
pop
rorb
loopne
jo
sub
popa
jbe
mov
in
sbb
jle
movsb
and
pop
mull
iret
dec
ss
dec
je
popf
add
fldt
lods
push
mov
jne
push
pop
out
sbb
test
xchg
jbe
mov
pusha
push
add
jne
and
sbb
stc
rolb
shlb
es
cwtl
pusha
daa
loop
hlt
add
pusha
adc
nop
sbb
gs
jbe
sub
push
lcall
scas
cld
or
mov
cwtl
in
je
or
sub
pop
loopne
daa
aam
xor
fisubs
orb
xchg
add
std
and
or
aam
push
push
sub
sub
pushf
push
cmp
mov
ja
mov
xchg
cwtl
test
push
sbb
sbb
push
jo
addr16
mov
jbe
imul
je
in
aam
ds
or
out
jbe
popf
cmp
mov
orb
xchg
jecxz
hlt
bound
loopne
or
addr16
sub
outsb
and
loop
dec
add
push
adc
and
sbb
cmp
or
pop
notl
out
sbb
aad
pusha
or
push
je
and
lods
sbb
das
js
pusha
mov
mov
ds
rcl
inc
push
add
mov
push
aad
mov
pop
cwtl
push
inc
in
pop
mov
fisubl
mov
fwait
and
jp
inc
pop
pop
xchg
pop
adcb
pop
int
cltd
shll
sahf
cmp
subb
js
shll
out
mov
orl
or
xor
push
or
push
xchg
jle
faddp
pop
das
mov
inc
sub
jo
mov
std
push
sahf
pusha
je
mov
pop
ss
cmp
cmpsb
mov
adc
in
dec
pop
jge
movb
cltd
ret
push
imulb
fnsave
jae
in
mov
outsb
fstps
mov
add
add
das
xor
push
push
sub
dec
sub
and
pop
pusha
cmp
sbb
repz
imul
call
pusha
cs
fwait
or
add
lahf
pusha
imull
pop
or
int
inc
repnz
sub
mov
xchg
and
mov
push
cs
rcrl
dec
xor
mov
aaa
pusha
adc
xor
out
adc
mov
cmp
aaa
pusha
push
and
cltd
ds
xchg
mov
cmp
fsubl
test
inc
mov
pusha
xchg
das
lock
mov
dec
or
mov
inc
pop
or
out
pusha
push
ret
inc
sub
loopne
push
mov
add
mov
lods
mov
mov
pop
shrl
jo
cwtl
xchg
pusha
cltd
andl
aas
inc
mov
sub
mov
dec
sbb
push
xchg
out
push
or
xor
rcl
ret
push
pop
cld
push
jne
jecxz
dec
shlb
pop
outsb
leave
mov
sub
push
enter
sub
sbb
out
loope
pusha
xlat
aam
mov
lods
arpl
mov
jp
or
out
pusha
sub
or
add
sbb
outsl
sti
xchg
out
rorb
cld
hlt
loopne
mov
mov
and
pusha
mov
cs
pusha
xor
sub
mov
sbb
add
pop
mov
adc
outsb
mov
movd
dec
out
sbb
lods
mov
sub
fwait
pusha
mov
ficoml
pushf
test
loopne
pop
pop
pop
push
push
pop
mov
rclb
xlat
bound
xor
and
jecxz
pusha
mov
insl
push
jp
outsl
xor
mov
mov
adc
dec
xor
add
jp
daa
add
push
inc
sub
mov
or
pusha
es
pop
jbe
xor
mov
loop
push
sti
push
ds
cmp
mov
dec
xor
sbb
je
mov
roll
jo
mov
xchg
movsb
push
outsb
push
int3
cmp
adc
lods
rorl
clc
popa
jl
sbb
jo
mov
cmpsl
pusha
les
hlt
fistpll
cmp
pop
xchg
lahf
pusha
and
mov
repnz
add
dec
aaa
push
and
neg
xor
xor
add
adc
jo
pusha
jp
sub
pusha
cmp
inc
test
or
push
mov
xor
fldl
jge
ret
pusha
xor
dec
loopne
cwtl
out
mov
ffree
decl
out
jecxz
pusha
mov
cmp
aas
js
lods
sbbb
pop
xchg
movsb
pop
pop
push
ljmp
pusha
lods
mov
shrl
jae
mov
enter
call
outsb
mov
push
loopne
pop
movsl
cmp
xchg
je
xchg
add
pop
inc
pusha
sbb
pop
ja
inc
pop
pusha
rorb
push
push
repz
std
sarb
imul
enter
push
imul
jo
in
and
rcrl
aaa
or
or
stos
xlat
sub
daa
loopne
das
sbb
popa
push
pop
sbb
out
dec
inc
insl
mov
mov
je
mov
fwait
and
popa
mov
ficomps
cmp
inc
repnz
inc
jo
arpl
cmpsb
clc
rorl
adc
adc
pop
sub
cmp
iretw
sub
pusha
adc
inc
outsl
mov
test
xchg
jnp
mov
jae
test
or
bound
mov
mov
pop
nop
stos
push
xchg
push
push
add
addr16
imul
jg
jbe
scas
mov
pop
popa
lret
fdivrs
xchg
mov
fidivs
xor
je
push
ret
mov
mulb
mov
mov
jle
pop
cwtl
push
mov
fldl
mov
push
std
push
push
in
xor
adc
or
sub
arpl
cmpsl
xor
ds
bound
pusha
fldenv
pusha
cwtl
add
jbe
inc
sti
add
push
jnp
arpl
inc
xchg
inc
pusha
dec
xchg
mov
bound
movsl
add
lods
pop
cwtl
pusha
ds
dec
push
aam
hlt
pusha
stos
js
inc
push
xrelease
add
mov
outsl
rcl
pusha
cmpsb
mov
dec
out
pusha
fcompl
fists
mov
sti
push
cwtl
and
inc
mov
je
xchg
pusha
sahf
fsub
jnp
sub
out
ret
lea
dec
pusha
xchg
adc
jmp
pop
adc
jecxz
mov
pusha
movsb
lcall
push
jg
test
test
jo
xchg
pop
add
mov
call
push
je
xchg
push
loopne
dec
in
lods
call
divb
push
pusha
push
ljmp
dec
xor
dec
cmp
outsb
loopne
lds
cmp
adc
adc
or
shll
test
inc
int3
jle
mov
pusha
push
pop
stos
fs
stc
pusha
call
jne
gs
or
pop
sbb
lahf
sbb
imul
xchg
jp
xchg
mov
icebp
adc
sahf
and
loopne
scas
dec
cs
pusha
xorl
pop
pop
fsub
mov
test
sbb
inc
jo,pt
lahf
nop
mov
and
cmp
push
pusha
imul
in
mov
aas
push
mov
xchg
pop
pop
mov
sub
push
inc
fdivrs
loopne
mov
in
push
cmp
or
add
add
mov
cmpsb
adc
mov
mov
push
out
pusha
mov
push
jnp
movsb
inc
je
lods
mov
pop
jo
mov
lds
dec
lods
aas
ret
iret
ss
mov
jbe
push
je
cs
and
addr16
add
pop
cwtl
jb
data16
mov
push
pusha
push
iret
aas
mov
shll
les
mov
jb
das
push
js
iret
inc
push
cs
jne
jge
or
mov
sbb
pusha
test
call
xor
or
gs
popa
iret
inc
popf
pushl
andb
xchg
and
pusha
push
dec
xchg
loope
xor
xchg
je
pop
adc
pop
mov
pop
jecxz
push
add
call
fistpll
lods
das
cwtl
lea
out
and
pusha
lock
lahf
cmp
lods
mov
push
das
insl
faddl
or
xchg
xchg
pop
inc
or
mov
mov
push
mov
push
call
loopne
cmp
ja
ret
jae
push
sbb
sbb
jo
icebp
cli
pop
fisubl
andb
fisttps
out
or
and
xchg
xchg
inc
jne
pusha
mov
add
pusha
adc
es
pusha
sbb
push
lock
jle
xchg
mov
imulb
and
pusha
imul
lea
enter
fcomi
ret
shlb
sub
push
fsts
stos
loope
subl
je
cltd
scas
in
hlt
out
icebp
mov
sub
jae
pop
add
jg
or
fs
dec
popf
in
mov
out
sbb
insb
inc
mov
lock
aad
popa
lods
xor
ss
jns
jb
movsb
outsl
js
xor
jo
jo
bound
pusha
cmp
cmpsb
into
or
call
shlb
fsubl
xchg
fwait
je
xchg
bound
pop
mov
shlb
fsub
shlb
add
xchg
cmp
xchg
push
ljmp
jo
in
xlat
popa
leave
push
lcall
out
pop
imul
into
sub
jnp
scas
and
pop
pop
xchg
nop
xlat
pop
arpl
pop
insb
xchg
andb
int3
mov
push
mov
js
mov
push
xor
xchg
mov
repnz
sbbb
mov
mov
lock
mov
test
out
std
xchg
sbbl
push
push
mov
mov
pop
xchg
jae
icebp
xor
faddl
mov
lea
mov
xchg
mov
test
andl
pop
rorl
rcrb
adc
xchg
iret
sbbl
push
sub
daa
test
lea
rolb
xor
xor
and
sub
loope
loopne
jo
sbb
jo
hlt
nop
rcll
ret
adc
test
xchg
sub
mov
insb
movsl
nop
aaa
loope
mov
xor
stc
lea
arpl
sbb
or
cli
mov
mov
jae
mov
xor
push
xchg
xlat
lods
add
dec
xchg
cwtl
sub
insb
push
nop
push
stc
popa
leave
sbbl
sub
je
orb
test
sahf
ljmp
mov
int3
lds
jge
add
push
mov
icebp
jmp
fs
mov
push
jp
xchg
mov
andb
in
push
mov
mov
fs
xchg
out
repz
jecxz
orb
pop
nop
test
decl
xchg
mov
imul
or
andl
popl
adc
lea
mov
mov
cwtl
mov
pusha
test
test
xchg
fidivs
inc
shrl
ret
lret
test
in
xor
mov
sbbl
mov
mov
mov
xchg
mov
add
sbb
cwtl
cmpb
adc
nop
pushf
jg
nop
mov
push
mov
aaa
or
test
xor
xchg
cmpsb
mov
jo
mov
in
repz
mov
adc
aad
sti
cmp
sbb
xchg
add
nop
cld
sahf
xchg
jle
rol
jns
stos
xor
call
mov
xchg
movsl
cmp
adc
ret
push
mov
shl
ror
inc
push
mov
push
sar
shl
push
btr
setne
stc
cmc
mov
cmc
bsf
mov
pushf
ror
neg
cmp
mov
sub
push
or
xor
lea
xchg
pushf
lods
stc
jmp
test
je
inc
fsts
std
sub
jl
clc
lea
push
mov
popa
pop
add
mov
faddl
int3
add
jg
movsb
insl
or
adc
arpl
ja
in
std
out
rcr
test
cmpsl
inc
fildl
pop
ss
and
adc
imul
lods
cmp
or
rclb
jmp
mov
inc
pusha
inc
and
jo
dec
mov
xlat
mov
repnz
ljmp
mov
sbb
gs
cmp
lret
movsb
jl
int3
jecxz
lock
push
adc
mov
ror
mov
jbe
test
adc
xchg
lret
int3
mov
shlb
ret
test
push
xchg
hlt
mov
fldt
mov
leave
or
rcll
inc
pop
mov
xor
add
cli
pop
xchg
addb
mov
sbb
call
and
dec
sub
sarb
xchg
pusha
or
iret
lcall
mov
cmpsb
cmp
add
and
into
cmpsb
inc
fidivrl
sub
jle
outsl
cmp
insb
pop
orb
xlat
loop
cwtl
mov
incl
cwtl
std
out
loopne
fisttpl
int
or
push
cmp
mov
lock
push
mov
popf
repnz
or
aaa
sbb
xor
hlt
pop
mov
rcr
add
or
add
shl
rcr
mov
cmc
call
bt
mov
add
inc
mov
call
lea
ja
shr
sub
bswap
lea
neg
sub
add
rol
bts
movzbw
mov
sub
call
fstpt
jb
inc
aad
dec
jnp
cmpsb
ja
ret
movsl
mov
push
sbb
lods
fcomps
jecxz
jmp
mov
or
enter
leave
mov
aaa
fs
jmp
pop
repnz
jg
push
repz
out
je
xor
rclb
scas
xchg
cmp
add
aad
cmp
cmp
mov
jmp
pop
popf
or
cmp
in
push
add
or
ljmp
std
ljmp
xchg
jl
add
inc
jl
out
icebp
xor
aad
div
push
inc
ret
repnz
mov
ds
xor
in
fwait
aam
scas
cld
xchg
sub
sub
jp
mov
push
mov
cmp
out
jo
hlt
sub
push
jno
mov
dec
aad
js
rol
insb
gs
outsl
cmp
mov
xchg
jle
xor
inc
mov
sub
add
dec
jo
add
ret
mov
pop
cwtl
pop
dec
xor
xor
cld
ljmp
and
ja
jmp
call
rcr
xchg
clc
shr
mov
neg
mov
bt
mov
clc
add
pushf
bswap
call
push
lea
jmp
xor
jo
inc
sbb
inc
in
inc
jbe
jp
xor
or
gs
mov
addr16
dec
sub
enter
mov
std
insb
jnp
aad
fisubrl
ds
pop
jmp
test
xchg
jnp
leave
jl
movsb
dec
push
and
mov
cmp
repnz
jp
jge
xor
pop
cmpsl
shl
gs
cltd
xchg
cmpsb
or
out
lret
cmpsb
pop
sub
inc
lcall
enter
mov
adc
cmp
xchg
lahf
adc
lods
push
cs
or
movsl
insb
push
xor
mov
mov
aas
xor
cmp
ret
in
adc
data16
cmc
lock
data16
mov
clc
stc
ja
adc
lods
cltd
shrb
mov
pusha
mov
cmp
lret
movb
ljmp
inc
sbb
push
cmpsl
in
jmp
push
cmp
adc
add
nopl
jne
push
or
jl
js
loopne
push
mov
mov
fcoml
pop
add
sbb
scas
xchg
pushf
fnstsw
add
je
popa
and
loopne
pusha
push
dec
push
pop
push
stos
int3
aam
out
mov
cmp
pop
mov
in
faddp
in
mov
xchg
xchg
popf
mulb
addps
repnz
jno
mov
iret
xchg
cwtl
into
sar
jecxz
dec
repnz
pop
fldln2
sbb
xchg
testl
les
repnz
mov
movsw
mov
pop
add
or
dec
lock
enter
sbb
xor
mov
or
sahf
mov
push
lds
mov
sub
test
sbb
js
cli
ret
cmp
sti
sub
sbb
xchg
imul
mov
mov
sbb
cwtl
push
jmp
test
mov
in
sub
inc
lahf
or
cli
and
jbe
clc
adcb
lods
mov
push
cld
mov
or
add
rep
push
inc
pop
push
pop
lods
daa
pop
shrb
fsts
aaa
shrl
nop
inc
mov
xchg
mov
xor
adcl
loopne
mov
mov
dec
rorl
repnz
xchg
fs
adcl
mov
aas
lahf
ds
ret
sarl
ret
imul
mov
xlat
sub
bt
mov
test
pushf
cmp
pushf
jmp
add
pushf
pusha
mov
lea
jmp
fcoml
sbb
sbb
push
sbb
or
sbb
adc
sub
jmp
lret
int
insl
jp
popf
jg
mov
and
inc
cmp
ret
scas
mov
jmp
sgdtl
enter
jo
jle
fcompl
sbb
imul
mov
mov
xchg
dec
mov
out
mov
xor
out
cmp
shll
sahf
cs
in
pop
xchg
mov
fadd
dec
popf
mov
mov
lahf
sub
and
cmp
inc
mov
xor
dec
inc
jns
cmc
out
aaa
inc
aaa
mov
jl
dec
xchg
sbb
sbb
inc
sub
xchg
outsl
jl
gs
cs
cs
test
sub
stos
mov
std
fimuls
push
or
clc
xchg
loope
fadds
mov
cmp
add
daa
stc
jmp
mov
or
das
inc
mov
add
sub
pop
xorb
mov
lcall
xor
lea
pushl
mov
pushl
lea
call
push
pusha
jmp
call
call
stc
mov
cmp
push
test
call
pusha
pusha
push
jmp
pushf
pushf
lea
jmp
das
adc
insb
jp
aas
xorl
and
cs
push
inc
push
subb
add
add
inc
out
cmp
lds
jmp
push
lret
xchg
rolb
pop
mov
pusha
data16
mov
andb
stos
fdivrl
hlt
filds
xor
add
push
xchg
or
pusha
jmp
pushf
lea
je
cmp
pusha
push
pushl
cmp
lea
push
pusha
pushf
pushl
ret
sub
pusha
cmc
clc
cmp
push
pushf
movw
mov
lea
ja
push
mov
lea
jmp
ljmp
out
pop
mov
test
or
imul
shll
cmpsb
test
test
scas
cmp
dec
mov
out
out
inc
stc
mov
sub
pop
and
int3
push
pop
jmp
vandnps
xor
xchg
and
add
cmp
ffree
test
dec
xor
inc
imulb
mov
cmpsb
jp
fnstsw
mov
cmp
push
leave
xor
out
sbb
movsl
jge
int3
cmp
mov
sbb
dec
or
lds
addl
jbe
ja
push
dec
add
add
jmp
jle,pt
and
mov
out
repz
jb
push
insl
dec
mov
pop
dec
xchg
lahf
cld
mov
cmpsb
test
aam
aas
or
lds
or
jl
jbe
fiaddl
push
jmp
mov
fdivrs
mov
std
pop
cmp
int
xchg
call
or
mov
xor
pop
push
xor
jl
pusha
and
ret
repz
sahf
nop
inc
sub
insl
mov
xchg
test
jp
cli
mov
adc
dec
add
and
not
ljmp
mov
sub
and
pop
sbb
and
aad
mov
mov
outsl
int3
jecxz
int3
or
jns
cmp
add
out
outsb
sahf
jnp
jge
add
inc
in
or
lods
or
sub
dec
jmp
or
xor
in
in
mov
dec
jae
test
ds
imul
or
xchg
pop
packuswb
xchg
scas
divl
add
mov
mov
popf
cltd
xlat
add
fidivrl
push
in
sbb
add
add
popf
xchg
push
pop
into
or
pusha
or
fadds
pop
mov
scas
scas
fsubrl
adc
xchg
jl
insl
leave
and
gs
or
std
les
dec
push
mov
aam
js
scas
or
cmp
sbb
mov
mov
jno
sub
cmpsl
mov
adc
fwait
rep
add
cmc
imull
movsl
adc
loopne
adc
mov
jbe
sbb
jmp
push
test
movsl
scas
movsl
mov
cwtl
stc
mulb
jl
jmp
dec
int3
mov
imul
loope
or
ret
pop
cld
aam
mov
push
pop
cmp
or
xchg
xchg
cli
mov
add
jmp
adc
jmp
or
mov
fadds
insb
stos
mov
add
mov
xchg
pop
cmpsb
mov
adc
data16
pusha
pop
mov
sbb
mov
mov
addl
out
inc
rorl
cmpb
test
xchg
or
mov
insb
pop
popf
push
xor
push
mov
cmp
mov
insb
pusha
dec
clc
cmpsb
filds
ja
cmc
push
xor
or
divb
es
sub
dec
or
adc
test
mov
jns
scas
mov
sti
icebp
dec
lock
xchg
jp
push
inc
pop
rol
mov
ss
shll
mov
or
insl
inc
add
sahf
cld
not
rcrb
mov
xchg
mov
out
loope
pop
dec
mov
fsts
and
aas
and
or
cltd
call
jmp
lret
jle
in
stc
pushf
mov
cmp
lods
hlt
hlt
or
push
cmp
cltd
xor
mov
lea
sbb
mov
into
dec
pop
cmp
add
out
jmp
and
push
addr16
or
std
cs
sub
ffree
psrlw
mov
sarb
push
rcrb
adc
and
sbb
std
dec
inc
aas
pop
add
jg
fildl
shr
sbb
mov
insb
dec
sbb
jnp
xchg
test
test
jge
xchg
loop
mov
call
add
xchg
mov
or
or
stc
ja
push
pop
jnp
loopne
jbe
icebp
xchg
stc
cli
adc
inc
data16
mov
add
popf
jp
jmp
jg
rcl
shlb
movsb
std
stos
popf
or
sub
mov
fwait
lret
adc
cwtl
movl
pushf
lea
jmp
pusha
pusha
jmp
add
jmp
push
lea
call
clc
bt
cmp
call
pushf
xchg
call
cmp
mov
cmp
clc
test
cmp
pushf
call
cmc
cmp
jmp
add
add
rclb
rclb
rclb
dec
pop
add
pop
add
add
add
rol
inc
and
or
add
movzbw
jmp
iret
xchg
push
jp
fstpl
pop
and
mov
sahf
xchg
popf
mov
push
lcall
or
fisubrl
cmp
shlb
fdivp
xchg
bound
xorb
stc
inc
mov
lea
call
call
add
inc
js
je
jb
arpl
jae
movl
pushf
pushf
movl
pusha
pushf
movb
lea
jmp
bound
or
andb
test
cmp
fisttps
test
into
xchg
js
sarl
and
icebp
cmc
fidivl
sub
sbb
outsl
sbbb
or
jbe
sbb
or
cmp
hlt
loope
pusha
fwait
xchg
adcl
mov
pop
cs
push
aas
xchg
mov
icebp
insb
inc
shll
sahf
push
adc
and
xchg
xchg
fcmovu
or
inc
adc
mov
out
pop
mov
aam
sub
jae
movsl
das
lret
out
sbb
insb
cmpsb
hlt
nop
xor
jo
lahf
add
bound
je
repz
popf
adc
in
imull
fimull
into
mov
daa
mov
push
out
leave
enter
jae
pop
mov
ljmp
movsbl
bswap
lea
mov
movsbl
push
pushl
mov
movl
jmp
ja
loopne
jp
popl
or
push
testb
addr16
sub
inc
cltd
jecxz
test
jg
push
mov
jmp
mov
call
ljmp
lods
movsl
movsb
jbe
lret
int3
mov
outsb
lods
mov
mov
add
jg
or
push
xchg
sub
dec
shlb
xchg
jmp
push
icebp
test
pop
inc
jbe
mov
mov
repnz
fs
push
xor
stc
pushf
push
mov
or
jmp
mov
inc
cmp
xor
idivb
jle
lock
pop
mov
sub
pushf
jl
mov
and
pop
scas
lods
test
fdiv
push
jle
enter
int3
mov
push
inc
pushf
inc
movaps
dec
push
inc
dec
or
movsl
pop
add
test
push
xlat
adc
movsb
das
mov
popa
dec
sub
test
rcl
xchg
or
pop
inc
out
add
movsb
fistpl
aam
dec
iret
sub
mov
jo
pop
in
lea
call
je
pushf
test
cmp
sub
movb
pusha
call
pushf
setns
not
mov
movw
mov
movw
pushf
lea
call
call
lea
jne
movzbw
movb
movzbl
push
movzbl
movzbw
lea
pusha
movw
movl
mov
mov
push
pushf
pusha
pushl
ret
call
cmc
jmp
adc
push
pusha
push
lea
jae
jmp
jae
pusha
bts
mov
test
ror
setne
neg
mov
bsf
cmp
setae
btc
mov
cmp
sub
cmp
pushf
repnz
call
cmp
bsf
and
rol
xor
xchg
pop
setl
seta
movsbw
call
stos
xchg
bound
add
mov
mov
dec
aaa
pop
and
cltd
or
icebp
push
xor
inc
lock
push
adcl
arpl
pop
ds
mov
outsb
test
adc
or
fmull
cmpsb
aad
push
cmpsb
dec
dec
out
mov
mov
test
inc
xchg
pop
cltd
mov
inc
xor
inc
xchg
or
rcpps
and
jbe
cmp
mov
enter
loopne
mov
cmp
push
dec
into
iret
shr
dec
test
sahf
xchg
pop
nop
cmc
inc
aaa
lock
or
popa
pop
dec
pusha
xor
jp
fdivs
adc
push
sub
jb
jge
cmpsl
or
lds
jnp
lcall
xchg
xchg
sub
lds
aad
in
movsb
inc
pop
mov
loop
notb
lcall
pop
sub
outsb
xor
xor
aad
add
in
leave
ficoms
or
sbb
lods
adc
xor
adc
popf
cltd
jecxz
mov
subl
inc
inc
test
mov
lock
aam
pop
xchg
into
aaa
add
sbb
stc
call
pushf
lea
jne
shld
aaa
sub
bsf
pushf
mov
add
test
add
call
jp
push
pusha
movl
jmp
stc
sub
pushf
movb
jmp
sub
stc
cmc
rol
lea
jp
pushf
push
lea
call
cmc
pushf
pusha
cmp
push
call
or
ror
inc
adc
mov
pusha
stc
pushf
jmp
ja
cmp
inc
push
bound
adc
adc
bound
outsl
xor
cmp
rcl
cmpsb
rol
add
ljmp
and
adc
cwtl
xor
cs
pop
adc
fdivrl
cmc
imul
jns
cmp
call
xor
stc
push
xor
ds
cmc
dec
inc
xor
push
or
scas
sub
addb
inc
lock
pop
mov
xor
mov
cltd
mov
xchg
test
pushl
lea
je
pushf
jmp
push
pushl
pusha
jmp
mov
pushf
push
pushf
pushl
ret
movb
mov
lea
je
movsbw
mov
movsbw
movsbw
jmp
call
pushf
lods
cmc
add
pusha
ror
cmp
sub
pushf
jmp
andl
pop
jp
xchg
cvttps2pi
imul
mov
popf
ret
mov
stos
scas
fwait
xchg
add
out
lods
jmp
mov
stos
xchg
xchg
dec
loope
push
ret
lds
fwait
and
js
cmp
data16
sbb
lahf
jns
jp
into
mov
xchg
xchg
nop
cmc
mov
addr16
subl
sarb
cmp
test
pand
cmp
popa
push
lret
add
jl
jno
pushl
mov
xorb
dec
cmpsl
inc
jns
mov
fimuls
xchg
sub
sub
sub
stos
repz
push
call
movl
push
pusha
mov
lea
jmp
or
call
dec
xlat
jae
jp
cld
fmulp
repnz
add
sar
sti
mov
outsb
mov
out
jl
mov
xchg
lods
push
push
push
mov
daa
push
adc
sbb
hlt
jns
xor
in
xchg
test
xor
dec
roll
movsb
or
incl
ljmp
or
add
pusha
bt
jmp
mov
inc
mov
repz
xchg
mov
mov
call
jp
jecxz
loop
push
push
push
negl
arpl
pop
daa
insb
pop
sub
pusha
jns
cmpsl
shr
dec
dec
sbbb
fists
pop
mov
rclb
mov
add
dec
push
jecxz
jg
mov
mov
push
iret
or
mov
das
fstpl
mov
lea
inc
mov
fs
iretw
rol
arpl
dec
push
inc
inc
adc
xchg
pusha
sti
cld
push
push
and
jbe
cwtl
xchg
fsubs
xchg
and
negl
scas
add
pusha
lea
ja
bt
bt
imul
jmp
xchg
inc
xor
jne,pt
imul
fs
mov
cmp
fwait
sahf
sbb
xor
pop
sbb
jns
out
mov
or
addr16
inc
mov
push
dec
pushf
int
mov
je
mov
xchg
pushf
jmp
mov
call
add
pushf
cmc
bt
mov
jmp
pusha
pusha
lea
je
bt
cmp
cmp
jmp
movw
pusha
movl
push
lea
jmp
shll
iret
add
sbb
push
mov
movb
add
xchg
dec
mov
push
pop
subl
add
mov
sub
cmc
mov
pop
cltd
fistpl
aaa
cmp
and
pop
pop
cltd
and
add
aas
ret
iret
cwtl
mov
mov
cs
mov
xor
fistpll
fwait
pushf
and
stc
insb
std
pusha
sbb
xchg
aad
and
push
sub
pop
jp
inc
mov
dec
mov
sub
mov
clc
js
inc
cltd
mov
xchg
xor
cmpsb
dec
fnstsw
movsl
ja
bound
mov
je
loop
fidivrl
stc
pop
std
test
jmp
or
inc
pop
or
scas
clc
sahf
cltd
lcall
xchg
movsb
daa
mov
jl
mov
subb
inc
jle
fists
add
sub
pop
push
imul
cmp
cltd
mov
cmp
inc
add
ficompl
push
cmp
inc
sbb
xchg
outsb
inc
xor
xchg
fmull
cmp
sahf
ljmp
sbb
xor
mov
sbb
add
add
jbe
xchg
mov
test
push
arpl
cld
pushf
add
lcall
pop
cmp
dec
pop
pop
pop
repnz
mov
push
dec
xchg
fisubl
pop
mov
jl
mov
decb
xlat
cmc
insb
mov
clc
jmp
mov
inc
fstps
push
mov
sub
sahf
mov
loope
xchg
insl
mov
fists
sub
lock
mov
loopne
mov
fdivrl
jnp
repz
mov
sbb
in
cmp
int3
movsb
mov
xchg
shrb
out
pushf
pusha
movl
movb
lea
jmp
lea
call
jbe
push
mov
push
mov
pusha
push
lea
jmp
test
sub
pushf
cmp
mov
cmp
cmp
jmp
jmp
jb
pushf
movb
push
movl
push
push
mov
push
pushf
mov
pushl
pushl
ret
mov
mov
pusha
pushf
pushl
pushl
ret
not
pushf
mov
xchg
push
mov
pusha
mov
push
push
mov
call
jmp
mov
movb
movw
push
pushl
lea
jmp
movb
pop
pop
mov
lea
pushf
jmp
adc
mov
inc
loope
in
cs
push
xor
bound
clc
clc
lock
jmp
insl
mov
imul
lds
aas
xor
hlt
pop
lock
dec
mulb
rorb
imul
fldcw
adc
jae
inc
inc
pop
rcll
inc
adc
icebp
xor
mov
xchg
cmp
inc
xor
popa
sub
lock
dec
inc
mov
xchg
mov
sub
scas
add
icebp
add
pop
pop
xor
stos
stos
popf
pushf
and
dec
mov
mov
jl
nop
push
call
pusha
movl
jmp
pusha
stc
pusha
cmp
push
lea
jae
seta
mov
or
sub
movzbw
mov
ror
bsr
xor
call
movb
movb
movl
pushf
pushl
pusha
pushl
lea
jmp
setp
mov
mov
lea
push
lea
call
pushf
movw
call
pushl
call
lea
jno
pusha
lea
jne
movsbw
not
push
mov
pushf
pusha
push
mov
lea
jmp
int3
popf
pusha
mov
movl
movw
pusha
movl
pushf
pushf
pushf
lea
jmp
xchg
xchg
or
inc
xor
jl
pop
dec
icebp
and
pop
mov
mov
inc
pop
pusha
nop
jecxz
and
inc
jo
aam
push
aas
dec
mov
movsb
xor
int3
mov
mov
sub
notl
jecxz
jmp
pusha
movb
lea
ja
push
bswap
xchg
jmp
call
lea
jae
jmp
pusha
inc
pusha
pushf
inc
movb
lea
jmp
lret
xchg
pop
jp
or
loop
call
push
or
jns
fdivl
pop
repz
pop
je
mov
in
shrl
adc
in
ss
mov
dec
cs
stos
and
mov
adc
out
repz
mov
std
sti
cli
xchg
test
neg
xchg
pop
xchg
cs
out
lock
mov
mov
dec
dec
mov
into
mov
outsb
push
jp
mov
cmp
add
pop
pop
push
cmp
jl
sub
out
jge
lret
ljmp
mov
out
cmp
loope
sahf
push
xor
clc
lds
testb
xchg
push
adc
test
mov
nop
pop
ljmp
push
add
imul
adcl
inc
ja
std
clc
insb
pop
xchg
mov
testb
cmpsl
fdivr
xor
sarb
fisubl
sub
test
aam
in
outsl
or
aaa
pop
inc
xchg
push
outsb
mov
mov
mov
jle
cmp
ss
mov
mov
mov
fisubs
add
dec
in
push
cmp
mov
ret
aam
pop
add
push
jae
int3
sub
out
mov
inc
les
subb
jae
jecxz
jge
or
inc
mov
daa
jns
push
add
jmp
push
add
adc
push
sbb
or
lea
and
push
lea
adc
lea
add
push
adc
or
add
lea
lea
push
add
push
cmp
or
sbb
lea
sbb
sbb
or
cmp
subl
pushf
pushl
popl
pushf
push
pushl
ret
push
mov
inc
pushf
call
lea
ja
adc
shr
sub
cmp
shl
xor
add
pushf
mov
or
mov
stc
bt
push
call
movl
push
movw
lea
jmp
pop
push
jp
sbb
xor
pop
jo
mov
repnz
adc
inc
mov
mov
aas
shrl
sub
sarl
mov
rcrb
xlat
insb
push
cltd
enter
lret
ja
daa
mov
ss
int3
movsb
and
aaa
push
push
mov
lea
pusha
jmp
call
lds
sti
outsl
mov
sbb
sub
add
adc
jmp
shll
push
daa
hlt
enter
or
leave
push
mov
je
jns
pop
fdivs
cwtl
mov
dec
ret
cltd
hlt
cmp
xor
xchg
xlat
lock
sbbb
test
add
mov
pushf
pushf
mov
lea
jmp
aaa
or
sub
or
lods
lcall
xchg
aas
adc
ret
xlat
xchg
sub
test
cli
and
xor
fcmovbe
iret
enter
add
mov
inc
mov
xor
int3
mov
pushf
xor
jg
ffreep
xor
or
mov
push
sbb
adc
lcall
mov
shr
fldl
pop
xchg
js
push
push
mov
or
pushf
pop
mul
jbe
pop
pop
mov
jne
mov
sub
and
xchg
movsl
xchg
in
insb
pop
jmp
mov
dec
test
xor
xlat
push
rorl
jmp
dec
popf
jp
lcall
mov
pushl
lea
pushl
popl
pop
push
movsbl
push
mov
sete
lea
push
jmp
movb
lea
jb
stc
pusha
cmpb
pusha
call
pusha
call
lea
call
jmp
je
popa
push
jp
out
adc
push
xchg
xor
inc
cltd
sarb
add
adc
mov
jle
pop
mov
cmpsb
jns
mov
sbb
adc
lea
and
mov
lods
fiadds
hlt
jl
xor
pop
mov
test
bnd
pop
shrl
comiss
insl
push
cld
xchg
shrb
and
sahf
or
mov
clc
out
xor
incl
add
bt
stc
or
pushf
lea
je
pushf
clc
bt
clc
cmp
pusha
lea
jne
jmp
add
add
lea
or
dec
push
btr
adc
ror
neg
mov
shl
sub
shrd
lahf
push
test
setbe
test
push
bt
and
bts
rcl
push
lahf
shld
sets
movsbw
xor
lea
not
movsbw
lea
call
lea
jne
ror
rcl
or
bswap
mov
bt
clc
cmp
add
call
pop
sub
push
jp
sahf
jle
je
mov
cmp
xchg
lock
loop
rolb
cmpsb
xchg
shrb
shll
pop
cmp
mov
sbb
aas
lods
aas
jle
fisttpl
outsl
stos
rolb
jbe
cmp
and
pop
sbb
outsl
fimuls
mov
cmp
sub
shlb
mov
movw
push
call
sub
pusha
call
push
lea
je
pusha
pushf
push
mov
pushl
mov
not
movl
setge
push
lea
call
pop
dec
mov
jp
xchg
sbb
jmp
fsubs
in
fsub
mov
lock
sub
imul
xor
mov
adc
jge
int
sbb
jae
mov
xor
out
imul
mov
out
sub
dec
divb
roll
shl
pop
fwait
jmp
in
mov
jno
pop
pop
insl
sti
cld
mov
mov
fstpl
jo
add
imul
cmpsb
push
test
cmpsl
adc
daa
xor
in
test
cmp
leave
sbb
adc
inc
je
inc
lahf
cmp
mov
pop
or
push
xchg
outsl
in
inc
or
jg
push
cli
mov
xchg
popf
jno
adc
jle
push
pop
jne
xchg
mov
in
dec
push
jl
cmpsl
jns,pt
cltd
cli
jge
sbb
mov
jae
imul
mov
pushl
lea
jne
mov
pushf
mov
pusha
pushl
ret
movsbw
movsbw
xchg
mov
jl
movzbw
pop
call
lea
call
push
call
out
add
sub
or
and
add
add
sub
lea
and
push
lea
adc
lea
add
push
adc
or
add
lea
lea
push
add
push
cmp
or
sbb
lea
sbb
sbb
or
cmp
subl
call
mov
pushf
movw
pushf
pushf
pushl
ret
push
call
pusha
mov
movzwl
call
shl
sub
bswap
jmp
pusha
mov
movsbw
movzbl
pop
pusha
pushl
ret
movl
pushf
push
call
call
call
pushl
popl
pushf
pushf
pushl
ret
jp
mov
xchg
lret
movsl
fcomp
repnz
sub
andb
cmc
inc
cltd
jg
and
sub
push
jle
into
add
fnclex
jg
mov
imulb
xlat
idiv
adc
pop
pop
decb
nop
pop
jle
jp
dec
es
xor
xchg
jge
movsl
or
sti
jmp
dec
ljmp
pop
in
mov
dec
push
icebp
repz
cmp
jne
mov
and
pushf
mov
in
shll
xlat
loop
popa
mov
push
and
sbbl
jp
loop
or
movsb
aas
std
jge
cli
push
fwait
call
shr
mov
mov
cmp
test
stc
and
cmp
pusha
stc
cmc
add
add
bt
add
jb
dec
pusha
pusha
lea
jne
xor
neg
mov
push
cmp
pusha
lea
ja
movzbw
movsbw
not
pop
pushf
push
mov
jmp
jmp
pushl
pushl
pushf
pushl
popl
pushf
pushl
ret
mov
jle
jp
fwait
js
hlt
sar
pop
push
cmp
repnz
dec
inc
sbb
pop
push
xor
lret
andl
std
daa
les
sub
mov
mov
mov
sub
push
mov
pop
stos
adc
xor
adc
repnz
pop
sar
jge
loop
or
dec
inc
dec
pop
add
cmp
ret
sub
lods
sbb
mov
mov
xchg
or
lea
pop
mov
clc
dec
adc
jmp
out
int
dec
jp
pop
pop
ficompl
sbb
test
mov
mov
repz
cltd
leave
lret
nop
imul
aad
push
sbb
mov
jbe
jl
mov
imul
out
dec
mov
xchg
sub
mov
push
rolb
mov
push
add
mov
cmp
lea
je
stc
stc
cmp
pushf
jmp
movl
call
lea
ja
jmp
jmp
xchg
insl
stos
dec
jp
pushf
lock
pop
mov
mov
ret
test
scas
lahf
lods
lods
or
lea
adc
aam
mov
cmp
ret
cmp
jmp
jne
stos
test
out
push
or
adc
in
outsl
sub
xchg
shll
les
inc
testl
test
pop
sarl
cmpsl
and
or
mov
inc
jae
inc
xchg
dec
cwtl
out
icebp
add
out
push
out
inc
and
sbb
movl
push
push
push
mov
lea
jmp
not
bsf
mov
shr
push
btc
mov
shrd
sub
bt
push
das
aas
rcl
push
clc
setle
call
push
push
lea
jne
movsbw
cmc
call
fistpll
jp
shll
inc
xor
icebp
or
push
inc
pop
mov
cmpsl
xchg
es
ss
jne
in
add
mov
sub
sub
fstpl
xor
jl
dec
fbstp
xchg
or
push
mov
imul
cmp
test
nop
mov
not
cld
xchg
mov
dec
add
xchg
loop
push
fstpl
xchg
xchg
testb
dec
jp
imul
mov
push
jne
cwtl
xchg
nop
mov
sub
mov
js
and
xor
pop
xor
or
jp
or
push
xchg
xchg
stos
movl
aad
in
pop
inc
dec
xchg
fbld
clc
jo
adc
insl
push
in
ret
pop
sub
sub
loope
out
mov
xchg
fcomip
mov
mov
xorl
add
fdivrp
mov
in
pushf
sub
mov
mov
inc
pop
stc
cmc
pop
inc
test
sub
ret
and
outsl
pop
es
aas
or
aas
loope
push
inc
jp
adc
test
xchg
test
nop
jb
xchg
sbb
int
pop
and
jae
flds
outsb
dec
test
scas
jecxz
leave
or
ss
mov
insl
add
jl
pandn
ljmp
jp
adc
add
push
ja
mov
adc
jne
out
fistpll
xchg
and
out
shlb
xchg
iret
shlb
xchg
insb
jmp
out
mov
push
or
adc
mov
dec
jp
mov
jge
mov
dec
in
out
ja
vcvtss2sd
push
movsb
and
push
sub
sbb
dec
sub
loop
push
test
jp
xor
outsl
mov
cmpsl
adc
std
shll
gs
frstor
movsb
and
or
outsl
pusha
test
pop
arpl
add
ret
xchg
lds
lcall
subb
mov
and
stc
call
ja
jns
push
lcall
jbe
int
jecxz
call
adcl
sbb
adc
xchg
nopl
ficompl
jg
test
call
std
bound
mov
nop
out
jmp
jae
ss
clc
daa
xor
out
addr16
and
pop
xchg
mov
js
pusha
pusha
movl
lea
jns
push
push
pushl
movl
pusha
lea
jmp
push
push
jmp
mov
inc
xchg
jne
dec
pop
dec
mov
lret
cmc
pop
xchg
sub
cmp
in
cmp
fldl
fistl
inc
dec
in
shll
popa
fiaddl
xchg
push
dec
rcrb
fstpl
jne
fs
cmpsb
push
dec
jp
ret
lods
rcll
sbb
icebp
push
repz
dec
mov
ds
mov
shlb
test
sbb
in
add
and
cmp
lahf
mov
push
pop
fucomi
orb
adc
mov
jo
movsl
jmp
cmp
test
xchg
push
popf
inc
jo
into
aad
pop
dec
scas
sahf
jno
xlat
into
mov
or
push
cmp
mov
scas
sbb
xchg
decb
mov
dec
roll
dec
dec
jp
and
out
push
lea
shrb
jl
js
and
mov
je
adc
push
sti
mov
mov
xor
or
adc
nop
pusha
mov
fucomip
mov
jp
xchg
xor
add
sbb
add
lret
cld
popa
stc
nop
lahf
add
jg
dec
loop
adc
add
add
data16
xchg
xchg
cld
cmp
dec
dec
dec
jg
lods
out
pop
arpl
into
aad
popf
in
icebp
pushl
lea
ja
push
inc
setp
not
jmp
sar
bt
add
mov
cmc
call
call
pushf
sub
pusha
jmp
lea
call
push
mov
pusha
lea
jmp
xchg
sub
inc
jp
inc
adc
mov
in
adc
inc
push
aaa
repz
shr
cltd
imul
mov
pop
dec
fcompp
rcrb
push
in
paddsw
and
mov
ds
stos
fldenv
je
mov
pop
inc
in
fists
inc
pop
nop
mov
int3
push
js
xlat
les
and
pop
or
dec
lods
dec
adcb
dec
cltd
dec
popa
push
out
push
inc
das
pushf
adc
in
int
jne
loopne
dec
push
push
test
jo
mov
aaa
mov
jmp
mov
sub
cmp
jbe
push
xchg
adc
cmp
pop
mov
popa
inc
cmp
ficoml
xchg
dec
cmpsb
ret
jno
mov
jmp
push
inc
loope
sti
int3
fistpl
cmp
rcrl
xor
jne
loop
add
xlat
mov
cmpsl
dec
std
mov
xchg
in
push
movsb
xchg
cmc
inc
fisttps
push
je
sbb
shrl
loopne
mov
pop
in
and
pop
repnz
mov
dec
in
jae
rol
sub
inc
cld
imul
nop
fucomip
test
xchg
jmp
mov
movsl
clc
arpl
incb
ja
mov
push
jb
push
push
xor
pop
mov
cmc
mov
sub
xchg
clc
mov
fadd
sbb
fs
dec
adc
hlt
add
xchg
pop
call
sbb
push
jno
xchg
nop
jae
icebp
jl
sub
in
inc
sarl
xchg
mov
scas
les
popa
push
movb
outsb
test
mov
fsubp
sub
dec
cwtl
pop
jo
xchg
call
test
mov
mov
ret
jle
mov
adc
cmpb
push
push
pop
lock
jl
sbb
xchg
pop
mov
lcall
cmp
jno
sbb
jno
enter
xchg
aam
cmc
fadds
mov
jp
adcl
jmp
je
xor
sub
xchg
cwtl
cmpl
je
cwtl
ret
xor
loop
cmp
jno
movsb
pop
cli
push
and
dec
mov
pop
pusha
scas
mov
sub
xorl
push
push
lret
push
inc
inc
xchg
in
push
dec
pop
nop
jno
test
adc
aam
nop
pop
push
dec
pop
icebp
jge
punpckldq
xchg
cld
popa
js
jle
lock
mov
scas
out
push
jb
cltd
fst
pop
jno
xlat
xchg
cwtl
imul
pop
mov
push
imul
xor
mov
jo
push
mov
test
jl
mov
jb
push
mov
pop
xchg
sbb
or
xchg
stc
push
mov
pusha
popf
mov
jle
mov
mov
dec
outsl
mov
jg
mov
gs
popa
ficoml
mov
push
jmp
aam
or
imul
shlb
cltd
jno
je
mov
addb
test
pop
cld
fsub
jo
push
jno
arpl
jb
adc
jmp
cmp
pop
add
xchg
nop
loope
call
jecxz
cmp
icebp
enter
call
push
pushf
and
jmp
imul
jbe
test
adcl
push
push
jo
fldl
pop
test
dec
enter
add
lock
xchg
add
fldcw
jno
xchg
icebp
je
test
pushf
je
xchg
cld
test
jmp
pop
clc
jb
mov
loopne
lods
adc
inc
pop
clc
pop
test
mov
enter
clc
xchg
pop
andb
adc
or
adcb
xchg
xchg
mov
xor
or
test
xor
cltd
aam
xchg
mov
xchg
movsb
aam
test
call
xor
sub
xor
adc
adcl
pop
mov
pop
jae
fs
push
mul
xchg
push
mov
pushf
mov
pusha
ret
fsubr
and
addb
adc
mov
inc
in
insl
arpl
das
xor
test
out
sbb
inc
mov
mov
icebp
lretw
mov
and
or
fs
jo
fdivl
fmuls
popa
mov
outsl
or
in
mov
and
sub
ret
push
cwtl
jns
mov
inc
jo
jl
pushf
sbbl
jno
xchg
pop
pop
mov
adc
in
adc
jno
jle
shlb
and
mov
js
imul
in
je
cmpsb
data16
mov
gs
sub
addl
push
jno
xor
insb
mov
addb
mov
je
cmpsb
mov
sub
adc
mov
pop
rcrb
adcb
pop
xchg
and
sub
inc
pop
cwtl
jbe
icebp
mov
jno
pushf
fsub
jno
sbb
icebp
call
and
dec
pop
xchg
sbb
fcmovnbe
lea
mov
pop
fcompl
xor
dec
pop
movsb
je
cwtl
call
jb
xchg
enter
push
mov
pop
add
xor
int3
int3
stc
sub
in
pop
in
xor
fs
pushf
dec
pop
jo
xchg
sbbl
js
imul
cld
les
je
xchg
fs
pop
mov
call
mov
orb
pushf
subb
mov
orb
pop
xchg
xorb
pop
push
jno
inc
addb
jns
xchg
push
push
mov
pop
xchg
nop
adc
or
xchg
pushf
addl
outsl
mov
jl
insb
andb
in
int3
push
adcb
xchg
fdivr
fcomps
xor
xchg
mov
andl
fsubr
push
arpl
jl
fs
icebp
push
adcl
add
mov
jne
test
js
xor
jb
or
js
add
and
push
pop
outsb
xchg
dec
imulb
divb
mov
jae
sub
inc
push
lock
inc
sub
cmp
adc
je
dec
push
sbb
sub
push
add
cltd
push
lock
xor
jne
jo
pop
or
insl
dec
outsb
jae
jne
push
and
xchg
pop
adc
jbe
fsub
pop
js
adc
jo
loopne
xchg
js
test
sbb
xchg
nop
bound
sbb
xlat
fcoms
xor
mov
gs
and
xchg
pop
adc
js
cwtl
je
ret
push
pop
jae
icebp
mov
push
icebp
sub
push
leave
adc
test
push
pop
jno
cwtl
xchg
rolb
jns
cmp
shrb
js
xor
ss
xchg
mov
mov
pop
push
mov
dec
call
cmp
push
pop
add
mov
pop
das
cwtl
inc
fcoms
jno
jb
xchg
xchg
cmpsl
fnstcw
cwtl
div
or
xchg
xor
fcomps
loope
bound
sbb
out
jne
xchg
jno
addb
xchg
add
rclb
sub
adc
insb
test
jnp
jl
repz
inc
mov
loopne
cmc
mov
push
inc
int3
pop
das
cmp
addr16
sbb
das
add
fildl
xchg
insb
insl
loopne
jno
push
sbb
or
aad
cltd
or
sti
sbb
adc
jo
outsb
dec
sbb
rol
test
popa
xor
sarb
aam
and
ss
dec
outsl
lock
adc
outsl
jle
cmp
pushf
scas
xor
cmp
cmpsl
sub
jnp
int3
sub
inc
in
outsl
xchg
or
push
mov
andl
or
imul
cmp
xchg
ficompl
inc
mov
pushf
aad
xor
mov
mov
jp
jo
cwtl
or
xchg
sbb
mov
ret
fdiv
mov
jl
aad
push
jns
js
nop
add
pop
int
pop
test
xchg
add
xor
add
aad
call
sub
add
jo
xor
fs
adc
add
and
mov
je
xorl
push
pop
pusha
fidivrs
into
js
repnz
push
stc
push
or
add
aam
cmp
push
add
pop
xor
hlt
jl
pop
add
jns
mov
mov
pop
sub
cmpsb
test
insb
bnd
xchg
rcll
mov
xchg
inc
xchg
push
ret
xor
dec
es
sahf
push
adc
add
pop
push
jle
cmp
ret
sahf
and
pop
mov
pop
movsl
pop
cmpsb
pop
cmpsl
pop
test
test
rclb
scas
mov
pop
mov
rcl
mov
into
inc
insb
mov
inc
lcall
inc
lds
push
stos
dec
mov
leave
jg
mov
mov
test
pop
ret
push
jg
pop
rcrb
mov
lock
mov
pop
mov
into
lcall
add
push
pop
stc
out
sbb
mov
test
and
pop
push
push
inc
mov
cltd
jo
xor
lds
mov
mov
mov
test
repnz
pop
xlat
rol
roll
pop
xchg
je
les
sahf
sarl
adc
mov
xchg
pushf
mov
icebp
repz
mov
divl
out
insb
adc
jae
jg
mov
test
jae
jg
pop
fbld
rolb
ljmp
movsb
xchg
lods
fdivs
xchg
je
mov
cli
addb
sbb
mov
sub
mov
mov
mov
mov
mov
jae
xchg
int3
mov
fsubrs
cmpsl
aam
out
cmpsb
add
movsb
mov
loopne
fcom
jno
inc
pop
xorl
int3
cwtl
dec
cltd
mov
xor
pop
dec
or
insb
dec
jb
or
sbb
mov
test
into
xchg
test
repz
sbb
js
xchg
jecxz
mov
mov
jmp
pop
addb
jl
mov
in
mov
nop
and
inc
fnsave
lods
mov
lods
stos
jb
add
addb
jbe
lods
mov
lds
mov
int
push
jle
cmp
mov
xchg
jp
xchg
mov
mov
push
jmp
xchg
les
aas
movsb
nop
pop
nop
pop
cmpsb
xchg
mov
pushf
cmpl
cld
mov
dec
dec
dec
add
je
jnp
roll
cwtl
test
mov
pusha
popa
leave
lahf
std
sub
mov
jno
ljmp
jne
lods
lea
aam
mov
test
xor
jl
adc
or
xor
lcall
in
cmpsl
je
loopne
adc
out
cltd
imul
enter
mov
sbb
into
scas
jmp
pusha
nop
xchg
in
in
mov
pusha
push
add
dec
stos
push
sbb
testl
mov
pusha
mov
fimuls
sti
sub
jb
pop
dec
adc
or
jle
push
xchg
mov
or
popf
cmp
mov
andb
or
repnz
mov
std
outsb
lahf
pushf
repnz
out
aam
fs
mov
sbb
in
pop
dec
pop
lock
insb
scas
in
movsb
in
dec
xchg
call
call
pusha
not
movswl
xchg
clc
fsubl
lahf
enter
leave
test
jl
ret
mov
inc
cwtl
test
mov
lcall
pushf
adc
mov
addb
adc
sahf
out
pop
popa
pushf
shll
lcall
push
out
test
js
les
mov
ret
aad
and
jl
jae
shl
pop
xchg
sbbb
leave
test
loopne
xchg
mov
test
subl
jns
iret
jnp
ret
xchg
pop
sbb
push
inc
int
mov
lods
repnz
lock
pop
xchg
lock
insb
movsb
in
insb
mov
xor
lds
jl
shl
dec
push
aas
ljmp
mov
xchg
cwtl
pushf
fnstenv
cwtl
lods
icebp
shlb
mov
les
push
push
pop
orb
push
imul
les
js
pop
cmpsb
pop
mov
mov
jl
mov
sbb
test
mov
jo
js
data16
mov
jns
push
test
fstpt
jns
cmp
fs
in
rcrb
stos
adc
fwait
pop
xchg
in
xchg
pop
xchg
aam
lods
mov
or
cmpsl
lock
sarl
fcompl
push
pop
clc
pusha
shlb
mov
vcvttps2dq
aas
in
jo
mov
mov
pop
mov
push
mov
inc
fidivrl
dec
pop
scas
fisttpl
aam
icebp
pop
jg
inc
out
pushf
pop
mov
mov
fstpt
repnz
call
enter
lods
inc
inc
mov
test
jp
out
xor
pushf
fdiv
fsubrl
mov
stc
fdivrl
mov
add
mov
jp
xchg
hlt
or
mov
inc
sahf
cmp
pusha
mov
shlb
jg
mov
mov
in
or
icebp
popa
out
in
test
mov
fs
cmpsb
lock
cld
mov
mov
sub
fmull
test
jns
jbe
stos
jno
push
fmul
loopne
mov
xchg
shlb
int3
push
clc
dec
push
scas
mov
mov
movsb
andl
lock
adc
mov
movsl
orl
data16
pushf
lds
dec
cmpsb
pop
xchg
out
ret
xchg
lods
pop
sub
je
jne
out
nop
and
cltd
lret
aad
add
push
arpl
test
je
pop
lcall
push
fs
aad
or
pop
sahf
enter
pop
data16
fnclex
outsb
pop
insb
push
out
fld
daa
add
in
mov
sub
adc
scas
mov
enter
lahf
mov
cltd
mov
fsubrl
push
test
popf
icebp
pop
movsb
pop
sahf
iret
gs
js
or
jb
shrb
test
push
mov
lock
lock
xchg
movsb
faddl
sbb
mov
es
subl
into
jg
inc
mov
outsb
testb
mov
pop
mov
scas
sub
xor
jae
sbb
push
add
pop
xchg
cmpl
testb
popf
xor
pop
xor
mov
fs
pop
cmp
clc
mov
dec
mov
insb
insb
les
mov
jl
js
sub
xorl
jbe
fs
pop
and
cmpsb
mov
push
mov
lods
lcall
jmp
dec
mov
fdivrs
ret
jae
in
pop
sbb
push
movsb
call
and
bound
adc
xchg
pop
pop
sahf
pop
xchg
or
bound
sub
push
jo
dec
jl
jbe
pop
arpl
lock
icebp
or
xchg
dec
mov
ret
xchg
xchg
aam
pushfw
into
es
jge
inc
ss
pop
sahf
int
mov
test
sub
push
pop
add
outsl
and
arpl
sarb
aam
lods
jmp
cld
cmpb
pop
jne
lret
ja
add
pop
rcr
push
cmp
mov
mov
cwtl
mov
xchg
dec
lock
push
and
daa
push
rcll
std
out
jle
mul
ret
fadd
mov
mov
popf
cmp
pop
insb
arpl
mov
leave
jno
ljmp
mov
mov
nop
mov
push
xchg
int3
xor
ficoms
inc
xchg
mov
jne
bound
mov
xchg
cld
mov
mov
mov
mov
mov
jle
jecxz
mov
push
imull
adcl
xchg
sub
jp
ficompl
cltd
stc
pushf
or
push
cld
js
rcl
jp
ljmp
push
movsb
loopne
int3
loope
in
xchg
xor
ficompl
inc
and
and
mov
shlb
loopne
scas
out
inc
out
mov
fbld
xor
push
nop
movsb
mov
xchg
push
data16
cld
les
aam
and
test
mov
sarb
pushf
out
push
aam
or
clc
lcall
or
repnz
jb
lods
and
aam
fwait
mov
jne
rclb
rclb
into
jecxz
mov
jl
icebp
push
sbb
in
jne
in
out
rcrb
mov
jb
xchg
lock
cwtl
mov
or
adc
sub
outsb
or
aam
enter
push
jp
pop
jge
rcrb
lcall
test
add
andb
fisttpll
push
mov
pop
xchg
out
mov
sbb
test
jle
mov
or
jle
cmpsb
xor
dec
push
les
lret
leave
push
mov
sbb
ret
dec
cmp
scas
xchg
mov
jmp
push
dec
pop
pop
imul
scas
jl
mov
aaa
mov
imul
repnz
and
pushf
xor
scas
fiadds
rolb
xorl
push
nop
fdivl
popf
clc
push
gs
stos
nop
jmp
gs
loopne
fadds
mov
mov
popa
cwtl
adc
pusha
pop
ja
pushf
addr16
mov
jmp
pop
mov
and
push
rcll
pop
aaa
cmp
lods
movsb
fsubrl
adc
mov
je
pop
mov
nop
shll
mov
jg
adcl
mov
test
mov
mov
pop
mov
stos
sub
mov
outsb
jmp
aaa
jns
mov
jns
mov
adc
sub
mov
xor
pop
pop
sar
mov
test
inc
lock
mov
fsubrl
inc
in
sbb
andb
sbb
cmp
fstps
pop
in
js
inc
jns
rcl
rcll
mov
test
push
push
jp
xor
rorb
loope
adc
xor
icebp
add
mov
sbb
add
cmp
enter
in
aaa
rcrl
adc
inc
sti
xor
xor
push
pop
aaa
cltd
dec
in
xor
sbb
sbb
mov
jp
popf
js
insb
fucom
in
inc
int3
test
push
cmp
enter
pushf
sub
icebp
xor
sub
pusha
xchg
xor
cmp
sbb
add
leave
xor
movsb
mov
insb
imul
imulb
xchg
or
repz
pop
jb
nop
push
push
xchg
adc
cmp
jl
add
data16
jp
xchg
sub
nop
pop
mov
and
fs
dec
mov
es
andb
jp
mov
insb
push
mov
mov
scas
cld
test
fld
in
mov
mov
xor
cltd
imul
xchg
jge
jmp
in
push
pop
stos
jl
jns
stc
adc
sub
mov
fs
aaa
pop
subl
insb
cs
in
pop
and
sbb
hlt
jmp
icebp
mov
mov
jo
les
inc
xor
xor
cmpsl
hlt
fimull
mov
push
imul
sbbb
mov
fs
rcrb
fidivs
fs
and
inc
mov
xchg
insl
js
cmp
loop
xor
sub
pop
inc
cs
clc
mov
jl
hlt
clc
xor
mov
cmp
test
mov
in
je
es
inc
mov
out
aaa
call
push
or
sbb
in
add
call
movsb
sub
jns
pushf
shlb
mov
fprem
add
push
add
jno
dec
inc
lods
xchg
ja
popa
push
xchg
push
outsb
jno
pop
pop
push
pop
push
adc
iret
adc
bound
xor
xor
mov
pop
xchg
inc
push
arpl
fistps
inc
push
pop
jno
jecxz
dec
pusha
mov
call
push
xlat
jno
call
jge
ret
xchg
push
fsubrs
test
pop
pop
loopne
push
dec
lret
sub
dec
mov
xchg
pop
mov
cs
dec
jno
out
pop
enter
outsl
pusha
dec
mov
xor
fsts
push
pop
jbe
inc
xchg
pop
push
loopne
pop
cltd
outsl
fsubs
cmp
imul
push
out
jno
push
int
push
lret
ficoms
loope
cs
dec
js
loopne
int3
fs
into
fcmovnbe
push
fxch
mov
fnstenv
push
in
or
ret
push
inc
adc
jne
push
loopne
std
jg
add
arpl
pusha
aad
fsin
rorb
je
xlat
push
mov
sub
push
xor
iret
adc
addb
lret
in
lds
add
and
xlat
mov
jo
cmp
xchg
sub
lret
jae
aam
jno
popa
gs
fcmovb
rorb
sti
push
jae
pushf
pop
iret
mov
cld
insb
outsb
push
mov
sub
cmpsl
insb
shll
mov
xchg
inc
inc
push
nop
dec
adc
aaa
fcomps
pop
insl
scas
enter
sar
adc
jno
pop
aad
clc
lods
inc
pop
ror
aam
pop
gs
call
or
test
or
pop
fs
mov
add
fldt
lcall
xchg
in
scas
xor
fsts
out
jecxz
rcrl
add
mov
push
mov
pushf
push
pop
gs
aam
mov
inc
popf
outsb
mov
aam
dec
das
dec
movsl
std
rorb
xlat
insb
in
cli
pop
loopne
pop
mov
push
pop
bound
insb
jbe
pop
push
popf
pop
push
push
xlat
mov
pop
fistpl
jecxz
aad
imul
fdiv
fisubs
xchg
push
aam
fsts
ds
jg
js
mov
jno
ljmp
loopne
out
cwtl
lds
mull
push
xor
jno
push
leave
lret
frstor
pushf
inc
aam
lock
cmp
cli
push
rcl
imul
imul
xchg
fstpl
pushf
fisubrl
jnp
ret
jmp
cmpsl
and
sbb
mov
imul
dec
in
dec
std
push
imul
fs
jb
insl
push
shll
je
repz
ret
outsl
ja
out
jae
dec
mov
mov
shrb
aam
pop
leave
push
cmc
lds
pop
xchg
stos
and
pop
mov
push
pop
call
pop
mov
inc
push
mov
imul
mov
jg
jl
pop
leave
dec
mov
jae
sub
add
popa
loope
bnd
inc
gs
add
pop
insb
jns
popf
int
je
pop
xor
out
and
push
shlb
xchg
cld
jne
pop
popa
xor
pop
gs
clc
pop
in
push
inc
shlb
jae
subb
jg
aam
push
scas
scas
aad
jecxz
xor
sub
add
push
fcomps
sahf
mov
mov
pop
inc
lcall
push
mov
pop
imul
ljmp
xchg
adc
dec
mov
add
in
arpl
xchg
sbb
mov
repz
mov
hlt
inc
jmp
repnz
fmulp
lahf
std
mov
mov
xchg
pop
imul
out
jmp
add
in
lahf
push
pop
bound
call
divb
xchg
cld
push
leave
jb
je
sub
fldenv
pop
xchg
xchg
adc
js
hlt
xor
bound
push
data16
lret
jg
fldz
int3
jae
insl
xchg
lods
push
gs
push
pop
pop
insl
jno
push
mov
fsubrp
lcall
repnz
popf
push
enter
fisubs
xor
inc
jo
arpl
aam
ffree
loope
pop
xchg
mov
cli
out
insl
arpl
pop
add
cwtl
push
jno
scas
jg
adc
fisttpl
or
pop
lret
imul
pop
outsl
rolb
push
ftst
sbbb
add
inc
sti
jae
dec
mov
jg
insl
sbb
jb
jns
in
into
xchg
in
pop
inc
fiaddl
movsb
dec
jge
push
cwtl
iret
fidivs
ss
cmp
fidivs
outsb
or
test
pop
dec
rcrl
jge
cmc
rclb
fnstsw
jecxz
loopne
rclb
test
cli
bound
pop
fidivrl
pop
pop
out
adc
popf
pop
mov
push
push
out
pop
repz
cmp
imul
pop
pop
push
sub
mov
push
jmp
subb
sbb
lcall
cmp
jo
mov
dec
pop
mov
fisttpl
pop
xor
pop
mov
pop
push
cli
dec
sbbl
shlb
jg
cs
push
gs
jno
or
mov
fisttpl
jnp
mov
or
cmpsb
jb
push
jle
bound
jo
push
pop
ret
pop
insb
lds
inc
aad
pop
test
popa
sub
sbb
andb
push
out
test
repz
jp
add
pop
sahf
iret
adc
jecxz
mov
push
repnz
cltd
pop
lret
insl
jg
and
loopne
jecxz
fsubrp
xlat
loopne
cmp
fnsave
jbe
jnp
es
push
xchg
adc
lods
jecxz
arpl
dec
pop
adcb
adc
aam
jl
loopne
pop
fcomps
push
fcmovnu
in
movb
push
jb
xchg
pusha
sar
pop
mov
or
test
enter
fdivrp
push
pop
jns
inc
or
mov
and
cmc
push
out
jp
and
pop
scas
aad
push
icebp
mov
insl
test
pop
fldt
in
cld
lcall
push
cmp
sbb
push
push
arpl
inc
push
ja
aaa
pop
stos
bound
repnz
lahf
in
pop
dec
mov
js
popa
enter
jg
adcl
jbe
fidivrs
mov
sbb
les
fstps
loope
pop
fdivrp
in
fstpt
sahf
pop
cld
pop
gs
xlat
pop
fsubs
repnz
or
dec
js
fistps
in
jns
jp
jl
sub
in
mov
jns
mov
mov
or
fwait
insl
add
sbb
mov
neg
xor
inc
fstp
out
jbe
std
leave
outsl
jecxz
xor
out
inc
sti
sub
fldt
shlb
sbb
ja
in
cmp
sti
sahf
cs
xor
push
imul
adcb
adc
xlat
push
insl
fnsetpm(287
js
push
jl
loop
fs
aam
cmpsl
jmp
out
add
jecxz
addr16
pop
mov
loopne
pop
js
cmp
popf
mov
adc
pop
and
test
push
add
jg
pop
pop
outsb
mov
cwtl
xor
push
fildl
imul
out
pusha
cmpsl
push
jb
aam
loope
pop
bound
push
xor
push
xor
jmp
cwtl
xlat
loopne
bound
imull
jb
cmc
mov
mov
mov
adc
inc
mov
jno
and
cmp
sbb
mov
in
push
adc
aam
pop
cmp
jb
cmp
pushaw
mov
data16
std
ss
insl
push
addr16
scas
mov
jp
out
pusha
and
pop
imul
pushf
xchg
test
loopne
xchg
pushf
jo
lcall
leave
pop
mov
xlat
out
ret
rclb
xlat
incb
out
cmpsb
jmp
or
xchg
push
push
fdivrp
sbb
push
or
fwait
jno
xchg
pop
jns
push
mov
push
sbb
pop
hlt
or
mov
jl
inc
pop
rclb
dec
fstpt
in
insl
addb
in
andl
cltd
mov
pop
xor
test
cs
pop
push
pop
inc
inc
in
dec
sub
pop
aad
daa
out
push
popf
pop
adc
pop
sbb
insl
sbb
lea
pop
push
or
insb
dec
loope
loopne
push
fcom
test
sahf
dec
xlat
sti
xchg
out
xchg
adc
mov
jnp
sub
xor
loopne
enter
sbb
pop
jbe
gs
and
adc
in
and
testb
fisubrs
sbb
sbb
xchg
loop
les
push
insl
cmc
pop
mov
stos
jmp
jl
pop
iret
push
push
pop
fwait
push
jp
push
sub
sarb
pop
push
imul
sub
cmp
std
iret
sub
push
cmp
add
adc
push
sbb
pop
daa
out
pop
fcoml
cmc
adc
push
push
mov
lret
shll
fstp
pop
repz
xchg
iret
outsb
loopne
imul
mov
xlat
jo
push
cmp
shr
rol
imul
adc
out
adc
scas
stos
outsl
ficomps
cs
fidivrs
pop
sbb
insl
incb
mov
lret
clc
aad
fimuls
ret
iret
or
decb
or
test
pop
mov
mov
dec
and
int3
push
and
jnp
loopne
addr16
jno
fucomip
insb
in
icebp
repz
push
out
es
into
and
mov
shll
fwait
clc
aad
push
xor
xchg
dec
rolb
lea
nop
sbb
popa
and
jg
adc
fstps
popa
or
pop
fistpl
pop
cmpsb
nop
push
scas
in
fcoms
repz
push
aas
or
aaa
xor
xchg
add
loopne
jmp
arpl
mov
loope
xchg
fdiv
fnstcw
imulb
fildl
pop
mov
adc
fwait
iret
cmp
sahf
push
sbb
gs
fsubp
jecxz
dec
cld
pop
mov
add
aad
hlt
mov
jmp
xor
leave
inc
xor
xchg
out
clc
cmp
xlat
push
push
push
add
mov
loop
mov
lds
arpl
add
iret
lcall
fwait
jne
cld
ja
mov
and
arpl
pop
push
popa
cmpsl
arpl
clc
push
and
out
arpl
adc
flds
jno
pop
jnp
cmp
jg
stos
loopne
call
ficoms
fidivrs
mov
push
xchg
iret
or
pushf
ret
dec
sub
fcmovne
pop
cmpsl
in
push
lods
push
shlb
arpl
loopne
icebp
xlat
or
insb
nop
jnp
inc
jne
pop
fldcw
loopne
and
fdivr
iret
es
jno
pop
inc
rcrb
push
insb
fldcw
iret
cmc
ds
xchg
loopne
jae
push
fcoms
push
adc
push
rcll
dec
aad
sub
push
mov
or
icebp
xlat
dec
rcr
icebp
loope
and
adc
scas
loope
adc
xor
xor
adc
mov
loopne
sbb
xchg
enter
fcmovu
rclb
inc
xor
push
pop
aad
addl
iret
outsl
jae
pop
dec
pop
push
rolb
cmp
icebp
outsl
imul
push
push
dec
imul
push
dec
xchg
shll
aam
pop
lret
pop
aam
mov
in
rclb
mov
cmp
scas
sub
ret
cwtl
dec
mov
push
inc
inc
inc
pop
mov
push
jbe
adcb
push
push
gs
hlt
xchg
je
push
test
outsl
jo
inc
jp
xor
mov
pop
hlt
mov
pop
cmc
fcoms
lahf
lock
mov
cli
dec
mov
pop
push
inc
popf
jl
inc
in
sbb
mov
scas
sbb
mov
out
subb
jo
mov
jge
scas
jno
jo
dec
dec
and
mov
adc
mov
loopne
push
iret
jmp
cltd
orl
test
iret
test
jo
dec
jge
sbb
cwtl
push
mov
scas
test
sbb
aam
dec
mov
jb
outsl
fdivrs
fbld
push
dec
bnd
pop
or
push
dec
ficomps
jmp
cmp
adc
loopne
jge
outsb
iret
sbb
and
xlat
mov
adc
dec
mov
mov
orl
mov
sbb
and
loope
loopne
pop
dec
add
and
xchg
cmp
loopne
iret
lock
sarb
add
fmuls
mov
push
outsl
add
test
subb
xorl
gs
mov
dec
cmpsl
popa
jo
aam
dec
xchg
iret
sbbl
and
pop
pushl
add
xor
loope,pt
push
xorl
dec
aad
jo
xchg
dec
movsl
inc
lods
test
insb
mov
mov
sbbb
push
sub
dec
outsb
jo
ret
pop
pop
push
in
sbb
inc
jno
outsl
jnp
xchg
bnd
inc
pop
rclb
mov
insb
jo
sbb
insl
jbe
test
loopne
insl
and
xchg
push
outsl
inc
pop
loopne
in
xchg
push
or
pop
andb
dec
jo
insb
xchg
push
push
ss
inc
pop
out
sub
and
jo
and
outsl
das
xor
inc
int3
xor
dec
inc
pop
dec
pop
popa
sahf
dec
popf
sub
adc
mov
mov
fisubs
and
mov
cmp
push
pop
mov
cmp
push
xchg
jo
xor
insb
sbb
and
sub
test
add
or
andl
push
pop
xor
push
jecxz
sbb
shll
jo
jge
or
nop
insb
shl
mov
jg
mov
nop
test
and
and
enter
mov
pop
dec
add
fadds
out
adc
loope
imul
push
mov
mov
push
and
fsubs
cld
mov
and
jo
mov
push
mov
in
push
jb
mov
sub
mov
xor
mov
jo
xchg
movsl
sub
jo
movsl
or
pop
xor
mov
lock
cmp
fdiv
call
push
jo
jl
jns
cs
xchg
jo
xor
xor
inc
mov
sbb
subb
jno
cli
in
mov
and
or
fsubl
sbb
sti
inc
mov
inc
sub
mov
mov
addr16
cld
sbb
jns
es
or
push
cmpl
jle
dec
loop
jg
pusha
xchg
nop
negl
pop
xchg
icebp
xchg
jb
mov
mov
test
push
cmp
sbb
aaa
lret
pop
mov
mov
xchg
xchg
mov
xorl
jl
jb
test
mov
mov
divb
xchg
pop
cmpsl
xchg
lahf
and
jmp
push
jl
mov
insb
int3
sbb
cmpb
push
movsb
fstl
stos
popf
imul
insb
sub
mov
in
cwtl
mov
cwtl
mov
jno
push
push
mov
xlat
pushf
xor
fsubr
inc
fsubl
jmp
mov
sbb
sub
push
lea
cld
cli
cwtl
aam
xor
xchg
cwtl
cmp
add
cltd
sbb
lods
cwtl
dec
fiadds
jns
and
divb
mov
loopne
mov
and
adc
xor
inc
loop
aaa
sbb
cld
ljmp
pop
nop
and
and
mov
xchg
sbb
stos
or
pop
pop
rorl
mov
inc
pop
pop
addr16
mov
xchg
cmpl
mov
mov
gs
insb
mov
lods
lods
scas
scas
pop
data16
add
adc
aad
stos
mov
add
aam
jo
js
stos
mov
adc
xchg
aad
mov
sahf
pop
ficompl
pop
xchg
loop
dec
hlt
sbb
aad
jae
hlt
into
bound
pop
cwtl
jno
push
insb
ja
xchg
pop
xchg
mov
xchg
fistps
xchg
xchg
lods
adc
nop
add
cmp
jns
mov
jo
rclb
test
mov
decl
lea
insl
xchg
je
out
pop
leave
jmp
rorb
jns
xchg
jl
jge
aaa
pop
jg
mov
pop
jno
push
jb
je
jbe
pop
mov
loope
outsb
bound
rolb
stos
out
push
cmp
loopne
imul
pop
pop
pop
pop
jo
bound
fs
xchg
sbb
pop
pop
pop
int3
testb
arpl
push
mull
push
icebp
push
dec
push
out
js
das
stc
mov
movhps
pop
and
pop
pop
jnp
mov
inc
dec
outsl
mov
test
dec
mov
dec
mov
cs
lods
pop
js
insl
inc
aaa
iret
push
pop
cmp
mov
out
fidivl
xor
ljmp
adc
out
xor
int3
pop
lahf
inc
mov
dec
ljmp
cld
mov
pop
mov
pop
xor
xor
nop
ja
loop
test
in
adc
gs
xchg
sub
mov
push
imul
loopne
sbb
fs
adc
jl
in
and
xor
hlt
xchg
mov
jmp
or
lcall
jb
jl
sub
lcall
jne
adc
pop
bound
popa
pushf
pop
insb
mov
ja
je
das
xor
lods
mov
lods
jae
icebp
les
mov
repnz
xor
lods
orb
jmp
pop
fsubr
mov
loopne
inc
push
xor
inc
inc
aaa
imul
adc
xor
inc
jno
jmp
push
pop
inc
ljmp
and
mov
testb
in
mov
jno
mov
ret
or
lods
hlt
idivb
rcrb
mov
push
ficoms
outsb
sbb
adc
pop
mov
mov
jns
mov
push
decb
in
add
inc
in
fs
adc
sub
pop
xor
les
pop
mov
add
ficoml
dec
in
fs
fimuls
shl
cmpsl
enter
jo
pop
movsb
popf
lret
lahf
jp
lods
bound
mov
push
decb
cltd
dec
sbb
xor
lods
lret
jle
push
imul
insb
ja
jns
mov
outsb
mov
push
adc
movsb
dec
mov
pop
fisubs
loopne
push
ds
jno
repz
push
outsb
outsl
sbbb
push
pushf
pop
insb
xor
mov
adc
addr16
cmpsb
xchg
data16
and
pop
push
pop
arpl
adc
mov
mov
jecxz
xchg
jo
push
pushf
cmp
pop
xchg
xor
push
push
xchg
and
into
xchg
mulps
loopne
cmp
dec
iret
push
das
lret
push
adc
mov
pop
repz
inc
push
dec
xchg
jns
push
mov
sub
popa
mov
jne
call
sub
jle
push
inc
movsb
xor
pop
push
pop
adc
cmp
xor
enter
mov
cli
jo
push
daa
add
xchg
cmp
add
aam
push
sbb
add
add
dec
jecxz
pop
les
mov
stc
sub
iret
mov
push
es
negb
push
and
sahf
cmc
inc
popl
sbb
shl
lcall
jns
int
adc
mov
test
enter
mov
daa
ljmp
pop
movsl
outsl
addb
rcll
mov
lock
ss
and
jg
loopne
shll
jl
adc
rorl
cltd
daa
pop
lret
lcall
cwtl
fmul
mov
gs
sbb
popa
mov
jo
jne
int3
insl
and
cld
sbb
lcall
xor
dec
jne
and
shll
popa
iret
xor
mov
mov
cli
pop
adc
xor
adc
push
push
and
popa
fwait
and
xor
add
mov
push
sub
mov
jae
and
mov
pushf
cmp
lock
xchg
or
js
nop
mov
push
mov
sub
outsb
and
mov
mov
popa
aam
sub
or
xor
pop
lahf
push
in
dec
movsb
ja
inc
mov
test
jne
js
dec
push
xor
sub
shlb
outsb
lock
mov
rcl
push
lods
pop
pop
ja
mov
test
mov
fs
sbb
fcomps
push
lahf
sub
sub
add
mov
jle
bound
enter
lahf
aam
push
or
hlt
or
sbb
popa
aam
mov
dec
and
fmull
mov
fwait
daa
mov
fists
xchg
and
stc
jns
jb
sub
and
pop
push
mov
clc
xchg
jg
aam
out
dec
mov
xor
xor
or
push
mov
and
or
lods
cltd
dec
mov
rcrb
test
push
je
or
xlat
xor
aad
cmp
add
mov
mov
mov
add
out
bound
je
jb
xor
sbb
out
mov
clc
popa
add
mov
push
shrl
std
jns
pushf
movsb
jb
jge
push
push
test
adc
pop
in
in
push
and
add
lock
jge
fcmovnb
pusha
sub
push
push
je
or
bound
addr16
stc
inc
inc
mov
mov
sub
outsl
adc
add
push
adcb
mov
jge
dec
stos
or
mov
push
jecxz
mov
mov
jecxz
push
push
sbb
jno
fldcw
push
mov
rolb
popa
les
sub
loop
mov
push
cld
and
adc
adc
hlt
gs
xchg
shlb
and
xor
pop
out
test
cwtl
cmc
call
jecxz
mov
xor
lahf
test
or
stos
or
das
je
fwait
lods
jno
enter
mov
sbb
and
insb
jecxz
push
xor
and
sub
mov
test
std
mov
mov
aaa
into
int3
xchg
leave
gs
push
arpl
xchg
cltd
js
mov
pop
aas
loopne
in
movsb
mov
dec
xor
movsb
daa
adc
test
xor
ficoms
rcll
xor
mov
jg
sub
sub
in
sbb
push
mov
or
and
in
mov
sub
mov
addr16
je
test
in
and
mov
in
daa
icebp
mov
rcl
add
call
shlb
cld
pushf
sub
xlat
xor
daa
and
push
adc
pop
pusha
je
les
push
sbb
sbb
mov
mov
inc
adcb
clc
cs
pop
sub
mov
xchg
mov
aad
or
push
repz
sbb
xor
adc
sbb
sbb
lea
daa
scas
popa
in
jo
or
or
subb
lods
or
jge
addr16
fdivr
cmp
mov
push
fldt
repz
fidivl
cwtl
cmp
movsl
xor
cli
in
xlat
test
push
shll
adc
mov
jecxz
pop
fistps
pop
push
cwtl
cmp
mov
sbb
push
insb
daa
xor
cmp
out
pop
mov
rcr
sub
inc
push
std
and
andl
popa
mov
adc
test
in
push
loop
cld
rorb
pop
js
mov
xor
push
test
loop
shl
roll
xchg
and
inc
clc
je
push
in
mov
repz
jne
repnz
shlb
and
jl
in
pop
outsl
xor
or
jecxz
push
je
and
mov
cltd
push
popf
enter
sub
adc
or
pop
clc
inc
cmc
clc
push
loope
sub
shrb
and
out
pop
insl
andl
int3
fistl
fadds
mov
daa
pop
hlt
inc
push
daa
pop
jne
cltd
je
sbb
jo
les
push
aam
push
mov
in
push
lds
xor
loopne
fisttpll
mov
pop
sbb
cmp
ficoms
push
xchg
adc
and
cmpsb
call
sbb
xor
popf
shll
pusha
loop
fs
pop
fwait
pop
mov
imul
stc
lret
arpl
sahf
fs
cld
jg
insb
adc
rcrb
stc
adc
daa
push
shl
sub
es
jo
or
lock
pop
test
ja
in
scas
insl
adcb
push
andb
adc
sbb
inc
push
repnz
nop
dec
les
dec
push
xchg
sub
or
adc
orl
jl
push
aad
or
cmpb
pop
mov
push
test
sub
or
xor
xchg
mov
mov
sbb
aam
and
pushf
xor
xor
xchg
movsb
sarl
pop
movsb
fcomps
push
shrl
ss
cltd
cwtl
inc
repz
push
fcoml
inc
push
mov
and
mov
xor
loop
mov
pop
fiadds
push
movb
adc
hlt
je
mov
ret
sbb
push
sbb
pop
inc
push
cld
in
mov
aaa
test
icebp
fcoms
movsb
in
inc
arpl
jge
test
inc
sub
shll
mov
xor
popa
mov
or
inc
jo,pt
sbbb
in
add
adcb
cmp
jns
push
int3
mov
and
adc
add
loop
jl
push
shlb
xchg
jl
add
jbe
in
jl
fwait
stc
cmp
or
push
call
adc
mov
and
mov
jne
pop
shlb
sbb
sub
ficoms
jns
cltd
fmuls
mov
hlt
jne
ficoml
inc
dec
mov
popa
stos
sub
cwtl
jne
nop
ret
rcrb
aad
adc
loopne
sbb
test
mov
mov
xor
icebp
les
push
xor
fisubl
xchg
loopne
iret
jbe
push
dec
std
flds
lock
jle
pop
add
fs
sbb
je
es
and
and
pop
jnp
in
add
sbb
in
or
adc
xchg
add
movsl
stc
dec
rcll
and
push
jns
movsb
cld
in
sbb
and
push
xchg
xchg
hlt
js
add
fstpt
mov
xchg
fcompl
push
sub
loope
aaa
mov
jbe
pop
xchg
adc
fcmovu
sub
insb
xor
flds
dec
bound
cs
cltd
pop
test
sub
cld
jbe
jl
jne
fcoml
mov
or
hlt
pusha
mov
pop
mov
hlt
sbb
jecxz
push
enter
jne
jge
nop
dec
and
and
sbb
add
jae
mov
repnz
in
adc
inc
adc
cwtl
fisubrl
xor
mov
negl
push
push
int3
loop
push
xor
sub
loop
xchg
mov
cwtl
in
jp
sub
jmp
and
sbb
xor
test
push
shlb
shlb
pop
or
fdivrl
rol
or
adc
out
test
sbb
and
nop
mull
xchg
shlb
dec
enter
cwtl
add
xor
sub
movsb
imul
jg,pn
push
push
push
pop
cwtl
in
clc
addr16
data16
add
adc
mov
fwait
mov
push
fsubl
pushf
cmp
cwtl
sbb
fisubl
sbb
lea
les
mov
shll
enter
out
xchg
bound
push
xor
mov
sbb
in
pop
add
fs
pusha
jl
loopne
mov
int3
mov
in
rcll
adc
and
or
clc
jbe
leave
or
call
mov
clc
mov
loop
lock
pop
shll
mov
mov
mov
jecxz
test
inc
pop
je
dec
loop
cltd
fcomi
imul
fdiv
hlt
sahf
mov
scas
push
test
pop
adc
out
pop
add
cmpl
and
xchg
add
add
dec
loop
sarl
repnz
pop
inc
xchg
nop
xchg
jne
mov
pop
daa
pop
cli
xchg
dec
arpl
enter
jae
push
push
fst
dec
loopne
xor
stos
xor
cmp
or
rcr
push
hlt
cmp
pop
xor
flds
mov
xchg
push
or
bound
lods
fsubr
icebp
outsb
jb
xchg
testl
xchg
pop
xlat
icebp
push
sbb
icebp
ljmp
xor
push
xchg
jb
xchg
dec
mov
xchg
jge
fldcw
jae
test
lods
xor
lret
jmp
enter
rcrb
push
and
mov
mov
dec
js
stos
insl
and
cmp
jbe
mov
in
fwait
jnp
mov
xor
pusha
pop
push
push
add
es
insl
cmp
shll
lods
out
push
ficomps
jnp
xor
mov
mov
pop
mov
imul
in
clc
cmp
cltd
push
push
adc
or
cmc
into
fdivrl
ja
movsb
xlat
jno
add
sub
int3
test
push
mov
push
mov
dec
cmp
test
imul
enter
xor
sbb
or
jns
mov
in
jb
clc
inc
orb
mov
in
insb
mov
sahf
push
pop
hlt
push
mov
dec
sub
imul
and
hlt
xchg
or
imul
push
hlt
mov
add
out
pushf
sub
out
shl
jg
enter
shll
aam
adc
mov
push
sub
es
clc
sub
sub
or
mov
lods
cld
add
cmp
cld
mov
push
mov
sbb
mov
lcall
push
ret
bound
movsb
jp
je
scas
cwtl
jecxz
std
pop
mov
lahf
enter
cmp
xlat
push
xor
cmp
fwait
insb
jne
mov
pop
inc
ljmp
gs
cmc
adc
aad
cmp
cmc
jae
push
test
pop
mov
enter
xor
test
jg,pn
cs
f2xm1
mov
and
inc
jo
out
or
sub
test
ljmp
js
test
lock
pop
into
rclb
push
in
ljmp
mov
xor
xor
popa
jle
out
int3
jno
inc
add
mov
sbbb
jae
leave
fst
and
fidivrl
nop
adc
js
sbb
mov
rcr
nop
int3
sub
sti
int3
xchg
mov
cli
sbb
push
xor
xor
addb
cltd
cmp
push
enter
js
add
sarl
sbb
adc
add
push
jne
rcrl
and
push
mov
cwtl
rclb
jge
push
ja
fs
dec
cltd
cs
fidivrl
sbb
adc
je
push
js
dec
fwait
or
mov
push
es
sub
mov
inc
ljmp
mov
sbb
push
push
pop
and
mov
mov
sbb
mov
push
or
push
xor
loop
add
pop
out
push
fs
mov
or
push
int3
jnp
stos
sub
and
test
nop
sbb
dec
hlt
mov
push
xor
and
sbb
and
push
mov
xchg
lcall
or
in
aaa
loope
push
push
loopne
add
and
adc
fucomi
pop
cmp
dec
sub
loop
cli
adc
fnstcw
int3
pop
mov
scas
sub
fcoml
loop
mov
inc
pop
xor
mov
jecxz
popa
cmp
hlt
fwait
dec
popa
xor
hlt
or
ja
push
cwtl
sti
cmp
les
jmp
mov
test
cmp
mov
das
pushf
cwtl
mov
xchg
jne
jnp
jae
push
xor
clc
movsb
stc
lock
mov
pop
xchg
cwtl
rcrl
je
lret
inc
int3
jne
lret
lret
nop
ja
lret
pop
mov
enter
mov
push
adc
out
cld
dec
cmpsl
call
clc
push
ljmp
shl
sub
sbb
repnz
push
adc
cmpsb
xor
add
cwtl
xor
mov
xor
cmp
sub
mov
xor
es
and
push
mov
popa
xchg
adc
lahf
out
cmp
and
stc
add
loop
dec
fwait
lock
cmc
sbb
arpl
sub
fwait
push
mov
pop
fimuls
jns
and
in
stc
dec
sbb
in
clc
mov
xchg
mov
in
inc
or
cld
mov
adc
xor
ret
cs
mov
insb
scas
push
mov
out
nop
xor
mov
and
lods
cmp
addr16
les
pop
and
movsl
mov
pop
popa
ss
mov
addr16
fdivrl
enter
sub
dec
push
test
cmp
inc
pop
mov
sub
bound
shr
in
jo
fistps
and
and
test
push
push
jo
add
add
adc
clc
addr16
dec
shll
fnsave
push
pop
lea
ja
push
nop
aam
mov
jle
fs
cmp
adc
mov
mov
cwtl
sub
lds
xchg
adc
push
out
aam
pop
sub
fwait
xor
mov
jno
add
in
xchg
pop
outsb
pop
xchg
cmp
inc
xor
push
push
pop
dec
iret
fdivl
push
and
jno
aad
pop
mov
outsl
pop
xlat
dec
dec
xchg
cmp
fisubrl
jno
jp
push
mov
pop
aam
dec
jae
and
dec
pop
or
jb
orb
add
pop
mov
fisttps
outsl
dec
stos
jo
cwtl
mov
and
inc
adc
lahf
fs
inc
xor
inc
shlb
pop
mov
xor
mov
cmp
adc
dec
jo
iret
rorb
mov
xlat
dec
outsb
add
and
xor
mov
inc
cmp
lock
dec
xchg
inc
jns
pop
fadds
xchg
mov
outsl
adc
pop
jno
sbb
into
xchg
inc
es
mov
jo
xor
arpl
jno
pop
xchg
cmpsl
jge
pop
test
or
arpl
mov
pop
aad
sub
pop
dec
pop
mov
es
push
adc
or
int3
push
inc
jne
push
mov
mov
pop
and
pop
ja
jle
adc
and
popa
rol
movsl
das
hlt
jp
mov
pop
dec
rcr
addb
popa
fwait
aad
xor
in
clc
sbb
jecxz
adc
xchg
push
and
and
mov
and
sub
scas
fcoms
inc
cmp
js
sub
adc
or
sbb
stos
in
add
bound
add
adc
sub
push
pop
sbb
movsb
and
adc
stc
in
jnp
loopne
sarl
rol
or
pop
clc
jmp
shl
ja
push
lcall
loop
pop
cmpsb
add
xor
or
push
and
imul
out
fsubs
loopne
lcall
call
jecxz
add
lret
mov
cmp
arpl
and
out
loopne
adc
enter
fdivl
lods
scas
aad
repz
lods
out
lods
loop
movsb
adc
and
and
pop
and
xorb
xchg
mov
aam
jg
sub
test
push
jmp
sbb
in
push
mov
call
jle
in
sub
scas
sbb
aas
es
push
in
scas
xchg
pop
mov
xor
stos
and
jo
xchg
mov
in
add
xchg
rcrl
add
loopne
sbb
pop
sub
js
push
dec
xchg
sbbb
je
cltd
cmp
call
pop
fldenv
subl
xor
test
nop
xchg
cld
jecxz
dec
les
in
test
mov
and
lret
mov
pop
jne
data16
int3
mov
push
bound
xchg
mov
dec
clc
clc
rol
popf
sbb
mov
movsl
xor
push
adc
mov
nop
hlt
and
mov
in
and
mov
aam
inc
push
lcall
lock
xchg
test
scas
dec
xchg
fcmovbe
je
pushf
cmp
and
cwtl
sub
xor
push
jne
test
sub
dec
in
aad
add
clc
loopne
and
inc
and
sub
movsl
shlb
xor
adc
xor
mov
push
cs
push
jo
repnz
loop
stc
pop
popf
pop
jl
nop
ljmp
mov
shrb
jle
loopne
clc
popa
in
add
push
add
fstpt
jne
sbb
enter
mov
mov
cmp
shll
mov
daa
bound
clc
mov
xor
or
pop
testb
js
pop
and
adc
insb
sub
nop
pop
sub
pop
jl
and
push
xchg
sub
loopne
mov
sbb
push
test
lods
push
xchg
xchg
and
jge
call
xchg
xor
cld
enter
adc
add
cmp
fiaddl
mov
insb
mov
test
inc
xor
arpl
enter
mov
nop
stos
jl
ss
test
pop
mov
push
xor
jb
lahf
add
sbb
stc
sbb
call
and
sub
jge
xor
mov
fcom
ljmp
stc
loopne
enter
sbb
scas
adc
movsb
fwait
rolb
out
lret
or
jl
jl
sub
je
js
cmp
call
mov
mov
jne
es
cwtl
fisttpl
leave
aam
cli
cmpsb
inc
mov
jo
dec
arpl
mov
fsubr
push
fsubs
or
sbb
push
xchg
jmp
dec
inc
xchg
mov
cld
rolb
cs
add
sbb
in
sbb
push
add
sub
fs
sbb
divb
out
sbb
sbb
push
push
orb
subb
loopne
lods
sub
pushf
sub
sub
xor
rcl
cltd
stc
int3
xchg
rcrl
fcoms
out
and
and
xor
mov
jb
mov
pop
mov
aam
adc
setbe
sbb
sub
sub
push
in
hlt
loop
dec
adc
sbb
mov
jg
mov
fnstcw
cwtl
sub
xchg
imul
popf
inc
cmp
mulb
pop
xchg
popa
push
shll
in
test
daa
adc
jl
imul
adc
arpl
ja
lea
fdivrp
inc
scas
int3
inc
jno
fwait
adc
cmp
lods
add
xchg
mov
sarb
loop
push
or
loop
lock
push
or
in
mov
pop
xor
and
dec
xorl
adc
xor
ficoml
add
je
fsubr
in
mov
mov
clc
jge
fimuls
loop
lahf
pop
out
adc
mov
and
xor
cltd
cmp
imulb
push
pop
in
xchg
mov
pop
mov
sub
test
imul
lods
xchg
add
jno
xchg
rcrb
cmc
dec
cmp
pop
push
sub
in
dec
loopne
push
imul
or
enter
ficomps
xchg
test
dec
mov
fwait
in
adc
test
test
daa
movsb
aam
in
fstl
xor
fidivrl
push
pushf
cmp
mov
mov
sub
push
add
mov
jo
divb
jl
add
cmpb
jbe
push
mov
push
inc
push
out
xor
push
fsub
cmp
adc
and
in
fnstenv
add
loope
and
or
push
jbe
subb
cld
adc
sub
cltd
lock
movsb
xor
pop
cmp
jmp
adcb
scas
popf
insb
shrb
dec
add
cwtl
xor
xor
shll
lock
pop
das
push
hlt
sbb
loop
scas
mov
test
je
xorl
adc
cmp
adc
sbb
lret
jne
fnop
pop
andb
pop
je
or
aam
rolb
shlb
sarb
cmc
cmpsb
pushf
push
fldenv
test
fsubrl
sub
sbb
lcall
pop
loop
in
popf
nop
test
scas
fdivl
daa
or
loop
shll
and
xor
pushf
enter
mov
loop
xchg
cltd
call
push
push
daa
add
test
and
fs
sahf
daa
je
rorl
iret
mov
add
add
inc
pop
ja
js
xchg
lods
lahf
insb
push
pop
lods
mov
cs
sahf
pop
adc
xor
xor
sbb
jo
jl
push
test
pop
sbb
push
adc
insb
ret
cmpsb
inc
inc
xchg
sbb
xor
in
mov
test
clc
in
cmpsb
shll
jne,pt
mov
jl
mov
fmul
sti
lock
fs
pop
in
cltd
aam
cmpsb
sub
cmp
pop
push
cmpsl
xchg
rcl
les
aam
dec
inc
pushf
enter
cmpl
inc
std
jbe
ja
xor
js
sbb
stos
mov
loop
xor
push
les
call
xchg
cmp
push
mov
shlb
or
xchg
call
dec
adc
mov
fdivrs
pop
pushf
pop
mov
push
scas
daa
and
cmp
cltd
fwait
mov
decb
mov
pop
mov
xor
cmp
push
pop
test
push
jne
arpl
scas
insb
pop
jp
aam
and
dec
lgs
mov
jl
add
outsb
push
jg
sbb
pop
push
pop
mov
push
lcall
push
je
push
xchg
inc
or
in
ja
nop
push
mov
mov
pusha
sub
push
lock
cld
int3
addr16
jno
pusha
out
inc
test
pop
enter
and
cwtl
sahf
inc
clc
test
mov
and
xorl
push
adc
fwait
aam
cmc
add
adc
push
and
push
add
stos
push
push
sub
shl
mov
stos
and
cld
insb
andb
adc
fildl
and
and
fiadds
arpl
cltd
loopne
adc
sbb
cmpsb
xchg
pop
sub
add
call
cltd
push
sub
mov
xor
int3
lcall
xlat
pop
mov
inc
sub
pop
fsubl
push
arpl
ror
add
cmp
mov
or
and
sbb
cmp
js
ret
pop
mov
mov
mov
je
lret
shrb
loopne
add
jl
cwtl
nop
loope
xor
stos
cmp
leave
mov
xchg
sbb
dec
jl
or
inc
popa
popf
loope
les
ret
sub
xchg
pop
xchg
push
jnp
cmpsb
enter
lock
jne
cwtl
push
outsb
out
in
lods
or
jmp
xchg
or
inc
cmpsl
je
mov
push
pushf
inc
icebp
and
test
out
sbb
popl
and
rorl
sbb
addr16
pop
stc
adc
js
subb
pop
xchg
mov
fcoml
xor
xlat
dec
adc
inc
aam
loop
mov
pusha
sti
je
jp
je
outsl
cltd
adc
bound
fs
inc
mov
pop
fdivl
inc
mov
daa
sbb
jp
sbb
sub
sbb
lods
cmp
mov
mov
inc
mov
add
shlb
and
mov
cmc
jns
mov
cld
inc
test
xchg
shll
lock
rcr
and
push
adc
cltd
pop
push
xor
sbb
sbb
aam
xor
loopne
sbb
xchg
inc
gs
pushf
call
int3
cmc
sub
icebp
pushf
add
inc
bound
mov
cwtl
mov
movsb
test
enter
pop
pop
loope
cli
aam
test
sbb
xor
das
or
je
mov
arpl
sbb
jge
das
and
imul
push
sbb
mov
adc
aam
sbb
rcrb
push
xchg
push
inc
out
aas
outsl
adc
push
push
aas
negl
push
push
enter
sbb
mov
push
insl
lds
popa
sbbl
push
jl
push
push
or
ja
xor
push
lock
add
adc
movsb
hlt
popa
fwait
es
jno
jns
jge
push
sbb
clc
aam
adc
stos
sbb
jo
gs
jle
push
adc
cmpl
outsb
pusha
fwait
pop
cmp
popa
cld
adc
je
jo
fwait
jnp
jge
test
push
pop
push
dec
xchg
pop
jg
fcoml
sbb
sti
lcall
sbb
adc
pop
setne
mov
pop
arpl
push
sbb
push
push
push
call
imul
js
je
ja
pop
xor
int3
ret
pop
fs
xlat
fwait
mov
sahf
pop
push
mov
bound
xorb
lea
outsl
xchg
mov
inc
loope
nop
xchg
sbb
test
bound
popa
je
fsts
push
lods
ror
push
pop
out
ret
out
push
movsl
push
hlt
cs
sbb
jbe
cmp
xchg
dec
jle
shrl
test
pop
or
sub
push
or
xchg
popf
ljmp
insl
movsl
loopne
pushf
sti
adc
pop
mov
cmp
sbb
pop
xor
dec
inc
out
movsl
push
sub
popa
or
xor
adc
jmp
sti
jo
sahf
mov
push
pop
arpl
cli
push
stos
jno
lock
push
popa
mov
hlt
inc
dec
push
push
movsb
sub
dec
and
mov
mov
cli
insl
inc
cmc
test
insl
jo
lret
call
call
sbbl
mov
mov
shl
pusha
adcb
add
xchg
jae
je
mov
ret
xor
push
pusha
xor
ret
test
add
jbe
jecxz
mov
adc
les
mov
inc
add
adc
lds
pusha
xchg
ja
hlt
aad
in
pusha
and
inc
cmc
add
inc
cmpsb
mov
out
push
pusha
push
es
inc
xchg
xlat
out
pop
pop
daa
cmp
decb
and
mov
roll
shlb
jb
push
and
xchg
fs
and
mov
xor
loop
ret
dec
test
push
hlt
loope
push
jbe
adc
xchg
aad
addr16
xlat
movsl
xchg
mov
cmc
shl
rcl
ja
shll
sub
push
les
fiaddl
lcall
out
roll
cmp
fs
mov
xor
cs
dec
dec
pop
ret
movb
fwait
pusha
hlt
inc
or
imul
in
add
es
pusha
ja
daa
lret
xchg
xlat
inc
ljmp
nop
das
dec
stos
scas
pusha
rcrl
mov
stos
mov
pusha
outsl
dec
orl
aad
push
add
cmp
shr
mov
xor
pusha
push
pop
mov
pusha
jbe
std
imull
xchg
inc
push
push
scas
xchg
repnz
inc
into
imulb
ds
dec
xchg
dec
sbb
test
ret
push
andb
das
fcom
sbb
dec
push
pusha
cmp
mov
roll
and
ret
in
xor
push
loopne
lods
inc
mov
or
iret
sbb
xor
cmp
xor
pusha
test
xchg
sub
movsl
lret
pusha
iret
lea
mov
inc
mov
mov
mov
jns
inc
out
mov
dec
dec
cltd
mov
scas
add
sbb
sub
gs
stos
ljmp
fidivrl
lahf
mov
stc
mov
rolb
jmp
sbb
sbb
mov
xchg
pusha
cs
dec
insl
das
cltd
pusha
pop
mov
dec
push
pop
sbb
fbld
test
aam
insb
xchg
mov
stos
adc
popf
lds
fisubs
or
inc
out
inc
ret
iret
xor
daa
gs
pusha
lret
sti
mov
mov
pusha
or
push
mov
pusha
jecxz
xchg
cmp
cmovno
inc
mov
mov
pushf
or
lock
xor
or
pop
xchg
adc
repnz
sub
xchg
fbld
imul
dec
cmpsl
xchg
stc
inc
xchg
or
push
pusha
pop
frstor
inc
lret
sub
inc
or
or
push
fcoml
xchg
int3
add
ss
pusha
fldcw
test
aas
xchg
mov
sahf
rcrb
push
mov
push
pusha
push
mov
pusha
hlt
mov
cmp
pop
mov
jne
mov
add
mov
sahf
insl
mov
adc
aas
mulb
sub
cli
pop
xchg
or
cmpsb
add
popa
mov
pusha
mov
xchg
or
popa
repz
mov
inc
cs
sbb
mov
lret
mov
sub
lahf
or
jne
fmul
stos
loopne
cmp
aas
pusha
and
mulb
cmp
stos
add
lea
inc
cmp
je
ret
insb
ja
or
add
jecxz
popa
out
sahf
pop
xchg
xor
outsb
pusha
es
xor
jmp
lods
pusha
pop
lods
rclb
in
xchg
or
popa
dec
and
in
ds
into
fnstsw
std
inc
pop
or
in
push
inc
cs
sahf
aad
mov
scas
test
jnp
xchg
inc
pusha
test
out
mov
jne
fisttpl
inc
cmp
push
mov
push
sar
or
mov
bnd
push
out
cmc
cli
enter
fimuls
push
xchg
jl
pusha
dec
das
inc
outsl
jg
into
xor
aad
fbld
lods
jae
lds
lcall
add
jmp
nop
xchg
popa
cmpsb
dec
imul
mov
pusha
and
cmp
jle
mov
xchg
inc
xchg
out
dec
in
xor
popf
pop
lea
sti
pop
pushl
jnp
pop
mov
lcall
arpl
out
repnz
outsb
jmp
sub
pusha
stc
fists
scas
sarl
aaa
scas
pop
lret
stos
cld
pusha
dec
shr
mov
push
repnz
xor
sub
pusha
int
pop
insb
xchg
mov
scas
pusha
jb
fdivl
jg
or
pop
daa
ds
and
ljmp
dec
or
and
add
push
es
out
loop
push
cmp
imul
mov
pusha
sub
pop
push
fsubrl
adc
fidivrl
sub
or
xchg
cli
dec
push
add
std
lret
sub
call
mov
out
loopne
outsb
out
and
or
fcoms
mov
pusha
adc
cmpsb
and
mov
mov
rorb
add
cltd
xlat
sub
out
mov
loopne
outsl
movsb
paddw
int3
jnp
mov
mov
adc
push
dec
ret
pop
push
popa
ds
iret
out
or
int
adc
cmpsb
aas
xor
sub
mov
test
out
outsb
js
pop
cmc
or
stos
sti
daa
fiaddl
cmp
push
es
scas
icebp
stos
mov
sub
sarb
sti
movl
sahf
popa
xchg
imul
sub
mov
outsb
nop
mov
pop
mov
mov
fwait
pop
mov
jne
mov
sbb
popa
jle
sub
lods
pusha
xchg
push
or
inc
lcall
mov
cld
into
xchg
scas
call
mov
mov
cmp
out
popa
adc
incl
pop
nop
xchg
pusha
scas
mov
aas
leave
pusha
pop
xor
or
lahf
cmp
pusha
mov
lret
pushf
add
and
int
pusha
inc
mov
fstl
and
out
lock
adc
icebp
rolb
xchg
dec
cld
lret
mov
mov
cmpsb
lahf
sub
rclb
push
int
es
dec
arpl
pop
icebp
clc
jns
mov
cmpsl
mov
pusha
mov
xchg
push
xor
pusha
in
les
adc
insl
xchg
cmp
fadd
pop
icebp
pusha
ret
test
repz
adc
and
mov
cld
ljmp
es
or
jb
pusha
sbb
dec
sti
xor
aaa
pop
mov
lods
test
add
pop
inc
lods
sarb
pusha
cld
fdivr
negl
inc
mov
out
pop
lods
inc
fwait
xor
xchg
xchg
outsb
push
adc
ret
sbb
jle
hlt
jecxz
fstl
and
dec
pusha
inc
sub
ret
cmp
xchg
sahf
jnp
lret
mov
ret
cmove
cmp
push
xchg
add
mov
pop
pop
cltd
pop
jl
mov
add
ret
jo
push
pop
scas
je
inc
xor
addb
mov
mov
mov
cli
arpl
les
pop
pop
pop
or
loopne
cmp
vpunpcklbw
cltd
dec
daa
clc
ss
hlt
out
cmpb
dec
lahf
ljmp
fimuls
pop
mov
les
mov
push
sbb
cmc
inc
int
mov
insl
inc
insb
ret
pop
dec
cmpsl
mov
rorb
cld
xchg
insl
in
aaa
fisubs
inc
iret
filds
dec
push
rcl
scas
xor
nop
loop
pop
xchg
incl
inc
clc
xor
xor
mov
nop
cmp
movsb
xchg
movsl
dec
or
arpl
or
inc
cli
insl
pusha
jmp
jg
enter
in
dec
ja
dec
and
mov
mov
out
pop
dec
mov
lods
and
mov
or
pusha
and
aad
mov
sub
xor
je
popa
inc
addr16
xchg
bound
pop
pusha
jo
or
iret
and
inc
dec
adcb
sub
icebp
mov
mov
mov
or
inc
in
loop
jp
inc
mov
lea
ud2
ret
inc
mov
pop
ds
lods
mov
xlat
cmpl
mov
cld
adc
popa
insb
push
imul
sbb
loopne
xchg
outsb
cwtl
jo
push
push
inc
cmpsb
pop
mov
xchg
xor
ja
bound
pop
icebp
les
inc
sub
test
bound
jmp
push
stos
mov
fadds
movsb
dec
imul
popa
out
xor
pop
insb
or
icebp
int3
mov
push
cwtl
insb
mov
fildl
arpl
cmpsb
popa
sti
lea
mov
push
lods
pop
int3
test
in
dec
cmp
jle
mov
and
mov
into
rcll
mov
inc
inc
mov
cmpb
xchg
std
mov
test
mov
push
pushf
mov
les
mov
inc
mov
push
int
or
pushf
repnz
push
insb
jmp
mov
cltd
xchg
fwait
lods
mov
ret
shlb
push
mov
mov
adc
mov
andl
mov
out
insl
in
push
pop
leave
rorb
mov
mov
bound
cltd
mov
or
pop
ret
xchg
test
leave
int
bound
mov
mov
les
jns
fs
imul
add
les
popf
pushf
pop
rcll
imul
pop
arpl
lret
bound
cmpsb
cwtl
addr16
push
mov
sbb
pop
andb
xor
cld
pop
imul
lods
sbb
xchg
xchg
or
xlat
sahf
inc
mov
jae
lahf
lock
sbb
dec
pop
xchg
sub
mov
dec
pop
je
mov
mov
je
orl
jno
popa
fidivs
fs
andl
or
enter
in
dec
push
or
repz
push
pop
aam
dec
add
mov
les
mov
mov
ret
pop
jg
loop
lea
js
lcall
push
mov
push
rorb
ret
jle
fwait
aaa
add
sub
repz
and
sbb
out
push
mov
subb
inc
or
mov
push
bound
rclb
mov
ret
pop
sahf
movsb
mov
mov
mov
mov
mov
shll
insb
sarb
imul
and
mov
jg
cmp
inc
jge
mov
ret
sahf
mov
xchg
inc
mov
mov
mov
insl
xor
or
push
jle
add
test
add
xorb
jge
xchg
pop
ret
leave
mov
shlb
mov
test
mov
aas
sub
movsl
cmpb
aad
dec
fiaddl
mov
xchg
dec
and
test
sbb
mov
sbb
incb
and
dec
mov
xchg
xorb
mov
mov
int
push
fadds
jb
mov
test
roll
insb
xchg
nop
mov
test
cwtl
jge
push
cld
mov
cmp
test
pop
cltd
jg
inc
mov
outsl
inc
cmp
sbbl
ds
mov
fists
adc
fs
stc
xchg
fs
mov
mov
dec
hlt
test
or
jl
insl
add
in
out
xchg
xor
test
pop
enter
adcl
jge
test
fs
sub
xorb
or
mov
rcrb
cld
mov
insl
data16
bound
pop
mov
loope
pop
sub
xchg
mov
jp
lea
mov
jns
ret
push
ret
fimuls
jb
call
or
lods
mov
stos
xchg
sarb
or
popf
or
lret
fldpi
test
dec
mov
les
add
pushf
aas
sbb
push
fs
mov
dec
cmpl
loope
mov
mov
push
push
fs
ds
cltd
push
mov
and
in
xlat
ret
incb
aas
sub
sbb
pop
mov
mov
mov
aad
adcl
test
addr16
xor
popa
cli
xor
sub
stos
ljmp
adc
xor
popa
push
xlat
push
push
mov
popa
cmp
cmpsl
add
pop
cmp
lcall
or
pop
mov
xor
sub
pop
push
inc
mov
bnd
repnz
bound
adc
nop
mov
add
insb
or
inc
xor
pop
push
roll
dec
orb
xor
mov
arpl
jo
xor
add
cmp
mov
pusha
je
rolb
xchg
test
mov
adc
repz
les
and
pop
jbe
loopne
push
xchg
pusha
hlt
add
and
xor
and
les
pusha
mov
call
sub
dec
jns
cltd
pusha
test
stc
or
pusha
sub
dec
jp
lcall
cli
or
sub
fwait
dec
add
sahf
mov
aam
mov
jp
mov
mov
add
push
addb
push
fs
pushl
mov
xorl
pusha
data16
jne
mov
adc
ret
and
adc
pop
cwtl
sti
jbe
xchg
movsl
xchg
push
adc
and
add
xchg
insb
ret
repz
lods
xchg
or
jp
pusha
movsl
sub
adc
lods
pop
shrl
add
mov
fsubs
adc
mov
dec
ret
push
sbb
in
mov
pusha
mov
scas
pop
nop
sub
sub
dec
mov
clc
mov
mov
sti
pop
push
mov
idivl
mov
bound
add
inc
insb
mov
mov
xor
loopne
mov
jns
outsb
mov
imul
pusha
mov
xchg
push
pusha
dec
xor
dec
adc
xlat
sbb
shlb
mov
sbb
mov
stos
xlat
lock
sbb
jbe
sub
jne
sbb
dec
pusha
pop
fsts
out
movl
push
inc
mov
adc
ljmp
lea
stos
mov
jnp
aas
test
addr16
decl
ret
dec
adc
and
jl
lds
fxch
sti
leave
add
push
sub
scas
test
loop
xchg
arpl
fidivs
fldz
loopne
sti
insl
inc
pusha
lods
sub
and
mov
fdivr
cli
mov
push
jle
pusha
in
int
fbld
mov
push
sub
lahf
sahf
xchg
inc
scas
sbb
jmp
and
sub
dec
pusha
pop
pop
cltd
jle
aaa
xor
pusha
pop
cld
cmp
js
fistpl
cmc
push
fwait
mov
pop
xor
pop
jns
test
pusha
subl
mov
dec
outsl
fwait
jmp
mov
jecxz
fistpll
mov
js
insb
mov
lods
pusha
inc
imul
out
push
sbb
sbb
repz
xor
push
adc
xor
cmc
addr16
pushf
or
push
and
adc
ficompl
fcompl
jae
stos
push
dec
mov
pusha
pop
sub
rorl
in
dec
cli
sbb
je
xor
loopne
out
inc
xor
ljmp
cmp
mov
fimull
sbb
sbb
pop
lret
xor
cmc
andl
pop
xor
aaa
mov
jge
out
into
mov
scas
ljmp
push
or
fdivrs
test
sbb
andl
jns
das
pusha
mov
popa
jecxz
pusha
jbe
fcoml
popa
pop
mov
inc
xchg
or
fs
mov
pusha
xor
cltd
mov
pusha
dec
xchg
lock
mov
inc
aas
pop
pusha
sbb
ja
cmc
std
lods
sub
dec
cmp
fucomi
mov
decl
mov
sub
aad
jbe
dec
fsub
scas
pop
aaa
mov
add
cli
and
jo
imul
or
lea
jge
or
movzbl
lods
in
out
pusha
cmp
xor
pop
orl
adc
push
gs
repnz
cwtl
pop
and
pop
in
ds
pusha
filds
xchg
cmp
cmpsl
cmpsb
pusha
push
shrb
test
dec
stc
or
xchg
push
mov
pusha
inc
adc
and
out
xorb
pop
pusha
push
insb
je
int3
sub
mov
sbb
and
mov
mov
bound
pop
push
pop
mov
inc
frstor
or
jle
ret
add
outsb
aaa
jo
sahf
in
add
mov
nop
stos
bound
int
rolb
sbb
jg
cvtdq2ps
sahf
mov
test
or
mov
push
fadds
jbe
xor
sub
aas
loopne
das
lret
insl
cmp
out
add
mov
pop
insb
mov
inc
clc
int
mov
push
in
adc
cmp
cmp
clc
or
lret
in
iret
sbb
mov
cmp
lret
int
pop
sub
outsb
and
fcmovb
pusha
je
dec
xchg
push
mov
pusha
pop
xor
ljmp
es
shlb
das
out
lret
sbb
or
out
xchg
xchg
jl
pop
jo
push
int
pusha
jno
cmp
fistps
cmpsb
mov
pop
or
dec
push
mov
jmp
inc
shl
or
cmp
repnz
les
test
out
insl
divps
cltd
push
xor
xor
pusha
jnp
jmp
sbb
or
out
outsb
adc
or
fwait
pop
scas
imul
or
out
insl
loopne
das
sbb
mov
je
mov
inc
cmpsl
out
popf
xchg
and
std
sub
jno
mov
lock
cltd
mov
es
enter
lret
cmp
popa
push
xchg
mov
addl
repz
inc
xor
fisubs
and
shrb
fcmovnbe
push
sti
sub
fbstp
jo
lahf
push
pusha
xchg
sbb
ret
adc
cli
sbb
hlt
pusha
enter
mov
nop
lock
jno
int3
xchg
js
cmp
popa
outsl
js
xor
xor
pusha
cmp
cs
xor
fists
out
lods
add
pushl
jns
mov
mov
mov
ret
adc
dec
das
lods
pusha
pop
sub
sti
sub
jle
xor
loop
jno
out
in
pusha
pop
pop
fldenv
xor
aaa
es
sub
scas
inc
xlat
sbb
outsl
inc
xor
cmpsb
xchg
into
scas
adc
popl
pusha
sbbl
jl
xorb
lock
imul
fsubl
cmp
cmc
cmp
movl
sbb
push
leave
mov
cmp
in
pusha
pop
ss
scas
les
outsb
pusha
sbb
xchg
out
lods
and
pusha
inc
pop
fnsave
add
jae
xchg
cld
dec
jno
pushf
fwait
rcrb
into
pusha
mov
daa
mov
xchg
xchg
inc
pusha
mov
mov
jp
orb
sub
cld
and
xchg
jl
mov
mov
mov
xchg
mov
ljmp
ja
out
mov
and
pusha
fistpl
cs
xor
enter
repz
adc
cmpsb
gs
sub
xor
enter
xchg
mov
loopne
xor
mov
pop
outsb
xchg
adc
popf
rolb
mov
pop
adc
fcompl
push
mov
mov
pop
pusha
mov
dec
mov
popa
inc
insl
xchg
adc
and
mov
pop
popf
cli
fldl
mov
push
pop
inc
repnz
jmp
icebp
pusha
sbb
jbe
xchg
pop
sub
fldenv
pusha
mov
lcall
int
add
sub
pushf
jl
jbe
pusha
shll
mov
or
jno
sub
mov
mov
cs
popa
cld
lds
daa
mov
cmp
std
in
jp
addl
push
push
dec
aas
jo
xor
decb
fdivs
shlb
jg
shlb
cmp
mov
xorl
add
pop
imul
mov
mov
jb
lods
xchg
shll
xor
pop
or
outsl
out
lods
loopne
add
mov
outsb
xor
popf
or
xchg
inc
insb
pusha
in
push
int
jg
add
loopne
imul
loope
jne
fildl
cmp
push
xchg
icebp
dec
mov
push
cmpsl
int3
scas
xor
jmp
sbb
cld
xchg
shrb
cmpsl
pushf
shlb
mov
mov
mov
out
jl
pusha
divb
scas
rcll
int
mov
out
or
jecxz
adc
out
xchg
adc
push
mov
aas
cltd
mov
int3
pusha
out
movl
mov
mov
and
adc
inc
and
jnp
cmp
xchg
test
outsb
push
fs
ja
out
stos
insl
jg
loope
sbb
pushf
jmp
lock
dec
in
xor
sub
pusha
lds
push
sbb
das
xlat
je
jns
fadds
or
aad
scas
dec
inc
xor
xchg
cmc
imulb
mov
pusha
inc
jge
cmp
imul
xchg
nop
xor
add
dec
adcb
jo
imul
insb
push
xor
loopne
adc
int3
mov
pop
test
lahf
push
pop
es
pop
pusha
iret
push
sahf
dec
scas
cmp
pusha
inc
out
in
aaa
fnstsw
pop
lret
sbb
push
push
incb
mov
ret
inc
push
and
loopne
mov
sub
xchg
imul
cmc
and
inc
cmpsl
mov
pop
mov
fcoms
sbb
pusha
loopne
sub
add
test
sti
in
inc
in
cmove
popa
fimull
mov
mov
xchg
mov
fisubrs
andl
out
xor
push
xor
bound
sarb
mov
xor
fbstp
ja
imul
aam
mov
mov
mov
into
popa
popf
xor
sub
stos
scas
cmp
dec
aaa
nop
lahf
int
ret
nop
loop
test
sbb
ds
xor
push
hlt
icebp
xchg
push
test
bound
xchg
mov
cmp
insb
mov
mov
xchg
xor
or
xchg
push
dec
loop
dec
mov
subl
lahf
push
and
sub
insl
and
mov
mov
pop
push
push
mov
pusha
lds
push
ljmp
cwtl
xchg
and
popa
pop
or
sahf
scas
loopne
iret
sbb
inc
push
out
rorb
sbb
xchg
pusha
leave
out
int
loopne
andl
iret
mov
pusha
dec
out
adc
mov
inc
mov
xchg
inc
lret
or
mov
sub
mov
loopne
cmc
sub
cli
cmp
jecxz
adc
cmp
les
arpl
lahf
push
aaa
insb
out
out
ljmp
or
adc
pushf
inc
stos
stc
addb
and
cltd
shl
mov
imul
sti
lahf
pusha
jg
add
dec
push
jne
cwtl
out
pop
push
push
or
dec
icebp
adc
les
inc
repz
and
jbe
mov
adc
fmuls
ja
call
inc
push
xchg
add
jp
adc
dec
xchg
fldt
pop
sbbl
lret
pusha
cmpl
xchg
pusha
add
fbstp
sbb
mov
pop
roll
insl
mov
out
je
loop
outsl
scas
pusha
fcomps
fisttps
lock
dec
inc
enter
in
xchg
pusha
ljmp
stos
pusha
add
outsl
in
cmpsb
aaa
xor
xchg
ss
push
jno
sub
fimull
mov
cld
sbb
xchg
dec
out
dec
mov
sbb
aad
mov
push
cltd
popa
inc
and
rolb
xchg
pop
and
pusha
sbb
sbb
imul
dec
xor
das
cmpsl
jle
pusha
or
pusha
jae
imull
xchg
mov
push
jg
ret
scas
mov
pop
or
lret
xor
fs
mov
jae
insl
pusha
ss
incl
dec
mov
mov
lds
lea
jl
pop
pop
xor
sahf
dec
or
iret
cmc
outsb
jae
adc
js
fwait
call
dec
cmc
and
mov
add
leave
cmpsb
dec
std
iret
sbb
jle,pt
imul
sub
pcmpgtb
out
shlb
pop
mov
dec
adc
or
sbb
cltd
jae
int
sub
dec
stos
cmp
rorb
out
xchg
push
and
lcall
adc
arpl
shr
pusha
adc
mov
xchg
leave
cmp
sbb
pusha
inc
cs
cmp
shlb
popf
jp
mov
aas
jae
loopne
xor
pop
pusha
sbb
add
add
push
pusha
sbb
fnstenv
je
sbb
hlt
popa
sub
mov
gs
adc
adc
rcrl
call
mov
inc
adc
call
lods
outsb
dec
repz
loopne
push
adc
lea
leave
pop
pushf
adc
test
lea
pop
fsts
pop
and
fnsave
lods
inc
xchg
fmulp
nop
push
mov
js
jns
shr
xor
hlt
and
iret
mov
pop
or
bnd
cwtl
xchg
xchg
jb
fsqrt
mov
hlt
aam
daa
xor
ss
xor
fimull
cmpsb
jbe
dec
dec
pusha
out
daa
cmp
subb
push
sbb
or
aad
fadd
sahf
pusha
sbb
sub
pusha
mov
add
mov
inc
pusha
lods
iret
mov
or
cmp
inc
mov
sub
call
stc
jno
fdiv
sub
or
or
jnp
jl
mov
or
and
pusha
push
stc
cli
lahf
gs
es
and
fistpl
push
call
stos
and
inc
pop
popa
sbb
andb
mov
pop
xchg
lods
pusha
bound
inc
int3
mov
xor
push
inc
jae
jbe
and
xchg
fcoms
pushf
jne
xchg
cmc
popa
push
ds
andb
mov
into
scas
leave
rcrb
sahf
popa
data16
rolb
sub
xor
clc
mov
xchg
fildll
movsl
mov
movsb
jp
aad
popf
pusha
adc
sahf
sti
add
and
xchg
lret
mov
sub
and
mov
xchg
jae
xor
push
lods
dec
fstpl
push
popf
out
inc
sbb
pop
fistpll
fcos
stos
lods
inc
cmp
pusha
mov
cmp
es
xor
pop
lds
add
pop
pop
andb
outsl
ret
aas
mov
pushf
inc
nop
popa
cmp
jge
ret
iret
in
mov
into
mov
add
push
ficomps
push
shr
push
popa
dec
or
popa
sub
push
and
hlt
into
pusha
aam
push
or
add
or
in
mov
mov
popa
pop
dec
push
sub
xchg
scas
sbb
int3
rcrl
inc
pop
push
cmp
mov
or
icebp
cltd
mov
add
jne
into
das
push
cmp
and
mov
fcoms
push
inc
lahf
pusha
cmp
jae
mov
jb
pusha
sahf
shr
iret
in
xchg
pusha
mov
xor
popf
and
push
cmp
mov
ss
insl
out
ret
jb
cmp
lds
and
mov
rclb
push
xchg
mov
pop
mov
mov
insl
adc
jecxz
lock
pop
mov
xor
jmp
lcall
jne
popl
mov
dec
pop
stos
jg
cmpb
or
dec
pop
and
pusha
fisttpl
fprem1
push
mov
sbb
jl
inc
push
xor
mov
insl
loopne
dec
add
mov
inc
popa
pop
and
pop
add
flds
jmp
loope
mov
fistpl
fldcw
iret
push
call
in
push
ss
push
pop
pusha
adc
fisubl
into
and
test
insb
pop
outsl
mov
push
sbb
pop
mov
or
out
loopne
lock
sbb
jmp
dec
and
ja
shll
inc
pusha
nop
or
ljmp
neg
rolb
insb
inc
pusha
mov
data16
mov
in
sbb
cld
add
dec
insl
mov
shlb
sub
pusha
add
push
jae
mov
scas
pusha
inc
aad
loop
stc
push
insb
stos
cmp
mov
and
dec
pushf
outsb
lock
mov
xchg
sti
icebp
sub
lret
repnz
popf
or
sub
xor
shlb
xor
outsl
dec
cmp
xorl
sbb
fcoml
push
ds
leave
lret
orl
cs
add
and
sbb
jl
pop
test
or
je
addr16
jo
push
outsb
push
push
push
xchg
xor
sbb
sub
out
inc
popa
cmc
pop
out
jno
add
inc
jg
pop
push
mov
pop
lcall
call
cmp
outsl
inc
shll
sti
xlat
sbb
mov
xchg
dec
xor
loopne
cmp
sbb
cltd
loopne
jno
mov
mov
lahf
dec
rorl
jle
icebp
xchg
shll
stos
outsl
xor
and
cld
jbe
cmp
xchg
int
push
pop
add
push
push
movl
pop
rcr
sub
mov
pop
dec
mov
stos
mov
adc
dec
popa
sbb
jns
repz
pusha
inc
and
into
sbb
pusha
add
aaa
mov
or
mov
push
mov
popa
adc
rorb
scas
loopne
in
pop
inc
out
sti
ret
pusha
leave
mov
decb
jg
push
or
mov
and
mov
popf
cltd
ja
xchg
popa
pop
insl
or
lea
sub
mov
pop
adc
fs
push
pusha
out
lods
leave
push
xchg
inc
lahf
out
mov
mulb
out
call
push
in
or
stos
lahf
mov
test
xchg
sti
jnp
loopne
cli
sbb
jl
inc
pop
mov
popa
int3
pop
push
inc
ljmp
out
mov
push
mov
push
xchg
test
push
and
sbb
cmp
stos
pop
jmp
or
mov
xchg
sub
scas
rcrb
pop
test
pusha
test
aaa
pop
xlat
pusha
jnp
cld
sbb
pop
pop
dec
pop
popf
lahf
insb
aam
lret
fadds
sahf
dec
adc
jbe
pop
push
into
pushf
fldt
or
outsb
vpunpcklbw
dec
xlat
pop
pop
xchg
sbb
inc
jmp
lahf
arpl
xchg
sbb
loope,pt
je
dec
mov
pop
jb
mov
addr16
pusha
testl
sub
xchg
mov
insb
mov
js
pusha
mov
fcomps
out
leave
mov
or
lahf
popa
mov
sub
push
sub
rorb
push
push
mov
pusha
pop
mov
fs
xchg
jae
je
inc
xchg
push
jle
outsl
mov
adcb
imul
arpl
popa
pop
pop
push
movsl
mov
xchg
push
jae
mov
cmpsb
push
pop
inc
cltd
push
push
push
arpl
pop
push
push
stos
push
pop
adc
sti
test
mov
or
jno
push
pop
movsb
xor
dec
cmp
inc
jp
push
mov
shrl
je
xchg
jo
jae
jno
leave
xor
mov
repz
cmpsl
xor
dec
mov
movsb
iret
push
dec
inc
xchg
push
mov
inc
xchg
and
sbb
mov
mov
mull
lahf
cmp
adc
push
push
adc
imul
pop
xchg
insl
imul
adc
addr16
inc
aaa
mov
push
jae
rcrl
into
cmp
hlt
psrlq
loopne
push
xchg
addr16
bound
push
sti
insl
addr16
pop
push
aas
in
das
push
adc
dec
bound
jb
outsl
cmpsb
pop
outsb
adcl
iret
in
xchg
pop
fadds
or
outsb
jo
repnz
inc
bound
pop
push
dec
and
imul
pop
xor
push
push
add
add
nop
dec
push
dec
adc
popa
pop
jp
fldl
je
ret
pop
or
sbb
jp
or
loop
pop
push
jo
xchg
fcomps
cmpl
push
pop
pop
aad
jo
test
sbb
dec
xchg
jecxz
push
sbbl
cs
jg
fs
pusha
insb
push
loope
test
jb
sahf
pop
imul
mov
scas
cmp
push
adc
hlt
pop
xchg
shrb
cmp
les
in
iret
outsb
xchg
je
jp
xor
push
lods
cwtl
cmp
xor
dec
xor
les
mov
sbb
mov
lcall
or
sahf
test
push
pop
lods
je
lods
sbb
push
adcl
inc
sbb
inc
mov
popa
push
movsl
jo
jge
les
jge
loope
jb
push
mov
in
seta
jb
arpl
push
outsl
stc
pop
mov
into
adc
jp
mov
and
fisubs
mov
jle
hlt
aaa
jnp
jg
xor
mov
sbb
cmpsl
cltd
sub
clc
stos
test
jo
ljmp
cmpsb
out
adc
divl
ss
jg
adc
ja
pusha
add
sbb
sbb
push
mov
mov
jp
data16
jne
lock
hlt
lret
push
pop
sbb
sbb
sub
out
fs
xor
push
jecxz
enter
pop
inc
adc
cs
andb
xchg
lahf
xchg
icebp
mov
outsl
pop
lock
pop
push
push
adcb
lret
push
xchg
push
pop
adc
imul
pop
das
pusha
jp
mov
pop
mov
fcomp
mov
test
push
jp
xchg
inc
fs
mov
jge
pushf
xchg
fmuls
test
fs
push
push
loop
adc
fidivs
mov
fldcw
imul
bound
xchg
lret
in
subl
add
imul
add
jl
test
jp
inc
mov
push
jns
je
jecxz
jns
repz
pop
aas
test
cmp
jns
fs
mov
push
hlt
mov
popa
dec
in
lret
dec
ja
add
test
push
dec
icebp
mov
jo
inc
pop
mov
push
jae
cs
push
xchg
push
insb
mov
xchg
mov
mov
cwtl
pop
fisttpl
and
sbbl
sub
pop
xor
jo
xor
cs
ret
cwtl
mov
arpl
inc
jne
mov
les
push
jge
decl
and
dec
pop
cmpsl
ss
pop
pop
mov
insb
fisubl
xchg
push
push
pop
lahf
je
lret
movsb
mov
data16
js
insb
addr16
xchg
fmull
xchg
popa
nop
iret
xor
inc
imul
insb
shlb
mov
imul
dec
push
jbe
cltd
jl
movsb
add
mov
dec
hlt
shrl
call
jecxz
mov
dec
imul
cmp
adc
rolb
or
ja
rclb
jne
pop
inc
scas
mov
mov
cmp
cwtl
jbe
lods
cld
cmp
imul
xorb
fnstenv
xchg
push
pop
xchg
mov
xchg
jne
push
xchg
js
xchg
mov
or
cwtl
sbb
or
sub
rorb
mov
fmuls
jmp
and
push
loope
push
push
loope
pop
shld
je
mov
mov
js
pop
push
lds
insl
jbe
jnp
ror
lret
js
dec
sbb
gs
sbb
bound
not
xchg
or
or
ja
dec
call
pushf
test
pop
orb
imul
nop
loopne
jae
push
cmp
lock
ror
fnstcw
jle
add
mov
push
ret
jmp
or
xchg
rolb
imul
rcrb
mov
mov
insb
das
out
jns
push
xchg
inc
lods
lock
inc
js
icebp
test
lock
movsb
fbstp
fwait
mov
inc
fnstcw
push
pop
insb
mov
hlt
rorb
mov
rcrb
sbbb
push
jp
lret
iret
out
lret
mov
fwait
push
push
dec
sbb
imul
gs
or
add
pop
pop
push
data16
addr16
pop
mov
lahf
pop
insb
inc
rorb
push
movsb
dec
clc
mov
pop
loopne
cmp
test
pop
shrl
lods
adc
insb
mov
mov
jge
mov
jo
pop
js
dec
mov
jle
adcb
xchg
repnz
and
cmp
adc
insb
add
fadd
sar
lods
icebp
pop
test
movsb
xchg
mov
fnstenv
cltd
bound
loopne
inc
xchg
test
les
mov
cmpb
aas
imul
js
sbb
mov
in
push
xorl
nop
shrb
xlat
mov
ret
jno
xchg
and
push
nop
test
cmp
mov
pop
jl
sub
out
mov
push
jbe
sbb
sub
arpl
imul
test
push
lcall
cmpsl
dec
push
xchg
sbb
inc
jmp
pop
mov
ja
jmp
inc
push
cmp
mov
push
add
arpl
jmp
lds
sbb
ja
inc
mov
cmp
and
pop
cmpb
movsl
jo
add
fwait
shrb
push
pushf
outsb
jp
xchg
repnz
mov
rclb
pop
push
mov
add
mov
push
xor
les
pop
mov
std
shl
movsb
jmp
fstps
mov
mov
mov
test
fmull
test
fs
add
jo
push
popf
shrl
rol
push
les
movsb
adc
pop
dec
cmpsb
sub
test
fdiv
outsl
aad
add
in
js
mov
jne
mov
divl
jno
pop
xchg
mov
lds
fs
mov
add
inc
sub
dec
lret
scas
cs
add
push
aad
sti
cmp
imul
jno
mov
movsb
loope
fcmove
fld
push
fcos
pop
ja
in
jmp
into
ficoms
andb
stos
das
pop
jmp
insl
cmc
fdivrl
fldt
dec
data16
mov
pop
dec
addb
cwtl
jle
xchg
arpl
shrl
js
ja
test
sbb
in
push
lea
jo
mov
lods
sub
test
xor
out
xor
xor
pushf
bound
icebp
jl
js
je
sbbb
loop
cwtl
push
test
stos
mov
dec
addr16
pop
cwtl
push
ret
andb
fs
pop
add
xchg
mov
stos
jb
inc
loop
cltd
push
out
js
push
dec
nop
insb
ret
into
in
arpl
mov
push
xchg
jp
and
mov
jne
lea
sub
push
test
test
pop
stos
mov
int3
loope
pop
add
cs
cwtl
in
cmpb
jg
mov
fwait
popa
mov
js
xor
inc
loopne
xorb
sbb
ja
ret
dec
xor
or
or
fldcw
push
ret
scas
mov
xor
xchg
jge
jb
and
insb
mov
jo
cmpsb
mov
mov
fisubl
shlb
adc
lock
sub
fldenv
mov
xor
sbb
mov
int
xchg
sbbb
sub
mov
fwait
outsl
push
and
popa
xchg
test
push
pushf
loop
daa
jo
inc
repnz
sbb
dec
mov
xorb
and
xor
mov
xor
jecxz
in
imul
pushf
lock
inc
pop
adc
cmp
sub
insb
outsl
push
jo
pop
mov
cltd
xchg
mov
inc
mov
xorb
scas
push
pop
lds
mov
fldl
test
sub
lcall
mov
icebp
cltd
cwtl
mov
in
mov
ds
int3
out
pop
xchg
popf
je
loop
test
jnp
push
cmp
dec
xor
push
idiv
sub
loopne
popa
std
cmpsb
cmp
mov
movsb
cs
fs
pop
pop
fldcw
fsub
mov
imul
lods
add
jo
jmp
dec
lea
out
je
fsubs
das
xchg
aam
subb
pop
cwtl
lret
adc
xchg
fsts
cmp
xor
sub
repnz
push
xor
jecxz
pop
jo
dec
ja
mov
add
push
jno
in
jo
fidivrs
cmp
push
popf
call
arpl
push
adc
inc
cmp
ret
mov
xchg
cltd
daa
je
lea
sub
mov
and
push
cmp
pop
sub
insb
mov
sahf
js
js
sbb
sub
jo
mov
sub
pop
mov
in
jnp
dec
jo
pop
push
test
sub
into
loope
pop
lods
loope
push
jae
jne
push
add
add
push
xchg
insb
sarb
inc
daa
ret
shll
scas
or
lds
jp
shlb
inc
add
cwtl
pop
mov
and
push
pop
adc
arpl
pop
cmp
lea
pop
js
sbb
sahf
imul
jbe
fwait
je
insb
xchg
mov
xorl
xchg
adc
mov
fsubrs
inc
nop
lock
mov
mov
mov
mov
stos
jo
xchg
outsb
int
and
push
cmp
inc
rcl
aad
lahf
push
xchg
dec
inc
leave
mov
into
add
jo
stc
pop
mov
xor
lahf
pop
addr16
push
dec
pop
enter
xor
or
inc
mov
in
push
xor
je
sbbb
enter
rclb
aaa
hlt
sbb
flds
les
bound
daa
push
lods
dec
sbb
sub
insb
mov
ds
sahf
insl
mov
add
outsb
and
pop
mov
outsl
mov
dec
cwtl
xchg
inc
aam
addb
xchg
jo
push
xchg
scas
push
jne
xchg
or
je
fs
xchg
jle
xchg
loopne
pop
push
lcall
hlt
shll
dec
rolb
adcb
popa
rol
xor
cwtl
hlt
hlt
jbe
xor
adc
and
bound
xor
fs
pop
push
sub
xor
rorl
cli
adc
jg
inc
add
push
popa
out
xor
push
mov
cmpsw
insl
mov
inc
enter
dec
inc
int
iret
jo
push
aas
fcompl
inc
bound
jae
jbe
shll
xchg
cmp
rcrl
jle
fnstsw
add
add
psubw
mov
call
lock
add
insb
jns
push
scas
shrb
jmp
imul
addr16
adc
mov
aad
cmpsb
dec
mov
adc
loop
mov
out
xor
cltd
fs
adc
hlt
adc
sarb
ss
dec
adc
popf
js
insl
push
jne
mov
sbb
jno
xor
push
test
rcll
dec
aaa
inc
adc
fistl
out
jecxz
xor
adc
push
mov
push
push
ja
movsl
in
inc
xor
in
inc
pushf
outsb
jl
mov
je
jecxz
sbb
or
mov
xchg
dec
lret
or
cmpsl
mov
jecxz
je
and
test
clc
xchg
mov
cmp
out
inc
or
cmpb
scas
imul
popa
ja
orb
hlt
lods
and
bound
push
mov
sub
movsb
sahf
inc
in
outsl
pop
movsb
repnz
icebp
push
pushl
dec
push
push
push
addr16
xchg
lock
push
mov
pop
dec
pop
add
pop
sbbl
push
adc
jge
dec
mov
push
subb
push
or
divb
mov
add
jb
mov
mov
mov
int
lods
jecxz
xchg
js
sub
cmc
aad
arpl
mov
jb
jbe
or
je
jno
shlb
lods
cltd
adc
test
push
dec
push
mov
push
mov
mov
pop
rclb
mov
outsl
les
fs
insb
mov
jb
cmpsl
push
lods
mov
pop
jo
shlb
stos
jge
stc
shrb
pop
lret
rcll
mov
xchg
cwtl
pop
xchg
pushf
jae
js
jnp
mov
mov
js
pop
shll
ret
js
dec
testb
shlb
stos
repz
lret
jmp
fisubs
xor
jb
fcmovb
gs
jb
test
push
jbe
enter
xor
adc
jnp
test
test
xchg
inc
xchg
xchg
aad
xchg
mov
mov
lock
mov
jo
cld
mov
icebp
push
std
sbb
mov
mov
sbb
into
std
pop
xchg
inc
sbb
push
imul
sarb
nop
outsb
pop
push
aam
mov
pop
lock
jno
push
mov
fcoms
in
pop
ror
pop
adc
lods
pop
mov
imul
sbbb
pushf
xchg
mov
mov
mov
bound
in
enter
adc
ja
sahf
loope
mov
jl
sahf
dec
imul
adcb
cwtl
loope
out
outsb
xchg
mov
dec
in
or
call
out
add
push
cwtl
sub
mov
fsts
mov
mov
pop
fisttpll
repnz
and
lahf
jecxz
pop
fcoms
inc
xor
mov
jb
xchg
and
jmp
mov
arpl
adcb
xor
sub
pop
pop
fs
sbb
push
fnstsw
mov
push
push
xlat
in
jmp
bound
inc
inc
popf
or
sbb
jns
in
mov
mov
lods
orb
mov
addr16
rclb
test
dec
pop
mov
out
test
jne
or
xchg
add
rclb
insb
xchg
popa
js
pop
and
and
imul
and
pop
imul
stos
arpl
push
hlt
pop
adc
jge
pop
sbb
in
aam
mov
xchg
cmc
js
shrl
test
fs
xchg
xchg
gs
sub
in
mov
pushf
xchg
xchg
popa
adc
cli
movsb
idivb
rcll
dec
repnz
data16
mov
inc
adc
sub
sub
mov
or
js
ja
pop
mov
xchg
js
mov
mov
mov
out
pushf
jp
xchg
or
jns
pushf
mov
xlat
and
push
imul
rorb
je
addb
sbb
pop
imul
orb
adc
mul
test
push
outsb
jno
push
jecxz
push
mov
test
shll
push
lods
out
adc
jb
outsb
inc
lea
lea
rcll
push
lret
out
lea
push
inc
fxtract
pop
lea
imul
mov
sub
inc
inc
fwait
ljmp
rcl
ds
push
mov
ds
sahf
addr16
pop
jne
icebp
sub
mov
push
clc
stc
add
mov
mov
js
cmp
hlt
pop
in
les
test
rclb
mov
inc
popf
xor
pop
inc
mov
nop
jl
pop
jl
aas
adc
xchg
ja
aam
jo
jbe
icebp
dec
nop
push
mov
mov
mov
cmpsb
sub
lret
adc
push
aas
adc
mov
cmp
fistpll
pushf
or
je
or
out
mov
shl
pushf
jp
xlat
adc
jb
xchg
mov
fisubl
mov
jle
mov
add
pop
jb
and
mov
jo
fdivs
or
andl
jae
insb
cmc
adcl
mov
movsb
popa
out
jecxz
lock
jp
lock
and
idivb
and
cmc
and
inc
cmpsb
jl
frstor
jns
test
jo
mov
enterw
xchg
jae
test
pop
cwtl
push
test
mov
loopne
push
or
icebp
cmpsb
cmp
icebp
shll
shrl
jecxz
rclb
insb
lods
pop
push
jb
rclb
rcl
mov
sbb
and
push
mov
mov
sbb
pop
insb
movsl
rclb
nop
addl
mov
xchg
cmpsl
adc
pop
mov
mov
push
repnz
add
cwtl
xor
leave
jecxz
inc
cmpsb
mov
mov
sbb
addl
cli
sbb
adcb
sbbl
jp
xchg
push
adc
shlb
add
push
jae
inc
mov
aad
xor
stc
fadds
jne
insl
and
mov
sbb
mov
fsubrl
inc
clc
pop
bound
xlat
je
push
mov
gs
cmp
adc
add
dec
popa
outsl
scas
jl
int
repnz
add
mov
testl
je
xor
addr16
shll
xor
out
push
dec
and
scas
into
lret
inc
and
jno
pop
push
mov
push
andl
test
stos
sbb
test
push
xlat
push
rolb
subl
and
rcll
sub
push
xchg
xchg
insl
jle
into
bound
push
fists
in
xchg
push
add
cld
lret
lock
jne
je
insl
fildl
mov
cmp
sbb
mov
stos
jno
fsub
cmp
lret
mov
enter
rcrl
sbb
clc
icebp
icebp
call
loope
int3
pop
in
cmp
adc
inc
imul
int3
and
xlat
mov
insb
shll
sahf
mov
push
or
shlb
inc
test
xchg
xchg
addr16
mov
subl
out
xor
sbbb
orl
pop
fimull
jbe
pop
mov
jae
inc
mov
pop
je
into
jo
pop
sti
ret
xor
pop
pop
pop
je
into
enter
jo
pop
sti
jno
pop
dec
rcll
cld
mov
push
jne
push
mov
pop
or
mov
mov
shrl
into
dec
push
cli
out
or
xor
mov
sahf
mov
mov
cmp
imul
cmp
dec
push
mov
mov
daa
shl
push
xor
mov
test
push
arpl
adc
push
insb
push
mov
mov
movsb
cmp
dec
cmp
pop
mov
lock
fdivl
loop
push
jl
add
insb
jnp
jecxz
addl
cmpsb
mov
mov
dec
push
add
in
xor
test
imul
jo
push
stc
xor
mov
bound
pop
addr16
arpl
xchg
filds
js
popa
and
je
or
jg
fs
pop
pop
sbb
jae
imul
mov
out
jno
test
movsb
aam
dec
bnd
push
bound
insb
lock
dec
mov
subb
fs
xchg
xchg
jl
adc
sbbb
pop
lods
sbb
inc
movsb
add
pop
mov
mov
mov
xchg
cmp
cmp
pop
pop
nop
fnstenv
adc
lahf
mov
push
imul
sbb
cmc
pop
jo
hlt
jge
push
lds
pop
movsl
mov
mov
arpl
inc
jb
mov
subb
nop
scas
aam
test
js
outsl
fstl
lea
dec
xchg
cmp
jae
ror
pop
fdivs
xchg
and
xor
fdivs
jl
push
mov
out
sbb
fdivrl
sub
enter
andb
mov
into
cmpsb
outsb
mov
mov
ja
mov
ja
pop
jno
pop
mov
lods
push
xor
and
je
aam
fdiv
nop
ljmp
pop
push
out
outsl
movsl
fs
fwait
add
stos
test
sahf
xchg
add
add
add
in
jb
sub
mov
xchg
sub
imul
dec
vcvttps2dq
loope
mov
mov
jge
ja
dec
sub
adc
call
xchg
inc
inc
hlt
jne
jno
je
ds
data16
leave
xchg
in
push
push
outsb
insb
das
and
fwait
lcall
test
adc
or
std
dec
scas
xchg
sub
aam
enter
mov
jo
shll
sbb
cmp
enter
sub
jle
rorb
mov
hlt
pop
push
fcoms
lock
xchg
mov
mov
hlt
pop
push
jmp
bound
bound
clc
xchg
sub
addl
jge
push
or
out
sub
sarb
lcall
mov
and
or
test
insw
fwait
add
sti
mov
dec
imul
sub
mov
cmp
loop
rclb
dec
adc
test
mov
lret
jle
push
xchg
push
out
ja
std
mov
or
fs
mov
xchg
call
xchg
sub
pop
add
and
push
jno
push
xchg
dec
leave
sub
adc
inc
xchg
std
xchg
les
mov
xchg
rolb
ljmp
pop
sbbl
sbb
test
push
inc
je
and
xchg
call
xor
cmpsl
pop
lret
lcall
outsb
mov
into
pop
inc
jns
pop
mov
aaa
inc
addr16
lea
pop
test
and
outsl
out
xchg
movsb
jae
mov
ret
xchg
pushf
jae
mov
subl
jae
nop
dec
or
xor
mov
cmp
dec
cwtl
mov
pop
cmp
cmp
bound
jnp
push
icebp
cwtl
pushf
push
subl
lods
sub
fdivrs
lea
add
test
jo
cmp
aad
sbbb
dec
xchg
movsb
clc
adc
orl
or
adc
into
popf
push
dec
jbe
pop
out
lock
pop
scas
mov
adc
xor
and
mov
rorb
push
arpl
cld
addr16
mov
ja
rcrb
call
hlt
fcoml
push
xlat
xchg
mov
and
sub
lock
jae
xor
js
fcomps
int3
xchg
cmp
ljmp
jo
repnz
mov
mov
pop
cltd
xchg
jae
mov
xchg
pop
dec
outsb
fadds
and
lret
stc
jb
outsl
mov
add
inc
jo
jne
ja
aaa
xchg
stos
ja
jae
imul
cwtl
fxch
lret
in
hlt
cltd
in
xchg
mov
lcall
iret
pop
in
xchg
movsb
test
push
cmc
bound
xor
dec
jns
bound
fs
fldl
jg
mov
mov
shrl
jle
movsl
popa
lret
sbb
mov
xlat
mov
hlt
push
int3
fs
repnz
jne
and
outsl
fisubrs
bound
push
mov
push
cli
add
and
jns
and
xchg
adc
xchg
adc
push
push
dec
inc
xchg
mov
jo
clc
and
jb
gs
sbb
mov
jp
sbb
fcomip
mov
adc
aad
cwtl
mov
ds
xchg
test
inc
jb
push
push
xchg
int
lcall
movsl
notl
clc
cltd
push
mov
or
cmc
idivl
in
in
mov
dec
dec
clc
nop
hlt
test
pop
pop
and
test
addb
jbe
mov
mov
sub
fs
jne
gs
imul
fs
outsb
mov
sbb
jbe
jg
sub
call
jle
adcl
sbb
fdivrl
jp
enter
outsb
or
dec
sarb
js
and
out
test
aas
xor
adc
fsubrs
inc
leave
push
scas
mov
adc
mov
fmuls
enter
sahf
data16
ficomps
xchg
rcrb
pop
fists
xchg
mov
fwait
lock
loope
pop
sbb
stos
mov
jl
pop
dec
push
lahf
xchg
inc
add
mov
or
test
or
mov
sahf
sbb
inc
cltd
test
mov
cld
fdivr
cmc
fcmove
cmp
mov
rorb
movb
pop
lahf
inc
inc
sbb
mov
xchg
and
dec
lock
ret
lds
enter
fcompl
add
js
sub
stos
test
sbb
js
je
fldcw
je
mov
scas
outsl
pop
sbbb
mov
clc
jb
xchg
enter
bound
lds
cwtl
call
xchg
mov
xlat
icebp
out
loopne
xor
fnstcw
mov
pusha
or
push
sarl
push
cmp
bound
loopne
fucomi
imul
pop
pop
fxch
bound
dec
sbbb
out
mov
jbe
test
mov
imul
addr16
xchg
xchg
std
fnstenv
mov
add
sbb
xor
scas
ficoml
leave
adc
push
xor
clc
pop
pop
cmp
sbb
mov
lret
fisubs
inc
in
push
repz
mov
inc
cmp
sub
insb
mov
iret
xor
sbb
inc
and
add
cmp
or
xor
push
imul
adc
sbb
xor
bound
mov
inc
adc
iret
jo
popa
cmp
mov
int
mov
cwtl
fists
pusha
mov
dec
and
xchg
adc
cmp
test
push
sbb
lods
lock
inc
sahf
aaa
sub
xlat
push
loop
cmp
mov
push
push
ret
cmc
push
popf
test
sahf
mov
jb
or
xchg
call
shl
push
push
push
jge
lds
cmpsb
js
xchg
mov
jecxz
add
jnp
and
loop
ja
xchg
out
jecxz
sub
mov
int
xchg
lahf
push
into
leave
mov
int3
mov
pop
jnp
push
adc
testb
mov
jns
push
into
dec
dec
aad
inc
and
aam
fimuls
stc
call
js
pop
fadds
aad
enter
xor
inc
jg
push
cmp
fldl
out
push
xor
push
shrb
ss
in
pop
aas
mov
mov
add
clc
orb
xchg
dec
mov
cmp
mov
popf
loope
out
and
lret
nop
adc
xchg
mov
sahf
sarb
stos
pop
rorl
cs
arpl
cmp
pushf
lea
jae
push
lea
jmp
lea
jb
bt
call
push
jmp
in
mov
std
sub
cmp
mov
xor
jne
cs
scas
mov
lret
fwait
jbe
push
arpl
jmp
lock
aad
mov
in
xchg
jp
mov
cmp
mov
sub
fisubrl
xlat
adc
movsb
lret
movsb
mov
or
or
sbb
cmp
adc
lock
fs
mov
add
sbb
jno
lods
repnz
mov
jne
es
testl
in
push
in
enter
pushf
mov
jecxz
cld
out
mov
sub
andl
outsb
jns
xor
and
inc
jp
mov
mov
dec
or
ret
les
inc
inc
fsubrl
mov
or
mov
cmp
pusha
inc
xchg
gs
lea
jb
push
stc
cmp
jmp
push
pushf
movl
pushf
push
pushf
pushf
lea
jmp
jmp
cmc
mov
inc
push
xchg
jno
imul
pop
mov
jns
mov
pop
filds
hlt
push
push
pop
push
mov
sbb
aas
mov
jge
and
sbb
adc
lahf
ret
shl
dec
mov
je
sbb
cmpsl
aaa
mov
sarb
push
or
cmpsl
cmp
and
sub
dec
ja
jp
loop
shll
adcb
xchg
mov
out
pop
jb
pop
fs
jb
mov
push
xchg
in
pushf
std
into
movsb
out
outsl
inc
aas
and
cmp
pusha
xchg
mov
cmp
sbb
adc
ret
mov
ja
jo
inc
inc
jg
inc
cmp
mov
faddl
loop
hlt
icebp
dec
dec
jbe
or
jo
cmc
mov
fadd
mov
fsub
rcll
arpl
push
xchg
std
dec
mov
jns
cmc
loop
sub
xor
or
inc
xor
mov
imul
enter
lds
cwtl
cmpsb
push
mov
mov
lret
test
xchg
in
dec
iret
pop
loope
adc
lock
in
jmp
stos
movsb
jo
daa
insl
push
add
pushl
dec
adc
xor
outsb
stos
xchg
test
mov
mov
repz
push
mov
je
test
fldenv
mov
fbld
pushl
jp
mov
dec
jb
outsb
mov
mov
pop
cmpl
pop
mov
or
in
inc
xor
in
daa
xchg
xchg
pop
inc
cltd
add
clc
push
std
in
js
dec
jae
mov
xchg
std
loopne
mov
fcompl
ss
shr
adc
add
mov
lea
jne
pusha
jmp
pusha
mov
mov
pushf
pushf
pushl
pushl
ret
call
test
mov
inc
repnz
iret
xchg
lods
add
push
cmpsl
jae
pop
inc
cltd
cs
fsub
cmp
inc
mov
mov
outsb
mov
xor
and
int3
xchg
mov
adc
mov
inc
pop
mov
jbe
xchg
xchg
cwtl
mov
dec
sbb
push
xchg
daa
mov
pushf
out
repz
cli
jle
sbb
push
ret
xchg
xor
in
and
stos
and
jo
ficomps
jo
inc
nop
sbb
cmc
inc
dec
push
mov
adc
or
or
jne
imul
mov
inc
xor
dec
out
mov
lret
xchg
xor
into
mov
fwait
or
sti
pop
and
ljmp
mov
inc
rolb
xchg
aaa
paddusw
and
lret
nop
shl
fwait
cmc
stc
adc
jno
mov
arpl
sbb
or
push
xchg
dec
es
jne
pop
sub
pop
lea
loop
pop
add
push
xchg
dec
cmpsl
aas
shl
dec
call
xor
fs
inc
hlt
sub
sub
adc
or
shrl
jo
mov
fs
fucomp
rclb
scas
enter
mov
push
add
sbb
in
pop
sub
repz
sbbb
popa
fsubl
ss
movl
ret
in
test
pop
insb
sub
pop
lea
imul
adc
or
addr16
dec
mov
test
loop
sahf
rol
imul
daa
insl
outsb
add
cmpb
pushf
pushf
call
stc
or
call
mov
inc
out
mov
out
and
test
and
add
cmp
push
cmp
scas
mov
pop
mov
push
js
lret
int3
push
sti
sub
add
adc
loop
mov
arpl
out
fdivrs
jbe
xchg
push
das
cmp
dec
arpl
ret
jbe
std
in
ljmp
xchg
mov
cli
fcmovbe
add
push
arpl
fxch
popa
shlb
cli
adc
sbb
insl
mov
jl
pushf
pop
jl
add
sub
xchg
sub
pop
lcall
pop
inc
xchg
clc
dec
mov
cmp
inc
sbbb
scas
popf
lcall
mov
mov
nop
bound
fdivrs
push
mov
rclb
pop
test
rclb
and
dec
scas
fwait
xor
push
insb
and
hlt
push
lret
enter
add
ja
popf
test
adc
cli
add
and
push
sub
xchg
sbb
sub
mov
sub
mov
xchg
add
add
ss
cli
cltd
shlb
mov
pop
pop
movsl
js
loopne
mov
cld
out
loope
xchg
add
mov
fst
in
pusha
test
ret
hlt
ljmp
jge
mulb
pop
ja
rcl
std
js
lock
stc
pushf
xchg
orb
jmp
inc
aaa
loope
jns
data16
repz
cli
sbb
mov
mov
adc
mov
roll
and
jno
pop
sbb
lods
mov
push
sub
les
out
pop
in
lcall
arpl
ja
ret
sbb
in
lahf
jp
mov
push
hlt
inc
iret
inc
sarb
jl
jbe
stc
out
sub
sub
rcrb
out
mov
outsb
rcl
bt
lea
stc
mov
clc
cmp
jmp
ror
mov
mov
xor
clc
rcr
mov
bt
pushf
pusha
add
call
mov
lea
sar
lea
sub
shl
sub
pushf
pushl
push
jmp
mov
push
pushf
popl
mov
jmp
jmp
call
and
mov
rcl
shl
mov
pushf
stc
add
pushf
pusha
mov
pushf
mov
pushf
movw
mov
push
lea
jmp
bt
xor
test
cmc
cmp
jmp
mov
mov
mov
mov
push
mov
jmp
pushf
lea
jne
pushf
jmp
sub
shrd
xor
pushf
setno
pushl
setnp
inc
inc
shrd
or
xor
bsr
mov
sub
movsbw
not
inc
and
sbb
shl
movzbl
pushf
cmp
test
mov
bt
pusha
stc
test
or
pushf
jmp
mov
clc
inc
add
mov
not
mov
call
movzww
cmc
clc
movb
xor
stc
test
pushl
stc
xchg
mov
clc
not
pusha
call
jmp
mov
mov
clc
clc
pusha
add
mov
lea
jmp
pushl
mov
movb
inc
jmp
cmp
jmp
jmp
lea
jp
divl
pusha
jmp
pushl
mov
pushf
lea
jmp
shr
mov
jmp
jmp
jp
pusha
push
mov
pusha
call
sar
bts
sub
xor
pushf
sub
add
neg
shrd
btc
clc
add
not
bts
cmc
add
and
pusha
add
setp
mov
pushf
clc
call
bts
push
sar
mov
movzbw
inc
bsr
xchg
mov
call
mov
mov
push
lea
jmp
mov
pushf
decl
call
call
ror
pop
not
movzbw
inc
not
shld
dec
lea
shl
sub
neg
lea
neg
movsbw
movzbl
rol
mov
pushf
call
mov
pushf
lea
jmp
bswap
setge
lahf
mov
push
pushf
pusha
mov
call
bt
pushf
pushf
add
call
movzbl
shr
rcr
xor
not
movsbw
ror
dec
cmp
bsf
bts
add
bsf
cmc
shl
not
shrd
bsf
cmp
xor
shr
mov
bt
pushf
add
pushl
pushl
mov
call
lea
je
pushf
mov
call
pushf
popl
movl
pushl
pushl
popl
mov
pushf
push
pushf
lea
jmp
call
not
pop
pushf
movw
mov
pusha
lea
jmp
mov
mov
mov
push
push
push
lea
jmp
mov
pusha
pusha
mov
push
pushl
pushf
movb
lea
jmp
bt
sub
jl
xor
pushf
movb
call
pushf
pushl
popl
pushl
push
movw
mov
lea
jmp
call
push
jmp
pushl
pushl
popf
pushf
pushf
lea
jmp
lahf
lea
mov
pusha
push
push
mov
call
pushf
popl
jmp
mov
movb
lea
jmp
neg
bt
mov
pusha
stc
rcl
rcr
mov
cmp
cmc
sub
push
shl
pusha
mov
pushf
pushl
jmp
pushf
call
ror
not
ror
mov
push
call
pusha
lea
jo
mov
call
pushf
pushf
jmp
bt
not
stc
mov
push
cmc
pusha
add
pushf
movb
lea
jo
mov
pusha
call
lahf
jmp
add
mov
lea
jmp
pusha
mov
pushf
pushf
mov
pushl
pushf
push
lea
jmp
mov
jmp
pushf
pushl
popl
pushf
lea
jmp
call
pushf
popl
pushf
pushl
popl
movb
push
pushf
mov
lea
jmp
call
btr
pushf
mov
bt
pusha
mov
add
push
pushl
push
pushf
lea
jmp
mov
pusha
pushf
mov
jmp
pushf
popl
call
rep
shrd
mov
btc
shl
mov
jmp
pusha
mov
push
mov
movb
lea
jmp
pusha
pushf
popl
jmp
push
and
mov
stc
add
push
lea
jmp
movsbw
rcl
btc
shl
mov
bsr
shl
call
not
stc
not
push
call
call
setge
pusha
not
mov
mov
lea
jae
pushf
mov
push
pushf
lea
jmp
sub
call
pushf
push
mov
pusha
mov
lea
jmp
mov
pushl
pushl
pushf
call
pushl
mov
movw
pushf
pushl
lea
jmp
shr
xor
mov
bsr
shld
add
test
and
shl
sub
bswap
test
and
cmp
mov
test
cmp
call
call
pushl
popl
movb
pushf
pushl
lea
jmp
call
movl
mov
pushf
pushf
jmp
dec
cmc
bt
not
stc
add
clc
pushl
sub
mov
mov
pushf
pushl
mov
movw
lea
jmp
add
stc
sar
stc
lea
test
cmp
bt
stc
cmp
pusha
push
pusha
pushf
lea
ja
rcr
mov
aad
lea
btr
add
btc
sub
daa
test
sar
xadd
lea
sbb
and
bswap
bswap
and
rol
stc
cmp
dec
sub
push
movzbw
bswap
mov
push
movsbw
pushl
pushf
pushf
popl
pop
call
pushl
mov
pushf
pushf
mov
pushf
lea
jmp
call
jmp
cwtl
mov
lahf
lea
movzbw
mov
pusha
call
call
pushf
popl
push
pusha
pushl
popl
pushf
mov
pushf
lea
jmp
setbe
push
movzbw
mov
not
pushf
repz
popl
call
movzbw
movzbw
cmc
test
mov
pusha
sub
jmp
call
shr
call
push
call
cmp
mov
lea
jne
test
xorb
ja
pop
pusha
pushf
lea
jmp
push
pushf
push
pushl
mov
jmp
test
add
pusha
pusha
push
movw
lea
jmp
pushf
mov
mov
pushf
pusha
push
mov
lea
movzbw
call
mov
jmp
call
bt
add
pusha
pushf
mov
movb
lea
jmp
pushf
pushl
popl
pushf
lea
jmp
movsbl
inc
shr
bt
xor
inc
xor
rcr
mov
bsr
shrd
rcr
sub
movzbw
xchg
mov
btc
mov
ror
bsf
add
btc
bt
mov
shr
shrd
movzbw
bt
sub
cmc
sub
rcl
ror
setno
lea
mov
inc
cmc
adc
lea
shl
shld
movzbw
sub
jbe
rcl
or
movzbl
xor
clc
bsr
dec
mov
push
pushf
stc
neg
pusha
cmp
cmp
stc
add
pushf
movw
jmp
call
mov
pushl
pushf
pushl
ret
pushf
pushf
pushf
cmpl
pushl
mov
call
call
mov
pusha
pushf
pushf
lea
jmp
btr
jmp
dec
mov
movzbw
rcl
adc
mov
call
call
pushl
push
mov
mov
pushl
ret
pusha
call
rol
shr
rcr
neg
mov
pusha
clc
sub
call
cmc
push
call
and
jmp
cmc
sub
stc
cmp
jmp
jmp
mov
setg
mov
call
pushf
pushf
pushf
popl
pusha
jmp
inc
pushf
mov
push
push
lea
jmp
cwtl
jmp
call
sub
mov
stc
cmp
bt
add
call
movb
pushf
mov
mov
jmp
pushf
popl
movb
pushl
popl
mov
mov
push
mov
lea
jmp
mov
jmp
mov
test
pusha
add
cmc
cmc
shld
call
cmp
test
sub
lea
jns
push
clc
pushf
and
call
call
cmc
shl
btc
mov
cmp
rcl
neg
pushf
sub
push
movzbw
inc
pusha
not
sbb
bswap
sar
neg
not
bswap
adc
test
sub
shld
bts
sbb
movzbw
mov
mov
movb
clc
add
sub
jbe
mov
bt
add
pusha
pusha
movb
lea
jmp
push
jmp
pusha
call
movb
pushl
popl
movb
mov
mov
movb
lea
jmp
mov
pushf
lea
jmp
cwtl
lahf
pushf
mov
movw
add
pushf
movb
mov
movb
pushf
call
pushf
pusha
mov
call
call
jg
pusha
divl
jmp
cmc
sub
jmp
pushf
pusha
call
jno
push
mov
pushf
push
movb
pushf
lea
jmp
pusha
mov
mov
pusha
call
not
pushf
call
push
pushf
mov
push
jmp
lea
js
pusha
mov
rep
stc
btc
btc
sbb
mov
pop
xor
bts
cmp
mov
pushl
cmp
jmp
neg
bsr
btc
mov
cmc
jmp
movl
mov
jmp
movsbw
mov
pushf
sub
clc
pushf
stc
add
call
mov
lea
jge
push
movb
movb
sub
pushf
mov
pusha
lea
jmp
jmp
pushf
pusha
pushf
pushl
popl
movb
push
pushl
pushf
lea
jmp
sbb
bts
movsbl
xor
and
cmc
not
movsbl
neg
shld
movb
rcl
add
sar
stc
cmc
neg
and
btc
seto
bts
sub
jne
mov
pusha
mov
sub
jmp
mov
rcl
xor
pushf
mov
bt
add
movw
shrd
call
cmp
xor
pushf
xchg
call
push
not
stc
and
jmp
pushf
pushl
popl
mov
pushf
pushf
push
lea
jmp
mov
pushl
movw
lea
jmp
jmp
mov
jmp
pushf
popl
mov
push
pushl
popl
push
pushf
push
push
lea
jmp
call
add
jmp
pusha
pushl
popl
pusha
push
pushf
lea
jmp
add
jmp
mov
lea
mov
pusha
pushf
lea
jnp
lea
pusha
call
mov
call
sub
jmp
push
movb
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
pusha
sbb
push
mov
call
jmp
adc
mov
cmp
pusha
stc
sub
push
movb
mov
pushl
lea
jmp
sbb
bt
pushf
add
mov
shr
add
neg
setl
mov
clc
test
pusha
mov
sub
clc
shr
movb
mov
push
pushf
popl
jmp
bsf
btc
bsr
movzww
clc
stc
xor
cmp
bt
pushf
mov
xchg
stc
cmc
cmp
not
bt
neg
pushf
xor
pushf
pushf
sub
jmp
call
pushf
pushf
popl
lea
jo
pushf
pusha
pushl
popl
movw
mov
pushf
mov
lea
jmp
xor
mov
call
mov
jmp
ljmp
mov
decl
out
decl
incl
cld
mov
ljmp
call
mov
lcall
clc
mov
lcall
mov
jmp
icebp
mov
incl
mov
pushl
mov
ljmp
fsubl
mov
cli
mov
jge
mov
jmp
mulb
incl
clc
mov
jmp
loope
jmp
jmp
out
decl
mov
lcall
in
pushl
loopne
ljmp
mov
ljmp
out
mov
pushl
clc
mov
inc
jmp
out
lcall
in
ljmp
mov
ljmp
out
pushl
loopne
mov
dec
in
mov
jecxz,pt
decl
icebp
mov
mov
call
mov
lcall
cli
mov
call
mov
mov
ljmp
mov
jmp
out
mov
pushl
mov
decl
dec
in
mov
decl
out
jmp
icebp
mov
incl
mulb
jmp
jmp
mov
jmp
pushl
loopne
jmp
cli
mov
jmp
loope
jmp
mov
lcall
mov
inc
inc
jmp
mov
lcall
mov
ljmp
mov
lcall
mov
incl
mull
lcall
repnz
lcall
mov
jge
mov
lcall
mov
lcall
mov
lcall
mov
incl
in
lcall
mov
ljmp
mov
lcall
mov
jmp
cli
mov
dec
cli
mov
jmp
mov
ljmp
loopne
jmp
loopne
dec
cli
mov
lcall
in
jge
mov
jmp
in
ljmp
icebp
mov
jmp
jecxz
lcall
mov
incl
mulb
pushl
jecxz
jmp
icebp
mov
ljmp
out
mov
jmp
loopne
incl
clc
mov
jmp
out
ljmp
mov
jmp
loopne
call
mov
jmp
in
jmp
call
mov
incl
mulb
jmp
cld
mov
jmp
loope
jmp
in
mov
pushl
clc
mov
jmp
ljmp
icebp
mov
mov
lcall
mov
jmp
mov
lcall
mov
jmp
out
mov
call
mov
incl
mov
jecxz,pt
pushl
out
jmp
mull
mov
cli
mov
jmp
mull
jmp
pushf
mov
pushf
lea
jmp
pushf
mov
mov
push
pusha
mov
lea
jmp
mov
pusha
pushl
lea
jmp
shl
aad
mov
bt
mov
stc
clc
cmc
cmp
sub
cmc
cmc
shr
pusha
movw
mov
pusha
jmp
pusha
pushl
popl
pushf
push
push
lea
jmp
cmp
clc
add
pushf
pushf
pushf
movl
lea
jmp
add
push
pushf
call
repz
popl
rol
bswap
btc
setle
pushl
bts
rcl
push
rol
btr
not
lea
mov
rol
cmc
cmc
ror
pusha
inc
shr
add
pushf
xor
neg
shrd
neg
lea
push
dec
btr
sub
xor
dec
pusha
lea
test
cmp
mov
cmc
shld
pushl
jmp
adc
dec
movzbl
sar
movzbw
shrd
jmp
pushl
popl
movl
mov
movw
lea
jmp
call
mov
pusha
lea
jmp
call
add
call
push
setb
pushf
bswap
mov
jmp
sar
clc
add
movzbl
bt
cmp
sub
pushf
pusha
pusha
xor
call
pushf
mov
pushl
push
pushl
lea
jmp
lea
mov
test
pusha
call
mov
cmc
clc
stc
add
mov
movl
lea
jmp
xor
pushl
pushf
push
bt
ror
push
test
add
call
call
pushf
popl
lea
jne
pushf
pushl
popl
push
push
push
lea
jmp
pushf
mov
push
mov
pusha
lea
jne
btr
or
mov
clc
test
and
clc
call
movb
inc
movw
cmp
movb
not
call
shrd
rcl
shl
mov
neg
inc
setbe
mov
clc
call
sub
cmc
stc
movb
pushf
mov
cmp
clc
cmp
sub
jmp
jmp
push
cwtl
test
jmp
bsr
and
bswap
call
cmp
cmc
setns
call
dec
lea
add
mov
mov
sar
add
movzbw
mov
call
mov
jmp
jmp
mov
clc
test
mov
push
add
push
push
pushf
pushf
lea
jmp
not
xchg
not
xchg
push
bswap
call
mov
stc
neg
test
cmp
add
call
bt
clc
sar
cmc
mov
stc
sub
pushf
add
movb
pushf
popl
pushf
call
jmp
mov
pusha
movb
mov
lea
jmp
cmc
sub
pushl
cbtw
cmp
pushf
pushf
cwtl
pushl
cmp
sub
cmp
bt
cmp
mov
movb
pushf
stc
add
pushl
lea
jmp
pusha
pushf
mov
pushf
pushf
pushf
mov
lea
jmp
push
push
pushf
mov
movl
movb
lea
jmp
sub
clc
jmp
adc
rcl
not
bswap
mov
call
pushl
popl
pushf
push
pushf
mov
lea
jmp
jmp
pusha
mov
pushl
push
pushf
pushf
lea
jmp
push
lea
je
cmc
sub
push
xchg
clc
mov
stc
sub
push
lea
jne
pushf
pusha
call
mov
movb
lea
jmp
pushf
mov
pushf
push
pushf
pusha
lea
jmp
daa
cltd
push
mov
push
xor
mov
jmp
stc
call
mov
mov
push
jmp
mov
pusha
pushl
movw
lea
jmp
jmp
movb
pushl
pushl
popl
bt
movw
mov
add
clc
std
mov
pushl
popf
push
push
push
lea
jmp
or
shr
mov
ror
or
stc
mov
bt
sub
test
shl
call
jmp
pushf
stc
pushf
xor
call
cwtl
push
cmc
sub
bt
cmc
jmp
bt
clc
cmp
sub
pushf
pusha
bt
cbtw
mov
call
call
btc
mov
pusha
add
pushf
pushf
mov
lea
jmp
call
pushf
call
mov
mov
movb
jmp
lea
js
mov
pusha
push
mov
movb
lea
jmp
not
call
xchg
bswap
setnp
pushf
mov
setp
push
lea
push
lea
jge
push
jmp
pusha
mov
jmp
jmp
clc
jmp
pusha
pushf
mov
mov
push
mov
pushf
pushf
push
lea
jmp
movw
call
call
pushl
popl
bswap
bts
push
not
cmc
lea
stc
mov
setnp
mov
not
ror
inc
xchg
jmp
sar
mov
bswap
movzbl
or
or
mov
stc
neg
pushf
movw
push
call
bt
mov
movb
push
add
mov
lea
jmp
jmp
movzbw
sar
mov
add
shl
mov
pushf
test
movb
stc
add
jmp
mov
mov
pusha
call
add
pushf
movb
pushf
lea
jmp
stc
bts
add
mov
pusha
cmp
pushf
call
movb
mov
jmp
pusha
movzbl
not
pop
mov
not
movzbw
movzbw
call
cmc
push
mov
test
push
movb
jmp
bt
test
xor
jmp
cld
pushl
xchg
movsbw
mov
bswap
movzbl
pusha
lea
std
mov
movzbw
lea
pop
mov
push
cld
call
mov
pusha
lea
cpuid
stc
sub
jmp
call
jmp
pusha
mov
push
pushl
lea
jmp
mov
push
push
pushl
lea
jmp
call
xchg
shrd
rdtsc
clc
cmp
sub
jmp
pusha
mov
push
lea
jmp
mov
pushl
movb
pushf
pushl
pushl
ret
stc
mov
cmc
add
pushf
cmc
pusha
movb
lea
pushl
movw
pushf
ror
pushf
mov
call
test
pushl
popf
pusha
mov
pushf
lea
jmp
pushf
mov
jmp
call
rol
dec
or
call
not
movzbl
jmp
pusha
mov
movw
movw
lea
jmp
pushl
popl
pushf
movb
movb
lea
jmp
pushf
push
call
call
not
not
pop
movsbw
pop
pusha
push
pushl
ret
mov
mov
pushl
mov
lea
jmp
mov
push
lea
jmp
pushf
mov
jmp
mov
xor
mov
pushf
bt
pushl
pushf
sub
pushl
cmc
test
bt
shl
mov
mov
mov
pushl
pushf
popl
pushf
pushf
call
call
inc
push
call
add
add
pushf
mov
pushf
pushl
mov
lea
jmp
pusha
mov
mov
pushf
lea
jmp
pusha
pushf
mov
push
call
push
push
pushf
popl
jmp
pusha
call
push
pushf
pushf
pushf
popl
call
add
push
push
push
mov
lea
jmp
mov
push
pushf
pushl
pushl
lea
jmp
shl
test
test
shr
pushf
test
push
clc
or
bt
xor
movb
pusha
inc
jmp
cltd
neg
rdtsc
dec
mov
cmc
aam
pop
sets
xor
aad
pop
aam
clc
daa
popf
cwtl
push
movsbw
mov
cwtl
setae
lahf
mov
pusha
push
mov
mov
pushf
mov
xchg
lea
not
mov
movzbw
mov
lea
lea
jg
pop
push
pusha
bswap
mov
pushf
push
movb
pushl
ret
call
jmp
jmp
mov
movb
mov
lea
jmp
pushf
popl
push
push
mov
jmp
xor
jmp
sub
jmp
mov
push
push
movb
pushl
ret
pushf
popl
push
pushl
popl
movw
movb
pushf
lea
jmp
mov
pushf
mov
jmp
inc
xor
bsr
lea
mov
stc
sub
pushf
pushf
pushf
jmp
ror
btc
shld
mov
sar
mov
pushf
clc
pusha
add
movw
pusha
mov
push
movb
push
lea
jmp
call
jmp
push
divl
push
pusha
push
mov
call
cmc
neg
clc
bt
call
pushf
pushf
mov
jmp
jmp
pusha
call
mov
lea
jmp
add
pusha
jmp
jmp
mov
movw
pushf
mov
pushf
lea
jmp
neg
aam
mov
not
btr
shrd
bsf
mov
cmp
bt
clc
call
pusha
mov
mov
pushf
mov
lea
jmp
xor
dec
mov
push
cmp
add
pushf
pushf
mov
push
lea
jmp
pushf
pushf
not
pusha
inc
call
aam
notl
rcr
mov
push
pusha
call
sub
lea
jl
pushf
mov
push
pusha
pushf
lea
jmp
pushl
popl
movw
pushf
push
movb
lea
jmp
rol
mov
push
movb
adc
clc
mov
test
add
pusha
push
jmp
inc
stc
test
mov
stc
clc
sub
clc
test
xor
pusha
pusha
mov
pushf
inc
cmp
call
call
movsbw
dec
mov
xor
dec
rcr
and
mov
push
bt
push
bt
add
pushf
pusha
lea
jg
pusha
mov
movb
pushl
pushl
lea
jmp
call
test
test
push
and
call
inc
pusha
pushl
pushl
pushf
lea
jmp
lea
cmp
stc
test
cmc
neg
cmc
jmp
call
