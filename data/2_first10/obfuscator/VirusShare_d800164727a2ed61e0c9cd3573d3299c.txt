push
cli
pushf
sahf
jae
and
xor
dec
jnp
jmp
insb
stc
cli
mov
fdivp
enter
cmc
insb
scas
or
add
int
mov
pusha
loop
ja
movsb
fiaddl
jg
cmpsl
sub
cld
rolb
stc
cmp
pop
mov
lods
fistpll
jns
jbe
sbb
jb
mov
mov
and
cmp
les
jecxz
cmp
mov
outsb
sbb
mov
ret
jge
add
sbb
addr16
leave
xchg
push
jp
int
data16
sbb
test
idivb
div
pop
and
mov
fstps
inc
inc
repz
adc
mov
test
and
and
shrl
dec
jl
push
in
sbb
push
xor
mov
xchg
std
adc
push
push
xor
and
adc
adc
int3
dec
pushf
cli
adc
pusha
pusha
xchg
jmp
jmp
pusha
pushl
ret
not
lea
pusha
push
jmp
push
lds
sub
jne
cmpb
icebp
jne
jb
mov
dec
dec
dec
sbb
pop
mov
mov
pushf
push
ffree
adc
or
fsubl
add
inc
daa
stc
in
lods
mov
call
sahf
or
cld
std
pop
nop
mov
push
arpl
lahf
xor
add
movl
pusha
lea
jmp
lea
jne
bsr
rol
shr
mov
bt
sub
or
shr
mov
push
pushf
bt
sub
pusha
clc
pushl
popl
cmp
cmp
mov
pusha
call
bt
repnz
pushf
movb
call
shl
pushf
lea
je
push
mov
call
call
add
sbb
xchg
imul
add
sbb
out
push
add
add
add
add
add
add
das
push
add
test
cmp
add
pusha
mov
lea
jmp
pushf
pusha
call
ror
stc
mov
push
cmp
pushl
stc
cmpb
jmp
pushf
push
lea
call
push
push
mov
pushf
pushl
lea
jmp
call
sub
mov
sbb
mov
aas
push
mov
adc
jbe
cld
sbb
test
inc
out
inc
insl
icebp
ds
jl
inc
mov
outsb
movsb
jg
xchg
or
call
cmp
inc
gs
icebp
mov
dec
loop
xchg
mov
int3
loopne
ret
or
mov
ftst
test
cld
dec
inc
das
adc
in
adc
xchg
cmp
not
xchg
mov
mul
ret
xor
int3
std
call
push
sub
scas
or
ficoms
loope
outsb
fwait
mov
inc
incb
mov
aas
mov
add
repnz
xchg
daa
pop
jmp
inc
test
lea
cmp
ja
pop
stos
jp
mov
scas
ret
dec
adc
inc
lcall
loop
and
decb
fs
jmp
arpl
or
mov
pop
xchg
out
mov
dec
cltd
test
sbb
lret
xchg
mov
cli
mov
lds
andl
ret
les
xor
out
add
push
xchg
add
loop
sub
push
pop
inc
mov
out
add
jl
mov
test
mov
mov
dec
clc
loop
push
xor
pop
lret
insb
out
push
jecxz
test
dec
xchg
jmp
jbe
leave
dec
xchg
je
mov
lods
sub
pop
enter
fldenv
xchg
dec
cmp
and
and
xlat
enter
outsl
lock
push
stos
xchg
xor
mov
mov
test
or
test
mov
jnp
mov
xor
push
andl
adcb
outsl
and
sbb
mov
inc
mov
adc
fcompl
inc
xchg
sbb
sbb
out
and
ret
and
sbb
or
adc
push
fstl
sub
dec
sbb
pop
add
and
lcall
int
lret
int
pop
pop
inc
leave
sbb
lea
mov
pusha
jnp
and
dec
push
inc
push
fcmovnbe
or
rolb
jmp
adc
je
popf
inc
enter
add
pusha
out
inc
jmp
cmp
fisttpl
arpl
arpl
sub
in
mov
gs
pop
dec
add
jg
lods
mov
add
movsb
scas
insb
adcl
jle
frstor
js
arpl
push
cmpsl
mov
insb
inc
std
sbb
push
test
loop
add
mov
loope
add
loopne
pop
xor
shlb
jecxz
add
mov
ret
sbb
rclb
out
testl
jle
aam
mov
push
aaa
cmpsl
gs
ret
add
add
fs
imul
add
push
inc
xchg
xor
mov
out
push
xlat
sti
push
mov
mov
inc
fdivrl
cmpsl
in
insl
ret
mov
jno
cmp
movsl
push
fcomi
xor
cmpsl
fdivr
lock
scas
xchg
sbb
jl
dec
jmp
sbb
in
ret
repnz
dec
push
loope
outsb
xchg
lret
inc
mov
push
stc
inc
mov
cld
loope
or
cli
mov
gs
fimull
jno
ret
cmpsb
mov
imul
or
jns
neg
jno
push
xor
and
xchg
jg
clc
add
dec
outsl
add
xor
pusha
cmc
loope
inc
mov
add
bound
push
or
lock
daa
inc
and
sub
mov
mov
sub
repnz
insb
mov
adc
pop
dec
jno
mov
cwtl
fdivr
mov
and
xchg
es
xlat
push
scas
add
pushf
std
add
ret
add
insl
push
adc
cmpsb
cmp
out
adc
dec
mov
push
sahf
jg
std
or
dec
xor
mov
push
jb
pop
fidivs
lahf
fdivl
xor
dec
in
dec
sahf
xor
nop
xchg
push
inc
or
das
adc
shrb
xchg
cwtl
or
shl
ret
push
mov
cmp
push
mov
xchg
incb
xchg
jl
movsb
loop
mov
lods
loopne
and
scas
or
iret
and
fisubrl
mov
out
mov
mov
clc
and
inc
and
clc
mov
adc
out
push
pop
out
mov
cmpsl
adc
inc
fstl
out
divb
sbb
ret
push
test
flds
jae
aam
inc
jmp
adc
sub
pusha
shufps
negl
push
stos
push
mov
cmp
sub
mov
imul
lods
sti
cmp
jmp
pop
int
mov
clc
rolb
jae
pusha
and
and
popa
sub
std
js
movsl
mov
jmp
sub
mov
aam
inc
enter
add
ss
jbe
out
fiadds
pushw
and
mov
and
mov
test
add
loopne
mov
mov
call
out
lcall
inc
test
push
xor
xor
or
dec
xor
pop
dec
test
and
jl
imul
mov
daa
inc
push
lcall
jne
xor
inc
mov
mov
adc
stos
roll
sub
push
pop
insb
jge
cmp
pop
es
movsb
cs
mov
sbb
imul
dec
xor
neg
dec
into
subb
mov
jae
inc
pop
pop
add
sbb
loop
add
cmp
movl
jmp
inc
clc
shr
call
add
pushf
push
cmc
cmp
push
lea
jb
jmp
movl
pushf
mov
pushf
lea
jmp
push
call
pusha
pusha
movw
push
or
push
pushl
pushf
call
pushf
mov
mov
lea
jne
test
movsbw
xchg
shr
mov
mov
push
shl
pop
sub
pushf
lea
jbe
shl
mov
jl
sub
cmp
bt
pushl
cmp
bt
stc
test
cmp
jmp
stc
cmp
jmp
fnstsw
sub
jnp
pop
out
sti
jnp
sbb
pop
xor
shll
fidivs
mov
lret
in
in
mov
jecxz
mov
xchg
pop
rclb
lcall
fdivr
lock
lods
push
inc
inc
mov
add
pushf
fists
imul
mov
push
cmc
lods
out
out
das
sbb
push
ds
insl
mov
push
in
and
test
shrl
dec
scas
jbe
cwtl
add
pushw
sbb
jb
mul
add
push
loop
call
or
cld
loop
push
xor
aas
pop
cltd
jge
jbe
lods
and
sbb
cltd
mov
mov
xor
inc
pop
flds
lds
fistpl
jbe
int
xchg
cmp
lret
rcrl
stos
xor
cli
jbe
pop
aad
jmp
bound
inc
mov
dec
cmp
jmp
das
dec
gs
lea
test
add
fsubrl
mov
add
ja
imul
insl
mov
pop
ja
sbb
or
es
push
loop
out
pop
test
or
mov
pushf
lea
je
cmc
jmp
test
jmp
lea
jmp
movl
push
lea
jmp
call
rcl
stc
mov
btc
shld
push
daa
shl
sub
movzbw
mov
jmp
mov
xor
dec
add
mov
mov
adc
mov
push
mov
test
jno
and
xor
rorl
mov
fcoms
inc
or
push
dec
xchg
lods
dec
push
lods
mov
stos
test
sbb
in
ret
sbb
loopne
mov
fadds
addr16
loope
fiaddl
fwait
add
xor
inc
pop
mov
add
inc
pop
and
movzbl
loopne
shrl
jmp
xchg
cmp
dec
dec
xor
push
dec
xor
insl
lahf
aad
es
lcall
repz
test
mov
out
out
outsl
mov
pop
mov
or
jge
push
cltd
cmpsl
in
sbb
jmp
ds
xchg
std
cltd
jmp
xchg
insb
add
dec
fmul
loop
pusha
jp
btc
or
bswap
mov
cmc
push
jmp
faddl
dec
adc
sub
stc
int
and
jb
jmp
mov
scas
or
jg
fistl
ret
call
push
movsb
and
cmc
pushw
mov
sub
call
lea
jbe
push
pushf
pushl
popl
movb
pushl
ret
in
outsb
stos
xchg
stos
push
test
jge
ljmp
fisubl
fidivrs
sub
cmp
xchg
sti
jns
cmp
int3
xchg
rcrb
cld
adc
cmpsl
add
mul
outsl
xchg
and
call
xlat
jb
mov
test
int
mov
imul
ds
xchg
jp
in
dec
push
lods
filds
pusha
pop
and
sbb
imul
inc
or
cmp
sub
loope
adc
hlt
sub
scas
les
dec
repnz
xchg
mov
sti
les
push
sub
jmp
stos
xchg
arpl
notl
jo
or
test
adc
sbb
xchg
jl
push
cmp
sbb
mov
or
cli
pop
sub
fs
cs
mov
pop
and
sbb
lret
jae
push
mov
sub
or
in
flds
out
add
lock
jge
lea
mov
insl
js
and
jmp
push
adc
push
shlb
and
sbb
xchg
xorl
cltd
dec
out
add
mov
inc
call
push
add
sub
popf
iret
xor
scas
sbb
popf
scas
jl
sub
loop
pop
rcll
int3
test
xor
leave
pushf
mul
xchg
and
sbb
sahf
xorl
mov
pop
and
or
and
pop
in
pop
aas
push
notl
pop
push
xchg
push
test
mov
jbe
lods
out
gs
sar
pop
in
les
mov
dec
jo
addr16
jp
xchg
paddsw
xchg
movsb
mov
rorl
in
push
sub
loope
mov
lret
push
in
mov
or
sbb
test
ficoml
ret
imul
cwtl
xor
aad
and
sub
push
cltd
jp
pop
subb
pandn
pop
or
jg
mov
pop
mov
sbb
sub
jecxz
or
enter
in
cwtl
pop
inc
xchg
xor
cli
xchg
or
movsl
push
or
sar
rolb
mov
inc
sahf
pop
add
clc
nop
imul
in
popa
pop
mov
xchg
add
or
xor
push
sarb
int
dec
pop
cmp
mov
and
pop
movsb
mov
cmp
dec
xchg
divl
testl
mov
push
jno
repnz
into
xor
jmp
loop
sti
push
adc
pop
sbb
jne
mov
mov
rcrb
aas
cmc
jp
fsubrl
fidivs
testb
iret
test
cmpsl
out
fcom
fsubl
xor
mov
loopne
inc
lret
mov
dec
or
cwtl
mov
in
mov
sti
xchg
push
outsl
jbe
psrad
sti
and
xchg
sahf
sbb
jmp
rcrl
mov
lret
mov
iret
mov
push
clc
rcrl
mov
rclb
repnz
sbb
mov
and
mov
jl
out
jae
sub
ret
cmp
add
aas
insl
mov
mov
sbb
mov
jecxz
dec
jbe
lcall
test
mov
scas
movsl
imull
movb
push
sbb
lds
mov
inc
push
cli
loop
stc
lock
inc
and
pop
jns
adc
loope
add
inc
and
add
add
mov
pushl
bswap
lea
mov
call
lea
ja
dec
inc
bt
add
shl
sbb
cmp
mov
jmp
pushf
lea
jne
not
pushf
cwtl
movb
bswap
lea
pushl
mov
mov
call
jmp
rcl
shr
mov
bt
cmp
pushf
lea
jb
pushf
test
cmp
call
jmp
mov
push
pushf
pushl
ret
pushl
pushl
movl
push
pushf
pushf
push
lea
jmp
clc
push
test
pushl
jmp
movl
call
movl
push
push
mov
lea
jmp
mov
sbb
push
scas
aas
add
lea
push
add
scas
xor
inc
adc
in
adc
jg
out
int
adc
aaa
adc
ljmp
mov
xchg
or
pop
jo
add
or
inc
stos
in
mov
lret
das
popa
insb
dec
push
cmp
dec
mov
push
jae
lcall
sarb
pop
jg
mov
inc
xor
mov
movsb
and
xchg
subb
stos
sbb
sti
or
clc
jge
sbbb
subb
and
jae
movsbw
xchg
bsf
mov
call
jle
inc
cmp
xor
or
xchg
pushf
mov
loope
in
mov
push
bnd
mov
sbb
ret
inc
out
push
cmpb
in
mov
jmp
repz
push
jb
out
movsb
loope
cmc
sub
xor
fbld
outsl
and
imul
cmpsb
in
ja
inc
sbb
sbb
stos
mov
in
ss
xor
mov
cltd
xor
xor
inc
jmp
outsl
addr16
cmpsb
adc
outsl
repz
pop
lea
jle
test
sub
fwait
lahf
sub
pop
shll
in
and
ffree
mov
mov
and
mov
cmpsl
lock
addr16
mov
mov
movsl
mov
mov
outsb
dec
jmp
sub
and
push
lods
loop
arpl
mov
fidivs
ss
dec
add
shl
mov
jle
repz
in
inc
xchg
sub
push
sub
mulb
xchg
cwtl
xlat
cmp
imul
sub
movsb
or
gs
frstor
lea
sbb
out
mov
add
cld
cmp
imul
ja
imul
dec
xchg
in
jne
sub
mov
add
stos
xchg
and
mov
jne
and
mov
daa
mov
aad
clc
add
movsb
sub
xlat
jp
loope
and
repz
iret
ret
test
jmp
sub
sahf
xor
sbb
inc
xchg
dec
adc
and
sbb
and
roll
popf
xor
lcall
mov
mov
mov
dec
adcw
cltd
sub
mov
fld1
dec
loop
inc
into
add
in
enter
lea
fstps
sahf
into
mov
pop
mov
cli
sbb
jle
or
and
out
repz
and
fstps
xor
scas
inc
sub
push
pop
inc
repz
test
sub
sub
fdiv
cld
rcll
ret
push
xchg
call
mov
mov
sti
and
inc
mov
adc
arpl
jno
mov
int3
daa
aas
iret
lea
mov
mov
mov
ficomps
int3
imul
mov
xchg
sbb
sub
mov
adc
outsl
movsb
mov
stc
inc
mov
inc
jecxz
movsb
int
adc
imul
arpl
pop
mov
ret
pop
and
mov
aam
sub
pop
ficoms
rcrl
sub
adc
adc
fwait
outsl
loope
jb
jecxz
xor
jmp
jne
fwait
xor
and
pop
imul
out
cli
popa
mov
out
jl
add
sub
mov
ret
pop
in
adc
xchg
jne
cld
sub
inc
jae
test
or
negl
cwtl
fwait
jp
lock
and
add
xchg
outsl
and
nop
adc
popf
xchg
adc
and
cmp
pop
icebp
adc
movsb
mov
aaa
and
xchg
or
add
mov
add
or
ljmp
mov
loopne
add
mov
fiaddl
mov
jno
inc
jmp
in
loope
sbb
inc
lret
sbb
push
adc
xchg
xor
mov
add
lea
mov
mov
sbb
inc
push
sahf
xchg
cmp
pop
xchg
js
jecxz
jg
imul
fdivl
scas
push
sbb
leave
and
mov
cltd
xchg
mov
xchg
fnstenv
jne
push
jo
testl
sbb
push
mov
lods
or
push
sbb
testb
push
cmp
add
pop
mov
xchg
mov
js
test
mul
pop
dec
scas
scas
lcall
push
mov
adc
adc
push
mov
adc
aad
test
scas
inc
adc
ret
cwtl
cmp
je
addr16
mov
in
loope
mov
test
leave
jge
lcall
adcl
stos
inc
mov
jno
lea
repnz
inc
jge
sub
mov
xor
movsb
mov
jns
pop
sub
jl
xor
lea
pop
xchg
nop
xchg
lea
xchg
shll
push
dec
sbb
mov
mov
rcrl
mov
push
std
jae
mov
pop
cltd
arpl
xchg
push
xchg
sub
fisttpll
in
push
mov
push
ljmp
inc
xchg
lods
mov
jo
incl
sbb
mov
or
notl
sub
sbb
iret
pop
add
sub
lock
dec
inc
or
dec
loopne
mov
push
je
fildll
inc
lcall
lock
jne
rep
and
push
clc
pop
fadds
inc
imul
or
repz
pop
bound
or
mov
cs
decl
push
add
push
xor
mov
popf
adcl
dec
ljmp
and
adc
xchg
jle,pt
jne
adcl
adc
shrb
cmp
xchg
sub
or
cwtl
adc
movsb
jle
or
and
jecxz
sub
mov
dec
in
les
xchg
out
aam
loopne
int3
int
lahf
inc
orb
adc
inc
bound
push
and
push
shll
sub
sbb
push
inc
loopne
addr16
mov
orb
sbb
iret
push
and
rcrb
outsl
lds
dec
popa
mov
test
lahf
xchg
stos
pop
and
jae
xchg
pop
mov
push
adcl
movsb
sbb
leave
pushf
jle
aam
dec
xlat
mov
inc
jmp
mov
lahf
jecxz
mov
xchg
sub
cld
dec
sbb
cmp
test
mov
daa
cmp
mov
xchg
mov
aas
sbb
or
adcl
cmp
scas
insb
cmp
les
sub
pusha
mov
and
fwait
sarl
add
popf
outsb
ret
data16
mov
out
cltd
cmp
mov
jnp
pop
outsl
fs
adc
in
xchg
mov
fidivs
movsl
xor
shll
xchg
shrl
or
insl
cmp
pop
mov
insl
sbb
xchg
mov
pop
loop
insb
cmp
repz
xor
and
dec
lds
bound
inc
add
test
test
sub
pop
lea
sub
popa
mov
aam
jne
adc
pop
movsb
xchg
loope
jb
adc
pop
cwtl
mov
es
and
imul
out
add
rcrb
out
pop
xchg
clc
insl
movsb
mov
dec
xor
lods
push
pop
cmpb
icebp
stos
fadd
sbb
rolb
imul
lea
ret
mov
pop
stc
cmp
imul
mov
in
bound
mov
sub
inc
cmp
repz
lret
cltd
sbb
adc
pop
xlat
pop
movsb
insl
sub
sahf
es
push
mov
daa
in
inc
inc
popf
jg
shl
push
push
ss
sbb
and
jp
loopne
fistps
xchg
je
int
lods
cltd
add
aas
mov
data16
imul
movsb
sbb
imul
xor
fimull
and
sub
sbb
mov
and
lock
jge
movsb
dec
fdivrl
mov
pop
jno
out
hlt
jae
cmp
cwtl
gs
call
jle
cltd
mov
jl
movsb
fists
arpl
out
sbb
jmp
ret
jno
pushf
xor
int
push
gs
cmpsl
mov
test
xchg
cmc
fucom
mov
test
add
mov
hlt
and
mov
or
packsswb
lea
loope
pop
mov
lock
mov
cmp
andb
aas
jp
mov
imul
jecxz
cld
cwtl
xor
cltd
subb
inc
out
mov
adc
xchg
repnz
iret
movsl
mov
jae
dec
inc
loop
add
enter
lods
iret
std
cmp
bound
int3
push
mov
repnz
filds
sub
pop
add
mov
fcomps
shl
enter
test
ret
inc
out
mov
testb
je
fwait
adc
ds
lcall
fsubs
inc
xchg
shr
std
sub
fldl
add
inc
aas
inc
xchg
out
rolb
sahf
fwait
mov
inc
xor
jbe
inc
sub
in
sbb
pushf
jno
mov
jae
lret
mov
frstor
mov
test
popf
aam
jne
sbb
cmp
lock
jle
pop
add
cwtl
sub
inc
xchg
xchg
insl
fdivl
push
fists
dec
and
daa
inc
adc
push
repz
xchg
mov
xchg
push
pop
xor
lods
lret
xchg
insb
xchg
incb
mov
xchg
or
nop
mov
adc
xchg
enter
pop
xchg
mov
shll
jb
popf
jle
imulb
xor
inc
sahf
bound
arpl
out
jp
loope
daa
xchg
push
add
inc
xchg
das
mov
or
imul
add
punpcklwd
xor
inc
lahf
or
notl
sub
repz
imul
jg
hlt
mov
testb
insl
imul
jne
add
and
hlt
and
outsb
jle
sub
mov
rcrl
inc
mov
in
inc
outsl
mov
adcl
push
fwait
aad
mov
lea
test
pop
mov
add
sahf
pushf
or
dec
sbb
imul
addr16
outsb
mov
ret
or
and
out
call
lcall
out
sti
insb
fldt
insb
cmp
imul
adc
mull
cmpsl
sbbl
cmc
stc
push
xchg
push
xchg
daa
hlt
sub
dec
sbb
pop
sub
xchg
loope
aad
sub
xor
movsb
in
push
jae
mov
sahf
loope
cmp
cwtl
jge
sub
mov
and
inc
pushf
mov
xchg
sbb
pop
sti
or
sti
cltd
cmpsl
fnstsw
fld1
nop
orb
sub
xchg
sbb
int
pop
cltd
pop
sbb
in
cmp
inc
test
sub
movsl
pop
and
int3
ljmp
push
fwait
mov
je
pop
add
sub
fwait
push
mov
dec
scas
notl
dec
sbb
cmpl
push
loope
xchg
popa
mov
and
pop
je
aad
and
mov
pop
jle
out
dec
mov
insb
arpl
out
pop
popf
inc
lcall
gs
mov
or
les
hlt
xchg
cltd
nop
inc
jno
jae
in
dec
ret
shll
hlt
cmp
movsl
xchg
repz
sub
mov
cmp
jle
imul
arpl
fisubrs
lea
scas
repz
pop
xchg
mov
inc
sbb
fwait
fwait
sub
or
push
mov
lods
or
push
xchg
cs
jg
and
inc
lret
sub
stos
test
add
pushf
das
subb
sub
mov
cmp
add
stos
imul
ret
sub
dec
add
movsb
mov
mov
add
inc
jp
pop
test
lock
loop
cltd
insl
and
adc
jnp,pt
push
iret
pop
sub
lret
rol
testl
jae
dec
push
insl
ja
cmpsl
cli
in
notl
movsl
sub
and
mov
xlat
imul
cli
mov
jo
inc
call
mov
out
mov
and
sub
jne
sub
lret
xor
sahf
popf
push
and
cmp
in
lock
push
daa
dec
jecxz
pop
xchg
cld
test
sarl
adc
and
andl
jl
in
divl
jne
mov
dec
inc
inc
sbb
push
jnp
repnz
das
adc
push
sahf
xor
lahf
mov
daa
lea
sub
ret
fildll
pop
nop
xor
test
imul
mov
mov
pop
inc
xor
sub
jg
dec
cmp
fs
into
popa
subb
pop
lock
sbb
in
ljmp
mov
push
pop
jne
xchg
int3
scas
and
in
insb
jp
mov
or
incl
cmp
add
popa
adc
pop
gs
out
cs
cmpl
adc
cwtl
cmpsl
jnp
hlt
inc
ret
andb
mov
push
cmpsb
and
mov
in
imul
out
inc
sahf
dec
in
push
movsb
into
jle
adcb
into
fistpl
cmpsb
test
fisttps
mov
sub
lahf
push
jbe
lock
leave
push
gs
xor
in
xchg
imul
nop
mov
mov
xchg
mov
test
imul
mov
fistps
xchg
sub
subl
movsb
add
outsl
xchg
cmpsb
sub
jmp
adcb
push
xlat
push
sbb
push
loop
loop
cmp
jg
fldl
ret
mov
insl
inc
adc
loope
mov
xchg
cmpb
mov
xchg
test
pop
test
lahf
je
and
inc
test
xchg
inc
mov
jb
mov
fdivp
js
jle
xchg
jnp
fildl
pop
arpl
aaa
shlb
sti
jmp
dec
dec
cmpsl
shll
imul
stos
sbb
push
ret
aad
cli
les
outsl
mov
cmp
test
xchg
cmp
xchg
pushf
push
and
rcrb
inc
jne
or
lea
jnp
cwtl
jae
daa
or
and
lcall
leave
movsb
nop
add
gs
xor
inc
adcb
xor
test
and
lods
addr16
insl
sub
pusha
push
js
int3
jecxz
dec
lcall
in
mov
test
fisttpl
sbb
movsb
push
jns
pop
or
jno
mov
sbb
out
shrl
lcall
aas
popf
out
outsl
pop
imul
cmp
imul
sub
inc
bound
push
loope
mov
adc
xchg
lahf
push
and
dec
call
addr16
les
add
in
repz
ja
pop
lea
mov
clc
push
cmp
movsb
lretw
ja
int
imul
imul
cmpsl
hlt
int3
filds
addl
or
push
and
rorb
mov
pop
adc
inc
loopne
hlt
adc
adc
and
insl
sbbl
sbb
and
iret
adc
daa
pushf
sub
pop
or
push
rorb
and
daa
rcll
imul
loopne
jb
fldl
or
sahf
aas
jne
sbb
xchg
mov
xchg
scas
pop
adc
imul
add
pop
stos
pop
test
pop
xchg
lock
xchg
orb
lret
mov
loop
add
lret
ja
pop
lock
arpl
jecxz
mov
adc
je
les
and
sub
mov
adc
cld
mov
lods
and
xor
mov
cmpsl
es
jg
mov
mov
push
add
add
sbb
sub
lcall
adc
popf
sbb
rcl
popa
sub
push
mov
mov
gs
addr16
xor
pushf
shlb
add
xchg
jmp
inc
adc
xchg
add
ret
and
mov
inc
lahf
test
sti
push
hlt
mov
and
jecxz
lea
jl
and
shlb
imul
leave
lods
cli
imul
pop
inc
call
add
and
cmpsl
ds
test
inc
imul
repnz
call
test
mov
into
sub
sub
add
sbb
jns
sub
cmp
mov
out
xchg
test
lahf
fcom
xchg
divl
mov
das
lock
xor
inc
inc
sub
push
popa
ret
pop
jbe
in
jle
and
cmpl
dec
sbb
pop
fwait
or
pop
or
dec
leave
mov
fwait
in
and
mov
and
mov
in
scas
xor
mov
repnz
mov
cmpsl
jno
daa
lea
inc
mov
imul
and
dec
sub
in
jno
inc
push
and
repnz
je
jmp
mov
lret
cmp
in
insb
and
in
addb
pop
imul
iret
lahf
jg
sub
or
and
incb
cwtl
sub
inc
ret
push
jno
gs
daa
inc
inc
pop
je
stos
repnz
jle
aas
mov
jno
mov
je
pop
dec
cltd
sbb
lods
out
loop
je
and
jno
pop
jecxz
and
xor
icebp
jecxz
push
cmc
mov
test
dec
xchg
pop
cmp
test
out
jae
mov
push
cmp
jne
and
dec
sub
stc
inc
ret
hlt
call
cmp
fistpll
call
sub
ja
inc
xchg
sar
aad
pop
inc
xchg
les
push
adc
lds
pop
jae
and
out
add
mov
notb
addr16
repnz
pop
ss
hlt
mov
add
rcrl
push
insb
clc
popf
fistpll
daa
test
and
push
push
xlat
pusha
mov
push
jae
mov
in
imul
sbb
pop
cmpb
mov
sub
xor
mov
xchg
je
je
jae
fwait
cmp
sti
loopne
ret
push
scas
lock
nop
les
sub
xor
lcall
dec
pusha
sbb
js
sahf
shrb
hlt
add
sbb
mov
jle
or
mov
lds
inc
and
adcl
inc
push
cmp
lea
mov
les
pop
leave
sbbb
mov
test
movsl
jae
imul
clc
pop
mov
mov
pop
out
test
int3
pop
mov
fidivrl
cmpsb
flds
imul
adc
add
push
in
add
hlt
sub
sub
mov
adc
xchg
fsubrs
mov
daa
rcrb
jne
inc
imul
jmp
seta
das
sbb
popa
xor
add
sub
cmp
jmp
ret
jae
xor
movsb
adcl
ljmp
push
insl
arpl
mov
inc
jno
imul
push
orl
pusha
xchg
mov
pop
test
arpl
xor
cli
fs
xor
nop
lods
mov
fldt
mov
mov
arpl
inc
push
add
lret
pop
mov
sbb
xchg
icebp
ss
add
rorb
jo
loopne
popf
test
cltd
fmuls
jle
adcl
jbe
jno
inc
adc
xchg
movsb
imul
xor
push
sbb
addr16
and
cmc
push
mov
mov
outsl
loope
in
push
pop
lea
sub
xchg
mov
gs
out
mov
sub
mov
es
imul
mov
mov
clc
sub
in
cmpsl
sub
pushf
add
loop
jl
fcompl
pop
lret
in
xchg
dec
or
xlat
lcall
out
arpl
or
sbb
inc
stc
pop
jge
jo
sarl
je
test
pop
mov
add
sbb
cwtl
ljmp
jo
cli
push
mov
popa
and
imul
rcrb
push
cltd
xchg
or
sahf
xor
cmp
scas
inc
pop
rcrb
xchg
push
imul
xor
mov
nop
pop
ss
lret
outsl
cwtl
cmp
and
loope
popa
mov
push
add
mov
sbb
mov
dec
pop
push
ret
xor
jno
add
jb
jp
ret
lret
lods
icebp
dec
inc
loopne
xor
pop
xor
adc
add
loopne
mov
adc
shlb
lods
adc
inc
test
pop
adc
lret
sub
mov
jns
xor
ss
lods
jle
popa
popf
cwtl
out
fisttpl
adc
cltd
lcall
push
cmp
cmp
mov
out
popf
in
cmpsl
std
sub
addl
lcall
mov
les
mov
ret
mov
mov
jmp
out
jmp
pop
cmp
ret
xchg
push
sub
inc
in
movsl
xchg
sbb
fisubrl
mov
ljmp
andl
int
and
sub
push
jl
ret
cwtl
mov
ds
ljmp
ret
and
cmp
sahf
les
leave
into
fwait
mov
jne
sub
and
sub
jbe
push
xor
or
inc
dec
in
pop
loopne
test
xchg
shlb
mov
stos
push
cmpsb
cmp
shl
sub
js
call
sti
add
push
in
mov
enter
rorl
sbb
xchg
in
imul
scas
andl
daa
fdivrs
sub
movsb
sbb
test
cmp
xor
popf
mov
xor
ret
imul
sbb
and
cmp
jmp
adc
jle
in
sbb
loopne
and
and
hlt
outsl
outsb
test
xchg
xor
mov
sub
cltd
loope
mov
es
xchg
mov
std
mov
push
in
rolb
ljmp
push
dec
mov
lahf
mov
test
xchg
dec
popa
sub
fidivrs
imull
pop
pop
lcall
push
push
xchg
add
sti
aam
cwtl
adc
and
cmpsb
jle
add
mov
lcall
jns
dec
mov
pop
movsb
aas
fldt
stos
or
jge
out
and
fsub
shlb
mov
pushf
sbb
out
fstps
xor
fcom
mov
gs
in
mov
push
cmpsl
or
add
mov
out
jbe
dec
out
jecxz
xor
mov
stc
loop
sub
add
inc
loope
sub
mov
inc
jle
add
mov
jbe
or
mov
jnp
cmpsb
mov
repz
push
inc
push
mov
movsl
fistpl
inc
lea
aad
and
iret
push
pop
pop
mov
jg
pushf
sub
shll
and
xchg
sub
and
jmp
mov
enter
ftst
mov
gs
adc
out
ret
shll
into
inc
jmp
xor
or
lahf
push
xchg
fidivs
movb
int
xchg
mov
addr16
shll
cld
xor
cltd
sub
inc
sbb
adc
mov
lret
addb
jg
jne
mov
lcall
clc
sar
dec
dec
inc
inc
xor
cmp
cld
pop
sub
mov
jnp
imul
loop
ret
push
mov
mov
fmul
arpl
iret
dec
jl
in
push
shl
imul
add
insl
add
pop
sbb
xchg
cmpsb
idiv
hlt
jp
insb
mov
bound
and
jmp
hlt
and
fisttps
into
adcb
pop
mov
xchg
dec
mov
movsl
hlt
or
xchg
mov
rcrl
cmp
jle
incl
call
dec
lret
and
mov
jecxz
imul
cwtl
jo
shrb
xor
sarb
je
jl
test
sub
lea
jns
push
ret
das
in
sti
in
cld
ret
out
jae
movsl
insl
rol
test
sub
data16
inc
pushf
leave
ds
adc
push
out
in
push
pop
and
loopne
adc
in
pushf
mov
mov
aas
and
xor
ret
daa
mov
adc
and
cmp
mov
sub
jle
mov
popa
pop
imul
imul
sbbl
jno
stc
mov
jge
inc
push
test
adc
imul
inc
sbb
add
jecxz
jns
mov
mov
out
mov
mov
pop
daa
jle
imulb
lcall
ljmp
popf
lods
xchg
dec
inc
call
mov
test
out
das
xchg
cmpsl
mov
pop
insb
inc
lea
fstpl
mov
inc
mov
imul
pop
and
cwtl
xor
mov
or
sub
cmp
or
inc
idiv
adc
sub
lahf
data16
mov
xlat
movsb
and
imul
mov
push
mov
int3
jmp
add
xor
sub
addr16
gs
mov
loopne
sbb
loope
mov
jmp
push
aaa
pop
cmpsb
cltd
add
cmp
xchg
addr16
push
dec
add
fs
daa
or
sbb
pop
mov
shr
mov
xchg
hlt
xchg
nop
add
imul
pushf
aad
roll
mov
sub
daa
js
push
pop
add
aad
rcll
xlat
fcmovne
insl
jno
inc
jns
adcl
or
fcomip
add
sbb
test
lds
pop
call
ret
fistl
dec
xorb
or
and
leave
shlb
inc
mov
ljmp
mov
pushf
inc
test
mov
sarb
dec
xorl
jae
jbe
shrl
pop
pusha
cs
test
cmc
mov
adc
pop
mov
icebp
xor
das
adc
pushf
jmp
mov
dec
shll
sub
jne
imul
icebp
movsb
mov
aas
lea
cmp
loop
xlat
imul
dec
out
mov
dec
sbb
loopne
dec
xlat
mov
mov
imul
jne
movsl
bound
out
cmpsl
pop
mov
xchg
test
sbb
call
jns
andl
jle
inc
out
int
mov
xor
arpl
add
cwtl
dec
inc
fildll
inc
jecxz
pushf
inc
pop
insl
pop
in
cltd
imul
scas
sub
in
movsb
fsubrp
xchg
cmp
fbld
sub
mov
arpl
test
cwtl
push
push
jnp
mov
mov
std
imul
ss
xchg
push
xor
pop
fcmovne
xor
js
push
adc
mov
nop
mov
popa
lods
arpl
movsb
sbb
ja
test
lahf
into
lock
jg
sub
mov
mov
fisttpl
adc
xchg
mov
sub
ror
add
dec
out
xchg
xchg
adc
pusha
xchg
insb
jp
pop
sub
mov
mov
cmovno
xor
lcall
jno
test
sbb
jle
cmpsl
xchg
cli
xchg
ret
les
hlt
mov
aas
cmc
in
loopne
jmp
stos
aaa
jg
out
sbb
mov
jecxz
in
lcall
push
xchg
mov
fwait
dec
pushl
cmp
xchg
lods
jae
imul
cwtl
cmc
adc
push
add
cmp
xchg
mov
mov
je
pop
nop
add
jmp
pop
jg
sbb
xchg
push
push
xchg
mov
test
xorb
jle
mov
adc
sahf
sub
addr16
push
cmp
push
mov
test
sbb
or
and
pop
lods
adc
mov
std
mov
imul
sbb
jns
add
jno
nop
iret
and
aaa
adc
xor
repnz
dec
std
stos
fimull
test
imul
cltd
push
and
mov
frstor
and
xchg
pop
and
dec
xchg
lret
inc
xor
aas
mov
daa
inc
xor
xchg
call
jge
xchg
movsb
das
arpl
xchg
jb
insl
lea
and
outsl
stc
mov
sbbl
call
stos
sbb
stc
xchg
in
and
pop
mov
mov
sbb
xor
dec
push
stos
jg
es
mulb
aas
out
mov
and
lea
arpl
outsl
lea
jbe
xor
loopne
adc
jp
out
xchg
nop
imul
in
test
fbld
fwait
movsb
test
ds
mov
mov
pop
dec
clc
pushf
sbb
jp
ret
mov
mov
popl
lods
dec
push
mov
add
jb
imul
lock
mov
mov
sub
adc
push
faddl
mov
dec
shlb
in
xchg
xchg
cmc
or
ljmp
xchg
pop
scas
test
mov
popf
sub
xchg
and
inc
mov
pop
inc
jp
flds
add
lahf
cltd
jno
add
and
imul
outsl
add
shrb
mov
lahf
in
sub
inc
test
mov
jo
insb
dec
jg
inc
fsts
fcmovne
and
fistpll
push
mov
mov
and
cli
scas
jo
inc
js
push
push
xor
pusha
inc
aam
mov
add
scas
xchg
mov
int
push
jno
cwtl
dec
flds
fs
or
mov
mov
outsl
movsl
pop
fcmovbe
push
mov
inc
cli
mull
push
dec
ds
or
test
arpl
cld
add
loop
pop
jmp
rol
push
ret
shlb
adc
nop
sub
xchg
xchg
ljmp
pop
fistpl
jns
jecxz
adc
push
jecxz
negb
sub
adc
xlat
inc
fwait
cmpsl
add
lods
mov
push
lea
ret
dec
test
in
mov
xlat
call
mov
cmc
mov
je
adc
call
and
cmpsb
push
and
rclb
jecxz
push
jo
and
daa
jl
jg
xor
cmp
pushf
pop
pop
sub
and
xor
xchg
xor
pop
and
call
loope
hlt
outsb
ljmp
ret
push
loop
and
cmpsl
lock
jecxz
jno
mov
repz
rclb
jno
inc
imul
dec
loope
xchg
loop
mov
mov
jo
fs
mov
mov
and
aas
adc
flds
inc
push
into
cmc
push
shlb
xor
xchg
loopne
jo
mov
inc
inc
clc
pop
addr16
ljmp
push
std
jl
xor
pop
fsubl
jle
xor
rorl
and
push
mov
out
mov
pop
and
inc
mov
cwtl
movsl
push
subl
lods
test
inc
pop
aad
imul
cmp
dec
jecxz
dec
adc
sbb
cwtl
scas
cmp
mov
sbb
fs
mov
pop
mov
imul
push
xor
push
cs
int3
call
les
negl
pushf
jp
ja
xchg
sti
popf
add
cmp
in
enter
xor
inc
jmp
loop
mov
out
nop
mov
and
jo
push
jecxz
ljmp
pop
mov
mov
imul
shll
and
xchg
in
xor
dec
adc
loop
in
cmc
lods
pushf
jle
insl
lahf
icebp
jmp
jl
sub
pop
xor
sub
cmp
xchg
inc
cwtl
push
pop
and
cmp
shlb
inc
stos
sbb
lea
into
pop
hlt
jns
mov
out
imul
daa
daa
push
and
pop
mov
lahf
xor
or
imul
lock
imul
test
xchg
in
sub
loop
mov
sub
lea
imul
pop
or
cmc
pop
add
push
push
pushf
and
test
cmp
jecxz
arpl
pop
jae
pushf
push
sbb
adc
cltd
push
pushf
movsl
pop
or
add
jle
or
adc
xchg
push
push
daa
add
sub
mov
fildll
or
dec
jle
mov
fcoml
jno
adc
pusha
push
hlt
roll
cwtl
mov
cli
or
jle
daa
xor
dec
repnz
xchg
sbb
popf
adc
iret
addl
pop
addr16
lock
adc
mov
sub
addb
or
lea
outsl
pop
aad
test
scas
ret
das
mov
in
nop
xchg
ret
scas
fs
cli
xor
fimull
pushf
mov
mov
iret
daa
insl
shrl
dec
cmp
inc
pop
sub
add
jge
out
adc
jae
jne
xor
test
inc
push
mov
push
gs
push
inc
stos
test
daa
add
dec
test
sub
push
mov
cld
movb
dec
cmpl
cltd
sub
sbb
xchg
rorb
lcall
lahf
mov
or
jg
sbbl
pop
stos
adc
paddb
icebp
pop
mov
sub
sbb
es
xor
jns
jle
adc
rorb
aaa
int3
add
add
add
fwait
popf
jmp
and
es
scas
xor
mov
js
js
jmp
add
iret
adcl
imul
iret
cmp
inc
js
test
ret
mov
or
jg
repz
lock
mov
aaa
pop
inc
dec
adc
incb
jle
outsl
aaa
xchg
mov
cmp
gs
cmp
cmp
scas
pop
cld
sbb
jecxz
daa
test
add
mov
ss
testb
imul
rcrl
ret
addl
stos
nop
aas
jecxz
jp
mov
mov
push
push
repnz
sub
mov
call
xchg
lahf
cmp
push
jecxz
hlt
xor
sub
leave
sbb
repnz
mov
cld
cld
aam
xor
add
dec
fs
sbb
daa
pop
dec
addr16
adc
fcomps
add
sbb
dec
aad
ds
cmpsl
xor
daa
and
xchg
sub
jge
inc
cmp
mov
pop
aad
fimull
jo
ficoml
repnz
cmp
and
shll
mov
cmpsb
xchg
fistl
adc
sahf
lcall
xchg
push
mov
push
arpl
sub
mov
push
cmpsl
dec
and
rep
inc
das
fisubl
cmp
loope
jecxz
lea
cmpsb
inc
sti
fstps
inc
dec
push
push
adc
xor
shlb
and
jmp
or
mov
jle
pop
sbb
rcrb
jg
les
pop
movl
xor
inc
xchg
adcl
test
mov
arpl
add
xlat
adc
insl
shl
and
in
push
rolb
loop
sti
cltd
mov
aam
ljmp
call
mov
push
mov
cltd
test
sub
mov
mov
pop
sub
lea
pusha
adc
imul
fisttpl
jbe
add
jle
jg
or
jg
data16
push
call
jle
loopne
push
je
jecxz
pop
std
inc
jmp
and
out
xor
inc
outsb
sub
leave
push
stos
or
arpl
mov
pop
outsb
lret
stos
xor
in
insl
mov
sub
mov
and
sarl
sbb
pop
gs
inc
sahf
push
stc
fucomp
or
inc
sub
rolb
rolb
lods
stos
sbb
cwtl
pushl
add
xchg
xor
cltd
outsl
push
lcall
lock
cmp
aas
insl
and
adc
mov
adc
mov
xorl
and
xchg
cld
inc
cmc
fistl
jo
jnp
or
ja
inc
das
sub
adc
mov
xor
add
ret
add
inc
out
pop
sub
into
lret
adc
insb
and
test
pop
sub
sti
jmp
daa
push
adc
cmpl
int3
arpl
nop
lea
les
lcall
sahf
jge
mov
sub
jge
or
push
or
pop
in
xor
mov
push
jmp
adc
jmp
mov
sub
adc
mov
addr16
pop
movsl
jle
cltd
sbb
jne
pusha
gs
repnz
in
insb
jae
jne
out
ret
xchg
mov
ss
add
lods
add
arpl
ret
pop
jae
lods
jnp
out
inc
and
out
sub
or
hlt
insl
mov
mov
loop
fbstp
js
push
push
sbb
fimuls
outsb
cmp
popf
xor
adc
sub
xchg
idivb
and
repnz
fwait
int
jb
mov
sahf
push
sub
movsl
push
inc
mov
in
adc
pop
out
push
or
loopne
lods
sub
adc
pop
jbe
xchg
cmp
mov
add
loop
pop
ljmp
lods
arpl
imul
je
inc
test
test
push
imul
sub
cld
into
inc
popf
push
lret
fnstcw
push
out
lods
test
and
mov
pop
add
mov
test
repz
je
or
inc
ret
outsl
push
int3
pop
xor
and
add
shlb
xchg
int3
mov
add
fiaddl
mov
hlt
or
daa
in
jmp
cmp
loop
gs
sub
pop
sub
mov
mov
in
jle
ja
or
and
ss
fwait
dec
xchg
dec
jle
dec
rorb
rclb
mov
sbb
inc
out
mov
mov
loop
jle
pushf
cmp
std
ficomps
xor
cmp
in
jno
jne
fs
cltd
and
cmp
jle
ja
cmp
adc
movsb
lds
in
aaa
xor
jo
test
cmp
repnz
ret
out
test
movsb
fucomi
xchg
out
dec
add
mov
cmp
sti
push
push
jnp
mov
rcll
add
pop
dec
adc
and
jae
xchg
cwtl
mov
adc
jo
inc
jg
repz
loopne,pt
hlt
push
loope
out
sbb
sbb
outsb
pushf
aad
shr
cli
in
cmp
addl
cmpsb
addr16
dec
xchg
sbbl
aam
addr16
out
adc
and
frstor
pop
or
adc
add
mov
sub
xchg
sub
mov
mov
pop
mov
fmulp
dec
xchg
or
es
cs
or
xchg
adc
aad
sbbl
pop
adc
test
add
mov
and
mov
stos
push
xor
xor
imul
imul
inc
enter
in
out
mov
mov
sub
stos
and
cs
pushf
incl
fmuls
int3
jecxz
xchg
lcall
dec
mov
aas
mov
mov
in
jl
daa
mov
andb
je
sbb
icebp
mov
push
addr16
inc
lahf
sti
mov
addr16
outsl
jae
bound
test
cmp
fwait
lock
jne
jecxz
dec
and
cwtl
cwtl
mov
arpl
inc
cmpsl
call
fucomip
add
xchg
xchg
or
data16
dec
in
cltd
dec
adc
pop
cmpsl
lret
sub
xchg
nop
enter
js
or
pop
xchg
jno
addr16
int3
cmc
das
in
arpl
cmp
movsl
xlat
mov
xchg
and
subl
rorb
lods
inc
nop
bound
call
in
cmp
xorb
sbb
push
xlat
pop
mov
jge
mov
ficomps
and
stos
ret
add
sahf
adc
sbb
mov
push
dec
jecxz
cmp
test
adc
ffree
xor
push
icebp
sub
arpl
push
and
out
pop
jo
dec
ljmp
jecxz
pusha
lcall
lcall
loop
sub
jle
fs
push
or
push
push
sbb
jmp
jne
mov
mov
nopl
xor
jbe
dec
cltd
adc
daa
repz
cltd
xchg
fwait
sub
adc
or
in
inc
mov
out
int
sub
out
xor
sti
jle
inc
insb
std
mov
xchg
loope
je
jecxz
std
or
popf
repz
pop
into
jbe
pop
pop
mov
xlat
mov
imul
push
inc
divb
iret
cmp
xor
es
lea
ss
outsb
mov
outsb
in
sar
sbb
xor
sbb
adc
xor
mov
pop
les
pop
in
xchg
fisubrl
adc
fnsave
xchg
enterw
add
outsb
mov
pop
scas
cld
cmp
or
arpl
dec
movsb
lods
ds
xlat
mov
push
dec
icebp
test
sbb
cwtl
shr
push
sub
inc
mov
repz
inc
jg
arpl
push
daa
xchg
pop
imulb
fists
sbb
xor
stos
pop
sub
mov
in
pop
jae
and
xor
and
pop
inc
sbb
or
nop
sub
adc
push
std
jge
cmp
pop
push
jne
loop
je
scas
sub
mov
or
std
add
xor
dec
loop
mov
and
das
inc
cld
cs
mov
lahf
mov
daa
push
dec
imul
leave
jmp
fdivs
je
jp
test
sub
push
fwait
add
sbb
xchg
push
out
xchg
xor
popf
or
pop
jne
movsb
cmc
imul
mov
addr16
adc
movsb
imul
pop
jg
mov
jg
inc
pop
in
adc
ljmp
push
js
mov
call
test
outsb
xchg
mov
xchg
mov
xchg
arpl
push
xchg
pop
jmp
fs
dec
loop,pt
adc
iret
dec
pop
mov
lea
jecxz
fcompl
xchg
loopne
sbb
jbe
mov
aaa
adc
cmp
sub
pop
scas
jmp
xchg
adc
aaa
mov
shl
pop
pop
shlb
mov
mov
ss
loopne
add
cmp
jne
insb
das
lahf
xor
in
or
pop
out
andl
in
lret
int3
xchg
daa
pop
jle
sbb
mov
andl
inc
ds
sub
push
fiaddl
sub
loop
enter
xchg
inc
adc
inc
xor
xor
jne
mov
std
inc
add
imul
and
jne
nop
fadd
mov
sub
push
pop
hlt
adc
ret
movsb
in
outsl
dec
test
lock
jp
out
push
out
pushf
xchg
jae
mov
add
in
sbb
pop
mov
mov
mov
out
fs
and
loopne
push
dec
push
and
jmp
xchg
jb
fldt
xor
push
out
jne
lea
das
inc
xor
pop
cmpsb
xchg
mov
iret
jne
cld
mov
imul
jo
stc
movsb
mov
xchg
mov
cli
sti
inc
push
xchg
aad
in
jmp
arpl
dec
lods
mov
jno
or
pop
int
inc
add
cmp
lock
loope
jne
pop
hlt
int3
out
cmp
movsb
mov
movntps
xchg
add
in
scas
lret
fstps
mov
push
pop
scas
mov
adc
jle
daa
fldl
cmp
inc
mov
lds
stos
push
sti
imul
dec
pop
and
mov
jge
or
and
imul
lea
in
inc
fdivr
fwait
mov
inc
popf
and
adc
aaa
sarl
mov
mov
pop
xor
sbb
into
xchg
xlat
in
xor
push
les
hlt
sbb
mov
pop
roll
inc
push
add
inc
jno
js
lds
or
xor
pop
lahf
and
rcrl
pop
jge
mov
dec
mov
mov
inc
sub
jns
xchg
lods
adc
aas
inc
fmulp
cmp
das
int
jb
addl
out
inc
in
and
pop
inc
fnsave
popf
and
sub
mov
jp
cltd
data16
xchg
xor
lods
jne
je
jle
push
push
xor
adc
ljmp
enter
jmp
xchg
or
pop
adcl
arpl
sahf
push
inc
mov
imul
out
sub
adc
das
int
orl
mov
push
inc
punpckhwd
sub
inc
push
fwait
push
lock
btc
es
jp
mov
imul
mov
cmpsl
lock
jne
add
push
pop
sbb
daa
cmp
lock
sub
out
les
add
pushf
xor
cmpsb
fisubs
jg
sahf
fcoms
or
ja
orl
add
out
cmpsb
insl
lds
out
in
call
fs
jae
jle
jge
addr16
je
pop
dec
mov
adcb
dec
or
aas
xor
mov
in
mov
pop
fldcw
jno
jbe
add
loopne
pop
jecxz
mov
pop
and
dec
lret
loop
xor
inc
std
idivb
inc
xor
jle
mov
pop
mov
testb
lcall
xorb
fcomps
mulb
xor
ficoml
mov
mov
push
ret
xor
imul
cwtl
popf
xchg
jno
sahf
add
push
arpl
or
pop
ret
pop
push
test
test
push
push
lcall
push
pop
pop
std
lea
imul
or
lcall
icebp
movsb
push
imul
adc
add
ljmp
sub
fsubrp
adc
jle
xor
push
aam
out
in
lahf
int
lods
jmp
cmp
xor
or
aad
fnstenv
pop
cltd
cld
pop
loope
adc
cvttps2pi
lea
jno
fs
add
inc
pop
repz
jg
movsb
les
jo
lock
das
mov
and
stos
lods
call
aad
xchg
adc
xchg
int3
jns
lea
fldl
lock
push
fs
jecxz
fsub
sub
mov
notl
cwtl
cmp
xchg
imul
or
jecxz
ret
and
xchg
sbb
leave
fdivl
pop
lret
imul
jb
daa
mov
rcl
pop
mov
cmp
pusha
jae
lret
imul
or
xchg
xor
sbb
xchg
mov
sbb
sbb
in
inc
stos
sbb
rclb
cwtl
adc
sti
loope
lock
cmp
out
loopne
xor
and
stos
xchg
sahf
mov
adc
in
and
lret
inc
xchg
add
imul
mov
dec
xchg
inc
clc
mov
mov
cld
subl
cltd
sbbl
cwtl
sar
add
and
pop
outsl
jnp
loopne
insl
lock
mov
jg
jle
arpl
loopne
imul
mov
push
push
das
xchg
adc
mov
scas
pop
xchg
xor
sbb
xchg
arpl
jmp
imul
aas
adc
xlat
cmpsl
stos
inc
jge
mov
cli
shlb
lds
out
divl
lahf
aam
imull
int3
jae
mov
cs
fdivs
push
pop
ret
adc
inc
jb
cmpsb
aas
fsubrl
cmp
mov
sbbb
pop
incl
mov
imul
das
pop
nop
adc
adc
cmc
packssdw
or
lods
push
aaa
jge
add
sti
push
faddl
sub
xchg
int
xor
sbb
ss
xchg
mov
hlt
xchg
inc
cltd
filds
xlat
subb
jmp
jg
inc
mov
sub
mov
loopne
lock
fcomi
jmp
out
outsb
cmp
sbb
sbbl
arpl
outsl
add
testl
push
mov
push
mov
je
jnp
test
aas
sub
cmp
pop
test
and
or
ss
fcomip
lods
cmpl
pop
and
mov
dec
aad
xchg
push
pop
les
dec
mov
jno
jg
push
add
pop
leave
fwait
sub
xchg
inc
dec
test
xchg
add
loopne
push
popf
xchg
jg
jmp
dec
loopne
in
mov
sub
mov
js
pop
dec
adc
fdivs
jae
imul
rcrb
adc
lcall
call
sbb
lea
mov
inc
shlb
insb
clc
pop
imul
pop
adc
ss
cmp
out
stos
test
call
push
mov
adc
mov
fwait
sub
xchg
dec
mov
fldenv
arpl
push
arpl
jne
sti
sub
imul
gs
repz
fldt
fdivs
rclb
and
into
mov
xor
cmp
pusha
mov
xchg
aaa
lods
cwtl
xor
fnstcw
clc
icebp
xlat
in
add
imul
cmp
pop
lret
movb
mov
cmc
fisubrs
stc
sbb
jno
mov
gs
xchg
loope
mov
addr16
ds
pop
jecxz
loopne
cmpsl
mov
in
push
test
jae
es
sbb
ja
mov
xor
mov
jl
movsl
xor
sbb
xor
out
adc
jno
sbb
int3
repnz
pop
imul
ds
shl
add
and
flds
or
add
push
daa
shr
mov
stos
cmp
jmp
inc
mov
test
out
dec
adc
in
adc
mov
sbb
divl
jp
repnz
negb
inc
cmc
jno
subl
in
std
in
jne
jecxz
add
add
loopne
aas
jne
add
out
jmp
xchg
lcall
fimull
cli
fistps
xchg
addr16
xor
mov
ljmp
lret
rcrb
sub
mov
xchg
mov
pop
push
xchg
pop
xchg
rcpps
mov
aas
aad
adcl
jl
lods
xor
push
mov
enter
aam
or
pushf
pop
out
xchg
xor
mov
outsl
xchg
mov
cmp
in
lahf
sub
mov
inc
pop
xor
mov
adc
pop
fs
adc
jne
mov
ljmp
dec
xchg
arpl
lea
inc
mov
push
inc
xchg
mov
loopne
insl
dec
daa
pop
mov
das
mov
shlb
and
dec
pcmpeqd
pop
push
xchg
ficompl
int
and
adc
cwtl
or
fstpt
cwtl
repz
mov
int
rolb
aad
sbb
jnp
cld
adc
push
in
inc
or
and
push
imul
dec
out
sbb
push
hlt
push
out
fbstp
xlat
pop
and
lea
bts
ret
stos
push
shrb
pop
mov
cli
test
xor
pop
push
mov
xlat
mov
pusha
jecxz
test
lcall
jne
push
and
stc
inc
push
sbb
cmp
ds
pop
mov
lea
inc
xchg
jmp
pusha
fisubrs
jnp
push
push
or
xchg
fwait
inc
mov
xor
or
xor
in
sbbb
int3
sahf
pop
pop
andb
insl
in
cmp
mov
and
test
jge
lods
push
lock
push
mov
cltd
leave
jge
out
cwtl
dec
jb
jno
adc
jge
push
jns
imul
xor
xor
das
xchg
test
jb
pushw
rcll
hlt
push
mov
ljmp
lds
jb
inc
push
mov
outsb
jbe
les
and
lea
jns
mov
lahf
mov
adc
xchg
loope
and
ret
and
inc
jle,pn
dec
je
lods
adc
adc
sahf
mull
push
add
xor
add
dec
jne
lds
push
inc
clc
pop
xlat
or
cs
lahf
adc
or
inc
in
mov
and
out
les
mov
mov
mov
sub
xor
fs
popa
cmpsl
push
ja
sbb
adc
cmp
daa
aas
ret
xchg
sub
sbb
movsl
into
out
in
movsl
subb
cmp
fisubrl
sbb
mov
push
arpl
ret
sub
adc
jb
push
movsb
insl
popf
ljmp
or
je
stos
and
or
in
jnp
daa
test
jno
jge
out
repz
inc
ds
push
pusha
pop
mov
lds
daa
fs
fisubl
mov
and
sub
and
xchg
ljmp
cmp
jmp
cmpsb
jns
scas
test
mov
loop
imul
cmp
shlb
ljmp
lods
gs
and
imul
lret
ret
pop
pop
dec
std
or
movsb
and
out
adc
adc
xchg
pop
mov
and
and
cmp
sbb
sub
rorb
lea
cmp
cmp
jns
mov
push
jb
pop
outsl
dec
and
sub
ret
inc
and
mov
push
adc
inc
adcb
test
in
dec
add
fisubs
pop
rclb
jle
sbb
stos
out
cltd
sbb
cmpsb
cmc
xor
sub
mov
stos
out
bound
cvtps2pi
push
pop
mull
test
lcall
lcall
sub
mov
insl
and
ja
imul
jg
das
mov
and
les
daa
mov
or
cs
jg
and
pop
xchg
mov
repz
lds
popf
pop
fisttpl
mov
jns
mov
and
add
fildll
cwtl
push
mov
fwait
cmp
dec
pop
ret
ret
mov
cld
lret
inc
pop
iret
jns
mov
imul
jnp
pop
popf
cmp
mov
jne
lds
outsb
jp
ret
push
or
jle
jmp
shlb
cmpl
rorl
dec
jl
ja
and
dec
jp
cmp
jno
xor
add
push
test
lods
ficoms
test
jecxz
aaa
and
inc
in
jno
xchg
inc
xor
lcall
pop
and
je
scas
jle
in
daa
setnp
mov
mov
scas
iret
mov
xchg
into
mov
addl
dec
jns
popf
cmp
push
cmp
call
int
jge
imul
sbb
cmp
call
lea
adc
cmp
lea
es
pop
lock
or
ja
rolb
mov
daa
add
addr16
imul
lcall
sub
repnz
xor
xor
xor
mov
addb
call
pusha
or
mov
pushf
sbb
dec
lcall
pop
sbb
cmp
xchg
jmp
mov
or
mov
jge
data16
inc
int
xlat
pop
inc
or
jle
fisttpll
sub
add
sahf
adc
mov
mov
test
mov
jo
fwait
add
mulb
mov
jno
imul
mov
sub
dec
mov
xchg
stos
jle
jmp
ret
cmp
cs
mov
mov
sub
data16
pop
lock
xchg
jle
pop
push
xchg
sbb
mov
fsubr
push
fldt
mov
cmp
lahf
sub
enter
aad
mov
in
jmp
call
sub
mov
inc
and
movsb
mov
imul
mov
sbb
nop
ret
dec
in
mov
jae
ficoml
in
sub
mov
test
and
and
add
es
mov
jle
out
bound
arpl
sub
xchg
mov
add
sub
inc
push
xchg
dec
std
mov
push
loope
fstps
xor
and
mov
or
in
pop
imul
adcl
sub
mov
addr16
scas
sbb
mov
mov
adc
xchg
andb
sub
repz
sub
inc
fwait
and
inc
popf
mov
ss
mov
add
mov
out
mov
dec
in
and
jecxz
cmp
daa
ds
data16
jo
jbe
jmp
push
sbb
xchg
jb
and
lret
icebp
movd
scas
call
sub
mov
add
fstpl
add
pop
jecxz
mov
mov
jmp
loope
mov
loope
and
xchg
into
mov
daa
push
push
lea
pop
imul
imul
pop
call
hlt
repz
push
fistpl
pushf
adc
mov
pop
adc
test
or
and
pop
in
adc
mov
out
js
and
in
daa
push
xor
and
test
xchg
mov
add
imul
adc
lea
lahf
lea
mov
idivl
jno
push
sub
and
inc
sub
adc
lea
sub
lods
add
inc
add
jle
mov
mov
sub
les
inc
inc
mov
jl
push
addb
int
ja
fadd
gs
imul
inc
mov
pushf
push
in
xlat
push
inc
repnz
int3
adc
pop
mov
adc
and
xorl
shll
imul
addr16
neg
shl
mov
mov
loop
mov
mov
cmpsl
mov
inc
je
xor
cmp
or
lods
xor
mov
sbb
mov
mov
fistpl
xchg
repnz
jne
je
jl
and
pop
stc
sub
rcll
stos
cmc
movsb
subl
hlt
xor
sahf
inc
mov
xchg
and
or
notl
iret
sub
in
fwait
push
out
jmp
sub
push
lahf
xchg
mov
jecxz
es
xchg
jnp
bound
imul
push
adc
mov
and
in
mov
mov
dec
ss
jl
push
les
int
and
dec
push
or
arpl
mov
insb
test
jecxz
jae
push
icebp
lock
test
push
sbb
daa
aaa
push
int
es
push
dec
xchg
mov
sahf
cs
shlb
cmp
in
in
loopne
xor
push
out
xor
sahf
mov
fsubrs
daa
adc
movsb
push
and
test
or
or
inc
or
or
mov
in
mov
mov
loop
sub
sub
cmp
dec
rcr
pop
push
jecxz
fsubrl
mov
scas
sub
imul
mov
jnp
out
loop
pop
jno
test
imul
mov
xor
cld
je
push
xchg
push
inc
sub
mov
xchg
inc
data16
test
sbb
sbb
push
pop
sub
mov
inc
pusha
and
jo
cmp
lret
sbb
xchg
ljmp
fwait
mov
daa
jp
and
adc
fildl
xlat
inc
arpl
add
adc
push
cmp
icebp
sub
mov
shl
push
cmp
push
xor
nop
out
ss
mov
xchg
insb
popa
repz
push
lcall
adc
fucom
jecxz
add
push
outsl
cwtl
sub
mov
sti
movsl
mov
sbb
adc
mov
outsb
lahf
daa
push
insb
arpl
mov
push
pop
pop
ljmp
loope
jne
test
dec
pop
xchg
mov
add
jne
cmp
data16
bound
jl
pop
xor
jne
cld
sbb
push
shrd
sbb
adc
jo
adc
jg
je
xor
adc
mov
pop
test
xchg
idivb
jnp
hlt
mov
shlb
and
push
test
jmp
jl
inc
popa
jbe
xchg
cmp
sahf
subb
lea
mov
or
nop
mov
ljmp
pop
xor
jge
aas
push
xchg
pop
movsl
hlt
daa
jnp
xor
jmp
fisubrs
mov
in
jg
fldcw
push
pop
lock
roll
or
xchg
xchg
out
insl
xchg
arpl
out
sbb
mov
or
sub
push
lret
icebp
push
and
adc
nop
adc
test
adc
popw
sbb
mov
inc
out
loop
fwait
jne
imul
decl
push
in
push
dec
add
in
iret
es
fbstp
cmpl
jbe
cmpsb
lods
push
xorl
xchg
cmpsl
jle
and
je
adc
xor
sar
mov
pop
mov
inc
in
outsb
mov
dec
cmp
clc
cmpsb
arpl
fcmovnbe
test
fcomi
call
push
and
aaa
lock
jo
mov
mov
lahf
stos
push
jne
out
mov
and
adc
into
jnp
shr
sub
movsb
cmc
and
jb
arpl
out
dec
jno
iret
pop
enter
fists
dec
inc
xchg
mov
adc
pop
ficompl
jle
imul
jae
sub
clc
arpl
mov
ret
sub
ret
sbb
sub
xor
sbb
in
call
out
lcall
outsl
pop
adc
out
pusha
cltd
jle
lea
xchg
cmpb
mov
inc
cltd
sub
hlt
xor
int3
dec
mov
xor
das
out
and
push
cltd
xorb
sbb
xor
jne
mov
pop
jp
jle
xorl
sbbb
mov
enter
loopne
cmpb
adc
cmpsl
outsl
inc
out
test
dec
in
xchg
cli
mov
sbb
xor
jg
repz
cmpsl
mov
fstpt
fld
movsb
sub
test
lds
std
push
test
addr16
lock
mov
loope
repz
mov
addr16
xor
xor
push
lret
push
daa
mov
scas
inc
jl
xchg
xor
and
arpl
fs
mov
add
xor
inc
xor
in
sub
jg
fldenv
insb
rcll
adc
bound
cli
ret
jns
lahf
sub
dec
dec
lahf
sub
repz
popa
cs
xchg
lods
lret
in
mov
adc
add
lea
push
test
mov
mov
clc
sub
inc
aas
mov
aad
rcll
rcr
jg
je
cmpsl
pop
and
jmp
popf
and
and
test
push
xchg
pop
outsl
sub
andb
loop
add
fisubs
je
rorb
shlb
jnp
lcall
pop
inc
shrb
nop
mov
sub
inc
xchg
in
xor
mov
loop
xor
push
out
mov
push
dec
adc
ret
fsts
jae
push
cmp
fs
push
notb
addb
idivb
adc
mov
es
aam
in
inc
push
addl
add
mov
jno
adc
sub
call
ss
add
push
or
repnz
cmp
xchg
xchg
in
adc
test
sub
pushf
pop
or
jg
push
imulb
lea
jo
aad
out
and
sbb
pop
mov
pop
push
scas
push
pop
fildl
jnp
or
and
jb
pushf
ja
pushf
ss
fists
push
pop
mov
rolb
sbb
cli
in
mov
adc
xor
push
mov
xor
test
jne
je
mov
ret
mov
mov
add
mov
inc
flds
and
dec
sub
divl
mov
clc
mov
aas
dec
sub
adc
imul
scas
gs
cltd
xor
addl
aad
rcl
loope
test
and
out
jno
cltd
inc
mov
cmpsb
and
pop
es
lcall
addr16
dec
mov
imul
arpl
repnz
mov
jle
scas
outsl
xor
das
inc
xor
add
insl
lcall
cmpsl
pop
cmp
jo
idivb
mov
inc
mov
push
dec
mov
cwtl
or
js
mov
inc
enter
mov
pop
push
mov
pop
ss
movsb
lahf
loopne
lock
push
mov
clc
inc
inc
mov
cmp
and
cmpsb
add
imul
loope
mov
lcall
pushf
mov
pusha
les
sub
mov
je
pop
jne
or
decl
jle
mov
pushf
xor
xor
les
insb
loope
scas
cltd
pop
mov
or
xchg
xor
cmp
out
popf
mov
inc
mov
xor
insb
mov
inc
mov
popf
out
pop
cmpsl
daa
int3
jbe
or
add
sbb
insl
nop
out
lcall
mov
test
xchg
addr16
xchg
lods
inc
xchg
sti
push
dec
test
lcall
pushf
aaa
ret
cmp
jg
mov
mov
mov
lock
jne
lret
std
outsb
fwait
add
inc
fldt
ljmp
jbe
inc
jmp
lods
frstor
call
insb
out
sub
and
bound
call
pushf
in
gs
das
sub
lret
pusha
jmp
sub
jecxz
arpl
sbb
jo
lea
mov
adc
mov
inc
bound
aam
adc
and
inc
adc
xor
xchg
jo
int
les
das
in
test
cmp
pop
mul
test
sbb
outsl
scas
das
or
dec
scas
aam
test
cmp
popa
mov
sub
mov
jl
cwtl
adc
popf
aas
sub
inc
jns
cmp
pop
mov
inc
in
testl
push
mov
or
int
sub
jno
mov
jae
loop
popa
xchg
pop
jns
jb
xchg
inc
adc
pop
rcrb
in
in
leave
inc
and
add
imull
fsubrl
je
cmp
test
jle
repnz
jnp
inc
lock
in
xor
push
push
or
mov
mov
xor
cmpsb
mov
popf
imul
loop
and
call
dec
jle
testb
sbb
and
xlat
pushf
cmp
popf
rcr
pop
xorb
lret
xchg
enter
inc
movsl
inc
push
aam
sub
dec
mul
cmpsl
mov
sub
push
into
ficoms
push
in
arpl
ljmp
insl
sub
insb
jge
push
cld
jp
mov
or
mov
popf
int
sub
or
jns
in
dec
xor
jno
jmp
mov
test
test
xorb
sub
add
xchg
push
cmp
jg
sbb
mov
insb
rolb
and
mov
cwtl
scas
adc
mov
mov
je
ret
mov
mov
mov
ret
ds
push
push
fcompl
into
popf
scas
orl
pushf
sbb
push
call
adc
xchg
in
mov
and
mov
xor
add
pushf
xchg
dec
orl
fldenv
adc
andb
fwait
popa
mov
mov
je
movsl
mov
mov
and
les
mov
lahf
popf
mov
subl
jnp
outsl
mov
fcoml
push
nop
lods
add
pop
popa
mov
jl
jge
jno
aaa
ret
push
mov
push
jge
adc
jg
add
jne
cltd
mov
xchg
xorl
imul
in
jp
jl
cld
nop
jns
mov
ret
popf
test
xor
xchg
popf
cmpl
js
jno
jg
lcall
adc
mov
movsb
popa
jb
inc
into
xchg
pushf
mov
mov
add
popf
imul
jno
mov
and
jg
addr16
gs
orb
insl
xchg
test
mov
push
cmpl
imul
outsl
add
mov
jl
movsb
jae
rclb
pop
cltd
arpl
mov
jp
lock
ss
xchg
xchg
sub
popf
test
popf
mov
mov
js
popf
jle
popf
or
shrb
or
popf
xchg
fsubrl
mov
cld
popf
ret
fwait
jbe
mov
test
mov
mov
mov
cltd
add
inc
jns
popf
mov
jge
adc
mov
adcb
xchg
lea
movsb
imul
jecxz
add
inc
lea
adc
mov
xchg
testb
cmp
mov
pop
add
sub
fwait
sahf
add
jae
xchg
xor
fistl
xor
test
lds
fnstenv
fsubl
mov
mov
inc
jecxz
arpl
jbe
ss
sub
movsb
sarl
repz
imul
pop
loope
xor
mov
imul
out
inc
mov
mov
sti
jb
dec
outsl
fwait
push
cmp
push
xor
insb
pop
xor
cmc
push
faddp
or
push
movsb
test
les
sbb
adc
ss
decb
and
sti
fsubs
adc
sbb
xchg
sub
orl
ret
je
sbb
jg
test
out
sub
push
xor
leave
test
ljmp
sbb
popa
mov
ljmp
adc
xchg
jae
nop
out
loope
lea
push
mov
data16
and
jns
xor
lods
insl
repnz
add
cwtl
arpl
mov
in
mov
push
mov
lahf
cmp
xor
lds
sub
je
inc
add
int
dec
and
sti
rolb
xchg
adc
lcall
pop
imul
loopne
or
xor
mov
and
mov
xor
xchg
push
call
nop
negb
jge
xlat
mov
test
mov
sub
push
ljmp
pop
and
repz
and
sbb
push
push
inc
mov
push
pop
popa
loopne
add
inc
or
lds
sub
frstor
imul
fxch
les
lea
gs
and
std
xor
and
sbb
inc
cmc
and
addl
loopne
mov
adc
outsl
jle
insl
xchg
push
inc
adc
sbb
fcoml
lret
pop
test
and
inc
imul
xchg
insl
or
xchg
mov
jmp
mov
aad
arpl
add
in
cmp
popf
ss
insb
add
jle
sub
mov
mov
ficoms
jp
jns
sub
sahf
es
mov
pop
rclb
nop
lahf
vcvttsd2si
cwtl
mov
out
addr16
inc
test
cmpsl
lock
fldt
or
inc
adc
ret
xchg
pop
or
pop
sti
sbb
mov
rclb
hlt
xchg
xor
imulb
add
inc
repnz
rclb
scas
call
inc
imul
dec
xchg
and
out
sti
mov
xchg
nop
popf
jbe
mov
pop
or
insl
and
jl
push
mov
xchg
imul
push
jecxz
sbb
test
movsl
mov
fnstenv
dec
aaa
xchg
cltd
repz
mov
and
or
push
pmuludq
repz
xor
adc
adc
jp
es
lds
sahf
mov
sub
add
out
mov
lahf
xor
or
push
push
sbb
sbb
imul
add
negb
mov
push
loope
ljmp
lds
cmp
pop
jne
xor
leave
jp
aad
es
iret
sub
cld
test
and
mov
aaa
cmp
lea
xchg
adc
push
pop
and
sbb
insl
stos
mov
push
cmpl
lea
lea
in
cmp
loop
aad
nop
adc
andb
dec
or
sub
inc
mov
int
sti
test
mov
call
adc
adc
dec
sbb
adc
ret
popf
lahf
jg
aas
insb
test
lods
sub
jp
mov
jnp
mov
icebp
inc
in
ja
pop
shlb
mov
scas
mov
into
xchg
inc
push
sbb
test
loop
inc
sub
scas
jne
sub
iret
lahf
aad
aam
mov
shlb
adc
mov
jb
loop
mov
jge
repnz
jecxz
dec
push
shlb
mov
mov
fbld
imul
andb
stc
jbe
shrb
in
mov
je
mov
out
adc
pop
mov
arpl
into
and
hlt
xor
mov
sub
cmpsl
jo
mov
or
push
inc
lock
in
sub
push
fistpl
insl
gs
jnp
add
pusha
push
sub
pushf
mov
sub
lret
xor
cmpb
lods
jnp
test
mov
mov
outsl
adc
and
iret
movsl
cmp
inc
lcall
pop
out
ljmp
jne
mov
mov
push
jle
add
nop
test
pop
push
or
pop
in
enter
lods
and
daa
cmp
fcom
leave
subb
inc
hlt
loopne
pop
xacquire
cmp
or
repnz
jle
ret
push
inc
jg
mov
xchg
sbb
mov
nop
mov
daa
orl
push
cmpsb
dec
hlt
pop
push
vsubsd
cltd
lods
pop
pop
in
loop
adc
xor
dec
xor
cli
adc
jecxz
pop
stos
mov
stos
sub
imul
inc
imul
inc
loopne
nop
mov
shlb
cwtl
arpl
xor
mov
xacquire
lahf
movswl
iret
mov
movsl
mov
aas
inc
mov
pop
mov
or
rcrb
sub
and
mov
add
inc
sub
in
push
divb
mov
cmp
loopne
and
std
pop
add
out
lds
ss
mov
sbb
popf
filds
je
arpl
movsb
mov
imul
into
mov
jmp
fbstp
jecxz
jle
jle
xchg
jae,pt
inc
adc
jnp
pop
xchg
xor
pop
pop
in
cmp
orb
imul
mov
cld
sbb
fildl
sub
mov
shlb
dec
jle
rclb
pop
jp
mov
adc
mov
leave
stc
push
jg
push
xchg
ljmp
xchg
or
mov
xchg
ljmp
xor
repnz
rcrl
pushf
xchg
push
lds
push
js
push
lods
frstor
test
lret
dec
jecxz
lret
mov
imulb
jl
gs
fs
stos
lock
out
test
cmpsl
out
shlb
jno
addr16
mov
adc
mov
inc
mov
push
fwait
outsl
mov
int
push
pop
imulb
sub
movsb
xchg
cmovb
inc
cmc
mov
pop
sub
push
sti
cmp
dec
fcomip
xor
loop
movsl
dec
pop
jle
lcall
push
push
mov
xor
cld
popf
arpl
sub
les
in
mov
out
and
jle
shl
sbb
pushf
jecxz
mov
ljmp
push
mov
jmp
fldenv
loop
stos
loopne
in
mov
cmp
popf
mov
sbb
ss
jl
repnz
sbb
xchg
nop
jb
pop
mov
and
or
fs
add
mov
jne
mov
and
or
push
loopne
push
mov
fwait
in
daa
adcl
sub
addb
nop
lea
ja
sbb
call
insl
loope
adc
testb
cmp
test
cmp
sub
push
mov
gs
xchg
imul
dec
cmp
hlt
xchg
jle
lea
aam
inc
jnp
inc
push
mov
leave
mov
cwtl
inc
mov
dec
xor
lock
push
scas
arpl
lds
add
pop
inc
push
sub
int
adc
imul
arpl
movsb
mov
fstpl
cli
cmp
test
scas
cld
and
adc
jno
in
add
fnsave
adc
test
xor
cs
icebp
aaa
addr16
inc
mov
ja
or
cmpb
cmp
pop
and
data16
std
aad
dec
mov
insb
rcrb
or
xor
mov
or
sub
adc
int
mov
insb
sub
cwtl
mov
mov
pushf
daa
mov
in
push
call
icebp
sub
push
outsb
jbe
repz
xchg
call
jp
idivb
imul
sbb
mov
cmc
xchg
lahf
dec
pop
inc
add
mov
pop
jmp
lahf
std
inc
mov
mov
sub
lahf
lahf
mov
mov
loopew
xchg
and
xchg
aam
add
mov
inc
and
xchg
pop
shrl
mov
xchg
xor
or
mov
cmp
xchg
ficoml
jge
jnp
push
cmp
test
fwait
cltd
ja
std
daa
push
mov
jecxz
xchg
adc
pushf
xchg
pop
data16
jb
xchg
pop
pushf
mov
xchg
sti
or
popf
mov
mov
fs
je
sub
jno
gs
outsl
mov
add
movsb
test
xchg
insl
xor
lret
mov
lea
sbb
xchg
jp
pop
mov
cltd
test
arpl
call
mov
xchg
bound
cmpsb
sti
jl
xchg
pushf
ret
movsb
add
sbb
or
sahf
and
adcb
cmp
mov
sbbb
and
nop
sbb
je
xchg
mov
jo
xchg
jbe
add
imul
test
jno
xchg
cmp
jg
insl
setg
push
add
xchg
mov
rclb
push
std
mov
xchg
ljmp
js
sbbl
mov
test
nop
jbe
jnp
lcall
arpl
mov
movsb
test
imul
push
push
nop
data16
outsl
adc
adcb
jnp
xchg
push
push
das
movsb
fs
ja
mov
insl
imul
cmp
call
gs
fs
xchg
imul
sub
test
movsb
cmpsl
je
pushl
fldt
in
or
mov
into
clc
jl
fwait
rcl
sub
faddl
sub
push
and
xchg
leave
in
test
xchg
imul
movsb
lds
loop
out
lret
ja
xor
loopne
pop
testb
into
jns
sub
or
add
int
ficompl
test
pop
xchg
nop
mov
jge
imul
ja
cltd
xchg
jp
imul
ds
fs
das
ss
aaa
sub
mov
xchg
sub
sub
xor
pop
sub
add
pop
mov
outsb
shrb
das
lods
pop
rclb
mov
rcrb
sbb
adc
push
js
hlt
daa
add
xchg
mov
pop
jbe
xor
sahf
lock
jbe
mov
or
sbb
xor
test
push
pop
mov
aas
inc
sbb
inc
aaa
mov
mov
mov
sub
xor
or
mov
icebp
or
sarb
sahf
xchg
test
mov
push
imulb
pop
sub
xor
jmp
push
mov
push
in
cmp
out
push
enter
outsb
pop
push
unpcklps
add
repnz
cmpsl
mov
or
cmp
pop
mov
xor
js
xchg
pushf
cltd
adc
cltd
andb
insb
pop
imul
repz
mov
fisubl
and
push
pop
stc
lock
pop
mov
in
arpl
imul
mov
push
jae
and
lea
mov
jg
sbb
sti
push
fbld
mov
ret
inc
out
push
cmp
xchg
sahf
and
mov
scas
push
lea
int3
cmpsl
in
cwtl
or
mov
subb
sti
or
sbb
incb
fldcw
addr16
repz
mov
mov
push
mov
lock
fbld
outsl
int
mov
pop
jne
mov
insl
xchg
rcrb
lea
xchg
inc
test
sub
xchg
push
jbe
lock
and
mov
pushf
cltd
mov
jmp
inc
rcrl
and
pop
pop
fildl
xor
lods
outsl
inc
lahf
imul
adc
jle
cltd
js
loop
xor
fcoml
xor
js
mov
fs
loope
push
pop
cmpl
loope
repz
adc
pop
in
stos
mov
lock
dec
mov
xor
xchg
popa
shr
out
or
pop
xor
in
sbb
outsl
aad
fwait
mov
pop
loop
xchg
icebp
xchg
xchg
cmp
or
dec
jmp
sub
dec
xor
fisttpl
sbb
shlb
push
mov
and
loop
imul
fistl
out
cwtl
loope
mov
sub
icebp
daa
inc
addr16
cltd
push
pop
xchg
ja
rclb
gs
daa
std
pop
pop
jno
push
rcrb
ja
test
fldcw
jnp
xor
mov
fisttpl
inc
xor
fldcw
add
popf
pushf
test
icebp
mov
jg
popf
mov
sub
sbb
push
imul
xchg
pushf
insb
jg,pn
push
pop
gs
mov
push
outsl
lods
testl
inc
push
cmp
cwtl
stos
imul
addl
inc
ret
ja
fidivl
push
inc
addr16
arpl
in
jmp
shrb
jle
outsl
add
adc
add
lahf
adc
xchg
iret
shl
jmp
mov
dec
imul
scas
outsl
mov
adc
mov
xchg
xor
sub
xchg
inc
and
out
int
imul
or
orl
insl
mov
subb
or
sarb
or
out
push
gs
scas
test
jecxz
dec
xchg
pop
push
dec
js
mov
inc
pop
pop
xlat
jno
jb
mov
arpl
push
bound
xor
or
adc
arpl
pop
cmpsb
cmpl
inc
test
pop
das
adc
imul
xor
adc
xchg
mov
push
jae
cmpsl
jne
movsb
fldcw
and
sbb
pop
mov
and
int3
pop
sti
shll
inc
stos
lret
add
jbe
scas
out
mov
mov
fldenv
mov
pushf
cwtl
clc
push
iret
fsubrs
sbb
insb
leave
popf
mov
mov
sbb
sub
cmp
cmp
sti
inc
jge
pushl
arpl
mov
hlt
lahf
adc
mov
popa
xchg
lcall
jnp
mov
pop
repz
inc
mov
jo
inc
outsl
and
mov
jp
xchg
pop
scas
sub
inc
ficoml
idivb
addr16
jle
mov
xor
lcall
mov
imul
pop
add
xchg
enter
jo
dec
loope
mov
lock
test
in
icebp
xor
mov
add
pop
in
mov
lcall
sti
inc
inc
inc
call
inc
repz
int
xor
push
ret
mov
icebp
int3
imul
in
add
inc
mov
sub
sti
cmp
imul
mov
das
push
pop
adc
ja
adc
cmpb
loop
jae
imul
xchg
dec
call
push
in
inc
std
push
nop
lea
sub
data16
xor
js
clc
sub
mov
test
test
jb
xchg
push
cmpsb
sar
pop
movsl
popf
xor
xlat
imul
lret
out
xchg
es
in
sub
push
jne
popf
test
insl
leave
insl
lock
cmp
cs
lds
xchg
bound
mov
inc
or
add
adc
fucomi
push
stc
shl
push
ret
test
xlat
nop
loop
xchg
in
push
push
pop
xchg
imul
movsb
outsl
or
lcall
sbb
jno
movsb
or
test
mov
mov
sbb
sub
fstpt
mov
xor
scas
in
mov
arpl
ret
mov
ficompl
sub
xchg
inc
ds
push
and
cs
mov
jbe
cmpsb
sub
out
bound
cmp
arpl
outsl
mov
leave
cmc
xor
push
lcall
add
adc
pop
or
arpl
imul
push
insb
movsl
xor
push
test
fistl
mov
mov
jp
les
jne
hlt
jg
rorl
cmp
sbb
pextrw
jge
sbb
repnz
or
inc
loope
aaa
inc
sub
xor
addr16
cmp
popa
mov
out
dec
test
dec
lods
pop
xchg
lcall
leave
fistps
sub
imul
mov
movsb
dec
sbb
fs
imul
das
xchg
or
add
int
dec
xchg
inc
xor
mov
rorl
jmp
mov
sub
add
mov
out
inc
data16
loopne
jne
mov
xor
mov
cmp
js
jl
jmp
dec
in
in
dec
div
cmp
mov
xor
call
xchg
sub
mov
xchg
cmc
int
flds
in
xor
mov
aad
pop
ret
jne
loope
repz
mov
ret
cmpsl
xor
popa
mov
inc
stc
lea
push
xchg
pop
movsb
addr16
jo
pop
arpl
jmp
adc
push
pop
dec
mov
icebp
stos
in
in
xor
movsb
imul
sub
roll
js
movsl
cmpb
or
je
or
xor
lahf
mov
jle
adc
adcl
mov
cmpsl
lea
aam
jne
and
jno
cmpsl
repz
loopne
push
pop
movsb
gs
movsl
cmpb
jmp
je
lret
adc
sbb
stos
xchg
sbb
fs
sbb
or
and
mov
dec
lock
and
or
xor
cwtl
repnz
xchg
bound
xor
out
arpl
in
inc
inc
push
fldl
xor
push
xchg
mov
inc
cmc
sub
xlat
jg
sets
mov
into
shll
pop
je
dec
lea
in
push
leave
fidivs
inc
cmp
pushf
jae
out
cltd
popf
push
xchg
popf
lods
mov
insb
subb
fsts
nop
xchg
std
aas
shrb
xchg
addr16
push
ds
jg
aam
mov
imul
fs
mov
mov
jg
cwtl
aam
shlb
push
mov
inc
mov
jecxz
in
mov
dec
lods
outsb
daa
and
lahf
outsl
pop
imul
jp
add
lock
or
or
mov
rolb
pop
fs
pop
iret
push
mov
ljmp
jmp
out
or
loope
lret
lcall
ret
pop
jge
cmp
lea
fs
test
sub
and
dec
mov
out
pop
jmp
sbb
sbb
nop
xor
in
popa
mov
xchg
lock
lcall
arpl
mov
add
imul
in
mov
pusha
sbb
jmp
call
mov
cmp
jecxz
daa
fsubs
sbbb
or
out
in
into
in
push
jle
jmp
fs
repz
push
icebp
mov
inc
dec
das
inc
pushf
movsb
sti
std
arpl
cmp
pop
jno
mov
push
fistpll
mov
sub
xor
sbb
nop
mov
je
es
push
outsb
cs
idivl
sub
mov
fldenv
mov
jmp
test
sub
sub
popf
jb
and
in
out
iret
scas
jg
imul
push
add
mov
rcrl
mov
insl
adc
dec
or
inc
stos
cltd
int3
and
inc
push
jg
sahf
sbb
adc
xchg
cmp
jmp
ds
mov
test
ret
inc
rclb
mov
inc
mov
fldcw
popa
push
xchg
push
mov
stos
mov
push
add
imul
and
iret
adc
and
bound
imul
or
in
or
dec
xchg
adcl
add
pushf
mov
sbb
inc
mov
and
inc
cld
jne
or
cltd
xchg
popa
shrb
cmp
in
loop
push
xchg
in
aas
mov
cmp
loop
jle
daa
dec
add
cmc
test
jmp
packssdw
cmp
mov
push
clc
loope
inc
addr16
xor
daa
or
push
sahf
dec
inc
ss
fisttpl
push
movsb
pop
mov
jecxz
mov
xchg
shrb
ljmp
movl
ja
adc
call
mov
jnp
mov
push
dec
clc
xchg
pop
xlat
adcl
fisubrs
add
lcall
nop
mov
mov
fs
aam
inc
sahf
mov
cs
loopne
out
repnz
out
cmp
mov
or
push
ja
xchg
and
jg
sarb
cld
jle
cmp
mov
in
pop
stos
repz
loopne
mov
arpl
pop
ret
mov
decl
pop
push
push
jns
call
mov
and
popf
pavgb
mov
loop
jb
inc
arpl
std
jae
lock
sub
std
sbb
sbb
cmpsb
lea
adc
and
les
mov
stc
push
or
and
imul
mov
ret
mov
sbb
iret
xchg
sub
cmp
jle
cmp
es
inc
and
fldl
les
mov
mov
xchg
mov
addl
ljmp
inc
cld
out
pusha
mov
jne
cli
repnz
daa
iret
inc
xchg
jmp
mov
lahf
cmc
jno
div
clc
aas
lahf
repz
pop
xor
sarl
mov
mov
aaa
sub
es
sahf
gs
data16
sbb
push
xchg
cmc
mov
pop
mov
jle
jp
aam
or
cmp
aad
int3
inc
xchg
sub
fldl
lods
pop
movsb
mov
in
xchg
push
sahf
and
lds
add
pop
stc
cli
js
inc
xchg
inc
in
enter
sub
iret
dec
movsb
rcr
sbb
scas
fs
mov
loope
fistps
dec
mov
mov
mov
filds
popf
and
and
xchg
cli
xchg
sub
sub
sbb
inc
imul
pop
gs
out
in
lret
pushf
cmp
aaa
pop
fwait
daa
xchg
add
hlt
xchg
push
pop
arpl
sbb
jbe
xchg
adc
in
sub
stos
sub
pop
xor
and
mov
lds
adc
or
inc
leave
loopne
push
xchg
ficompl
call
addl
out
sub
xchg
jo
push
fsubl
mov
cmp
mov
adc
pop
fst
mov
imulb
loop
cmpb
lahf
adc
cmp
cmp
xchg
sub
in
sub
mul
cmp
adc
insl
add
jae
adc
ret
test
adc
repnz
outsl
adc
jne
jecxz
test
mov
pop
lods
movsb
loope
lds
mov
sahf
outsb
inc
stos
icebp
hlt
xor
pop
jne
test
gs
adc
outsl
xor
sub
outsl
arpl
push
mov
or
imul
out
imul
mov
pop
aad
dec
dec
inc
insl
loop
jo
xchg
ss
inc
add
arpl
popf
inc
mulb
fcomi
inc
jne
mov
sbb
inc
mov
sub
mov
mov
dec
stos
lret
mov
xchg
rep
adc
sbb
jae
cltd
mov
jb
jg
ficomps
loopne
xor
lea
fistps
mov
pop
jb
jns
pushf
push
jb
movsb
movsb
dec
lea
pushf
jp
data16
jo
cmpsb
out
imul
mov
push
std
or
movsb
inc
out
add
sbbb
cmpsb
xor
xchg
pusha
fsubs
lods
inc
mov
rclb
cmp
cmpsl
push
inc
cmp
adc
rorb
adc
adc
sub
cwtl
and
outsb
hlt
adc
and
insb
jnp
sub
xchg
test
pop
adc
daa
outsb
xchg
iret
pop
xor
fs
pop
movsl
jb
push
subl
mov
or
inc
push
inc
xor
xchg
pop
pop
movsb
jnp
and
inc
xchg
mov
jp
das
movb
int
mov
cmp
adc
xchg
shrb
std
push
adcl
lcall
inc
sbb
adc
cltd
push
repz
cwtl
jno
fs
adc
cmpsl
xor
loop
test
insb
adc
or
daa
push
loopne
pop
es
lcall
push
fwait
cli
loopne
or
imul
pop
jp
xor
pop
inc
in
fwait
sbbb
add
out
add
jb
mov
cli
les
jbe
movsl
movsb
daa
mov
imul
cmp
call
das
mov
mov
nop
or
popf
sub
lea
jne
jo
dec
xor
rolb
jle
push
jne
sub
inc
add
add
add
mov
push
sub
repnz
imul
adc
lock
jne
inc
xor
mov
jae
fldcw
xor
jp
adc
jne
test
inc
out
aad
jnp
sahf
xchg
xchg
popf
pop
inc
js
lea
imul
notb
shlb
fbld
jo
pop
xchg
arpl
mov
push
ss
mov
les
xor
and
cmovge
push
imul
repz
xor
repnz
mov
movsb
idivb
or
dec
pop
int
mov
push
push
sub
fs
imul
cmpsl
lcall
insl
fs
mov
mov
pusha
imul
lahf
je
mov
ret
les
in
mov
mov
arpl
lods
mov
jbe
enter
mov
ret
push
lea
hlt
nop
imul
outsl
adc
lods
or
sub
mov
out
add
or
mov
xor
inc
pop
movsb
mov
ret
inc
inc
aad
jl
movsb
xor
xor
inc
xor
mov
movsb
addr16
lcall
push
in
xor
push
xchg
push
push
push
mov
cmp
xchg
xchg
stc
dec
fldenv
cmp
add
cltd
dec
push
fisubl
out
decl
in
fmuls
ja
dec
jecxz
mov
jno
leave
orl
adc
xor
lea
jo
pushf
sti
adc
lea
mov
mov
push
mov
fwait
ret
icebp
test
pushw
sbb
cmpsb
pop
sub
fsubrl
addl
sub
mov
imul
jecxz
push
sbb
or
adc
neg
pop
dec
inc
pop
dec
push
lea
pop
add
push
movsl
ds
imul
cld
outsb
cmc
push
cmpsl
jl
jp
jp
push
adc
daa
inc
jns
cmove
rcrb
pop
jbe
mov
pop
jle
add
pop
scas
stc
pop
repz
je
addl
inc
les
cld
jns
adc
mov
mov
jle
int
xor
push
clc
inc
lea
arpl
hlt
call
mov
xor
sub
sbb
cmp
xchg
mov
dec
or
xchg
jle
ja
jb
push
int
call
and
add
lods
and
mov
dec
sub
push
movsb
out
sti
fidivrl
movsl
sbb
inc
mov
lret
arpl
and
enter
xchg
jle
push
mov
outsw
jl
or
xchg
mov
in
sbb
xor
enter
lock
mov
jbe
mov
jge
rcrb
cli
push
jae
jl,pt
push
push
inc
pop
cs
aaa
sahf
ljmp
les
popa
inc
out
loopne
sbb
inc
fldcw
mov
push
jns
pop
fucomip
les
fistl
test
jmp
mov
or
pushf
int
add
cmp
scas
mov
xor
ja
dec
sbb
in
daa
lret
add
jns
loope
and
sbb
mov
sub
jbe
enter
lea
mov
add
xor
inc
lock
sbb
cmp
jbe
cmp
ljmpw
mov
pop
aam
sbb
loopne
call
int3
sti
xchg
add
mov
stos
mov
sahf
xchg
sbb
sub
add
iret
xchg
lahf
pop
js
and
lcall
xchg
movsl
sbb
shlb
mov
popf
daa
les
add
movsl
sbb
enter
fwait
xor
jl
mov
imul
jp
inc
mov
sub
and
cltd
mov
xchg
loopne
push
lods
ror
push
fisubrl
xor
outsl
mov
mov
leave
outsb
sub
test
mov
mov
mov
data16
test
and
xchg
push
add
fldenv
xor
pop
dec
outsl
push
mov
test
push
xchg
adc
mov
test
lock
pop
mov
cs
popf
inc
das
xor
imul
mov
push
jno
sbb
imul
imul
or
pushf
mov
fbstp
hlt
mov
cwtl
insb
outsb
mov
call
je
testl
scas
inc
add
std
lcall
mov
popa
imul
push
jle
lds
sub
jbe
pushw
xor
jmp
movsb
nop
ret
sbb
cmp
icebp
jmp
ss
and
rorl
xchg
xor
push
mov
sbb
xchg
cmp
aaa
sub
nop
insb
mov
inc
fildl
or
jne
scas
and
popf
in
sahf
inc
cltd
fstl
mov
xor
sub
mov
inc
addr16
lahf
movsb
fstl
mov
push
cltd
adc
xchg
mov
arpl
push
movsl
cmp
cmpsb
mov
xchg
ss
or
and
mov
arpl
imul
fwait
mov
or
lock
add
push
test
es
in
pop
mov
jb
repz
pop
cmpsl
out
add
mov
mov
cmpb
and
pop
push
mov
movsb
mov
mov
and
imul
lcall
and
lea
out
add
shrb
add
xchg
jb
lea
roll
or
dec
fildl
movsb
push
dec
es
cmp
inc
push
test
test
or
sarb
lcall
jle
xor
xchg
sbb
ss
lods
push
xor
scas
out
cld
lcall
mov
or
int
mov
sbb
pop
ret
jno
dec
mov
dec
xor
pushf
in
inc
push
adc
adc
ffreep
jle
cmp
mull
pop
mov
outsb
cmp
lcall
push
adc
divl
dec
out
jae
movsb
sarl
mov
loop
adc
cmp
fists
and
test
sub
lds
adcb
repz
movsb
mov
in
or
jno
pop
lcall
clc
frstor
call
movsb
gs
out
and
adc
mov
scas
jge
mov
jae
shlb
pop
inc
andl
popf
cmp
or
rolb
les
test
push
adc
in
lret
inc
js
or
les
sbb
shrb
test
dec
adc
out
shll
adc
nop
scas
push
les
mov
bound
and
jno
xchg
mov
into
xor
add
jmp
dec
pushw
je
insl
int
aam
fnstcw
das
cmpsl
jno
xor
push
inc
sub
fldenv
jmp
xor
testb
and
cmp
ret
xor
dec
xchg
jp,pt
mov
gs
push
inc
lcall
adc
xchg
in
dec
movsb
push
sti
sbb
dec
movsl
xchg
and
mov
push
jle
push
mov
jns
push
into
inc
aas
mov
mov
and
ret
pop
xor
pop
push
mov
cli
fimull
cli
popf
cli
cmp
cwtl
cmpb
loop
mov
cld
inc
adc
nop
xchg
test
cmp
xchg
fistpl
add
leave
iret
xor
testl
push
jb
into
push
sbb
sub
inc
mov
xorb
xchg
fisttps
mov
inc
push
cwtl
jl
arpl
subl
jle
sub
in
bswap
leave
add
loope
call
ss
test
movsb
imulb
adc
adc
data16
add
cmp
xor
and
shlb
stos
addl
xor
movsl
test
mov
or
mov
mov
sub
mov
sbb
scas
jg
or
arpl
rolb
testb
pop
mov
into
xor
sub
test
xchg
aad
int
jle
cmpsl
pop
stc
inc
mov
jne
cmp
push
scas
pop
adc
jo
daa
movsb
or
ljmp
test
or
mov
in
push
jb
popf
mov
movsl
lret
xchg
mov
jl
cld
sbb
xchg
enter
xlat
xor
push
loope
pop
mov
in
hlt
out
inc
xchg
push
mov
imul
decb
sbb
lret
pop
mov
or
and
aas
inc
push
dec
xchg
push
into
mov
ljmp
rcll
ljmp
daa
ss
mov
shll
bswap
lret
lea
in
repnz
dec
fsub
inc
mov
xchg
ret
mov
test
loopne
ljmp
pop
lods
leave
subb
pop
add
les
inc
sub
pop
icebp
icebp
sub
or
call
sub
xchg
adc
pop
xchg
jb
mov
sbb
dec
fdivrl
mov
fwait
xchg
mov
test
out
cwtl
arpl
fstp
sbb
popf
cmp
jns
arpl
test
adc
push
daa
pop
mov
cmp
mov
add
nop
add
ret
lahf
dec
xorb
negl
mov
je
rcrl
daa
mov
insb
xchg
sbb
pop
mov
pop
in
mov
rolb
fwait
adcb
aas
enter
push
adc
rorb
movsb
sub
addr16
icebp
inc
push
pop
xchg
add
or
aam
inc
sbb
xchg
test
inc
imul
cmp
das
std
cmp
lds
popa
icebp
ljmp
jp
mov
xor
fildl
sub
pop
mov
xchg
pop
inc
in
mov
add
scas
lock
xchg
repz
or
js
arpl
int
inc
fistl
cmp
test
fisttpl
xchg
in
cmp
jl
ja
pop
xchg
dec
push
sbb
push
pop
xchg
subl
add
imul
ljmp
aad
fwait
out
lret
sub
jns
loopne
aas
inc
jge
lods
jno
iret
repnz
out
pop
and
xorl
push
add
mov
pop
xchg
and
add
push
hlt
and
push
mov
daa
shl
or
call
je
popf
push
arpl
sub
inc
push
mov
int
mov
test
loope
xorb
int
adc
aas
insb
iret
and
push
dec
cmpsb
inc
mov
and
ret
idivb
cmp
sub
sub
nop
dec
cmc
imul
add
andl
fwait
adc
and
or
add
jb
sar
xchg
leave
test
in
sub
sbb
rcrl
fsts
das
push
add
dec
stos
pop
aaa
addr16
stos
inc
out
and
notb
repnz
sub
fucomip
cmc
mov
call
push
jnp
je
fisttpll
cmpb
lret
dec
data16
jbe
inc
xchg
cmp
fs
xchg
call
fs
insl
jl
or
push
xchg
je
or
scas
jge
test
and
mov
cwtl
xchg
pop
movsb
sti
popa
sbbb
mov
push
xchg
lahf
sbbb
mov
xchg
pop
xor
add
mov
adc
mov
cmp
cmp
frstor
xchg
es
pop
mov
push
andb
mov
xchg
lahf
xchg
mov
and
push
jbe
rcrb
xchg
add
adc
out
mov
push
xchg
test
add
test
adc
xchg
loope
in
insb
jno
popa
push
cmpsl
test
je
sub
xchg
and
aam
imulb
mov
and
mov
mov
xchg
cltd
es
mov
cmc
rcl
popa
inc
out
inc
jle
lea
mov
push
popf
movsb
imul
pop
call
popf
test
jne
add
push
popf
xor
cmpb
mov
xchg
cli
popf
jle
and
js
andl
arpl
mov
clc
xchg
adc
lea
xchg
xorl
lahf
or
lea
sbb
mov
test
jo
xchg
adcb
jl
outsl
arpl
mov
popf
adc
pusha
push
add
nop
mov
jne
jge
or
jg
push
pushf
insl
pop
cltd
cwtl
das
rcrb
jge
addb
test
mov
pop
jb
push
jb
subl
mov
test
xchg
dec
test
jae
pop
lea
jg
adcl
data16
or
jo
int
jl
jno
repz
daa
ljmp
popl
je
shlb
lea
testb
mov
and
hlt
fcoms
or
jbe
das
sbb
push
sub
add
ret
call
jb
repz
fmull
pop
das
cmc
push
jno
xor
out
daa
cmp
pop
inc
cmp
and
loopne
cmp
bound
push
arpl
test
rol
pop
loopne
sub
arpl
addr16
or
roll
mov
sub
push
stc
pusha
inc
in
xor
hlt
mov
sub
sbbb
jo
subl
mov
dec
out
fists
xchg
mov
inc
pop
loope
cmpsl
and
sbb
roll
mov
pop
or
in
inc
and
jb
xor
sub
aad
clc
lret
mov
xchg
inc
repz
mov
scas
sub
adc
sbbb
adc
add
hlt
xchg
push
inc
pop
in
sub
mov
jle
xchg
inc
addr16
movsb
imul
push
mov
jg
sbb
imul
addr16
xchg
mov
pop
jmp
repz
sub
sub
gs
cwtl
cmp
aad
fldt
or
adc
out
adc
cmc
mov
mov
aaa
jns
pop
lock
push
dec
stos
sub
fwait
adcl
fwait
dec
adc
adc
jae
dec
nop
mov
mov
roll
pop
pusha
les
inc
xor
xlat
gs
mov
mov
cmpsb
popf
lcall
repz
movsl
jb
arpl
pop
out
adc
packuswb
rorb
lods
je
rcrb
jae
inc
les
cli
push
jp
insl
jmp
cmp
movsl
inc
mov
inc
inc
cmp
inc
imul
or
bound
mov
mov
stc
mov
ss
arpl
push
and
mov
and
jmp
and
cmp
mov
sbb
shlb
iret
or
dec
enter
jo
ds
mov
popf
sub
inc
es
jbe
xrelease
inc
in
adc
sub
xchg
xchg
cmpw
jmp
pop
push
mov
jle
sub
ss
outsl
dec
add
loopne
cmp
in
adc
popf
repnz
and
jmp
mov
dec
pop
and
lea
pop
test
xchg
or
push
aaa
or
popf
test
arpl
pop
pop
divb
add
mov
sub
push
mov
lods
push
xchg
mov
mov
jo
inc
gs
clc
daa
and
data16
pop
push
sub
sbbb
and
jnp
adc
sti
inc
cli
loop
js
icebp
test
dec
pop
out
out
mov
or
jmp
outsl
mov
mov
pushf
int
pop
outsl
imul
idiv
xlat
call
inc
jle
inc
sti
or
and
jg
mov
movsl
mov
scas
jmp
sub
fs
lea
jle
inc
insb
ficoml
xchg
and
xorb
repz
popf
mov
and
call
jge
rolb
dec
adc
add
rclb
add
sub
nop
lods
dec
add
ljmp
fimuls
rorb
outsb
pop
cltd
or
mov
loope
xchg
mov
mov
cmpsb
test
sbbb
xor
cmp
add
mov
lahf
in
scas
pop
aaa
fs
push
and
movsb
dec
jmp
cli
iret
cld
rolb
jbe
dec
xchg
inc
mov
push
test
push
dec
cmpsl
je
out
popa
cwtl
mov
lcall
in
add
pop
sbb
and
daa
nop
adc
mov
ret
pop
xor
and
sbb
rol
mul
xchg
xor
shl
lea
test
out
shr
sbb
pop
aam
jne
cmp
cmp
es
xchg
cwtl
sub
ss
dec
mov
sub
in
cli
shll
jmp
in
mov
clc
test
jg
sub
lods
sbb
push
dec
mov
mov
in
ds
adc
adc
rcl
dec
cmc
mov
cwtl
je
sbb
mov
gs
cmp
xchg
cld
xorb
xchg
mov
jbe
shl
push
jns
in
push
push
lods
push
das
inc
lcall
repnz
xor
sbb
shr
push
adc
jmp
xor
adc
xor
sbb
and
sti
cmpsl
xchg
je
fiaddl
fadds
pop
dec
xor
pop
or
mov
loop
jecxz
inc
shl
pop
xlat
cli
xor
filds
xchg
insb
mov
repz
jmp
push
addb
mov
test
iret
dec
mov
sbb
jmp
fs
xor
lea
cs
jae
xor
cmp
sub
pop
xchg
in
pop
inc
mov
out
movsb
jmp
sbb
mov
and
int
xchg
mov
push
mov
cmp
xor
mov
test
sub
or
adc
pusha
mov
mov
test
je
stc
int
adc
int
and
pop
movsb
fwait
aaa
imul
nop
int
jg
ret
jl
test
jge
mov
jbe
out
sub
movsb
gs
out
xchg
test
mov
cwtl
mov
test
sub
nop
lcall
xorl
mov
loopne
and
out
shl
cli
adc
divb
add
jne
test
xchg
movhps
hlt
push
int
add
addr16
arpl
into
rclb
mov
movsl
adc
add
xchg
cltd
loope
mov
pop
psrad
mov
dec
mov
rolb
sbb
dec
sahf
push
jp
cmp
mov
sbb
int
xor
imul
jle
or
jbe
loopne
movsb
daa
stos
lahf
xchg
mov
jp
adc
mov
cmp
in
call
mov
stc
imul
xchg
mov
lock
vcvtsd2si
mov
mov
fbstp
jp
or
jno
sub
popf
jo
imul
jle
mov
negb
lcall
imul
mov
jmp
inc
push
or
sarb
data16
dec
jns
sub
addl
fisubl
jg
fwait
cmpsl
sbbb
movsb
push
or
lcall
ret
mov
xor
pop
jmp
jp
stos
pop
mov
enter
daa
dec
call
sbb
jae
idiv
test
pop
cmp
lea
dec
mov
lock
testb
js
test
out
lock
push
push
inc
mov
inc
fwait
popf
cltd
insb
into
stos
outsb
cltd
rcll
imul
scas
lret
or
scas
ret
test
bound
in
push
push
lock
movsb
or
shlb
movsl
inc
rclb
test
pop
dec
pop
in
rorb
sbb
pop
mov
mov
out
lods
mov
push
dec
imul
mov
xor
and
adc
dec
ja
arpl
xor
arpl
mov
loop
mov
xchg
add
add
outsl
js
or
inc
inc
les
sbb
inc
dec
fimull
push
mov
adc
jle
lcall
data16
test
pop
and
push
out
aam
cli
jne
mov
xchg
aaa
leave
xor
rclb
lea
inc
adc
sbb
mov
js
test
stc
cmc
gs
jmp
sbb
push
adc
nop
sub
inc
into
mov
push
lea
push
cmpsl
push
dec
in
cmc
jb
mov
pop
shlb
and
jmp
push
fwait
arpl
je
xor
push
ret
cmc
or
and
cmp
jb
cmp
mov
lea
mov
lret
gs
jo
inc
cmpsl
mov
iret
adc
cli
mov
mov
xchg
das
or
ret
dec
shr
icebp
pop
sub
sub
clc
adc
ja
pop
add
jne
imul
ljmp
icebp
mov
addl
hlt
push
xor
mov
cmp
xchg
test
xchg
daa
lcall
nop
out
mov
xor
jb
les
test
adc
inc
adc
iret
imul
data16
test
stos
push
sub
inc
inc
cwtl
imulb
mov
test
aas
mov
loop
insb
das
ret
movsb
inc
fisubrs
andb
xchg
cmp
fisubrl
dec
subb
xchg
nop
shlb
daa
push
push
jmp
push
inc
xor
lret
in
jnp
fucomip
sarb
dec
pop
and
sub
loop
je
int
cmp
jmp
test
aad
ret
cs
push
xchg
insb
pop
push
push
aas
cltd
pop
cmp
ljmp
mov
push
jns
inc
mull
mov
dec
pushf
roll
cwtl
sbb
popl
xchg
popf
insb
inc
xchg
sub
leave
out
dec
je
addr16
xor
cmc
mov
out
mov
jle
popf
sub
mov
outsb
loop
ret
xor
mov
sub
dec
jge
mov
and
cltd
leavew
fdivl
push
jmp
arpl
dec
xor
inc
mov
test
arpl
sub
jbe
imul
dec
xorb
push
inc
test
hlt
add
fsubrl
out
push
jecxz
clc
push
mov
out
mov
mov
lock
rcrl
arpl
or
inc
sub
leave
cmc
xchg
mov
and
inc
sub
or
dec
arpl
fbstp
jne
jmp
sbb
xlat
stc
and
sub
pop
mov
daa
mov
pop
and
mov
inc
jecxz
hlt
jg
inc
and
jle
mov
sub
test
cmc
loop
scas
jno
fld
jmp
push
orb
loope
mov
inc
test
lods
and
cmpsl
data16
loop
movaps
repnz
and
inc
stos
in
pop
adc
sub
in
shlb
arpl
inc
repnz
loope
push
data16
adc
and
pop
jne
movb
sbb
pop
insb
gs
mov
xor
bound
xor
imul
sub
ljmp
mov
push
jbe
fs
push
je
pop
call
out
notl
rcrl
push
hlt
jnp
push
xchg
and
gs
push
jbe
sub
stos
jo
out
mov
pushf
jbe
push
into
sbb
cmp
imul
int
or
mov
imul
repz
fcmovnu
es
fildll
push
inc
cmp
xor
das
push
lds
divl
cwtl
mov
fistl
jg
loope
daa
dec
adc
or
repz
jo
xchg
outsb
xchg
sti
addr16
jne
fs
dec
jbe
nop
ret
pop
push
adc
or
int
xor
sbb
add
fs
je
hlt
xchg
mov
cmp
jle
and
sbb
dec
loop
adc
imul
cwtl
les
cmp
add
rolb
and
test
jle
popf
ficoml
wbinvd
pop
push
mov
ret
mov
add
and
leave
adc
jae
pop
cld
xor
sarb
out
xchg
cld
sub
jo
in
xor
cwtl
or
and
scas
loop
enter
sub
cli
sbb
inc
sub
mov
sbb
repnz
cmp
xorl
jmp
mov
mov
stos
faddl
xchg
push
popf
ljmp
mov
pop
push
mov
fs
out
pop
xor
lock
movsb
cmpsl
xor
test
add
cli
clc
mov
loopne
cltd
xchg
adc
fs
sub
pop
inc
sub
arpl
inc
sbb
xor
fnstcw
jae
jne
sub
mov
inc
popf
daa
fidivl
movaps
jne
jne
stos
sbb
sub
mov
movsl
dec
jle
insl
sbb
and
sub
jnp
push
sbb
adc
jle
fwait
pop
imul
aas
pop
repz
int
loope
imul
jl
adc
rol
jae
sub
xor
inc
aas
mov
mov
outsb
jge
mov
dec
insb
cmp
inc
dec
movb
pop
dec
inc
jno
scas
adc
add
and
push
sub
std
and
xor
int
adc
xchg
sti
test
das
filds
cmpb
aad
rcrb
sub
out
and
mov
mov
and
xor
test
pop
repz
ljmp
cmp
cmp
mov
mov
dec
imul
jnp
sub
arpl
inc
mov
pop
mov
mov
out
push
mov
test
icebp
insb
lahf
push
inc
aas
push
out
fnstenv
arpl
imul
or
aas
pushf
mov
sub
out
xor
sub
jmp
mov
imul
or
push
jo
mov
stos
in
jecxz
dec
add
rcl
push
xchg
sub
out
jg
mov
mov
sub
das
xchg
jl
ret
repz
insb
sbb
xorb
jae
imul
inc
pop
sbb
std
push
cmpsb
out
rorb
sar
pop
arpl
jg
int3
inc
int3
lock
in
pushf
mov
push
xchg
das
fs
lea
subb
jne
sti
inc
or
je
mov
jbe
pop
mov
ljmp
fwait
outsl
fs
cmp
lcall
sti
popf
pop
enter
inc
mov
and
xlat
jge
sbb
cmpb
mov
cwtl
pop
imul
xchg
adc
in
jl
jae
and
adc
fildll
cmpl
mov
jnp
sahf
mov
cs
mov
arpl
inc
filds
jg
add
sub
or
lock
xchg
mov
std
pop
lret
ds
mov
pushf
sahf
rcll
adc
test
aas
mov
or
pop
mov
cmpsl
mov
bnd
sub
lcall
addr16
cli
in
test
jne
inc
jmp
xchg
popa
push
pop
out
movsb
test
movsb
ss
sub
xchg
inc
addr16
mov
sub
push
adc
lahf
popf
daa
lods
mov
inc
adc
mov
lods
ds
add
sub
imul
repnz
jecxz
insl
jo
xor
lock
mov
repz
xchg
mov
stos
cmpsl
int
sub
push
mov
xor
sub
jnp
mov
pop
dec
push
fwait
dec
mov
test
lcall
scas
push
add
bound
xchg
xchg
movsl
arpl
pop
mov
jae
adc
mov
jne
and
and
in
loop
lock
aaa
xchg
stc
or
fstps
jmp
xchg
sub
fwait
dec
xchg
and
mov
lea
imul
lds
imul
cltd
xor
jl
notl
add
or
cltd
sub
mov
xchg
int3
add
inc
or
into
mov
ret
sub
scas
inc
popa
dec
mov
xor
jge
push
test
nop
push
fnstenv
mov
push
mov
xchg
jb
pop
jecxz
out
jecxz
pop
lock
aaa
pushf
cwtl
mov
loope
xor
mov
cmc
sbb
adc
ret
sbb
sahf
in
add
repnz
inc
pushf
arpl
bound
mov
pop
jbe
data16
inc
cmpsl
outsb
or
iret
or
cmp
push
push
cmpsl
lock
sub
popf
clc
jns
adc
jae
ficoml
ds
bound
cltd
movsb
sahf
cmp
cmp
push
adc
mov
negl
dec
notb
push
sub
xchg
pop
xchg
fcompl
rcrl
jmp
pop
loopne
lahf
mov
lea
into
pop
ds
jb
xor
inc
outsl
or
xchg
mov
mov
sbb
adc
xchg
imul
lods
push
pop
dec
int3
xor
push
xchg
inc
push
test
jg
imul
fs
jmp
add
jecxz
and
jg
bound
cmp
adc
ret
pusha
sub
pop
nop
xor
sbb
mov
jmp
push
cmc
jl
fwait
leave
and
add
jg
cmp
dec
int3
mov
fadds
sbb
outsl
sbb
loopne
subb
mov
jae
fadd
sbbl
sub
fimull
cmpsl
rclb
and
jbe
cs
popf
daa
pop
cwtl
jg
xchg
sbb
xchg
cmp
incl
xor
push
jnp
sbb
pop
add
and
rcrb
mov
fsts
cwtl
in
sahf
mov
mov
or
fistps
jno
imul
xchg
popf
call
xchg
mov
jmp
sbb
jo
jne
inc
outsb
and
fs
xchg
xor
imulb
jp
sub
and
jo
xchg
lea
test
xchg
jmp
int3
mov
jb
imul
out
xchg
out
in
addr16
xor
xchg
mov
mov
cmc
inc
cs
outsl
mov
push
jbe
push
and
and
decb
and
addr16
mov
or
push
push
sub
pop
push
lea
aam
or
dec
aas
pop
and
inc
fcomps
adc
xor
add
flds
fnclex
push
dec
popa
arpl
jmp
ss
xchg
push
mov
enter
out
sarb
repnz
dec
movsb
cmp
push
xchg
or
mov
mov
rclb
and
test
jl
mov
jno
lock
jl
imul
or
push
out
push
daa
inc
and
cs
sub
data16
sub
aas
insl
jecxz
sbb
jle
iret
xchg
inc
ljmp
cltd
fs
les
fs
pusha
jg
pop
add
mov
xchg
cmovp
xor
or
add
mov
sbb
imul
xchg
mov
push
adc
pop
sub
xor
push
lods
test
pop
jp
sbb
sub
inc
jnp
sub
sub
adc
out
and
ss
xor
cltd
xor
sub
fsub
cmpsl
in
mov
and
xor
test
rolb
pop
adc
scas
rep
sti
lds
or
mov
jbe
sub
mov
xchg
rclb
cld
and
sub
loopne
popf
jmp
imul
cs
sbbl
push
flds
mov
ss
mov
js
inc
aam
push
dec
das
loop
in
push
es
pop
xchg
inc
adc
xor
fistl
cmpsb
xchg
loope
imul
mov
jb
xchg
jl
pop
rolb
mov
leave
sub
inc
lea
jmp
fistl
adc
dec
mov
jne
push
loopne,pn
stos
ljmp
imull
or
movsl
push
gs
xchg
or
or
movsl
or
jae
xchg
in
popf
push
mov
and
bound
sub
popf
inc
mov
ret
push
mov
pop
cmc
push
imul
scas
mov
mov
sub
and
push
pop
loopne
je
ljmp
cmpsl
cmpsl
aaa
sbbb
inc
out
adc
ss
orl
fnstsw
and
add
out
out
sarb
and
mov
sub
jle
jne
sub
mov
in
and
add
pop
xlat
xchg
push
and
xchg
and
std
scas
outsb
xchg
mov
mov
pop
in
gs
shrb
pop
pop
add
mov
xor
adc
int3
enter
lret
fsubs
adc
or
nop
inc
push
into
jns
std
int
popl
cmovo
es
rorb
cmp
mov
add
shl
ds
mov
sbb
mov
dec
pop
xor
sub
mov
loop
movsb
icebp
xor
out
dec
jl
push
lds
adc
outsl
fwait
in
mov
xchg
mov
lcall
push
repnz
mov
dec
popf
mov
cmp
fnop
sub
mov
popf
jmp
push
cmpsl
xchg
adc
sub
jl
and
xor
inc
hlt
daa
inc
gs
leave
aad
sub
xchg
stos
outsb
int
testl
imulb
in
xor
cmp
mov
das
loop
sub
xor
int3
ret
pop
daa
pop
inc
mov
shrb
xor
jp
lods
xor
lret
mov
push
mov
mov
out
cmp
incb
jnp
add
or
outsl
scas
xor
xor
and
xchg
mov
addl
fidivl
adc
inc
inc
xchg
stos
out
ja
and
mov
xchg
imul
push
xchg
xor
add
jns
jmp
xor
cld
mov
mov
shlb
fmull
sbb
pop
or
dec
mov
mov
repz
mov
and
loop
cmp
adc
xchg
mov
addr16
or
arpl
imul
or
lret
mov
xor
ds
push
adc
pop
add
nop
mov
ret
pusha
inc
outsl
stos
cltd
and
insl
jecxz
pushf
call
cs
stos
pop
and
les
inc
or
and
shl
addr16
sub
jno
sub
fsts
out
clc
push
outsl
adc
sub
aad
std
aas
test
xor
lea
xorb
subl
dec
and
dec
and
test
and
mov
xor
mov
stc
push
aad
adc
pop
push
xor
movsl
adc
call
lea
lods
inc
pop
cld
lea
popf
add
dec
push
mov
sub
outsl
out
push
call
inc
mov
scas
arpl
adc
bnd
out
or
sub
dec
adc
aad
hlt
sub
in
jg
nop
dec
pusha
adc
mov
adc
out
lock
test
jb
loope
call
repz
xchg
pushf
movsb
sub
fwait
jns
inc
lret
xor
xchg
out
pop
inc
mov
sub
xchg
pushl
mov
test
pop
add
sub
push
xchg
imul
mov
sub
icebp
sbb
mov
je
sub
jp
inc
xchg
cs
testb
ja
test
adc
inc
popf
push
mov
loopne
push
inc
sbbb
push
ret
pop
mov
lcall
and
subl
or
into
pop
shrb
inc
and
dec
das
and
ljmp
ljmp
loopne
sbb
sub
or
xchg
lcall
lock
add
mov
cmpsb
test
jne
pop
hlt
cwtl
aad
test
ljmp
movsb
jne
add
dec
cs
or
xchg
mov
imul
inc
mov
jno
add
jns
jge
popa
xchg
add
add
jp
lock
in
imul
cmpsl
inc
mov
sub
add
cmpsb
jle
push
lea
daa
inc
inc
mov
push
xor
xchg
jge
rorb
add
jnp
and
ljmp
hlt
loopne
push
shrl
out
fisubl
xlat
or
mov
sbb
lahf
daa
and
mov
neg
out
ret
sub
pop
mov
in
in
push
push
mov
xor
hlt
mov
and
sub
pop
movsl
mov
push
test
in
ljmp
aas
ret
fstl
mov
mov
ljmp
pop
cmp
sub
mov
and
lods
out
out
shl
push
pop
mov
jp
mov
pop
in
fwait
mov
shlb
lock
xor
mov
mov
mov
push
mov
dec
jo
test
aad
adc
or
repnz
loop
shr
in
enter
xor
mov
mov
insl
sub
inc
repz
mov
cld
mov
les
imul
stos
and
xor
mov
fs
inc
cmp
and
jne
in
je
outsb
hlt
xchg
ret
and
in
fs
mov
outsw
and
xor
cmpb
in
je
addr16
pop
and
adc
lods
mov
push
ljmp
mov
loop
js
push
inc
jns
push
outsb
sub
imul
in
inc
and
or
pop
faddl
jmp
inc
sub
loope
dec
push
pop
pop
push
xchg
test
ljmp
shll
adc
iret
xchg
sub
sbb
dec
cmp
gs
les
test
clc
pop
aad
insl
imul
xchg
jne
je
stos
cmp
insb
xor
sbb
shrb
sti
jl
mov
and
lock
pop
imul
and
out
pop
imul
jns
in
xchg
gs
pop
ds
cmp
les
jno
sub
cmp
mov
out
out
push
std
cmp
shrb
iret
into
imul
pop
jbe
mov
and
push
and
in
insb
xchg
inc
cltd
es
cmp
xchg
or
jo
xchg
out
xchg
mov
mov
mov
push
movsb
dec
fs
lea
jo
fs
enter
and
fsin
pop
imul
sarb
insl
jl
mov
daa
ficomps
and
imul
shlb
inc
jmp
or
sub
jo
dec
cmp
pop
out
xchg
mov
mov
imull
pop
out
loopne
popf
pop
cltd
imul
clc
mov
psraw
adc
not
loope
xor
adc
test
xor
fisttps
push
jne
pop
xchg
dec
inc
sbb
out
ret
jbe
jecxz
movsl
sub
icebp
mov
cli
mov
cmp
push
mov
sahf
mov
test
sarl
adc
push
or
add
adc
xchg
popa
jp
subl
scas
cli
iret
cmp
xchg
mov
and
nop
ror
mov
xorl
loopne
sbb
movsb
jno
cmp
in
sbb
aas
out
xchg
clc
int
push
inc
sahf
sub
sbb
inc
pop
fists
es
fnsave
data16
into
loopne
sbb
sbb
inc
insl
or
mov
mov
xchg
push
lahf
push
jo
jae
test
jl
pop
fsts
mov
dec
gs
daa
cmp
test
bound
inc
dec
cs
mov
mov
jne
sbbl
shll
fcom
stc
sbb
in
test
dec
jp
popf
notl
push
aas
jbe
jg
jp
sub
mov
xchg
mov
nop
push
sbb
mov
outsl
in
in
add
je
xchg
sahf
loopne
jnp
xchg
lahf
pop
add
pop
ret
cwtl
das
push
pushf
jno
popf
xor
jno
sbb
adcl
lcall
sti
ja
jmp
xchg
adc
and
test
test
cmpsb
nop
jp
pop
adc
xchg
mov
xchg
jle
mov
adc
cmp
sub
xchg
daa
pop
mov
jp
xor
subl
mov
test
gs
and
rorb
and
andb
sbb
jp
jl
cld
xchg
sbb
mov
insb
hlt
pavgb
aad
hlt
pushf
movsb
popa
outsl
test
fcoml
mov
loopne
pop
dec
jle
xchg
fwait
test
mov
push
pushf
dec
mov
dec
mov
adc
push
dec
outsb
movsb
insl
pushf
mov
pop
dec
lahf
cmp
dec
sahf
and
cltd
movsb
jnp
test
xchg
popl
jo
xchg
push
sbbb
jg
pop
or
cmpb
je
jg
mov
lcall
push
jg
cmpl
dec
xor
lock
mov
mov
imul
das
mov
out
movsl
pop
pop
push
mov
ds
rcrl
and
test
jg
ret
mov
imul
push
cld
sub
stos
fldcw
daa
test
pop
xor
lret
gs
jne
out
sub
int
cmp
inc
add
push
adc
test
daa
addr16
mov
sub
mov
mov
add
cmc
imul
loope
bound
shll
push
mov
jp
and
jns
rclb
cs
xchg
test
and
imul
fcompl
fsts
or
mov
mov
jbe
xchg
loopne
pop
or
push
pop
test
push
jg
xorl
mov
loop
mov
adc
xor
sbb
cmp
and
sbb
pop
fwait
mov
cmp
add
sub
loope
sub
int3
in
sbb
je
jmp
mov
xor
and
daa
or
dec
or
cmp
dec
cmp
out
rcrl
je
ljmp
or
ficoms
gs
orl
pop
fisttpl
inc
inc
mov
mov
add
adc
movsl
add
push
nop
inc
xor
adc
ret
out
icebp
push
jne
fists
jle
fwait
mov
xchg
js
mov
cmp
ret
dec
sbb
or
lret
fldenv
movl
push
jns
movsl
iret
cmpsl
or
sbb
test
lcall
push
test
jle
aaa
add
sub
xchg
dec
sbb
and
sti
pop
and
mov
lret
or
xchg
sub
jecxz
test
add
mov
mov
jl
push
pop
fldenv
push
lahf
fucomi
hlt
adc
jge
imul
xor
add
add
test
and
sub
and
ds
push
lahf
push
cmpsb
dec
lea
mov
mov
insl
repnz
fwait
pop
popf
outsb
add
ja
outsl
inc
mov
mov
or
push
mov
sub
jnp
loop
cltd
cli
sbb
cmpb
add
mov
test
into
aas
add
mov
popf
jp
and
xor
xor
mov
lea
icebp
cmc
sbb
xor
inc
inc
push
dec
arpl
cmp
addr16
xor
or
jns
imul
push
dec
mov
stos
adc
pop
mov
and
xchg
clc
add
test
sub
xor
inc
lds
mov
add
jl
mov
sbb
in
adc
cltd
loop
sub
test
xor
ffreep
cmp
popa
movsb
jmp
cltd
mov
adc
arpl
adc
movsb
add
inc
xor
sub
cmp
adc
adc
imul
pop
adc
dec
cmp
test
andl
daa
jge
push
adc
sub
jo
into
cli
jb
pop
xor
clc
sbb
sti
movsb
mov
jne
in
push
movsl
inc
imull
into
sbb
popf
dec
int
cli
mov
xor
test
sbb
push
arpl
fs
or
push
into
in
adc
incb
das
xchg
cmp
enter
fbstp
popf
pusha
inc
dec
imul
mov
sub
jno
mov
lock
scas
dec
sub
in
mov
lea
mov
mov
mov
mov
in
cmpsl
pop
arpl
data16
pop
xchg
jle
bound
loopne
inc
repz
dec
movsb
xchg
stos
imul
sbb
push
test
cmc
and
mov
mov
mov
add
dec
sbb
lea
das
ds
addr16
mov
int
out
lds
mull
cltd
loope
pop
jl
inc
dec
loop
orb
notl
mov
pop
imul
test
mov
cli
sbb
lock
repnz
pop
in
jbe
loopne
pop
pop
jbe
lcall
loop
imul
sub
sbb
pop
mov
lea
mov
adc
mov
sarl
pusha
out
xor
in
movsb
jle
das
ffreep
imul
xchg
sahf
pushf
shr
arpl
lea
ljmp
out
cmp
jbe
pusha
je
inc
and
hlt
es
rcrb
adc
push
jge
jnp
mov
jns
jbe
addr16
scas
mov
fisubl
repz
mov
jno
movsb
cmp
popf
imul
adc
mov
xchg
js
int3
jo
mov
and
cmp
mov
mov
jle
cmp
out
cmp
adc
mov
xchg
sahf
popf
add
adc
test
je
loope
loope
push
push
andb
outsl
fwait
and
or
test
mov
mov
push
in
dec
sbb
inc
enter
movsl
pop
jb
popa
pop
or
push
mov
xchg
sahf
outsb
jl
pop
pop
jecxz
jae
jge
imul
lret
adc
push
ljmp
test
push
adc
jg
pushf
jae
cld
pushf
xor
orl
and
mov
test
jne
mov
xchg
and
pop
cmpb
sbb
mov
popa
mov
pop
jne
in
sbb
adc
lahf
mov
mov
mov
dec
sbb
mov
andb
xchg
pop
nop
nop
xchg
mov
jb
mov
xchg
push
mov
lret
sub
xchg
lahf
pushf
mov
insl
mov
pusha
xchg
outsb
xorl
or
jg
into
push
test
arpl
mov
xchg
adcl
jle
sbbl
xor
mov
xchg
push
mov
pop
xchg
pop
xchg
mov
push
test
xchg
popa
lahf
faddl
popa
fwait
lahf
jl
insb
jle
loopne
mov
and
jbe
lcall
jno
fwait
xchg
adc
ja
xchg
test
fcoml
adc
sbb
cmp
sahf
mov
jbe
test
and
and
nop
inc
ret
bound
fdivp
or
sahf
imul
andb
xor
mov
movsb
test
and
inc
sub
popa
into
jle
lea
jmp
jo
adc
insb
push
mov
pop
xchg
icebp
addr16
cmc
popf
mov
imul
lea
in
fnsave
rclb
xchg
inc
js
mov
icebp
inc
cli
sbb
jp
lds
stc
jl
mov
inc
pop
les
jnp
fisttpl
daa
xor
cmpsl
xchg
push
frstor
jg
je
jbe
pop
mov
cli
mov
imul
inc
fsub
cmpsl
in
out
jae
sub
insb
pop
fndisi(8087
cmc
cmp
ljmp
imul
and
lea
push
aad
xchg
jne
je
push
cli
mov
mov
call
das
adc
inc
popf
out
popl
call
pop
jae
push
movsb
mov
add
cld
mov
jo
in
jne
cltd
dec
xchg
mov
hlt
hlt
popf
or
sar
lahf
inc
in
and
lahf
cltd
adc
repz
cmp
js
ja
cwtl
xor
sbbb
pop
cltd
dec
or
sub
xchg
jecxz
div
lahf
aam
ficomps
dec
or
xchg
mov
ja
rdpmc
test
mov
add
cwtl
dec
add
mov
mov
test
mov
adc
dec
inc
mov
sbbl
mov
test
push
add
and
outsl
adc
aas
mov
lcall
jecxz
movsl
clc
or
inc
xor
cwtl
aaa
shll
sub
xchg
inc
aas
mov
mov
jl
cli
movsb
sbb
mov
test
or
outsl
jo
inc
pop
jmp
sbb
das
ja
xor
nop
mov
mov
mov
sahf
push
mov
mov
add
mov
leave
sub
mov
loope
add
mov
inc
mov
imul
xchg
mov
std
pop
sbb
xor
cltd
xor
mov
popf
bnd
addr16
mov
fsubrl
popf
mov
addb
inc
mov
jl
mov
or
jae
cltd
popa
lcall
xchg
adc
push
jnp
mov
jae
test
or
sarb
push
jne
jns
lea
popf
imul
dec
mov
adc
push
test
mov
mov
fwait
jg
les
add
jo
jne
jne
rcr
popa
push
inc
movsb
mov
mov
and
pop
int3
lock
nop
sub
es
and
cmp
sub
test
rcrl
xchg
test
test
fs
push
xlat
insl
lret
lds
das
loop
sub
in
clc
and
pop
sar
fldenv
adc
das
xchg
clc
cmp
jbe
stc
ss
cli
lret
cmp
je
jo
and
mov
push
movsl
inc
xor
outsl
push
popa
out
sub
jle
fsub
sub
and
in
les
xchg
icebp
xchg
jl
or
shl
lods
mov
xchg
pop
or
jno
or
adcb
push
jno
jp
push
sub
icebp
pushf
dec
push
sbb
adc
add
mov
pop
int3
jmp
and
pop
pusha
or
das
and
inc
pop
mov
jnp
jne
mov
outsl
mov
pop
adc
mov
and
inc
test
call
xchg
arpl
dec
xorl
push
idivb
test
f2xm1
ja
jae
adc
sub
sub
sbb
addr16
cmp
mov
push
adc
sub
popf
mov
shll
test
lods
std
xlat
inc
insl
adc
adc
adc
nop
sarl
inc
adc
nop
les
pop
jns
pushf
mov
pop
add
cltd
xchg
loope
call
dec
xor
inc
cmp
jns
out
ds
xchg
testb
inc
jl
pop
cli
js
lods
sbb
jg
test
sub
call
inc
xor
bound
xchg
enter
daa
jge
mov
ljmp
leave
popf
sub
jmp
dec
std
pop
nop
mov
xchg
pop
jno
loopne
sub
ds
lds
xorb
jecxz,pn
inc
hlt
sub
jns
pop
sti
lcall
out
mov
iret
mov
stos
mov
jne
movsb
nop
imul
mov
push
pop
push
mov
and
push
xor
aas
in
sahf
add
inc
aad
out
aad
jns
sub
daa
sahf
jmp
lahf
push
cld
push
pop
add
dec
addr16
loop
sti
cmc
ror
iret
add
es
roll
sub
cli
hlt
pop
xor
mov
and
iret
cld
adc
or
aas
pop
and
jae
dec
inc
xchg
adc
daa
inc
xchg
lahf
fistpl
enter
mov
jo
in
pop
fs
cld
mov
push
dec
pusha
push
ljmp
mov
mov
inc
jmp
test
repz
and
outsl
je
out
in
or
jns
hlt
mov
add
cmp
lock
arpl
test
sbb
or
movsb
push
out
jge
sar
jle
inc
mov
loop
jne
mov
pop
mov
and
je
xor
mov
ret
push
push
mov
imul
ja
pop
mov
dec
sbbl
test
mov
adc
lock
sub
add
repnz
mov
jno
call
inc
dec
test
loopne
jle
insw
dec
mov
loopne
gs
cmpsb
shll
popf
call
and
xor
xor
lock
xchg
testl
cld
in
out
mov
lds
popf
adc
push
dec
fwait
xor
mov
mov
out
xchg
in
pop
in
daa
fisttps
mov
cmc
aaa
dec
cmp
inc
inc
cmpsb
lcall
je
data16
int
push
adc
scas
xchg
shll
sub
cmp
bound
or
inc
fs
push
out
inc
add
shlb
push
popf
jno
sub
push
addr16
and
mov
cld
into
in
adc
aas
mov
bound
arpl
mov
mov
cld
inc
orl
sub
cs
add
add
je
and
gs
dec
sub
stc
imul
int3
pop
sbb
pop
ret
mov
shrl
test
mov
mov
lea
sub
jl
pop
repz
mov
in
loope
in
loopne
add
xor
push
sub
push
dec
lahf
std
mov
and
sub
jb
jne
fs
lahf
or
jae
repz
gs
xchg
ss
and
imul
adc
lds
mov
notl
daa
out
cmpsl
call
and
sub
ja
lcall
movsl
sbb
cmp
mov
rcrb
pop
aas
ja
xlat
inc
sbb
mov
rcrb
push
sbb
cmp
lret
fs
stos
cld
or
cmp
in
adc
clc
sysret
sub
in
fisttpl
ret
pop
nop
sarl
lcall
sub
or
mov
cltd
test
mov
mov
repz
cmp
mov
iret
cmp
inc
xchg
fwait
in
imulb
fs
inc
jecxz
ret
xchg
ret
int3
mov
movsb
int
lods
xchg
xor
cmp
in
ds
int3
inc
push
jne
imul
sbb
shll
lea
imul
mov
leave
movsb
xchg
jb
mov
jae
fildll
movsb
in
xchg
addl
adc
fildll
push
and
popf
mov
fs
or
cmpsl
push
sbbl
imul
pop
push
mov
cwtl
in
xorl
or
mov
inc
ficoms
mov
hlt
inc
mov
mov
popa
test
push
xchg
in
jmp
jne
xor
xor
xor
leave
xchg
sub
adc
cmc
cmp
mov
pop
jle
or
out
add
jno
cmpsb
inc
jno
cmpsl
xchg
xchg
in
clc
lahf
sbb
sbb
jae
loop
nop
call
pop
xchg
fidivrl
pop
xor
lret
pop
mov
das
movsb
xchg
loope
adc
jno
nop
sub
shlb
rorl
lds
push
repz
and
dec
jne
mov
fs
add
and
mov
push
pop
jns
in
fwait
lock
movsl
ja
mov
cmp
cmp
cwtl
push
push
mov
testb
pop
jns
xor
insb
ds
fistl
loopne
mov
sub
adc
leave
or
add
or
sbb
cmp
ss
sbb
ret
jle
mov
pop
loopne
mov
push
gs
xor
mov
aas
xor
fwait
pop
out
mov
call
hlt
sub
aam
sub
sbb
in
movsb
adc
xlat
push
push
imul
or
ret
xchg
and
pcmpeqb
pop
out
xor
nop
stc
fistps
pop
xchg
adc
jle
out
fildll
and
or
sbb
pop
mov
jnp
mov
nop
dec
pop
ljmp
mov
test
lock
inc
ret
mov
push
xor
outsb
mov
jp
lock
dec
xchg
paddsb
push
das
stos
sub
xchg
mov
mov
shll
test
pop
or
push
lcall
jno
push
and
jp
mov
and
jmp
fnstenv
and
sarl
imull
push
in
or
sub
out
inc
rcll
push
imul
mov
jns
movsb
out
test
lret
xchg
inc
xor
in
sub
stos
imul
pop
sub
adc
mov
adc
xchg
mov
push
pop
push
inc
and
and
mov
int
movsl
add
mov
and
adc
dec
ss
xor
arpl
cmp
lock
fnsave
inc
xor
pusha
cmp
imul
je
and
xor
out
ds
cmp
jae
mov
mov
add
test
jg
adc
inc
push
xchg
lea
jns
pop
xchg
xor
mov
mov
imul
pusha
sbbb
fcoml
les
sbb
loop
test
rolb
xchg
mov
popa
adc
or
imul
mov
lods
push
push
imul
rcrb
adc
jnp
sub
lahf
pop
movsb
add
pop
mov
lahf
movsl
and
xchg
push
adc
push
mov
fwait
xchg
xor
lahf
scas
pop
lea
outsl
mov
mov
xchg
jp
les
push
inc
mov
loopne
imul
popf
sbbb
xchg
popf
and
xchg
mov
jae
ja
mov
sbbb
mov
and
mov
test
je
fwait
fwait
fwait
jl
les
jns
popf
mov
xchg
outsl
cmp
jl
xor
xchg
mov
jno
fdivrs
data16
jp
aas
mov
lcall
jb
mov
orl
jno
mov
mov
cltd
adc
xor
sbb
mov
movsb
faddl
add
jl
or
movsb
xchg
mov
push
xchg
mov
in
cld
popf
loopne
lods
pop
and
jae
and
jp
lahf
sbbl
adc
or
test
andl
pop
popf
pop
pushf
pop
popf
mov
pop
mov
popf
mov
push
mov
xor
xchg
ficoms
mov
sbb
xchg
xchg
addb
xchg
jns
push
shlb
pushf
push
popf
arpl
xchg
xchg
add
jno
jle
mov
xorl
sub
sahf
add
arpl
push
outsb
sbb
jg
jle
inc
mov
mov
xchg
movsb
shll
outsb
imul
and
pushf
popf
lea
mov
arpl
push
push
push
mov
pushf
xchg
mov
inc
pop
jns
ja
aas
mov
fwait
jne
sbbb
jns
sbb
adc
pop
int3
filds
pop
mov
shr
ja
fcmovu
push
shl
rcrl
cld
ljmp
xor
adc
scas
sub
daa
jno
inc
mov
xor
mov
jg
shll
lods
jl
out
scas
into
mov
icebp
rcr
add
xchg
sbb
cwtl
fucomip
outsl
daa
inc
out
inc
addr16
in
out
testl
sahf
xorl
jnp
into
cmp
outsl
inc
mov
cltd
cltd
xor
dec
addr16
jne
out
ret
xor
lock
sub
sub
addr16
jne
pop
adc
fwait
imul
cltd
cmp
addl
popa
lret
and
xchg
dec
lahf
lds
pop
shld
pop
lds
cmp
scas
ret
jg
nop
add
lea
aam
mov
jle
xorb
sub
inc
shl
data16
push
shll
mov
iret
push
addb
mov
push
stc
out
ror
push
add
cmpsl
in
rorb
lods
jg
xor
jo
or
sub
popl
cmc
cmp
das
gs
mov
sub
ljmp
stos
inc
movsb
mov
ret
test
cld
or
into
loopne
cli
cmp
xor
push
ljmp
sub
mov
fwait
outsl
hlt
insb
sbb
push
dec
in
lret
mov
push
sub
pushf
pop
mov
ss
lock
mov
push
pusha
fnclex
xchg
lods
and
pop
cmpsl
push
mov
sub
and
movsb
add
imul
mov
test
shll
imul
adc
xor
adc
or
mov
ja
xchg
sti
push
jge
bound
inc
decb
mov
or
insb
in
jp
mov
or
sbb
mov
cs
addr16
sahf
clc
movsl
or
nop
jns
loopw
mov
insl
and
sub
rolb
xor
shll
push
je
repz
cmp
popf
test
and
insb
xchg
fildll
jnp
lock
sbb
dec
mov
loope
cmpsl
mov
jno
inc
sub
arpl
sub
xor
jo
add
popa
repnz
jbe
sub
in
insl
or
loope
xchg
sub
sub
fisubrs
jae
push
outsl
pushf
sbbl
cmc
pop
mull
imul
ljmp
dec
xchg
imul
mov
sub
jbe
arpl
mov
imul
mov
movsb
in
push
aaa
mov
mov
pop
ret
lea
into
add
or
add
mov
out
outsl
imul
jg
insb
adc
sbb
imul
push
jne
std
fisttpl
mov
lea
imul
sbb
pushf
addr16
notb
lret
mov
jno
repz
ljmp
push
push
lock
pop
cmpsl
jno
fs
jae
jne
mov
jne
xchg
mov
mov
xor
xchg
xor
test
push
fxtract
mov
loop
mov
dec
mov
and
pop
stos
out
mov
sbb
lahf
adc
loope
rol
pop
jno
or
stos
in
sub
cmpb
mov
nop
nop
ret
xchg
cmpsb
shl
loop
je
repnz
ret
and
xor
into
leave
sub
outsl
adc
mov
push
stos
push
pop
fiadds
aam
leave
push
jge
scas
int3
sbb
pop
or
jns
shlb
cmpsl
or
mov
mov
out
and
sbb
xchg
loop
ds
das
jb
lahf
out
test
int3
sbb
mov
push
aas
jo
data16
je
ds
stc
dec
mov
xor
or
test
cmp
push
pusha
mov
imul
clc
sbb
les
iret
xor
pop
nop
adc
mov
insl
ret
and
or
data16
loopne
in
xor
pop
mov
repz
scas
push
arpl
rclb
ds
lahf
loopne
xor
aad
dec
cmp
mov
mov
add
or
add
aas
sbb
cmp
sub
inc
lahf
lahf
push
rorb
xchg
pop
mov
dec
call
dec
fisubrs
xor
sub
flds
cs
xchg
add
mov
stos
popf
adc
xor
sbb
pop
add
push
je
test
mov
loopne
adc
cmpb
mov
push
loop
imul
and
mov
and
imul
xor
fcoms
adc
cmc
fstl
into
xorb
jae
lea
test
push
out
in
inc
dec
lret
hlt
aaa
sub
add
int
cmpsb
rcrl
xlat
loope
shlb
iret
mov
into
push
cmp
es
pop
data16
addr16
in
and
mov
and
jns
movsl
fwait
mov
push
xlat
test
or
push
push
test
lods
int3
mov
stc
xchg
jmp
inc
in
rolb
sub
mov
test
jmp
pop
lahf
insb
sub
cmp
xchg
in
xor
pop
and
aaa
adc
jbe
cltd
outsl
jg
fsubl
mov
movsb
adc
pop
testb
mov
sub
sub
cld
and
cmpsl
loop
add
bound
cmc
or
imul
addr16
xor
test
adc
popf
inc
mov
dec
pop
stos
jl
mov
pop
jecxz
and
and
push
pop
mulps
mov
bound
out
ds
aam
push
adc
lods
sub
or
imul
jb
in
push
cmpsl
scas
sbb
outsl
loopne
push
divl
mov
loopne
lcall
jge
addr16
xchg
xchg
pop
call
add
push
andl
and
out
xor
push
jno,pt
mov
push
xor
and
sbb
loopne
lahf
lds
lahf
push
inc
mov
popf
mov
inc
xchg
mov
lds
dec
jno
add
add
sbb
in
or
lods
lahf
sub
mov
sub
cmp
aaa
or
push
xor
lods
and
sub
mov
xchg
add
inc
ss
loope
hlt
dec
loopne
cld
mov
xchg
jp
jo
or
jne
push
movsl
adc
lret
mov
push
or
sahf
pop
jns
aad
xor
addl
and
sub
jae
xor
mull
cltd
lcall
and
lcall
shrl
jne
in
cmp
sub
pop
sti
jecxz
shll
sub
xchg
inc
mov
out
mov
xchg
fsubs
ds
stos
push
mov
sahf
test
add
test
das
pop
jmp
mov
sbb
jnp
test
add
rclb
xor
in
fucomi
call
jbe
roll
fldcw
lock
insb
ficompl
dec
fstps
adc
jg,pn
mov
pop
lret
lods
sar
and
stc
xor
push
cld
or
sub
mov
rorb
and
call
xor
test
xchg
cld
scas
lcall
imul
xor
jnp
pop
push
mov
jge
stos
pop
std
and
mov
vmwrite
ds
rorb
pop
adc
lds
insb
and
cmc
jg
dec
xor
lea
cmp
test
inc
pop
enter
or
loopne
dec
xchg
jne
ds
dec
cltd
or
lahf
jmp
loop
mov
sub
xchg
pop
out
cwtl
into
xchg
xchg
mov
sub
das
cltd
negl
fcomps
fistps
test
sub
stos
sbb
xor
pop
sub
test
push
cmpsl
test
mov
xor
call
or
cli
sarl
clc
rorb
jecxz
mov
add
push
hlt
xchg
fcmovnu
jge
push
adc
mov
push
mov
xor
gs
cltd
mov
sub
adc
xchg
inc
xchg
jo
fistl
inc
dec
inc
or
lcall
cmp
inc
cmp
in
je
int
inc
test
call
shrl
xchg
int
test
rol
pushf
cli
mov
inc
testl
xchg
cltd
into
mov
and
cwtl
and
xchg
adc
xchg
subb
add
test
ret
sahf
je
add
popa
or
lcall
mov
xor
out
mov
and
fdivrl
jo
push
js
push
push
divl
repz
popf
mov
xchg
and
push
adc
xor
xchg
sbb
iret
scas
repz
sub
movsb
repnz
or
adc
and
xchg
xor
inc
jns
xor
xchg
or
jg
inc
and
push
jecxz
sbb
inc
fildll
push
jae
repnz
mov
pop
imul
movsl
sbb
dec
cmp
mov
sub
clc
push
add
adc
cmpsl
mov
gs
in
out
into
scas
test
iret
shr
mov
jno
push
pop
leave
mov
pushf
adc
mov
ret
out
mov
rclb
ss
pop
loop
jl
jg
loop
mov
push
hlt
sbb
jbe
and
rolb
arpl
ret
jecxz
lods
inc
mov
dec
fisubrl
sub
cld
in
and
loope
or
jbe
mov
ds
sbb
movsb
loope
dec
jnp
mov
pop
or
movl
add
dec
cwtl
jecxz
cs
test
je
sbb
push
arpl
into
dec
jno
adc
adc
ljmp
dec
jmp
pop
inc
inc
sbb
cli
fsubr
xchg
cmp
popa
push
addb
iret
push
adc
mulb
je
pop
std
pop
idiv
jne
sti
aaa
push
les
imul
mov
and
jne
fs
adc
pop
mov
insl
mov
lea
inc
out
aas
imul
cmp
mov
fstl
aam
xor
xor
sub
int3
std
cmp
outsb
sub
into
xor
mov
std
xor
loop
hlt
jnp
pop
and
push
scas
sti
test
aaa
stos
or
adc
xor
add
sub
addb
mov
or
sbb
add
bound
mov
lods
pop
sub
pop
inc
lcall
inc
cmpsl
xorb
jge
sbb
pop
jle
cmp
mov
sub
add
cmp
orl
adc
pusha
mov
sbb
test
les
data16
ja
in
outsl
imul
xchg
out
jb
mov
lcall
jmp
xor
mov
fildl
xor
push
test
aam
xchg
pop
push
out
pop
stos
lcall
in
into
push
movsl
push
jle
xchg
add
xor
mov
jae
cmpsl
xchg
cwtl
hlt
xor
ljmp
test
sbb
push
sbbl
dec
cmpsb
outsl
xchg
inc
push
lea
xchg
sbb
cltd
or
inc
fwait
mov
js
cmc
sti
punpcklwd
shrl
add
in
push
jmp
arpl
data16
negl
hlt
imul
ljmp
cmpsb
call
dec
sbb
inc
mov
addl
cltd
dec
pop
mov
lea
adc
sarb
sub
loope
or
and
jae
lea
cmp
mov
stos
dec
out
int
loopne
mov
cltd
sub
mov
lods
pop
fwait
jp
xchg
and
daa
sub
or
adc
xchg
in
scas
scas
ljmp
sbb
adc
push
inc
arpl
mov
jo
mov
andb
cmp
inc
cs
repnz
jge
andl
imul
inc
std
inc
test
push
jg
movsb
jne
dec
in
sub
jae
nop
cltd
push
xor
lea
js
mov
hlt
data16
fwait
pop
xchg
inc
or
in
inc
icebp
cltd
jle
xor
xchg
inc
cmp
icebp
push
sbb
and
inc
lds
loope
jne
push
jne
or
fsts
in
adc
cs
sbb
mov
xchg
loope
pcmpgtd
in
mov
insl
int3
imul
in
cmp
test
enter
sbb
js
sbb
inc
loopne
leave
xchg
mov
sub
filds
cmpsl
sub
insb
xlat
loope
jno
popf
je
pop
testb
or
sbb
sbb
movsb
data16
and
js
adc
imul
pop
sub
mov
add
xchg
leave
push
loope
cmp
xor
push
mov
adc
icebp
dec
loope
xor
add
std
jg
sbbb
fstpt
fiaddl
notl
pop
mov
jge
mov
movsb
je
or
insl
xchg
sub
pop
out
outsb
inc
mov
sti
and
out
lret
je
aam
inc
add
pop
insb
mov
sbb
lahf
xlat
fwait
adc
xchg
shl
or
arpl
lahf
inc
jl
mov
jmp
xor
cwtl
aas
push
loop
jmp
repnz
lods
inc
push
loope
out
fwait
daa
pop
repnz
inc
sub
cmc
mov
imul
mov
addr16
leave
cli
jnp
mov
lret
les
mov
out
xor
movsb
mov
jmp
in
add
stc
push
aas
jae
xlat
sbb
icebp
sbb
pop
and
inc
pop
imul
shll
and
xchg
out
add
push
sbb
adc
jno
or
pop
ja
mov
cld
adc
add
arpl
mov
mov
pop
and
adc
imul
push
out
xchg
sti
sub
fs
sub
pop
sbb
int
movsl
adc
mov
icebp
loope
lods
lds
xor
xchg
inc
lds
xchg
dec
cwtl
pop
in
jle
loop
xchg
push
imul
fwait
sti
jmp
dec
arpl
mov
test
mov
jno
shll
fisubl
dec
adc
push
and
ds
pop
into
pcmpgtd
sbb
test
or
push
xchg
popf
ja
daa
lret
movsb
sbb
fwait
mov
push
push
jg
mov
negl
pushf
xchg
cltd
jge
ljmp
test
adc
and
push
mov
xor
ljmp
xlat
cmp
addr16
arpl
mov
clc
gs
fldt
orl
mov
push
movsl
mov
add
mov
lcall
imul
adc
scas
inc
mov
clc
test
ss
and
and
aad
movsb
pop
cmc
test
inc
jns
or
iret
call
pop
jbe
jge
call
je
or
mov
xchg
in
cld
mov
std
andl
repnz
stos
iret
pop
mov
aas
mov
addr16
shlb
sbb
in
sahf
cmpsb
sub
out
pushf
and
out
and
shrb
xor
insl
xchg
fwait
loop
sub
lds
xchg
repz
popf
icebp
ljmp
int
mov
sub
adc
xchg
xchg
or
idivl
mov
sub
or
or
adc
add
in
dec
jg
in
arpl
or
cmp
sub
outsl
daa
mov
nop
outsl
mov
subl
push
mov
xchg
std
mov
adc
je
sub
movsb
movl
mov
fwait
mov
dec
mov
mov
mov
ret
dec
mov
xchg
jmp
daa
push
xchg
lods
sub
lea
add
sbb
test
cmpsb
and
and
mov
pop
fstpl
mov
cwtl
and
sub
hlt
xor
sbbl
lahf
push
cmpsb
jne
push
repz
dec
inc
mov
mov
iret
in
mov
pop
sub
movsb
lock
adc
sbbl
mov
jno
xor
andb
push
mov
sbb
sbbl
mov
cmp
arpl
popf
pop
xchg
repz
jnp
lahf
test
jne
or
jle
sbbb
pushf
movsb
mov
repnz
std
cltd
lahf
adc
jp
inc
xchg
cwtd
std
lock
outsl
push
jo
adc
nop
jo
jl
cli
xchg
sbb
mov
fwait
aam
push
sbbl
mov
movsb
nop
outsl
jl
mov
xchg
xchg
stos
push
les
pushf
mov
repnz
xchg
push
and
gs
jno
insl
pop
andl
mov
xchg
mov
lcall
xchg
mov
jp
outsl
and
rclb
fcomps
popf
sbb
pushf
fmuls
cmp
fimull
mov
xchg
pusha
imul
jbe
adcb
popf
dec
gs
jne
mov
jp
addb
js
push
lahf
pop
imul
jle
jne
popf
inc
mov
pop
movsb
int
xlat
cld
orl
idiv
push
loopne
cmpl
imul
jbe
js
imul
inc
sbb
xchg
test
xchg
jge
or
pop
sahf
popf
dec
or
popl
mov
pop
ret
push
int
imul
fsubrl
movsb
leave
and
sub
cmpsl
jno
rolb
cs
outsb
or
into
mov
inc
aaa
and
jg
loope
cld
sub
mov
inc
fisttpl
add
insb
jo
jne
push
push
push
call
in
inc
mov
in
adc
jno
push
sub
dec
arpl
pop
push
loop
or
movsl
insb
jo
add
int
xor
dec
cli
sbb
mov
jmp
inc
imul
sbb
jp
mov
loop
push
test
lods
pop
mov
xor
faddl
or
cmpsl
out
sub
jnp
adc
push
and
mov
js
mov
or
test
adc
add
push
jge
imul
pushf
aas
mov
dec
movsl
in
xchg
outsb
and
lahf
fsubrs
loope
inc
push
mul
inc
out
adc
inc
dec
fwait
or
xchg
rcr
push
ror
add
hlt
push
or
adcb
pop
mov
inc
lcall
fdiv
es
xchg
rcr
adc
aad
pop
adc
out
loopne
in
rcrb
lds
fsubr
xor
sbb
cmp
add
sub
repnz
movsl
das
cld
imul
arpl
adc
add
loopne
dec
lds
movsb
ret
mov
and
jg
loope
jne
xchg
test
and
mov
push
pop
fwait
loopne
push
jecxz
add
jo
addr16
or
dec
jl
sbb
fisttpl
lods
and
repnz
daa
xchg
push
push
and
movl
jge
pop
stos
jecxz
mov
lahf
scas
andl
test
xchg
lock
inc
mov
cwtl
negl
mov
xor
mov
cmp
pop
xchg
andl
and
in
xor
bound
loope
addb
insl
addl
shll
aas
lock
add
lock
cwtl
arpl
outsb
jle
jg
jne
jne
fs
cli
adc
sub
stos
and
sub
sub
int
xchg
dec
lods
xchg
add
or
stos
and
push
data16
mov
xchg
mov
mov
sub
loop
popa
and
movsl
adc
sub
mov
popa
test
pushf
movsb
jle
add
test
cld
loopne
rcrb
push
ficoml
arpl
dec
std
int
mov
xor
sub
insl
and
dec
pop
mov
mov
sarb
mov
cmpsb
fwait
fwait
mov
jmp
jecxz
xchg
jle
in
adc
daa
jo
mulb
and
or
and
pop
js
lea
or
int
outsb
inc
xlat
test
shl
inc
or
insl
adc
and
and
push
pop
ljmp
and
sub
and
ja
inc
popl
sbb
pop
mov
mov
test
push
xchg
jecxz
daa
inc
arpl
jg
cwtl
fsts
sub
xor
mov
sbb
cmp
pop
ret
push
aaa
lea
test
or
sbb
shrb
sub
inc
push
jle
cmp
test
cld
pop
movsl
dec
mov
pop
adc
sbb
leave
imul
movsb
test
and
mov
mov
xchg
fildll
sbb
iret
nop
lret
xchg
jae
cmp
lcall
das
cmp
das
jne
xor
ficoms
push
dec
inc
jmp
jl
in
ret
call
pusha
cmp
loopne
insb
mov
or
mov
insb
decb
imul
inc
mov
outsb
fwait
add
scas
xchg
loop
movsb
cmpsl
mov
shlb
inc
out
out
mov
push
xchg
push
adc
pop
push
inc
shlb
cwtl
icebp
mov
sub
xor
popf
mov
and
cmpsb
jb
or
lret
cmpsb
mov
xchg
xchg
shl
cmc
out
shrb
movsl
or
mov
pop
nop
xchg
lcall
jl
in
xor
inc
adc
cmp
cwtl
cmp
xor
and
jne
and
mov
xchg
cmpsb
pop
jns
jo
test
inc
stc
ss
mov
sti
adc
sub
repnz
shlb
outsl
and
inc
mov
fcoml
mov
test
arpl
adc
aam
adc
inc
ds
cltd
fwait
lcall
aaa
inc
pop
add
mov
test
clc
xchg
scas
or
jge
in
ret
add
sbb
pop
xchg
in
out
mov
test
cmpsb
pop
adc
lahf
fistps
and
nop
adc
push
pusha
inc
out
jp
jge
mov
pop
pop
repz
sub
in
lock
xchg
rorl
ljmp
push
mov
nop
scas
jge
xchg
imul
mov
cmp
cli
movsb
cltd
fldenv
pop
es
xchg
xchg
shlb
xchg
and
mov
mov
ja
lcall
jmp
inc
mov
fwait
data16
pop
ret
in
jle
and
inc
sbb
les
lea
and
lahf
push
imul
xchg
xchg
lahf
adc
fistpll
inc
lods
sbbb
dec
pop
xchg
aas
popf
out
xchg
mov
inc
push
into
mov
mov
xor
pushf
cs
andb
add
test
sbb
mov
mov
pushf
jmp
scas
inc
stc
pop
dec
mov
movsb
pop
xchg
and
inc
mov
dec
jne
rolb
jle
jns
xchg
fs
pop
aaa
movsl
movsb
scas
xor
pop
stos
mov
arpl
xor
icebp
mov
shr
shlb
pop
inc
dec
mov
pop
daa
lret
jae
mov
lods
test
daa
imul
mov
out
jp
hlt
add
stos
xchg
test
mov
or
dec
cltd
or
pop
pushf
xor
mov
and
sub
cwtl
inc
cmp
adc
shll
jg
push
mov
dec
inc
xchg
sbb
ret
sti
xor
and
add
fistpl
inc
call
fldt
or
daa
js
cli
insl
cmc
lret
mov
nop
test
or
lock
loopne
sub
out
out
jle
pushf
cli
fsubp
into
mov
ljmp
mov
pop
pop
out
sub
add
cmpsl
sub
and
imul
or
lea
daa
jle
jae
in
out
mov
xchg
pop
add
insb
arpl
loopne
jns
mov
sbb
cmp
push
push
call
jnp
sbb
rorb
pop
pop
xchg
adc
inc
cmp
outsl
push
push
roll
mov
and
subl
sahf
push
push
cmp
scas
shl
dec
int3
mov
adc
cmpsl
mov
push
aam
xchg
push
push
pop
inc
addr16
jl
out
mov
rolb
adc
movsb
imul
aad
mov
mov
mov
fisubrl
movsl
cmp
lea
in
scas
insl
js
pop
je
push
xor
jns
mov
frstor
add
movsb
cmpsb
and
test
ret
and
and
in
adc
mov
pop
mov
insb
and
and
xor
fwait
out
loope
inc
cs
mov
out
lcall
push
sub
outsb
outsb
sub
push
sub
stos
and
in
add
mulb
scas
xchg
into
mov
shl
xchg
add
lcall
loope
hlt
jne
in
jne
xor
sub
insl
ljmp
fildl
js
mov
jno
sbb
movswl
rolb
fucomip
add
xor
addr16
decb
sub
rorb
sahf
hlt
dec
loope
jmp
push
xor
movsb
inc
and
movsl
inc
pushf
loopne
test
outsb
and
jmp
sub
adc
inc
jmp
cltd
sub
aaa
imul
sbbb
mov
jne
lea
push
mov
pusha
adc
das
bound
sahf
mov
jne
mov
pop
jns
mov
inc
mov
or
xchg
or
xchg
jo
fldcw
add
addr16
das
add
and
mov
push
sub
popa
insl
mov
push
pop
cmc
or
or
xchg
in
aaa
adcl
inc
dec
cmp
es
test
jo
mov
rorb
dec
and
dec
bndstx
pop
mov
ss
sub
cmp
or
sub
je
inc
loope
xchg
pop
fidivrs
mov
mov
test
ss
and
ds
lds
insl
xorb
jg
jbe
out
jne
fs
mov
addr16
pop
pop
mov
xor
xlat
insl
add
in
xchg
mov
mov
rorl
out
sti
fistps
je
mov
fidivrs
sub
addl
sbb
pop
xchg
ljmp
imul
fstps
mov
sub
sbb
cmp
ljmp
movsb
or
xchg
divb
ljmp
movsb
fwait
mov
push
cmpsl
lock
sbb
sub
sub
xchg
pop
mov
sbb
fwait
mov
mov
mov
pop
xor
repnz
inc
and
out
jae
lcall
inc
rol
push
es
cmpsl
sbb
push
leave
sub
sbb
aaa
inc
arpl
imul
lret
jno
aam
int
notb
sarl
jg
cmc
adc
and
mov
mov
lcall
cmp
xchg
push
cmp
scas
fldt
mov
sub
or
imul
cmp
inc
movsb
jns
mov
jb
and
xor
and
push
and
push
xor
daa
cmp
and
pop
ret
mov
faddp
fs
jg
mov
dec
es
xchg
sti
cltd
repz
sbb
je
pop
add
xchg
sub
into
cmp
js
out
xor
or
andl
cmp
mov
loop
adc
sub
xchg
cmp
jae
bound
rcr
loop
aaa
inc
mov
jge
xchg
jne
jg
in
sti
inc
lahf
in
sub
pop
sub
mov
inc
test
ret
and
pop
jno
dec
fidivrl
int
inc
pusha
xchg
nop
add
jb
push
movsb
fwait
xchg
imul
pop
xchg
ja
movsl
sub
data16
cmpsl
nop
fs
das
xor
repz
push
sub
daa
sbb
cmp
mov
and
jg
jnp
and
dec
mov
cmp
push
enter
aad
cwtl
popf
into
and
lahf
outsl
sub
fnstcw
inc
addb
enter
je
cwtl
inc
dec
or
fisubrs
push
je
loope
out
fidivl
push
push
push
fsubp
je
push
scas
sub
stc
lahf
xor
mov
stc
loopne
mov
in
jmp
out
push
push
leave
imul
aad
pop
jne
push
sub
pop
ret
icebp
sub
dec
sub
mov
push
xor
mov
or
cltd
test
nop/reserved
mov
scas
loop
or
sub
loop
popa
loope
dec
push
cmpsb
sbb
push
adc
dec
push
ja
iret
mov
xor
clc
xor
mov
stos
repnz
lds
cmpsb
fsubr
xor
jae
rclb
rclb
push
lret
mov
jl
lret
and
sbb
bound
add
push
bound
mov
sub
inc
add
lock
push
and
and
ret
daa
bound
dec
movl
test
in
lods
pop
mov
jmp
jmp
aad
sub
jg
pop
xor
mov
or
test
cs
repz
inc
loope
jb
imul
cmpsb
xchg
add
jne
insl
mov
sbb
push
mov
xor
jmp
pop
xor
sbb
add
test
outsl
leave
push
mov
pop
ljmp
and
jl
inc
cmpsb
pop
aam
inc
mov
push
pop
push
sub
loop
push
in
mov
mov
decb
push
jae
xchg
inc
add
loop
xor
inc
ret
xchg
dec
xchg
pop
xchg
jne
xor
lods
mov
cmp
xchg
xchg
add
push
divl
cmpsl
nop
das
insl
sub
out
imul
repz
xor
ret
loope
stos
scas
movsb
adcl
imul
aam
sbb
and
pop
and
out
add
xchg
mov
jge
insb
addr16
mov
xchg
lret
or
int
out
mov
xchg
ficoml
xchg
test
mov
ret
out
jb
mov
fldt
sub
sub
sub
adc
into
loopne
stc
inc
sub
cmp
int
sbbl
jbe
test
sti
adc
int
imul
push
in
mov
pop
fdivs
movsb
lcall
cmp
icebp
lock
lret
xchg
stos
jge
mov
lret
in
repnz
add
out
cltd
jecxz
jae
movsb
pop
insl
cmp
jo
xchg
sub
mov
imul
or
out
sbb
pop
push
aaa
adc
out
int
jp
sub
outsl
incb
and
sub
and
mov
fcmovnu
fdivrs
adc
pop
mov
jno
shl
movsb
and
sahf
ss
mov
mov
and
cmp
and
xchg
and
mov
add
mov
cmc
xor
mov
pop
jmp
adc
sbb
arpl
nop
pop
push
add
mov
iret
sarb
inc
sub
mov
stc
dec
sub
out
adc
imul
std
fs
cld
loope
andl
ja
add
cltd
stos
mov
in
imul
cmpsb
mov
repnz
sbb
ljmp
imul
sbb
ja
sarl
jnp
nop
aas
xchg
push
outsb
lods
jecxz
out
lahf
imul
xchg
mov
icebp
sbb
and
jge
addr16
sahf
imul
mov
lcall
or
add
adcl
mov
scas
call
push
cmp
out
negl
dec
scas
inc
sub
xor
out
and
out
in
mov
inc
push
mov
insl
sub
dec
cmp
imul
xor
mov
pop
sbbl
leave
xchg
cmpsb
shrb
out
mov
jle
iret
sti
addr16
adc
in
push
jp
inc
mul
imul
data16
arpl
cmp
mov
and
stos
lahf
nop
pop
inc
adc
insl
sub
mov
adc
add
imul
scas
cmp
sbb
inc
and
loopne
imul
hlt
push
inc
es
lea
test
pop
ds
imul
push
cmp
js
inc
or
and
xor
and
sbb
and
jae
pushf
mov
push
insb
xor
adc
jne
in
jns
fildll
pop
inc
add
mov
inc
stc
movsb
adc
dec
xor
inc
sub
mov
rcll
fwait
call
sahf
pop
xchg
xor
xor
fwait
dec
inc
ljmp
jg
movsb
loop
fidivl
js
lods
mov
lea
cli
clc
and
xor
jge
aaa
pop
inc
loopne
in
add
std
xor
out
xor
arpl
hlt
dec
out
push
xor
mov
ljmp
sub
xchg
stos
lcall
pushf
mov
gs
xchg
push
addr16
imulb
mov
orl
jbe
mov
xlat
mov
pop
cmp
jmp
in
xchg
in
and
cli
push
cmpsl
or
push
sbb
test
add
out
lahf
lahf
test
xor
cltd
cmp
cs
sbb
mov
dec
ror
jae
mov
cmp
and
mov
daa
push
fs
and
test
add
cli
sbbl
movsb
icebp
push
inc
shll
and
fisubl
mov
ljmp
mov
xorb
les
sbb
sub
in
mov
lret
xor
mov
mov
sbb
insb
loope
mov
dec
shrl
and
addr16
mov
int
fs
pop
cmpsl
imul
bound
cltd
jmp
dec
or
push
cmp
push
xlat
sub
and
pop
xchg
hlt
daa
cmp
xor
inc
into
and
nop
ret
xchg
das
fs
sbb
jns
jne
mov
jmp
xchg
imul
decb
iret
xchg
inc
cmp
add
lea
dec
sbb
adc
push
jo
insb
mov
test
sbb
adc
clc
and
mov
sub
jno
xor
sbb
mov
ljmp
scas
fwait
jle
mov
mov
outsl
movsl
pop
in
nop
lods
and
mov
push
data16
int
mov
movsl
dec
add
fcmovbe
and
mov
movsl
shl
lds
or
and
loope
jno
int
pop
cs
xchg
ficompl
mov
inc
add
fldenv
mov
mov
aaa
out
and
lods
in
test
mov
cld
jb,pn
sub
std
mov
jb
les
rcrl
pop
jb
test
cltd
orb
xchg
int3
add
movsl
sub
arpl
and
jae
outsb
lea
ljmp
push
lock
pushf
lahf
xchg
jmp
insb
test
push
loop
imul
push
cmp
gs
addr16
dec
xchg
in
outsb
lods
loop
cmp
jne
mov
cvtps2pd
xchg
mov
fnstsw
iret
add
xor
cwtl
stos
pop
cmp
push
jo
dec
xor
mov
test
push
popf
ds
cmc
imul
and
in
into
dec
inc
inc
pop
sbb
call
gs
adc
mov
mov
mov
mov
or
push
sbb
outsl
inc
xor
cmp
and
gs
insl
pusha
xor
mov
pop
push
outsb
aam
jg
fbstp
lea
fldt
int3
imul
xor
mov
nop
loop
or
xor
cmp
ret
sbb
je
mov
adc
imulb
fisubl
fwait
xchg
mov
outsb
pop
jae
jle
imul
mov
cmc
and
sbb
leave
mov
cmp
test
je
stc
out
push
sbb
mov
xor
ds
nop
sub
mov
stos
mov
out
repz
mov
int3
call
fwait
push
push
cwtl
and
subb
add
cmp
out
xor
jl
andb
inc
test
xlat
xchg
popa
and
daa
jle
pop
push
aas
pop
popa
loope
sub
out
pop
push
imul
xchg
cmc
out
es
cwtl
imul
outsb
jno
mov
bound
and
jae
inc
arpl
jo
int
int3
movsl
xchg
jecxz
out
out
xchg
mov
cmpsl
xor
andb
mov
xchg
push
and
pop
in
js
sub
mov
loopne
cmp
negb
and
cmp
rcl
popa
loop
push
cmpl
adc
in
int3
decl
xchg
sbb
lea
dec
cwtl
dec
push
pop
cs
lock
mov
fiadds
insb
pop
or
add
xor
xchg
movsb
xor
sbb
inc
cli
xchg
das
ret
mov
ja
pop
push
push
mov
mov
mov
lods
push
jmp
dec
xchg
adc
push
dec
jmp
pusha
jmp
add
mov
call
arpl
cmpsl
cmp
push
jmp
scas
loope
fnstcw
xor
test
sbb
pop
jg
aam
into
repnz
cmp
fwait
cld
xchg
popa
sub
xor
les
imul
jp
pop
mov
shlb
imul
jno
lahf
ljmp
enter
outsb
jbe
mov
dec
decl
nop
xorb
and
pop
adc
and
inc
mov
inc
daa
mov
xor
insl
fnstcw
shrl
aas
inc
add
test
xor
movsl
pushf
mov
mov
lock
dec
insb
inc
arpl
test
ss
gs
mov
mov
push
lret
dec
adc
xor
push
arpl
dec
fnclex
xchg
sub
stos
mov
xchg
mov
mov
fwait
imul
lret
stc
popf
mov
or
xor
or
aam
leave
frstor
xor
mov
cwtl
jo
mov
mov
sub
ja
lock
lods
cltd
mov
add
pop
das
mov
fwait
repnz
jmp
sub
cmpsl
xor
sarb
loop
adc
scas
adc
mov
cmp
pop
movd
sub
outsb
adc
test
rorb
mov
xchg
mov
mov
jmp
and
into
mov
lods
adc
leave
jb
cmovo
mov
jp
movsb
ret
insb
in
imul
dec
lock
xchg
fmuls
inc
adc
adc
mov
mov
mov
cmp
fmuls
mov
jne
and
aas
popa
out
pop
sub
pop
ror
jno
fldcw
mov
pop
mov
das
pop
jb
out
gs
mov
push
js
pop
movsb
adc
sub
xchg
imul
mov
ficomps
mov
adc
cmp
jae
nop
sub
aam
bound
dec
stc
push
dec
fldcw
pop
mov
pusha
pop
loopne
in
in
adcb
pop
mov
int3
out
mov
xchg
ljmp
imul
jp
negl
cmp
das
hlt
out
adc
shrl
aam
out
xor
sbb
repz
cltd
adc
cmc
pop
xor
sbb
or
and
andl
test
sbb
add
daa
jne
test
cmp
imul
cmpsb
dec
sbb
lds
negl
xchg
cld
jge
mov
lret
or
arpl
xchg
cmp
leave
sub
and
imul
mov
inc
xchg
pop
inc
test
mov
lods
es
scas
inc
call
mov
repz
or
hlt
pop
ret
and
loop
mov
gs
fucom
outsl
xor
hlt
mov
cwtl
pop
leave
imul
pop
jl
test
xor
sub
lret
sbb
mov
push
lds
imul
mov
scas
jle
sbb
and
jo
sub
dec
out
pop
pop
xor
add
aas
loop
ds
icebp
push
aad
adc
pop
or
aas
sbb
loopne
ljmp
test
iret
xlat
cltd
xor
xor
push
add
loope
mov
out
sbb
lods
mov
ficomps
sub
cmpsl
in
shlb
add
jb
pop
xchg
int3
mov
clc
pop
cmove
push
data16
aas
pop
cmc
adc
jbe
lock
jnp
inc
push
lock
sbb
pop
xchg
inc
cmpsl
inc
or
add
jae
cld
mov
sbb
or
inc
stc
xchg
adc
adc
and
test
lcall
sbb
fwait
push
jp
push
iret
js
imul
cmc
arpl
or
iret
sbbl
push
cli
std
push
pop
cli
jg
xchg
lahf
sub
xchg
mov
mov
mov
dec
sub
xor
lcall
cwtl
push
add
pop
or
jnp
xor
insl
adc
mov
sbb
arpl
mov
lods
and
out
sub
or
imul
imulb
and
int
xchg
add
test
inc
xorb
insl
in
lock
and
arpl
cltd
das
lea
addr16
dec
xchg
daa
mov
daa
cwtl
dec
sub
test
bswap
mov
mov
test
repz
or
test
shrl
adc
pop
outsl
leave
push
mov
lret
dec
nop
push
js
imul
lea
dec
inc
sbb
leave
ljmp
sub
arpl
scas
cltd
mov
xor
dec
push
mov
sub
push
or
or
cmpb
loopne
addr16
shll
or
mov
int
aaa
push
shr
sbb
lahf
pop
dec
mov
pushf
test
adc
lea
addr16
dec
into
stc
pop
inc
cltd
xchg
test
loope
jecxz
sbb
dec
ficoml
ret
loop
ds
fimull
sahf
mov
mov
dec
fwait
adc
xchg
sub
imul
jo
jno
movsb
and
sub
in
jl
rclb
sbb
jmp
mov
lods
std
test
in
hlt
lock
xchg
xchg
and
jnp
mov
sub
loop
mov
pop
test
cmp
and
movsb
lret
outsb
in
jg
jge
aam
ds
or
in
fld1
xlat
fs
xor
push
cmpsb
xchg
leave
sbb
shrl
inc
lods
sbb
mov
add
xchg
mov
dec
adc
xor
mov
sub
lcall
sbb
push
mov
sub
and
in
or
jp
inc
addr16
mov
xor
lods
sub
dec
je
jne
cmp
jnp
jecxz
stos
add
test
insl
mov
in
je
ss
mov
lods
inc
test
and
sbb
and
lds
mov
movsb
and
out
jno
xcrypt-cfb
cmpsl
es
and
pop
push
out
ljmp
cld
es
xor
es
fsub
lea
lock
push
sbb
or
cs
xchg
ja
xor
lods
xor
dec
inc
dec
shr
and
fidivs
xor
mov
outsl
pop
inc
popf
out
adc
xor
aaa
dec
addb
or
out
dec
arpl
cwtl
popf
push
test
iret
sub
cltd
outsl
jle
inc
inc
imul
sbb
ret
xor
pmaxub
mov
pushf
cmp
das
addr16
hlt
jmp
scas
cmpsb
add
sub
inc
xor
imul
imul
hlt
imul
out
dec
imul
and
xlat
jns
dec
mov
mov
clc
pop
cwtl
xchg
in
mov
inc
fistpll
cmp
cwtl
jmp
cmpsl
add
lods
and
mov
je
jae
xor
or
xchg
imul
and
push
flds
mov
rolb
aad
mov
rcrl
in
and
xchg
xchg
es
arpl
shufps
loopne
cmp
in
push
fsubrp
mov
repnz
test
sub
in
mov
mov
rclb
out
adc
and
imul
cmp
lahf
arpl
xchg
loopne
flds
mov
sbb
mov
in
aad
sub
int3
adc
arpl
nop
fs
adc
mov
in
out
cltd
aad
mov
sub
aaa
test
jl
lds
sbb
divl
xor
xchg
lea
jbe
lods
add
xchg
jns
mov
adc
pop
pop
push
jg
xor
mov
mov
dec
gs
xor
ret
addr16
sbb
in
mov
or
rcrb
imul
pushw
lcall
xchg
and
mov
adc
test
cmc
push
aas
mov
cwtl
jae
sbb
and
pop
rol
jnp
and
cmpsb
iret
popf
jae
imul
flds
psllq
popf
outsb
cmp
clc
insb
test
xchg
imul
call
pop
dec
movsl
mov
adc
jae
out
ja
dec
pop
sahf
jno
mov
jmp
orl
adc
movsb
das
push
sbb
pushf
lods
fldl
shlb
fidivs
xchg
push
sbb
dec
jne
orl
mov
ret
inc
outsb
jp
pop
xchg
mov
shl
inc
jg
das
into
ljmp
test
mov
outsb
mov
pop
fstpt
and
mov
xchg
in
sub
xor
cmp
inc
xchg
dec
push
dec
mov
mov
mov
loop
inc
out
mov
mov
insb
daa
jmp
adc
xor
ret
mov
stos
pop
adc
mov
pop
jbe
cmp
add
test
imull
pop
iret
jmp
imul
lcall
std
mov
imul
push
jno
ljmp
adc
mov
jo
push
test
shrb
sub
ljmp
push
add
sbb
arpl
cld
imul
movsb
cmc
xor
xor
jbe
sbb
lods
lea
jecxz
jp
xchg
fwait
mov
lods
test
or
xor
xchg
xchg
inc
stc
adcb
test
jbe
scas
cmp
push
call
out
xchg
nop
repnz
push
inc
xor
subb
cld
iret
jg
mov
es
jg
lods
sub
rcl
push
lods
push
cwtl
sub
hlt
movsl
and
mov
mov
je
add
inc
lahf
je
stc
add
in
pop
imul
sbb
xorl
out
out
out
int3
mov
mov
add
mov
imul
das
or
es
push
dec
arpl
aas
test
jns
addr16
imul
xchg
inc
mov
or
push
mov
inc
and
xor
fimuls
int
or
stos
in
test
pop
fistpl
push
lahf
sbb
shll
jb
mov
inc
mov
sub
or
pop
add
stos
lcall
pop
xchg
loope
orl
out
and
pop
mov
jecxz
push
mov
sub
push
mov
add
sub
aad
insb
ret
push
sbbb
xor
and
fwait
adc
repz
inc
sub
sub
sbb
push
add
and
fcoms
cmp
mov
pop
sub
imul
lret
mov
out
xor
pop
mov
push
sub
cmpsb
mov
xchg
cmpsb
and
not
movsl
cmp
in
pop
jb
xchg
xor
js
sub
loopne
and
push
cs
jl
sahf
shl
imul
in
sub
insl
push
and
stos
sub
aam
orb
neg
icebp
sbb
dec
dec
push
xchg
sti
push
cmp
sub
int
pop
loopne
mov
js
sub
jmp
mov
inc
imul
mov
mov
or
popa
lea
ss
pop
push
mov
cmpsb
sahf
jp
ds
jno
jle
imul
arpl
or
sti
xor
loope
addr16
inc
test
xor
imul
xchg
dec
test
test
mov
sub
mov
inc
jl
mov
inc
lcall
mov
xchg
push
test
xor
lea
sub
cltd
push
inc
enter
ja
stos
adc
push
fbld
mov
push
and
imul
pop
pop
dec
fs
repz
lea
pop
ror
jg
fwait
pusha
mov
enter
je
sub
shlb
inc
inc
add
movsb
and
imul
faddl
iret
or
negl
icebp
leave
leave
adc
xchg
imul
loopne
jb
enter
outsb
lods
fldcw
sub
add
loopne
add
sbb
mov
daa
cltd
dec
and
adc
dec
inc
ret
mov
test
outsb
sti
loopne
lea
sub
sahf
popf
mov
cmp
adc
mov
dec
ja
push
xor
in
sahf
push
xchg
xchg
push
jg
lahf
jo
rcr
push
movl
push
call
inc
xchg
sbb
andl
cmp
mov
and
in
and
pop
repz
sbb
xchg
mov
mov
int3
inc
mov
dec
cltd
lahf
shl
mov
ret
adcl
adc
shll
xchg
iret
imul
js
mov
cwtl
cmp
imul
mov
outsl
mov
mov
jp
dec
xchg
push
push
xchg
jecxz
clc
test
cmpsl
xchg
sub
movsb
adc
jb
sub
sahf
mov
jae
aam
test
cmc
flds
sbbl
lahf
aam
lahf
or
jp
xor
inc
jbe
pushf
xchg
and
and
push
popf
mov
insb
or
movsb
jno
xchg
pop
jne
outsb
dec
popfw
test
stos
jp
pop
test
cwtl
bound
mov
xchg
pushf
mov
faddl
jno
outsl
nop
jne
jno
incb
jp
stos
int3
adcb
ficomps
add
mov
sbb
jne
and
xchg
jno
push
test
sub
sahf
pusha
and
mov
push
addb
test
cmp
fdivs
dec
mov
in
incl
cwtl
imul
js
outsl
mov
adc
mov
sbb
mov
test
add
test
cwtl
fidivl
cmpl
xchg
mov
sahf
sub
xorl
dec
add
jp
dec
js
add
repnz
fiaddl
xor
mov
xchg
xchg
xchg
mov
mov
push
mov
inc
das
sbbb
jne
mov
aaa
loop
dec
sub
push
mov
sub
in
cltd
arpl
dec
inc
movsl
mov
fists
push
out
movsb
xor
jnp
incl
sub
mov
js
sub
data16
or
and
in
pop
jne
int
pop
inc
lea
jnp
mov
mov
xlat
and
mov
xchg
lods
add
sub
mov
imul
hlt
pusha
dec
dec
daa
test
insl
loop
insl
add
stos
sbb
sub
imul
das
out
or
and
mov
fistl
cmp
lret
cmp
xor
cmp
push
cmp
jno
lock
es
mov
jbe
xor
push
xchg
imul
jnp
js
xchg
sub
xchg
adc
and
fimuls
jmp
int3
mov
jno
mov
loope
lea
cmp
push
je
adc
pusha
push
rclb
dec
jae
pop
lea
sub
addr16
outsl
test
nop
fiadds
lock
cwtl
jae
pop
imul
imul
cmp
xchg
rcll
outsl
sbb
test
xchg
jae
insl
sub
lea
clc
push
leave
mov
push
push
ds
inc
pop
inc
jae
mov
imul
and
add
pusha
in
mov
inc
in
pop
sti
fadds
and
mov
mov
xchg
je
mov
mov
push
jmp
xchg
insl
jb
pop
sbbb
mov
sarl
nop
stc
dec
and
fmuls
arpl
mov
addl
call
movsl
lock
jb
xor
in
jo
popf
icebp
xchg
mov
push
in
push
and
iret
je
lahf
sub
mov
dec
fmuls
mov
iret
lods
or
inc
push
or
mov
ljmp
sub
sbb
adc
xchg
shlb
or
jb
jge
in
push
cmp
inc
jecxz
add
fucom
adc
je
aad
and
mov
push
sub
test
xor
jmp
std
pop
mov
xchg
dec
sahf
jle
out
imul
xor
int
adc
or
pop
loop
jmp
imulb
cmp
xorb
jno
inc
mov
mov
nop
cltd
sub
enter
mov
mov
test
dec
or
jle
and
push
lret
test
adc
push
popf
dec
pop
arpl
and
mov
addr16
dec
or
addr16
xor
pop
mov
mov
mov
sub
dec
mov
push
dec
loopne
orl
pcmpgtw
lock
push
xor
mov
cmpsl
je
sub
push
lret
fstpl
das
movsb
arpl
sub
adc
adc
jg
std
incb
outsl
jns
cmpl
adc
inc
hlt
rclb
jne
test
cmpsl
jb
mov
xchg
inc
pop
add
fs
pop
inc
push
subl
das
add
cmp
and
add
imul
cli
es
arpl
pop
xor
cwtl
subl
lret
cwtl
push
push
xorb
add
push
mov
test
scas
adc
mov
sahf
mov
dec
fldt
iret
out
fs
rcll
ss
adc
js
loopne
in
test
push
bound
mov
push
mov
imul
lahf
icebp
xchg
and
clc
pop
je
jmp
pop
cmovae
dec
lds
popa
jecxz
rdpmc
dec
cltd
mov
filds
jne
andl
fistl
jno
pusha
arpl
imul
or
jno
loop
sub
outsb
xchg
adc
addr16
pop
or
sti
out
jmp
dec
into
add
sub
pop
movsl
outsb
push
push
mov
dec
xor
addr16
sbb
imul
loope
adc
mov
sub
jnp
ret
xor
les
jge
jne
inc
mov
xchg
hlt
xchg
sub
xor
mov
into
add
test
mov
mov
shlb
or
sar
cwtl
fbstp
ror
sub
push
fisubl
pusha
mov
nop
sub
loop
mov
aam
mov
cmp
cmpsl
pusha
fdecstp
and
nop
scas
push
loop
adc
hlt
and
clc
aam
jo
inc
shlb
mov
add
sbb
mov
rorb
lcall
cli
in
nop
sti
mov
push
rorb
sub
fildl
push
pop
out
cmc
jle
adc
loope
int
add
adcl
cmp
imul
push
mov
add
ljmp
mov
adc
mov
cmpb
imul
sbbb
push
xchg
jae
aaa
push
mov
dec
dec
cmp
mov
xor
dec
mov
aas
cld
mov
mov
icebp
pop
arpl
xchg
jb
xor
pop
cmpsl
out
imul
pop
les
mov
mov
jge
lock
mov
sahf
int3
shlb
dec
test
int3
and
imul
shlb
mov
sbb
or
xor
push
inc
pusha
push
jo
fnsaves
add
or
das
ljmp
movsb
jge
stc
xor
and
mov
mov
mov
push
sahf
in
mov
inc
mov
cmp
testl
xor
and
fwait
push
andb
and
scas
int
loopne
jb
or
sub
cmp
xor
adc
mov
ds
orl
fwait
sub
and
mov
into
mov
ret
inc
mov
pushf
mov
negl
dec
lahf
ja
pop
je
je
mov
fstpl
lcall
movl
nop
mov
mov
sbb
lcall
test
sbb
sti
xchg
pop
xchg
adc
mov
push
pop
pushf
fwait
mov
ja
xchg
mov
lcall
pop
insb
movsb
imul
adc
jo
jns
push
leave
pop
arpl
ja
mov
inc
jmp
inc
jnp
ja
push
jge
ja
lahf
mov
mov
jge
xchg
push
pcmpgtb
outsl
mov
mov
jl
mov
adcb
or
and
xchg
jge
mov
sbb
je
xchg
mov
pushf
xchg
pusha
jle
addl
cwtl
mov
ja
xchg
sbb
xchg
xchg
push
mov
js,pt
gs
mov
xlat
aas
xchg
mov
mov
fwait
mov
xor
fdivs
fcoms
mov
sbb
in
sbb
mov
movl
xorl
bnd
mov
jp
mov
cltd
add
cmp
hlt
jp
sbb
mov
mov
insb
shll
jge
mov
jle
in
je
loope
dec
fs
xchg
out
into
loope
testl
push
and
stos
movl
icebp
loop
jne
loopnew
cmpsb
adc
xor
pop
movsb
test
je
dec
testb
in
adc
jne
and
lret
ds
lcall
add
inc
aaa
in
insb
arpl
and
add
repz
adc
push
arpl
leave
or
cmp
cld
sub
into
sti
enter
mov
xchg
andl
aaa
inc
test
addr16
push
add
scas
mov
fisttpl
cmp
aad
test
sub
inc
shl
pop
add
or
iret
sub
adc
adc
push
lods
xlat
mov
mov
or
iret
jns
ret
outsb
xchg
mov
inc
dec
addr16
lret
inc
pop
xchg
iret
and
in
addr16
push
cmpsl
mov
ret
ds
inc
mov
jge
jp
xor
add
ja
inc
add
xor
add
sbb
cmc
jb
xor
popf
jno
push
fmull
iret
cs
inc
mov
mov
mov
adc
out
and
int
adc
inc
shlb
and
jg
cltd
shr
in
xchg
iret
mov
dec
es
out
xor
popa
in
aaa
aad
xchg
sub
rorb
call
ret
sub
fldenv
fiadds
cmp
cmp
mov
xor
jge
add
push
andl
shrb
mov
xor
out
sahf
jno
out
push
test
pop
or
call
and
ss
shlb
mov
shrb
sbb
mov
pop
jbe
mov
jno
arpl
jne
sub
mov
addr16
push
adc
jp
scas
mov
mov
shl
out
out
sub
jge
mov
mov
je
out
pop
in
sbb
sbb
jnp
jae
push
add
imul
xchg
push
dec
xor
movsb
lret
pop
hlt
pop
and
sub
mov
push
xchg
popf
dec
stos
movsb
rclb
xchg
iret
ja
fcoms
cmp
pusha
mov
ljmp
inc
push
das
jecxz
xor
scas
lea
cmp
movsl
or
pushf
dec
push
cmpsb
inc
daa
pop
mov
cli
lods
fwait
mov
imul
xor
jge
out
cwtl
sarb
loopne
jp
les
out
lcall
je
and
mov
mov
fistl
mov
cmpsl
xor
mov
inc
inc
sarb
arpl
inc
mov
loop
inc
jecxz
jo
daa
cltd
add
push
push
xor
test
xor
xlat
mov
idivl
ret
xchg
inc
in
insb
sahf
jle
cmpsl
pop
pusha
cli
pusha
out
test
test
inc
pop
lock
mov
daa
fwait
out
in
lods
loopne
sbb
inc
gs
push
pop
xor
or
movsb
cli
lods
cwtl
fwait
pop
pushf
sub
lock
lock
hlt
imul
add
xchg
pop
and
rcrb
decb
fldcw
sbb
pop
pushf
lahf
shll
decb
imul
xchg
dec
fistps
cmp
xor
imul
xor
dec
daa
push
lahf
mov
mov
push
jmp
push
sub
out
inc
out
pop
push
fs
jnp
enter
fwait
mov
or
xor
xor
movsb
add
xlat
loop
iret
xchg
inc
push
adcb
stos
lea
movsl
popa
int3
push
sbb
xor
mov
push
or
and
mov
pop
cs
fbstp
lret
clc
xchg
ficompl
imull
pop
aad
andl
mov
pop
and
pop
out
jns
ljmp
xchg
dec
jno
in
test
inc
and
pop
ljmp
test
sub
test
sub
in
cmpsl
inc
cmpsb
les
cmp
ret
in
jb
and
mov
push
adc
adc
lods
inc
fwait
mov
or
in
pop
imul
jmp
imul
jl
jno
imul
cld
push
inc
lods
sub
mov
sbb
lret
xchg
mov
iret
xor
mov
sbb
push
lret
lock
cltd
xor
jne
dec
nop
xlat
fnstenv
movsl
pop
push
sub
aaa
fsubs
adc
or
sbb
sarl
popa
aaa
aad
addr16
data16
stc
cltd
sbb
and
test
sub
movsb
pop
mov
arpl
mov
filds
mov
lret
mov
call
cmpsl
stos
arpl
push
leave
cltd
outsb
mov
jno
in
out
mov
and
xchg
mov
adc
push
mov
xchg
rcrl
call
and
push
out
notb
push
sub
sub
in
jb
std
shrb
out
fisubl
add
push
sub
scas
sub
ret
nop
lret
mov
movsb
rcll
xor
and
xchg
mov
push
fldenv
insl
test
jmp
sub
lds
lcall
repz
cmp
repnz
dec
cmp
cs
jmp
ret
sub
jg,pn
insl
fs
imul
jae
dec
sbb
andb
sub
ret
inc
hlt
xor
imul
lret
imul
push
ret
mov
and
jne
sub
arpl
mov
ret
sbb
jne
shl
mov
sub
mov
cmc
insl
mov
shll
pop
ret
xor
xor
lahf
jbe
fs
sub
aad
dec
dec
cmc
cmp
xchg
int3
jno
fiadds
inc
jne
imul
adc
inc
add
push
xor
push
mov
mov
xor
jl
sbb
sar
mov
jg
adc
xor
dec
and
cmp
or
xchg
and
push
nop
jae
add
pushf
sub
pop
jne
outsl
sub
loop
fnstcw
inc
sahf
xor
push
push
cmpsl
push
mov
out
iret
rclb
xor
xor
pop
out
andl
test
pushf
sub
xchg
subb
lret
dec
aad
nop
in
or
mov
movsb
sbb
sahf
pushl
ja
cmpsb
push
push
cmp
fldcw
int
daa
ror
jb
out
outsl
jp
add
jmp
imul
and
pop
push
fistl
and
repnz
lret
xor
and
add
loopne
sbb
in
bound
insb
and
dec
xchg
cmp
enter
movsl
cs
ljmp
adc
bnd
sub
rcrl
dec
push
push
clc
repz
push
mov
mov
mov
das
and
jo
push
rcl
loopne
adcb
enter
jbe
or
loop
xchg
mov
inc
inc
mov
or
mov
stc
mov
addr16
pushl
jle
out
out
movsb
or
stc
pop
xchg
pushf
push
pop
cmc
test
adc
push
js
outsb
sbb
sub
push
fwait
xchg
idivl
cmp
sbb
cmpsb
adc
orl
xchg
pop
pushf
mov
mov
das
test
popf
push
jge
xor
mov
dec
lahf
and
imul
mov
or
adc
xor
cld
push
mov
mov
sbb
repnz
bound
mov
imul
inc
jne
loope
test
scas
out
adc
pop
ret
add
sbb
pop
rcl
mov
push
xor
cmp
pop
push
sbb
push
addr16
outsb
popf
cld
mov
sub
test
jle
jl
sub
sahf
pop
sbb
adc
cmp
cwtl
cwtl
mov
mov
scas
popa
pop
iret
inc
cmpsb
bound
push
sub
aaa
arpl
dec
and
cmc
test
ffreep
fdivl
mov
lods
xor
cmpsl
push
add
imul
sbb
mov
nop
inc
sub
sub
repz
fadd
mov
pop
mov
cltd
dec
mov
sbb
pushl
sbb
cmp
imul
sbb
cmp
dec
cmp
rcl
fldenv
outsb
pop
inc
test
adc
popf
pop
mov
sbb
imul
scas
sub
inc
and
sbb
cwtl
cmp
mov
dec
or
out
cmp
mov
push
sub
out
popf
jae
mov
stos
pop
xor
mov
jns
jae
jno
pop
dec
repnz
adc
and
scas
push
push
and
imul
mov
sahf
adc
cli
pop
sbbb
repz
pop
sub
push
push
dec
adc
or
and
outsl
or
cmp
scas
push
adc
sbb
xchg
testb
push
adc
imul
mov
sub
loop
fwait
mov
ja
adc
inc
popf
scas
inc
xor
fdivrl
or
addr16
mov
mov
and
dec
test
mov
push
xorb
xchg
das
ljmp
inc
mov
jo
stc
or
pop
pop
ds
data16
test
xchg
in
jne
jo
xchg
and
dec
push
add
xor
imull
js
jl
insb
lods
mov
repz
out
loopne
mov
test
add
xor
out
rcrl
and
data16
cmp
push
pop
xchg
les
imul
lea
xor
pop
xchg
jmp
ret
test
loop
push
stos
jl
loope
insb
xchg
or
or
or
jmp
xchg
jle
dec
orb
push
daa
and
mov
jle
imul
mov
adc
adc
xchg
fistpl
out
hlt
push
lea
inc
clc
pop
int
adc
shll
into
mov
ficoml
push
add
sub
or
dec
pushf
jg
test
inc
cmp
sub
leave
xor
lahf
fbstp
test
mov
insb
cmp
push
and
pop
fidivrl
add
movsb
xchg
push
test
movsl
sbb
pop
outsl
lea
mov
or
push
call
push
mov
test
adc
push
add
mov
dec
shrl
test
imul
and
mulb
or
pushf
jno
out
and
in
data16
sub
jno
jne
and
sub
in
pushf
or
std
cmpsb
and
mov
mov
outsb
xor
sub
dec
mov
daa
dec
pop
push
scas
sbb
imul
arpl
jecxz
arpl
aaa
popa
push
std
xchg
loop
imul
jb
outsb
push
xchg
or
inc
cltd
popf
and
jle
addl
outsl
sub
sbb
xchg
cmp
scas
test
xchg
or
out
shll
pushf
inc
push
in
popf
sub
mov
jecxz
lods
push
dec
into
les
xor
push
lcall
cmp
push
and
dec
data16
in
int
sub
subl
idiv
inc
pushf
in
es
sub
and
fistps
mov
test
xchg
imul
inc
mov
cld
jo
mov
mov
sub
addr16
inc
cmp
inc
inc
lcall
sub
mov
xor
popf
dec
and
imul
cmp
test
adc
sub
xchg
loope
add
inc
pop
inc
adc
adc
mov
fxch
out
aas
push
imul
xchg
jg
fs
jns
loope
jbe
jo
lea
mov
aad
imul
lahf
movsl
sbb
das
fs
dec
sub
hlt
adc
testb
pop
shl
cmpsb
lea
lea
sbbb
push
mull
pop
xor
xchg
int3
add
dec
mov
aaa
loop
sub
inc
call
rclb
xor
outsl
jo
or
inc
jmp
dec
js
andl
xlat
fcmovnu
es
mov
xchg
out
je
packssdw
in
shll
out
test
xchg
lock
sub
data16
imul
sbb
mov
int
jbe
je
add
sub
mov
cs
aas
mov
out
push
mov
jmp
stos
xchg
sub
cmp
shlb
push
adc
dec
test
mov
dec
push
add
inc
cmc
cltd
test
xchg
adc
jae
cwtl
inc
cmp
stos
lods
lea
neg
movsb
es
bound
icebp
sbb
jnp
out
sbb
and
push
jecxz
jp
pop
mov
mov
xchg
dec
sub
test
jne
rolb
mov
inc
push
stos
addr16
jne
cmp
in
or
mov
insb
add
jp
inc
jp
bound
cltd
arpl
clc
int
jp
hlt
imul
fwait
xor
or
sarb
addr16
in
fbld
jle
das
cltd
outsl
inc
mov
in
repnz
mov
lahf
cmpsl
xor
loopne
jne
leave
push
sub
cmp
inc
add
out
arpl
fidivl
adc
rolb
fnsave
test
sbb
and
int3
jnp
push
lods
frstor
es
adc
out
mov
lea
aaa
lcall
test
mov
subl
lods
pushf
mov
loopne
in
mov
and
and
add
dec
and
inc
inc
iret
mov
xor
adc
pop
and
jmp
push
add
cmc
movsb
out
xchg
test
xchg
xchg
mov
sar
lcall
sbb
dec
aas
f2xm1
push
mov
sbb
pop
push
sub
dec
pop
ret
jecxz
add
push
push
hlt
fcoml
loope
loop
sbb
xchg
add
pop
xor
add
jmp
pop
scas
xor
jnp
mov
mov
fsubr
push
pop
das
ljmp
in
jno
mov
mov
cmp
mov
test
jb
xor
inc
fstp
ret
inc
aam
test
faddl
pusha
sbb
popf
cwtl
adc
idiv
inc
mov
fbstp
inc
mov
pop
mov
loopne
cmp
cmp
lods
jnp
sub
loopne
sarb
in
jo
hlt
and
adc
adc
add
xor
mov
out
pop
mov
xchg
adc
loope
fidivs
mov
mov
adc
cmp
xor
fnsave
movsl
mov
xchg
xchg
in
add
out
shl
ljmp
cwtl
daa
xor
push
cmp
dec
sbb
addr16
jp
or
jbe
das
or
jne
jb
data16
leave
test
lea
dec
jb
imul
add
iret
lret
sti
inc
push
cltd
loope
jb
cwtl
jns
push
arpl
fsub
cmp
and
dec
out
xor
mov
in
mov
xor
pop
mov
rol
xlat
nop
sarb
mov
cs
pop
cmpsl
addl
jp
fildl
push
inc
and
jmp
xorl
xchg
fwait
cmp
fdiv
and
or
jge
jae
fs
jmp
mov
je
pop
mov
push
add
jne
pop
stc
mov
fldt
jno
ss
push
nop
mov
daa
mov
adc
subb
test
insb
fs
cmpsl
repz
ret
xchg
mov
jbe
test
packssdw
mov
mov
hlt
movsb
push
outsb
pop
xchg
fwait
imul
mov
stos
jle
pop
stos
mov
ja
ret
movsb
dec
mov
pushf
movsb
subl
lret
popf
lcall
inc
mov
out
fdiv
aad
sahf
xchg
cmp
movsb
arpl
or
dec
test
and
js
cs
leave
jb
data16
xchg
in
add
xchg
popf
dec
inc
ss
mov
jle
mov
xchg
sahf
cmpl
adc
jnp
xor
outsl
jp
out
push
jg
mov
in
adc
sub
ret
and
sub
movsb
das
mov
xor
fwait
cmp
loop
inc
jg
cmp
mov
mov
jmp
add
lock
daa
int
testl
insb
inc
lods
iret
adc
jae
xor
lea
sti
mov
cmp
cmp
pop
xchg
in
add
mov
sahf
jns
addr16
jne
mov
pop
ljmp
xchg
imul
jecxz
es
popf
sub
mov
stc
dec
es
add
dec
push
js
movsb
andl
ja
hlt
add
sbb
mov
adc
and
lret
call
sahf
lea
inc
imul
jp
sbb
adc
cld
xchg
loop
inc
pop
jnp
sbb
mov
push
inc
imul
int3
xor
or
sub
add
fsts
cmpl
or
adc
lahf
mov
add
out
mov
push
or
lea
fsqrt
jno
icebp
arpl
test
addr16
or
add
arpl
pop
jge
mov
lock
fwait
addr16
or
lea
out
imul
test
pop
out
out
lock
adc
inc
movsb
data16
test
fisttps
inc
push
pop
cwtl
push
lods
pop
mov
in
lret
pop
loop
insl
orb
and
push
or
in
xor
mov
movsb
mov
jmp
aad
mov
xor
push
cmc
sbb
and
mov
repnz
jnp
dec
mov
mov
fs
cmp
push
fs
mov
out
test
jp
cli
out
jg
pushf
test
cltd
push
shl
xchg
dec
jno
jmp
call
xchg
push
pop
loope
daa
fs
lds
clc
xchg
adc
sbb
jne
mov
xchg
xchg
mov
js
add
pslld
xchg
inc
push
cmp
jg
dec
push
push
cld
loopne
cmp
jecxz
xchg
dec
xchg
sub
mov
xor
jb
in
loop
jl
and
xchg
lea
subb
loope
xchg
dec
sub
dec
popf
iret
aas
pop
xchg
mov
push
mov
sahf
fimuls
iret
add
notb
gs
lods
mov
pop
pop
add
shrl
imul
sbb
addr16
aaa
dec
push
mov
push
daa
dec
inc
xor
xlat
sub
negb
mov
mov
and
xchg
andb
ret
test
and
rorl
repz
scas
mov
adc
cmpsl
adc
dec
hlt
xor
mov
out
fwait
and
mov
push
adc
andl
leave
xchg
xorl
cmp
out
dec
scas
test
enter
add
sub
lock
push
xchg
stos
leave
rcrl
inc
jmp
inc
loope
testl
in
imul
jo
push
add
in
aas
and
sbb
push
outsl
adc
pushf
mov
add
xor
push
cltd
mov
jmp
jno
stc
cmp
mov
dec
xchg
aam
stos
pop
and
scas
adc
cmovb
mov
mov
sbb
out
shlb
inc
mov
lcall
or
hlt
inc
push
rcrb
inc
aad
pop
inc
and
fldcw
ja
scas
mov
scas
mov
xchg
iret
jl
and
aas
popf
jno
push
mov
sar
iret
mov
cltd
adc
push
add
xor
test
jae
imul
test
into
sub
or
add
or
outsb
or
sti
movsb
and
jg
div
jge
pop
sub
js
mov
aaa
mov
cmpsl
xor
fwait
mov
jae
pushf
out
pop
sub
xchg
sahf
loope
xor
sub
sbb
sbb
lock
into
jp
mov
adc
pop
or
js
mov
mov
in
iret
mov
mov
push
cltd
je
les
daa
sti
add
jne
test
imul
shlb
dec
aas
jnp
or
jmp
scas
xchg
adc
jge
adc
in
sti
int
rorl
cmc
jb
lcall
jnp
shlb
mov
or
out
jmp
jmp
or
inc
in
and
push
adc
or
ljmp
xor
xchg
sbb
xchg
xchg
call
test
hlt
outsl
aas
enter
xchg
sbbb
xlat
pusha
or
xor
and
out
and
sub
mov
mov
outsl
push
inc
inc
xorl
inc
aad
inc
pushf
fptan
insb
cld
add
xchg
push
inc
fcmovu
xor
pop
sub
and
push
mov
jmp
xchg
sub
repz
loopne
imul
sbb
fisubrl
popf
xor
dec
adc
pop
xor
inc
pop
adc
test
add
sub
cmp
shll
mov
mov
pop
jle
or
mov
or
inc
xor
add
inc
mov
fiaddl
jno
cli
shrl
test
popf
inc
test
xchg
loopne
jae
jl
push
jecxz
lcall
into
imul
cmp
lock
jl
out
xchg
dec
xchg
and
shlb
mov
xchg
sub
mov
into
adc
xor
and
push
add
pop
leave
sahf
xor
test
fildll
inc
and
scas
in
loop
or
imul
xchg
add
pop
test
inc
jmp
cmpsb
fwait
mov
pop
pop
adc
movsb
jo
addl
cmc
mov
leave
enter
ljmp
movsb
mov
jecxz
jns
sub
js
nop
jmp
js
jl
xchg
push
shll
sbb
lods
and
mov
cmpsl
sbbl
jmp
add
fwait
inc
gs
push
sbb
imul
loop
movl
pop
clc
adc
repz
push
dec
ljmp
xchg
jmp
pop
in
pop
adc
lock
lock
xor
mov
loop
jne
xor
and
lret
mov
mov
mov
mov
scas
and
push
jmp
jle
loope
mov
lods
xor
into
mov
lea
pop
inc
mov
xchg
and
test
insl
jl
xor
push
push
shlb
ret
push
test
inc
in
imul
clc
jne
push
jnp
inc
arpl
lods
or
mov
xor
sbb
mov
xchg
xor
mov
xor
mov
sub
xchg
ret
movsb
icebp
pop
sbb
sub
arpl
jno
aas
lea
mov
in
lods
in
sbb
jnp
cli
loopne
jno
in
imul
and
negb
and
mov
sub
int
fbld
xor
hlt
sbb
sub
and
out
vmwrite
sub
imul
inc
insb
je
sub
jbe
mov
in
lret
or
fcomip
mov
xchg
inc
dec
pop
repz
mov
push
mov
rol
movsb
xor
addr16
inc
mov
data16
inc
lcall
jns
cmp
sub
sub
int3
mov
mov
lock
xchg
push
xor
sbbb
or
mov
repz
je
hlt
push
jle
lods
mov
call
inc
xor
inc
jae
mov
aas
loope
lahf
daa
dec
test
inc
and
shrb
lret
shlb
cld
dec
adc
cmp
push
cld
scas
pop
clc
scas
jnp
inc
es
mov
lcall
inc
mov
or
imul
jo
sbbl
adc
je
jmp
mov
mov
or
testb
sub
push
inc
jb
push
repz
mov
divl
sub
fistl
bound
and
adc
mov
shrb
pop
jne
mov
push
call
stos
sub
sub
inc
aaa
pop
inc
fldenv
imul
jo
cmc
xchg
fistl
jns
xchg
loop
hlt
mov
or
arpl
add
stc
adc
cmpsl
ret
fistps
lods
inc
loope
jle
mov
dec
jg
out
xorl
pop
and
in
mov
and
subl
rclb
inc
aad
adc
outsb
pop
mov
xchg
jle
mov
cmp
lret
and
cmpb
out
ss
das
inc
sub
mov
push
lahf
cwtl
ret
loop
mov
fwait
mov
cwtl
pop
imul
and
mov
jle
shrl
aas
addr16
es
enter
popf
cmp
test
imul
inc
mov
or
in
loop
loope
mov
jp
int
arpl
adc
cmp
and
cmc
jae
loope
jo
test
pop
fs
and
rcrl
mov
mov
mov
or
push
or
popf
movsb
out
dec
push
movsl
jae
repz
movsl
sbb
sbb
pop
inc
mov
lahf
lea
cld
fwait
loopne
jnp
cwtl
inc
movsb
jmp
testb
pop
xor
inc
mov
xchg
es
sbbb
imul
push
jecxz
cmp
sbb
mov
fbld
fnsave
pop
sbb
lock
aam
sub
dec
cmpl
xor
fldcw
lret
cltd
pop
jmp
stos
sbbl
sub
ds
fmul
loope
push
cs
outsl
cmp
int
mov
mov
push
addl
sbb
movsb
jo
ljmp
and
ds
test
icebp
lods
inc
test
cld
push
sub
xchg
push
xchg
cmp
xor
lea
fwait
outsl
mov
cltd
call
mov
lahf
mov
mov
cmp
and
mov
mov
pusha
adc
inc
imul
add
jne
sub
pop
je
rorl
fmull
mov
xchg
mov
addr16
jle
int
fwait
dec
mov
dec
pop
inc
stos
out
dec
mov
add
xchg
ds
pop
fs
mov
adc
mov
sub
adcl
adc
push
movsb
imul
stc
scas
adc
insl
push
pop
daa
int3
sti
xchg
test
into
inc
lds
xor
mov
xorl
pop
and
xor
lahf
test
loope
repz
and
dec
sub
pop
sub
ds
sahf
out
xchg
das
mov
shl
ljmp
sub
or
movsb
jbe
xchg
imul
repnz
jne
shl
test
fwait
mov
xor
loop
or
adc
mov
stos
popf
fdivl
test
jl
in
lahf
mov
out
cmc
ret
cmp
sub
loop
out
and
mov
sahf
mov
lods
int3
xor
push
divl
adc
imul
ja
mov
sub
push
call
jae
icebp
and
add
jbe
mov
push
hlt
push
xor
sub
xor
pop
leave
movsb
out
hlt
xor
loop
rorb
pop
arpl
inc
testb
mov
pushf
add
mov
mov
pop
adc
push
loope
sbb
push
and
xchg
jmp
sub
arpl
xor
adc
hlt
and
or
arpl
dec
and
popa
lods
outsl
adc
movsb
xor
and
xor
jge
xchg
inc
sbb
clc
repz
jbe
pop
cs
cmpsb
addr16
test
cmc
into
ljmp
hlt
mov
or
mov
lcall
out
push
adc
push
mov
mov
nop
in
mov
xor
movsb
jmp
add
call
xchg
loopne
push
adc
or
dec
addr16
stos
ljmp
mov
mov
mov
insl
or
test
cli
scas
movsl
xchg
lahf
xor
in
ds
cmp
sahf
addr16
xchg
pop
jno
mov
rcrb
imul
aas
add
push
adc
int
and
adc
xchg
data16
imul
sbb
imul
inc
jno
jne
push
xor
jno
xlat
xchg
pop
pushf
je
and
inc
adc
in
mov
repz
imul
test
mov
push
mov
loopne
sub
sbb
and
or
imul
mov
aad
dec
and
jecxz
sbb
mulb
dec
xchg
adc
stos
push
xorb
sub
lcall
aad
test
and
mov
and
ret
aam
test
jp
sub
mov
gs
sub
data16
je
les
pop
xchg
pop
outsb
outsb
shlb
pop
cmp
or
xor
push
out
sarb
or
ds
or
fnstcw
sub
jp
ja
sbb
fs
sub
fbld
inc
pop
aaa
push
fldpi
xor
jmp
jl
sbb
mov
mov
mov
jbe
xchg
jns
push
shr
pop
add
les
xor
data16
repnz
neg
fildll
xchg
cld
popf
push
faddl
inc
and
adc
loop
jle
xor
lret
sbb
scas
push
loop
nop
movsb
sub
mov
popf
pushf
pop
push
push
dec
imul
add
std
popf
xchg
push
xor
sbb
or
fisubl
aas
xchg
jge
jmp
enter
scas
jecxz
dec
popf
adc
adc
imul
cmp
pop
int3
adc
jno
repnz
cmpsl
out
sub
lahf
je
addb
xchg
nop
out
cmp
mov
negb
push
cmpsl
sub
loope
and
jle
xchg
push
mov
mov
sbb
in
stc
lcall
xor
lds
cmp
fsubs
inc
flds
stc
incl
lea
xor
mov
xchg
xchg
xor
adc
mov
sahf
repz
push
sbb
xchg
xchg
jmp
sub
dec
cmpsb
jmp
addr16
lds
stos
and
cmp
arpl
arpl
add
test
loope
hlt
out
insl
data16
outsl
jge
ljmp
int3
xchg
jno
add
jne
leave
jecxz
push
or
icebp
sub
mov
jae
lock
data16
movsl
push
pop
pop
mov
in
pushf
enter
repnz
adc
aas
das
cmp
inc
xor
cmp
daa
arpl
push
push
fwait
ja
roll
shrb
out
lea
popa
in
shrb
enter
gs
cmp
push
orb
sub
jp
mov
pushl
adc
jae
insb
fidivl
rcll
xchg
test
adc
push
push
mov
pop
ror
mov
push
test
mov
setb
in
mov
add
cmp
sbb
fwait
hlt
addr16
in
je
stos
and
sbb
test
lahf
out
test
jbe
inc
cmp
imul
sub
gs
add
iret
xchg
aas
jns
call
jne
or
movsl
xor
fs
sub
inc
shlb
jno
cmp
sbb
mov
jbe
inc
sub
call
add
mov
sahf
fs
pop
lahf
icebp
movsl
lods
and
pop
mov
cmp
add
cmc
jbe
test
dec
jo
sbb
jns
mov
dec
fwait
inc
lss
test
je
test
mov
lea
lsl
rorb
xchg
sub
push
imul
test
pop
test
hlt
int
mov
add
sub
mov
imul
test
insl
cmp
scas
mov
cmpsb
cltd
jo
test
clc
out
subl
or
xlat
xor
arpl
cmp
pop
outsb
pop
or
sti
jae
inc
push
cmpsb
cmpsb
cmp
movsb
test
and
push
mov
push
add
setge
les
mov
jno
jp
add
xor
fst
div
jae
jbe
mov
out
fwait
mov
jno
pushf
pop
cmp
aas
out
jne
int3
popf
and
outsl
inc
cwtl
xor
roll
out
xchg
or
jns
mov
adc
jne
lock
rcrl
icebp
aaa
xchg
psubq
xor
dec
dec
out
and
sbb
fsubl
xchg
mov
addr16
jb
sbb
movsb
mov
fs
sub
jmp
inc
sbb
rorb
cmpb
mov
mov
popf
mov
cmpsl
mov
imul
mov
push
dec
sbb
aad
ss
jge
jne
jae
outsl
jne
insl
in
cli
pop
xor
add
imul
out
lock
push
lahf
push
mov
xor
adc
loop
stos
jp
mov
push
jecxz
xchg
inc
in
addb
cmp
push
push
sbb
fldenv
jecxz
dec
into
and
sbb
stc
dec
jge
jp
xchg
lret
roll
xchg
wrmsr
mov
imul
mov
lahf
fsub
sub
fcoms
shrl
clc
xor
sbb
and
mov
rorl
cmp
cltd
cmp
dec
lahf
adc
jecxz
jge
lea
outsl
xor
test
and
push
adc
push
mov
sbb
cli
aas
cmp
in
mov
jbe
test
xchg
test
and
and
jne
pop
push
sbb
mov
test
sbb
mulb
sahf
jl
shlb
pop
sub
js
arpl
and
test
lea
imul
addb
fs
cltd
mov
fstps
push
add
xchg
hlt
xchg
in
add
cmp
xchg
movsb
sarb
ja
jns
sub
cmp
imul
jge
sub
loope
pop
mov
mulb
fnsave
jp
jno
insl
testl
add
imul
jecxz
inc
and
jns
jns
mov
and
out
fs
insb
cmp
sbb
jns
int3
aad
loope
sub
pop
push
daa
lcall
add
nop
icebp
scas
xorl
dec
sub
mov
imul
add
hlt
jg
jg
setnp
add
mov
xor
mov
and
dec
add
jl
ret
push
sub
jmp
ljmp
sub
add
or
xchg
fs
sub
jo
test
testb
lods
xchg
inc
loope
int3
jp
sub
lahf
cmp
fisubs
dec
xchg
add
fbstp
shll
addr16
mov
imul
xchg
push
imul
sub
jmp
sbb
pop
cmpsb
cmp
icebp
sbbl
xor
mov
js
lahf
jge
sbb
adc
mov
outsb
lds
xor
jl
sbb
sub
cmp
cmp
or
inc
loopne
ljmp
sbb
pop
mov
adc
add
fiaddl
adcb
addr16
jle
pop
adc
cmp
adc
stc
clc
loope
lcall
sub
sub
mov
xor
mov
imul
dec
or
pop
sbb
jle
dec
xchg
lea
arpl
sub
sub
and
shrl
sub
ds
orb
loopne
jge
sbb
lahf
iret
or
xchg
out
out
add
cmp
or
adc
adc
in
sbb
mov
inc
pop
inc
je
xorl
inc
lds
lea
fidivl
sbb
outsl
std
loopne
jmp
loopne
mov
mov
les
pop
inc
mov
imul
push
call
mov
daa
pushf
ret
inc
push
cmp
xor
jno
mov
sbb
daa
inc
pop
sub
sbb
add
test
dec
sarb
sarl
xchg
popf
mov
lds
xor
stc
jb
leave
das
and
inc
fistl
add
push
dec
or
scas
mov
adc
jnp
lock
call
movb
or
or
cmp
pop
mov
outsl
lock
dec
es
pop
int3
or
and
aad
and
das
loope
xor
mov
jmp
sbb
xor
fs
fwait
mov
arpl
jge
outsl
pop
xor
addr16
mov
ret
mov
ljmp
or
sub
test
mov
push
add
jne
into
lock
lcall
cwtl
jbe
mov
and
dec
dec
push
daa
les
int
sub
or
jb
outsb
lahf
ficompl
dec
add
mov
nop
cmp
xor
test
add
pop
jb
ret
nop
cmp
mov
mov
cmc
test
xchg
pusha
sub
jnp
adc
insl
mov
int
adc
shr
gs
jo,pn
xchg
cmp
pop
into
cmp
add
xchg
pop
pop
pop
call
iret
popf
adc
cmp
jle
pop
pop
sbb
add
sub
xor
sbb
ljmp
sarb
mov
daa
mov
icebp
fld
push
iret
pop
outsb
cmp
add
pop
cmp
jbe
fistl
scas
insb
jecxz
imul
pop
je
and
pop
addps
push
and
xchg
clc
or
push
mov
insl
jb
inc
clc
mov
mov
shlb
stc
adcb
loop
js
shr
mov
inc
insb
add
cmp
sbb
jae
fcomps
xchg
adc
fs
fbstp
or
add
clc
sbb
push
icebp
cltd
inc
and
int3
out
inc
mov
lods
inc
pop
inc
inc
ss
cmp
and
and
repnz
lcall
lcall
add
mov
repnz
xor
cmpsb
sbb
and
inc
push
ret
lds
test
adc
jae
ss
clc
cs
mov
cwtl
mov
sub
popf
stos
jecxz
push
jle
je
fildll
push
and
cmp
in
es
pop
pop
lds
test
add
dec
push
add
mov
into
mov
insb
xor
push
ja
adc
loopne
dec
pop
cmpsl
xchg
cmp
aad
sub
sbb
xchg
sub
out
lea
mov
and
sahf
imul
shr
cmp
xchg
pop
add
fdecstp
outsl
sbb
dec
aaa
pushf
iret
xchg
mov
enter
les
sub
dec
sub
cli
push
ficoml
push
les
jl
sbb
cli
cmp
lret
add
and
jo
or
adcl
lock
ret
addl
push
loope
mov
loop
scas
jns
jb
addr16
xchg
push
cwtl
aam
dec
imul
insb
in
mov
mov
or
ja
cmp
jl
test
xor
movsb
xor
out
pop
fwait
add
pop
shl
sti
and
pop
inc
lods
rolb
adc
jge
adc
test
xchg
xor
pop
dec
insb
or
mov
xchg
and
sub
pop
jmp
mov
fldt
ljmp
mov
pop
dec
aas
pop
fwait
pop
sti
imul
call
cli
jl
adc
cmpsl
jmp
data16
int
xor
inc
adc
pop
add
repnz
xchg
adc
adc
mov
mov
addr16
insl
addr16
mov
in
mov
in
jecxz
rorb
or
jne
xchg
loope
outsl
add
xchg
imul
pop
addr16
adc
mov
stos
jge
pop
fldl
ret
mov
lea
fmuls
pop
out
in
cmpsl
test
repnz
xor
push
rclb
in
mov
insl
jg
fisttpl
outsb
test
mov
xor
test
pop
sarb
cmp
mov
jg
gs
mov
ds
insb
cwtl
arpl
add
shll
sub
and
push
and
fldt
pop
cmpsl
ja
pop
sub
inc
test
mov
mov
jle
mov
jns
push
xor
addr16
sub
xchg
jmp
xor
and
movsb
adc
cmp
es
enter
jg
jns
add
mov
fiaddl
nop
mov
sub
fisubrl
andl
sub
int3
sub
cmp
imul
pop
arpl
rcr
cmp
jmp
pushf
inc
sub
imul
and
test
inc
fmul
scas
ja
or
mov
lcall
and
imul
inc
vsqrtps
inc
daa
stos
cs
mov
bound
jnp
inc
cmp
mov
dec
sbbl
lea
in
adc
mov
inc
out
cli
sbb
dec
add
clc
xchg
movsb
pop
ds
xchg
dec
lock
pop
add
or
lcall
shl
in
lods
inc
fidivrs
pop
lods
cltd
cltd
dec
out
movsl
jne
cmp
mov
mov
push
je
jns
adc
mov
lock
push
fildl
push
and
dec
imul
shr
movsl
jo
test
leave
jp
andb
xchg
mov
xor
leave
outsl
enter
inc
dec
insl
nop
inc
mov
xor
ss
imul
out
cmp
add
sub
cmp
sub
roll
inc
and
sub
stos
imul
mov
push
mov
sbb
stos
aad
xor
repnz
lods
adc
sahf
push
cmp
jp
aaa
sub
stos
sub
lea
loopne
inc
xorl
repnz
mov
icebp
xor
mov
mov
shrb
sub
fcompl
lahf
jge
add
jle
sub
andb
cld
lods
sub
pop
out
in
xchg
mov
daa
pop
mov
push
pushf
and
cwtl
daa
insb
pop
out
dec
dec
ret
mov
xchg
repnz
repnz
cli
mov
popf
aas
js
mov
add
es
adc
int
sbb
insb
rorb
or
sahf
decl
or
mov
xor
insb
xor
mov
fstps
add
and
mov
cs
mov
daa
es
adc
adc
int
mov
xchg
jecxz
mov
xchg
arpl
dec
jb
adc
pop
jecxz
dec
fmull
sbb
cmpsb
pop
add
sbb
mov
xchg
mov
push
xor
in
pop
sub
and
push
or
dec
sub
in
mov
xchg
xor
and
fwait
out
fildl
cmc
push
roll
lds
pop
mov
loope
xlat
mulb
out
cmpsl
sbb
push
imul
stc
and
mov
xor
lds
adc
fs
insl
aaa
das
or
std
rcr
repnz
mov
or
lods
xchg
mov
push
es
mov
in
stos
pop
sub
mov
iret
popf
and
adc
fstl
inc
test
out
lods
cmp
repz
add
movsbl
sbb
inc
inc
cmp
mov
loopne
sbb
stc
jg
lahf
stos
jle
xchg
jl
push
les
adc
cmpb
ss
push
sbb
into
stos
jnp
xor
ja
test
mov
out
loopne
add
sahf
pop
in
push
leave
loop,pn
out
lret
or
jb
cmp
daa
data16
mov
out
cwtl
fisubl
jb
lahf
sub
test
xchg
fwait
addr16
jle
mov
xchg
fcoms
jnp
adcl
or
pop
add
repz
loopne
inc
fs
lods
adc
jnp
mov
mov
pushf
sub
inc
les
ss
pop
jg
loopne
push
loope
pop
out
ja
inc
movsl
leave
push
mov
inc
js
lret
sub
lea
mov
std
and
jmp
jge
out
jmp
in
mov
xchg
xchg
pop
mov
daa
mov
sub
jae
ret
xchg
sub
cmp
mov
inc
test
fwait
imul
aam
pop
sbb
mov
sbb
xchg
lods
nop
hlt
inc
mov
fidivl
add
add
jno
mov
mov
cli
pop
dec
cmpsb
inc
cli
imul
loop
adc
inc
pop
jae
xor
pushf
jns
lahf
dec
mov
inc
insl
and
mov
jns
mov
mov
sbb
dec
int
push
lock
je
sbb
mov
addb
inc
sub
andl
imull
xlat
push
xor
mov
mov
xor
pop
mov
ret
jle
dec
test
stos
loop
movsl
into
pop
sub
jae
rcrb
cmp
imul
dec
add
loopne
inc
jns
icebp
cli
add
sti
push
ret
lods
mov
arpl
ljmp
je
inc
xchg
aas
pop
arpl
dec
adc
jg
subb
adc
xor
ror
cmc
int3
mov
mov
xchg
in
and
fstps
fisttpl
jo
adc
jno
imul
jbe
pop
in
cmpsb
call
cmp
fidivrl
loopne
dec
addr16
xorl
xchg
lods
ret
lcall
mov
dec
mov
test
xchg
imul
push
inc
movsb
dec
cmpsb
js
jbe
sbb
pusha
sub
ret
fstps
xchg
mov
sub
xchg
mov
pushf
shlb
addl
jno
lods
adc
addr16
test
out
das
mov
aaa
and
pop
imul
out
iret
or
pop
jl
repnz
loope
test
jge
push
clc
cmovne
or
or
test
inc
mov
mov
pushf
lcall
outsb
xor
cmp
inc
and
mov
imul
or
add
xchg
loope
xchg
rorl
lea
mov
push
and
dec
sbb
sub
mov
lcall
fisttps
xor
mov
cmp
adc
xor
jp
int3
and
mov
cltd
mov
sub
pop
xor
popf
jle
push
ds
int
jg
and
cmp
lods
testb
outsl
nop
lock
nopl
mov
clc
pop
inc
clc
aaa
mov
and
cmp
mov
xchg
lods
push
cmc
shll
xchg
jb
fucomi
cmpsb
stos
inc
testl
in
push
rcl
mov
sub
sub
cmpsl
arpl
aad
es
and
test
sub
xchg
cltd
ja
ret
aaa
sbb
push
push
mov
test
dec
cltd
outsl
cli
xor
mov
xchg
ljmp
ret
lock
push
mov
lock
pusha
hlt
mov
jmp
pop
jae
mov
shl
loop
shlb
push
xor
cmp
xor
push
push
mov
movzwl
nop
mov
aam
xchg
push
sub
mov
inc
cld
mov
or
xchg
js
lret
out
dec
mov
inc
imul
pop
ret
into
enter
outsb
dec
xchg
test
sub
xchg
lods
inc
cli
and
xchg
shrb
xor
jg
push
jle
adc
ret
pusha
cmpsl
mov
mov
adc
insb
outsb
cmp
mov
mov
jecxz
adc
fsubrl
mov
sub
xor
adc
into
scas
lea
add
adc
pop
jne
push
lock
ds
rcll
test
inc
cwtl
xor
test
cmp
int
xor
nop
je
into
adc
fnstcw
jmp
mov
inc
push
xorl
fisttpl
or
subb
aaa
inc
loopne
and
dec
or
ret
and
pop
test
mov
jp
and
lcall
out
ds
out
call
or
xchg
dec
xchg
pop
sub
add
cmpsb
pop
iret
add
outsb
xor
movsb
outsl
enter
xlat
jmp
dec
and
cmp
sub
sub
loope
cmpb
cs
push
mov
jns
les
pop
scas
add
cmp
mov
stos
push
jmp
cmpl
jg
inc
fistl
xchg
mov
jl
fiaddl
mov
or
hlt
xchg
mov
lock
add
xchg
sub
jge
dec
fbstp
jb
cmp
nop
subl
xchg
sbb
jo
and
push
ret
push
into
inc
rolb
je
sbb
cmc
rolb
cmp
inc
jecxz
fisubl
pushf
gs
mov
scas
rcrb
pushf
loopne
add
daa
mov
pop
in
data16
ds
pop
ret
sbb
pop
cmpsl
out
ja
repnz
and
int
jno
or
xor
lock
and
and
lock
or
xchg
sbb
sub
mov
xor
jae
in
fsubs
pop
mov
idivl
lret
cmpsl
xor
rolb
cli
push
xor
je
cmc
je
lds
jae
int3
and
call
sub
mov
adc
inc
add
imul
jae
out
xlat
lock
cmp
inc
sti
les
rolb
in
lcall
and
lock
pop
aam
scas
mov
jno
repnz
clc
jns
repnz
les
rcrl
shrb
sub
fbld
cmp
fistpl
add
mov
fldcw
mov
sbb
push
loope
mov
and
imul
jecxz
fildl
call
sub
xor
jle
test
jns
inc
adc
jnp
jl
push
mov
in
adc
cltd
cmp
adc
icebp
cli
and
arpl
scas
insl
inc
fld
pushf
imul
inc
jge
mov
jl
and
mov
mov
xorb
in
xchg
or
nop
xchg
xchg
cmc
and
aaa
xor
imul
cmp
popf
push
xor
jo
mov
adc
cmp
push
or
xchg
jmp
fxch
mov
xchg
inc
dec
mov
addr16
enter
mov
jmp
push
shlb
lahf
sbb
mov
arpl
dec
bound
xchg
cmp
cltd
dec
xchg
call
dec
mov
xchg
jb
jle
adc
sub
push
test
xor
loope
icebp
adc
mov
push
lcall
cs
int
das
stos
xrelease
mov
xor
pop
mov
xchg
sbb
divl
cmp
shll
xchg
fisttpl
outsb
outsb
idiv
bound
inc
shlb
pop
movsb
or
push
je
in
dec
sub
repnz
or
mov
inc
sub
lea
ds
hlt
adc
mov
or
cld
nop
add
jl
pop
inc
push
clc
sbb
int
mov
push
cmp
hlt
mov
cmp
mov
inc
not
xchg
push
mov
jle
add
jle
cmpsl
push
ja
xor
mov
mov
push
cltd
loope
je
fists
inc
jmp
push
xchg
push
popa
imul
movsb
pop
cmpsb
shl
rol
jg
jecxz
add
ss
adc
stc
outsl
std
scas
push
addb
mov
push
push
mov
xlat
adc
sub
dec
incb
xor
mov
shlb
scas
sub
testb
or
xorl
sbb
mov
insb
jne
mov
arpl
push
jmp
lock
sub
add
in
enter
cltd
jle
inc
ljmp
cli
aas
adc
shlb
push
xchg
add
jne
out
sbb
xchg
mov
sub
leave
and
jp
repz
inc
lds
xchg
push
loopne
sub
loop
mov
cmp
cs
sub
in
fnstcw
nop
or
repz
bound
ret
jnp
mov
daa
sbb
out
popf
xor
pusha
mov
mov
sub
add
or
fdivr
lcall
es
popf
out
add
je
jmp
loopne
test
adc
sub
xor
and
pop
arpl
loopne
and
pusha
aaa
cmc
fildll
jmp
test
data16
xchg
cmp
in
mov
xor
mov
in
mov
ret
stos
test
sub
imull
mov
push
mov
rorb
rclb
negb
mov
cmpsb
jae
out
into
and
push
xchg
pop
out
add
cmp
mov
dec
cmp
jg
sub
push
dec
clc
jnp
aam
mov
adc
xchg
sbb
daa
xor
dec
ret
negl
daa
loope
sarl
inc
dec
sub
daa
cs
stc
es
iret
imul
pop
mov
add
je
loope
jne
clc
stc
xor
fistpll
push
add
or
cmpsl
dec
ret
and
push
xchg
in
xchg
xor
xchg
data16
out
sbb
xchg
or
inc
jle
divb
mov
repz
xchg
loope
or
scas
cmp
iret
cli
lods
dec
xchg
sub
push
inc
scas
and
cli
out
pop
call
mov
negb
popf
mov
adc
xchg
int3
mov
inc
inc
lock
repnz
subl
sbb
cmp
pop
iret
jge
pop
add
push
sbb
insb
fnsave
xor
xchg
mov
daa
imul
jae
pushf
cmc
hlt
push
lcall
fidivl
pop
in
iret
cli
pop
out
subl
daa
call
push
repnz
gs
test
inc
add
mov
push
loopne
push
adc
inc
in
ret
loope
scas
lds
popf
fisubrl
sbb
fs
xchg
fsubrl
fcoml
push
mov
push
cli
add
inc
test
mov
ds
lahf
push
or
mov
lea
ja
fisubs
test
mov
mov
cld
sub
adc
scas
xchg
xlat
lods
sbb
dec
xor
mov
fsub
xor
imul
inc
xchg
jne
in
fildl
imul
test
add
fildll
stc
and
imul
add
inc
dec
push
xor
sbb
lock
mov
adc
mov
arpl
mov
lcall
std
sub
out
das
rol
imul
mov
cmp
jg
test
xchg
sti
adc
and
push
rol
sub
lret
cld
inc
xlat
sar
push
int
das
xchg
int
les
ja
dec
sub
pop
or
and
js
out
ret
dec
sub
insl
mov
jg
dec
incb
into
bound
mov
test
jle
and
out
aad
sahf
daa
in
arpl
push
sbb
sbb
dec
xor
lods
jnp
xor
or
clc
shll
imul
xchg
mov
push
and
imul
int
push
lods
leave
inc
mov
in
fwait
loop
mov
lahf
cwtl
and
lcall
scas
movsb
iret
push
in
xchg
pop
ds
lods
inc
mov
mov
in
shlb
inc
mov
pop
inc
mov
mov
out
mov
xor
sub
and
add
fwait
shlb
pushf
inc
xor
data16
cmpsl
je
repnz
incb
inc
cmpsl
out
or
dec
pop
fsts
cmpsb
fs
sbb
cld
ds
adcb
sti
cmpsl
jno
sub
pop
loope
popf
pushf
imul
sub
daa
mov
adc
sub
lods
mov
jns
out
and
inc
jbe
add
mov
pop
in
out
sbb
add
push
mov
inc
inc
ror
je
in
push
pop
fdivrp
push
xchg
lds
pop
xor
cli
adc
fbstp
je
jb
mov
movsb
imul
lock
adc
xor
xorl
insl
and
jne
repz
add
and
cld
mov
outsl
test
jp
jg
sbb
mov
xor
xchg
cmp
aas
mov
mov
test
loop
mov
mov
xlat
sbb
ss
lret
push
shrb
mov
cmp
dec
iret
xor
mov
mov
dec
jns
in
sti
sub
popf
call
cmpsb
andl
test
lret
push
push
push
das
repnz
popf
pop
movsb
adc
adc
lret
data16
jb
ljmp
xchg
daa
sbb
push
mov
xchg
jg
cmp
pop
test
and
mov
adc
sub
call
pusha
dec
roll
pop
fwait
mov
sub
cmpsb
cmp
fiaddl
mov
shrl
test
xchg
xchg
repnz
in
inc
xchg
push
mov
mov
sub
test
pushf
and
sarb
loopne
xor
cmc
xor
js
jecxz
and
insl
cmp
jbe
sti
pop
mov
test
lds
test
pushf
jle
aas
pop
aad
push
loop
xchg
sbb
or
push
jmp
xchg
xchg
pop
dec
loop
out
inc
movsl
jmp
and
mov
push
inc
add
mov
pop
push
jl
xchg
stc
push
jge
cmp
flds
fildll
sub
and
mov
push
shlb
jmp
pop
scas
dec
xchg
adc
jnp
addr16
in
mov
pop
cmpsl
loop
repz
in
xchg
addr16
rolw
mov
and
inc
ss
lods
das
aaa
outsb
scas
iret
dec
fldt
xor
add
lahf
cmpsl
movsl
lock
out
popf
and
mov
jecxz
andl
adc
test
ret
test
out
mov
les
movb
gs
push
insb
shl
stos
pop
ljmp
sub
sub
gs
cltd
dec
insl
push
ja
pop
xor
sbb
add
lock
xor
cld
xor
xchg
inc
inc
add
jg
xchg
xchg
insb
mov
or
jl
mov
lods
cmp
arpl
pushf
rcrl
pusha
scas
push
jge
nop
loope
imul
sub
int3
or
mov
mov
insb
int
mov
mov
and
lea
popa
iret
hlt
add
orl
addr16
fwait
cs
out
bound
mov
repz
adc
inc
adc
aam
jnp
sbb
pop
adc
int3
sub
sub
mov
mov
inc
shlb
add
in
mov
loope
mov
insl
test
shr
andl
scas
pop
sub
push
mov
and
test
aam
jns
sub
nop
loope
nop
test
push
in
jmp
popa
and
in
in
and
mov
jge
sub
pushf
loope
push
mov
test
cmpsb
icebp
loope
daa
lods
imul
push
lock
or
in
xor
add
ja
push
jne
pushf
and
sub
xchg
jns
imul
xor
je,pt
fsts
dec
test
add
into
mov
xor
imul
test
lods
imul
mov
test
pop
xor
pusha
imul
imul
jo
test
imul
movsb
daa
push
dec
mov
mov
jns
mov
xor
mov
xor
dec
filds
jo
push
xor
inc
lods
jb
pop
in
xchg
outsl
imul
adc
jne
mov
addr16
daa
sbb
loopne
sub
cmp
mov
insl
popf
push
cmp
jle
popf
loope
repz
dec
test
pusha
aad
mov
inc
mov
imul
mov
jle
leave
xchg
or
push
rolb
cli
inc
repz
sbb
pop
cs
adc
sub
ret
jnp
fucomip
nopl
cmpsl
adc
sub
jmp
push
sub
fistpl
xchg
aam
jne
sbb
arpl
shlb
push
jb
out
xor
daa
add
gs
jnp
inc
xor
and
or
and
test
arpl
ljmp
mov
mov
stos
jo
and
sub
adc
sub
or
push
sub
dec
sbb
jno
in
icebp
mov
arpl
dec
push
xchg
lahf
xchg
pop
sti
addl
test
fbld
push
sub
push
mov
xchg
or
es
or
dec
fs
jmp
mov
or
in
sub
dec
pop
es
mov
dec
sub
lret
dec
fisubrl
and
shlb
push
lods
pop
in
sahf
xor
sarb
jmp
insl
repz
mov
jg
push
ja
je
cmpsl
loopne
adc
push
mov
je
cmp
mov
js
inc
mov
clc
lahf
cld
out
and
fdivrs
lds
addl
cmp
imul
arpl
rcr
popf
lahf
push
pop
pop
dec
rcrl
mov
popf
stos
fs
in
js
aad
pop
loop
insl
cld
mov
daa
test
xchg
push
les
test
insl
arpl
addr16
pop
adc
in
ss
push
clc
dec
dec
xor
push
jge
mov
jne
and
and
xor
out
jle
inc
popa
mov
jno
xor
sbb
push
cmp
xor
outsl
sbb
push
lods
push
lock
cwtl
ljmp
sub
push
xchg
xor
sub
pushf
xchg
mov
push
inc
cmp
xchg
insb
lods
jl
fcomps
adc
icebp
movsl
fcompl
jg
jbe
and
adc
sti
xchg
loop
adc
jns,pn
add
sbb
movl
xchg
lret
xchg
add
iret
adc
fwait
xchg
pop
cmpsl
and
cmc
imul
lea
mov
sub
cmpsl
jns
xchg
xor
repz
pop
dec
xchg
cld
jg
sbb
icebp
cmp
pop
repz
scas
push
fs
sub
push
mov
jno
mov
subb
sbb
mov
fsubrs
fisubrs
inc
mov
fmuls
xchg
aaa
or
into
lock
dec
jb
mov
aas
je
push
add
dec
leave
jae
jb
sub
shl
sbb
arpl
gs
sbb
sbb
lcall
fstpl
fs
shlb
imul
or
push
and
fnstenv
dec
add
mov
rcll
cmpsb
mov
sub
cmc
xor
dec
xlat
loopne
out
orl
add
jb
xchg
cmp
repz
mov
je
dec
addr16
out
into
daa
push
movsl
xchg
imul
fidivl
cmp
int
psubw
loopne
sub
scas
call
add
shrb
xchg
add
hlt
jns
es
shl
pop
cmpsl
mov
dec
call
leave
xchg
adc
ljmp
xor
cmp
sbb
xchg
addl
out
test
sub
jae
imul
jb
xor
je
jne
and
data16
leave
popf
into
sub
aas
mov
or
cmpsl
scas
fstl
mov
lea
and
xchg
cli
mov
mov
aad
jmp
push
sub
fisubrs
in
mov
sub
pop
mov
aad
mov
popa
sub
fdivr
pop
in
mov
mov
shlb
sub
xchg
test
pop
das
testw
jae
daa
idiv
ja
fwait
imul
cmp
push
dec
icebp
std
dec
push
inc
popf
push
cmc
out
pop
scas
sbb
fs
test
pop
jb
roll
dec
cmp
sti
push
aad
outsl
sbb
setg
bsr
cltd
inc
mov
and
or
pop
add
movsl
xor
xchg
sub
insb
and
mov
push
xchg
scas
pop
ljmp
sub
xor
mov
xor
ja
mov
lret
pushf
add
xchg
dec
push
sbb
push
ret
xchg
cwtl
xchg
nop
jecxz
cmp
push
xchg
sbb
out
mov
je
sub
jne
dec
sbb
sub
outsl
hlt
mov
cmc
mov
push
stos
and
sbbl
mov
or
adc
loope
sbb
mov
inc
xchg
jg
mov
jne
in
fildll
testl
mov
xchg
movsl
lock
test
sbb
js
es
scas
daa
or
cmp
push
adc
mov
iret
lea
mov
mov
ret
cs
jecxz
inc
clc
xchg
and
cmp
push
mov
inc
test
stc
loopne
jmp
sub
or
gs
xchg
and
test
sbb
xchg
mov
and
mov
addb
lret
adc
les
gs
andb
sub
movsb
into
xchg
ret
xchg
push
mov
mov
pop
jbe
outsb
scas
and
xor
cs
in
insl
mov
aad
je
xchg
sub
dec
loope
scas
popf
ret
les
push
sbb
out
test
jae
addr16
pop
loope
or
inc
add
das
and
lahf
cmp
adc
inc
sbb
inc
mov
arpl
out
fiaddl
pop
mov
loope
ljmp
pop
adc
icebp
adcb
or
lods
xor
mov
jae
mov
mov
jbe
cltd
or
mov
stos
lods
push
mov
adc
aaa
jmp
mov
inc
inc
lahf
jbe
sub
mov
gs
mov
mov
lods
fsubl
test
popa
pusha
pop
mov
mov
rorl
adc
gs
aas
cmpb
movsb
mov
sbb
loopne
test
cltd
push
mov
push
push
and
fsubrs
cli
mov
pop
out
mov
lahf
fstp
insl
repz
gs
mov
dec
in
movsb
enter
jnp
inc
int
aas
xor
gs
outsl
loopne
and
jge
and
roll
frstor
sarl
sbb
jns
pop
and
xchg
test
pushf
cmp
lea
aaa
adc
js
pushf
hlt
sbb
stos
dec
xchg
daa
dec
mov
je
xchg
add
inc
jge
mov
test
and
arpl
inc
add
imul
popa
mov
and
adc
mov
sub
repz
xchg
xchg
and
add
sti
loopne
inc
gs
jb
outsb
pop
xchg
pop
lds
gs
inc
sahf
xchg
cs
jp
pusha
jg
add
mov
pop
ret
bound
filds
mov
inc
or
loopne
pop
cmp
add
mov
arpl
data16
mov
lods
and
je
imul
in
es
insb
fdivrs
mov
mov
andb
loopne
fisubs
loopne
movsb
shll
scas
jge
pushf
and
adc
ret
rcrl
out
jle
dec
bound
aam
pop
mov
shrb
sub
jne
loope
loop
xchg
mov
or
mov
movb
es
push
gs
loope
sbb
out
mov
jecxz
jge
mov
push
popf
cmp
bound
mov
lock
popf
fsubs
insl
lods
movsb
inc
ret
or
in
cmp
stos
popf
mov
mov
and
rol
xchg
xchg
lods
js
aad
mov
pop
les
sbb
popf
ror
arpl
aaa
add
sbb
shl
in
adcl
cmp
dec
mov
mov
sub
lcall
gs
mov
test
sbb
mov
popa
sbb
inc
sbb
xor
jmp
popa
sbb
mov
bnd
mov
loopne
cli
fisttps
inc
test
push
xchg
rcl
and
push
fnstenv
sub
popf
sub
aad
pop
test
loopne
xchg
out
nop
mov
and
inc
out
ds
loopne
mov
repz
sub
pushf
xchg
adc
mov
loope
rcl
stos
leave
clc
jp
push
jge
lods
inc
push
push
jle
lret
push
loope
xchg
fsts
push
dec
popf
lock
mov
loopne
sbb
or
call
movsb
push
lods
arpl
inc
sbb
and
sbb
fsubrs
das
call
roll
loopne
sar
arpl
loopne
xor
mov
rorb
daa
loope
pop
test
jbe
pusha
inc
push
push
icebp
gs
scas
test
and
pop
push
insl
jmp
rcr
shlb
gs
lock
outsb
xchg
es
jecxz
movsl
lcall
shll
sti
lahf
in
sub
pushf
and
adcb
push
lret
popa
aaa
pop
popf
mov
and
ss
sub
jns
mov
test
sub
daa
aaa
pop
icebp
inc
in
in
cmp
das
inc
test
sub
inc
xchg
dec
mov
pop
jns
and
mov
notb
and
icebp
mov
jnp
andl
mov
and
lahf
mov
loopne
insb
or
popf
fsubr
and
stos
jnp
popa
dec
jecxz
insb
fcoml
loop
mov
and
in
scas
pushf
push
popf
mov
adc
leave
fcomp
gs
call
outsb
jns
or
and
rcll
in
or
jbe
gs
insl
dec
sbb
mov
incb
lea
and
rcll
andb
push
in
popf
les
scas
mov
pop
data16
fwait
inc
pushf
push
dec
fsubrl
pop
imul
lds
gs
rclb
push
add
cmpl
insb
loope
jge
mov
or
or
xchg
insl
add
icebp
scas
xchg
test
pop
inc
mov
inc
add
cs
cltd
sub
and
and
mov
gs
push
ss
cmp
inc
test
mov
popf
jmp
test
or
mov
outsl
pop
fiadds
arpl
mov
cmpsb
mov
clc
lahf
scas
fistps
inc
loop
cmp
les
and
lcall
cmp
cmpb
cmpsl
jno
mov
test
bound
mov
imul
add
sub
in
popa
pop
mov
test
dec
lcall
lret
mov
sahf
imul
bound
popf
rorb
xchg
jo
xchg
mov
nop
xor
and
mov
pop
dec
mov
gs
ret
mov
mov
insl
sti
push
nop
mov
jno
lods
aas
xchg
mov
ret
das
and
mov
mov
popf
dec
popa
and
sbb
inc
gs
pop
movl
lods
incl
das
adc
push
je
push
jg
outsl
cmp
mov
jne
cld
popa
sbb
mov
gs
insb
jae
rorb
jno
ret
push
push
imul
sahf
gs
mov
push
and
and
mov
faddl
ja
jne
test
movsb
cwtl
andb
xchg
dec
and
int
xchg
lods
mov
mov
mov
sti
jecxz
stos
add
jecxz
aam
dec
mov
outsb
gs
cmp
push
xchg
repnz
sahf
dec
popf
push
add
insb
adc
mov
and
cmp
mov
mov
sbb
lea
inc
into
insb
dec
inc
les
iret
sub
jb
push
xor
popf
mov
and
arpl
jmp
mov
pop
push
pop
xchg
mov
mov
lcall
mov
and
outsl
jmp
fwait
mov
dec
lahf
inc
sbb
loopne
loope
cld
mov
shlb
addr16
and
pop
pop
movsb
sub
ds
sbb
jno
sub
pop
mull
gs
jbe
test
add
popa
aas
sub
sub
pop
mov
dec
test
sahf
xor
mov
sbb
ffree
pcmpgtw
jns
push
in
jge
pushf
popa
mov
fnstsw
and
mov
clc
or
bound
cltd
test
add
loope
shl
data16
dec
and
and
aad
mov
jecxz
mov
data16
push
mov
pushf
mov
sti
inc
xor
add
gs
xchg
or
xorb
jecxz
adcl
aaa
cli
lcall
fisttpll
add
mov
popa
out
popa
sti
sahf
insb
mov
loop
cmp
test
movsb
stos
cmp
inc
or
add
mov
sbb
sbb
fcoms
mov
cmpsl
sbb
jne
dec
in
push
enter
dec
ficoms
rcl
sbb
mov
cmp
movsl
xor
mov
gs
and
test
out
jns
rcrb
call
jnp
ret
mov
dec
sbb
fists
arpl
jge
dec
jp
ficomps
movsl
push
cmp
and
bound
lahf
std
imul
rdmsr
jns
inc
loop
iret
aad
orl
sub
loopne
mov
jae
dec
mov
loope
mov
pop
addr16
notb
or
and
mov
jecxz
dec
push
inc
mov
in
in
insl
lcall
in
call
jecxz
xor
and
out
bound
leave
das
adc
shl
clc
inc
mov
adc
xor
cmp
addb
xchg
popa
je
push
mov
loopne
movsb
xchg
add
mov
cmpsb
out
jecxz
cmp
sahf
xchg
adc
xchg
mov
and
out
adc
lods
gs
sbb
or
pusha
inc
in
and
mov
mov
mov
ja
mov
inc
mov
hlt
xchg
repz
and
push
and
mov
testl
mov
test
movsl
loopne
pop
loope
add
and
cmp
jecxz
mov
rorl
clc
out
mov
gs
inc
cmp
push
and
dec
add
orl
mov
pop
movsb
add
gs
popf
int3
popa
test
xchg
and
mov
mov
cmp
scas
sbb
or
xchg
push
negb
and
sbb
or
sbb
jl
movsb
in
shr
gs
pop
jg
cmp
lea
stos
xchg
addr16
popf
jge
and
and
cmc
jecxz
cmp
out
fbld
xchg
incl
cmp
mov
gs
lods
in
fnstcw
xchg
pusha
add
sub
hlt
xchg
or
inc
mov
lahf
cmp
shll
inc
movsl
mov
gs
data16
movsb
inc
xchg
push
bound
jmp
sub
rcrl
ljmp
orb
nop
sbbl
shrl
add
adc
in
inc
push
popa
test
call
sbb
sbb
cmp
fcmove
cmpsb
cltd
loopne
into
adc
in
dec
xor
adc
cpuid
xor
imul
sub
and
imul
aas
ficompl
dec
test
movsb
es
ficomps
or
daa
xchg
xchg
in
cmpsb
loopne
nop
xor
xchg
das
daa
add
and
adc
mov
movl
mov
mov
outsl
daa
sbb
and
xor
dec
lea
es
mov
fwait
adc
cld
dec
jmp
xchg
add
dec
xchg
gs
int3
out
dec
add
pusha
inc
or
in
int
cmpsl
imul
and
repnz
lret
dec
out
xor
mov
je
jecxz
add
and
mov
lret
and
setl
or
in
dec
popf
les
and
std
xlat
dec
and
test
lcall
enter
les
movsl
shll
or
pop
dec
jmp
aam
dec
mov
gs
cwtl
cmpsl
ljmp
daa
in
xor
in
sbb
xchg
popa
and
out
mov
int3
movsl
jge
adcl
and
and
out
xchg
adc
test
in
cmpsl
or
and
out
mov
and
addr16
and
push
andl
sahf
in
pop
jmp
addr16
xor
and
es
mov
push
movsb
cmp
cmp
arpl
cmpsb
push
xorl
and
sahf
test
out
xor
push
inc
add
adc
andb
sbb
jnp
movsl
pushf
fwait
mov
test
daa
inc
loopne
xchg
mov
and
movsl
pushf
jle
and
xor
out
lahf
mov
fidivs
in
jnp
movsl
into
mov
push
lods
out
mov
xor
cmpsb
push
lret
sbb
xchg
cmp
mov
or
jnp
lods
test
test
shlb
adc
xchg
pop
fsubl
cmpsb
stos
movsl
je
in
std
ja
pop
aas
xchg
cltd
sbb
mov
mov
popf
sub
pushf
inc
out
sbb
leave
addr16
xor
cmpsl
sbb
lcall
test
gs
mov
mov
pop
adcl
adc
xchg
jne
fdivs
cmpsb
leave
xchg
popf
std
mov
sbb
jb
fcoml
inc
and
call
cld
and
jnp
lds
mov
gs
xlat
out
fstp
out
push
and
test
cmpsb
outsl
and
dec
movsb
out
or
and
mov
pop
or
movsb
daa
sahf
mov
adc
mov
jae
es
sbb
or
out
cmc
jnp
gs
mov
in
mov
mov
out
mov
xchg
mov
movsl
sbb
popf
test
in
dec
cmpsl
test
xchg
xlat
jp
jnp
mov
sbb
jns
push
add
xor
addr16
loop
cmc
loope
jge
daa
cmp
mov
in
mov
test
js
cmpsl
xorb
gs
in
sti
popf
pop
ja
scas
icebp
xchg
mov
xor
out
popf
inc
mov
movsb
push
push
daa
push
push
push
test
inc
push
lods
or
fistpll
popf
lcall
fidivs
mov
lods
sbb
inc
dec
rcll
daa
push
loopne
test
sub
jo
push
loop
andb
es
outsb
loope
test
xchg
mov
std
in
jns
enter
in
dec
and
shr
gs
nop
pop
mov
fldl
cli
imul
xlat
fstl
movsl
xor
mov
mov
push
xchg
lcall
imul
aaa
jae
std
movsl
fs
and
ret
push
outsl
in
addr16
jae
test
cmc
movsb
cmpsl
pushf
pop
cmp
jecxz
cmp
test
lret
sbb
mov
sub
addr16
in
or
dec
rclw
in
push
xchg
mov
inc
mov
popf
test
test
mov
gs
aam
pop
jno
push
inc
es
insb
sbb
and
daa
xchg
sbb
cmpsb
and
arpl
data16
mov
gs
mull
add
pop
test
sbb
jl
mov
test
rol
mov
dec
fnsave
gs
mov
cmpl
sub
cmpsl
inc
fistps
xchg
mov
pop
sbbb
gs
pop
jnp
mov
or
gs
out
mov
push
es
lahf
inc
and
daa
in
pushf
mov
jge
movsl
mov
mov
inc
xchg
aas
cld
aad
in
loop
sti
fistpll
and
frstor
ret
addr16
jnp
sbbb
sti
and
xchg
repnz
sbb
fwait
out
mov
push
xchg
cli
and
out
add
addr16
push
jne
popf
xor
add
cmp
dec
gs
movsl
mov
gs
out
orl
lret
add
push
out
mov
mov
add
int3
inc
in
mull
fstps
jne
adc
xor
daa
in
bound
mov
shll
and
xchg
mov
adc
cmpsl
xor
gs
daa
pop
or
pop
test
movsb
movsl
sti
push
stos
mov
mov
in
sbb
test
mov
in
and
test
movsb
add
gs
add
popf
call
sub
xchg
pop
and
xchg
fldenv
aaa
sub
adc
out
jg
in
rorb
xchg
mov
jecxz
cmpsb
fsubr
mov
loope
xchg
in
stos
js
gs
lds
inc
popf
sub
jecxz
fidivs
gs
in
mov
push
push
out
ret
and
pusha
popf
call
test
xor
movsl
aam
popf
icebp
cltd
test
and
sbb
lea
dec
movsb
es
aaa
xor
into
or
ret
inc
dec
mov
and
jne
and
aas
adc
and
addr16
xlat
add
jae
andl
mov
lea
xchg
mov
and
daa
sub
inc
movsb
lret
jne
and
cwtl
dec
in
and
and
jae
rclb
jcxz
cli
in
lret
push
mov
or
rcl
mov
mov
xchg
xlat
mov
cmc
in
pushf
add
and
cltd
sub
or
cmpsb
pusha
int3
lds
gs
pop
out
test
loope
cmpsl
sub
fidivrl
leave
and
xor
popf
or
pop
cwtl
out
xorb
dec
mulb
and
rclb
jae
xchg
ret
loopne
xchg
pop
call
movsl
dec
mov
imul
lods
push
call
and
dec
daa
in
cmpps
stos
adc
pop
in
or
andb
test
mov
out
inc
xchg
outsb
jecxz
lea
repnz
out
test
insb
movsb
in
dec
gs
mov
les
sti
int3
xchg
loopne
cmpsl
subl
fldenv
and
les
and
addr16
arpl
das
inc
and
std
loopne
adc
lcall
addr16
es
cld
sarl
cmp
aad
xchg
aaa
lahf
inc
push
in
sbb
cmp
ret
lock
xchg
test
test
and
jae
and
lods
pushf
rorl
sahf
add
xor
sbb
outsl
test
xchg
or
jg,pt
jge
pop
mov
adc
xchg
lods
imul
movsl
imul
and
addr16
lcall
sbb
fsubr
xor
xchg
rclb
aad
push
xchg
pop
mov
loope
sbb
add
add
inc
xchg
adc
mov
push
inc
pop
out
ljmp
mov
sbb
and
and
shrb
cs
je
stos
gs
dec
cmpsb
push
fs
sub
and
sbb
jnp
xor
insb
sarl
jne
and
lahf
sti
movsl
gs
out
test
inc
mov
and
ret
cld
jne
daa
jbe
popf
ja
and
mov
push
out
sbb
leave
cmpsl
sbb
inc
xchg
inc
icebp
and
out
dec
and
gs
addr16
lcall
inc
popa
loope
loop
xchg
rcl
test
mov
pop
out
push
out
mov
push
gs
cld
addr16
bound
loopne
and
inc
gs
out
cli
out
xor
scas
and
test
outsl
mov
loop
in
xor
call
lods
mov
ja
or
cmpsl
stos
outsl
in
leave
lcall
mov
frstpm(287
les
add
gs
mov
sub
int3
mov
xchg
test
cwtl
sbb
dec
cltd
pop
dec
mov
cwtl
hlt
xchg
loopne
mov
aaa
out
int
xchg
fdivr
lahf
aas
nop
aaa
push
cwtl
aam
into
je
sub
daa
js
mov
test
add
sub
sahf
hlt
lea
cld
and
test
jle
nop
or
cwtl
cs
mov
jns
xchg
and
inc
icebp
jle
add
movsb
mov
pop
imul
cmc
sbb
xchg
scas
test
sub
and
or
xor
inc
inc
xor
int
jnp
test
mov
jae
pop
push
mov
add
push
ret
icebp
sub
ja
sti
rcll
repnz
inc
mov
and
sub
pop
adc
jp
cmpsb
mov
out
cmpsb
test
dec
gs
inc
test
mov
mov
les
in
jecxz
js
fwait
sub
dec
adc
jbe
and
sbb
imul
dec
jecxz
cmpsl
imul
and
inc
dec
out
cmc
jg
sahf
push
loope
xchg
hlt
add
leave
call
mov
jns
xchg
call
sub
mov
push
orl
mov
mov
push
fcoml
dec
nop
ret
jle
fbstp
xlat
mov
aaa
stos
push
mov
aaa
push
pop
lock
rolb
push
lock
sub
adc
sbb
ret
dec
arpl
mov
imul
push
dec
loop
sub
bound
mov
gs
mov
push
repz
loop
subl
push
sbb
popl
cli
push
push
imul
mov
out
nop
pop
std
loopne
testb
cli
mov
fbld
cmc
adc
sbb
mov
fsts
pop
inc
sbb
dec
pop
sahf
clc
nop
inc
leave
mov
js
push
shl
cwtl
shl
push
jecxz,pn
ja
ficoms
mov
movsl
adc
lcall
aas
jl
mov
fadd
jge
mov
imul
fnstcw
stos
fiaddl
jle
add
sbb
xchg
hlt
pushl
jae
sub
movsl
inc
lret
popf
add
les
add
fbld
imul
jmp
mov
push
leave
mov
or
in
shlb
cmp
stos
lea
push
and
pop
jp
out
xchg
ret
xor
mov
das
loope
leave
cmp
mov
in
mov
icebp
outsl
lcall
lea
mov
adc
fwait
cmpsb
xor
and
cmp
pop
cmc
ss
gs
es
jle
pop
imul
rorl
cmp
popa
push
movsb
adc
mov
cmp
pop
lds
push
push
sbb
repnz
push
pushf
dec
add
clc
test
fstpl
sbb
out
imull
cmpsl
xor
notb
push
lahf
andl
bound
mov
fs
mov
push
and
rorl
pop
fidivrl
mov
bound
sub
stc
pop
inc
and
repnz
sub
imul
jmp
push
xchg
pushf
lahf
insb
sub
mov
mov
or
popf
pop
imul
test
mov
or
mov
test
lret
push
lret
cmp
aaa
in
stos
push
gs
int3
lahf
popf
mov
aam
mov
inc
repz
call
jecxz
xor
aad
jmp
gs
in
outsb
push
stos
mov
out
sbb
xlat
or
repz
imulb
arpl
and
xorl
add
and
sub
push
gs
and
aam
fldt
and
ror
sub
jb
ret
jne,pn
inc
popa
mov
jl
test
adc
push
int3
gs
jecxz
movq
jne
pop
jno
inc
mov
mov
adc
gs
cmp
xor
xchg
shlb
or
add
and
popf
test
push
lahf
cs
je
fisubs
xchg
in
xor
popf
pop
addr16
cmp
mov
pop
pop
gs
push
fidivl
imul
mov
jge
repz
gs
into
xchg
push
gs
push
ret
das
inc
mov
dec
cli
imul
lods
repnz
adc
js
jg
mov
testl
int
cli
add
jge
incb
xchg
cmp
inc
fwait
pop
adc
pop
repz
and
dec
dec
pop
imulb
into
pop
jne
call
loope
daa
sub
leave
and
lar
mov
rol
mov
add
cmp
jnp
dec
inc
rcll
bound
jbe
xchg
pop
jecxz
cmpsb
fcompl
mov
push
lret
jge
sub
mov
test
pop
outsl
lods
push
insl
gs
bound
and
mov
insb
mov
jle
cmc
or
aad
xor
ljmp
stos
sub
dec
insb
and
xchg
lock
or
or
loop
cltd
xchg
push
and
lea
ds
fsubr
cmp
cs
lret
test
test
push
adc
sbb
fwait
cmp
es
int
sbb
loop
fcoms
lods
pop
pop
jmp
gs
std
cld
xor
mov
xchg
cmp
dec
scas
sub
ret
insl
mov
add
rol
sbb
mov
lret
add
gs
out
adc
lock
jno
je
pop
ljmp
inc
jmp
adc
fucomp
push
mov
sbb
gs
icebp
push
or
cltd
mov
xchg
sahf
andl
loope
les
mov
cld
movsl
and
out
sbb
jb
int
gs
addb
in
push
cwtl
stc
mov
and
pop
daa
or
pop
and
and
addr16
or
gs
push
in
pushf
aad
jp
loope
push
push
xchg
aad
and
movsb
sbb
xor
dec
ffree
and
xchg
xchg
mov
pop
imul
aaa
cmp
outsl
gs
and
push
fsubs
gs
and
jmp
add
gs
jl
pop
scas
scas
jecxz
push
lahf
js
jns
in
pop
cmp
jne
inc
cli
sub
jnp
out
das
gs
test
pop
imul
cmpsb
outsb
and
jnp
out
push
xchg
mov
adc
mov
and
push
mov
popf
jno
sbb
inc
ljmp
sub
mov
inc
lret
inc
adc
stc
jns
push
push
fs
mov
aad
icebp
gs
and
mov
jne
and
pop
push
jmp
and
stos
xor
cltd
mov
xchg
add
cmpl
pop
enter
add
popa
in
test
gs
decb
test
adc
movsb
in
cs
lret
push
adc
or
cmp
repz
xor
mov
pop
mov
pop
inc
sub
lea
push
iret
shll
gs
push
nop
jmp
loope
cmc
fisubl
mov
cmpsb
mov
imul
and
adc
and
xchg
iret
adc
adc
gs
sarb
rcr
imul
bound
push
and
xchg
fmuls
cs
aaa
jb
inc
lea
xchg
rcl
lahf
icebp
cmc
fiadds
test
xchg
fsubs
stos
cmp
mov
pop
lds
or
gs
and
push
push
and
in
cmp
xchg
pop
push
gs
pop
dec
pop
fsubr
gs
in
sahf
pop
ds
mov
gs
fsubrp
nop
gs
popf
subb
mov
push
pop
std
pop
inc
gs
dec
xchg
sub
or
pop
push
gs
sbb
and
cmp
repz
and
add
jno
out
gs
fstpt
jle
mov
sti
jne
nop
and
int
sub
lock
outsb
gs
xchg
imul
cmc
movsb
gs
adc
mov
gs
jle
mov
lcall
stos
aam
and
push
dec
jne
mov
xor
add
mov
jne
fst
pop
mov
rorl
gs
lea
pop
jle
xor
xlat
push
xor
gs
mov
andl
enter
inc
ftst
mov
push
push
andb
mov
sbb
cmc
and
adcl
sub
jbe
aaa
dec
jl
sub
mov
popf
sub
mov
inc
repnz
cmp
xor
and
xchg
jae
jae
outsl
gs
sub
lods
gs
pop
mov
aam
aaa
and
pop
je
insl
add
fidivrl
ljmp
gs
inc
mov
in
or
mov
gs
xchg
mov
gs
stos
mov
push
outsb
cmp
sbb
adc
jp
mov
gs
mov
test
int3
negb
lds
xchg
sti
adc
gs
je
adc
stc
add
push
ror
shlb
jecxz
jo
cmp
pop
ret
inc
xorl
mov
outsl
xchg
test
lret
push
ror
push
rolb
xchg
gs
mov
or
xor
es
bound
fildl
sub
mov
jecxz
pusha
pop
fnsave
jmp
sub
adc
call
gs
outsb
or
adc
mov
pop
fs
xchg
inc
outsl
sbb
pop
gs
in
jae
xor
mov
adc
gs
pop
int3
gs
xor
jae
xlat
jno
aas
pop
xor
xchg
lds
ss
adc
stc
test
jne
lods
or
xchg
jno
std
mov
gs
adc
or
xor
cmc
or
sbb
fidivrs
in
push
jnp
mov
mov
dec
das
gs
sub
cltd
dec
imul
and
mul
adc
pop
mov
xor
aaa
out
gs
push
out
xor
in
movsb
inc
inc
out
test
popa
jbe
and
fnstsw
sbb
xor
fwait
jnp
push
sub
inc
dec
aam
and
gs
adc
stos
hlt
jbe
pop
out
add
cmp
jne
dec
inc
pushf
jge
sbbl
fildl
in
mov
push
push
sub
fwait
xchg
jae
mov
inc
in
xchg
pop
push
outsl
jnp
es
gs
jno
test
shll
lds
dec
cmp
fisubs
mov
jbe
pop
gs
loope
ljmp
lret
push
int
xchg
insl
and
xchg
scas
jne
aas
fwait
add
xlat
leave
add
shrb
mov
pop
jo
cs
in
aaa
inc
push
pop
fldcw
insb
gs
rolb
adc
xor
cmp
cmpsl
cmpsb
insb
cmp
adc
orb
daa
or
push
andb
xchg
push
xchg
push
jg
and
rorb
movl
out
jo
adc
push
dec
outsl
loopne
dec
or
ljmp
fcoms
pop
popa
mov
pusha
dec
lahf
push
dec
or
std
gs
mov
sbb
popa
clc
push
pop
test
sub
jbe
mov
adc
mov
inc
lods
add
repnz
inc
gs
push
out
and
lods
sub
nop
in
xchg
push
mov
or
dec
mov
jmp
xchg
fs
xchg
inc
in
pop
sahf
inc
sarl
cwtl
gs
sbb
sbb
jns,pn
dec
stos
test
jecxz
popf
gs
mov
flds
mov
loopne
gs
push
loop
mov
fnsave
cli
fists
pop
push
gs
repz
jg
sub
inc
lret
mov
xchg
movsb
fcmovnbe
pushf
popa
test
mov
stc
gs
xor
mov
dec
sbb
hlt
or
cmpsb
dec
pop
pop
inc
add
les
cli
out
gs
hlt
fldl
dec
mov
sbb
insl
gs
daa
lret
pop
lea
push
sbb
mov
push
mov
fcomps
fsubl
scas
inc
ljmp
shrb
mov
adc
jle
mov
cwtl
imul
sbb
movsb
sub
adc
sti
sbb
xor
mov
stc
add
gs
dec
jp
ds
out
push
lret
mov
outsb
les
dec
sub
mov
and
mov
mov
xchg
es
sahf
cmpl
jns
mov
push
jbe
push
push
mov
lahf
sub
xchg
imul
iret
adc
iret
cmp
in
sbb
push
pop
daa
and
mov
pop
and
addl
mov
in
inc
bound
add
push
ljmp
cmc
cltd
lds
into
addl
addr16
ret
popa
inc
xor
inc
push
push
out
lods
aaa
imul
lods
mov
div
ret
and
lret
aad
mov
pop
loope
inc
idivl
es
xchg
sub
cmp
add
adc
ret
roll
xchg
sub
pop
mov
lahf
or
mov
mov
jns
out
push
popa
sbbl
pop
test
lret
xor
movsb
arpl
repnz
dec
dec
orb
inc
sub
std
das
in
xor
sub
sbb
mov
arpl
jae
add
adcl
and
ja
leave
mov
shlb
lahf
outsl
loope
imul
xchg
sti
xor
lahf
mov
loop
in
mov
clc
adc
inc
xchg
shr
or
cmp
int
mov
mov
out
ja
scas
mov
arpl
adc
addr16
or
adc
inc
addr16
push
repz
leave
sub
inc
mov
sbb
and
ret
iret
xchg
sub
lods
adc
xor
icebp
lods
fsubrl
daa
jb
sbb
mov
sti
repz
push
jl
sbb
and
addr16
inc
cmp
pop
or
jo
rorl
xchg
enter
adc
and
and
mov
fwait
add
jnp
insb
jecxz
cmc
data16
adc
jmp
mov
test
dec
aaa
iret
jmp
xchg
mov
sarl
push
add
jge
ret
leave
lcall
or
lea
cmc
mov
lcall
andl
cmc
addl
inc
movsl
mov
mov
hlt
sub
mov
lahf
sbbl
leave
mov
cltd
inc
or
pop
xchg
and
cmc
adc
mov
in
mov
lahf
test
mov
push
inc
xor
pop
sbbl
cmp
out
test
mov
mov
pop
fisttpll
cmc
and
add
sahf
sub
fisubrs
xor
inc
aas
daa
lahf
or
inc
shlb
add
pop
pop
pop
cmp
xchg
daa
cmpsl
lea
sbb
and
repnz
jb
ret
cmp
fstpl
push
inc
loope
jecxz
pop
inc
xor
push
mov
inc
js
inc
pop
mull
lea
das
inc
mov
mov
sub
push
and
fbstp
mov
add
inc
pop
add
jecxz
mov
pop
or
mov
push
gs
xor
mov
cltd
pop
sub
push
lea
popf
pop
add
rcrl
and
and
sub
aam
movsl
push
popf
aaa
testb
cmpsl
nop
outsl
push
addl
cmpsb
adcb
lods
ret
lahf
xchg
inc
inc
arpl
and
sbb
scas
pusha
test
xor
mov
mov
mov
leave
xchg
and
xor
dec
add
movsl
test
test
test
mov
cmp
test
cmc
and
in
aas
sbb
inc
jp
outsl
add
xor
sub
sbb
mov
push
bound
mov
jnp
sbb
mov
popf
or
sarb
pop
sbb
dec
lock
hlt
xor
sbb
add
mov
inc
jno
dec
aad
lods
sbb
and
sbb
arpl
or
pop
mov
shll
push
and
xchg
std
fldcw
sahf
int3
or
mov
loope
sub
push
jbe
iret
stc
xor
jns
sub
jp
loop
and
adc
and
adcl
pop
pop
mov
movsl
adc
imul
imul
jno
ss
popf
sub
sahf
xorl
and
mov
cli
lret
xchg
push
mov
mov
mov
fisttps
mov
pop
mov
xchg
inc
imul
cld
insl
xchg
push
icebp
sub
sub
lahf
loope
lods
adc
jns
jmp
das
int
add
dec
sahf
hlt
inc
adc
aaa
sbb
cmp
push
xchg
movsb
sub
mov
fisttpll
mov
rolb
push
or
xchg
mov
movsb
push
arpl
arpl
push
sub
popa
or
sub
icebp
negb
jle
subl
sti
mov
lods
mov
imul
jecxz
jae
cwtl
inc
popl
pusha
xchg
je
daa
or
fs
mov
test
inc
and
or
xor
hlt
test
sahf
push
icebp
arpl
sub
mov
into
and
push
arpl
fisttpll
push
jnp
loop
ja
cmp
mov
mov
push
inc
xchg
sbb
arpl
mov
les
inc
cwtl
sub
fstpl
push
dec
xchg
xor
mov
mov
xor
mov
or
dec
or
repnz
xchg
call
pop
lods
xchg
stc
mov
pushf
xchg
adc
outsb
movsb
fsubrl
sub
inc
cltd
pop
ficoml
pop
test
ja
loopne
sub
out
int
sbb
test
in
sub
sti
shlb
lea
and
test
inc
in
addr16
loope
sub
mov
cmp
insl
out
add
mov
add
addr16
xor
fidivrs
fwait
xlat
cmpsb
lahf
jl
inc
stos
es
aaa
add
pop
cmp
mov
mov
loopnew
push
push
pop
xchg
and
jle
mov
in
dec
aam
lea
xor
out
mov
cmp
mov
xlat
insb
es
sahf
lea
sbb
jge
fwait
mov
cltd
sbb
lret
mov
pop
push
inc
outsl
imul
and
adc
push
jp
movsb
push
pushf
fwait
clc
push
inc
and
ja
aam
push
push
int
push
je
add
mov
fstp
mov
and
and
fistpl
mov
les
push
jge
inc
pop
push
clc
pusha
adc
xchg
jg
imul
or
sbb
insl
in
jg
popf
cmp
xchg
iret
xchg
push
aas
lcall
mov
int
jl
fstpt
dec
jmp
lret
rcrl
sbb
fidivrs
stc
cmp
pushl
add
add
repz
sbb
lea
ret
movsb
push
lcall
fnstsw
dec
out
aad
lods
jae
repnz
pusha
add
and
cli
cmc
stc
scas
jle
xchg
mov
sbb
int
lcall
pop
dec
jnp
cltd
mov
ja
rcll
loope
in
test
and
daa
add
push
push
xlat
dec
dec
jge
movsb
mov
test
jnp
loopne
lea
cltd
sub
test
movsl
push
add
add
lods
or
hlt
cltd
adc
sub
push
ljmp
mov
lahf
jne
jne
vmread
ret
aaa
imul
das
subl
jmp
fucomp
in
jmp
cli
fmulp
inc
mov
xor
out
fldt
lods
or
push
adc
dec
and
adc
inc
scas
out
xchg
out
lea
imul
popa
xchg
test
scas
xchg
mov
cmpsl
xor
mov
mov
xchg
imul
imulb
inc
jg
pop
in
mov
pushf
mov
sub
lret
pop
lds
ljmp
dec
inc
stos
xchg
jae
in
lea
repnz
xchg
jle
push
repz
push
les
jne
shll
jle
aas
and
stos
mov
jmp
into
xor
stos
jp
xchg
popf
inc
add
int
imul
mov
push
dec
addr16
sbb
in
shll
loopne
mov
stc
jl
loope
cmp
data16
xchg
xor
sbb
sbb
fiadds
jp
pop
xor
inc
add
test
je
cwtl
sub
mov
scas
xchg
pop
adcl
inc
into
mov
fs
imul
ret
xlat
xor
inc
xchg
add
adc
out
xor
or
mov
hlt
fistps
gs
ss
test
jl
xor
lcallw
mov
pop
adc
xchg
mov
sub
and
xchg
xchg
pop
fstps
adc
fistl
fbld
sub
sbb
cs
xor
imul
subl
mov
sub
sbb
or
inc
and
fwait
mov
mov
mov
test
imul
mov
push
inc
aaa
popf
mov
lods
gs
mov
mov
pop
sub
hlt
je
sbb
jle
movntq
jge
mov
mov
push
adc
mov
sahf
xor
and
scas
push
xor
push
ret
fidivs
clc
mov
pop
inc
jbe
nop
aas
xchg
retw
dec
mov
lahf
xchg
xchg
int
sbb
loop
xchg
test
fwait
in
out
fmuls
idivb
addr16
loope
mov
or
mov
fs
jbe
popf
pusha
mov
add
aas
dec
sbb
pop
hlt
mov
sub
test
subl
mov
cmp
lock
lea
xchg
mov
aaa
loopne
jne
adc
popf
imul
mov
stc
jno
movsl
lahf
jnp
and
jno
inc
xchg
mov
cltd
test
subl
dec
adc
ss
iret
imul
mov
arpl
inc
pop
and
pop
aas
pop
outsl
aam
cmp
jne
dec
push
loopne
filds
lods
fs
stc
xchg
ljmp
in
sub
adc
cmp
add
popf
sub
dec
gs
out
pop
sub
jno
popf
movhps
aad
jns
and
push
stos
gs
test
outsl
lods
les
pop
ret
dec
insl
sti
mov
repnz
jo
sbb
mov
pop
shll
insl
les
adcl
test
call
test
inc
adc
xchg
sbb
inc
hlt
jns
push
imul
or
arpl
push
xor
cltd
mov
daa
sbb
outsb
pop
sub
rcr
cs
mov
testl
jnp
arpl
mov
inc
push
adc
aad
pushf
fldpi
inc
pop
mov
xchg
in
out
stos
ret
add
aam
test
push
sahf
xor
hlt
sub
popa
cmp
cmc
push
in
subb
adc
mov
jmp
shll
subl
jecxz
adc
mov
xor
test
gs
subb
push
pop
loopne
imul
and
pop
movsb
sub
cltd
adc
out
adc
pop
aam
mov
add
xor
ljmp
inc
repnz
pop
gs
cltd
lret
mov
pop
inc
ret
pop
mov
notb
loope
or
mov
sbb
jmp
jl
lods
stos
gs
mov
pop
mov
movl
dec
add
pop
scas
scas
sbb
adc
or
push
scas
and
out
or
mul
adc
pop
inc
imul
pop
sbb
popf
lods
hlt
cmp
sbb
inc
test
add
repnz
orl
adc
movsl
ljmp
inc
into
and
loope
sarl
dec
or
icebp
xlat
cmp
vpcmpgtw
notb
sbb
je
xchg
mov
gs
dec
mov
sbb
popf
adc
gs
push
test
jbe
cli
jge
sbb
in
fisubs
les
push
or
lahf
gs
std
pop
xchg
gs
adc
or
jmp
gs
test
mov
shlb
inc
sbb
and
cmp
jecxz
movsb
xor
pop
inc
jnp
xor
sub
pushf
gs
fdivr
jecxz
ljmp
cmp
push
in
mov
or
cmp
and
stos
mov
adcl
jo
in
dec
divb
add
ret
jp
ljmp
lods
shr
push
push
cltd
fstpt
aas
movsl
sbb
jb
jl
inc
loope
mov
lea
fdivs
les
fucomi
movsb
xor
gs
out
sub
insl
sti
and
sbb
test
aaa
pop
sarl
repz
mov
mov
sub
mov
mov
in
jp
repz
sbb
lods
cmc
mov
in
popf
loope
movsl
das
in
gs
sbb
mov
lcall
xchg
xchg
and
dec
rclb
lret
xlat
mov
out
adc
sbb
mov
xchg
fidivrl
add
stc
enter
adc
xchg
clc
adc
inc
xor
imul
mov
xchg
lret
mov
data16
push
jne
push
and
cld
shufps
loope
inc
or
xchg
and
pop
iret
loope
lret
inc
jne
mul
inc
movsb
popf
jecxz
add
ljmp
lea
xor
mov
inc
ret
adc
mov
inc
gs
test
jae
ret
inc
gs
leave
in
fimuls
sbb
mov
push
mov
outsb
in
cmpsb
test
fisttps
push
in
push
jnp
test
cmp
inc
iret
es
jae
mov
mov
push
int
mov
xor
xchg
dec
jae
in
sub
shlb
stos
cmpsb
gs
dec
push
mov
xor
mov
cs
fs
outsb
gs
mov
imul
mov
pop
sub
scas
rcl
inc
clc
or
push
sub
fstpl
mov
insl
mov
cmpsb
repz
out
cmc
mov
outsb
icebp
js
pushf
push
hlt
stc
ret
int3
cmp
scas
push
cmpsl
xchg
insb
jecxz
xlat
cmp
jne
inc
addr16
sbb
mov
and
pop
mov
pop
and
cltd
iret
xor
sbb
mov
and
inc
shlb
je
test
movsb
hlt
gs
iret
cld
sub
aad
xlat
gs
mov
sbb
stos
cmpl
pop
sbb
cwtl
jecxz
sub
cmpl
popa
xchg
fistpll
pop
ret
dec
fs
daa
adc
push
imul
adc
aam
inc
cmc
lods
xlat
stc
fldcw
mov
or
mov
inc
inc
sub
shl
mov
fs
adc
pop
test
popa
ss
ret
jne
cmp
pop
dec
push
push
stos
int
out
jecxz
sub
add
es
add
jns
test
xchg
mov
into
int3
push
xor
dec
push
fstl
sub
sbb
out
mov
sbb
cltd
mov
mov
xlat
repnz
jae
lds
cmp
cmp
dec
xor
inc
or
pop
js
fucomip
gs
data16
push
hlt
in
cmp
imul
mov
and
xor
data16
mov
loopne
and
mov
data16
gs
notl
sbb
and
push
hlt
inc
loope
ss
loopne
fisttpl
iret
push
test
mov
xor
out
gs
scas
xchg
test
aam
inc
rol
mov
dec
inc
mov
gs
and
test
mov
push
or
and
jnp
inc
test
push
sub
sbb
outsb
mov
fcmovnb
and
add
adc
mov
or
jbe
xchg
lret
sbb
sbbl
fldt
inc
jmp
imul
popa
mov
jg
cmovns
pop
addr16
in
sbb
push
mov
gs
add
out
leave
gs
fwait
mov
test
push
es
scas
pusha
xor
test
sub
gs
pop
outsb
fsubs
aas
add
ljmp
inc
jns
adcb
out
out
gs
stos
insl
jmp
cmp
xchg
fsubrs
mov
xchg
xchg
roll
dec
xchg
mov
ret
insb
or
in
jo
and
outsb
ds
insl
stos
loope
call
rorb
sbb
xchg
gs
jns
jecxz
sub
gs
mov
pushf
out
in
mov
mov
daa
gs
jmp
push
pmaddwd
cmp
scas
xor
and
push
pushf
and
loopne
popf
hlt
fiadds
loop
vmread
dec
jecxz
add
dec
outsl
fs
andb
push
jp
and
jno
shlb
fisubrs
shlb
and
xchg
gs
xor
repnz
stc
inc
cs
sarl
jno
push
ljmp
mov
sbb
test
call
daa
mov
test
cmp
adc
imul
pop
jns
loop
or
out
mov
pop
xor
stos
ficompl
xor
sbb
pop
add
inc
clc
stos
ja
daa
gs
mov
aad
and
mov
xchg
sarb
ljmp
dec
sub
sub
cmc
sahf
fistl
test
flds
idiv
add
dec
pop
popa
filds
mov
mov
repz
movsl
ljmp
lea
push
cmp
int
mov
jne
fimuls
add
in
test
subl
cwtl
push
mov
imul
outsb
push
or
loopne
xor
mov
adc
xlat
jnp
ja
frstor
sub
dec
adc
ret
mov
jne
sbb
xchg
gs
jle
cmc
jne
sbb
inc
out
xor
ret
and
dec
or
cltd
mov
gs
inc
xrelease
gs
pop
mov
pushf
in
sub
pop
shll
ja
pop
inc
mov
in
mov
inc
xor
pop
dec
icebp
xor
dec
gs
ud2
testl
push
push
mov
jne
add
out
movsl
gs
pop
fwait
cmp
lods
loop
stos
jo
lret
pop
gs
scas
and
mov
cmp
outsb
or
jmp
and
in
fldcw
pop
push
out
sbb
mov
stos
scas
arpl
dec
lds
bound
sbb
mov
jge
data16
gs
mov
sbb
mov
adc
fs
pop
adc
jne
add
xor
add
ljmp
cld
push
inc
xor
shrl
push
xor
add
popa
cmpsl
in
pop
push
push
mov
out
cli
mov
sahf
dec
push
imul
inc
scas
js
push
clc
jae
gs
mov
repz
gs
in
incb
or
jp
dec
jno
xor
sar
ds
dec
jne
cmpsb
mov
popf
into
fs
cmp
in
push
ss
mov
cmp
shl
jo
repnz
clc
jle
mov
cmp
int3
push
and
mov
jne
ss
mov
sbb
scas
outsb
aaa
cwtl
dec
jecxz
push
or
into
mov
shrl
jbe
movsl
cli
lock
les
mov
insb
sub
mov
stos
fisttps
sub
mov
or
mov
jae
in
gs
rorl
jb
std
mov
orl
addl
movsl
push
mov
cli
pusha
pop
aaa
mov
jbe
out
push
mov
add
in
lret
xchg
push
ja
test
and
pop
cmc
push
dec
cmpsl
inc
jge
and
cs
add
push
outsl
movb
xchg
jecxz
aad
cld
imul
pop
mulb
add
scas
xchg
pop
daa
lcall
mov
inc
pusha
and
push
lods
sbb
outsl
sub
scas
imul
sbb
cmp
jo
data16
jp
aad
call
int
xchg
lea
imul
adc
mov
ss
mov
xchg
mov
add
mov
mov
sub
jno
xor
cmp
iret
gs
sub
lahf
and
sub
ret
fst
loopne
lret
sbb
push
push
add
cwtl
inc
ljmp
add
mov
push
js
out
pushf
sub
hlt
pop
adc
das
and
xlat
data16
or
inc
mov
xchg
push
lods
mov
jmp
inc
in
scas
pop
loope
mov
add
shlb
insl
repnz
aad
add
pop
popf
push
lcall
gs
sub
adc
pop
dec
or
add
jne
bound
loop
in
sbb
addr16
adc
fwait
push
xor
imul
sbb
dec
pop
gs
mov
lea
lods
jne
jp
push
sbb
and
hlt
add
aam
inc
loop
je
gs
push
adc
mov
scas
stc
lea
outsb
pop
and
je
xchg
inc
in
sti
or
gs
xchg
aaa
cmp
gs
jb
ljmp
loopne
sbb
mulb
in
loope
pop
mov
lds
dec
dec
in
sub
hlt
aam
insb
cli
xor
pop
pop
gs
movsb
call
mov
sub
cld
mov
mov
loop
sbb
gs
iret
imul
mov
xchg
scas
divb
inc
sbb
add
mov
xchg
mov
add
lret
cwtl
inc
mov
nop
mov
mov
pop
xchg
pop
gs
push
inc
or
in
lcall
popa
test
loopne
cwtl
xchg
arpl
cmp
add
out
xor
dec
adc
std
scas
inc
loopne
fisubl
pop
sbb
sbb
cmp
xor
push
cld
pop
and
gs
push
fisubl
dec
mov
jp
gs
scas
mov
lds
sbb
iret
mov
mov
gs
jae
popa
lea
aad
loope
insb
subl
dec
neg
je
jmp
push
frstor
xor
mov
sarb
int
lcall
int3
jo
mov
or
jge
stc
aad
mov
sub
rcrl
movsl
push
lret
test
inc
outsl
test
and
lds
sub
and
jmp
data16
aad
push
test
inc
lret
test
mov
jne
into
movsl
iret
mul
mov
std
gs
or
test
fsub
xchg
lahf
mov
repz
sbb
cld
lcall
cli
or
repnz
mov
mov
pop
aad
rol
in
mov
pop
not
repnz
ret
mov
push
scas
int3
dec
ja
cmp
dec
push
loope
fldt
sahf
jne
sub
cmpsl
and
out
dec
mov
loope
cmpsb
inc
cmp
push
jb
push
jg
in
dec
fs
mov
sbb
cmovns
dec
cmp
dec
and
insl
jmp
out
icebp
mov
nop
fldenv
fmul
scas
jb
gs
mov
xor
outsl
jnp
mov
jae
adc
movsl
loope
and
dec
mov
add
imul
adc
mov
stos
and
and
gs
lcall
adc
mov
pop
and
inc
loop
xchg
dec
call
push
imul
test
sub
pop
bound
cmp
loop
sub
mov
and
xchg
int
push
gs
cli
lea
inc
outsb
in
mov
pusha
push
gs
push
movsl
test
xchg
push
in
aaa
jp
mov
add
fnstcw
gs
xchg
daa
hlt
inc
xor
mov
popf
cmp
cmp
mov
cli
gs
cld
enter
test
int3
jp
push
and
shlb
outsl
gs
sbb
fcmovnb
and
scas
sub
add
popf
loopne
adc
gs
mov
jp
jecxz
mov
jne
xor
cs
inc
cli
or
aas
hlt
cmp
in
add
adc
leave
fdivrl
and
push
add
pop
ret
gs
call
gs
aas
cmp
gs
cs
dec
mov
enter
sti
gs
rorl
es
pop
in
fstpt
imull
lods
test
mov
call
or
inc
lahf
nop
filds
dec
in
inc
ss
adc
mov
daa
sbb
or
inc
aad
mov
ss
jmp
cs
push
lret
hlt
mov
add
std
lods
xchg
leave
mov
dec
lods
xchg
add
or
sub
loope
push
lds
addr16
imul
cmp
mov
mov
mov
aad
adc
and
hlt
sahf
pop
iret
sbb
imul
out
push
aam
dec
or
wrmsr
xchg
mov
ja
jle
sti
mov
shlb
les
pop
adc
popf
push
mov
cwtl
mov
je
mov
inc
and
mov
and
hlt
sub
orl
mov
adc
in
cli
xor
stos
mov
sbb
test
xor
sub
int
pop
push
jo
jp
pop
mov
sbb
leave
cmc
push
inc
divb
inc
dec
push
xor
nop
mov
pop
push
clc
push
jge
cmpl
adc
jbe
imul
addr16
cmp
sbb
outsb
push
loop
push
pop
mov
cld
imul
loopne
pop
pusha
leave
add
push
pop
test
pop
lea
leave
lods
push
xchg
jle
outsb
cltd
imul
inc
inc
imul
scas
sti
shlb
inc
mov
lods
pop
push
cli
fnstcw
pop
cmp
jae
in
push
js,pn
add
sbb
and
adcl
adcl
aam
push
bound
adc
cmc
sub
pushf
jns
je
push
push
mov
nop
aaa
ret
jle
mov
movl
pop
sub
leave
xchg
aad
pop
out
mov
clc
cwtl
lret
insb
pop
pop
repnz
mov
cmp
push
call
pop
push
lea
sarb
adc
in
inc
mov
in
sub
xor
pop
cltd
pusha
jnp
js
aaa
and
xlat
push
mov
jmp
ret
inc
fcomps
jns,pt
sbb
add
inc
xor
sub
add
insb
and
fwait
sarl
or
mov
inc
in
dec
mov
out
dec
div
cmp
push
data16
and
jmp
xchg
push
mov
mov
cmpsb
pop
mov
jl
pop
test
dec
aas
in
adc
xlat
into
xor
stos
jae
pop
arpl
sub
mov
jb
mov
shl
push
cmc
lahf
mov
aam
pusha
jbe
cwtl
pop
orb
sub
fsubl
inc
ljmp
jg
fwait
sti
push
inc
pop
or
sbb
jge
xchg
add
popf
scas
sbbl
mov
lret
pop
nop
push
jmp
xchg
pusha
cmp
push
mov
sub
loope
xchg
fiadds
inc
addl
fld
jecxz
xchg
cltd
fs
dec
and
in
mov
cli
std
mov
or
pop
pushf
cwtl
scas
push
aam
sub
cmp
mov
stos
lods
sub
mov
push
leave
and
pop
and
test
mov
lea
add
mov
nop
add
lock
iret
mov
push
jb
and
cmp
xchg
lds
jecxz
aad
push
loopne
fwait
dec
or
lret
lahf
divl
mov
lea
and
sub
pop
movsb
movsl
and
lea
fnstsw
or
es
cmc
scas
call
loope
push
xor
jb
in
punpckldq
in
test
dec
jne
addl
push
jbe
fs
xchg
sub
fdivp
jge
movsb
mov
call
cmpsb
pop
adc
stos
bound
pop
jge
insl
cltd
loop
xchg
sbb
xor
jle
push
sbb
inc
push
test
push
ret
fwait
iret
adc
xchg
fmulp
movsb
add
inc
imul
lds
hlt
mov
bound
mov
test
stc
sbb
pop
ljmp
xor
and
mov
xor
or
jl
pop
icebp
push
test
jmp
ret
sbb
insl
pop
sbb
dec
xor
inc
in
jae
cmpw
mov
arpl
inc
rorb
mov
jg
es
cmpl
and
sbb
and
inc
add
jne
push
neg
mov
hlt
repz
lret
into
cltd
jmp
sbb
xor
add
stos
daa
cld
inc
push
out
mov
cmp
inc
mov
fldt
mov
lods
das
push
stos
lods
scas
loopne
pop
rol
negb
mov
cwtl
out
ja
xchg
imul
js
in
out
movsb
adc
loope
mov
out
fwait
or
jle
in
and
fistps
aad
dec
gs
or
sub
mov
pushf
mov
adc
jno
pusha
mov
jmp
test
into
inc
jle
pop
sbb
cmc
mov
adc
cld
mov
adc
imul
dec
jge
stos
mov
gs
lret
add
dec
js
hlt
inc
int
push
mov
inc
mov
and
fildll
mov
test
das
fs
imul
gs
jo
shlb
pusha
lahf
gs
test
dec
jecxz
dec
in
xorl
cmp
dec
dec
mov
mov
xchg
hlt
inc
roll
hlt
add
movsl
xor
lret
dec
popf
mov
jecxz
int
gs
inc
xchg
pop
lahf
adc
add
dec
jo
sysenter
and
add
fld
bound
xor
sbb
mov
fldl
test
xchg
in
pop
xchg
mov
test
lahf
loope
xchg
xor
xchg
scas
lods
mov
jne
jae
sbb
mov
jne
adc
sahf
cmp
and
movsl
pushf
mov
sub
fldenv
std
and
fildl
dec
and
arpl
and
adc
mov
fwait
pop
adc
cwtl
lea
mov
movsl
gs
hlt
insb
orl
hlt
or
xchg
xchg
cmpsl
or
inc
enter
addl
jo
xchg
inc
jmp
daa
and
dec
pop
mov
test
adc
push
push
mov
cmp
mov
pop
in
popf
mov
mov
or
scas
test
js
hlt
gs
inc
adc
mov
sbb
dec
arpl
jno
fldenv
sub
lahf
gs
add
popf
into
xor
aas
pop
loope
test
xlat
jne
inc
popa
and
adc
fcmovbe
lahf
xchg
cmp
jne
mov
xor
mov
xchg
pop
scas
adc
add
js
lds
pop
mov
insl
es
xlat
dec
xor
movsb
mov
imul
add
jg
adc
pushf
xchg
mov
outsb
stos
test
jge
test
sub
aaa
outsb
inc
mov
cmp
data16
je
ja
es
xchg
lea
loopne
rcrl
dec
ret
hlt
pop
test
adc
dec
jb
lods
ss
pop
xchg
pop
xor
outsb
jne
lea
test
lds
xchg
push
lret
jo
xchg
adc
gs
cmpl
filds
push
pop
icebp
cmpsl
in
and
jo
sti
leave
fcomps
jne
js
sub
les
xchg
outsb
gs
imul
loope
ds
xlat
test
vaddsd
or
pop
mov
xor
mov
out
xchg
jmp
icebp
cmp
pop
lds
sub
loop
mov
mov
or
lods
jmp
loopne
mov
xlat
stos
sahf
xor
sbb
cmp
mov
fldcw
jmp
loopne
test
cmpsl
jbe
dec
gs
mov
xchg
mov
jb
push
xor
movsb
cmp
and
in
inc
je
repz
daa
ljmp
iret
subl
in
sbb
outsb
push
mov
shlb
or
adc
add
outsl
movsl
adc
push
adc
in
fisttpl
aad
ss
sbb
mov
xchg
adcl
gs
popl
push
add
mov
fucomp
sbb
jne
loopne
fadds
mov
shufps
push
imul
mov
int3
and
enter
and
push
aam
xlat
adc
mov
cmp
nop
xchg
and
mov
es
insl
mov
aas
push
loope
cmpsl
pop
gs
jns
or
fs
mov
jmp
mov
xchg
gs
or
mov
and
mov
push
and
test
gs
imulb
mov
sub
dec
adc
sti
incl
pop
jne,pn
clc
mov
movsl
into
xlat
and
gs
xchg
cld
gs
push
push
dec
mov
xor
insb
and
jmp
pop
and
mov
lret
fisubl
ja
jmp
pushf
mov
mov
shrb
or
jecxz
push
fwait
out
jg
gs
xchg
in
iret
mov
xor
adc
fdivs
jbe
and
xchg
xchg
push
fs
mov
insb
jmp
repnz
enter
cld
imul
rcrl
dec
push
mov
jp
hlt
and
mov
stc
inc
lods
scas
xchg
lret
xor
gs
and
outsl
or
sahf
mov
or
xorl
test
inc
pop
test
mov
push
sbb
fmuls
mov
scas
test
into
jmp
stos
subb
push
or
jg
mov
jo
dec
mov
je
js
mov
stos
mov
addr16
mov
push
dec
gs
mov
shlb
adc
xchg
lret
and
addr16
in
rol
dec
negb
in
lea
jnp
enter
cmpsl
mov
add
gs
out
hlt
gs
aam
add
es
gs
xchg
inc
mov
adc
xor
dec
cmp
or
arpl
mov
movsb
call
test
lret
rolb
sub
rol
sbb
nop
xor
lret
xchg
popf
std
sub
scas
xchg
ds
and
pop
mov
adc
into
mov
pop
ja
jmp
xor
enter
dec
imul
loope
and
ds
loope
popf
ret
jmp
cltd
dec
or
xor
fcoms
test
cmpsb
sbb
rolb
and
notb
gs
loope
and
je
and
fmul
xor
push
jbe
mov
inc
lods
xor
gs
push
and
scas
pop
pusha
stos
gs
call
pop
gs
fmul
push
rclb
jg
gs
mov
adc
cwtl
fs
test
dec
mov
push
add
cmp
arpl
mov
test
rclb
add
out
mov
inc
push
lods
xchg
dec
cwtl
add
xchg
int
and
push
mov
imul
xchg
xchg
mov
push
mov
jns
and
dec
icebp
add
movsb
fwait
fs
mov
fdivrl
arpl
xchg
mov
and
adc
pushf
shll
int3
inc
mov
push
mov
test
gs
inc
xlat
icebp
les
mov
pushf
or
aam
cwtl
xor
daa
insl
xchg
add
loopne
lea
sbb
gs
jmp
sub
leave
xor
gs
mov
mov
jge
mov
add
je
sub
xchg
or
jb
lock
into
sub
jnp
scas
sbb
xchg
gs
mov
push
loope
rcll
movsl
push
mov
adc
adc
xor
gs
dec
push
lea
cwtl
es
gs
test
cltd
gs
les
and
add
popa
mov
dec
lcall
lret
add
and
mov
and
popa
nop
pop
data16
cmpsb
popf
aam
mov
gs
shlb
popf
push
mov
mov
mov
pop
jmp
repz
les
fisubs
dec
push
gs
fistps
dec
push
and
int3
mov
xchg
test
xchg
push
test
adc
loope
xor
sbb
fbld
loopne
gs
jns
iret
pop
sub
add
pop
loope
xchg
pop
mov
push
and
xor
inc
ret
filds
mov
fnstsw
xchg
push
ja
mov
inc
and
cwtl
test
data16
repz
sbb
nop
aaa
pop
cmp
inc
imul
lcall
mov
gs
inc
andl
xorb
mov
dec
push
imul
imul
adc
ljmp
sbbl
jne
push
leave
add
es
inc
je
cltd
cmp
aad
cltd
test
inc
xor
loop
or
sbb
adc
gs
cmp
les
jmp
xor
cmpsb
and
test
mov
mov
int
rcrl
pushf
scas
repz
insl
mov
inc
add
xchg
mov
adc
repz
sbb
fistps
gs
lcall
gs
lods
rcrb
scas
test
inc
and
mov
dec
pushf
mov
xor
pop
icebp
imul
xor
mov
push
or
sti
pushf
outsl
and
jo
sarb
movsb
ret
pusha
mov
mov
push
xchg
dec
jg
adc
xor
pop
sub
in
lcall
daa
xchg
movsl
push
lret
mov
and
cmp
push
mov
sbb
lock
mov
pop
cltd
lods
jg
mov
es
jmp
push
test
pop
ret
insl
xchg
sub
and
push
outsl
add
negb
test
popf
mov
fadds
and
jo
inc
int3
gs
push
rcrl
sub
fisttps
xchg
imul
gs
lods
push
or
xor
and
sbb
outsl
adc
lods
xor
dec
gs
mov
or
and
imul
lea
outsl
sbb
int3
dec
mov
ret
fildll
clc
popf
xchg
mov
shll
subl
stos
mov
sbb
push
es
gs
pop
das
xlat
mov
out
mov
mov
pop
pusha
roll
gs
pop
int3
inc
lds
xchg
mov
sub
gs
in
add
fisubrs
gs
jne
inc
add
and
jmp
jnp
loop
sub
xchg
sahf
pop
popf
shrb
test
outsl
mov
insl
into
cwtl
sarl
gs
andb
cmpsb
adc
andl
adc
jl
fistl
hlt
fnsave
xchg
gs
jmp
jne
in
xchg
mov
insb
gs
mov
xchg
lcall
cmpsb
test
fwait
loope
into
cltd
lret
ds
scas
ret
push
cwtl
push
pop
rcrl
jae
pop
sahf
aad
adc
sahf
xchg
enter
pop
fcmovnb
in
mov
dec
pop
or
jecxz
sbb
cwtl
clc
popf
inc
pop
int
insl
and
pushf
ret
lret
pop
hlt
pop
out
jae
fcomps
ret
pop
xlat
pop
mov
xor
les
and
push
xor
add
cmp
cmp
lea
popf
and
or
or
sahf
ficoml
in
inc
cwtl
push
lahf
aad
xor
xchg
jae
fsub
mov
pop
mov
add
or
ret
adcl
stos
adc
ljmp
popf
mov
ljmp
push
pop
in
push
loopne
pushf
shl
pop
sbb
sbb
pusha
cltd
pop
rolb
fs
adc
adc
adc
xchg
jne
insb
xor
gs
bound
push
xchg
in
and
aad
mov
xor
sub
push
pop
lret
ret
jl
mov
int
or
push
or
jnp
sahf
and
cmp
jle
sbb
xchg
ja
push
push
andl
or
and
ret
insb
fists
lcall
mov
and
sbb
insb
sbb
xchg
pop
push
aam
push
add
inc
jge
push
dec
sub
popf
inc
xchg
lcall
xchg
or
insb
push
test
sarb
roll
insb
mov
cltd
and
mov
movsb
xlat
push
jecxz
mov
mov
pop
xchg
and
push
pop
push
push
cmc
and
push
sbb
inc
jge
xchg
shrb
jmp
mov
push
jae
xchg
jl
sahf
pop
cltd
fdivrl
andl
ret
fldt
xchg
xchg
sbbl
adc
adc
inc
and
xlat
inc
xchg
insl
push
ret
jae
xchg
sahf
push
inc
ja,pt
mov
rorb
cwtl
pop
xlat
sbb
xchg
cmp
movsb
or
mov
adc
push
sbb
jbe
pop
pop
xlat
and
mov
fiaddl
outsl
fdivrs
cmpsb
jae
xchg
fs
push
jnp
mov
cmpl
adc
les
hlt
shlb
jp
loope
push
xchg
lds
orb
arpl
mov
xchg
dec
and
loop
popf
shlb
add
test
push
aaa
pop
sub
out
or
inc
repnz
ljmp
or
adc
fwait
loope
pop
pop
in
sbb
pop
addb
imul
ja
xor
in
inc
aad
xor
insl
jns
sahf
cltd
sahf
push
pop
xchg
test
fmuls
xor
in
or
fisubs
jno
sub
insb
shrl
cwtl
cltd
xlat
xchg
aam
push
sar
pushf
push
loopne
jne
cmp
pop
jbe
popf
mov
vpmacsdd
icebp
loopne
xchg
mov
push
cwtl
or
and
sbb
push
push
xor
test
nop
insb
cltd
nop
loopne
imul
nop
pop
push
or
xlat
inc
insb
jo
sbb
cltd
cmp
adc
imulb
sbb
inc
pop
push
ret
xchg
rol
lret
jl
jge
pop
or
dec
iret
push
and
jns
in
jge
scas
cld
lret
shrb
mov
add
pop
repz
loopne
lret
xorb
in
dec
fsubs
mov
shrl
pop
dec
jae
pop
icebp
and
add
mov
fs
xlat
loop
xor
lods
out
gs
push
neg
rol
test
stc
push
rcr
push
clc
push
xor
cmp
mov
adc
btr
mov
sets
rcl
mov
shr
sub
call
xlat
add
xor
xor
mov
cs
sub
xor
dec
mov
mov
pop
stos
mov
jno
and
imul
imul
pop
mov
xchg
ror
mov
dec
sub
nop
add
lret
mov
rcrb
lret
cwtl
lea
pushf
movl
call
pusha
pusha
pushl
popl
clc
cmp
push
push
push
lea
ja
pusha
adc
mov
adc
sub
or
add
add
shrd
btc
call
mov
dec
call
call
adc
lea
push
jmp
pusha
movl
movb
movl
pushf
pusha
lea
jmp
hlt
enter
cmp
loopne
loope
lret
sbb
push
pop
icebp
jne
fisubrs
jns
dec
sub
ret
popl
movsb
mov
hlt
mov
sbb
push
ret
adc
mov
mov
xor
lock
fstpt
sub
fs
push
adcl
lret
loop
push
out
decb
int
or
sub
cli
dec
mov
fistl
sub
icebp
fucom
enter
lcall
add
xor
scas
nopl
xor
outsb
dec
adc
mov
mov
ja
out
sbb
aaa
ljmp
sbb
test
push
inc
push
cmpsb
outsb
adc
mov
test
pop
adc
je
and
out
sbb
sti
dec
icebp
inc
std
cli
bound
push
mov
jl
lods
lock
adc
xchg
and
cmpsl
sar
daa
or
cmc
out
push
add
jle
jl
xchg
icebp
cmp
sbb
repnz
out
ljmp
iret
xor
inc
inc
pop
jne
mov
f2xm1
fnstcw
cmc
rolb
and
imul
insb
pop
inc
lods
lcall
xlat
je
aaa
add
fadds
lods
sub
sahf
jbe
mov
add
sahf
ljmp
pop
out
mov
daa
ss
fcmovbe
loope
test
dec
lret
xor
es
cmpsb
dec
in
dec
push
cmp
pop
xchg
sub
pop
into
jbe
das
or
repz
sub
and
mov
xor
lret
xchg
test
jno
fsubr
add
xchg
sub
and
jge
jp
popf
dec
repz
push
push
mov
jl
cmp
in
and
test
and
jne
call
cmp
ja
insl
push
jge
lods
jg
cltd
mov
sbbb
cmp
inc
iret
addr16
pop
sub
js
jae
mov
push
jl
out
cmp
jo
dec
push
mov
lret
cwtl
fstpt
mov
adc
rcrb
pushf
rcr
aam
aaa
inc
push
sar
clc
pushf
lea
cmp
call
test
mov
not
test
mov
mov
pushf
cmp
call
mov
xchg
jge
andl
and
add
lods
pop
and
add
insb
mov
out
mov
inc
xor
dec
ror
mov
mov
inc
jne
in
loop
loop
pop
out
jg,pt
add
push
out
push
add
cwtl
sbb
add
rcrb
mov
in
in
adc
cltd
and
cmpsb
inc
dec
xor
push
lret
lret
fisttpll
mov
lret
ljmp
pop
pop
cmpsl
cli
inc
fcmovnb
addl
rcrl
lods
outsb
fs
or
xor
int3
bound
movsl
je
or
idivl
dec
mov
repz
popf
cmp
gs
cmpsl
xchg
xchg
jno
push
jmp
ja
and
stc
sub
and
cmpsb
push
dec
popf
in
adc
rclb
nop
dec
cmp
movsl
xchg
iret
addl
call
adc
mov
push
xchg
pop
in
adc
dec
cmp
xor
dec
clc
sbb
jno
jecxz
xchg
mov
int3
icebp
mov
pop
je
sarb
or
mov
bound
sbbb
push
push
dec
les
mov
inc
stos
mov
mov
mul
rcrb
dec
stc
add
cmc
pushf
movzwl
xor
call
lods
lock
popa
scas
add
stos
jae
jne
xchg
xor
repnz
sub
adc
xchg
jnp
lcall
push
jo
jb
or
mov
repz
insl
xchg
inc
outsl
push
clc
aam
xchg
xchg
insb
add
mov
test
mov
adc
push
ljmp
or
std
mov
fstpl
mov
iret
pop
adc
hlt
inc
movsl
jmp
in
dec
cmp
int
dec
aad
ret
inc
and
in
fimuls
stc
in
hlt
repnz
pop
cmp
jne
xchg
in
and
pusha
mov
pop
add
xchg
out
popa
andb
rcrl
loopne
pop
aas
push
jg
mov
cmp
cld
call
nop
pop
dec
clc
xchg
and
es
mov
and
push
cltd
adc
mov
mov
xchg
jnp
push
sbb
dec
popf
out
outsl
jne
and
push
arpl
lret
je
out
lret
dec
decl
test
or
rol
rcl
sub
shld
mov
jmp
cmp
pusha
lea
ja
jmp
jbe
add
mov
aas
scas
inc
pop
mov
add
out
inc
xor
jp
jae
mulb
scas
sbb
insl
inc
push
stc
in
sub
cmp
or
nop
cmp
imul
and
lods
bound
scas
jge
rclb
clc
call
lea
call
cmc
cmp
jmp
push
pushl
lea
jne
push
jmp
jmp
jl
cltd
daa
or
adc
sub
sbb
das
pop
jle
lea
mov
into
mov
dec
push
jne
mov
add
inc
mov
pop
xor
adc
add
lds
xchg
sub
add
dec
or
push
test
rclb
sub
lods
aad
ret
stos
mov
jns
scas
jecxz
mov
fstpl
les
cmp
les
push
addr16
les
movsb
mov
ret
out
lods
icebp
adc
fucomip
mull
out
lret
sbb
pop
fsub
rclb
xchg
les
jae
mov
in
cmpsl
sub
add
sub
push
outsl
jle
daa
adc
lods
aad
mov
aas
pop
jge
mov
sbb
das
dec
into
and
xor
rcrl
mov
imul
inc
cmp
jmp
jl
add
lock
ds
pushf
xor
in
sbb
lock
jp
orl
or
stc
mov
mov
cmc
sub
mov
mov
push
or
mov
cmp
sbb
in
addr16
add
rclb
addl
jmp
mov
jmp
adc
imul
mov
lock
sub
xchg
cbtw
push
add
iret
mov
loopne
mov
das
movsl
sbb
pop
test
iret
in
lods
jne
add
cwtl
nop
and
or
inc
dec
jne
adc
loop
push
and
shll
mov
outsl
sbb
test
lret
scas
push
pusha
imul
inc
dec
lods
daa
add
jae
xchg
jae
mov
cs
cmp
inc
jg
xlat
mov
cmpsb
jmp
outsl
cltd
jle
mov
jl
xor
mov
test
xor
adc
loopne
adc
push
mov
adc
mov
outsl
push
dec
mov
mov
xlat
inc
xchg
fistpl
cmp
mov
rclb
pop
mov
pop
mov
call
in
in
pop
call
mov
mov
mov
push
ja
fisubrl
sarb
cs
xor
mov
loopne
jo
loop
mov
cmpsb
or
or
push
xlat
fmulp
loop
push
popa
add
pushf
neg
jmp
loop
fldcw
in
pop
cld
xchg
in
int3
mov
mov
pop
mov
mov
jbe
popf
sti
cwtl
cmp
or
dec
mov
in
outsl
mov
jecxz
adc
xor
xlat
loop
test
add
daa
movsb
hlt
jae
jns
aam
xchg
iret
push
xchg
and
fidivrl
jae
jle
int
mov
fisubl
loop
ljmp
push
pop
sti
dec
add
aad
popf
xor
mov
or
scas
nop
pop
mov
or
cld
cwtl
sub
mov
push
bswap
mov
cmp
lods
stc
stc
mov
idivl
adc
jb
imul
mov
xor
dec
or
inc
pop
shr
nop
add
jb
push
sbb
inc
push
adc
cmp
subl
add
mov
mov
or
mov
and
lea
mov
popa
scas
mov
or
inc
xor
inc
js
outsl
mov
mov
xor
mov
lock
pop
xchg
test
add
movsl
dec
mov
inc
mov
mov
jp
test
cs
mov
andl
pop
loop
push
aam
xchg
pop
or
popf
pop
pushf
and
push
cmpsb
mov
cmp
mov
flds
cli
push
mov
sbb
dec
iret
xlat
jbe
je
cmc
pop
mov
pop
movsl
aam
jne
es
js
or
pop
cltd
imul
cwtl
cmpsl
dec
cmp
xchg
or
push
jb
loop
push
rcll
test
shr
mov
inc
aam
add
out
mov
pop
pop
scas
test
lahf
inc
jl
add
mov
jb
clc
push
push
inc
std
inc
sti
aas
stc
xchg
jnp
mov
int3
add
mov
sub
adc
es
gs
push
adc
stos
test
xchg
add
scas
cwtl
les
adc
rclb
loopne
pushf
clc
add
pushf
mov
mov
lea
jmp
mov
sub
popf
sub
hlt
inc
jp
rcl
xchg
adcb
fsts
sub
xchg
lcall
mov
into
adc
or
mov
repz
shrb
out
dec
ficomps
inc
negb
andl
sub
push
shl
push
mov
and
push
add
clc
sbb
cli
adc
mov
sbb
test
dec
pop
or
incl
loop
push
repnz
orl
inc
adc
add
je
add
shlb
cmc
rol
call
jmp
test
inc
popf
pop
cld
jmp
and
fdivr
mov
orb
dec
movsl
pushf
jmp
add
xor
pcmpgtw
sub
add
es
test
in
sub
dec
mov
push
xlat
lret
mov
mov
ja
xchg
test
inc
sub
or
add
ljmp
dec
scas
imul
mov
in
jb
sbb
movsb
pusha
adc
mov
xor
xchg
inc
pop
aad
insb
push
mov
dec
popf
scas
jne
es
mov
bound
loopne
or
fnclex
rclb
push
lea
ret
lea
je
clc
test
pushf
sub
cmc
cmp
call
clc
sub
adc
out
xor
cs
insb
testl
loop
jg
int
cli
sahf
aad
sbb
add
js
fs
sbbb
adc
pushf
lret
jge
ficoms
xor
jae
add
mov
xchg
inc
pop
push
push
dec
fwait
scas
out
adc
ljmp
fadds
cs
dec
fdivr
and
negb
sti
pop
dec
loop
xor
pop
mov
mov
push
mov
push
push
mov
xchg
iret
stc
jmp
movw
mov
inc
call
pushl
call
lea
je
call
shld
add
test
mov
cmc
cmc
and
test
add
pushf
push
pusha
lea
jmp
lea
ja
bt
test
add
pusha
or
mov
movw
lea
je
bt
cmp
push
movb
jmp
pusha
lea
jne
jmp
cmc
sub
call
call
not
rol
shl
neg
mov
inc
mov
mov
push
stos
push
setl
not
pusha
mov
lea
push
pushf
lea
call
pusha
push
lea
jae
push
bt
stc
sub
pushf
pushf
call
sub
adc
sub
fneni(8087
cmp
dec
int
lret
bnd
adc
imul
jecxz
cli
fsubl
mov
inc
xchg
movsb
movaps
insb
dec
int3
addr16
imul
sub
mov
loop
mov
pop
dec
fmulp
pop
out
push
out
aad
int3
lret
stc
addl
mov
lahf
jo
mov
mov
fcompl
loop
dec
rorl
mov
ljmp
push
sbb
out
jp
sub
dec
lds
aas
push
mov
scas
jne
mov
insb
jo
fisubrs
les
pop
and
rcrb
mov
pusha
pusha
pushl
jmp
movl
push
push
pushl
pushf
lea
jmp
cld
loope
jns
xorl
jb
xchg
nop
shlb
mov
jle
xchg
inc
dec
xor
scas
ds
xor
or
pmaxub
pop
movl
int
sbb
jo
sahf
cs
nop
clc
jae
jge
pop
test
flds
or
insb
xchg
lret
mov
cmp
cli
mov
repnz
mov
loop
dec
fiadds
add
adc
jmp
shrb
outsl
sbb
and
cwtl
ds
sti
sarb
bound
fsubrl
aaa
gs
mov
daa
inc
repnz
or
and
stos
test
ljmp
pop
into
mov
rorb
enter
inc
and
pop
push
out
divl
lret
push
and
mov
add
das
jo
inc
rcrl
rolb
xchg
mov
ja
xchg
loop
shrl
and
pop
adc
mov
cmc
cltd
xor
mov
mulb
or
test
push
ljmp
rclb
stos
mov
int3
inc
ja
test
cli
xchg
jbe
test
mov
push
loop
sahf
pop
mov
jne
jo
or
xchg
mov
sub
sub
pop
jl
mov
outsb
pop
rol
sub
btc
sub
add
ror
shl
mov
not
sar
or
cmp
mov
push
repnz
mov
movw
lea
jne
bswap
lea
movb
bswap
not
jmp
mov
jmp
cmp
neg
mov
lea
je
pushf
inc
pusha
cmc
pusha
pushl
shr
movb
lea
je
jnp
push
mov
pushf
adc
pushl
pushf
lea
jmp
shrd
adc
clc
mov
cmc
push
stc
push
cmpb
pushf
pushf
pusha
call
add
dec
gs
popa
addr16
outsl
js
add
sub
or
jmp
movsl
or
pop
mov
adc
mov
jns
stc
push
sahf
idivb
mov
adc
push
fsubl
fidivs
mov
add
sbb
mov
ret
test
addr16
daa
imul
outsb
movb
scas
jne
jns
in
or
mov
fwait
mov
cs
enter
dec
jns
sahf
lea
ja
call
lea
jne
mov
pusha
movb
call
jbe
sub
push
cmpsb
imul
repz
int
push
push
fnstenv
sahf
jae
mov
adc
cmp
and
inc
bound
dec
mov
jle
dec
adc
mov
xchg
cld
cs
xchg
out
cmp
fsubrl
out
pop
or
jmp
mov
push
mov
lods
lcall
addr16
lea
add
repz
cmp
test
mov
sbb
test
or
cltd
and
xchg
jle
inc
cmp
imul
aam
pop
call
mov
fisubs
shll
mov
or
dec
cmp
rorl
test
fwait
dec
lret
push
pop
cmp
hlt
push
adc
xor
addl
popa
fidivrl
push
call
or
and
ret
aad
in
lahf
repnz
arpl
xlat
repnz
inc
xor
inc
inc
mov
aas
je
ljmp
outsb
out
movb
pusha
xor
cmc
cmc
cmp
repnz
call
adc
sahf
push
push
xor
inc
sub
pop
adc
pop
lcall
add
xchg
xchg
adc
pop
lret
lret
sbb
mov
leave
push
js
or
movsl
lret
out
cmp
movsb
test
int3
jnp
jae
dec
aaa
out
stos
mov
movsl
lds
in
fsubr
js
iret
sbb
imul
sub
pop
jns
mov
lret
loop
sub
rorl
adc
fwait
jg
xchg
loope
cmpsl
cmp
xor
mov
mov
nop
lea
cmp
pop
dec
mov
loop,pn
dec
int3
cwtl
mov
inc
lods
loopne
adc
out
inc
sub
jns
leave
nop
jp
add
cs
xchg
daa
xor
pushf
mov
fnstsw
xchg
daa
adc
push
fsubl
mov
add
add
inc
adc
fmul
andl
dec
add
flds
adc
pushf
loopw
dec
xchg
rorl
jo
mov
or
pushf
movl
mov
call
call
jmp
mov
lea
push
pushf
lea
call
pusha
adc
call
call
pop
pop
and
dec
cmpsl
sub
ja
hlt
push
xchg
stos
sbb
sub
xchg
fwait
push
outsb
outsl
mov
push
pop
mov
test
jle
shlb
adc
in
sub
outsb
jns
aas
movsb
mov
pop
pushl
lret
mov
es
cmp
fisttpll
dec
sbb
jae
push
pop
je
rorl
sbb
pop
jmp
dec
sbb
cmp
je
fcoml
xor
fsubrp
rcr
sub
test
imul
xchg
cmpsl
xchg
sbb
fiadds
push
mov
das
mov
sbb
test
add
sbb
and
iret
or
pop
cmpsb
fstl
enter
or
stos
hlt
enter
lret
sbb
cmp
in
push
in
cli
mov
dec
lods
xor
lea
into
mov
and
sub
jnp
push
in
push
add
test
andb
jmp
pcmpgtw
ret
ficompl
pusha
sub
repnz
inc
into
psrlq
movsb
jo
mov
repnz
mov
repnz
sub
push
and
imul
xchg
pop
aad
popf
out
pop
test
int3
and
push
call
jns
icebp
mov
cmp
mov
repz
lock
mov
and
or
mov
lcall
ret
stc
scas
cmp
mov
sti
and
inc
clc
andl
shr
mov
daa
push
adc
and
movb
pushl
lea
call
pushf
lea
jne
mov
mov
push
pusha
pushf
mov
lea
jmp
call
mov
call
mov
dec
stos
cmp
dec
out
aad
mov
pop
popa
jnp
es
jle
int3
loope
jnp
mov
mov
data16
push
pop
pop
add
dec
les
fsub
leave
iret
out
lds
and
out
insl
mov
jmp
cmp
decl
cmp
jbe
push
out
push
daa
or
gs
mov
test
imul
aas
mov
adc
xchg
lret
mov
jp
es
cli
popf
fimull
sub
mov
inc
push
ret
loop
inc
insl
imul
movsb
ds
call
lock
pop
jl
add
lret
ds
mul
std
mov
rorb
les
xchg
subb
cmp
movsl
arpl
daa
cmp
in
push
xor
outsb
mov
not
push
inc
mov
ja
adc
rolb
inc
movb
push
test
test
pushf
lea
je
shrd
mov
clc
add
btr
mov
pushf
pushl
cmc
test
pushf
movb
movb
movl
lea
je
and
add
bt
bsr
cmp
bsf
mov
cmp
push
add
call
in
rorl
repz
loop
push
jmp
jge
lock
add
mov
and
dec
shlb
mov
or
arpl
or
ja
movsl
and
cmp
rcrl
rorl
aad
xchg
cmp
pop
mov
rolb
add
rolb
adc
repnz
outsl
and
mov
test
mov
test
xchg
ljmp
out
adc
inc
ret
repz
ret
mov
mov
fcompl
dec
jo
roll
push
sbb
push
adc
jg
fbstp
pop
lret
pushf
mov
xor
faddp
shlb
ljmp
and
mov
jge
sbb
cli
imul
mov
bound
jns
arpl
cltd
inc
hlt
push
xor
stc
or
inc
mov
jne
xchg
xchg
xor
cmp
xlat
es
ja
test
pusha
repz
stos
lcall
jp
adc
adc
cwtl
rorl
and
ja
jmp
add
push
mov
test
call
lea
jne
movzbl
sets
cwtl
lahf
movb
movsbw
jmp
mov
call
adc
or
or
mov
pusha
test
jmp
jmp
stos
pushf
push
pusha
lea
jmp
pusha
movb
movb
sub
sub
push
movw
or
jmp
bt
cmp
sub
pushf
rep
movw
pusha
call
rol
stos
lret
jae
adc
lock
sbb
mov
je
jno
push
jp
fidivrs
mov
mov
mov
pop
mov
cltd
nop
rcr
and
mov
fstpl
in
loop
xor
loopne
mov
or
xchg
out
mov
jne
mov
rolb
rolb
rolb
adc
sarl
insb
or
and
pop
arpl
pop
jp
push
imul
gs
pop
mov
int
insl
add
pop
jae
jno
sbb
sub
or
push
inc
adc
outsl
loope
adc
popf
sbb
addr16
mov
nop
aam
andb
pop
psubsw
stc
jo
xchg
push
lds
jmp
sub
add
cbtw
cld
ljmp
loope
inc
insl
inc
cli
jnp
push
sbb
lds
push
shlb
pop
jle
jl
xchg
sahf
sti
and
mov
xchg
pop
add
fbstp
arpl
xchg
cs
in
lret
pop
mov
xor
movsl
add
pop
mov
push
cltd
sbb
push
sarl
xor
rolb
mov
xorb
mov
stos
rcrl
adc
mov
sbb
test
les
sbb
ds
aam
loope
pop
repnz
movsl
daa
sahf
cmp
push
adc
mov
cmp
lds
push
mov
inc
adc
or
sub
bound
sbb
or
mov
mov
push
xchg
pop
jne
push
add
add
xor
repnz
sub
adc
jle
jge
mov
push
sti
cmpsb
mov
lods
cltd
dec
imul
pop
data16
scas
cli
push
cmpsl
xchg
movsl
dec
inc
hlt
arpl
mov
sub
fst
cmp
std
out
cmpb
adc
sbb
inc
imull
pusha
lea
jae
call
adc
lret
mov
addr16
sbb
shlb
xor
push
sbb
or
and
mov
pop
jo
xchg
or
sbb
xchg
mov
cmp
nop
jg
inc
jnp
fld
adc
insl
jne
lahf
je
pop
les
dec
mov
lods
pop
push
mov
out
xor
dec
push
mov
pop
stos
test
flds
add
enter
pusha
bound
fisubrs
push
nop
push
ret
fld
adc
xor
or
push
int
jae
lds
adc
loope
lret
push
cmpsb
repz
mov
cltd
repnz
and
inc
inc
daa
fs
cmp
xor
inc
dec
out
arpl
gs
data16
add
out
cmpsl
lahf
lds
pop
mov
cmpsb
repz
cmc
xchg
in
lds
movsl
push
add
int3
pop
cltd
jg
inc
or
stos
jns
or
cmpsl
dec
ss
add
outsb
push
sbb
cltd
dec
jnp
fnsave
scas
shl
shl
popa
aas
pusha
sub
je
rolb
iret
stc
not
stc
rol
cmp
pusha
add
jmp
mov
mov
test
cmpb
call
setb
mov
stc
push
test
pushf
pushf
pusha
lea
je
cmp
stc
call
push
lea
jne
not
or
or
mov
pushf
sub
dec
not
lea
jmp
dec
sbb
xchg
cwtl
scas
fdivr
jl
idivl
mov
push
pop
inc
mov
andl
cltd
idiv
fadds
mov
mov
mov
xor
push
lods
lods
cwtl
xor
mov
sbb
fwait
stos
outsb
cmpsb
shl
pusha
or
mov
out
mov
jp
nop
inc
test
xchg
push
movsl
shrl
mov
cmp
adc
rcr
mov
pusha
xor
ret
lods
xlat
das
inc
pop
outsl
push
jl
inc
push
clc
and
popf
cmp
lods
push
cmp
jmp
mov
pop
sarb
in
and
fwait
push
or
test
xor
pop
out
shll
dec
stos
daa
out
jne
xor
mov
les
out
add
adc
fisubrs
bound
icebp
cmp
fimull
test
xor
fs
xlat
sub
ss
adc
cmp
or
push
add
mov
xchg
xor
pop
out
ret
push
or
cwtl
inc
mov
inc
xchg
aam
ret
jge
loopw
cmp
loop
ds
pop
or
call
hlt
xor
push
icebp
fnsave
fisubs
push
fwait
or
data16
cwtl
inc
stos
cmc
push
pop
dec
cmp
xchg
imul
sti
cli
inc
xchg
jecxz
bnd
dec
cmp
test
sbb
imul
mov
jb
aas
push
mov
inc
outsl
mov
adcb
add
test
iret
jne
xchg
lret
push
xor
ds
inc
jae
sbb
cmpsb
mov
pop
in
mov
and
inc
testl
enter
incl
adc
dec
sbb
jmp
jle
pop
inc
sub
mov
aam
push
inc
les
lock
hlt
lahf
lock
sarb
cmp
rclb
shll
ss
pop
inc
mov
xor
mov
daa
mov
inc
sbb
inc
sbb
or
sti
cmp
lcall
imul
mov
gs
mov
sarb
das
jo
adc
xchg
mov
cs
mov
push
and
test
enter
and
xchg
adc
mov
stos
xchg
xor
xor
adc
in
adc
dec
xor
pop
jle
arpl
mov
xor
test
movsl
outsb
inc
xor
sarb
call
cltd
adc
sti
cmp
sbb
rcr
sub
cmp
sub
mov
sbbl
sti
scas
out
sarl
push
jge
jnp
mov
in
xchg
mov
jne
fcmovnb
mov
add
push
test
cmp
or
call
in
push
pop
test
push
aad
adc
pushf
xchg
mov
xchg
or
int3
lods
call
popa
xlat
push
jnp
jbe
jl
int
or
dec
xor
test
fwait
xor
enter
push
push
inc
sub
ja
inc
mov
cmp
stos
nop
loopne
out
lea
inc
lret
mov
fsin
add
pop
dec
push
out
mov
jnp
add
and
jecxz
jnp
sub
mov
mov
notl
lds
das
mov
enter
adc
mov
sahf
sub
mov
jp
sub
and
int3
pushf
repnz
cmp
cs
loopne
stos
clc
jno
subl
sarb
adc
add
ror
rcl
mov
pushf
test
test
test
test
call
cmc
push
or
call
lea
je
cmc
test
cmp
jmp
rcr
sub
neg
mov
dec
neg
add
rol
mov
pushf
call
sbb
bswap
not
rol
mov
stc
jmp
es
insb
xor
mov
test
pop
xchg
fs
mov
popa
lods
jno
adc
movsb
into
push
js
mov
push
repz
fadd
aad
xchg
push
inc
mov
and
cld
and
xchg
sbb
into
mov
inc
add
loop
and
out
xchg
mov
cltd
cs
jge
daa
push
jno
sbb
sbb
fstpt
enter
test
rcll
xchg
lahf
imul
pop
inc
cltd
in
adc
mov
jnp
and
inc
rorb
pushl
sub
mov
cmp
repz
jg
jg
and
fisttpl
cmp
push
xchg
jmp
call
and
lods
xor
mov
push
sti
pop
stos
cmp
push
jecxz
jne
xchg
cs
xchg
insb
out
icebp
sbb
mov
and
add
add
cli
sbb
orl
insl
ret
lahf
popa
shrb
aas
shll
sbb
lea
pop
fimull
xor
sarb
repz
aas
icebp
cmp
lods
mov
popa
shrb
aas
shll
mov
jmp
sbb
sub
fwait
lods
or
sbbb
pop
into
inc
and
test
mov
idivb
mov
cmc
dec
fwait
ss
adc
mov
movsb
fdivrl
pop
and
and
cmp
cmc
push
lea
jne
mov
mov
bswap
movsbw
movb
lea
lahf
lea
mov
push
not
lea
setg
setae
lea
pushf
pushl
movl
pushl
jmp
add
add
test
cwtl
movzbw
push
bsr
mov
mov
bts
movzbl
neg
sub
movsbw
cmp
push
call
test
fmuls
lea
ficomps
cmp
data16
xorl
mov
sbb
jmp
mov
cmpsb
testb
lret
adc
inc
jo
shl
fldcw
shrb
mov
push
sti
mov
add
sbb
mov
mov
sbb
mov
xchg
lods
mov
mov
cmc
and
movsb
or
stos
lea
sarb
sub
movl
movb
pushl
popl
push
pushf
mov
pushf
pushl
ret
movl
call
push
lea
jne
call
push
or
insl
fistl
push
jg
cli
adc
mov
push
sti
push
add
imul
loopne
jb
stos
mov
popf
adc
cltd
and
xchg
and
ss
lahf
push
and
jbe
punpckldq
or
les
xor
push
call
and
sbb
and
mov
fidivl
aaa
imull
lea
jb
pusha
movw
pushl
ret
lods
lock
push
pop
cmp
lret
in
mov
add
pop
xchg
jo
add
xchg
dec
movaps
mov
add
mov
and
jge
xor
push
xor
insb
add
movsb
je
xchg
mov
jecxz
add
sub
add
loope
xor
push
mov
dec
fcmovnu
sub
dec
fwait
mov
int3
mov
das
jmp
adc
decl
add
jmp
dec
inc
aad
xorl
loopne
jo
fiadds
out
scas
hlt
mov
inc
lret
xor
cmc
mov
xor
jle
mov
cmp
fdivs
inc
push
cli
clc
push
cli
aam
xchg
enter
cmp
xchg
xor
inc
push
xbegin
fists
cs
sbb
and
shll
pop
push
rcll
or
lock
fnstsw
cmpsl
sbb
dec
lea
sub
and
pop
arpl
or
cmp
pushf
test
pushl
pusha
lea
je
cmc
sub
pusha
cmp
pushl
jmp
xor
mov
scas
repz
cmp
sbbl
inc
cmp
push
jb
lds
pop
lock
leave
sbb
dec
loope
into
mov
xchg
mov
mov
out
cvtpi2ps
or
shlb
mov
sub
add
insb
mov
lea
jmp
adc
mov
andps
dec
mov
popf
mov
xchg
popa
ficoml
jle
mov
sbb
push
rolb
sub
and
fdivrp
fildl
add
and
pop
ret
fcoms
inc
push
sahf
inc
xchg
and
push
in
ret
add
add
push
mov
dec
adc
jle
jge
fiadds
sbb
lret
dec
push
dec
into
sbb
lds
inc
jle
jnp
in
sti
lahf
jge
sbbb
push
test
dec
or
ret
in
jge
stc
clc
mov
add
lret
push
adc
iret
lea
clc
cmp
xor
add
or
jg
or
jle
mov
cmp
sbbl
hlt
mov
jg
mov
lret
add
sub
dec
add
cmp
cmp
mov
sbb
iret
rcrl
add
inc
mov
aas
gs
push
dec
lret
in
or
roll
cs
outsb
adc
ret
and
popa
les
add
pop
cwtl
repz
push
inc
xchg
and
lea
inc
sbbl
or
push
adc
sti
add
mov
popf
inc
xchg
pop
lea
inc
inc
cmp
iret
int
push
inc
movsb
in
js
pop
push
xor
add
dec
mov
incl
cmp
and
pushf
sbb
rcrb
or
jnp
inc
fcompl
scas
add
sbb
xchg
pop
push
int3
shl
into
xlat
fcoms
hlt
andl
mov
jne
inc
les
mov
je
dec
push
mov
cli
imul
stos
fdivl
pop
enter
pop
outsb
out
pop
jmp
inc
ret
pop
repnz
cmp
cli
pop
cld
pusha
mov
jo
add
les
xor
addb
pop
jle
data16
pop
push
lret
xchg
fs
mov
inc
adcl
int
pop
popa
push
lea
popa
cmp
xor
mov
in
cmp
cltd
adc
sbb
xchg
sbb
sti
stc
mov
add
ret
lea
call
cmp
or
xchg
iret
lret
add
cld
outsl
inc
pop
inc
ret
sbbb
pop
xchg
mov
cld
add
push
negb
inc
xchg
and
pop
dec
push
pop
lret
lahf
add
pop
push
mov
nop
add
push
movsb
mov
popf
cmp
xorl
jl
inc
cmp
mov
xor
and
push
dec
xchg
sbb
mov
xchg
mov
pop
push
adc
lock
and
sbb
jnp
pop
and
sbb
dec
andl
pop
jnp
mov
xchg
pop
mov
xchg
cmp
pop
jp
jl
push
or
pop
mov
push
push
dec
and
cmp
pop
inc
cmpb
inc
dec
iret
sbb
xchg
inc
inc
ret
ret
iret
sbb
cmp
lret
add
cmp
inc
clc
fisubl
loopne
xor
jl
xor
popf
sbbl
sbb
xchg
hlt
dec
lds
sbb
popa
addb
or
mov
xchg
cmp
cs
sub
mov
lea
shr
les
sti
or
mov
into
adc
lea
std
addl
enter
pop
or
adcl
iret
dec
rcrb
ficoml
fwait
rcr
pushf
lcall
aas
dec
sbb
lret
dec
push
lds
mov
adc
push
test
mov
aas
test
fwait
dec
inc
mov
lock
clc
xor
mov
push
ret
iret
push
aad
cmpsb
sbb
ret
aad
pop
movsb
lahf
mov
xchg
arpl
clc
or
les
arpl
dec
pop
sbb
push
jg
jle
cmpsl
and
push
add
stos
jg
adcl
jmp
jecxz
outsb
pop
pop
jge
stc
pop
add
inc
pop
sahf
inc
dec
push
dec
sbbb
dec
movsl
lcall
dec
iret
or
sarb
popf
xchg
addl
push
popa
cld
add
cmp
cmp
dec
mov
dec
les
mov
cld
jl
lock
les
faddl
popa
mov
jnp
pushf
mov
push
jecxz
arpl
rorl
fisubrl
les
push
sbb
xchg
les
jl
jns
mov
lcall
rcrb
mov
cltd
mov
dec
jle
adc
cmp
popa
rcl
or
adcl
adc
fwait
push
orb
push
xchg
or
jle
rol
dec
les
icebp
push
pop
inc
jno
dec
xchg
pop
push
inc
inc
lret
xchg
mov
or
adc
push
pop
add
add
into
lock
add
mov
mov
outsb
pop
push
les
inc
pop
push
or
ret
popa
push
les
push
mov
enter
pop
xchg
les
aas
pop
xor
lret
cmpl
ret
pop
mov
mov
dec
in
lds
push
inc
fistpl
or
mov
inc
pop
jge
dec
addb
test
je
clc
fmul
addl
jno
xor
push
mov
sub
adc
push
add
mov
jl
cmp
sahf
les
sbb
add
sbb
repz
adc
cltd
lds
inc
cmp
pop
xor
pop
mov
les
inc
orb
cld
hlt
out
inc
aaa
xchg
addb
enter
inc
xorl
dec
les
inc
dec
mov
ret
sbb
cmp
or
js
pop
mov
iret
int3
jge
sbb
push
cmp
inc
push
rcrl
fistps
in
iret
push
les
dec
lret
aas
add
fistps
push
les
rorl
out
add
cwtl
cmp
sub
sbb
dec
and
in
push
pop
jae
lcall
adc
in
imul
push
add
and
cmp
jge
push
adc
sbb
add
incb
dec
test
add
movsb
pop
add
pop
cltd
test
add
lcall
push
outsb
out
mov
or
lret
pop
inc
adc
pop
push
aam
int
and
scas
and
arpl
cmp
test
add
pop
lahf
xchg
les
mov
sbb
push
les
mov
sub
cmp
pop
aas
xchg
lcall
das
imul
mov
pop
iret
jl
sub
adc
pusha
adc
and
les
lcall
adc
cmp
aas
push
inc
xchg
pop
les
dec
pop
inc
or
xor
leave
les
orl
dec
les
pop
mov
into
les
imul
icebp
mov
mov
les
fisubrl
imul
pop
dec
mov
inc
imul
into
pop
imul
flds
cld
es
xchg
dec
xchg
les
rolb
mov
js
cwtl
jo
popf
mov
adc
les
mov
sub
mov
and
imul
xor
pop
pop
push
enter
cmp
push
mov
add
lret
dec
orb
lret
sbb
notb
lret
js
inc
testb
les
std
cwtl
cli
sbb
subl
mov
jle
xor
mov
sbb
rorb
imul
sahf
unpcklps
cs
xchg
and
iret
jl
lret
jge
mov
inc
in
pop
jmp
jl
std
rclb
xchg
adc
daa
cmp
lods
and
and
mov
aad
sti
push
dec
cmp
push
adc
pop
dec
push
pop
cmp
lcall
sbb
adc
pop
hlt
repz
hlt
push
mov
pusha
mov
inc
mov
mov
sbbb
imul
add
out
movb
adc
jl
cli
insb
jae
inc
jae
xchg
test
ret
mulb
inc
jns
push
add
mov
inc
ret
inc
add
and
pop
test
add
mov
test
pop
fcomps
lcall
les
push
testl
lea
test
andb
rolb
inc
or
les
adc
in
pop
lock
push
insl
mov
js,pt
jle,pt
js,pt
daa
into
and
mov
jle
movsl
lea
xchg
inc
dec
imul
and
notb
pop
ja
and
dec
in
popf
mov
leave
lret
aas
dec
dec
sub
mov
daa
or
stos
test
scas
jmp
and
xchg
rcl
test
mov
in
and
pushf
xchg
in
mov
jmp
movsb
adc
sbb
sub
xor
mov
xor
add
xchg
lods
add
push
adc
mov
xchg
push
xchg
xchg
and
xor
mov
loop
and
test
es
cwtl
popf
fwait
xchg
and
cwtl
fsubs
pop
xchg
out
fsubs
xchg
fsubl
adc
into
je
jbe
mov
js
push
inc
jge
sbb
mov
xchg
pop
and
movsb
outsl
or
xchg
xor
dec
and
adc
ret
data16
push
dec
mov
fildl
aad
inc
inc
push
mov
jne
or
mov
add
push
icebp
mov
jp
ja
or
sarb
movsb
insl
and
popa
adc
and
addb
cmp
movsb
je
test
jbe
jg
loopne
fcomps
out
push
dec
and
mov
jge
les
in
add
mov
and
mov
stos
mov
sbb
test
imul
adc
xchg
xchg
fdivs
or
pushf
pop
adc
inc
pop
xchg
and
loope
xchg
int3
popf
or
add
fwait
mov
push
fisttpll
dec
inc
add
nop
in
inc
cmp
or
jmp
fwait
movsl
into
inc
pop
mov
adc
cmpb
add
push
sti
mov
mov
xchg
xlat
mov
addr16
fimuls
and
ficomps
pusha
shr
loopne
inc
lock
popf
test
fsubs
and
sbb
hlt
adc
lea
cmp
movsl
in
dec
xlat
push
jae
add
push
les
mov
bound
inc
mov
arpl
ret
and
stos
aas
xchg
add
popf
push
mov
mov
jne
mov
sbbl
pop
mov
test
add
iret
dec
sahf
popf
pop
pop
mov
loopne
jne
push
cmpsl
and
xchg
stos
mov
fs
sub
inc
xor
into
adc
xor
leave
jne
loop
sbb
ret
xor
and
mov
push
lea
pop
movsl
push
out
xlat
arpl
aaa
xchg
and
push
pop
sub
mov
loope
and
jnp
mov
or
cltd
mov
cli
jl
mov
and
and
bound
xchg
fisttps
pop
push
inc
xchg
push
cmp
ret
mov
xor
push
data16
jns
inc
pop
out
ss
xchg
imul
xchg
loope
sbb
ss
sbb
data16
jge
sqrtps
cltd
inc
imul
fisubs
ljmp
inc
imul
jns
lock
adc
jno
pushf
inc
pop
je
out
push
outsl
inc
push
and
outsb
xchg
int
fidivs
daa
lret
mov
inc
addr16
popf
aaa
adc
ret
fs
cmpsb
sahf
and
inc
cmp
mov
jae
xor
loop
jne
pushf
push
xchg
push
mov
mov
mov
jne
popf
mov
pop
push
pop
sub
cmp
or
mov
in
dec
sub
adc
imul
push
inc
js,pt
xchg
cmovb
jnp
sbbb
pop
adc
jl
adc
dec
mov
xlat
test
in
inc
sti
cmp
dec
lea
jl
mov
cmp
mov
popf
ja
fwait
orb
dec
sub
sbb
js
notl
sahf
and
mov
nop
adc
insb
inc
andl
jg
xchg
in
lcall
loope
sub
sbb
dec
pushf
pop
sub
iret
xchg
pop
push
movups
imul
lret
add
ljmp
sbb
or
dec
jne
mov
jecxz
mov
movsb
movsb
je
sahf
xor
xchg
les
add
mov
xchg
push
sbbl
jecxz
lea
jae
adc
mov
mov
mov
mov
adc
popa
mov
xchg
xchg
mov
xchg
adc
inc
leave
mov
lahf
incb
out
pushf
test
and
cmp
bound
sub
loopne
notl
sbb
jne
sub
push
jno
mov
adc
aaa
jge
sahf
and
adc
fwait
roll
ret
andl
jg
ret
das
imul
in
adc
adc
scas
pop
cltd
or
fs
in
push
and
jnp
hlt
bound
jb
movsb
jg
movsl
insb
stos
and
pop
test
es
jl
rcrb
inc
xor
test
mov
test
dec
xchg
inc
or
out
in
orl
sub
in
mov
mov
mov
push
cmp
test
or
imul
add
test
pop
dec
pop
mov
push
pushf
and
sahf
mov
mov
rorb
add
mov
nop
inc
pop
xchg
pop
inc
pusha
mov
ret
arpl
dec
and
mov
stc
mov
aad
push
mov
push
mov
daa
cld
jae
jbe
jne
jbe
je
mov
inc
loop
inc
jae
repnz
adc
adc
and
aad
xchg
cwtl
loop
mov
inc
mov
mov
pop
add
fs
mov
mov
inc
js
in
jle
xchg
mov
push
ja
jno
mov
jecxz
inc
outsb
add
cmp
xchg
xor
out
je
pop
push
and
jno
pop
jae
pusha
push
loop
lret
mov
stos
inc
sub
cmp
push
test
adc
repnz
sbb
rorb
js
cwtl
aas
inc
add
or
jns
loope
lahf
ja
pop
test
or
fdivs
imul
sub
fdiv
mov
push
mov
dec
iret
xchg
adc
xchg
pop
ficoms
xchg
into
imul
loopne
mov
inc
jno
shlb
dec
pushf
test
repz
mov
arpl
test
mov
inc
pushf
jp
popa
das
arpl
dec
arpl
pop
bnd
loop
movsb
psubusb
or
dec
xchg
ret
and
cltd
mov
test
pop
xchg
pop
fdivs
je
and
push
mov
and
cwtl
pop
mov
and
ljmp
gs
test
pop
imul
pop
xchg
and
roll
pop
xchg
pop
bound
jo
push
pusha
inc
je
push
adc
push
dec
pop
lea
push
enter
shrl
ret
cmp
xor
jnp
mov
fdivrl
aas
dec
ret
mov
mov
sahf
outsb
jns
fildl
xchg
test
or
loope
lock
and
imul
mov
out
loope
mov
push
shll
and
adc
adc
popf
mov
mov
push
data16
test
adc
xlat
add
jl
mov
lea
imull
inc
mov
inc
mov
add
cltd
int3
mov
add
ficompl
sar
mov
push
add
push
xorl
movsb
ljmp
add
and
adc
sbb
xchg
inc
js
mov
pop
outsb
fisttpl
movsb
insl
movsb
pop
add
sahf
sub
andb
pop
sub
sub
and
daa
cmpl
in
mov
push
xchg
push
jmp
aad
xrelease
sbb
pop
pushf
insb
xchg
in
or
mov
adc
mov
lea
inc
push
mov
pop
test
arpl
mov
fnsave
pop
popa
xchg
fcmovb
call
inc
pop
add
and
ljmp
xor
push
xor
xchg
cwtl
pop
cmp
push
and
cmp
and
sahf
cmpsl
ds
movsb
sahf
stc
cmpl
ds
dec
jo
cld
std
push
mov
add
and
or
mov
inc
movsl
scas
movsb
inc
sahf
adc
push
xchg
mov
aam
cmp
les
dec
sbb
mov
faddl
or
lods
addl
inc
or
push
sbb
push
add
push
scas
fsubl
lahf
repnz
sub
fs
and
push
mov
push
andl
sub
ret
subl
movsb
aam
in
push
add
push
mov
nop
ss
sbbl
xchg
mov
imul
mov
jecxz
push
pushf
pop
dec
movsb
hlt
lahf
mov
adc
loope
and
aam
push
jecxz
sbb
inc
mov
mov
and
hlt
dec
xchg
or
pop
mov
ret
jne
fisubrs
arpl
jl
pop
or
and
pop
and
rep
xor
push
jecxz
jecxz
and
addr16
scas
and
xchg
movsl
jo
mov
and
roll
and
rorb
stos
pop
js
call
movsl
push
subl
xor
xor
loope
and
and
dec
cld
mov
or
in
sub
lahf
jl
cltd
sbb
push
ret
leave
mov
mov
cld
mov
scas
inc
dec
insb
pop
push
ret
cmpsb
es
lods
jnp
dec
sahf
dec
imul
sahf
mov
pop
xchg
push
push
and
repz
stos
inc
push
addl
mov
sahf
xchg
sbb
imul
mov
mov
mov
repnz
xchg
fisttpll
imul
push
pushf
or
mov
imul
cld
cmp
mov
xchg
sti
and
and
lock
cmp
imul
xor
sub
std
pop
dec
jl
dec
push
leave
xchg
mov
push
daa
test
inc
xchg
add
lea
mov
pushf
rorb
imul
pusha
xrelease
rol
mov
adc
or
mov
les
mov
xchg
push
mov
push
sbb
xchg
popa
mov
in
mov
dec
push
xlat
or
add
test
shll
sbb
mov
mov
cwtl
into
mov
inc
addr16
xchg
add
dec
xchg
xchg
repz
repz
je
jae
movsl
sub
ficompl
lcall
popa
lea
aam
mov
jns
mov
cmp
pop
ret
out
xor
sub
in
mov
stos
fs
insl
nop
jne
out
pushf
lds
pop
ficompl
dec
mov
es
aaa
adc
adc
ja
xchg
pushf
test
mov
push
insb
jbe
mov
es
cltd
xchg
das
mov
cmp
xchg
insb
jae
mov
pusha
jno
repnz
jne
popf
iret
icebp
neg
jns
lret
lret
mov
or
test
fwait
loopne
dec
push
test
push
jo
and
and
add
insb
loopne
loop
in
int3
pop
pop
push
and
insl
mov
xchg
jb
xor
int
xlat
xchg
push
out
adc
dec
or
jle
sub
movsb
mov
pop
in
or
dec
daa
rol
xor
addl
adc
mov
outsl
adc
loope
repz
frstor
fsubrs
fs
stos
popa
ret
mov
sbb
outsl
and
lock
pop
aam
loop
lret
lea
or
xchg
mov
loopne
fs
decl
lock
sbb
repnz
jo
nop
or
push
loop
add
and
inc
inc
mov
into
insb
pmaxub
mov
pop
andl
inc
incl
mov
and
push
xchg
mull
and
jecxz
inc
pop
sbb
arpl
popf
pushf
rcrl
mov
xor
sbb
mov
outsb
push
mov
into
aad
sbb
jle
adc
mov
dec
sub
rcrb
jle
dec
xor
sub
push
jecxz
add
mov
jne
imul
mov
into
sbb
ljmp
and
dec
sub
movswl
hlt
sub
out
arpl
dec
adc
loope
pop
cmp
and
pop
xchg
lret
mov
sarb
jno
scas
push
filds
pop
outsl
dec
nop
inc
jno
mov
fwait
std
pop
lahf
lcall
mov
cmpsb
or
push
xchg
faddl
je
cmp
adc
test
daa
shr
pop
mov
push
lret
inc
out
push
push
adc
dec
push
dec
test
imul
jp
test
pushf
mov
mov
or
aam
add
les
jp
add
pushf
pushf
cwtl
sti
sbb
fwait
jg
sub
dec
pop
shlb
xchg
and
jo
lret
xchg
sbb
scas
push
lret
orl
push
pusha
xchg
push
stos
pop
lock
and
xchg
dec
and
nop
popf
jno
push
push
mov
add
and
mov
ret
mov
rorl
pop
lcall
pop
mov
inc
bound
mov
pop
hlt
popa
push
mov
xchg
xchg
jecxz
lcall
movsb
xchg
pop
aam
pop
data16
in
shll
cmp
stc
pushf
mov
jg
xchg
adc
pop
mov
mov
iret
aaa
jle
cmp
sbb
lahf
arpl
cmp
xchg
lret
nop
movsb
loop
add
xchg
popa
mov
add
pop
cmp
sbb
cltd
sbb
push
add
out
push
out
fldcw
push
inc
cmc
xchg
dec
unpcklps
shll
jmp
pop
les
xchg
inc
lds
add
cmp
fwait
and
leave
test
insl
addr16
push
outsb
imul
test
jno
ss
cltd
sbb
jecxz
inc
push
jae,pt
inc
je
cmp
add
jbe
rolb
loope
sahf
inc
push
xor
repnz
pop
ret
inc
and
inc
add
pushf
adc
sbb
adc
aam
rcr
inc
aaa
xor
mov
sbb
adc
fistps
adc
into
fldt
or
not
dec
cmp
arpl
pop
enter
in
movsl
insl
pop
vorps
sub
nop
mov
fdivs
movsb
xor
gs
push
les
pop
or
mov
or
decl
and
in
mov
fdivl
fildll
sbb
leave
push
adc
popa
mov
mov
pop
imul
insl
popf
push
enter
mov
dec
rorl
lcall
cmp
pop
mov
sbb
repz
out
imul
lcall
sbb
popf
sahf
pop
imul
insl
or
fs
loope
stos
repnz
and
xor
inc
lahf
daa
rcrb
xchg
pop
or
or
ret
xor
inc
fnstenv
inc
out
stos
frstor
jecxz
insb
mov
and
pop
lds
push
imul
int
sub
and
push
outsl
mov
cmp
pop
mov
cmp
ficompl
fwait
pushf
aam
mov
or
push
ret
inc
pop
push
adc
inc
adc
and
repz
ja
jno
pop
arpl
into
sbb
pop
inc
xchg
cltd
pop
rcrl
xor
popf
xchg
pushf
fcomps
mov
test
xchg
dec
lahf
inc
lea
ficoml
sub
push
adc
aad
xchg
xchg
sbb
mov
cwtl
jno
repnz
flds
or
push
sbb
sub
push
imul
add
xchg
dec
das
push
xor
sub
imul
into
pushf
fsubrp
and
shll
call
mov
mov
and
popf
xchg
xor
add
jo
mov
xchg
and
lahf
push
adc
push
mov
fildl
push
lds
mov
sbb
or
jne
pop
shrb
cld
das
mov
jg
popf
and
mov
xchg
mov
mov
and
jnp
in
loope
cmp
repnz
pop
arpl
xchg
in
out
subl
mov
arpl
mov
fwait
popa
out
mov
sub
mov
adc
cld
inc
frstor
jg
ret
in
jae
fimull
loop
fsubl
ret
inc
adc
dec
movl
xchg
inc
nop
fmuls
push
inc
jg
fdivrl
cwtl
and
add
mov
lahf
lods
and
pushf
arpl
pop
xchg
pop
push
dec
pushf
sbb
adc
repnz
lea
fiadds
stos
mov
mov
push
aad
adc
mov
inc
jnp
or
jnp
imul
call
xor
fcompl
sti
sbb
mov
lea
sar
sbb
mov
pop
andb
xchg
mov
or
mov
jno
movsl
adc
pop
movsb
jecxz
and
sbb
cmpsb
xchg
pop
aam
movsb
stos
sbb
add
and
or
in
cld
adc
push
jns
fs
or
mov
dec
lahf
and
mov
xor
inc
dec
fnstcw
and
insb
jns
in
aad
inc
or
jb
loope
inc
mov
and
adc
ror
sbb
dec
xchg
xchg
cmp
adc
or
dec
leave
and
mov
mov
pop
movsl
cwtl
jns
sub
fwait
jmp
ret
out
enter
sbb
sbb
addr16
jmp
and
xchg
imul
mov
ret
xor
in
sub
mov
inc
and
rcl
xor
fstpl
imul
sub
add
lock
jle
test
push
int
cmpsb
mov
sbb
cwtl
mov
cltd
frstor
sahf
sar
cmp
ret
push
loope
sub
lock
insl
cltd
loop
mov
sub
mov
inc
inc
fisubrl
xlat
jl
pop
add
dec
imul
pusha
cwtl
nop
xor
insl
test
nop
nop
push
je
inc
bound
int
pop
push
popf
lret
mov
int
mov
mov
add
loop
movsb
inc
adc
adc
inc
xchg
leave
test
dec
adc
push
out
or
lret
call
inc
xchg
shlb
into
divb
mov
int
cld
lods
and
sub
addr16
jns
loope
mov
daa
mov
or
rcll
sub
test
inc
mov
adc
pop
push
imul
push
aaa
sbb
stos
xor
inc
push
int3
enter
dec
push
xor
popf
mov
jae
and
loope
push
jno
mov
cmp
mov
pop
mov
cmp
push
mov
jae
fists
popf
adc
dec
daa
push
bound
in
pop
pushf
testb
ja
adc
lahf
iret
mov
or
xlat
sub
xchg
pushf
ret
push
repnz
loopne
data16
sbb
add
xchg
mov
push
cltd
xor
fcomps
mov
mov
call
push
call
mov
jnp
cmp
xchg
loopne
and
and
imul
mov
lahf
bound
shll
cmp
push
dec
mov
movsb
cmpsl
push
xor
cmp
sbb
jno
and
mov
movsl
mov
mov
mov
fstps
xor
jnp
mov
inc
and
in
lret
xchg
and
pop
movsl
dec
lods
push
jmp
pusha
pop
pop
test
sbb
xchg
lcall
cltd
xor
push
xor
add
sbb
jmp
add
mov
mov
leave
fsubrl
popf
xor
mov
add
cmpb
jecxz
fwait
sti
xchg
js
cmpsl
outsl
lock
xchg
jbe
imul
jno
mov
mov
jecxz
adc
adc
iret
inc
xchg
sbb
les
and
in
lcall
fimuls
and
popa
add
lahf
loopne
movsb
stos
loope
aad
add
outsb
sbb
and
popf
xor
xchg
into
push
stos
mov
jle
les
fisttpl
in
out
push
jo
pushf
and
and
push
jmp
and
adc
dec
push
ja
or
repz
les
int3
imul
pop
mov
and
mov
roll
into
outsl
xchg
and
push
and
and
rclb
and
xchg
lahf
mov
pop
clc
jne
popf
pushf
in
call
xor
les
stos
and
dec
mov
arpl
or
mov
inc
xchg
jbe
movsl
push
movsb
xchg
popa
andl
mov
pop
mov
scas
dec
sub
and
imul
sbb
and
xchg
inc
inc
jge
lds
shll
lods
iret
push
das
mov
lds
jae
lcall
add
jno
mov
dec
aam
enter
lock
loope
sbb
repnz
adc
lds
mov
xchg
pop
sub
jne
ljmp
call
outsb
xchg
inc
ja
aam
pop
jb
imul
jne
jae
test
in
jns
pop
call
or
repnz
xchg
and
in
mov
rcrb
ret
loopne
lea
and
and
add
dec
testb
mov
sbb
in
js
fildl
and
repnz
ds
pop
daa
xchg
pop
loope
ror
sbbl
int3
add
pusha
add
inc
inc
jnp
subl
inc
test
addl
adc
pop
add
and
popf
xchg
pop
popa
aam
icebp
and
test
dec
insl
sub
mov
jne
pushf
test
jecxz
movsb
in
inc
adcb
jmp
ret
cmp
push
and
nop
int
test
test
inc
jmp
imul
pop
cmp
xor
mov
adc
in
pop
loope
rcrl
xor
in
iret
mov
std
cltd
mov
movsb
in
aad
xchg
std
dec
mov
pushf
fidivrs
test
arpl
lcall
lds
in
cltd
inc
loope
daa
iret
mov
loopne
sub
and
jne
jg
repnz
xchg
mov
sub
cmp
iret
sbbl
aam
pop
cld
cmc
push
inc
ud0
sar
aam
mov
mov
xchg
inc
mov
lahf
and
add
int3
mov
pop
nop
gs
mov
aam
pusha
push
mov
push
jne
mov
popf
je
shlb
xchg
pop
dec
pop
test
and
mov
cmp
jecxz
xchg
fcoms
pop
sbb
arpl
aam
pop
loopne,pn
and
mov
leave
pop
xor
dec
pop
mov
sbb
cmp
inc
or
sbb
sub
imul
mov
add
fildl
add
fwait
mov
jl
inc
fs
sbb
test
push
jl
jbe
call
jecxz
pop
fwait
addr16
imul
test
insb
sub
push
mov
arpl
fs
hlt
popf
mov
and
lods
popf
push
in
pop
test
fsts
psubb
xchg
inc
insb
cmp
jge
jae
xor
jp
loope
sub
cltd
lea
inc
sub
and
cld
ret
sbb
daa
inc
arpl
mov
pop
popa
pop
mov
and
movsb
mov
xchg
loop
in
mov
fs
push
ret
ret
xor
lds
push
pop
out
cli
sbbb
fidivl
popa
push
insl
sub
adc
test
mov
push
lret
mov
div
mov
stos
loopne
or
sbb
push
fdivr
mov
jecxz
js
outsb
enter
push
or
loope
test
out
arpl
xor
imul
sub
cmp
add
xchg
adc
sub
fldenv
and
stc
dec
cmp
jbe
xchg
lret
incl
cwtl
cld
loop
dec
mov
or
fwait
add
jge
mov
out
lds
mov
add
ret
js
xchg
mov
cmovb
out
arpl
lea
xchg
or
outsl
ss
mov
pop
fs
movsb
add
pop
xchg
int3
popa
and
ret
cmpsl
xor
jo
fimuls
pop
iret
movsb
jo
aaa
xor
fimuls
and
cmp
int
dec
push
jnp
add
inc
pop
push
js
add
and
dec
rorb
sub
mov
test
jbe
jnp
pop
xchg
aad
add
push
and
cltd
aad
out
sbbb
sbb
mov
inc
mov
inc
sbbb
and
mov
pop
rcrb
loop
dec
sbb
outsl
rolb
or
mov
lahf
adc
rorb
stos
jno
ss
inc
push
pop
xor
pop
pop
jae
pusha
cmp
pop
pop
and
and
jb
mov
sbb
stc
mov
push
xchg
ja
xchg
pushf
stos
popf
enter
lods
leave
bound
fwait
sahf
xor
mov
mov
push
dec
push
add
pop
movsb
adc
popa
cltd
jno
xor
inc
and
sub
cmp
push
les
out
hlt
in
xchg
push
mov
test
stos
movsb
adcl
xor
pop
and
fdiv
pop
xchg
out
lds
filds
popa
cmpsl
outsl
les
sbb
and
dec
and
and
mov
les
xchg
ret
loop
dec
add
lret
inc
subb
jl
and
and
and
aas
adc
push
ret
test
push
add
jge
push
push
jecxz
and
stos
ss
test
repz
adc
dec
sub
sbb
dec
or
push
push
cltd
mov
outsl
jbe
or
gs
push
or
xchg
sbb
inc
dec
add
stos
fwait
jmp
sub
and
jecxz
test
adc
adc
xchg
gs
cmp
aam
pushf
jnp
arpl
cmp
sbb
arpl
lahf
jnp
fidivrl
popa
mov
icebp
jno
ret
pop
fiaddl
and
shl
mov
mov
or
loop
sub
xchg
les
mov
push
sub
mov
and
cltd
sbbl
or
or
cmp
xlat
mov
sbb
and
mov
adc
adc
data16
or
push
shlb
xchg
add
push
push
ss
cmp
cmpsl
and
add
stc
add
dec
sti
aaa
pop
xchg
mov
adc
push
mov
lock
adc
cmp
mov
movsb
add
sub
pushf
test
mov
adc
jno
sub
mov
ja
cmp
pop
adc
xlat
jae
mov
mov
xchg
lret
push
or
fistps
pusha
data16
jle
adc
nop
sarb
or
cmc
mov
push
fnsave
in
hlt
mov
xlat
mov
data16
mov
fs
cltd
repz
movsb
sbb
and
sub
mov
fstl
addr16
xchg
inc
push
xor
jb
js
icebp
mov
ret
mov
movsl
popf
push
xchg
inc
in
enter
jecxz
xchg
adc
pop
insl
sbb
push
adc
outsl
sub
or
adc
mov
jo
lret
pushf
test
pushf
push
rcl
popf
xchg
adc
hlt
lahf
or
movsl
hlt
push
push
jge
xchg
and
xchg
dec
insl
lcall
adc
outsb
icebp
and
cmp
jle
and
push
mov
cmp
xchg
ret
out
repz
jmp
fmulp
int
pusha
imul
adc
mov
clc
movsb
test
mov
shld
add
shrb
test
adc
iret
push
ret
loop
imul
or
addb
sbb
fisubl
xchg
xor
repz
xchg
pusha
ret
adc
cmp
aam
cmp
aad
jle
cwtl
inc
pushf
adc
cmpsb
add
xor
jnp
fbld
pusha
mov
add
and
jnp
test
lods
pusha
mov
mov
add
mov
add
rcrb
repz
cvtdq2ps
cmc
cmc
inc
adc
ret
pop
rcrl
adc
fnstsw
cmp
popa
xchg
outsb
mov
mov
or
movsl
pop
imul
mov
add
lods
loopne
js
xchg
lret
adc
repz
in
mov
lods
repz
and
sub
xor
xchg
leave
push
push
aad
test
out
inc
push
xor
dec
push
and
sbb
jno
sbb
push
shl
imul
mov
jg
sub
es
or
xlat
imul
push
pop
divps
mov
sbb
push
cmpsl
outsb
jns
dec
inc
cmovs
xor
addr16
push
loop
xchg
das
std
cmp
clc
inc
cwtl
ret
adc
insl
lods
sbb
cmp
ja
rorl
sbb
dec
sub
mov
call
imul
nop
sbb
adc
iret
imul
add
mov
mov
sbb
inc
push
adc
and
adcl
cltd
sahf
dec
lahf
imul
js
mov
insl
xorl
and
in
push
and
insb
xchg
dec
adc
add
ret
popa
xchg
mov
mov
outsb
xorl
hlt
int3
imul
adc
in
inc
sbb
ss
jl
imul
push
lock
sbb
loopne
cmp
mov
sub
and
jne
push
or
pusha
ret
mov
or
sub
and
sub
fisubrs
in
pop
outsb
arpl
and
xor
jmp
xor
andb
and
push
out
pusha
push
out
addr16
dec
insb
xchg
and
sbbl
pop
or
pop
aad
faddl
or
jle
sbb
dec
lcall
adc
xor
jge
inc
and
sub
loope
push
inc
sbb
xor
push
mov
jle
mov
mov
in
dec
sub
test
adc
ja
pop
pop
dec
frstor
inc
cwtl
mov
testb
fdivs
mov
rcr
xor
sbb
scas
lahf
adc
mov
dec
rep
bound
adc
and
adc
imul
fmuls
in
sbb
lcall
pop
test
and
in
loopne
or
movsb
lcall
lahf
cmp
xchg
and
scas
jae
xlat
lret
mov
sbb
xor
shlb
enter
aam
dec
jecxz
stos
lds
in
aad
or
lahf
inc
sub
pop
push
bnd
loopne
or
pusha
push
rcrl
imul
fwait
jae
js
dec
inc
push
ret
pop
mov
mov
mov
sbb
cs
scas
xor
cs
push
mov
into
cmpsb
daa
sbb
push
in
movsb
jmp
insl
sub
ret
imul
sub
xor
inc
or
cltd
movsb
cwtl
adc
popa
ret
arpl
fs
mov
dec
pop
in
add
add
push
pop
test
and
pop
xchg
mov
dec
andl
cltd
inc
lds
out
out
and
jecxz
mov
sub
out
pop
pop
inc
dec
cwtl
bound
fidivs
and
lahf
pop
adc
adcl
repnz
xor
inc
xchg
aam
jecxz
sbb
cmpsl
cmp
shlb
jmp
jp
not
popa
movsb
and
rorl
push
lcall
cmc
fcoml
les
pop
inc
movsb
dec
movsl
mov
sarl
mov
aam
push
ss
lahf
mov
inc
pop
fcmovu
pop
mov
jmp
rorl
test
adc
jecxz
mov
bound
insb
mov
ret
fcomip
cltd
inc
jnp
jns
jo
adc
inc
cmp
xchg
add
out
and
jbe
hlt
cmc
test
xor
or
fisubrl
mov
push
xor
push
popa
in
addl
inc
popf
sahf
leave
push
cmp
xchg
popa
mov
addr16
loop
push
adc
call
lahf
dec
bound
sbb
fnstsw
pusha
push
mov
rclb
dec
popa
jp
mov
jle
cmp
adc
pop
icebp
jp
push
dec
adc
imul
pop
sbb
fdivr
imul
rcr
dec
cs
popa
fidivrl
in
rcrb
mov
aad
rorb
gs
imul
sahf
xchg
fmull
cmc
popf
call
sbbb
jns
mov
pop
and
popf
xchg
imul
repnz
xor
sub
inc
adc
bswap
pop
adc
test
loopne
hlt
pop
fildll
dec
loopne
dec
bound
mov
scas
movsl
adc
les
aad
iret
push
mov
je
cld
xchg
iret
insb
push
arpl
sub
idivb
std
out
arpl
sub
das
mov
test
and
loopne
inc
out
cwtl
jo
jnp
fildll
pop
jp
mov
in
adc
sbb
xor
inc
inc
inc
cmp
inc
adc
and
dec
pop
or
arpl
loope
daa
jns
pusha
popf
dec
push
mov
mov
movsl
xchg
push
hlt
ret
fsubrs
jecxz
mov
stos
adc
push
or
movsb
mov
fdivs
addr16
add
cmp
and
lret
inc
inc
nop
xor
mov
and
mov
loopne
sbb
sub
mov
imul
xor
mov
test
cld
jns
test
fcoml
and
lods
xchg
jecxz
inc
sbb
pop
dec
pop
cmp
push
mov
cmp
les
or
dec
flds
and
fidivrl
adc
outsb
or
stc
xor
pop
pusha
inc
pusha
nop
or
dec
out
ret
pop
sbb
out
sahf
push
repz
bound
ret
in
stc
loop
adc
sar
ja
aam
fwait
popf
sub
out
js
mov
shlb
inc
pop
aad
dec
addr16
and
outsl
into
pop
xor
mov
xor
fldenv
inc
and
inc
xchg
fcmovbe
fs
sbb
inc
push
loop
inc
and
mov
jle
adc
in
aas
ja
mov
mov
pop
dec
sub
cmp
fcmovb
pop
sahf
fimull
jae
cwtl
loopne
sti
dec
dec
mov
movsb
sbb
aaa
cmpb
aam
movsl
and
xor
xorb
jg
push
out
loop
dec
mov
cltd
mov
movsb
push
arpl
addr16
xchg
test
or
or
and
xchg
jg
outsl
or
xor
sub
mov
xchg
fimuls
and
mov
adc
or
stos
cwtl
aad
mov
cltd
ljmp
adc
jmp
fwait
cmp
push
and
pop
and
mov
pop
or
mov
popa
lock
fadd
and
xchg
imul
mov
pop
pushf
imul
nop
shl
pop
outsl
pop
and
adc
push
fildll
insl
adc
adc
cmp
test
mov
in
mov
les
add
xchg
roll
jge
and
inc
test
and
fidivrs
sahf
imulb
inc
push
in
dec
arpl
pop
mov
loope
xchg
jge
fwait
inc
add
pusha
cmp
inc
pushf
cmpsb
sbb
icebp
and
xor
push
mov
ljmp
or
scas
fdivl
mov
xor
inc
loopne
mov
cmp
mov
mov
add
aam
ficoml
mov
mov
or
ror
les
imul
mov
call
popa
inc
and
mov
pop
ljmp
in
lods
xor
xor
pop
pop
test
mov
jmp
cmp
or
out
fsubl
jns
mov
xchg
fdivr
sbb
sbb
pop
stos
adc
dec
fcom
imul
dec
xor
pushf
imul
fcompl
mov
push
mov
inc
and
add
push
xchg
nop
pop
cmp
ds
push
fs
push
lahf
hlt
xor
push
iret
jle
adc
imul
vprotb
inc
in
mov
stos
mov
in
lcall
fbstp
in
lods
sbb
cs
stos
xchg
mov
adc
and
sbb
cmp
fdivp
sbb
arpl
ret
repnz
orb
out
rcrl
inc
pop
xchg
push
mov
inc
add
and
or
jp
or
mov
out
stos
lret
xchg
mov
std
push
xrelease
imul
popa
sbb
fisubrl
pop
inc
jmp
test
pop
imul
push
mov
dec
lds
adcb
xchg
push
pop
ss
mov
and
stos
push
pop
pop
push
sbb
pusha
adc
dec
lret
xchg
adc
imul
je
popa
mov
loopne
dec
mov
stos
mov
imul
fisubrl
cs
data16
pop
orl
pop
stc
mov
das
pop
pop
dec
out
imul
addr16
in
aam
movsb
imul
xchg
mov
or
aam
cmp
hlt
es
loope
ds
cmp
popf
aad
xlat
int3
add
pop
pop
mov
jp
mov
pop
pusha
lea
hlt
pop
imul
cmp
fdivr
orl
les
pop
jb
insl
js
adc
inc
loopne
cmp
mov
out
mov
loop
addr16
xchg
out
push
pop
jge
inc
scas
iret
imul
addr16
out
jb
mov
sahf
test
jl
adc
dec
dec
adc
jno
adc
dec
daa
jge
dec
repz
cltd
movsb
or
mov
aas
dec
aad
aad
jne
jo
test
sbb
je
ss
push
arpl
rclb
xor
shll
int3
dec
sub
into
popa
jl
xchg
inc
and
pop
imul
push
or
jb
adc
pop
push
fildll
inc
sahf
jp
sbbb
xchg
loop
cmc
xchg
pop
movsb
ljmp
ficoms
leave
add
sbb
out
mov
and
ret
xchg
dec
add
sub
pop
in
pop
sub
loopne
es
mov
mov
sbb
movsl
pop
xchg
int
jno
or
imul
pop
movsb
mov
xor
cmp
test
addl
push
push
lcall
les
lock
ljmp
divl
test
jne
in
insl
es
stos
mov
adc
popf
lods
add
mov
into
dec
jle
addl
pop
sbb
stos
fstps
and
add
jo
inc
xchg
popf
mov
aam
iret
sahf
push
cmpsl
outsl
xor
jne
divb
mov
loop
out
inc
xor
push
xor
push
sar
das
add
xchg
mov
pusha
sete
fdiv
adc
push
mov
jmp
lahf
mov
push
mov
sbb
adc
pop
jnp
jmp
sbbl
inc
lcall
pop
outsb
sub
xor
fmuls
inc
test
mov
push
iret
push
mov
in
and
outsl
xor
jbe
ss
fwait
arpl
fnstsw
xorb
xchg
nop
daa
das
mov
pop
cmp
fists
inc
cmp
test
popf
lds
sbb
or
mov
add
add
sub
or
pop
lahf
mov
fimuls
or
mov
sub
adc
push
xchg
sub
ret
movb
roll
sbb
ljmp
lcall
or
negb
mov
mov
sbb
pop
cmc
les
push
hlt
cmp
and
cltd
push
push
sub
mov
xchg
xlat
bound
fnsave
fs
pop
xchg
clc
mov
pop
mov
and
roll
xor
adc
movsb
movsl
mov
add
jmp
scas
insb
test
repz
jl
aam
and
and
xchg
push
or
imul
xchg
dec
mov
test
cmp
jge
mov
and
mov
add
cmp
mov
imul
mov
sbbl
xchg
popa
pop
adc
inc
xlat
mov
arpl
iret
adc
adc
adc
or
adc
pop
je
in
nop
insl
mov
or
xor
into
loopne
arpl
inc
daa
pop
jg
jae
test
es
test
lds
mov
push
aas
add
andl
and
lock
jle
sbb
lcall
mov
cwtl
lahf
pushf
adcb
fcompl
popa
xchg
andl
mov
and
popa
scas
adc
mov
ret
lcall
and
loope
daa
loopne
mov
adc
clc
push
mov
pop
add
adc
fcmovbe
rcll
and
mov
enter
and
repnz
popf
nop
popl
and
mov
inc
loope
mov
sub
mov
rorb
fstpt
inc
cmp
mov
or
cmp
bound
fwait
xchg
aas
arpl
dec
sub
sti
loope
sbb
and
mov
jae
mov
in
outsl
mov
xchg
or
jmp
bound
xchg
pop
addl
jge
dec
mov
push
mov
inc
nop
nop
arpl
out
or
mov
les
into
test
xchg
jb
cmpsl
dec
mov
mov
fsts
pop
cmpsb
mov
fsubrl
movsb
mov
cmp
sbb
adc
inc
add
pop
nop
popa
dec
mov
push
push
bound
mov
dec
mov
sbb
sbb
mov
cmp
cwtl
sbb
fisubs
imul
add
iret
jl
fildl
push
jb
jge
push
fs
mov
sahf
popa
inc
add
jl
jl
js
js
jl
repnz
fimull
jmp
adc
imul
inc
adc
inc
mov
dec
inc
fistps
adc
xor
pop
jns
mov
push
ss
iret
mov
pop
jl
lock
rcrl
leave
sti
ljmp
inc
adc
push
rcrb
cmpsb
ret
cli
xchg
mov
sbb
pop
mov
rcl
mov
fisttps
out
mov
rcrl
inc
popa
test
pushf
add
and
imul
movsb
loop
or
rcrl
pop
push
sbb
pop
jg
pop
and
or
sbb
mov
mov
mov
inc
sbb
push
add
xor
mov
pop
clc
mov
cmp
and
scas
dec
pop
popf
xor
xchg
pop
mov
pushf
xchg
cmp
sbb
inc
mov
arpl
lahf
jl
lock
and
movsb
pop
mov
mov
mov
push
jb
scas
and
fsubrs
orl
lods
sbbb
popa
or
pop
cmp
int
cmpsl
pop
cmp
adcb
xchg
push
mov
loop
inc
dec
outsb
shr
jns
jmp
cmpsl
or
cltd
imul
sub
adc
mov
js
loope
adc
scas
sbb
jnp
push
dec
fnsave
jb
orb
push
loop
mov
mov
or
xor
xchg
ja
inc
loop
int
sub
mov
inc
fstl
add
push
lods
popa
addr16
pusha
pop
cmpsl
data16
xchg
data16
mov
ljmp
and
pop
xchg
mov
pop
dec
out
mov
mov
hlt
mov
pop
cmp
inc
push
and
arpl
in
xchg
arpl
jo
sbb
mov
add
pushf
mov
cmp
push
push
ret
addb
mov
xor
xchg
push
mov
roll
ljmp
sub
xor
rcl
arpl
cmpsb
and
iret
add
push
mov
imul
adc
shrb
in
or
fistpl
repz
xor
mov
punpckhwd
fxch
mov
add
mov
mov
in
push
in
or
jg
out
add
sub
pop
loop
mov
mov
nop
inc
mov
loop
mov
sbb
insb
fcoml
push
fwait
push
xorl
call
mov
xchg
inc
insl
out
arpl
ljmp
mov
pop
out
sbb
pop
cmp
cltd
xchg
mov
adc
stos
xchg
xchg
movsl
mov
imul
xor
loopne
fmul
int3
push
xchg
adc
push
lock
pop
iret
in
andl
scas
mov
mov
test
and
mov
mov
mov
ffree
mov
movsb
leave
adc
adc
lods
adc
daa
loop
nop
cmp
push
and
and
adc
mov
sbb
xor
sbb
loope
adc
jne
leave
cmpb
xor
je
dec
sub
pusha
and
and
adc
mov
dec
sub
je
mov
push
shlb
inc
jge
push
loope
cmc
inc
or
fsubrl
cmp
nop
lods
subb
xchg
jmp
sbbl
fcom
jbe
loopne
lock
jmp
in
mov
adc
lcall
in
shlb
xor
rolb
cmc
jg
je
faddl
adc
push
inc
pop
test
jo
pusha
jecxz
jecxz
lahf
dec
in
inc
push
addr16
rol
lea
imul
in
pop
fcompl
adc
cmp
and
inc
movsb
loope
or
pop
lret
adc
pusha
pop
mov
add
in
push
xor
mov
or
popa
mov
jbe
shll
adc
push
fadd
adc
or
test
cmp
jo
cmpsb
pop
add
fildll
xchg
or
mov
jl
addr16
push
inc
std
or
pop
pop
adc
mov
or
and
sub
fsub
call
push
fidivl
xchg
iret
jo
and
push
pop
fldz
pop
stos
cmpsl
insb
sahf
or
pop
xchg
addr16
mov
push
sub
pop
push
sbb
sbb
dec
xchg
cwtl
and
jle
jno
stos
mov
loopne
add
sbb
imul
sbb
lret
and
imul
cld
xchg
sbb
adc
sub
sub
fcompl
jae
mov
ja
outsl
dec
xchg
cmc
fs
jnp
repz
jecxz
das
mov
in
sub
xchg
sbb
dec
shl
sti
cmp
inc
mov
adc
hlt
lret
mov
mov
xchg
es
push
xor
jo
add
jae
notl
cld
mov
jb
pop
repz
addb
data16
pop
push
mov
aam
push
ret
xchg
out
cmp
pop
jmp
test
dec
push
loop
imul
adc
and
mov
shrl
lods
jge
lret
push
les
mov
jmp
hlt
adc
mov
xor
movb
shrb
iret
xor
imul
xchg
popa
and
adc
jp
push
and
sub
adc
lahf
bound
jge
xor
and
pushf
lret
cmp
push
sbbl
adc
in
inc
arpl
mov
in
stc
fildl
push
xor
in
arpl
fs
or
inc
mov
addl
inc
movsb
sbb
fwait
add
mov
add
sbb
push
add
add
or
mov
inc
push
push
pop
mov
cmp
sbb
xchg
cmp
imul
psubw
add
loope
dec
addr16
push
gs
mov
jmp
mov
mov
in
inc
cmpsl
jno
movsb
shrl
adc
popa
ja
ret
fsub
insb
lahf
js
lret
sub
lahf
add
xchg
in
adc
xchg
inc
lds
pushf
cmpsl
jge
cmc
shll
test
pop
jne
insl
mov
test
dec
pop
or
pop
test
jae
sbb
jno
call
pop
inc
out
xchg
lret
hlt
cmp
mov
outsl
xchg
fisubl
in
movsb
or
das
aaa
sub
pop
xor
enter
mov
in
test
mov
lcall
mov
pop
ljmp
movsb
push
sbb
arpl
and
fisubs
inc
insl
push
mov
cmpsl
sbb
fistl
inc
mov
in
in
movsl
xchg
xchg
mov
int
dec
pop
shl
inc
add
arpl
stos
std
cmpsb
sti
in
jmp
jl
mov
fsub
mov
adc
xchg
xorb
lea
rcll
cltd
scas
movsb
lahf
imul
pushf
mov
pop
xchg
outsb
int3
adc
pusha
stos
mov
call
je
popf
ret
lea
or
les
sub
mov
mov
outsb
sbb
inc
sbb
xchg
movsb
fwait
popf
jmp
mov
push
rcrb
fidivrl
outsl
mov
loope
inc
insb
inc
dec
jl
jae
add
sahf
adc
or
jbe
push
out
pushf
aam
add
cwtl
jg
push
sbb
stos
pop
or
pushf
call
loopne
stos
mov
stc
cld
xor
push
or
imul
cli
and
movsb
repz
sbb
push
dec
pop
nop
lods
ret
add
adc
arpl
xchg
fwait
ret
out
pop
arpl
mov
ret
mov
ds
pop
xchg
out
dec
or
push
mov
insl
cmp
jo
cmp
pop
push
add
outsl
mov
and
sub
pop
adc
je
ljmp
in
push
aaa
pushf
es
cwtl
ja
addb
dec
popa
cs
xchg
jecxz
lods
shl
test
push
mov
and
fidivl
loop
mov
enter
and
imul
xor
and
movups
iret
xchg
push
inc
lds
sub
stos
pop
out
mov
sbb
jmp
xchg
stos
in
cmp
loop
mov
xor
sbb
imul
adc
testb
loopne
mov
fadds
jb
mov
xchg
hlt
aaa
popf
movsb
pop
xor
xor
sbb
push
dec
int
loopne
inc
pop
in
inc
xchg
dec
dec
subl
fstps
movsb
popa
sbb
xchg
mov
and
hlt
xchg
xchg
and
push
ja
pop
pop
bound
fcoml
test
pop
xchg
or
pop
pop
sbb
pusha
movsb
and
test
imul
jnp
jp
pop
mov
filds
sti
jnp
in
pop
pop
pushf
xor
push
pop
in
cmp
xchg
push
imul
sub
mov
ret
push
shll
jge
push
and
ljmp
mov
popf
rcll
addb
fidivrl
xchg
test
inc
dec
cmp
lds
aad
jno
push
jp
fld
pop
push
mov
inc
imul
popf
in
int
jg
and
bound
sub
popa
ret
insb
lret
xchg
in
ficoml
xchg
aam
xlat
mov
sub
aad
jl
xchg
bound
xchg
orl
mov
stos
push
sbb
fidivl
jno
shlb
ret
jecxz
sbb
mov
xor
xchg
and
cmc
popf
jno
add
and
or
push
es
das
xchg
and
jp
ss
sbb
mov
or
les
add
mov
nop
pop
jle
sbb
les
mov
cmp
add
movsl
pushf
test
sti
pushf
or
arpl
ror
ja
push
test
inc
sub
aas
adc
outsl
jbe
ss
cmp
pop
pop
setnp
inc
cltd
lcall
fildl
lahf
loope
insl
fdivl
arpl
stos
in
sub
push
sbb
push
push
shll
pop
pop
and
icebp
sub
and
insl
loopne
and
adc
pushf
mov
and
sbb
cmpsl
jge
jge
out
and
hlt
into
imul
cmp
jo
aaa
fcoms
xor
mov
push
je
rol
jl
test
inc
cli
fadds
and
movsb
cli
cltd
and
or
cmc
add
movsl
xchg
mov
push
adc
aam
in
and
repz
mov
mov
mov
popa
lcall
sbb
add
cmp
xchg
pop
dec
ret
mov
fsub
jae
and
inc
inc
imul
jl
xchg
sub
jnp
xor
cmp
xchg
xor
test
pop
sti
mov
pop
test
pushf
pusha
mov
inc
mov
pop
imul
push
lock
mov
xchg
cmp
and
mov
dec
sahf
shl
mov
sub
nop
push
sbbb
fnsave
mov
dec
xchg
inc
clc
push
pop
sub
and
test
jae
inc
push
lds
jmp
fnstenv
mov
test
sbb
loopne
add
sub
sub
and
andl
out
xor
into
sub
xchg
cs
and
popf
ret
shrb
aas
push
mov
xor
jp
ljmp
insb
or
add
adc
js
mov
add
test
sarb
movsl
in
adc
xor
repz
mov
or
inc
xor
cwtl
adc
xor
inc
lahf
in
fisubs
imul
xchg
mov
add
pop
dec
out
loope
dec
mov
lahf
out
icebp
mov
mov
bound
imul
das
hlt
std
data16
mov
outsb
insb
xchg
and
mov
push
lret
shl
test
adc
mov
insb
mov
shl
push
xor
and
movsb
xlat
imul
inc
jl
ds
and
pop
cmp
mov
xchg
mov
jbe
dec
push
dec
ja
xchg
loopne
lahf
push
inc
ljmp
test
mov
in
push
jecxz
decb
xchg
mov
test
ja
pop
andb
mov
jno
in
ja
scas
pop
sub
dec
hlt
cmpsb
jae
shll
cmp
insb
adc
or
mull
sahf
test
push
jbe
mov
lahf
xor
arpl
pop
mov
ficomps
cmp
xchg
mov
or
test
xchg
xchg
push
and
mov
fs
stos
push
xor
adc
repnz
xchg
sub
imul
mov
sub
imul
bound
push
stos
pushf
push
push
addr16
mov
mov
inc
add
and
xchg
push
ret
fnstcw
cmp
data16
stos
or
ret
call
rcll
xchg
sti
inc
sub
fisubrs
leave
inc
andl
data16
icebp
mov
bound
test
arpl
adc
hlt
or
sub
rcr
inc
add
and
test
jle
stos
shrl
pop
jne
adc
rclb
add
inc
iret
fcoms
mulb
int
push
adc
pop
addr16
fsubl
imul
xchg
fdivl
addr16
pcmpeqd
fdivrl
push
push
xor
sahf
sbb
fcoms
and
movsb
xchg
mov
mov
and
push
int
adc
add
jb
movsb
adc
jne
jae
sbb
jb
jne
jno
adc
pcmpeqw
insl
repz
adc
repz
fldl
mov
addb
lea
add
or
stos
jp
test
dec
mov
cmc
das
adc
jae
xchg
cmc
pop
cmp
data16
lret
fwait
hlt
pusha
jne
lcall
sbb
mov
push
fbld
movsl
inc
test
insl
andb
es
insb
fildl
orb
cmpsb
pop
imul
and
push
xchg
in
xor
fs
test
or
pop
hlt
hlt
ret
adc
inc
xchg
jo
inc
in
push
mov
dec
and
lahf
loop
out
fidivrs
loope
xchg
scas
daa
or
and
in
lods
fidivs
adc
xchg
jne
xchg
out
fldt
mov
or
mov
icebp
cmp
pop
mov
mov
push
shll
fld
mov
sbb
xchg
sbb
xchg
pop
mov
mov
pop
xchg
pushf
xor
pushf
and
sahf
pop
out
dec
lods
aas
lea
jg
jne
adc
int3
jl
sbb
jnp
mov
inc
ljmp
dec
sub
xchg
popa
sbb
aam
aad
push
xchg
fcoms
mov
cld
aam
mov
xor
insb
push
xchg
inc
pop
xchg
inc
fldcw
jae
sahf
xor
pop
pop
inc
andl
lds
jo
pop
pop
mov
and
mov
out
int
loop
ljmp
mov
cmpb
shlb
int
stos
mov
sbb
mov
and
movsb
pop
test
pushf
push
sub
addr16
jno
shlb
xchg
arpl
jge
shlb
lret
push
xchg
sahf
dec
dec
or
imul
arpl
jo
sub
inc
and
sub
sahf
imul
mov
jle
push
inc
inc
loope
mov
pop
sbb
add
inc
sbb
shll
lds
iret
jp
and
and
shrb
and
out
adc
imul
mov
add
and
stos
inc
jmp
inc
ljmp
icebp
mov
and
mov
rorl
cmpsl
inc
add
jae
inc
xchg
mov
outsb
push
inc
insb
sahf
shlb
cld
iret
lods
mov
jmp
movsb
cmc
sbb
inc
and
xchg
inc
xchg
sbbl
les
mov
iret
repz
popf
in
mov
sbb
test
and
push
pop
fidivl
xchg
bound
xchg
mov
dec
outsl
cmp
lret
mov
jno
imul
repz
scas
rcrb
pop
es
iret
fucomp
jns
shrb
sub
bound
pop
ja
add
inc
mov
lret
leave
gs
and
add
popa
ljmp
aas
rolb
pusha
mov
jl
std
jb
insb
inc
mov
pop
mov
fs
test
jecxz
in
orl
pop
mov
xor
out
sbb
daa
loopne
cli
adcl
and
mov
mov
ret
xchg
xor
sarb
data16
pop
les
ffreep
mov
adc
mov
mov
jmp
lret
dec
pop
mov
mov
mov
in
packssdw
pop
inc
rorl
rorb
out
jae
add
mov
pushf
mov
lods
cmp
sbb
out
in
pop
add
inc
pop
aaa
inc
xchg
sbb
ja
add
rolb
dec
adc
dec
and
push
pushw
js
xchg
adc
push
jno
pusha
into
xor
adc
iret
movsl
pop
leave
pop
fnstenv
mov
xor
jae
sub
ds
ja
insb
popf
xor
xchg
fisttps
fwait
stos
inc
imul
sbb
inc
mov
outsl
jno
xor
xchg
sbb
inc
sti
lahf
pop
loopne
fcoms
sahf
lds
sbb
adc
mov
mov
push
loopne
loope
js
test
inc
jmp
inc
dec
test
sbb
hlt
jg
dec
adc
xchg
sub
rcl
je
sub
insb
hlt
ror
cltd
test
insl
inc
cmp
jle
stos
sbb
adc
rorb
shr
fsubrs
test
mov
ds
rcrl
addr16
ljmp
push
xor
sub
xor
movsb
add
or
ret
mov
jg
int
in
or
inc
test
push
imul
mov
cltd
imul
insb
imul
sub
in
movsb
jns
pop
xor
lret
cwtl
xor
aam
aaa
in
sub
push
dec
daa
ret
imul
dec
mov
ficomps
or
mov
pop
sbb
cmp
jae
dec
mov
insl
aad
xchg
addl
mov
push
insl
int
je
inc
out
mov
mov
mov
imul
xchg
mov
popf
adc
imul
je
fildll
scas
mov
sbb
sahf
cmp
fsub
rol
popa
ja
enter
insl
mov
lahf
dec
or
mov
sbb
push
roll
push
sbb
into
inc
or
inc
pop
sub
inc
or
push
fs
jle
push
cs
mov
lds
insl
xchg
mov
mov
push
pop
icebp
fs
ljmp
mov
xchg
stos
nop
imul
aas
and
xchg
lahf
sahf
dec
sbbl
mov
jg
ja
test
mov
loopne
repnz
jae
dec
pop
mov
icebp
push
and
cltd
jnp
pop
sub
sub
and
inc
cmpsb
adcl
xor
push
cmp
or
stos
movsb
cmc
adc
or
cmp
add
and
imul
mov
inc
jae
fldt
push
in
add
loopne
iret
add
xchg
or
jns
fsub
in
pop
push
sahf
ja
filds
jo
fmulp
test
test
out
xchg
adc
inc
adcl
lahf
cld
faddp
ss
jne
xchg
sbb
xor
sbb
sbb
test
icebp
sbb
loopne
xchg
and
ret
jne
icebp
fildll
lahf
inc
cmc
jo
ret
push
dec
and
jg
decl
fs
enter
xlat
aaa
mov
add
mov
addr16
xor
or
addb
mov
jb
jns
shll
mov
mov
push
mov
mov
mov
shr
add
pop
ret
fdivrs
jl
inc
dec
push
xchg
adc
ja
adc
pop
hlt
inc
int
mov
ret
dec
data16
test
sbbl
push
sarb
roll
dec
popa
mov
cmp
into
mov
xlat
int
hlt
mov
jne,pn
fwait
iret
cmp
adc
fsubp
xchg
push
jnp
mov
push
push
inc
push
es
jne
mov
fnstsw
dec
xor
lahf
adc
sahf
fwait
imul
movsl
jmp
das
hlt
sbb
mov
arpl
mov
push
push
stos
mov
popa
iret
ss
add
sti
pop
adc
mov
pop
add
jnp
dec
fildll
push
cmp
fcom
jns
fxch
and
xchg
ficomps
stos
lods
xchg
inc
sarb
sbb
lcall
sub
xor
xchg
ret
jne
in
and
push
fcomps
test
push
mov
cmp
dec
lcall
mov
sarl
or
cmpsb
push
sbb
orl
xchg
pop
iret
dec
repz
sti
inc
add
jne
lahf
fisubl
push
cmpsb
imul
into
shlb
stos
push
push
popf
fbstp
inc
ret
adc
daa
aad
test
xor
mov
push
shr
popf
mov
imul
jo
sub
jecxz
adcl
pop
data16
pop
iret
mulb
leave
mov
inc
jb
arpl
fwait
ljmp
mov
into
or
sub
add
loop
cmc
popa
mov
insl
loopne
sub
or
sbb
xor
xchg
dec
cmp
adc
popf
scas
in
inc
mov
add
adc
and
inc
jl
jecxz
ret
mulb
jno
imul
xchg
inc
mov
push
data16
dec
sbb
add
or
mov
inc
lds
or
clc
in
mov
jae
sub
pushf
fcmovbe
inc
adc
lds
adcl
adc
lahf
xchg
rcrl
in
sahf
movsl
inc
jns
lds
fiadds
bound
mov
fs
lahf
jl
push
push
cmp
and
inc
jle
inc
or
xor
movsl
xchg
arpl
pop
je
mov
adc
iret
data16
sub
jl
add
sbb
lret
stos
ffreep
loop
ds
das
dec
sub
mov
mov
push
or
cmp
cmp
dec
add
and
icebp
cmpsl
mov
ret
inc
pop
xchg
jns
loop
ror
wrmsr
sbb
and
int
sbb
mov
pop
or
and
stos
aaa
cmc
enter
cwtl
xchg
mov
sbb
popa
mov
push
sub
dec
or
imul
jle
pop
push
adc
jnp
insl
mov
inc
jae
insb
sbb
push
pop
sub
leave
sahf
int
popa
push
andl
sub
cmp
sbb
leave
loop
mov
pop
das
lock
pusha
mov
jmp
pop
xchg
jae
xchg
mov
rcrl
pop
nop
nop
in
xor
shrb
xor
push
push
mov
jmp
lahf
or
push
mov
dec
pop
arpl
ficompl
fcomp
sbb
mov
imul
jg
or
mov
or
and
test
push
mov
pop
xor
repz
in
pop
imul
add
rcrb
ffree
idivb
loope
jmp
add
or
mov
or
pusha
mov
cmc
or
mov
movsl
pushf
inc
xchg
insb
add
add
les
movsb
or
mulb
inc
addr16
fisubs
cli
push
test
mov
fcoml
xor
jecxz
mov
mov
div
and
jl
jb
aad
insb
pop
lcall
popa
sti
loop
sbbl
xchg
lods
scas
sbb
jae
jne
ja
jns
jnp
jge
jg
les
sti
popa
push
imul
push
sbb
imul
push
addr16
dec
and
iret
pop
shl
imul
pop
mov
mov
push
push
mov
inc
adc
in
and
jl
and
loope
lcall
mov
inc
sbbl
addl
andb
adc
mov
adcl
in
aad
insl
jl
adcb
out
cmp
leave
jmp
jmp
mov
test
orb
xchg
arpl
mov
mov
lahf
lock
mov
lock
mov
lock
movsb
dec
pushf
jle
mov
jg
jnp
jbe
orl
sbbl
jbe
mov
inc
mov
les
es
or
adc
outsl
jmp
imul
jl
rcrb
mov
adc
pusha
inc
ret
jg
inc
add
inc
fwait
in
pop
and
mov
insb
and
test
js
flds
cld
add
push
in
inc
iret
mov
pop
arpl
inc
or
mov
push
mov
lahf
test
movsb
lods
adc
inc
pop
inc
xchg
dec
xor
mov
xchg
or
dec
mov
movsb
mov
lds
movsb
xchg
mov
mull
imul
fisttps
addr16
repnz
sti
dec
mov
pop
arpl
repz
out
movsl
cwtl
sbb
mov
inc
nop
loope
xchg
insb
xchg
fsts
sbb
cld
jae
push
push
jle
adcb
loop
imul
fimuls
cltd
adc
and
loope
push
mov
movsl
ja
stos
xchg
cltd
or
es
inc
ljmp
jecxz
jbe
inc
sbb
outsb
and
stos
xor
movsb
outsl
xchg
movsb
and
dec
movsl
mov
adc
jmp
lock
test
mov
sarl
push
outsl
ja
and
jmp
jne
inc
mov
dec
shll
add
sbb
aam
adc
and
mov
enter
sbb
jl
xchg
fldt
sarl
lret
adc
cmp
hlt
sarl
dec
cli
fstp
adc
popa
lret
push
jmp
shrb
push
pop
data16
fs
mov
push
pop
xor
in
jae
and
bound
adc
pop
inc
xchg
in
pop
xchg
mov
ret
sbbl
lret
clc
ja
mov
cmpsb
xchg
fidivl
push
and
nop
and
mov
cmp
or
mov
lds
push
cmp
jnp
dec
mov
test
dec
mull
dec
mov
stos
das
or
mov
and
push
stos
xchg
ja
inc
int3
rcrb
loopne
pop
jp
dec
and
jg
imul
mov
in
xchg
push
insb
xor
push
jecxz
rcrb
repz
and
or
inc
and
dec
xchg
mov
adc
jp
cmp
mov
xlat
xchg
sbb
test
ss
outsb
sbb
add
mov
sbb
pop
xor
and
movsl
pop
jo
cmp
cmpsb
and
les
mov
test
fiadds
dec
lods
push
testb
js
mov
cmp
and
repnz
inc
inc
cmpsb
arpl
fs
fidivrs
inc
shlb
cmp
dec
mov
insl
push
or
filds
lcall
fadd
lods
loopne
jbe
fldt
and
pop
dec
sub
repz
imul
cltd
mov
dec
push
xchg
imul
fldcw
mov
lahf
push
pop
sbb
ljmp
adc
pop
jl
nop
inc
sbb
or
inc
mov
inc
out
sub
jge
cs
out
loop
mull
fsubrl
hlt
xchg
das
xchg
mov
in
dec
push
and
push
fcmovnb
sub
xor
cltd
or
cmp
mov
inc
loop
sub
loope
enter
imul
lock
sub
mov
div
push
push
push
je
in
jo
cmp
mov
cmp
cltd
xchg
jne
jl
inc
mov
pushf
cltd
fdiv
sbb
int3
push
sbb
push
push
outsb
xchg
and
inc
movsb
push
cmp
add
insl
addr16
outsl
mov
in
lea
cmp
push
inc
jae
dec
outsb
lea
fnstenv
xchg
sub
adc
cmpb
pop
int3
ljmp
sbbl
shlb
inc
push
outsl
sahf
xchg
pop
fisttpl
out
cmp
sbb
mov
orl
into
aaa
sub
nop
jbe
scas
addr16
xlat
xchg
jb
sbb
lahf
bound
or
mov
bound
icebp
jo
repnz
cld
dec
mov
mov
cmc
rorl
stos
cld
fimull
jae
mov
xor
imul
aad
sbb
outsb
push
or
jne
pop
into
aas
arpl
dec
fstpl
mov
sbb
repnz
sbb
and
jp
out
or
mov
dec
lds
add
popf
xchg
pusha
hlt
adc
push
arpl
lea
pushf
ljmp
or
test
pop
jae
push
mov
repz
pop
loopne
push
adcl
jae
cwtl
jno
push
or
xchg
pop
mov
xchg
fwait
sub
xor
xchg
jo
sbb
jne
xor
mov
movsb
cmpsl
sub
mov
pop
in
sbb
xlat
pusha
adc
adc
cmp
xor
stos
js
xchg
mov
or
jne
mov
js
push
mov
inc
lret
push
fcmove
inc
or
xor
push
mov
xor
and
and
and
or
mov
fcom
and
loopne
push
lea
icebp
test
fs
out
jne
mov
in
pop
in
jge
ret
jmp
pop
dec
adc
push
sbb
enter
mov
inc
fwait
xchg
and
jmp
xchg
in
dec
fmul
inc
clc
pop
stos
jne
adc
push
pop
jle
rorb
dec
movsb
scas
div
rolb
mov
in
fdivs
and
pushf
bound
mov
out
std
pop
xchg
dec
shlb
mov
dec
in
pop
xor
xchg
jmp
or
mov
andl
out
pop
ds
mov
js
xor
test
ret
mov
cmpsl
out
pop
mov
inc
dec
jl
and
stos
push
inc
shrb
lahf
js
stc
xlat
cmpb
movsb
adc
jns
pop
inc
adc
mov
pushf
in
in
xor
push
dec
mov
xor
dec
dec
mov
dec
lods
bound
add
in
mul
adcl
and
ror
or
pop
stos
arpl
mov
jnp
lahf
ljmp
sbb
jae
pop
test
cmp
sbb
or
hlt
and
cltd
sub
in
test
cmp
dec
outsl
pop
cmp
das
pop
or
xor
sub
mov
push
movsl
out
push
popf
mov
xchg
mov
xlat
mov
sub
jb
in
xchg
aam
xchg
add
jnp
decb
call
dec
sar
sahf
cwtl
mov
jle
scas
fs
stos
adc
stos
add
fidivl
push
popa
push
ljmp
mov
mov
fcmovbe
fs
dec
lcall
shl
xchg
jge
inc
push
jl
mov
mov
jnp
jae
fcom
movsl
hlt
xor
xlat
pop
xchg
sub
or
cld
insl
sbb
mov
mov
fs
in
mov
sbbl
xor
cmp
outsl
popa
inc
adc
mov
movsb
xor
aas
cmp
add
outsb
push
aas
mov
mov
mov
out
mov
int3
ret
pop
inc
add
aaa
mov
push
pop
xlat
xor
push
mov
imull
aam
ss
lds
xchg
mov
outsl
repz
cltd
pushf
xor
cmp
cmp
and
jne
adc
inc
pop
ret
sub
data16
pushf
testl
xor
or
mov
cltd
pop
out
aam
fidivl
and
mov
insl
cmp
daa
andl
test
subb
xchg
movsb
inc
test
and
test
scas
add
cwtl
aaa
rcll
rorl
testb
mov
int
std
jbe
cltd
push
add
aam
jae
daa
test
adc
dec
and
xchg
ljmp
fstps
add
aaa
sub
push
mov
fistps
out
gs
data16
jmp
and
sub
mov
fnstsw
cmp
ret
mov
stos
push
loopne
in
jecxz
rcll
movsb
fwait
movsb
mov
ja
xchg
and
ffreep
int
mov
insl
daa
fs
orl
sub
ffree
xor
jle
insb
daa
shrl
mov
inc
sbb
and
inc
mov
cmpsb
mov
xor
add
cltd
mov
jae
cmpsb
sbb
dec
and
adc
in
enter
sbb
jecxz
loopne
lea
sbb
cwtl
jns
les
pushf
push
popf
sahf
adc
shrl
out
sbb
lcall
or
repz
imul
xor
insl
pushf
mov
adc
adc
sbb
sub
or
xchg
pop
loope
inc
sub
mov
jb
adc
push
pop
cli
xor
adc
mov
or
xor
sbbb
icebp
dec
push
xchg
in
icebp
sbb
and
and
and
dec
or
xchg
cld
dec
pop
test
cmp
outsb
push
mov
pop
inc
mov
rcrb
insb
adc
out
adc
and
jbe,pt
and
sarb
mov
sbb
adc
adc
pop
loope
incb
inc
lcall
xor
and
lahf
xchg
sub
and
in
jb
popf
iret
fucomip
sub
xchg
std
rclb
test
iret
inc
loop
icebp
movsl
mov
rcrb
stos
bound
fstps
jmp
shrl
and
fcompl
addr16
and
outsl
or
mov
mov
ret
into
stos
xor
lcall
mov
mov
jge
mov
outsl
or
arpl
push
hlt
shlb
xor
pop
sti
cmp
sahf
sub
les
adc
sbbb
xchg
fcoml
xorl
xchg
dec
mov
movsl
pop
xchg
addr16
test
fldcw
xchg
adc
out
xchg
jp
dec
and
icebp
dec
and
popf
int
xchg
xor
enter
rcll
sub
loope
test
movsl
mov
xchg
adc
inc
mov
add
pushf
pop
popw
sbb
push
mov
fsubp
dec
fcomps
pop
loop
lcall
cwtl
adc
fidivrs
adc
dec
dec
loop
or
xor
pushf
push
inc
enter
cmc
and
ret
test
jl
dec
adc
aam
push
leave
mov
cmp
loop
cmp
ds
push
fdivrl
sti
pop
test
aad
fwait
xchg
sbb
cmp
popa
mov
cmc
hlt
jmp
nop
or
add
popa
loopne
sbb
xor
fistpl
clc
scas
cmp
mov
push
pop
jle
cli
leave
in
jg
add
cld
loopne
iret
jne
inc
adc
movsb
sub
ljmp
dec
jmp
lret
fldcw
rclb
mov
aad
sub
push
xlat
int3
sbb
xchg
cmc
cmc
sbb
scas
mov
or
andb
mov
movsl
pusha
insb
push
sbb
xchg
negb
imul
popa
ss
inc
shll
je
rolb
add
out
jne
ljmp
dec
testl
mov
mov
cltd
ret
pop
fidivrl
fwait
push
add
and
data16
jae
cmp
test
dec
xchg
aam
imul
cld
leave
and
fldcw
push
jle
sbb
adc
call
popf
ds
pushf
imul
enter
in
testl
xchg
and
sub
aaa
ja
or
push
mov
cmpsl
add
dec
inc
aad
rorl
inc
stos
fbstp
cmp
and
push
scas
xor
add
cmpsb
pop
ljmp
push
insb
addr16
mov
push
pushf
mov
dec
movsl
push
sbb
mov
out
xor
inc
xor
or
scas
repz
std
push
cmp
repnz
popf
lahf
xchg
xchg
mov
repz
fldcw
loop
imul
jle
in
or
mov
aas
adc
and
stc
ret
push
iret
movsl
adc
mulb
cld
mov
cltd
adc
les
mov
mov
cld
loope
popf
mov
mov
and
or
mov
fwait
mov
mov
and
mov
loope
fidivrs
bnd
repz
xchg
pop
mov
xor
mov
pop
jmp
or
jp
jns
push
and
fs
fs
bound
lea
sub
mov
lea
decl
ss
jno
ret
inc
hlt
xor
inc
jo
repz
cs
or
mov
push
jno
cmp
mov
mov
aas
iret
call
ret
sbb
xor
push
inc
adc
mov
daa
xchg
movsb
inc
cwtl
sub
mov
jae
sbb
fistl
repz
imul
test
neg
pop
adc
ror
mov
inc
pop
mov
push
and
test
mov
pushf
mov
cmc
fwait
addl
insb
and
inc
psrad
cltd
xchg
dec
cmpsl
xor
arpl
add
iret
sub
aam
mov
sahf
ja
jb
pushf
or
loop
xchg
jo
lock
aam
and
in
xchg
push
jecxz
adc
adc
iret
test
cmp
fcmovnu
xchg
xchg
hlt
cwtl
insl
cmp
movsl
fldt
jecxz
lea
push
pop
dec
push
es
inc
pushf
xchg
mov
inc
sbb
pop
fsubl
repz
adc
lret
xchg
fldl
adc
mov
insb
lret
int
loop
out
push
test
daa
and
lret
iret
xchg
imul
fs
add
push
sub
jno
stos
shl
xchg
cmc
mov
jmp
mov
insl
pushf
in
cltd
adcb
and
sbb
nop
pop
imul
popa
inc
pop
stos
fidivs
pop
pop
xlat
xchg
jnp
inc
pop
orb
or
bound
push
adc
nop
jmp
scas
pop
adc
dec
sub
mov
inc
dec
inc
pop
jmp
ret
xor
push
imul
rol
cli
push
movsb
mov
push
cmp
mov
les
popf
sub
nop
mov
shlb
xor
in
push
sbb
and
mov
iret
add
hlt
aam
insl
test
arpl
mov
outsl
das
pushf
in
add
shlb
xchg
mov
adc
mov
jmp
and
mov
jnp
mov
bound
imul
pop
sub
mov
push
push
jnp
loope
dec
daa
std
lahf
sub
push
ret
add
pushf
in
nop
loope
pop
sahf
inc
xchg
cmc
mov
mov
cmp
in
dec
in
shlb
cld
into
rorb
test
test
or
sbb
popf
fistps
fidivrl
sahf
jnp
push
xchg
aad
ror
push
ret
sti
add
push
test
and
and
xchg
xchg
scas
pop
andl
ljmp
outsl
adc
lcall
mov
adc
jns
sbb
push
scas
aad
or
dec
pop
call
adc
sub
test
das
xor
xchg
xchg
sbb
sbb
sahf
xor
add
fldenv
push
fcoml
sub
clc
sbb
adc
insl
pop
cmp
or
mov
aaa
subb
xchg
and
shll
push
daa
or
xchg
xor
xchg
cmp
shl
mov
and
repz
sbb
hlt
jnp
and
mov
mov
mov
loop
xor
xor
push
mov
outsl
in
inc
mov
xchg
test
data16
test
aas
xor
in
pop
mov
lds
lock
pop
cmpsb
push
in
xor
movsb
andl
stos
aad
repz
push
or
into
cmp
adc
push
push
sbbb
xchg
pop
xchg
fmull
pop
dec
mov
and
or
mov
add
push
adc
insl
enter
fisttpll
pop
push
stos
subl
add
xchg
push
pop
fwait
push
pushf
imul
xchg
sahf
popa
and
xchg
xchg
ficoml
inc
xchg
mov
or
js
outsl
dec
rcll
xor
lds
inc
shll
cmp
rolb
xorb
pop
pop
dec
clc
sbbl
rol
cmp
adc
ss
xchg
dec
jle
or
adc
sbb
adc
outsb
pop
popf
adc
lock
xchg
adc
mov
push
imul
pop
fwait
shlb
xor
loope
and
dec
inc
jecxz
and
add
pusha
cmp
xchg
shlb
out
js
cmp
pop
imul
push
lret
inc
mov
orl
push
sub
mov
pusha
adc
mov
xchg
mov
sbb
xor
jg
movntq
out
cmp
enter
sqrtps
ror
imul
jbe
insl
in
push
loope
cmp
push
mov
les
xor
xchg
clc
jge
imul
das
mov
sub
loopne
fs
inc
out
jae
in
jne
xchg
mov
inc
adc
movsl
mov
xchg
and
repz
lret
addr16
scas
xor
addr16
sbb
inc
arpl
sti
sbb
pop
lods
arpl
loope
inc
sub
xchg
negl
pop
cmp
int
insb
into
stos
and
mov
and
mov
push
xchg
je
push
xchg
data16
pop
inc
jne
out
mov
jb
mov
pop
clc
cwtl
xchg
negl
pop
cmp
xor
pop
loope
mov
cmpsl
fwait
xor
out
inc
adc
dec
inc
push
jge
dec
jae
adc
xchg
popa
mov
and
jmp
xor
popa
rcl
movsb
or
add
push
mov
scas
jns
xchg
push
push
inc
and
mov
dec
mov
mov
lock
out
xor
push
cltd
inc
popa
add
mul
mov
lds
pop
mov
pushf
adc
xchg
mov
sbb
jae
sub
and
adc
and
loopne
mov
sub
data16
call
add
lods
dec
inc
test
mov
sub
sub
std
std
lock
adcl
je
ljmp
sbb
push
sub
inc
jl
fcmovnb
aam
xchg
jne
or
lock
pop
jne
jle
outsl
mov
mov
lahf
push
pop
push
and
cmp
ret
enter
jbe
mov
insl
pop
andl
mov
into
cmp
aas
cmp
fucomi
inc
push
lds
iret
mov
push
pop
xchg
addl
jp
and
lods
mov
mov
dec
mov
dec
sar
fstp
and
adc
les
adc
mov
add
or
dec
pand
cwtl
es
mov
pop
xor
and
movsb
daa
imul
fnstcw
cmp
insl
inc
add
push
push
movsb
lret
lock
mov
fmuls
or
in
enter
jl
fwait
xchg
mov
adc
push
rcrb
outsb
fildll
imul
andl
cpuid
arpl
cs
gs
enter
test
and
lods
movsb
outsb
sti
cmp
mov
jle
dec
sub
mov
sbb
ljmp
fistps
jmp
addl
fnstenv
cwtl
inc
popa
andb
bound
fcomp
sbb
ficomps
inc
cmpsb
data16
push
pop
lahf
mov
cltd
mov
testl
testb
outsl
out
pop
aam
adc
je
dec
xchg
stc
and
fs
mulb
mov
sbb
cmpsb
and
or
fs
mov
xchg
sbb
lock
xchg
mov
xor
jmp
mov
inc
jbe
ret
outsl
rcrl
inc
pop
fbld
out
ret
mov
repz
ja
xchg
sarb
ret
outsl
lea
into
pop
fsubl
mov
cmp
sbb
or
inc
fstpt
mov
frstor
insl
in
and
inc
pop
cmp
rolb
cmp
fwait
or
arpl
cltd
xchg
adc
rcr
mov
enter
mov
push
push
repz
mov
xor
mov
out
jmp
les
in
fisubrl
jno
or
loope
cmp
cs
inc
enter
inc
test
iret
ret
cli
in
in
ljmp
sbb
or
pop
out
sbb
fidivs
mov
cmpl
cmp
push
popa
mov
sbb
push
pop
mov
cmp
push
mov
test
test
xor
cmp
pop
sbb
or
rcrb
adc
pop
les
jb
sbb
in
subb
ret
rcll
xbegin
aad
dec
rclb
shlb
and
xchg
xchg
pop
push
loop
stos
jecxz
divl
imul
jge
mov
mov
xor
leave
jge
out
inc
inc
sbb
cwtl
xor
fs
push
loopne
stc
movsb
or
arpl
out
in
fidivs
xchg
push
inc
push
xor
push
scas
or
push
fisttpll
sbb
xorl
and
lret
popf
jp
popf
adc
pop
push
dec
mov
jge
cmpsb
loop
xchg
jbe
sbb
sbb
mov
xchg
imul
add
or
adc
fwait
cmp
movsl
mov
mov
dec
push
gs
imul
stos
push
xorb
mov
xchg
and
rcr
xchg
pop
daa
loop
leave
int
dec
pop
add
inc
stos
stc
cmc
sbb
cmp
subb
and
push
out
shll
add
dec
pop
push
dec
adcl
pop
push
popf
dec
jecxz
sub
sub
jp
mov
jle
cmpsb
and
and
idivb
and
or
shll
xchg
mov
mov
xorb
fistpl
or
in
and
repnz
push
sbb
pop
jmp
iret
mov
xchg
popa
push
scas
imul
shll
rcrl
adc
jmp
mov
push
xlat
sbb
in
mov
andl
aas
inc
popa
mov
sbbl
pop
sahf
cmp
fsubl
mov
test
aam
subb
adc
loope
fadds
mov
jmp
scas
and
mov
sub
fimuls
in
pop
jg
stos
mov
into
dec
js
movsb
push
sbbl
mov
adc
cs
pushf
rorl
testl
arpl
lds
dec
data16
mov
call
push
test
pop
dec
sbb
and
es
push
mov
fidivrl
or
inc
xchg
adc
data16
mov
cmp
mov
mov
push
test
int3
dec
adc
addl
xchg
xchg
sbb
popa
lea
xor
push
dec
jno
inc
shrb
pop
mov
imul
inc
arpl
cmp
xchg
mov
in
and
repnz
fidivrl
enter
mov
lods
aad
in
mov
hlt
inc
movsl
xlat
xchg
push
cmpsb
subb
cmpsl
lods
les
clc
leave
mov
jge
in
fidivl
adc
push
sbb
xchg
adc
adc
dec
mov
cmpl
stos
jmp
adc
add
jo
jecxz
adc
mov
cmp
pop
imul
sub
dec
pop
andl
jle
ret
lcall
push
fidivl
mov
push
sub
dec
imul
in
mov
ja
addr16
mov
and
imul
and
jge
imul
mov
sbb
in
icebp
mov
mov
sbb
xor
mov
mov
mov
stos
adc
test
out
ret
pusha
sub
loopne
fwait
clc
sub
sti
dec
dec
loopne
cli
aad
push
es
stc
loop
and
imul
xchg
in
daa
lock
test
or
repz
out
sub
fimull
sub
shll
popa
jmp
repnz
mov
out
or
fistpl
in
sbb
and
jge
adc
jnp
mov
sub
sti
sbb
add
mov
mov
mov
pop
mov
lahf
xchg
jecxz
lahf
shll
add
fisubrs
aam
repz
add
push
and
pop
daa
jge
push
fdiv
xlat
stos
sar
push
repnz
out
xor
xchg
vorps
movsl
push
push
rorb
xor
pop
fs
cmpsl
and
popw
dec
inc
imul
lret
ffreep
arpl
adc
scas
pop
sbb
loop
mov
mov
xchg
lds
add
push
lret
lock
jg
or
add
mov
out
jg
ds
sbb
fs
dec
or
test
sub
cmp
xchg
fs
dec
loop
push
adc
cmp
cltd
sbb
stos
ss
lahf
lds
test
inc
sub
mov
or
pop
insb
dec
bound
pop
xor
aas
bound
imul
dec
pop
imul
mov
popl
cmp
subb
ds
sbb
push
xor
das
pop
mov
adc
negl
and
in
outsl
test
imul
add
andl
test
icebp
aam
movsb
fldt
lret
adc
xchg
pop
arpl
sub
xor
push
lods
mov
jge
xchg
movsb
ss
adc
adc
stc
leave
arpl
mov
and
rorl
mov
xlat
add
adcl
sahf
xchg
or
and
jne
pop
in
push
in
jp
sbb
cmp
pop
dec
jns
sbb
or
rcll
xlat
clc
add
stc
pop
push
cmpsl
and
in
mov
ds
loopne
mulb
sbb
mov
vrcpss
and
imul
jl
loope
inc
xchg
and
std
nop
jg
popf
in
jecxz
push
movsb
xchg
mov
push
fs
sbb
outsl
mov
xchg
dec
movsl
insl
cs
repz
in
int3
adc
add
aam
adc
in
lods
fsubs
into
pop
and
xchg
sbb
xchg
pop
sbb
call
adc
and
and
arpl
out
xchg
xchg
add
hlt
dec
pop
out
sbb
in
pop
mov
orb
lret
ret
and
out
and
fsubrs
and
pop
shrl
sub
mov
push
addr16
xor
popf
cmpsb
int
nop
xchg
fidivl
cmpsb
leave
xchg
xor
mov
divb
and
push
push
dec
fildll
sbbl
or
pop
inc
push
pmullw
lcall
push
std
stos
insb
xchg
decb
and
jbe
imul
jbe
scas
push
je
push
les
add
aad
mov
mov
aaa
add
stc
and
aam
dec
xor
pop
jge
jbe
xor
mov
fbld
cld
mov
pusha
add
insb
and
stos
cld
jae
jbe
cmp
add
insb
mov
push
jae
rolb
xchg
mov
sbb
and
mov
dec
adc
or
shlb
loop
test
orl
loopne
sbb
and
ja
movsb
bound
mov
push
andl
pop
pop
pushf
aam
and
lea
sbb
dec
xchg
pop
add
in
and
mov
sbb
xchg
add
movsl
mov
dec
pop
fidivrl
sbb
lret
inc
adc
dec
xorl
add
dec
xor
xorl
push
jo
push
into
xchg
bound
push
sbb
inc
sub
sub
mov
xor
inc
fidivs
xchg
pop
cltd
sbb
loopne
les
lret
sbb
push
scas
pop
pusha
sbbl
push
mov
in
add
cmovs
jne
push
or
inc
imul
pushf
and
pop
in
movsb
addr16
adcl
loopw
clc
imul
pushf
mov
cwtl
repz
xor
push
xchg
inc
adc
cmpsl
push
loopne
es
aam
aam
faddp
lahf
in
adc
loopne
aam
shll
push
sbb
call
out
sub
push
std
outsb
fsubs
repz
or
inc
push
fsubr
pop
cltd
sub
push
inc
xchg
dec
dec
outsl
loopne
push
push
mov
in
stos
popa
xchg
push
mov
dec
lahf
jno
push
pop
cmc
movsb
out
repz
hlt
xchg
dec
cltd
jmp
lahf
or
stos
add
push
rolb
push
mov
jnp
flds
mov
push
sbb
sbb
cs
inc
dec
insb
add
xchg
scas
mov
pushf
dec
loop
lcall
lret
in
sbb
out
outsb
lock
in
sub
lea
iret
pop
mov
add
rolb
or
testb
scas
jecxz
cs
mov
out
sub
addl
ljmp
push
mov
inc
movsb
cmp
xor
cmpsb
stos
jae
xchg
jae
test
mov
and
test
or
out
ret
and
imul
dec
imul
imul
pop
into
andb
mov
adc
dec
jecxz
or
fistpl
fs
sub
int
or
mov
xor
mov
fdivrl
ljmp
iret
scas
fsubr
test
inc
mov
dec
imul
sbb
stos
or
sub
push
inc
mov
cmc
popa
fidivl
pop
fwait
imul
aad
jnp
inc
and
out
sub
pop
add
loopne
adc
outsb
sub
nop
jmp
mov
mov
sahf
jp
popf
ret
jecxz
aas
add
rcll
int3
add
xchg
ss
cld
imul
pop
ss
stos
dec
lods
repz
int
or
cld
xorl
mov
inc
mov
xlat
sub
sub
jp
push
or
loope
cmp
jg
xor
mov
add
xor
or
add
gs
mov
push
push
and
add
lods
in
xlat
movsb
in
sbb
xchg
pop
movsl
inc
mov
les
and
stos
aad
sub
push
sbb
pusha
in
std
inc
xchg
sbb
sub
sbb
sbb
sbbb
inc
mov
push
xchg
push
movsl
add
or
and
xor
sbb
dec
inc
xchg
cs
jbe
pop
shll
jae
mov
cmpl
fisttpll
addr16
push
pop
mov
or
jo
add
jo
or
push
add
stos
pusha
scas
stos
js
mov
loopne
fwait
jmp
sbb
sub
push
xchg
lea
dec
les
adc
jg
xchg
dec
mov
jge
cltd
mov
les
je
testb
push
mov
add
xchg
lcall
cmp
add
pushf
shlb
xchg
dec
popf
dec
ficomps
add
add
ret
xlat
inc
sahf
aad
push
dec
ja
loopne
imul
add
outsb
mov
jne
imul
pop
adc
insl
push
cmp
add
xor
jnp
mov
xor
jge
jl
add
and
aam
xorl
rcr
sub
hlt
cmpsl
push
mov
popf
jg
int3
jns
push
pop
and
mov
lahf
mov
pop
mov
mov
push
shll
pop
imul
push
and
add
stos
push
add
imulb
hlt
pop
rclb
or
push
sbb
popa
add
add
stos
and
pop
sbb
or
sahf
inc
fisubs
jnp
lods
jl
dec
or
mov
hlt
mov
les
cmpsl
mov
inc
pop
sarb
push
pop
decb
pop
test
dec
imul
mov
jg
imul
aaa
test
push
jl
xchg
add
into
jnp
jg
out
int3
mov
add
xchg
sub
pop
or
sahf
pop
data16
cs
inc
pop
mov
mov
inc
movsl
inc
sarb
push
mov
jle
lods
xor
ficomps
in
punpckhbw
andl
mov
subl
pop
imul
mull
fadd
imul
scas
push
dec
into
fdiv
rcrl
cwtl
lea
movsb
mov
pop
mov
je
jge
repz
dec
insl
mov
mov
or
mov
mov
mov
inc
imul
nop
or
mov
sbbb
jmp
lock
scas
cmovb
inc
cmp
add
jbe
pop
orb
test
mov
enter
lahf
pushf
jecxz
jnp
jbe
jnp
mov
mov
cmp
pop
cld
cwtl
jbe
sbb
ja
adc
jl
int
outsl
dec
clc
aad
inc
pop
sahf
loopne
imul
aas
out
pop
cmc
pusha
or
sub
dec
test
sbb
jmp
stos
dec
push
jg
xorb
mov
dec
test
aas
aad
inc
gs
pushf
repz
sbb
in
mov
ret
pop
les
arpl
mull
cmp
pusha
movsl
push
stos
sub
nop
outsl
arpl
test
mov
push
pop
repnz
in
jbe
popa
pushf
bound
data16
in
sahf
pop
fisttps
ljmp
and
imul
mov
mov
mov
xor
aad
pop
jnp
jecxz
lea
stos
cmp
fwait
imul
mov
cwtl
mov
mov
xchg
sbb
inc
cld
xchg
aaa
pop
cmpsb
nop
jge
xchg
imul
mov
cmp
nop
hlt
xchg
sub
mov
xchg
popl
xchg
pop
xchg
std
mov
xchg
lret
xchg
push
testl
cmp
sbb
pop
andb
mov
lods
sbb
outsl
mov
pop
jge
hlt
jae
xchg
mov
jnp
jp
and
mov
inc
pop
movsb
and
fs
or
push
add
cmp
and
xor
and
ficoms
mov
pop
adc
pop
andl
lahf
mov
sahf
movsb
mov
inc
mov
sub
and
scas
inc
loope
into
push
das
enter
test
push
xchg
and
loope
xchg
push
mov
adc
stos
mov
and
mov
popf
ret
nop
mov
fdivrl
jle
or
xchg
sti
and
insl
xchg
and
mov
decl
movsb
pushf
stos
sub
fmul
xor
pusha
add
ficomps
and
ret
lcall
loopne
test
xlat
jg
and
jle
rcrl
xor
nop
repnz
dec
test
adc
loope
and
adc
jo
add
stos
sub
jmp
sub
mov
jecxz
xchg
orl
pop
xchg
jp
dec
and
xchg
movsb
add
jb
sbb
movsb
out
test
fwait
rcrb
push
and
sbb
dec
and
in
xor
and
pop
sbb
js
fwait
pop
stos
ss
adc
dec
lret
sbb
sub
orl
pushf
shrl
cltd
and
jl
ret
loopne
fwait
pop
repz
stos
or
gs
orl
pushf
adc
jbe
dec
cmc
movsb
imul
in
adc
jae
les
leave
mov
lahf
fisubs
inc
inc
mov
push
ret
sub
push
and
mov
cmp
xchg
mov
jmp
and
push
outsb
and
jae
xor
fldt
jle
aad
push
sub
iret
push
inc
pop
nop
or
sbb
mov
and
xor
bound
add
and
mov
push
xorl
add
jbe
mov
fsub
and
insl
popf
out
fs
and
stos
mov
cmpsb
pop
iret
xor
mull
fimull
hlt
adc
fbld
test
std
pushf
xchg
rcll
dec
sbb
adc
and
pushf
xchg
xchg
push
sbb
pop
loopne
popa
and
or
and
xchg
ror
cmp
sahf
jl
loop
cmpsl
jne
divl
xchg
out
xchg
incb
sub
jno
fisttpll
outsb
dec
jb
pop
pop
mov
cwtl
popf
inc
out
cltd
test
pop
cmp
or
sti
repnz
leave
pop
fstp
mov
outsl
imul
sbb
popf
and
addr16
ror
dec
je
mov
inc
jno
cmpsb
inc
ret
and
mov
hlt
addr16
push
mov
inc
rorl
test
jmp
ficoml
rolb
sbb
and
mov
movsw
stos
loope
pop
push
push
xchg
push
pop
in
jbe
rolb
jo
lahf
fsubr
cmpsl
pmuludq
setg
push
fnstcw
cmpb
mov
shrl
shrb
dec
mov
imul
mov
and
mov
loope
arpl
mov
push
or
rcll
outsl
idiv
or
ret
mov
ja
sbb
movsl
push
inc
clc
shrb
lds
inc
push
jns
add
and
repnz
sub
scas
leave
mov
adc
push
inc
icebp
ret
inc
mov
mov
fcmovb
cmp
sub
cmp
ljmp
and
mov
or
outsl
inc
sbb
imul
shrb
pop
cmpsl
xchg
das
loope
mov
xchg
test
sbb
adc
push
fs
adc
xchg
dec
or
push
sbb
jno
xchg
push
and
test
jo
in
push
adc
lods
fadds
bound
icebp
aam
and
push
fisubrl
test
outsl
int
cmp
stc
xchg
fistpl
out
arpl
ret
add
fwait
aaa
sub
daa
repz
loop
in
fdivs
lds
inc
pop
or
flds
and
and
push
push
push
sub
testb
adc
iret
test
outsb
push
loop
push
jbe
pop
lret
sub
mov
xrelease
mov
sub
inc
sub
ffreep
or
sbb
cld
mov
fs
mov
lods
popa
fwait
and
xchg
mov
mov
loope
jmp
inc
push
andb
sbbb
je
mov
cmc
mov
adc
inc
sub
push
jae
and
inc
adc
add
dec
pusha
xchg
icebp
mov
push
xchg
add
ret
or
push
pop
and
lock
insl
mov
push
js
or
jae
int
scas
or
or
add
dec
dec
mov
xor
sbbl
and
sbb
rorb
adc
ror
loopne
pop
add
aas
leave
andl
lahf
sbb
add
inc
or
adc
arpl
cmc
jg
loope
add
fdivl
xor
in
shrl
dec
adc
adc
fldt
push
je
push
pop
push
xor
aad
inc
shrb
add
mov
pop
mov
jg
xor
stos
popa
stc
push
xchg
pop
sub
shll
dec
push
insb
shll
sub
test
aas
rclb
cltd
subl
push
shlb
pop
inc
loopne
sbb
inc
call
jo
sub
icebp
nop
cmpsb
add
jmp
add
adc
inc
inc
clc
popf
movsl
lcall
inc
movsb
ret
in
lahf
sub
lds
fwait
aas
loop
arpl
cmp
movsb
in
sbb
sub
arpl
outsl
sbb
xchg
jae
inc
ja
jmp
in
arpl
fwait
inc
xchg
adc
popf
cli
je
lods
lcall
pop
jge
loopne
xlat
pop
outsl
arpl
mov
jge
ljmp
fcoms
mov
test
cmp
pushf
jns
bound
jae
outsb
shlb
imul
or
push
mov
and
movsl
insl
rcrl
inc
cmp
sar
out
bswap
rolb
in
jp
pusha
fwait
daa
jle
lret
or
push
and
out
arpl
mov
rclb
inc
test
xchg
pop
out
out
rcrb
cli
or
stc
and
adc
popf
rorb
mov
xor
mov
fnstenv
lods
mov
arpl
es
jae,pn
jecxz
jno
dec
ret
hlt
xchg
mov
and
push
dec
andb
pop
or
sbb
scas
jl
push
xchg
inc
rcrb
stc
inc
movsb
hlt
outsl
lods
xor
insl
pop
or
push
mov
or
xor
call
sub
mov
mov
loop
add
mov
enter
arpl
clc
repnz
sbb
cmp
sub
popa
popf
push
test
push
inc
mov
cmp
cmp
cmp
flds
ds
je
jg
loopne
pop
outsl
loope
add
sbb
enter
sbb
jp
mov
push
cwtl
mov
inc
xchg
mov
fwait
mov
push
sbb
lea
jle
push
add
xchg
fdivrl
scas
aad
aad
xchg
add
mov
pop
cltd
mov
jl
cmp
rcll
rcr
add
push
test
mov
add
loope
ss
dec
inc
adc
out
lcall
loopne
arpl
test
mov
and
scas
fistpl
and
push
xchg
jp
fs
cmp
fwait
jge
dec
mov
pop
dec
mov
and
sahf
cmp
mov
push
popfw
inc
push
lahf
push
mov
stos
and
pop
cmpsl
push
push
xchg
add
xchg
or
cmp
nop
fwait
jecxz
nop
bound
fildll
aam
pop
je
adc
pop
pop
or
out
jge
cmp
cld
aas
push
xchg
xor
mov
xor
std
sbb
in
inc
in
test
cmp
dec
imul
xor
push
jae
xchg
ret
or
xchg
test
outsl
xor
add
test
dec
and
filds
sub
pusha
xor
nop
or
mov
movsb
jb
pop
xchg
adc
push
fists
cwtl
push
imul
loop
mov
fstps
mov
stos
bound
jns
push
into
call
popa
in
movsb
lahf
sub
mov
pop
mov
jle
mov
mov
icebp
insb
test
xchg
es
popf
pusha
imul
mov
andl
push
addr16
arpl
push
push
push
cmp
pushf
fmul
leave
jo
call
xchg
mov
push
or
loop
dec
test
je
in
loopne
xchg
mov
pop
popa
xor
adc
jne
in
std
mov
mov
sub
gs
mov
notl
popf
aam
sbb
insb
jge
mov
test
test
push
stos
or
and
jmp
insb
pusha
mov
repz
loop
loop
cmp
xor
xor
in
aaa
movsl
gs
and
das
ret
jmp
test
cmpsb
inc
pushf
cmpl
subb
xor
push
fldl
mov
dec
add
sbb
push
dec
imull
pushw
shll
cpuid
outsb
push
out
adc
jb
inc
mov
jo
mov
je
je
es
sub
fistpl
pop
lea
cmp
jae
aad
jl
push
inc
bound
xor
enter
cltd
lods
outsl
imul
mov
loop
into
inc
in
frstor
fldcw
and
xchg
sahf
pop
iret
enter
push
xor
imul
je
mov
or
loopne
mov
outsl
inc
movsb
pop
out
cmc
outsl
scas
lcall
sar
cmp
mov
push
rcrb
test
fisubl
sti
insl
jno
push
pop
loope
jnp
and
cltd
orl
pop
leave
sbb
xchg
cmp
pop
pushf
stos
push
sbb
or
pusha
push
push
stos
and
fs
jno
and
rclw
mov
pop
aas
xchg
mov
in
fidivs
jne
dec
sub
cmc
fcompl
and
push
mov
cltd
imul
outsb
dec
iret
popa
xor
mov
xchg
adc
mov
ljmp
or
bswap
and
or
and
out
or
mov
mov
and
push
nop
jae,pt
imul
xor
cs
outsl
iret
xor
in
and
mov
or
fdivs
sub
jb
or
jnp
xchg
pop
jecxz
adc
adc
jbe
jmp
xchg
into
adc
insl
push
pop
test
dec
xchg
sbb
xchg
pusha
outsb
inc
and
mov
leave
addl
andl
pop
xchg
xchg
cmpsl
ja
addr16
gs
jp
bound
test
push
mov
ja
outsb
jmp
jne
fbld
je
fwait
jmp
and
mov
test
push
stos
sbb
stos
movsb
inc
in
lods
aad
daa
scas
in
jnp
cmp
inc
insl
adc
gs
mov
mov
stos
mov
adc
adc
dec
dec
sub
int
fdivl
sbb
jbe
fsubl
and
leave
pop
andl
out
add
push
sbb
insb
pop
pushf
mul
arpl
sub
fstpt
pusha
xor
rcl
and
and
or
in
mov
repnz
dec
dec
mov
test
aad
cltd
jbe
fiaddl
add
rolb
lahf
push
pop
into
loopne
and
adc
test
out
pop
or
jne
outsb
lahf
lods
insl
out
je
push
sub
lcall
jno
imul
mov
fsubs
leave
push
rol
mov
js
imul
nop
fmulp
sbb
cmpsb
sub
cmp
xchg
cwtl
imul
imul
fwait
xchg
jne
in
xor
sbb
rcr
or
dec
in
jp
popa
loopne
push
sarl
lcall
push
fs
in
cmp
cmp
mov
setge
push
cmp
inc
dec
aam
outsb
inc
je
sbb
ja
sub
repz
pop
jno
pusha
mov
loope
arpl
sarl
mov
mov
push
mov
scas
jne
les
into
pop
cmp
and
mov
add
das
les
aad
imul
inc
inc
enter
clc
add
pop
std
pop
mov
icebp
ljmp
lahf
mov
lahf
add
in
pop
xchg
scas
add
cmpsb
dec
imul
imul
scas
cli
call
cltd
inc
adc
arpl
push
ret
mov
in
xchg
inc
cmpsl
outsl
loopne
pop
adc
mov
push
in
sub
pop
cmp
jmp
lea
and
loope
jle
jne
xchg
push
imul
test
sbb
shr
mov
mov
fldt
jo
sub
pop
mov
jge
lahf
data16
jp
xchg
into
mov
inc
es
shr
les
or
sub
add
pop
test
lret
iret
xchg
sub
loopne
ss
fsubp
mov
jae
js
dec
call
movsb
sbb
rcrb
mov
jo
aaa
adc
insl
fnstenv
ljmp
or
leave
sub
andb
popf
cmpsb
andl
xlat
or
jge
adc
push
inc
or
mov
sbb
inc
and
push
lcall
xchg
xchg
or
loopne
xlat
dec
jnp
insb
cltd
repz
and
test
in
sahf
lds
mov
jmp
cli
lock
rcr
repnz
pop
andl
stos
ljmp
in
loop
stos
in
and
pushf
sahf
arpl
sahf
jmp
loopne
shll
cld
cmp
dec
cltd
sub
pop
test
pop
lock
cltd
mov
sub
or
in
pushf
insl
movsb
xchg
xchg
add
int
scas
cmp
jge
sbb
mov
sub
nop
and
xchg
repnz
sbb
xor
mov
ret
adcl
pop
adc
test
jg
lds
mov
xchg
lock
dec
dec
pop
into
aad
push
pop
ds
stos
push
bound
mov
mov
adc
mov
outsb
cld
mov
ret
cmp
push
loope
mov
cmp
subl
cmc
mov
iret
movsb
xchg
mov
loope
mov
mov
loopne
stos
push
xchg
or
cmpsb
xor
and
mov
pop
add
aaa
xchg
sbb
sbbl
cwtl
sahf
inc
scas
sbb
xchg
nop
mov
mov
jle
fldl
and
stos
popf
test
jl
mov
jecxz
mov
inc
lea
shll
xchg
movsl
mov
cltd
xchg
test
xchg
cmpb
ljmp
cmp
inc
jecxz
bound
imul
popf
sbb
movsb
fdivl
dec
ficomps
xor
mov
jmp
xchg
and
mov
out
cmp
xchg
pushf
aaa
imul
pop
rclb
xor
inc
daa
cltd
pop
gs
imul
xchg
sbb
fisttps
jae
jo
rclb
cmp
sbb
sbb
fdivr
lret
add
ret
xor
std
push
mov
jge
inc
outsl
xchg
enter
gs
adc
aad
dec
in
pop
push
insb
cwtl
mov
mov
fsubr
lret
outsl
or
mov
pop
xor
jns
insb
loopne
or
or
repz
push
inc
xchg
cmc
push
ret
inc
fadd
cmpsl
fcmovnb
jecxz
inc
cmpsl
cld
aam
movl
pop
test
sub
stos
mov
xchg
jae
aam
bnd
sub
jg
add
adc
push
inc
push
mov
mov
and
sbb
and
add
push
adc
mov
cmp
adc
add
mov
push
push
lods
jge
in
adcb
ret
cmp
push
jae
mov
ret
lea
inc
dec
pop
test
add
mov
mov
jno
loop
push
test
cmc
push
cmp
mov
xor
xor
sbb
in
repz
adc
pop
jno
inc
xchg
cltd
cmp
sbb
xor
jo
adc
push
sub
and
push
and
jle
movsl
movsb
data16
rcrb
add
jecxz
in
gs
or
dec
sbb
jno
add
shl
xchg
pop
test
fs
sahf
mov
cld
push
pop
repz
imul
adc
scas
push
jne
dec
mov
jbe
sub
and
call
es
stos
mov
xchg
dec
mov
pop
jnp
insb
or
cmp
cltd
inc
pop
add
sbb
xchg
mov
cwtl
je
push
clc
and
imul
movsb
sub
out
sbbb
xor
mov
xchg
push
aad
dec
test
push
and
in
dec
das
sahf
and
pop
fs
xor
mov
movsl
pusha
lcall
mov
sti
jno
sub
push
xor
pop
cmpsl
push
das
hlt
cmp
sub
mov
xchg
jecxz
or
mov
out
data16
adc
inc
jl
xchg
mov
sub
pop
iret
pop
outsl
or
cmc
mov
push
les
arpl
cld
cmpsb
popa
xchg
ret
add
or
xchg
and
aam
mov
stos
cs
mov
xchg
icebp
xchg
cmp
or
loop,pn
cld
cwtl
fldl
arpl
out
pop
cmp
mov
inc
mov
pop
inc
fldenv
in
sub
mov
jge
mov
add
xchg
jne
mov
cmp
daa
int
je
ja
mull
loope
add
xchg
cmc
xor
stos
arpl
or
adc
lds
outsl
test
lahf
xchg
and
pop
pop
pop
jecxz
push
mov
pop
dec
movsl
xchg
push
jb
mov
scas
add
sbb
cli
pop
insb
and
jb
lea
loopne
bswap
inc
sti
ljmp
mov
lock
das
jp
inc
pop
insb
popf
fisttpl
jno
shl
jne
mov
repz
loope
cmc
xor
dec
and
adcb
mov
xchg
adc
insb
and
pop
daa
ret
pusha
jb
loop
jae
push
aaa
jmp
es
in
pop
icebp
pop
sbbl
xchg
xor
cmpsl
mov
xchg
fwait
popa
inc
lahf
out
mov
aaa
or
xchg
jmp
movsb
jno
or
aaa
mov
stc
fcomps
jo
insl
shlb
loopne
in
ret
ret
imul
jno
aam
mov
in
mov
push
xchg
movsb
xchg
call
jne
lds
addr16
cmp
int
lcall
cmp
jge
push
fsubs
pop
movsb
inc
pusha
rcll
andl
push
repnz
push
cmpsb
fdivrl
rcll
xchg
sahf
ret
das
lret
mov
lahf
in
pop
inc
outsl
sbb
sbb
das
jbe
subl
lahf
lcall
aam
sbb
loop
push
inc
jecxz
inc
or
rorl
xor
push
xchg
enter
stos
cltd
cmpl
and
hlt
sti
aad
sub
mov
jmp
mov
faddl
push
clc
jecxz
imul
test
push
pop
loop
fsubs
movsl
mov
lcall
xor
nop
jo
imul
aam
and
pop
push
push
call
mov
and
sub
roll
mov
sbb
inc
lods
lret
stos
or
mov
xor
insb
test
inc
cmpsb
and
inc
insl
imul
insl
sbb
cmp
adcl
sahf
inc
insl
mov
sub
pop
les
lsl
insl
lcall
imul
mov
jnp
push
and
aas
in
fucom
cs
mov
xor
fs
repnz
adc
xchg
dec
xchg
lds
jecxz
mov
movsl
mov
cmpsl
push
lock
nop
adc
das
mov
inc
mov
sub
and
aas
or
fdivl
push
mov
jl
icebp
insl
or
je
lret
xchg
mov
pop
fsubp
call
xor
push
imul
xchg
sbb
frstor
or
stos
repz
enter
push
xchg
ret
push
popa
jae
inc
xor
jbe
xorb
insl
pop
cmp
bound
add
adc
jae
test
out
loop
mov
out
pop
fisubl
in
das
mov
sub
js
outsl
push
loope
dec
popa
fiaddl
pop
jo
add
cmp
pop
repz
jno
pushf
push
shlb
stos
jl
popf
rcrl
or
mov
ret
mov
inc
icebp
xor
push
imul
scas
adc
cmp
addr16
inc
add
push
scas
push
jl
xor
push
popf
pop
pushf
jno
and
mov
and
jns
arpl
stos
aad
pop
stc
or
jnp
jp
push
mov
cmpsl
jl
stc
popa
add
mov
insl
jno
mov
xchg
pop
in
or
mov
sub
adc
xchg
pop
stc
adc
pop
roll
ret
inc
in
mov
sub
je
adc
in
adc
orb
dec
notl
popf
push
and
aas
adc
pop
pop
mov
push
sub
cld
cmp
inc
sahf
ljmp
cmp
insl
adc
adc
icebp
popa
jmp
pushf
out
in
aaa
addb
icebp
cli
repz
fldenv
outsb
pop
mov
xchg
inc
mov
lods
add
das
pop
fidivs
ljmp
popa
imul
ljmp
movsb
jne
stos
and
pushf
popf
dec
fldcw
xchg
movsl
adc
pop
xor
rorl
sbb
add
lea
xchg
jnp
mov
adc
movsl
mov
aam
imul
cmp
xchg
mov
mov
pushf
mov
and
js
and
jl
jge
jle
inc
add
shld
gs
lret
adc
arpl
jp
and
popf
mov
in
iret
mov
insl
bound
xchg
adc
mov
daa
loop
ret
dec
fsts
sub
push
sub
daa
mov
adc
xor
dec
cmpsl
push
and
dec
stos
mov
in
and
xchg
repz
pop
in
jns
icebp
stos
xchg
stc
aam
dec
test
subb
and
pop
push
aas
nop
xchg
xor
xor
pop
cmp
aad
xchg
push
jg
push
pop
fstps
loope
add
mov
repz
lahf
adc
sbb
fwait
popa
or
pop
stos
inc
adc
fwait
cli
loope
add
pop
dec
iret
lea
sbb
or
jp
mov
push
xchg
push
sub
pushf
enter
movsb
sbb
mov
fiaddl
xchg
insb
dec
push
mov
sub
and
add
push
loope
out
lahf
cmp
add
inc
sbb
mov
sbb
mov
ret
sub
in
and
or
jp
mov
xchg
or
ret
int
pushf
mov
mov
push
jg
pop
jecxz
repz
pop
mov
jns
mov
add
lcall
aaa
fwait
mov
sbb
mov
rorl
aas
hlt
ss
dec
adc
cwtl
jnp
pop
addl
in
xchg
xchg
push
ss
mov
sbb
pushf
rcrl
out
or
push
arpl
push
and
and
cmc
movsl
pop
stc
cs
push
in
lret
lcall
inc
daa
xchg
mov
or
lods
jne
aaa
push
das
pop
imul
push
into
xor
jnp,pt
leave
js
push
test
jecxz
push
xor
js
cld
rcrl
jle
lock
ja
and
outsl
in
xchg
mov
mov
imul
pushf
jns
xchg
addb
inc
xchg
mov
jge
jp
push
hlt
in
sub
and
aaa
mov
out
pop
pop
outsb
scas
mov
sahf
je
jp
adc
lcall
jp
xor
mov
mov
ds
outsl
stc
jae
or
push
adc
cmp
shll
jbe
add
mov
and
xchg
inc
fadds
mov
negb
pop
repnz
jmp
pop
sbb
fildl
add
xchg
les
and
es
and
pop
cmc
jno
add
bound
and
repz
adc
push
adc
fwait
shll
jae
mov
sti
xor
icebp
sub
dec
pop
xchg
aam
add
fists
movsb
jmp
and
jb
and
jg
repz
jbe
jnp
loopne
push
fs
in
jge
inc
xor
add
je
jle
push
mov
push
repnz
arpl
in
push
push
pusha
mov
inc
cwtl
and
adc
pop
js
fisttpl
jns
xchg
icebp
push
and
dec
jge
into
jge
sbb
xchg
mov
cmpsb
lods
repz
inc
aad
inc
inc
hlt
and
jge
inc
lock
outsb
mov
xchg
enter
jno
xor
imul
iret
in
xchg
loop
jbe
lods
sub
inc
sub
dec
fs
sbb
fistps
lods
popf
mov
out
and
subb
jge
aas
xor
xor
test
sub
adc
out
and
daa
popf
xlat
jns
mov
or
jae
in
mov
aam
cmp
insb
pop
and
mov
out
in
ret
sub
in
aas
out
mov
aaa
add
jecxz
jns
stos
and
and
jae
out
xchg
ja
addb
call
leave
repz
hlt
pop
jl
push
mov
push
adc
test
or
or
push
cmp
xchg
repz
popf
push
icebp
stos
sbb
out
das
push
xor
adcb
sub
pushf
jp
arpl
loopne
push
fs
pop
add
xchg
sbb
mov
ret
out
mov
daa
push
clc
fldenv
loope
loopne
dec
pushf
push
inc
jo
sbb
and
sub
loope
shll
pushf
jle
mov
and
iret
and
xor
arpl
pop
xor
and
pushf
mov
mov
xchg
jns
inc
nop
mov
in
jno
packsswb
inc
dec
mov
int3
push
mov
add
fdivl
in
cmp
call
jb
xor
sbb
xchg
out
scas
inc
outsl
and
sbb
cmpsb
and
aad
std
jmp
push
andl
stos
movsb
into
popf
daa
mov
arpl
and
repz
int
add
jae
bound
adcl
outsl
push
into
rolb
sub
mov
int
int
test
nop
in
pusha
into
test
loope
cmpsl
repz
xchg
sub
xchg
pop
pop
push
in
loopne
in
pop
jnp
dec
xor
mov
int
fstpl
jae
or
sub
and
or
popf
cmp
fbld
inc
fs
sbb
cltd
lcall
cmp
ds
ret
dec
xor
stos
outsb
xchg
ret
fs
aam
mov
mov
jbe
push
addr16
add
outsl
jge
push
insl
sbbb
scas
push
js
mov
fs
add
in
je
mov
sub
fbstp
ja
dec
cmp
test
nop
ret
and
xor
fwait
lret
add
sub
jle
push
adc
push
pop
ret
movsb
adc
lods
je
ret
fwait
repz
xchg
ljmp
imul
sub
ja
mov
out
ja
lret
and
icebp
push
jp
fwait
xchg
out
mov
in
inc
stos
in
mov
imul
gs
sub
icebp
mov
insb
popa
insl
sahf
ljmp
loopne
pop
xchg
mov
movsb
movsl
sbb
sub
cld
sbb
jne
pop
lcall
ss
xchg
bound
add
addb
xor
mov
sbb
jl
popf
xchg
pop
hlt
movsb
pop
xor
pop
adc
jg
les
add
mov
stos
add
sbbb
ds
mov
test
adc
push
aad
jno
jne
pop
mov
dec
inc
pop
xchg
sub
test
aas
mov
repnz
push
shl
fistps
out
push
imul
lret
test
xor
jl
jmp
sti
in
mov
xchg
and
adc
pushf
jmp
pusha
mov
out
inc
and
dec
mov
pop
nop
sahf
mov
ja
insb
inc
insl
call
inc
add
stos
jnp
gs
mov
dec
bnd
sahf
xchg
cli
js
cs
push
push
and
xor
rcr
das
add
aas
je
pop
lea
in
inc
sbb
aas
stos
xchg
clc
aam
ja
or
push
xor
insb
movsb
add
push
add
pop
and
loop
ja
xor
inc
mov
jmp
popf
inc
fs
shld
fbstp
fcomip
push
clc
add
imul
es
lds
adc
aas
add
sub
aas
arpl
mov
aas
lahf
push
outsl
bound
jl
test
fdivrl
mov
push
shlb
inc
subb
jle
popf
jno
in
push
sub
mov
inc
xchg
sahf
lcall
adc
fdivl
jne
jle
jne
ja
xchg
lods
lods
adc
roll
inc
repz
insb
cmp
inc
shll
hlt
or
mov
std
in
cmpsl
pop
inc
pop
imul
inc
mov
adc
imul
andl
mov
insl
imul
add
xchg
jne
and
sbb
add
sahf
js
jne
xor
cmpb
cltd
mov
xor
ljmp
int
jne
mov
cmpsl
mov
jo
scas
xchg
mov
dec
insb
add
in
scas
loop
dec
mov
inc
jo
inc
cld
push
ret
outsl
inc
test
cmpsl
in
inc
jmp
repz
add
inc
dec
js
subb
loope
lock
repnz
inc
shll
popf
jne
js
add
cmp
jae
je
push
sub
popa
mov
jnp
jno
jmp
daa
in
xor
sbb
and
je
test
xor
cmpsl
inc
xchg
and
bound
fisttpl
mov
xor
rep
ds
adc
mov
xor
cltd
lea
jbe
out
shlb
add
xor
repz
aad
sub
ret
fstpl
sbb
imul
repz
push
sarb
ja
pop
inc
dec
and
stos
xchg
test
test
arpl
in
cltd
rclb
lock
mov
gs
sbb
test
xchg
sbb
xchg
and
mov
add
jg
push
out
shlb
hlt
dec
inc
in
mov
xchg
mov
test
bound
xor
sbb
jno
cmpsl
insb
and
lds
les
aaa
mov
mov
popf
xchg
loop
and
mov
in
gs
pmaddwd
cmpsl
mov
icebp
loopw
bnd
shll
nop
push
stos
das
int3
and
bound
mov
and
repz
popf
movsb
jae
mov
ljmp
push
lea
and
adc
leave
mov
and
add
in
jl
push
mov
repnz
cwtl
mov
mov
aas
mov
pop
popa
lea
aaa
xor
and
into
inc
out
fistpll
cmp
and
bound
mov
push
pusha
cmc
xchg
mov
xchg
mov
sbb
or
sbb
add
push
mov
fldenv
mov
push
mov
pmaddwd
cmp
stc
filds
scas
shrl
pop
xchg
dec
and
mov
xchg
mov
cmp
adc
dec
add
mov
adc
inc
mov
adc
in
adc
mov
mov
xchg
pop
and
data16
dec
dec
repz
lds
fwait
jbe
fisubs
cwtl
pop
aam
out
jne
daa
sub
js
mov
je
outsb
cmpb
aad
stos
loopne
js
push
stc
rorl
mov
je
xchg
clc
or
jle
mov
and
mov
mov
iret
int
jbe
ret
sbb
sbb
fcomps
xchg
jne
mov
icebp
jbe
xchg
mov
imul
bound
pop
sbb
sbb
shll
adcb
mov
out
loop
arpl
mov
pop
es
adc
dec
nop
icebp
cmp
test
jl
pusha
push
cmpsl
xor
pop
lock
mov
ret
jo
add
push
add
roll
xorb
and
pop
out
jg
fwait
les
repz
pop
inc
scas
mov
test
xacquire
sub
jnp
adc
imul
adc
iret
mov
imul
movsl
inc
cltd
inc
mov
fildl
cs
movsb
call
cmp
or
mov
xchg
hlt
clc
test
sti
xchg
push
icebp
insb
int
inc
push
dec
sub
stc
pop
jnp
mov
je
scas
mov
mov
mov
inc
and
push
push
mov
dec
dec
int
scas
aam
inc
mov
push
pop
push
dec
icebp
jne
push
push
mov
das
out
cmp
outsb
stc
popf
inc
pop
inc
std
and
xchg
and
sub
std
push
out
xchg
dec
or
xchg
outsl
loop
inc
movsl
xor
mov
popa
adc
mov
cld
hlt
pop
es
inc
rorl
push
xchg
mov
add
pop
jo
ret
inc
movsl
pop
paddb
pop
insl
loope
ret
insb
inc
jge
pop
stos
sbb
inc
cs
sub
mov
in
jns
jge
imul
xor
sub
pop
inc
add
inc
sbb
movsl
mov
addr16
sub
xchg
sbb
jno
add
lahf
and
arpl
insl
je
xchg
push
or
popa
loop
mov
out
popf
pop
xchg
je
insb
or
jl
jl
fsts
sbb
cmpsl
or
pop
ret
pop
lret
cmpsl
push
movsb
stos
out
popa
imul
mov
and
in
arpl
xchg
cli
inc
jne
jno
mov
or
test
pushf
in
xchg
out
and
xchg
xchg
adc
and
inc
cld
sbb
xchg
jae
inc
in
and
out
and
mov
xchg
xchg
or
cli
pushf
je
lock
insl
sbb
mov
xchg
xchg
adc
sbb
xchg
test
pushf
je
jo
in
sbb
xchg
in
xchg
push
popf
inc
cwtl
and
xchg
xchg
cmpb
jae
out
xchg
ljmp
and
arpl
jo
jp
int3
sbb
test
hlt
aaa
mov
mov
ficompl
jb
sbb
pop
and
cmpsl
add
enter
push
adc
fwait
popf
mov
mov
aam
rcll
dec
aam
sbb
lds
push
and
jge
inc
leave
in
stc
and
movsb
push
and
fistps
popa
repz
sbb
jecxz
sub
cltd
ret
inc
popf
movsl
shl
push
jle
mov
in
push
xchg
add
jno
loope
and
mov
dec
sub
pop
rcrb
bound
pushf
sbb
xlat
pusha
xor
xchg
and
mov
add
shr
xor
adc
xor
aam
or
push
xchg
xchg
mov
popf
dec
fisubs
inc
sbb
jb
sti
test
aas
cmp
pop
inc
movsb
jae
inc
inc
and
shrl
ret
addl
and
and
loop
bound
loope
popa
and
mov
pop
push
ficomps
pop
sbb
fcompl
sbb
lcall
fcomps
push
push
gs
xchg
push
adc
xchg
aam
gs
xchg
push
adc
xchg
gs
adc
xchg
push
adc
nop
gs
bswap
dec
push
into
mov
xchg
stos
lea
or
aad
or
mov
lret
dec
or
mov
enter
inc
insl
in
push
movb
inc
scas
sahf
test
fsubl
add
mov
inc
and
jnp
in
insb
addl
pushf
fldt
iret
xchg
jecxz
sub
addl
fwait
sbb
dec
push
test
pushf
jecxz
xchg
cmp
and
cmp
dec
dec
dec
popf
fstps
fldl
in
bound
jecxz
nop
xchg
rcl
push
and
push
adc
sub
imul
and
pop
cltd
subb
push
lahf
or
pop
int3
jb
leave
lahf
mov
enter
adc
sbb
pop
mov
jmp
mov
sbb
jbe
dec
scas
inc
rol
mov
push
mov
xchg
daa
scas
add
leave
pushf
xchg
push
pushf
fwait
sbb
pop
dec
sbb
dec
sub
iret
ss
mov
push
pushf
ficompl
stc
fdivrl
jne
ja
ret
ret
pop
dec
aaa
push
aam
xchg
xchg
mov
or
dec
jp
imul
or
aad
mov
jg
test
dec
sbb
hlt
jmp
nop
mov
rcr
dec
insl
or
lret
in
pop
push
inc
leave
pop
push
jp
sbb
push
jmp
les
out
inc
lret
bound
sub
decb
push
and
dec
adc
les
or
mov
jno
repnz
inc
enter
push
push
pop
es
adcb
jg
mov
lds
leave
icebp
dec
and
mov
cmpsl
push
inc
or
pop
out
js
rcrl
data16
dec
xchg
ss
adc
cmp
xor
pop
mov
sbb
jge
dec
mov
xchg
pushf
loopne
mov
jno
dec
jge
sahf
jp
insb
test
iret
in
ja
xchg
mov
mov
xchg
jae
adc
dec
cld
in
dec
int3
inc
repz
mov
adc
fwait
cwtl
mov
xor
jecxz
cs
lods
dec
lea
or
test
push
pop
aam
xchg
lcall
add
mov
push
push
jp
mov
pop
movl
lret
mov
pop
pop
aaa
push
ja
enter
sbb
nop
mov
dec
dec
adc
dec
adc
xor
loope
cmpsb
pop
and
cwtl
push
xor
fcoml
sub
test
fbstp
lret
idivl
faddp
jb
mov
movsl
jnp
pop
iret
enter
fisttps
shlb
popa
cmp
jno
mov
das
hlt
andb
or
negl
lcall
lods
sbb
mov
clc
sub
fwait
and
sbb
xchg
dec
rorb
pop
or
aam
lret
lret
notl
push
mov
jl
xchg
push
popf
adc
and
fwait
lods
cmp
mov
sbb
inc
lcall
adc
jae
int
xchg
loopne
fisubl
fmull
jl
and
andb
fsubl
and
push
frstor
mov
call
cltd
sub
and
test
and
repnz
push
sbb
andl
ret
add
andl
mov
mov
jge
cmp
sti
mov
mov
jns
cmp
mov
ja
aaa
divb
jne
xor
repz
gs
mov
xor
mov
gs
mov
xor
scas
outsl
gs
out
scas
outsb
cs
lods
insl
gs
jmp
imul
stos
push
jmp
call
cmpsl
addr16
es
xchg
mov
pop
cmp
cmp
test
popf
cmp
test
in
push
dec
dec
stos
sbb
and
mov
cmp
inc
in
popf
lahf
fldcw
xchg
lea
arpl
mov
pop
mov
loope
shrb
push
dec
lret
xor
mov
xchg
andl
or
mov
dec
sbb
mov
dec
outsl
outsb
adc
mov
movsb
mov
and
xchg
mov
rcr
std
mov
xchg
mov
cmc
and
sti
mov
out
or
dec
andl
popa
rcl
dec
mov
xchg
add
mov
insl
shll
addr16
notl
lahf
and
jmp
insl
lcall
jno
inc
xchg
andl
dec
inc
xchg
mov
jne
cmp
lret
std
adc
xchg
fcomps
sbb
cmpsl
add
inc
push
cmpl
and
push
pop
pop
push
pushf
push
fcmovbe
sbb
jae
nop
mov
ret
push
shlb
out
jbe
and
add
jle
sbb
push
movsl
mov
sahf
and
mov
dec
push
mov
sbb
xchg
pop
loopne
jge
mov
sbb
or
pushf
mov
xchg
lcall
and
jmp
mov
gs
push
lods
sarb
adc
and
int
mov
enter
xchg
dec
or
and
fs
or
cmp
xchg
sahf
aam
adc
je
pop
and
ficompl
jne
and
test
enter
inc
arpl
in
sahf
orb
pushf
rol
push
adc
lcall
pop
fcoml
mul
mov
or
pop
rclb
lahf
xchg
mov
mov
shll
fbld
sbb
push
jmp
rolb
mov
mov
shlb
adc
cli
mov
aas
iret
aam
lret
ss
cli
sub
inc
jno
test
jne
jp
dec
enter
mov
jl
pop
std
sbb
dec
sbb
mov
or
inc
insl
pop
popa
push
out
xchg
inc
adc
sbbb
pushf
sbb
mov
faddl
ret
xchg
jle
popf
xor
xchg
popa
dec
cltd
in
sbbb
mov
lea
into
popf
pop
jmp
cld
je
clc
pop
loope
inc
sbb
sahf
push
cmp
inc
outsl
fwait
cmp
and
mov
jbe
mov
jno
int
inc
xchg
leave
add
lea
lret
xchg
mov
jae
stos
xchg
inc
roll
roll
inc
mov
push
popf
popa
jg
in
jae
pushf
or
jnp
popa
jno
mov
fisttpl
add
popf
out
lret
js
jno
cmp
hlt
pop
notb
repz
or
lea
aam
cmc
push
xchg
sub
addr16
xor
fldl
push
xchg
pusha
inc
sub
ja
rcr
push
or
addr16
push
jb
popf
mov
mov
pop
fxch
xor
rorl
and
mov
cmp
outsb
mov
test
movsb
iret
dec
mov
aam
mov
nop
leave
push
add
or
jge
adc
mov
iret
loop
push
movsb
sqrtps
and
testl
xchg
sbb
loope
int3
lret
dec
jae
pop
movsb
push
rolb
xchg
js
sbb
add
sbb
nop
add
push
imul
inc
call
mov
enter
push
xchg
and
popa
ret
loopne
nop
fiadds
jo
loope
dec
or
inc
or
fsubl
enter
leave
pop
les
callw
loopne
movsb
nop
cmpsl
in
or
movsb
test
int3
je
stc
sbb
out
pop
adc
movsb
jnp
fldl
enter
xchg
icebp
push
jne
das
mov
pushf
push
aam
mov
add
test
pop
ljmp
es
imul
cs
mov
lea
mov
pusha
popf
sbb
and
inc
mov
dec
divb
xchg
cmc
push
pop
inc
lret
sub
shr
dec
cmpl
hlt
xor
pop
int3
andb
sbb
pop
and
popf
and
adcb
add
inc
sbb
scas
lahf
lods
nop
inc
fcomps
adc
rcrb
pop
mov
push
push
fwait
inc
xchg
inc
ret
daa
inc
sub
push
sti
push
and
popf
push
fwait
adc
adc
sbb
mov
cltd
and
mov
sub
xchg
mov
push
clc
sahf
jge
loop
xchg
iret
xchg
adc
push
test
mov
mov
jns
pushf
cmp
xorb
ljmp
mov
adc
out
pusha
sahf
xchg
pop
mov
pop
pushf
leave
pop
dec
int
pushf
push
mov
rcl
into
or
xchg
ficoms
and
mov
clc
loopne
or
push
push
test
cwtl
inc
mov
loopne
mov
loop
in
lcall
ds
lods
xor
pop
insb
mov
jl
sahf
adc
inc
loope
pop
jno
clc
mov
clc
xchg
loopne
add
jb
mov
pop
mov
push
adcl
lods
pop
sbb
ret
inc
mov
das
movsb
sbb
mov
xor
or
insl
rorl
stc
lret
movsb
fsubl
xchg
js
jle
mov
dec
mov
jge
push
mov
lods
jle
xchg
iret
push
xor
mov
or
and
imul
das
inc
xor
icebp
sbbb
sub
dec
sub
sbbb
add
lcall
push
fisubrl
lahf
adc
jnp
movsb
fmuls
mov
jb
jne
inc
repnz
inc
fwait
lret
sbb
sbb
sbb
and
repz
xchg
xchg
jge
pop
sbb
sbb
rcrb
bound
inc
arpl
jecxz
mov
arpl
inc
pop
push
xchg
and
loope
mov
and
and
pop
push
pop
xchg
mov
pop
xchg
cwtl
adcb
repnz
dec
aas
xchg
popf
and
jp
and
cltd
test
js
xchg
mov
les
xchg
inc
inc
sbb
sar
mov
jl
jae
sub
or
aas
popf
scas
sahf
lahf
add
mov
xchg
mov
fld
push
adcl
dec
outsb
adc
repz
movsl
sahf
in
and
out
shll
or
loope
iret
xor
dec
mov
popf
xchg
cltd
call
cmpsl
in
rcrb
clc
mov
and
lret
popf
into
out
cmp
movsb
cli
jl
loop
loopne
push
jne
and
mov
lea
sbbb
sti
lods
pop
mov
mov
xchg
add
dec
xor
xor
sbb
push
or
pop
mov
insb
xor
xor
into
push
jno
sbb
arpl
or
xchg
or
mov
daa
mov
lcallw
aam
jb
push
stos
mov
cmp
xchg
or
sbb
pop
mov
jne
cltd
popf
mov
scas
adc
pop
lock
xchg
and
xchg
xchg
popa
inc
mov
fistl
sbbb
lcall
inc
jb
sbb
inc
xchg
sbb
cmpsb
and
lahf
pop
movsb
sbb
xchg
inc
and
pushf
xchg
xchg
inc
xchg
sbb
push
cwtl
or
cli
add
jne
and
and
gs
lcall
popf
inc
sahf
sbb
push
mov
sbb
sbb
inc
outsl
and
jae
je
jne
jbe
ja
inc
jns
jp
jnp
jl
jge
jle
addb
cltd
mov
mov
sbb
xchg
cwtl
cltd
inc
lcall
sbb
jo
xchg
js
sbb
or
push
mov
movsb
or
mov
sahf
in
hlt
test
mov
mov
ja
pusha
xchg
xchg
xchg
out
jne
ror
adc
xor
mov
push
jb
xchg
mov
test
popa
xchg
das
cltd
arpl
inc
dec
mov
dec
xchg
movl
call
pushf
push
xchg
mov
add
and
sbbl
in
test
inc
xor
popf
and
js
pusha
jge
xchg
mov
out
mov
xchg
mov
loope
pushf
push
jg
xchg
popf
jbe
cmc
pop
movsb
mov
fiadds
cwtl
test
cmp
hlt
mov
insl
popf
imul
jnp
xor
dec
addr16
dec
es
sub
add
pop
adc
ljmp
loope
pop
mov
jge
sub
add
std
jne
xor
mov
push
xlat
fldl
insl
andb
xor
test
push
gs
lret
push
inc
cmpsl
loope
insl
xchg
ds
stos
add
jmp
pop
lods
jb
pop
flds
mov
jnp
xor
xchg
jecxz
mov
sub
mov
dec
jb
inc
and
and
mov
mov
jne
xor
insb
mov
ja
adc
sub
push
xor
push
ret
push
movsl
imul
gs
adc
and
es
outsl
pop
dec
inc
daa
gs
lret
cli
inc
addr16
mov
cld
jae
test
xchg
xor
and
lea
jl
cwtl
xor
popf
and
push
and
test
lods
shl
inc
mov
insl
mov
lcall
mov
sub
jecxz
faddl
mov
sti
testl
adc
push
jbe
push
sub
loope
mov
stos
ret
hlt
mov
loope
jb
insb
test
xchg
into
sub
addb
lods
add
dec
fstl
test
lret
testb
cmp
repz
jbe
loope
dec
ret
gs
dec
xor
xchg
mov
test
in
add
xchg
add
push
xor
sbb
jp
cmp
adc
gs
adc
fcoml
inc
inc
push
jg
push
pop
gs
int3
pop
aam
jne
xchg
gs
inc
xor
insl
es
outsb
orl
lods
add
in
repz
jecxz
aas
dec
xlat
scas
sbb
jecxz
dec
sahf
lock
gs
push
sti
ret
cmc
jne
out
xchg
cmp
gs
cmp
in
mov
popa
and
adc
int3
pop
push
gs
pop
pop
cwtl
rcl
stc
icebp
lret
dec
movsb
jl
in
hlt
inc
cmpsb
imul
std
stos
orl
iret
inc
xchg
mov
les
jecxz
rorb
test
mov
popa
mov
mov
movsb
cs
outsl
bswap
sub
jg
xchg
adc
insl
cmp
movsb
push
sti
lcall
mov
andl
ss
movsb
sbb
fmuls
and
loop
xchg
xchg
sbb
pop
or
push
pop
int3
mov
or
push
notl
negb
sbb
pop
sbb
loop
or
xchg
ja
dec
or
cltd
jno
bound
outsl
clc
adc
cld
push
adc
push
jl
jno
inc
cltd
int3
dec
mov
mov
mov
xor
pop
cmp
into
mov
sub
call
leave
push
lret
jns
dec
push
dec
int3
add
add
dec
mov
jno
xchg
fsts
push
jno
cld
fnstcw
add
cmp
cmp
push
movsb
dec
xchg
ss
int
repz
arpl
xor
mov
add
cltd
sbb
in
push
in
shrl
cld
sarb
mov
mov
push
imul
shll
mulb
push
fdivrs
mov
out
add
inc
adc
in
pop
rol
jge
pop
bound
push
imul
push
xlat
and
into
xchg
add
mov
stos
aad
and
add
loope
shll
lods
mov
push
rclb
out
fs
sbb
out
push
imul
movsb
insb
mov
imul
data16
lcallw
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
data16
lretw
pushw
inc
inc
data16
cmp
sub
and
loope
lahf
and
push
stos
aam
adc
addr16
aad
insb
dec
imul
sub
pop
lds
push
push
pop
imul
mov
inc
cwtl
and
insb
jne
repnz
imul
pushf
or
mov
scas
aad
and
leave
adc
add
sub
cmpsb
and
arpl
mov
loope
rcrl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
icebp
shrb
pusha
push
push
insb
dec
imul
repz
fnsave
sbb
in
inc
mov
mov
mov
mov
mov
xchg
and
fidivrs
jno
adc
cmp
in
cmp
dec
das
mov
sub
je
push
xchg
aam
fbstp
inc
mov
mov
insb
icebp
jo
push
movsb
sbb
add
inc
sahf
aas
fsubs
add
pop
ret
insl
sbb
push
and
pop
xor
adc
push
arpl
sarl
pop
jle
xchg
adc
sub
daa
lret
daa
add
je
ficomps
or
mov
pop
dec
xchg
stc
xchg
les
std
cmp
fwait
pop
call
aaa
jne
loope
xlat
adc
cmp
loope
aam
xchg
pop
rclb
mov
lahf
add
adc
dec
xor
out
mov
scas
pop
push
push
add
push
outsl
andb
daa
cmp
js
jae
mov
stos
daa
test
daa
addr16
or
lahf
xchg
push
xchg
add
or
mov
add
add
xor
xchg
add
pop
out
add
std
mov
unpckhps
adc
mov
loope
fnsave
pop
xor
xlat
sub
xchg
mov
data16
ds
data16
data16
mov
ss
repnz
in
data16
test
jl
xchg
call
cltd
fs
add
mov
loope
rcrl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
sbb
sbb
mov
in
jne
adc
and
sbb
mov
cld
cmp
data16
fsubrs
xchg
push
imul
incb
xor
xor
in
adc
pop
push
std
inc
sbb
jle
push
ds
pop
std
sbbl
mov
xlat
lods
mov
sub
mov
addr16
mov
sbb
mov
daa
ret
xchg
push
into
fildl
sti
lret
cmp
mov
imul
xchg
adc
rolb
mov
roll
dec
pop
or
push
into
fidivl
out
lret
out
in
push
mov
addl
ljmp
cmp
or
sub
ficoms
adc
add
mov
sub
mov
sbb
test
push
xchg
add
icebp
ret
and
xchg
ror
lret
or
sarb
sub
les
mov
dec
mov
pop
xchg
push
mov
lcall
lock
push
insb
dec
cmp
and
push
fnstcw
lret
dec
ret
lret
mov
je
test
test
imul
imul
imul
repnz
mov
cwtl
or
inc
pop
sar
sbb
xor
loope
ret
repz
mov
shrb
fldt
jecxz
ret
push
push
shl
mov
test
push
mov
push
or
xchg
or
dec
nop
xchg
test
addw
add
in
add
push
imul
push
imul
lock
jnp
jne
cltd
mov
cwtl
pushf
push
jl
xchg
fldl
mov
push
fstpt
shll
lret
stos
inc
push
sbb
jae
fmuls
jmp
mov
pop
test
xor
xor
pop
and
cld
or
or
push
pop
fistpl
call
nop
jae
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
and
add
cmc
jl
fstl
push
push
jnp
add
xchg
jbe
mov
inc
mov
jp
ja
stos
jecxz
fcom
fildl
xor
xor
mov
imul
addb
arpl
pop
add
mov
jno
mov
xchg
addr16
rcll
mov
adcl
xor
sbb
arpl
pushf
dec
aad
mov
push
sub
jbe
mov
insb
xor
jne
inc
insb
cmp
xor
pop
or
mov
pop
mov
in
lcall
mov
insb
mov
mov
data16
pop
dec
insb
cmc
sub
pop
aad
push
imul
jg
push
xlat
or
add
inc
addl
xchg
add
sti
aad
incl
jle
add
repz
and
push
sbb
mov
arpl
add
ret
xchg
std
push
mov
stos
mov
push
add
les
std
lods
mov
mov
out
imul
cmpsl
add
imul
pop
or
mov
ds
in
push
pop
hlt
inc
jne
test
xchg
pushf
sbb
imul
adc
jbe
inc
mov
mov
and
pop
push
xlat
adc
or
dec
mov
adc
xor
adc
add
push
push
push
sbb
push
inc
jecxz
sbb
jb
add
out
adc
push
adc
xlat
xchg
repnz
push
mov
add
inc
sti
test
popf
mov
idivb
test
fistps
std
popf
sbb
enter
jg
jle
jge
jl
jnp
jp
xchg
js
in
test
adc
inc
xchg
mov
jns
xor
cwtl
rclb
xchg
mov
in
xchg
sub
mov
jl
jnp
jp
negb
pop
pop
aad
push
sbb
or
inc
inc
jns
loopne
pop
and
add
loope
shll
xor
out
and
loope
pusha
inc
fdivrl
mov
insb
pop
je
test
imul
adc
imul
and
cmpl
push
xchg
iret
pop
mov
and
cmp
std
mov
imul
out
add
aad
aad
sbb
mov
mov
outsl
ja
imul
in
pop
sbb
cmpsl
xchg
inc
push
lcall
push
lcall
push
jl
jo
aad
xor
imul
or
pop
arpl
mov
sub
cwtl
sahf
popa
pop
pop
jb,pt
stc
movsb
outsb
xlat
push
call
cmp
out
push
inc
je
and
movsb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
scas
test
and
and
cltd
aaa
push
jmp
and
push
push
sahf
aad
ds
pop
xchg
popf
xchg
adc
arpl
cmc
dec
pop
insl
cwtl
insb
xor
sbbb
xchg
adc
ja
jo
outsl
mov
lock
lea
add
pop
add
sbbl
repnz
subl
imul
scas
xor
ja
jo
outsl
lcallw
sahf
lahf
ds
and
sarb
xchg
sbb
imul
fsubs
imul
adcb
xchg
and
adcl
jl
jnp
jp
jns
clc
ja
jbe
jne
je
divb
jo
outsb
data16
pushw
push
fistl
lret
pushf
inc
lcall
xchg
xchg
add
mov
xrelease
loop
addb
add
sarl
jl
jnp
mul
fwait
js
ja
jbe
divb
test
test
call
lcall
stos
imul
mov
adc
popf
aad
aad
aad
aad
pop
cwtl
ret
in
xchg
stos
nop
stos
stos
mov
mov
mov
xchg
push
aad
mov
and
push
loopne
pop
jmp
popa
push
popf
mov
mov
push
push
int
daa
jb
loopne
cmp
fs
popf
or
out
pop
mov
push
sbb
pop
in
int
movsb
xchg
in
push
xchg
cltd
pop
aam
xchg
sbb
sbb
pop
push
xlat
cwtl
bound
jle
movsb
js
icebp
je
mov
cli
cmp
ja
lahf
jbe
xor
addr16
lret
clc
dec
repz
popf
mov
js
fwait
pop
sbb
aaa
cmpsb
insb
out
pop
js
xchg
nop
fidivrs
pop
insb
mov
in
call
xchg
mov
mov
fs
mov
jo
inc
sahf
pop
adc
iret
xor
mov
jne
push
xchg
lahf
test
rcrb
rcll
sbb
imul
push
adc
adc
movsl
xchg
mov
fcomps
outsl
in
or
enter
fldlg2
pop
sarl
xor
push
dec
dec
sbb
lea
or
sahf
es
inc
ret
ret
ret
int3
test
js
arpl
sub
dec
addb
fmull
push
xchg
mov
cmp
jmp
hlt
hlt
dec
jecxz
pop
loop
push
push
mov
movsb
pop
sahf
cmp
and
sub
aad
adc
mov
ret
test
fiadds
sub
adc
pop
jo
mov
cmp
bound
lcall
pop
js
mov
rclb
sbb
fcompl
repz
aam
dec
add
movsb
xchg
mov
push
dec
daa
rcrl
mov
xchg
clc
out
push
cmp
fstps
lock
sbb
or
arpl
mov
pop
push
sbb
sbb
cmpsl
call
aaa
push
test
sbb
xchg
pop
sub
into
dec
or
xor
inc
xchg
test
pop
mov
sbb
adc
cltd
in
or
popf
jmp
mov
sub
xchg
pop
sbb
inc
xchg
leave
pusha
insb
sbb
xchg
cld
jo
sbb
xchg
fnstcw
movsb
cmp
test
xor
dec
mov
or
sbb
sbb
mov
jle
xchg
add
popa
push
in
xchg
test
fmuls
lods
lock
fldcw
xchg
movsb
sbb
push
push
mov
cltd
pop
cwtl
in
jo
sar
ffree
lret
lock
push
xchg
pushf
xchg
xchg
xor
adcb
nop
les
jno
pop
push
dec
orb
push
test
ret
xchg
les
shll
jnp
adcl
xor
inc
loop
mov
xchg
and
mov
add
dec
mov
and
out
pop
mov
adc
inc
lret
nop
outsl
push
out
pop
and
push
jno
popf
jl
mov
pop
mov
push
fsubrs
pop
xchg
sbb
push
lahf
mov
sbb
xor
int3
dec
ljmp
and
mov
mov
inc
inc
cwtl
lock
fstpl
popf
cmp
push
dec
call
and
jnp
jae
mov
js
mov
fsts
inc
pop
lods
pop
inc
and
enter
sbb
adc
loopne
push
xchg
sbb
push
push
cwtl
data16
fcoml
call
mov
inc
push
mov
leave
sar
add
fnstcw
ficoms
test
mov
xorl
xlat
sbb
dec
xchg
nop
adc
ficoml
push
xchg
pop
and
mov
xchg
rol
push
out
pop
mov
fcomps
push
pop
mov
add
sub
rcll
push
jae
push
fstpl
cmp
or
adc
cmp
dec
mov
popl
sbb
ficompl
aam
or
push
dec
xchg
pop
mov
sahf
aam
pop
push
mov
cmc
push
ss
push
pop
or
nop
inc
xchg
push
faddl
and
or
mov
ljmp
jmp
mov
out
rorb
rcrb
and
sub
pop
cmp
sbb
xor
jmp
int3
lret
decb
adc
jns
je
jmp
adc
push
mov
pop
jg
lods
add
popf
loop
mov
scas
aas
or
mov
nop
std
push
push
dec
adc
or
mov
mov
enter
lret
and
xchg
dec
mov
push
sbbl
cwtl
sub
push
hlt
dec
mov
dec
push
inc
xchg
pop
inc
idiv
daa
adcb
cmp
push
sub
test
jns
cs
dec
push
sub
lods
js
stos
adc
mov
sti
stos
dec
inc
cld
sti
sub
push
loopne
andl
or
popf
fstps
pop
popf
sbb
out
inc
fistpl
add
aam
addl
leave
push
fstps
jl
push
jge
ds
push
sbb
fcomp
xchg
or
pop
adc
aaa
or
dec
movsb
fadds
cmc
or
push
fstps
and
sbb
cltd
fsubs
imul
push
mov
call
add
std
insb
jne
pop
fcomps
nop
sti
add
push
out
aam
repnz
pop
pop
push
pop
jbe
xchg
dec
sbb
js
andl
cmpb
std
arpl
stos
mov
and
inc
inc
in
out
mov
jl
sti
test
sbb
adc
fstp
mov
xor
pop
loope
sub
xchg
lahf
jno
push
xchg
push
sbb
add
push
aam
sub
sbb
fists
outsl
scas
push
pop
mov
pop
dec
cmp
and
push
insb
mov
pop
aam
fsts
xor
leave
jle
xchg
stos
ror
outsb
cmp
enter
inc
and
in
jge
pop
cltd
cwtl
sbb
int3
fimull
push
stos
rcrb
sbb
push
pop
xor
sbb
movsl
inc
gs
rolb
adc
xchg
sbb
js
scas
ret
ss
pop
pop
mov
lods
xchg
mov
mov
int
nop
xchg
jbe
inc
xchg
xchg
mov
ret
in
inc
cmp
out
xor
sbb
mov
cmp
push
popf
data16
mov
push
sbb
fadds
popf
xchg
cwtl
xchg
or
mov
jecxz
xchg
dec
cli
jecxz
and
xchg
pop
cwtl
inc
pop
fmull
jno
inc
pop
hlt
push
sbb
sbbb
testb
movsb
and
mov
pushf
outsb
sbb
fcoml
lcall
adc
pop
push
adc
and
sub
pop
fists
cltd
pop
xchg
jecxz
dec
mov
lods
cltd
pop
xchg
sbb
movsb
inc
sbbb
sbb
adc
push
lahf
sarl
sar
mov
adc
dec
pop
sbbl
xchg
movsl
leave
in
xlat
push
push
xchg
mov
cltd
inc
and
jle
sbb
mov
push
mov
adc
mov
and
inc
xor
mov
or
repnz
ret
dec
mov
jno
pop
mov
xchg
lcall
mov
rolb
mov
sub
dec
outsb
ja
cmc
inc
out
rolb
cwtl
lcall
push
pop
add
mov
pop
mov
push
mov
pop
and
dec
les
push
mov
shl
sbb
bound
mov
xchg
dec
push
mov
cltd
pop
das
int3
xchg
stos
ficompl
dec
inc
cmpsl
mov
push
push
out
push
lahf
dec
mov
xorb
pop
inc
xchg
inc
cmp
les
mov
pop
fisttpl
out
test
fbld
hlt
daa
pop
lds
pop
adc
hlt
lods
loop
pusha
bnd
inc
pop
pop
mov
dec
sbb
fmull
jle
sbb
sbb
push
fcmove
dec
fcmovnu
xchg
cmp
fwait
inc
popf
jle
and
adc
jp
pop
fstpt
jno
jne
lea
push
sbb
sub
hlt
inc
inc
lahf
mov
sub
jl
clc
popf
int3
jp
orb
and
dec
shll
xlat
jmp
pop
push
dec
rclb
xchg
rorl
xchg
stc
out
mov
loopne
inc
xor
sbb
push
or
jle
shlb
jle
xor
incb
pusha
pop
push
shrb
aaa
movsb
inc
jnp
repnz
and
push
lds
push
inc
pop
cld
out
inc
cld
call
nop
scas
mov
pop
or
mov
jmp
jmp
pop
lcall
push
add
rcrl
dec
sbb
int
cltd
in
mov
pop
cmpsl
dec
lods
dec
xchg
nop
testl
push
and
dec
leave
push
mov
xchg
ret
mov
xchg
push
sbb
loop
dec
xchg
cwtl
lcall
push
shrl
dec
loopne
cmp
mov
cs
mov
lock
clc
and
icebp
popf
cmp
mov
inc
cmp
xlat
jl
sbb
or
dec
push
push
fwait
dec
or
add
xchg
adc
rorl
cmp
inc
push
dec
mov
sub
xchg
cltd
pop
mov
add
pusha
pop
jnp
jns
out
cwtl
scas
pop
adc
xchg
addb
inc
nop
dec
mov
ja
rorl
sbb
lock
sub
mov
adc
or
adc
insl
int
dec
cmp
arpl
sbb
xchg
pop
mov
and
pop
mov
rorb
nop
jnp
dec
orb
xor
or
push
ficomps
mov
rcl
or
push
inc
fsubs
pop
fcomps
lods
mov
push
sbb
pop
push
mov
and
inc
movsl
rcl
push
arpl
or
inc
and
movsb
cmc
pop
mov
jmp
sbb
jbe
pop
or
out
scas
mov
popf
aad
pop
jp
jb
jmp
in
je
and
dec
pop
xchg
es
jmp
insb
mov
lret
enter
orl
sbb
incb
dec
mov
cmp
cmp
dec
dec
test
les
pop
jmp
xchg
jmp
sbb
push
fcoms
xor
lret
dec
xchg
add
push
and
xchg
stc
cld
out
push
mov
insb
sbb
add
std
je
pop
pop
xchg
xor
sbb
clc
xchg
fnstenv
scas
xchg
xor
subb
or
out
adc
mov
or
popf
sti
aam
cli
popa
dec
incl
adc
nop
adc
not
out
nop
xchg
sar
jne
rcrl
insb
pop
sahf
and
and
pushf
fisubrl
shll
mov
jnp
sbb
movsl
cwtl
mov
lret
adc
popf
add
cmp
fimull
cmpsl
call
pop
pop
pop
sbb
jmp
sbb
add
out
pusha
je
sub
and
inc
popf
push
xcrypt-ctr
cmpsl
sbb
insb
scas
push
mov
cmp
dec
push
sub
push
mov
xchg
xchg
xor
fdivrs
pop
aam
pop
xor
lahf
jmp
push
mov
mov
mov
movsl
jbe
lods
inc
or
lret
pushf
lock
mov
adcb
aas
sbb
jo,pt
cwtl
out
add
sbb
fisubs
sbb
out
cmpsl
pusha
pop
cmp
scas
inc
dec
push
adc
mov
test
sub
hlt
cld
pop
idiv
movsl
xlat
into
aam
xor
mov
cwtl
shll
in
mov
mov
stos
cmp
mov
adc
xlat
xchg
xchg
adc
lds
fisttps
pop
push
mulb
js
cmc
mov
jo
imul
mov
shll
sbb
pop
in
ljmp
pop
jnp
aas
fsts
fxch
data16
aam
flds
cwtl
sbb
dec
in
xlat
mov
js
out
sub
xlat
call
or
add
rorb
push
push
pop
mov
push
mov
stos
js
scas
cmp
rclb
lds
ljmp
push
lock
push
sbbb
rol
mov
adc
pushf
mov
push
stos
fdivrl
mov
mov
sti
sbb
mov
add
mov
pop
fldl
in
out
lods
push
bound
xor
lds
mov
mov
inc
cmp
clc
dec
out
nop
fcmovnb
out
repnz
nop
rorb
out
lret
adc
fwait
dec
xchg
and
movsb
mov
mov
out
sbbl
aad
call
js
push
jle
sub
cmp
push
pop
mov
loop
push
pop
sub
adc
movsl
mov
mov
ja
mov
mov
leave
and
lret
push
fsin
pushl
adc
adc
pop
or
xlat
or
mov
fsubl
add
pop
repnz
jg
ds
jle
data16
nop
jl
jbe
ds
push
sti
aam
fimull
stos
sub
mov
mov
cmp
add
fcomps
push
xlat
push
adc
stos
iret
pop
clc
movsl
jl
xchg
cmp
xor
cmp
in
sub
fstps
movsb
bnd
sbb
sbb
cmp
jmp
xor
cwtl
mov
xchg
out
test
ja
push
jbe
sub
scas
arpl
jbe
adc
sub
cwtl
xchg
call
mov
lods
jl
out
in
cwtl
push
ret
push
xor
cmp
out
bound
ret
fistl
mov
sub
inc
and
ja
ljmp
add
push
pop
pop
ds
xlat
pop
dec
mov
dec
pop
mov
sub
cmp
call
jbe
test
sub
cltd
imul
or
mov
mov
into
addr16
cmp
fildll
and
adc
and
and
push
sub
inc
sbb
pop
or
loope
repnz
rcl
gs
ror
pop
xlat
sbb
xchg
adc
pop
loop
int
and
jb
fdivrs
add
mov
je
add
not
adc
rol
xor
loopne
inc
test
shr
js
ret
lods
mov
cmp
mov
inc
enter
and
push
cmp
xor
pop
pusha
cmp
mov
aaa
cmp
lret
outsl
stos
sub
push
xor
dec
movb
sbb
into
cltd
fmuls
push
sti
dec
cmp
jae
mov
sti
add
lcall
rcl
fnstenv
lock
push
in
out
mov
pop
popa
pop
xchg
xchg
and
es
dec
in
push
fbstp
rcrl
outsl
rclb
cld
xchg
int
mov
sbb
push
sbb
iret
fldt
xchg
push
cmp
icebp
out
icebp
cwtl
xor
xor
mov
add
pop
addr16
sub
fildl
and
in
fsubr
dec
pop
add
lods
nop
imul
sbb
fistl
xlat
push
jnp
into
or
xchg
or
sar
sub
mov
lea
fwait
jmp
popf
cmpsl
scas
daa
pop
es
movsl
jle
mov
pusha
xchg
mov
add
lock
jl
or
subb
inc
test
aad
or
pop
movd
dec
fcmovnbe
lods
movsl
cmp
xchg
js
test
jbe
insb
adc
call
jmp
cmp
dec
sets
sahf
lahf
js
push
ds
pop
inc
inc
push
adc
testl
pop
dec
push
pushl
mov
faddp
xor
incb
adc
cmp
stos
xor
pop
ror
stos
and
int
jecxz
fsubrs
clc
push
test
pop
addr16
mov
xchg
xor
xchg
fstps
dec
dec
cltd
mov
push
fmul
and
sub
and
call
cld
dec
mov
xchg
jmp
stos
int
std
cmp
adcl
jb
push
stc
imul
pop
rclb
dec
adc
out
push
loopne
seta
shr
scas
mov
lock
sbb
ljmp
out
jo
repnz
rcrb
jno
push
cmp
pusha
jmp
push
sub
jecxz
pop
scas
fistl
xor
lock
push
jp
or
cmp
out
push
lock
dec
sub
xchg
cwtl
pop
test
sarb
ret
sbb
push
pop
mov
enter
or
or
inc
xchg
xor
clc
xchg
mov
and
adc
loop
lret
cmc
add
daa
or
in
lock
mov
dec
and
inc
xchg
and
fnstcw
xchg
movsb
push
adc
cltd
rcl
sub
push
inc
in
rclb
push
mov
pusha
cltd
or
loop
dec
aam
push
jne
adc
iret
rclb
mov
adc
cltd
test
pop
push
icebp
sbb
adc
push
dec
jg
mov
push
imul
push
dec
nop
adc
xchg
push
adc
dec
push
and
adc
push
insb
cwtl
jecxz
xchg
dec
mov
add
in
adc
adc
pop
push
push
xchg
jle
shll
adc
or
jle
adc
dec
aam
gs
push
lret
shrb
sbb
xchg
xchg
xchg
fiadds
mov
xchg
cld
dec
push
sub
sahf
pop
fmuls
jmp
or
pop
rcll
adc
and
pop
xchg
add
sbb
gs
pop
mov
rcrb
icebp
and
outsb
std
adc
adc
push
push
pop
and
jnp
jo
lret
dec
fimull
rcrb
xchg
xchg
jne
pop
inc
dec
push
pop
xchg
or
es
mov
int3
push
mov
dec
test
ficoml
dec
adc
inc
rorb
xchg
xlat
jmp
push
mov
xchg
push
ror
mov
xchg
push
xchg
rcll
bswap
push
pop
xchg
jle
sar
ficoml
dec
fcomp
push
mov
popf
cmp
mov
and
mov
push
test
push
enter
xorl
or
mov
xchg
enter
dec
rcll
mov
cwtl
cltd
adc
adc
sbb
lret
or
cltd
push
les
fsubrs
pop
iret
xchg
sarb
nop
enter
aam
cmp
rclb
pop
mov
fimull
jne
dec
push
push
out
inc
movl
or
mov
lea
cltd
inc
push
jnp
test
push
and
nop
push
lds
mov
or
rcrl
movd
sub
stos
dec
xchg
mov
cmpsb
and
xchg
xchg
inc
lahf
adc
lea
cmpsl
loope
sarl
xchg
int3
mov
push
xchg
and
xor
jnp
cld
test
xchg
push
loope
rorb
leave
dec
jmp
push
xchg
jo
ucomiss
ret
fmull
fsts
iret
jnp
stc
push
lds
and
xchg
adc
lds
fs
sbb
adc
jecxz
dec
nop
shll
push
xchg
dec
mov
push
push
or
in
jo
or
dec
xchg
cwtl
xchg
rolb
xchg
xlat
pop
dec
mov
out
out
xchg
dec
test
sarb
mov
fbstp
inc
xchg
aam
xor
lret
dec
mov
dec
movsl
outsb
push
adc
push
mov
inc
dec
lret
adc
push
inc
pop
pushf
mov
shl
arpl
push
and
xlat
notb
xchg
mov
and
push
xchg
adc
sbb
push
mov
and
push
or
fists
mov
fistl
cmp
adc
xchg
adc
xlat
fs
mov
mov
test
mov
xor
mov
or
inc
adc
rdtsc
fidivl
push
popf
mov
or
or
push
xchg
xchg
push
jg
cmp
adc
cwtl
push
jnp
mov
pop
in
adc
push
mov
adc
sbb
test
sbb
ljmp
inc
rclb
pop
push
xchg
pop
or
xchg
and
push
push
and
cmpsl
int3
mov
adc
arpl
xchg
xchg
xchg
addl
iret
pop
leave
adc
or
add
adcl
mov
popl
mov
rcr
jecxz
lret
pusha
xchg
ret
xor
cmpsl
or
pop
ror
adc
aam
inc
push
int3
adc
dec
xor
lret
inc
mov
outsl
cltd
xchg
vpshlw
push
ret
sub
aam
dec
xchg
or
xchg
xchg
jle
cwtl
mov
insb
nop
xchg
pop
push
inc
dec
bswap
shl
nop
xchg
mov
imul
rorl
aam
pop
xchg
mov
mov
rolb
xchg
jmp
stos
adc
dec
push
popl
stos
outsb
dec
sbb
or
cltd
adc
mov
testb
dec
mov
push
shrb
cltd
push
fadds
jns
lock
mov
or
lods
stc
lcall
test
scas
dec
or
je
jo
inc
andb
push
add
xchg
inc
out
test
push
or
pop
xchg
daa
mov
ja
xchg
or
fmuls
pop
les
mov
adcl
add
cmpl
mov
dec
jge
push
push
call
push
pop
or
roll
arpl
push
add
lret
adc
jle
mov
jns
dec
dec
mov
pop
hlt
mov
sti
adc
leave
mov
xchg
inc
ljmp
aam
adc
push
dec
adc
inc
mov
sbb
rcll
fcoms
aas
popf
fnstenv
xchg
mov
mov
push
jle
sahf
jmp
dec
xor
loopne
sbb
mov
or
frstor
cltd
in
mov
andl
dec
js
xchg
push
cltd
cmc
cwtl
jecxz
push
dec
xlat
iret
inc
enter
inc
push
cltd
inc
xchg
sbb
push
lahf
in
xchg
jle
xchg
adc
or
xchg
or
out
or
sbb
iret
and
pop
push
add
push
dec
dec
aam
arpl
lret
or
xchg
and
push
fstl
adc
dec
dec
in
aam
loopne
push
push
xchg
sbb
shl
push
pop
or
fstp
test
enter
mov
or
roll
push
pop
push
sbb
or
shll
adc
shlb
mov
lcall
movsl
push
lds
and
xchg
pop
sbb
lods
leave
lcall
push
icebp
mov
sub
push
or
adc
xchg
enter
jle
in
dec
push
or
shrb
sahf
jle
dec
dec
push
test
adc
mov
push
or
inc
scas
aaa
adc
loopne
loope
fidivl
mov
xchg
insb
aam
push
mov
test
sbb
int3
adc
xchg
enter
mov
dec
sbb
push
and
imul
enter
dec
mov
or
arpl
test
or
xchg
xchg
in
jge
aam
or
xchg
aas
push
and
push
xchg
jecxz
rcl
fimull
mov
sbb
adc
dec
jle
mov
dec
xchg
cltd
rorb
or
sarb
xchg
push
enter
adc
leave
pop
push
or
adc
sbb
test
add
bound
sbb
push
or
xchg
adc
rcrb
dec
dec
out
xor
push
addr16
xchg
sahf
dec
or
dec
rol
mov
dec
xchg
addr16
cmp
cmp
sbb
inc
cli
jg
enter
push
mov
dec
push
dec
pop
xchg
dec
ja
jge
dec
fcomps
or
adc
xor
mov
adc
cltd
xlat
adc
orl
leave
fists
gs
nop
push
inc
push
pop
xchg
dec
push
rcl
and
and
shl
adc
and
leave
fld
dec
rclb
out
jbe
sahf
adc
xlat
xchg
lcall
nop
lret
jecxz
inc
cmpb
dec
popl
mov
loop
push
inc
and
or
push
ja
xor
mov
dec
adc
inc
lock
xchg
push
sbb
sti
ljmp
or
push
mov
repz
sbbl
push
or
nop
xchg
fistpl
fldenv
jg
push
mov
add
outsl
dec
adc
enter
add
mov
fs
push
int3
test
xchg
push
enter
rorb
pop
push
push
or
sbb
mov
mov
aam
xchg
sub
jo
dec
jns
sbbl
dec
adc
call
jne
push
nop
pop
dec
push
push
loopne
and
icebp
lcall
adc
inc
push
cwtl
or
fmuls
cmp
int3
dec
add
or
stos
insb
mov
cmp
in
cmp
mov
ret
fadd
mov
mov
lret
ja
jecxz
pminub
pushf
adc
scas
mov
or
or
xchg
setno
jge
push
xchg
pop
and
mov
fidivrl
loope
dec
jle
and
push
or
or
sbb
xor
mov
fimull
sbb
pop
lret
fmuls
xchg
cltd
mov
mov
add
hlt
cltd
mov
xchg
mov
xchg
sbb
xchg
and
or
xchg
mov
test
xchg
xlat
sbb
loope
pop
xchg
sbb
insb
and
cmpsb
mov
dec
clc
and
dec
fldcw
push
dec
ja
stos
popf
pop
lret
jbe
and
and
mov
aad
pop
xchg
rcll
dec
push
pop
nop
cltd
sti
lock
cmpsl
push
shlb
cmp
mov
sbb
in
or
xor
cmp
sub
cmp
xchg
mov
pop
push
fisttpll
push
dec
xchg
adc
push
mov
mov
push
dec
lret
aam
adc
and
out
xchg
jle
setae
dec
pop
xchg
sbb
popf
mov
sbb
xlat
adc
mov
or
mov
xchg
pop
sbb
inc
push
jle
aad
leave
jb
jecxz
push
rclb
mov
xchg
add
daa
adc
cltd
cmpsl
ror
sti
or
fs
push
push
nop
adc
dec
or
lea
shll
gs
xchg
roll
mov
mov
push
pop
adc
mov
or
pop
jns
sub
push
repz
xchg
adc
pop
adc
pop
fldenv
pop
lret
pop
xchg
lds
dec
loope
lret
adc
out
or
add
adc
pop
sbb
imulb
jle
sahf
mov
mov
rclb
lcall
or
mov
mov
outsl
cmp
leave
mov
in
pop
aam
adc
inc
imul
jae
add
shlb
rcll
hlt
adc
xchg
xchg
jne
and
push
push
xchg
jg
jns
inc
adc
rcll
fisttpll
pop
push
roll
ret
xchg
add
rcrl
dec
lret
stos
xchg
mov
adc
add
sbb
dec
int3
lds
dec
or
pop
clc
xchg
dec
pop
sbb
mov
lahf
dec
add
sbb
mov
sbb
xchg
cltd
loope
cwtl
or
xchg
xchg
mov
xchg
adc
fs
adc
xlat
xor
and
cmp
mov
int3
stos
outsb
hlt
cmpsl
fcoms
ficompl
enter
jmp
outsb
adc
clc
xlat
jle
push
int3
adc
cwtl
aam
push
aas
push
adc
cltd
push
call
shll
xor
and
push
dec
or
mov
pop
adc
cs
xchg
out
or
mull
aas
push
mov
jge
push
lods
cwtl
in
inc
dec
flds
std
mov
xchg
push
xor
pop
xchg
dec
or
gs
pop
fsts
fcomps
dec
cmc
sbb
dec
in
dec
aam
scas
pop
adc
test
pop
xchg
dec
push
xchg
lcall
lret
sbb
fwait
js
iret
mov
in
into
jne
push
nop
cmpl
out
sbb
push
lcall
arpl
test
xor
jne
push
push
pop
pop
dec
adc
adc
gs
xorps
fisttps
dec
je
and
push
dec
dec
imul
adc
rolb
xchg
stos
imul
pop
mov
push
movsl
lcall
rclb
fs
xchg
or
pop
inc
inc
es
pop
xchg
jno
or
pop
dec
xchg
or
or
lret
cmpb
hlt
das
shr
or
jnp
adc
push
data16
push
ret
test
or
xlat
nop
aad
xchg
rcll
push
sub
cltd
mov
fsts
movsl
pop
jge
sub
aam
cltd
cli
inc
xchg
mov
aam
mov
xchg
mov
inc
cmp
push
and
or
pop
adc
fwait
sub
add
adc
int3
dec
addr16
ficoml
rclb
adc
addr16
sbb
mov
arpl
setns
out
mov
test
xchg
or
add
pop
dec
les
push
dec
adc
xchg
mov
push
orl
arpl
and
sbb
fdivs
xchg
jne
or
pop
mov
push
and
stos
xor
ljmp
pop
fldl
and
sbb
mov
or
jo
xlat
leave
rcrl
hlt
out
push
push
jnp
and
mov
push
inc
and
loopne
gs
dec
dec
dec
or
pop
mov
fmuls
jge
inc
xchg
rcrl
push
mov
push
int3
fcoms
mov
cmpsl
cwtl
fiaddl
jecxz
dec
dec
xchg
push
shrl
jno
xchg
pop
dec
enter
pop
pop
repnz
push
pop
lret
lock
in
pop
adc
fcomp
inc
js
xlat
sub
in
adc
or
out
push
movb
mov
imul
mov
sbb
pushf
cmp
mov
push
lret
push
into
loope
mov
fcompl
dec
daa
popf
mov
test
or
pop
pop
xchg
fadds
push
sbb
gs
leave
xchg
push
sbb
movsb
xor
dec
test
push
adc
loopne
rclb
add
adc
lods
hlt
cs
sbb
push
stc
push
fiaddl
push
or
cltd
cltd
mov
jmp
fistps
lds
rcr
out
test
xchg
rcl
jecxz
dec
inc
fprem1
inc
mov
inc
in
gs
push
fmul
mov
cwtl
mov
pop
push
test
xchg
xchg
mov
cwtl
int3
mov
cltd
xchg
ret
pop
xchg
fstl
mov
loope
mov
rorl
rcr
dec
cwtl
out
or
adc
aam
adc
push
je
mov
das
iret
dec
popa
int3
mov
dec
xlat
adc
icebp
add
dec
or
xchg
xchg
sti
push
or
mov
dec
dec
pop
push
sub
sub
or
dec
pushf
aam
imul
fistps
les
push
dec
add
stos
repz
jne
pop
fsts
xlat
fisttpll
push
or
dec
mov
arpl
or
les
adc
xchg
daa
insb
dec
rcrl
sbb
rorb
imul
pop
ljmp
pop
and
mov
xlat
push
push
and
test
or
push
cmp
dec
add
out
jne
fsts
dec
in
fs
mov
xlat
les
ss
cli
aaa
out
or
or
je
test
push
cmc
xchg
psrad
pop
xchg
xchg
xor
lret
and
xlat
mov
fimull
dec
xchg
dec
push
sbb
hlt
and
dec
inc
sbb
adc
push
push
push
jns
jns
gs
paddq
dec
dec
leave
iret
cmpl
sbb
adc
sbb
xchg
ret
jle
pusha
fsts
fwait
adc
inc
sbb
aam
rcll
adc
sub
xchg
leave
cs
adc
cwtl
cltd
shl
test
xor
test
sbb
pop
push
mov
roll
pop
xchg
or
sub
cmp
push
jne
push
lret
or
dec
notb
push
leave
adc
xchg
pop
adc
xchg
adc
insb
mov
loop
xchg
fsts
jns
fistpl
push
mov
int3
adc
xchg
nop
mov
pop
movsl
in
dec
adc
in
push
out
mov
cmc
inc
adc
jne
or
xchg
movmskps
add
dec
aas
xor
xchg
inc
xchg
shll
lcall
jg
push
xlat
fimuls
pop
ror
adc
jge
or
xchg
pop
pop
xchg
sub
pop
lret
in
mov
pop
push
jle
or
addr16
and
dec
xchg
mov
or
test
pop
dec
sub
pop
adc
ror
pushf
addb
dec
jecxz
push
push
sub
in
or
or
repnz
cltd
dec
push
jne
adc
rcr
add
inc
test
mov
shlb
inc
rclb
or
xchg
lret
int
int3
xchg
rcrl
push
inc
push
mov
movsl
xor
jmp
int3
push
loop
or
push
mov
leave
sub
pop
mov
mov
nop
dec
dec
adc
lds
enter
aam
pop
fsts
sbb
xchg
rcrl
rorb
mov
dec
dec
or
data16
xchg
stos
out
lods
mov
mov
xlat
lret
arpl
mov
neg
outsl
push
push
idiv
and
mov
lcall
xchg
xchg
aam
in
jbe
popa
nop
cltd
xchg
pop
stos
xchg
insl
xchg
push
fsubs
mov
adc
push
add
hlt
push
xor
rorl
push
sbbl
push
aaa
pushf
fcoms
cltd
imul
xchg
jg
jns
lcall
rcl
mov
imul
push
adc
in
mov
xchg
push
push
xchg
xchg
test
xor
add
pop
xchg
icebp
xchg
mov
enter
jne
adc
pop
adc
jg
or
leave
dec
mov
or
call
mov
sub
adc
dec
nop
rorl
xchg
pop
pop
fs
dec
or
mov
xor
shl
or
xor
dec
dec
add
jecxz
pop
mov
xchg
sbb
xchg
xchg
lret
fs
loopne
test
and
pop
enter
lret
dec
pushf
fmuls
movsb
sbb
mov
nop
xchg
inc
dec
fdivrs
insb
push
sub
push
push
xlat
inc
insb
movsb
xchg
jl
push
imul
pop
inc
adc
enter
subl
xchg
fwait
adc
sahf
mov
adc
xchg
xchg
adc
mov
lds
jp
or
and
add
clc
inc
or
jecxz
push
push
push
or
aam
rclb
cmp
dec
ret
outsl
fnstenv
or
xchg
call
call
in
sbb
cwtl
push
jno
fstps
mov
xchg
lret
mov
call
inc
mov
xor
xor
mov
in
loop
arpl
and
jns
jne
lret
xchg
iret
repnz
sub
push
das
test
or
xchg
mov
dec
jno
mov
popf
dec
cwtl
adc
mov
xor
mov
dec
arpl
push
push
and
scas
loope
xchg
add
jle
xchg
pop
pop
mov
je
jge
dec
jge
push
dec
xchg
adc
mov
push
lods
jbe
dec
adc
or
or
adc
outsl
gs
ja
mov
pop
lods
lea
enter
pop
in
pop
jnp
movsb
xchg
out
add
adc
xlat
xchg
arpl
aam
mov
and
pop
dec
dec
push
jmp
push
ficoml
sarb
rorb
adc
pop
mov
aas
add
or
xchg
aam
and
dec
dec
push
enter
jne
or
loop
xchg
mov
ret
iret
sbb
arpl
rclb
stos
and
xchg
fmuls
dec
mov
or
adc
pop
mov
push
movsl
enter
dec
leave
jo
sbb
xchg
mov
addr16
mov
loop
aam
shl
xchg
rcll
or
dec
or
mov
cwtl
adc
mov
lock
sbb
in
or
sbb
jle
loopne
mov
jno
out
stc
flds
dec
push
dec
lods
push
jl,pt
fwait
mov
outsb
and
or
pop
popf
ljmp
inc
xchg
icebp
and
adc
push
iret
leave
nop
or
mull
xchg
mov
xchg
popf
xor
add
and
dec
adc
int3
test
les
stos
ret
dec
sub
adc
sub
jg
pop
or
or
out
xchg
enter
xchg
dec
shl
js
iret
xchg
xchg
jae
adc
push
ficoms
enter
dec
mov
or
push
xchg
popf
inc
cwtl
push
sbb
jg
int3
dec
pop
dec
xchg
and
mov
xchg
or
mov
mov
dec
push
adc
rclb
mov
mov
mov
int3
inc
push
ret
ja
mov
lods
stos
fnstcw
ret
fildl
push
sti
fstl
adc
mov
in
rclb
or
pop
sub
jbe
xchg
inc
jbe
ljmp
dec
dec
cltd
jle
arpl
ss
movl
fisubs
mov
pop
pop
pop
mov
adc
cltd
fcmovu
inc
pop
jns
imul
adc
scas
push
mov
cmp
sub
imul
cltd
rolb
in
xchg
or
sets
xchg
xlat
mov
dec
pop
movsl
inc
out
lret
repz
aam
fmul
fwait
orl
inc
dec
rclb
rorl
loop
pop
add
push
dec
out
jns
shrb
mov
dec
mov
pop
aam
out
hlt
sahf
push
dec
xlat
imul
inc
push
fsubr
push
or
mov
xlat
add
cwtl
out
lcall
orb
fnstenv
xchg
mov
jnp
nop
dec
sub
iret
cltd
cld
dec
sub
popf
pop
push
sahf
cwtl
inc
dec
xor
iret
mov
cltd
adc
mov
sub
jb
and
pop
dec
adc
dec
xlat
aam
outsb
cmp
rclb
ret
sub
xchg
push
and
ror
or
aas
nop
incb
push
xor
fnstenv
rorl
dec
pop
mov
or
shrl
sbb
aad
pop
aam
inc
test
push
and
in
hlt
stc
add
dec
nop
dec
pop
or
cmp
testb
push
gs
mov
cmp
lock
orl
sti
fsts
rolb
pop
and
dec
and
inc
lock
push
pop
jg
lahf
push
setae
leave
adc
cmpsb
pop
inc
pop
test
ljmp
or
mov
or
or
push
je
xor
in
rcrl
in
lret
or
and
mov
adc
or
mov
data16
es
in
nop
jne
pop
push
es
int3
or
jne
rorb
push
jne
or
push
adc
fbstp
inc
lcall
pop
clc
xchg
jnp
dec
hlt
orb
push
sub
xchg
stos
adc
adc
and
rclb
dec
cmpsl
mov
lret
push
enter
sub
cltd
dec
xchg
lods
in
mov
mov
xchg
movsb
jg
sub
adc
and
pop
mov
push
paddsb
testl
push
or
jno
xlat
pop
dec
dec
pop
pop
xchg
pop
push
pop
out
sbb
jle
pop
loope
aaa
xchg
dec
enter
sbb
fstl
mov
push
mov
and
push
xchg
out
mov
aam
xlat
iret
dec
in
mov
lahf
aam
xchg
shr
add
add
leave
sbb
xchg
mov
mov
pop
xlat
push
and
mov
rorl
jecxz
push
xchg
jns
mov
or
iret
xchg
and
push
mov
add
test
adc
bound
dec
arpl
xchg
pop
leave
xchg
adc
cwtl
xor
add
adc
fists
arpl
vprotb
cwtl
dec
pop
cmpsl
cmpsl
ret
dec
push
aam
mov
test
fimull
and
dec
shl
push
leave
pop
xchg
lahf
or
push
dec
dec
mov
mov
xchg
push
mov
xchg
cmpsl
das
nop
push
cmp
jo
fbstp
addr16
lds
push
push
pop
sbb
or
lret
pop
ret
movsb
dec
or
pop
adc
enter
inc
mov
adc
movsb
or
rcll
jne
or
xchg
push
nop
xor
push
hlt
loopne
mov
mov
sub
xchg
push
xchg
stc
cwtl
imul
stc
out
gs
rcrb
cwtl
push
mov
pop
jge
cmpsl
enter
dec
jle
sbb
add
ds
dec
fs
pop
cwtl
int3
mov
or
and
push
push
mov
xchg
enter
push
gs
pop
mov
push
aam
push
jg
dec
dec
out
repz
hlt
int3
sub
dec
rcll
test
push
mov
pop
push
xor
repnz
sbb
loope
push
hlt
xchg
fmul
int3
mov
xchg
sbb
lret
arpl
inc
add
push
adc
adc
dec
pop
adc
dec
or
dec
cmp
push
xchg
sarb
mov
add
mov
int3
or
mov
mov
addr16
lret
push
ja
loopne
push
push
sahf
push
mov
fadds
cld
rorl
int3
push
push
lahf
push
cwtl
adc
sbb
jp
dec
ficompl
add
adc
or
inc
adc
fstl
adc
cwtl
in
xchg
or
add
cs
fdivrs
in
mov
pop
sub
hlt
add
xchg
push
stc
adc
icebp
mov
in
dec
ss
ret
push
dec
test
rclb
inc
jp
xchg
xchg
mov
push
xor
jl
xchg
push
adc
sub
push
imul
adc
lret
int3
ficoml
mov
mov
addr16
dec
rcrb
pop
jg
addr16
fwait
dec
mov
iret
xchg
adc
pop
orl
aad
leave
loopne
jge
push
ja
mov
lock
dec
iret
dec
insb
xchg
cwtl
xchg
or
xchg
fimull
lret
mov
adc
jbe
cmpsl
fists
adc
pop
mov
cwtl
jno
or
inc
lea
pop
mov
lea
push
iret
or
lock
dec
shrb
enter
int3
loop
aam
gs
xchg
xor
push
adc
or
sbb
fistl
mov
jecxz
xchg
mov
jg
ds
ret
imul
or
shlb
cltd
xchg
or
jae
loopne
outsl
hlt
pop
mov
mov
or
or
mov
jmp
mov
cmp
movl
cmpsl
gs
adc
dec
sete
lods
pop
jmp
sti
fmuls
dec
dec
lea
mov
dec
pushf
enter
xor
push
fcom
push
dec
jbe
pop
rcrb
fwait
in
mov
xchg
dec
cmp
dec
dec
xor
iret
push
mov
push
mov
mov
iret
repz
inc
inc
dec
fs
or
ret
cltd
and
xchg
mov
lcall
fmuls
push
cmpl
mov
rsm
shrb
jmp
push
mov
je
xchg
dec
xor
or
adc
rorb
inc
pop
fbstp
rorl
xchg
adc
inc
push
or
lea
push
mov
mov
addr16
fmuls
ret
jno
xlat
push
in
cwtl
rclb
or
mov
pop
dec
pop
iret
dec
loop
adc
ret
push
fwait
test
dec
adc
xlat
rcr
aaa
loope
cmc
loope
or
xchg
inc
fldcw
adc
jns
jg
pop
xchg
lret
push
int3
fcompl
iret
push
hlt
xchg
nop
mov
loopne
hlt
lret
dec
aam
mov
inc
je
leave
test
dec
mov
xchg
pop
nop
ds
cwtl
inc
xchg
lret
xchg
iret
xor
push
dec
loop
mov
xor
ret
ds
call
aam
and
enter
add
shll
ja
inc
add
push
dec
insl
pusha
xchg
push
or
pop
push
test
jns
jg
or
dec
icebp
movsb
mov
pop
or
fs
sbb
mov
lds
ficompl
orl
or
cmp
cmpsb
jb
sti
xchg
or
insl
sbb
xlat
enter
inc
insb
push
fmuls
imul
dec
dec
sub
test
adc
roll
push
push
lret
cwtl
xchg
push
loope
mov
push
fcomps
and
int3
push
xchg
insl
mov
dec
xchg
jne
lret
adc
or
adc
ja
or
pop
or
adc
ret
lcall
jge
xchg
or
push
xchg
push
aad
addr16
dec
push
xchg
stos
pop
leave
push
sbb
outsl
inc
or
arpl
loop
dec
push
repz
popf
lret
cwtl
dec
mov
lea
mov
or
pop
fadd
sub
mov
mov
rcll
mov
enter
lret
adc
mov
je
jne
push
adc
insb
dec
and
shlb
sbb
adc
dec
and
and
xchg
dec
or
xchg
push
fcmovu
jle
or
je
call
add
pop
in
call
rclb
pop
xchg
pop
repz
mov
jle
xlat
stos
mov
dec
xchg
dec
sbb
or
sbb
inc
dec
leave
pop
dec
pop
jp
int3
iret
jg
imul
enter
movsb
xor
xchg
dec
les
or
sbb
rorb
jne
iret
xchg
cmp
rolb
cmp
test
xchg
pop
jns
cltd
lret
push
dec
adc
jae
push
or
pop
nop
dec
dec
ja
adc
int3
mov
xchg
jo
arpl
or
iret
and
push
mov
rolb
adc
push
insb
lahf
sti
inc
or
stos
scas
lret
shrl
sbb
xlat
aad
jge
std
adc
and
cmp
or
lcall
xchg
inc
les
test
pop
enter
mov
shl
mov
rclb
lret
dec
sti
mov
sbb
in
jg
jle
loopne
loope
adc
dec
ja
fisttpll
dec
ret
dec
inc
int3
int
mov
dec
aam
sub
mov
pop
xor
jl
or
aad
jg
dec
ljmp
dec
fdivrs
fistl
mov
ljmp
pop
rorb
pop
dec
pop
minps
fs
mov
and
xchg
adcl
push
lret
ss
and
dec
inc
push
dec
popf
cltd
or
fstps
push
xor
jge
or
in
lcall
arpl
push
cmp
popf
test
mov
rclb
xchg
mov
push
dec
push
inc
fmuls
jb
push
mov
jne
jge
push
dec
xchg
adc
lret
or
int3
push
push
fidivrl
mov
leave
or
sub
in
insl
cld
rcrl
je
inc
mov
int3
fs
push
push
shlb
andl
or
pop
mov
fisttpll
xchg
fcoms
imul
sahf
mov
ds
ret
and
push
cltd
mov
adc
rorl
mov
out
cmp
pop
add
nop
flds
add
xor
es
imul
es
rolw
sbb
xchg
inc
xchg
lods
adc
sbb
inc
jae
adc
add
inc
in
lret
cltd
or
dec
pop
imul
xchg
lret
dec
sbb
xchg
push
mov
adc
in
rcll
out
test
int3
pop
test
dec
pop
or
push
mov
adc
movb
out
lock
or
mov
jl
mov
mov
sub
jg
push
xchg
xchg
xchg
xchg
shrb
ficoml
dec
int3
popf
test
pop
or
mov
push
lcall
jl
cwtl
jbe
enter
nop
inc
push
mov
dec
pop
or
push
pop
bound
aad
dec
dec
mov
xchg
xchg
dec
ror
mov
mov
xchg
mov
rcrb
or
insl
push
or
cmp
dec
xchg
pop
mov
push
js
out
int3
rcr
mov
jecxz
mov
aaa
sub
pop
std
rcll
dec
mov
fistpl
push
jno
adc
lret
jnp
lcall
out
in
xlat
push
mov
sub
pop
mov
dec
adc
inc
and
push
push
xchg
hlt
es
mov
or
int
inc
dec
push
mov
shlb
frstor
nop
push
dec
cltd
inc
loop
gs
in
xchg
rcll
loop
mov
xor
xchg
adc
pop
dec
mov
xchg
fsts
add
push
cltd
hlt
add
dec
leave
xor
hlt
inc
push
cs
insb
jne
or
cmpsb
in
lods
shrb
iret
adc
enter
push
mov
xchg
imul
pop
fcmovne
push
push
xor
or
jne
adc
xchg
mov
or
push
xlat
inc
mov
ljmp
or
jne
cltd
push
pop
mov
xlat
enter
ficompl
lret
in
pop
push
add
push
aas
or
ljmp
lcall
or
jnp
mov
les
push
xchg
push
cltd
loopne
shlb
adc
sbb
cmpsl
xchg
loope
xchg
stos
xchg
inc
mov
add
sti
mov
pop
rcl
jne
dec
xchg
cwtl
jb
push
jle
xorl
xchg
and
or
aad
inc
leave
dec
inc
mov
jne
rclb
lret
sub
push
adc
or
pop
nop
adc
or
mov
push
jbe
aam
jns
sahf
push
push
pop
scas
adc
stc
or
push
in
jle
inc
dec
or
adc
in
xchg
or
fwait
or
les
xor
mov
pop
xchg
push
or
push
xchg
in
xchg
mov
loop
pop
or
addr16
gs
mov
mov
pop
inc
add
inc
xchg
gs
push
shl
xchg
popa
lahf
xchg
or
sbb
xor
or
jne
lret
xchg
xchg
pop
xchg
fstps
xor
adc
or
loope
rorl
cltd
iret
or
loope
adc
lods
pop
xchg
push
mov
adc
mov
add
pop
jl
dec
test
mov
push
pop
sbb
or
push
stc
lret
lea
dec
mov
fstp
sbb
nop
icebp
or
jle
hlt
lahf
sarl
fiaddl
stos
mov
pop
xchg
dec
orl
inc
out
mov
fstl
dec
add
and
xchg
lods
and
ljmp
or
or
adc
idivl
lret
rorl
xchg
fimull
jne
sbb
and
lds
pop
pop
or
and
push
loopne
arpl
iret
jno
lcall
push
movl
push
loopne
xlat
pop
inc
in
dec
sbb
loopne
pop
fistl
enter
imul
push
jns
pop
xchg
int3
enter
and
xchg
leave
dec
push
inc
mov
mov
push
dec
je
mov
fidivl
dec
push
mov
imul
mov
cmc
adc
aam
dec
pop
cltd
cltd
in
or
rorb
fnstenv
push
roll
push
dec
js
fdivrs
mov
loope
lret
sub
adc
push
inc
xchg
ja
dec
pop
test
xor
test
push
fs
push
adc
inc
mov
push
fstps
pop
cmp
jg
out
popl
xchg
scas
lret
add
dec
xchg
mov
or
inc
jle
xchg
nop
outsl
xlat
dec
push
ljmp
and
lods
std
adc
sahf
call
sbb
movups
mov
and
mov
out
fcoms
dec
insb
in
dec
dec
rorl
je
sti
push
nop
ljmp
dec
pop
adc
xchg
hlt
xchg
repz
dec
dec
repnz
shl
push
loope
mov
pop
sbb
sbb
mov
cltd
mov
popf
jae
fistl
jecxz
or
adc
lods
cmp
jle
leave
pop
push
cmp
push
or
lret
adc
pushf
push
or
sbb
mov
or
out
lcall
mov
add
jg
push
shlb
push
inc
or
dec
ja
daa
es
mov
mov
pop
lds
stos
xchg
jle
mov
xchg
sarb
dec
pop
xorb
nop
fstps
inc
repnz
shll
xor
pop
ds
pop
xrelease
jo
adcl
xchg
loope
ds
rorb
dec
xchg
push
dec
mov
sbb
cmpsl
pop
push
and
addr16
dec
mov
or
int3
stc
xchg
push
test
mov
push
xchg
dec
xchg
loopne
enter
std
and
leave
lock
mull
fs
adc
adc
popf
push
sbb
inc
jmp
nop
lock
xor
xor
and
push
xor
cltd
test
push
xchg
dec
es
push
sbb
enter
jbe
mulb
push
push
enter
jge
inc
or
push
dec
lea
push
cltd
mov
mov
out
push
xchg
push
shr
movsl
subb
dec
rorl
aam
xlat
pop
aas
add
test
pop
mov
or
jns
xchg
sub
addr16
mov
xchg
push
push
xchg
and
dec
aam
add
xchg
iret
or
dec
or
xchg
jle
mov
xchg
lea
rcll
or
mov
xchg
adc
sbb
rcrb
pop
aam
mov
int3
imul
sbb
roll
dec
lcall
push
or
xchg
sbb
mov
xchg
xor
xchg
dec
and
fidivrl
xor
gs
lret
xlat
adc
pushf
push
mov
mov
pop
push
cwtl
mov
call
aam
adc
fldcw
out
adc
dec
or
outsl
nop
xchg
or
lock
arpl
mov
jo
loopne
adc
scas
jg
or
xlat
xor
in
xor
push
mov
or
mov
dec
inc
pop
pop
bswap
push
dec
or
xchg
xchg
aam
mov
or
adc
jl
cltd
xchg
sub
outsl
push
dec
jns
movsb
rorb
lret
dec
repnz
movsb
lea
jne
mov
xchg
cmp
mov
sbb
dec
mov
push
or
out
xlat
mov
xchg
mov
pop
sahf
fimull
fsts
dec
xchg
rdmsr
decb
jle
push
rclb
inc
pushf
lock
insl
jbe
rorl
push
jmp
inc
cmp
aam
popf
adc
jb
cs
fistl
pop
adcb
adc
and
mov
adc
js
xchg
sbbl
pushf
push
in
mov
push
shlb
leave
arpl
shl
shr
jp
xchg
jl
adc
jecxz
pop
adc
xchg
or
dec
pushf
or
or
fsubs
lret
add
xchg
push
arpl
xchg
arpl
sbb
jp
dec
bound
mov
sbb
mov
or
lea
jge
lret
pop
xchg
aam
sbb
aad
push
xchg
insl
sbb
or
push
cwtl
lods
loope
stc
adc
loope
adc
pinsrw
push
es
test
aam
xchg
pminsw
sub
mov
push
mov
pop
dec
jmp
add
push
xchg
mov
inc
push
pop
mov
cli
and
push
int3
cltd
or
jne
dec
dec
lds
mov
xchg
jecxz
xchg
iret
int3
leave
push
mov
rorl
ret
filds
lret
mov
dec
xchg
xor
pop
pop
sbb
push
inc
add
idiv
dec
std
cwtl
add
dec
leave
pop
sub
shll
aam
fs
mov
and
adc
cld
push
jae
adc
nop
pop
rcl
jle
arpl
inc
fstl
leave
adc
jne
dec
dec
mov
push
xchg
rcrl
dec
mov
inc
dec
mov
inc
mov
lahf
jmp
xchg
test
xor
hlt
push
xchg
nop
sub
adc
insl
inc
or
adc
xor
outsb
push
dec
daa
adc
ljmp
push
fwait
mov
mov
xchg
in
mov
xchg
lret
pop
jnp
mov
pop
dec
mov
or
push
test
push
xchg
push
repz
rcrb
dec
mov
iret
and
mov
int3
shrl
jg
and
adc
inc
inc
lods
pop
mov
dec
pop
jg
xchg
dec
fcompl
mov
test
fnstenv
xchg
dec
inc
enter
in
push
loopne
insb
sahf
fisubrl
pop
out
les
iret
xchg
push
fwait
sbb
dec
dec
dec
dec
rorl
es
enter
int3
jp
xchg
outsb
aas
arpl
xchg
push
and
dec
bound
dec
es
sub
pop
loope
mov
test
iret
rorb
mov
loopne
dec
mov
ja
addl
mov
loop
adc
push
push
inc
sbb
int
adc
push
loop
pop
inc
xor
pop
xchg
dec
add
mov
xchg
sub
xchg
and
and
mov
fisttpl
dec
and
xchg
test
sbb
xchg
push
xchg
jno
popf
ficoml
decb
ficoml
in
lret
jg
mov
inc
push
or
dec
nop
test
imul
xchg
push
lret
jns
shrb
push
jecxz
xchg
or
inc
push
dec
ljmp
pop
ret
enter
arpl
mov
xor
inc
arpl
mov
jecxz
push
sub
xchg
aad
rcl
inc
lret
dec
rorl
mov
and
addr16
push
mov
sar
mov
push
gs
push
push
xchg
andl
lret
fsts
pop
into
push
je
jne
sbb
dec
xchg
fiaddl
ja
fists
mov
mov
movl
mov
adc
xchg
dec
pop
xchg
nop
adc
lret
dec
int3
andl
iret
or
push
dec
sub
cwtl
sbb
adc
push
cwtl
cmpl
and
mov
ret
daa
pop
iret
movsb
dec
xchg
insl
mov
or
inc
sbb
mov
lret
in
fwait
jl
or
and
push
iret
or
push
ljmp
or
or
jmp
arpl
jns
xchg
call
xchg
push
popl
pusha
loope
pop
xchg
sbb
or
mov
push
push
pop
dec
pop
mov
push
cltd
aam
jns
xchg
xchg
push
rcll
jb
xor
in
inc
jns
xchg
or
and
and
lret
pop
push
je
pop
push
xchg
imul
pusha
pop
rcll
xchg
popf
fmull
push
and
cltd
rorl
addl
xchg
adc
loope
push
lret
mov
sbb
rclb
test
icebp
pushf
shll
movsb
mov
stc
and
mov
adc
dec
cmp
sti
push
scas
jecxz
int3
xchg
cld
aam
in
and
pop
hlt
inc
adc
xlat
xchg
xchg
dec
jg
test
mov
lea
mov
fimuls
enter
mov
hlt
xor
dec
jbe
aam
negb
pop
pop
lcall
dec
mov
in
popf
jmp
and
leave
cltd
push
xchg
mov
or
push
push
pop
adc
push
nop
push
pop
in
gs
or
pop
pop
push
std
ficomps
ret
push
sub
xchg
xchg
es
es
popf
mov
ja
or
arpl
push
xchg
mov
int3
sub
dec
xor
mov
clc
dec
gs
dec
mov
push
mov
cmpsb
pop
sahf
rorl
insb
dec
movsb
adc
les
ja
xchg
xlat
cmpl
dec
push
cmpsl
lret
jmp
push
hlt
xchg
push
or
push
rorb
pushf
and
mov
fwait
mov
inc
jecxz
fcmovbe
push
cmpsb
push
jae
std
xchg
or
adc
dec
test
ret
adc
mov
or
push
aad
xchg
es
bound
lret
mov
jle
dec
mov
clc
sbb
arpl
mov
push
adc
inc
push
push
aam
out
push
lret
js
cs
ftst
and
cmp
or
enter
lahf
cltd
xchg
lret
inc
and
and
mov
push
push
push
xchg
sub
sbb
and
push
lret
pop
rorb
dec
negb
push
xchg
iret
xchg
or
adc
mov
and
and
rol
sub
iret
cwtl
test
or
add
push
verr
pop
pop
fdivs
bound
ljmp
push
dec
adc
push
push
adc
mov
push
out
test
push
repz
outsl
loopne
int3
push
pop
nop
gs
fld
iret
pop
dec
cmpsb
lea
adc
enter
popf
mov
loopne
rorb
push
lea
jg
add
pop
or
sub
xchg
pmaddwd
xchg
adc
adc
cltd
jg
mov
mov
xlat
xchg
jnp
fstl
fcmove
mov
fisttpll
aad
mov
xchg
push
movsb
pop
mov
adc
loopne
and
aaa
jle
cltd
jo
loop
rorl
aam
or
pop
sti
mov
lcall
insl
mov
rorb
iret
pop
pop
adc
or
test
test
push
xchg
mov
cwtl
ret
inc
lea
psrlw
dec
sbb
pop
mov
push
scas
fstl
jle
adc
lods
outsb
xchg
pop
mov
jae
pop
or
pop
xchg
sbb
push
cld
cmp
push
cmpl
dec
dec
cltd
les
dec
pop
cmpsb
pop
mov
daa
scas
mov
mov
adc
xchg
fcoms
pop
hlt
mov
adc
lea
adc
dec
xchg
insl
stc
mov
out
movsb
ror
aam
inc
ret
mov
movsb
xor
adc
mov
mov
adc
rorl
fidivl
dec
rcrb
or
xchg
push
add
ljmp
ror
cmp
push
xchg
xchg
repz
movsb
rcll
or
push
sub
pop
and
addr16
mov
pop
call
cwtl
ret
and
sbb
clc
loopne
loopne
loopne
and
iret
ljmp
xchg
jne
dec
fcomps
xchg
in
rol
adc
jl
xchg
xchg
jb
and
stc
inc
xchg
xchg
adc
out
adc
xchg
sbb
mov
int3
dec
or
pop
aas
jle
dec
mov
mov
jnp
loop
or
ret
ja
enter
inc
mov
xchg
mov
push
mov
lret
inc
cmp
cltd
mov
xchg
insb
sbb
call
mov
or
push
call
push
sub
sbb
sbb
loopne
push
cmc
rcll
adc
jge
dec
cwtl
aam
in
fxch
xchg
push
fndisi(8087
xchg
dec
xchg
pop
lret
sbb
mov
mov
adc
xchg
or
in
mov
mov
push
xchg
adc
jecxz
pop
xchg
jo
imul
push
mov
adc
mov
jecxz
pop
aaa
xlat
cli
enter
inc
adc
ja
cmc
mov
std
xchg
dec
popl
adc
mov
xchg
lods
push
mov
rorl
fistps
add
dec
sbb
testb
push
mov
or
arpl
mov
rcr
outsl
push
enter
sub
addr16
dec
mov
call
xchg
push
sbb
fstpl
enter
pop
lods
gs
adc
fimull
iret
xchg
xor
arpl
push
inc
or
jle
adc
fmuls
or
sbb
out
xchg
xchg
dec
cld
cmp
mov
js
mov
push
popf
cwtl
lcall
cmpsl
mov
add
loope
push
or
or
enter
push
adc
and
mov
push
int3
leave
xchg
sbb
adc
fdivs
test
mov
pop
loop
or
test
mov
dec
and
push
aam
sub
lea
pop
jg
cmp
pop
aam
xchg
shlb
adc
nop
hlt
pop
jecxz
mov
dec
inc
out
inc
xchg
mov
inc
xchg
out
dec
lret
jns
fwait
adc
call
push
sbb
repz
xchg
bound
cmp
insl
mov
or
or
pop
pop
dec
lret
cltd
leave
cltd
and
push
imul
sti
cld
pop
imul
jmp
testl
cwtl
mov
push
pop
andb
jecxz
push
lret
dec
push
or
push
jb
dec
inc
aam
sahf
lds
fimull
adc
and
push
push
or
in
inc
ljmp
ficoml
mov
sbb
int3
adc
adc
fisubl
hlt
mov
pop
push
movsb
pop
push
shll
mov
icebp
call
push
push
mov
leave
add
pop
dec
dec
insl
dec
mov
lcall
movsl
mov
enter
adc
mov
push
inc
popl
dec
andl
pop
adc
rcrl
jge
push
enter
jae
push
ja
rclb
sbb
adc
adc
mov
mov
or
sub
pop
cwtl
dec
scas
arpl
imul
lret
lcall
adc
push
push
dec
les
rorl
push
dec
subb
pop
lods
xchg
push
or
cmpsl
pop
dec
test
lret
frstor
cwtl
mov
dec
xlat
cmp
jmp
jle
and
dec
fcom
lea
dec
fiaddl
leave
ficoml
imul
out
arpl
ficoms
adc
adc
stos
cwtl
loope
scas
pop
cwtl
insl
js
inc
fists
sti
fnstenv
jno
xchg
pop
adc
push
and
xchg
sarb
mov
dec
jmp
test
inc
sbb
fsubs
mov
pop
xor
fcomps
out
in
pop
pushf
push
enter
adc
loope
add
aaa
add
aam
daa
insl
ficoml
push
rcll
or
xchg
inc
xchg
aaa
pop
jo
jl
xchg
and
out
add
lea
ds
inc
insb
in
push
mov
cmpsb
arpl
loop
and
xchg
jle
rcrl
mov
jns
push
cmp
enter
or
adc
lea
psrld
adc
or
dec
cwtl
sti
leave
sub
cmp
outsl
sbb
dec
mov
and
push
add
xchg
dec
pop
fisubl
iret
adc
push
jg
fisttpll
push
inc
dec
and
iret
mov
inc
out
xchg
data16
fildl
xchg
sub
subb
mov
xlat
or
push
cmp
adc
ds
sbb
xor
lret
dec
insb
add
xchg
int3
mov
push
fnstenv
mov
movsb
or
xchg
ficoml
imul
dec
pop
push
xchg
gs
paddq
data16
push
shlb
mov
xchg
aam
push
push
dec
in
pop
jne
or
xchg
xchg
cwtl
arpl
xchg
push
jecxz
xchg
stos
ret
push
jecxz
xchg
insb
pop
imul
xchg
xchg
jns
addl
adcl
push
pop
mulb
enter
mov
mov
xchg
jg
inc
gs
or
fldenv
or
test
or
cltd
fcmovbe
push
mov
movsl
adc
pop
push
xlat
jne
dec
push
or
test
in
mov
lods
sub
out
inc
xlat
xchg
xor
xchg
mov
dec
rorl
and
lret
xchg
es
mov
mov
cltd
push
xchg
adc
lea
xchg
shr
and
inc
enter
xchg
push
shr
push
xchg
int3
movsb
jae
xchg
push
pop
push
iret
aam
sub
mov
push
mov
movsb
jno
xchg
test
xchg
rclb
cmp
aad
xchg
outsl
push
fdivs
sbb
dec
fistpl
push
sbb
or
sub
jecxz
aam
lret
pop
and
pop
adc
push
fimull
or
push
adc
outsb
push
fldlg2
adc
sbb
add
push
pop
or
jle
mov
mov
jns
dec
enter
push
push
mov
and
push
pop
or
mov
lret
cltd
clc
enter
gs
rclb
adc
mov
push
pminub
fs
inc
xor
test
mov
and
rcl
fcoms
leave
enter
int
push
jns
pop
es
and
loope
nop
in
adc
xchg
std
lret
cwtl
xchg
xchg
inc
push
sahf
pop
bswap
adcb
sbb
push
lcall
dec
out
fdivs
jp
lret
push
aam
or
rorb
mov
cmpsl
hlt
push
enter
pop
pop
xlat
dec
pop
lcall
gs
rsqrtps
or
xchg
mov
adc
push
inc
nop
shlb
andb
sub
dec
rcrl
fists
mov
mov
or
or
lea
in
movsb
iret
adc
push
divl
lcall
fadd
inc
aam
inc
inc
mov
jg
push
sbb
push
ror
in
not
xchg
cwtl
shld
pop
hlt
inc
push
lea
leave
adc
mov
fistl
mov
movsb
or
mov
lret
leave
push
imul
sub
out
fcmove
dec
and
dec
nop
pop
push
mov
aam
adc
and
or
ret
dec
hlt
dec
aaa
or
adc
mov
imul
mov
sbb
dec
ss
jge
insb
xchg
mov
clc
insl
jg
jecxz
rorl
ficoml
push
add
push
lea
adc
sahf
stos
imul
adc
nop
arpl
dec
in
sbb
mov
loope
dec
enter
push
imul
or
mov
rolb
aam
leave
lock
insl
or
fdivrs
in
int3
dec
fildl
dec
js
sbb
mov
iret
loopne
rcrl
in
lods
fisttps
lock
add
or
sbb
fldl
push
or
adc
adc
insl
call
in
lret
xchg
ret
xor
imul
adc
or
ja
andl
push
adc
clc
leave
xchg
mov
xor
jecxz
xchg
or
mull
dec
xor
xchg
pop
push
pop
sbbl
pushf
xchg
or
and
hlt
mov
inc
inc
test
xchg
xchg
enter
xchg
fmuls
add
and
pop
pop
in
ljmp
mov
inc
and
or
jne
fs
mov
fdivrs
int3
mull
mov
push
pop
pop
xchg
or
xchg
xchg
dec
scas
imul
aaa
and
or
shlb
xchg
xchg
pop
push
xlat
stc
mov
mov
sub
pop
in
adc
mov
rclb
mov
ret
push
rolb
jno
mov
test
rorl
arpl
test
dec
rorb
dec
jg
cld
inc
lea
loop
push
sbb
and
push
adc
sub
cmp
fldcw
push
inc
scas
sbb
mov
sbb
xor
xchg
adc
push
or
push
enter
and
sbb
repnz
or
dec
jbe
jnp
dec
adc
in
outsl
adc
and
cltd
adc
or
repnz
sub
imul
mov
dec
enter
adc
jl
cltd
sbbl
xlat
dec
pop
inc
xor
mov
pop
sub
ds
mov
cmc
rcl
push
lcall
and
and
or
add
adc
sub
cltd
xor
movsb
in
dec
inc
push
xchg
mov
push
or
roll
dec
enter
mov
or
xlat
imull
loop
mov
cmp
mov
loope
push
xlat
lret
xchg
mov
or
push
int
fs
push
pop
jecxz
adc
dec
dec
sbb
filds
push
dec
enter
popf
es
into
cmp
rolb
iret
adc
sbb
push
mov
int3
orl
mov
sub
xchg
out
and
pop
mov
or
xor
lock
push
fnstcw
adc
pop
dec
pop
and
inc
pop
dec
mov
dec
adc
pop
shld
shlb
sbb
inc
or
jnp
leave
xchg
xchg
stos
xchg
out
sbb
jl
dec
jle
xor
pop
or
lods
sbb
pop
xchg
sbb
arpl
inc
movsb
nop
test
jle
dec
jg
test
lcall
xchg
fwait
mov
ret
dec
aam
and
leave
pop
mov
push
xchg
pmuludq
sbb
leave
push
pop
pop
and
push
popf
xchg
or
dec
lds
jmp
cmpb
push
stc
and
push
dec
mov
xor
pop
or
into
sub
mov
jle
int3
jl
and
lret
iret
ljmp
cld
xchg
cs
inc
xchg
mov
imul
xchg
mov
xchg
sub
push
subl
and
fisubrl
cwtl
push
or
loop
adc
add
cwtl
xchg
xchg
dec
lret
dec
inc
fidivrl
xchg
push
mov
mov
mov
fsts
and
mov
test
int
fsts
mov
pop
push
addr16
inc
push
arpl
es
sbb
jne
fcom
push
mov
movsb
xlat
adc
or
mov
jnp
or
pop
mov
fldenv
shrb
push
dec
cmovl
aam
movsl
jmp
aam
sbb
add
inc
pop
stos
dec
mov
aam
dec
push
std
xchg
sub
mov
insl
sbb
pop
xsavec
pop
sub
jge
xchg
mov
and
xchg
loope
push
jmp
mov
cmp
mov
adc
sbb
xchg
xchg
add
xchg
mov
push
mov
rorb
fists
pop
lods
lock
mov
push
fsubs
push
and
iret
push
xlat
cltd
arpl
jno
icebp
mov
adc
adc
stos
pop
std
pop
mov
xchg
add
push
adc
push
pop
adc
cmpb
jge
mov
test
nop
push
movsl
dec
inc
scas
ss
ret
adc
movsb
sub
inc
xor
imul
or
push
arpl
iret
push
xor
and
jge
fwait
push
push
cld
inc
cmpsl
or
das
rcrl
out
push
or
sub
mov
sbb
or
sbb
push
xchg
sarb
arpl
jbe
adcl
or
mov
loope
dec
inc
mov
or
test
nop
cmp
jno
cwtl
adc
jle
pushf
push
in
adc
les
mov
dec
nop
test
xor
insl
jae
or
or
dec
out
rclb
sub
out
add
cmpsb
jecxz
sqrtps
pop
lret
and
fiaddl
adc
imul
jne
in
push
cltd
dec
cwtl
loopne
xchg
xchg
loope
enter
cltd
rorb
adc
insb
loope
pop
mov
mov
sbb
ror
movsl
das
adc
push
sub
addr16
fistpl
imul
nop
and
push
sub
aam
mov
shlb
push
ror
mov
je
insl
lods
rorb
adc
mov
jns
sbb
aas
ds
cs
push
int3
push
xchg
add
adc
xchg
cmpsl
mov
fldl
int3
nop
loopne
jo
lcall
std
cmpsl
mov
push
dec
push
or
fcmovbe
jne
fld
out
xchg
mov
xchg
add
fcmove
je
mov
insb
cltd
cwtl
int3
movsb
dec
adc
arpl
adc
je
xchg
and
push
loop
cwtl
sbb
push
enter
xchg
mov
sahf
push
mov
push
rorl
push
or
enter
xchg
lcall
mov
dec
xchg
inc
push
fimull
jecxz
xchg
mov
pop
sub
je
test
push
dec
xchg
or
fwait
enter
adc
xchg
sbb
dec
dec
xchg
cwtl
imul
mov
mov
adc
fcoms
dec
lds
test
imul
xchg
sub
insl
and
arpl
dec
xchg
jecxz
lret
das
jecxz
mov
jecxz
push
xor
jne
nop
mov
out
cwtl
jns
movsb
pop
enter
jne
mov
dec
shlb
pop
push
dec
push
and
in
push
pop
or
icebp
push
or
inc
adc
or
xor
pop
sub
mov
push
aad
lret
bswap
lret
push
in
adc
push
push
xchg
pop
icebp
xor
xchg
cmp
rcr
int
fcoml
stos
pushf
fcmove
sbb
cltd
fistl
dec
jge
pop
dec
inc
sbb
je
test
rorl
adc
mov
push
mov
pop
scas
fnstsw
inc
push
adc
mov
js
jle
sti
jnp
aad
add
or
adc
sets
sahf
fwait
inc
mov
out
or
rorb
nop
rcl
fiadds
and
xchg
push
xchg
xor
and
adc
cltd
or
jns
or
dec
dec
mov
out
or
push
scas
xchg
xlat
and
mov
and
pop
add
dec
mov
jge
dec
cltd
jns
movsb
mov
movups
pop
inc
fldenv
fisubl
addl
dec
dec
or
sub
cwtl
rorl
xchg
mov
dec
mov
jmp
or
fld
push
pop
outsl
adc
cs
test
adc
xchg
stos
jno
pop
pushf
dec
pop
iret
movsb
nop
xchg
stc
mov
aam
xchg
fimull
repz
dec
ds
adc
jne
lret
adc
or
jle
leave
aam
xchg
sbb
push
mov
push
jae
or
fadds
pop
js
and
push
cwtl
leave
rcll
mov
lret
dec
dec
out
or
or
rcr
test
test
sar
bswap
pop
or
push
xchg
jnp
pop
mov
je
mov
data16
xchg
dec
lret
mov
sub
hlt
cld
push
lods
inc
pusha
fs
lret
cltd
or
mov
addr16
add
or
inc
sbb
lret
or
cwtl
or
mov
ljmp
xchg
or
call
loopne
fs
cltd
aam
adc
popl
fwait
or
call
sbb
fisttps
ret
push
xchg
movsl
bound
adc
nop
adc
adc
fcmovbe
dec
adc
jne
xlat
lcall
push
enter
or
xlat
lret
dec
ror
adc
and
pop
or
mov
mov
and
addps
or
pop
fldenv
push
or
enter
pop
xchg
lods
fs
shlb
push
xchg
fsubrs
pop
xchg
jne
rorl
adc
adc
or
call
dec
fcoms
dec
es
inc
adc
insl
ja
mov
mov
pop
inc
jnp
shlb
iret
or
or
aam
fists
gs
mov
lret
lods
xchg
sub
enter
andl
emms
repz
lret
mov
or
push
push
cwtl
cmp
es
cmp
test
push
xlat
mov
inc
mov
lret
xchg
cs
push
jle
pop
pop
push
adc
out
push
leave
add
fsts
ret
dec
pop
out
mov
and
lcall
xchg
dec
push
dec
push
push
dec
shll
push
dec
sbb
add
fisttpl
in
ja
popf
xchg
mov
sbb
xchg
pop
sbb
dec
push
loopne
pop
lods
imul
cwtl
xchg
iret
cmp
add
lock
push
mov
inc
xor
dec
add
das
cwtl
add
lret
shll
xchg
mov
dec
xchg
gs
push
xchg
mov
lret
data16
leave
or
dec
jne
or
pop
loopne
dec
iret
push
xchg
dec
xchg
mov
dec
icebp
out
and
nop
or
mov
inc
dec
hlt
or
xchg
lea
rclb
out
fcoms
lcall
clc
dec
sbb
js
pop
pop
mov
push
rorb
jmp
or
sahf
push
rcl
and
orb
and
movl
in
adc
enterw
jle
xlat
jnp
xlat
fprem
lods
inc
push
rorb
or
rorl
cs
or
fmuls
mov
jle
and
inc
xchg
stos
ret
push
mov
xchg
pop
enter
add
popf
and
or
adc
pop
pop
jle
daa
test
and
out
push
xchg
mov
push
cmp
xchg
fstp
mov
negb
xchg
sbb
sub
xchg
mov
ja
mov
dec
xor
pop
lret
imul
xorl
cmp
mov
push
fsts
mov
cmp
mov
xchg
sbb
mov
negl
cwtl
inc
jecxz
mov
and
iret
push
dec
pop
or
dec
adc
fstl
std
cld
pop
jge
pop
push
push
adc
ljmp
sub
stos
fcmovb
push
add
rclb
adc
jno
pop
push
or
lcall
sbb
jl
or
lret
jne
xlat
push
adc
pop
mov
lret
int3
mov
mov
pop
push
or
mov
pop
out
aam
sub
xor
sub
xor
xor
jp
push
pushf
je
data16
push
push
and
push
ficoml
sahf
push
or
sbb
sub
xchg
cmpsl
movsl
lds
jnp
int
call
push
mov
jae
and
adc
sub
imulb
pop
pop
dec
pop
cmp
leave
push
lret
lcall
xchg
cld
fmuls
push
or
fldenv
iret
call
std
jge
xchg
sbb
ja
xchg
push
fisttpl
leave
arpl
arpl
rorl
or
or
push
leave
push
jmp
sbb
jno
xchg
mov
jg
or
push
pop
iret
xchg
sti
mov
mov
out
adc
adc
inc
fildl
scas
lods
jbe
sbb
adc
movsl
inc
inc
loope
xchg
pop
cmp
xlat
rcll
rcll
xchg
mov
push
or
popa
xchg
mov
push
jp
enter
or
pop
test
iret
adc
xchg
inc
dec
dec
aam
pop
mov
fwait
adc
push
pop
mov
mov
loopne
arpl
push
enter
test
scas
ret
pushl
cwtl
lret
movsl
repnz
mov
push
fs
push
dec
roll
lea
adc
fcmove
es
into
pushf
mov
popf
sbb
popa
and
aam
dec
iret
xor
mov
pop
and
push
or
dec
mov
hlt
xchg
cmpl
or
rorl
push
mov
cmpb
mov
mov
jecxz
push
xchg
dec
jbe
fsts
lret
rcll
aaa
or
sbb
xchg
shlb
adc
cli
and
xchg
mov
xchg
leave
mov
rcll
popl
jnp
loop
or
dec
test
dec
add
mov
push
cwtl
jle
in
divb
push
fadd
loope
mov
insl
insb
pop
ja
push
xchg
mov
push
fsub
xlat
sahf
cmp
dec
dec
nop
or
jne
mov
aad
adcl
dec
fcomps
mov
xor
lsl
push
xchg
or
aad
dec
xchg
int
or
fwait
cmp
dec
and
xchg
lock
sbb
xchg
mull
pop
andnps
sbb
lret
push
push
repnz
push
ja
ret
xlat
xchg
jge
push
jg
pushf
or
mov
sbbl
fwait
dec
xchg
xchg
sbb
popf
mov
jmp
push
rclb
push
sbb
loopne
adc
in
xchg
pop
dec
lods
dec
rclb
inc
hlt
sahf
jno
inc
shrl
jmp
xor
mov
and
push
inc
jno
mov
xchg
pop
or
nop
ss
pop
adc
push
push
xchg
mov
cmp
mov
xchg
xor
xor
lods
cld
leave
xchg
mov
jg
inc
push
popf
outsl
sarl
iret
sbb
fimull
xchg
aam
test
pop
fwait
iret
xchg
mov
or
jbe
push
gs
ficoml
xlat
adc
orb
dec
or
inc
js
dec
sbb
or
rclb
cs
cmp
fucom
adc
pop
fnop
pop
mov
lret
clc
in
or
jne
mov
dec
xchg
out
and
cltd
pop
mov
loop
shll
rcrb
adc
pop
adc
movsb
orl
ljmp
xor
sbb
or
push
cltd
popf
xchg
shr
and
rorb
ret
or
xorl
lret
or
xchg
hlt
pushf
or
hlt
xor
push
imul
inc
int3
jae
imul
mov
insl
jb
dec
jg
jecxz
or
cwtl
adc
fistl
sub
xor
insb
lods
sub
decl
pop
mov
mov
or
iret
dec
and
loop
lret
adc
ret
inc
cmp
jle
movsl
push
test
jne
pop
adc
fst
int3
mov
aas
das
in
adc
add
pop
dec
inc
mov
mov
lret
push
iret
jne
dec
dec
fxch
push
mov
pop
cwtl
pop
or
inc
iret
or
sbb
sbb
push
push
cwtl
xchg
push
insb
cltd
push
cltd
xchg
daa
pop
jns
loop
leave
dec
cwtl
icebp
pop
adc
or
ds
sub
test
sbb
leave
fidivrl
fmuls
ret
mov
dec
out
adc
mov
movd
fdivrs
mov
push
dec
xchg
ficompl
or
xlat
ret
inc
xchg
fisttpl
stc
add
jne
xchg
xchg
leave
int3
xchg
xchg
and
inc
fadds
jmp
lahf
insb
push
adc
dec
dec
sbb
or
dec
jle
gs
adc
ror
xchg
rorl
minps
cmpsb
jne,pt
xchg
jns
xchg
push
scas
push
jnp
bnd
sub
xlat
jno
ss
xor
lods
pop
jmp
loope
xchg
xchg
mov
out
dec
dec
rcr
cltd
lret
je
inc
cmp
int3
je
aam
aam
leave
daa
xchg
push
popf
in
enter
or
dec
dec
adc
push
jmp
xchg
hlt
imul
int3
push
testb
cwtl
dec
pop
pop
or
xchg
loop
or
cmp
aam
int
jge
xchg
xchg
shlb
or
lret
xlat
dec
dec
rorl
mov
jb
std
repz
xlat
push
push
adc
addr16
hlt
adc
dec
mov
jo
xchg
in
jae
imul
imul
inc
push
xlat
mov
mov
pop
push
in
popf
test
push
ljmp
sbb
in
pop
cmpsl
jbe
mov
push
mov
or
lret
lea
xchg
orl
idivl
xchg
out
arpl
dec
add
fcoms
xor
pop
ljmp
adc
jecxz
iret
mov
rorl
adc
loope
or
add
push
cltd
in
pop
mov
adc
adc
pop
mov
cmpsl
lods
mov
dec
dec
or
out
and
mov
inc
sbb
adc
loopne
arpl
inc
fs
dec
aam
pop
pop
adc
or
mov
push
lret
xchg
dec
dec
outsl
add
jne
push
aam
push
lret
adc
fstl
push
xor
shrl
push
and
fs
push
repz
lahf
xchg
or
push
shl
mov
ljmp
stc
cltd
in
fwait
lock
sbb
mov
adc
lret
push
movsb
or
sahf
adc
jns
xchg
lcall
aam
popa
repz
adc
push
cmp
adc
xchg
ss
aam
adc
or
mov
arpl
xchg
pop
jecxz
xchg
push
adc
inc
and
dec
out
popf
xchg
push
add
dec
or
loope
dec
popf
or
push
push
in
xchg
push
or
fmuls
mov
and
inc
cli
or
lret
leave
stc
loop
xchg
xor
xchg
xor
jne
lods
jne
adc
dec
xchg
pop
pop
push
int3
jae
push
sarb
adc
push
xchg
adc
lcall
push
and
dec
ds
push
enter
push
rcrl
loop
mov
xor
nop
inc
jae
mov
xchg
push
pop
test
push
cltd
mov
insl
inc
or
xchg
dec
cmp
sbbl
roll
imul
mov
adc
or
outsb
leave
or
lret
dec
jle
push
dec
aam
ja
xchg
pop
fninit
fimull
bndldx
icebp
adc
sub
jmp
mov
loope
sbb
jmp
jecxz
push
dec
push
int3
jb
or
push
add
sub
fiaddl
test
nop
xchg
or
xchg
mov
sbb
mov
repz
fisttpl
push
xor
and
dec
fmuls
int3
mov
ret
rclb
dec
int3
jle
sbb
fsts
jno
rorl
jl
cwtl
and
enter
cltd
pop
daa
pop
jmp
adc
loopne
push
pop
cmp
dec
mov
fisttpll
or
pop
adc
cmpsb
push
push
push
push
ja
int
sub
jns
xchg
lret
rol
dec
xchg
xchg
cmp
dec
push
test
call
stos
xor
or
jbe
fsubrs
xchg
xchg
xchg
enter
mov
fistps
jle
iret
or
std
mov
insl
lods
dec
adc
mov
dec
mov
adc
sbb
rorb
push
int3
dec
or
fdivs
das
xchg
pushf
les
or
mov
inc
outsb
adc
dec
mov
pop
pop
arpl
mov
pop
adc
movsb
scas
mov
je
stc
les
xor
pop
addr16
fcmovne
xchg
pop
mov
je
pop
adc
jp
loope
inc
adc
or
mov
xchg
nop
mov
xchg
pop
ficoml
mov
xchg
icebp
ret
addr16
cmc
les
push
xchg
xchg
fcmovbe
stc
jge
xchg
xchg
dec
push
push
rcll
dec
lcall
jae
pop
imul
rclb
fwait
adc
sahf
mov
ljmp
sbb
dec
call
dec
sahf
dec
jp
repz
mov
int3
xchg
scas
roll
je
pmuludq
mov
push
loope
mov
jmp
cmpsl
mov
push
cli
dec
sahf
xchg
mov
inc
and
push
xchg
lea
aam
inc
cmpsl
lds
or
inc
fs
lea
push
nopl
ja
lcall
fmuls
dec
insl
push
mov
lahf
roll
dec
stc
dec
dec
add
lahf
enter
aam
fisttpl
mov
loope
aad
or
inc
xchg
dec
mov
movsb
mov
mov
adc
into
rcrl
push
inc
les
xchg
or
rorl
outsl
cmpl
arpl
inc
movsl
test
ret
add
xor
xchg
push
outsb
xchg
or
mov
xchg
mov
xchg
pop
add
rorl
hlt
in
dec
push
dec
push
pop
xor
test
test
push
push
or
out
shrl
xchg
sbb
mov
arpl
push
loope
dec
pop
push
or
push
push
out
fwait
ss
aad
and
fimull
xor
push
cwtl
sub
jge
or
enter
imul
lds
out
adc
lds
loope
lret
lret
push
mov
xchg
and
pop
daa
inc
jb
pop
xchg
adc
mov
pop
in
sbb
push
sbb
enter
or
xchg
xchg
pop
push
mov
loope
adc
pop
push
adcb
xchg
push
xlat
jmp
pop
int3
std
xchg
jle
sti
xchg
push
push
enter
gs
push
int3
or
fwait
leave
dec
call
or
or
and
xchg
leave
rclb
adc
xchg
or
dec
ja
xchg
dec
dec
mov
rol
in
test
jmp
out
addr16
jo
roll
mov
rclb
adc
or
hlt
and
sub
jne
sbb
mov
push
movsb
out
mov
je
jbe
sbb
xchg
test
gs
push
leave
iret
xchg
clc
jnp
dec
or
push
enter
fcmovbe
call
fisttpll
xchg
jmp
fsts
push
and
mov
insl
add
loope
rorb
sub
jmp
adc
roll
or
jge
movq
adc
push
jle
dec
push
cltd
iret
adc
adc
sbb
or
sbb
cmp
mull
mov
in
mov
mov
pop
lret
jecxz
cltd
pop
fcmove
add
or
in
sbb
in
jle
fisubs
rcll
outsl
cltd
aam
rol
adc
enter
mov
pop
lock
cs
mov
jnp
xchg
cmp
mov
push
xchg
or
les
adc
or
cltd
pushf
push
loope
dec
scas
ds
and
push
add
push
or
mov
cmpl
outsl
adc
push
jecxz
inc
xchg
inc
shrl
jge
adc
lret
sub
xor
lret
int3
xlat
sti
jl
clc
jle
lea
push
jle
pop
pop
jp
je
orl
pop
xchg
ja
inc
ret
and
leave
push
push
xlat
or
dec
imul
es
fidivl
fisttpll
lock
arpl
leave
sub
push
or
or
gs
dec
in
push
xchg
xchg
jle
inc
xchg
rorb
mov
jecxz
xlat
xchg
dec
mov
mov
aam
and
out
lret
add
test
test
sbb
movsb
jns
dec
sub
push
dec
mov
cwtl
mov
sti
push
lret
dec
subl
push
dec
sub
les
or
pushf
dec
out
cwtl
pop
sbb
repnz
mov
dec
mov
dec
xchg
movsl
push
hlt
test
rcrb
sbb
add
leave
or
jl
or
pop
pop
mov
sbb
in
fxch
mov
xlat
mov
enter
nop
adc
clc
xor
push
ret
jbe
push
mov
popa
pop
dec
insl
les
cwtl
xorl
adc
push
or
ficoml
push
push
inc
sbbw
enter
push
dec
rcrb
loope
pop
cs
dec
push
or
or
dec
sub
lret
or
push
cltd
subb
mov
or
int3
aad
push
call
push
mov
inc
loop
jecxz
dec
orb
xchg
iret
in
push
push
movsl
sub
sbb
dec
orl
ljmp
adc
lfs
xchg
dec
or
xchg
inc
adc
xchg
jb
leave
push
rcl
fs
push
dec
xchg
hlt
sahf
iret
xchg
push
xchg
or
push
rcrb
pop
dec
lods
inc
sub
rclb
xchg
mov
cmp
pop
push
jp
push
sub
cltd
cs
fisubrl
xor
pop
or
xchg
jge
adc
cld
aaa
ret
lock
sahf
lea
push
cmp
inc
pop
xlat
cmp
push
cs
or
pop
popa
jmp
xlat
dec
cmpsb
stos
sub
and
push
out
adc
hlt
jbe
test
cmc
add
jle
adc
jns
push
push
mov
lcall
rorl
push
jg
push
dec
or
outsl
xor
inc
ret
inc
cmp
dec
dec
in
outsb
rcl
enter
adc
sbb
push
xchg
sbb
test
jnp
les
call
jecxz
mov
jp
pop
fs
push
push
or
loop
xlat
add
pop
lcall
mov
jg
imul
mov
xor
iret
mov
cld
js
add
dec
or
jl
dec
test
add
xchg
hlt
push
jne
enter
nop
rcll
or
daa
iret
mov
shlb
leave
pop
or
pop
movsb
cmc
xchg
shlb
enter
loop
mov
add
push
int3
or
dec
jne
cltd
sub
and
push
pop
ljmp
sbb
fucomp
and
or
push
fxch
adc
fwait
or
adc
push
dec
aam
or
scas
push
or
sqrtps
cltd
push
fsub
push
pop
push
mov
jne
dec
fldcw
fnstcw
xor
push
subl
loopne
mov
and
adc
nop
shlb
adc
or
xchg
adc
dec
jno
mov
ss
push
mov
fisubrl
inc
ljmp
dec
or
xlat
mov
sahf
or
repz
cltd
mov
mov
push
pop
rcl
dec
and
or
aam
inc
sarb
stc
lret
rcll
cltd
rcr
ljmp
mov
fistl
dec
xchg
loopne
or
repnz
mov
orl
sbb
fisttpll
out
adc
bound
aam
fcmovu
push
push
add
loop
push
add
fwait
std
je
cwtl
mov
adc
loope
fadd
loope
xchg
pop
dec
or
aaa
dec
jns
fstl
mov
xlat
inc
out
or
test
dec
mov
and
outsl
xchg
enter
push
jo
cwtl
insb
xchg
testb
dec
dec
jo
sbb
pop
mov
dec
ljmp
or
shlb
js
clc
fstp
rcrl
add
jge
or
iret
xchg
rolb
and
dec
rorl
lods
sbb
xor
iret
jne
xchg
push
fsts
sarb
fwait
push
xchg
cmc
movsb
dec
iret
or
or
dec
push
int3
mov
and
rcl
lret
xor
adc
lahf
loop
or
dec
pop
xchg
xchg
dec
nop
mov
sbb
push
enter
filds
dec
jns
mov
inc
push
dec
adc
mov
jns
push
mov
nop
shll
cwtl
cltd
sbb
data16
push
int3
gs
xchg
dec
dec
rcl
xchg
nop
pop
sarb
in
or
push
mov
and
xor
scas
aad
xchg
xlat
lret
mov
push
dec
cwtl
inc
aad
sub
mov
imul
dec
push
inc
fldl
add
pop
hlt
clc
out
imul
dec
out
daa
xchg
mov
mov
and
xchg
or
xor
xchg
jg
cmp
dec
loop
fmuls
out
xchg
lock
push
jbe
stos
mov
cltd
push
xchg
mov
sbb
aam
pushf
loopne
or
mov
adc
outsl
mov
pop
adc
shll
xchg
dec
mov
jne
or
sbb
dec
jge
fmuls
inc
fs
xchg
jp
jecxz
adc
shl
andnps
push
sub
rol
fs
xchg
push
inc
jno
cli
loopne
pop
movsb
rorb
push
outsl
enter
sub
inc
xchg
xchg
pop
shl
dec
nop
cltd
enter
ret
and
dec
dec
shr
xchg
push
fadd
xlat
push
push
jle
adc
xchg
adcl
mov
cwtl
inc
rcrl
pop
push
bound
sbb
pop
dec
enter
xchg
lret
repz
dec
xchg
jge
iret
push
clc
ret
out
loopne
pop
adc
push
push
dec
add
or
imul
adc
in
xor
jbe
jp
mov
leave
xchg
mov
inc
jg
dec
mov
adc
shll
xchg
jg
pushf
push
iret
ficomps
test
ja
imul
sahf
std
push
je
xchg
push
hlt
push
adc
mov
inc
adc
setns
adc
push
xchg
lret
jl
lret
pop
jle
fmuls
or
push
rorl
push
push
cmp
or
iret
add
xchg
mov
out
in
xor
pop
lds
jle
call
xchg
xor
ja
imul
dec
les
cmp
jnp
mov
mov
ret
cmc
pop
fildl
adc
cltd
fists
aam
ret
push
jne
flds
je
jmp
adc
ret
iret
enter
mov
dec
iret
fmuls
mov
es
inc
ljmp
and
and
dec
push
outsl
lret
xchg
cwtl
outsb
mov
mov
mov
sbb
inc
push
jb
adc
dec
adc
repnz
xchg
pop
inc
xchg
dec
fbld
pop
jns
outsb
jl
push
mov
movsb
enter
xchg
rcrb
rcrb
pop
cmpsb
lea
leave
dec
int3
pop
movsb
sub
loop
dec
inc
popf
sbb
jmp
sub
ljmp
and
push
xchg
dec
or
into
rcr
out
or
add
iret
aad
adcl
fcoms
movups
xchg
daa
adc
repz
test
inc
js
movb
or
push
out
outsl
adc
push
dec
enter
jecxz
push
pushf
pop
int3
mov
pop
or
outsb
in
mov
push
xchg
lret
jne
dec
or
sarl
pop
or
adc
cmc
dec
pop
push
rolb
dec
jne
dec
jns
sbb
mulb
push
pop
cltd
iret
mov
push
jecxz
leave
loope
dec
push
xchg
cmp
mov
lret
push
divb
movl
cltd
or
addr16
push
aam
push
jbe
add
outsl
rcll
jbe
pop
shr
add
roll
rorl
dec
pop
jecxz
push
fstps
addr16
rorb
adc
hlt
inc
fidivl
insl
decb
aam
ror
push
pop
rorl
addr16
fsts
fs
dec
test
cli
ret
mov
push
add
or
dec
push
adc
test
jle
popa
cwtl
push
cltd
dec
and
mov
stos
pop
enter
gs
nop
mov
jbe
sbb
hlt
mov
out
adc
fisttps
xchg
loope
lret
roll
mov
mov
cmpsb
and
or
or
add
pop
push
movsl
ret
loop
pop
bound
imul
push
push
pop
xor
push
mov
arpl
fsub
cmpsl
xchg
mov
pop
out
and
or
loopne
push
jge
adc
rclb
imul
xor
nop
mov
loopne
push
push
jge
mov
or
std
incl
adc
in
vphaddubd
sahf
mov
popf
mov
loope
inc
or
or
push
cwtl
push
pop
jae
push
andl
mov
fs
mov
push
je
jge
dec
out
ja
push
or
fimull
inc
shlb
xchg
repz
adc
into
xchg
enter
rcl
mov
xchg
xchg
aam
xchg
fimull
addr16
pop
nop
pushf
or
xchg
xchg
adc
cmpsl
int
test
dec
iret
xor
sarl
repnz
and
pop
push
ds
push
xchg
xchg
xchg
dec
mov
adcl
and
adc
sbb
jb
push
lret
pop
pop
push
xchg
scas
dec
pop
pop
loop
inc
dec
xchg
fidivrl
add
pop
cmp
mov
fwait
in
dec
mov
jae
rclb
push
dec
popf
loopne
cmpsb
popf
dec
inc
ja
je
push
cltd
xor
ret
mov
mov
xlat
dec
mov
push
rcll
fwait
or
mov
push
dec
inc
sbb
xlat
cltd
xchg
mov
adc
xchg
pop
ret
cmp
dec
push
int3
lret
dec
push
dec
dec
mov
inc
cmp
pop
xorb
fmuls
sbb
or
xchg
aam
and
or
hlt
loopne
idivl
jge
push
sbb
test
pop
fistl
adc
mov
xchg
dec
mov
lret
fs
sbb
or
es
inc
loope
adc
enter
push
mov
add
lret
xchg
pop
jae
ror
adc
or
mov
dec
cmp
and
and
xlat
fistpl
rcr
or
xchg
dec
dec
insl
push
xchg
mov
fldl
dec
adc
test
dec
or
pop
push
or
dec
arpl
leave
inc
pop
jecxz
aam
dec
push
dec
imul
dec
xchg
rol
push
dec
jnp
pop
mov
xchg
iret
lcall
test
unpckhps
mov
test
mov
cmpsl
inc
arpl
jmp
loopne
sub
pop
cltd
loope
or
arpl
xchg
outsb
pop
arpl
push
and
scas
int3
jle
jae
ficoml
lret
xor
or
mov
ficomps
mov
or
fdivl
mov
push
in
dec
xchg
shll
rclb
inc
test
nop
jbe
lcall
xchg
xchg
rolb
ror
shr
push
mov
mull
adc
xchg
les
dec
lea
rorl
insl
mov
vprotw
dec
rolb
dec
pop
cwtl
mov
and
mov
outsl
pushf
xchg
jno
xchg
adc
loop
dec
xchg
es
xchg
or
dec
scas
inc
sbb
repnz
loope
pop
arpl
roll
mov
leave
push
mov
pop
mov
jns
sbb
or
fs
pop
or
push
adc
dec
push
fcmovnbe
xchg
mov
pop
out
in
cwtl
and
inc
mov
mov
lea
sbb
push
xchg
inc
lret
sbb
and
iret
xchg
fs
adc
jne
push
pop
push
push
nop
leave
outsb
push
out
lahf
dec
dec
or
dec
xchg
sbb
fucomip
jp
sbb
adc
pop
lret
adc
dec
dec
push
shll
shrb
push
or
dec
adc
or
shll
int3
fimull
or
lret
js
mov
jno
jg
sbb
push
fcomps
xchg
sarb
push
dec
push
mov
cld
dec
pushf
xlat
mov
push
aam
pop
aam
mov
or
or
int3
jns
adc
and
push
ficoml
mov
out
leave
push
mov
lea
or
mov
pop
outsl
outsb
cltd
push
daa
adc
cltd
xchg
push
fsubrs
enter
mov
adc
iret
add
dec
sub
dec
lret
pop
jne
push
cwtl
fimull
pop
xchg
mov
pop
and
or
fldcw
xchg
pop
int3
jbe
xor
xchg
xchg
mov
mov
lahf
or
jg
mov
in
push
xchg
add
push
pop
xchg
add
pop
or
mov
enter
or
hlt
cltd
hlt
lock
add
push
cmp
pop
inc
scas
movsl
inc
inc
push
or
mov
xchg
ja
sbb
shlb
pop
cltd
mov
repnz
sub
movsb
xchg
inc
push
push
mov
xor
hlt
push
dec
xor
push
sub
sub
pop
inc
and
shrb
dec
fmuls
push
pushf
mov
and
push
loop
jecxz
xchg
call
dec
int3
dec
scas
sub
adc
push
aam
add
dec
ds
push
xchg
add
xchg
aad
ss
dec
xor
sub
and
rorb
sub
in
adc
pop
dec
push
or
jnp
aad
jbe
out
pop
ja
and
push
mov
into
dec
push
xchg
adc
sbb
inc
pop
mov
pop
sub
mov
shlb
or
mov
or
mov
loope
push
inc
loope
xchg
push
dec
test
xor
cmp
movsb
xchg
seto
les
rcrl
cmc
push
pushf
shlb
xchg
adc
add
mov
enter
xlat
movsl
pop
sub
push
les
xchg
sarb
dec
adc
fiaddl
daa
pop
mov
push
xchg
dec
xchg
popf
add
adc
in
or
xchg
pop
adc
adc
adc
or
xchg
cmpl
outsl
xchg
fld1
iret
and
movl
xchg
rcl
ret
push
insb
fdivs
mov
pop
jmp
adcl
xchg
sti
fistpl
cmpsl
xor
pop
xchg
dec
xchg
movsl
call
inc
cltd
dec
push
push
adc
ss
mov
mov
push
push
push
addr16
into
add
adc
into
push
in
mov
mov
or
gs
push
dec
pop
mov
into
push
insl
out
int
hlt
cmpsl
cwtl
lea
mov
adc
ret
mov
shlb
inc
pop
dec
mov
jno
push
adc
xchg
xchg
push
fwait
xlat
dec
mov
pop
data16
cltd
out
jae
dec
fidivrl
lcall
push
test
push
adc
adc
fisttps
xchg
hlt
push
pushf
jo
adc
dec
add
fwait
xchg
adc
push
adc
loop
pop
push
enter
nop
push
add
pop
push
xchg
push
cltd
cmp
xchg
ja
addr16
pop
push
dec
adc
std
fxch
mov
mov
xchg
dec
loope
pop
jle
mov
mov
xchg
daa
sbb
sub
fcoml
mov
mov
or
inc
loopne
sbb
pop
push
mov
cli
dec
ret
add
or
je
adc
sbb
pop
and
lods
xchg
and
push
or
iret
dec
dec
es
mov
xchg
iret
push
mov
adc
push
pop
dec
leave
loopne,pt
stc
loop
push
inc
push
mov
xchg
xchg
or
push
fsub
cwtl
rorb
in
jl
xchg
mov
lret
adc
xchg
mov
xchg
cli
out
jg
sbb
dec
mov
xchg
inc
push
push
sarl
lods
test
aam
loopne
or
dec
pop
sti
dec
sub
xchg
aad
repz
cmp
fimull
scas
dec
push
jnp
inc
add
push
sub
aad
test
push
mov
push
push
adc
xchg
inc
xchg
xchg
scas
xor
mov
sbb
jp
aam
mov
inc
or
dec
test
out
loope
rolb
inc
cwtl
fmuls
cli
push
inc
loopne
aam
sbb
inc
mov
push
push
or
mov
dec
loope
nop
loop
inc
sub
add
fcoms
xchg
or
xor
pop
push
inc
adc
aam
cli
or
sbb
push
pop
sti
mov
add
cltd
fmul
hlt
mov
pushf
lret
dec
pop
rcl
xchg
lods
inc
je
mov
fidivl
sbb
jle
push
subl
pushf
pop
mov
cltd
cli
loop
roll
and
rorl
scas
leave
inc
jns
enter
mov
sbb
rorl
add
dec
push
hlt
cmp
jae
cmpsl
hlt
adc
xchg
flds
or
sub
mov
push
cmp
push
xchg
jae
adc
push
inc
adc
cmc
loop
dec
and
pop
js
jg
sub
or
dec
inc
jnp
sar
jne
adcb
xor
xchg
push
pop
mov
inc
mov
mov
stc
add
shl
xchg
push
sbb
shl
enter
pushf
xchg
xchg
adc
mov
push
xchg
or
mov
xchg
dec
lcall
dec
lcall
mov
xchg
cmp
rorb
leave
push
pop
xlat
mov
pop
pop
push
int3
enter
push
or
sbb
aam
fldt
test
out
into
push
daa
sub
dec
sar
and
cmp
popf
js
pop
push
or
adc
imul
cwtl
and
mulb
call
dec
and
imul
aam
adc
xchg
ja
push
fisttpll
divb
sbb
xchg
adc
xchg
mov
es
iret
mov
mov
dec
cwtl
xchg
dec
mov
pop
adc
pop
dec
pmaddwd
push
lret
rcrl
cmp
scas
arpl
popl
pushf
pop
mov
ja
imul
ficompl
iret
xchg
xchg
dec
cmpsb
mov
pop
leave
rorl
adc
lret
mov
rcl
push
push
sub
xchg
gs
push
adc
push
jg
es
inc
mov
rclb
outsl
lret
sbb
dec
iret
push
data16
or
or
xchg
movsl
mov
rcrb
test
sti
mov
or
cwtl
fs
pcmpeqw
or
shrb
les
lock
xor
and
sub
sub
pop
jbe
sti
xor
test
adc
in
cltd
dec
dec
sahf
push
sbb
or
jle
mov
cltd
mov
lcall
imul
inc
push
jecxz
push
cmc
cmc
pop
lock
push
or
dec
mov
mov
dec
ret
lea
cwtl
aad
stos
push
loopne
adc
test
add
pop
jne
dec
adc
fistpl
or
rorb
in
int
and
xchg
popf
lock
fwait
or
scas
mov
xchg
sbb
cld
cmp
and
and
dec
mov
or
fldenv
orb
andl
mov
push
or
mov
int
pop
pop
rorb
mov
scas
inc
jmp
and
insl
popf
shlb
leave
dec
lret
mov
fwait
and
and
int3
push
enter
mov
cld
sub
jg
out
inc
fmul
inc
add
xchg
inc
call
or
jg
pop
cwtl
jmp
in
pushf
or
icebp
or
aas
adc
in
aam
cmpsl
inc
test
pop
mov
xlat
adc
je
jecxz
cwtl
adc
mov
inc
adc
out
roll
sbb
aaa
mov
mov
mov
sar
inc
jne
mov
cwtl
push
mov
push
mov
push
mov
xchg
cs
add
dec
jmp
sub
or
adc
lea
xchg
ror
add
movsb
inc
rcr
mov
or
popf
dec
or
mov
sahf
jle
adc
xchg
sbb
push
int3
lret
pop
cmp
push
outsb
inc
ja
dec
mov
and
daa
dec
mov
mov
cltd
xchg
push
inc
adc
ret
mov
xor
mov
and
or
xchg
mov
mov
pop
add
dec
jg
dec
enter
insl
and
fadds
stos
iret
push
jns
adc
ja
push
or
repz
pushf
sub
xchg
mov
test
jns
inc
xchg
arpl
je
push
or
jecxz
dec
inc
fsts
test
loopne
fs
sbb
jnp
rcl
or
push
adc
dec
adc
repz
or
cwtl
test
jecxz
xchg
push
push
sarl
pop
pop
or
sahf
adc
or
inc
movsb
cmp
ss
xlat
lret
psrlw
pop
xchg
pop
xchg
add
pop
dec
adc
aam
outsl
fimull
dec
xchg
and
flds
ret
addr16
push
adc
roll
adc
enter
cltd
aas
xlat
mov
xchg
andl
fcoms
inc
test
or
jl
stos
jo
mov
into
arpl
sarl
lahf
mov
adc
mov
notl
test
dec
ja
bswap
mov
fs
cltd
xchg
hlt
jecxz
in
out
mov
push
push
jecxz
roll
jne
push
dec
adc
rcl
ljmp
lret
push
dec
dec
sub
inc
adc
jp
inc
loop
cwtl
or
leave
and
push
imul
lock
mov
xchg
insb
or
or
jmp
or
or
leave
xorl
push
in
imul
mov
test
dec
xlat
shlb
popf
jbe
pop
cltd
push
cwtl
mov
rorl
and
rclb
mov
jne
lret
insl
insb
push
rorl
cwtl
inc
aas
adc
mov
xchg
jns
xchg
push
and
mov
or
leave
dec
xchg
cmp
lcall
sbb
lret
ljmp
lcall
nop
mov
dec
outsl
mul
xchg
xchg
or
xchg
cli
inc
popa
int3
lret
loope
pop
mov
rol
push
add
lret
cwtl
test
dec
rorl
hlt
orb
or
pop
rcll
ret
xor
add
lahf
xchg
xchg
pushf
arpl
ror
arpl
xor
insb
dec
dec
lcall
sarl
adc
jg
sub
xchg
xchg
rolb
cld
lea
leave
xchg
or
je
adc
or
or
cwtl
xchg
outsb
lahf
push
rclb
or
mov
rcr
fnsave
push
lcall
jns
push
stc
xchg
sbb
pop
fs
adc
cmpsb
loopne
push
movsb
ror
inc
scas
add
adc
mov
jl
loopne
sahf
fadds
adc
or
lcall
fldcw
es
sbb
adc
and
pop
orl
das
imul
lret
push
or
jmp
adc
arpl
push
pop
addr16
int3
jg
test
pop
push
or
ljmp
xchg
mov
imul
push
mov
lret
sub
ja
mov
cmp
jno
xchg
adc
xlat
push
fwait
cmp
in
movsl
test
ss
or
in
lret
enter
nop
in
rcl
out
sbb
dec
push
add
sub
pop
pop
xor
dec
push
std
loope
lret
or
or
les
fcoms
xchg
cwtl
mov
dec
scas
mov
imul
push
insb
sbb
and
fwait
rclb
in
inc
pop
adc
inc
adc
fld
pop
inc
cmp
rorl
cwtl
loop
dec
dec
push
pop
pop
fldlg2
push
scas
sub
xchg
gs
pop
dec
dec
mov
mov
fisttpll
pop
aaa
mov
jg
scas
imul
push
iret
add
adc
jb
pop
xchg
mov
ficoml
jmp
dec
es
popf
sti
pop
fcmovnu
push
inc
nop
add
nop
vandnps
pop
out
fstl
jecxz
push
aam
or
dec
lret
or
unpcklps
xchg
les
push
sub
cltd
inc
fisubrl
out
iret
push
xchg
adc
pop
push
push
push
jns
xlat
dec
leave
mov
adc
pop
fsubrs
sbb
ss
xchg
dec
push
adcl
and
xor
dec
rcll
or
lea
push
pop
int3
mov
mov
enter
adc
mov
outsl
adc
mov
scas
jge
dec
sbb
adc
test
dec
pop
rorb
leave
test
xchg
mov
ja
mov
jbe
inc
jns
adc
pop
xchg
int3
subps
lods
aam
insb
ret
repnz
inc
in
lea
aam
push
inc
xor
flds
popf
mov
inc
jo
and
dec
idivl
and
dec
or
push
xchg
pushf
mov
pop
push
adc
pop
mov
jne
or
jge
fsub
xchg
sarw
add
pop
xor
pop
dec
jp
fsubl
mov
hlt
adc
push
push
into
push
jge
enter
push
daa
cmpsl
insl
dec
adc
test
and
cwtl
or
in
xlat
dec
push
or
adc
push
sbb
insb
jp
cmp
pop
outsb
or
xchg
insl
sbb
pushf
iret
dec
xchg
jge
adc
and
sbb
adc
dec
jns
push
ja
pop
hlt
fadd
lods
jp
or
cltd
enter
xchg
add
dec
scas
dec
adc
pop
adc
fs
pop
repz
inc
loopne
pop
adc
cwtl
and
mov
mov
dec
mov
dec
mov
mov
rcrl
gs
iret
or
mov
dec
adc
es
jp
push
movsb
xchg
icebp
lret
mov
cwtl
test
xlat
adc
xchg
mov
mov
or
loop
push
sbb
jno
adc
mov
or
loop
pop
loope
sub
popf
xor
add
mov
popf
sub
lret
add
xor
xlat
push
iret
lock
jmp
rcll
dec
jmp
enter
cltd
adc
loop
push
cwtl
ret
xchg
adc
fsts
movsl
arpl
xlat
pop
stc
xchg
xchg
mov
stc
loope
cltd
and
pop
push
repz
loop
fidivl
push
roll
jle
push
dec
dec
movsb
xor
aam
mov
inc
adc
out
fsubs
push
fadds
pop
insb
roll
cwtl
push
mov
or
loopne
mov
jle
cltd
and
dec
pop
repz
xchg
mov
push
fcom
add
add
aam
xchg
push
pop
lret
add
lcall
push
pushf
adc
mov
adc
push
add
lea
aam
mov
jmp
dec
jns
out
cwtl
setae
xchg
adc
push
arpl
push
dec
mov
hlt
pop
ret
or
int3
into
lock
mov
insl
cwtl
pop
adc
push
adc
and
inc
fimull
stc
orl
adc
leave
mov
push
inc
ljmp
push
fxch
arpl
cwtl
mov
inc
pushf
mov
or
mov
pxor
sbb
push
mov
mov
dec
imul
repz
sbb
mov
sbb
jle
adc
pop
out
push
lods
fcomip
xchg
xchg
lahf
push
flds
push
push
add
inc
cmpsb
xor
push
sar
or
lret
mov
and
sbb
inc
push
movsb
jb
jp
push
test
addl
mov
rol
pop
xchg
push
mov
loopne
or
je
loope
lret
shl
outsl
mov
sub
ret
mov
mov
adc
pop
pushf
xchg
pop
xchg
jns
adc
jl
jae
jb
icebp
pop
adc
test
lret
inc
cmpsl
loope
and
and
and
or
ret
mov
xchg
mov
vmwrite
push
arpl
inc
push
pop
dec
push
pop
push
out
mov
test
pop
xchg
xchg
scas
adc
xchg
push
mov
dec
pop
or
nop
adc
jnp
mov
inc
testb
ss
je
mov
pop
call
pop
shll
xchg
mov
pop
adc
leave
adc
push
out
arpl
leave
out
repnz
jp
xchg
cmpsb
mov
fstps
and
adc
inc
and
incb
adc
push
push
pop
jecxz
cltd
cmc
adc
fs
add
sbb
xchg
pop
imul
pop
dec
pop
sbb
jp
loopne
and
cltd
ret
imul
jle
xchg
rorb
rclb
dec
shrl
fst
dec
jne
dec
dec
pop
push
mov
xlat
enter
fldcw
fwait
adc
or
cltd
nop
sub
or
mov
fcomp
in
and
push
pop
sbb
dec
cltd
iret
sbb
cltd
lods
fisttpll
jmp
or
mov
mov
mov
push
sub
jmp
or
into
inc
into
lret
xchg
lret
ret
repnz
add
push
xchg
or
popf
mov
or
push
cld
jae
xchg
pop
shll
sub
xchg
cltd
or
loope
call
fidivrl
jg
cmp
push
cmp
lahf
jge
and
push
nop
mov
iret
iret
movsb
dec
dec
lret
push
sub
xor
cmp
negb
out
mov
xchg
mov
insl
pop
push
cwtl
insb
push
dec
or
add
xchg
mov
cmpsl
int3
ret
ret
mov
or
les
add
push
ret
jb
pop
pushf
sbb
dec
push
adc
clc
xchg
mov
xor
pop
andb
push
int3
sub
or
aam
push
inc
push
and
fwait
dec
loop
push
cwtl
dec
arpl
arpl
add
repnz
int3
pop
jmp
jg
push
xchg
nop
frstor
rcll
enter
out
int
loopne
ljmp
iret
rclb
push
cltd
pcmpeqw
mov
imul
lret
xor
aam
inc
xchg
scas
ds
sbb
jg
test
pop
int3
leave
subl
jns
enter
in
push
or
xchg
jg
pop
xlat
daa
pop
test
test
xchg
in
mov
outsl
adc
shrl
inc
rolb
addr16
in
dec
xchg
jg
pop
push
add
sbb
dec
fcmovbe
cwtl
shlb
int
loop
nop
and
pop
sahf
leave
inc
fldenv
adc
xchg
rcl
or
loop
pop
mov
jno
mov
aam
cmp
shll
xor
adc
jge
dec
or
xlat
push
add
add
adc
in
into
fs
xchg
push
xchg
mov
xlat
cld
lret
dec
and
pop
adc
mov
pop
sbb
xchg
cltd
jp
fcmovbe
aad
int3
in
repz
int
in
adcl
shl
xor
dec
fdivs
in
int
mov
adc
adc
inc
mov
mov
inc
lcall
jge
dec
aam
xchg
int3
je
adc
and
adc
out
mov
xchg
out
xchg
clc
lcall
mov
mov
xlat
push
dec
cmp
jmp
repnz
nop
push
or
adc
or
dec
in
mov
jae
fisubl
enter
je
jbe
repz
or
pop
xchg
lret
mov
mov
or
push
push
jb
xchg
pop
loopne
arpl
repnz
and
movb
rol
add
or
repnz
insl
or
gs
or
cltd
xlat
push
test
adc
adc
push
and
mov
ret
and
lock
inc
xchg
fdivs
jle
pushf
xchg
push
push
pop
dec
dec
sbb
push
push
dec
arpl
xchg
inc
imul
xchg
inc
ficoml
pop
or
test
dec
les
mov
cltd
inc
push
shll
xchg
sarb
and
push
movsl
fisttps
bound
adc
or
gs
push
dec
aam
leave
cmp
lret
pop
and
aad
mov
xchg
push
xchg
and
mov
in
mov
gs
fimull
xchg
xchg
ret
mov
sbb
outsl
and
pop
ficoml
pop
int
mov
ret
adc
cwtl
bound
nop
pop
loop
dec
adc
inc
cmp
cwtl
int3
lcall
inc
fsubr
adc
hlt
dec
int3
jne,pt
xchg
setae
pop
sub
scas
fisttps
jnp
lcall
sub
push
push
add
or
xor
cld
pop
repz
adc
sbb
popf
test
movsl
repnz
repz
movsl
dec
int3
hlt
mov
adc
int3
or
clc
jle
fwait
dec
loopne
or
test
adc
mov
inc
adc
jnp
pushf
leave
shl
push
shlb
push
in
xchg
aam
iret
mov
shlb
dec
cmpsl
ds
inc
rcl
adc
push
fisttpll
pop
jp
add
enter
outsb
cwtl
iret
ljmp
adc
xchg
adcl
and
stos
sbb
vphadduwd
add
xchg
movl
sub
or
adc
and
je
push
pop
push
nop
pop
loopne
popf
out
dec
sbb
mov
dec
inc
loop
arpl
and
mov
aam
sti
imulb
rcl
dec
enter
decl
int3
pusha
lock
cmpsl
rorl
dec
or
xchg
push
mov
pop
cwtl
ds
xchg
dec
cmpsl
jle
inc
lret
add
mov
dec
sbb
and
outsl
in
fwait
cmp
mov
fiadds
xchg
or
push
xor
push
adc
mov
push
ret
sub
or
push
push
jns
mov
push
dec
rorl
push
push
pushf
lret
pop
aam
and
mov
or
mov
scas
in
sbb
add
into
addr16
jmp
pop
push
mov
shlb
test
mov
stos
aad
ljmp
and
and
fsub
popa
dec
adc
adc
rol
and
xchg
xchg
adc
mov
daa
mov
dec
loope
adc
and
shll
push
stos
cld
nop
adc
xchg
aam
lods
cmp
loopne
and
mov
lods
sub
int
dec
xor
sbb
jae
pop
and
ja
adc
adc
imul
loope
inc
or
dec
xchg
push
in
lea
mov
mov
xchg
push
pushf
push
add
adc
jno
addb
push
mov
aad
sahf
push
xchg
cmp
std
or
loop
arpl
lret
push
lret
subl
and
cltd
rcll
shrl
fbld
cmp
pop
jno
pop
out
rorb
or
or
flds
les
pop
rcrl
cmp
lcall
or
mov
cltd
push
pop
mov
rcl
pop
sbb
ja
mov
push
mov
or
adc
push
dec
inc
in
lock
imul
or
test
cwtl
shl
xor
test
shrb
call
int
hlt
push
dec
adc
adc
iret
in
test
lcall
aaa
xor
pop
shll
dec
nop
sar
mov
inc
inc
test
cli
shrb
add
jmp
xchg
add
rolb
xlat
pop
mov
ds
xchg
rorl
dec
push
or
push
xlat
xchg
iret
into
push
jp
adc
popf
fwait
xchg
inc
xchg
or
enter
mov
pusha
in
fmul
jle
cmc
cwtl
adc
hlt
sbbb
je
ret
jo
adc
add
dec
dec
xchg
popf
xchg
aad
push
cmp
dec
cmp
jg
shrl
jns
jns
jns
add
lea
xchg
leave
testb
push
or
lret
call
xchg
dec
pop
rolb
jecxz
fidivs
add
or
cs
daa
sbb
push
bound
push
jns
jg
adc
xor
cmc
ret
mov
or
loop
adc
ret
jg
push
dec
adc
rcll
or
dec
push
jl
hlt
movhps
not
adc
adc
fidivs
dec
push
popf
outsl
push
add
xchg
fcmovne
dec
cld
adc
adc
push
pop
shrb
loopne
pop
pop
jmp
pop
dec
xchg
insl
pop
or
adc
mov
ficoms
pop
cltd
and
xchg
push
push
xor
xchg
jns
lahf
xchg
push
xchg
jle
cwtl
push
dec
mov
pop
cwtl
xchg
mov
xchg
mov
cmpsl
pop
xchg
sbb
enter
inc
mov
sbb
push
adc
out
addr16
loope
sbb
lret
in
or
pop
nop
arpl
jle
movl
xchg
adc
mov
stos
ret
sub
push
adc
pop
xchg
leave
sub
or
lahf
add
les
aam
or
or
lret
fs
xor
cmc
ret
mov
nop
xor
test
out
hlt
adc
add
test
xor
in
pop
dec
or
ficoml
dec
lea
sbb
pushf
daa
fistps
in
push
adc
stos
or
enter
jge
pop
push
loop
pop
or
nop
adc
enter
or
arpl
lret
xor
sbb
negb
fsts
mov
or
xchg
xchg
fs
lret
or
hlt
rcll
jg
in
add
or
jle
xchg
adc
inc
push
or
jp
dec
or
fwait
push
push
test
xor
add
sbb
push
xchg
or
repnz
loopne
push
and
movsl
loopne
mov
in
xchg
test
push
push
push
xchg
jl
push
lcall
adc
cwtl
inc
pop
or
cltd
and
inc
bound
push
mov
push
pop
xlat
cmpsl
adc
movsl
jge
dec
pop
or
test
adc
xchg
or
and
dec
lret
pop
ud2
push
jmp
xchg
pop
dec
dec
adc
pop
shll
jmp
out
cwtl
push
sbb
or
push
xchg
dec
cmpsb
mov
push
imul
or
push
dec
arpl
pop
bswap
add
push
adc
lea
or
add
mov
push
and
sarl
mov
dec
mov
add
leave
push
imul
mov
movsl
out
addr16
dec
call
adc
aad
mov
std
and
pop
rorl
sbb
or
mov
hlt
movsb
inc
pop
ror
fdivr
lea
loope
mov
and
or
pop
aas
repz
test
mov
test
or
mov
pop
pop
fcom
imul
sbbl
adc
push
les
mov
adc
mov
lds
pop
loop
mov
dec
mov
jo
sub
rolb
cmp
push
ss
jge
dec
enter
or
out
adc
or
push
dec
rorb
enter
fs
adcl
adc
or
jl
lret
int3
sbbl
rcll
loope
dec
outsb
sub
pop
lea
xchg
stos
in
or
xor
fisttpll
in
fs
dec
push
mov
leave
sahf
pop
fcoms
or
rolb
sub
push
mov
xchg
rorb
xlat
adc
negb
mov
inc
sbb
sub
shl
push
mov
pop
add
nop
or
push
adc
sub
dec
dec
lret
xlat
mov
arpl
dec
jp
adc
test
popl
and
dec
fldcw
loop
out
dec
cld
xchg
leave
in
jne
lea
iret
fstl
lret
add
lcall
fstl
pop
iret
lock
loop
inc
sub
xor
popf
jle,pt
ds
aam
adc
int3
cmpsl
xchg
sbb
push
push
push
and
in
lret
adc
dec
fwait
btc
rorb
and
push
push
xchg
lret
mov
rcll
roll
mov
dec
jg
inc
aad
push
cmc
loopne
push
cmp
shl
lods
loope
rcl
xchg
mov
mov
push
jmp
daa
popf
loope
jg
xlat
aam
xchg
sbb
and
pop
xchg
insb
icebp
add
repz
sbb
push
dec
pop
test
xor
sub
inc
add
lret
and
enter
sub
leave
adc
popf
inc
rorb
icebp
cmpsb
pop
pushf
add
cwtl
rcll
jne
lret
push
push
mov
vpshlw
btr
test
push
pushf
push
aam
jecxz
pop
pop
icebp
mov
and
nop
xlat
aam
push
mov
les
cmp
inc
mov
mov
enter
adc
leave
shr
xor
aam
ja
js
popf
jns
adc
mov
pop
lcall
mov
cltd
push
xlat
xchg
iret
xchg
xor
ljmp
push
cs
mov
push
or
mov
setl
loope
push
lods
jo
ds
out
xlat
rcll
adc
and
mov
dec
adc
add
xlat
xchg
xchg
xchg
loope
cmpsl
movsl
mov
in
xlat
push
adc
cmp
dec
jmp
adc
jbe
mov
pop
lahf
in
pop
mov
rorl
ret
fmull
dec
adc
push
pop
std
rcrb
jle
int3
out
xadd
test
dec
push
rcl
outsb
pop
sbb
or
cmpsb
xchg
adc
addl
pop
andnps
cwtl
sarl
xor
mov
add
fstps
push
xchg
call
popl
mov
jle
popw
mov
push
gs
xchg
dec
dec
cltd
roll
add
addr16
jecxz
fcmove
xchg
or
xlat
xchg
ja
sbb
mov
pushf
add
test
jns
mov
sbb
jp
adc
push
ja
jle
adc
nop
aad
cltd
outsb
dec
xchg
push
xchg
shlb
rorb
push
jge
cmc
into
arpl
insl
xchg
setp
movsl
pushf
sbb
addb
outsb
dec
push
pop
lods
out
sub
lret
call
xchg
xchg
push
nop
or
mov
adc
jnp
mov
xchg
adc
sub
cmpsl
les
or
rorb
dec
ds
sub
dec
scas
rorl
jae
mov
lods
popf
arpl
sub
std
adc
jns
rcl
je
mulb
dec
xlat
or
mov
adc
push
ret
les
mov
leave
sbb
int3
enter
ss
xor
jbe
push
jl
mov
mov
dec
mov
les
fisttpl
push
rclb
jle
and
push
cltd
cmp
xchg
mov
sub
mov
or
mov
push
dec
xchg
mov
ljmp
xchg
xchg
dec
adc
idivb
push
fwait
lahf
push
sub
dec
sbb
mov
jmp
add
out
inc
cs
mov
jns
add
ror
lods
xchg
dec
mov
and
push
insl
dec
and
push
fcoms
lret
jle
insl
fimuls
fxch
or
push
adc
ret
lret
jle
icebp
nop
cs
into
adc
and
inc
pushf
push
aam
loop
fcmovb
int3
in
inc
sahf
adc
push
mov
push
hlt
jne
add
imul
cmpsb
in
adc
outsl
aam
pop
sbb
jle
out
mov
dec
rorb
dec
cli
fwait
jge
mov
jl
das
shrb
or
dec
mov
int3
xchg
in
dec
push
nop
cmpsb
adc
push
pop
sbb
xor
xchg
push
loop
xchg
dec
imul
inc
orl
dec
iret
and
push
or
pop
cltd
push
movsl
sub
cs
fidivrl
jne
mov
out
hlt
shll
pop
jg
imul
pop
mov
or
cwtl
mov
je
jne
or
es
in
adc
leave
cwtl
mov
frstor
jmp
xchg
outsl
outsb
and
adc
fisttpl
aad
xchg
or
or
push
xchg
mov
push
jns
fstps
xlat
dec
push
and
adc
cltd
dec
jo
xchg
pop
mov
pop
rcll
lret
les
jno
add
lods
adc
xchg
cmp
xchg
sbb
inc
sub
arpl
jns
inc
pop
and
lcall
dec
mov
fists
rclb
mov
add
out
fs
or
xchg
fwait
adc
xchg
xlat
test
cmp
xchg
cmp
int3
or
lret
call
jg
pushf
push
pop
sbb
pop
jns
pop
ja
mov
nop
pushf
push
pop
inc
ljmp
dec
pop
or
jno
idivb
es
push
hlt
ss
cmp
pop
mov
and
stos
mov
inc
je
test
mov
push
sub
fdivs
mov
movsb
or
or
adc
push
out
fcmovb
mov
mov
push
cwtl
or
xchg
add
cmpsl
lea
xchg
push
pop
mov
mov
cld
dec
lds
dec
dec
outsl
cmp
cmpsb
jl
mov
insl
rclb
jns
and
aam
dec
popf
jecxz
sbb
push
aad
jae
jns
and
push
mov
sbb
xchg
stos
or
fcoms
adc
cmp
test
testb
nop
test
mov
int3
iret
rcll
mov
cmp
mov
cltd
mov
pop
mov
sbb
mov
or
cmp
cltd
jecxz
mov
lods
mov
adc
popf
xor
push
sbb
iret
shll
rorl
push
or
fistps
stc
and
nop
xchg
fimull
hlt
push
sub
pop
or
gs
rorb
jne
lret
pop
push
jle
loopne
jmp
sbb
push
sahf
adc
add
xor
mov
in
outsb
mov
jl
flds
adc
mov
popa
pop
cmovl
rcll
dec
sub
mov
push
nop
push
mov
fsts
adc
les
loop
xchg
push
shl
mov
ret
inc
rcl
dec
pop
into
and
sar
in
aam
jge
fsts
jg
sbbl
dec
push
sbb
in
jmp
pop
adc
stos
fwait
aam
fcmove
cltd
dec
imul
xchg
inc
add
mov
rcll
cmp
adc
dec
ja
fcomps
pop
jns
xchg
movsb
jo
mov
jmp
jecxz
adc
nop
xchg
dec
xchg
xchg
fldenv
mov
nop
aam
dec
jle
mov
push
stos
jno
push
inc
xchg
dec
enter
pushf
fwait
movsb
push
dec
lret
or
icebp
xchg
dec
call
gs
ficoml
or
icebp
adcb
xchg
xchg
push
push
pop
call
pop
mov
or
pop
dec
or
push
lock
lods
loope
push
pop
in
xlat
push
mov
inc
out
or
popl
movsb
iret
imul
stc
and
shlb
packssdw
push
mov
test
push
aam
push
xchg
hlt
insl
shlb
or
lock
ret
cmpsl
push
shlb
or
hlt
insl
jecxz
int3
ret
popf
jg
or
jo
inc
or
test
mov
jne
lods
lahf
or
dec
push
mov
orb
cld
pop
mov
lock
test
fsubr
and
leave
sahf
xor
mov
int3
xlat
dec
push
mov
ja
xchg
dec
in
xorl
or
fists
dec
xchg
loopne
or
push
pop
or
jns
cmp
dec
cwtl
outsb
xchg
mov
sbb
adc
and
xchg
pop
and
adcb
or
popf
sbb
xchg
adc
rclb
pop
xchg
xlat
mov
data16
mov
fs
dec
fimull
adc
pop
or
or
ficompl
lahf
flds
call
rcrl
jle
int3
adc
fadds
or
fwait
test
aad
fcoms
and
dec
mov
or
movsl
jbe
add
xchg
dec
inc
xchg
imul
adc
popl
lret
mov
push
mov
stos
dec
outsl
sbb
jb
lret
xor
add
andl
xchg
lcall
dec
pop
ret
arpl
mov
cmp
repnz
pop
mov
es
ret
scas
push
inc
add
mov
in
push
pop
xchg
lods
call
dec
push
mov
enter
xchg
daa
and
int3
mov
aam
lods
mov
repz
mov
aam
jl
loopne
mov
push
adc
fsts
sub
rorb
sbb
mov
cwtl
or
repz
mov
pop
xchg
or
rcrl
rclb
jb
adc
mov
cmp
dec
mov
pop
push
xor
fisubl
scas
adc
int3
test
in
ljmp
dec
addr16
lods
sbb
pop
mov
mov
pop
es
mov
scas
xor
jbe
arpl
lret
bswap
out
mov
push
xchg
test
xchg
lods
pop
jns
leave
pop
adc
call
mov
push
mov
mov
cli
loop
and
mov
stos
dec
xchg
into
int3
pop
es
pushf
out
outsb
jp
adc
fcmovu
adc
pop
aaa
add
xchg
lods
xchg
int3
push
pop
popf
pop
or
dec
lods
inc
pop
imul
leave
roll
xchg
mov
adc
aaa
popf
jns
xchg
dec
or
rclb
jge
cli
and
xchg
fimuls
jmp
sar
or
mov
test
push
xor
push
adc
adc
push
xchg
rcll
mov
sti
fists
dec
add
and
pop
jmp
inc
mov
push
mov
shlb
sbb
inc
lret
lods
sbb
xchg
mov
sbb
jp
pushf
push
fstl
pushf
pop
adc
sub
add
add
mov
cmp
outsl
lret
jnp
loop
mov
pop
ret
out
mov
shl
imul
jp
dec
aam
into
cmp
cltd
and
or
mov
pop
lods
cltd
or
ret
jecxz
enter
imul
inc
sbb
iret
xchg
loopnew
sbb
push
jg
add
or
stc
aam
loop
pop
xchg
cltd
or
test
push
shr
mov
rcll
mov
repnz
lcall
mov
int3
mov
xor
adc
adc
mov
adc
pop
mov
mov
push
loop
push
jno
xchg
xchg
ja
mov
lret
aam
jo
lcall
push
inc
jno
imul
xor
mov
jle
pop
pop
int
xor
mov
sub
mov
xor
adc
rorl
pop
cmp
add
dec
test
mov
mov
lods
popl
dec
adcl
sub
adc
fidivrl
dec
xchg
popw
xchg
mov
es
lods
sbb
hlt
mov
xor
dec
aam
rorl
or
or
and
addr16
jg
add
jno
mov
dec
inc
push
sbb
roll
jle
xchg
xchg
sbb
push
cltd
pop
push
mov
popf
aam
dec
mov
mov
mov
mov
shll
adc
inc
mov
or
adc
pop
shrb
lds
arpl
xchg
xchg
xor
push
mov
mov
iret
push
push
insl
lahf
adc
cwtl
pop
mov
or
inc
movsl
mov
sbb
icebp
les
inc
aam
dec
mov
push
bswap
xlat
enter
rclb
sbb
arpl
dec
inc
bswap
lret
mov
lea
inc
push
add
dec
ja
loopne
dec
xlat
mov
push
push
pop
inc
enter
mov
fsts
outsl
push
stc
push
rcll
insl
and
mov
adc
cmovl
out
jge
adc
outsb
rclb
ror
mov
pop
es
ja
rolb
push
xchg
xchg
fcoml
ret
aad
repnz
scas
or
adcb
sbbl
aam
sbb
cmp
push
inc
jne
mov
dec
lret
cmpsl
fs
xchg
je
adc
enter
add
dec
pop
pop
das
repnz
xor
pop
stc
inc
scas
jle
sub
xor
dec
leave
fcoms
outsl
or
add
sbb
adc
test
je
or
movsb
or
dec
jle
xchg
mov
jle
in
cmpsb
sti
imul
pop
push
sub
loope
stc
or
jg
movsl
xchg
mov
cmc
insb
fcoms
jbe
push
jmp
pushf
push
insb
js
pop
enter
xor
fstl
jl
pop
nop
adc
add
dec
mov
add
jle
test
pop
sbb
in
or
dec
loope
lock
adc
pop
adc
and
dec
push
fisttpll
jle
sti
jmp
push
dec
sbb
xchg
adc
sbb
dec
ja
xlat
or
dec
mov
stos
dec
out
subb
sub
pop
fistl
xor
or
xchg
nop
xchg
xchg
xchg
repnz
add
xor
xchg
pop
fildl
and
or
cltd
mov
adc
xchg
fsubl
xor
pop
sti
dec
add
jg
das
in
jae
jl
sbb
pusha
xchg
cltd
aad
cltd
or
into
mov
mov
push
adcb
addr16
cwtl
cwtl
scas
adc
sub
pop
or
push
adc
sbb
fmull
shlb
pop
dec
stos
or
jnp
jo
sub
sbb
cmp
js
xor
inc
mov
lea
xor
pop
or
adcb
inc
pop
jmp
sbb
sub
arpl
scas
mov
xchg
adcb
add
test
adcb
jle
jmp
insb
push
int
sti
jle
jmp
insb
pop
fs
or
or
push
push
cwtl
aad
mov
iret
dec
fmuls
jmp
xchg
lret
jae
cs
jge
adcb
mov
xor
nop
or
adc
mov
pop
loop
push
pop
xchg
or
iret
pushf
int
push
and
cltd
mov
jecxz
mov
addr16
push
pushf
clc
lret
jbe
loope
rclb
seta
ljmp
mov
and
or
nop
xor
jne
dec
adc
mov
int3
adc
mov
cwtl
jge
addr16
mov
xchg
push
add
sub
xchg
or
into
jbe
sbb
int3
psadbw
dec
push
push
mov
inc
push
rcrb
jl
adc
mov
dec
aam
push
test
pop
sbb
std
fisttpl
mov
mov
iret
enter
add
dec
xchg
mov
mov
xchg
cmc
add
jle
adc
lcall
xor
jecxz
pop
push
push
rol
xlat
dec
sbb
or
rcrl
pop
pop
push
inc
arpl
jmp
push
int3
push
leave
and
loop
xchg
pop
dec
mov
and
or
dec
xchg
leave
es
jl
cmp
pop
push
dec
or
gs
dec
int3
or
inc
mov
cmpsb
aaa
pop
push
jmp
aad
mov
adc
cwtl
test
and
dec
mov
aad
adc
addl
dec
push
test
cwtl
dec
mov
jle
gs
pop
push
enter
inc
mov
add
pop
lret
sahf
outsb
std
nop
jne
pop
or
dec
xchg
mov
sahf
or
adc
arpl
jecxz
leave
cmpsb
lea
push
xchg
lock
push
dec
cld
inc
push
mov
jbe
or
in
inc
push
mov
lock
jne
adc
cwtl
mov
xchg
sbb
sahf
xlat
sbb
push
inc
daa
loope
iret
test
cmp
aam
dec
fcoms
repnz
leave
or
add
push
mov
xchg
arpl
mov
lds
push
mov
pop
sub
fcoms
lret
push
xchg
pop
leave
mov
xor
or
sbb
fs
sbb
mov
fwait
inc
mov
or
cmp
sub
push
push
leave
push
xchg
dec
push
dec
data16
mov
push
mov
push
or
and
inc
inc
pop
adc
test
push
ficoml
loope
or
in
xchg
bound
and
pusha
or
imul
sahf
push
xchg
gs
adc
dec
push
push
xchg
xchg
mov
pushf
pushf
nop
and
jecxz
cwtl
dec
fisttpl
and
push
sbb
xchg
in
xlat
mov
pop
dec
mov
push
icebp
lock
lret
push
and
shrd
adc
and
mov
decl
popa
pushf
adc
jecxz
or
aad
push
inc
add
push
push
daa
mov
xchg
add
gs
or
jno
rcrl
inc
std
rorb
jl
pop
dec
loopne
and
lahf
out
push
lret
cltd
jg
inc
add
sti
inc
xlat
ljmp
pop
pinsrw
cli
adc
clc
push
xchg
in
pushf
or
or
pop
jecxz
mov
pop
jne
mov
push
and
push
loopne
pop
add
aam
dec
ficoml
add
and
xchg
dec
add
add
orb
xchg
dec
xchg
jle
dec
rorb
pop
pop
dec
or
testl
lret
cmp
pop
daa
popf
mov
dec
mov
mov
xlat
out
or
dec
cltd
es
and
and
loop
dec
add
push
shlb
mov
cmpsl
pop
or
jle
sbb
lret
adc
aam
cltd
push
push
dec
mov
and
add
pop
dec
pop
call
daa
data16
pop
in
fcoms
dec
or
es
inc
in
cwtl
wbinvd
test
adc
push
mov
or
xchg
mov
fistl
loope
xor
jo
cmp
lret
fucomip
aam
jge
or
mov
loope
pop
mov
xchg
cltd
mov
cmp
call
pop
dec
ja
pop
xchg
xlat
xchg
dec
jo
adc
mov
loope
mov
and
out
flds
test
cmovl
fcmovbe
push
push
or
dec
rolb
jno
dec
jmp
mov
inc
iret
xlat
push
aam
or
adc
fs
mov
jmp
pop
insl
loop
push
shrb
xchg
mov
jo
inc
dec
inc
push
ficoml
enter
add
cmp
pop
xchg
mov
popa
mov
int3
sub
xlat
orl
leave
xchg
in
and
mov
setno
dec
adc
lret
push
dec
int
sub
cmp
fwait
andb
push
test
xchg
mov
or
xchg
outsl
sub
iret
sbb
fsubr
sahf
xor
jecxz
xchg
sub
dec
test
adc
push
jmp
add
pop
mov
push
nop
andl
inc
xchg
xchg
push
xlat
rol
dec
push
mov
ret
cwtl
jbe
lahf
inc
nop
nop
dec
lret
dec
xchg
popl
pop
and
fmuls
sbb
xchg
push
bswap
xchg
movsb
pop
adc
aaa
adc
inc
xchg
rcl
adc
jo
lods
in
inc
repnz
int3
cmp
push
lret
pop
xchg
movl
es
rol
fmuls
icebp
xchg
scas
or
pop
inc
xchg
outsb
or
nop
mov
xor
cltd
sarl
lret
test
aam
and
rcr
lret
inc
inc
roll
call
or
adc
popf
lcall
xchg
ret
or
sub
inc
arpl
test
adc
inc
js
push
lock
xor
jb
mov
adc
add
or
lods
data16
mov
jbe
and
push
cld
cltd
xor
push
xor
movsb
push
pop
dec
lret
sbb
shrd
jl
adc
fcoms
mov
dec
shl
pop
jg
jns
insl
pushf
or
cmp
jl
lcall
adc
jne
iret
fwait
dec
push
inc
rorb
mov
push
int3
push
fadds
and
xchg
cltd
fwait
dec
lret
sub
pop
imul
dec
lret
mov
pop
xchg
mov
mov
xchg
xor
and
adc
push
cmp
adc
or
xchg
jp
vmwrite
mov
pop
or
adc
dec
icebp
push
pop
xlat
dec
shrb
rorl
xchg
fistpl
mov
arpl
iret
mov
mov
jg
lcall
cmp
imul
sub
mov
mov
in
mov
lret
adc
enter
hlt
push
push
ret
inc
mov
mov
aam
push
movsl
xlat
movsb
cmpsb
push
xlat
ja
pushf
pop
xchg
adc
xchg
nop
adcb
push
or
cld
loopne
movsl
or
jg
aam
outsb
fisttpl
push
test
in
ret
loop
lods
cmp
mov
enter
leave
inc
fcomps
test
out
push
cmp
lcall
pop
mov
mov
movsb
nop
or
inc
shl
test
dec
mov
movl
cwtl
dec
jne
sbb
adc
sub
jne
mov
inc
xchg
in
rcll
dec
or
pop
inc
xchg
arpl
rcr
ret
popa
add
rcrl
mov
outsb
popa
mov
ja
fists
cli
loop
adc
push
and
dec
inc
mov
or
xchg
adc
adc
cltd
mov
mov
cmovb
lods
icebp
jle
outsl
sahf
add
add
rcl
xchg
push
decb
and
dec
fldenv
mov
push
inc
test
in
adc
repnz
scas
lods
test
add
adc
inc
cwtl
add
jle
push
lock
xchg
dec
mov
cltd
jg
sub
test
lret
bound
dec
iret
enter
sbb
imul
stc
or
mov
jp
popf
shlb
and
rcr
xor
ret
lea
and
xchg
xchg
lods
insl
enter
pop
sarl
push
testl
jno
mov
loope
popa
sbb
cmc
fs
adc
add
or
ret
flds
push
popf
jns
jg
out
lret
lret
imul
subl
lea
iret
and
dec
int3
push
mov
clc
and
push
cltd
loopne
fstl
inc
jp
sahf
adc
shll
iret
mov
enter
add
xchg
outsl
sbb
cwtl
and
push
push
xchg
aad
enter
jbe
adc
add
add
jle
int3
push
push
dec
pop
mov
pop
push
xchg
cltd
loop
adc
lret
test
roll
in
arpl
dec
ret
dec
push
inc
and
mov
lcall
or
or
es
movsb
bound
rorl
pop
rclb
dec
test
cmpsb
xor
lds
pushf
adc
sti
pop
imul
xor
inc
pop
or
adc
pop
xchg
fdivs
jg
pop
dec
dec
rorl
pop
popf
xchg
xor
add
push
pushf
dec
inc
mov
das
push
in
enter
inc
adc
jg
adc
xchg
xchg
adc
xchg
insl
push
mov
or
cwtl
out
xchg
repz
iret
mov
mov
adc
in
addr16
mov
ror
je
push
dec
sbb
mov
repz
pushf
cmp
xchg
add
jg
insb
mov
pop
arpl
outsl
push
or
jns
bound
jecxz
fiaddl
push
paddsb
ret
dec
dec
inc
test
ret
out
adc
mov
dec
jle
cltd
mov
dec
dec
dec
sbb
popf
or
mov
xchg
mov
xchg
mov
int3
or
fdivrs
jns
call
ret
adc
lret
dec
push
rcl
push
and
sbb
fst
jo
bound
pop
pop
ret
mov
mov
fcomps
shrb
or
push
int3
dec
sbb
pop
push
mov
lods
into
sub
dec
pop
and
notb
push
jge
mov
leave
lds
push
enter
jge
dec
adc
xchg
pop
pop
mov
mov
sarl
movsb
push
rolb
sub
imul
jae
push
or
adc
dec
ret
rcll
lret
lods
push
jle
sub
xlat
call
or
push
fimuls
rcl
cmovns
and
mov
or
xchg
addr16
mov
xlat
ret
mov
hlt
and
outsb
xchg
orb
dec
loope
dec
sbb
ss
mov
dec
nop
stos
xchg
xchg
inc
iret
mov
mov
js
movsl
inc
bound
les
jp
dec
lret
pop
fwait
dec
xorl
loopne
adc
mov
mov
xchg
dec
xlat
xchg
pop
cmp
jle
push
and
shrl
xor
dec
loop
arpl
rcll
iret
push
test
fs
xchg
repz
outsb
or
sub
jge
add
addb
and
arpl
sub
dec
pop
leave
ret
push
mov
ds
push
dec
add
xchg
xchg
jge
cmp
xchg
nop
push
mov
or
aam
ss
outsb
movsl
and
leave
xchg
in
dec
push
nop
cmp
pop
push
in
add
mov
push
push
jnp
mov
push
xchg
dec
cltd
movsl
insb
fimull
xchg
sub
pop
lcall
or
popa
adc
pop
leave
pop
icebp
inc
stos
xchg
push
push
or
mov
and
push
sysret
xchg
scas
pop
stos
push
inc
add
cltd
mov
cltd
leave
sub
jmp
in
xchg
insl
pop
dec
sbb
enter
dec
dec
or
int
dec
mov
sbb
mov
loopne
sbb
fcmovnu
adc
add
clc
insl
jns
mov
cwtl
dec
dec
fmuls
xchg
adc
xchg
lret
pop
bound
inc
push
push
nop
test
xchg
testl
push
loope
cltd
or
mov
push
loopne
iret
sub
test
xchg
rclb
leave
or
mov
nop
pop
shlb
and
xchg
inc
inc
ror
dec
or
enter
push
dec
cltd
adc
aam
xchg
fmuls
sbb
ficoml
dec
int3
scas
dec
dec
testb
lock
jle
lret
iret
addr16
in
leave
cs
pop
ficoml
psrld
sbb
dec
ljmp
in
pop
cwtl
push
xchg
and
xchg
xor
pop
or
or
push
mov
arpl
lret
adc
xchg
push
mov
cli
ret
inc
sbb
int
jns
mov
adc
mov
pop
int3
int
jbe
add
push
lcall
xchg
ss
xchg
xchg
push
xlat
push
xchg
rclb
in
or
push
jne
fwait
aad
jmp
pshufw
inc
je
push
addb
lret
out
dec
and
in
mov
mov
iret
push
ljmp
mov
arpl
push
test
into
dec
ja
mov
push
or
popf
sub
dec
enter
mov
push
push
xchg
js
iret
or
or
adc
inc
int3
bound
jl
adc
nop
or
test
adc
mov
and
pop
push
cltd
cltd
test
dec
push
sub
lods
inc
adc
mov
sbb
xor
sub
cwtl
push
inc
xchg
xchg
mov
xchg
push
adc
ja
xchg
rcll
mov
jns
pop
ss
xor
add
mov
adc
mov
or
xor
inc
or
fadds
adc
push
dec
pop
add
inc
xchg
cli
xchg
shll
jb
enter
adc
dec
cmp
test
and
and
ret
in
ret
outsb
or
lret
call
and
popf
mov
nop
loopne
arpl
enter
lret
psrld
xchg
mov
in
mov
mov
nop
xchg
and
xchg
cmp
lea
or
xchg
add
mov
andb
push
leave
xchg
lcall
jmp
in
rcll
mov
mov
add
aam
popf
fists
inc
or
mov
adc
push
cmpsb
and
lock
or
shrb
ret
dec
jle
fnstcw
fcomps
pushf
aam
mov
or
or
adc
add
lret
mov
xchg
or
sbb
xchg
lods
and
leave
push
adc
sub
addb
cmp
lcall
ds
pop
adc
xchg
loop
nop
fimull
add
aam
test
push
lods
jmp
mov
jmp
adc
cltd
test
mov
iret
cwtl
dec
cwtl
inc
sbb
pop
xchg
sbb
adc
add
cwtl
sbb
leave
adc
or
rolb
mov
xchg
fists
iret
lret
and
or
jne
dec
lret
mov
mov
push
pop
xchg
pop
dec
dec
inc
fildl
icebp
jne
mov
mov
loopne
dec
iret
loopne
mov
in
adc
pop
jmp
js
pushf
push
pop
in
mov
dec
push
outsb
mov
jg
cmovl
push
push
cmp
xchg
dec
cmp
xchg
fadd
sbb
pop
xchg
pusha
sub
xchg
inc
adc
xchg
push
sub
push
jge
xchg
cmpsb
push
push
sahf
dec
xlat
aam
or
sub
rcl
or
sbb
test
xchg
sub
mov
pushf
enter
or
or
pop
cmp
xchg
xor
add
push
cwtl
insb
lret
mov
outsl
or
out
push
jns
or
lea
dec
cmp
pop
pop
sbb
in
cwtl
xchg
push
and
adc
adc
sbb
adc
xchg
sbb
enter
pop
fcoms
push
lock
push
pop
mov
rorb
jns
xchg
adc
ret
mov
lea
enter
pop
sahf
out
dec
dec
out
dec
test
nop
pop
xchg
pop
xchg
shrl
hlt
adcb
push
out
ret
jl
xchg
jb
je
add
adc
popf
push
xchg
pop
ja
imul
subl
jle
and
sbb
lods
daa
jno
int3
dec
lds
insb
xor
ret
iret
aaa
lods
inc
imul
dec
lret
jle
adc
hlt
dec
xor
cltd
sub
lret
out
jle
addr16
out
pop
les
test
mov
xlat
pop
jo
dec
xchg
cmpsl
adc
jns
xchg
push
les
or
mov
adc
inc
dec
int3
mov
lret
dec
xchg
pop
or
xchg
leave
mov
hlt
fwait
xchg
push
mov
cltd
movsl
xchg
fwait
out
xor
mov
call
xchg
fistl
fsts
dec
xchg
sbb
dec
arpl
cwtl
loop
jecxz
pop
stc
adc
xchg
adc
inc
push
enter
and
orl
int3
pop
cmp
adc
or
inc
imul
mov
sub
adc
les
inc
push
and
jmp
rolb
xchg
adcl
pop
xor
or
dec
inc
imul
push
shl
cmp
loop
xlat
inc
clc
jle
js
hlt
jo
mov
xchg
cltd
sbb
iret
push
out
daa
and
in
sarb
int
cmp
jns
out
rcll
lahf
mov
dec
dec
testb
rcll
xchg
mov
je
jge
es
lcall
out
js
lods
cltd
xchg
cwtl
xor
nop/reserved
sbb
push
lods
mov
test
dec
addps
xchg
rorb
arpl
in
xchg
xchg
rcll
dec
adcl
mov
or
jecxz
push
xchg
adc
pop
mov
movsl
jmp
test
cmpsb
arpl
mov
add
adc
cmp
fwait
xor
ja
push
add
xchg
cmc
fldl
jbe
adc
and
std
leave
sbb
push
or
jns
loop
mov
cli
rcrb
mov
shr
and
or
push
inc
je
inc
push
rcll
aam
rcll
push
and
dec
movsb
adc
or
jl
nop
nop
inc
out
das
mov
adc
mov
or
mov
pushf
dec
sub
pusha
sbb
stc
xor
adc
jle
stos
fisubrl
xchg
inc
lods
mov
leave
pop
rol
push
insl
fucomi
js
inc
popf
int
mull
pushf
call
mov
push
xlat
push
addr16
in
jle
xlat
mov
sub
push
dec
jno
adc
js
mov
lret
js
nop
mov
out
out
jae
add
inc
shll
pop
jle
leave
adc
dec
mov
push
adc
inc
aaa
fmuls
lods
jmp
jle
jns
aaa
push
mov
mov
inc
ja
in
xchg
or
sub
and
pop
rcl
out
adc
out
xor
mov
dec
in
int3
sbb
pusha
or
lahf
clc
mov
in
push
push
ja
push
sbb
mov
cmp
adc
push
mov
dec
lcall
push
push
js
rorl
outsb
nop
into
or
mov
shll
pop
pop
push
dec
outsb
int3
mov
loopne
and
ficoml
adc
push
out
push
imul
adc
iret
stos
pop
xchg
pop
pop
xchg
popf
adc
movsl
pop
rorb
adc
push
ret
xor
push
cmovnp
jecxz
xchg
mov
mov
ds
out
int
js
ficoml
pop
ja
or
rclb
adc
push
outsb
dec
icebp
fmul
lods
pop
push
xchg
sub
iret
inc
fisttpl
or
xchg
dec
dec
push
test
push
inc
add
xchg
out
scas
and
sbb
popf
xchg
mov
xchg
nop
jmp
int3
jecxz
dec
ficompl
jne
nop
pop
pop
adc
cwtl
ret
or
adc
test
push
fstps
dec
lret
pop
xlat
rorb
clc
push
jge
cwtl
daa
sub
sbb
mov
pushf
mov
pop
jne
xchg
pop
ja
cld
stos
arpl
and
sbb
push
stos
push
push
push
int3
or
jmp
iret
adc
jg
adc
dec
or
rclb
aam
mov
mov
lock
in
fisttpll
xchg
adc
adc
les
xchg
xchg
and
setae
jge
dec
out
out
add
or
ret
je
jno
iret
fmuls
daa
cltd
rorb
ret
repz
gs
adc
jmp
dec
nop
or
dec
or
ds
push
enter
dec
fst
xor
mov
adc
pop
pushf
lret
xor
insl
sub
inc
inc
xchg
imul
fmuls
jg
dec
add
push
push
pop
ret
mov
es
mov
mov
or
push
xchg
jmp
pop
push
push
pop
loopne
cmp
sbb
xor
inc
jmp
lock
push
leave
adc
lret
xchg
mov
iret
xchg
xchg
stos
insb
push
ret
jnp
ret
and
cmp
cmc
je
pop
mov
xchg
mov
inc
mov
inc
adc
mov
iret
mov
shl
dec
adc
push
jge
push
jo
insl
rorl
cltd
and
xchg
lock
adc
int3
lret
sub
dec
jmp
mov
test
jp
lret
sbb
iret
mov
mov
lods
inc
sbb
jns
xchg
sub
xlat
xrelease
sbb
jecxz
mov
fcom
xor
push
fnstenv
adc
xchg
or
loope
cltd
mov
jle
nop
dec
xlat
mov
or
xchg
mov
push
cs
jg
jbe
push
xchg
push
dec
push
dec
push
sbb
int3
xchg
push
mov
adc
dec
xchg
fdivs
insb
dec
sub
adc
lcall
mov
mov
call
push
adc
mov
pop
adc
sub
fcoml
xchg
shrl
ret
sub
rcr
dec
mov
iret
adc
rolb
sub
push
or
xchg
stos
fwait
mov
int
imul
jecxz
sbb
push
jg
mov
jle
pop
rcl
sbb
leave
push
mov
popf
outsb
push
or
aad
fmuls
adc
rcrl
xchg
sub
push
sbb
sbb
adc
lea
fmuls
push
adc
fmuls
inc
adc
scas
shrl
ss
dec
and
ficoml
inc
movsl
push
enter
sub
xor
adc
inc
or
mov
sbb
outsl
dec
fists
push
xchg
push
or
jg
lock
or
pushf
lea
dec
push
push
adc
repnz
inc
test
dec
push
or
nop
shlb
jno
jne
dec
in
sbb
dec
shr
fnstenv
mov
mov
int3
or
jae
xor
scas
xchg
out
dec
xchg
adc
jecxz
fdivr
cmc
and
mov
mov
arpl
and
push
or
mov
xorb
or
mov
mov
pop
push
fisttpll
dec
xchg
cmp
jle
out
xchg
rolb
xchg
rcll
dec
pop
shll
sub
xchg
jne
dec
or
mov
pop
xchg
or
cmc
push
and
dec
outsb
dec
cltd
xor
lret
insl
out
or
pop
xchg
out
psadbw
or
push
push
ljmp
mov
lahf
test
dec
dec
dec
mov
push
mov
push
dec
lock
lret
gs
push
pop
push
adc
adc
mov
jl
divps
rcrb
loope
dec
push
mov
dec
sarl
adc
adcl
inc
fwait
je
outsl
cmpl
ror
push
xchg
dec
add
popl
out
movsb
adc
lret
add
dec
or
aam
ja
push
push
pushf
lret
leave
fs
pushf
add
int3
push
out
bound
loop,pn
or
js
jmp
sbb
cmpsl
call
aam
mov
jg
sub
movq
rol
aas
fisttps
call
mov
rcll
hlt
rcll
arpl
add
mov
or
mov
mov
push
ret
in
lret
or
xchg
ja
into
leave
mov
adc
dec
int
add
lea
ja
push
inc
enter
adc
xchg
and
rcrl
sub
cmp
inc
clc
xchg
cltd
lock
scas
or
pop
loopne
xchg
jecxz
dec
xchg
in
adc
mov
push
test
inc
insl
mov
push
push
push
xchg
pop
or
jge
mov
push
adc
adc
adc
orb
mov
mov
push
or
pop
sbb
call
sub
sub
leave
je
adcl
pushf
or
and
jbe
dec
pop
pop
fstpl
fwait
dec
inc
jg
jg
mov
push
outsb
or
adcl
xchg
out
push
sub
inc
mov
sbb
stos
in
xchg
mov
mov
dec
dec
nop
mov
jns
lods
insb
or
imul
inc
jge
popf
int3
push
sbbl
fisttpll
mov
mov
dec
or
sbbb
data16
adc
inc
ficoms
rolb
or
and
pop
mov
cwtl
xlat
dec
adc
aam
jno
dec
sbb
mov
push
jmp
jge
dec
or
pop
orl
xchg
mov
ss
push
divb
test
adc
add
ficompl
pop
adc
sub
adc
stos
adc
xchg
mov
sub
mov
pop
adc
adc
xchg
mov
arpl
sub
add
pop
sbb
pop
mov
stos
fnstsw
inc
or
enter
adc
lea
pop
sbb
adc
lahf
flds
inc
lea
xlat
adc
xchg
or
shl
iret
or
add
inc
lds
pop
pop
xlat
test
jno
cmp
jecxz
xchg
mov
sub
pop
aam
xchg
push
bswap
dec
jle
ret
rcl
push
cmp
inc
pop
test
add
outsl
mov
subl
xchg
pop
xchg
dec
fimull
int3
dec
jb
push
xchg
cwtl
pop
jg
push
cltd
add
push
sbb
jecxz
nop
fcmovb
pop
out
push
std
cwtl
or
jle
pushf
rclb
jg
add
lds
inc
in
pop
dec
jo
xchg
jbe
ss
jge
push
test
iret
xchg
push
sbb
lcall
loopne
xchg
dec
test
push
push
xchg
cltd
jns
jns
ror
jp
xchg
movsb
mov
adc
and
cltd
popf
pusha
dec
lcall
inc
push
int3
mov
popa
in
xchg
cltd
mov
rorb
and
outsl
lret
mov
test
mov
adc
shrb
outsl
ja
cltd
or
je
iret
push
ret
popa
addb
cld
dec
pop
or
aam
jo
adc
rclb
mov
adc
jge
mov
push
lret
pop
mov
adc
daa
lods
stc
fwait
jg
jb
push
pop
xchg
xchg
dec
mov
jg
icebp
jle
pop
mov
sarb
aam
lcall
or
or
test
dec
add
mov
sbb
sahf
mov
push
jg
sbb
iret
sbb
sbb
out
dec
js
push
xchg
or
test
xlat
sbb
movsb
testl
xchg
rcll
jno
addl
push
js
mov
pop
lret
or
xchg
imul
push
orl
xor
mov
and
mov
add
adc
fcmovb
xlat
mov
in
inc
adc
push
xor
cmpsb
jns
fsubs
arpl
push
in
aam
in
push
outsl
loopne
fnop
lret
aaa
mov
pop
fadds
xor
movsb
cmpsl
mov
jo
test
in
xor
or
or
loopne
and
nop
adc
popf
test
mov
cmp
xchg
mov
jp
rolb
pop
stos
mov
fsts
lods
call
xchg
adcb
dec
lods
and
daa
xor
dec
jge
jg
mov
xchg
dec
or
leave
jbe
pop
rorl
psllq
test
movsb
bound
xor
jns
xchg
es
test
pop
adc
xchg
xchg
add
push
aam
xchg
xor
xchg
pop
mov
jle
lahf
pop
inc
sahf
adc
mov
and
or
dec
adc
hlt
ficoml
adc
cld
cmp
arpl
inc
je
add
mov
push
enter
xchg
adcb
or
pop
cmp
add
mov
cli
jno
push
adc
aad
dec
and
add
shll
push
push
sbb
pop
and
and
dec
xchg
pop
in
pushf
cmp
xchg
push
popl
jecxz
fiaddl
dec
cmp
sbb
xchg
movsb
loop
mov
or
cltd
and
ja
push
xchg
loopne
loopne
and
loop
roll
sub
leave
movsb
mov
cs
test
sub
dec
xchg
push
adc
sbb
repnz
fcmovbe
xchg
or
push
lahf
mov
dec
orl
dec
nop
xlat
push
xchg
inc
pop
mov
loopne
or
popf
rcl
mov
xor
stc
gs
xchg
xchg
or
mov
or
pop
xchg
mov
fwait
mov
enter
aad
lahf
inc
add
jmp
fcoms
push
leave
jle
dec
xchg
jg
adc
cltd
shrd
mov
adc
cmp
xchg
push
cmp
aam
mov
in
out
cli
and
aad
xchg
add
or
mov
ljmp
enter
mov
dec
xchg
aaa
les
push
rolb
sahf
stos
dec
push
lret
in
pusha
loop
rorl
in
xlat
xchg
aam
sbb
push
inc
and
jo
xchg
adc
lds
leave
jge
push
cwtl
xchg
push
mov
std
insb
ja
je
mov
adc
xlat
cltd
lea
push
imul
mov
or
xor
mov
shl
push
aam
mov
pop
or
fmulp
loope
rcr
mov
frstor
jo
cld
fistl
lcall
pop
push
jle
cwtl
pop
or
imul
jns
push
clc
jmp
leave
or
push
lret
inc
ret
sub
sbb
xchg
xchg
cmp
cltd
inc
mov
xchg
lret
add
lret
xchg
or
out
adc
cltd
dec
adc
dec
outsl
adc
inc
adc
mov
xorb
adcb
loopne
and
popf
adc
in
push
push
aam
loopne
cltd
jecxz
or
push
push
lret
xchg
sbb
cs
out
xchg
push
add
pop
xchg
xchg
adc
add
adc
mov
xchg
sbb
jb
sbb
movsl
pushf
mov
iret
inc
mov
and
pop
push
adc
fwait
rorl
loope
xchg
rolb
mov
or
fiaddl
xor
or
xchg
das
shlb
and
mov
adc
xchg
jg
jg
xchg
pop
xchg
iret
out
xchg
ficompl
aad
inc
push
lret
inc
jmp
call
ja
scas
push
addb
mov
jne
sbb
pop
xchg
pop
dec
out
test
mov
dec
lret
xlat
push
hlt
fmull
adc
ror
decl
mov
rclb
mov
rclb
dec
int3
test
sbb
inc
ds
jns
mov
leave
push
mov
xchg
or
shl
jae
dec
cltd
cmp
sub
and
dec
mov
lret
push
lret
adc
mov
xchg
and
seto
movsb
lods
lock
sub
cwtl
scas
inc
lock
xchg
dec
push
iret
into
mov
pop
adc
dec
mov
stos
aaa
pop
ficoml
mov
xchg
orl
xchg
testl
cmp
push
hlt
xor
mov
adc
adc
dec
nop
xchg
inc
lds
je
aam
inc
mov
dec
jl
adc
jg
fs
rclb
sbb
hlt
ds
push
hlt
int3
or
xchg
mov
push
or
and
enter
mov
mov
rcl
arpl
hlt
std
loop
movsb
dec
dec
adc
cmpsb
cwtl
xchg
popf
leave
rcr
pop
push
out
cltd
jbe
xor
inc
enter
rcrb
add
pop
test
xchg
loope
push
sbb
nop
fwait
and
test
ret
out
adc
mov
and
push
fldenv
popf
push
sbb
pop
mov
test
adc
xchg
push
enter
je
mov
fdivrs
cmp
cwtl
adc
xchg
arpl
push
xchg
shlb
and
sti
cwtl
xchg
push
jg
jns
cmc
outsb
fwait
shll
rclb
mov
clc
sbb
inc
aam
int
jns
add
icebp
adc
add
or
adc
xchg
jl
movsl
cwtl
stc
xor
repnz
rcl
mov
adc
push
in
adc
jle
and
xchg
into
fildl
jmp
dec
fwait
push
lret
add
sub
popf
sub
out
pop
mov
pop
nop
xchg
cld
rol
fsubl
outsl
jle
mov
jecxz
adc
seta
push
or
push
sbb
shlb
dec
roll
jp
inc
stos
lock
es
push
psrlq
leave
push
sbb
and
pop
shrb
mov
fisttpl
enter
jle
xchg
pop
dec
mov
test
cwtl
pop
and
dec
dec
iret
push
push
jns
stos
test
mov
mov
mov
jno
rcrb
js
add
xchg
lret
and
dec
ror
or
xor
dec
push
pop
adc
lcall
lea
xchg
fwait
mov
adc
push
out
aam
push
jp
pop
inc
mov
adcl
stc
mov
subl
ficoml
push
inc
aam
test
iret
aam
cmpsl
bswap
jge
xchg
add
mov
dec
fmuls
xchg
push
push
inc
xlat
xchg
lret
cltd
out
lahf
jbe
sbb
xchg
icebp
mov
or
fisubrs
dec
cmpsl
and
xchg
adc
dec
pop
mov
push
pop
xlat
sub
movsb
ret
sti
aam
movq
mov
gs
pop
dec
dec
rcll
push
leave
push
pop
sub
jnp
mov
add
inc
inc
repnz
cmp
rcll
fcoms
xchg
int3
add
nop
lcall
cmpl
dec
xchg
nop
pop
push
dec
mov
xchg
fisubl
dec
dec
cltd
mov
push
jecxz
aad
inc
xchg
aam
dec
xchg
jle
movsl
js
or
add
daa
icebp
mov
pop
je
mov
test
adc
je
mov
inc
inc
inc
fwait
arpl
adc
sahf
mov
rorb
or
aam
xchg
test
mov
push
out
es
cmpsl
push
cmp
add
push
fldcw
pop
dec
sub
adc
scas
imulb
dec
movsb
ffreep
pop
pop
cltd
cmc
loopne
arpl
xchg
fs
xchg
and
pop
loope
fs
push
arpl
push
loop
and
mov
sbb
push
add
inc
pop
std
enter
ret
add
popl
jg
push
cli
jae
in
les
rorb
test
mov
sti
xchg
inc
cmpsl
mov
mov
xlat
in
push
ja
movsl
aad
dec
adc
pop
xor
push
pushf
add
mov
loop
mov
add
xlat
iret
inc
mov
cmpb
xchg
mov
jge
dec
xchg
addl
lods
push
push
push
adc
shrl
cwtl
jnp
nop
outsb
fs
push
xchg
repz
and
ret
dec
or
jmp
jp
loope
lret
and
shl
push
add
push
dec
shl
and
inc
insl
xchg
push
xor
mov
filds
and
dec
or
push
outsl
sbb
xor
in
or
push
add
push
xlat
int3
scas
fldl
inc
sbb
adc
sahf
pop
enter
adc
dec
mov
in
push
dec
add
mov
iret
xor
push
adc
adc
stos
fs
or
and
cltd
test
or
ljmp
mov
push
or
cltd
adc
or
dec
push
mov
jge
jmp
lret
and
or
or
mov
icebp
push
nop
pop
and
bound
fwait
xor
pop
adc
sbb
lret
fnstcw
fisttpll
movsb
outsl
dec
or
int3
leave
bnd
sbb
adcb
add
adc
lea
loope
bound
mov
shlb
and
push
push
jge
or
cmp
popf
push
cli
pop
scas
outsl
xlat
mov
jae
nop
push
scas
pushf
xor
jne
dec
leave
push
sbb
stos
mov
out
stos
xchg
mov
xchg
xor
decl
imul
adc
xchg
add
xchg
push
and
or
adc
cwtl
inc
rcrl
adc
ja
fmul
outsb
out
rcrb
or
push
cltd
adc
out
or
repz
out
sbb
mov
in
push
xor
dec
fdivrs
and
xchg
push
and
and
push
mov
insl
lcall
sbb
pop
xchg
mov
popa
dec
addr16
iret
inc
in
or
mov
adc
jne
rcll
add
dec
push
cltd
nop
dec
mov
dec
xchg
or
ror
not
call
cli
push
rclb
or
jle
add
add
add
push
adc
ret
cmp
aam
mov
popl
or
insl
adc
lea
and
test
jecxz
lret
adc
pop
lret
push
mov
mov
ja
imul
out
dec
jg
jne
fcoms
xchg
pop
stos
decb
orl
push
fsts
adc
ljmp
sub
fs
dec
mov
ds
shr
cwtl
rcr
jge
adc
unpcklps
xchg
negb
cmp
nop
ret
bound
adc
fcmove
jle
pop
sarl
mov
and
sbb
cmp
push
adc
push
lret
dec
sti
jecxz
fwait
jno
mov
pop
dec
cmp
pop
push
or
enter
aam
test
fisttpl
or
pop
xchg
xchg
cltd
cmp
rol
dec
fst
adc
test
push
int3
push
pop
push
or
sti
fistl
xchg
dec
dec
shll
mov
aaa
and
mov
inc
push
mov
dec
mov
jno
push
push
movsb
push
int3
adc
xchg
test
xchg
pop
rorl
inc
lahf
ficoml
xchg
aad
xchg
ds
mov
not
adc
je
mov
pop
je
push
addl
iret
into
or
dec
lods
inc
addr16
dec
push
dec
dec
movsl
jecxz
adc
or
push
sarb
fwait
mov
or
and
dec
jle
push
lret
stos
mov
lret
out
jne
sarl
fwait
pop
jle
push
add
jle
sahf
mov
lods
pop
inc
fdivrl
jle
jo
sbb
jo
cli
das
xlat
adc
xchg
arpl
shll
pop
and
or
jo
jecxz
fsts
mov
mov
loopne
and
or
sbb
in
cmp
push
dec
dec
fwait
aad
repnz
lahf
nop
mov
aam
jo
rcrb
jge
push
pop
pop
mov
ljmp
push
in
cltd
adc
or
or
pop
pop
adc
call
in
dec
roll
dec
mov
mov
sbb
xchg
cmp
fbld
int3
mov
es
adc
push
int
cltd
lret
xor
dec
dec
sbb
inc
aam
add
push
mov
or
cltd
add
push
xchg
pop
xchg
fisttpll
mov
push
int3
movsl
xor
pop
dec
dec
insb
and
push
mov
pusha
fs
rorl
jle
clc
pop
fisttpll
sbb
or
lods
roll
cwtl
and
pop
rcr
lea
mov
pop
adc
jne
dec
or
rorl
sbb
pop
in
adc
sub
aad
iret
cmc
or
jle
ljmp
lcall
xor
dec
daa
inc
mov
movsb
cltd
xchg
adc
dec
adc
sbb
movsl
mov
xchg
std
repz
mov
xchg
jbe
pop
push
sahf
scas
insb
lods
xchg
xchg
lret
dec
leave
mov
sub
cltd
push
gs
iret
or
enter
xchg
push
pop
mov
inc
jecxz
dec
test
orb
cs
push
push
loope
dec
jne
or
cltd
xchg
xor
iret
sar
mov
xor
xor
xlat
pop
lock
add
pop
enter
flds
rclb
push
jb
inc
adc
test
cmp
or
jns
push
movsb
adc
push
lret
loop
pcmpgtw
nop
xchg
push
sahf
push
mov
iret
dec
js
push
test
leave
test
decb
inc
outsb
push
xchg
lods
ds
push
insl
pop
pop
dec
mov
sbb
push
xchg
js
xlat
mov
push
mov
ret
adc
out
sahf
mov
leave
push
ss
or
xor
and
popf
xlat
dec
cwtl
mov
ljmp
adc
int
sub
push
loop
or
movsb
cmp
je
test
xchg
xchg
add
enter
dec
jp
xchg
jno
fsts
fnstcw
dec
jecxz
sbb
push
cltd
xchg
enter
cwtl
mov
jmp
pop
enter
jp
or
adc
cltd
rorb
mov
decb
inc
mov
xor
mov
shl
inc
xchg
xchg
shrb
sbb
jnp
lods
sub
adc
xchg
adc
xlat
lret
adc
lret
add
push
add
mov
cltd
push
dec
mov
jl
mov
pop
mov
fsts
repz
insl
or
dec
add
dec
inc
xchg
push
adc
nop
enter
pushf
fsubs
pop
and
iret
ficoml
xchg
jbe
push
mov
repnz
mov
cwtl
xchg
or
xchg
dec
pop
and
push
xchg
pop
mov
mov
rcr
pop
js
pop
sbb
mov
or
mov
dec
push
shlb
aad
ja
adc
out
xlat
or
dec
inc
add
pop
addr16
scas
ljmp
jmp
cmp
sub
or
shl
cwtl
shll
gs
fcom
rcll
push
pop
nop
xlat
pop
lcall
lods
mov
xchg
xchg
mov
dec
nop
ja
sbb
jp
xchg
and
push
pop
les
enter
xchg
dec
push
xchg
iret
xchg
orl
lcall
in
push
test
sub
pop
xchg
sub
loopne
pop
aam
mov
iret
dec
push
gs
xchg
xchg
rcrl
inc
pop
adc
jnp
pop
pop
mov
push
dec
iret
adc
dec
mov
enter
lds
cltd
mov
inc
dec
xchg
push
in
fimuls
outsl
mov
inc
inc
inc
loope
sbb
push
push
lret
push
xchg
push
fidivl
rcll
in
loopne
sub
adc
arpl
dec
dec
xchg
and
pop
mov
js
or
and
pop
in
pop
mov
dec
xchg
enter
fists
mov
clc
in
rolb
and
or
inc
fisttpl
xchg
sub
leave
dec
rorl
push
push
fisubrs
fs
insl
scas
cltd
loopne
iret
xchg
pop
stc
decl
loopne
xlat
mov
inc
lret
mov
jmp
xchg
leave
dec
lcall
and
sub
scas
mov
loope
iret
xor
push
and
mov
subb
push
dec
roll
in
adc
adc
jnp
and
sti
loop
lret
and
sbb
xchg
or
xchg
mov
add
aam
xchg
xchg
dec
pushf
dec
adc
and
or
aam
pusha
push
scas
jle
in
xchg
shlb
mov
pop
fcoml
in
call
iret
int3
dec
roll
stos
gs
pop
dec
nop
xchg
jns
jmp
mov
jbe
cld
xchg
sub
jle
adc
jns
inc
push
pushfw
push
push
xchg
fwait
pop
mov
bound
jge
shrb
adc
xchg
dec
filds
pop
shl
cmp
mov
mov
idivl
sbb
dec
pop
xchg
or
sub
xorb
adc
rorl
cltd
or
mov
jbe
or
mov
adc
rorb
shld
int
mov
inc
push
xchg
std
or
adc
mov
add
push
fstl
sub
adc
mov
sahf
roll
jbe
inc
mov
fcoms
pop
adc
dec
in
dec
or
pop
jle
xchg
data16
sub
jmp
or
aad
push
mov
dec
int
xchg
and
loop
push
pop
push
lcall
lcall
adc
iret
aam
sub
pop
aad
inc
push
mov
xor
adc
xchg
dec
out
mov
in
dec
push
adc
mov
in
sub
leave
push
pop
pusha
and
sbb
fsubs
int3
xchg
push
xchg
fs
or
push
xchg
in
inc
xchg
push
sarl
and
dec
adc
lea
add
push
or
call
pop
dec
dec
mov
push
ja
xlat
dec
cli
icebp
aam
or
jnp
mov
mov
fimull
xchg
ret
or
lock
ficoml
out
xchg
dec
fmul
dec
dec
cmpsl
jg
nop
adc
mov
iret
imul
jno
in
int3
mov
aam
or
mov
or
add
fsts
inc
push
loop
jo
loopne
loopne
mov
push
pop
and
mov
rorb
pop
int3
iret
dec
pop
and
inc
mov
aam
inc
xor
adc
enter
sahf
push
fwait
or
push
push
inc
shr
into
add
push
dec
sub
or
xorl
sbb
dec
inc
mov
inc
pop
jns
mov
dec
and
pop
pop
xchg
push
mov
std
mov
cmp
or
xor
js
dec
jl
or
lods
out
pop
xor
mov
sub
push
push
fcmovnu
or
mov
sti
lahf
pop
or
aam
dec
pop
ficoml
mov
jg
cwtl
stos
sbb
enter
xchg
mov
and
dec
xchg
xchg
cmc
adc
ja
icebp
dec
iret
ljmp
sbb
daa
movsb
xchg
jle
movsb
mov
lret
push
push
mov
xor
xchg
mov
cltd
fcmovnu
push
mov
subl
in
pop
dec
test
leave
or
xchg
dec
mov
mov
jns
xchg
fcmove
mov
adc
fwait
adc
pop
cmp
nop
mov
imul
loopne
push
pop
pop
inc
and
xchg
ja
sbb
dec
mov
mov
push
rcr
je
mov
imul
dec
mov
push
mov
pop
push
not
nop
push
xchg
or
lret
jmp
push
or
test
adc
rorl
sbb
xchg
jg
adc
repnz
dec
out
push
loope
rorl
lds
mov
sbb
push
xchg
leave
aam
xchg
sti
sti
and
adc
nop
push
and
pop
fadds
inc
rorl
mov
jle
inc
and
repnz
push
mov
or
mov
out
mov
ss
cmc
les
int
test
stos
les
xchg
ds
hlt
adc
adc
xchg
out
jg
sbb
xlat
aam
xchg
test
push
xchg
int3
adcl
cltd
or
leave
or
adc
mov
fiadds
mov
sbb
dec
and
inc
push
arpl
or
adc
rcll
jmp
out
push
pop
test
mov
fisttps
and
dec
js
insb
loopne
jecxz
push
xchg
das
in
cld
in
push
adc
inc
jns
mov
push
in
inc
fnstenv
dec
inc
shr
pop
dec
jns
dec
push
xchg
sub
cltd
xchg
dec
sbb
inc
mov
mov
xchg
mov
jle
dec
push
mov
adc
rorb
in
int
jmp
pop
or
push
aad
mov
imul
or
pop
rorl
xor
ds
adc
aad
jno
leave
stos
sarl
sbb
jns
enter
jp
aam
jecxz
pop
rol
cmpb
or
mov
push
sub
loop
xlat
dec
xchg
and
fwait
sbb
enter
or
paddw
dec
dec
dec
or
adc
loopne
iret
enter
dec
adc
lcall
cltd
fmul
negb
lds
int3
hlt
sub
int3
xchg
xchg
into
ja
push
pop
in
and
and
dec
dec
and
fdivrp
out
or
inc
push
jns
mov
popf
mov
xlat
arpl
add
in
push
clc
xchg
cmp
jo
xchg
add
mov
mov
shll
lret
xchg
push
fdivr
aam
inc
test
xor
test
call
inc
out
ja
sbb
dec
pop
pop
loope
fidivl
push
dec
cwtl
xchg
sub
shrl
rorl
push
xchg
das
dec
adc
inc
lret
lret
ret
cli
cltd
inc
jnp
jg
sub
mov
rcll
inc
call
xchg
lret
jbe
lret
xchg
pop
mov
jo
aaa
call
clc
popa
mov
jb
fwait
test
xchg
rcrb
fstp
dec
notb
cltd
mov
mov
fisubl
push
push
dec
or
iret
mov
xchg
xor
push
leave
movsb
or
xor
stos
in
adc
dec
push
add
jne
dec
sarb
adc
setp
stc
fs
mov
mov
fstp
out
or
xor
loop
mov
clc
push
inc
xchg
push
shrl
popf
xor
dec
jecxz
fcmove
cwtl
xchg
dec
enter
jecxz
lret
iret
mov
cltd
xor
jg
jecxz
rclb
xchg
push
cmp
jno
int3
aam
cs
adc
jbe
push
jle
adc
pop
push
in
mov
mov
mov
xchg
int3
push
inc
pop
add
lret
xchg
push
or
xlat
dec
iret
push
sbb
jb
inc
push
jg
jg
cld
stc
test
cwtl
lret
int3
mov
aam
jns
push
push
lret
add
adc
js
jle
out
mov
dec
cwtl
outsb
dec
push
pop
adc
lods
les
add
nop
or
fwait
dec
inc
cmp
mov
pop
push
sahf
or
pop
pop
in
arpl
lret
jecxz
leave
fistl
push
test
dec
add
adc
rorb
push
xchg
mov
or
sarl
cmp
cwtl
in
cmp
cmpsl
das
mov
push
test
dec
mov
mul
xchg
lret
pop
or
adc
xchg
into
loope
inc
rolb
movhps
mov
iret
push
push
mov
cli
in
imul
jne
shlb
push
outsl
and
or
fadds
les
inc
les
jmp
mov
dec
hlt
and
jo
mov
fnstenv
andl
dec
dec
hlt
sbb
int3
iret
xlat
arpl
es
push
push
push
xchg
ja
xchg
sub
sbb
mov
jne
pop
pop
or
or
mov
adcl
inc
out
adc
or
mov
and
sarb
jo
fsts
pop
scas
repz
pop
adc
rclb
mov
mov
or
js
addr16
xor
jns
push
jmp
adc
pop
or
add
sti
mov
cmp
xchg
ja
clc
push
sub
xchg
lds
and
adc
jmp
mov
pop
push
push
jle
jmp
repnz
or
cltd
xchg
rcl
mov
adc
inc
popf
call
cltd
xchg
cmp
push
cmpl
dec
wbinvd
loop
push
outsb
sbb
cmp
pop
and
ljmp
mov
adc
rcll
or
inc
push
push
xorl
lea
or
mov
fnstenv
push
mov
imul
mov
lcall
adc
stos
sub
or
ljmp
push
adc
iret
loope
lods
or
pop
mov
mov
or
mov
mov
rcl
cltd
in
mov
inc
lret
fs
rep
sbb
ret
adc
fstl
push
xchg
push
movsl
shrb
add
push
adcl
mul
dec
push
xchg
jg
dec
shrl
lcall
or
aam
into
lret
and
leave
enter
xchg
adc
lret
mov
inc
pop
xlat
push
dec
sahf
out
mov
mulb
xchg
rcrl
dec
dec
lret
enter
lret
hlt
push
dec
or
adc
sub
push
mov
rorl
add
adc
push
and
rorl
xlat
in
out
dec
iret
jns
loopne
fadds
mov
jo
xchg
fldl
cltd
add
xchg
loope
xchg
adc
loopne
push
inc
ljmp
fistpl
or
dec
jbe
sbb
adc
mov
dec
pop
mov
add
pop
mov
cmp
add
pop
dec
mov
cmpsb
ja
sbb
push
dec
daa
fs
xchg
arpl
cwtl
arpl
cmpsb
fmuls
or
aad
push
rorb
sub
dec
lods
gs
push
push
xchg
test
addr16
dec
push
push
dec
sti
rcrb
push
nop
mov
mov
int3
adc
pop
movb
xchg
lahf
aas
push
xchg
dec
arpl
cltd
mov
pop
in
mov
dec
dec
ss
and
mov
xchg
mov
addps
jns
adc
mov
push
andl
adc
xchg
push
and
lret
aad
loop
aam
inc
push
or
loope
or
int3
adc
jl
je
lods
inc
xchg
gs
xchg
xchg
xchg
push
lea
hlt
and
mov
mov
cmp
rcrb
mov
hlt
push
dec
in
in
int3
push
xchg
daa
pop
add
shrl
and
mov
cmp
dec
imul
or
iret
mov
inc
push
sub
fwait
sbb
and
adc
or
dec
lcall
orb
push
loop
in
sbb
xchg
add
and
xchg
push
push
dec
xchg
sbb
xor
test
pop
in
pop
push
out
sbb
push
pop
and
adc
xchg
test
pop
fistps
dec
cli
bound
in
xchg
and
fcmovu
or
ds
mov
push
and
pop
xchg
push
ret
ret
jl
aas
arpl
inc
mov
or
imul
ss
test
mov
test
int3
fsubr
mov
dec
or
xchg
or
mov
loope
dec
jbe
daa
jo
mov
js
fildl
or
popf
es
xchg
xchg
xchg
fcmovb
jg
stos
lock
inc
pusha
arpl
dec
xchg
push
pmuludq
clc
test
fmul
mov
xchg
aam
xchg
testb
mov
dec
add
test
aam
loope
push
xchg
cltd
ret
or
dec
xchg
ret
xor
orl
push
dec
or
mov
enter
mov
out
movsb
xchg
push
dec
jge
inc
daa
pop
in
fldcw
push
roll
or
push
mov
xchg
pop
inc
addr16
or
dec
fsubrs
mov
pop
xchg
addr16
mov
adc
mov
fmul
push
or
pop
jo
jno
out
or
test
je
scas
and
mov
pop
or
mov
popf
and
adc
lods
insb
inc
and
pop
imul
xchg
mov
dec
pop
push
jmp
mov
add
push
fiaddl
push
fsubs
in
mov
cmp
je
jne
xchg
fsts
inc
lret
dec
fistl
lods
paddusw
xchg
adc
push
pop
push
adc
sbb
popf
mov
test
adc
int3
pop
xchg
out
xchg
jle
pop
lods
xchg
mov
das
and
cmp
or
mov
data16
shlb
jae
push
cmp
cltd
jb
fwait
adc
xor
dec
dec
lock
mov
ficoml
pushf
xchg
sarl
push
icebp
or
pop
rcrl
xchg
and
pop
nop
push
mov
fstps
leave
jne
dec
nop
int
imul
push
dec
lret
push
sbb
dec
icebp
les
pop
or
cli
add
jno
es
dec
cld
jl
mov
ja
cmp
mov
pop
nop
fs
dec
xchg
mov
out
icebp
cmpsb
cltd
jno
push
fs
pop
cltd
adc
sub
stos
rcll
dec
dec
addl
fstl
dec
push
xlat
and
jge
nop
int3
or
aad
adc
imul
pushf
push
enter
adc
rcll
int3
lcall
dec
or
push
pop
jo
push
out
sarb
in
rclb
pop
fidivrl
andps
push
sub
inc
sub
adc
test
push
test
xlat
seto
out
jecxz
or
pop
rorb
insl
leave
sub
stos
movsl
push
xor
outsl
pop
loope
xchg
add
pop
cmp
pop
dec
dec
adc
inc
mov
notb
je
xor
mov
xor
inc
cmc
stos
xchg
in
sub
cmp
fsubrs
mov
enter
push
rorl
cmp
lods
xor
adc
cwtl
arpl
mov
jecxz
mov
sarb
insb
xchg
dec
out
dec
add
cmpsl
orl
scas
push
ret
add
push
pop
xchg
loop
cltd
push
adc
push
mov
mov
push
cmp
cltd
mov
mov
in
adc
lret
xchg
sub
or
mov
lds
stos
pop
xlat
mov
push
xchg
push
mov
dec
mov
pop
push
jg
jg
pop
cwtl
push
imul
iret
fdivs
int3
cmp
adc
sbb
push
push
inc
rolb
sub
adc
and
paddq
and
jno
out
lds
lret
cltd
jp
push
cmpsb
mov
add
neg
lret
ja
sub
cmp
add
aam
repnz
add
push
orb
fimull
dec
sub
sub
cmp
or
mov
leave
fimull
adc
push
out
shl
fs
push
cwtl
je
imul
rorb
mov
sub
mov
ljmp
push
mov
xor
xor
sub
xor
and
pop
je
add
outsb
in
ja
mov
pop
or
sbb
mov
cltd
and
loopne
adc
mov
shll
push
inc
cwtl
mov
outsl
push
adc
sub
jmp
outsb
hlt
push
dec
mov
pop
mov
lea
cmpb
fadd
ds
jge
cltd
data16
push
push
mov
dec
les
jne
xchg
xchg
dec
dec
rcll
xchg
lock
dec
out
cmc
pop
fdivrs
mov
xor
xchg
insl
adc
dec
cmp
mov
movsb
sub
xor
xchg
out
xchg
loop
leave
xchg
xchg
out
test
cwtl
mov
leave
nop
adc
push
sbb
fimull
or
dec
adc
dec
orb
iret
sbb
mov
cmp
xchg
or
addr16
jns
sub
shld
dec
imul
or
sub
push
ret
stc
xchg
xchg
fimull
push
jp
sbb
dec
dec
jg
ror
jmp
fmuls
xchg
adc
cwtl
mov
lods
dec
rcrl
push
or
mov
lds
cmp
nop
scas
adc
mov
roll
stos
mov
push
inc
dec
leave
mov
iret
cwtl
or
aam
fucom
adc
pop
jp
sbb
jge
push
cltd
sbb
xor
fldcw
push
ror
dec
xchg
cmpsl
adc
xchg
mov
bound
dec
jb
movsb
jle
dec
adc
scas
and
out
movsb
adc
dec
mov
sti
push
xlat
push
xchg
mov
push
push
adc
push
pop
adc
pushf
dec
push
fistpl
dec
adc
loop
or
mov
clc
out
hlt
push
mov
inc
mov
iret
mov
mov
sbb
xchg
push
adc
out
cwtl
cwtl
mov
in
loope
xchg
mov
dec
mov
cmc
hlt
fld
push
jne
push
xchg
dec
dec
mov
or
and
or
bound
xchg
jns
in
or
pop
sbb
adc
int3
jns
lcall
jecxz
adc
add
lock
iret
lret
mov
mov
dec
dec
add
jle
mov
lahf
and
push
adc
add
adc
add
inc
push
ljmp
adc
and
push
mov
loop
push
inc
jbe
push
or
cmp
dec
cltd
adc
mov
or
movsl
xchg
xchg
inc
dec
adcl
out
cld
sbb
pop
aam
nop
sub
sub
xlat
mov
mov
and
repz
mov
rcrl
pmulhw
fsts
and
mov
jle
xchg
rorb
and
mov
nop
pop
sub
rcrl
addr16
jg
cld
out
inc
scas
or
dec
cltd
push
adc
adc
xchg
loop
shrb
inc
dec
adc
lret
adc
xlat
push
lods
dec
aad
push
ljmp
or
mov
mov
and
adc
push
adc
inc
fldcw
pop
xchg
fcomps
ficoml
push
jns
push
or
lea
and
push
push
or
xchg
scas
movsb
or
hlt
push
hlt
ljmp
andb
cmp
cwtl
dec
lea
cmc
xor
xlat
xchg
pop
ss
mov
rolb
pop
leave
shll
pop
int3
add
mov
test
mov
or
dec
push
and
xchg
jge,pn
fimull
adc
fwait
pop
and
leave
fadd
loop
iret
xchg
loopne
pop
xor
jle
hlt
scas
cmp
pop
cwtl
mov
add
test
mov
pop
push
mov
arpl
push
popl
aad
fstl
push
pop
test
imul
roll
call
dec
inc
and
xchg
fs
xor
ret
mov
inc
xchg
jp
test
loopne
or
fisubrl
inc
push
xchg
or
dec
dec
xchg
sub
sbb
mov
cmc
mov
clc
aaa
cld
dec
or
loope
sbb
and
fs
push
mov
push
adc
or
ljmp
jecxz
rcrb
adc
add
inc
push
movsl
addb
mov
and
dec
in
pop
adc
add
clc
lahf
sbb
int3
enter
push
pandn
loop
lret
fs
ud0
xchg
cmpsb
neg
pop
inc
repnz
imul
scas
push
adc
ja
fs
or
push
mov
fisttpll
leave
adc
outsb
lcall
mov
xchg
in
jg
gs
mov
lret
sarl
lret
cwtl
jle
push
jne
dec
rclb
sbb
inc
ret
and
lret
popf
dec
popf
aas
fidivl
pop
int3
mov
cmp
mov
sub
push
rorl
cmpsl
inc
dec
ret
jecxz
dec
mov
cld
fcmove
rolb
adc
push
dec
xchg
lods
iret
test
rcrb
dec
push
repz
mov
adc
dec
pop
adc
call
mov
rcl
push
int3
adc
push
pop
adc
cwtl
inc
pop
add
rorb
jl,pn
xlat
stos
test
xchg
nop
pop
in
mov
rolb
mov
shll
xchg
push
mov
rcl
dec
mov
xchg
adc
int3
out
sarl
lock
rorb
loopne
xor
xor
test
jmp
stos
lret
adc
xchg
or
adc
orl
push
ljmp
call
nop
pop
mov
dec
inc
enter
int3
xchg
fisubl
sbb
loop
rcrl
jge
push
sbb
pop
call
dec
dec
fcoms
mov
or
adc
pop
xchg
sarb
mov
xchg
push
cmp
pop
adc
xchg
adc
mov
dec
in
xor
or
push
mov
outsb
scas
sbb
adc
test
scas
jne
in
sbb
ds
mov
or
nop
adc
jge
div
xchg
out
in
pop
push
or
cltd
push
mov
addr16
xchg
inc
std
and
inc
iret
imul
cwtl
push
add
and
inc
adc
pop
push
push
cltd
mov
jns
push
dec
xchg
and
adc
xchg
lods
aam
or
dec
adc
pop
xchg
mov
fcomps
adc
push
movsl
lock
ljmp
adc
inc
js
aam
or
pop
pop
xlat
loop
push
xchg
dec
std
mov
imul
push
jae
fstl
jp
sahf
adc
enter
xor
pop
in
xchg
push
cmp
push
or
push
adc
sti
pop
push
push
int3
int
call
enter
jecxz
mov
in
gs
mov
xchg
push
jnp
push
sarb
xorl
rorl
aam
dec
push
iret
pop
xor
roll
cltd
xchg
stos
sub
xchg
xchg
cmp
shlb
xchg
lret
in
xor
nop
ja
call
fisttpll
mov
fwait
pop
push
mov
loopne
jecxz
mov
cmp
mov
and
pop
xchg
dec
insb
pop
push
ljmp
push
pop
or
cwtl
hlt
push
lret
dec
adc
sbb
xor
mov
inc
stc
xchg
enter
dec
sub
and
inc
adc
das
inc
mov
jle
push
test
movb
adc
mov
lcall
adc
jbe
mov
bound
iret
lods
adc
mov
or
push
popf
nop
mov
leave
mov
ficoms
or
popa
and
sbb
add
xchg
xchg
les
fwait
adc
sub
dec
fcomps
mov
adc
shrl
pop
dec
cltd
ret
es
mov
xor
and
xlat
or
scas
inc
in
and
nop
rcrl
pop
xchg
ret
xor
gs
fsts
xchg
xchg
dec
stc
ss
js
pusha
push
shrd
movsl
push
and
adc
xor
loop
lret
popf
dec
dec
dec
push
adc
jns
or
mov
loopne
ffree
cmp
lahf
jnp
jg
in
mov
test
jmp
adcl
leave
or
xchg
mov
jle
push
jnp
vpmacsswd
and
or
add
cltd
popa
ror
adc
adc
hlt
xor
testb
arpl
fnop
ret
push
dec
out
in
and
sbb
test
adc
sahf
push
xchg
inc
cmp
push
mov
lret
mov
lret
pop
pushf
adc
fstl
pop
pop
mov
xchg
inc
pop
push
out
dec
and
lret
xchg
pop
cli
cwtl
jns
xchg
push
jae
jecxz
push
push
dec
in
leave
adc
pop
push
iret
rcll
loop
or
rorb
test
mov
iret
mov
leave
pop
sbb
ror
jecxz
or
xchg
roll
pop
dec
push
std
lea
ds
movsl
pushf
push
sbb
flds
shrl
lods
sub
push
jecxz
adc
dec
mov
adcl
or
dec
ljmp
popf
lret
mov
fs
push
mov
std
xchg
pop
loopne
fsubs
dec
shr
xchg
ja
aad
mov
and
cli
dec
out
out
sbb
clc
enter
jo
jne
xlat
mov
sbb
mov
push
out
pop
dec
sub
inc
add
mov
movsl
enter
dec
mov
xchg
jge
push
jns
out
nop
sub
mul
cmp
gs
adc
adc
lods
loopne
pop
sub
fisttpl
sub
pop
push
push
jno
enter
cltd
pushf
or
and
xchg
push
rclb
dec
xor
nop
clc
push
xlat
sub
sub
in
scas
and
push
xchg
mov
loope
bswap
or
dec
jle
ljmp
cltd
or
jecxz
dec
add
adc
push
dec
and
adc
insb
sbb
mov
lods
or
jl
xchg
sbb
hlt
adc
or
mov
cltd
mov
movsb
cmpsb
dec
cmp
aam
call
fwait
int3
addr16
push
cltd
call
fwait
dec
sar
jecxz
xchg
push
insw
mov
out
aad
lret
andl
dec
sbb
xchg
dec
psrlw
adc
sbb
dec
or
jo
ds
sbb
mov
jns
adc
mov
push
imul
rcll
xchg
fnstenv
or
das
dec
cltd
into
xlat
ja
mov
adc
push
addr16
arpl
rorl
push
xchg
add
adc
or
add
int3
or
out
cli
xorps
enter
nop
fldl
mov
mov
loopne
iret
dec
loope
adc
dec
jne
pop
fimull
or
pop
dec
pop
adc
push
mov
ror
fs
or
mov
jae
aam
iret
aam
fsubrs
mov
nop
popf
push
fistps
fwait
push
mov
mov
cmova
int3
popf
rolb
xchg
sub
xlat
test
jb
xchg
or
pop
gs
rorl
or
jns
imul
arpl
dec
adc
sub
or
popl
loopne
pop
jbe
xor
xchg
rcr
ffreep
cltd
and
dec
rorb
cli
push
mov
imul
sbb
jbe
sbb
dec
jp
sbb
fsts
or
sbb
icebp
dec
xlat
iret
xor
add
pop
subb
popl
nop
push
xchg
int3
xchg
scas
inc
or
in
push
adc
xchg
ljmp
mov
pop
movsl
jbe
or
push
inc
aam
insl
push
dec
mov
lods
cltd
mov
iret
loope
pop
call
popf
adcl
mov
rol
sbb
adc
jle
lret
pcmpgtb
fidivl
ror
pushf
pop
mov
push
and
push
lea
loopne
pop
cmc
and
arpl
xchg
out
scas
test
lods
or
push
ja
pop
push
xchg
mov
out
mov
jle
or
and
inc
xchg
enter
jle
imul
xchg
xchg
pop
or
push
mov
cld
cmpsb
xchg
adc
xor
je
add
cltd
dec
cmp
fisttpll
jo
or
sbb
inc
sbb
or
mov
fdivs
psrlw
or
adc
dec
push
mov
push
dec
dec
cs
adc
push
xchg
push
in
cwtl
add
pop
pop
or
scas
ficompl
pop
rcll
xchg
test
fcmovb
in
push
data16
jmpw
push
shrl
es
daa
out
jle
data16
dec
xchg
push
lea
aaa
fs
cwtl
hlt
pop
shld
or
cmpb
dec
mov
pop
fwait
lods
mov
pop
dec
adc
xchg
lea
lahf
hlt
dec
sarb
addr16
lret
lods
imul
aam
dec
mov
loopne
or
or
xchg
aad
push
xchg
pop
fwait
pop
in
xchg
call
add
rclb
std
push
jle
rorb
test
sbb
jbe
pop
push
xchg
stos
xchg
je
stos
popf
rcll
bound
push
jmp
pop
dec
movsb
or
xlat
xchg
adc
jns
inc
xor
push
mov
mov
jp
inc
out
xchg
push
test
xorps
push
cltd
jno
or
pop
cld
mov
xchg
push
hlt
dec
addl
xchg
arpl
lret
enter
jno
out
or
jbe
jmp
arpl
xchg
mov
mov
pop
or
insl
pop
lret
jne
xchg
push
mov
nop
and
push
xor
pop
sti
xchg
mov
jns
xlat
dec
cltd
stos
xor
xor
loop
or
pop
imul
inc
dec
jb
push
xor
push
lea
enter
and
clts
sub
addr16
xchg
mov
adc
cltd
movsb
cmc
push
cwtl
mov
call
lahf
xchg
mov
push
sub
rolb
adc
in
pop
lea
push
jo
fwait
inc
outsl
jecxz
inc
xor
and
and
mov
roll
or
int
aad
ret
push
inc
fldenv
cmp
aam
or
imul
push
or
pop
mov
inc
jmp
rcl
int3
jnp
flds
jecxz
push
inc
xor
dec
cmpsb
stos
xchg
cmp
loop
pop
jne
sbb
mov
ror
xchg
mov
xchg
adc
sub
inc
mov
ret
cs
push
add
push
mov
in
hlt
scas
lods
or
push
hlt
mov
inc
or
repz
cmp
xor
inc
lds
hlt
ds
xlat
out
or
ja
sbb
inc
mov
push
adc
mov
into
repnz
add
sarl
add
mov
adc
xchg
xor
js
xor
xchg
pop
xchg
xchg
test
push
leave
pop
xchg
or
imul
dec
pop
loopne
loop
cltd
push
cmc
or
pop
fwait
xlat
push
icebp
xchg
dec
aad
pop
sbb
push
add
or
nop
test
xchg
jbe
xchg
or
paddq
jle
fsts
mov
fcoms
rcrb
mov
inc
pop
nop
cltd
rcll
cwtl
les
jecxz
adc
das
les
add
fsub
xchg
or
gs
sbb
ljmp
jo
push
fadds
cmp
arpl
adc
dec
movsl
jmp
add
mov
dec
sub
dec
mov
fisttpl
and
stos
pop
enter
int
sub
inc
cltd
xchg
push
ret
ret
or
mov
fnstenv
adc
pop
pop
stos
in
scas
fstl
rcl
adc
add
jge
mov
lret
mov
cltd
push
push
mov
mov
inc
adc
pop
add
mov
adc
mov
ja
ret
arpl
pusha
dec
ljmp
dec
lahf
nop
push
push
in
pop
sbb
xchg
rclb
inc
xchg
in
xchg
out
imul
sub
loopne
addr16
fwait
enter
hlt
mov
push
add
or
lea
push
xchg
psubsw
and
pop
ja
lret
dec
outsb
and
xchg
dec
or
or
or
mov
jnp
jge
fcoms
loop
loope
rorl
scas
je
test
je
xor
ss
insb
test
stc
mov
popf
loope
mov
mov
jle
jg
pop
push
lret
xchg
gs
cltd
cwtl
pop
pop
sbb
repz
leave
popf
cld
lret
or
mov
dec
mov
inc
dec
xlat
jmp
sahf
nop
mov
sub
mov
lds
int3
push
int
aaa
bound
sub
push
dec
mov
dec
iret
lea
cmp
ja
jmp
cmp
ret
add
imul
test
sti
jle
test
adc
call
jle
xchg
shll
push
xlat
test
push
adc
add
push
pop
push
lds
mov
call
pop
rclb
and
fwait
xchg
rcrb
push
mov
adcl
cltd
jns
enter
adc
xchg
ds
leave
xchg
hlt
outsl
ret
cmpsl
lcall
lret
xlat
in
fcmovbe
loopne
daa
sub
mov
xorl
lahf
adc
dec
shlb
jg
out
pop
push
dec
push
nop
js
mov
xchg
dec
ret
fcmovne
movsl
adc
cltd
nop
xchg
xlat
sub
nop
pop
pop
loop
mov
fwait
cmp
imul
push
testl
negl
or
and
hlt
xchg
idivl
cmc
out
push
push
loopne
and
cwtl
fcmovu
sbb
icebp
hlt
out
dec
lret
jno
out
xchg
int3
pop
xchg
push
rorl
cmp
shlb
xlat
push
cltd
cmp
xchg
jp
addr16
mov
sub
pop
add
xor
jb
mov
sbb
cmp
mov
out
jle
sbb
pop
ficoml
bound
cwtl
push
push
cmpsl
adc
cltd
imul
jle
jnp
adc
jnp
sti
inc
pop
jle
jnp
sti
out
jle
push
pop
sti
push
sar
sub
jle
nop
mov
adc
and
push
push
dec
lret
adc
ds
or
jne
shrl
lahf
adc
pop
fs
xchg
pop
loop
pusha
addr16
jle
hlt
cmp
movsl
mov
dec
sbb
jmp
pop
adc
pop
or
lret
cltd
mov
iret
pop
mov
push
dec
ja
daa
add
pop
test
xor
jnp
pop
popl
nop
mov
pop
orl
adc
vmread
pop
fdivrs
rclb
cmpsl
cmpsb
jo
inc
mov
shr
xchg
lock
inc
in
mov
ficoml
mov
or
in
adc
cltd
hlt
adc
fistl
fcoms
push
push
push
add
xchg
in
or
adc
daa
rclb
push
test
dec
mov
mov
pop
xchg
ficoml
cwtl
and
rcrb
in
pop
or
lret
dec
push
lret
cwtl
pushf
sbb
int
cmovb
or
fistl
mov
inc
or
ja
lea
sbb
adc
cmpsb
or
aam
bound
push
rcr
xchg
pop
push
push
lret
sahf
push
setno
loope
push
pop
bound
mov
push
int3
aam
test
or
lret
jo
push
sub
jge
adc
dec
rcll
icebp
push
push
cmpsl
or
pop
or
gs
pop
adc
and
xchg
fistps
push
push
aam
std
adc
addr16
pop
lret
mov
iret
imul
lret
or
cltd
push
cwtl
scas
and
and
or
arpl
xlat
fs
stos
test
aam
rorb
fsts
sub
mov
push
pop
test
push
adc
adc
test
cwtl
rorl
xchg
push
ljmp
push
je
adc
inc
dec
aam
popa
push
mov
inc
leave
xchg
leave
or
nop
or
pushf
ficomps
xchg
mov
subl
mov
push
push
dec
fmuls
testb
stos
test
je
pop
add
adc
xlat
mov
mov
rorb
outsb
adc
cld
xor
rorb
or
popf
dec
dec
dec
rclb
pop
push
sbb
stos
jne
rsqrtps
dec
rorb
nop
ror
xor
scas
popf
mov
inc
nop
add
mov
gs
push
enter
inc
push
jg
imul
dec
cs
or
gs
push
xchg
xchg
ficomps
add
mov
adc
mov
pop
lahf
xlat
shr
mov
xchg
insl
sbb
insl
test
rclb
sbb
aam
pop
imul
fists
lret
addr16
fisttpll
dec
filds
mov
rorb
jns
push
loop
dec
cwtl
mov
or
or
pop
sahf
push
or
insb
sbb
xchg
cmpsb
dec
add
iret
or
data16
rcll
add
xchg
sub
push
push
sbb
lret
leave
push
adc
loopne
push
and
ljmp
lods
adc
enter
and
sbb
mov
inc
mov
dec
les
or
jge,pt
mov
sub
cmp
enter
imul
jmp
lret
fs
mov
cmpsl
arpl
sbb
and
xchg
inc
adc
fcmovb
and
or
pop
mov
dec
and
rorb
fmul
xor
cmp
adc
aad
add
aam
cmpl
add
pop
dec
or
adc
sub
popf
dec
leave
and
dec
mov
push
jl
inc
xchg
or
or
shrl
pop
outsl
cmp
mov
mov
mov
push
int3
push
dec
push
xchg
out
scas
int3
fistpll
sub
mov
rorl
push
dec
imul
stos
or
sbb
push
xchg
dec
out
push
push
xchg
push
add
dec
sub
add
enter
dec
ror
cmp
jae
dec
dec
or
mov
insl
nop
pop
push
sbb
cmpsl
jae
cltd
ds
push
jge
push
push
xchg
fimull
xchg
push
leave
push
dec
dec
cmp
dec
mov
pop
mov
xchg
or
xchg
aam
fmuls
scas
cmp
push
pop
pushf
push
push
lahf
aam
pop
enter
fxch
xor
cmp
dec
incl
dec
push
lea
lods
fs
movl
push
jge
push
inc
push
nop
nop
sbb
pushf
dec
adc
push
movsb
xchg
push
mov
inc
jnp
cwtl
adc
imul
adc
mov
mov
loope
loopne
push
or
ret
cwtl
mov
xchg
mov
jle
adc
addb
pushf
adc
movsl
lea
or
std
and
rcll
nop
xchg
mov
rorb
pop
push
and
push
jmp
aam
test
mov
int3
jg
shl
pop
xchg
enter
sbb
dec
adc
push
shll
ret
push
or
xchg
jo
gs
push
mov
arpl
fstps
outsl
rclb
into
dec
jnp
fwait
adc
push
mov
or
xchg
adc
mov
add
int3
leave
iret
fcoms
push
cmp
mov
ret
divl
out
enter
fsts
mov
movsl
loopne
in
xchg
dec
push
hlt
dec
aam
shl
addr16
adc
pop
ror
pop
mov
sbb
push
dec
pop
in
dec
dec
js
jle
jno
iret
and
pop
adc
in
add
jge
dec
mov
fimull
or
loop
sbb
inc
adc
push
push
xor
jl
jmp
adc
adc
and
setno
jle
fstpt
jg
pop
lret
mov
dec
je
leave
push
sti
loopne
dec
and
lret
push
xchg
insb
imul
push
in
or
push
dec
pusha
push
cmp
push
arpl
in
xchg
push
hlt
push
sbb
dec
adc
dec
xchg
iret
adc
mov
adc
push
test
lods
fisttps
and
and
xor
sub
dec
dec
mov
inc
inc
push
aad
and
jle
fwait
cmpl
adc
icebp
push
push
mov
lret
mov
aam
or
les
xchg
cwtl
dec
mov
test
flds
shlb
jbe
jb
fimull
adc
mov
sbb
icebp
ljmp
xchg
cmp
and
dec
std
or
adc
adc
adc
arpl
in
shlb
xlat
clc
pop
ficoms
push
cwtl
sbb
lret
push
push
fdivrs
lret
jnp
sub
dec
xor
xlat
dec
test
and
jge
cwtl
stos
outsl
pop
or
fistl
xchg
in
ja
insb
dec
outsb
adc
lds
fsts
aas
adc
sbb
adc
inc
pushf
fcomps
jne
mov
lret
cmp
addr16
adc
pop
xchg
lret
andb
enter
xchg
iret
and
jle
jbe
shrb
dec
push
dec
xor
or
and
leave
jge
aam
lahf
addr16
loopne
dec
inc
addr16
xchg
cltd
inc
mov
fstl
loop
push
inc
xchg
push
push
jle
loop
mov
fcmovne
leave
dec
fs
sub
xor
fildll
pop
ds
or
push
push
add
push
pop
xchg
adc
loopne
inc
ja
subl
lret
mov
or
sarb
jo
daa
push
leave
inc
aas
pop
adc
mov
dec
rcrb
pop
shl
and
or
pop
aam
push
push
jge
iret
push
sbb
das
pop
repz
out
vpmacssdqh
dec
adc
lahf
or
sbb
lds
cmp
jo
mov
and
jb
push
insl
pop
nop
into
xchg
les
xlat
icebp
mov
fcomps
loope
xchg
sbb
mov
dec
adc
mov
cwtl
push
imul
outsl
rcll
iret
test
sahf
add
pop
mov
xchg
pop
or
sbb
dec
cltd
imul
mov
dec
movsb
mov
xor
add
in
mov
clc
nop
or
out
mov
push
fucomi
dec
push
jp
pusha
sti
fcmovnu
xchg
idivb
sbb
cmc
add
mov
xchg
loope
dec
push
push
adc
inc
dec
test
or
repz
xchg
sub
dec
xchg
adc
cltd
mov
sub
inc
jle
xchg
in
or
shll
push
push
aam
dec
scas
lods
mov
push
add
mov
and
pop
aam
xor
lret
adc
in
push
test
pop
orl
sbb
cltd
push
mov
mov
adc
or
aam
xor
cmpsl
push
adc
cld
push
adc
adc
and
mov
fldcw
or
cmp
sbb
or
push
mov
jnp
sub
adc
fsts
dec
pop
push
inc
mov
and
aam
or
mov
jns
push
dec
sub
pop
fsubs
mov
inc
test
or
adc
add
int3
xchg
xchg
iret
adcb
or
out
arpl
dec
push
iret
jecxz
enter
aad
or
jl
gs
mov
dec
cwtl
adc
cmc
ret
dec
adc
push
decb
pushf
pop
adc
dec
pop
mov
add
mov
int
adc
xor
push
xchg
rcrb
adc
or
leave
cld
mov
xor
xchg
pushf
push
fpatan
and
sub
insl
or
adc
dec
in
or
cli
jle
push
loop
cmc
adc
dec
arpl
in
xchg
cltd
rcll
push
adc
fcoms
cmc
test
out
jae
and
adc
or
mov
push
leave
mov
hlt
adcl
ds
push
lods
jle
or
adc
rcll
lret
pop
fmuls
pushf
push
in
fnstenv
push
push
cmp
mov
dec
out
mov
cmp
cmp
cmp
xor
xchg
cmp
push
jl
daa
lcall
or
adc
pop
xchg
movl
push
or
mov
fsubs
push
xchg
jne
xchg
lret
xchg
or
leave
push
or
mov
jle
repz
pop
cmpl
xor
lret
nop
jge
fcomps
mov
jnp
enter
iret
shl
adc
xchg
fcmovb
ror
inc
or
dec
mov
int3
leave
xchg
hlt
andnps
test
push
adc
lret
adc
hlt
fwait
insl
lcall
mov
xchg
ljmp
nop
cwtl
jne
pop
or
iret
out
push
dec
sahf
or
pop
int3
mov
mov
cli
iret
out
je
rorb
lcall
rcrl
add
or
sbb
pop
imul
dec
adc
and
leave
pop
shr
add
dec
mov
dec
clc
movsb
lret
push
je
mov
inc
mov
cwtl
xchg
in
jp
mov
mov
xor
xchg
aad
pop
xchg
iret
xchg
jp
xchg
lret
enter
dec
push
sbb
pop
loopne
adc
and
push
fsubrs
jns
or
mov
pop
jge
push
jns
in
cwtl
dec
dec
push
leave
inc
cmp
aad
sahf
adc
inc
jno
in
push
hlt
xor
mov
jns
inc
ret
or
sbb
add
sub
dec
shll
xchg
adc
push
ljmp
gs
lret
int3
xchg
or
rorl
push
cmc
in
mov
mov
sbb
mov
adc
ds
mov
clc
or
push
inc
adc
lret
pop
mov
jns
push
les
and
dec
push
dec
or
jno
and
push
adc
cli
rorb
xor
and
jbe
or
nop
or
or
in
or
sti
push
adc
or
dec
imul
dec
rcr
inc
shl
in
push
dec
in
fldenv
inc
stos
adc
xadd
or
test
ja
rcll
pop
jmp
fs
mov
js
ror
shl
mov
dec
fidivrl
push
xchg
mov
mov
imul
leave
sti
pop
and
lods
xchg
dec
hlt
mov
inc
int3
dec
ds
dec
xchg
int
pop
cmp
repnz
or
inc
mov
push
popf
scas
jle
sub
je
jne
rorl
imul
inc
push
inc
push
test
pop
mov
in
and
mov
push
adc
enter
xchg
adc
rolb
jns
inc
add
push
lock
jp
jb
jae
xchg
push
xor
xchg
lods
jge
rclb
cmpl
mov
xor
sbb
sbb
bound
pop
or
pop
xlat
xchg
mov
insl
mov
rolb
sbb
and
dec
mov
adc
inc
and
dec
nop
jno
lret
cmpsb
jnp
loope
push
lret
pop
fstps
mulb
dec
dec
rcrb
popa
mov
int3
fstpl
lret
dec
inc
mov
fstl
xchg
pop
pushf
nop
and
mov
lock
sub
pop
xchg
jbe
sarl
scas
lods
adc
cs
push
lcall
repnz
add
cs
movsb
or
lahf
iret
push
cltd
xchg
aam
in
dec
adc
mov
push
push
jno
bound
enter
jo
add
orb
mov
orl
outsl
sbb
loop
iret
jecxz
aam
mov
dec
les
fmuls
repz
xchg
adc
or
flds
lods
dec
jmp
push
shlb
mov
gs
pop
fcom
dec
testb
sbb
rcll
push
fisubl
push
dec
pop
mov
sarl
inc
lcall
jns
xchg
jg
sbb
push
data16
shl
or
dec
adc
pop
push
pop
fisubl
pop
push
add
dec
rolb
cbtw
sub
dec
push
adc
push
rcr
loop
cltd
sarl
jp
int3
nop
or
outsl
cli
call
lods
pop
xchg
lcall
dec
inc
pop
cmp
iret
je
mov
test
loope
add
push
adc
aam
lock
push
aas
xchg
test
or
es
xchg
or
dec
pop
enter
mov
push
inc
push
pop
dec
jg
dec
push
jecxz
fmuls
xchg
adc
mov
add
mov
pop
lret
adc
ja
bound
adc
mov
pop
insb
je
int3
ror
aas
dec
lret
adc
xchg
or
fimuls
mov
jl
mov
enter
loopne
or
clc
imul
addb
mov
dec
mov
inc
xor
loopne
cli
arpl
pop
and
add
cmp
fcoms
jo
sbb
mov
ret
dec
cltd
cmp
lret
dec
cltd
cli
dec
cmpsl
popf
jecxz
ja
adc
inc
adc
movlps
je
and
jl
push
into
mov
xchg
jle
adc
adc
xor
mov
jbe
outsb
fcoms
jbe
adc
rcr
es
adc
int3
xlat
mov
push
push
outsl
push
cwtl
sbb
dec
fnstcw
xchg
and
pop
inc
aam
cwtl
mov
stos
pop
mov
mulb
dec
pop
cmp
enter
pop
and
push
dec
lret
loope
movsb
push
aam
inc
dec
xlat
rorl
loopne
mov
xchg
leave
nop
and
or
sbb
loope
push
cmp
pop
mov
push
mov
inc
cmc
xchg
push
jns
xchg
mov
xchg
inc
ljmp
push
mov
aam
mov
outsb
or
or
push
or
push
mov
mov
nop
clc
xchg
or
add
or
rclb
in
sbb
mov
pop
arpl
sub
lret
dec
or
xchg
pop
data16
xlat
mov
ljmp
ds
xchg
cwtl
enter
dec
dec
push
pusha
pusha
pop
call
push
push
add
adc
and
jp
insl
orb
dec
mov
ret
es
int3
int
ljmp
push
mov
adc
inc
or
mov
mov
fwait
mov
sbb
lock
jno
jle
lock
subb
dec
dec
sahf
dec
nop
push
out
adc
sahf
xchg
xchg
mov
or
dec
jno
pop
pop
push
imul
adc
out
add
addr16
dec
ja
dec
fs
xlat
pop
xchg
mov
sti
and
or
mov
nop
lea
mov
lods
dec
xchg
pushf
fimull
add
adc
fwait
cs
or
xchg
mov
or
pop
xchg
ja
iret
push
sarl
or
out
dec
jnp
pop
notl
add
ja
fmuls
push
dec
mov
xchg
mov
cmp
cmpb
or
jle
rorl
and
adc
or
inc
or
push
pop
or
cmp
or
xchg
or
cli
aam
jle
push
adc
cli
orl
jle
adc
pop
or
xchg
or
notb
or
lock
inc
or
add
sbb
inc
sbb
bound
push
or
imul
lcall
pop
adc
mov
xchg
ljmp
bound
andl
push
pop
pop
sub
dec
xchg
fisubrl
adc
sbb
shlb
cs
testb
lea
lods
mov
fisttpl
outsb
insb
lcall
push
mov
pop
push
adc
int3
or
movsl
or
and
sbb
xchg
mov
dec
in
imul
out
inc
dec
rclb
aaa
mov
dec
mov
shlb
mulps
fsubs
aad
xchg
sub
call
mov
nop
push
and
adc
fcmovu
mov
xchg
pop
push
push
xchg
push
in
dec
xchg
mov
mov
ja
nop
xchg
lret
sahf
pop
pop
dec
jmp
pop
push
and
xchg
sub
xor
sbb
or
fwait
mov
cltd
push
push
iret
add
pop
mov
add
pop
xlat
sub
xor
xor
or
jecxz
or
dec
popf
cltd
push
push
push
inc
inc
and
cmpsb
pop
or
and
or
cltd
push
pop
iret
and
inc
rorb
dec
or
or
fsubs
mov
imul
ror
push
push
sahf
stos
xor
xchg
mov
mov
mov
cmp
xchg
daa
and
movsb
pop
mov
outsb
inc
and
rcl
lret
jl
cmc
add
adc
jne
xchg
inc
pop
cmpsb
push
jbe
mov
dec
out
mov
rorb
push
inc
push
or
cmp
xchg
jecxz
mov
push
leave
nop
mov
dec
pop
lret
push
es
cwtl
into
mov
stos
lret
push
adc
sub
xor
test
push
pop
pop
push
int3
dec
xchg
test
pop
nop
out
aam
cmpsl
cmc
test
sbb
movsl
sbb
and
or
fwait
popf
lret
xchg
and
xchg
pop
xor
outsl
pop
and
pop
dec
dec
iret
mov
cmc
mov
and
pop
pop
push
loope
fcoms
icebp
flds
xchg
pushf
rorb
adc
sbb
adc
mov
dec
dec
mov
dec
xchg
dec
push
lock
xor
xlat
shl
loope
enter
push
jg
xchg
push
fs
rcrl
push
mov
lret
nop
pop
jge
mov
adc
lock
gs
xchg
iret
adc
or
xchg
xlat
sbb
xchg
imul
jle
mov
pop
push
out
pushf
xchg
fcoms
push
xchg
gs
push
dec
aam
push
rorb
lret
and
push
xchg
iret
sbb
rorb
adc
pop
xchg
mov
mov
mov
dec
movsl
jne
ficoml
sarb
insl
test
or
call
pop
push
insl
push
lock
fstp
in
enter
inc
jp
xchg
mov
cmpsb
jg
adc
dec
mov
jg
xor
lea
xlat
and
push
dec
push
push
xchg
pop
push
inc
ljmp
xlat
and
adc
push
xor
adc
jecxz
and
adc
xchg
xchg
ss
rorb
xchg
and
dec
adc
fadds
xor
adc
andl
cmc
and
orb
fistpll
enter
cwtl
shrb
shrb
dec
lret
xchg
xlat
dec
mov
pop
adc
mov
fucomp
dec
sar
pop
loopne
mov
mov
sbb
push
stos
jg
cmpsl
push
xchg
and
push
stc
adc
add
or
aad
shl
or
xchg
adc
imul
sub
gs
adc
mov
ror
jns
push
loopne
iret
loopne
pop
push
and
or
mov
lds
fcoms
and
imul
mov
cltd
or
adcl
pop
movsb
or
in
loop
ja
xchg
sbb
or
cwtl
mov
mov
xchg
fstps
jge
xchg
iret
jns
mov
lret
mov
sub
aas
jecxz
pop
or
or
dec
aas
pop
pop
jo
hlt
add
cwtl
lods
dec
fst
xchg
adc
adc
xor
adc
fcoms
ret
fwait
sub
push
or
mov
inc
xchg
mov
enter
push
mov
xchg
mov
push
sbb
loop
dec
pop
out
add
adc
cmp
sbb
fidivrl
jno
pushf
rorl
stos
push
dec
stos
in
adc
lea
xchg
out
add
mov
pop
and
mov
stc
sub
dec
data16
adc
loop
pop
les
aam
xor
mov
mov
dec
cmpsl
fwait
test
lea
push
sbb
pop
mov
into
dec
test
xchg
fcomps
or
jnp
lea
roll
sti
xlat
mov
cltd
push
adc
inc
jne
iret
xchg
xchg
dec
lea
fs
lret
pop
add
int3
push
lcall
jmp
movsb
push
or
notb
aam
inc
ficompl
cmp
or
or
dec
bswap
or
aam
xchg
fiaddl
loop
dec
fs
pop
push
push
xchg
addr16
mov
into
push
imul
dec
adc
inc
jle
mov
iret
cltd
mov
js
js
dec
lret
nop
or
int3
ror
xchg
jmp
shlb
adc
in
fmuls
in
inc
push
xchg
push
outsb
fnstenv
or
dec
bswap
push
add
cmp
inc
dec
xor
hlt
fcmovne
lea
mov
outsb
lret
xlat
mov
test
adc
mov
insb
pop
mov
xchg
lret
fimull
daa
push
pop
movsb
popf
push
push
xchg
fcom
lds
scas
outsb
inc
popa
adc
popf
mov
xchg
ljmp
dec
adc
lea
rcl
jns
push
subl
lcall
loop
mov
adc
or
dec
push
inc
mov
adc
pop
or
rorb
lcall
loop
pop
loope
cmpb
mov
jo
call
imul
rclb
pop
push
push
sbb
inc
dec
or
lcall
sbb
or
out
int3
stos
loope
int
fisubl
ds
cld
or
xchg
mov
inc
jle
iret
js
mov
out
push
or
sbb
mov
int3
inc
in
or
fstl
gs
cltd
push
dec
emms
mov
mov
push
mov
dec
les
shll
xchg
push
dec
ret
mov
rorb
xor
arpl
mov
fld
mov
mov
and
jecxz
jns
push
or
loopne
xchg
mov
aam
dec
adc
mov
and
push
loope
dec
stos
dec
push
xlat
outsb
movsb
push
dec
pop
and
iret
or
and
sarb
pop
push
xchg
out
iret
mov
inc
xchg
pop
not
nop
jle
enter
xchg
push
xchg
xchg
mov
or
rcll
sub
or
sbb
add
fmuls
int3
dec
pusha
cltd
dec
dec
pop
mov
cmpsl
loope
dec
movsb
rorb
mov
aam
fimull
sbb
ret
add
dec
pop
add
push
push
dec
xchg
jns
ds
nop
inc
push
orl
aas
sbb
sbb
and
xchg
pop
xlat
xor
flds
pop
shlb
mov
cmpsb
cltd
fwait
adc
popf
fwait
dec
loop
dec
or
mov
xchg
adc
jns
push
ja
xchg
push
adc
pop
xchg
mov
int3
adc
fcoml
or
or
dec
push
int3
data16
dec
outsl
aam
push
daa
imul
jns
or
jbe
push
popa
lcall
fs
fxch
pop
in
int
cmp
push
mov
scas
insl
dec
adc
inc
adc
dec
cmpsl
lods
sbb
dec
xchg
adc
push
leave
lock
lret
outsl
adc
push
mov
push
dec
in
fwait
mov
pop
lret
mov
insl
mov
out
cmp
sbb
adc
xchg
dec
or
mov
dec
imulb
or
dec
imul
adc
xor
or
or
xchg
sbb
and
lret
xlat
insl
dec
or
add
pop
lcall
rcrl
sarb
xlat
adc
or
adc
xchg
dec
dec
popf
rcrl
push
xchg
xchg
or
pop
shrl
inc
xchg
xchg
or
movsl
adc
push
aam
loop
nop
or
mov
xchg
cld
test
xlat
or
or
inc
push
mov
mov
clc
lret
jne
xchg
sbb
or
jecxz
dec
push
or
bswap
mov
hlt
out
xchg
in
loop
xchg
pop
inc
movl
ss
or
or
rcrb
mov
clc
xchg
dec
xchg
sub
es
dec
xor
push
mov
push
inc
and
fsubs
xchg
pop
leave
gs
xlat
int3
movups
enter
dec
sarb
push
std
test
clc
or
adc
xchg
cmovns
lahf
pop
add
mov
mov
jp
xchg
int3
pushf
or
xchg
movb
hlt
mov
sbb
sub
movsb
cmp
shll
xchg
pop
shrb
jnp
test
inc
pop
push
cmpsl
sbb
mov
and
cmpsl
pop
jle
in
gs
roll
xchg
inc
mov
push
outsl
jg
and
sub
jmp
lcall
loope
and
rcrb
cmp
xchg
pop
or
pop
ror
adc
movsl
mov
dec
xchg
push
aam
cmpsb
mov
and
sarb
inc
in
loop
xchg
mov
adc
loop
gs
xchg
xchg
lret
mov
inc
adc
xchg
push
sbb
push
sbb
out
pop
clc
int
jecxz
mov
push
mov
xchg
adc
sbb
xchg
cmp
jns
mov
jle
dec
mov
outsl
xchg
adc
mov
sbb
iret
fdivrs
mov
sbb
movsb
lret
inc
clc
adc
cltd
enter
insl
fs
pop
push
cwtl
mov
loope
jne
dec
adc
pop
xorl
adc
imul
in
xchg
adc
dec
pop
out
lods
int
push
test
mov
cltd
test
add
sti
arpl
mov
adc
xorl
cld
pushf
xchg
xor
bound
cltd
lods
mov
in
in
dec
enter
fildl
xlat
xchg
in
mul
or
es
roll
leave
inc
inc
gs
rclb
push
adc
dec
dec
lcall
shll
push
add
push
ror
xor
dec
mov
push
std
lret
adc
in
rcll
fs
sbb
mov
adc
inc
sahf
jns
dec
imul
xchg
mov
adc
pop
dec
int
jge
push
cld
mov
adc
mov
and
rclb
adc
aad
comiss
ret
pop
stc
cltd
add
mov
arpl
cltd
xor
xor
and
adc
sbbl
dec
imul
xchg
gs
dec
adc
enter
jl
loop
xchg
xchg
dec
or
sarl
rcl
mov
xchg
xchg
pop
iret
push
push
addr16
dec
xchg
cmc
xchg
adc
mov
add
sbb
xor
enter
ss
icebp
push
iret
lret
cmpsb
jb
enter
insl
lret
mov
pop
rorl
xor
rorl
adc
in
das
jg
sub
mov
and
pop
xlat
ror
inc
mov
or
mov
xor
push
jle
xchg
jae
xchg
mov
dec
daa
inc
and
inc
mov
pop
in
push
inc
sbb
adc
add
out
adc
cwtl
xchg
jns
lods
or
xchg
mov
pop
mov
jecxz
btsl
dec
push
push
nop
jo
push
ja
adc
sub
and
xor
xor
mov
lcall
mov
shll
pop
push
adc
andl
hlt
jae
mov
add
dec
lcall
cmpsl
inc
es
add
xchg
insl
sub
out
leave
dec
jle
pop
jecxz
dec
lret
mov
ror
idivb
adc
les
xchg
xchg
push
or
push
push
xchg
push
push
pop
xor
sti
fs
lret
push
adc
add
mov
push
push
dec
xchg
xchg
xchg
mov
movsl
xchg
adc
je
test
xor
stc
dec
leave
mov
lea
mov
adc
and
and
pop
or
xchg
jecxz
adc
in
stc
mov
push
xlat
or
ror
or
in
jns
cld
decb
add
cltd
lods
adc
js
jle
xlat
adc
adc
add
sbb
enter
js
in
pop
sbb
xchg
int3
push
incb
xchg
lock
or
adc
xchg
xchg
sbb
push
stos
test
test
int3
addr16
inc
sub
cld
ret
ret
ret
fbstp
ds
xor
xchg
adc
push
loopne
push
ja
mov
lds
cmp
ret
divl
xchg
ljmp
adc
test
dec
push
ficompl
push
mov
lods
leave
xor
jbe
xchg
lcall
lret
inc
loope
pop
and
dec
pop
fldt
aad
shl
clc
pop
dec
mov
jge
push
ja
lcall
adc
lret
cwtl
or
cmc
loopne
pop
cli
jecxz
adc
int3
rorl
jp
xchg
jle
test
or
xchg
enter
int3
adc
ret
adcl
stc
xchg
sbb
and
rcrl
or
addb
dec
sbb
jns
pop
loop
push
xchg
mov
test
and
xchg
scas
and
fldenv
inc
arpl
mov
pop
int3
mov
mov
push
or
sti
pop
cmp
outsb
pop
lahf
or
adc
xchg
rcr
arpl
push
sub
adc
push
push
xchg
mov
adc
lahf
push
push
int
or
sbbb
pop
adc
dec
out
inc
test
lret
dec
inc
pop
add
loopne
loop
xchg
outsl
mov
rcrb
adc
push
dec
cwtl
lea
jg
lcall
int3
or
dec
xchg
dec
add
fxch
jge
insb
or
outsb
mov
shlb
nop
iret
jecxz
push
insb
pop
mov
ljmp
fwait
rcl
outsl
jg
popl
mov
dec
push
dec
in
or
xlat
xchg
mov
jnp
inc
arpl
mov
sub
and
xchg
dec
lds
sub
sub
lahf
sub
cltd
adc
mov
push
xchg
lret
adc
push
insb
fcom
xor
lret
dec
int3
dec
sub
pop
or
in
adc
cltd
dec
mov
test
lds
xchg
adc
inc
in
stc
sbb
and
sub
add
xchg
jle
adc
rolb
leave
and
pop
inc
xchg
inc
fcmovnbe
add
dec
mov
cmp
lret
lea
fidivrl
jns
jecxz
or
pop
lret
push
enter
adc
lcall
or
cld
int3
lds
nop
adc
lret
rsm
xor
inc
dec
jne
fdivs
dec
sbb
mov
loopne
adc
push
mov
arpl
jge
ficoml
int
mov
fcmovbe
push
push
mov
adc
pop
push
or
mov
insl
mov
sbb
xchg
andl
fiaddl
push
hlt
push
mov
shrl
sbbl
cmpsb
popl
push
and
push
lret
mov
and
pop
pop
rclb
flds
push
fmul
jle
dec
jns
fisttps
push
movsl
jecxz
or
jp
gs
aam
push
mov
pop
loope
cltd
or
and
hlt
insl
xchg
dec
dec
and
dec
dec
test
mov
fsubs
mov
lret
xchg
dec
daa
dec
adc
pop
popf
push
inc
ja
daa
fwait
sbb
push
push
in
lock
adcl
push
cmp
dec
inc
lds
loop
xchg
inc
inc
inc
mov
adc
push
testl
into
and
or
adc
adc
gs
dec
pop
mov
push
xchg
push
mov
mov
arpl
push
jecxz
or
inc
rclb
xchg
add
enter
mov
outsl
mov
insb
test
arpl
cmpsb
pop
inc
sub
xchg
cmp
mov
dec
mov
btc
xchg
or
hlt
xchg
push
aam
xchg
sbb
jmp
push
dec
lcall
xchg
mov
adc
push
pushf
push
pop
fildl
scas
in
pop
ficompl
mov
arpl
jecxz
mov
scas
push
out
mov
gs
aam
inc
mov
push
xchg
out
jns
mov
sbb
iret
jmp
pop
mov
outsl
inc
shlb
lcall
jne
dec
rorl
jp
jp
push
adc
stc
fists
pop
lret
fst
test
pop
xchg
fcomp
xchg
sbbl
push
jg
sbbl
jae
and
dec
in
mov
rorb
mov
cmp
inc
mov
mov
pop
sarb
adc
or
inc
push
lret
push
fcmove
adc
xchg
enter
sub
dec
lret
pop
int3
inc
aad
int
rcll
lods
push
mov
test
femms
lret
nop
mov
cltd
aam
es
sbbl
xchg
xchg
sub
aad
addr16
and
jg
pop
sbb
fstl
imul
or
xchg
sbb
test
mov
mov
frstor
sahf
or
or
enter
movsl
jne
push
or
jge
pop
or
xchg
and
dec
dec
lea
pop
imul
aas
lcall
inc
adc
enter
int3
sahf
pop
adc
sbb
mov
pop
or
push
rorb
fildl
notl
aaa
xor
cltd
adc
jns
push
rclb
dec
aam
flds
xlat
sbb
scas
or
data16
or
leave
cwtl
push
sbb
icebp
arpl
pop
sbb
sbb
dec
and
clc
outsl
xchg
pop
dec
lods
dec
mov
push
jne
cltd
inc
fsubrs
fst
lret
stc
xchg
lret
push
sbb
dec
push
xchg
and
adc
repz
cwtl
jne
adc
clc
fxch
mov
dec
push
push
mov
xor
jge
test
or
add
lea
insb
dec
xchg
cwtl
leave
or
cmp
dec
xchg
inc
push
fwait
cmp
gs
push
data16
inc
jne
je
mov
pop
cwtl
xchg
push
in
nop
int3
adc
aam
cmp
lret
lea
pop
xchg
xchg
or
sbb
shlb
xchg
jne
push
ss
les
aam
mov
imul
stos
xchg
mov
adc
xchg
jo
loope
push
or
and
dec
mov
push
rclb
popf
adc
inc
xlat
dec
out
add
sub
xchg
push
mov
pop
ja
pop
push
ds
mov
sbb
rcrb
add
or
addl
adc
dec
lret
cmpb
stos
aam
inc
es
loop
dec
pop
jnp
fimull
sbb
push
loopne
adc
stc
inc
or
dec
je
inc
or
fisttpll
adc
dec
leave
jb
insl
scas
nop
iret
fists
push
pop
daa
pop
cs
or
leave
sub
push
xchg
xchg
dec
jnp
xor
xlat
adc
and
xchg
inc
or
jge
rclb
icebp
push
push
or
inc
cltd
int
insb
xlat
jg
jns
xchg
push
mov
or
repz
jns
and
push
mov
test
push
push
dec
xchg
jg
in
insb
aam
mov
shl
fstl
push
jle
lcall
nopl
add
dec
dec
mov
mov
add
rcrb
mov
inc
seto
jo
shlb
insl
int3
enter
pop
jns
pop
push
mov
cmp
adc
and
dec
pop
pop
xchg
dec
adcl
gs
adc
or
movsl
dec
ds
outsb
cwtl
mov
fsubrs
lods
mov
dec
in
add
dec
leave
pop
jne
mov
push
nop
lret
adc
sbb
nop
and
lret
arpl
sarl
inc
loopne
insl
pop
mov
dec
in
lcall
stos
push
add
push
lret
adc
dec
mov
test
lret
dec
xchg
in
mov
pop
xor
dec
mov
fistps
notb
fxam
and
pop
push
testb
lea
dec
xchg
lret
push
shl
inc
pop
add
cld
ds
out
je
add
xchg
or
or
xor
insb
es
popf
roll
cwtl
int3
into
data16
push
push
ljmp
push
in
js
cwtl
xchg
aam
roll
mov
inc
xchg
adc
stc
enter
push
xchg
rol
shll
xchg
push
xchg
or
lcall
leave
jg
pushf
cltd
or
sahf
and
scas
and
dec
dec
jne
enter
mov
lds
and
fstps
fists
sahf
dec
dec
aam
mov
add
push
mov
pop
add
dec
cltd
aam
scas
fwait
dec
cmc
es
jbe
cmpsl
leave
jecxz
xchg
push
or
enter
xlat
jnp
dec
in
push
adc
ficoms
jo
jg
sub
dec
or
or
imul
rcrl
inc
repnz
pop
inc
jbe
push
push
leave
je
in
cmp
push
xlat
dec
sbb
gs
push
dec
sub
dec
dec
popf
jge
ja
xorl
or
iret
xchg
lods
push
adc
stc
hlt
rcrb
stc
pop
fcom
leave
add
int3
in
imul
xlat
in
loopne
pop
nop
fmuls
mov
mov
xchg
dec
or
in
sbb
fnstcw
nop
jecxz
pop
pop
iret
mov
cltd
pop
mov
in
rcll
insb
dec
cmpsl
dec
cmp
push
adc
jnp
sub
or
rcll
mov
adc
mov
pop
xchg
xchg
jecxz
xchg
leave
and
pop
setp
cwtl
or
pop
hlt
adc
jnp
rol
fists
pop
dec
fldl
lock
mov
dec
inc
lea
cwtl
sbb
inc
pop
out
leave
pop
jnp
jmp
gs
lret
fcoms
nop
cmp
pop
push
daa
pop
xlat
cltd
and
dec
out
sub
insl
scas
ficoml
es
inc
lret
dec
shll
jo
pop
adc
aam
lea
into
inc
repz
in
rclb
dec
push
imul
mov
mov
xchg
orb
push
int3
in
pop
add
add
or
push
xchg
add
gs
xchg
or
adc
in
roll
xchg
jno
jne
adc
pop
mov
and
lret
sbbb
out
ja
sbb
outsl
cmp
xchg
dec
xchg
lret
rolb
arpl
dec
ret
cltd
nop
stc
out
adc
hlt
fs
dec
inc
ficoms
stc
jle
dec
xchg
or
dec
xchg
daa
jnp
popf
fs
roll
xlat
and
dec
push
mov
mov
test
dec
hlt
jecxz
xor
rclb
out
shrb
inc
xchg
xchg
push
ret
push
dec
mov
aas
inc
push
stos
sbb
adc
inc
out
xor
inc
sbb
pushf
adc
push
testb
xchg
ficompl
add
adcl
out
or
dec
loope
xchg
adcl
fwait
mov
pop
arpl
xchg
dec
imul
aam
xor
push
ja
movsb
adc
adc
push
add
push
sub
in
or
jecxz
mov
pop
cmpsb
inc
gs
dec
push
xchg
insb
cltd
jg
into
lret
jae
or
adc
xchg
xchg
add
add
pop
jle
enter
pushf
iret
lret
addr16
pop
and
mov
loop
jecxz
lret
lret
sub
popf
loop
lock
adc
lock
xchg
xchg
push
and
cwtl
jns
cmp
and
jl
shl
mov
add
cpuid
mov
and
push
pop
mov
push
cltd
aaa
mov
imul
and
mov
add
push
add
push
aam
adc
nop
mov
mov
mov
cli
push
outsb
pop
push
mov
enter
mov
lret
cmpsl
mov
pop
add
in
xchg
and
adc
jl
adc
int
mov
insb
xchg
jg
mov
in
adc
dec
pop
mov
xor
test
or
adc
rcr
pop
xchg
jg
loopne
leave
adc
xchg
xchg
sar
dec
and
jmp
sbb
stc
dec
pop
sbb
dec
loopne
and
lret
packssdw
or
adc
mov
or
or
inc
hlt
mov
or
ud0
iret
jnp
sbb
js
push
jp
fwait
adc
inc
shll
out
dec
jns
fldl2t
adc
lcall
pop
adc
bound
mov
leave
push
adc
xchg
adc
ss
pop
and
pop
adc
outsb
sub
or
jnp
pop
int3
mov
outsb
xlat
or
or
sbbb
sbb
jmp
pop
test
imul
loope
push
mov
fcomip
loopne
ffreep
fcomip
push
xchg
cli
push
sub
hlt
arpl
dec
scas
add
movlps
lret
adc
cltd
pushf
dec
dec
push
sub
pop
fcomps
adc
xchg
sbb
sub
insb
jne
dec
push
ficoml
inc
push
jle
push
in
dec
cmp
dec
mov
addr16
push
dec
inc
mov
or
push
in
sbb
sti
mov
in
adc
dec
ret
test
xchg
dec
add
les
call
jns
rorl
jp
jge
ror
leave
xchg
shrl
fcoms
lret
lock
push
lret
leave
push
dec
pushf
cltd
xchg
xor
lock
popf
clc
mov
jle
rcll
mov
ljmp
mov
push
sbb
les
das
push
enter
clc
or
nop
xchg
xchg
adc
out
inc
addr16
xchg
inc
je
push
rcrb
movsb
mov
adc
mov
movsl
insl
decl
mov
clts
out
lret
mov
adc
cltd
imul
sbb
xchg
fstl
xchg
push
xchg
rcll
jns
fiadds
jle
outsl
out
dec
outsl
insb
lods
dec
cld
cltd
sahf
adc
xchg
and
dec
daa
and
rcl
inc
dec
add
icebp
pop
push
push
xchg
out
imul
or
inc
push
jg
dec
pop
adc
push
inc
xchg
ret
pushf
or
fs
push
sarl
mov
testb
roll
rorb
pop
pop
sbb
jns
nop
adc
fdivrs
or
cwtl
rorl
fistl
pop
mov
js
lahf
mov
xchg
cltd
jecxz
or
xchg
or
xchg
cmp
mov
cs
adc
shll
xchg
sbb
push
mov
inc
loop
and
stos
rcl
add
mov
iret
cltd
enter
test
adc
in
pop
push
fiaddl
sub
cmc
xchg
jecxz
int
add
sub
loop
xchg
loope
test
mov
xchg
lret
sub
in
xchg
cmpsb
push
or
dec
dec
adc
loopne
or
insb
stc
arpl
arpl
and
dec
clc
mov
ret
or
push
fsts
mov
inc
std
xchg
dec
inc
adc
push
push
imul
or
dec
ja
stc
push
inc
dec
pushf
or
sub
xchg
cmpsl
push
xlat
xchg
adc
sbb
sbb
or
mov
fimull
test
fistpl
dec
inc
mov
insl
fcmove
sbb
cmp
repz
insl
push
cwtl
sub
insb
jmp
push
push
adc
or
lret
push
vpsubw
jecxz
pop
orl
dec
xchg
mov
and
int3
jle
orl
leave
fldenv
inc
ror
push
xchg
xor
push
pop
or
push
inc
and
inc
cltd
pop
or
or
lea
addl
adc
mov
xchg
outsl
pop
popf
fistps
rcll
dec
in
pop
mov
insl
incb
dec
push
mov
leave
notl
mov
xlat
jbe
pop
inc
pop
insl
ja
mov
jg
xor
mov
xor
push
sub
rcr
sbb
push
mov
and
iret
mov
mov
xchg
push
xchg
mov
fldl
imul
dec
lds
push
aam
jo
or
fldenv
pminub
jmp
xchg
mov
mov
popf
rorl
push
dec
adc
leave
mov
cmc
adc
insl
mov
xor
or
push
push
mov
push
jecxz
dec
aaa
in
leave
fisubrl
xchg
enter
imul
out
xchg
push
lea
hlt
xchg
inc
repnz
dec
shrb
cltd
adc
and
add
jle
inc
mov
ja
sub
pop
outsb
in
es
mov
xchg
fldl
iret
xchg
ret
adc
je
hlt
mov
jno
int
addr16
push
repz
sahf
pop
or
js
xchg
xor
out
xor
pop
adc
jle
or
shrb
dec
loope
lods
dec
rcll
jbe
or
push
and
mov
int3
rcrl
xchg
mov
or
ret
fmul
dec
dec
mov
int3
lea
adc
mov
shrb
jne
stc
or
je
add
jl
repz
mov
push
xor
inc
cmc
xor
aam
jmp
xchg
or
xor
xor
push
mov
xchg
xchg
das
mov
push
push
in
add
xchg
mov
sub
popf
mov
pop
sysexit
orl
insl
int3
mov
sbb
popf
arpl
xchg
add
rorb
int3
cmp
sbb
aaa
data16
or
push
mov
xchg
push
sub
andps
xchg
mov
popf
mov
inc
dec
mov
dec
shrb
push
sub
lret
lret
xchg
mov
or
sbb
xchg
imul
mov
mov
shl
inc
pop
and
dec
xlat
mov
xchg
push
and
push
rolb
adc
leave
lret
push
push
push
je
out
stc
lahf
xor
push
outsb
mov
pop
push
lcall
mov
enter
cltd
lods
scas
mov
arpl
scas
jmp
pop
cmp
sub
lret
pop
shr
loopne
loopne
arpl
dec
loope
or
or
int3
adc
or
test
xchg
sahf
sahf
nop
or
add
dec
enter
icebp
aam
rcrb
push
push
enter
jae
adc
push
xlat
xor
inc
jno
mov
rol
dec
rol
jne
jmp
inc
loope
push
lret
xchg
jecxz
pop
dec
add
or
push
xchg
dec
enter
insl
iret
fdivs
dec
pop
into
adc
adc
adc
or
outsl
sbb
fcoms
ret
inc
clc
jle
pop
lret
jns
mov
adc
cltd
dec
cmp
lcall
sti
lret
dec
push
pop
jnp
pushf
push
sub
add
mov
xchg
add
ret
mov
cmp
mov
adc
clc
in
xlat
mov
enter
xchg
mov
sub
ficoml
pop
jecxz
xlat
lds
mov
mov
mov
sbb
push
or
add
scas
pop
xchg
xlat
xchg
push
clc
pop
je
mov
clc
dec
pop
inc
pop
cmp
xor
inc
gs
cmpsb
push
add
sub
dec
dec
call
outsb
mov
xchg
jae
mov
movsb
into
mov
cltd
cwtl
push
dec
cltd
pop
rcl
dec
stc
xchg
push
xchg
push
arpl
inc
popa
xchg
lret
cs
jb
rcll
nop
inc
dec
iret
push
jno
adc
mov
push
test
dec
xchg
ja
xchg
mov
fiaddl
unpckhps
leave
rorl
dec
rcrl
or
pshufw
sbb
adc
or
insl
pushf
adc
pushf
fwait
pop
lock
rclb
and
push
mov
dec
adc
xchg
lock
lds
adc
cmc
inc
mull
dec
ror
test
pop
jg
cs
cmc
in
rorl
pop
mov
push
cmp
shl
dec
arpl
test
test
or
jbe
xchg
xchg
or
adc
or
pop
loop
xchg
pop
cltd
test
adc
stos
and
frstor
lods
mov
pop
sbb
rcrl
dec
nop
dec
xor
adc
push
cmp
push
mov
and
xchg
jg
movsb
push
xchg
sbb
add
call
mov
dec
addr16
lcall
insl
mov
adc
pop
mov
and
pop
lods
mov
adc
rorb
in
jge
sub
xor
ss
mov
outsb
or
mov
jle
rorb
or
dec
leave
mov
push
cmpsb
stos
stos
int3
jno
lret
adc
inc
inc
es
pop
xchg
adc
jmp
xchg
adc
pop
dec
pop
and
sbb
rclb
dec
ret
out
sarl
add
out
xchg
dec
sbb
xchg
sbb
mov
lods
xchg
dec
jns
jle
pop
dec
imul
xchg
xor
xchg
mov
lds
pop
add
nop
jle
xchg
sub
into
pushf
pop
loop
std
xchg
xlat
je
xchg
fdivs
xchg
dec
orb
ss
cmpsl
push
mov
xchg
in
lret
int3
mov
fisttpll
aam
in
ds
dec
mov
dec
lea
movsb
pusha
iret
ljmp
adc
fcomps
repz
mov
push
push
cwtl
xchg
mov
leave
cld
ret
lret
cs
push
xchg
cld
dec
lret
dec
mov
push
sub
xchg
mov
or
pop
mov
sbb
mov
dec
sbb
or
adc
xchg
xor
loope
adc
loop
mov
mov
push
hlt
inc
or
outsl
das
mov
movsl
int
mov
jecxz
mov
hlt
mov
cwtl
jle
test
inc
fiaddl
in
dec
dec
push
xchg
rorl
or
or
loop
jg
adc
aam
mov
mov
or
dec
pushf
mov
dec
dec
fstps
sahf
sub
rclb
mov
mov
adc
mov
clc
pushf
rcr
shr
imul
lret
adc
adc
push
xchg
xchg
or
xchg
push
cmpl
cltd
shll
cmpsb
mov
cmpsl
movsl
sbb
sahf
adc
aam
subb
mov
mov
and
je
mov
mov
cltd
or
dec
jne
lock
or
in
xchg
xchg
push
icebp
iret
and
push
roll
jo
enter
lret
add
pop
pop
or
xchg
cli
bswap
nop
ja
out
push
dec
lahf
fcoms
jle
push
sub
push
pop
sub
imul
shlb
jg
sub
ficoml
ljmp
add
xchg
sub
or
aam
jmp
setp
aam
sahf
dec
xchg
xchg
and
pop
dec
push
rol
gs
cmp
mov
push
xchg
xor
test
cltd
adc
lods
mov
mov
orl
ljmp
inc
lret
ljmp
push
xor
add
shrb
dec
aam
mov
xchg
fwait
inc
push
and
daa
int3
dec
xchg
aam
sahf
psubusb
loop
dec
adc
loop
in
roll
push
lcall
dec
dec
inc
or
pop
xor
seto
loope
mov
xor
push
cwtl
addl
inc
rcl
inc
cmc
fbstp
and
adc
gs
push
pop
xchg
adc
push
xor
cwtl
fsubs
push
ja
adc
repnz
adc
push
iret
rorb
shll
jno
outsl
dec
ja
movsl
sarl
call
and
pop
lea
iret
aad
xchg
sti
adcl
or
inc
mov
push
stc
pop
xchg
divb
push
cli
inc
repz
enter
dec
push
push
rcrb
dec
or
cmpsl
pop
rorb
push
pop
mov
jecxz
xchg
ror
jmp
sub
jae
jne
xchg
mov
or
cmp
pop
xchg
pop
jno
xor
jb
lret
andl
cmp
push
mov
push
inc
les
enter
mov
aam
fnstenv
xchg
push
dec
ficoml
dec
push
jmp
jecxz
push
dec
lods
mov
jne
or
in
xchg
stos
cltd
loop
inc
inc
xchg
rcl
sahf
mov
xlat
lret
aam
adc
inc
cwtl
xchg
or
hlt
xchg
leave
lret
jnp
gs
xchg
adc
xchg
add
dec
shlw
enter
imul
mov
mov
push
fwait
mov
or
jns
lcall
or
push
xchg
fidivl
jnp
fiaddl
rcl
movsb
lods
lret
dec
fmull
je
arpl
and
jge
sbb
adc
or
dec
arpl
ret
mov
push
or
mov
icebp
cltd
lods
rcll
insb
xchg
sysenter
jge
pop
es
loopne
pop
pop
push
sbb
and
dec
or
sar
sbb
add
dec
or
test
int3
xchg
adc
fmuls
roll
popf
in
push
ja
daa
xchg
mov
movsb
or
push
mov
outsb
and
mov
jle
das
or
xlat
dec
push
xchg
push
pop
ja
decl
pop
cmp
rorb
mov
xor
mov
sbb
pop
inc
daa
jns
and
xchg
push
xchg
adc
adc
lea
and
and
xlat
pop
push
mov
adc
mov
rcll
stc
les
push
cld
mov
push
or
lods
das
aam
push
xor
xor
adc
mov
sbb
hlt
push
push
cs
adc
mov
push
and
xlat
rorl
cltd
jns
mov
fld
cmpsb
iret
jle
push
pop
rorb
jmp
mov
out
xchg
mov
push
mov
adc
add
add
xchg
and
pop
pop
mov
sbb
iret
leave
cltd
rolb
mov
cld
test
jl
dec
aam
stos
hlt
arpl
mov
xchg
ljmp
rclb
loop
lret
dec
sbb
push
and
addr16
xchg
pop
lret
sbb
xchg
push
xchg
lret
gs
mov
add
mov
js
xchg
push
lcall
dec
jno
dec
enter
push
or
xchg
dec
mov
aad
mov
rorl
push
arpl
inc
pop
dec
arpl
sbb
dec
imul
ret
and
or
cmpsb
lock
push
cmovl
sub
lcall
lock
int3
dec
loop
mov
jle
aad
sbb
or
xor
iret
adc
pop
dec
popl
push
push
jbe
enter
push
fs
mov
mov
dec
or
sbb
push
icebp
sbb
inc
xchg
nop
mov
out
mov
movsb
adc
pop
je
mov
mov
je
iret
addl
xchg
inc
stos
fs
lret
inc
fdivs
xchg
or
enter
popf
adcb
fimull
add
fildll
in
in
dec
jno
stos
pop
adc
aam
mov
cltd
fld
adc
or
jnp
mov
inc
mov
nop
push
sbb
push
adc
push
or
arpl
push
mov
lcall
pop
dec
push
rclw
fwait
mov
push
or
pushf
addr16
pop
fcmovb
pop
or
insl
cmc
fadd
lods
jb
xchg
fs
xchg
pop
pop
push
ret
ds
pop
dec
aam
int3
lret
adc
add
daa
sub
xchg
dec
dec
ret
bound
rorl
dec
and
popa
inc
jne
sub
mov
addb
sti
je
dec
push
les
jno
dec
arpl
mov
sub
jns
xchg
jg
push
or
loop
dec
cltd
and
or
pop
es
nop
xor
rorb
sub
push
int
mov
and
aam
je
je
les
dec
in
mov
xchg
pop
xchg
aam
rolb
sahf
leave
jne
or
cld
mov
arpl
lret
sbb
mov
fstl
push
mov
cmpsb
loopne
and
loop
shll
clc
add
pop
popl
jecxz
dec
push
fcomps
jne
clc
pushf
xchg
aam
adc
loopne
jnp
fwait
xchg
adc
add
roll
mov
lods
inc
loope
pop
and
enter
push
das
pop
pop
xchg
fidivl
pop
shl
xchg
and
dec
ljmp
xchg
or
xchg
xchg
push
jb
aad
cmpsl
rorl
jns
lret
and
lcall
imul
and
xlat
sub
insl
out
mov
ret
not
add
xlat
insl
rorw
xchg
mov
mov
mov
jle
fcmovb
call
mov
loopne
shlb
mov
aam
push
xchg
sbb
or
or
gs
sbb
les
shll
dec
out
aam
ret
xchg
insl
xlat
adc
xchg
xchg
push
xchg
adc
aam
xchg
addl
fstpl
xlat
xchg
repz
sti
or
nop
jg
mov
cli
imul
or
jns
jg
jmp
aam
xlat
cltd
push
cltd
jmp
ljmp
sbb
jecxz
push
xchg
cmc
inc
dec
imul
adcb
mov
inc
cmpsl
adc
lret
dec
rcl
imul
dec
pop
cltd
popf
call
push
mov
or
es
test
adc
mov
pushf
jle
pop
xchg
pop
lret
sbb
test
pop
fildl
xchg
test
mov
sahf
cmp
sti
cltd
mov
push
aam
dec
mov
cmpsl
push
cwtl
sbb
mov
jno
jae
lret
rorb
fcomps
dec
xorb
mov
lcall
dec
xchg
enter
xchg
fcoms
cmp
shlb
xor
mov
xchg
jae
xchg
orl
cmp
jle
jbe
jge
push
xchg
dec
sbb
roll
dec
addr16
loope
nop
stc
xchg
inc
adc
xchg
mov
adc
in
dec
xlat
rcl
repnz
insb
push
cwtl
adc
int3
loopne
mov
adc
inc
pop
call
xchg
addr16
rcrb
xchg
iret
nop
lcall
roll
sbb
fcoms
sarl
pop
xchg
xchg
dec
lret
xchg
movsb
dec
push
adc
ret
pop
insb
nop
xor
popf
push
xchg
mov
aas
adc
push
imul
mov
mov
dec
les
cld
xlat
movsl
lea
ja
jg
xchg
adc
arpl
cltd
dec
test
iret
lret
mov
fwait
or
mov
pop
sbbb
aad
push
ds
dec
insb
xchg
fstl
in
push
pop
dec
add
test
or
int3
adc
addr16
xor
dec
cmpsl
ret
adc
pop
iret
fsub
mov
clc
cltd
insl
xchg
push
xchg
ja
jge
fcmovbe
and
fcomp
pop
lahf
xchg
jle
adc
ret
adc
sub
jecxz
dec
push
test
or
dec
push
leave
jecxz
xchg
dec
push
mov
sbb
lret
stos
push
sahf
rclb
dec
ja
pop
jge
mov
and
enter
mov
fsts
int3
push
or
repz
pop
and
push
push
inc
xchg
fwait
or
push
in
fnstsw
iret
mov
sub
mov
add
adc
ljmp
push
hlt
jecxz
push
adc
push
or
push
or
flds
and
adc
inc
xchg
push
dec
loop
push
arpl
insl
pop
rcrl
or
xchg
mov
add
jae
cltd
push
lcall
jbe
push
int3
push
xor
clc
push
out
sbb
and
ret
sbb
mov
mov
mov
pop
mov
scas
jne
cwtl
mov
mov
rorl
adc
fimull
mov
push
mov
push
dec
loope
xchg
iret
fst
adc
imul
mov
rol
xchg
jg
into
dec
hlt
jno
jne
push
pop
test
int3
addr16
mov
sarl
push
or
ja
out
adc
push
cmp
imul
jg
push
shlb
enter
pop
leave
arpl
lea
push
dec
andl
sub
or
shrl
sbb
push
js
push
dec
enter
cmp
scas
push
dec
jle
jle
and
nop
push
xchg
mov
insl
adc
arpl
dec
pop
enter
and
push
fcoml
or
xchg
dec
pop
push
and
out
int3
outsb
ja
xchg
flds
shll
iret
xlat
push
dec
dec
imul
dec
sbb
fisttps
shlb
xchg
sub
adc
xchg
fsubrp
ret
mov
sub
inc
imul
lret
data16
adc
or
rcll
dec
push
mov
push
lods
imul
cmp
push
stc
cmc
mov
adc
fs
dec
je
hlt
ja
jne
push
adc
mov
push
fwait
push
cltd
jmp
push
loope
cltd
ds
push
dec
adc
xor
lea
shll
nop
add
rcr
and
cmc
push
dec
add
les
mov
aad
dec
ss
push
sahf
rcll
or
leave
cwtl
xchg
stc
mov
aam
mov
std
and
arpl
movsb
mov
push
lret
mov
lods
call
add
test
shr
xchg
sarb
push
mov
ret
mov
adc
adc
sahf
jle
fcmovbe
xchg
push
adc
jg
rol
pop
cltd
push
addr16
mov
xchg
dec
pop
or
push
pop
ret
pushf
mov
cli
arpl
sbb
inc
movsl
adc
xchg
xchg
adc
jbe
inc
jle
lahf
mov
fisttpl
negb
cwtl
mov
dec
sub
mov
gs
dec
cltd
mov
imul
mov
imul
push
dec
outsb
gs
xchg
push
rcl
adc
mov
mov
or
in
lea
xchg
pop
adc
loopne
pop
jne
nop
jmp
movsb
fmul
push
pop
cwtl
adcb
arpl
mov
pop
repnz
int
xchg
or
fldcw
mulps
mov
pop
ds
in
fidivl
push
insb
push
shlb
xchg
sbb
dec
push
dec
dec
mov
inc
adc
xchg
mov
lods
data16
cltd
xchg
lret
sahf
cwtl
jo
cmpsl
loop
adc
out
arpl
shl
imul
xchg
dec
rolb
iret
gs
push
mov
push
sub
xchg
nop
mov
add
pop
adc
insl
lods
mov
pop
pop
jge
pop
in
adc
dec
sbb
or
jmp
lcall
loopne
and
stos
or
or
clc
mov
loope
rorl
or
mov
inc
and
add
mov
movsb
lret
ror
out
and
push
es
adc
je
test
insb
dec
xchg
inc
jl
jge
xchg
adc
sbb
push
sbb
fldcw
and
dec
push
dec
outsl
addr16
mov
repnz
xchg
add
mov
test
cmpsl
jecxz
mov
mov
fwait
add
push
js
ja
dec
pop
addl
jl
dec
mov
mov
xlat
push
dec
cmc
xchg
pop
mov
enter
rclb
iret
arpl
dec
add
mov
movsl
insl
jne
push
fstl
lret
rclb
iret
aam
cwtl
or
push
enter
push
mov
dec
shlb
and
push
fdivrs
xlat
xor
add
xchg
cmpl
adc
inc
outsb
addr16
mov
or
inc
dec
pop
ret
mov
adc
push
or
adc
inc
adc
push
and
sbb
sti
push
cld
aam
xor
je
in
mov
dec
jnp
inc
xchg
js
xchg
xlat
adc
or
and
push
push
leave
add
dec
cltd
jb
cmp
addr16
mov
xchg
movsb
cmp
test
mov
pop
leave
xchg
xlat
add
jmp
loopne
or
pop
gs
mov
push
push
mov
dec
adc
ds
xor
pop
push
xchg
in
rcll
insl
fmuls
push
mov
mov
negb
xchg
dec
aas
xchg
mov
leave
hlt
push
pop
sbb
sub
pop
lds
add
int3
or
xchg
out
pop
pop
xchg
jmp
dec
popf
cwtl
enter
pop
arpl
mov
or
jg
aad
cwtl
add
pop
xchg
xchg
or
or
dec
push
adc
addl
and
pushf
cltd
inc
xchg
xchg
mov
lcall
fsubs
ret
loopne
mov
push
or
add
fwait
test
lret
inc
adc
std
iret
ss
cmc
pop
inc
fsubr
enter
aam
push
rolb
add
dec
shrl
sub
push
sbb
dec
ret
and
fs
push
push
test
push
xchg
fidivl
xchg
hlt
inc
dec
xchg
sub
or
xor
leave
xchg
jp
adc
jg
arpl
xchg
fadd
shlb
adc
adc
popa
mov
push
repnz
xchg
jne
or
loopne
nop
lret
adc
test
xchg
sarl
pop
mov
in
pop
pushf
lahf
loopne
arpl
ret
sbb
jo
jae
sub
jmp
dec
int
hlt
push
dec
lea
or
adc
mov
pop
or
xchg
imul
and
push
push
int3
inc
push
push
adc
aad
jne
adc
add
push
add
mov
out
or
add
adc
loop
or
hlt
mov
pop
fidivl
gs
xchg
ror
adc
ja
mov
mov
icebp
cwtl
push
pop
xchg
sbb
sub
and
test
dec
pop
push
or
mov
mov
test
cwtl
fmuls
pop
rorb
push
or
mov
into
test
push
mov
sub
xchg
fxch
je
push
fiaddl
sub
inc
fiaddl
pop
dec
push
dec
dec
movsb
xor
or
push
aam
add
lea
sarl
sub
jne
push
nop
shll
sbb
xchg
add
xchg
push
cwtl
ljmp
inc
mov
fwait
dec
insl
jns
ficoms
cwtl
or
xchg
test
mov
setns
and
add
dec
or
push
push
sti
call
aam
push
pop
pop
lret
sub
fldl
out
out
sbb
sub
and
xchg
jecxz
or
xor
in
xchg
arpl
nop
push
pop
les
les
add
xchg
enter
push
outsl
and
loopne
rorl
loopne
push
stc
jle
cmp
inc
cmp
cmpsb
or
cs
sub
or
pop
dec
roll
xchg
dec
push
and
out
rorb
sub
mov
cwtl
movsl
sbb
mov
push
scas
daa
cs
data16
or
roll
loopne
leave
in
mov
insl
adc
push
pushf
fcom
inc
sahf
mov
inc
cs
imul
xchg
or
xlat
sbb
sbb
or
sbb
pop
add
in
iret
cltd
fists
jae
xchg
dec
push
dec
insl
orb
out
push
fiaddl
jmp
fxch
int3
ret
add
mov
or
fcmovbe
xchg
dec
push
xchg
outsl
push
lret
sbb
or
sbb
push
xchg
xchg
aam
cwtl
imul
or
int3
sub
shlb
pop
xchg
mov
fadd
out
mov
movsl
jecxz
xchg
adc
loop
dec
inc
aad
adc
lods
addr16
push
xchg
mov
xchg
in
push
dec
mov
mov
nop
fmuls
or
xchg
push
sbb
mov
add
icebp
jle
insl
xchg
adc
push
or
iret
pop
lret
and
xlat
cmp
pop
push
or
pop
imul
fisttps
or
pop
aam
outsb
fwait
xchg
inc
pop
xor
dec
sar
or
jo
lret
dec
or
rorb
loop
xlat
ret
or
inc
sbb
cwtl
jne
dec
adc
aam
fwait
pop
popf
into
enter
and
test
mov
push
cltd
addr16
gs
sbb
cwtl
dec
imul
add
pop
or
xchg
push
out
push
and
fmuls
in
aam
inc
xchg
mov
and
sub
mov
and
or
fwait
push
adc
es
das
mov
xchg
push
cmp
lahf
je
mov
push
pop
cmp
popl
rorl
push
dec
push
ljmp
mov
or
pushf
or
or
adc
loope
rcrb
or
pop
ljmp
and
int3
cmp
movsl
mov
mov
lret
sahf
rolb
xchg
xlat
push
nop
push
jmp
push
or
rolb
sbb
fcmovbe
push
pushw
adc
lret
aas
or
dec
cmp
push
mov
pop
shrb
pop
xchg
xchg
xlat
lret
ficoml
dec
lcall
cmp
push
adc
push
fadd
rorl
dec
test
inc
sbb
icebp
stos
addr16
lret
or
pop
or
mov
adc
adc
mov
hlt
jle
pop
push
cs
bnd
xchg
mov
jecxz
sbb
dec
test
and
loope
or
add
push
pop
movsb
jbe
cld
lahf
push
iret
cld
xor
outsl
xchg
ja
pushf
pop
sbb
pushf
adc
insb
push
jns
call
or
cmpsl
lcall
adc
push
enter
and
jbe
push
pop
sahf
xchg
dec
xchg
in
inc
xchg
push
dec
inc
ljmp
fcomps
or
lret
push
mov
pop
push
lcall
mov
jo
sbb
adc
or
pop
xchg
dec
push
jne
push
adc
push
mov
cld
xchg
push
lret
mov
mov
fisttpll
push
or
dec
ja
jns
lret
dec
jecxz
cltd
das
and
dec
or
adc
jge
adc
mov
push
add
pop
or
arpl
imul
in
fsts
rcrl
jl
arpl
dec
pop
outsb
push
fwait
cmc
scas
sbb
outsb
fists
or
shll
nop
in
dec
dec
mov
adc
aad
mov
xchg
test
ret
or
mov
xchg
fs
and
fdivr
cmc
pop
mov
adcl
adc
mov
cwtl
xor
daa
sti
push
sbb
xor
jl
jae
adc
sbb
inc
mov
cltd
add
jle
jle
cwtl
lret
ljmp
mov
mov
xchg
shl
mov
in
repz
adc
xchg
xchg
in
xchg
and
mov
fs
inc
cltd
jbe
pushf
adc
dec
push
push
or
lea
xchg
dec
inc
sahf
dec
je
adc
in
loope
in
sbb
mov
dec
loop
leave
gs
pop
adc
push
sbb
andl
jp
push
push
into
hlt
mov
rcrb
mov
idivb
imul
xchg
jnp
lods
sbb
push
ss
jg
lret
or
jp
lret
dec
loop
push
add
mov
shl
and
xchg
arpl
dec
inc
adc
popf
adc
rclb
pop
loope
mov
push
push
rcrb
push
xchg
aam
inc
push
jns
loop
mov
sbb
rorb
pop
pop
mov
pop
nop
xchg
xchg
push
aam
cli
smsw
mov
push
lock
jle
neg
enter
dec
mov
fs
movsb
lret
cwtl
mov
xchg
mov
adc
imul
or
or
sbb
lret
iret
lahf
adc
movsl
rcrl
mov
or
sub
lahf
cmp
add
push
mov
fmuls
or
aam
rol
mov
dec
xchg
dec
adcl
jmp
cltd
dec
xchg
aas
andl
cmp
rcrb
cwtl
popf
and
rorb
xchg
dec
xchg
cmp
aaa
pop
enter
out
jns
fmuls
xor
les
mov
mov
dec
vphaddubw
lea
xchg
push
cltd
and
pop
xlat
dec
push
mov
nop
lods
out
add
loope
pop
pop
arpl
dec
jecxz
dec
inc
adc
pop
fldlg2
jge
fcoms
repnz
xchg
pushf
push
push
xchg
je
pmuludq
jle
call
sbb
negb
and
push
rcl
push
adc
aam
rorl
adc
popf
dec
icebp
adc
lds
xchg
lret
mov
aam
pop
xchg
or
gs
nop
push
pop
adc
lods
or
enter
mov
xchg
out
mov
adc
inc
mov
pop
int3
pop
mov
or
cwtl
icebp
xchg
xchg
dec
data16
jp
add
push
xchg
loope
mov
jecxz
pop
ret
pop
stos
movsl
loope
ror
inc
push
lret
in
ror
cwtl
mov
lret
pop
int
pop
pop
pop
adc
cltd
scas
dec
xorl
lret
push
cltd
ljmp
out
add
daa
orl
addb
push
cmp
push
outsb
push
fisttps
leave
movsb
dec
xchg
xchg
cmp
cs
mov
andl
inc
dec
std
mov
lock
jle
or
or
cld
xchg
lret
or
rclb
and
iret
int3
scas
xchg
lret
push
cwtl
adc
or
or
mov
call
add
int3
inc
inc
inc
scas
leave
nop
xlat
push
inc
dec
rorl
addr16
rcll
jbe
insl
gs
ficoml
nop
push
rcl
aad
xlat
loop
push
pop
gs
push
int3
or
mov
pop
aaa
push
aas
and
dec
sbb
aam
lcall
jno
pop
xchg
mov
nop
cmp
mov
mov
sub
inc
pop
pushf
dec
or
ror
xchg
push
adc
aam
sbb
xchg
sbb
lret
sbb
rclb
pop
push
popf
push
dec
inc
addr16
pop
dec
pop
lods
pushf
rclb
mov
fimull
adc
sarl
xchg
jle
ljmp
loopne
pop
sbb
or
xchg
data16
cltd
or
ja
inc
cmp
test
jns
or
dec
xchg
sbb
fwait
mov
jle
mov
push
pop
jnp
adc
inc
fcmovnu
and
push
jne
dec
fcoms
adc
inc
int3
ljmp
adc
mov
adc
or
push
arpl
or
mov
insb
mov
out
xor
movsb
psubusw
jns
lret
and
xchg
dec
xor
xor
pop
popa
fisubl
push
enter
or
push
jge
jle
jnp
adc
movsl
loop
sbb
or
and
addr16
lea
dec
and
or
bound
mov
mov
leave
mov
movsl
add
in
dec
vmwrite
shll
adc
sub
xchg
add
dec
sbb
mov
pop
push
xchg
popa
sbb
pop
jge
fisttpll
rol
adc
dec
sbb
mov
xchg
push
out
dec
jmp
adc
cwtl
ror
or
aaa
push
shrb
pop
ja
push
push
or
lcall
nop
dec
adc
push
in
mov
cwtl
loop
push
pop
int3
movsb
mov
pop
push
pop
iret
dec
aad
or
hlt
jne
insl
push
or
inc
jo
adc
mov
rclb
push
mov
leave
jg
out
mov
and
or
dec
mov
push
xchg
pushf
mov
lcall
fstl
inc
dec
or
lock
fldenv
adc
stos
or
push
xchg
test
in
pop
inc
in
xorb
iret
call
enter
pop
push
jle
repnz
hlt
xchg
xor
dec
shlb
cltd
adc
and
xchg
stos
mov
or
rcrb
lock
cs
xchg
adc
popf
addl
aas
mov
rcrb
mov
out
push
loop
push
fstps
orl
fisubl
adc
push
pop
jl
iret
mov
les
adc
jb
aam
push
and
aam
pop
mov
mov
sub
sub
adc
jne
sbb
pop
mov
jle
arpl
aam
or
or
push
sub
je
cmp
xchg
jge
or
adc
dec
fwait
rcrl
or
rcll
mov
lock
and
fcoms
mov
adc
xchg
or
enter
push
or
xor
in
adc
and
insl
into
inc
xchg
into
sbb
loopw
mov
test
or
pandn
push
ret
xcrypt-ctr
cmpsl
cwtl
inc
sbb
push
pop
dec
push
dec
sbb
es
push
lock
lods
add
lret
leave
and
loopne
and
loope
or
fmuls
or
iret
aam
push
pop
xchg
sub
or
mov
test
adc
dec
push
mov
enter
rorl
mov
daa
enter
js
dec
and
sahf
mov
push
sahf
lcall
xchg
xlat
lret
cmp
call
pop
movsb
add
jo
push
add
jle
xchg
pop
out
aad
dec
dec
jns
xchg
inc
adc
int3
iret
pop
scas
xchg
rol
adc
adc
mov
jno
pop
movsb
mov
adc
adc
dec
hlt
sub
ja
das
jle
lret
cmp
inc
xlat
fmul
xchg
cltd
cmp
pushf
dec
sub
lret
fisttpl
jnp
rol
in
jns
cltd
loopne
dec
inc
arpl
add
adc
enterw
adc
xchg
repz
dec
or
xchg
add
mov
sbbb
jg
jecxz
pop
or
fidivrl
dec
inc
mov
jns
xchg
dec
adc
mov
stos
out
or
push
lret
and
dec
inc
xchg
mov
dec
rorb
xchg
sub
dec
mov
insl
push
adc
int3
fcoms
push
jp
shll
dec
xchg
cltd
sbb
shl
outsl
int3
cmp
adc
popf
inc
rcrb
lods
mov
or
adc
dec
push
movsl
loopne
dec
push
jp
xchg
out
mov
jle
jle
ja
cltd
xchg
pop
push
fimull
mov
add
aad
xchg
or
rcrl
cltd
addb
int3
fisttpll
mov
pop
or
or
ficompl
pop
adc
and
pop
push
sti
push
loop
xchg
cmp
push
dec
or
pushf
jmp
mov
bound
fcom
or
add
jne
nop
push
mov
ss
imul
or
cltd
sbb
fcoms
jne
pop
rorl
or
aad
pushf
xchg
adc
movsl
mov
rcll
aaa
and
lcall
inc
rorl
out
lea
cwtl
aam
pop
push
dec
push
pop
rolb
inc
adc
xchg
dec
sbb
dec
les
sub
test
xor
pop
cmp
roll
xor
cltd
ficompl
mov
rorl
loopne
jg
adc
pop
push
push
popf
stos
rclb
addr16
push
fdivs
or
push
dec
inc
nop
mov
rcl
hlt
and
push
insl
pop
pop
push
jp
pushf
xchg
rcll
cwtl
sbb
lahf
xchg
jle
jo
sbb
pop
cmp
pop
jl
fwait
lahf
push
push
jl
push
push
aam
out
jne
adc
pop
lahf
pop
mov
jnp
pop
xchg
xchg
test
adc
pop
nop
movl
dec
arpl
sbb
add
push
jno
dec
pop
dec
adc
jnp
mov
pop
test
ffree
xchg
push
jp
adc
inc
ror
jge
enter
xorl
adc
adc
pop
jle
roll
mov
push
outsb
cmp
push
cltd
lret
xchg
jnp
or
jle
add
xchg
je
push
aam
mov
push
fs
adc
cmp
mov
mov
rclb
test
fcoms
mov
or
pop
and
lahf
mov
xchg
add
or
pop
jae
lret
mov
pop
arpl
or
mov
inc
jno,pt
call
pop
add
pop
in
xor
rorl
or
loope
xchg
arpl
xchg
inc
mov
fisttpl
imul
push
and
mov
xchg
lret
cmp
inc
scas
arpl
out
test
loopne
jge
leave
cmp
push
pop
outsb
cltd
push
dec
or
xchg
ret
decb
mov
cwtl
xchg
rorl
mov
adc
dec
sub
fisubs
ficoml
and
or
fstps
dec
mov
jns
cld
mov
aam
dec
pop
xchg
or
mov
shll
and
push
dec
in
rorb
lea
cltd
push
mov
repnz
mov
inc
ret
popf
leave
ja
ljmp
div
and
push
and
or
lcall
rorb
mov
mov
nop
rorl
scas
jmp
dec
xchg
ds
xchg
and
iret
push
aam
or
xor
ds
push
mov
nop
adc
lret
lret
ficoml
inc
cmp
stc
and
dec
dec
pop
push
les
lret
pop
js
mov
xor
sub
shll
sbb
pop
mov
push
div
sbb
lds
adc
jecxz
leave
hlt
roll
lret
xchg
mov
xchg
clc
rorb
mov
ds
dec
cld
rorl
pop
gs
mov
adc
jo
fists
jecxz
mov
test
iret
jne
dec
push
nop
lcall
out
push
arpl
push
xchg
xchg
nop
js
pop
arpl
sbb
adc
xlat
pop
dec
adc
xlat
jnp
push
adc
data16
mov
adc
cltd
add
cwtl
adc
xchg
inc
cld
mov
fstl
dec
shll
and
fidivrl
outsb
hlt
pop
fsubs
fisttpll
xchg
pop
dec
pop
pop
mov
pop
sub
mov
pop
dec
and
dec
xchg
aam
test
mov
nop
or
sahf
es
in
jmp
xchg
xchg
ja
adc
daa
popf
pop
xchg
inc
jo
sub
xchg
dec
add
dec
adc
pop
pop
dec
mov
dec
sar
inc
jl
pop
popf
and
pushf
mov
outsl
mov
dec
outsl
pop
fisttpl
xchg
out
xchg
adc
push
rcr
mulb
popl
adc
out
push
loope
pop
enter
adc
stc
push
dec
popf
sub
stos
imul
or
mov
jns
rolb
dec
fs
rorl
fsubs
cmova
xchg
adc
ja
or
vpmacsswd
or
adc
into
pop
mov
jne
or
push
pop
dec
mov
xchg
addr16
aaa
jg
mul
mov
ror
xchg
mov
push
pusha
and
pop
pop
sub
leave
arpl
mov
movsb
sbb
fnop
lds
pushf
into
pop
adc
sub
out
or
xchg
jg
sbb
mov
push
dec
or
inc
cwtl
adc
je,pt
xor
ret
clc
mov
jne
adc
nop
insb
jne
sbb
dec
pop
adc
shll
mov
adc
sbb
rcr
mov
push
mov
lahf
orb
push
cwtl
loopne,pn
rclb
dec
mov
xchg
and
or
and
inc
enter
fwait
or
xchg
push
out
ja
pop
adc
std
shl
dec
fcmovbe
xchg
vprotw
mov
adc
or
or
sub
insl
rcl
int3
jp
mov
jb
movl
ret
mov
sub
mov
imul
iret
insb
int3
mov
or
mov
dec
mov
xchg
lods
fmuls
pop
or
cmpsl
push
inc
mov
shl
jecxz
popl
cmovs
rorb
lds
adc
mov
pop
push
loop
mov
mov
ret
xchg
xchg
inc
or
lret
cltd
dec
xlat
sbb
adc
pop
push
and
adc
xchg
int
mov
push
enter
dec
add
ret
in
pop
push
dec
and
je
jne
inc
xchg
sub
push
jg
pop
aam
push
fwait
xor
adc
int3
pop
repz
jne
add
pop
jle
inc
rcrl
and
dec
adc
sub
adc
mov
push
dec
cmp
xor
pop
jo
call
adc
call
fwait
mov
cmc
popf
aaa
mov
mov
sbb
nop
xchg
jle
dec
cwtl
or
jecxz
dec
push
inc
adcb
fadds
nop
pop
hlt
jne
int
enter
or
pop
adc
jp
mov
test
or
push
xchg
inc
push
out
in
mov
daa
sbb
add
clc
mov
or
adc
dec
hlt
push
inc
and
xor
cmpsb
dec
imul
pop
ja
in
jg
mov
mov
sub
arpl
xchg
mov
pop
push
ret
movsb
push
ja
pop
adc
ret
bound
insb
or
push
sub
mov
dec
jp
adc
leave
xchg
or
sub
cld
push
add
int3
sbb
dec
mov
adc
test
cld
dec
add
movd
std
dec
adc
fs
dec
or
je
and
cli
fcmovb
popf
jle
movsb
push
dec
loope
dec
mov
sbb
push
push
xchg
inc
cmp
or
dec
iret
mov
lds
sbb
xchg
mov
mov
out
clc
mov
xchg
pop
xor
or
fists
adc
loopne
loop
mov
jmp
dec
push
out
inc
les
dec
sbb
push
ret
xchg
lret
loop
and
pop
or
dec
jbe
sarl
inc
icebp
mov
cmp
mov
mov
jo
dec
ss
je
pop
leave
and
push
loop
push
sarl
adc
push
push
jne
fmuls
iret
ja
jecxz
pop
or
mov
mov
push
xchg
aam
fisttps
mov
and
sbb
lcall
pop
loop
push
out
pushf
je
vrsqrtss
xchg
in
push
adc
in
sbb
dec
nop
cmpsl
out
adc
dec
dec
pop
adc
or
stc
loope
adc
es
adc
int3
dec
add
or
dec
loop
fisubrl
and
data16
push
leave
pop
mov
mov
test
out
xchg
aam
xchg
pushf
aad
out
lret
iret
xchg
sbb
and
pop
jno
or
xlat
pop
jp
cmpsl
pop
inc
in
and
adc
xchg
cltd
dec
adc
push
adc
push
arpl
nop
xchg
rcl
cwtl
push
xchg
pop
xor
dec
xchg
in
adc
mov
mov
or
xchg
lret
pop
pop
xchg
popf
jmp
loope,pn
or
outsb
das
push
mov
addr16
mov
dec
leave
aaa
fucomi
das
sub
hlt
mov
addr16
add
pop
push
dec
jbe
push
sbb
adc
js
dec
shrl
cs
sets
test
loop
pop
or
lret
and
ja
fimull
ror
ror
adc
les
jle
xchg
or
adc
loopne
mov
sbb
repz
xchg
pop
loope
cwtl
leave
js
enter
or
xchg
add
inc
fcoms
jmp
imul
jmp
push
test
stos
xchg
daa
add
xor
test
xchg
les
mov
push
push
xor
shrl
dec
adc
inc
jecxz
adc
mov
test
cwtl
adc
jecxz
lcall
into
jle
xchg
dec
fadds
loopne
ficompl
inc
and
ror
pop
daa
loop
fisubl
push
sub
andb
sbb
pushf
movsb
adc
xor
into
mov
sub
clc
fs
adc
rorl
jg
jl
jae
aam
sbb
or
or
ret
sbb
and
aam
shrb
pushf
push
sbb
mov
out
sbb
adc
sbb
lcall
push
dec
xchg
fmuls
and
mov
xchg
cld
add
pop
pop
clc
loopne
loope
lret
xor
mov
xor
jle
iret
push
lret
push
jmp
xor
mov
sbbb
in
addps
dec
cwtl
fisubl
pop
or
xchg
in
or
ljmp
adc
push
stos
scas
sti
stos
cmp
sbb
mov
sahf
cmp
loope
test
lahf
add
out
into
jle
and
rclb
push
mov
inc
or
or
rcl
lret
sub
lock
mov
dec
mov
sbb
xor
dec
gs
or
prefetcht1
mov
fstl
xchg
flds
xchg
xchg
cwtl
dec
or
adc
ficompl
rclb
sbb
push
and
loope
lret
rcl
and
loop
mov
xchg
mov
push
andb
inc
mov
adc
and
addr16
jg
lods
xor
pop
in
mov
loope
nop
cs
push
mov
packuswb
or
mov
pop
mov
push
enter
dec
dec
add
cmp
loope
or
repnz
xor
pop
nop
sub
jo
cmovge
push
out
mov
sarl
mov
push
addr16
adc
adc
xor
mov
or
push
mov
leave
push
pop
lcall
call
push
ds
and
mov
xchg
xchg
mov
jle
or
push
ds
dec
push
scas
aam
xchg
fldl
jle
xchg
xor
jns
dec
or
iret
mov
mov
cmp
outsl
sub
pop
mov
xchg
or
push
xor
mov
dec
pop
int
push
add
jb
mov
mov
leave
push
adc
stos
cwtl
dec
mov
inc
icebp
xor
xlat
in
out
lds
unpcklps
push
adc
dec
insl
or
movl
adc
dec
enter
xchg
push
push
imulb
mov
insl
push
push
ds
imul
or
fisubrl
xchg
cmp
in
dec
mov
neg
shll
mov
sarl
cmp
jecxz
or
fmuls
xlat
call
cwtl
mov
or
adc
cli
cltd
jns
sbb
pop
mov
xchg
mov
push
xchg
dec
mov
loope
addr16
or
sbb
in
cltd
pop
mov
cwtl
xchg
pop
pop
xlat
adc
fisttpl
std
cmp
loopne
xchg
lret
push
mov
std
cmp
sahf
xchg
inc
dec
adc
or
in
arpl
test
xor
pop
ret
xor
cmovg
jne
rorl
adc
push
xchg
push
push
mov
mov
imul
jle
cwtl
mov
dec
arpl
dec
bndldx
arpl
sub
lea
or
out
imul
leave
shl
push
test
jg
mov
dec
test
push
adc
jb
cwtl
rorl
or
add
jb
or
rclb
add
push
fcmovb
pushf
adc
mov
std
loop
or
lock
stc
lods
jnp
cmp
shr
enter
nop
pop
lret
dec
push
pop
fists
ror
shl
imul
adc
cltd
or
orl
int
sub
pop
xchg
aam
mov
push
inc
es
ja
adc
ja
and
int3
or
add
pop
test
dec
cltd
lret
sbb
xchg
ficoml
adc
inc
push
adc
enter
daa
adc
mov
ret
pop
fbstp
xchg
jle
in
pop
dec
or
xchg
xlat
jbe
leave
addr16
cmpl
xchg
lds
push
jo
add
dec
int3
cmp
dec
or
jmp
xchg
mov
ljmp
popf
xchg
adc
mov
push
dec
pop
mov
movsb
std
pop
cltd
enter
or
hlt
jbe
inc
nop
push
xor
mov
adc
out
dec
icebp
sbb
sbb
leave
pop
mov
nop
andl
ret
movsl
mov
push
mov
push
push
xchg
cwtl
nop
jle
xchg
dec
sub
push
sub
push
loop
enter
sub
xchg
dec
ss
pop
roll
xlat
inc
adc
lea
adc
inc
xchg
ret
es
inc
adc
push
add
xor
inc
xchg
dec
fadds
mov
adc
lcall
int3
lret
push
xchg
lret
dec
or
adc
jns
fcomps
dec
or
xchg
mov
xchg
jg
imul
add
push
dec
or
mov
push
fmuls
dec
dec
jge
iret
fiaddl
xor
pushf
pop
insb
imul
sbb
fidivl
jmp
data16
cwtl
dec
push
add
fldenv
arpl
or
mov
xchg
or
enter
mov
ja
cmpsb
sarb
adc
and
xor
mov
adcb
dec
pop
mov
bswap
and
dec
rcpps
xchg
lds
cld
xlat
push
lods
in
and
xor
and
mov
enter
mov
push
inc
adc
and
fcomp
sub
stos
mov
mov
cmpsl
cmpsb
outsb
dec
dec
push
push
jecxz
push
adc
call
pop
lock
ror
or
rcll
jnp
test
cmp
stos
mov
sub
push
ret
dec
mov
pop
packsswb
mov
add
cwtl
rorl
and
xor
fnstcw
xor
in
or
iret
xchg
fyl2xp1
or
or
mov
aaa
test
dec
addr16
xchg
int3
xlat
jle
gs
xchg
push
fcoms
dec
mov
fwait
jg
mov
sbb
iret
les
popl
lcall
xchg
push
dec
dec
iret
jmp
dec
xchg
dec
imul
aam
nop
xor
loopne
and
adc
xchg
es
xchg
pop
loop
rol
dec
inc
je
in
adc
pop
adc
lret
mov
in
and
pop
xchg
and
push
or
xchg
popl
lea
aad
flds
xchg
fcomps
push
rorl
pop
xchg
add
jl
ficompl
pop
xchg
mov
or
rorl
jge
pop
nop
or
loopne
movsb
or
adc
adc
mov
and
push
or
rorl
sbb
outsb
sbb
loop
arpl
mov
jb
xchg
enter
xchg
dec
sbb
cmovs
in
cwtl
loope
or
dec
leave
mov
lcall
or
xchg
repnz
push
dec
xchg
or
ljmp
push
xchg
test
iret
dec
cmpsb
push
loop
xchg
xchg
imul
arpl
dec
pushf
je
push
int
sub
pop
pop
call
loope
iret
fdiv
inc
shll
xchg
dec
clc
cltd
fldcw
or
js
sub
enter
xlat
nop
lods
sub
add
mov
adc
jg
add
es
sbb
xchg
or
fwait
adc
aam
xchg
xchg
sbb
or
xchg
adc
les
adc
fnstsw
push
mov
and
mov
push
dec
and
lcall
push
leave
add
fmuls
add
nop
push
outsl
cmp
test
mov
cmpsb
pop
mov
lret
gs
enter
int3
or
mov
lods
or
dec
test
movl
jno
jnp
fstps
push
fcoms
push
rcrl
mulb
or
lahf
jmp
lret
xlat
push
sbb
xchg
decl
aaa
add
push
jecxz
dec
pop
fisubl
and
shrl
and
enter
xchg
imul
jle
rcr
iret
sbb
fmull
int3
xchg
dec
hlt
out
mov
ret
stos
fdiv
xrelease
sti
sbb
int3
mov
xchg
or
inc
xchg
push
jge
popa
xchg
mov
shl
or
imul
pushf
dec
mov
inc
lea
push
xchg
mov
xchg
add
cltd
loopne
fistpll
test
leave
or
mov
cli
dec
push
shrl
bswap
mov
pop
xchg
aam
xchg
ds
xchg
lret
pop
and
stc
jecxz
mov
lds
push
icebp
shlb
ret
call
add
and
adc
mov
int3
mov
jns
aam
enter
lcall
loop
push
jecxz
adc
add
xchg
mov
sbb
add
sbb
push
andb
adc
dec
mov
lret
jae
mov
nop
ror
ja
rcll
jne
dec
push
aam
sbb
mov
out
xchg
jp
or
xchg
adc
inc
jg
fcoms
repnz
movsl
push
dec
adc
or
ljmp
psllw
cltd
rcll
pop
movsb
insl
rcl
inc
mov
or
pop
mov
jg
inc
pop
jle
mov
lea
leave
mov
push
shlb
nop
pop
or
mov
push
out
push
dec
adc
xchg
clc
inc
mov
adc
xor
test
ljmp
pushf
ds
test
dec
push
mov
loope
inc
shll
rol
pop
lret
dec
or
push
cmp
test
inc
rclb
adc
mov
push
test
xlat
mov
xchg
xchg
loope
fimull
loop
rolb
push
push
pop
push
dec
loope
mov
loopne
loope
dec
inc
aad
imul
push
shll
gs
or
push
cltd
xchg
loop
in
outsb
jle
inc
jae
lds
dec
jb
jecxz
adc
mov
jecxz
fdivr
in
xchg
call
leave
iret
mov
xor
jecxz
pop
mov
in
nop
push
mov
push
or
hlt
xor
dec
sub
fstl
dec
rorb
mov
and
fmuls
or
xchg
iret
aam
dec
out
push
adc
out
outsl
inc
loopne
push
pop
test
data16
mov
iret
push
dec
dec
xor
hlt
mov
push
out
mov
negl
push
imul
push
mov
xchg
inc
fwait
cwtl
jmp
cmp
test
adc
int3
xchg
mov
roll
jns
cld
popa
xor
sub
enter
fstp
test
xchg
repz
notl
or
inc
inc
xlat
push
dec
or
aam
xchg
xchg
adc
fld
pop
push
nop
jl
xchg
mov
push
mov
push
dec
inc
mov
or
ret
nop
xchg
xchg
fisubrl
scas
lods
into
dec
jne
inc
lds
mov
push
adc
arpl
sbb
arpl
aad
in
mov
int3
or
mov
adc
iret
inc
shll
add
add
rorl
mov
mov
pop
pop
sbb
xlat
movsl
mov
jns
loope
lret
sub
dec
xor
es
xchg
mov
or
adc
and
loope
and
jne
dec
dec
adc
xchg
push
sbb
dec
outsb
movsb
adc
enter
aaa
icebp
test
rorb
cmp
pop
mov
mov
inc
adc
push
and
filds
jbe
adc
dec
or
add
xchg
lret
mov
ss
adc
push
mov
mov
xchg
push
dec
les
jno
or
mov
jno
iret
push
shrl
pop
je
cltd
xlat
push
or
shr
pop
dec
mov
push
push
test
pop
mov
jne
xchg
mov
sbb
aad
lcall
shlb
ud1
ljmp
push
push
int3
into
mov
mov
push
pop
xchg
pop
and
dec
cwtl
or
imul
mov
lret
dec
xlat
int3
pushf
adc
sub
mov
cltd
or
test
dec
and
xchg
pop
rcrb
adc
rcll
push
inc
addl
shlb
pop
pop
and
addr16
cwtl
movd
mov
mov
lea
adc
rclb
rcll
mov
iret
push
adc
xlat
sbb
movsb
rcr
dec
xor
ret
arpl
xchg
dec
rclb
sbb
aad
dec
cmp
or
mov
jle
sbb
and
leave
shrl
xchg
or
push
pop
je
xchg
xchg
dec
inc
mov
sbb
xchg
and
lods
cltd
mov
cwtl
cmp
loopne
fimull
adcl
push
jle
mov
flds
pop
mov
mov
fnstcw
int
mov
out
mov
enter
in
dec
addr16
and
pop
popf
mov
rcl
fnstcw
sbb
pop
adc
sti
xchg
rcrb
lds
jns
pop
and
cwtl
or
movl
cld
sbb
in
dec
lds
lret
fld
jne
dec
shrb
xor
pop
jae
mov
cmpsl
lret
dec
in
jle
dec
xor
ret
dec
in
dec
push
xchg
jnp
pushf
xchg
add
xchg
and
rorb
mov
xchg
xlat
push
vdivps
ds
jmp
xchg
iret
add
or
and
and
push
mov
ret
jne
lret
flds
and
add
je
je
rclb
nop
sahf
dec
mov
aam
lret
and
dec
mov
mov
std
sbb
push
and
cwtl
jo
clc
or
pop
adc
push
push
jmp
adc
adc
xchg
nop
fmuls
sar
push
lods
jne
enter
aam
and
jne
push
mov
dec
push
or
std
aad
loopne
adc
adc
jbe
jg
jns
pop
adc
xlat
in
push
cwtl
push
jl
mov
jp
push
xchg
cld
ret
xor
adc
mov
push
imul
push
pop
dec
mov
dec
mov
mov
xchg
dec
subb
jmp
dec
rolb
push
arpl
pop
je
mov
and
call
ret
iret
inc
in
and
adc
imul
insb
mov
dec
adc
xchg
push
rorb
xchg
insl
pop
push
iret
xchg
xchg
jp
das
and
rcl
fidivl
or
or
push
call
iret
mov
imul
dec
pop
test
add
enter
xchg
outsl
push
push
jg
ja
inc
and
stc
mov
popf
cmpsb
push
fs
mov
dec
dec
sbb
fldenv
nop
or
or
lret
jns
push
mov
dec
pushf
inc
xlat
pop
and
adc
cltd
adc
hlt
cmp
mov
dec
scas
movsb
mov
cwtl
out
mov
sbb
std
adc
jmp
push
fcomp
fists
xchg
and
xchg
cwtl
push
xchg
dec
fists
push
mov
lret
push
mov
inc
xchg
rcl
dec
ljmp
xchg
mov
pop
pop
xchg
in
mov
push
fwait
loope
and
mov
or
lods
dec
cmp
push
adc
aam
sub
dec
insl
xchg
push
xchg
rorl
test
dec
mov
xchg
push
das
addr16
leave
rcll
test
rcrb
fst
mov
push
jle
jae
xor
loope
xchg
pop
xchg
or
jns
addb
jmp
adc
push
xlat
rorl
cmpsb
sbb
adc
rcll
xlat
call
adc
lret
push
loop
rorl
dec
stos
xor
push
add
mov
rcrl
dec
dec
mov
mov
loopne
rorb
arpl
mov
xchg
arpl
inc
std
push
inc
decb
or
xor
mov
pop
movsl
sbb
jecxz
inc
pop
jb
push
cmpsl
dec
jecxz
pusha
or
sbb
lret
or
shrb
aad
es
mov
inc
mov
icebp
push
pop
mov
inc
jae
add
jp
push
ja
mov
pop
adc
gs
mov
dec
lret
xlat
sub
pop
cwtl
push
push
pop
or
mov
decb
in
push
test
adc
push
push
xchg
lods
shll
mov
mov
test
xchg
rcll
mov
cmpsl
inc
jne
xchg
sbb
pushf
xchg
lcall
movsb
fpatan
sub
adc
jle
movb
shll
sub
cmpsb
xchg
addr16
xchg
jg
sbb
leave
fldenv
lret
lock
jns
xchg
dec
lret
adc
dec
outsb
xor
cs
pushf
sbb
inc
mov
mov
push
xor
jbe
xchg
int3
lret
ror
jg
dec
pop
flds
cmc
nop
and
in
fwait
adc
sbb
mov
xor
xchg
inc
ret
jmp
rorl
xchg
pop
ret
jo
orl
cs
gs
push
dec
push
rcr
adc
dec
pop
jmp
adc
dec
dec
pop
push
cltd
xchg
data16
mov
xchg
loope
cli
lret
dec
mov
dec
and
push
push
or
push
iret
push
sub
es
jb
dec
push
leave
ds
pop
push
adc
fcmovnbe
push
imul
ja
cmp
fnstenv
sbb
int3
bound
xchg
jle
cltd
fcmovnbe
and
rclb
push
mov
adc
nop
sbb
lret
stc
loop
adc
xchg
iret
leave
mov
rcr
pop
add
mov
cltd
outsl
adc
imul
fwait
jmp
xchg
adc
sbb
aam
jle
inc
push
xchg
and
nop
hlt
lahf
rcr
or
and
insl
push
test
shlb
mov
adc
or
xchg
pop
cmpsb
and
pop
out
sbb
push
mov
inc
popf
pop
dec
push
iret
jns
adc
xchg
in
mov
and
dec
xchg
or
mov
testb
int3
jecxz
icebp
rolb
jle
adc
lock
sahf
and
loope
leave
pop
pop
pushf
jmp
mov
fmuls
cltd
jg
xchg
or
add
adc
pop
int
test
stc
and
lret
dec
mov
xor
mov
fcmovnbe
loop
loop
movsb
out
xor
mov
xlat
push
adc
mov
lret
push
sub
dec
lret
xchg
rcll
pop
xchg
push
cmpl
dec
aam
in
or
push
lea
dec
mov
lock
xlat
adc
push
out
adc
hlt
les
es
insb
add
jne
mov
sbb
push
out
nop
sbb
add
ret
fstpt
xchg
xorb
inc
mov
jl
or
push
xchg
std
xor
add
shl
fnstsw
fcoms
sahf
pop
aam
fistps
push
or
pop
flds
push
lret
push
xchg
nop
fcoms
mov
sbb
ret
pop
pop
sub
test
mov
cmp
or
ljmp
mov
dec
ficoml
mov
sarb
je
test
xchg
push
push
mov
rcll
int
les
dec
in
dec
cmpsl
dec
mov
sbb
fstpt
mov
pop
dec
lret
adc
setno
ja
inc
add
pop
xor
mov
mov
or
and
sbb
sar
cld
add
adc
pop
setp
mov
dec
push
adc
cmp
hlt
push
hlt
je
or
pop
enter
test
jl
cmp
xchg
or
push
push
and
mov
mov
leave
push
jbe
ss
outsl
jg
das
xchg
mov
out
jns
jge
push
adc
arpl
aam
or
mov
shrl
and
jo
mov
pop
or
lcall
int3
shrb
jecxz
or
push
pop
out
jle
push
or
andl
push
lods
sbb
mov
aas
and
enter
add
pop
mov
cmc
loopne
arpl
xchg
push
dec
cmp
cwtl
or
inc
sbb
sbb
xchg
push
mov
ret
lods
push
lods
jae
or
and
cmp
or
and
mov
out
pcmpeqw
adc
ja
jmp
jmp
jns
push
xchg
cmpsl
xchg
fdivs
pop
push
xchg
mov
aam
dec
sbb
dec
ds
dec
bound
inc
xchg
add
mov
inc
xchg
dec
aam
push
xchg
je
pop
sub
push
mov
and
enter
jge
jge
adc
or
aam
inc
and
pop
adc
fnstsw
or
jle
mov
les
int3
mov
inc
xor
and
or
or
push
enter
xchg
mov
cltd
push
jg
arpl
dec
mov
xchg
jecxz
push
xlat
or
in
fisubrl
inc
pop
mov
lret
insb
je
sub
push
adc
mov
dec
xor
dec
aam
loopne
pop
add
shll
shll
push
aam
mov
sarl
mov
mov
mov
or
into
push
sarl
dec
adc
adc
add
adc
or
xchg
or
out
dec
push
xchg
sbb
leave
daa
and
fsubrs
cmp
aam
loope
loop
jne
int3
adc
push
insl
jmp
cmp
or
or
xchg
dec
cld
xchg
and
adc
push
mov
jge
push
push
mov
iret
push
xchg
sub
scas
je
dec
xchg
mov
mov
test
outsl
mov
dec
nop
dec
push
rcrb
imul
fcoms
jae
cltd
mov
push
xor
or
leave
push
mov
xor
scas
outsl
or
sahf
iret
add
femms
jne
pop
adc
leave
rclb
loop
adc
roll
js
add
push
aam
push
lock
jge
pop
iret
fsts
das
movb
xchg
inc
je
bnd
mov
and
xor
mov
lgs
xchg
in
outsl
rcll
xor
dec
pop
xchg
popf
repnz
fstps
or
jnp
add
int
in
or
jne
rorl
scas
xchg
jle
mov
setle
adc
cltd
push
sub
outsb
je
and
cmc
movsb
jg
xchg
push
lea
adc
fsts
xchg
rclb
in
jne
sbb
cwtl
or
mov
mov
pop
adcb
pop
rcl
sub
bnd
push
inc
lahf
or
xchg
pop
fsts
aam
sub
push
cs
in
and
add
pop
xlat
sub
pop
fld
add
addl
out
test
or
cmp
test
mov
lcall
cld
mov
adc
mov
call
ret
adcl
pop
pop
out
xchg
fmuls
pop
dec
mov
adc
cmp
mov
pushf
rcr
xor
xchg
mov
mov
cmp
leave
nop
shlb
dec
push
rorb
out
push
in
xchg
jmp
mov
loop
mov
push
cltd
dec
sbb
push
sbb
adc
push
pop
notl
lcall
dec
iret
stos
std
and
sub
add
sbb
cltd
xorb
pop
adc
sbb
pop
cmpsl
cmp
push
sbb
pop
stos
adc
xlat
push
cwtl
xchg
push
scas
pop
jge
mov
or
pop
mov
dec
pop
cmp
inc
lock
dec
arpl
ficoml
push
xor
loop
rolb
mov
into
push
cmp
or
pop
xchg
out
push
aam
aaa
dec
or
ljmp
out
adc
mov
mov
fdivrs
inc
cmp
test
adc
jle
sbb
scas
mov
push
xchg
or
cli
mov
in
dec
inc
data16
and
cmp
mov
mov
pop
and
xchg
mov
leave
iret
int3
setp
shll
adc
mov
push
dec
mov
arpl
push
mov
loope
sbb
xchg
add
loop
pop
ret
cltd
or
mov
pop
mov
mov
adc
xlat
fidivrl
test
jne
push
xchg
push
mov
sub
leave
sub
push
jb
push
ja
loop
mov
gs
dec
dec
push
push
jns
adcl
out
push
shrl
lcall
sub
mov
outsb
in
adc
mov
fisubrl
movsb
push
xchg
mov
dec
ss
and
mov
lret
dec
xor
addr16
adc
push
les
push
clc
dec
in
mov
or
rcrl
push
mov
pushf
or
aam
mov
xchg
in
fcomp
jle
sarl
fadds
mov
outsb
mov
repnz
out
sub
adcl
outsb
mov
mov
les
sub
push
out
push
sbb
mov
addr16
pop
or
or
adc
fcoms
aam
dec
mov
push
mov
ja
and
push
xlat
dec
sbb
addr16
test
push
and
xchg
pop
fwait
int3
ljmp
dec
push
xchg
xchg
jmp
es
inc
outsb
rclb
imul
adc
aaa
shrl
mov
mov
lds
sbb
lret
push
push
fstps
and
push
or
dec
pop
dec
sbb
mov
inc
adc
movsl
add
adc
adc
fistl
cmpsb
ret
cmp
xchg
inc
loope
xchg
lret
xchg
mov
dec
mov
addr16
nop
pop
out
notb
jle
xlat
or
mov
adc
jg
or
mov
scas
enter
jle
dec
rcll
cmpsb
clc
pop
push
inc
or
xchg
sub
in
jmp
pop
dec
jl
sbb
lods
jle
lret
sahf
and
sub
mov
mov
mov
loop
rcrl
xchg
movl
hlt
cmp
pop
in
xchg
cmp
iret
ja
int3
shll
movsb
push
push
jns
mov
or
test
fidivrl
mov
aaa
xchg
cltd
cltd
iret
dec
mov
inc
fwait
push
sub
pop
iret
out
call
jle
sub
shlb
insb
adc
js
test
fmuls
mov
push
rol
mov
rorl
cmova
mov
pushf
sbb
int3
xor
push
mov
jge
or
push
nop
push
mov
fcomp
enter
or
dec
xchg
mov
aam
sbb
adc
sbb
pushf
push
and
mov
and
or
rcll
or
data16
decb
adc
push
int3
jo
rclb
push
gs
xchg
push
xchg
mov
push
dec
dec
and
fmull
and
cltd
cmp
mov
call
and
and
int3
mov
fiaddl
cltd
adc
mov
test
mov
mov
add
push
mov
pop
push
push
test
and
xlat
lret
push
mov
pop
or
push
subl
inc
cwtl
lret
ja
xchg
lret
es
adc
adc
xchg
or
sbbl
jnp
les
cmp
in
adc
es
aam
jg
jg
mov
inc
xor
push
dec
sbb
push
jle
or
mov
ja
jle
testb
adc
hlt
rorl
adc
sub
popf
cwtl
pop
enter
push
sbb
clts
adc
xchg
or
pop
lock
mov
outsl
mov
shll
push
fstps
lea
adc
jg
mov
mov
lret
hlt
dec
add
cmp
push
test
loopne
and
xchg
int3
lcall
std
loope
movsl
jo
cmp
cmp
lahf
sbb
dec
jle
lret
rol
outsb
mov
jae
les
mov
pop
dec
loop
pop
fdivr
sub
scas
jmp
sbb
in
jmp
test
xchg
dec
fisttps
loop
push
jno
out
imul
adc
or
xlat
pop
leave
cli
ds
stos
add
xor
mov
jns
dec
and
adc
sbb
pop
dec
jp
sub
hlt
std
lret
stos
nop
dec
xchg
shrb
call
pushf
ja
adc
sti
cmpb
std
cmp
xor
xchg
pop
lret
push
sbb
in
popl
pop
mov
push
adc
mov
fadds
push
sbb
mov
pop
or
mov
sub
jnp
int
dec
je
xchg
arpl
inc
dec
push
ds
lret
jbe
adc
or
adc
cmpb
xchg
lods
loope
pop
xchg
inc
rcl
mov
mov
pusha
andl
sbbb
mov
ret
add
mov
push
dec
inc
flds
cs
jnp
add
fs
xchg
ljmp
inc
out
mov
mov
mov
add
fwait
push
jnp
add
xlat
cmp
out
sbb
or
mov
sbb
cwtl
push
test
pop
aaa
out
push
out
adc
xlat
dec
xchg
xor
in
pushf
sbb
cmpsl
call
rclb
daa
push
xchg
inc
ss
xlat
mov
mov
out
jne
sbb
inc
rorl
and
jno
out
enter
jne
mov
int
or
rcl
mov
sbb
sbb
shlb
cmp
leave
push
addr16
out
mov
push
iret
inc
mov
inc
ficompl
sbb
clc
push
mov
xchg
fwait
xchg
rcl
cltd
test
out
sbb
inc
bound
cmp
or
pop
or
xor
xor
js
sub
jle
addr16
ss
adcl
push
xchg
jmp
aas
adc
mov
or
mov
shl
jle
addr16
lods
sub
hlt
add
push
add
jne
test
call
push
repnz
and
mov
ljmp
dec
notb
pusha
rorb
test
bound
jle
cmp
into
adc
shrl
inc
adc
pop
mov
dec
lcall
popf
adc
xorb
xor
lods
dec
pop
mov
inc
std
icebp
mov
js
mov
iret
mov
addr16
xorb
ss
jp
adc
or
push
aam
push
sbb
pushf
jle
push
cmp
gs
out
loope
lahf
push
sti
jle
int3
mov
ret
call
ja
adc
mov
jp
out
jle
mov
lock
jb
adc
out
mov
jle
out
stc
in
adc
or
lret
xchg
nop
mov
push
inc
mov
or
dec
cwtl
lds
mov
cmp
shlb
or
cltd
dec
pop
dec
outsb
repz
scas
jnp
pop
leave
mov
adc
testl
rclb
mov
sbb
sub
xor
popl
mov
cs
or
adc
pop
dec
sbb
pop
sti
jle
scas
sub
sbb
mov
jnp
push
mov
push
aam
bound
xchg
xchg
repz
cmp
nop
out
enter
inc
arpl
and
punpckhdq
sbb
mov
sub
jnp
rcr
push
lret
scas
xchg
pop
mov
push
cwtl
pop
push
fisubrl
jne
jg
or
fs
mov
popa
daa
jl
daa
adc
iret
or
xchg
dec
pop
push
xor
cmpsb
dec
enter
lret
push
inc
lods
sbb
movsl
lea
ja
xchg
mov
fidivrl
jge
push
push
jnp
push
or
lret
cmpsl
leave
jge
iret
arpl
sbb
je
mov
inc
dec
fsubrs
fstpl
pushf
mov
loope
dec
iret
inc
or
int3
cld
or
cmpsl
add
pop
push
mov
cmpsb
or
cmp
xchg
pop
or
xchg
xchg
int3
pop
adc
rclb
scas
mov
in
push
push
orl
in
sbb
mov
rclb
push
nop
fsts
das
jecxz
cltd
clc
or
jle
xor
mov
imul
adc
inc
test
rorb
leave
mov
popf
push
xor
xor
jns
loopne
push
fsubs
cld
mov
sahf
push
adc
dec
aam
fsubrl
fisubrl
rcll
lret
push
mov
fmulp
xchg
faddl
lret
mov
shlb
xchg
push
pop
loopne
and
or
aam
in
insl
adcb
push
adc
or
enter
xor
in
cmp
rorb
cwtl
mov
and
add
pushf
dec
mov
xchg
rorl
push
pop
add
mov
dec
dec
lds
push
xchg
lods
bound
fxch
cld
jnp
jno
stos
push
cmp
xchg
adc
pop
fisttpl
int
xchg
and
rclb
fadd
je
cltd
decb
push
in
insl
ret
add
jne
dec
adc
xchg
or
stos
arpl
push
adc
jecxz
pop
xchg
mov
adc
mov
jno
fcoms
adc
in
seto
loop
jmp
add
push
leave
inc
pop
sarl
or
dec
push
iret
fcom
push
dec
lea
or
xchg
rorb
pop
iret
add
dec
dec
leave
mov
and
popf
pop
push
mov
push
inc
ja
cmpl
dec
or
xchg
fmuls
mov
dec
aam
jp
xchg
aad
adc
push
ljmp
xchg
leavew
adc
and
lret
or
sbb
adc
into
das
and
mov
mov
leave
ret
addr16
or
jl
push
int3
lahf
rorb
notl
adc
sarl
dec
pushf
lret
iret
inc
loop
adc
cltd
xchg
mov
push
test
xchg
ret
sub
adc
dec
iret
and
leave
push
push
push
insb
shll
dec
dec
int3
mov
lret
push
or
pushf
mov
test
adc
pop
jp
pmaxub
idivl
mov
lret
enter
pusha
dec
imul
mov
push
pop
lds
push
dec
pop
loopne
pop
mov
xchg
add
test
or
mov
ret
mov
loope
dec
push
inc
push
xchg
lret
popf
lret
push
push
int3
leave
add
int3
addr16
fcom
mov
xchg
or
bound
adc
frstor
xchg
arpl
add
jo
fmuls
nop
int3
xor
fcmovbe
dec
addr16
or
rcrl
je
add
dec
and
add
adc
mov
pop
iret
adc
push
xchg
xchg
xchg
int3
fcom
scas
xchg
popa
rol
xorl
xchg
pop
movntq
dec
push
pop
pop
cltd
fwait
push
aas
test
js
xor
dec
lds
adc
xchg
ja
xchg
mov
mov
or
adc
pop
callw
mov
sbb
push
dec
push
rorl
push
popl
pop
lcall
adcl
jns
cltd
xchg
mov
and
dec
jmp
xchg
and
dec
xchg
inc
sar
inc
push
mov
xchg
arpl
cmpsl
loop
out
popf
test
outsb
arpl
push
bswap
and
insb
or
pushf
rcl
std
and
adc
push
xchg
bndstx
jo
movsb
fimull
pop
xor
lahf
insb
outsl
iret
rolb
dec
cmpsb
leave
cmp
pop
xchg
ficoms
ret
fldenv
shlb
adc
push
gs
cltd
adc
lock
pop
mov
sbb
sbb
or
xchg
jmp
fcoms
std
gs
xchg
lret
fiaddl
ficomps
es
aaa
inc
push
or
adc
mov
mov
fldenv
dec
cwtl
rorl
jp
inc
lret
pop
mov
jge
dec
push
pop
cwtl
push
xchg
cltd
push
push
mov
movsl
loopne
adc
sahf
fldl
adc
adc
lret
outsb
loope
gs
lret
xchg
xchg
rclb
mov
rcrb
push
or
xchg
adc
push
jns
enter
clc
or
aaa
jmp
cmp
pop
mov
mov
xchg
mov
add
lea
cltd
dec
inc
dec
adc
dec
cmp
xorl
adc
push
mov
dec
pushf
enter
xchg
lret
mov
nop
test
adc
or
sbb
push
inc
push
test
ret
jl
adc
loop
push
cs
push
xchg
xchg
loop
dec
mov
pop
adc
nop
jno
xchg
inc
fbld
adc
adc
xchg
add
int3
dec
addr16
nop
mov
pushf
ficoml
and
pop
dec
movsb
and
dec
popf
gs
gs
adc
or
mov
outsl
sbb
dec
in
push
in
mov
push
sahf
inc
mov
mov
lods
out
push
cmp
and
and
xchg
loopne
stos
loop
adc
fnstcw
mov
mov
ficompl
fstl
lock
lea
dec
ja
xchg
sbb
enter
xor
sub
je
rclb
push
dec
nop
and
push
pop
xchg
xchg
jno
mov
dec
enter
fstps
pop
mov
fisttps
inc
outsl
add
mov
pop
addr16
outsl
sahf
xchg
cwtl
imul
inc
xchg
adc
lea
sbb
push
push
pop
stos
and
pop
movsb
dec
enter
rcrl
jne
mov
xchg
push
inc
inc
push
adc
sbb
mov
fnstsw
fimull
or
mov
pop
aam
mov
ds
and
or
out
movsb
je
sbb
pop
push
or
add
jg
mov
mov
mov
sbb
mov
sub
inc
pop
imul
enter
push
xor
add
or
pop
ret
je
je
gs
adc
push
xchg
adc
lret
lret
aam
ret
push
adc
fimull
loope
call
lcall
in
xchg
dec
notb
push
ja
xor
pop
lret
lock
fwait
dec
dec
mov
push
ss
and
push
dec
fstps
lcall
adc
sbb
insl
sub
adc
enter
or
jns
leave
cmc
sbb
insl
adcb
jmp
lret
setb
pop
inc
cmp
xor
jae
leave
dec
jl
pop
lret
jbe
fwait
sbb
loope
dec
rclb
and
xor
je
test
sarb
and
loop
dec
or
dec
ret
mov
es
xor
push
outsl
xchg
mov
imul
mov
mov
repnz
cmpsl
mov
xchg
or
add
push
shll
imul
sub
lret
sub
xchg
dec
cwtl
cs
add
out
push
pop
adc
push
gs
dec
xchg
push
adc
cltd
push
or
mov
and
xchg
push
fs
fimull
shl
xchg
and
pop
iret
subl
data16
add
fsub
or
fs
das
fxch
xchg
movsb
and
dec
push
lret
loopne
sarb
cmc
add
push
ficoms
jecxz
push
or
inc
loop
adc
cmp
lret
addr16
shr
dec
mov
sbb
sahf
pop
mov
mov
push
cmp
dec
push
sbb
xchg
mov
in
loope
shr
or
dec
ret
sbb
test
hlt
xor
js
movsl
dec
std
push
and
mov
add
jge
mov
push
je
inc
mov
push
ljmp
test
push
push
or
inc
enter
sbb
gs
push
adc
xchg
js
fsubrs
jno
int3
xlat
mov
and
or
ja
mov
shll
fsts
dec
pushf
pop
pop
xchg
cmp
cmpl
in
push
lcall
mov
add
aam
lock
xchg
test
push
xchg
or
pop
and
or
xchg
push
loope
rclb
xchg
arpl
adcb
rcl
xchg
gs
or
xlat
or
aam
lret
movsl
sahf
xchg
adc
imul
sbb
hlt
jo
in
mov
jmp
dec
cs
dec
inc
dec
lret
fstps
lock
sub
adc
or
push
dec
dec
dec
adc
loop
xchg
mov
shrl
test
dec
cmovns
test
mov
adc
fwait
fwait
push
xchg
add
cmp
pop
inc
mov
push
int
ja
pop
lret
lahf
or
push
popl
and
popf
arpl
dec
and
add
adc
dec
iret
pop
jecxz
lret
xor
adcl
in
seta
loope
xchg
xchg
jg
ds
flds
cltd
jg
scas
jle
fstl
sub
repz
movd
push
into
jbe
loop
push
iret
ret
shlb
xchg
rolb
dec
or
pop
add
sub
jecxz
rcll
int3
xor
pop
jno
roll
jle
nop/reserved
or
cwtl
dec
aam
jecxz
scas
jecxz
xchg
das
add
adc
or
stos
mov
inc
lret
push
dec
roll
rclb
div
jnp
movsb
mov
cltd
mov
xchg
sub
xchg
adc
pop
or
jle
cltd
iret
addr16
jns
push
pop
mov
dec
nop
pushf
push
pop
sub
mov
push
mov
dec
xor
rcrl
mov
cwtl
push
pop
fs
inc
sub
or
mov
or
movups
push
adc
int3
in
fcoms
sub
fwait
dec
adc
or
dec
jg
jg
sub
or
or
mov
fsubrs
push
lret
push
inc
jb
int3
push
mov
sbb
shlb
pop
rdpmc
lea
sub
sbb
inc
push
int3
or
hlt
dec
or
xchg
dec
leave
fcom
popf
xlat
pop
in
out
test
pop
push
mov
pop
int3
or
pop
fstl
and
fsts
lods
fisubrl
mov
or
jne
rcll
pop
sub
sbb
aam
mov
bound
or
punpckhwd
jbe
in
dec
push
inc
arpl
ret
aam
push
jecxz
adc
es
dec
mov
mov
mov
and
xchg
push
fisubrl
subl
and
mov
inc
aaa
jmp
or
cwtl
add
pop
cmc
nop
aam
inc
addr16
jge
adc
fs
punpckhwd
push
pop
fiaddl
scas
push
flds
in
adc
adc
or
and
or
fsts
mov
sbb
xchg
jno
xchg
cbtw
inc
jbe
and
sub
jmp
sub
andl
lret
inc
leave
pop
push
inc
cmpsb
push
inc
lock
test
cwtl
leave
dec
js
xchg
dec
std
fmul
mov
cld
pop
shll
and
leave
imul
push
jo
dec
mov
clc
mov
rorl
dec
push
aam
in
js
xchg
popf
mov
sbb
inc
nop/reserved
mov
pushf
mov
inc
inc
and
dec
sar
mov
lret
mov
dec
sbb
push
push
dec
mov
xor
mov
lea
xor
dec
test
into
dec
pop
inc
lods
icebp
jne
adc
add
or
jge
xlat
mov
mov
imul
and
adc
pop
xchg
jl
jecxz
xchg
movsb
das
pop
je
test
jl
leave
stc
mov
sbb
xchg
mov
xchg
sbb
enter
inc
or
imul
fs
rolb
fidivs
mov
ds
xchg
andl
mov
or
dec
push
fmul
shrl
imul
xchg
push
pop
xchg
push
xor
xchg
rdpmc
lret
pushf
jb
movsl
dec
jl
sbb
sub
insb
lret
dec
jns
or
mov
fimuls
pop
movsl
call
mov
push
mov
adc
xchg
test
addr16
shrb
adc
lods
xchg
imul
sbb
pop
call
jbe
mov
loop
push
cmpb
loopne
fcmove
and
cmpsb
insl
paddq
xchg
dec
xchg
rcl
inc
xchg
jle
pushf
adc
icebp
int3
sbb
dec
popf
jns
cmpsb
faddp
xchg
adc
pop
iret
push
mov
or
fsubp
adc
negl
push
xchg
loop
iret
mov
mov
inc
lcall
cmpsl
test
or
addr16
int
and
xchg
xchg
push
or
mov
push
mov
mov
dec
sbb
hlt
xor
dec
in
nop
mov
dec
movsb
leave
adc
jno
mov
mov
sahf
jecxz
psrlw
popf
pop
lret
mov
add
mov
adc
pop
fsts
pop
adc
jns
inc
popl
push
fisttps
jmp
pop
movsl
insb
push
cmp
add
fidivl
cltd
xchg
pushf
xchg
in
mov
pop
lcall
pop
jle
mov
xor
mov
loopne
push
fcomp
push
fwait
je
sbb
and
stos
adc
test
push
xchg
sbb
ljmp
iret
inc
std
pop
xor
and
adc
cmp
or
loopne
dec
cltd
jecxz
pop
push
pusha
xchg
xchg
ljmp
imul
dec
push
inc
cltd
lea
jg
xchg
adc
gs
push
leave
adc
dec
fadds
or
divl
mov
mov
cmp
ja
cmpsl
ja
and
pop
dec
rcl
dec
lods
pusha
addr16
mov
ja
inc
or
mov
stos
shrl
xor
dec
dec
adc
hlt
xchg
mov
loop
jecxz
or
mov
adc
pop
dec
test
sub
rclb
pop
push
fisttpll
shrl
xor
loopne
mov
sub
cs
addl
pop
xlat
sahf
gs
in
loope
inc
rcll
notb
add
pop
out
xchg
and
and
dec
mov
push
inc
popl
dec
test
imul
sbb
pop
leave
or
inc
iret
or
popf
inc
or
enter
push
xchg
gs
dec
push
pop
xchg
mov
jns
and
push
xchg
lahf
std
clc
xchg
mov
roll
in
xchg
jl
je
mov
dec
mov
and
or
int
rcll
adcl
mov
in
mov
stos
cmp
cmpsl
push
xchg
mov
cwtl
mov
in
iret
leave
push
inc
add
push
jne
or
dec
cwtl
notl
or
xchg
push
rolb
std
loopne
push
inc
push
lret
mov
pop
pop
xchg
or
jg
pushf
xlat
roll
push
dec
or
or
and
arpl
push
nop
aam
insl
leave
mov
fists
pop
and
dec
out
cmp
push
jg
mov
mov
dec
inc
xlat
es
mov
push
push
cmpsl
arpl
ficompl
fsubrs
adc
push
cs
aad
adc
xchg
fiadds
push
rclb
add
adc
call
popf
and
mov
pop
shrl
idivb
hlt
inc
mov
pop
xchg
xchg
jbe
enter
push
movsl
mov
pop
mov
or
arpl
aam
sub
dec
rorl
xor
and
xchg
sbb
push
shrl
jecxz
adc
lcall
cmc
adc
leave
lret
imul
pusha
adc
pusha
dec
adc
xchg
mov
xlat
pop
dec
adc
pop
cmpsl
aaa
aam
sub
push
out
dec
or
rclb
mov
add
pop
adc
jp
push
mov
out
pop
dec
pextrw
dec
dec
rcll
les
rcll
dec
push
xor
sbb
or
dec
int3
jb
enter
xchg
fisttps
dec
loopne
fbstp
imul
mov
xchg
xchg
js
loope
loope
or
loopne
and
dec
fstps
pushf
pop
inc
ja
dec
cmp
jne
lcall
aam
adc
mov
sahf
adc
imul
lcall
sbb
outsb
insb
arpl
adc
inc
sbbl
mov
add
xchg
fld
loop
loop
in
push
pop
mov
ret
xor
push
xchg
pop
sbb
mov
push
aam
jl
cltd
or
xchg
or
fstl
xchg
or
bound
mov
xchg
sti
add
sbb
inc
adc
cltd
pop
or
sub
sbbl
pop
mov
rclb
arpl
pop
pushf
add
pop
es
push
pop
sub
mov
sahf
adc
and
pop
loopne
and
shll
popa
push
iret
pop
popf
movsb
sbb
adc
xchg
iret
and
aam
xor
jle
xchg
nop
mov
xlat
rorb
adc
xchg
inc
sahf
sbb
sahf
mov
gs
lret
push
mov
ljmp
jmp
jge
or
sbb
rorl
mov
dec
inc
lret
ret
and
dec
jle
lret
in
fdiv
repz
popa
sarl
lret
and
roll
sbb
mov
pop
xchg
push
jp
arpl
enter
sbb
jecxz
pop
mov
xchg
push
xlat
xchg
or
adc
pop
sub
sub
pop
or
and
push
insl
jnp
xchg
inc
int3
push
rcr
mov
cmp
cmp
mov
mov
rcll
xchg
fs
adc
cmp
insl
or
dec
mov
jle
sbb
dec
push
dec
nop
insl
dec
mov
xchg
movsb
sbb
ja
shl
and
dec
adc
or
pop
lcall
shll
push
xchg
rclb
ja
enter
sbb
enter
inc
fnstcw
aad
pop
adc
mov
xchg
push
dec
and
lret
iret
sbb
enter
movsb
nop
dec
mov
imul
push
movl
mov
mov
push
je
xchg
jp
popf
cmp
adc
push
lcall
xchg
in
push
loopne
cli
sahf
call
cwtl
dec
dec
or
push
or
mov
fcomps
mov
lods
ret
or
push
fdivs
push
adc
or
decb
or
xor
cmp
pop
or
fidivrl
mov
das
push
sti
jb
sbb
sbb
shll
push
or
xchg
arpl
mov
dec
cmp
jge
clc
hlt
dec
int3
xorl
pop
nop
adc
dec
mov
cwtl
fwait
mov
es
aam
les
or
dec
mov
xchg
adc
push
add
lret
gs
xchg
push
rclb
or
or
iret
insl
rcll
pop
jle
push
or
push
les
aam
fwait
mov
nop
and
test
mov
and
jg
lcall
dec
popf
mov
nop
repz
aam
aad
mov
push
xor
adc
add
push
jl
sbb
dec
ja
xchg
inc
pop
dec
iret
xchg
nop
in
dec
sbb
pop
xchg
fcmovb
mov
call
ljmp
pop
pushf
mov
lret
xchg
test
pop
sbb
pushf
int3
movsb
sbb
loopne
mov
push
jmp
rclb
fsubs
xchg
out
lret
sbb
push
adc
pop
mov
cwtl
icebp
or
mov
enter
dec
addl
push
and
int3
leave
or
adc
rol
jmp
adc
cmp
xchg
push
cmpsl
aam
lock
or
push
dec
jns
xchg
sbb
in
adc
outsw
jl
loopne
and
inc
test
or
xchg
nop
cld
out
ror
push
pop
les
and
lea
jge
or
cmc
fldl
jne
lret
xchg
xchg
pop
sub
mov
inc
ja
cld
xchg
pop
push
shlb
adc
in
loope
rcr
pop
pop
mov
mov
or
push
cmpsb
xchg
imul
push
leave
call
fcom
pop
xchg
imul
mov
or
ret
in
mov
dec
mov
decb
mov
dec
rcl
adc
adc
pop
loope
mov
xchg
nop
add
pop
mov
leave
xchg
adc
push
lret
jns
or
pop
xchg
jne
lret
fmuls
mov
sbb
arpl
dec
lret
lds
mov
or
aam
push
or
leave
lods
dec
shrl
stc
pop
dec
push
mov
jmp
nop
xchg
mov
mov
and
mov
xchg
int3
push
enter
inc
push
ljmp
xlat
fstl
repnz
xor
psrlw
nop
call
adc
lret
xchg
enter
inc
xchg
roll
loopne
push
loop
xchg
jecxz
or
hlt
out
ret
cwtl
and
xchg
sar
inc
cltd
add
fists
push
xor
rorl
les
pop
je
mov
pop
push
outsb
push
aam
push
pop
adc
sbb
out
pushf
fs
mov
xor
enter
rclb
or
jle
adc
adc
mov
insl
xlat
dec
int3
xor
xchg
enter
push
mov
ret
bound
nop
out
into
pop
int3
xlat
in
sub
and
rcr
pop
hlt
outsl
les
xchg
out
outsl
cltd
push
sbbl
pop
mov
arpl
cvttps2pi
xchg
or
mov
shrd
dec
xchg
xchg
or
bound
xchg
mov
popf
sub
and
pminub
popf
nop
xchg
sub
fldenv
pop
mov
mov
sbb
push
loopne
pop
sbb
push
lret
in
ja
xor
loop
pop
add
lret
les
push
adc
cltd
xchg
rcll
xchg
inc
pop
mov
mov
in
mov
cmpsl
ljmp
and
push
dec
inc
cwtl
cmpb
sub
jecxz
sti
dec
jle
pop
push
mov
pop
out
nop
pop
pop
jl
jl
mov
adc
pushf
leave
iret
pop
push
xlat
fidivrl
andl
loop
push
adc
stos
lcall
and
mov
cmp
arpl
or
adc
fistpll
cli
fstl
dec
sbb
jp
xchg
loope
inc
rcrb
dec
and
lds
insb
push
movsl
stos
dec
das
push
and
pop
icebp
fsub
push
xchg
xchg
aam
jge
adc
push
leave
mov
pop
adc
mov
and
lret
pop
push
mov
push
cmp
fwait
push
or
out
pop
movsl
inc
sti
mov
loopne
bound
jmp
mov
pop
rcll
xchg
flds
fcoms
mov
cltd
fisttpll
rclb
push
push
pop
pop
movsb
cmc
adc
loop
dec
push
loop
adc
mov
jg
movsb
lret
dec
adc
push
test
push
mov
and
or
fsts
into
dec
je
test
push
iret
xchg
sahf
adc
unpcklps
inc
lret
mov
jge
cwtl
dec
test
xchg
or
dec
popl
dec
push
push
xorl
addl
xchg
xchg
mov
fwait
adc
cmpsl
nop
movsl
xor
add
xchg
push
andb
mov
lret
pop
xchg
xchg
sbb
push
and
jle
push
dec
fstpl
pop
adc
mov
push
mov
popf
jge
nop
aam
dec
or
dec
jb
xchg
fs
mov
adc
add
pop
aam
jle
sub
dec
dec
enter
pop
adc
adc
push
inc
inc
push
ret
fs
lret
enter
jle
dec
xchg
sub
dec
push
or
shll
push
xchg
cs
cwtl
daa
cltd
ror
arpl
push
ret
inc
sbb
lret
out
jns
push
xor
out
push
test
sub
pop
dec
xor
pop
dec
push
imul
dec
cmp
or
orl
adc
adc
rorl
test
dec
fldcw
or
adc
or
mov
mov
cltd
push
or
jne
adc
adc
test
sbb
push
rcl
dec
pop
in
iret
push
lret
push
aam
xchg
loopne
cwtl
push
jge
or
cltd
push
inc
popl
movsb
dec
fmuls
xlat
and
daa
or
add
scas
dec
sahf
xor
push
jg
and
or
std
cmc
dec
fcomi
outsl
mov
mov
dec
xchg
mov
jbe
into
movsb
jne
aam
lret
xchg
xlat
out
adc
div
jge
fnstcw
gs
pop
outsb
rcll
push
fists
cmp
xchg
adc
xchg
push
pop
movsl
stc
xor
fs
push
enter
dec
inc
or
xchg
xor
xchg
pop
add
or
mov
push
jmp
push
mov
adc
outsl
dec
cwtl
push
aam
imul
stc
xchg
call
rorl
xchg
test
ret
mov
jmp
mov
adc
xchg
dec
sub
mov
into
dec
sub
ss
int
int
push
jge
pop
dec
cmp
mov
push
rclb
in
lahf
dec
leave
dec
cmc
adc
cmpsl
and
or
or
add
adc
or
cld
insb
dec
shll
test
push
insb
push
fs
xchg
popl
sbb
in
add
adc
adc
call
out
out
jo
cmc
cmc
lds
xlat
dec
rorb
lock
xor
lret
push
push
mov
in
cmp
add
dec
cltd
sub
xchg
dec
mov
push
ja
mov
xchg
int3
push
mov
popl
push
leave
es
div
sub
pop
adc
inc
inc
jle
push
pop
dec
es
fwait
push
add
adc
enter
dec
test
adc
dec
inc
outsl
popa
jns
cld
nop
test
xchg
adc
int3
iretw
or
test
hlt
jae
cmp
push
sti
xchg
mov
ljmp
jnp
xor
rsqrtps
xchg
push
mov
cmp
loopne
dec
shll
dec
dec
mov
mov
insl
fimull
rcrl
out
popf
ljmp
dec
popf
dec
cwtl
rcrl
and
or
adc
cmpl
aaa
test
mov
leave
sub
adc
dec
push
sbb
xchg
pushf
push
dec
or
fstps
xchg
add
push
or
testb
lock
adc
or
mov
jno
nop
adc
xchg
leave
xchg
pop
int3
ficompl
dec
or
bswap
fwait
into
imul
push
pop
incl
jge
push
aam
mov
pmuludq
orl
jne
push
cwtl
dec
fldenv
clc
enter
mov
dec
jl
cli
mov
push
jle
test
lret
mov
xor
mov
mov
mov
push
push
mov
cld
clc
and
lock
invd
xchg
push
or
push
mov
and
mov
rorb
push
push
sahf
je
xor
mov
enter
popf
sbb
mov
mov
xchg
test
aam
xchg
or
pushf
fidivl
fwait
mov
add
xlat
dec
adc
cmovge
push
cwtl
das
gs
iret
fimull
push
or
outsb
adc
mov
xchg
xchg
mov
pusha
xchg
mov
call
push
xchg
and
aam
adc
xchg
xlat
mov
insb
lcall
inc
fstl
push
sub
imul
or
or
dec
xchg
repz
out
xchg
xchg
jl
repnz
push
push
inc
movsl
mov
push
nop
inc
fists
jmp
fdivs
fwait
xchg
and
mov
adc
pop
adc
les
or
je
test
dec
or
out
out
xchg
mov
push
imul
xchg
sbb
sub
lret
lcall
dec
lcall
cli
fstpl
cmp
lcall
ds
inc
or
dec
and
dec
lret
pop
dec
add
cmp
in
loopne
pop
fldcw
dec
lcall
mov
arpl
shl
inc
and
lret
push
lea
cmovg
jg
mov
xchg
iret
arpl
lods
pop
push
and
xchg
sbb
fldl
sub
mov
sbb
in
pushf
push
sbb
push
inc
rclb
xlat
inc
fisubs
ret
push
inc
xchg
enter
dec
out
mov
push
sbb
pushf
out
fwait
outsl
inc
jp
jae
pop
ss
cmp
mov
xchg
dec
dec
jle
jp
bound
lea
xchg
popf
rolb
leave
arpl
lcall
dec
mov
cltd
mov
das
rorl
jno
pop
mov
pop
inc
rcll
enter
mov
pushf
mov
push
movsl
or
cmpsb
dec
mov
dec
iret
xchg
xlat
pop
push
and
dec
cmp
decb
pop
add
shld
adc
cltd
xchg
push
movsb
leave
ror
je
inc
pushf
ja
mov
and
push
dec
xchg
mov
out
adc
pop
gs
push
xchg
adc
sbb
dec
mov
inc
mov
enter
jae
data16
int3
adc
mov
dec
adc
inc
lea
and
cltd
lret
mov
pushf
xchg
int3
paddusw
mov
push
dec
adc
pop
psubusb
daa
pop
add
dec
add
hlt
or
cltd
enter
push
dec
out
dec
xlat
xchg
push
pop
fstpl
inc
xchg
dec
roll
nop
movsb
push
adc
inc
adc
pop
leave
xor
push
scas
mov
dec
jo
mov
or
mov
dec
sub
setge
or
lret
inc
xchg
xchg
push
mov
enter
mov
pop
iret
xchg
lods
fstpt
xchg
sahf
dec
jne
inc
dec
or
inc
cltd
gs
pop
push
push
mov
mov
push
jle
ror
int3
pop
pop
inc
shll
mov
lea
into
nop
ja
and
pop
push
pop
pop
and
push
movsl
sbb
push
push
hlt
and
push
mov
inc
enter
adc
gs
sbb
dec
adc
cwtl
mov
lret
push
lret
addr16
xchg
roll
push
fs
xchg
xchg
nop
mov
cs
sub
push
add
dec
push
sbb
orl
xchg
test
adc
ret
lods
lods
cmp
fcoms
or
and
dec
orl
iret
xchg
lock
or
ja
or
in
or
mov
mov
lcall
mov
adc
out
mov
jb
or
xchg
nop
lret
pop
arpl
add
inc
sarb
xchg
xor
pop
sbb
push
outsb
pop
in
nop
cwtl
and
push
xlat
dec
cwtl
xchg
insl
xchg
or
sbb
insb
arpl
push
int
mov
add
mov
imul
adc
fmull
mov
mov
leave
pop
fimull
in
sub
adc
mov
cmc
dec
dec
mov
iret
fs
dec
xchg
nop
xchg
fimull
push
pop
push
ss
inc
or
fcmovbe
stos
mov
or
out
xchg
or
nop
and
rolb
xchg
stc
fnstenv
inc
mov
aad
pop
jae
xchg
push
sar
push
nop
sub
push
lods
xchg
lods
arpl
or
fcomps
push
in
repz
pop
insl
inc
leave
pop
aad
imul
push
cli
jle
aam
xor
movsl
cltd
loop
out
arpl
cmc
or
adc
xchg
cld
or
pop
push
dec
daa
push
mov
ds
sub
dec
jl
pushf
cmp
psadbw
add
in
cmp
in
pop
lret
rclb
xchg
pop
sbb
adc
push
hlt
lcall
in
cwtl
jo
arpl
arpl
push
leave
sbb
dec
mov
iret
dec
cmpsl
adc
pop
dec
rcl
jg
jle
arpl
dec
test
mov
and
or
test
mov
roll
mov
pusha
movsb
movl
iret
and
psubusw
dec
icebp
or
nop
out
mov
in
and
fsts
and
jbe
push
call
dec
adc
arpl
or
pop
and
mov
jno
dec
push
xchg
rolb
push
dec
mov
jns
adc
mov
xchg
inc
lea
ja
jg
outsl
iret
jg
orl
out
xchg
dec
sbb
xchg
lcall
mov
adc
jl
sub
cltd
shrl
mov
mov
cmp
and
dec
push
jnp
ret
arpl
iret
adc
fs
dec
ss
and
push
push
sbb
mov
hlt
fnsave
cwtl
mov
fstps
rorl
jecxz
xchg
push
dec
insl
push
dec
lret
mov
int3
sbb
xchg
dec
cmpsb
sbb
dec
pushf
mov
nop
pop
clc
jge
push
xchg
xchg
test
pop
push
loope
inc
mov
ret
and
iret
pop
fstps
push
xchg
loop
lret
pop
loopne
and
xchg
push
adc
cs
pop
mov
adc
iret
xor
lods
jp
fistl
dec
mov
push
jle
or
rcrl
cli
mov
pop
xchg
ror
jne
adc
pop
pop
or
pop
push
dec
dec
and
jmp
rclb
xchg
lret
dec
movsb
repz
mov
push
sub
cwtl
iret
xchg
inc
js
je
push
mov
push
dec
rorb
push
xchg
pop
fisttps
inc
adc
cmp
mov
loope
or
pop
lret
push
nop
inc
addr16
xchg
test
fimull
inc
dec
mov
adc
pop
xchg
or
mov
xchg
cmpsl
lea
repnz
jb
int3
jne
adc
adc
mov
adc
or
in
and
mov
push
inc
mov
jae
fmuls
cs
xor
push
pop
add
sub
push
xchg
lds
hlt
addr16
lea
sub
sub
xor
xchg
ret
dec
lds
sbb
or
insl
mov
dec
or
leave
adc
shll
rorb
adc
das
sbb
outsb
jl
push
inc
jg
xchg
fisubl
sub
popf
cli
shrl
push
jl
dec
pop
pop
divb
and
sbb
cli
pop
test
sbbl
int
inc
roll
push
pop
push
jg
insb
xchg
jns
mov
jne
dec
shll
or
pop
pop
xchg
mov
orb
mov
cltd
jle
xchg
xchg
pop
fxch
sahf
out
lret
sbb
pop
dec
adc
fs
nop
dec
or
das
adc
xchg
loop
adc
push
adc
rclb
enter
mov
loope
in
push
dec
lcall
cmpsl
cltd
loope
lret
dec
dec
fiadds
aam
jnp
and
pop
xchg
pop
dec
inc
dec
pop
mov
push
and
cwtl
xchg
adc
orb
mov
mov
jle
push
adc
les
pop
imul
imul
mov
popl
mov
pop
fwait
pop
lret
loop
push
hlt
and
das
mov
sub
push
ja
cmp
fadd
pop
cmp
call
fsts
jns
cwtl
push
sarb
lock
and
aam
pop
mov
push
loop
cwtl
in
xlat
push
addb
pop
into
pop
xchg
dec
arpl
xchg
or
sub
xor
cmp
call
sbb
in
or
cmpsl
cmpsb
mov
in
push
mov
xchg
or
loopne
mulb
cmpsl
arpl
scas
sbb
cwtl
int3
cmp
ficompl
xor
call
push
jne
pop
dec
ds
push
inc
dec
pop
ja
fistpl
push
mov
imul
dec
dec
movsb
mov
pop
dec
mov
adc
leave
adc
pop
adc
icebp
sbb
fiadds
jns
aam
xchg
sbb
mov
or
push
divb
jb
arpl
les
mov
push
xchg
jmp
or
dec
jecxz
dec
cltd
pop
xchg
pop
push
je
push
pop
push
lret
nop
push
jae
jns
enter
xor
ficompl
roll
aam
incb
fcoms
jle
cwtl
mov
adc
hlt
fcoml
aas
push
push
xchg
push
ficoml
xchg
cwtl
sub
sbb
pop
mov
dec
jg
mov
dec
aad
sub
sub
stos
pop
daa
ret
xchg
push
add
xchg
adc
xchg
sbb
add
push
push
pop
sub
inc
xchg
or
in
adc
paddsw
mov
mov
test
jns
insl
test
les
lock
add
ds
testl
bound
push
jp
ds
test
mov
sbb
cmpsb
loopne
cmpsb
and
push
stos
and
int3
add
loopne
pop
and
mov
loop
push
inc
insl
rcr
dec
or
mov
adc
dec
sbb
dec
xchg
jle
dec
dec
fidivrl
adc
pop
mov
popl
test
xchg
mov
adc
aam
push
sub
ljmp
xchg
movsb
xlat
lret
adc
enter
cwtl
inc
sbb
test
shlb
in
int3
mov
aam
insl
dec
dec
add
dec
push
es
pop
fsubs
mov
nop
rorl
jns
dec
ja
daa
dec
ret
leave
in
daa
adc
fisttpll
xchg
or
rcll
add
ror
mov
rorb
jle
and
xchg
fisttpll
adc
pop
rolb
rorl
out
xchg
decb
push
rcr
sbb
adc
push
gs
mov
mov
push
mov
lret
rorl
enter
les
lods
push
inc
icebp
sub
xor
popf
adc
mov
lret
stos
int3
andb
mov
lret
dec
loope
dec
jo
aad
jnp
mov
rcrb
imul
mov
inc
sub
push
dec
xchg
fnstcw
mov
xchg
push
mov
pop
addr16
cltd
push
sub
mov
adc
rcll
loop
cltd
lds
add
pop
xlat
adc
xchg
lret
lret
xchg
int
dec
out
push
push
adc
add
sbbl
lock
xor
xchg
and
or
mov
sub
xchg
dec
int3
add
adcb
popf
adc
mov
pop
in
int3
lret
adc
js
lcall
or
pop
mov
pop
inc
inc
shl
jo
push
add
dec
pop
push
dec
clc
out
mov
cltd
jns
lcall
lret
addr16
arpl
rcll
fisttpll
cmp
xor
mov
add
xchg
hlt
and
mov
mov
dec
mov
push
mov
iret
add
shll
fst
rcll
sub
mov
mov
rorb
hlt
or
adc
addl
mov
xchg
dec
insl
sbb
pop
xchg
push
xchg
xchg
mov
push
popf
adc
or
imul
cmpsl
mov
sub
imul
sbb
adc
adcl
dec
ret
out
xor
inc
addr16
nop
out
pop
xor
mov
shrl
lcall
mov
push
xchg
rclb
test
test
rcll
adc
pop
push
mov
push
iret
mov
shrb
popf
cmpsb
or
cmp
movsl
pop
jle
sbb
popf
cmp
push
aam
shr
mov
sbb
and
lret
fimull
push
or
mov
js
push
pop
pop
xchg
push
push
lret
loope
pop
dec
inc
lds
or
mov
ret
or
jg
cmp
out
inc
enter
addr16
jns
push
mov
dec
ja
and
jae
out
aam
sub
cmc
lret
iret
or
cs
repz
xchg
sti
mov
dec
leave
dec
rolb
jg
xchg
fimull
fstl
mov
unpcklps
push
pop
sbb
aam
jo
out
push
xor
dec
inc
mov
push
popf
repnz
out
daa
mov
ret
add
push
xchg
adc
mov
repz
lods
or
shlb
cltd
push
push
pop
fimuls
sub
addr16
xchg
sbb
adc
xchg
cwtl
push
fldenv
xchg
lret
dec
dec
mov
or
adc
mov
sub
data16
add
dec
cltd
es
jne
pop
dec
jge
cwtl
xchg
or
pop
or
and
adc
lods
xchg
ljmp
aam
inc
mov
push
lret
dec
test
fisttps
push
or
and
lea
add
movsb
ljmp
mov
pop
cwtl
int3
add
lea
mov
adc
xchg
or
add
enter
add
roll
push
js
push
cld
sbb
mov
pop
or
inc
mov
test
sbb
stc
loop
ror
sub
test
xchg
pop
cltd
xlat
iret
dec
adc
dec
xchg
dec
insb
lret
mov
mov
or
pop
push
arpl
data16
xchg
sub
push
jl
jno
push
shll
ficoml
aam
mov
sub
jo
leave
push
lret
jecxz
xchg
mov
or
push
loope
popl
rcrb
jecxz
lret
xchg
push
lret
test
arpl
cltd
leave
pop
in
adc
push
jne
push
xchg
sbb
shlb
push
mov
dec
pop
rcrb
sbb
out
xchg
mov
int3
mov
sub
mov
nop
les
or
cwtl
pop
push
push
mov
xchg
adc
cmp
adc
dec
mov
fisubs
jbe
or
mov
cs
lea
xorl
scas
pushf
jo
movsb
out
rolb
mov
aam
loop
inc
ret
dec
adc
roll
fsubs
loopne
adc
xchg
loop
int
cli
or
mov
push
or
and
lret
xchg
dec
mov
int3
mov
cmp
adc
loope
xor
xchg
sub
dec
adc
dec
enter
mov
cmpsb
sets
lods
nop
int3
mov
leave
lods
test
dec
pop
enter
cli
push
and
cwtl
mov
add
or
leave
ja
mov
xor
mov
fldl
fidivl
push
pop
mov
sub
dec
push
loop
cwtl
mov
mov
push
pushf
adc
insb
sti
and
inc
push
lret
sbb
mov
in
in
xlat
push
iret
sbb
int
sub
pushf
dec
xchg
ficompl
inc
sbb
fisttps
rclb
push
leave
xchg
clc
or
sub
cmpsl
inc
mov
xchg
cltd
iret
and
adc
test
inc
stos
enter
mov
and
fcoml
push
sarl
int
lret
push
iret
pop
or
adc
push
or
ficomps
mov
out
lea
push
sub
inc
dec
cmp
ja
sahf
push
mov
enter
lret
movsl
pop
sub
mov
aas
loop
vprotq
cltd
call
hlt
jmp
xchg
adc
or
push
sbb
loop
nop
in
push
int3
sbb
mov
aas
loop
adc
xchg
push
mov
or
pushf
fstps
dec
dec
push
rcll
jge
aam
cmpsl
mov
mov
adc
pop
mov
les
pop
push
rorb
sbb
outsb
arpl
jnp
loope
push
int3
sbb
les
outsl
repz
cmpl
lods
or
xchg
sbb
mov
cltd
rcr
insb
loop
pop
dec
mov
test
dec
xlat
addr16
cmpsb
clc
jle
or
pop
xchg
dec
or
sbb
jp
mov
pop
pop
lods
ret
dec
push
xchg
outsl
lret
int3
xchg
jo
pop
fsts
or
dec
leave
push
add
fistl
add
leave
jle
xchg
add
sti
xchg
pop
mov
pop
sbb
sbb
sbb
mov
nop
push
push
lea
mov
jbe
adc
sbb
arpl
and
dec
fsubrp
aam
repnz
or
or
mov
adc
out
iret
inc
mov
inc
push
pop
ja
repz
ret
xor
stos
mov
jne
push
cwtl
adc
jg
sbb
sbb
or
stos
mov
stos
in
hlt
or
sbb
and
mov
enter
stos
mov
adc
mov
dec
ss
xchg
or
aam
pop
lcall
pop
stc
loop
dec
and
js
lds
out
push
stc
pop
pushf
pop
sarl
lea
scas
ja
fistps
out
iret
jns
pop
lcall
repz
gs
push
inc
pop
adc
adc
movsb
insl
adc
cwtl
addr16
pop
or
and
int3
movups
xchg
push
in
mov
push
xchg
jle
sbb
loop
push
loope
mov
inc
inc
and
xor
pop
cltd
and
dec
or
lock
push
or
rcll
or
adc
mov
jmp
mov
sbb
dec
es
jno
or
fcoms
cmpsl
dec
mov
fcmovbe
sbb
mov
jo
inc
jge
dec
enter
pop
lahf
sub
lahf
sbb
or
push
and
adc
int3
xlat
mov
and
push
dec
dec
xchg
int3
cld
xchg
and
inc
cld
movsb
inc
pop
dec
mov
mov
hlt
aaa
popf
mov
leave
dec
dec
dec
add
add
icebp
pop
adc
outsl
push
pop
rcrl
data16
clc
mov
pop
lret
mov
adc
mov
nop
pop
xchg
xchg
inc
data16
push
insl
out
hlt
cmp
lahf
rclb
push
rorl
inc
adc
pop
fistl
adc
mov
enter
dec
or
ds
gs
xchg
inc
setb
inc
xchg
sbb
mov
out
mov
or
mov
ds
xchg
mov
je
xlat
push
aad
jmp
mov
pop
arpl
fs
cmpsl
clc
fstl
push
mov
xchg
xchg
scas
rorb
dec
push
test
inc
adc
inc
push
push
and
pop
cli
test
push
dec
xlat
ret
or
aam
jne
push
enter
sub
dec
or
popf
mov
mov
pop
xor
xchg
cwtl
ficoms
dec
adc
adc
mov
push
popf
pop
xchg
orb
cmp
stos
in
adc
and
push
dec
fiaddl
add
dec
rclb
or
sbb
into
push
data16
enter
dec
mov
lret
mov
pop
dec
pop
xchg
adc
pop
adc
packsswb
shlb
outsl
cli
xor
dec
pop
stos
repz
mov
sbb
pop
dec
in
setns
rorl
rolb
dec
adc
mov
dec
loopne
dec
adc
mov
xchg
lret
pop
iret
out
into
push
and
jns
adc
push
or
xor
push
pop
scas
add
adc
xor
lret
ja,pt
sub
xchg
gs
mov
dec
mov
lock
mov
or
fld
ljmp
push
push
mov
loopne
fmulp
mov
test
in
cwtl
dec
push
push
xchg
jp
adc
mov
iret
xchg
dec
jge
mov
mov
inc
nopl
xchg
sahf
aad
dec
xchg
dec
jbe
xchg
and
adc
mov
jp
and
or
sub
fnsave
push
mov
pushl
test
pop
cltd
adc
sbb
cltd
aam
popa
jp
lahf
push
or
push
stos
cltd
sti
push
jnp
xchg
leave
dec
mov
and
pop
shll
insl
into
dec
dec
push
push
pop
in
or
sub
es
xchg
push
fsubr
or
rcll
outsb
xchg
lret
les
pop
int3
adc
int
sahf
adc
jmp
pop
push
mov
xchg
dec
jnp
pop
ja
jne
dec
nop
cwtl
push
jne
rcl
adc
mov
sub
jne
or
fwait
nop
lret
jmp
dec
sbb
adc
jmp
pop
clc
iret
jne
mov
lret
nop
rclb
movsl
adcb
call
and
int3
dec
add
cmp
mov
mov
and
insb
xchg
movsb
cmpsb
ss
fs
push
enter
cmp
out
xorl
xchg
ja
jns
les
jno
rcll
sub
adc
cmpsl
xor
jg
pop
sub
mov
outsb
ljmp
dec
cs
and
mov
jmp
jmp
lcall
rcr
pop
sub
fisubl
xchg
fimull
xlat
adc
popa
lds
dec
rclb
movsl
pop
in
rorb
aam
jge
pop
push
das
iret
sub
out
push
add
pop
or
cs
mov
and
push
xchg
int
test
add
dec
push
adc
cmp
in
jbe
push
arpl
dec
jecxz
adc
or
rorb
fsts
adc
xorl
pop
mov
push
pop
push
dec
rolb
lret
jns
cs
xchg
inc
inc
push
pop
aam
or
lea
cltd
or
cli
and
xchg
and
lret
iret
inc
fadds
aam
push
push
mov
mov
je
adc
mov
pop
fisubrl
out
mov
enter
push
iret
cmp
fldenv
pop
lret
push
jb
inc
or
fwait
sbb
rcll
rorb
and
push
nop
pop
adc
push
cwtl
push
iret
imul
push
dec
mov
sbb
je
dec
cwtl
push
sbb
dec
jge
xor
add
mov
jo
test
pop
lret
dec
mov
orb
test
or
mov
xchg
jg
inc
hlt
popf
int
rorb
dec
mov
fldcw
test
ret
or
adc
lods
es
mov
nop
jns
rol
xchg
lock
push
jno
or
sub
inc
jl
cmpsl
test
punpckhwd
rorl
cmc
sbb
pop
fldl
lcall
push
rcll
les
test
xor
adc
pop
and
push
enter
or
xchg
hlt
mov
repz
push
dec
xchg
jle
decl
cwtl
sub
imul
xchg
jl
pop
arpl
aam
fiaddl
jbe
pop
mov
dec
leave
or
mov
push
test
adc
mov
fildll
nop
imul
push
xlat
fistl
pop
mov
lea
fwait
xlat
mov
lahf
movsb
adc
adc
sbb
or
call
dec
dec
mov
mov
cmpsb
fs
sbb
xor
rcl
push
stos
out
loopne
sar
sbb
adc
mov
out
mov
fs
lret
hlt
psubusw
mov
ss
dec
loop
dec
mov
repz
in
lahf
adc
or
push
adc
aad
ja
and
leave
push
sbb
js
enter
or
test
dec
inc
outsl
loop
fsubs
roll
ss
mov
dec
iret
pop
mov
aas
inc
out
repz
rorb
test
adc
hlt
push
add
dec
pop
inc
adc
and
int3
xchg
adc
movsl
lds
or
mov
cwtl
xchg
push
dec
movsb
dec
dec
mov
xchg
sbb
xchg
aaa
fwait
and
nop
cmp
fstl
xchg
stos
xor
inc
popf
stos
pop
push
xchg
sbb
mov
out
dec
push
push
stos
mov
push
adc
jnp
cmpps
sbb
pop
xchg
testb
or
pop
dec
dec
loop
in
dec
dec
sub
mov
push
stos
inc
dec
out
mov
xchg
sbb
mov
mov
xchg
push
inc
into
mov
mov
inc
xchg
cltd
xchg
inc
rcll
xor
dec
jmp
daa
push
int3
call
dec
jg
leave
rorb
cmc
sub
dec
jns
xchg
aam
loop
adc
test
adc
inc
aad
add
pop
push
gs
rclb
nop
jns
inc
test
pop
xchg
add
push
add
ror
inc
aas
int3
pop
in
rclb
sbb
or
inc
enter
push
or
push
dec
jae
lods
sarl
repz
jne
dec
or
or
pop
imul
ret
adc
sbb
dec
popf
mov
imul
inc
xchg
data16
pop
rorb
dec
xchg
dec
cltd
push
dec
hlt
jnp
push
or
xor
mov
jb
adc
shlb
rcll
enter
lret
jns
loop
rcr
sbb
cld
jmp
lcall
or
dec
push
sbb
mov
xor
fwait
leave
sub
or
xchg
scas
dec
adc
dec
fsubrs
fisubl
inc
movsb
jb
test
xlat
pop
mov
sbb
int3
pop
fistl
xchg
push
cmp
rorl
iret
inc
adcb
adc
loop
xchg
or
mov
dec
push
enter
lret
rorl
iret
xchg
dec
test
jg
out
adcl
jo
sbb
loope
dec
jge
dec
dec
mov
xchg
or
pop
push
in
jge
xchg
cwtl
rcrb
push
test
xlat
nop
mov
subl
or
lret
lret
and
and
xchg
push
enter
iret
je
jne
push
push
jge
xchg
push
jge
push
cltd
ds
or
nop
mov
pop
imul
test
lods
add
mov
or
mov
adc
jge
pop
push
in
dec
fdivrs
dec
clc
dec
adc
adc
push
roll
or
sbb
push
les
adc
test
pop
out
adcl
xchg
push
pop
loope
mov
or
out
or
fs
mov
mov
jge
fmuls
xchg
xlat
dec
and
push
loop
int3
adc
fwait
push
negl
and
xchg
loopne,pn
push
imul
ret
xlat
mov
or
or
push
incl
adc
xor
mov
mov
adc
incl
cmp
daa
adc
cltd
push
sahf
xchg
rclb
mov
flds
lods
mov
or
insl
cmp
testb
adc
push
mov
push
roll
loopne
aam
pop
movsb
or
insb
addr16
jnp
mov
xchg
push
pop
dec
adc
notb
lods
adc
xor
jae
ja
pop
lea
ja
xchg
adc
enter
adc
dec
les
pop
xorb
fimull
jg
add
adc
push
repnz
dec
in
or
add
cwtl
enter
test
xor
adc
int
mov
loopne
shll
lret
xchg
dec
sbb
lcall
mov
stos
xchg
push
fwait
adc
adcb
mov
xchg
movsl
lcall
add
inc
in
or
mov
sub
adc
mov
xchg
mov
xchg
iret
xchg
xchg
int
push
xchg
dec
jle
arpl
or
mov
or
ficoml
dec
pop
fisttpll
and
push
xor
sbb
test
nop
inc
lea
int
mov
lret
or
inc
sahf
adc
scas
leave
repz
ja
xchg
push
mov
adc
or
test
sahf
inc
xchg
xor
iret
push
mov
mov
or
jns
adc
adc
inc
jl
pop
fisttps
mov
sti
roll
mov
xor
or
out
push
dec
es
insl
xor
fsubr
pop
mov
or
sahf
push
imul
les
outsl
push
enter
or
adc
std
pop
test
sbb
jecxz
adc
add
or
sbb
mov
cmpl
push
add
adc
call
mov
imul
mov
aad
test
pop
dec
ret
stos
enter
inc
flds
loopne
stc
pop
pushl
sub
popf
jnp
inc
xor
or
je
fs
pop
mov
push
and
add
push
or
xchg
adc
or
leave
cmc
sub
push
ret
sbb
inc
cmp
jne
nop
ror
dec
iret
fists
adc
mov
push
int3
loopne
cmpsb
xor
xchg
sbb
adc
inc
aaa
inc
sbb
sarl
or
or
xor
cmp
cltd
mov
clc
xchg
sub
mov
xchg
pop
orl
inc
cwtl
fs
mov
adc
jns
nop
xchg
stos
out
push
and
iret
pop
mov
jle
and
int3
or
popf
call
cmpsl
cltd
insl
setb
loopne
rorl
jno
dec
jge
or
cmpsb
xchg
push
orb
push
cmp
xchg
xor
pop
out
lcall
jmp
enter
xchg
jnp
or
rorb
sbb
adc
sbb
dec
lea
enter
jne
dec
xchg
push
lret
popf
mov
pop
xchg
or
fisubl
xchg
aam
adc
push
nop
xchg
pop
scas
sbb
xchg
push
pop
xlat
add
aaa
fs
push
je
mov
hlt
push
shrl
movsb
mov
inc
fnstcw
fimull
mov
push
inc
je
pop
gs
ret
push
sahf
or
and
sub
sbb
rcrl
outsb
out
cmp
stc
jecxz
xchg
pop
test
pop
mov
dec
pushf
dec
aam
adc
sbb
push
mov
pop
mov
rcl
ss
daa
dec
or
hlt
mov
push
cmp
cmp
hlt
push
sbb
dec
xchg
mov
lcall
xlat
ret
pop
cwtl
or
fcoms
mov
xchg
ficompl
mov
push
popf
mov
adc
pop
mov
dec
call
pop
imul
es
push
xchg
cld
ffree
jnp
into
je
stc
adc
hlt
aam
cmp
ret
xor
fs
and
loop
dec
nop
rcl
or
mov
push
xchg
fcoms
mov
pop
cmc
fistpll
ret
movsb
nop
pop
cltd
xchg
sub
mov
sub
push
lret
push
cwtl
jle
push
sti
test
xchg
out
aam
dec
push
xchg
xor
mov
sub
ljmp
sbb
or
fwait
bound
and
xchg
dec
add
mov
push
push
push
jle
cwtl
xchg
stc
adc
fisttps
jns
or
les
fsubs
mov
dec
dec
and
dec
push
sbb
mov
sbb
pop
sbb
imul
sbb
or
packuswb
es
cltd
mov
cwtl
shl
xor
daa
outsb
mov
dec
jg
push
inc
dec
enter
icebp
test
mov
or
add
fmuls
roll
jns
cmp
mov
dec
push
mov
out
xor
cltd
or
xchg
add
push
pop
or
movsb
inc
push
jbe
call
js
imul
and
push
xor
mov
xchg
xchg
mov
jle
shlb
dec
xchg
jae
and
dec
enter
mov
rorb
rcll
or
jno
push
movsl
rep
push
nop
fiaddl
cltd
push
xchg
mov
xchg
dec
lahf
xchg
or
dec
rorl
push
xchg
or
push
fs
push
cltd
dec
stc
xor
in
sarl
and
stc
mov
mov
in
aaa
mov
lcall
pop
inc
xchg
nop
inc
and
lret
cltd
or
mov
mov
mov
inc
ss
je
int3
leave
mov
xchg
cwtl
and
fimull
ret
or
jne,pn
cwtl
pop
push
or
int
lcall
pop
pushf
das
lcall
lcall
outsb
jnp
loop
rorl
dec
adc
fsts
dec
jecxz
dec
aam
or
xchg
xchg
out
lea
cltd
or
mov
or
xchg
clc
add
xchg
push
rcrb
sub
enter
mov
cmpsl
mov
ljmp
dec
dec
mov
pop
jle
or
dec
xchg
xchg
xchg
sbb
ss
mov
adc
xchg
add
iret
rorb
fistpll
in
int3
rorl
fwait
popf
push
inc
imul
test
mov
cltd
dec
adc
mov
lahf
adc
push
dec
xlat
xchg
int3
xchg
fwait
lret
cld
or
jecxz
cmc
out
pop
mov
gs
lret
xchg
xchg
push
in
inc
add
cs
push
loope
fsts
lret
arpl
inc
pop
and
or
cmp
sti
lea
or
dec
or
push
xchg
xor
jns
mov
xchg
pop
rcrb
cltd
adc
fwait
xor
pop
dec
pop
out
rcrl
mov
xchg
dec
cltd
mov
imul
mov
push
ds
or
cmpsb
stos
ja
mov
pop
leave
or
pop
push
push
mov
das
or
adc
mov
dec
imul
mov
fisttpll
pop
xchg
pop
xchg
mov
fmuls
pop
and
outsb
adc
push
rorb
stc
xchg
out
add
popf
sbb
or
ja
sub
xor
inc
movb
jo
in
lea
loopne
or
jp
lcall
loop
pop
add
dec
or
adc
lret
and
nop
pop
fisttpl
lret
test
dec
mov
dec
pop
aam
pop
sbb
mov
pop
lret
or
pop
dec
push
out
jns
xorl
stos
inc
inc
insb
add
push
adc
arpl
les
dec
push
sbb
adc
xchg
movsl
add
xchg
dec
xchg
push
js
add
in
xchg
enter
mov
leave
ror
sbb
adc
inc
or
dec
dec
inc
mov
pop
push
cmpsb
jecxz
dec
or
shr
pop
push
and
iret
xlat
cwtl
lea
scas
test
mov
pop
add
or
out
dec
xchg
adc
jne
push
lret
xchg
fstl
sti
pop
push
pop
xlat
insl
xor
jge
enter
ret
sub
xchg
push
nop
xlat
xchg
fldt
push
xlat
xchg
xor
mov
mov
adc
aam
push
int3
cltd
xchg
pop
pop
inc
push
add
jne
dec
nop
push
push
mov
mov
cwtl
mov
adc
shll
xchg
sbb
lret
pop
xchg
push
lret
loopne
xchg
cmp
fidivl
mov
mov
je
add
or
dec
xlat
ja
pop
xchg
or
add
xchg
insb
lret
movsb
clc
sti
fisttpll
push
xor
cltd
adc
adc
mov
xchg
rorb
ret
shlb
cwtl
add
test
insl
mov
iret
xchg
mov
in
sbb
push
repnz
xor
insb
jecxz
inc
or
int3
or
icebp
lds
xchg
fnstcw
and
push
loop
iret
adc
fisttpll
xchg
fnstsw
push
mov
mov
mov
xor
cltd
fimull
dec
xchg
xchg
push
mov
xchg
push
stos
and
dec
mov
dec
jp
nop
mov
enter
or
mov
jle
or
adc
add
push
cwtl
int3
mov
jne
adc
mov
lods
jbe
xchg
popf
pop
mov
adc
rcrl
lahf
in
dec
push
leave
sub
insl
cli
fucomp
mov
push
or
mov
mov
xchg
add
adc
xchg
mulb
mov
or
sub
adc
arpl
imul
fwait
nop
lret
push
jg
inc
lea
dec
mov
dec
mov
adc
dec
cmp
push
leave
push
adc
enter
iret
jns
cmpsl
in
jns
dec
lret
push
mov
rolb
nop
push
pop
xchg
lea
add
ss
pop
mov
cmp
mov
nop
cs
push
push
jle
js
add
rorl
dec
push
push
in
cmpsb
lods
les
cmc
stos
mov
mov
or
push
jge
rclb
xchg
in
and
or
adc
cld
xchg
loopne
pop
es
rorl
fisttps
rolb
int3
movsl
add
mov
push
or
push
xchg
adc
or
lds
xchg
leave
iret
sbb
shl
dec
push
xchg
fcomps
add
clc
cmp
sti
push
sbb
pop
adc
hlt
fcoms
aam
xor
push
dec
dec
popa
jle
cwtl
dec
clc
pop
ds
shr
insl
adc
or
xchg
rorb
push
inc
movsb
gs
dec
adc
sbb
enter
push
rorb
mov
cwtl
lret
int3
ja
sbb
sbb
lods
sub
jl
adc
mov
mov
jns
sbb
popf
ljmp
rorl
fs
push
mov
aam
leave
mov
jnp
dec
mov
sbb
push
ss
idivb
in
fimull
sbb
repnz
loope
or
mov
push
adc
lret
mov
cmp
push
andl
xlat
pop
sarb
lret
inc
pop
aad
hlt
jl
loope
aas
xor
adc
and
shlb
add
repnz
mov
sbb
push
sbb
or
adc
jae
loop
mov
cltd
pop
push
push
cmp
adc
xor
hlt
lret
xchg
dec
hlt
push
push
or
orl
loopne
and
fisttpl
xchg
or
fsts
int3
imul
push
xchg
xchg
test
insl
or
jno
in
xchg
jg
mov
xchg
and
iret
rcrb
lret
dec
mov
int3
iret
and
add
or
push
arpl
leave
adc
imul
push
push
and
mov
dec
outsl
loopw
push
mov
inc
xchg
add
mov
je
cmp
cltd
mov
fists
add
mov
add
jecxz
pop
adc
lret
pop
addr16
dec
dec
push
dec
out
push
sbbb
xchg
ja
mov
mov
push
dec
sub
and
pop
rolb
flds
push
add
sub
push
ja
ds
sbb
sbb
cltd
adc
lods
cmp
push
mov
mov
pushf
xchg
sub
dec
pop
sub
lret
adc
inc
enter
test
push
orl
mov
dec
inc
ret
mov
jnp
dec
sub
repnz
js
pop
lods
or
dec
sahf
insl
mov
push
stos
or
dec
mov
mov
lret
ss
lret
int3
ror
mov
or
cmp
loop
shlb
jp
xchg
xchg
cmpsb
mov
pop
mov
or
sbbl
adc
xlat
push
js
rcr
fsts
or
or
int3
int
pop
dec
shrb
dec
loopne
inc
test
cmp
leave
pop
rcll
mov
enter
fcoms
ss
xor
leave
test
adc
xor
mov
adc
fcmovb
arpl
fsubr
dec
es
xchg
xchg
cltd
ds
pop
stos
call
push
shlb
cmc
in
and
dec
jns
jmp
xchg
jnp
sahf
or
sbb
fcompl
dec
iret
add
adc
cltd
orb
dec
mov
or
pop
jne
mov
in
adc
push
ret
aam
dec
and
in
iret
adc
rcl
roll
roll
mov
shll
je
sbbb
wbinvd
ret
dec
test
nop
mov
push
xchg
sub
pop
inc
repz
cmpsl
jno
or
jle
loope
dec
rorb
sbbl
inc
in
pop
or
jne
cltd
xchg
rclb
dec
adc
rcrl
add
shrb
push
or
push
mov
jae
dec
adc
push
imul
xor
xchg
push
xor
dec
nop
jmp
xor
cmp
out
sbb
mov
xor
sbb
sbb
loop
mov
push
mov
out
insl
int
loope
dec
mov
push
or
push
jg
pop
or
dec
jmp
psrlw
and
xchg
dec
jnp
push
mov
cmpsl
lods
sub
psrlw
xor
repz
jne
xchg
push
xchg
sbb
or
shrb
nop
and
dec
pop
and
mov
shrl
or
fdivrs
adc
pop
push
nop
add
cmpl
push
xchg
pop
cltd
push
xor
iret
adc
dec
popf
lcall
jne
cwtl
adc
add
cmpsl
xchg
icebp
push
movlps
xchg
xchg
out
sbb
rolb
push
jns
xchg
pavgb
cmp
and
jns
push
push
dec
cmpsb
pop
push
adc
adc
imul
packuswb
lret
das
repz
in
not
xchg
add
adc
std
sbb
xor
cmpsl
or
and
popfw
out
jns
loope
pop
dec
aam
or
add
cwtl
adc
cmp
add
enter
push
fisttps
iret
adc
add
or
cs
aam
xor
rcrw
dec
xchg
lcall
lahf
adc
fnstenv
inc
iret
cmpsl
dec
pop
sub
mov
cwtl
cmp
or
adcl
adc
jp
fisubl
and
mov
jle
fs
mov
sub
lret
or
gs
adc
nop
in
sbbb
ss
addr16
aam
push
inc
out
inc
adcl
je
rcr
dec
dec
mov
lret
imul
push
adc
rorl
cltd
mov
adc
jmp
mov
pop
insb
aaa
out
repz
pop
push
xchg
and
push
scas
mov
shl
xlat
adc
mov
or
cli
pop
popa
and
mov
push
and
pop
fmuls
pop
add
push
loope
hlt
mov
mov
jge
and
inc
fwait
lret
iret
jecxz
mov
xchg
shl
sbb
xchg
push
adc
je
mov
popf
test
mov
adc
dec
roll
push
mov
jbe
xor
imul
popf
mov
lcall
or
cltd
xor
cld
jl
mov
and
rcll
lock
cld
aam
imul
push
xchg
or
push
rorl
xor
inc
repnz
jg
inc
xchg
adc
xlat
push
or
jge
dec
or
ficompl
outsb
jns
adc
adc
inc
leave
push
rcl
int3
inc
addps
xlat
xchg
push
fstl
dec
fisubl
int3
push
stos
push
dec
std
add
or
jp
sub
add
nop
lret
les
lock
adc
pop
test
mov
add
dec
loope
pop
and
mov
mov
push
cltd
paddq
and
fmuls
adc
pop
jle
cltd
inc
or
bound
xchg
sub
bound
sbb
cmovns
jno
fiaddl
push
hlt
mov
mov
push
xchg
movsl
dec
rcl
pop
adc
rorl
movsl
push
mov
mov
pop
add
ficoml
sub
adc
push
popf
xor
push
lret
sbb
in
adc
xchg
mov
pushf
xchg
xchg
sub
jne
rclb
xchg
fists
push
pop
ja
fisttps
pop
xor
sub
aam
or
inc
mov
adc
adc
dec
push
xlat
or
leave
push
mov
sbb
adc
mov
enter
or
loop,pn
and
stos
push
dec
adc
xchg
push
push
dec
inc
mov
jns
or
jp
dec
pop
xchg
push
in
daa
or
hlt
jns
repnz
mov
fistl
xchg
js
test
rcrl
mov
call
sar
xchg
enter
lret
jb
iret
leave
outsl
jo
dec
cmp
rorb
xor
adc
movsb
mov
jmp
loope
inc
pop
sbb
jmp
out
push
mov
cwtl
dec
add
or
xchg
loopne
pop
push
pop
imull
repz
push
push
jge
push
or
popf
mov
rclb
int3
push
test
and
push
popl
sub
roll
or
rcrb
jbe
lret
xlat
lret
xchg
cmpsl
pushf
push
jne
push
enter
sub
shrl
dec
hlt
ror
add
and
add
fwait
adc
add
inc
push
testb
mov
sub
aad
nop
aam
mov
adc
rorl
mov
pop
pop
jno
dec
aam
addr16
fs
xchg
xchg
rclb
mov
push
add
daa
dec
cwtl
mov
push
loop
int3
push
dec
test
push
mov
xchg
xchg
or
push
sbb
subb
lret
mov
pop
aas
mov
pop
dec
rclb
xor
inc
jne
aam
mov
push
dec
push
and
lret
mov
mov
jns
cwtl
push
testb
movl
push
and
inc
pop
sbb
ja
pop
xchg
xchg
adc
rorl
add
adc
adc
loope
sbb
lods
jecxz
push
aam
add
xchg
dec
lret
test
xchg
add
shlb
iret
xchg
mov
popf
sbb
push
jg
mov
pop
js
xchg
push
setno
dec
dec
mov
xchg
lds
jno
or
rorl
pushf
aam
loopne
sbb
loopne
xchg
lahf
push
push
mov
ret
lea
or
jg
add
lea
dec
jns
popl
adc
mov
or
pop
leave
xchg
fcoms
push
mov
mov
outsl
cli
and
ficoml
nop
cmovge
adc
adcl
fs
xor
in
lret
jmp
es
lret
dec
sbb
push
in
xchg
push
int3
pop
adc
jle
jl
mov
fstl
movsl
push
enter
push
dec
leave
mov
lret
rorb
inc
dec
adc
push
jl
dec
push
rorl
mov
lret
arpl
push
outsb
push
fldcw
in
mov
mov
int
fmuls
call
int3
dec
sbb
fiaddl
lret
push
add
dec
pop
repz
cltd
out
in
xchg
and
cltd
jmp
sbb
dec
int3
jecxz
int3
shlb
cmp
loopne
dec
pop
xor
cmpsb
roll
or
mov
jle,pt
test
loopne
mov
mov
add
cmpsb
popf
dec
inc
imull
in
or
push
xchg
xchg
and
push
jg
xchg
mov
fs
dec
int3
mov
jmp
sbb
ret
or
mov
pop
pop
jg
sbb
mov
sti
xorl
lret
xchg
sbb
sbb
loopne
and
inc
xchg
or
cltd
xor
sub
and
push
xchg
ret
mov
scas
je
xchg
dec
push
push
movd
leave
cmp
mov
add
jp
insb
mov
jns
pushf
push
xchg
inc
fldcw
sbb
mov
ror
imul
pop
xchg
dec
or
and
sub
loop
push
hlt
addb
cmp
dec
leave
dec
mov
push
lods
sub
or
inc
pop
roll
add
cwtl
sbb
testb
push
dec
cltd
psubsb
inc
cwtl
add
lds
xchg
hlt
add
xchg
adc
or
imul
aad
adc
xchg
adc
dec
movsb
mov
mov
pop
pop
cld
movsb
ficoml
les
outsl
xlat
or
cld
nop
test
dec
xchg
outsl
xchg
dec
inc
gs
fmuls
and
push
xchg
out
fwait
adc
fs
pop
adc
jns
dec
xchg
or
xchg
or
or
sbb
pop
xchg
pop
and
dec
shrb
xchg
pushf
adc
aaa
fs
fcomp
xor
push
sahf
shll
or
adc
jmp
pop
mull
mov
cltd
mov
jg
jns
mov
adc
dec
dec
sarb
adc
nop
loope
pop
ja
xchg
add
push
fcmovu
outsl
mov
dec
push
andnps
dec
xchg
imul
shlb
or
dec
aad
bound
jmp
sbb
ret
add
mov
mov
push
inc
int
fcompl
aaa
adc
lret
notl
or
push
dec
mov
int
ljmp
mov
int3
push
sub
pop
inc
call
jb
xor
rcl
mov
pop
repnz
mov
and
fiaddl
xchg
mov
cmp
push
or
sub
sub
out
cmc
idivb
sub
jbe
and
sbb
adc
xchg
gs
lret
or
or
pop
adc
push
int
imul
out
pop
mov
push
jne
pop
jg
imul
je
enter
push
test
repnz
xchg
cs
mov
leave
cwtl
dec
push
dec
dec
in
cltd
stc
push
pop
pop
mov
dec
pop
push
or
push
je
rorl
in
lcall
push
aad
add
mov
pop
imul
jns
xchg
mov
and
cmpsb
loopne
xchg
dec
imul
adc
pop
mov
testl
add
insb
cs
ds
dec
push
mov
pop
mov
or
ret
sub
lods
mov
and
setae
cltd
arpl
fs
test
mov
dec
pop
loop
adc
ret
push
push
pushf
fildl
les
pop
adc
or
bound
jns
lret
lret
push
lock
enter
mov
adc
addr16
adc
xlat
cmpsb
mov
push
pop
insl
inc
adc
rorb
and
mov
lahf
pushf
test
dec
cmpsb
notb
mov
sbb
repz
in
pop
cltd
or
mov
pop
lret
nop
hlt
inc
lea
xchg
sarb
gs
int3
or
enter
adc
ret
push
xchg
jo
inc
inc
cltd
xlat
rclb
sahf
jecxz
or
push
push
in
lret
adc
mov
sbb
mov
pop
scas
setg
dec
fadds
xchg
and
jge
xchg
rcl
and
rcrb
rcll
jnp
xchg
lock
out
or
push
dec
mov
mov
push
lea
cwtl
xchg
adc
aam
or
js
push
pop
dec
out
dec
jae
in
push
xchg
xchg
fs
push
xchg
push
orl
or
cltd
or
stos
flds
or
push
push
and
jp
xchg
cmp
and
mov
adc
mov
xchg
dec
arpl
ror
call
ja
jge
xlat
sbb
and
jle
sub
shlb
daa
jnp
sub
fs
lret
push
xchg
add
cwtl
push
aam
mov
xchg
jecxz
dec
mov
cs
out
into
jbe
test
mov
jnp
fisttps
dec
loope
dec
std
out
push
xchg
or
adc
int3
mov
rcll
cltd
xchg
loop
mov
and
xchg
adc
jns
xchg
movsl
arpl
and
rorb
rcrb
dec
sbb
pop
mov
arpl
mov
lock
add
rcrl
or
pop
imul
in
adc
xchg
push
pop
add
xlat
in
adc
mov
data16
fwait
dec
in
cwtl
sbb
nop
or
push
call
movsl
add
mov
cmpl
iret
aad
scas
pop
mov
sub
cwtl
iret
dec
mov
adc
push
rorl
stos
push
or
mov
cwtl
mov
sub
xchg
or
lret
and
pop
xchg
fadds
jns
rorl
mov
sub
inc
ror
mov
pop
pop
lds
jns
jns
push
push
jns
cltd
mov
sbb
shll
sub
nop
call
dec
add
dec
xor
mov
add
push
int3
jnp
aam
mov
push
pop
jne
std
sub
adc
fsts
jmp
movsb
or
pop
pop
xchg
dec
scas
pop
or
dec
sbb
add
stos
sub
lods
xor
mov
lret
add
mov
push
mov
dec
jecxz
rcl
adc
int
lods
nop
push
pop
dec
xchg
pop
push
or
dec
fs
cwtl
int3
pop
dec
nop
ljmp
cmc
in
roll
int3
fimull
dec
push
push
mov
or
and
daa
sbb
adc
cltd
and
ror
cmpb
inc
arpl
cwtl
nop
in
pop
adc
lret
push
rorl
jno
fwait
mov
adc
nop
sbb
dec
xor
fs
leave
int3
inc
repnz
dec
out
and
and
pop
aam
sub
andl
enter
and
outsb
cmc
and
mov
rorl
jns
sbb
dec
push
fistpl
cmp
adc
and
inc
add
ret
or
cwtl
push
xchg
dec
mov
fs
ret
inc
movb
iret
push
movsl
push
mov
lret
adc
aam
fadds
push
inc
les
or
int3
mov
cld
jae
mov
lret
notb
push
dec
out
jns
and
xlat
cwtl
push
xchg
xchg
dec
adcl
jno
mov
cmp
fs
je
cli
xor
ljmp
pop
nop
push
push
lods
dec
adc
mov
ret
add
mov
cmc
add
lcall
jle
or
repnz
add
dec
sahf
mov
xor
pop
pop
inc
sbb
xchg
cltd
call
pop
push
xlat
aam
or
shlb
test
adc
lret
loopne
xchg
mov
jno
fdiv
insb
push
popf
xchg
or
rorl
and
lret
dec
int
sub
adc
dec
and
loop
lret
xchg
inc
test
xchg
ds
mov
inc
push
mov
pop
xlat
jp
and
dec
push
and
push
mov
test
nop
push
cmp
es
loopne
adc
int
inc
dec
or
lret
adc
insb
into
pop
cmp
ret
mov
cmp
std
dec
inc
jb
pop
arpl
shll
pusha
adc
leave
popa
push
lea
jns
jns
push
dec
inc
inc
xchg
dec
rorb
enter
jecxz
invd
test
into
inc
fucom
aad
jg
rcrl
pop
mov
xlat
outsb
in
je
iret
xchg
scas
mov
pop
or
xlat
adc
repnz
inc
std
adc
pop
out
repnz
inc
shrb
push
pop
aaa
push
sti
bswap
shll
lock
xchg
enter
iret
arpl
and
pop
mov
adc
add
xlat
or
mov
std
add
jbe
mov
add
xor
mov
daa
push
stos
add
push
xchg
sbb
dec
insl
ret
rclb
xchg
fcoml
shrb
pop
xchg
lea
push
mov
hlt
notb
andb
inc
jge
xchg
pop
dec
sub
shlb
push
fstl
pop
jbe
xchg
movl
cmp
mov
rcll
push
cmp
movsb
fisttps
ja
lahf
pop
xlat
in
inc
hlt
cltd
sbb
ret
lods
mov
pushf
mov
mov
test
xchg
mov
sahf
aam
push
loope
sarl
lcall
push
pushf
push
push
add
push
xchg
add
pop
addr16
xchg
pop
sub
repz
xchg
in
in
rcl
pop
lret
mov
xchg
adc
popf
xor
les
xorb
lock
or
loope
xchg
test
or
scas
loope
rclb
int
leave
adc
jns
mov
or
and
jecxz
rcrb
mov
adc
mov
mov
mov
lret
mov
jp
loope
push
scas
mov
push
rolb
push
jmp
lret
int3
dec
pop
in
cmc
xchg
dec
popl
jecxz
rclb
bound
xchg
sbb
push
shl
mov
xor
jnp
xchg
dec
jae
or
push
xchg
pop
into
xchg
orb
mov
ret
jp
fmul
dec
lods
fnstcw
pop
push
cltd
sbb
dec
fucom
push
nop
test
sub
leave
popf
push
pop
push
dec
and
sbb
bound
pop
add
dec
in
lods
dec
mov
push
cmp
imul
stos
insl
nop
or
xor
inc
dec
repnz
add
inc
jbe
xchg
mov
jle
add
mov
add
push
popl
fcmove
inc
adc
push
push
adc
jg
pop
xchg
cld
cmc
jno
push
mov
or
outsl
pushf
jns
or
adc
mov
lret
dec
xchg
push
adc
cmp
stc
mov
jle
xchg
fcmovne
xchg
push
xor
sti
xchg
jns
in
data16
adc
lcall
pop
sbb
lock
js
adcb
jno
or
cltd
in
lcall
je
test
loopne
mov
call
loopne
mov
mov
mov
jecxz
adc
inc
mov
dec
out
jns
and
fimull
lret
loope
out
jge
mov
lea
cwtl
jge
xchg
pop
sbb
in
iret
pushf
ficompl
dec
jg
push
cwtl
fnstenv
adc
add
in
push
add
pop
or
add
cwtl
or
mov
sarb
xchg
mov
or
mov
out
xchg
and
shl
push
fcmovbe
push
cmpsl
movsb
pop
mov
sbb
mov
add
int3
imul
push
adc
xor
ljmp
or
int3
jb
lret
nop
mov
jge
pop
mov
enter
and
adc
icebp
repnz
xchg
data16
sarb
or
adc
pop
inc
ljmp
or
mov
mov
mov
lea
jg
test
sbb
adc
xchg
mov
test
jne
or
xchg
bswap
dec
leave
cltd
or
inc
xchg
enter
push
inc
lock
push
pushw
dec
adc
mov
nop
shrl
mov
inc
arpl
test
mov
pop
addr16
in
lods
inc
sbb
push
pop
or
cmp
ljmp
popf
xlat
dec
arpl
popl
xorb
fsts
jg
es
std
mov
fld
or
jecxz
rcl
fbld
xchg
adc
insl
inc
sbb
adc
loopne
rcl
cmpsb
loop
adc
addr16
addr16
dec
rcpps
inc
add
cld
leave
pop
sarl
idivl
dec
push
sbb
out
imul
cmc
xchg
lret
andl
iret
xlat
or
push
and
push
mov
int3
mov
outsl
adc
sbb
pop
pop
jmp
cmp
nop
enter
stos
sub
push
pop
into
shrl
lret
inc
jecxz
xchg
mov
and
rcll
lea
adc
rorl
lret
cltd
add
cmp
push
cwtl
or
xorb
jns
call
pushf
sbb
popf
jl
shlb
jnp
movsb
in
adc
dec
push
jbe
sahf
push
in
imul
lcall
pushf
fbld
push
or
and
iret
bound
xchg
iret
sub
inc
cld
or
or
dec
xchg
and
xchg
add
push
cwtl
out
xchg
leave
dec
mov
dec
loopne
imul
ficoml
rorl
rcrl
shl
cld
xlat
sub
fxch
daa
fmuls
or
or
lret
hlt
xchg
xchg
adc
or
adc
out
add
dec
fisttpl
hlt
fmuls
lods
enter
rclb
arpl
dec
adc
push
mov
jmp
gs
and
xchg
push
push
xchg
lea
iret
inc
add
int3
or
and
sbb
das
mov
aam
push
push
or
scas
xchg
not
push
and
xchg
xlat
sahf
fld
dec
je
mov
lods
lcall
mov
xchg
mov
or
mov
jp
fs
dec
jmp
add
enter
jne
rorb
fadds
imul
mov
loope
cltd
cwtl
cmp
cwtl
int
bound
add
xchg
ficoml
inc
test
pop
imul
adc
nop
fxch
xor
add
sti
aam
mov
rcll
jb
xlat
mov
dec
dec
aam
dec
pop
test
add
adc
mov
enter
ja
fstl
push
jmp
sbb
xchg
roll
push
or
icebp
adc
mov
rorl
push
xchg
adc
cltd
dec
pop
jg
jg
push
leave
cmpl
test
xchg
dec
cwtl
pop
dec
push
mov
cmp
inc
mov
adc
jmp
push
mov
aam
aaa
int3
shlb
iret
jg
arpl
push
push
dec
test
roll
insl
cmp
lret
mov
popl
jle
mov
cmp
xor
mov
repnz
adc
jne
aam
in
fidivrl
push
pop
inc
fcoms
popf
lret
cwtl
mov
arpl
enter
and
xchg
xchg
addr16
cltd
ficoms
daa
out
xchg
leave
xlat
or
fxam
pop
pop
sbb
cmp
dec
and
or
ja
fsts
pop
dec
jg
push
dec
sub
mov
xchg
xchg
dec
pushf
adc
xchg
mov
push
xchg
call
xchg
inc
rolb
mov
xchg
fsts
jp
mov
push
leave
pop
mov
mov
and
or
add
in
mov
leave
mov
fld1
stos
sub
aas
loopne
nop
jge
xchg
lret
loop
imul
fstpl
outsb
pop
iret
lods
xchg
fildl
or
push
call
xor
push
inc
inc
iret
mov
test
and
adc
popf
push
nop
leave
or
out
notb
out
les
cltd
dec
cltd
mov
mov
mov
and
jecxz
push
rcll
add
mov
and
pop
loop
shl
sbb
clc
fs
adc
cli
sahf
mov
jns
lret
push
stos
imul
jecxz
push
cwtl
int3
mov
cmpsb
or
push
insl
mov
xchg
nop
xchg
sarb
dec
push
or
push
dec
mov
rcrl
adc
xchg
scas
jp
shld
jmp
outsb
lret
and
enter
addr16
adc
pushf
push
mov
ror
xor
inc
cmp
xor
out
arpl
and
mov
aas
xchg
fimull
outsb
xor
or
out
lret
push
inc
push
enter
jmp
pop
aam
cltd
and
xlat
dec
lea
dec
shrl
lea
pop
fstl
push
pushf
jnp
adc
pop
xchg
jnp
push
push
fadds
add
dec
or
add
xchg
dec
cli
loope
cltd
scas
movsb
push
shll
adc
dec
ja
jmp
mov
push
hlt
imul
adc
filds
dec
push
repnz
rcrl
inc
jle
mov
and
dec
xchg
dec
xchg
xchg
leave
loopne
loopne
fs
mov
lock
iret
bound
push
in
rol
push
dec
lret
pop
shrl
sbb
xchg
sub
ret
loop
nop
inc
into
shll
hlt
adc
and
mov
loope
cwtl
pop
pop
add
and
in
or
or
popf
jecxz
push
dec
imul
lea
fstpl
push
outsb
push
sbb
cmp
mov
mov
adc
xchg
test
pop
jno
sub
jb
rclb
or
sub
pop
jmp
dec
or
fstps
addr16
dec
xchg
jmp
add
xchg
das
lods
jg
leave
xchg
push
stos
mov
dec
cmp
scas
sub
jge
xchg
aam
or
dec
dec
push
cltd
inc
inc
xchg
rclb
pop
insl
adc
ja
sbbl
fistl
lea
dec
pop
dec
ret
das
lret
stos
loop
nop
push
fists
jecxz
xchg
adc
nop
arpl
dec
and
push
popf
sub
mov
mov
mov
loop
or
xchg
adc
in
mov
jne
mov
andl
xchg
add
movsb
jo
adc
inc
hlt
and
adc
jmp
xchg
mov
cmp
rorb
pushf
xchg
mov
movsb
pop
push
dec
or
or
mov
and
clc
push
push
cwtl
push
xchg
push
or
push
jae
push
jns
addr16
pop
sbb
cmp
rol
push
inc
push
cmc
aam
xchg
lret
movsb
notl
mov
or
pop
xchg
shrd
ret
dec
or
or
inc
add
pop
pop
rclb
loopne
mulb
arpl
enter
xchg
push
mov
pop
or
adc
lret
and
hlt
incb
jne
dec
push
or
hlt
jp
push
mov
shl
inc
push
or
dec
in
into
and
mov
inc
jmp
xor
inc
sub
or
inc
nop
lret
cltd
mov
pop
lret
xchg
cmp
and
xchg
in
inc
iret
cltd
bound
jb
push
push
stos
xchg
xor
insl
cltd
or
loopne
pusha
jp
jecxz
rorl
dec
or
inc
push
cmpsb
push
sahf
adc
or
dec
rorb
fnstenv
cmpsb
mov
jns
pop
rorb
pop
fistl
xchg
mov
push
pop
xchg
fistpl
push
mov
es
scas
or
mov
mov
adc
and
inc
fsubrs
loop
adc
pop
inc
adc
movsb
cli
femms
xor
inc
ret
and
cltd
nop
dec
push
mov
push
out
xchg
push
data16
or
je
mov
jne
lret
push
adc
cltd
ljmp
add
dec
dec
mov
arpl
push
sbb
push
jecxz
sbb
jle
adc
xchg
and
or
dec
int3
xchg
push
cmp
imul
xchg
xchg
cwtl
xlat
adc
or
lods
iret
adc
loop
jecxz
dec
clc
aam
add
push
adc
adc
dec
out
fwait
sbb
int3
lret
dec
sahf
mov
cld
push
adc
cltd
xchg
imul
push
daa
in
mov
fisttpl
push
pusha
fmuls
push
or
es
xor
push
int3
enter
lret
adc
hlt
xchg
or
movsl
mov
mov
sbb
jle
lock
xchg
cld
push
repz
aam
bound
sarb
mov
lahf
xchg
testb
adc
xchg
addr16
inc
dec
fisubl
or
dec
adc
test
pop
sbb
push
test
push
lret
mov
mov
adc
pop
xchg
or
and
lods
dec
sbb
loopne
and
ret
loop
cli
inc
aad
sbb
push
out
and
mov
pop
fdivs
arpl
dec
loope
mov
pop
dec
test
iret
or
or
or
sbb
out
mov
rcl
jecxz
fmuls
push
dec
xor
push
ljmp
cmpsb
adc
dec
push
mov
mov
sbb
cwtl
pop
arpl
dec
or
testl
push
loopne
rorb
lcall
or
lds
add
nop
hlt
orb
xchg
cmovns
jg
addr16
out
jnp
pushf
pop
sub
repnz
pop
pop
pop
xchg
jmp
fisttpll
and
lret
test
dec
jns
fisttpl
xchg
mov
push
fwait
enter
mov
add
push
pop
mov
mov
push
or
mov
sub
out
aas
push
push
cmpsl
sbb
fnstcw
push
sub
out
dec
sbbl
mov
adc
or
push
cmc
int
adc
jmp
xchg
jg
xor
jle
xor
mov
pop
pop
push
mov
push
xchg
insl
or
aam
add
pop
adc
and
pop
dec
aam
jo
jbe
push
pop
sbb
ret
inc
adc
mov
leave
push
je
inc
push
mov
pop
adc
dec
mov
jg
pushf
dec
or
mov
adc
mov
adc
push
jp
mov
cld
stos
and
adc
fisttps
sbb
in
dec
nop
lret
sbbl
push
dec
push
outsb
jmp
outsl
push
ja
xchg
pushf
dec
push
mov
shlb
pop
iret
fldcw
pop
out
in
aam
adc
cmp
jg
dec
xchg
leave
or
ret
leave
enter
adc
mov
shl
mov
rol
ljmp
lock
and
jl
rclb
je
xor
adc
nop
mov
int
pop
dec
xor
fnstcw
dec
dec
push
or
inc
pop
mov
xchg
unpckhpd
lds
or
mov
add
jo
cmp
sub
lods
shl
jmp
insb
lret
sbb
sbb
xlat
mov
and
xchg
push
test
mov
add
mov
mov
dec
jp
and
dec
fcom
dec
xor
bound
in
mov
or
cmp
ja
lret
insl
fs
sbb
jecxz
or
out
dec
outsl
imul
out
xlat
xchg
and
loope
inc
cltd
or
imul
int3
repnz
pop
or
je
xchg
int3
or
adc
and
mov
ret
push
push
and
cltd
xchg
in
jle
push
adc
dec
shl
xchg
rclb
hlt
iret
push
hlt
mov
cltd
rcll
inc
icebp
addr16
loop
dec
push
loop
and
nop
sahf
mov
cs
out
test
leave
push
lret
or
pop
push
sarb
pop
daa
test
arpl
xchg
mov
lods
xor
xchg
jbe
pop
mov
popf
ret
shl
push
inc
push
leave
xchg
ss
sub
and
jg
jg
imul
push
adc
cmp
pop
enter
add
roll
stc
pop
and
push
es
jp
pop
mov
jge
xlat
stos
sub
pop
sbb
movl
push
xchg
dec
adc
sbb
push
stc
dec
mov
sbb
or
mov
jp
fwait
push
jl
shll
mul
adcl
cmc
lods
movsb
fmul
dec
inc
jecxz
jge
xchg
cwtl
loopne
mov
pop
pop
push
std
push
or
mov
inc
ret
inc
cmp
roll
add
jecxz
dec
cmp
add
xor
fldcw
jl
dec
cmpsb
loopne
push
dec
jns
arpl
adc
andb
sahf
stos
dec
icebp
sub
lds
xchg
push
nop
rcl
sub
insb
inc
mov
or
pop
sbb
push
dec
push
or
xlat
dec
pop
mov
sbb
shlb
dec
add
push
xchg
mov
cs
adc
inc
gs
and
iret
fs
mov
mov
xchg
xchg
mov
pop
fmuls
out
cltd
adc
push
fidivrl
fsts
mov
cmp
imul
fwait
push
jno
das
xchg
aad
push
cld
loop
push
or
mov
lcall
lea
cwtl
jg
fwait
dec
lret
sub
imul
jg
lds
rorb
jno
push
fwait
sbb
mov
sbb
jle
push
dec
fstpl
mov
cltd
int
mov
mov
nopl
inc
fldpi
dec
lret
pop
mov
shll
or
mov
jp
push
sub
cmp
in
lret
lock
push
ljmp
loop
xchg
test
inc
push
xlat
rcl
jns
adc
dec
sarl
cmpsl
dec
jmp
add
mov
adc
add
push
xchg
insl
cmp
pushf
xchg
mov
aad
cwtl
xchg
les
push
xchg
mov
aam
or
push
and
psubusw
rorl
or
mov
out
xor
std
sbb
fiaddl
push
iret
nop
sbb
test
pop
cltd
out
loope
lret
test
or
push
test
dec
leave
shll
ds
int
flds
jle
dec
xlat
push
pop
pop
lret
xchg
add
orl
push
adc
bound
insl
xchg
xchg
xchg
fcom
js
jge
mov
pop
jnp
loope
xchg
dec
push
in
push
iret
push
imul
cs
outsb
sbb
and
mov
and
adc
pop
push
adc
pop
mov
imul
and
sbb
dec
test
jns
inc
jg
cld
jg
and
cwtl
or
addl
or
pop
push
xchg
popf
mov
cmp
adc
aas
inc
mov
fstpl
xlat
je
dec
mov
dec
jae
dec
xchg
mov
push
and
mov
mov
xchg
xchg
lret
inc
enter
rorb
and
sbb
idiv
bound
popf
jmp
jle
mov
pop
dec
or
repnz
and
jne
adc
push
dec
enter
cwtl
cltd
or
adc
dec
xchg
repz
or
or
xchg
stc
jecxz
rcl
adc
dec
or
hlt
icebp
movsb
ret
mov
fstps
mov
jge
dec
shr
mov
mov
mov
mov
or
xchg
jb
push
jg
addr16
loope
mov
stos
adc
push
fstps
cmp
out
jg
je
push
int3
add
fdivs
push
fcmovu
mov
lret
inc
jb
popf
outsl
enter
xchg
push
push
insb
dec
sbb
push
adc
or
jne
push
shlb
mov
outsb
sbb
xchg
mov
lds
or
ds
sub
sbb
out
sub
push
notb
xor
mov
mov
jno
mov
push
mov
test
inc
xchg
nop
leave
jns
mov
lahf
xchg
into
add
jl
sbb
xchg
insl
dec
or
or
xchg
xchg
pushf
push
mov
imul
pop
pop
push
pop
mov
xchg
jmp
push
jle
pop
push
add
adc
sbb
loop
lea
fisubrl
movsb
sbb
push
xchg
mov
push
stos
pop
pop
pop
push
pop
in
inc
add
sbb
test
cwtl
mov
mov
xor
shll
and
vpcomuq
jp
sbb
loope
cltd
mov
push
jns
mov
scas
stos
imul
out
movsl
sbb
dec
fldl
movsl
pop
rcl
sub
or
rclb
pop
cltd
rcrb
mov
fcoms
out
push
stos
cmp
arpl
xlat
inc
and
jge
arpl
test
sysenter
xor
scas
or
cmp
iret
mov
mov
aam
inc
xor
xchg
pop
push
cwtl
out
in
fstl
fldenv
or
sbb
adc
cmp
loopne
adc
xor
adc
stos
enterw
cltd
fldl
nop/reserved
pushf
or
xchg
jp
aam
sbb
popl
sbb
ret
clts
scas
sbb
xchg
mov
push
jns
in
xchg
push
adc
xchg
or
in
loop
xchg
in
iret
lea
push
loopne
pop
mov
iret
xchg
push
xor
push
sub
mov
adc
ret
fbld
loope
push
imul
popf
notl
fldenv
pop
push
push
push
ja
mov
dec
sahf
push
xlat
adc
enter
xor
leave
dec
jle
cltd
or
fsubl
mov
loope
rorb
cltd
js
dec
pop
imul
mov
imul
or
adc
sbb
adc
ds
dec
mov
mov
or
adc
xchg
add
push
mov
xchg
mov
mov
jp
into
loope
adc
sbb
push
outsl
shll
adc
xchg
pop
xchg
jge
aam
sbb
jno
rorb
push
mov
sbb
mov
pop
and
cltd
xchg
xchg
adc
shrl
gs
push
adc
adc
mov
aam
or
shlb
xchg
xor
mov
xchg
movsb
pop
adc
enter
sahf
stc
dec
pop
lods
int3
stc
and
fcomp
cmpl
lret
adc
stos
xchg
mov
xchg
iret
xchg
je
test
cwtl
xlat
adc
andl
dec
inc
fcoms
hlt
mov
cwtl
mull
dec
xchg
jg
mov
push
or
or
jno
inc
xor
pop
xchg
stos
mov
adc
adc
iret
lcall
shll
stos
xchg
dec
mov
sahf
dec
sbb
cltd
push
and
iret
fmuls
or
cwtl
pop
xchg
loop
roll
inc
push
dec
rclb
cltd
fs
enter
xchg
adcl
nop
cltd
jp
mov
dec
in
or
and
xchg
inc
cli
inc
ljmp
je
or
dec
dec
adc
and
xchg
in
lcall
lret
test
sbb
jbe
dec
out
pop
dec
xlat
mov
jns
ds
jnp
pop
push
adc
sbb
add
lea
add
jae
adc
inc
adc
jne
mov
dec
mov
sub
inc
dec
lock
pop
sub
push
test
adc
pop
loope
rorb
cwtl
ja
daa
sub
stc
jne
pop
dec
or
movsb
or
adc
rol
or
rcll
jmp
data16
dec
nop
popa
dec
mov
data16
dec
jge
sub
in
movsb
rol
roll
mov
add
mov
bound
arpl
push
arpl
out
dec
mov
jge
mov
lret
push
cmpsl
imull
xchg
inc
mov
js
or
push
test
rorl
lret
adc
mov
push
dec
xchg
or
dec
mov
pop
stc
mov
das
inc
shlb
lret
dec
movsb
dec
dec
test
data16
xchg
dec
xchg
pop
shll
clc
fisubrs
jle
je
addr16
push
xchg
roll
cwtl
xchg
xchg
jns
cld
loopne
inc
aam
outsb
mov
inc
gs
xchg
push
or
dec
jns
mov
inc
ja
cmpsl
lea
push
lret
pop
hlt
or
push
out
add
int3
xchg
mov
outsb
xor
subb
lods
jl
xchg
pop
lret
jl
pop
xchg
add
lret
xchg
cmp
push
loop
or
jne
adc
bswap
xchg
rorl
gs
pop
xchg
sarb
jns
mov
hlt
pop
imul
lods
mov
xchg
lret
sub
icebp
xor
in
int3
dec
xchg
inc
movsb
sbb
push
jnp
xor
dec
sub
lock
cmp
xor
jge
push
fs
adc
pop
or
movl
int3
aam
inc
add
iret
inc
cli
adc
mov
or
push
adc
movsl
inc
test
cmp
xchg
dec
push
iret
std
xor
or
leave
rclb
dec
xchg
adc
xchg
lss
jg
pop
fnstcw
rorb
cwtl
rcll
les
call
lock
popf
sub
data16
out
popf
pop
cltd
jne
pop
pop
sbb
cmpsl
shll
and
lret
mov
adcb
push
xchg
in
dec
mov
lret
out
nop
sti
cwtl
add
push
cltd
int
leave
outsl
scas
inc
aam
or
repz
inc
inc
dec
push
ss
sbb
push
stc
push
fldt
jns
inc
lods
andl
push
sub
cmpsb
xchg
icebp
test
mov
rcr
fiaddl
xlat
adc
push
lret
add
mov
xor
inc
lock
dec
push
jge
jl
push
inc
sbbb
in
fxch
pop
xchg
push
xchg
lods
cltd
dec
mov
lahf
sti
imul
fcmovnb
jmp
ret
xor
push
dec
pop
lea
fcmove
loop
lret
fcom
adc
dec
leave
push
xchg
clc
xchg
xchg
push
fstpl
sbb
or
push
lret
xchg
adc
in
mov
mov
je
ja
xor
or
jp
ficoml
adc
ja
aad
inc
xchg
or
test
or
push
dec
push
jge
sahf
rorb
jge
lret
lret
ret
xlat
cltd
pop
mov
push
dec
dec
sar
or
push
test
psubusw
rclb
or
loope
mov
xchg
push
fadd
gs
dec
pop
adc
lea
or
xchg
enter
mov
ds
rcll
mov
push
xchg
push
sbb
dec
lds
jmp
arpl
mov
or
int
mov
or
sbbl
xchg
lods
sub
rorb
push
outsl
cltd
mov
push
or
arpl
pop
dec
loop
lea
lds
push
mov
xchg
inc
pop
dec
cmc
pop
xor
scas
or
inc
fsts
pop
mov
lea
lret
xchg
cmp
hlt
dec
shrb
fwait
pusha
sahf
pop
adc
cmpsb
xchg
rcll
cwtl
lret
dec
sarl
jns
xlat
sbb
xor
in
push
mov
outsb
add
xchg
xchg
mov
xchg
cmp
int3
mov
in
or
sub
lret
dec
push
sbb
dec
xchg
nop
rcrl
push
lods
movsb
lret
jno
or
push
imul
test
jno
adc
ret
cmpsb
pushf
adc
pop
add
dec
enter
test
pushf
mov
leave
mov
fsts
push
mov
or
and
mov
imul
lret
data16
jg
push
push
test
push
push
leave
dec
repnz
leave
lret
mov
jo
push
int3
jg
sbb
nop
pushf
sbb
jecxz
mov
push
cmc
inc
call
pop
push
and
enter
push
pop
mov
cltd
aam
and
lret
xchg
or
push
push
sahf
adc
jno
push
cltd
xor
xor
jne
xchg
nop
dec
bound
xchg
ficoml
or
push
xor
rorb
fisubl
enter
aad
stc
cwtl
add
dec
lods
outsl
adc
es
xchg
rorl
and
jae
enter
loopne
mov
insb
or
rolb
xchg
push
or
iret
cltd
aad
xor
dec
xchg
mov
imul
dec
lea
push
cmp
mov
xchg
bsr
rclb
sub
jb
cwtl
push
sub
push
push
adc
xchg
dec
push
lret
mov
inc
lcall
xor
movntps
push
push
mov
dec
pop
popf
out
pop
imul
gs
push
inc
xchg
dec
dec
adc
adc
push
shl
cmpsb
push
int3
pop
mov
inc
mov
push
iret
imull
insl
push
nop
adc
dec
pop
mov
inc
pop
push
mov
jl
sysexit
push
xchg
dec
icebp
in
ret
lds
adc
pop
xlat
xchg
enter
in
fidivl
pop
cmp
dec
inc
insb
adc
pushf
dec
enter
int3
mov
out
pop
mov
lahf
pop
inc
dec
sbb
mov
push
loopne
adc
add
xchg
jmp
push
lret
js
xchg
xor
cmp
sarl
jge
xchg
mov
xchg
loopne
push
pop
sbb
out
int3
movsl
pop
pop
push
sub
notl
sub
jg
or
mull
dec
test
jns
add
jae
shrb
stc
pop
lret
xchg
fisubrl
pop
push
insb
iret
push
fwait
xchg
daa
jns
fs
xlat
ficoml
test
inc
mov
xor
push
js
pushf
sub
lret
fistps
mov
push
arpl
addr16
mov
jge
mov
push
std
sbb
add
ret
mov
rclb
rcrb
cmp
cltd
rcl
xor
mov
mov
pop
shll
rorb
out
adc
jg
int
insl
mov
push
lret
in
int3
loope
or
cmp
jo
adc
xchg
outsb
inc
cltd
mov
push
leave
or
dec
push
or
push
mov
dec
test
fsts
jne
sbb
or
adc
insl
fisttpl
je
jne
rcll
mov
imul
data16
xchg
push
inc
in
dec
leave
xchg
mov
xchg
jg
dec
lret
xlat
dec
push
push
mov
sbb
jmp
mov
or
or
in
push
dec
jns
sahf
or
xchg
inc
rcl
mov
leave
movsb
sbb
je
je
ret
int3
sub
sub
xchg
cmc
std
es
pop
push
mov
push
mov
rcrl
outsl
clc
sbb
out
jb
xchg
push
int3
mov
enter
xchg
mov
mov
movsl
jb
lret
add
and
push
lret
mov
mov
xchg
in
dec
repnz
jmp
or
or
sub
popa
push
addl
jb
push
sub
popf
mov
pop
mov
nopl
and
fucomp
jle
or
sub
and
mov
lods
xchg
xchg
nop
aad
sbb
or
fsubs
xchg
lret
insl
sbb
arpl
cmp
add
lds
shll
sbb
cmp
mov
sahf
jmp
loop
xchg
test
jne
push
pop
mov
push
jns
cwtl
mov
ficoms
pop
and
or
adc
push
arpl
or
cmovge
imul
and
sub
xchg
subl
mov
xchg
mov
or
or
cltd
jns
rcll
nop
dec
call
xchg
jp
push
dec
jbe
cltd
push
fwait
js
mov
addr16
and
fcmove
adc
sub
subl
lcall
rcr
cwtl
rclb
pop
push
dec
dec
mov
push
in
xchg
hlt
lret
xchg
sbb
cltd
sbb
xchg
pop
inc
popf
xor
ljmp
pop
and
pop
lock
rcll
dec
ret
jg
rorl
xchg
add
iret
xchg
loope
push
leave
pop
lock
paddusw
pop
dec
and
aam
mov
xchg
adc
nop
fstl
push
cwtl
pop
or
mov
leave
addl
xor
lds
lret
pop
shrl
fisttps
arpl
jo
add
or
mov
nop
inc
mov
mov
push
push
jle
push
xchg
pop
call
fbstp
cmp
lret
pop
push
rorl
fs
push
cltd
or
aam
jecxz
push
rorb
sahf
in
enter
dec
push
pop
pop
adcl
and
or
dec
sbb
and
insl
pop
dec
dec
loop
push
leave
xchg
loope
jl
xchg
add
adc
sub
push
rorb
adc
enter
and
xor
cltd
or
jg
or
lret
ja
sbb
imul
xchg
imul
sub
movsb
or
jg
jns
cmp
sbbb
arpl
dec
loope
mov
data16
ja
daa
push
cmp
or
rorb
pop
pop
jl
xchg
xchg
js
mov
and
fs
shl
and
add
nop
xchg
push
stos
xchg
ret
dec
or
jnp
pushf
mov
sub
stos
adc
push
fmuls
subl
ret
cld
cwtl
mov
sub
and
dec
xchg
cmpb
cmp
add
adc
push
icebp
fidivrl
push
mov
push
movsl
cmpl
lret
mov
cmp
data16
and
or
ja
enter
addr16
pop
sub
adc
adc
mov
add
and
rolb
jno
or
cmp
pop
loopne
or
jno
cmp
push
adc
push
adc
pop
push
push
cltd
and
push
push
jge
and
xchg
daa
xlat
jg
or
adc
push
and
adc
sub
xlat
adc
daa
jge
mov
or
test
loope
out
outsl
fxch
xchg
ja
fstpl
xchg
pop
hlt
xchg
push
mov
iret
int3
fwait
inc
callw
jl
es
or
mov
and
dec
mov
xchg
mov
sbb
sub
popa
jne
or
push
sub
mov
adc
ja
fstl
int3
nop
cltd
repnz
lea
xlat
push
out
mov
xchg
mov
push
add
inc
pop
xchg
shrl
scas
arpl
sub
stc
add
nop
or
movsl
fnsave
push
push
dec
push
or
punpckhwd
fwait
xchg
mov
imul
scas
scas
adc
test
fwait
pop
outsl
fsts
inc
dec
mov
loopne
jmp
mov
push
pop
pop
outsb
adc
mov
fsts
xchg
jecxz
lret
sbb
or
jno
push
mov
mov
xchg
mov
sub
jnp
sbb
push
bnd
xchg
push
xchg
jns
int3
fcoms
sub
loope
adc
or
rcl
pop
dec
adc
jbe
or
inc
push
lea
add
push
sbb
push
pop
int3
lea
frstor
enter
ds
mov
daa
and
sub
iret
stc
mov
rcll
pop
jge
jmp
push
dec
insl
rcrl
jns
push
mov
lds
adc
add
or
mov
stos
inc
fstp
in
dec
lcall
out
push
cmp
xchg
andl
enter
or
mov
fimull
out
loop
rorb
enter
cmp
cltd
pop
adc
lds
xlat
int3
or
sub
lret
divps
lret
dec
movsl
ret
jb
pop
and
adc
lcall
sub
movsb
movsl
sub
adc
xchg
pop
rolb
jge,pt
inc
push
flds
pop
popf
lods
dec
jge
adc
mov
test
adc
scas
add
xchg
xchg
pusha
push
mov
jo
lds
mov
xchg
ret
sarl
push
adc
outsl
test
ja
push
inc
pop
lret
sbb
xchg
rcrl
push
inc
jle
roll
test
nop
adc
cltd
ja
mov
sbb
fisttpll
push
push
jge
dec
adc
xchg
xchg
cmp
imul
dec
sub
dec
movsb
xlat
push
mov
mov
or
dec
dec
movsb
xchg
pop
loopne
pop
int3
sti
sub
insb
call
xchg
sbb
mov
adc
lds
add
sbb
call
ror
ja
jge
iret
xchg
ss
jnp
dec
rcr
and
xchg
pop
pop
fwait
jne
pop
adc
pop
mov
popa
jns
xchg
push
add
bound
mov
push
pop
insl
jb
xchg
mov
adc
lcall
adc
dec
push
xchg
xchg
std
dec
xchg
inc
or
fidivl
dec
push
cltd
xchg
push
ds
pop
xlat
push
adc
jp
shl
mov
mov
pop
lret
xor
dec
dec
out
jge
fs
lret
xchg
dec
mov
inc
xlat
add
aad
or
adc
dec
add
adc
call
pop
hlt
ficoms
adc
inc
pop
cwtl
popf
lods
dec
aad
pop
inc
adc
int3
push
push
ja
and
leave
push
xchg
ret
pop
in
xlat
fisubl
or
mov
out
ja
mov
inc
outsl
dec
daa
cwtl
add
dec
dec
push
roll
lret
mov
pop
push
sbb
pop
or
lcall
test
xor
inc
mov
cltd
mov
shrb
pushf
adc
sbb
xchg
fimull
daa
pop
call
xchg
dec
flds
or
pop
sbb
lds
movsb
sbb
fists
lods
adc
je
ljmp
xchg
adc
xchg
adc
adc
jnp
mov
sub
or
xchg
dec
dec
sub
and
xlat
push
inc
pushf
fcmovu
lret
jo
cmp
jnp
sub
cwtl
xchg
subl
in
inc
arpl
dec
ret
dec
mov
aam
dec
test
lods
inc
decl
push
into
or
jns
mov
fisttpl
xchg
movups
xchg
mov
int3
idiv
mov
xchg
adc
test
arpl
dec
in
pop
xor
lods
add
decl
cmp
lcall
pop
mov
cmp
jbe
push
sub
adc
out
ss
pop
xchg
lock
pop
dec
push
loop
dec
int3
adc
mov
inc
in
mov
add
loop
leave
cltd
sub
dec
xchg
dec
dec
roll
iret
dec
cwtl
ret
push
sarl
mov
test
fs
sbb
test
pop
xchg
cwtl
mov
and
adc
daa
xlat
cmp
mov
adc
jle
fstl
mov
leave
cmp
lret
adc
mov
push
xchg
xchg
iret
push
ja
or
inc
lret
push
lret
cwtl
pop
int3
adc
or
outsb
jne
push
nop
dec
sbb
pop
mov
xchg
jb
xchg
xor
push
sbb
xlat
jle
adc
arpl
ret
inc
push
arpl
push
lret
mov
dec
and
in
sub
loop
mov
fstps
nop
xchg
popf
call
push
test
push
pop
lret
xchg
adc
or
mov
cmpsb
add
push
xor
movsl
or
out
add
xor
lret
push
push
cs
xor
add
inc
in
scas
push
and
cmp
icebp
test
inc
adc
dec
pushf
inc
pushf
and
leave
cli
pop
lret
mov
aaa
loopne
shr
dec
ljmp
iret
dec
push
xchg
sub
gs
or
rcrb
adc
inc
push
gs
dec
dec
lret
movsl
xchg
pop
dec
adc
mov
shrl
pop
rol
aam
nop
jbe
jecxz
adc
imul
test
push
push
dec
xor
fadd
inc
inc
mov
dec
pop
xchg
or
leave
inc
fistpl
in
dec
fildl
mov
repz
push
push
shrb
or
pop
push
iret
in
mov
rcll
adc
shr
add
dec
sbb
cwtl
iret
push
ret
fwait
push
test
enter
out
mov
adc
es
out
xor
fbld
push
lret
lods
jl
inc
mov
mov
xchg
dec
push
xchg
or
mov
sub
push
dec
mov
mov
jge
rorb
mov
fimull
pop
push
xchg
nop
test
ret
out
lret
fmul
ret
imul
cltd
cmc
xchg
push
leave
mov
push
push
call
mulb
push
dec
or
push
xchg
add
dec
jle
mov
scas
in
adc
leave
push
enter
pop
mov
cmp
and
xchg
mov
xchg
or
roll
gs
jnp
pop
push
mov
dec
ljmp
or
pop
jge
push
dec
aad
rolb
cwtl
or
ljmp
arpl
sbb
or
femms
jne
xchg
adc
adc
ficompl
pop
ret
dec
fcom
mov
pushf
cltd
sbb
or
inc
stos
xchg
stos
xor
push
roll
add
and
pop
mov
cltd
cwtl
jl
xor
adc
xor
popl
test
test
repnz
ljmp
push
xchg
sub
dec
scas
hlt
popl
push
cltd
xchg
leave
in
lret
scas
sbb
fisubrl
cmp
lahf
or
push
inc
fdivr
push
out
cmpb
mov
lea
flds
iret
lcall
inc
add
int
mov
xchg
pop
movsl
xchg
adc
out
jb
push
out
push
cmp
int3
insl
xchg
dec
cmova
bound
data16
mov
push
scas
sbb
fwait
daa
imul
aas
fs
enter
imul
pop
ljmp
push
aad
push
in
lret
xchg
push
es
or
jno
fstl
dec
jmp
mov
jno
or
in
pop
rclb
xchg
add
sbb
xchg
adc
push
adc
fwait
adc
es
xor
add
or
aam
xlat
and
or
push
mov
cld
mov
popf
loope
cs
dec
mov
mov
mov
js
dec
push
or
aam
shlb
pusha
cwtl
fadd
push
mov
nop
or
lret
lea
dec
rcll
and
and
out
in
xchg
push
out
push
xor
dec
push
lods
pop
shlb
jle
dec
or
lcall
leave
aam
mov
or
add
int3
pop
pop
lret
inc
lcall
aam
jge
or
lea
dec
or
addr16
call
call
popl
pextrw
adc
movsl
in
jecxz
inc
xchg
xchg
fnstenv
cmp
je
add
int3
xchg
adc
or
and
enter
cld
xchg
es
adc
sbb
jne
mov
or
adc
dec
cmp
adc
out
pop
jg
in
je
fstps
xor
adc
inc
xchg
pop
leave
mov
push
or
add
adc
dec
jp
push
xchg
dec
ja
push
mov
imul
pop
jge
push
call
mov
jbe
push
sbb
jno
inc
gs
mov
xchg
pop
or
jmp
jge
leave
push
divb
jmp
adc
rorl
mov
aam
inc
xor
or
arpl
mov
mov
rorl
jns
in
xchg
ja
subl
clc
jp
or
nop
rcl
fs
push
jnp
push
daa
lods
cmp
xchg
mov
push
and
dec
adc
pop
or
pop
push
xchg
leave
mov
mov
test
pop
jns
cmpl
xlat
xor
jge
or
subl
push
mov
mov
xchg
adc
cpuid
adc
ret
push
inc
cmp
sbb
push
loopne
mov
or
loopne
and
mov
adc
arpl
and
fisttpl
fistps
jp
fs
adc
fs
inc
add
mov
mov
popf
sub
xchg
dec
stc
pop
pop
shlb
sub
and
nop
xchg
sbb
mov
shl
or
xor
push
loop
dec
sbb
xchg
jbe
pop
in
les
xchg
int3
or
jne
cltd
dec
adc
leave
jg
orl
movd
dec
imul
in
pop
xchg
adc
push
movsb
test
jne
push
dec
or
movsl
adc
cmp
aad
and
push
and
repz
push
sbb
outsb
lea
push
or
fdivrs
jnp
cwtl
dec
dec
out
lret
xchg
insl
out
xchg
loopne
xchg
out
mov
adc
mov
jg
jg
lcall
lcall
or
adc
xor
xchg
addr16
xchg
adcl
rcll
bound
push
pop
jae
inc
mov
pop
dec
dec
pop
cmp
push
mov
sbb
nop
mov
dec
imul
jo
jne
iret
dec
or
and
xchg
adcl
xchg
push
lret
fs
or
repnz
fwait
dec
leave
in
push
sbb
popf
inc
pop
mov
xchg
sbb
pushf
pop
mov
iret
adc
jne
push
adc
rorl
adc
adc
lcall
xchg
out
sbb
lret
pop
inc
pop
sbb
xlat
adc
add
fadds
test
push
lock
mov
push
sub
ror
push
into
nop
xor
sbb
and
xchg
adc
cwtl
xchg
ficoml
dec
or
push
pop
sahf
dec
or
aad
out
imul
sbb
int
fidivrl
imul
ret
fs
or
jecxz
call
adc
xchg
inc
push
iret
xchg
dec
fs
sbb
test
and
pop
daa
mov
mov
push
cmpsw
loop
fs
lret
fcom
push
xchg
data16
mov
add
icebp
or
xor
rcrb
mov
xchg
pop
push
push
push
jl
fcoms
inc
pop
push
mov
pop
sbb
xchg
or
jecxz
lret
rcl
sub
and
rcl
movsl
cltd
inc
dec
jecxz
pop
adc
enter
xchg
mov
jmp
push
aas
fsubs
push
mov
arpl
and
push
fdivrs
xchg
cmpsl
daa
rorb
mull
testb
loop
jno
aad
or
sub
or
int3
test
adc
or
fmuls
js
sbb
push
mull
dec
xchg
fstl
inc
or
hlt
or
xchg
rcll
xchg
fstpl
mov
cwtl
adc
les
in
push
int3
loopne
push
enter
mov
imul
push
outsl
and
or
paddq
test
nop
add
or
arpl
sbb
push
pop
push
popf
mov
rcll
dec
mov
inc
arpl
add
xchg
lret
xchg
xchg
fadds
aam
aad
aad
xchg
pop
nop
dec
or
enter
cwtl
cmc
loop
xchg
add
and
es
adc
push
lret
dec
dec
clc
gs
push
push
or
cmpsb
pop
minps
out
outsl
cwtl
or
js
adc
push
adc
jne
adc
sub
mov
dec
subl
inc
in
lret
movsb
adc
dec
mov
push
or
orb
inc
in
sbb
dec
lahf
mov
lea
cmp
dec
or
aad
push
jae
adc
fwait
pop
imul
int3
or
ficompl
xchg
or
inc
lods
or
dec
mov
inc
dec
or
fs
push
enter
scas
push
lret
popf
lds
mov
iret
sbb
xchg
inc
sti
enter
and
ljmp
xchg
push
enter
lret
mov
out
pop
mov
rcl
push
leave
cmpsb
push
int3
cld
call
pop
xchg
push
sub
ja
mov
push
and
aam
adc
in
add
or
stc
mov
pop
mov
push
lea
dec
jg
daa
cltd
outsb
pop
outsl
out
fwait
dec
fnstenv
imul
subl
pop
xor
push
and
lret
fimull
loope
or
push
pop
rorl
and
or
add
dec
jg
or
mov
push
xor
nop
jp
fwait
xchg
add
cmpl
loope
adc
mov
leave
fsubrs
mov
adc
cli
std
sbb
fsubs
pop
pop
shlb
leave
aam
sub
dec
xchg
popf
push
sbb
jb
cltd
adc
adc
inc
xor
gs
shl
and
push
dec
jae
je
ljmp
leave
or
adc
iret
xchg
mov
adc
loope
adc
fldenv
or
leave
push
lock
and
adc
mov
adc
cmp
nop
leave
dec
push
inc
ljmp
je
xor
popf
lock
ja
sub
dec
pop
or
cltd
ljmp
mov
mov
dec
or
add
pushf
adc
mov
lock
insl
jnp
push
nop
dec
fxch
lea
mov
dec
inc
sarl
adc
adc
push
int3
icebp
or
xchg
xchg
mov
dec
fisubs
pop
jno
fiaddl
push
push
outsb
aad
daa
cs
test
cmp
setl
push
stos
xlat
jle
adc
inc
roll
insl
push
dec
sbb
popl
xchg
jbe
push
xor
or
dec
aaa
or
int3
push
sub
popl
xchg
jnp
push
xchg
mov
sarb
xchg
adc
loope
adc
push
sbb
dec
or
push
dec
js
cld
push
mov
sub
jns
xchg
xchg
dec
xor
mov
jne
dec
loope
mov
xchg
shlb
dec
add
jge
xchg
sub
jae
push
adc
mov
push
adc
in
dec
repnz
jp
in
push
lret
push
addr16
pop
push
dec
pop
pop
and
nop
inc
add
adc
jns
sbb
mov
ja
in
sub
mov
add
mov
mov
jecxz
push
adc
cmpsb
and
leave
push
xchg
bnd
arpl
ror
cmpsl
mov
lock
adc
fistpl
dec
xor
rolb
jl
loopne
pop
cld
jnp
hlt
push
push
dec
xorb
jno
xchg
adc
loope
dec
dec
sbb
adc
enter
leave
push
sbb
icebp
mov
mov
mov
arpl
pand
push
xchg
ret
test
mov
adc
mov
push
pushf
mov
and
push
scas
pop
mov
loopne
arpl
lret
in
push
mov
mov
clc
inc
fcomps
adc
xchg
sub
sbb
pushf
cmp
dec
out
mov
sahf
adc
pop
jnp
ja
ljmp
mov
cwtl
xchg
scas
or
sbb
adc
push
inc
ja
xchg
fldcw
imulb
push
jne
adc
xchg
dec
ja
cld
popa
ret
pop
maskmovq
notl
xchg
adc
dec
shr
or
push
adc
push
mov
xchg
lea
cwtl
push
mov
inc
sahf
push
push
push
mov
dec
adcl
adc
shlb
sub
adc
arpl
js
sbb
inc
xchg
mov
sub
push
pop
adc
cwtl
lret
dec
mov
dec
xchg
sbb
jne
push
push
xchg
lcall
xchg
std
push
leave
dec
lahf
hlt
dec
dec
fmuls
mov
mov
nop
in
push
arpl
adcl
lcall
js
xlat
xchg
push
add
scas
loope
xlat
sahf
lahf
iret
sbb
in
or
aas
insl
push
push
dec
out
inc
mov
lret
adc
xor
or
cwtl
movsl
lcall
push
or
mov
dec
mov
xor
in
fcomps
call
nop
arpl
jo
insl
leave
or
or
xor
prefetchnta
xchg
push
data16
add
movups
imul
or
sbb
nop
adc
in
xchg
or
mov
setle
push
xchg
push
mov
int3
push
mov
arpl
leave
enter
mov
xchg
cwtl
shlb
jge
pop
loopne
lret
ret
xchg
mov
mov
push
dec
sbb
adc
add
or
and
adc
lret
nop
pop
jle
adc
sbb
jmp
add
xlat
nop
add
or
mov
mov
pop
xchg
mov
inc
cltd
xor
jmp
sub
push
jns
dec
dec
cmp
in
sahf
int3
jp
or
cmpsb
inc
fsts
and
mov
neg
fwait
rcrl
push
pop
adc
scas
aam
sub
mov
push
jge
dec
popl
and
jns
fistpl
sysret
or
cs
push
fsts
jns
inc
xchg
pop
enter
xchg
lret
fwait
jge
and
push
movsl
xor
push
xchg
push
and
fiaddl
inc
dec
xchg
pop
fmuls
loop
cwtl
add
fld
lods
arpl
or
je
mov
lock
push
jle
pop
mov
stc
lahf
ds
or
adc
jnp
and
mov
div
outsb
sub
add
or
and
xchg
cmp
dec
int3
mov
pushf
mov
dec
cmpsb
loope
xlat
mov
loopne
mov
je
inc
movsb
iret
dec
dec
cmp
lock
or
sbb
mov
or
sbb
push
push
adc
adc
push
insb
inc
das
fldl
mov
lret
out
inc
push
movsb
sub
or
addb
lods
sbb
add
add
test
xchg
pop
leave
fldenv
int3
inc
and
ds
cwtl
sbb
ud0
sbb
xchg
sbb
push
aam
movsb
xchg
stc
mov
cltd
push
lahf
loope
pop
rcll
pop
jecxz
push
xchg
adc
lret
fldenv
pop
adc
nop
pop
lea
mov
cltd
iret
jns
loopne
mov
fstl
push
xchg
xlat
push
leave
inc
addr16
lcall
or
and
or
leave
cmp
lods
loope
push
mov
mov
unpcklps
test
jns
pop
ror
dec
jmp
pop
in
jg
lcall
movsl
xchg
rcrl
xchg
cmp
xchg
xor
jne
enter
pop
test
adc
pop
dec
insl
wbinvd
push
xchg
cmpsb
insb
hlt
pop
push
inc
movsl
dec
movsb
mov
dec
and
mov
adc
inc
es
in
push
int3
cltd
jmp
sub
push
popa
shl
push
popf
xchg
adc
inc
jno
push
movsb
imul
repz
jg
pushf
xchg
pop
xor
dec
ret
add
fisubl
pop
inc
dec
jg
jns
sbb
mov
dec
jne
xchg
dec
cmpsl
add
or
xchg
aam
push
cmp
push
pop
fistl
inc
dec
xor
mov
jg
pop
mov
dec
out
or
dec
cmc
test
adc
sub
xchg
mov
leave
and
dec
xchg
imul
aam
cmpsl
or
lea
or
in
push
xchg
add
or
lret
sbb
xchg
rcl
movsb
cltd
dec
test
push
xchg
xchg
ds
jne
mov
mov
nop
xlat
mov
aam
inc
pop
mov
pop
cmpsl
inc
mov
push
xchg
xchg
dec
adc
lock
ret
jmp
inc
dec
mov
cltd
imul
int3
loop
mov
leave
cmp
add
popa
fwait
mov
negb
enter
pop
dec
or
fiaddl
dec
xchg
inc
cmp
out
push
sub
out
outsb
pop
arpl
fadds
mov
mov
iret
rorb
stos
pop
hlt
xchg
orb
ljmp
stc
jecxz
mov
or
jge
mov
jne
sbb
test
xchg
sub
push
xchg
or
adc
add
or
sub
pop
xor
dec
mov
iret
mov
push
xchg
lret
out
rclb
addr16
or
jmp
or
movsl
push
shl
jns
enter
popl
aam
out
mov
pop
dec
or
xchg
fimuls
rcll
dec
fs
lret
sub
or
in
sahf
push
mov
pop
or
hlt
mov
test
push
xchg
cwtl
pushf
dec
leave
jns
rcl
arpl
xor
sbb
test
push
stos
clc
adc
sub
pop
stc
push
dec
clc
dec
adc
push
adc
inc
cmpsb
inc
add
lret
mov
pop
stc
inc
js
mov
push
addl
je
push
pushf
dec
push
sahf
pop
fdivr
arpl
mov
mov
sbb
stos
inc
xor
and
sarb
pushf
mov
jnp
fldl
rorl
arpl
mov
mov
pop
test
rorb
pop
ja
xchg
cmpsl
pop
popa
push
sub
xchg
jnp
aam
fisttps
sub
imul
add
leave
xchg
sbb
push
data16
iret
adc
push
rclb
jne
dec
rol
mov
xchg
ja
movsb
movhps
scas
xchg
cld
or
mov
sbb
or
dec
add
push
xchg
sub
mov
push
lret
imul
pop
sbb
inc
movsb
pop
ret
sub
into
out
mov
xchg
imul
fdivrs
jg
add
sub
xchg
shl
cwtl
push
pop
imul
xlat
lcall
adc
dec
dec
sub
fsts
pop
mov
push
in
es
jecxz
inc
mov
test
pop
dec
iret
push
push
mov
dec
pushf
lcall
push
dec
push
push
inc
adc
outsl
gs
lret
jmp
ret
adc
and
xchg
xchg
mov
adc
dec
addr16
and
inc
repz
icebp
xchg
pop
test
adc
shll
adc
mov
xor
sub
jle
xchg
fsubl
xbegin
adc
xchg
push
outsl
lcall
dec
lret
cmp
inc
pop
ja
xchg
int3
pop
adc
jbe
sbb
popf
es
ret
popf
sub
inc
and
mov
dec
xlat
push
outsb
fstp
shll
fsubrs
pop
mov
xchg
popf
sti
or
pop
dec
cld
sbb
and
ficoml
cmp
and
dec
jns
enter
sbb
out
xchg
insl
repz
adcl
out
ljmp
push
xchg
or
xchg
nop
lds
push
push
xchg
ds
daa
push
jge
cmpsb
push
adc
pop
enter
loopne
xchg
jo
loop
rorl
test
rolb
prefetchwt1
or
xchg
mov
xlat
jne
or
out
subl
sub
xlat
mov
push
xchg
aam
cmp
xchg
int3
ret
dec
pop
adc
adc
mov
fisttpl
xchg
out
xorb
jp
mov
shlb
dec
cmp
and
and
leave
add
orl
or
dec
lret
mov
roll
jae
adc
leave
xchg
pop
dec
cmc
andb
rcr
mov
push
push
push
iret
ret
aam
leave
repz
cwtl
and
pop
or
mov
xchg
pop
dec
xlat
leave
jmp
lcall
mov
pop
lods
or
sbb
push
push
push
adc
push
push
jne
daa
adc
xor
out
arpl
leave
lret
push
fidivrl
xchg
aaa
jg
and
cwtl
or
dec
push
push
cli
sub
fcomp
lock
stc
xlat
push
mov
push
fwait
mov
sbb
shll
lcall
jecxz
pop
or
inc
cmc
inc
mov
xor
mov
decl
dec
filds
rcl
movsb
loop
pop
ret
lock
mov
and
cmovg
enter
xchg
ja
jnp
or
ds
sahf
rcll
push
test
shll
push
les
js
out
and
sarl
mov
es
in
adc
fs
loop
push
ret
sbb
pop
inc
mov
fcomps
bound
fisttps
iret
and
out
movsl
ja
fwait
mov
testb
call
or
test
push
xor
dec
sbb
push
aaa
and
rolb
ret
adc
xchg
sbb
xchg
test
mov
wbinvd
adc
shll
fcom
dec
mov
or
sbb
rclb
aam
fwait
xchg
jns
sbb
adc
leave
fimull
mov
aam
test
push
push
call
insl
cmp
dec
add
pushf
sub
mov
mov
push
adc
arpl
xchg
dec
add
or
lods
add
int3
xor
adc
cltd
fimull
ss
or
push
int3
nop
mov
fs
adc
inc
xlat
sbb
jns
jge
cltd
nop
cwtl
fsts
mov
stc
ljmp
incl
sub
jno
mov
sbb
sbb
cltd
add
stos
adc
pop
mov
push
hlt
or
ret
jnp
leave
xchg
dec
insl
xchg
mov
lret
lret
inc
js
test
push
dec
cltd
ss
leave
mov
movsl
shlb
dec
adc
mov
nop
fstl
rorl
adc
pop
test
push
xor
or
push
push
loop
or
sbb
dec
dec
ret
mov
fstpl
add
dec
or
fs
aam
rorb
lret
arpl
dec
pop
cltd
push
ret
jae
push
je
jbe
flds
outsl
jns
jnp
loope
add
cmp
addr16
hlt
scas
push
and
sbb
cltd
insl
or
nop
adc
push
and
lret
fcoml
leave
stc
mov
adc
mov
int3
rorb
iret
add
fisttpll
jo
jae
fcoms
cltd
push
popa
fsts
dec
outsb
push
rorb
lcall
xchg
pop
out
inc
sub
and
pop
sub
cwtl
xchg
mov
inc
xor
sbb
mov
xchg
stc
lock
adc
adc
lret
clc
push
inc
addr16
xchg
mov
push
out
mov
adc
in
lea
xor
in
mov
cmp
adcl
pinsrw
jp
mov
hlt
fstl
or
cmp
test
xor
je
les
decb
adc
push
shrb
xchg
adc
push
loop
adc
and
nop
rorl
and
es
pop
outsb
pop
loop
movl
in
jns
pop
pop
or
dec
sub
iret
cltd
jne
aam
sarl
leave
push
dec
jne
add
sbb
adc
enter
pop
xchg
push
xchg
nop
shll
sbb
int3
sbb
push
pop
mov
sub
popa
push
enter
cmp
xchg
adc
push
dec
xchg
movsb
pop
and
push
iret
mov
dec
xchg
dec
jecxz
sub
sub
cltd
mov
xchg
adc
sbb
pop
sbb
dec
inc
jno
jns
lret
pop
xchg
xchg
aas
add
xchg
dec
xchg
hlt
mov
mov
xchg
flds
pusha
loope
inc
pop
fdivrs
xor
lods
loope
dec
mov
mov
inc
pop
test
mov
xchg
pop
daa
xlat
in
mov
arpl
mov
lret
dec
shl
gs
pop
mov
xchg
dec
sbb
push
or
dec
aaa
dec
mov
test
je
xor
and
cmp
ret
inc
cwtl
rcll
hlt
dec
push
lret
stc
push
mov
xchg
pop
push
addl
or
xchg
adc
cltd
iret
ja
fisttpll
mov
mov
or
xchg
pop
loop
adc
lret
orb
push
int3
mov
pop
push
insl
imul
or
add
pop
out
xor
xor
mov
and
rorl
es
add
shll
xchg
fldenv
lret
push
dec
xchg
mov
fisubl
push
pop
or
cld
mov
inc
stos
or
push
sbbl
into
jbe
sahf
xlat
pop
testb
leave
mov
push
xchg
enter
int3
jecxz
adc
jmp
jne
lret
push
fwait
cmovl
stc
cmp
test
mov
or
or
imul
mov
repz
xchg
lcall
and
jae
movhps
mov
imul
mov
pop
int
fwait
inc
pop
aam
nop
add
jp
fsts
leave
les
les
ja
dec
or
jne
or
int
jnp
aad
or
in
imull
sbb
xchg
dec
pop
dec
or
lock
push
xorb
dec
dec
lods
sub
adc
mov
out
pop
jne
mov
pop
adc
jmp
xlat
call
xorl
sub
mov
push
add
dec
mov
or
pop
jp
mov
and
test
dec
cld
aaa
ret
xchg
leave
or
or
setge
push
jb
dec
stos
pop
push
jae
xchg
in
enter
dec
fldenv
and
test
dec
push
xchg
adc
mov
leave
pop
test
ficoml
pop
jg
add
cmp
pop
xor
xchg
sarl
xchg
iret
pop
push
push
mov
aad
sbb
std
aad
or
sbb
loope
or
rol
jbe
mov
outsl
ljmp
rorb
inc
xchg
gs
push
xlat
fimull
mov
mov
ret
fsubs
jns
xchg
dec
ja
int
clc
test
fadd
rcr
leave
xchg
push
mov
mov
sub
in
mov
ficoml
loop
dec
loop
and
cltd
pop
pop
push
mov
mov
push
bnd
pop
dec
pop
jns
mov
fidivl
mov
aam
mov
mov
xchg
mov
and
push
sub
adc
mov
pop
dec
fstl
pushf
mov
sbb
mov
int3
mov
pop
dec
iret
push
je
test
push
sub
popf
xchg
push
mov
xchg
push
sbb
or
push
add
lret
rcrb
sbb
loop
iret
test
mov
dec
or
push
fists
xlat
push
rcr
push
rcll
sbb
rorb
sub
hlt
cmpsl
push
int3
pop
lret
in
push
rorl
ret
dec
scas
inc
outsb
dec
pop
pminub
ficoml
iret
mov
or
mov
es
pop
dec
sub
dec
push
push
inc
mov
stos
mov
jne
imul
fnsetpm(287
sbb
xor
inc
jg
jns
fwait
dec
adc
jg
aad
or
xchg
and
iret
in
cltd
cmp
cmp
rorl
lea
fs
xchg
imul
xchg
xchg
adc
push
or
mov
sbb
iret
pushf
mov
push
pop
xchg
xchg
fldt
push
push
dec
push
nop
add
adc
xchg
push
aad
test
lods
mov
ljmp
sbb
nop
movsb
adc
lret
jne
dec
push
adc
dec
stc
add
or
cmpsl
pop
xchg
cld
mov
out
loopne
add
or
adc
fs
mov
mov
push
pop
mov
adc
push
push
and
mov
std
std
fisttps
push
and
lea
dec
or
insl
inc
push
sub
lock
push
and
adc
push
add
push
pop
nop
mov
push
and
fnstcw
arpl
push
jecxz
mov
loopne
mov
xchg
dec
push
push
adcl
gs
and
mov
mov
mov
pop
lret
and
fcmove
or
cmpsl
and
ja
xchg
push
fmuls
repz
mov
cwtl
addr16
jg
loop
adc
pop
inc
std
test
dec
mov
fsubp
sbb
loop
pop
insl
add
iret
and
dec
iret
inc
mov
cwtl
push
xchg
or
xchg
pushf
or
in
arpl
jecxz
xchg
mov
repz
pop
mov
push
mov
pop
pop
enter
das
cmpsb
movsl
test
or
cmp
dec
cwtl
xchg
push
sahf
test
mov
int3
mov
aad
les
adc
outsl
xchg
cltd
rcll
loop
aam
jecxz
xchg
inc
arpl
roll
add
adc
insl
xor
mov
mov
rclb
jecxz
push
xchg
sbb
or
loop
sbb
dec
lret
lods
imul
xchg
push
rolb
leave
inc
sbbb
cmp
push
imul
xchg
xor
sbb
or
aam
push
sbb
nop
inc
jle
fs
dec
jns
inc
sbb
cwtl
adc
and
dec
xchg
dec
rcll
lods
push
andl
adc
movsb
jecxz
or
xchg
sbb
xchg
xchg
test
dec
push
xchg
jns
xchg
push
sub
jmp
xchg
mov
imul
lret
rorl
dec
mov
push
sbb
js
jp
push
stc
push
xchg
out
jns
sub
mov
in
xchg
push
cwtl
daa
ret
jae
xchg
jnp
push
or
test
push
push
dec
cltd
xor
leave
cmp
out
nop
mov
mov
mov
lret
mov
pop
pop
rcl
pusha
mov
push
xchg
xchg
adc
xchg
pop
jp
sbb
enter
test
int3
stos
xor
sbb
sub
sbb
xchg
repz
pushf
jo
movsl
add
adc
insl
sbb
pop
and
xchg
rclb
movsb
xchg
jecxz
adc
adc
repz
push
or
cmpsb
fwait
pop
movsl
xchg
cmp
dec
dec
scas
cltd
insl
cmp
xchg
lret
add
inc
adc
or
adc
mov
int3
add
cli
adc
push
fmuls
xchg
or
leave
fsts
dec
pop
sbbl
cmc
xchg
orb
push
sub
pop
aad
push
mov
fisttpll
jne
inc
adc
ljmp
leave
ljmp
stos
hlt
repnz
adc
or
shl
in
int3
add
mov
inc
aas
iret
dec
das
dec
dec
movsb
jns
dec
xchg
nop
ficomps
clc
in
add
rcll
shrl
cwtl
inc
repz
push
sbb
push
dec
test
dec
jge
pop
jge
pop
dec
mov
and
xchg
enter
mov
jmp
pop
pop
adc
psubusb
and
jmp
adc
cld
enter
lea
dec
iret
lods
jp
xchg
add
lods
movsl
in
clc
call
pop
loop
xlat
mov
cli
iret
xor
rcrl
ret
ret
jo
pop
rcll
xchg
mov
push
dec
scas
push
stos
rorb
cli
inc
ret
insb
sbb
test
xchg
push
hlt
loop
lret
hlt
out
jge
enter
fcomp
lret
or
jecxz
pushf
lret
call
dec
hlt
push
lock
cmpsl
push
insb
aam
adcb
push
push
xchg
pop
xchg
out
push
mov
xchg
cld
call
fstps
dec
xchg
dec
add
mov
shrl
mov
sbbl
jae
or
neg
jb
in
mov
cld
adc
push
call
subl
cmp
adc
test
jbe
jg
jns
and
dec
push
jbe
xchg
mov
rorl
out
sbb
jl
mov
rcl
imul
sbb
cmc
and
dec
inc
sub
insl
push
leave
into
enter
push
rcll
adc
mov
mov
lret
rorl
je
mov
cmpsl
dec
mov
int
jg
mull
jns
add
lds
ljmp
icebp
leave
bnd
push
imulb
push
ljmp
ds
popf
or
push
fists
fimull
push
shll
mov
sahf
xchg
fwait
out
jmp
arpl
adc
jae
dec
nop
outsl
adc
pop
push
fsubs
pop
push
xchg
jle
push
xchg
mov
ljmp
xchg
inc
lret
test
negb
adc
or
mov
adc
mov
or
push
loop
xchg
dec
add
push
addb
xlat
push
mov
adc
pushf
mov
fcmove
int
push
leave
xlat
pop
or
adc
xor
ja
jg
jns
ljmp
xchg
xchg
xchg
pop
sbb
dec
add
enter
or
or
cltd
fcoms
push
dec
repnz
dec
lret
test
popl
adc
xchg
jmp
lret
push
push
inc
lret
rcl
adc
adc
dec
sbb
xchg
cmc
in
out
push
adc
mov
dec
enter
xor
adc
xor
sbb
sub
leave
nop
imul
dec
push
or
pop
pop
mov
inc
push
push
pop
xlat
gs
adc
pop
jg
sub
jb
fdivrs
push
xor
xchg
test
sub
outsb
dec
push
jg
and
xchg
cwtl
enter
lret
add
pop
dec
dec
adc
mov
xchg
fiaddl
ljmp
cmpsb
or
lock
push
or
push
lods
cmp
aaa
bound
mov
test
pop
in
or
adc
xchg
scas
or
adcl
or
sbb
inc
in
shll
xchg
fiaddl
xchg
je
adc
sbb
fcmovbe
test
push
lret
pop
ja
lcall
jne
adc
add
insb
rcr
push
mov
mov
mov
push
fcmovu
adc
mov
pop
insb
inc
xchg
cltd
mov
xchg
lds
or
js
fwait
push
loopne
nop
push
cmp
push
mov
addl
xor
dec
pop
or
or
or
sbb
inc
sbb
push
jae
xchg
adc
cwtl
adc
pushf
leave
dec
daa
loopne
loop
mov
outsb
inc
fxch
les
or
test
lret
add
into
xchg
mov
pop
pop
rclb
pop
popf
xchg
cwtl
andl
outsl
mov
rorl
jecxz
pop
jns
xchg
mov
dec
aam
xlat
mov
push
sbb
mov
or
or
xchg
cltd
jbe
xor
pop
push
pop
outsl
jle
out
push
push
and
pop
sbb
lret
mov
out
ja
cmc
mov
enter
fs
mov
push
icebp
mov
xchg
lcall
sbb
lods
into
fs
xor
dec
div
inc
fs
mov
jo
subb
adc
pop
adc
andl
push
inc
push
dec
pop
adc
fwait
in
ror
xorb
push
fisttpl
in
add
rcll
cltd
leave
and
cwtl
pop
inc
adc
arpl
movsb
xchg
dec
test
je
lods
lret
push
loope
dec
or
and
aas
pop
push
dec
imul
push
mov
or
push
dec
mov
sbb
std
sbb
insb
pop
rcl
int3
and
push
rorl
or
or
cmp
push
adc
xchg
cltd
adc
mov
lds
push
or
xchg
or
adcb
xchg
sbb
dec
cwtl
xchg
dec
les
clc
mov
add
or
imul
or
dec
mov
ja
dec
or
popf
pop
sbb
pop
stc
pushf
movsb
cmpsb
loopne
sahf
jg
leave
dec
ret
push
fs
cwtl
or
je
inc
pop
push
or
dec
popf
mov
adc
imul
mov
xor
rorb
fs
push
cwtl
add
nop
mov
xlat
fcom
outsl
das
in
leave
adc
sbbl
out
out
jns
aad
pop
in
fldl
adc
fmul
push
jbe
mov
jg
jg
jns
push
xchg
push
or
xor
fldcw
push
nop
adc
js
lret
jge,pn
jb
xchg
cbtw
push
xchg
sbb
add
dec
imul
mov
popf
mov
push
sbb
movsb
mov
cli
jne
mov
leave
or
push
cld
ljmp
mov
in
out
mov
xchg
out
pop
push
mov
loopne
cpuid
mov
jle
iret
mov
mov
sarl
sub
xor
popf
dec
dec
sbb
pop
xchg
push
roll
pop
dec
cmc
add
adc
pop
dec
lea
shr
iret
pop
shrl
test
xchg
dec
push
xchg
out
out
mov
cmpb
pop
dec
ret
mov
in
xchg
clc
pop
jb
xchg
int3
pop
push
pop
mov
push
sbb
push
mulb
fcomps
xlat
or
push
xchg
push
push
inc
leave
flds
xchg
cwtl
or
dec
dec
pop
push
icebp
cld
adc
or
test
pop
iret
lret
or
adc
xchg
pop
sub
sbb
fistpl
enter
scas
insl
xchg
xchg
ror
adc
xchg
xor
daa
adc
xor
push
sub
jle
xchg
test
push
adc
rolb
mov
xchg
dec
fcomps
leave
and
pop
and
push
sbb
stos
aad
dec
xlat
mov
rclb
rolb
adc
mov
mov
or
sub
inc
test
sarb
mov
loop
or
push
fidivrl
xlat
lret
enter
aad
adc
push
lahf
xchg
pop
xchg
dec
dec
out
sbb
push
push
mov
insb
inc
cmpsb
push
dec
popf
out
adc
dec
stos
xchg
es
or
or
mov
lret
pop
ja
xorl
outsl
lahf
or
rcrb
lock
imul
push
or
int3
iret
test
leave
adc
xchg
into
dec
arpl
cltd
ret
nop
push
cmp
jo
sub
sub
add
jle
pop
rorl
pop
push
jae
lret
adc
push
dec
mov
out
push
adc
test
xlat
mov
adc
int
or
cmpsl
add
push
xlat
xor
rorl
mov
stos
xchg
mov
les
aad
dec
cltd
xchg
sbb
xchg
addr16
jle
mov
mov
out
rorl
lret
xor
add
xchg
adc
push
loop
jecxz
pop
insb
push
inc
rol
dec
pop
add
pop
imul
loopne
pop
jge
or
adc
stos
fstl
xchg
pop
jl
int3
mov
xlat
mov
dec
dec
pop
push
mov
mov
dec
adc
dec
cmp
add
movsb
pop
cmp
fs
xchg
out
inc
sahf
or
inc
ror
dec
adc
xchg
pop
lret
adc
std
mov
insl
inc
and
adc
dec
cltd
or
adc
xchg
cs
or
pop
loopne
rcr
push
movsb
aam
inc
sbb
dec
outsb
leave
fadds
lret
dec
fwait
mov
xchg
pop
in
lret
xor
and
iret
adc
dec
pop
ja
xchg
adc
dec
movsl
in
xchg
mov
mov
mov
dec
dec
push
and
ret
dec
pop
or
push
dec
enter
push
loop
dec
xor
push
fstps
dec
lea
inc
and
pop
mov
jns
add
mov
xchg
or
cltd
jle
xor
rolb
add
xchg
leave
dec
daa
xor
sub
jo
jno
pop
dec
aam
mov
jne
pop
or
inc
lock
cmc
mov
sbb
sub
adc
and
or
pop
jns
mov
lcall
dec
pop
xor
jns
push
dec
adc
jns
fstp
fcoms
mov
mov
pop
or
and
and
push
paddq
rcr
or
xlat
cmp
mov
enter
js
in
mov
outsb
pop
adcb
hlt
adc
dec
xchg
xor
pop
mov
sarl
addr16
xlat
and
xchg
leave
or
adc
sub
dec
adc
lret
call
xchg
push
fxch
adc
or
pop
lret
cwtl
stc
xchg
cmp
jle
or
pushf
les
push
push
stos
dec
mov
add
xlat
lcall
imul
mov
adc
cmc
dec
adc
or
aam
dec
push
sbb
pop
adc
or
dec
rorl
pop
or
push
xchg
push
xlat
fimull
dec
xchg
sbb
pop
out
or
mov
sahf
push
jo
and
call
movsl
push
jge
xlat
xchg
and
aam
push
mov
xor
jle
mov
mov
xlat
movsb
popf
rcr
nop
mov
lret
sub
and
dec
dec
jae
leave
xchg
mov
pcmpeqb
xor
adc
loop
xchg
adc
cltd
nop
xlat
xchg
dec
adc
xchg
cmpsb
in
fsubrs
dec
mov
cwtl
xchg
adc
dec
test
mov
xchg
outsl
push
lret
cltd
cwtl
push
jle
or
movsb
inc
xchg
int3
hlt
mov
int3
mov
pop
ret
loop
inc
add
les
pop
push
pushf
xlat
rcll
adc
sub
leave
dec
rclb
mov
push
and
dec
repnz
retw
in
cmp
sbb
int3
in
add
jne
lret
cwtl
push
iret
push
jg
push
lret
push
cld
jmp
sub
mov
test
adc
mov
movsl
lret
aad
push
xchg
pop
adc
nop
add
notb
or
mov
push
dec
push
lea
rclb
ja
dec
lock
lock
inc
dec
cmp
inc
xor
andl
and
mov
mov
iret
subl
jle
aad
push
or
fidivrl
add
iret
fs
cli
jmp
jmp
push
or
lds
js
add
adc
adc
push
gs
mov
xchg
mov
cltd
dec
pop
dec
cltd
xchg
xlat
cmp
and
fcmovb
sahf
rcrb
int3
push
inc
and
cmp
cs
mov
push
xor
imul
mov
mov
orl
imul
loope
push
inc
loopne
bound
pop
test
push
xchg
xchg
cltd
fmuls
xor
inc
iret
adc
loopne
or
fldenv
jns
in
and
icebp
cmpxchg
fnstsw
stc
mov
mov
adc
mov
pop
in
data16
push
lret
sub
or
test
push
dec
dec
inc
or
cltd
push
push
cmpsb
mov
dec
or
adc
dec
dec
outsb
movsl
into
std
lahf
outsb
xchg
adc
nop
aad
push
shll
jo
cwtl
nop
loop
mov
dec
mov
sbb
push
mov
fdivrl
adc
dec
dec
mov
lods
in
fwait
shll
fimull
pop
cltd
aam
add
cmovge
xchg
fisubrl
mov
dec
push
leave
push
rclb
mov
add
mov
mov
sbb
bound
lret
or
cmp
dec
std
pop
sti
jo
mov
mov
daa
or
pop
mov
aam
or
lds
sub
int
xor
int3
xchg
or
mov
jge
push
xorps
insb
pop
push
mov
add
jle
rcll
xchg
pop
cmp
jno
push
xchg
lock
roll
fwait
adc
add
push
shlb
xchg
ljmp
stos
dec
inc
adc
add
cmp
pop
mov
xlat
xchg
ljmp
adc
inc
imul
shr
add
out
jle
jg
ljmp
jle
in
cmp
xchg
pushf
xchg
push
aam
aam
or
xchg
cld
cwtl
jle
cmp
sarl
adc
ljmp
loopnew
cmp
jo
jle
out
inc
adc
push
dec
pop
incl
cmp
sti
dec
cld
jle
daa
xchg
jp
sti
adc
inc
cld
push
and
inc
js
inc
ret
inc
or
jle
xlat
inc
push
push
scas
adc
popf
stc
aas
inc
test
jle
out
push
inc
xor
ljmp
rorb
cwtl
cltd
fldt
jle
push
adc
shrl
fdivrs
nop
adc
dec
sti
shlb
filds
jle
mov
sub
sbb
scas
jle
mov
push
xchg
mov
aas
jo
xchg
jle
daa
mov
dec
cld
sub
jo
jle
mov
sub
aam
idivl
out
xchg
test
or
ljmp
cld
test
or
mov
push
pop
push
or
nop
jl
scas
jle
push
iret
xchg
cmp
jle
add
jle
mov
xchg
es
aad
pop
xchg
out
jle
or
jle
fwait
or
jl
add
cwtl
push
lret
mov
pop
mov
dec
push
xchg
mov
inc
iret
adc
cmpsl
test
dec
adc
inc
push
pop
or
or
jo
rcrb
sbb
lret
adc
rcl
inc
xlat
jecxz
push
popf
adc
mov
test
dec
sbb
dec
push
pop
adc
xchg
or
gs
pop
or
mov
icebp
enter
mov
js
mov
xor
or
dec
mov
or
pop
pop
loopne
jns
or
push
xchg
push
lret
xchg
sbb
fidivrl
aaa
enter
dec
call
gs
aam
cwtl
fsts
out
adc
xchg
mov
aaa
jmp
cltd
mov
cltd
mov
fcoms
icebp
mov
sysret
mov
sarb
fcmovnbe
xchg
in
push
xor
pushf
cwtl
sub
popa
xchg
popf
mov
pop
movsl
mov
push
hlt
inc
test
push
fmuls
adc
mov
daa
xchg
pop
push
nop
dec
xchg
decl
mov
enter
or
sbb
sbb
adc
ficomps
cwtl
adc
push
push
dec
xchg
mov
enter
mov
stos
pop
sbb
fcom
and
fnsave
dec
adc
enter
addr16
dec
dec
xchg
xchg
adc
push
jle
inc
xor
cltd
shl
push
leave
cltd
and
jle
add
push
add
pop
lcall
enter
sbb
int3
or
push
sbb
cli
adc
dec
adc
jno
mov
or
push
fstps
pop
sbb
mov
jle
pushf
mov
rorl
rcrb
pop
mov
cli
mov
shrb
rolb
loopne
sarl
cwtl
pop
sti
cwtl
ljmp
pushf
mov
inc
pop
fidivl
int3
outsl
mov
push
ficoml
fld
stos
mov
and
mov
push
xchg
rol
push
dec
loopne
es
nop
adc
and
sbb
jno
pusha
dec
push
std
out
ds
decl
out
fstpt
or
popl
cmp
adc
inc
cld
add
cmpsl
fisttpl
ss
sub
and
cmp
mov
divl
jle
ja
sahf
fdivrs
cmp
mov
mov
mov
push
js
add
into
daa
cmp
hlt
xchg
xchg
xchg
cli
add
shl
and
jl
loopne
fstl
push
js
inc
leave
mov
addr16
add
fcmovb
lcall
mov
jle
push
xchg
dec
or
sub
mov
mov
push
sbb
in
jle
nop
aas
decl
rcrb
mov
adc
lcall
add
add
jle
test
mov
adc
jbe
rcll
or
cmovge
sub
sarl
lods
xchg
adc
iret
push
inc
mov
rolb
pushf
add
fcmovb
pop
inc
pop
daa
pop
or
mov
dec
fcomp
cwtl
rclb
inc
jbe
and
mov
loope
cltd
or
inc
iret
popl
mov
dec
hlt
or
jbe
adc
mov
dec
out
aad
push
loop
xchg
cltd
dec
inc
lods
lock
leave
aam
mov
imul
loopne
dec
leave
in
adc
adc
pop
pop
pop
push
or
or
push
fcom
dec
push
push
imul
and
mov
jno
sar
inc
adc
xchg
mov
xchg
cmp
leave
pop
mov
lock
push
push
add
xlat
icebp
cmp
xchg
sub
lret
xchg
adc
push
cld
in
ror
mov
mov
jg
setp
inc
iret
or
dec
hlt
cltd
xchg
lret
push
enter
adc
hlt
xchg
dec
or
xor
rcr
mov
dec
cmp
and
lret
aam
mov
add
dec
aam
dec
movsb
rcll
xchg
dec
xor
push
mov
dec
dec
xchg
outsl
jg
push
dec
xchg
mov
mov
loop
push
ret
mov
rcl
in
or
nop
dec
xchg
adc
dec
pop
sbb
xchg
pushf
push
xchg
push
inc
loope
adc
push
mov
pop
jno
dec
push
adcl
adc
pop
and
mov
push
jne
adc
adc
push
mov
jb
mov
xchg
jne
push
xchg
sub
ds
icebp
dec
dec
add
or
xchg
ficoms
fimull
stos
mov
or
xchg
adc
dec
jl
loope
pop
mov
imul
vpshaq
subl
and
adc
leave
movsl
lea
adc
imul
dec
push
push
aad
mov
iret
dec
and
dec
add
int3
mov
or
rcll
jns
mov
xchg
or
pop
or
xchg
push
lret
in
shlb
push
fisubl
cwtl
xlat
loope
mov
pop
dec
rcr
xchg
enter
bound
or
not
jle
rcll
dec
ds
xchg
rclb
pop
aam
addr16
push
xchg
mov
ror
in
push
fwait
inc
jnp
mov
lret
xchg
jle
ja
push
cltd
jecxz
pop
adc
jge
mov
push
adc
in
sahf
pop
dec
lret
mov
jge
cmc
mov
shl
fwait
xlat
shl
pop
sbb
nop
push
adc
pushf
xchg
dec
cltd
fmul
addr16
dec
pop
dec
push
rclb
and
cltd
enter
push
dec
xor
xlat
add
xchg
push
shlb
mov
rorb
jns
adc
xlat
adc
or
int3
sub
nop
pop
or
xor
cltd
into
enter
sti
cmp
fimull
cmp
iret
dec
push
psubusw
xchg
in
xchg
out
push
adc
mov
adc
rcll
or
xchg
int3
dec
xchg
and
mov
pop
adc
or
out
subb
push
int
adc
cmp
movsb
decl
mov
dec
cmp
mov
in
mov
fimull
xchg
sbb
pop
push
sarb
xor
arpl
mov
xlat
jno
dec
lret
adc
fcoml
lret
sbb
cwtl
jle
adc
and
adc
aam
cmp
pushf
adc
sarl
test
or
fistl
sub
arpl
or
sbb
mov
xchg
dec
pop
loope
mov
or
cltd
sbb
push
sbb
push
loope
dec
movsl
cwtl
adc
outsl
mov
pop
shrl
mov
cmpl
leave
pop
cmp
sti
cwtl
xchg
loop
or
push
xchg
popa
cltd
aaa
or
rcl
addr16
lret
push
push
imul
jge
inc
ja
xlat
pop
ficoml
mov
dec
ror
into
shll
pop
push
add
fwait
push
js
xchg
or
mov
aam
xlat
test
dec
mov
xor
lds
cmp
jle
xchg
leave
jae
jge
seta
arpl
mov
lret
mov
idiv
dec
sub
dec
leave
std
push
fsts
mov
ja
inc
xchg
adc
mov
pop
movsb
fisttpll
jne
push
mov
hlt
pop
shlb
pop
push
push
cmovs
mov
aad
add
xchg
ja
adc
stos
sub
sub
in
cld
mov
lods
push
jns
mov
ljmp
lret
adc
stos
sbb
shll
cwtl
imul
xchg
inc
mov
jle
aam
push
mov
bound
cltd
fstl
xchg
or
decb
sbb
lea
rcrb
push
shll
cwtl
and
push
push
pop
xchg
les
cltd
dec
cmpsl
inc
jns
data16
stos
jg
in
sar
push
nop
lret
dec
sbbl
and
rorl
or
nop
push
rcr
pop
iret
lret
or
rcl
cmp
mov
xchg
aam
push
fstps
popl
and
mov
push
enter
mov
int3
shl
fistl
jne
cltd
fiaddl
dec
or
popf
add
jno
sub
pop
shll
loopne
jecxz
push
pop
inc
dec
mov
iret
dec
aaa
dec
jecxz
sub
mov
fs
rcll
add
cwtl
lret
dec
lea
insl
gs
mov
or
ret
xchg
xchg
movsl
iret
and
mov
adc
ret
loope
push
int3
and
dec
fdivs
dec
jge
adc
pop
fcmovb
mov
pop
jbe
in
ss
in
mov
rclb
xchg
popl
cwtl
cmp
mov
shlb
ret
and
rcll
xchg
test
mov
mov
or
fmuls
push
adc
fwait
mov
pop
xchg
nop
xchg
rcrb
xchg
scas
arpl
cmpsb
dec
or
mov
aam
xlat
lret
add
lret
mov
ret
mov
fneni(8087
mov
add
cwtl
mov
adc
push
leave
outsb
adc
js
rcl
add
xchg
pop
xchg
xchg
or
mov
xor
xor
pop
xchg
adc
mul
mov
push
xchg
adc
mov
loop
xchg
push
xchg
jno
jg
jg
sbb
dec
mov
dec
mov
dec
push
out
pop
pop
xor
pop
cwtl
dec
into
pop
jne
push
nop
ficoml
int
cltd
pop
mov
or
and
or
lea
xchg
mov
xchg
cwtl
push
in
pop
xchg
pop
xchg
test
popf
sbb
roll
arpl
pop
gs
dec
mov
adc
aam
enter
lock
push
adc
popf
jb
adc
xchg
sbb
rorl
xchg
pop
inc
jg
add
data16
popl
movsb
sbb
adc
jle
scas
dec
jbe
dec
andl
movsb
and
xchg
sub
daa
xchg
test
mov
mov
xor
in
dec
and
jg
pop
and
lahf
xchg
fwait
rclb
push
or
mov
or
or
dec
ret
fldl
paddq
jns
movsb
cltd
mov
jno
push
rcl
jg
lods
popf
inc
cwtl
or
push
lcall
iret
dec
sub
lea
data16
lret
movsl
xchg
lahf
ljmp
pop
xchg
mov
nop
dec
and
mov
push
push
cwtl
or
sub
movsl
xchg
mov
dec
pusha
pop
dec
data16
xchg
xchg
inc
jg
xchg
or
push
fs
push
adc
insl
or
adc
cmp
int3
inc
inc
iret
adc
xor
adc
lock
arpl
iret
dec
and
rcl
andl
rolb
aaa
imul
adc
arpl
rorl
imul
xchg
sbb
mov
pop
std
push
aad
dec
or
lret
outsb
leave
out
in
sub
or
xchg
lods
cmp
push
mov
les
rclb
mov
enter
rcrl
dec
nop
loopne
and
dec
push
xchg
cmpsl
outsl
mov
inc
cltd
mov
mov
fmul
adc
jle
push
jo
push
gs
xchg
adc
adc
jno
mov
adc
pop
xchg
pop
mov
sub
enter
lods
or
jg
fistl
xchg
xchg
sbb
dec
cltd
jnp
aas
adc
and
lret
aam
xchg
cmp
sub
add
push
sahf
out
negl
fcoms
sub
sti
sub
shll
dec
xchg
mov
cwtl
cmp
pop
push
push
imul
or
dec
xchg
or
vpmullw
mov
mov
push
add
dec
sbb
xchg
aad
push
lret
inc
jl
inc
popf
cmp
jge
cmpsl
pop
pop
xorl
iret
mov
pop
mov
adcb
lcall
push
es
lret
mov
adc
or
pop
add
cwtl
mov
sub
aam
int3
xchg
sbb
cltd
mov
jmp
ret
cmp
rcrb
pop
in
lods
in
mov
mov
lret
rcll
pop
inc
pop
hlt
repnz
or
loop
xor
mov
or
jecxz
pop
adc
movsb
lds
xlat
mov
mov
inc
arpl
mov
mov
dec
or
xor
pop
sbb
push
xlat
xchg
mov
negl
xor
nop
adc
jb
push
jge
mov
inc
dec
pop
or
sub
lret
pop
add
popf
repnz
clc
mov
cmc
aas
sbb
xchg
xchg
outsl
xorps
add
test
or
xchg
pop
xchg
push
cmp
mov
push
lods
adc
push
xlat
hlt
std
push
pop
mov
pop
pop
hlt
sbb
jno
adc
outsb
cmp
jo
mov
xchg
dec
pop
xchg
inc
xlat
xor
or
push
jl
fxch
in
mov
lret
lret
aam
push
jmp
xchg
sarb
lock
ja
in
dec
dec
pop
mov
jl
pusha
ljmp
pop
jle
or
xchg
jb
push
or
or
or
mov
or
ficoml
inc
fs
lret
or
movsb
addr16
je
jne
pop
rcr
jge
enter
stos
mov
xchg
push
cltd
sbb
dec
pop
xchg
inc
xchg
rcr
mov
push
and
push
mov
out
xchg
xchg
mov
rorb
out
outsl
and
popf
cmp
pop
ficoml
out
out
and
ficoml
inc
cwtl
insl
mov
dec
push
lea
or
pop
and
jle
leave
pop
or
lret
dec
xor
popf
hlt
int3
pushf
push
push
imul
dec
jns
dec
pop
setae
jg
xchg
mov
xchg
cmp
mov
mov
daa
push
dec
insl
xchg
xchg
and
sbb
pop
or
jl
inc
mov
push
pop
lret
decl
jmp
int3
pop
jg
addl
nop
dec
test
imul
dec
xor
das
pop
push
push
or
clc
inc
fisttpll
arpl
pop
test
jne
dec
or
lret
mov
push
sub
or
xchg
inc
jg
push
iret
xor
sbb
and
jb
movsb
and
inc
pop
mov
jo
dec
cmp
xchg
push
enter
movsl
adc
push
add
cmp
push
mov
enter
arpl
mov
lds
push
int3
adc
jmp
jns
mov
or
outsb
xlat
adc
xchg
icebp
adc
fwait
jecxz
dec
movsb
movsb
push
xchg
sbb
int3
add
pop
ss
fwait
cmc
pushf
xchg
dec
push
and
push
pop
xlat
dec
inc
shlb
and
push
or
xchg
dec
dec
sub
dec
ljmp
adc
into
push
imul
jg
sbb
popf
xor
iret
shll
xlat
mov
fstps
repnz
repnz
popf
dec
rcrl
push
or
and
aam
lcall
xchg
loope
loopne
jecxz
xchg
dec
jne
lret
mov
adc
and
sbb
sub
fsubrs
shlb
adc
imul
iret
shrl
movaps
push
sbb
mov
pop
and
push
insl
add
cltd
sub
adc
movl
jne
or
dec
and
enter
dec
lods
xor
das
adc
xchg
cmp
xchg
and
test
cs
and
push
jecxz
dec
pop
iret
xchg
popf
adc
sbb
or
push
xchg
fstpl
lgs
mov
sahf
inc
repnz
xchg
jl
mov
hlt
mov
cmp
std
xchg
adc
xchg
movsb
loopne
and
push
or
inc
imul
aam
ret
xchg
push
or
inc
or
cwtl
or
dec
jae
push
andb
lds
dec
xchg
cs
inc
adc
jb
mull
leave
in
pusha
mov
adc
les
in
cltd
dec
aam
mov
cwtl
lds
mov
leave
fmuls
ljmp
cmc
addr16
cmpsl
and
int3
adc
in
or
cwtl
dec
sarl
in
jns
pushf
xchg
adc
sbb
cmp
xchg
sahf
add
jns
jo
aas
push
int3
and
aaa
in
mov
dec
ret
push
mov
push
or
sub
repz
dec
insl
mov
fdivrs
iret
jno
mov
cwtl
adc
sub
adc
and
out
xchg
sub
nop
rcrb
lret
ja
or
push
mov
bound
cmp
or
in
sysenter
adc
or
jge
adc
inc
imul
push
dec
clc
popf
inc
dec
xchg
cwtl
pcmpgtd
lret
lcall
nop
dec
adc
cltd
ret
jecxz
rcl
loop
arpl
push
add
mov
imul
movsb
dec
int3
lret
je
mov
push
movsb
jp
xchg
hlt
jbe
test
inc
sarb
outsl
cltd
bound
mov
xchg
les
push
add
movsl
xchg
call
push
nop
test
cwtl
mov
push
testb
xchg
lcall
mov
in
sub
xchg
cmp
fwait
nop
push
movsl
xchg
or
into
jbe
leave
xchg
mov
scas
js
inc
and
pop
xor
adc
hlt
lods
pusha
lods
das
ret
ficoms
mov
push
push
insl
and
jns
dec
dec
cmpl
adc
xchg
push
leave
xchg
adc
mov
xchg
dec
and
dec
cwtl
adc
adc
xchg
popf
bound
mov
xchg
sahf
in
jmp
in
inc
pop
mov
xchg
and
xchg
cltd
imul
mov
sub
nop
dec
jl
or
test
cltd
int3
push
arpl
adc
xchg
inc
out
in
faddp
mov
push
lret
pop
aam
dec
push
in
pop
adc
sub
xchg
adc
mov
push
and
inc
movsb
scas
fdiv
out
dec
int3
or
ja
imul
or
adc
out
loop
mov
sub
mov
xchg
xlat
dec
ficompl
jle
aad
shll
loope
adc
xlat
mov
add
dec
adc
xchg
pop
cltd
loopne
mov
insl
test
lret
pop
popa
lcall
add
and
js
dec
push
push
lret
add
xchg
mov
lret
jge
mov
sbb
adc
push
test
inc
dec
sub
in
jecxz
mov
cld
pop
dec
test
or
xchg
sar
and
or
dec
or
xchg
dec
ror
jmp
icebp
jle
ret
iret
aam
movsl
leave
orb
push
or
push
test
mov
rorl
ret
mov
fmul
jmp
dec
push
jg
or
dec
outsl
sti
es
pop
insl
mov
adc
or
rorb
in
dec
daa
insb
pop
xchg
loop
rorl
and
xchg
test
add
push
jg
sbb
adc
pop
mov
cld
jg
dec
dec
jmp
xchg
test
xchg
xchg
or
adc
repnz
sbb
mov
mov
cmp
rorl
cli
jne
push
rcll
xchg
push
sub
lret
dec
mov
dec
mov
lret
cltd
push
xchg
and
jns
fadds
adc
xchg
adcl
iret
or
es
adc
sbb
movsb
push
mov
dec
cli
hlt
adc
xchg
adc
sbb
orb
js
fsts
mov
rorb
cmp
mov
shll
dec
jmp
jns
xchg
js
jecxz
xchg
adc
add
pop
xchg
adc
push
mov
aad
and
pop
in
imul
push
dec
or
jg
lcall
cwtl
or
leave
sbb
inc
mov
pop
movsl
dec
test
xchg
mov
movsl
shrl
xchg
adc
xor
insb
lret
jns
or
ja
loopne
or
pop
cmp
test
dec
fmul
mov
dec
adc
pop
mov
xchg
inc
in
and
sbb
jmp
clc
xchg
movsl
popf
jmp
cmp
stc
jge
pop
fcoms
nop
adc
out
fists
pop
movsb
inc
push
xchg
test
ret
or
stc
hlt
dec
sarl
inc
pop
loope
xchg
outsl
mov
xchg
xchg
loop
mov
push
ret
xlat
or
adc
sbbl
cmpsb
pop
mov
movsb
test
adc
xchg
pop
adc
and
pop
hlt
pop
int3
ficoml
fsts
xchg
add
dec
dec
bnd
jg
sbb
in
mov
lret
out
jle
mov
jle
jp
test
mov
xlat
xchg
lret
cmc
gs
dec
fmuls
push
enter
push
testl
xchg
lahf
xchg
xchg
and
or
hlt
mov
adc
xchg
repnz
and
fcoms
outsl
dec
push
gs
adcl
jge
push
dec
mov
and
adc
sbb
lcall
nop
cmp
dec
dec
xchg
stos
lock
push
test
add
dec
xchg
adc
andw
leave
xchg
popa
jg
pop
xchg
xchg
fisubl
or
mov
lret
mov
jg
call
lcall
movsl
pushf
mov
fwait
sti
sub
pushf
sbb
mov
dec
lret
xchg
cmpsb
test
or
adc
push
lea
xchg
and
aas
cld
jecxz
or
aam
dec
es
cld
invd
stos
xchg
out
dec
nop
sub
jno
insl
pop
xchg
adc
pop
pop
imul
push
ficoml
xor
sbb
hlt
push
inc
or
xor
repnz
mov
lret
xchg
jge
ror
fnstenv
xchg
movsl
add
adc
mov
les
xlat
scas
int3
cmp
jg
xchg
mov
fisttpll
or
mov
mov
fdivrs
mov
outsl
ror
push
sbb
cld
pop
push
or
xor
xor
mov
cltd
and
pop
or
dec
stc
pop
stc
out
test
or
mov
xchg
adc
xchg
jns
subl
dec
clc
enter
adc
into
es
xchg
leave
das
pop
ds
mov
cmp
leave
cmp
add
push
out
notl
fidivrl
rclb
adc
jmp
ss
push
stc
and
jmp
sbb
mov
cs
inc
das
cmp
pop
es
jmp
sbb
cmp
pushf
rclb
sbb
mov
mov
test
iret
lods
lea
push
adc
out
lcall
jp
bound
ljmp
xchg
push
lret
jge
cltd
cwtl
sbb
adc
shlb
push
adc
dec
sbb
mov
inc
repnz
lock
inc
fabs
xchg
or
push
xchg
adc
sub
or
jp
pop
jle
mov
adc
push
fisubrl
xchg
iret
push
mov
sahf
adc
arpl
xchg
test
push
js
adcl
fstps
dec
lock
cmp
inc
mov
mov
or
sbb
adc
mov
pop
xchg
test
adc
jecxz
adc
ficompl
xchg
or
xor
cmp
xchg
call
sub
push
test
inc
push
decb
fst
lret
jl
and
and
and
pop
enter
pop
mov
dec
dec
push
dec
or
or
xorb
cmp
adc
adc
movsl
movsb
sbb
pop
hlt
lret
mov
jno
dec
xor
xchg
iret
test
lds
mov
cltd
or
or
push
push
jecxz
mov
or
xlat
push
or
dec
adc
lcall
mov
leave
dec
daa
bound
pop
dec
sub
into
adc
or
shrl
mov
arpl
dec
lret
popa
testl
imul
je
cltd
test
aaa
lods
jns
xchg
cwtl
mov
inc
dec
pop
or
xor
dec
adc
insl
xchg
jle
inc
xchg
xchg
pop
addr16
popf
into
rorb
nop
push
xor
push
mov
out
loop
ljmp
and
dec
stos
push
mov
push
mov
ljmp
jle
dec
andl
stos
pop
push
lods
mov
push
shlb
sbb
loope
pop
scas
arpl
mov
mov
leave
push
xorl
sbb
sbb
xor
push
mov
enter
adc
stc
stos
out
sub
jge
int
imul
add
es
mov
push
xchg
dec
lods
pop
test
mov
aad
mov
push
xor
inc
sbb
leave
xchg
mov
enter
push
sbb
mov
pop
xlat
and
js
sbb
pop
cmp
and
fwait
push
gs
std
add
sbb
or
add
xlat
cwtl
cmp
push
jp
pop
cld
inc
sbb
je
or
dec
iret
and
imul
dec
mov
fdivrs
in
pop
mov
nop
add
test
jecxz
push
mov
addb
jno
out
arpl
aam
xchg
in
push
imulb
mov
jo
addl
or
rcl
push
rorb
and
dec
cmc
sarb
sbb
test
sahf
or
pop
pop
iret
rcrb
jmp
and
or
push
xorl
js
xor
mov
and
cmpsb
hlt
enter
dec
xor
mov
fcmovne
cltd
sub
outsl
enter
fucom
pop
xchg
leave
cld
nop
xchg
or
push
and
mov
fistpl
or
fisubrl
or
fcomps
mov
rcl
sahf
pop
insb
push
movsb
push
mov
inc
lcall
fmulp
rorl
and
mov
and
adc
movsb
jo
imul
or
push
xchg
fisttpll
icebp
and
xor
setb
pop
sarl
imul
les
ret
sbb
lock
sbb
cs
xor
mov
sbb
dec
inc
or
dec
int3
out
negl
or
jle
aam
mov
out
call
inc
mov
out
popf
inc
call
jle
ror
test
lcall
push
aam
enter
mov
nop
js
mul
movsb
rorb
mov
xlat
mov
or
addr16
rcll
push
inc
loopne
xchg
int3
fstl
mov
or
cmp
dec
adc
sbb
dec
outsl
pop
push
lods
icebp
dec
aas
pop
jae
xchg
rclb
mov
or
or
mov
stos
das
les
cmovnp
push
call
pop
lret
push
xor
fisttpll
sahf
fsubr
or
push
shrl
inc
push
or
cwtl
out
mov
mov
ret
jae
cltd
dec
cwtl
sarl
xorps
push
sub
pop
cld
pop
in
aam
pop
aam
scas
and
stos
mov
dec
mov
iret
inc
jmp
dec
pop
xchg
rorl
nop
sbb
adc
mov
arpl
fwait
fwait
dec
shrl
cmc
dec
xchg
stos
sub
cwtl
dec
dec
mov
pop
push
pop
xorl
inc
jae
push
loope
mov
rcl
mov
jle
cs
jmp
or
dec
xor
adc
adc
addl
adc
pop
sub
or
jle
pop
or
cwtl
jle
pop
orl
jle
out
cmpl
xchg
push
fiaddl
or
sarl
cmp
dec
or
rcll
movl
imul
mov
sub
xchg
dec
jmp
aas
dec
pop
int3
adc
sahf
into
outsb
pop
mov
add
or
mov
nop
mov
xchg
jecxz
adc
mov
add
xchg
xchg
push
cwtl
and
stc
and
jle
stc
lock
xor
push
jle
or
jge
jle
stc
lock
cwtl
mov
fucompp
jl
cwtl
jle
jmp
jle
out
sbbl
test
dec
ja
mov
mov
mov
int3
xchg
rcrl
xchg
mov
rorb
lret
lret
mov
nop
test
inc
inc
testl
xor
sub
movsl
sub
lahf
sub
adc
sub
jecxz
popa
lds
in
dec
push
jbe
int3
enter
push
mov
int
cmpsb
add
xchg
xlat
adc
cmp
mov
rcrl
pop
nop
inc
or
xor
cmp
icebp
mov
movsb
jle
and
xchg
nop
cli
jg
xchg
pop
int3
cwtl
lds
cmp
movsl
mov
push
lock
pop
xchg
mov
iret
mov
adc
or
adc
iret
inc
fcoms
push
inc
imul
leave
or
dec
imul
or
iret
lret
jb
mov
push
pushf
inc
dec
jnp
loop
pop
dec
or
mov
adc
dec
int3
pop
cld
xchg
inc
das
rcr
mov
ror
outsl
cltd
lret
sbb
xchg
or
mov
pop
fcmovbe
shll
std
mov
ret
aas
std
adc
or
inc
jge
xchg
push
fmuls
inc
nop
adc
ret
nop
fcom
pop
xchg
test
popl
cltd
push
sbb
movsb
dec
sbb
sub
pop
inc
or
cld
fwait
xchg
adc
adc
cmc
xchg
sar
push
cmp
inc
shlb
mov
jle
push
fmuls
arpl
adc
dec
pop
pop
cltd
adc
xchg
jle
fmul
movsb
nop
cwtl
int3
dec
sbb
mov
orl
xchg
mov
jp
xchg
nop
xchg
push
mov
sahf
xchg
dec
mov
dec
fwait
inc
push
ror
mov
jno
xchg
adc
pushf
cmp
orb
dec
xchg
or
mov
mov
jmp
sarl
cwtl
rorb
mov
push
stc
mov
cltd
dec
xlat
mov
insl
imul
xchg
mov
mov
and
dec
dec
or
enter
ret
mov
fsts
out
push
xchg
mov
inc
inc
and
enter
ret
jmp
xchg
int3
or
addl
es
stos
movsb
dec
mov
pop
sbb
xor
mov
pop
dec
or
dec
push
jne
mov
push
xchg
push
push
ja
adc
stos
jne
dec
mov
pop
mov
sti
ss
movsb
out
mov
adc
rcpps
xchg
aam
push
lock
xchg
mov
push
jns
mov
mov
dec
sarb
out
or
iret
xchg
pop
stos
rcl
dec
xchg
jae
into
insl
cmp
aad
or
add
adc
dec
dec
lret
pop
jo
in
sub
lds
push
mov
xlat
test
dec
lret
sub
mov
or
jae
jecxz
pop
dec
xor
inc
loope
xor
adc
pop
sub
test
jmp
or
xchg
jb
pop
out
movsb
push
inc
dec
push
jbe
pop
adc
rorl
dec
adc
or
dec
add
xchg
int3
pop
dec
fcmovu
push
and
dec
xchg
mov
lea
pop
in
mov
or
dec
sub
les
xchg
jns
test
xlat
adc
inc
sub
fadd
mov
and
nop
push
xchg
lock
push
xchg
rol
popl
movsb
dec
xlat
push
adc
push
xchg
pop
loop
stos
rorl
push
outsb
sub
sysret
xlat
xchg
dec
xchg
sub
cmpsb
dec
xchg
das
shrb
daa
lods
daa
mov
fldenv
dec
dec
in
shlb
xlat
dec
xchg
xchg
int3
cmp
outsb
xchg
ficoml
push
inc
and
xchg
sbb
dec
int3
imul
jns
adc
push
xchg
out
rorb
push
or
cltd
lods
pop
xchg
push
ss
or
std
fwait
add
pop
jbe
fcmovnu
jno
jns
xchg
mov
xchg
push
cwtl
pop
test
fisttpl
xchg
shlb
push
arpl
and
shll
dec
nop
leave
adc
inc
mov
cwtl
repnz
dec
addb
dec
leave
lret
pop
xchg
rorl
push
xlat
xchg
out
push
cmp
xchg
shlb
iret
mov
dec
dec
dec
jg
test
cwtl
lret
xchg
aam
jmp
dec
add
adc
dec
or
enter
jg
jns
pop
adc
inc
fwait
lret
les
sub
push
fimull
jle
xchg
not
adc
inc
arpl
dec
xor
iret
repnz
inc
pop
enter
pop
rcll
sbbb
mov
arpl
fimull
aaa
xchg
adc
or
sarl
cwtl
hlt
push
jns
sbb
xchg
xor
mov
rcr
imul
mov
adc
loopne
cli
jo
inc
je
dec
cld
data16
loope
rcr
ror
push
iret
stos
test
int3
or
pop
sbb
inc
ljmp
xchg
arpl
cmp
data16
sahf
xchg
in
rcll
negl
xchg
lret
shrl
mov
or
out
sbb
sub
je
ret
sub
adc
adc
shll
outsb
cld
dec
xchg
ja
push
mov
adcb
adc
or
shlb
cwtl
in
dec
scas
dec
adc
lret
outsb
xchg
jp
dec
test
iret
xchg
pop
and
cltd
imul
mov
mov
outsb
fs
xchg
sysexit
jb
adc
shlb
sbb
test
pop
in
lret
loop
and
fcmovb
rclb
xchg
movups
rorl
loop
or
stos
inc
adc
push
insl
mov
ss
fwait
sub
pop
xchg
pop
ror
xchg
pop
lret
arpl
aas
iret
in
lcall
adc
shll
sub
xor
rcrb
xor
in
dec
loope
movsb
mov
jmp
mov
or
jecxz
cwtl
je
test
push
ret
mov
pop
xor
cwtl
adc
xchg
cmc
add
dec
pop
push
and
adc
adc
add
or
xor
dec
sub
loopne
sahf
inc
mov
jg
jmp
mov
rcl
fcmovu
xor
xchg
cs
rclb
pop
push
ljmp
xchg
sub
dec
popf
mov
or
push
pop
mov
inc
xchg
aam
add
shlb
sub
lret
movsb
pushf
adc
cmp
fsts
sbb
xchg
and
push
mov
xchg
and
loop
mov
mov
or
cmp
cwtl
push
xchg
xchg
pop
dec
sbb
lret
ret
inc
enter
montmul
cmpsb
andl
rorb
mov
dec
mov
decl
shl
imul
push
mov
negb
add
movsb
and
mov
int3
sbb
rolb
ja
jmp
loope
dec
dec
pop
pop
movsb
xlat
in
jne
xchg
fldenv
pop
popl
pop
inc
sbb
dec
sbb
fldl
inc
pop
mov
add
sbb
fnstcw
mov
cli
lock
or
andl
pop
jle
or
cwtl
sub
pop
mov
out
daa
loope
js
dec
jg
repnz
int3
ss
sarl
push
lock
pop
lret
add
in
flds
sbb
fdivr
dec
or
xchg
sub
jg
pop
or
in
mov
or
mov
xlat
adc
push
xchg
pop
mov
jo
in
push
lods
mov
mov
rcll
dec
femms
stc
mov
popl
or
insl
jne
or
cltd
push
in
xchg
icebp
test
je
or
add
push
ror
loop
fadds
arpl
arpl
sub
dec
insb
xchg
pop
xchg
shl
rcrb
lret
adc
or
xor
lret
sbb
outsl
pop
pop
sbb
push
cltd
loop,pn
xchg
inc
adc
push
dec
push
dec
jmp
xchg
or
jle
xchg
movl
cmpsl
inc
and
cld
cli
rcr
fs
dec
add
mov
inc
fwait
inc
xchg
xchg
sbb
cltd
jb
adc
rorb
pop
jne
rcll
mov
push
lret
jbe
pop
push
adc
mov
leave
cmp
or
dec
mov
out
fstl
xchg
mov
imul
mov
xchg
or
and
arpl
mov
lret
push
push
push
pop
xchg
enter
movsl
loopne
jp
jle
adc
or
mov
mov
sub
or
inc
xchg
pop
mov
add
mov
fists
insb
mov
dec
or
inc
lret
sbb
out
in
add
out
fcoml
paddq
xor
dec
scas
jne
inc
xchg
ja
mov
pop
sahf
mov
or
and
push
insl
xchg
xchg
cmp
cs
shll
test
add
adc
out
out
loopne
pop
and
inc
dec
cmp
popf
sbb
xchg
and
rorb
and
and
lods
pop
pop
test
leavew
js
lcall
xchg
pop
sbb
dec
shrb
loope
lret
cmp
xor
iret
dec
jg
jmp
xlat
insb
or
add
pop
jo
adc
push
add
pop
test
push
add
mov
or
lock
adc
dec
enter
into
bound
sub
dec
rcrl
stc
loop
pop
rclb
xlat
pop
cltd
pop
jp
fs
mov
rorb
ljmp
push
shl
call
mov
jns
ljmp
fsts
jbe
mov
stc
add
dec
xlat
inc
nop
rcl
inc
xchg
jmp
scas
push
lret
dec
adc
add
add
push
cmp
and
xchg
dec
xlat
sub
out
and
fidivrl
sub
scas
addb
push
dec
mov
iret
mov
daa
data16
pop
mov
mov
jnp
std
sbb
xor
adc
sub
fimull
xor
negb
and
jns
or
push
add
nop
jne
aam
dec
push
adc
cltd
dec
xor
dec
xchg
stc
inc
ret
ficoml
push
mov
push
mov
pop
jb
shrl
outsl
sub
dec
iret
jns
gs
mov
mov
dec
mov
jge
mov
xchg
xchg
pushf
movsl
ret
lcall
dec
cmpsl
les
aam
jns
mov
test
adc
push
push
ja
jg
insb
inc
cmpb
insl
or
dec
ds
xchg
cmp
adc
adc
outsb
mov
add
push
fmuls
pop
rcll
pop
clc
enter
pop
fcmovbe
adc
roll
add
in
inc
int3
adc
sbb
rdpmc
push
mov
test
adc
sbb
jecxz
or
fisubl
ret
ret
dec
fistps
fs
roll
orl
mov
leave
adc
add
addl
testb
pop
test
pop
cmp
add
and
jo
or
mov
dec
fcoml
aam
mov
mov
dec
xchg
jns
sahf
leave
nop
rdmsr
push
mov
dec
adc
pop
aaa
rclb
aam
push
adc
movsl
push
sbb
xchg
sbb
adc
pushf
cli
nop
mov
xchg
jbe
sbbl
jae
xchg
cmp
fldenv
dec
and
xlat
iret
sub
cltd
fs
jg
dec
mov
adc
fs
loopne
sahf
cmp
pop
enter
or
mov
arpl
push
mov
pushf
fnstenv
loopne
xor
push
jmp
out
stc
and
xchg
inc
or
xchg
imul
cmpsb
mov
push
rcrb
aam
or
mov
mov
cld
cwtl
nop
insb
jge
push
dec
mov
adc
inc
sub
xchg
lcall
xchg
outsl
xor
pop
movsl
pop
dec
adc
pop
mov
shll
sbbb
dec
fisttps
pop
int3
xchg
sarb
std
push
fimuls
inc
orl
daa
aam
mov
rcll
decb
dec
push
fistps
and
or
btr
cwtl
dec
add
sub
dec
ljmp
and
add
or
cmp
push
xchg
or
xchg
sbb
mov
mov
popf
mov
or
push
and
or
xchg
xlat
mov
dec
loope
loop
pop
mov
aaa
pop
sarb
jp
inc
pop
pop
pop
dec
dec
push
fmull
jbe
xchg
int3
lcall
fcmovbe
hlt
xor
add
dec
xchg
xchg
jmp
add
sbb
pop
xchg
lea
or
lcall
shr
pushf
xchg
mov
inc
mov
or
and
outsb
sahf
push
into
jb
sub
in
cmp
lcall
mov
adcl
pop
pop
cwtl
orl
mov
dec
aam
insl
cmpsl
or
fcoms
fs
push
test
mov
ljmp
dec
inc
out
push
popf
jns
and
xchg
push
shll
int
xchg
jne
or
pop
pushf
adc
pop
xor
arpl
and
pop
mov
or
pop
push
xchg
pop
mov
mov
cwtl
push
inc
loopne
in
test
movsl
ficompl
push
mov
or
lds
sbb
rcll
push
adc
loopne
sbb
inc
mov
int
jnp
filds
cwtl
lret
inc
jecxz
or
and
push
cmc
inc
ja
fldl
adc
adc
lds
push
jb
dec
sbb
xor
xchg
dec
add
inc
sbb
fisttpll
jle
and
mov
xchg
rorb
xchg
dec
ficoml
jbe
lret
lods
sbb
push
ja
jb
pushf
xchg
pop
mov
loop
inc
dec
and
pop
scas
in
repnz
push
inc
dec
in
inc
xlat
jp
xchg
mov
je
mov
sub
call
push
push
sbb
xorl
outsb
mov
dec
scas
jne
pop
nop/reserved
sub
sub
jmp
or
xor
mov
aad
mov
adc
gs
repz
dec
push
dec
dec
lret
dec
iret
jnp
push
mov
or
nop
popa
pop
iret
sub
push
xchg
jne
pop
xchg
pop
pop
xchg
adc
movsb
cmp
push
les
or
adc
cwtl
shr
shrb
repnz
jmp
inc
lock
dec
repnz
addr16
arpl
enter
mov
shrb
dec
call
pop
in
iret
dec
inc
push
add
mov
sahf
fadds
mov
jl
xchg
icebp
adc
mov
and
mov
push
out
jp
dec
dec
jg
loop
cwtl
push
sbb
xchg
mov
lea
adc
aam
dec
ja
loope
push
cltd
pop
mov
test
adc
loopne
pop
mov
xchg
mov
inc
insb
push
cmp
icebp
lods
std
jae
ror
cmp
or
xchg
movsb
cltd
enter
xor
xchg
jb
adc
mov
lcall
pop
cmpsl
test
aam
add
outsb
add
dec
push
xchg
lret
mov
cmp
sub
dec
mov
cltd
pop
lret
imul
hlt
xchg
xchg
cmp
hlt
dec
daa
mov
sbb
dec
pop
rorl
push
addl
xchg
lret
out
imul
mov
fadds
and
dec
inc
push
sbb
mov
and
stos
mov
add
mov
jle
jnp
jg
mov
mov
jns
pop
leave
push
icebp
and
dec
push
push
or
outsl
sbb
dec
loopne
dec
or
dec
setae
movsb
iret
mov
ror
push
lret
lea
seto
xor
adc
or
push
cwtl
adc
ret
mov
cmpsb
loope
xchg
jmp
jg
mov
cmp
xchg
cwtl
dec
testb
mov
sub
sbb
jl
test
mov
lret
xchg
cwtl
pop
nop
push
iret
lcall
cli
add
rclb
xlat
or
lds
call
dec
or
dec
or
xchg
dec
dec
push
adc
or
xchg
or
push
int3
xor
dec
les
enter
jns
inc
pop
pop
push
xchg
adc
loopne
loopne
sub
cmpsb
dec
aam
int3
lret
push
rorl
add
sub
mov
inc
or
pop
adc
mov
adc
push
out
xchg
bound
dec
rcrb
jge
or
adc
push
gs
push
roll
int3
or
fwait
dec
dec
hlt
sub
inc
lea
into
or
fidivrs
push
iret
dec
pop
lods
mov
lret
enter
xchg
xchg
xchg
jg
jno
pcmpgtd
cmp
enter
fucomp
pop
in
xchg
int3
adc
dec
cmpsl
dec
or
dec
sbb
xlat
xchg
jle
and
enter
add
mov
or
adc
xor
test
dec
dec
push
orl
leave
enter
jno
fisubrl
in
xchg
push
aad
adc
pushf
rcl
ret
in
or
xchg
cld
dec
push
out
cli
mov
je
inc
sbb
mov
mov
loop
xlat
pop
adcb
mov
jns
pushf
mov
mov
iret
mov
jl
test
mov
inc
lea
dec
dec
cmpl
ret
popf
xchg
adc
pop
inc
adc
filds
mov
or
lcall
bound
jo
int
ret
push
push
pop
mov
sbb
xlat
cld
lods
es
stc
or
pop
fstl
pop
shll
leave
stos
add
add
dec
imul
or
add
xchg
jle
xchg
out
and
and
mov
mov
dec
xchg
push
xchg
xchg
or
fs
mov
adcl
push
hlt
jns
roll
mov
fcoms
adc
pop
gs
dec
pop
or
iret
test
inc
add
and
xchg
cmpsl
adc
dec
adc
xor
xor
inc
inc
ret
lea
dec
rcrl
mov
xchg
lret
nop
lcall
sub
testb
sub
dec
lods
insl
xor
mov
pop
lret
sbb
jle
and
xchg
hlt
in
sbb
mov
out
ja
ja
subl
or
xor
pop
shlb
in
ja
lock
dec
icebp
fstps
imul
lds
push
pop
sbb
test
rclb
mov
out
push
push
enter
shld
rorl
push
jns
and
nop
ficompl
xchg
dec
int3
xchg
addr16
fadd
iretw
push
push
xchg
mov
cmpsb
inc
hlt
push
push
pop
or
dec
push
arpl
outsl
add
lods
js
push
dec
ljmp
or
ljmp
lods
stos
cld
push
cltd
dec
in
pop
testl
lcall
mov
jne
dec
cltd
mov
int3
pop
or
jle
xor
outsb
dec
lds
cwtl
insl
sbb
xchg
adc
mov
dec
repnz
push
cltd
dec
cmp
call
test
xchg
dec
mov
or
xchg
and
cltd
mov
in
pop
pop
cmp
push
dec
loope
enter
mov
int
enter
inc
or
mov
out
enter
shl
test
int3
xchg
ss
es
jae
pop
aad
pop
adc
dec
push
mov
test
rcl
jb
mov
xchg
dec
dec
iret
xchg
aas
les
xchg
je
in
xchg
push
xchg
xchg
jae
adc
mov
or
cwtl
and
jge
or
mov
xor
push
xchg
xchg
adc
add
arpl
or
or
vphaddbq
out
sbbl
jno
fmuls
loop
fcmovu
enter
dec
adc
test
iret
sete
pop
pop
mov
lods
add
push
adc
repnz
xchg
lret
mov
xchg
cmp
xchg
xchg
cmc
rcrb
sbb
cwtl
xor
inc
pop
sbb
and
in
add
or
sub
dec
test
leave
adc
fmuls
pop
cltd
ficoml
test
xchg
mov
or
push
xchg
aam
or
dec
ja
and
test
insl
in
rcll
sbb
dec
xchg
push
mov
rorb
loope
inc
cmp
dec
lods
push
cs
pop
or
push
and
out
xchg
orb
sub
aad
push
xchg
lret
pop
insb
adc
cmc
xchg
pop
and
pop
mov
push
mov
and
cmp
rcl
sbb
push
xor
test
push
jbe
mov
sub
dec
add
test
rcr
or
dec
pop
dec
or
insl
and
jle
mov
dec
pop
into
mov
aaa
jge
xlat
mov
scas
xchg
cli
xchg
jg
add
outsb
fs
fmuls
push
push
dec
and
pop
or
cmc
jbe
and
push
ficoml
movl
push
xor
add
call
push
sub
shr
hlt
jb
mov
daa
inc
or
push
sub
ss
push
mov
lds
adc
ja
pushf
or
adc
and
lahf
mov
dec
xchg
add
jg
ds
push
dec
dec
inc
xlat
jmp
cs
and
fsubr
xchg
xchg
mov
repnz
dec
pop
sbb
pop
fisttps
rorb
mov
push
movsb
test
cs
lret
dec
push
pop
std
and
rorb
pop
cwtl
sarl
rcl
rcrb
mov
xchg
testb
sbb
dec
popf
out
xchg
lret
mov
and
jecxz
push
dec
mov
jmp
addr16
or
xchg
xor
lods
les
ja
jl
jnp
pop
pop
pushf
dec
dec
sub
cmp
adc
or
mov
mov
pop
push
iret
push
out
and
dec
dec
push
leave
or
data16
xchg
repnz
fcoms
pop
add
cmp
add
imul
adc
xor
add
push
test
dec
jmp
mov
mov
or
dec
vpcomuq
xchg
push
movnti
adc
lret
mov
xchg
scas
int3
adc
push
dec
push
adc
fldenv
add
xchg
dec
or
movsb
mov
pop
cmp
std
pop
pop
lock
ss
or
xchg
lahf
add
xchg
dec
mov
lret
popf
inc
pop
imul
jge
xlat
or
int3
out
aad
push
jae
pop
xchg
lret
jmp
hlt
push
gs
fadds
dec
or
lods
pop
nop
push
xor
mov
test
lea
out
je
or
push
push
cmp
in
into
xchg
fs
mov
enter
adc
gs
mov
xchg
mov
pop
sbb
fadds
rcll
adc
mov
or
push
rorb
dec
jns
daa
mov
roll
sbb
test
les
push
xor
lahf
cmp
popf
outsb
lock
jae
icebp
mov
stc
adc
or
fisttps
adc
aaa
and
mov
xchg
and
push
lods
xchg
dec
loope
rcl
arpl
fdivrs
pop
mov
push
xchg
inc
ficompl
mov
cmp
pushf
add
bound
mov
mov
dec
fs
int3
pop
sub
jle
cltd
push
or
sbb
push
rclb
inc
xlat
xchg
or
sbb
or
enter
lret
ficoml
into
pop
addr16
dec
hlt
decb
add
mov
iret
jg
stos
jmp
xchg
call
imul
push
seto
ljmp
popa
or
mov
push
ret
mov
rcll
and
rolb
sbb
lcall
lret
jmp
sti
mov
popl
mov
sahf
jns
xchg
movsb
data16
cmc
inc
push
push
enter
mov
xor
ljmp
rcll
fcmovu
cltd
ret
lods
xchg
mov
rorb
leave
jo
sbb
in
cmp
xchg
inc
dec
adc
xor
add
cmp
cmpsl
xor
adc
push
arpl
mov
mov
jle
nop
sbb
clc
mov
dec
sqrtps
jecxz
pop
inc
mov
aam
nop
inc
xchg
arpl
jg
lret
roll
fidivrl
dec
push
cltd
rorl
lea
xchg
jns
push
push
mov
xchg
adc
test
adc
adc
dec
shrb
sbb
cmp
xchg
inc
pop
enter
sbb
or
add
pushf
xlat
addr16
jns
mov
push
sub
fisubl
add
xorl
or
in
push
dec
test
out
jle
nop
cwtl
mov
xchg
orb
or
push
xchg
dec
fndisi(8087
lret
enter
cmp
inc
push
pop
nop
dec
xor
loop
or
mov
xchg
imulb
lcall
and
and
loop
enter
ja
xchg
flds
pop
xchg
orb
jecxz
or
xchg
adc
push
lea
pop
dec
and
mov
rclb
xlat
fwait
sbb
xchg
mov
jl
push
std
xchg
adc
iret
lods
cmp
rolb
xchg
push
dec
nop
xchg
sub
adc
push
repnz
ret
pop
or
cmc
xlat
ficoml
cwtl
mov
out
sbb
jg
in
lods
or
adc
push
push
xchg
rorl
pop
mov
and
lea
outsl
pop
mov
pop
and
dec
stos
test
add
lret
dec
mov
jecxz
adc
push
adc
outsl
dec
xchg
iret
xchg
lcall
xchg
cltd
std
mov
push
xchg
rcll
lock
xlat
jo
loop
pop
in
mov
xchg
pop
pop
push
or
push
lret
leave
sahf
push
pop
dec
mov
mov
stc
pushf
xchg
push
stc
fldt
push
loopew
dec
pop
leave
popf
iret
mov
xchg
mov
out
jns
adc
jne
inc
lret
or
rcll
pop
cwtl
arpl
or
gs
fcmovbe
push
fmul
pop
movl
xchg
in
or
push
xchg
fwait
pop
test
dec
push
mov
fstps
mov
enter
lret
sbb
or
cs
xchg
mov
fcom
sahf
push
pop
push
outsb
push
rolb
dec
fisttpl
push
xor
sbb
loopne
stc
and
dec
mov
rcrl
sbb
push
xlat
jl
ret
pop
xchg
push
adc
mov
ficomps
pop
and
xchg
jmp
xor
popf
ret
add
adc
aam
mov
or
mov
jge
dec
adcl
jo
sbb
fisttps
mov
adcl
loopne
fwait
rclb
out
cmpsb
lcall
roll
and
out
inc
xchg
out
test
sub
cmc
jle
xchg
dec
jno
rclb
dec
pop
push
jge
ror
aas
xchg
jne
setno
lcall
aaa
jg
sub
sub
or
xlat
imul
loop
rorl
push
outsl
xor
ja
cmp
popf
push
xchg
leave
leave
add
adc
nop
pop
hlt
stos
hlt
lock
sbb
push
leave
std
jle
incl
cmpb
pop
pushf
sbb
loop
adc
pop
fs
mov
ret
shrl
in
es
pop
gs
enter
sbb
pop
jecxz
dec
mov
rorl
dec
push
shlb
xlat
mov
movsl
loope,pt
fdiv
push
add
xchg
leave
dec
vmptrld
push
adc
lret
xchg
nop
jg
ja
movsl
mov
fildll
lahf
adc
pop
cli
adc
sbb
cwtl
movsb
nop
aam
lret
cltd
sbb
mov
jmp
cmc
push
inc
jecxz
inc
push
inc
mov
xchg
dec
inc
add
and
push
mov
push
pop
aam
flds
ds
adc
sub
add
dec
dec
leave
or
adc
repz
or
fcoml
mov
iret
dec
movsb
cwtl
push
addps
adc
mov
loopne
pop
mov
lahf
rorb
and
xchg
push
pop
jl
loop
jno
ss
cltd
jns
cmp
fldcw
int3
ja
dec
dec
addr16
xchg
pushf
dec
shll
fwait
jo
adc
loope
cwtl
push
out
addr16
sbb
shlb
push
test
xchg
mov
xchg
or
rcrb
arpl
or
pushf
xchg
mov
adc
mov
rclb
mov
pop
or
stos
sarl
dec
faddl
dec
add
mov
add
pop
cmp
mull
adc
or
mov
mov
dec
hlt
sub
lock
test
xchg
and
dec
mov
lret
xlat
xchg
pop
add
push
sbb
push
mov
push
rcll
pop
neg
add
loope
fstps
mov
xchg
fistps
popa
sbb
rcl
jo
je
in
fsts
shlb
or
es
in
es
lds
bound
or
lret
mov
xchg
mov
daa
or
rcll
push
test
push
ja
cmp
in
movsl
clc
mov
and
jl
aaa
pop
dec
data16
aam
dec
xchg
xchg
vprotb
pop
pop
psubusb
mov
xor
mov
mov
dec
push
cltd
mov
adc
inc
movl
jg
mov
sub
push
enter
outsb
pop
iret
xchg
cmp
push
je
mov
jns
nop
or
adc
push
xchg
dec
adc
xchg
and
xchg
push
adc
or
or
sub
lods
lods
sub
mov
inc
ret
ret
mov
dec
mov
push
fnstcw
adc
or
jbe
outsl
addr16
or
mov
pushf
dec
xor
adc
cltd
cmp
jge
lock
cltd
fwait
lock
insb
cwtl
xchg
dec
inc
push
loope
ror
xlat
shl
icebp
dec
outsl
adc
or
dec
sub
leave
lret
xor
pop
fadds
xchg
or
arpl
or
flds
add
push
or
push
popf
jno
mov
xchg
inc
arpl
pop
mov
sti
push
cmc
mov
fsts
xchg
or
lret
loop
mov
loope
sbb
xchg
or
fists
adc
xor
sub
pop
popa
les
jo
push
jns
jmp
pop
fsts
aaa
test
sub
pop
xlat
jns
sub
cwtl
or
shrl
cmp
rcl
cmc
mov
pop
xchg
xchg
or
jle
fisubl
cwtl
sub
dec
and
rorb
push
xchg
ror
lods
mov
or
loopne
jecxz
adc
dec
cmpsl
loop
loop
and
insl
adc
push
je
add
push
test
js
jle
mov
sbb
out
mov
mov
push
add
aam
aaa
rclb
call
xchg
sarb
cmp
sahf
pusha
fcmovu
mov
fisttpl
xlat
jle
xchg
es
xchg
cmp
lock
pop
sbb
xchg
insl
xor
pop
orl
imul
push
dec
adc
rol
cs
adc
push
xchg
push
shlb
int3
or
jne
enter
fcomps
xchg
push
jle
add
dec
lahf
fst
mov
jl
fwait
push
cltd
sbbl
notb
rclb
and
fs
dec
and
xchg
hlt
xlat
xchg
adc
add
int3
push
xor
les
setae
jno
xchg
mov
and
push
or
fistpl
pop
xchg
jno
mov
or
dec
inc
pop
aas
loop
xchg
cmp
push
dec
pop
mov
xchg
push
or
fisttps
xchg
and
or
pushf
jg
fadds
jle
nop
xchg
shlb
andps
lret
adc
xlat
mov
and
fsubl
cwtl
add
aam
pop
add
ficoml
push
cmpsb
lods
dec
int
jge
int3
andl
rorl
sbb
mov
dec
pushf
dec
fdivs
push
mov
push
jle
xchg
xchg
xchg
gs
xchg
sarl
mov
sub
dec
sub
xchg
mov
gs
sbb
and
or
push
nop
arpl
dec
sbb
pop
or
add
iret
xchg
push
xchg
lret
sub
cmovl
xchg
sbbb
and
out
iret
fcomps
mov
mov
fimull
push
decb
ror
popf
fistl
or
sub
xchg
loope
adc
xchg
out
add
xchg
enter
shll
jle
test
push
dec
cltd
aam
popf
sbb
push
jmp
jns
push
out
push
dec
scas
addr16
sub
adc
ja
repz
or
dec
adc
sub
fnstcw
nop
ljmp
movsl
jmp
jge
addl
lahf
cmp
dec
stos
cmp
movsb
aad
fnstenv
or
and
pop
xchg
popf
daa
or
push
or
xlat
dec
xor
push
pop
adc
inc
xor
js
pop
rcl
push
xchg
or
enter
cmp
or
in
fwait
mov
sbb
fldenv
fs
mov
xchg
xchg
or
call
arpl
or
pop
inc
xor
adc
adc
sbb
fnstenv
leave
or
sbb
rorb
adcl
mov
les
xchg
add
es
adc
inc
mov
or
std
arpl
push
inc
popf
arpl
and
jno
xchg
rcll
sub
insl
xor
aam
in
jg
inc
lock
enter
lret
or
ret
fcmovnbe
push
leave
ficoml
nop
and
cmc
pop
pop
and
jns
iret
dec
sbb
pop
lea
xchg
push
inc
int
rolb
stos
mov
in
push
adc
ficoml
lret
or
add
fdivs
cmp
rorb
and
xchg
adc
and
pop
cwtl
cltd
rclb
or
xor
sbb
loopne
xchg
jge
push
xchg
xlat
jp
aam
xchg
dec
andl
pop
test
out
sbb
push
rorb
test
or
loopw
enter
movsb
lret
pop
shl
je
ret
push
sbb
and
cmpsb
clc
push
mov
mov
pop
dec
repnz
aad
cmp
shlb
data16
push
adc
xchg
mov
sbb
jecxz
push
push
xchg
dec
cli
jle
outsl
xchg
loop
xchg
and
jge
pop
lods
mov
xchg
push
push
int3
leave
adc
repz
je
fwait
pop
cmp
sbb
cmpl
dec
xchg
adc
loopne
pusha
ret
jo
adcl
xchg
int3
dec
pop
push
idivl
push
pop
sbb
push
push
push
and
or
fisttps
imul
mov
or
xchg
lret
add
lret
lods
cmp
sbb
fs
dec
push
in
inc
jge
movb
adc
aam
lock
movsb
mov
dec
ret
pop
dec
add
enter
adc
jne
fsts
dec
pop
addr16
push
dec
inc
cs
sbb
pop
shll
adcl
dec
sub
jo
xchg
add
xchg
add
xrelease
cltd
lock
push
mov
adc
mov
aad
push
and
adc
loope
adc
sbb
jecxz
fmul
mov
and
pop
adc
out
xchg
cmp
and
out
xchg
rclb
dec
pop
fildll
loopne
int3
jmp
mov
inc
imul
or
push
sbb
int3
xchg
sbb
pop
rolb
dec
mov
and
rorl
in
rcr
or
rorb
dec
xchg
jno
outsl
sti
jle
fldcw
adc
push
and
adc
fistl
ret
sub
imul
ja
sbb
out
mov
int
out
push
inc
pop
test
mov
xchg
push
or
lret
out
mov
adc
inc
int3
movsb
mov
xchg
leave
adc
xchg
mov
push
test
and
mov
or
jmp
mov
fisttpl
scas
arpl
mov
xchg
rorl
jb
mov
dec
or
push
iret
pop
pop
int3
jp
ljmp
movsl
popf
mov
inc
in
and
and
pop
push
cltd
push
push
pop
push
fmul
fucom
stos
inc
mov
xchg
out
inc
lods
adc
hlt
xor
or
cltd
or
loop
dec
dec
dec
fs
pop
sub
out
push
int
xor
push
fwait
xchg
or
sub
add
mov
lret
xchg
movl
orl
lds
aam
les
fidivrl
pop
sbb
stos
push
arpl
push
nop
ret
jp
push
xchg
jns
fs
icebp
lret
int3
dec
xchg
pop
loopne
xchg
or
shlb
ret
das
outsb
adc
bswap
xor
dec
cwtl
cltd
loop
lods
or
xchg
dec
push
add
in
pop
ror
insl
push
or
inc
or
xchg
push
pop
ja
fisttps
shl
loop
enter
jge
dec
dec
inc
aas
lods
push
imul
movsb
cwtl
sqrtps
popf
dec
sti
call
sub
stos
sbb
dec
out
and
leave
dec
xchg
pushf
push
fwait
adc
or
cmp
mov
aam
sbb
xor
pop
fwait
test
cltd
and
fcmovbe
or
push
or
testl
inc
leave
hlt
pop
shl
dec
lcall
insl
mov
lea
roll
xor
mov
aad
std
notb
ja
pop
rorl
lret
dec
inc
xor
in
nop
lret
call
push
pop
dec
rcrl
rcr
mov
sbb
ds
rcrl
mov
popl
or
mov
dec
mov
push
nop
jae
xchg
rorb
add
dec
sub
and
dec
inc
clc
dec
pop
mov
pushf
and
mov
push
jl
sbb
cmp
xchg
in
insl
insl
adc
fcoms
pushf
sbbb
or
xchg
cmp
push
jecxz
push
push
dec
or
loope
mov
fisttpl
out
xchg
or
nop
xlat
jmp
jg
xchg
push
xor
mov
repz
hlt
std
push
push
mov
rolb
jbe
cmp
pop
stos
repnz
icebp
push
sbb
mov
xchg
mov
rorl
gs
push
leave
cwtl
mov
dec
and
xchg
pop
adc
push
jae
adc
cmpsb
enter
out
xchg
cvtpi2ps
push
lcall
or
cwtl
pop
bound
cmp
adc
ficomps
dec
movsb
push
sub
pop
pop
mov
enter
mov
fs
adc
xchg
shl
cmp
jno
xchg
mov
fstps
jecxz
adc
adc
fwait
dec
enter
push
push
dec
mov
mov
pop
lret
dec
mov
and
xchg
push
xchg
iret
mov
push
aam
xlat
push
push
lret
fwait
push
dec
std
jmp
fisubl
dec
and
pop
lods
popf
push
jge
adc
cltd
jnp
ja
out
jns
arpl
or
xchg
mov
cwtl
dec
dec
popl
dec
int3
sbb
lcall
sbb
movsb
pop
inc
dec
xor
loope
push
adc
repz
repz
adc
and
daa
add
pop
dec
jmp
mov
dec
nop
cmc
cltd
rclb
leave
mov
lret
fistpl
adc
aam
pop
push
call
xlat
mov
lret
adc
outsl
rcll
fisttps
in
add
or
xchg
movsl
inc
push
xchg
ficompl
scas
imul
in
adc
mov
jle
test
cld
repnz
int
test
dec
enter
dec
pop
adc
das
aam
dec
pop
nop
mov
pop
xchg
push
mov
push
pcmpeqd
mov
adc
sar
gs
cld
leave
pop
or
and
adc
in
mov
insl
out
push
xchg
dec
mov
imul
inc
out
pop
insl
mov
mov
movsb
cltd
dec
shll
jo
imull
or
jl
movsb
inc
adc
or
cli
sbb
rorl
push
test
and
sub
and
incl
xchg
push
xchg
adcb
pushf
shl
aad
adc
inc
pop
dec
nop
enter
out
in
or
xchg
std
mov
adc
adc
xor
or
rorb
imul
xchg
inc
xchg
push
xchg
cwtl
xchg
out
inc
add
rorl
dec
xchg
shrb
mov
mov
jge
enter
dec
dec
aam
xchg
dec
int
mov
aad
mov
mov
or
movl
and
fistl
pop
sub
push
sbb
xchg
and
dec
xchg
jecxz
push
enter
test
adc
push
pop
arpl
repnz
fldt
pushf
or
fwait
mov
pop
lea
jno
or
addr16
lcall
call
pop
cwtl
adc
push
andb
adc
fwait
xchg
mov
rcrl
setb
fwait
xchg
xchg
enter
cmp
push
adc
xchg
dec
mov
push
jg
movsb
push
pop
push
adc
push
lea
dec
or
dec
push
or
fisttpll
loop
fldenv
sbb
dec
xchg
in
sahf
cli
or
jno
xor
roll
push
pop
xlat
adc
loop
pop
test
xchg
push
and
mov
dec
mov
push
cmpsl
push
nop
inc
pop
das
nop
rcrb
lcall
mov
xorl
push
or
pop
mov
aad
outsb
pop
xchg
js
dec
flds
and
pop
int
mov
clc
dec
lret
jno
movsb
sbb
ficoml
test
xchg
adc
xchg
mov
jmp
push
push
lea
push
in
mov
cmp
cmp
outsl
dec
outsb
push
mov
loopne
mov
push
push
aam
inc
adc
jle
add
dec
xchg
nop
lea
xlat
xchg
rolb
aas
ret
aas
mov
arpl
les
adc
xchg
mov
sub
int3
loop
mov
aaa
push
mov
shl
adc
add
enter
dec
xchg
xchg
push
sbb
sti
jle
adc
dec
pop
xchg
xlat
or
cltd
mov
orl
adc
into
inc
rorb
jb
xchg
popa
push
test
xlat
ja
or
shl
or
fcoms
push
adc
and
rcrl
data16
fisttpll
jle
xchg
sbb
and
rorb
push
xlat
and
data16
or
sbb
popf
adc
shlb
mov
lret
adc
dec
ficoml
push
ret
sub
loopne
jns
dec
iret
jle
push
fmuls
popf
rcll
nop
xchg
fwait
rcrb
int3
cmp
or
dec
pop
popf
inc
xchg
cld
cmp
daa
movsl
mov
daa
mov
jecxz
dec
shl
in
push
adc
push
rcrl
cmp
ss
adc
push
in
mov
push
dec
imul
dec
ja
mov
xlat
pop
dec
rorl
mov
lds
or
mov
adc
xchg
andb
iret
and
xchg
aam
xchg
rcrb
arpl
je
cmpsb
hlt
mov
ljmp
addr16
sbb
push
ret
push
out
or
inc
out
loop
shlb
inc
and
mov
jb
or
adc
jno
push
subl
jns
sbb
jo
pop
jg
mov
xchg
cwtl
repnz
sahf
pop
adc
xchg
cltd
lret
xchg
lcall
cltd
mov
or
xchg
movmskps
lret
mov
mov
mov
xchg
xor
hlt
inc
dec
clc
xchg
lock
mov
and
mov
stos
jns
push
mov
das
arpl
xchg
or
rolb
dec
sbb
leave
je
aaa
int
push
adc
and
dec
dec
loope
enter
push
or
mov
fcmove
dec
xchg
fisttps
and
xlat
push
rdpmc
out
clc
jge
mov
dec
movq
dec
les
lret
sbb
inc
js
push
in
xorl
xor
addl
xchg
or
xchg
jns
in
nop
xchg
push
xlat
jno
push
jg
incl
mov
dec
or
dec
dec
rcr
bswap
mov
cld
or
ret
aas
add
pop
aam
or
iret
dec
adc
in
push
mov
jno
jns
sbb
pop
iret
and
pop
push
loope
int3
in
or
push
cmp
pop
loopne
iret
jle
mov
es
mov
scas
xchg
jne
push
or
mov
and
jnp
dec
jle
mov
jnp
fcmovnbe
arpl
xchg
je
pop
arpl
mov
dec
or
dec
nop
dec
movsb
fbstp
loopne
pop
cmp
dec
pop
mov
jg
fwait
cmp
xchg
jle
loopne
mov
push
adc
or
or
or
push
xchg
enter
sub
jne
rclb
push
or
push
rcrl
aam
lods
dec
pop
adc
loopne
or
add
jge
pop
dec
sbbl
fimull
sarl
xchg
inc
adc
iret
cmp
clc
dec
dec
iret
xchg
lods
dec
fidivl
nop
imul
xchg
mov
xchg
sbb
dec
sets
adc
xor
pop
mov
xor
imul
mov
jecxz
adc
adc
mov
nop
cwtd
ja
push
push
iret
cmp
lea
addr16
enter
dec
fwait
cltd
movsb
rorb
js
jge
loope
pop
jecxz
enter
adc
lret
mov
pop
pop
loop
loop
loope
scas
fstl
sbb
movsb
push
xor
inc
sbb
and
or
xor
lea
and
dec
lret
or
jp
mov
pop
rcll
dec
aad
cltd
outsl
push
ret
mov
xchg
push
arpl
push
mov
add
dec
pop
dec
mov
leave
cs
pop
sub
loopne
int3
push
gs
xor
fisttps
inc
dec
call
lret
jg
rorl
and
cwtl
out
mov
daa
shll
dec
mov
inc
add
push
rolb
add
int3
push
xor
adc
sbb
sbb
or
outsl
inc
and
aam
int3
push
or
xchg
repz
cwtl
leave
rolb
adc
cmp
scas
or
je
hlt
repnz
lea
xlat
mov
nop
mov
inc
inc
iret
mov
sbb
lock
enter
or
aam
adcl
lret
xchg
xchg
pop
ja
pop
movsb
imul
loopne
jmp
add
xchg
jg
xchg
dec
sahf
xchg
sbbb
adc
push
pop
sbb
push
sti
cltd
fs
mov
divb
dec
dec
cmp
arpl
leave
pop
add
test
mov
dec
dec
sarl
fistps
ficoml
or
or
sbb
sbb
pop
mov
test
mov
xchg
pushf
pop
fs
push
push
ret
fdivrl
ja
adc
xchg
push
pop
sbb
fstpl
or
push
push
and
sbb
fisttpll
outsb
xchg
push
inc
stc
push
mov
xor
xchg
xchg
push
dec
ficomps
in
dec
xchg
pop
iret
cltd
xchg
fistpl
or
dec
in
push
mov
mov
push
or
movsb
scas
mov
xor
icebp
xchg
pop
xor
inc
inc
xchg
pop
mov
iret
add
or
adcl
xchg
cmp
std
aam
mov
push
test
or
pop
arpl
cmp
sbb
push
push
jno
repz
pop
xor
and
dec
xchg
nop
push
cwtl
jns
adc
mov
adc
jns
cwtl
adc
push
xor
push
sbb
adc
sub
mov
mov
enter
aad
rol
cltd
or
xlat
adc
push
cld
sbb
mov
mov
leave
adc
xchg
adc
lds
xchg
xlat
ret
push
pushf
push
lret
in
adc
push
xchg
xor
ret
inc
push
add
decb
mov
and
pop
xchg
lret
cld
scas
add
mov
and
mov
xor
lock
push
mulb
xchg
sbb
pop
dec
push
jne
jno
fsubrs
sbb
mov
sarl
ljmp
mov
insb
xchg
fidivrl
cltd
push
jne
movsl
ss
loope
dec
dec
lock
pop
outsb
fimull
xchg
int
movsb
add
rol
sbb
mov
push
dec
and
xchg
sub
adc
pop
fwait
ret
sbb
jns
jge
mov
iret
adc
jne
nop
dec
andl
pop
xor
lcall
loopne
leave
aad
dec
add
ficompl
rcl
ss
nop
push
dec
adc
lods
hlt
mov
or
adc
sbb
pop
pop
cli
mov
lcall
int3
enter
push
push
fcomps
pushf
dec
pop
fstl
mov
adc
mov
xchg
xchg
cld
xor
sub
xchg
mov
mov
movsl
push
jns
cltd
adcl
fisttpl
in
ficompl
jp
jg
pop
lret
sti
xchg
popf
repnz
add
stos
in
or
aam
adc
xchg
adc
pop
or
inc
sub
adc
add
adc
xchg
cwtl
sbb
push
mov
xchg
loope
push
or
mov
leave
or
mov
in
adc
pop
jle
push
mov
xor
pop
mov
rorb
addr16
loopne
dec
fstpl
arpl
int3
mov
adc
push
decb
xor
iret
leave
pop
ljmp
xchg
sub
adc
loop
imul
mov
sbb
sbb
adc
inc
or
loop
loopne
mov
repz
push
mov
or
dec
mov
xchg
xlat
inc
dec
outsb
pop
mov
xchg
jno
out
push
fnstcw
pushf
inc
and
adc
dec
hlt
sbb
push
lods
dec
dec
test
pop
mov
movsb
fmul
pop
xorl
lret
xchg
loop
movsb
adc
mov
push
mov
inc
xchg
pop
cmp
repz
lock
adc
or
dec
cltd
dec
pop
mov
dec
push
inc
sub
hlt
hlt
shrb
or
adc
xchg
ja
pop
nop
mov
sahf
or
shlb
adc
dec
jns
xchg
ja
lret
push
jle
int
xchg
mov
lea
dec
rcr
insl
cld
push
daa
mov
add
rorl
cmp
inc
daa
push
in
or
xchg
xchg
push
jge
dec
jge
mov
jbe
add
dec
insb
xchg
daa
mov
add
fcmove
inc
pop
push
mov
into
cmp
sub
lret
test
outsb
mov
pop
xchg
or
std
or
fiadds
xchg
rorb
inc
sub
outsl
fldl
cmp
lods
out
scas
fxch
mov
lret
push
jmp
loop
xchg
push
inc
scas
cltd
add
dec
adc
add
jp
ficompl
adc
aad
adc
push
jbe
pop
adc
jge
adc
cwtl
ja
mov
jns
mov
dec
out
push
add
mov
xchg
sub
lret
mov
imul
clc
int3
and
out
or
xchg
sub
push
inc
lret
xlat
icebp
mov
int
cmp
insb
dec
shrb
out
xchg
pop
jne
or
dec
jle
fldt
jnp
mov
xchg
movsb
sarb
shll
add
jbe
jae
aad
out
mov
push
dec
nop
or
iret
xchg
into
lea
fstps
push
shll
or
sub
mov
jnp
cmp
test
rcl
push
xchg
and
push
cltd
out
and
mov
pop
dec
std
ljmp
push
inc
jns
scas
push
jnp
pop
xlat
xor
enter
jg
xchg
ljmp
mov
sahf
push
movsl
lret
push
push
daa
adc
mov
int
gs
xchg
mov
or
and
push
dec
test
push
xchg
leave
jmp
fstpl
imul
jne
mov
mov
cwtl
pop
enter
mov
fcomp
pop
xchg
gs
sysret
mov
jg
jg
mov
into
sbb
dec
adc
fs
fimull
imul
rolb
rorb
xor
push
push
push
loop
fistl
mov
cwtl
dec
adc
push
pop
dec
adc
sub
xor
inc
scas
push
pop
out
dec
aas
fucomp
jg
fisttpll
adc
pop
sti
jp
ds
adc
leave
loop
or
xor
pop
sub
dec
sbb
sbb
push
std
adc
push
or
std
insb
push
test
arpl
pop
xor
push
aad
jle
push
or
leave
push
mov
fisubrl
je
inc
jb
jge
dec
push
xchg
pop
mov
jno
neg
xlat
mov
pop
mov
xlat
pop
iret
fisttpl
xchg
cltd
push
inc
ja
dec
fwait
push
adc
adc
movsb
iret
or
cmp
push
adc
out
adc
xchg
or
enter
xchg
push
lret
adc
hlt
push
adc
push
iret
pop
cli
jle
fcomps
cmp
mov
arpl
imul
push
or
dec
sub
dec
cmp
mov
movsb
or
jp
sbb
pushf
andl
rorl
adc
push
pop
fwait
sbb
add
mov
dec
lea
lret
data16
xchg
mov
gs
leave
lret
cmpsb
aad
push
fnop
cltd
int
ds
pushf
rcrl
and
jo
fists
dec
loope
nop
fmull
push
loope
lea
jno
inc
mov
sti
ficoml
mov
clc
pop
or
add
xchg
dec
test
sub
fisubl
xchg
push
mov
lret
dec
add
in
addr16
push
movsb
xchg
jb
sahf
cltd
xlat
mov
or
sti
push
rcl
cmp
jp
add
inc
pop
lcall
popa
xchg
or
aam
adc
out
sub
mov
or
andb
mov
mov
daa
lret
jg
inc
push
sub
repz
jmp
or
ret
and
add
dec
dec
scas
mov
sbb
lret
stc
push
xor
test
rolb
leave
addl
xlat
mov
dec
add
cmp
or
xor
add
and
or
hlt
or
push
lret
push
int
adc
push
push
xor
insb
or
jge
pop
pop
rorl
dec
xchg
les
jne
push
adc
xor
xchg
push
in
xor
pop
xchg
mov
out
and
adc
out
add
cmc
adcb
decb
push
clc
jns
sbbl
cltd
xor
int
sub
or
daa
ja
dec
xlat
jl
ja
test
add
inc
mov
sbb
fcoms
outsl
sub
cli
cmp
fdivrs
push
push
sub
pop
fwait
mov
enter
push
add
push
mov
addb
dec
push
adc
pop
outsb
insb
pop
and
xchg
aam
sbb
inc
pop
arpl
cltd
loope
mull
push
mov
mov
add
ss
jge
mov
jl
pop
dec
out
mov
push
dec
inc
jno
shll
xchg
dec
call
add
xchg
dec
mov
incl
in
xchg
dec
call
dec
xchg
xchg
mov
xchg
xchg
dec
mov
imul
sbb
push
shll
inc
inc
mov
arpl
enter
hlt
xchg
adc
fiadds
mov
or
fisubl
lret
and
push
insl
call
pop
imul
or
pushf
adc
mov
xchg
fsub
lock
mov
leave
pop
xchg
pushf
rolb
and
lahf
outsb
and
push
scas
icebp
stos
jecxz
adc
dec
mov
test
arpl
push
pop
or
dec
pop
pushf
adc
mov
xchg
dec
std
fisttps
cmp
mov
pop
jbe
notb
popa
xchg
mov
cmp
lret
loope
jecxz
or
mov
adc
sbb
aam
outsl
push
addl
loope
fnstenv
and
mov
xlat
dec
pop
hlt
cmp
punpckhwd
lret
pushf
xchg
dec
fsub
iret
or
inc
inc
sbb
test
pop
or
or
sbb
sahf
dec
xchg
sbb
arpl
xchg
push
and
xchg
xlat
mov
lret
mov
mov
in
dec
mov
test
jmp
repnz
lea
popl
push
or
cwtl
js
rcll
cs
out
jb
adc
cmc
push
dec
push
push
push
int3
dec
popf
out
or
insl
push
push
adc
and
xchg
xchg
aam
fmuls
adc
adc
mov
jp
sub
xchg
dec
fstl
loopne
pusha
cmp
mov
pop
adc
push
aas
dec
sar
cltd
xor
arpl
push
sbb
mov
adc
xchg
fldenv
dec
dec
push
xchg
pop
jns
andl
and
jo
lcall
dec
sbb
push
enter
xchg
nop
or
sti
adc
jns
into
push
imul
iret
fs
rcll
dec
xlat
dec
fs
cltd
rclb
pop
xchg
pop
jo
fistl
push
or
inc
jecxz
rcl
divb
and
dec
int3
dec
xchg
dec
inc
mov
addr16
jns
mov
add
push
dec
sub
xchg
cmp
ret
mov
adcb
dec
lds
cld
mov
dec
fcomps
enter
xchg
adc
imul
int
scas
shlb
or
dec
pop
add
xchg
adc
imul
adc
fldenv
dec
imul
xchg
jge
adc
pushf
adc
cmp
mov
xchg
insb
sbb
adc
dec
jg
jns
mov
lods
jecxz
dec
int3
and
test
dec
leave
or
jg
cwtd
ja
loop
pop
nop
leave
and
push
adc
rclb
push
push
adc
addr16
and
mov
jmp
cmp
or
aad
dec
sbb
fdivp
je
or
sub
mov
lcall
hlt
and
push
nop
jno
loop
rcll
lret
leave
xchg
push
dec
vpshufd
movsb
jb
test
jle
insb
enter
dec
mov
pop
sbb
or
mov
push
xor
jge
cwtl
push
movsl
jae
push
cmpsb
stos
out
xchg
mov
sub
cltd
sbb
xchg
faddl
xchg
push
add
ror
dec
xor
enter
leave
negb
and
jns
push
jns
ror
sub
ljmp
xchg
lcall
je
testb
dec
imul
xchg
xchg
iret
inc
pop
mov
sarl
xchg
leave
iret
aam
xchg
add
shl
mov
cwtl
mov
and
aaa
inc
sbb
jo
xchg
cmp
xchg
xchg
jl
out
data16
nop
dec
lret
aam
jge
int3
mov
shlb
fists
fisubl
lret
ljmp
push
mov
ds
push
fcmovb
stos
arpl
dec
lock
int3
sbb
cmp
out
jo
fstpl
adc
xchg
loop
enter
or
dec
cmp
xor
lea
adc
xchg
out
movsl
in
mov
insl
push
xchg
xchg
mov
dec
mov
adc
gs
rorb
aam
pop
or
jnp
loopne
rcr
jge
adc
lret
or
mov
push
nop
push
lods
or
inc
test
icebp
sub
cmpsb
add
xchg
int3
sub
jle
or
adc
xchg
sar
mov
or
push
fisttps
pop
pop
ret
in
sarl
pop
dec
fisubrl
cmp
mov
cwtl
pop
jb
out
insl
and
push
int3
or
iret
dec
mov
sub
pop
add
cmp
ljmp
ds
and
adc
adc
jecxz
adc
xlat
addr16
sbb
in
leave
movsb
sub
push
xchg
or
cmp
dec
imul
add
loope
sarb
lret
cwtl
xor
mov
enter
or
cmc
or
xchg
adc
push
cltd
jbe
lret
pop
nop
jnp
pop
add
xor
mov
je
leave
mov
insl
xchg
adc
pusha
lcall
pop
orb
pop
out
and
std
xorl
orl
ds
cwtl
xchg
xor
loop
push
rcll
cmpsb
cmpsb
fidivl
adc
pop
enter
pop
fwait
sbbl
mov
rcrb
packssdw
xchg
lret
dec
loope
or
mov
mov
mov
rcr
push
cmpsb
push
mov
leave
loope
or
dec
or
ret
filds
out
mov
adc
pop
pop
dec
enter
mov
mov
adc
cltd
xchg
dec
push
cmpl
add
loop
push
sbb
fwait
sbb
xor
clc
mov
sub
cltd
mov
dec
or
xchg
cmc
and
nop
mov
or
lcall
imul
and
iret
push
fucompp
mov
push
cli
cwtl
jecxz
adc
sti
sbb
imul
mov
imul
mov
dec
insl
dec
fsub
adc
jg
xor
pop
int
xor
cmpsb
xor
mov
insl
jbe
fisttpll
dec
rcrb
int3
fnstsw
xlat
fistpll
loop
xchg
data16
add
loop
xor
pop
ja
addl
imul
sahf
fcmovbe
sub
mov
push
push
lret
mov
sbb
loopne
fnsave
push
int3
xor
pop
or
and
in
pop
sub
and
filds
retw
enter
or
sbb
clc
pop
movsl
cmc
dec
andl
cmpsb
pop
mov
aam
push
orl
subl
rolb
push
enter
cmp
push
sub
repz
andl
dec
push
push
pop
icebp
and
ja
xchg
es
cltd
inc
adc
pop
outsb
aam
es
adc
mov
mov
mov
dec
dec
lods
test
push
jp
or
imul
adc
or
cmpsl
ds
or
push
fdivrs
fwait
push
mov
mov
push
in
popa
les
fstps
loopne
jecxz
xchg
cltd
lock
dec
mov
sub
dec
mov
lcall
jmp
jp
pop
cltd
lea
out
adc
push
jne
mov
adcl
inc
xchg
push
lret
adc
aas
mov
xchg
imul
push
jo
dec
mov
shlb
je
mov
mov
cwtl
nop
push
lea
xchg
pop
and
stc
xchg
repnz
add
add
push
aam
aam
push
adc
in
xchg
ret
ret
fimull
loop
pop
dec
jecxz
inc
pusha
aam
adc
mov
shlb
or
ds
das
pop
dec
cwtl
jle
adc
pop
dec
data16
mov
or
dec
sbb
dec
dec
dec
daa
fstps
or
xchg
add
and
mov
sbb
aad
push
dec
ds
xlat
adc
add
mov
cli
ljmp
jg
xchg
mov
nop
adc
cwtl
rclb
in
pminub
into
xchg
imul
fs
dec
stc
movsb
xor
aam
fs
pop
ds
loopne
insl
and
push
jns
pop
jns
loopne
aam
push
pop
xchg
leave
ror
shl
sbb
push
js
ljmp
pop
or
mov
aam
or
or
ja
jle
adc
inc
cmpsb
fs
mov
xor
out
pop
in
dec
lret
aaa
push
nop
mov
pop
mov
lods
pop
mov
incl
mov
sub
pushf
jb
mov
mov
add
xor
or
inc
dec
fcoms
enter
in
xor
shlb
adc
lods
orb
push
loop
or
cmp
add
push
dec
jle
mov
push
daa
cmp
movsl
cwtl
jle
notl
push
aaa
cmp
mov
movd
cmp
push
jle
je
push
test
jle
testb
dec
cwtl
jle
sbb
enter
imul
loop
dec
xor
lret
or
mov
dec
data16
lea
xchg
mov
pop
mov
imul
xchg
or
push
fcoms
nop
mov
insb
xchg
sti
or
push
adc
sbb
mov
dec
ficompl
adc
dec
insl
adc
leave
pop
push
push
push
or
mov
add
push
jge
or
leave
adc
and
dec
or
ljmp
xor
dec
inc
push
js
loope
iret
xchg
xlat
push
in
pop
mov
ret
sbb
sbb
xchg
push
sub
scas
ficoml
mov
sbb
loop,pn
pop
xchg
fists
cwtl
jle
sub
andl
sete
ja
jecxz
rorb
adc
enter
inc
jge
dec
cltd
jecxz
or
push
push
xchg
xchg
push
pop
push
push
ficompl
pop
adc
aam
xchg
iret
push
push
and
fs
cmpsb
in
push
pop
fyl2x
jle
jge
push
shl
push
or
lret
jecxz
xchg
xchg
mov
addb
ror
pusha
leave
popf
or
pop
insl
iret
cmpsb
jecxz
or
ds
mov
xchg
inc
test
adc
nop
xchg
inc
cltd
int
push
int3
mov
mov
fsubrs
ror
les
or
imul
imul
lret
orb
or
xchg
sbb
mov
xor
xchg
dec
dec
leave
es
pop
test
xchg
cmc
sbb
or
jp
pop
lret
imul
push
nop
inc
push
dec
shlb
xchg
out
repz
pop
mov
mov
enter
std
lahf
sysenter
adc
lahf
add
jne
iret
mov
rclb
mov
xor
ror
adc
mov
pusha
and
fimull
lret
shlb
daa
push
mov
insl
add
notb
mov
rolb
pop
mov
cwtl
jbe
push
or
pop
pop
pushf
push
push
add
sub
dec
cmp
dec
cmp
cmp
sti
xchg
inc
sahf
wbinvd
or
xchg
xlat
ret
mov
cmpsb
in
add
mov
pop
pop
arpl
cwtl
adc
xchg
pop
jbe
adc
mov
mov
leave
lret
nop
ljmp
xor
fcom
xchg
push
inc
rclb
cmp
or
adcl
xchg
xchg
sbb
xlat
decl
dec
out
push
pop
mov
xlat
bound
dec
shlb
push
cmc
pop
sbb
and
dec
jbe
or
or
jns
mov
shrl
jns
int3
lretw
jmp
mov
push
cmp
call
cmpsl
fimull
dec
bswap
cmc
dec
mov
push
mov
dec
out
mov
pop
xchg
inc
jle
lret
rcll
dec
sbb
push
xchg
pop
sbbb
pop
rcr
sbb
shll
leave
dec
pop
dec
dec
and
ficoml
fadds
nop
dec
int3
xlat
adc
push
insl
dec
adc
sub
push
pop
cmp
dec
iret
aad
push
xchg
mov
test
mov
lcall
clc
dec
in
aaa
dec
shll
push
pop
inc
and
push
xchg
cltd
sub
sarl
xchg
inc
fistps
and
ljmp
rorb
or
mov
mov
lcall
aad
xlat
movl
adc
inc
cmpsb
adc
loop
leave
movsb
jns
test
xchg
or
insl
fprem
pop
das
scas
mov
mov
jne
pop
fcoms
or
and
mov
sbb
pushf
dec
mov
adc
jecxz
nop
or
unpckhpd
outsb
jp
or
inc
mov
jnp
cmpsb
jp
movsb
sbb
negb
xchg
sbb
xor
cltd
mov
push
rorb
adc
push
lea
movsl
sub
push
dec
int3
ss
insl
lds
pop
push
int
ror
hlt
rorb
jle
xchg
aam
xchg
mov
xchg
inc
sti
gs
jge
mov
loop
ucomiss
enter
xchg
stos
sbb
cmp
movsl
pop
out
fldt
push
arpl
push
mov
imul
js
pop
into
insl
scas
lret
xor
xchg
pcmpeqw
rclb
dec
rorl
jns
xchg
push
push
test
push
or
jbe
fwait
xlat
out
lret
adc
add
xchg
push
test
mov
push
xchg
mov
xor
push
out
or
leave
jno
jne
or
jle
push
pop
push
notb
dec
push
nop
adc
lea
lret
push
dec
push
pop
test
adc
dec
and
adc
mov
or
jecxz
adc
jnp
mov
xchg
ret
dec
fmul
sbb
cwtl
or
jle
push
call
rorl
push
dec
xorl
cltd
or
dec
sub
shrl
jne
xchg
dec
sarb
push
or
or
sbb
ror
in
push
jl
push
fists
movsl
add
lcall
pop
jle
loopne
xchg
lret
cwtl
test
cltd
push
loopne
imul
pop
insl
dec
lret
jecxz
mov
loope
rorb
pop
add
push
push
xchg
xchg
mov
imul
dec
mov
rolb
jns
push
jle
scas
mov
push
adc
fisubrl
dec
push
cld
call
inc
outsl
xlat
push
push
aas
mov
daa
add
push
fcmovu
dec
adc
jo
pop
fwait
cmp
or
or
arpl
imul
push
ret
movsb
mov
mov
mov
adc
sbb
ret
pop
dec
sub
jg
je
dec
pop
mov
dec
xchg
adc
adc
or
test
dec
rcl
add
lods
jp
mov
adc
scas
push
popl
xlat
push
lea
mov
adc
push
xchg
mov
movsl
in
sbb
or
lret
xchg
push
dec
push
scas
test
nop
int3
dec
or
sbb
rolb
sbb
xchg
xor
ret
push
test
mov
xchg
call
and
mov
subl
enter
repz
mov
push
cmp
dec
inc
roll
cwtl
cld
push
nop
aam
test
cs
sarb
or
dec
add
xlat
adc
jge
cmp
sbb
sbbb
movsb
adc
xlat
cmp
loopne
leave
inc
add
rcrl
lods
dec
shll
jle
sub
andl
or
rorb
lret
test
inc
in
or
lret
gs
xchg
dec
sqrtps
jns
mov
pop
inc
mov
and
and
bswap
adc
rol
jp
stos
rclb
mov
push
push
xchg
dec
fcmovnu
cwtl
fcmovbe
xchg
jl
popf
adc
data16
sarl
xchg
orb
mov
sbb
nop
stos
xor
cmpsb
test
mov
js
jns
mov
sub
add
jo
rolb
jbe
push
cmp
mov
push
push
iret
xor
sarb
pusha
mov
aas
dec
inc
pushf
push
push
sbb
adc
fs
or
add
push
xchg
lret
mov
mov
inc
rorl
adc
push
mov
daa
cwtl
dec
pushf
mov
cmp
push
cmp
xchg
sbb
mov
lret
mov
dec
and
int3
and
test
cmp
pop
rclb
lds
sbb
mov
test
adc
pop
jns
xor
cmp
daa
xorb
add
pop
jl
xor
xchg
cld
push
jb
in
test
or
push
jmp
inc
mov
cltd
xchg
ret
imulb
push
xor
push
cmp
xchg
xchg
rcr
or
outsl
loopne
xlat
nop
loope
fcmove
pop
mov
dec
adc
shrd
add
mov
hlt
dec
push
pushf
aaa
or
mov
test
sbbl
stc
xlat
movsl
sbb
push
adc
pop
hlt
pushf
adc
subb
pop
pop
xchg
leave
fwait
cmp
pop
xchg
sahf
loop
cmovae
inc
xor
xor
test
cltd
dec
bound
push
push
cmc
sub
push
dec
xchg
jl
push
cltd
jle
pop
mov
push
sbb
int3
dec
fidivl
test
dec
daa
mov
adc
xor
adc
ljmp
mov
pop
test
cltd
or
xchg
push
sbb
adc
test
or
jns
add
dec
adc
jge
pop
and
clts
adc
mov
push
mov
dec
imul
bound
rcl
xchg
fisubrl
jp
mov
lock
or
lods
xchg
and
adc
ljmp
mov
mov
jl
sarl
popl
sahf
xlat
dec
inc
cmp
and
dec
or
dec
mov
add
dec
adc
mov
aam
imul
fstl
and
xchg
ficoms
push
nop
mov
jmp
stos
lea
adc
sahf
imul
fdivr
pop
xchg
push
push
mulb
adc
xor
jecxz
cwtl
pop
icebp
push
roll
jecxz
or
sub
xor
out
xchg
or
xor
or
std
lret
sar
adc
mov
jle
xlat
fwait
xor
xor
in
shr
and
enter
xchg
cmpl
jle
lret
push
sti
jb
or
mov
adc
clc
or
sbb
mov
lret
mov
push
lahf
push
imul
sbb
dec
sti
lret
aam
pop
js
mov
push
adc
xchg
mov
in
push
sarl
enter
adc
lahf
dec
or
ficoms
lret
push
push
push
rcrl
paddusw
aad
jae
leave
jle
cmpsb
add
fistl
xchg
mov
enter
gs
adc
or
cwtl
xchg
jle
sbb
je
jg
je
inc
mov
and
lret
stc
and
cwtl
adc
push
fadd
jle
adc
mov
mov
jg
xchg
push
scas
xchg
lcall
sub
xchg
and
ret
inc
or
or
lcall
jae
icebp
loop
fldl2e
fwait
push
repz
movhps
lock
cmova
mov
push
push
jle
mov
inc
mov
enter
sbb
or
push
mov
jb
dec
jg
sbb
pushf
call
fnstenv
pop
push
les
mov
cmp
adc
out
xchg
pop
int3
xchg
data16
inc
pop
int
je
adc
mov
xchg
sbb
add
cltd
jns
push
jg
daa
lods
adc
jle
scas
adc
les
push
mov
adc
or
sub
cmc
adc
add
cmp
xlat
aam
scas
fmul
mov
add
dec
roll
mov
rolb
dec
push
mov
or
sar
sub
orl
pushf
adc
or
lds
push
lret
jo
xor
push
lea
adc
dec
dec
xchg
sub
xchg
addr16
out
jle
data16
dec
adc
push
adc
jno
xchg
xchg
leave
xor
lock
testl
xchg
rcll
mov
mov
test
and
pop
mov
push
jecxz
push
scas
and
rorb
jns
xlat
xchg
addr16
mov
js
adc
or
arpl
xlat
loop
xchg
lds
mov
loopne
pop
push
imul
icebp
xchg
inc
aad
push
push
xchg
add
sbb
imul
cwtl
inc
arpl
cltd
adc
mov
test
test
dec
sbb
sarb
push
dec
leave
in
aam
add
xchg
xor
rorb
push
xchg
jbe
inc
dec
shr
dec
ss
xor
cmp
dec
jle
dec
push
pop
ret
pop
push
loop
call
stc
jg
xchg
mov
rorb
dec
dec
ljmp
test
dec
or
mov
dec
icebp
sahf
jns
push
cmpsb
gs
or
pop
push
jg
sub
nop
dec
push
out
jle
outsb
add
dec
movsb
scas
push
push
sub
fsub
into
mov
rclb
xchg
inc
aas
mov
pop
mov
js
imulb
pop
or
add
pop
xchg
push
pop
mov
les
xchg
cmp
sbb
pop
dec
push
movsb
clc
adc
int
cmpsb
sarb
or
es
rorb
pop
aam
rclb
dec
iret
push
cmp
pop
inc
outsl
dec
xchg
xchg
sbb
sub
lds
imul
arpl
sbb
dec
out
and
add
mov
sti
aam
dec
daa
rorb
movsb
xor
shll
leave
in
in
or
test
lock
jmp
jl
or
jl
mov
or
inc
int3
xchg
jb
xlat
pop
into
sahf
arpl
xchg
bound
adc
adc
lea
pop
push
outsl
popa
or
mov
lret
push
or
or
ds
push
adc
jmp
ljmp
jmp
loopne
mov
rorb
test
movsl
addr16
addr16
nop
dec
cli
fistpll
icebp
mov
add
dec
and
nop
rolb
xchg
fisttpll
or
push
sub
fstl
fisttps
dec
decb
cltd
xchg
lret
push
test
push
movsb
dec
xchg
rolb
dec
rol
les
sbb
pop
push
xchg
ss
adc
or
xchg
daa
mov
sbb
imul
shl
adc
cltd
rcl
lods
leave
push
in
adc
push
mov
pusha
or
cltd
loop
push
aam
sub
push
or
adc
cltd
fwait
adcl
sbb
adc
push
dec
xor
fwait
xor
push
in
jp
loopne
xchg
fcmovbe
cltd
xchg
sbb
or
int3
sbb
mov
and
xchg
mov
rolb
sbb
fisttps
mov
mov
aad
xchg
jl
stos
fstl
test
push
lret
movlps
lret
jle
xchg
push
mov
xchg
ljmp
in
les
sub
cmpsb
in
jnp
push
xlat
fisttpll
mov
adc
xchg
sete
rcr
push
pop
or
imul
push
dec
mov
aad
stos
test
ror
fimull
push
or
ja
pop
inc
xchg
gs
aam
lret
pop
xor
jecxz
dec
iret
push
pop
scas
inc
jb
icebp
jne
push
pop
mov
rcrb
shrl
enter
adc
mov
js
push
pop
pop
push
adc
mov
dec
adc
pop
cltd
cmp
pop
fcmove
in
pop
fxch
lret
lcall
push
adc
mov
insl
pop
push
dec
test
push
xor
cmpsb
and
scas
dec
cld
mov
jg
pushf
lret
std
enter
push
cwtl
movhps
xchg
adc
pop
lret
shll
or
mov
fiaddl
fstps
xchg
decb
dec
xorl
fwait
jl
push
movsl
mov
pusha
sbb
loopne
push
mov
or
inc
adc
rcl
hlt
mov
pushf
dec
or
sbb
jecxz
push
nop
mov
adc
jge
push
jecxz
dec
rorl
lret
sarb
add
pop
pushf
setb
pushf
sub
push
mov
dec
dec
sbb
pop
or
dec
pop
xlat
nop
push
ljmp
cmp
push
mov
jae
xlat
cmp
push
sbb
sahf
dec
xchg
out
in
cwtl
push
xlat
or
insl
pop
xchg
fisubrl
lds
pop
mov
fsts
dec
int3
mov
mov
test
push
adc
inc
insl
mov
xchg
xor
sub
or
lret
loope
mov
and
insb
pop
sbb
sbb
lret
enter
lods
and
mov
ret
in
and
dec
mov
jge
jmp
pop
adc
js
jne
dec
mov
jle
repnz
fstp
or
leave
pop
roll
jge
push
jg
lcall
jge
pop
push
sbbl
pop
pop
leave
and
das
lret
pop
cmp
adc
or
sbb
jb
fisttpl
out
dec
or
lret
shl
push
xchg
icebp
int3
lock
fmuls
lock
daa
ficompl
or
das
dec
or
add
and
xchg
test
fs
inc
dec
cwtl
xchg
hlt
testb
jge
mov
xor
xchg
pop
and
or
js
lret
inc
mov
xchg
dec
fs
test
or
or
dec
mov
jecxz
aam
psubsw
hlt
js
scas
and
sub
or
fs
push
push
hlt
addr16
es
xor
jge
xchg
movntq
push
push
pop
mov
mov
movl
xor
out
sub
jns
rcrl
mov
push
gs
iret
or
inc
mov
in
pop
dec
mov
cltd
inc
lock
xchg
insl
xchg
adc
clc
out
outsl
nop
test
inc
push
test
pop
or
enter
loope
iret
arpl
dec
cmpsl
arpl
jo
and
dec
pop
or
sub
leave
dec
pop
test
xchg
dec
dec
xchg
jecxz
dec
ret
cld
pop
jno
cmp
pusha
mov
jns
arpl
lock
inc
add
jg
and
pop
xlat
cltd
pop
fwait
nop
adc
test
and
int3
out
lods
sbb
je
loope
jne
nop
adc
lret
leave
or
aaa
mov
mov
cmp
imul
mov
repnz
jecxz
rorl
and
rcll
les
xlat
sbb
or
repz
and
mov
mov
push
int3
pop
in
lcall
push
mov
mov
dec
inc
loope
xchg
pop
iret
sbb
and
push
insb
adc
testb
insl
enter
pop
addl
inc
add
adc
lret
lcall
xchg
lea
stos
repnz
nop
dec
push
or
push
xor
pop
xchg
pop
test
or
rorl
sbb
dec
dec
jns
sub
sub
mov
xor
jnp
jns
add
sbb
loop
xchg
jecxz
xchg
mov
xchg
push
mov
xchg
or
xchg
xchg
sbb
xor
shlb
lret
pop
nop
pop
shll
xchg
or
jecxz
pop
adc
inc
add
lret
cld
adc
retw
sbb
lods
mov
ljmp
rcrb
jns
call
pop
push
test
xchg
loop
adc
add
xchg
xchg
lret
ja
fwait
push
repnz
push
push
jb
dec
test
test
mov
mov
out
lret
mov
movsl
pushf
std
pop
int3
arpl
sarl
inc
and
push
jb
xlat
hlt
js
cltd
mov
or
xchg
push
lock
sub
mov
jbe
sub
push
xor
cmp
pop
mov
mov
nop
push
mov
outsl
sub
push
nop
dec
xchg
mov
pop
fldenv
leave
rclb
fs
xchg
xor
cmpsb
sub
adc
dec
aam
sub
rclb
enter
or
xchg
pop
push
push
xchg
leave
mov
push
mov
lea
xchg
cmp
lahf
jle
or
ror
adc
add
sbb
cwtl
mov
rorl
adc
lcall
arpl
xchg
iret
aas
dec
xchg
iret
push
adc
sbb
outsl
push
push
push
sti
push
pop
fwait
pop
aad
xlat
cmovg
xchg
jle
sbbl
xchg
cwtl
lret
mov
cmc
jb
mov
push
xchg
rorb
add
jp
lret
push
push
mov
mov
push
adc
push
bound
in
xor
push
dec
outsl
xchg
and
cltd
push
cmp
push
mov
cmp
or
add
lret
xchg
addr16
dec
movsb
rorb
or
xor
xchg
cltd
sub
pop
loope
ficoml
cmp
xchg
in
pop
push
cwtl
push
pop
imul
daa
mov
sbb
or
out
push
push
jo
popf
pop
mov
pminub
pop
and
or
or
or
dec
leave
or
dec
mov
arpl
jns
out
aam
pop
dec
lds
adc
jecxz
fxch
and
mov
sbb
xlat
leave
sub
mov
adc
pushw
movsb
adc
test
adc
in
push
push
pop
inc
mov
xchg
sub
shl
sbb
rcrb
mov
lods
xchg
mov
int3
out
lret
dec
sbb
loope
fdiv
push
shl
sahf
xchg
jmp
lds
pop
test
adc
push
xchg
roll
and
adc
les
jecxz
push
ror
dec
mov
insb
fwait
or
rorb
cmpsl
aam
fnstenv
push
cli
dec
rcrl
adc
nop
or
add
jne
call
dec
arpl
ret
inc
mov
fimull
movsl
xor
in
add
femms
aaa
ja
sti
xlat
and
dec
and
mov
loop
fsts
push
and
push
adc
push
sub
cltd
cmc
push
test
xchg
inc
addr16
or
jo
xchg
cwtl
push
loop
dec
lret
push
cmpsb
jo
int3
xchg
or
negb
or
sub
pop
scas
je
jp
xor
jp
or
adc
leave
lcall
mov
inc
xchg
jle
rcll
mov
and
adc
or
fdivs
loopne
mov
scas
sub
jns
test
pop
cwtl
jg
mov
insb
dec
mov
xchg
loop
pop
dec
ret
pop
dec
iret
push
mov
cmp
and
lahf
mov
inc
push
jle
jle
adc
leave
rorl
loop
and
je
dec
sub
push
lcall
negb
fisttpll
inc
mov
push
or
fimull
xor
sub
jge
dec
xchg
sbb
sarl
out
call
mov
xor
gs
mov
leave
aam
movsb
push
bextr
xchg
outsb
lret
fs
test
adc
jmp
scas
add
loope
leave
insb
adc
aam
out
and
int3
mov
xchg
xchg
inc
mov
mov
or
push
xlat
xor
dec
pop
cltd
dec
jo
jge
adc
push
imul
add
inc
fwait
jg
ja
stos
dec
lahf
ljmp
and
xchg
mov
xchg
adc
dec
xor
sbb
push
push
xchg
pop
pop
mov
bswap
adc
bts
mov
mov
enter
ja
and
iret
dec
fidivs
testb
aaa
leave
ljmp
cmpsb
out
dec
xchg
xcrypt-cbc
cmpsl
push
mov
adcb
popf
fnstcw
test
in
xchg
jns
fs
rorl
cwtl
cltd
and
nop
dec
rcrb
cli
pop
ficoms
dec
int3
cltd
xchg
mov
or
leave
jg
movsb
push
ror
lret
pop
int3
stos
ret
faddp
cwtl
adc
bound
dec
pop
pop
xchg
leave
pop
push
dec
mov
imul
scas
imul
xchg
movl
cwtl
mov
movsb
adc
out
int3
fbstp
xchg
push
jns
mov
pop
out
insl
sbb
push
mov
mov
mov
nop
or
scas
add
or
push
sbb
xchg
pop
or
inc
xor
leave
fst
sbb
xchg
sahf
xchg
cwtl
xlat
push
ror
adc
adc
adc
dec
or
fmuls
pop
add
scas
pop
adc
fnstcw
jns
dec
push
sbb
aad
mov
xchg
rcrb
or
sahf
sbb
fld
push
mov
addl
fs
imul
pop
adc
xchg
jl
pop
add
inc
push
loop
inc
nop
arpl
lret
pop
push
and
sbb
fdivs
jecxz
mov
xchg
or
dec
cli
inc
fldcw
daa
mov
mov
addr16
ja
jge
int3
dec
xorl
xor
ret
jo
xchg
inc
bound
insl
xchg
mov
push
jo
leave
enter
inc
or
loopne
arpl
mov
jns
rcrl
adc
arpl
mov
lret
adc
jecxz
seto
ret
fwait
iret
fisubs
fwait
xchg
push
je
lret
dec
aad
push
add
outsb
pop
or
xlat
or
xchg
push
jle
lret
dec
outsb
push
xchg
ficoml
push
lret
dec
mov
xlat
push
loopne
loopne
mov
mov
dec
adc
adc
push
mov
sarl
cmp
dec
ljmp
jnp
and
cwtl
jge
lret
jns
mov
and
push
push
xchg
sub
scas
xchg
ret
inc
adc
xor
inc
adc
cmc
and
lds
loopne
and
adc
rcl
nop
fwait
push
leave
inc
xchg
mov
lahf
push
mov
push
pop
and
mov
shr
int
or
push
mov
lea
inc
pandn
push
sbb
inc
pop
and
gs
out
and
and
or
fcomp
adc
pop
sahf
adc
inc
xchg
dec
or
enter
lret
and
pop
xchg
adc
test
nop
lret
int3
ret
insl
pop
dec
mov
dec
push
stos
mov
adc
adc
lea
shlb
inc
xchg
xor
sahf
inc
jns
arpl
cltd
jecxz
dec
lret
push
cltd
call
dec
push
push
jg
sub
orb
or
subl
xlat
push
adc
adc
dec
les
shrb
mov
les
gs
push
or
mov
xchg
mov
test
push
pcmpgtd
iret
or
hlt
jecxz
jne
adc
fcmovnbe
cwtl
adc
cs
sub
xor
push
andb
loope
movsb
push
movnti
rcll
add
push
dec
push
push
and
adc
mov
inc
push
data16
sub
lea
mov
orl
or
cltd
push
push
mov
adc
jecxz
mov
decl
roll
adc
popl
lret
pop
loopne
fs
cmp
test
les
and
push
or
dec
mov
cwtl
dec
push
iret
outsb
mov
ficoml
xchg
xchg
push
fmuls
mov
or
pop
and
iret
and
xchg
push
out
jle
int3
sub
mov
and
aam
xchg
and
xchg
dec
adc
fs
dec
xchg
mov
gs
mov
mov
push
pop
nop/reserved
push
rorl
inc
mov
xchg
setl
xchg
addr16
and
enter
daa
fsts
pop
nop
iret
dec
push
xor
dec
push
rorb
add
inc
bound
subl
xchg
jecxz
or
clc
adc
jle
out
inc
ficomps
xor
lret
outsl
inc
dec
pop
test
in
lods
das
or
sbb
xor
sbb
cltd
sbb
or
xchg
pop
push
movsb
fimuls
inc
stc
rcr
jl
xchg
push
inc
fwait
cmp
lret
pop
jns
movsl
popf
dec
push
arpl
adc
dec
mov
loopne
arpl
xlat
nop
or
dec
dec
ficoml
push
test
jne
push
pop
int3
xchg
mov
mov
inc
cltd
cmpsl
cmp
popf
aaa
stos
push
adc
push
push
add
sub
sub
movsb
xchg
xchg
mov
dec
dec
push
dec
aad
rcll
dec
ret
push
outsl
and
jp
push
lret
sbb
xchg
aas
xchg
pop
xchg
fwait
pop
xchg
jne
popf
add
inc
jnp
mov
dec
xchg
ficoml
push
xchg
fsts
mov
add
xor
jno
push
mov
pop
add
mov
mov
call
enter
inc
rcl
jecxz
aam
shrb
mov
leave
sub
pop
out
pop
lcall
dec
ficompl
or
pop
mov
cmp
jg
or
inc
mov
lret
or
cmpsl
sbb
int3
repz
dec
add
ret
lret
adc
data16
push
dec
push
or
popf
lret
or
repnz
push
xor
mov
ljmp
aam
xchg
jns
movsb
pop
leave
or
ret
jae
enter
cmp
fisttpll
aam
ss
fcmovnbe
mov
pop
lcall
dec
pmovmskb
push
pop
mov
jge
xchg
push
xchg
dec
mov
test
lcall
push
leave
jg
ror
xchg
rolb
push
iret
adc
int
push
dec
imul
imul
insl
xchg
dec
add
ja
bound
ficompl
pop
xor
or
fwait
adc
andl
leave
push
sub
out
dec
sbb
pop
xchg
rorl
sub
test
mov
jbe
mov
fisttpll
sti
lods
and
or
xchg
xchg
dec
imul
fcmovbe
add
lret
sub
dec
loope
popf
xchg
mov
xchg
movsl
inc
or
int3
push
jl
sbb
or
js
or
push
dec
and
xchg
rclb
push
jmp
pop
lea
in
int3
enter
cmc
jle
pop
mov
nop
shll
adc
sub
xchg
arpl
fimull
or
lds
jg
fstl
adc
lret
pop
push
rorl
or
or
sub
pop
sti
adc
dec
jmp
int3
sub
psubusw
imul
xlat
or
fbld
push
push
xchg
push
push
sahf
xchg
mov
sbb
arpl
push
and
dec
fimull
xchg
push
ja
mov
loop
dec
ja
mov
xorl
jle
xchg
xchg
cld
test
mov
xchg
mov
out
cld
or
pop
mov
mov
or
add
mov
sti
xchg
inc
mov
gs
xchg
mov
adc
lods
in
pop
pop
dec
leave
jp
pop
push
or
push
and
jg
jle
or
movsb
or
scas
mov
lock
mov
test
mov
push
xchg
or
inc
push
fsubr
dec
cmpsb
inc
iret
xchg
adc
inc
aad
mov
fldl
shrb
dec
mov
jno
mov
xchg
jbe
mov
or
mov
pusha
aam
mov
adc
or
pop
int3
mov
nop
loop
mov
or
iret
es
push
xchg
and
or
adc
shl
push
dec
xchg
mov
cmp
fxch
cmpsb
dec
add
hlt
adc
pop
pop
jne
cmpsb
xchg
je
sbb
inc
dec
lcall
iret
pushf
mov
or
rol
push
cmpsb
dec
mov
popf
gs
mov
push
lds
loope
dec
or
pop
or
jecxz
adc
fistpl
call
jmp
cmp
dec
or
adc
dec
sbb
xchg
and
xlat
adc
int3
movlps
pop
popf
call
aam
jle
leave
rorl
jmp
or
dec
xlat
push
inc
xchg
mov
movsb
sbb
leave
lret
mov
mov
xchg
sbb
or
and
sub
ret
repnz
xchg
dec
mov
sub
lcall
ljmp
rcrb
xchg
xchg
sbb
sbbl
pop
orl
push
popl
xchg
rclb
js
adc
fmuls
and
pop
inc
mov
and
pop
and
push
stos
jnp
addps
adc
jae
leave
ja
inc
out
loopne
sahf
mov
sbb
add
or
add
fstl
push
inc
fs
mov
or
mov
mov
shl
ss
cmp
or
xchg
shll
ja
test
inc
adc
xchg
mov
adc
lcall
inc
fs
iret
dec
pop
mov
and
leave
push
mov
inc
xchg
push
lcall
mov
sbb
adc
mov
shl
add
pop
ja
out
pushf
rorl
and
sbb
xlat
pop
jae
je
mov
push
test
pop
or
daa
cltd
inc
xchg
mov
js
push
add
sbb
flds
inc
push
or
adc
xchg
dec
fcmovbe
jno
mov
ljmp
insl
arpl
xchg
push
imul
mov
adc
push
in
push
push
push
nop
mov
adc
mov
orb
adc
dec
pop
leave
imul
test
pop
push
add
cwtl
pop
lahf
stos
ret
fildll
sbb
adc
loopne
push
pop
pop
stc
and
push
xchg
adc
and
adc
fisttpl
add
arpl
movl
daa
iret
insb
push
ja
cmp
popf
mov
cmp
xchg
fisttpl
adc
sbb
popf
jns
inc
xchg
jecxz
dec
popl
cltd
pop
adc
cwtl
mov
push
daa
fsts
lea
xchg
ljmp
std
je
xchg
jmp
pop
mov
xchg
add
icebp
adc
mov
shl
and
dec
dec
dec
inc
push
xchg
aam
cwtl
sbb
jns
push
xlat
out
jmp
cmc
mov
decl
icebp
loopne
loop
pop
fs
mov
pop
lcall
rorl
cltd
popa
xchg
es
and
pushf
mov
push
push
jo
jecxz
dec
mov
sbb
lods
xor
xchg
subb
subl
loopne
rcrb
jg
rcrl
mov
or
pusha
in
adc
xchg
int3
add
pop
dec
es
test
pop
rcrl
sarb
hlt
push
adcl
jecxz
iret
xlat
insb
int3
jnp
dec
xchg
fsts
xchg
pop
push
xor
hlt
push
fs
adc
mov
fwait
and
adc
fimull
pop
xchg
cwtl
xlat
jge
dec
lods
pop
mov
fcoml
xchg
push
rcll
push
call
repnz
push
dec
shrl
dec
jnp
or
mov
cmp
insl
dec
push
ds
mov
sbb
or
adc
mov
xchg
push
arpl
shll
adc
mov
js
mov
out
enter
in
or
xchg
movsb
not
push
test
inc
push
jg
ss
mov
ret
insl
ficomps
rclb
adc
lret
pop
or
cwtl
loope
push
xor
xchg
ret
arpl
xchg
push
inc
repnz
pop
repz
cmpsl
insb
xor
and
xlat
or
push
dec
testb
lds
xchg
and
lret
adc
movd
aam
xchg
mov
scas
mov
xlat
arpl
push
xchg
ret
jecxz
push
test
cmp
movsb
or
pop
rorl
and
fcomp
shll
jmp
dec
roll
imul
dec
xchg
xchg
mov
cwtl
fadd
push
or
and
rcll
hlt
outsl
lret
or
cmpsb
mov
je
imul
jp
dec
sbb
nop
and
mov
arpl
mov
jne
fcmove
jne
pop
push
or
cmp
outsl
and
mov
ror
and
push
divl
adc
in
cmp
adc
adc
xchg
xor
lret
xchg
pushf
loopne
add
xchg
lods
add
jns
or
push
lret
push
push
je
dec
inc
xchg
xchg
or
xchg
cld
sahf
push
lret
xchg
jg
adc
dec
fisttpll
fisttpll
vpcomtrueb
mov
adc
pop
test
xor
sarb
or
mov
pop
mov
jne
xor
push
xchg
movsb
add
adc
imul
pop
nop
mov
push
adc
jae
adc
ret
jg
out
inc
pop
out
jge
dec
push
xchg
iret
push
aaa
adc
rcrb
mov
loopne
jecxz
push
dec
in
dec
int3
adc
iret
loope
adc
dec
cmpsb
lods
das
xchg
xchg
inc
fsub
or
xchg
mov
or
pop
int3
sub
das
dec
aad
outsb
push
or
mov
jb
and
test
leave
pushf
enter
xchg
dec
add
gs
xchg
lret
cltd
jg
cmp
xor
xor
cltd
xchg
cmp
add
rcll
arpl
add
xchg
or
imul
jno
imul
mov
arpl
adc
xchg
push
pushw
sbb
movsb
lret
rcrb
and
fimuls
inc
and
mov
add
dec
iret
cmpsw
xchg
lds
jmp
pop
push
jno
pop
or
flds
cmpsl
adc
xchg
or
xchg
mov
rcrb
mov
pop
iret
push
push
out
pop
in
hlt
cltd
push
cmc
xchg
mov
xchg
push
out
lods
pop
movb
push
rcr
iret
test
dec
xchg
pop
mov
xchg
add
xchg
stc
jns
mov
fwait
dec
es
imull
cmc
pop
mov
xchg
jecxz
jns
jmp
pop
adc
or
and
clc
mov
dec
xchg
dec
out
lea
into
mov
sbb
cmc
push
sbb
add
and
ud2
push
int
fistl
out
inc
cwtl
jge
dec
pop
sbb
cld
lcall
loopne
fimull
xchg
test
cmp
nop
mov
xchg
sub
iret
adc
mul
in
arpl
inc
shll
push
push
mov
lods
sub
pop
xchg
insl
or
or
xor
loopne
jbe
push
xchg
adcb
or
push
jnp
xchg
fdiv
dec
incb
cltd
mov
adc
jmp
push
adc
gs
leave
cwtl
sbb
int3
jle
add
push
inc
jl
xchg
cmpsb
test
mov
movsb
or
inc
enter
pop
cwtl
rcr
jle
notb
push
mov
pushf
xchg
dec
sbb
lret
xchg
dec
ja
or
mov
ss
in
push
int3
cwtl
aam
jo
shlb
push
xchg
sbb
jecxz
push
in
jmp
dec
or
lret
hlt
pop
cltd
xchg
cmpsl
dec
dec
adc
iret
xor
adc
fmuls
dec
pop
add
rcrb
mov
ss
xchg
call
and
cmovns
popf
sub
xor
or
or
mov
shlb
push
or
cwtl
adc
insl
rorl
cltd
jg
loop
mov
fimull
pushf
enter
les
sub
jle
jns
sbb
dec
fwait
push
dec
inc
sub
jge
adc
and
inc
cmpsl
iret
popf
mov
cld
push
xchg
push
jl
push
pop
fistpl
lret
xchg
adc
adc
xchg
xchg
icebp
out
int3
into
sub
or
xlat
push
fiaddl
test
mov
aam
dec
adc
push
pop
popf
pop
mov
xor
dec
nop
adc
jle
movsb
xchg
xchg
xchg
dec
fcmovnb
push
or
pop
icebp
xchg
dec
xchg
push
xchg
lret
pop
pop
push
xchg
fnsave
sbb
pop
dec
xchg
gs
xlat
pop
enter
stos
sbb
xchg
xchg
jns
inc
or
and
loopne
fstp
leave
ret
add
ja
pushf
xchg
push
pop
lcall
sub
and
pop
mov
int3
popf
mov
sub
lods
jns
push
cld
aam
jbe
flds
dec
adc
jne
or
setb
in
inc
outsl
in
jecxz
xchg
enter
adc
dec
loopne
mov
jle
and
xchg
int
sub
push
inc
iret
adc
cmpsb
pop
mov
stos
push
aad
sbb
outsl
dec
jns
mov
dec
xchg
fsts
test
or
out
add
mov
jns
pop
psrlq
rcrl
dec
aad
pop
mov
ret
sbb
lret
xchg
jne
adc
loope
dec
pop
adc
jp
lcall
add
push
xchg
xchg
hlt
addr16
push
ror
push
test
sbb
mov
dec
iret
or
pop
call
jae
fisttpll
mov
inc
or
movsb
adc
loope
xchg
es
or
nop
push
xchg
or
rcl
insl
sbb
lcall
lock
pop
int3
adcl
dec
or
lcall
sti
adc
xchg
fstpl
sahf
push
testl
mov
xchg
out
stc
push
xlat
or
push
dec
xchg
sbb
fsqrt
xlat
adc
outsb
dec
mov
push
adc
mov
pushf
dec
add
mov
push
rcrb
pop
push
or
sbb
dec
loope
or
pop
test
adc
in
mov
jl
xlat
xor
xchg
push
fs
mov
push
and
rcr
ret
jbe
lcall
push
mov
arpl
push
or
adc
loope
popl
rcrb
push
inc
push
fwait
pop
inc
jo
aam
push
xor
add
insb
fadds
aam
out
mov
mov
push
xchg
jns
push
jns
adc
out
aam
stos
push
cmpb
push
fcomp
cmovnp
mov
push
or
fmul
push
sti
push
cli
sbb
loop
adc
clc
and
xlat
pop
jne
dec
leave
ds
ror
test
adc
push
cwtl
gs
dec
xchg
dec
or
shll
sbb
and
adc
or
icebp
jge
dec
adc
enter
and
xchg
xchg
xorl
ja
jg
lcall
lret
loopne
fstpl
inc
or
cwtl
in
push
push
jge
dec
in
push
adc
cwtl
dec
dec
xchg
fcoms
dec
push
mov
push
inc
hlt
push
adc
push
add
or
shll
xchg
adc
cmp
sub
cmp
fmuls
aaa
jge
or
pop
dec
cltd
rorl
or
mov
push
mov
pushf
mov
in
or
loope
in
rcll
xchg
not
dec
ljmp
adc
push
mov
lret
daa
pop
add
cwtl
test
fs
or
dec
test
mov
pop
or
jecxz
lret
push
nop
push
mov
dec
push
push
push
je
cltd
mulps
xchg
insl
stc
cltd
inc
xchg
lcall
push
inc
push
mov
push
dec
xchg
xchg
or
xchg
mov
in
jmp
adc
xor
lods
adc
loope
dec
cltd
in
dec
push
movsl
inc
jne
leave
inc
push
rclb
enter
enter
add
lret
jae
mov
mov
xchg
dec
imul
jmp
adcl
dec
movsb
bswap
inc
loope
fists
scas
lods
das
test
pop
negl
ret
jle
adc
loop
loop
insl
push
push
or
jg
fstl
pop
inc
int3
xchg
sti
adc
pop
xor
shll
xchg
mov
pop
fisttps
iret
loop
popl
imul
mov
insb
push
je
pop
stc
sbb
jne
dec
rorb
xlat
cltd
loope
cmc
xor
fcmove
jno
iret
adc
pop
push
push
xchg
enter
push
rclb
pop
adc
les
nop
rcrl
cltd
jge
push
push
xchg
rorl
push
sub
lods
xor
dec
xchg
mov
xor
wrmsr
hlt
xor
add
xchg
scas
and
dec
popl
repnz
adc
icebp
int
cmc
hlt
rorb
fimull
outsb
push
call
sbb
mov
jg
and
leave
lret
or
mov
xchg
xchg
pop
and
loope
dec
jo
and
rcr
push
dec
adc
loope
clc
loop
push
ret
test
xchg
jne
mov
mov
or
dec
push
pop
insl
xchg
mov
mov
xchg
or
xchg
adc
push
xchg
adc
adc
fistps
shl
shll
inc
in
roll
pop
xlat
shll
jmp
leave
dec
push
inc
imul
test
bswap
cmpl
push
xor
cltd
aam
add
mov
mov
shr
pop
xor
fmul
dec
pop
adc
push
dec
xchg
sahf
dec
mov
lods
sahf
or
dec
lods
sbb
ljmp
and
push
jl
or
dec
sarb
lock
adc
push
les
shll
xlat
out
dec
cmc
adc
shl
test
mov
je
pusha
mov
add
adc
or
mov
rcrb
adc
test
adc
sahf
std
rcrl
sub
jo
push
inc
jecxz
loope
push
stos
leave
gs
nop
mov
sub
fcomip
sub
mov
push
dec
add
mov
and
sbb
cmp
xchg
jne
adc
ja
lock
cmpsb
mov
lea
cmp
fisubl
sbb
mov
lock
mov
adc
mov
or
jnp
or
push
sbb
icebp
cltd
dec
xlat
int
inc
pop
push
or
imul
nop
or
adc
or
iret
inc
stc
or
mov
or
mov
lods
es
jne
push
mov
js
mov
adcl
or
fxch
int3
or
loopne
fcoms
pop
inc
ret
jnp
jp
and
pminsw
jne
loopne
dec
pop
outsl
stos
mov
rcl
ljmp
jmp
cmp
ret
xlat
dec
test
xchg
rcrl
lds
push
clc
dec
sbb
adc
inc
addr16
sbb
xchg
push
mov
push
adc
mov
pop
push
iret
mov
lea
subl
push
dec
pop
sti
sbb
or
push
jns
inc
xor
repnz
mov
or
int3
sub
push
out
lret
or
or
cwtl
in
mov
movl
sub
xlat
lcall
push
xor
dec
lods
enter
mov
loope
or
pushf
rorb
or
dec
cwtl
xchg
mov
loopne
movsb
out
enter
add
dec
pop
xchg
jmp
adc
test
adc
rcll
add
mov
rorl
lret
sbb
mov
dec
sbb
sub
or
les
xchg
jns
push
fnstenv
pop
cwtl
lret
xchg
fsubrs
loop
movups
mov
int3
jg
aad
push
ret
dec
push
adc
pop
push
mov
mov
nop
push
shr
fistl
ss
push
fmuls
int3
sbb
pop
fmuls
mov
call
cwtl
adc
scas
xor
or
cmpsb
mov
iret
sbb
or
push
xchg
pusha
xchg
in
cltd
dec
orb
fisttpll
mov
and
pop
out
aad
rorl
rclb
enter
mov
mov
lock
stos
es
lea
dec
jns
sbb
jecxz
enter
nop
jle
mov
xchg
or
vphaddwq
andb
fidivl
sarl
subl
cwtl
mov
push
inc
dec
dec
movsb
test
dec
jns
adc
xchg
icebp
mov
mov
sbb
dec
add
insl
sbbl
inc
sub
jmp
xchg
push
sub
rorl
mov
cmpsl
popw
mov
or
add
push
dec
mov
lds
mov
xor
fs
rol
fmul
movsb
xchg
xchg
cmpsb
fs
adc
test
shll
xlat
sbb
cmpsb
push
inc
jg
lahf
mov
xchg
sub
sarl
sub
push
test
fldenv
jg
in
outsb
insb
mov
pop
lahf
jb
push
or
iret
dec
lahf
dec
int3
pushf
xchg
push
xchg
push
push
jns
pop
mov
outsb
aaa
fwait
outsb
xlat
push
xchg
setae
pop
sbb
fimull
push
movsb
mov
mov
sbb
or
push
xchg
test
push
fbstp
cli
and
insb
hlt
fcmovu
pop
push
mov
lea
add
int3
or
mov
inc
loop
ror
and
xchg
popf
cld
test
push
mov
dec
pop
lahf
fcomps
iret
or
xlat
adc
mov
shlb
or
dec
push
loop
bound
push
sub
push
mov
lea
push
inc
push
stos
push
mov
aam
pop
movsb
rcll
inc
jge
mov
rolb
mov
pop
ror
push
or
inc
pushf
int3
push
or
leave
push
es
std
jle
xchg
cmp
adc
adc
lea
sarl
or
add
xchg
stos
mov
out
xchg
cs
pop
jp
adc
push
adc
inc
fisttpl
mov
inc
dec
mov
test
popa
jle
enter
push
and
pop
idivb
rol
shrb
push
lods
incb
rcl
xchg
inc
push
loopne
jmp
sbb
push
xchg
xchg
imul
xchg
dec
adc
lcall
cmc
mov
add
pop
jle
enter
cltd
or
lcall
sbb
cltd
or
pop
jne
pop
dec
add
dec
inc
adc
or
cwtl
fcomps
xchg
enter
rorl
aam
adc
inc
shlb
out
lret
pop
xor
xchg
adc
in
inc
lret
dec
cltd
push
repnz
lods
fstps
push
nop
pop
pop
loopne
sub
and
push
ljmp
or
cmc
sbb
xchg
sbb
dec
enter
and
push
xchg
or
scas
fdivrl
imul
les
jg
push
inc
movsl
mov
xchg
adc
push
sbb
mov
push
movsl
cld
adc
mov
shrl
jne
push
mov
ja
xchg
and
xchg
mov
xchg
sub
add
enter
fwait
jle
nop
mov
outsl
and
mov
and
xchg
dec
pop
jmp
xchg
push
add
xchg
mov
adc
inc
cmpsb
or
aam
dec
loopne
ret
add
xchg
mov
xor
inc
or
test
cltd
dec
imul
popf
in
or
aam
jle
mov
dec
pop
lcall
loopne
and
pop
mov
add
pop
inc
arpl
xchg
dec
xchg
mov
dec
mov
push
push
mov
push
enter
mov
rolb
pop
and
dec
rol
lods
icebp
es
pop
popf
jnp
rorl
mov
xchg
adc
ja
fisttpll
sbb
inc
jecxz
adc
lret
or
scas
adc
ja
data16
push
or
xchg
push
mov
je
dec
orb
or
push
in
insb
xchg
or
push
enter
mov
pop
jnp
adc
pop
pop
pop
rol
ljmp
ja
xchg
xor
xchg
inc
lods
dec
dec
popf
lods
xchg
jns
push
dec
loopne
gs
rcll
fisttpl
arpl
lret
jb
rcr
xlat
enter
int
test
insl
cmovg
cld
or
je
sti
fisttpll
adc
xchg
adc
inc
pop
sbb
push
mov
inc
cmp
fidivl
rclb
dec
mov
ds
mov
mov
les
dec
ret
or
in
xor
cltd
sub
adc
das
mov
dec
push
mov
cli
push
push
push
rcrl
pop
fimull
gs
dec
dec
enter
ror
mov
movsl
and
push
xchg
dec
push
or
wbinvd
or
xchg
jmp
push
pushf
sbb
xchg
leave
add
mov
in
addr16
cld
xchg
or
push
or
adc
xchg
push
lret
adc
dec
dec
lcall
test
bndldx
ret
ja
xchg
adc
push
fldl
xchg
push
dec
rcl
jbe
dec
addr16
jecxz
pop
xchg
xor
mov
or
mov
enter
mov
push
dec
xor
ficoml
insb
push
xchg
xchg
xlat
pop
sbb
push
inc
aas
xchg
mov
inc
stos
mov
lock
jecxz
lcall
mov
xchg
or
adc
pop
mov
pop
ret
inc
mov
mov
pop
mov
shrl
lret
or
cld
fs
leave
rorl
mov
or
adc
fcmovu
insb
xlat
sub
or
pop
mov
dec
xchg
push
aam
push
dec
rcrl
ficoms
or
iret
cwtl
outsl
xchg
and
lret
cltd
inc
jge
loop
lret
and
mov
adc
hlt
pop
mov
mov
push
push
mov
mov
xchg
rcl
push
sahf
or
mov
scas
mov
sbb
in
add
push
and
sarl
xor
xor
fcom
add
jle
popf
push
jg
cmpsb
mov
cld
jmp
notb
sbb
sahf
scas
ljmp
or
iret
imul
jns
jg
xchg
xchg
lods
movsb
xchg
mov
fidivl
rorl
add
data16
and
pop
or
mov
adc
push
xchg
int3
xchg
dec
icebp
lahf
adc
fimull
scas
xchg
cmp
push
pop
push
lret
fisubl
dec
rcl
int
adc
addb
sahf
out
enter
or
or
shr
iret
stos
mov
sahf
inc
lock
loope
fcomps
jecxz
push
mov
pop
shr
jge
dec
cmpsb
dec
stos
sti
icebp
jmp
xor
pop
call
xchg
and
mov
and
inc
fisttps
xchg
shrb
lds
pop
dec
mov
xor
push
xchg
mov
mov
adc
icebp
int
or
sahf
push
inc
dec
sub
jnp
xor
rcrl
adc
cwtl
push
or
and
or
add
push
mov
and
adc
mov
leave
push
rorb
xchg
mov
push
rsm
test
loop
inc
arpl
adc
imul
push
or
pop
push
cwtl
dec
jp
and
dec
and
xchg
mov
cltd
dec
cli
lret
pushf
pop
and
iret
mov
sub
sub
aam
push
sub
nop
jl
fimuls
ja
call
push
aam
je
stos
hlt
mov
inc
inc
fimull
loope
or
rolb
adc
setns
test
or
iret
inc
push
pop
adc
and
lcall
lea
push
lret
jge
dec
adc
push
push
adc
mov
or
movsl
dec
cld
lea
push
jle
or
rorb
jns
pop
or
xchg
aam
inc
push
pop
fcmovnbe
in
mov
push
mov
xchg
pop
dec
mov
lock
fisttps
sub
xchg
or
iret
insl
and
push
adc
ljmp
outsb
or
andl
mov
pushf
adc
or
add
sub
or
in
dec
push
mov
inc
aad
fcoms
loop
nop
and
jg
dec
test
dec
sbb
push
xchg
mov
shrb
xchg
cmpsb
cwtl
xchg
out
push
call
arpl
int3
cmp
adc
aam
fcmovbe
push
leave
push
cmp
fstl
xchg
add
lock
or
pop
and
ja
mov
sahf
mov
leave
test
cwtl
movups
call
and
lret
icebp
adc
int3
sbbl
iret
lods
adc
inc
js
push
or
add
dec
push
and
xor
fcmovnu
pop
ss
rorb
adc
cld
cmp
into
push
or
adc
mov
rolb
ljmp
test
adc
fcomps
mov
clc
pusha
mov
xchg
mov
out
pop
rcll
add
dec
cltd
mov
daa
pop
or
cs
jp
or
mov
movsb
jp
push
aam
add
jle
sbb
loope
int3
adc
pop
mov
daa
xchg
pop
pop
cltd
mov
adc
push
in
push
sti
jno
adc
adc
pop
pushf
or
pop
xchg
loope
rorl
adc
shrl
jg
cmp
jnp
fldl
addr16
shll
pop
push
add
adc
push
mov
das
rclb
adc
xor
loope
mov
and
pop
and
add
outsb
pop
rcrl
xlat
or
jecxz
adc
scas
in
push
push
out
ljmp
pop
cltd
xchg
lods
xchg
dec
pusha
pop
ffree
cwtl
inc
or
insb
adc
xchg
xlat
cmp
inc
fsubs
decl
fwait
jge
dec
cmp
mov
jb
mov
int3
iret
dec
push
jp
frstor
fs
adc
jle
xchg
leave
dec
les
mov
adc
nop
or
push
in
loop
sbb
std
add
push
push
or
dec
sbb
and
sarb
pop
clc
inc
inc
mov
push
jecxz
aam
cmp
test
aaa
xchg
inc
les
pop
push
mov
push
cwtl
insb
inc
fisttps
or
jecxz
ficoml
xchg
lret
xchg
insl
push
pop
adc
fcoms
push
int3
cwtl
push
fcoms
mov
cmp
dec
dec
mov
loope
rorl
mov
fstl
dec
cltd
xlat
dec
pushf
int3
mov
mov
leave
cmp
loop
loop
movsb
xchg
lret
push
cwtl
or
dec
fwait
jns
or
out
shlb
ljmp
jmp
arpl
rcrl
dec
jl
inc
ret
es
daa
test
enter
mov
arpl
leave
out
adc
mov
sub
movsl
out
dec
sbb
test
or
cmc
mov
xlat
adc
movl
loop
arpl
push
nop
fmul
inc
jmp
int
and
loope
pop
xor
push
je
repz
dec
test
rol
push
arpl
and
pop
jo
sti
fbld
push
push
cwtl
hlt
pushf
dec
lret
jb
int
mov
int3
xchg
dec
addl
push
dec
xchg
dec
rolb
mov
outsl
sbb
addr16
dec
fsts
ror
jnp
mov
ss
sahf
bts
push
and
pop
rcr
iret
push
lea
push
jbe
and
gs
push
nop
xchg
mov
adc
je
mov
leave
push
push
add
mov
leave
data16
dec
dec
xchg
or
adc
divb
or
jns
into
mov
cltd
and
cmp
addl
xchg
addb
mov
or
cmpsb
pop
pop
cltd
push
push
adc
xor
xchg
testl
jmp
jle
sbb
xor
pop
mov
sahf
ds
pop
push
push
mov
sbb
repz
cwtl
sub
test
hlt
xor
add
or
inc
add
cwtl
xchg
dec
shll
inc
sbb
stos
repz
push
xchg
jbe
push
lret
loope
dec
push
cwtl
cli
test
daa
unpcklps
xchg
rclb
mov
xchg
fwait
cltd
stos
out
lea
or
addr16
lahf
xchg
and
cmpsl
or
inc
sbb
ret
jns
popa
xchg
adc
xor
int3
and
lret
push
dec
aaa
and
dec
lea
sbb
adc
jle
mov
jmp
adc
loop
pop
xchg
push
scas
mov
jae
mov
mov
push
cltd
mov
jnp
cli
loope
adc
psllw
mov
sbb
pop
mov
movsl
insb
xchg
int3
xchg
shlb
cwtl
pop
dec
adc
frstor
imul
cmpsl
adc
fisttps
fs
xchg
nop
push
mov
mov
loope
dec
sbb
dec
fwait
push
pop
mov
inc
adc
lret
mov
jle
xchg
inc
fiaddl
rcll
pop
pop
adc
fimull
or
adc
ret
mov
aaa
test
push
xchg
fidivl
mov
mov
enter
xlat
jmp
loopne
movsb
out
or
jbe
xchg
pop
push
pop
jl
scas
mov
mov
mov
sub
or
dec
and
test
adc
adc
inc
popf
adc
mov
aam
or
insb
enter
dec
rclb
mov
rorl
mov
mov
xchg
push
add
pop
lods
or
ljmp
push
xchg
iret
push
adc
cmpsl
lea
dec
or
cwtl
and
adc
arpl
or
arpl
adc
push
and
push
sbb
or
out
cwtl
xlat
ficoml
jne
dec
shl
jns
lock
mov
test
add
int3
lret
test
xchg
push
cmp
or
or
pushf
mov
fwait
sub
jp
loop
lret
cltd
xchg
rcrb
lcall
sbb
xchg
movsl
xchg
sbb
push
jge
xchg
sbbl
xchg
repnz
mov
shrl
pop
les
das
adc
and
jns
ss
sub
popf
imul
out
pop
rclb
repnz
dec
enter
sub
pop
or
mov
dec
jnp
int3
jecxz
push
iret
and
fcom
insl
cli
or
push
xchg
call
sbb
cli
pop
cwtl
push
jl
and
enter
sub
inc
bound
mov
inc
xchg
or
sbb
cmp
pop
mov
dec
movsl
push
int3
push
rorb
or
pop
mov
dec
xchg
xchg
xchg
nop
imul
and
xchg
dec
mov
fucom
fmuls
or
cwtl
dec
dec
lea
xchg
lock
lods
push
xchg
xchg
nop
and
dec
cwtl
xchg
leave
xchg
loop
sarl
mov
sahf
in
enter
xchg
xchg
cmp
push
scas
xor
adc
enter
int3
jp
xchg
lret
outsl
xor
inc
adc
xchg
scas
xchg
xchg
or
arpl
push
push
leave
and
dec
shl
lret
sbb
jg
cld
xchg
aam
int3
pop
mov
and
xor
movsl
ljmp
xchg
push
jp
sub
clc
pop
fld
into
leave
orb
adc
sbb
int3
adc
xchg
das
bswap
aam
push
mov
inc
pop
lods
mov
in
jo
adc
cmp
arpl
or
mov
outsl
jnp
fcomps
outsl
lahf
into
or
xchg
dec
sarl
push
push
mov
cltd
push
cmc
ror
adc
or
shlb
add
rolb
mov
clc
fcmove
imul
push
sub
push
xchg
jmp
fsubs
nop
dec
xchg
enter
leave
push
jecxz
push
ret
xor
in
sub
inc
inc
and
mov
aam
aaa
dec
adc
dec
enter
pop
or
pushf
mov
pop
jle
arpl
fdivs
push
ja
dec
cwtl
cltd
adc
out
mov
xchg
cwtl
bswap
test
insl
or
and
dec
xchg
mov
repnz
or
inc
stos
test
mov
dec
jns
mov
lock
iret
inc
pop
lret
popl
daa
cli
jo
scas
psrld
dec
cs
push
push
test
push
add
pop
popf
fcoml
or
unpckhps
sarl
gs
mov
or
aam
and
cwtl
xchg
mov
ret
pop
arpl
or
adc
inc
leave
int3
cmp
pop
xlat
push
xor
imul
mov
push
rorb
inc
fcom
push
lret
dec
rol
adc
jl
adc
mov
sbb
sub
cmp
dec
aam
and
push
push
inc
mov
push
dec
mov
pop
inc
jmp
and
loop
push
and
adc
lcall
loop
dec
jecxz
push
jo
sbb
int3
dec
nop
xlat
movsb
push
aam
xchg
lret
xor
add
dec
mov
xchg
imul
or
xor
add
inc
addr16
lock
cmp
push
dec
push
and
and
xorb
ja
leave
mov
mov
jns
in
or
iret
xchg
lret
aad
orb
jg
dec
in
jns
cmp
lret
movsb
cmp
sbb
cwtl
imul
push
mov
xchg
outsl
pushf
mov
ret
dec
pop
dec
xchg
popa
leave
iret
or
push
mov
ret
std
cltd
fmuls
dec
push
xchg
and
pop
lret
xchg
ficoml
iret
shrb
stc
fstps
dec
js
xor
mov
jns
lds
stos
mov
xchg
fsts
or
lds
cmp
dec
xchg
mov
lcall
or
and
xchg
adc
dec
aam
movsl
inc
add
lock
or
int3
pop
dec
cld
out
fs
repz
repnz
insl
jge
xchg
xchg
outsl
cmp
dec
push
dec
pop
inc
lds
push
dec
pop
xchg
jg
rorl
or
lea
dec
sbb
jle
adc
rclb
sbb
mov
sahf
xchg
xchg
mov
pop
xchg
xchg
ds
adc
mov
jne
push
cwtl
push
sub
mov
mov
rorb
mov
and
adc
enter
jno
xchg
cltd
adcl
dec
rorb
rorl
adc
sub
xchg
cltd
xchg
adc
rcrb
and
shrb
iret
adc
in
cmp
out
xor
push
sar
mov
js
adc
pushf
insl
ror
xchg
sbb
push
pop
mov
cltd
fimull
inc
mov
sbb
outsl
fwait
aaa
xchg
dec
std
cs
daa
jb
lahf
aam
sbb
xlat
mov
clc
mov
leave
arpl
rorb
fsubr
aam
idivb
jns
pop
loop
adc
dec
inc
lock
les
push
repz
adcl
push
mov
push
lea
cwtl
int3
in
in
leave
movups
sarl
mov
js
bound
push
mov
sub
xchg
push
mov
pop
das
jnp
or
xor
push
push
mov
fwait
sub
or
push
mov
sbb
add
mov
dec
push
cmpsl
loope
sbb
sbb
pushf
xor
xlat
fimull
test
ds
mov
fadd
push
and
sbb
fisttpll
jne
or
sbb
sbb
jae
loop
cmp
lret
and
pop
jne
or
dec
fmuls
adc
and
mov
test
sbb
mov
or
xchg
cmp
mov
rcl
and
dec
aam
in
std
or
sub
xchg
push
lret
dec
push
popl
stc
in
fstps
add
sbb
mov
cwtl
jmp
movsl
or
xchg
loope
or
or
xchg
xlat
inc
jg
pushf
mov
loopne
sbb
xor
leave
fnstenv
hlt
in
adc
mov
mov
fisttpll
fwait
mov
pop
pop
push
test
ja
push
pop
xor
fisttps
dec
adc
arpl
or
add
and
vaddsubpd
ficompl
cld
jp
jecxz
sbb
cmp
hlt
scas
shrb
movsb
push
iret
lret
push
or
adc
xor
add
popl
xchg
fistl
xor
mov
inc
mov
pop
mov
lcall
test
push
cltd
sbbb
ljmp
mov
and
shl
mov
xchg
push
call
call
sti
pop
fmuls
lea
fidivrl
mov
add
adc
sub
push
xchg
pop
outsl
sbb
xchg
and
iret
dec
lods
sbb
into
dec
jbe
xchg
cmp
jg
mov
inc
sbb
test
dec
dec
test
push
addl
pop
xchg
fyl2xp1
push
sbb
dec
dec
notl
jns
mov
fisttpl
or
arpl
shlb
test
xor
push
movb
sbb
dec
ret
mov
mov
and
lds
aam
addb
inc
jle
dec
mov
fwait
add
loopne
andnps
test
dec
repz
or
dec
xchg
mov
addr16
or
pop
adc
or
or
xchg
movsl
arpl
dec
mov
xchg
rclb
inc
ret
mov
cwtl
ja
jecxz
lret
dec
adc
mov
jle
dec
pop
sbb
enter
dec
test
cmpsb
inc
jnp
hlt
xchg
jecxz
dec
adc
jnp
push
dec
movsb
rclb
ficoms
mov
cld
add
lea
push
pop
sbb
adc
lret
inc
es
adc
xchg
push
sub
mov
insb
adc
lret
leave
cmc
and
push
or
test
add
adc
cmpsl
xorl
iret
sbb
pop
xchg
and
fstps
dec
dec
out
jl
or
adc
cs
mov
pop
rol
les
or
insl
movsb
dec
mov
xor
xor
lods
ja
xchg
hlt
inc
iret
adc
and
or
hlt
jae
dec
imul
or
mov
xchg
mov
out
or
or
adc
push
xchg
cwtl
cmc
rcrb
dec
or
rcr
jo
cmp
xlat
adc
ljmpw
rorl
mov
or
adc
xchg
dec
ret
mov
sbb
movsl
imul
xchg
test
pop
jo
icebp
cmpsl
inc
push
xorl
or
repz
pop
inc
loop
rol
mov
sbb
fwait
ja
mov
arpl
fsubr
inc
or
popf
pop
mov
xchg
xchg
enter
popf
jns
movsb
dec
mov
xor
and
xchg
or
jne
enter
arpl
pop
adc
ret
add
or
push
push
loop
mov
aaa
mov
push
cltd
fsts
aam
inc
lea
adc
mov
cltd
movsb
lods
pop
mov
pop
jne
dec
push
push
fldenv
les
shrl
ficoml
imul
aam
mov
push
ret
and
pop
ficomps
xchg
pop
cltd
rcrl
push
and
push
fistpl
clc
push
adc
nop
mov
ds
push
inc
sbb
mov
xchg
adc
cltd
jg
cmp
push
daa
pop
mov
push
or
movl
jle
icebp
lods
cs
dec
or
push
mov
loopne
in
insl
dec
pop
add
adc
insl
ret
push
mov
push
jmp
jne
aam
fdivs
test
mov
adc
shl
ficoms
scas
loop
xchg
push
sahf
movl
dec
mov
cwtl
push
xlat
push
push
sbb
mov
and
mov
aam
inc
add
das
cwtl
xchg
rorl
lds
xchg
push
jg
cmp
adc
cltd
repz
cli
lds
and
xchg
fistpl
sbb
mov
aam
out
mov
xor
dec
jg
loope
adc
mov
pop
mov
cmp
jae
adc
pop
dec
dec
push
imul
xor
lret
mov
rorl
cmp
mov
xchg
ret
movsl
mov
pop
xchg
dec
aas
xchg
mov
or
cwtl
xchg
pop
adc
jb
inc
xchg
jecxz
dec
adc
lret
jno
mov
mov
int3
in
in
jnp
pop
pushf
mov
shll
dec
mov
jle
insl
adc
jne
dec
adc
ds
jle
insl
dec
xchg
jmp
xchg
dec
dec
clc
add
fcompl
push
pop
insl
stc
dec
pop
stos
pop
outsb
adc
rclb
shl
setp
xor
pop
loopne
mov
mov
push
jbe
pushf
or
adc
dec
lods
aam
lcall
xlat
enter
pop
lret
xchg
rcrl
cltd
int3
inc
push
push
push
and
xchg
pop
mov
push
outsl
ror
dec
shll
aam
xchg
or
dec
push
push
push
cmpsb
jo
push
pop
sti
pop
sbb
addr16
cltd
xor
mov
out
mov
sub
add
cmp
mov
ret
push
cs
dec
pop
insl
fimuls
cmpsl
imul
clc
mov
aam
cmp
enter
jge
push
mov
fisttpl
pop
lret
mov
jp
push
push
sub
stc
pop
mov
push
push
fwait
xchg
cltd
pop
xchg
jb
arpl
sbb
pop
iret
jne
or
inc
mov
dec
dec
mov
add
lods
pop
add
jmp
sbb
mov
pop
pop
dec
xchg
xlat
cltd
xchg
pop
jns
inc
dec
jg
test
aad
lods
cli
shrd
jmp
and
fstl
nop
aam
mulb
push
xchg
frstor
jne
int3
pop
fld
mov
lea
jl
mov
or
out
imul
dec
fisttpl
mov
lret
in
push
adc
cltd
inc
jno
test
mov
pop
adc
testb
mov
fmuls
aam
ficoml
xchg
dec
push
test
cld
pop
lea
addr16
subl
in
movsl
lcall
arpl
stc
cmpsl
or
xor
mov
stos
jno
or
loope
pop
lea
jg
cmpl
inc
pop
or
lods
loope
movsl
pop
dec
loopne
or
mov
test
lds
xchg
inc
sahf
push
iret
or
push
pop
mov
inc
pop
adc
fistps
ljmp
lods
lods
insl
or
push
inc
jne
inc
dec
cli
ret
xchg
ficoms
in
adc
xchg
pmulhw
rcrb
movsb
jae
jbe
fsts
loope
xchg
pop
push
ror
hlt
or
hlt
mov
dec
dec
sub
add
xor
addr16
sbb
sbb
cmp
lahf
or
cwtl
push
xchg
mov
lods
hlt
imul
gs
xlat
xchg
push
cld
jnp
shll
adc
loop
nop
loope
and
xchg
gs
push
rcll
leave
imul
cli
xchg
mov
jecxz
adc
in
loope
pop
mov
jg
mov
mov
cwtl
aam
cmpsb
lret
leave
out
xchg
or
pop
xor
mov
xchg
jo
sub
les
xchg
arpl
lods
and
outsl
xchg
popl
repnz
sbb
int3
mov
adc
and
push
mov
inc
pop
xchg
xchg
push
popf
addb
jno
pop
jns
jg
sbb
sbb
push
mov
dec
mov
add
or
mov
pop
ja
mov
pop
push
scas
push
pop
xchg
and
add
jnp
dec
adc
mov
xchg
adc
je
test
dec
adc
push
xchg
xchg
xchg
adc
xchg
rcll
lahf
xchg
or
int3
bound
test
mov
adc
aam
gs
cld
dec
xchg
push
in
imul
cmp
xchg
cmp
mov
or
iret
fidivl
pop
inc
pop
sub
add
mov
das
rorb
mov
loopne
dec
inc
pop
xchg
mov
sbb
dec
loop
sub
aam
out
pop
xchg
iret
pop
testl
pop
adc
int3
mov
mov
leave
add
adc
or
xor
mov
push
dec
push
adc
dec
adc
dec
jb
or
xchg
inc
sub
mov
cmp
in
mov
imul
loope
lret
inc
loopne
loop
push
ret
loope
mov
or
cmp
cmp
push
push
push
ret
enter
mov
out
inc
push
lret
cltd
ficompl
mov
iret
aam
movsb
push
mov
jne
or
or
mov
sarl
xchg
adc
xor
add
xlat
mov
xchg
rcr
nop
inc
push
dec
lret
cltd
add
xchg
or
imul
addr16
sahf
rcll
adc
aam
cltd
mov
mov
enter
xchg
xchg
mov
fsts
in
cmp
adc
hlt
jne
mov
lods
inc
ret
stc
dec
pop
jecxz
dec
mov
adc
mov
aas
jecxz
push
push
add
fdivrs
arpl
pop
mov
add
adc
les
mov
inc
jecxz
dec
aas
and
out
lods
inc
addr16
mov
call
mov
fisttpll
mov
pop
sti
flds
push
dec
dec
cmpsb
xchg
jl
mov
dec
mov
lcall
push
add
dec
or
push
mov
loop
int3
test
loopne
jle
imul
cmp
cmp
pop
inc
sub
cmp
xchg
push
or
pushf
ss
adc
add
adc
mov
push
xchg
jne
or
loope
iret
fstps
sbb
push
or
dec
mov
repz
adc
loopne
gs
fcmove
sbb
pop
push
rcr
adc
xchg
xchg
lret
xor
mov
mov
or
fisttps
xchg
int
das
dec
clc
sbbl
or
pop
jo
in
adc
push
push
mov
push
or
push
or
push
sbb
loope
stos
mov
and
xchg
dec
pushf
insb
pop
test
std
hlt
aam
enter
addl
rcrl
dec
andl
adc
dec
sbb
push
xchg
pop
nop
pop
cltd
pop
stc
cmp
xchg
push
mov
int3
mov
push
sbb
sahf
or
dec
cld
pop
lcall
adcl
jnp
or
inc
push
push
xchg
mov
mov
inc
or
je
inc
cmc
pop
std
mov
aam
andnps
fisubrl
in
enter
inc
or
lods
test
andb
test
test
jns
sub
xchg
test
enter
nop
lret
xchg
or
loopne
shll
sub
adc
jns
sub
jle
cwtl
jecxz
pop
mov
shlb
ja
dec
in
xchg
mov
aam
xor
dec
xlat
or
cmp
fisubl
mov
fs
or
jb
int3
sub
pushf
push
add
adc
data16
fistl
pop
shlb
adc
push
fstl
imul
fsubs
or
jo
sbb
hlt
orb
cmpsl
adc
xor
sbb
push
sbb
sti
cltd
mov
loope
xchg
inc
xchg
mov
dec
adc
lods
sbb
mov
fs
rorb
cwtl
inc
cmp
sete
mov
xchg
push
or
ret
sbbl
movsl
sbb
mov
lods
imul
mov
xchg
push
pop
mov
rorb
xchg
or
push
pop
out
jnp
add
push
xchg
lret
adc
scas
fcoms
in
shr
jge
popf
in
xlat
mov
dec
sbbl
pop
push
cmc
mov
aas
xchg
mov
ret
prefetcht1
dec
xor
cmpsl
mov
jns
pop
dec
cmp
sbbl
imul
push
inc
xor
mov
imul
pop
nop
push
mov
mov
loop
push
aam
mov
inc
das
addr16
dec
out
in
arpl
loope
mov
hlt
xor
imul
insb
enter
fstl
shlb
pop
sbb
dec
jns
imul
mov
xlat
and
and
xchg
mov
pop
stos
push
mov
stc
leave
jecxz
push
cmc
push
mov
pop
mov
jecxz
sbb
enter
or
outsl
sbb
cltd
dec
mov
pop
fs
test
aam
adc
pop
insl
rorb
jbe
pushf
sbb
push
ja
pop
and
pop
dec
fwait
stos
dec
and
dec
adc
push
inc
mov
mov
or
loope
dec
retw
ret
mov
pushf
push
hlt
mov
insl
cli
or
dec
iret
dec
pop
or
push
push
adc
lcall
xchg
add
xchg
xor
test
jmp
pop
lahf
sbb
shl
or
push
jno
adc
sbb
cltd
mov
mov
inc
ja
jns
cld
arpl
icebp
fsts
adc
dec
in
xchg
push
enter
pop
jns
fcoml
xchg
push
or
vpmacssdql
fsubs
push
mov
pushf
xchg
or
shlb
dec
mov
xchg
into
push
inc
jp
rclb
lahf
cmp
xchg
xchg
rorb
pop
dec
mov
push
addr16
push
dec
xchg
mov
xchg
lret
jb
mov
dec
hlt
cltd
lock
xor
fisttps
push
arpl
push
fimull
cmp
and
aaa
or
orl
push
dec
or
adc
cltd
add
adcl
mov
shll
imul
xchg
or
notb
adc
mov
jge
push
mov
mov
push
dec
dec
push
push
dec
xor
movsb
rclb
lock
aam
add
clc
inc
jo
xor
imul
cld
repz
sbb
sub
cltd
jg
xchg
push
int
mov
dec
dec
cmovs
rorl
and
rclb
jae
pop
cwtl
xchg
lret
pop
fs
inc
xorps
les
mov
rclb
int3
xchg
push
pop
and
cltd
mov
int3
out
sub
loopne
loop
xchg
inc
leave
aam
shrl
shlb
inc
mov
xchg
je
paddsw
inc
push
je,pt
hlt
mov
arpl
sti
rol
test
cwtl
daa
xchg
call
add
dec
push
daa
in
aam
adc
pushf
pop
fcomps
out
or
dec
insb
dec
xchg
fwait
pop
lret
xor
iret
imul
sub
lret
pop
add
push
std
or
adc
enter
push
push
or
lcall
leave
pushf
mov
mov
jo
adc
cs
loopne
and
mov
pop
add
dec
fcmovb
cli
shlb
test
jecxz
inc
dec
std
xchg
rorb
push
roll
dec
loop,pt
data16
pop
mov
mov
xchg
outsl
inc
nop
jns
fcmovne
or
or
dec
pop
in
push
push
sbb
insl
rclb
push
rcll
loopne
pop
cwtl
mov
cwtl
arpl
dec
adc
sub
dec
test
mov
stos
dec
push
fstpl
dec
cmpsb
jnp
jns
mov
jo
xchg
inc
jnp
pop
xchg
jo
dec
lret
dec
sti
or
sbb
add
xchg
or
ljmp
enter
mov
movsb
aam
inc
aad
rorl
xchg
mov
enter
mov
push
arpl
xchg
movsb
jle
jmp
hlt
or
dec
imul
aam
dec
inc
dec
adc
xchg
mov
mov
rorb
mov
lea
jge
lret
nop
sub
enter
inc
pop
inc
jl
sbb
pop
or
popa
dec
mov
pop
rorb
xchg
xchg
or
pop
ds
cmp
adc
iret
mov
clc
and
lret
int3
dec
mov
pop
jo
xor
push
dec
rorl
ja
xchg
adc
int3
mov
push
nop
movsb
pop
xchg
shl
test
push
pop
xchg
and
cltd
lret
stc
gs
push
push
adc
outsb
push
mov
out
jns
jns
pushf
dec
push
arpl
shl
aam
sub
mov
mov
jle
jg
jg
dec
mov
cltd
push
or
dec
lret
dec
and
stos
xor
pop
push
ja
data16
jg
and
or
mov
jg
gs
xchg
xchg
cltd
lret
mov
pop
or
mov
orb
out
adc
adc
dec
cwtl
je
adc
in
mov
xor
cwtl
lock
lret
adc
xchg
jmp
adc
enter
dec
push
dec
push
imul
mov
pop
nop
add
mov
enter
in
lret
arpl
aad
push
dec
push
mov
int3
arpl
jne
or
push
imul
or
roll
lock
cld
mov
adc
lret
xchg
add
push
push
adcl
and
push
fldenv
out
adc
dec
xchg
xchg
add
ljmp
dec
push
mov
push
aam
jne
dec
push
dec
pop
enter
push
jge
push
push
xchg
iret
pop
adc
push
xchg
fidivl
cwtl
dec
push
mov
jmp
nop
out
or
shr
adc
push
stos
pop
js
xchg
ljmp
push
fimull
loope
inc
xchg
andb
push
hlt
xchg
es
stc
or
lahf
repnz
rol
mov
push
or
pop
fs
mov
pop
cmp
aam
das
mov
and
and
or
sub
push
rolb
mov
lods
dec
mov
and
push
adc
cmpsl
movsb
sti
pop
push
roll
iret
mov
ss
push
mov
fwait
cltd
mov
xchg
xchg
arpl
mov
fstpt
scas
dec
mov
int
mov
jle
rcll
fldl
sbb
sbb
cmp
iret
loope
leave
inc
dec
test
xlat
out
mov
sbb
in
push
xchg
dec
lret
xchg
addb
inc
xchg
fmuls
pop
or
inc
push
lods
jg
mov
sbb
mov
rol
xchg
jle
push
jle
mov
shll
or
xchg
inc
or
lret
and
ja
xchg
xor
rorb
lret
dec
xchg
push
adc
xchg
inc
mov
mov
filds
loopne
fdivrs
dec
ficoml
pop
jl
fst
pop
dec
jmp
lea
dec
sbb
xor
cltd
mov
fcom
xchg
adc
add
add
xchg
insl
pop
dec
xchg
adc
push
aam
nop
mov
push
xchg
popa
ret
in
enter
sbb
lret
pop
jbe
fstl
pop
dec
inc
jecxz
lret
and
jp
and
loop
pop
add
sbb
or
stos
loope
xadd
push
stc
adc
mov
pushf
adc
dec
jae
dec
aam
insb
push
cmp
pop
lcall
ficoml
add
mov
jae
rclb
push
cmpsb
pop
fbld
imul
or
pop
out
and
fsts
mov
daa
jo
fisttps
gs
adc
xchg
jle
push
mov
cmp
and
sub
mov
add
fs
and
jmp
pop
mov
insl
mov
test
adc
pushf
cs
xchg
dec
ror
xchg
aaa
iret
leave
push
and
cmp
ja
sbb
push
mov
mov
xor
or
pop
add
pop
movsb
xchg
mov
out
in
movsl
in
push
lret
dec
imul
pop
repnz
add
aad
or
or
inc
in
stos
sbb
in
lcall
sti
cwtl
xchg
push
or
or
and
lods
iret
add
enter
or
jle
cltd
setae
pop
push
dec
mov
or
mov
jp
fisttpl
jge
xor
jmp
jne
int3
popa
scas
adcb
mov
ljmp
or
xchg
adc
and
push
shrl
or
nop
int3
arpl
dec
xchg
adc
adc
xlat
mov
sbb
inc
addr16
setl
mov
lcall
pop
adc
pop
push
dec
int3
fsubrs
pop
dec
mov
adcl
jne
cwtl
leave
insb
push
xchg
enter
push
mov
xchg
or
adc
add
sub
or
inc
jno
cld
cmc
xchg
fs
and
pop
iret
lret
aam
adc
xchg
into
xchg
push
fisttps
pop
pushf
ret
push
jmp
rcrb
or
xchg
dec
pop
adc
xchg
out
inc
adc
std
sbbl
pop
int3
push
push
in
dec
outsl
dec
or
or
and
fimull
xchg
insl
or
rcl
jbe
aad
outsl
fs
mov
imul
push
and
dec
push
nop
leave
enter
xchg
ss
or
lret
ljmp
jg
mov
and
push
adc
addr16
inc
jg
pop
pop
int3
dec
mov
push
pop
pop
adc
dec
add
or
jne
lret
iret
mov
sbb
subl
out
xor
dec
clc
jnp
push
rorb
lea
dec
mov
push
adc
jg
mov
push
imul
dec
xchg
jg
lock
jno
enter
orl
pop
rcll
outsl
pop
or
xchg
xchg
or
push
aam
xchg
add
dec
lret
test
or
push
xchg
push
push
dec
out
lea
add
inc
pop
mov
loop
iret
shl
lahf
cmp
and
mov
or
lock
jg
push
dec
imul
xlat
mov
inc
xchg
sbbl
cmpsb
mov
xchg
cli
lret
ljmp
dec
jne
mov
ja
sbb
pop
mov
adc
mov
inc
mov
mov
dec
int3
loope
lea
mov
sarb
test
dec
adc
mov
mov
jae
lcall
jecxz
push
shll
mov
lret
and
cli
and
in
xchg
sbb
dec
lret
pop
adc
bound
push
gs
push
dec
int3
mov
xchg
adc
clc
inc
dec
mov
wbinvd
cmp
iret
pop
pop
out
sub
adc
fsts
fidivl
or
xchg
nop
pop
inc
pop
dec
push
sub
cltd
cmc
mov
jno
xchg
int3
xchg
pop
push
xchg
call
pop
loopne
mov
pop
mov
pushf
push
add
iret
int
push
mov
jbe
lcall
jecxz
xchg
fcmove
fs
mov
lret
aam
mov
adc
aam
lcall
or
dec
rcl
call
lock
loopne
jge
ja
cwtl
or
test
jb
lret
push
cli
jmp
hlt
mov
pop
shll
sbb
pop
ficoml
pop
nop
xchg
lds
push
mov
xchg
test
or
xchg
add
add
pop
xchg
loop
push
dec
or
xor
cwtl
dec
mov
mov
pop
leave
nop
pop
imul
and
sub
xchg
mov
data16
xlat
push
pop
dec
sti
lret
gs
jbe
aam
xchg
js
pop
iret
loopne
mov
or
jle
pop
inc
cmp
and
inc
jl
hlt
sub
ficompl
rcrb
jge
les
dec
mov
lret
dec
and
out
data16
adc
push
mov
sahf
shll
enter
push
mov
adc
xor
test
and
ret
fsts
setl
pop
lcall
push
sub
jge
or
ds
jmp
sbb
push
mov
push
test
int3
nop
rcl
adc
outsb
and
lcall
shl
fsub
inc
mov
pop
push
xchg
cwtl
add
adc
in
rcl
leave
cltd
rcrb
jo
push
jmp
sbb
xchg
incb
dec
xchg
or
sbb
outsb
flds
mov
cmp
sbb
enter
leave
jecxz
push
cwtl
adc
cmp
or
mov
in
mov
xor
test
std
mov
andnps
jg
js
loopne
dec
fisttps
inc
ret
push
mov
arpl
cltd
push
hlt
push
mov
aaa
push
xchg
mov
and
dec
push
enter
pop
fxch
out
jb
adc
popl
mov
fists
mov
push
clc
adc
addr16
mov
xchg
cmc
shl
push
icebp
dec
call
xchg
push
pop
test
adc
adc
movsb
loopne
aam
sbb
pop
dec
pop
arpl
xor
inc
xchg
mov
push
dec
pop
ja
adc
push
addr16
sahf
in
or
dec
ficoml
call
lret
add
pop
push
rclb
cltd
leave
add
adc
push
cwtl
push
testl
rcll
mov
rorb
es
mov
addr16
adc
out
lcall
push
jg
out
pop
pop
sbb
fsubrs
xchg
dec
cltd
adc
or
push
cwtl
loopne
xchg
mov
fildl
fistpl
cmp
xchg
lea
vxorps
push
shrb
imul
mov
sub
xor
push
test
orl
loop
nop
mov
arpl
and
loope
push
fcomps
dec
call
adc
leave
std
and
rcrl
imul
pop
ja
test
push
xchg
jns
xchg
mov
out
dec
mov
xchg
out
frstor
ret
or
nop
lcall
lea
mov
lcall
xchg
pop
or
cmp
jle
xor
pop
mov
mov
ret
adc
sbb
push
popf
xchg
pop
inc
imul
dec
lret
pop
pop
sub
and
push
pop
cld
inc
rorl
lock
pop
fsubrp
mov
xchg
popf
adc
sbb
inc
adc
dec
shll
add
jae
int3
cs
ds
imul
or
sub
mov
enter
loop
push
adc
pushf
cwtl
sub
adc
inc
int3
cwtl
popl
aad
dec
gs
iret
jbe
pop
decl
and
ret
dec
push
lret
fdivrs
add
adc
push
movsb
mov
jno
cld
jmp
xor
or
and
xchg
cmp
or
outsl
pop
loop
mov
push
scas
and
mov
xchg
pop
or
icebp
push
dec
rorl
shll
aam
notb
xor
jne
fs
test
hlt
stos
add
jle
sbb
dec
pop
cs
push
adc
rcll
call
outsb
push
mov
cwtl
dec
fiaddl
xchg
xchg
mov
lret
add
xchg
or
mov
nop
xchg
pop
pop
insb
sbb
addb
adc
mov
add
lea
cmpsl
mov
xchg
addr16
dec
or
out
fldenv
push
mov
into
or
xchg
jg
stos
pop
mov
in
hlt
jns
hlt
cmp
sbb
xchg
test
hlt
xchg
cs
lods
cmc
or
adc
or
mov
enter
and
arpl
arpl
repnz
dec
xchg
mov
mov
adc
and
mov
adc
push
xchg
mov
nop
or
enter
xchg
cli
pop
orl
xchg
les
push
cmpsb
xchg
stos
mov
int3
jp
cmp
imul
xorl
rorl
jg
xlat
xchg
mov
movl
fisubl
dec
pop
int
add
invd
inc
mov
push
dec
pop
repz
mov
lcall
out
push
adc
fsts
jl
pushf
shll
and
arpl
jle
rclb
push
or
sub
into
and
dec
icebp
ret
fwait
cwtl
cltd
mov
xchg
mov
xchg
fdivrs
loope
leave
push
mov
adc
lret
add
xchg
test
pop
aam
es
dec
push
jne
dec
push
rorb
mov
nop
push
ja
cmp
push
es
jne
adc
sbb
insl
je
xchg
pop
roll
nop
test
inc
popa
int3
xlat
cltd
jg
cmpsl
cltd
lea
adc
fs
mov
jnp
sbb
js
mov
andl
xchg
push
imul
leave
fisttps
cmpps
xchg
push
inc
inc
xchg
pop
jmp
outsl
test
in
or
inc
adc
movsl
pop
gs
push
or
lret
cwtl
ja
lea
or
or
adc
adc
test
lret
xchg
jle
xorl
fs
mov
aam
les
xchg
cltd
icebp
mov
and
mov
shlb
adc
or
pminub
push
cs
adcb
add
adc
push
push
dec
cli
xor
fcomip
stc
xor
pushl
xchg
in
xchg
jns
cmp
or
cmp
fisubl
fmuls
mov
push
cld
or
push
mov
cmpl
mov
push
roll
enter
lea
xchg
and
or
xchg
push
or
push
rcl
in
dec
pop
xchg
pop
mov
or
call
aas
dec
push
inc
mov
xchg
cmpb
or
push
imul
inc
push
lret
fmuls
iretw
lock
lds
pop
insb
lcall
adc
xchg
rolb
push
rol
mov
push
imul
add
arpl
rcrb
mov
cltd
pop
add
pop
nop
dec
in
call
push
sbb
loopne
pop
mov
insl
add
jns
or
push
pop
jle
or
xchg
fdivl
andb
adc
nop
ja
daa
jmp
jnp
xchg
pop
mov
push
xchg
loope
xlat
xchg
leave
or
sahf
mov
sub
aam
dec
lret
dec
push
cwtl
or
pop
loop
dec
xor
mov
mov
sub
hlt
popa
xor
dec
roll
adc
push
pop
pop
cltd
push
imul
pop
push
dec
adc
unpcklps
xchg
push
adc
fisubl
inc
mov
in
pop
sbbl
imul
dec
and
or
or
test
xchg
push
sbb
sbb
jno
and
imul
out
hlt
adc
push
cmp
mov
mov
adcl
or
pop
dec
fadd
xor
in
push
daa
rclb
int3
or
and
push
repz
and
iret
jle
out
loop
shl
lret
or
cltd
pop
pop
push
loop
adc
adc
inc
adc
dec
ljmp
cmc
pop
rorb
lret
push
xchg
push
pop
lret
dec
push
cmp
xchg
fcoms
xchg
or
pop
rorb
xchg
stc
pop
dec
xchg
mov
ja
push
int3
jo
fsts
pop
rclb
dec
test
lock
mov
fdivr
mov
add
iret
pop
sbb
cmp
pop
mov
pop
xchg
or
mov
fstps
mov
lcall
xor
pop
push
mov
push
mov
dec
ja
mov
inc
mov
dec
les
pop
cmp
push
mov
rorl
adc
adc
gs
int3
xor
inc
mov
ficoml
dec
jns
and
iret
pushf
xchg
rcrb
xchg
dec
lret
test
or
inc
jne
pop
push
xchg
push
mov
mov
push
and
pop
fistpl
leave
mov
flds
xor
enter
imul
addr16
pop
push
leave
int3
scas
cmpsl
cmpsl
mov
hlt
test
inc
cmp
repnz
xchg
outsl
fcmovbe
adc
or
adc
push
mov
push
cwtl
shr
setne
sub
ret
in
test
push
pmovmskb
test
mov
push
push
popf
add
sbb
or
jnp
fwait
repz
xchg
outsl
cld
inc
adc
mov
mov
dec
ja
stos
pushf
fcoms
rcll
xchg
dec
or
adc
scas
in
xchg
enter
repz
pop
or
pop
pushl
dec
push
enter
xlat
push
pushf
adc
sbb
pop
xchg
and
sbb
push
and
xchg
mov
and
dec
sti
push
into
jbe
shrb
mov
mov
push
ficoml
call
pop
mov
out
cwtl
xor
mov
scas
xchg
idivb
xchg
pop
movsb
cltd
and
sbb
jae
fs
push
sbb
popf
jbe
jns
pop
push
push
adc
dec
or
lcall
add
leave
pop
shll
or
pushf
xchg
inc
push
xchg
xor
xor
cltd
fstps
add
shr
mov
addr16
sti
xchg
in
adc
nop
push
xchg
jecxz
adc
mov
add
rorl
push
pop
fstps
ljmp
mov
adc
test
lret
adc
int3
adc
je
test
jne
xchg
or
jne
xchg
mov
push
jmp
xor
or
mov
inc
xchg
dec
dec
xor
jmp
jp
cltd
jnp
bound
or
jle
cmp
mov
cld
or
inc
mov
adc
xchg
push
cwtl
int
xchg
dec
les
push
xor
adc
lret
dec
jmp
pop
leave
push
sub
or
nop
lcall
gs
or
dec
fs
iret
bound
jle
push
push
cmc
js
bound
adcl
or
xchg
or
mov
mov
cmp
xchg
out
fsts
lds
jg
clc
arpl
pop
or
loop
enter
xchg
sbb
popa
inc
adc
xor
add
sub
enter
aam
out
out
cmc
xor
std
mov
dec
loope
push
push
inc
les
pop
add
adc
pop
ret
push
iret
and
mov
jge
dec
dec
mov
sbb
movsb
daa
sbb
nop
push
mov
adc
lea
lcall
adc
fnstsw
scas
add
adc
jle
je
xchg
adc
lea
inc
push
xlat
mov
pop
movsl
inc
movsb
sbb
inc
xchg
jp
dec
pop
nop
adc
push
or
cwtl
xchg
mov
adc
dec
ljmp
mov
or
push
pop
mov
insb
xchg
push
xor
movsb
push
lret
rorb
clc
js
mov
xchg
adc
mov
ljmp
push
push
nop
push
outsl
push
adc
into
jp
aad
loopne
or
or
jae
lahf
xchg
pop
or
leave
loopne
loopne
sbb
fildl
xchg
sbb
xchg
lods
xchg
adc
push
subb
movsb
cs
add
adc
xor
insl
xchg
lock
test
pop
leave
xchg
xor
xor
adc
push
fidivrl
fsts
inc
cmc
fistpll
subl
lock
xor
pop
jecxz
mov
in
xchg
mov
push
movsl
or
and
push
call
incl
pushf
rcr
inc
call
or
sahf
mov
adc
gs
stos
xchg
ljmp
fwait
sbb
mov
jae
mov
int3
nop
push
rclb
movsb
mov
jecxz
mov
lret
inc
push
mov
lcall
pop
push
pop
xchg
stos
sub
outsl
mov
lea
jg
and
lret
pop
cmp
push
dec
pop
push
or
mov
enter
shl
js
push
pop
cltd
mov
ds
add
adc
pushf
or
xchg
sub
pushf
es
inc
sbb
jge
push
lcall
arpl
pop
and
xlat
cwtl
nop
xchg
cmp
rcrl
dec
dec
lcall
test
xchg
mov
loopne
rclb
xchg
lea
or
sbb
mov
and
test
and
enter
jo
dec
push
sub
lods
push
cld
sar
cmp
imul
push
or
pop
or
ja
mov
fsubrs
pop
xor
dec
push
les
dec
test
in
mov
mov
xchg
ret
dec
inc
mov
negl
sub
fwait
mov
in
dec
xor
jb
test
lea
xchg
outsl
pushf
test
dec
loope
push
mov
icebp
enter
pop
ljmp
shl
jnp
mov
orl
lret
sbb
insb
sbb
sahf
cltd
dec
and
and
leave
xchg
push
jne
dec
movsl
mov
sbb
dec
inc
insb
inc
loopne
fsts
mov
adc
dec
jns
iret
pop
in
negl
mov
lret
push
adc
fwait
int3
mov
push
inc
lock
pop
pushl
pop
sbb
push
lea
andb
inc
cmovg
pop
movsl
and
mov
je
je
xchg
ljmp
and
xchg
cltd
dec
jg
mov
sbb
jg
inc
or
pop
jg
inc
mov
mov
aam
adc
daa
popf
inc
xchg
ja
in
xchg
xlat
pop
sbb
adc
dec
leave
pop
pop
cltd
dec
or
push
fwait
sbb
push
or
xchg
je
fstps
dec
rcll
xchg
cltd
mov
or
pop
adc
mov
or
outsl
adc
dec
dec
or
dec
mov
sbb
mov
in
xor
push
je
test
mov
jae
or
aaa
dec
jecxz
leave
sbb
or
pop
fs
dec
dec
mov
test
push
movups
adc
mov
xor
and
clc
and
mov
dec
dec
rcrl
sahf
xchg
les
jge
dec
sbb
xchg
jns
out
xor
leave
dec
jecxz
rorl
sbb
push
adc
fstl
jbe
or
adc
test
cmovge
mov
arpl
inc
loope
std
cmp
push
push
dec
jle
mov
mov
sbb
sbb
dec
adc
jecxz
mov
das
push
pop
adc
imul
xlat
dec
pop
cld
xchg
rcll
xchg
pop
int3
or
outsb
cltd
ds
and
mov
dec
cmpl
arpl
lret
test
int3
mov
and
mov
testb
insl
hlt
lret
xlat
mov
data16
inc
mov
mov
push
rol
popa
in
mov
or
push
mov
mov
mov
lock
or
dec
faddl
mov
adc
mov
push
jecxz
lret
inc
pop
and
push
pop
pop
xchg
fisttps
or
mov
sbb
orl
loope
flds
imul
pop
adc
dec
lods
jne
dec
dec
inc
adc
pushf
lret
fisttps
jne
frstor
push
leave
dec
inc
jb
loope
push
mov
mov
arpl
lods
loope
sbb
push
sbb
pushf
pop
xchg
xor
xchg
push
fimull
xchg
enter
lds
inc
push
nop
in
hlt
loop
jecxz
add
lret
mov
mov
cld
push
lret
enter
enter
cmp
and
imul
xchg
mov
push
pop
movsb
xchg
or
out
xchg
push
dec
enter
xchg
iret
cltd
nop
sbb
rcr
or
mov
xorl
loop
xchg
enter
or
ret
and
js
fisttpll
xchg
lret
xor
jge
jns
lds
mov
mov
ja
or
lcall
push
aas
mov
or
xor
lretw
cltd
cmp
cmpsl
pop
notl
loop
adc
dec
adc
loope
push
and
cmp
add
push
out
mov
outsb
cmc
xor
nop
push
jg
jg
insb
xchg
jns
pop
pop
push
dec
push
movsb
ror
xchg
dec
push
in
or
rclb
enter
fs
xchg
in
or
jo
jecxz
enter
cwtl
push
rclb
shrl
jno
xchg
xchg
pop
adc
cltd
xchg
mov
lahf
cwtl
pop
adc
adc
nop
xchg
int3
mov
cmovae
push
les
adc
jg
jmp
dec
adc
popf
rcr
or
jb
xchg
cltd
lahf
dec
push
jle
mov
mov
and
or
mov
pop
dec
rorl
pop
mov
mov
xor
and
inc
fimull
xchg
cltd
sahf
enter
dec
mov
fcoms
inc
test
nop
arpl
rorl
pop
xchg
xchg
jecxz
push
xchg
mov
mov
cmpl
arpl
sbb
adc
mov
dec
adc
loope
or
ss
hlt
push
shrl
push
xchg
ja
rcr
test
dec
adc
pop
xchg
pop
lcall
push
and
pop
adc
leave
pop
daa
loopne
insl
and
addr16
je
rorl
xor
fcmovnu
jns
adc
xchg
pop
and
enter
jecxz
or
jb
push
mov
or
xor
pop
xchg
ljmp
or
push
dec
jle
orl
jne
jno
and
adc
mov
dec
mov
je
loope
xchg
movsl
lret
out
and
mov
or
xchg
adc
test
adc
push
ljmp
ret
cmp
mov
push
or
mov
loope
movsb
daa
dec
mov
or
adc
rclb
push
jbe
xchg
inc
stc
dec
test
or
sbb
and
lret
rcll
pop
or
mov
xchg
fiaddl
cmpl
dec
adc
pop
in
in
cwtl
pop
dec
in
xchg
xchg
rolb
aad
jno
pop
jge
xchg
shlb
mov
pop
push
test
xor
mov
rcll
jle
out
pop
adc
push
pop
dec
jge
dec
mov
xchg
xchg
xor
cmp
fs
pop
ret
icebp
xchg
or
mov
roll
dec
lods
ret
xor
mov
add
mov
rclb
cltd
dec
or
push
dec
nop
mov
jg
cld
iret
push
orl
xlat
lea
pop
push
jmp
stos
in
jl
jle
ficoml
out
mov
leave
jns
jns
pop
mov
ret
cmp
mov
jecxz
ror
pop
or
or
mov
push
pushf
rorl
xchg
daa
daa
xchg
jns
in
or
movsl
pop
aam
xchg
dec
jge,pt
leave
dec
xchg
loope
dec
xchg
or
stc
jecxz
inc
mov
ficoml
xchg
inc
dec
nop
push
fstl
enter
popl
inc
jno
sbb
mov
aam
push
test
int3
or
dec
mov
shrb
sbb
fs
or
cmp
scas
or
mov
lods
popf
or
xchg
xchg
adc
mov
pop
push
fs
sbb
nop
pop
scas
out
psrad
xchg
xchg
xchg
push
out
insl
pop
push
mov
adc
mov
xchg
test
mov
or
adc
stos
in
cwtl
jb
or
inc
jne
pop
rorb
push
rcrb
push
push
movups
fcoms
mov
imul
nop
pop
cltd
pop
mov
xor
iret
mov
mov
jg
or
push
push
inc
xor
cwtl
xor
jge
lret
sbb
sbb
addl
leave
mov
lock
inc
testl
push
xchg
aam
rcll
leave
push
lods
jge
push
jbe
xchg
sahf
or
or
jnp
jb
pop
mov
push
rcrb
jg
and
xlat
push
nop
lea
out
dec
add
adc
icebp
test
push
pop
insl
insl
jns
ficompl
arpl
dec
dec
inc
jo
and
insb
push
jno
adc
xchg
in
mov
repz
inc
movsb
jecxz
ret
in
movsb
iretw
add
sbb
nop
push
xchg
dec
push
xchg
push
jb
sbb
fists
pop
outsb
inc
push
or
outsl
ror
pushf
or
adc
cwtl
jecxz
adc
in
xchg
lret
aaa
cwtl
popl
inc
mov
mov
shrb
push
sbb
dec
loope
loop
test
lcall
adc
adc
cltd
outsl
loope
xchg
or
inc
adc
add
rorb
mov
in
dec
shll
ret
not
adc
gs
adc
push
mov
xchg
push
jo
xor
jge
inc
rcr
push
pop
mov
aam
sub
push
iret
push
inc
xchg
mov
push
or
or
or
pusha
sbb
xchg
dec
jecxz
pop
shll
sub
sbb
shlb
xchg
cmc
mov
mov
arpl
xchg
repnz
call
loop
adc
and
std
sti
jne
xchg
inc
jb
pop
adc
lret
popf
data16
mov
fcoms
adc
xchg
psrad
loope
xchg
loopne
ret
dec
jns
mov
cmp
pop
push
fcomps
call
dec
mov
dec
or
pop
fisubl
pop
mov
dec
push
loopne
leave
dec
and
int3
icebp
push
or
adc
dec
js
dec
dec
sub
xlat
lret
arpl
or
push
nop
jmp
sub
test
dec
dec
sbb
fcmovnu
xchg
sbb
mov
jle
and
insb
push
leave
mov
mov
mov
gs
push
sbb
fcoms
insl
pop
pop
pop
push
xchg
shlb
pushf
inc
jb
mov
sbb
push
rol
data16
orl
sbb
int
mov
xchg
push
lcall
aam
int3
inc
mov
or
ret
or
sub
jnp
inc
or
fcom
ficompl
dec
outsb
sahf
mov
push
mul
adc
iret
pop
movsl
and
movl
or
adc
jo
movsb
adcl
in
fnstsw
xchg
jns
je
jne
adc
iret
or
aad
cwtl
or
or
out
mov
push
adc
dec
shrl
and
or
jle
fcoms
lret
dec
ja
dec
rorb
adc
adc
adc
mov
dec
push
xor
out
cli
mov
cli
and
dec
push
cltd
sbb
dec
ja
and
cld
xchg
add
xchg
sub
insl
lahf
rorl
ret
imul
push
xor
jge
int3
adc
push
out
or
xor
jo
mov
and
sbb
les
mov
lret
xchg
lea
mov
inc
dec
or
sbb
push
ja
fistps
shll
jne
inc
push
rorb
and
mov
dec
int3
and
xchg
dec
int3
xchg
xor
or
cmp
popf
int3
inc
insl
rorl
mov
dec
dec
nop
push
cli
ret
fiadds
xchg
and
sub
mov
sbb
shl
leave
enter
adc
shrb
in
lcall
xchg
mov
xchg
xlat
dec
lds
adc
test
int3
dec
jns
jg
enter
xchg
xlat
pslld
sarb
or
jo,pt
and
dec
or
int
sub
cwtl
popl
xchg
arpl
dec
lret
dec
sbb
rcl
dec
sbb
push
push
push
dec
lods
test
pop
pop
loope
dec
push
push
out
in
push
int3
dec
das
dec
jle
or
push
outsl
add
or
imul
mov
movsb
sbbb
push
xchg
dec
fsubrs
outsb
dec
jg
xchg
sbb
movsl
pushf
xchg
push
fwait
test
adc
mov
dec
xor
test
addb
add
xlat
xchg
jns
movsl
ljmp
add
fcomp
insl
les
sub
lea
dec
dec
xchg
jmp
inc
mov
cmp
adc
inc
inc
icebp
out
test
cltd
pop
int3
lret
repz
xchg
lods
fcompl
shll
rcll
dec
fadds
ret
and
xchg
cmp
or
or
hlt
xchg
pcmpeqd
xchg
adc
popa
push
xchg
pushf
push
ficomps
out
or
shlb
adc
dec
mov
or
adc
sysexit
fistpl
and
xchg
dec
pusha
out
int3
ljmp
ja
sbb
or
push
loope
jecxz
dec
out
dec
addb
xchg
mov
mov
cmc
sar
xchg
and
jle
std
mov
rcll
adc
rcrb
sbb
adc
inc
sub
adc
repnz
fs
adc
lcall
adc
xchg
dec
ret
outsl
dec
sbb
sbb
loop
adc
call
sub
mov
mov
push
rolb
fsubrs
sub
jns
cltd
addr16
mov
and
push
out
addb
fnstenv
xchg
lea
enter
movups
call
xchg
dec
push
mov
nop
adc
and
mov
pop
mov
jno
or
adc
xchg
aad
push
out
int
ss
xchg
xchg
sbb
mov
psubusw
pop
push
dec
push
and
sbb
inc
shr
movsb
nop
rorl
adc
push
arpl
dec
pop
mov
xchg
and
out
sub
push
in
adc
lret
out
mov
shr
and
fmuls
hlt
fisttpl
out
or
rorl
pop
cwtl
push
pop
nop
dec
in
gs
or
mov
push
out
imul
psadbw
mov
clc
or
ficompl
insb
shr
xcrypt-ctr
cmpsl
pop
pop
je
mov
push
pop
adc
xor
push
mov
adc
dec
movsb
xchg
xlat
dec
int3
mov
push
xor
mov
loopne
ja
leave
adc
popf
pop
jg
daa
cmpsb
mov
jle
mov
push
push
or
adc
test
xor
rorl
adc
out
call
push
mov
dec
int3
xchg
or
pop
loop
push
gs
nop
fmuls
push
or
jbe
mov
xchg
xchg
les
dec
cwtl
sarb
mov
fstl
push
out
or
cmpsl
push
mov
dec
mov
repnz
push
fisubl
pop
rorb
jns
inc
jno
sub
dec
mov
mov
mov
xchg
xchg
jne
push
mov
test
xchg
or
xchg
pop
lcall
int3
fdivs
mov
and
xchg
test
icebp
jnp
stos
sbb
or
xor
inc
shl
and
mov
sub
lods
dec
clc
mov
enter
dec
sarb
push
push
shll
lret
enter
leave
or
push
cwtl
xchg
xchg
mov
and
and
inc
pop
push
or
data16
shlb
test
mov
mov
nop
outsb
int
fmul
mov
pop
xchg
mov
aad
mov
push
fisubrl
fs
sub
push
pop
decl
inc
pop
adc
jl
call
adc
fldenv
pop
call
xchg
sub
out
adc
daa
fcom
sbb
mov
adc
and
push
cltd
jp
cltd
jecxz
pop
xchg
xchg
inc
or
mov
xchg
mov
xlat
lret
mov
rcll
or
xchg
cltd
jae
lcall
mov
leave
sub
cmpb
push
mov
push
jg
xchg
mov
or
dec
inc
pushf
inc
cmp
int3
fcmovbe
push
push
movl
and
xlat
inc
loope
push
xlat
and
jg
lret
cmp
xchg
xchg
arpl
xchg
test
iret
lock
push
stos
call
and
push
xchg
and
test
xchg
leave
rolb
and
push
push
xchg
lcall
sbb
dec
pop
push
xchg
jg
jg
adc
movsl
in
dec
ds
push
rcr
outsl
addr16
mov
dec
dec
pop
mov
push
and
cwtl
adc
pop
rclb
ss
repz
xchg
lret
xor
test
xchg
mov
jge
adc
push
mov
mov
loopne
dec
and
push
push
jne
jl
sbb
dec
mov
lret
shll
lods
sbb
jecxz
fsts
loope
lret
pop
sahf
xchg
rorl
or
pop
xchg
fsubr
and
push
scas
movsb
dec
mov
loopne
shl
aaa
mov
cmp
adc
outsl
push
dec
sub
push
sysret
ud2
loopne
in
notb
or
xchg
inc
and
sbb
dec
adc
pushf
cwtl
fcoms
dec
inc
pop
int3
push
pop
stos
add
lcall
fucomp
xchg
hlt
ficoms
daa
xor
add
push
loope
xchg
inc
mov
test
lret
mov
or
popf
test
sbb
dec
dec
add
fisttps
push
shl
and
pop
xchg
inc
xchg
dec
jb
je
jne
iret
pop
adc
xlat
push
int3
call
jle
jge
mov
adc
mov
mov
or
jbe
inc
in
mov
adc
jge
xchg
jge
adc
xorl
dec
rorl
out
fwait
or
mov
push
jne
dec
dec
mov
cmpsl
pop
mov
stc
and
or
rcll
dec
leave
cwtl
arpl
xchg
in
mov
roll
push
adc
adc
mov
dec
lret
lcall
or
mov
lret
dec
mov
push
or
dec
pushf
fs
or
mov
arpl
daa
or
test
mov
jbe
dec
out
in
jns
mov
and
aaa
repnz
daa
nop
sbb
pop
movsl
pop
nopl
adc
push
mov
enter
not
lea
mov
call
mov
jno
or
adc
jb
xchg
adc
loop
dec
mov
and
lret
int3
jle
mov
inc
insl
lret
lret
dec
jl
pop
enter
and
pop
pop
mov
dec
push
repz
imul
adc
or
xchg
fwait
test
xchg
fdivrs
ficompl
loopne
imul
push
jg
dec
push
xchg
adc
pop
out
movsb
inc
dec
push
test
dec
mov
adc
mov
or
data16
and
enter
pop
in
fld
aam
je
insl
rclb
sub
inc
inc
jmp
in
mov
cmpsb
cmp
xchg
lret
pushw
dec
ja
lcall
lods
mov
nop
mov
cmpsl
aam
fsubs
adc
dec
lret
fnstcw
and
dec
sbb
push
adc
dec
mov
xchg
jo
mov
xor
stos
cltd
and
adc
xor
pop
dec
leave
dec
add
push
pop
xchg
jp
filds
fisttpl
into
roll
sbb
xlat
jecxz
xchg
test
popf
sbbb
push
pop
fistps
mov
or
dec
adc
adc
add
push
sbb
pop
jmp
dec
ror
mov
pop
add
mov
mov
fs
iret
push
or
test
nop
or
mov
jo
pop
push
stc
sti
adc
add
pop
jne
push
rcl
xchg
nop
in
dec
mov
sbb
arpl
push
lds
dec
iret
mov
fchs
or
or
rclb
arpl
mov
imul
roll
sbb
std
test
adc
sub
insl
sbbb
or
adc
pop
stos
lds
adc
leave
enter
addr16
pop
stos
fsts
stos
pfrsqrt
out
push
xlat
dec
mov
or
test
push
push
push
outsl
leave
xchg
adc
imul
lock
adc
and
xchg
push
pop
xchg
fisttpll
and
lds
push
data16
gs
leave
or
mov
add
xchg
sbb
cmp
pop
cmp
jg
dec
xchg
add
sub
and
nop
dec
push
pop
xchg
in
jb
ds
pop
add
scas
gs
or
cwtl
jns
sbb
mov
sahf
sbb
push
jecxz
pop
or
xchg
mov
jnp
push
or
pop
mov
mov
add
bound
mov
ret
les
mov
fcoms
xor
cs
shl
in
mov
ror
loopne
sbb
ja
in
cwtl
xchg
pop
call
xor
mov
nop
arpl
and
cmp
jmp
in
iret
sbb
call
int3
push
xchg
xor
sub
cmpsl
mov
and
psrlw
stos
fnstcw
sahf
cmpsb
inc
add
mov
adc
sbb
popf
jbe
cltd
pop
adc
xchg
pop
push
push
push
in
mov
loope
inc
add
inc
adc
dec
inc
cwtl
jge
adc
xchg
inc
dec
push
or
jns
push
dec
lret
ljmp
inc
into
mov
push
push
stos
mov
pop
pop
rorl
and
xchg
dec
out
xchg
or
fiaddl
pushf
push
add
cmpsl
cltd
jnp
adc
imul
adc
or
pop
js
andb
push
ficompl
push
xchg
inc
movsb
adc
inc
out
loopne
jecxz
aam
mov
xchg
jle
enter
mov
xchg
adc
xor
test
push
dec
mov
ficoml
arpl
add
or
xchg
fnstsw
lcall
cmc
adc
jmp
pop
cmovs
ret
cwtl
imul
inc
or
and
movmskps
sahf
adc
adc
jge
or
mov
or
insl
and
xchg
dec
add
pop
push
sub
dec
xchg
cmpsb
pop
leave
and
push
pop
add
mov
xchg
inc
ret
pop
stc
in
xlat
mov
in
ret
gs
push
ficoml
in
pop
push
push
cltd
fldcw
dec
movq
pop
adc
fwait
in
rorb
arpl
addr16
xchg
lds
out
or
iret
push
rorl
pop
and
adc
arpl
movsl
test
jne
movlps
and
leave
xchg
adc
dec
sarb
push
dec
inc
test
adc
mov
ret
arpl
rclb
push
mov
dec
dec
popf
jge
and
mov
or
pop
add
cmp
test
lods
stos
loop
xlat
and
pop
pop
stos
popf
movsl
lret
push
xor
cltd
cli
dec
inc
inc
adc
sbbb
loop
push
repz
and
dec
lret
adc
loopne
ljmp
jle
loope
fsubrs
lds
mov
sarl
jg
xor
or
adc
mov
test
das
pushf
ja
sbb
inc
sbb
movsl
sub
dec
ja
jbe
movsb
xchg
sbb
jne
rcrl
mov
push
xchg
sarl
sbb
push
leave
cmpsb
mov
dec
rclb
adc
adc
or
outsb
je
xchg
push
xor
movsl
xor
sub
xchg
mov
pop
fld
sbb
xchg
adc
lods
in
push
mov
jmp
mov
push
iret
int3
iret
sbbl
aam
xor
dec
dec
dec
push
cmp
push
hlt
cmpsb
xchg
aam
jg
pop
nop
mov
jmp
adc
xchg
xchg
fisubrl
fiaddl
cltd
push
inc
or
lret
lods
int3
iret
xchg
jl
cmp
rcrb
cwtl
test
leave
cmpsb
and
aad
stos
adc
pop
push
lahf
add
add
popl
jnp
sar
pop
dec
adc
add
sub
push
imul
cli
rsqrtps
enter
push
out
xchg
les
jle
fldenv
xlat
sbbl
rolb
rcl
push
int3
lret
ss
jl
aas
pusha
rcl
or
jmp
pop
aad
pop
fsubp
pop
or
addl
dec
xor
jo
and
dec
jmp
out
fcmovb
push
hlt
cwtl
int
rolb
shll
jle
and
icebp
rcrl
mov
test
push
inc
dec
lods
out
xchg
adc
cltd
daa
inc
and
int3
je
cli
fisttpll
aam
lret
push
push
cli
xchg
dec
roll
lea
push
xchg
dec
or
dec
push
push
adc
test
jecxz
ficompl
pop
jle
outsb
inc
inc
int3
xchg
shl
int
xor
emms
add
out
in
lods
pop
cltd
dec
or
xchg
rcrb
dec
inc
dec
pop
xchg
movsl
imul
push
sbb
int3
movsl
jb
sbb
enter
cmp
scas
inc
sbb
shrl
lcall
push
ja
in
mov
lcall
mov
pop
push
xchg
mov
dec
loope
dec
call
sbb
pop
jle
cmpl
dec
jns
pop
adc
xlat
adc
adc
xor
pop
mov
and
or
adc
xor
sbb
jb
jle
push
dec
in
pop
int3
pop
jo
sbb
jle
and
xchg
cltd
je
shlb
ljmp
jle
leave
ss
inc
cwtl
push
in
jo
je
jae
adc
testb
add
leave
sbb
loope
mov
mov
movsb
das
mov
cmp
mov
inc
or
cltd
int3
scas
adcl
sub
sbb
lock
mov
scas
push
sbb
mov
cmp
nop
jns
mov
out
pop
rorb
int3
sbb
adcl
enter
push
xchg
jle
inc
adc
rcll
cmp
lock
or
push
or
or
sbb
and
mov
xchg
bound
adc
fisttpll
or
add
movsb
mov
xor
iret
hlt
mov
mov
adc
pop
push
aam
push
shll
or
xchg
movl
xchg
mov
mov
or
adc
push
sbb
push
pop
fst
je
mov
test
ret
xchg
mov
pop
or
xor
xchg
mov
das
add
sbb
cmpsl
insl
ret
lds
or
sbb
adc
or
test
push
dec
add
dec
cmc
and
mov
les
dec
sub
or
dec
jmp
dec
lock
and
and
mov
aam
xchg
adc
rorl
mov
mov
adc
mov
mov
pop
mov
mov
xchg
subl
push
push
pop
xchg
xchg
mov
xlat
mov
out
leave
inc
aas
pop
push
out
lea
or
aaa
mov
and
outsw
adc
push
test
or
and
cltd
dec
and
add
aad
cwtl
int3
roll
pop
fisttps
ficompl
insb
push
push
sbb
or
dec
sbb
test
mov
notb
ret
push
xchg
addb
jne
nop
push
daa
add
or
sbb
xchg
push
dec
push
lret
enter
mov
enter
mov
arpl
adc
push
fisttpll
mov
andl
stos
leave
and
add
jbe
cmc
popf
das
cld
aam
xchg
adc
sub
es
test
mov
dec
adc
sbb
xchg
push
dec
dec
in
aam
adc
and
dec
sar
push
jle
out
xchg
mov
mov
pop
popa
and
sbb
add
outsl
cmc
mov
jge
pop
and
dec
or
dec
mov
and
xchg
xchg
dec
nop
lahf
mov
mov
push
in
push
push
dec
inc
rcrl
decl
inc
xchg
cwtl
pop
dec
pop
xchg
leave
pop
jno
push
pop
leave
pop
xor
lock
mov
and
jecxz
mov
aam
orl
dec
test
push
arpl
push
dec
xchg
adc
lret
xchg
sub
dec
sbb
push
jmp
cmp
or
add
push
out
fmull
or
jmp
pop
hlt
mov
inc
mov
pop
cltd
mov
mov
testb
les
inc
dec
dec
xor
lcall
bswap
push
or
in
mov
aam
outsb
adc
xchg
push
inc
push
jbe
loop
lret
dec
outsl
or
mov
cltd
out
or
adc
push
inc
cmpsl
mov
repnz
jns
dec
mov
jg
push
push
hlt
jle
xchg
pop
xor
adc
inc
fcmove
jmp
jecxz
adc
je
test
mov
pop
push
outsl
movsl
sub
mov
adc
insl
dec
fwait
jbe
lret
arpl
stos
fldenv
xchg
cltd
rcr
adc
xchg
inc
lret
fiaddl
xor
out
outsb
fxch
ds
pop
dec
iret
cwtl
add
mov
or
pop
sbb
pop
loopne
push
dec
pop
push
sti
ljmp
xchg
push
inc
enter
jl
jae
mov
adc
aam
cmp
and
loopne
and
adc
movsl
add
xchg
inc
les
pop
ret
repz
ss
sbb
test
out
push
aam
push
rclb
mov
rorl
dec
or
into
addr16
lret
and
sub
pop
mov
inc
dec
xchg
adc
mov
test
out
adc
jno
call
add
dec
lret
stc
rcll
xchg
repz
sbb
adc
mov
xchg
rolb
push
add
xlat
pop
pop
loop
pop
outsl
xlat
pop
push
je
inc
adc
push
pop
xor
cmp
push
sbb
lods
dec
enter
iret
xchg
mov
xor
mov
pop
mov
fadds
repz
xchg
jmp
enter
jno
jno
lret
xor
pop
mov
jmp
fistl
les
leave
call
int3
mov
add
push
cs
pop
fnstcw
movsb
xchg
inc
rorb
cltd
out
test
jg
sub
insl
outsb
or
xchg
je
push
arpl
mov
and
in
rcrl
dec
loop
enter
subb
and
or
and
fisttps
dec
imul
push
push
dec
or
int3
rorb
mov
aam
aam
or
inc
fcoms
in
int
ja
and
nop
xchg
push
push
cmpsl
insl
outsl
mov
loop
or
call
xchg
push
xchg
or
movsl
sbb
dec
psubusw
adc
xchg
fiadds
or
inc
push
push
popl
mov
movsb
pop
pushf
xlat
add
push
lea
movsb
dec
or
dec
lret
pop
les
mov
rol
push
adc
jmp
xchg
dec
push
addl
xlat
pop
cwtl
xchg
inc
out
iret
inc
jle
or
rol
add
mov
mov
roll
test
sub
push
sbb
clc
and
rorb
arpl
xchg
pop
xlat
mov
enter
mov
in
rorb
hlt
enter
stos
cmpsb
jle
int3
xlat
aam
leave
gs
inc
push
push
mov
or
cld
jbe
test
mov
or
fcom
dec
adc
xchg
xchg
mov
mov
fwait
push
and
adc
or
loop
xchg
jno
fistl
nop
xchg
pushf
xchg
fimull
xlat
add
in
ror
popl
mov
push
lret
push
imul
dec
inc
pushf
fcoms
sub
rorl
pop
cmpsb
xchg
mov
jg
and
mov
adc
imul
push
inc
add
push
movsl
lock
iret
mov
xchg
subb
push
mov
or
lcall
add
dec
shl
ljmp
pop
jecxz
adc
xor
lret
dec
sub
xchg
add
shr
and
adc
lods
jp
test
mov
xchg
adc
jle
jne
pop
je
push
aam
mov
cmc
lods
js
loopne
jne
pop
rcl
dec
sub
jae
push
lret
shrb
clc
or
das
clc
sbb
cwtl
jle
and
mov
in
fs
or
push
xchg
pop
cmpsl
test
adc
jle
xchg
adc
movsb
mov
push
enter
push
and
mov
inc
pop
and
leave
or
andnps
push
jp
cwtl
movsb
bound
rolb
shrl
add
push
adc
inc
or
loop
sbb
mov
clc
xchg
cltd
jge
movsb
nop
pop
dec
push
adc
loop
dec
push
dec
and
dec
in
add
or
in
sbb
xor
mov
mov
add
adc
mov
xchg
cmp
in
inc
add
ret
xchg
lds
sub
sbb
in
mov
jne
and
and
stos
adc
fidivl
rorb
adc
mov
fstl
cli
arpl
mov
sbb
dec
ljmp
repz
mov
std
push
pop
adc
jo
inc
sub
push
lods
out
adc
stc
arpl
mov
sbb
je
inc
sub
mov
jg
mov
enter
cmc
and
std
mov
movl
add
xchg
pop
clc
lcall
mov
jg
sar
imul
shlb
adc
push
xchg
pop
adc
xchg
mov
imul
adc
push
adc
lock
mov
je
mov
adc
sbbl
rol
cwtl
pop
sbb
mov
cld
scas
aam
lds
jb
or
adc
addr16
lret
shl
dec
jns
and
xchg
adc
or
bnd
xchg
and
and
iret
xchg
insb
push
and
xchg
push
xorb
ret
mov
out
ja
andl
dec
rorl
push
movups
mov
int3
dec
adc
pop
dec
adcl
inc
pushf
jmp
mov
jo
adc
out
lds
cmpsb
es
inc
mov
adc
mov
pop
decl
rorl
fisubs
mov
nop
push
or
pop
mov
mov
add
lea
inc
test
xchg
int3
inc
mov
shr
sub
inc
sbb
imul
outsl
pop
adc
xchg
mov
rcll
jg
data16
cmp
xor
dec
adc
xchg
fs
jg
lahf
inc
dec
leave
push
dec
adc
adc
out
sbbl
dec
rcr
xchg
adc
int
xchg
cmp
int3
cltd
push
push
lret
je
cli
mov
mov
sbb
or
nop
mov
inc
mov
and
jle
add
cmc
or
jns
jns
dec
ja
jg
jns
sbb
push
dec
test
xchg
xor
sbb
cltd
mov
xchg
dec
fcomps
enter
aam
pop
sub
dec
mov
dec
xchg
dec
movsb
hlt
push
adcl
fsts
out
mov
mov
dec
dec
add
arpl
push
push
push
pop
int3
pop
adc
mov
pushf
jb
sti
mov
mov
and
dec
leave
xlat
mov
mov
add
push
dec
in
sbb
shrl
add
push
mov
adc
mov
mov
xchg
orl
xchg
or
enter
xchg
push
push
pop
test
push
pop
cmp
rorb
add
cld
or
push
push
lods
sub
lea
cmp
ja
xchg
pop
jge
cltd
fwait
dec
mov
ljmp
jbe
decl
pop
imul
or
and
aam
fnstsw
cs
dec
mov
movsl
adc
inc
sub
and
pop
sub
jmp
mov
mov
cmc
jge
cmp
push
xchg
dec
dec
sti
lret
outsl
scas
lcall
addr16
dec
mov
fiadds
insb
cltd
jg
ss
mov
xor
ret
arpl
fwait
push
adc
cltd
lds
push
test
push
bound
decl
pop
and
jne
inc
inc
pop
mov
cmp
xchg
test
hlt
mov
call
or
push
adc
push
dec
cltd
lods
ss
rorb
push
in
int3
dec
mov
dec
push
ficoms
pop
loop
mov
mov
xchg
pop
test
or
and
xchg
push
jnp
mov
xlat
xchg
inc
dec
movsb
adc
je
inc
das
mov
fcompl
popf
or
lret
movsb
pushf
push
sbb
in
dec
enter
leave
outsb
xchg
roll
push
out
ljmp
cmc
loopne
and
fwait
push
dec
mov
rcll
add
jg
mov
addr16
jo
ljmp
test
xlat
nop
dec
orl
leave
push
lea
adc
pop
xchg
mov
fs
int3
aam
inc
push
dec
or
cld
xchg
movsb
or
sub
xchg
mov
jbe
push
or
jle
leave
xor
popf
xchg
adc
in
or
cmp
lods
adc
cltd
sbb
adc
les
dec
push
push
adc
push
lret
or
out
push
xchg
shll
mov
aaa
xchg
insb
int3
xlat
fs
enter
in
push
mov
mov
push
push
int3
mov
xchg
dec
xchg
lea
jns
enter
test
xchg
cwtl
fisubl
mov
xchg
adc
jmp
push
fwait
jle
mov
pop
jns
push
mov
sub
hlt
mov
lds
out
pop
push
pop
or
add
push
or
pop
adc
xchg
and
pop
pop
mov
fcomps
pushf
and
rorb
int3
xor
mov
adc
roll
lods
mul
mov
jne
pop
pop
or
bound
lcall
stc
cmp
mov
bnd
aam
cmpsb
fdivrp
jne
dec
xor
dec
push
aam
xchg
fnstsw
push
mov
push
jb
mov
jg
push
or
loop
dec
push
inc
sub
rcrl
cmpsl
cmp
je
mov
test
adc
outsl
pop
popl
adc
push
leave
fcmovb
pop
rorb
repnz
imulb
aam
push
fwait
inc
movsl
pushf
xchg
shl
adc
dec
pop
lret
loopne
jnp
shl
jl
iret
hlt
xlat
int
mov
mov
push
out
test
jb
adc
mov
push
mov
adc
push
movsb
ss
pop
daa
jno
pop
jecxz,pt
pop
pop
test
mov
lea
or
mov
int
push
xchg
cwtl
cs
inc
or
xchg
inc
xchg
dec
push
dec
xchg
and
pop
rorb
xchg
jge
pop
push
icebp
jmp
push
jle
insb
ficoml
out
dec
dec
ds
pop
push
adc
sbb
adc
mov
arpl
or
xchg
adc
imul
cmpsb
imul
mov
fstps
notl
sub
lcall
ja
in
sbb
push
mov
xchg
dec
rorb
and
cmpsl
fdiv
push
fisttpl
sbb
pusha
daa
sbb
out
arpl
mov
ret
es
jo
addr16
xchg
dec
enter
lret
out
lcall
push
dec
and
dec
std
pop
pop
gs
xchg
dec
jns
in
push
dec
push
push
lea
mov
cltd
and
lahf
nop
dec
jle
js
or
stos
xchg
pushf
push
or
pop
mov
xchg
stos
xor
inc
add
rcl
adc
sbb
push
and
xchg
ret
fisubrl
adc
add
arpl
or
xchg
push
rcll
negl
nop
into
cltd
cmpsb
mov
or
aad
mov
loopne
mov
loop
pop
arpl
mov
std
pop
cmpsb
xchg
imul
enter
jnp
pop
dec
or
or
sbb
or
xchg
shrb
aam
pop
push
int3
sbb
dec
mov
sarl
fcoms
int3
or
mov
ficoml
xlat
ret
push
fistl
inc
mov
pop
jge
mov
stos
lret
and
out
ja
and
pop
sbb
fstps
movsb
push
adc
decl
test
pop
mov
push
cmovg
push
lea
or
mov
or
mov
call
fxch
adc
mov
cltd
xchg
nop
aam
dec
insl
dec
and
xor
add
pop
lea
subl
fsts
adc
dec
mov
pop
daa
cmovs
repz
cli
add
push
pop
xchg
adc
fcmovbe
leave
cwtl
mov
adc
mov
sbb
dec
mov
cwtl
or
lds
loopne
xchg
add
jecxz
cmovl
sbb
rclb
xchg
mov
or
and
pop
testb
xchg
fmuls
mov
dec
in
mov
ret
push
jle
cmc
test
dec
dec
pop
push
aam
cmpsb
lea
xchg
enter
xchg
movsl
pop
adc
dec
gs
pop
or
xchg
ret
mov
sarl
push
or
xchg
xchg
pop
push
rolb
adc
mov
sub
dec
sub
adc
push
mov
xchg
jns
mov
xchg
cwtl
pushf
xchg
test
dec
xchg
dec
rorl
inc
or
cmp
fmul
xchg
adc
in
aam
xchg
dec
stos
or
pop
xchg
xchg
or
cmp
mov
leave
arpl
and
hlt
fildl
leave
sub
in
rol
pop
sbb
shll
adc
lret
sahf
adc
dec
push
push
lret
int3
xlat
jecxz,pn
lss
adc
dec
lcall
in
or
push
dec
push
fnop
in
inc
adc
enter
cmc
jb
dec
aas
and
dec
movsl
lcall
push
mov
sbb
movb
and
dec
push
int3
dec
nop
shrb
or
pushf
cwtl
pop
xchg
adc
movsb
and
jns
pop
xor
sbb
insl
test
or
push
xchg
jle
cltd
lds
pop
pop
lret
enter
icebp
add
mov
into
jge
fmuls
jns
push
xchg
cltd
mov
ds
push
jo
push
sarl
sbb
dec
pop
int3
cltd
jo
and
or
hlt
jne
dec
sub
sbb
sarb
jge
push
cwtl
xchg
rcll
das
fistps
dec
mov
rcll
cmovns
aam
ss
dec
mov
push
call
dec
call
inc
shlw
dec
push
push
mov
sbb
adc
arpl
test
adcl
addr16
adc
or
xchg
aaa
pop
outsb
inc
ja
xchg
cltd
xchg
enter
rcrl
mov
xchg
xchg
movsl
loop
or
jecxz
xlat
adc
aad
or
mov
inc
rcll
cmp
or
jo
jno
rcl
dec
or
pop
xchg
push
addr16
fdivrs
pushf
push
xchg
push
and
rcl
xchg
loop
in
pop
xchg
mov
dec
pop
stos
je
mov
xor
xor
arpl
adc
movb
rcrl
dec
adc
pop
pushf
mov
lods
aam
jle,pt
lock
ja
adc
fwait
push
sub
pop
or
mov
xchg
mov
and
nop
fimull
js
cmp
add
push
test
mov
clc
lret
jmp
adc
pop
das
cltd
sbb
lret
fadds
push
hlt
xchg
or
lea
xchg
nop
xchg
push
loop,pt
fadds
dec
xchg
pop
cmp
lods
lea
xchg
jo
rorl
cwtl
dec
lret
jg
push
push
adc
push
mov
testl
mov
dec
xchg
adc
push
mov
das
rol
insl
jb
xchg
xchg
inc
xchg
ja
or
and
adc
dec
inc
or
test
lret
loop
movsb
insl
lret
cmpsb
je
jecxz
xlat
adc
and
pop
icebp
sub
dec
popf
repz
mov
pop
loop
adc
sti
jg
xchg
insl
lcall
adc
xchg
mov
xchg
push
nop
adc
add
adc
jb
pop
in
lods
dec
orl
mov
mov
std
aad
aas
rcll
mov
aam
addr16
fcmovb
jno
and
outsl
dec
mov
lcall
andl
cmp
xchg
pop
jmp
pop
or
jle
mov
and
push
mov
loopne
fists
xor
push
leave
push
add
std
mov
fists
rol
pop
stc
push
pop
add
jle
arpl
xchg
mov
lret
iret
xchg
inc
xchg
pop
xchg
xchg
xchg
icebp
push
mov
jno
int
and
inc
adc
xchg
and
or
mov
dec
inc
inc
loop
xchg
ja
push
mov
pop
cltd
lret
and
rclb
xchg
push
or
fadd
sub
clc
fxch
les
adc
pop
lods
in
mov
mov
adc
xchg
adc
sbb
loop
push
test
or
or
jns
push
adc
dec
xlat
lahf
mov
pop
add
lds
and
adc
aam
xchg
push
dec
lea
or
mov
dec
or
pop
shrl
enter
mov
nop
dec
dec
mov
jg
rclb
or
pop
jle
xchg
lea
test
fadd
cltd
xchg
xchg
hlt
or
jo
and
mov
cwtl
arpl
add
pop
loopne
loop
pop
test
jne
dec
or
pop
dec
inc
ss
and
push
fistpl
jle
sbb
mov
xor
jp
push
inc
dec
mov
or
loope
cltd
es
mov
in
inc
fists
mov
or
push
adc
pop
jns
add
lcall
stc
adc
dec
xchg
pushf
xchg
push
xor
mov
fisubs
xchg
mov
adc
dec
in
cmp
mov
scas
jne
adc
shrl
lea
gs
push
rclb
or
adc
push
or
cmp
in
mov
push
mov
adc
jge
dec
jns
jecxz,pt
adc
stos
lods
or
cmpsl
or
or
scas
or
or
push
gs
pop
fcoms
push
lret
dec
or
or
jo
dec
jmp
dec
dec
mov
dec
nop
mov
push
or
sbb
sbb
push
int
or
hlt
jl
das
fcom
xchg
iret
xchg
sub
lret
rol
fst
push
filds
xor
test
sbb
or
xchg
and
dec
or
xor
rorl
or
dec
cltd
mov
pop
and
aad
rcrl
dec
mov
clc
shll
lods
popf
into
pop
mov
test
dec
push
call
arpl
pop
xchg
pop
daa
push
stos
rclb
sub
nop
jecxz
xchg
shrb
cmpsb
sub
popf
mov
push
cld
jo
dec
or
xchg
dec
or
mov
adc
lret
push
pop
mov
out
mov
adc
xchg
lea
sarl
jmp
pop
or
out
push
loopne
arpl
pushf
xchg
mov
mov
dec
mov
cmpsb
add
or
cltd
scas
jecxz
fsts
sbbb
xchg
loop
aam
pop
adc
cli
test
mov
xlat
leave
stc
inc
pushf
iret
shl
adc
jne
adc
xchg
or
dec
or
mov
pop
test
test
jle
unpcklps
pop
xchg
pop
dec
bswap
fdivrs
adc
push
leave
mov
lret
adc
lcall
lret
xchg
in
dec
rcll
push
dec
sti
movsb
ror
inc
jmp
das
insl
pushf
or
mov
xchg
push
and
or
aas
push
pop
test
enter
mov
pop
dec
adc
ljmp
xor
push
or
insl
lock
shrb
test
push
xchg
jmp
push
movsb
insb
nop
adc
fimull
arpl
push
lods
jne
xchg
sub
ljmp
outsl
sub
adc
adc
adc
insl
push
xlat
icebp
repnz
int3
xchg
pop
mov
or
lret
pop
fdivs
fs
inc
or
pop
jo
mov
sbb
dec
leave
jns
nop
mov
loopne
movsb
cmpsb
iret
xchg
ret
add
or
or
fxch
cltd
dec
mov
pop
pop
popf
pop
add
and
dec
dec
hlt
enter
popa
pop
int3
push
xchg
mov
xchg
push
mov
iret
or
rcrl
push
pop
test
adc
mov
jecxz
sub
and
enter
push
jl
pop
fists
std
fiaddl
cltd
aam
call
dec
cmpl
adc
or
xchg
xchg
hlt
pop
push
int3
pop
jbe
jge
push
xlat
adc
push
adc
xchg
push
jbe
loope
dec
add
mov
ja
inc
mov
inc
push
adc
inc
mov
mov
fistl
mov
leave
add
adc
cmovg
jns
inc
xchg
mov
push
loopne
cwtl
inc
imul
jg
jns
push
dec
call
xlat
stos
mov
push
adc
sub
jle
fld
sbb
sbb
fpatan
icebp
pop
xchg
enter
xchg
rcll
shlb
arpl
xchg
movsb
inc
nop
mov
push
push
les
dec
jbe
dec
or
pop
pop
cmp
pop
enter
daa
and
jmp
inc
xchg
insl
or
cli
inc
cmpsb
mov
adc
mov
hlt
cli
cltd
aam
jg
or
mov
lahf
sub
inc
push
daa
add
loopne
arpl
jno
out
sti
in
aad
jecxz
push
mov
mov
mov
adc
pop
or
sub
cltd
push
dec
rcll
jmpw
sti
pop
nop
loop
adc
mov
push
or
dec
xlat
mov
pop
pop
xchg
cmp
and
jbe
test
cltd
dec
aam
pop
sub
popf
roll
pop
lret
nop
outsb
cltd
xor
and
movsl
mov
rol
scas
lods
loope
shrl
jne
pop
dec
mov
rsqrtps
or
ljmp
or
or
and
out
mov
or
inc
lea
push
xor
dec
leave
stos
iret
inc
jo
mov
adc
cli
xchg
inc
pop
pminub
loope
fcoms
lret
cmp
stos
je
lock
mov
add
fsts
scas
gs
fcoms
shlb
adc
dec
leave
push
adc
and
rcll
pop
jbe
or
cmp
sahf
shlb
push
add
push
ja
outsb
push
push
jp
pop
dec
adc
enter
inc
inc
xchg
push
ds
mov
push
cwtl
dec
pop
movlps
sarb
fsts
pop
adc
inc
sub
jno
or
pushf
mov
mov
xor
call
fwait
xor
sbb
scas
test
mov
test
lret
or
ja
dec
shlb
mov
in
lods
pop
cltd
call
push
xchg
mov
adc
test
mov
pop
fmuls
xchg
and
adc
cmp
cltd
inc
xchg
scas
add
push
outsl
cmpsl
add
jns
xchg
rorl
test
add
dec
test
mov
lret
int3
mov
push
int3
mov
imul
movsb
iret
dec
sbb
fldt
add
int3
and
push
mul
sub
jecxz
sarb
mov
mov
insl
adc
mov
cmp
jl
push
mov
stc
pop
int
imul
dec
xor
sub
inc
pop
push
ljmp
xor
push
int3
mov
pop
and
fimull
psrad
clc
dec
xchg
xchg
rcll
xlat
dec
or
mov
lods
mov
jecxz
fstps
fidivs
loop
aam
dec
jecxz
mov
push
push
sbb
xchg
xchg
imul
pop
xchg
cltd
ret
test
mov
push
push
lea
adc
jge
mov
cmpsl
ret
mov
iret
mov
adc
cltd
dec
shlb
and
pop
sysenter
aam
shll
jb
stos
and
jbe
push
jne
dec
or
arpl
rolb
adc
pop
push
call
repz
jmp
lcall
shlb
pop
cwtl
jbe
and
and
push
xchg
or
rcl
sub
add
shll
and
lret
dec
or
je
pop
xchg
mov
pop
mov
mov
dec
hlt
cwtl
lea
lds
push
jge
push
xchg
dec
jb
cwtl
cmpsb
cltd
sbb
or
fs
cltd
jg
fidivrl
sub
inc
movsb
or
pop
rolb
jne
push
dec
es
mov
inc
das
pop
aaa
xor
mov
cmc
push
ljmp
dec
adc
stc
pop
mov
lret
push
mov
xchg
pop
or
jno
adcl
cwtl
cwtl
adc
fwait
test
mov
movsl
rcrb
dec
cld
and
or
insb
and
jbe
xchg
and
fsubr
test
rorl
mov
or
dec
and
add
orl
xor
xchg
addl
loop
inc
pushf
insl
mov
xchg
jbe
imul
call
repnz
mov
push
xchg
jns
pushf
pop
pop
xor
xor
int
hlt
jbe
mov
out
push
or
xlat
fcmove
jne
rclb
and
mov
push
mov
and
test
rcll
adc
push
cmc
push
jo
sti
dec
addr16
xchg
xchg
out
xlat
fcomps
int
test
leave
negb
push
int3
pop
idiv
and
mov
adc
push
push
loop
ror
cltd
arpl
fs
adc
jns
xchg
xchg
aad
push
push
fisttpll
dec
leave
iret
lock
rcll
out
push
nop
xchg
fstpl
dec
or
or
sbb
jae
add
jnp
mov
sbb
testb
sti
stc
jno
or
rorl
add
dec
mov
enter
jg
adc
and
pop
mov
mov
cmpsl
and
rcll
sbb
xlat
call
nop
rcrl
jle
sbb
mov
adc
fldenv
out
or
repz
mov
out
pop
dec
ss
nop
inc
shll
inc
loope
xchg
jne
xlat
mov
sbb
and
ror
loop
dec
lods
loope
push
mov
xchg
push
lea
fsubs
xchg
jno
mov
ja
cld
add
or
scas
cmc
mull
int3
pop
adc
mov
arpl
adc
mov
jle
imul
ret
sub
xchg
pushf
mov
rorl
or
pop
hlt
or
pop
sahf
pop
mov
leave
pop
xchg
mov
lret
xchg
cld
dec
sbb
push
lock
push
call
pushf
dec
or
push
in
pop
cltd
push
sbb
daa
lea
dec
out
push
add
pop
pop
loop
push
inc
movsl
dec
je
jmp
f2xm1
lahf
xor
dec
shrb
xchg
sti
and
test
mov
pop
arpl
inc
xor
xchg
jle
push
dec
dec
mov
jge
pop
cmp
lldt
hlt
and
sub
popf
movsb
ror
sarb
int3
cmc
repnz
leave
enter
jg
ja
dec
xchg
pop
rclb
addr16
leave
dec
test
pop
inc
and
jl
inc
adc
pop
jle
out
imul
push
fwait
aam
or
xchg
cltd
test
dec
lea
lret
arpl
orl
mov
loop
gs
cwtl
push
or
call
push
ror
adc
out
lahf
es
pop
jg
ds
add
dec
push
cwtl
push
adc
inc
jmp
je
mov
and
mov
lods
ret
test
dec
hlt
sbb
xchg
sub
dec
adcl
mov
out
adc
rcr
or
icebp
inc
int3
xchg
rclb
sub
mov
mov
cltd
dec
adc
xchg
pop
mov
loope
shrl
pop
nop
or
std
pop
fs
mov
xchg
push
fprem1
gs
paddq
pop
xchg
push
dec
iret
or
dec
jnp
lcall
int3
jle
pop
movsl
inc
fists
mov
adc
xchg
push
pushf
dec
dec
jnp
pop
or
fsts
lds
sbb
push
adc
out
cld
arpl
and
lds
stos
sti
xchg
int3
pushf
rcrl
mov
pop
fcomip
sbb
mov
dec
xchg
divb
sbb
cmc
mov
lret
rorb
push
xchg
out
xchg
mov
dec
or
loopne
loopne
lahf
mov
fmul
shl
sub
stos
pop
jno
cltd
xchg
ds
jmp
ds
cmpsl
mov
rolb
insl
aad
dec
sub
rclb
cmp
or
or
insb
and
push
adc
notl
push
cmp
jne
or
dec
adc
iretw
xchg
ret
dec
sub
rol
and
dec
xchg
shl
lcall
mov
xchg
add
mov
cltd
cmpsl
mov
push
insb
push
pushf
adc
and
push
sbb
and
xchg
fcomps
mov
insl
pop
lahf
out
pop
les
mov
emms
lahf
mov
adc
xchg
push
jno
outsl
or
iret
out
add
insl
nop
push
xchg
pop
jno
fsub
xor
xchg
push
loopne
mov
dec
lret
mov
gs
push
pop
adc
lret
mov
dec
xchg
push
jmp
inc
push
sub
aad
test
dec
mov
xchg
or
adc
cmp
hlt
xchg
xchg
jbe
iret
push
inc
dec
mov
loop
enter
fs
push
xchg
xor
add
xchg
push
or
cwtl
cltd
dec
subl
mov
or
lcall
add
jle
xchg
nop
mov
enter
sbb
and
dec
lret
adc
movsl
shlb
inc
dec
and
push
jmp
or
or
inc
mov
push
cmpsb
pop
fs
test
addr16
push
push
cwtl
mov
mov
adc
xchg
sbb
add
dec
or
push
add
dec
dec
outsb
push
sbb
adc
sub
dec
xor
push
cltd
xchg
dec
fmuls
jo
shll
push
or
sbb
jecxz
xchg
adc
xchg
xchg
ret
or
lret
or
mov
mov
mov
call
rcrb
nop
push
lret
fcmovbe
push
aam
dec
int3
xchg
roll
xchg
adc
xor
insl
push
enter
or
mov
add
pop
mov
dec
xchg
dec
fcoms
mov
push
xchg
in
xchg
or
mov
mov
shlb
dec
aam
es
inc
pop
ret
adc
sub
cmc
loop
or
mov
cld
psubusw
add
inc
fmuls
lods
and
jl
push
test
push
xchg
mov
loope
or
cmpxchg
dec
pop
dec
jbe
fs
xchg
push
aaa
or
mov
adc
adc
sbb
push
xlat
adc
fstps
push
mov
shr
ltr
rcrl
andl
ficoms
sub
iret
mov
push
dec
xchg
xchg
dec
ret
insb
add
or
dec
out
int
lea
xchg
cmp
add
pop
jecxz
fstps
mov
inc
push
scas
and
pop
pop
int3
iret
in
push
jle
dec
sbb
nop
jo
push
pop
adc
sbb
dec
imul
push
fcom
std
mov
mov
imul
mov
out
add
repz
or
adc
push
lcall
or
jle
xchg
mov
xchg
jne
pop
dec
adc
and
mov
jecxz
iret
or
mov
inc
ret
push
and
dec
in
pop
adc
dec
sub
je
cmc
jne
push
push
lret
xchg
dec
sub
adc
or
mov
xor
xor
lea
jge
test
xchg
jne
adc
push
push
sbb
icebp
arpl
jg
xchg
pop
nop
push
sub
and
mov
jne
cltd
xchg
or
and
nop
dec
xchg
shr
loopne
sbb
mov
xor
lahf
adc
dec
fnsetpm(287
or
pop
in
push
xor
cmc
pop
mov
arpl
ljmp
mov
push
adc
xchg
rorl
pusha
push
mov
mov
or
jle
dec
iret
in
mov
lods
jecxz
cltd
adc
loop
mov
xchg
in
call
enter
sub
fdivs
iret
shl
xchg
push
xchg
fimull
les
mov
pushf
xchg
push
fwait
fnstcw
push
mov
or
imul
arpl
pop
ret
es
rorl
xlat
mov
ja
pop
xchg
mov
dec
nop
fsts
push
push
xchg
fimull
test
push
mov
loope
push
or
fs
ficoml
dec
mov
in
fistps
adc
loope
or
out
loope
pop
iret
adc
and
mov
icebp
xor
mov
stos
mov
inc
and
nop
mov
adc
hlt
test
mov
cmc
test
ror
rcrl
add
mov
or
arpl
lret
nop
inc
add
push
cwtl
push
loopne
loope
xchg
in
sbb
popf
repz
jg
mov
movq
lea
sbb
int3
dec
inc
sbb
mov
movsl
loop
xchg
jbe
aad
mov
ds
out
push
push
js
mov
jecxz
fmuls
cmpl
dec
neg
pop
mov
aad
je
jns
sbb
xchg
out
or
lea
push
subl
mov
and
rclb
jmp
sub
sub
sub
dec
test
jne
or
cmpsl
popf
stc
inc
pop
pop
push
shrl
dec
lret
fs
and
sbb
dec
adc
pushf
mov
push
sub
push
inc
andb
or
arpl
dec
add
xchg
and
mov
xlat
or
cmp
gs
push
pop
xchg
push
dec
cmc
dec
jecxz
int3
dec
cmp
or
pop
push
and
xchg
jno
or
fldcw
mov
pop
and
cltd
xchg
push
insl
nop
or
lret
call
dec
xchg
inc
fldl
xchg
add
or
xchg
cltd
push
or
push
xchg
ret
arpl
inc
adc
fcoms
ljmp
or
testl
push
xchg
out
push
call
push
inc
mov
call
mov
xchg
das
jbe
iret
xchg
pop
aad
mov
adc
dec
cmpsb
inc
cli
push
pop
inc
jno
xchg
push
test
cltd
int3
inc
cld
mov
jg
ror
pushf
mov
popf
jne
cmc
xchg
dec
dec
adc
dec
iretw
jg
arpl
nop
pop
pop
fcmovnb
pop
les
xchg
dec
adc
push
arpl
add
xchg
mov
sbb
push
xchg
popf
ds
jg
push
inc
adc
dec
into
fistpl
xlat
add
mov
dec
dec
adc
xchg
lret
inc
push
add
cmp
andb
les
push
adc
xchg
mov
mov
and
push
sbb
and
leave
jns
nop
adc
cld
dec
push
push
or
dec
push
adc
leave
or
rorb
mov
push
push
mov
adc
xor
jbe
add
mov
pop
dec
jp
enter
xchg
xchg
or
int
fcompl
imul
jae
xchg
sbb
int3
mov
loopne
sahf
jmp
add
push
loop
shll
dec
int3
rorb
insl
sub
fldcw
adc
adc
adc
daa
pop
mov
dec
sarl
loope
dec
scas
mul
cmp
push
loop
push
push
adc
jbe
cltd
jbe
xchg
lods
xchg
adc
in
dec
in
int3
fmuls
lret
lret
xchg
jle
and
xchg
enter
js
inc
hlt
push
imul
push
adc
mov
adc
addl
pop
ljmp
sbb
sbb
xchg
pushf
or
mov
xchg
loop
dec
dec
and
xlat
xchg
mov
lock
pop
leave
push
or
jge
xchg
xchg
xchg
rcrl
pop
dec
push
sahf
xor
popl
or
jnp
adc
or
adc
push
mov
dec
iret
cmpsl
leave
dec
push
enter
in
xchg
and
push
sahf
pop
mov
push
pop
xchg
sbb
mov
pop
ljmp
mov
rorl
rcll
xchg
jns
rcll
rcrb
pop
cli
and
cwtl
sbbb
dec
fs
add
xchg
lea
aam
rclb
push
sahf
jne
lret
push
fwait
rcll
mov
push
hlt
repz
inc
push
push
adc
insl
xchg
pop
jns
jns
mull
mov
movsb
fs
xchg
lret
adc
or
lret
lcall
adc
pop
dec
out
lods
xchg
ss
dec
xor
mov
out
or
and
test
lret
leave
and
popf
in
adc
xchg
mov
fs
cld
out
or
adc
flds
test
adc
mov
add
xchg
aam
mov
push
add
inc
cmpsl
and
aam
pop
mov
rorl
ficompl
pop
push
repnz
sahf
out
push
jecxz
into
inc
and
dec
inc
scas
adc
shll
int3
mov
arpl
cmp
dec
jmp
xchg
or
enter
mov
xchg
arpl
xchg
pop
or
mov
dec
scas
mov
cli
jne
push
rorl
test
shr
fbstp
adc
out
cltd
push
adc
mov
ret
adc
push
std
pushf
test
dec
mov
sbb
pop
or
sbb
adc
inc
lret
cmpsl
dec
and
dec
or
lcall
cmp
ret
test
or
cmp
dec
cmp
mov
dec
shrl
lds
xchg
lds
cmp
int3
adc
xchg
lods
test
sub
jl
cmp
repnz
mov
test
cli
add
iret
lea
push
movsb
or
rcr
xchg
stc
push
lods
jle
xor
push
jg
pop
iret
push
sbb
mov
and
or
pop
dec
add
loop
cltd
push
inc
push
mov
dec
inc
xchg
cli
pop
int3
paddsw
mov
jb
pop
adc
lret
arpl
push
jecxz
dec
sub
dec
lds
adc
nop
mov
inc
adc
inc
mov
and
push
xlat
xchg
mov
fnstcw
add
push
rcll
in
xchg
xchg
mov
fstl
xchg
fimull
xchg
jge
pop
daa
outsb
pop
dec
insb
lret
pop
cwtl
inc
pinsrw
rcr
xchg
adc
in
cltd
out
push
pop
mov
xchg
test
fstpl
xlat
push
gs
dec
lret
pop
inc
mov
xchg
dec
shrb
sti
mov
jne
int3
or
scas
insb
sub
ja
rolb
adc
or
shl
dec
rcrl
push
xchg
pop
add
dec
aam
pop
divps
or
out
mov
sbb
ret
sbb
sub
inc
push
mov
inc
hlt
pop
adc
stos
jecxz
sbb
and
fimull
leave
clc
pop
pop
rcpps
inc
mov
mov
hlt
mov
lret
or
lea
leave
and
fmuls
or
leave
push
dec
and
nop
into
and
into
ret
int3
jge
pop
xchg
sarl
test
add
ret
dec
rorl
mov
mov
int3
xchg
mov
out
shlb
add
and
pop
clc
gs
fimull
nop
dec
stos
jl
cmpsl
sbb
and
mov
aad
lods
push
lret
cltd
inc
leave
rorl
jg
rcl
jbe
push
hlt
aad
jno
adc
xlat
adc
mov
shl
cltd
adc
jne
adc
icebp
adc
pop
jle
jp
aam
adc
adc
lea
rcpps
sar
or
dec
clc
pop
xchg
pushf
psrlw
gs
xchg
iret
lret
xchg
or
leave
arpl
adc
mov
xchg
jg
dec
cwtl
ljmp
pop
or
push
mov
in
enter
mov
and
mov
aam
cmpsl
mov
aam
xor
pop
adc
stos
imul
mov
pop
aas
add
sbb
cltd
push
adc
push
rorb
xor
cld
dec
or
mov
addr16
inc
fstl
dec
loopne
fs
iret
cwtl
xor
scas
xchg
mov
mov
pop
or
mov
mov
mov
and
arpl
ficoml
inc
xchg
inc
bound
jne
aam
outsl
notb
sbb
jecxz
push
adc
or
xchg
or
xchg
dec
push
dec
mov
xchg
adc
push
adc
aam
lods
sub
mov
jns
adc
mov
adc
jns
sub
or
jp
and
lock
arpl
jge
push
aad
sarl
jnp
clc
pushf
push
cli
arpl
mov
mov
pop
int
pop
ret
dec
mov
mov
int3
aaa
xlat
pop
repz
lret
mov
jnp
test
sub
stc
mov
xchg
fdiv
movsb
push
or
mov
jns
jg
ss
or
aam
fiaddl
xchg
or
push
test
xchg
jge
mov
sub
sbb
and
or
push
push
sarb
cmpsb
scas
in
jle
rcll
dec
push
cltd
push
test
adc
gs
mov
push
xor
xlat
leave
or
movsl
mov
push
repnz
dec
imul
mov
movsb
lea
data16
pop
xchg
bound
push
jecxz
push
rclb
adc
dec
cmpsl
mov
cmpsl
xlat
mov
pop
dec
loope
dec
and
dec
xchg
push
leave
dec
cmc
cltd
or
fidivrl
adc
mov
loopne
cltd
mov
push
cwtl
cmp
push
dec
xchg
mov
push
cltd
jb
into
jbe
xchg
sub
mov
dec
inc
dec
ljmp
call
dec
enter
pop
push
lret
cmpsl
loopne
xchg
mov
mov
inc
add
shr
add
fstl
mov
lods
scas
push
inc
sbb
push
push
jge
dec
dec
pop
sbb
inc
dec
xchg
js
push
es
xchg
fmuls
xchg
push
cltd
pop
iret
aam
xor
fsubr
ret
in
push
mov
pop
cmpsb
aam
fisubrs
pop
out
jle
push
mov
shrb
mov
jmp
ficompl
mov
or
enter
push
pop
sbb
flds
inc
shll
or
fsubs
mov
push
or
xchg
xchg
push
jmp
movsl
mov
rorb
or
loope
pavgw
fxch
or
inc
pop
inc
jg
mov
loope
pop
and
adc
xchg
mov
push
cltd
ret
adc
daa
outsb
sahf
adc
adc
in
arpl
dec
mov
push
or
fwait
or
jle
xor
dec
mov
sbb
jo
push
push
lahf
xchg
jg
xlat
in
iret
sub
jg
enter
dec
adc
inc
les
fsubrs
push
pop
test
leave
lds
mov
cmovnp
arpl
push
xchg
dec
xchg
push
pop
push
adc
sti
in
fisttpll
cmpsb
pop
xchg
lods
cmp
inc
mov
fisttpll
dec
lret
leave
push
adc
jns
push
cld
jmp
mov
sub
pop
jne
rorl
xchg
xchg
mov
push
jecxz
push
movsl
dec
pop
adc
lret
aam
popl
xlat
cwtl
mov
loop
rol
repz
orl
jmp
lods
iret
jle
arpl
pop
push
mov
bound
mov
dec
push
push
mov
pushf
pop
nop
ljmp
mov
in
insl
jne
pop
adc
sbbb
push
mov
iret
adc
loope
leave
sbb
pop
es
mov
out
xchg
or
dec
jp
loopne
xchg
cmpsb
loopne
sbb
nop
fadd
pop
adc
repz
iret
ja
mov
in
arpl
fildl
out
sbb
jecxz,pn
cmovp
leave
cmpsb
mov
xchg
inc
mov
decl
sbb
mov
ret
or
push
and
xchg
fsts
jl
lret
ret
adc
fisttpll
pop
dec
mov
xchg
rcll
xor
outsl
iret
add
adc
leave
push
push
mov
or
dec
inc
fldcw
cmp
jns
xor
dec
mov
arpl
sub
xlat
push
mov
insb
jmp
dec
adc
in
sbb
dec
push
add
push
xchg
in
test
or
adc
popl
arpl
fst
shl
or
cltd
and
xchg
out
fstl
rcll
pop
jnp
lcall
setns
in
sbb
xor
pop
cmp
ret
lahf
push
rorb
popa
mov
or
jle
adc
sbb
push
rcl
cmp
push
roll
dec
mov
sub
dec
adc
xchg
and
adc
adc
cmp
ret
cmpsl
mov
lret
jbe
xchg
jbe
movsl
ljmp
mov
sbb
xchg
jp
xchg
movsl
sbb
adc
fistl
mov
cltd
ja
push
dec
pop
and
fiaddl
or
mov
pop
push
and
mov
push
or
dec
adc
add
or
or
iret
lret
mov
pop
aas
inc
adc
pop
scas
dec
into
ret
mov
lret
movsl
sub
fmuls
insl
lds
or
decb
push
jne
xchg
or
sbb
and
dec
nop
or
les
popf
pop
mov
inc
or
mov
mov
insl
sub
xchg
xlat
rorb
and
xchg
mov
movsb
mov
movsb
xchg
add
adc
mov
pop
pop
movsl
push
sahf
xchg
push
jb
xchg
loop
push
dec
mov
pop
jle
cltd
push
and
int3
popf
in
cmp
xchg
iret
xchg
push
xchg
dec
dec
adc
dec
xchg
jo
mov
mov
leave
cmp
enter
xchg
cmp
dec
mov
mov
and
pop
push
or
in
or
sub
lods
mov
mov
insb
je
jne
int3
nop
mov
je
push
dec
xor
fbstp
mov
adc
dec
in
add
pop
push
or
jecxz
xchg
repz
jno
enter
jg
cwtl
sbb
jmp
push
adc
insb
or
jns
mov
or
xchg
iret
cltd
xchg
dec
mov
outsb
in
push
mov
adc
xchg
in
addb
fwait
ror
mov
mov
pop
cmp
ret
xchg
jns
and
fimull
adc
fcomps
pushf
xchg
pop
lock
and
xchg
cltd
and
push
jbe
inc
xchg
int3
jns
xlat
xchg
push
fsts
cmpps
in
pop
mov
adc
ret
jl
and
sar
jns
adc
int
ja
in
pop
adc
dec
adc
dec
jne
leave
fdiv
jo
jne
out
inc
dec
mov
push
jbe
xchg
test
and
pop
cltd
dec
adc
adc
shll
pop
pop
xlat
aam
cmp
int
xchg
pop
pop
xchg
mov
sub
pop
adc
loop
mov
scas
push
addr16
lcall
adc
or
aad
pushf
mov
stos
and
jo
je
and
adc
inc
enter
outsl
clc
jge
sbb
lret
test
sub
sbb
sbb
sbb
fndisi(8087
loope
out
sub
xchg
and
imul
dec
dec
les
push
add
pop
and
jg
add
pop
mov
orl
dec
call
arpl
inc
data16
xchg
test
loope
lret
add
into
push
loopne
fs
inc
xchg
xor
add
mov
mov
pop
inc
movsb
push
sbb
das
nop
adc
xchg
or
fildl
push
add
movsl
arpl
dec
test
push
pop
mulps
fsubs
adc
jge
mov
inc
rorl
xchg
scas
insl
lret
push
fdivrs
xchg
push
mov
jbe
pop
pop
dec
adc
scas
mov
sub
dec
aad
insl
dec
leave
fnstenv
cltd
cmp
daa
int3
mov
loop
mov
addb
push
cltd
nop
shrb
ficoml
js
sbb
insl
dec
adc
cltd
adc
mov
orl
cltd
inc
cwtl
iret
add
test
xchg
adc
xchg
dec
pop
push
sbb
aaa
call
fnstenv
xor
push
pop
or
xchg
inc
or
inc
adc
push
pop
add
nop
call
push
js
adc
push
movsb
mov
and
and
divb
es
mov
or
or
mov
pop
push
repnz
xor
sub
cltd
call
pop
mov
loopne
and
iret
pop
sbb
push
pop
pop
insl
mov
lret
adc
adc
loopne
jnp
push
rorb
clc
dec
or
mov
adc
and
dec
add
hlt
adc
push
fwait
xchg
xor
push
push
adc
int3
mov
shl
xchg
iret
or
or
fs
out
cs
lahf
rcrl
insl
jl
loope
dec
inc
push
nop
sti
jo
arpl
rorb
xchg
imul
push
sub
lret
cltd
loop
xchg
dec
dec
inc
popf
push
dec
cwtl
popf
dec
xlat
pop
mov
push
lock
jp
stc
pop
push
push
into
imul
dec
in
fs
cwtl
mov
lahf
aad
add
add
fdivrs
sbb
bound
xrelease
cltd
sbb
jl
jbe
jecxz
lods
pop
jle
stos
mov
jg
aad
adc
xchg
adc
cwtl
lret
addl
push
xor
add
sbb
pop
jbe
push
ljmp
dec
or
adc
pop
push
xorl
xchg
mov
or
cmp
dec
movsb
leave
cwtl
xchg
push
shll
mov
push
dec
mov
adc
xchg
mov
jbe
xchg
dec
adc
adc
in
std
or
push
mov
pop
enter
loope
push
mov
mov
or
fsts
push
arpl
mov
mov
and
sahf
xor
mov
ja
fmuls
clts
and
push
insb
push
lret
test
imul
test
adc
xchg
mov
xor
sbb
fstps
jmp
ljmp
push
and
pop
cs
xchg
in
dec
cmp
test
xchg
cwtl
xchg
int
fstl
pushf
or
push
fldt
aad
cmp
pop
dec
or
shlb
dec
adc
push
imul
cltd
in
fs
shl
movsb
sbb
cwtl
stc
inc
xchg
iret
lret
push
flds
push
or
jae
cli
pop
pop
js
nop
pop
push
adc
hlt
aaa
shrl
fwait
mov
push
cltd
push
stc
leave
cmp
xchg
pushf
xchg
fsts
or
cli
pop
adc
adc
and
adc
xchg
iret
push
sahf
pop
adc
or
xlat
xchg
adc
aam
inc
outsl
in
iret
or
movsl
lea
push
rol
mov
cmc
add
pop
pop
je
rclb
lods
sbb
dec
andl
xchg
and
and
les
das
rolb
sahf
call
cltd
xchg
push
sub
mov
loope
mov
shlb
push
mov
xchg
js
pop
sar
fs
jb
xchg
sub
flds
xchg
fistps
jl
xchg
and
addr16
fadds
aam
cltd
imul
and
nop
mov
in
push
cltd
jge
xchg
push
sub
adc
jecxz
mov
xor
xor
jge
iret
xor
rorl
fldenv
push
dec
push
adc
xchg
cltd
sub
lret
xchg
cld
push
or
xor
popf
push
xchg
mov
int3
sahf
push
dec
or
jg
jns
pop
dec
push
mov
sub
mov
xchg
cwtl
adc
push
sub
mov
imul
or
out
adc
inc
sbb
pusha
pop
or
int3
push
or
pushf
dec
mov
and
xchg
rorl
jne
popf
ds
ds
mov
stos
insl
fcoms
and
push
outsb
xchg
cmc
adc
and
fcoms
and
adc
xchg
dec
mov
in
jns
daa
insl
push
sbb
or
adc
cmp
xchg
mov
adc
mov
mov
adc
and
push
mov
sahf
dec
add
cld
xchg
xchg
repnz
lahf
rolb
pop
pop
fsub
push
push
xlat
jmp
jg
std
push
sub
adc
xchg
lahf
lcall
lret
mov
fs
xchg
push
sbb
push
add
iret
ljmp
sbb
dec
xor
stc
rcrl
loopne
arpl
and
sahf
pop
mov
je
push
dec
cwtl
dec
add
mov
xchg
rclb
test
fmuls
pop
or
dec
xchg
imul
sarb
shlb
mov
and
push
xor
or
insl
fcmovb
xlat
sub
xchg
or
cld
pushl
dec
mov
dec
mov
xchg
push
dec
ficoml
inc
xchg
or
jge
push
stos
cmpsl
adc
mov
mov
adc
inc
mov
sub
aam
dec
mov
xchg
jns
dec
dec
push
fnstcw
inc
repz
lret
push
lret
sub
enter
sbb
call
sub
hlt
adc
sub
jmp
cmpsb
xchg
dec
sbb
enter
mov
push
xlat
adc
cwtl
sbb
sbb
xor
imul
lcall
dec
aam
mov
or
arpl
xor
cmp
jo
adc
xchg
pop
or
add
nop
xchg
test
pop
adc
push
push
xor
dec
push
or
lea
push
leave
cltd
mov
js
nop
adc
push
cltd
mov
pop
mov
in
or
cwtl
pop
jnp
mov
adc
cmpsl
push
into
adc
xor
and
sub
aam
mov
or
cltd
enter
pop
fisttpll
mov
push
jb
loope
fimull
fisttpl
ror
xchg
adc
rcrl
adc
and
dec
push
push
out
outsl
fs
and
jecxz
cwtl
xchg
mov
mov
sbb
sets
xlat
rorb
adc
adc
add
cmp
push
xchg
xor
add
xchg
rcl
push
call
sbb
cmpsl
inc
orl
mov
mov
sbb
dec
cmp
outsl
scas
push
pop
mov
sbb
inc
fwait
loopne
cwtl
push
or
xchg
mov
loope
mov
push
jl
leave
pop
lret
mov
mov
xchg
in
pop
mov
rorb
lret
enter
and
rol
call
or
lret
sub
push
call
xchg
adc
mov
sti
sbb
xchg
mov
xchg
xchg
enter
dec
in
push
in
test
xchg
push
xchg
int3
loop
nop
xchg
adc
adc
scas
xlat
fs
dec
mov
fiadds
xchg
insb
xor
jl
xchg
or
or
fnstsw
push
imul
or
fmuls
xchg
fucompp
jne
mov
mov
cmp
or
inc
inc
pop
imul
cmp
stc
dec
popf
add
imul
mov
mov
outsb
sbb
pop
or
das
loope
mull
pop
cmpsb
fidivrl
cltd
lea
adc
or
sbb
dec
mov
lret
ret
inc
adc
or
jne
iret
aam
and
xchg
aam
dec
mov
xor
fcomps
mov
jmp
je
dec
dec
jae
push
iret
leave
iret
dec
jle
push
inc
ret
mov
enter
test
aad
nop
cmpsb
or
loope
or
cmp
mov
fcompl
xchg
xchg
cmp
cmpsb
adc
adc
dec
iret
repz
jne
xchg
xlat
dec
dec
jns
mov
mov
dec
outsl
adc
adc
sub
test
push
jne
xlat
adc
mov
mov
or
aas
mov
pop
mov
adc
rcrb
dec
pop
mov
daa
mov
ja
cmp
aam
or
std
pop
cmp
cmc
xchg
mov
xchg
movsb
dec
inc
mov
ljmp
ljmp
rorl
xchg
cmpsl
and
pop
aad
mov
xchg
pop
rcr
cmpsb
jle
dec
mov
mov
xchg
xor
leave
or
roll
pop
lret
sub
rorl
shrl
dec
jl
push
mov
and
pop
mov
adc
cltd
push
jmp
sub
push
cwtl
push
xchg
in
xchg
nop
dec
dec
sbb
rclb
lret
sub
addr16
orl
jle
lods
mov
popf
push
xchg
adc
xchg
enter
or
rorb
and
dec
out
push
xchg
dec
sbb
fiaddl
popl
push
fadds
addl
fisubrl
mov
stc
pushf
xor
jnp
cld
push
popf
cmp
daa
and
fisttpll
dec
push
adc
jb
sahf
pop
rorl
lret
cmpsl
push
cli
xchg
shrl
xchg
nop
jl
mov
and
dec
cmp
loop
push
lret
dec
int
push
xlat
mov
cmp
pop
leave
rorb
fdiv
dec
xchg
or
push
push
lods
lret
pop
adc
jne
push
push
push
cwtl
lods
daa
mov
push
aam
es
pop
xchg
adc
mov
or
pop
cmovns
aas
sbb
roll
daa
enter
inc
dec
in
xchg
push
dec
pop
lret
jge
adc
cmp
cmc
cld
or
mov
iret
xor
adc
mov
or
xchg
xlat
push
sarl
or
add
dec
push
pop
jne
push
dec
mov
dec
push
inc
and
in
dec
dec
adc
dec
je
adc
xchg
xor
or
push
dec
nop
push
iret
gs
mov
xchg
adc
push
rcrb
mov
mov
xlat
lret
inc
les
cltd
or
pop
adc
or
rorl
xor
xchg
pop
dec
mov
pop
or
push
mov
push
xchg
push
clc
xchg
cltd
jg
push
iret
jne
push
mov
int3
rorb
adc
sbb
xchg
dec
pop
mov
xchg
jno
iret
nop
push
or
sbb
xchg
lret
or
sbb
loopne
shrb
int
jmp
cmc
push
dec
leave
or
fcomps
nop
push
mov
sub
jmp
rcl
push
fwait
rcl
push
fimull
sar
nop
and
dec
jbe
dec
pop
or
scas
iret
rol
pop
nop
js
gs
push
dec
inc
dec
adc
push
mov
lret
mov
adc
pop
int3
mov
pop
mul
iret
iret
jecxz
xchg
cltd
mov
push
inc
and
rorl
movsl
pslld
fcoms
mov
lea
lret
or
nop
call
adc
jg
jg
and
dec
dec
in
pushf
dec
push
dec
or
test
leave
push
xchg
or
inc
or
push
dec
adc
add
sub
cwtl
aam
addr16
dec
jnp
dec
pop
mov
lret
dec
push
mov
mov
mov
xchg
pop
push
lret
jbe
or
dec
flds
aad
or
or
test
inc
ret
dec
mov
mov
mov
dec
daa
adc
jne
xchg
push
adc
or
and
pop
push
and
jge
leave
int
sub
es
dec
adc
ret
je
adc
adc
fsub
or
dec
push
xchg
mov
mov
outsb
dec
cwtl
out
gs
pop
sub
push
push
or
inc
mov
rorl
popf
push
fimull
sbb
fmuls
enter
mov
out
push
in
lods
out
fwait
incb
cmc
cltd
loopne
gs
xchg
mov
ficompl
push
mov
dec
popl
push
pushl
nop
push
and
lret
in
lea
daa
jno
or
push
add
adc
setge
xlat
push
xor
inc
jle
sbb
lret
inc
dec
pop
pop
xlat
cmp
movsl
mov
andl
or
push
xchg
fldl
xlat
iret
lods
adc
adc
push
cltd
pop
adc
fcmovbe
mov
dec
into
adc
and
mov
sbb
push
aam
cwtl
pop
flds
pop
and
dec
push
mov
ljmp
enter
jnp
roll
test
pop
dec
lea
movsl
jmp
inc
insb
imul
mov
ss
mov
or
iret
mov
cmc
gs
push
pop
or
or
xchg
testb
xlat
or
adc
orl
dec
shll
adc
pop
dec
push
into
mov
xchg
lret
mov
fcomps
fwait
out
cmpsb
gs
iret
stos
push
mov
out
jg
push
addr16
movsl
inc
pushf
ja
and
mulb
lret
push
sub
iret
jg
jns
pushf
adc
arpl
in
rclb
xor
out
fcoms
leave
pop
lods
jecxz
and
xor
and
xchg
aaa
push
fisttpll
add
jle
jmp
push
or
into
iret
cltd
mov
test
into
and
insl
es
xchg
sbb
and
inc
and
and
rcl
adc
scas
push
xlat
dec
mov
mov
sbb
mov
adc
jmp
adc
adc
ljmp
jnp
cmp
xchg
lahf
mov
or
insl
and
mov
and
sub
fistpl
push
nop
das
fwait
sbb
pop
jbe
xchg
adc
xchg
fxch
je
dec
add
pop
push
dec
jae
rclb
loope
dec
fadd
mov
adcb
ljmp
cmp
mov
jno
int3
loopne
mov
jecxz
mov
pop
dec
and
movsl
pop
xchg
pop
out
jge
adc
pop
imul
dec
pop
popa
fwait
mov
jb
sub
iret
mov
lea
enter
inc
inc
or
ret
jb
fs
and
dec
jb
xchg
push
lret
add
push
dec
lahf
pop
or
adc
out
push
pop
dec
lcall
enter
or
hlt
hlt
iret
xor
dec
xor
adc
mov
xchg
mov
leave
dec
mov
dec
push
sbbl
or
ret
popa
and
or
or
inc
dec
jp
lret
add
xchg
dec
insl
movsb
xchg
adc
aam
pusha
push
outsl
xchg
jge
adcl
cwtl
wbinvd
dec
rorb
xchg
xchg
mov
and
cwtl
push
ljmp
inc
mov
adc
or
stc
lcall
xchg
mov
xchg
lods
inc
mov
adc
pushf
xchg
or
pop
shl
jp
shl
nop
or
push
xchg
int3
outsl
aaa
lret
psrlw
pop
push
or
jecxz
pop
or
idiv
xor
stc
roll
dec
enter
bound
icebp
pop
ficoms
push
in
leave
or
or
jne
dec
push
jns
jmp
dec
inc
lods
pop
sub
sub
add
or
push
pop
cltd
fadds
xor
hlt
push
rclb
adc
dec
bswap
iret
push
or
aad
push
inc
xchg
xchg
mov
ss
loope
jecxz
push
push
imul
mov
dec
into
xchg
cltd
inc
xchg
ljmp
sahf
loop
sarl
dec
dec
lret
jmp
orl
push
leave
push
jle
push
dec
ja
and
xchg
mov
xchg
ret
popf
push
jns
fcoms
jns
mov
push
ja
out
mov
pop
arpl
push
or
push
adc
pop
mov
xchg
pop
int3
push
xchg
mov
arpl
mov
xchg
and
ficompl
fcoms
lea
and
dec
adc
dec
and
rol
pop
and
pop
lcall
les
pop
dec
mov
call
xlat
ja
lret
gs
rclb
dec
adc
cwtl
xchg
lcall
jo
pop
xchg
push
adc
jmp
pmuludq
push
mov
pop
adc
sbb
xchg
adc
xchg
rcrl
push
mov
adc
push
inc
out
insl
add
dec
pop
push
rorb
dec
mov
aaa
call
popf
and
push
mov
lret
imul
push
xchg
stc
pop
mov
not
xchg
adc
lret
popf
arpl
inc
std
pop
or
sub
cs
lcall
fcom
out
insl
adc
push
push
pop
loop
aam
dec
outsl
cli
cmp
xor
mov
lretw
aam
mov
mov
in
sub
xchg
insb
xchg
and
fcomp
fcomip
stc
xor
test
sub
loop
adc
decb
push
jle
dec
movsl
ljmp
sub
xchg
dec
dec
push
sub
out
lret
pop
adc
push
push
push
xchg
add
fimull
lret
nop
dec
xchg
pop
pop
jle
push
mov
add
popf
adc
les
xchg
pushf
cmp
fucomi
in
popl
push
les
xchg
fsubrs
sbb
pop
push
leave
push
dec
push
mov
jns
jo
leave
fwait
dec
testb
es
mov
xchg
jle
dec
out
mov
xchg
xchg
pop
push
jb
cltd
ja
out
ficoml
xchg
fimuls
pop
enter
push
xchg
mov
arpl
or
or
jge
mov
adc
ret
dec
xchg
cmp
xchg
ljmp
inc
mov
sbb
mov
pop
leave
vgatherdps
jmp
mov
jle
xchg
push
leave
dec
dec
inc
push
push
and
scas
cs
icebp
jmp
sub
push
push
testl
and
or
insb
lahf
push
nop
dec
dec
jno
mov
or
hlt
adc
setae
sarl
cwtl
push
add
or
mov
inc
xchg
mov
push
push
js
add
mov
xorl
jle
cmp
repnz
dec
push
stos
les
loope
jno
out
xchg
dec
or
or
or
scas
jle
xchg
rorl
repnz
add
mov
dec
push
shlb
add
dec
xor
push
jmp
push
pop
sarl
add
mov
out
std
dec
cmp
add
push
and
dec
cmpsb
sbb
push
pop
push
lret
aam
dec
jle
into
dec
mov
mov
jno
xlat
mov
or
ficoml
aam
dec
dec
adc
inc
push
push
cmc
mov
push
mov
jno,pt
xchg
sub
push
rcll
mov
cmp
xorb
xchg
jle
mov
out
dec
lcall
leave
or
pop
xor
push
pop
adc
cmpsb
pop
rclb
in
push
cwtl
xorl
iret
mov
sub
insl
push
adc
jg
dec
cs
push
iret
lods
jge
dec
xchg
rcll
mov
or
test
loope
rcrl
aaa
repnz
mov
enter
seto
icebp
jns
adc
sub
push
xchg
cmpsl
imul
adc
out
fcomps
push
mov
adc
xchg
bswap
xchg
fwait
inc
bound
jno
adc
lcall
daa
cmp
pop
jecxz
cltd
pop
push
mov
je
dec
dec
in
xor
leave
adc
mov
push
xchg
push
mov
mov
cltd
pop
push
sub
add
mov
iret
dec
fsts
jo
push
dec
push
jp
faddl
sub
inc
adc
push
jb
xchg
loop
xlat
or
dec
jge
mov
dec
mov
lret
dec
adc
rorb
rol
insl
out
mov
in
iret
xchg
js
mov
or
dec
pop
push
out
fst
pop
mov
fldcw
dec
push
adc
ja
enter
sub
fsubr
push
in
outsb
adc
cwtl
add
mov
rcll
dec
insb
adc
imul
add
mov
or
xor
push
and
push
fisubrl
gs
push
lret
cwtl
pop
xchg
adc
in
enter
xchg
aam
jge
mov
pop
push
xchg
or
inc
rep
pop
xorb
dec
insb
mov
iret
xchg
aam
mov
out
adc
andl
fwait
enter
adc
xchg
dec
jecxz
rsqrtps
mov
enter
inc
pop
xchg
or
push
jecxz
dec
int
nop
rcll
pop
sbb
ds
push
pop
xchg
xor
push
pop
cwtl
lods
clc
xlat
nop
mov
adc
mov
arpl
push
sbb
aam
adc
push
fimuls
jne
nop
adcl
loopne
repz
aad
push
fisttpll
mov
rorb
in
ficoml
adc
cmp
loope
mov
adc
xchg
adc
sbb
and
iret
push
or
orl
jmp
rclb
push
ror
andps
push
enter
and
xchg
jmp
mov
inc
loope
or
cwtl
insl
cwtl
adc
xorl
xor
loop
pcmpgtw
lods
mov
xchg
dec
jbe
enter
pop
loop
pop
movsl
test
pminsw
fsubs
xchg
push
orl
loopne
mov
pop
iret
int3
jns,pt
sbb
hlt
inc
cs
or
xchg
push
xchg
push
insb
push
xlat
xor
out
sahf
pop
fmul
mov
jnp
jecxz
or
push
push
sbb
push
lret
lods
xchg
das
xor
sub
push
pop
mov
xchg
pop
add
hlt
pop
sbb
js
and
imul
mov
jg
dec
add
cmp
mov
ret
scas
in
xlat
aam
add
das
lret
push
lds
mov
add
leave
inc
aas
inc
out
rcl
dec
mov
jne
rclb
imul
lea
cltd
push
xchg
leave
fyl2xp1
push
fbld
enter
clc
xlat
lods
arpl
jae
cwtl
lret
movsb
dec
or
dec
or
out
inc
xchg
xchg
jmp
xchg
add
sub
push
es
pop
dec
xor
pop
cli
xor
sti
or
lret
or
jmp
pop
pop
sbb
push
mov
and
xchg
or
push
xor
xchg
subl
pop
jl
into
push
fs
aam
mov
xchg
cltd
add
push
ret
inc
xchg
xchg
dec
imul
adc
inc
sarl
mov
shrl
addl
xchg
push
pop
adc
push
jp
shlb
scas
int3
xlat
xchg
inc
outsl
push
orl
pushf
xchg
mov
xchg
push
rcr
pop
aam
push
rcll
mov
push
aam
pop
pop
or
inc
sub
mov
enter
mov
and
lea
xchg
and
xchg
cwtl
mov
xchg
dec
int3
inc
iret
mov
aam
in
rorl
mov
xchg
lods
test
mov
push
dec
dec
inc
cltd
mov
xchg
or
je
jmp
shl
ficompl
cmpl
mov
sbb
sar
rolb
xchg
add
mov
and
mov
jg
in
mov
push
mov
push
addr16
xchg
sbb
test
dec
fs
or
dec
push
je
pop
add
adc
rcrl
pusha
jnp
adc
pushf
xor
shlb
fistpl
aaa
jecxz
iret
xor
xor
adc
adc
add
arpl
xlat
xorl
dec
pop
adc
xchg
push
push
adc
lret
pop
leave
mov
adc
cwtl
sbb
adc
mov
xchg
rorl
push
lret
cmp
fstps
xchg
nop
jecxz
adc
loop
arpl
roll
jno
std
lret
or
hlt
fmulp
pop
sbb
dec
and
nop
inc
stc
int3
adc
push
xchg
adc
and
push
jo
jno
fstl
roll
dec
xchg
mov
dec
push
shrb
rcll
das
push
ficoml
ljmp
dec
mov
or
lds
dec
push
int3
dec
or
fidivrl
adc
jae
cltd
ja
mov
xchg
mov
rorb
arpl
pop
jne
rcrl
pop
dec
xchg
loopne
loopne
movsl
pop
call
inc
push
and
or
pop
push
test
addl
jbe
es
inc
push
mov
push
mov
and
shll
inc
xchg
and
push
dec
arpl
mov
scas
or
outsl
in
stos
popf
sbb
mov
dec
mov
jns
push
lahf
cwtl
inc
xchg
jle
aam
jae
push
push
pop
cmc
loope
push
adc
and
cmc
push
pop
push
lods
test
pop
and
leave
popf
test
dec
jecxz
rcrb
xchg
push
cmp
pop
cli
mov
pop
jmp
jno
fimull
out
out
mov
xchg
or
iret
lock
mov
lcall
std
xchg
lahf
mov
lcall
sbb
hlt
mov
or
inc
pop
inc
cmpsl
xchg
les
push
out
dec
push
out
xchg
inc
nop
int3
mov
adc
adcl
dec
lret
adc
xchg
pop
xchg
pop
imul
sbb
dec
loop
shrl
loope
mov
jg
aad
xchg
jp
adc
ss
movsl
xor
cmpsb
mov
pop
rorb
push
cwtl
jle
cltd
mov
adc
sbb
and
push
scas
pushw
loopne
or
or
or
dec
fcomps
fs
rcrl
push
loop
arpl
popf
or
divb
pop
jecxz
push
mov
enter
fsubs
jb
xchg
ljmp
or
movsb
lret
cmc
test
movsb
mov
rol
out
mov
sarl
sbb
xchg
lret
xlat
subl
movsb
addl
repz
mov
xchg
out
pop
mov
inc
adcl
aad
jo
add
push
or
jne
pop
iret
nop
xchg
lock
rorb
push
adc
or
push
cld
insl
aam
hlt
xlat
insl
scas
or
sub
push
xchg
xchg
or
enter
xchg
in
cwtl
push
aam
aas
push
rorb
xchg
rorl
leave
dec
or
dec
rcll
xor
sub
dec
fnstcw
pop
xchg
outsl
adc
push
ljmp
xchg
adc
push
fisttpl
out
mov
xchg
sub
scas
jbe
inc
mov
cld
push
lret
dec
mov
test
xchg
sti
xor
pop
jno
mov
movsb
mov
fsts
dec
dec
or
aad
xchg
push
leave
mov
and
and
mov
xchg
pop
or
ja
xor
inc
or
push
adc
mov
xchg
dec
and
pop
pop
aam
pop
or
inc
lea
lret
addr16
mov
mov
sbb
popf
stc
pop
push
or
sbb
or
or
loop
int3
xchg
iret
inc
lahf
or
aam
fmul
cld
daa
adc
test
addps
xchg
pop
cmpsl
stos
push
and
sub
adc
enter
movsb
add
mov
mov
addr16
loop
ficoml
lret
mov
mov
ret
mov
aad
in
cltd
mov
sub
lret
sub
push
jecxz
xchg
pop
adc
xchg
pop
test
addr16
push
adc
lcall
xlat
add
nop
jmp
dec
jno
lret
imul
fs
fsub
rcrl
mov
aad
adc
push
push
loop
dec
aam
sbb
dec
push
inc
cmp
jbe
ret
mov
dec
rorl
mov
dec
adc
loop
dec
add
xchg
adc
pop
pop
xchg
or
pop
rcrl
aam
popw
or
sarl
fists
nop
push
and
and
push
mov
push
cltd
xchg
adc
movsl
repnz
dec
cmp
jbe
bswap
sbb
pop
sbb
mov
rclb
imul
pop
imul
add
xchg
cltd
xchg
insl
pop
jg
fwait
mov
pop
aam
enter
or
mov
adc
pop
cmp
enter
mov
jecxz
lret
mov
inc
cmc
dec
dec
rorb
dec
push
insb
fwait
adc
sbb
or
clc
pop
sub
jmp
mov
cmc
pop
xchg
adc
jbe
xchg
xlat
mov
push
hlt
adc
cmovge
push
sub
pop
cltd
popf
sarb
stos
cmpsb
add
dec
adc
int3
and
mov
outsl
inc
push
mov
rol
lods
imul
cltd
jmp
adc
push
adc
mov
inc
push
push
sbb
fisttpll
or
dec
or
xchg
push
jae
rcll
jle
jnp
or
ret
adc
dec
rorl
ss
adc
xchg
or
xchg
lods
fisttpll
popf
aas
pop
pop
adc
call
pushf
or
loop
shrb
fs
iret
fadds
rclb
pop
ds
xchg
pop
int3
adc
jl
push
movsl
mov
out
jle
mov
xor
lea
dec
fwait
adc
mov
leave
es
fmuls
test
adc
adc
jns
pop
dec
xlat
insb
adc
out
xchg
das
loope
push
dec
inc
or
adcl
push
sbb
in
mov
dec
xchg
push
xchg
push
arpl
inc
rorl
arpl
das
addr16
jg
jg
lea
jo
push
adc
cmpsb
imul
cwtl
cli
or
push
daa
inc
sbb
sub
xchg
dec
shr
push
mov
xchg
jle
xchg
lret
cltd
push
nop
shlb
pop
dec
mov
pop
icebp
xchg
jg
popf
int3
stos
fmull
mov
and
inc
decl
lret
jns
rclb
aam
fwait
xchg
cmp
and
push
jns
push
dec
or
dec
lods
mov
cmp
into
iret
imul
cld
xor
mov
or
jecxz
xchg
sbb
mov
adc
out
xlat
dec
push
lahf
inc
adc
pop
aas
xchg
xchg
cli
inc
popf
dec
adc
jne
rcll
cmp
pop
jo
dec
orl
mov
jmp
push
rcll
stos
and
fistps
int
in
int3
fcom
sub
sub
rclb
push
int
or
shll
icebp
nop
lret
adc
push
xchg
hlt
mov
push
arpl
and
insb
enter
sbb
inc
testb
daa
xchg
or
xor
sub
scas
sbb
pop
and
adc
ror
fs
push
cmc
jno
push
rcrl
adc
mov
dec
sub
addr16
cltd
data16
jno
jmp
roll
aam
mov
pop
gs
inc
push
pop
fistpl
nop
adc
insl
leave
dec
or
push
and
dec
lret
sub
pusha
mov
jle
out
icebp
out
and
iret
push
mov
adc
xchg
push
mov
and
lds
lret
push
or
rcl
and
dec
lret
dec
insl
and
adc
push
aam
ret
adc
and
fdivrp
jle
xor
aam
xchg
xor
adc
repnz
aas
push
aam
pop
jl
repz
jg
xchg
push
jecxz
enter
xchg
cmp
dec
dec
mov
push
ret
ja
cmp
sbb
mov
xor
and
sbb
jne
cs
cmp
xlat
sub
fldcw
leave
mov
xchg
push
roll
aam
int3
mov
push
adc
ret
dec
arpl
add
jnp
cld
popf
add
adc
or
xor
xchg
mov
insb
or
lcall
jno
push
adc
adc
xchg
imul
adc
fwait
dec
nop
cs
push
xlat
xchg
jl
push
ror
and
inc
push
dec
push
jle
int3
ret
aas
enter
and
xor
addr16
jmp
ja
inc
mov
lcall
arpl
pop
rol
std
adc
push
iret
mov
and
int3
or
dec
rorl
xchg
lret
nop
jne
adc
imul
dec
xchg
adc
test
dec
lea
aam
mov
adc
js
mov
lcall
push
fnstenv
fwait
mov
mov
jns
or
push
imul
in
cs
je
jne
int3
xlat
mov
dec
clc
xchg
mov
jmp
or
add
push
sbb
lret
lret
mov
sahf
adc
or
clc
femms
insl
pop
rcll
adc
movsl
jge
pop
sbb
dec
push
mov
push
cmp
push
cmp
fstp
push
jo
adcl
push
push
sub
jns
test
jns
mov
jb
sbb
fwait
xchg
or
adc
sub
movsl
mov
stos
or
out
mov
push
hlt
fmuls
add
jg
adc
lods
insb
lret
loopne
movsb
decb
mov
push
and
pop
imul
push
enter
vpmacssdql
inc
in
jbe
pop
les
sub
mov
push
sysenter
daa
loop
push
cmp
adc
jg
shll
or
aam
rorl
sahf
adc
movb
xchg
sbb
pop
aam
outsl
push
enter
iret
xchg
dec
pop
xor
jp
movsb
fldln2
cmp
fmuls
push
js
cltd
inc
xchg
fcoms
shlb
pop
cmc
fwait
pop
adc
jecxz
dec
iret
xchg
adc
daa
jmp
aam
fadds
rcrb
arpl
movsb
inc
fdivs
aas
pop
movsb
mov
xchg
setl
ja
enter
sahf
ds
jp
enter
add
xchg
xchg
jno
xchg
fimull
dec
sti
lcall
test
xchg
fcoml
imul
fidivrl
jle
das
sub
dec
dec
ds
mov
mov
xchg
jo
into
lods
rcrb
movsb
xchg
fidivrl
mov
outsl
int
ret
cwtl
jle
cltd
in
and
cmp
test
push
cmp
or
add
cmp
mov
sarl
fnstenv
and
xchg
arpl
pop
insl
lods
fcomp
inc
insl
addl
pop
mov
addr16
dec
dec
push
and
and
sbb
push
lret
add
lret
adc
test
addr16
mov
mov
xor
and
mov
dec
mov
push
rorl
pop
add
fmuls
adc
xchg
or
movsl
jne
xchg
xchg
addl
mov
jno
adc
out
mov
xlat
or
jo
xor
int3
nop
mov
scas
jg
dec
push
imulb
cmpsl
adc
nop
adc
xor
mov
imul
cltd
push
leave
aaa
in
mov
movsl
daa
dec
mov
mov
mov
or
inc
imul
xchg
jge
push
push
arpl
dec
fs
cltd
jmp
roll
xchg
pop
xchg
xchg
rolb
int3
push
adcl
arpl
mov
in
addr16
or
push
xchg
out
mov
dec
mov
int3
pop
xchg
icebp
rcr
pusha
xchg
adc
andl
jecxz
inc
push
inc
fcoms
popf
push
xchg
ja
sbb
lret
leave
iret
or
loop
mov
dec
nop
jno
xchg
xor
mov
enter
xor
xchg
mov
and
mov
mov
adc
mov
jne
lret
or
xchg
rclb
jecxz
pop
sbb
mov
mov
dec
xor
add
out
arpl
or
addb
dec
loopne
loop
sbb
jns
mov
jbe
loope
fsts
cmp
jmp
ss
ficoms
addr16
xchg
stos
jb
xchg
mov
insl
nop
iret
lret
rsm
lcall
mov
dec
adc
addr16
and
mov
adc
arpl
inc
and
in
inc
dec
das
xchg
push
popf
ficoml
les
int3
push
cwtl
dec
sub
pop
cltd
call
insl
jbe
dec
leave
lahf
pavgw
push
mov
or
dec
add
xchg
rclb
loop
push
pop
pop
not
insb
dec
xchg
inc
popf
js
mov
fwait
push
pop
xor
adc
fucomip
pop
xchg
loopne
loopne
sub
gs
nop
mov
adc
lret
or
iret
jp
loopw
xchg
jecxz
adc
pop
jecxz
or
loop
bound
out
pop
lods
push
icebp
movsl
sub
in
push
leave
rclb
outsl
hlt
rclb
adc
xchg
inc
push
push
push
rolb
dec
insl
aam
xlat
aam
push
icebp
push
fdivr
ss
adc
mov
movsb
xchg
or
into
loope
pop
push
or
and
cltd
sti
xchg
outsl
jae
push
syscall
xchg
sub
cld
ja
sbb
inc
and
or
add
adc
xchg
add
adc
ljmp
or
leave
add
pxor
dec
cmpsl
cltd
dec
pop
cmp
call
int3
ljmp
xchg
in
push
pop
adc
shl
inc
dec
icebp
adc
jge
sbb
jecxz
or
xor
mov
mov
lret
jns
adc
jo
push
pop
push
loopne
adc
pop
stos
les
lods
push
jmp
sbbl
or
push
adcb
dec
dec
jmp
or
ret
and
xlat
jp
adc
xchg
imul
jge
push
and
rcll
loop
lret
test
pop
nop
dec
aad
xchg
outsl
mov
fimull
mov
push
adc
sbb
xlat
roll
and
int
adc
push
xchg
adc
cwtl
cltd
dec
push
daa
push
loop,pt
gs
mov
rorb
sbb
pop
in
or
loop
lret
xlat
int3
scas
cmp
out
inc
mov
or
xchg
pop
sbb
push
push
rcl
lret
sbb
call
xor
or
jg
in
xlat
dec
dec
xor
imul
inc
or
dec
dec
out
mov
loope
adc
adc
dec
push
test
dec
adc
leave
addr16
xchg
mov
add
outsl
outsl
cwtl
xchg
pop
daa
push
ja
jg
out
xor
xchg
xlat
add
adc
ret
rorb
dec
dec
mov
sar
lcall
add
movsl
movsb
call
jne
or
jge
ror
adc
cwtl
xor
mov
enter
ljmp
bound
cwtl
gs
push
push
adc
xor
fldt
cwtl
dec
adc
mov
push
notl
xor
ret
enter
adcb
sbbl
dec
xchg
movsl
les
pop
dec
mov
jg
dec
mov
adc
enter
xchg
ja
dec
in
lret
movsb
push
pop
xchg
xor
sub
ljmp
mov
pop
pop
movsl
mov
outsl
push
mov
sub
mov
repz
lret
sub
or
sbb
push
movlps
dec
push
nop
cwtl
mov
jl
loop
and
mov
push
cld
xor
push
into
cwtl
lea
pop
jg
int
and
lret
in
xlat
push
adc
movsl
jp
or
jmp
rol
les
imul
xchg
inc
cmp
mov
or
nop
inc
sahf
or
pop
repz
adc
and
adc
fdivrs
xchg
push
bswap
lcall
out
adc
loope
stc
or
mov
xchg
shrl
sbb
repz
daa
xor
in
dec
jmp
adc
test
jg
mov
rorl
adc
fst
push
pop
pop
dec
dec
outsl
jns
xchg
cs
shll
rorb
sbb
aam
pop
or
js
adc
dec
ja
adc
sbb
jns
shll
imul
cs
pop
popf
bound
fmuls
call
or
or
mov
xchg
mov
push
mov
cltd
gs
iret
or
jo
or
push
cwtl
push
dec
loope
mov
aas
adc
out
test
dec
sub
fsts
dec
fldenv
jne
adc
fildl
fstps
pop
loop
dec
cs
adc
and
push
pop
push
aam
pop
sub
pop
fstpl
xchg
icebp
push
iret
mov
fiaddl
cmp
mov
iret
adc
add
int3
jnp
xchg
hlt
add
push
xchg
jecxz
cltd
fistl
mov
pop
dec
sbbl
push
push
pmaddwd
flds
pop
aam
pushf
jmp
mov
dec
leavew
lret
jne
jmp
jle
cltd
mov
dec
pop
cwtl
pop
dec
jmp
pop
flds
arpl
nop
in
daa
add
dec
popf
data16
sbb
ss
pop
inc
or
xchg
aam
push
inc
or
ror
outsb
dec
xchg
lods
outsb
xor
ret
rcrl
sub
lds
popf
mov
sub
push
xchg
jp
xsavec
xchg
nop
xchg
out
pop
sbb
xchg
mov
or
loope
cwtl
push
push
or
push
cmp
adcl
loop
mov
adc
dec
mov
push
cmp
dec
pusha
dec
lods
sub
inc
inc
push
js
test
pop
cwtl
cld
stc
aam
add
sub
rcrl
jecxz
mov
inc
pop
inc
or
xchg
addl
cmp
push
dec
dec
adc
outsl
lods
dec
adc
adc
xchg
pop
cld
jecxz
enter
jmp
xchg
jns
or
dec
inc
inc
add
or
push
test
imul
popf
push
xlat
int
arpl
addr16
arpl
dec
repz
aam
jo
pop
and
movsb
fiaddl
mov
xchg
ret
dec
ret
popa
enter
pop
add
xlat
int3
divl
inc
xor
or
or
add
xchg
sbb
push
fdivrs
insb
or
andps
test
jle
mov
ret
and
or
or
cmp
test
je
and
pop
mov
test
xchg
xchg
push
sbb
pop
lret
std
pop
rcrb
loop
flds
leave
mov
pushf
ds
dec
lcall
mov
adc
sbb
fcoms
dec
cld
int3
pop
inc
sub
lret
mov
adc
xchg
stos
mov
les
or
push
and
xchg
pusha
push
pop
push
shlb
adc
dec
test
dec
xchg
jecxz
dec
dec
leave
push
fcmovb
sub
fiaddl
xchg
pop
jns
ret
or
mov
lret
push
xchg
adc
pushf
test
pop
mov
nop
mov
adc
xchg
mov
or
dec
jne
push
xchg
push
cmpsl
lea
nop
lret
fisttps
shrb
repnz
pushf
xor
jno
int
jns
rclb
dec
enter
or
push
cwtl
addr16
in
xor
iret
hlt
jo
imul
out
in
xlat
dec
or
push
ret
int3
enter
js
call
xlat
push
leave
stos
dec
mov
adc
xchg
jne
mov
ja
ljmp
push
xor
pop
xchg
mov
xchg
mov
cmp
sar
imul
adc
push
inc
int3
mov
es
add
leave
fsubs
into
jnp
xchg
push
push
sti
mov
aad
adc
dec
sbb
xlat
sarb
iret
outsb
daa
loop
push
iret
and
sbb
pop
lret
xor
adc
outsb
lret
repnz
xchg
fcmove
push
pop
dec
imul
adcb
icebp
scas
loope
iret
aas
mov
aam
xchg
push
dec
push
xor
je
pop
adc
mov
xchg
xor
push
lea
ss
int
and
push
adc
dec
dec
xchg
mov
cltd
xchg
lcall
jp
pop
xchg
sbb
and
push
loop
fldcw
test
cltd
call
jp
out
daa
test
xchg
push
clc
push
int
dec
nop
push
and
daa
iret
mov
fistpl
pop
cmova
push
leave
lds
sbbl
pop
xchg
xchg
dec
jl
and
xchg
xlat
push
icebp
repnz
add
or
pop
outsl
ss
mov
cwtl
adcl
adc
mov
sub
mov
dec
mov
push
cwtl
xchg
mov
setg
arpl
dec
rorl
push
adc
mov
xchg
inc
testb
inc
mov
xchg
insb
or
or
shlb
test
mov
dec
aad
xchg
ret
xchg
test
test
adc
jle
leave
int3
push
push
jmp
pop
pop
xchg
adc
dec
or
loope
pop
or
jge
mov
inc
jo
fidivrl
dec
mov
dec
xchg
mov
push
out
lcall
repnz
lods
or
ret
add
or
jle
push
loope
xchg
xchg
lds
les
push
sub
push
push
sbb
lret
mov
adcl
ds
xor
iret
jecxz
or
nop
mov
dec
dec
movsb
jno
sub
out
sub
dec
pop
fchs
add
jo
scas
dec
dec
outsb
fidivl
rorl
cld
mov
jl
pushf
pop
sbb
mov
pop
xchg
shll
adc
push
rclb
test
jp
movsb
dec
js
and
fsubrs
cltd
or
adc
mov
es
jle
pop
sti
jns
adc
dec
in
cltd
cwtl
dec
inc
mov
jne
rcrl
lret
fisttpl
dec
sbb
fnsave
adc
xlat
rcll
mov
mov
jns
mov
in
pop
dec
fst
pop
and
sub
or
adc
cmpsl
hlt
xchg
movsl
aam
out
xchg
test
dec
es
or
push
loop
xchg
test
xchg
inc
cwtl
jge
pop
push
mov
mov
iret
sbb
adc
push
cmpsl
push
fmuls
jns
fistl
jecxz
dec
push
or
or
or
dec
fimull
xchg
pushf
mov
sahf
push
shufps
dec
hlt
sbb
cmp
jmp
lods
add
adc
bswap
test
rcl
or
adc
inc
stos
push
hlt
icebp
lea
mov
sbb
inc
dec
dec
dec
push
jno
shr
xchg
arpl
movsb
loop
xor
ret
mov
std
jo
mov
mov
push
push
push
cmc
loop
adc
sub
cld
out
inc
dec
mov
sub
lcall
fwait
mov
add
leave
ja
xchg
xchg
and
ror
dec
mov
in
mov
or
xchg
inc
jp
inc
push
enter
sub
cmp
shlb
xchg
cltd
leave
dec
xchg
push
clc
adc
cmp
mov
or
and
xchg
in
push
xchg
iret
shll
xchg
sbbl
ret
pop
iret
or
mov
mov
leave
dec
jle
pop
add
push
pop
xorl
leave
mov
dec
rclb
icebp
push
pop
push
imul
enter
aam
shrb
jecxz
adc
cmp
jle
aaa
popa
xor
or
jecxz
jl
xor
pop
das
nop
dec
cmp
loope
adc
and
fldl
test
push
pop
pop
movsb
mov
xchg
or
clc
xor
pop
shrb
pop
xchg
cltd
mov
mov
outsb
test
lret
or
lret
jge
dec
dec
sarb
or
and
dec
in
call
enter
jae
push
jge
mov
xchg
andnps
in
xchg
push
adc
and
or
adc
inc
push
popl
fucomip
and
xlat
lret
insl
and
and
aam
enter
adc
int3
xchg
xchg
or
mov
ja
adc
xchg
out
push
adc
xchg
push
push
arpl
inc
in
push
loope
lods
rorb
push
fwait
lea
adc
inc
xor
rcr
push
rol
test
cmp
dec
ja
movlps
xchg
push
lret
mov
lea
imul
xchg
jb
gs
rcl
adc
mov
dec
push
mov
test
xchg
xlat
aam
aas
or
push
add
aam
add
stos
nop
adc
movsb
cli
fsubr
mov
sub
imul
jbe
dec
jb
mov
int3
add
dec
inc
jecxz
or
dec
mov
or
mov
ret
mov
dec
loop
imul
rorb
pop
lds
cli
test
out
jnp
fmuls
dec
jg
dec
sbb
or
dec
popl
pushf
xchg
xlat
mov
mov
outsb
mov
pcmpgtb
dec
in
pop
jbe
lcall
xorb
push
sbb
xchg
dec
pop
adc
dec
test
adc
mov
scas
fistl
into
mov
in
pop
leave
dec
stos
into
test
mov
inc
adc
push
and
push
xlat
sarl
aam
pop
xor
dec
mov
test
xchg
int3
mov
adc
pop
or
notl
cltd
enter
sbb
dec
repz
andl
test
mov
xlat
add
xchg
cmovns
sbb
adc
dec
adc
test
add
enter
in
ret
andl
in
and
push
jg
mov
fisttps
push
iret
adc
test
sub
push
rcll
nop
cmp
mov
add
shll
lret
cld
or
shll
and
push
les
mov
pop
push
sbb
push
fadds
out
popf
cmpl
push
mov
addl
pop
adc
hlt
push
ret
or
je
fsts
shrl
out
test
mov
nop
lret
xchg
push
mov
pop
fsubrl
or
pop
mov
pop
ljmp
xchg
adcl
loop
pop
push
or
xchg
cltd
jbe
pop
adc
cmp
lcall
cltd
or
jmp
pop
inc
xchg
leave
test
cltd
cltd
arpl
or
inc
mov
push
inc
add
add
ja
push
adc
push
xchg
or
jecxz
or
jo
lcall
cwtl
cltd
jne
fxch
push
push
dec
add
sub
xor
cs
es
scas
bound
lret
rorl
psrlq
cmp
in
pushf
push
mov
js
loope
into
arpl
les
xchg
xchg
ss
xchg
dec
and
aad
push
push
xor
sbb
int
call
xchg
shlb
pop
dec
push
xchg
push
or
cmc
jecxz
inc
arpl
cmpsl
sub
xchg
mov
adc
sub
mov
pop
rcll
mov
jecxz
xchg
dec
inc
jmp
ja
into
adc
enter
add
lret
fs
push
or
add
cltd
xchg
cmp
push
push
adc
xchg
push
lahf
xchg
sarl
insb
or
cwtl
mov
mov
call
xchg
call
push
mov
loope
mov
ret
push
push
dec
test
push
xchg
xchg
dec
jmp
fs
arpl
dec
les
xchg
ja
inc
enter
adc
inc
dec
aam
push
ficompl
push
loope
jno
push
dec
aad
push
shl
sub
shrb
rcrb
add
jg
into
dec
ret
bound
pop
push
fcomp
aaa
xchg
and
adc
jbe
fnstenv
loopne
xor
stc
arpl
imul
and
mov
test
enter
inc
push
inc
jns
push
loop
xchg
adc
fadds
xchg
sbb
enter
dec
push
je
or
or
cmpsb
movsl
pmaddwd
mov
mov
sbb
jle
mov
mov
cld
aam
insl
dec
push
xchg
push
in
loopne
in
push
dec
adc
je
cmc
ret
adc
xor
insl
fcoms
lea
jns
lods
push
insb
inc
test
pop
int3
jne
psrlw
push
enter
in
shlb
jle
mov
inc
pop
in
cwtl
dec
insb
test
or
dec
inc
mov
xchg
mov
fcmove
mov
jl
cmc
inc
into
lret
or
inc
adc
adc
cmpsl
loop
adc
in
out
mov
xchg
iret
adc
mov
jle
sbb
dec
ret
dec
dec
test
xchg
arpl
ss
shrl
mov
cmp
sbb
pop
cwtl
or
repz
insb
xchg
dec
es
push
push
enter
pop
xchg
mov
mov
je
test
rcll
mov
push
pop
lret
jg
aad
mov
enter
mov
sbb
jecxz
inc
dec
add
ret
inc
or
rorl
pushf
push
dec
push
push
jl
xchg
cmp
xchg
jl
mov
xchg
cmp
arpl
cli
sbb
cld
mov
dec
push
xchg
pushf
inc
pop
ficoms
outsl
call
push
cwtl
dec
mov
jg
mov
pextrw
mov
cltd
dec
movsb
cli
pop
inc
sbb
inc
mov
loopne
push
ret
pop
lock
lcall
iret
mov
xchg
cmp
or
rcrb
outsl
out
jg
mov
nop
int3
dec
fisttpll
push
pop
in
push
jbe
popf
xchg
pushf
mov
cld
cwtl
xlat
lods
shll
lret
or
and
fcompl
jnp
adc
addr16
lret
movsb
pop
adc
mov
test
xor
add
mov
rorb
push
dec
adc
ja
shll
adc
cltd
aam
aam
or
outsb
aam
insb
cmpsb
pop
pop
mov
or
xchg
push
fists
inc
mov
and
rorl
or
xchg
int
ret
divl
inc
sysenter
mov
into
fs
push
cmp
insb
lods
arpl
pop
pop
xchg
pop
sbbl
dec
mov
sbb
daa
sti
sbb
push
ret
in
ja
pop
ret
jno
or
fcoms
xchg
inc
dec
dec
or
xorl
leave
pop
dec
stos
hlt
push
in
ja
imul
push
sub
xchg
fsub
xchg
jbe
fsts
enter
lahf
pop
inc
push
mov
mov
fnstenv
and
fcmove
pop
mov
cli
dec
int3
xor
movsb
clc
push
xchg
aam
into
imul
rcrl
pushf
test
rclb
imul
or
cmp
push
sbb
and
push
and
dec
jg
movsl
lods
decb
repnz
es
test
ret
in
pop
push
xlat
mov
push
push
movsb
mov
jne
dec
adc
sbb
dec
lahf
lcall
out
xchg
cmp
js
adc
mov
cmpsb
sbb
adc
pop
xorps
mov
fmul
popf
or
ja
fstps
int
std
push
mov
cmpsb
shrb
lds
rcrl
loop
pop
mov
popf
lret
push
mov
mov
dec
mov
jns
adc
dec
test
pop
cwtl
mov
inc
pop
xlat
ljmp
sbb
jle
test
lret
cwtl
sub
jns
fimull
lea
cltd
clc
jo
or
outsb
mov
xchg
lahf
adc
dec
dec
lret
xlat
push
movaps
xor
dec
xchg
out
pop
adc
and
dec
rorl
aaa
hlt
mov
adc
xchg
dec
mov
loope
dec
cmpsb
mov
test
fs
dec
pop
fwait
pop
mov
fmuls
xchg
testl
fcmovb
rclb
jle
xor
jo
mov
dec
adc
push
cltd
mov
xchg
push
pop
add
cmp
xchg
adc
xchg
lods
dec
pop
movsb
ja
ret
addr16
rcll
sbb
movlps
mov
loope
or
or
gs
dec
adc
xchg
rclb
dec
cmp
xchg
repnz
enter
mov
cmp
mov
or
imull
insl
and
cltd
dec
or
xlat
shlb
in
aam
push
mov
ja
pop
or
jnp
push
icebp
jne
lret
dec
roll
pop
push
xchg
push
pop
pop
jmp
push
mov
cmp
push
push
pop
adc
aam
mov
push
xchg
xchg
pop
mov
jle
iret
shll
pusha
xchg
insb
cltd
xchg
test
mov
xchg
clc
adc
inc
lods
dec
push
call
sahf
rcrl
mov
int3
xchg
lret
pop
nop
adc
xchg
push
adc
dec
mov
add
adc
out
or
sbb
in
push
jb
push
pop
nop
dec
push
lock
sbb
push
dec
pop
loope
xchg
mov
sahf
lret
pushf
mov
pop
gs
push
ficoml
or
fsubp
dec
or
sbb
ljmp
lea
pushf
lret
int3
xchg
or
or
andl
movsb
jecxz
shl
lock
hlt
push
xchg
int
push
jg
sub
push
daa
ljmp
call
arpl
or
xchg
cltd
mov
mov
xor
pop
dec
outsl
or
xchg
xchg
pop
test
lret
adc
jl
pop
sbb
arpl
dec
es
fdivs
lcall
inc
or
sbb
push
cwtl
sbb
ss
int3
adc
jne
sbb
cld
imul
jns
sub
ret
arpl
ret
arpl
cltd
adc
insl
add
jns
pushf
mov
and
mov
xchg
adc
xchg
repnz
hlt
and
sbb
aas
or
jno
add
mov
push
aam
inc
sbb
jecxz
adc
rcll
cltd
mov
dec
lret
push
iret
adc
dec
xchg
sbb
bnd
fs
or
test
in
mov
fsubrs
mov
insb
push
ret
jno
mov
rcrb
inc
adc
insb
jg
mov
mov
mov
jnp
loopne
dec
loop
sbb
mov
int3
mov
jb
jbe
dec
cvtpi2ps
in
pop
xchg
insl
sbb
mov
sbbl
mov
inc
adc
cmpsl
cltd
mov
xchg
mov
push
inc
adc
mov
ja
fstp
shlb
out
iret
mov
xchg
ja
adc
dec
ficomps
lret
loopne
lret
pop
cli
lcall
jg
or
outsb
cmp
adc
inc
mov
jo
cmpl
xchg
or
gs
adc
rol
rclb
inc
arpl
mov
and
sbb
adc
imul
xchg
jnp
push
stos
pop
fs
hlt
ffree
mov
mov
adc
les
push
mov
movsb
xor
xchg
push
xlat
iret
insl
lret
outsl
sahf
or
insb
int3
cmp
mov
mov
dec
mov
int
scas
mov
nop
or
xchg
and
popf
dec
adc
sub
subl
jp
dec
lds
sbb
or
inc
cmp
clc
push
xchg
push
out
loop
fxch
movsb
jecxz
test
in
push
xor
jecxz
xchg
stos
mov
stos
imul
outsb
mov
mov
rcl
iret
adc
push
insl
adc
enter
hlt
movsb
test
add
jnp
lahf
xchg
push
cmp
jle
push
ja
pop
or
add
adc
popa
scas
dec
outsl
cltd
aas
testb
xchg
or
sbb
adc
idivb
adc
lea
lret
cltd
iret
fmuls
jnp
fldl
dec
dec
xchg
mov
sbb
push
adc
or
jo
mov
stc
jg
movsl
lea
jg
jmp
ds
push
mov
cld
test
pushf
sahf
push
mov
rclb
nop
push
loop
cwtl
rcll
enter
mov
jne
lret
jns
ds
jbe
and
adc
addr16
xchg
xchg
add
dec
push
and
adc
subl
in
push
mov
adc
les
lret
pop
mov
mov
push
or
push
pop
adc
cwtl
adc
pop
xchg
rcll
out
negl
aam
push
pop
sbb
jle
ret
enter
pushf
andl
enter
inc
cltd
cmp
sbb
mov
das
xchg
xchg
xchg
jmp
mov
adc
cmpsb
mov
pop
push
push
jl
or
ret
pop
aaa
in
adc
in
fists
cltd
sets
arpl
and
xchg
push
pop
dec
in
xlat
xchg
ret
lret
pop
jns
push
push
cwtl
es
inc
test
or
push
lret
mov
mov
je
push
ds
cwtl
inc
xchg
mov
dec
dec
cmp
cltd
out
push
and
dec
pop
stos
mov
lret
and
dec
inc
pop
mov
xchg
xchg
or
cld
cmp
outsl
clc
in
xchg
lret
or
xchg
std
mov
or
inc
dec
cwtl
xchg
mov
mov
xchg
jge,pn
pop
jecxz
push
nop
xchg
adc
mov
rorl
cltd
imul
rcrl
inc
insl
jae
mov
jge
xchg
test
je
adc
sbbl
and
or
pop
or
dec
mov
push
sarl
push
cmp
js
jge
xchg
jg
xchg
adc
fisttps
mov
ficoml
push
jb
xchg
ror
sub
mov
leave
push
clc
and
push
pop
push
dec
repnz
sub
sahf
enter
dec
dec
adc
mov
scas
or
pop
lea
or
out
movsl
sub
mov
pop
in
mov
fisttpll
arpl
push
rorb
xchg
push
xchg
pop
out
loope
xchg
jp
pop
fisubl
fldenv
arpl
rclb
sarl
movsb
fistl
jns
xchg
dec
test
dec
push
inc
push
or
int3
jge
cmp
cmpsb
cltd
mov
push
js
pop
je
sbb
cs
rcll
push
dec
jl
icebp
xchg
lret
rcll
adc
jno
pop
push
jge
jnp
jb
and
and
negb
aas
adc
and
out
lds
out
mull
fldenv
cmpsl
dec
jle
jns
pop
call
rorb
mov
ror
xchg
pop
adc
xchg
add
or
xchg
rorb
mov
fmuls
fnop
or
push
inc
hlt
rorl
mulb
dec
push
rcll
ja
push
pop
aam
sub
loope
leave
dec
sbb
dec
outsl
aam
nop
push
mov
lahf
dec
push
popl
push
jns
enter
mov
dec
nop
rorb
inc
jl
mov
or
dec
push
cltd
fs
mov
sbb
hlt
dec
push
int3
dec
mov
fstpt
aad
mov
push
push
adc
adc
dec
rcl
pop
xchg
xchg
xor
pop
lret
cmpsl
mov
push
call
dec
mov
jle
lret
sub
adc
cmpsb
jecxz
adc
add
jo
push
cmpb
lahf
or
xchg
fldenv
or
xlat
push
xchg
lret
enter
adc
test
jl
cltd
jns
mov
mov
cmc
cltd
loope
dec
push
lock
xchg
fwait
inc
dec
adc
jo
and
out
pmuludq
lret
pop
and
adc
repnz
jmp
leave
and
cltd
mov
aam
out
push
push
xor
les
shrl
adc
int3
push
mov
adc
push
push
retw
cltd
js
nop
imul
flds
pop
xchg
jge
js
pushf
mov
adc
int3
arpl
push
outsl
xchg
sub
mov
outsl
arpl
test
dec
rcll
xlat
ficoml
aam
sbb
fstl
fs
xchg
mov
lds
and
aas
les
xchg
movsb
repnz
rcll
inc
daa
pop
mov
outsb
xchg
popf
xchg
or
push
xchg
mov
sarb
test
lock
pop
ficoml
inc
cmp
loopne
sub
imul
lret
fs
xchg
jb
stc
lret
insl
jle
sbb
testb
sub
ja
or
mov
mov
add
jge
push
push
ss
loopne
xchg
fstpl
jp
dec
js
aad
adc
xor
add
fnstenv
jns
sbb
hlt
addr16
nop
or
mov
loopne
or
inc
sub
sub
and
enter
cltd
rcrl
movsb
inc
hlt
dec
or
jge
xchg
xor
lret
mov
lea
push
inc
sbb
inc
push
xchg
jae
cwtl
lret
js
in
nop
adc
push
jne
rcl
xorl
sub
shll
dec
mov
mov
lds
es
cmp
lret
leave
test
pop
adc
fiaddl
fcoms
hlt
xchg
pop
push
jno
mov
inc
lret
repz
cmpsb
xrelease
push
mov
iret
or
stos
jl
jle
push
sti
leave
sarl
out
jne
dec
leave
push
dec
mov
pop
and
xchg
push
mov
daa
ret
test
dec
push
aam
adc
sub
dec
iret
dec
lret
push
out
fst
sti
mov
es
sub
int
push
lret
cmp
rclb
int3
pushf
mov
shlb
push
xchg
xchg
xor
jns
in
ja
imul
clc
testl
push
or
xchg
push
dec
pop
adc
in
lods
mov
lret
cld
inc
push
in
push
idivb
gs
nop
rorb
adc
sbb
les
jnp
dec
mov
or
insb
jnp
sbb
aam
pop
dec
lret
rolb
pop
int3
cwtl
aad
pop
and
mov
rorb
sub
lea
jle
insl
aad
setne
aam
cltd
mov
enter
imul
rclb
push
fiaddl
and
int3
or
xlat
jl
pop
or
or
mov
push
lcall
push
xor
test
dec
dec
jg
lcall
int3
movsb
aaa
push
lret
rcr
rcl
push
push
jle
adc
pop
movsl
sub
dec
push
dec
sbb
mov
or
jno
push
dec
inc
fldl
xchg
sarl
loopne
mov
xchg
fdivr
aad
jg
rol
lcall
xchg
adc
or
sbb
je
in
jns
or
adc
dec
ficomps
push
dec
cmp
das
or
adc
outsl
sbbb
pop
push
or
xchg
jecxz
mov
xlat
nop
jmp
inc
leave
cmpsl
add
fcomps
add
mov
in
or
pop
gs
xchg
xlat
mov
cwtl
adc
mov
or
pop
mov
je
fs
lret
or
loopne
enter
ja
push
add
std
dec
iret
sarb
and
dec
dec
je
imul
mov
push
mov
into
xor
xor
add
xchg
adc
push
les
adc
sbb
enter
lds
movsl
jne
push
adc
or
cmpsl
outsb
in
inc
and
pop
push
loope
push
adc
adc
iret
sbb
mov
adc
xchg
jecxz
xchg
push
jne
or
mov
leave
xchg
xchg
call
push
and
or
cltd
je
add
in
lret
and
push
mov
jne
aam
dec
int
push
pop
lret
sbb
int3
adc
movsb
cwtl
enter
xlat
pop
add
dec
sbb
in
jns
push
dec
adc
lods
and
setb
insl
insl
fcoms
repz
in
xchg
pop
hlt
adc
add
ficompl
xchg
fisttpl
loope
mov
or
inc
jmp
adc
cmpb
push
xchg
push
push
mov
cltd
dec
fmuls
loop
psrlq
stc
push
lahf
scas
movsb
sbb
jbe
pop
push
int
cmpsb
push
outsl
int
cmpsb
pop
add
add
xchg
dec
nop
into
jns
push
jg
xor
loop
cltd
loop
push
addr16
cmp
sbb
add
push
and
jbe
std
dec
ja
push
xchg
dec
xchg
call
add
rorl
lret
cmpsl
adcl
dec
mov
or
inc
test
les
pop
ja
pop
or
xchg
push
ss
dec
ficoml
nop
add
dec
jbe
or
lods
pushf
sti
pop
mov
lds
addr16
lret
jbe
jns
sub
in
sbb
std
xchg
and
xchg
adc
inc
and
pushf
mov
repz
ret
int
jg
inc
push
mov
xchg
leave
dec
inc
popf
adcb
sbb
or
fists
enter
repnz
pushf
popa
sbb
loop
adc
sbb
cmp
dec
or
xchg
sbb
xchg
insl
jb
push
and
adc
andnps
xchg
mov
xlat
or
pop
cld
pop
jo
repnz
push
out
lea
lcall
xchg
leave
dec
pusha
xchg
repnz
mov
pop
adc
dec
or
push
push
dec
ja
xchg
mov
or
ja
pop
xchg
nop
mov
pop
shrb
lcall
adc
or
sub
call
and
sub
in
or
gs
pop
sbb
xchg
xchg
adc
xchg
pop
sbb
push
sti
push
mov
outsl
imul
xchg
negl
sub
push
iret
xchg
dec
lea
xchg
bound
xchg
sbb
xor
xchg
sbb
inc
mov
mov
arpl
fstps
sub
add
xchg
std
lods
push
mov
jg
enter
xchg
push
pop
lea
push
dec
hlt
mov
test
push
int3
iret
dec
loope
nop
aam
stos
push
gs
sbb
cwtl
push
jns
jns
xchg
push
cltd
ficoml
lcall
in
iret
or
mov
or
jns
jge
dec
sarl
xchg
push
adc
adc
sub
adc
leave
dec
xchg
xchg
iret
mov
push
jns
lock
arpl
rorl
sarb
adc
xorl
cmp
enter
dec
or
test
stos
dec
dec
icebp
mov
mov
dec
adc
dec
push
inc
push
jns
push
test
cs
or
pcmpgtw
jae
movsl
or
or
enter
adcb
jle
xchg
mov
pop
inc
loope
xchg
lret
mov
or
aam
pop
push
sub
pop
push
mov
adc
pop
jno
or
mov
mov
xor
or
movsl
mov
aam
iret
pop
aaa
in
push
fmull
sub
lea
addr16
shlb
adc
loopne
fucomp
lret
xchg
fs
fmull
enter
fwait
xchg
lock
sahf
adc
adc
cmp
lret
mov
cmovge
mov
lcall
fistps
rcll
push
and
xchg
or
xor
push
lcall
repnz
xchg
xchg
pop
pop
out
out
jo
pop
xchg
mov
fwait
mov
fcom
xchg
mov
jae
sbb
gs
dec
pop
push
leave
sbb
push
inc
cltd
sbb
xchg
roll
dec
negl
and
and
nop
jo
shr
fcoms
scas
lahf
adc
xlat
jns
mov
pop
push
push
inc
and
push
adc
add
pushf
sbb
inc
cmp
rcll
arpl
xchg
mov
xor
cmp
scas
ljmp
push
pop
enter
and
fiaddl
les
jne,pt
ficompl
ljmp
roll
push
xchg
sbbb
and
xchg
mov
push
adc
stc
push
adc
leave
in
cwtl
mov
scas
mov
lret
mov
lea
loop
adc
aad
dec
ja
rcl
add
xchg
psubsb
sbbb
xchg
fs
xchg
mov
jb
mov
jb
js
mov
or
push
jb
in
rorl
nop
and
dec
pop
lock
mov
ffree
push
jno
mov
push
ja
xchg
inc
xchg
jne
pop
adc
or
push
test
mov
or
and
push
push
mov
rcrl
hlt
add
dec
scas
pop
hlt
cmp
test
pop
cmpsl
dec
enter
in
cli
cmp
adc
or
mov
cmpsb
adc
daa
jmp
jl
leave
jmp
imul
push
aam
bswap
int3
inc
mov
and
out
push
mov
or
sub
nop
or
arpl
sbb
dec
sbb
hlt
xchg
data16
enter
adc
cmpsl
clc
and
sbb
pop
int
jno
addr16
xchg
pop
adc
cwtl
pop
add
sub
add
adc
ds
cmp
dec
lret
bound
jle
and
mov
cltd
pop
push
dec
adc
enter
xchg
flds
push
aad
push
ret
add
pop
xchg
out
cmp
out
jle
add
jle
iret
pop
out
jo
out
aam
sub
jle
nop
ret
out
adc
cmp
out
jle
imul
adc
push
ret
loopne
cmp
imul
adc
jae
push
rclb
shll
or
push
js
mov
xchg
mov
int
ss
and
and
and
orb
imull
outsb
orl
push
or
sbb
nop
pop
xchg
or
daa
sub
adc
inc
inc
or
sahf
nop
jmp
lock
push
clc
mov
cwtl
inc
inc
cmpsl
mov
and
jno
mov
rorb
mulb
dec
aam
push
dec
enter
mov
sub
sub
rcl
jge
push
cmp
out
test
ret
cltd
loope
mov
push
mov
test
ss
dec
lds
or
data16
clc
arpl
fcmove
ret
mov
sahf
mov
sbb
xchg
fstl
or
mov
lret
iret
scas
push
dec
mov
lcall
paddq
push
mov
xchg
push
push
push
or
jge
xchg
jmp
xlat
rcl
rclb
mov
scas
pushf
enter
adcl
adc
adc
mov
insb
mov
int3
aam
ds
adc
push
mov
sub
call
dec
lods
fwait
xchg
and
mov
mov
bound
inc
movsb
mov
mov
add
lret
xchg
lds
ds
push
push
lret
mov
fmuls
mov
push
out
in
xchg
dec
add
cmpsb
sahf
insb
mov
arpl
inc
cmp
or
loope
nop
pop
mov
cmc
inc
rclb
lret
fidivrl
imul
and
or
push
and
xchg
dec
mov
dec
add
in
mov
pop
or
adc
or
sub
push
or
xchg
cltd
jg
add
jnp
and
lret
rorl
jge
rcr
fcmovbe
push
lret
mov
scas
adc
add
cmp
mov
pop
iret
pop
mov
fwait
jl
mov
fmull
push
inc
push
mov
xchg
mov
rcrb
mov
jo
push
cltd
iret
dec
dec
push
xchg
inc
sbb
or
mov
xchg
xor
insb
xchg
xor
popf
in
sbb
dec
sbb
or
push
mov
sahf
test
jne
rclb
jecxz
iret
dec
dec
adc
xchg
aas
push
decl
jg
mov
push
dec
push
leave
dec
push
cmp
roll
jle
jno
and
xchg
stc
mov
push
push
rcll
xchg
mov
pop
rcrl
cltd
dec
fadds
mov
loop
xchg
dec
adc
int3
pop
xchg
xor
test
xlat
mov
xchg
push
dec
xchg
arpl
out
sbb
and
cmpsl
adc
xchg
int3
pop
xchg
outsl
fistpl
rcl
push
iret
and
adc
hlt
lods
adc
pop
inc
xchg
inc
stc
test
test
push
leave
adc
xchg
sub
add
dec
xchg
loope
nop
ss
orl
mov
arpl
popl
arpl
mov
dec
aam
ss
insb
dec
imul
test
enter
adc
fadds
and
push
icebp
lods
lea
dec
push
lea
aam
push
roll
and
movsb
pop
int3
inc
testb
inc
inc
popl
add
mov
enter
xchg
adc
jne
push
push
jle
jg
xchg
sarb
xchg
mov
lret
xchg
dec
insl
rcrb
xchg
leave
xchg
push
xchg
es
push
mov
dec
cmp
sub
and
xchg
pop
push
les
mov
and
add
add
leave
nop
push
fidivrl
xchg
inc
pop
push
or
lcall
loope
nop
mov
and
mov
icebp
ja
xchg
inc
shl
pop
mov
test
leave
or
mov
jo
les
mov
and
mov
loop
sbb
dec
cwtl
repz
mov
ja
lock
dec
ds
pop
pop
stos
xor
adc
push
sbb
movsb
hlt
sbb
mov
dec
inc
test
xchg
or
iret
push
enter
push
mov
outsb
fcoms
adc
and
dec
xlat
or
jno
jmp
out
mov
ficoml
sbb
mov
push
pop
inc
sbb
popf
dec
arpl
push
xchg
ret
mov
dec
dec
or
add
mov
scas
or
push
xchg
dec
sbb
jns
iret
mov
xor
cmc
je
inc
push
push
leave
and
adc
dec
imull
push
popf
out
inc
xchg
push
adc
mov
push
pushf
push
data16
bound
dec
or
mov
int3
leave
arpl
pop
test
xchg
in
adc
and
jno
dec
inc
rorb
iret
dec
adc
push
xchg
scas
xchg
gs
xlat
cltd
xchg
cmovge
push
int3
sub
dec
dec
jecxz
cmp
jns
push
push
dec
adc
dec
lret
add
andnps
mov
pop
lret
push
mov
xor
jae
lret
or
dec
jge
notb
jae
daa
pop
outsl
movsl
aad
or
jnp
inc
jge
inc
xchg
and
pop
arpl
mov
lret
rorl
xchg
jl
mov
dec
push
gs
rcl
adc
lret
xor
dec
and
lods
mov
gs
xchg
xchg
pop
pop
jg
mov
xchg
push
sub
push
push
jns
inc
jnp
sbb
push
int
cmp
cs
cld
lea
nop
dec
fimuls
pop
or
jo
add
xchg
repnz
dec
and
cwtl
ja
xchg
addr16
pop
fimull
push
dec
daa
fcomps
rorl
gs
adc
xchg
xchg
imul
rorb
pop
pop
in
rorl
xchg
or
shlb
jge
xchg
pop
mov
and
fcom
xchg
xchg
adc
push
and
out
jl
fidivs
adc
push
add
push
sub
popf
and
fstl
pop
loopne
pop
outsb
fstl
xchg
and
lret
jmp
ja
jge
push
vmwrite
movsb
adc
mov
ret
jno
or
adc
or
pushf
adc
fisttps
cltd
adc
mov
sbb
cld
imul
mov
fcomi
lret
arpl
mov
push
mov
loopne
push
jmp
cwtl
in
mov
rorl
lahf
mov
rorl
in
xchg
mov
fmul
pop
rclb
dec
or
xchg
setb
shlb
cmp
cmp
aam
cmp
pop
pushf
xchg
decb
lods
into
mov
int3
movsb
nop
xchg
lret
test
add
xchg
adc
cltd
adc
fs
mov
arpl
pop
iret
xlat
cmpsl
shrl
rolb
nop
popl
aas
push
xchg
xchg
pop
adc
add
dec
xchg
mov
dec
inc
shll
leave
adc
les
dec
mov
pop
cmp
mov
call
imul
xchg
outsl
decl
dec
dec
dec
cmpsb
popf
add
sar
xchg
imul
sub
dec
test
adc
pop
iret
sbb
push
or
out
scas
pop
push
xor
lea
dec
mov
cmp
and
inc
and
fimull
data16
clc
dec
test
leave
pop
or
xchg
push
xchg
ret
jg
push
dec
push
dec
inc
xchg
adc
or
lret
xor
adc
sub
inc
xchg
xlat
sub
dec
sub
lea
lret
imul
xchg
push
mov
inc
mov
jmp
or
mov
mov
rorl
or
or
enter
mov
pop
outsl
stc
arpl
popl
push
xchg
mov
lods
xchg
rclb
or
xor
and
mov
mov
jae
add
or
adc
sahf
daa
xor
mov
adc
adc
in
cwtl
xchg
inc
ljmp
dec
push
cmpb
mov
fmuls
gs
movsl
je
or
pop
sarb
test
rcll
das
sbb
enter
mov
xchg
sub
jo
push
jno,pt
xchg
xor
xchg
cwtl
imul
leave
mov
adc
mov
cmp
dec
aam
xor
test
sahf
adc
aad
out
test
pop
flds
and
rcll
jecxz
xchg
sar
add
nop/reserved
jp
fwait
mov
mov
hlt
or
adc
push
iret
cld
pop
or
adc
inc
sub
dec
in
push
sbb
pusha
inc
lock
jmp
adc
dec
cltd
or
xor
repz
adc
jne
dec
nop
popa
pop
cltd
bound
lock
mov
add
sub
jl
andb
adc
inc
pop
jmp
add
je
xchg
jbe
pop
xchg
push
push
fists
xlat
inc
loopne
addr16
lahf
push
mov
fcoms
dec
adc
adc
cmc
fsubp
add
mov
or
mul
pop
push
xchg
adc
xor
push
les
mov
repz
fld
pop
adc
sbb
pop
xchg
adc
cmpsl
push
testl
cs
xchg
es
or
or
mov
dec
jbe
adc
int
sub
movsl
jb
movsl
jle
xchg
in
push
and
push
sbb
sbbl
dec
pop
ss
mov
mov
jns
dec
addr16
out
sbb
or
jne
push
pop
ja
push
iret
in
adc
nop
lret
pop
mov
push
or
cmpsl
leave
cmp
hlt
int3
leave
call
push
mov
xchg
js
scas
xchg
xchg
xchg
mov
dec
mov
or
mov
inc
jge
cmc
push
dec
cmpsl
xchg
jnp
cwtl
dec
jo
sbbl
leave
dec
iret
push
cwtl
addb
rcl
xor
test
ret
cld
add
mov
fsts
sbb
fists
mov
daa
dec
aam
ja
dec
or
xchg
jp
lds
pop
adc
push
mov
movsb
cld
aam
hlt
mov
adc
aam
add
inc
aam
imul
dec
fadds
pop
aam
mov
xlat
ljmp
outsl
xchg
cwtl
xchg
adc
mov
mov
lods
adc
mov
in
push
clc
mov
in
mov
and
dec
iret
hlt
mov
jne
sbb
cmp
push
fs
dec
dec
mov
pushf
cmovae
mov
es
and
push
dec
push
mov
in
in
arpl
pop
mov
adc
ljmp
testl
lcall
xchg
mov
sbb
add
dec
adc
fiadds
and
rcrl
lea
mov
mov
and
push
fdivrs
push
xchg
or
xchg
shl
pop
inc
lret
scas
rcrl
xchg
adc
mov
mov
dec
in
xchg
lret
iret
dec
dec
test
sahf
adc
add
xchg
xlat
mov
lret
imul
adc
shl
dec
in
adc
inc
dec
xchg
add
mov
or
nop
jl
sbb
mov
push
mov
cltd
int3
adc
or
adc
sub
push
push
or
rol
fs
dec
jecxz
pop
pop
inc
cwtl
mov
push
cltd
dec
imul
jnp
sub
imul
movsl
jp
sbb
pop
lcall
rcr
imul
mov
xorl
loopne
mov
cli
dec
mov
adc
and
pop
jns
cwtl
or
and
adc
repnz
in
and
shrb
lcall
jg
jg
jg
fs
dec
enter
cmpsb
imul
lret
xchg
repnz
pop
mulb
push
iret
add
jl
clc
ja
adc
xor
mov
shrl
les
mov
fwait
inc
lds
loop
xlat
rcll
mov
inc
nop
inc
or
xchg
push
pop
mov
pop
dec
xlat
xchg
arpl
xchg
mov
arpl
xchg
iret
shl
jg
insb
fwait
leave
call
leave
test
mov
adc
add
push
lret
push
mov
xchg
lcall
pop
nop
popf
jge
test
jge
xchg
or
data16
xchg
int3
add
add
push
xchg
cwtl
xlat
sbb
fs
aam
andb
xchg
pop
sub
data16
pushl
jno
arpl
movsb
cmp
ja
xchg
mov
inc
mov
pop
dec
inc
je
jae
push
xchg
rclb
xlat
loopne
in
pop
dec
dec
lods
lret
aam
xchg
jns
nop
iret
mov
sbb
and
out
cld
ljmp
dec
inc
cmp
aam
push
dec
out
and
sbb
sub
adc
adc
inc
adc
lods
dec
mov
adc
lcall
mov
push
int3
adcb
repz
sbbl
dec
call
adc
xchg
sub
psubusw
and
fstps
fucomi
cmp
sahf
rclb
dec
pop
mov
mov
pop
hlt
adc
ljmp
mov
arpl
dec
xor
xchg
lds
pop
lret
or
xchg
dec
je
mov
dec
lret
lock
ja
xchg
adc
lcall
or
adc
adc
arpl
popf
jbe
dec
push
adc
add
cmova
add
add
sbb
mov
pop
fstpl
jo
ss
loope
adc
xchg
iret
dec
dec
nop
mov
pop
pop
subl
ffreep
sub
xor
mov
pop
hlt
sbb
jne
mov
cmc
bound
cwtl
jle
adc
sbb
jmp
fwait
stos
pop
push
xchg
mov
add
sub
adc
xchg
push
ret
push
not
jno
pop
adc
xchg
movsl
or
hlt
pop
dec
push
mov
int3
ret
jnp
fmuls
cmc
push
mov
in
fimull
sete
sarl
and
or
xchg
mov
mov
rclb
pop
adc
dec
xor
xor
outsb
mov
pushf
aam
sbb
roll
dec
push
adc
push
mov
int3
or
aam
push
test
xchg
pop
dec
or
dec
shl
bound
jbe
lahf
pop
dec
push
je
pop
sub
push
cwtl
push
push
popf
mov
stos
sub
ljmp
fwait
popf
push
lret
dec
pop
nop
cmp
mov
ds
dec
jp
sub
fisubl
push
lahf
aam
adc
mov
sbb
rcrl
hlt
jge
cmp
push
stos
in
scas
mov
fists
push
lret
nop
or
popf
rclb
cwtl
int
ja
lret
jle
dec
xchg
int3
xchg
lret
cltd
shrb
sub
mov
adc
dec
jge
ret
ljmp
push
adc
aam
mov
ret
sub
push
int3
push
shl
xlat
ljmp
pop
dec
jns
sub
test
inc
sbb
sbb
leave
dec
call
add
in
xor
jo
or
push
loopne
jecxz
pop
push
adc
loope
outsl
mov
jecxz
push
xor
imul
aaa
xchg
cwtl
adc
adc
lock
es
movsb
jle
push
adc
je
hlt
gs
hlt
add
or
ss
jecxz
push
or
mov
mov
mov
xchg
cltd
pop
rcll
adc
add
iret
rorb
push
push
decb
int3
enter
js
fstl
rcrb
pop
or
in
fisttpll
push
loop
dec
and
xor
mov
mov
mov
or
sub
push
adc
loop
adc
dec
and
movl
add
xchg
fcmove
cmpsl
and
cltd
push
inc
mov
clc
negl
and
adc
or
out
int3
fcmovb
and
mov
jl
lock
or
out
movl
push
jns
lret
cwtl
adc
test
adc
fisttps
fs
sbb
popf
loope
dec
mov
shrb
add
int3
push
jbe
sbb
adc
xchg
stos
mov
pop
lret
inc
mov
cmp
or
and
inc
adc
hlt
insb
or
es
add
daa
pop
movsb
jns
mov
mov
xor
ss
cmc
push
or
push
loop
fldenv
movsb
out
pcmpeqw
mov
in
mov
push
or
mov
aam
rcrl
call
jb
sbb
ds
push
in
inc
popf
stos
xchg
in
sbb
mov
xchg
xchg
sarl
mov
test
jge
and
mov
in
in
in
mov
loop
in
pop
pop
das
dec
fcomps
lea
push
push
xchg
enter
adcl
xlat
jbe
loop
je
test
or
and
adc
and
mov
mov
dec
and
push
xchg
rorb
adc
sbb
jno
xchg
dec
dec
pop
adc
cmp
dec
ja
adc
push
mov
int3
dec
dec
pop
clc
mov
cmpsb
cmp
xor
dec
aas
adc
lret
xchg
sbb
jl
or
or
iret
nop
rorb
sub
dec
jg
jne
push
rorb
push
dec
pop
xchg
inc
dec
jne
jns
std
xchg
adc
jle
pop
fwait
rcll
ja
pop
cltd
cli
xchg
fimull
and
mov
pop
mov
push
out
add
arpl
mov
jmp
add
mov
clc
pop
or
cmc
in
adc
push
jns
addl
arpl
out
lahf
shll
push
dec
lcall
jmp
cli
xor
pop
enter
fcmovbe
inc
push
push
pop
enter
mov
int3
xchg
mov
and
lret
lds
loope
add
or
ja
xlat
or
aas
hlt
insl
xor
push
loope
mov
push
ds
jae
aad
mov
xor
xlat
jge
hlt
pusha
aam
inc
mov
add
in
fwait
mov
mov
in
nop
dec
lret
inc
je
test
xchg
push
or
aam
xchg
jo
iret
xchg
je
dec
rclb
jmp
xchg
xchg
or
adc
mov
or
enter
rcr
push
fisttpll
pop
push
lret
push
popf
or
sub
and
mov
loopne
or
iret
adc
repz
ds
pshufw
mov
xchg
pop
sbb
mov
dec
rorb
shlb
cwtl
adc
push
and
icebp
insl
cld
dec
mov
pop
push
inc
adc
in
les
cmp
dec
dec
out
push
and
pop
cmpsl
and
lds
sbb
daa
mov
or
pop
push
dec
mov
or
dec
repnz
pop
stos
call
cmpsl
fcmovu
push
orb
cmpsb
rclb
jae
nop
cltd
rcr
xchg
adc
dec
pop
iret
insb
aam
xchg
lret
dec
lock
xchg
push
or
sub
xchg
nop
xchg
shrl
push
idivl
and
mov
fmuls
push
inc
rorb
push
cmpsb
ret
jnp
lret
lret
xor
arpl
out
adc
out
adc
mov
jecxz
rcll
addr16
sbb
pop
loope
push
xchg
push
push
std
ja
push
repnz
pop
cwtl
test
orb
xchg
lret
adc
in
icebp
rcll
loop
rorl
inc
lcall
sub
cltd
sub
lods
movsl
ss
es
mov
inc
pslld
inc
mov
arpl
lods
nop
lods
rolb
sub
call
sbb
dec
enter
xchg
rolb
add
jle
or
stos
out
cmpsb
popf
xchg
enter
mov
sahf
and
fdivs
adcl
xchg
rorb
bound
mov
adcl
push
xchg
lds
es
dec
dec
lret
adc
fadd
push
mov
scas
mov
nop
test
popf
push
dec
loopne
push
sbb
push
add
enter
pop
adcl
mov
xbegin
mov
add
lret
sub
into
jp
in
mov
mov
fdivr
mov
mov
dec
push
in
lret
dec
pop
cltd
adc
pop
sbb
ljmp
fbstp
das
ficomps
sbbl
aaa
mov
ds
or
adc
hlt
or
pop
cmovs
stos
push
and
iret
jge
int3
aam
movl
sti
xsave
or
cmc
sub
jne
mov
xchg
fsub
inc
pop
filds
adc
sahf
push
enter
mov
adc
jge
fisttps
xchg
cmp
call
dec
sub
pusha
ljmp
sub
push
insl
call
dec
les
test
mov
mov
imul
shr
lea
xchg
pop
push
push
enter
fndisi(8087
push
or
js
cwtl
xchg
xlat
jp
push
jg
xchg
mov
add
jne
push
sbb
sbb
sub
or
xchg
test
push
push
int
mov
adc
sbb
push
xor
xchg
push
or
adc
js
fsts
pop
xlat
xor
repnz
imul
iret
bnd
pop
roll
stc
stc
mov
jle
dec
adc
rcr
pushf
mov
pop
pop
popf
arpl
arpl
loope
lds
jecxz
or
xlat
push
imul
in
xchg
aam
pushf
adc
push
or
scas
jge
inc
js
push
mov
ds
xchg
sub
dec
jl
adc
std
or
sub
adc
push
adc
arpl
pop
movsb
sub
lods
outsb
mov
jle
xchg
cmp
fcmovbe
dec
xchg
pop
packsswb
xchg
lret
add
jle
mov
pop
int
pop
fcomps
cwtl
mov
add
sbb
or
scas
movsb
mov
mov
xchg
mov
pop
cmpsl
test
push
lret
xchg
xchg
sbb
xchg
mov
xchg
dec
in
in
loope
pop
fdivrs
push
int3
fwait
pop
std
mov
sbb
cmc
adc
mov
adc
mov
mov
adc
and
or
adc
add
dec
inc
xchg
addr16
xchg
inc
or
add
jecxz
xlat
push
sbb
enter
sub
scas
sbb
out
xor
ds
or
push
jg
adc
arpl
pop
jge
xchg
lea
or
fld
cmp
loopne
adc
mov
xchg
xchg
push
loop
bound
rcl
mov
lret
mov
lods
sbb
dec
fidivl
cltd
adc
lahf
push
jle
lods
pop
movsl
in
jl
sub
icebp
enter
fistl
xor
push
xchg
cmpsl
xchg
popl
push
lcall
push
cltd
xchg
xchg
pushf
adc
push
jecxz
push
xor
arpl
push
cmc
cmp
pop
das
arpl
inc
jecxz
fisubrl
and
sarb
enter
xchg
in
mov
rol
imul
or
jg
xchg
push
aad
or
cmp
xchg
adc
mov
mov
sbbb
int3
dec
xchg
add
xchg
femms
cmc
or
test
adc
imul
dec
add
pavgb
imul
push
inc
sub
or
sbb
cmp
and
je
pop
or
sarl
sbb
xor
pop
push
ds
or
or
in
mov
rcll
ret
cmpsl
sarl
adc
dec
xor
xchg
xchg
xchg
sub
nop
fwait
bound
or
xchg
in
pop
pop
movsb
xchg
roll
sbbl
cmp
jp
dec
and
pop
and
ss
pop
pop
xor
adc
loop
and
cltd
pop
push
xlat
inc
popf
sbb
outsl
mov
push
xchg
fcmovbe
dec
pop
jb
pushf
dec
cltd
lcall
or
xchg
stc
dec
jle
mov
mov
lret
stc
sbb
lcall
inc
iret
stc
jnp
sub
test
adc
cld
repz
movsl
lods
clc
pop
adc
in
adc
leave
jl
xor
jl
jno
inc
idivl
lcall
mov
push
jo
ljmp
sar
xlat
sbb
mov
xchg
xor
stos
rorb
sbb
roll
adcl
adc
inc
out
sbb
arpl
and
sbb
faddl
and
push
or
enter
lret
xchg
inc
push
addr16
shrb
xchg
arpl
mov
inc
or
push
jbe
mov
dec
mov
fnstsw
pop
pop
or
sbb
jno
adc
mov
in
dec
jbe
shlb
push
jp
lcall
fisttpll
mov
push
scas
mov
lods
push
leave
xor
pop
inc
loopne
sahf
xor
xchg
sbb
enter
lret
mov
push
pop
mov
iret
inc
rorb
leave
imul
rorl
jge
lret
mov
pop
xchg
test
stos
dec
fidivrl
or
aam
jae
dec
shrl
cmp
fadd
int3
xchg
jle
dec
adc
lret
rorb
dec
xchg
adc
dec
mov
jg
pop
xchg
in
pop
push
mov
mov
push
pop
dec
rorl
push
dec
sbbl
enter
xchg
mov
pop
xchg
aad
cmc
push
adc
mov
shrl
adc
leave
and
push
cmovp
pushf
adc
push
shrb
nop
mov
iret
adc
int3
and
dec
mov
xchg
mov
pushf
or
rorb
iret
push
repnz
ret
and
cmpsl
insl
push
xlat
jns
pop
enter
dec
dec
adc
pop
and
xchg
or
and
dec
int3
sbb
lret
push
lds
ds
in
jp
push
ror
pop
push
fxtract
lds
sarl
and
rol
fs
and
or
mov
xor
mov
dec
dec
sbb
adc
push
add
in
pop
sbb
or
or
xchg
aam
dec
movsl
and
mov
xor
or
jle
popl
pop
push
rcl
mov
dec
out
and
sbb
xchg
cwtl
mov
mov
push
adc
inc
lea
and
std
add
adc
adc
sbb
fwait
pop
iret
mov
mov
and
dec
fstpl
push
push
cltd
cwtl
roll
in
lea
sbb
xchg
sbb
jl
dec
push
outsb
push
and
pop
dec
xchg
iret
fimull
fcom
lea
lds
jne
inc
fimull
rorl
or
adc
pop
push
adc
ret
icebp
sub
mov
sub
mov
and
or
or
fs
dec
sahf
add
mov
xchg
rclb
pop
mov
mov
sub
and
dec
cwtl
or
adc
or
xchg
or
iret
push
insl
inc
aam
push
roll
and
push
dec
leave
fdiv
mov
cltd
xlat
and
or
rorl
imul
and
adc
lods
test
pop
sub
adc
adc
dec
shlb
or
ret
mov
push
repz
out
mov
insb
inc
push
cmp
xchg
dec
rol
dec
enter
in
adc
out
out
adc
mov
xchg
xchg
push
add
xchg
fcoms
fimull
xchg
pop
xchg
mov
lret
xlat
jg
push
iret
test
imul
and
lgs
xchg
cli
arpl
roll
popf
out
cmpsb
mov
movsl
jb
fstl
push
pop
testb
mov
mov
test
or
call
out
ljmp
mov
iret
lods
fisttpl
add
inc
cli
mov
pop
int3
int3
mov
int
pop
out
sbb
mov
rcr
push
mov
lret
adc
ja
xchg
dec
inc
mov
xchg
pushf
mov
pop
and
cmpsb
das
mov
stos
xchg
testb
hlt
and
aam
mov
lcall
enter
shl
fcmovu
and
aam
dec
adc
inc
push
adc
push
pop
sahf
dec
sbb
iret
xchg
add
sbb
leave
mov
outsl
jle
cwtl
xchg
xchg
js
enter
mov
push
mov
jle
pop
xor
fs
dec
movsb
mov
aaa
mov
or
rcr
sbb
ret
or
fsts
loopne
add
or
outsb
imul
xchg
cmpsl
dec
rcll
inc
jno
push
pushf
push
push
sub
leave
jl
sbb
sbb
xlat
add
xchg
cwtl
lods
inc
inc
or
xchg
sti
dec
dec
iret
xchg
mov
mov
xchg
sbbl
arpl
pop
inc
pop
xchg
pop
popf
movsb
xlat
fimuls
pop
ss
adc
inc
iret
xchg
cltd
push
or
push
fcmove
enter
xchg
push
add
mov
xchg
outsl
addl
dec
push
xchg
dec
fwait
xchg
negb
pop
lret
mov
push
mov
out
test
xchg
mov
insb
inc
xchg
int3
iret
dec
rorb
xchg
in
leave
jbe
dec
rorl
aam
xchg
push
movsl
jge
pop
subl
imul
adc
lahf
adc
inc
sbb
gs
nop
rcr
adc
enter
out
ljmp
shll
pop
adc
mov
push
cltd
movsl
or
test
fxch
dec
dec
cld
subb
add
rclb
xor
arpl
rolb
push
dec
push
push
icebp
push
flds
mov
popf
mov
rcll
inc
enter
sbb
pop
sahf
rorb
jno
or
pop
mov
pop
rorl
xchg
or
pop
clc
add
xchg
inc
and
inc
popf
test
vpextrw
lds
aam
mov
int3
adc
mov
lret
xchg
dec
sets
mov
inc
and
push
pop
pop
and
movsb
insb
mov
inc
fcoms
dec
adc
out
jno
xchg
push
push
int3
pop
pop
dec
inc
xor
push
cltd
xor
iret
or
or
sbb
imul
xchg
push
mov
in
dec
rorl
mov
lcall
enter
inc
unpcklps
test
pop
mov
jns
jg
fisttpl
movsb
insb
int3
xchg
xor
in
dec
repz
lcall
addr16
pop
adc
fwait
jnp
add
fmuls
leave
xlat
push
iret
jns
pushf
adc
and
add
ficoml
push
vshufps
dec
push
mov
jb
or
dec
mov
loope
cmove
mov
xchg
push
jae
xchg
xchg
xchg
pop
repnz
fsts
in
fxch
add
test
lret
xchg
int3
xor
lock
iret
jmp
xlat
adc
add
out
shlb
add
sbb
dec
jle
cld
fistl
adc
repz
mov
sub
push
ljmp
mov
mov
out
cmp
jecxz
push
xchg
out
push
jecxz
push
pop
dec
push
or
xchg
adc
cltd
add
mov
pop
or
cmp
sbb
daa
fstpl
jb
mov
and
xchg
inc
adc
fists
xchg
je
mov
or
push
dec
hlt
cltd
add
shrl
jae
sahf
add
xchg
dec
in
pop
out
adc
or
dec
and
test
ret
shll
pop
jge
cs
repz
dec
lea
test
and
mov
pop
or
push
addr16
insl
int
aam
dec
xchg
int3
lret
out
jp
aad
sti
dec
xchg
push
jecxz
leave
xchg
nop
or
adc
adc
mov
lcall
sbb
shll
xchg
xchg
or
adc
aam
xchg
pop
inc
test
adc
push
xchg
inc
push
jmp
xor
rcrl
icebp
ret
stos
adc
cwtl
and
out
lods
lahf
mov
xchg
fnstcw
subl
xchg
mov
add
pop
mov
pop
dec
sbb
and
lret
mov
mov
sub
inc
shrl
fwait
in
pop
lcall
movsb
or
je
mov
dec
mov
loop
pop
adc
iret
fisubl
in
mov
repnz
aad
sbb
or
xchg
adc
fadds
push
iret
loopne
pop
xor
xchg
sub
jbe
xchg
mov
ja
push
adc
jns
dec
pop
adc
dec
notl
push
std
mov
and
or
fmuls
xor
jbe
xchg
sti
push
xchg
sbb
xchg
jmp
sti
jne
mov
or
xchg
loope
jge
push
or
xchg
cwtl
inc
xchg
hlt
pop
adc
xchg
dec
adc
lcall
adc
jecxz
sar
sti
pushf
insl
fldt
loope
pop
push
mov
dec
or
jg
push
test
in
dec
pop
xor
and
rol
sti
dec
clc
enter
dec
popf
push
xlat
xchg
fcoms
movsb
or
pop
pop
adc
mov
sahf
xchg
adc
leave
xchg
mov
push
mov
push
dec
cmc
dec
movb
bswap
and
dec
dec
iret
imul
iretw
sahf
fmuls
loopne
in
or
mov
inc
mov
scas
sub
shlb
fcoms
dec
sbb
jno
push
jge
xchg
mov
or
xchg
jle
les
sub
lods
mov
add
rcl
lods
dec
jns
xchg
cwtl
jns
enter
jg
lods
adc
adc
push
push
shll
lock
pop
nop
push
mov
xlat
dec
enter
dec
pop
dec
xchg
or
dec
push
dec
xchg
xchg
in
dec
lret
loope
mov
loope
cltd
mov
pop
lret
push
std
xchg
adc
xor
inc
add
mov
dec
shlb
pop
and
mov
lea
call
aam
inc
jle
cltd
push
xor
gs
leave
ficoml
fbld
push
dec
cmpsb
je
push
sahf
inc
dec
or
ret
mov
mov
popa
scas
data16
popa
sbb
mov
inc
mov
movsb
pop
push
dec
xor
jp
in
int3
push
adc
call
mov
dec
jg
cmp
testb
pop
or
in
push
inc
jmp
les
xchg
adc
xchg
rorl
addl
sbb
shl
jne
mov
cmovne
rcrl
sbb
lods
gs
adc
inc
push
pop
adc
psllw
push
out
or
mov
mov
aad
mov
xor
ljmp
pop
xor
dec
and
cltd
xlat
loop
xchg
sub
mov
into
clc
lret
jp
movsl
mov
mov
sub
inc
out
xchg
push
stos
inc
pop
mov
add
leave
js
aad
sbb
jg
xchg
and
adc
daa
or
adc
mov
movl
cltd
lret
push
int
fisubs
mov
fcmovne
loopne
jecxz
pop
lret
mov
jno
rcr
dec
mov
pop
adc
xchg
mov
inc
addl
and
or
dec
mov
insb
dec
xchg
test
push
ror
aad
xlat
mov
mov
lret
and
flds
cmpsl
or
ret
sbb
test
add
repnz
cld
push
lods
or
jle
or
xchg
xor
cmc
clc
jl
sub
xor
rcll
push
push
sbb
in
and
pop
cs
xor
push
pop
cmc
dec
jge
or
adc
sti
loope
pop
nop
pop
and
xchg
lock
fsts
jle
pushf
lods
enter
arpl
test
sahf
adc
lock
hlt
adc
pop
pop
dec
imul
mov
js
and
fucom
add
loop
push
ret
test
test
lock
add
push
cwtl
inc
repz
inc
cwtl
ret
inc
lock
jecxz
xchg
ja
sub
insl
and
iret
stos
sti
sti
fs
cmp
mov
inc
mov
rclb
mov
push
dec
shll
push
rcl
iret
sarb
cmp
mov
or
add
or
inc
inc
jns
mov
or
adc
dec
jp
pop
ja
jns
push
xchg
movsb
push
mov
les
scas
push
outsb
pop
cmpsb
push
cmp
pop
enter
push
stos
inc
mov
mov
mov
pop
aas
arpl
mov
xchg
mov
pop
mov
loopne
and
inc
ret
or
in
aam
lods
out
adc
mov
outsl
push
pushf
push
daa
and
jns
or
push
lahf
cwtl
rcl
adc
adc
insl
inc
sbb
adc
cmp
xlat
sarb
mov
dec
cltd
dec
mov
push
dec
push
push
dec
dec
push
test
or
stos
xor
pop
sbb
mov
push
push
add
xchg
push
inc
mov
dec
dec
sub
gs
push
mov
fucomi
or
rorl
add
and
or
nop
push
push
mov
mov
push
inc
lcall
mov
aam
mov
pop
mov
cmp
fs
xlat
mov
mov
mov
add
repnz
sbb
push
loop
enter
shlb
sub
or
or
xlat
cwtl
in
cltd
or
pop
aaa
pop
or
mov
test
rsqrtps
mov
mov
mov
add
outsb
and
fwait
or
stos
dec
cmp
fsts
jge
fwait
and
xchg
mov
push
arpl
mov
fdivrs
add
test
lea
int3
xchg
push
mov
pop
icebp
movsb
mov
les
pushf
lea
xchg
xchg
and
mov
jne
xorb
dec
xchg
int3
xchg
push
notb
fwait
dec
test
movsb
pop
aam
enter
push
cmp
jle
loopne
addr16
loopne
enter
aam
sbb
jl
dec
test
push
leave
xlat
or
cwtl
lret
or
scas
hlt
addl
xchg
xor
fmull
mov
shll
push
push
xchg
cld
fadds
imul
mov
out
mov
leave
mov
punpckhbw
mov
pop
sahf
imul
dec
cmovp
mov
or
ret
dec
lods
popf
movsl
push
xchg
pop
iret
mov
in
icebp
sub
dec
es
mov
pushf
fst
sub
leave
adc
iret
dec
ret
jmp
enter
adc
fwait
test
jle
sahf
fwait
push
aam
add
jno
xchg
jo
mov
enter
int3
adc
cmp
data16
push
rclb
cmpl
fs
enter
jp
sbb
and
es
inc
imul
adc
xchg
lret
out
cmc
or
or
fstps
aam
bsr
arpl
ljmp
inc
arpl
and
mov
ljmp
lcall
push
inc
rcrl
mull
ud1
mov
jne
rcrb
jecxz
sbb
xchg
adc
mov
pop
mov
jp
xchg
in
rol
dec
sarb
cmp
jns
leave
jecxz
push
xchg
fimull
xchg
stc
ret
mov
fcomps
jnp
scas
fistps
dec
push
add
xchg
cmp
xchg
mov
xlat
push
aaa
cmp
push
popl
mov
push
lret
popf
sbb
ljmp
iret
and
mov
lret
mov
mov
push
mov
fimull
inc
sbb
or
or
insl
ret
mov
out
dec
mov
mov
push
icebp
mov
shrb
test
adc
jne
pop
adc
push
dec
nop
int3
arpl
cmp
xor
xchg
or
imul
iret
jecxz
dec
shl
dec
pop
inc
cld
dec
stos
test
adc
pop
push
aam
notb
xlat
daa
xchg
lcall
inc
or
mov
mov
dec
loop
add
pop
mov
push
enter
lods
pop
xor
nop
rorl
scas
movsl
insl
mov
xchg
mov
mov
loopne
or
insl
or
loop
dec
psrld
ret
jle
sub
or
imul
mov
cwtl
xchg
inc
sub
sbb
lcall
add
adc
push
lods
adc
ret
dec
mov
xchg
push
std
mov
cmp
mov
dec
sub
mov
fisttpll
push
push
lcall
popf
scas
leave
sbb
or
orb
adc
mov
pop
pop
cltd
scas
cwtl
push
jbe
out
ficoml
lods
xchg
dec
roll
enter
pushw
adc
adc
lret
ret
push
jbe
loope
ror
mov
iret
cmovo
inc
pop
xchg
mov
mov
ficoml
addb
fwait
or
cmpsl
mov
mov
mov
fmuls
dec
iret
in
lret
push
jbe
and
xchg
or
adc
add
fmull
pop
pop
jg
arpl
ds
adc
hlt
and
adc
roll
loopne
jmp
pop
push
or
jge
cwtl
xlat
out
xchg
dec
xlat
pop
mov
outsb
rorl
mov
insb
mov
mov
add
rorb
leave
jle
push
sub
xchg
adc
push
dec
aam
dec
out
movsb
rclb
mov
and
sbb
or
pop
in
rcrl
pop
push
icebp
ret
xchg
ds
in
rorb
jl
mov
inc
xchg
jns
push
xchg
sarb
adc
arpl
push
dec
mov
xchg
pushf
push
pop
mov
mov
cmp
mov
sti
mov
aam
mov
pop
cmp
dec
dec
push
pop
jno
shll
add
xor
cli
ss
mov
loopne
mov
mov
cli
stos
pop
xor
call
adc
xchg
ret
dec
jns
stos
adc
xchg
insl
fcoml
aam
iret
mov
cwtl
push
lret
cmpsl
lret
xchg
fld1
imul
cld
in
push
xor
push
xchg
sub
adc
jb
fistps
iret
and
adc
ret
pop
clc
jecxz
cwtl
fsts
cmp
nop
rorb
inc
add
push
or
push
or
jle
es
aam
xchg
or
jno
adc
or
dec
mov
jmp
dec
mov
dec
dec
adc
lea
rcrl
or
rorb
inc
adc
cwtl
dec
lret
mov
fldl
rcll
stos
adc
stc
adc
leave
xchg
and
adc
inc
adc
aam
test
ja
push
jns
stos
imul
jo
sbb
jb
iret
mov
dec
adc
je
pushf
mov
adc
xchg
aaa
inc
loopne
cmp
or
dec
shr
mov
dec
hlt
sbb
dec
imul
xchg
sub
xor
insl
mov
lods
sbb
push
mov
push
cltd
push
sub
dec
xchg
insb
or
nop
mov
push
fisttpll
fsubr
push
push
sbb
xchg
jl
fwait
pusha
jecxz
rol
or
mov
inc
fsubl
push
enter
int3
add
push
xchg
mov
slwpcb
xor
int3
lods
lods
and
xchg
jbe
dec
pop
lock
lret
movl
mov
and
xchg
xlat
add
clc
fwait
xlat
rorl
mov
loop
jns
sbb
add
lds
mov
lcall
neg
lret
arpl
dec
jne
fmuls
lods
pop
pop
pusha
xchg
push
adc
or
pushf
mov
adc
loopne
loopne
loope
push
or
roll
jmp
in
cwtl
jle
mov
push
mov
xchg
and
pop
pop
negb
leave
mov
fwait
mov
and
dec
fistl
or
sub
mov
mov
and
dec
xchg
or
or
jno
pop
dec
loop
notl
sahf
insb
add
jne
cmpsb
imul
rorb
loope
xlat
daa
xchg
or
push
adc
repnz
gs
mov
lret
pushf
cltd
cwtl
mov
stc
ja
leave
xchg
and
xchg
push
dec
lods
pop
lock
insl
mov
xchg
or
cmp
pop
or
idiv
jle
cmp
fmul
dec
pop
ljmp
mov
mov
xor
dec
in
arpl
sbb
iret
arpl
dec
xlat
sbb
mov
mov
scas
adc
mov
loopne
jns
push
push
dec
dec
xchg
xchg
sub
push
push
add
push
rcrl
or
andl
cltd
dec
jno
xchg
push
adc
mov
xchg
sbb
cltd
pop
pop
push
movsb
pop
push
or
mov
mov
lods
sbb
push
xchg
inc
loop
or
and
ds
dec
jge
adc
les
ljmp
push
sahf
shrb
mov
nop
mov
cmp
mov
dec
pop
and
cmp
pushf
rcr
fistps
pop
pop
rorl
mov
push
ja
lock
scas
sbb
xchg
sub
jnp
cmp
int
sbb
adc
xchg
push
dec
sbb
mov
push
or
xor
mov
lret
mov
test
std
or
mov
jo
loope
mov
and
pop
enter
pop
or
movsl
arpl
push
xchg
rclb
iret
pop
inc
jle
fiaddl
adc
and
mov
lahf
int
push
arpl
lret
jecxz
rcr
clc
mov
jecxz
dec
mov
push
rcrl
sub
pop
jp
push
sbb
sbb
outsl
jg,pn
cld
mov
jne
push
dec
jmp
jg
clc
add
adc
lret
test
mov
jg
aad
or
and
iret
pop
mov
cwtl
rcrb
sbb
adc
pop
xchg
push
push
dec
pop
iret
lret
pop
xchg
push
cmc
pop
movsb
test
stos
dec
and
fadd
imulb
cmc
aad
ds
in
add
icebp
push
push
stos
dec
and
push
std
pop
int3
loope
adc
xor
daa
pop
mov
cltd
cmp
dec
dec
je
wbinvd
test
pop
js
bnd
nop
stc
rcl
lret
mov
dec
outsl
xlat
adc
out
sbb
lret
inc
icebp
je
and
push
mov
and
mov
fs
fisubrl
rcr
out
push
enter
xchg
int3
xchg
adc
in
push
or
xchg
adc
sub
jl
and
adc
inc
and
xor
iret
cmpsl
jnp
adc
fs
or
das
jns
and
cmpsb
and
aad
rorl
pop
push
jg
pop
push
mov
loopne
and
nop
xchg
xchg
shl
jp
lret
mov
or
aam
rolb
xchg
mov
dec
rcll
arpl
mov
add
jle
imul
dec
jle
pop
xchg
insb
movsl
roll
out
int
bound
jle
dec
pop
adc
mov
insb
push
pushf
aad
int
ret
movsl
inc
into
mov
hlt
push
cltd
rcll
or
fnop
dec
push
dec
mov
xchg
push
mov
pop
repz
iret
adc
imul
and
rol
sub
dec
stc
popf
data16
sub
jns
mov
int3
push
setge
push
xchg
pop
inc
nop
shll
popf
push
or
shrb
push
nop
lock
ret
dec
dec
rclb
cmp
popf
jl
xchg
mov
push
fsubs
adc
test
cltd
lahf
adc
jecxz
dec
repnz
nop
rorl
sbb
inc
loop
jne
or
inc
or
jg
cmpsl
lds
push
add
xchg
and
mov
loope
push
ret
enter
in
mov
sub
je
ret
fistpl
pop
test
loopne
push
push
jecxz
nop
inc
jne
xchg
dec
rol
in
std
adc
es
outsb
daa
adc
push
std
cld
add
sbbb
int3
or
cmp
arpl
rcl
imul
setns
pop
xchg
sbb
jg,pn
pop
adc
sub
mov
rcr
mov
pop
and
iret
ror
lret
dec
cmpsl
inc
cmp
mov
rcrl
jmp
dec
dec
push
int3
cmp
cli
or
fists
loope
nop
adc
xchg
cmp
sub
aam
lahf
fists
fsts
xchg
sbb
and
adc
xlat
push
and
cltd
mov
cld
sbb
xchg
sbb
xchg
lods
inc
or
jmp
jb
xchg
rorl
adc
aam
loop
or
push
dec
push
adc
push
lret
lret
cld
add
adc
cli
push
jg
lcall
push
nop
pop
mov
dec
or
pop
ret
jmp
and
push
flds
leave
enter
gs
cwtl
fcmovbe
push
nop
lret
push
clc
jbe
and
xchg
pop
leave
and
cmp
push
mov
cmp
mov
scas
int3
push
clc
or
push
in
add
and
out
rcrl
and
xchg
out
inc
lret
dec
adc
cmpsb
das
pop
adc
cmp
int3
xchg
push
movsl
mov
mov
jge
xchg
enter
mov
xchg
xchg
insl
lods
or
jbe
add
xchg
mov
lods
lret
add
test
dec
sbb
fs
fimull
jmp
or
dec
push
mov
adc
lds
mov
lahf
sbb
inc
lret
jmp
lret
adc
mov
or
movsb
cwtl
aam
inc
cmpb
in
or
push
xchg
mov
pop
cmpsb
push
mov
push
mov
cwtl
mov
mov
xchg
and
push
loope
or
xchg
iret
push
adc
jl
xchg
shl
loopne
lret
pop
push
dec
mov
jmp
lret
inc
jmp
sbb
xchg
out
or
pop
enter
xor
add
loopne
loopne
sub
popw
xchg
or
rorb
xchg
or
rep
jo
jmp
add
movaps
mov
dec
push
pop
rcrl
jne
rcl
adc
or
push
decl
push
mov
lods
fstl
inc
mov
loop
adc
dec
mov
or
sbb
jl
fs
push
inc
add
dec
xchg
sub
dec
push
adc
loop
cltd
adc
xchg
iret
add
or
xchg
xchg
test
cltd
pop
xchg
adc
enter
xchg
cmp
lea
xchg
push
mov
xchg
rorb
adc
mov
mov
in
push
adc
and
add
cltd
iret
loope
fmuls
loopne
and
or
nop
xchg
fcompl
ds
dec
mov
pop
sub
push
and
rcrl
sub
fisubrl
addr16
or
lcall
mov
clc
adc
je
inc
push
cmpsb
cmp
push
imul
mov
dec
test
mov
mov
inc
inc
fs
pop
push
add
inc
aam
cli
push
adc
movsl
or
adc
add
out
sbb
gs
pop
dec
mov
push
xchg
int
dec
fiaddl
mov
pop
out
lret
outsl
or
ficoml
and
leave
dec
xchg
push
pop
dec
iret
test
cmp
and
adc
add
nop
xchg
mov
xchg
dec
jmp
je
mov
xchg
nop
push
xchg
cs
xchg
xlat
cmc
inc
inc
adc
hlt
in
imul
rcr
inc
adc
push
sub
lahf
dec
cmpsl
call
xor
and
sbb
dec
pop
ret
rcrb
push
mov
and
shr
xor
or
daa
adc
popf
fildl
xchg
iret
sub
or
dec
out
in
pusha
enter
adc
nop
fcmovnbe
cwtl
cli
jne
sahf
xchg
mov
mov
dec
pop
hlt
push
mov
dec
outsb
push
or
or
rorl
dec
rorl
nop
dec
jo
outsl
xchg
adc
pop
mov
loop
or
push
add
rcr
enter
iret
in
dec
arpl
cmp
and
mov
fxch
xchg
rolb
fisubl
or
push
cwtl
leave
lea
adc
dec
xchg
pop
dec
inc
nop
sbb
mov
movsb
xor
ja
fildl
xchg
sbb
mov
mov
sarb
scas
leave
int3
cltd
scas
dec
and
xlat
jecxz
xchg
push
pop
loop
out
mov
rorb
jle
add
dec
jle
in
sub
and
lret
or
dec
jp
and
cmpsb
movsl
sub
aas
pop
mov
or
gs
mov
dec
and
sbb
push
dec
enter
xchg
movsb
push
dec
cmpsb
sbb
jno
jo
push
dec
arpl
inc
cltd
or
pop
adc
jge
pop
arpl
or
test
lret
xor
jg
jg
dec
dec
stc
rol
push
push
xchg
in
aam
sbb
push
push
push
ret
xlat
gs
adc
adcb
addr16
add
sbb
push
ss
pop
mov
adc
xchg
push
cmp
sub
mov
xchg
sbb
lret
xchg
leave
rolb
nop
pop
add
ja
pop
rcll
orb
pusha
adc
mov
imul
mov
lret
leave
mov
jns
xchg
enter
sbb
dec
push
pop
push
fsts
sbb
icebp
jbe
int3
lret
enter
xlat
push
dec
xchg
jmp
push
jb
jl
test
adc
pop
adc
mov
mov
rorl
or
mov
notb
inc
jg
addr16
loopne
je
inc
fldenv
test
jp
add
pop
xchg
enter
inc
jl
fcom
sarl
sbb
aaa
vmread
nop
dec
adc
mov
repz
or
dec
push
fidivl
aad
fs
mov
cmp
inc
roll
rol
and
data16
pop
mov
or
dec
add
movsb
sbb
call
ja
adc
jns
lcall
data16
xchg
or
insb
inc
shlb
inc
jecxz
or
lods
inc
dec
mov
mov
xchg
add
dec
xchg
adc
jle
push
jmp
out
cwtl
xchg
push
xor
je
movsb
jl
push
mov
lret
adc
pusha
and
inc
gs
rorb
adc
pop
dec
pop
les
mov
icebp
movsb
pop
cwtl
fmuls
mov
scas
xlat
dec
das
add
dec
or
xchg
rorl
mov
dec
pop
xchg
xchg
cmc
xchg
adc
dec
dec
sbb
in
fmul
stos
jecxz
or
in
rcl
shll
mov
jne
nop
rcrl
xor
scas
dec
stos
cmp
loopne
rclb
mov
in
rol
shll
xchg
xor
fistpll
rcrb
push
dec
sahf
inc
push
lret
mov
gs
rcll
enter
scas
sbb
fstl
mov
pop
pop
aam
cmp
or
imul
mov
inc
pusha
ret
cmpsl
btr
cli
in
xchg
inc
es
fstps
nop
dec
mov
dec
xor
push
or
adc
jne
mov
or
cwtl
adc
daa
pop
mov
dec
and
or
rorl
inc
fcmove
jns
movsl
lds
xor
ret
ja
loopne
push
and
dec
insl
lods
xlat
ds
ss
sub
adc
enter
shl
insl
dec
dec
jmp
add
pop
arpl
int3
andb
mov
ss
sahf
xchg
cmp
mov
pop
dec
stc
mov
clc
out
lret
push
fcomps
or
sbb
mov
std
dec
cwtl
cltd
inc
xchg
arpl
and
push
int3
dec
xor
xor
cs
push
xchg
out
xchg
psubusw
adc
out
xchg
jp
jns
ss
pop
clc
lods
pushf
jle
jmp
add
iret
xchg
negb
cli
xlat
scas
in
jbe
lret
aad
icebp
data16
dec
and
in
xlat
dec
cwtl
jnp
pop
adc
shll
dec
lret
push
hlt
iret
or
inc
inc
push
int3
mov
mov
mov
iret
insl
pop
push
xchg
push
xchg
movsb
adc
shlb
inc
cld
icebp
add
dec
push
jne
dec
adc
sub
cwtl
imul
jmp
lock
and
dec
fnsave
ficoml
mov
xchg
xchg
hlt
push
push
push
sbb
xchg
or
sub
pop
or
dec
and
push
xchg
outsl
loop
mov
fsubs
push
inc
add
sbb
xchg
or
test
aaa
sbb
mov
sti
sahf
inc
push
arpl
fbld
iret
ret
mov
in
adc
shll
sbb
push
mov
inc
adc
iret
dec
mov
sbb
pop
adc
xchg
mov
mov
or
mov
push
arpl
fmuls
pop
xor
push
xlat
shrl
adc
adc
int
mov
push
fwait
or
push
pop
sbb
sbb
in
or
cmp
imul
mov
sahf
mov
dec
xchg
pop
push
adc
iret
adc
int3
pop
je
and
insl
cwtl
lret
pop
and
xor
push
cmp
dec
xchg
xchg
repnz
stc
mov
ret
xor
js
lcall
dec
dec
jg
jns
push
adc
sahf
shlb
add
jne
xchg
adc
adc
xchg
cltd
mov
mov
or
je
pop
and
enter
rorb
mov
rcrb
push
and
nop
adc
add
xchg
pop
call
jg
lcall
arpl
mov
nop
cs
mov
mov
pop
mov
pop
dec
mov
test
leave
mov
xchg
cmpsl
pop
jmp
imul
jmp
cmp
jns
adc
push
int
push
cwtl
lret
adc
add
push
xchg
or
cltd
rorb
push
jns
inc
inc
stos
add
adc
cmp
mov
pop
pop
int3
jl
aam
sub
jns
fisttps
push
daa
xchg
iret
dec
inc
jle
lret
adc
mov
adc
pop
call
rclb
rclb
dec
adc
pop
iret
or
stc
push
mov
or
xchg
push
pop
lcall
mov
inc
xchg
jp
out
adc
push
fbld
or
cmp
lods
dec
imul
mov
pop
arpl
sub
dec
or
sbb
push
and
mov
insb
mov
sbb
push
or
add
loopne
arpl
test
xchg
ds
push
or
and
fnstcw
sub
int3
add
pop
mov
lret
jecxz
fiaddl
lret
sahf
and
nop
xlat
dec
push
jne
enter
add
lret
pop
or
mov
in
jg
imul
lahf
xchg
dec
test
adc
or
iret
lods
sbb
add
mov
xor
adc
je
sahf
cmp
aam
add
mov
jmp
in
les
inc
roll
mov
adc
test
xchg
outsl
outsl
jle
shl
cmp
movsb
rorb
add
cltd
pop
inc
stos
iret
movsl
mov
icebp
mov
leave
icebp
jle
shll
xchg
add
enter
loop
mov
or
jne
int3
xchg
rcr
aam
adc
mov
les
push
and
mov
jle
xchg
jns
mov
adc
fadds
mov
lret
addr16
nop
dec
js
jns
sub
jge
or
out
inc
enter
jns
mov
loopne
movsb
push
addps
fcmovnbe
adc
mov
adcl
mov
leave
dec
push
jge
cltd
lret
pop
pop
adc
test
dec
sub
pop
pop
jecxz
mov
xchg
jo
dec
xchg
out
mov
imul
dec
mov
dec
inc
mov
icebp
stc
dec
movsl
int
cmp
repnz
mov
xchg
mov
jg
cmp
mov
enter
nop
out
adc
rorb
dec
xchg
notb
leave
mov
test
dec
dec
adc
cwtl
scas
int3
dec
or
and
jo
mull
sbb
sub
dec
xor
push
inc
enter
roll
rclb
mov
fwait
add
mov
xchg
lret
xchg
mov
shl
pop
fs
push
hlt
or
xchg
and
and
and
or
dec
xchg
out
adc
dec
or
ret
movsb
push
pop
add
fimull
sub
pop
lods
flds
jecxz
push
push
rorl
cltd
ja
ja
adc
jp
pop
push
push
or
xchg
sub
dec
hlt
sub
adcl
xchg
jbe
movsb
xorps
sbb
pop
xchg
xchg
push
movsl
and
mov
or
push
stc
loop
or
repz
imul
dec
or
xlat
arpl
lret
sbb
pop
mov
int3
inc
daa
fcom
or
addr16
fisttpll
adc
nop
cli
mov
xchg
dec
dec
cmpsl
lds
push
xor
adc
dec
rcl
push
xchg
loop
add
shl
dec
push
lret
lretw
mov
mov
xor
aam
push
into
and
into
into
jnp
and
rolb
mov
gs
cltd
or
inc
aam
lds
adc
aas
in
and
sbb
je
xlat
adc
xor
push
inc
hlt
mov
xchg
or
inc
xchg
inc
mov
pop
xchg
mov
popl
sbb
xchg
push
rol
loopne
mov
scas
push
mov
add
int3
jae
push
lret
pop
mov
fstl
xchg
mov
sub
jge
adc
xchg
xchg
fimull
mov
movsb
ror
addr16
jge
sbb
lods
pop
or
arpl
mov
cmc
xlat
and
or
dec
inc
dec
xchg
dec
test
mov
shl
or
pop
sub
add
jmp
pop
adc
imul
lret
push
xchg
mov
push
int3
inc
daa
fdiv
push
adc
xchg
or
in
push
pop
jns
aad
push
int3
in
mov
iret
inc
xchg
mov
ljmp
addr16
or
jnp
inc
mov
aam
jle
out
adc
int
rclb
mov
testb
or
and
mov
push
addr16
xchg
adc
int3
mov
mov
test
insl
adc
xchg
push
mov
inc
ss
and
xchg
xchg
dec
rcrb
jl
fists
and
rcr
or
fcoms
mov
call
adc
mov
push
pop
mov
jnp
mov
xchg
scas
jns
ss
inc
xchg
xchg
push
cmc
leave
jae
xchg
loopne
std
push
dec
adc
in
cmpsb
fabs
cltd
std
jp
push
decl
loop
int3
add
sbb
dec
roll
adc
pop
loope
out
jns
dec
cltd
clts
mov
movsb
or
push
inc
test
dec
pop
mov
xchg
lret
dec
sbb
enter
xor
subl
dec
lods
pop
adc
xchg
pop
cmc
xchg
rcrl
sbb
ljmp
popf
scas
pop
inc
sbb
mov
push
or
ret
mov
iret
lea
xlat
jg
adc
push
push
dec
mov
xchg
xchg
lret
add
fists
mov
nop
fidivl
inc
movsl
sub
lcall
pushf
or
xchg
fxch
in
or
push
enter
imull
sbb
pop
pop
jge
or
pop
shlb
aad
mov
inc
jno
jns
inc
and
push
push
add
mov
or
cmp
inc
pop
rorl
loop
dec
dec
add
inc
xlat
jne
adc
cltd
inc
xchg
dec
lcall
mov
jl
push
pop
sbb
rorl
add
aam
dec
leave
xchg
cmp
js
add
psubq
xchg
or
mov
jl
inc
cwtl
dec
pop
stc
pop
das
sbb
push
cmc
loopne
cmc
fldenv
jle
das
fldcw
sahf
pop
mov
inc
stos
scas
jle
lods
rcrb
cs
pop
daa
pop
jle
inc
adc
xchg
dec
push
xchg
cmp
rcl
jnp
int
fisttps
rclb
push
aam
mov
int
imul
test
pop
dec
adc
inc
mov
mov
or
cmp
jno
jns
cmpsl
pop
sub
sti
xchg
lahf
sti
bound
dec
pop
push
mov
push
cmpsl
pop
mov
lock
shll
pop
bound
mov
adc
cmp
cli
jmp
push
dec
pop
push
call
add
add
jle
pop
ds
iret
inc
adc
or
adc
sahf
fstps
stc
pop
add
push
mov
dec
xchg
xchg
rcll
xor
pop
mov
incb
jle
jmp
ret
xchg
aad
cwtl
jle
xchg
daa
mov
push
xor
or
or
sub
enter
stc
inc
push
jle
mov
fimull
ret
xchg
out
insb
push
jle
xchg
pop
out
loop
jle
xchg
data16
xchg
roll
jmp
ret
xchg
aad
pop
jle
or
or
push
xor
or
dec
jle
mov
fadds
xchg
jle
stc
inc
push
jle
mov
xchg
jle
or
lret
fimull
fcoml
jo
in
pop
dec
iret
mov
rcll
pop
xchg
outsb
dec
nop
pop
push
lret
jle
sbb
jne
xchg
rcl
or
dec
jle
pop
adc
mov
gs
adc
adc
dec
jle
jae
lret
dec
push
or
nop
movsl
inc
dec
dec
shr
pop
xor
iret
fsubrs
mov
fwait
ror
fisttpl
pop
jo
mov
inc
mov
lods
lahf
push
adc
adc
xchg
fwait
dec
mov
movsb
adc
push
test
test
ficoml
cltd
in
bound
mov
rcll
mov
sub
mov
push
ds
pop
adc
aam
push
js
and
or
sub
or
mov
add
xlat
lock
or
test
sbb
pop
push
popf
aaa
adc
xchg
enter
stos
xchg
dec
pop
leave
xchg
add
orl
mov
inc
dec
imul
mov
repz
xchg
nop
dec
or
out
add
test
dec
adc
dec
or
insb
pop
push
xchg
pushf
mov
jecxz
movsl
adcl
pushf
jge
mov
stos
insb
xorl
cmp
dec
sarl
clc
adc
cmc
les
cmc
add
or
int3
rorl
fimull
fnstcw
cmp
sbb
scas
test
movsb
rcrb
insl
push
lret
sarl
std
push
dec
arpl
jl
loope
negl
push
lea
pop
ud2
pop
jge
fsubrl
leave
fwait
sti
pop
jg
out
in
jle
dec
mov
cmpsb
popf
leave
ret
test
out
cmp
xchg
jle
loope
test
jl
out
and
push
jbe
dec
xchg
cltd
pop
pushf
push
push
js
stos
cmp
pushf
dec
dec
push
adc
bound
in
out
jle
insb
cld
jmp
insb
ljmp
enter
sub
insb
sub
lock
pop
movsb
add
iret
insb
rclb
ror
jle
jmp
lods
mov
jno
ss
pushf
loope
test
fidivrl
mov
fcoml
cwtl
fwait
sbb
leave
or
into
jnp
sarl
sbbl
or
or
jle
jmp
sbb
ret
pop
loopne
dec
jl
or
mov
sbb
sub
stos
ss
pop
cmp
jle
or
cwtl
jle
test
dec
sahf
xchg
inc
sbb
test
dec
rorb
adc
sub
lock
xchg
pop
adc
jno
adc
dec
or
xchg
ret
iret
fmuls
and
and
push
int3
fdivl
dec
lret
sub
pop
mov
adc
stos
mov
dec
pop
or
movl
rcrb
fistpll
out
out
jl
and
lds
push
dec
test
or
or
std
insl
cmp
fscale
ret
int3
mov
push
sbb
les
pop
xchg
cmp
mov
pop
fcomps
leave
push
fcoms
pop
xchg
dec
push
dec
lds
add
test
adc
jg
sbb
mov
popf
xchg
mov
pop
popa
ljmp
cld
or
xchg
sbb
jae
mov
pop
aam
out
in
cmp
sbb
sbb
or
cbtw
inc
dec
pop
and
pop
pusha
dec
xlat
lds
xchg
or
push
fiadds
dec
bound
sbb
xchg
lock
lds
mov
xchg
and
into
mov
mov
mov
jecxz
jecxz
jecxz
and
pusha
mov
dec
mov
push
add
sbb
fdivrs
inc
mov
pop
pop
dec
xlat
and
movups
push
mov
insb
fcomp
pop
cwtl
inc
pop
adc
adc
call
pop
loop
cmp
jae
sbb
shll
xchg
dec
xchg
fisubl
adc
sbbl
cwtl
jbe
inc
insb
pop
fstps
inc
xchg
loop
push
mov
jp
inc
insb
sbb
pop
fadd
sbb
pop
inc
pop
loop
xlat
or
xor
sub
fisubl
loop
fmuls
or
fistpll
cltd
mov
fmuls
fbstp
adc
xlat
fistpll
cltd
mov
sbb
filds
jmp
inc
push
push
lea
fisubl
pop
pop
nop
ret
cwtl
xchg
pop
and
mov
inc
pop
dec
push
je
clc
xchg
stos
push
dec
adc
in
sbb
dec
cwtl
and
cwtl
dec
xchg
je
mov
js
adc
cld
xchg
out
sub
xchg
aaa
nop
and
adc
push
cmp
adc
fwait
cltd
lcall
out
aam
push
incb
or
lret
mov
jno
cs
inc
insb
push
mov
mov
mov
or
mov
or
mov
or
cld
lea
adc
xchg
sti
and
cld
psubb
mov
adc
pop
pop
push
push
adc
push
xchg
dec
fmuls
lahf
test
xchg
bound
or
push
or
shlb
lcall
and
pusha
and
in
aas
data16
mov
xor
aas
outsb
or
mov
aas
hlt
or
mov
aas
js
dec
clc
xor
push
pop
mov
mov
int3
lds
ja
inc
insb
cltd
cltd
dec
mov
mov
pop
in
adc
pop
inc
insb
pop
ret
pop
mov
rclb
hlt
test
repz
repnz
adc
rcl
call
push
mov
pop
push
jb
rcr
xchg
push
pop
pop
push
jnp
mov
xchg
or
js
outsl
mov
lahf
sub
sbb
xchg
call
sub
sahf
cmp
sbb
xchg
sbb
lock
sbb
cwtl
pop
rclb
jae,pt
xchg
icebp
repnz
icebp
sti
pop
jbe
xchg
cltd
cmpsl
flds
movsb
mov
mov
out
cltd
call
mov
pop
filds
insb
pop
fstps
inc
pop
fisubrs
sbb
std
femms
pop
xchg
mov
stc
cmp
sbb
add
mov
shlb
stos
mov
dec
pop
call
cmp
test
mov
sbb
push
pop
ret
pop
filds
jmp
insb
pop
in
xchg
in
sbb
sbb
xchg
cmp
shl
lret
aas
and
shrl
dec
mov
xchg
cld
and
movb
push
add
sti
nop
inc
jo
fnstsw
push
xchg
sbb
inc
xlat
or
xchg
int
pop
jbe
ret
mov
or
pop
mov
mov
clc
dec
or
mov
jnp
es
add
mov
push
jl
cltd
addl
dec
push
sbb
dec
cltd
xchg
mov
xor
or
addb
lcall
cld
mov
or
negb
and
xchg
xchg
xor
mov
lcall
and
lret
cmp
jbe
notb
and
pop
fisttps
mov
push
jmp
xchg
and
into
adc
es
add
adc
jno
cli
inc
cltd
shll
and
leave
les
ret
movl
aas
and
pop
pop
and
add
add
jb
lcall
popf
inc
jb
test
mov
xchg
sahf
pusha
dec
icebp
adcl
add
call
jp
adc
mov
into
lds
adc
xchg
outsb
rcl
pop
test
iret
test
pop
dec
lods
fildl
xchg
imulb
js
popf
xchg
adcb
sti
shlb
adc
mov
inc
jle
sub
xchg
call
mov
pop
xchg
dec
iret
adc
xchg
add
push
pop
aas
mov
push
jnp
pop
pushf
ss
sahf
pusha
jb
pop
fistps
inc
push
push
fcmovnu
xchg
sbb
sbbb
jns
mov
shlb
movsb
ljmp
mov
fdivrs
cwtl
push
and
pusha
push
les
ret
dec
fs
add
pop
pop
cli
xchg
xchg
pusha
xchg
push
push
or
xchg
dec
mov
sti
or
movsb
cmp
je
pop
xchg
imul
dec
xchg
orl
out
pusha
pushf
popl
jl
or
dec
sti
push
pop
adc
std
jnp
adc
push
xchg
and
add
icebp
iret
adc
mov
adc
xchg
into
push
jo
or
xchg
push
adc
adc
mov
add
mov
pop
inc
dec
mov
cwtl
mov
clc
jns
adc
push
pop
pop
jle
cltd
mov
jl
call
pushl
jle
xchg
addr16
adc
stc
mov
mov
push
push
inc
imul
xchg
into
pop
aas
xchg
notb
push
mov
cmp
in
lea
xchg
mov
jle
adc
leave
pop
mov
outsl
inc
jecxz
mov
adcl
pusha
mov
push
jl
cmc
and
push
test
push
or
push
xchg
xchg
sbb
cs
mov
xchg
test
mov
pop
or
push
fcoms
insb
inc
in
add
insl
sbb
sbb
push
aam
pushf
pop
adc
adc
and
lahf
push
push
dec
adc
adc
rclb
outsl
jae
nop
test
mov
cwtl
aas
stc
mov
jbe
idivl
orl
aas
out
cld
or
ljmp
stc
int
inc
mov
add
out
fwait
das
push
cltd
sahf
sbb
and
add
xchg
pop
mov
or
mov
xor
mov
pop
arpl
sub
fildl
cwtl
inc
ret
mov
adc
xchg
xor
xchg
mov
mov
sbb
shl
xchg
dec
xchg
repnz
jge
xchg
and
adc
adc
sbbl
xchg
lcall
lret
fcoms
jno
lods
cld
outsb
cmp
mov
jne
add
sbb
cld
lea
mov
mov
or
xlat
sti
mov
pop
cmp
fiaddl
xchg
dec
insb
and
ds
adc
pushf
pop
mov
xlat
adc
add
xchg
popf
in
jg
lret
inc
popf
popf
xchg
cwtl
adc
push
rorb
xchg
rorb
add
fdivrl
mov
adc
lds
dec
inc
adc
test
add
sti
cmp
push
or
dec
stos
pushf
inc
addl
adc
stos
fwait
dec
xor
nop
sahf
outsb
enter
and
cwtl
inc
test
lret
ja
test
pop
stos
fisubl
mov
push
and
xchg
daa
push
imul
setne
cltd
mov
rclb
jp
out
gs
cmp
cmp
cwtl
xchg
inc
jge
push
das
and
imul
jmp
popf
out
enter
add
add
jle
fdivrs
cmp
inc
in
lcall
lcall
xchg
xchg
mov
cwtl
movsb
mov
inc
enter
pop
xchg
fdivrs
fwait
sbb
sub
div
mov
mov
ficoms
mov
push
sahf
xchg
dec
xchg
inc
or
mov
rolb
in
dec
aam
mov
dec
or
fsubrs
xlat
jbe
pop
mov
pusha
adcb
push
lock
jecxz
push
mov
lcall
cwtl
movsb
nop
aaa
into
in
mov
cmpsb
lock
xchg
jmp
cltd
dec
in
pop
push
dec
lock
nop
lahf
jmp
repnz
mov
push
add
mov
sbb
mov
sahf
xor
xchg
insb
fistpl
repnz
mov
and
mov
dec
arpl
mov
jmp
or
pop
cwtl
jb
cli
sbb
push
popa
fisttpll
pop
mov
add
jp
fistl
sbb
and
pop
testl
subb
mov
adc
lock
dec
jmp
xchg
xchg
xchg
stc
mov
push
rcl
call
xor
pop
imul
xchg
nop
inc
and
fwait
idiv
cwtl
mov
jnp
adc
jmp
insb
shlb
add
xchg
pushf
or
fs
sbb
pop
push
fwait
sbb
dec
dec
pop
adc
jno
les
lret
jmp
repnz
sbb
cltd
mov
mov
or
out
xchg
iret
lds
lahf
or
insb
inc
cmp
add
clc
adc
jmp
test
inc
ret
jmp
jl
nop
or
mov
sbb
imul
mov
push
or
sahf
add
dec
sbb
mov
jb
fbld
push
adc
lahf
jno
ret
repnz
adc
add
push
test
and
mov
dec
mov
test
pop
push
pop
jmp
lcall
xchg
pusha
nop
xchg
push
inc
fsts
fucomip
imul
sub
out
test
add
cmp
lcall
add
add
jno
xchg
sub
mov
jmp
xchg
jmp
pop
test
or
in
mov
xchg
sahf
xlat
aas
sahf
sub
sbb
shlb
adc
sti
cwtl
or
notl
call
fnsave
push
xchg
pop
pushl
inc
mov
push
sbb
test
sbb
add
or
xchg
lahf
ret
out
iret
xlat
push
push
sbb
inc
scas
sub
mov
cwtl
sub
mov
adc
push
jle
cwtl
pop
jmp
mov
or
fstpt
in
xchg
and
cmc
push
add
sbb
or
pop
inc
in
jbe
arpl
add
inc
add
push
sub
inc
cmc
mov
cwtl
pusha
cmpb
adcl
fnstenv
xchg
in
loop
jbe
femms
pop
dec
and
movsb
sbb
and
fs
lods
jbe
mov
jmp
push
pop
xchg
clc
or
cli
lahf
mov
jns
sahf
inc
arpl
iret
add
sbb
popf
js
or
insl
fisttpl
leave
jbe
out
add
add
shrb
testb
jmp
push
leave
pop
idiv
xchg
cmc
imul
testb
mov
into
loop
inc
mov
push
dec
movsb
loop
mov
rclb
sbb
ja
add
push
packssdw
loop
rorl
pop
dec
out
mov
adc
into
addl
xchg
cmpsb
adc
loope
inc
insl
filds
pop
dec
fwait
cmpb
and
jb
cmc
inc
insl
dec
or
in
repnz
das
imull
call
jl
jne
aaa
dec
dec
and
clc
cwtl
dec
mov
jmp
jns
nop
repnz
mov
pop
dec
jbe
out
pop
cld
dec
mov
mov
dec
push
xchg
pop
xlat
mov
sub
mov
adc
and
jmp
repnz
lea
sbb
jp
push
pop
mov
push
in
dec
jp
xchg
rcrb
dec
xchg
mov
xchg
in
sub
mov
mov
mov
in
in
ficompl
pop
sbb
mov
rcll
lret
or
gs
xchg
or
pop
test
rcl
xchg
xor
sub
mov
push
cs
or
js
cld
rolb
outsb
xor
outsb
inc
pop
mov
and
cmp
cltd
outsb
lret
unpckhps
into
push
add
cs
cli
xchg
adc
push
adcl
repnz
lahf
jle
sbb
xchg
je
loop
inc
mov
mov
out
xchg
and
ljmp
rorl
or
pop
adc
fcoms
and
loop
loop
dec
rcrb
add
out
push
mov
mov
pop
popf
cmp
clc
pop
stc
xchg
xor
push
call
inc
je
dec
fadds
arpl
push
or
jne
xchg
jge
mov
adc
or
mov
adc
jle
dec
imul
jne
dec
insb
into
adc
cltd
js
push
push
and
shrb
mov
adc
or
mov
push
jbe
xchg
or
jmp
sbb
or
mov
insl
dec
daa
adc
fldcw
push
xchg
popf
int
sbb
mov
testl
and
push
cwtl
push
lahf
adc
inc
test
mov
call
or
stc
sub
ds
xchg
push
adc
adc
sub
mov
jno
jge
enter
mov
pop
push
js
adc
orl
lret
or
add
cmc
adc
xchg
jge
nop
sub
inc
jnp
fidivl
jo
adc
xor
xchg
mov
pop
pop
cltd
lcall
outsl
mov
fstps
stc
lcall
pop
sbbb
cmc
add
adc
int
lcall
or
pop
in
add
mov
inc
ja
fidivl
xchg
call
dec
xchg
into
arpl
int
cmc
jne
seta
out
push
popl
nop
into
sbb
repz
sub
inc
or
lret
add
icebp
lock
imul
cmc
jb
cmp
arpl
sbb
in
jno
and
mov
or
sbb
push
add
incl
dec
jmp
idiv
push
icebp
mov
in
add
add
jle
pop
pop
outsb
cmp
insl
pop
sbb
cwtl
and
insl
dec
stos
int
insb
js
xlat
jns
stos
insb
loopne
add
or
xor
adc
out
divl
fmul
fwait
outsb
pop
inc
sti
dec
out
hlt
jp
push
popa
xchg
fmuls
outsb
jp
or
imul
imul
lcall
or
fs
roll
test
mov
xor
xchg
xchg
inc
sbb
mov
xlat
fwait
pop
sbb
lret
xchg
pop
std
xchg
push
into
sahf
in
ja
pop
add
scas
jmp
shlb
inc
mov
push
cmp
pop
dec
lods
in
xchg
stos
add
sbb
cmp
jl
xchg
lahf
sbbl
ficompl
and
or
push
dec
cmpsb
or
in
shlb
or
stos
jge
stc
adc
shll
daa
mov
push
popa
ja
push
push
mov
adc
xchg
outsl
into
mov
jge
or
xlat
mov
pusha
sbb
jmp
xor
push
pop
stos
pop
in
cmp
imul
add
or
adc
ja
mov
mov
adc
add
or
push
out
xchg
test
push
out
sbb
adc
lret
pop
clc
les
subl
out
jp
add
std
fs
test
xchg
mov
add
xlat
dec
in
xchg
cs
sahf
mov
rcrl
pop
mov
or
sahf
jge
cwtl
sub
out
jge
mov
push
mov
cwtl
pop
xchg
out
or
pop
fistpl
rolb
sbb
popa
or
shlb
insb
mov
sbb
sbb
dec
mov
imul
xchg
xchg
aam
and
jae
cwtl
xchg
xchg
inc
pop
sub
mov
pop
ljmp
das
pop
pop
sahf
jl
xchg
std
popf
dec
push
or
out
jle
rclb
pop
or
sub
rcrb
mov
xchg
pop
pop
cmp
sub
sti
shl
icebp
lcall
les
add
dec
ljmp
adc
fwait
push
pop
inc
mov
jno
inc
xchg
or
push
xchg
mov
loope
push
adc
push
and
push
jb
push
sub
sbb
or
dec
or
push
fimuls
pop
rcll
gs
xlat
mov
mov
dec
fs
stos
dec
loop
push
xchg
inc
and
into
inc
mov
insb
pop
adc
lock
lahf
int
in
xchg
fsubs
mov
xor
xor
fdivr
dec
pop
mov
jnp
scas
sahf
lcall
mov
add
scas
imul
fsubrl
mov
add
in
adc
ljmp
in
mov
ret
mov
jnp
lea
pop
add
mov
adc
xchg
cmp
jne
or
pushf
sub
xchg
pop
xor
jmp
inc
fcoml
mov
rcl
ja
pop
fdivr
jecxz
loop
dec
dec
xchg
jl
ret
inc
fiadds
add
sahf
aad
add
xorl
sti
call
rcrb
aad
add
je
or
lea
jae
setno
pusha
setle
mov
pusha
inc
jmp
pop
jbe
mov
inc
scas
push
mov
ds
push
xchg
mov
cmpsb
mov
push
mov
push
jbe
mov
dec
outsb
sahf
mov
mov
scas
es
mov
pusha
call
movl
mov
movb
pushl
popl
pusha
pushl
ret
neg
sub
jmp
pusha
jmp
lea
mov
jmp
ja
cmp
cmpsb
mov
xchg
rcrb
nop
pushf
arpl
and
lret
test
mov
mov
xor
bound
fsubl
cltd
mov
stos
pop
sub
xor
sbb
inc
mov
fldenv
ret
mov
dec
cmp
add
dec
xor
out
dec
setae
int
push
cmp
lret
push
test
repnz
pop
pop
lcall
dec
sbb
in
test
add
mov
pop
cld
adc
pop
and
adcl
jl
out
cmp
dec
jg
loop
dec
mov
test
insb
adc
out
cld
xchg
and
jno
mov
adc
int3
sbb
lods
xchg
cmpsl
xor
mov
push
js
in
add
jns
icebp
fsubrl
jb
push
cmp
push
dec
mov
mov
addb
add
outsl
jmp
mov
stc
call
sub
stc
jmp
push
lea
call
push
lea
jmp
icebp
jmp
sub
sbb
call
and
ja
mov
cld
pop
and
sub
pop
ds
push
push
cld
push
inc
insb
sub
gs
je
add
push
pushf
push
movl
lea
jp
pusha
pusha
movl
mov
mov
mov
mov
lea
jmp
xor
fdivl
push
adc
pop
daa
add
xor
faddl
and
adc
mov
mov
inc
mov
mov
adc
jbe
mov
jle
push
adc
mov
add
out
and
mov
loope
adc
cmpsb
and
loope
push
adc
js
inc
jmp
mov
xor
sub
adc
mov
inc
jmp
mov
dec
dec
loop
add
cmp
rorb
and
mov
int
adc
add
movsb
arpl
dec
adc
shlb
add
mov
insl
mov
add
push
adc
cmpsl
add
lods
push
adc
sti
xor
das
mov
das
xchg
pusha
sub
fldt
push
adc
mov
mov
arpl
mov
mov
int
push
sbb
push
adc
loop
mov
adc
and
int3
jge
push
adc
popf
sub
adc
shrl
adc
add
ljmp
js
iret
sub
push
adc
stos
xor
adc
ja
add
subl
add
mov
adc
dec
xor
and
ljmp
mov
inc
cmp
add
push
adc
mov
mov
mov
ljmp
cmpsl
shlb
mov
push
xchg
dec
xor
adc
fsubrl
push
adc
mov
add
loopne
push
adc
or
add
add
mov
push
inc
insl
addb
sub
add
popa
dec
ss
ds
pop
jbe
dec
and
pop
pop
imul
add
jl
mov
push
sub
mov
or
test
idivl
xor
iret
sbb
mov
push
lcall
mov
syscall
pop
fsub
repnz
pop
test
xor
rol
lds
enter
aad
mov
clc
mov
test
mov
jmp
jb
jne
mov
movzbw
pushf
mov
mov
pusha
pusha
movb
lea
jmp
ret
imull
inc
lock
jo
mov
jbe
add
test
add
cs
or
pmulhuw
jmp
xor
add
stos
stc
pop
int
xchg
xchg
fbstp
dec
mov
mov
and
mov
mov
iret
out
mov
fdivl
ss
adcb
scas
fwait
test
xchg
inc
rorb
sub
add
aad
fwait
sub
pop
mov
push
push
sub
adc
dec
cmpsl
pop
loop
inc
xchg
rcll
add
pushf
movb
jmp
clc
pusha
sub
pushf
jmp
stc
fsubp
mov
push
adc
xor
sbb
cs
hlt
jle,pn
mov
add
sbb
jge
cmp
les
push
lret
fdivrp
loope
stos
mov
push
adc
stos
nop
adc
and
push
fdivr
inc
dec
data16
in
imul
mov
loop
and
jge
rolb
lret
test
mov
cmc
dec
loope
mov
mov
mov
and
jmp
mov
mov
not
lahf
not
lea
call
cmp
mov
or
cmc
bts
mov
call
inc
adc
test
insl
dec
loop
dec
gs
mov
jo
jno
jae
lea
rclb
sub
jmp
adcb
es
adc
stos
std
mov
jge
xor
nop
jg
shl
and
cld
mov
mov
lods
inc
sub
out
loopne
xor
mov
and
and
and
mov
sbb
mov
daa
sbb
jmp
loop
mov
jmp
fmuls
data16
inc
insb
rolb
mov
outsl
xlat
scas
ret
pop
int
mov
adc
jb
xchg
xchg
int3
xchg
pop
mov
pop
add
stos
int
fcomps
clc
adcb
arpl
pop
jns
or
mov
outsl
leave
dec
push
dec
cmp
dec
bound
or
mov
dec
cmpsl
cmc
jo
or
jp
push
cmp
inc
inc
and
mov
fcoms
push
sbb
and
les
outsb
mov
in
sahf
lea
enter
add
jno
cmpsb
xchg
lods
sub
jl
mov
cmp
es
sub
add
push
es
jmp
inc
dec
fisttps
ror
fidivs
out
push
mov
jno
cld
sbb
fcmovb
out
jns
push
xor
sbb
push
jno
pop
es
jnp
dec
mull
jmp
daa
cltd
push
aam
mov
dec
lock
mov
nop
jne
jb
pop
jne
pushf
pop
cmc
xchg
es
cltd
jae
rclb
lcall
cmpsl
mov
in
push
loop
mull
jp
jb
pusha
cmc
loope
out
cmpsb
fisubrs
cmc
sub
shrl
cmpsl
add
and
xor
aam
stc
cmp
mov
outsb
push
push
xchg
jno
addr16
insb
sbb
and
jmp
dec
inc
addl
jge
add
pop
xchg
and
imul
add
mov
outsl
inc
outsb
push
outsb
scas
push
outsb
out
push
outsb
ds
mov
es
jl
mov
mov
cmc
clc
pushf
jmp
pop
push
mov
stc
fisttpll
and
sbb
cld
mov
idiv
dec
xchg
sbb
jne
xchg
mov
mov
cmpsb
mov
add
inc
jo
add
xchg
or
fiadds
in
push
and
lret
aam
ss
mov
fcmovnu
scas
outsl
testl
pop
pop
adc
test
movsb
xchg
mov
mov
lea
call
cmc
call
add
inc
js
je
jb
arpl
jae
push
mov
cld
fsts
rclb
mov
rcr
insb
loop
and
mov
and
xlat
rcll
in
aas
aam
lods
or
inc
push
fldl
jmp
outsl
fsubs
cmpb
sub
jns
xchg
shrl
xchg
jmp
hlt
out
mov
push
dec
xchg
sub
sub
jmp
mov
out
sbb
or
xchg
fsubrl
arpl
in
inc
and
mov
dec
aaa
icebp
cmpsl
xchg
mov
in
mov
push
pop
into
pop
loope
mov
jmp
push
lods
xor
add
call
jmp
pushf
pushf
movl
pushf
movl
pusha
lea
jmp
or
push
sub
push
loopne
js
sub
mov
mov
adc
test
xlat
sub
pop
fstpl
test
mov
out
roll
cmova
pop
or
xchg
lcall
jbe
lahf
cmc
rcll
xchg
or
movb
imul
pop
loop
cmp
or
adcl
lea
cmpsl
aam
aaa
out
lea
sbb
add
pop
lret
jo
pop
inc
inc
mov
cli
push
dec
cwtl
jge
inc
sub
or
pop
fidivrs
jne
cwtl
mov
push
ljmp
cmp
shrb
xorb
dec
jb
push
or
pop
scas
adc
cmpsl
mov
adc
mov
dec
mov
cli
jae
mov
or
push
or
shlb
loop
xor
call
aas
adc
je
sub
dec
mov
fidivs
mov
aaa
mov
jg
adc
sbb
jmp
sub
mov
pop
and
lret
and
or
les
lret
rorl
cmc
or
mov
or
jmp
mov
lea
jbe
xadd
rcr
bsr
mov
inc
ror
btc
dec
add
xchg
mov
bts
lea
movzbw
add
movsbl
bswap
sub
sub
movl
shr
adc
shl
mov
call
pop
push
push
add
add
add
pop
adc
add
push
push
add
movsl
adc
mov
push
add
push
add
aaa
push
add
push
add
add
add
je
add
fs
jne
jmp
pushf
lea
jae
clc
cmc
stc
pusha
cmp
pusha
push
lea
jae
pushf
cmp
clc
jmp
pushf
lea
ja
stc
clc
call
str
pusha
movl
push
movl
pusha
mov
mov
lea
jmp
shlb
mov
subl
arpl
ljmp
push
xor
lock
mov
ret
out
aas
xchg
daa
adc
aaa
fsubrl
sub
ficoml
mov
pop
in
jle
xor
dec
add
xlat
sti
pop
js
xor
loop
cmp
test
aas
gs
or
mov
xchg
icebp
lcall
stos
cmpsl
cltd
scas
push
mov
push
int3
loop
mov
inc
mov
sub
or
jo
inc
jne
lea
arpl
sub
and
notb
and
popf
or
xchg
nop
repz
stc
push
dec
cltd
sub
xchg
daa
or
loope
lea
gs
mov
cwtl
pushf
imul
adc
and
enter
lea
out
inc
push
movsb
jne
fs
and
add
lock
add
jle
lahf
inc
insb
sub
les
addr16
jae
jno
cs
cltd
mulb
stos
push
mov
pop
xchg
xor
push
adc
adc
pop
mov
jecxz
out
mov
mov
loope
pusha
xlat
or
pop
add
xor
sub
imul
pop
sahf
pushf
int
loopne
fnstsw
fcoms
sub
push
push
inc
sbb
and
and
sub
lds
lahf
popf
xchg
rolb
adc
jl
jge
std
mov
add
scas
sbb
push
push
fdivs
xchg
mov
xchg
pop
call
lea
sbbl
lahf
cmp
xchg
fadd
mov
or
rclb
mov
push
dec
in
cmp
inc
movsb
and
push
sbb
fs
push
or
sbb
sub
cltd
mov
inc
or
jge
pop
or
loop
addr16
pop
and
and
jl
jb
and
pop
gs
mov
sahf
sbb
add
insl
movsb
adc
js
jnp
movsl
daa
divb
sub
mov
xor
popa
jns
xchg
xchg
dec
je
popaw
mov
arpl
add
and
mov
pop
jecxz
test
ja
aam
pop
movsl
and
negb
in
insl
loopne
lahf
mov
jo
shl
and
push
data16
inc
mov
mov
lahf
push
inc
jbe
pop
test
fcomps
test
loope
mov
jb
fwait
arpl
mov
cltd
imul
adc
xchg
mov
mulb
aaa
jb
frstor
mov
jnp
and
adcl
sbbl
xlat
xchg
imul
mov
jge
je
sahf
adc
xor
outsl
test
sbbb
mov
jae
or
imul
outsl
popf
out
test
pushf
push
insl
pop
jb
jb
fwait
xor
mov
pop
xchg
fsubs
push
xchg
sbbl
popa
mov
jae
xchg
sbb
loop
negb
mov
mov
mov
add
outsl
fsubs
popa
push
jne
jg
in
xchg
mov
mov
mov
arpl
inc
jae
js
insb
jno
push
and
popa
popf
xlat
mov
sbb
xchg
mov
pushf
ja
jge
insl
sbb
popf
mov
sahf
xchg
cwtl
arpl
pushf
jb
jns
pop
jmp
popa
xchg
mov
shlb
imul
jb
mov
inc
test
xchg
insb
push
pushf
popf
dec
jo
cmpb
jns
jge
jno
jne
outsb
rclb
shl
cltd
sbb
popf
mov
and
xchg
pop
xlat
add
fldt
mov
lcall
jg
jno
pop
inc
push
sbb
mov
icebp
jae
daa
sbb
out
xchg
orl
xchg
jb
movsb
inc
mov
popa
imul
jl
xchg
mov
lea
fidivs
sbb
pop
test
xchg
jmp
sti
andb
outsb
arpl
imul
push
mulb
lcall
je
mov
xlat
sbb
popf
insl
pop
and
mov
cltd
push
movsb
fsubrs
mov
jno
cltd
mov
popa
pop
mov
andb
je
mov
in
jb
sbb
or
aaa
js
les
data16
pop
aad
jle
and
popa
outsl
in
sbbl
sub
insb
mov
jae
fadds
xchg
jnp
inc
jno
push
mov
push
lea
pop
push
mov
push
mov
xchg
test
adc
sbb
ja
mov
outsb
mov
adc
nop
data16
in
sbb
popl
mov
insb
pop
sub
pop
gs
cmp
pushf
xchg
rep
mov
cwtl
inc
insl
cmp
jbe
mov
mov
xchg
mov
lahf
push
arpl
rcll
sub
jge
mov
mov
enter
xchg
pop
mov
add
lahf
mov
mov
inc
mov
mov
mov
sarb
jno
adc
cmpl
popf
nop
xchg
xchg
movsb
jnp
push
adc
push
add
jge
xchg
or
jl
fwait
mov
mov
jge
aad
xor
cmp
daa
loope
ja
addr16
shlb
jb
xor
or
aas
movdqa
jbe
ret
movsb
aas
jae
insb
pop
mov
sbb
xchg
xchg
jp
mov
data16
arpl
and
rcll
fiaddl
andl
mov
test
xchg
shrl
jg
mov
mov
fcompl
cmp
addr16
aam
or
test
and
movsb
pop
outsb
jo
inc
lahf
sahf
js
imul
arpl
insb
and
xchg
mov
mov
jo
mov
popf
inc
arpl
mov
lahf
mov
jge
movsb
mov
test
andl
mov
scas
and
cmpsb
in
mov
mov
fbld
xchg
pop
jmp
movsb
mov
sub
test
hlt
lahf
lock
hlt
mov
hlt
xchg
hlt
lcall
pushaw
ret
sbb
add
stos
addb
fwait
addb
mov
fdivl
popa
jae
in
jnp
pop
mov
scas
popa
xorb
mov
popl
shll
xchg
mov
mov
sbb
pushf
push
jb
pop
test
test
andl
ja
mov
sahf
insl
adc
faddl
jae
js
mov
mov
test
in
imul
add
movsb
popa
jle
adcl
sahf
nop
add
push
popa
jl
xchg
pop
pop
dec
fwait
mov
hlt
mov
xchg
xchg
and
sbb
adc
jg
push
xchg
adc
fldl
mov
sbb
sub
push
adc
xchg
in
insb
cs
inc
lcall
add
xchg
arpl
mov
and
sbb
lods
and
mov
pop
inc
mov
inc
and
nop
xchg
rol
mov
insb
das
xchg
nop
mov
xchg
cs
xchg
movsb
and
and
mov
nop
xchg
jle
and
in
lahf
or
pop
mov
arpl
outsl
jae
inc
popf
data16
orb
ja
and
push
fdivs
addl
mov
out
cld
mov
mov
xor
mov
pushf
cltd
inc
pop
popa
jns
and
xchg
jbe
pop
insb
in
pop
xchg
mov
push
andb
mov
in
pop
dec
jbe
xorb
cltd
or
arpl
adc
test
xchg
mov
jp
jl
sahf
repz
cltd
aas
cmpl
aas
pop
ja
je
imul
pop
je
jg
adc
mov
hlt
mov
pop
popf
push
jbe
test
pop
jl
data16
movsl
jecxz
xchg
in
lret
mov
and
jecxz
jecxz
in
adc
and
enter
mov
nop
popf
xchg
stos
sahf
xchg
inc
jge
jle
adc
fimuls
jecxz
push
je
jb
popf
inc
bound
xchg
insb
popf
and
pop
popa
sahf
xor
movsb
sbb
int3
cmp
jmp
jge
adcb
and
cwtl
jns
lret
mov
imul
cmpsl
and
push
cmpb
rcrb
cmp
mov
xchg
adc
test
pop
jecxz
arpl
outsb
cld
xor
int
xchg
cltd
repz
mov
popa
enter
dec
xor
dec
aas
pop
adc
xor
lret
mov
dec
pop
mov
popf
sub
loop
mov
sbb
and
arpl
loop
lahf
mov
xlat
pop
and
xchg
pop
in
pushf
dec
data16
mov
in
xor
xchg
pop
cltd
addr16
hlt
lahf
das
mov
xchg
pop
lcall
cld
data16
jg
xchg
das
fwait
xorl
mov
jo
enter
inc
mov
hlt
mov
js
jge
jbe
or
jb
jle
xchg
jg
out
ret
mov
push
jnp
je
and
inc
xchg
inc
test
aas
imul
lock
imul
cmpsb
or
jle
jnp
xchg
js
inc
jb
jl
imul
andl
outsl
add
pushf
fdivs
fdivrs
outsb
dec
mov
imul
nop
je
js
inc
mov
mov
aam
les
xchg
popf
andl
xchg
fwait
int3
mov
mov
repz
mov
or
mov
inc
in
js
xchg
test
and
adc
je
les
adc
lahf
test
lahf
orl
push
inc
pop
lahf
movsb
inc
pop
mov
xchg
aas
mov
mov
xchg
and
xor
mov
in
push
pop
subl
xchg
pop
popa
push
mov
push
xorb
or
mov
int3
push
mov
and
lods
test
aad
sbb
ja
adc
xor
outsb
dec
notb
jg
je
xchg
pop
popf
sbb
pop
repz
or
push
jno
mov
mov
xorl
pop
jl
lea
pop
imul
addr16
pop
lcall
xchg
repz
mov
mov
xchg
jg
jb
adcb
dec
cltd
pop
mov
xchg
daa
mov
sbb
jbe
push
jl
jle
xchg
fistpl
dec
lea
pop
movsb
push
jae
popa
xchg
jno
jnp
daa
aad
fwait
jns
mov
nop
arpl
out
or
outsb
push
xchg
jae
in
jl
and
adc
std
push
imul
cltd
xchg
aaa
insb
das
mov
and
or
inc
fbstp
xchg
push
jle
adc
lahf
jno
mov
push
and
in
adcb
jo
xchg
das
test
sahf
xchg
enter
aas
sahf
dec
rcrb
cs
mov
sahf
xchg
dec
hlt
jle
sahf
pop
imul
cltd
aam
test
das
inc
aas
shll
jae
pop
popf
mov
mov
xchg
fcmove
add
add
in
pop
push
orl
inc
mov
pop
in
lea
and
jae
sar
xchg
jb
arpl
lcall
loop
aas
jo
cmc
xor
arpl
pop
lret
jmp
mov
jne
pushf
popf
fwait
aas
mov
popa
mov
sti
adcl
popa
adc
mov
dec
insl
jns
adc
xchg
jno
outsb
cwtl
std
pop
insb
pop
xchg
mov
xchg
pushf
xchg
xchg
mov
jne
cmpb
jns
jb
imul
andb
mov
pop
test
mov
pop
outsb
jae
push
call
arpl
jl
xorl
arpl
adc
pop
jo
push
sbb
mov
outsb
int3
je
mov
mov
pop
pushf
jbe
popf
test
mov
imul
lods
mov
add
xor
pop
and
nop
or
mov
mov
xor
cld
jno
loope
lock
mov
xor
xchg
jnp
sbb
cmpsb
push
mov
inc
mov
mov
fwait
cmp
imul
mov
add
sbb
sbb
fdiv
xor
gs
aam
push
sbb
sti
jl
or
pop
push
arpl
mov
pushf
jne
ljmp
gs
mov
sarl
rclb
scas
and
pop
loopne
jno
call
fcom
ja
xchg
test
xor
sarl
jnp
fs
adc
and
fs
hlt
or
cltd
sbb
mov
int3
popf
pop
and
shll
mov
push
jp
popa
mov
add
sbb
sbb
mov
in
dec
out
push
inc
and
inc
jge
fwait
nop
imul
xchg
adc
sbb
test
xor
adc
jge
push
and
hlt
inc
xchg
cltd
addl
aad
inc
aam
ljmp
ret
jnp
inc
test
je
cltd
dec
insl
iret
and
gs
hlt
ficoms
shlb
lds
sbbb
lahf
imul
xchg
or
cmp
pop
pop
ja
stc
iret
in
add
mov
imul
sub
gs
mov
shlb
ffree
and
popa
and
xor
jp
dec
mov
push
inc
bound
sbb
or
in
cltd
sub
test
loop
daa
jmp
or
imul
xchg
mov
jbe
xchg
xor
cmp
sbb
sbb
mov
daa
lret
outsb
scas
xor
pop
sub
lcall
fisubs
xchg
xlat
xorl
arpl
dec
jb
mov
mov
pop
xchg
enter
lcall
xchg
and
cmp
jg
rolb
mov
mov
insl
or
stos
and
in
push
imul
xchg
xchg
subb
repz
mov
sbb
push
outsb
adc
arpl
jg
push
mov
js
je
jo
inc
push
pop
mov
pushf
xchg
xchg
xchg
inc
nop
sbb
xchg
mov
pushf
jle
jnp
js
jne
jb
inc
push
movsb
and
adc
xor
jb
jb
xchg
arpl
and
jge
clc
popa
arpl
jns
rcll
rolb
jg
popl
out
xchg
popf
popf
dec
mov
insb
std
mov
jnp
movsb
push
testb
mov
movb
or
aam
test
ljmp
sahf
jg
cwtl
inc
jge
inc
xchg
inc
xchg
push
add
add
test
popf
jl
mov
aam
and
xchg
aad
jne
stos
xchg
xchg
jns
mov
js
add
test
cwtl
add
adc
mov
js
test
ds
mov
sub
adcl
stc
adc
mov
lea
pop
popf
insl
lahf
sbb
mov
lcall
mov
xchg
icebp
xchg
aas
sub
fwait
mov
cmp
xchg
rcr
jae
xchg
push
hlt
mov
lahf
pop
cmp
pop
mov
ja
sahf
mov
pusha
and
xor
pop
ja
cmp
mov
cli
pop
ja
mov
mov
mov
xchg
adc
add
and
imul
lahf
sti
outsb
pushf
pop
xchg
xchg
jnp
movsb
test
imul
arpl
sbb
push
and
je
outsl
xchg
lahf
push
sbb
xchg
ja
inc
insb
fbld
lcall
jne
jno
out
cltd
fnstenv
sbb
xchg
lea
pop
push
outsb
jle
popa
jp
jl
inc
jbe
popa
push
mov
andl
popa
or
arpl
jnp
ja
xchg
push
popa
and
mov
xchg
xor
pop
addb
mov
cmpsl
popa
sub
out
mov
pop
xchg
test
inc
addl
or
and
or
jl
pop
subl
mov
in
in
or
inc
jnp
and
mov
repz
fstpl
jbe
mov
movsb
mov
mov
sub
mov
repz
xchg
aam
ds
sub
imul
mov
mov
mov
mov
mov
and
mov
mov
sub
mov
lock
imul
mov
sub
outsl
je
jo
nop
inc
lcall
daa
push
nop
cmp
stos
icebp
and
addl
subl
xchg
lahf
sar
push
nop
inc
ljmp
adc
fwait
sub
outsb
js
cmp
imul
aaa
daa
imul
popf
push
xchg
dec
jnp
test
jnp
lahf
mov
mov
ret
outsb
pop
mov
adc
aad
lea
movsb
subb
xor
scas
jnp
mov
add
mov
fsubs
xchg
adc
pushf
cmc
dec
nop
lea
xchg
fwait
adc
mov
data16
cmp
mov
scas
pop
jle
daa
fs
mov
mov
inc
test
and
subl
inc
arpl
lahf
shlb
lods
je
orl
sbbl
fstps
cmp
xchg
or
popa
or
jge
inc
mov
xchg
mov
pop
mov
movsb
pop
js
push
fwait
outsl
cmpb
andl
fdivs
xchg
xchg
arpl
jno
adcb
fsts
jo
hlt
int
mov
aas
popa
cld
arpl
pop
push
test
jno
dec
xchg
ja
cmp
sbbl
sub
jp
lahf
js
pop
nop
sbb
xchg
mov
pop
popf
pop
jl
mov
roll
adc
sarb
dec
add
hlt
or
pop
pop
push
xor
and
add
push
pushf
mov
es
sbb
add
cmp
and
mov
pop
sbb
imul
xchg
in
push
jp
out
js
xchg
mov
mov
daa
mov
xchg
mov
aas
nop
jg
je
aas
ja
lahf
mov
insl
inc
cmp
movsb
pop
mov
jmp
cld
jp
push
arpl
outsl
je
push
imul
dec
test
mov
sarb
imul
lahf
pop
push
pop
jo
cmpsl
cmc
sub
mov
xchg
pop
push
xchg
add
xor
ja
jae
ret
cltd
inc
xchg
addl
xchg
fcomps
adc
jae
repz
call
lea
icebp
push
lcall
mov
pop
jb
sub
adcb
adc
imul
fistpl
xchg
fsts
cwtl
xchg
popa
jg
arpl
mov
test
nop
xchg
mov
jo
popf
push
mov
lea
cltd
aad
xchg
and
pop
push
dec
mov
lret
xchg
mov
lds
mov
fstps
subb
popf
lods
sub
mov
lds
jae
mov
repz
jl
mov
testb
pop
test
pop
mov
pop
jo
hlt
push
xchg
hlt
pushf
arpl
cltd
aad
pop
xchg
hlt
outsl
pop
sahf
add
lret
xchg
or
push
pop
sub
xchg
add
mov
pushf
andl
jnp
mov
cli
pop
xchg
mov
pop
add
jno
sahf
pop
popf
vsqrtss
pop
jle
repnz
mov
or
mov
loop
jnp
push
mov
imul
imul
lea
in
push
mov
add
or
jecxz
movsb
cmp
lahf
aam
mov
mov
sub
jle
push
insl
mov
mov
jne
jb
jp
dec
jg
sbb
cmpl
add
mov
push
aaa
cltd
sti
xchg
adc
xchg
and
inc
mov
push
pop
push
decb
flds
lret
sahf
insl
adc
lea
fldenv
data16
inc
aas
xchg
xchg
sahf
and
sbbl
insl
xchg
inc
lcall
mov
popf
sbb
fwait
xchg
and
je
lock
insb
sbb
sbbl
jne
ret
xchg
pop
jmp
mov
xchg
pop
outsl
adc
push
push
popf
mov
loopne
xchg
inc
cmp
loope
push
in
movsb
pop
and
mov
pop
jnp
imul
test
jecxz
movsb
fimuls
daa
dec
je
sbbb
inc
pop
adc
imul
mov
and
lds
data16
test
mov
jno
es
adc
jmp
mov
sbb
test
and
movsb
jle
mov
fbstp
jle
and
sub
lea
mov
jbe
inc
mov
insl
jmp
xchg
or
mov
fsubrl
arpl
push
add
and
add
push
lcall
stos
stos
pop
xchg
xchg
mov
jg
in
push
pop
mov
fsubs
pop
jl
call
mov
jne
pop
mov
cmp
xchg
xor
xchg
push
test
inc
repz
rcrb
pop
ja
arpl
rcrl
mov
mov
addr16
movsb
imul
push
cwtl
out
jns
in
push
adc
in
sbb
arpl
sbbl
jge
jb
jp
ja
arpl
sbb
xchg
push
andl
pushf
cltd
xchg
xchg
inc
sbb
xchg
test
pushf
ja
jae
outsb
sbb
xchg
mov
popf
and
xchg
lea
pushf
jg
jl
js
jne
jno
inc
push
addr16
stos
movsb
lahf
xchg
fwait
inc
xchg
sbb
xchg
mov
and
mov
shlb
jmp
adc
xchg
sub
outsb
lock
lea
mov
arpl
scas
lahf
sahf
xchg
rolb
jbe
or
arpl
jl
ja
je
jno
outsb
xchg
imul
and
inc
xchg
sbb
xchg
mov
pushf
jnp
js
out
or
jbe
pushf
addr16
sub
outsl
xchg
stos
mov
xchg
outsb
jns
fwait
je
pushf
pusha
imul
ljmp
pop
call
mov
jns
mov
xchg
ja
test
mov
mov
int
cltd
ja
mov
jp
fmuls
inc
fists
push
mov
and
cltd
mov
fwait
xchg
testb
xchg
outsb
xchg
xchg
fwait
daa
loop
pushf
pusha
insb
mov
dec
and
and
mov
sbbb
xchg
mov
jae
mov
add
jnp
mov
pop
subl
pop
mov
mov
ret
mov
push
nop
dec
and
push
outsl
and
xchg
dec
fwait
mov
jp
xchg
test
popf
inc
inc
shll
xchg
imul
mov
mov
and
jnp
in
int
subb
shrl
adc
imul
cmpsl
popf
mov
mov
stos
xchg
push
pop
movsb
mov
outsl
fildll
lods
xchg
inc
xchg
arpl
xlat
addl
inc
mov
push
mov
lods
mov
jnp
addr16
fcomps
cmp
jne
fsts
outsb
arpl
pop
pushf
pop
arpl
mov
jns
sahf
popa
outsb
pushf
fwait
xchg
cltd
arpl
pop
imul
pop
xchg
arpl
lcall
mov
mov
repz
or
push
stc
popa
lods
push
mov
or
jge
dec
jnp
movd
xchg
mov
je
dec
lahf
dec
mov
outsb
xchg
jnp
push
cmpb
jge
outsb
inc
popa
jp
push
and
mov
xchg
xchg
popl
and
inc
jbe
jno
insb
andl
and
inc
mov
xchg
jg
inc
jne
jo
imul
mov
inc
xchg
sbb
xchg
lea
pushf
jns
jbe
outsl
sbb
insl
bound
and
nop
popa
mov
xchg
js
jne
insl
xchg
imul
xchg
sbb
xchg
mov
pushf
outsl
xchg
insb
ja
loope
arpl
test
sbb
xchg
imul
pop
mov
imul
rolb
loopne
sbb
jg
jl
inc
jne
jb
outsl
xchg
push
addr16
sbb
xchg
lcall
mov
jnp
js
inc
jo
imul
inc
lcall
xchg
sbbl
jb
outsb
imul
fwait
sbb
arpl
inc
mov
jns
je
jno
outsb
inc
imul
mov
inc
xchg
and
inc
mov
xchg
cmpb
and
xchg
outsb
inc
imul
mov
inc
xchg
and
lea
mov
mov
xor
mov
popf
imul
test
and
pop
jo
mov
jle
mov
sti
xchg
and
pop
xchg
movsl
pop
popf
outsl
push
lahf
jbe
test
div
jp
div
inc
mov
movsb
rclb
cmpsb
mov
imul
mov
cmp
xorl
fwait
xor
imul
mov
cs
mov
fwait
sub
cli
add
mov
jle
popf
xorb
mov
outsb
es
push
cltd
mov
fdivrl
sbb
popa
jecxz
mov
jne
test
pop
outsl
push
adc
jbe
orb
mov
das
andb
jae
jb
xchg
and
subb
jl
shlb
jb
jl
popa
mov
xorl
push
test
inc
or
fisttps
jno
mov
arpl
fwait
rolb
cltd
and
out
repnz
add
jnp
and
and
adcl
lahf
inc
jge
jae
xchg
fs
fwait
xchg
xchg
jne
insl
mov
outsb
or
popf
add
arpl
push
inc
push
jge
mov
adc
insl
mov
jno
xchg
mov
jg
movsb
in
sahf
mulps
pop
mov
and
and
popa
fcompl
push
shl
or
unpckhps
jno
dec
mov
xchg
punpcklbw
rolb
jle
sarb
insl
rolb
subb
pop
mov
jbe
ret
insb
xchg
repnz
jbe
rorb
push
repnz
dec
sbb
add
insb
push
xchg
ja
jp
jns
add
or
cmpsl
xor
xchg
xchg
aaa
mov
add
cltd
cmp
mov
loopne
loop
and
imul
mov
adcb
jns
movsb
dec
pusha
xchg
pop
iret
lahf
je
mov
pop
push
mov
imul
jo
xchg
push
je
inc
mov
lahf
jbe
jl
outsb
sbbl
out
push
lods
jg
xchg
loopne
addr16
cmp
test
push
mov
rclb
mov
insl
push
cmpb
sub
inc
fwait
adc
jl
je
mov
mov
mov
adc
jle
mov
insl
ret
daa
or
fimull
xchg
sub
insb
jbe
mov
pop
in
lcall
js
andb
andl
mov
popa
popf
pushf
cltd
jo
verr
xchg
add
mov
mov
jae
lahf
xchg
fwait
popa
xchg
jae
inc
imul
sbb
mov
aam
jae
in
mov
xchg
fwait
fs
inc
xchg
outsb
imul
mov
xchg
fwait
pop
jecxz
xchg
cmp
out
sahf
imul
mov
nop
push
ret
inc
js
xchg
icebp
stos
lcall
xchg
inc
sbb
orl
ret
aas
pop
mov
pushf
scas
xchg
stos
inc
movsl
mov
push
hlt
icebp
pushf
jmp
cmpb
sahf
dec
sahf
push
mov
sahf
or
mov
loop
cwtl
xchg
mov
xorl
insb
call
push
inc
je
or
mov
jnp
mov
xchg
dec
test
sbbb
mov
push
repz
pop
out
jae
push
jnp
mov
jae
fisubl
push
addr16
pop
jo
vmwrite
ds
outsb
lret
inc
imul
insl
mov
aad
sbb
addr16
popf
pop
fwait
mov
popa
xchg
mov
xor
cltd
sahf
shrb
pop
ss
popa
cmp
pop
out
or
movlps
xor
pop
push
shlb
add
sbb
sub
cld
push
gs
jp
pop
add
std
fisttps
xchg
cld
popl
movsl
loope
xorl
adc
cld
test
gs
cli
push
lods
sub
gs
sub
ficoml
or
lret
lret
dec
lds
add
jecxz
mov
sub
mov
jl
dec
fdivrl
xchg
test
mov
inc
mov
xchg
jnp
mov
loope
arpl
loopne
fs
inc
mov
pop
pushf
push
sbb
bound
bound
pop
pop
inc
mov
mov
fsubs
sti
and
adc
push
adc
push
pop
rcl
rcll
nop
xchg
sbb
mov
dec
int3
mov
mov
enter
dec
and
stos
test
jp
into
pop
arpl
data16
imul
sbb
test
popa
mov
lock
mov
addr16
jmp
andb
xchg
mov
sub
sbb
in
jb
aas
call
out
cmpsl
inc
push
addr16
mov
add
fidivs
cmpsl
jae
test
cwtl
addr16
imul
rcl
and
jae
mov
iret
popf
inc
jns
and
movsb
pop
pop
jb
xlat
adc
push
push
lahf
adc
xchg
mov
adcb
insb
int3
je
nop
mov
push
mov
adc
or
push
nop
adc
call
jae
adc
mov
jnp
mov
lea
lahf
and
xchg
je
xchg
popf
aas
arpl
add
addr16
fs
dec
and
mov
ss
sub
mov
jne
xchg
and
rcrl
sub
jb
xor
sbb
lea
lcall
imul
sbb
add
pushf
shlb
loop
test
xchg
jne
pusha
add
mov
add
das
mov
out
mov
adc
jnp
jecxz
xor
cmp
in
xchg
js
push
inc
nop
movsb
mov
jae
sti
mov
lcall
lcall
push
and
es
cld
mov
mov
mov
lret
mov
or
mov
dec
mov
mov
or
cwtl
pop
xlat
arpl
xor
lods
sbb
fwait
mov
sbb
in
ja
inc
pop
int3
sti
loop
push
adc
pop
fcomps
or
dec
loope
xchg
mov
or
loopne
sbb
xchg
mov
ja
mov
xchg
push
lahf
aas
push
pop
arpl
xlat
mov
inc
xchg
movsb
daa
call
mov
fsts
ret
mull
xchg
push
add
push
cmp
mov
aam
inc
leave
or
sub
add
sub
iret
push
jmp
and
sbb
pop
test
mov
mov
hlt
gs
xchg
mov
mov
push
pop
aam
adc
sbb
adc
sbb
icebp
aam
cwtl
mov
jb
cltd
insl
pop
das
pop
mov
popl
cmp
mov
sub
push
int3
pushf
xchg
cwtl
mov
adcb
xor
bound
stc
test
jns
push
leave
loope
sbb
std
add
mov
mov
mov
pop
popa
arpl
and
stos
insb
in
mov
mov
fcompl
popa
bound
jae
pop
lahf
xchg
mov
pop
addr16
test
sub
test
push
mov
adc
sahf
xchg
aas
subl
loopne
jmp
cwtl
cmp
inc
adc
dec
pop
xchg
sub
pop
das
mov
push
mov
or
jmp
adc
mov
orb
xchg
ret
lcall
nop
pushf
jbe
sbbl
xchg
movsl
js
nop
jns
add
lahf
jbe
mov
sub
mov
insl
fidivl
inc
insl
xor
mov
pop
lret
cwtl
int
mov
mov
sbb
pop
lahf
mov
or
ja
fldenv
xchg
mov
jge
hlt
adc
and
and
sub
mov
imul
xchg
addl
mov
cmp
jg
lahf
arpl
mov
mov
or
data16
sub
jg
popa
mov
xchg
sub
jb
adc
xchg
andl
mov
sub
sbb
ret
inc
arpl
scas
inc
stos
and
mov
xor
nop
push
mov
insb
mov
mov
outsb
xchg
dec
inc
addr16
xchg
imul
sbb
nop
aad
clc
xchg
je
xchg
and
pop
jb
dec
mov
sahf
dec
mov
sahf
mov
sahf
lret
mov
add
xchg
lret
push
test
jbe
ficompl
rcll
xor
lea
xor
loop
cwtl
push
or
movq
je
nop
xor
int3
shll
orl
sahf
mov
sahf
push
mov
dec
test
lahf
jg
lahf
xor
and
jae
fsubl
jb
dec
cltd
push
adc
cltd
shl
movsb
out
cwtl
fdivl
stos
xchg
js
dec
mov
jg
xchg
mov
je
call
cld
cwtl
jae
subl
lahf
insl
mov
xor
mov
loope
popf
addr16
je
popf
mov
pop
cwtl
xchg
rcr
cwtl
aam
je
dec
xchg
mov
popf
aam
je
dec
call
cwtl
hlt
xchg
or
popa
mov
test
hlt
jae
inc
xchg
dec
movsb
mov
pushf
enter
sub
or
insb
clc
arpl
jbe
aam
je
enter
and
sahf
fs
testl
inc
bound
popl
aam
je
mov
pop
insl
lock
outsl
mov
jo
jecxz
jae
jmp
sbb
pop
xchg
sti
pop
mov
iret
mov
aam
lahf
pop
dec
subl
shll
inc
and
pushf
mov
sbb
sub
dec
mov
xchg
jl
jnp
pop
jne
add
imul
sub
jne
xchg
xchg
adc
or
leave
dec
xchg
call
aad
clc
jns
lea
jo
popf
outsl
cmp
test
imul
mov
arpl
pop
and
lahf
and
jg
je
xchg
imul
insl
push
orb
push
inc
xor
or
movzbl
push
fidivrl
jge
add
addr16
outsb
jp
push
adc
aam
xchg
jbe
movsb
xlat
ljmp
es
addr16
loop
in
adc
movsb
in
and
mov
jns
loope
add
loope
shll
fwait
sub
cmp
dec
xchg
cmp
mov
test
inc
push
jnp
mov
outsb
test
jo
imul
jbe
arpl
movsb
pop
jle
aaa
lea
dec
popf
inc
jae
xor
mov
popa
and
mov
jae
sbbb
idiv
inc
test
arpl
popa
nop
mov
jl
jb
sub
cmp
fbstp
jp
and
push
loopne
jp
lahf
mov
mov
xchg
inc
mov
cltd
mov
xchg
pop
pop
xchg
mov
mov
nop
mov
dec
mov
mov
dec
imul
js
mov
popf
jno
lcall
and
filds
and
fwait
test
cs
sahf
nop
roll
xchg
pushf
lahf
jne
pop
andb
in
mov
cwtl
pusha
mov
xchg
adc
add
adcb
add
xchg
xchg
lock
jg
notl
mov
add
pop
jge
insb
mov
xchg
jl
mov
lock
in
pushf
sub
lahf
fnstcw
data16
mov
lahf
enter
mov
push
cmpsb
jb
loope
fdivl
xlat
inc
rcrb
addr16
aaa
andb
outsb
mov
sub
movsb
inc
jae
je
rcrb
lcall
nop
sahf
dec
test
pushf
jl
imul
and
stos
pop
push
push
push
cltd
dec
xchg
adc
iret
dec
mov
jno
cmpb
mov
pop
insb
andb
rolb
mov
jle
mov
pop
jnp
hlt
add
jp
mov
mov
in
xchg
inc
pop
adc
rolb
mov
push
test
xchg
ljmp
mov
jo
sahf
aam
add
mov
aam
jo
ja
in
adc
jb
test
int3
mov
loopne
mov
add
xchg
adc
mov
jno
clc
mov
push
mov
xchg
mov
jb
fisubrl
mov
xchg
mov
addr16
mov
fwait
roll
lret
lahf
push
pop
pop
out
push
push
and
fistl
sbb
xchg
mov
push
lods
mov
adc
mov
data16
jle
mov
mov
push
push
lock
arpl
ja
nop
dec
aad
movsb
fnstcw
pop
add
push
xchg
xchg
int3
lock
fcomps
lahf
test
mov
jo
lahf
jbe
mov
outsb
mov
sahf
push
sbb
cmp
data16
mov
stc
sbb
fbld
addb
outsb
adc
and
mov
xchg
or
fs
mov
insb
lea
jae
jg
mov
jge
and
retw
push
call
movsb
mov
pop
jmp
andl
xorl
and
lahf
insl
mov
insb
xor
push
jne
xor
lea
xor
push
jae
outsl
add
xchg
mov
pop
arpl
mov
xor
pop
stos
mov
rorl
or
and
pushf
clc
xchg
add
mov
aam
je
add
hlt
inc
jle
fstp
sub
mov
insl
jae
xchg
hlt
aaa
je
mov
pop
outsb
push
fwait
ret
hlt
icebp
jo
bound
insl
jae
xchg
hlt
testb
mov
sub
mov
jecxz
fsubrl
cmpb
xchg
inc
jae
roll
sbb
xchg
ret
mov
mov
xchg
inc
dec
mov
stos
adc
addr16
mov
packssdw
andl
xchg
pop
jo
orl
sub
pusha
jns
cli
repnz
mov
pop
jg
mov
inc
jae
add
je
pop
xchg
lea
adc
in
sbb
jge
dec
imul
jae
xor
sbb
xchg
cld
mov
outsl
push
cmp
xchg
ja
push
cmpb
mov
pop
dec
jae
sahf
int3
jbe
pop
jno
adc
mov
movsb
xchg
test
ss
leave
stos
mov
lahf
lret
out
xchg
nop
pop
jbe
inc
outsb
addr16
push
mov
xor
jp
inc
jge
and
adc
mov
mov
mov
lods
hlt
jo
pop
outsb
in
pop
outsl
andb
mov
push
popf
addb
push
aam
mov
in
mov
mov
ret
out
subl
rolb
jp
xor
insb
mov
mov
imull
aas
xchg
ret
je
mov
adc
insb
stc
outsb
popf
mov
fwait
out
out
jne
mov
mov
es
jno
scas
xchg
ret
outsb
mov
out
outsl
insb
xchg
test
popa
xchg
pop
sub
jbe
int
test
jb
mov
or
jecxz
int
jnp
pop
imul
scas
popf
popa
sub
jo
pop
jbe
xchg
jge
andb
repz
jp
pop
xchg
loope
fwait
leave
and
xor
mov
push
lcall
mov
jo
sbbb
push
pop
mov
popa
xchg
jae
xchg
lods
lahf
pop
lock
addl
lahf
cmp
inc
inc
lcall
and
pop
nop
in
gs
insb
xchg
or
sbb
adc
xchg
popa
fsts
mov
mov
jo
dec
push
jbe
inc
mov
push
push
jo
jbe
pusha
fstps
insb
aam
je
jg
jae
sbb
ljmp
mov
in
xchg
sub
sbb
and
lods
cltd
adc
xchg
jae
xchg
lods
or
ficoms
cltd
pushf
fiadds
sbb
push
mov
test
pop
mov
xchg
xchg
iret
pusha
jae
xchg
jp
mov
mov
je
dec
mov
and
xchg
inc
pop
fwait
ja
insl
pop
sbb
shlb
and
subb
sti
fwait
xchg
mov
in
jnp
mov
dec
xchg
mov
lahf
adc
or
loopne
jg
ja
ret
cmpl
lock
aas
xchg
jle
ss
mov
xchg
push
lahf
leave
xchg
jnp
ret
adcl
add
adc
lcall
test
lcall
mov
mov
scas
xchg
test
inc
arpl
sbb
xchg
ror
inc
and
pushf
mov
sbb
push
test
into
test
inc
sub
pop
movsb
orl
fimull
dec
addl
dec
sub
ficoml
subb
data16
pop
pushf
sahf
inc
mov
frstor
xor
mov
insb
sbb
jo
xorb
sbb
cmpsl
subb
stc
test
mov
cwtl
sbb
test
jbe
inc
insb
push
js
cmp
leave
popa
jae
or
shlb
adc
call
jno
mov
jle
dec
dec
je
xchg
mov
push
gs
sbb
mov
pop
xchg
lea
pop
je
xchg
mov
cmp
out
dec
mov
mov
pusha
lahf
inc
jb
dec
inc
jb
fwait
xor
push
sub
ficompl
mov
jp
jp
adc
jae
adc
dec
pop
lcall
fwait
insb
sbbl
cmp
and
call
rolb
jae
xorl
ret
test
jnp
mov
sub
xor
je
and
test
movsb
mov
in
mov
mov
xor
popa
rcr
mov
popf
jns
fsubrl
loop
jb
insl
mov
pop
sbb
cmpb
xor
xchg
in
mov
into
cmpl
jbe
outsb
mov
xor
es
xchg
adc
mov
cmpb
data16
cmc
or
pushf
in
repz
pop
lret
out
out
mov
pushf
mov
cmpsl
cltd
lea
popf
xchg
inc
arpl
rcrb
pop
jl
push
lcall
mov
or
orb
mov
sahf
xor
jge
xchg
adc
xchg
insb
jmp
lahf
popa
popf
imul
jle
sbb
data16
push
data16
cltd
popa
nop
inc
in
mov
sbb
arpl
inc
jne
cmp
push
cmp
outsl
gs
xor
sub
arpl
clc
jno
mov
in
imul
jnp
push
push
sub
popf
pop
repnz
stos
and
mov
xchg
mov
lahf
inc
mov
cltd
icebp
addr16
xchg
ljmp
sti
andl
add
shrl
push
call
insb
insl
mov
mov
jl
subl
jg
xor
jne
ja
dec
mov
jg
arpl
fwait
sub
or
loop
fsubrl
loopne
ss
in
jbe
loope
xchg
cmp
xchg
stc
jae
mov
lcall
into
mov
addr16
add
mov
mov
xor
add
cmp
mov
pop
mov
rcrb
xchg
jle
cwtl
lock
mov
jg
fadd
inc
imul
mov
rcrb
lahf
xchg
sti
lahf
inc
xchg
pop
jbe
dec
ja
sahf
add
in
fwait
jp
adc
add
jae
pop
je
jp
fcomps
shll
outsl
jp
lcall
pushf
cmp
sahf
jb
xor
ja
xchg
dec
sbb
jl
loope
adc
mov
fcmovnu
shll
lahf
sub
jo
mov
mov
jne
stc
sbb
sbb
add
hlt
imul
sbbb
pop
je
mov
sbbl
ret
andl
add
loope
cmpb
mov
mov
daa
jb
pop
sbb
popa
mov
sbbl
jbe
sbb
cmp
mov
outsb
mov
clc
sub
mov
test
push
jp
fwait
mov
mov
fldt
and
sahf
mov
and
js
insb
and
jo
mov
ja
mov
xchg
nop
fs
jge
jbe
sahf
in
ja
pop
lea
jne
and
movsb
js
or
data16
pop
cmp
js
popf
jb
push
pop
mov
inc
jae
js
pushf
ret
orl
pushf
xchg
sbb
mov
push
mov
repz
mov
xchg
iret
inc
lret
xchg
sarb
lods
xchg
cmpsl
and
popa
fstpl
xchg
ror
inc
leave
and
pushf
mov
jle
push
mov
cmp
addr16
lea
mov
sahf
sbbb
sbb
mov
xchg
jbe
int
sbb
subb
addl
jl
bnd
dec
dec
outsl
ficoml
mov
and
mov
in
xchg
sub
sbb
inc
imul
jl
jnp
aaa
jmp
pop
mov
xchg
jl
jno
fbld
pop
lcall
pop
orl
insl
or
mov
inc
xchg
nop
adc
jge
pop
popl
mov
sub
sbb
jno
xchg
cmpsl
add
xchg
sub
xchg
inc
in
adc
call
mov
push
mov
mov
mov
fisubl
mov
mov
addl
je
js
push
mov
scas
pusha
xchg
inc
imul
xchg
mov
mov
ja
inc
dec
cltd
lahf
inc
stc
fwait
adc
mov
mov
jo
mov
in
cltd
js
add
add
xchg
lahf
xchg
xchg
inc
ss
lahf
popl
mov
adc
add
cmpl
mov
adc
std
lcall
call
dec
xchg
ja
pop
jns
jns
dec
adc
bnd
jge
mov
mov
dec
push
aas
ja
xchg
test
jbe
and
inc
mov
xchg
inc
ja
movsb
hlt
dec
cmpsb
jl
and
inc
mov
imul
xchg
cmc
mov
xchg
adc
jbe
mov
cs
mov
mov
and
jl
jno
iret
sbb
mov
xor
sbb
mov
sbbb
cltd
movsb
lcall
cwtl
xchg
idivb
cltd
xorl
sub
xor
aaa
mov
xlat
mov
jle
pop
hlt
imul
js
jl
fmull
mov
pop
mov
jne
addl
mov
cs
mov
add
pop
cltd
adc
xlat
pop
jg
pushf
filds
imul
pushf
jge
popf
or
jno
xchg
data16
xchg
jb
jnp
and
aam
je
out
gs
movsb
push
ss
xchg
jnp
dec
jns
bound
lahf
xchg
xchg
outsl
lcall
inc
dec
ja
and
fwait
insl
xchg
sub
popf
push
ss
sub
pop
and
insl
xlat
je
xchg
jecxz
fsubrl
and
lea
jo
movsb
pushf
mov
sub
inc
in
je
rorb
sub
nop
xorb
aas
arpl
shrb
mov
mov
push
imul
shll
sbb
roll
mov
xor
imul
dec
xor
mov
jle
jge
pop
insl
push
cmp
jb
andl
dec
and
imul
pop
mov
testl
sahf
and
pushf
push
in
popa
add
jno
sahf
outsb
lea
addl
fcomps
push
adc
jae
inc
in
mov
test
dec
in
sbb
popf
cmc
jae
outsb
adc
test
lods
mov
pushf
xchg
imul
popa
lea
dec
and
or
dec
mov
adc
mov
push
mov
daa
shlb
sub
or
in
adc
mov
cmp
aam
rorl
xchg
cmpsl
out
clc
inc
or
or
dec
pop
inc
mov
enter
cwtl
popf
fmuls
sbb
dec
mov
mov
mov
push
xor
adc
adc
mov
xlat
dec
cltd
test
mov
cwtl
lods
loopne
in
jle
pop
iret
mov
mov
and
jnp
mov
pop
inc
in
rclb
test
popl
std
mov
inc
cmp
je
mov
imul
and
scas
ficompl
mov
sahf
rcll
push
inc
fwait
out
arpl
lea
mov
in
enter
dec
fstl
jmp
pop
xchg
call
in
or
cli
test
dec
dec
cltd
dec
sbb
push
cmpsb
and
mov
fisubl
dec
cmp
daa
and
adc
fmuls
push
add
test
popf
syscall
xchg
dec
clc
movl
leave
add
xchg
loop
sbb
xchg
push
jge
loopne
mov
sbb
arpl
pushf
pop
mov
test
or
mov
in
pop
pop
imul
stc
adc
jg
and
insb
fldt
les
shll
shrb
inc
insb
mov
dec
dec
fcomps
pop
mov
int3
dec
jle
movsl
andb
sti
xchg
and
pop
jo
xor
pushf
and
mov
sbb
fwait
pop
inc
jne
xchg
aas
test
lret
mov
lahf
inc
shlb
test
aas
insb
pusha
add
push
mov
repnz
pop
imul
dec
sbb
pop
add
js
fwait
loop
nop
xchg
in
int3
dec
or
mov
rcrl
push
aam
xor
xchg
xchg
mov
sar
and
cltd
insb
xor
inc
mov
push
pop
inc
xchg
push
xchg
fsubl
lock
adc
xchg
cwtl
or
cmp
xchg
sbb
mov
popf
aam
push
rorl
pop
lret
pop
pop
or
arpl
pop
mov
or
sbb
mov
mov
fnstenv
or
push
jo
mov
dec
xchg
or
pop
int3
pusha
add
mov
xchg
xchg
or
mov
pop
clc
insb
fs
cmp
mov
movsb
pop
inc
out
mov
and
xlat
jmp
mov
loop
movsb
jnp
sbb
lods
or
in
and
xchg
xchg
sbb
push
insb
mov
enter
rcrb
fwait
rclb
push
xchg
icebp
sbb
subl
sbbb
lea
jg
fsubp
jne
and
insl
cltd
mov
out
mov
sahf
inc
sbb
xchg
xor
fsubrl
jle
jl
shrl
mov
mov
push
int
mov
xor
inc
mov
jnp
jge
push
xchg
dec
pushf
je
xchg
xchg
orb
mov
and
push
mov
leave
aaa
inc
jns
adcb
fdivrl
and
adc
or
xchg
jg
bound
leave
dec
and
sahf
jne
mov
xchg
pop
roll
mov
cmp
or
mov
mov
mov
and
adc
adc
stc
dec
and
dec
pop
xchg
orb
jae
xor
fdivrl
xchg
arpl
mov
sar
add
fdivr
jb
sbb
dec
cmp
insb
push
pop
push
movsb
repz
jns
jbe
test
test
adc
popf
dec
sub
inc
aas
pop
xchg
inc
xchg
lock
lea
pop
addr16
xchg
or
xchg
dec
push
adc
jp
jle
mov
es
loop
jns
and
and
imul
push
loope
mov
adcl
dec
es
subb
mov
mov
cwtl
shll
and
dec
or
lahf
xchg
lcall
pop
fwait
je
xchg
mov
dec
lret
rorb
adc
adc
xchg
movsb
jae
xchg
push
pop
xchg
hlt
mov
lret
mov
xor
cmp
dec
jle
xchg
cmp
and
xchg
dec
rorb
xchg
xchg
mov
jp
scas
popl
cld
jl
xchg
xchg
push
pop
je
xchg
aas
jle
fs
dec
and
test
push
adc
fldl
adcl
sarl
cwtl
or
xchg
xchg
cwtl
xor
cwtl
aam
test
adc
outsl
sub
sbb
addl
xchg
lods
sbb
cmp
call
enter
insb
test
jle
cld
data16
fs
jle
repnz
addb
sub
test
mov
jo
mov
cmpl
fstp
fists
push
xor
js
jnp
inc
jl
jp
shll
fs
subl
mov
popa
addr16
loop
pop
dec
aas
aas
or
sti
pop
stc
jne
mov
mov
jbe
aam
test
mov
or
pushf
mov
aam
cmpl
popa
adc
dec
add
adc
outsb
dec
push
or
imul
imul
mov
dec
mov
pop
cmp
dec
mov
sti
xchg
adc
push
popa
adc
rorb
popf
adc
addr16
roll
jae
or
push
inc
push
xchg
pop
and
xchg
pushf
or
jno
xor
mov
shrb
icebp
push
nop
push
xchg
mov
push
pop
lahf
je
xchg
or
mov
jno
shlb
or
adc
js
xor
arpl
sarl
lds
pop
dec
pop
inc
sbb
pop
push
mov
arpl
inc
jns
dec
or
int
push
rcll
and
arpl
sahf
jmp
rcll
dec
into
fwait
fwait
iret
sbb
test
mov
jp
or
nop
add
mov
mov
jbe
inc
arpl
lahf
xchg
popf
mov
push
mov
jmp
sti
sahf
sub
cltd
fwait
leave
pusha
xchg
jae
or
das
mov
mov
mov
mov
sbb
gs
push
jle
movsb
ja
mov
test
gs
adc
jno
jne
fs
lods
or
call
mov
mov
stos
adc
fimull
inc
adc
sub
or
in
push
mov
inc
mov
xchg
aam
cltd
test
movsl
addr16
mov
and
dec
fadd
push
jle
xor
and
movsb
lret
jg
popf
mov
mov
jo
push
and
fwait
xchg
xchg
arpl
and
xchg
sti
popf
bound
xchg
nop
dec
and
lahf
and
jno
push
xor
xchg
lahf
addl
popf
jbe
or
jbe
imul
jae
jp
cltd
fimuls
inc
xchg
in
mov
and
lret
adc
and
and
js
mov
fldl
jbe
xchg
add
lea
int3
ficomps
packsswb
lahf
jnp
and
fsubl
sub
subb
dec
jp
insl
insl
xor
mov
xchg
pushf
dec
jo
enter
mov
pop
xchg
xor
mov
outsl
and
add
and
cmc
test
test
sub
nop
outsb
rorl
rclb
repz
pop
into
lea
inc
jbe,pn
xchg
arpl
inc
inc
gs
push
xchg
xchg
test
sbb
xchg
sub
xchg
ret
pop
dec
jo
pusha
stos
lods
mov
lea
xchg
xor
pop
mov
loope
gs
rol
mov
aaa
cmp
imul
cld
push
adc
out
lcall
mov
test
cmpsb
gs
sar
and
jne
ret
or
push
call
inc
sub
mov
mov
dec
cld
inc
nop
popf
xlat
mov
clc
scas
lock
xchg
pop
je
movsb
mov
scas
loopne
mov
je
mov
sub
test
cwtl
shrb
xchg
pop
ret
gs
inc
pop
xor
lret
scas
cmc
mov
push
les
mov
xchg
bnd
and
arpl
aam
push
inc
arpl
adc
int3
cli
sub
cwtl
pusha
out
mov
xchg
mov
cli
xchg
mov
in
cmpsl
cmpsb
cs
lods
pop
push
xchg
movsb
pop
mov
mov
push
or
cwtl
xchg
jmp
fwait
mov
xor
pop
mov
mov
stos
jl
push
dec
dec
enter
fwait
arpl
outsl
dec
imul
or
cmpsl
dec
jmp
mov
ljmp
nop
sahf
or
aam
sub
in
jo
int
dec
xchg
jecxz
push
shlb
gs
adc
cmp
in
jg
orl
ja
or
lahf
int3
lret
mov
sahf
bnd
jo
in
dec
and
sbb
aaa
in
cwtl
movsb
icebp
pushf
and
ljmp
dec
sbbb
xor
fwait
mov
mov
mov
jns
and
adc
dec
cmc
xchg
scas
imul
or
and
inc
push
lea
clc
std
adc
shll
mov
xchg
sbb
jno
clc
in
popf
pop
cmp
sbb
sub
xchg
or
pop
cltd
lcall
xchg
out
pop
xor
lea
cwtl
nop
sub
enter
int
aas
popf
jecxz
loop
outsb
fistpl
enter
xchg
iret
jecxz
and
mov
out
jge
xchg
bound
cwtl
sbb
insb
lahf
ljmp
dec
jp
and
or
stos
in
inc
sbb
push
insl
ljmp
arpl
lds
enter
mov
adc
mov
or
sahf
fwait
cwtl
movsb
cmpsl
xchg
mov
push
xchg
orb
mov
repz
rorl
mov
xchg
lahf
fwait
adc
insl
pop
popf
xchg
pop
inc
pop
test
push
or
jne
sub
pop
or
sbb
xchg
cmp
mov
hlt
test
or
cmp
jmp
cmc
ret
outsb
into
cmc
mov
lea
xchg
mov
fwait
xor
dec
mov
adc
xchg
mov
call
lret
pushf
lea
xchg
out
xchg
sbb
arpl
dec
add
mov
ja
or
jge
fwait
pop
and
fnstenv
inc
movb
out
pop
int3
enter
push
cld
xacquire
cmpsl
rclb
xchg
mov
orb
jne,pn
dec
push
ljmp
hlt
jge
mov
arpl
or
add
orl
into
or
pushf
sub
dec
sarl
sbb
or
pusha
lret
sbb
and
jnp
jl
hlt
pop
adc
cwtl
rclb
aas
mov
lahf
lahf
sub
dec
or
leave
mov
jb
mov
aas
xchg
xchg
das
sbbb
stos
lcall
mov
pop
pop
icebp
mov
xchg
js
cltd
inc
mov
adc
xchg
inc
mov
adc
or
int
pop
imul
mov
xchg
inc
xchg
cld
xchg
sahf
rorl
enter
es
add
mov
rol
test
inc
push
rclb
lea
ja
xchg
pusha
jg
push
mov
int3
cmpsb
sbb
push
inc
mov
mov
das
push
lret
rcll
popa
cld
mov
shrb
and
and
test
popa
sub
pop
outsl
push
fwait
shll
je
xchg
test
sub
adc
dec
dec
bound
xor
outsb
popa
cmp
outsb
dec
test
push
push
cmp
xchg
push
jle
pop
jl
mov
mov
xchg
xchg
jnp
mov
inc
jo
mov
jl
xchg
pop
mov
add
mov
mov
push
push
sbb
fs
push
fimull
xchg
cmp
inc
jbe
ss
ficomps
cmp
pop
mov
mov
outsl
xchg
fstl
mov
gs
insb
mov
xor
out
add
sahf
cs
sahf
pop
or
call
cltd
fcmovnu
xor
sub
adc
inc
test
sbb
js
movsb
rcrl
out
mov
lods
in
in
andb
loop
push
mov
out
mov
ja
in
popa
ja
jne
push
add
das
test
xchg
jb
pop
ss
aam
dec
insb
push
mov
add
mov
in
jp
pop
gs
mov
xchg
xchg
ficompl
xchg
cmpl
outsl
icebp
xor
mov
add
fsubrl
insb
xchg
movsb
shrl
xchg
push
add
xchg
push
lea
stos
gs
mov
andb
push
loope
sub
lret
in
into
add
test
fnstenv
enter
std
outsl
fidivrs
jmp
push
std
jg
push
int
arpl
xchg
mov
cmc
js
xchg
cli
or
pop
daa
imul
pushl
mov
push
jo
and
mov
loop
mov
mov
pop
rolb
cmp
loopne
xchg
ror
js
ficomps
mov
mov
and
xchg
xor
imull
or
aad
popf
push
jle
imul
jle
inc
imul
test
push
jecxz
js
add
std
jge
pop
dec
mov
out
cmp
shll
adcb
adc
nop
js
aaa
pushf
mov
bnd
mov
jg
xchg
popf
aam
adc
mov
jns
aas
in
gs
push
ret
fcomi
insb
loop
mov
shlb
ljmp
aas
loopne
loopne
jmp
pop
add
xchg
out
push
adc
inc
xor
clc
pop
int
push
nop
jb
ret
xor
repnz
in
sbbl
gs
enter
fucom
test
lds
loope
in
hlt
jb
cmpsl
inc
scas
jae
neg
in
fs
inc
mov
inc
or
push
push
sbb
outsb
jnp
pop
or
orl
mov
jae
sahf
xchg
add
mov
mov
mov
test
popa
mov
jecxz
jg
js
jne
test
enter
jp
mov
dec
jecxz
shlb
aad
or
enter
gs
in
adc
pop
xor
movsb
cmpsl
leave
andl
lock
cmp
pop
pop
mov
mov
xor
inc
pop
push
iret
mov
cli
adc
out
pop
addr16
lahf
adc
testl
and
xchg
js
dec
das
arpl
popf
ja
or
xor
mov
xchg
adc
insl
hlt
dec
outsb
dec
testl
mov
xchg
xchg
pop
sti
xchg
arpl
rolb
or
lret
test
mov
xchg
hlt
xor
jle
cltd
fsts
repnz
incl
icebp
adc
jns
mov
nop
jnp
push
push
lahf
mov
nop
fwait
mov
xchg
or
xchg
aam
jmp
jb
bound
xor
mov
dec
mov
xchg
dec
je
pushf
test
inc
mov
mov
mov
cmc
sahf
adc
in
cmp
inc
test
push
push
xor
pusha
popf
into
pop
movsb
or
xchg
sub
mov
jmp
xchg
iret
mov
sti
popf
xchg
xchg
sbbb
pop
xchg
mov
cmp
fwait
xchg
push
mov
out
fwait
insb
or
pop
cmp
imul
lcall
lcall
fsubs
pop
dec
popf
inc
mov
rcrl
mov
xchg
pop
nop
fldenv
push
xor
pop
cltd
mov
cmp
out
fistps
mov
sbb
inc
fwait
sub
jae
cmp
or
movsb
xchg
xchg
push
nop
cltd
mov
jg
add
in
lahf
inc
adc
xchg
popa
mov
inc
push
rorl
lds
or
sar
ret
out
iret
mov
shl
les
pop
xorl
lret
mov
or
movsl
outsl
sti
or
out
lds
jmp
mov
adc
and
inc
cmp
lret
mov
sbb
mov
cmp
dec
adc
subb
xchg
adc
leave
sbb
imul
sub
push
pop
cmovp
faddl
pop
jp
or
jno
cltd
lahf
jl
push
mov
mov
sahf
jbe
mov
mov
mov
cmp
mov
into
xchg
lds
add
dec
mov
and
adc
mov
mov
pop
mov
cwtl
jp
cltd
push
movsbl
movb
xchg
mov
addl
mov
push
jl
or
dec
mov
push
movsb
jae
cltd
dec
pop
gs
sti
dec
adc
movsb
addl
xchg
mov
sahf
mov
rolb
sub
jne
mov
inc
mov
inc
xchg
jecxz
dec
les
fisttpll
nop
es
jns
loop
jle
rclb
les
fsts
lret
gs
jg
add
orl
and
sbb
xchg
dec
sbb
or
jle
and
or
mov
and
lea
lock
and
outsb
push
mov
data16
shrb
bound
adc
rcrl
dec
dec
lret
pop
jno
int
jecxz
adc
fsubl
or
sub
xchg
out
insb
sbbb
in
adc
icebp
mov
cmpl
rorl
inc
push
jnp
sahf
test
cmp
jp
les
push
pop
lea
test
nop
mov
shll
sahf
movsb
je
or
xchg
dec
and
jg
test
and
fs
jne
dec
mov
and
mov
les
mov
add
lds
xchg
mov
xchg
xor
outsl
xorl
xor
out
lahf
sbb
mov
gs
cs
adc
and
jg
andb
les
ljmp
cli
mov
divl
rorl
imul
ljmp
adc
xchg
mov
adc
inc
lcall
jne
call
adc
shll
pop
dec
and
lds
int3
dec
cwtl
cmpsl
ret
out
outsb
lcall
add
xchg
fs
fcompl
mov
jns
inc
movsb
mov
push
je
pop
and
cmc
xchg
rcr
lahf
push
arpl
xchg
xchg
mov
mov
jno
rcrb
sbb
adc
sahf
xor
hlt
xchg
fmuls
popf
into
insb
xlat
jae
push
or
mov
or
jne
inc
jnp
jge
fstl
test
cmp
or
xchg
jmp
addr16
dec
fisubl
jp
mov
ja
pop
inc
push
xchg
popf
cmp
jecxz
add
ja
fcmovnu
popf
popa
sbb
adc
sbb
xchg
sbb
sbb
xchg
pop
inc
lcall
jns
movb
decl
xchg
xchg
popf
mov
inc
push
sub
int
inc
outsb
les
xchg
fs
or
push
imul
ja
je
mov
mov
push
xchg
xchg
imul
jne
mov
rorb
out
int3
lret
js
dec
xor
sub
fcmovne
ret
sbb
lahf
fisttpl
jg
popf
clts
jle
pop
adc
xchg
xchg
xchg
and
mov
push
shr
or
mov
or
insl
pmuludq
push
cs
push
imul
data16
fucomp
jl
mov
testl
mov
jp
xor
lret
enter
add
mov
stc
std
jle
xchg
fwait
or
xchg
or
cmp
or
decb
mov
or
adc
mov
cmp
in
fldenv
imul
push
jbe
lret
mov
int3
or
je
push
sahf
and
rcrl
sahf
adc
repnz
or
and
lea
adcb
or
popf
and
jb
xchg
cmp
jl
fsubrs
ret
repnz
xchg
adc
and
popf
xchg
mov
popf
adcl
test
push
lahf
adc
add
js
or
and
pop
xlat
jno
rcll
mov
xor
jp
sahf
or
mov
jle
xor
lea
mov
pop
xorl
xchg
inc
lahf
popa
xchg
xchg
sbb
aas
fdivrs
xchg
and
cmp
lahf
pop
mov
mov
cwtl
shll
mov
lcall
lahf
mov
xchg
ljmp
xchg
jo
jnp
pop
int
shll
mov
popf
or
and
mov
lcall
mov
ret
out
xchg
lcall
push
bound
adc
mov
fcomps
adc
mov
push
fadds
insb
sbb
sbb
mov
mov
sahf
pushf
std
xchg
pop
and
ja
cmp
cmp
adc
jp
cmp
adc
clc
aam
repnz
mov
jae
sahf
aam
jno
lcall
push
jno
inc
popf
adcb
aam
xchg
push
pop
fstpl
pop
in
mov
jbe
ljmp
je
adc
or
inc
xchg
inc
pop
xchg
js
fwait
jo
mov
or
adc
mov
nop
xchg
push
jge
fwait
dec
pop
in
mov
jp
or
ret
xchg
xor
mov
mov
cmc
popf
js
pop
mov
arpl
dec
xchg
loop
out
lcall
into
call
adc
add
test
popa
in
xchg
mov
push
int
js
into
add
jb
imul
xorb
test
and
or
mov
ret
adc
mov
xor
mov
mov
pop
cmp
mov
cld
and
lahf
scas
orl
mov
shlb
sbb
fwait
adc
fisttpl
sub
pop
mov
adc
and
adc
cmp
cmp
lahf
dec
std
roll
pop
or
sub
dec
pushf
and
enter
sbb
rcrb
sbb
popf
repz
push
pop
add
or
push
and
xchg
add
sub
push
movsb
shlb
pop
xchg
jle
fisttpll
or
push
or
adc
adc
sbb
nop
int3
je
inc
loopne
out
bound
mov
pop
mov
pop
jns
enter
mov
xor
outsb
and
rcll
mov
enter
lahf
dec
xchg
lret
cltd
xchg
insl
sub
cltd
arpl
imul
mov
mov
and
adc
inc
xchg
inc
pusha
mov
mov
or
lcall
adc
les
and
sbbb
mov
jns
xor
cwtl
jo
divl
std
enter
and
jno
inc
gs
nop
test
aam
fs
mov
dec
pushf
call
aas
fistpl
jmp
jne
hlt
shl
fildl
addr16
push
push
mov
shl
adc
fldenv
leave
mov
cmovg
popf
dec
mov
pushf
sahf
ljmp
fcompl
addb
xchg
push
xchg
fs
lret
rorb
jae
mov
mov
xchg
rorb
xchg
mov
xchg
pop
and
inc
push
sbbb
ret
imul
fisubl
push
xchg
and
xchg
add
pop
adc
sahf
arpl
cltd
iret
out
cwtl
mov
xchg
xchg
mov
fwait
and
in
psllw
mov
lea
pushf
xchg
xchg
into
ja
rcrl
xor
and
mov
fwait
xchg
and
and
jnp
fwait
fs
dec
sub
and
xor
jge
jge
xchg
inc
mov
cmpsb
je
cbtw
add
test
ret
xchg
repnz
jle
pushf
adc
sub
inc
xchg
andl
xor
andl
sbbl
aam
test
dec
inc
movsb
cltd
jne
mov
cltd
andl
insb
xor
mov
cltd
clc
cwtl
adc
fisttpl
sbb
sahf
data16
add
push
lds
mov
inc
jecxz
addl
xchg
movsb
push
jnp
jnp
cmp
jns
adc
adc
cld
pop
cltd
mov
mov
jle
stos
xor
cltd
mov
adc
jecxz
popa
lahf
mov
andb
adc
lcall
mov
inc
lcall
je
push
movsb
push
jo
js
insl
popf
mov
adcl
jecxz
dec
cmpb
mov
and
arpl
jle
les
aam
jns
dec
jge
jg
push
add
jae
mov
xlat
andb
mov
and
das
imul
jg
mov
test
and
jge
adc
setnp
adc
pusha
dec
stc
or
sti
mov
adc
pop
xor
push
mov
repnz
or
lea
inc
sti
mov
cmpl
cs
lahf
dec
leave
xchg
push
cmpl
mov
popa
mov
inc
adcb
sahf
ficompl
in
or
push
push
sahf
ja
mov
std
jmp
cltd
rcrb
cmp
pop
xchg
jp
shll
and
inc
mov
andb
lds
dec
add
mov
xchg
mov
and
mov
adc
outsl
pop
insl
dec
jae
cmp
andl
xchg
cwtl
jb
sti
popf
adc
add
nop
mov
fdivr
dec
subl
xor
xor
mov
popf
sbb
push
sbb
lret
mov
pushf
adc
adc
filds
jae
shlb
fwait
gs
or
imul
lds
mov
sarl
and
mov
or
push
adc
sti
nop
out
popf
jae
mov
mov
mov
or
or
xchg
decl
mov
xchg
test
dec
xchg
rorl
cmc
xchg
or
sbb
sbbb
add
nop
and
sub
mov
mov
cltd
mov
rcll
and
outsb
jae
and
or
pop
lea
xor
jl
mov
jb
in
loopne
stc
int
and
sahf
fs
cmpsl
in
adc
jno
and
add
xchg
mov
subl
rcrl
jbe
push
xchg
lods
xchg
inc
cwtl
mov
shlb
jo
mov
add
roll
fnstcw
mov
xlat
add
xchg
inc
loope
adc
lret
push
cmp
out
insl
push
adc
jb
rclb
fldt
jns
imul
or
or
jno
subl
mov
xchg
fsubl
xor
fcompl
inc
xor
jg
inc
test
lret
xchg
dec
pop
fwait
xchg
mov
lret
jg
mov
xchg
pushf
aam
add
xchg
and
cmp
std
dec
xchg
mov
inc
xchg
sahf
or
mov
popf
lahf
lcall
lahf
push
sahf
sbb
jb
cwtl
push
xchg
pushf
shlb
mov
cld
and
jo
dec
decb
stos
xchg
icebp
movsl
cltd
insb
fs
pop
sbb
and
push
inc
sbb
dec
jno
iret
loopne
dec
je
rol
pusha
rcrb
insl
dec
in
jo
push
movsb
push
imul
and
pushf
jb
sbb
lock
and
sbb
imul
ficompl
mov
cmpb
pop
jnp
xor
xchg
xchg
outsb
mov
das
xchg
sti
sti
jp
testb
xchg
into
xor
sub
push
rcrl
add
popf
mov
mov
or
icebp
adc
adc
nop
pop
scas
setp
jmp
arpl
mov
mov
and
jne
jg
shlb
cmovg
inc
outsb
xchg
push
pop
inc
int
xchg
int
jg
cld
xchg
mov
pop
popf
and
mov
and
cwtl
dec
mov
or
hlt
pushl
or
imul
shl
adc
push
sbbl
mov
test
insb
adc
mov
lahf
xor
cmp
dec
js
and
pop
rorb
adcb
mov
fwait
divb
movsb
xchg
jle
mov
add
icebp
jle
cltd
repz
insl
aam
xchg
cmp
and
and
jmp
aad
js
pop
push
pop
push
jl
mov
and
lret
enter
push
cltd
mov
dec
mov
pusha
test
aaa
dec
mov
mov
fwait
subb
sub
mov
int
inc
fwait
sahf
xchg
and
cmpl
std
insb
insb
sbb
mov
clc
mov
sbb
mov
mov
sub
xor
sbb
adc
in
je
xorl
push
pop
and
orl
mov
xchg
fwait
dec
arpl
jg
rcrl
jo
pushf
jl
and
adc
mov
addr16
sbb
push
mov
lds
mov
add
add
dec
push
xchg
fwait
lea
mov
wbinvd
push
out
js
nop
in
xchg
xchg
inc
xchg
adc
lret
repnz
add
xchg
dec
push
mov
adcb
xor
inc
pop
dec
ret
dec
mov
push
lret
adc
dec
sbbb
push
jle
in
mov
xchg
dec
rcrl
pop
lahf
fwait
ljmp
xchg
sbb
xorl
rorb
push
test
xchg
cmpl
add
andl
inc
mov
jno
imul
cmp
adc
jne
inc
sahf
mov
fs
dec
popa
js
in
lret
ret
andb
bound
subb
loope
add
dec
mov
add
ret
lock
fisubl
mov
xchg
sbb
mov
xchg
sub
imul
inc
movsb
inc
fisttpll
mov
jne
pop
xchg
fisubrl
xchg
repnz
in
in
add
cwtl
xchg
push
cltd
xor
inc
dec
jle
aam
mov
add
pop
nop
mov
mov
and
dec
jle
stos
sahf
hlt
rorl
test
rorl
mov
ret
mov
dec
adcl
inc
xchg
and
xchg
lret
mov
sbb
add
loopne
jp
jge
lret
sti
pop
mov
mov
mov
adc
lret
or
pop
jmp
jmp
xchg
and
out
cmpl
orb
testb
mov
or
std
insl
jne
mov
out
outsb
rorl
and
int
mov
enter
or
and
into
inc
enter
js
inc
or
dec
mov
mov
and
lahf
or
std
mov
jg
xchg
lret
mov
xor
mov
xchg
int
cmp
inc
fwait
add
idivl
ja
pop
mov
mov
nop
and
add
mov
std
sub
jmp
sub
cld
adc
lahf
sahf
mov
mov
push
push
dec
pop
xchg
popf
sti
pop
sar
jo
dec
popl
popf
xchg
mov
cmp
xchg
mov
add
ljmp
sub
stos
jg
lea
test
pushf
lahf
adc
pop
test
in
and
dec
add
add
and
rorb
nop
and
lret
fmul
pop
dec
jle
and
mov
inc
nop
jno
lds
mov
lds
and
incl
fcompl
imul
inc
jno
addb
xlat
subb
lods
push
je
arpl
sub
mov
rolb
cltd
sbbl
dec
and
into
pop
hlt
mov
push
dec
aaa
into
aam
pop
jb
jo
and
adc
push
adc
push
or
fwait
cwtl
sub
out
push
xchg
int3
mov
inc
mov
imul
inc
mov
push
mov
dec
or
mov
cmpl
and
cmp
mov
pop
pusha
sarl
jb
mov
xchg
mov
std
push
iret
psraw
inc
pop
enter
push
jns
aad
xchg
je
push
cld
push
sbb
jge
or
nop
sbb
or
cwtl
nop
orl
xchg
cmp
jg
iret
push
dec
scas
ja
jmp
xchg
adc
cmpsb
adc
or
xchg
iret
negb
xchg
mov
sbb
sbb
cli
lret
or
aam
xor
enter
mov
je
inc
lcall
sbb
je
mov
dec
int
add
aam
push
into
out
lahf
push
xchg
shr
xchg
inc
and
mov
into
mov
push
dec
negb
and
cmp
jg
movsb
add
iret
or
jns
cwtl
mov
adc
push
lahf
je
push
lret
bswap
sbbl
lahf
mov
cwtl
out
test
push
mov
jp
jne
adc
jns
call
subb
inc
jno
xchg
and
add
movsb
xchg
pushf
popf
aas
push
inc
or
mov
mov
iret
cwtl
repnz
data16
xchg
lret
and
mov
in
sahf
xchg
push
shl
nop
fistl
mov
adc
icebp
jae
pop
xorl
mov
adcl
jae
push
dec
lahf
and
mov
fisttpl
shlb
add
insl
sbb
push
in
xchg
push
movl
or
mov
scas
ja
adc
sahf
pop
scas
or
loope
clc
lcall
adc
xor
mov
push
int
pushf
rcrb
mov
and
sbb
mov
and
jnp
cwtl
xor
in
icebp
repnz
sbb
sti
mov
mov
pushf
int3
std
cwtl
aam
mov
call
add
dec
adc
sbb
test
cmp
leave
xchg
inc
cmc
fs
mov
mov
sbb
fisttpl
insb
xchg
es
bnd
iret
mov
sbb
es
add
mov
lret
loope
sub
sbbb
push
xor
mov
push
mov
js
and
mov
lcall
sbb
xchg
mov
xchg
inc
out
jmp
inc
subl
jge
movsl
mov
xchg
fcompl
addb
pushf
mov
sub
jmp
push
push
mov
dec
and
data16
and
jne
rcll
jno
push
push
les
mov
loop
dec
daa
push
pop
cmp
sub
int
testb
andl
dec
mov
pop
fisubrs
and
xchg
lcall
mov
fldcw
push
push
mov
and
in
mul
or
addl
repnz
fdiv
mov
cmc
repz
dec
and
xor
mov
and
xchg
popf
cld
fstpt
push
call
sub
pop
jnp
scas
arpl
jne
adc
xchg
sbb
lahf
push
je
lcall
fstp
mov
roll
xor
fs
dec
mov
mov
fsubs
xchg
sbb
rcrl
pop
add
mov
or
stos
and
xchg
fcoms
dec
pusha
test
cmp
sub
outsb
jns
ret
xchg
mov
push
xor
shll
xchg
xchg
mulb
loope
jl
xlat
add
fcoms
cmp
mov
lea
xchg
frstor
sbb
arpl
add
push
fstps
pop
fisttpl
les
loopne
cmpsl
and
pop
xchg
dec
fiadds
mov
loop
xchg
and
stc
out
inc
repnz
push
andb
lods
subl
pop
adc
cmovne
sbb
jns
sbb
ret
fwait
xchg
jne
push
pop
cmp
push
jns
js
insl
dec
jge
and
cmp
aas
xchg
imul
pop
les
jge
scas
mov
fcomi
insl
pushf
stc
mov
fwait
int3
stos
jns
adc
outsl
dec
jecxz
lahf
pushf
xchg
add
add
push
mov
jne
sti
adcl
mov
inc
push
jns
pushf
jne
loop
push
inc
push
lahf
fistpl
addr16
cmc
popf
xchg
sbb
mov
push
repnz
loopne
je
xchg
dec
pop
mov
pop
add
cltd
xchg
add
jo
jmp
and
xchg
mov
repz
data16
jp
bound
jne
loope
adc
mov
mov
add
fadds
test
lahf
fcomip
jnp
xor
lea
sahf
mov
ffree
mov
jecxz
sti
lahf
jne
aaa
popf
shlb
imul
movsb
mov
push
lds
cltd
rcrb
push
dec
movsb
mov
dec
mov
sarb
mov
mov
mov
cltd
adc
xchg
sbbb
mov
mov
sbb
loope
xchg
jno
adc
test
jge
sbbl
rcrl
mov
fwait
cltd
jg
fdivrl
bnd
jns
lcall
jnp
fstp
add
fs
inc
in
pop
aas
insl
mov
fwait
and
fstp
data16
push
mov
je
cld
shll
pop
sarl
imul
mov
push
xor
jecxz
lea
popf
int3
and
mov
addb
std
push
jge
adc
and
dec
mov
pop
hlt
fwait
xchg
insl
pushf
push
cld
mov
sbb
dec
popf
and
add
or
arpl
mov
lahf
insl
mov
sahf
mov
mov
jge
imul
outsl
push
xchg
movsb
test
add
fcomp
xchg
fwait
dec
and
sbb
test
sub
jb
xchg
rclb
hlt
insb
mov
xchg
xchg
fmull
jge
sbb
xchg
xchg
pop
inc
xchg
pop
aas
popf
sbbl
push
fwait
xchg
lahf
andl
popa
push
mulb
push
iret
mov
xchg
out
sahf
orb
xchg
jno
les
mov
pop
pop
xor
sbb
fmul
inc
insl
adc
sbb
loopne
and
jb
or
mov
enter
test
jecxz
mov
mov
inc
or
mov
sbbl
adc
and
mov
or
pop
mov
inc
mov
mov
jne
adc
test
sbb
inc
arpl
dec
jo,pt
popa
or
out
xlat
push
xchg
movsb
lcall
cltd
popf
cld
adc
mov
fs
jbe
es
fucom
stc
loop
lea
or
pop
lcall
orb
gs
push
jecxz
in
mov
ficomps
ja
inc
gs
aas
push
pop
push
ret
cmc
dec
mov
dec
cmp
and
out
mov
shrb
sub
inc
mov
insl
test
cmpsb
addl
hlt
inc
sbb
dec
je
test
jp
push
cmpsb
push
enter
lods
lret
push
fwait
loop
inc
jecxz
and
out
test
jg
pop
ja
cmpsb
push
fwait
into
scas
stc
and
pop
mov
jecxz
ds
xchg
test
test
cmpsl
movsb
je
mov
stos
aad
add
push
jp
add
xchg
arpl
push
cltd
shll
aaa
dec
aad
push
pop
aas
mov
adc
jnp
loop
sub
jns
jecxz
mov
mov
inc
dec
or
jge
and
xchg
fisubl
jne
je
cwtl
cld
cmc
test
xchg
xchg
idivb
lret
loopne
add
cmpsl
or
and
dec
in
sub
jmp
pushf
popf
adc
and
cltd
les
or
pop
sbb
je
jge
sub
imul
enter
and
xlat
dec
test
sbb
lret
inc
gs
ror
inc
mov
push
mov
sbb
lods
and
gs
test
pushf
xlat
cmp
into
gs
sub
aam
mov
pop
dec
popf
or
sub
mov
fadd
fnstsw
int
pop
fsubrs
testl
out
loopne
repnz
movsb
mov
pop
daa
push
pop
lock
arpl
test
and
pop
rep
jg
rorb
jge
inc
dec
in
dec
push
xchg
xchg
outsb
jnp
sbb
ds
and
popf
sbb
push
xor
xchg
cmpsb
push
xchg
add
insl
out
popf
sbb
ror
outsl
xor
sub
jp
cli
push
add
mov
cmp
xor
rcrl
popf
popf
xchg
leave
jp
push
rcl
js
imul
in
dec
push
mov
push
js
add
and
inc
loop
lea
xchg
jne
inc
pop
pop
sahf
cmpsb
jne
test
jns
mov
and
xor
or
fadds
sub
outsl
repnz
xor
arpl
xchg
clc
stos
and
int
jg
push
stos
pop
arpl
add
test
in
fs
lea
pop
insl
sbb
fistps
cmc
iret
in
lahf
addr16
inc
mov
sbb
loopne
fwait
jp
in
out
cmpsl
clc
mov
cmp
jecxz
and
mov
mov
xchg
adc
cmp
jno
data16
fidivs
jbe
out
lods
jnp
fisubrs
test
cs
pop
popa
fs
cmp
sahf
push
cmp
jae
adc
push
popa
lahf
and
add
adc
pop
ja
shl
fcomps
mov
adc
aaa
sub
mov
jecxz
lcall
andl
and
out
mov
scas
dec
stos
push
or
and
and
stos
push
leave
inc
sbbb
mov
bound
and
movsl
outsl
leave
pop
and
scas
mov
add
stos
sub
pushf
inc
and
nop
push
and
imul
and
loopne
repz
pop
adc
jmp
lods
lods
leave
push
in
and
mov
xchg
adc
sahf
sbb
mov
inc
push
mov
aaa
lahf
and
and
divl
mov
mov
daa
sbb
jmp
js
mov
nop
lahf
mov
ret
push
dec
mov
jno
cmp
cli
divl
xchg
mov
mov
jno
and
out
out
stc
pop
in
or
cwtl
fsubl
mov
jl
mov
add
and
shll
xorl
mov
ljmp
inc
mov
jecxz
xchg
jle
push
pusha
push
insl
jo
stos
jne
jbe
lock
out
js
stos
jecxz
aaa
sti
pop
outsb
aaa
push
pop
xchg
pop
or
and
inc
movsb
call
xor
cmpb
dec
or
sbbl
xor
lds
ja
js
repnz
and
ficomps
mov
in
fs
push
jl
fnstsw
xlat
adc
movsb
fcomps
pushf
mov
sbb
cs
and
adc
and
in
add
loop
jne
cmp
add
loopne
and
push
pushf
loope
xchg
mov
inc
mov
sbb
dec
mov
ds
dec
dec
pushf
mov
cmpsl
mov
push
mov
sub
insl
lds
movsb
addr16
xorl
aad
lcall
sbb
and
fimuls
popf
push
jl
xchg
aam
sbb
nop
fs
bound
pop
sbbl
and
dec
jns
arpl
sub
cltd
jbe
je
and
mov
cmp
mov
jno
xor
jbe
ret
loopne
movsb
sbb
jp
pop
fistl
and
fwait
sub
mov
enter
and
adc
mov
mov
aaa
mov
or
in
mov
inc
je
daa
mov
cmc
or
fs
lds
pop
and
in
jns
ds
pushf
push
sahf
sbbl
popl
inc
adc
pop
and
add
jns
jb
sbb
xchg
add
cmp
pushf
lahf
pop
popa
and
aad
enter
js
movsb
jnp
mov
adc
ljmp
hlt
aas
xchg
and
xor
outsl
mov
out
rcr
js
sbb
andl
jne
xor
mov
mov
pop
aam
fcompl
mov
cwtl
fdivrl
popf
cld
jecxz
pop
xchg
popa
jecxz
or
cwtl
shll
outsl
mov
icebp
mov
xchg
xchg
fdivrl
sbb
xchg
movsl
loop
mov
and
mov
jl
mov
and
movsb
loop
shlb
xchg
pop
xchg
sub
sub
sti
fs
mov
xor
and
mov
arpl
add
mov
arpl
ficompl
pusha
xchg
test
lcall
inc
outsb
xchg
pushf
movsb
inc
sub
rolb
stos
andl
fmull
fsts
xchg
fsubl
or
xor
aaa
cmp
cmpsl
sub
pop
fs
popf
xchg
addl
mov
je
movsb
mov
cmpsl
rorb
mov
mov
adc
mov
pop
and
test
mov
and
and
add
mov
mov
jbe
inc
sbb
sub
push
push
jl
sbbb
movsb
test
test
and
mov
pop
in
fstps
and
scas
sub
jo
mov
ss
faddl
or
cmp
rorb
cltd
cmp
sbb
adc
lods
repnz
xor
adc
popa
xor
push
cltd
ss
mov
test
mov
sahf
insb
test
stos
pop
aaa
out
or
daa
repnz
loop
test
imul
push
insl
clc
mov
cli
fcmovu
and
sahf
hlt
push
cmpsb
repz
cli
repnz
xor
aad
outsb
mov
push
hlt
pusha
pop
inc
out
fisttpl
mov
clc
cmp
pop
insb
bound
inc
aaa
push
decb
movsl
notb
push
dec
int
je
ja
sahf
adc
fcmovne
dec
push
fstpl
inc
or
jb
mov
lahf
fbstp
or
into
cmp
int
fwait
pop
sbb
jno
fistl
mov
push
movsb
xor
test
sbb
out
pop
xchg
in
ljmp
out
loopne
andl
adc
cltd
sbb
sbb
dec
add
outsb
push
movsl
or
jmp
mov
mov
pop
xchg
adc
jmp
add
pop
aam
and
cmp
sahf
mov
jp
sub
mov
and
je
and
stos
stos
je
aas
or
mov
imul
adc
popa
ds
shlb
adcl
jecxz
adc
notl
cltd
sahf
pop
push
fs
adc
adc
ljmp
mov
xchg
adc
xchg
and
xor
mov
cmpsl
xchg
lcall
clc
movsb
fwait
mov
xchg
and
mov
mov
insb
or
lock
and
adc
xchg
dec
mov
outsl
cwtl
mov
ja
and
sarl
scas
popa
fsubrs
push
xchg
add
sti
push
mov
insb
xor
lds
sbb
repz
popa
movsl
outsl
mov
in
adc
push
pop
insb
and
fwait
scas
pushf
je
jg
in
in
jecxz
mov
and
push
and
mov
mov
mov
mov
xlat
mov
loope
lahf
stos
std
dec
and
in
dec
movsb
arpl
lea
mov
mov
in
fldenv
in
mov
fs
iret
and
jl
and
mov
cmp
push
movsb
mov
div
aas
push
inc
ja
add
pop
pop
push
and
push
dec
gs
dec
mov
mov
pusha
adc
in
pushf
fmuls
add
push
pop
mov
pop
push
pop
sbb
fwait
pop
sbb
pop
pop
xlat
xchg
push
push
aam
xchg
push
adc
xchg
push
adc
iret
dec
push
int3
mov
lret
mov
jne
dec
pop
xchg
les
inc
add
rolb
aas
cld
mov
mov
mov
mov
aaa
div
mov
je
repz
xor
lock
xor
scas
outsl
das
out
gs
jmp
imul
sub
test
sub
and
xchg
mov
imul
out
jl
outsl
popa
add
jecxz
sbb
movl
scas
and
and
dec
loopne
mov
gs
arpl
fcoms
popf
imul
cwtl
sub
out
mov
int
add
mov
das
jno
sub
add
ss
mov
in
lods
shl
push
adc
xor
mov
cld
out
stc
andl
out
cmp
in
mov
jno
insl
shl
or
xchg
in
popf
cmc
repnz
and
fstps
jb
test
iret
inc
popa
roll
out
add
pop
leave
xchg
cmp
xchg
xor
mov
mov
pushf
jo
fistl
cmp
mov
mov
pop
xchg
repz
pop
fiadds
inc
and
jnp
and
jmp
push
lea
add
adc
lock
imul
gs
sub
aad
cmp
insl
icebp
test
mov
xor
aaa
add
int
gs
dec
clc
dec
cmp
sub
cmp
imul
fsubrl
rcr
jle
inc
push
mov
cltd
lret
mov
sub
mov
jl
in
pop
cmovbe
rcll
cmp
jge
push
enter
or
mov
push
clc
loope
jp
pop
test
mov
add
jmp
pop
lret
in
in
hlt
mov
mov
gs
scas
jne
dec
incl
aad
pop
sahf
add
dec
jnp
rol
xor
mov
imul
add
push
sbbl
into
inc
adc
and
jp
inc
addr16
gs
mov
adc
push
and
gs
pop
push
gs
jno
dec
mov
stos
idivb
scas
xchg
test
and
ss
gs
adc
pop
outsl
cs
dec
gs
sbb
jle
fsubl
xchg
pop
xlat
add
push
int
cmp
rorl
gs
fisttpl
sub
xor
fwait
and
push
gs
js
mov
aas
pop
pop
xchg
gs
repz
ljmp
sub
imul
iret
xor
push
add
mov
imul
lahf
xor
shll
pusha
inc
sti
aas
pop
xchg
int
jb
loopne
lds
rep
arpl
cmpsl
hlt
or
jmp
inc
in
loope
inc
ds
mov
pop
fisttpll
mov
std
ds
xor
out
adc
xchg
xchg
outsl
mov
adc
aad
xchg
insl
cs
lds
stc
jecxz,pt
pop
dec
push
or
incl
js
stos
jbe
xchg
ret
sub
jl
cmpl
mov
mov
xchg
hlt
jno
push
gs
out
lods
adc
addr16
mov
cmc
cwtl
gs
test
adcb
mov
jge
gs
pop
sbb
popa
mulb
add
cmpsb
lea
mov
mov
and
jecxz
cltd
insl
jae
sbb
subb
gs
pop
mov
jmp
das
push
sahf
jae
cwtl
pop
gs
daa
add
jnp
pushf
fistps
push
loope
xchg
sub
fnsave
sbbb
mov
pop
xchg
gs
or
lds
stc
add
jb
popl
and
gs
or
in
and
gs
imul
xchg
mov
jecxz
je
fstp
pop
and
and
gs
loope
pop
dec
sbb
outsl
gs
jp
shl
pop
jl
les
jo
and
lds
dec
push
cmp
jae
leave
jge
dec
inc
jnp
pop
cld
test
scas
packsswb
int
xor
iret
inc
pushf
gs
nop
fsubs
inc
int3
mov
xlat
addr16
jns
and
imul
jg
ljmp
sub
push
pusha
sahf
xor
jb
gs
insl
cli
jae
pop
jg
gs
jle
xchg
imul
sub
enter
xor
les
mov
outsb
mov
dec
gs
mov
leave
cmc
lods
push
mov
aad
mov
test
outsb
fbld
push
add
lret
pop
loope
int
xchg
pop
stos
out
test
gs
jo
jae
mov
dec
jmp
sti
jno
inc
dec
or
sahf
cmp
loope
xchg
jl
lea
daa
push
and
loope
leave
out
mov
sub
les
push
xchg
in
loope
mov
sub
cmp
mov
cmp
fwait
popf
inc
cld
add
in
imul
shlb
outsb
bound
gs
mov
mov
gs
imul
gs
in
pop
cmpsb
xchg
jl
mov
push
arpl
mov
jns
add
jae
cmpb
das
gs
mov
mov
pop
gs
arpl
adc
imul
jmp
inc
stos
popa
mov
sbb
lcall
fnstsw
xor
and
addr16
mov
push
cmc
bound
gs
mov
lods
mov
in
ds
imul
rorb
out
loope
mov
subb
fs
add
add
test
mov
xor
cwtl
das
pop
inc
dec
gs
or
out
xor
xor
or
jmp
mov
gs
mov
aaa
mov
adc
adc
in
ja
gs
sbb
dec
jg
jecxz
xor
enter
pop
jo
popa
loope
int3
and
xchg
test
bound
mov
cwtl
imul
sbb
out
icebp
divl
mov
mov
mov
call
addr16
loop
jg
loope
fidivrl
loopne
rorl
jl
mov
mov
dec
add
push
push
mov
in
lret
push
xor
add
cmpl
mov
pusha
aad
push
fidivs
lds
frstor
mov
sub
gs
shlb
push
fldcw
fisttps
push
sbb
xor
ds
jg
gs
roll
cmp
testb
xchg
ljmp
pop
je
gs
push
adc
xchg
sbb
and
push
icebp
jecxz
mov
pushf
fs
jo
loope
stos
push
mov
xor
in
mov
iret
adc
fimull
ret
scas
push
cmp
shrl
out
gs
test
aam
movsb
addb
mov
or
pop
push
cmp
jge
gs
ljmp
outsb
sbb
cmp
xor
lods
fmulp
push
fcomps
push
adc
push
inc
cmp
and
insl
xor
and
movsb
jb
popf
push
sbb
movsb
aad
pop
das
pop
xor
icebp
dec
sub
movsb
ljmp
in
and
loope
leave
arpl
js
fisttpll
mov
addl
sbbl
xor
cltd
jecxz
test
popa
test
insb
addl
in
fldcw
popf
inc
jns
adc
inc
and
into
into
dec
sbb
scas
push
in
andl
fs
pop
movsl
and
loop
lds
in
cltd
and
sahf
movsb
xchg
in
out
lret
mov
push
sahf
adc
pushf
out
mull
cmp
popa
pop
and
cltd
test
xchg
nop
roll
imul
sbb
scas
push
fcoml
insb
jecxz
out
sbb
leave
imul
adc
fwait
mov
in
sbb
jecxz
push
int
dec
shlb
popf
and
notl
and
or
and
push
repz
pop
lcall
dec
out
sbb
add
pop
mov
popa
mov
movsb
pop
xchg
and
fs
jno
mov
lods
cmp
push
cld
and
mov
inc
popa
and
pop
xchg
and
inc
mov
xchg
xchg
aam
xlat
xchg
loope
out
repnz
lods
leave
imul
push
mov
sbb
sbbl
sbb
xchg
sbb
popf
mov
xchg
repz
xchg
mov
and
fs
sub
in
sbb
mov
loopne
jmp
in
popf
repnz
mov
popf
mov
add
pushf
push
cwtl
xchg
dec
mov
cmpsb
mov
addr16
test
mov
shlb
push
test
mov
dec
sbb
mov
dec
push
sahf
test
jae
push
push
and
sahf
aam
in
pop
loopne
movsb
dec
rol
and
pop
push
mov
xchg
faddp
je
sbb
pop
sahf
inc
sahf
mov
xchg
je
adc
xchg
dec
aam
sbb
xchg
and
and
sub
arpl
mov
push
call
xchg
mov
test
and
loopne
and
push
sti
cmpsl
dec
shlb
jecxz
mov
fwait
mov
and
movsb
xchg
jl
sub
imul
xorl
repz
xchg
imul
out
push
ret
jecxz
mov
ljmp
mov
xor
xor
addb
pop
mov
in
cld
in
cmp
fiadds
inc
fnstsw
xor
imul
mov
cmp
mov
cltd
cmp
xor
cmp
mov
pop
and
loop
push
test
pop
sbb
add
sbb
leave
lock
xchg
lea
ljmp
xor
pushf
je
cld
xor
dec
fsubrl
jae
push
and
add
fsubl
xchg
pop
shlb
jl
inc
ja
stos
popf
sbb
or
push
repnz
arpl
hlt
call
aam
pop
lcall
mov
xchg
bound
pushf
sbb
sbb
mov
arpl
test
xchg
stos
pushf
es
and
inc
pop
pop
pop
xchg
loop
not
push
loop
js
pop
fwait
mov
sbb
cwtl
test
pop
hlt
out
pop
mov
mov
push
mov
xchg
stos
or
xchg
popa
and
cld
cltd
xlat
call
into
and
xor
pop
and
cwtl
cmpsb
and
and
popf
and
es
mov
or
stos
and
adc
xor
add
fsub
repnz
test
xchg
push
sti
movsl
fnclex
inc
daa
rorb
iret
ds
daa
sbb
movsb
sub
dec
imul
outsb
xlat
fs
dec
cmovne
out
fucomi
pop
xchg
imul
gs
push
mov
and
int3
sarb
cmc
ds
push
lcall
lock
xchg
rcll
mov
testl
leave
out
lods
and
mov
les
jecxz
sub
je
xchg
mov
pop
mov
pop
push
add
loop
inc
mov
pop
hlt
xlat
outsl
lods
mov
gs
shrl
call
gs
es
pushf
xchg
sub
and
xchg
dec
in
and
and
inc
les
out
insl
jbe
and
test
or
loopne
enter
cs
jp
push
shll
outsb
mov
xchg
out
addr16
cmp
in
frstor
cmp
out
std
gs
pop
mov
jl
fabs
gs
sub
add
dec
stos
gs
xchg
cmc
lods
mov
jae
cmpsb
aas
pusha
jle
mov
pushw
decb
inc
xor
jb
test
pop
lret
imul
adc
pushf
orl
push
gs
je
loop
inc
mov
adc
push
lods
push
adc
push
jno
mov
push
and
mov
mov
dec
lret
cmp
scas
ret
pop
test
gs
push
mov
and
mov
shl
ficomps
mov
sub
test
and
xor
lahf
jae
rcrl
jbe
ja
into
jecxz
sub
xor
mov
dec
mov
adc
adc
add
jo
daa
gs
iret
adc
stos
push
inc
gs
mov
sub
inc
xor
mov
mov
xchg
and
cmp
ja
or
pushf
mov
jno
xor
fwait
jne
mov
xor
and
pushf
adc
jns
ja
adc
mov
add
mov
mov
popf
imul
mov
clc
pop
sbb
pop
and
mov
mov
shlb
or
jecxz
xor
xchg
addr16
jecxz
mov
pop
or
adcl
sbb
clc
pushf
pop
loop
sbb
mov
neg
loop
sub
fsubrl
pop
insb
bound
jle
sub
insl
arpl
jbe
outsl
aaa
es
mov
sub
push
and
mov
je
addb
sbbb
mov
or
add
adc
lcall
pop
jae
xchg
mov
sub
cld
nop
clc
fs
jbe
pop
cmp
test
stos
data16
ja
je
loope
mov
sbb
xchg
call
pop
imul
cli
add
fwait
push
and
addr16
cld
in
pop
cltd
mov
popa
add
cmp
mov
es
outsb
cmc
add
int
movsb
daa
movsb
outsl
arpl
sub
adc
sbbl
ficompl
int
fs
leave
and
fnstcw
popf
in
fwait
push
add
and
mov
ret
xchg
aam
testb
pushf
and
cmp
pop
inc
arpl
into
jns
mov
movsb
and
dec
lret
popa
arpl
insb
addl
jp
cmp
and
pop
mov
sbb
ja
divl
sbb
sbbl
dec
sbb
popa
pop
push
pop
push
outsb
add
xor
jo
jle
mov
sub
xchg
pusha
xor
and
pop
fisubl
popa
sbb
lods
aaa
outsl
cmp
xor
lock
jae
imul
pop
pop
in
fidivl
icebp
mov
push
fwait
jge
lahf
mov
cld
jae
stc
adcb
fwait
dec
fistps
in
cmpb
inc
push
lea
arpl
push
adc
imul
imul
cltd
andl
jmp
in
ss
jmp
jbe
adc
out
cmc
aas
gs
in
mov
pop
cld
fsubl
scas
xchg
orl
test
mov
push
xchg
ret
je
outsl
arpl
mov
cmpsb
loope
fs
lcall
loop
subl
subl
fsub
add
push
and
in
por
add
xchg
push
popf
mov
xchg
dec
or
sbb
roll
jae
mov
pop
cmp
or
fs
xchg
pop
popa
movsb
mov
dec
andl
mov
pop
fwait
repz
enter
in
mov
fs
sub
adc
mov
fs
sbb
lock
or
fistl
adc
and
jmp
mov
mov
jl
sbb
mov
ret
fistl
pop
adc
jmp
dec
pusha
mov
jecxz
leave
jno
sahf
push
mov
ret
push
aam
add
orl
mov
jb
mov
sub
clc
fs
ja
mov
jae
xor
mov
cmp
out
ds
jp
xor
leave
inc
dec
jecxz
dec
and
add
inc
mov
adc
pop
push
mov
jb
mov
lock
in
jne
inc
push
cwtl
aad
pop
adc
addr16
inc
dec
xor
adc
pop
xchg
gs
jns
ja
xor
mov
xor
mov
mov
mov
and
fistpl
add
jae
shrl
mov
mov
sbb
call
pop
mov
mov
sub
pushf
sbb
mov
mov
mov
or
mov
mov
adc
data16
add
xchg
out
mov
sbb
mov
push
mov
and
pop
sbb
test
jl
inc
and
outsb
dec
mov
insl
mov
and
shl
xor
cld
shll
fnstcw
mov
add
fninit
inc
inc
dec
addr16
pop
adc
mov
mov
mov
call
out
aas
jecxz
push
hlt
andl
pop
lods
loope
adc
xchg
fst
cld
xlat
sub
mov
sub
lock
xchg
dec
mov
repnz
xlat
add
lods
adc
fsubp
mov
in
xor
push
add
aas
insl
mov
pop
sbb
sar
mov
sahf
jecxz
xor
xor
jl
sbb
pop
lret
aas
mov
mov
in
dec
lods
pop
jbe
lcall
das
mov
jo
mov
imul
fwait
testl
mov
inc
pop
and
jle
out
sub
cmovbe
enter
xchg
loop
mov
lahf
aam
shlb
mov
sub
sbb
adc
jbe
sub
daa
cltd
cmp
cmovg
push
shrb
jbe
aam
pop
pop
mov
mov
sbbb
xorb
orb
in
sub
pusha
mov
fstps
pop
psubb
or
jmp
push
movsb
test
cmp
mov
inc
in
repnz
hlt
adc
clc
iret
test
mov
sbb
fs
pop
nop
jns
sarl
dec
jns
arpl
and
add
mov
push
daa
push
pusha
cmp
mov
scas
and
jp
pop
je
mov
cld
xor
data16
divl
and
and
pop
pushf
fwait
push
sub
fisubl
mov
out
xorl
cli
xchg
xchg
stos
stc
iret
divb
decl
add
xchg
fadds
sbb
xchg
pop
xlat
inc
xchg
aas
negl
sbb
movsb
cwtl
mov
xlat
hlt
pop
push
pop
popa
nop
inc
out
aas
out
aaa
out
sarl
xlat
xchg
out
push
mov
scas
xchg
andl
push
mov
mov
pop
in
and
jnp
pop
xor
ja
push
pop
cmp
scas
lret
out
out
pop
pop
loop
and
in
addr16
in
lds
xlat
lds
popa
movsb
and
add
cmp
push
xlat
add
xchg
xor
shll
call
insl
push
xchg
xchg
adc
adcb
adc
in
push
xor
mov
sub
test
xor
cli
ss
pop
mov
inc
push
and
and
mov
jnp
cwtl
sub
lds
ret
sbb
sbbb
loop
movsb
adcb
adc
rcrl
add
inc
mov
xchg
adc
and
pop
aam
lods
pop
pop
jge
outsb
fs
lea
outsl
lds
out
jbe
cmp
mov
jns
adc
adc
sbb
pushf
xchg
adc
sub
arpl
movsb
xor
jbe
or
sbb
mov
movsl
inc
mov
jmp
setnp
test
and
popa
cmpsl
mov
call
loope
adc
push
call
iret
and
mov
sub
jae
enter
loopne
mov
loope
mov
adc
and
mov
outsl
arpl
xchg
mov
shll
stos
adc
cmpsb
mov
imul
or
mov
gs
je
js
jp
gs
pop
sbb
jg
push
in
cmp
sbb
adcl
andb
fstpt
xchg
outsb
in
cmp
xor
mov
xchg
gs
je
lahf
cmp
push
bound
enter
xor
rcrl
pop
cmp
jl
fstl
inc
sub
mov
out
mov
adc
dec
divb
pop
scas
movzbl
and
dec
jne
push
pop
gs
cmp
inc
inc
mov
aad
ja
cmp
mov
mov
xchg
mov
fisubrl
adc
fmul
jl
sahf
adc
xchg
mov
gs
add
out
sbb
daa
jns
idiv
sub
pop
xchg
imul
push
mov
jmp
stos
cltd
fdivp
inc
popf
and
arpl
or
pop
insb
mov
pop
sbb
in
inc
lea
ficomps
data16
sub
gs
xchg
adc
incl
push
mov
idiv
fcomps
test
sarb
pop
int
or
xchg
fimull
daa
mov
jge
inc
gs
mov
rcl
or
fisttps
scas
mov
and
mov
jae
stc
push
adcl
sti
aas
or
cld
cltd
mov
lcall
data16
dec
imul
dec
outsb
cmpsb
repz
inc
mov
cwtl
leave
and
add
and
xor
push
xchg
testl
aas
or
nop
xchg
fbld
dec
out
in
insb
ljmp
aam
cmpsl
xor
gs
in
test
fnsave
xchg
fdivrs
gs
mov
fiaddl
popf
lcallw
add
rcrb
sub
in
data16
jno
jbe
lods
scas
jecxz
add
mov
frstor
in
lock
outsl
lods
imul
cltd
js
push
add
lcall
rcrb
in
pop
gs
scas
outsb
in
xchg
loopew
sub
xor
inc
in
mov
gs
dec
push
jmp
enter
dec
cmp
popf
rolb
jb
xchg
push
sub
adc
dec
jg
ret
pop
gs
call
pushf
mov
cltd
gs
add
pop
xchg
out
xchg
mov
addr16
mov
lahf
lods
into
xchg
nop
lret
push
dec
jne
icebp
pushf
mov
cwtl
mov
jne
lret
seto
popa
mov
jge
fnstenv
stos
sbb
out
and
inc
in
push
roll
fstps
cmc
add
push
inc
sub
gs
rcl
or
cltd
testl
dec
pop
push
dec
cmp
sub
xchg
xor
fisubl
pushl
addr16
leave
pop
sub
dec
gs
mov
and
jnp
xlat
push
mov
test
cmc
arpl
not
jne
pushf
loope
gs
sub
iret
add
or
jl
fists
out
pop
pop
sahf
sbb
jbe
adcb
lock
mov
repz
jg
aad
into
in
mov
xlat
sbbl
mov
push
xor
mov
gs
mov
in
push
adcl
mov
gs
dec
orb
call
xchg
xchg
adc
jne
jmp
or
and
into
movsb
fndisi(8087
pop
sub
movsb
hlt
sti
and
or
dec
push
jmp
sub
ljmp
loope
xchg
in
roll
pop
fiaddl
fs
bound
inc
pop
sbb
cmc
mov
movb
push
pop
sbb
jne
andl
std
aaa
xchg
rep
sub
pushf
pop
movsb
dec
out
jge
ja
cs
push
sbb
sub
add
ja
insb
xchg
pop
and
push
movsb
sahf
sub
add
inc
pop
je
aas
into
std
or
bound
xlat
popa
mov
adc
or
stos
sahf
pop
fwait
jecxz
mov
jae
andl
lcall
sahf
mov
movsb
popa
jbe
mov
cmp
xchg
push
mov
in
fdivr
mov
scas
jb
sub
adc
jae
push
and
cltd
jbe
mov
mov
jno
notl
mov
clc
int
cmp
sti
fbld
pushf
arpl
dec
js
pop
loop
fs
test
test
in
cli
push
jg
movsb
sub
and
mov
cmpsl
xlat
xor
lea
push
pop
pop
cltd
mov
cltd
jae
or
or
mov
addb
jne
dec
push
test
mov
sub
push
mov
subb
inc
and
xchg
int
hlt
inc
popa
mov
fcomps
jecxz
mov
mov
js
inc
and
mov
bound
ret
je
dec
lods
popa
fnstcw
add
frstor
sbb
test
cmc
mov
or
xchg
jns
mov
jmp
dec
fisttps
outsb
and
mov
stc
jbe
ret
push
fists
ret
dec
and
inc
mov
insl
push
xor
test
cmpsb
mov
and
inc
aaa
mov
shll
push
ror
push
xor
outsb
ret
xchg
xchg
sbb
cs
jl
arpl
sbb
cmp
jle
fcomp
pop
xchg
out
rcrl
imul
rorl
push
or
mov
fbld
arpl
pop
dec
dec
mov
lret
sbb
pop
dec
out
mov
sub
or
lds
mov
sahf
pop
shl
movsb
in
xchg
movsb
daa
test
jp
repnz
int
adc
jno
inc
ja
jp
sbb
imul
and
xchg
fs
loop
and
les
lods
in
fsubrl
scas
or
fbld
hlt
lret
mov
add
scas
je
push
ljmp
in
cmpsl
shlb
mov
mov
out
cmc
fnstsw
pop
cmp
das
pop
cmp
jns
xor
repz
ret
jmp
inc
aad
cmpsl
gs
push
xchg
xor
pop
gs
adc
bound
gs
rcl
sub
xor
dec
xchg
ret
sub
sub
xchg
gs
mov
ja
fdivl
jns,pn
gs
imul
gs
cmp
or
and
push
dec
pushw
xchg
jecxz
add
mov
push
je
inc
add
int
lcall
test
fisubs
call
push
int3
xor
repz
and
fidivl
gs
pushf
mov
gs
lcall
xchg
jae
repnz
jb
xchg
outsl
ja
gs
enter
out
fsubl
mov
cs
gs
es
adc
adc
mov
cmp
xor
gs
js
sub
fisubs
scas
fs
add
jae
gs
cmp
and
addr16
test
icebp
lcall
sarl
xchg
popa
rcll
mov
pop
inc
cwtl
push
and
xlat
popf
loopne
in
js
pop
inc
aam
mov
lcall
and
cmpsb
fisubs
mov
sti
jne
stos
push
loope
or
icebp
popf
xor
inc
leave
out
fcmove
xchg
gs
dec
decl
push
and
mov
cmpsl
mov
mov
mov
imul
je
inc
pop
std
and
aad
test
pop
fcom
mov
jbe
jecxz
jp
fldl
mov
pusha
mov
xor
cwtl
out
mov
xor
out
xlat
sub
lods
lds
jecxz
sbb
scas
gs
add
pop
jmp
adc
xor
cmc
jae
sbb
popf
repz
gs
vmaxss
out
shll
pop
sbb
in
mov
and
or
push
xlat
inc
in
gs
mov
leave
or
pop
mov
lret
inc
ret
xchg
cld
int3
jo
arpl
mov
js
push
jge
push
sub
mov
xor
std
mov
jmp
and
dec
mov
gs
add
test
pushf
inc
xchg
inc
xor
movsb
mov
mov
data16
mov
and
or
xchg
stos
rcll
rcrb
and
repz
fwait
pushf
lret
or
sbb
and
cmp
ja
push
mov
stos
shll
imul
add
iret
cmpsb
mov
xchg
add
jmp
gs
or
popf
sarb
jns
jmp
in
mov
jb
jecxz
imul
cmp
ljmp
lods
inc
ja
inc
popa
nop
mov
add
mov
jg
pop
cltd
sahf
push
movsb
mov
mov
sbb
ss
jg
pop
mov
mov
lods
xchg
ret
int
loopne
xchg
stos
jnp
imul
lods
fs
iret
call
out
fcoml
in
stos
int3
gs
movsb
xchg
or
dec
gs
jle
pushf
lods
test
dec
xor
imul
inc
mov
mov
xchg
dec
dec
dec
mov
xchg
popf
jge
pop
pop
mov
xor
xchg
push
add
add
fisubrs
mov
mov
mov
sbb
gs
stos
dec
out
ljmp
shll
in
hlt
inc
jae
insl
lds
push
add
mov
aam
idiv
movsb
mov
lahf
pop
mov
push
xchg
or
pop
lock
rcr
insb
jl
fwait
lcall
and
jmp
push
jle
cmpsl
pop
gs
mov
loope
dec
inc
cli
xchg
emms
lock
js
mov
gs
or
js
ficompl
gs
mov
dec
gs
cmp
inc
iret
cmpsl
lcall
or
or
imul
addr16
and
outsl
xchg
fsubrl
stos
xlat
fs
gs
jmp
and
repz
in
dec
movsb
xchg
leave
cmp
andl
test
in
pop
sub
gs
int
or
and
out
in
loopne
and
dec
sbb
insl
jg
loop
repz
add
in
inc
pop
out
out
pushf
out
lods
cmpb
shlb
sbb
ss
scas
push
imul
in
and
pop
repnz
mul
cmpsb
fdivs
or
orl
fwait
xor
out
xor
imul
test
xchg
aam
bound
call
sub
repnz
jmp
movzbl
shlb
mov
xor
gs
xchg
and
repz
xchg
sbb
dec
sahf
sub
mov
sbbl
sbb
or
or
lret
inc
sbb
and
dec
je
in
int3
pushf
lret
pop
lods
call
mov
and
dec
test
lock
and
xor
lret
aas
sbb
in
sarl
dec
lds
fisttpll
popf
inc
xchg
icebp
mov
xchg
je
in
inc
fildl
lahf
jl
leave
js
xchg
mov
pushf
add
gs
es
mov
filds
js
loope
addr16
loope
mov
xchg
cmp
mov
fldt
sub
gs
lods
add
mov
xor
sbb
push
fidivs
mov
adc
dec
inc
xorl
cmp
cmc
push
xor
mov
mov
and
divl
jns
jp
in
sub
mov
test
mov
dec
adc
dec
mov
mov
jns
test
adc
out
gs
push
std
pop
and
adc
inc
mov
push
pusha
popf
mov
and
xorb
lret
jns
jae
sub
inc
roll
jp
out
sbb
pop
cmp
xchg
popa
adc
push
bound
fwait
imul
addl
or
data16
mov
xlat
in
and
scas
push
insl
mov
mov
jns
test
add
push
dec
test
lods
iret
ret
and
pop
leave
stc
dec
fldt
sub
rclb
gs
test
push
insb
inc
mov
inc
pushf
gs
add
fisubl
pop
jns
pop
es
stos
je
fwait
lock
xchg
scas
jl
gs
repnz
ljmp
outsl
inc
clc
pop
lret
jne
dec
mov
mov
gs
testb
jmp
pop
pusha
lods
and
shrl
test
mov
fwait
inc
adc
gs
mov
cmc
ret
push
aad
lret
lahf
lcall
or
lahf
mov
jmp
ljmp
out
out
push
mov
gs
sub
mov
in
fisubrl
jecxz
pmuludq
jmp
lret
push
mov
xchg
gs
fbstp
cmp
das
shl
pop
gs
or
or
in
mov
xchg
xor
and
js
xlat
iret
jbe
mov
mov
leave
sub
mov
rcll
xor
sbb
or
insl
gs
jo
push
mov
pop
cmp
sub
std
jge
in
xor
test
sar
ljmp
push
dec
pusha
inc
jecxz
ja
jl,pn
jbe
mov
out
gs
hlt
ret
jb
pushf
and
aas
sub
out
insl
mov
lret
mov
gs
cli
pop
inc
or
gs
cmp
iret
push
ss
sbbb
mov
shlb
lret
mov
out
out
xchg
mov
lahf
xlat
inc
xchg
push
jp
lret
lock
sbb
test
and
gs
iret
rcrb
xchg
nopl
and
xchg
mov
mov
mov
or
cs
push
sub
gs
mov
popa
jmp
dec
gs
dec
mov
aaa
out
loope
loop
arpl
divb
movsb
sub
jbe
out
push
sbb
lods
mov
lods
loope
mov
ljmp
fs
or
xor
sbb
jb
dec
gs
rolb
mov
adc
fs
rcr
cmp
gs
push
imul
xchg
mov
push
xchg
mov
adc
cmp
je
loopne
jp
mov
xor
push
aas
jmp
cmpsb
push
data16
je
jp
mov
and
adc
cmp
ljmp
scas
push
ja
in
or
stc
fdivrl
lock
gs
sbb
and
dec
pushf
gs
jne
push
test
dec
test
sahf
loope
mov
xchg
push
in
pop
int
mov
jecxz
popf
imul
test
xchg
lods
jne
es
jecxz,pn
adc
xor
mov
lods
ret
sbb
fldenv
and
sbb
cwtl
fisubrs
out
je
mov
clc
lods
dec
scas
gs
cmpsl
daa
rcr
mov
popf
xchg
movsb
cmp
cmp
xor
imul
jbe
mov
mov
test
mov
hlt
and
sub
xchg
pop
rorb
fnstsw
pop
testl
adc
jecxz
lds
pop
pop
test
gs
jo
stc
psubusw
pushf
ja
idiv
jmp
sahf
inc
or
inc
daa
mov
nop
mov
and
fs
inc
test
mov
gs
lds
jns
pop
gs
ds
ret
in
mov
outsl
cmp
mov
fdivrl
stos
inc
jno
push
in
fnsetpm(287
jae
xlat
jge
xchg
loope
filds
imul
inc
dec
in
gs
js
cmp
gs
push
pop
or
mov
and
sbb
popf
adc
mov
mov
jmp
imul
shll
rcrl
out
rorb
gs
movsb
push
mov
imul
andl
push
and
imull
or
sarb
add
ret
ficoml
jle
push
xchg
inc
cmpsl
xchg
gs
jmp
inc
lods
aas
loopne
es
loope
test
sbb
lahf
push
push
movsb
inc
arpl
or
les
in
inc
daa
mov
dec
daa
mov
test
gs
imul
gs
mov
or
jmp
xchg
cmpsl
mul
ret
setp
jmp
mov
sbb
outsl
adc
int
pop
xchg
dec
shll
sub
bound
out
mov
shlb
idiv
push
pop
cmp
xor
aaa
loope
jl
add
xchg
js
loop
inc
fldz
shrb
mov
push
cmpsb
pop
jp
mov
adc
add
gs
icebp
inc
cli
dec
arpl
clc
ljmp
sahf
or
pop
gs
mov
sbb
dec
sub
xchg
rorb
test
test
aad
scas
in
clc
lret
jecxz
call
fstps
or
enter
andb
dec
mov
push
or
fnstsw
mov
pop
push
lds
push
insl
loope
push
mov
gs
pushf
testl
push
test
into
xchg
jno
dec
andl
pop
push
inc
mov
fsubl
sub
xor
es
leave
in
xlat
inc
aam
dec
ja
clc
jno
sbb
sub
into
in
aad
push
lret
add
add
xlat
shlb
insb
outsl
scas
fs
inc
test
mov
imul
ret
aam
xor
dec
push
out
mov
cmpb
adc
xor
ret
jp
gs
cmp
and
pop
in
mov
cmpps
shll
cltd
xchg
shrb
xchg
and
in
lock
outsl
jmp
ljmp
fdivrl
pop
dec
in
lods
xlat
sbb
negl
jno
adc
mov
arpl
roll
inc
scas
stos
and
fucom
jp
gs
idivb
in
add
outsl
loop
out
out
xor
cmovo
mov
lods
cmpsl
leave
pop
cmp
mov
fcoms
add
jne
gs
sub
ljmp
push
sbb
mov
jmp
outsb
cld
aad
out
cmp
into
push
shlb
sbb
xchg
in
popa
mov
xor
cmp
xchg
sbb
xchg
dec
push
jnp
ret
xor
gs
loop
jl
dec
mov
or
jecxz
imull
ret
call
das
and
int
cmc
jne
roll
je
mulb
adc
jmp
jge
int
and
inc
outsb
mov
jnp
inc
enter
andb
inc
pop
sbbl
ds
enter
mulb
mov
jo
push
sub
gs
subb
push
fldcw
iret
pop
xchg
push
mov
in
sbb
fdivrl
adcl
hlt
fldcw
jge
int
sub
loop
add
out
shl
test
mov
ss
mov
jo
fldenv
sub
test
lea
in
hlt
xchg
out
dec
test
inc
out
gs
lahf
add
dec
shll
dec
iret
std
addr16
mov
gs
loope
adc
imul
sub
out
leave
fnsave
sbb
dec
pop
and
clc
sbb
mov
and
outsl
ficomps
gs
mov
mov
jmp
xchg
pop
imul
arpl
cmp
mov
jae
fstpl
xchg
push
jge
gs
shl
push
leave
js
push
dec
test
cmpsb
xor
scas
inc
xchg
gs
xor
test
mov
sbb
dec
push
cs
ja
jno
add
push
fildl
in
aas
in
insb
inc
add
out
xlat
mov
and
movsb
imul
stos
jne
cmpsb
rclb
movsb
and
and
jbe
shrb
push
es
insb
jae
and
aad
iret
pop
outsl
mov
pop
lds
es
stos
shlb
cs
aam
gs
add
sub
pushl
daa
mov
clc
inc
sbb
popa
inc
lret
xchg
mov
jne
dec
ret
fisttps
test
call
pop
idivb
push
jbe
gs
iret
invd
out
or
sub
dec
das
in
aam
fcoml
dec
add
ja
test
pop
les
imul
movsb
das
roll
gs
out
iret
add
scas
pop
into
add
adc
jmp
rclb
or
out
pop
xchg
mov
sub
gs
sub
cltd
gs
push
sub
inc
lds
loop
es
gs
jl
mov
jmp
adc
xchg
fistpll
push
hlt
daa
subl
add
sbb
ja
or
sub
sub
ljmp
xchg
in
mov
and
xor
add
lea
sbb
addb
ljmp
mov
stc
sahf
xorb
cmpsb
and
push
adc
sub
jecxz
enter
mov
and
mov
mov
ja
sub
inc
je
clc
push
in
fsubl
and
xchg
push
movsl
std
cs
scas
mov
xchg
xchg
mov
sarl
ljmp
mov
jo
gs
mov
ja
sbb
into
and
insb
lcall
aaa
add
shr
jbe
sub
rcll
mov
pop
or
mov
lret
aam
into
out
scas
dec
cmp
gs
add
or
imul
mov
shrl
sub
gs
out
outsb
in
cmp
pop
xor
sub
imul
inc
gs
push
aaa
xorl
and
in
mov
std
std
call
sahf
mov
mov
push
les
push
jecxz
pop
mov
fnstcw
mov
gs
inc
xchg
test
jl
and
sbb
imul
inc
mov
push
or
mov
push
pop
cltd
jg
mov
rorb
lahf
sbb
lahf
cmpsl
mov
aad
scas
ljmp
mov
jecxz
adc
and
sub
adc
jae
shrb
call
xor
call
pop
mov
jne
and
int
pop
or
dec
jg
loope
sub
jbe
icebp
popf
popa
shrb
das
lods
imul
pop
jmp
sbb
jecxz
in
loopne
jg
stos
fcomps
jmp
out
addl
mov
in
pushf
cmp
stos
roll
loopne
mov
xchg
test
adc
cwtl
pop
pop
sbb
ret
push
loope
sbb
ja
and
in
xchg
imul
ljmp
cmc
loopne
popf
adc
ror
iret
cmpsb
mov
fldt
gs
mov
hlt
mov
lods
jbe
jns
jae
iret
xor
xchg
and
andl
cs
int
add
mull
dec
dec
pop
cs
pop
arpl
in
int3
push
jae
cmp
jge
arpl
pop
jge
mov
cli
cmpsl
push
jg
push
sub
mov
popa
pop
pusha
arpl
cld
dec
pushf
popa
movsb
pop
and
adc
shll
andb
and
ljmp
outsl
xchg
gs
movsb
pop
xchg
popf
sbb
in
xchg
pop
push
pop
mov
pushf
repnz
loop
cmp
out
mov
ljmp
dec
jecxz
out
je
cli
mov
mov
jae
mov
mov
adc
loopne
test
repz
xchg
loopne
inc
pop
mov
or
and
pushf
mov
lods
jns
jbe
cmp
test
stos
mov
in
popf
cmc
or
fwait
icebp
mov
imul
arpl
dec
test
adc
cmc
mov
fs
cmpsb
dec
jo
push
sbb
sub
and
inc
pop
jecxz
adc
fwait
mov
mov
sub
lods
popf
test
jecxz
jmp
repnz
jmp
ret
inc
pop
adc
sbb
cltd
mov
test
movsb
bound
stos
mov
hlt
lret
xchg
cltd
ss
and
nop
jge
movsb
mov
mov
inc
mov
adc
in
daa
xchg
adc
inc
movl
hlt
cmp
test
and
into
loop
xchg
mov
fisubrs
out
pop
pusha
xchg
loopne
pop
push
inc
jge
loope
aad
xchg
adc
loopne
pop
addr16
ret
scas
ret
mov
je
sbb
out
scas
imulb
jbe
jno
xor
out
cli
nop
out
inc
pop
mov
xlat
loopne
jb
mov
aaa
out
js
divl
jge
shl
pop
jge
dec
cmp
fisttps
cmp
lea
imul
repnz
test
stos
pop
je
dec
or
or
test
pop
call
mov
xlat
arpl
pusha
ret
xor
mov
pusha
or
loopne
add
cmp
mov
iret
iret
negb
ljmp
xor
sub
fistpl
xabort
sbb
push
mov
mov
sbb
in
aad
outsl
pop
sbb
inc
xor
stos
or
pushf
mov
daa
jae
mov
faddl
enter
and
lahf
lret
pop
fwait
dec
cltd
mov
sbb
call
inc
pusha
call
jecxz
mov
loope
test
fs
bound
mov
adc
pushf
or
mov
xchg
pop
inc
and
xor
test
xorl
hlt
push
imul
adc
into
pop
in
sbb
jecxz
adc
xchg
lods
and
inc
adc
outsb
dec
je
dec
out
fwait
out
pop
loope
lds
hlt
xchg
adc
pop
and
out
jne
add
andl
and
adc
mov
push
mov
imul
cmp
mov
xlat
mov
imulb
test
popf
sub
pop
mov
jns
pop
mov
aam
pop
adc
inc
sub
or
mov
sub
popa
sub
pop
push
and
inc
and
sub
push
jb
inc
mov
loope
mov
adc
and
adc
mov
sbb
bound
in
mov
je
mov
sbb
loope
loop
bound
mov
into
arpl
loop
stos
xor
sbb
in
sahf
xor
lcall
mov
aam
cmp
icebp
lods
shl
xor
je
xor
mov
sbbb
pop
mov
arpl
xchg
push
sbb
popf
and
or
cmpsl
mov
fs
test
je
int
xchg
sbb
mov
loop
int3
mov
js
aaa
das
mov
ss
addr16
cmp
jae
out
jns
cmp
and
cmpsl
icebp
adc
pop
dec
mov
bound
adc
push
fistpl
sbb
scas
outsb
or
mov
int3
movsb
ss
xor
hlt
repnz
popf
rcrl
xchg
outsb
lock
loope
shll
pop
dec
orl
test
jnp
sub
xor
data16
mov
popf
pop
enter
lcall
es
sbb
jae
stos
mov
jl
and
cmp
loopne
hlt
sub
push
push
mov
push
adc
cmp
sbb
mov
into
pop
popa
ret
or
mov
daa
idiv
pop
bound
xor
jp
dec
movsb
lea
jae
sbb
divps
pop
mov
prefetch
sub
in
in
hlt
scas
and
mov
arpl
clc
cs
clc
and
mov
inc
loopne
xor
imul
adc
dec
jae
xchg
ficoms
jne
test
push
sub
adc
fcompl
sarl
scas
adc
push
or
nop
xchg
je
stos
cmp
insb
stos
cmp
sub
out
mov
and
or
cmp
mov
je
and
pop
sbb
mov
mov
adc
xchg
mov
xor
push
stos
jns
test
movsl
ja
xchg
and
and
repnz
adc
jg
xchg
mov
pushf
daa
lcall
fs
xchg
jecxz
xor
cmp
and
jl
shlb
cmp
loop
popa
es
adc
in
push
cld
pop
inc
ss
gs
jbe
cmpsb
int
gs
push
mov
out
cmp
test
pop
sub
inc
jl
imul
gs
cwtl
and
out
adc
push
mov
dec
mov
mov
add
out
mov
js
push
outsl
es
mov
mov
shrl
push
aaa
in
xchg
cmp
pop
jle
push
xor
gs
cld
xchg
push
addr16
gs
aas
push
mov
xchg
arpl
gs
sub
mov
enter
das
loope
sub
ljmp
cld
pop
ret
out
out
cltd
in
adc
outsl
adc
xchg
out
imul
cmpl
sub
cmp
mov
cld
add
pop
sub
or
pushf
incb
test
pop
lea
iret
xchg
xor
in
dec
shl
popf
lret
fimuls
imul
cld
insl
mov
jp
jmp
loop
cs
gs
leave
add
gs
jg
movsb
iret
std
data16
in
sub
fstpt
sbb
dec
and
add
mov
ret
stc
mov
dec
gs
inc
or
add
movsb
jne
push
dec
mov
mov
mov
dec
in
mov
push
ja
gs
mov
xchg
test
sub
lcall
in
xor
pop
sub
gs
mov
and
dec
mov
jb
xchg
mov
and
cld
sbb
push
and
xchg
cwtl
xchg
xchg
test
aam
pop
and
into
jl
fs
jp
and
cmc
xchg
cmp
mov
bound
lcall
mov
mov
pop
shll
das
mov
fldcw
or
aam
dec
mov
gs
jbe
xor
cmpb
pop
push
mov
sbb
jmp
shll
pop
pop
subl
jecxz
outsb
shrl
stos
addr16
sub
mov
and
inc
and
stos
mov
subl
ret
data16
push
lock
cmp
lahf
xlat
cmp
mov
jo
xor
xor
mov
add
lods
push
clc
sar
xchg
add
and
jne
popa
shll
movsb
xchg
popa
sbb
dec
fldl
loop
sub
leave
cli
and
pop
ja
dec
out
popa
sbb
mov
adc
dec
hlt
outsl
arpl
in
mov
mov
sbb
and
adc
xchg
sbbb
cmp
jge
ret
sbb
mov
lret
test
cltd
clc
pop
sbb
and
je
push
sbb
and
mov
loopne
and
icebp
fsubl
cmpsl
xchg
xor
adc
mov
mov
dec
aas
loopne
dec
sbb
mov
dec
repz
popa
loopne
mov
ja
dec
push
je
cmp
mov
xor
mov
cli
pop
repz
jl
cwtl
icebp
sbb
jb
cltd
and
jl
addl
mov
jle
or
push
cmp
jbe
lea
repnz
int3
pop
inc
sbb
sbb
sub
loopne
lret
push
aas
adcl
lret
into
sub
test
into
call
sub
test
xor
mov
sbbb
adc
sbb
add
stos
daa
test
or
mov
xchg
jbe
xchg
adc
inc
lret
pop
and
inc
popa
xchg
dec
cmc
pop
sbb
jg
xchg
lcall
xchg
sub
add
and
movb
and
loopne
enter
jne
lea
mov
repnz
sub
cmc
pop
and
and
gs
sbb
jmp
call
rorb
out
movsb
and
ret
and
gs
mov
adc
out
gs
or
dec
mov
push
add
leave
gs
cli
push
jns
loope
inc
ficompl
inc
adc
scas
lea
out
cmp
imul
stc
jno
loope
pop
clc
jo
jmp
pop
scas
and
push
jl
pop
mov
xor
gs
int
dec
cmpl
stc
jecxz
ficompl
xor
mov
push
push
ds
push
in
and
packuswb
mov
adc
bound
sar
pop
in
xor
pop
push
lcall
insb
sbb
cmp
stos
sbbl
mov
xchg
push
or
int3
sti
call
dec
fnstcw
loope
mov
shll
popf
xchg
cmp
fsubrl
mov
pusha
jno
push
sub
out
push
xor
aas
xlat
fs
fbld
mov
cltd
jl
mov
je
dec
pop
addr16
jp
xchg
gs
nop
cmp
xlat
mov
dec
lds
mov
aaa
in
fnstsw
dec
xchg
adc
cltd
pop
adc
idiv
es
push
fldenv
jle
cli
out
dec
mov
sub
lods
je
addr16
aad
out
xchg
imul
push
add
data16
aaa
jle
cwtl
insl
lcall
push
xchg
dec
test
dec
lret
and
mov
cmc
out
arpl
gs
push
sub
inc
scas
and
in
rcrl
in
call
pop
sub
in
pushf
xchg
addr16
mov
rcll
sbb
inc
lods
sub
xchg
cmp
gs
add
xchg
jno
sbb
mov
gs
test
fisubrl
cltd
ljmp
mov
std
loope
loopne
pop
popf
xor
nop
push
in
div
jae
add
and
pop
loope
icebp
dec
xchg
lret
sbb
cli
nop
jle
jo
mov
sbb
scas
aaa
je
js
dec
arpl
lods
push
shlb
fists
add
cmp
xchg
divb
gs
mov
js
dec
ljmp
jmp
adc
gs
mov
cmpsb
adc
addr16
ret
rcl
gs
or
je
gs
add
sbb
push
les
xchg
cmc
jne
outsb
and
or
dec
gs
xor
pop
pop
decb
gs
inc
cli
ljmp
lcall
movsb
mov
sahf
xchg
or
fisubs
cmc
dec
shl
adcb
shll
ljmp
aad
cmp
push
xchg
cld
fiaddl
add
gs
test
xchg
adc
xchg
xchg
gs
xchg
push
or
test
shl
sti
stos
lret
out
mov
rorl
cmp
jo
add
psubw
lods
inc
testb
mov
jmp
les
pop
inc
pop
and
in
insb
addr16
and
test
cs
jg
fwait
outsb
subl
add
push
sbb
in
xorl
aas
jmp
or
cmp
pop
pop
pop
gs
mov
sbb
shl
jmp
mov
imul
iret
hlt
shr
out
gs
adc
gs
lock
divb
mov
in
or
mov
sahf
call
pop
dec
gs
cmovnp
fsubr
and
xor
andb
mov
fnstenv
gs
out
ret
push
pop
cmp
jnp
loope
and
js
gs
sti
fidivrs
cmp
push
testl
gs
pushaw
imul
notb
push
or
pavgw
jno
dec
clc
gs
js
mov
mov
xor
xchg
ret
push
inc
jge
sbb
add
scas
cmp
dec
mov
insb
xor
gs
or
mov
and
sbbl
xchg
xor
push
gs
push
ret
xchg
mov
jb
test
add
push
push
mov
jecxz
leave
sub
push
nop
gs
sub
lods
pop
push
mov
mov
jne
pop
dec
jo
mov
sarb
jne
fwait
daa
cs
and
push
test
xlat
mov
push
gs
sti
lds
or
sbb
gs
mov
gs
cmp
sbb
jp
add
enter
pusha
fstpt
imul
hlt
roll
popf
mov
gs
cmp
jp
loope
add
test
sbb
adc
add
adcb
fs
jmp
gs
stc
xchg
imul
adc
or
test
insl
outsb
adc
jne
add
int3
pop
lods
rolb
cmpsb
mov
in
lret
dec
cmpsl
mov
dec
sub
add
xchg
test
cmp
mov
gs
scas
stos
idiv
push
xchg
dec
jecxz
int
pop
pop
jne
scas
adc
outsl
and
gs
sbb
xchg
out
jp
xchg
stc
mov
jmp
gs
mov
pop
in
decb
fdivl
xlat
mov
gs
lock
andl
sbb
sbb
sub
cmpsb
and
mov
lds
dec
test
or
out
insl
mov
jge
scas
push
push
gs
and
andb
int3
mov
loopne
div
xchg
sbb
mov
je
shlb
cld
mov
pop
sti
jmp
int3
fistl
push
push
and
jns
push
arpl
mov
mov
gs
dec
sub
adc
dec
mov
mov
mov
gs
jbe
mov
sub
pop
iret
js
sti
gs
cmpxchg
dec
or
gs
and
and
insl
sub
pop
in
pop
imul
stos
popf
lcall
cli
int
negb
cmp
outsb
push
gs
dec
mov
sub
dec
gs
mov
outsl
xchg
fisttpl
imul
movl
push
sbb
jp
out
gs
roll
lock
gs
scas
sbb
call
adc
or
push
into
xchg
int3
cmp
stos
dec
pushf
mov
mov
cmpsb
nop
or
out
add
loope
jbe
and
mov
and
add
nop
xchg
jne
dec
cmc
push
dec
or
jl
lcall
cmpl
jg
gs
imul
ficoml
cmp
mov
in
pop
sbb
imul
jp
sbb
inc
scas
and
dec
add
je
icebp
fstp
loopne
lods
add
sbb
push
inc
mov
imul
das
ficomps
pop
sub
jmp
test
cmp
sti
dec
cmpsb
push
rcr
out
loop
ret
test
jbe
adc
jp
cs
scas
mov
xchg
pusha
ror
cmp
and
xor
fs
pop
and
dec
fwait
imul
xor
addr16
lea
fwait
adc
cmovno
mov
inc
pusha
jae
jle
and
and
mov
popa
pop
pop
mov
movsl
dec
xor
stos
cmp
inc
pop
pop
push
fsub
popa
js
pop
ljmp
les
hlt
dec
mov
cmp
idivl
mov
jl
or
lods
popa
pop
out
sbb
rcl
xchg
and
mov
xchg
pop
sub
pushl
adc
xchg
lock
nop
and
and
inc
and
pop
test
adc
in
mov
sbb
movsb
mov
inc
lea
int3
and
pop
xor
int
cmp
mov
mov
je
jp
mov
dec
out
xchg
and
mov
mov
mov
loope
and
inc
and
mov
jno
jno
and
xchg
cmovnp
push
leave
out
subb
fcoms
es
call
fiadds
jo
fisttpl
jecxz
mov
cmp
mov
cld
pop
pop
jno
mov
jp
adc
adc
sbb
sub
sarb
out
dec
fmull
sti
out
pop
sarb
jns
loop
jae
sub
in
scas
jmp
into
test
ss
pop
add
adc
xor
pop
fisttpll
aam
adcl
scas
popf
repnz
adc
fsub
and
stc
lcall
arpl
mov
imul
inc
repnz
lea
repnz
or
lahf
and
cli
adc
fcompl
or
imul
mov
pop
sub
fidivl
dec
lcall
lcall
mov
pop
mov
push
out
pop
mov
pop
pop
adc
fcmove
cmp
mov
arpl
xcrypt-cfb
cmpsl
and
ss
lods
sub
adc
sarl
or
mov
aas
jecxz
sbb
sarl
fldenv
arpl
ljmp
sub
icebp
ds
test
fildll
dec
mov
popf
cmp
sub
stc
dec
sbb
arpl
notl
push
clc
pop
and
xor
mov
orb
mov
int
mov
sub
repnz
mov
jcxz
push
cwtl
inc
mov
jge
cmp
out
and
mov
leave
das
xchg
outsl
outsl
mov
popa
and
test
jecxz
daa
mov
mov
cmc
gs
rcrb
xchg
mov
cmp
fidivs
add
icebp
filds
mulb
inc
or
mov
cmp
add
addr16
jecxz
xor
fiadds
lods
sbb
pop
jo
cwtl
call
shll
ss
dec
lahf
jge
rclb
dec
decb
cs
push
inc
add
xchg
gs
ret
out
push
addr16
gs
sarl
ret
sbb
sub
fadds
cmpsb
pop
inc
cmp
jmp
cmp
popl
out
xchg
dec
jmp
and
sub
adc
push
outsl
mov
fidivs
arpl
hlt
popa
imul
add
loop
or
pop
mov
pop
add
mov
clc
flds
dec
pop
push
lds
ficompl
adcb
shrl
xchg
sub
rol
xchg
mov
jnp
pop
lret
mov
mov
into
and
ds
pop
add
xchg
ret
sti
test
enter
pop
xchg
sbb
mov
mov
xor
data16
imul
mov
aas
dec
mov
jnp
testb
sahf
addr16
ds
sbb
jl
xchg
in
gs
jg
aam
lds
lds
pop
insl
sbb
xchg
fcoml
jne
sahf
gs
add
scas
adc
jp
sub
gs
lods
cmp
pop
dec
or
gs
push
gs
sbb
test
outsb
sub
push
mov
aaa
mov
dec
adc
inc
cld
or
xor
cmp
xlat
cmp
std
iret
or
mov
fs
cmpsl
jo
es
stc
jp
fbstp
sbb
lret
addl
gs
addr16
out
push
stos
add
sbb
push
or
es
add
cmp
xor
pushf
imul
inc
gs
xlat
adc
pop
gs
pushf
push
stc
mov
xor
pop
mov
jns
cmc
orb
in
out
test
fdivrl
and
mov
push
fucomip
sub
insl
mov
or
orl
es
icebp
mov
arpl
sbb
or
pushf
xchg
rcr
gs
dec
add
repz
xchg
stc
fnstenv
int
ss
aad
imul
lret
dec
es
mov
gs
mov
or
gs
add
inc
fisttpll
fwait
jo
leave
fstps
out
gs
pop
fs
cmp
les
mov
push
jl
adc
jge
jbe
add
dec
dec
test
bound
fbstp
sub
mov
xchg
and
gs
mov
ficoml
mov
dec
arpl
sub
ror
and
leave
lcall
sbb
adc
xchg
add
xlat
je
pop
gs
jnp
mov
lds
xor
lcall
inc
inc
mov
into
ret
mov
fidivs
pop
addr16
insl
aad
jne
inc
sub
push
imulb
dec
mov
pop
gs
in
lock
bound
or
push
fcmovbe
mov
test
scas
lea
pop
es
xchg
sub
test
or
in
js
sub
into
imul
or
test
rcrb
adc
pop
mov
and
mov
enter
stos
adc
out
enterw
out
xchg
xchg
arpl
adc
std
mov
xchg
test
ss
xchg
mov
call
int
mov
sub
and
std
sbb
xchg
test
dec
cmp
lret
loop
js
gs
xor
cmpsb
mov
mov
xchg
cmp
mov
jb
pop
test
fbstp
cmp
data16
or
and
lret
jne
mov
inc
add
iret
mov
les
mov
add
shufps
pop
in
sub
sbb
push
aad
sbb
inc
lret
xchg
addr16
stc
xchg
pop
test
lods
arpl
jbe
fdivl
pop
pop
push
nop
test
imul
gs
inc
js
stc
imul
adcl
roll
xor
pushf
shr
out
push
pop
mov
xor
cld
addr16
sahf
fidivrs
dec
jne
sbb
pop
mov
gs
dec
in
test
cs
and
leave
pop
dec
jno
test
sub
cmp
imul
mov
lahf
gs
jl
xor
cmpxchg
mov
stc
out
and
rcrl
in
arpl
pop
lds
or
xchg
enter
and
into
imul
cwtl
sub
and
cld
ja
lea
sub
pusha
pop
sub
push
jle
sub
aam
jae
mov
insb
loope
mov
shll
xor
sbb
aaa
bound
test
push
ljmp
jns
aas
mov
adc
mov
sbb
into
rcrl
gs
sub
int3
adc
insb
jb
ret
test
cmp
rcrl
pop
adc
bound
imul
pop
mov
pop
xchg
cmp
adc
shlb
cmp
xlat
push
ds
out
nop
test
loop
xchg
mov
lods
clc
jecxz
mov
mov
popf
ja
mov
sarl
xor
mov
clc
mov
call
arpl
xor
repz
gs
popf
js
out
cmp
call
lock
repnz
aaa
add
out
mov
out
jno
inc
adc
jecxz
std
in
jmp
js
sub
jmp
push
adc
pop
and
aam
stos
mov
mov
je
mov
out
mov
test
loop
imul
adc
xchg
fidivrs
je
gs
divb
adc
scas
jnp
test
dec
jge
popf
cmc
insl
jne
stos
test
hlt
fsubs
inc
jmp
faddp
mov
mov
and
jbe
filds
mov
mov
mov
scas
mov
mov
fcompl
sbb
into
notb
lods
cmp
and
mov
fdivl
in
notl
in
pop
cmp
fcompl
leave
jno
jg
js
fcoml
pop
lods
cmp
jle
jecxz
mov
mov
sarl
dec
out
fdivrl
inc
mov
fcompl
pop
mov
out
dec
mov
xchg
jns
mov
movsb
cmp
xor
pop
and
and
fstps
inc
test
mov
outsb
ja
popf
mov
xor
and
fldenv
mov
out
aam
pop
or
fnstenv
pop
push
push
cmpsl
dec
cwtl
pop
and
xor
ficoms
mov
jecxz
cld
or
in
and
xchg
jne
push
cld
pop
in
mov
fwait
or
lea
movsl
and
xlat
mov
jo
ss
cmp
lea
fsts
pop
mov
in
mov
inc
shl
orb
iret
mov
fldenv
addr16
fwait
pop
or
sbbl
repz
cwtl
or
popa
fdivrs
jmpw
jnp
jno
fmuls
add
inc
add
and
xor
cmp
adc
ret
insb
and
in
xchg
mov
call
leave
out
out
aas
pop
decl
imul
pop
lret
dec
int3
mov
push
in
repz
dec
cli
loopne
stos
sbbl
loop
fisttpl
inc
inc
loopne
pop
aam
pop
daa
sbb
mov
jbe
jae
xor
cmc
in
lock
cmp
add
mov
je
sbb
mov
rclb
adc
add
pop
mov
test
mov
or
mov
lret
sub
add
inc
push
xchg
pushf
mov
cld
sub
ret
and
scas
outsb
fwait
push
inc
mov
cmpsb
lcall
stos
sbb
das
mov
in
hlt
fists
push
lods
jge
jns
shlb
ret
cltd
fstps
arpl
das
mov
repnz
pop
xor
push
jb
scas
mov
push
ljmp
loopne
cmpsb
lods
sub
jbe
andl
sbb
and
mov
scas
cli
add
sbb
je
pusha
dec
out
inc
pop
es
movsl
add
xchg
pop
inc
mov
in
movsl
test
adc
addl
rorl
das
mov
sahf
mov
sbb
sbbb
and
divl
add
imul
inc
add
pop
and
jecxz
pop
les
pop
mov
push
nop
jp
shll
xchg
out
or
add
fs
xor
in
jns
sahf
mov
mov
mov
sub
xchg
xor
push
adc
ret
test
mov
xchg
sbb
scas
push
inc
sarl
sbb
popa
lods
sti
addr16
rolb
adc
sbbl
scas
push
pop
add
pop
pop
leave
lock
in
dec
mov
dec
js
mov
sbb
and
mov
stos
movsb
arpl
jecxz
jae
shrl
xchg
dec
and
inc
pop
lock
dec
fadds
xor
shl
mov
mov
jb
dec
pusha
adc
enter
push
jae
adc
mov
test
cli
dec
jno
push
shll
jbe
and
test
dec
cltd
push
loope
push
dec
adc
xchg
pop
mov
imul
cltd
add
in
shl
mulb
pop
leave
int3
xchg
jae
scas
push
insb
fisttpll
in
mov
sbb
sbbl
faddl
mov
inc
mov
mov
mov
movsb
and
mov
adc
mov
lock
mov
mov
popa
movsb
mov
xchg
pop
and
adc
mov
in
xor
pop
movsl
fs
cmc
or
jmp
movsl
push
pushf
imul
inc
inc
xchg
adc
fs
int
data16
mov
mov
pop
loopne
cs
mov
sbb
jmp
sbb
vandps
addr16
jecxz
xor
pop
in
push
jecxz
test
dec
mov
xchg
hlt
mov
and
and
mov
sbb
pop
imul
push
movsb
gs
jbe
jp
ret
push
iret
shll
pop
and
cmp
jle
or
sbbb
movsb
and
mov
pop
cmc
decl
ret
leave
xchg
adc
or
mov
bound
and
push
xchg
idivl
fiadds
add
aam
jae
scas
push
adc
sbb
mov
mov
sbbl
jno
jg
xlat
sub
ljmp
imul
lcall
mov
arpl
xchg
mov
jg
inc
pushf
rolb
push
es
mov
outsl
adc
add
std
lods
mov
sub
scas
test
lock
push
push
pop
hlt
push
or
pushf
dec
inc
rolb
pop
pop
sub
cld
pop
scas
movb
fwait
and
lret
sub
lods
mov
rcrb
inc
pusha
adc
adc
xchg
pop
xor
aam
fcoml
mov
je
and
push
xorb
mov
add
aam
ficoml
scas
pusha
adc
or
xor
jmp
add
xchg
fmul
mov
xchg
mov
fdivl
out
mull
cmpsl
aaa
adc
leave
lods
pop
adc
mov
fisubrl
mov
mov
imul
xlat
insb
sbb
pop
dec
sbb
pop
shl
mov
xorb
mov
cmc
xor
fwait
dec
movsb
inc
add
div
addr16
movsb
pop
data16
or
mov
dec
push
xor
fwait
dec
and
xchg
and
mov
mov
cs
mov
shl
xchg
push
pop
jb
mov
sub
addr16
dec
orb
cld
sahf
mov
mov
or
pushf
sbb
mov
dec
frstor
scas
ljmp
popf
push
pop
popf
mov
xchg
pop
ret
mov
push
inc
dec
int
fcompl
jo
movsb
adc
mov
fcomp
fmull
mov
jnp
adc
adc
mov
mov
sbbl
dec
bswap
daa
out
lcall
or
bound
add
pop
mov
and
push
lods
jge
jcxz
mov
int
sbb
or
and
mov
push
shrb
loope
out
lods
lock
mov
mov
and
jle
jecxz
mov
mov
test
imul
xchg
inc
adc
sbb
into
mov
mov
and
inc
jl
lcall
add
fcompl
cwtl
or
mov
inc
mov
fbld
mov
pushf
and
inc
mov
mov
jle
dec
sbb
jo
jae
scas
push
dec
jb
pop
xchg
arpl
xchg
sbb
dec
stos
cmpsl
xor
or
mov
pop
movsl
push
xchg
dec
in
pop
popf
pusha
sbb
jecxz
movsl
mov
shr
fldenv
mov
idivl
cmp
js
data16
mov
rcrb
push
aaa
lcall
daa
push
xor
dec
push
je
ficoml
adc
fsts
xlat
pop
fbld
mov
lods
pop
enter
fstps
cwtl
adc
dec
pop
xchg
or
shrb
fcoml
adc
jle
fcmovne
jmp
xchg
mov
push
adc
adc
push
cmp
sbb
add
stos
int
mov
sub
in
pop
xor
jecxz
fcompl
into
cli
in
popa
sahf
pop
mov
shlb
mov
fdivrl
insb
ljmp
je
adc
mov
in
jecxz
repnz
test
push
push
cltd
adc
jmp
mov
repz
fsubrs
mov
js
and
orb
sahf
icebp
test
popf
jbe
pop
ja
in
popf
mov
jb
adc
loop
xorl
aam
pop
push
lds
shlb
cld
mov
jg
xchg
ret
mov
pop
jmp
adc
mov
out
clc
dec
into
lcall
add
add
jae
pop
adc
xchg
mov
fistpl
dec
movsb
fidivl
mov
sbb
je
in
fmuls
scas
rol
mov
iret
in
or
and
cmpsl
push
mov
popf
imul
loopne
imul
mov
cmc
xchg
sbb
mov
add
cmpsl
xor
mov
mov
adc
xor
mov
mov
icebp
pusha
cld
mov
fldenv
lea
push
jg
shlb
mov
sbb
mov
cmp
adc
adc
inc
jnp
add
adc
imul
mov
push
and
adc
cltd
imul
pop
xchg
sbb
movb
arpl
jg
and
popa
adc
cmp
stc
or
mov
jg
je
ljmp
nop
faddl
in
and
adc
cmp
test
scas
sbb
rclb
push
sbbl
bound
lahf
loope,pn
testb
mov
fstps
xchg
mov
mov
push
adc
cli
push
popf
mov
rorl
push
popf
push
mov
cli
addr16
cli
fldl2t
mov
jl
mov
fstpl
shll
ljmp
sahf
pusha
push
mov
push
ja
mov
add
movsb
sbb
cmp
push
or
popa
fistpll
test
jge
lcall
cmp
add
cmp
lcall
movsl
dec
popf
push
mov
rolb
cmp
sbb
push
lcall
cmp
enter
imulb
fmull
sahf
gs
mov
xchg
sbb
inc
sbb
xchg
nop
fsubr
test
into
mov
xor
popa
push
fistps
fmull
lea
and
push
mov
dec
int
repz
in
test
fmull
push
loope
adc
in
out
clc
fs
pop
cli
fistps
fdivrl
in
fcomps
mov
popa
and
xchg
xadd
es
mov
fists
adc
stos
xor
test
sbb
dec
xor
push
sbb
in
jp
xor
push
fists
jg
xchg
pop
and
in
in
fcomip
pop
mov
cmp
jle
pop
push
xor
jle
pusha
pop
pop
add
mov
xchg
and
adc
mov
orl
or
xchg
xor
fdivrs
push
test
nop
aam
xchg
rclb
xchg
inc
sub
stos
add
mov
inc
scas
orb
fcmove
insl
and
repz
and
jae
roll
add
fdivl
xchg
and
cmc
rol
or
and
loope
rcrl
andl
movsl
popf
push
adc
and
sub
push
push
aam
pop
in
and
call
aam
jle
test
sbb
inc
popf
js
pop
mov
push
cltd
jne
mov
jmp
pusha
iret
push
adc
adc
loopne
pop
sbb
ljmp
jmp
out
push
jecxz
int3
and
push
and
notl
js
popf
jo
arpl
pop
sbb
test
add
lock
and
pop
addl
es
jae
pop
fdiv
lds
fdivs
add
setns
xchg
and
es
pop
push
jecxz
xchg
pop
adc
xchg
loopne
adc
xchg
in
insl
sbb
lods
push
pop
xchg
mov
cld
fs
scas
inc
xchg
fs
xchg
push
mov
fsub
adcl
inc
push
jb
js
jns
mov
push
jae
mov
int3
xchg
push
mov
jo
sbb
mov
mov
mov
push
mov
pushf
xchg
and
pop
popa
and
push
stos
fisttpl
arpl
sub
cmp
clc
mov
cmp
fsubr
andb
jno
outsb
mov
in
xor
or
jecxz
scas
mov
mov
jae
icebp
jae
xchg
rclb
and
mov
imul
call
mov
rclb
scas
jb
iret
gs
test
rol
mov
aaa
cmp
lahf
stc
sub
mov
adc
dec
inc
xor
xchg
sbb
cmp
push
loop
nop
dec
push
dec
sahf
mov
xchg
test
dec
or
jnp
cmp
ja
mov
scas
xchg
and
rorb
sahf
lea
push
imul
mov
jle
mov
jecxz
enter
mov
lahf
mov
mov
movsb
loop
add
or
add
lahf
push
popf
sahf
and
jae
pop
faddp
jp
in
xchg
popf
cwtl
push
movsb
jns
xchg
popa
add
jae
adc
dec
and
out
push
stc
outsb
xchg
xchg
imul
xchg
in
inc
fdivrl
repz
fstps
and
int3
or
rorl
adc
loop
or
dec
sbb
pushf
or
and
sbb
cmp
pop
mov
or
and
push
mov
jae
jmp
jle
sbb
in
test
dec
and
mov
sbb
fstpl
and
and
mov
ljmp
cld
test
sarl
popf
fmuls
and
in
loopne
cs
sbb
add
movsl
xor
gs
fldcw
pop
cmpsb
push
push
push
push
faddl
sub
sub
ficomps
or
lahf
cmp
test
test
daa
jmp
scas
lods
gs
xchg
cmc
imul
sub
gs
loope
pushf
and
xchg
dec
sbb
leave
pop
movntq
out
gs
mov
mov
call
es
pop
dec
gs
push
xor
adc
push
push
jp
lods
ljmp
push
in
jo
imul
jo
pop
mov
inc
jb
ja
push
addr16
fmul
or
mov
lock
and
xchg
dec
mov
out
sbb
das
pop
orb
mov
pop
xlat
adc
mov
les
sbb
jno
mov
mov
test
mov
orl
sub
in
mov
jno
das
cmp
cmp
adc
test
pause
scas
pop
and
fwait
int
popa
aas
and
out
ss
mov
pusha
cmp
mov
xchg
insl
mov
gs
shll
in
dec
gs
pusha
jb
divl
leave
lahf
sbb
repnz
adc
sarb
and
mov
push
sarl
inc
subb
test
cmpsl
xlat
out
mov
imul
push
jg
xchg
mov
leave
fnstsw
fwait
add
test
inc
push
in
roll
test
mov
and
outsl
or
cmp
sub
into
ds
test
inc
jp
cwtl
gs
inc
and
pop
negb
adc
ret
push
cmp
popf
jo
jbe
or
sub
mov
aaa
frstor
or
or
or
pop
cltd
xor
jecxz
popa
jp
div
arpl
xor
adc
dec
repz
mov
test
mov
out
sbb
push
sti
dec
or
gs
into
insb
gs
dec
rclb
gs
pop
xor
mov
or
jnp
clc
test
fildl
gs
cmc
mov
addr16
cld
gs
call
xor
sub
out
xorl
mov
pop
inc
cmp
enter
pop
std
dec
cwtl
icebp
gs
cmpsl
imul
jecxz
gs
repz
scas
xchg
mov
sub
sbb
pop
jo
jb
xor
je
cmp
ljmp
inc
add
out
push
insl
mov
in
pop
les
jmp
gs
or
repnz
jae
test
pop
mov
shr
andl
arpl
icebp
mov
add
loop
pop
fdivs
addr16
fstl
xlat
loope
mov
pop
mov
sub
inc
int3
sub
sub
fcoml
clc
mov
loope
fisubl
iret
mov
xchg
hlt
add
pop
loope
inc
sub
pop
aaa
mov
popa
jae
outsb
popf
roll
js
pop
push
aaa
mov
gs
imul
bound
rol
gs
hlt
out
mov
mov
icebp
fdivrl
mov
push
xor
pop
and
in
aaa
jmp
push
xchg
sbb
dec
adc
push
lea
gs
push
xlat
les
and
gs
lcall
ljmp
pop
insl
and
adc
lods
xor
sarb
fldcw
into
faddp
gs
test
mov
sbb
lock
or
sbb
add
push
addl
fbld
test
les
fiadds
out
jne
push
adc
jp
jne
sub
into
push
ficoms
mov
test
ret
jge
test
sahf
gs
dec
sub
pop
fstl
xchg
jbe
out
inc
mov
test
gs
rclb
sbb
test
mov
hlt
pop
lods
movb
out
lods
push
add
call
fisttps
cmpl
sub
gs
sub
int
pop
dec
outsb
jecxz
push
xchg
sar
push
fdiv
push
push
cli
or
gs
ficoms
add
push
mov
cld
lret
fstpt
cs
sbb
lret
mov
sub
in
mov
cmp
jbe
and
int
push
outsb
in
gs
dec
js
ds
gs
ljmp
adc
andl
xchg
addr16
and
imul
pop
cmpl
mov
or
scas
jnp
ret
inc
pop
sub
and
pushf
notb
sub
jle
jbe
test
gs
loop
fcoms
sub
xor
insb
xchg
and
fwait
mov
arpl
add
outsb
mov
jno
out
stos
mov
arpl
and
leave
mull
ss
gs
enter
dec
aad
inc
jno
cli
xor
sbb
mov
push
and
test
popf
cltd
arpl
sbb
scas
mov
mov
cmpsb
inc
call
jae
in
gs
xchg
xchg
in
xlat
sub
pop
imul
jmp
scas
leave
dec
in
jnp
push
add
push
mov
jmp
mov
lret
mov
loope
in
imul
clc
sbb
or
out
xor
jns
dec
lahf
enter
in
xchg
sub
cmovl
dec
jecxz
xlat
sbb
xchg
inc
aam
sub
mov
sbb
fisubrl
subl
push
gs
add
push
push
fwait
gs
jg
call
seto
xchg
gs
and
push
xchg
mov
scas
mov
jns
cs
daa
jmp
or
cmp
and
lods
movsb
clc
repz
dec
gs
add
jae
inc
enter
fwait
cld
jge
push
mov
inc
stc
jmp
pop
pop
int
aaa
insl
fucom
loope
ficomps
mov
fwait
adc
movsb
lret
aaa
je
psadbw
mov
pop
pusha
jle
pop
pop
mov
shl
jb
and
push
stc
out
xorl
cmp
mov
sarl
icebp
cwtl
mov
lea
mov
je
outsl
jae
nop
cmp
xor
fstl
sbb
pop
pop
in
mov
lods
mov
push
into
leave
adcl
ret
nop
jg
push
mov
add
dec
in
pop
fisttpll
cmp
mov
xor
loop
fwait
adc
cmc
mov
call
dec
ror
dec
mov
pop
jge
stos
push
mov
adc
iret
lret
jmp
imul
and
and
cmp
or
push
insb
int3
and
insb
xor
mov
mov
movsb
cmc
mov
xchg
jmp
push
in
pop
pop
loope
fiadds
ds
ljmp
test
stos
jmp
lods
or
xchg
mov
jbe
icebp
repz
mov
fs
push
add
ljmp
in
xchg
jg
xor
sahf
divb
call
mov
inc
sub
fsubrl
test
add
pop
pop
popa
xor
lcall
and
test
fucom
test
andl
js
push
pminsw
dec
std
adc
mov
movsb
int3
push
ljmp
and
jns
push
jmp
mov
loope
mov
ret
jbe
lds
inc
scas
movsb
rcrb
mov
andl
sbb
dec
mov
dec
jge
leave
lods
adc
mov
in
fisubrs
ss
pop
mov
rorb
mulb
sub
cmpsb
pop
jae
nop
in
fildl
in
rcrb
xchg
sti
fisttps
cmp
loope
in
jl
lret
xor
jg
push
insl
shll
inc
in
mov
jns
sti
pop
gs
mov
aaa
mov
imul
adc
sbb
inc
cwtl
dec
movsb
pushf
loope
xchg
or
icebp
or
lret
data16
lods
imul
arpl
aas
sti
shrb
aad
int
mov
mov
out
sahf
mov
shll
in
jbe
gs
in
gs
mov
roll
xchg
lret
insl
cmp
push
push
cmp
mov
push
mov
gs
dec
je
dec
loop
loope
fstpt
lea
gs
fwait
dec
mov
shll
push
jecxz
xchg
mov
ret
xor
popa
aam
lods
ja
pop
or
gs
jp
cmpsb
shl
gs
mov
adc
gs
sbb
push
fwait
push
add
sub
lret
add
gs
pop
xor
xchg
clc
mov
dec
gs
sarb
fbld
push
inc
hlt
jecxz
pop
out
movsb
or
and
scas
test
cmp
divl
imul
insb
add
mov
mov
adc
push
imul
std
sbb
adc
sub
ljmp
lods
ljmp
gs
adc
push
jl
or
gs
jg
inc
or
arpl
add
std
lcall
xchg
imul
mov
jecxz
sub
pop
jne
movb
insl
xor
gs
mov
cli
push
arpl
jo
dec
test
add
pop
inc
std
mov
and
mov
xchg
add
xor
std
je
enter
aas
adc
popa
gs
loope
ljmp
dec
add
mov
leave
push
jecxz
addr16
cmpsl
xchg
add
mov
sbb
addb
push
or
or
das
jg
inc
gs
mov
scas
stos
roll
sahf
lret
hlt
in
sub
inc
cwtl
test
int
xchg
push
gs
lods
je
push
cmc
inc
gs
stc
mov
dec
push
adc
test
or
nop
add
fucom
push
xchg
xlat
sbb
rcrb
addr16
imul
stc
jnp
jecxz
xchg
push
mov
movsb
aam
dec
cmp
test
add
or
pushf
cmp
sbb
push
fwait
in
loope
call
sub
adc
roll
gs
les
sbb
aad
xor
sbb
in
out
cmp
ret
lds
push
push
gs
hlt
in
das
xchg
or
pop
aad
xor
cltd
mov
mov
imul
pop
test
mov
push
add
inc
push
lahf
movsl
xchg
pushf
add
or
dec
fsubl
insl
mov
pop
push
je
lret
lods
test
sbb
sub
loope
pop
jbe
cmp
insl
nop
gs
sarb
sbb
popa
jmp
out
divl
idivb
insb
xor
gs
and
jae
lods
stc
lret
jne
pop
imul
jo
push
sahf
sti
clc
xor
dec
testb
inc
stc
gs
or
outsb
gs
mov
mov
stc
lcall
adc
repz
mov
loop
mov
mov
adc
out
jmp
adc
mov
sbb
js
loope
or
mov
enter
repnz
cmp
mov
jne
int3
sub
fildll
ret
sub
push
pop
cmp
nop
idivb
jo
gs
pop
add
push
mov
gs
fdivr
mov
push
xchg
lods
loope
adc
push
fsubrl
ss
sub
and
mov
push
mov
lret
xchg
xor
movsl
ret
outsl
dec
into
das
jecxz
jbe
or
push
out
negb
inc
subl
addr16
sahf
sub
shll
scas
pcmpgtw
sahf
lock
mov
or
jae
dec
and
sbb
cmpsl
push
or
ja
cld
xchg
mov
in
add
loop
and
aad
sbb
sbb
inc
movsl
fiadds
in
ficoms
and
mov
rcll
fwait
test
mov
xor
jno
sub
mov
insb
jae
loope
cmc
ret
xor
or
insl
mov
pop
mov
ljmp
pop
and
out
xor
dec
mov
out
out
xor
cld
pop
jle
sahf
xchg
adc
in
dec
cltd
sub
sahf
adc
pop
sbb
adc
cmp
ss
icebp
cli
jle
dec
lcall
fwait
lock
icebp
popf
mov
pop
pop
jmp
xlat
lcall
adc
es
pop
jo
jecxz
gs
and
mov
add
in
adc
mov
lock
push
xchg
xor
mov
loop
mov
add
fcomps
jb
cmp
xor
jae
aaa
cmpsb
je
negl
xor
cmp
daa
aaa
insl
hlt
mov
insb
stos
mov
lock
bnd
std
xor
test
in
mov
xor
cltd
cmp
pop
imul
mov
and
cld
xchg
psrld
in
push
pusha
popa
push
cmpsb
xchg
jbe
fs
pop
rcll
jl
and
mov
ror
lea
pop
stos
lea
fnstcw
ss
add
xchg
cld
fcomps
xchg
insl
leave
outsb
dec
mov
into
dec
jmp
adc
xchg
and
icebp
push
into
loopne
inc
push
stos
popf
fs
loopne
inc
add
mov
fsubs
jecxz
loope
popa
ffreep
stos
dec
je
sbb
jne
mov
push
loop
lds
push
sbb
in
test
add
push
xchg
loop
dec
les
hlt
jne
jecxz
jae
xor
cmp
inc
std
pop
pop
scas
jae
fistps
mov
iret
inc
gs
imul
out
gs
lock
sbb
pop
in
add
daa
mov
jg
in
shlb
ja
xor
xchg
das
roll
push
es
leave
cmpb
mov
jnp
scas
gs
test
scas
loope
inc
xor
rcrl
add
stos
popl
mov
push
or
jne
add
iret
add
mov
adc
loope
out
fisttps
xchg
shlb
enter
dec
lcall
gs
repnz
mov
or
mov
xor
xchg
pusha
insl
frstor
dec
gs
add
jns
int3
push
push
gs
adc
ds
xor
addl
daa
test
gs
mov
lds
loop
popa
push
sub
fidivrs
gs
out
andl
lcall
add
rcll
lods
test
lock
cltd
dec
aad
pusha
xchg
lods
loope
or
and
rol
xchg
add
dec
and
push
lcall
leave
test
test
gs
lret
gs
push
lods
imul
hlt
leave
pusha
sub
pop
push
push
clc
lock
loope
or
jg
das
aas
gs
inc
jbe
rorl
adc
sbb
xor
gs
add
and
ret
or
cltd
mov
or
scas
popl
inc
and
data16
stos
sbb
inc
pop
repz
push
aad
sbb
mov
jl
movsb
fucomp
mov
mov
inc
rcrl
jg
mov
mov
ret
xor
cmc
adc
popa
inc
or
enter
pop
mov
cld
daa
cmpsl
das
and
pushf
pop
es
adc
and
fbstp
fwait
push
lods
bound
and
sti
pop
in
mov
mov
imul
pushf
add
and
push
adc
and
fucomip
cs
jne
jo
test
mov
xchg
xchg
dec
pop
adc
je
ss
or
sub
cli
sbb
pusha
dec
jo
ja
popa
push
aam
movsl
jecxz
sub
pop
mov
adc
lods
cmpsb
in
into
insb
rcrl
and
pop
stos
sub
fmull
pop
dec
aad
gs
addr16
and
xchg
dec
jecxz
mov
inc
pop
dec
inc
jl
adc
gs
sub
inc
gs
pop
cmp
clc
jns
push
adc
cltd
jl
add
cmpsb
gs
xchg
pop
loope
mov
adc
sti
jg
gs
jno
into
cmp
sbb
pop
jl
push
gs
pop
lcall
mov
or
std
jecxz
lods
shl
dec
jge
sbb
pop
in
push
idivl
or
testb
xchg
xor
call
rcrl
repz
jmp
out
gs
xchg
iret
xor
data16
xor
jno
cmpsl
mov
pop
in
aaa
lods
jg
cmp
gs
cmpsb
cmc
jae
inc
call
and
ja
pop
inc
shll
sbb
stc
jmp
ret
pop
in
xchg
ljmp
dec
dec
or
into
mov
or
xchg
cmp
push
dec
scas
test
hlt
das
aam
or
push
or
inc
or
gs
shll
subl
scas
adc
loope
mov
or
mov
pop
call
pop
cwtl
dec
cltd
rcrl
lea
jbe
rclb
pop
push
lret
or
std
inc
cmp
push
cmc
ss
sub
jge
stos
sahf
adc
mov
shlb
jg
idivl
mov
pop
xchg
mov
ret
mov
stos
shrl
and
loopew
xor
or
pushf
and
jno
fwait
gs
jecxz
push
xor
pop
and
fidivs
jmp
cmp
pop
jge
mov
dec
cld
add
and
iret
jo
xchg
loop
mov
mov
test
sbb
loop
sub
int
mov
test
arpl
lock
scas
outsl
ds
mov
pop
pop
mov
mov
jp
loope
andl
fwait
mov
xchg
cmp
mov
gs
cld
lock
mov
movsb
mov
jns
jne
push
out
and
ja
icebp
sub
and
cmp
xchg
lods
aad
adc
fmull
out
mov
mov
outsl
arpl
adc
clc
add
push
cmc
aam
push
fldcw
adc
push
add
das
mov
push
xchg
and
pop
out
pop
add
adc
jno
cmpsb
xor
and
jmp
lahf
fs
dec
inc
mov
fwait
fs
jne
aam
sbb
push
lock
imul
ja
shrl
mov
fimull
paddw
sub
inc
subl
and
lahf
cmpsb
sub
pop
cli
sub
cwtl
flds
bound
cmpsb
dec
mov
sbb
mov
arpl
arpl
mov
jne
sub
xchg
and
push
mov
mov
cli
ret
idivb
pop
popf
repz
ljmp
lret
movsb
lret
xchg
aad
push
mov
fisubrl
mov
push
pop
push
pop
and
sub
in
sub
icebp
jb
sub
fsubl
or
in
fsub
jae
shll
sti
push
xlat
mov
add
sub
push
shl
and
jle
aad
rcll
jae
scas
push
xor
and
insb
loopne
jge
mov
popa
das
sub
in
popa
push
mov
cwtl
adc
inc
pop
push
in
test
fistpll
cwtl
lcall
fstps
xor
movsl
enter
shll
jo
dec
popa
fiadds
stos
xlat
dec
adcl
push
fcmovnu
adc
mov
in
rcrl
or
or
xor
inc
int
adc
fsubrl
outsl
cmp
xorb
mov
in
leave
scas
jle
je
xchg
mov
cmp
jcxz
sub
pop
jae
imul
mov
cmp
mov
ss
push
sarl
rcrb
push
inc
mov
imul
and
pop
pop
cwtl
jge
in
mov
push
xor
loope
rolb
lock
fdivl
xchg
sub
xchg
sbb
cld
sti
xchg
and
daa
lock
mov
cmp
inc
pop
pusha
fistpl
cmpl
clc
fdivl
push
hlt
push
jl
sbb
scas
lahf
inc
mov
cmovbe
in
sti
dec
pop
jbe
call
icebp
push
jae
scas
push
arpl
ret
and
loope
mov
mov
xor
sbb
jge
cmp
jbe
mov
sahf
popf
cltd
inc
jge
in
scas
ljmp
sarb
sbb
dec
dec
mov
nop
orl
push
ds
push
popa
mov
pop
adc
pop
jle
xor
imul
int
mov
jbe
or
xor
push
mov
js
cmp
push
mov
mov
sti
test
mov
flds
jp
aaa
lods
mov
in
movsb
in
movsb
cmp
aaa
addl
int3
sbb
sbbb
add
adc
cmp
xor
adc
addr16
jb,pn
repnz
and
adc
inc
shl
mov
xchg
xor
jmp
mov
movsb
jnp
movsb
imul
mov
jne
xor
jbe
add
cmp
push
pop
icebp
clc
and
out
stos
lahf
xor
aaa
lahf
mov
ja
jb
les
jno
mov
imul
mov
cmp
js
xchg
mov
popf
scas
mov
xchg
cmp
loope
aad
sbbb
fcmovu
and
leave
jno
in
in
popa
and
lahf
and
arpl
mov
sub
xchg
xor
lahf
out
mov
js
push
in
out
sub
mov
and
xor
or
mov
not
cmp
bound
pop
mov
js
lock
arpl
mov
bound
test
mov
aad
inc
and
pusha
out
ja
int3
and
inc
and
adc
in
jb
fiadds
adc
lea
add
adc
sub
xorl
adc
loope
push
aad
shrb
fistpll
sbb
arpl
insl
pop
loope
fsubrl
sbb
cmp
jecxz
dec
inc
shll
icebp
test
test
dec
orl
cmp
mov
setne
add
pop
sarl
pop
mov
push
sbbl
sbb
cwtl
push
and
adcl
ficoms
loop
add
fistps
add
imul
sbb
mov
mov
andb
add
pop
inc
cwtl
addr16
sbb
push
jmp
cmp
data16
pop
cmp
mov
mov
insb
pusha
fwait
jg
fwait
xchg
jg
or
mov
cld
aas
and
loopne
outsl
outsb
mov
pushf
arpl
and
popa
add
fdivr
dec
lds
fisubrl
les
cmp
fisubl
adc
mov
mov
adc
in
pop
fs
fsubl
arpl
inc
push
or
out
ljmp
inc
jae
scas
push
and
inc
add
imul
fs
ficompl
jae
scas
push
je
out
mov
loope
inc
mov
push
aam
sbb
adc
cmp
addr16
push
inc
mov
push
jnp
fsubl
mov
and
mov
outsl
out
fstpt
lods
mov
addr16
jecxz
shr
xor
adc
inc
sahf
loope
or
rcrb
push
cmp
leave
or
mov
fdivl
hlt
clc
mov
out
push
xor
push
jmp
adc
fcmovne
dec
stos
xor
jne
dec
enter
and
mov
cld
xchg
icebp
push
jb
sub
sbb
lret
jnp
pop
ret
adc
outsb
gs
jae
es
xor
mov
movsb
add
jle
push
sbb
repnz
insb
fnstenv
movsl
in
pop
in
push
movsl
call
jp
adc
xchg
adcb
mov
cmp
icebp
in
jae
cmc
stos
xchg
pop
std
test
sti
or
mov
scas
gs
ja
xor
mov
inc
mov
cmp
fbld
xor
idivl
mov
scas
dec
lods
mov
rep
lahf
jae
jge
or
mov
inc
movsl
hlt
adc
into
cmp
data16
out
pushf
dec
push
cmp
mov
cld
inc
sahf
bound
and
jne
or
mov
aas
arpl
or
pusha
leave
scas
jo
inc
into
inc
bound
or
scas
mov
and
loopne
arpl
cmp
and
xor
mov
or
xor
test
inc
sbb
pop
subl
aam
xorb
or
addl
xor
add
xchg
ljmp
sbb
xor
andl
shlb
imul
and
jle
pop
xor
popa
imull
mull
cmp
dec
mov
inc
jle
adc
cmp
popa
leave
jno
andl
les
ror
sar
inc
in
xchg
lea
mov
add
add
hlt
popa
movsl
movsb
push
mov
insb
icebp
jno
fcompl
xchg
sbb
adc
imul
jnp
and
in
insb
xchg
push
leave
sbb
fstl
xor
cmc
addr16
andl
sarl
and
into
and
popf
fisubs
ficompl
pop
xchg
or
cwtl
out
sub
scas
push
mov
rorl
dec
or
adc
pop
lcall
pop
je
inc
fcmovu
adcl
mov
and
shll
jecxz
inc
fs
in
sub
lock
cmp
rcrb
mov
add
in
xchg
pusha
fisttpl
popa
inc
fnstsw
sbb
and
jae
inc
mov
js
jp
pop
jno
xor
sahf
mov
rclb
pop
mov
xor
dec
std
into
push
lret
hlt
dec
aam
pop
adc
mov
mov
jmp
popf
mov
loopne
adc
add
lods
je
nop
fcom
xchg
test
mov
mov
adc
mov
xor
mov
jae
mov
popf
bound
out
pop
and
add
loopne
pop
or
mov
xchg
inc
inc
sub
addb
in
and
mov
add
push
mov
dec
add
pop
cmc
test
xchg
sbb
and
add
push
mov
sub
push
jmp
pop
icebp
sub
cwtl
dec
jp
add
xchg
pop
jno
nop
stc
xor
pop
sbb
flds
js
shl
inc
sub
movsb
pop
ljmp
into
jb
xor
bound
out
push
fsubl
jne
adc
xchg
dec
cmp
mov
pop
mov
testb
pop
xchg
movsl
lea
xchg
and
adc
mov
fbld
mov
and
int
adc
xchg
cmp
clc
pop
pop
out
sahf
nop
push
push
std
jne
and
and
xchg
pop
popf
xor
push
shlb
int3
mov
sbb
je
jns
mov
scas
and
in
push
lods
lock
jmp
pusha
popf
fucom
inc
adc
stos
and
xor
and
xor
cltd
jecxz
xlat
in
popa
leave
outsl
arpl
push
sbb
in
push
ss
inc
arpl
xchg
pop
roll
scas
sub
mov
sbb
stos
mov
movsb
repnz
sub
xchg
lcall
popa
adc
fucomi
xor
aas
pop
mov
fs
mov
cmp
fnstenv
cmpsb
mov
pop
push
aam
dec
sub
lds
jecxz
and
mov
pusha
mov
push
mov
push
jno
leave
inc
jecxz
iret
cmc
adc
subl
aam
mov
adc
cmp
cmp
mov
mov
jecxz
loop
aam
and
sub
push
cmp
imul
das
repnz
adc
loope
popa
outsl
pop
out
add
jle
arpl
shrl
out
xor
xor
aad
xchg
adc
test
xor
scas
jae
test
and
incl
jo
push
shrb
xchg
and
loop
push
xchg
orl
or
jecxz
in
and
or
pop
lock
sbb
mov
jbe
les
imul
dec
lea
in
out
jl
mov
and
xchg
fmull
add
cmp
bnd
xchg
mov
and
popa
in
add
js
lret
sbbl
loope
outsb
and
or
es
mov
iret
inc
and
and
scas
sub
in
outsb
icebp
mov
sub
inc
cltd
out
movsb
es
mov
jmp
push
pop
jne
jecxz
test
ficomps
and
and
hlt
sbb
loop
and
ja
repnz
inc
test
ljmp
fcoms
adc
mov
mov
adc
xchg
adc
push
fisttpll
add
inc
mov
or
test
pop
pop
mov
leave
cmc
mov
repz
pop
mov
sahf
in
aas
jg
adc
mov
ja
mov
pop
or
xor
loopne
ljmp
jae
push
jmp
jmp
inc
popa
arpl
adc
adc
jecxz
jecxz
fistl
mov
mov
dec
push
push
push
repz
sbb
mov
gs
jno
lcall
js
mov
push
pop
pop
mov
popa
sbb
aad
and
add
insl
jle
sbb
xorl
jbe
inc
je
mov
and
imul
xchg
mov
fsub
imul
hlt
imul
fxtract
les
pop
pop
dec
sbb
enter
xor
sub
orl
mov
xor
jne
loop
pop
inc
dec
fwait
mov
push
mov
fwait
mov
movsb
mov
sbb
loopne
mov
leave
inc
fs
pop
xchg
mov
pop
pop
nop
sbb
shl
inc
dec
sti
pop
jge
je
jl
xchg
dec
hlt
movsl
lea
and
popa
mov
xchg
pop
sahf
jae
nop
sub
out
mov
xchg
imul
xor
pushf
jne
mov
mov
test
leave
inc
pop
in
jns
push
or
mov
xchg
inc
mov
jmp
stc
sbb
scas
add
mov
adc
faddl
es
sub
imul
lods
pop
hlt
jb
mov
cli
enter
cmp
popf
adc
lods
jge
movsb
loop
mov
clc
arpl
es
push
mov
notl
and
addb
inc
fldcw
mov
shll
jl
enter
mov
xorb
lea
push
sub
lds
pusha
sbb
nop
and
shll
add
adc
push
mov
ret
mov
or
mov
adc
les
aaa
andb
jae
mov
decl
popf
lods
cmp
mov
jmp
mov
cmc
mov
cld
in
test
mov
loope
push
sti
fcoml
pushf
mov
fdivl
mov
dec
pop
hlt
and
pop
arpl
sbb
xor
arpl
or
mov
sub
outsl
mov
jge
mov
mov
inc
mov
push
into
popa
lahf
and
dec
push
sbb
daa
or
and
and
dec
sub
dec
jl
pop
in
xorl
mov
fs
pushf
sbbl
iret
test
repz
iret
adcl
inc
js
test
outsb
gs
jno
aaa
push
out
add
dec
sub
jae
jne
mov
add
fsubl
leave
jno
adc
sub
stc
or
and
daa
fyl2x
adc
jg
mov
loop
pop
jae
scas
push
ds
and
mov
and
xchg
mov
sbb
mov
popf
js
aam
jae
dec
sbb
sbbl
mov
dec
mov
pop
std
shll
mov
fidivs
cmp
daa
mov
ds
and
jecxz
sarl
pop
loope
mov
cmc
mov
sub
jbe
and
jmp
dec
insb
shll
mov
popl
xchg
stos
sbb
movsl
clc
loop
daa
and
int3
mov
insb
popa
rcl
cmp
jae
scas
push
popa
push
and
cwtl
leave
jno
mov
pop
fidivl
cltd
inc
mov
sbb
shlb
mov
loopne
sahf
push
pop
rorb
cltd
pusha
inc
mov
xchg
adc
jae
dec
sbb
imul
cmp
rorb
inc
mov
jno
std
or
cli
je
dec
out
mov
pop
and
loope
dec
addr16
pushf
mov
sub
mov
jl
idivb
cmpsl
arpl
dec
pop
xor
movsb
mov
outsb
pop
adc
jl
dec
sbb
out
mov
mov
jae
call
xor
fldcw
fwait
mov
jne
test
cmp
adc
or
popf
push
cmp
idivl
gs
test
out
adc
pop
popf
add
pop
add
push
test
dec
ret
addb
arpl
cmpl
sub
aaa
jb
dec
xchg
icebp
movsb
mov
jp
mov
push
loop
out
cltd
mov
xchg
sub
aas
sub
mov
and
and
inc
push
shr
adc
pop
lock
outsl
je
imul
push
aaa
and
xor
push
and
pop
in
shll
in
xchg
mov
sbb
lds
filds
bound
in
mov
loope
stc
inc
pusha
jle
adc
add
mov
add
cmp
loop
fcompl
mov
mov
sarb
out
mov
sbb
push
mov
jge
out
and
rcll
movsb
loope
and
pop
fdivl
sub
sub
xchg
rep
insl
pop
outsb
fs
stos
in
xchg
imul
lods
jnp
cld
pop
pop
cltd
sub
jae
scas
sub
popa
movsb
and
popa
leave
jno
sti
and
add
ret
std
movsl
int3
je
dec
out
sbb
sbb
fbstp
add
and
es
lds
jnp
test
mov
xchg
cwtl
and
cs
bound
push
test
and
sbb
xor
and
jmp
adc
popa
jno
push
out
testl
sub
mov
aaa
insl
daa
lret
xor
rclb
out
cmc
in
push
ficomps
cmpb
insb
cmpsl
lcall
pop
clc
sub
and
inc
lds
add
shlb
jp
adc
orb
aam
mov
mov
lds
daa
or
xchg
adc
addr16
rcrl
fwait
sti
push
rcrl
or
movsb
movsb
loop
loope
xor
sahf
jo
jae
xchg
pop
and
sub
and
add
popf
bound
and
sub
adc
pop
fstps
push
popa
push
push
push
fiaddl
icebp
cli
xchg
pop
mov
mov
push
popf
cs
arpl
push
adc
imul
inc
lahf
sbbl
xchg
adc
xchg
inc
repz
mov
jns
das
dec
fists
mov
jb
xchg
rcr
xchg
shlb
pushf
adc
imul
jge
xor
mov
cld
inc
adc
add
push
fldenv
cmpsl
jae
sub
cmp
je
push
in
jno
sub
mov
stos
xchg
out
lock
mov
js
mov
and
adc
shr
ret
cmp
push
mov
shlb
inc
rorl
jae
fwait
push
cmp
adc
fisttps
std
sarl
hlt
andb
add
mov
adc
xchg
je
jg
loope
dec
stos
loop
xor
repz
inc
stos
push
call
and
outsl
jg
inc
mov
sbb
loopne
and
inc
int
sti
rcr
add
mov
into
inc
inc
sbb
jo
lret
jle
insb
pop
dec
out
loop
adc
sbbl
mov
mov
adc
jecxz
aas
or
loope
add
icebp
jg
cmp
xor
pop
push
pop
out
or
add
mov
cmc
add
push
or
push
xchg
and
mov
leave
mov
cltd
lcall
clc
fmuls
push
fs
cmp
cmp
sbb
xor
mull
js
jb
adc
je
jl
add
adc
mov
adc
sahf
xchg
nop
sbb
sub
test
in
cld
cld
xchg
xchg
cmp
jns
sbb
push
jge
pop
cmp
movsb
aaa
outsl
mov
mov
pop
jge
pop
adc
popa
sbb
mov
mov
call
mov
fnstenv
pop
outsl
popa
arpl
pop
std
out
insb
xchg
xchg
out
jbe
jge
call
ja,pt
clc
pop
pop
and
push
arpl
add
inc
fldenv
mov
std
mov
cli
negl
lret
add
mov
pusha
inc
faddl
jle
cmpb
clc
xchg
mov
sub
mov
out
jbe
clc
push
call
dec
pop
mov
hlt
pop
push
mov
insb
sbb
xor
clc
pop
jno
ljmp
mov
inc
loop
mov
push
and
and
sbb
aad
lcall
daa
xor
cmp
and
int
aaa
adc
xor
mov
jno
divl
sub
daa
sbb
and
and
rcl
xor
leave
adc
sbb
push
test
mov
fwait
pusha
inc
mov
mov
fdivl
out
jno
pop
inc
and
loopne
jno
imul
adc
add
out
xchg
mov
arpl
mov
test
daa
mov
xor
repnz
out
mov
cld
mov
movsl
sbb
cwtl
inc
jbe
push
jecxz
adc
movsb
pop
ret
and
imul
mov
add
jle
mov
cltd
cwtl
aaa
cmp
es
mov
push
inc
jl
sub
xor
mov
dec
and
daa
lcall
in
jo
js
aaa
mov
pop
jb
sub
insl
mov
cmp
movsb
jbe
mov
add
sarb
lea
pop
movsb
push
rcrb
pushf
push
pop
and
push
add
into
add
and
jmp
inc
fisubrs
mov
jns
mov
not
andl
insb
sbb
fs
sub
add
mov
fwait
or
or
mov
and
arpl
lds
test
ljmp
insb
loop
insb
repz
adc
dec
pop
sbb
xor
mov
loop
mov
cli
test
mov
subb
cmp
sub
sub
lods
xrelease
xor
sahf
fld1
xchg
test
test
into
and
and
arpl
adc
mov
mov
and
mov
arpl
push
rcrl
scas
sub
imul
mov
shld
popa
fiadds
das
inc
pop
addr16
mov
scas
push
pop
iret
ja
mov
xor
popf
scas
xor
xchg
icebp
daa
or
popf
mov
into
sbb
jne
mov
hlt
inc
in
push
int3
adc
cmpl
xchg
les
cmp
jb
sbb
fwait
cld
clc
loope
xchg
add
mov
pop
and
fs
cmp
jae
lock
scas
cmp
dec
aam
xor
cld
mov
xor
repz
in
lret
dec
lcall
and
pop
dec
cli
out
xchg
outsl
arpl
mov
sbb
xchg
fisttps
pop
out
icebp
add
andl
mov
jo
mov
pop
xorl
pop
outsb
mov
mov
aam
sbb
sbb
push
mov
ja
mov
xchg
and
push
lret
jae
out
or
movsb
pop
xor
stc
cwtl
shl
and
mov
jne
dec
mulb
insl
cmc
insl
jne
stos
popf
cmp
fs
adc
mov
add
jecxz
lods
mov
outsb
and
notb
mov
mov
add
in
pop
push
sbb
shlb
xchg
fsubl
fcompl
inc
ret
push
hlt
sbb
loop
pushf
jno
xchg
cmp
pop
push
je
shll
add
and
mov
test
cmp
loope
pushf
and
loope
inc
icebp
xchg
rcrl
repnz
ja
xchg
xchg
and
mov
movd
jae
call
sbb
sbb
add
mov
popa
and
jmp
bound
xchg
fcompl
in
lahf
and
in
pop
adc
fmul
jno
outsl
arpl
loope
cltd
cld
push
dec
xchg
ficoms
shrd
sbb
adc
jge
imul
cmpsl
jae
scas
push
fs
aas
test
repnz
xor
loope
push
jmp
insb
mov
arpl
pop
nop
mov
clc
loope
xor
icebp
movsb
sbb
out
jmp
sbb
fmuls
rcr
add
lret
mov
fsubl
sahf
mov
and
mov
xor
inc
pop
xchg
fdivp
dec
loop
jecxz
pushf
mov
test
in
aam
daa
aas
movsb
mov
mov
ja
mov
out
call
inc
popa
mov
das
push
push
aad
xchg
test
imul
jne
xchg
xor
cld
imul
fwait
loopne
repz
sahf
sbb
and
imul
test
mov
adc
xchg
test
arpl
lret
xchg
mov
pop
iret
mov
stos
movsb
outsl
in
and
daa
xchg
xchg
scas
inc
or
daa
add
daa
mov
sbb
icebp
in
scas
in
inc
mov
xchg
in
idivl
dec
fwait
std
lcall
dec
lcall
or
pop
sub
les
adc
repnz
push
arpl
dec
call
push
or
sub
mov
mov
jmp
sub
xchg
xor
lea
cltd
fimull
push
xor
jmp
jae
mov
cmc
sub
jae
sbb
cs
js
or
xor
cmp
clc
sbb
popa
mov
xchg
iret
loope
push
and
dec
sbb
inc
and
push
mov
clc
gs
inc
inc
fisubl
imul
and
inc
xchg
data16
push
fwait
lcall
jecxz
aam
andl
push
cld
lahf
xchg
fs
sahf
test
mov
inc
iret
and
sub
cmc
xchg
pusha
fcoml
mov
fisubs
repz
movsl
gs
jecxz
add
out
or
hlt
gs
xcrypt-ctr
cmpsl
pop
ljmp
jg
call
gs
jae
mov
jl
xchg
gs
or
jecxz
outsb
into
iret
fidivrl
jb
cltd
mov
xlat
xchg
and
cmp
rorl
cmc
push
jmp
push
gs
jbe
jnp
xlat
cmp
inc
mov
cltd
shll
push
sub
xchg
pop
stos
das
mov
mov
pop
stos
adc
jno
mov
out
mov
add
ljmp
jae
push
gs
xchg
test
es
mov
pop
mov
adcl
adc
add
cmp
into
add
mov
jmp
inc
mov
pushf
call
inc
inc
sub
sbb
and
or
stos
das
sub
gs
xlat
inc
jge
xor
popf
loope
add
test
and
or
xchg
cmp
outsb
les
jb
aas
gs
fiaddl
jecxz
cmc
push
or
and
jns
push
sub
gs
or
fldenv
add
mov
inc
lcall
pushf
xchg
inc
in
stc
jae
repnz
mov
xchg
sub
mov
push
xor
gs
sbb
lret
xlat
gs
decl
cmp
xchg
gs
sub
mov
rclb
or
inc
das
adc
pop
or
dec
cmpsb
aam
sbb
in
int
xor
and
push
xchg
test
decb
cmp
jge
cltd
ja
jge
push
xchg
mov
daa
insl
push
movups
scas
int
in
neg
addr16
mov
ljmp
ss
pop
test
xlat
gs
sub
mov
pop
dec
and
dec
inc
adc
notl
sbb
mov
add
ret
je
cmp
shll
push
pop
gs
shrb
mov
push
out
cld
sub
cmp
inc
aas
mov
gs
icebp
push
out
jmp
add
push
shrl
gs
mov
push
in
pop
ror
dec
cmp
lcall
rcll
mov
gs
push
ds
fwait
lods
mov
dec
popa
lcall
shrl
push
mov
mov
pop
jns
jo
sub
gs
cmp
dec
mov
push
jecxz
cmp
mov
call
pop
movsl
aam
xor
xchg
push
ja
jmp
ret
add
add
xchg
and
sbb
fwait
sbb
cltd
rorb
jno
jmp
in
imul
arpl
dec
and
and
pop
or
ret
mov
and
cmp
popf
outsl
arpl
pop
dec
je
xchg
data16
sbb
xchg
xchg
ja
xchg
movsb
add
int
pop
pop
jle
out
dec
push
cmp
cmp
lcall
movsb
pushf
or
pusha
scas
add
addr16
fs
and
daa
dec
orl
adc
mov
xlat
arpl
popa
into
push
popa
pop
mov
das
pop
add
sbb
mov
or
imul
bound
fs
and
mov
push
fsts
pop
or
dec
xorb
es
in
fwait
sub
daa
lods
push
xor
bound
lcall
sub
jno
xchg
and
aad
xchg
pop
adc
icebp
jp
rcr
mov
mov
xchg
mov
call
mov
xor
mov
shll
addr16
pop
insb
jae
and
xchg
movsl
arpl
push
mov
hlt
xchg
imul
mov
inc
in
jecxz
add
je
ret
jae
call
lea
ret
jno
mov
cs
arpl
and
mov
aam
in
xchg
movsb
jl
inc
jbe
mov
adc
repnz
mov
scas
enter
imul
dec
inc
push
mov
sub
mov
stos
sarl
mov
bound
movsb
test
xchg
fcomps
pushf
xlat
rclb
sbb
popf
pop
push
xlat
test
pop
popa
imulb
sub
mov
cmp
shl
mov
jns
cld
jecxz
movsl
mov
inc
push
popa
jecxz
addr16
test
xchg
test
jae
push
mov
or
cmpl
mov
mov
test
movsb
mov
rcl
mov
sub
lds
dec
push
andb
enter
and
fdivs
push
xorl
scas
sbb
idivl
cmp
jbe
fnstenvs
imul
insb
flds
pop
sbb
mov
int
sbb
or
jae
rorl
pop
pop
xlat
sbbl
js
int3
ja
outsb
fisttpl
loopne
fldenv
adc
lods
jnp
push
ret
pop
inc
or
addr16
inc
mov
fsubrl
les
rol
xchg
push
lods
mov
xchg
pop
leave
jno
xlat
xorl
test
xchg
add
sahf
mov
ret
xchg
pusha
leave
jno
jne
sbb
xchg
sub
add
inc
and
pop
mov
adc
scas
push
push
inc
es
cld
and
es
pop
andl
and
or
rcr
scas
mov
out
mov
fdivl
out
enter
dec
cltd
hlt
pop
sub
dec
xchg
cmpsb
inc
in
pop
mov
pusha
aam
andl
pop
stc
and
mov
adc
mov
push
fcoml
inc
xchg
movsl
fcoml
mov
shlb
and
mov
test
adc
arpl
jmp
std
shll
in
in
mov
mov
mov
inc
mov
mov
fmull
xor
xorl
and
mov
popa
out
inc
and
sub
jae
and
rcl
pop
arpl
arpl
adc
inc
sub
frstor
lcall
pop
and
rcrl
fs
arpl
movsb
sbb
call
pop
adcl
adc
or
mov
inc
jo
mov
shrb
shlb
fsubs
lds
popf
fs
lods
jmp
sbb
fcmovnu
fs
sti
movsl
enter
dec
fsubl
fs
push
mov
movsb
rcl
mov
or
in
insl
aaa
imul
lds
ja
outsb
push
ffreep
mov
sbb
mov
mov
mov
adc
fwait
lds
scas
in
adc
andl
mov
xor
subps
jae
test
jp
in
pushf
cmp
and
fdivrl
lds
insb
cld
fs
sbb
lds
stc
dec
pop
dec
aaa
or
sub
cmp
enter
mov
loope
jl
mov
xchg
mov
mov
jae
push
loope
repnz
mov
fwait
and
je
sbb
dec
inc
insb
fmull
sbb
aam
stos
adcl
push
xchg
mov
and
push
sub
xlat
fwait
popa
ret
je
sbb
pop
mov
call
loop
loop
xor
cwtl
push
bound
fcompl
aam
in
loopne
jmp
fmul
xor
enter
mov
lods
jge
imul
loop
and
test
inc
fs
roll
xchg
lahf
mov
shll
imul
test
fs
jno
data16
rcrb
js
sub
pusha
pusha
xchg
lock
mov
cmp
loopne
xchg
insb
lahf
ret
lahf
roll
sbb
cmpsl
push
cmp
and
and
fistpl
xor
mov
rolb
fiadds
sbb
jns
add
dec
pushf
arpl
mov
loopne
push
mov
and
sbb
inc
mov
jns
vphaddwq
std
insb
mov
std
pushf
and
mov
and
imul
fiadds
pop
mov
and
in
aam
sbbl
and
mov
out
sbb
and
popa
push
xchg
adc
mov
fmulp
dec
testb
mov
movsb
fisubs
pop
and
inc
bound
push
outsb
cmpsb
pop
rcr
loopne
adc
sub
jp
sbb
xor
mov
aam
jl
movl
fisttpll
mov
xchg
mov
cmpsb
and
inc
outsb
or
test
xor
adc
cld
push
pop
ja
and
pop
mov
lret
inc
xchg
cltd
iret
or
inc
or
mov
fs
mov
cmp
test
fcomps
ret
xor
cmpsl
push
dec
or
cld
pop
pop
dec
test
jg
adc
aad
or
in
in
mov
loopne
aam
stc
stos
clc
icebp
pop
imul
cwtl
sarb
pop
mov
sbb
cmp
stos
mov
add
pusha
mov
cmpsb
test
mov
adc
data16
mulb
jns
call
fwait
insl
inc
lods
push
test
and
test
movsb
dec
popf
or
sbb
test
and
dec
jge
lds
and
dec
inc
pop
xchg
and
inc
xchg
push
xchg
imul
stos
jae
mov
xor
out
mov
mov
out
aam
jb
out
sahf
je
in
jno
mov
out
push
fldt
xchg
loop
pop
sbb
loop
stos
adc
xchg
jb
push
ret
gs
lock
inc
aam
gs
sbb
sti
jl
or
gs
test
ja
imulb
cmp
int
arpl
push
gs
mov
arpl
mov
movsl
outsl
loop
pop
pop
xchg
ss
dec
loop
dec
or
dec
and
mov
pushf
sbb
push
scas
jb
push
or
mov
gs
dec
int3
mov
dec
dec
pop
mov
mov
adc
mov
daa
aam
and
and
xchg
jle
push
xchg
popa
and
hlt
jmp
movzbl
jg
or
fdivrp
mov
pushf
sbb
scas
outsb
ficoms
mov
ret
dec
pop
movsb
cltd
aas
jl
jno
mov
leave
or
dec
popf
xchg
mov
mov
inc
rcrb
dec
or
cmpsb
test
cltd
pop
in
push
sub
fcomps
sar
jb
jge
jl
inc
mov
mov
or
jg
addr16
in
jl
push
jae
aam
mov
sub
xor
dec
sbb
mov
pop
movsl
sub
insb
lahf
jo
aam
push
icebp
jmp
dec
nop
test
scas
insl
test
movsb
icebp
and
ds
push
cmp
adc
and
test
cli
dec
mov
mov
mov
mov
mov
xchg
shrl
and
mov
xor
mov
mov
pop
fs
mov
xchg
pop
and
push
push
dec
loopne
sbb
inc
sbb
mov
fcompl
fcomps
aam
pop
add
imul
les
gs
rclb
gs
fcomip
push
in
dec
call
mov
lods
test
fistpl
cmpb
je
insb
push
xor
ud2
pop
gs
sti
div
out
jmp
xlat
ror
lret
mov
mov
stos
cmpsl
popa
shrl
push
and
push
pop
cltd
les
and
sbb
fs
pop
mov
shll
or
arpl
add
or
and
xchg
jecxz
pop
hlt
nop
lock
mov
and
mov
push
xlat
add
fcmovnb
insb
movsl
mov
push
jle
dec
aaa
repz
lock
rcl
aas
mov
lea
cmpsl
loope
cld
outsl
adcl
gs
mov
frstor
aad
cmp
mov
in
aaa
push
icebp
mov
repz
adc
push
pop
mov
lret
adc
rcll
pop
or
stos
push
scas
xor
sub
lahf
addr16
rorl
gs
mov
pop
in
fdivrs
popa
shrl
mov
das
fbld
aaa
fdivr
push
jmp
xchg
scas
ja
daa
ret
inc
sti
jbe
stos
lahf
cmpsl
inc
push
gs
shrl
cmp
aaa
out
gs
out
out
gs
decl
gs
push
daa
and
inc
fstpt
jb
xor
ds
gs
add
fadds
mov
gs
out
in
jmp
mov
push
vcmpss
cmpsb
xor
mul
repz
rcr
lea
out
push
data16
call
lret
pop
sub
dec
and
cmp
insb
push
aad
sti
push
out
ret
sub
and
cmc
pop
sub
xchg
hlt
aad
gs
inc
cmp
fs
or
push
xchg
imul
in
lods
ret
cmpsl
mov
mov
mov
xlat
testb
stos
gs
sti
inc
sar
ret
gs
in
mov
cs
divl
gs
cmpsl
insb
inc
mov
xor
add
or
clc
adc
sub
gs
push
out
mov
jmp
mov
ror
cli
push
insb
or
rclb
in
dec
mov
movsbl
lcall
adc
cwtl
sbb
sbb
add
stc
loop
fs
mov
mulb
mov
inc
mov
in
xchg
ljmp
clc
pushf
fnstsw
sbb
shr
jecxz
add
mov
out
fwait
test
jg
mov
xchg
xchg
repnz
ss
jp
jmp
jecxz
push
add
mov
in
nop
jmp
pusha
adc
movsb
fcomp
popf
lods
out
sub
scas
out
pop
fstl
cmc
imul
clc
add
jecxz
rclb
mov
push
outsb
divb
fdivs
shlb
inc
mov
sbb
out
sub
pop
adc
adc
bound
fwait
imul
xor
xchg
inc
push
fistpl
gs
mov
scas
add
test
cmp
xchg
inc
ret
leave
mov
mov
and
fnstcw
aaa
stc
gs
ja
push
std
add
and
sbb
jp
pushf
inc
cmp
pop
test
pop
stc
lret
jmp
jge
scas
or
lods
gs
xchg
pop
std
stos
dec
mov
mov
mov
adc
out
leave
imul
data16
out
dec
repnz
and
dec
and
add
sbb
adc
jl
mov
adc
test
gs
pop
outsl
mov
mov
dec
add
cmp
xchg
je
adc
in
adc
dec
xor
ja
inc
sbb
aas
jg
pop
sub
gs
adc
out
xchg
mov
gs
inc
out
lcall
push
lods
jae
cld
mov
shl
ja
gs
mov
dec
mov
xchg
out
mov
bound
gs
mov
xorb
xor
repz
dec
cwtl
idivl
mov
push
bndstx
fildll
push
clc
mov
cmp
enter
mov
cli
push
shll
xor
adc
adcl
movsb
gs
inc
lds
test
dec
mov
gs
hlt
imul
loopne
or
mov
pop
or
mov
in
daa
lret
and
jp,pn
test
mov
sbb
mov
inc
aad
icebp
iret
pop
inc
or
outsb
stos
and
sbb
cmpsb
push
or
cmpsl
cli
pcmpgtw
pop
out
xchg
add
and
sbb
in
out
jp
shlb
pop
mov
stc
sahf
add
cmp
gs
in
or
outsl
jb
xor
xchg
cmp
and
xchg
sub
xor
ljmp
push
gs
push
cmp
pop
jb
inc
bound
out
enter
imul
push
jl
pop
push
push
and
or
or
jecxz
cmp
cmc
int
jno
test
rcrb
sahf
jae
ja
addr16
sbb
popf
gs
xchg
mov
adc
cli
cmpsl
nopl
mov
dec
jo
sbb
lret
xchg
insb
jl
or
xor
xchg
xchg
repz
jecxz
test
andb
ja
mov
mov
test
xchg
loope
daa
test
adc
push
gs
orb
xor
xchg
and
mov
gs
fldt
jecxz
sub
xchg
loopne
lds
lods
lret
xchg
insl
div
shr
and
mov
test
add
int3
pushf
xchg
xorb
xor
das
cmp
jp
aas
xchg
hlt
mov
in
icebp
mov
ret
in
mov
pusha
jp
outsb
push
fs
insl
mov
imul
scas
sar
aad
jbe
jge
cli
adc
gs
fs
gs
mov
fmuls
insb
adc
loopne
jne
cmc
repz
in
in
gs
dec
pop
adc
add
add
cmpsb
cmpsl
mov
xor
jmp
xor
outsb
xchg
jno
or
ljmp
push
inc
dec
mov
mov
repnz
or
jne
in
lea
dec
dec
dec
test
stos
dec
mov
push
gs
adc
cmp
or
jo
es
inc
lret
mov
mov
cld
jb
frstor
push
mov
pop
gs
lea
imul
inc
sub
jg
out
xchg
xchg
mov
mov
aad
jmp
es
out
mov
jno
xor
into
les
jmp
sbb
stos
ss
insb
sub
inc
sti
cwtl
push
shlb
mov
les
sbb
gs
dec
xchg
mov
push
jecxz
cmpsb
pop
std
decl
in
jge
pop
loopne
jnp
ficoml
xor
loope
and
cmp
iret
jne
jge
rcll
ss
imull
ficompl
es
imul
jns
pop
call
sbb
repz
es
mov
mov
insl
xchg
gs
ds
or
pop
jo
mov
ret
jno
hlt
mov
inc
ror
stos
jecxz
lock
jecxz
imul
jg
mov
gs
mov
gs
push
fsincos
cmp
mov
gs
cmp
mov
dec
in
cmpsb
inc
shll
push
jns
mov
stc
js
push
outsl
loope
cmp
repnz
test
sbb
push
gs
js
mov
gs
cs
cmp
inc
fsubs
test
adc
mov
imul
cmpsb
gs
popf
dec
mov
pop
shll
ss
jbe
dec
mov
mov
jns
pop
ja
jecxz
inc
add
sub
aas
es
push
mov
int
jmp
push
popf
fs
push
dec
and
sbb
stc
test
dec
in
data16
jecxz
add
sahf
shrl
pop
mov
sub
pop
or
cmp
xor
lds
push
shr
pop
sahf
fistpll
sub
mov
adc
aaa
into
pop
outsl
jmp
jmp
leave
or
or
xor
dec
aad
mov
jle
jb
movsb
push
pop
jno
fwait
loop
ficomps
cmp
jmp
or
das
rorb
addb
shlb
test
push
and
xor
and
mov
sub
gs
inc
mov
ret
push
gs
insl
out
gs
push
cmp
lock
gs
test
pop
dec
push
sahf
jge
lock
repz
mov
bound
repnz
fwait
inc
test
outsb
outsb
mov
out
lods
out
gs
jp
sub
mov
cmp
push
pusha
mov
repnz
jne
imul
testl
fcmovu
xchg
shl
mov
enter
add
mov
call
jge
dec
adc
arpl
and
int
push
mov
insl
fimuls
ds
daa
imul
pop
push
mov
jg
mov
out
sbb
fnstsw
cmp
fimuls
cmp
out
imul
mov
aad
dec
div
arpl
idivb
fisubrs
gs
addr16
inc
ja
pop
rclb
mov
mov
enter
mov
push
mov
testl
mov
add
cmpsl
sub
out
jp
leave
mov
jne
xor
gs
dec
cltd
mov
push
adc
mov
mov
sar
in
das
test
in
xchg
mov
lcall
xlat
gs
out
and
xchg
ds
leave
jns
push
adc
pop
or
or
xchg
mov
mov
out
jg
gs
jmp
leave
fstl
scas
scas
imul
mov
mov
sbb
mov
frstor
lods
xor
subl
xor
mov
add
mov
xor
test
dec
fistpl
lret
adc
and
ret
xor
les
push
aas
aad
out
jne
outsb
sub
stos
orb
je
jae
xchg
or
arpl
mov
push
jg
mov
ds
mov
and
int
gs
out
dec
shlb
gs
cmp
aaa
xchg
daa
cmp
mov
pop
push
ja
gs
es
mov
in
daa
out
jo
lahf
gs
rorl
dec
insl
mov
pop
sub
or
sti
mov
gs
lock
push
or
notb
xlat
out
mov
jp
lahf
outsb
in
in
jle
arpl
cmp
imul
cltd
sub
hlt
mov
lds
dec
or
cmp
xchg
xchg
sbb
mov
ljmp
outsb
xlat
cmp
loope
xchg
in
mov
cmp
into
out
sahf
mov
pop
dec
sbb
pop
and
insl
cmpsb
xchg
jle
out
push
push
sub
data16
cmp
dec
jg
loope
mov
out
jne
loop
inc
dec
mov
mov
adc
test
cmp
lcall
std
scas
jnp
sar
xor
int3
cld
sahf
addb
fsubs
or
push
and
loop
jno,pt
xchg
gs
les
gs
or
inc
lds
cmp
cltd
or
aaa
xor
add
sahf
mov
data16
adc
mov
shlb
test
or
cmp
movsb
mov
enter
push
popf
jnp
addr16
shll
or
push
repnz
pop
js
ljmp
sahf
dec
mov
subl
xlat
jmp
scas
das
add
jne
and
or
loope
push
dec
adc
or
gs
jmp
fwait
gs
sbb
dec
pushf
xor
push
mov
push
cwtl
add
int
dec
fisttpll
movsb
in
ficoms
es
in
push
enter
cmp
loopne
inc
inc
gs
push
mov
xchg
mov
cmpsl
adc
les
imul
aad
or
loop
mov
cmc
stc
insb
pop
int
and
dec
popf
push
popf
in
ja
mov
nop
jns
scas
push
gs
add
fstp
xor
xor
sub
gs
clc
scas
loop
sbb
gs
pop
dec
cmpsl
mov
out
dec
jp
jl
mov
lods
mov
gs
clc
adc
stos
fwait
fs
cmp
mov
cwtl
jb
push
in
xor
sub
insl
push
push
repnz
xor
sar
pop
xor
iret
mov
dec
mov
adc
sti
scas
ljmp
push
in
fwait
lret
arpl
imul
popf
inc
pop
jge
shll
leave
or
gs
jbe
out
fidivl
add
add
aaa
cmp
and
xor
mov
stos
jno
jp
sahf
fcmovnbe
mov
data16
inc
jo
mov
and
pusha
idiv
xchg
lahf
repnz
stos
add
jns
loop
mov
adc
add
jb
ss
int
aas
gs
outsl
pop
lcall
rol
sub
mov
loop
mov
daa
test
shll
data16
imul
push
fistpll
jb
rorl
clc
lret
xor
in
stos
gs
ss
jo
rcrb
pushf
jecxz
push
pop
and
push
ret
aam
leave
aas
movsl
lock
mov
cli
xchg
mov
pop
xor
out
push
lods
xchg
arpl
fidivs
and
cli
add
outsl
outsb
dec
cltd
cli
push
gs
mov
mov
lea
stos
pop
gs
xchg
mov
and
stos
addr16
xchg
cli
xchg
cltd
cmpsl
mov
mov
sub
fnstsw
hlt
in
sahf
push
je
or
dec
gs
in
fs
pop
jb
mov
negl
sub
fucomip
std
sbb
adc
lds
xor
dec
cmp
outsb
in
push
dec
mov
add
sti
repz
mov
mov
push
lcall
stos
leave
push
xchg
iret
adc
int
cmp
ljmp
jb
imull
add
gs
xor
jle
push
cmc
test
mov
test
xor
and
push
subl
fucomp
gs
in
mov
gs
push
and
call
sahf
sub
jne
loope
mov
sub
dec
push
inc
dec
push
inc
gs
sti
mov
gs
lahf
mov
outsl
fs
add
sub
hlt
lock
jg
jae
insl
jle
pusha
and
jne
inc
jge
je
adc
in
add
cs
mov
xor
out
mov
les
pop
or
sahf
leave
int3
gs
enter
dec
in
gs
div
push
std
mov
or
insl
addr16
lahf
enter
test
dec
inc
out
cmp
dec
scas
lcall
lds
mov
mov
cmp
and
loopne
xchg
mov
in
popf
gs
dec
fdivl
enter
mov
gs
adc
shl
xor
pop
cli
les
or
dec
jns
inc
pop
jns
push
sbb
mov
gs
lds
jnp
jne
mov
dec
aad
movb
gs
mov
fisubl
mov
ss
ja
add
jo
add
not
scas
lcall
xor
nop
out
out
call
adc
test
jnp
mov
test
adc
inc
cmp
and
and
dec
hlt
gs
jbe
in
imul
lahf
flds
shrl
add
daa
push
jg
aaa
pop
lods
sub
sbb
push
adc
gs
jo
lds
xor
out
or
fiadds
pop
les
decb
imul
mov
xor
mov
sbb
and
pop
cli
hlt
push
cmpsb
and
clc
in
mov
jb
lcall
sti
cld
dec
adc
shrl
sub
add
cmc
mov
nop
data16
dec
dec
es
sbb
mov
lret
lds
lret
aaa
cmp
aam
gs
mov
push
iret
and
scas
out
gs
inc
jge
add
ret
outsb
pop
lods
shll
jecxz
lds
gs
sbb
cmp
lods
rcr
and
xlat
pop
cmp
pop
loope
shlb
loop
ja
push
cld
fwait
rorl
jecxz
sbb
dec
jns
mov
inc
jne
iret
sub
cmpsl
aad
xor
enter
je
xchg
push
mov
jne
aaa
jne
std
xor
sub
pop
xchg
pop
rorb
loop
enter
stc
mov
notb
lods
mov
aas
data16
pop
loopne
mov
shll
out
test
gs
cmp
xor
dec
cmpl
add
out
sub
add
out
gs
push
vmwrite
outsb
fsubrs
mov
ljmp
lahf
cmpb
in
fnstcw
clc
in
xchg
jns
sbb
mov
fildl
cmp
mov
xchg
push
push
sub
lods
mov
gs
dec
pop
xchg
xchg
adc
mov
mov
mov
sub
das
cld
push
aas
add
jne
out
lock
lahf
and
and
jne
or
mov
ret
add
mov
cltd
mov
mul
gs
out
lcall
mov
in
pushw
fisttps
dec
push
divl
addr16
ljmp
mov
sbb
dec
sbb
gs
sub
mov
mov
lock
sbb
mov
xor
sarl
mov
mov
sub
enter
sub
incb
fs
gs
cmc
jecxz
gs
mov
ror
nop
sub
stos
insb
scas
lret
ss
jo
jge
fimuls
pop
scas
inc
push
or
jp
stos
es
dec
push
sub
lret
push
lahf
negb
xor
pop
dec
leave
scas
aad
jl
mov
or
in
cmp
std
or
popf
sbb
in
jp
lcall
adc
std
or
cmpb
adc
pop
push
je
gs
xchg
aad
or
scas
shrb
cs
or
xchg
int
inc
sahf
dec
jo
push
fidivs
mov
divb
mov
shrb
push
inc
frstor
xor
lahf
fsubl
push
divl
push
mov
push
push
es
jbe
push
add
xor
and
cmp
out
nop
mov
pushl
sub
jecxz
dec
jp
mov
jg
mov
inc
dec
test
fnstenv
push
sbb
xor
jp
imul
add
movsl
push
fstl
cmc
adc
aad
shlb
cld
push
lahf
loopne
push
pop
arpl
scas
test
pop
sbb
loope
shl
fcomps
push
gs
lods
in
test
loope
gs
in
lea
jl
leave
xchg
sti
popl
mov
vcvtss2sd
mov
jns
push
pop
aaa
outsl
sub
test
xchg
loop
xchg
hlt
and
mov
shrl
pop
pop
scas
mov
push
xchg
push
in
mov
fldcw
mov
lods
adc
loope
ret
dec
rorb
enter
cmp
add
scas
sbb
push
mov
int3
es
adc
lahf
push
gs
lea
test
cli
repnz
mov
lds
inc
jl
jp
ret
loope
xor
fildll
sbb
dec
int
lods
imul
add
es
xchg
out
mov
mov
cmp
mov
in
leave
out
lods
lds
hlt
push
dec
out
ss
xchg
gs
jle
leave
test
dec
popf
mov
gs
jne
mov
and
jmp
int
fsub
lds
jo
ds
cmovno
gs
fisubs
fisttpll
sbb
mov
gs
inc
lods
mov
jecxz
lds
inc
jne
scas
loope
gs
insb
in
sub
gs
and
lret
gs
mov
lock
out
bound
cs
test
gs
fsubr
mov
rep
jle
lock
roll
xchg
push
mov
push
in
mov
or
dec
pop
pop
xchg
mov
lock
lds
xchg
jmp
insb
pop
sarl
in
mov
popa
out
scas
gs
sub
cs
sahf
into
movl
push
mov
inc
mov
test
test
mov
lock
add
out
mov
mov
adc
maskmovq
testl
scas
leave
roll
push
mov
in
into
fdivl
cs
jecxz
lods
cmpsb
scas
leave
test
mov
sbb
pop
mov
cmp
daa
and
scas
mov
loope
cmp
scas
sub
gs
es
mov
add
daa
repz
les
or
mov
lret
jnp
gs
inc
stc
pusha
pushf
icebp
or
fstpl
gs
in
mov
ja
gs
lahf
aam
gs
add
jnp
mov
test
jne
ret
lret
jno
mov
mull
sub
es
lret
push
stos
cmp
mov
inc
shr
loop
and
xor
mov
idivb
shrl
add
inc
lea
mov
loope
data16
adc
xchg
cmc
inc
dec
push
xor
jo
sbb
and
sbb
push
movsb
mov
mov
in
add
lea
xor
and
mov
movsb
bound
mov
test
arpl
and
bound
or
sbb
in
pop
xchg
jne
or
push
pop
mov
decb
and
mov
pop
or
dec
pop
and
cwtl
sahf
stos
subl
imul
sbb
push
mov
cmp
or
push
movsb
or
pop
pmulhw
and
ljmp
ss
xor
and
or
andl
inc
leave
in
ds
dec
int3
adc
pop
cmp
nop
dec
dec
mov
lret
jp
and
dec
adc
ljmp
mov
mov
pop
dec
int3
dec
dec
paddw
repnz
clc
loopne
add
sbb
push
xchg
decl
mov
push
adc
hlt
dec
inc
pop
mov
shll
dec
cmp
xchg
or
mov
cmc
aad
mov
and
lret
popf
xor
nop
push
enter
jae
jno
enter
lea
dec
mov
mov
dec
and
xchg
outsb
push
xchg
mov
pusha
mov
arpl
or
xchg
push
test
loope
xchg
mov
mov
push
cltd
adc
pop
sbb
flds
loop
lret
aam
data16
std
dec
adc
adc
pop
jno
rcll
or
mov
dec
insb
push
adc
pop
repnz
rcrl
mov
fcoms
cmpsb
and
imul
mov
mov
pop
jmp
arpl
lea
dec
and
outsb
add
loop
loope
push
mov
dec
mov
pop
mov
enter
and
fcomps
sbbl
outsb
jno
or
movsl
sub
in
mov
enter
testl
movb
cltd
sub
jne
lret
lret
outsl
adc
push
fldt
mov
iret
pop
push
push
cltd
jecxz
aam
mov
xchg
push
or
shlb
nop
xchg
enter
mov
aad
and
dec
mov
mov
pop
mov
lea
jno
fistps
jg
sbb
sbb
fadd
imul
lcall
leave
push
sub
pop
mov
adc
mov
ja
push
and
mov
push
mulb
or
enter
jo
in
aas
xchg
dec
dec
out
jmp
pop
jmp
lret
ror
cmc
xorb
popf
inc
mov
xchg
xor
imul
pop
cltd
cwtl
push
pop
int
xlat
repnz
or
push
mov
or
dec
or
mov
dec
jl
push
movl
add
adc
sbb
pop
mov
and
fstps
mov
sub
add
fcomps
push
adc
orl
pop
adc
orl
sbb
pop
stos
je
mov
popf
out
fdivrs
cwtl
lret
mov
adc
sarb
mov
cmc
mov
cmp
jl
mov
add
fcoml
pop
rorb
mov
clc
sbb
mov
mov
inc
sbb
add
filds
lcall
mov
mov
xchg
test
aaa
push
daa
dec
jmp
jp
mov
pop
inc
and
arpl
sahf
insl
inc
nop
mov
push
mov
test
sbb
push
push
leave
mov
int
cmp
push
sbbl
xlat
mov
sbb
aad
sahf
lcall
lret
cmp
cmp
lret
push
pop
aad
push
movb
popl
int3
dec
xor
lcall
mov
mov
test
mov
sub
dec
inc
bound
aaa
adc
sbb
sub
jmp
xchg
dec
addl
mov
out
cmp
adc
jns
mov
fisttps
push
mov
dec
stos
stos
pop
and
aaa
cmp
xor
mov
pop
sub
and
in
popf
out
shl
and
jg
and
lcall
sub
jecxz
and
arpl
and
xor
mov
xchg
icebp
lahf
xlat
in
adc
cmp
test
add
arpl
mov
loopne
jecxz
gs
pop
mov
pusha
arpl
pop
dec
pushf
gs
adc
lahf
or
gs
aam
cmp
cwtl
or
pop
xor
shlb
add
add
xchg
nop
enter
xlat
ror
fwait
movsl
jne
push
clc
gs
lock
call
test
mov
lods
pop
and
sbb
lds
lds
pop
int
mov
das
mov
testl
cmpsb
dec
or
das
mov
testl
sub
and
int
data16
pop
in
fs
movsl
jne
sbb
gs
mov
pusha
adc
arpl
pushf
xchg
cmp
or
fildll
gs
int3
xchg
sub
clc
sbb
nop
pop
push
mov
and
enter
mov
dec
test
test
push
pop
cmpb
pop
inc
inc
stos
inc
fwait
ror
or
call
mov
ja
outsl
imul
push
dec
dec
inc
inc
aas
cmp
xor
sub
sbb
adc
or
add
cli
div
out
int
es
insl
sbb
mov
scas
mov
cs
andb
iret
jnp
jecxz
aas
or
lret
lds
in
cli
lods
data16
cmp
lret
xor
out
jae
sbb
cld
sub
xchg
and
sbb
movsl
arpl
in
dec
or
sub
cmpsb
xor
jecxz
cltd
popf
dec
pusha
jne
pop
push
fsubs
sub
lods
in
inc
sub
aaa
sarb
cltd
into
es
ljmp
iret
pop
test
add
push
inc
cwtl
gs
cmp
jnp
hlt
out
sbb
jmp
mov
js
mov
pop
nop
sar
jp
andl
jge
lea
push
iret
psubsb
push
pop
jns
mov
dec
cmc
and
pop
outsb
sub
sub
dec
xor
sbb
sti
push
in
mov
gs
in
mov
fildll
jnp
mov
push
sbb
jg
xchg
sbb
xlat
pop
cltd
aam
loopne
mov
test
fiadds
mov
mov
jae
jl
orl
pop
pusha
pop
out
loop
jnp
jge
lcall
fnsave
inc
enter
rcrb
jecxz
pshufw
sbb
jno
lret
sub
mov
and
popf
xor
leave
cmp
cmc
fcmovb
dec
jecxz
pop
test
daa
jo
mov
arpl
sti
loope
lods
popf
mov
dec
sub
stos
mov
inc
xorb
gs
repz
mov
inc
bound
gs
ja
pushf
or
dec
add
dec
lahf
loopne
mov
into
cmc
lret
sub
pop
jmp
out
test
xrelease
scas
pop
ret
pusha
lahf
push
cmp
roll
mov
cmp
mov
push
mov
xor
es
mov
gs
int
mov
into
stos
clc
inc
mov
mov
pushf
xor
and
cmpsb
insb
nop
lea
push
cmp
jnp
orb
sbb
stos
out
gs
inc
repz
aas
sti
shlb
idivl
fadd
ds
xchg
sub
jo
fs
lret
and
mov
mov
clc
scas
in
sub
sar
in
lods
gs
mov
shlb
mov
sbb
mov
mov
mov
and
sti
mov
lea
icebp
pop
jl
and
add
gs
jge
sub
lret
xchg
push
jb
fldl
gs
fdivrs
sarl
and
cmp
jb
gs
lret
cmp
push
nop
and
and
inc
push
or
add
int3
sbb
pushf
and
pop
xor
push
enter
sub
xor
pop
ret
inc
in
dec
jg
sbb
pushl
cmpsb
mov
dec
jmp
push
loop
xor
dec
xchg
xor
faddl
pop
roll
jbe
shlb
or
mov
test
add
adc
mov
shlb
dec
test
idiv
pusha
cmp
xor
in
shll
mov
stos
sbb
jns
and
in
inc
jae
jb
dec
add
push
test
leave
shlb
lods
mov
imul
mov
dec
mov
sbb
aaa
adc
and
fs
test
push
gs
mov
ret
sub
sahf
gs
inc
fwait
cld
add
ficoml
pop
cmp
int3
gs
adc
jmp
popa
jb
add
xchg
insl
adc
inc
roll
pop
mov
gs
sbb
and
inc
popf
push
cmc
ljmp
or
fidivl
xchg
gs
sub
cmpsl
into
sarb
popf
fwait
insl
call
scas
in
push
and
lds
fisttpl
data16
aaa
pop
add
dec
cmpsb
cltd
addr16
fsubl
jecxz,pt
xchg
rcll
in
push
lock
pop
xor
mov
or
xchg
mov
mov
gs
cs
mov
dec
insb
andb
xor
push
pop
in
dec
shl
ret
aad
add
mov
gs
jl
xor
gs
in
push
hlt
in
or
cmp
ja
inc
gs
push
push
mov
loop
frstor
addl
fisubrs
loope
insl
inc
in
adc
scas
mov
mov
andb
mov
ljmp
fbld
js
test
jnp
cmp
push
sub
mov
gs
and
ret
and
jo
jmp
xchg
xchg
xor
jo
push
and
data16
mov
hlt
fst
shll
pop
jge
repz
loope
dec
nop
bnd
ljmp
call
adc
cmp
lods
outsb
into
xor
xor
in
push
pop
aad
mov
jae
gs
stos
jno
in
fldenv
gs
int
sub
push
ja
iret
sub
jno
dec
loope
xchg
sub
mov
jge
sbb
gs
and
sub
sbb
insl
add
jle
xchg
out
aaa
xor
int3
inc
inc
js
movsb
sbb
mov
lods
lret
push
into
inc
sub
clc
sti
adc
insl
gs
lods
out
xor
sbb
cli
mov
ds
gs
cld
clc
gs
and
push
gs
pop
test
add
pushf
lods
add
mov
and
lock
in
sbb
lds
jecxz
shlb
jmp
das
mov
incb
xor
and
rclb
sbb
inc
or
shll
sbb
xor
mov
shll
sub
out
rcll
enter
inc
fsts
and
bnd
insl
inc
and
xor
gs
inc
cmpsb
xlat
clc
ss
les
mov
sub
push
shl
mov
push
ror
pop
xchg
jne
push
into
loope
sti
mov
or
test
xchg
test
shr
idiv
sub
outsb
in
dec
or
ret
xor
sbb
dec
jnp
rorl
xchg
gs
add
push
gs
cmp
das
mov
inc
lods
sbbb
ss
scas
mov
pop
add
inc
gs
dec
mov
mov
mov
or
xchg
pop
gs
cmpsl
or
add
gs
sbb
cmp
mov
inc
gs
out
outsb
ja
stos
loope
push
xchg
sbb
adc
in
jb
pop
push
pushf
arpl
fbld
mov
jecxz
jmp
andb
dec
push
jne
jp
pop
and
add
aam
jne
fldl
pop
sub
mov
gs
stos
cli
fwait
push
mov
int3
gs
lods
fsubrp
gs
mov
adc
pop
sbb
fnop
sbb
adc
jecxz
xlat
scas
adc
into
pushf
mov
add
mov
in
outsb
cmpsl
gs
jb
dec
mov
cmp
ja,pt
cmp
repnz
push
mov
jmp
jne
mov
mov
int3
mov
sub
jne
loop
push
orb
inc
mov
test
loope
sbb
int
jae
cmpsl
icebp
lock
shl
or
ja
out
adc
lahf
add
cs
aad
pop
loop
xor
adc
lcall
or
lcall
or
insl
fdivrl
gs
push
lahf
shr
lret
and
rcrl
jge
test
mov
js
or
jb
hlt
ljmp
mov
adc
int3
lea
orb
fcompl
arpl
test
gs
adc
mov
test
pop
jbe
cmp
pop
mov
adc
xchg
xchg
adc
xchg
xor
pop
cmp
movsb
sub
pop
add
jo
gs
mov
std
insb
dec
mov
jno
adc
shrl
gs
cltd
out
popa
mov
xor
loopne
push
lahf
in
shl
push
orl
rorl
push
push
and
rcrl
jmp
das
shrb
lret
pop
cltd
movsb
add
inc
xchg
jb
cs
movb
or
addb
outsl
jnp
and
mov
divb
pcmpgtw
xor
and
mov
dec
inc
movsb
cmp
or
enter
mov
jb
and
negb
lea
leave
pop
sub
cmpb
and
dec
xchg
xchg
pusha
xor
fsubl
add
ja
xor
pop
jle
gs
test
sbb
sbb
jg
gs
push
adc
insl
loopne
or
iret
popw
jne
gs
dec
pop
pop
cmpsb
mov
ds
into
ds
aas
sub
sub
andl
xchg
jo
mov
pop
in
lock
iret
ficoms
inc
mov
nop
and
mov
cmp
call
pop
enter
cmpsb
push
jp
xchg
test
pop
jl
push
push
and
fsubl
test
sub
call
mov
jmp
dec
sbb
arpl
pop
xchg
cmp
pop
dec
lret
bnd
xchg
jg
jmp
mov
adc
gs
mov
out
mov
add
insl
cmp
adc
stos
pushf
daa
and
in
pop
jno
leave
cmc
mov
ja
gs
push
adc
push
sbb
gs
add
mov
aad
and
push
and
or
shll
in
adc
sbb
xor
out
xchg
sub
gs
or
mov
lea
rcrl
xor
jmp
in
jo
enter
repz
stos
out
mov
call
pushf
pop
xchg
inc
cmp
and
mov
sub
test
adc
gs
hlt
cwtl
aas
cmp
imul
fisubrs
xor
data16
lods
leave
fucomip
enter
scas
push
mov
pop
jae
pop
and
cli
mov
out
xor
push
jne
pusha
dec
cmc
push
and
mov
int
or
clc
into
xor
mov
pop
addb
scas
dec
and
fidivl
fstpt
in
mov
push
pcmpgtw
add
gs
cmpsl
jmp
push
and
mov
aam
ja
dec
mov
mov
jg
in
rcll
inc
cwtl
andl
out
mov
lret
gs
add
pop
les
lcall
imul
push
xor
stc
inc
insl
insb
ss
shll
test
xlat
int
lods
mov
ret
xchg
or
adc
mov
fidivrl
cmp
mov
and
adc
jecxz
aas
push
push
xchg
jge
pushf
mov
cltd
test
sbb
pmulhw
imulb
sbb
add
aad
xor
mov
lret
andl
nop
daa
shlb
scas
jno
xchg
dec
mov
xor
fisttpll
push
inc
sbb
pop
dec
test
pop
popf
gs
xor
es
add
gs
ror
and
data16
push
mov
fs
xchg
std
xlat
gs
bswap
iret
ja
gs
sbb
in
push
shrb
lds
mov
outsl
push
fnstenv
dec
icebp
gs
outsb
jo
mov
mov
xchg
addr16
lea
inc
xchg
ret
loope
ds
jne
mov
ret
fsub
jle
sbb
shl
rcll
dec
cld
gs
in
sarb
inc
jnp
xorl
rorl
mov
jne
push
dec
rolb
dec
movsb
pop
pop
xor
push
adc
pop
adcl
stos
xor
in
push
gs
jp
cli
pop
icebp
jo
gs
pop
ja
inc
push
call
test
or
pop
cmpb
std
sahf
xchg
sbb
outsl
cs
push
jne
fldt
jno
inc
scas
cmpsl
sbbb
fs
inc
gs
je
xorl
aad
lock
sub
fisubrl
mov
gs
testl
xchg
push
inc
pop
out
test
push
sahf
xor
addl
mov
pop
and
sub
xchg
jne
fwait
mov
fisttpl
int3
gs
push
and
ljmp
adcl
mov
insl
jbe
fisubs
sub
add
test
gs
mov
movsb
and
cmp
or
pop
test
mov
insl
push
aad
gs
xchg
adc
lea
jb
out
aad
nop
jge
cmp
push
inc
in
add
gs
xchg
dec
push
outsb
out
cs
mov
je
gs
dec
xchg
mov
add
ss
cmp
mov
outsb
scas
cli
jb
add
push
and
jmp
jp
or
inc
scas
leave
mov
test
mov
push
subb
std
je
xchg
dec
push
clc
dec
or
and
mov
lds
dec
sbb
xor
push
arpl
jecxz
mov
push
mov
repnz
out
sarb
adc
gs
adc
fsubr
mov
push
bound
add
push
and
gs
or
dec
xchg
lcall
aaa
push
cs
cmp
jecxz
lahf
add
incb
sub
adc
mov
cmpsl
mov
mov
push
ja
xlat
pop
enter
addb
test
es
jns
cmpsl
leave
gs
lods
loopne
jmp
gs
push
dec
pop
mov
cmpb
push
mov
push
and
aam
pop
gs
jae
stc
scas
pushf
in
outsb
gs
dec
dec
cmc
cmp
in
cld
add
fimuls
xor
sub
sub
aas
cwtl
mov
loope
xchg
lea
in
mov
or
or
inc
fmul
cmp
inc
into
andl
lods
rolb
outsb
fisubl
mov
negb
dec
aam
jb
loope
bound
mov
xor
xchg
clc
jo
out
loop
cs
push
test
push
dec
imul
jl
pop
inc
gs
mov
xlat
negb
fistps
fldenv
cmp
addr16
scas
sbb
aam
pop
fdiv
in
cmp
sub
pop
mov
adc
mov
jl
xor
imul
xchg
mov
inc
sub
gs
add
stc
jb
xor
jns
gs
cld
dec
in
push
aad
dec
mov
test
sub
ss
outsl
inc
and
add
inc
jae
sahf
lret
push
or
stos
loope
loope
lods
and
int3
adc
cmp
jl
test
jnp
push
mov
aaa
pop
sbb
adc
imull
lcall
jno
test
das
test
fdivl
mov
notb
add
mov
add
gs
push
daa
ljmp
in
jnp
lret
je
sub
sbb
fldenv
pop
cltd
subl
mov
adc
lds
add
sbb
inc
sbb
rorl
jp
sub
iret
mov
cmpsb
int3
test
gs
outsl
push
add
imul
mov
rcl
callw
rclb
sub
inc
andl
cld
xchg
insl
in
pop
gs
pinsrw
dec
gs
mov
mov
gs
jns
inc
sahf
mov
cmp
stos
jno
push
inc
gs
xor
jae
dec
sti
loope
mov
adc
pop
inc
insb
mov
jb
popf
pop
mov
mov
sbb
mov
push
push
scas
int
add
outsl
and
ds
lea
xchg
gs
xor
push
lods
cli
mov
shl
cmp
push
mov
std
loope
faddl
and
fmuls
sub
and
push
jecxz
cld
into
mov
or
inc
roll
and
enter
jp
out
and
jl
shrb
jge
adc
lds
fstpt
call
sub
ss
adc
inc
push
and
xorb
pushf
es
push
test
in
call
out
loop
clc
xchg
gs
repz
rol
add
fcompl
jo
loopne
addl
sbb
inc
fs
jo
int
sbb
shll
mov
pop
add
lea
shlb
or
outsb
mov
sub
or
testb
push
fimull
gs
clc
cmp
sub
adc
iret
xchg
gs
mov
gs
push
inc
inc
loope
inc
into
outsb
adc
fsubl
xchg
and
rcrb
add
mov
dec
addl
sbbl
daa
and
gs
testb
cmp
xchg
jecxz
sarl
outsb
aaa
xchg
gs
icebp
scas
dec
add
int
mov
and
test
jne
jb
gs
pusha
not
lods
mov
rcrl
add
repz
cmp
ljmp
sahf
je
mov
add
xchg
ret
push
insl
push
outsl
cs
and
mov
jne
shlb
lea
push
sbb
mov
pop
jmp
gs
push
cmpsb
push
imulb
shll
icebp
add
xchg
push
sub
sbb
lea
and
or
push
inc
test
stos
add
in
mov
test
sarb
ret
cmp
ret
lds
lcall
jecxz
fnstenv
sub
test
roll
loope
xchg
ret
xchg
stc
mov
jecxz
ljmp
push
adc
dec
out
sbb
aaa
shl
jo
pushf
inc
gs
cmp
lods
sbb
imul
mov
xchg
jne
lret
cmc
gs
xor
popa
or
add
pop
mov
cmpsl
sbb
dec
int3
lret
xor
push
xchg
mov
push
cli
mov
gs
scas
xor
lds
outsl
pop
pop
xchg
ret
aad
shll
lods
sahf
cmp
aas
jecxz
pcmpgtw
je
mov
aad
imul
aad
gs
out
inc
pop
dec
xchg
mov
pop
cmpb
test
fnstsw
pusha
jecxz
outsb
lcall
clc
fstl
mov
pop
loope
push
cmpsb
or
sbbb
fdivrl
sub
loope
sub
scas
repz
cmp
mov
and
dec
push
sti
aam
jne
arpl
sub
jae
je
sub
fldt
ljmp
gs
loop
mov
aad
stos
lods
daa
dec
jno
mov
imul
insl
fldenv
sarl
pop
adc
test
push
gs
jmp
nop
push
int3
add
cli
mov
push
push
or
push
outsl
mov
lods
aad
repz
cmp
out
mov
push
das
popf
dec
insb
xchg
in
std
cmp
gs
xor
rcrb
rcl
jae
mov
pop
popf
loopne
pop
cmp
mov
gs
ret
loop
push
popf
gs
jno
jae
insb
mov
and
test
in
loope
mov
bound
and
or
and
gs
fdivl
mov
lds
stos
addb
and
gs
mov
xchg
icebp
mov
mov
mov
mov
loope
and
fstps
loope
lea
gs
iret
rcll
and
std
in
jo
adc
je
adc
inc
mov
jno
jae
adc
test
in
int
in
xor
sbb
test
cmp
gs
xchg
std
andb
xor
or
fs
repnz
sbb
pop
sub
xchg
xchg
mov
jno
gs
mov
cmpsb
lahf
das
cmp
jo
xchg
out
sub
xor
fildl
inc
mov
daa
lret
out
add
lds
es
mov
ffree
mov
mov
mov
aad
sbb
out
xor
xlat
gs
in
imul
or
mov
push
xchg
sbb
or
xchg
fucomip
jae
adc
mov
cmp
and
xchg
gs
xchg
stos
in
add
or
xchg
outsb
xchg
push
aad
test
or
arpl
push
into
adc
loope
mov
xchg
jno
mov
jl
insl
jmp
rol
inc
inc
gs
test
outsl
loope
ss
cwtl
shl
pop
sbb
and
adc
gs
sub
jg
popa
gs
push
or
je
or
shlb
jmp
aaa
gs
and
gs
cmp
fcompl
iret
sub
clc
test
andl
add
mov
cltd
outsb
lods
scas
cs
sub
dec
cmp
pop
pop
mov
enter
lock
pushf
jmp
sti
dec
roll
outsb
popf
jne
xchg
and
mov
xrelease
loope
jns
loopne
add
push
adc
pop
xchg
jge
dec
shll
sbb
inc
cld
loope
or
xor
xor
jbe
xlat
fwait
or
nop
mov
loopne
inc
jge
jmp
push
aaa
gs
sahf
daa
cmp
mov
repnz
stos
jno
push
decl
out
or
xchg
in
jo
xchg
imul
fisubrs
mov
cmpsb
ret
sub
in
dec
cmp
scas
insl
leave
push
and
or
inc
jecxz
push
inc
mov
dec
gs
std
sahf
xchg
add
outsl
cmp
gs
xchg
dec
mov
mov
out
orl
hlt
cwtl
add
lret
jmp
xor
ret
mov
push
gs
mov
dec
stos
or
insb
lea
out
sarb
sbb
xchg
movsb
enter
dec
rcrb
pusha
scas
pushf
lds
mov
and
sbb
in
outsl
aad
out
cltd
push
dec
and
xor
jp
mov
repz
es
xchg
cmp
pusha
xchg
clc
pop
lea
xchg
out
sbb
mov
les
std
aam
insb
loopne
pop
cmp
pcmpgtw
enter
or
gs
or
xlat
stc
fucomip
fwait
and
pop
inc
pushf
jne
sti
and
fists
xchg
clc
imul
in
mov
pop
mov
out
or
repz
dec
dec
sub
sub
std
outsl
das
loope
aam
mov
mov
add
or
cli
repnz
xchg
and
lret
jns
ja
cmp
gs
in
pop
out
enter
lret
pop
mov
gs
mov
adc
shll
inc
mov
gs
mov
icebp
sub
xor
ss
cmpsb
pop
subb
pop
insl
and
jmp
stos
insb
mov
subb
ja
bnd
ljmp
popa
inc
push
or
rolb
jge
in
imul
jne
aaa
test
jne
or
xchg
pushf
jo
mov
aad
gs
lcall
gs
xor
cmp
out
dec
fisubl
imul
cli
xlat
nop
xchg
out
ljmp
jmp
jnp
push
push
dec
inc
gs
add
add
test
gs
jne
pop
xchg
jb
gs
dec
jp
or
aam
push
gs
jecxz
outsb
movb
gs
push
xchg
or
gs
in
sbb
filds
and
shlb
inc
xchg
sbb
xchg
xor
push
mov
xlat
dec
jecxz
js
int3
sub
dec
insb
push
gs
ss
push
inc
lret
loop
mov
in
lods
shl
inc
sub
push
jns
push
mov
xor
je
xor
fsubs
dec
sub
sbb
pop
sbb
gs
push
ror
rcrl
sbb
cmc
sub
shr
inc
out
mov
pusha
popl
pushf
pop
xchg
lds
stos
gs
xchg
cmp
imul
jecxz
add
pusha
cmp
loope
mov
jne
lcall
dec
lods
jle
gs
clc
lds
xchg
jno
xor
jnp
xchg
gs
out
cmpsl
add
mov
ret
out
xor
test
fimull
and
test
dec
mov
or
in
add
pop
inc
jnp
or
incl
add
mov
dec
pop
gs
fcompl
jne
imul
jecxz
addl
push
cmpl
mov
pusha
insl
shll
mov
gs
addr16
sub
mov
cmp
pusha
dec
xchg
mov
mov
into
mov
lcall
outsb
mov
cwtl
in
gs
mov
shl
xchg
jb
fwait
gs
out
addb
add
pushl
adc
loope
cs
arpl
es
in
aaa
mov
mov
js
dec
jae
rcrl
cmp
frstor
jno
cwtl
ja
rolb
scas
jae
je
loopne
mov
arpl
gs
loop
cmp
and
dec
clc
das
outsb
or
xchg
pop
push
popa
addr16
adc
push
pop
adcl
enter
mov
lea
cmp
and
push
push
xchg
jo
gs
sbb
stc
adc
xor
cmpsl
imul
ja
fldcw
repnz
xor
and
dec
arpl
mov
gs
les
xor
fistps
loopne
and
gs
mov
inc
inc
xchg
dec
gs
arpl
pop
sahf
mov
gs
je
in
popa
pop
cltd
shl
insb
fisubl
inc
aad
dec
mov
jmp
std
xchg
cmp
inc
insl
jbe
aam
rcll
shll
es
pop
cmp
fisubs
insl
pop
and
dec
xchg
mov
pop
shl
or
jo
pusha
and
movsb
test
sub
cld
gs
fisttpll
loop
stos
pop
scas
ret
mov
mov
sbb
push
pcmpgtw
push
test
cmc
gs
aaa
inc
mov
fdivs
mov
pop
push
roll
sti
fucom
out
inc
loope
jb
mov
fwait
or
add
shrl
pop
xor
test
jae
gs
dec
cwtl
lcall
inc
jmp
daa
dec
ljmp
repz
push
gs
or
push
cltd
not
mov
inc
dec
jg
and
andl
adc
cmp
xchg
jge
lods
js
into
sti
sarl
inc
setno
test
inc
jecxz
adc
mov
adc
cmpsb
cmp
cld
mov
pop
in
add
push
cmp
pop
jl
lock
jecxz
sar
jo
pop
inc
imul
stc
aam
or
dec
aaa
gs
sbb
cmp
and
sarb
push
push
scas
push
push
fstp
frstor
gs
mov
gs
push
rcrb
mov
xchg
inc
fdivrl
add
in
mov
rorb
clc
xchg
push
int3
sbb
xchg
ljmp
loop
xlat
gs
decb
adc
fildll
jl
and
push
gs
ljmp
adc
pop
insb
xchg
lds
xor
imul
push
mov
xchg
xor
adc
into
cmp
shrb
add
xlat
mov
andl
imul
div
gs
inc
xchg
js
inc
out
lcall
fcompl
in
or
loope
push
int3
fstl
out
lret
mov
out
mov
in
into
xchg
andl
xor
mov
sti
sbb
pop
ljmp
cmp
inc
insl
aad
test
das
gs
rcrb
hlt
sub
stc
imul
lods
xor
stos
clc
pop
gs
nop
les
lods
push
cmp
ret
xlat
cmp
dec
inc
sub
insb
ja
xchg
jne
sarb
gs
mov
xchg
jle
daa
push
pop
mov
mov
adc
pop
lahf
gs
sti
in
jp
fs
gs
imul
bound
mov
add
lods
inc
gs
call
push
mov
lods
add
push
arpl
add
add
and
js
mov
or
or
or
jmp
add
les
repnz
xchg
push
lcall
scas
push
push
nop
dec
loop
cmp
in
xchg
test
sub
and
sub
lods
cltd
push
inc
gs
call
jo
gs
xchg
mov
popa
fsubl
or
movsb
dec
mov
shrb
popf
push
mov
lods
xlat
jmp
push
xor
rcr
aam
cmp
push
shlb
jne
pop
gs
mov
dec
and
in
and
insl
jne
bound
xchg
cmp
inc
mov
mov
or
in
cmc
add
not
inc
bound
sbb
cmp
mov
mov
inc
jmp
js
jne
jo
add
mov
lcall
and
mov
fs
hlt
in
adc
mov
lods
outsl
stos
gs
fdivr
inc
icebp
sub
in
scas
rol
das
jno
scas
inc
gs
pop
jbe
lret
and
and
cld
in
adc
push
cltd
sub
aad
aaa
scas
add
dec
test
inc
sbb
test
mov
mov
and
nop
mov
aam
testl
shlb
push
stos
call
push
or
pop
aam
lea
cmp
push
jne
fstp
cld
gs
scas
mov
in
sahf
or
inc
xchg
sbb
ja
lds
sub
mov
xor
adc
gs
stos
out
int
mov
loope
scas
sahf
xchg
jne
shlb
ljmp
jle
sub
gs
imul
inc
stos
xchg
pop
insb
push
jp
inc
fstps
cltd
hlt
mov
gs
xchg
in
cmpsb
push
jmp
fwait
cmp
lret
cltd
mov
gs
out
or
rcrl
std
mov
sbbl
fcoml
in
adc
imul
or
push
mov
pop
adc
inc
jecxz
sub
ret
imul
and
imul
loopne
call
or
popa
pushf
jecxz
adc
mov
gs
outsl
pop
jae
int
popf
gs
mov
mov
xchg
fnstenv
daa
les
cmp
scas
sbb
adc
lahf
cwtl
fisubl
dec
in
stos
mov
add
and
mov
xchg
gs
sbb
mov
xlat
push
and
ss
cs
loopne
aaa
fisubl
sbb
jmp
xor
stos
lds
insb
mov
enter
fwait
out
jns
cs
adc
mov
mov
ljmp
gs
roll
pushf
cli
dec
sbb
push
gs
cmpsl
mov
lds
mov
cmp
gs
jb
out
or
sbb
mov
rorl
mov
or
dec
mov
and
lahf
sub
aam
icebp
ds
xchg
or
gs
or
sbb
enter
sbb
push
cmp
fidivrl
push
sub
and
stos
fwait
jp
scas
out
push
negb
dec
std
gs
int
icebp
mov
aaa
cs
pop
push
dec
mov
mov
or
shll
sbb
jbe
dec
js
scas
jl
hlt
cs
sbb
ljmp
loopne
gs
xchg
dec
inc
nop
repnz
aad
cmpsb
jne
je
jecxz
xchg
arpl
stos
pop
icebp
gs
jno
jle
rcll
add
cmp
mov
jecxz
push
push
popf
mov
mov
nop
mov
mov
data16
jecxz
sub
pop
lock
je
pop
pop
mov
test
jecxz
ret
add
xchg
inc
jo
pop
push
in
ja
jnp
push
jge
lds
out
mov
xor
dec
push
ret
js
adc
enter
and
mov
sub
gs
loopne
and
dec
in
in
ror
in
mov
jecxz
fisubl
lock
les
in
xchg
popf
or
daa
add
addr16
push
xchg
bound
scas
call
fldl
dec
pop
gs
xor
mov
gs
cmp
pop
loopne
mov
push
push
clc
test
js
gs
adc
in
shlb
jge
les
gs
movsb
xor
xchg
jne
test
outsb
mov
dec
jb
push
jmp
xchg
js
gs
sahf
dec
fs
lahf
push
stc
mov
test
gs
pop
dec
out
int
imul
loope
shlb
dec
push
sub
gs
scas
les
fisubrl
test
ds
jl
pop
test
ljmp
iret
scas
aaa
push
sbb
hlt
popf
dec
cwtl
loope
xor
out
push
insl
xchg
mov
lods
lcall
gs
and
jns
jno
mov
mov
push
cltd
pop
stos
clc
test
adc
stos
fdivrp
iret
sub
add
push
fldl
js
mov
outsb
inc
ret
sub
gs
cmp
push
mov
adc
mov
xchg
or
fistps
ljmp
pop
fsubl
sbb
das
int
adc
gs
inc
adc
enter
xchg
mov
icebp
push
in
fcompl
gs
cmp
mov
subb
int
aaa
outsl
or
jbe
repnz
pop
cmp
inc
mov
stos
adc
xchg
cltd
pop
push
jne
adc
leave
stc
cmp
sbb
fnsave
cs
or
jne
xor
mov
inc
add
gs
adc
or
fdivrs
sahf
xor
mov
cmp
loop
imul
sub
inc
adc
fsubl
push
mulb
fiadds
out
repz
sbbl
or
pop
jnp
pusha
mov
xorl
push
fldl
lods
add
sbb
mov
pop
negb
hlt
xchg
out
xchg
xchg
mov
inc
fs
insl
mov
andb
ja
sub
cli
notb
mov
mov
xor
cmpb
in
cld
cli
inc
gs
inc
mov
xchg
or
push
lret
xor
dec
minps
xor
adc
xor
fstpt
or
cs
subl
sbb
push
aaa
bound
icebp
dec
test
cmp
push
xor
stc
std
cmc
sub
pop
jle
out
in
jne
sahf
mov
push
std
enter
gs
psllq
cmpsb
or
sbbb
xchg
mov
gs
push
dec
sbb
xor
int3
xchg
mov
dec
jmp
gs
push
pushf
sbb
add
loope
fists
push
ljmp
test
cmp
xor
pop
shrb
test
jnp
and
push
scas
sahf
xor
mov
sti
cmpsb
sarl
outsl
sub
cld
jbe
or
ret
pop
lcall
push
inc
cli
gs
xor
mov
gs
stos
test
lret
xchg
out
das
cmc
cmp
mov
pop
ds
dec
add
mov
push
in
js
mov
push
and
push
pop
xorb
lods
dec
jne
mov
test
and
jo
daa
push
jge
push
inc
jb
gs
mov
adc
gs
std
cmp
cmp
mov
dec
fisubrl
icebp
jmp
jp
outsl
gs
push
dec
push
add
inc
enter
sti
mov
gs
outsb
push
into
xor
and
inc
push
inc
xor
cwtl
and
xor
test
loope
mov
sub
adc
mov
jmp
test
enter
pop
and
mov
movsb
dec
adc
scas
pusha
shll
outsb
cmp
xor
imul
inc
mov
jmp
gs
int3
fwait
add
adc
sub
jbe
cli
adc
sahf
inc
dec
aaa
or
test
xor
mov
repnz
cwtl
cltd
dec
pop
and
in
xchg
inc
push
jne
pop
push
xchg
sub
gs
mov
mov
push
jle
push
mov
hlt
sub
xor
insl
mov
je
fnsave
subl
push
push
push
mov
or
mov
negb
in
lcall
loop
cwtl
loopne
adc
outsl
cli
mov
xlat
sbb
cs
pop
sub
in
and
out
lods
sub
jl
in
add
gs
fnstcw
gs
daa
pop
outsl
out
gs
out
testl
mov
push
stc
mov
xchg
xor
mov
cli
pop
sbb
push
ret
insl
pop
sti
orb
leave
dec
test
push
roll
mov
sbb
push
xlat
or
or
adc
cmpsl
insl
pop
cmc
jmp
dec
cmp
and
pop
xchg
lret
lock
cltd
pop
enter
and
ss
adc
in
xchg
or
gs
stos
out
shll
jbe
xchg
insb
inc
gs
iret
sbb
popl
gs
and
into
cmp
cmp
loope
test
or
sub
xlat
xchg
jnp
sbb
mov
pusha
or
dec
je
fstl
mov
jge
dec
gs
lahf
shrl
pop
movsb
insb
cmp
fmull
jge
loopne
gs
fldcw
adc
adc
push
test
adc
dec
fucom
and
mov
push
lods
daa
out
gs
out
pop
push
jns
push
and
enter
mov
cltd
mov
in
adc
ret
xor
and
movb
mov
ss
add
loop
rcrb
gs
xor
inc
jb
sbb
push
mov
repz
and
add
out
gs
cwtl
cmpsb
mov
fnstcw
push
mov
xor
dec
mov
pop
cmp
xlat
or
lahf
jge
jno
pop
push
push
sbb
incb
sub
cmpsb
outsb
pop
dec
jno
mov
pop
xor
pop
pop
sbb
adc
mov
ret
test
in
and
rorl
sbb
mov
jmp
das
testl
xchg
cmp
adc
cwtl
xchg
daa
lock
ss
cs
inc
fsubrs
in
jmp
jae
cwtl
nop
mov
jb
mov
scas
pushw
cmp
and
ret
push
or
movsb
int
inc
mov
jg
add
idivl
inc
shll
loope,pt
mov
adc
pop
gs
sbb
and
es
push
pop
and
sbb
stc
sbb
cmp
mov
xchg
cmc
dec
xor
adc
sub
mov
imul
ljmp
dec
leave
fwait
adc
aad
inc
add
in
repnz
or
or
std
fsubl
rclb
mov
scas
mov
pop
pop
add
int
cmpsb
adc
fs
jp
jl
xchg
pop
mov
xchg
cmp
sbb
stos
xor
gs
pop
pop
and
jp
in
fmull
bound
jnp
int3
dec
jge
dec
cmpsl
gs
outsb
push
bswap
dec
scas
and
lret
mov
in
sub
gs
jbe
das
jmp
aad
dec
jl
lock
pop
ja
sbbl
pop
add
cmpsb
xlat
mull
fimuls
dec
mov
pop
push
outsb
outsl
mov
sbb
xor
ja
gs
sub
push
lea
insb
inc
test
loopne
xor
or
gs
mov
out
out
repnz
movsb
loope
push
adcb
gs
inc
scas
aad
adc
jnp
push
mov
push
xor
test
es
pop
repnz
ret
push
or
ljmp
in
mov
pop
fdivrs
pop
scas
ja
add
mov
adc
push
lcall
xchg
imul
xchg
inc
pushf
and
push
sub
loop
xchg
pop
movb
ljmp
addr16
xchg
dec
stos
test
push
or
push
cmpsl
mov
fs
pop
nop
sbb
loopne
push
cwtl
repz
std
test
or
cmp
je
or
rcrl
xchg
sbb
mov
jo
xchg
mov
lret
adc
dec
cmp
insb
and
ljmp
out
cmpsb
jbe
push
dec
and
hlt
fs
ret
stos
scas
movsl
jne
xor
push
ret
sbb
xchg
dec
or
ljmp
adc
mov
call
mov
mov
sub
sbb
sub
repnz
sbb
push
or
mov
push
and
mov
iret
inc
add
daa
jecxz
fisubrs
lds
pop
gs
push
adc
jne
mov
and
clc
pop
sub
mov
lods
test
fisubrl
jmp
sbb
xchg
sahf
mov
stos
jno
roll
in
mov
testb
adc
cmp
and
adc
push
ret
or
xor
gs
dec
lods
xlat
es
xchg
mov
gs
fldt
or
xchg
incl
gs
js
push
jmp
gs
sub
fisubl
nop
and
popa
jl
inc
gs
mov
sub
jle
jmp
gs
or
mov
gs
mov
pop
and
mov
test
push
xor
loopne
dec
or
in
aaa
lret
lea
jae
dec
cld
inc
iret
jecxz
mov
inc
aam
scas
and
movsb
mov
cmp
push
gs
jne
data16
push
in
outsb
inc
inc
les
clc
jg
cmp
lret
add
aaa
or
fisubl
xor
mov
push
sbb
ja
stos
inc
sub
sub
bound
xor
cmp
gs
mov
int3
mov
mov
or
pop
out
ds
arpl
clc
fidivs
imul
sbb
sbb
mov
loop
xor
ret
xlat
fidivrl
jecxz
dec
js
inc
adc
cmp
sub
dec
cmp
shll
arpl
nop
stos
jo
ds
pop
in
sub
imul
push
mov
loopne
mov
gs
sbb
inc
jmp
push
loopne
out
ds
jno
aas
inc
jns
gs
jmp
sti
call
std
sub
jno
add
jmp
enter
lds
xor
leave
jae
cmp
jle
cmp
shrd
add
jae
stc
mov
and
cmp
dec
outsl
adc
gs
or
into
sarb
gs
mov
sahf
add
mov
aad
lea
stos
adc
push
aaa
aam
imul
int3
loope
sbb
jge
add
add
gs
out
dec
inc
lock
imull
cmpsb
int3
lret
or
jno
push
ficoml
cmp
jmp
xchg
mov
test
stc
mov
gs
jae
iret
pop
rcrl
repz
cmp
sbb
mov
addr16
mov
mov
subb
or
imull
mov
push
inc
stc
push
xchg
call
push
stos
xchg
jb
scas
movb
xlat
loop
nop
mov
jo
cld
js
mov
aas
imul
fadd
roll
leave
sahf
es
cld
mov
dec
jne
inc
dec
icebp
mov
mov
scas
gs
sbbb
gs
leave
xchg
shrb
gs
and
outsl
mull
mov
mov
ficompl
xchg
es
or
xchg
and
enter
cli
jno
jg
jl
and
cmp
sbb
inc
in
and
in
xchg
cmpsl
mov
sbb
sbb
inc
incb
cmpl
push
movl
cmp
xchg
or
lods
xchg
push
clc
cmpsb
imul
gs
mov
std
jg
and
sahf
xchg
and
imul
inc
cs
xchg
sbb
mov
xchg
pop
jnp
call
lods
adc
inc
rcrl
aad
jb
lret
jae
push
xchg
gs
mov
xchg
int
rolb
cmp
mov
mov
jp
mov
pop
test
outsb
sbb
inc
gs
shlb
mov
int
lods
gs
pop
rolb
addr16
int
and
mov
mov
andl
sub
push
movsb
lods
out
xlat
cmpsb
gs
scas
and
adc
imul
add
loope
dec
sub
lea
push
lret
std
test
jmp
test
and
xchg
cwtl
call
and
aam
addb
add
ss
mov
lret
aad
cmp
in
cmc
and
jle
test
insl
sbb
in
rorl
fwait
inc
mov
lds
lcall
or
mov
mov
gs
push
push
mov
mov
or
push
stos
and
mov
cli
xchg
cwtl
mov
lods
outsl
push
push
out
ret
sub
ss
and
mov
addr16
mov
das
lahf
jnp
inc
push
cltd
gs
loop
aas
xor
loope
mov
sub
test
push
in
decb
insb
ja
js
cwtl
gs
lcall
gs
xor
and
lahf
mov
push
gs
cmp
adc
mov
outsb
daa
add
das
popa
jno
shll
sbb
call
push
mov
push
sbb
fwait
test
mov
icebp
gs
inc
out
insb
and
addr16
scas
push
pop
jmp
cwtl
and
push
les
xchg
ds
jns
gs
int
inc
pop
add
test
mov
push
data16
or
test
mov
jge
loope
pushf
dec
fwait
in
fcoml
aaa
fstpl
mov
push
mov
gs
stc
ds
pop
jnp
sbb
mov
enter
cld
clc
aaa
jecxz
in
in
and
pushf
les
or
cmp
xor
dec
gs
sub
lret
dec
mov
js
or
xchg
sub
sbb
fs
pushf
popf
and
cmp
cli
jle
xchg
arpl
ret
add
dec
jbe
lods
jne
das
out
push
mov
mov
test
mov
fdivs
mov
mov
push
mov
xchg
xchg
mov
filds
lret
mov
shll
rclb
pop
cmp
adc
movsb
incb
xchg
daa
lret
rolb
icebp
mov
out
enter
jge
adc
loopne
mov
call
and
inc
shrl
inc
lret
jno
dec
sub
gs
inc
repz
or
gs
dec
mov
jbe
rorb
push
xchg
jo
test
mov
jbe
orl
pop
xchg
cmc
add
call
push
inc
xchg
ja
test
xlat
stc
imul
mov
xchg
sbb
ljmp
jae
push
icebp
cli
andb
push
xchg
adc
jle
gs
mov
inc
dec
lret
gs
sbb
stc
fs
mov
fstpl
in
xor
adc
notl
sub
jae
push
xchg
xchg
jno
cltd
gs
mov
dec
mov
lods
sub
call
push
into
popa
testl
xchg
ljmp
gs
pop
inc
xchg
cmpsb
adc
dec
jnp
dec
imul
ror
push
mov
lret
scas
sbb
jns
gs
add
sti
push
gs
rcrb
out
cmpsb
pop
and
mull
jmp
jecxz
mov
ljmp
gs
cmp
gs
sbb
or
jb
and
and
xorb
shl
cmp
cmp
add
push
pop
pop
or
cmovp
iret
inc
jae
xor
mov
out
mov
shrl
sub
and
pusha
in
addr16
jg
and
arpl
dec
mov
mov
xor
out
push
add
jecxz
in
insb
push
pop
xlat
lea
aas
ljmp
xchg
lods
push
cwtl
fldenv
push
jle
aaa
sub
sbb
xchg
lods
gs
shll
call
fwait
push
dec
cmc
out
lods
in
gs
mov
adc
mov
imul
xor
mov
dec
addr16
jg
gs
jb
in
pushl
push
gs
pop
cwtl
scas
and
repz
jg
gs
clc
jnp,pn
lea
arpl
and
jle
test
or
and
mov
cmp
sbbl
out
jecxz
test
sbb
scas
ret
mulb
cld
sub
js
frstor
jns
addr16
repz
fstpt
sub
icebp
leave
in
roll
std
xchg
pop
inc
and
cli
jae
ljmp
mov
dec
mov
test
and
cmpsl
mov
in
push
lock
and
fadds
inc
fldcw
push
mov
cmpb
inc
out
pop
adc
nop
gs
imul
jle
out
mov
arpl
pop
cmp
nop
gs
jns
xchg
cmp
faddl
add
mov
sbb
gs
adc
and
sbb
clc
ja
mov
addr16
jne
add
or
gs
mov
incb
or
gs
cli
ficoml
sbbl
in
fcomi
lds
outsl
lods
ja
gs
rorl
and
cli
das
insl
xor
mov
mov
mov
gs
adc
orb
sti
add
push
sub
sub
dec
dec
das
xor
mov
pop
inc
and
gs
xchg
in
jl
dec
mov
or
cmp
in
push
adc
xchg
ljmp
jge
gs
jo
cli
mov
pop
mov
sub
jne
sarl
addr16
gs
rep
pop
lcall
pop
or
push
std
test
lahf
gs
call
fldcw
or
mov
das
cmpsl
jmp
lods
addr16
divl
ficoml
lods
lds
sti
push
xchg
pshufw
das
gs
xchg
lods
lcall
push
jno
xchg
mov
gs
out
mov
jnp
arpl
scas
or
out
lret
int
gs
push
mov
mull
mov
push
gs
or
dec
sub
and
in
call
shl
cmpsb
js
adc
dec
fimull
or
push
mov
repnz
pusha
sbb
inc
push
mulb
sub
push
gs
and
fs
and
lds
mov
stc
or
lcall
adc
xchg
nop
xchg
movsb
jge
xchg
stos
rcrl
sub
cmp
test
inc
sub
adc
push
lds
mov
lock
pop
out
and
jp
mov
dec
insl
mov
or
sub
gs
jge
aas
add
dec
sbb
rorb
ss
cmpsb
and
cmpb
mov
lods
fs
mov
cwtl
mov
aas
orl
subl
inc
dec
and
out
adc
gs
mov
test
mov
cmp
push
test
lods
gs
es
outsb
stc
jge
push
andb
lcall
or
ljmp
jnp
pop
jecxz
fdivp
push
out
xor
bound
outsb
jo
jl
sub
imul
mov
fbstp
inc
gs
sub
jnp
arpl
push
pop
les
push
add
pop
das
cmp
loope
lret
mov
test
jge
add
jmp
push
ds
xor
in
movsb
cltd
gs
sar
aaa
pop
fninit
add
popf
rolb
cmp
xchg
out
mov
in
jmp
test
pop
mov
clc
popa
in
adc
xchg
xor
lods
mov
mov
enter
push
rolb
and
shrl
shrb
lcall
in
add
mov
mov
loop
gs
fsubs
into
dec
fidivrl
std
push
add
add
sub
gs
iret
sbb
in
push
mov
gs
cld
dec
mov
out
ja
inc
test
hlt
cli
pusha
inc
fsubl
mov
ja
mov
sahf
out
push
shlb
or
sub
imul
jmp
pop
popf
mov
test
cmpsl
shlb
mov
call
ss
inc
shll
and
jmp
jmp
int3
pop
addr16
jecxz
cmp
mov
mov
in
fdivrs
add
jo
in
mov
nop
in
jns
xor
outsl
sbb
inc
lods
loope
mov
fsubs
push
sti
cmp
push
loop
push
ss
xor
stos
test
fstpl
pusha
mov
xor
jge
je
pop
sbb
jns
gs
dec
insb
into
lahf
pop
pop
xchg
and
sub
popf
jns
push
xor
sbb
stos
xchg
gs
dec
pop
lea
push
pop
xor
adc
lods
rcrb
mov
and
fistl
imul
ja
and
and
cli
mov
js
imul
mov
lea
mov
xor
sub
rcrl
enter
test
cmp
lods
iret
or
stos
andl
mov
xor
ljmp
lahf
cmp
gs
add
nop
inc
in
loopne
pop
sub
cmpsb
outsb
push
jmp
add
mov
inc
mov
sub
mov
scas
enter
fsubr
xchg
into
test
insb
cmpsb
in
sbb
xchg
add
repz
adc
mov
push
inc
daa
sbb
arpl
jecxz
or
push
je
mov
and
leave
push
popf
aaa
dec
in
push
fsubp
test
xor
outsl
cmp
or
aad
or
pop
lret
pop
mov
clc
sbb
adc
incb
xchg
lret
inc
mov
pop
into
addr16
stc
scas
ficoml
popa
pop
mov
cmp
loope
inc
add
mov
mov
dec
shll
cld
lds
sub
gs
clc
cmpsl
repz
or
gs
adcb
push
fldt
mov
filds
in
xchg
loope
cmp
jns
gs
icebp
sbb
lods
push
gs
or
gs
sub
gs
mov
lods
shll
mov
sti
aam
js
pop
jno
cltd
psubusw
gs
mov
daa
ljmp
das
sbb
pop
mov
jbe
adc
bound
mov
xor
gs
cmp
mov
fisubs
xor
adc
pop
pop
sahf
adcl
adc
sub
fimull
pop
mov
or
jbe
fwait
leave
imul
imul
iret
jb
sub
gs
push
stc
mov
rcrb
sub
ror
or
and
push
adc
or
gs
pop
fucomip
ljmp
push
cli
inc
mov
mov
sahf
sahf
pusha
cmpsb
in
inc
stos
pop
mov
enter
gs
inc
dec
cmp
and
inc
out
jne
mov
lret
int3
sub
adc
gs
lods
ljmp
push
outsb
cmovo
sbb
fisttpll
ja
push
icebp
jnp
gs
cmpsb
push
lods
mov
and
pop
gs
mov
insl
stos
adc
push
repnz
es
xchg
pushf
cmpsb
loope
enter
sub
mov
lret
pop
sub
gs
int3
movsb
add
pop
pushf
jne
or
dec
imul
inc
mov
xchg
mov
fbld
fcoms
and
stc
add
xlat
ja
pop
push
in
mov
imul
or
sti
pushf
jbe
pusha
enter
inc
adc
or
mov
push
jne
adc
jg
xchg
fs
mov
les
in
out
push
gs
test
cmp
insb
shr
xor
ss
xchg
push
gs
mov
outsb
inc
lds
out
xor
pop
xchg
cld
mov
gs
xchg
call
inc
gs
push
push
into
movsb
and
ljmp
cmc
jp
aad
aam
dec
dec
inc
lods
xor
rol
adc
addr16
test
adc
inc
lahf
and
mov
popa
addr16
mov
sarb
push
mov
shr
pusha
imul
and
in
lods
push
stos
sub
mov
gs
and
rcr
add
shll
addr16
outsl
popf
and
gs
jne
pop
sub
aam
dec
xor
in
or
inc
lahf
adc
scas
fnsave
enter
out
add
adc
and
and
in
xor
insl
insb
test
daa
xchg
inc
dec
in
aaa
out
in
movsb
xchg
mov
xchg
mov
loope
stc
dec
push
test
lods
dec
mov
and
fdivrl
mov
pop
sub
push
call
mul
cmpsb
sub
or
cmp
fnsave
jo
icebp
int3
mov
jecxz
stos
daa
mov
jmp
mov
lcall
shll
cli
sub
inc
gs
pushf
imul
cmp
jnp
fsubrs
in
cmp
sub
and
int
jns
arpl
jnp
andl
aad
data16
aaa
out
sub
sti
shrb
jg
shlw
jmp
cwtl
gs
adc
into
push
jecxz
cmpb
mov
pop
idivb
xchg
insb
mov
adc
cmp
inc
hlt
stos
gs
inc
imull
xor
clc
and
stc
jecxz
push
dec
imul
cmpsl
fbstp
test
not
dec
xchg
loope
cmp
je
and
sahf
and
or
or
push
jp
gs
aad
xor
test
imul
mov
cmp
sub
xor
sub
xlat
dec
xchg
push
gs
jb
int3
pop
ds
adc
adc
xchg
xor
sub
lds
and
jecxz
inc
xchg
int3
xchg
push
insb
mov
mov
pop
fbld
jmp
in
push
test
jecxz
fs
mov
fs
mov
insl
lret
xor
sub
sub
das
cmp
mov
mov
mov
mov
pop
outsl
mov
or
lcall
pop
sbb
or
inc
test
test
call
incl
adc
hlt
js
das
outsb
push
push
scas
leave
test
cmpsl
arpl
mov
pop
gs
mov
gs
xor
pop
int3
lahf
sbb
mov
test
add
mov
xchg
pop
gs
sub
gs
dec
out
enter
and
scas
mov
jb
gs
jmp
sub
sbb
sbb
adc
les
stos
je
nop
jne
lds
xor
push
cmc
loope
mov
dec
jne
ss
shll
aad
es
fnstsw
lods
pop
callw
fdivrp
pop
stos
dec
jecxz
std
jl
loope
mov
dec
das
sahf
ja
add
sub
lret
xor
fisubs
outsl
lea
mov
in
xor
in
es
jo
ja
popa
or
outsl
mov
fldt
pop
leave
fdivrs
or
adc
adc
rorl
movsb
cltd
sar
mov
cmp
push
lea
add
aad
mov
popa
int
out
add
xor
lods
imul
gs
out
push
test
cmpl
stos
in
lods
sbb
out
in
inc
push
data16
shll
jb
lock
mov
dec
enter
sub
idiv
push
push
and
mov
fstp
imul
jne
pop
mov
xor
jp
push
mov
and
je
sbb
dec
or
imul
gs
pop
jecxz
scas
aas
xchg
std
test
jge
and
cmp
mov
roll
pushf
dec
push
pop
mov
gs
popa
aas
mov
gs
add
stc
dec
lock
adcl
insb
cmp
fadd
gs
out
xchg
or
sub
fildl
push
xchg
jecxz
and
lods
in
jg
push
push
gs
std
aaa
repnz
jmp
pusha
push
or
xlat
sbb
das
dec
decb
mov
xchg
sbb
cli
bnd
imul
and
enter
adc
adc
cmp
xchg
movsb
in
mov
fwait
addr16
popa
rcl
mov
gs
push
jns
enter
imul
and
jl
push
xor
adc
popl
sbb
pop
and
outsb
popf
jns
movsb
push
dec
fwait
sti
jne
xor
gs
or
das
call
bound
repnz
push
dec
je
cmp
dec
sub
test
dec
jb
jmp
bnd
inc
ja
mov
jp
gs
fsubl
fcoms
loope
or
and
push
jl
mov
adc
xchg
scas
dec
gs
pop
add
loope
sbb
inc
xchg
cli
bound
leave
rclb
jecxz
add
or
cmp
loope
add
mov
pop
jnp
fildll
imul
sub
jnp
jecxz
in
jge
mov
aaa
and
sub
fcmovnbe
mov
and
or
sbb
and
outsl
daa
les
mov
addr16
popf
and
or
ljmp
add
enter
or
mov
push
loope
sub
jle
sbb
or
mov
test
fstps
sarl
xor
pop
ja
fcoms
push
adc
gs
jmp
xchg
xlat
ja
and
pop
mov
mov
repz
jb
push
gs
xor
inc
adc
pop
xor
in
test
mov
movsb
out
sbb
les
in
gs
ljmp
gs
data16
sub
mov
gs
in
pop
aam
inc
inc
loop
shrl
lock
lcall
add
gs
ljmp
gs
ss
and
xor
lea
and
stc
jnp
fwait
mov
cmp
or
int3
add
pop
dec
lea
jno
or
mov
cmp
gs
sbb
gs
fadd
or
push
adc
ja
pop
in
sub
jbe
enter
stos
sbbl
in
jp
sub
or
aam
popf
mov
mov
jb
stos
std
inc
pop
lods
add
xchg
xlat
or
mov
lods
rorl
push
popf
or
gs
xlat
mov
dec
in
xchg
bnd
lret
xor
inc
pop
gs
sub
gs
aam
dec
rep
pusha
gs
lea
mov
push
hlt
sbb
daa
ja
gs
mov
cmc
lret
sbb
subl
xchg
xchg
shll
fwait
std
in
jb
sub
dec
out
sbb
arpl
jo
hlt
push
stos
jnp
jno
test
push
fiaddl
add
cmp
outsb
xor
cmp
push
xchg
lock
loop
call
test
jecxz
movsb
dec
mov
dec
enter
stos
lea
aaa
adc
fiadds
repz
jns
push
or
adc
jo
mov
nop
addr16
cmp
and
mov
ret
xchg
xor
push
aas
es
scas
push
jmp
cmpsl
or
test
fwait
ret
mov
push
gs
daa
push
ja
push
push
enter
adc
pushf
insb
gs
sti
cmp
out
and
and
push
dec
adc
cwtl
loope
popf
or
insl
dec
mov
js
jl
arpl
inc
adc
mov
mov
leave
push
gs
ss
icebp
dec
lods
gs
xchg
sub
in
or
jne
adc
rorl
gs
js
pushl
dec
dec
cwtl
dec
call
gs
cmpsb
mov
fs
or
push
in
shll
jp
std
lret
and
add
mov
xchg
and
push
and
aaa
test
test
dec
sbb
pop
gs
icebp
sahf
hlt
outsb
jb
test
ljmp
xchg
jbe
gs
pop
and
cwtl
mov
jne
cltd
mov
arpl
bound
or
push
stos
test
setp
aas
mov
mov
js
adc
lret
sub
sarl
xchg
xlat
cmp
push
gs
push
xchg
push
sbb
mov
gs
or
test
stc
xchg
aam
outsl
gs
sbb
lock
adc
aas
jecxz
push
adc
lcall
sbb
hlt
sub
lds
sub
adc
subb
enter
gs
notb
mov
clc
adc
push
sbb
loope
cmpsl
nop
in
add
jg
fldenv
fwait
insl
pusha
jne
xchg
cmpsl
xchg
or
imul
mov
add
mov
push
push
js
loope
stos
mov
jle
bound
push
add
and
lds
pop
ss
mov
fldcw
ret
pushf
inc
sbb
gs
ficompl
les
add
cld
cmc
popf
das
push
inc
roll
mov
loopne
xor
gs
rcrl
push
add
gs
dec
cmp
iret
ficoml
jnp
mov
sub
inc
xor
js
insb
enter
sbb
test
lods
test
insl
in
imul
repnz
sbb
call
mov
jne
data16
cwtl
repnz
and
mov
jnp
mov
xlat
jns
scas
fdivs
push
loope
jg
stos
xchg
push
push
dec
mov
insb
adc
mov
stc
add
jae
inc
gs
jns
inc
mov
pop
adc
aad
xor
shl
pusha
and
jl
sbb
scas
aad
enter
scas
adc
jmp
cmp
lret
dec
shll
scas
out
inc
pop
ret
inc
leave
test
mov
and
fistpll
push
nop
mov
stos
or
mov
out
mov
out
hlt
sub
xchg
gs
jle
mov
arpl
cmpb
mov
gs
cmp
outsl
cltd
push
rcrl
insb
in
mov
xlat
lods
sbb
xor
gs
jmp
nop
jne
dec
and
mov
jp
dec
insl
in
movsb
sahf
jecxz
outsl
shrl
rcrb
adc
mov
inc
inc
nop
jae
gs
or
cwtl
lods
gs
aaa
pop
mov
fcmovb
fstpl
sub
adc
push
out
jne
cli
dec
ja
jecxz
jnp
das
std
jge
or
in
mov
sahf
jb
add
insb
xlat
sbb
stos
or
clc
hlt
test
pop
inc
push
call
sbb
test
fstpl
ret
fistl
gs
cld
push
jbe
dec
mov
pop
fisttpll
push
mov
stos
outsl
enter
sbb
push
aad
jno
jecxz,pt
arpl
jge
sti
pop
push
inc
jae
je
pop
in
pop
data16
cltd
ret
cwtl
adc
ljmp
push
and
int3
mov
gs
shr
sub
out
divl
jns
jno
and
inc
inc
ss
sbb
ffree
gs
les
cmc
sbb
mov
stos
sub
aad
and
cmpsb
jne
ret
gs
gs
and
shl
ret
outsb
out
in
mov
mov
inc
mov
cmp
add
repz
out
out
aam
mov
sub
pop
push
inc
push
adc
inc
cmp
out
gs
sub
shll
insl
sti
jp
lret
pop
push
push
adc
jecxz
sub
gs
aad
mov
xchg
into
mov
dec
and
mov
pusha
jne
and
and
fsub
cmp
pop
jecxz
inc
out
insl
sbb
mov
gs
mov
shlb
nop
jp
cld
fnsave
call
dec
jl
push
xchg
fs
dec
in
ljmp
sub
jg
les
sbb
jg
fstps
mov
int
push
cltd
test
push
jne
jle
push
add
cld
mov
mov
jb
cmp
add
mov
and
shll
inc
gs
aas
xor
jecxz
or
fwait
add
daa
add
or
ljmp
int3
testl
in
xor
inc
push
mov
scas
push
jae
js
or
push
test
lods
dec
insl
ret
cmp
lds
mov
or
mov
jmp
and
sub
sar
add
push
adc
shlb
adc
shrb
gs
nop
lret
or
xchg
mov
mov
and
sub
gs
xchg
xor
ret
stc
jg
jno
scas
lds
stos
pusha
push
pop
in
popa
enter
and
icebp
sub
ret
sbb
mov
insl
add
gs
xchg
movsb
jl
mov
sbb
adc
dec
in
icebp
adc
fwait
pop
loope
sahf
test
fs
std
xchg
lods
gs
xor
jno
adc
sbb
jnp
sbb
lds
bound
lods
fstpl
std
and
sub
insl
cmpb
in
adc
pop
pop
ss
mov
dec
and
sbb
lcall
scas
ds
xchg
or
in
lahf
fdivr
mov
jge
pop
sbb
pop
jns
je
loop
or
xchg
jge
cli
outsl
cwtl
push
jecxz
and
inc
mov
lret
rclb
pop
or
gs
sar
or
stos
loop
and
gs
lds
jae
xchg
into
rolb
gs
mov
lock
es
mov
in
jb
push
mov
jecxz
insb
pop
addr16
cmp
dec
loope
call
aas
mov
gs
cwtl
cmpsl
cmovo
gs
and
daa
iret
je
lods
cmp
jle
xchg
sbb
daa
sub
dec
add
cld
ljmp
ss
pop
call
ljmp
add
dec
cmp
adc
xchg
xor
dec
clc
nop
jecxz
or
sub
movsb
xchg
jo
gs
mov
and
std
ljmp
pushf
gs
xor
cmp
push
fsubrs
test
mov
arpl
outsb
sbb
and
sahf
or
sub
out
pop
push
adc
mov
xchg
bound
gs
sbb
pop
shll
mov
mov
into
push
sbb
add
lahf
jne
das
stc
dec
push
gs
jg
ss
repnz
jecxz
mov
pop
sub
out
or
pushf
arpl
xchg
lds
gs
sbb
jmp
test
idivl
push
rorl
pop
gs
loope
mov
add
dec
mov
nop
mov
xchg
aam
mov
arpl
andb
outsl
dec
cmp
xlat
jne
push
pmulhuw
xchg
inc
jl
outsl
sbb
and
shlb
mov
repnz
rcrb
jg
clc
jnp
xchg
or
arpl
ret
adc
xor
jle
int
fists
gs
add
pop
inc
sbb
cwtl
xchg
dec
jo
repz
push
and
test
nop
dec
add
dec
lss
shrl
aam
gs
push
adc
dec
xor
push
sbb
hlt
adc
imul
add
ljmp
mov
fwait
push
shrl
insb
lods
adc
jecxz
xchg
and
std
imul
gs
rcrb
in
jecxz
mov
mov
jne
lds
test
and
fbstp
ss
test
gs
pop
das
push
add
fs
gs
test
xor
hlt
lods
jnp
test
and
mov
cmp
call
stc
lahf
andl
xchg
and
mov
mov
jg
gs
stos
or
add
imul
mov
cmp
gs
pusha
call
in
mov
filds
aad
data16
xchg
gs
std
gs
cmp
imull
dec
outsb
mov
fdivl
cmp
gs
mov
push
xchg
mov
dec
or
xchg
gs
add
sbb
pop
sbb
jnp
lods
mov
lds
cmp
pop
icebp
jne,pn
mov
sub
insb
cld
test
dec
fldt
and
ds
insl
dec
push
outsl
subl
push
int
push
gs
fldt
icebp
gs
outsb
mull
andb
mov
gs
mov
push
gs
dec
inc
scas
sub
sti
mov
push
ret
dec
push
jnp
cli
in
add
stc
and
or
inc
insb
xor
mov
sbb
cli
inc
fists
sahf
sahf
sbb
push
add
cmp
sub
call
into
mov
push
popf
xchg
loope
std
push
gs
enter
aad
jo
dec
push
push
ret
cmpsb
sahf
sti
fisubrs
gs
sub
fcmovne
frstor
cmpps
or
jnp
jae
and
fbstp
test
mov
movl
arpl
jae
cwtl
mov
js
pop
lea
jmp
xchg
sub
dec
imul
jle
push
xchg
and
ljmp
andb
in
adc
cmc
gs
xor
adc
sti
gs
movsb
or
cmp
in
incl
pushf
add
sub
mov
adc
cmpsb
push
outsb
orl
aaa
shlb
and
inc
add
gs
cmp
cmpsl
call
jmp
imul
fs
sub
cli
les
les
inc
mov
dec
leave
gs
dec
sti
mov
rcrl
sbb
pop
pusha
roll
inc
fldenv
imul
mov
jg
rcr
std
popf
lret
loop
gs
cmp
cmp
popa
ret
gs
dec
and
mov
mov
mov
into
lock
in
out
lret
sub
stc
and
pushf
pop
fsubrs
sbb
mov
xor
in
gs
and
shl
push
ja
pop
xchg
mov
adc
lea
in
filds
mov
insb
imul
out
test
gs
sub
dec
jecxz
xchg
xor
lods
imul
xlat
inc
adc
jno
inc
add
shlb
fbld
je
gs
nop
pop
push
fdivl
adc
lcall
gs
pop
mov
leave
push
aas
loope
pop
mov
add
dec
mov
jb
fistpll
aaa
cmpsl
sbb
dec
mov
dec
shlb
jb
daa
push
outsb
mull
mov
mov
mov
xor
xor
adc
lock
nop
mov
pusha
int
xchg
popa
in
adc
clc
cmp
mov
rorw
faddp
and
inc
int
mov
test
test
sbb
mov
jecxz
js
lret
adc
mov
rorl
pop
dec
push
gs
jge
dec
sub
cli
pop
fstp
popf
ljmp
es
outsl
mov
dec
scas
aaa
sbb
xchg
jno
inc
iret
leave
mov
push
imul
add
in
xlat
mov
aaa
push
or
loope
pop
push
or
pop
ret
inc
das
dec
jb
imul
mov
sbb
add
stc
jp
and
bnd
xor
ret
jbe
scas
int3
imulb
gs
and
inc
pop
jo
jg
mov
arpl
out
gs
pop
xchg
gs
and
in
sbb
sbb
into
std
mov
sbb
push
or
repz
and
test
or
test
and
shll
rolb
push
mov
and
mov
mov
gs
sub
jnp
fsubr
jl
repnz
rcll
push
inc
sub
jg
mov
sbbl
inc
dec
aad
inc
in
pusha
dec
jne
jle
movsl
xor
fwait
xlat
mov
sbb
jecxz
shl
gs
out
je
sub
jne
dec
int
xchg
fwait
movsl
dec
gs
xchg
push
ljmp
negb
xorl
xor
jo
sub
inc
popl
rcl
out
sahf
or
cmp
mov
adc
push
fldenv
push
inc
adc
popa
jno
gs
rcll
mov
daa
gs
mov
outsl
push
dec
sahf
add
jo
and
lret
push
scas
jne
xlat
ja
fbstp
lahf
sub
gs
dec
idivb
xor
mov
and
mov
dec
jge
or
mov
gs
push
pop
std
push
arpl
or
leave
add
or
jecxz
jne
aas
sbb
jp
mov
lock
retw
es
scas
aas
aaa
dec
xchg
stos
int3
les
cmpsb
addr16
addl
shlb
adc
inc
gs
cmp
scas
scas
sbb
in
outsb
cmp
dec
js
out
jne
push
gs
dec
mov
add
ret
push
sarl
imul
jp
insb
mov
loop
push
sbb
es
repz
lret
lcall
add
sahf
daa
gs
jl
test
out
and
adcl
sbb
and
sub
xchg
or
mov
into
fisttps
jb
lods
or
jne
or
mov
aam
or
outsb
inc
mov
xchg
mov
or
gs
pushf
mov
dec
sbb
cmp
gs
jb
xlat
rolb
gs
or
adc
xchg
xchg
mov
ds
push
aaa
testb
push
aam
adc
mov
jle
xor
imul
and
mov
add
test
shrd
cmpsl
loop
sub
xchg
stos
movsb
scas
add
rorl
lret
idivb
dec
xor
dec
popf
xchg
xchg
jnp
gs
inc
call
negl
jp
xchg
pop
aad
inc
adc
inc
sbb
gs
lahf
scas
shl
or
lcall
and
adc
cwtl
loope
int
pop
add
mov
push
cmc
enter
andl
fsubl
fadds
fldenv
add
mov
inc
fidivrs
pop
sbb
add
sub
mov
fcoms
dec
push
into
cltd
cmp
sub
rorb
cmpb
jecxz
loope
dec
mov
inc
outsl
movsb
push
and
or
gs
cmp
and
cwtl
sub
mov
dec
and
je
hlt
loop,pn
lea
out
dec
imull
jecxz
add
fwait
jne
and
mov
add
inc
push
dec
jnp
rorb
outsl
and
das
mov
in
xchg
mov
xchg
push
and
fcomps
add
mov
inc
test
ds
push
and
loope
cmp
test
lahf
pop
imul
mov
cmc
lods
cmc
or
fs
push
gs
frstor
pusha
gs
adcl
mov
iret
clc
dec
cmp
mov
sbb
mov
pop
sub
mov
pop
and
in
out
icebp
test
sahf
jne
sub
cltd
jecxz
mov
sub
es
cs
jecxz
add
jbe
adc
ret
movsb
and
fnsave
xor
out
add
int
xchg
sub
mov
mov
mov
mov
xchg
push
pop
mov
lret
test
jecxz
jns
outsb
add
xorl
add
push
and
and
bound
jae
in
mov
stos
out
jb
notb
mov
push
mov
scas
imul
push
add
xorb
xor
cmp
mov
icebp
cmp
orl
adc
loopne
rcrb
sbb
sbb
sbb
xor
leave
sbbb
aaa
xlat
adc
cmpsl
fistl
pop
gs
sti
jl
push
fidivrl
gs
mov
cli
sbb
bound
gs
xor
test
cltd
in
xchg
jns
gs
in
insl
mov
xor
inc
jge
test
inc
jns
push
loopne
mov
push
dec
in
gs
mov
pop
add
dec
sub
fidivrs
adc
shrl
ljmp
cmp
pop
sub
xchg
xor
or
shll
and
pop
shl
subl
and
sub
and
and
aam
push
mov
xchg
popa
gs
xchg
int
std
jl
mov
push
or
gs
or
shll
arpl
test
pop
mov
push
xor
jnp
std
gs
fildll
sub
adc
shll
or
xchg
push
xchg
pop
gs
dec
jnp
add
or
out
sub
daa
pushf
xchg
jns
subb
gs
sbb
cmp
out
cltd
dec
fsubs
pop
test
adc
and
jbe
ljmp
gs
imul
gs
jno
lods
sbbb
js
adc
push
in
push
inc
les
inc
lea
cs
or
pop
cmp
add
in
cmp
or
dec
aaa
add
cmp
add
gs
mov
xor
mov
add
movsb
inc
xchg
int3
andl
sub
scas
xchg
cmp
mov
gs
sub
andb
sahf
jg
in
es
gs
push
mov
mov
xor
insb
out
ret
inc
inc
gs
push
testl
lds
outsl
std
ljmp
pop
rcrb
dec
insb
outsl
int
fs
mov
jp
jecxz
js
sbb
shrl
or
mov
mov
in
in
daa
loop
cmc
shll
mov
adc
shll
imul
dec
mov
gs
add
add
sbb
inc
ret
ficoml
cmp
xchg
cltd
dec
jns
dec
into
stc
and
scas
jl
je
ja
in
mov
inc
cmp
out
sub
call
aad
fstl
fcmovbe
push
test
fs
lods
sub
xor
cmpsl
adc
or
mov
ret
roll
in
mov
pop
push
adc
or
sahf
rcll
xchg
mov
lcall
pushf
hlt
lahf
xchg
test
add
faddl
cld
inc
and
dec
inc
inc
mov
popf
movsb
xchg
pusha
cwtl
gs
int3
enter
inc
cld
mov
in
or
sub
mov
gs
nop
fisttpll
mov
bound
cmp
or
push
xchg
dec
sar
mov
cmp
loopne
ret
std
mov
cmp
adc
push
xor
fwait
push
and
dec
sbb
jmp
gs
mov
cmp
gs
movsb
nop
lret
jge
cltd
mul
stc
cmpsl
lcall
jecxz
in
or
insl
dec
xchg
stos
mov
pop
dec
jp
out
xor
mov
sub
mov
mov
push
gs
leave
repnz
mulw
fisttpll
fstps
xchg
and
cmp
sbb
jmp
mov
xor
sub
xchg
sub
jns
lds
pop
je
dec
fcmovbe
jmp
mov
sub
shl
mov
mov
pop
or
in
cmp
test
imul
fmull
scas
orl
xchg
rcl
sub
lret
push
js
in
and
xchg
sub
mov
sbb
xlat
sbb
jmp
sbb
lcall
daa
pushf
inc
push
and
fimuls
jl
test
loop
xor
loope
push
sbb
subb
inc
cmp
gs
shrb
dec
ljmp
gs
ror
sahf
cmp
xchg
loop
jno
insb
out
loope
and
dec
cmp
jecxz
fs
rcl
mov
insl
test
inc
cwtl
sahf
ret
rcl
xchg
push
push
pop
adc
fisubs
stc
mov
xor
cmp
out
sbb
sbb
fnstcw
mov
nop
out
gs
cli
push
jp,pn
or
and
jb
or
push
sahf
fs
and
in
mov
shl
mov
fcmovnbe
add
mov
aad
outsl
ds
push
in
gs
gs
sbb
mov
or
in
adc
dec
mov
lahf
or
jecxz
mov
cmpsb
scas
stos
add
cmp
xchg
aas
sbb
andl
sub
lret
enter
addl
xchg
pop
iret
arpl
sbb
xchg
orl
cld
orb
nop
mov
jbe
mov
jmp
rclb
in
or
movsb
jecxz
pop
mov
xchg
sarb
je
and
add
xor
dec
and
nop
inc
rorb
jg
mov
fucomp
add
and
pop
xchg
jmp
pushf
movsb
leave
cmp
xor
insl
cmpsb
mov
pop
mov
into
es
aam
andl
gs
mov
incl
xchg
movsb
mov
and
mov
out
gs
std
xor
push
xchg
push
ja
gs
jg
or
inc
push
sub
test
adc
fs
fimull
and
outsb
cs
jno
test
jmp
cmp
cmc
or
mov
movb
push
push
push
ud0
gs
pop
adc
test
movsb
add
inc
gs
je
ret
xor
repnz
int
xor
jne
gs
jge
aad
fnstcw
pop
sub
ja
gs
outsb
push
popa
iret
jo
and
cmc
mov
pop
gs
cmpsl
in
mov
ja
scas
jmp
add
jno
mov
jmp
cld
xor
push
nop
adc
aas
lods
add
insb
mov
mov
mov
inc
jae
repnz
lahf
test
out
mov
gs
mov
jbe
loop
gs
repnz
lock
mov
call
shll
cmpl
mov
out
add
jecxz
jne
adc
ret
jg
scas
js
ljmp
outsb
shr
dec
test
cmp
pushf
lret
daa
iret
jae
mov
sahf
fcoms
int3
stc
push
outsl
fstps
gs
stos
dec
in
mov
scas
inc
outsb
jg
ljmp
gs
sub
mov
mov
rorl
adc
inc
in
fisubl
scas
push
mov
inc
gs
sbb
lods
push
push
gs
mov
shll
cmc
lods
scas
cmpsb
mov
mov
gs
pop
rcrl
into
or
mov
ret
mov
mov
ds
add
xor
gs
adc
sbb
mov
and
clc
xor
mov
mov
imul
jb
pop
pxor
sbb
mov
push
in
push
jmp
gs
ret
imul
mov
pcmpeqd
and
inc
iret
insl
cmp
pop
inc
inc
in
push
lock
ss
call
dec
enter
mulb
sub
insb
jecxz
or
and
xchg
sbb
pushf
push
cld
icebp
mov
xor
ja
push
jecxz
lds
pop
push
popf
mov
cli
mov
cltd
arpl
lahf
fwait
cmp
or
gs
pop
out
scas
and
adc
sahf
inc
shll
test
pop
lahf
dec
dec
mov
call
push
push
inc
gs
adc
and
out
push
in
loope
fwait
clc
fsubs
mov
gs
mov
inc
add
aad
jp
out
dec
gs
leave
ficoms
push
xchg
loopne
aad
jne
xchg
mov
sbb
cmp
in
xchg
push
gs
pop
adc
xor
test
pusha
dec
jmp
cmpl
pop
gs
jmp
dec
fbstp
lahf
gs
and
movsb
mov
test
sbb
and
push
movsl
gs
xor
cli
cld
add
gs
inc
inc
push
pop
mov
and
insb
xchg
inc
je
arpl
imull
lea
movsb
rorl
jecxz
jns
stc
lea
add
lods
in
mov
push
mov
jecxz
out
mov
push
scas
push
in
xchg
fwait
mov
idivl
cs
xchg
fsts
push
jge
and
in
gs
xlat
cwtl
xor
fnstsw
xchg
adcb
out
lret
popf
lds
outsl
push
test
mov
push
lds
repz
gs
adc
cmp
loopne
fucom
mov
imul
dec
push
push
jecxz
and
sbb
gs
cmp
es
andl
sbb
insb
stos
dec
and
cmc
aam
mov
pop
push
sahf
cmp
pop
xchg
fcmovu
loop
or
xchg
add
mov
outsb
dec
or
movsb
in
xchg
jle
push
jle
ret
sbb
push
ret
test
add
jne
pusha
loope
aaa
sti
and
lock
in
fdivrl
enter
icebp
fsubr
je
imull
pop
mov
in
jge
adc
ficoml
mov
sbb
fistps
add
gs
adc
mov
and
in
sahf
and
popa
push
sub
mov
rcl
gs
mov
xchg
inc
lahf
push
inc
gs
adc
shrl
gs
or
adc
insl
fwait
rcrl
out
mov
add
pop
push
gs
or
jg
outsl
mov
pop
sub
shll
in
inc
sbb
outsb
jb
and
adc
jle
jnp
and
loope
test
out
xchg
or
xor
dec
jp
test
sub
jne
mov
pop
arpl
jecxz
lret
pop
push
sahf
jno
cmp
adc
cmp
adc
jb
jbe
sub
and
out
je
push
sbb
mov
fldl
xlat
mov
cld
jecxz
pushf
and
add
jecxz
push
or
cmpsl
add
clc
cmp
push
stos
sbb
push
mov
xchg
insb
xabort
flds
mov
adc
ja
gs
cs
jmp
cmp
or
inc
roll
lock
mov
movl
mov
dec
ljmp
push
cmp
mov
push
rcrl
test
add
aad
lea
scas
push
inc
test
xor
xchg
inc
cmpsl
gs
add
cmp
lea
push
gs
dec
pop
xchg
sbb
sbb
mov
into
push
stc
mov
or
adc
leave
inc
test
dec
lret
cld
mov
aas
mov
cmc
jge
push
add
sbb
adc
xor
cmp
xchg
xchg
gs
push
repnz
hlt
mov
fbstp
or
int
rol
stos
in
mov
sahf
and
shll
cmp
into
es
and
xchg
push
push
xchg
gs
fwait
mov
cmpsb
lds
je
cmp
jbe
in
push
in
les
clc
xor
xchg
shl
shlb
jno
sbb
or
in
dec
xor
data16
push
xor
cwtl
push
fucom
scas
shl
test
jge
push
pop
and
lcall
ret
jo
outsl
aas
gs
in
inc
inc
jb
gs
xor
sbb
cld
rcrb
xchg
push
sbb
push
lret
loope
xchg
dec
dec
xchg
lahf
std
pop
cltd
ljmp
test
add
sbb
je
int3
pop
mull
mov
adc
lcall
pop
fmull
icebp
sti
fs
mov
inc
in
cmpsb
arpl
sbb
test
xor
out
cmp
sti
pop
pop
jecxz
je
push
jne
mov
shll
pop
cmc
mov
stos
inc
gs
nop
mov
pushf
fisubs
xchg
mov
je
gs
xor
and
addr16
and
roll
dec
fsubl
dec
cmpsl
inc
add
mov
mov
pop
je
les
ja
nop
shll
call
push
dec
stos
lods
iret
push
popa
enter
imul
push
mov
jae
adc
fsts
mov
pop
pop
sub
cmp
jo
out
fmull
test
mov
inc
and
mov
cli
xlat
add
rclb
pop
sahf
js
mov
aam
gs
sub
mov
cmp
and
in
jnp
dec
and
je
add
xchg
gs
push
inc
push
shll
in
negl
fstpl
xor
or
loope
push
out
push
sbb
sti
dec
sub
cmp
addr16
jg
gs
cmpsl
or
ja
cli
out
gs
mov
gs
cmpb
roll
adc
adc
sbb
xchg
adc
mov
jne
sub
jle
test
ret
enter
stc
xchg
call
gs
sub
or
scas
gs
icebp
sub
lock
dec
ret
pop
jo
mov
and
mov
jae
mov
mov
repz
loop
inc
or
test
jnp
inc
arpl
lret
loopne
enter
insl
xor
imul
in
or
movsl
jne
lds
push
loopne
mov
add
mov
divl
stos
adc
nop
int3
cltd
aaa
outsb
gs
sahf
js
or
jnp
shlb
cmp
aam
cmp
gs
push
add
repnz
call
pusha
pop
test
jb
jge
or
adc
sahf
jecxz
push
mov
push
sub
and
adc
mov
sub
cmp
inc
xlat
mov
mov
sbb
add
popa
and
push
cmp
xchg
shll
gs
pop
mov
sahf
cwtl
xchg
mov
mov
and
addr16
and
jmp
cs
mov
mov
cmp
sti
cmpsl
cmp
gs
or
mov
xlat
adcl
aas
adc
jae
lock
dec
xchg
je
pop
mov
gs
pushl
add
inc
rcl
gs
dec
push
xchg
xor
sbb
adc
fisttps
in
dec
loope
cmp
decb
add
lock
sub
lahf
mov
stos
call
mov
fwait
push
lcall
jp
xchg
lds
pushf
pusha
mov
push
gs
ljmp
mov
pushf
enter
push
addl
xor
lret
fs
arpl
loop
insb
adc
mov
and
aad
loope
inc
xchg
cmpsb
fs
bound
int3
gs
pop
iret
mov
sub
xchg
sbb
jmp
ljmp
push
sarl
push
jecxz
mov
out
jo
push
adc
test
clc
ljmp
gs
push
mov
pop
add
cmp
ficoml
inc
and
aas
aad
jecxz
movsl
jne
cmp
xor
imulb
in
jmp
inc
jg
sub
stc
gs
sbb
add
mov
gs
pusha
mov
icebp
das
loope
mov
push
xchg
xchg
nop
xchg
or
gs
push
jno
and
loopne
sub
lret
out
or
test
mov
mov
pusha
bound
xor
push
scas
rolb
pop
jo
mov
inc
loope
cmp
jne
lret
cmp
gs
fdivl
push
outsl
in
or
pusha
jnp
fsubrs
test
cmp
scas
aad
mov
gs
mov
js
gs
jg
dec
or
gs
leave
xacquire
rolb
mov
sub
out
mov
shll
jge
or
mov
gs
adc
xor
insb
add
inc
sub
cmp
mov
andl
inc
dec
ja
shl
fisubrs
clc
dec
and
jmp
cld
gs
mov
lods
or
mov
dec
sbb
aaa
ja
mov
sbb
lods
ljmp
mov
outsl
sbb
jbe
rcll
mov
shrl
adc
fcompl
mov
daa
pop
and
cmp
gs
jb
scas
inc
jle
sub
sub
aam
test
push
cld
jo
fildl
jmp
data16
dec
jns
jecxz
mov
adc
push
pop
gs
pushfw
sahf
lret
mov
jge
xlat
call
cmp
sub
std
xor
rolb
rcl
adc
repnz
xchg
js
push
shlb
ficomps
xchg
jne
pshufw
aam
in
lahf
sbb
out
cmp
int3
jmp
xchg
loope
inc
add
cmp
jl
pop
sti
xchg
xchg
inc
push
inc
jbe
push
jmp
sti
pushf
and
xchg
nop
gs
sbb
and
fildll
fdivl
jge
xchg
arpl
test
fwait
lock
pop
push
sarb
push
aad
mov
xor
xchg
xorb
out
cmpsl
mov
dec
enter
stc
mov
loopne
push
outsb
cld
xchg
pop
shlb
sub
data16
inc
lret
gs
scas
sbb
sbb
je
fs
gs
stc
imul
add
fsts
pop
pop
aad
je
ds
aaa
dec
push
adc
data16
jne
xchg
jge
xchg
in
test
cld
pop
and
jbe
pushf
xchg
outsb
sbb
shlb
scas
fs
dec
nopl
xchg
push
imul
dec
aad
jl
mov
gs
int
cmpsb
push
cltd
jp
insl
gs
xchg
call
xchg
sub
and
pop
cs
out
insl
mov
out
lods
cmp
fsubp
jecxz
dec
pop
into
movsb
pop
fldcw
sbb
push
jecxz
fwait
dec
pop
nop
mov
imul
sbb
dec
outsb
push
sbb
call
jne
add
rcl
and
cs
or
lea
sub
sbb
pop
add
pop
int
mov
repnz
in
sub
mov
jle
mov
das
mov
push
push
mov
imul
repnz
fucomip
lea
xchg
cmpl
sub
gs
push
popa
and
jecxz
imul
stos
cmp
jnp
mov
mov
xchg
test
test
gs
lahf
aad
push
mull
jo
ja
mov
or
sub
jge
jae
xchg
popf
push
xchg
jns
gs
jp
inc
inc
add
daa
testb
jmp
xor
dec
mov
pop
jbe
test
mov
cmc
sub
in
fimuls
mov
xchg
aad
pop
ljmp
adc
sbbl
jo
insl
mov
xchg
jge
jne
jg
clc
ss
xchg
gs
and
xor
mov
xchg
fisubl
ss
popf
mov
lret
and
or
gs
ret
aad
out
gs
jge
jb
jle
push
fists
dec
mov
data16
or
xor
loopne
data16
sub
subl
daa
sub
dec
mov
data16
add
mov
ja
loop
mov
sub
rcll
mov
cmp
add
inc
jo
pop
int
in
mov
gs
push
jmp
hlt
xor
scas
imul
cmp
add
fidivrs
mov
loope
sub
jne
jo
push
adc
incl
mov
shll
add
jg
enter
das
daa
mov
push
dec
add
rcll
cmp
jecxz
jno
gs
lret
jl
jmp
cmpsb
jnp
rcll
inc
gs
and
adcl
add
sbb
push
gs
lahf
push
mov
pop
test
pop
gs
jb
in
inc
jl
lods
ds
movsb
push
shll
xlat
pop
xchg
shrb
pop
loop
mov
sarl
pop
sub
add
popa
mov
pop
push
icebp
mov
in
enter
inc
push
dec
es
mov
rolb
xchg
jae
lods
or
mov
fnstsw
ja
gs
and
and
in
sub
xor
js
inc
cmc
cs
bound
cmp
leave
aam
mov
cwtl
in
sub
push
data16
loope
ljmp
push
jg
inc
dec
dec
shl
or
jb
es
and
mov
lea
mov
fucomp
out
push
ja
call
out
in
and
mov
out
addr16
inc
loopne
and
popf
mov
aam
mov
imul
or
sahf
jo
and
mov
rcrb
ret
inc
sbb
gs
fcoms
xchg
aad
icebp
lods
jbe
mov
fisubrl
dec
fildll
gs
mov
gs
ret
rol
sub
ror
mov
cmp
pop
push
push
and
pop
test
cmp
inc
xor
push
xor
imulb
dec
lds
out
lods
shll
xchg
mov
jne
lret
shl
lods
add
test
mov
hlt
sbb
dec
push
mov
xchg
es
gs
push
lahf
mov
inc
insl
adc
sub
imul
int
mov
test
cs
gs
sub
ds
or
mov
adc
loopne
mov
sub
iret
gs
lock
std
shll
and
loope
add
jo
cmp
gs
popf
sub
sbb
lcall
clc
jge
lcall
lock
push
int
out
dec
mov
or
insb
jnp
ljmp
sti
sahf
dec
or
push
mov
push
jb
filds
cld
std
gs
lahf
mov
addr16
add
pushf
xlat
lock
jl
mov
fnstsw
pushf
mul
hlt
push
pop
mov
jns
and
out
pop
lea
mov
sbb
sbb
gs
test
out
aas
mov
mov
mov
shr
gs
pop
scas
push
sub
push
gs
pop
lock
cmp
push
push
pop
stc
loope
outsb
mov
into
je
lcall
jmp
adc
test
and
mov
xchg
lret
nop
gs
jb
std
pop
in
xor
jg
fstpl
push
stos
push
stos
gs
jmp
repnz
sbb
in
cltd
gs
pop
scas
xlat
fs
push
jecxz
or
mov
iret
je
cmp
call
sub
aas
pop
or
xchg
jne
push
sbb
jle
mov
xchg
cli
int3
mov
loop
ja
add
gs
cmp
scas
lret
and
popf
push
lods
insl
outsb
xchg
pushf
pop
nop
push
inc
or
inc
loopne
fs
cwtl
icebp
push
enter
or
jecxz
fldenv
xor
pop
xor
cmpsl
and
cmp
packssdw
icebp
in
sbb
imul
mov
out
gs
push
mov
inc
jmp
jne
mov
rol
and
dec
arpl
loope
mov
scas
in
add
jp
in
pop
sahf
pop
xlat
fisubl
call
dec
cmp
pop
xchg
push
in
add
lret
or
jno
das
testb
inc
pop
addl
xchg
clc
jp
sub
or
ret
gs
lds
adc
cmp
cld
subb
gs
in
pop
xchg
cmp
decl
push
pop
sbb
adc
daa
pop
lods
jns
inc
outsl
int
gs
xchg
pop
ja
jecxz
jp
mov
sbb
loop
shrb
cmp
jl
idivl
jl
cld
push
jmp
and
jbe
ja
jmp
gs
push
mov
out
mov
pusha
out
mov
in
das
loopne
dec
outsb
mov
cld
inc
arpl
cli
test
jns
loope
xchg
test
mov
bound
mov
gs
loopne
mov
push
push
aam
push
xorl
stos
ss
shll
dec
pop
inc
ljmp
popf
inc
pop
gs
out
xchg
lods
scas
push
test
gs
cli
jecxz
add
push
add
imul
xchg
aad
gs
mov
lret
adc
ret
jmp
jmp
ljmp
leave
loope
mov
xchg
ds
shlb
gs
enter
lea
rorl
gs
push
xchg
cmc
enter
gs
xlat
and
pushw
gs
push
and
loopne
fucomi
in
ljmp
gs
mov
adc
sub
adc
loope
adc
jge
xor
fwait
ds
xor
xchg
fldl
cmc
popl
loop
mov
int3
gs
ljmp
mov
push
fmull
lock
in
mov
push
aaa
insb
mov
js
xchg
gs
div
decb
sahf
cmp
add
mov
negl
dec
les
push
lds
and
into
mov
popf
pop
fcomp
inc
jp
dec
sub
je
adc
sti
xorl
xor
xchg
das
pop
and
or
test
push
sbb
enter
out
jae
icebp
jno
outsb
cs
add
movsb
push
jns
stos
mov
mov
dec
lds
push
aas
fwait
stos
gs
xor
out
gs
or
orl
lahf
push
mov
shll
mov
jg
outsb
adc
ja
gs
sub
push
jle
cs
adc
or
fstpt
fdivs
dec
sub
sbb
add
lahf
mov
pop
xchg
jmp
shlb
rcrl
push
ficoms
gs
lock
ja
mov
cmp
mulb
repz
mov
in
sub
ret
push
int3
gs
test
pushf
mov
xchg
or
repz
dec
dec
pusha
mov
out
pop
cmp
pop
inc
ss
movd
add
dec
sub
inc
je
dec
dec
ds
ret
mov
shrl
gs
in
lock
push
movsb
call
fst
jne
out
xor
sbb
cmpsl
pop
das
lods
mov
sbb
adc
pop
xor
out
faddp
pop
mov
jl
sahf
std
and
and
jmp
inc
test
sarl
jb
les
pop
out
sbb
shll
inc
sub
cmp
push
aad
dec
mov
orb
mul
outsl
jecxz
mov
lods
stos
xor
out
imul
dec
jns
pop
inc
gs
mov
xor
sbb
lds
cmp
insb
add
jl
fiadds
gs
in
xchg
mov
test
adc
shlb
sbb
jl
xchg
cmc
fisubl
out
push
cmp
rolb
sub
or
xor
sub
aaa
sbb
add
push
gs
adcb
inc
mov
xor
cmp
gs
out
testl
add
xchg
jne
rclb
gs
mov
cmpb
mov
aad
or
push
pop
mov
jg
loop
or
or
insl
xchg
add
jns
inc
prefetch
lahf
xchg
or
cmp
repnz
nop
fdivs
iret
and
jnp
mov
push
pusha
out
push
gs
fdivrs
daa
and
mov
in
pop
mul
gs
jae
shrb
mov
mov
dec
sub
push
mov
pop
test
stos
fstpt
icebp
outsl
mov
ss
dec
clc
xchg
pusha
or
sbb
gs
or
les
test
jno
xor
aas
popf
out
fcomps
cmp
filds
gs
pop
in
insl
les
sub
sbb
lret
pushf
ds
lock
shll
mov
call
arpl
lds
out
pop
stos
test
divb
ja
gs
dec
push
add
cmp
xchg
adcb
push
std
or
addr16
or
test
gs
jl
xorl
lods
test
adc
jg
orw
int
out
addr16
mov
js
repz
sahf
and
dec
aad
test
fxch
fsubl
sub
add
lock
gs
call
xor
or
stc
xor
xchg
call
ljmp
pusha
mov
xchg
mov
std
test
xlat
bound
cwtl
stos
test
or
adc
sarl
sbb
xor
iret
and
shlb
pop
inc
dec
daa
mov
loope
mov
or
cli
or
imul
ffreep
into
in
sahf
sbb
jp
sub
sbb
into
gs
lcall
pop
pushf
movsb
test
add
cld
cli
gs
sub
push
gs
pop
loope
notl
out
lahf
or
and
cmp
jge
in
call
sbb
adc
jo
gs
cmp
js
ss
mov
adc
push
shll
gs
mov
push
cmp
pop
ja
or
out
data16
in
lods
gs
jp
push
dec
mov
push
test
std
pop
fs
inc
jl
mov
insl
sbb
shl
imul
inc
mulb
ja
cmpl
jecxz
push
adc
lock
xor
popf
ljmp
cmpsl
popf
dec
cmc
jl
scas
test
enter
push
jno
rclb
gs
stos
int3
lds
inc
jns
push
setbe
mov
insl
imul
test
jmp
lcall
cmp
sub
xchg
test
lock
aas
in
jecxz
pop
pushf
jns
in
adc
lods
das
addr16
gs
int
dec
xlat
lea
mov
mov
jge
pop
andb
mov
mov
into
jg
fsubrp
loop
gs
lods
sub
adc
jmp
out
nop
test
fsubs
add
js
loope
xchg
cmp
and
gs
arpl
and
xor
mov
cmpsb
into
mov
movb
xchg
mov
xchg
gs
and
mov
pop
and
mov
imul
jg
cmpsl
loop
xchg
je,pn
push
scas
adc
and
mov
sub
push
xchg
inc
mov
inc
shrl
and
or
dec
jecxz
pop
imulb
fistl
fsubl
das
push
add
pop
push
gs
inc
mov
push
dec
jl
call
retw
aaa
popf
rorl
pushf
jle
jae
dec
push
mov
stc
lock
xor
jne
scas
sub
mov
mov
stos
push
loop
add
cmp
imul
aad
push
and
insl
fistpll
insl
push
sbb
stos
sti
push
sub
pop
gs
rcll
jo
jne
and
add
push
pop
ljmp
inc
jb
popf
mov
xchg
lods
jo
mov
sub
in
imul
mov
outsl
adc
mov
sub
mov
push
jne
cmc
movsb
fisttpll
scas
out
add
fs
in
dec
inc
test
mov
push
das
je
inc
in
jg
sbb
sbb
test
out
cwtl
std
pop
and
mov
mov
fdivs
mov
xchg
fildl
jne
xchg
mov
sub
and
add
bsr
xchg
lret
gs
lods
aam
gs
push
inc
fs
rolb
jp
xor
push
andb
cltd
in
pop
sbb
mov
jo
jno
ss
into
dec
cld
test
out
sahf
mov
add
icebp
mov
xchg
adc
in
xor
gs
pop
shl
mov
les
mov
jnp
push
inc
sahf
adc
or
scas
in
iret
imulb
hlt
in
pop
sbb
rcrl
pop
aad
in
int3
in
inc
jae
xor
mov
scas
dec
popa
dec
xor
add
aaa
jmp
pop
movsb
fisttpl
stos
clc
mov
test
rorb
fs
push
dec
repz
jns
mov
gs
pop
nop
or
je
out
push
add
enter
xchg
adc
pop
cmc
sbb
push
pop
mov
add
mov
adc
test
daa
sub
icebp
cmp
gs
lock
or
fcoms
gs
jge
pushf
xchg
mov
popf
push
or
push
stc
std
mov
push
call
mov
popf
pushl
gs
xchg
fisttpll
jmp
gs
xchg
dec
cmp
gs
sbb
sub
inc
jecxz
pop
call
bound
out
imul
cld
jge
cmpsl
neg
inc
mov
mov
scas
xchg
gs
sub
inc
imul
mov
pop
bound
sbb
test
dec
push
gs
lock
jae
test
push
gs
aas
stos
sahf
cmp
out
aad
jle
adc
jecxz
jbe
call
or
aad
dec
xchg
push
lret
pop
cs
inc
int3
add
gs
loope
fcoml
inc
add
in
dec
pop
adc
pusha
imul
and
push
push
pop
aad
jl
aas
dec
mov
jecxz
inc
jp
jge
shr
gs
lds
lods
stos
or
cmpsb
jecxz
adc
adc
sbb
mov
pop
dec
and
and
cli
inc
jg
cmp
add
adc
out
in
and
xor
in
jmp
jge
and
inc
sub
mov
push
xchg
ja
fisubs
gs
adc
sub
push
jp
and
pop
inc
outsl
dec
inc
xor
es
outsb
scas
leave
push
lret
pop
or
imul
add
jae
and
jns
stc
xchg
icebp
gs
lods
jle
insl
xlat
gs
lcall
sbb
push
push
cmp
and
xchg
push
or
gs
push
xchg
aaa
lahf
jecxz
lock
fbstp
push
aam
push
sbbl
ljmp
andl
imul
gs
mov
mov
sbb
cmp
gs
lds
fstpt
cs
or
pusha
and
rcrb
push
push
xor
insl
fisubs
clc
dec
ljmp
mov
lahf
in
cltd
xor
aad
fdivs
and
icebp
cmc
sbb
imul
ret
adc
test
adc
mov
ja
stc
hlt
mov
push
add
out
insl
mov
xor
js
outsb
adcl
xor
or
xchg
pop
and
shl
jb
push
gs
add
sub
jle
push
mov
inc
lcall
adc
pop
mov
inc
xchg
orb
adc
pop
in
push
idivb
mov
dec
addb
dec
gs
in
data16
or
lds
mov
iret
gs
mov
xor
push
sti
pop
dec
lea
cmpsb
xchg
shll
or
inc
rcll
ret
in
sub
pop
scas
outsl
gs
push
adc
shlb
gs
dec
pushf
js
push
gs
or
xchg
fdivl
cmp
enter
insl
inc
cs
xorl
into
sub
jmp
adc
xor
gs
add
pop
aam
cmc
fbld
jne
dec
lcall
jmp
mov
or
ret
imul
dec
sbb
decb
fisttpll
mov
cs
in
or
jns
pop
inc
pusha
and
pushf
mov
lcall
jmp
repnz
push
xchg
data16
rcr
lea
sahf
push
cmc
jne
into
test
data16
sbb
imul
outsb
sub
test
jp
in
push
jecxz
gs
push
xchg
gs
rorb
xor
ret
daa
vmovhps
sub
gs
sub
loop
pop
mov
test
out
mov
and
inc
sub
mov
test
lds
cwtl
gs
mov
and
or
jp
int3
mov
sbb
clc
mov
icebp
loop
adc
mov
repnz
pop
gs
xor
cwtl
add
push
lahf
ret
mov
mov
leave
mov
mov
movsb
sbb
inc
xchg
sbb
fwait
shrl
rorb
xor
add
lret
lea
and
ljmp
mov
push
jmp
lods
mov
sub
nop
outsb
mov
call
loop
cmp
rol
or
addb
fs
pushf
sti
or
gs
mov
pop
test
cmpsl
dec
sub
adc
jecxz
sbb
enter
in
call
mov
jne
pop
pusha
fs
and
sbb
imul
adc
and
ja
or
sti
ret
repz
fimull
jge
add
jae
lret
fs
mov
pop
xor
outsl
sarb
sahf
gs
mov
lods
enter
loope
jp
dec
jne
pop
sub
sahf
adc
jnp
jge
gs
in
popf
cmp
lods
stos
jo
jbe
jae,pn
mov
push
and
xchg
sub
cwtl
xor
mov
adc
jne
nop
dec
mov
xlat
xchg
sarl
gs
aad
mov
pop
xor
jl
ret
jae
pop
mull
jbe
adc
out
dec
mov
push
lock
scas
jge
dec
gs
cs
cmp
push
gs
rsqrtps
push
rcl
outsl
in
adc
dec
fcomps
adc
out
and
gs
loop
sbb
dec
gs
outsl
ss
inc
adc
popa
mov
cmc
inc
es
loopne
imulb
leave
jne
out
xchg
in
imul
ret
mov
in
jmp
imul
sbb
xchg
lcall
cmp
push
adc
loope
xor
aam
lea
pop
push
int3
fldl
jmp
test
notb
ss
cmp
ljmp
sbb
cmp
gs
adc
mov
lret
xchg
inc
inc
in
loopne
pop
icebp
arpl
out
mov
int3
stos
fucom
or
adc
mov
add
xor
xor
test
ret
push
push
daa
test
add
fistpl
mov
mov
or
dec
add
jg
pushf
xchg
lods
xchg
aaa
loope
cs
gs
push
and
jnp
mov
adc
dec
iret
pop
xchg
insl
jmp
or
pop
arpl
xor
pop
test
stos
cmpb
dec
push
sub
push
fldl
test
cmp
lret
push
cmc
leave
mov
sub
lock
ficomps
fadds
mov
repnz
push
sahf
cmpsl
and
data16
xchg
sub
mov
aaa
stos
mov
out
or
xor
into
push
jne
pop
xorl
aad
jae
mov
imul
lods
arpl
mov
dec
xor
cmc
jo
sahf
cltd
or
dec
rclb
inc
iret
inc
fs
mov
les
xchg
movsl
xor
ja
shl
mov
gs
adc
jns
xor
jnp
jecxz
out
dec
sub
mov
ljmp
fsubs
xchg
xchg
and
inc
cmpsl
sti
xor
test
shlb
sub
bound
jns
cmp
int3
gs
aaa
testl
lds
cmpsb
repnz
fwait
sub
sbb
hlt
andb
push
lock
rcl
bound
sahf
pop
dec
or
outsb
lods
clc
jg
imul
rclb
gs
out
mov
dec
sub
rorb
add
xorl
adc
gs
jnp
add
out
int3
fnstsw
jne
iret
scas
jo
push
sbb
in
loop
ret
fcomps
inc
pop
or
insl
inc
adc
into
jns
test
scas
mov
in
shl
mov
imul
add
jb
xchg
and
std
imull
inc
sub
lods
mov
lret
gs
and
cli
out
and
gs
jnp
xor
xor
shll
mov
and
or
and
mov
test
mov
dec
lea
je
shll
mulb
inc
sub
mov
popa
xor
gs
ja
stc
pusha
pop
ret
gs
and
insb
cli
jge
mov
fdivrl
addr16
enter
push
mov
jbe
out
mov
fwait
jae
outsl
cltd
jmp
into
ss
in
hlt
or
mov
xchg
lods
mov
lahf
stos
test
cmp
xchg
aas
adc
imul
aaa
aad
pop
xor
adc
jmp
fisubrs
jno
gs
cmp
and
xor
in
js
cs
inc
ljmp
fldl
mov
daa
add
faddl
lds
lock
sub
jmp
mov
std
mov
sub
mov
scas
roll
fisttpll
jnp
jno
testl
gs
cs
and
dec
rolb
iret
test
add
jae
xor
push
scas
fildl
pcmpeqb
popf
adc
sub
and
and
int3
add
shrl
pop
and
lret
jae
jp
or
aaa
loop
dec
cmpl
and
push
and
inc
mov
repnz
in
movsb
jg
fdivrs
push
xor
jae
movsb
dec
mov
jne
fmulp
mov
xchg
popa
shrl
mov
decb
mov
cld
pop
xchg
xor
int
in
imul
stos
xor
call
push
fiadds
jp
jae
gs
pop
pop
push
sahf
fdiv
bound
mov
pop
xchg
xor
aaa
jecxz
hlt
jae
or
jnp
std
and
popf
sbb
jno
in
jecxz
mov
push
sub
scas
jb
in
icebp
mov
mov
jno
xor
stos
icebp
push
ss
es
and
fcmovu
sbb
test
mov
jge
inc
cli
gs
dec
push
and
lods
ljmp
add
and
stos
outsl
sub
fsubl
adc
shlb
and
in
gs
jge
push
insl
loope
sbb
js
jae
test
mov
lret
iret
xor
adc
mov
cmp
lcall
roll
xor
push
cmc
out
in
gs
rorb
ror
jmp
fwait
pop
stos
cli
outsb
inc
sbb
pusha
sub
sub
shll
movsb
in
in
sahf
mov
gs
cmpsb
mov
push
jbe
loope
push
pop
enter
xchg
and
add
mov
xchg
push
mov
gs
aaa
scas
xchg
xchg
mov
gs
push
adc
or
jno
int3
enter
fisttpll
popa
jle
outsb
pop
mov
mov
pop
add
jge
outsb
outsl
pushf
mov
and
dec
std
mov
shlb
xchg
gs
mov
and
and
jo
jl
jecxz
adc
nop
out
and
fidivl
pop
ss
out
cmpsb
push
nop
mov
stos
mov
outsb
in
fs
in
gs
adc
adc
sub
xchg
ljmp
lds
xchg
lods
call
mov
adc
jecxz
fwait
aaa
mov
sub
push
lahf
jge
xchg
gs
mov
mov
xor
xchg
aad
mov
or
dec
imul
cmp
rcll
mov
pushf
es
test
mov
and
iret
gs
xchg
jecxz
and
popf
enter
loope
mov
xor
dec
jnp
test
inc
js
gs
dec
push
pop
jno
clc
pop
jns
mov
fisubl
inc
add
add
into
imul
repz
mov
push
rorb
sahf
dec
sub
inc
pop
jb
add
in
jecxz
mov
mov
lock
sti
jl
sbb
pop
push
int
aas
or
fwait
cli
imul
test
and
cmp
and
sub
arpl
std
mov
test
xor
and
jmp
cmc
sub
rcrl
cltd
add
push
jecxz
insb
push
movsb
jno
and
popf
gs
mov
push
gs
scas
mov
xchg
fwait
dec
gs
lods
aad
out
jo
add
sahf
xor
loopne
imul
jle
enter
gs
in
push
xchg
adc
gs
test
xlat
mov
dec
js
int
cmp
push
mov
mov
mov
inc
scas
adc
pop
sti
lds
or
bound
mov
lcall
mov
pop
sahf
push
rcrl
pusha
push
cmc
add
js
in
lcall
xchg
out
das
pop
gs
pop
jmp
adc
pop
sub
jne
ss
and
xor
jb
adc
jne
inc
dec
lds
dec
and
adc
aam
shll
xlat
repz
jo
dec
sbb
lret
inc
test
xor
push
sbb
pop
pushl
mov
push
fidivs
maskmovq
loopne
cmp
or
gs
jns
mov
xchg
call
add
push
jne
aad
mov
call
cmp
or
jae
xchg
jecxz
and
gs
jns
and
cmpsb
adc
insb
mov
jecxz
pop
mov
mov
add
or
push
add
pushf
subb
sbb
sub
lods
jno
sub
gs
add
mov
stos
leave
int3
pop
push
rorl
or
cs
insl
sar
imul
loopne
sub
gs
addr16
les
xor
or
arpl
std
sti
xchg
popf
inc
stos
lret
pop
lahf
and
ljmp
push
and
pop
xor
cs
call
jb
dec
gs
xchg
int3
jae
push
sub
inc
clc
cmp
pop
lods
adc
dec
xchg
mov
repz
scas
adc
adc
aam
ret
gs
leave
add
dec
push
xchg
jge
inc
test
xchg
add
mov
and
lea
add
cltd
inc
push
das
cmpl
sbb
push
pop
push
pushf
add
in
xor
aad
push
jne
pop
sbb
gs
pusha
inc
sbb
dec
jge
cmp
arpl
iret
dec
jmp
cld
xor
lods
insl
shl
xchg
call
out
jge
dec
cmpb
push
inc
cmc
mov
xchg
add
cltd
push
sbb
subl
inc
xchg
lods
sbb
and
lret
jb
insl
mov
ret
fdiv
gs
aad
push
int3
cmp
and
or
push
or
nop
inc
daa
insl
cmp
mov
std
mov
xor
scas
add
stos
and
sub
jge
int3
cmp
gs
push
mov
mov
dec
push
gs
sub
dec
sbb
mov
pop
pop
adc
adc
loopne
fwait
subb
clc
sub
rcll
adc
daa
push
mov
mov
sub
shl
xor
sbb
shrl
push
cmp
sub
pop
out
jo
mov
out
jo
stos
mov
adc
incb
arpl
jo
rol
mov
or
sub
xchg
pop
aad
inc
xchg
pushf
pop
iret
lret
in
mov
insl
int3
test
lods
test
inc
cwtl
imul
ss
xchg
mov
mov
pop
dec
lods
imul
mov
cmpsl
ljmp
inc
hlt
dec
dec
mov
adc
xor
fcoms
push
cmp
addl
cld
imul
gs
sub
add
mov
and
push
lahf
adc
jg
sbb
aad
xlat
xor
out
int
in
jo
loop
sarl
push
mov
out
ret
stc
dec
fwait
int
ja
mov
pop
notb
sub
pop
into
shll
lock
dec
je
and
lret
test
in
dec
lods
pop
mov
outsb
cmp
fwait
xchg
push
pop
ja
push
add
mov
pop
mov
test
mov
test
in
in
dec
cmp
push
enter
adc
nop
fisttps
pop
in
sub
das
movsl
cltd
pop
ret
lret
sub
mov
mov
pop
dec
cmp
mov
dec
ficoml
jl
gs
stos
sbb
lret
jns
addl
adc
sub
ret
mov
leave
fdivrp
xor
das
jecxz
or
sub
gs
inc
inc
xchg
rorb
sahf
jecxz
frstor
enter
sbb
stos
mov
mov
inc
mov
xor
mov
sbb
xlat
jge
cmp
cmpl
jg
adc
ljmp
mov
iret
fdivs
pop
gs
xor
mull
mov
imul
gs
movsb
loopne
xchg
in
adc
bswap
cltd
ja
push
fsubs
mov
xor
and
aas
test
movsb
addr16
pusha
xchg
popf
mov
jl
or
into
mov
sbb
outsb
cmpsb
rorl
jl
fsubp
xchg
dec
mov
mov
pop
add
fidivrl
or
adc
ljmp
and
jns
mov
sbb
and
aam
xchg
dec
cltd
insb
pmaddwd
gs
out
push
movsb
into
lods
fadds
pop
loop
mov
std
sbb
xchg
mov
outsb
sub
in
scas
aas
cs
jno
enter
sahf
or
jmp
ja
and
push
xor
jb
dec
sbb
or
pop
add
dec
jnp
outsl
aad
add
gs
push
test
fcmovb
mov
leave
push
mulb
lods
ds
and
rcrl
je
mov
and
pop
adc
add
add
scas
mov
sarl
jmp
cmp
dec
sbb
cwtl
stos
rcll
push
les
cmp
sub
aaa
and
ret
je
cld
gs
inc
mov
jne
add
xor
mov
xor
stos
negl
lods
int3
gs
sbb
in
loope
out
mov
sbb
shll
call
js
andl
or
sub
and
dec
push
inc
enter
cmp
gs
ret
pusha
push
or
cmp
pop
xor
push
add
sub
mul
in
pop
mov
or
test
xlat
je
cwtl
push
mov
fdivrs
mov
push
and
in
data16
test
clc
push
cmp
mov
or
pop
add
in
gs
jg
dec
aad
sarb
out
cmp
add
les
adc
int
fs
mov
inc
jl
aas
out
mov
je
jmp
fidivs
sti
lods
add
jecxz
int3
cli
in
std
jmp
test
and
lods
xchg
and
mov
push
call
xchg
jo
push
icebp
push
rolb
cmc
fstpl
addr16
mov
bound
in
xor
lret
pop
outsl
enter
xorl
ucomiss
pop
mov
cmp
gs
pop
pusha
fmul
adc
sbb
add
pop
andl
add
sub
push
fisubrl
loope
or
xchg
repz
scas
dec
inc
cmp
mov
mov
mov
mov
xchg
mov
loope
data16
int
loope
rcll
lea
mov
or
ss
xchg
cmp
mov
popf
lods
sbb
out
daa
andb
mov
lods
lahf
stos
out
xor
push
gs
or
mov
sub
clc
sbb
mov
outsl
test
jmp
jmp
sbb
cmpsl
mov
ja
or
sbb
adcb
xchg
filds
sub
gs
push
lahf
jmp
and
and
insl
gs
nop
stc
push
dec
xor
xchg
jne
pop
leave
icebp
and
stos
gs
add
mov
lds
mov
mov
mov
fsub
dec
aam
lcall
je
cli
fninit
inc
sbb
js
mov
gs
sub
mull
lahf
adc
cmp
fsubr
in
popf
sub
insl
pop
adc
add
es
jno
mov
push
repnz
mov
lods
insb
rorl
inc
out
and
dec
data16
gs
sub
pop
cli
loopne
test
loope
and
lods
jae
insl
adcl
add
inc
dec
std
aas
mov
lds
and
xor
jo
rcll
imul
xor
mov
push
mov
aaa
jmp
mov
imul
cs
icebp
pop
insb
aad
xchg
mov
add
ja
dec
enter
jmp
push
in
add
inc
ja
lea
pop
adc
test
test
pop
mov
and
lds
mov
lret
gs
imul
ja
dec
dec
sbb
fstp
or
jle
repz
jnp
fistpll
ret
mov
pop
lcall
mov
pushf
and
cmpsb
dec
jecxz
jle
pop
push
imul
and
cmpsl
and
sti
jmp
adc
gs
xchg
lock
dec
arpl
or
and
cmp
shl
or
les
jl
gs
pop
cltd
push
repz
adc
jp
xor
sub
bound
mov
push
iret
gs
sub
in
dec
or
std
xchg
gs
pop
sahf
cltd
in
and
lds
cwtl
daa
add
mov
xchg
mov
jle
cmpsb
or
inc
cmp
clc
in
rol
ret
jmp
gs
es
addr16
ss
mov
cmp
popa
sub
cmp
mov
or
fildl
cmp
inc
jmp
sub
dec
es
ss
vmwrite
jg
xchg
mov
xlat
les
cld
push
in
sbb
push
jns
jle
gs
jl
xor
push
scas
into
lds
outsl
pop
fildl
xchg
scas
sbb
mov
dec
pop
lret
pop
sbb
cmp
test
ret
mov
dec
cmp
cli
and
mov
test
sub
rclb
stos
and
test
jne
sub
test
lcall
dec
sub
jmp
lea
mov
dec
cwtl
and
lods
scas
in
hlt
gs
sub
inc
and
adc
ja
jecxz
xor
lret
mov
gs
ficomps
xadd
mov
push
enter
outsb
xchg
or
nop
mov
pop
fiaddl
imul
sub
enter
mov
aam
imul
mov
xor
stc
sarb
gs
ret
fcmovbe
inc
outsb
outsl
dec
xchg
scas
add
pop
ficomps
ja
inc
rcrb
insb
sbb
sahf
mov
inc
ret
xor
fcomps
jecxz
or
jno
mov
sbb
cmp
arpl
lcall
cmc
add
out
xchg
jae
fisubs
jnp
icebp
pop
roll
lcall
arpl
inc
mov
es
pop
out
pop
gs
ret
stos
push
mov
rorb
mov
cld
int
mov
xlat
mov
and
bound
inc
push
js
ror
gs
cmp
push
mov
leave
sar
ja
imul
bound
mov
push
cmp
imul
clc
pusha
es
and
cmp
push
mov
fwait
cld
add
leave
lcall
gs
mov
jmp
gs
das
or
mov
mov
mov
in
adc
cmpsl
sbb
not
gs
jno
js
push
dec
mov
jmp
pop
test
cmp
ficompl
pop
mov
jmp
xor
leave
jbe
inc
dec
lcall
pusha
push
jae
gs
add
loope
loop
adc
push
popf
pop
ss
lret
mov
shrl
gs
es
or
gs
daa
outsb
dec
add
je
insl
ret
dec
dec
add
out
and
out
clc
pushf
divl
gs
pop
cmc
lcall
cmp
pop
push
fisttpll
std
daa
lods
sub
es
mov
enter
movb
xlat
lcall
lcall
in
mov
std
mov
sub
mov
flds
cwtl
sbb
test
out
test
jb
je
mov
cmp
in
dec
dec
mov
xor
or
pop
fst
call
das
jbe
ss
dec
in
int3
jmp
lcall
sbb
mov
addr16
mov
cld
gs
sahf
sub
add
mov
adc
popl
sub
leave
ja
and
mov
fcmovnu
dec
insl
aam
data16
mov
sarb
lds
hlt
arpl
pop
mov
ret
push
xchg
add
lods
xchg
jmp
out
mov
scas
daa
mov
mov
nop
push
pop
gs
push
iret
aam
sub
cs
xchg
add
outsl
jns,pt
fsubp
movhps
sbb
shrb
push
cmp
lods
scas
dec
repnz
cmp
fisubl
sbb
gs
mov
mov
fcmove
shll
popf
lds
int
jp
push
xchg
incb
mov
xor
into
sub
dec
jmp
inc
mov
or
mov
inc
gs
aad
shlb
xor
inc
xor
inc
fidivrs
sbbl
adc
nop
dec
cmp
sub
sahf
xchg
enter
cmp
push
sbbl
sub
mov
sub
shlb
mov
xor
lahf
ret
sbb
inc
dec
mov
jno
jecxz
push
popa
push
cmpsl
cltd
orb
idiv
fwait
nop
inc
adc
insl
loop
jmp
gs
movsb
cmpsb
lcall
fidivrl
aas
int3
gs
cmp
inc
push
fucomp
mov
scas
iret
insb
or
mov
aad
shrb
sub
out
gs
push
sub
xchg
mov
mov
mov
ljmp
mov
jge
lea
sub
or
pop
push
and
gs
push
gs
nop
inc
mov
mov
dec
mov
lahf
sbb
sub
sahf
loopne
xchg
ror
test
dec
push
fimuls
sahf
jno
clc
xchg
subb
adc
out
jl
rcll
jmp
aaa
gs
mov
insl
mov
jb
lods
mov
jecxz
mov
test
push
mov
scas
jp
mov
inc
inc
mov
adc
dec
gs
mov
inc
gs
and
cmp
inc
mov
push
adc
aam
fldcw
inc
out
pop
or
in
dec
cmpsl
fldt
mov
adc
ficoml
xor
out
gs
js
imul
mov
dec
loope
push
xchg
add
sbb
aas
insl
mov
lret
and
outsl
or
lock
sub
sti
push
shrl
push
int3
dec
adc
inc
and
mov
andl
jo
sbb
mov
loope
or
push
mov
outsl
xchg
outsb
pushf
loope
add
cmp
add
or
sbb
ss
and
cmp
mov
loopne
jne
fidivrs
lods
es
outsl
iret
mov
dec
insl
pop
cmc
insb
arpl
jge
mov
push
in
or
ljmp
dec
insl
dec
push
jae
test
inc
vpand
sbb
dec
data16
jb
add
lcall
xchg
jl
sbb
std
aam
lcall
gs
lods
jmp
gs
jns
gs
mov
jb
dec
fwait
test
adc
cmc
test
xor
gs
fstpl
jg
mov
out
sti
adc
lret
lock
outsl
or
arpl
cltd
mov
cs
gs
sbb
mov
gs
inc
push
sub
sub
stos
std
xor
mov
pusha
or
mov
jns
and
fwait
mov
fbstp
daa
mov
aam
inc
mov
outsb
std
maskmovq
idivl
fisttpll
push
pop
push
popa
xchg
ret
call
jns
inc
gs
aaa
lcall
daa
mov
jge
inc
in
gs
dec
add
xor
call
rclb
mov
jl
popf
xlat
xchg
gs
fbld
cmp
mov
sub
mov
test
push
ja
gs
ror
lock
mov
push
ljmp
adc
xchg
cmp
outsl
icebp
int
pop
pusha
xchg
jae
xor
jmp
lcall
lock
sahf
loope
out
dec
gs
lds
adc
or
inc
jecxz
outsb
es
push
cltd
out
dec
mov
into
enter
or
add
test
sub
push
pop
fisttpl
dec
aas
iret
rorl
pop
stc
shlb
cmp
sti
xor
cltd
push
repnz
mov
addl
push
adc
cmc
imul
jmp
cmc
mov
scas
gs
push
mov
push
jo
enter
outsl
adc
in
sub
xor
sti
jae
pop
int
dec
les
mov
jmp
sbb
bnd
je
ljmp
lock
mov
xlat
sti
sbb
icebp
and
add
cs
int
jnp
cmp
hlt
jl
cmp
jp
das
gs
mov
test
gs
cltd
mov
mov
pop
icebp
dec
gs
inc
cs
adc
sub
movsb
ljmp
push
daa
gs
pushf
inc
inc
gs
mov
nop
insb
pop
pop
jg
les
mov
or
mov
mov
mov
xchg
roll
mov
xchg
inc
push
and
test
dec
pushf
nop
aam
in
cs
inc
imul
leave
xchg
out
mov
imul
stos
in
mov
in
cmp
test
or
pop
lods
xor
mov
lcall
shll
cmp
push
xchg
gs
push
in
gs
push
fldl
push
sbb
pop
sub
jne
or
jecxz
cmp
mov
adc
xchg
ret
outsb
in
or
cmp
mov
mov
add
push
xchg
gs
out
mov
je
loope
gs
aaa
in
mov
repnz
pop
xlat
pop
dec
or
cli
push
jb
and
clc
xchg
ss
shrl
movsb
call
adc
daa
dec
cmpsb
clc
mov
adc
arpl
je
mov
lret
inc
out
jge
pushf
mulb
stos
mov
aas
jmp
int
lahf
xchg
jle
bound
push
and
leave
jb
gs
into
push
outsb
or
jecxz
andl
cmp
jmp
jp
mov
xchg
es
and
sub
ffreep
jmp
or
mov
shlb
fwait
xchg
fsubp
gs
or
dec
gs
push
xabort
jmp
cs
mov
sbb
sbb
gs
aaa
sbb
xchg
pop
out
cmp
idivb
mov
lods
push
add
adc
adc
sbb
and
lahf
bswap
push
neg
mov
jno
cli
loop
aas
sub
hlt
movsb
testl
push
mov
jg
and
or
jno
add
gs
jo
xchg
loopne
gs
rcll
ja
aaa
loope
outsl
xchg
sbb
rorb
in
cmp
in
cmp
jo
cmpsb
inc
xor
cmp
lcall
add
dec
adc
mov
jp
gs
data16
in
mov
jno
jo
jecxz
fildll
ret
dec
lods
mov
mov
xchg
iret
and
add
mov
scas
mov
pop
jle
mov
xchg
pop
fnstenv
add
and
fcmovnbe
gs
push
mov
cmp
lret
and
mov
call
push
jb
xchg
test
inc
inc
push
ja
push
gs
sub
gs
or
fwait
ja
push
movsb
xchg
push
scas
popf
shlb
lds
addb
mov
pop
jne
jg,pn
xchg
cmp
lret
sti
add
sbb
addb
loopne
in
pop
gs
aaa
mov
mov
jmp
pusha
adc
insl
dec
sub
nop
lds
scas
mov
jne
pop
gs
sub
loopne
imul
inc
adc
cmp
adc
stos
pop
cld
lods
jg
xlat
bound
and
stos
or
jae
hlt
out
pop
pop
ret
test
stos
sbb
in
xor
sub
ljmp
ds
cmp
or
push
gs
lcall
enter
mov
repnz
out
gs
cltd
jae
sbb
cli
jns
insb
mov
das
gs
mov
gs
repz
jae
xor
cbtw
imul
mov
xchg
shrl
jno
add
hlt
and
lods
imul
lds
mov
outsl
es
testl
gs
scas
ror
insl
sbb
fmul
cmp
inc
lcall
or
xchg
ss
gs
sbb
movsb
add
mov
push
and
and
mov
call
or
ljmp
cmp
pop
daa
insb
sub
ret
sub
mov
push
and
sbb
xor
hlt
shrl
nop
mov
ss
cmp
xchg
push
lea
jae
mov
ja
jns
loope
test
jl
xchg
cmp
fsubrl
cltd
sbb
lcall
add
div
xchg
xor
stos
ds
test
loope
xor
push
mov
and
mov
mov
call
jecxz
cmp
fsubs
sbb
dec
mov
pcmpgtw
nop
push
push
push
cmp
or
repz
in
inc
daa
int3
jno
pop
sub
or
sbb
jnp
fsubs
outsb
imul
inc
in
es
or
addr16
adc
mov
outsb
hlt
sbb
ja
jb
jno
aas
xchg
mov
movsl
mov
xchg
iret
call
pop
sbb
dec
pop
mov
sub
subl
cmp
flds
pushf
push
adc
jno
nop
test
gs
popf
clc
dec
push
mov
xchg
sub
push
insl
test
cmpsb
mov
xor
xor
cmp
jecxz
ja
lds
std
fucomp
cmpsb
jne
ret
scas
clc
in
pop
adc
sbb
inc
xchg
pusha
mov
loop
iret
xchg
mov
inc
nop
sahf
xor
test
inc
sbb
gs
pop
negb
leave
pushf
jecxz
cs
lret
sbb
push
pusha
outsb
das
or
aad
jmp
xchg
gs
cmpsl
mov
or
jle
pop
push
ret
cmc
adc
je
rcrl
cmpb
lods
sahf
idiv
out
jmp
lock
push
pop
lcall
adc
jge
push
cmc
test
gs
je
or
lahf
jbe
ja
fs
sahf
scas
add
add
xchg
es
ret
mov
insb
or
gs
dec
xor
or
add
repnz
cmp
xor
lahf
ss
testl
push
rcrb
pop
fistpll
ds
pop
jg
jecxz
mov
mov
cmp
addr16
pop
push
inc
push
in
jbe
imul
outsb
in
test
jne
ja
gs
xor
scas
arpl
sbb
test
jecxz
cltd
xlat
xchg
gs
push
or
out
pop
stos
roll
push
mov
lods
clc
data16
dec
xor
div
pop
icebp
ret
push
mov
stos
jne
shl
inc
sbbl
and
outsb
ja
sub
mov
stos
and
imul
dec
test
data16
lods
push
inc
mulb
cs
mov
adc
bound
insl
mov
jnp
incl
std
popf
push
fs
insb
aad
aaa
jne
inc
mov
outsb
icebp
xchg
jmp
sbb
leave
cltd
loop
lret
lahf
mov
mov
mov
mov
cs
popa
add
xor
daa
test
rolb
jp
mov
pop
mov
aas
in
into
mov
pop
in
movsb
inc
sub
add
add
fdivrs
cmp
repnz
gs
pop
xlat
add
loope
mov
testl
insb
mov
or
sbb
pop
inc
clc
lods
data16
xlat
pop
or
gs
xchg
cmc
or
std
pop
sti
mov
sub
jmp
enter
push
lret
and
cmpxchg
xor
jnp
xlat
jecxz
sub
jne
push
in
xchg
movsb
and
mov
adc
lret
xchg
cmc
jbe
sbb
mov
andl
pop
outsb
lcall
dec
lea
sbbl
xchg
push
and
gs
cmp
aaa
add
ficompl
xlat
or
pcmpgtw
sbb
dec
scas
gs
xchg
cmp
dec
stos
jge
gs
mulb
xchg
iret
xor
std
adc
stc
push
sbb
roll
jno
gs
xor
leave
ljmp
jmp
data16
jecxz
cmpsl
xlat
iret
pop
mov
pop
popf
add
gs
xor
jo
xchg
outsb
andb
lock
insb
in
ja
sub
inc
mov
imul
jecxz
pop
jbe
xchg
test
sbb
push
mov
pop
je
adc
test
popf
xchg
leave
pop
aam
imul
es
scas
pop
int
rclb
push
pop
sub
out
inc
or
mov
cmp
pushf
dec
or
mov
cmpsl
test
inc
cwtl
repnz
sub
sub
imul
clc
aaa
add
das
dec
inc
sti
sub
scas
jne
pop
jl
call
and
les
mov
adc
mov
stos
lods
call
sti
cs
xor
cltd
aas
gs
divb
fcoml
jge
jns
and
dec
xchg
add
push
push
mov
out
adc
outsb
test
lods
mov
aaa
fstpl
out
mov
sub
add
xchg
out
lock
inc
icebp
test
ljmp
mov
gs
rcrl
js
or
mov
pusha
and
ficoml
xor
mov
add
icebp
cmc
jecxz
int
cmp
jns
cmp
call
jbe
cmp
movsb
shll
out
call
sbb
es
repz
mov
in
dec
sub
mov
and
sub
ss
ljmp
or
add
and
push
gs
aas
rcl
aad
push
add
mov
mov
inc
mov
jge
in
fnsave
mov
jbe
or
mov
or
in
mov
insl
std
mov
fmull
fsub
pusha
pop
adc
lcall
outsb
dec
aaa
out
mov
inc
in
scas
adc
mov
in
stos
mov
cli
push
sub
cltd
mov
iret
push
stc
out
gs
shll
test
gs
cld
mov
sub
xchg
mov
xchg
cmp
jmp
add
and
add
cmp
sub
fcomp
adc
rolb
test
cmp
jle
les
xorl
lret
clc
mov
sbb
jo
pop
sti
jl
fstpt
jp
cwtl
out
xchg
gs
push
dec
fisubs
int3
mov
scas
bound
pop
jle
dec
testl
pop
sub
and
psubq
and
insb
out
gs
xlat
add
jbe
in
lods
adc
lods
mov
test
gs
add
negl
jb
std
sbb
gs
inc
jg
cltd
popf
gs
data16
sbb
mov
add
imul
or
adc
or
ret
outsb
add
sub
rorb
je
pop
test
or
push
sbb
push
jl
std
imul
inc
in
cmp
fistps
cmpsb
inc
lahf
push
test
iret
pop
gs
mov
jl
xor
jge
add
in
js
nop
xchg
ljmp
inc
dec
clc
pop
or
popf
dec
push
mov
sahf
and
lea
cli
gs
ret
testb
scas
inc
cmp
add
push
movsb
xor
jb
bswap
mov
out
repnz
push
or
gs
call
popf
ljmp
jne
repnz
jno
mov
adc
outsl
xor
popf
movsb
shll
data16
pop
cmp
sti
imul
gs
cs
ljmp
push
rclb
cmp
mov
fcompl
iret
lods
stos
int3
add
outsb
push
dec
mov
sub
dec
arpl
inc
xchg
or
mov
mov
gs
fs
ret
sub
divb
pop
in
adc
jle
xchg
jns
push
jecxz
jg
popf
imul
sahf
outsb
push
sbb
push
jp
lods
aas
cmp
adc
and
ja
dec
mov
movsb
pop
xor
gs
rcll
xlat
sbb
lea
xor
gs
int
push
cmpsb
lds
dec
pop
and
dec
shll
cmc
mov
inc
cmp
and
pushf
xchg
sub
jecxz
je
fnsave
rcrl
js
in
jmp
icebp
imul
fsubrs
stos
mov
add
or
gs
sub
mov
ficoml
mov
shlb
out
xor
inc
out
call
xchg
inc
add
orl
ja
sub
or
xor
mov
cmp
cmp
sub
dec
dec
mov
insb
fninit
mov
das
and
rcll
lock
inc
xorb
aad
test
stc
and
mov
mov
xchg
jecxz
mov
test
insl
lret
push
jecxz
xlat
popa
sbb
rclb
push
shll
lret
cmp
sbb
lods
cltd
int3
or
cmp
sbb
inc
insb
jns
ret
jl
jns
sbb
cmp
pop
cld
outsl
aad
lods
mov
lahf
pop
push
andb
dec
in
push
xchg
imul
and
fbstp
inc
flds
mov
or
lret
adc
pop
xor
out
push
popf
dec
mov
mov
into
mov
shll
shll
jae
cwtl
or
dec
jl
xchg
negl
mov
out
add
dec
or
cmp
jmp
sbb
cmp
rol
lods
dec
pop
test
gs
scas
loope
pop
mov
or
mov
inc
stos
dec
xchg
je
out
pop
mov
xor
jecxz
adc
rcr
sub
mov
data16
gs
add
daa
push
shl
mov
gs
gs
jno
data16
ja
push
outsl
aaa
jp
xchg
repz
jb
xor
pop
movsb
mov
push
testl
scas
test
mov
icebp
inc
outsl
repnz
gs
mov
push
fisubs
mov
xchg
orl
gs
in
jle
andb
gs
cmpsl
cmpsb
in
jecxz
clc
sub
adc
gs
call
jbe
and
lret
adc
test
xchg
fwait
or
pop
mov
adc
inc
fildl
cmp
jnp
bndldx
lock
lods
stos
mov
xor
fxam
in
mov
stos
xchg
std
add
lds
push
and
mov
ja
int3
lock
dec
cltd
lret
scas
gs
stos
fstpl
inc
xor
sub
inc
jecxz
push
into
push
jbe
mov
push
pop
push
cmpsl
add
jb
out
lods
cmpsb
lret
push
mov
mov
or
adc
adc
ljmp
add
insb
ds
arpl
sub
int
jns
gs
adcl
scas
xchg
sub
add
jecxz,pt
into
and
filds
lods
dec
xor
cmpsb
js
cmpsl
pop
jbe
ja
dec
xor
gs
inc
jp
mov
or
lock
sahf
mov
push
fistps
sub
pushf
jg
repnz
cwtl
dec
addr16
call
xor
xor
and
outsl
push
fcomip
or
jno
sbb
bound
mov
int3
jp
mov
sbb
mov
lcall
das
push
lret
lods
popf
lret
cli
gs
addr16
mov
in
jnp
leave
mov
gs
ficomps
mov
pop
aam
or
repnz
stc
daa
push
scas
sub
pop
sarl
push
pop
hlt
jl
test
cli
push
mov
add
divb
gs
push
outsb
jnp
push
adc
push
and
mov
cwtl
in
and
xchg
inc
mov
ss
fisubs
inc
and
jnp
rorl
cmpsb
dec
jmp
mov
and
sub
xor
xlat
or
xor
jb
cmp
or
jnp
mov
aad
xchg
hlt
xchg
push
sub
adc
cmp
sahf
fs
scas
sub
gs
pop
popa
ljmp
adc
sar
imul
lods
in
jg
mov
out
jno
mov
pop
push
arpl
xchg
jp
and
gs
cli
cmp
out
arpl
popf
mov
pop
gs
rorb
rorl
pop
in
mov
gs
add
mov
jg
stc
sub
mov
pusha
data16
nop
gs
or
gs
jb
sti
repnz
cmc
push
lcall
int3
mov
dec
adc
gs
fsubrl
ljmp
mov
xchg
and
add
xor
ds
mov
mov
push
imul
or
mov
into
pop
cmp
rorb
gs
sahf
cld
pop
in
stc
sbb
sub
fucomp
fs
gs
lods
inc
mov
add
gs
cmpsb
lahf
loopne
orb
and
leave
imul
gs
sbb
es
lods
mov
outsb
cmc
sti
jmp
andl
adc
xchg
imul
sub
cmc
jne
inc
rcrb
pop
gs
sub
insb
enter
jg
imull
and
out
fidivl
daa
repnz
nop
shr
sub
fdivr
cmpsl
stc
outsb
and
and
cmp
jmp
xchg
ret
push
testl
ret
cwtl
mov
or
sahf
in
inc
pop
popf
cmp
mov
roll
and
dec
into
gs
add
imul
in
mov
subl
pusha
je
sar
xchg
mov
and
js
mov
add
lret
gs
ljmp
pop
push
iret
cmp
dec
sti
pop
gs
push
add
out
adc
mov
inc
insl
and
xchg
ret
jae
imul
scas
loop
mov
dec
xlat
test
xchg
add
and
fwait
xchg
inc
insl
or
mov
ja
aaa
jo
aad
and
dec
cmpsl
mov
clc
add
shrl
xor
mov
inc
dec
ret
push
in
mov
aaa
dec
daa
jnp
fdivrp
jecxz
sbb
insl
int3
mov
cmc
rcll
aaa
cmp
sub
sbb
cli
and
sbb
in
or
push
adc
dec
in
enter
jecxz
fwait
bound
mov
xchg
enter
mov
and
inc
gs
sub
gs
fisttpll
gs
and
pop
inc
out
jg
lods
test
pop
cmp
roll
test
adcl
dec
fs
xchg
test
and
mov
adcb
jl
sahf
push
add
mov
movsb
subb
mov
ljmp
inc
sbb
mov
pusha
push
int
ja
gs
unpcklps
gs
inc
aam
push
mov
sbb
jb
xor
mov
gs
inc
and
les
mov
mov
add
pop
jl
aam
lahf
movsb
gs
and
inc
xchg
or
xor
dec
xor
push
mov
lods
mov
mov
scas
mov
repnz
pcmpgtw
mov
inc
dec
in
cmpsb
and
fldcw
push
gs
xlat
pop
pop
outsb
cmp
je
mov
or
push
test
mov
in
lea
gs
cmp
add
cmp
gs
inc
or
cmp
outsl
gs
pop
xor
and
gs
cmp
jmp
pop
gs
fidivl
gs
mov
or
mov
gs
mov
rorl
aam
inc
dec
mov
rorl
out
jbe
dec
fwait
jno
gs
and
dec
and
cltd
adc
push
cmp
cwtl
inc
sti
inc
gs
mov
lods
lods
in
xchg
fcmove
ss
jns
gs
addr16
cli
pop
gs
in
lock
es
jecxz
cvtpi2ps
dec
outsl
push
cli
gs
pop
lods
add
cmc
insb
enter
cmp
outsl
gs
sub
push
cmp
roll
and
jo
out
sbb
and
jmp
sub
mov
add
rcrl
xchg
lods
in
mov
mov
testb
gs
adc
pop
ljmp
les
pop
aad
add
mov
sbb
cmp
jo
push
repnz
mov
daa
jecxz
call
inc
mov
mov
jb
and
pop
push
rcl
or
sub
dec
pushf
gs
xor
shrb
rcrl
test
jbe
jb
xor
cmc
into
ja
call
jo
push
jge
pop
lea
test
insl
sbb
rolb
xchg
and
dec
mov
gs
push
js
push
lea
inc
or
xchg
pop
pushf
mov
sub
loop
shl
pop
inc
cwtl
xor
jle
shrl
orl
cmpsl
sub
out
test
adc
xlat
mov
and
cmp
out
lods
into
ret
gs
sahf
pop
xor
les
xor
add
push
add
cmpsb
mull
xor
mov
mov
lock
ja
gs
mov
cmp
into
mov
leave
jl
or
and
inc
pushf
ret
dec
cmc
lcall
inc
sti
pop
addr16
jne
xor
lea
inc
pop
lret
fstps
jns
inc
lods
jecxz
outsl
scas
mov
int
mov
push
mov
pop
insb
rcrl
loope
dec
dec
fldt
xor
mov
jmp
aas
loope
ret
aad
gs
stos
ja
fstps
add
into
jge
add
xor
imul
sahf
add
sbb
jo
lahf
cli
les
data16
pop
or
ljmp
pop
je
gs
sbb
jg
xor
movsb
pop
inc
icebp
clc
jp
xor
adc
fldenv
ss
jno
aam
out
icebp
adc
dec
cli
or
aas
pop
gs
fimuls
leave
jp
sub
pop
jle
xor
bndldx
cltd
lods
mov
sbb
fisubrl
jb
stos
test
loopne
sahf
xor
in
and
cmp
ljmp
int3
pushf
pop
out
outsb
and
bound
xor
jmp
outsb
inc
sbb
fst
xchg
arpl
xchg
dec
xlat
lret
jae
jbe
or
ss
fists
gs
mov
dec
xorb
cld
cmp
and
insb
mov
subl
daa
or
cmp
data16
lret
lret
mov
rcl
xorb
jb
xor
sbb
and
cli
pop
imul
inc
sbb
jp
mov
sub
jbe
insl
cmp
inc
shrl
lret
jmp
jne
sti
stos
gs
imul
gs
and
repz
sub
pop
xlat
ljmp
dec
insl
mov
jbe
jno
leave
cmc
jne
mov
xchg
outsl
int3
das
mov
shll
mov
fildl
mov
push
movsb
mov
ja
pop
add
fucom
mov
ret
je
gs
icebp
jl
sub
mov
arpl
dec
fisubl
cwtl
fistpl
push
repnz
iret
push
insb
mov
sbb
xor
mov
sbb
push
fs
pop
inc
cltd
adc
sarl
jbe
cmpsl
mov
test
mov
out
lret
out
xlat
add
push
arpl
gs
xchg
add
sbb
repnz
sub
push
cmp
and
xor
int3
jbe
sub
bound
sbb
gs
inc
cld
inc
insb
add
or
pop
fsubrl
cltd
xchg
and
ljmp
mov
out
sbb
loopew
mov
lds
divl
mov
pop
mov
sbb
ljmp
push
sub
dec
xchg
add
insl
mov
int
loope
inc
cmpsl
pop
push
sub
inc
mov
shlb
add
lret
std
jmp
jecxz
fadd
iret
add
and
fs
loope
adc
mov
leave
inc
dec
dec
outsb
gs
xlat
pop
repz
sahf
jnp
xorb
mov
loope
and
mov
dec
mov
out
gs
or
ret
pop
sbb
fisubrl
into
adc
jns
int3
mov
gs
mov
out
out
dec
gs
popf
ss
push
inc
inc
add
xor
cmp
ja
mov
mov
jmp
sbb
cvtps2pd
gs
call
mov
gs
jne
out
rcll
mov
or
mov
fcoms
cmpsb
gs
push
mov
jbe
ret
movsb
je
pcmpgtw
insb
enter
mov
fwait
pop
push
dec
mov
jae
test
mov
subl
dec
outsl
pop
mov
jmp
inc
push
pop
add
push
sbb
jae
in
dec
test
iret
xchg
outsl
xchg
sti
shl
mov
aas
jge
dec
mull
test
jbe
xchg
inc
push
gs
sbb
jnp
jae
xchg
sbb
inc
fstl
adc
insb
sti
hlt
in
es
lahf
test
gs
lea
add
mov
daa
outsb
sbb
mov
inc
imul
mov
pop
gs
in
fldcw
cmpsl
inc
loopne
test
icebp
gs
jmp
inc
push
je
gs
and
adc
es
sbb
push
gs
insb
shl
adc
stc
repnz
xor
data16
cmp
gs
fstps
in
jmp
mov
insl
mov
lds
push
scas
xor
lret
cmp
jne
mov
sub
dec
xchg
imul
fstpl
dec
xchg
ljmp
xchg
gs
cmp
jecxz
and
inc
in
daa
sub
and
aaa
outsl
push
mov
hlt
adcl
scas
popa
shlb
jno
cwtl
gs
xor
xor
cmpsb
push
jns
pop
test
test
es
stc
incl
and
pushf
or
sbb
mov
sbb
and
ss
inc
jno
xor
hlt
jge
or
push
das
sbb
lret
xchg
jle
js
lods
ret
inc
push
stos
lds
mov
cmpsl
xchg
and
gs
shrl
xchg
sub
mov
mul
gs
ret
gs
mov
gs
adc
cmp
loopne
gs
cmp
sbb
shll
mov
sbb
fcomp
jnp
inc
sub
cmp
arpl
mov
dec
mov
add
out
jecxz
insb
fdivr
imulb
je,pt
inc
sbb
loope
mov
gs
in
cmp
mov
sarb
sbb
cmp
enter
cli
sub
push
ss
jge
jge
inc
add
in
xor
adc
ret
push
inc
gs
movsb
outsb
dec
or
add
xchg
push
dec
dec
addl
mov
test
cltd
pop
cli
leave
rcrl
lea
scas
mov
hlt
aam
sub
int
fdivrs
gs
inc
inc
mov
je
jg
rcrl
sub
pop
fadds
faddp
in
sbb
cs
cld
out
xor
ljmp
cmpsl
lods
dec
cmc
xor
dec
cmp
in
sahf
daa
xchg
sub
addl
sub
sub
mulb
add
sbb
push
lods
jge
xchg
scas
enter
iret
mov
enter
sbb
add
rclb
test
adc
pop
into
leave
loope
and
cmpsb
pop
jbe
dec
mov
xchg
gs
push
cmp
mov
xchg
popa
adc
jge
mov
xchg
push
out
les
sbb
cmp
mov
rclb
lcall
or
and
inc
call
gs
in
xchg
sbbb
mov
sar
imul
jns
or
lcall
es
adc
pop
mov
push
add
lock
jae
xchg
jge
push
mov
cwtl
daa
ljmp
push
gs
mov
cmp
push
mov
jl
daa
mov
xor
sbb
jno
mov
mov
sub
push
or
stc
sub
xchg
xchg
rep
or
in
mov
dec
enter
mov
sub
lock
adc
jb
cmp
pop
outsb
sti
sbb
repz
in
lods
cwtl
sub
test
mov
and
stc
dec
mov
test
pop
xchg
cmp
lahf
in
gs
lcall
lds
inc
mov
jb
adc
or
push
roll
arpl
hlt
xchg
fs
popf
sahf
shll
mov
mov
into
outsb
mov
cli
and
pusha
sbb
cmc
mov
xor
clc
or
cmp
xchg
pop
movlps
mov
xchg
adc
jae
mov
push
movsb
and
nop
mov
sub
call
fdivr
rcrl
add
int
pop
gs
jnp
xchg
add
int3
mov
xchg
dec
in
cmpsl
dec
xor
sub
or
mov
ret
dec
pop
shlb
inc
cld
sbb
gs
adc
insb
mov
mov
stc
lock
push
add
push
jecxz
sbb
fcoms
into
gs
lock
mov
cld
dec
gs
jmp
mov
or
push
xor
ret
andb
push
push
mov
and
rorb
push
repnz
std
add
pop
xchg
icebp
leave
add
cmp
cmpsb
idivb
fstpl
or
cmp
sarb
xchg
cmp
rcl
subl
mov
aad
icebp
gs
das
push
adc
outsb
jl
sbb
push
add
mov
push
add
mov
jno
jg
in
sahf
sbb
into
loope
mov
stos
xchg
imul
adc
ljmp
je
mov
mov
xchg
in
lods
push
mov
scas
aaa
mov
shll
imul
std
add
push
rcl
shll
andl
testl
cmp
lds
test
push
mov
cltd
cwtl
negl
scas
test
mov
out
rcrb
addl
pop
fs
fs
and
dec
ret
xor
mov
lds
icebp
jb
adc
push
and
and
outsl
mov
inc
in
shlb
jne
aaa
mov
jne
sbb
mov
adc
sar
mov
mov
adc
cli
in
fwait
and
out
mov
sbb
gs
xor
adc
aam
filds
pop
push
imul
mov
shrb
dec
int
pop
aad
cmpsl
repz
jp
sbb
addr16
gs
ljmp
inc
or
add
gs
mov
outsb
adc
and
sub
or
inc
popf
adc
adc
pop
fwait
jo
in
out
in
mov
gs
out
sub
int3
jbe
movsb
cld
js
sbb
fst
addl
cwtl
cmp
push
cmp
aas
sbb
push
addr16
pushf
sbb
scas
gs
xor
in
shll
push
call
gs
int3
dec
xlat
bound
sbb
pop
mov
mov
cmp
inc
cltd
popf
dec
push
sub
xchg
and
sub
insl
mov
push
jge
shlb
xchg
jecxz
pop
test
mov
cmpsb
mov
gs
outsl
lret
insb
dec
out
icebp
and
xor
imul
mov
fisttpl
mov
pusha
cltd
pushf
jnp
gs
mov
stc
gs
aas
sbb
inc
das
sbb
arpl
out
std
cmp
ret
punpcklwd
inc
xlat
dec
out
and
loop
jb
mov
dec
repnz
or
mov
gs
cmpsb
mov
ds
stc
push
jp
sahf
gs
outsb
addr16
addb
or
gs
hlt
dec
xchg
mov
sbb
gs
adc
sbbb
sbb
gs
dec
mov
sub
xor
or
aam
mov
fsubs
lret
stc
push
arpl
add
in
xchg
or
and
gs
iret
ret
lret
arpl
push
mov
push
push
fstpl
adcb
inc
lock
imul
out
fimull
out
sbb
cli
pop
test
jnp
stos
iret
jmp
gs
jl
scas
rolb
arpl
mov
mov
nop
loope
in
into
ds
clc
aam
in
inc
in
lods
pop
testb
pop
mov
push
aad
add
mov
xchg
mov
gs
mov
pop
inc
in
aam
mov
jmp
test
push
xchg
pop
lcall
rcll
cmp
push
push
lods
mov
push
shlb
adc
fdivl
xchg
adc
clc
jge
sub
daa
popa
lret
fimull
xor
jl
cli
jmp
inc
mov
ds
add
out
nop
mov
mov
and
sbb
ret
mov
push
sarb
push
xchg
jp
cmp
stos
push
loopne
cmp
jbe
jg
ja
xor
sbb
jge
cmpsb
add
push
add
xor
sbb
push
test
mov
mov
call
jnp
rol
push
mov
mov
rep
cmpsb
push
andb
or
xchg
bound
insb
pop
jmp
sti
in
sub
adc
dec
call
mov
gs
insb
pop
dec
lret
cmpsb
fs
outsb
insl
jne,pn
mov
jns
and
adc
inc
arpl
mov
idiv
push
test
sbb
repz
or
cld
imul
fnstsw
cmp
lods
mov
sbb
cmp
inc
imul
test
mov
sub
pop
lcall
and
dec
jns
imul
ja
add
cmp
std
arpl
push
inc
scas
gs
jb
push
push
push
mov
push
and
sbbb
fidivrs
mov
outsl
jg
cmp
icebp
outsl
add
and
std
dec
dec
xlat
xchg
daa
dec
gs
fidivrs
rcll
sub
sub
std
gs
push
cmp
imul
lods
cmp
ja
gs
dec
cmc
or
xchg
stos
xor
push
xchg
mov
movb
repz
dec
lret
decl
lahf
lods
in
or
add
push
mov
fimuls
ja
inc
int3
sbb
push
pop
adc
in
fsubrl
lret
lods
sbb
scas
and
insl
dec
push
outsb
cmpsl
xor
ss
out
es
lds
mov
shrb
fnsetpm(287
les
push
cmp
push
adc
pop
ficoml
out
stos
imul
inc
dec
sbb
sbb
add
outsb
push
or
cmpl
jns
inc
fcmovnu
loope
gs
mov
cmp
push
push
jns
jg
push
jg
gs
insb
mov
leave
cmp
or
and
sub
outsl
jge
inc
adc
sahf
xchg
ljmp
imul
out
leave
out
cmp
mov
sub
in
push
mov
ds
pop
push
mov
gs
push
shrl
cmp
addr16
or
push
cmc
call
test
sbb
jae
sub
adc
arpl
and
mov
cmpsl
lret
dec
stos
jne
push
sub
or
ja
jae
mov
and
and
lret
movsb
add
xor
sbb
xchg
jmp
xlat
call
inc
loope
negb
pusha
movsb
stc
adc
adc
mov
push
pop
adc
ljmp
mov
inc
daa
in
dec
gs
push
jbe
out
lock
xlat
pop
je
push
ret
pop
into
push
aam
jl
sub
and
insb
adc
aad
movsb
xor
repnz
and
sbb
out
sbb
addr16
pop
gs
jo
mov
xchg
lods
push
mov
xchg
inc
xor
mov
lea
sbb
loope
rolb
outsb
fsubp
in
jns
loope
mov
gs
sub
mov
and
aad
push
test
xor
scas
mov
jno
xorl
add
dec
fnstsw
test
sbb
repnz
roll
mov
gs
dec
or
outsb
and
imul
mov
mov
mov
gs
inc
call
fwait
cmc
and
gs
sub
testl
adc
mov
mov
push
push
gs
rcl
mov
xor
mov
cmp
xchg
cmp
sub
shrl
adc
and
cmpsb
or
xor
sbb
adc
jecxz
mov
lea
faddl
cli
and
xchg
test
cmpsb
pop
loope
in
stc
jne
push
sub
sbb
lret
mov
sub
jnp
cmp
mov
loope
mov
xchg
test
gs
jecxz
or
out
jmp
push
frstor
add
sbb
xor
jne
xchg
xchg
jb
cmp
test
popa
out
fdivs
insl
shrl
test
sub
mov
fwait
inc
in
xor
mov
jg
fsubrl
addr16
cmpsl
dec
push
in
pop
or
sbb
dec
mov
mov
inc
repz
xor
xor
pop
gs
popa
ds
gs
or
dec
aaa
inc
mov
fisttps
sbb
gs
stos
and
xlat
pop
fldl2t
mov
jecxz
pop
add
cltd
ds
jns
add
addr16
push
ret
jecxz
gs
ja
xor
out
push
sub
insb
pop
gs
adc
scas
popf
ja
and
ljmp
stc
lods
and
and
inc
gs
sub
int3
dec
das
in
cmc
jo
inc
lcall
xlat
jecxz
push
aam
mov
xchg
gs
cmp
cmp
xchg
jne
pusha
adc
stc
shll
dec
out
lods
pop
outsb
xlat
xchg
jmp
jl
in
adc
or
mov
inc
call
and
test
sbb
cmp
and
jne
cld
inc
push
ret
adc
mov
and
dec
fistpll
mov
cmpsb
fidivrl
add
mov
subl
out
pop
xchg
into
fmull
push
cmp
fisubs
adc
pcmpgtw
mov
shll
inc
sub
pop
insb
outsb
fnsave
cmpsl
mov
pop
push
dec
loope
dec
cmp
jmp
js
push
repnz
mov
gs
pop
inc
jl
int3
sub
xchg
scas
and
mov
lds
in
cmpsb
loope
outsl
mov
inc
jb
out
push
pop
xchg
mov
xchg
cmp
scas
lock
mov
in
push
add
push
xlat
jns
rcrl
gs
inc
xor
add
leave
gs
push
pop
cmpsl
repnz
jns
mov
sarb
sub
insl
mov
gs
sbbl
shr
push
mov
std
lahf
gs
adc
push
inc
or
lahf
or
repnz
mov
aaa
sbb
mov
xchg
gs
out
daa
clc
lahf
dec
pop
sub
jnp
gs
cmpb
mov
adc
xorb
jo
mov
orl
test
sbb
adc
testl
pop
cmp
lcall
cmp
lea
int
mov
cs
insl
inc
aaa
mov
std
pop
cmpsl
sbb
out
gs
push
mov
pop
int
sbb
bound
js
pop
sub
mov
loope
gs
test
mov
jbe
outsb
daa
popf
scas
mov
jmp
gs
pop
subl
or
mov
cli
add
jae
mov
es
xchg
inc
xchg
sub
add
mov
mov
push
mov
movsb
mov
shll
jnp
xchg
push
dec
mov
gs
out
jne
mulb
repz
out
and
mov
mov
push
mov
push
icebp
scas
arpl
loope
sub
in
push
enter
gs
outsb
lock
mov
sub
aas
in
ficompl
adc
inc
jae
mov
and
shrl
pop
es
cmc
jecxz
dec
ja
xchg
jnp
call
test
jns
ja
or
pop
adc
in
cli
sub
xchg
mov
test
fsubr
outsb
cmp
xor
in
gs
imul
adcb
fmull
adc
sbb
int3
ss
jne
inc
jg
dec
cmp
mov
inc
mov
fcomps
loope
add
add
lahf
push
gs
sbb
sub
xor
rorb
in
mov
adc
dec
stos
push
xor
sbb
aaa
les
sub
jp
dec
pop
enter
je
fstpl
imul
dec
jge
and
lods
imul
gs
orl
loopne
and
or
jg
sbb
gs
lock
cmp
arpl
pop
lea
out
dec
push
mov
jecxz
popa
dec
mov
xor
inc
nop
imul
outsl
cmpsb
fmuls
lods
sbb
pcmpgtw
loopne
pop
test
adc
out
cmp
je
frstor
xor
jmp
gs
xchg
cld
xchg
lea
jo
or
xchg
loope
and
lret
jecxz
std
insb
lea
ljmp
sahf
mov
arpl
sbb
into
mov
mov
adc
hlt
or
sub
mov
enter
leave
ja
outsb
gs
sbb
add
loopne
adc
or
xor
frstor
xchg
xchg
movsb
jecxz
mov
data16
dec
push
pusha
xor
into
outsl
mov
cmp
pop
out
lret
cmpsl
jecxz
push
sub
lret
inc
mov
or
in
cmp
and
out
push
fs
sbb
add
push
fidivrl
push
xchg
jl
mov
aaa
stos
mov
gs
inc
mov
pop
fcmovne
sti
sbb
sbb
add
jbe
cmp
iret
adc
loope
stc
gs
ficompl
mull
orb
ljmp
lods
and
gs
push
mov
cmp
and
inc
jge
lods
and
aad
jmp
lret
jmp
dec
inc
out
lcall
mov
leave
gs
lods
clc
fwait
cmpsb
xchg
mov
jmp
mov
addr16
cmp
rcl
xor
or
es
aaa
vcvtsi2sdl
push
scas
lock
in
sahf
fidivrs
clc
jne
and
out
lret
scas
sub
dec
dec
add
jns
xchg
adc
nop
sbb
ja
gs
iret
mov
xor
dec
mov
inc
sub
cld
adc
lret
dec
jl
gs
je
insb
pop
mov
addr16
pop
mov
gs
push
rcl
and
and
test
push
sub
int3
sbb
dec
das
cmp
sbb
inc
add
gs
rcll
xor
cmpsb
leave
icebp
test
scas
sbb
and
data16
jo
fs
push
cmp
imul
adc
mov
in
jns
mov
test
mov
and
jle
test
xor
test
clc
pop
gs
fistps
imul
pop
in
insl
push
insb
gs
cmp
sbb
nop
and
data16
push
sbb
aam
add
daa
cmpsl
gs
pop
mov
sub
lock
xor
pop
mov
rol
adc
jecxz
hlt
cmp
out
mov
mov
mov
lret
xlat
add
and
pop
mov
push
fdivrl
gs
movl
jo
mov
mov
or
stc
in
push
notb
dec
aas
gs
pop
jo
cmp
push
sbb
dec
nop
sub
and
push
mov
imul
jecxz
lds
sbb
outsb
dec
jmp
or
xlat
jp
insl
ja
ficoms
xchg
mov
mov
sbb
pop
mov
outsb
gs
cmp
in
xor
mov
sub
outsl
push
rorl
test
and
adcl
or
shll
loope
or
movl
sub
fildll
push
popl
fs
and
xchg
popf
rcrb
repz
bnd
imul
xchg
call
loop
aam
dec
mov
in
outsb
mov
lock
mov
in
inc
fildl
shlb
mov
push
or
sbb
and
mov
lds
les
sub
xor
rol
mov
jns
mov
xor
adc
mov
cld
jne
add
clc
mov
int
dec
iret
gs
or
inc
stos
pop
add
push
lods
repz
xchg
inc
je
mov
shll
subb
push
inc
fnstenv
dec
aaa
xchg
dec
mov
jae
fnstsw
cltd
in
xchg
xlat
sbb
in
gs
push
divb
xchg
vpcmpgtw
std
addr16
adcl
movsb
mov
push
les
gs
es
hlt
fists
gs
imul
gs
jbe
popa
cli
sbb
mov
jno
scas
fisubrs
inc
sub
mov
or
jo
jp
sub
sbb
pop
fnstsw
xchg
fsub
cli
push
cmp
aas
inc
dec
mov
jmp
jecxz
mov
lods
outsb
imull
jns
outsl
lea
mov
inc
adc
out
imul
gs
sarb
adc
push
imul
jl
sub
call
fldt
xor
movsb
clc
pop
sbb
arpl
fwait
sbb
aad
scas
cmpsl
lds
push
lcall
idivb
or
pop
jo
add
int3
es
dec
fcompl
xchg
ljmp
das
ss
xchg
or
xor
lods
gs
jmp
out
sub
aam
fisttpll
adc
gs
mov
or
mov
mov
gs
dec
insl
clc
int
in
imul
xchg
aad
cmc
gs
enter
mov
mov
or
shrl
fcompl
gs
and
and
mov
loope
enter
or
inc
ja
sub
lods
sbb
pop
bound
sar
gs
pop
push
ja
jecxz
cmp
and
mov
pop
fwait
gs
and
sbb
xor
test
dec
scas
cmpsl
gs
leave
outsl
test
xchg
call
xchg
xchg
or
outsl
pop
insb
dec
mov
jno
out
lahf
pop
sub
sbb
jge
xor
or
loope
sbb
call
add
or
push
cmpl
push
in
rcl
jns
pushf
subb
js
fwait
pop
filds
ljmp
adc
mov
mov
xor
aaa
lods
fisubs
popa
pop
xor
jne
clc
gs
int3
and
fs
sub
fadds
add
in
scas
std
into
out
loopw
jmp
push
jo
sub
jnp
add
gs
or
jge
ss
or
insb
ret
mov
or
cmc
jns
mov
and
mov
xchg
gs
pop
cmpsb
or
lock
mov
mov
fisubrs
jne
sub
xchg
sbb
jmp
dec
push
adc
gs
xchg
xlat
push
rorb
jbe
sbb
popf
pop
je
mov
jcxz
pop
xor
jp
gs
push
mov
mov
mov
sbb
in
dec
push
rorb
repnz
gs
enter
ds
shll
imul
test
jl
pop
imul
xchg
jge
ret
xchg
jo
cmp
cs
xchg
cmp
sti
add
es
and
adc
push
push
psubsb
gs
inc
cwtl
or
cmpsl
inc
loop
in
cmpsb
sub
mov
cmp
jle
sbb
dec
jb
lcall
shrb
lods
jmp
jmp
lods
leave
inc
divl
mulb
xchg
jno
mov
icebp
mov
sbb
sub
or
sbb
call
xor
mov
idivl
into
std
shlb
jb
gs
sub
pop
mov
jle
dec
pop
pop
fisttpll
pop
pop
popa
gs
sub
imul
ljmp
xor
ja
ret
outsb
aaa
into
or
jmp
fistps
in
lods
inc
cmp
gs
sbb
and
lcall
fsub
or
jne
test
xchg
aas
es
gs
jecxz
xlat
push
and
xlat
test
movb
push
jns
dec
inc
push
or
sbb
xor
cmpl
and
lock
repz
outsl
inc
out
jne
or
mov
pop
add
mov
inc
rcrb
dec
mov
push
lcall
xchg
lea
and
fldenv
cli
test
mov
gs
icebp
sbb
sti
and
push
lcall
arpl
xor
mov
gs
adc
mov
sti
pop
gs
mov
gs
int
push
mov
lock
imul
or
sbb
xor
dec
jne
arpl
add
adc
add
lods
cmp
push
rcrb
subl
call
int
ret
nop
ljmp
pop
push
es
xlat
fisttpl
gs
jae
faddl
gs
adc
ss
cmp
lea
fdivs
roll
jecxz
int
mov
or
jb
xlat
js
cmpsl
dec
or
scas
clc
insl
jo
fmul
pushf
mov
jbe
insb
dec
and
mov
out
mov
in
movsb
int
or
mov
mov
pop
cmp
pop
fiaddl
dec
sub
cmp
push
cmp
in
rol
pop
sti
and
inc
mov
xchg
insl
std
pop
repz
divl
xor
aas
dec
and
or
push
xchg
gs
in
je
adc
gs
inc
inc
fsubr
mov
push
pop
push
jae
lock
pushf
inc
lahf
popfw
test
cld
shlb
cmc
loope
lret
xor
gs
push
scas
arpl
stos
mov
lock
lret
dec
xchg
cmovae
std
add
sti
adc
xchg
inc
sbb
pusha
push
inc
repz
push
sahf
push
and
and
cmc
and
repnz
adc
mov
xchg
dec
mov
dec
push
xchg
stos
stos
sarl
in
gs
mov
mov
pop
ret
sbb
fdivr
out
and
xchg
xchg
mov
push
in
pushf
pop
mov
jae
mov
or
and
test
adc
jno
iret
jl
rcrl
stos
jns
call
push
gs
add
xchg
and
xchg
les
pusha
sub
mov
jne
daa
or
lds
test
mov
xlat
std
and
dec
xchg
mov
mov
pop
mov
fadd
mov
push
xchg
adc
or
dec
push
andl
dec
push
inc
or
sbb
gs
push
and
or
gs
in
outsl
in
and
mov
mov
pop
daa
shlb
mov
jne
faddl
in
lahf
pusha
data16
mov
ds
inc
test
sbb
ja
insl
ss
loope
into
sub
xchg
pop
sub
sub
jmp
mov
mov
mov
pop
sbbb
gs
das
mov
aaa
gs
cmp
sub
mov
pop
ret
fs
inc
inc
imul
imul
gs
jb
aam
test
sbb
cmp
pushf
pop
test
mov
call
in
fwait
or
mov
gs
roll
inc
ljmp
test
push
add
jg
adc
mov
gs
jo
pop
mov
int
outsl
xchg
or
xchg
mov
rcll
and
inc
lret
in
adc
ja
mov
flds
jo
or
mov
ljmp
and
sbb
jmp
xchg
xor
data16
jl
into
jmp
adc
fiadds
lea
mov
test
push
stc
cmpsb
mov
fistps
insl
mov
xchg
lahf
loop
jo
mov
rclb
adc
cltd
inc
and
sbbb
pop
cwtl
mov
adc
test
add
cwtl
lods
aaa
jne
aam
gs
orl
dec
dec
mov
or
and
popa
mov
inc
inc
jne
pop
mov
repnz
pop
lods
mov
pop
fldl
pushf
jne
popl
aam
fidivrs
aaa
mov
jmp
orl
into
test
in
lahf
sbbb
bound
xor
js
and
sub
mov
out
test
psraw
push
and
mov
inc
outsb
jne
and
pusha
fsubl
gs
test
push
jecxz
mov
mov
mov
and
inc
push
gs
fucomi
je
and
and
stc
sub
in
pusha
cmpb
adc
mov
dec
and
addb
ret
movsb
xchg
mov
loopne
gs
push
mov
xchg
xchg
pop
pop
test
mov
gs
das
jbe
int3
or
adc
xor
std
xchg
xor
inc
jecxz
movsb
and
sub
icebp
and
out
pop
add
jmp
nop
rcrb
dec
and
jb
add
pushf
jle
loopne
lods
aas
std
out
lock
mov
push
and
orb
adc
and
sub
or
inc
jnp
cltd
jg
repnz
and
sub
shll
jne
outsb
cmp
mov
sub
ret
ss
or
repnz
sbb
mov
sub
icebp
inc
jg
dec
ljmp
cmpsl
mov
in
and
insb
imul
in
arpl
sub
and
push
adc
call
in
iret
cmc
jecxz
mov
push
fstpl
mov
fiaddl
xor
add
nop
cs
and
gs
fmull
data16
cmp
out
pusha
inc
lock
mov
fs
jo
push
mov
or
pop
adc
xchg
or
sbb
push
sbb
lods
js
xor
gs
push
bound
cwtl
dec
daa
pop
add
sbb
mov
cltd
jae
pop
por
in
and
sbb
cmpsb
xor
add
sahf
jecxz
push
mov
sahf
repz
mov
xchg
or
xchg
scas
leavew
enter
jecxz
inc
or
and
mov
jnp
lock
sbb
xchg
dec
out
xchg
push
imul
push
aad
insb
jl
gs
pop
out
jecxz
sbb
xchg
sbb
gs
int
pop
gs
ja
and
cmp
aad
or
pop
fs
mov
imul
push
fucom
mov
ret
mov
pushf
cmp
adcb
fimuls
lret
cltd
and
scas
sbb
test
icebp
outsb
test
inc
gs
stos
imul
sbb
int3
sti
jle
arpl
stos
mov
fisubs
adc
xor
mov
adc
jge
gs
jae
sti
lods
inc
xor
lea
clc
mov
jle
mov
inc
push
mov
les
scas
loop
hlt
stos
mov
dec
addr16
gs
rcrl
jle
push
testb
faddl
dec
jl
gs
and
stc
stos
cmpsb
gs
mov
outsl
lcall
into
rolb
or
lock
rclb
jne
inc
mov
es
gs
mov
js
sarb
ja
add
testb
or
xchg
pushf
jno
sbb
xor
inc
and
negb
outsb
shrl
gs
rorl
je
push
sub
push
or
jb
or
add
pop
ja
dec
mov
js
push
nop
pop
add
test
mov
mov
test
psraw
pop
mov
ss
pop
jmp
rep
mov
jnp
addb
xor
rcl
jae
pop
and
gs
push
xchg
mov
pushf
cmpsl
and
int
push
fisttpl
out
mov
test
cmp
jns
sub
sbb
jb
mov
xchg
cmpsl
or
mov
xor
addr16
ret
lea
and
aad
push
test
gs
rorl
lahf
push
das
xlat
or
in
sub
mov
mov
gs
insl
pop
stc
gs
rclb
xchg
mov
daa
enter
cmp
loope
aaa
sti
sub
fbstp
jmp
into
aam
jne
mov
scas
jbe
movb
mov
mov
aam
enter
pop
lock
jo
pop
mov
stos
dec
cmpsl
loopne
mov
rorl
outsb
push
lret
pop
jne
add
andb
pop
and
adc
call
movsb
movsb
bound
cld
add
data16
gs
insb
add
jecxz
mov
xchg
imul
jle
add
enter
movsb
gs
andb
arpl
pop
cmp
jnp
fistps
js
addr16
filds
gs
test
pusha
cmp
dec
xchg
out
push
push
arpl
inc
push
gs
add
pop
sub
mov
adc
cwtl
add
mov
mov
cltd
repz
gs
push
jecxz
push
xor
fistl
xor
aam
pop
shrb
cmp
adc
jecxz
add
das
adc
pop
ret
gs
push
add
negl
adc
cmp
and
paddusb
lahf
loope
pop
adc
push
cmpsb
insb
xchg
es
outsb
test
stc
cwtl
stos
cmp
scas
adc
cli
cmp
jne
test
mov
addr16
cs
test
or
loope
mov
adc
fdivs
mov
gs
test
pop
adc
pushf
mov
loope
andb
xor
cli
gs
mov
adc
insl
push
and
xchg
leave
rcrb
cmp
test
test
jmp
cmc
jp,pn
mov
rorb
jne
inc
pop
pop
xchg
xchg
gs
fs
adc
push
and
jmp
outsl
inc
mov
outsb
cmc
cli
sub
dec
inc
shlb
inc
and
nop
insl
inc
lds
in
aad
out
popa
cmp
scas
or
out
push
xlat
cmpl
inc
sbb
testb
push
push
add
je
push
insl
push
movlps
jbe
mov
daa
lods
or
and
scas
cmp
out
or
fsubl
imul
push
or
xor
cmp
push
xorb
dec
jecxz
xlat
xchg
push
gs
idivl
loopne
decl
xchg
popa
jno
pop
mov
nop
push
mov
jne
in
fdivrp
inc
les
lea
lods
cmp
xlat
mov
dec
rol
scas
xor
gs
out
jg
test
inc
or
into
icebp
jo
imul
inc
sbb
pop
push
and
test
imull
fsts
mov
gs
xor
ja
popl
push
ds
add
jns
xchg
pop
and
ret
call
cmpsb
andl
xor
push
mov
imul
xchg
pushf
imul
int3
sub
out
pop
imul
rcl
js
xor
fstl
repnz
push
addr16
gs
clc
dec
and
sub
pop
fs
inc
xchg
jbe
call
adc
mov
push
je
add
pop
push
in
rclb
stos
scas
inc
and
add
sub
pushf
add
shl
cmp
mov
cmp
mov
mov
bound
pop
testb
cld
andl
cli
lret
frstor
test
neg
push
push
lcall
gs
js
inc
test
fs
cwtl
add
jle
dec
mov
rcll
dec
in
lods
jbe
or
mov
pushf
push
test
xchg
loop
test
push
sahf
add
and
pushf
es
fnstcw
mov
arpl
cmp
jnp
test
gs
repnz
adc
in
lods
sub
jmp
add
cmpsl
dec
sbb
rcrl
xor
mov
gs
jl
rolb
cmc
call
fisubl
xchg
test
jecxz
xchg
stos
in
or
pop
idiv
or
push
add
jnp
nop
and
rclb
sbbb
leave
cs
stc
gs
dec
mov
push
mov
addl
gs
pop
add
jmp
gs
jne
add
mov
add
enter
or
mov
pop
jb
adc
dec
mov
xchg
xchg
push
sahf
gs
cltd
mov
jbe
add
fldenv
dec
pop
outsl
push
shr
or
and
push
adc
dec
andl
ljmp
out
lret
cmpsb
and
outsl
inc
jb
mov
lds
xlat
iret
gs
and
in
outsb
imul
cwtl
fwait
es
push
bound
xchg
negl
sbb
rcll
adc
hlt
dec
mov
push
leave
ja
fidivl
out
lea
jge
xor
pop
ja
mov
mov
sbb
fwait
ds
inc
xor
push
sbb
xchg
cmpsb
rcrl
js
outsb
mov
jb
push
sub
int3
or
stos
xor
aad
arpl
test
aam
mov
dec
aaa
scas
mov
jmp
xor
stc
sub
aad
invd
gs
repz
gs
push
sub
push
xlat
addr16
dec
call
and
out
pop
subl
sub
sbb
cmp
in
gs
scas
push
pop
imull
cmp
push
sbb
cmpsl
outsl
jmp
mov
gs
mov
gs
cli
ja
pusha
rcr
mov
xor
and
push
leave
mov
iret
lcall
fmuls
je
inc
xor
scas
enter
outsb
cmp
jo
xor
xchg
dec
mov
xchg
mov
or
clc
jge
add
push
cmpsb
in
in
rorl
jb
xor
add
sub
inc
cs
or
fstpl
out
aaa
adc
push
add
js
push
push
inc
push
pusha
xchg
gs
ret
jg
inc
lcall
inc
icebp
fidivl
add
fidivs
addb
pop
aad
sub
sbb
out
jbe
or
sahf
rcll
cmp
xchg
aad
lea
mov
cli
repnz
add
aam
or
popf
jp
xchg
gs
and
call
or
test
popf
aam
imul
fisubl
mov
divb
mov
xacquire
in
cmpsb
in
lds
aaa
insb
jl
inc
cmovns
gs
ficoml
xchg
jo
imul
data16
mov
dec
gs
test
sti
rorb
cmp
loope
leave
insl
mov
rclb
std
add
adc
sub
xor
gs
lea
mov
pop
test
pop
fwait
enter
push
shll
ss
les
stos
outsl
es
mov
iret
jns
dec
push
test
ret
push
cmp
leave
pop
mov
outsl
or
je
lahf
gs
insl
add
jns
in
mov
aad
sub
ja
paddusw
xchg
adc
in
and
mov
leave
adc
hlt
jp
inc
int3
push
push
cmc
pushf
out
aas
gs
xchg
sub
vpunpckldq
sub
jecxz
pop
lret
insb
in
push
mov
jecxz
mov
xchg
cltd
cwtl
jae
les
pop
adc
gs
sbb
ss
gs
pop
call
movsl
jecxz
popa
div
jmp
mov
push
inc
je
jp
fimull
jecxz
cwtl
mov
scas
and
push
inc
jb
sbb
xchg
cmp
and
imul
push
cwtl
mov
and
add
push
jp
jge
imul
dec
push
fldl
gs
faddp
andb
addl
popf
sti
jp
jnp
pop
in
loope
or
pushf
push
mov
inc
xlat
dec
push
dec
or
gs
xchg
xchg
mov
mov
repz
gs
adc
push
push
ja
pop
hlt
lods
in
xchg
cwtl
sub
faddl
lea
jecxz
inc
mov
mov
fimull
push
pop
pop
leave
adc
push
outsb
sbb
enter
outsb
fmuls
gs
and
adc
fcoml
into
dec
movsb
sbb
popa
cmp
test
push
mov
xchg
mov
cmp
pop
pushl
push
gs
or
lahf
gs
push
dec
sub
cmp
mov
push
push
pop
mov
xor
rcrl
pop
fisttps
jecxz
testb
scas
test
inc
test
mov
ja
push
xor
aas
push
add
je
push
or
popf
jecxz
pusha
bound
sub
lcall
pop
ss
nop
fcomps
xchg
jp
js
shl
arpl
dec
push
repz
xor
jmp
je
in
push
gs
in
into
lods
pusha
mov
ret
repnz
loop
or
mov
dec
pusha
xlat
or
fidivs
push
insb
imul
fdivl
push
inc
jo
push
sub
gs
dec
pop
mov
in
adc
xor
notl
mov
and
gs
adc
pop
loop
in
dec
imul
aas
ja
jmp
mov
mov
gs
pop
loope
repz
and
mov
mov
pop
cmp
test
adc
pusha
gs
fwait
sub
mov
jbe
pop
or
gs
mov
mov
cmp
adc
imull
inc
inc
gs
fisubrl
push
insb
mov
pop
adc
loop
pusha
inc
jecxz
out
adc
popa
inc
jmp
sbb
sbb
loope
xchg
gs
mov
pop
mov
push
lds
adc
mov
xchg
gs
inc
inc
scas
inc
cmpsb
mov
adc
adc
negb
mov
adc
test
xchg
gs
pop
stc
shl
stos
gs
push
and
std
mov
fisttps
pop
pop
dec
test
lret
loope
cmp
lea
mov
loopne
inc
aad
jl
mov
sub
subps
push
sti
add
fwait
insl
cld
sbbb
loope
gs
scas
push
add
jo
popf
fistpll
fdivrs
dec
jle
into
mov
sbb
xchg
push
add
adc
mov
xor
cmc
inc
cmp
loop
shrd
xor
fcmovu
or
dec
mull
js
pop
lcall
stc
stos
xchg
xor
mov
xchg
sub
hlt
shlb
ffree
push
dec
gs
pop
fneni(8087
sahf
scas
gs
push
clc
jns
sub
cli
sti
cmp
xor
lret
ljmp
std
aad
ja
mov
adc
sbb
xor
xor
test
iret
mov
mov
mov
out
nop
fildll
adc
test
mov
gs
or
mov
dec
xor
pop
jo
fisubs
pop
or
loope
mov
pop
sti
fsub
js
gs
insb
bound
mov
rcr
sbb
push
out
loop
cli
push
aas
lea
push
adcl
sub
mov
and
js
and
shrl
push
test
and
or
addr16
ret
or
sub
and
add
cltd
gs
push
dec
mov
and
inc
xchg
frstor
dec
and
cmpsb
pop
pop
and
push
es
shrb
loopne
ja
xchg
jns
out
cmp
insb
dec
int
xchg
jne
lahf
fdivs
jmp
xchg
pop
iret
gs
xor
xchg
mov
loope
mov
xchg
insb
sbb
mov
addr16
outsb
mov
gs
iret
xchg
out
xchg
cmp
and
pushf
shll
into
adc
gs
jp
popa
ja
and
nop
and
pusha
ljmp
enter
loopne
jne
sub
aad
aas
gs
adc
cmpsb
or
lods
xor
iret
stos
sbb
or
std
adc
push
jne
jnp
lods
imul
testl
pop
dec
outsl
cltd
lods
add
xchg
xchg
ljmp
pop
lcall
insl
stc
negb
xchg
into
inc
insl
inc
sbb
dec
ret
mov
mov
push
add
call
mov
jecxz
jmp
fisttpl
and
out
out
cmp
pop
shrl
cld
and
inc
xchg
rorb
push
pushf
jecxz
negb
in
jmp
imul
inc
cwtl
adc
ret
xor
xchg
add
xor
cmp
ja
dec
cwtl
push
push
bound
push
push
loopne
sub
push
repnz
daa
jecxz
ret
gs
push
and
adc
aad
xor
femms
movl
or
push
aad
jo
jge
neg
mov
in
xchg
cmpsl
push
scas
mov
jecxz
imul
or
sbb
into
mov
dec
hlt
fldenv
jmp
inc
add
jns
mov
inc
adc
pop
lret
dec
std
cs
xor
int3
push
data16
add
push
test
sub
xchg
mov
and
das
cmp
sub
mov
shrl
mov
gs
testl
rcr
mov
gs
pop
gs
mov
test
cmpsb
loope
jmp
dec
xchg
or
add
gs
clc
dec
into
cwtl
loop
jmp
sbb
jno
gs
jge
inc
sub
add
aam
sbb
xchg
loope
lods
push
jecxz
push
jne
cmp
ja
negl
or
icebp
xor
cmp
jae
jne
imul
daa
ds
mov
aaa
mov
clc
jae
sti
xor
pop
sub
inc
lret
add
xor
jl
call
andl
nop
mov
push
loopne
sahf
aaa
dec
lret
mov
clc
adc
mov
movsb
xor
jecxz
mov
push
mov
gs
popa
jle
mov
sub
add
inc
push
ds
test
pop
iret
xchg
cwtl
jno
dec
xchg
mov
xchg
cmp
lea
push
sahf
or
add
jae
xchg
pop
pop
sub
cmp
pushf
and
test
cld
hlt
jecxz
mov
mov
outsb
popa
dec
rorl
fldcw
loopne
sub
lods
test
lods
outsb
je
aam
orb
lcall
gs
push
std
dec
gs
mov
frstor
add
arpl
xchg
inc
xchg
and
cmp
add
and
cltd
xchg
fsubrl
jb
retw
mov
push
and
in
lea
frstor
mov
xchg
cmp
mov
inc
push
sub
jp
ficoms
fistpl
insl
jo
dec
sbb
insb
cmp
cltd
gs
push
push
pop
lcall
xor
int
gs
xchg
push
out
mov
outsl
push
test
fdivrs
xchg
repz
mov
cld
mov
dec
adc
push
insb
xor
ljmp
in
outsb
es
jne
jne
adc
and
sbb
insb
pop
popf
fstpl
push
sub
xor
imul
mov
mov
lret
sbb
mov
mov
add
sbb
xchg
gs
rclb
adc
cmpsb
cmp
gs
push
add
insl
adcb
sub
mov
clc
call
gs
xchg
ljmp
sbb
jnp
add
mov
or
and
jmp
pop
ficoms
lods
jne
pop
mov
sub
cli
cmc
aas
push
pop
xor
pop
adc
popw
dec
jg
pop
pop
pushf
dec
cwtl
jne
mov
outsl
dec
aam
jo
inc
ja
xlat
pop
les
xchg
cmpsb
add
pusha
and
scas
icebp
jo
in
fsub
scas
xor
pop
inc
cwtl
mov
xchg
jae
or
pop
enter
int
out
repz
gs
mov
andl
jns
gs
and
test
shufps
mov
jecxz
xchg
lret
jge
push
push
or
dec
pop
xchg
rcrl
mov
pop
gs
shl
leave
mov
fiadds
dec
ja
mov
gs
pop
adc
pop
jp
rorb
sub
inc
cmp
repz
dec
sahf
mov
or
test
imul
daa
dec
sbb
inc
mov
inc
or
lret
rcrb
test
and
nop
shlb
push
stos
movsb
push
imul
cwtl
stos
addb
pushf
js
cmpsl
je
cmp
nop
jecxz
scas
mov
es
sub
push
gs
xor
sbb
leave
repz
mov
sub
dec
outsb
out
imul
inc
pop
mov
or
xor
push
cmp
pop
movnti
jns
push
adc
insl
cmc
add
push
hlt
ss
daa
pop
sbb
icebp
xor
sbb
jae
adc
or
int
in
in
jmp
gs
das
js
push
imull
gs
jns
movsb
pusha
jne
cpuid
push
push
cwtl
push
gs
push
xlat
aad
ss
ffreep
or
clc
adcl
gs
lods
out
xor
push
gs
cmpsb
mov
sbb
test
jae
gs
jnp
int
lret
gs
les
into
scas
mov
add
out
mov
ja
sub
cwtl
mov
and
in
jno
scas
cs
out
xchg
gs
sbbl
cmp
push
xor
jnp
mov
shrl
jo
fcomps
pop
push
loope
mov
aaa
jb
mov
dec
sub
sbb
in
sbb
imul
push
gs
cmpsb
inc
dec
mov
and
xchg
outsb
loopne
pop
ja
add
xor
and
test
insb
iret
push
and
es
lods
daa
mov
mov
and
aad
fdivrl
adc
sbb
sbb
mov
jle
xchg
movsb
cwtd
jmp
test
stos
test
lock
mov
stc
gs
cmp
xor
adc
pop
dec
movsb
repz
ja
sub
insb
and
outsl
ss
jp
cmpsl
sub
out
fmulp
gs
push
xchg
inc
stc
sbb
sbb
jne
pop
lahf
inc
pushf
test
sub
es
cs
add
jbe
gs
imul
push
jl
sub
inc
enter
pushw
popf
sti
bound
xchg
or
test
into
and
xlat
iret
mov
or
gs
pop
dec
mov
sbb
pop
das
cmp
scas
je
ffree
add
xchg
shll
pop
cltd
into
and
inc
mov
add
add
faddp
jo
pop
andb
pop
aaa
mov
out
icebp
aam
ret
scas
jae
std
in
pop
int3
sarb
add
das
lea
or
dec
in
lcall
mov
fwait
pushf
xchg
fldenv
pop
stos
pusha
cmpsb
mov
lock
push
mov
out
and
xor
outsb
cmp
push
gs
add
jbe
inc
gs
or
mov
mov
mov
les
inc
add
gs
mov
or
xchg
lock
pop
ret
outsb
jp
add
insl
add
mov
pop
ja
cwtl
shl
cmp
imul
pop
mov
mov
fcom
icebp
adc
mov
mov
scas
adc
icebp
mov
xor
cmp
xor
ja
and
xrelease
insl
sub
fstl
inc
lahf
xchg
or
push
daa
sahf
ret
test
icebp
fmuls
mov
inc
scas
fisubs
cli
negb
psrlq
jl
or
out
cld
xchg
gs
mov
adc
xor
cmpsb
add
mov
mov
in
mov
andl
mov
lahf
pop
shll
xchg
gs
sbb
pop
aad
inc
or
hlt
lea
stos
scas
in
gs
faddl
gs
das
xor
sub
repz
jns
in
aam
pop
scas
mov
pop
pop
stos
fnstsw
fwait
cmpsl
pop
call
dec
jnp
jae
cmpsl
push
inc
cmp
inc
cs
add
cmpsb
xchg
out
outsb
cmp
aam
pop
dec
shrl
mov
scas
push
into
leave
gs
add
mov
imul
add
xchg
in
sub
push
insl
fbstp
lea
out
pop
inc
int3
gs
in
aad
and
add
mov
gs
das
ror
pop
call
sub
test
in
dec
ljmp
test
mov
xor
mov
push
scas
popa
dec
pop
xchg
in
add
std
adc
aaa
push
es
mov
mov
stc
and
sbb
lcall
test
fwait
mov
push
clc
sub
daa
jbe
dec
jns
data16
push
insl
mov
push
jecxz
test
andl
bound
test
pusha
outsl
jae
and
push
lret
lods
xchg
gs
aad
fcmovnb
adc
mov
or
sbb
or
test
ss
adc
dec
cwtl
les
mov
fistpl
add
xchg
mov
gs
aaa
cld
out
pop
lahf
js
pop
insb
gs
fs
xor
mov
lods
into
in
gs
mov
in
fistps
mov
jnp
aam
jns
and
sub
jne
nop
push
arpl
pop
gs
pop
pop
je
push
sar
mov
pop
in
xorl
mov
int
movl
popa
sbb
loop
aad
ja
cmp
hlt
in
dec
or
push
adc
add
cli
outsb
fs
cld
je
shll
iret
aaa
mul
cmp
gs
addb
enter
dec
cmp
sub
inc
aam
jns
mov
idivl
int
sub
mov
xchg
cs
mov
call
addr16
push
gs
loopne
jmp
push
mov
or
mov
mov
imul
fimull
add
jae
decl
sub
cmc
jnp
and
mov
cltd
mov
stc
loope
pop
into
xchg
sbb
outsb
sbb
aas
pop
sub
sbb
testl
popf
xor
fstpl
cmp
or
mov
out
add
pop
in
sbb
lahf
ljmp
sbb
test
fwait
dec
cmp
inc
add
frstor
push
int
push
or
flds
jns
mov
cli
pusha
jno
nop
gs
sbb
lods
dec
int
pop
add
mov
bnd
jno
dec
dec
gs
leave
mov
mov
gs
push
dec
out
xchg
mov
in
jl
xor
fistps
mov
gs
arpl
out
fwait
scas
sub
gs
daa
cmp
loopne
sub
and
fwait
pop
gs
jmp
stos
and
lock
mov
test
scas
movsb
inc
jmp
inc
mov
cmp
mull
sub
pcmpgtw
fcomip
pop
cli
push
jo
push
jmp
int
pop
push
gs
push
out
cmp
enter
or
in
xchg
mov
enter
jo
insl
mov
nop
gs
xor
sarl
sub
inc
pop
gs
push
mov
fsubs
push
dec
lcall
repnz
sbb
outsl
push
or
rolb
je
inc
ret
cmp
jnp
xor
add
shlb
sub
fldl
lret
pop
flds
je
ss
aas
sahf
xchg
gs
fldt
jmp
push
cmp
fs
gs
or
cli
ljmp
sub
dec
je
scas
gs
pop
xchg
push
shll
jecxz
insb
mov
push
test
pop
push
out
pop
jl
adc
jge
aaa
sahf
and
enter
and
shr
xor
push
rcrl
sub
stc
add
push
int3
add
cmp
dec
sub
in
mov
nop
mov
sbb
hlt
cmp
lahf
sub
push
jno
jns
pop
add
fs
cld
movsb
insb
and
pusha
out
cmp
or
add
fistps
int
gs
dec
addl
sub
sub
cmp
movsb
rol
js
test
leave
addl
aad
jg
adc
popa
and
nop
loope
mov
add
xchg
cltd
popf
in
or
sub
dec
and
ret
imul
stc
cmp
jo
fidivs
mov
jl
and
push
cli
cld
xchg
cmp
aam
lcall
cmp
or
jge
cs
out
gs
pop
jnp
hlt
lret
push
shlb
adc
sub
sti
cwtl
jno
mov
daa
rorb
arpl
iret
leave
lret
lcall
jnp
mov
ja
out
adc
cli
rorb
mov
fwait
sbb
xlat
aaa
gs
call
gs
ret
inc
jb
das
clc
cmpsl
sti
jmp
fidivrl
scas
in
add
mov
sbb
sti
jmp
subl
cmp
outsl
xadd
push
jg
js
and
pop
scas
xchg
aad
mov
addr16
mov
js
add
sub
cmp
gs
mov
or
mov
out
mov
mov
test
ss
jge
cs
les
cmpsl
jl
js
inc
aad
scas
gs
jns
mov
adc
add
add
pop
xor
or
bound
mov
jne
xchg
test
mov
gs
popa
dec
fbld
addb
cmp
gs
push
and
adc
xchg
push
push
roll
in
stc
lret
daa
and
jno
iret
addr16
push
lcall
clc
jns
gs
sub
mov
arpl
gs
lea
dec
push
and
clc
push
mov
ret
sbb
divb
lods
push
push
mov
cld
mov
stc
sbb
enter
gs
adc
adc
add
mov
fisubl
push
cwtl
xor
js
lret
bound
adc
scas
jae
sub
rorl
in
imul
fmul
xor
or
pop
xlat
pop
dec
aaa
xchg
and
push
cmc
jecxz
movsb
scas
fidivrl
subb
in
adc
insl
scas
sti
xchg
xor
add
xchg
outsl
insl
adcb
shrb
xor
sub
xlat
fsubrl
mov
iret
rclb
push
cltd
outsb
and
mov
cli
orb
test
aas
fidivrs
stc
shrb
mov
pop
mov
pop
popf
test
cmp
push
xchg
cmpb
aas
jecxz
and
jp
ret
adc
divb
outsl
jg
ret
gs
mov
enter
dec
gs
pop
ja
pop
cmp
popf
gs
add
sub
in
or
jecxz
jmp
out
ss
jae
pop
adc
xchg
cmc
out
jmp
pop
inc
adc
gs
dec
cmp
roll
jecxz
frstor
js
mov
push
test
xchg
ret
cs
out
addr16
xchg
das
dec
daa
push
es
popf
fwait
xlat
or
call
mov
lock
mov
and
xor
fisttpll
daa
gs
std
sub
jo
stc
loop
std
mov
ss
arpl
and
in
repnz
in
nop
push
xchg
les
sub
jne
add
jo
cmpsl
sbb
in
jns
cmp
sbb
loop
adc
push
mov
cmp
jg
repz
fbstp
out
scas
or
sar
push
push
stos
in
jbe
ja
incl
xchg
and
insb
pcmpgtw
lds
dec
lods
shlb
mov
cmp
mov
repz
jecxz
scas
mov
or
gs
loopne
movsb
fcom
leave
and
push
push
nop
outsb
jg
gs
lahf
sub
dec
mov
pop
xor
mov
jecxz
or
sahf
gs
nop
dec
mov
and
push
jns
jnp
rcl
outsb
cli
gs
pop
adc
push
out
gs
sbb
mov
gs
mov
push
popf
jg
test
mov
repnz
nop
add
gs
push
mov
leave
and
lret
xchg
ficoml
and
in
gs
mov
into
gs
mov
push
push
ja
fisubrl
int
mov
aaa
and
pushf
or
popf
testl
jle
push
lea
cmp
test
dec
cmp
mov
cs
or
push
test
inc
push
and
cmpsl
dec
mov
int3
div
xor
test
and
scas
xchg
pop
fistps
cmp
fisubrs
sub
outsb
iret
xor
and
sub
push
jecxz
push
and
daa
jge
scas
das
inc
sbb
shl
push
jge
xor
outsl
push
gs
pop
sbb
orl
mov
outsl
loop
repnz
jmp
add
or
iret
rcrl
sub
pop
idivb
cli
xor
jno
pusha
inc
adc
jl
je
push
gs
fwait
jmp
lea
ficoms
shlb
ljmp
loope
add
lcall
xchg
aaa
gs
iret
xchg
gs
enter
out
jecxz
mov
inc
pop
outsb
dec
adc
and
stc
lods
cmp
sbb
gs
and
sti
add
loopne
jg
cmpl
in
arpl
adc
lahf
mov
mov
xlat
ja
gs
das
cmpsl
jmp
leave
gs
pop
xchg
cli
fs
xchg
sti
std
inc
hlt
addl
bound
jb
or
sub
inc
inc
fcoml
bound
cmp
jmp
call
pop
aam
pop
clc
mov
dec
mov
sub
sub
add
cmpsb
mov
lods
js
adcl
jle
es
cmp
enter
gs
cmp
shlb
arpl
enter
movsb
sub
jecxz
out
xchg
outsb
or
mov
cmp
jne
pop
ret
rcll
in
mov
xchg
outsb
push
in
and
push
sub
orl
enter
add
ffreep
test
scas
push
test
sbb
or
sbb
adc
scas
insb
bound
pop
mov
mov
cli
fldt
xor
mov
fs
xor
movsl
jne
sub
inc
jno
mov
loope
push
jecxz
or
push
mov
das
and
les
insl
sbb
push
out
pop
pop
jns
dec
jg
jecxz
daa
sub
push
lret
sbb
mov
gs
push
push
sub
les
imul
pop
xchg
inc
fcoms
gs
xor
mov
test
jns
bound
push
gs
test
push
inc
pusha
or
add
ret
test
les
ds
sub
xor
nop
mov
fldl
mov
dec
sub
xchg
gs
lods
idiv
cld
repz
lock
pop
aaa
mov
andl
test
cmp
jmp
insb
test
xchg
or
sub
cmpl
mov
nop
fs
rcpps
scas
inc
shll
dec
mov
sbb
shrb
hlt
into
sbb
repnz
lds
sbb
and
std
gs
pop
add
shlb
sahf
mov
test
xchg
fstl
pop
jecxz
or
pop
dec
adc
scas
mov
andl
dec
inc
gs
dec
ljmp
mov
mov
into
push
push
enter
sub
ja
adc
jb
lock
adcl
jl
jg
les
ficoml
out
lods
cs
jecxz
add
gs
and
pop
sub
jbe
popf
mov
es
gs
xchg
inc
mov
jno
cmp
xor
addb
add
pop
xchg
in
and
jmp
gs
psadbw
loope
sbb
mov
lea
lock
js
inc
call
out
gs
mov
fwait
sbb
push
cmp
inc
jbe
push
xor
xchg
push
mov
insb
leave
dec
in
cmpsl
dec
gs
call
imul
jp
lcall
pop
pop
jb
adc
outsb
jne
or
mov
movsb
fiadds
notb
and
cmp
fisubrl
lret
gs
js
rclb
sahf
fsubr
jne
outsl
cmp
pop
cwtl
popa
jge
int
xchg
push
gs
adc
rcrb
call
pusha
push
and
lds
adc
out
test
sub
daa
xor
rcll
lret
lock
jge
and
rcll
cmp
mov
jbe
push
fadd
gs
jl
inc
scas
js
gs
add
gs
inc
cli
jp
fidivl
gs
push
addr16
adc
in
dec
gs
out
std
cmp
add
inc
push
out
in
loopne
mov
cmp
stos
mov
lea
gs
push
adc
sbb
and
gs
pop
movl
xchg
jae
and
add
fistl
gs
mov
and
sbb
xchg
in
gs
add
and
lcall
out
pushw
gs
insl
enter
and
or
fldenv
les
dec
das
or
push
push
add
sbb
sbb
dec
push
inc
add
andl
mov
sbbl
mov
adc
scas
adc
js
mov
sbb
addr16
push
add
and
dec
nop
aam
insl
fs
xchg
dec
xor
lds
imul
inc
rcrl
xor
cmpsl
sub
inc
mov
xor
lcall
adc
dec
fcoml
jmp
in
dec
xchg
and
nop
mul
insb
sbb
and
xchg
push
popf
jo
push
and
and
dec
inc
mov
sbb
pop
push
jp
and
inc
in
gs
or
xor
daa
gs
call
xor
shll
mov
in
cmp
adc
mov
gs
cs
push
out
mov
jg
imul
xchg
pop
bound
and
mov
cmpsb
pop
gs
lock
cmpl
cli
and
pusha
push
push
addb
push
xor
sbb
add
gs
adc
cmp
scas
inc
dec
push
cmpsb
xchg
mov
call
pushf
cmc
ja
gs
jnp
or
pop
mov
push
pusha
cmp
push
cmp
in
aad
fwait
mov
mov
or
arpl
rcr
add
imul
fwait
lods
jne
push
insb
xchg
js
into
decl
jnp
mov
aas
push
dec
pop
jle
mov
inc
sbb
pushf
sbbl
outsl
gs
dec
add
ficoml
inc
stc
cli
jne
cmp
andl
cmp
es
mov
xchg
dec
mov
gs
dec
inc
pop
jb
sbb
in
dec
ljmp
ja
jo
mov
mov
jg
xchg
xor
lods
clc
push
mov
push
addr16
gs
rorb
sub
xor
push
mov
popf
aas
andb
pop
nop
jae
test
movsb
in
clc
pop
dec
push
jne
inc
jnp
push
inc
xchg
cmp
and
bound
outsl
add
in
or
lcall
push
imul
fbstp
inc
push
adc
gs
jnp
cli
mov
push
lcall
call
je
cmp
jns
cs
ficompl
pop
push
jecxz
cmp
dec
js
xor
inc
addr16
pop
int3
scas
mov
or
imul
and
push
test
das
aam
fldenv
jmp
outsb
and
or
ljmp
and
bswap
cmpsl
sbb
adc
inc
sbb
lods
inc
push
jg
imull
push
mov
mov
push
stos
inc
popa
jmp
gs
mov
daa
adc
cmp
pusha
xor
orl
sahf
pop
sub
jne
cs
roll
mov
xchg
insl
jne
jl
nop
add
mov
movsb
xchg
push
gs
lsl
push
gs
adc
outsb
push
pop
xor
hlt
push
cwtl
gs
pushw
fs
pop
jmp
in
dec
mov
and
pop
subl
rorl
es
les
mov
cld
xchg
mov
ds
add
push
push
sbb
mov
outsb
jp
or
xchg
movl
jbe
enter
push
repz
cmpsl
ss
or
jmp
out
jne
dec
mov
gs
adcb
outsb
xor
mov
add
and
xor
js
adc
imul
lods
mov
jp
sub
leave
push
out
gs
or
clc
mov
cmp
jb
repz
dec
insb
gs
xor
data16
jg
gs
sbb
ja
add
pop
and
call
shrb
in
and
jo
inc
lock
insb
and
cmp
inc
cmc
aaa
jae
cmpsb
lds
xchg
in
inc
add
arpl
jge
pushf
sahf
andl
in
sub
sub
jmp
cmpsb
test
imul
push
nop
xorl
insl
xchg
test
xor
pop
jns
mov
shr
inc
push
cld
cmpl
push
jnp
jno
ror
in
or
inc
xor
dec
in
ret
inc
insl
int
mov
out
sbb
mov
test
pushf
sbb
es
adc
and
mov
and
aad
jbe
insb
sub
out
push
out
cmp
and
cld
add
push
outsl
and
in
std
das
add
jge
jle
mov
cmpsb
mov
lds
cmp
ljmp
adc
inc
sub
iret
dec
mov
jae
scas
inc
into
data16
and
push
aad
in
sarl
lock
insb
jg
pop
inc
sbb
push
sbb
pop
out
pushf
into
xchg
xchg
rcr
mov
repnz
insb
push
xchg
xchg
in
ret
mov
sub
inc
leave
mov
lret
lods
gs
sahf
lcall
ret
shll
lds
repnz
adc
adc
rorl
jne
dec
stc
jnp
inc
std
in
fdivp
ss
inc
sbbb
mov
mov
iret
mov
lods
gs
mov
mov
inc
push
mov
jmp
andl
xchg
out
mov
test
gs
inc
xor
mov
xchg
push
xor
pop
xchg
cli
sub
sub
add
add
sbb
sub
mov
dec
filds
sub
and
and
cmp
and
gs
aam
xor
mov
in
mov
mov
jns
cs
mov
fidivrs
mov
popf
stos
bound
fistps
xchg
mov
lods
ja
scas
call
or
icebp
mov
insl
mov
mov
inc
gs
mov
xor
ja
push
jp
lret
and
mov
imul
push
lret
scas
mov
gs
in
bound
pop
jne
jno
push
inc
gs
sar
xchg
xor
int
pop
sbb
mov
gs
call
jnp
jne
scas
shrl
mov
jecxz
lods
xlat
jbe
jmp
inc
or
adc
cmp
lcall
mov
ja
jae
cli
jg
xor
add
xlat
mov
mov
test
out
adc
int
cmp
aaa
add
gs
pop
jbe
sti
sbb
pusha
in
bnd
inc
push
jno
sbb
aad
adc
inc
cwtl
and
gs
inc
mov
cmpsb
gs
sarb
add
sub
repz
and
insl
adc
gs
call
push
pushf
jno
jbe
pop
pop
sub
loope
pop
sbb
test
mov
ljmp
movsb
or
mov
out
fstps
jne
add
gs
add
ljmp
add
push
shl
imul
es
mov
push
inc
xchg
dec
in
dec
add
mov
push
sbb
gs
pop
dec
shrl
ljmp
mov
test
xlat
gs
xchg
mov
into
push
cmp
jg
jbe
xchg
pop
push
mov
gs
jne
fs
mov
shlb
xchg
stos
cmpsl
mov
mov
aad
mov
pushf
ds
idivb
sub
push
pop
popf
mov
push
into
push
and
scas
add
je
mov
lret
cltd
jle
jmp
xchg
push
cmp
cmp
popa
cmp
mov
jecxz
inc
mov
jecxz
xor
movsb
test
das
mov
sbb
mov
loopne
xchg
loope
mov
cli
gs
in
mov
xor
pop
sti
gs
push
lcall
add
insl
cli
jnp
and
or
pop
add
repz
dec
les
inc
cs
loope
mov
jl
xchg
gs
into
clc
les
mov
pop
test
mov
aad
dec
les
mov
lods
sub
jne
xchg
js
mov
xchg
jmp
popa
and
loopne
xchg
jno
je
inc
push
xchg
js
filds
fldenv
jb
sbb
loopne
pop
mov
mov
cmpsl
sti
mov
in
push
sahf
repz
mov
or
jne
rcrb
loope
and
outsb
int
jg
orl
bound
adc
seta
gs
jle
push
dec
mov
pop
xor
fcmovnb
daa
out
dec
adc
leave
fidivrl
pop
bound
xchg
push
lret
fnstsw
fwait
xlat
ret
inc
mov
sarl
es
movsb
push
fildl
xchg
movb
mov
sub
repnz
xchg
dec
inc
lcall
outsl
xor
push
cltd
call
aas
test
add
xchg
sub
test
frstor
jl
je
jecxz
loopne
or
pop
popa
imul
rcrl
lds
mov
enter
gs
rorb
add
mov
das
xor
test
jecxz
dec
push
xchg
mov
and
dec
push
test
pop
add
lods
push
xchg
pop
xchg
loop
outsl
das
dec
jne
sbb
adc
cmpsb
loop
stc
inc
lret
sbb
in
mov
sub
inc
jo
push
aam
out
gs
ds
inc
jecxz
push
and
jp
jecxz
loopne
test
lods
push
xor
pop
insb
stos
gs
pushf
cmp
push
cmpsb
leave
pop
cs
xchg
pop
inc
add
mov
pop
pushl
sub
add
idiv
mov
ljmp
inc
and
fmuls
add
and
xor
gs
adc
sbb
push
or
in
push
js
add
outsl
cmp
gs
xchg
inc
jecxz
dec
inc
jns
arpl
add
sub
push
gs
insb
jne
into
gs
xchg
andb
lcall
popf
lods
jle
ds
insb
push
out
dec
sbb
xor
xchg
gs
dec
jmp
jne
jnp
gs
push
mov
cmc
jbe
gs
lahf
imul
xchg
inc
add
push
dec
imul
mov
nop
sahf
adc
loopne
imul
dec
push
gs
mov
and
aad
push
gs
push
rcll
xor
xchg
jge
call
jno
sub
je
xchg
inc
outsb
gs
insb
idivb
xor
pusha
scas
jmp
cmp
gs
cld
into
jns
xchg
adc
xor
or
jp
lock
mov
mov
jge
pop
lea
andb
mov
lods
je
sub
xorl
daa
or
push
int3
lds
add
testl
sahf
mov
xor
imul
and
mov
jo,pt
js
pusha
adc
scas
or
sbb
ret
push
aaa
cmp
jg
xor
mov
rclb
cmp
and
dec
dec
lret
xchg
push
je
loopne
push
lret
and
out
lods
gs
and
lds
sub
push
cmc
lea
fcomps
jne
les
inc
testl
xchg
add
sub
adc
mov
call
pushf
mov
push
scas
fisubs
xchg
add
out
sti
cmp
sbbb
mov
and
dec
inc
and
sahf
cmpsb
gs
xor
mov
add
mov
loope
sub
inc
xor
andl
adc
sbb
jg
ret
test
addr16
mov
gs
mov
das
mov
xchg
sbb
pushf
mov
imulb
inc
mov
mov
fmul
push
mov
gs
dec
mov
xor
out
lret
aad
push
pop
push
or
popf
repz
in
xor
fldt
gs
xlat
iret
dec
test
leave
ret
out
cmpsb
jecxz
shlb
clc
mov
std
outsl
pusha
pop
gs
push
push
cmp
les
shlb
ljmp
and
mov
lret
mov
cmp
aas
gs
lock
cmp
lods
cmp
lret
loope
mov
mov
vmread
add
gs
inc
pop
lcall
test
or
in
leave
gs
mov
mov
add
lcall
mov
inc
imul
push
or
xchg
jle
out
xor
sahf
rcrb
inc
insb
lahf
test
mov
jne
stos
out
mov
mov
out
pop
add
push
bound
outsl
jmp
scas
push
push
test
dec
jb
gs
fidivs
ret
cmp
add
rorb
jne
lea
test
jecxz
mov
mov
add
out
xor
push
subb
enter
gs
push
cmc
fwait
push
mov
loop
in
jecxz
xchg
stos
pop
xchg
mov
mov
xchg
mov
out
xor
fldt
into
cli
call
mov
jne,pn
popa
jl
scas
jecxz
repz
cwtl
jnp
xorl
lcall
cmp
xlat
enter
fldenv
adc
arpl
or
dec
push
mov
jecxz
add
aam
fsubrl
jge
int
cmp
lds
sub
jbe
and
xchg
pusha
sahf
add
cmc
jns
inc
lods
mov
aaa
inc
fsubrl
outsl
out
gs
xor
repz
in
scas
jecxz
sub
insl
out
outsb
sub
add
movsl
xor
daa
adc
gs
push
push
lret
leave
dec
sub
gs
aad
mov
pop
mov
jge
jge
or
push
ret
fstpt
and
imul
and
mov
gs
xchg
sbb
out
gs
push
push
cmpsl
cmp
iret
pop
enter
gs
rorb
mov
sbb
fildll
sahf
ja
jne
or
push
mov
je
and
xchg
mov
gs
sbb
js
mov
stos
arpl
jl
jo
in
ficomps
jg
imul
push
inc
jnp
fcompl
aam
sbb
adc
cmc
lods
jmp
call
aam
fdivp
bound
adc
les
cmp
stos
dec
inc
add
outsl
or
int3
mov
lods
scas
mov
and
adc
sub
jmp
fdivs
outsb
sub
mov
inc
andb
mov
test
add
gs
jle
inc
gs
pop
adcb
dec
das
gs
jns
dec
out
leave
bound
pop
sahf
popa
repz
adc
icebp
gs
dec
mov
in
divl
fsubs
dec
ja
not
and
ficompl
insl
gs
inc
call
pop
scas
outsb
data16
mov
push
pop
add
je
inc
rcrb
pop
sahf
addr16
hlt
inc
cli
cld
cltd
orb
pop
imul
addr16
mov
in
mov
jne
and
jp
jo
push
mov
add
pop
gs
sbb
jmp
inc
movsl
outsl
pusha
inc
gs
rcrl
jge
js
xor
out
adc
mov
cmpsb
cmp
pop
lock
mov
in
lea
adc
mov
xor
xor
jo
sub
test
pop
stc
sub
gs
ror
mov
pop
les
adc
adc
pop
xchg
push
ja
push
or
fnsave
je
jg
ds
call
test
cmpsl
pop
mov
push
aas
jb
test
cmp
inc
gs
mov
mov
adc
jns
ss
stos
adc
in
leave
mov
inc
push
test
gs
sbb
jge
ja
pop
sub
mov
cmpsb
into
xor
inc
fs
subb
gs
test
push
loope
addps
xchg
dec
lahf
cmc
and
mov
lods
cs
scas
mov
mov
fistpll
gs
adc
outsb
jg
lods
ja
call
pop
aas
pop
and
ret
fs
dec
inc
std
push
popf
testl
cmpsl
filds
add
scas
or
pushf
dec
int3
gs
mov
in
jb
in
aas
mov
and
mov
shll
lret
mov
test
jb
xor
cwtl
sti
xor
sbb
inc
fisubs
test
sahf
sbb
inc
gs
xchg
clc
push
pushf
jmp
test
test
jbe
nop
les
mov
add
mov
and
fimull
or
mov
jg
hlt
das
sbb
je
fldenv
or
pusha
push
xchg
cmpsl
xorb
stos
xor
les
fs
sti
add
lods
xchg
popf
cmpb
faddl
fwait
leave
in
inc
mov
xor
adc
into
or
popf
xchg
aad
dec
test
push
jno
sbbl
mov
daa
push
das
shll
lods
ja
sub
loope
mov
imulb
rorl
or
fidivs
out
xchg
insb
cmp
mov
mov
subb
loope
testb
xchg
icebp
cmpsb
mov
leave
in
in
push
cmp
jnp
or
jle
gs
pushf
adc
jmp
ljmp
sub
fisttpll
push
push
push
and
xchg
jl
lods
mov
adc
and
sub
call
shrl
lret
xchg
jb
mov
dec
loop
test
or
or
gs
pop
push
sbb
pop
shlb
int
add
sahf
sub
adc
rcr
movsb
rcrb
inc
aas
cld
repnz
test
adc
out
gs
adc
jb
inc
lahf
sub
push
andl
cmpsb
mov
sub
adc
sub
test
mov
xchg
jne
jo
mov
sub
dec
mov
gs
scas
xchg
pushf
cmp
push
xchg
test
mov
inc
add
push
pop
adc
call
mov
jl
insl
inc
ret
pop
mov
fwait
movsb
mov
loope
fstl
jns
test
cltd
jne
jg
gs
mov
sbb
push
test
push
dec
xchg
cli
daa
aaa
jno
frstor
jmp
jae
jno
imul
out
dec
std
lods
lods
gs
mov
jbe
ret
xlat
dec
sub
mov
mov
mov
outsb
lods
and
mov
dec
jnp
mov
adc
xor
jne
mov
rclb
testb
fisubrl
sbb
scas
adc
pop
gs
enter
mov
inc
lret
mov
mov
imull
adc
gs
lods
cmp
pop
inc
shr
pusha
jle
fmull
xor
xor
cltd
cmpsw
imul
inc
adcl
enter
dec
lods
gs
ret
xchg
or
push
add
mov
dec
jp
xor
sub
outsl
mov
dec
add
je
adc
jbe
mov
ret
jecxz
cmp
mov
jmp
icebp
mov
ljmp
std
sahf
shrb
inc
lahf
pop
leave
sbbl
jns
push
add
push
mov
and
inc
rcl
lea
repz
mull
loop
ror
jge
cmp
ljmp
nop
pushf
fiaddl
pop
ljmp
inc
imul
dec
scas
jae
cmpsb
jmp
gs
imull
mov
mov
das
xchg
nop
aam
mov
scas
mov
gs
ja
das
xchg
jp
js
push
dec
cltd
fdiv
rcrb
jmp
and
dec
lret
xchg
call
cmp
pop
sbb
xchg
mov
cmp
fdivrp
push
out
std
jecxz
dec
pushf
sbb
fbstp
es
and
xchg
push
insl
fwait
jns
gs
insl
mov
dec
sub
pop
loop
lock
cmpsl
insb
in
sub
scas
push
roll
cmp
jnp
imul
sub
xor
xor
scas
das
mov
jecxz
pusha
bound
in
insl
inc
rclb
lock
icebp
sbb
mov
jle
sub
jecxz
inc
jns
cmp
push
jmp
xor
cmp
gs
pushf
pop
xchg
add
sub
dec
cmp
gs
mov
data16
divl
ret
mov
out
add
and
std
pop
shlb
in
adcl
jl
cmpsl
iret
xor
mov
xor
gs
idivb
mov
cmp
pop
pop
test
shll
insl
add
push
lcall
and
popa
and
inc
mov
rcll
push
and
pop
add
add
mov
lods
pop
scas
test
mov
adc
dec
inc
and
sti
test
in
into
gs
inc
rolb
popa
pusha
jae
add
xchg
insb
xor
inc
mov
sbbl
mov
leave
inc
or
xchg
push
xor
mov
inc
mov
adc
sti
mov
push
push
in
pop
in
enter
jnp
stc
mov
imulb
gs
push
ljmp
or
lods
inc
dec
push
and
cli
les
inc
xchg
sub
gs
dec
scas
leave
insb
dec
sbb
and
xchg
or
repnz
push
addl
negb
in
scas
rcrb
and
cmp
cmp
push
dec
loopne
xor
gs
out
and
gs
fs
push
mov
sbb
inc
push
les
gs
mov
gs
insl
mov
or
add
cwtl
push
sbb
push
repz
sbb
gs
into
xor
or
mov
push
fsub
test
scas
shlb
aaa
mov
mov
inc
sbb
dec
push
sub
ret
cmp
adc
jp
idivl
lods
adc
hlt
cmpsl
fcmovb
jo
loopne
gs
popf
adc
and
in
ljmp
fisttpll
xchg
gs
or
sahf
and
cmpsb
int3
lods
lea
gs
cmpb
add
pop
pop
push
sbb
test
sbb
lahf
jb
xor
mov
sub
xchg
push
mov
aad
and
in
bnd
jecxz
lea
ja
stc
jg
gs
sub
js
pop
jmp
add
mov
or
aam
cld
shrl
and
cli
mov
loop
lods
lea
pusha
movsl
addr16
add
cs
mov
xor
mov
repnz
or
adc
int3
dec
gs
pop
add
add
and
out
mov
inc
inc
push
shrd
cmc
add
fwait
dec
mov
in
xchg
stos
stos
fndisi(8087
dec
mov
cmpsl
jge
xlat
inc
sbb
jo
jl
adc
imul
sarl
mov
call
ds
mov
cmpsb
ret
inc
pop
gs
cmp
push
mov
mov
test
mov
gs
and
scas
fadd
mov
in
mov
sbbl
shlb
sarl
imulb
fbstp
cmc
and
faddl
gs
adc
gs
xchg
stos
lcall
or
int
gs
mov
and
pop
lods
adc
int3
addl
gs
fdivs
gs
and
mov
cmp
test
jl
scas
mov
fcomip
ficoml
mov
push
outsb
gs
xchg
das
in
mov
jg
jl
mov
jno
push
bnd
pop
lea
gs
fldl
daa
loop
out
gs
fisubrl
dec
inc
and
lds
fisubl
push
mov
xlat
mov
xchg
enter
gs
in
push
cmp
sbb
push
jg
inc
jnp
and
repnz
or
gs
or
stos
or
pop
cmpb
addr16
mov
xor
gs
mov
adc
gs
and
jns
mov
xchg
ss
xor
cmp
mov
dec
jne
pop
call
sbb
in
cmc
inc
and
or
movsb
stc
push
cmpsl
pop
test
scas
test
in
fsubrs
lcall
gs
mov
cmp
push
add
mov
and
dec
jge
xchg
cmp
loope
out
outsl
in
cwtl
pushf
cltd
jne
cmp
and
ss
loope
cmpsb
lods
pop
lods
andl
je
sbb
leave
notl
sub
jbe
nop
sarb
mov
inc
jns
call
pop
dec
or
into
xchg
leave
cwtl
adc
sub
dec
add
cli
adcl
fdivrs
gs
test
hlt
sbb
sub
mov
jb
ss
les
dec
lods
pop
push
adc
xor
inc
and
mov
hlt
lea
scas
call
rolb
shll
add
std
ja
xor
or
addr16
cmp
iret
sbb
pop
mov
loopne
push
inc
imul
dec
arpl
cmpsb
pop
jmp
jne
gs
insl
jecxz
fstl
inc
pop
stc
add
int
push
push
mov
jns
jmp
rcll
shr
cld
lods
dec
les
mov
adc
adcb
inc
enter
mov
or
cmp
and
push
jge
es
jb
addr16
pop
inc
sub
std
jae
andl
xor
call
out
pop
mov
sbb
sbbb
xchg
pop
aas
outsb
dec
popf
ret
addr16
adc
icebp
or
lods
scas
mov
sahf
cmp
in
das
dec
adc
add
int3
cmp
cmpsb
mov
sub
out
mov
fiadds
and
xchg
jns
sarl
xor
fildll
fisubs
jg
gs
add
jnp
mov
and
jecxz
bound
fldl
adc
pop
sbb
bound
and
mov
jb
mov
adc
gs
mov
outsb
gs
out
mov
or
pop
pop
cmp
ret
stc
gs
sbb
pop
rcrl
push
in
push
inc
xor
sub
jecxz
xor
sbb
mov
and
shrl
gs
fsubrs
gs
adc
dec
and
mov
mov
call
push
mov
ds
pop
stos
aaa
sbb
add
lret
into
add
test
ds
mov
cli
outsb
or
xchg
xor
jns
gs
lock
fwait
rolb
into
test
jmp
sub
in
inc
daa
data16
das
sbb
gs
maxps
rorl
xchg
shl
pop
scas
push
push
xorb
cmp
mov
mov
sub
mov
mov
lock
lret
jo
loopne
aaa
sbb
mov
bound
sbb
loope
xchg
xchg
sbbl
daa
cmpsb
sbbb
out
ja
js
repz
pop
xchg
mov
test
inc
lock
jecxz
mov
mov
jg
in
outsb
sub
repnz
xchg
mov
jl
imul
jle
jb
int3
clc
into
gs
xlat
add
gs
sahf
adc
push
gs
dec
push
rclb
out
gs
sbb
jle
or
cmpsb
imul
test
sub
dec
loopne
lret
ja
test
xor
cmp
push
cwtl
rol
cmp
gs
dec
ja
adc
repz
cltd
jnp
push
add
inc
dec
mov
jns
sub
mov
stc
ret
push
sub
lret
inc
and
mov
mov
movlps
decb
sbb
jl
in
repz
sti
cmp
push
ljmp
lea
sbb
xor
jle
sub
loop
and
out
scas
jb
inc
gs
cmpsl
cmpsb
mov
pop
xchg
gs
mov
les
jp
lret
mov
in
lahf
gs
loope
fcomp
mov
mov
add
adc
pop
gs
lret
xor
fs
in
jbe
xchg
jecxz
mov
cmp
fcmovnu
gs
xchg
pusha
call
xlat
gs
lret
dec
ljmp
pusha
dec
cmpsb
loopne
stos
lock
jmp
dec
push
and
in
mov
jg
ds
gs
lds
push
add
jo
rcrl
mov
insb
cld
test
aad
call
mov
pop
sbb
add
add
cmp
jbe
test
pop
leave
enter
lds
out
pop
es
pushf
mov
push
or
insb
gs
ljmp
into
xor
testl
cli
daa
ljmp
jp
xlat
scas
mov
mov
push
out
mov
outsl
enter
mov
pusha
aas
dec
jecxz
inc
inc
into
jg
pop
pop
or
in
in
add
push
cmp
sbb
push
jno
xchg
repnz
pop
mov
lods
mov
pop
es
pop
pushf
loopne
add
mov
lahf
lods
xchg
fwait
inc
xor
repnz
scas
xchg
push
mov
inc
mov
inc
orl
cmpsb
shlb
mov
mov
adc
adc
cltd
sbb
xor
cli
sbb
in
mov
bound
orl
gs
sar
pushf
xchg
jne
xor
std
xor
out
gs
clc
or
jmp
cmc
and
mov
dec
xchg
mov
mov
gs
and
nop
mov
or
lahf
jne
pop
sbb
xchg
push
out
push
test
outsb
pop
sub
gs
int3
mov
xor
in
decl
insb
ja
pop
shlb
mov
push
sub
fildll
clc
and
stos
int3
xchg
inc
mov
sub
fdivrs
insb
or
fsubrp
mov
gs
and
mov
jp
push
icebp
sahf
jecxz
mov
cmpsb
sub
cmc
jno
push
mov
sub
mov
xor
or
mov
mov
repnz
gs
iret
add
test
jo
inc
in
gs
sub
outsb
bound
cmpsb
int3
movsb
ja
scas
dec
add
test
fmuls
or
add
jl
lgs
imul
push
and
movsl
pushf
insl
xlat
pop
adc
adc
rcrl
mov
popa
popf
jmp
cltd
and
fwait
adc
and
test
in
xor
jecxz
and
jne
and
sahf
arpl
in
mov
push
loopne
and
loope
push
out
mov
lret
rcl
sbb
lods
mov
imul
shll
jno
push
inc
mov
inc
movsl
in
jbe
lds
movsb
addr16
imul
jne
je
xchg
aad
lcall
sbb
and
or
jns
in
movsb
in
test
sti
bound
pop
popf
pop
in
and
dec
jns
cmpsl
loop
cltd
out
push
mov
and
dec
or
mov
add
mov
xchg
inc
sahf
and
and
adc
and
jne
xorl
and
ficomps
fs
mov
mov
jb
popa
xchg
movsl
cmp
pop
addr16
ja
enter
push
or
xor
mov
mov
int3
scas
dec
sbb
adc
les
in
pop
aam
and
movsb
inc
inc
add
cmp
lods
mov
arpl
xchg
and
push
jne
sbb
popa
pop
pop
loope
dec
enter
in
into
enter
nop
aam
xchg
stos
mov
lret
sbb
imul
movsb
jl
pop
jne
hlt
xchg
jp
repnz
lcall
mov
repz
loope
xor
and
push
int
popf
movsb
adc
popa
ds
ja
push
push
sub
xchg
adc
dec
xchg
dec
xchg
cmp
jb
and
inc
mov
repz
imul
test
push
test
and
sub
and
cwtl
fildll
test
xlat
xchg
jecxz
adc
sub
orb
sub
mov
outsl
test
subb
in
mov
xchg
loopne
xchg
jecxz
ja
int3
pop
mov
insl
mov
leave
lret
dec
mov
sbb
fisubs
cmpsl
gs
shrl
loopne
popa
pop
ror
shlb
dec
and
popf
and
push
jne
cwtl
inc
aad
pop
push
lcall
xchg
jne
sub
aam
jge
cwtl
in
in
jecxz
mov
and
xor
jmp
sub
mulb
hlt
and
mov
loopne
pusha
and
fucom
fistps
lahf
jo
fisubs
arpl
lea
xlat
shll
gs
in
sbb
lcall
popf
jmp
pop
cmp
mov
inc
outsb
push
aad
jmp
and
push
and
push
gs
jecxz
dec
mov
cmp
xor
imul
pop
push
pop
sbb
sub
pop
xlat
xchg
push
push
aam
push
fs
xchg
push
adc
and
mov
negb
in
ss
dec
lock
scas
xchg
mov
adc
pop
cld
mov
clc
mov
hlt
mov
adc
adc
and
pusha
arpl
call
cmp
dec
mov
popa
shlb
outsl
repnz
pop
push
popa
xchg
gs
and
push
push
movsb
jecxz
dec
loopne
and
mov
gs
fcoms
imul
cwtl
sub
pop
out
cmp
out
sub
das
aam
add
test
jne
lds
stos
inc
cmp
inc
fnstcw
addr16
gs
inc
jp
xor
sub
repz
in
lds
mov
ret
adc
mov
push
sahf
repz
dec
imul
jecxz
sub
cmp
gs
push
in
inc
pop
sub
cmpl
rcrl
mov
leave
cmp
xchg
adc
xchg
outsb
lret
loope
aad
stc
jecxz
add
js
push
test
gs
in
jnp
loope
jo
sbb
test
adc
flds
aaa
ret
or
fbstp
addr16
gs
ljmp
lods
mov
or
sbb
lret
gs
fadds
cli
lahf
clc
sub
sbb
daa
mov
loopne
ds
cmp
rorl
dec
and
inc
mov
push
ret
fstl
and
push
or
scas
adc
mov
sub
mov
fbstp
lret
pop
mov
jo
xor
adc
pop
mov
jae
aas
faddl
dec
stos
jg
jp
gs
xor
inc
xchg
adc
cmpsb
pushf
sub
xor
gs
jl
mov
into
outsl
xor
and
addr16
mov
dec
cmp
addr16
call
je
out
hlt
test
ja
lret
sbb
dec
pop
dec
scas
xchg
mov
pop
xchg
data16
adc
cmp
cmp
push
jno
mov
lcall
xlat
test
ss
xchg
dec
and
mov
dec
or
jne
mov
sbb
lahf
loope
jns
rol
mov
sbb
movsb
pusha
mov
fildl
mov
lcall
xchg
lods
sahf
sahf
gs
mov
mov
gs
scas
jo
mov
jb
repnz
sbb
insb
sbb
fcomps
mov
fs
xchg
outsl
arpl
rorb
xlat
xchg
mov
lahf
jns
or
in
xor
push
push
fs
loope
and
push
fsubl
mov
div
sub
cmpsl
cmp
push
jae
mov
pusha
push
ret
pop
loop
jne
mov
out
cmp
mov
jae
dec
and
insb
fs
pop
and
aad
jae
push
cs
fwait
shll
inc
nop
xchg
movsb
lahf
les
shl
das
and
jne
mov
pop
outsb
fcoml
mov
pop
dec
sbb
arpl
sub
shll
mov
fildl
mov
inc
mov
xor
hlt
stos
andl
push
fsub
or
jnp
xchg
divb
jecxz
mov
xor
pop
pop
jnp
inc
inc
mov
jae
push
andl
inc
bound
scas
cld
pop
inc
scas
sub
dec
in
incb
adc
pop
andl
fsub
and
and
push
and
sub
lds
mov
mov
cld
mov
cmp
test
insb
mov
push
cmp
popf
lahf
mov
clc
jl
loopne
sti
jae
inc
and
sbb
lret
xchg
andb
ljmp
and
inc
mov
mov
pop
andl
out
adc
jg
mov
pop
adc
dec
dec
cwtl
lock
mov
pushf
jecxz
push
clc
add
cli
mov
ss
dec
sbb
out
data16
mov
mov
and
push
lds
mov
fucomi
pop
fstp
gs
das
test
out
scas
imul
push
fnstsw
addr16
pop
jecxz
dec
cli
or
mov
or
andl
xor
mov
daa
test
stos
fisubs
sti
and
addr16
out
push
aad
add
gs
cmp
push
shll
outsl
xor
std
sbb
cmpsb
or
into
aaa
faddl
ja
jle
jns
xor
imul
int
nop
in
fisubl
data16
imul
in
test
xor
in
sub
leave
mov
adc
mov
pop
sub
cmpsl
and
test
jl
pop
lret
gs
mov
and
punpckhwd
test
pop
jb
sbbl
gs
xchg
sbb
and
fwait
jl
arpl
ja
add
push
test
cmp
mov
addr16
pop
sbb
cmc
ja
and
arpl
rorb
in
scas
jmp
mov
mov
and
adc
jne
out
xlat
sbb
mov
and
mov
lcall
das
orl
xchg
lods
dec
cmp
sbb
es
mov
mov
cmc
in
daa
test
xor
popa
addl
pop
dec
fwait
addr16
cmp
js
jnp
imul
out
mov
aad
out
lret
lahf
std
dec
imul
fidivs
outsb
gs
pop
ret
scas
decb
das
test
and
pop
scas
pop
clc
and
cmp
loopne
mov
jns
add
mov
int
pusha
mov
insb
inc
cmp
jo
stos
mov
ret
adc
xchg
jbe
lcall
inc
jnp
pop
add
jmp
pop
mov
aas
std
aad
lods
popa
ficoms
out
sub
addr16
gs
dec
jl
inc
jbe
imul
adc
enter
xchg
push
sahf
repnz
leave
jle
xchg
loop
push
and
and
enter
mov
pop
pop
mov
je
mov
loope
test
int3
mull
dec
daa
cmc
ja
push
jge
inc
and
and
arpl
sbb
mov
mov
sub
dec
and
lahf
in
lcall
mov
push
jbe
aas
pop
xchg
clc
push
sbb
and
pop
mov
js
mov
push
inc
and
lea
dec
ret
test
scas
jmp
mov
pop
aam
insl
lahf
push
and
xor
sbb
fsubl
in
mov
in
test
cltd
dec
popf
lods
lds
popa
pop
sar
dec
mov
and
out
dec
push
jb
adc
into
dec
adc
cmp
mov
jo
fucom
pop
inc
fstpl
lds
mov
lds
sbb
mov
scas
cmpsl
dec
loope
mov
popf
loope
push
mov
sub
into
loope
mov
mov
push
adc
jnp
aam
andl
ret
push
popf
and
mov
mov
arpl
loope
sub
test
dec
mov
or
mov
outsb
or
mov
cmc
fdivrs
jl
arpl
subb
data16
jecxz
cltd
ss
sbb
mov
xchg
arpl
push
daa
loop
jecxz
lahf
mov
pop
sub
nop
and
cltd
fcmovu
inc
push
mov
push
mov
js
xchg
jne
mov
and
insl
shrb
push
arpl
fcmovnu
add
xchg
mov
stos
fs
sbb
loopne
sbb
mov
lret
inc
rcll
popf
dec
mov
sbb
push
fwait
adc
mov
test
loopne
fs
push
jbe
mov
daa
in
mov
popf
xchg
insb
add
imul
sbb
xor
movsl
leave
adc
xchg
pop
shrl
lds
push
mov
jp
xchg
jge
pop
jne
fcompl
jae
lcall
and
and
jae
addr16
gs
outsl
xchg
sahf
shll
mov
xchg
mov
mov
xchg
test
ret
sbbl
clc
mov
mov
imul
int3
dec
jbe
jae
sub
jne
bound
and
shlb
ja
shll
mov
add
sbb
pop
shll
hlt
xchg
pop
test
dec
aam
sbb
lods
and
cwtl
movsb
mov
push
icebp
ror
push
pusha
xchg
cld
arpl
sub
cld
sub
mov
adc
fcompl
add
jb
fldl
fsubl
mov
test
mov
jo
dec
xor
das
and
adc
jno
fimull
in
xchg
and
aas
mov
cmp
and
sbb
lahf
jo
movsb
sbb
mov
push
adc
lret
loop
cs
and
call
inc
and
stos
add
sahf
pop
mov
adcb
js
xchg
sahf
loopne
jle
sahf
aas
jo
sbb
shll
test
in
xor
mov
sarb
xchg
push
adc
jg
sbb
inc
mov
popa
rcll
dec
test
xchg
insb
pop
dec
and
insb
in
movsb
xchg
xlat
push
fcom
jg
sbb
sbb
fsub
cmp
sub
mov
movsl
sbb
or
pop
xchg
addr16
subps
mov
jb
xchg
pop
pop
jge
xchg
popa
movsl
in
test
push
data16
adc
fs
notb
sub
jbe
xchg
popf
rcrl
clc
and
push
test
aad
aam
push
movsb
jecxz
movsb
mov
xchg
mov
adcl
mov
dec
pop
cltd
jae
lods
imul
sbb
add
decl
imul
sbb
mov
ficoms
xchg
js
pushf
fstcw
subb
sub
pushf
pop
and
popf
pushf
adc
jl
adc
mov
or
jno
xorb
loope
mov
cmp
xchg
popf
push
jl
adc
xchg
iret
cli
pop
shl
jbe
mov
cs
shll
mov
fildll
popa
loope
out
sahf
pop
inc
loopne
loope
pop
mov
int
inc
ret
push
mov
ret
push
xor
dec
fwait
pop
mov
fsubp
xchg
popl
sub
pop
movsb
mov
imul
sahf
or
loopne
orb
fs
push
pushf
dec
inc
push
mov
adc
enter
cmp
cmp
push
adc
movsb
aas
mov
mov
hlt
stos
mov
lcall
cmp
inc
lds
fisubs
push
sub
mov
jns
loop
xchg
mov
xchg
pop
mov
fldcw
ret
xorb
mov
or
pushf
xchg
mov
cmpsb
fists
pusha
add
mov
push
sbb
adc
and
mov
aas
xchg
pop
sahf
add
pop
jne
hlt
fisubs
lea
and
fstpl
popf
movsl
orb
popa
and
xchg
push
pushf
mov
sahf
sbb
insl
repz
push
scas
fbld
xchg
xchg
jo
fldt
out
popf
dec
lea
orl
fsub
add
repz
cwtl
pop
test
loop
cmpsb
sbb
dec
jne
add
dec
add
mov
and
and
in
fcmovnb
or
sbb
xor
mov
fstps
and
cwtl
adc
xor
je
test
jl
or
aad
nop
inc
lock
ficoml
sbb
pop
fisubl
js
pop
jbe
jno
mov
mov
pop
js
pop
jbe
mov
mov
out
jnp
and
xchg
mov
and
add
fwait
data16
add
in
xchg
push
lcall
adc
fcoml
push
jno
mov
cmpsl
jle
xchg
mov
xchg
and
shrl
fisubs
jmp
and
cltd
mov
popa
pop
jbe
mov
mov
inc
xchg
mov
popa
jbe
mov
inc
xchg
mov
inc
dec
xchg
out
jns
stos
daa
push
imul
pop
push
call
enter
jp
inc
jge
shll
lcall
fstpl
xlat
push
popf
xor
jecxz
xchg
jae
lds
jle
jo
mov
mov
sbb
xchg
sbb
mov
in
fwait
mov
repz
inc
in
mov
movsb
andb
ret
jns
xchg
mov
cmp
dec
arpl
dec
cmp
and
daa
xchg
data16
stos
push
das
fxam
push
outsb
adc
mov
or
aam
pushf
daa
mov
mov
or
sub
mov
sbb
leave
fsubp
es
xor
sahf
fldenv
popf
stc
push
aam
and
cld
lea
cmp
inc
lea
movsb
xchg
mov
cld
loope
jne
mov
shlb
xchg
insb
lahf
sbb
loopne
xchg
mov
fwait
xchg
in
testb
nop
jle
popa
cltd
data16
add
andb
in
xchg
xchg
jo
mov
cmp
jp
inc
xchg
sbb
andl
sub
adc
lret
rcrb
add
imul
in
imul
imul
push
insl
jnp
arpl
pop
push
adc
pop
and
cltd
push
jnp
sahf
cltd
pop
imul
mov
pushf
in
sbb
fildl
arpl
jns
pusha
mov
push
rorb
sbb
push
inc
sub
fcmovbe
xchg
mov
xchg
loop
push
xor
imul
rorb
test
adc
adc
fmuls
xlat
dec
push
mov
mov
clc
jbe
push
pop
fwait
xor
xchg
mov
push
mov
cmp
andl
xchg
and
mov
mov
jl
xchg
pop
ja
sbb
adc
dec
mov
mov
test
das
lret
fwait
stos
out
and
adc
jb
add
xor
sbb
adc
es
dec
inc
or
add
loope
pop
repnz
cmc
cltd
aas
mov
jge
mov
sbb
fdivp
cmp
inc
outsl
hlt
mulb
cmp
pop
mov
adc
add
or
and
pop
jo
sbb
push
mov
sbb
lea
xchg
fwait
push
push
jl
mov
cmp
inc
push
imul
mov
jae
loope
mov
and
bound
lret
jecxz
or
sahf
sahf
pop
jp
push
movsb
inc
fimuls
push
mov
lahf
iret
sbb
test
add
ficomps
lret
repnz
mov
mov
mov
into
xchg
push
inc
jo
xchg
test
jno
orb
mov
xor
pop
out
data16
pop
fwait
pop
mov
mov
fnclex
aas
mov
pop
mov
push
ret
aam
xchg
mov
mov
jl
fimuls
xor
xor
sbb
xchg
loopne
xchg
js
jl
dec
xchg
ljmp
arpl
sbb
mov
adc
test
push
dec
mov
mov
xor
or
icebp
push
xchg
mov
mov
lcall
popa
lea
mov
cmc
lcall
rcrb
movsb
movsb
cltd
dec
loop
pushf
and
or
xchg
adc
push
mov
pop
mov
xor
sbbl
pop
xchg
arpl
daa
in
or
jge
mov
mov
xor
hlt
popa
stos
adc
xchg
inc
fiadds
sahf
jg
lea
leave
xchg
cwtl
test
xchg
pop
jg
mov
lea
arpl
sti
movsb
test
addl
daa
in
cmp
xor
cli
pop
lods
clc
xchg
ficomps
xchg
mov
xor
add
andb
mov
fwait
out
xor
dec
in
mov
rcrb
inc
mov
ss
andl
sahf
xlat
movb
add
std
int3
jge
ss
jns
lds
jbe
xor
cmpsl
cmp
dec
fistpl
lahf
mov
inc
xchg
pop
jae
sbb
mov
arpl
push
outsb
mov
ret
push
xor
filds
test
pop
push
mov
mov
fimuls
mov
aaa
jo
in
mov
add
or
mov
xchg
mov
add
sahf
dec
test
jae
stos
mov
inc
and
add
ja
popa
adc
xor
lcall
clc
mov
or
sahf
shll
mov
data16
push
in
pop
sarl
fisubs
cli
sub
rcr
loope
add
mov
xchg
lret
mov
filds
cld
aam
push
mov
xchg
leave
ja
mov
lahf
lret
scas
jle
aad
pusha
sbb
movsb
add
mov
sbb
sbb
push
pop
mov
in
xchg
shrb
xchg
cmp
jnp
add
xchg
mov
mov
mov
sub
fcoml
sbb
test
adc
adc
jne
and
cli
dec
adc
mov
fstps
add
mov
and
or
sbbb
sbb
xchg
sahf
cmp
pop
xchg
movl
fwait
jle
mov
or
pop
sbb
push
popf
jge
cmpsb
jmp
imul
sbb
cmpb
clc
inc
popa
lea
push
pop
scas
mov
jbe
inc
jp
xchg
shrb
xchg
xchg
adc
fwait
pop
add
divl
mov
mov
repnz
add
cwtl
and
xor
pop
fistpl
outsl
jp
mov
jb
xchg
orb
arpl
mov
addr16
inc
mov
mov
push
xchg
push
jle
lcall
pushf
mov
mov
and
or
mov
mov
mov
mov
fwait
mov
xor
push
inc
push
lock
and
loop
ss
sahf
cwtl
inc
or
shlb
fidivl
sub
arpl
je
add
jae
pop
jle
xchg
sbb
and
lahf
dec
repnz
adc
nop
sbb
xchg
mov
lcall
lret
xor
push
popa
pop
xchg
and
pop
xchg
lcall
out
cld
jp
pop
pop
xchg
cli
int3
mov
sbb
pop
xchg
mov
and
mov
les
jp
stos
sbb
aam
adc
fldcw
cld
and
cltd
fsubrl
fiaddl
aas
cmp
std
pop
inc
and
mov
jle
pop
mov
xchg
add
sub
fcoml
ret
fs
pushf
insl
loope
mov
out
push
jnp
and
insb
or
dec
mov
xchg
sti
mov
fstps
add
sbb
fstps
sahf
cwtl
out
adcl
jl
xchg
mov
nop
iret
mov
shlb
pop
mov
and
sbb
push
js
aam
mov
mov
pop
sbb
xchg
sahf
dec
jg
and
shlb
mov
and
inc
adc
pop
jge
and
push
jns,pt
cmp
pop
fimuls
leave
and
mov
push
jae
mov
and
loop
sub
push
and
loop
jno
adc
insb
cmpsl
jno
pop
inc
dec
adc
int
mov
mov
pop
fists
movsb
dec
out
or
in
push
sbb
sub
cmp
mov
xchg
nop
xchg
loop
cwtl
test
popf
shll
and
jb
xchg
mov
int
jno
shlb
push
dec
jno
mov
cld
insb
std
push
mov
add
sbb
fwait
jb
xchg
arpl
xchg
rdmsr
inc
and
jae
xchg
jne
addb
xchg
popa
insl
cmp
je
adc
dec
pusha
sbb
xchg
xchg
int3
xchg
ret
jl
xchg
popa
xchg
orl
arpl
push
popa
sahf
call
push
jp
sbb
and
adcb
jg
jecxz
mov
ficoms
sahf
or
xchg
nop
int
mov
xor
pop
mov
fsubl
dec
arpl
and
sub
or
and
pop
shlb
fistl
daa
add
jns
sbb
dec
mov
addr16
lahf
movsl
push
jbe
imul
popa
push
push
xchg
and
adc
cld
pop
mov
adc
ss
js
jo
fisttpl
sti
lea
lahf
arpl
int
pop
cltd
pop
pushf
push
sbb
dec
fldl
mov
add
push
xchg
pushf
or
xchg
adc
sbb
and
xchg
pop
sbb
lcall
xchg
lret
and
ljmp
add
mov
sbb
mov
inc
sub
dec
or
mov
insb
mov
xlat
mov
jbe
aam
sbb
aam
jbe
add
lea
lahf
mov
push
add
inc
mov
push
fs
pushf
mov
cld
popa
je
xchg
sti
and
or
pop
dec
and
adc
pop
out
push
ret
pushf
mov
mov
sbb
dec
jno
cmpb
lea
scas
jl
jbe
ret
scas
andl
fldenv
insl
movsb
adc
push
ficomps
push
dec
popa
test
cmpsb
in
ret
xor
and
fcompl
push
xor
in
mov
or
push
xchg
pop
adc
mov
call
loopne
push
inc
sbb
pop
popf
mov
pop
pop
lret
xor
inc
adc
sahf
sub
push
js
ficompl
mov
pop
test
fs
sahf
cmp
inc
out
adc
andl
fwait
push
jbe
cltd
insb
popa
jbe
jno
cld
and
sbb
lahf
sbb
mov
loope
xorl
fstl
pop
inc
dec
sbbl
push
popf
inc
xchg
cmp
xor
lcall
filds
cmp
sbb
mov
scas
sahf
test
sub
inc
inc
pop
lock
dec
sbb
jne
mov
rolb
mov
cli
lea
mov
fisttpl
sarb
repnz
push
xchg
sbb
jns
std
gs
test
mov
into
js
lea
fcoml
xchg
mov
loopne
jge
lds
cmpsb
sbbb
movsb
jecxz
cwtl
mov
lds
lret
movl
mov
shrb
popa
enter
mov
mov
cmp
lcall
insl
xchg
fadds
inc
dec
add
adc
rcll
aad
xchg
fmull
dec
loop
mov
or
jle
pop
scas
js
mov
iret
repnz
aam
adc
cwtl
push
rorb
fiadds
addb
dec
xchg
shr
gs
push
je
mov
int
popa
mov
pop
es
fwait
sub
in
or
popa
push
test
pushf
fwait
add
nop
mov
popf
rcrb
cli
fs
or
push
push
mov
mov
movsb
or
jbe
mov
aas
lret
dec
imul
xor
inc
push
popa
jge
or
je
adc
int3
pop
mov
fwait
adc
push
dec
sahf
mov
pop
es
in
adc
jae
fstps
mov
jnp
mov
cmc
jns
cwtl
xchg
mov
push
je
mov
ret
or
pop
mov
sbb
push
xchg
fcmovb
stc
out
fwait
pusha
push
and
ss
add
pusha
call
inc
ret
cmpsb
dec
mov
out
xchg
lret
lds
mov
arpl
xor
ret
fstpl
mov
rcrb
pop
movsb
xor
mov
insl
bound
pop
fwait
xchg
xor
cmp
xor
push
pushf
stos
inc
mov
test
and
jae
dec
rorb
stc
mov
fxch
xor
or
je
inc
enter
sbb
ret
fistpl
lock
or
aaa
bound
pop
adc
loopne
pop
andl
cmpb
fs
punpcklbw
mov
jae
jb
cld
popa
bound
fdivrl
adc
loop
adc
or
push
sub
subl
scas
pop
pop
inc
or
insb
nop
ss
test
inc
jb
nop
inc
sbb
mov
loop
adc
pop
and
cmp
dec
mov
mov
add
xlat
lcall
fcompp
pop
sahf
xchg
stos
hlt
push
cmc
test
fiaddl
push
sbb
sbb
adc
push
enter
xchg
cmc
push
sub
es
cwtl
sub
mov
nop
pushf
xchg
push
xchg
arpl
incl
or
pop
out
cmp
cli
iret
popa
dec
in
push
adc
mov
insb
mov
mov
jb,pt
inc
in
jge
mov
xchg
bound
push
sbb
nop
and
lcall
dec
fldenv
cltd
sbb
data16
fsubrs
lret
and
adc
cli
xchg
push
addr16
jl
fwait
dec
into
cmpsb
xchg
pop
or
mov
xchg
aaa
and
aas
mov
mov
jp
push
add
xchg
mov
xchg
lret
adc
mov
jle
dec
hlt
inc
or
nop
shlb
es
pop
stc
fdivs
adc
pushf
pushf
mov
jecxz
push
dec
fstpl
lret
dec
lret
nop
xor
pushf
add
int3
nop
cwtl
lcall
jb
add
cmpsl
ds
je
xchg
pushf
mov
pop
or
and
pop
lret
test
pop
or
add
inc
add
sub
aam
mov
fsubs
cld
push
mov
jae
jo
dec
rclb
jnp
sarl
gs
orl
jae
lahf
pop
pop
inc
xchg
ret
push
mov
arpl
mov
shl
add
clc
clc
lret
arpl
push
iret
sbb
aam
or
xchg
loop
jae
add
adc
and
or
repz
jl
xchg
stos
into
pop
jb
mov
aas
mov
mov
hlt
rcl
shlb
in
push
xlat
xchg
pusha
push
shlb
xchg
or
mov
test
xor
hlt
xor
into
mov
mov
rcll
mov
xor
out
pushf
insb
stos
pop
cwtl
pop
xchg
adcl
xchg
mov
pop
inc
mov
xor
xchg
inc
imul
pop
sbb
out
adc
rorb
pop
add
int
sbb
fildll
mov
pushf
lahf
shll
inc
movsb
scas
pop
jno
xor
sbb
add
and
ret
xchg
pop
and
cmp
jnp
loopne
cmp
fstl
pushf
andl
dec
and
in
mov
repz
lahf
addl
or
fwait
lea
fs
lea
jo
inc
lahf
pop
xchg
pop
push
sbb
add
sbb
push
xor
mov
jo
popf
imul
sbb
mov
leave
mov
pop
andl
in
andb
fwait
jnp
cmp
lea
xor
pop
cli
and
imul
xchg
pop
incb
cwtl
mov
mov
aas
in
add
cwtl
mov
lock
push
nopl
sub
xor
jo
xor
mov
pushl
jmp
xchg
lcall
jl
jae
rorb
jae
sbb
iret
push
orb
fisttpl
or
popf
stc
inc
loopne
mov
xor
or
or
mov
pop
push
jb
mov
hlt
push
or
sbb
call
pusha
mov
push
mov
xlat
fbstp
loopne
mov
fwait
mov
fstp
shlb
jns
jge
or
or
and
mov
dec
decb
push
mov
pop
mov
loope
sbb
mov
pop
mov
clc
cli
mov
add
push
std
into
dec
mov
jge
mov
jb
loop
mov
ficomps
push
jbe
sub
fisubs
mov
imul
mov
lcall
fwait
pop
rcrl
pop
into
fldenv
mov
mov
cltd
lahf
add
lea
jnp
call
mov
fidivrs
and
es
jp
pop
adc
shl
xchg
jb
fstps
test
push
xor
pop
psrad
xchg
adc
sbb
mov
push
xchg
sub
test
xchg
bswap
inc
je
mov
xchg
mov
push
and
cld
je
sbb
xchg
or
fwait
push
lock
jle
cwtl
push
pop
sbb
add
xchg
repz
in
fwait
mov
cmp
cwtl
cmpsb
fcoms
popf
fstp
movsb
push
stc
pushf
sbb
sub
adc
sbb
adc
push
arpl
movsb
daa
push
inc
xchg
shl
repz
xchg
data16
shlb
mov
or
mov
insb
pushf
xchg
movsb
arpl
xchg
sbbl
and
js
stos
outsb
push
movsb
and
jb
jb
push
movsl
cmp
inc
xchg
jmpw
mov
pop
out
das
mov
mov
repz
jg
fisubl
and
sbb
xchg
pop
jmp
pop
mov
adc
pop
xchg
xchg
adc
mov
and
mov
jb
push
push
outsb
arpl
jbe
jne
insb
mov
sub
outsl
push
xchg
add
push
inc
pushf
or
adc
popf
jecxz
lret
or
lea
sub
jmp
sbb
and
sbb
js
ja
push
fistl
xor
lcall
loopne
popf
mov
mov
or
sbb
adc
mov
mov
ficompl
and
mov
mov
sub
lahf
and
mov
xchg
rcll
bound
cmpsb
cmp
xchg
mov
mov
outsb
fstpt
mov
popf
mov
sub
adc
loop
sub
pop
fsubrl
pop
mov
filds
dec
scas
popf
mov
fiaddl
inc
sub
mov
lea
mov
orl
and
xor
and
dec
and
cld
pushf
fists
push
sbb
mov
sbb
mov
fnstsw
jge
pop
mov
xchg
pop
repz
lods
cmp
pop
sbb
outsl
push
fldt
in
xchg
mov
out
dec
or
mov
in
xchg
lret
andl
lcall
cmc
add
xchg
lods
xchg
cli
sarb
mov
xorl
insl
jp
pop
sbb
xchg
test
cwtl
pop
push
je
add
mov
xchg
insb
sti
mov
sbb
pushf
in
aas
fwait
mov
rorb
adcb
xchg
test
jecxz
sbb
inc
mov
cwtl
arpl
push
sbb
loopne
xchg
xchg
mov
jns
jnp
js
inc
jae
xchg
arpl
insl
loop
incb
adc
cwtl
mov
mov
loopne
ficomps
fbstp
jl
fwait
and
dec
mov
loopne
push
test
pop
jmp
nop
ljmp
in
ret
pop
push
xchg
into
xor
mov
jbe
inc
pop
dec
mov
push
lods
mov
and
mov
mov
into
xchg
gs
xchg
fimuls
adc
call
in
xor
cltd
sbb
push
mov
push
and
sbb
aam
jae
mov
aas
inc
jbe
pop
mov
insb
arpl
jae
cmc
shl
jns
and
jnp
xor
cmpsb
lret
xchg
data16
stos
outsb
sahf
cmp
push
mov
std
loop
popl
popa
jae
inc
das
or
fildl
lret
ds
jle
mov
mov
aam
out
mov
outsb
adcl
out
mov
jae
lret
jae
xor
jge
xchg
inc
cmp
insl
mov
scas
push
js
xchg
mov
jecxz
mov
jecxz
and
movsb
or
leave
lods
jle
mov
mov
bound
xor
add
les
lcall
sub
fyl2x
test
and
and
or
add
movsl
or
in
xchg
ljmp
xchg
and
push
enter
sbb
push
add
testl
mov
cwtl
and
push
movsb
sub
jge
pop
inc
lret
add
ljmp
imul
mov
int3
pop
mov
and
mov
std
or
ja
mov
insl
ja
test
or
mov
pop
push
dec
outsb
dec
fcmovnu
out
repz
add
mov
fmull
mov
in
in
popf
jns
mov
mov
mulb
adc
pop
pop
pop
sahf
subb
loope
cmp
in
sbb
pusha
loop
jl
push
fldenv
adc
popa
xchg
hlt
mov
mov
jnp
xchg
mov
push
ja
mov
lea
call
mov
jbe
movsb
cltd
xchg
mov
fdivp
pop
adc
pushf
fnstenv
pop
mov
jle
cmpl
sahf
ja
push
mov
insl
push
fnstenv
aad
cld
jge
out
inc
imul
sahf
add
pop
lds
and
dec
and
fdivrp
xlat
nop
cli
and
inc
loopne
sbbb
xchg
xchg
insl
jbe
addr16
stos
addr16
mov
sbb
out
repz
pop
or
push
pop
xchg
cmp
ficompl
cwtl
mov
loopne
mov
pusha
loop
andb
leave
pop
divl
mov
aas
xlat
les
jns
out
stc
arpl
inc
fcompl
pop
out
lods
mov
sub
mov
faddp
push
inc
pop
jb
adc
arpl
fisttpll
add
jnp
negb
lcall
lahf
call
pop
xchg
sbb
jl
cli
fs
or
inc
pop
test
mov
shlb
or
repnz
pop
nop
je
fsubrs
push
push
loop
mov
cmp
leave
outsl
jo
cli
scas
pop
xchg
inc
addr16
mov
scas
sbb
mov
pop
sbb
testl
mov
je
sub
jne
mov
jae
mov
shll
mov
in
mov
movsb
mov
fs
mov
and
mov
jecxz
mov
mov
sbb
adc
shrb
push
addb
arpl
or
in
loopne
lahf
bound
jae
mov
cmp
xor
cld
fidivrl
leave
ja
popf
rorl
pusha
les
adc
insb
loop
adc
or
aam
sbb
movsb
mov
mov
jo
cltd
xor
adc
inc
sbb
aad
pusha
push
int
mov
or
repnz
pop
iret
jp
fldt
fsubl
and
xlat
pop
lahf
ret
pop
test
jnp
dec
cmp
lahf
cwtl
fdivrp
dec
insb
and
mov
jecxz
pop
mov
and
sub
popf
sbb
cmp
out
popf
lcall
and
outsl
ss
sub
and
jp
cmp
add
and
push
mov
sbb
lahf
inc
dec
mov
aam
popa
outsl
mov
adc
mov
and
lahf
mov
scas
dec
test
mov
hlt
repz
mov
pop
scas
lahf
pop
lea
lcall
data16
aad
push
sbbl
pop
nop
adc
ficomps
scas
sbb
jecxz
pushf
es
rcr
pop
inc
adc
xor
and
sub
mov
scas
push
inc
add
fstpl
and
loope
pop
pop
dec
popf
sbb
into
dec
cmp
xchg
imul
xchg
sub
jae
or
loope
push
xor
xchg
insb
mov
dec
sbb
mov
and
add
pop
popf
mov
sbb
and
repnz
jmp
insl
and
movsb
test
jecxz
fiaddl
pmaxub
fildl
arpl
sub
cmpb
mov
ret
pushf
loop
bound
sbbb
mov
mov
je
repnz
mov
daa
ljmp
pushf
xchg
mov
test
and
sti
hlt
mov
or
in
ret
cwtl
les
lahf
jbe
sub
mov
mov
lods
cld
xor
int3
gs
xchg
xchg
mov
sbb
xchg
sbb
sahf
or
lcall
cmp
mov
stos
mov
push
stos
sub
rcrb
lcall
enter
dec
stc
xchg
lret
popf
fs
ret
push
lret
add
pop
push
mov
dec
lahf
and
cmp
pop
in
cmpsl
data16
pop
sub
ds
adc
jb
mov
mov
imul
mov
push
jne
ret
cmc
aam
movsb
lahf
or
fs
aam
and
mov
xor
and
pop
xor
or
mov
adc
push
or
aas
out
fidivrl
jno
cmp
cmp
push
inc
addr16
mov
mov
lret
xchg
mov
mov
andb
adc
adc
pop
js
fisubs
in
lahf
test
xchg
cmovb
je
pop
xchg
mov
dec
insl
hlt
mov
cwtl
adc
pop
lcall
insb
iret
mov
push
sahf
not
int3
pop
jg
imul
stos
xchg
pop
loop
adc
fcompl
add
xor
les
das
push
test
mov
leave
popf
xchg
mov
imul
dec
and
or
push
jae
jp
add
jnp
cmp
loope
mov
mov
cmp
shlb
inc
stc
insb
xor
loop
pop
and
lods
sbb
notl
sti
pop
sub
sahf
mov
or
mov
push
lds
out
outsb
fstps
jae
pop
or
loop
push
xchg
leave
es
pop
push
mov
adc
repz
cmp
and
xor
lods
scas
push
and
and
dec
sub
sbb
and
inc
mov
jno
cwtl
mov
xor
dec
push
pop
pop
inc
mov
notb
mov
int3
sbb
or
xchg
sarb
xchg
adc
jo
pop
xchg
xchg
and
mov
into
repz
lret
movsb
xchg
add
clc
xchg
movsb
jecxz
mov
shll
in
cmpb
popa
mov
or
cltd
movsl
sbb
jb
mov
sahf
outsb
adc
mov
sub
imul
es
cmc
jnp
jl
sub
mov
mov
loop
jge
inc
adc
punpcklbw
popf
clc
adcb
ljmp
mov
insb
and
mov
lret
mov
adc
clc
repnz
jmp
nop
test
icebp
pop
cwtl
pop
in
pop
cltd
loop
adc
jns
cmp
push
and
sub
cmpsb
lods
jl
sub
inc
cmp
out
inc
xlat
lcall
pop
xchg
scas
pop
test
loop
xor
cltd
xor
stc
into
rclb
test
mov
test
pop
insb
add
sti
mov
sub
pop
xor
dec
push
push
fwait
or
dec
pop
xchg
push
sbb
stc
adc
fmuls
push
ret
push
push
call
notl
pop
adc
push
or
cld
mov
xchg
xchg
and
push
mulb
lock
cmp
in
mov
out
pop
mov
test
adc
jmp
mov
lahf
fucomi
jp
pushf
lea
lret
ret
jecxz
sahf
sbb
ds
fwait
fs
insl
mov
mov
out
pop
lock
or
es
in
adc
je
and
push
xchg
sahf
jecxz
sub
mov
fnstcw
fs
enter
loopne
xor
cmpsb
and
mov
mov
mov
xor
sbb
sbb
cli
js
cmp
or
lret
lods
adc
sbb
in
adc
mov
jns
mov
stos
xchg
mov
je
cmp
inc
rcll
jecxz
cli
addr16
or
push
mov
or
call
or
loop
int3
repz
lahf
popa
push
mov
push
icebp
push
dec
mov
push
shlb
mov
pop
es
and
mov
outsl
xchg
inc
aas
jg
sbb
push
iret
repz
fldt
xchg
nop
add
imul
insl
out
inc
sahf
insb
xchg
jp
mov
loope
jae
adc
inc
or
daa
jnp
pop
pop
push
mov
add
faddl
adc
mov
lods
cmp
shrb
push
dec
popfw
mov
and
scas
orb
loop
jo
adc
pop
cmpsb
jl
add
fistl
addr16
std
clc
rcrb
aam
aad
pop
out
fwait
shrb
test
jbe
or
popf
aas
aaa
pop
icebp
cmp
jo
or
daa
adc
cltd
jg
mov
xchg
dec
sbb
jns
ffreep
sub
jp
repnz
xlat
sbb
test
sbbl
lea
jns
push
mov
sbb
aas
lea
stos
push
inc
add
ficoms
popa
xchg
cmp
fldenv
sbb
fdivrs
and
scas
xchg
inc
mov
inc
cltd
sbb
xchg
fwait
mov
out
fsubl
mov
or
sub
popa
ja
mov
mov
mov
sbb
jg
stos
aam
adc
cwtl
mov
sub
xchg
and
addr16
jge
xor
pop
and
pop
dec
and
sahf
cmp
xor
fucomi
jae
inc
or
insb
mov
or
sahf
mov
and
cmp
addr16
dec
data16
aad
inc
lea
addr16
out
adc
dec
mov
repnz
arpl
add
cli
nop
inc
call
xchg
das
sbb
add
outsl
mov
and
in
mov
sub
das
je
cwtl
cs
and
jecxz
test
or
rcrb
gs
ret
pop
das
adc
mov
xor
fs
jle
fwait
test
jecxz
push
pop
in
test
arpl
or
stos
mov
mov
dec
daa
js
popa
or
sahf
adc
xchg
xchg
cli
mov
xchg
jo
gs
lret
cmpsb
push
jbe
movsb
data16
mov
mov
cli
pop
mov
adc
mov
call
and
pusha
xchg
mov
dec
cmp
test
add
mov
mov
mov
movsb
push
cltd
cwtd
je
idivb
outsl
ds
mov
std
in
xchg
mov
out
orl
mov
jg
xor
insb
mov
jnp
or
pop
sbb
orl
in
xchg
mov
in
dec
push
jo
mov
lahf
jae
sub
pop
adc
and
cmpsb
rcrb
xor
pop
loop
and
xchg
push
bnd
je
adc
inc
push
orb
push
mov
ret
outsl
into
adc
xchg
rorb
cld
xchg
lods
pop
movsb
mov
stos
xchg
lea
mov
fistpl
aaa
fidivl
das
fists
mov
fldcw
fstps
or
test
test
adc
push
push
ret
pop
loop
push
xor
lea
insl
adc
dec
inc
push
or
mov
pusha
insl
mov
or
cmp
push
pop
arpl
movsb
mov
dec
or
push
test
test
cmc
movsb
rcll
gs
cwtl
sahf
sub
push
xchg
mov
imul
xor
sbb
sub
gs
std
ljmp
cmp
sahf
test
sbb
cwtl
push
and
xchg
fstps
pusha
adc
lret
clc
outsb
cmp
jecxz
pop
mov
jbe
in
xchg
pop
xchg
loopne
test
and
outsb
insb
or
mov
loopne
rorl
pushf
jl
mov
outsb
and
nop
cmp
gs
mov
cwtl
in
movsb
xchg
mov
mov
fst
mov
lds
sahf
idivb
sbb
lahf
unpcklps
xchg
sbb
adcl
cli
or
fcoms
inc
sar
add
mov
mov
jp
pusha
call
lahf
push
mov
stos
adc
je
or
and
rorl
dec
push
hlt
cmp
mov
mov
mov
jae
sahf
pop
into
and
shrl
int
jnp
ljmp
mov
sar
mov
inc
xchg
mov
or
and
mov
push
and
popa
nop
fists
xor
in
pop
fisubs
and
test
test
lret
shrb
popa
or
iret
roll
pop
and
shr
mov
and
inc
xor
sub
mov
orb
loopne
test
jle
add
cmp
xor
sahf
pop
push
loope
xchg
lock
add
sbb
std
dec
xchg
sbb
mov
xchg
std
loopne
jmp
or
stc
add
or
test
icebp
idivl
fwait
in
loope
test
inc
daa
sar
arpl
mov
stos
sbb
push
outsl
cmovo
pop
lret
inc
popf
test
push
xchg
imul
fimull
and
push
dec
stc
jb
push
mov
add
pop
inc
mov
sbb
adc
or
out
jg
mov
hlt
jg
mov
xchg
sahf
movsb
mov
or
popf
stos
sahf
nop
test
ficompl
scas
push
fisttpl
pop
add
jmp
push
push
jmp
in
pop
es
lahf
in
adc
cmp
adc
fs
jne
sbb
push
mov
or
push
cmc
call
int
and
lret
push
cwtl
jne
mov
xchg
imul
jl
xor
adc
int
movsb
mov
jl
in
addr16
inc
xchg
sbb
mov
pushf
nop
xchg
xchg
inc
xchg
sbb
push
lcall
pushf
shlb
sbb
or
adc
mov
shrl
xor
stos
pushf
stc
lcall
cmp
pop
push
mov
jg
xchg
fcoml
push
jnp
jp
sti
push
aam
or
dec
mov
sbb
movsb
sarb
loope
and
jle
rclb
dec
test
xchg
sub
inc
mov
inc
sub
fldt
add
aaa
lds
movb
fs
or
and
adc
and
fs
rclb
loop
movsb
push
pop
mov
mov
inc
push
mov
je
cmp
pop
shll
nop
and
xchg
insb
adc
mov
cmp
popf
xchg
test
jle
pop
mov
repnz
adc
repz
fstps
pop
add
cmc
adc
adcl
adc
testb
xchg
sub
push
mov
nop
and
and
leave
aas
inc
mov
in
and
sbb
lret
subb
xor
xchg
mov
xor
mov
mov
or
push
xchg
pop
jmp
cmpsl
andb
aam
xchg
pop
or
cmp
fs
xchg
rorb
orl
mov
xchg
nop
rolb
iret
jns
stc
out
and
outsb
and
shll
shlb
xchg
mov
xor
mov
rcrl
cmp
fs
sub
xchg
and
sub
sbb
int
lods
adc
sub
inc
pop
or
adc
mov
sub
loop
je
sbb
mov
mov
loopne
or
xchg
bound
push
or
add
fimuls
dec
jo
push
aam
test
inc
out
cmp
or
es
jg
fmulp
cmp
insb
fcoml
jbe
mov
ret
fsts
pop
popf
ja
in
pop
pop
adc
sub
and
movsl
mov
mov
and
in
leave
pushf
pop
dec
fisubrl
jl
fwait
sahf
lods
cld
rcll
popf
push
mov
sahf
sbb
dec
in
and
mov
loope
dec
mov
ss
mov
jbe
mov
and
mov
repz
cltd
lock
pop
cmp
loopne
jp
mov
mov
or
sbbl
inc
xchg
pusha
mov
or
xchg
insb
fcoms
pop
inc
mov
fcompp
mov
cmpsl
incb
iret
dec
dec
inc
stc
in
mov
jb
and
push
push
add
jge
rorb
cltd
dec
mov
sbb
in
aad
sbb
xor
loope
jg
nop
xchg
jb
lret
adc
fwait
shlb
xor
jnp
test
mov
bound
push
inc
add
jbe
aas
pop
popf
sbb
shll
push
fwait
mov
test
adc
arpl
lock
pop
sbb
inc
mov
lret
xor
jl
cltd
push
popf
popa
fsts
add
add
mov
xchg
sub
mov
scas
imul
mov
dec
iret
pop
lret
repz
or
cmp
jno
sub
int
mov
mov
lahf
popa
lcall
mov
mov
sub
sub
jae
mov
xchg
jl
xchg
cwtl
mov
xorb
mov
or
inc
pushf
pop
fistpl
jl
outsl
fwait
push
inc
lret
adc
push
pop
stos
js
cmp
mov
cltd
pop
pushf
and
mov
gs
jp
sub
shrb
xchg
mov
outsb
sbb
adcl
sahf
mov
xchg
pop
faddl
arpl
push
mov
and
mov
adc
in
dec
mov
mov
mov
jecxz
js
adc
mov
xchg
loope
insl
inc
loop
ficoms
loop
fwait
movsb
unpckhps
adc
sahf
inc
xchg
and
ficoms
pop
imul
in
xchg
dec
inc
cmc
ficompl
sbb
popf
lock
sbb
pop
add
and
ret
dec
inc
and
pusha
mov
test
fs
inc
fndisi(8087
cwtl
xchg
jmp
mov
movsb
shll
je
fs
inc
test
dec
in
inc
pop
mov
decb
adc
or
mov
xchg
xchg
mov
pandn
fcomps
ds
cmc
sbb
frstor
in
mov
inc
int
add
push
add
xchg
ror
and
mov
sbb
sbbb
leave
lods
ss
adc
xchg
mov
dec
pushf
cmp
subl
cmp
and
xchg
cwtl
fcomps
mov
mov
ret
lock
movsb
test
data16
notb
shr
loop
iret
jmp
ret
js
pop
and
lcall
pusha
cmpsb
jle
adc
pushf
mov
in
nop
subb
js
mov
arpl
push
test
add
sahf
pushf
mov
and
sbb
inc
cmp
or
fildl
xchg
add
jge
js
pop
pop
mov
sbb
movsb
testl
pop
adc
popf
addr16
jae
xchg
and
jne
std
pop
adc
popf
pushf
adc
mov
jmp
add
sub
jl
les
sbb
addb
push
aam
add
inc
sub
in
or
ret
addl
fbld
add
adc
xchg
addr16
adc
in
shlb
in
mov
movsb
data16
fldenv
and
xchg
inc
subb
insb
inc
test
in
sti
xorb
and
stos
or
lods
jl
xchg
hlt
loopne
js
mov
mov
mov
roll
sbb
mov
inc
fstps
popf
mov
outsb
or
mov
pop
popf
pusha
and
leave
popa
dec
data16
cltd
or
push
fstps
movups
adc
mov
inc
jg
fistl
pop
mov
and
pushf
fs
dec
sahf
and
loope
inc
adc
mov
fwait
mov
lret
mov
popa
nop
push
jmp
js
andl
mov
rcrb
sbb
int
cmpsl
sbbl
mov
sbb
xchg
xchg
mov
pop
add
call
xlat
pop
out
push
sbb
mov
sbb
arpl
and
or
pop
mov
pop
dec
fisubl
aaa
mov
mov
pop
nop
test
out
mov
notb
fisttpl
mov
fidivl
jecxz
xchg
mov
nop
mov
xchg
push
mov
ja
mov
cmp
adc
fistl
rcll
lcall
in
adcb
sub
inc
push
es
sub
pop
and
and
add
jns
sbb
xchg
fcompl
fmuls
push
outsl
fwait
mov
and
popa
pop
pop
sbb
mov
sbb
insb
mov
fnstsw
mov
jne
pop
xor
stos
enter
jno
inc
mov
fists
arpl
nop
aam
pop
inc
push
mov
popa
sbb
cmc
nop
aam
pop
xor
mov
fsub
insb
xchg
add
cld
xlat
pop
pop
and
pop
push
cmc
adc
jmp
fbstp
lret
jae
mov
and
arpl
movsl
sbb
enter
cmp
fadds
xchg
push
jae
adc
ficoms
fmull
pop
xchg
sbbl
sub
or
dec
fstpt
mov
frstor
icebp
sub
loop
and
mov
and
sahf
arpl
out
sbb
and
xor
and
adcl
xchg
mov
lds
push
sub
pop
daa
lcall
cwtl
out
mov
mov
fistpl
dec
in
mov
mov
xor
in
lcall
rcrl
xchg
lcall
fwait
jb
outsb
cli
and
jbe
add
mov
out
jge
imull
sahf
mov
push
jecxz
xchg
pop
test
loope
cltd
sbb
aam
aad
mov
xchg
ror
imul
xchg
push
movsb
lahf
push
jbe
int
ffreep
jmp
js
mov
push
call
jb
cmp
push
mov
jp
fmul
push
fildl
ud2
into
shlb
movsl
sahf
mov
adc
sahf
sub
fistps
fwait
mov
incb
push
das
push
mov
test
and
mov
sbb
add
xor
and
sbb
push
cmp
les
inc
xchg
arpl
xor
xchg
pop
mov
or
inc
jl
gs
loope
fisttps
mov
pusha
and
jp
sub
push
xor
sbb
stc
std
fwait
cmp
std
cmp
sarb
mov
push
int3
cltd
scas
jp
cmp
xchg
hlt
and
xor
pop
xchg
mov
clc
fsubl
mov
dec
adc
std
and
test
inc
shlb
xchg
and
fiaddl
mov
cltd
cltd
jl
jo
leave
add
xchg
sbb
js
mov
adcl
mov
mov
subl
sbb
ds
pop
or
dec
xchg
clc
mov
mov
orb
dec
popf
mov
and
xchg
mov
sub
icebp
rorb
lcall
adc
in
loopne
mov
das
mov
stos
popa
xor
push
mov
pop
rorb
hlt
xchg
mov
inc
sarb
or
and
inc
mov
loop
jp
mov
hlt
mov
loop
pop
lods
jge
xchg
fcoml
mov
push
sarl
sbb
sub
popf
xchg
je
and
sarb
sbb
lds
dec
jnp
outsb
out
xor
fnstcw
out
mov
fwait
imul
add
lcall
mov
mov
inc
es
cli
jb
and
cmp
outsb
mov
lea
fisubs
js
mov
jg
pop
loope
dec
mov
cmp
dec
sti
xchg
push
mov
flds
and
or
sbb
enter
loopne
mov
data16
mov
cmp
dec
or
ss
sti
or
push
daa
test
xchg
xchg
mov
jbe
sbb
sub
cwtl
adc
jne
jns
or
mov
iret
push
pushf
outsl
mov
xchg
arpl
adc
push
push
fwait
sub
test
jmp
and
les
push
xchg
or
rcll
inc
andl
sbbb
cltd
shll
aad
lahf
std
mov
pop
inc
rorl
addr16
mov
sbb
stos
dec
ljmp
popf
pop
inc
movsb
out
mov
fldenv
dec
fisttpl
dec
and
mov
lahf
insb
mov
mov
jne
imul
jnp
lahf
lahf
lea
data16
mov
outsb
pop
xorl
movsb
lahf
fistps
cmc
or
push
shlb
mov
pop
mov
lahf
inc
insl
fcompl
andl
lcall
lcall
push
and
or
shrb
inc
loope
dec
cli
mov
xor
xchg
mov
lret
mov
jae
mov
cwtl
xchg
or
lock
pop
addb
repz
mov
add
xchg
pop
xchg
or
popa
nop
repnz
xchg
pushf
int3
mov
sbb
and
add
or
dec
mov
ror
aam
mov
or
enter
and
insl
xchg
shll
push
leave
mov
xchg
push
jecxz
inc
nop
dec
dec
cs
lds
pushf
fisttpl
xor
mov
lret
in
mov
xchg
js
inc
jnp
fiaddl
mov
mov
mov
mov
out
negl
cmpsl
mov
mov
add
cmp
scas
out
pop
inc
lret
ja
lock
int
out
into
jnp
fldcw
mov
jg
push
inc
add
loope
pop
sub
cmp
and
jbe
call
mov
out
leave
xor
loopne
xchg
inc
ljmp
nop
jl
cmp
jmp
cltd
mov
cmp
and
cwtl
sahf
jnp
pop
fcompl
mov
pop
mov
fiadds
dec
mov
sub
je
push
jb
cs
cmp
enter
dec
push
scas
cmc
icebp
or
pop
jb
or
cmp
or
lds
lret
cmp
mov
je
mov
xchg
rclb
roll
enter
daa
xchg
mov
pop
repz
scas
mov
ja
jp
test
ss
and
mov
lea
jnp
pop
outsl
cmp
push
js
jecxz
jae
xchg
cmp
ja
cld
cltd
pop
or
xchg
movsb
mov
sub
loop
test
call
insl
jge
daa
or
mov
jp
das
insb
xor
out
xchg
lret
aad
mov
icebp
outsl
sahf
pop
ja
out
push
or
inc
adcl
mov
int3
or
xor
mov
lret
dec
imul
add
int
test
sbb
xor
inc
add
jl
sbb
add
mov
or
mov
xchg
sti
sbb
jle
push
js
rolb
adc
out
cmc
pushf
clc
loop
add
not
mov
sahf
lcall
cmp
movsb
or
pushf
or
repz
pop
test
mov
mov
mov
imul
pop
sbb
xor
mov
shl
pop
and
pop
addr16
rorl
or
jp
push
jo
in
loop
rol
mov
mov
mov
mov
cmp
pop
cmp
cmp
test
jae
lea
subl
loop
fistpl
iret
push
into
mov
shr
dec
xor
jg
pop
xchg
sahf
adc
les
push
mov
loope
xchg
loope
test
dec
ljmp
iret
jmp
and
cmp
scas
ja
adc
jbe
cmp
sbb
lahf
mov
aaa
loopne
mov
cmp
mov
fnstcw
dec
jne
rorl
call
insl
xchg
xor
sub
jp
clc
sahf
push
mov
faddl
popl
fs
cltd
mov
jbe
sbbb
sbb
sbbb
sbb
push
and
shlb
pop
pop
sahf
std
xchg
fsubrl
lcall
mov
shll
xchg
jp
cld
lea
push
xchg
inc
or
addr16
sub
inc
out
repnz
pop
and
sbb
mov
mov
xchg
and
xchg
and
fs
test
hlt
lahf
test
movsb
push
cmc
jl
push
mov
dec
xchg
push
jo,pn
arpl
test
fldenv
mov
mov
aam
pop
or
cmp
mov
int
jl
arpl
inc
dec
adc
filds
test
loope
sub
divb
mov
jo
fmull
loopne
mov
sbb
imul
dec
fisubl
mov
fs
pop
push
mov
and
xchg
pop
xchg
or
pop
jl
adc
pop
loopne
dec
ljmp
test
aas
jo
dec
cmp
arpl
push
push
or
ljmp
idiv
pop
pop
fwait
jo
xor
loop,pt
iret
orb
xchg
aaa
out
ds
mov
lret
cmp
ficomps
sbb
sbb
stc
jecxz
pusha
xchg
or
sbb
or
xchg
sbb
xchg
mov
clc
inc
outsb
jecxz
or
push
push
repnz
testl
push
mov
dec
cli
and
xor
add
pop
lret
cmp
enter
aam
or
mov
xchg
or
je
lock
xchg
lcall
xchg
mov
cmpsb
out
mov
pop
mov
mov
hlt
sahf
add
add
xchg
bound
sbb
imul
dec
jecxz
xchg
iret
push
xchg
orl
ret
lahf
or
jae
popf
sti
cmp
xchg
fwait
push
inc
mov
xchg
xor
repnz
jnp
int
outsl
fimull
std
xchg
mov
mov
jo
xchg
out
jo
dec
pushf
jmp
retw
jb
jb
push
push
test
xchg
push
add
xchg
jmp
shr
sub
cmc
inc
pop
sub
mov
leave
fs
outsb
sub
cmc
lcall
xchg
popa
fwait
sbbl
lahf
lock
enter
les
or
mov
cld
ffreep
adc
push
loope
ret
xchg
sbb
orl
xchg
sub
jg
xor
jmp
add
xchg
pop
jo
pushf
add
mov
loop
mov
test
and
sub
loope
mov
pop
pop
arpl
push
xchg
pop
xchg
les
insl
jmp
push
mov
sub
mov
lcall
sti
push
mov
mov
cmp
testl
push
fnstenv
orl
sahf
mov
xchg
in
mov
lret
mov
je
dec
popa
dec
out
daa
popf
aam
ds
push
dec
pusha
xor
adc
sub
xchg
imul
jno
jecxz
and
mov
adc
mov
stos
xchg
push
inc
mov
push
or
xchg
xchg
sahf
in
and
xchg
mov
nop
adcb
mov
fcomps
dec
mov
dec
jno
sti
xchg
cmp
dec
fadd
scas
or
stos
mov
and
push
mov
adc
ja
mov
cmp
jns
pushf
movsb
adc
out
xchg
imul
pop
sbb
fisubl
jae
mov
jp
test
cmp
lds
fldenv
out
loop
ja
jno
cltd
sbb
mov
add
jle
mov
xor
dec
in
xchg
movsb
xchg
lret
dec
das
push
mov
arpl
jg
sarb
and
les
ja
lea
sub
pop
push
xchg
pop
jmp
lcall
jbe
aam
pop
subb
sbb
fistps
fidivs
push
pop
popa
adc
outsl
fnstenv
mov
push
add
jnp
and
cld
jns
nop
push
imul
ss
xchg
lock
jo
sahf
ret
pop
arpl
call
movsl
fmull
dec
xchg
insb
mov
outsb
and
lods
inc
subl
push
insb
das
mov
push
inc
ja
inc
xchg
movsb
pop
movsl
rcr
xchg
outsl
xchg
lret
out
rcr
sahf
pop
repz
xor
adcl
repnz
std
hlt
xor
loope
xchg
imul
cmp
xchg
adc
cmpsb
cltd
imul
fistpl
mov
inc
lods
pop
imul
mov
adcl
rcrb
in
insl
and
shl
cltd
test
or
rcll
loope
push
adc
hlt
fsts
xor
leave
xor
std
sbb
insb
push
dec
cmpl
xchg
push
ret
js
es
and
jnp
inc
jge
pushf
lds
mov
data16
imul
jnp
pop
arpl
daa
aad
jae
sbb
pop
ss
sbb
dec
popf
outsb
fs
mov
jecxz
movsb
lcall
mulb
fdivs
mov
push
add
dec
es
push
mov
mov
loope
push
push
test
adc
pop
adcb
mov
adc
shlb
nop
sub
mov
sub
or
push
jg
xlat
xlat
jb
mov
mov
adc
cld
mov
pop
xchg
xchg
mov
sbb
icebp
mov
dec
push
and
push
jmp
icebp
mov
inc
enter
or
push
std
dec
lret
fld
pusha
cwtl
add
stc
pop
and
inc
xor
je
push
push
aad
rorl
inc
jmp
sbb
dec
movsl
cmp
ret
push
add
push
ljmp
dec
inc
and
test
rcll
dec
incl
jns
sbb
sbb
popa
push
popa
push
shl
ficoml
popl
fcoml
push
pop
or
dec
dec
sub
push
mov
mov
jle
sbb
dec
xchg
stos
or
xor
cmc
xor
cmp
mov
cmp
pusha
or
sbb
and
sub
mov
add
xchg
mov
push
xor
enter
and
je
inc
push
cld
jmp
gs
jno
cmp
mov
mov
jo
jbe
cmp
add
xor
out
adcb
jo
popl
vmread
nop
mov
je
test
and
add
inc
int3
xchg
ffreep
mov
xor
and
inc
jge
sahf
xchg
imul
loope
xchg
scas
adcb
sahf
pop
pusha
pop
ljmp
jp
loop
mov
lods
sbb
mov
pop
sbb
cmp
pop
pop
pop
sbb
pop
scas
das
jnp
loope
test
sub
mov
call
loopne
in
sarl
push
scas
xchg
dec
push
je
fbld
mov
inc
and
pusha
fisttpl
mov
jae
add
lret
adc
jae
pushf
es
sbb
fnsave
mov
rclb
loop
or
adc
mov
iret
cmpb
fistpl
cltd
sbb
mov
add
push
in
push
jb
sbb
push
mov
lahf
sbb
or
cmc
out
adc
inc
sbb
cvtpi2ps
fwait
mov
add
pop
pop
pop
imul
lahf
in
es
lret
jnp
jno
sete
pop
xchg
xor
mov
push
xchg
icebp
push
xchg
sahf
xchg
add
and
lods
shrl
push
jns
nop
sahf
mull
xchg
mov
sub
sbb
jge
stc
pop
ret
andl
cltd
inc
loope
leave
add
sub
fsts
or
lea
mov
dec
dec
int
cmp
mov
gs
fdivrp
into
sbb
jge
push
je
xchg
fldt
je
sbb
jo
xor
xchg
mov
scas
fnstsw
xchg
movsb
adc
inc
div
and
out
xchg
sub
adc
xchg
mov
sub
push
xor
insb
in
mov
out
xor
mov
mov
sbb
push
or
inc
cmp
or
test
push
lods
and
imul
xchg
outsb
cwtl
pop
xlat
std
mov
pushf
hlt
sahf
push
push
inc
xchg
cmp
loop
pop
or
loop
arpl
push
ret
sbb
sub
lahf
stos
adc
std
adcl
pop
fwait
sbb
setbe
leave
adc
setl
inc
arpl
cmc
je
lret
dec
fxch
pop
cmpsl
sahf
mov
aaa
mov
into
aad
sub
cwtl
ds
inc
xchg
cld
push
out
loopne
int
ficoms
rcll
fists
pushf
xchg
and
ss
xchg
cmp
stos
test
mov
aas
mov
adc
sbb
repz
or
movsb
loopne
and
xchg
jecxz
add
cmp
mov
sub
inc
push
pop
lahf
mov
inc
sub
in
scas
sbb
add
cmpsb
test
sbbb
andb
inc
sbb
fsubp
pushf
sahf
inc
loope
adc
repnz
xchg
outsb
jns
add
enter
movsb
mov
icebp
xchg
lahf
mov
insl
cld
fldl
fisttpll
ret
int3
out
test
pop
pop
cmp
and
setae
cmp
nop
sahf
movsb
imul
jbe
mov
sbb
iret
dec
cmp
jp
pop
fbld
sarb
xchg
cmp
sub
ret
jl
push
rcrb
mov
sub
add
pop
push
and
sub
sbb
aam
adc
mov
and
inc
sarb
loop
in
out
sahf
and
mov
outsl
out
lea
fiaddl
xchg
mov
xchg
push
loop
stos
addr16
rcrb
rcrb
sub
mov
out
sarb
and
pushf
xchg
ja
addr16
jg
iret
xchg
mov
lret
adc
adc
rorb
das
add
jp
push
test
pop
jo
ds
cmp
mov
mov
pop
push
mov
js
fstpl
popa
jns
bnd
mov
js
push
adc
mov
mov
xchg
test
lods
hlt
mov
xor
daa
popa
fisttpll
lret
xchg
jnp
test
inc
dec
mov
mov
cmpsb
fisttpll
push
outsl
mov
lea
push
int3
popa
cmp
mov
or
cmc
pop
xchg
outsl
ja
pop
xchg
cli
dec
mov
in
mov
pop
adc
cwtl
jle
xchg
cld
and
inc
cld
mov
inc
mov
jae
insb
sub
sti
lcall
mov
cmp
push
mov
incb
cmpsb
jl
xchg
pop
and
jae
jg
test
inc
adc
aam
lock
cld
movsb
fs
sub
dec
push
push
pop
in
push
sahf
dec
pop
sbb
addr16
pop
jge
sti
push
mov
cwtl
xchg
decl
mov
add
cmp
mov
lods
rcll
scas
ret
cmpsl
in
sbb
je
and
out
mov
movsl
pushf
aam
leave
add
in
iret
dec
js
fistpll
inc
addr16
in
fisubs
mov
push
sub
mov
jmp
xchg
pop
add
in
arpl
jns
jg
lret
orl
or
jmp
mov
jne
mov
pop
out
sbb
scas
into
push
mov
push
mov
rcr
push
push
xchg
repnz
aam
pop
lods
popf
je
pop
in
push
je
das
fabs
push
jl
mov
lea
xor
in
mov
cmp
mov
movsb
push
je
jne
out
adc
jo
outsl
add
adc
sub
les
sub
fldcw
mov
iret
push
add
je
cmp
pop
dec
mov
clc
xchg
pusha
mov
mov
sbb
sub
sar
sbb
add
jb
mov
push
and
rcrl
mov
iret
jle
mov
xchg
ljmp
sbb
xchg
add
sbb
js
fwait
sbb
jl
aas
push
shl
inc
loop
mov
mov
out
imul
sub
lock
cmp
insb
adc
mov
idiv
test
pop
sbb
xchg
inc
lahf
xor
std
push
sbb
dec
fcmovne
xchg
jbe
and
mov
popf
addr16
lods
aaa
insb
testl
in
dec
call
jb
loop
btc
aad
dec
popf
and
xchg
mov
in
dec
andl
adc
popf
xchg
xchg
push
or
or
shlb
mov
sbb
pusha
call
out
and
mov
cld
mov
test
cli
xchg
inc
and
add
pop
or
ret
mov
pop
mov
push
pop
lock
mov
lods
and
stos
enter
movsb
adc
enter
jl
lret
out
xchg
fs
fistpl
test
xor
xchg
lahf
sbb
addr16
xor
jmp
rcrb
jp
das
xchg
add
pop
fidivs
and
and
pushf
push
mov
stos
decl
ret
pop
mov
pop
pop
inc
jge
pop
inc
xchg
inc
loop
lock
mov
add
pop
mov
lahf
pop
or
and
enter
pop
daa
cmc
xchg
sbb
aaa
popf
pushf
mov
and
std
dec
insl
in
mov
shlb
mov
add
aam
inc
inc
jmp
pusha
and
jo
vpmulhuw
xchg
test
popf
mov
dec
std
mov
aam
jle
movsl
jbe
push
adc
jne
popa
lea
cmp
push
mov
dec
mov
xchg
cld
and
cmp
cmp
and
cmc
dec
sbb
stc
xor
xor
push
dec
xor
in
sbb
dec
lods
lret
fs
out
movsb
or
pop
fisttps
xchg
xchg
add
jle
sbb
aaa
sbb
mov
push
aas
dec
cmpsl
adc
das
jbe
inc
js
ljmp
mov
fsubl
insb
fwait
pushf
xchg
das
loop
xchg
test
xchg
mov
cli
jb
es
inc
cmp
mov
movsb
mov
sbb
and
mov
aas
shlb
dec
aaa
popf
mov
xchg
jae
shlb
sub
adc
popf
mov
aam
and
repz
and
lods
cld
bound
imul
xchg
andl
sar
pop
insb
dec
mov
popa
data16
fidivrl
mov
loop
add
xorb
ret
adc
pusha
movsb
into
cwtl
movsb
shlb
sbb
fs
cmp
adc
adc
inc
and
cwtl
jmp
int
fimuls
mov
ss
pop
xor
mov
lcall
or
or
fistps
inc
inc
popf
pusha
mov
inc
xchg
pusha
pop
test
shll
sbb
movsb
in
flds
cltd
addl
jecxz
pop
popa
mov
xor
ds
push
mov
sub
sbb
imul
jg
sbb
adc
mov
cmpsb
test
sahf
sahf
out
jl
bound
xchg
jnp
pop
jmp
and
std
ja
lcall
jge
movsb
cltd
cmp
fmul
adc
or
arpl
fists
and
push
nop
les
xlat
ljmp
mov
cli
sbb
lret
mov
sbb
aam
fsubl
xor
cwtl
push
sbb
leave
mov
lock
push
shl
jnp
adc
dec
mov
mov
in
and
adc
cli
cltd
xor
and
sub
sahf
pop
sbb
and
mov
xchg
push
sub
xchg
lahf
and
pop
aad
add
aam
xlat
jg
fcoml
xchg
icebp
mov
dec
ja
addb
mov
in
in
subl
mov
sarb
movsl
stos
fmull
rcrb
and
mulb
mov
lods
sub
add
inc
pop
sbb
and
pop
jp
jmp
andl
aam
dec
inc
and
in
xchg
je
adc
andl
rolb
cmc
mov
mov
sahf
pop
add
negl
add
popa
cmpsl
jae
or
adc
ret
insb
lahf
fwait
and
adc
adc
js
sbb
lahf
pusha
pop
pmaxsw
mov
jl
inc
mov
sub
push
xchg
inc
cmpsb
nop
arpl
cmp
dec
popf
repz
xchg
mov
arpl
loopne
cmp
mov
mov
add
pop
adc
sbb
and
xchg
pop
fwait
sbb
cld
cltd
mov
push
xchg
cmp
pop
jnp
or
loopne
mov
xor
push
mov
lahf
fnsave
pusha
fistpll
insl
in
ret
xor
cmpsl
xor
js
mov
insb
add
pop
inc
dec
out
push
push
cs
inc
push
mov
inc
mov
sahf
cld
or
xchg
jecxz
pop
and
xlat
or
add
mov
lahf
lock
push
and
sub
adc
daa
adc
shll
mov
mov
add
sbb
xchg
ljmp
jae
mov
mov
inc
mov
inc
push
cld
sbb
stos
pop
ja
adc
sbb
cwtl
adc
mov
xchg
sbb
sub
loop
pop
and
adc
mov
popl
shl
mov
adc
add
int
imul
and
js
sahf
dec
dec
pop
stc
lahf
sbb
dec
add
iret
insl
ja
mov
dec
aad
sub
icebp
jle
xchg
jb
fstl
mov
mov
dec
stos
add
and
loope
loopne
mov
fucomp
sbb
and
mov
test
imul
jecxz
xchg
pop
adc
push
dec
mov
add
or
adc
add
mov
pop
sti
divb
push
test
sahf
outsl
adc
pushf
jae
mov
inc
adc
call
adc
sbb
push
inc
js
pop
mov
jge
sub
negb
in
pop
adc
and
test
roll
loop
xchg
bswap
cmp
ss
or
movsb
mov
mov
and
cmpl
andl
pop
shll
lds
jae
sub
insb
adc
push
mov
and
into
cli
cmp
xor
into
dec
std
pop
xor
das
push
cmp
imul
lds
outsl
dec
pop
in
xchg
in
arpl
stos
std
rclb
int3
sahf
adc
pop
or
xchg
dec
repz
inc
aas
cmp
dec
pop
xchg
inc
jmp
das
pop
xchg
mov
test
out
out
sbb
outsb
sub
jg
mov
inc
lods
adc
arpl
lods
test
cmc
sahf
mov
adc
push
jno
addr16
mov
jl
mov
jecxz
aam
aas
addr16
std
jecxz
xchg
rcrl
and
outsl
cmp
adc
test
outsl
std
fwait
and
mov
aaa
outsb
je
jnp
mov
or
xchg
jno
jae
push
xor
bound
inc
int
or
out
scas
push
arpl
push
cmpsl
call
cld
in
jae
xor
cmc
sbb
aam
ret
cmp
ret
pop
popa
dec
sub
repnz
movsb
hlt
cmp
shrl
jl
xchg
mov
jno
cmp
sbb
stc
push
inc
cmp
xchg
mov
sti
mov
sub
mov
clc
push
jmp
inc
enter
push
ficoms
sub
lcall
xchg
cmp
fisubs
stc
add
jmp
cltd
pop
cld
and
and
pop
sbb
or
mov
test
imul
push
cwtl
lret
pop
insl
ror
mov
sarb
pop
loope
mov
mov
xor
jmp
out
lahf
adc
inc
clc
dec
xchg
and
popf
lahf
mov
not
sub
dec
xor
hlt
and
lahf
loop
ljmp
and
mov
sti
test
push
sbb
adc
add
popf
daa
fsub
pop
mov
repz
push
xchg
and
dec
add
mov
loope,pt
movsb
or
outsl
lods
cld
lret
inc
int3
outsb
sub
repnz
xor
outsl
repz
stos
add
push
out
ret
cmp
inc
mov
out
sub
fisubrs
pop
sbb
add
mov
inc
nop
pop
sahf
push
inc
push
mov
inc
xchg
insb
sbb
out
jmp
mov
xchg
leave
idivl
or
push
fwait
cmpsl
or
movsb
out
cmpsb
idivl
adcl
dec
adc
loop
fcomps
pop
sbb
adc
addb
aam
adc
mov
roll
push
in
sbb
aam
pop
mov
pop
dec
nop
sar
ficompl
adc
cmp
push
mov
orl
xchg
ret
cmp
or
cmp
sub
pushf
cwtl
mov
sbb
mov
mov
adc
mov
fimuls
std
je
and
loop
add
push
mov
mov
cmp
xchg
adc
xchg
nop
xchg
dec
xor
popf
xchg
cmp
push
sub
jae
outsb
imul
pop
std
xorb
xchg
adc
lds
xchg
cli
jg
sbb
inc
mov
fistps
mov
push
cltd
lock
cwtl
jl
mov
mov
insb
adc
out
mov
das
sbbl
movsl
xchg
push
push
jae
cmp
ja
test
fsubrs
stos
lock
sub
pop
cmp
mov
iret
pop
jecxz
fs
pushw
rcll
adc
mov
out
mov
mov
push
loopne
ljmp
sahf
sbb
pushl
jp
lock
jl
addr16
cmp
dec
adc
loop
and
inc
test
call
jmp
inc
js
inc
icebp
pushf
inc
icebp
sahf
add
xor
adcl
cmpsb
pop
jb
outsl
push
sub
mov
and
mov
insb
in
shlb
mov
arpl
push
and
sbb
cmc
nop
aam
pop
xor
mov
pop
in
fstpl
sbbl
pop
cld
loopne
xchg
and
pop
pusha
addl
inc
cld
fistps
and
pop
pop
xor
sub
pop
faddp
jae
pop
mov
sbb
pusha
mov
aam
pop
mov
mov
sbb
pusha
mov
aam
pop
ja
shll
xlat
jae
iret
inc
fld
dec
divb
addr16
or
cltd
pushl
jo
fucomip
jecxz
lcall
stos
outsl
js
mov
sahf
lods
icebp
jecxz
sub
movsb
mov
jl
decb
jmp
jg
cld
aam
push
sbb
pop
lock
mov
sbbb
icebp
xor
pop
pop
movsb
out
inc
lahf
cmpsl
je
sub
inc
push
inc
fcompl
sbb
mov
sbb
pushf
and
ret
mov
in
and
es
leave
xchg
mov
inc
inc
mov
xchg
and
and
and
lcall
pushf
or
daa
xchg
nop
sbb
jnp
cwtl
sub
jl
jl
adc
jmp
mov
mov
imul
fimuls
xor
lret
aam
mov
repnz
jae
cmp
cwtl
fistpll
orb
pusha
sbb
int
inc
testl
mov
lock
mov
push
push
imul
loopne
lcall
sahf
insb
fistpll
xchg
js
push
jl
in
fisubl
test
xlat
pop
push
push
mov
imul
xchg
es
push
into
negb
enter
or
shl
mov
dec
add
stos
and
fcoms
imulb
hlt
pop
xchg
das
fs
outsb
sbb
pop
andl
insb
sbb
mov
pop
pop
and
cwtl
push
ret
dec
in
jg
insb
sbb
sbb
pop
and
notb
pop
lcall
push
cmp
int
lahf
movsl
sbb
mov
adc
and
jae
xor
call
pop
and
xchg
in
mov
mov
call
pop
andl
xchg
subl
sub
and
jns
mov
inc
cmp
jecxz
insb
aas
sbb
cwtl
adc
data16
push
mov
shll
xchg
push
jae
test
cmp
add
xor
xchg
sbb
lahf
ss
adc
sub
pop
lret
xchg
cltd
clc
nop
movsb
xchg
cmpsl
dec
jno
cld
ret
xlat
push
idivb
lret
pusha
fistps
sbbl
push
xchg
cwtl
lcall
mov
push
xor
jbe
pop
in
loopne
mov
push
test
cld
mov
call
xchg
mov
xchg
sbb
mov
fidivs
or
and
mov
cmp
or
pop
and
mov
adc
and
sbbl
xlat
mov
sbb
jecxz
push
and
push
and
mov
sbb
imul
mov
mov
add
inc
adc
jne,pt
popf
lea
mov
add
cmp
mov
sbb
pop
dec
sbb
sbb
mov
push
mov
inc
push
and
jno
xchg
imulb
push
pop
test
mull
loope
sahf
test
aas
test
and
and
orl
rorl
push
mov
sub
mov
push
mov
xchg
jl
loop
mov
sbb
lds
inc
mov
fldl
sar
mov
fsubrl
sahf
stos
data16
or
mov
fildl
xorl
lret
repz
cld
sahf
stos
popa
inc
das
mov
mov
call
decl
sbb
xor
xchg
push
xor
xchg
add
xor
shlb
inc
out
inc
mov
movsb
lea
dec
xor
xchg
out
into
popf
push
ds
push
sahf
push
or
out
or
or
pop
in
lret
and
pop
pop
jne
cli
enter
mov
es
xchg
popf
mov
lea
test
mov
mov
push
adc
movsb
out
and
and
inc
mov
sbb
test
lahf
adc
fwait
jecxz
mov
mov
in
fldt
xor
push
mov
sahf
push
pop
sahf
pop
out
jge
decl
je
scas
or
dec
cwtl
mov
pushf
fs
loope
mov
push
xchg
pop
add
stc
add
clc
and
mov
inc
shll
repnz
mov
ljmp
fsub
sbb
insl
test
sbb
xchg
sbb
in
andl
fs
pop
xor
sub
sub
fisttps
sub
sahf
bound
push
frstor
shlb
cmp
iret
pop
and
and
push
mov
lahf
das
loopne
pop
mov
cmpl
and
clc
into
aas
mov
hlt
push
loopne
jle
sbb
inc
mov
xor
int3
push
xor
and
xchg
mov
jmp
cmp
in
push
int
push
imul
xchg
inc
xchg
and
cltd
push
adc
mov
rclb
sbb
mov
xchg
or
and
jbe
aam
xchg
loop
lahf
mov
scas
mov
cwtl
mov
out
nop
rolb
mov
fiadds
cltd
repz
stos
pop
repz
cltd
cmpsl
fimull
fisttps
mov
cltd
add
out
aam
inc
ret
into
jbe
mov
mov
mov
sub
pop
mov
xlat
cmp
sub
outsl
imul
pop
hlt
push
lds
mov
lds
lahf
or
add
lahf
loopne
imul
mov
ss
jns
xchg
adc
test
mov
cmp
mov
sti
fisubs
hlt
jle
mov
sbb
mov
subb
shll
or
xor
mov
movsl
xchg
cli
stos
xchg
hlt
and
daa
mov
popa
mov
mov
pop
sub
test
and
and
push
test
mov
push
in
cltd
pop
cmpsb
and
xchg
adcb
mov
dec
in
add
test
stos
cmp
mov
lret
rorl
loop
cltd
push
jnp
and
lahf
mov
in
jo
add
adc
dec
cmpsb
test
pop
test
inc
ret
adc
js
jl
lds
fldl
lds
or
testl
cmp
mov
push
test
ret
lods
jge
sbb
and
aam
inc
adc
icebp
imul
jp
jecxz
mov
sbb
mov
jae
out
lock
pop
jle
insb
sbb
pushf
jl
or
push
outsl
dec
cwtl
loop
xchg
cwtl
push
push
mov
adc
pop
imul
sbb
mov
ret
jbe
xchg
clc
pop
out
jbe
stc
fisttpl
jb
fwait
dec
xor
fwait
pop
and
add
jo
fnstcw
fwait
mov
push
flds
add
inc
fnstcw
fwait
xor
mov
pop
popf
pop
jno
fwait
adc
aam
cmp
xchg
xchg
add
sbb
mov
xor
sbb
sub
mov
mov
dec
lock
adc
test
stos
stc
loope
jb
into
cltd
aas
test
mov
sbb
outsb
pop
xchg
jo
nop
or
data16
and
loopne
pop
aad
rolb
andb
sahf
sub
cmpsl
push
xchg
sub
and
loop
xchg
jp
or
push
adc
data16
pop
mov
pop
mov
mov
dec
sbb
xchg
dec
mov
loopne
sahf
aam
adc
lcall
mov
popa
inc
lahf
or
add
push
push
jmp
cmp
sbb
adc
fs
push
xchg
stc
test
sbb
inc
push
mov
add
fadds
xorl
cs
inc
pop
sti
cli
loope
fcoms
mov
adc
xchg
lcall
adc
jo
cltd
pushf
sahf
loope
push
decb
dec
imul
push
insb
pusha
add
fs
in
sbb
notb
fcomps
rcrl
lods
popf
fldl
mov
pop
outsb
xorb
dec
push
and
sbb
or
pop
in
and
jecxz
call
sar
insb
sub
adc
inc
cmp
xchg
lea
dec
and
or
movsb
mov
pop
ljmp
ret
mov
popf
sahf
lret
dec
fistl
mov
xchg
xor
mov
outsb
cmp
xchg
xchg
xchg
sbb
mov
push
cmpl
xchg
cmp
sbb
and
out
mov
mov
rorb
push
push
insb
popa
insb
push
fs
fisubl
int
jae
popf
lcall
xchg
xchg
cmpsb
mov
mov
lahf
sub
adc
add
mov
pop
dec
aaa
movsb
jo
push
test
setp
mov
jo
mov
das
insl
test
mov
cmpsl
jmp
xchg
scas
mov
mov
lret
xchg
enter
les
orb
in
out
push
adcl
int
xchg
sub
mov
dec
push
pusha
inc
mov
popa
sahf
add
out
mov
hlt
mov
sbb
jb
out
mov
pop
and
pushw
in
mov
or
stc
or
mov
sar
pop
pusha
sub
sbbl
and
sahf
sub
imul
dec
movl
mov
mov
mov
xchg
or
xchg
pop
dec
add
ja
inc
stos
push
sbb
pop
orl
sub
jl
pop
test
pop
mov
sbb
pop
inc
pop
xchg
xor
push
mov
inc
pushf
pop
fimuls
in
inc
out
jg
adc
into
js
nop
or
aam
rclb
push
push
xchg
pop
orl
mov
ror
add
mov
sbb
cmp
fcoms
into
popf
outsl
aam
or
pop
xchg
push
ret
ret
adcl
int
or
addl
xchg
and
in
jns
cs
xchg
arpl
in
popa
fimull
outsb
cmp
xchg
ja
lods
cmp
fs
xchg
push
lods
lods
fcompl
lea
divb
add
sahf
outsl
sahf
pop
loope
in
out
insb
inc
adc
pop
movsb
adc
adc
pop
fstpt
data16
out
pushf
fistl
sbb
inc
loop
lds
push
int3
and
ljmp
and
in
xchg
xchg
mov
es
mov
lcall
jno
jno
pop
fwait
andl
cli
dec
jae
popf
nop
bound
xchg
insb
popf
in
xlat
sahf
ss
dec
dec
or
pop
mov
xchg
add
and
mov
icebp
xor
mov
outsl
xlat
fwait
add
arpl
xchg
inc
cmp
fldt
je
push
data16
dec
fiadds
rorl
adc
inc
or
adc
fnstenv
mov
mov
jae
int
pusha
stos
pop
and
mulb
in
pusha
out
jbe
sub
idivb
fwait
xor
inc
aad
pop
add
lahf
mov
push
pop
adcb
outsb
adc
test
fbld
lea
in
addr16
int
outsb
cmp
cwtl
out
dec
into
je
stos
mov
in
adc
repnz
mov
inc
xchg
inc
xchg
dec
mov
sbb
dec
cs
mov
mov
in
fisttps
mov
imul
fnstsw
mov
cld
lock
stos
stos
mov
js
inc
int
loope
test
shll
sbbb
rorb
sub
pop
adc
mov
xchg
push
fistpll
sbb
insb
or
loopne
inc
repnz
lds
movsb
xor
add
xorl
jo
lret
fstps
jge
mov
xor
adc
push
in
dec
mov
mov
mov
inc
adc
in
xchg
mov
aam
adc
sbb
in
outsb
pop
pop
add
sub
push
jb
fs
xchg
xchg
fcmovnb
jle
lds
fs
sbb
fmull
cmc
shlb
add
adc
pop
in
aad
sbb
scas
and
repnz
mulb
call
popa
mov
call
and
lcall
pop
pop
outsb
lds
rcrb
ss
xchg
andb
jecxz
mov
cmp
nop
mov
cwtl
add
xlat
mov
fmull
loop
cmp
iret
mov
jbe
cmp
loope
js
leave
loopne
std
adc
icebp
add
stos
call
and
imul
and
sti
mov
andl
int
jl
std
test
push
xchg
fdivrs
and
pop
and
add
adc
ja
rcrl
pop
lock
mov
mov
pop
sbb
in
push
jl
xor
xchg
mov
dec
inc
cwtl
or
xchg
mov
sbb
mov
into
jmp
sub
adc
xchg
in
inc
push
mov
mov
pusha
dec
ljmp
mov
adcl
dec
push
mov
nop
push
adc
ds
or
shll
out
add
loop
sbb
bound
jnp
add
jbe
aas
push
jecxz
mov
test
sub
mov
jae
dec
loop
arpl
or
notb
test
jmp
movsb
lods
aas
gs
in
push
adc
xchg
adc
cmpsb
pop
mov
sbb
aam
inc
outsl
add
loopne
popf
push
fistps
or
push
xor
and
es
push
aam
lahf
iret
aas
cmp
jge
mov
loope
xchg
or
or
not
repz
test
loopne
adc
dec
mov
xchg
je
sbb
not
jnp
sub
inc
push
mov
fwait
xchg
stos
ljmp
adc
mov
xor
pop
cld
pop
fidivrs
push
test
or
xchg
pop
movsl
popa
push
fldcw
nop
scas
mov
push
jbe
mov
cwtl
pop
popf
mov
nop
push
inc
jl
imul
xchg
mov
dec
push
mov
nop
in
mov
pop
xor
xor
popa
xchg
mov
xchg
nop
adc
jae
shrl
cld
and
dec
out
adc
call
pop
popl
lcall
cli
xchg
cmpsb
nop
push
jo
aam
xor
fsubs
fistpl
pop
and
mov
xchg
push
sub
iret
jecxz
jecxz
push
mov
lahf
sub
movsb
xor
adc
sbb
icebp
scas
mov
mov
into
fisubs
jecxz
inc
mov
shrb
or
mov
add
push
xor
flds
data16
add
andl
leave
andl
mov
orb
cmc
lahf
mov
in
adc
add
dec
cmpb
adc
mov
pop
movsb
jle
and
pop
es
fistl
addb
stos
dec
adc
xchg
xchg
and
int3
adc
jmp
ficompl
inc
pop
and
adcl
sbb
dec
icebp
cmp
dec
js
jecxz
ret
lea
mov
cmp
pop
mov
movsl
outsb
mov
shrb
pop
pop
sub
lahf
mov
out
adc
sbb
add
mov
xchg
sahf
jbe
fcompl
mov
and
xor
or
cmpsl
je
movsl
aas
repz
mov
cmpsb
test
outsb
repz
and
fistpl
jae
inc
mov
sub
adc
addr16
sub
push
fldenv
cli
into
jnp
rcll
adc
sub
jp
outsl
sti
mov
ss
sub
lahf
mov
notl
mov
mov
mov
std
dec
out
repz
jnp
movsb
xchg
movsb
cli
es
stc
pop
or
mov
xchg
dec
rep
pop
adc
jecxz
push
mov
jb
hlt
xchg
sbb
lret
por
fdivrp
and
push
loope
ss
and
andl
movsb
popa
pop
and
mov
popf
fs
pop
stos
xlat
add
mov
xchg
or
fs
jnp
inc
xor
mov
jmp
lret
pop
leave
daa
and
arpl
jmp
aas
push
dec
pop
sub
mov
and
cltd
call
mov
mov
lea
ss
in
push
jb
mov
stc
pop
sbb
sahf
adc
xchg
jno
rcrb
outsb
in
sahf
adc
sbb
mov
fisttps
movsl
mov
and
and
or
divb
js
fsubl
sbb
pushf
rcrl
stos
sbb
xchg
es
add
sbb
in
in
leave
mov
mov
outsl
and
sbb
push
pop
pushf
packsswb
xchg
mov
in
insb
mov
lods
mov
insl
push
xchg
cwtl
cmp
fcompl
sub
psllw
push
ljmp
fimull
dec
push
mov
or
icebp
jbe
call
sahf
or
xchg
int3
daa
and
mov
adc
mov
out
scas
aaa
ja
mov
jg
leave
and
lock
outsb
bound
sahf
adc
adc
push
and
loop
pop
or
pop
and
jb
or
mov
mov
test
inc
aaa
das
pop
xor
fbld
test
fistl
aaa
popf
movsb
pop
aas
and
or
sub
cmp
and
fwait
jns
mov
fstpt
sub
sbb
mov
loopne
jns
mov
or
div
cltd
sti
inc
outsb
adcb
arpl
dec
test
jp
fs
mov
je
mov
cmp
mov
dec
mov
loope
nop
mov
fisubrs
and
mov
adc
mov
negb
adc
sbb
adc
faddp
xor
push
stos
outsb
mov
test
inc
mov
and
clc
or
or
into
subb
lret
std
sahf
add
out
inc
test
adc
addr16
clc
jg
je
and
mov
jmp
iret
push
adcl
sbb
cltd
rcrb
or
arpl
andl
inc
in
pop
pop
fiaddl
sahf
sahf
mov
push
fidivrl
xor
mov
mov
sbbl
push
rcr
fistpl
cmpsb
lods
sub
stc
test
imul
cmpl
sahf
inc
and
pop
sbb
mov
push
sahf
mov
jbe
jae
jae
xchg
cld
pop
adc
stc
cld
subb
aad
test
mov
out
push
iret
data16
push
or
cmpb
sbb
repnz
repz
and
and
popf
ljmp
push
pop
or
aam
fsincos
rclb
ljmp
in
xchg
sub
lods
mov
jg
push
fldln2
jns
mov
push
js
lods
mov
lcall
test
pop
and
xor
jo
fstps
in
outsl
sbb
aam
addl
push
fcomi
pop
fisubrl
and
mov
outsb
or
fists
mov
mov
and
adc
imul
mov
test
or
icebp
dec
test
fisttpl
dec
inc
in
repnz
dec
dec
pop
mov
sub
loop
sub
add
adc
jbe
jno
fldenv
push
clc
fsubr
cmp
dec
ja
and
movsb
in
xor
dec
xchg
ficoms
aas
push
jle
fimuls
insl
sub
jmp
int3
mov
ret
pop
and
in
mov
jle
dec
pop
inc
or
cmp
cwtl
shrb
movsl
or
call
jb
pop
ficoms
fdivs
pop
sub
hlt
cmp
fidivl
cld
mov
and
mov
add
xchg
sti
pop
int
test
rcr
or
leave
push
pop
mov
in
mov
mov
fs
jge
imul
cmp
pop
cld
xchg
mov
add
mov
xchg
subb
insb
ss
subb
mov
out
cltd
cmc
push
cmpsb
outsl
and
and
aad
jl
pop
fwait
dec
pop
push
ret
imul
sbb
fcomps
pop
movsl
notl
data16
aas
ret
mov
gs
stos
cmp
sub
clc
es
xlat
jb
xchg
test
idivl
lods
jb
mov
enter
ljmp
out
adc
lds
test
lea
sti
mov
mov
sti
popf
and
movsl
dec
inc
ficompl
sahf
icebp
mov
dec
cmp
inc
in
test
xchg
inc
xchg
js
outsl
sar
aad
adc
pushf
xchg
cwtl
push
outsl
jb
inc
into
js
mov
and
in
cwtl
fwait
into
insl
test
cmp
loop
fmul
out
inc
lret
xchg
iret
sub
xchg
sbb
push
push
cmp
leave
sbbl
lock
addr16
in
sub
xchg
mov
stos
mov
imul
mov
adc
ja
add
sbbl
jae
or
and
test
cld
mov
pop
test
push
pop
jmp
shlb
aam
rorl
sub
aad
inc
into
je
sub
inc
push
sbb
mov
pushf
sbb
lock
push
jns
cmpsb
daa
es
rclb
js
inc
xchg
and
xchg
sbb
fstpt
inc
andb
or
fwait
inc
pop
fdivrl
pop
add
sbb
decb
idiv
jge
scas
addl
mov
xchg
data16
inc
mov
and
mov
movsb
or
sbb
fs
test
mov
sbb
in
jl
jg
push
fcompl
popf
call
int
movsl
pop
xchg
inc
insb
and
in
xor
add
and
xchg
xchg
movsl
fs
and
add
sub
dec
fs
rcrl
insl
adcl
xchg
fs
mov
arpl
je
test
fwait
test
xchg
and
notl
jo
jne
jbe
ja
js
jns
jp
jnp
jl
inc
je
inc
test
test
xchg
clc
pop
shrb
sub
lahf
mov
sub
jmp
repz
jo
push
xchg
push
loop
mov
and
loop
loop
mov
push
mov
scas
mov
aam
pop
xchg
add
and
cltd
sbb
in
pop
mov
and
pop
sahf
dec
sbb
adc
or
pop
pop
jge
sahf
pop
sbb
and
xchg
jno
mov
jne
ljmp
pop
icebp
jbe
or
insb
stos
pop
data16
pop
sbb
mov
outsb
fnstenv
mov
rcll
pop
adc
popw
xchg
and
iret
cmp
std
mov
and
sbb
dec
mov
xchg
mov
sahf
fucomip
dec
and
jle
adc
clc
adc
in
je
aas
pop
mov
and
mul
xchg
xor
xor
shll
mov
adcl
ret
xor
std
and
sub
mov
dec
and
mov
and
cld
sub
cmp
and
cmp
negb
mov
outsb
fistl
sbb
scas
mov
sbb
push
mov
jle
mul
fsubrl
sbb
mov
fiaddl
arpl
xchg
movsb
push
es
xchg
add
loope
mov
cltd
mov
iret
mov
jp
xchg
icebp
xchg
mov
xorb
stos
cltd
mov
dec
adc
sahf
adc
insb
in
mov
cmp
cli
sub
in
ljmp
mov
and
movsl
xor
shlb
push
ljmp
loopne
mov
xchg
pop
jnp
mov
inc
xchg
and
cmp
mov
mov
popa
out
and
mov
call
push
inc
inc
mov
mov
xchg
sub
xchg
sarl
xchg
adc
or
ss
in
mov
adc
aam
dec
adc
scas
mov
test
xchg
aam
test
inc
movsl
jae
pushf
mov
xchg
and
dec
add
push
lcall
fwait
out
sub
jnp
loop
rol
and
sbb
in
and
insb
sbb
cltd
xor
mov
lods
mov
mov
add
loop
in
pop
dec
pop
movsl
lock
js
hlt
mov
xchg
mov
stos
mov
lods
aaa
jae
pushf
lret
imul
fcoml
mov
loop
push
ja
push
loop
das
mulb
hlt
fcoms
rcr
fisubl
subl
and
into
mov
sbb
pusha
xchg
stos
xchg
and
mov
insl
call
mov
mov
jg
sub
test
ja
mov
ret
xchg
pop
push
xchg
arpl
mov
fnstenv
push
in
or
daa
add
xor
mov
add
pushf
sbb
push
pop
sub
repnz
xchg
xor
es
jp
push
movsb
nop
mov
xchg
sub
lock
xor
sbb
cmpsl
insl
sti
in
cmp
and
push
and
and
ret
je
movl
and
mov
jo
xchg
push
mov
adc
lret
mov
ficomps
andl
scas
jae
xchg
adc
movsb
or
stos
repnz
or
pop
xchg
arpl
push
and
or
lds
rep
fdivl
or
clc
and
mov
fdivrl
and
sahf
mov
test
shlb
dec
xchg
aaa
xchg
pop
cmp
addr16
mov
popf
mov
pop
or
mov
hlt
jp
adc
jae
sbb
adc
xchg
mov
mov
cmp
psubusw
sti
in
imul
popa
enter
daa
into
and
pop
loop
sub
adc
ljmp
lock
cmp
fwait
dec
pushf
push
sahf
jae
in
inc
xor
xor
cmpsb
mov
lret
jle
xchg
push
push
into
sub
fdivrl
fstps
sub
mov
mov
mov
jb
lods
mov
nop
pop
pop
je
ja
sub
sbb
inc
std
cmp
pop
sbb
cltd
mov
ljmp
dec
lcall
pop
push
adc
rcl
sti
jb
sbb
cmp
aam
int
pop
shrb
cmpsl
insb
mov
adc
pop
outsb
cmpsb
cltd
dec
cmpsb
in
ljmp
lea
mov
pop
icebp
and
mov
dec
shlb
and
dec
popf
xor
push
push
cli
stc
addr16
xor
cmp
xor
mov
mov
sbb
jb
adc
xchg
cwtl
lds
cmpsb
fdivl
and
and
mov
adc
call
in
lds
pop
ret
popl
in
or
jb
sbb
lcall
xchg
push
stc
or
jnp
dec
push
hlt
lods
repz
xchg
fsubrs
push
dec
test
sbb
inc
outsl
sbb
insb
ljmp
dec
ss
or
sbb
nop
jo
loop
lahf
movsb
inc
iret
adc
aam
loope
ret
jbe
sbbl
cwtl
and
out
lods
xchg
and
aam
xchg
and
push
jg
pop
xorb
jp
jle
dec
push
xchg
and
popf
or
add
ret
aaa
cmpsl
pop
sub
pop
and
cwtl
inc
pop
xchg
pushf
mov
jge
cli
mov
or
inc
nop
fidivs
push
bound
ret
dec
xor
mov
movsl
cwtl
mov
cmp
insb
jns
push
or
jb
and
mov
sbb
imull
fmul
fisubrl
sahf
adc
jmp
or
jns
popf
or
shrb
in
and
adc
mov
or
fistps
cltd
sub
pop
pop
jecxz
enter
mov
mov
mov
sbb
cmp
pop
sbb
fildl
xchg
rorb
mov
and
loopne
mov
cmp
das
xchg
jnp
and
testb
xor
aaa
mov
clc
mov
mov
addr16
outsb
xor
inc
or
lods
jb
rorb
xor
inc
push
sahf
andl
cmp
cmp
push
test
gs
adc
lret
imul
dec
jle
sbb
adc
pop
push
popa
mov
sbbl
add
lret
ficompl
fdivrl
sbb
jecxz
nop
sbb
inc
xchg
mov
sbb
scas
sti
fwait
dec
mov
loope
std
pop
lcall
iret
testb
aaa
shr
sbb
xchg
sahf
cmpsb
in
inc
mov
negb
adc
decb
ds
and
xchg
dec
sbbl
aas
push
xchg
ror
fiaddl
pop
push
xchg
lret
pushf
fs
and
pop
adc
cmp
adc
mov
dec
mov
fbld
ficomps
fucomi
out
and
jo
mov
rclb
cs
hlt
pop
fistps
push
adc
xchg
loope
xchg
push
dec
sub
adc
pop
test
push
mov
mov
ss
addb
mov
jmp
mov
sub
test
jo
xchg
pushf
fisttpl
xchg
ds
rolb
roll
push
add
movsb
sbb
pop
fcomps
pusha
pop
loopne
into
adc
jl
mov
mov
ds
jo
leave
add
scas
in
fiadds
jb
out
test
pop
mov
sbb
pop
cwtl
ljmp
mov
cmc
push
in
sbb
inc
stos
or
xchg
jnp
mov
jg
rorl
in
xchg
dec
push
data16
push
cltd
sbb
scas
mov
dec
insb
adc
pop
and
vpshlb
mov
pop
mov
adc
dec
popa
adc
sub
push
rorl
mov
add
jp
mov
sbb
xchg
mulb
fs
das
or
shll
fdivrl
int
out
jecxz
sti
pop
adc
movsb
mov
mov
adc
popf
sbb
arpl
jae
or
xchg
and
xor
or
pop
adc
popf
adc
fdivl
movsb
bound
hlt
pop
adc
popf
jae
and
mov
lret
sbb
movsb
loope
je
stos
arpl
sub
jne
and
and
push
mov
xchg
pop
hlt
xchg
jecxz
lret
or
fstl
addl
test
sbb
or
and
push
loope
pop
leave
mov
jg
mov
xchg
push
dec
ljmp
orl
in
shll
popa
mov
fcoml
fcoml
mov
jb
lock
mov
dec
test
idiv
adc
popf
jnp
jo
dec
mov
sbb
movsb
xchg
dec
jp
push
pop
xchg
mov
and
sub
add
xor
mov
movb
sbb
mov
sub
cmp
add
ja
jb
push
test
mov
push
repz
push
mov
nop
xchg
dec
or
fcoms
add
xchg
inc
push
faddl
xor
cmpsb
fstpl
xor
data16
aad
inc
outsl
and
xchg
out
rcrl
mov
mov
movsl
add
mov
aaa
pop
movsb
push
push
loopne
sub
inc
sahf
adc
mov
push
mov
mov
data16
sub
or
pusha
test
or
inc
inc
in
mov
jmp
dec
and
mov
lods
sub
jecxz
or
xor
rorb
add
jmp
jl
rorb
popf
out
xchg
pop
sahf
enter
sti
jge
pop
fcomip
outsl
sub
mov
loop
add
pop
xchg
xchg
sahf
aam
mov
sbb
in
mov
jle
push
rcrl
fsubl
into
jo
dec
dec
jno
fucomi
in
sub
pop
in
mov
clc
in
dec
rcr
pop
sub
push
cmp
mov
mov
imul
sbb
mov
push
cmp
loopne
sbb
cmp
rclb
inc
fs
jecxz
cwtl
push
sbb
and
adc
mov
mov
sbb
push
arpl
adc
mov
stos
insl
insb
andb
add
and
mov
mov
sub
fildl
fwait
repnz
lret
sub
dec
push
mov
lods
push
hlt
pop
rorl
dec
test
and
pop
data16
xchg
dec
add
push
mov
adc
inc
jmp
outsb
ds
mov
or
js
sbb
sbb
xchg
test
lds
cmp
push
fsts
scas
aam
pop
jl
xor
jmp
fisttpl
rcrb
or
andl
cli
js
xchg
cmp
popf
jmp
in
mov
mov
inc
xchg
pop
in
scas
shlb
into
rorl
in
out
icebp
icebp
sbb
lahf
lret
pop
xchg
cmp
sbb
mov
inc
sbb
sbb
and
xchg
adcl
cmp
iret
adc
mov
cltd
and
test
jg
or
dec
jb
outsb
dec
mov
rcrb
mov
xchg
sarl
ljmp
xor
loop
les
jns
push
stc
mov
sahf
or
mov
pop
insb
cs
mov
jae
shll
pop
lret
and
dec
sbb
jle
mov
aaa
movsb
mov
xchg
mov
test
bound
cwtl
insl
movsb
loop,pn
mov
pop
icebp
mov
xchg
lret
es
testb
jl
pop
cmp
xchg
jae
iret
loopne
mov
push
push
and
rclb
add
popa
repnz
addps
sbbl
mov
into
popf
not
and
pop
dec
xchg
and
pop
and
jp
repnz
jo
pop
cmp
sti
and
enter
int3
in
das
test
shlb
pop
ds
dec
sbb
movsb
std
xchg
or
xchg
adc
or
jge
xchg
rorl
inc
nop
in
stc
push
cmp
addr16
int
jo
and
mov
xor
push
add
and
fstl
jg
mov
adc
insb
sbb
sbb
mov
aam
or
push
aad
mov
fwait
dec
andl
and
sti
mov
mov
cwtl
xchg
cmp
xchg
or
leave
addl
cmpsl
jnp
inc
mov
cmp
loope
mov
push
rcrl
andl
sub
inc
mov
cmp
aam
fs
sbb
sbb
xchg
mov
shl
add
cmp
xchg
stos
sbb
add
adc
fwait
loopne
pop
pop
nop
aam
movl
dec
add
popf
dec
aam
std
dec
mov
ret
mov
add
popf
cld
rcrb
andl
sahf
insl
adc
movsb
mov
test
andb
les
lds
test
movsb
jp
inc
test
inc
rcll
arpl
nop
or
les
add
pop
xchg
adc
aas
pop
les
pop
test
inc
ss
push
cwtl
and
movsb
scas
xor
xor
mov
dec
fnsave
sahf
jnp
ret
xor
shlb
xchg
or
xchg
lcall
cmpsb
jmp
mov
mov
int
sbb
inc
and
adc
mov
push
notl
mov
insb
in
or
ret
leave
mov
mov
test
jno
lcall
aad
andb
loop
pop
stos
int
sbb
mov
out
pop
mov
sahf
mov
jp
pop
pop
andl
ljmp
insb
add
jg
loope
in
and
jecxz
inc
mov
pop
mov
jne
scas
xchg
push
rcrb
out
add
inc
insb
mov
push
cmp
imul
push
test
xchg
in
fistps
lahf
fsubs
inc
pop
xchg
arpl
push
stos
hlt
ja
mov
cltd
lds
mov
imul
insb
stos
xor
push
mov
fistpl
movsb
imul
insl
and
outsb
insb
imul
pop
mov
orb
mov
fldenv
sbb
ds
imul
aas
out
pop
fst
jp
sti
adc
and
pop
jl
sub
cs
push
and
push
inc
xlat
popf
loope
imul
xchg
sar
stos
outsb
inc
pop
adcb
popa
and
mov
jb
cmc
cltd
xorl
lock
sbb
popl
addb
pop
mov
add
sahf
and
cmp
pop
sub
lahf
sbb
mov
movsb
cli
push
push
jge
fcompl
fstpt
fisttpl
push
mov
fimuls
nop
push
ficoml
sbb
lret
sbb
pop
clc
and
jbe
insl
imul
mov
fimull
movsb
push
repnz
push
ja
jns
js
je
addr16
in
mov
xchg
data16
push
xchg
subb
outsb
inc
jno
jb
mov
xchg
mov
or
ja
mov
xor
sar
jnp
push
and
bnd
adc
and
cmp
pop
jle
fiadds
addb
lcall
mov
adc
clc
arpl
sbb
sbb
aam
loopne
mov
jo
and
cmp
push
pop
mov
mov
jae
fldenv
dec
and
arpl
es
addr16
inc
and
rcrl
jns
jp
jl
sub
cld
and
sub
push
add
fwait
xchg
sahf
push
leave
xlat
js
or
rorb
pop
jg
enter
and
xlat
leave
pusha
sahf
dec
ret
call
push
xchg
bound
fldt
lret
or
imul
cmp
pop
or
mov
and
pop
orb
orb
inc
or
pop
cwtl
sbb
xchg
push
mov
pop
cmc
mov
mov
cmp
cli
and
cmpsl
and
jecxz
ficompl
or
add
iret
fs
fwait
xchg
ljmp
mov
lret
dec
sub
enter
add
nop
inc
lea
inc
jp
inc
xchg
inc
xchg
or
xchg
subl
jae
jecxz
je
mov
add
icebp
mov
movsl
push
adc
cmpsl
xchg
jmp
mov
hlt
push
movsb
iret
pop
push
dec
inc
sbb
jle
xchg
mov
jp
lahf
ja
dec
movsb
inc
adc
pop
sahf
push
aam
mov
repz
sahf
mov
adc
push
lahf
loopne
push
stos
pop
out
outsb
andl
fcompl
xor
test
inc
jmp
add
push
and
sbbb
xchg
sbb
les
in
or
push
mov
sbb
iret
push
fbld
dec
xchg
push
and
pop
movsb
cltd
scas
mov
adc
or
sahf
and
out
xchg
lahf
mov
ficomps
add
jecxz
jge
and
test
inc
adc
in
mov
leave
popa
and
sbb
sub
fucompp
xlat
test
cli
hlt
sbbl
mov
ret
mov
push
sub
mov
nop
stos
movsb
andb
dec
mov
punpckldq
xchg
lcall
xchg
out
into
in
lods
push
jecxz
and
inc
insb
pop
icebp
hlt
sbb
and
inc
imul
adc
xor
mov
popa
movsb
mov
mov
mov
adc
and
mov
std
sbb
mov
dec
ljmp
js
inc
adcb
pop
insb
out
and
pop
cmc
inc
fwait
pop
mov
out
pop
pop
push
mov
fildl
std
mov
and
or
and
sub
pop
in
xchg
cld
movsb
mov
cmp
sbb
push
inc
adc
je
mov
and
iret
add
mov
setle
into
addr16
add
popa
mov
pop
sbb
shrl
notl
test
ljmp
and
or
adc
jl
pop
mov
adc
addr16
xlat
or
xchg
cmp
pushf
shrb
jae
loopne
mov
lds
and
sbb
rcrl
sub
inc
ljmp
add
pop
mov
lret
movsb
cmp
movsb
ret
xchg
pop
dec
push
inc
iretw
js
rcll
and
sbb
fistpll
mov
mov
stos
in
loopne
adc
jno
push
shll
jo
xchg
mov
sbb
xchg
mov
cmpsl
push
mov
lahf
in
xchg
xor
idivl
xchg
xchg
popf
or
insb
cmp
mov
sbb
ds
pop
add
fimull
arpl
xchg
and
sahf
xchg
dec
sbb
dec
mov
cmpsb
jmp
jecxz
mov
stos
dec
jge
pop
sbb
jae
bswap
and
lahf
mov
adc
or
push
lret
pop
adcl
into
sub
jbe
fwait
bound
sti
mov
sbb
test
mov
xchg
pop
addl
add
pushf
push
test
pop
imul
adc
shll
xchg
jl
cmp
xchg
int
test
xchg
and
pop
ficompl
cmp
and
inc
jns
fcomp
jge
nop
push
hlt
mov
mov
mov
pop
dec
xchg
xchg
add
add
adc
jle
pop
in
mov
mov
jl
pop
stos
or
sbb
dec
imul
mov
ret
or
xchg
and
sti
push
mov
int3
xchg
jecxz
sbb
enter
adc
jno
xchg
aad
inc
jae
mov
in
jno
pop
push
loop
cwtl
sub
add
out
mov
jg
inc
movsb
add
cmpl
pop
dec
stc
mov
pop
adc
popf
jns
adc
cwtl
jmp
mov
pop
xchg
mov
popa
bound
and
mov
insl
push
mov
hlt
movsb
mov
lods
mov
andl
out
inc
popf
ficoms
sbb
jl
mov
or
sbb
push
cmp
and
cmp
mov
sti
pop
outsb
jns
inc
and
sbb
mov
movl
and
add
sub
mov
test
pushf
sti
jp
cmpsl
mov
lea
inc
arpl
or
cmp
xchg
mov
gs
clc
pop
mov
jo
arpl
mov
xchg
ss
cld
mov
jmp
cmpsl
pop
rcr
js
loope
xor
outsb
movsb
rol
cli
or
fbld
and
fstps
fs
in
mov
jae
jo
leave
xorl
js
inc
jl
sbb
xchg
mov
lods
test
fwait
xchg
cs
mov
dec
xchg
pop
sub
jmp
adc
inc
cmp
seta
lret
aam
lret
sbb
sahf
jp
push
mov
out
pop
mov
outsb
pop
cld
lret
mov
cmpsb
pop
xchg
ja
and
xchg
cld
mov
mov
mov
mov
xor
fists
insb
or
orl
test
inc
std
xchg
push
push
sti
adc
in
xchg
jl
flds
loopne
xchg
lahf
mov
lret
dec
cmp
loopne
fildll
jge
sbb
adc
cmpl
pop
lret
mov
and
leave
sub
push
mov
test
mov
add
movsb
loope
adc
fs
sahf
std
dec
add
loop
add
lret
insl
sub
jns
hlt
add
pop
sbb
inc
push
and
roll
mov
outsb
scas
fidivrs
int3
jg
loop
pop
ss
push
and
xchg
fs
inc
cmpsl
inc
out
and
lret
xchg
dec
imul
xchg
push
cmpsl
adc
mov
inc
fwait
ss
mov
pop
movl
movsb
push
rol
movsb
mov
nop
popl
sti
xchg
sbb
cmpsb
loopne
lea
clc
frstor
xlat
pop
fwait
and
mov
add
mov
pop
ja
and
daa
fwait
inc
mov
sbb
and
jl
xchg
add
in
pop
adc
cmpl
xor
push
sbb
pminsw
jle
sahf
push
popa
js
add
xchg
cwtl
push
pop
jmp
shll
and
data16
and
mov
out
dec
cmp
xor
popf
and
cltd
pop
sbb
mov
fs
aad
cmpsb
into
pushf
hlt
inc
xchg
mov
pop
mov
mov
xchg
mov
inc
dec
mov
or
xchg
sahf
sub
shl
loop
in
scas
xor
movsb
mov
popa
ret
lret
push
loop
movsb
mov
orl
pop
enter
jbe
cltd
mov
mov
push
sub
or
repz
inc
mov
movsb
popf
mov
hlt
ss
pushf
stos
or
and
popf
cltd
imul
fnstsw
xchg
mov
xchg
jl
or
pop
cmp
movsl
pop
std
mov
mul
jg
cs
pushf
pop
push
lock
pusha
mov
pop
insb
mov
pop
sub
mov
aas
mov
xchg
cld
pushf
popa
cltd
or
push
push
cltd
iret
nop
adc
adc
mov
push
andl
push
jmp
cmpsb
hlt
outsl
mov
mov
xchg
dec
je
mov
repnz
jbe
jae
movsl
sbb
inc
or
adc
mov
clc
xchg
pop
dec
mov
jae
dec
icebp
jno
shll
sub
or
push
xor
mov
stos
pop
push
idivl
xchg
popf
mov
and
dec
jmp
nop
sbb
jecxz
hlt
sbb
fidivs
or
mov
mov
push
xchg
loopne
mov
lea
sbb
into
aas
xchg
xor
sbb
mov
and
cld
jge
cmpsb
jp
inc
nop
or
add
mov
rcll
xchg
gs
adc
into
cld
mov
cmp
imul
xor
test
pop
test
cld
xchg
pop
dec
mov
mov
mov
mov
mov
cwtl
lahf
mov
sbb
xchg
data16
fmull
data16
or
pushf
dec
std
stos
xchg
dec
popa
adc
jno
xchg
push
add
xchg
clc
xchg
out
and
sbb
mov
or
pandn
cli
mov
xor
pop
push
ret
das
push
jae
mov
cld
mov
inc
or
mov
cmc
mov
add
call
push
and
rol
ret
and
jle
or
cwtl
mov
ljmp
mov
mov
andl
add
inc
insb
lcall
mov
lahf
and
adc
das
add
cmpsb
pusha
les
movsb
sahf
pop
pop
pop
fidivs
mov
arpl
xor
fs
mov
and
inc
shrl
loop
rep
adc
xorb
add
repnz
stc
and
je
leave
arpl
sbb
add
movsb
push
lret
bound
cs
fisttps
xchg
inc
cltd
sahf
mov
shll
mov
dec
push
mov
fcompl
mov
in
fsubl
les
test
cltd
xchg
mov
and
ja
cwtl
ljmp
je
mov
dec
push
sub
shll
std
inc
pop
jno
push
inc
mov
fsts
or
xchg
popa
and
pop
or
mov
out
mov
or
mov
add
ds
gs
test
mov
inc
fwait
or
adc
add
jge
sub
xchg
push
negl
insl
in
add
cmp
insb
mov
daa
adc
and
sbb
push
stos
int3
push
in
xchg
and
rcr
jo
mov
xor
or
insb
fcmovbe
adc
das
mov
cmp
and
fwait
push
or
jg
and
pop
xlat
or
mov
fwait
pop
icebp
sahf
push
mov
or
mov
aad
jb
ret
push
dec
data16
ret
aad
imul
inc
ret
xchg
aad
or
jae
aad
jg
add
add
xchg
aad
insb
ja
jl
jle
jge
jle
daa
adc
adcl
lcall
pop
mov
sub
ljmp
xchg
mov
iret
push
sbbl
lods
add
mov
out
in
xchg
mov
adc
jmp
js
outsl
sub
inc
jle
in
mov
push
pusha
jbe
cmp
aaa
xor
aaa
xor
add
inc
cmc
jge
push
adc
push
mov
add
shll
sbbl
in
pop
sbb
les
fistpl
dec
sub
and
pop
movsb
cmpsl
cmp
hlt
mov
rcrl
xor
mov
add
and
sbb
xchg
mov
mov
test
mov
pop
stos
add
cmp
dec
jmp
push
push
sbb
sti
fcompl
pushf
sub
xchg
pop
int3
out
sub
mov
repz
mov
imul
stos
jno
jmp
adc
sahf
cld
movsb
sbb
inc
xchg
call
inc
arpl
jle
jg
imull
xchg
mov
jo
jl
jge
jb
mov
int
nop
mov
in
jle
rcll
adc
test
sbb
adc
sub
pop
test
aam
pop
fcompl
xor
insb
push
xchg
movsb
push
je
cli
call
mov
subb
cwtl
and
pushf
mov
aas
lds
push
push
cmp
mov
mov
pushf
xchg
and
fbstp
fs
push
mov
int
mov
rcrl
or
cmp
pop
push
and
jno
jnp
out
xor
sahf
xchg
push
lahf
mov
xchg
add
popa
push
mov
inc
pop
push
mov
xchg
jb
enter
imul
rorl
in
sbb
cmp
shrb
fxch
lds
data16
mov
xor
cmp
cmovae
mov
mov
jg
in
jns
loope
jp
dec
push
sar
stc
js
outsb
mov
dec
popa
cs
mov
mov
inc
xchg
pop
std
add
stos
adc
or
adc
std
lahf
out
je
scas
mulb
sbb
pop
pop
loopne
jo
and
pop
cmpsb
lret
arpl
cmpsl
add
sub
cmc
dec
shll
xor
in
mov
inc
movsb
nop
xchg
and
jecxz
adc
ret
shlb
stos
push
shlb
mov
pop
aaa
xor
in
ret
aam
subb
shlb
and
movsb
inc
and
into
loope
popf
in
mov
jno
ja
inc
sbb
or
dec
dec
lods
and
mov
sbb
aam
insl
pop
mov
and
cmpsb
mov
xchg
jne
or
movsl
jbe
xor
mov
je
jecxz
lahf
out
xchg
and
stos
xor
adc
mov
outsb
push
insl
data16
mov
adc
xor
loop
mov
pop
push
adc
popa
lea
adc
loope
sbb
lock
jl
cld
xchg
incl
ds
xor
and
xchg
lds
or
or
push
xchg
insl
test
mov
out
pushf
mov
jo
sub
push
push
xchg
mov
or
pushf
daa
mov
hlt
and
arpl
xchg
jo
cmpsb
mov
and
adcl
int
jmp
sahf
lret
mov
xchg
sbb
pop
sahf
mov
clc
insb
jle
pushf
in
rcrl
fistpl
cmpsb
mov
adc
jp
je
les
push
insb
and
jae
lcall
or
mov
lods
fistps
pop
adc
out
xchg
in
push
daa
cs
fs
sub
jae
mov
lea
sub
cmpsl
rorl
neg
rcll
jae
xchg
cltd
xchg
xchg
inc
mov
xchg
inc
mov
and
adc
push
mov
pop
fldenv
push
xchg
mov
xchg
and
mov
js
in
jmp
es
sbb
arpl
imul
in
popf
mov
cmp
add
nop
enter
jl
leave
push
in
jge
and
movsb
mov
mov
add
in
rsqrtps
mov
icebp
rclb
jno
cmp
sub
add
iret
std
xchg
rorl
js
pop
nop
lret
and
mov
aas
lds
ljmp
sbb
jg
lahf
ret
jg
adc
imul
lahf
push
cmp
js
add
and
jle
nop
cmp
adc
jbe
cld
lahf
push
pop
jnp
addr16
ss
or
nop
test
inc
shlb
cmp
adc
xchg
adc
pop
push
cmp
pop
fbld
aaa
lcall
cltd
fistl
add
pop
pop
iret
call
cmpsl
push
or
xchg
jmp
rcrl
fldenv
inc
jmp
adc
or
test
mov
call
and
ljmp
sahf
sub
cmp
and
data16
mov
aaa
add
fwait
roll
or
cwtl
adc
insb
jmp
aam
andl
in
insb
mov
pop
mov
sbb
pop
mov
cld
and
mov
xlat
mov
cmp
movsb
and
repz
mov
in
in
jge
xchg
fwait
mov
sbb
outsb
in
and
insb
mov
cmp
sub
mov
movsl
cwtl
cmc
mov
loope
adc
xchg
pop
fidivrl
lods
push
sbb
in
jp
dec
callw
idivb
mov
sbb
lahf
fs
dec
fwait
out
rclb
push
mov
xorl
xchg
in
insl
into
aaa
sahf
jae
cmp
test
adc
stc
mov
dec
mov
pop
pop
fisubrs
mov
lahf
pop
scas
fnstcw
dec
aaa
imulb
pop
outsl
in
fcoms
mov
fstps
jl
leave
push
addb
test
mov
divb
adc
es
addr16
shl
das
nop
mov
ljmp
bound
add
shll
pop
nop
mov
or
stos
push
jbe
add
sbb
dec
push
pop
pop
pop
mov
stos
xchg
mov
in
mov
dec
pop
push
mov
xor
movsb
jbe
out
xchg
out
push
addr16
roll
mov
jecxz
cmp
fwait
cltd
sbb
ret
sahf
lock
dec
nop
mov
in
push
xlat
xchg
popa
cltd
fcoml
dec
xchg
sbb
test
mov
xchg
sahf
cwtl
dec
inc
push
popa
lea
ss
in
pop
sub
sub
pop
outsl
rcrb
fisubrl
clc
push
and
sub
cmpsb
test
shl
loope
aam
xchg
push
push
adc
xchg
pop
xchg
out
lcall
icebp
or
mov
mov
lahf
mov
and
and
js
lods
shl
cmc
dec
cltd
fisubs
loope
mov
lret
mov
jl
xchg
aas
push
ret
js
ret
push
cmp
and
sahf
mov
dec
inc
repz
mov
sbb
cltd
xor
mov
cmpb
xchg
jo
lcall
mov
rclb
pop
pop
test
push
xchg
mov
xchg
outsb
call
les
and
out
xorb
ljmp
or
or
test
jl
movsb
ja
lahf
xchg
jge
add
xchg
outsb
or
inc
nop
add
jl
mov
xchg
out
aaa
subl
jl
arpl
outsl
cli
cwtl
lcall
xchg
arpl
pushf
les
fs
aam
movsl
je
or
xchg
and
adc
in
add
adc
es
add
and
movsb
insb
sbb
mov
ja
les
fisttps
sub
and
je
push
and
add
dec
fs
mov
pop
xchg
loopne
jbe
popa
fs
movsb
lea
push
outsl
loopne
outsb
in
xor
add
pop
addr16
mov
mov
add
pop
inc
rcll
jo
and
mov
xchg
les
and
lahf
or
stos
outsl
xor
pop
rcr
shl
lock
imul
pop
sahf
pop
ljmpw
sahf
mov
frstor
cmpsb
cld
mov
in
lret
loopne
data16
inc
out
push
popf
test
ret
pop
push
or
pop
jne
cmp
sbb
mov
out
into
dec
or
cmp
fbld
ljmp
add
ss
and
cs
imul
rcrl
push
jl
movsb
mov
jle
xchg
adc
add
cmpsb
es
stc
inc
mul
push
outsb
int3
int3
jb
sub
sbb
cmp
fsubrs
push
lods
rcl
fisttpl
adc
xor
adc
pop
fwait
mov
js
xor
ds
insl
popa
lret
sahf
adc
je
mov
dec
out
jo
xor
mov
mov
iret
out
push
sbb
dec
pop
loop
popf
mov
aam
or
and
sbb
loopne
adcl
js
ret
dec
adc
jl
cmp
pop
mov
mov
scas
mov
movsb
xor
mov
cmp
sbb
sbb
adc
out
or
std
xchg
mov
cmpsb
xorb
test
ficompl
hlt
lock
loop
lcall
fsubr
mov
mov
mov
jns
jmp
pusha
lods
call
test
jmp
outsb
loopne
or
cwtl
dec
jb
shll
dec
pop
insl
sbb
mov
xor
imul
sbb
mov
popa
scas
inc
jle
clc
push
movsl
das
gs
xchg
loopne
es
jb
adc
stos
jg
stos
jno
imul
mov
shl
adc
cmp
pop
out
inc
fldt
stos
scas
jg
loopne
dec
jge
pusha
sbbl
jle
les
repz
mov
push
pop
sti
xchg
fcompl
push
and
or
jo
pop
push
inc
pushf
filds
leave
bound
test
or
out
inc
outsl
or
mov
adcl
outsb
dec
in
in
insl
xchg
sbb
sahf
gs
test
rcll
adc
shll
pop
mov
ss
sub
jg
aad
scas
sbb
xchg
fwait
mov
imul
dec
sbb
xchg
push
stos
lret
cmpsl
bound
cltd
mov
add
mov
cmp
push
inc
mov
sub
mov
test
ret
xchg
aam
iret
mov
or
mov
xchg
adcl
shrl
out
rolb
pop
jmp
fidivl
sbb
fldl
push
inc
xor
jge
jmp
cpuid
outsl
mov
push
ja
rcll
in
mov
test
jae
sahf
repz
bound
mov
add
std
jge
cmp
mov
mov
mov
jge
xchg
cmc
movsl
inc
sbb
xchg
pop
ret
cmp
stos
aaa
daa
xchg
in
fcoms
sbb
nop
inc
xchg
cmp
xchg
or
mov
mov
fidivrl
lock
lret
hlt
xor
inc
test
mov
outsb
sbb
lcall
inc
pop
shlb
cs
stc
or
mov
stos
fldcw
mov
into
lahf
popa
xor
mov
mov
xchg
mov
sbb
mov
movsb
sbb
and
fsubrp
jne
stos
and
xor
in
jns
and
mov
mov
mov
jl
push
inc
xchg
xorl
lds
frstor
outsl
popa
push
test
jne
jae
repnz
mov
stos
scas
hlt
xchg
sbb
leave
push
and
xchg
and
cmp
cmp
cmp
push
add
mov
and
jae
mov
dec
pop
sbb
loop
cli
inc
xchg
movsb
cmpsl
sub
in
xchg
in
test
and
cwtl
test
daa
push
cld
lea
das
in
test
sbb
int3
out
dec
movsb
cwtl
pshufw
cli
lret
lcall
cmp
movsb
jl
outsl
stos
es
sbb
cmpsb
or
push
rcrl
or
xchg
cmp
fcmovne
mov
aam
xchg
ficompl
add
test
addb
std
jg
loop
jle
push
pop
stos
outsb
cmc
ds
pop
ljmp
mov
ror
xchg
add
scas
adc
out
rolb
sub
sbb
xor
and
xor
add
adc
ss
mov
ljmp
pop
sub
roll
loopne
test
cmp
push
add
insl
daa
xchg
loope
lods
gs
mov
lods
cli
and
movsl
frndint
out
push
dec
rorl
je
sahf
insl
xchg
loope
adc
jnp
shl
andl
and
shl
es
incb
int
push
xor
adc
nop
sarb
cli
out
rorb
jl
push
test
push
mov
xchg
lahf
mov
mov
movsb
scas
popa
mov
into
push
jbe
stos
mov
xchg
bswap
insb
xchg
mov
xchg
xor
push
push
jne
add
imul
jnp
orl
and
fs
dec
rcr
mov
push
xor
sbb
push
xchg
xchg
mov
push
and
test
jno
add
and
in
push
adc
fisubs
cmp
rorl
or
mov
adc
mov
pop
push
leave
jp
out
or
out
xchg
roll
jo
jo
push
popf
fcmovnu
lahf
setle
lds
aad
cmpsl
xchg
nop
call
arpl
xchg
sub
in
daa
subl
loop
outsb
jo
ds
jno
js
fld
fs
pop
es
sbb
mov
pop
mov
loopne
lock
dec
fcompp
lahf
xchg
sahf
dec
sub
les
pushf
push
mov
or
mov
sbb
jnp
jno
mov
cld
arpl
mov
mov
fsubs
bound
fldcw
daa
sub
cmp
scas
rcrb
ret
sbbb
mov
add
add
fs
sbb
cltd
call
bound
push
mov
xor
add
cmpl
mov
in
and
jae
ja
mov
mov
and
sbbl
sbb
subl
fwait
xchg
xor
enter
cmpsl
or
sbb
xor
out
jnp
pop
cmp
jno
ret
pop
xchg
cmp
std
sbb
mov
mov
ret
mov
movsb
add
mov
nopl
outsl
mov
dec
lds
stc
shrl
movsb
lret
mov
fidivs
out
xor
push
mov
mov
mov
icebp
xchg
mov
mov
adc
inc
sahf
pop
push
cld
dec
scas
cmp
lock
jle
mov
stos
pop
and
pop
push
in
pop
pushf
aaa
jl
out
xor
arpl
sbb
jl
xor
ja
sbb
xchg
cmpsb
lret
cld
imul
mov
xchg
dec
pop
movsb
fwait
xchg
arpl
jl
and
outsl
ficomps
adc
xchg
bound
stos
daa
fstpt
popf
imul
cmpb
pop
mov
movsl
enter
not
lods
and
fisubrs
lret
inc
dec
xchg
bound
clc
jmp
jle
in
mov
fsub
mov
lcall
mov
fbld
and
or
test
popf
adc
xchg
mov
out
movsl
arpl
jns
test
or
jne
adc
push
dec
and
cwtl
fidivs
lds
xchg
mov
sti
xchg
jno
sbb
sbb
aas
test
mov
sti
push
add
lcall
jp
test
xor
rcrl
or
pop
adc
xchg
sub
arpl
imul
stc
sbb
pop
add
xchg
dec
mov
int3
xchg
pop
adc
ja
in
xchg
dec
sub
jnp
cld
ja
sub
call
int
imul
dec
xlat
xchg
ljmp
rcrl
fmull
in
push
sbb
arpl
xchg
xor
xor
aaa
jmp
fs
cmp
xchg
cmp
fisubs
pusha
dec
and
call
mov
imul
mov
dec
xchg
aad
lret
push
lock
mov
in
inc
int
cmp
inc
cli
es
jo
popf
push
xchg
les
cld
adc
fwait
inc
mov
mov
jne
notl
and
lea
adc
pop
mov
adc
pushf
mov
fdivr
mov
loop
push
pushf
out
test
adc
xchg
and
mov
in
in
nop
dec
cwtl
sbb
into
and
nopl
andb
enter
pop
cwtl
and
xchg
addb
sub
mov
popa
loop
sbb
xchg
and
aaa
mov
push
push
pop
jno
mov
jnp
xor
and
or
incl
pop
cmpb
es
cld
pusha
pushf
sbb
mov
mov
xchg
pop
leave
and
push
jb
movsl
sbb
mov
into
pop
ja
sbb
loope
movsb
mov
sub
pusha
shrl
sub
cmp
aaa
mov
jl
push
pop
cmp
or
imul
xchg
or
pop
pop
push
shl
and
and
popf
cmp
sahf
or
jae
cmp
pop
mov
mov
sub
movsb
cmc
sub
sbb
test
or
inc
das
int3
adc
adc
cmc
das
test
pop
and
fsubl
aad
movsb
sbb
and
adc
das
jb
pushf
arpl
cmpsl
shlb
cmpsb
jl
mov
std
sbb
test
mov
jmp
mov
and
xor
es
mov
addr16
dec
sbb
fists
push
push
cmp
fs
cmp
pop
add
jae
je
ljmp
pop
and
lret
inc
std
imul
sub
lcall
sahf
insl
push
lcall
rcrb
pop
scas
mov
add
popf
cli
rclb
inc
or
stos
xor
or
int
xor
cltd
movsl
push
push
sbb
dec
add
shll
faddp
xor
cwtl
sbb
xchg
fcompl
inc
insb
sbb
fwait
in
aam
fcoml
inc
mov
hlt
dec
push
sahf
adc
fwait
adc
adc
cld
mov
sar
sbb
pushf
and
push
test
fucompp
gs
stos
adc
pop
xor
mov
call
sahf
adc
push
rolb
xchg
into
xchg
mov
mov
mov
and
lods
imul
lret
push
jae
xor
arpl
negb
jae
and
out
and
pop
xor
xchg
push
ja
call
iret
xchg
lcall
pusha
fnstenv
js
sbb
xchg
and
imul
out
jle
fwait
jge
out
lret
jo
push
cmp
inc
jg
outsb
xchg
push
xor
inc
jmp
lock
stc
arpl
push
daa
mov
lret
nop
test
push
sbb
mov
mov
jae
mov
xchg
xchg
cmp
dec
rcrl
lock
jne
loopne
loopne
jecxz
mov
inc
inc
and
jg
jb
mov
mov
cmpl
in
enter
fs
push
imul
neg
inc
int
int3
mov
sbb
rolb
and
jg
xchg
or
mov
mov
cmp
mov
mov
and
inc
cmp
arpl
movl
and
imul
adc
mov
mov
dec
pop
test
mov
xchg
mov
into
cmc
mov
cmp
push
push
jmp
inc
imul
outsl
xchg
cwtl
outsb
inc
sahf
xchg
mov
dec
fwait
sbb
fwait
and
roll
cmpsl
mov
and
fldenv
out
leave
popf
and
push
movsb
inc
and
pop
or
mov
and
movsb
test
sbb
in
notb
inc
jle
cmpsl
loop
lahf
mov
fwait
mov
jle
adc
cmp
or
fidivrs
cmp
adc
movsl
sarb
xchg
pop
pop
ficomps
nop
aam
adc
fwait
roll
fstl
addr16
and
push
repnz
dec
or
out
mov
jp
and
pushf
adc
scas
rorl
xchg
pop
add
test
xchg
and
negl
sbb
outsb
in
xor
lret
push
mov
pop
popa
push
jo
je
push
jne
nop
out
adc
cltd
ficomps
add
jbe
in
dec
scas
loopne
mov
insb
stos
in
jl
movsb
mov
ja
mov
fcmovne
pop
jnp
lret
mull
aas
and
or
mov
xchg
jbe
lret
pushf
adcl
mov
push
pop
jge
inc
pushf
xor
push
cmp
scas
mov
adc
popf
filds
test
fdivrl
mov
mov
pop
jnp
test
lcall
push
push
test
or
inc
sub
push
jl
mov
sub
adc
push
push
call
dec
jle
mov
cmp
movsl
mov
iret
dec
inc
pushf
xchg
jg
scas
xchg
bound
push
jmp
jae
xor
pop
mov
imull
shll
addl
or
out
nop
sbb
repnz
mov
add
inc
mov
xchg
mov
sbb
mov
and
leave
das
mov
pop
cmpb
sbb
xor
xchg
mov
jl
jae
aam
lods
fsubl
cwtl
push
fstps
pop
je
mov
lret
cmp
adc
ret
lods
pop
dec
jae
pusha
mov
xchg
fnstcw
nop
xchg
mov
fistpl
xchg
int
mov
outsb
rcrl
rep
dec
loop
int3
repz
popl
xchg
inc
mov
in
lea
and
or
mov
popa
and
push
imul
push
inc
in
pop
in
pop
rorl
andb
or
push
stos
sahf
and
and
xchg
push
sti
fcom
dec
lret
xchg
pushf
mov
in
mov
stc
jmp
aaa
inc
mov
mov
and
and
xchg
jl
add
sub
sub
mov
repz
mov
ljmp
cmp
aaa
ds
icebp
fwait
mov
cmp
xchg
movsb
inc
dec
imul
popf
addr16
sbb
jae
movsb
adc
inc
dec
jo
push
into
jl
mov
je
jno
mov
arpl
psubusb
push
mov
dec
adc
xchg
adc
sub
pop
xchg
inc
mov
cmp
push
inc
iret
add
xchg
and
lcall
roll
adc
xchg
push
xchg
popa
lahf
les
ja
mov
lret
jno
dec
sub
fnsave
in
xchg
andl
fistpl
and
addr16
mov
and
fabs
xor
mov
andl
adc
hlt
cli
sub
js
jne
ss
xor
xor
popa
lds
test
jae
push
rcll
sub
iret
mov
popl
jge
icebp
mov
push
adc
idivb
sbb
int
dec
fcoml
mov
pop
imul
in
pop
aam
jecxz
cltd
mov
push
dec
jb
iret
xor
int
dec
and
adc
jns
jne
out
add
xor
cli
cli
lcall
push
mov
xchg
mov
and
cmp
std
ret
pop
outsl
and
mov
and
or
push
out
jnp
mov
fwait
mov
and
adc
clc
xorl
ret
push
imul
mov
push
or
je
lds
scas
test
or
and
push
mov
fwait
add
mov
pop
or
cmp
pop
push
xchg
xchg
jbe
xchg
jecxz
mov
jo
vpmacssdd
lods
mov
jo
inc
jge
sub
adc
add
fwait
jecxz
arpl
mov
loope
dec
push
mov
sarb
sar
enter
cmp
orl
mov
int3
xor
cmp
into
fcompl
mov
lahf
adc
lea
pushw
enter
loop
adc
sbb
lahf
push
test
add
and
fdivr
insb
fwait
pop
or
outsl
test
mov
testb
push
popa
cmc
pop
ret
push
pop
scas
fisubl
push
and
in
pop
or
stos
xchg
das
sbb
mov
jge
imul
or
lcall
in
jp
mov
stos
lahf
test
ds
cwtl
fcoml
or
xchg
out
je
movsb
add
or
or
mov
pop
dec
repz
iret
mov
cmpsl
je
sbb
sub
imul
ja
pop
push
mov
pop
aad
adc
mov
sbb
sahf
xchg
adc
sub
xchg
andl
jg
pop
adc
mov
flds
inc
xor
icebp
inc
cmpsl
fldenv
sbbl
test
or
je
cmp
xor
and
pop
or
and
fwait
jp
inc
sbbl
and
loop
push
mov
mov
mov
mov
push
pop
bound
pop
pop
sbb
stos
loope
jne
pop
pop
pop
mov
xchg
sbb
jecxz
sub
roll
inc
pushf
cld
test
pop
xor
insl
jne
and
jae
jp
jecxz
icebp
jbe
mov
gs
icebp
ds
push
data16
sbb
out
inc
ss
fisttpll
add
inc
jb
stc
inc
fneni(8087
and
lock
bswap
add
adc
pop
int
stos
sbb
es
or
xchg
xsaves
and
ficoms
jle
mov
and
or
sarl
cwtl
pop
xchg
nop
and
stos
scas
xor
push
pop
shlb
repz
pop
sahf
popa
inc
cmp
pop
dec
adc
xchg
pop
push
mov
pushf
xor
data16
xor
pop
fnstcw
pop
hlt
cwtl
inc
dec
lret
imul
cwtl
push
ds
fcompl
mov
mov
out
shll
iret
shl
fsubl
data16
pushf
and
lods
sbbl
loop
not
and
adc
pop
fmuls
xchg
xchg
mov
pusha
cmp
negb
pop
jg
notb
xchg
movsl
pushl
mov
imul
mov
incl
sbb
mov
pusha
fcoml
add
xchg
jns
mov
lds
pop
dec
jae
in
popf
repz
and
ds
lds
mov
popf
inc
andl
adc
xlat
xor
cmp
or
cmpsb
arpl
ret
lods
fmulp
and
xchg
cli
sbbl
and
je
cmc
ss
xor
stos
cmp
inc
cltd
orl
loopne
jp
sti
xlat
fisttpl
push
push
outsb
dec
leave
cs
mov
arpl
cmp
loop
sub
ret
adc
cld
sbb
adc
addr16
mov
or
test
jecxz
mov
push
mov
cmp
aaa
pop
mov
mov
xchg
push
cmc
lcall
jb
inc
jns
mov
and
jo
movsb
push
sbb
pop
xchg
xchg
xchg
jge
jecxz
testb
xchg
pop
stos
adc
int
lret
cmpsl
cmp
sub
pop
jno
not
testb
jbe
lcall
sub
data16
inc
and
jle
mov
inc
in
xor
icebp
pusha
pop
xor
adc
fucom
dec
cs
rclb
into
mov
xchg
test
mov
es
push
movb
loop
cmp
mov
in
loop
pushf
pop
scas
cmp
pop
es
into
ljmp
jl
xchg
andl
xor
cmp
subb
pop
sbb
xorb
insl
dec
andb
cmp
jg
outsb
sub
ret
push
das
sarb
cmp
lret
mov
mov
inc
sub
lahf
out
fnstsw
dec
mov
hlt
popa
xchg
and
outsl
mov
xchg
scas
and
push
dec
or
add
cmpsl
xor
push
pop
xor
mov
inc
cmp
sahf
and
pop
mov
sbb
dec
pop
mov
mov
mov
xchg
mov
je
cmc
sub
ror
arpl
arpl
push
push
and
dec
mov
daa
adc
aas
gs
lret
sbb
and
pusha
sbb
test
pop
mov
pop
add
add
xchg
sbb
mov
mov
fwait
xor
cwtl
pusha
hlt
repnz
pushf
xchg
repnz
enter
pop
and
jecxz
jno
sub
jecxz
rcrb
mov
test
or
mov
xchg
movsb
jo
or
push
xchg
scas
das
jns
es
nop
cmp
mov
cmp
xchg
mov
rclb
fdivp
rep
mov
pop
lods
fists
pop
fbstp
test
mov
imul
shll
mov
outsb
push
dec
mov
dec
insb
fwait
dec
in
int3
adc
scas
xchg
adcl
scas
fcoml
xor
int
int3
inc
fldenv
pop
and
lcall
fmuls
popf
je
leave
mov
cmp
mov
xor
or
and
lock
jmp
inc
es
cmp
xchg
dec
test
clc
pop
dec
mov
jl
loopne
dec
sub
xor
movsl
adc
mov
xchg
mov
dec
sbb
arpl
jbe
pop
adc
pop
and
pop
push
sbb
ret
mov
dec
cmp
out
xor
dec
mov
dec
repnz
aas
sub
bt
xor
sti
jg
nop
in
adc
cwtl
mov
in
mov
mov
into
leave
sub
in
aad
xchg
dec
jg
add
fs
mov
fcmovb
fs
dec
movsb
insl
in
insb
dec
xor
push
lock
mov
icebp
jb
lods
push
ja
mov
adc
arpl
cmp
rclb
or
and
shrl
notl
leave
cmpsb
pushf
sahf
jp
shrb
inc
jae,pt
adc
pusha
adc
bound
push
fisubl
das
mov
mov
cmp
clc
lret
push
adc
scas
fildl
mov
add
shl
sbb
and
aam
mov
aad
imull
xor
andb
or
imul
ja
pusha
mov
push
pushf
das
mov
movsb
popf
and
push
push
cmp
dec
lods
adc
push
and
in
pop
das
ljmp
mov
cmpsb
aas
mov
ret
inc
mov
jmp
movsl
insl
ss
jb
mov
cltd
xchg
add
mov
insl
adc
inc
cld
or
pop
imul
lahf
imul
cwtl
js
sbb
arpl
sub
nop
popa
push
add
sbb
push
pop
pop
cltd
push
lods
sbb
movsb
stos
movsb
sbb
and
mov
nop
call
jae
lret
xchg
mov
xchg
inc
mov
pop
mov
cmp
leave
adc
jne
adc
popf
jb
xchg
dec
popf
mov
xlat
insb
or
shll
sbb
iret
fldcw
inc
mov
ret
loopne
stc
int3
pop
subl
mov
sub
test
and
push
loop
loopne
mov
repz
jo
and
loope
mov
add
xchg
lock
inc
movsb
hlt
in
adc
sub
jae
xchg
jns
sahf
sbb
mov
fdivs
pop
cwtl
sub
ds
pop
push
sbb
fs
pushf
adc
call
popa
mov
mov
lcall
xchg
fwait
adc
cmc
dec
pxor
pop
mov
mov
pop
jno
loopne
mov
jp
mov
pop
mov
and
sahf
test
sarb
inc
dec
mov
cs
pop
mov
test
sahf
data16
les
or
scas
lds
mov
call
lods
sahf
into
lods
cmp
xchg
push
jno
xchg
xor
mov
lcall
cmpsb
add
xchg
loope
lahf
ljmp
xchg
and
jae
mov
xchg
lock
dec
in
mov
push
test
add
dec
jnp
jae
push
adc
inc
sub
push
add
insb
in
mov
aam
lock
adcl
repnz
mov
sti
sbb
fsubs
popa
and
js
sbb
in
cmpsl
xor
fstps
and
fwait
orl
fwait
in
movsl
sbb
jmp
rolb
cwtl
outsb
cld
and
dec
jno
cltd
aas
or
and
adc
cmpsl
xlat
or
xor
and
ret
out
xchg
movsl
or
mov
jecxz
cmp
fmull
or
fistl
mov
sahf
and
jmp
shll
fwait
sahf
into
imul
xchg
cmpsl
std
cmc
inc
and
iret
clc
cwtl
push
dec
jl
and
fxch
mov
into
cmc
push
fldl
xchg
mov
repz
ds
push
adc
sub
in
pop
repnz
loope
sysenter
xor
pushf
adc
cmp
or
lret
gs
sarl
jnp
sbb
int3
mov
popa
xchg
scas
test
andl
jae
insb
cltd
enter
jae
ret
mov
stc
lods
imul
jb
sti
pop
mov
xchg
pop
add
or
outsb
pop
pop
and
xchg
insb
fwait
imul
mov
gs
mov
enter
xor
and
int
test
ret
sbbb
or
dec
jnp
push
pop
dec
movsl
xchg
xchg
adc
popf
sbb
shlb
ret
dec
xor
xchg
pusha
cli
js
jb
leave
push
cmp
inc
or
fcmovb
dec
mov
or
sbb
push
sbb
fsubrs
mov
ud0
mov
jl
ljmp
or
jbe
or
sbb
dec
or
aad
mov
popl
sahf
cwtl
sbb
xchg
into
arpl
xor
mov
cmc
pop
imul
ljmp
rol
fwait
mov
pushf
scas
in
insb
aam
jae
pop
dec
mov
and
xchg
inc
addr16
imul
cmp
rcll
sbb
test
sub
inc
test
jg
sbb
test
push
fimull
outsb
out
aas
cltd
in
xorl
mov
pop
sbb
add
xchg
push
movsl
cltd
sti
loop
adc
mov
inc
push
arpl
push
in
negl
add
stos
lret
pop
jge
pop
pop
jecxz
lahf
sbb
loop
iret
in
xchg
mov
push
decl
mov
mov
adc
mov
mov
outsb
push
ret
mov
rolb
push
adcl
insb
iret
xchg
popl
lock
mov
pop
mov
xchg
mov
in
sbb
and
ss
icebp
mov
out
xchg
mov
aad
adc
ss
xor
enter
mov
out
sub
mull
bnd
cmc
in
jne
cld
movsb
cld
xlat
rcrl
xor
inc
inc
lret
inc
stos
or
xor
jecxz
pop
xchg
adc
in
cmp
nop
pop
sub
test
cli
pop
jmp
ja
bnd
jl
adc
pop
enter
int3
inc
shll
mov
lcall
sub
mov
sub
lahf
lods
pop
nop
cwtl
lret
flds
sar
or
fadds
inc
insb
adc
into
mulb
inc
fbld
or
shll
sahf
in
aam
test
lret
mov
pop
sahf
cmpsl
add
adc
scas
jp
aam
pop
inc
add
push
fcompl
push
xchg
jb
fsts
aam
es
lods
pop
and
fdivrs
int
xor
outsb
in
cmp
mov
sbb
mov
cmp
jmp
loope
cmp
idivl
je
inc
or
sahf
add
in
pop
mov
push
add
and
mov
and
adc
movsb
mov
and
in
imul
push
in
sbb
push
bound
mov
scas
xchg
cmp
and
insb
mov
aad
loopne
mov
pop
jne
push
push
orb
jnp
dec
push
cmp
jne
subb
and
push
pop
imul
lods
cmpb
pop
dec
cmc
adc
adc
in
jbe
fnsave
mov
dec
es
jae
jecxz
xchg
stos
jecxz
mov
mov
pop
lods
je
push
inc
dec
lcall
cmp
into
mov
mov
sbb
mov
ja
adc
mov
leave
stos
pop
dec
or
repnz
ja
into
test
mov
lock
cld
xor
xchg
outsl
mov
sbb
jnp
mov
dec
mov
mov
outsl
mov
mov
hlt
dec
cld
xchg
insb
pop
sbb
adc
add
pop
xchg
mov
add
in
sahf
mov
sahf
iret
or
sbb
xchg
iret
das
mov
mov
mov
pop
pop
sbb
and
and
adc
xchg
insl
jb
mov
add
arpl
shll
dec
mov
movswl
movsb
mov
cmp
cmp
test
test
jmp
mov
sahf
lock
cmp
stc
les
jecxz
and
adc
adc
xor
adc
jmp
xor
and
sub
and
fs
mov
out
insb
push
mov
aam
adc
or
fsubl
jg
in
insb
ret
cmpsl
and
xchg
test
ficomps
and
out
adc
inc
loop
mov
and
insb
push
repz
jnp
add
push
movsb
popf
inc
dec
pop
pop
push
ljmp
test
into
outsb
arpl
repz
pushf
ljmp
push
mov
sbb
pop
lock
push
movl
fidivl
fs
sub
idivb
xchg
ret
out
dec
jns
jl
js
xor
fldt
lock
xor
mov
into
and
test
call
addb
orb
push
xchg
jl
nop
or
xchg
ficompl
imul
jg
adc
mov
jle
jle
outsb
rcl
sahf
in
outsb
in
test
mov
and
pushf
shrb
test
inc
sahf
mov
jno
inc
and
jae
insb
test
lcall
js
testl
nop
iret
andl
sbb
push
std
lret
pop
andl
fldt
icebp
int
xchg
adc
mov
adc
fistpl
or
dec
nop
and
call
ss
dec
and
adc
jnp
mov
sti
andb
movsl
lock
mov
loopne
ljmp
jbe
mov
mov
fisttpl
push
lahf
icebp
insl
sbb
js
jb
add
cs
clc
insl
int
loopne
jmp
outsb
mov
sbb
movsb
and
mov
ret
cmp
outsb
cli
mov
jno
pop
test
cltd
cmp
xchg
out
push
loope
lcall
cmpsb
out
inc
pop
mov
push
add
jns
sahf
js
mov
xchg
mov
mov
insb
xchg
xchg
jp
and
mov
in
mov
out
cmp
ds
dec
dec
test
mov
and
insl
or
xor
out
sbb
in
lods
insb
mov
les
stos
test
jl
or
and
pop
jbe
popa
lcall
sbbl
pushf
fcoml
shll
pop
loopne
nop
movsb
mov
sbb
jae
adc
jnp
inc
iret
xchg
aam
xorl
xor
mov
popf
je
jecxz
add
sahf
mov
enter
stos
cwtl
loopne
add
movsl
repz
cltd
movsl
cmp
adcb
fs
leave
loop
test
shlb
jle
icebp
pop
inc
sbb
nop
ds
push
push
sub
insl
jecxz
and
fnstenv
mov
stos
mov
adc
subl
sti
xchg
mov
iret
fcmovnb
pop
fwait
or
dec
iret
pushf
or
ja
loop
mov
in
sbb
loope
nop
ficoms
sti
cmp
test
sarb
nop
fwait
dec
and
mov
adc
out
inc
or
inc
and
insb
mov
cmp
sbb
lret
adc
in
jl
sbb
stos
mov
cltd
sahf
jl
mov
pushf
jb
pop
jo
push
out
push
mov
sbb
or
xchg
pushf
rep
or
stos
dec
leave
lahf
inc
inc
aas
mov
dec
jbe
inc
rcrl
stc
and
push
sbb
dec
mov
fimull
fst
jo
lods
mov
shl
inc
imul
outsl
and
mov
sbb
mov
out
rcrb
orl
mov
imul
sub
in
aam
sarb
mov
push
jno
nop
dec
pop
or
in
sbb
jmp
mov
mov
into
in
adc
mov
pusha
pop
and
mov
dec
sbb
lret
push
sub
push
inc
notl
sbb
xor
mov
pop
cmp
xchg
mov
out
inc
lds
and
pop
add
lods
pop
into
and
fcompl
sub
or
fs
mov
and
add
dec
pop
push
rcll
jae
mov
aam
fcoml
bound
ljmp
pusha
xchg
sbb
and
mov
xchg
jge
jno
xor
loop
xchg
lret
xchg
add
mov
fdivl
xor
or
ficoml
pop
pusha
mov
xchg
mov
test
sub
nop
lahf
add
fdiv
outsb
xchg
add
mov
int
imul
mov
shrl
outsl
jo
es
inc
mov
and
push
mov
jae
test
outsb
rcrl
pop
xchg
and
pop
lea
adcl
inc
mov
shlb
addr16
pop
jns
int3
in
movsl
popw
and
rclb
pop
data16
lahf
cmp
clc
and
leave
pop
push
test
sbb
inc
negl
sub
popl
je
jne
test
nop
fs
inc
and
add
adc
cld
lcall
push
hlt
aad
pop
sub
add
not
and
push
pushf
xor
xchg
push
adc
mov
mov
hlt
jbe
ret
mov
pop
cmp
jp
mov
fcmovnbe
push
jno
dec
leave
xchg
nop
push
fsts
and
int3
test
mov
mov
fiadds
mov
adc
in
movsb
or
je
fwait
dec
and
das
arpl
xor
movsb
and
enter
fnsave
cmp
adc
out
es
cwtl
adc
pop
dec
fistps
ja
fsubrl
rorl
std
sub
mov
pop
outsb
and
or
mov
ja
add
ja
fstpt
arpl
popa
jg
in
test
and
mov
in
and
mov
push
mov
cwtl
adcl
stos
push
jne
shll
bnd
ljmp
mov
xchg
fsubr
mov
mov
lods
int3
jb
movsb
outsb
cwtl
out
stos
push
int
cmpsl
xor
pop
dec
popa
int
or
xlat
push
cwtl
cmc
adc
and
push
arpl
mov
mov
iret
and
sub
pop
pop
sub
icebp
in
jnp
jns
push
and
fildll
pop
mov
push
fistpl
sbb
movsb
lret
sub
cmp
cmp
sub
aad
cmp
inc
push
sub
and
pop
ja
jle
sbb
and
push
cmpl
mov
mov
pop
cmp
mov
and
dec
ds
jle
pop
popf
or
sub
mov
sub
cld
dec
push
dec
jecxz
and
xor
mov
and
mov
cwtl
mov
mov
incb
cltd
pop
and
lods
add
cmpsb
addr16
add
or
inc
fistps
mov
std
mov
pushf
mov
cmp
or
insb
cwtl
stos
mov
cli
pop
xor
aam
jl
bound
push
jne
xorl
ret
cmp
aaa
mov
insb
adc
push
jae
stos
fimull
popa
sti
movsb
or
adc
push
dec
mov
adc
fs
pusha
fs
xchg
sbbb
xor
mov
fidivrl
mov
cmc
movsb
in
inc
fidivl
nop
adcb
je
and
mov
jl
and
stc
mov
fidivrl
xchg
add
jp
pusha
xchg
xchg
jae
ss
inc
iret
subl
nop
sahf
popl
pop
adc
push
xchg
and
stos
mov
fdivrp
lods
ficompl
sub
out
inc
fcoml
in
jbe
jb
pop
loop
sub
or
rcll
xchg
fldl
call
sub
push
and
push
jecxz
repnz
mov
lds
sahf
mov
mov
mov
aas
movsb
and
loopne
ficompl
aas
cmp
scas
ja
negl
cmp
insb
xor
inc
outsl
xchg
dec
ja
and
cmp
dec
orl
cli
mov
dec
mov
jae
sahf
sti
and
sahf
xchg
xchg
movsl
pop
fs
arpl
movsl
push
and
icebp
insb
pop
mov
xor
mov
cwtl
daa
imulb
sarb
shlb
movsl
clc
lods
insb
loopne
cmc
pop
ret
push
test
mov
xchg
pop
frstor
scas
adc
scas
jle
xchg
xchg
xchg
rorl
in
dec
rclb
lret
int
pop
lret
xchg
add
sbb
scas
adc
rorb
shlb
and
cli
clc
inc
and
add
dec
or
sub
data16
inc
cltd
and
sarl
mov
jno
daa
notb
inc
adc
push
add
nop
movl
cs
jmp
sbb
cmp
stos
push
movl
mov
lods
je
xchg
inc
adc
sar
mov
out
dec
inc
fnstcw
jp
mov
jl
sbb
pop
hlt
cwtl
jbe
push
xchg
sbb
mov
pop
in
pop
and
pop
inc
inc
faddl
push
icebp
mov
adc
cltd
ljmp
hlt
shlb
mov
shr
or
mov
xchg
repz
stc
push
push
aad
adc
add
mov
pop
or
adc
mov
lock
xor
dec
fldenv
das
mov
jb
mov
loopne
fwait
adcl
aaa
adc
ret
hlt
pop
or
icebp
inc
lcall
mov
or
and
xor
or
jg
xor
mov
popf
cmpsl
cmp
sbb
sub
out
popf
pop
inc
jl
mov
fcmovnb
fs
fcom
mov
jae
xchg
cwtl
sbb
jnp
sar
sbb
repz
jp
push
pop
push
scas
or
push
inc
xor
mov
adc
cmp
push
and
pop
out
mov
bound
dec
rcll
mov
adc
xor
adc
pop
call
pop
xchg
push
outsl
mov
out
push
sbbl
pop
sub
aad
mov
lret
out
push
imul
imul
mov
fwait
push
ljmp
lret
cmpsb
sub
repnz
inc
outsb
cmp
dec
mov
test
add
pushf
pop
into
int
pop
mov
sbb
andl
pop
adc
lret
nop
ret
insb
fldz
or
aad
push
inc
sahf
ficoms
dec
mov
pop
cmp
sbb
dec
or
idivl
sbb
push
xor
popa
arpl
xor
mov
out
lds
fwait
arpl
addr16
dec
insb
mov
mov
adc
add
mov
loop
mov
dec
and
sub
adc
fld
add
xor
pop
pop
or
add
push
sbb
cwtl
cmpsl
pop
mov
ffree
pop
pushf
add
and
jbe
pop
aas
mov
movsb
inc
push
cmp
cmc
or
or
es
sub
lret
in
sbb
popa
pop
mov
cmp
fildl
fldenv
xchg
mov
iret
flds
jg
adc
pop
fisttpl
pop
imul
sar
pop
sbb
loop
and
fimull
sbb
nop
pop
adc
adc
pop
push
subl
fwait
add
mov
dec
pop
cmpsl
jae
xchg
xor
call
sbb
xor
in
and
cld
leave
dec
repnz
in
lds
lahf
dec
loop
fldcw
leave
stos
sahf
jne
mov
loopne,pt
mov
stos
dec
ficomps
movups
ss
or
pop
cs
adc
out
jno
es
arpl
mov
xchg
mov
ficomps
lret
aas
nop
push
pusha
adc
mov
popa
loope
aam
in
pop
in
scas
mov
cmpsb
sahf
sahf
pop
incl
add
mov
cwtl
shrl
ret
sahf
pusha
sbb
inc
pop
call
add
sar
jl
pop
xor
push
push
jge
and
xlat
in
icebp
push
popf
xchg
aam
jae
out
filds
shlb
adc
and
push
jg
lcall
fs
xchg
pushf
je
push
mov
or
outsb
std
sahf
xchg
lahf
fidivl
rorb
iret
stc
push
xor
sub
lcall
xchg
jne
lcall
insl
push
out
jns
mov
into
je
cmpsb
fdivrs
je
mov
sbb
mov
lods
or
sbb
xchg
adc
shll
movsb
push
leave
mov
and
outsb
fs
rcll
frstor
lods
dec
and
pusha
xchg
popa
adc
xchg
fcompl
int
sti
aad
xor
nop
xlat
push
mov
imul
adc
lahf
mov
sbbb
or
mull
pop
push
jbe
movsb
adc
test
mov
aam
in
movsb
xlat
lahf
mov
lret
pushf
cmc
dec
ss
loop
ror
popf
rcrb
loopne
popf
dec
fs
cmpsb
sub
mov
sbb
fdivrl
andb
push
aam
jp
jecxz
mov
xchg
sbb
jns
cmp
cmpsl
sbb
ficoms
xchg
mov
push
sbb
sbb
mov
or
push
adcl
mov
fstpt
roll
xchg
imul
loop
shr
jb
pop
adc
xor
mov
cltd
divb
js
add
and
mov
int
nop
insl
mov
lahf
js
mov
movsb
xchg
add
jae
popf
sub
cli
xchg
sahf
movsb
inc
jle
mov
xorl
xchg
dec
out
cwtl
dec
or
shll
ds
pop
jne
sbb
adc
mov
movsb
push
sub
clc
sbb
fs
lds
sbb
mov
dec
lock
inc
push
mov
mov
xchg
js
lods
mov
sub
and
add
dec
std
ficomps
mov
cmp
fwait
cwtl
lret
mov
mov
fwait
and
aas
arpl
adc
add
push
adc
inc
xchg
or
lea
push
add
xor
in
imul
jae
in
sub
sahf
push
movsb
rorl
daa
loope
mov
inc
addl
ds
mov
inc
sbb
aam
and
xor
les
hlt
mov
jae
adc
mov
lods
out
xchg
mov
xchg
mov
cmp
adc
popf
test
sub
repnz
sbb
push
xchg
jno
sti
pop
adc
sbb
mov
lahf
fs
rcrl
push
cltd
cmp
mov
pop
shlb
mov
in
xor
adc
fdivrl
inc
pop
sbb
sub
jno
aam
xchg
je
outsl
inc
lcall
aam
cltd
ja
or
add
adc
cmp
xor
inc
inc
and
xor
add
rorb
insl
mov
pop
pop
je
dec
ljmp
jae
das
jle
push
xchg
adc
jl
call
add
jno
mov
dec
sbb
xchg
add
fbstp
test
jae
das
cmp
fbld
push
sti
mov
or
cmpl
mov
push
pop
out
adc
test
dec
add
cmp
mov
sub
sbb
fwait
inc
cmpsl
adc
fdivr
mov
movsb
jmp
mov
mov
push
mov
arpl
push
pop
ret
sahf
or
inc
insb
js
cmp
mov
mov
sbb
add
in
outsb
adcl
adc
pushf
xchg
aam
fwait
or
sub
mov
pop
adc
popf
or
xor
les
mov
cmp
mov
sub
jle
adc
cli
xchg
lock
ret
mov
xchg
ret
das
jns
pop
fucom
cmp
clc
je
xchg
js
mov
sahf
pop
arpl
aas
popl
and
or
popf
push
sahf
dec
jecxz
iret
xor
fs
arpl
and
sahf
test
cld
icebp
aam
pop
sahf
inc
xchg
mov
push
out
xchg
jl
sahf
mov
clc
sbb
movsb
mov
inc
cmpl
pop
xor
fisubrl
idiv
mov
pushf
fwait
mov
shll
add
mov
push
xchg
add
jge
jae
mov
pop
jge
inc
lcall
lcall
shlb
inc
add
inc
mov
sahf
mov
pop
jae
imul
scas
and
pop
push
pop
add
and
std
pop
add
in
sub
pop
sub
sar
mov
sahf
pop
imul
pop
test
cmpsb
dec
aas
lods
xor
xchg
arpl
dec
and
fs
loopne
dec
popf
fisttps
xlat
out
aas
test
xchg
andl
popa
xchg
mov
les
pop
mov
sbb
add
in
mov
dec
and
jp
test
mulb
push
inc
fwait
xchg
mov
cwtl
pop
fs
mov
and
cmp
stos
inc
or
fcomip
jbe
mov
add
arpl
je
dec
movsb
xchg
outsl
mov
cmp
push
push
push
ljmp
pop
outsl
cltd
pushf
sahf
stc
cli
mov
mov
push
push
inc
pop
and
lock
bound
jmp
jge
outsb
fs
jne
loop
fmul
pusha
out
mov
sub
int
fs
push
fiadds
fs
sahf
ficomps
das
jne
jo
pop
test
dec
add
and
add
pop
mov
add
sbb
popf
shrl
hlt
lock
mov
xchg
std
imul
sub
aam
call
out
and
pop
popf
pop
ss
sbb
rcr
es
int
cmpsb
mov
push
cld
pop
pop
pop
das
loop
lret
in
scas
icebp
sbbl
pop
pop
pop
mov
mov
loope
test
or
add
loopne
mov
sbb
jecxz
push
cltd
jmp
mov
cltd
mov
test
hlt
adc
nop
dec
mov
ljmp
inc
in
arpl
adc
inc
and
xlat
fs
inc
push
mov
jp
xor
lcall
gs
sbb
movl
push
js
cmc
rol
orb
jecxz
jl
pop
imul
sbbb
mov
out
mov
jecxz
xchg
js
cmc
loope
xchg
sbb
xchg
addl
add
sbb
fisttpll
push
and
sahf
or
es
jp
mov
push
imul
mov
pop
pop
and
test
mov
pop
test
push
sbb
dec
rcrl
stos
lcall
push
adc
rcrl
cmpsb
and
shll
mov
jnp
popf
and
xchg
aam
test
xchg
pusha
mov
push
movsb
pop
mov
and
sub
sbb
mov
adc
sub
mov
lret
mov
inc
int3
cld
jecxz
fidivs
test
mov
and
movsb
sbb
mov
pop
or
fisttps
xlat
mov
sub
jecxz
mov
mov
or
xchg
lods
pop
ficoms
adc
mov
sub
nopl
in
das
adc
or
fsubl
push
out
xchg
lahf
cmp
and
popf
jns
dec
mov
rorl
jb
repnz
dec
mov
pop
xor
dec
std
leave
push
dec
and
and
mov
jmp
xchg
jecxz
subl
sti
popf
mov
sti
in
fs
adc
mov
sti
js
call
cmp
and
aam
lea
and
jae
sub
cmp
pop
inc
rcr
stos
dec
or
mov
lods
adc
cmp
lods
sahf
imul
aas
xor
bound
inc
sarl
jns
pop
jmp
mov
dec
jbe
mov
push
fisttps
pop
lds
ret
inc
fsubrl
movsl
and
ret
stos
shll
fcmovb
sub
movsb
scas
add
and
pop
hlt
movsb
and
outsl
mov
dec
mov
dec
popf
pop
outsl
xchg
lahf
shll
pop
pop
lods
arpl
pop
mov
imul
push
lods
mov
test
lea
xchg
xchg
addb
mov
pop
xchg
or
fs
mov
and
les
jo
pushf
addr16
popf
pushf
mov
mov
xchg
into
out
jg
inc
mov
hlt
adc
cmp
insb
add
dec
lds
mov
and
test
sub
adc
movsb
in
and
ja
scas
adc
mov
arpl
push
out
mov
add
sbb
arpl
dec
enter
mov
into
adc
dec
pushf
in
jno
popf
stos
pop
out
mov
sbb
int
add
xor
dec
insb
adc
shll
pop
mov
aaa
aad
cmp
mov
push
jae
cmc
cmp
mov
pop
mov
fmuls
sbb
call
adcl
mov
hlt
and
lds
jecxz
dec
push
fwait
movsb
mov
movsl
sub
jle
pusha
adc
inc
in
and
mov
push
lds
pop
pop
cltd
lds
bound
dec
mov
in
lds
sbb
xor
and
popa
push
roll
xor
imul
pop
addb
push
lock
call
and
sbb
jae
popa
dec
jae
orl
in
sub
push
mov
pop
aam
aad
mov
dec
cmpsb
adc
in
icebp
outsl
push
dec
xchg
hlt
outsb
in
mov
and
hlt
outsb
in
rclb
xchg
imul
out
dec
xchg
outsl
outsb
in
push
rcrb
lock
cmp
dec
fs
out
enter
mov
sbb
loopne
xorl
jne
sarl
adc
jle
shll
mov
repnz
pop
cmpsb
xchg
adc
dec
stc
mov
cmpl
pop
lret
xor
mov
in
jne
add
std
jns
loop
and
adcl
jp
inc
in
in
into
ja
pop
and
xchg
fdiv
sbb
mov
cli
jmp
push
cmp
lahf
nop
repnz
xchg
jo
hlt
test
lods
push
pop
inc
xchg
divb
cltd
fdivl
fildll
das
fdivrs
sbb
mov
stos
cmp
mov
ljmp
jno
ret
pop
cmp
mov
movsb
pop
dec
xchg
mov
mov
pushf
sbb
arpl
inc
xchg
sbb
lods
arpl
enter
xor
jmp
enter
arpl
or
lcall
push
jbe
and
push
shrl
pop
push
sbb
fst
add
pop
cmp
popa
push
out
adc
lock
mov
or
mov
nop
or
cld
adc
or
aas
xchg
popf
jno
notb
cli
jecxz
push
sub
push
add
mov
popf
jnp
push
subb
inc
negb
fildl
pop
imul
add
mov
or
adc
adc
or
fidivrl
dec
jg
or
in
xchg
mov
xchg
jne
movsb
and
xchg
lock
stos
jg
mov
outsb
in
test
xchg
push
and
pop
jp
push
iret
or
popf
sub
ds
xchg
xor
in
outsl
gs
xor
xchg
lahf
push
sbb
fdiv
mov
mov
and
movsl
sub
and
data16
or
arpl
dec
mov
sahf
nop
mov
sbb
movsb
enter
jl
xchg
mov
dec
and
lret
lods
pop
ss
pop
fildl
sbb
fwait
scas
movsl
das
lcall
inc
lret
pop
fwait
xor
pop
inc
fwait
and
push
mov
or
xchg
movsb
aam
pop
pop
xchg
adc
cli
and
movsl
out
add
and
push
or
orl
loop
xor
push
cmc
xchg
loopne
sbb
lahf
movsl
lcall
in
aad
subl
push
fadds
mov
pushf
loope
mov
fxch
cwtl
pop
or
xchg
movsb
xchg
sbb
fs
sbb
xchg
imul
xchg
fisttpl
cmp
or
cmpsb
sbb
movsl
sbb
dec
iret
mov
and
shll
test
dec
mov
insb
push
mov
pushf
dec
mov
jl
stos
mov
iret
dec
popa
pushf
xchg
fwait
out
popf
xchg
sbb
xchg
mov
pop
loope
push
jo
insb
push
addb
fs
je
fs
xchg
xchg
inc
sahf
xor
push
sbb
lret
pop
cmovbe
loopne
stos
fwait
pop
xlat
inc
fs
mov
inc
nop
out
pop
out
sahf
nop
aam
fsts
pop
ljmp
inc
out
or
inc
mov
pop
and
pop
cmp
mov
sbb
js
jmp
cld
fbld
pop
lock
movsl
repz
xchg
inc
fs
mov
filds
cld
sbb
mov
das
movsb
pusha
sbb
and
nop
and
xchg
jnp
pop
sub
push
xor
and
cwtl
xchg
mov
or
sbb
sbb
or
sbb
pop
lea
xchg
loope
pop
add
mov
and
dec
sbb
cmpb
loop
stos
push
dec
cmp
add
outsl
int
sti
and
fxch
jae
mov
sti
adc
enter
or
popf
adcl
or
or
mov
jbe
dec
adc
arpl
sub
xchg
lds
fisubl
pop
jae
push
push
mov
mov
jecxz
rolb
ss
xchg
and
xchg
movsb
es
js
fdivrp
adc
xchg
pop
cld
xchg
fucomip
jo
adc
into
test
ja
mov
test
call
and
nop
sub
mov
fcoml
sbb
in
ds
lock
pop
ficoms
sbb
inc
push
add
mov
dec
cmp
lock
loop
movsl
jbe
mov
pop
push
fucomp
int3
push
dec
cmp
mov
adc
jnp
cmp
dec
and
and
and
in
ret
iret
xchg
xchg
cmpsb
movsb
popf
pushf
mov
adc
ljmp
mov
jb
lds
stc
xchg
xchg
push
push
inc
outsb
inc
popf
leave
icebp
test
cmp
xchg
pop
movsb
repnz
pop
ficoml
cwtl
dec
push
into
xchg
loopne
jmp
mov
xchg
xchg
lods
pushf
mov
pop
push
enter
jecxz
mov
stos
jno
je
lods
pop
icebp
lahf
sahf
fdivl
cld
cld
xchg
xor
mov
mov
cltd
mov
testb
sbb
cmp
push
cmpsl
fwait
lret
jns
inc
aam
xor
mov
and
push
and
sahf
fdivrl
out
mov
adc
xchg
pop
nop
and
test
cli
jmp
inc
xchg
vpsubw
jp
jnp
aam
out
or
aad
jne
int
mov
ret
sbb
aas
testl
push
mov
add
or
push
sbb
pop
cmp
mov
lcall
inc
xchg
scas
call
inc
pushf
dec
insb
loope
mov
pop
in
int3
lcall
pushf
lods
push
sub
popf
rcll
pop
cmp
inc
aam
xchg
inc
sub
psubsb
subl
inc
sti
pop
mov
out
and
sbb
xor
mov
and
cmp
add
mov
adcl
loopne
outsl
in
repnz
cmpsl
loopne
mov
bnd
mov
fcmovnb
pop
mov
and
insb
repz
mov
sbb
loop
cli
mov
or
sbb
sub
int
test
fwait
jl
pushf
dec
xchg
inc
or
cmp
sub
mov
jl
idivl
orb
or
leave
xchg
sub
mov
ja
xor
xor
je
xor
jg
jb
fwait
inc
shlb
pop
pop
and
xchg
cmp
xchg
in
sub
inc
adc
lock
test
lods
jbe
dec
push
incb
jnp
add
push
dec
pushf
js
fwait
ret
lods
cwtl
fs
jnp
stos
addl
aam
pop
movsl
dec
adc
lret
in
lods
jns
shll
cld
imul
je
fwait
inc
cmpb
push
cld
adc
add
test
leave
enter
xchg
and
dec
push
fwait
cmp
push
cmpsl
add
mov
imul
movsl
fcmovnb
cmpsb
aas
cmc
out
mov
lahf
dec
sbbl
xchg
pop
xchg
hlt
dec
out
cmp
fldt
mov
inc
xchg
inc
xchg
je
rcrb
xor
insb
inc
outsb
cmp
push
arpl
xchg
mov
sbb
lock
pop
arpl
outsb
movsl
mov
pop
and
movsb
stos
rcrb
lahf
xor
pop
popa
pop
enter
push
fildll
push
mov
cwtl
mov
lahf
inc
xor
lret
pushf
and
fisubrl
imul
sub
inc
out
adc
scas
into
inc
arpl
andl
addr16
and
sahf
push
push
pusha
xchg
sbb
pop
and
pop
pop
jmp
mov
repnz
insb
fidivs
and
addr16
lock
sbb
inc
in
ss
test
mov
fildl
dec
fcomps
lds
call
cmpsl
sbb
loopne
out
les
js
mov
cltd
orl
hlt
cltd
pop
mov
push
leave
test
fimuls
dec
lea
adc
adc
in
test
flds
arpl
addr16
cmp
je
sbb
and
test
and
jo
pop
mov
xchg
movsl
fs
xor
pop
push
mov
inc
nop
and
mov
mov
lahf
or
mov
orb
jg
xchg
sbb
jp
mull
cwtl
lret
xor
and
inc
repz
mov
add
mov
adc
fdivl
xchg
jp
push
mov
andb
mov
popa
popf
xchg
adc
fcoml
adc
mov
es
cld
mov
cltd
xchg
sub
fwait
adc
fdivl
xchg
jp
mov
andb
mov
popa
popf
xchg
adc
fcoml
shlb
mov
orb
ret
sub
out
je
fwait
or
jp
push
sbb
je
andb
popf
mov
fmull
mov
lcall
xchg
mov
jge
int
sub
inc
in
sbb
fwait
push
xchg
jbe
addl
in
sbb
addb
roll
lret
popa
mov
pushf
xchg
mov
addl
in
sbb
mov
out
mov
ror
inc
in
sbb
fwait
int3
xchg
jbe
addl
in
sbb
orb
xchg
popa
mov
pushf
xchg
mov
addl
in
sbb
mov
daa
cwtl
mov
iret
leave
inc
in
sbb
fwait
sete
addl
in
sbb
adcb
roll
mov
pop
in
pushf
xchg
mov
addl
in
sbb
mov
addr16
mov
xchg
leave
inc
in
sbb
fwait
adc
jbe
addl
in
sbb
or
roll
inc
popa
mov
pushf
xchg
mov
addl
in
sbb
mov
cmpsl
cwtl
mov
dec
leave
inc
in
sbb
fwait
mov
pop
adc
in
sbb
adcb
xchg
popa
mov
pushf
xchg
mov
cmpl
movsl
pop
in
testl
adc
sbb
lds
sub
push
fwait
sar
push
add
pop
frndint
pop
add
popa
fwait
loope
and
test
xor
mov
popf
mov
inc
pushf
stos
pushf
das
pushf
scas
pushf
xor
pushf
cmp
pushf
inc
pushf
ret
pushf
inc
pushf
pushf
dec
pushf
lret
pushf
dec
pushf
iret
pushf
push
pushf
rcrl
pushf
fistpl
pushf
jecxz
xchg
dec
push
dec
aad
pop
dec
dec
fisttpll
dec
loope
and
pop
test
pop
xor
cltd
xor
mov
jg
jg
jg
jg
jg
jg
lea
push
outsb
jle
sbb
jle
js
mov
daa
sahf
daa
mov
push
outsb
pop
jb
jbe
jp
daa
jns
jns
jns
jns
jns
jns
insl
sbb
out
push
sahf
cmpsl
ja
xchg
fstpl
lods
jno
outsb
sbb
adc
lahf
leave
dec
xchg
repnz
stos
fdivrs
mov
ljmp
shlb
sub
xchg
cmc
add
test
inc
pushf
arpl
jecxz
dec
mov
mov
mov
in
subw
mov
fwait
jmp
jno
cmpsb
push
jmp
and
and
adc
mov
mov
sarl
mov
andl
inc
inc
in
inc
nop
pop
and
subl
ret
mov
inc
pop
pusha
insb
and
pop
addr16
lret
imul
dec
xor
inc
fwait
mov
mov
clc
es
iret
add
pop
or
mov
mov
or
popa
inc
cltd
sub
mov
or
cmp
sbb
push
sbb
xchg
and
and
sbb
dec
repz
inc
ja
loope
mov
arpl
sbbb
mov
push
mov
movsb
into
ljmp
add
test
movsl
push
and
pop
and
adc
xchg
add
sub
hlt
and
xor
dec
jo
mov
outsb
scas
pop
fwait
jbe
jp
jle
ss
lcall
imul
inc
xchg
insb
int
daa
fbstp
push
call
insb
int
daa
fbstp
push
repz
inc
ret
sbb
fbstp
push
call
insb
int
daa
fbstp
xchg
cmpsb
ret
sbb
fbstp
push
call
insb
int
daa
fbstp
push
call
sub
xor
call
insb
int
daa
fbstp
push
call
insb
xchg
daa
notb
inc
xchg
insb
int
daa
fbstp
push
call
insb
int
daa
and
inc
xchg
insb
int
daa
fbstp
push
call
insb
int
daa
fbstp
xchg
cmpsl
ret
sbb
fbstp
push
call
insb
int
daa
fbstp
arpl
insl
in
and
or
mov
into
and
mov
aas
insb
mov
xorl
js
dec
fdivrl
addb
test
sub
mov
mov
jb
rcll
popa
pushf
pop
in
sub
mov
mov
jo
fsubs
in
sbb
js
test
jl
xchg
and
popa
test
pushf
mov
addl
in
sbb
cwtl
or
pushf
je
mov
jbe
push
shrl
lcall
xchg
and
popa
jl
in
pushf
andb
orl
or
and
popa
pushf
pop
in
pushf
mov
in
or
push
je
jo
fst
je
xchg
and
popa
jl
in
pushf
andb
orl
mov
and
popa
pushf
pop
in
pushf
mov
in
or
push
in
fcoms
sbbl
dec
fdivrl
addb
test
sub
mov
xchg
nop
mov
je
inc
aam
pushf
add
and
test
mov
mov
popa
je
in
pop
js
mov
xorb
test
addl
in
sbb
nop
push
test
xchg
xchg
and
popa
pushf
pop
in
pushf
mov
in
or
push
insb
xorb
jge
fwait
lret
je
js
xlat
cmpl
adcb
test
mov
mov
nop
movsb
xchg
sbb
je
cwtl
jb
rcrl
loopne
xlat
mov
jmp
xchg
mov
sbb
je
js
pop
cmpl
adcb
test
mov
lret
out
push
cmp
push
aad
pop
mov
push
popa
mov
movsb
sub
movsb
xor
movsb
cmp
movsb
inc
mov
in
js
hlt
test
test
test
test
movl
test
test
xlat
test
fildl
inc
jecxz
daa
cmpsl
push
sub
das
scas
sbb
loope
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
aad
out
out
mov
ret
mov
cwtl
stos
pushf
stos
mov
cmpsl
loop
loop
loop
loop
loop
loop
loop
loop
loop
jecxz
xchg
stos
adc
js
push
adc
mov
mov
movsb
lea
mov
sbb
fisttpll
lret
pop
cmpsl
enter
lcall
jp
inc
xor
pop
movsb
test
adc
jge
cmpsl
sbb
ficomps
xchg
f2xm1
pushf
jmp
int3
dec
cli
push
inc
push
push
mov
jbe
pop
cmpsl
in
mov
cli
pop
adc
sub
dec
pop
pop
jae
sbb
mov
insl
mov
add
inc
sub
divb
and
mov
sub
cltd
cmpsl
in
roll
cli
aam
mov
mov
mov
cmp
stos
dec
jo
push
out
push
pushf
cltd
int
out
fwait
and
int
mov
add
xchg
xor
fistpll
imul
movsl
ja
into
cmpsl
pop
notl
mov
cs
je
inc
push
lcall
add
insb
adc
jecxz
pop
jl
loope
rcl
bound
out
int
sub
push
jge
xchg
fwait
out
sub
mov
xchg
adc
xchg
pop
imul
stos
cmpsb
loopne
js
aad
inc
jl
popf
jae
mov
cmp
mov
stc
test
stc
jbe
roll
adcb
or
mov
imul
ja
inc
filds
jo
out
cltd
and
fstpl
and
inc
mov
mov
nop
xchg
inc
cwtl
and
rcl
inc
xchg
jbe
call
insb
int
daa
fbstp
push
call
insb
int
push
lock
ret
sbb
fbstp
push
call
insb
int
daa
fbstp
cmpsb
mov
je
sbb
fbstp
push
call
insb
int
daa
fbstp
push
call
sub
jae
push
call
insb
int
daa
fbstp
push
call
daa
fists
inc
xchg
insb
int
daa
fbstp
push
call
insb
int
push
lock
ret
sbb
fbstp
push
call
insb
int
daa
fbstp
cmpsl
mov
je
sbb
fbstp
push
call
xchg
push
out
loopne
mov
out
sbb
mov
push
xor
sbb
notb
push
lret
and
or
aad
and
mov
stos
ret
inc
loop
loopne
outsl
hlt
lds
mov
in
lods
cwtl
movsb
std
cmpsb
mov
mov
add
jb
push
add
mov
xchg
dec
adc
test
mov
je
nop
lds
repnz
das
adc
or
adc
scas
push
inc
dec
xchg
in
in
je
mov
add
clc
inc
pop
out
je
jg
xchg
sahf
outsl
sahf
and
fistps
xchg
mov
hlt
icebp
repnz
and
imul
and
sub
sbb
jnp
in
push
push
fsubs
outsl
cmpsl
xchg
fdivp
in
fisttps
inc
sahf
sahf
popa
ret
and
sbb
pop
pop
dec
fwait
cltd
pop
push
fwait
push
adcl
inc
test
push
pushf
mov
pop
ret
fistl
lret
ds
mov
ficomps
orl
in
insl
mov
imul
pop
call
push
jno
sbb
imul
lds
dec
insl
movsl
mov
loopne
adc
xchg
xchg
and
sub
leave
ja
inc
xchg
addb
mov
or
inc
xor
and
les
outsb
mov
outsb
data16
jae
push
cwtl
sbb
mov
in
fsubl
leave
testb
bound
add
dec
mov
movhps
into
pop
sub
and
and
pushf
loop
add
mov
jo
daa
xor
out
jno
int
push
test
xor
ljmp
lock
out
into
pop
push
xlat
adc
mov
mov
inc
or
fs
popa
xor
pusha
or
push
jl
test
inc
ljmp
subb
int
int
iret
outsl
and
mov
add
inc
mov
jno
cmpsb
loop
inc
mov
popa
mov
fimull
repz
rcr
and
inc
adc
jecxz
out
inc
lcall
andb
pop
and
xchg
ficompl
and
clc
in
pop
mov
in
cld
ljmp
stos
xchg
mov
fwait
pop
sbb
insb
dec
scas
lahf
dec
into
je
push
into
data16
xor
xor
sbb
jecxz
ficomps
ficomps
pop
pop
mov
mull
stos
cmp
mov
loope
inc
mov
push
sbb
jl
rcrl
lcall
push
adc
and
or
mov
add
fmulp
cmpsl
bound
lcall
mov
xchg
adc
fnstenv
dec
js
adc
push
ja
push
js
pushf
or
push
int
insb
hlt
ss
pop
mov
xchg
push
sti
push
push
pushl
pop
andl
call
inc
mov
add
push
pop
mov
fwait
andl
push
aam
cmpsl
cmc
pop
xor
dec
xchg
and
cmp
call
cld
scas
das
pop
mov
loop
cmpl
fimuls
andl
pushf
orb
repnz
and
pop
test
loopne
or
in
mov
pop
mov
cmc
mov
push
mov
fbld
imul
or
push
inc
imul
xchg
addb
lahf
out
cwtl
insl
int
jae
jl
stos
pop
mov
and
dec
and
adc
adc
in
fsubl
test
lcall
adc
aam
adcl
lds
inc
mov
sub
mov
insl
sub
fs
jae
xchg
imul
aam
add
mov
inc
xchg
sub
call
int3
pop
test
fbld
and
sub
and
and
pop
and
pusha
and
jae
mov
daa
ss
jno
and
andl
push
test
push
sbb
jle
inc
popa
std
loopne
fsubrs
mov
adc
clc
mov
sbb
fld
out
push
faddl
mov
mov
pop
jbe
mov
sub
adc
cld
andb
loopne
xchg
int3
fiaddl
adc
mov
cmp
out
cmpsb
and
sbb
xchg
push
std
push
sbb
pop
movsb
clc
mov
pusha
lock
sub
loopne
test
addr16
xchg
loop
sub
mov
cmc
faddl
push
fcmovnbe
aad
unpcklps
in
dec
std
sbb
mov
ret
mov
or
jp
in
mov
movsb
sub
xchg
sbb
adc
arpl
addr16
cmp
xchg
mov
add
pop
pop
outsb
ficompl
xchg
sbb
fs
sbb
aam
pop
sub
pop
inc
and
and
insb
mov
xor
subl
sahf
cmpsl
into
inc
je
and
xchg
xchg
cwtl
repnz
xchg
outsl
shll
cmp
or
and
xchg
jg
pushf
dec
and
arpl
outsb
lret
pop
ds
mov
jno
mov
cld
pop
fsubl
mov
cmp
jmp
cvtdq2ps
jecxz
mov
add
jb
sbb
imul
adc
mov
add
sbb
sbb
mov
xchg
fs
and
inc
cmpl
add
and
jl
popa
mov
arpl
repnz
mov
leave
hlt
and
mov
dec
pop
jmp
inc
adc
rcrb
mov
fildl
clc
cmp
adc
and
test
clc
arpl
dec
icebp
mov
pop
cwtl
and
and
pusha
andl
pop
roll
inc
adc
pop
popa
dec
fidivs
nop
adc
pop
xor
call
and
lods
jmp
xchg
test
aaa
cwtl
mov
loop
jnp
repnz
mov
mov
scas
or
pop
mov
in
xor
xchg
sti
pop
xchg
mov
hlt
mov
xlat
sbb
pop
and
mov
roll
inc
or
jnp
dec
mov
mov
pop
call
mov
popf
mov
addr16
bnd
aam
mov
xchg
jnp
jno
int3
call
popa
and
pop
repnz
mov
jp
xchg
cmovns
xchg
sbbb
jmp
fs
bound
mov
rcr
and
movsl
cmpsl
sbb
repz
sbb
leave
mov
mov
fwait
mov
add
mov
add
and
and
test
jmp
ret
pop
loope
mov
dec
xchg
mov
pop
push
mov
mov
testl
bound
xlat
pop
jbe
out
lahf
sahf
mov
cmpsl
push
int3
call
lock
jp
movsb
movsb
mov
cmp
fwait
lock
in
cltd
mov
push
imul
sahf
or
movsl
clc
pop
popf
xchg
adc
xchg
sub
mov
or
sub
sub
jae
cmp
stos
adc
lock
stos
in
mov
xchg
dec
fwait
pop
mov
fwait
pop
fsts
adc
cltd
fstps
mov
test
ret
pop
andl
pop
loope
test
rcrl
pop
jl
call
pushf
sahf
test
jb
mov
arpl
filds
lds
sbb
and
in
pushf
jae
sub
push
push
inc
in
andl
mov
dec
lret
aam
std
push
mov
ja
pop
in
test
xchg
mov
cmpsl
dec
fldenv
sbb
inc
or
mov
add
cmpb
cli
mov
or
cmpsl
sbb
sbb
mov
mov
rcrl
jl
lret
cwtl
out
pop
pop
data16
fs
or
sub
push
les
and
loop
and
add
mov
add
sbb
mov
xchg
dec
sarb
rolb
jno
mov
mov
sbb
outsb
fwait
pop
jae
rcl
or
popf
xor
xchg
adc
loop
or
les
mov
aam
or
mov
movsb
mov
dec
sub
in
dec
shlb
and
bound
shl
pop
mov
xor
inc
mov
fs
mov
and
loop
add
xchg
jne
mov
loop
aam
fidivrl
sub
imul
push
inc
xorb
scas
je
cs
repz
jae
sbb
dec
sbb
add
popa
loop
andb
mov
stos
xchg
lret
sbb
cli
push
sbb
ds
pop
lret
dec
xchg
jecxz
jg
loope
lret
dec
out
pop
pop
cmp
bound
xor
ljmp
gs
sbb
jbe
sti
sbb
lret
out
test
jno
lret
jo
dec
xchg
mov
lahf
cmc
jo
lock
loope
lock
insb
xchg
fcompl
adc
jmp
daa
lcall
add
push
in
pushf
pop
lds
xchg
mov
call
and
dec
mov
in
push
fcomp
xchg
aam
shld
xor
mov
cmpsb
fidivrl
sti
mov
cmpsb
mov
inc
pop
mov
into
leave
andl
adc
sahf
fimull
mov
inc
pop
fisttps
jno
loop
arpl
mov
xchg
xchg
insb
and
loop
cwtl
std
mov
popf
xchg
stos
and
mov
sbb
fs
and
fcmovnbe
add
push
in
jno
stos
clc
jecxz
hlt
and
jbe
sahf
inc
stos
adc
movsb
mov
bound
mov
mov
test
push
pop
adc
adc
dec
sti
sbb
sahf
stos
and
andl
jp
imul
mov
dec
scas
mov
mov
orl
stc
loopne
in
jnp
ja
and
jno
xchg
stos
negl
xchg
je
negl
sahf
shl
testb
push
hlt
cmp
lcall
popf
add
movsb
push
sbb
mov
dec
movsb
pusha
mov
cmpsl
ljmp
pop
pop
dec
sahf
rcll
test
mov
xchg
xchg
and
xlat
jl
jae
pop
cmpsb
popf
push
push
mov
cwtl
xchg
sbb
xchg
je
xchg
in
bound
cltd
test
mov
out
mov
insb
fs
jo
sub
mov
ljmp
mov
sahf
and
test
xchg
jmp
lds
pop
pop
mull
inc
pop
mov
fcmovnu
imul
mov
add
fwait
out
in
sarl
out
mov
pop
js
jge
xchg
out
sbb
jge
sbb
mov
and
mov
inc
push
icebp
rcrb
jecxz
push
ja
pop
mov
pop
fnstsw
in
inc
inc
and
loope
dec
pop
js
mov
sbb
jno
add
cli
pop
sbb
leave
nop
mov
mov
add
inc
loop
in
adc
or
test
sahf
jl
sbb
ljmp
icebp
adc
sbb
mov
xchg
mov
pop
shlb
jg
push
jno
fidivrl
and
bnd
shlb
stc
push
xchg
rcrb
mov
je
sahf
mov
lcall
hlt
das
test
outsb
ljmp
and
out
int
loop
fisttpl
sbb
jmp
sub
adc
sahf
cmpb
stc
loop
add
mov
add
mov
loop
ja
mov
pop
je
aaa
fcompl
leave
out
inc
fisttpl
leave
adc
jle
mov
adc
dec
out
mov
lds
stos
mov
or
jp
dec
stos
cs
sahf
xchg
test
nop
xor
xchg
xor
cmp
cmp
dec
jp
add
dec
or
mov
stos
mov
mov
push
fnstenv
clc
fsts
dec
pop
cli
andl
int3
add
inc
loopne
adc
out
pop
push
decl
adc
and
push
nop
movsl
and
jno
mov
js
push
mov
inc
jb
aam
push
xchg
notl
xchg
inc
adcl
ljmp
std
clc
rorb
stc
mov
fisubs
cld
push
lock
fcompl
xchg
mov
adc
push
shl
push
fsubs
test
int
cltd
into
arpl
dec
imul
push
pop
mov
inc
sbbl
movsl
xlat
fwait
out
and
jae
mov
mov
arpl
out
push
scas
sub
mov
cmpsl
add
es
enter
add
sub
adcl
fbld
dec
cmpsb
clc
popa
jg
loopne
push
adc
adc
and
mov
or
push
fildll
mov
mov
cmpsb
jb
mov
popf
sbb
lret
jno
pushf
repnz
xlat
inc
xchg
popa
and
cmp
aas
sbb
sub
int3
push
xlat
inc
dec
das
mov
mov
mov
popf
ds
and
adc
enter
je
xchg
shr
in
lds
and
xchg
pusha
cmp
sbb
fldt
fwait
insb
mov
xchg
or
cmp
into
mov
pop
jnp
pop
and
int
mov
shlb
adc
mov
mov
inc
loop
jmp
fistps
and
mov
sar
inc
sbb
fdivs
subb
xor
in
loopne
sub
ret
xor
loop
sbbb
lret
call
inc
nop
mov
jmp
mov
pop
xchg
lret
es
mov
and
in
jp
dec
movsb
push
andl
adc
adc
movsb
pushf
mov
nop
outsb
kmovb
mov
and
inc
mull
hlt
jge
mov
jmp
push
push
mov
or
sub
ja
adc
mov
and
adcl
je
fwait
cwtl
xchg
and
add
sbb
imul
in
cmp
and
and
adc
push
stos
or
mov
stos
mov
pop
rolb
push
inc
andl
and
lock
mov
cmp
scas
add
mov
adc
adc
inc
stos
xchg
cs
out
stos
mov
mov
shll
cld
loope
test
call
in
fsubl
xor
mov
push
push
je
and
mov
adc
jle
sahf
add
mov
insb
loop
mov
push
jb
aad
fwait
xchg
cld
xchg
push
aad
popf
mov
je
loop
in
fs
sub
or
cli
sbb
mov
movsl
pop
stos
add
or
fs
iret
orl
mov
mov
and
xor
sbb
mov
adc
in
and
pop
dec
xlat
xchg
movsb
shr
leave
sti
daa
jle
lds
add
and
popa
or
push
popf
push
in
loope
sub
fstpl
ljmp
sti
push
lds
pop
arpl
sbb
fildl
pusha
push
sbb
mov
sbb
sahf
xlat
dec
loope
fiadds
popa
cli
or
mov
pop
and
and
mov
pop
inc
xchg
and
nop
mov
lret
fcomps
fcomip
imul
ficoml
pop
mov
ja
orb
mov
and
add
cmp
addl
ficoms
pop
fsubp
sahf
mov
and
nop
jb,pt
dec
nop
lds
cwtl
add
in
sahf
scas
jecxz
mov
lahf
fs
pushl
in
push
in
lret
jae
lods
sahf
cmc
xchg
adc
hlt
push
pop
mov
mov
loopne
arpl
repz
sub
pushf
sahf
aaa
repnz
scas
dec
ds
fstpl
scas
call
xchg
enter
pop
fildl
pop
mov
aam
int3
call
dec
fcoms
enter
sbb
loop
aas
jg
inc
adc
xchg
mov
outsl
out
sahf
xchg
mov
mov
xchg
repnz
and
push
lods
xchg
pop
lcall
xchg
cmp
xchg
mov
test
dec
adc
sub
mov
pop
out
mov
out
insb
lahf
xor
push
mov
mov
lret
fwait
pop
shrb
push
and
ja
push
lret
pop
hlt
movsb
orl
test
add
push
xor
aas
push
loop
lcall
hlt
daa
add
es
xchg
rorb
push
add
call
repz
xchg
mov
mov
adc
fwait
test
cmp
push
jae
lods
sbb
es
ds
testl
movsb
jnp
sbb
scas
outsb
ret
aaa
add
cmp
dec
mov
adc
popa
and
dec
lahf
mov
movsl
repnz
les
and
xchg
sahf
sar
jne
cwtl
pop
or
repnz
adc
lods
jno
mov
add
add
push
xchg
add
shrb
jae
sbb
mov
xchg
xchg
mov
mov
jbe
aam
dec
pop
or
test
or
or
imul
sbb
les
xor
movsb
pop
fcomps
jnp
mov
or
icebp
outsb
push
mov
pop
popf
adc
in
repz
inc
adc
fdiv
pop
fstps
lret
cmp
lret
mov
popa
mov
jnp
dec
dec
push
jcxz
lret
stc
xchg
inc
jle
and
call
pop
cmp
repnz
and
and
clc
mov
outsb
in
movsb
data16
stos
push
imul
mov
sub
jo
movsb
ret
jge
jg
xchg
test
lods
dec
cmp
and
adc
inc
fildll
test
out
stos
adc
insb
push
popf
enter
icebp
lods
imul
add
popf
pop
pop
ret
and
sahf
insl
jae
and
frstor
and
sub
pop
mov
mov
pop
jg
jecxz
nop
scas
mov
test
push
outsb
inc
mov
jae
je
pop
loop
push
jae
mov
cmp
xchg
pop
xlat
jae
imul
repnz
ror
sub
outsl
inc
fwait
mov
mov
aam
cmp
push
jae
arpl
js
cmp
loope
jp
stos
mov
dec
or
push
pushf
insb
test
push
andl
and
mov
cmp
rcrw
xchg
mov
cld
ds
xchg
popa
addr16
cmpsl
in
popf
mov
fisubrs
mov
insb
pop
lock
jo
lcall
pop
add
fs
jge
xchg
mov
xor
pop
out
or
bound
orb
and
pop
pop
clc
xchg
xor
push
lods
pushf
and
lods
xchg
fdivrp
add
cmp
loope
enter
loope
inc
in
pop
fmulp
dec
sub
sbbl
test
ja
movsl
sbb
mov
jae
shl
xor
ficoml
inc
out
insl
xchg
push
xchg
shlb
jno
in
mov
mov
rcrb
out
ret
mov
mov
mov
fwait
mov
mov
xchg
sbb
xor
xchg
pop
dec
jo
cltd
imulb
mov
xchg
xorl
popf
xchg
fwait
dec
mov
or
and
mov
ret
xchg
jg
pop
xchg
sahf
adc
mov
cli
adc
call
test
pusha
je
push
adc
add
in
xor
and
xchg
lods
dec
add
and
loope
add
imul
sub
xlat
nop
andb
cmp
or
shl
mov
xchg
lock
push
mov
sbb
in
addr16
loopne
lret
mov
push
xchg
inc
and
addr16
cld
je
inc
sahf
cmp
dec
push
push
push
addr16
xor
adcb
aam
jl
and
insl
and
sbb
push
pop
loopne
mov
cld
push
push
xchg
outsb
xchg
and
test
mov
and
popa
and
cli
call
push
mov
and
pusha
mov
lods
fdivs
movsb
movsl
idivb
adc
leave
jbe
push
jge
cmp
xor
jecxz
fwait
xchg
jb
jle
jae
ja
orb
sbb
or
jge
mov
sub
movsb
jg
jle
jle
jg
subl
jecxz
insb
lea
adc
sub
xchg
jae
adc
in
mov
in
lock
mov
shrl
sub
or
cli
add
inc
addr16
imul
push
movsb
mov
add
adcl
shrb
in
ja
out
inc
jp
xchg
movsb
pslld
divb
les
xchg
xchg
xchg
xchg
sahf
lods
adcl
mov
mov
outsb
mov
and
mov
outsl
js
and
addb
adc
mov
jmp
ja
clc
adc
and
sbb
cltd
repnz
mov
movsb
cmp
test
out
repnz
das
inc
sbb
add
mov
sbb
add
hlt
hlt
and
adc
mov
adc
icebp
pop
out
and
roll
and
xchg
xor
into
cli
pop
cs
aam
add
xchg
push
xchg
mov
fwait
jae
lret
and
pop
lds
xchg
scas
test
jecxz
or
loope
arpl
in
push
cmpb
outsl
int
cli
fadd
push
fs
sahf
sub
fcmovnb
pop
pop
mov
int
std
pop
nop
sbb
pushf
push
add
test
sbb
or
mov
jno
cmp
mov
lea
or
scas
lea
xchg
imul
push
mov
or
sahf
adc
sbb
mov
pop
sbb
inc
pop
repz
xor
lcall
push
or
cmp
mov
push
iret
mov
sbb
push
or
cmp
je
lock
mov
cld
jbe,pt
push
arpl
jp
aam
push
jns
xchg
mov
mov
add
iret
mov
cmp
dec
and
arpl
bound
sahf
xchg
pop
scas
sub
shll
xor
cmp
lock
push
pop
shrb
push
sahf
mov
push
outsl
sbb
mov
movsb
clc
mov
icebp
push
fldenv
cmp
mov
popf
call
mov
fisubl
xlat
or
and
xchg
loopne
mov
pusha
iret
or
xchg
insb
xorb
cmp
imul
lock
push
lds
pop
mov
leave
iret
jno
xchg
push
mov
add
fisubrl
stos
sbb
mov
adc
mov
and
xchg
ljmp
jno
pop
cmc
adc
mov
es
sbb
adc
adc
imul
in
sbb
xchg
mov
xchg
sbb
jns
jb
test
sbb
mov
jle
imul
xchg
mov
inc
lret
arpl
and
bt
mov
out
push
outsb
adc
mov
cmpsb
js
repz
repnz
iret
fs
xchg
jmp
adc
mov
sbb
mov
dec
sub
inc
adc
push
dec
push
mov
cmp
clc
xchg
jg
ficomps
lds
insl
push
sti
push
fs
and
dec
adc
leave
out
lock
cmp
mov
or
aad
push
pop
movsb
adc
xchg
insl
xchg
lret
and
xchg
pop
or
mov
mov
lods
popf
adc
add
dec
in
or
cltd
mov
dec
mov
fwait
and
pusha
pop
out
cmp
adc
fxam
fisubrl
popf
pop
xchg
arpl
dec
cltd
dec
pop
push
mov
mov
jl
push
lea
jmp
jmp
fcomp
int
jb
loop
mov
fwait
inc
mov
outsl
lahf
push
pop
aaa
das
jne
mov
pop
adc
mov
ret
popa
cltd
mov
sbb
sbb
adc
push
testl
sbb
in
adc
cld
cwtl
xlat
insb
and
or
in
sub
and
pop
movsl
insb
jecxz
mov
xor
mov
fwait
sbb
les
mov
leave
jae
mov
xlat
andl
lahf
andl
fs
outsl
ja
out
adc
rcrb
push
ss
mov
and
scas
mov
iret
adc
cs
dec
adcl
into
jbe
mov
das
and
or
movsb
loope
adc
sub
mov
adc
andb
mov
loop
sarl
mov
inc
push
mov
mov
cmp
lahf
loop
daa
mov
pop
sahf
popa
ret
ljmp
mov
inc
add
pop
mov
ret
je
dec
or
xlat
popa
imul
imul
mov
rclb
cmp
daa
lods
sahf
rcrb
lahf
fs
in
jmp
lret
shr
cs
fistpl
or
fs
call
add
dec
aam
ja
shll
andl
jne
je
mov
sbb
lds
int3
sbb
push
and
pop
sti
add
lret
cld
push
aad
arpl
movsb
push
sbb
mov
adc
data16
inc
adc
xor
mov
push
loop
and
je
adc
or
and
ja
inc
xchg
xlat
leave
jae
push
and
mov
loope
popf
or
test
pop
sbb
scas
sub
fcoml
ficomps
push
shll
lcall
xchg
mov
sub
je
in
cmc
jl
frstor
adc
aam
cmp
sbb
mov
fcmovnu
mov
jl
sbb
xor
xchg
loop
daa
xchg
and
xchg
cltd
and
lcall
mov
in
mov
pop
fmull
mov
push
lods
or
cmpsl
and
shrb
jnp
sarl
and
mov
fdivrl
xchg
out
adc
aam
lock
les
or
xchg
push
xor
and
xchg
inc
xchg
ss
pop
adc
loopne
pop
imul
push
fstl
mov
and
mov
push
push
aam
shll
insb
adc
mov
cltd
adc
popl
or
jp
push
push
or
fwait
jg
push
dec
es
loopne
xchg
rorb
aas
inc
jnp
xchg
mov
fmuls
ret
es
jle
sbb
push
addr16
orl
pop
insl
popa
inc
fwait
orl
pop
mov
jb
pop
xchg
and
clc
insb
push
pushf
fdivl
xchg
ret
sbb
sbbl
and
ror
inc
dec
icebp
cmp
pop
into
mov
push
aad
insb
notb
popa
lcall
in
xor
dec
lds
pushf
sub
or
mov
mov
fwait
arpl
ja
lock
insb
mov
arpl
movsb
mov
cmpsl
orl
push
ficomps
mov
adc
in
mov
mov
jmp
xor
into
cmpsl
cmp
and
jp
adc
jo
sti
scas
stos
pop
mov
ds
sbb
mov
jae
sbb
movsb
jo
fisubrs
mov
xor
xlat
nop
adc
aas
movsl
sub
cmpsb
and
mov
icebp
add
test
fnstcw
data16
adc
jmp
fld
push
mov
fwait
dec
mov
xchg
push
rorb
mov
dec
insl
imul
ds
insl
and
addl
iret
add
xchg
mov
out
loop
out
push
jecxz
mov
in
adc
mov
cmpsl
and
fidivs
stos
sbb
test
mov
xchg
iret
mov
int3
daa
mov
stos
bound
in
aaa
bound
aaa
outsb
lcall
or
out
cmp
mov
outsl
outsl
sbb
inc
cs
ror
or
cmp
mov
sbb
popa
pop
inc
mov
sahf
jge
pop
clc
inc
jae
mov
rorl
out
lods
sbb
repnz
stc
fldcw
mov
inc
nop
mov
or
mov
data16
out
pop
xor
inc
sahf
pop
popa
lret
inc
fiadds
jp
pusha
add
leave
lahf
add
inc
sahf
or
xorb
cmc
arpl
sub
xchg
xchg
or
sahf
mov
fcoml
cmpsb
test
pop
in
pushf
mov
in
dec
daa
and
jbe
jb
fldenv
jp
jle
in
pushf
andb
inc
mov
test
xchg
in
sbb
lcall
mov
sub
dec
ret
mov
sub
xchg
or
or
pop
andl
and
dec
xchg
call
enter
sub
mov
lahf
xor
sub
mov
and
dec
and
nop
xchg
sbb
and
movsb
mov
and
lcall
xchg
mov
fwait
dec
daa
and
or
mov
mov
sbb
in
pop
fwait
loopne
xchg
test
xchg
xchg
mov
inc
sarb
daa
pop
push
and
xchg
sahf
jbe
mov
adc
adc
outsb
insb
mov
xchg
sub
hlt
sub
fisubrs
clc
fwait
cltd
popa
xchg
pushf
mov
addl
popa
adc
fdivl
call
xchg
sub
je
fwait
pop
jae
call
cmp
fcmovne
and
xchg
and
jae
mov
call
mov
mov
sub
xchg
fwait
outsb
daa
pop
push
and
sbb
fsubrs
insb
mov
push
aas
lahf
mov
sbb
and
popf
mov
in
sbb
pop
call
je
cmpsl
mov
mov
aam
jno
mov
inc
sarb
daa
pop
push
and
sbb
xchg
fwait
mov
lea
in
loopne
and
data16
stos
jmp
adc
aas
add
es
adc
mov
stos
out
ja
pop
movsl
xchg
cmpsl
ljmp
pop
iret
push
or
jae
or
xchg
and
fnstenv
or
sub
mov
movsb
pop
mov
mov
das
cmpsb
jmp
cli
add
cmpsb
mov
xor
cmp
int3
xchg
cmpsl
and
out
dec
inc
sbbl
and
int3
int
adcl
addb
or
fwait
gs
cltd
cmpsl
in
iret
mov
mov
lret
ret
js
mov
and
add
popf
movhps
inc
push
movsl
loop
push
and
mov
xlat
lea
xchg
in
sahf
mov
cld
push
pop
jp
shlb
cmpsb
bound
rcrl
or
dec
inc
insb
lret
fwait
popf
cmpsl
hlt
and
mov
cvtdq2ps
shlb
and
inc
inc
adc
cmp
xchg
in
and
aas
or
jb
loope
xor
mov
repnz
pop
and
std
mov
sbb
es
shlb
je
xchg
loopne
ja
xchg
mov
sbb
cltd
loope
popf
mov
push
popa
dec
data16
nop
push
popf
sbb
adc
loop
sbb
lock
insl
test
movsb
mov
mov
sbb
push
cmpsl
in
jnp
insb
std
mov
sub
js
movsb
lea
and
add
das
insb
pushf
cltd
inc
arpl
cli
cld
nop
sbb
rcrl
daa
gs
push
daa
cltd
filds
mov
push
pop
xchg
add
ljmp
lahf
ficoms
cmp
ret
pop
mov
add
aam
cmpl
je
adc
ds
enter
ficoms
mov
lahf
mov
movsb
enter
dec
mov
cmp
leave
mov
pop
clc
popa
pop
and
pop
adc
popf
rcll
cmc
jae
xchg
dec
mov
pusha
pop
sub
clc
push
and
sahf
loopne
jmp
mov
dec
aaa
push
mov
lcall
mov
pop
mov
rcrl
aam
popf
shlb
jno
outsl
pop
sub
jge
add
icebp
push
flds
add
mov
dec
mov
xor
fiadds
in
adc
jno
jb
lcall
repz
sahf
scas
mov
mov
mov
ja
push
sbbl
or
sbb
sbb
mov
pop
aaa
je
xchg
mov
popa
jbe
sahf
sub
fmul
cs
pop
nop
in
push
mov
sub
mov
mov
push
jne
into
jge
inc
lea
jmp
xchg
jae
jb
or
jae
xchg
cmpsl
sbb
pop
sahf
jb
xchg
addl
scas
out
sbb
inc
or
xor
scas
xchg
repz
addl
cmp
hlt
lods
sub
popa
lea
push
fsubp
lods
scas
outsl
mov
mov
fsts
pusha
sbb
enter
test
jl
stos
test
movsb
fs
lock
mov
lea
movb
nop
clc
adc
mov
loop
xor
repz
mov
sahf
in
jmp
inc
cmpsl
add
inc
fwait
mov
dec
mov
adc
inc
lods
jl
aas
sbb
loop
leave
inc
xchg
xchg
dec
add
out
sbb
ror
push
or
add
jp
xchg
mov
test
pop
mov
pop
push
daa
add
sbb
jb
dec
xor
push
test
bound
sub
fmull
xor
sbb
loop
mov
xchg
xlat
mov
xor
add
mov
in
adc
sub
adc
mov
xchg
jno
xchg
mov
jecxz
sub
pop
mov
dec
push
ret
clc
lock
pop
sbb
adc
jg
sahf
mov
popa
or
es
lock
pushl
test
or
jo
out
xor
cwtl
test
dec
add
fdivl
andb
outsb
jecxz
sub
push
inc
add
mov
lahf
popf
icebp
push
inc
push
hlt
mov
cmp
pop
shlb
push
inc
aas
xchg
adc
lock
cmpsl
testb
das
mov
popf
repz
cld
inc
mov
inc
push
xchg
lods
stos
movsb
or
xchg
mov
shrb
andl
or
xchg
cld
xlat
pop
dec
jo
cs
insb
add
and
aam
jmp
test
aad
aam
xchg
lcall
mov
push
nop
jmp
add
and
jae
xchg
daa
sbb
popa
jb
cmpsb
out
push
push
fistl
out
aam
and
jle
push
xchg
and
xor
xchg
dec
loop
adc
push
xchg
addr16
and
ds
fmuls
aam
lods
xchg
int
enter
or
mov
data16
in
std
mov
lods
loop
insb
dec
sub
pop
jmp
stos
adc
adc
inc
mov
cmpsb
shlb
fwait
push
adc
inc
push
sahf
sti
loop
jne
aad
fimuls
mov
pop
cmp
pop
adc
or
sbb
incb
out
mov
decl
jp
add
pop
in
inc
orb
mov
fsubl
cld
popf
daa
mov
push
push
cmpl
popa
push
pop
mov
xor
test
jnp
cmp
inc
xchg
mov
cmp
and
insb
lods
sbb
pop
fisubrs
addl
xor
inc
fcoms
imul
ror
out
pop
rorb
or
in
sahf
andl
outsb
xchg
jno
ljmp
cmp
push
add
sub
pushf
mov
call
rolb
pop
cmp
pop
js
push
sti
popa
dec
fs
cmp
lahf
pop
xor
fisubs
mov
pop
and
ja
bound
add
jnp
loop
daa
sahf
fwait
arpl
outsb
mov
sbb
cmp
xor
fdiv
inc
sahf
xchg
test
jbe
shll
mov
sahf
repz
cmpsl
xbegin
push
ret
aas
lds
ss
mov
xchg
lds
xchg
cwtl
mov
pop
or
mov
push
repnz
push
cmpl
testl
fwait
in
movsl
daa
mov
lret
jmp
fcompl
test
aad
dec
adc
loop
das
add
pop
xchg
aam
jp
sbb
ret
sub
in
ds
xor
xchg
pop
pusha
pop
xor
or
pop
add
adc
sbb
fs
mov
and
cld
mov
jne
aad
or
jne
movsb
sahf
adc
push
in
inc
test
push
or
and
movsb
cwtl
popa
imull
test
jne
mov
sub
mov
and
movsl
jbe
test
pop
mov
jp
popa
lea
mov
stos
loop
xchg
movsl
push
js
mov
jmp
xchg
mov
addr16
mov
jne
loop
lcall
adc
out
mov
and
jo
cmc
sbbb
test
lret
stc
mov
rolb
movsb
push
and
sbb
or
mov
xchg
and
mov
cwtl
sbbl
cmp
in
stos
icebp
pop
lcall
xor
sub
pop
les
pop
fistps
ret
movsl
cmpsb
int
mov
std
push
mov
push
cmc
pop
loop
mov
jecxz
imul
mov
fdiv
xchg
inc
dec
mov
lar
pop
lahf
push
mull
movsb
mov
mov
sbb
cmp
cmp
sbbb
xchg
pop
imul
popf
xlat
adcl
push
mov
fisubl
xchg
sub
lcall
dec
xchg
dec
loop
push
nop
out
faddl
sub
bound
dec
or
addl
sti
or
sahf
add
add
int3
cmp
je
sbb
idivb
jo
push
fwait
or
loop
repnz
lahf
adc
imul
orb
cmpsl
push
div
std
add
adc
sbbb
divb
push
mov
div
mov
daa
fs
hlt
mov
pop
and
push
and
mov
or
push
mov
lcall
pop
sahf
stos
orl
mov
pop
add
fistpll
cmovne
repnz
adc
stos
pop
std
xchg
xchg
jns
int
addr16
sbb
push
jns
cmc
push
mov
jg
jbe
pop
pop
push
dec
cmpsb
sbb
sbb
xchg
sub
add
mov
pop
cltd
loope
and
sub
xchg
fucom
pop
cs
pop
xchg
push
enter
sahf
xchg
jp
ja
popa
int
and
stos
xor
push
loop
dec
je
adc
loope
pop
cwtl
rcrl
xchg
test
sahf
pop
loope
adc
mov
mov
fcoml
rcll
xchg
jne
cli
mov
mov
xchg
and
xchg
mov
jnp
xchg
add
sbb
mov
popf
loop
sub
loop
inc
pop
sbb
xorb
adc
mov
inc
and
mov
or
loop
pop
ja
or
mov
pusha
jbe
pop
adc
sahf
xchg
mov
sbb
stos
add
test
jae
dec
popa
loope
push
popf
or
cmp
pop
icebp
xchg
mov
mul
sub
mov
test
bswap
jge
push
fwait
data16
push
pop
sub
sbb
xchg
testb
push
lea
bound
ds
cmp
jl
xchg
loop
jb
mov
faddl
push
nop
movsb
cmpsb
pop
and
mov
jp
pop
or
fmull
out
loopne
push
cwtl
push
int3
sub
iret
cld
cwtl
pushf
jb
dec
push
xlat
arpl
popf
movhps
lret
lcall
xor
push
or
sbb
push
lods
and
mov
or
and
push
std
arpl
push
cld
mov
pop
xchg
addr16
test
push
push
add
lds
stc
bswap
clc
stc
inc
ret
sbb
imul
xchg
jp
or
xchg
inc
test
pop
call
movl
into
push
inc
xchg
mov
xchg
fucomp
sti
loop
and
arpl
lods
aad
icebp
arpl
es
cmpsb
pop
call
jns
clc
aad
jl
sbb
cld
loop
ja
dec
and
mov
mov
loope
mov
adc
cli
pop
xchg
inc
pop
pop
call
mov
cwtl
lcall
sbb
and
sub
push
sub
loope
inc
int3
hlt
sbbl
push
adc
jmp
std
dec
cmpsb
xchg
jnp
icebp
sbbb
lcall
adc
andl
add
pop
aaa
push
lds
inc
fisubl
xor
daa
outsb
mov
add
xchg
sbb
mov
out
sub
pop
jno
pusha
movsb
mov
aas
xchg
xchg
pop
in
pushf
fwait
ret
lahf
aam
xchg
xchg
mov
testl
divl
ja
mov
loope
mov
es
sbb
cmp
mov
test
imul
lret
and
mov
pop
imul
fcomp
aaa
sti
jp
arpl
push
and
je
movsb
mov
cld
dec
cmc
mov
popf
mov
dec
andl
push
repz
pusha
sbb
ror
push
jecxz
outsb
push
xchg
mov
fs
push
and
and
jl
in
jae
dec
sbb
sbb
cmp
and
xor
fucomp
test
pop
fadds
xor
jl
je
loopne
fcoml
ds
loope
jp
popf
pop
mov
jl
mov
add
ds
jmp
arpl
jno
mov
int
orb
and
sbb
lea
in
sub
xchg
adc
arpl
xchg
lods
mov
mov
idivb
sahf
inc
data16
mov
jnp
jg
pop
outsl
xchg
push
aas
push
mov
jb
xchg
jnp
sub
pop
sarb
mov
ret
mov
popf
mov
fstp
push
xchg
fs
test
loopne
in
or
xor
aad
out
mov
jecxz
packsswb
xchg
add
push
ljmp
lcall
arpl
icebp
loopne
loop
dec
mov
inc
xchg
sahf
dec
fisubs
lret
jae
adcl
push
sahf
dec
push
out
inc
nop
ret
aaa
dec
pop
bswap
mov
jecxz
mov
inc
xchg
jecxz
lods
cmp
loope
xor
push
push
and
mov
sbb
movsb
pop
xlat
lahf
insb
push
inc
sub
test
sahf
test
and
and
xlat
pop
inc
lea
lret
cli
test
pop
push
enter
pop
cli
xor
push
xor
jnp
inc
push
sti
jns
fnsave
pusha
popf
ja
and
xor
shll
outsl
sub
sbb
xchg
addb
jae
or
and
dec
jle
xchg
add
sub
xchg
and
pop
xchg
push
cli
push
ret
and
xchg
sti
push
stc
dec
pop
in
pop
mov
pop
xchg
adc
jno
lcall
cs
and
mov
adc
xchg
idivb
pop
les
outsl
jb
outsl
add
add
sub
jp
xor
popf
or
xchg
imul
xor
lea
or
mov
mov
and
sbbb
push
push
dec
je
mov
xor
arpl
imul
dec
pushf
shl
xchg
mov
mov
clc
pop
push
and
js
ss
push
test
stos
sbb
mov
loop
pop
push
mov
fs
out
jge
ss
shr
xlat
ds
or
mov
xchg
jnp
mov
sbb
pop
mov
andb
fsubl
bound
pushaw
push
negb
sub
int
inc
movsb
add
mov
pop
insl
rorl
and
cmp
cwtl
adc
mov
popf
fildl
test
xchg
into
mov
lcall
or
movsb
js
sbb
int3
pop
jp
arpl
push
push
jns
stos
push
pop
cwtl
jnp
cs
inc
lds
xchg
pushf
adc
and
and
sti
js
push
push
push
and
loop
insb
aaa
push
sbb
dec
mov
sub
jns
sub
inc
imul
fsubrl
arpl
mov
bound
push
push
jmp
nop
stc
imul
insb
sub
mov
sbb
sbb
dec
xchg
int3
js
dec
jb
mov
sub
pop
rorb
jp
xor
mov
dec
fwait
sub
arpl
stos
lock
dec
mov
and
xchg
mov
mov
sub
cmc
jp
jae
adc
cld
inc
mov
xchg
mov
inc
sahf
sub
adcb
and
sbb
movsb
scas
test
pop
pusha
cmp
cld
pop
jecxz
push
loop
mov
inc
cli
jl
xchg
push
lret
loop
mov
enter
fnstcw
sub
cltd
xor
arpl
mov
clc
mov
mov
fsubrs
or
fwait
jge
lock
fnstenv
arpl
push
enter
test
dec
arpl
xchg
lahf
outsb
sahf
pop
push
loop
mov
daa
xor
mov
or
push
out
adc
jp
jp
enter
and
test
xchg
push
pop
test
call
sbb
xor
adc
stos
faddl
addr16
mov
dec
sti
in
or
lret
enter
fisttpll
and
fwait
imul
pop
push
fsubrl
dec
xchg
pop
repz
imul
mov
sbb
inc
push
or
dec
repnz
mov
or
movsl
bound
xchg
cmp
cmc
cmp
lret
aaa
xchg
loop
das
int
xor
loopne
pop
fs
aas
push
insl
in
mov
pop
xchg
lods
movsl
es
loop
inc
push
push
fstpl
mov
popa
pushf
xchg
lret
jl
xor
ds
mov
or
push
in
xchg
movsl
fisttpll
mov
orb
xchg
cld
xchg
insl
adc
fisttpl
iret
pop
sbbl
loope
pop
movsb
sbb
cmp
sbb
mov
xchg
ss
xchg
sbb
adc
scas
popf
into
pushf
ret
icebp
mov
popf
adcl
mov
mov
ljmp
or
mov
sahf
es
xchg
arpl
push
and
dec
or
std
loopne
push
lds
jns
or
jnp
icebp
ja
xlat
lock
push
push
dec
ljmp
fdivrs
lret
pop
and
paddd
ds
add
daa
iret
cmp
dec
inc
add
or
xor
lcall
xor
in
int3
push
pop
push
pop
scas
icebp
sahf
arpl
push
and
jb
mov
xlat
mov
push
pop
push
insl
mov
mov
pop
pop
and
into
xlat
fnstsw
int
mov
mov
lahf
pop
ficomps
inc
inc
shlb
push
sub
aam
xor
mov
xchg
mov
aaa
xchg
adc
mov
testb
mov
sti
movsb
sar
add
js
jns
jp
xor
and
scas
sahf
movsb
adc
xor
xchg
jle
inc
xchg
or
mov
aam
adc
xchg
mov
mov
in
faddl
in
sbb
sahf
addr16
dec
mov
subb
mov
push
shll
jg
flds
xchg
xchg
add
mov
xor
gs
mov
jbe
outsl
outsb
adc
jge
mov
jbe
imul
in
flds
popa
xchg
or
roll
call
sub
leave
inc
in
sbb
fistl
hlt
sub
pop
pop
in
flds
popa
xchg
int3
cmc
roll
call
sub
inc
in
sbb
sbb
xchg
xchg
daa
sbb
fwait
sti
xchg
rcrl
outsl
outsb
cmpsl
pop
cld
mov
dec
xchg
sub
hlt
sub
fisubrs
cmc
mov
jbe
call
in
fld
or
mov
mov
popa
popf
fwait
adc
fcompl
pop
test
pop
in
flds
popa
xchg
dec
cmc
roll
call
jae
test
dec
fmull
sbb
xchg
mov
rcrl
jg
adc
mov
lods
fdivl
call
xor
sub
lods
fdivl
call
mov
sti
lahf
fmull
rcll
lahf
add
filds
mov
push
pushf
jae
push
xchg
ja
cmpl
mov
pop
sbb
je
mov
add
je
fwait
insb
lahf
movl
cmc
push
lahf
add
leave
popa
popf
jae
mov
ja
xchg
jnp
fwait
sarl
inc
sbbl
insb
outsl
sti
mov
or
xchg
mov
inc
jae
lahf
mov
mov
mov
fistpll
sub
fisubrs
cmc
pop
lea
and
inc
jmp
repnz
cli
testl
adc
lods
push
xor
push
cmp
push
inc
mov
push
dec
mov
push
push
mov
push
pop
mov
adc
and
sarl
jg
jg
jg
jg
jg
jg
jg
andl
subl
xorl
cmpl
addl
lret
dec
jg
es
inc
mov
inc
inc
inc
lds
leave
inc
dec
inc
int
push
inc
roll
aad
pop
inc
flds
fldl
loope
and
loopne
loopne
loopne
loopne
loopne
bound
xchg
outsb
outsl
shll
ja
xchg
add
fwait
aam
push
imul
jae
ja
jnp
jg
adc
aad
aad
rcr
dec
jnp
inc
insb
dec
fstps
dec
mov
mov
test
movsl
out
je
pop
ja
test
std
adc
out
push
in
xchg
add
dec
add
mov
and
xchg
jno
fistl
loopne
notb
lahf
cmpl
push
dec
mov
repz
cmp
or
movsb
push
movsl
push
xorb
add
movsl
cwtl
sbb
fidivrl
mov
mov
aam
out
mov
fdivrp
sub
sbb
in
andb
data16
mov
and
outsb
xchg
rorl
out
repz
jl
outsl
mov
jge
pop
in
cmp
jno
pop
sbb
add
negb
pop
mul
pushf
nop
inc
pop
and
fstpl
xchg
xchg
fstpt
and
mov
repnz
xor
or
mov
iret
nop
popf
ja
out
mov
sbb
push
jnp
add
push
mov
add
push
push
bnd
mov
lahf
pop
cmpsb
and
fwait
mov
push
push
les
addl
xchg
cmp
mov
mov
push
mov
je
mov
stos
cmpsb
loopne
push
jo
sti
pop
cmp
mov
jbe
sub
jle
je
mov
fwait
imul
lret
stos
iret
xchg
insb
fisubrl
mull
cmpl
fwait
sub
cwtl
pop
adc
pop
mov
test
push
popf
addr16
sub
or
test
push
inc
ret
mov
jnp
addr16
sub
std
mov
ja
mov
lret
pop
mov
outsl
mov
mov
and
mov
xor
add
adc
popf
and
xchg
dec
popa
iret
aas
js
xor
and
mov
push
xchg
imull
popf
cmp
and
mov
aad
mov
jae
test
pcmpgtd
out
add
std
cmp
jle
mov
jp
inc
mov
or
daa
data16
insl
rcl
mov
sbb
and
mov
xchg
add
xchg
xor
jecxz
mov
jge
mov
mov
xchg
fsub
mov
jb
into
clc
cmp
push
inc
loopne
dec
arpl
push
push
das
dec
and
xchg
push
test
fistpl
push
sub
cmpsl
sbb
shlw
mov
in
inc
out
and
test
pop
adc
add
push
xchg
xchg
mov
jp
loopne
leave
jae
xchg
or
or
mov
adc
pop
push
dec
lret
cs
push
enter
and
inc
jnp
add
arpl
xchg
add
mov
or
xchg
rclb
push
loopne
sub
pop
lods
add
cmp
push
cmp
stos
in
mov
inc
imul
add
adc
test
inc
arpl
jae
ja
inc
jg
sbbl
xchg
xchg
xchg
fwait
inc
lahf
and
inc
ret
sbb
fbstp
push
call
insb
int
daa
fbstp
push
call
sub
jae
push
call
insb
int
daa
fbstp
push
call
out
xchg
jbe
call
insb
int
daa
fbstp
push
call
insb
int
push
daa
lock
ret
sbb
fbstp
push
call
insb
int
daa
fbstp
xor
fstps
ret
sbb
fbstp
push
call
insb
int
daa
fbstp
cmpsl
mov
je
sbb
fbstp
push
call
insb
int
daa
fbstp
push
call
sub
arpl
daa
das
xchg
pushf
loope
cmpl
pop
cmp
push
cmp
mov
cmp
lcall
fisttpll
sahf
in
xor
pop
push
lcall
jge
jmp
jmp
pop
insl
fldcw
or
stos
jbe
ja
into
and
out
inc
fistpl
mov
sbb
and
sub
dec
jl
xchg
and
ret
mov
dec
and
imul
mov
dec
and
es
ja
ret
adc
popa
je
xor
push
mov
popa
popa
cwtl
int3
popf
xchg
mov
xchg
pop
and
in
mov
in
xchg
lret
and
in
outsb
adc
mov
outsb
fs
mov
sbb
je
or
push
dec
fsubp
imul
lods
decb
jg
mov
jg
dec
sbb
nop
dec
pusha
or
jg
or
xchg
adc
data16
data16
pushf
sbb
sub
sbb
sbb
pop
fdivl
cld
pop
sahf
adc
mov
popf
mov
jns
je
pop
roll
lods
aam
fsubl
push
andl
pop
cmpl
addr16
neg
in
testb
test
jns
or
orl
sbb
adc
dec
addb
loop
or
loope
faddl
pop
xor
sbb
loop
loop
push
hlt
out
bound
dec
cltd
sbb
inc
pop
and
movsb
lcall
fildll
addl
sbbl
and
ret
add
mov
fcoml
sbb
or
in
xchg
test
stc
pop
pop
insb
test
fldenv
ret
add
popw
ret
popa
xlat
test
mov
shr
test
insb
test
addl
test
aad
insb
xchg
xchg
push
roll
fnstenv
mov
xchg
shll
leave
mov
int
xchg
clc
andb
in
xchg
jno
sub
ret
add
dec
jb
lock
clc
jb
mov
insb
mov
mov
jno
sahf
pop
insb
movsb
shl
pop
push
mov
and
or
iret
adc
rcl
mov
out
mov
out
adc
mov
rcll
cmp
movsb
sbb
outsb
nop
stos
mov
fldenv
and
clc
sub
inc
ss
loop
mov
cmpb
inc
and
repz
dec
adc
je
scas
loop
push
ljmp
dec
pop
and
loop
or
xchg
jb
dec
fwait
pop
mov
mov
fs
jge
mov
and
xchg
and
and
jmp
jae
mov
inc
fsubl
imul
xor
adc
pushf
and
xor
mov
jnp
jecxz
dec
hlt
je
pushf
lods
sub
cwtl
nop
cmc
ja
cmpsl
jnp
push
pushf
add
testb
xor
sbb
sahf
add
sahf
adcb
ret
add
push
dec
stos
sub
xchg
cs
dec
jecxz
and
out
into
mov
jne
cmp
and
dec
add
dec
jle
xchg
loope
cmc
pop
loopne
mov
insl
fs
pop
repz
lcall
movzwl
fs
xchg
and
lret
push
popf
movsl
adc
add
shrb
cmpsb
sub
sbb
pop
lds
mov
mov
inc
push
popa
movsb
ret
scas
fldl2e
xchg
xor
push
dec
mov
mov
arpl
pop
ret
movsb
jne
mov
fdivrs
rcl
fs
jecxz
test
or
mov
mov
mov
sbb
mov
lods
dec
jne
repz
and
sbb
lods
xor
mov
mov
add
jne
hlt
fdivrs
aas
out
push
xchg
divl
das
insl
mov
negl
xchg
popf
cltd
shl
push
pop
insb
sbb
inc
sbb
push
add
loop
mov
mov
sbbb
mov
addr16
ret
and
jb
sbb
and
xchg
inc
and
xchg
sbb
pop
pop
outsl
or
mov
sahf
cmp
xchg
test
jo
fcomps
mov
loop
enter
cmp
jb
shrl
mov
jo
mov
mov
jecxz
xorb
mov
fwait
mov
popf
sahf
shll
mov
and
jecxz
sub
sti
cmp
dec
shrb
mov
pop
xchg
fwait
and
std
sbb
shlb
push
out
jb
out
push
and
cmp
es
rcll
xchg
adc
adc
mov
and
xchg
lods
mov
and
test
loop
ficompl
stc
cwtl
pushf
lcall
and
xchg
inc
int3
xor
bound
add
mov
push
arpl
add
inc
lahf
sbb
mov
pushf
xchg
and
or
sbb
mov
arpl
add
shlb
dec
xor
sbb
lahf
or
dec
jno
lret
and
pop
shll
fbld
hlt
pop
cltd
push
mov
adc
and
xchg
pop
leave
pop
imul
fisttpll
dec
pop
push
mov
js
les
pop
inc
bound
pop
inc
cmpsb
repnz
jge
lcall
push
fscale
movsl
out
jle
out
mov
repz
aas
call
jl
adc
fists
dec
jg
inc
sub
andl
xchg
inc
jbe
fs
das
aas
dec
pusha
inc
les
and
mov
push
xchg
xor
sahf
jl
push
xchg
aam
sbb
movsl
push
jo
rcrb
adc
rcll
add
add
pushf
out
xchg
pop
push
out
adc
or
add
mov
xchg
mov
bound
sub
fs
popf
push
mov
adc
int
pushf
adc
jecxz
hlt
sub
in
or
fdivl
xlat
cmp
xchg
inc
push
sbb
jno
jl
jp
mov
lret
xchg
and
jl
xchg
sbb
rcrl
mov
jae
lcall
push
xchg
mov
jns
mov
in
das
das
inc
push
in
pop
cmp
lock
jg
fcmovbe
cli
pushf
and
psrlq
sub
inc
fnstsw
and
loop
pop
ret
pop
mov
sub
data16
dec
stos
xorb
or
xchg
shlb
jno
test
pop
jbe
sti
inc
fistpl
stc
lahf
and
sbb
xorb
sub
popa
daa
add
int
in
scas
adc
pop
data16
and
push
xlat
and
mov
int3
cmp
jb
mov
push
xchg
popa
hlt
cmp
or
inc
mov
lods
das
lcall
push
inc
fildl
lcall
fstpt
pop
push
xchg
addl
inc
jg
aam
test
movsl
out
mov
adc
and
mov
and
shlb
xchg
rcl
ret
sbb
dec
mov
cld
fnstenv
adc
stos
or
aam
das
inc
or
cmp
je
xlat
cmp
in
loopne
ret
das
stos
add
xchg
push
in
and
adc
add
sbb
mov
inc
xchg
rcrl
xchg
nop
pusha
inc
daa
das
and
sub
mov
lds
and
mov
push
cltd
and
mov
outsb
test
sub
sbb
push
cld
pop
pop
cs
test
pusha
sahf
imul
dec
scas
imul
sbb
lret
push
shlb
and
jns
scas
xchg
adc
imul
addl
jb
aas
jne
inc
out
mov
add
loop
nop
push
repz
add
outsl
sbb
jae
int
fcompl
xchg
xchg
xchg
mov
sbb
aad
jle
sbb
adc
mov
out
lea
xchg
pop
sbb
je
adc
sbb
ss
mov
inc
je
jmp
xchg
jo
je
lcall
mov
cmpb
and
and
popf
cmc
in
xorb
add
add
iret
xchg
pop
xchg
lahf
stc
outsl
push
ficoms
sbb
pushf
fdivrl
pop
jno
in
jo
xchg
mov
pop
ds
add
push
ficomps
xchg
sbb
shll
decl
popf
pop
andl
in
scas
mov
xchg
pop
sbb
loope
enter
aaa
inc
push
and
and
vmovntps
xor
rclb
xchg
sbb
dec
push
pop
ret
add
ret
out
adc
jecxz
and
push
xchg
je
xlat
adcb
dec
sarl
cmpsb
nop
es
lahf
popf
sbb
nop
int3
lods
fadd
mov
rcll
lret
test
insb
adc
adc
inc
mov
outsb
lods
sub
adc
lods
add
data16
pop
jl
fwait
sbb
and
fistl
sahf
jne
xchg
lret
xchg
add
mov
sbb
pop
fnstcw
jae
xlat
cmp
fs
jnp
push
mov
in
movsb
mov
push
mov
dec
and
fcoms
or
push
out
mov
je
pop
xchg
push
push
push
jl
mov
add
pop
adc
jb
sbb
fiaddl
mov
sbb
into
push
cwtl
inc
jge
nop
adc
sbb
iret
push
nop
sbb
out
enter
jp
lock
orb
and
mov
inc
mov
pop
xchg
out
lret
scas
pop
inc
push
insb
mov
pop
imul
push
xor
push
ja
adc
or
xchg
pop
add
pushf
aad
loope
dec
dec
inc
sbb
adc
test
push
sbb
imul
and
pop
out
xor
cwtl
lahf
xchg
inc
leave
adcb
xchg
xchg
mov
out
dec
adc
test
sbb
rcl
cld
mov
loop
bound
in
push
xlat
orl
mov
or
adc
inc
xchg
js
add
mov
or
adc
mov
out
fldl
cmpb
adc
test
roll
jo
xchg
cmp
add
scas
movsb
push
push
pushf
xchg
and
inc
adc
and
aam
clc
and
fsubl
loop
push
lds
ret
xchg
xchg
aad
push
popf
jo
sub
dec
cmp
xor
je
dec
inc
mov
or
mov
dec
push
and
mov
xor
xchg
and
imul
icebp
add
xchg
imul
mov
mov
scas
mov
or
push
out
pop
adc
sahf
xchg
mov
xor
rorb
stos
dec
mov
adc
es
mov
lahf
adc
out
bound
fistl
imul
xchg
stos
pop
adc
out
push
nop
and
mov
outsl
popf
fcomp
lcall
cld
push
pop
and
cmp
push
add
mov
and
push
or
xchg
cmpsb
sub
push
jnp
push
and
and
das
jmp
movsb
pop
sub
je
and
pop
xlat
add
test
and
jmp
cmp
sbb
push
fs
stos
pop
popf
xor
pop
jecxz
mov
popf
fbld
insb
sbb
out
loope
fcompl
and
and
cmp
sbb
cmpsl
adc
outsl
in
adc
icebp
sbb
out
inc
xlat
filds
jne
push
mov
bound
or
cs
xor
shrl
movsl
and
popa
mov
ret
scas
adc
popa
pushf
pop
pop
and
mov
dec
imull
dec
int
jmp
add
leave
push
pusha
popf
ja
push
adc
jno
cli
xchg
int3
insb
inc
nop
test
cmp
js
sbb
cwtl
and
lahf
imul
loop
test
xchg
mov
add
repz
popf
mov
pop
pop
orl
jg
dec
enter
fcmove
lds
sub
fisttpl
shlb
jp
jno
inc
lea
sub
xor
xor
mov
sbb
xchg
jmp
jne
adc
pop
or
jb
or
and
mov
jne
in
inc
xchg
pusha
mov
inc
std
ds
sahf
xchg
bound
adc
rcll
cmp
loope
adc
push
mov
inc
xchg
pusha
rorl
jl
mov
sbb
test
pop
in
cltd
call
pop
rcrl
sbb
or
xchg
loopne
cld
dec
fucomp
call
pop
call
sub
pop
loope
or
lcall
pusha
es
sub
cltd
mov
ret
pop
fistpll
jnp
sbb
mov
cmpsl
pop
lcall
dec
shr
js
out
pushf
push
lcall
adc
test
push
push
xchg
adc
mov
pop
inc
push
movsb
fwait
in
push
mov
mov
xchg
mov
out
adc
iret
pushf
xor
jnp
js
fwait
aas
sbb
popf
mov
scas
mov
sahf
popf
mov
mov
push
outsb
addr16
in
pop
mov
ficoms
pop
dec
bnd
add
jae
xchg
xchg
cwtl
roll
lods
sub
pop
or
sahf
adc
movsb
scas
xlat
mov
or
add
aaa
jle
cmp
test
push
popf
les
fwait
pop
dec
xchg
push
push
inc
push
mov
fwait
rorb
inc
pop
sub
mov
adc
and
cmp
lock
xlat
in
in
add
push
pop
jns
xchg
les
popf
jo
pop
out
arpl
sub
cwtl
out
loopne
test
lret
or
jg
fnstcw
mov
add
add
inc
add
inc
add
inc
nop
xchg
fisubs
cltd
jnp
sbbl
pop
rsqrtps
jl
sbb
pop
sub
ret
sbb
dec
std
pop
call
push
cmp
or
jmp
sbb
and
cmp
push
fsubl
pop
ret
mov
test
and
or
test
inc
rorb
cmp
cmpsb
nop
popa
push
das
add
cwtl
icebp
sbb
and
push
fldl
push
jae
arpl
testb
push
add
int
xor
mov
mov
inc
sahf
shlb
dec
mov
enter
cwtl
and
aas
es
sub
jb
adc
imul
push
popf
mov
insl
push
repz
pop
arpl
sbbl
and
adc
ss
xchg
andl
add
add
rclb
sahf
cmp
jno
adc
mov
mov
lock
mov
cmc
mov
sub
shll
lods
push
stc
arpl
xchg
adcl
mov
or
shlb
fwait
sub
stc
push
jg
xchg
inc
insb
in
call
out
out
and
adc
sub
pop
add
cmpsl
arpl
add
das
cs
divb
js
add
popf
mov
aaa
jo
lret
neg
rclb
xor
leave
movsb
and
rcrb
in
pop
es
push
pop
mov
imul
dec
mov
loop
das
xchg
push
lods
dec
mov
mov
mov
mov
in
lcall
nop
int
loopne
fistl
mov
arpl
sbb
pop
inc
popa
je
and
mov
sbb
ja
out
mov
je
loope
jecxz
mov
mov
mov
jg
add
dec
adc
inc
fdivrl
and
mov
xchg
lcall
dec
mov
adc
and
cmp
repnz
and
mov
cmpb
das
mov
mov
lds
fcompl
sub
lea
idiv
mov
andl
and
jno
in
loope
add
subb
jbe
inc
nop
cmp
inc
or
mov
loop
push
pusha
mov
push
xor
sub
lahf
shl
repnz
inc
mov
push
ja
inc
mov
in
cld
adc
in
add
inc
xchg
pop
inc
hlt
inc
pop
push
bound
in
mov
scas
ja
filds
sub
and
std
or
je
sbb
imul
pop
pop
loop
xchg
cmp
dec
mov
insl
inc
xchg
jbe
xor
je
push
jp
inc
xchg
or
mov
aas
lcall
sub
imul
adc
pop
in
adc
and
loope
in
sbb
sbb
pop
adc
fsubl
or
int
je
xchg
arpl
loope
loop
xchg
frstor
bound
and
and
aas
sub
loopne
xchg
and
and
mov
pusha
adc
aaa
jne
inc
push
and
in
pop
pusha
adc
loope
sub
xchg
adc
jge
sub
push
lds
sbb
popf
pop
and
aam
sbb
mov
aam
sbb
jbe
push
aam
sbb
test
push
jno
outsb
sbb
pop
loopne
fcoms
loopne
movsb
jle
and
fcoms
loopne
mov
sub
push
inc
loopne
xchg
jle
and
test
lret
loopne
jle
add
add
adc
pop
loopne
aas
adc
pop
loopne
pop
popa
push
loopne
add
and
test
loopne
aas
test
loopne
aas
test
loopne
pop
sub
movsb
sub
mov
movsb
mov
pop
sub
xchg
sub
fnstcw
out
aad
mov
movsl
cltd
int
push
lret
mov
push
inc
inc
mov
fidivrs
jb
pop
nop
sbb
lds
and
sub
sbb
pop
xchg
mov
andl
outsb
loope
inc
jb
mov
dec
or
test
inc
xor
cmpsb
hlt
xchg
dec
fmuls
xor
pop
scas
xchg
inc
lock
testl
in
pop
adc
fidivrs
mov
fwait
sbb
and
mov
pushf
mov
inc
adc
popf
pop
pop
popa
mov
adc
in
jmp
pop
mov
adc
loope
sub
fwait
clc
fs
and
repz
rcr
mov
or
jae
jo
inc
pop
adc
out
mov
aam
push
inc
xchg
mov
das
and
les
into
movsl
adcb
scas
cmp
jge
popa
adc
rol
add
fisttpll
inc
sti
adc
pop
mov
and
sbb
popa
or
jnp
or
fwait
dec
popa
pop
and
popa
push
or
movnti
icebp
popa
jnp
popa
mov
sub
psubd
fwait
clc
and
shlb
loope
movsb
inc
jmp
outsl
adc
cmpsb
pop
mov
out
arpl
xor
inc
xchg
out
jecxz
mov
das
in
inc
ret
bound
push
and
mov
bound
movsb
sub
mov
inc
inc
jecxz
das
mov
fsubl
sbb
iret
jne
push
out
inc
movsb
and
and
aam
out
ret
pushf
loop
fwait
mov
cmp
sbb
ds
inc
mov
insb
xchg
mov
fistps
clc
and
in
xchg
ljmp
jnp
mov
fsub
xchg
rcrb
out
adc
jge
jbe
aam
push
inc
push
repz
popa
jnp
mov
fsub
xchg
inc
cltd
pop
test
jge
pop
adc
push
inc
xchg
push
jno
das
ret
das
mov
scas
jmp
clc
loope
and
xchg
fstp
mov
movsb
dec
je
outsb
fcoml
push
xor
xchg
mov
xchg
and
nop
mov
add
ficompl
insl
push
jge
inc
pusha
sbb
clc
loopne
and
dec
fwait
inc
inc
in
add
fsubl
xchg
inc
push
adc
aam
push
inc
xchg
roll
loope
les
lcall
mov
adc
cmp
sub
pop
and
add
loop
aad
adcl
xchg
mov
pop
scas
sbb
adc
inc
mov
aam
jnp
push
movsl
sbb
sbb
lods
and
fnsave
movd
ffree
xchg
cmovb
fidivl
push
fucom
std
les
mov
mov
mov
cmpsb
test
in
mov
sub
es
inc
mov
push
xchg
cmp
mov
js
dec
mov
outsb
mov
lret
jno
push
jmp
push
dec
xchg
popa
popf
adc
inc
mov
pop
fwait
sub
add
mov
sub
dec
adc
lods
rcll
pop
sahf
push
xchg
and
notb
pop
push
scas
sbb
mov
leave
adc
cmp
inc
inc
sbb
flds
dec
add
js
push
pop
mov
fadd
pop
rcl
xchg
jbe
jae
mov
xchg
icebp
push
push
jecxz
mov
addl
add
outsb
inc
lods
cltd
push
pop
fisubrs
mov
cmc
sbb
push
popa
xchg
movsb
sbb
sbb
jp
shlb
out
or
pop
movsb
rolb
cmp
mov
bnd
sbbb
xchg
inc
leave
cltd
jnp
insl
cwtl
insl
adc
or
push
and
popf
jecxz
fwait
sahf
fldt
int
mov
pop
movsl
fwait
subb
push
cmp
sbb
jno
xor
add
movsb
mov
pop
xor
xchg
inc
nop
and
jnp
xchg
mov
lcall
xchg
pop
pop
mov
and
push
pusha
xor
sbb
enter
xchg
mov
ja
ret
push
stos
xchg
aam
call
pushf
xchg
movsb
rcll
mov
dec
loope
mov
divb
xchg
ret
insb
sbb
cwtl
sbb
xchg
jo
ja
adc
nop
sar
dec
push
adc
call
jno
pop
out
xor
adc
xchg
dec
add
and
add
mov
and
in
mov
mov
ljmp
pop
imul
es
adc
adc
andl
xchg
pop
out
push
pop
dec
rcl
daa
clc
mov
cmp
and
in
aad
jo
adc
arpl
pop
cmp
add
add
mov
lahf
daa
adcl
adc
cmp
sub
push
push
push
insb
and
push
and
or
pop
xchg
daa
iret
lods
sub
outsb
aam
push
mov
pusha
ljmp
mov
pop
add
xchg
mov
pop
push
in
xchg
pusha
sahf
outsl
popa
shrb
ret
jmp
ror
out
cmpsb
scas
sbb
pushf
sub
loopne
xchg
push
fisubrl
pusha
mov
mov
mov
sub
sahf
sahf
jge
and
std
mov
in
xchg
mov
push
and
sbb
aad
inc
dec
repnz
mov
push
call
mov
and
dec
jge
movsb
mov
push
je
lret
cmp
push
aad
popa
jge
push
jnp
ret
into
popf
imul
pop
loopne
iret
push
xchg
popf
inc
xlat
xchg
sbb
xlat
test
sub
cmp
xlat
sbbl
aad
test
push
pop
loope
push
xchg
add
xlat
jae
xrelease
fimuls
test
push
imul
iret
shrl
xchg
mov
enter
or
sub
in
xor
rcrl
sbb
popf
mov
shlb
popa
dec
sub
mov
push
xorb
mov
popf
cltd
ret
ja
pop
cmp
jo
pushf
jnp
push
daa
pop
xor
push
fsts
mov
das
pusha
xchg
push
dec
orl
adc
out
xchg
insl
xchg
ds
push
xchg
adc
subb
push
daa
inc
je
in
rolb
rcll
sub
cmp
pop
outsb
inc
mov
push
enter
sbb
bound
mov
hlt
je
xor
in
loopne
sahf
rorl
xchg
mov
aas
jae
dec
repz
or
mov
icebp
insl
fnstcw
inc
stos
jo
xchg
adc
pusha
or
adcb
enter
test
rolb
es
sbb
sbb
imul
dec
ja
fldenv
xchg
push
mov
xchg
mov
das
and
mov
dec
jae
insb
cltd
pop
push
cmp
mov
mov
je
sahf
lods
inc
cwtl
xor
xor
loopne
dec
in
loope
pop
mov
lock
aad
pop
sahf
and
jle
lock
loope
jg
jl
mov
lcall
es
lret
and
testl
pushf
ret
idiv
jp
jnp
dec
jle
add
addb
xchg
dec
lds
adcb
dec
jnp
test
sub
mov
mov
push
xchg
lds
lock
xchg
fsub
repnz
iret
notb
lahf
jno
mov
cmp
inc
add
xor
mov
fcoml
ss
ss
ss
movsl
insb
or
mov
or
xchg
popa
sbb
in
mov
andb
and
sahf
mov
jo
mov
js
pop
sbb
aas
xchg
pop
xchg
jmp
mov
arpl
mov
mov
lcall
push
push
xchg
sub
js
add
add
adcb
xchg
and
mov
xchg
xchg
xchg
xchg
ja
mov
mov
and
cld
fwait
in
addl
push
push
enter
mov
and
aaa
ficomps
push
dec
pop
je
push
jmp
bound
lret
dec
adc
dec
stos
mov
cltd
pushf
sahf
dec
push
jno
cli
xchg
fcoms
xchg
inc
out
lahf
movsb
adc
pop
and
rclb
dec
mov
add
pop
mov
sahf
leave
fdivl
mov
push
call
hlt
or
jmp
mov
sbb
cld
sub
sbb
pop
fcoml
setne
jo
mov
push
stc
inc
inc
lret
mov
push
sbb
xchg
fwait
inc
nop
pusha
mov
adcl
jp
rcrb
iret
lcall
je
cld
xchg
nop
ss
and
lods
sti
in
push
xchg
xchg
es
mov
es
cwtl
fwait
cmpsb
incb
push
cmp
out
mov
sbb
aaa
inc
loop
mov
jecxz
ljmp
sub
mov
movsb
aad
jae
paddusb
mov
int
in
testl
adcl
jp
lods
fdiv
cmp
push
stc
xor
bound
int
fs
pusha
and
pop
xlat
or
fs
mov
jmp
sub
add
outsb
cwtl
add
adc
jmp
mov
push
sbb
ret
pop
sbb
in
inc
xchg
dec
fdivrl
fstpl
in
sbb
inc
xor
xchg
outsb
mov
dec
fwait
bound
mov
int
xchg
fimuls
sarl
sbb
stos
es
mov
pop
or
in
add
jmp
stc
sbb
popa
es
popf
jp
sbb
ljmp
mov
fimull
scas
test
inc
sbb
jns
ficompl
jo
adc
jle
and
mov
outsb
in
movsl
out
mov
adc
loop
mov
mov
aas
sbb
pop
sbb
sbb
sub
mov
int3
loop
fildll
movsl
push
insb
loope
jbe
jb
sbb
into
es
lahf
push
sahf
mov
pusha
mov
hlt
jb
mov
loopne
adc
xchg
shll
fsubrs
lds
ficomps
inc
dec
mov
nop
push
pop
enter
mov
pusha
or
mov
or
outsb
loope
or
pop
push
xchg
add
popa
pop
mov
fdivr
push
cmp
add
pop
push
adc
mov
fucomi
jmp
loope
mov
aam
popf
cmp
loopne
inc
ficompl
pop
mov
inc
xlat
mov
mov
popa
in
jno
mov
decl
mov
and
mov
sbb
push
pop
inc
adc
ss
bound
movsl
cmpl
sbb
and
xor
fisubs
mov
push
pushf
mov
mov
fs
xor
inc
xchg
insb
xchg
fnstenv
cltd
movsb
xchg
sbb
jmp
sub
xchg
and
loope
mov
jg
mov
inc
inc
mov
lcall
mov
pop
daa
bound
ljmp
cmp
cs
mov
or
cmp
lcall
jmp
inc
mov
inc
arpl
mov
lock
mov
pop
pop
xchg
loope
jecxz
adc
ret
mov
and
sbb
data16
jbe
lock
invd
or
es
or
mov
fsubl
mov
cmpl
push
mov
mov
adc
pop
clts
adc
loopne
out
iret
mov
lock
mov
push
arpl
cld
inc
or
jl
pop
jnp
jnp
mov
inc
stc
xchg
adc
mov
jo
jp
mov
xchg
in
and
add
in
jecxz
xor
cmpb
ret
adc
ret
jmp
mov
mov
sti
xchg
jo
call
int
mov
xchg
enter
frstor
dec
jecxz
popf
movsb
mov
jae
mov
xchg
lock
das
cmp
mov
and
mov
pushf
fistps
sti
adc
fs
lock
xor
sbb
loop
hlt
push
jns
mov
cmp
sbb
mov
lods
push
cmpsl
loopne
adc
negb
enter
inc
dec
mov
inc
adc
sbb
push
fists
jl
std
rorl
xchg
fsts
bnd
xchg
xor
inc
mov
push
test
inc
jns
sbb
pop
mov
and
pusha
popf
push
mov
sbb
lret
popa
jle
sbb
and
push
mov
ficoms
inc
mov
and
push
or
faddp
loopne
pusha
hlt
push
pusha
fucomip
dec
out
hlt
xor
fisttps
stc
pop
inc
mov
pop
xor
and
mov
enter
lods
je
or
fbstp
xor
add
dec
jb
mov
lcall
and
clc
xchg
fdivl
lahf
or
test
lahf
lcall
add
fisubrl
sub
adc
cmp
xor
imul
les
sbb
mov
fisubs
and
inc
push
mov
mov
mov
mov
dec
ret
pop
sbb
and
int
mov
sti
mov
pusha
push
xchg
imul
cwtl
nop
adc
cli
lcall
movsb
and
xchg
xchg
or
jb
push
nop
sub
mov
sahf
jnp
in
jb
sub
sub
sbb
and
loope
out
in
lea
pop
xor
inc
imul
rcrb
and
mov
push
popa
and
addb
push
xchg
adc
inc
mov
pushf
mov
sbb
mov
inc
pop
sbb
popa
xchg
mov
aas
arpl
repnz
xchg
loopne
xor
add
inc
push
and
fisttpl
arpl
and
inc
sbb
push
gs
rcll
arpl
leave
fnsetpm(287
sbbl
push
fstps
icebp
cltd
and
jnp
gs
mov
movsb
inc
es
aas
inc
fnsave
ret
test
les
and
xchg
pop
addr16
aad
in
lahf
scas
jmp
pop
divl
jmp
je
lret
push
jbe
inc
movsb
xlat
xchg
inc
mov
xchg
sub
mov
and
out
xchg
sub
lods
lock
adc
movsb
jle
les
mov
sbb
inc
mov
gs
add
mov
mov
gs
enter
imul
repz
in
pop
notb
data16
cmp
loope
jbe
aad
cmpsl
gs
pop
addb
mov
xchg
lock
rorl
add
imul
xchg
adc
sarb
inc
daa
loop
jg
add
cmc
test
jmp
lret
iret
mov
out
inc
fbld
inc
dec
and
mov
cli
mov
sti
cld
or
fs
xor
arpl
jl
sarb
pushf
fbld
repz
jle
cs
lea
call
lea
je
jmp
pushf
stc
cmp
or
jmp
call
les
rclb
mov
sahf
in
push
repnz
decl
mov
and
test
adc
xchg
cmp
push
inc
or
aas
cmpsl
sub
xchg
into
mov
push
fldl
in
dec
and
pop
jbe
mov
aaa
dec
ret
push
test
or
mov
and
inc
fwait
hlt
outsb
mov
lea
popa
jns
add
lods
lock
push
cltd
and
and
mov
mul
mov
adc
xchg
pop
test
xchg
lcall
push
sti
adc
fisttpll
jl
push
mov
rcrl
sahf
daa
adc
cltd
popf
imul
inc
pop
idivl
decl
xor
loop
ds
insl
xchg
int3
shll
rol
loope
loop
jle
push
add
add
pushf
movl
pusha
pushf
movb
pushf
lea
jmp
pushf
call
jmp
mov
push
push
pushl
pushl
lea
jmp
mov
es
pop
adc
inc
mov
cmp
push
hlt
fistps
test
add
dec
xchg
mov
push
bound
lock
stos
pop
push
mov
fistpl
cmp
scas
sbb
push
cmp
inc
mov
xor
fsub
xor
fcomi
mov
dec
sbb
sub
cli
addr16
xchg
nop
adc
inc
lahf
jmp
and
shrb
adc
dec
jecxz
sub
sub
cmc
or
inc
shl
aas
mov
stos
in
cmpsl
xor
pop
enter
jp
pop
inc
add
inc
jg
loop
jge
lods
cli
call
inc
mov
stc
bt
pushf
or
movl
lea
je
movsbw
add
shrd
sub
movzbw
pushf
shr
adc
setb
lea
mov
dec
or
add
movsbw
clc
shl
add
add
cmp
ror
mov
clc
cmp
push
clc
shr
bt
cmp
bt
cmp
pusha
lea
je
pusha
cmp
call
dec
mov
neg
jmp
sbb
out
enter
popa
addr16
cmc
xor
test
sub
cmp
clc
adc
jp
jle
outsl
add
mov
pop
push
flds
test
push
shlb
jae
pusha
neg
rcrl
jne
jae,pt
mov
outsl
cmp
xor
enter
sahf
repnz
cmp
xor
fsubrs
push
or
stos
loop
jl
mov
and
add
adc
adc
insb
loope
and
dec
into
jecxz
xchg
mov
sbb
loop
xchg
je
cmp
pop
inc
lret
or
sub
into
loop
jnp
js
xchg
push
add
mov
pop
out
rclb
stc
outsl
push
insb
adc
sbb
popf
jmp
xchg
jae
icebp
mov
into
fnsave
shrl
adc
mov
fidivs
sub
jbe
push
cli
pop
xor
test
xorb
dec
sub
fcmovb
fnstcw
add
jnp
jb
int
add
xchg
loop
jnp
iret
xlat
pusha
bt
add
add
cmc
stc
add
pushf
dec
mov
movw
lea
jne
cmp
mov
test
cmp
pushf
call
imul
gs
xor
cs
insb
add
jae
adc
dec
aaa
fs
jne
icebp
mov
fsubrs
mov
lret
or
fsts
cmp
pop
dec
stc
dec
movsb
pushf
fcmovb
stc
push
xchg
out
fisttpl
cmpsb
cltd
jp
test
jmp
dec
out
mov
sahf
xacquire
pop
jnp
and
sti
adc
pop
and
pop
cmp
fs
jae
lret
cs
xchg
and
jns
xchg
das
das
push
ds
ds
cmp
outsl
test
sti
mov
xor
or
adc
xor
mov
imulb
push
pop
cli
sbb
loope
iret
sbb
sub
ret
rcrb
jl
popa
mov
inc
cli
out
cmp
jp
movsl
out
mov
mov
push
adc
push
rolb
push
cmp
pop
sub
pusha
jb
dec
cmp
push
sub
hlt
cmp
inc
sbb
mov
outsl
outsl
pop
mov
int
test
jle
cwtl
int
sbb
pop
sub
pop
jl
pop
rcrb
clc
in
jge
sub
outsl
cmp
mov
mov
xchg
psllq
insl
iret
xchg
aad
subb
stos
and
int3
push
jno
aas
push
inc
iret
cmp
movsl
cmp
sbb
rcrb
pop
arpl
cmova
cmp
push
repz
mov
mov
dec
imul
cmp
mov
fwait
and
adc
mov
pop
sub
xchg
sbb
lcall
stc
sbb
cmp
xchg
ret
and
and
inc
jo
cwtl
fisttps
cmc
mov
nop
push
pop
cmp
dec
nop
sbbl
cmc
cmp
sbb
ret
scas
push
jp
xchg
cmp
lds
xor
sub
pop
sbb
mov
jns
mov
insb
pop
aas
ljmp
lods
icebp
gs
sti
inc
xchg
cmpsb
mov
pop
negl
add
jb
lods
push
fisubs
push
xor
add
push
mov
loope
adc
mov
sbb
xlat
shll
loop,pt
std
cltd
lahf
mov
xchg
outsb
js
js
xor
push
jbe
lahf
stos
xor
imul
jae
sbb
mov
jne
push
pop
xorl
sub
jne
out
inc
mov
mov
mov
dec
add
test
cmpsb
ds
loope
pop
push
mov
mov
test
loope,pt
fs
std
ss
inc
inc
xchg
adc
mov
cli
xor
push
dec
popf
cmpsl
sbb
shll
dec
lahf
xor
stos
enter
sahf
pop
in
and
lea
insl
ja
pop
arpl
or
mov
pop
inc
lods
push
gs
push
or
arpl
inc
inc
movsb
jbe
xchg
or
clc
adcl
adc
ret
inc
shrb
xor
sub
add
cs
fistl
scas
outsl
pop
loop
jbe
adc
repz
call
lea
ja
call
lods
dec
add
cmp
bswap
and
imul
rcrl
gs
jle
in
mov
xor
push
mov
lcall
xor
inc
shrl
mov
pushf
pcmpeqd
lea
fisubrl
loop
ja
movsl
shlb
add
and
mov
pushf
mov
mov
lea
jmp
xchg
push
sbb
cld
pop
call
fimull
mov
movsl
mov
jl
push
xchg
sub
inc
les
pop
mov
outsb
adc
into
icebp
sbbl
mov
xor
mov
mov
mov
call
lea
adc
jg
mov
jae
scas
das
aam
inc
ds
sub
lock
sub
dec
ss
sub
sbb
iret
cld
inc
pop
out
cmp
pop
mov
sub
sub
sahf
add
aad
aam
and
testl
xchg
jecxz
dec
mov
or
pop
push
cltd
and
int3
cmpsl
pop
in
loop
jbe
repnz
pushf
movl
pusha
pushf
lea
jmp
inc
adc
shll
mov
mov
das
cmp
sub
int3
in
test
addb
fadd
mov
add
mov
imul
sbb
scas
shrb
aaa
adc
mov
arpl
subb
mov
loope
lds
imul
pop
pop
or
pop
mov
xchg
dec
xor
mov
mov
cmpsl
cmp
stos
sub
add
shlb
cmpsl
jg
cmpsb
mov
cmp
mov
rcrb
pop
stos
mov
fistpl
push
xchg
in
idivb
mov
loop
je
add
sub
pushl
pushf
call
jne
rcr
sbb
mov
call
das
std
pusha
or
popf
mov
pop
loope
in
fwait
mov
movsb
or
jecxz
adc
mov
dec
inc
cmp
test
call
nop
sub
mov
jecxz
decl
sbb
aaa
das
xchg
pop
in
lods
in
std
xchg
std
inc
pop
movsl
mov
loop
mov
or
sub
cmp
leave
inc
es
jmp
test
xor
int3
idivl
loop
xchg
mov
add
xchg
aam
pusha
loop
jne
push
push
mov
aas
sarl
out
pop
outsb
sti
mov
imul
movsb
scas
mov
xchg
dec
mov
pop
mov
js
adc
jp
pop
push
ret
fsubrp
dec
lret
and
pushf
pop
ficoml
mov
fsubrs
mov
rcrb
mov
adc
mov
aas
jle
inc
inc
xchg
fidivrl
jo
pop
mov
cmp
mov
mov
xchg
xchg
mov
jle
xchg
mov
frndint
or
addl
adc
clc
xorb
xor
push
hlt
gs
out
jg
ljmp
inc
outsl
arpl
inc
jo
xor
daa
and
lcall
push
notl
call
mov
adc
stos
lcall
lcall
sahf
cmc
rorb
mov
popf
sub
jne
xchg
mov
fs
call
push
add
pusha
call
pusha
pushf
movl
call
add
inc
gs
outsl
fs
gs
imul
add
or
and
out
jp
add
outsb
or
pop
sbbl
mov
cmp
mov
repz
dec
pop
push
mov
cld
lods
in
enter
jl
ljmp
mov
push
mov
outsb
sub
popf
push
and
scas
push
pop
insb
add
and
lcall
mov
mov
xchg
outsl
mov
push
inc
pop
inc
aas
mov
push
js
fldl
push
mov
loopne
out
in
mov
ret
add
cmpsl
cltd
insb
pusha
hlt
add
jbe
mov
mov
cmc
inc
mov
rol
xchg
out
sarb
popa
test
lods
and
and
jge
pop
nop
adc
stc
pop
inc
pop
xorb
jecxz
push
add
pushf
mov
adc
dec
push
call
jns
icebp
leave
pop
stc
in
scas
insb
sub
dec
aad
add
dec
xor
push
loop
jb
push
jno
movl
pushf
jmp
or
sti
sahf
pop
jbe
mov
mov
mov
es
mov
push
mov
ds
push
xchg
mov
cmpsb
mov
push
mov
push
jbe
mov
dec
outsb
sahf
mov
mov
scas
es
mov
sbb
idiv
and
jg
arpl
mov
xchg
mov
inc
xchg
ja
pop
jne
je
jl
or
sub
cmpsl
xchg
pop
jle
aas
subb
clc
pop
add
lea
popa
jle
rcll
cmp
lahf
xchg
mov
icebp
xor
cmp
mov
xor
inc
push
cmpsb
fs
xchg
inc
xchg
outsl
mov
test
or
bound
mov
subl
aas
cltd
pop
js
fwait
sub
and
sub
outsb
mov
sbb
mov
jecxz
lcall
pop
and
jne
cmpsb
jmp
sub
shl
mov
sub
mov
adc
adc
or
gs
lahf
push
fs
jge
nop
dec
out
mov
xor
dec
push
mov
call
mov
pop
jp
mov
insb
mov
scas
fmull
push
int3
jl
jae
es
rolb
sahf
mov
xchg
jg
hlt
sahf
pop
stos
adc
pop
cs
sub
pushf
mov
rcr
lds
dec
mul
lds
xchg
jle
adc
push
jnp
mov
or
mov
testl
adc
mov
cmp
das
or
std
jg
sbb
inc
push
fnsave
int3
loop
jo
adc
std
rorb
mov
adc
fldt
pop
push
sub
sub
pop
dec
mov
enter
mov
cmc
sarb
nop
adc
pop
cmpsl
jo
aam
mov
test
test
mov
popa
adc
pop
in
fldt
pop
push
in
push
sub
adc
inc
cmp
ss
outsl
repz
dec
push
shl
test
cmp
sbb
xchg
mov
inc
fsubrs
cmpsl
add
push
test
ds
insb
test
add
sub
push
stos
jmp
pop
sti
and
adc
pop
ja
popf
inc
jg
dec
xor
add
idivb
out
sbb
rcrl
cli
cmp
cmc
dec
mov
adc
fdivrp
icebp
jg
or
mov
in
dec
sarl
clc
test
pop
mov
idivb
push
xchg
pop
arpl
jne
xchg
add
les
jle
sbb
sub
inc
call
pop
inc
pop
psubusw
out
outsb
inc
jg
sub
pop
xchg
lods
mov
int
inc
lret
test
fbstp
shll
ds
mov
rcr
pop
dec
add
loop
outsl
sub
inc
call
xor
add
mov
pop
outsl
cld
mov
dec
sahf
xchg
addr16
popf
in
and
mov
fistpl
leave
imul
pop
adc
or
cld
jmp
adc
jp
shl
scas
ret
insb
xchg
push
cmp
add
scas
xchg
adc
and
jecxz
xor
cltd
icebp
xchg
jnp
fists
fisubs
xor
mov
leave
sbb
jns
push
mov
mov
adc
and
dec
mov
xchg
mov
xchg
dec
into
xor
xchg
aad
les
mov
sbb
es
decb
add
mov
xor
loop
outsb
sub
jne
jp
stc
bt
pusha
add
push
mov
bt
test
movb
pushf
call
pushf
pushf
pushf
lea
ja
push
imul
pusha
cmp
add
pushf
pushl
pushf
lea
jmp
xor
movsbw
movzbw
lea
call
pusha
pushf
lea
je
jmp
pusha
cmc
add
pusha
push
cmc
cmp
pushf
movb
pushf
movb
lea
jb
pushf
pusha
cmp
push
push
lea
jae
movsbw
mov
or
mov
not
mov
push
cmc
sub
bt
call
daa
push
pop
andl
fstpl
xchg
jge
push
ds
cmp
mov
aas
jne
stc
arpl
int
cmp
and
int3
rcr
jb
test
jb
mov
loop
insl
mov
popl
call
pusha
movl
call
popw
inc
mov
lahf
mov
xchg
sbb
and
cmpsb
cmp
xchg
es
sub
jmp
subl
scas
jae
inc
xor
out
adcl
mov
adc
push
mov
ds
xchg
mov
jle
scas
or
incb
jmp
sub
movsl
mov
mov
rorb
ret
cld
mov
ret
add
outsb
cwtl
dec
repnz
cmp
popa
fdivp
add
aaa
and
sahf
shlb
sbb
jnp
pushf
mov
cltd
cmp
or
pop
or
jo
mov
mov
and
mov
std
nop
add
dec
sahf
ss
aaa
or
mov
push
push
mov
ljmp
bound
mov
fimull
xchg
pop
or
xor
mov
jg
pop
cmc
out
xor
xchg
xchg
fildll
out
aas
sbb
test
fldl
xor
sahf
cmpsb
add
fistl
mov
push
je
clc
je
aad
inc
mov
icebp
into
in
jne
xlat
les
lcall
dec
int3
imul
jge
std
pop
cmp
mov
sbb
bound
test
mov
xor
arpl
mov
clc
sbb
arpl
fildl
fidivl
mov
mov
dec
and
loopne
ret
cmpsb
clc
sbb
add
or
inc
dec
aaa
mov
inc
fbstp
mov
sbb
xor
das
dec
notb
inc
cmp
mov
je
lret
fists
push
xor
xchg
int
jmp
pushf
movzbw
mov
pushl
movsbw
mov
jmp
push
jmp
jmp
pusha
mov
ror
cmp
not
bt
push
neg
mov
mov
inc
bt
ror
cmp
pushf
cmp
not
cmc
cmp
movw
stc
cmp
mov
lea
not
lea
movsbw
call
mov
fimuls
adc
or
and
stos
xor
addb
and
or
mov
pop
mov
xor
outsl
iret
dec
fsubl
xchg
push
mov
xchg
dec
xchg
movsb
xor
faddp
stos
mov
sahf
insl
push
or
xor
pop
fdivr
inc
push
loop
imul
jmp
pushf
movl
mov
pushf
pushf
lea
jmp
test
in
aam
frstor
mov
jp
push
testl
iret
sbb
sbb
jbe
lret
inc
addr16
scas
inc
mov
enter
xor
in
mov
aam
movsl
pusha
ficoms
cmc
testl
xor
inc
adc
dec
aaa
std
scas
or
pop
shlb
adc
into
loop
dec
dec
in
nop
inc
pop
insb
mov
insb
cli
dec
or
adc
mov
pop
leave
sbb
ss
sub
push
fs
jmp
addr16
mov
push
or
jle
test
insl
xor
out
inc
pop
test
jg
xor
xor
fdivl
sub
movsb
inc
popa
mov
orl
cld
push
add
sarb
icebp
pop
aad
cmpsl
daa
jbe
mov
pop
xchg
mov
mov
insb
mov
out
mov
mov
ss
subb
and
jno
loope
sbb
or
push
out
inc
push
jb
arpl
add
decl
mov
outsl
rorl
popf
pop
adc
jbe
add
fisubl
loopne
sbb
insb
sti
adc
imul
sub
movb
mov
mov
movsbl
pop
push
push
pushl
ret
sti
cld
add
insl
sbb
xor
cltd
enter
xor
sbb
push
imul
pop
cmp
and
mov
jne
outsb
cmp
push
insb
push
fisubrl
pop
sbbl
push
nop
or
xchg
out
mov
jo
int3
lret
pop
xchg
in
rorl
adc
pop
push
lahf
dec
rcll
pop
mov
movsl
out
jno
add
mov
and
add
stc
dec
add
movsl
dec
mov
mov
pushf
repz
mov
les
rorl
lock
sbb
sbb
cs
jns
xlat
xorb
ret
push
or
sbb
xchg
loop
push
mov
jne
in
add
daa
cwtl
inc
popa
xlat
cld
loope
pop
pop
xor
inc
dec
imul
pop
clc
sahf
out
inc
lods
aad
sub
xchg
ds
and
decb
fiaddl
mov
cmp
popa
popa
clc
rcrl
out
mov
inc
add
pop
shll
pop
fisubrl
sub
shrb
js
fs
ss
in
ss
dec
rcll
xor
mov
stc
lahf
in
dec
dec
xchg
sub
xchg
call
dec
ss
mov
lcall
mov
jb
jmp
cld
inc
inc
and
loope
xchg
idiv
je
add
movw
lea
jmp
push
call
inc
xor
mov
push
cmpsl
fildll
enter
icebp
repnz
test
scas
div
dec
int
and
pop
shl
mov
mov
sub
dec
aas
mov
add
cmp
loopne
xor
mov
jb
ss
or
repnz
and
cltd
jecxz
repnz
push
mov
mov
dec
xor
in
add
cli
jl
loop
mov
lea
je
push
pushl
push
sub
pushl
cmp
push
lea
ja
bt
call
push
mov
lea
jae
pusha
jmp
sbb
les
lds
sub
mov
lcall
jae
orl
aad
sbb
call
push
inc
pop
xchg
jge
add
insl
movsl
and
icebp
sti
push
push
mov
inc
inc
jmp
std
pop
xchg
lret
inc
jle
jbe
pop
shrb
mov
mov
sbb
sbb
push
mov
xor
jbe
xor
push
jae
jo
out
xchg
add
loopne
add
sbb
jp
cwtl
lock
repz
arpl
dec
icebp
ja
xor
in
jne
sahf
repnz
movsl
push
sub
test
xchg
sub
mov
in
sahf
mov
mov
mov
push
movl
pushf
pushf
mov
pushf
mov
pushl
pushl
ret
les
xchg
mov
jmp
nop
lahf
xchg
sbb
cmp
or
pop
mov
dec
jno
xchg
aas
mov
clc
dec
jle
sarl
fcoml
jno
ja
pop
inc
lahf
pop
int
shrl
mov
in
pusha
fbld
les
je
aad
jb
bound
inc
push
adc
mov
les
dec
frstor
jne
cld
enter
sbb
call
insb
sbb
add
adc
xchg
pop
inc
dec
icebp
adc
adc
mov
sbb
iret
bt
pusha
add
push
mov
movb
lea
je
clc
cmc
test
add
push
pusha
lea
jmp
popa
inc
sub
int3
push
ljmp
loopne
std
fisubs
aas
outsb
jg
test
cltd
test
aad
dec
cmovp
js
adc
mov
scas
je
std
xchg
pop
inc
outsl
sbb
push
loope
mov
xchg
pop
test
cmc
adc
ret
inc
add
push
aas
dec
das
aas
movsb
or
mov
adcb
pop
or
aad
mov
je
in
insb
sub
dec
ss
jno
aas
lods
aaa
mov
mov
popf
movb
pushl
popl
push
mov
mov
movb
pushl
ret
movl
push
push
pushf
movl
lea
jmp
push
mov
setb
call
clc
rol
jmp
inc
cmp
mov
imul
or
movsl
cmpsl
add
rolb
test
in
jo
ret
mov
push
add
inc
ss
jo
jo
std
jns
and
pop
ljmp
mov
and
xor
mov
mov
adc
ret
mov
aam
mov
pop
fistpll
mov
and
push
jnp
and
dec
es
add
insl
and
mov
test
and
pop
loop
lret
adc
call
adc
pop
xchg
fdivrl
adc
mov
xchg
and
in
sub
aaa
jne
sbb
push
testl
ljmp
or
pop
and
mov
mov
jg
sti
inc
add
mov
mov
or
lods
movb
test
push
jmp
pushf
cmp
pusha
lea
jbe
pusha
shrd
sub
pop
sar
mov
add
btr
inc
mov
cmc
add
sub
not
bsr
bsf
shr
xchg
rcl
adc
mov
clc
cmc
add
lea
push
mov
lea
call
lcall
mov
in
rcll
xchg
insl
icebp
iret
in
mov
sub
mov
xchg
hlt
mov
mov
xor
adc
push
cs
add
inc
jge
jl
data16
jns
mov
mov
mov
jo
shrl
pop
xor
inc
lea
jle
insb
lds
mov
es
aas
mov
jmp
fsubrl
xchg
sbb
mov
pop
shrl
idivl
sbb
pop
mov
xor
lock
xchg
data16
cmp
mov
adc
sbb
stos
ja
call
adc
sbb
xor
or
pop
inc
aaa
nop
sahf
sbb
cltd
xchg
cmp
mov
jl
jne
insb
sbb
dec
add
push
in
cmpsl
rorb
inc
icebp
jne
pop
add
loop
popa
cmp
jmpw
cld
lcall
movl
pusha
jmp
pop
mov
push
pushf
lea
jmp
lea
mov
not
jmp
mov
call
in
xor
cld
icebp
das
cld
adc
enter
cmpsb
lock
xor
out
mov
cmp
lret
fsubl
pushf
cmp
sub
movb
dec
mov
inc
mov
loop
popa
ds
movups
sub
repnz
and
or
mov
push
pushf
mov
flds
push
xchg
test
mov
add
adc
mov
in
into
add
rcll
jl
repz
cmp
mov
cmp
test
loopne
sahf
cmp
push
push
and
xor
mov
inc
add
xor
jge
pop
add
into
adc
jp
push
imul
into
movsl
repz
pusha
push
and
jp
push
and
dec
sub
movb
pushl
pushl
lea
jmp
lea
jne
bswap
rcr
add
mov
bt
or
pusha
pushf
pusha
lea
je
movsbw
xchg
lea
movsbw
movzwl
not
pusha
movsbw
lea
push
pusha
not
call
pusha
lea
ja
mov
movzbw
pop
lea
pushf
pusha
mov
jmp
movb
lea
je
push
lea
jmp
add
pusha
push
lea
jmp
lcall
pop
lds
mov
jb
jecxz
fistps
jge
jl
imul
jecxz
cmp
sbbb
pop
mov
sbb
jmp
js
adc
mov
call
pop
xchg
jne
clc
shrd
test
rol
xor
shl
rol
movzbw
lahf
mov
setne
bt
rcr
add
dec
mov
call
push
ja
jge
adc
pop
cltd
shlb
pop
jo
fcmove
insl
sahf
cli
mov
xor
sub
ds
cld
call
fsubl
ret
subl
insl
fldcw
pop
sub
push
xchg
adc
out
jge
loop
pop
mov
xorl
and
push
xchg
xlat
nop
sbb
ficompl
mov
movsl
pop
scas
fsubl
dec
add
in
push
dec
push
cmp
pop
movsb
add
fidivrl
cli
out
inc
adc
adc
cmpsb
pop
and
loopne
push
sbb
mov
das
xor
fs
lret
cmpsl
hlt
shll
mov
add
out
in
adc
hlt
mov
fsts
fwait
call
popf
aam
pop
repnz
lret
loop
out
loop
pop
or
mov
pushf
movb
pusha
pushl
ret
pusha
cmp
lea
pushf
jmp
ja
mov
repnz
mov
jb
fsts
cmp
lret
stos
sub
lahf
cmpsl
mov
jnp
sbb
pop
inc
imul
xchg
mov
adc
add
bound
std
mov
sti
push
mov
mov
scas
mov
xchg
aas
dec
faddp
fcom
mov
fincstp
ja
xor
dec
out
fs
pop
test
and
notl
hlt
push
imul
ret
clc
push
scas
inc
sub
cmp
push
xchg
sub
pushf
sarb
mov
push
loope
and
jb
or
mov
xchg
push
and
xchg
repnz
push
and
bound
mov
popf
jecxz
mov
pop
aas
add
and
pop
rcll
push
stos
mov
decb
sbb
sub
movsl
xchg
cmp
js
imul
data16
negb
cmp
adc
xchg
pop
dec
imulb
mov
mov
pop
add
add
add
xchg
popa
mov
movzbw
pusha
bswap
mov
movsbw
bswap
mov
lea
jge
pushf
movw
mov
push
pop
lea
pushf
mov
pusha
pushl
ret
stos
lock
push
mov
les
loop
sbb
sub
push
xchg
jl
outsl
addr16
lds
cli
loopne
ds
movsb
fstps
out
add
inc
sbb
daa
adcl
mov
shrb
push
sub
mov
push
cmp
xchg
rcl
mov
cld
es
mov
jb
pop
cmpsb
mov
jae
sub
repnz
cmp
test
loop
pop
cltd
xchg
mov
pusha
not
mov
mov
lea
call
mov
jmp
pusha
mov
call
movl
pusha
movl
pusha
pushl
mov
push
lea
jmp
xchg
shld
xchg
shl
mov
test
mov
neg
mov
call
pusha
bt
clc
xor
lea
pusha
mov
pusha
call
mov
jns
out
dec
or
xchg
mov
mov
rorl
rcrl
xchg
test
stc
pxor
xchg
lret
push
mov
jl,pn
ret
test
dec
xor
dec
lcall
fs
adc
sbb
inc
das
into
pop
add
xor
orb
imul
insb
pop
inc
lods
call
sbb
in
cmp
lret
inc
lods
mov
cld
sahf
aam
push
inc
adc
mov
ficoml
rol
imul
clc
mov
cwtl
ljmp
or
xor
clc
les
mov
lcall
lea
mov
mov
mov
and
icebp
mov
add
sub
cld
call
bnd
pop
dec
mov
loopne
clc
and
fwait
lea
push
add
lcall
or
mov
stos
jg
lods
addps
pop
inc
arpl
mov
int
adc
int
mov
loope
xchg
xchg
daa
in
pop
sbb
dec
ficoml
dec
sbb
xchg
sub
mov
cmpsb
cmp
mov
mov
mov
pop
jae
jnp
or
aad
and
or
and
movsl
sub
or
les
imul
push
dec
add
pop
je
push
pusha
repnz
loopne
mov
adc
stos
mov
fwait
rcll
std
or
jecxz
arpl
faddp
call
jne
push
lret
sub
jle
mov
out
in
cmp
jmp
or
mov
insb
mov
dec
cli
and
adc
jmp
lret
dec
mov
sbb
in
test
fwait
jg
adc
loope
adc
adc
pop
cwtl
std
push
call
stc
jns
inc
sbb
pop
mov
sbb
les
sub
mov
pop
mov
lret
aad
xor
inc
adc
sub
sub
jp
inc
jo
adc
ror
in
movsb
jnp
dec
in
les
sub
sbb
pop
mov
lods
out
add
push
cmp
fisubrs
fdivr
in
rclb
dec
jbe
inc
add
dec
fdiv
shll
and
in
ror
and
sbb
mov
pop
sub
shlb
repz
mov
dec
aaa
insl
stos
add
inc
push
aam
cmpl
test
mov
stos
mov
push
idivb
mov
inc
scas
test
ja
leave
fstpt
push
cwtl
jns
cs
sbb
stos
rsqrtps
sub
int
jp
add
mov
loopne
cmpl
lcall
inc
lahf
fwait
jle
rcr
cmp
pop
cmpsl
dec
jbe
aam
aas
hlt
fistpl
mov
sarl
jo
adc
test
mov
fidivs
inc
fsts
inc
mov
mov
mov
mov
jge
or
pop
mov
xchg
push
jns
jb
popa
hlt
jmp
cld
sub
rclb
push
inc
pop
mov
adc
faddp
xchg
call
stos
jecxz
repz
fsubl
xor
insb
jmp
mov
mov
shlb
in
inc
scas
cmp
mov
cmpsb
scas
out
imul
adc
sbb
sub
jp
push
imulb
jl
mov
sbb
orl
cmp
in
mov
bound
fwait
repz
or
xchg
insl
push
and
xchg
int3
js
call
fucomip
ficoml
mull
mov
movsl
neg
xchg
hlt
xchg
repnz
test
adc
or
ja
jne
mov
sbb
fs
pop
pop
add
mov
int
mov
cwtl
es
adc
inc
pop
insl
push
clc
sub
xor
or
xor
outsl
pop
ret
out
or
mov
movsb
lret
out
dec
jbe
add
rolb
aas
int3
jae
mov
mov
push
js
inc
pushf
pushf
test
dec
int
xchg
inc
pop
aas
mov
enter
ja
xor
and
adc
inc
mov
jecxz
enter
lea
pop
sbb
xor
cmp
js
push
fcomp
je
arpl
cmc
push
aas
or
xor
xchg
dec
rcrb
stc
fistpll
push
inc
jl
faddp
mov
cmpsb
jb
add
addb
andb
sub
xchg
sub
cmp
icebp
jae
adc
pop
ds
or
jecxz
sbb
sbb
sarl
shlb
mov
and
cmp
pushf
push
inc
add
out
cmpsb
mov
jg
inc
arpl
xchg
add
xlat
mov
hlt
sbb
sar
jp
clc
push
sbb
pop
fstpl
mov
pushf
or
add
movsl
xchg
add
cmpsb
outsb
pop
xchg
mov
lock
mov
sti
and
scas
xor
sbb
dec
adc
mov
or
fiadds
push
dec
lea
push
aaa
add
mov
daa
or
xchg
loope
lcall
ds
repnz
or
nop
loop
cli
xlat
push
dec
mov
sarl
sub
dec
jg
inc
repnz
push
data16
adc
out
fdiv
mov
fists
cs
in
sbb
jge
fcoml
cmp
lcall
aad
sbb
insl
inc
cmc
ss
or
rorl
pop
je
cmpsb
jge
lock
nop
fidivrl
xchg
jg
and
scas
ljmp
jae
pop
mov
imul
sbb
mov
push
inc
mov
pop
outsb
imul
mov
add
xchg
stos
jg
fwait
ret
icebp
add
inc
lds
adc
pop
or
mov
cs
ss
jle
cmpsb
mov
int3
jge
jp
and
shrl
out
pop
push
pop
mov
or
adc
sbb
rol
or
cltd
lahf
adc
push
or
gs
xor
out
xchg
push
mov
rorb
or
inc
mov
pop
cs
jns
sbb
les
stos
imul
sbb
and
mov
fldt
push
jmp
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pop
and
pushl
lea
pushf
mov
jmp
mov
push
push
pushl
ret
movw
movl
pusha
movb
pushf
push
lea
jmp
pusha
pusha
pushf
movl
call
mov
add
xor
popa
xchg
leave
test
into
shl
adc
or
lret
add
mov
cmp
add
xchg
push
movsb
in
les
movsb
ret
cmpsl
ss
fnstcw
adc
ja
into
jbe
push
or
cld
adc
les
imul
push
lds
cmp
xchg
adc
ret
push
and
add
pop
in
xor
xor
das
lock
mov
call
and
sbb
and
ja
cmp
andl
out
out
inc
sub
jecxz
jge
pop
lret
mov
maskmovq
mov
xor
nop
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
test
test
mov
add
add
mov
lods
lret
or
stc
divb
or
adc
idivb
sarl
jne
fwait
jmp
adcl
call
and
pushf
stos
pushf
call
imul
movmskps
shl
mov
andl
stos
sbb
adc
inc
fsubr
cmc
dec
xchg
ja
aam
mov
aad
fadd
stc
push
inc
in
push
mov
jnp
lods
neg
aaa
dec
lds
xchg
push
cmp
scas
mov
fucomp
mov
sub
scas
add
add
in
fdivrp
inc
filds
ljmp
decl
mov
mov
pop
mov
fs
outsl
cwtl
inc
push
leave
lret
imul
inc
xor
test
dec
mov
jns
repz
inc
add
jb
push
xchg
inc
lret
jae
call
fisttps
cld
xchg
fbld
mov
adc
loope
jne
pop
sbb
sbb
xchg
or
stos
jbe
sub
xor
out
mov
inc
lcall
cld
imul
mov
mov
inc
dec
mov
xorb
mov
jbe
and
imul
fmul
xor
int3
adc
iret
test
mov
mov
sahf
sti
cmovns
lret
ss
sarb
gs
pop
or
bnd
or
mov
gs
jmp
movzbl
not
lea
jmp
push
mov
mov
lea
pusha
movzbw
mov
push
pushl
pushl
ret
pop
inc
in
jae
idivb
cld
out
aam
aas
sub
jecxz
dec
mov
fistps
push
ljmp
mov
mov
jmp
lea
ret
cmp
cmpsb
xchg
cmp
fstps
or
cltd
lea
push
in
sub
inc
mov
stos
loop
push
aas
and
stc
bt
cmp
jmp
sbb
testb
mov
xchg
push
xlat
pop
xchg
out
pop
aam
fstps
das
aaa
mov
cmp
test
adc
call
or
or
fcompl
or
cmp
xor
inc
or
sti
in
fisttps
loop
ja
ret
sahf
add
jmp
push
loop
dec
fmuls
movb
push
lea
jmp
pusha
movl
movl
pushf
movb
lea
jnp
push
push
pushl
lea
jmp
bt
repnz
push
call
push
movw
movl
pushf
pushf
pushf
lea
jmp
stc
mov
jmp
call
jmp
fmul
sar
rcll
sbb
arpl
fstl
cmp
xchg
cmp
dec
mov
push
jg
outsl
ret
outsb
mov
and
ljmp
jb
jbe
inc
lds
lock
data16
rolb
mov
imulb
lea
ja
pusha
mov
imul
test
push
sub
jb
pusha
add
push
lea
jmp
movl
push
lea
jmp
sub
fisubrl
mov
push
pop
inc
xchg
dec
push
outsl
or
insb
xor
repz
popf
jo
xchg
clc
clc
jnp
cmp
cmpsb
scas
or
pop
aad
xchg
cmp
cmc
aad
out
roll
pop
loop,pn
sarl
inc
or
mov
fnsave
das
mov
test
cld
inc
or
imul
jb
loope
cwtl
out
sbb
loope
sbb
das
dec
ljmp
shl
xchg
loop
dec
xchg
inc
sbb
inc
and
sarb
and
push
pushf
lea
jmp
call
jmp
xlat
out
pop
mov
test
pop
cltd
mov
movsl
insb
add
cmp
pop
arpl
dec
cmp
jmp
loopne
sub
add
sarl
xchg
fbstp
ret
std
andl
jns
pusha
xorb
mov
mov
in
repz
bound
jmp
xchg
rol
aas
jo
xchg
pop
imul
mov
daa
adc
dec
rorb
xchg
repz
movsb
sbb
pusha
test
shrb
repnz
out
push
out
cltd
in
cmp
add
insb
bound
pop
dec
adc
lcall
and
mov
xor
ret
add
adc
aas
dec
xor
stos
xor
cmp
movsb
mov
xchg
rclb
cmp
aaa
divb
sub
jne
into
mov
lds
sti
ss
push
stos
xchg
push
jecxz
ja
dec
xor
lods
insb
into
pop
imul
or
imul
xchg
push
jae
xlat
mov
mov
jge
sbb
in
mov
repz
movsb
cmp
aas
and
divb
or
jp
into
mov
sahf
sub
dec
jp
mov
adc
pushw
cmp
loop
dec
cli
push
cmp
push
lea
jb
push
cmc
cmc
cmp
pusha
pusha
jmp
pushf
pushl
mov
lods
cmc
add
stc
clc
rol
pusha
push
call
jmp
jmp
cmp
lods
xchg
ja
inc
push
int
lods
adc
clc
jmp
pusha
shrb
jecxz,pt
sarb
jo
scas
or
xor
scas
add
inc
nop
xchg
sahf
repnz
fstpl
clc
dec
mov
arpl
sbb
xchg
push
loop
dec
movsl
cmp
rorb
add
add
mov
cmc
lcall
test
jmp
enter
pusha
pushf
pusha
movw
lea
jmp
not
xor
mov
shrd
mov
stc
mov
pushf
stc
sub
bt
cmp
pusha
repnz
jmp
add
add
push
add
add
add
pop
adc
add
push
push
add
movsl
adc
mov
push
add
push
add
aaa
push
add
push
add
add
add
pusha
or
lcall
fs
je
bts
das
xor
shl
mov
pusha
aaa
movzbw
movzbl
mov
ror
sar
ror
or
shr
lea
cmp
pusha
jmp
movl
sete
cwtl
lea
pusha
pushl
movl
movb
pushl
popl
pushf
pushl
movb
pusha
pushl
ret
push
mov
pushf
mov
lahf
movzbw
lahf
pushl
popl
pushf
lahf
call
pushf
shl
lea
shl
bsf
mov
dec
mov
setns
bt
push
jmp
test
clc
pusha
cmp
pushl
push
lea
jae
call
xorl
pop
mov
xor
jno
mov
js
test
inc
mov
cs
inc
mov
inc
xchg
xchg
xor
mov
xlat
mulb
sahf
jo
or
fnstenv
inc
arpl
mov
xchg
dec
adc
leave
pushf
push
pusha
pushf
lea
jmp
xor
and
int
cmpb
mov
rcrb
inc
adc
jl
jb
mov
lcall
dec
rcrl
mov
std
dec
mov
outsb
add
push
aad
or
adc
test
out
sahf
insl
cld
data16
mov
dec
cmc
in
lods
sub
fninit
or
cmpsl
pop
sbb
dec
and
mov
repz
int3
mov
mov
jne
lcall
test
and
jae
fwait
cmpsl
cmp
push
pop
subl
lock
mov
push
wrmsr
mov
jle
lds
cmc
mov
sahf
inc
sub
ss
add
mov
xchg
nop
ret
pop
push
std
and
inc
xchg
jo
les
inc
lock
xor
cmpsl
xchg
lds
jbe
sub
mov
shrb
lret
loop
jb
aad
cs
and
lock
imul
lods
outsl
push
dec
fisubs
xorl
ficompl
aaa
popf
jnp
xchg
imul
fiadds
movsl
inc
pop
push
rcrb
add
out
mov
clc
jb
mov
js
mov
inc
loop
dec
mov
or
mov
xchg
sbb
push
sbb
andl
push
pop
cmp
out
test
test
mov
ja
adc
into
mov
push
xlat
mov
fstps
dec
insb
cmpsb
adc
jmp
add
pop
inc
nop
add
sub
sbb
add
popf
test
es
mov
and
ds
outsb
in
add
icebp
cld
daa
movsl
pop
fistl
adc
rol
jl
mov
imul
sub
cmp
sbb
into
cltd
movsl
mov
js
loop
dec
lret
jne
gs
xor
fs
insb
add
inc
cmc
out
mov
cmpsb
int3
scas
rolb
cmp
out
cwtl
mov
and
mov
mov
pusha
cmp
sbb
in
xchg
test
sub
add
jmp
lahf
cmp
mov
test
outsl
mov
mov
mov
xor
mov
lret
lea
jne
shld
bswap
sub
add
and
mov
shl
cmp
test
add
call
jae
fnstenv
or
cltd
jno
pop
sub
stc
xlat
repnz
lods
std
jg
add
xor
hlt
pushfw
pusha
lret
imul
cltd
xchg
pop
adc
sbbl
push
sbb
jp
fwait
and
ret
mov
fdivrs
cmp
sub
test
out
xor
add
repnz
mov
stos
int
sbb
cmp
mov
mov
sub
lea
jg
cmc
incl
xchg
andl
inc
xchg
ror
pop
push
int
and
jle
sarl
shrl
scas
cs
inc
out
adc
test
dec
cmp
push
push
negb
test
les
cmpsl
or
mov
cmpsb
scas
or
pop
mov
rorb
divl
xchg
and
push
and
repnz
cmp
pop
sbb
mov
loopne
mov
call
inc
and
sti
pop
add
lea
jmp
push
leave
adc
out
pop
pop
icebp
sbb
sub
test
jecxz
jns
cmp
and
xor
sahf
call
add
jg,pt
jbe
cli
mov
shll
std
cmp
xor
push
popf
jecxz
sbb
in
dec
push
out
xorl
stos
imull
push
mov
popf
mov
aas
xor
or
inc
lods
add
xlat
nop
push
xchg
sub
js
pop
cmp
out
call
lcall
adc
xchg
rcll
aaa
xor
fld
stos
ret
sub
fs
or
cmpsl
lea
nop
dec
or
jnp
sub
daa
mov
enter
mov
out
rcll
or
jge
push
or
out
in
mov
fbstp
das
call
fidivl
scas
fstpl
sub
mov
into
sub
or
xor
add
adc
pop
mov
fisttpll
xor
and
test
pop
push
or
data16
stc
in
out
sahf
lea
or
inc
or
mov
stc
icebp
icebp
jecxz
dec
icebp
lods
cmp
out
cmp
push
lea
pop
js
mov
push
dec
add
mov
dec
adc
mov
insl
add
sub
mov
addb
cmp
pop
push
aad
push
lcall
cmc
scas
shlb
push
out
daa
scas
and
dec
jmp
aas
and
cmp
loop
inc
add
xchg
pop
pushf
pusha
pushf
movl
pusha
call
xchg
pushf
mov
pusha
jmp
lahf
xchg
lcall
out
sbb
mov
jle
cmc
push
lock
int3
and
cs
jp
ja
adc
hlt
jmp
adc
inc
scas
outsl
lods
pop
xlat
xchg
stos
push
dec
loope
dec
les
arpl
jge
xlat
lret
aas
push
divl
pop
pop
sbb
lret
and
je
adc
std
jmp
pop
popf
pop
pop
pushf
inc
mov
pop
xlat
in
scas
cltd
sbb
ds
mov
add
lock
adc
popa
adc
loop
inc
add
pop
shl
pushf
mov
lods
bt
add
jmp
add
movw
mov
pushl
lea
jmp
shld
or
shl
push
lea
cmc
pusha
sub
cmc
pushf
bt
push
pushl
popl
cmc
cmc
clc
cmp
mov
call
movl
lahf
call
pusha
mov
dec
leave
adc
sahf
jl
xchg
stos
pop
jecxz
add
pop
stos
jae
pop
sub
inc
cmpb
and
pop
jno
icebp
sti
pop
mov
shrb
add
lds
adc
test
lods
aad
mov
loop
inc
xchg
dec
adc
inc
and
movw
call
movl
jmp
lds
adc
lahf
out
mov
cld
pop
cmp
cltd
jmp
and
xchg
or
sti
xchg
jae
movaps
dec
lcall
cmc
pop
xchg
fiaddl
cmp
stos
xchg
fldl
out
cmpsb
fidivrs
dec
and
mov
or
mov
sbb
mov
dec
fidivrl
pop
cld
pop
sbb
xchg
and
or
adc
repnz
mov
aam
popf
in
and
mov
mov
mov
adc
bswap
movsbw
mov
stc
cmpb
call
inc
icebp
fwait
xchg
addl
fcmove
in
xchg
jmp
sbb
inc
or
popa
adc
xor
popf
aaa
mov
mov
test
gs
insb
lock
jge,pt
dec
arpl
push
inc
push
movsl
add
cmp
fwait
push
jg
loop
inc
mov
sbb
add
lea
jne
push
xor
sub
test
bsr
stc
mov
stc
call
cmc
mov
pusha
jmp
dec
add
push
inc
lret
xor
mov
ljmp
sahf
and
jo
cmp
pushf
repnz
and
sbb
or
out
push
mov
dec
cmpl
sbb
cld
outsl
push
inc
sti
jae
in
in
mov
xor
addr16
outsb
inc
rclb
aaa
insl
lahf
ret
stc
pop
adc
ficompl
and
xchg
inc
cli
dec
loopne
leave
arpl
in
loop
and
lods
pop
lcall
push
and
push
iret
push
fsubp
mov
sbb
ljmp
loopne
rcrl
bound
jnp
mov
inc
scas
pminsw
or
lahf
sbb
out
lds
or
push
insb
lods
test
jnp
ljmp
test
stos
inc
push
cmc
and
push
push
and
xchg
lcall
test
idiv
jmp
rol
sbb
and
rcl
mov
call
not
call
movl
mov
lea
jmp
push
setg
mov
lea
push
setae
movzbw
pushf
mov
xchg
lea
pusha
pop
mov
mov
jmp
cmp
call
test
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
sti
jnp
popa
lret
cmp
js
leave
xor
push
jnp
or
sti
stos
cld
and
mov
xchg
jp
adc
add
adc
xor
sbb
std
arpl
les
in
xchg
subl
xchg
and
out
cmp
imul
sub
cmp
pop
inc
mov
loope
cmp
pushf
jle
sub
xchg
inc
mov
mov
mov
andps
mov
mov
into
mov
enter
sub
ret
aaa
mov
add
jns
fs
outsl
push
or
mov
sti
push
xchg
jne
sub
sub
mov
stc
mov
sbb
sub
add
mov
mov
pop
bound
and
scas
imul
scas
out
inc
add
mov
ja
mov
or
sub
add
add
add
dec
sarb
outsb
push
dec
in
jae
in
cmp
sbb
outsl
fmuls
sub
data16
xchg
and
mov
or
in
clc
ret
js
mov
mov
adc
mov
xchg
xchg
adc
ljmp
pop
test
lods
cwtl
add
cmpsb
jmp
rorl
xchg
rcl
rol
jno
adc
inc
mov
and
mov
outsb
ret
lods
push
sub
mov
subb
loopne
sbb
mov
loop
jns
xchg
ret
dec
rol
mov
call
push
mov
jmp
or
scas
adc
ss
lret
dec
ret
dec
dec
jns
lahf
ret
cmp
pop
mov
xchg
les
stos
xchg
lret
adcl
push
mov
les
or
and
out
mov
rol
int
stos
xchg
inc
lcall
push
jmp
fs
mov
int
loopne
iret
aaa
and
sbb
cmp
into
loope
ljmp
jnp
xor
push
fistpll
xlat
adc
test
loope
sub
mov
push
inc
push
mov
adc
es
or
mov
data16
xchg
mov
jle
decl
or
xchg
gs
mov
fiadds
int3
out
out
popf
jmp
jbe
sti
sub
xorb
pop
xchg
and
mov
xchg
dec
jns
mov
call
insl
in
inc
es
jo
push
hlt
adc
add
jmp
mov
dec
jp
jg
or
add
sbb
aam
popa
arpl
push
mov
xlat
pop
loopne
xchg
scas
cwtl
sbb
pop
lds
dec
pop
mov
push
out
ja
notl
cmc
les
and
push
xor
cmpsb
xchg
pop
fistl
jg
popa
pop
inc
sub
mov
std
addr16
mov
lea
je
lea
movzbw
lea
movsbw
movzwl
push
bswap
movsbw
lea
lea
movl
bswap
mov
mov
pusha
lea
call
jmp
jmp
mov
jo
je
mov
or
cmpsl
cmp
mov
iret
sbb
add
mov
icebp
ds
mov
xchg
sbbl
sbb
or
ja
xor
sbbb
fcmovnu
test
cmp
mov
clc
adc
insb
push
les
add
shr
cli
xor
rolb
das
fstps
xor
mov
test
jecxz
loop
cmp
bt
and
cmc
clc
test
call
add
jns
add
add
add
add
add
add
add
insl
push
add
insl
push
add
insl
push
add
add
add
add
insl
push
add
xchg
mov
cmp
jo
fidivrl
cltd
cld
adc
add
sub
fsubl
inc
dec
mov
in
ljmp
jno
ds
jnp
push
sbb
and
sti
out
fcompl
jnp
loopne
es
jbe
jmp
pop
fbld
add
mov
daa
and
mov
lret
cmp
inc
es
rcrl
rorb
or
and
xor
repz
loope
dec
ds
mov
push
popf
sahf
sahf
add
add
mov
dec
lods
inc
mov
and
lods
dec
lret
dec
mov
mov
imul
imul
xor
test
cmp
adc
and
jae
shll
or
cmp
mov
cmp
xchg
imul
iret
pop
push
lahf
xor
cmp
cmpsl
je
fstps
popf
and
rorl
dec
fld
inc
pop
pushf
mov
lcall
inc
or
insb
movsbl
cmp
or
mov
arpl
in
mov
xchg
cmp
addb
lock
mov
fs
fbld
jo
sbb
sahf
in
scas
xchg
cmp
aaa
ljmp
bound
cs
xchg
ficoms
cmpsb
mov
push
mov
sub
iret
adc
out
in
xchg
mov
hlt
scas
loopne
nop
pushf
pop
mov
xor
mov
ficomps
inc
dec
scas
lret
out
cmp
mov
out
ss
sbb
inc
loope
jecxz
loop
repnz
repnz
ror
add
loope
int3
xchg
sahf
mov
cmp
cwtl
xchg
inc
mov
data16
push
and
and
dec
push
jns
cltd
inc
sub
xor
dec
fwait
jne
cmp
repnz
jae
cmp
cmp
sub
dec
cmp
cs
mov
roll
out
mov
mov
mov
push
sub
arpl
jg
hlt
pop
jb
orb
pop
into
jecxz
xor
sahf
shlb
mov
cmovbe
lret
adc
loope
cld
int
je
lds
xlat
adc
sti
sbb
sarl
mov
cmp
mov
aaa
push
mov
aas
and
jbe
xchg
pop
pop
and
lret
mov
shl
ret
ret
adc
jne
test
jae
sub
mov
sbb
jne
es
cmp
and
sahf
add
cwtl
movsl
jo
decl
jge
or
inc
lds
out
push
cmp
lahf
cmp
or
sbb
xor
dec
in
or
add
lods
pop
mov
hlt
or
inc
mov
adc
push
lods
lods
rorl
jg
ljmp
lods
sbb
mov
pop
sub
test
jno
cld
pop
std
sub
clc
arpl
insb
imul
or
cltd
shlb
rolb
mov
push
lahf
inc
inc
insb
shr
xchg
mov
jne
pusha
jecxz
icebp
and
sub
sbb
jmp
out
mov
and
mov
pop
pop
clc
mov
xchg
push
mov
into
pop
mov
jle
mov
push
push
test
data16
sub
insl
rolb
push
ljmp
sbb
pushf
adc
gs
fwait
mov
jnp
lcall
in
xchg
dec
sub
pop
add
out
les
ljmp
xlat
sbb
or
xchg
xchg
lock
pop
inc
add
into
mov
shrl
mov
stos
xchg
movsl
mov
into
push
push
dec
xchg
mov
push
xchg
mov
jns
mov
jbe
xor
jmp
mov
dec
push
xor
mov
mov
add
popl
inc
push
pop
rolb
jnp
mov
into
addb
fwait
lret
insl
shlb
shll
adc
mov
push
les
test
gs
and
inc
sbb
out
notb
sbb
dec
sub
xchg
divb
jle
inc
sbb
mov
cwtl
pop
je
sub
inc
ljmp
mov
dec
and
or
dec
das
rorb
mov
call
pushf
xor
push
mov
int3
subb
or
dec
jnp
xchg
repz
jg
inc
and
and
aam
pop
mov
movsb
pop
xchg
iret
in
ljmp
fnsave
xchg
cmpsb
mov
ss
jg
add
xor
pop
push
es
mov
js
jns
xchg
int
add
out
aam
gs
sub
fcmovb
mov
fsubrl
xor
pusha
adc
in
jl
es
test
outsb
sub
and
push
shlb
nop
repnz
out
dec
mov
dec
push
cli
add
inc
fsubrl
vpcmov
shl
repz
ret
add
and
xchg
jl
int3
gs
imul
mov
and
xlat
sti
addr16
lds
or
nop
xchg
ds
scas
jge
ret
and
cmpsl
mov
into
das
fsubrl
push
imul
loop
mov
jae
pop
jne
sbb
ffree
sub
or
enter
jge
fnstenv
mov
add
data16
mov
icebp
fisubl
nop
mov
inc
rcrb
mov
cltd
dec
pop
mov
mov
inc
pop
jecxz
or
push
lods
in
or
fwait
add
sbb
mov
mov
xchg
sarl
call
popf
dec
sbb
mov
push
and
cmc
fnstenv
test
dec
push
clc
adc
push
lea
push
das
hlt
mov
imul
sub
idivl
out
jbe
or
mov
rorl
pop
jl
ret
fwait
push
xor
lock
enter
adc
push
sarb
xchg
xchg
pop
xchg
aam
mov
psadbw
sbb
pop
cwtl
dec
push
pop
and
xchg
sub
pusha
cltd
sub
mov
orps
sti
inc
iret
mov
xchg
idivb
and
and
pmulhw
in
mov
lods
cmp
into
stc
in
jbe
sti
lods
loop
mov
lds
in
fwait
inc
add
or
mov
ret
lret
out
mov
fcomp
bound
fwait
pusha
pop
sub
jp
les
pop
jp
shlb
call
ljmp
jns
lods
push
imull
xchg
adc
mov
aas
push
icebp
jb
inc
mov
ljmp
pushf
das
cmp
lret
jnp
mov
lods
lds
leave
lahf
adc
mov
test
loope
notl
adc
scas
stos
lock
je
mov
push
repz
inc
jecxz
out
pushf
aad
lret
dec
out
in
sub
xor
cmc
and
mov
mov
sub
hlt
xchg
scas
jmp
int3
inc
and
repnz
mov
pushf
jnp
in
cmp
or
push
ljmp
xchg
pop
pmaxsw
inc
je
hlt
mov
jo
add
cmp
xor
fisttpl
out
lret
jo
and
sbb
into
inc
cmp
icebp
mov
fs
jp
and
dec
push
or
mov
adc
test
pop
mov
jnp
add
les
sbb
arpl
add
shrl
lds
jecxz
add
xor
add
rep
xlat
mov
mov
sahf
dec
movsl
push
inc
push
sti
mov
or
jecxz
sti
arpl
lret
xchg
sub
xor
pop
scas
outsl
pushf
mov
mov
cli
cmp
or
push
ds
lods
enter
xchg
lcall
push
shlb
cltd
push
inc
daa
mov
pushf
shll
in
aad
nop
mov
outsl
jl
cmp
adc
call
call
sbb
push
or
mov
inc
mov
or
mov
cmp
outsb
push
fdivr
aaa
jbe
mov
out
cmc
dec
xor
movsb
cmpb
push
sbb
mov
push
das
inc
hlt
divl
shrb
jg
jp
pop
ds
outsb
push
ljmp
adc
sha1rnds4
cmp
imul
cmp
jmp
mov
lcall
test
lcall
sub
mov
stc
enter
inc
xor
push
mov
mov
rcll
push
and
lock
out
xor
cmp
inc
cmp
stos
add
imul
push
fwait
in
dec
ds
push
mov
sti
clc
test
fiadds
aas
mov
fwait
cmc
out
xchg
int3
sub
jb
cmp
out
adc
es
xchg
and
bound
mov
gs
mov
je
sbb
pop
sbb
loopne
xchg
out
cmpsl
pop
and
pop
or
sub
outsl
in
in
push
lds
sti
xchg
mov
icebp
sbb
cwtl
cwtl
leave
clc
mov
dec
xor
cmp
int
leave
mov
jecxz
jne
call
pop
and
mov
out
addl
lret
std
dec
scas
inc
mov
push
fwait
push
jno
mov
dec
inc
outsl
mov
shrl
repnz
sbb
jo
in
lahf
mov
mov
push
js
inc
clc
scas
lcall
xor
in
inc
cmp
mov
addb
cmpsl
rcrb
cltd
mov
add
mov
das
lods
ljmp
and
hlt
mov
daa
and
testl
in
stc
or
and
bound
push
testl
dec
mov
or
inc
adc
dec
add
jle
hlt
sub
repnz
or
scas
ljmp
dec
into
mov
sbb
rcll
push
lcall
js
lahf
nop
cli
std
sahf
pop
ljmp
sbb
enter
xor
push
movsl
lcall
hlt
int3
dec
jmp
arpl
cmpb
lret
push
test
sbb
cmp
stos
xchg
movsb
out
xchg
jb
jb
push
push
inc
xor
imul
mov
adc
mov
leave
push
xor
movsl
mov
pop
ds
out
ficoms
iret
jle
cmp
adc
je
jmp
jne
jecxz
pushf
and
xchg
inc
mov
decb
mov
and
push
xchg
dec
mov
jbe
cmpsb
push
mov
sub
rorb
adc
stos
popa
in
push
lahf
sbb
add
add
ret
xchg
loope
push
jmp
xchg
push
sub
mov
es
out
pop
jns
outsb
adc
mov
mov
jo
clc
jo
stos
push
add
jle
imul
mov
adc
add
or
fdivl
push
clc
push
iret
pop
sarl
fisubrl
roll
sub
sbb
sbb
mov
or
push
add
adc
mov
ds
push
fldt
out
push
push
subb
xor
inc
and
inc
mov
xchg
sti
mov
sbb
xchg
rcr
test
pushf
cmc
add
clc
clc
clc
rol
pushf
neg
pushf
inc
clc
cmp
std
pushw
popfw
call
push
mov
adc
mov
mov
fldt
push
fists
mov
inc
clts
and
mov
test
pminsw
ja
cwtl
or
xlat
inc
mull
cltd
push
add
loope
scas
out
pop
das
xchg
sarl
iret
pop
push
mov
dec
cmp
adc
sbb
adc
pop
insb
mov
jbe
fwait
jle
repnz
xor
fdivrl
xchg
cmc
sbb
je
mov
sub
outsl
aas
jge
out
mov
mov
out
xchg
rcrb
add
cmp
call
int
jle
addb
das
mov
movsb
call
lods
sbb
inc
loop
or
dec
fucomi
push
cmp
test
mov
fwait
jmp
xchg
leave
shlb
xchg
stc
movsb
filds
enter
aaa
repz
jmp
imul
movsb
stos
subb
xchg
insb
jbe
jno
fidivrl
xchg
sub
cmpsl
stc
mov
test
and
mov
mov
cmc
cmp
mov
loopew
jle
les
mov
jb
mov
les
mov
and
sbb
call
pop
or
iret
cmpsl
sub
shll
loop
xchg
mov
mov
jp
pop
es
sbb
lock
out
mov
fldenv
out
inc
mov
movsb
pop
sbb
cmp
sub
loop
cs
push
xchg
sti
aas
es
out
push
fildl
adc
xchg
jmp
pushf
bound
cli
mov
sbb
jp
inc
pop
push
clc
adc
jecxz
adc
jnp
popf
sbb
pop
and
push
jle
mov
out
call
shlb
fs
pop
popa
mov
xchg
push
mov
mov
and
and
sbb
cmc
fisubs
loop
sub
movw
lea
ja
not
setnp
mov
inc
mov
inc
sar
add
sub
or
xchg
sub
movzbl
mov
sub
mov
bt
bt
call
fwait
mov
enter
cmp
jmp
jmp
sarl
cmp
sahf
mov
imul
or
cld
push
jae
daa
sub
cmpsb
mov
arpl
add
jmp
or
lret
mov
dec
insl
repnz
ljmp
fmulp
pop
add
call
aas
mov
dec
loope,pn
ljmpw
xchg
test
pushf
test
inc
jmp
ss
xchg
pop
dec
andl
inc
ja
popa
push
jmp
add
inc
dec
fildl
sbb
mov
dec
push
in
ljmp
mov
movsb
icebp
xor
cmpsb
fidivs
mov
jo
mov
leave
repnz
sbb
sbb
cli
cmp
inc
mov
pushf
jno
scas
cld
enter
in
or
cmp
jbe
mov
push
cmp
inc
cmpb
int
sub
cmp
pusha
jo
dec
arpl
push
sub
adc
arpl
cltd
or
push
rol
or
js
lcall
test
push
addr16
cmpsb
jmp
inc
divb
mov
add
cli
sub
rcll
ds
lods
inc
arpl
das
or
mov
pop
shrl
mov
jmp
pop
sub
adc
inc
jecxz
cs
negl
das
push
sub
cmc
add
divps
shlb
fcmovb
sub
cli
inc
jb
jmp
imul
sbb
xlat
cs
lea
aam
dec
inc
nop
fdivl
in
sub
pop
xchg
insl
push
adc
sbb
jno
orb
jmp
enter
ss
incb
push
mov
rolb
cld
add
sbbb
push
push
dec
pop
bound
push
adc
fildl
addr16
pop
rclb
mov
arpl
cltd
out
cmp
iret
mov
mov
add
fcmovnu
mov
and
lods
add
loop
fidivrs
in
mov
icebp
aaa
cmp
dec
pop
in
mov
mov
jne
mov
xchg
adc
cmp
push
inc
dec
lret
xor
mov
push
jg
in
mov
lret
or
mov
push
cli
mov
popf
pop
les
and
adc
lods
cmpsb
repz
cli
jno
int
ljmp
data16
sub
pop
add
jb
dec
pop
cmp
cwtl
test
test
cmc
jle
es
inc
pushf
jns
dec
scas
dec
imul
push
imul
in
pop
dec
or
mov
rcl
sbb
jecxz
leave
cmpsb
adc
fucom
mov
cmp
imul
mov
adc
sbb
out
je
in
cmp
xor
mov
dec
or
dec
aaa
shr
es
inc
xorl
inc
stos
jp
xchg
je
mov
push
popa
pop
mov
out
test
sbb
sub
push
lret
mov
mov
jns
cmpsl
movl
and
test
call
ret
sub
call
lcall
loop
push
sbb
roll
pushf
hlt
or
loope
mov
fcmovu
mov
fisubs
fstpt
push
cmp
loop
sub
fdivrp
bswap
pushf
mov
lea
jmp
push
not
movb
push
mov
pushf
bswap
lea
lea
push
call
mov
cmp
xchg
insl
fnstsw
push
stos
pushf
call
aaa
enter
rcr
in
jmp
and
imul
lds
inc
pop
fadd
ljmp
fwait
jg
xor
loop
sub
sarb
add
popa
insb
inc
jb
add
jns
inc
pusha
jmp
pusha
pusha
mov
pushf
lea
call
pushf
push
jmp
movl
call
cmp
mov
leave
into
ljmp
mov
pop
mov
jnp
pop
mov
fdivrl
and
jno
xchg
flds
mov
push
icebp
sbb
add
jge
sbb
clc
iret
push
or
mov
dec
xchg
add
jne
neg
jmp
stc
push
mov
lea
push
bt
mov
lea
bt
mov
pusha
pusha
bt
mov
bt
mov
jmp
lea
jb
pusha
lea
je
test
pusha
pushf
jmp
pop
mov
not
pop
not
movl
bswap
pusha
cwtl
lea
push
movl
jmp
call
neg
jmp
push
add
or
lahf
icebp
aam
push
xor
push
push
movsb
lea
sub
or
clc
jl
test
pop
mov
jmp
std
movsb
cwtl
adc
mov
int
rclb
mov
mov
add
aas
and
in
or
jmp
ja
btc
mov
clc
pop
sbb
ror
mov
not
btc
aad
neg
mov
not
mov
aad
setne
mov
jmp
clc
bt
pusha
imul
pushl
pusha
push
bt
add
push
lea
jmp
push
lock
std
std
mov
rol
loopne
dec
and
lret
rorl
and
mov
adc
lret
xor
fistpll
jno
dec
inc
cwtl
and
aam
push
leave
add
jmp
xchg
aaa
test
in
xchg
mov
scas
inc
add
inc
mov
mov
xchg
push
mov
aam
push
push
arpl
mov
mov
enter
fisttpl
call
pushf
test
pushf
jmp
dec
xchg
push
test
jmp
sbb
xchg
shlb
loope
ljmp
scas
idivl
and
dec
pop
outsb
add
push
ds
test
testl
mov
or
popa
inc
fwait
rorb
sbb
in
pop
outsb
addr16
jo
push
bound
cmp
lea
sbb
cmpl
shlb
sbb
call
jne
movsl
xchg
mov
inc
test
and
shl
incl
dec
pop
xchg
ss
push
lea
jmp
cmc
imul
cmc
add
pushl
lea
jmp
pusha
adc
pushf
lea
jmp
pushf
mov
mov
jmp
push
dec
aam
jp
mov
dec
cmp
aad
cmp
mov
icebp
dec
movl
dec
sbb
sub
mulb
add
jbe
loop
and
xor
pusha
or
pushl
ret
in
pushf
push
movl
call
push
push
test
movl
lea
je
jmp
mov
test
mov
cmp
mov
repnz
call
push
fs
lcall
fdivl
push
mov
sahf
add
sbb
lret
or
xor
mov
sarl
aas
cmp
add
lahf
les
push
iret
nop
mov
pop
mov
adc
mov
mov
in
jle
inc
add
sbb
sub
rcrl
and
mov
cltd
push
xchg
inc
mov
scas
imul
into
std
out
add
out
pop
push
decb
push
pop
repnz
and
cmpsb
loope
push
lret
mov
mov
in
xchg
or
jmp
addl
add
pop
test
loop
sub
mov
loope
aaa
test
in
mov
mov
xchg
xchg
mov
sbb
xor
js
lret
mov
in
jmp
pop
pusha
push
int3
je
pusha
add
daa
mov
mov
adc
push
inc
loope
pushf
hlt
mov
in
inc
leave
cli
add
loop
and
les
lea
ja
adc
sub
btr
add
and
test
lea
mov
shl
mov
jmp
lock
lcall
push
dec
xchg
xchg
sbb
push
sbb
xor
push
scas
sarl
xchg
sahf
mov
sbb
loopne
xchg
mov
lods
test
or
pop
mov
mov
push
jmp
roll
add
or
xor
cmpsl
subb
sbb
add
out
divl
sbb
rorl
mov
loop
and
mov
mov
adc
push
iret
xchg
shrl
ja
js
out
push
sub
xchg
insb
xor
xor
cld
dec
jl
mov
pusha
nop
icebp
cmpsl
ljmp
jg
pusha
mov
imul
aaa
adc
pop
mov
add
cmp
movsl
loop
and
je
add
pop
inc
mov
sahf
scas
or
mov
xchg
loopne
jmp
sbb
mov
or
mov
push
cwtl
sub
dec
cmp
xor
mov
aad
mov
mov
sar
xor
pop
andb
lods
in
jne
xchg
mov
or
lock
mov
push
out
dec
sti
mov
mov
jbe
fldt
pop
mov
mov
jno
jo
call
enter
vpmacsdql
and
inc
and
mov
xchg
call
xchg
movsbl
xchg
push
dec
push
pop
mov
push
shl
xor
xor
mov
aad
pop
dec
fdivs
pop
mov
adc
ljmp
stos
sub
orl
add
jp
pop
aas
push
pop
dec
fcmove
adc
movsb
sbb
imul
daa
or
and
and
push
mov
push
adc
popf
lret
jp
stos
xchg
fsts
cmp
je
ljmp
mov
xor
pop
call
dec
mov
push
adc
jb
nop
ret
inc
xchg
sub
jae
int
arpl
or
jo
cli
in
es
imul
incl
aad
cmp
sub
sub
mov
sbb
cmp
sbb
mov
xchg
icebp
xchg
rcrb
lret
sub
mov
fistpll
adc
xorl
and
test
xlat
add
adc
sub
dec
cmp
mov
out
inc
or
in
insb
call
imul
adc
aam
jae
aad
mov
jno
jb
push
push
push
xchg
movsl
cld
stos
inc
xchg
adc
sub
and
dec
xor
adc
out
call
push
arpl
inc
in
data16
daa
jo
icebp
adc
cld
xchg
jge
lret
xchg
sbb
stos
pop
and
and
jnp
mov
sub
add
data16
pop
xor
les
in
sub
xor
adc
inc
popf
rcll
mov
dec
xchg
rorl
mov
add
pop
mov
popf
add
jecxz
out
pop
mov
les
imul
mov
mov
fnstenv
out
fimull
push
jne
cmpsb
dec
or
cld
dec
pop
cmpsb
sub
xchg
sub
icebp
push
outsl
into
ja
mov
aam
addr16
in
sbbb
lret
mov
push
test
and
add
push
fst
jp
popa
popa
stos
icebp
xor
out
add
loop
mov
mov
int
pop
lea
jmp
call
sub
pushl
cmp
movl
push
lea
jae
pusha
lea
jmp
push
lock
std
std
andb
mov
in
mov
jbe
enter
pop
pop
daa
bound
mov
pop
cmpsl
ss
pop
mov
stc
in
mov
pop
aam
pop
int
mov
pop
pushf
xchg
test
push
lea
add
jne
inc
loop
in
xchg
push
cmpsb
stos
inc
and
iret
or
mov
inc
enter
fisttpll
and
mov
pop
xchg
mov
lds
mov
cmpsl
repz
shlb
jle
mov
pop
aad
add
insb
sbb
jne
push
lahf
frstor
dec
jne
xor
movsl
mul
rorb
ss
adc
cli
jno
xchg
add
mov
cmp
enter
add
aam
xlat
int3
pop
pop
fadd
adc
imul
andb
xor
gs
lret
ds
dec
rcrb
std
sbbl
mov
and
jae
pop
mul
cmp
xlat
add
mov
xor
and
loop
pop
pop
inc
sbb
dec
dec
cmp
adc
xchg
daa
inc
f2xm1
cmp
jbe
ljmp
sti
xor
sbb
push
test
call
stos
and
fcompl
jg
add
add
loop
out
pop
repnz
pop
jno
sbb
jb
movsl
int3
cmp
inc
pop
inc
in
call
enter
inc
decl
subb
jmp
jg
add
fs
js
pusha
lea
jne
stc
neg
bt
shl
mov
pusha
clc
test
add
movw
cmc
movzwl
add
adc
shl
mov
pusha
cmp
add
call
pushf
jmp
pushf
pushf
lea
jne
shl
or
or
stc
sub
push
bsf
mov
push
and
add
jmp
add
jbe
out
adc
ret
cld
mov
outsb
out
inc
aaa
sbb
call
pop
xor
mov
sub
add
fcompl
add
lods
sbb
daa
xor
es
xchg
or
test
adc
mov
out
push
lea
ja
not
cmc
stc
sub
ror
add
bsf
btc
mov
pusha
not
clc
sub
mov
clc
pushf
repnz
jmp
pushf
inc
movw
jmp
xchg
daa
xor
mov
inc
iret
daa
rcl
and
fs
jb
and
push
lea
jmp
or
xchg
in
inc
fs
or
rcr
xor
mov
and
shrl
xchg
pop
mov
vpmulhuw
jmp
cwtl
fstpl
add
imul
xor
sub
cltd
push
mov
cld
loope
and
scas
imul
sahf
mov
add
imul
push
cld
dec
mov
testb
loop
sbb
and
ljmp
mulb
clc
ret
popw
loopne
int3
pusha
mov
frstor
push
cs
and
mov
adc
mov
repz
ljmp
pushf
test
sti
ja
test
or
dec
and
into
lahf
cmc
mov
outsb
clc
push
push
cmpsl
popf
sbb
lock
jae,pt
mov
daa
cmp
dec
sub
lret
jbe
mov
mov
js
jae
or
fidivl
cli
mov
xchg
jle
mov
xchg
daa
cmp
jns,pn
pop
loop
sbb
cltd
nop
movsbl
movzbw
mov
pushf
pushl
ret
pushf
pusha
lea
je
stc
test
sub
pusha
cmp
call
jmp
lea
je
movzbw
pusha
jmp
push
call
mov
pusha
xchg
lahf
call
sbb
fisubrl
mov
scas
sub
mov
jo
popf
mov
in
inc
in
push
xlat
jmp
in
adc
in
cli
out
dec
pmuludq
adc
mov
push
lcall
mov
gs
mov
int3
hlt
sti
imul
sbbl
insl
sti
leave
inc
fs
dec
xchg
xor
and
cld
xor
push
jno
sub
pushf
xchg
bound
inc
stc
jp
xchg
mov
xlat
dec
mov
fs
sbb
les
pop
sub
jl
mov
mov
in
jl
adc
mov
cmpsb
arpl
cmp
outsb
and
dec
push
not
cmp
cmpsb
pop
scas
les
mov
iret
rcl
loope
imul
mov
dec
imul
mov
das
rolb
and
ljmp
nop
dec
add
shl
incl
mov
mov
push
mov
jmp
clc
or
adc
mov
pusha
clc
cmpb
pusha
jmp
pushf
call
movl
push
jmp
icebp
xor
enter
jns
jne
mov
xor
int3
pusha
cmp
in
cmp
jl
popa
push
movl
sbb
popa
pop
sbb
cmp
mov
push
inc
dec
popl
sbb
enter
outsb
push
lahf
add
add
outsl
xor
cmp
xchg
lock
testl
out
jbe
mov
jp
push
sti
adc
nop
push
je
adc
mov
stos
xor
mov
ds
xor
inc
ficomps
adc
pop
mov
clc
push
in
fildll
imul
push
mov
ds
or
push
call
loop
xor
or
sub
push
addb
mov
ljmp
cwtl
jnp
test
lea
sub
pop
mov
cmp
andl
pop
stos
mov
jbe
dec
mov
les
sub
lcall
ficoms
outsl
adc
jmp
cmp
lret
push
cmpsl
cltd
mov
sti
mov
outsl
in
lcall
push
pusha
orb
sbb
mov
stc
ss
push
sub
xchg
xlat
ret
mov
mov
xchg
bound
add
cmp
gs
lret
insb
fcmovu
sub
inc
mov
dec
pop
or
out
rorl
sbb
add
in
jl
movsb
gs
cs
adc
orb
inc
mov
test
or
xorl
popa
fsubrl
mov
aam
mov
and
inc
xor
push
imul
fsubs
popa
inc
addb
sbb
lret
aas
xor
or
jne
lahf
mov
add
pop
out
jp,pt
mov
and
and
push
lahf
jp
mov
jecxz
pushf
jle
cmpsl
das
jmp
lds
mov
mov
imul
repz
sbb
mov
loop
ss
loope
mov
add
sahf
jbe
xor
imulb
mov
sbb
sbb
lea
jne
call
loop
adc
push
push
iret
or
ret
gs
or
bound
movsl
clc
or
add
andb
mov
movsl
shll
mov
test
push
aas
cmc
iret
lock
aad
adc
or
cmpb
jmp
out
add
fucomi
sub
shr
shlb
lea
loop
xor
pop
test
push
mov
sbb
out
dec
divb
sbb
mov
mov
jle
sub
mov
ds
pop
lds
push
jns
cmp
mov
adc
or
outsl
nop
inc
xchg
mov
lahf
outsl
pop
mov
adc
cwtl
hlt
bound
jns
fwait
dec
fldenv
cmpsb
cmp
dec
je
xchg
and
inc
xor
stc
lret
jl
testl
scas
packuswb
add
cld
adc
sbb
xchg
jecxz
in
xchg
xor
andl
push
ret
cmp
push
test
mov
cwtl
loop
mov
add
test
daa
xor
movsl
cmp
jmp
or
adc
out
sub
packssdw
sahf
mov
adcb
pop
bound
rcll
xor
lret
sahf
bound
call
adc
outsb
pop
loop
push
rcll
push
movl
mov
pusha
push
pushl
pushl
pushl
ret
clc
test
pushl
popl
push
cmp
pushl
lea
ja
xor
sub
xor
or
add
not
bsr
bt
mov
sub
mov
cmc
repnz
pushf
movl
jmp
and
jg
subl
sub
mov
loopne
or
js
xor
xor
mov
shrl
jmp
sub
and
push
sub
loopne
out
mov
imul
dec
clc
sar
or
pop
jge
sahf
loop
push
mov
jb
push
add
je
or
xor
mov
push
movw
pushl
ret
pushf
pusha
push
pushl
movl
push
mov
pushf
mov
lea
jmp
add
nop
push
add
push
add
nop
push
add
xchg
pop
add
add
add
add
xchg
mov
fildl
xor
outsl
mov
notb
pop
scas
popa
mov
mov
add
dec
adc
adc
jo
mulb
ret
mov
scas
out
push
xchg
stos
mov
cltd
xchg
sbb
xchg
shrb
js
pop
mov
aas
and
xor
mov
ret
jae
out
jb
mov
mov
inc
test
dec
mov
xor
mov
add
dec
or
mov
out
icebp
fldt
xor
adc
repnz
pop
into
lea
int3
push
jbe
mov
aas
pop
cmp
daa
cld
sbb
sbb
jecxz
cltd
popf
add
pop
ret
inc
ficoms
pop
repnz
test
add
adc
push
pusha
lea
call
pusha
pushl
adc
push
push
lea
call
push
pushf
jmp
push
imul
mov
call
pusha
jmp
push
movl
mov
pusha
movl
pushf
push
call
call
mov
mov
bound
enter
bswap
je
cmp
xchg
loopne
fsubl
out
mov
cmpsb
stc
jnp
cld
cltd
popf
add
jne
push
aaa
xchg
inc
xor
adc
and
add
add
mov
ds
add
loop
adc
pop
shrb
cmc
adc
pop
ret
mov
sahf
push
xchg
dec
lock
stos
inc
adcl
fcoms
rorb
lcall
jb
jb
xor
and
inc
add
daa
cmp
dec
aaa
jb
aam
leave
ret
push
mov
xchg
in
sarb
icebp
and
out
out
xor
add
sbb
lahf
or
dec
ljmp
sbb
loop
and
repz
or
mov
xchg
mov
jnp
std
mov
stos
adc
pop
cmpsl
and
mov
cmp
mov
int3
and
out
loop
adc
sub
pop
jns
movsb
call
pushl
pushf
lea
je
movsbl
mov
mov
mov
lea
je
pushf
pusha
movb
mov
movzbw
pop
not
pushl
popl
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
call
leave
inc
stos
insb
adc
into
insl
cmpb
ss
aad
mov
sub
ja
pushl
pop
gs
cmc
bound
push
vcvtdq2pd
sbb
push
jp
sar
aam
dec
pop
mov
es
pop
push
jne
pusha
adc
jecxz
loop
adc
pop
xchg
call
xor
mov
lea
btr
mov
rcl
mov
push
jmp
jmp
add
push
xchg
push
mov
mov
cmp
pop
push
lods
and
xchg
xchg
fmuls
mov
and
and
xor
sub
sbb
sub
loop
adc
shl
pushf
stc
lds
mov
cmc
scas
in
lret
lea
push
sub
mov
and
dec
subl
mov
xlat
push
clc
rcll
xchg
cmpsb
fcompl
adc
loope
adc
jbe
in
adc
cs
mov
out
mov
add
lret
loop
adc
and
loopne
decl
push
add
pushf
movb
jmp
mov
push
mov
not
mov
push
pusha
pushl
ret
push
pushf
shl
call
dec
adc
btr
rcr
bts
xor
bts
pusha
lea
rol
shl
xor
dec
sub
xor
movzbl
bsr
mov
cmp
cmp
not
stc
add
push
call
dec
bts
bswap
movzbl
rol
mov
pusha
bt
test
not
pusha
clc
test
pushf
add
call
call
cmc
jmp
pushl
call
sub
rcr
xor
rcr
mov
btr
sbb
setg
jmp
jmp
push
pushf
popl
call
pushf
popl
pushf
pushf
pushl
popl
mov
pushf
mov
lea
jmp
call
add
push
lea
jmp
push
mov
push
pushl
mov
lea
jmp
add
call
call
call
mov
mov
movb
lea
jmp
pushl
mov
pushf
lea
jl
pusha
mov
jmp
jmp
mov
pushf
cld
jmp
mov
pushl
sar
inc
shr
mov
call
clc
not
movzbw
push
mov
cmp
bt
mov
cmc
sub
pushf
push
clc
shr
jmp
push
xchg
mov
push
movsbw
pushf
repz
popl
bt
movsbl
rcl
sub
push
cmc
shr
sub
push
shl
sbb
push
bsr
or
push
shr
bswap
movsbl
push
bt
test
stc
pushl
bt
test
add
shl
push
jo
mov
or
bt
bt
neg
not
bswap
stc
movsbw
rol
cmp
shr
rol
cmc
neg
rcl
dec
shr
jmp
pushf
mov
pushf
pushl
ret
mov
mov
pop
movzbl
pushf
bswap
mov
pushl
not
call
call
mov
call
jmp
jmp
pushf
pushf
dec
movb
pushf
clc
test
sub
stc
mov
movb
mov
test
cmc
sub
mov
call
jmp
jmp
mov
stc
and
bsr
xadd
sub
bswap
lea
mov
clc
mov
rol
shld
shl
add
mov
neg
xchg
mov
shrd
pusha
setnp
add
sub
pushf
jmp
ror
and
cmp
mov
stc
push
sub
pushl
mov
pusha
push
lea
jmp
jmp
pusha
push
push
add
call
pushf
pusha
mov
pushl
push
lea
jmp
xchg
call
call
push
test
shl
pushf
call
jmp
mov
not
pop
repz
popl
bswap
mov
jmp
add
pushf
pusha
pushl
lea
jmp
pusha
mov
push
pusha
pop
push
mov
movsbw
bswap
pushf
pushl
mov
mov
movsbw
bswap
pushl
popl
bswap
pop
call
shrd
jmp
pushf
push
mov
pushf
call
rep
cmc
shld
cmp
mov
sbb
clc
clc
inc
mov
call
test
add
stc
mov
ror
mov
jmp
inc
xor
shl
xor
movzbl
jmp
pusha
mov
movb
pushf
lea
jmp
mov
pusha
mov
pop
lea
lea
lea
mov
call
movw
jmp
call
bswap
setg
movzbl
mov
pushf
lea
call
shl
mov
xor
aas
mov
adc
mov
pushf
test
pushf
sub
stc
push
call
pushl
popl
movb
pushl
mov
push
lea
jmp
cmp
xor
pushl
pusha
sub
mov
pushl
xor
cmp
jmp
lea
mov
stc
jmp
cmc
xor
mov
bt
pushf
add
stc
bt
cmc
jmp
mov
pushf
movb
pushf
pushl
ret
bsf
lea
mov
cmc
add
push
pusha
pusha
lea
jmp
shl
rcr
bsr
mov
clc
stc
add
push
pushl
lea
jmp
jmp
dec
movzww
jmp
call
sub
jmp
pusha
das
test
lahf
mov
bt
jmp
clc
push
add
bt
pushf
cmp
not
jmp
pusha
pushf
mov
movb
push
mov
lea
jmp
push
call
lea
push
mov
pushf
pushl
ret
mov
lahf
movzbw
mov
push
pusha
jmp
sbb
mov
bt
call
pusha
call
call
push
and
sub
movzbl
cmp
bt
sub
pushl
neg
bt
pushf
cmp
bt
sub
bt
pusha
bt
push
ror
jmp
jmp
test
cmc
push
add
pusha
mov
push
lea
jmp
pushf
jmp
call
bt
mov
bt
neg
shl
pusha
mov
mov
not
test
pusha
bt
push
not
clc
sub
push
and
movw
call
lea
jp
repz
push
movzbw
mov
call
call
push
call
pushf
movl
jmp
pushf
mov
xadd
sub
mov
inc
mov
pusha
test
add
pusha
jmp
mov
pushf
pusha
mov
lea
jmp
dec
sar
xor
xchg
mov
inc
neg
movzbw
jmp
pushf
xchg
pushf
push
repz
popl
not
not
bswap
mov
bswap
movsbw
mov
lea
push
jmp
pushf
add
call
pushl
pushl
pushl
popl
pushl
movb
lea
jmp
cmc
add
test
sub
bt
pusha
stc
ror
clc
xchg
test
call
lea
cmc
cmp
movw
xor
movw
cmc
sub
jmp
pushf
clc
call
jmp
cmp
xchg
clc
jmp
pusha
pushf
mov
mov
pushf
movb
mov
pushf
pushf
lea
jmp
xor
movzbl
mov
xor
jmp
sar
movzbl
btr
dec
mov
bswap
xor
btc
xor
btc
bsf
pusha
sub
add
bt
bts
ror
rol
jmp
mov
pusha
pushf
push
movw
lea
jmp
setg
mov
pushf
mov
pusha
mov
call
pushf
popl
jmp
jmp
mov
jmp
movsbw
movsbw
push
not
mov
pusha
pusha
mov
movw
not
jmp
pusha
mov
bswap
pusha
pushf
repz
popl
movzbl
push
lea
mov
movsbw
pushf
movzbw
mov
lea
push
mov
call
jmp
lea
pushf
popl
movzbl
pushf
bswap
xchg
bswap
pusha
cld
mov
pop
lea
pusha
xchg
movzbw
call
neg
xchg
pusha
shl
btr
lea
push
sub
bswap
xadd
mov
xchg
btr
mov
clc
setge
add
shr
sar
add
mov
sar
bt
sub
push
lea
js
setp
movsbw
dec
lea
cmp
and
xor
xor
clc
rcr
cmc
rol
shrd
sar
movzbw
movsbl
sub
shld
rcl
jno
movzbl
cmc
adc
not
shl
mov
test
test
not
cmc
stc
call
push
mov
pusha
movw
call
ror
aaa
pusha
btr
mov
bts
not
sub
mov
clc
add
jmp
pushl
push
cmc
test
add
lea
jns
cmc
stc
popf
pushf
movb
movl
pusha
lea
jmp
pusha
mov
clc
mov
call
movl
pushf
popl
jmp
push
pushf
lea
jne
shr
xorb
pusha
push
jmp
das
btc
stc
lea
mov
pushf
movzbw
mov
ror
mov
pusha
add
ja
bt
clc
add
pushf
cmc
bt
test
shrd
pushf
pusha
mov
movl
movl
push
call
sub
lea
cmp
rdtsc
pushf
sub
pushf
pusha
push
mov
mov
pushf
mov
push
lea
jmp
lea
jmp
bswap
mov
movw
push
pushl
lea
jmp
pop
jmp
rcl
bsr
movzbw
inc
mov
jmp
call
pushl
pushl
lea
jne
cmp
stc
pusha
sub
lea
ja
xchg
jae
pusha
pushl
movl
jmp
pusha
pushl
movb
mov
call
mov
push
mov
push
pushf
lea
jmp
pushl
mov
jmp
test
sub
lea
jp
push
pushf
movw
mov
pusha
lea
jmp
dec
mov
stc
push
stc
add
pushf
mov
lea
jmp
movsbw
call
bswap
push
repz
popl
pushl
jmp
push
push
pushf
mov
pusha
call
call
movzbw
mov
pushf
lea
jmp
call
pusha
sub
cmp
mov
test
add
push
pushf
lea
jmp
mov
movw
pushf
push
movw
lea
jmp
pushl
popl
pushl
movl
pusha
lea
jmp
xorb
lea
call
bswap
mov
push
pushl
pushf
lea
jmp
cmp
sbb
cmp
pushf
mov
clc
lea
jg
cmp
cmp
add
push
pushf
pusha
lea
jmp
mov
pusha
mov
jmp
mov
mov
lea
jmp
push
mov
lea
mov
bswap
movsbw
movsbw
mov
movsbw
pushl
pushl
popl
jmp
pusha
push
mov
pushf
pushl
lea
jmp
push
pushl
popl
mov
movb
movw
mov
lea
jmp
pushf
mov
mov
pusha
pushf
push
pushl
ret
mov
movb
jmp
push
call
pusha
movl
call
pushl
movl
pushl
popl
movb
movb
lea
jmp
clc
sub
bt
cmpl
push
pusha
mov
jmp
pusha
call
pusha
pushf
jmp
xchg
mov
movb
push
pushf
movl
movb
mov
pusha
movl
pushl
ret
mov
push
pushf
pushl
mov
not
jmp
mov
push
movb
call
xor
stc
cmp
clc
cmc
cbtw
push
cwtl
cmc
sub
pushf
pushl
call
jmp
movl
lea
pusha
add
pushf
pushf
rol
cmc
stc
cmp
xor
test
bt
test
cbtw
stc
pushf
cwtl
movb
cmc
bt
call
mov
pushf
xchg
pushl
repz
popl
not
mov
not
mov
call
lahf
rcr
cwtl
mov
clc
pop
adc
pop
add
shr
pop
sar
not
pop
bswap
or
aas
test
pop
btc
pop
sar
pop
std
pushf
bsr
pushl
popf
movzbw
lea
jmp
stc
sub
push
call
push
movsbw
ror
mov
inc
setp
btr
rol
inc
bswap
jmp
bt
jmp
mov
push
add
push
lea
jmp
push
movl
mov
push
pushf
lea
jmp
mov
pushf
push
push
push
lea
jmp
push
mov
push
mov
mov
pushf
lea
not
bswap
pushl
popl
pushf
pop
push
not
lea
mov
pushf
pusha
pusha
mov
lea
jmp
pushf
popl
pushf
pushf
pushl
popl
pushf
pushf
pushl
lea
jmp
lea
dec
btr
mov
cmp
call
pushf
popl
movb
jmp
mov
mov
lea
call
pushf
cmc
test
cmp
jmp
pushl
pushl
popf
movw
pushf
lea
jmp
jmp
jmp
not
pop
mov
bswap
pusha
call
lea
mov
lea
jbe
movsbl
movzbw
bswap
pushl
movsbw
push
pop
lea
push
call
jmp
pushf
popl
call
mov
movb
push
push
movb
lea
jmp
xchg
push
repz
popl
movzbw
lea
mov
pushf
mov
call
movzbw
mov
jb
mov
call
add
pushf
test
cwtl
push
call
clc
lea
jmp
add
call
lea
pop
push
jmp
sub
mov
bsf
xor
adc
btc
mov
jmp
pusha
dec
not
bsf
add
xor
not
movzbw
rol
bsf
not
sub
push
shrd
movzbl
rol
cmp
bsf
sub
mov
test
cmp
cmp
not
cmc
add
push
push
pushl
movl
lea
push
jmp
sub
movl
jmp
bts
xchg
bsf
mov
movsbw
sub
rcl
neg
mov
clc
jmp
rol
call
shld
mov
mov
jmp
not
mov
pop
pushf
pushf
mov
movsbw
movw
movsbl
mov
push
movzbl
movsbw
pushf
pushl
popl
jmp
jmp
push
mov
pushf
jmp
pusha
mov
call
mov
movb
pushf
popl
lea
jb
pushf
pushl
popl
movw
pushf
lea
jmp
movb
jmp
pushf
popl
push
push
pushf
push
pushl
popl
movw
pushf
lea
jmp
test
cmp
sub
pusha
shr
pushf
mov
jmp
movzbl
pushl
popl
push
movsbw
movl
push
mov
call
movsbw
pushl
popl
lea
pushf
movl
lea
movzbw
movzbw
movsbw
mov
push
movl
lea
jmp
pushf
call
mov
lea
jg
push
xchg
mov
pusha
repz
popl
not
call
pushf
jmp
xor
clc
movb
add
push
bt
push
bswap
push
stc
bt
add
stc
test
sub
mov
call
jmp
pushl
mov
pushf
pushf
movw
lea
jmp
lea
mov
sar
bt
inc
or
add
shr
mov
xor
pusha
xor
sub
clc
neg
shld
call
push
pushf
mov
jmp
clc
test
test
add
pushf
pushl
pushf
mov
pusha
push
mov
movw
lea
jmp
mov
sub
bsr
not
push
or
neg
rol
rol
lea
setg
jmp
movsbw
bswap
pusha
mov
pop
mov
pushl
mov
lea
lea
mov
lea
call
movb
mov
push
mov
movw
push
lea
jmp
lea
jne
pushf
mov
mov
pusha
pushl
ret
bt
shr
test
or
test
bt
xor
push
pusha
call
add
add
movzbw
pushl
popl
pop
mov
pusha
movl
call
push
mov
jmp
pushf
popl
movl
pushl
popl
pusha
pushf
pushf
push
lea
jmp
clc
ror
sar
sub
stc
mov
call
bt
jmp
pushf
pushl
popl
pusha
lea
jmp
not
push
lea
bswap
push
pushf
jmp
neg
mov
call
jmp
mov
push
movb
lea
jmp
jmp
lea
pushf
pusha
mov
pushf
push
pushl
ret
mov
movzbw
jmp
stc
mul
pushf
lea
jp
mov
pushf
mov
push
mov
jmp
pushf
jmp
push
pushf
mov
mov
movb
mov
pusha
mov
jmp
mov
push
movb
pushf
lea
jmp
pushl
popl
pushf
pusha
movb
lea
jmp
push
jmp
mov
pusha
lea
jno
pushf
mov
mov
push
pushf
mov
repz
popl
movsbw
pushf
pusha
mov
pop
pushl
movzbl
mov
pop
mov
bswap
pusha
call
cmc
add
jmp
jmp
jmp
lea
test
add
bt
pusha
bt
rol
clc
call
jmp
pushf
mov
pushf
mov
call
mov
push
pusha
pushl
movw
lea
jmp
xchg
bswap
repz
popl
not
movsbw
mov
lea
jnp
lea
movzbw
lea
push
movzbl
push
jns
push
mov
not
lea
pusha
mov
movsbw
not
movsbl
pushl
popl
pop
movzbl
movl
jmp
pusha
cmc
ror
dec
pusha
push
jmp
xchg
call
mov
pushf
pushf
push
pushf
pushl
ret
add
setg
btc
mov
jmp
mov
not
repz
bswap
call
pop
push
mov
not
call
pusha
call
pushf
popl
pushf
push
pushl
popl
pushf
mov
lea
jmp
mov
movzbw
call
pushf
movl
mov
pop
mov
pushl
lea
jmp
not
movzbw
not
pusha
mov
pusha
push
mov
pushf
mov
pushf
lea
jmp
pushf
pushl
mov
movb
mov
pusha
movb
pusha
jmp
rcl
das
cmc
mov
movzbw
cmp
not
bt
mov
bt
cmc
add
pushf
push
pusha
pushf
mov
pushf
pushl
pushf
mov
lea
jmp
push
movl
not
push
mov
mov
pushf
lea
jmp
pushl
movl
call
mov
mov
jmp
lea
movb
mov
movb
pushf
mov
pushl
ret
stc
stc
cmp
neg
mov
pusha
add
pushf
pusha
movw
movb
lea
jmp
mov
pushl
jmp
pushl
jmp
movsbw
pop
push
jmp
xchg
jmp
mov
pushl
pusha
mov
lea
jmp
pushl
popl
push
pushf
push
lea
jmp
pushf
mov
jmp
pushf
pushf
movb
mov
mov
jmp
lea
mov
mov
movw
pushl
popl
pushf
movl
pop
call
pusha
mov
pushl
pushf
call
pusha
xor
mov
mov
test
cmc
xor
pushf
jmp
sub
push
cmc
pusha
and
push
push
call
push
lea
cpuid
pushf
call
not
call
pusha
add
push
pushf
lea
jmp
btr
rol
shl
mov
pushf
cmc
mov
pusha
add
pusha
pushf
lea
jmp
mov
movsbl
mov
push
mov
pop
not
pop
movzbw
pushl
popl
pushl
movl
call
mov
call
shl
mov
adc
shl
add
not
mov
mov
pushf
call
push
adc
inc
mov
cmp
test
sub
cmp
add
movw
call
push
pushl
mov
pushf
movl
mov
movw
lea
jmp
mov
lea
push
lea
pushl
jmp
cmp
cmc
clc
mov
pusha
sub
jmp
mov
pushf
pushf
lea
jmp
call
neg
add
mov
cmp
add
pushf
lea
jmp
movzbl
rol
pushf
bt
inc
bts
and
and
bts
setle
and
mov
clc
mov
pushf
add
call
test
cmc
pusha
mov
mov
test
mov
pushf
sub
cmc
test
cmp
test
or
pushf
lea
je
stc
pushf
stc
movb
xor
call
pushf
popl
lea
jge
pusha
movb
pushl
popl
pusha
mov
pushf
lea
jmp
call
pushl
movb
lea
pushf
pushf
mov
pusha
push
mov
lea
jmp
jmp
cmp
sub
pushf
pushf
call
stc
clc
cmp
push
pusha
lea
ja
lahf
mov
bswap
setg
bsr
lea
or
add
sub
shl
rcr
aad
lea
sub
xor
shrd
shl
and
shld
sub
pusha
pusha
bswap
mov
lea
call
bsr
movzww
push
call
mov
push
pushf
pushf
movw
lea
jmp
inc
movsbl
btc
lea
jge
rol
sub
and
inc
mov
bt
cmc
jmp
mov
pushl
popl
pusha
lea
movl
movw
not
mov
pushf
pushl
lea
jmp
mov
pushf
lea
jmp
jmp
pushf
mov
pushf
mov
pushf
pusha
mov
pop
pop
jmp
lahf
sbb
mov
bt
rcl
mov
push
sub
pusha
call
mov
movb
push
shl
mov
call
sar
mov
test
mov
mov
rcl
mov
test
pusha
sub
push
stc
shr
movb
mov
movb
pushf
popl
pushf
mov
call
pushl
popl
push
push
push
push
lea
jmp
mov
pusha
pushf
popl
lea
jg
pushf
pushl
popl
movb
movb
lea
jmp
call
bswap
mov
movsbw
bswap
movzbl
lea
mov
movzbw
pushf
push
pushf
pushl
popl
push
jmp
pusha
mov
bswap
mov
jmp
mov
movsbw
mov
pushl
call
clc
add
jmp
jmp
push
mov
pushf
mov
pusha
jmp
sub
neg
test
btr
add
shrd
rcl
pushf
and
xor
add
shrd
bsr
add
add
movsbw
bts
movzbw
xor
rcr
pushf
mov
jmp
pushf
mov
pushf
pushl
pushf
lea
jmp
jmp
pushf
bswap
movzbw
mov
pushf
push
lea
jmp
pushl
popl
not
movsbl
pushl
movl
not
pop
pushf
mov
push
lea
jmp
setno
push
lahf
mov
push
pusha
call
push
movb
add
jmp
push
call
inc
jmp
pusha
movw
mov
jmp
bswap
movl
not
mov
pushf
pushl
mov
push
lea
jmp
shld
clc
neg
shr
notl
bsr
cmp
mov
test
jmp
divl
jmp
mov
push
pushf
call
movb
lea
jo
push
mov
movw
pushf
popl
pusha
pushf
mov
call
bt
mov
cmp
pusha
bswap
test
call
movw
mov
xor
sbb
mov
pusha
add
pushf
mov
push
mov
movb
pushf
lea
jmp
stc
mov
call
test
mov
cmc
pushl
popf
movb
movw
movb
lea
jmp
add
mov
aaa
and
aam
cmp
mov
push
sub
pushl
call
movl
pushf
mov
push
pushf
pushf
pushl
lea
jmp
pushf
pushf
call
pushl
popl
pushl
push
mov
pushf
lea
jmp
cmc
not
mov
bt
sub
test
add
push
pushf
popl
pusha
mov
pushl
popl
pushf
mov
lea
jmp
pushl
xchg
movzbl
not
pop
repz
popl
push
push
movzbw
mov
not
mov
movzbw
mov
bswap
pushf
mov
not
movzbl
pusha
jmp
jmp
bswap
cmc
call
mov
pushf
jmp
pushl
popl
pushf
pushf
push
lea
jmp
mov
pushl
pusha
pushf
mov
lea
jmp
push
movw
pop
mov
pushl
movzbw
not
push
bswap
bswap
jmp
movw
mov
mov
pushf
pushf
pushf
lea
jmp
jmp
not
mov
not
cmp
cmp
pushf
and
pusha
pushl
mov
mov
call
call
pushf
pushf
popl
pushf
call
mov
pushf
lea
jmp
pushf
sub
mov
call
push
call
lea
jnp
popl
pusha
pushf
push
lea
jmp
and
mov
bt
add
pushf
pushf
movb
pusha
lea
jmp
pusha
mov
movb
pushl
push
mov
lea
jmp
btr
sar
mov
neg
jmp
decl
movb
call
call
mov
pushl
push
add
mov
mov
mov
mov
jmp
sar
lahf
call
lea
movsbw
mov
jp
clc
add
pusha
mov
jmp
jmp
mov
pusha
movb
lea
jmp
rol
not
bsf
cmp
neg
or
xor
btr
mov
rcl
movsbw
sub
or
inc
mov
shrd
inc
pusha
mov
shld
dec
bsf
setp
add
sub
shl
sub
shld
mov
neg
stc
sub
push
mov
movzbw
push
dec
setne
mov
neg
xor
btc
sets
rcl
not
rol
ror
sub
clc
rol
movsbw
btr
movzbl
add
rol
xor
mov
clc
not
movl
add
pushl
pushf
call
push
mov
pushl
call
add
pushf
pushf
call
mov
pushf
pushl
popl
movsbw
movsbl
pushf
movl
mov
not
mov
mov
lea
jmp
lea
jne
call
pushl
add
mov
call
call
mov
mov
lcall
dec
mov
call
pop
mov
pushl
popa
mov
jmp
call
pop
mov
call
pop
mov
incl
dec
mov
lcall
ljmp
popa
mov
incl
dec
mov
decl
frstor
pushl
mov
pushl
pop
mov
cmp
pop
mov
pushl
mov
jmp
pop
mov
js
mov
call
inc
mov
dec
cmp
pushl
mov
decl
mov
jmp
mov
decl
call
dec
mov
pushl
dec
mov
pushl
inc
mov
incl
pop
mov
lcall
call
push
mov
call
pop
mov
js
mov
jmp
mov
dec
dec
mov
sti
pop
mov
decl
mov
fsts
cmp
dec
mov
call
pop
mov
js
mov
decl
incl
popa
mov
in
inc
mov
incl
pop
mov
call
cmp
jnp
mov
lcall
mov
incl
dec
mov
pushl
pop
mov
cmp
fcompl
frstor
call
push
mov
ljmp
bound
pushl
pop
mov
js
mov
frstor
incl
dec
mov
call
mov
decl
mov
jmp
push
mov
inc
pop
mov
jmp
dec
mov
fsts
pushl
mov
dec
dec
mov
clc
cmp
lcall
lcall
jmp
push
mov
call
cmp
js
mov
stc
push
mov
lcall
clc
cmp
ljmp
mov
decl
lcall
mov
jmp
decl
call
dec
mov
pushl
cmp
jmp
dec
mov
pushl
mov
call
dec
mov
lcall
mov
jmp
inc
mov
pushl
push
mov
fstps
incl
dec
mov
call
cmp
jmp
push
mov
cmp
push
mov
jl
mov
js
mov
cmp
dec
mov
jmp
mov
ljmp
mov
call
inc
mov
decl
mov
incl
dec
mov
call
dec
mov
pushl
dec
mov
call
dec
mov
incl
pop
mov
cmp
jmp
push
mov
dec
cmp
pushl
mov
fcompl
js
mov
lcall
pop
mov
pushl
mov
fsts
frstor
ljmp
mov
call
dec
mov
call
cmp
call
push
mov
fstps
incl
dec
mov
decl
call
inc
mov
js
mov
and
popl
pusha
lea
jmp
bt
jmp
test
inc
sbb
mov
xor
neg
mov
adc
cmp
mov
test
sub
push
push
div
push
mov
pusha
pushf
movl
mov
call
pushf
popl
call
cmp
sub
jmp
add
pusha
call
and
add
shl
sbb
mov
jmp
clc
call
mov
pushf
call
pushf
pushf
lea
jne
inc
mov
pushf
bt
stc
and
cmp
cmc
sub
jns
cmp
pusha
lea
jne
call
pusha
lea
jne
pusha
pushf
mov
call
mov
bt
cmp
push
call
pushl
xchg
lea
push
not
repz
popl
push
movsbl
pushf
mov
lea
mov
not
pop
pushf
mov
mov
pusha
movsbw
pushf
pushf
mov
mov
jmp
and
xchg
pushf
adc
mov
test
add
pop
mov
jmp
shld
push
sub
mov
sbb
sub
btc
neg
bswap
sub
btc
add
jmp
bt
xchg
pushl
pushf
sub
call
mov
lea
movsbw
push
mov
jmp
xor
movb
jmp
bswap
movl
movsbw
mov
movw
lea
jmp
bswap
pushf
pushf
mov
pusha
mov
pushf
mov
lea
jmp
ror
ror
mov
cmc
stc
mov
cmp
sub
test
jmp
test
add
call
neg
inc
adc
mov
call
pushf
shl
dec
movzbl
call
jmp
mov
push
pushf
pusha
not
repz
popl
not
mov
shrd
dec
rcr
mov
shl
movsbl
ror
ror
xchg
not
rcr
shld
clc
xchg
setl
mov
xor
pushl
popl
bswap
sub
movzbw
movl
not
sub
call
mov
movb
pushf
popl
jmp
movl
pushl
popl
push
lea
jmp
pusha
rcr
add
pushf
pusha
not
mov
mov
mov
pushf
lea
jmp
or
stc
mov
movzbl
jp
test
push
cmc
xor
pushf
stc
xor
call
clc
test
add
pusha
jmp
jmp
call
shl
mov
mov
pushf
pushf
popl
mov
pusha
pushl
popl
push
pushl
lea
jmp
call
lea
lea
pusha
mov
push
pushf
lea
jmp
mov
jmp
pusha
pusha
mov
pushl
lea
jmp
call
jmp
bswap
pushl
repz
popl
pusha
mov
pushl
movzbw
mov
lea
jmp
sub
mov
cmp
call
call
dec
clc
cmp
xor
cmc
clc
push
cmc
mov
call
