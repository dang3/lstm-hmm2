push
call
ret
ret
jmp
mov
sbb
sub
stos
push
add
dec
mov
dec
push
adc
inc
sub
inc
sub
shl
js
mov
push
dec
test
rcr
sbb
bnd
loopne
mov
fwait
enter
aas
popa
sbb
test
mov
repnz
cmpl
cltd
cmc
mov
jle
add
add
das
mov
int
lea
push
ret
mov
fiadds
in
xor
lods
or
nop
inc
dec
fnop
dec
or
push
jg
fdivs
data16
test
cmp
sub
sub
leave
lahf
imul
mov
shll
loope
pop
cmp
lahf
mov
lcall
fwait
cwtl
fwait
in
jo
push
pop
xchg
cmpb
mov
xchg
dec
rcrl
adc
inc
test
shll
stos
mov
loopne
mov
fsubl
xchg
lret
rcll
jno
imull
or
cmpsl
test
loope
mov
aad
push
inc
es
fildll
push
loopne
push
fdivrl
mov
clc
mov
add
mov
insl
outsl
dec
hlt
mov
test
push
mov
and
ss
inc
jno
add
add
mov
adc
fdivrs
jg
ja
cmp
inc
sub
aam
add
xchg
outsb
jo
mov
pop
outsb
pop
xchg
or
out
insb
shl
xchg
movsl
xor
pop
inc
pusha
stc
movsb
aam
push
fwait
loop
sub
cmp
out
sbb
cmp
cltd
sub
adc
movsb
hlt
mov
xchg
adcl
mov
mov
icebp
ljmp
nop
jae
popf
repz
das
hlt
mov
cmpsb
jb
add
into
das
ror
lds
push
cmp
jg
mov
push
xbegin
scas
or
or
ffreep
out
fisttpl
cmpsl
dec
or
xchg
push
and
je
sub
xchg
out
scas
xchg
cltd
pop
mov
es
mov
lods
fucomp
push
sbb
push
xchg
adc
ljmp
bound
push
mov
jo
mov
scas
dec
xchg
ds
cmpsb
test
or
sahf
rolb
or
data16
inc
loopne
mov
dec
mov
sub
inc
sahf
mov
movsl
dec
scas
push
or
test
fwait
loope
mov
xchg
dec
outsb
push
iret
test
out
gs
mov
push
jle
ffreep
dec
loop
mov
cltd
add
jae
dec
or
mov
inc
popa
ror
sbb
pushf
lret
aas
andb
jnp
loop
pop
in
stc
daa
jbe
jns
gs
lods
push
pop
popf
pop
jne
pusha
push
clc
jmp
addr16
adc
mov
subb
stos
rcl
cmp
call
sti
fisubrl
out
cmpsl
dec
add
pop
add
data16
cmp
outsl
repz
jg
int
dec
mov
iret
sbb
out
push
jle
jle
inc
adc
test
lret
sbb
inc
xor
cmpsl
xlat
mov
add
imul
inc
jno
stos
or
rorl
pop
movsl
mov
orl
out
mov
ljmp
mov
and
inc
jne
ja
xchg
sbb
inc
ja
div
nop
in
add
inc
das
mov
or
in
cld
adc
mov
push
cltd
or
gs
int3
cmp
inc
dec
aad
ss
sub
scas
mov
mov
stos
mov
mov
cld
nop
and
sub
add
and
adc
decl
sbb
push
fsubrs
fisttps
sub
sub
mov
or
sbb
ret
mov
inc
rolb
movsl
push
jmp
iret
lahf
add
or
jno
out
cmp
and
icebp
stos
push
je
rorl
mov
fs
lret
inc
pop
test
adc
inc
in
add
fdivs
sbb
movsl
bound
jp
lds
movl
nop
xor
xchg
mov
xchg
xor
jle
pop
mov
scas
or
test
mov
adc
lret
iret
pushf
mov
cli
inc
imul
xor
les
dec
test
shlb
pop
or
dec
lcall
frstor
test
gs
cld
filds
dec
inc
les
pushf
push
adc
movsb
mov
enter
aam
cmp
dec
jne
jmp
push
push
inc
xchg
adc
cli
dec
pop
popf
arpl
mov
inc
or
add
cs
jns
sub
sbb
in
movsl
mov
xchg
and
nop
add
stc
and
stos
dec
sarb
jg
jo
imulb
pop
icebp
add
lahf
adc
jbe
add
jb
pop
icebp
lret
mov
out
adcl
insb
push
pop
mull
pushf
sub
jmp
sahf
pop
enter
xchg
jne
test
popa
cmpl
jg
cwtl
inc
sbb
push
rol
mov
xchg
sbb
out
or
cmp
aam
aam
shll
lods
push
popa
ret
mov
pushl
push
cld
lods
pop
repnz
and
sysret
test
xor
sahf
xorl
aad
xor
jmp
leave
stc
jmp
loope
int3
fs
and
inc
mov
cmp
test
cwtl
pushf
les
js
push
lods
lret
inc
and
loopne
insb
pop
bound
test
adc
mov
test
pop
outsb
faddl
pushf
fsubs
iret
movsb
lds
fs
fsub
js
cwtl
xchg
cmpsl
pop
and
jbe
roll
sub
adc
sub
out
icebp
push
pop
and
push
lret
loop
xor
or
icebp
ror
hlt
leave
dec
ss
or
iret
xchg
mov
test
cli
cli
daa
mov
mov
xor
popf
incb
shlb
push
test
arpl
fdivl
fucom
imul
iret
jb
push
hlt
mov
xor
repnz
sub
jl
ss
icebp
in
inc
sub
imul
stos
inc
sub
add
subl
push
xor
add
add
push
sbb
sahf
daa
and
mov
lock
movsl
ja
pop
aaa
adc
or
int3
xchg
repz
mov
ficompl
dec
and
push
sbb
inc
pop
sbb
ja
enter
cwtl
or
and
cmp
push
test
cmp
cmp
sub
enter
xchg
adc
sbb
cwtl
fildll
jp
mov
test
shll
cmpsl
divl
pushf
jecxz
cmp
gs
jl
cmc
jno
jge
push
push
xchg
in
dec
cwtl
in
sub
lds
enter
dec
bound
jge
push
jp
jl
pop
sbb
mov
dec
int3
mov
cmpsb
jbe
jno
jmp
dec
pop
jl
mov
push
leave
cmp
dec
filds
loop
idivl
inc
popa
pop
addr16
aam
add
dec
fucomi
out
jle
push
mov
popa
loope
iret
xlat
jns
fwait
add
std
fstp
xchg
sub
mov
xchg
loop
lahf
jp
mul
jbe
push
push
xlat
push
rcrl
mov
inc
dec
addr16
out
adcb
xchg
pushf
pushf
js
push
addr16
mov
pop
mov
xchg
imul
stos
jp
adc
cli
and
mov
add
pop
popf
stc
stos
or
ror
push
sbb
mov
push
pusha
push
cld
sub
pmaxsw
aaa
cld
sbb
mov
sbb
mov
shll
inc
int
addr16
cld
data16
movsb
hlt
pop
shrl
lock
iret
cmp
out
xor
or
mov
mov
cli
mov
pop
daa
xchg
jo
ret
scas
or
mov
inc
jge
stos
mov
cmp
add
push
mov
enter
xchg
sbb
cs
xchg
or
cmp
es
jge
adc
sbb
push
arpl
mov
xor
add
and
cmp
sub
push
mov
insb
adc
loope
mov
js
in
stos
int
xor
jbe
lret
shrb
movsl
lret
jbe
aad
cmpsb
push
pop
fiadds
loopne
arpl
rcrl
gs
dec
jbe
push
mov
or
push
xor
adc
loopne,pn
jg
fnsave
shll
add
rclb
pop
cmpsb
into
xor
sbb
shll
jae
cmpl
es
das
bound
outsb
call
les
xchg
mov
pop
insb
inc
repnz
cmp
sahf
popf
adc
xchg
loope
ja
mov
enter
inc
stos
adc
int3
and
imulw
mov
fiaddl
xchg
std
loope
pushf
xorl
out
or
pop
cwtl
js
jbe
fbld
test
or
push
jo
mov
mov
fnstenv
lds
push
push
cwtl
cli
call
jecxz
dec
xchg
int3
push
push
mov
lods
inc
jo
fcoml
mov
or
mov
add
fs
test
pop
inc
mov
dec
and
sub
stos
add
fisttpl
sub
pcmpgtb
xlat
shll
pop
adc
jae
xor
cltd
repz
jmp
lock
pop
adc
push
mov
lods
ds
dec
pop
push
jp
inc
cli
rorl
jnp
and
imul
and
scas
pop
jl
pop
ds
popa
push
adc
cmc
mov
push
gs
scas
andb
xor
in
mov
and
test
cmp
fsubl
fsubrl
mov
leave
pop
push
dec
ret
jnp
sbb
cltd
mov
adc
xorl
fidivrl
call
insb
ljmp
in
loope
sub
inc
dec
sub
jmp
and
mov
add
jp
lret
jb
dec
xchg
ja
push
jmp
mov
add
mov
sbb
mov
dec
push
leave
mul
inc
cmp
call
sub
inc
es
lods
mov
pop
lcall
add
cmpsl
cmpsl
jbe
lock
mov
adcl
fdivp
xor
cmp
push
daa
bound
pop
add
imull
mov
xchg
scas
mov
pop
jge
lcall
pop
cmpsl
call
int
cli
xchg
jnp
jns
or
bound
loop
dec
lcall
call
add
push
out
test
popa
or
inc
xchg
cmp
ret
fs
in
jge
out
leave
push
inc
cld
lahf
dec
ret
ljmp
add
dec
mov
stc
notb
das
sti
loope
sahf
aad
push
lret
add
shrb
jae
in
loop
and
xor
or
xor
push
push
test
sbb
jnp
in
or
xor
test
jb
inc
ja
mov
fcomip
icebp
xor
in
push
loope
or
mov
fldl
lock
movl
lcall
inc
mov
cmpsl
int
icebp
bound
cmpsl
add
cwtl
sbb
sub
pop
dec
xchg
and
fnsave
sbb
xor
pop
out
sbb
lret
fcmovnbe
cld
imul
xchg
or
je
push
pop
mov
jecxz
ja
dec
sub
pop
lea
add
add
add
int
icebp
scas
push
add
mov
sbbb
adc
push
out
and
mov
adc
jb
rorb
je
xchg
and
jp
dec
bound
xor
pop
add
sti
or
jle
add
lock
cmp
mov
adc
ss
jge
sbb
dec
inc
cmp
out
es
test
mov
cli
ljmp
dec
sub
leave
test
jmp
ficompl
add
outsb
andb
ss
loop
and
jp
or
xorl
mov
loope
xchg
iret
lock
sar
mov
sub
inc
xor
jne
int3
and
call
fsubr
pop
jmp
inc
pop
xor
pop
mov
leave
rclb
xor
or
mov
dec
jmp
repz
push
leave
inc
dec
mov
filds
pop
xor
cmp
test
xor
or
xchg
jnp
jge
add
stos
rolb
aad
xor
mov
iret
jbe
push
lcall
leave
sub
insl
inc
aas
shlb
sbb
mov
lods
xchg
not
jb
xchg
push
in
neg
sub
inc
sar
sub
push
sbb
mov
sbb
jo
in
psrlq
pop
outsb
movsl
orb
mov
lods
jno
inc
rolb
mov
cli
enter
push
sub
pop
je
add
lahf
jno
scas
in
aad
daa
xchg
test
dec
pop
rorb
aas
scas
loopne
push
sbb
inc
mov
out
lahf
mov
jle
repnz
frstor
mov
cmpl
cmp
ds
fsubl
stos
sub
into
push
fisttpl
mov
std
mov
mov
sub
mov
mov
std
ret
dec
es
add
cmpsl
fmull
daa
push
popf
xorb
jo
aam
push
or
imulb
push
push
lock
and
xor
pop
test
mov
lahf
mov
rcrl
in
iret
push
fwait
and
mov
xor
out
nop
ret
test
insl
xchg
lea
stos
xor
imull
clc
mov
in
imul
pop
fildl
push
xor
out
or
test
test
xchg
mov
and
dec
insb
xchg
adc
xor
adc
sub
push
movsb
lea
add
fyl2xp1
fldenv
test
es
lret
mov
insl
pop
or
mov
sub
stos
mov
lods
sbb
mov
pushf
jmp
jge
inc
enter
enter
xor
or
shl
loopne
xchg
mov
fwait
out
adc
xchg
sub
xchg
cmp
lods
test
loop
cmp
mov
jns
pop
xchg
sbb
int
aad
and
iret
iret
dec
rcl
pop
pop
into
mov
loopne
xchg
mov
push
jp
cmp
and
or
lcall
sbb
xchg
stos
mov
hlt
add
fidivl
movsl
pusha
inc
adc
push
fwait
push
xchg
mov
ss
shrb
in
stc
sub
cmp
sbb
and
outsl
testb
inc
mov
cmp
sbb
mov
rorb
mov
fiadds
and
or
xlat
inc
lret
nop
push
icebp
pop
cmpsl
sbb
xor
xchg
add
int3
sahf
gs
inc
and
lahf
xchg
scas
inc
adc
add
push
inc
or
lods
or
movsb
aam
stos
jge
pop
ret
mov
ret
ds
jmp
mov
hlt
pushf
push
jp
pop
jle
jns
jl
lahf
addr16
ss
lcall
add
cmp
in
insl
popf
adcb
sub
sbb
pop
arpl
hlt
mov
jg
aaa
in
or
insb
or
jecxz
sub
mov
push
je
fstl
sbb
test
lods
adc
mov
pop
jbe
add
cltd
mov
jns
or
pop
jle
lret
loop
shl
dec
and
sub
lret
mov
sahf
lea
rcrl
out
sti
cld
jp
out
xor
sahf
push
and
sbb
nop
and
sbb
out
fdivrs
mov
add
sbb
out
lahf
jmp
loope
xchg
inc
sub
mov
inc
sub
and
or
paddd
or
js
sub
cli
je
rcrl
nop
ljmp
int3
sbb
shr
sahf
jg
aaa
jno
loope
lods
push
jp
mov
sbb
insb
jae
fimull
cmp
dec
pop
xor
cmc
andb
negl
push
xchg
or
jmp
popf
pop
leave
notb
fwait
cmp
mov
addr16
push
roll
fcmovnbe
add
mov
roll
ret
mov
xchg
xchg
lcall
movzwl
dec
or
lods
jno
icebp
mov
push
gs
pop
jle
inc
mov
cld
daa
out
test
scas
pop
enter
ret
mov
pop
pop
loope
dec
mov
int3
mov
xor
and
and
mov
inc
push
arpl
cmp
push
sub
je
leave
das
inc
cmp
sub
test
je
inc
leave
stc
push
jecxz
mov
loop
dec
int
pop
dec
mov
xchg
and
mov
pop
xor
mov
add
repz
adc
xor
gs
mov
push
xor
pop
or
adc
mov
jb
mov
mov
mov
test
jp
jmp
inc
mov
test
push
pushl
jmp
stos
cmp
dec
fnsave
pop
loopne
jge
test
mov
inc
add
out
lcall
pushf
cmpl
call
adc
movsb
or
push
pop
adc
or
add
aad
loopne
loopne
scas
imul
or
inc
test
mov
loop
test
push
xchg
inc
out
jge
daa
lea
jb
inc
cmpsl
push
arpl
scas
scas
mov
mov
fldcw
int3
das
mov
lds
mov
mov
jle
mov
dec
in
inc
shl
sub
lods
mov
lret
shll
mov
adc
adc
test
or
lret
sbb
cmp
adc
outsl
mov
insl
xchg
sahf
lock
cmp
out
mov
lea
inc
popf
xor
xor
jecxz
mov
out
dec
movl
adc
shrl
lret
jg
fucomip
arpl
xchg
pmaxub
ffreep
pop
or
clc
fbld
test
lea
jecxz
in
xor
push
ret
shrb
dec
xor
insl
repnz
jb
xchg
cmpsl
into
call
dec
cmpl
inc
sbb
jae
mov
into
in
sub
or
dec
pop
mov
jo
pop
xchg
mov
repnz
int3
cmovg
into
ja
lods
test
ficoms
inc
xchg
xlat
shrl
rcrl
or
nop
push
jno
in
adc
jmp
xor
xchg
add
sbb
cmp
clc
xchg
xchg
js
imul
scas
adc
sub
mov
inc
and
xor
aad
aad
pop
stc
stc
out
in
sti
mov
ret
pusha
jmp
sub
inc
xlat
iret
jge
ljmp
ljmp
repz
jg
cmpsb
std
dec
mov
sub
cmc
inc
xchg
and
mov
fwait
push
fildll
and
test
jno
hlt
mov
mov
pop
cmp
mov
movsl
add
imul
repz
jns,pt
je
push
rolb
shll
out
xorb
mov
adc
mov
clc
and
in
leave
cs
mov
arpl
aam
dec
pushf
mov
dec
mov
jge
push
fldenv
add
in
cmp
cmp
shrl
or
mov
pop
out
dec
stos
mov
xor
xchg
call
popf
xor
jl
ret
daa
testl
xor
pop
out
lahf
addr16
pop
xchg
jb
sub
les
sbb
nop
js
dec
jge
mov
pop
addr16
mov
xor
in
mov
mov
and
lds
movsl
xor
jg
repz
or
ja
fcmovu
ja
es
scas
inc
test
push
jne
mov
or
xchg
xor
ds
sbb
data16
arpl
imul
xor
imulb
out
cmpsl
call
xchg
push
fsubrl
fwait
lods
and
repz
jl
repz
push
xchg
pop
mov
outsl
add
or
mov
xor
loope
data16
add
rcll
cltd
pusha
pop
movsb
mov
add
aad
cmp
sbb
jg
mov
cmp
or
fidivrs
mov
fisttps
push
xchg
push
cmp
mov
loope
inc
push
int
pusha
enter
or
inc
jns
dec
cmpsb
mov
out
popa
mov
and
adc
cwtl
fisttpll
push
ja
nop
sub
push
adc
cmp
sbb
xchg
mov
jb
ljmp
fs
addr16
xlat
scas
jnp
outsl
mov
imul
mov
mov
or
cmp
sbb
or
mov
fisubrl
out
mov
xchg
pushf
outsl
fwait
mov
scas
in
jb
test
add
ja
sub
cmp
sub
jp
mov
push
and
in
sar
jo
sbbb
pop
jns
mov
sbb
aas
or
jno
sbb
rcrl
loope
xchg
pop
fwait
addb
xchg
pop
into
fwait
test
fistpll
or
adc
push
or
push
and
pop
cmc
fwait
sub
cs
and
jae
fdivl
sub
dec
loopne
fs
imul
aas
jno
mov
adc
mov
stc
lds
push
les
lds
fimuls
pop
cli
cmp
int3
insl
lahf
cld
insb
clc
pop
js
mov
decb
inc
insl
cmp
fstpl
sbb
imul
lcall
daa
test
add
imul
add
fwait
in
jmp
push
bound
fldt
pop
push
adc
lds
insb
cmpsl
or
hlt
push
xor
jge
push
sbb
xor
inc
aad
inc
inc
fsubl
push
dec
mov
test
test
fmuls
pushf
mov
push
inc
mov
pop
dec
notl
fwait
and
ljmp
xchg
addr16
ja
testb
sahf
jb
cmpl
gs
mov
ja
shrl
cmpxchg
loope
test
mov
mov
in
jg
gs
pop
cmp
js
or
aad
clc
sti
idivb
imul
dec
mov
shll
sbb
xchg
pxor
push
negl
pop
jp
or
jnp
sub
das
xchg
dec
in
add
iret
sbb
repz
adc
cmp
mov
add
sub
or
xchg
mov
push
xchg
add
sub
stos
hlt
out
push
pop
sbb
shlb
sahf
sbb
push
add
jns
test
sbb
inc
test
movsb
jmp
adc
sub
mov
dec
arpl
add
fnstcw
hlt
jmp
cli
ret
das
test
jmp
inc
popa
xchg
pop
mov
arpl
push
mov
fs
icebp
cmpl
mov
jmp
stc
aam
or
shlb
lods
scas
adc
repnz
mov
pusha
test
xor
cli
mov
add
sbb
cmp
int
adc
sbb
jmp
dec
sahf
test
popf
pop
hlt
mov
xchg
dec
push
idiv
and
inc
ret
push
les
imul
mov
incb
sbb
ljmp
sbbb
data16
inc
or
pop
inc
rcll
mov
cmpl
cmpsb
sbb
mov
lea
push
ret
test
out
lods
add
hlt
fbld
insl
mov
data16
sti
xlat
sbb
mov
fildll
push
mov
test
aam
dec
js
dec
push
outsb
and
ds
in
mov
push
in
xchg
je
stos
adc
push
mov
lcall
mov
xchg
add
push
shll
jmp
into
clc
mov
pop
and
in
int
mov
clc
jbe
xchg
sti
sub
inc
pop
pop
bound
or
sbb
inc
cmpb
stos
adc
push
fnstenv
cmp
jno
sub
test
insb
into
lea
xchg
test
jmp
push
jmp
pop
dec
lds
inc
in
push
out
mov
xor
pop
xchg
fildll
in
xchg
dec
mov
pop
adc
ret
sarb
mov
mov
bound
push
fcomi
push
mov
or
lock
fsubs
rclb
jne
xor
cmp
out
cmp
push
push
or
mov
cmp
fistpll
lahf
or
sub
push
xchg
test
cld
pop
roll
and
les
mov
js
push
icebp
inc
xchg
aaa
frstor
imul
sbb
inc
and
pcmpeqd
mov
lods
sbb
popa
les
jo,pt
icebp
push
and
lock
fistpl
mov
jo
adc
jb
andb
lods
out
dec
iret
les
in
aas
and
rcrl
dec
in
lcall
cmc
movsl
lods
jecxz
sub
adc
cmpsl
aam
pop
mov
push
movsl
push
lahf
ret
popf
mov
lahf
daa
and
mov
add
cmp
mov
fcomps
sub
sub
sti
sub
mov
push
sub
sbb
sbb
sbb
cmc
fstp
sarb
cmc
mov
fstl
or
test
pop
arpl
ja
or
jl
adc
mov
fcmovb
xchg
cmp
dec
nop
push
inc
out
cld
adc
xor
xchg
outsb
mov
adc
sbb
mov
bound
fs
lods
and
cld
fdivs
mov
outsb
sbb
xor
negl
pop
gs
sahf
mov
bnd
mov
cmc
iret
pushf
pand
mov
dec
dec
icebp
inc
sbb
leave
pop
push
pop
xchg
dec
pop
xor
push
cmpsl
mov
and
movsb
push
cltd
jp
push
call
ds
pop
pop
sub
dec
push
or
push
adc
ljmp
mov
mov
xor
adc
out
cmp
xchg
push
sub
dec
in
jns
lcall
dec
or
mov
stos
pop
push
xor
mov
push
movsb
testb
aas
dec
push
or
inc
sub
mov
mov
rorb
add
sub
sub
add
jno
stos
push
or
aad
pusha
sbb
mov
scas
loopne
dec
mov
xlat
pop
aaa
fwait
lahf
aaa
xor
les
mov
test
push
les
fwait
and
push
mov
cmp
cmp
cs
cmc
push
lods
push
mov
pusha
adc
xchg
jae
xchg
bound
outsl
sub
test
jnp
xlat
pop
dec
clc
movsb
or
pop
push
add
jge
inc
decb
mov
xchg
andl
cmp
pop
out
pop
dec
out
add
or
gs
ljmp
mov
sarb
mov
pop
or
aas
and
iret
testl
jnp
dec
mov
fistpl
add
jmp
jg
shrb
xchg
js
insb
repnz
leave
sbb
aas
xchg
es
ds
inc
sub
fsubs
and
dec
jnp
mov
mov
call
std
gs
pop
ret
iret
sbb
insl
stos
es
jmp
push
movsb
cmpl
add
mov
pop
mov
cmp
insb
mov
sub
xchg
loope
dec
and
pop
jl
push
add
out
repz
pop
dec
pop
mov
jg
dec
xchg
icebp
gs
lret
mov
or
mov
fwait
mov
mov
push
xor
xchg
pop
xor
mov
jae
inc
icebp
push
jo
sbb
or
xor
das
stos
xlat
cmpsl
leave
ja
fisubl
and
cmpb
push
fcomps
inc
fisttps
sub
xor
jp
icebp
test
cltd
cltd
jl
mov
cmc
adc
iret
xor
sbb
xor
mov
imul
jp
cmp
arpl
scas
dec
je
lea
sbb
mov
pop
pop
repz
divb
add
mov
jnp
and
int3
test
add
sbb
pop
inc
xor
xlat
lods
inc
rolb
in
push
pop
sub
pop
adc
fadd
sbb
cs
mov
in
cmp
test
sbb
xor
aas
je
adc
outsl
or
push
mov
sub
push
and
mov
or
out
in
or
js
sbb
or
sub
loope
mov
push
dec
shlb
addr16
adc
cmp
cli
dec
loop
shll
pop
xchg
cmc
jge
mov
bnd
sbb
fdivrs
test
std
push
mov
imul
add
test
jg
and
sbb
cltd
add
pop
rep
add
fwait
mov
inc
rcrb
mov
mov
cltd
test
test
push
mov
jl
repnz
js
daa
push
clc
pop
pop
sub
mov
sbb
cmp
xor
imul
jae
ret
ljmp
je
orb
lds
mov
xchg
and
sarl
xor
jne
jo
pop
andb
xor
jmp
pushl
jle
ret
push
xchg
out
roll
sub
fldl
mov
fists
popf
imul
push
dec
cs
sub
imul
dec
lret
repnz
imul
xor
stos
test
mov
dec
ficomps
testl
cld
je
push
test
ja
imul
dec
out
fs
sarb
stos
mov
sbbl
movsl
pcmpeqw
aad
loopne
jb
or
xchg
inc
int
stos
xchg
xchg
in
mov
repz
shll
adcl
push
ds
call
iret
in
dec
jg
je
mov
push
xchg
sbb
and
mov
popa
fs
inc
loop
pop
jbe
jbe
clc
or
enter
push
mov
frstor
imul
pop
or
dec
xchg
push
in
xlat
aad
loop
cwtl
xorl
lahf
popf
pop
push
or
push
add
xchg
or
jmp
jne
push
mov
inc
in
mov
fucom
jb
movb
and
jnp
adc
dec
enter
popf
mov
insl
push
pop
inc
cld
out
push
mov
push
fcmovbe
jne
push
fimull
dec
shl
ja
jno
lods
test
mov
jbe
icebp
and
dec
mov
push
fldl
jp
les
enter
adcb
pop
out
xchg
xchg
pop
sub
xchg
push
in
jnp
or
xlat
xchg
xchg
dec
mov
pop
pusha
push
xor
or
rcrl
xor
xchg
xor
push
loopne,pn
nop
push
jecxz
mov
jl
add
xchg
push
dec
cwtl
cld
mov
lcall
cmc
leave
iret
push
out
das
imul
pop
aad
insl
mov
dec
bound
je
int3
mov
lea
or
lea
or
sbb
rcrb
jae
jae
adc
push
dec
aas
movsb
add
hlt
or
jne
out
sub
shrb
jns
jge
in
daa
pop
fsubrp
ret
lea
mov
mov
mov
lret
int3
jnp
dec
or
cmpsb
adc
mov
loopne
daa
inc
push
mov
lret
push
popa
mov
xchg
jmp
pop
adc
ffree
adc
lods
push
pushf
je
loopne
and
and
cmp
jnp
dec
and
sub
mov
sbb
enter
insb
cmp
mov
sub
stos
pop
je
xor
inc
rol
loop
call
mul
lret
fistpll
jmp
pop
jno
ja
ds
outsl
dec
lock
mov
mov
xorl
dec
imul
jo
in
stc
cmp
enter
je
xorl
cltd
fcompl
inc
xor
or
add
ret
mov
scas
cmp
sti
xchg
es
sub
leave
pop
leave
add
and
sbb
dec
outsl
or
shrl
movsl
daa
dec
fistpl
sti
mov
jae
xchg
jmp
jnp,pn
lret
mov
xchg
fsubl
jl
push
test
lret
pop
inc
or
or
push
clc
int
popl
cmp
sub
add
aaa
mov
jp
in
in
outsb
mov
pop
sahf
push
int
sub
pop
insb
out
es
scas
scas
adcl
ljmp
stc
mov
into
in
mov
jge
dec
or
push
sub
ror
jmp
call
or
mov
mov
push
dec
inc
pop
lods
adc
rcr
jo
mov
cli
icebp
fisubrs
cmp
adcb
pop
int
push
movsl
mov
iret
in
std
jns
mov
xor
xchg
out
mov
fs
sbb
xchg
cld
adc
cmpsl
xor
xor
add
aaa
icebp
loopne
lret
mov
jbe
outsl
and
push
push
cmp
repnz
shll
lret
in
stos
out
popf
jp
sbb
leave
outsl
les
test
sbb
lods
jmp
sbb
cli
sahf
in
mov
pusha
sbb
call
jne
leave
add
gs
pop
dec
repz
call
inc
cmp
xchg
add
aad
dec
sbb
jnp
frstor
pop
pusha
in
add
jl
mov
mov
sub
fs
dec
daa
test
mov
test
shlb
int3
xorl
leave
push
mov
repnz
push
out
inc
pop
sub
sbb
jo
dec
pop
and
sub
inc
pop
xor
pop
mov
cltd
mov
ds
xor
imulb
push
pop
xor
aad
inc
je
jg
xchg
mov
add
xor
cmp
jne
jnp
mov
outsb
andl
gs
in
pop
adc
fdivrl
loopne
aad
dec
xchg
lcall
push
in
aaa
in
into
scas
push
mov
andb
lods
pop
cmp
pop
nop
aas
cmp
cmp
mov
stc
sub
nop
push
adc
mov
dec
nop
mov
bound
xchg
insl
sbb
faddp
dec
iret
inc
dec
mov
dec
add
pop
or
lcall
mov
xor
mov
fcomip
cmp
pmulhuw
cmp
mov
mov
sub
jno
mov
add
dec
jg
or
repnz
test
das
inc
mov
pop
cmp
jl
enter
pop
in
imul
pop
jb
or
ret
jae
ja
mov
xor
ret
sarl
push
sbb
or
add
test
pop
ret
sbb
inc
cmpsl
pop
add
sub
mov
pop
ss
push
scas
adc
jp
dec
sbb
add
call
enter
inc
xor
pushf
inc
mov
int
xor
in
jno
add
int3
lods
insl
mov
pop
mov
lods
jnp
test
cmp
sub
aad
sub
loope
mov
lret
fbld
dec
scas
push
xchg
mov
repz
pop
lods
cmp
mov
rorb
or
subl
mov
mov
jo
sbb
movb
ds
and
ret
pop
in
inc
sub
ds
loopne
xor
push
loop
fsts
sub
xchg
lods
sbb
sbb
sub
or
sub
stos
push
popa
mov
stos
test
aas
mov
fimull
test
loopne
mov
bound
push
mov
aam
mov
ss
pop
addr16
push
sahf
xchg
fdivrs
xchg
push
pop
push
cmc
or
clc
cmovl
xchg
mov
ret
je
jle
lret
adc
xchg
ds
dec
xchg
xor
adc
add
sbb
fnstenv
pusha
in
sub
enter
mov
jge
in
and
and
mov
aaa
adcl
push
fwait
in
iret
ds
mov
pusha
jae
dec
popf
adc
loope
mov
adc
push
push
popf
cltd
sub
aaa
js
lods
out
je
mov
pop
cmp
dec
jne
or
in
and
fnstenv
add
cmp
andb
ds
or
sbb
or
dec
jmp
movsb
jbe
and
test
inc
les
lods
add
pop
andb
inc
leave
loopne
nop
or
stc
xchg
scas
or
test
sub
and
cwtl
outsb
pop
jecxz
addr16
xor
clc
sbb
int3
mov
scas
jp
inc
loop
push
lahf
add
repnz
adc
fucomip
outsl
scas
ficompl
imul
sub
or
out
rorl
xor
ds
adc
pop
int3
or
jle
loope
inc
test
movsb
mov
aam
xchg
hlt
cld
inc
inc
andl
out
xchg
xchg
scas
insb
cmpsl
cwtl
mov
inc
gs
inc
call
cmpl
sbb
jb
push
cmp
sbbl
mov
mov
cld
xlat
out
enter
push
in
hlt
xchg
inc
and
mov
adc
jb
cmc
enter
cld
arpl
movsb
mov
test
fs
add
xor
cltd
outsb
mov
mov
dec
fwait
inc
aad
mov
add
inc
iret
or
or
cmp
out
push
addr16
aaa
outsl
lret
daa
nop
sub
rclb
out
cmpsl
push
sbb
push
pop
push
sub
fisttps
jg
adc
stc
dec
into
out
pop
push
push
mov
pop
enter
mov
stc
ja
pusha
mov
fs
insl
sub
fiadds
sub
mov
adc
nop
fstp
dec
popf
inc
sahf
push
std
jne
icebp
jns
insb
gs
jae
mov
lock
leave
loopne
imul
stos
and
js
sbb
push
add
jae
js
sbb
xor
js
dec
sbb
push
or
add
imul
dec
push
mov
int
sbb
mov
or
hlt
pushf
aad
data16
movsb
sbb
mov
insl
push
xor
out
mov
cmc
mov
into
sbb
push
idivb
sbb
lret
cli
and
out
sahf
mov
mov
in
idivl
imulb
rcrl
pop
xchg
mov
cmp
inc
add
cmp
repz
mov
xchg
arpl
test
inc
or
sub
cmp
pop
icebp
insb
ja
jae
inc
repz
icebp
pop
mov
add
je
nop
je
les
in
movsl
stos
dec
mov
cmp
mov
imul
daa
out
mov
xchg
loop
dec
jle
sbb
pop
sbb
les
xchg
mov
std
push
inc
aaa
sbb
aam
popf
bound
inc
xlat
push
in
ret
or
xor
mov
xchg
ds
cmp
les
jmp
fcomi
mov
and
sbb
mov
sbb
xor
sub
outsb
stc
xchg
iret
sarb
dec
or
xchg
jbe
xchg
in
insl
adc
mov
sti
das
stos
mov
les
and
xchg
jbe
dec
pop
clc
std
insl
mov
xchg
sbb
ja
mov
sub
out
jge
xchg
in
pop
stc
or
in
divb
movsl
dec
xor
fistps
clc
dec
pusha
rorl
sbb
and
into
icebp
addr16
bound
outsl
repz
les
out
pop
out
int3
inc
test
les
mov
out
pop
ss
ljmp
mov
cltd
jg
enter
je
cmp
dec
pop
sub
jle
pushf
nop
clc
mov
xchg
jg
jl
add
cmp
out
xor
movsb
dec
cmp
movsb
cwtl
call
mov
nop
jg
adc
lcall
ficomps
cmp
adcl
ss
popf
mov
and
jp
imul
pop
mov
imul
adc
adcb
pop
push
ret
fwait
xchg
jle
jl
pop
in
outsl
lcall
push
pop
jns
xor
and
lret
aaa
addr16
ss
mov
sub
inc
arpl
sbb
mov
push
addr16
icebp
mov
xchg
adc
cmp
inc
mov
movsl
mov
add
xchg
mov
or
sub
adc
fnstenv
cs
inc
inc
ficoms
movsl
mov
int3
jp
ret
inc
sahf
xchg
jge
and
scas
jle
iret
pop
hlt
adc
xor
xchg
lods
pop
adc
and
fs
push
jo
pop
jp
jnp
mov
int
lret
in
sub
inc
incb
adcb
out
xor
sarb
or
xchg
int3
push
xor
fsubl
pusha
js
jo
shrb
dec
cltd
int
jb
es
iret
mov
inc
fisubrl
sarl
and
adc
xchg
movq
pushf
jne
inc
testb
mov
clc
jb
orb
xlat
push
leave
es
ja
orb
xchg
mov
scas
inc
int
test
loope
cltd
xorl
jg
mov
add
fs
pop
movsb
call
push
xor
lret
rol
xlat
mov
cld
aam
mov
scas
in
into
imul
xchg
sti
mulb
add
jns
cmp
out
roll
mov
xchg
xlat
inc
mov
push
push
mov
je
sti
cmpsb
sbb
sti
imul
sbb
xchg
push
push
out
push
mov
adc
adc
jnp
test
cli
sbb
xchg
pop
addr16
enter
fbld
aad
pusha
cs
call
std
int3
push
pop
or
sarb
into
adc
sub
aas
test
pushl
idivl
mov
scas
dec
sbb
add
xchg
loopne
out
sub
push
pop
xchg
mov
fisttpll
cltd
inc
cmpsb
insl
or
movsb
jle
imul
aam
xchg
andl
fldcw
imul
dec
xorb
sbb
wbinvd
hlt
xor
fdivrs
mov
mov
imul
cmpsl
outsl
pop
into
or
dec
test
cmp
pop
cmp
push
mov
and
mov
sbb
int3
in
cmp
lds
stos
data16
cmp
ja
mov
jle
cmp
loopne
or
cmp
or
cmp
int3
xorl
jb
mov
inc
push
push
xor
lret
lcall
sbb
arpl
jmp
push
xchg
mov
dec
xor
lcall
cmpsb
jno
jnp
mov
or
insb
add
xor
mov
insb
sarb
mov
mov
mov
xchg
jl
xchg
shlb
cld
test
mov
push
dec
xlat
jnp
lods
repnz
pop
adc
push
mov
sbb
mov
pop
mov
jle
scas
push
lcall
jle
dec
sahf
aas
jmp
push
shlb
sti
xlat
pop
inc
sbb
jecxz
test
inc
push
in
sub
add
adcl
or
sahf
xchg
cmpsl
sti
jo
pop
push
jb
xchg
lods
shr
in
inc
xor
mov
jmp
mov
pop
into
repnz
mov
cli
pop
js
xor
sbb
fnstenv
sub
cmpsl
push
xlat
sti
stc
lahf
add
sbb
pop
pop
add
aad
jae
test
sti
shll
pop
int3
repnz
xor
jno
loopne
inc
pop
sbb
pop
mov
or
mov
cltd
lods
cmp
int3
pop
lds
pushl
jno
mov
jecxz
jp
outsb
inc
ss
inc
in
mov
imul
in
or
sbb
jnp
lods
sub
inc
xchg
out
mov
or
movsl
add
jae
mov
addl
mov
mov
scas
jns
aas
aas
clc
imul
and
ds
pushf
inc
adc
ret
cmp
in
mov
sub
stos
ret
jl
jae
xor
cmpsl
rcrl
or
xor
leave
jnp
push
mov
add
jl
loopne
pushf
lods
scas
inc
sbb
out
jecxz
mov
jo
test
adc
test
sbb
mov
sbb
cmp
ja
ss
xchg
dec
and
push
jae
push
outsb
push
mov
and
out
rolb
and
jp
rcll
in
fdivrs
flds
cltd
jmp
sahf
mov
outsb
mov
adc
sub
pusha
add
lcall
outsl
movsb
jno
dec
cmp
cmp
jecxz
cmc
sbbl
add
fisttpll
out
vpackssdw
rcrb
adc
xchg
push
bound
cmp
cld
in
std
and
das
push
lea
fsubrp
mov
popf
fsubr
mov
push
sbb
or
sarb
mov
gs
mov
inc
std
div
enter
rclb
mov
xchg
mov
in
add
fwait
sbb
popf
push
sahf
mov
aam
mov
in
or
repz
lret
test
pop
adc
push
or
mov
cmp
js
or
loope
out
xchg
pop
cmp
hlt
xchg
adc
arpl
stos
les
dec
scas
fisubrl
aaa
out
jbe
loope
in
insb
mov
das
adc
jecxz
mov
and
inc
dec
nop
jnp
pop
jnp
pop
lock
inc
mov
fidivrl
or
imul
mov
sbbl
jmp
aad
sbbl
ret
ret
push
add
add
or
in
xlat
and
js
test
inc
jb
mov
ds
xor
adc
xchg
fsubl
jmp
aad
lea
xchg
sar
imul
inc
sbb
cmpsb
in
mov
data16
xchg
push
or
sahf
out
jae
jb
push
out
repz
mov
sbb
add
xchg
and
cmp
pop
inc
rcl
icebp
xchg
ret
xchg
repnz
mov
mov
xor
mov
mov
bound
mov
sub
mov
btr
xchg
mov
lods
push
pushf
cmp
nop
scas
push
and
cmpb
call
lds
xchg
test
jae
inc
enter
mov
adc
xchg
or
inc
imul
repz
dec
sbb
add
xchg
daa
cmp
jecxz
lret
cmpsb
xchg
aaa
inc
test
fisubrs
pop
sub
fidivrs
adc
mov
loop
fmuls
outsl
int
mov
adc
out
jno
xchg
cmpsb
or
stos
lea
das
nop
mov
repnz
ss
fmull
push
or
or
pop
popa
dec
push
enter
aad
dec
test
sub
cmpl
and
es
mov
push
or
adcb
dec
shll
mov
inc
ficomps
out
cld
int3
data16
subb
aad
cmp
mov
lcall
cmp
mov
sbb
movsb
xchg
sub
xchg
mov
xor
or
adc
mov
aam
fbstp
repnz
int3
pop
ror
stos
mov
ss
and
mov
cmp
movsl
fwait
es
fdivrl
push
jp
mov
fcompp
addr16
xor
xor
fadd
xor
lcall
xor
sbb
jecxz
cld
hlt
add
add
sub
outsb
test
fsubrl
repz
adc
sbb
mov
rclb
leave
lcall
mov
cltd
fimull
mov
outsb
gs
xor
cmp
cmp
pop
das
iret
outsl
dec
add
cmp
mov
mov
inc
adc
leave
mov
cs
jp
push
jne
xchg
pop
mov
fsubs
mov
stos
loopne
mov
cmpsl
stos
add
lret
cld
push
or
cltd
in
gs
mov
loopne
mov
cmpsb
dec
or
int
jae
xor
loope
jp
lods
mov
subl
pop
pop
add
orb
mov
add
jne
add
pop
cs
imul
push
outsb
pop
sub
and
in
pop
xchg
push
push
rorl
or
or
aad
inc
jmp
xchg
xlat
mov
mov
push
les
mov
add
sbb
lods
fbstp
leave
fstps
mov
sub
repnz
cmp
xchg
mov
pop
sti
and
pop
int3
mov
nop
push
insl
xchg
xchg
nop
add
xchg
and
mov
push
test
in
or
clc
inc
and
lods
cli
mov
inc
mov
iret
push
ret
adc
in
dec
adc
jnp
push
xor
mov
data16
sarb
xor
xor
mov
cmp
jbe
lret
xor
aaa
test
inc
dec
or
testl
dec
pop
bound
jbe
out
idivb
mov
jg
xlat
cmp
insl
jne
rol
aam
int3
in
sub
loope
mov
push
xor
test
lret
daa
dec
aaa
mov
lock
test
inc
les
adc
mov
pop
mov
rcrl
ret
and
pop
stos
pop
lods
inc
das
ja
push
dec
cmp
pop
adcb
fisubrl
add
pop
lods
sbb
inc
pop
inc
das
int3
icebp
adc
lds
push
sbb
pop
jp
js
bound
mov
adcl
pop
insb
movsb
sub
cmp
fildll
insl
std
mov
ja
mov
adc
jbe
sbb
shl
data16
es
cli
mov
dec
jbe
xor
push
leave
outsb
mov
loopne
mov
movsb
or
cmpb
cltd
cld
addr16
sbb
shlb
and
push
test
rorl
xchg
fcomp
xchg
add
and
popa
sbb
repnz
nop
xchg
leave
cwtl
fimull
mov
mov
roll
jnp
and
add
int3
xchg
push
insb
lahf
pop
notb
stos
mov
add
mov
in
mov
je
mov
in
and
mov
pop
inc
sub
cli
pop
fldcw
inc
stc
and
pop
jp
std
sete
scas
mov
outsb
jo
adc
fsubl
push
repz
orb
fsubrs
stc
mov
sub
cmpsb
sti
cwtl
sub
or
movsl
insl
push
addr16
sbb
lods
sarl
pop
dec
cmpsb
in
cwtl
pop
cmp
loop
test
xchg
and
test
dec
xor
repnz
sahf
jnp
cmp
sbb
rcr
jno
lret
lock
fwait
in
inc
cmp
outsl
cmp
add
movsb
inc
adc
xor
xchg
mov
xlat
mov
scas
add
mov
fists
jp
call
lods
imul
and
idivl
sti
leave
and
cmp
jnp
lcall
lea
and
mov
leave
rcrl
dec
pop
push
and
pop
mov
pop
std
mov
insb
adc
mov
in
mov
imul
xor
clc
dec
push
icebp
imul
aas
cmp
pop
push
push
pop
scas
and
jmp
data16
test
std
sub
and
mov
cs
xor
jo
pop
xor
ss
lea
pop
adc
inc
nop
jg
shll
xorb
inc
aas
out
repz
das
or
adc
mov
push
xor
pusha
ljmp
jb
xchg
or
mov
xchg
jmp
iret
and
sub
cmp
xchg
insb
fistpll
rclb
jbe
inc
xor
lcall
movsb
sarb
out
out
pop
rol
negl
adc
sub
out
xchg
lods
outsl
or
mov
cmc
and
push
jns
popf
in
ficompl
mov
jno
ja
jnp
or
xor
insl
into
cmp
push
bound
outsb
jae
sub
ljmp
and
fbld
bound
ret
xlat
fsubp
gs
repnz
mov
cwtl
sbb
xchg
adc
movsl
sbb
arpl
pop
adc
jmp
push
mov
push
or
sbb
pop
mov
jo
gs
scas
fldcw
fnstenv
lock
sti
mov
mov
gs
rcll
xor
pop
cwtl
jge
cmp
movsb
push
data16
sbb
ja
xchg
push
ss
sub
adc
cmp
stc
arpl
xchg
loope
ljmp
ret
lcall
xlat
aam
xchg
sub
rorl
adc
add
into
sti
pop
aas
inc
dec
data16
lods
or
rclb
aaa
jmp
adc
mov
adcl
cmpsb
mov
mov
xchg
popa
jne
cmc
xor
outsl
xchg
pop
cmp
lods
xchg
movb
enter
test
mov
and
push
stos
orl
mov
push
cmpsl
aas
fisubrl
out
lea
test
jbe
and
jmp
pop
cld
pushf
jnp
xlat
push
mov
les
lret
xor
jecxz
out
mov
out
pushf
call
andb
call
push
movsl
adc
aaa
xor
inc
je
jb,pt
mov
pop
and
fwait
int
test
or
mov
imul
inc
fistpll
push
imul
ret
sbb
xor
mov
xchg
shl
mov
data16
add
jmp
push
icebp
dec
shl
ljmp
nop
jl
pusha
cmpsl
fwait
sub
call
ret
adc
repnz
mov
inc
xchg
lcall
jne
imul
pop
sbb
in
mov
sbb
inc
jns
adc
xor
push
xchg
inc
xor
inc
test
push
loope
mov
js
sub
xor
outsb
test
fnstcw
or
pushf
dec
adc
or
mov
fisubs
cmc
sbb
outsl
and
adcb
inc
sbb
and
adc
or
adc
cs
jno
insl
nop
cld
rorl
sub
push
iret
jp
xor
jecxz
orl
out
cmpsb
pop
je
mov
push
xchg
popf
in
scas
lods
mov
add
sbb
cs
fcompl
mov
mov
leave
jle
mov
std
sbb
jne
testb
clc
push
rcr
add
pop
mov
pop
mov
out
gs
dec
sub
outsl
ds
fiadds
push
xor
mov
xor
mov
and
out
pop
jns
xlat
dec
push
inc
sub
imul
pop
mov
push
jmp
popa
fdivrl
adc
mov
push
mov
sub
out
je
lret
call
pop
adc
xchg
pusha
pop
popf
call
push
mov
aam
xor
push
mov
inc
enter
imul
lcall
aaa
into
xor
arpl
jge
mov
ljmp
mov
jbe
xchg
fnsave
loopne
add
jg
add
cli
jmp
mov
ret
out
lock
sbb
bnd
and
mov
rolb
cmc
or
sarb
jae
cmp
fs
adc
out
pop
sub
dec
sbb
cmpsl
inc
cmp
data16
xchg
and
std
xchg
cmpsb
sbb
mov
sti
jle
movsb
scas
jns
addr16
scas
dec
sub
or
jg
pop
jmp
add
and
jle
gs
xor
outsb
xor
repz
or
dec
gs
and
out
xchg
mov
add
lods
inc
ja
xorb
jo,pn
jmp
sub
dec
bound
mov
pop
gs
push
fildl
pop
hlt
sbb
jnp
add
cmp
mov
enter
jae
xchg
or
shll
sti
add
sub
dec
push
push
mov
popa
insl
push
dec
and
and
add
pop
cmc
mov
or
push
lahf
das
bound
cmp
mov
sbb
push
mov
pop
xor
sub
inc
sub
mov
dec
or
aaa
adc
stos
inc
outsl
icebp
daa
jge
das
mov
repnz
xor
dec
test
fimull
in
lcall
fistps
mov
inc
xchg
or
jecxz
aad
test
shrb
mov
jle
fucomi
movsb
jbe
cmpsb
push
push
mov
das
das
outsb
js
mov
cwtl
push
fisttpll
sub
rol
leave
push
or
and
push
jg
xchg
dec
nop
out
pop
stc
shll
incl
ss
xor
leave
je
jge
clc
xchg
mov
iret
pushf
push
clc
xchg
imulb
mov
xchg
xchg
jge
fs
scas
mov
inc
imul
repnz
ljmp
or
sahf
push
cmp
es
gs
add
push
test
ret
cmpl
sbb
fnsave
fnstcw
int3
fistpll
cmp
inc
pop
xor
stos
insb
repnz
xchg
dec
insb
enter
jmp
pop
mov
sbbb
shl
or
cmpsb
mov
mov
pop
pop
lods
js
xor
popa
pop
lret
stc
mov
add
or
xchg
sahf
mov
sbb
stc
rorl
js
mov
fnstsw
imul
mov
mov
orl
push
aaa
ljmp
dec
adc
insb
lret
jecxz
in
and
sbb
mov
in
into
popa
dec
loopne
mov
leave
sbb
inc
mov
sub
je
mov
pop
xor
aad
lock
and
xchg
dec
outsl
mov
adc
mov
push
mov
rcl
xchg
addr16
arpl
add
mov
mov
cwtl
mov
lods
add
sub
pop
mov
dec
repnz
idivl
mov
in
xchg
mov
bound
popf
into
movsb
cmp
add
int3
iret
dec
jno
mov
gs
imul
pop
and
loopne
fs
fcompl
fsubs
jl
lea
bound
xchg
xor
ret
mov
ret
sub
data16
add
add
adc
das
rcrl
add
jae
outsl
jne
ljmp
push
pushf
xchg
push
dec
cmpsl
mov
jnp
insl
xor
stc
ds
ds
ljmp
or
mov
sbb
cs
ret
inc
gs
cmpsb
enter
cmp
je
mov
push
xchg
test
push
stos
pop
icebp
adc
mov
or
outsl
mov
xor
das
int3
mov
adc
icebp
mov
or
out
loope
gs
imul
xor
cmpsl
faddl
jno
enter
sub
gs
lods
pop
pop
stc
add
mov
popf
mov
jg
sbb
push
pop
add
inc
sub
jbe
movsb
iret
imul
or
stc
shrb
xchg
cmpb
cld
mov
xchg
je
mov
daa
and
jae
shll
push
in
ret
out
test
sbb
imul
and
or
jno
sarb
test
xor
jp
cwtl
shlb
push
push
stos
push
jle
call
sub
stc
xchg
sub
jmp
cmp
mov
push
adc
or
xor
push
xchg
dec
mov
dec
push
cmp
scas
cmp
push
push
push
inc
decl
pushf
pop
lea
cmc
push
orl
aam
movhps
sbb
js
push
lds
and
sub
cmpsb
dec
xlat
arpl
hlt
lea
and
mov
push
or
shll
sahf
or
pop
pop
inc
pop
nop
mov
push
lods
cltd
add
fadds
loope
insb
dec
or
inc
xchg
and
mov
icebp
and
repz
jp
aad
pop
test
lret
je
mov
push
loop
xor
stos
mov
mov
add
xchg
cmp
repnz
sbbb
mov
mov
negb
push
push
push
inc
arpl
mov
pop
xor
cltd
cmp
cs
les
push
jmp
call
sub
xchg
scas
loopne
ret
mov
ffreep
adc
out
add
mov
dec
dec
mov
addb
shrb
dec
inc
dec
inc
jecxz
fidivrl
ja
mov
or
jne
jmp
out
sahf
and
sahf
fmuls
pop
es
aad
mov
jp
sub
shll
mov
call
sbb
push
xchg
sub
adc
jno
xchg
cmp
mov
out
sub
adc
pop
outsl
xor
or
int
push
pushw
frstor
mov
movsl
and
sti
stos
push
mov
jmp
jae
jbe
daa
push
xchg
div
into
push
ljmp
aaa
fstpl
mov
add
xor
jne
leave
adc
popa
and
bound
out
fimull
movsl
push
pop
aaa
and
sbb
loopne
out
mov
repz
lcall
pop
gs
pop
dec
mov
into
inc
lcall
mov
adc
fstpt
test
sbb
pop
aad
dec
sbb
inc
inc
fsubrl
lcall
or
xchg
std
jp
movsb
and
loopne
sub
nop
pop
lcall
jle
int
pop
popa
pusha
ja
leave
pusha
xlat
nop
or
fisubs
xchg
pop
frstors
cmp
mov
dec
sub
jge
es
inc
jbe
adc
xchg
adc
xlat
xor
ds
mov
add
leave
adcb
xchg
stos
sbb
cmpsb
nop
stos
js
or
jns
xchg
cltd
ja
pop
rolb
mov
adc
push
movsl
addr16
aam
push
shlb
mov
jg
add
xchg
mov
cld
mull
int3
fwait
outsl
cmc
inc
cmp
or
pop
and
and
ret
jne
leave
cmp
mov
inc
mov
scas
pop
push
or
dec
mov
shl
in
jmp
mov
jne
lahf
repnz
xor
jmp
lahf
lods
sub
mov
movsl
pushf
repz
xchg
int
push
ss
mov
je
test
icebp
test
jle
inc
mov
mov
mov
out
popa
cmp
pop
pushf
jne
pop
inc
in
ret
jmp
jne
cmp
or
and
inc
push
adc
sbb
popf
push
pop
xchg
call
pop
dec
clc
shll
cmp
push
pop
mov
sub
fadds
int
lods
mov
push
xchg
inc
out
dec
dec
xchg
push
sub
mov
xchg
xor
mov
lods
out
or
leave
test
into
mov
sbb
sbbl
cltd
fstps
pop
mov
cli
dec
stc
cmpsb
add
dec
jecxz
push
pop
and
pushf
jnp
loopne
into
lcall
js
aam
jle
inc
int
push
fstl
mov
lea
lret
icebp
xchg
daa
push
ja
hlt
test
loopne
jg
aam
sbb
rcll
ja
into
test
out
test
push
mov
fldenv
mov
insl
aas
mov
xor
das
daa
push
movl
inc
or
inc
movl
out
jno
sbb
dec
insl
ja,pt
aad
enter
jnp
scas
xchg
je
cld
fadd
std
je
les
add
adc
and
out
nop
jae
mov
dec
pop
test
mov
das
xor
fdivrs
mov
cld
xchg
out
inc
nop
fiadds
movsb
fwait
xor
lcall
div
push
xor
mov
cmp
insl
jmp
pop
divb
pusha
sbb
adc
in
shlb
out
push
inc
xchg
ljmp
ror
les
sbb
cs
pop
adc
push
inc
stos
adc
std
in
or
sbb
cmp
dec
add
add
inc
insl
add
stos
and
jg
cmc
out
sbb
stos
dec
lcall
push
xlat
mov
adc
pop
insb
sarl
sbb
loop
sub
push
mov
bound
in
mov
xor
fists
popf
mov
lahf
clc
rcll
inc
lcall
outsl
pop
cmpsb
mov
cs
call
imul
sub
fcmove
cmpb
sti
shll
adc
in
inc
shrl
dec
mov
mov
shll
mov
jl
mov
inc
pop
aad
loope
pop
jae
stos
movsl
js
push
add
out
frstor
out
insb
xchg
mov
push
mov
loopne
dec
insb
sub
ret
inc
mov
cmp
pushf
iret
sbbl
xchg
sub
jne
push
jg
dec
aam
loopne
lock
pusha
add
sbb
sub
arpl
cmp
pop
jns
dec
mov
pmulhw
in
stos
les
add
xchg
ja
push
cli
rcll
mov
imul
outsb
lahf
pop
xchg
push
clc
jne
imull
sbb
in
xlat
dec
insl
lret
inc
stos
aam
out
cmp
in
mov
jb
aaa
addl
outsb
ja
sbb
push
mov
push
adc
xchg
mov
lcall
pop
mov
popa
dec
pop
movsb
push
mov
call
cmp
xchg
les
and
out
stos
insb
je
sub
pushl
loope
filds
push
das
mov
and
mov
out
cmp
movsl
out
jo
fwait
test
inc
cs
xor
mov
sub
mov
lods
jnp
sub
loopne
iret
cwtl
outsb
movsb
jnp
mov
pmaxub
insl
mov
dec
or
sbb
and
hlt
insb
in
aam
dec
aad
call
adc
jne
pop
std
fcomps
in
testb
adc
lahf
outsl
subl
push
mov
push
pop
adc
lahf
es
push
sbb
push
stc
mov
jge
mul
or
mov
jge
imull
lea
push
in
pop
adc
mov
mov
test
ret
std
and
mov
or
pop
int
mov
mov
outsl
mov
movsb
lds
add
dec
jge
xor
xorl
cmpl
mov
mov
cmc
mov
sbb
lcall
mov
cmp
adc
ret
mov
enter
data16
pop
push
sti
cmp
jbe
mov
sbb
bound
insb
sub
movb
inc
jns
insb
cmp
pop
pushf
leave
fisubrl
sahf
pop
in
mov
std
into
jmp
mov
ret
outsl
ss
sarl
pmulhw
scas
pop
adc
push
mov
xor
add
cli
mov
aaa
setno
mov
inc
aad
loop
test
mov
mov
mov
or
cmpsl
fadds
mov
mov
jo
std
push
add
add
ja
dec
cmp
dec
popf
leave
lea
and
jae
cmp
push
rolb
cmp
filds
xchg
fstl
andb
dec
or
sub
int
xor
mov
fldl
dec
mov
out
dec
sub
sahf
mov
inc
daa
push
fbld
gs
pop
std
mov
cli
inc
sbb
or
inc
pop
outsb
push
mov
push
ljmp
shrl
lds
mov
mov
push
sbb
mov
xor
arpl
cli
sbb
faddl
imul
mov
addr16
push
xchg
sbbl
fidivs
repnz
das
ret
mov
push
fucomp
cmp
in
hlt
dec
jne
sub
and
pop
sbb
mov
mov
sub
pushf
int
arpl
and
mov
sbb
ljmp
lcall
lahf
idiv
lret
enter
fcomi
xlat
leave
adcl
repz
dec
push
hlt
pop
inc
lock
push
sahf
addr16
roll
or
xchg
aam
rcrl
pop
jnp
sub
fsubrl
adc
sub
fmul
jmp
sub
mov
jge
pop
inc
lds
inc
xor
xchg
xchg
inc
xchg
sub
sub
shld
xor
in
mov
mov
imul
sub
outsl
shl
in
stc
fidivl
pop
pop
push
lret
and
pop
call
mov
repnz
sub
icebp
scas
sbb
mov
int
jl
mov
adcl
lret
inc
js
into
push
mov
cli
jge
out
mov
or
insl
inc
mov
mov
leave
push
push
and
cmp
add
cs
and
xorb
dec
mov
mov
inc
stc
pusha
aaa
dec
or
sub
mov
and
in
mov
and
push
out
daa
and
jb
das
sbb
cmp
das
insl
pop
xchg
call
xchg
scas
dec
dec
mov
push
lret
sbb
xchg
pop
js
cmp
repz
ja
ja
cmc
int3
pusha
adc
mov
and
aad
add
xchg
xchg
dec
mov
jmp
cwtl
shrl
xchg
inc
call
in
or
pushf
ds
icebp
dec
lods
mov
adc
ja
rcr
fadd
out
subb
ljmp
jnp
mov
lret
xor
jmp
fdivl
lcall
mov
push
lret
mov
movsb
out
lret
mov
jmp
add
inc
cli
lea
sbb
push
fistpl
setbe
ret
lock
or
ljmp
or
cmpsl
mov
jns
pop
push
jne
pop
fs
lcall
fisttpll
fbstp
pop
dec
jb
ficompl
cwtl
mov
mov
orl
movsb
dec
aas
lods
add
in
stos
inc
cmpsl
aaa
mov
or
addb
addr16
sbb
std
inc
cmp
dec
adc
mov
popa
jge
in
and
jle
mov
outsb
inc
stc
cmp
dec
pusha
dec
and
mov
or
sub
cmp
mov
add
stc
pop
lahf
xchg
in
mov
xchg
add
mov
fstp
sarl
in
pop
insb
cmp
fldcw
les
jb
cwtl
stos
fcompl
xor
xor
jmp
sbb
pop
outsl
jl
sub
fidivrs
stos
scas
push
ficompl
pop
test
sbb
or
mov
fldenv
imul
sbb
out
lods
cli
jp
mov
or
mov
xchg
push
test
mov
push
cmc
fs
stos
dec
shrl
lahf
rolb
jmp
rcll
popa
cld
bound
pop
roll
les
xlat
xor
lahf
in
frstor
outsb
fbld
aaa
dec
pop
mov
dec
sbb
shlb
test
adc
push
movsl
xchg
mov
xor
or
scas
dec
xor
cli
push
add
adc
hlt
fstps
mov
loope
jl
add
mov
movsb
dec
mov
sub
jae
stos
adc
mov
std
rolb
push
lahf
shll
or
push
sarl
cmp
dec
jg
repnz
fwait
inc
shlb
jmp
jbe
inc
inc
fdivs
push
pushf
lods
stos
mov
jo
je
add
mov
addb
pushf
sub
pop
sub
loopne
jecxz
push
stos
jmp
and
dec
pop
xor
jmp
sbb
xchg
lahf
or
sub
jns
adc
inc
mov
fstps
inc
cld
stc
xchg
ds
cmpsb
sbb
shll
inc
jmp
inc
aaa
mov
jmp
test
out
mov
inc
sti
pop
adc
shlb
out
and
push
sti
mov
loope
aam
incl
push
mov
test
xchg
aas
jo
lea
arpl
mov
mov
lahf
cmp
cmp
loopne
in
inc
pop
cmp
movntps
push
negb
out
pop
sbb
xchg
add
mov
mov
pop
adc
sub
lea
je
shrb
int3
xor
cli
repz
int
repnz
xchg
clc
cld
jl
clc
jg,pn
into
or
cmpsb
loope
push
sahf
lea
hlt
mov
pop
lock
nop
mov
loopne
xor
push
pop
aas
inc
es
mov
insl
test
gs
sub
cmc
inc
ds
or
in
push
pop
call
mov
adc
mov
popf
pop
jle,pt
sbb
xchg
test
jnp
mov
and
repz
outsb
cmpb
loopne
shlb
data16
loop
jne
adc
out
rcrl
das
stc
mov
repz
sub
dec
test
pop
adc
mov
mov
out
out
imul
mov
cmc
push
or
mov
xchg
lahf
inc
mov
inc
push
mov
xchg
jno
int3
mov
cltd
pop
lea
sbb
mov
push
mov
or
insl
stos
cmpsl
cmp
es
push
or
lret
push
lods
loopne
fcompl
xorl
inc
push
pop
cli
rorb
je
arpl
shlb
mov
mov
xlat
in
mov
inc
inc
mov
xchg
imul
idivl
hlt
adc
adc
inc
shl
sub
es
decl
pop
push
xor
cmp
data16
xchg
sbb
nop
push
shrd
mov
or
xchg
jns
mov
push
cmp
shl
out
movsl
push
imull
addr16
fwait
xlat
cmpsl
les
add
rorb
sti
lods
push
pop
aam
add
scas
or
je
fisttpll
jbe
or
pop
cwtl
xor
push
pop
rorb
xchg
pop
pushf
inc
add
dec
lcall
pop
fidivrl
jmp
mov
movl
dec
fwait
sahf
ud1
pushf
cmpb
scas
xchg
mov
sahf
aad
sub
jnp
lret
xlat
mov
cmp
adc
jnp
or
insl
or
sub
inc
mov
fiadds
es
jbe
pusha
ss
icebp
add
ljmp
repz
jo
xchg
les
push
jmp
and
xchg
mov
mov
add
push
ja
xchg
dec
pop
aad
inc
int3
std
cmp
cld
jns
mov
cwtl
push
jmp
ds
addb
push
pop
mov
sbb
xor
test
loope
stos
pusha
pusha
test
scas
mov
aam
cmp
ss
or
add
test
dec
jnp
fbld
mov
popf
negb
or
adc
adc
mov
stc
les
ret
ret
mov
xchg
dec
mov
aad
cmp
aam
cmp
int3
stc
sti
pop
push
loopne
push
push
dec
xor
xrelease
mov
xchg
iret
ss
and
scas
mov
sbb
mov
ret
je
repnz
sti
cmp
ss
lods
aaa
and
lahf
fisttpll
mov
clc
scas
bound
sbb
sarl
stos
xchg
out
mov
xor
jno
sub
leave
jmp
idivl
loope
popa
sub
xchg
xchg
shll
sub
jg
xor
js
pop
jge
stc
stc
sbb
lret
xor
lods
mov
mov
lret
inc
mov
int3
repnz
cli
sbb
jne
cmc
insb
std
lret
cmp
jg
push
stc
rcrb
add
imul
adcb
sti
sbb
adc
fdiv
add
sbb
mov
jne
pop
lods
push
lret
mov
rcr
jecxz
iret
je
or
arpl
mov
mov
xchg
adc
jge
cld
xchg
push
stc
dec
mull
cltd
xor
dec
cli
scas
bound
jp
popa
adc
inc
mov
negl
mov
xchg
outsl
mov
sub
mov
in
mov
cmpsb
test
lret
shlb
in
fidivrs
jmp
push
mov
dec
lea
sub
mov
je
in
push
sahf
inc
mov
sub
jmp
movsl
jl
in
lret
push
pop
bound
lods
push
add
sub
sti
mov
rcll
or
jle
popa
sbb
lret
push
jbe
mov
lock
dec
sub
js
jge
sub
mov
popa
mov
inc
push
ficomps
repnz
andl
lds
jne
orl
cmc
jg
mov
lods
mov
lahf
adc
test
jge
in
ljmp
and
icebp
jl
negl
pushf
fbld
dec
hlt
data16
clc
in
xor
mov
daa
testl
jmp
dec
ss
jbe
xor
sbb
notl
imul
int
fimull
pop
fwait
sbb
cli
adc
push
outsl
bound
je
xchg
lcallw
cmc
sub
xchg
dec
pop
jecxz
xchg
pop
out
add
popl
roll
sub
mov
daa
stos
fiadds
cmp
push
add
adc
shrl
dec
movsb
or
scas
sbb
mov
dec
pusha
lods
jl
mov
test
sti
fdivrs
push
cmpsb
jg
hlt
sub
inc
int
inc
out
ficomps
pop
lods
mov
stos
and
out
add
sbb
adc
dec
iret
mov
mov
cli
fisubrl
xor
push
xorb
ss
mov
insb
and
jae
pushf
pop
push
pop
push
in
jge
push
adc
sbb
dec
mov
fdivl
or
aaa
or
sahf
sub
scas
mov
fisubrl
int3
sti
lea
fs
sti
movsb
push
jne
mov
mov
xor
xchg
xchg
insl
sahf
loop,pt
movsl
sbb
mov
mov
insl
jns
lret
dec
push
cltd
out
add
xchg
je
aam
cmp
rol
jmp
jnp
inc
lock
push
mov
dec
pop
pop
xchg
mov
out
in
lahf
aaa
cmp
loopne
and
xchg
add
loope
sbb
push
cmp
stos
sub
xchg
adc
rcrl
dec
and
jo
jns
add
cli
lock
stos
fstpl
cmpsl
add
out
xchg
js
fidivrl
bound
or
or
push
stc
jnp
mov
rcl
repnz
xchg
jmp
mov
movsl
mov
add
mov
js
das
jg
fxch
test
xor
fldenv
lds
aaa
xor
aaa
leave
ror
xor
cmpsb
jg
xchg
add
lea
pop
push
shrb
notb
or
xor
repz
pop
std
adcl
mov
and
test
ds
mov
xrelease
movsl
fstpl
jns
sub
rorb
ljmp
push
jno
add
cmp
incl
pop
xchg
std
andb
cmp
leave
outsl
mov
popa
sahf
inc
fildll
mov
xchg
and
fmuls
push
fstps
dec
mov
cmp
test
or
sub
stos
fmul
push
test
sbb
scas
pusha
jmp
adc
imul
test
push
mov
dec
push
push
lock
and
mov
jne
clc
push
or
cmp
int
out
addr16
ret
test
dec
out
cmova
xlat
adc
dec
loope
mov
or
adc
xor
movsb
mov
addb
add
or
or
and
mov
add
ret
fwait
xor
daa
adc
or
and
addr16
cmp
jae
jne
pusha
es
cmp
push
xor
pop
xchg
xchg
and
sub
mov
pop
daa
movl
mov
pop
mov
or
test
movsl
cmpb
cmp
daa
popf
pop
stos
ret
int3
sbb
insl
mov
imul
testb
jnp
pop
sub
dec
sbb
les
insb
imul
repz
stos
mov
inc
add
in
enter
lock
pusha
rclb
ss
xchg
mov
pop
std
jl
das
sbb
push
pop
cmp
sub
cs
mov
test
insb
dec
sar
xor
lods
lret
lcall
and
mov
stos
mov
rol
fs
jb
ret
and
inc
fidivrs
gs
xor
mov
sub
ds
dec
ret
pushf
jge
pop
xchg
inc
or
dec
cmpb
push
jnp
adc
cmp
sbb
add
loop
fwait
xchg
mov
inc
adc
sbb
mov
in
add
inc
mov
add
pop
js
mov
xor
cmp
xor
sti
ret
out
push
jg
xchg
pop
xor
pusha
dec
xor
dec
xchg
repz
fwait
pop
push
mov
aad
sub
push
dec
pop
add
xchg
mov
ja
fucomi
or
rolb
xlat
scas
jl
inc
mov
jns
sbb
in
insb
cmp
mov
lds
out
fcomps
std
cmp
inc
js
movsl
jno
and
lret
inc
mov
push
mov
xor
pop
out
pop
repz
sub
xor
lret
mov
stc
xor
sbb
insl
inc
stos
pop
jge
sarb
daa
inc
mov
push
add
test
mov
aad
mov
hlt
xlat
add
fcompl
shlb
mov
pop
test
call
and
test
push
dec
into
popf
dec
mov
ffree
push
sub
rcrb
enter
js
cmp
pop
sub
mov
or
ljmp
mov
inc
add
inc
dec
mov
sub
dec
in
mov
mov
add
mov
mov
inc
ret
xchg
and
pop
pop
int
call
cmp
iret
adc
daa
fsubs
negb
sub
repnz
sahf
lea
je
enter
insl
pop
loopne
inc
fimull
and
xchg
xchg
xchg
push
push
push
in
pop
cmp
nop
imul
mov
imul
fwait
xchg
mov
outsl
mov
jl
xor
mov
xor
inc
pop
mov
cmpsl
xchg
into
inc
mov
test
xor
sti
popf
pop
or
xchg
xchg
mov
sub
nop
sbb
mov
call
adc
pop
push
negl
adc
cmp
sub
push
pushf
mov
int
push
jo
int
pop
cli
mov
mov
push
cmp
inc
push
pop
imul
cwtl
test
inc
andb
and
fcom
xchg
les
cmpsb
cli
fcmovnbe
push
repnz
jno
mov
int3
jae
jno
ja
lret
fimuls
lea
push
dec
cmp
jnp
nop
jmp
mov
mov
lods
js
iret
dec
rcrl
push
push
test
arpl
icebp
into
xor
sbb
mov
sbb
in
jg
add
test
test
mov
repz
cltd
cmp
es
add
or
push
movaps
mov
data16
lock
mov
push
test
mov
jb
cmp
loopne
cmp
sbb
cmpsl
jmp
and
mov
dec
ljmp
sbb
hlt
pop
xor
sub
les
clc
cwtl
negl
test
std
notl
jmp
popf
mov
pop
out
push
fcomps
imul
popf
das
push
fsubs
mov
aas
mov
cmp
imul
pop
fwait
js
sbb
mov
lcall
aad
mov
movsb
lods
xchg
je
pop
daa
dec
and
dec
xchg
rclb
add
adc
lock
clc
shll
loopne
ljmp
cld
inc
inc
lds
repz
or
lahf
fldlg2
imul
aaa
imul
xchg
mov
add
xor
fs
jle
data16
in
cmpl
arpl
fisttps
cwtl
loop
insl
mov
dec
imul
push
leave
mov
into
mov
in
fistps
dec
push
pop
insl
je
xor
mov
mov
dec
mov
mov
mov
cmp
mov
jbe
loop
mov
sbb
cmp
and
loopne
xchg
ss
pop
fists
pop
outsb
scas
adc
or
xchg
mov
insb
sbb
adc
xor
lea
adc
fisubs
mov
mov
out
sbb
xchg
pop
add
inc
and
mov
adc
cmp
popf
lods
inc
int3
outsb
popf
or
test
insb
push
or
push
out
push
mov
push
xor
sub
inc
lret
aaa
aam
jmp
lock
cs
jne
scas
shl
xchg
add
movb
call
or
mov
jnp
or
cltd
shll
sub
sub
ret
and
mov
imul
mov
add
or
sbb
add
test
sbb
sbb
add
ret
push
push
add
xchg
movsl
incb
lods
push
loopne
and
add
popa
add
lret
adc
outsl
add
mov
inc
xchg
scas
pop
mov
mov
insl
jge
sahf
mov
lods
fimull
pop
iret
mov
xor
push
inc
into
mov
ja
mov
xchg
adc
movsb
adc
push
and
sbbb
das
rolb
insl
lcall
cld
push
jmp
imul
jns
add
test
push
push
adcl
push
sbb
push
dec
imul
ljmp
adc
or
jne
cmc
cmp
and
jnp
data16
es
xor
lahf
dec
stos
or
adc
inc
fiaddl
ja
mov
or
push
popf
and
add
clc
mov
cmp
adc
clc
xchg
jb
add
or
inc
and
jmp
arpl
bsr
stc
mov
push
lret
in
out
mov
mov
pop
mov
push
push
rolb
add
sbbb
addr16
mov
sub
xor
aaa
daa
loope
cmp
inc
add
stos
mov
and
lods
pop
push
inc
hlt
xchg
xchg
cmp
pop
leave
and
adc
movsl
jno
mov
and
xor
jae
nop
inc
add
mov
push
out
jmp
adc
outsb
fwait
cmp
pop
addb
pusha
pushf
inc
adc
iret
mov
or
pop
xchg
mov
adc
jg
pop
loop
add
push
mov
idivb
in
and
mov
push
and
addr16
inc
fnstcw
inc
imul
vcmppd
cwtl
imul
test
in
pop
sub
mov
lock
ljmp
int3
lahf
inc
mov
sti
fldcw
mov
cmp
orl
repz
rcr
test
xchg
iret
cld
cmpsl
push
clc
cld
call
pusha
cs
xor
je
jns
or
jmp
out
pop
pop
mov
pop
aaa
ds
test
dec
add
mov
inc
cmp
scas
popf
faddl
aaa
pop
icebp
sub
sbb
inc
imul
xor
jnp
es
mov
sub
shrl
lret
and
cwtl
icebp
mov
or
jns
imul
repz
dec
push
rorb
sbb
push
sbb
enter
mov
int
mov
sarl
push
mov
pop
pop
xor
daa
cmp
xlat
rcrl
hlt
sub
ds
fwait
push
std
or
xor
lahf
inc
adc
mov
aad
and
stos
pop
fs
test
pop
cmp
frstor
movsb
mov
add
cmp
sahf
lea
pushf
in
or
and
rcr
add
pop
outsb
and
pop
js
movsl
dec
popf
inc
dec
pop
dec
cmp
and
adc
xlat
mov
lods
fsubr
enter
in
scas
cs
xor
dec
roll
mov
sbb
int3
fisttpll
mov
jmp
mov
stos
cmp
push
inc
jecxz
cmpsl
mov
jg
lret
sub
repnz
imul
out
sbb
repz
daa
cwtl
stc
sub
aaa
mov
push
shl
inc
xor
or
fadd
stos
es
es
cltd
push
xor
fldl2e
sbb
or
int
pushf
dec
pop
popf
das
mov
test
mov
mov
mov
shl
stc
xor
jmp
xchg
inc
clc
cmpsb
bsf
push
cld
pop
bound
adc
std
iret
in
int
test
je
loop
mov
mov
cld
add
adc
jo
push
lret
dec
jmp
add
sbb
mov
adc
mov
pusha
mov
jle
mov
or
addr16
lret
adc
sbb
pop
sbb
aad
push
xchg
sahf
in
mov
dec
mov
mov
cmp
cmc
testl
pop
icebp
push
das
loop
or
mov
pushf
popf
test
xchg
out
mov
stos
in
pop
nopl
inc
push
mov
add
adc
repnz
mov
loope
sub
adc
or
adc
scas
mov
push
jnp
test
aad
movsl
lret
jg
cwtl
test
addr16
add
mov
mov
jecxz
dec
out
pop
inc
ficomps
lods
in
lock
ficompl
lods
add
or
mov
inc
test
xor
mov
daa
fisttps
sarb
inc
rorl
push
or
and
pop
cmpsl
cld
mov
lods
xchg
and
fisttps
mov
mov
in
sbb
push
pop
call
and
lahf
and
sbb
xor
std
mov
test
xor
and
call
sub
sbbl
ror
in
movsl
test
aas
scas
adc
pop
popa
data16
mov
mov
push
xchg
lahf
inc
jnp
sbb
ret
add
mov
pop
pop
xchg
push
shlb
lods
loop
dec
or
int
pop
pop
jp
cmp
add
pop
js
jmp
add
and
int3
mov
xor
nop
lret
notb
inc
sbb
mov
jno
xor
push
in
sub
lods
test
jl
push
cmp
mov
xor
je
pop
mov
adc
mov
sub
sbb
pop
insl
mov
sub
in
sbb
mov
js
repz
cwtl
aaa
in
orl
scas
es
dec
dec
pop
xlat
or
es
dec
sahf
scas
sbb
mov
les
pop
jge
xchg
jmp
mov
sub
stos
inc
and
sbb
cltd
push
xchg
fcomp
aaa
outsb
pop
lea
ret
das
movsl
shrl
arpl
int
inc
adc
imul
push
sbbl
icebp
out
aaa
in
or
inc
cld
cmp
shlb
mov
fdivs
pop
and
jle
pop
adc
jo
and
lods
addr16
insl
pop
mov
cmp
mov
mov
aas
lcall
and
es
xor
rclb
cld
repz
xor
fcoms
and
les
mov
lcall
jle
in
fldenv
xchg
sbb
cmp
inc
leave
dec
jnp
mov
sbb
sub
lcall
sti
pusha
hlt
sbb
cltd
cld
sbb
jp
fildl
dec
xor
sti
ret
stc
ds
cmp
xchg
sbb
inc
test
repz
xchg
lock
dec
std
inc
and
push
repz
xor
pop
fistl
mov
insl
add
add
cmpsl
pop
fistps
sbb
fisttpl
xor
cld
test
cmp
pop
popa
and
pop
mov
movsb
out
out
jnp
scas
xor
or
arpl
jecxz
xchg
push
jp
aaa
cmp
mov
cli
sbb
or
add
jge
sbb
addr16
or
rcl
imul
and
int3
dec
test
out
mov
inc
int
xor
xchg
and
ljmp
repnz
mov
sub
inc
xor
push
or
sub
dec
js
xchg
out
mov
ds
jp
sbb
jo
inc
jo
ret
stc
sbb
repnz
inc
sub
xchg
cmpsl
out
movb
adc
in
jnp
rclb
lds
pop
jg
xchg
fmull
les
ja
jbe
clc
into
fidivs
mov
es
push
out
push
lahf
ljmp
adc
push
mov
movsb
pusha
cwtl
enter
xchg
xchg
les
fdiv
inc
mov
div
mov
icebp
sub
leave
mov
sub
mov
cld
out
sub
or
out
ss
sbb
and
repnz
enter
mov
cmpsb
push
xchg
jne
xchg
xchg
push
inc
adc
std
cmp
xor
scas
mov
in
out
fistpll
xor
sbb
or
jno
dec
lds
imul
mov
or
cwtl
xchg
loop
rcrl
iret
sub
scas
mov
negb
jmp
add
nop
stos
or
xor
xchg
shr
loopne
rcrl
xor
loope
popf
cmp
and
pop
inc
into
pop
or
pop
cmpsl
cmp
cmp
outsl
je
fsubs
push
fstpt
mov
sub
cmp
dec
or
icebp
lcall
fimull
mov
dec
dec
push
inc
es
into
pop
ja
sub
pop
jno
or
cmpsl
nopl
repz
in
mov
cs
or
mov
jp
adc
in
and
mov
sti
xor
jl
and
push
repnz
aad
out
cmp
jne
stos
or
outsl
xchg
idiv
xor
js
cwtl
rcrb
xchg
or
dec
fildl
ret
or
mov
cltd
add
push
outsb
or
dec
push
sbb
push
cmpsl
dec
repnz
ret
xchg
test
test
shrb
sub
pop
cld
fmul
stos
std
in
push
fiadds
lahf
bound
jb
push
nop
insb
jle
and
dec
xchg
aam
xchg
add
pop
xchg
mov
push
imul
les
xlat
mov
jp
cmpsb
dec
stos
or
push
jno
sti
xchg
push
scas
dec
insl
mov
jo
cmp
sub
leave
std
adc
adc
xor
aas
repnz
jmp
ja
pusha
fnsave
push
pop
rcrl
adc
push
lods
cwtl
dec
push
insl
scas
push
bound
out
cs
cmpsl
pop
cmp
mov
xchg
add
jno
outsl
fdivl
hlt
andl
outsb
jg
negb
sub
test
loopne
mov
in
adc
sahf
mov
divb
insb
ffree
cwtl
movsl
xlat
pop
mov
or
jae
mov
mov
adc
ljmp
inc
sbb
sbb
cltd
jl
mov
add
shrl
int3
push
cmp
ret
adc
and
ss
pusha
mov
mov
mov
push
push
add
push
popa
jo
stc
test
lahf
lods
lret
lds
or
mov
sub
mov
or
mov
xchg
mov
lods
mov
sub
cmp
iret
gs
pop
add
dec
pop
mov
lcall
std
outsb
mov
xor
jns
mov
xor
push
lods
add
sub
aam
inc
popa
mov
leave
dec
shlb
icebp
add
cld
sbb
adc
movsb
cli
xor
xor
daa
mov
nop
rolb
sbb
and
daa
dec
dec
popa
movsb
outsl
call
xchg
into
aas
or
clc
fnstenv
test
lock
inc
out
pushf
or
out
xor
arpl
and
sarb
lea
pushf
sbb
push
adc
sub
lret
pop
aam
adc
jle
and
cmp
and
push
add
pushf
jmp
lea
pop
push
sub
or
loopne,pn
repz
lret
jns
ja
jmp
shrb
out
sub
dec
insl
jmp
mov
shl
ret
and
es
add
mov
pop
xchg
push
movsb
pop
xchg
arpl
inc
out
sub
mov
mov
sbb
and
and
scas
xchg
out
test
dec
mov
xchg
icebp
sahf
dec
loop
push
mov
add
mov
enter
ljmp
mov
adc
sbb
xchg
into
inc
test
dec
sbb
lock
jge
inc
hlt
mov
or
xchg
add
repz
mov
cmp
cmc
or
pop
xchg
push
sarb
push
add
xchg
stos
mov
ret
fsubr
stc
int3
repz
shrb
xorb
out
pop
and
sbb
xchg
push
cwtl
lds
call
jne
push
dec
inc
out
aam
and
testb
xchg
dec
jg
sub
lds
jne
mov
lahf
xchg
jns
in
ror
fcoml
lret
inc
lds
leave
mov
ljmp
dec
stc
popa
adc
mov
outsl
leave
std
popf
insb
mov
mov
out
add
mov
lcall
addr16
aam
sbb
in
xor
popa
xchg
pop
jmp
and
in
or
insl
out
adc
mov
ja
push
aaa
andb
and
jmp
int
sub
int3
mov
jbe
ja
int
cltd
mov
jnp
xor
dec
and
cmp
subb
jg
sub
mov
out
sbb
js
and
ss
idivb
jl
inc
push
lds
ljmp
test
mov
mov
out
add
mov
movsb
stos
lds
pop
jp
and
adc
mov
pusha
imul
in
ja
les
mov
mov
in
shl
clc
in
mov
in
pop
mov
decl
xor
mov
jle
fidivs
push
pop
dec
xor
push
xchg
int
aad
jmp
push
lret
das
pop
sub
daa
mov
aaa
inc
cs
fs
movsl
lods
rcr
jge
imul
loop
sub
jb
push
mov
mov
iret
in
cltd
add
in
and
pop
sub
mov
shl
insl
test
movsl
adc
in
xor
jl
push
repz
push
or
add
inc
test
sub
push
pop
scas
movsl
xchg
sbb
and
lock
popa
jmp
cmpsb
or
mov
mov
cmc
sahf
int3
xchg
mov
shrl
sub
pop
rcl
push
fwait
out
push
pop
ds
mov
decb
mov
rcrb
push
push
popf
xchg
push
push
mov
mov
mov
mov
cmp
lret
pushf
sbb
push
lods
and
pop
or
push
pop
xlat
xor
aaa
int3
ds
fcomip
jecxz
sbb
addr16
cmp
stos
add
sarl
repz
dec
fisubrl
dec
sbb
rol
cmpsb
push
xorb
cmp
shll
inc
jae
roll
fists
pop
inc
cmpsl
sub
popa
fs
cmp
ja
rcll
push
push
mov
ja
movsb
mov
mov
push
scas
sbb
sub
out
sub
push
in
dec
or
mov
ret
pop
sar
cmp
pop
aas
xor
lahf
jbe
pusha
jo
pop
xor
pusha
pop
mov
cli
popa
xchg
aas
xor
dec
xorb
or
lahf
sub
fldz
push
or
dec
or
adcl
jp
lea
jg
stos
add
lock
shlb
jbe
cmp
pop
and
fcos
mov
jbe
mov
sub
pop
insl
pop
xchg
xchg
outsl
loopne
pusha
cmp
or
dec
and
and
stos
add
mov
shl
xor
fcomps
mov
pop
shll
popf
sbb
dec
mov
xchg
xchg
js
mov
or
les
cmpsb
scas
jl
aaa
jp
test
enter
aam
repnz
pushf
jns
test
mov
jecxz
sub
loop
mov
push
xor
fwait
test
sub
push
in
loopne
hlt
sti
push
fimull
repnz
push
jecxz
inc
dec
imul
inc
fbld
mov
xor
mov
and
pop
ljmp
or
pop
mov
xor
fwait
or
mov
popa
int
cmp
pusha
pop
repz
loope
ret
mov
sub
cmc
test
ret
bnd
mov
das
xchg
cmp
jp
push
iret
pxor
mov
sub
mov
lods
notb
rol
movsb
adc
js
xrelease
jge
fwait
out
lds
movsb
mov
push
push
das
lret
jmp
imul
fdiv
insb
mov
lret
psrad
cmp
xchg
or
jae
outsb
call
fcompp
movsl
or
mov
add
adc
cmp
lods
hlt
js
movsl
xor
ljmp
div
sbb
sub
adc
xchg
pop
movsl
jae
int3
push
or
lods
jl
push
mov
call
mov
jp
sub
mov
jae
push
sub
aas
pop
pop
push
int3
push
rolb
shl
loop
adc
adc
add
lods
adc
andl
pop
or
aaa
andb
insl
fsubs
lret
movsb
or
push
subl
xchg
cmp
cmp
ficomps
sbb
xchg
rclb
fldt
inc
push
hlt
out
jae
add
test
repnz
mov
leave
sbb
sarb
sub
sub
stc
add
icebp
sub
mov
xor
jbe
fdivs
addb
daa
stc
adc
jbe
pop
loopne
and
xchg
lods
cld
ds
loop
stos
mov
pop
sbbb
in
push
add
das
mov
icebp
dec
inc
cmp
mov
loope
add
lods
sbb
mov
pop
sti
hlt
ficompl
dec
outsl
aam
mov
mov
lahf
orb
inc
pop
stos
insb
rcrl
lea
cs
xchg
mov
jns
xchg
cmp
mov
int
sbb
adc
dec
hlt
push
jl
sub
mov
push
dec
mov
out
dec
adc
xor
jge
jmp
rol
push
loop
xchg
cmp
mov
mov
pop
popa
jne
inc
inc
jb
sbb
je
nop
sub
sbb
push
out
aaa
jno
sbb
mov
and
inc
xor
xchg
push
lcall
lcall
mov
dec
cmp
jecxz
aas
scas
test
notl
pop
lcall
adc
fndisi(8087
dec
out
mov
imul
rorl
push
mov
jl
sbb
cmp
cmp
push
orl
jg
roll
mov
sub
icebp
inc
roll
enter
js
jne
leave
cmp
push
add
jecxz
inc
lcall
add
add
mov
mov
loop
jo
mov
inc
repz
rclb
in
jge
fcmovnbe
xor
sub
lcall
shlb
jmp
mov
fs
pop
test
jge
mov
sbb
cld
orb
loop
mov
enter
mov
lret
lock
push
dec
jp
jl
test
lcall
cmp
subl
filds
sbb
cmpsl
cmp
xchg
dec
fnstenv
in
sub
dec
int3
mov
or
popa
mov
xor
cs
push
mov
jl
jbe
mov
adc
sub
adc
adc
loop
dec
stos
sti
lcall
mov
jmp
xchg
insl
inc
test
mov
mov
jb
into
ficoms
adc
add
push
mov
jmp
xchg
mov
dec
outsl
xor
lret
lret
xchg
jge
mov
mov
fmul
fcomp
push
xor
decl
push
add
add
aam
mov
ljmp
les
js
pop
fwait
mov
xlat
lods
add
jmp
cmp
cwtl
add
and
dec
mov
inc
xlat
pop
add
mov
pop
shll
loop
mov
cli
pop
aad
jecxz
jecxz
lea
clc
sub
jbe
shlb
out
cmpb
sub
imul
addr16
cmp
lock
sub
add
outsb
xlat
adc
inc
lds
pop
cmp
std
mov
jmp
jno
jb
sbb
popf
pop
mov
jne
pop
xor
or
dec
push
sub
mov
pop
mov
mov
lcall
and
neg
or
test
daa
push
testb
sbb
fnstenv
adc
mov
mov
and
cmp
dec
jmp
mov
test
dec
leave
lcall
enter
out
jmp
test
pushf
dec
cmp
push
sub
dec
fldcw
or
jne
push
lahf
aad
dec
xorl
jge
ficoml
aaa
add
ss
fbstp
lcall
aaa
dec
inc
fisubs
lret
adc
lock
icebp
inc
cmp
jmp
jae
jb
cmpb
sbb
shrl
sub
cmp
cmp
add
ret
or
pushf
cli
mov
sub
test
jno
xchg
repz
inc
or
xchg
cmp
push
or
lods
stos
bound
std
or
sbb
dec
cmpsb
push
dec
dec
pop
mov
or
fisubl
and
jno
ss
jne
cli
lcall
cmc
cmpsl
mov
loopne
inc
out
pushf
mov
stos
shll
pop
and
insl
sbb
mov
xor
xor
cwtl
push
movsl
pop
inc
inc
jno
xchg
ret
push
rcl
push
leave
mov
fmuls
jbe
jmp
inc
xor
or
and
shl
ljmp
rclb
decl
scas
in
sub
jnp
mov
jl
test
fstl
repz
or
push
out
lret
sbb
into
cmpsb
mov
adc
xchg
stos
mov
mov
aaa
and
out
test
xor
lock
cltd
insl
or
mov
fsubr
les
xor
adc
ja
icebp
movsb
push
out
dec
loop
flds
ret
dec
shl
mov
jg
or
cmpsb
gs
call
xchg
stos
lcall
cmp
imul
and
pop
mov
js
ret
loop
xor
lcall
insb
ret
sbb
inc
pushf
outsl
push
mov
mov
enter
test
mov
mov
mov
fs
fsub
ja
inc
test
mov
pop
mov
jmp
dec
nop
mov
sbb
mov
imul
mov
cmp
lret
aas
jo
add
cmp
cmp
mov
fs
jne
cld
pop
mov
lds
outsb
inc
ljmp
mov
cli
mov
mov
in
cmp
dec
mov
je
insb
pop
cmpsb
aad
cmpsb
pop
das
iret
xorl
push
mov
push
sbb
pop
dec
pop
loop
pop
stos
out
inc
mov
in
xor
adc
xchg
jge
mov
xchg
lds
dec
dec
sbb
push
jecxz
xchg
aas
jbe
pop
push
in
sbb
adc
or
cmp
shl
jg
in
adc
lea
or
fs
jl
fdivr
sbb
lret
xor
test
mov
mov
push
pop
fwait
mov
add
sbb
inc
data16
subl
stos
xor
js
or
lods
fwait
jmp
lds
loop
mov
aad
add
mov
fs
out
push
lahf
sub
fisttpl
or
js
sub
shll
mulb
fcomi
xchg
mov
jnp
cmpl
sarb
imul
cs
in
add
jmp
push
insl
stc
ljmp
fs
ret
imul
push
sbb
pop
jge
fwait
test
loop
inc
sbb
adcl
cmp
incb
push
lock
pushf
add
fbstp
inc
or
push
and
repz
out
cmp
loop
jb
xchg
scas
mov
movsb
fcomp
shll
pusha
test
xlat
out
xchg
push
push
mov
aas
out
pop
test
filds
mov
mov
sub
push
js
xor
mov
jg
cmc
mov
out
add
arpl
mov
in
mov
sub
int
inc
or
sbb
outsb
xchg
sub
lcall
xchg
adc
mov
sub
ret
pop
ret
js
inc
pop
pushf
ja
fisubl
arpl
call
jle
cmp
enter
xchg
loop
js
add
aas
jae
mov
inc
in
jbe
mov
sbb
mov
sub
inc
lret
mov
add
sahf
sbb
pop
flds
lock
jne
aam
test
sbb
daa
xor
cmp
out
add
or
dec
cmc
jmp
in
xchg
ret
push
lahf
sub
and
je
stos
std
js
mov
scas
jmp
lret
enter
hlt
into
cmp
xchg
das
aas
push
and
push
add
repnz
icebp
shll
cmp
or
ljmp
fcoms
je
fcmove
mov
jnp
in
mov
or
jp
and
sub
xchg
sahf
dec
mov
add
pop
sub
mov
jne,pt
cli
sub
orb
cs
out
jb
or
sbb
sub
negb
loope
xorl
and
xor
and
sbb
lods
call
mov
sub
mov
xor
fstpt
out
or
rcrb
stc
pop
orl
dec
pop
push
xor
scas
mov
mov
sti
imul
sbb
pop
jo
fstpt
aaa
fdiv
imul
and
jo
loopne
cld
inc
mov
pop
sub
fs
das
and
jnp
cmp
ds
pop
repz
rcl
or
lahf
or
xor
push
jae
cmc
adc
xchg
shr
cmpl
push
sbb
adc
scas
pop
mov
inc
fistpl
push
or
inc
in
mov
sbbb
inc
rcpps
cmp
xorb
mov
mov
pop
jmp
jge
xor
loopne
mov
jp
lcall
addr16
xchg
iret
imul
movsb
repnz
arpl
cmpsl
lods
xor
xlat
int3
sbb
rcrb
aam
mov
pop
sbb
mov
lock
sbb
fwait
jnp
inc
inc
mov
test
lahf
cmp
lds
add
adc
fcoms
loop
js
out
clc
inc
in
xlat
hlt
nop
inc
jmp
or
and
jmp
push
mov
cmpsl
mov
lods
dec
fcom
adc
cmp
je
lret
loop
sbb
push
or
int
xor
adc
cmp
jle
fisubrl
inc
pop
mov
and
pop
ret
mov
or
movsb
int
lret
or
mov
mov
jnp
shlb
out
nop
test
cld
in
pop
jb,pt
lret
hlt
rcrl
std
inc
sub
or
pabsd
pop
nop
xchg
lods
movsl
pop
xchg
push
xchg
loopne
push
out
fdivl
cltd
mov
or
or
mov
cmp
inc
adc
scas
fimull
pop
xor
pushf
fistpl
push
xor
mov
mov
pushf
iret
testl
outsl
push
pop
call
ljmp
insl
mov
xor
jbe
shll
jp
pop
sbb
insb
add
mov
sbb
adc
push
inc
or
shrb
aad
imul
dec
and
inc
cmp
and
pop
dec
fadd
push
dec
xor
add
mov
add
sbb
dec
dec
xchg
push
clc
sub
jnp
xor
or
ret
cmp
sbb
decl
ljmp
iret
pop
icebp
dec
mov
test
inc
stos
mov
mov
and
int
js
jg
into
and
jbe
gs
cltd
pushf
xchg
leave
xchg
xchg
pop
sbb
movsb
sbb
fucomp
repnz
xchg
pop
es
xor
or
mov
dec
sbb
loope
jge
mov
pop
pop
inc
std
mov
loopne
popa
xchg
test
cmc
jg
gs
push
into
aam
xor
inc
or
inc
push
cmc
jae
xor
sub
and
lret
and
mov
inc
and
ljmp
sti
cmc
or
fsts
es
xchg
inc
jge
mov
ss
addr16
inc
inc
cmpsl
adc
xlat
jge
cmpsb
insl
and
mov
cmp
jae
pop
dec
xchg
mov
mov
pop
xor
sbb
inc
frstor
inc
mov
jno
pop
ss
cmp
inc
das
andb
insl
pminsw
or
mov
push
push
mov
test
cli
lret
hlt
cs
mov
add
inc
dec
clc
mov
adc
xabort
test
add
jns
push
shlb
jg
mov
dec
xlat
movl
mov
xchg
sbb
mov
mov
int
xor
and
xchg
cmp
or
mov
cmp
mov
xor
sub
pop
jecxz
mov
add
mov
and
orl
pop
xlat
cmp
div
das
test
int
xor
inc
cmp
or
test
loop
stos
mov
negl
dec
ror
aam
inc
sbb
loope
aad
push
mov
push
sub
push
add
jl
fadds
jae
push
xor
dec
push
stos
jnp
lds
decl
push
push
xor
lret
pop
push
add
into
shll
fsub
js
mov
adc
inc
and
inc
enter
jge
cmp
sbbl
sbb
in
jmp
jl
adc
push
mov
push
in
mov
aaa
jae
outsl
mov
aam
and
and
mov
repnz
cmp
mov
cmp
icebp
add
mov
test
imul
or
xchg
xor
xchg
repz
xchg
outsl
pop
and
mov
mov
push
imul
cwtl
and
iret
test
data16
enter
add
xor
inc
rorb
sub
or
stos
or
xor
sbb
sub
ja
scas
cld
lods
xchg
repz
fildl
mov
mov
jp
pop
mov
incb
inc
ss
cmpsb
scas
pop
je
stos
cli
push
mov
xchg
lods
pop
popa
sbb
movsb
out
out
mov
mov
test
mov
std
lahf
lret
adc
scas
sub
cwtl
or
scas
ljmp
cmp
les
jb
mov
dec
cmpsl
outsl
mov
adc
out
clc
out
adc
mov
stc
push
jns
out
push
clc
shr
push
inc
xlat
jo
sub
push
in
or
jecxz
fmul
mov
sti
sbb
orl
inc
addr16
pop
mov
loopne
flds
xchg
pushf
sub
adc
pushf
inc
mov
push
pop
gs
lahf
in
loopne
xchg
jno
pop
in
xchg
rcrl
vcvttss2si
mov
pcmpgtb
jl
fcoml
out
testb
xor
fst
je
jb,pt
cld
cltd
adc
rclb
imul
dec
out
jae
xchg
stos
pop
pop
andl
insb
xchg
andb
lods
ret
jmp
outsb
adc
sahf
sub
movsl
xor
fistpll
mov
lahf
inc
adc
and
jnp
mov
outsb
popf
fs
imul
mov
dec
aam
pushf
cmp
repz
xor
dec
nop
test
and
in
hlt
xchg
jg
xchg
jnp
dec
pop
sbb
lret
int
enter
pop
iret
scas
mov
xchg
je
or
mov
pop
push
out
sarl
sbbb
xchg
dec
sarl
add
push
nop
mov
es
in
lea
cmp
out
cmp
pop
lret
inc
enter
fsubrl
jle
mov
xor
and
mov
addr16
xchg
pop
pop
push
adc
mov
jecxz
xchg
push
cmpsb
pop
outsl
lret
sbb
ljmp
fmuls
inc
xchg
movsl
push
xor
mov
insb
or
mov
push
rcr
pop
mov
push
mov
lds
out
call
cltd
cmpsb
les
lret
jb
iret
mov
into
mov
iret
divb
cmp
adc
jecxz
in
out
in
sub
out
out
sbb
mov
push
xor
movsl
rcrb
adc
push
add
or
fstps
movsl
movsb
ds
imul
je
xchg
loop
std
lock
in
xor
adc
inc
mov
sbb
jle
out
xchg
push
daa
sub
enter
push
or
repnz
adc
jne
dec
es
fwait
aam
mov
rorl
pop
mov
mov
filds
push
push
lds
mov
or
repz
xchg
cmp
fdivrs
loopne
mov
mov
dec
mov
ret
mov
lret
sub
xchg
sbb
jmp
mov
dec
xchg
xchg
js
push
or
repz
stos
and
cwtl
add
shrl
and
xchg
hlt
mov
ljmp
push
aas
add
lods
ds
cld
lcall
sub
lcall
pop
mov
mov
push
mov
inc
push
jecxz
lcall
mov
or
push
std
jo
pop
into
mov
sbb
xor
add
arpl
decb
adc
lea
pop
dec
mov
mov
push
aam
and
mov
mov
inc
sbb
jp
pop
adc
adc
data16
sbb
les
repnz
jmp
xchg
lcall
inc
mov
sbb
gs
icebp
out
dec
fildll
icebp
aaa
int3
sbb
lds
popa
xchg
imul
mov
jns
mulb
ja
popf
cltd
fwait
lea
pop
arpl
inc
push
push
call
imul
sub
jge
xor
push
mov
xor
cmpb
insb
in
push
inc
or
sbb
dec
xor
adc
add
lds
dec
dec
xorb
mov
ljmp
mov
insb
loopne
sbb
mov
or
cli
mov
sbb
shl
daa
xchg
xchg
stos
jge
ljmp
daa
fstpl
sub
hlt
jecxz
in
pop
jno
mov
fcomp
inc
mov
pop
pop
cs
rorl
add
out
daa
out
aam
lcall
loop
push
test
sbb
xchg
pushf
sub
lahf
dec
xadd
pop
fwait
ja
iret
xchg
outsb
xchg
rcrb
sbb
push
push
lds
stc
xchg
int3
mov
dec
jmp
inc
push
shl
outsl
dec
cld
xor
ja
sub
xchg
shl
cmc
jnp
outsb
leave
lcall
pop
sbb
lods
loop
lods
dec
xchg
mov
lods
push
add
das
ljmp
jno
jmp
js
ljmp
pop
ficoms
sbb
push
icebp
lea
mov
mov
std
scas
loopne
pop
pcmpeqw
std
lock
pushf
movsb
xchg
mov
stos
push
or
sub
loopne
push
jecxz
popf
xchg
add
out
xchg
dec
mov
jo
xor
ret
sub
sbb
cmp
cmp
push
loop
dec
push
inc
in
lahf
jno
xchg
sbb
xchg
test
adcb
clc
cs
std
mov
mov
adc
mov
cli
imul
mov
mov
dec
fdiv
xchg
popa
xchg
cli
data16
orb
movsb
das
pop
push
decw
mov
clts
push
xor
and
lea
loope
mov
aam
or
push
add
es
popf
pop
lea
adc
pop
xlat
in
add
xchg
inc
cmpsl
xlat
aad
aad
or
pop
inc
adc
out
mov
stos
or
push
addr16
arpl
cld
ret
je
hlt
sbb
xor
mov
ja
jb
jo
fidivrs
int3
jb
xor
pop
movsl
mov
dec
push
insl
inc
push
ss
add
ljmp
push
cltd
insb
push
pusha
lret
dec
insl
leave
jae
cmovg
in
aaa
sub
mov
mov
sbb
dec
mulb
pop
pop
xor
dec
mov
sti
xchg
aaa
gs
mov
cmp
xchg
sub
lret
dec
loope
dec
into
cmp
cmpsb
mov
cmpsb
push
lods
push
add
and
fs
fcoms
mov
jbe
xorb
lahf
cmpsl
test
adc
bound
pop
cld
jmp
cld
aad
imul
jb
cmp
enter
adcb
cli
sub
cltd
lods
or
mov
mull
pop
xor
test
ja
pop
xlat
lret
or
mov
sbb
imul
xor
dec
jae
les
pop
mov
ret
mov
test
pop
stc
and
int
cmp
xchg
add
fsubrs
cmp
cltd
stos
fcoml
push
xchg
xor
ds
fisttps
push
fcoml
mov
mov
inc
xor
mov
pushl
pop
shll
mov
xchg
fisubl
jmp
stc
fisttpll
aad
in
and
flds
sbb
xor
js
into
pop
sbb
mov
add
aaa
dec
mov
cmp
mov
in
fimuls
sahf
sbb
push
or
jmp
andnps
ret
mov
pop
shrl
subl
or
add
lock
hlt
xchg
inc
xorb
or
out
idivb
scas
loop
in
icebp
ss
and
aam
or
ret
fcmovb
mov
popa
ss
cli
and
xlat
aas
pop
call
inc
lcall
pop
cltd
es
add
jge
lcall
dec
pushf
sti
lea
mov
dec
add
mov
cmp
push
sub
fcom
mov
nop
dec
std
cmpsb
mov
cmpsl
cmp
rclb
out
inc
mov
call
mov
dec
popf
out
lods
fwait
jmp
xlat
push
in
pop
or
std
pop
sbb
or
insl
pop
popa
xchg
jle
push
or
mov
mov
mov
les
xchg
iret
cld
test
shl
push
movsl
pop
test
and
push
int3
xchg
dec
mov
movsl
scas
pusha
pop
scas
out
in
fcmovb
sub
pop
mov
cmc
push
out
pop
mov
mov
dec
jne
test
mov
call
ret
mov
mov
test
and
xor
cmp
ret
dec
inc
and
setle
aaa
lods
stos
je
loop
sbb
cs
pop
fistpll
pop
cmp
and
fdivrl
jecxz
in
sbb
rorl
xor
gs
bound
xchg
int
nop
jns
test
mov
sub
in
adc
jle
or
mov
rcl
adc
fldt
pop
or
bound
adc
outsl
cmpsb
in
andl
and
add
push
push
sub
jo
dec
lcall
adc
fbld
sub
bound
call
or
inc
sbb
xlat
mov
xor
sub
sbb
aaa
dec
sub
iret
je
fiadds
lods
push
jns
adc
add
in
lahf
out
std
popf
adc
push
data16
xor
xor
and
xchg
jbe
mov
popf
xchg
data16
push
int
jg
iret
xchg
sbb
ljmp
xor
adc
and
pop
mov
cld
mov
jmp
pusha
xchg
repnz
mov
fdivp
test
jo
jbe
sbb
inc
testl
ret
in
mov
out
jno
js
inc
movsb
inc
inc
cmp
lret
and
mov
push
dec
scas
inc
inc
xchg
int3
loope
shl
mov
mov
icebp
xchg
jp
sub
mov
out
cmpsb
inc
inc
dec
dec
inc
push
inc
dec
iret
jae
call
int3
add
ret
push
daa
jge
and
rcll
out
xchg
adc
out
jmp
stos
or
sub
ja
insb
or
adc
aaa
mov
stos
ror
outsb
mov
fcomp
mov
shll
aam
or
xor
adc
and
bound
iret
push
mov
mov
popf
out
pop
xchg
ret
shr
scas
ret
test
dec
mov
movsl
mov
aaa
cli
xor
fbld
mov
leave
mov
mov
cmp
cmpsl
imul
js
pusha
rcl
cwtl
pop
mov
adc
dec
das
cmp
push
jp
test
iret
push
dec
add
sar
hlt
push
push
stos
inc
mov
sub
stc
push
rcrb
adc
push
in
lret
mov
pusha
addr16
lret
test
cs
mov
test
add
mov
rcrb
repz
fwait
add
push
mov
inc
xor
stos
or
push
or
aam
lods
pop
mov
fidivrs
loope
outsb
cmpsb
mov
sub
stc
push
mov
dec
mov
pop
movsb
cmp
lret
xchg
dec
and
shll
jp
mov
test
xchg
mov
xchg
addr16
inc
push
movsl
jge
and
dec
dec
cmp
leave
mov
cmp
testb
es
xchg
sub
imul
mov
fidivrl
mov
xchg
das
xchg
add
int3
sti
add
xchg
subl
inc
dec
jg
testl
mov
jp
inc
mov
mov
repnz
jmp
insb
jg
insb
adc
inc
mov
shl
add
xor
out
shl
and
and
push
cld
push
lret
cli
xchg
mov
subb
jmp
cmpsl
jp
fidivs
push
stos
jb
mov
or
sub
adc
pop
add
loop
into
xor
cmp
pop
aas
inc
xor
cmp
add
xchg
int
mov
pop
pop
test
test
cmp
dec
xorl
and
or
jns
push
sub
cli
dec
popa
fwait
xchg
mov
sahf
rcll
jns
sbbl
inc
and
sahf
pop
pop
clc
addl
rcll
decb
pop
sub
and
xchg
jne
rolb
dec
xor
loope
retw
xchg
add
dec
ret
cmc
or
test
mov
xchg
dec
inc
das
out
mov
pop
rolb
xor
cs
sbb
pop
mov
jle
mov
or
mov
dec
je
aas
adc
mov
and
stc
imul
lret
inc
xchg
aaa
pop
xor
mov
loop
mov
js
mov
fbstp
shrb
mov
push
rolb
hlt
bound
arpl
xor
rcrb
pop
push
repz
adc
pop
push
mov
push
xchg
adc
or
sbb
or
lds
leave
ljmp
jg
mov
inc
enter
push
outsl
cld
push
leave
mov
movsl
clc
iret
dec
and
cli
xchg
stc
fwait
xor
jae
cmpsb
mov
inc
in
jno
mov
sti
push
cli
stos
scas
and
cs
mov
fdivr
popa
rorl
jno
fnstenv
jb
inc
mov
stos
repz
insb
rorb
inc
scas
mov
hlt
scas
push
push
jmp
sub
int3
cmc
jno
adc
aam
das
dec
add
popf
dec
stos
lret
dec
add
mov
dec
lods
jns
inc
fisubs
in
xor
pop
pop
repz
bound
xchg
setge
cmpsb
repz
push
mov
or
jne
testl
pop
cmp
jle
mull
mov
add
xor
dec
xor
push
jge
dec
cld
jne
fdivrs
jge
and
std
mov
repz
aas
insl
dec
adc
mov
aam
xchg
mov
mov
inc
test
sub
inc
or
sti
pop
fdivl
aad
cmp
xor
cld
inc
sbb
frstor
jp
shl
mov
mov
jle
sbb
pop
adc
push
lods
sahf
aad
pop
xchg
cmp
gs
mov
mov
adcl
mov
mov
sti
popa
push
push
jge
das
dec
fwait
dec
in
xor
int
sahf
icebp
nop
lret
das
pop
lcall
cwtl
sbb
push
sahf
sahf
icebp
push
in
pop
lret
aam
or
out
rclb
shlb
sub
push
mov
fstl
pushf
xchg
xlat
xchg
mov
ret
cmovge
inc
pslld
jg
js
outsb
add
mov
test
dec
cmpsl
mov
and
test
xchg
mov
andb
pushf
out
pushf
cmc
aad
sbb
roll
aas
inc
stos
xor
xchg
adc
add
inc
sub
push
and
pop
icebp
mov
sahf
ss
test
mov
imul
lret
lods
cmpsl
and
ret
aad
sub
xor
inc
push
add
inc
and
rorw
cmp
ret
mov
sti
cli
nop
mov
jne
repnz
sahf
rcrb
xchg
jbe
jmp
out
push
xor
cmp
cwtl
cld
test
ljmp
mov
inc
add
cli
es
and
into
fnstsw
mov
fcmovnbe
or
orb
loopne
js
fsubs
daa
jecxz
jl
ja
lcall
mov
repnz
xor
mov
cmp
xchg
push
fwait
outsb
xchg
adc
insb
or
sub
fdivs
adc
mov
xchg
aad
arpl
pop
in
fnsave
insb
jmp
cwtl
jno
pop
and
mov
repnz
xchg
pop
push
mov
pop
lds
aaa
push
roll
mov
popf
mov
add
mov
xor
aad
pusha
mov
test
or
js
jp
imul
push
out
adcb
add
or
xor
nop
int3
mov
daa
sub
mov
rorb
fidivs
mov
addr16
push
lret
or
cli
test
pop
mov
cmp
jae
fadd
insl
cli
ret
in
cmpsl
scas
and
mov
jno
jae
pop
sbb
sbb
lret
or
mull
pop
lods
popa
xor
jae
ret
jp
jmp
mov
jmp
push
xchg
orl
inc
pop
xor
inc
mov
push
xor
aas
adc
cmpsb
pop
stos
xchg
push
add
loop
movsb
inc
and
mov
xorl
and
daa
or
les
jne
mov
ret
lahf
dec
nop
adc
enter
dec
push
ficoms
sbb
push
outsl
xchg
mov
cs
movsb
cmpsl
pusha
std
mulb
sub
push
jbe
pop
sbb
jo
mov
pop
xchg
pop
jecxz
repz
sbbb
sbb
mov
and
or
cmp
push
and
popa
sub
and
in
in
ror
cmpsb
lahf
notb
mov
xor
mov
enter
loope
cmp
mov
aam
jns
jns
mov
popf
sub
sbb
dec
xor
shll
sahf
mov
dec
add
push
xor
jge
or
ficoml
cwtl
sub
push
push
icebp
js
jno
frstor
mov
xchg
add
jge
inc
dec
adc
inc
fs
aaa
or
sbb
pop
fndisi(8087
outsb
test
incb
mov
xor
aad
lock
mov
mov
jne
sbb
insl
mov
sub
int3
push
push
add
hlt
ljmp
data16
inc
mov
dec
mov
mov
dec
jae
jns
add
xchg
or
ljmp
adc
movsb
sbb
lret
sub
add
or
nop
adc
cmc
push
jge
push
dec
inc
jge
in
pusha
adc
inc
insb
cmp
pop
xchg
or
mov
pop
mov
out
dec
mov
mov
in
adc
fildll
mov
lcall
adc
out
bound
push
push
xlat
cmpsl
mov
mov
not
pop
push
dec
leave
push
xchg
stos
add
xor
sbb
xor
cmp
insb
jae
sbb
lahf
out
pop
js
push
pushf
xchg
inc
xor
stos
psubd
repnz
rolb
push
dec
ja
lret
mov
jb
pusha
jle
test
push
or
dec
ret
pop
mov
pop
lret
add
or
cltd
mov
movsb
imull
cmp
test
xchg
inc
mov
add
mov
ret
jb
fidivl
int3
pop
cmp
sti
mov
or
mov
push
rolb
cmp
cmpsl
cmc
xchg
sub
ret
mov
filds
shrb
stc
mov
ds
loopne
mov
fwait
dec
insl
fwait
pop
adc
orl
push
jnp
mov
std
mov
inc
pop
and
inc
push
popa
xor
cmp
and
xlat
clc
in
xchg
lds
cmp
push
je
insl
mov
push
push
inc
out
add
push
jno,pt
jp
jmp
sti
sub
mov
and
mov
ret
in
adc
aad
jecxz
lret
jno
jb
incl
loope
jge
and
cmp
addr16
gs
pop
jb
shrl
and
cmp
dec
dec
stos
jnp
adc
popa
add
lcall
pusha
fs
push
mov
pop
das
mov
je
xchg
ret
push
dec
ljmp
dec
and
and
shrb
push
push
inc
aaa
daa
lods
lock
cli
xchg
imul
hlt
pop
dec
lods
push
jle
or
or
mov
mov
and
lret
sub
int
push
int3
movsl
daa
jp
aas
push
or
mov
fistps
ror
mov
ret
cmp
loope
out
xor
sub
js
jle
mov
jmp
adc
cmp
pop
lock
pop
insb
into
jae,pn
mov
mov
jecxz
jns
mov
popf
xor
xor
mov
push
jo
sub
cld
xchg
pop
add
and
sub
adc
icebp
sarb
jb
lds
popa
in
cwtl
mov
dec
adc
mov
xor
fcomps
xlat
xor
or
aas
add
into
in
sub
xor
pop
aaa
mov
dec
jmp
punpcklbw
insb
and
popf
cmpsb
pop
popa
jb
sarb
int
sub
sahf
aad
or
inc
add
or
inc
mov
jns
sub
mov
mov
fisubrl
test
stos
sbb
xor
mov
fisubrl
movsb
enter
stc
cmc
or
inc
push
enter
sub
das
jmp
mov
ja
in
ficomps
push
loopne
sub
sub
lret
rcrl
movb
int
sbb
push
sbb
ja
ret
cmpb
stos
xor
mov
imul
stos
add
sub
je
sbb
dec
test
leave
nop
shufps
jbe
fnstcw
test
adc
sub
jne
xchg
ss
and
dec
mov
subb
push
jo
push
out
sarl
xchg
jle
aaa
out
pop
dec
and
xorl
mov
aaa
adcb
dec
mov
cwtl
sub
or
fwait
or
mov
test
addl
insl
lea
aad
lret
or
test
addr16
cli
cmp
int3
fstpt
mov
andb
scas
adc
inc
das
mov
test
inc
sub
in
rorb
ja
and
mov
cmp
cmp
sbb
inc
jecxz
fmuls
leave
xchg
inc
and
sbb
dec
jnp
lret
adc
mov
and
sub
ljmp
mov
pop
shlb
lods
push
or
ret
jae
jmp
push
ret
mov
mov
cltd
gs
push
jg
pop
pushw
adc
mov
sbb
scas
mov
js
cld
sbb
sub
repnz
lret
jmp
dec
cmpsb
lea
push
divl
dec
add
out
std
cmpsl
leave
mov
jmp
sahf
loopne
mov
and
pop
aaa
popa
inc
inc
cmp
sub
cmpsl
fistpl
or
int3
pop
out
add
fdivr
sbb
in
rcrl
jbe
push
imull
cld
xchg
lret
dec
je
faddl
mov
dec
fistl
pusha
shll
rorl
ja
repz
jl
cmpb
xlat
mov
and
ljmp
pushf
rol
inc
push
sbb
sbb
jns
out
gs
sbb
insb
hlt
aas
ret
fisttpl
sbb
jl
xor
and
sti
mov
mov
cmp
sub
lret
and
mov
in
test
rclb
arpl
adcb
mov
or
push
pop
cli
jo
popf
subb
int3
xorb
mov
jle
aaa
out
and
mov
inc
loopne
leave
sub
loopne
jnp
je
mov
jl
jge
lahf
lods
lea
inc
adc
js
sbb
and
mov
jo
pop
cmpsl
xchg
shl
fwait
hlt
jl
inc
popf
jmp
add
mov
icebp
out
push
or
pop
push
dec
mov
stos
jge
jns
or
add
dec
pop
cmpb
daa
arpl
dec
adc
mov
adc
mov
fldl
call
jae
iret
and
dec
and
or
cli
stc
lods
adc
dec
fistpl
pop
lahf
push
xor
mov
or
jnp
pushaw
int
movsl
sahf
adc
push
sub
jge
test
xchg
lcall
dec
rcrb
mov
jne
add
cmp
jo
xlat
cltd
cmp
fcmovne
fdiv
xchg
xor
repnz
jae
ljmp
pop
pop
xor
sub
lock
test
rorb
mov
insb
pop
pop
jecxz
roll
jmp
fidivs
mov
repz
std
rolb
sarb
push
xor
mov
stos
inc
adc
inc
andb
mov
ja
sub
sarb
cmpsl
sbb
fistpl
xor
sarl
subl
jl
out
adc
xchg
icebp
inc
mov
and
mov
or
sub
roll
out
mov
xchg
mov
shlb
xor
mov
addb
out
loopne
rcrl
js
xor
aaa
shrb
jecxz
or
orl
test
cs
les
or
out
inc
repz
pop
adc
mov
test
out
lahf
mov
ffreep
xor
jge
out
shl
xchg
mov
ret
mov
or
scas
movsl
insb
es
dec
outsl
cs
mov
fcom
or
notl
mov
clc
mov
loope
sbb
lock
mov
mov
mov
jg
sub
pop
add
lret
or
movsl
popf
xor
and
in
sub
js
test
add
push
int
xor
ds
in
dec
cmp
sub
fidivl
cmp
pop
and
imul
xchg
mov
xchg
mov
and
xor
in
push
adc
pop
cli
mov
add
push
mov
or
scas
push
and
ja
daa
and
mov
sarb
xor
or
dec
ss
jne
roll
decb
and
add
cmp
roll
repnz
mov
push
es
imul
sqrtps
out
cmp
ror
test
pusha
leave
inc
mov
sub
dec
sbb
jno
xchg
mov
mov
mov
aad
lds
push
adcl
jae
lret
shrd
adc
adc
mov
and
loopne
xchg
lods
pop
shrl
pop
lds
jge
cmp
dec
sahf
addl
das
jmp
cld
add
or
popa
sub
fisubs
or
inc
popa
xor
sbb
xchg
push
aaa
jge
xor
addr16
cmp
adc
push
dec
adc
aas
inc
in
jae
inc
movsb
mov
pop
inc
icebp
push
bound
xor
dec
aam
inc
mov
bound
mov
mov
add
pop
lods
pop
rcl
adc
ficomps
cwtl
mov
hlt
roll
test
xchg
mov
ffree
inc
or
jns
or
mov
jae
out
add
push
popa
cmp
aam
dec
mov
and
mov
adc
dec
sbb
push
test
pop
fwait
andl
jecxz
ss
pop
mov
mov
hlt
jp
icebp
icebp
xchg
mov
jle
scas
push
cltd
aaa
sbb
xchg
mov
cld
pop
jnp
mov
lods
ds
push
jno
xor
jmp
enter
cs
mov
jl,pn
mov
push
pop
jnp
inc
addr16
cmpsl
sbb
mov
inc
push
jge
lahf
push
sub
xlat
jge
insl
pop
rcrl
fwait
out
fistl
push
ss
or
pop
cmp
insb
or
mov
lahf
mov
mov
jno
sbb
jp
leave
lds
and
iret
dec
mov
add
push
int3
mov
orl
lret
cmp
cmpsb
jp
sub
adcb
lea
ja
int
jnp
inc
mov
mov
sbb
jecxz
mov
cltd
mov
scas
imul
imul
adc
mov
sub
rcrb
push
pop
push
out
ds
xor
lret
mov
dec
mov
loop
stc
pop
pop
xchg
sbb
and
sbb
inc
cwtl
xor
test
xlat
sbb
nop
enter
test
mov
int
jecxz
in
lcall
sub
or
sub
add
mov
inc
dec
add
movsl
lret
jo
clc
fnstcw
pushf
idivl
mov
repnz
pop
xor
adc
daa
xchg
xor
sbb
cmp
adc
lea
sub
xor
or
mov
inc
subb
pop
dec
ret
sub
sbb
loope
test
xchg
mov
mov
and
mov
mov
std
sbb
fidivrs
add
mov
repz
push
mov
pop
and
sarl
aad
push
pop
push
or
sbb
push
scas
ss
lds
insl
inc
insb
and
jmp
rol
mov
in
subb
lret
pop
orb
gs
or
cltd
cld
xor
insb
pop
data16
mov
je
notb
lcall
enter
and
scas
std
fdivrs
xchg
fistl
inc
cltd
imul
xorb
lds
push
icebp
xlat
add
gs
inc
push
ljmp
and
sbb
jp
out
rolb
push
mov
adc
daa
add
pop
cmp
mov
add
and
in
sub
and
push
cmp
mov
imul
scas
out
sarb
sbb
lahf
lret
add
cmp
movsl
cmp
pop
rcrl
cmp
adc
push
mov
movsl
pushf
mov
loop
or
mov
sub
or
adc
mov
leave
jg
sahf
and
push
pop
sub
mov
int
leave
xor
rorb
sub
push
mov
mov
inc
mov
addl
push
shrl
sbb
push
push
pop
push
push
gs
fidivrl
pop
mov
xchg
xchg
movsb
xlat
aas
cmp
mov
js
adc
add
mov
insl
add
add
aam
mov
push
sbb
jle
lods
inc
ss
pop
je
es
insl
mov
add
sub
mov
inc
jns
and
leave
loope
sub
shr
and
mov
inc
sub
xor
loope
inc
push
test
and
pushf
addl
fnstsw
cwtl
test
and
inc
movsl
jp
aam
push
cmp
negb
mov
insb
xlat
sbb
pop
hlt
out
repnz
dec
cmp
jae
mov
or
cld
lahf
push
lds
fwait
mov
sub
push
lret
int
xor
les
pop
xlat
ficoml
pop
adc
fstpl
stos
jp
jns
les
adc
scas
and
jno
xlat
or
loop
cwtl
mov
popa
cs
insl
jp
push
inc
les
jbe
sub
je
mov
mov
mov
xor
cwtl
or
cmp
mov
adcb
inc
mov
repnz
mov
cmp
adc
adc
out
movsl
mov
pop
mov
das
test
sahf
aam
lods
cmp
or
pop
fwait
push
iret
push
pop
pop
rclb
jecxz
sub
xor
cmp
cmp
xor
clc
xlat
and
inc
shl
icebp
add
mov
clc
and
or
es
jecxz
xor
inc
sbb
in
xchg
test
pop
imul
clc
and
xor
mov
cmpsl
cmp
xor
inc
aam
pop
call
xchg
dec
scas
lret
mov
arpl
loopne
pop
cmp
ljmp
clc
sarb
cmp
inc
sbb
xor
bound
xchg
call
mov
fs
cmp
addr16
ja
sub
in
sbb
lahf
mov
loop
nop
pop
clc
fdivrl
cwtl
sarl
add
sbb
adc
ficomps
iret
scas
inc
sbb
cmp
mov
xchg
addr16
adc
aaa
dec
repz
pushf
hlt
dec
pop
lea
xchg
sbb
sbb
sbb
sti
mov
sub
sar
pop
jecxz
ficoms
inc
xchg
mov
jo
out
fcompl
push
push
mov
mov
fmuls
lds
xor
mov
repz
inc
inc
sbb
pop
fildll
pop
sbb
lock
and
add
aad
xor
movsl
test
jl
jle
call
sub
pop
out
mov
jne
and
std
ret
out
lcall
inc
fcomps
aad
pop
fstpl
clc
test
pop
lea
dec
icebp
insl
int3
cs
mov
add
loop
add
ja
out
ror
popf
lahf
in
cmp
sub
cmp
js
lret
loope
shr
jb
or
fsubs
mov
xchg
lds
loope
nop
loopne
push
int
mov
mov
push
mov
es
push
insb
xor
push
daa
imul
push
xchg
pop
cmp
sbb
fnsave
push
movzbl
jle
repnz
sbb
mov
pusha
sbb
pop
in
inc
faddl
into
sbb
or
push
daa
adc
push
fisttpll
add
fcmovnbe
je
jp
lahf
adcb
inc
ret
mov
mul
repnz
mov
orl
push
repz
push
insl
adc
mov
cmp
test
and
dec
mov
insb
push
xchg
divb
fimuls
ds
mov
lea
ds
loope
test
dec
js
cmp
and
lret
push
ret
push
sub
mov
rolb
xchg
xchg
mov
mov
sbb
shr
push
insb
enter
xlat
sbb
dec
push
testb
jb
mov
push
lret
dec
pushf
test
lock
arpl
shlb
popl
sbb
dec
mov
mov
cli
mov
shlb
enter
or
add
or
mov
fisttpl
inc
push
push
and
jo
mov
dec
xchg
sbb
sbb
and
imul
xchg
shll
cld
in
les
mov
add
sbb
pop
jle
xchg
idivl
adc
jo
mov
push
add
sub
jne
lcall
scas
sbbb
imul
int
inc
into
mov
lods
mov
mov
dec
sub
inc
cmc
inc
pushf
in
push
jl
xchg
mov
cmp
movsl
out
xor
aad
stos
pop
sbb
dec
or
jnp
jns
je
xor
dec
sub
sub
xchg
test
fwait
imul
out
dec
cmpsb
jecxz
rcll
insl
inc
fistps
pushf
pop
jmp
mov
xchg
jg
rcrb
pushf
out
push
int3
jnp
imul
or
pop
out
out
into
fldl
mov
xchg
call
aad
ficompl
test
inc
mov
sub
sbb
lods
lahf
fnsave
stos
adc
sub
push
xchg
mov
xor
inc
xchg
stc
mov
inc
movsb
add
outsb
scas
and
inc
int
xchg
mov
sarl
popl
mov
lds
insb
sub
divb
pop
lahf
or
jge
in
shlb
mov
ret
ret
repz
std
mov
test
xchg
adc
in
mov
ret
or
repz
shrl
mov
xor
lcall
out
loopne
orb
in
xchg
jg
aam
aas
add
insl
sbbb
pop
flds
xchg
inc
adc
into
mov
loope
fsubr
add
cwtl
inc
loope
xor
out
scas
icebp
icebp
leave
jl
in
sti
icebp
pusha
pop
ret
and
xorl
push
ret
pop
fcoml
test
hlt
enter
sbb
dec
stc
push
dec
xor
sbb
in
fsubs
fimuls
adc
push
leave
and
jl
mov
sbb
pop
xor
test
xchg
xor
sti
test
mov
push
dec
cmp
iret
scas
mov
sbb
or
adc
adc
and
cmpsb
inc
cmpsl
fwait
aaa
sbb
stos
mov
fiaddl
dec
test
aaa
pop
pop
push
fwait
lods
mov
fwait
dec
lds
mov
push
jge
xor
pusha
mov
dec
cli
xchg
jp
imul
pop
xor
scas
popf
loopne
jl,pt
stc
mov
loopne
adc
shll
ds
mov
test
mov
jns
popf
sbbb
loop
sbb
inc
scas
fwait
aam
mov
or
outsb
or
lret
inc
jl
cmp
dec
insb
jnp
hlt
mov
mov
scas
ja
xor
jle
pop
dec
mov
sbb
sti
sbb
cltd
push
imul
scas
adc
std
jl
fcomps
pop
pop
mov
add
jb
in
in
and
add
in
into
mov
and
sbb
jo
testb
daa
mov
ds
sub
mov
and
or
aad
lock
push
int3
dec
mov
loope
and
push
test
fwait
mov
loopne
int3
test
and
bound
sarl
and
and
cmpsl
mov
enter
cmp
mov
mov
xor
adc
js
sbb
je
lahf
in
fwait
dec
sbb
pop
das
jb
inc
ret
sti
testl
insb
sbb
mov
mov
jg
adc
mov
stos
and
mov
adc
hlt
jb
bound
cli
int3
xchg
movsb
ror
or
mov
stos
mov
adc
xor
cmp
mov
ja
dec
pop
fidivl
xor
movsb
push
cli
icebp
leave
xchg
movsb
pop
adc
movaps
out
or
cmp
daa
mov
xlat
fsubr
sti
sub
sub
push
outsb
push
lea
ljmp
push
sub
ret
lcall
lods
cs
nop
popf
lods
xor
or
lods
jl
cmp
mov
cmpsl
gs
push
sub
sbb
jno
inc
mov
shl
cmpsl
inc
pop
sbb
and
pop
and
inc
insb
mov
add
fdivrs
int3
ja
mov
arpl
cmp
sbb
xor
jnp
jge
clc
xchg
aas
push
int3
into
mov
enter
lods
xchg
mov
pop
call
push
push
pop
xor
fsubrl
cwtl
and
cmpsb
int3
iret
pusha
xor
jmp
lds
scas
push
add
bound
popf
das
mov
jb
sub
mov
stos
and
insl
or
dec
sub
loop
mov
pop
cmpsb
xchg
mov
adc
test
lods
jno
inc
mov
cmp
and
addr16
mov
test
ficompl
mov
in
mov
int
sbb
add
shlb
push
mov
aaa
sub
jp
mov
loope
clc
sub
in
or
mov
lods
cmpsb
sbb
push
or
aaa
cmp
xchg
cmp
push
sbbb
in
dec
mov
push
jmp
ds
cmpsl
pop
rorl
mov
adc
xor
lcall
fs
xor
sbb
adc
push
push
addr16
nop
push
mov
int
xor
frstor
add
mov
mov
stc
hlt
scas
loope
mov
xor
mov
sbb
sahf
jns
mov
stos
cmpsl
sub
fwait
mov
in
roll
cmp
sbb
inc
iret
scas
scas
inc
scas
mov
fs
sbb
xchg
insl
int
sub
ret
add
xchg
ljmp
imul
adc
jb
pop
in
xchg
inc
pop
or
lret
stos
mov
jo
mov
jnp
xor
push
pop
imul
mov
push
stc
addr16
sti
push
popf
xor
inc
jno
sub
adc
mov
mov
scas
pusha
pop
fcompl
sub
ljmp
int3
sahf
fwait
test
xchg
mov
mov
or
loope
xor
addr16
xchg
jno
imul
jle
sub
sbb
xorl
and
aaa
stc
fwait
pop
or
lds
push
ljmp
fnsave
jmp
jne
inc
xchg
xchg
fld
cmp
push
cmp
add
mov
gs
dec
jl
ja
pop
clc
and
mov
ret
cmpsl
int
cmp
outsb
push
nop
sub
xchg
cmp
imul
ret
adc
test
add
lahf
jg
pushf
push
mov
lods
out
and
xor
mull
jnp
test
fcmovnu
in
sub
mov
gs
pop
out
repnz
pop
testl
sahf
orb
lret
test
loopne
ja
in
push
add
out
jo
mov
xor
sub
mov
lea
fcoml
adc
or
and
mov
idivb
xchg
and
scas
leave
in
mov
adc
push
in
shl
sti
push
mov
test
dec
mov
push
insb
out
jbe
xchg
popf
lea
xor
ja
int3
not
sahf
xlat
xor
pop
movsb
cmp
scas
popf
xor
add
add
mov
das
test
mov
outsb
cmp
test
jbe
xchg
add
scas
jne
adc
iret
add
fs
or
pusha
cmp
dec
les
pop
out
xlat
fucomi
bound
cwtl
xchg
cmp
rclb
test
inc
jle
loopne
cltd
mov
jbe
pop
xor
sub
sbb
push
mov
test
and
push
mull
sub
pop
mov
cmp
loopne
pop
sub
hlt
addr16
inc
mov
addl
leave
pop
shll
fnstsw
mov
add
imulb
bound
sub
jbe
dec
outsb
push
dec
sbb
jae
jl
mov
sub
enter
aas
outsb
fwait
mov
dec
js
fisttpl
cld
or
mov
jmp
ret
or
jns
or
mov
orb
xchg
shlb
mov
popf
stos
pushw
dec
in
pop
add
sti
lahf
xchg
pop
mov
cmpsb
xchg
inc
sub
leave
xchg
jl
or
stc
cmp
cmp
out
sub
dec
enter
jg
fsub
push
or
push
fs
sbb
push
mov
and
mov
in
jnp
mov
gs
xchg
scas
or
mov
ss
test
mov
cmpsl
fisubs
push
inc
std
into
fstl
outsb
jecxz
outsb
pop
popa
xchg
cltd
out
pop
insb
push
out
pop
mov
fdivl
jmp
lcall
ret
adc
rorb
push
fsubs
inc
cmpsl
es
mov
std
lea
out
shrl
xchg
mov
sbb
sarl
or
sbb
mov
inc
adc
add
sbb
mov
pop
jmp
sub
xchg
sub
out
lahf
fs
loop
inc
sti
sbb
lds
call
lcall
inc
sti
lds
outsl
jecxz
mov
push
xchg
add
in
mov
cmc
dec
mov
adc
jle
xchg
xor
pop
jb
sbb
in
mov
in
jbe
aam
cmp
pop
inc
jae
dec
out
dec
mov
mov
addr16
cmp
mov
pop
outsl
mov
mov
adc
stos
icebp
mov
adc
das
jb
mov
push
insl
jmp
jmp
cmpsb
rclb
jg,pt
or
popa
and
mov
sub
shrl
lret
xor
fldt
dec
sbbl
pushf
inc
mov
and
or
cmpsl
lcall
cmp
fcomp
mov
pop
into
push
push
int
and
xor
push
daa
dec
rolb
mov
lahf
dec
ljmp
sbb
or
cmp
fcmovb
mov
dec
push
jle
orl
stos
jmp
rorb
mov
psubq
add
adc
stc
scas
xchg
mov
pop
nop
popf
cmpsb
addr16
movsb
scas
stos
imul
pushf
and
sbb
pop
and
mov
add
mov
xchg
lret
lcall
mov
xorl
dec
sti
scas
mov
or
clc
repnz
insb
jae
sub
mov
xlat
pop
int3
jecxz
sbb
aad
push
cmp
rcrl
and
fdivl
ret
stos
out
mov
or
pop
xchg
adc
mov
push
sbb
pop
fwait
xchg
arpl
stos
mov
lock
or
lds
xor
outsb
and
loope
repnz
je
in
dec
pop
test
out
mov
pop
pushl
cmc
andb
inc
lret
push
xchg
or
lahf
lret
push
dec
in
das
je
adc
add
iret
lcall
or
and
hlt
push
cli
pushf
push
push
daa
lcall
pop
ljmp
mov
jns
xchg
add
lock
faddl
xchg
add
sub
add
sarb
iret
add
dec
jno
mov
aaa
xchg
or
es
pop
cltd
add
ds
mov
aaa
sbb
xchg
jo
mov
lahf
cmp
loope
daa
sbb
and
arpl
sti
in
out
lods
andl
push
fnstsw
rcrl
inc
cmp
xchg
lock
dec
cld
fcomps
jl
xor
jo,pt
push
pop
cltd
enter
fs
stc
outsl
ljmp
cmc
pop
das
sbb
sub
lret
sbb
push
aas
pop
cmc
cmp
dec
sbb
inc
push
jns
rolb
stos
cli
sub
inc
bound
cmp
test
sbb
mov
jo
cmp
pop
push
jge
cld
inc
ds
mov
jg
jns
into
cmp
push
jle
jg
cmpsl
andb
push
or
dec
repz
add
std
push
repnz
shlb
dec
mov
mulb
or
mov
mov
xor
je
fsubl
data16
ficompl
ret
jecxz
xor
dec
push
shrb
dec
xchg
sahf
mov
rcr
mov
cli
xor
dec
sub
out
mov
xchg
cmpb
inc
mov
mov
arpl
ljmp
lods
add
arpl
test
in
sub
ljmp
jnp
mov
xchg
enter
adc
pop
push
jl
lret
in
sti
inc
test
mov
sbb
mov
fisttpl
sub
fisubrs
rcrl
lea
std
shlb
jl
cmp
mov
and
hlt
cs
cmp
mov
mov
xor
jl
lods
sbb
mov
lock
mov
adc
shll
xor
andb
mov
hlt
lea
add
aad
cld
test
test
shll
jl
jecxz
or
imul
test
dec
adc
outsb
mov
ss
sub
es
and
inc
inc
stos
repnz
sbb
lret
mov
sbb
cltd
scas
cmpsb
dec
test
into
xchg
xchg
shll
cli
test
mov
cmp
inc
fdivl
mulb
lods
add
gs
push
inc
xlat
pusha
aas
mov
scas
andl
pusha
test
clc
pop
and
fisubrl
gs
cwtl
sahf
cmpsb
add
cmp
mov
and
stc
aaa
sub
mov
push
jp
lcall
add
mov
arpl
in
sahf
outsl
sbb
cltd
xor
xor
fisubrs
mov
aas
jmp
fs
lock
int
mov
lods
cmp
pop
adc
add
test
test
jle
jp
out
lret
push
in
in
lahf
std
sbb
or
push
aam
out
push
jecxz
xor
dec
outsl
jae
ret
inc
push
cltd
adc
lcall
adc
hlt
mov
or
imul
jb
sbb
mov
fadd
aas
mov
inc
sub
adc
push
dec
int3
mov
mov
je
dec
loope
mov
lahf
push
out
inc
inc
insb
cmovns
or
mov
movsl
xchg
dec
adc
pop
cltd
push
sbb
push
add
mov
mov
repz
test
mov
outsb
cmp
pop
nop
xor
push
cmc
mov
mov
mov
adc
cld
in
push
sbb
or
mov
or
mov
fcoms
inc
fistps
xor
pop
push
dec
sbb
adc
push
in
pop
stc
sbb
add
adc
mov
orb
jmp
enter
lds
xor
cwtl
sahf
stos
lret
inc
dec
js
jecxz
iret
mov
cmp
add
test
nop
outsb
inc
inc
lret
and
neg
mov
sub
adc
and
mov
mov
push
pop
cmp
add
enter
cmp
push
and
pusha
addr16
mov
mov
xorl
jmp
cmc
into
dec
push
jns
jmp
cmp
andnps
scas
js
adc
outsl
lcall
inc
lret
pop
xor
pop
mov
cmp
xor
and
stos
or
mov
adc
pushw
rol
push
sub
cltd
fdivp
imul
in
push
cld
mov
cmp
xor
enter
cmp
add
imul
seto
lods
jo
outsl
cmp
cmp
lods
in
ljmp
cmp
in
movsl
scas
mov
pop
es
dec
in
jg
icebp
and
jle
cmpsb
pop
adc
xchg
mov
ffreep
fidivrl
xor
mov
sbb
push
ret
fildl
cs
dec
xor
call
pop
mov
adc
inc
rcll
inc
adc
movsb
lret
outsb
icebp
mov
pop
xchg
dec
arpl
aam
push
push
jg
and
cmc
jl
stos
or
and
ret
pop
dec
insb
gs
fiaddl
mov
mov
or
inc
test
ret
or
mov
push
int3
andb
roll
dec
sub
hlt
ret
dec
lahf
ljmp
sub
mov
fsubr
cmp
stos
push
fisubrs
adc
and
xchg
xchg
sbb
mov
add
loop
mov
in
enter
mov
lods
add
fdivs
add
lcall
imul
gs
inc
sbb
stc
add
out
enter
aad
js
xchg
pop
cmc
fcoml
mov
bound
jno
adc
xchg
sahf
test
inc
inc
mov
icebp
cmpl
sub
add
sub
or
stos
mov
jg
xlat
adc
inc
jecxz
fstpl
lret
insb
mov
adc
cmpsl
gs
adc
dec
push
mov
shlb
nop
pop
mov
cmp
mov
fcoml
mov
insb
aam
xor
lret
aam
mov
mov
and
mov
inc
mov
imul
jle
lea
out
pop
sub
sbb
aad
insl
jb
lahf
push
mov
rclb
xor
pop
mov
xor
xlat
repz
fs
stos
inc
pop
loop
xchg
outsl
mov
arpl
iret
in
pop
jne
xchg
mov
aam
lods
sarb
test
pop
sbb
inc
push
and
xchg
dec
push
cwtl
lahf
add
add
in
cmp
xlat
mov
cli
sbb
lcall
mov
sub
scas
nop
adc
loop
shrb
in
dec
xchg
stos
cmp
xorb
inc
dec
ds
roll
rcr
aam
inc
lods
imul
cmp
rcll
lds
mov
xchg
lret
popf
or
cltd
xchg
cmc
and
hlt
push
pop
cmp
push
pushf
dec
ds
shl
or
imul
pop
sbb
inc
ficompl
xor
daa
sbb
pop
or
cli
pop
in
rcrl
adc
mov
adc
gs
ss
addr16
mov
fists
jl
popf
int3
lock
push
les
ds
test
mov
sti
in
nop
aam
xchg
and
aam
lret
sbb
dec
out
arpl
inc
sub
xor
pop
inc
pop
hlt
pop
inc
inc
lret
jae
cmp
pop
js
push
jl
push
das
adc
cli
int
ret
std
jns
push
repz
cs
mov
pop
push
jae
inc
insl
jbe
cmpsl
in
cmp
fwait
adc
add
int3
sbb
aaa
imul
xchg
xor
sub
lcall
push
and
jns
addl
fcmovne
test
cmpsb
das
jnp
sbb
and
sbb
in
sbb
mov
sbb
push
cmp
mov
addr16
imul
mov
leave
jb
jl
add
fisttps
ret
ss
add
les
add
push
in
inc
xor
out
inc
dec
addb
lret
mov
cmpsb
push
ja
sub
scas
call
push
and
ljmp
xor
sbb
sub
decl
cmp
jle
jae
mov
lea
hlt
and
sub
push
movsl
cmp
loopne
in
dec
test
push
xor
adc
adc
int3
cmpsb
push
jne
shrl
das
mov
outsb
and
sahf
pop
gs
sub
cs
imul
xchg
push
test
jbe
pop
inc
rcrb
pop
jno
insl
or
fcomi
jg
out
lods
rorl
scas
das
xor
and
xor
je
loope
and
inc
mov
cmc
icebp
cltd
repz
popf
movsb
lock
mov
jno
and
adc
xchg
imul
shrl
mov
mov
dec
shlb
jne
jmp
or
lcall
cltd
ss
mov
mov
in
js
sbb
bound
push
xlat
push
lods
outsb
fildll
out
and
pop
push
lcall
inc
imull
mov
xchg
test
or
ss
dec
push
fldenv
sub
cwtl
xor
sub
lods
sarb
dec
lcall
mov
mov
pop
outsb
inc
lret
or
int
dec
add
loope
mov
je
je
add
add
sub
sahf
jns
push
adc
xchg
popf
ss
sub
sbb
push
sub
ret
xor
in
pop
jno
sbb
rcll
mov
sbb
cmpsl
ficoml
fnstenv
scas
cld
xchg
xchg
repnz
pop
cs
ffreep
cmp
dec
cmp
or
mov
cmp
or
dec
lods
ret
rcr
or
mov
mov
mov
mov
push
lahf
add
leave
push
cmp
data16
mov
idivl
push
shrb
lds
cs
pop
add
cmp
cmc
stos
cmp
xor
and
jmp
or
shr
cmp
xorb
xchg
sub
jne
jmp
aaa
mov
xchg
in
push
xchg
xchg
insl
std
xor
loopne
xlat
pop
ss
xor
jb
pop
inc
ljmp
rclb
and
dec
adc
sbb
fmulp
inc
pusha
loope
jbe
insl
js
scas
popa
cli
ret
and
aad
mov
test
pop
adc
out
jnp
lock
out
repz
jecxz
daa
jl
lcall
out
out
loopne
cmp
adc
fisttpll
or
add
in
jmp
sbb
xchg
shlb
aaa
cmp
out
movd
xor
into
jns
sub
inc
inc
popf
popa
add
xchg
call
imul
ja,pn
mov
fistl
xor
mov
or
push
repz
repz
lock
mov
mov
and
mov
bound
sub
xor
xor
rcll
push
xchg
stos
adc
xchg
sub
ljmp
and
mov
jle
dec
pop
mov
pop
pop
dec
arpl
sub
push
ljmp
sub
loopne
push
inc
jns
mov
mov
mov
xchg
fwait
push
vcvtsi2ss
add
ds
add
dec
and
cmp
nop
sbb
sbb
jne
shlb
pop
jb
sub
in
mov
xor
xchg
jle
mov
inc
int
or
test
lret
sbb
sti
xlat
fwait
mov
and
js
or
pop
add
nop
je
cs
xchg
xchg
xchg
mov
cmc
lcall
adc
addl
sub
push
jle
dec
xchg
cmp
les
sarl
mov
lods
into
adc
outsl
sti
and
cld
test
and
add
add
xor
out
sub
mov
int
sub
or
pop
outsb
xor
shl
mov
stos
loopne
add
imul
out
adc
cmp
push
jne
out
shll
sti
iret
scas
sbb
cmp
or
test
fsubrl
xor
add
and
repz
xchg
sub
cld
shr
stos
or
sbb
jmp
aam
sbb
ret
les
out
jecxz
loop
sbb
cli
dec
jne
ret
jge
and
pop
fwait
sub
mov
sahf
test
mov
ret
cmp
mov
outsl
add
mov
inc
cmpsl
rcll
stos
jg
ret
fisubrs
cmpsb
lret
add
bswap
pop
lret
add
inc
inc
test
dec
mov
jo
outsl
dec
mov
sbb
jle
push
add
fnsave
int
dec
shlb
xor
js
xchg
push
jmp
test
and
loopne
in
scas
cmpsl
mov
sbb
push
fnsave
push
inc
insb
cltd
sbb
test
push
xchg
nop
push
mov
mov
pusha
inc
jmp
stos
es
clc
push
hlt
fwait
popf
das
out
or
in
stc
sbb
popf
xor
lea
add
je
aaa
mov
pusha
push
xor
test
dec
and
jb
mov
xchg
sbb
into
xor
mov
stc
clc
pop
mov
rcr
xchg
sbb
sbb
cs
pop
jl
iret
mov
dec
rcrl
clc
bound
jge
movsb
mov
scas
sub
adc
sub
iret
mov
mov
mov
adc
dec
inc
push
movsb
adc
xor
and
leave
repz
stos
pop
xor
popa
push
xchg
repz
aad
sub
mov
loope
lret
or
outsl
mov
adc
cmpsl
pop
or
insl
cli
enter
mov
test
add
stos
in
mov
add
fsubl
int
pop
mov
cmp
gs
ljmp
xor
mov
mov
add
xlat
dec
outsl
mov
jl
jbe
push
sbb
xor
inc
inc
into
lock
fdivl
addr16
fwait
or
gs
xor
dec
and
pop
and
popa
mov
fs
add
mov
mov
push
and
inc
lret
add
call
lock
jae
icebp
push
and
xlat
pop
ja
outsb
mov
sar
lds
pop
xor
push
pop
loop
dec
test
ffreep
out
lds
loopne
pop
or
mov
xor
and
cmp
mov
mov
mov
mov
cmp
pop
data16
imul
sbb
pop
inc
lds
aas
popf
cmp
and
xchg
fisubl
xor
push
repnz
lods
call
outsl
adc
jae
ds
pushl
cmp
sub
sbb
daa
pop
push
xchg
roll
sarl
mov
test
lds
addr16
dec
in
test
cltd
pop
test
mov
cwtl
sub
call
dec
loope
std
ss
mov
insb
repnz
xchg
out
dec
pop
push
pop
dec
add
jne
mov
mov
mov
push
or
jae
xchg
cs
sbb
out
push
je
or
mov
bound
cmc
rcrb
jp
lcall
cmc
mov
sub
and
pushf
jbe
mov
mov
movsb
mov
call
roll
fimuls
mov
sti
subl
mov
cltd
jmp
mov
in
jnp
out
jae
mov
push
movsb
fsubl
lods
sahf
popf
cmp
faddp
xlat
push
aad
cmp
xchg
adc
add
push
mov
fsubrl
jmp
jmp
lea
test
aas
call
shrb
pop
mov
addr16
push
shrb
std
nop
dec
mov
inc
xchg
push
pop
cli
xchg
inc
mov
cmp
and
jns
sbb
mov
jge
movsl
dec
add
mov
xchg
daa
mov
pop
jno
addr16
mov
in
mov
push
push
das
mov
test
push
std
or
mov
sub
pop
cltd
mov
pop
testl
xchg
xchg
mov
mov
ss
mov
frstor
cmp
push
xlat
repz
push
sahf
mov
xor
adc
pop
loop
sub
int3
addb
lods
test
xor
lcall
xacquire
rcll
push
fwait
jae
rol
xchg
cmp
add
xchg
hlt
or
mov
jmp
xchg
fildll
scas
dec
lods
bound
jl
mov
pop
sub
lcall
std
dec
ret
call
adc
lods
shrl
in
and
adc
sbb
sarb
sbb
out
loop
push
pusha
and
push
cmpsl
rcr
ja
jbe
rclb
lods
sub
insb
arpl
mov
aam
negb
inc
mov
stos
xlat
sbb
shrb
popa
mov
mov
aas
jp
incl
pop
sti
push
js
ret
and
jne
sub
mov
lods
sbb
popf
out
fwait
in
push
jmp
out
jno
pop
lret
inc
adc
inc
jno
jno
cmp
lods
loop
cmpsb
fisubs
and
mov
icebp
add
inc
fimull
dec
dec
mov
fisubl
into
mov
cmp
cmp
iret
lldt
mov
mov
push
and
mov
sbb
out
sbb
out
dec
mov
sbb
jnp
push
movhps
dec
sarl
pushf
pushl
push
ficoms
cld
addps
das
out
xchg
repnz
decl
xor
sub
lcall
fmull
stos
fst
pop
repz
movsl
popa
pop
push
xchg
idivb
leave
xor
clc
sbb
leave
mov
pop
inc
jb
popa
mov
sub
xchg
cmp
dec
leave
pop
pop
imul
adc
sub
mov
adc
xchg
push
movsb
ja
mov
or
fistpll
pop
or
loop
push
xlat
push
cwtl
mov
push
adc
add
push
mov
ret
bound
dec
mul
dec
push
daa
decl
es
jbe
adc
test
imul
push
adc
cmp
mov
mov
push
ljmp
insb
mov
pop
mov
adc
jb
adc
xor
jb
mov
movsb
cmp
dec
loop
mov
sti
adc
jne
clc
and
sub
fwait
call
adc
nop
mov
fisubrs
decb
mov
loop
sbb
aad
adc
jg
and
loope
sbb
jle
mov
inc
loopne
mov
jp
and
shl
add
or
xchg
mov
jns
rorb
or
mov
push
je
push
pusha
pop
test
mov
mov
lcall
add
add
fldl
dec
test
outsb
mov
adc
cmp
lret
cmpw
xor
loope
in
arpl
sbb
out
xorl
xchg
stos
sbb
cmc
inc
fadds
repnz
dec
xorb
in
pop
pop
lcall
cmp
mov
dec
mov
mov
shrl
and
cltd
pop
test
mov
les
popf
adc
xchg
ja
lea
push
gs
icebp
test
xor
mov
jo
fs
shl
movsl
push
jb
imul
loope
daa
add
arpl
dec
push
jae
je
inc
xor
movhps
mov
inc
jge
sub
cwtl
pop
pop
lahf
rcr
dec
xor
jo
xchg
mull
dec
stc
mov
pop
fdivrl
aad
jnp
mov
cmp
stc
faddl
popf
subb
into
push
xlat
push
int
cld
enter
add
call
loop
loopne
dec
imul
xor
adc
mov
int
jno
out
jle
iret
faddl
cs
ret
scas
in
mov
inc
push
mov
jae
lods
idiv
inc
push
lods
ljmp
test
add
add
pusha
mov
adc
xchg
push
xchg
insl
sbb
idivl
adc
or
mov
mov
aas
inc
lret
rol
out
push
mov
aad
push
mov
jecxz
xor
sbb
or
adc
dec
insb
flds
arpl
jb
arpl
pop
cmpl
dec
inc
jmp
push
daa
push
test
cli
aad
dec
ret
inc
xlat
add
loop
stos
outsb
mov
inc
mov
sbb
mov
call
gs
sti
jp
and
mov
mov
inc
mov
xor
xor
push
push
cmp
and
loope
lds
shr
jne
seto
cmp
dec
mov
cmp
pop
popf
rorb
repz
xor
sub
inc
repnz
ret
mov
loopne
push
jle
das
cwtl
cmp
daa
jns
lds
mov
push
rcll
rclb
add
out
out
icebp
cwtl
lods
push
idiv
push
fcompl
and
or
ret
stos
lods
jae
mov
inc
push
push
dec
mov
add
call
and
pop
pop
or
das
jecxz
cmc
ja
jl
or
push
inc
add
es
rcrb
lret
jns
rolb
mov
or
fistl
fs
arpl
pop
push
push
lea
and
shll
ljmp
fcoml
sub
rorb
enter
adc
dec
mov
out
pop
inc
push
mov
scas
mov
xor
mov
insl
fistpll
add
out
cmp
dec
outsb
fnstcw
mov
mov
mov
scas
push
xchg
fisttps
jle
out
fdivrs
mov
movsb
rorb
sti
pusha
mov
cmp
test
and
shll
mov
lea
xorl
xchg
fcomip
call
push
fistps
jns
insl
hlt
scas
adc
popf
subl
aaa
xor
cmp
push
pop
dec
std
ret
mov
jo
movsl
lods
scas
dec
cmpl
sub
push
loop
jmp
lods
sahf
mov
dec
dec
jecxz
inc
dec
adc
mov
jo
sub
lcall
sti
ds
or
adc
mov
lret
mov
xchg
loop
cmp
mov
leave
daa
js
push
leave
cmpsb
dec
mov
mov
mov
cmp
insb
jg
addr16
mov
in
mov
dec
lret
test
mov
sahf
iret
outsl
xchg
sbb
or
leave
insl
inc
xchg
mov
sbb
push
add
outsl
imul
inc
sahf
ds
imul
mov
lahf
mov
dec
sbb
pop
test
cmp
das
inc
lock
push
inc
iret
pop
inc
or
repz
jno
cmpsl
mov
pushf
jb
loop
sbb
jo
clc
or
pop
jge
clc
stos
sub
and
cmp
adc
push
sbb
push
cmp
mov
movsl
jo
fwait
popf
lock
push
dec
xchg
popa
xchg
sbb
or
std
push
leave
cmp
pop
nop
mov
mov
pop
adc
and
or
xor
or
leave
loope
adc
jmp
stos
mov
rcl
mov
cld
je
mov
sub
imul
cmpsl
addr16
fwait
sti
push
in
cmpsl
mov
mov
push
cmpsl
call
mov
jg
mov
add
adc
cmp
dec
fs
or
cli
ja
das
iret
sbb
aaa
jp
dec
rcrl
cld
sbb
adc
ss
in
clc
inc
mov
xchg
mov
daa
jl
repz
sahf
jno
push
movsl
clc
jle
in
ljmp
xchg
popa
add
xor
mov
xchg
inc
std
mov
movsb
repnz
and
mov
push
mov
jmp
mov
mov
imul
adc
ret
daa
xor
and
aam
mov
insl
sbb
fcoml
adc
jl
daa
mov
icebp
pusha
inc
or
push
and
mov
inc
adc
sub
cmpsl
aad
inc
sbb
popa
es
cli
cmp
mov
xchg
cmpsl
js
xchg
dec
xchg
sub
mov
adc
push
cltd
push
cld
movsb
mov
sti
lock
int
inc
shll
push
loope
cmp
mov
rcl
aad
cmp
pop
cmp
lods
retw
addr16
inc
sbb
loop
push
jge
pop
xchg
xchg
jecxz
hlt
or
fwait
leave
add
xchg
je
movsl
push
cbtw
push
lds
jne
lea
js
rcrl
fldt
cmp
loop
sahf
rclb
sub
adc
enter
bound
int
xchg
sarb
imul
enter
aas
cmp
sete
add
ss
xchg
and
aad
add
out
ficompl
adc
push
sbb
test
push
mov
lds
mov
pop
sahf
push
fisttps
sbb
mov
dec
xchg
xor
and
or
dec
rcrl
testb
push
jb
sarb
pop
ror
push
cmp
sub
inc
cmp
pop
and
stos
outsb
pop
jmp
test
jle
cwtl
ficoml
xor
mov
xchg
xlat
lret
cmpsb
pop
pop
sbb
pop
add
push
pop
or
mov
outsb
mov
pop
sbb
adcl
mov
aam
sbb
jne
fildll
aas
jge
mov
or
mov
pop
ds
mov
push
leave
mov
stos
shl
sbb
sahf
pop
xchg
jbe
push
outsb
push
sub
cmp
cmp
int3
xorl
jle
aas
lret
or
popa
movsl
imul
pop
push
iret
testl
cmp
rorb
lods
test
decl
lock
pusha
inc
mov
les
les
ret
pop
stos
xchg
sbb
push
mov
cli
ret
es
icebp
loope
test
xchg
lret
addr16
mov
push
bound
xchg
xchg
cmp
adc
jge
pop
mov
and
mov
dec
cmc
mov
sarb
jp
or
test
jp
fimuls
into
sub
cmc
ljmp
mov
adc
or
stos
ljmp
push
jle
jge
ds
stos
adc
adc
add
rol
xchg
ljmp
add
fiaddl
mov
xor
lahf
jg
jg
xor
push
push
cmp
ret
xor
bound
xchg
ret
jae
jo
cmc
ljmp
sub
jg
dec
cld
int3
xor
rorl
mov
mov
mov
cwtl
pusha
inc
inc
xor
imul
push
add
mov
add
or
cmpsl
ror
sti
fstps
in
aas
jge
dec
outsb
jecxz
ds
int3
cmp
sub
inc
sbb
mov
jo
pop
int
and
pop
inc
mov
mov
test
xor
and
fnstenv
mov
lods
pop
imul
sub
das
add
xlat
push
das
mull
mov
mov
out
xlat
xor
les
adc
stc
dec
dec
add
pop
dec
mov
mov
pop
ret
push
xchg
fdivrp
js
xchg
cli
cltd
data16
fisubs
mov
mov
rclb
mov
fdivr
lret
les
add
out
jg
insl
lcall
lret
hlt
ja
int
xor
push
mov
addr16
jno
jl
sub
or
inc
cmp
mov
das
mov
xchg
es
and
xchg
filds
pop
mov
mov
fcomp
mov
cmpsb
xchg
mov
addb
pushf
pop
push
lods
inc
jno
jecxz
and
lret
mov
incb
xor
stos
in
adc
cli
mov
mov
andb
pop
ret
or
lahf
or
repnz
mov
lret
inc
push
aaa
nop
insl
mov
push
add
leave
sti
jbe
test
push
mov
outsl
add
cmp
mov
jo
xchg
push
lds
pavgw
outsl
inc
into
lcall
or
test
movsb
clc
inc
add
xor
jae
loopne
pop
mov
add
xchg
or
mov
mov
xor
pop
jnp
pop
dec
test
test
xchg
push
xor
ss
pop
shrl
mov
ret
and
popf
mov
lret
shll
sub
imul
cmp
movsb
mov
ljmp
jae
inc
mov
out
inc
mov
sti
add
lods
arpl
jl
cmp
inc
ret
adc
push
call
popa
cmp
test
sbb
add
and
fsubl
mov
jge
pop
adc
add
inc
dec
rcr
mov
stos
rorl
fnstcw
std
jbe
sbbb
rcl
cmp
icebp
push
pushf
mov
and
mov
push
out
push
stos
pop
sub
cld
lahf
fisubrs
out
es
dec
sbb
push
sbb
pop
imul
pushl
fwait
and
cmp
dec
and
test
xchg
push
mov
and
push
sti
test
int3
enter
pop
clc
dec
test
insb
sub
pushf
push
cmp
outsb
mov
add
stos
mov
pop
ja
xchg
adcb
push
mov
fs
pop
adc
inc
in
ljmp
int3
fnstsw
mov
xor
out
out
insl
pushf
rcrb
inc
je
stos
lods
or
sub
ds
jg
mov
repz
cmp
sbb
sbb
jl
repz
pop
xchg
adc
or
mov
jmp
sub
mov
in
sbb
or
pusha
jg
mov
mov
loopne
add
sub
repnz
mov
shll
cmpsb
jg
add
xchg
bound
cli
xchg
sar
cmpsb
inc
cmp
mov
pop
pop
aam
pusha
pop
inc
or
jge
lret
cmp
xchg
stc
loope
loopne
push
test
mov
sahf
mov
lahf
rcr
neg
jno
test
out
xor
sbb
and
xchg
inc
mov
mov
shrl
orb
pop
pop
adc
jne
jb
inc
repz
pop
or
les
nop
and
mov
fucom
jns
sbb
mov
mov
sub
inc
push
iret
fbld
dec
push
daa
push
fnstsw
je
fcoml
jb
jne
mov
jle
or
fidivl
pop
stos
xor
mov
jg
pusha
out
js
outsb
stc
je
or
or
mov
rol
xlat
iret
cs
add
adc
mov
xchg
mov
cmp
fisttps
dec
out
in
jle
inc
pop
sub
mov
out
out
sub
shr
fs
inc
pushf
out
int3
jmp
pushf
push
cwtl
push
rcll
jecxz
icebp
lret
mov
lods
lock
mov
repz
jo
add
sti
shl
add
pop
shlb
daa
xor
add
ret
mov
clc
cmp
test
filds
icebp
xchg
ret
stos
push
inc
pop
pop
xchg
lods
sti
in
dec
mov
jo
fdivrs
cld
shl
and
hlt
mov
lea
cmpsb
rcll
xor
cltd
testb
outsl
adc
movsl
dec
outsb
cmp
int
xor
inc
inc
jp
xchg
or
add
adc
ficomps
cmp
mov
aaa
div
call
pop
mov
sbb
sub
enter
inc
sbb
xchg
or
scas
or
cmp
inc
xchg
fs
xorl
ss
out
in
faddl
and
inc
call
or
and
mov
jo
add
inc
loopne
insb
pop
sub
cmp
pop
out
xchg
sub
loopne
dec
jb
mov
pop
add
cmp
inc
push
out
outsl
or
push
cli
out
pop
sbb
loop
pop
jns
fnstenv
mul
gs
imul
push
aas
loope
cld
and
sbb
ja
mov
adc
pop
mov
pop
and
jge
xchg
cmp
add
mov
and
pop
int
add
das
out
or
sub
dec
scas
and
test
es
repnz
mov
inc
push
loop
aaa
cmpsl
cmp
jmp
push
arpl
daa
test
mov
dec
mov
stc
ror
inc
mov
in
mov
filds
jno,pn
mov
and
xchg
xchg
sbb
icebp
mov
rcll
inc
sbb
jecxz
fwait
repz
andb
cmp
popf
or
insb
and
iret
mov
ror
cwtl
movsl
and
es
mov
lods
mov
loopne
cmp
mov
dec
pop
push
add
aam
mov
xchg
mov
lret
and
push
inc
mov
cmp
inc
cmpl
ss
push
mov
jne
sti
shrl
pop
push
xchg
lods
push
in
shlb
add
mov
xor
arpl
lods
sub
scas
addb
pop
pusha
mov
fnstenv
jl
mov
jne
jae
mov
in
call
insl
test
ret
lret
cmc
xor
add
es
decl
popa
daa
jbe
or
push
and
push
icebp
pop
lods
xor
add
sarb
dec
pop
lcall
inc
dec
mov
das
pop
test
xor
mov
dec
fcmovnbe
push
mov
in
adc
adc
loope
jbe
mov
push
imul
sub
inc
jl
push
lea
and
mov
cmpsl
fs
xchg
aas
data16
inc
call
inc
adc
and
inc
pop
push
jnp
stos
mov
cmpsl
lcall
sub
xchg
add
std
cmp
imul
xchg
lret
pusha
cmc
mov
mov
add
xor
addr16
cs
push
pop
xor
mov
xor
out
xor
inc
cmpsb
imul
or
mov
into
pop
sbb
and
fs
mov
loop
cwtl
add
pop
sub
imul
je
jle
xchg
mov
bound
and
cld
ljmp
dec
pop
psubb
enter
cltd
ficomps
fsubrs
addr16
cmp
cwtl
cmpb
ret
iret
xchg
insb
das
cmp
cld
push
lea
lea
add
icebp
sub
nop
enter
pop
mov
js
data16
add
lock
mov
xchg
add
pusha
xchg
les
test
lea
and
hlt
jmp
test
in
outsb
andb
mov
cmp
inc
aam
cmc
gs
lods
jl
xchg
popf
rol
push
loopne
das
or
cmpsl
fs
jmp
add
push
outsb
mov
add
push
or
adc
and
jns
mov
mov
dec
inc
sti
sbb
xchg
cld
jne
adc
jg
mov
pop
dec
dec
or
in
scas
sbb
rep
out
add
pop
fs
je
or
mov
dec
daa
xor
int
push
jne
sarl
pusha
jnp
jae
call
and
mov
insb
mov
cmp
mov
dec
sub
jmp
push
scas
lea
pop
jge
hlt
arpl
pop
push
or
push
call
lret
xchg
call
add
xchg
xor
push
pop
enter
jg
stos
js
pushf
jne
cmp
mov
add
mov
sub
mov
lret
xchg
shlb
dec
add
out
aad
xchg
rcrl
xor
jno
mov
fdivs
out
xchg
fptan
iret
sub
cmp
push
movsb
push
jle
lock
imul
xor
pop
test
bound
adc
inc
ret
push
pand
adc
lcall
or
cld
popf
lahf
out
jmp
xor
ficompl
push
xchg
scas
movsl
push
std
adc
xchg
xchg
xchg
or
aaa
enter
sub
lock
and
movsb
das
std
cwtl
xlat
int3
mov
test
jb
cld
mov
fmull
outsl
out
lea
in
data16
pop
push
fsub
leave
push
mov
pop
mov
xlat
lahf
sbb
into
dec
call
add
cltd
in
mov
sub
test
mov
fadd
or
pop
pushf
dec
out
cltd
adc
mov
push
popa
hlt
mov
add
fistl
dec
in
in
pop
cmpsb
cmc
inc
pop
and
jae
adc
dec
jb
push
inc
fadd
cmpsb
sbb
int3
test
popa
mov
les
outsl
push
push
inc
je
data16
xlat
cld
inc
loope
xchg
out
stc
lahf
sbb
sti
or
inc
aam
mov
cs
xor
in
sbb
js
xor
cmp
mulb
fwait
sub
cmp
stc
dec
int3
pop
pop
pop
push
in
rorb
mul
and
test
sbb
ds
dec
mov
and
push
ja
jne
andl
add
push
inc
idivb
xchg
fs
in
cli
test
and
sub
xor
clc
add
adc
mov
lcall
ret
cwtl
xlat
xchg
pop
xor
mov
adc
push
jnp
shll
les
shll
arpl
ljmp
pop
inc
mov
movsl
and
push
in
sub
sub
cmc
mov
mov
dec
pop
add
lahf
icebp
jg
xchg
xchg
pop
mov
fcom
pushf
cwtl
jle
push
or
inc
test
sahf
in
lcall
inc
xor
ja
sbb
jl
addr16
push
xchg
popa
call
inc
dec
es
adc
pop
std
scas
jbe
push
mov
addb
add
mov
dec
inc
aad
or
fwait
adc
push
push
ljmp
lods
cli
sub
gs
cli
cmp
sarb
jmp
sub
inc
sbb
fsub
pop
hlt
xor
xor
out
out
lcall
dec
lods
out
push
xor
mov
cltd
mov
xor
repnz
cmpb
push
imul
add
dec
dec
adc
mov
in
or
insb
movsl
outsl
xchg
jmp
sbb
push
pop
xchg
mov
pushf
dec
push
jl
lret
xchg
shlb
cmpsb
das
cs
push
add
ficoms
les
xor
push
and
push
or
mov
add
push
pusha
add
les
add
mov
jmp
and
push
push
cmpsb
movsb
cmp
jle
jecxz
adc
popa
enter
outsl
ja
movsl
mov
imulb
fdivrs
jae
xchg
mov
dec
loope
fdivs
dec
addr16
add
nop
pop
mov
push
push
int
adc
hlt
gs
loop
xchg
data16
mov
mov
lock
jg
push
push
cld
mov
xchg
shrl
mov
popf
or
jl
or
cmp
cs
mov
pop
pop
pop
xchg
mov
inc
and
cmp
and
inc
fs
mov
cwtl
or
xchg
cmp
sbbl
dec
test
add
or
lock
sti
add
jecxz
mov
push
in
mov
sti
add
dec
lods
cli
xchg
nop
imul
mov
in
and
icebp
sbb
movsl
mov
pop
shll
stc
dec
jno
out
push
dec
push
outsb
mov
int
mov
fildl
repnz
inc
pop
mov
pop
imul
add
test
daa
xchg
xor
lcall
mov
fcomps
mov
mov
std
lds
addr16
loopne
sbb
aaa
loopne
arpl
cmpsb
mov
popf
test
decb
enter
stos
push
int
sub
testl
adc
in
jg
and
xchg
test
pop
push
xchg
addl
or
popf
into
loop
sahf
sbb
cmpsb
cmc
movl
mov
ret
jg
mov
adc
jl
nop
mov
lds
push
mov
data16
jle
mov
push
out
es
iret
mov
cmp
jns
push
in
loopne
pop
xor
in
loop
adc
inc
dec
xchg
outsb
and
hlt
dec
out
or
jmp
pop
jno
dec
push
hlt
lods
lds
mov
jbe
push
loopne
sbb
sbb
mov
jns
cltd
ljmp
push
fisttps
cmp
inc
sbb
loope
jbe
ja
xchg
aad
xor
cld
shl
xchg
jo,pn
jns
pop
xor
out
shl
enter
inc
sahf
ret
ss
jmp
fsubs
dec
jo
dec
adc
pop
int
ds
and
cmc
cmp
or
cli
push
lods
xor
es
in
lret
dec
pop
push
push
pushf
sbb
jno
xor
rclb
pusha
das
adc
sti
and
aaa
notl
dec
lods
cmpsb
inc
push
cs
add
in
xor
ljmp
mov
aas
mov
ret
insb
in
cmc
xlat
mov
inc
aam
inc
cmpsl
xchg
subl
loop
arpl
push
je
fildl
pop
pop
pop
dec
dec
stos
pop
cmpsl
fcoml
inc
out
test
adc
push
fbld
es
test
fdivrs
push
inc
push
cs
sti
dec
addr16
xchg
pop
aam
cwtl
mov
in
loope
xchg
inc
push
inc
push
pop
popf
pusha
hlt
subl
jb
fstpl
mov
or
scas
mov
fsqrt
mov
int3
loop
push
push
jg
pop
lcall
gs
jecxz
mov
push
out
adc
data16
pop
inc
popf
push
iret
sti
cwtl
imul
cmpsb
or
out
hlt
shll
adc
pop
mov
jge
pop
jno
cmpsl
push
lret
imull
mov
loopne
dec
push
cli
ret
push
daa
inc
loope
inc
fsub
test
and
push
jl
pop
mov
popa
ret
push
inc
jb
sub
cmp
mov
cs
dec
daa
fwait
jg
sbbb
or
test
lods
lea
or
xor
rcrb
xchg
or
pop
sub
cli
mov
dec
nop
xchg
xlat
dec
scas
push
fs
scas
imul
jp
xchg
aas
pop
push
xchg
sbb
mov
jo
and
inc
out
rolb
out
sbb
mov
sarb
popa
in
lahf
out
xlat
rcll
fsubl
lods
jbe
and
mov
adc
into
sub
push
call
es
int3
arpl
fisubl
insl
ds
mov
adc
iret
lahf
ret
sub
cmp
sub
inc
sbb
adc
stos
cmpsl
mov
xchg
mov
mov
imull
sbb
sbb
daa
xor
das
in
add
pop
pop
jbe
add
les
in
and
fs
mov
inc
mov
imul
shlb
pop
movsl
movsb
aad
sub
out
stos
jae
aam
adcb
sub
pop
popl
shrb
xchg
xchg
popf
or
mov
jb
call
jo
push
test
add
jg
xchg
pop
mov
push
adc
jg
lea
push
aam
cmp
insl
add
enter
mov
shrl
lcall
xor
cmp
lods
xor
mov
imul
aad
outsl
pop
mov
push
sbb
or
std
test
mov
xor
xchg
out
inc
aam
jg
sub
es
push
hlt
cwtl
xchg
bound
add
fists
dec
adc
inc
mov
jmp
add
cmp
lret
sub
daa
fdivs
int3
ljmp
and
mov
out
sbb
pop
pop
sarl
pop
pop
scas
fsub
ret
popf
enter
inc
test
or
cld
fisttpl
ficomps
mov
orl
xchg
dec
outsl
mov
inc
aam
es
sub
ret
ss
pushf
and
dec
in
mov
sub
repz
cmpb
dec
pop
in
test
push
std
pop
mov
inc
mov
sbb
int3
push
dec
dec
imul
fs
inc
xchg
xlat
daa
or
hlt
xor
push
or
sub
inc
mov
js
inc
clc
dec
loop
fs
or
pop
jns
testb
aas
mov
jmp
daa
add
lock
adc
pusha
ss
in
cs
sub
icebp
aam
xor
mov
push
cltd
xchg
inc
outsb
lret
iret
pop
movsl
jns
orl
arpl
test
push
add
mov
rcrb
popf
xchg
mov
js
mov
add
cmp
dec
aas
divl
nop
shlb
es
and
es
sahf
and
mov
mov
cmp
mov
mov
cmp
and
lock
or
mov
jbe
mov
or
push
stos
or
mov
test
les
stc
add
xchg
pop
jecxz
xor
jl
aam
sbb
xchg
jbe
les
push
in
imul
iret
add
sbb
data16
outsl
xchg
cmp
dec
push
movsb
xor
jmp
xlat
and
sub
xchg
push
js
lods
into
xorl
xorl
and
ret
and
fisttpll
push
fbstp
mov
popw
je
xchg
insb
shlb
pusha
cmpsb
pop
sbb
fldt
jne
loop
inc
addl
push
sub
cmpsb
dec
jp
test
sub
shll
aaa
std
dec
or
xlat
mov
xchg
and
mov
sub
push
mov
xchg
and
lods
sub
cmp
dec
xor
pop
sbb
popa
aas
bnd
and
lds
mov
popa
sahf
outsl
sub
xchg
rorl
out
setge
mov
lahf
loope
cmp
add
scas
push
xor
mov
outsb
dec
mov
fwait
and
or
push
pop
rclb
stc
inc
mov
test
mov
lods
fs
sub
push
insl
mov
xor
and
lea
pop
sub
mov
int
cmc
xchg
lods
xchg
dec
mov
sbb
jmp
mov
jno
add
dec
sub
jp
imul
std
mov
pop
imul
test
out
cld
and
movsb
out
aaa
xchg
dec
mov
add
mov
xorb
lret
pop
mov
sbb
dec
cmpl
sbb
rcll
push
dec
pop
leave
std
das
add
adc
or
call
mov
icebp
xchg
mov
popa
fcoml
cwtl
xchg
pop
rolb
pop
clc
push
notl
ss
clc
aaa
pop
js
mov
stos
mov
push
sbb
out
mov
adc
jmp
jns
add
xchg
out
mov
mov
aam
or
sub
mov
mov
mov
and
repnz
repz
or
inc
aaa
pop
testl
add
xor
or
jp
adc
cmp
push
xor
cs
jbe
and
cmc
mov
sub
sub
lret
cld
pop
fstps
mov
lret
idivb
push
add
pop
cld
outsl
xlat
sub
filds
shlb
addr16
addr16
adc
fcomps
xor
dec
cmpsb
jecxz
dec
scas
or
mov
xlat
movsl
ror
mov
rorl
mov
add
lds
lea
daa
push
push
inc
mov
push
xchg
call
pusha
xchg
lock
sbb
jp
sub
ret
jge
or
adc
mov
fldcw
lret
xchg
popf
into
dec
gs
xor
mov
push
das
out
jbe
or
mov
jmp
cmc
pop
mov
and
sub
sub
sti
insb
loop
xor
repnz
inc
sbb
flds
sbb
mov
push
pop
mov
fsubs
adc
mov
stos
int
mov
sub
add
push
push
pop
pop
push
xchg
jecxz
aaa
fwait
sahf
sub
jl
and
fnstcw
std
std
repz
pop
xor
sub
in
inc
pop
fcompl
mov
xchg
jecxz
xor
adc
inc
cltd
push
pusha
inc
mov
lds
cmp
mov
sub
ror
push
popa
xchg
sbb
loopne
xchg
inc
pushf
pop
xlat
outsl
dec
inc
hlt
testl
jo
xchg
arpl
rcrb
lea
orb
gs
cmp
outsl
imul
or
mov
mov
fdivr
cmc
or
aam
and
lea
inc
xor
cmpl
or
push
mov
xlat
xor
popa
cmpsl
flds
and
xchg
and
es
mov
ss
daa
cltd
pop
aad
sbb
and
insl
mov
push
dec
xor
push
cmp
jmp
mov
nop
sar
fiadds
mov
dec
pop
jecxz
mov
pusha
or
cmp
stc
xchg
pop
pop
fnstsw
in
add
fs
mov
or
jmp
dec
pop
popf
cmp
std
imul
cs
mov
inc
or
roll
jo
movsb
inc
fnstsw
and
pop
loopne
lahf
in
xchg
test
cmp
push
hlt
sbb
and
pop
stos
mov
clc
dec
xchg
stos
iret
ficoml
ljmp
xor
xchg
mov
jge
movsl
notl
push
xor
cli
ja
fimuls
jne
push
ret
jo
push
xchg
mov
fucomi
cld
mov
inc
mov
js
or
test
leave
fs
push
jns
scas
lret
lahf
add
bound
fs
inc
jb
cli
rcll
sub
cmpsb
mov
jl
dec
jbe
push
bound
cmpb
mov
jae
test
or
adc
adc
addr16
sub
les
dec
xchg
int3
in
mov
fnstcw
mov
or
pusha
cmc
icebp
and
cmpsb
aas
push
mov
out
in
jns
incb
or
enter
fnstenv
sbb
xor
outsl
sti
inc
es
scas
ret
xchg
adc
adc
mov
push
idivb
dec
mov
or
or
fildl
loopne
ljmp
sub
fneni(8087
xlat
xchg
nop
add
out
scas
add
jns
jbe
repz
or
out
pop
xchg
xchg
mov
frstor
inc
jb
test
mov
in
ljmp
or
mov
test
shl
es
out
out
rcrb
negl
sar
fwait
and
pop
pop
xchg
inc
dec
popa
mov
repz
mov
cmpsb
test
mov
iret
out
fcmovnb
sti
add
cmp
inc
movsb
fdivs
dec
cmpsb
jae
stos
mov
test
fs
mov
inc
xor
gs
lahf
sub
adc
lret
dec
mov
popa
ret
pop
mov
xor
dec
xchg
pushf
lret
hlt
lods
call
jo
push
mov
dec
les
sub
jno
xchg
movsb
push
sbb
sub
inc
test
sti
jae
mov
bound
ss
stos
push
test
xchg
aaa
mov
cmp
jmp
push
sbb
push
aam
mov
ret
jg
cmp
outsb
jp
xchg
pop
push
inc
out
mov
add
lcall
andb
cmp
inc
pslld
adcb
in
mov
repz
adc
roll
or
bound
mov
shll
cmpsl
es
jnp
cmc
mov
outsl
bound
adcb
mov
and
mov
or
xchg
loope
lock
outsl
ret
inc
out
aaa
dec
push
roll
jns
cmpb
or
jnp
popa
fnstenv
add
mov
rclb
mov
and
mov
mov
ljmp
push
xchg
ret
or
inc
pop
in
mov
pop
shr
aaa
xchg
sbb
lret
dec
outsb
loopne
mov
and
fldl
sbb
fildl
mov
leave
addb
pop
ret
addl
inc
and
add
cld
xor
in
scas
ror
jae
pop
call
sbbb
jg
pop
aaa
insl
sbb
inc
mov
xchg
test
mov
call
push
popa
in
cmp
dec
push
add
xchg
js
ljmp
add
sbbl
add
fstpt
pop
and
jle
mov
and
and
add
xchg
sub
sbb
loop
xchg
clc
inc
frstor
sbb
mov
xor
cltd
mov
mov
das
and
sbb
adc
rolb
dec
outsb
pop
xchg
jb
xchg
roll
sbb
mov
je
xchg
inc
dec
dec
out
push
lret
and
jl
and
push
xchg
pop
sub
push
push
ret
sarl
adc
ja
push
repz
lret
jp
or
xchg
daa
mov
test
aam
mov
lock
inc
sbb
jbe
adc
movsl
xlat
sbb
test
fisubs
xor
rcr
pop
fs
xrelease
and
out
out
shl
and
das
mov
lahf
mov
mov
cmp
jl
cli
lock
mov
xchg
fwait
and
jb
sub
sub
stos
insb
call
ficomps
cmpsb
mov
xchg
aam
add
or
sarl
call
add
aaa
fldl
mov
imul
and
xor
lods
xor
lret
lods
add
pop
movsl
insb
fisubrs
pop
jne
mov
adc
push
add
xchg
in
hlt
outsl
subb
es
int
lock
add
mov
call
gs
xor
insb
mulb
mov
inc
es
jo
shll
sbb
rcr
jecxz
fdivs
lea
push
sahf
jge
add
push
stc
fmuls
call
push
sub
jns
inc
sbb
lds
lods
or
loopne
sbb
xchg
cmp
fsubrs
movsb
jb
mov
inc
cmp
sahf
pop
mov
rclb
xor
inc
push
mov
sub
jo
xlat
cli
mul
and
jmp
lds
sti
jecxz
loop
lods
sbb
inc
pop
adcb
sarb
sub
mov
in
mov
data16
stc
mov
dec
dec
outsb
sub
pop
sbb
mov
push
push
xchg
xchg
aas
jne
or
and
jns
aas
test
xor
mov
adc
insl
mov
movsb
sahf
mov
clc
ret
sub
add
adc
or
xor
test
sahf
sub
cwtl
mov
dec
test
shlb
add
mov
ja
arpl
aas
fidivrs
stos
sbb
dec
sti
pop
fs
loopne
scas
test
cs
stc
setb
sahf
scas
sub
call
push
test
mov
shr
mov
add
loop
aas
lods
pop
cmovnp
fcmovnu
lret
decb
ret
or
inc
sti
scas
fstl
sbb
jp
add
mov
outsb
cli
les
lock
xor
enter
popf
mov
fimull
imul
ds
call
jg
dec
xor
cltd
fs
idivl
mov
jne
fstpl
inc
sub
outsl
roll
or
fidivrl
cld
jl
fsubrs
sbb
repz
lock
and
cmc
lcall
loopne
mov
shll
xor
jecxz
xor
xchg
and
add
das
aaa
fwait
push
loop
cwtl
ficompl
push
int3
test
push
jo
out
out
or
dec
xor
enter
mov
scas
ja
scas
test
jecxz
jb
scas
xor
jg
inc
fwait
push
dec
mov
xor
sbb
pop
inc
cmpsl
inc
push
jge
adc
ja
scas
push
jnp
xor
imul
inc
shrl
xchg
insb
movsl
mov
push
clc
icebp
inc
das
sbb
sbbl
mov
mov
mov
cmp
cltd
call
mov
pop
dec
jecxz
fists
mov
sti
pushw
add
xchg
push
in
add
bound
cltd
push
dec
mov
aad
outsl
sub
mov
daa
popa
push
mul
adc
xor
mov
cs
cmpl
and
mov
xor
ljmp
push
mov
bound
rcrl
pop
push
push
loope
mov
mov
scas
scas
mov
frstor
pusha
sarl
enter
arpl
sub
push
sub
push
push
ljmp
dec
jo
adc
pop
sarb
test
jmp
sbb
and
repz
das
xor
jecxz
dec
mov
cld
xor
adc
ljmp
cmpsl
xchg
lods
push
or
into
jbe
shl
gs
fwait
mov
pop
movsl
xorb
iret
andb
and
sbb
or
inc
jae
sbb
and
test
mov
gs
shll
fists
lret
imul
jns
mov
add
rorl
cmp
push
mov
mov
inc
shrb
dec
xor
fildll
xor
sahf
mov
addl
ljmp
fiaddl
mov
out
ja
pop
sub
or
cmpsb
aaa
imul
mov
mov
xchg
movsb
mov
icebp
adc
inc
xor
jo
cmpsb
hlt
push
fwait
mov
pop
aas
pop
pushf
pop
xor
test
enter
imul
pop
int
int3
cmp
push
aam
mov
call
cwtl
lods
xor
add
pop
cs
nop
shll
push
lret
cld
iret
je
jmp
les
mov
pop
inc
and
test
xchg
test
rcrl
ret
mov
cs
cmp
divl
sbb
xorb
mov
push
or
xor
mov
mov
push
cmp
sub
sub
sbb
mov
lret
sub
jno
aad
das
push
scas
fisubs
jmp
xchg
inc
rcrb
adc
mov
or
hlt
mov
arpl
sbb
jo
xchg
cmp
daa
shr
fmulp
xor
xchg
adc
filds
testb
inc
dec
push
sub
sbb
xchg
sti
jns
and
pop
jecxz
sti
mov
jecxz
loopne
fbld
iret
pop
dec
in
sub
test
fsts
dec
mov
cmpsb
and
dec
into
loopne
xor
inc
push
clc
mov
out
push
dec
adc
ja
jb
cmc
dec
cmp
inc
push
push
addl
mov
popf
ja
dec
adc
mov
and
sbb
jo
xchg
cltd
movsl
fisubrs
out
aad
jecxz
pushf
out
and
pusha
pop
sti
sbb
pop
push
in
jl
std
pusha
repz
scas
cmp
cmc
das
fadds
lds
or
sub
adc
add
cltd
inc
xchg
inc
fwait
dec
mov
add
cmp
fsubrs
inc
popa
or
lret
or
mov
inc
push
fdivrl
stc
jae
push
pop
out
dec
push
push
push
rolb
fsubrs
dec
xchg
inc
adc
mov
sarb
jo
lds
pusha
push
sub
lret
sbb
add
std
mov
push
cmpsl
cmpsl
sub
bound
xor
xor
jge
movsb
push
insb
test
jns
lods
dec
es
lock
arpl
lret
adc
jnp,pn
mov
out
subl
cmpsl
js
jmp
stos
clc
test
cld
stos
je
test
xor
xchg
xchg
je
fcmovnbe
push
fisubl
inc
jnp,pt
jmp
fwait
fwait
fs
sub
sarl
jae
or
xorl
or
js
xchg
jae
jno
xor
lret
or
jl
adc
lahf
pop
out
lds
dec
mov
push
cmpsl
repz
jg
xchg
jno
pusha
xor
cmp
add
cmp
adc
xlat
jp
shrl
xchg
adc
xchg
loop
cmp
out
fsts
push
rolb
outsl
aad
push
cmp
outsb
lcallw
inc
jns
jge
sub
push
imul
adc
xchg
fbld
icebp
dec
mov
popa
xchg
ja
xchg
mov
or
pop
rcrb
out
xor
sub
cli
daa
dec
adc
scas
push
dec
xchg
stos
xchg
dec
and
push
and
insl
add
and
lods
jno
or
add
pop
adc
int3
mov
out
add
push
addr16
inc
lcall
dec
cli
xchg
pusha
es
rclb
popf
xorl
int
gs
jne
mov
mov
adc
shrb
fwait
add
out
movsb
stc
xchg
jne
and
repz
ja
xchg
pop
aaa
dec
iret
xor
scas
sbb
dec
pop
mov
cmp
movsl
call
or
movsb
sub
fsub
dec
mov
jne
push
and
mov
mov
imul
mov
xor
push
insl
int3
outsb
out
decl
xor
jns
push
add
aaa
aaa
push
shlb
jle
scas
repz
pop
scas
cli
jecxz
out
sahf
lcall
mov
inc
aad
jb
push
rcrw
inc
imul
push
xor
push
out
arpl
sbbl
add
mov
popa
cmpsl
ja
push
and
dec
hlt
add
or
dec
sub
cmp
lret
test
lock
shlb
or
movsb
int3
std
addr16
bound
mov
pop
test
mov
inc
mov
hlt
push
pop
pop
outsb
xor
stos
cmp
fmuls
repnz
sub
stos
enter
push
cmp
add
lcall
cs
sub
inc
outsb
test
jmp
pop
in
fsubs
aas
lcall
in
test
into
xchg
or
sub
shrl
mov
pop
mov
jae
pop
and
shll
and
cmp
out
xchg
xlat
mov
aas
out
fidivrs
mov
fbstp
cltd
fimuls
popf
sub
sahf
sub
and
add
mov
shr
fsubl
lcall
xchg
xchg
int3
pop
loope
pop
mov
pop
cmc
mov
sub
mov
inc
jnp
push
xlat
movsl
aas
xlat
aaa
imul
out
daa
lock
not
mov
mov
leave
pop
into
mov
mov
lcall
in
adc
sbb
xchg
data16
pop
sbb
dec
js
pop
push
xchg
stos
sbb
xor
hlt
jne
push
cmp
fbstp
push
bound
cltd
inc
mov
dec
fsubrs
cmpsb
mov
sbb
dec
je
jns
addr16
xor
push
pop
sbbb
je
das
inc
mov
sub
pop
push
xchg
mov
pop
or
mov
xor
dec
or
adc
and
cli
loopne
or
jp
push
adc
and
rorl
out
add
xchg
lahf
je
xchg
jb
cmp
jp
enter
inc
mov
fsubrl
ja
mov
stc
xchg
sbb
movsb
andb
out
jge
pop
and
sbb
jmp
lret
fsubrl
inc
ljmp
insb
cmp
movsl
xor
je
adcb
les
and
cmpsb
cltd
imul
in
adc
iret
pop
mov
mov
jne
xchg
lock
stc
mov
jmp
cmp
and
fisubrs
add
in
and
pop
ret
out
mov
stos
jmp
add
lcall
daa
icebp
cmp
jg
leave
adc
rcrb
popf
cwtl
inc
sub
mov
and
lock
ds
dec
pop
int
inc
dec
jno
outsb
dec
sub
pop
adc
jae
xor
enter
test
mov
iret
aad
js
iret
stos
mov
int3
cmpsl
push
in
add
std
sbb
inc
inc
repz
cmp
mov
daa
xor
jnp
add
inc
bound
and
pop
aas
fbstp
cld
add
inc
cmpsb
movl
leave
lret
pop
das
cmp
mov
fisttps
lret
dec
mov
mov
push
xchg
mov
stos
mov
popa
add
mov
repnz
push
sbb
add
mov
movsl
inc
std
adc
cmpsb
pop
and
mov
shlb
mov
hlt
aas
add
push
push
mov
adc
xor
daa
push
xchg
pushf
inc
nop
outsb
xlat
cld
dec
lret
sub
pop
enter
sbb
jge
data16
call
fdivs
pop
cwtl
ret
pop
push
pop
push
pop
jae
add
adc
ljmp
or
xrelease
outsl
nop
and
out
insl
les
mov
and
sub
in
and
pop
inc
leave
inc
jmp
push
xchg
scas
pop
mov
adc
cmpsb
repnz
pop
rcrl
sub
add
pushf
lahf
outsl
adc
add
pop
jmp
xor
leave
jle
sarl
add
imul
cmc
cmp
xorl
xor
xor
adc
adc
pop
pop
or
mov
push
gs
cmpsb
shr
and
fldl
inc
daa
ljmp
xchg
addl
fstpt
test
sbb
pop
cmp
jle
test
adc
jno
push
sbb
inc
add
leave
aaa
mov
in
ja
xor
mov
jg
dec
aaa
mov
in
call
lret
add
mov
and
cmp
xchg
xchg
dec
pop
or
js
xchg
aad
pop
push
mov
iret
or
fdivrp
shrb
push
adc
insl
xor
cwtl
cmp
dec
sbb
jbe
pop
jb
loope
insl
aaa
inc
fucomip
mov
rcrl
mov
dec
call
push
xchg
jno
cmpsl
mov
add
addb
mov
and
addr16
pop
cmp
push
dec
adc
xchg
pop
and
ret
and
mov
ss
sahf
push
mov
dec
fwait
data16
pop
push
xchg
dec
xor
inc
dec
repz
cmpsb
or
insl
in
lds
shll
push
add
in
flds
popf
add
hlt
pop
mov
xchg
adc
push
mov
in
jbe
xor
inc
mov
insl
pop
ret
jo
lret
mov
jae
xor
sbb
stos
dec
jne
iret
add
inc
rcrl
aad
pushf
pop
xor
jns
int3
lds
push
inc
aaa
jmp
ss
pusha
sub
pushf
and
inc
in
sub
fdivl
mov
loopne
sub
ficoml
sbb
enter
inc
mov
sar
lea
loop
fs
scas
xchg
sub
sar
fwait
push
dec
scas
sbb
hlt
loope
aas
aam
jb
jp
sbb
push
pop
mov
dec
dec
mov
pop
mov
cmp
ja
adc
xchg
mov
jae
jl
adc
out
fimuls
pop
es
pushf
jbe
mov
lret
lret
sbb
pusha
pop
or
jbe
sti
pop
cmpsb
mov
jnp
shlb
jmp
or
mov
shrb
xor
push
testb
lods
mov
ss
cmp
sarb
jecxz
push
jne
popa
gs
sbb
mov
sbb
out
push
testl
fimull
xorl
cmp
jecxz
popf
in
das
sbb
pop
lret
imul
adc
shll
push
sahf
mov
push
adc
mov
adc
jmp
sbb
dec
dec
rcll
call
adc
leave
test
data16
sub
jne
mov
push
pop
mov
in
pop
bound
push
xor
cmpsb
sahf
cmc
fcoms
cmp
push
pop
clc
aaa
jbe
lea
enter
daa
cmc
pop
inc
nop
mov
jbe
adc
mov
dec
mov
cmp
push
and
pop
lods
mov
rclb
dec
and
mov
jmp
icebp
das
popf
mov
pop
and
pop
mov
daa
xchg
dec
mov
add
addl
adc
dec
inc
jnp
scas
lods
add
fsubp
outsb
sub
shlb
mov
stc
aaa
shrb
push
or
jno
cmpl
or
mov
cmp
mov
sub
inc
lret
pop
fidivl
fadds
dec
shrl
clc
dec
sbb
lahf
mov
fwait
pop
or
in
inc
jl
outsl
stos
cmp
xchg
or
mov
xor
imul
jne
inc
test
mov
inc
cmp
jns
xchg
sarb
jmp
pushf
xor
insl
mov
sub
inc
pop
dec
lods
cmp
xlat
cmc
xor
pop
jb
pop
dec
mov
dec
test
call
rcll
cli
jmp
mul
jle
out
mov
popa
mov
lret
je
sub
out
sbb
in
aad
cmp
inc
add
and
test
in
or
sbb
push
pop
cwtl
ljmp
decl
add
out
into
jnp
inc
cmp
loop
mov
cli
js
jns
int3
fstpl
xchg
out
es
jle
dec
sub
jle
and
outsl
xchg
rcl
cmpsl
addr16
adc
pop
insb
xchg
ret
clc
pop
rorb
out
and
popf
enter
add
mov
inc
in
xor
or
lretw
test
mov
in
loop
jnp
adc
outsb
mov
iret
imul
dec
xor
shlb
jmp
movsb
mov
xchg
adc
test
add
cmp
aas
test
xchg
lret
pop
adc
or
fildll
jne
ja
repz
mov
mov
out
dec
gs
dec
mov
aam
sbb
sub
aad
cltd
inc
movsl
enter
sbb
mov
ss
ljmp
popf
js
ja
xor
push
bound
mov
test
ret
popf
jno
sbb
jb
das
pop
gs
test
cwtl
insb
jmp
fidivl
inc
aad
cmpsl
pop
inc
and
ja
outsb
jbe
std
inc
cmpsl
mov
dec
sbb
daa
scas
fdivr
add
dec
dec
cld
jnp
imul
and
pop
ja
repnz
hlt
sbb
add
push
test
mov
int
test
stos
pop
mov
add
aam
and
inc
jo
sbb
jmp
popf
je
roll
aam
cmp
mov
leave
rclb
xchg
popf
test
add
int3
testl
insb
outsb
push
jmp
ja
repnz
pop
push
pop
dec
gs
insb
repnz
jae
std
lret
cmpsl
fistpll
cs
lret
loop
es
shlb
insb
pop
lds
xchg
mov
iret
call
repz
ss
lock
ss
loope
mov
push
subl
scas
or
shll
clc
push
mov
aad
les
and
add
jae
fidivs
or
fwait
xor
mov
lock
pusha
les
push
push
dec
mov
xchg
cmp
mov
inc
es
aad
jne
popa
je
ret
xchg
mov
mov
xchg
pop
rol
pop
adc
xor
mov
scas
out
cmp
mov
ss
lret
dec
xchg
or
xchg
cld
mov
push
sub
loopne
ficomps
push
movsl
cmp
push
lock
outsl
mov
mov
movb
add
das
or
jo
lods
jmp
jge
sub
push
lret
cmp
jne
push
push
stos
in
sbb
dec
in
adc
mov
mov
inc
mov
push
call
xor
aam
xor
push
sbbl
nop
adc
cs
pusha
je
mov
addr16
cmpb
fnstenv
cmpsb
push
clc
sub
das
push
xor
out
inc
rcll
and
mov
sbb
xchg
push
or
nop
xor
ret
xor
mov
test
cmp
and
fcmove
outsl
or
daa
add
es
ja
inc
mov
mov
outsl
push
jmp
inc
mov
push
mov
daa
fmull
sub
pop
cmp
dec
add
cmp
push
test
and
test
stos
xor
sti
mov
xor
jns
cld
ja
or
adc
nop
stos
jl
lcall
test
mov
data16
inc
mov
clc
sub
cld
enter
xor
aas
mov
sbb
test
mulb
cmp
mov
lds
sbb
or
movsb
fstpl
imul
or
jne
sarl
and
mov
mov
imul
mov
sbb
popa
xlat
adc
hlt
shlb
mov
push
in
push
push
aam
adc
in
xchg
jle
mov
or
dec
or
mov
pop
jo
cli
adc
adc
out
add
iret
push
mov
push
sub
lds
insl
into
add
sbb
xchg
sub
cmp
movsb
test
addr16
mov
inc
sti
push
mov
sbb
pop
add
adc
push
out
out
pop
xchg
test
or
js
in
xchg
movsb
sub
sbb
ss
pushf
rorl
fistl
nop
mov
pop
and
js
gs
adc
addb
or
cld
xor
test
jbe
les
imulb
cli
xchg
cwtl
int3
jns
cwtl
into
push
pop
push
enter
outsl
aaa
call
outsl
pop
ret
in
mov
bnd
negb
fidivs
ss
aas
jno
cmp
cwtl
pop
pop
cltd
sbb
shr
mov
mov
push
push
pop
jbe
jmp
hlt
sub
mov
xchg
in
fwait
mov
lods
mov
inc
or
xchg
insl
xor
xor
out
push
mulb
cmp
imul
js
sbb
cltd
jo
stos
pop
cmp
fdivl
imulb
inc
and
or
add
repnz
cld
pop
scas
xor
out
pop
sbb
and
hlt
popa
fwait
dec
pop
jle
jo
mov
dec
or
in
test
adc
add
xchg
add
and
inc
mov
adc
lods
xor
test
push
mov
mov
pop
push
pusha
xchg
xor
xlat
lods
cmc
push
adc
or
cmp
xor
dec
xlat
shlb
jle
pop
ret
xchg
in
and
clc
daa
loope
call
push
out
sbb
xchg
pushf
daa
mov
xor
xchg
shlb
cmp
test
mov
je
push
scas
paddw
sub
push
and
fisubs
das
out
mov
or
add
rcll
jns
sub
adc
fstl
jge
jg
jne
mov
sub
or
jle
push
mov
pusha
dec
sub
pop
test
enter
cmpsb
aad
mov
add
lods
sbb
adc
repz
and
mov
adc
and
fwait
push
pushf
push
jg
popa
push
int
in
cmp
enter
xor
adc
mov
popw
fs
pop
cmp
fs
fsubrp
inc
cmc
popa
js
scas
cmp
iret
test
dec
add
ds
aad
loopne
in
shl
lock
mov
std
mov
cmp
mov
nop
fisttpl
std
js
mov
adc
sti
and
les
inc
les
xor
bound
sub
cli
push
mov
fs
ljmp
cmpb
nop
or
sub
jb
xor
and
adc
sub
jno
cmp
js
push
popa
push
xchg
mov
insl
mov
enter
xchg
xchg
in
sbb
fstl
mov
lret
mov
pop
loopne
push
pop
fistps
xor
dec
add
aas
mov
movsb
pop
popf
cmp
loop
push
loopne
inc
jnp
inc
aas
push
add
mov
dec
jnp
sub
ds
shlb
xor
sbb
inc
sbb
std
fcoms
orl
fucomp
loop
lods
lret
ja
insb
mov
mov
mov
ja
lcall
cmp
loopne
xchg
adc
jo
pop
or
mov
loopne
pop
fdivr
cmpl
or
mov
xlat
jl
stos
std
push
shll
leave
fwait
push
mov
inc
roll
adc
sub
mov
cmp
mov
stos
movsb
push
xor
movb
xor
arpl
icebp
pop
jo
nop
mov
loopne
pop
sbb
jecxz
je
jbe
xor
push
pop
fmuls
scas
adc
mov
pop
or
scas
ss
xchg
adc
test
pusha
xorl
sub
mov
xchg
xorl
and
push
jg
xlat
sbb
imul
pop
sub
add
inc
mov
frstpm(287
pop
dec
mov
xor
mov
jae
mov
stos
add
outsb
adc
mov
sub
rclb
inc
es
enter
mov
lea
mov
cmc
dec
pop
xor
rolb
ss
dec
fldt
in
cmc
and
aam
aam
cltd
pop
pop
movsl
into
xchg
add
sub
sbb
jg
inc
int
dec
push
cs
aaa
and
aaa
push
mov
ficompl
cmpsb
mov
push
icebp
repnz
jg
pushf
pop
or
call
iret
cmc
add
rclb
into
cltd
fwait
dec
sbb
mov
sbb
nop
cli
in
roll
mov
test
or
pop
into
insb
rolb
jmp
jl
mov
and
xlat
fidivrl
add
fldcw
mov
rcrb
rcrb
inc
bound
jle
xchg
leave
loopne
negb
sbb
mov
ja
or
mov
cmp
movsl
adc
bound
adcl
je
movsl
outsb
cli
xchg
aas
repnz
jmp
inc
or
push
jle
dec
inc
push
outsl
sub
mov
addb
push
movsb
jns
notb
das
mov
mov
xchg
mov
lea
jns
addr16
gs
lret
icebp
pop
and
lret
sbb
addr16
sub
push
mov
into
stc
xchg
lcall
les
lret
adc
test
mov
mov
imul
lock
insl
scas
arpl
mov
adc
es
and
cmp
mov
xchg
rcrl
xchg
dec
mov
xor
jecxz
push
mov
add
pop
cmp
jns
mov
mov
cmp
sub
stc
loope
add
xor
and
in
dec
push
mov
sub
fstpl
mov
imul
mov
jns
int3
mov
and
addl
out
gs
add
mov
xchg
xor
push
push
icebp
mov
fwait
push
pop
int3
push
fisubrl
out
xor
loopne
outsl
push
call
add
mov
xor
and
pop
lahf
push
push
das
and
clc
or
mov
sub
push
and
repz
jns
xorb
notl
imul
adc
push
xor
es
push
or
loopne
sahf
push
dec
dec
popf
mov
jmp
aad
xchg
fs
pushf
dec
inc
fsubs
arpl
xlat
loope
mov
and
int3
and
test
orl
outsl
adc
cltd
imul
cmp
icebp
movsl
xchg
fwait
mov
cmp
icebp
dec
cmp
or
mov
movl
lcall
ret
sbb
sub
adc
push
adc
xlat
pop
or
cmp
mov
cld
shl
popf
ror
ret
stos
scas
jns
negl
sbb
std
xlat
adc
xchg
ds
addr16
repz
subl
bound
push
fiadds
test
in
sbb
add
scas
faddl
in
aam
aad
mov
pop
cmp
cmc
icebp
add
mov
scas
xlat
fsubrp
out
push
pushf
test
ret
xor
and
sbb
pop
jae
frstor
aaa
iret
fs
and
test
lods
stos
mov
mov
sub
fisubrs
add
adc
in
and
enter
movsl
pop
scas
cmpsl
test
inc
and
ds
inc
or
pop
fcomps
clc
pop
cwtl
addr16
faddl
sarl
and
cmp
repnz
dec
jno
imul
and
push
ret
or
loopne
inc
roll
rcr
push
imul
sbb
je
jcxz
outsb
add
out
loopne
in
sbb
fwait
ja
mov
movsb
sub
mov
fcmovnu
stos
pop
daa
ds
cld
mov
pop
mov
cli
mov
or
jbe
ficompl
fst
xchg
pop
fdivr
call
in
out
popf
aas
and
loop
sub
in
push
ja
pop
mov
push
push
loop
push
sti
jle
repnz
jl
je
cmp
or
pusha
lea
mov
push
test
sub
in
dec
pusha
loop
push
add
ret
int3
mov
out
arpl
insb
loopne
popa
cwtl
mov
xchg
cwtl
imul
mov
pop
pop
testb
mov
lcall
adcl
popf
in
xorb
cmp
pop
push
jecxz
pop
push
es
testl
cmpl
stc
adc
outsl
divl
sub
sbb
mov
push
xor
rclb
cld
rcrb
fmull
jecxz
jl
inc
inc
cmpb
insb
cmp
inc
fisubrl
sbb
inc
enter
test
pop
xchg
push
sbb
cs
cmp
mov
or
fmuls
inc
loope
les
test
scas
cmp
inc
xchg
mov
dec
stos
jns
push
stos
bound
mov
ja
pusha
scas
mov
loope
fnstcw
mov
mov
enter
adc
data16
pop
lods
xchg
pop
lcall
rolb
dec
in
lcall
fwait
leave
add
in
popa
lret
out
insb
jmp
xlat
fwait
psrlq
jp
loopne
sub
ss
inc
mull
sahf
mov
sahf
and
insl
jno
pop
into
xchg
or
mov
or
pusha
inc
push
pop
idivb
in
das
subb
sahf
arpl
inc
pop
adcb
jns
lods
push
mov
jmp
push
aad
mov
dec
fdivl
call
mov
xchg
sub
mov
push
adc
fs
iret
andb
cmp
mov
adc
cmpsl
popf
push
hlt
xchg
jno
sahf
out
add
imul
inc
push
pop
leave
shll
and
js
adc
ss
jae
mov
pop
mov
scas
fiaddl
lock
xor
and
mov
imul
cmp
or
hlt
mov
icebp
enter
jl
jmp
jmp
and
jmp
int
or
cmpl
imul
scas
int3
and
pop
fwait
jle
fxch
fsubs
aam
into
sub
push
jp
test
mov
shlb
mov
test
cltd
cmpl
ja
add
push
lds
das
clc
xor
jae
push
pop
das
xor
inc
mov
push
push
testl
sbb
icebp
inc
add
and
add
jle
dec
push
in
or
mov
sbb
cld
dec
and
cmp
or
icebp
mov
int
xchg
mov
fiadds
out
mov
pop
mov
push
leave
es
mov
xor
dec
pop
fnstsw
loop
adc
mov
int
add
dec
out
nop
mov
inc
jl
cmpsl
adc
sub
push
sub
mov
or
and
sbb
xchg
mov
cmpsl
push
loope
mov
push
fnstsw
flds
jne
popf
int
mov
popa
or
jo
in
cmp
outsl
jne
cwtl
lods
push
mov
sub
xchg
int
mov
out
std
sti
mov
add
fisubl
loope
test
test
lret
add
mov
in
loopne
fisubrs
mov
bound
es
dec
push
clc
lcall
nop
pop
jl
cmc
scas
subl
pop
xchg
jo
int3
int
sahf
mov
loop
sbb
cmc
push
adc
cmc
xchg
mov
xor
iret
int3
and
xor
arpl
mov
inc
add
mov
add
bound
cltd
cltd
bound
pushf
mov
addl
dec
xor
imul
jnp
xor
bound
xor
sahf
jae
sbb
sbb
cmpsl
jae
lahf
les
adc
ret
dec
adc
jbe
or
jo
push
insb
mov
jnp
pushf
mov
sbb
fmuls
cs
shrl
loop
mov
test
imul
movsb
mov
adc
sub
fbstp
pop
add
mov
fs
push
mov
jne
lret
sarb
les
adc
stc
inc
add
sti
scas
and
loope
inc
jl
dec
xchg
xchg
adc
in
adc
fcmovb
inc
pushf
xchg
mov
push
cmpsb
outsb
jmp
mov
stos
hlt
shlb
out
dec
jno
fs
inc
xchg
xchg
imul
nop
lods
jnp
pop
iret
xchg
xchg
jle
or
clc
insb
push
adc
insl
sti
push
in
mov
fisubl
push
push
cmp
lods
adc
dec
cwtl
clc
ljmp
xor
sar
shrb
adc
dec
push
popa
scas
test
inc
les
sub
pop
sub
push
inc
into
push
dec
jge
int3
lods
call
inc
gs
out
orb
out
pop
mov
sarl
sub
hlt
inc
or
flds
xor
xchg
pushl
xchg
aad
mov
mov
gs
jp
bswap
fcmovbe
insl
sub
sub
push
ret
and
lods
test
scas
cmp
arpl
cmpsl
popa
data16
nop
pop
cmpsl
out
sub
push
sbb
test
adc
sbb
iret
mov
adc
cmp
movsb
icebp
and
imul
jl
mov
int3
xor
jb
out
pop
int
dec
inc
xchg
sub
mov
jne
and
jge
jo
addr16
mov
test
mov
icebp
xchg
xchg
inc
adc
movsl
cmp
ret
sbb
aas
inc
inc
pop
xchg
movsl
push
and
clc
cmc
frstor
out
enter
aas
pop
mov
pop
push
dec
xchg
lods
add
xchg
out
push
mov
frstor
fwait
or
inc
jg
mov
mov
and
mov
and
adc
dec
pop
cs
enter
push
jge
jle
dec
jl
sub
pop
mov
out
fs
cld
divb
jbe
xor
mov
and
jae
xchg
lea
aaa
pop
cmp
add
pushf
pop
outsb
push
aam
aam
jne
aas
jg
fisubrs
xchg
xchg
dec
adc
sbb
jmp
dec
xchg
rcll
test
sbb
mov
adc
sahf
mov
add
mov
mov
sub
cmp
in
or
sub
sti
cmp
inc
pushf
sti
das
xchg
shlb
cmpsb
or
dec
stos
mov
subl
movsl
cmp
cmc
sub
sti
cmc
add
test
gs
inc
mov
cmp
pushf
add
pop
hlt
mov
cmpsl
cld
dec
arpl
cltd
fidivl
int3
jae
fisubl
jns
rcrl
movsl
mov
sbb
in
mov
sbb
mov
mov
jno
mov
push
and
shrb
cmovl
ret
pop
xchg
int
mov
mov
pop
jecxz
pop
loope
cmc
adc
pushf
or
aam
mov
add
push
add
ds
xchg
sub
stos
sahf
mov
nop
xchg
repnz
test
in
mov
mov
popa
repz
imul
xor
iret
mov
cpuid
xchg
pop
push
out
sub
stos
inc
pushf
int
leave
cmpb
jb
pop
loopne
inc
scas
mov
add
ss
insb
les
xchg
into
adc
jg
imul
mulb
aaa
fildll
pop
cmp
roll
mov
pop
xchg
sub
or
jb
push
xor
js
xor
cwtl
fwait
leave
mov
adc
mov
cmpsb
popa
xchg
jg
mov
stc
cmp
xor
push
and
lea
pop
ds
push
or
sub
das
pop
jb
mov
add
pop
lahf
out
jb
cli
sbb
repnz
mov
les
xor
rorb
test
pop
dec
sub
mov
in
adc
aas
lods
push
or
push
and
xchg
lcall
inc
test
and
pop
pop
sbb
outsb
iret
outsl
lds
and
mov
in
push
addr16
mov
popl
adc
int3
dec
imul
dec
xor
add
mov
or
push
jp
xchg
mov
adc
testl
int
and
xchg
fildl
ret
daa
dec
lea
inc
fmul
adc
sbb
enter
cmp
jmp
cld
sti
xor
lahf
or
mov
push
mov
push
cmp
xor
int3
fwait
jp
and
sbb
sahf
lahf
aas
into
pop
sbb
adc
dec
ret
xor
sbb
dec
nop
xchg
ss
popa
out
jae
sub
fistps
mov
xor
add
sub
xlat
mov
mov
es
lahf
test
movsb
xchg
icebp
jb
outsb
gs
mov
daa
lock
paddusw
mov
ret
stc
scas
test
in
je
and
lods
sub
adc
jb
mov
jo
insl
sub
jno
jae
mov
aaa
cmp
cs
test
or
sarb
or
test
enter
mov
js
test
dec
decb
pop
inc
and
inc
sbb
dec
adcl
mov
push
push
mov
repnz
popf
pop
push
repz
xor
mov
dec
mov
push
xchg
sub
dec
inc
repz
and
add
cmpl
push
out
dec
filds
enter
fucomi
xchg
inc
jbe
dec
in
adc
pop
jns
and
ja
pop
and
outsl
mov
iret
dec
jmp
fisubrl
sahf
xorb
insl
fdivs
jnp
stos
out
add
stos
icebp
fs
scas
jb
in
inc
scas
mov
jns
adc
inc
in
xchg
jns
xchg
iret
pushf
movzbl
andb
iret
sbb
push
int3
sahf
out
mov
or
or
shll
ja
into
xchg
lcall
mov
fs
cmp
enter
ljmp
inc
std
and
push
out
lods
adc
rorl
and
test
fistpl
jb
mov
popa
pop
rorb
add
outsb
inc
jl
cwtl
and
mov
sbb
fildl
add
add
jge
or
in
arpl
mov
rcrl
in
adc
stc
push
jne
mov
pop
sahf
lret
out
pop
or
cmp
imul
cmp
jle
arpl
xchg
mov
add
enter
insb
mov
lds
pop
out
cmp
repz
sub
ljmp
sbb
fadds
push
xchg
pusha
xor
jbe
popa
jle
mov
mov
push
cld
andb
jns
mov
out
fmul
dec
xlat
repz
cmp
cmc
clc
andb
jbe
sbb
dec
xchg
popa
dec
xchg
sbb
mov
arpl
mov
outsb
pmaxsw
push
fsubs
in
jg
mov
ret
les
les
jo
sti
aam
out
out
pop
scas
pushf
mov
xchg
cmpsb
jne
xor
dec
sbb
add
jo
mov
add
mov
add
xchg
scas
sub
aad
jge
incl
cmp
cld
cmp
arpl
lcall
add
push
int3
mul
fistps
mov
into
lahf
lea
sub
stc
pop
add
add
mov
test
rcrl
jl
mov
sahf
mov
stos
sbb
pop
andb
arpl
js
push
sbb
es
add
pop
jmp
mov
daa
pop
popa
pop
aad
fs
mov
xchg
inc
lock
int
sbb
lods
inc
das
pop
movb
repz
ror
dec
inc
push
pushf
xchg
and
loope
cmp
ret
movsb
sahf
stc
inc
push
hlt
int3
mov
pushf
je
push
xchg
popa
xchg
fcmovu
and
aam
test
adcb
jno
or
xlat
mov
popf
popl
mov
lret
test
or
adc
sahf
adc
icebp
xor
call
fsubl
mov
ja
dec
jecxz
in
scas
inc
sbb
insl
outsb
rcrb
xlat
mov
cmc
push
fisttpl
mov
mov
jg
std
inc
and
add
test
mov
les
push
pushf
fidivrl
push
ret
dec
loop
loope
cltd
mov
lahf
dec
push
aad
push
sub
scas
push
into
xchg
aad
jg
rcll
inc
stc
aas
mov
mov
in
jp
and
in
mov
mov
cmp
sub
jge
mov
repz
in
jbe
mov
pop
lods
scas
outsl
push
arpl
push
mov
adc
in
outsb
cmc
sub
fcomi
cs
inc
pop
cmp
sar
inc
lock
xchg
movsl
lret
daa
xchg
fsts
cmp
ja
scas
lcall
popfw
or
sbb
inc
add
jmp
sti
push
lods
lret
dec
hlt
stc
add
xchg
inc
divb
call
jns
and
xchg
pop
sub
jg
aam
xor
les
lods
mov
aam
inc
cmpsl
dec
xorb
std
sub
fs
ret
xchg
pop
xor
ret
xchg
jmp
andl
add
mov
jp
xchg
addr16
xor
lea
cli
xchg
push
xlat
mov
cmp
push
and
mov
mov
fisubrl
leave
sub
andb
dec
add
pop
insl
lods
fstps
insb
xchg
cli
out
dec
xchg
adc
sbb
xchg
popa
or
fstpl
cmp
aaa
cwtl
mov
xchg
ret
rolb
leave
add
cli
pop
mov
pop
nop
jg
dec
lock
dec
pop
jnp
sbb
sbb
shlb
lret
xchg
aad
in
or
push
push
js
cmp
jle
add
popa
mov
and
xor
inc
lods
push
push
nop
cwtl
das
lock
cmp
pop
inc
pop
mov
cmovae
push
outsb
repz
ficomps
pop
xchg
iret
add
jnp
clc
repz
add
stos
ret
sti
dec
mov
inc
fsubl
nop
hlt
mov
xlat
int3
sbb
mov
shrb
jge
fxam
and
cltd
lret
in
jnp
imul
js
cmp
sbb
lcall
xor
jnp
scas
out
and
mov
or
out
push
and
inc
orb
push
pusha
rorl
or
sbb
nop
out
jmp
mov
daa
jge
orl
shr
loope
loope
cmpsl
das
insl
mov
pop
mov
cmp
fisttpll
sbb
mov
mov
daa
decb
dec
cmp
js
mov
test
push
mov
mov
mov
test
leave
addl
cmp
fisubl
lock
adc
aad
xchg
xor
jb
aaa
test
test
test
sahf
push
pop
std
ficoms
out
hlt
call
pop
es
inc
test
daa
mov
mov
dec
adc
jae
push
pop
xchg
dec
cld
subl
xchg
aad
stos
cmpsl
mov
sbb
out
into
add
fadds
rclb
xlat
sarb
jno
cmp
xor
inc
jl
add
push
in
data16
dec
imul
aam
hlt
sbb
pop
repnz
ret
xchg
es
push
push
fdivl
add
pop
iret
loop
pop
xchg
or
int3
pop
add
jle
xchg
sbb
aad
stos
jle
stos
cmp
xchg
dec
dec
iret
mov
sbb
dec
sbbb
mov
sub
and
mov
push
mov
call
orb
repz
mov
push
push
sbb
sub
jnp
or
in
dec
lret
adc
sub
mov
ret
xchg
xchg
rcr
xor
insl
inc
fisubrl
or
lcall
into
jl
mov
mov
mov
mov
ds
lock
out
popa
inc
sbb
mov
lea
sbb
loop
push
dec
mov
out
mov
mov
cmp
pop
arpl
cltd
iret
je
mov
mov
and
stos
bound
pop
xlat
pop
and
mov
pop
add
leave
pop
std
dec
ljmp
add
adc
jg
test
sahf
mov
mov
pusha
cmp
dec
and
adc
rcl
xlat
pop
or
pop
out
addl
adc
repnz
cmp
lods
gs
jb
adc
mov
fsubrl
and
mov
test
sar
jmp
xchg
fmulp
inc
movsl
xchg
mov
cltd
jp
inc
lahf
int
ljmp
insb
and
xchg
lret
in
sbb
push
aam
cltd
fwait
jp
jne
adc
icebp
cltd
dec
jbe
cmpsl
jl
xor
mov
lock
in
jp
mov
loope
cmpsb
mov
mov
xchg
pop
enter
idivb
cmpsl
loop
fs
and
mov
xor
jne
call
in
xchg
aam
pushl
in
jl
int3
sub
or
mov
mov
cli
test
fbld
or
shufps
mov
cld
std
into
push
iret
inc
lods
xor
and
add
in
lods
or
loop
pop
push
xor
inc
push
push
adc
push
pop
dec
movsl
jmp
sbb
jge
inc
inc
jecxz
pop
outsl
xor
jecxz
xchg
xchg
negb
and
js
push
push
mov
stos
xorl
dec
mov
lahf
push
sbb
mov
and
mov
xlat
push
jne
xor
sub
cmpsb
mov
push
cmp
daa
sbb
add
lcall
mov
insl
and
jl
or
testl
enter
or
sub
lret
ret
lret
cmovl
sub
scas
mov
jne
xchg
popa
sub
enter
popf
mov
scas
dec
and
add
mov
std
stos
fsubl
xchg
mov
es
cmp
dec
push
xchg
mov
inc
mov
sub
mov
dec
mov
or
pop
or
push
mov
out
cmp
mov
out
popf
call
xchg
inc
dec
lret
stc
jb
push
popa
or
mov
in
lods
shll
mov
or
aam
xorb
sub
stc
pop
dec
mov
hlt
inc
cmp
out
data16
inc
das
cltd
dec
pop
int3
stc
fimull
jae
add
ja
pop
scas
jo
mov
pop
das
fstpt
dec
or
sbbl
fmull
pop
and
mov
or
lret
push
mov
jnp
stc
fwait
sbb
xchg
mov
inc
jl
mov
sarb
lods
mov
inc
fisubrl
mov
push
adc
mov
imul
insb
orb
lods
pop
jge
adc
mov
in
arpl
outsl
lcall
lret
mov
and
mov
pop
sub
ja,pt
xchg
lds
repz
bound
sbb
sbb
xchg
sbb
adc
das
movsb
add
jae
stos
loope
cmp
xor
ret
lds
lcall
test
add
ret
pop
ficomps
ret
fidivrs
pop
cmpsb
std
popf
imul
lds
jne
das
xchg
insb
mov
mov
shlb
out
sub
xor
loope
sbb
dec
pop
sub
cli
popf
add
or
cwtl
mov
test
testb
mov
and
test
in
mov
lcall
push
mov
cld
lods
pop
addr16
mov
xor
and
repnz
or
mov
mov
adc
ja
roll
sub
dec
adcl
in
int3
sbbb
sti
dec
insl
sub
and
cmp
xor
push
lds
mov
cmp
in
sbb
cmp
xor
lcall
add
sub
fildl
cld
fstl
les
les
das
jle
imulb
adc
dec
dec
std
imul
and
arpl
xor
cltd
in
cmp
aad
mov
js
xchg
lods
lretw
outsl
inc
push
outsb
mov
stos
addr16
les
push
pop
push
mov
mov
dec
adc
test
stos
inc
mov
out
jnp
lret
mov
add
mov
enter
xor
fmuls
gs
leave
test
push
imul
cmp
push
sbb
ret
push
mov
sub
cmpsl
and
js
jp
fsubs
push
lret
test
sbb
jae
or
inc
jl
cmc
lods
jne
push
pushf
and
pop
lds
sub
and
frstor
mov
mov
aas
fsubrl
popf
cld
adc
sub
das
xchg
dec
cmp
movsb
inc
testl
jp
int3
mov
cmp
nop
lods
jne
rcrl
mov
push
leave
pusha
cmp
dec
dec
lcall
push
jecxz
or
xchg
ret
ror
sbb
out
pop
sbb
mov
shll
pop
cmpsb
setp
jae
in
call
lods
pop
jns
add
or
sub
cmp
stos
je
or
pop
sub
jo
adc
push
lods
adc
dec
xchg
add
dec
sub
cvtdq2ps
mov
add
scas
mov
jo
notb
cmp
hlt
pop
adc
sbb
insl
mov
js
mov
in
mov
mov
je
fcompl
lea
sub
rolb
adc
repz
leave
cmc
dec
rclb
and
decl
xchg
out
ret
sub
add
lcall
scas
ret
adcb
cmpl
arpl
dec
lret
sub
push
lea
imul
arpl
in
inc
mov
nop
and
dec
adc
push
adc
dec
push
hlt
jno
hlt
jmp
ret
pushf
ret
mov
shll
adc
clc
insl
jnp
mov
sti
pop
into
sbb
ret
aas
pop
lds
pop
mov
pop
and
cmpsb
iret
dec
mov
xor
in
pop
gs
rcrb
outsb
jb
nop
cmp
lea
mov
mul
in
insl
mov
pop
ja
sti
inc
aas
xor
jno
insl
dec
ficompl
xchg
mov
hlt
das
into
mov
popf
fucomp
lahf
sbb
fbld
repz
roll
iret
test
aas
mov
xchg
cli
ja
rorb
adc
jg
int3
jne
xor
popa
popa
aaa
or
outsl
mov
add
out
pop
scas
push
ljmp
in
mov
repnz
popa
push
adc
lds
sub
adc
and
xchg
movsb
mov
inc
pop
insb
mov
cmp
and
sub
lods
sti
insb
leave
test
xchg
cmpsb
lret
mov
dec
mov
sub
pop
cs
mov
push
sbb
ja
in
inc
mov
lea
jnp
inc
pop
jb
inc
scas
int3
ss
roll
inc
scas
popf
jmp
and
ficomps
shlb
mov
and
subb
dec
shrb
jge
jnp
and
mov
stos
stc
cmp
scas
lods
testl
ficompl
or
sbb
shlb
xor
xlat
add
std
in
pop
inc
test
mov
ss
mov
jmp
pop
sbb
mov
mov
adc
ret
xchg
mov
fidivrs
inc
rol
sub
dec
repnz
shrb
add
mov
mov
aam
movsb
flds
sar
je
xchg
jge
mov
ffree
jmp
test
mov
jp
fisttpl
lret
dec
pop
mov
cwtl
sbb
cmp
dec
add
aad
push
adc
push
sti
sti
out
ret
repz
jae
jl
stos
jp
dec
outsb
cld
mov
or
push
sub
lret
jle
idivb
fwait
loop
adc
test
dec
fstpl
add
cmp
aad
add
or
dec
iret
push
and
repz
pop
adc
ja
xchg
jl
mov
inc
leave
mov
xor
mov
movsb
movsb
sub
mov
les
repz
loop
outsb
movsl
xchg
lret
shlb
scas
xchg
rcpps
lret
scas
cmp
jbe
xchg
pop
push
loope
sbb
xchg
js
pop
leave
lahf
clc
push
add
movsb
cmp
mov
xor
jg
sub
xchg
cmc
inc
mov
stos
data16
out
pop
cmp
push
pop
iret
jb
mov
ficoms
out
test
xor
lret
xor
stc
repnz
rol
hlt
sarl
jbe
imulb
lock
adc
xchg
bound
mov
out
icebp
lcall
aad
out
and
inc
imul
iret
xor
stos
fs
inc
cmp
insl
out
int
imul
cltd
testb
mov
push
lahf
push
push
cltd
repz
mov
out
ljmp
leave
mov
xchg
movsb
dec
or
je
fadd
adc
sahf
pushf
adc
fwait
cmp
inc
fldl
lahf
ss
mov
out
popa
pop
xorb
pop
mov
js
sbb
ss
imul
and
mov
jge
fadd
repnz
sarl
adc
mov
push
mov
testl
imul
out
ds
lret
subl
insb
and
std
iret
pop
shr
push
sbb
or
inc
xor
mov
pop
jmp
scas
xchg
xlat
ret
loope
flds
push
lea
fdiv
push
jl
bound
and
jno
lds
out
mov
dec
fildll
inc
rcll
pushf
shr
and
sahf
xchg
lods
les
add
mov
scas
in
mov
push
mov
jns
shll
push
mov
mov
aaa
mov
mov
sti
jnp
movsl
cmpsl
sbb
cmp
mov
pop
jbe
hlt
ja
cmc
sub
mov
mov
sbb
push
ret
jl
pop
push
adc
fsubp
xor
sbb
out
in
adc
push
dec
xchg
lds
xor
mov
bnd
insb
je
xor
sub
out
xor
add
mov
mov
cltd
sbb
rorb
int3
pop
or
je
fiadds
lock
mov
inc
das
fcmovnu
cmpsb
adc
mov
loop
and
lods
cmp
push
sub
sti
je
jp
sub
fdivl
arpl
jo
pop
or
jo
scas
fldcw
cld
das
jns
jnp
xor
inc
xchg
scas
xchg
and
mov
dec
aad
jg
dec
daa
pop
aad
xchg
dec
xchg
cmp
std
mov
ds
mov
fidivrl
fcompl
mov
loop
mov
add
and
push
out
jnp
pop
pop
push
outsb
xchg
pop
imul
test
push
aaa
cwtl
rclb
xchg
inc
enter
in
push
pop
mov
pop
adc
jbe
sub
cmp
inc
mov
cmp
in
mov
sahf
mov
inc
loop
xchg
push
add
pop
mov
cmp
push
dec
lret
mov
or
fs
lcall
pop
xchg
or
or
call
jbe
add
pop
cltd
mov
mov
inc
cs
les
repz
iret
stc
xor
xor
pop
push
xchg
lret
pop
adc
pop
movsb
test
or
pop
mov
cmp
or
dec
mov
lahf
push
push
loop
add
sub
or
sbbb
xlat
cmpsb
jnp
movb
lds
sub
adc
negl
sub
daa
or
and
or
cli
addr16
loopne
jne
and
add
dec
or
fmull
add
jae
lods
or
adc
int3
mov
or
mov
adc
push
ret
retw
push
adc
jo
out
push
lock
xchg
xor
push
add
inc
xchg
jge
mov
or
xor
fiaddl
sbb
outsl
sbb
ljmp
cmpsl
arpl
enter
fs
repnz
ret
repnz
sahf
ja
mov
push
mov
test
out
loopne
add
loop
movsb
cmpsl
das
popf
das
jmp
cmc
mov
sbb
mov
sub
test
xchg
xchg
adc
stos
mov
mov
out
je
sbb
mov
dec
loope
test
or
pop
mov
inc
mov
cwtl
pop
into
stos
mov
stos
stos
lcall
ret
addr16
cli
lock
xchg
sub
cmp
inc
adcl
dec
sbb
shr
sbb
pop
imul
std
mov
mov
jmp
xor
lods
rorb
fmuls
test
pusha
adc
dec
andb
add
lds
pop
je
insl
jmp
mov
cmp
pop
push
push
ret
adc
inc
pop
dec
jecxz
mov
lods
mov
jae
cmc
ss
mov
jns
lahf
mov
and
dec
xor
mov
fistps
into
popf
inc
mov
frstor
push
push
mov
call
gs
call
add
test
xchg
pop
loop
push
dec
aas
lcall
int
lea
addr16
mov
mov
into
nop
jmp
stos
mov
es
dec
sti
lret
or
dec
cmp
fsubrs
or
cmpsb
aam
ficomps
inc
loop
mov
sbb
jns
jecxz
or
mov
jo
hlt
push
push
push
and
mov
rorb
arpl
mov
mov
cmp
pop
push
xchg
sbb
mov
aad
inc
dec
push
je
pop
fldcw
or
cs
out
aam
ret
stc
push
mov
and
add
fwait
push
and
and
dec
mov
lret
ljmp
out
cmp
mov
lret
fidivl
es
push
jecxz
adc
dec
add
inc
mov
or
fs
mov
push
mov
icebp
cmpsl
or
fsubs
roll
xchg
test
sub
jae
jge
std
popa
sbb
fiadds
jmp
unpckhps
ret
stc
mov
sub
xor
aam
pop
pop
stos
dec
iret
stos
pop
inc
cld
stos
push
clc
inc
inc
jp
dec
ret
lea
arpl
lcall
dec
in
inc
ss
pop
and
xchg
push
mov
mov
push
or
dec
add
or
movsb
mov
dec
xor
mov
mov
mov
test
pop
or
pop
into
mov
out
aaa
repz
adc
scas
mov
mov
loopne
shlb
or
mov
rolb
cmp
pop
sub
cs
movsl
mov
and
pop
js
lods
clc
xlat
mov
popa
out
and
shlb
test
imul
xor
inc
sbb
pop
mov
push
fcomps
push
inc
mov
mov
cmpsl
sbb
lds
xchg
je
pop
and
gs
clc
cmpsl
jp
mul
mov
adc
cmpsl
add
jecxz
adc
push
sbb
imul
push
mov
ret
or
test
fwait
gs
or
outsl
mov
dec
lds
or
sahf
pushf
dec
hlt
cmp
test
mov
cli
inc
jp
sub
mov
out
pushf
rcll
and
into
cli
xchg
imulb
and
xor
cmpsl
push
lret
dec
sub
and
jb
ljmp
movsb
das
insb
xchg
rcrb
int3
mov
pop
dec
in
push
cmp
pop
sbb
and
in
adc
push
adc
push
outsl
lock
and
lds
jl
mov
cmc
cmp
or
sub
out
jg
lahf
xor
testl
jg
cmp
xlat
sbb
pop
xor
or
and
out
test
mov
dec
push
les
dec
ds
ret
dec
test
js
sti
fiaddl
subb
insb
in
lods
mov
xchg
outsl
imul
int
pop
and
out
jecxz
das
insl
mov
out
fs
xor
je
aas
inc
js
push
out
push
mov
cmp
jmp
sub
mov
icebp
or
movsb
sub
dec
outsb
cmp
mov
add
sbb
or
dec
mov
loopne
inc
push
xchg
lock
dec
jge
adc
push
test
testl
jb
jmp
inc
lds
or
add
dec
adc
flds
adc
vpsubw
sub
push
movsl
shrl
ret
inc
pop
sbb
lret
ficompl
arpl
pop
lods
test
jge,pn
fdivs
inc
lahf
xchg
shlb
sti
fisubrl
sub
lea
outsl
es
sbb
dec
es
imul
test
mov
daa
jns
and
push
xchg
add
push
jns
arpl
imul
mov
sbb
pop
scas
shll
lret
cmp
gs
adc
mov
fwait
pop
jmp
inc
cs
or
cmc
mov
mov
lahf
arpl
push
xchg
xchg
fwait
les
dec
js
sub
mov
inc
mov
dec
cli
gs
pop
pop
push
insl
movsl
data16
cld
test
fidivs
cmpsb
sbb
and
les
dec
rclb
mov
xchg
andb
repnz
pop
push
cwtl
xor
test
add
aam
lret
cmp
movsb
addb
pop
scas
or
cmc
scas
cmp
adc
xor
sbb
pop
nop
shrl
enter
dec
in
xchg
cmp
inc
inc
sbb
sub
add
mov
rclb
pop
sbb
bnd
push
fldl
stos
xchg
cmp
cmp
insl
push
rcrl
mov
xchg
mov
sbb
mov
sub
aad
out
iret
jp
and
jge
push
insl
inc
mov
outsb
cmpl
hlt
mov
mov
adc
lret
cmp
push
xor
cwtl
xlat
test
aaa
mov
lods
push
test
pop
mov
sub
jge
xlat
rcrl
adcb
dec
jnp
mov
add
jmp
xchg
pop
test
push
jle
xchg
pop
push
dec
daa
mov
add
sub
mov
repz
xor
xchg
cmp
mov
fdivrs
or
push
push
jno
add
push
rcrl
aas
enter
inc
add
mov
and
pop
cmp
and
cwtl
dec
arpl
dec
mov
and
std
pop
jnp
call
and
xor
orl
outsb
ljmp
pop
push
mov
mov
push
xchg
ds
adc
mov
dec
xchg
dec
mov
inc
dec
xor
out
add
mov
or
imul
mov
jl
shlb
pop
cmp
in
and
xchg
mov
xor
lret
imul
dec
cmp
sub
imul
shll
inc
and
imul
std
stc
out
push
mov
xchg
scas
cmpsb
xchg
stc
js
imul
inc
cmp
xchg
xor
mov
sub
out
mov
and
mov
rcrl
inc
or
mov
mov
inc
lcall
outsb
xor
pop
outsb
imul
rep
adc
adc
test
mov
mov
repz
push
mov
movl
sub
insb
out
push
pop
mov
in
loopne
movsb
adc
xor
negl
pusha
sub
mov
call
inc
outsb
in
push
inc
cld
push
sbb
push
jae
lods
xor
push
lock
cli
mov
lahf
enter
sbb
hlt
inc
pop
jns
sbb
mov
lahf
mov
inc
dec
pop
lahf
add
popa
imul
mov
mov
adc
aad
imul
insb
loop
and
mov
push
pop
in
into
adc
push
ror
popf
loop
mov
iret
out
movsl
inc
sub
ficoms
mov
sub
push
aam
cmpsb
inc
lea
push
jns
add
adcb
stos
dec
stc
mov
ljmp
outsb
inc
or
adc
xchg
sub
jecxz
add
cmp
scas
lods
add
sub
pop
xchg
scas
xchg
nop
cmp
mov
aas
ret
data16
dec
xchg
fsubs
jb
sub
ret
add
or
dec
inc
les
mov
mov
and
xor
add
ja
mov
inc
movsb
jno
fwait
dec
and
lea
inc
insl
dec
inc
lret
pop
in
outsb
mov
dec
nop
push
push
fcompl
popa
cmp
hlt
cmp
icebp
rorb
push
insl
mov
lret
inc
jle
jno
sub
stos
loopne
popa
cmp
jo
je
add
and
rcll
pop
daa
or
mov
push
out
push
pop
shr
sbb
push
sbb
test
mov
loop
push
jp
ret
lds
xchg
mov
push
lock
stc
mov
in
mov
add
lods
mov
jbe
cmp
push
dec
sub
int3
ficoms
fstps
insb
cwtl
or
mov
std
mov
mov
xor
imul
jl
jp
mov
mov
addr16
jecxz
int
out
push
cld
aas
mov
and
pop
inc
pusha
loope
je
xchg
mov
add
mov
arpl
insl
incl
loope
aas
sbb
call
add
pushf
dec
arpl
mov
lret
insb
popa
push
mov
fidivl
in
call
sub
lahf
popa
imul
jno
ds
gs
jecxz
cmp
addb
ja
mov
add
cmp
icebp
cmp
mov
popa
imul
mov
jl
mov
pop
push
xor
jp
cmpsl
mov
xchg
add
outsb
imul
divb
dec
pop
clc
mov
pop
incl
pop
scas
push
lock
or
cltd
dec
aas
or
nop
neg
cmp
shlb
mov
add
call
das
aas
arpl
fldl
int
adc
pop
adcl
cmp
xchg
hlt
inc
test
or
and
data16
out
mov
in
xor
cwtl
jg
xor
push
std
faddl
xchg
cli
fmuls
data16
mov
xchg
leave
pop
icebp
add
fcompl
aam
fneni(8087
jle
aad
mov
leave
fwait
xchg
xchg
repnz
orb
outsb
les
jl
das
test
jmp
popa
sbb
xchg
repnz
stos
jns
popa
arpl
or
sbb
jge
or
test
aad
inc
or
push
and
lret
adc
lock
pop
jl
adc
or
sub
lretw
sbb
inc
cmp
push
out
andl
rol
sub
jmp
ja
not
fcmovu
sub
mov
imul
adc
lea
xchg
test
jae
inc
movsl
les
cmp
cmpl
ret
pop
popf
sub
scas
xor
mov
cltd
dec
cli
dec
imul
or
or
pop
sbb
inc
mov
pop
jge
mov
dec
jne
lods
adc
aad
or
loopne
jg
ss
push
jmp
inc
pop
rcr
sbb
fadds
outsl
sbb
outsb
pop
or
fcomps
jecxz
sbb
nop
or
sub
pop
in
rsm
rcrl
test
pop
xor
mov
xchg
mov
push
xor
jne
ja
push
jo
ret
cld
loop
sarb
ffreep
jnp
xor
shrl
or
sti
mov
mov
adc
jno
xor
mov
and
jne
dec
push
mov
leave
adc
lahf
or
or
test
dec
jb
adc
mov
arpl
std
mov
mov
adc
and
sub
pop
stos
or
jmp
fiadds
jl
aas
int3
das
add
dec
mov
leave
jecxz
mov
icebp
imul
enter
nop
pushf
xchg
roll
inc
pop
in
cmp
xchg
mov
into
mov
adc
lds
ja
mov
sbb
out
and
xchg
push
mov
pop
push
gs
andb
jg
cltd
cltd
orl
pop
out
scas
cwtl
divl
daa
or
pop
xchg
push
or
push
mov
mov
xchg
hlt
dec
ror
xchg
inc
das
dec
in
jb
mov
sbb
and
movsb
lahf
arpl
or
mov
sti
xchg
cli
cmp
inc
dec
mov
xchg
cs
sbb
rorl
adc
mov
jmp
dec
push
and
push
sub
pop
lret
scas
mov
sbb
xor
jp
nop
xchg
sbb
scas
cmp
ljmp
ret
in
sti
sbb
and
cld
ficompl
imul
pushf
sarl
outsl
xchg
sub
or
xor
outsb
stc
fs
mov
ret
mov
pop
pushf
ret
loope
shrb
repnz
push
dec
adcb
or
xchg
stos
xchg
stc
fs
mov
sti
cld
lock
inc
pop
cli
shlb
inc
mov
lods
mov
insl
mov
ljmp
hlt
enter
jg
cld
dec
push
stos
cmp
push
pop
mov
or
adc
add
fildll
push
adc
pop
jmp
mov
inc
shrl
outsl
and
sti
mov
xor
pusha
or
jnp
jne
fdivrs
or
imul
xor
xor
mov
adcb
inc
negl
xchg
mov
push
push
mov
dec
std
ror
sbb
mov
push
or
lock
adc
adc
test
or
insl
insb
inc
adc
pop
mov
jmp
xchg
cmc
mov
subb
push
leave
jp
mov
add
imul
leave
ja
and
xchg
popf
jmp
xchg
imul
adc
int
sahf
add
jl
push
dec
and
scas
cmp
stos
mov
add
addr16
xor
add
xchg
jo
mov
push
scas
popa
add
mov
pop
repz
mov
push
dec
add
sbb
fimuls
inc
sbb
pop
cltd
sub
mov
push
sahf
mov
mov
cli
lods
rorb
bound
add
bound
jmp
xchg
lods
pusha
scas
imul
stos
enter
roll
call
adc
subl
lods
aam
xchg
lods
pushf
cmp
sub
pop
in
mov
pop
hlt
inc
jnp
jbe
mov
mov
sbb
push
iret
mov
jbe
jb
clc
ret
mov
repnz
cmp
mov
xchg
dec
rorl
lcall
mov
push
add
inc
and
movsb
pop
sub
mov
dec
loopne
loop
scas
pusha
push
jle
or
xor
cmp
das
push
or
cmp
mov
decl
repnz
dec
and
adc
or
push
push
dec
pushf
mov
nop
sbb
sbb
mov
sub
sar
stos
lds
je
xor
sub
fwait
loope
add
out
dec
ror
pop
insb
dec
push
in
mov
cwtl
fbstp
cmc
jle
add
std
je
imul
js
mov
push
xorb
xor
xchg
jbe
leave
mov
cmp
ss
sub
sub
xchg
mov
push
fadds
addr16
jno
aam
or
or
cli
adc
lea
ja
sbb
or
jnp
or
and
dec
movsb
dec
inc
roll
mov
xchg
or
xchg
cmpl
test
pop
jle
inc
fists
inc
add
cmp
xor
xchg
push
sub
mov
aad
fisttps
bound
clc
dec
scas
incl
jge
mov
jl
pop
fs
mov
jnp
adc
test
mov
sbb
shrl
movsb
lea
cltd
movsl
andps
ffree
jne
mov
pop
jns
mov
lods
cs
adc
ret
jge
sub
mov
push
dec
sbb
add
and
cltd
mov
push
pusha
inc
xor
push
mov
push
sahf
jp
xor
pop
popf
cs
cwtl
ljmp
pop
sub
or
bound
lahf
fcmovnu
ficompl
cltd
sbbb
in
loopne
test
int
push
ret
movsb
add
mov
mov
ja
iret
loope
sti
mov
pusha
lds
cwtl
mov
push
mov
sbb
ret
call
data16
lds
sbbb
mov
mov
cs
arpl
sbb
fcomip
and
loope
xchg
mov
es
mov
orl
xor
andb
mov
cmp
nop
pop
nop
mov
mov
cmc
sub
dec
int3
jge
jnp
add
mov
mov
xchg
pop
adcb
popf
int
xor
add
jbe
cwtl
jbe
xchg
xchg
sub
dec
cmp
sub
ja
or
mov
xor
insb
pop
jb
jno
icebp
test
dec
mov
jae
lods
cmp
stos
mov
insl
insb
add
adc
mov
cs
and
cmp
cli
daa
movsb
test
mov
cmp
ret
dec
hlt
mov
pusha
mov
push
nop
jnp
addl
gs
push
add
fsubs
rcrl
call
ja
mov
adc
mov
ss
mov
mov
repnz
push
lret
fnstcw
mov
inc
xchg
xchg
lret
push
ljmp
xchg
aad
pop
inc
adc
add
sbb
out
lods
pushf
dec
insl
enter
hlt
mov
xor
xchg
sar
repnz
sub
jns
repnz
ja
pop
shr
dec
subb
sub
xchg
jo
enter
pop
mov
inc
mov
test
inc
cli
fbld
cs
adc
imul
js
inc
movsb
mov
and
rol
cs
xchg
daa
mov
jo
out
jecxz
nop
bound
mov
fldcw
outsl
sbb
aas
xchg
cmp
xlat
stc
inc
popf
jle
pushf
arpl
add
pusha
sarb
mov
arpl
pop
mov
add
and
push
sub
or
bound
mov
fneni(8087
scas
andb
scas
mov
ficoms
pop
iret
mov
fsubs
pusha
popa
xchg
bound
jl
lods
insb
daa
lret
dec
xchg
or
cwtl
and
push
jl
rcrl
fldl
mov
popa
pushf
ret
pop
daa
lods
out
push
xorl
dec
shlb
inc
les
in
inc
leave
xchg
push
mov
stos
ds
sub
adc
inc
dec
xchg
repz
sbb
aas
jnp
dec
jmp
jno
cmc
les
jmp
adc
dec
ds
push
mov
mov
jb
imul
jmp
mov
fsubrl
mov
stos
out
fdivrp
or
lret
scas
jl
jnp
enter
jnp
rol
dec
in
stos
shlb
loope
adc
lods
pop
xor
gs
or
out
cmpl
leave
push
mov
xchg
add
mov
std
xor
dec
cmp
shll
stc
clc
jg
sbb
jge
mov
stc
cmc
mov
shll
or
ret
imull
sbb
fstpl
sbb
push
sub
fsubs
pop
insl
in
imul
and
roll
pop
mov
andl
push
ficomps
cmp
xor
pop
lods
push
gs
mov
mov
pop
jecxz
inc
push
lahf
arpl
ja
lret
into
mov
test
repz
cwtl
test
lods
pop
mov
push
in
mov
imul
add
lahf
cmp
cmc
mov
and
out
fisttpll
add
cmp
add
xchg
mov
dec
push
add
mov
sub
jg
adc
adc
push
sub
into
mov
addr16
inc
jo
test
incb
enter
aaa
mov
dec
popf
lea
jp
cltd
jae
inc
orl
mov
mov
mov
pop
cwtl
rorl
jbe
out
sti
in
adc
pop
xchg
stos
lods
test
xchg
dec
dec
js
and
insb
xchg
test
sub
push
lahf
cmp
jno
push
cli
mov
dec
stos
fs
cltd
cltd
or
add
shlb
and
lret
xor
or
adc
movl
mov
jbe
push
outsl
jne
mov
jno
sub
sub
imul
add
add
cmp
and
mov
jmp
popl
mov
xchg
scas
push
or
jnp
imull
loop
sbb
sbb
loopne
push
push
ss
fidivl
cmp
mov
lret
jmp
or
inc
inc
mov
ljmp
arpl
cmp
call
sub
scas
sahf
aam
or
lds
dec
lea
lock
add
or
add
mov
subl
outsb
lods
dec
into
mov
sti
int3
pop
dec
push
insl
loop
inc
adc
xlat
mov
mov
cmpsb
xor
dec
inc
sub
mov
jae
pop
sti
add
jmp
xor
mull
cmp
es
xchg
xorl
pop
mull
xchg
jno
cmp
cli
xchg
nop
pop
jmp
sbb
rol
pop
icebp
inc
daa
mov
xor
xor
cmp
pcmpgtb
add
pop
xchg
pop
push
jmp
int3
ljmp
aam
push
jne
pop
mov
mov
iret
loopne
or
adc
fadds
rorb
fistps
cwtl
lds
xor
mov
lahf
or
sub
lds
push
test
sahf
jb
fstpl
jg
cwtl
jl
in
xchg
ret
xchg
jge
mov
std
push
xchg
lods
sbb
push
mov
addr16
mov
ficoms
jns
xor
das
sarl
sbb
sub
push
and
inc
pop
aaa
jp
inc
xchg
mov
fsubs
cmp
jl
daa
lock
cld
fcoml
push
outsb
into
mov
cs
add
adc
inc
add
or
inc
rolb
int
mov
inc
sbb
mov
mov
pop
inc
int3
mov
mov
mov
stc
mov
sahf
xor
mov
das
loope
mov
int3
cmp
mov
je
push
mov
sub
xor
and
loope
fdivrs
push
neg
jle
das
inc
adc
sub
arpl
inc
stc
mov
cs
outsb
jl
sti
cmp
fs
mov
mov
xchg
push
gs
repz
negl
and
push
mov
pusha
das
xchg
rcrl
faddp
fdivs
push
faddl
addr16
dec
mov
ja
mov
call
dec
adc
or
jl
mov
fsubrs
aas
pop
inc
xorb
and
inc
sub
add
mov
sub
xlat
jle
xor
call
mov
or
mov
sub
scas
inc
jnp
decb
fisttps
mov
into
idiv
insb
and
sbb
popf
stc
sbb
lock
mov
sahf
test
hlt
add
scas
ret
mov
mov
popa
xor
push
out
pop
jp
mov
popa
mov
aaa
aad
and
lea
mov
int
int
jl
lret
ljmp
insb
stos
jmp
loopne
sub
cmp
jnp
xor
and
xlat
pop
cmp
shl
cmp
jecxz
and
adc
push
fidivrs
mov
mov
mov
repnz
leave
sub
in
int
outsb
lds
repz
mov
fcomps
stc
dec
leave
ja
lods
inc
mov
fstpl
rorb
mov
mov
mov
or
add
cs
or
mov
jb
sbb
fsubp
cmp
pop
lock
adc
out
cmp
cmc
bound
xchg
arpl
enter
hlt
and
mov
and
mov
or
into
or
add
jmp
ss
dec
xor
jge
andl
clc
add
cs
mov
or
mov
cltd
add
dec
adc
lods
xor
sub
pop
lcall
popf
leave
je
sub
stos
mov
repnz
adc
mov
fidivl
mov
xchg
in
dec
loop
xor
cmpsl
insb
das
adc
push
mov
sub
mov
outsb
pop
sti
dec
jle
xor
outsb
cmpsb
jle
cmp
repz
andb
insl
rcll
or
negb
mov
xor
dec
jge
dec
pop
repnz
and
mov
in
push
loope
mov
cmpsl
dec
out
leave
rolb
dec
jae
mov
aam
pop
imul
xchg
push
xchg
imul
xchg
and
movsb
stos
filds
cmp
mov
dec
push
push
inc
lock
push
shl
cmp
movsl
dec
xchg
sti
daa
dec
rcrb
daa
mov
not
in
xchg
jl
inc
xchg
lea
ljmp
xchg
pop
pop
aaa
sarl
sbb
jnp
mov
adc
roll
iret
or
pop
loopne
mov
test
testb
inc
shr
fnsave
push
in
xchg
sbb
in
ficoml
xor
out
mov
sarb
lret
ret
scas
sub
push
sti
push
inc
pop
shl
push
xor
stos
and
fisubl
imull
or
mov
and
aas
arpl
push
add
jne
dec
jg
xor
sbb
xchg
loopne
or
xor
pop
xchg
xchg
out
cmp
iret
test
jge
jo
xchg
popf
jle
mov
dec
jno
mov
fmull
adc
mov
out
jg
cli
sbb
push
and
sbb
rcll
sub
cmp
mov
pushf
pop
lcall
mov
cs
nop
push
lock
xchg
dec
rorb
fdivs
xor
subb
xor
das
daa
icebp
test
or
lods
sub
test
push
jl
mov
mov
xchg
mov
sbb
in
loop
enter
dec
lret
xchg
popf
int3
xchg
test
out
mov
adc
popa
das
or
mov
cli
or
sub
clc
jbe
loop
fldl
lock
repnz
adc
scas
and
pop
scas
hlt
mov
or
push
lret
insb
es
and
mov
jl
icebp
call
out
lds
test
fidivrs
jl
lock
ds
mov
jno
pop
adc
lds
cmpsb
frstor
das
dec
in
xchg
dec
lock
cs
cmpsl
sub
sbb
jmp
adc
dec
pop
inc
mov
adc
clc
shrb
pop
imul
mov
and
leave
cmp
sbb
cld
push
out
inc
outsb
xor
fyl2xp1
leave
jmp
ljmp
je
push
inc
jecxz
dec
sahf
and
xorl
repz
mov
dec
dec
stos
pop
dec
sub
adc
insb
dec
mov
pushf
arpl
mov
imul
xchg
out
dec
pop
gs
test
out
xchg
mov
lret
and
imul
jecxz
ja
dec
mov
push
jne
out
mov
pop
fbld
movsl
cld
xorb
ficoml
int3
fs
add
iret
test
or
aaa
inc
cli
adc
sarb
jnp
push
xchg
push
mov
mov
sub
es
mov
jbe
inc
pop
mov
or
dec
adc
push
loopne
add
pop
mov
mov
adcb
das
and
ds
or
insl
mov
aad
lock
inc
test
in
je
hlt
pop
inc
lods
lods
xor
pushf
push
daa
xor
sub
imul
fs
and
or
mov
and
pusha
out
cli
cmp
lahf
lret
jbe
jl
insb
call
movsl
jbe
xor
pop
dec
pop
into
jb
cltd
push
nop
fs
add
jns
arpl
dec
movsb
dec
xlat
xchg
xor
mov
fsubl
sub
sbb
ljmp
fisttpll
or
add
cmp
mov
and
movsb
and
sbbb
outsl
sub
into
jecxz
fwait
iret
aas
lods
jl
adc
in
dec
int3
push
and
sub
shlb
sub
test
lods
popa
add
mov
xor
xchg
movsb
jp
fisubrl
repz
in
jp
stos
faddp
pop
lods
fidivrl
jp
cmc
xchg
sbb
fldt
lret
pop
int3
mov
sub
nop
push
adc
push
out
mov
xchg
push
and
push
out
insl
xchg
inc
or
add
stc
jmp
pop
jmp
mov
push
in
test
lods
add
push
adc
icebp
cmp
sub
out
adc
and
in
aam
outsl
stc
push
shlb
insl
inc
shlb
cmp
aaa
mov
pop
in
pop
movsb
cltd
xor
adc
push
mov
stos
lret
sub
xor
xor
enter
div
or
test
dec
and
jg
cmp
bound
jle
cmpsl
cwtl
pop
jecxz
mov
insb
push
icebp
in
rcl
jbe
mov
xor
clc
jge
mov
pop
push
in
mov
test
push
repnz
test
pop
int
in
clc
scas
adc
movsl
movsl
sub
mov
xor
dec
arpl
mov
and
dec
jle
in
lock
xchg
cmpsb
inc
out
inc
fwait
sub
adc
sahf
jp
push
jg
repnz
testb
dec
data16
jb
add
sbb
and
es
mov
push
mov
mov
or
fisttps
in
out
ret
pop
outsb
mov
cmp
imul
cmp
test
andb
cmpsb
int3
xchg
fcoml
mov
int3
inc
adc
ret
cli
sti
sub
iret
in
push
outsl
push
aad
int
les
push
and
js
mov
adc
out
mov
sub
push
insb
sahf
push
adcb
sub
stc
out
lcall
in
mov
jnp
push
mov
in
or
push
sub
push
xchg
mov
xchg
pusha
push
push
cmp
and
lea
sbb
adc
inc
dec
fsubl
push
sub
test
push
arpl
push
mov
or
ljmp
mov
add
or
xor
stc
data16
int
jecxz
jbe
fdivrs
lds
jp
jnp
sbb
xchg
xchg
mov
sub
cmpsb
inc
lods
fstps
mov
and
push
lcall
out
dec
mov
mov
ret
and
and
cmpsb
outsl
dec
adc
imul
rcrl
aas
in
adc
stc
jb
pop
js
loop
jmp
pop
fwait
cmp
push
cmp
inc
test
sbb
scas
int
cmpb
sub
xor
es
xchg
jg
cli
dec
mov
dec
xchg
add
loop
inc
jge
and
sahf
movsl
rorl
rcrb
add
js
push
push
xorb
cmpsb
sub
add
out
fdivp
jg
and
adc
outsb
test
inc
sarb
test
mov
loope
sahf
or
mov
adc
shrl
or
mov
adc
fcomps
divl
stos
xor
add
push
dec
push
add
aam
aaa
pop
call
lret
int
sub
fstl
pop
insb
push
dec
mov
cmpsl
push
and
icebp
test
or
cmp
jle
stos
adc
jge
xor
mov
dec
fsubrs
dec
gs
xchg
insl
push
std
mov
cmp
mov
ss
iret
outsl
ds
sti
rol
pop
cmp
inc
cmpsl
inc
jp
xchg
add
aaa
addr16
add
cmp
out
jle
mov
mov
jae
lretw
les
fcoml
inc
dec
nop
sub
sub
sub
or
popa
xor
jge
lods
in
and
lret
sti
mov
pop
jns
jmp
pop
sbb
enter
xor
push
and
bnd
movsb
pop
lret
in
mov
pop
pop
mov
pop
outsl
js
mov
imul
xchg
testb
ret
movsb
aad
lods
or
dec
aam
xchg
shrl
xchg
pop
mov
push
push
inc
sub
pop
and
cltd
push
cltd
xchg
xchg
lcall
fmuls
xchg
pusha
cld
sbb
scas
mov
inc
mov
jb
sbb
adc
or
adc
andb
cmpsl
sbb
cmp
adc
movsl
ret
jp
sbb
cmp
ljmp
mov
xor
mov
loope
movsl
push
xchg
mov
mov
subb
or
mov
repnz
sbb
sbb
and
or
pop
mov
insb
arpl
push
or
mov
scas
movsb
push
cmp
jno
les
cmp
sub
insb
inc
push
negl
clc
mov
lods
std
sbb
mov
jmp
jle
jle
in
or
push
xor
cmovg
add
popf
loop
xor
gs
jne
push
mov
insb
cld
mov
in
cmp
lret
pop
mov
adc
je
xchg
std
dec
xchg
or
int
jne
fiadds
repz
stos
inc
test
iret
sbb
xchg
lods
subl
push
test
jbe
and
test
cli
cmp
xor
pop
fsubrl
ja
orb
loopne
aad
dec
or
cmp
or
in
test
xor
rcr
sub
stc
mov
adc
insb
insl
in
and
mov
scas
or
imulb
mov
and
dec
add
push
mov
xor
push
lea
inc
sbb
fisubl
and
call
adc
jno
lds
mov
pop
cmp
into
sbb
cld
mov
loopne
xrelease
lea
sti
xor
cmp
lret
mov
test
mov
cmp
fwait
adc
jbe
mov
fstl
push
pop
fdivrs
movsb
ja
out
mov
repnz
lret
xchg
jle
cmpsl
sti
out
xlat
outsb
loopne
mov
cltd
fwait
mov
hlt
pop
pop
insl
ss
xor
add
mov
push
add
test
push
cld
push
stos
test
lret
popf
or
js
mov
dec
mov
jo
sub
xchg
pop
jns
mov
jbe
scas
adc
arpl
scas
jecxz
pop
lock
addb
jecxz
cli
jge
rclb
sbb
in
cmp
sbb
mov
clc
ljmp
leave
xchg
jmp
sahf
sub
addr16
inc
sub
jl
shrl
rorl
fldt
pop
mov
pop
rcrb
push
das
test
outsl
std
out
mov
or
push
and
sbb
data16
jle
addb
loopne
test
inc
add
adc
in
fiaddl
enter
adcb
jbe
cmc
dec
jno
inc
pop
cmp
out
jns
pusha
mov
xrelease
or
dec
outsb
in
push
mov
jbe
pop
test
jmp
xchg
popf
sub
ljmp
jb
mov
dec
aam
lret
subb
pop
stc
and
arpl
clc
inc
es
inc
push
test
mov
mov
sbb
and
in
adc
popa
mov
je
sub
aaa
cs
mov
adc
push
pushf
in
scas
popf
mov
jne
aam
testb
adc
xor
mov
pop
sbb
xor
inc
repnz
cwtl
shl
clc
pop
subb
cmp
cmp
adc
cld
lahf
mov
mov
pop
jns
rorb
arpl
add
lret
dec
sub
loope
dec
scas
mov
testb
outsb
jl
add
xchg
push
dec
sbb
lcall
sbb
and
lods
fldcw
fdivs
pop
mov
std
inc
insb
ss
mov
roll
jmp
mov
out
into
or
dec
mov
roll
mov
imull
adc
in
popf
iret
jns
aad
imul
cmp
mov
andb
out
loopne
scas
inc
sub
in
pop
xchg
lods
xor
mov
std
mov
jl
mov
jnp
jbe
adc
sarl
lret
inc
and
sarb
add
pop
fiadds
or
mov
mov
sbb
repnz
data16
sbb
and
pushf
adc
lret
jb
dec
cmpsb
insl
xlat
jb
repz
dec
or
sti
testl
sub
in
movsb
mov
shll
mov
ficoms
xchg
xchg
and
insb
sbb
dec
dec
adc
jge
mov
imul
rorb
xchg
inc
mov
call
jl
data16
mov
sub
test
fwait
jae
repz
subb
xor
or
in
cli
pusha
les
mov
sbbb
mov
push
hlt
mull
jge
add
out
lods
pop
jnp
or
add
clc
in
adc
divl
xor
inc
sarb
lcall
xor
mov
and
push
mov
call
loop
jmp
dec
fildll
push
cltd
lret
mov
faddl
lds
loope
dec
data16
rclb
jg
sub
mov
mov
sahf
leave
lods
xchg
addr16
xchg
clc
pop
lods
sub
test
into
pop
adc
inc
inc
mov
xlat
add
and
or
mov
xchg
inc
std
adc
mov
lock
fimull
xor
jle
jl
mov
adc
xor
fs
repnz
sahf
cmp
mov
lods
imul
inc
leave
inc
sub
push
mov
or
mov
in
dec
and
or
outsl
fsubs
push
movsb
out
das
pop
bound
in
xor
testl
adc
jbe
mov
repnz
mov
xchg
nop
jo
insl
xchg
flds
push
fsts
xlat
mov
inc
shlb
xchg
bnd
in
in
add
ficoms
lods
aaa
inc
clc
mov
and
loope
insb
stos
inc
ja
jg
sahf
mov
pop
jae
push
lds
dec
out
pop
or
mov
push
fists
mov
jp
mov
div
stos
repnz
ljmp
stos
mov
cltd
add
and
lea
xchg
jbe
push
lcall
sti
aad
adc
sub
dec
or
jns
xor
or
pop
pop
or
addr16
dec
sub
jnp
ljmp
cltd
fisubrl
jne
push
sub
mov
setge
adc
fwait
cmpsb
dec
sbb
jb
in
lcall
rcrb
mov
les
in
xchg
mov
addb
mov
add
push
cs
xor
dec
inc
rolb
cmpsb
inc
lods
enter
xchg
ds
sub
lock
xor
pop
inc
lods
jnp
add
xor
imul
sub
insl
xor
in
jae
xor
xchg
pop
outsl
dec
inc
and
push
outsl
lds
leave
jp
fs
adc
fcoml
outsb
push
pop
sbb
lret
mov
outsl
cmp
xor
test
pop
ss
test
sub
stc
or
add
add
outsb
push
push
cmp
pushf
mov
movsb
and
sti
jle
inc
sbb
mov
add
call
je
fs
shll
out
push
and
dec
das
mov
imull
xlat
movsb
dec
mov
shll
cmp
jnp
pop
clc
and
adc
frndint
lcall
mov
repnz
or
in
push
push
je
shlb
cmp
in
and
cmpl
ret
outsl
stos
inc
mov
iret
push
jge
mov
xor
sbb
faddl
mov
fwait
and
fadds
cmp
ja
pop
data16
cmpsb
xorl
fcomps
jnp
mov
fcomi
loope
adc
sub
mov
and
or
inc
push
sbb
inc
mov
jbe
and
push
pop
mov
adc
in
repz
loop
or
arpl
ja
jge
daa
push
cmp
idivl
xchg
leave
insb
stos
aaa
je
cmp
mov
outsl
out
cmp
ret
insb
dec
push
and
or
mov
ja
ds
popa
pop
imul
push
jae
pop
fcmovnb
daa
and
aaa
jo
xchg
or
das
stc
xor
jne
and
fwait
inc
mov
in
repnz
into
sar
jae
ljmp
lods
sbb
push
in
xor
dec
push
add
mov
pop
add
in
jnp
movsl
xchg
sbb
hlt
dec
nop
mov
imul
insl
and
jb
push
inc
imul
lods
inc
pushf
jge
push
cmp
add
mov
shl
sarb
adc
or
jg
xchg
sbb
push
movsb
je
cmp
bound
sti
sbb
iret
aas
enter
jmp
sub
gs
jne
mov
loop
pop
movsl
mov
xor
mov
sub
mov
xor
jl
sub
dec
ss
gs
lods
mov
out
rclb
int3
adc
mov
leave
push
repnz
dec
sbb
fs
fwait
push
dec
fstl
push
fimuls
push
pop
adc
xchg
pop
pop
imul
or
lahf
mov
push
inc
pop
sbb
mov
aam
inc
ret
xchg
sbb
sub
sti
cmc
je
in
inc
es
push
leave
test
dec
mov
mov
popa
insl
or
adc
jmp
cmpsl
push
pop
xor
cld
test
add
daa
dec
mov
cmp
pop
adc
movl
xor
fucomip
scas
pop
loop
test
mov
push
fwait
je
add
aad
es
and
push
aam
jae
aam
adc
sbb
fdivr
adc
roll
in
ret
out
lock
mov
adc
cli
sub
cmp
sbb
pop
push
cmp
in
push
pop
leave
ret
dec
pop
sub
mov
fwait
or
xchg
xchg
mov
rorl
add
push
push
xor
enter
scas
mov
lock
add
out
push
or
nop
fidivrl
pop
push
pushf
into
insb
mov
pusha
jle
add
enter
mov
stc
testl
or
sbb
push
test
mov
outsb
mov
xor
jge
mov
mov
lahf
xor
or
insl
imul
mov
sti
pushf
mov
inc
fwait
aaa
in
aaa
dec
adc
jbe,pt
mov
pop
scas
or
aam
data16
mov
in
ds
data16
cmp
xor
xchg
sub
mov
cmp
jbe
lcall
rorw
insb
mov
cmp
mov
cmpsl
and
fldcw
test
cmpb
add
lret
and
loope
add
imul
std
cld
ficoml
daa
lea
mov
in
jle
test
outsb
and
cmp
sbb
add
xchg
pop
pop
inc
push
rcrb
jbe
cmp
inc
cmp
inc
dec
sahf
repz
in
pusha
je
xchg
ret
fstpt
lea
sub
xor
sarl
xchg
imul
dec
inc
inc
sbb
aam
add
add
dec
hlt
popa
xor
call
mov
divb
cmpsl
cmp
push
lods
cmp
sbb
mov
jle
dec
leave
dec
xchg
jns
loopne
es
dec
dec
xor
push
les
push
lcall
dec
cmpb
lea
xchg
mov
lcall
cwtl
pop
das
ss
leave
cmpb
cwtl
or
mov
xchg
xor
push
xor
inc
adc
pop
push
enter
in
lret
bound
jle
insb
xchg
outsb
nop
je
mov
cmp
mov
shrl
sti
lods
and
mov
add
pusha
jne
ret
repnz
pop
and
cmp
call
pop
jo
mov
add
stos
out
lahf
imul
pop
aad
push
or
jb
shll
adc
popa
push
add
xor
test
sbb
cmpsb
sub
jb
add
sahf
ljmp
xor
xchg
push
jnp
add
push
fs
dec
dec
sbb
xorb
or
mov
fimuls
sti
xlat
pop
sbb
inc
aad
adc
enter
mov
int
cld
dec
push
jl
daa
mov
mov
xchg
ds
add
mov
add
fcompl
icebp
adc
and
adc
pop
adc
push
pusha
in
fwait
les
sbb
mov
outsb
sub
xor
clc
jns
in
mov
cmpsl
or
fsubs
aad
mov
pusha
mov
pop
jg
fmul
dec
jle
or
hlt
jl
cmp
data16
inc
push
fwait
in
cli
adc
xchg
mov
rolb
pop
mov
mov
aad
dec
inc
adc
hlt
xor
insb
and
xorl
js
movsb
xlat
adc
ja
jmp
ja
imul
jno
das
and
aam
rolb
mov
ret
rcl
sub
adc
dec
or
stos
add
add
flds
xchg
sub
loope
xor
repnz
sti
gs
xchg
out
sahf
or
sarl
enter
dec
repz
mov
add
in
cwtl
xchg
cld
jo
outsb
call
popa
lock
dec
sbb
lods
ffreep
pushf
aam
sbb
inc
fistpl
js
loopne
pop
pop
cwtl
leave
outsl
lret
sub
push
sti
jne
cmp
xor
mov
jecxz
push
sub
mov
inc
jge
into
jmp
xor
ret
mov
push
daa
insb
xchg
mov
clc
ret
outsl
rclb
imul
cmp
ljmp
sub
jo
mov
lods
xchg
adcl
es
test
cmp
xor
fiadds
mov
mov
sbb
push
jmp
or
cmpsl
out
ss
mov
mov
or
pop
movsb
iret
or
jbe
jmp
subb
div
lret
rolb
mov
or
mov
lret
dec
jo
test
dec
adc
sbb
sub
inc
jo
mov
mov
clc
xchg
das
pop
push
rolb
ds
pop
loop
push
sub
mov
add
test
insl
outsl
lret
cmp
ficomps
jp
mov
sbb
sub
inc
hlt
sub
cmp
jbe
cli
inc
jp
jbe
fwait
sub
pusha
shlb
addb
and
les
mov
cli
pop
jb
jb
mov
mov
sbb
mov
jmp
loopne
add
xchg
pop
or
inc
scas
or
loope
dec
imul
cmpsb
push
push
rcrb
mov
xchg
popf
jne
mov
jns
ret
push
loop
or
int3
xchg
je
shlb
stos
fildll
mov
aam
fadd
fs
inc
or
lret
into
adc
and
xor
xor
inc
mov
cmp
fwait
lcall
cmpl
test
pop
dec
js
ret
loopne
push
inc
jg
test
test
lcall
sub
inc
mov
aaa
data16
aas
cmp
lock
sub
dec
in
cwtl
lcall
and
cltd
cmp
mov
pusha
adc
outsb
add
pop
in
mov
imul
mov
ja
adc
aam
mov
xchg
xor
test
addr16
sub
lods
sbb
or
repz
xchg
test
out
pusha
mov
xchg
nop
mov
push
sub
xor
loope
cmp
js
pop
jns
inc
pop
jbe
lahf
or
push
imul
or
popa
test
jge
orl
sub
mov
icebp
push
cmp
add
jno
pop
icebp
mov
out
pop
das
cmp
push
stos
int
pushw
mov
js
sub
ss
addr16
cmp
int3
push
movsb
push
hlt
and
mov
add
cs
jl
inc
dec
cld
cmpsl
mov
xor
fists
xchg
sarb
xchg
sbb
xor
or
xorb
mov
out
xor
sub
pop
mov
dec
data16
sarb
adc
les
or
cs
aam
xor
xchg
mov
pop
bound
repnz
pushf
sbb
lock
ret
mov
insb
daa
aad
sub
fs
mov
inc
xchg
dec
or
dec
ffree
inc
loope
dec
jecxz
mov
repz
inc
sub
lret
stos
sbb
mov
adc
out
adc
push
push
adc
loop
pop
xchg
stos
add
cwtl
ds
mov
jns
push
lods
lret
pop
into
or
mov
scas
xchg
push
and
xchg
sbb
add
cmp
pop
pop
pop
fnsave
imul
inc
aad
loope
dec
aas
test
sahf
je
mov
mov
imul
inc
repz
lahf
movsl
lods
inc
sbb
mov
mov
pop
in
adcb
in
nop
icebp
sub
ret
imul
xchg
pop
dec
icebp
sti
pushf
adc
js
xor
dec
into
cmp
adc
cmp
cmpsl
dec
xor
icebp
dec
arpl
mov
xor
and
js
dec
push
stc
pop
push
mov
pop
inc
cmp
mov
xchg
ja
outsb
xchg
inc
cmp
outsb
xor
aam
jge
pop
dec
ss
out
gs
addr16
insb
push
mov
insl
mov
push
ljmp
shlb
add
into
stos
sub
jge
sarl
dec
adc
jns
sub
scas
jns
pop
jns
ficomps
ds
mulb
inc
adc
sbb
cmp
push
inc
addr16
das
mov
sbb
mov
xor
jecxz
jg
repnz
mov
pop
lods
pop
cmc
fstp
add
jo
pop
sub
inc
xchg
cmp
fmull
test
stos
or
pop
leave
jge
es
inc
push
add
stos
into
fidivrl
jae
xlat
ljmp
mov
pusha
lds
add
xor
rcl
addr16
cmpsl
cld
and
std
ds
xlat
xchg
jp
bnd
mov
jbe
nop
repnz
addr16
sbb
pushf
jmp
adc
mov
cwtl
mov
mov
call
in
jnp
jno
push
gs
mov
call
jmp
pusha
lret
test
mov
and
dec
xorl
xchg
sahf
and
mov
lahf
lret
lcall
sub
dec
ss
sub
push
jmp
jns
jo
xchg
jp
jecxz
jg
lods
inc
pop
mov
call
xor
xlat
jnp
or
call
cli
fcoml
rorl
fiadds
fistpl
int3
xchg
pop
lods
cmpsb
ss
mov
or
mov
or
lods
das
cmp
aas
mov
movsl
jne
test
xor
leave
stc
loop
mov
and
or
dec
xchg
insl
push
ds
cmp
add
ss
and
or
bound
ret
pop
cld
movsb
jl
movsl
or
andb
add
stos
mov
arpl
jns
fwait
adc
add
xchg
outsb
lea
xchg
or
cwtl
add
jne
pop
adc
das
popf
pusha
sub
dec
mov
insl
add
sahf
clc
adc
sti
xchg
mov
cmpsl
dec
repz
adc
inc
mov
pop
ss
inc
dec
jno
inc
cwtl
test
aam
lock
cltd
ds
les
jno
lds
mov
dec
pop
xchg
cmp
or
cwtl
sub
push
push
es
adc
xchg
or
out
sbb
lret
popa
sbb
sbb
int
lods
adc
xchg
test
xor
iret
mov
ficoml
push
push
lcall
imul
mov
sub
lea
rclb
bnd
popf
shlb
gs
out
add
jae
xchg
push
mov
out
out
dec
xor
mov
fsubs
jg
iret
sbb
sbb
fisttps
jnp
mov
xchg
aad
mov
xor
cli
mov
cmpsl
repz
out
mov
mov
mov
cmp
loop
leave
cmp
pop
repnz
aad
jp
cmp
loop
mov
shll
push
ja
lock
shrl
xor
and
push
out
mov
mov
mov
inc
sbb
pop
xor
mov
dec
adc
mov
pop
pop
mov
scas
rcrb
rol
adcl
int
add
mov
lret
xchg
cmp
or
or
cli
pop
cmpsl
call
mov
jle,pt
in
push
push
adc
mov
and
adc
aas
pop
cs
fisttpl
pop
push
or
js
jle
sbb
jecxz
jno
in
insb
aaa
push
add
xchg
adc
mov
test
and
mov
push
jp
cs
jp
jp
lahf
aas
adc
adc
jne
push
adc
clc
and
jb
js
mov
repnz
sub
or
jl
imul
pop
xchg
cmp
jae
in
pop
hlt
sbbl
and
cs
or
sub
add
xchg
cli
fimull
jae
jno
push
in
jno
psubq
mov
adc
in
pop
fs
add
dec
out
xor
test
push
outsl
mov
rcll
and
into
out
sarb
enter
cmp
lods
sub
pushf
sbb
in
stos
mov
adc
pusha
rorb
lahf
pop
dec
xlat
cli
cmp
fcmovu
cmp
shrb
mov
jno
mov
pop
nop
cwtl
stos
lea
xchg
or
xchg
xor
idivl
inc
daa
cs
inc
lcall
mov
inc
adc
xchg
rcrb
pop
iret
ds
aaa
lds
rol
imul
fcmovbe
and
xor
add
popa
xchg
mov
loop
jmp
cmpsl
icebp
popf
in
sbb
push
incl
xchg
sub
dec
sbb
pop
mov
pop
es
xor
arpl
pop
jmp
pop
aam
out
dec
mov
sti
fmuls
jge
push
fbstp
push
cmp
mov
fsubrs
daa
jno
in
cmc
lahf
jo
lds
sub
push
arpl
add
add
xchg
mov
fwait
push
pop
sub
inc
xlat
rorb
cmova
pop
pop
sbb
dec
add
lret
out
add
loopne
ljmp
cs
es
or
push
call
in
sbb
call
inc
mov
enter
mov
add
shll
popa
mov
dec
andl
xor
mov
mov
sbb
xor
lret
add
and
data16
aad
jp
pop
outsl
sub
shl
call
mov
xchg
dec
inc
sub
cmp
ret
clc
loope
mov
or
xchg
mov
or
xor
das
cmp
inc
and
outsb
into
push
movsl
pushf
in
shlb
push
adc
cmp
jne
inc
les
push
icebp
lret
stos
out
ds
pop
mov
dec
lcall
rolb
iret
or
mov
push
movzbl
in
ljmp
sub
xchg
shll
mov
xor
imul
xor
pop
movsb
adc
mov
inc
push
loop
inc
cmpsl
mov
sbb
pop
inc
adcw
xor
mov
fs
jns
jns
or
out
daa
mov
pop
push
lock
lock
mov
leave
cli
adc
sub
adc
inc
mov
xchg
adc
mov
and
adc
and
test
cs
test
loop
xchg
sahf
out
imul
pop
jae
aas
lahf
xorl
shrl
aad
int
pop
and
mov
loope
fsubrs
loopne
jmp
mov
xlat
iret
jae
mov
loope
dec
imul
repz
mov
sbb
and
jno
test
pop
pop
push
ds
leave
xor
mov
or
pusha
cmc
add
test
mov
iret
xor
std
in
jo
and
pop
aaa
cltd
push
out
iret
and
adc
or
ret
cmpsb
sub
outsb
scas
jl
push
add
dec
mov
stos
mov
xchg
mov
pop
es
inc
mov
or
mov
pop
pop
dec
mov
test
addr16
jp
mov
adc
xchg
xchg
mov
sub
push
or
imul
in
push
mov
outsl
add
add
lods
jno
jmp
inc
xchg
push
xchg
divb
ds
push
roll
rcrb
mov
dec
call
ret
std
ds
mov
mov
push
jmp
pop
adc
scas
or
inc
cld
shl
and
dec
sub
lret
mov
inc
in
mov
xchg
pop
xchg
sbb
xchg
pop
jmp
mov
leave
stos
or
lret
loope
jno
pop
test
std
inc
push
scas
lcall
mov
loopne
xchg
ds
xchg
pusha
lret
jl
lea
in
in
orb
insb
test
nop
cli
add
aad
daa
lret
pop
pop
cmc
fstpt
cmp
nop
mov
mov
imul
sub
lds
sub
pop
cli
jp
and
ds
test
add
stc
outsb
daa
movsl
push
lret
cmp
ficoms
in
lods
mov
lock
adc
or
sahf
in
test
movsl
jbe
sbb
mov
mov
sbb
gs
std
and
in
xchg
testb
ds
xchg
pop
add
push
sar
rcrl
sbb
sbb
cmpsl
imul
jp
inc
push
fstpt
inc
ficompl
call
add
cli
push
or
scas
in
and
dec
mov
stc
inc
mov
jmp
add
mov
enter
xor
imul
push
dec
mov
lcall
ror
add
xlat
filds
dec
ret
xor
repnz
imul
int
jnp
gs
repnz
daa
cmpsl
adc
xchg
loopne
or
xchg
pushf
xor
dec
out
mov
mov
in
int3
dec
cmpsb
scas
pop
ret
imul
inc
inc
and
lods
in
push
ret
shrl
dec
lahf
inc
divps
pusha
mov
jnp
add
add
loop
xchg
pushf
adc
mov
xor
ret
xchg
push
inc
adc
pop
std
iret
lock
adc
pop
in
and
incb
lcall
dec
out
cmc
rcl
lcall
or
cmp
mov
adc
hlt
cmc
sub
xchg
adc
les
addr16
mov
mov
mov
push
nop
mov
adc
sbb
inc
sub
jle
lods
imul
mov
fldcw
xor
or
mov
push
leave
mov
xchg
dec
pop
fwait
mov
in
outsb
movsb
sub
js
outsb
push
jmp
ja
cmp
inc
or
mov
rorb
addl
rorl
mov
push
or
sub
into
xchg
or
cmpsl
lods
adc
lock
cmp
pop
outsl
movsb
xor
inc
xor
or
push
fisttpll
mov
cltd
rcr
test
cs
mov
xor
fs
movsl
insb
gs
das
imul
aas
lock
adc
mov
sub
cmp
push
aas
fwait
mov
fcmovb
iret
clc
adc
sbbl
and
sbb
das
adc
clc
and
aas
pop
loopne
push
idivb
andb
push
sbb
or
push
nop
aas
adc
cmp
fistpl
clc
adc
ljmpw
push
rcll
and
je
dec
pop
loopne
mov
xor
movsb
in
fdivs
imul
fwait
outsl
mov
mov
loop
les
push
aam
xchg
loop
rolb
dec
lds
jno
data16
adc
iret
sbb
jbe
and
push
sub
jbe
cmp
cmc
sbb
call
sar
test
mov
adc
pop
scas
movsb
xchg
push
ja
insb
dec
test
or
enter
lcall
and
ret
fwait
push
adc
xchg
jl
push
loop
cli
imul
loopne
xor
pop
push
push
aam
fwait
sbb
addb
pop
int
push
cltd
jg
imul
or
mov
xor
cmpsl
adcl
and
sbb
add
xchg
push
pop
mov
pop
fdivr
xor
stc
and
pop
hlt
and
clc
xchg
and
xchg
loop
stc
or
xchg
mov
inc
inc
sbb
scas
andb
inc
push
add
xor
jecxz
push
pop
ja
je
inc
in
lret
jl
dec
jb
mov
mov
mov
aas
lock
outsb
lea
arpl
xchg
test
mov
stos
loope
js
mov
inc
cs
leave
dec
int3
mov
dec
loopne
fdivr
outsb
jp
clc
loopne
std
scas
test
jne
rcr
mov
adc
sbb
mov
ds
add
aas
pop
or
ljmp
or
xchg
dec
and
sbb
mov
js
and
xor
jns
movsb
dec
scas
add
jno
test
cltd
mov
jle
cmp
sub
push
nop
dec
lcall
icebp
push
fwait
iret
out
cltd
xchg
jecxz
rolb
nop
int3
and
xchg
dec
mov
pop
test
ss
pop
es
mov
sbb
popa
outsb
pinsrw
scas
das
dec
cmc
repz
xor
movl
pop
daa
bound
out
jo
aas
cmpsl
push
lods
inc
push
lods
out
jle
cmp
mov
mov
jl
jae
int3
into
jp
sbb
testb
push
mov
lret
or
mov
xlat
repnz
jno
sbb
mov
push
xor
sub
dec
ret
aaa
mov
adc
jg
arpl
mov
or
xlat
enter
mov
xorb
push
sbb
bound
or
psubsw
mov
orl
stos
gs
add
add
outsl
lea
sbb
push
ljmp
inc
imul
pop
add
xchg
jge
hlt
fcompl
sub
outsb
mov
pop
iret
lcall
mov
push
jg
inc
pop
pusha
jnp
movsb
inc
xchg
or
test
jmp
roll
std
inc
fsubr
mov
std
mov
pop
jmp
adc
xchg
push
mov
jae
rcr
fsts
xchg
xor
mov
add
xchg
push
popf
xorl
insb
aam
ret
int3
xchg
insl
aas
stos
dec
in
inc
push
in
xor
loopne
nop
xchg
sti
jg
mov
sub
in
mov
and
outsb
adc
sbb
repz
xor
mov
push
sub
pop
mov
imulb
xchg
mov
call
lcall
cltd
xchg
mov
fs
and
test
in
mov
inc
dec
mov
add
in
dec
and
sub
mov
dec
enter
ret
add
das
jle
adcl
inc
shlb
aaa
push
movsb
dec
inc
andl
add
dec
cmp
mov
adc
cmc
push
xor
in
dec
int3
adc
jp
loop
sti
jmp
es
push
jns
adc
jnp
xchg
in
jnp
dec
ret
or
push
stc
and
test
lret
jmp
orl
leave
xchg
cmp
mov
dec
fidivrl
dec
xor
js
push
lods
cmp
cmp
lahf
clc
test
mov
cltd
sub
inc
pop
push
sbb
pop
int
roll
test
dec
mov
stos
xor
mov
gs
mov
stos
movsl
sahf
in
ret
rcl
divps
mov
test
xchg
mov
cmp
loope
lock
cld
cmp
adc
inc
xchg
jbe
in
cmp
push
dec
aam
into
sub
ja
insb
mov
mov
pop
add
mov
cmpsb
iret
xchg
pusha
test
test
mov
aas
out
adc
sbb
stc
loop
movsl
popf
xchg
test
hlt
sub
jmp
int3
add
scas
xlat
pop
xor
inc
xor
fwait
cmpb
subb
sub
cltd
dec
es
lods
cwtl
fistpll
test
xor
in
or
push
xor
pop
sbb
loope
mov
jl
sbb
sub
push
push
shrl
push
js
iret
js
xchg
dec
cmp
add
adc
push
cmc
mov
xchg
repnz
push
repz
out
cld
pop
das
cwtl
cmp
sub
mov
mov
aam
in
jno
pushf
dec
xlat
jg
mov
mov
lahf
and
fstpt
xchg
lock
inc
sub
bound
daa
xor
iret
mov
mov
fs
insb
or
test
nop
in
adc
bound
adc
loop
aas
mov
loopne
add
dec
sub
cltd
and
inc
mov
pop
notb
mov
mov
pop
ja
cs
jno
scas
dec
xor
int3
jmp
shl
movb
mov
call
sbb
push
mov
out
dec
pop
aad
push
insb
js
jmp
jmp
xchg
sbb
dec
pop
mov
icebp
cwtl
cs
xchg
mov
push
or
ja
call
mov
xor
xchg
sahf
xor
int
icebp
mov
pop
cmp
sbb
sbb
fdivp
int3
out
cmp
adc
imull
and
or
arpl
mov
and
inc
jge
jbe
mov
call
cli
ljmp
inc
in
mov
popa
ret
aas
xchg
jo
paddusw
push
add
fistpl
call
hlt
add
cmpsl
out
cmpsl
or
insl
je
inc
jbe
pop
out
js
mov
icebp
mov
movsb
cmp
sbb
or
cld
lahf
test
in
aas
in
push
inc
insl
addr16
leave
pop
mov
inc
add
and
adc
les
xor
insl
scas
shrl
ret
lock
adc
imulb
pusha
mov
mov
subb
push
jne
js
sti
call
sbb
pop
gs
sub
mov
push
shlb
das
dec
scas
mov
je
sub
notl
in
imul
cmp
icebp
popf
cltd
push
adcl
cmp
xchg
cs
cwtl
push
cmp
int3
push
cwtl
cmpsl
cmp
cmp
imul
repnz
shll
inc
bound
sub
mov
imul
inc
jb
cmpsl
adc
hlt
addr16
mov
sbb
mov
xlat
mov
cmp
add
push
lods
mov
daa
sub
add
push
push
loope
mov
int3
sub
mov
ja
out
jno
adc
in
in
sbb
mov
mov
adc
push
inc
push
dec
and
jnp
pop
push
push
sbb
lahf
add
push
sbb
sbb
xor
pop
push
mov
xchg
jge
cmp
mov
out
adc
xor
xchg
inc
test
outsb
jl
cwtl
xor
cli
ret
rcl
push
push
aaa
lcall
inc
sbb
adc
pushf
cli
and
je
xor
xchg
mov
sbb
shrl
insb
das
inc
dec
in
inc
dec
pop
jge
and
leave
int
lahf
lock
add
stos
mov
mov
push
and
imul
nop
lea
pop
aaa
lods
mov
aas
gs
push
jo
cmovbe
call
fldt
cmpsb
aad
mov
cmp
rcll
jl
scas
mov
cld
and
push
mov
sbb
out
lret
sbb
add
mov
mov
sbb
push
pop
push
xor
stos
push
ss
sbb
sbb
jb
popa
ffreep
cmc
sahf
out
adc
aad
rorl
fdivs
popa
sbbb
rcll
sahf
xor
in
pop
nop
in
mov
rcrl
push
mov
shl
ret
add
sbb
push
fwait
inc
ss
mov
pop
rcll
aas
fdivrl
or
aam
popf
and
mov
push
div
stos
imul
add
mov
push
jle
cwtl
ret
push
jl
pop
outsb
ljmp
ss
nop
cwtl
out
scas
mull
push
int3
es
mov
and
jae
or
or
sub
adc
jl
mov
lret
mov
movsb
out
cmp
mov
mov
sbb
pop
movsb
or
addr16
clc
push
mov
cli
mov
dec
push
shlb
shl
rcll
adc
and
jg
adc
pop
mov
sub
out
add
movsl
rcrb
push
mov
leave
imul
mov
pop
loopne
and
cwtl
xchg
loopne
scas
in
insb
imull
call
ja
inc
mov
loop
fstl
enter
loopne
ret
push
daa
inc
inc
mov
inc
cmp
inc
addl
jnp
ficompl
push
test
sub
fs
xchg
in
push
and
lret
faddl
bound
in
lods
mov
addr16
inc
mov
aaa
daa
xlat
mov
inc
stc
negb
jp
ljmp
stos
int
imul
mov
daa
cmp
lahf
push
push
inc
jb
stos
push
jg
jo
sub
mov
dec
stos
push
bswap
jecxz
fs
popf
or
and
xor
ja
test
mov
jmp
lahf
add
fdivl
mov
int
inc
das
xchg
iret
or
adc
cmp
xrelease
pop
fisttpl
clc
sbb
cmc
outsl
mov
mov
cmp
xchg
out
lds
out
mov
sbb
sarl
mov
pop
outsb
xchg
fwait
aam
jb
cmp
pop
in
repnz
fldl
pop
rcrb
in
push
in
inc
enter
stc
inc
sbb
push
sbb
and
call
xor
xor
jnp
inc
js
adc
stos
xchg
mov
adc
adc
pop
and
mov
xchg
pusha
mov
sbb
dec
pushl
xchg
les
aas
jp
shl
mov
rorb
fmuls
nop
add
xchg
lahf
test
jecxz
dec
mov
pop
pusha
jo
push
pop
dec
add
ret
push
cmp
xor
js
stos
xchg
ja
mov
sbbb
cmp
inc
insb
inc
lcall
jae
fadds
push
jne
in
mov
xor
and
push
std
dec
sbb
je
push
jae
sub
in
cmpsl
je
pop
es
rcrb
cmp
sti
mov
cmp
dec
and
jae
ljmp
xor
rcll
dec
jns
fldl
pop
icebp
iret
inc
adc
rorb
outsl
and
cmpsl
dec
fimull
mov
push
xor
mov
fstp
andl
inc
rcll
sbb
movsl
shrl
rorl
or
cmp
test
jge
mov
jae
inc
add
lret
andl
cmp
hlt
push
dec
ljmp
sub
orl
pop
or
lods
xchg
inc
mov
adc
es
mov
pop
cmc
and
insb
mov
adc
mov
das
ja
insb
divl
icebp
jae
cli
jo
lds
int3
push
push
xor
adc
lahf
xchg
ficompl
or
sti
sub
push
add
jp
rorb
pop
scas
fcmovnbe
ljmp
lret
iret
and
sub
insb
mov
aam
outsl
push
sub
gs
xchg
xor
rorb
stos
xor
cmpb
and
jl
fimuls
xor
movsb
int
push
fmulp
cmpsb
pop
stos
test
pop
or
mov
repnz
sub
icebp
nopl
mov
cld
push
lcall
stos
adc
push
mov
aam
js
inc
pop
mov
call
mov
rolb
movsb
sub
mov
xchg
mov
aam
sbb
xchg
xchg
int
inc
stos
nop
mov
test
mov
mov
inc
roll
rorb
xchg
leave
addr16
add
sub
fmul
adc
inc
xchg
das
hlt
push
or
xchg
mov
dec
imul
inc
sahf
push
dec
in
mov
xor
xchg
push
pop
mov
aam
js
push
lds
loop
loop
aaa
lds
aas
lock
jmp
dec
adc
adc
lcall
into
cltd
mov
rcrl
fbstp
mov
ljmp
test
xchg
mov
lods
sbb
lcall
and
fcoml
push
shll
adc
push
pop
mov
hlt
jne
insl
call
pushf
daa
mov
xorl
or
pop
scas
movsb
xchg
inc
push
xchg
jmp
xor
or
insb
jge
pop
mov
mov
lahf
testb
pop
and
addb
sub
test
test
xchg
lret
clc
or
adc
in
subl
arpl
pop
mov
adc
je
push
push
mov
rcrb
xchg
out
insb
xor
cmpl
cmp
pop
mov
sub
std
cmc
js
cld
mov
popa
mov
negl
pop
test
mov
or
xor
cwtl
fstl
jge
mov
add
cmp
dec
cmp
jl
jnp
mov
sub
pop
pop
mov
xchg
cmc
cltd
mov
adc
stos
xor
mov
daa
xor
ljmp
int3
in
push
sbb
mov
push
rol
inc
movsl
nop
testb
mov
test
jp
je
add
jb
mov
cmpl
push
sahf
mov
inc
stos
inc
xlat
dec
push
sti
sahf
nop
adcl
xchg
sbb
cmp
dec
adc
decl
sub
mov
repnz
jg
xchg
dec
xor
scas
mov
add
dec
repnz
lret
pop
mov
push
cli
fistpl
iret
icebp
sub
dec
jbe
scas
mov
push
mov
jb
test
cmp
dec
test
lods
es
pop
mov
adc
and
fwait
popa
ds
or
xchg
out
sbb
loop
ljmp
js
dec
pop
pop
sbb
dec
push
dec
stos
or
ljmp
push
js
dec
cltd
xchg
mov
and
xor
jnp
dec
mov
jmp
push
bound
pop
jne
fstpl
sti
sbbl
add
cs
mov
repz
neg
test
pop
cwtl
and
mov
inc
pop
movb
sub
imul
test
mov
xchg
test
lahf
js
notl
loopne
mov
push
fsubrl
stos
mov
pop
in
jae
jmp
fs
rolb
inc
dec
or
fnstenv
push
cld
das
push
xchg
fwait
stc
push
xchg
xchg
mov
subb
and
or
inc
repz
and
ss
loope
pushf
cmp
and
int
arpl
jae
cmp
es
sbb
sbb
and
sub
sahf
mov
cmp
lcall
lds
pop
insb
sub
cmc
sbb
add
jbe
sub
mov
add
add
push
stc
and
lcall
cmp
dec
es
xor
fldl
mov
int3
fidivrs
mov
and
test
xlat
out
or
arpl
push
pop
mov
xchg
xchg
dec
push
mov
xor
push
ss
icebp
pop
push
pop
out
popf
arpl
or
repz
xor
jae
and
jne
ret
xchg
sub
push
add
pop
loopne
jge
icebp
cmpsb
jno
test
outsb
and
fsts
xlat
add
sbbl
jno
mov
jae
jecxz
jle
mov
loopne
jecxz
sub
and
sub
pop
cli
cmp
test
pusha
cmp
jmp
cmpsb
pop
pop
shll
mov
sub
fucomp
mov
push
xor
jbe
mov
les
pop
adc
push
mov
push
in
adc
xor
dec
push
test
sub
das
bound
int3
pop
push
add
dec
bound
dec
mov
xor
rcr
aam
imul
xor
push
aaa
rcr
addr16
mov
push
frstpm(287
cmp
mov
jae
ds
pop
iret
cmp
fidivl
jmp
xchg
icebp
dec
scas
mov
cltd
sahf
insb
popf
stos
fsub
movsw
bound
push
mov
push
mov
movsl
les
repz
fs
ljmp
jmp
pop
and
hlt
nop
fistpll
imul
sub
shll
push
cltd
test
and
jae
movsb
cwtl
jbe
fs
ja
push
and
das
adc
and
cmc
jge
xor
lds
fdivs
lret
data16
add
jl
push
hlt
flds
sub
ret
in
inc
pop
mov
dec
aad
sub
test
dec
je
stc
or
jbe
das
test
test
inc
das
add
add
test
sub
cmpsl
jns
sarb
aaa
rorl
mulb
xorb
mov
repz
mov
nop
int3
push
pop
lcall
scas
insb
sub
pop
mov
rorb
ljmp
cmpsb
xor
out
or
inc
das
fisubrl
adcl
sbb
mov
push
inc
cli
mov
push
insl
rolb
test
xchg
js
xor
adc
loopne
cmc
int3
push
movsl
sub
push
and
and
lret
aas
shlb
clc
mov
mov
push
cmp
pop
jne
lcall
pop
test
jl
es
test
push
imul
add
mov
lahf
push
popf
jg
movsb
inc
mov
pop
pop
test
sbb
mov
outsb
mov
or
xchg
xchg
daa
pop
jecxz
adc
adc
cmp
xor
fbstp
adc
push
mov
push
outsl
js
stc
sub
jmp
mov
adc
cld
or
into
rorl
clc
dec
sub
call
push
addr16
mov
mov
xor
xor
or
into
aad
push
adcb
xchg
xchg
jb
mov
xchg
adc
dec
push
mov
fs
stos
into
movsb
lock
pusha
sbbl
dec
jge
fisubs
in
lock
adc
mov
test
or
xlat
in
or
gs
lret
xor
mov
es
gs
insl
enter
mov
aam
cmp
sub
and
cmpsb
inc
mov
push
and
lock
imul
push
xor
mov
add
js
in
sbb
inc
sub
rorl
sub
bound
test
mov
shll
insl
rcrl
pusha
mov
add
test
sbb
movsl
pop
stos
stc
imul
mov
mov
push
pop
mov
mov
sbb
dec
jl
imul
jo
out
or
mov
pop
loope
sbb
pop
or
cmpsl
mov
cmc
sub
in
push
fstpt
and
sbb
xchg
loopne
rol
mov
sbb
test
lret
in
cltd
jle
xor
mov
lahf
dec
xchg
int3
jae
xchg
adc
xor
int3
xor
out
mul
stos
sub
leave
imul
pop
mov
add
mov
push
repnz
imul
outsb
test
mov
push
mov
push
sbb
sub
or
or
xchg
push
movsb
xchg
xchg
and
sub
cmp
mov
pop
xchg
jle
addb
inc
nop
andl
lea
roll
add
xchg
jnp
les
bound
sbb
dec
jmp
psubd
rcll
lcall
xor
es
out
loope
movsb
dec
dec
icebp
xor
mov
lods
cmp
inc
mov
push
pushf
imul
ds
mov
jecxz
mov
dec
scas
cmpsl
ret
rcll
add
in
ficomps
adc
cwtl
ja
push
pop
decl
roll
jge
mov
pop
push
cmp
fldt
bound
cld
outsl
insl
icebp
call
movsb
movsl
cltd
push
jo
or
jnp
in
sbb
and
adc
mov
int
adc
push
xor
fcmovb
int
pushf
mov
and
sti
mov
sub
mov
pop
or
popf
inc
dec
mov
sub
dec
or
data16
push
dec
loope
test
pop
pusha
or
mov
xor
or
cwtl
push
shll
adc
lahf
and
lds
add
jge,pn
enter
insl
mov
dec
test
sarl
inc
repz
or
xchg
dec
and
ret
add
or
push
mov
dec
jmp
xchg
shr
cmpsl
dec
stos
cmp
rolb
push
xchg
mov
repnz
cmpsl
sti
in
mov
adc
pop
pop
repz
jecxz
xor
adcl
jbe
movsb
data16
or
cs
inc
lret
sbb
test
sbb
insl
xchg
adc
cmp
push
out
and
xor
or
lock
repnz
inc
fildll
je
out
in
jge
cmpb
mov
push
push
testb
push
cltd
inc
cmc
cs
data16
jb
cli
pop
mov
cmpsb
xor
jb
mov
aad
push
pop
push
repz
jae
mov
cmp
inc
mov
push
arpl
and
fldt
push
insl
arpl
add
sarl
xor
fsubs
jmp
iret
adc
frstor
inc
popa
mov
xchg
xor
push
or
and
mov
movsl
data16
fsubrs
pusha
lahf
jmp
cmp
ja
out
addb
xor
aas
mov
xor
fisubl
inc
jb
dec
mov
iret
and
jle
dec
or
jmp
push
ficoms
enter
std
jmp
int
test
sbb
push
ror
xor
sahf
pop
and
add
repnz
and
or
xor
sbb
mov
negb
aas
arpl
test
mov
jno
cmc
les
sbb
icebp
xchg
cmpsl
data16
push
or
pushf
movsb
not
repz
mov
mov
adc
rolb
xchg
and
in
xor
push
mov
ja
dec
sub
cmp
jg
data16
mov
test
or
stos
lea
aad
mov
addr16
das
cmp
scas
aad
shll
xor
jge
cmpsb
cmp
and
and
int3
mov
jmp
sbb
push
or
push
js
aad
movsl
addr16
cmp
jns
leave
roll
call
and
mov
aad
xchg
out
add
pushf
cmp
ja
xor
and
or
dec
hlt
mov
cmc
fcomps
mov
scas
sbb
fisubrs
and
sub
mov
std
add
dec
jbe
iret
imul
outsb
aam
sub
dec
out
outsb
push
jnp
ja
and
out
mov
cmpsb
int3
cld
pop
pushf
sbb
jp
mov
movsb
jne
pop
stc
fiadds
cmp
ljmp
cmp
or
jne
mov
ss
aad
leave
and
jl
and
sbb
sar
jecxz
fdivl
and
and
xor
cmp
mov
addr16
sbb
cmp
mov
pushf
dec
dec
jp
cmp
test
pop
pop
add
jno
xor
jmp
inc
mov
cmc
inc
into
pop
xor
shlb
into
and
mov
leave
jbe
mov
ljmp
iret
xor
fs
aad
add
xchg
push
pop
pop
push
dec
scas
jns
jnp
shrb
sbb
push
addr16
out
and
mov
sub
scas
sub
les
into
lret
pop
bound
in
and
stc
xlat
add
in
in
sub
cmp
ret
aaa
add
and
fnstcw
push
adc
hlt
mov
loopne
and
pop
outsl
loope
dec
mov
xor
dec
test
cmp
mov
mov
cwtl
leave
jns
cmp
or
mov
fstpt
or
pop
hlt
mov
sahf
jae
jb
data16
mov
rcll
cmp
dec
xchg
mov
add
mov
jl
add
data16
xor
movsb
and
out
out
addr16
push
pop
imul
push
add
mov
cli
xor
lds
and
push
loopne,pn
xchg
pop
insl
inc
xor
mov
stc
out
pusha
ds
fwait
rdtsc
icebp
shlb
xchg
stos
inc
jecxz
fildl
ret
mov
sbb
insb
imul
jns
and
sbb
enter
lret
pushf
and
out
push
lret
add
add
lods
cmp
mov
mov
rcr
push
fdivr
dec
inc
fs
aaa
int
push
push
int
insb
sbb
jbe
cli
xchg
cltd
push
cmp
or
jge
popf
sub
cwtl
loop
cmpsb
jg
cmp
iret
sub
addb
pop
ljmp
push
pusha
loop
sbb
sahf
pusha
dec
outsl
stos
pusha
mov
subl
jb
mov
clc
jnp
cmpsl
and
ss
fwait
mov
mov
outsb
enter
mov
in
cmpsl
lods
clc
pop
add
or
pop
sbb
dec
dec
xor
rclb
and
and
and
cmc
cmpsb
pop
icebp
into
daa
shlb
cli
add
push
iret
popf
adc
pop
and
dec
cmpsl
shrl
inc
mov
ret
or
push
shrl
jo
push
negb
test
mov
jo
les
jl
inc
dec
mov
insl
sub
sub
pushf
cmp
mov
lods
jle
add
test
addr16
sub
in
fmull
push
inc
pusha
jg
pushf
jns
jl
jge
cmp
lods
and
cmpl
inc
js
xorb
mov
int
dec
fiaddl
repz
adc
test
xchg
roll
pop
or
aaa
dec
cli
cmpb
sub
pop
movsb
or
mov
in
xor
ret
icebp
and
hlt
xor
adc
dec
or
xchg
scas
push
mov
cli
sbb
add
dec
clc
sub
pop
push
ret
dec
aas
call
adc
mov
pusha
in
dec
jmp
aam
call
popf
push
xchg
sarl
gs
push
inc
sbb
data16
or
insl
push
das
pop
pop
stos
bound
mov
cmp
inc
jns
cmp
jl
mov
dec
or
bound
dec
pop
sarb
out
negl
fisubl
icebp
jg
les
cltd
inc
dec
shll
icebp
inc
push
lods
pop
sbb
bound
popf
loope
je
shll
adc
push
add
mov
aaa
xor
dec
or
rorb
das
cmp
outsb
pusha
lcall
aaa
scas
adc
push
aas
add
lret
mov
mov
mov
cmp
inc
inc
dec
mov
in
out
test
dec
add
ss
sub
and
jo
cmp
lahf
incl
loop
xchg
add
out
popf
gs
outsb
ret
insl
mov
jmp
in
mov
jb
pop
std
int
jmp
mov
pop
inc
movsl
pop
arpl
mov
mov
lret
mov
rsm
arpl
xchg
xor
aam
cs
popa
push
add
ljmp
xor
sbb
push
adc
dec
scas
add
cmpsl
jno
adc
adc
js
loope
adc
test
bound
movsl
outsb
in
inc
cmpsl
outsb
js
mov
jmp
push
xchg
pop
push
jne
test
mov
imul
daa
cmp
sbb
inc
int3
sub
and
cmp
jae
addr16
jbe
fcompl
mov
repnz
test
pusha
rorl
mov
cld
sub
js
ret
enter
push
mov
rcr
or
and
xchg
pusha
popa
cmp
cmp
iret
addr16
out
test
js
loope
xchg
loope
jno
add
stos
push
js
dec
nop
data16
dec
xchg
push
xor
arpl
push
and
mov
loope
mov
lock
xor
data16
adc
in
icebp
rclb
ret
mov
les
aaa
inc
aas
dec
mov
rorb
adc
sarb
or
mov
jbe
push
insb
jb
xchg
mov
fsubl
xchg
lods
push
xor
push
scas
das
mov
pop
sbb
sbb
je
push
inc
jge
test
aas
roll
pop
lods
mov
mov
dec
and
xor
sub
xchg
pop
repz
push
repnz
outsb
outsl
hlt
ficoms
mov
enter
int3
out
and
mov
mov
imul
mov
stc
jb
sbb
sub
sbb
jmp
mov
cmp
mov
sub
cmp
ss
and
xor
pop
ret
add
jp
cmp
icebp
aaa
lret
imul
push
sub
jno
mov
inc
cmp
jae
sub
lcall
inc
je
cli
mov
mov
out
aaa
and
adc
icebp
push
jmp
sub
fidivrl
lds
movsb
mov
push
call
push
xchg
ds
insl
or
or
mov
add
jle
jns
adc
jle
and
sbb
in
push
xor
cli
sbb
jecxz
call
push
movsb
inc
pusha
and
rolb
sti
out
fld
icebp
push
cmp
fldl
in
in
in
mov
inc
mov
adc
pushf
test
pop
push
aam
stc
lock
push
xor
adc
xchg
adc
dec
das
ds
mov
aad
xorb
ljmp
jp
fcompl
pop
xchg
das
xorl
add
sti
test
xlat
cwtl
push
lock
in
pop
insl
jbe
jns
add
sbb
mov
or
pusha
fninit
scas
or
test
jnp
adc
scas
inc
and
icebp
sub
mov
fisubs
bound
imull
cmpsb
jge
and
cmc
mov
push
mov
fdivr
bound
stos
cmp
faddp
cwtl
jmp
mov
jl
pop
pop
leave
out
lds
int3
ret
mov
fdivs
sub
mov
add
negb
mov
pop
aas
scas
mov
mov
arpl
jae
cmp
leave
mul
xor
mov
mov
push
sub
ljmp
push
in
fisubrl
imul
dec
sbb
xor
dec
nop
lods
jl
mov
dec
les
mov
scas
jl
lahf
xchg
add
pop
mov
cmp
dec
jns
movb
mov
shlb
addl
pop
out
aad
cmp
push
rol
mov
movups
mov
add
jno
enter
mov
jle
inc
clc
inc
loopne
sub
into
add
dec
cwtl
sub
pop
xchg
and
cmpsl
mov
push
mov
push
jle
in
outsb
xchg
data16
push
ds
fwait
sbb
push
data16
pop
out
shlb
add
in
dec
test
in
and
arpl
pop
inc
cli
gs
dec
xchg
xorl
sub
popa
movsl
xchg
dec
push
cmc
loopne
inc
mov
push
mov
inc
std
sub
fnstenv
rcll
adc
jo
sbb
pop
and
sub
icebp
fdiv
xchg
out
arpl
push
aas
into
andb
pop
jbe
pop
cli
scas
cmp
pop
out
mov
pop
push
jno
lock
mov
jnp
jno
fnsave
xor
cmp
fcoms
push
adc
pop
pop
xchg
adc
out
dec
out
popa
sub
aas
cmp
cltd
xchg
sbb
fwait
sub
hlt
cmp
sbb
mov
fildl
adc
jl
dec
pusha
jnp
xchg
push
sbb
in
and
inc
imull
imul
adc
mov
adc
adc
scas
sbb
stos
lds
ss
fcomps
leave
lock
gs
or
pop
mov
push
cmp
sub
push
mov
js
shll
mov
popf
inc
push
ror
daa
mov
roll
jg
dec
das
push
and
push
xchg
gs
mov
mov
cmp
push
xchg
xor
inc
cli
cmp
shrl
hlt
cs
push
ret
out
lods
ja
pop
inc
out
outsb
sbb
in
mov
lds
test
lds
mov
int
sbb
jo
sbb
dec
pop
fnstcw
adc
popf
mov
cmp
inc
xchg
pop
mov
inc
mov
adc
fsubp
insl
mov
out
andl
pusha
test
fdivrl
xchg
jmp
xchg
cmp
push
or
or
cmp
xchg
and
xchg
mov
push
pop
jbe
adc
mov
sahf
push
aam
jne
mov
into
nop
lock
stos
ja
dec
not
das
faddl
mov
movl
fdivrs
inc
data16
pushf
pop
add
ret
mov
mov
repz
cwtl
sub
shr
mov
sub
cmp
mov
in
push
adc
fcomps
cmp
dec
cld
jmp
inc
jae
cmpb
xor
bound
or
jb
jle
es
and
ret
int
mov
sbb
lea
push
and
push
lock
dec
scas
push
aas
and
jmp
fisttpl
aas
call
cld
js
packuswb
cwtl
scas
pop
push
pop
mov
fdivrl
push
cld
adc
arpl
jne
push
imul
jne
xchg
add
aaa
test
pop
shll
negl
stos
pop
push
push
mov
dec
arpl
and
xchg
mov
push
jle
jo
cwtl
xchg
sbb
push
lods
add
xorl
enter
jbe
addr16
mov
loop
pop
pop
cmc
insl
shrl
in
in
aas
xchg
clc
mov
popf
daa
mov
dec
movsl
xchg
outsb
aas
dec
std
gs
mov
push
arpl
push
ss
pop
mov
pop
dec
lods
sbb
sbb
out
iret
out
repz
xor
add
xchg
rorb
lods
sub
sbb
out
jmp
mov
movsb
mov
jbe
rolb
je
xchg
inc
dec
aam
repz
cli
push
leave
or
adc
sahf
out
out
mov
sbb
xchg
sbb
out
mov
repz
xchg
cmp
in
jae
adc
pop
add
ds
sub
cmp
aad
mov
loopne
mov
jb
lret
fldt
sub
pop
das
mov
loopne
outsl
mov
pop
xor
divb
or
push
xchg
pop
test
insb
shrl
test
outsl
fisttpl
lret
xchg
inc
nop
popa
and
push
push
add
xchg
mov
pop
call
lock
aam
bound
adc
les
xchg
sub
out
test
mov
rorb
push
mov
sub
jecxz
pop
addb
jmp
lret
stos
lcall
aad
aas
inc
inc
jno
xor
xchg
fwait
lcall
pop
pop
pushf
test
stc
jle
loopne
clc
das
and
inc
sbb
add
pushl
ret
fxch
dec
aaa
shl
inc
mov
outsl
movsb
push
sub
or
add
xlat
sub
xchg
jge
rorl
cmp
dec
stos
cs
test
stc
adc
shll
mov
pop
enter
call
or
outsb
daa
xor
fistl
ficompl
pop
jae
push
sub
mov
gs
lods
es
clc
xor
jne
mov
or
fwait
fwait
arpl
lods
sub
test
xorl
mov
daa
xchg
xor
pop
jmp
movsb
ds
loop
clc
lea
mov
test
mov
iret
test
inc
fistpll
push
movsb
psraw
jcxz
mov
inc
inc
mov
je
and
cld
repnz
adc
dec
mov
xor
fs
arpl
or
mov
or
mov
or
dec
sahf
outsl
cmpsl
jns
fisubrl
outsb
repnz
mov
mov
mov
cmpsl
sbb
and
pop
sub
out
pushf
inc
pop
adc
vmwrite
test
js
mov
insb
mov
push
and
addb
scas
fucomi
and
fdivs
mov
add
mov
pop
xor
cmp
push
fdivl
mov
pop
xchg
push
shll
jnp
or
mov
pop
xchg
in
jge
mov
repnz
push
adc
jne
sbb
mov
js
xchg
fisttps
loopne
mov
js
or
sbb
cmc
out
add
jne
not
cmp
jle
in
dec
inc
pop
add
push
ds
stos
sbb
ret
adc
inc
mov
mov
lahf
or
jo
dec
adc
inc
mov
mov
outsl
add
jno
inc
movsb
push
pop
cmp
cmc
loopne
in
or
pop
jns
stc
push
fldl
mov
xor
cmp
dec
push
das
sbb
lods
dec
xchg
cmp
adc
push
pusha
cmc
loopne
xchg
pop
adc
idivl
sub
loop
pop
mov
sbb
hlt
adc
adc
jl
jg
movsb
shll
xchg
pop
test
xor
arpl
push
int3
lcall
loope
mov
insl
cwtl
mov
loop
jno
dec
xorb
fimuls
rcrb
push
xor
aas
push
aad
addr16
pop
add
mov
or
rcll
dec
pop
adc
inc
jnp
and
out
xchg
push
adc
lods
gs
lret
mov
cmp
adc
les
jne
dec
push
mov
test
jecxz
push
adc
inc
pop
aam
mov
fs
scas
or
push
cmp
push
mov
imul
inc
mov
pop
ret
jbe
or
xchg
mov
inc
push
popa
mov
addr16
lea
repz
andb
shlb
ss
cmp
add
xchg
hlt
pop
cli
xchg
mov
adc
lahf
lods
adc
addb
enter
lret
mov
js
nop
sbbl
in
mov
sub
aad
cs
outsb
jge
mov
popf
sub
mov
sbb
out
popa
xchg
orl
xchg
movsl
lret
sbb
jl
repnz
push
sub
adc
mov
aaa
fisubrs
loope
mov
test
or
ret
mov
int
sbb
testl
out
movsb
pop
fisubrl
adc
popf
mov
or
lds
push
inc
cld
stc
or
cmp
sbb
lds
xchg
xchg
jnp
test
rcrl
out
inc
push
push
mov
inc
lock
loopne
or
push
jbe
pop
jne
push
cmpsl
aad
inc
or
fisubs
and
add
pop
mov
dec
test
imul
sub
loop
imulb
and
sti
lahf
and
jg
enter
xchg
jae
cmpsl
push
loope
mov
scas
bound
lret
je
xor
mov
mov
call
cmpsb
arpl
out
addr16
jge
subb
pop
mov
jp
mov
inc
xchg
cmp
dec
jbe
pop
mov
pushf
idivl
mov
addr16
lcall
dec
mov
xor
outsb
lret
test
leave
cmpsb
adc
pop
push
and
loopne
dec
cmp
scas
cltd
push
or
fcmovne
int
loope
call
xchg
jb
mov
mov
test
cli
insl
repnz
pcmpgtd
sbb
xor
clc
push
stc
out
dec
ja
ret
test
lock
aad
pop
lahf
movb
rsm
das
mov
ljmp
adc
outsl
push
xchg
mov
sub
add
pop
in
push
jae
test
in
or
cmpsb
cmp
loopne
mov
cmp
cwtl
mov
rcrb
outsl
inc
adc
jne
adc
aas
add
pop
mov
adc
lcall
add
mov
rorl
fldcw
add
push
into
adc
sbb
mov
add
pmaxub
ds
xchg
cmp
in
mov
dec
stos
in
mov
cmp
and
into
cmp
lds
jne
cltd
push
lcall
mov
jnp
test
shr
mov
xchg
cmpsl
cmp
in
dec
lahf
pop
cli
push
mov
sub
jae
nop
inc
test
dec
outsl
sahf
ret
repz
out
inc
test
leave
mov
push
leave
out
insb
xchg
sahf
in
sbb
pop
push
pop
adc
inc
std
inc
daa
xor
mov
ja
cmc
sbb
testl
cmpsl
push
cmpsl
adc
cmp
std
stos
das
mov
mov
lcall
xor
pop
sub
adc
and
lods
adc
jae
jmp
shll
movsb
inc
imul
cmp
mov
iret
pop
aam
jg
adc
movsb
outsb
clc
mov
sbb
pop
xor
lds
mov
jno
leave
inc
mov
imul
jno
mov
icebp
cs
popf
lret
pop
cwtl
xchg
mov
lahf
inc
mov
lea
push
jl
fwait
dec
movsl
ret
cmpsl
jmp
mov
ror
in
adc
lods
or
pop
outsl
rcpps
mov
mov
mov
sub
and
and
outsb
in
lcall
outsl
lret
sahf
push
sub
ja,pt
lret
rcr
xor
out
pushf
add
fdivrs
sub
leave
push
out
out
cmp
lcall
push
cltd
enter
int
call
sti
sbb
dec
fistps
in
movsl
add
addr16
shrl
rcrb
cmpsl
fimull
xchg
out
mov
fiaddl
and
xlat
outsb
jmp
in
and
mov
xchg
mov
sbb
icebp
xchg
insl
and
xchg
inc
rolb
fstpt
aam
add
sub
fdivr
jae
push
jae
pop
dec
pop
ja
ds
jp
iret
jl
mov
jnp
int3
dec
jecxz
lock
cmp
cmp
dec
mov
inc
jl
xor
lods
push
scas
mov
inc
cwtl
push
inc
and
dec
pop
call
cs
pop
inc
adc
ror
adc
sbb
insb
scas
jmp
jne
or
fidivl
lret
dec
std
push
and
xor
fisttpll
jnp
movsl
dec
jns
jl
cmp
pushf
mov
pop
lock
pop
xchg
lea
scas
jecxz
xor
push
lods
jb
jp
push
and
push
lret
and
cmpsl
jl
add
mov
cli
push
sbb
shll
and
nop
sbb
mov
repz
mov
adc
sbb
into
jecxz
adc
rcl
xchg
imul
add
jg
sub
mov
ss
cmp
xchg
cmc
not
push
fnsave
cli
or
inc
incb
sub
sbb
xor
cmc
into
dec
xor
shll
push
push
sub
and
mov
dec
jecxz
pushf
nop
insb
hlt
popa
fldl
repz
into
mov
imul
scas
fnstsw
push
mov
xchg
sub
and
sbb
paddusb
jl
jle
cwtl
test
pusha
sahf
mov
faddl
jmp
mov
mov
jo
push
std
pop
test
ds
jge
adc
pop
stos
repnz
push
fnstsw
lods
decl
dec
call
push
cmp
xor
jb
ss
arpl
pop
mov
cmp
mov
pop
hlt
cmc
or
mov
xor
mov
jns
in
cmp
and
mov
inc
dec
lods
es
xor
decb
sbb
stos
sarb
pop
ss
popf
pop
mov
push
lea
sbb
aas
mov
inc
push
push
test
cmp
sub
out
xchg
lret
dec
xchg
xchg
cli
insb
mov
inc
xlat
dec
ss
cmpsb
lret
addb
aas
mov
jmp
fcomps
cmp
test
xchg
add
and
xchg
jae
xchg
mov
push
push
lahf
in
shrl
mov
mov
stos
shll
test
ds
sarl
fimuls
sub
mov
outsb
sti
adc
xchg
xchg
daa
and
pop
ljmp
ss
adc
mov
push
mov
pop
or
sbb
cwtl
aam
xchg
sub
add
in
jne
ret
push
jl
sbb
sbb
xor
mov
jnp
dec
adc
mov
out
cmp
and
add
pop
mov
add
dec
push
inc
fbstp
fsubl
fcoml
mov
cs
sarb
and
jae
adc
imul
mov
inc
push
lods
dec
jne
add
and
lahf
imul
mov
mov
inc
lods
loope
push
idiv
mov
inc
mov
sub
push
add
fcmovbe
pop
mov
scas
push
mov
mov
add
push
fistpll
cs
je
out
cmpl
or
inc
jbe
xor
add
out
jne
jl
cs
mov
shrb
push
cmp
das
pop
push
mov
loop
mov
mov
xor
and
xchg
pop
jecxz
pop
mov
sub
jnp
adc
icebp
lods
adc
sbb
std
push
dec
mov
out
and
mov
cmp
xchg
pop
arpl
cmc
pop
fsubrl
mov
sti
mov
fcoml
fistpll
daa
mov
xchg
pop
and
imul
cmp
add
pop
pop
jmp
loop
es
rorb
mov
in
loope
outsl
push
xor
xor
mov
ret
in
push
push
les
ja
rcr
dec
outsb
mov
sbb
divb
fldl
xchg
and
add
mov
push
dec
jle
xchg
jne
sub
in
test
or
les
sbb
add
push
push
popa
mov
mov
jb
adc
pop
and
adcl
cmp
jg
and
test
jae
adc
movsl
aas
dec
and
pop
cli
insb
test
dec
cltd
inc
lock
sub
xor
lcall
imul
xchg
movsb
push
xlat
mov
jbe
mov
int
xlat
push
mov
dec
negl
inc
loopne
sarl
imul
jb
mov
nop
int3
leave
in
add
mov
popa
mov
in
in
sub
into
insb
add
and
push
inc
and
out
dec
xor
adc
pop
mov
cmp
jmp
inc
push
stos
popa
sub
arpl
shlb
js
push
das
jns
inc
mov
sub
sbb
bound
jns
into
imul
mov
and
and
stos
cmp
jge
mov
popf
push
insl
push
and
popf
jae
inc
or
andl
test
loopne
negb
mov
jg
flds
sbb
mov
test
ja
push
lret
mov
xor
jp
movsb
jecxz
fucomp
outsl
scas
xchg
negb
imul
cmpsb
mov
cld
mov
or
mov
insb
push
push
inc
andl
push
movsb
sub
bound
ret
jg
cmp
xchg
fisubrs
push
lock
fs
in
cmpsb
cmc
jns
clc
or
sti
in
cmp
mov
dec
nop
rcrb
in
or
xchg
fmul
out
test
rolb
mov
xor
out
icebp
or
lea
xor
xlat
jmp
push
mov
imul
les
test
es
mov
push
pushf
test
pinsrw
idivl
xchg
js
dec
mov
xor
jecxz
fidivrl
push
add
leave
popa
mov
and
inc
xchg
mov
shl
pop
dec
add
jg
sti
test
mov
dec
dec
fisttpl
dec
fwait
daa
cmp
jecxz
in
mov
mov
sahf
ss
mov
cmp
in
fidivl
push
adc
fiadds
jp
lock
adc
fwait
addb
out
test
push
mov
pop
jecxz
add
test
les
test
hlt
add
push
mov
pop
xorb
les
gs
adc
lds
pop
pop
and
subl
mov
jnp
in
sahf
inc
scas
lock
inc
mov
or
xchg
jnp
and
orb
out
insl
pop
fdivp
xchg
or
in
cmp
popf
popw
dec
sti
int
cmp
in
incl
mov
or
mov
or
add
cmp
cmpsl
in
in
jmp
mov
enter
inc
mov
jns
push
testl
pop
cmp
xor
aad
sbb
cmp
xor
jo
xor
in
mov
test
repz
adc
mov
push
ret
cld
js
loop
dec
repnz
scas
mov
ret
in
call
cld
push
ret
pushf
ret
jecxz
test
inc
data16
mov
push
push
std
int3
popa
add
jnp
addr16
popf
mov
dec
sbb
pop
aaa
jp
cmpsb
pop
sub
popa
sub
in
cwtl
stc
addw
sub
ss
pop
stc
and
mov
in
adc
aas
shl
xor
lods
xchg
xor
inc
mov
std
inc
sbb
mov
pop
mov
lods
pop
add
pop
mov
js
cmp
imul
ja
xor
pop
or
inc
pop
in
leave
lods
dec
std
mov
or
loop
cmp
push
out
out
test
mov
mov
mov
inc
das
aas
jne
test
jns
add
adc
insl
sbb
popf
xor
pop
jp
dec
cmp
shrd
pop
sbb
push
push
mov
mov
dec
scas
adc
lahf
cltd
lret
in
xor
lock
notb
fst
xor
fldt
jge
xchg
add
dec
xor
xor
addr16
or
mov
arpl
out
mov
mov
sbb
inc
jno
fs
dec
int3
dec
jnp
or
jno
add
jg
out
ret
mov
jno
sub
pushl
test
and
push
fwait
add
pusha
sub
jae
inc
push
xor
cwtl
js
xor
push
es
test
es
inc
fisttps
stos
add
lret
adc
xor
push
cmpsl
sbb
call
xchg
sub
xor
pusha
add
lock
mov
mov
popa
loope
aad
mov
pop
add
imul
mov
xchg
inc
fwait
aaa
cld
sbb
cmp
sbb
sbb
xchg
push
xchg
pushf
cmp
jge
mov
pop
in
xor
cmpsb
hlt
fdivp
mov
lahf
out
push
lods
inc
or
jecxz
pop
insl
clc
adc
not
in
sbb
call
or
in
xor
inc
aaa
movsb
fcmovu
ss
loopne
in
fmull
inc
push
pop
adc
xchg
je
sub
mov
lods
inc
leave
stc
dec
xor
daa
mov
push
fcomp
ss
addl
jnp
jae
arpl
test
or
loop
mov
inc
cmp
inc
cmp
es
data16
xor
int
test
cli
je
aas
xor
pop
add
dec
xor
inc
fistpll
mov
out
adc
dec
inc
cmp
ficoml
mov
es
xchg
int
mov
fbstp
lahf
popa
jle
push
icebp
shrb
xchg
cmpsl
xor
dec
inc
push
out
add
jg
idivb
in
push
pop
out
decb
leave
jno
adc
and
and
imul
mov
shlb
cmp
mov
aam
push
mov
mov
in
jo
xchg
inc
xchg
stos
and
aad
mov
movl
cmp
cmp
mov
push
and
bound
jmp
jge
mov
pop
cmc
pop
dec
xchg
mov
and
cmp
jge
arpl
inc
sub
jns
adcb
xchg
arpl
push
mov
cmp
cmpsl
lahf
inc
jg
movsb
stos
xor
pop
lcall
dec
pop
rcrl
pop
outsl
or
or
gs
std
dec
pop
dec
fsubr
fistpl
ja
outsb
cmovo
and
jne
dec
into
push
pushf
fiaddl
xchg
xchg
mov
mov
into
mov
inc
in
in
in
pop
test
pop
out
hlt
popa
jne
imul
xlat
sbb
ffree
pop
xor
addl
popf
cmp
sub
add
adcl
and
clc
add
or
xlat
mov
push
pop
ret
and
jmp
iret
cmc
push
mov
mov
movsl
push
in
and
scas
sbb
cmp
cli
xchg
sahf
pop
js
jl
pop
inc
mov
fcmovnb
sbb
nop
and
in
or
nop
out
mov
outsl
mov
and
inc
dec
jne
jge
xchg
pop
pop
movsb
fcom
mov
int3
aad
imul
xchg
mov
lret
out
movsb
pop
lods
loopne
scas
inc
pusha
mov
addb
add
scas
inc
xchg
jl
xor
add
lock
repz
lock
dec
dec
out
outsl
sub
pop
push
dec
out
or
or
lret
xchg
sbb
notl
push
lods
adc
mov
idivb
fistpl
xchg
sbb
add
stos
adc
cmp
mov
pop
sahf
add
inc
and
mov
mov
popf
fwait
mov
outsl
call
mov
in
sub
inc
pop
cmp
ror
lods
sbb
jo
popf
inc
sub
cmp
in
hlt
sub
jg
pop
and
sarl
outsb
fwait
movsl
inc
dec
add
lods
mov
fbld
int3
cltd
das
dec
call
insb
or
add
fcmovb
jne
insl
push
pushf
sub
lea
sbb
or
adc
lahf
int
in
shlb
movsl
rolb
cmp
cmpsb
mov
stc
sub
std
xchg
mov
cmpsb
add
inc
ror
pop
out
mov
mov
add
inc
or
notb
push
sub
adc
push
loop
pop
ret
out
sti
dec
cltd
dec
call
xor
pop
faddl
mov
ret
xchg
cltd
dec
cmc
mov
mov
push
insl
mov
xor
and
loope
and
or
inc
xchg
leave
add
inc
add
test
decl
adc
int
popf
jo
jle
and
cmp
iret
add
sbb
testl
sahf
gs
mov
cld
mov
ljmp
sahf
nop
cs
inc
mov
sub
sub
std
pop
icebp
lea
sub
lods
les
scas
lret
daa
in
adc
pop
ret
fucom
aad
add
lea
loope
adc
repnz
es
jne
jg
pop
out
sahf
xlat
push
cld
inc
jecxz
jne
fbld
lods
xchg
mov
test
movsl
divl
cmc
cltd
and
push
mov
dec
imul
popf
cli
dec
or
lods
sbb
xor
lret
lcall
jecxz
add
out
mov
mov
imul
les
sub
push
add
add
pop
inc
or
fimuls
mov
xor
mov
nopl
push
jb
mov
jmp
and
sbb
cli
cmp
and
ljmp
dec
call
jmp
jmp
je
je
imul
adc
xchg
jmp
sub
xor
xor
movsl
roll
xchg
push
test
xor
jmp
ds
mov
enter
dec
mov
sbb
jmp
mov
movsl
int
pop
cmp
sti
jle
rclb
fcomi
xor
xlat
xor
lods
int3
imul
addb
xor
test
dec
in
loopne
shll
mov
ss
mov
inc
pop
pusha
loop
inc
xchg
sbb
xor
mov
or
into
iret
shl
pop
mov
lods
or
jecxz
les
movsb
scas
add
push
mov
iret
popa
dec
xor
ret
je
ret
add
test
lods
testb
cs
leave
and
sbb
scas
scas
or
jnp
andb
andb
inc
aam
mov
arpl
push
add
addr16
and
lcall
lahf
movsl
pop
and
pushf
dec
push
push
js
inc
dec
movsl
ja
mov
into
pop
push
mov
push
and
cmp
mov
sub
jno
pop
mov
xor
loop
lcall
inc
pop
hlt
cmpsb
xor
and
adc
pop
pusha
sub
rol
stos
jge
leave
popf
jmp
or
mov
icebp
pop
pushf
cmp
dec
into
in
dec
mov
sub
inc
and
mov
in
xchg
pushf
hlt
loop
mov
inc
sbb
addr16
test
and
aas
loop
and
fstl
in
pop
push
mov
jp
inc
in
mov
insb
js
push
mov
or
jno
push
leave
pop
push
jl
inc
fldpi
fsubr
aaa
pop
stos
lahf
enter
xor
pop
sbb
sahf
push
stos
outsb
imul
movsl
cmpsl
mov
push
jmp
mov
mov
cmpsl
mov
rorl
dec
mov
push
icebp
into
call
iret
pop
pushf
mov
das
icebp
repnz
call
dec
outsb
sub
add
adc
adc
stos
lock
dec
fwait
and
lcall
insb
data16
cmp
ljmp
dec
int
sbb
and
and
mov
bound
decl
sarb
dec
pop
fs
xchg
jae
cltd
lea
dec
cmp
shlb
je
scas
sbb
push
mov
cmp
in
add
into
xor
les
gs
ds
imul
int
jg
sub
cli
in
inc
daa
gs
mov
pop
loopne
jns
push
enter
movsl
cmp
fisubl
add
lahf
xchg
vpavgw
leave
or
addr16
popa
push
aaa
adc
inc
sahf
dec
lds
pop
jo
mov
cli
xlat
sub
les
xchg
cmc
push
add
or
push
lret
mov
push
push
xor
jno
scas
xchg
jae
xchg
mov
dec
rol
mov
out
xor
fnsave
and
push
xchg
jnp
sub
mov
popf
outsb
xor
cli
data16
in
loop
sub
mov
add
and
mov
popf
add
mov
xchg
enter
insl
and
imul
add
xchg
out
and
add
orl
xchg
push
lahf
or
cmp
test
mov
aaa
das
andl
pop
data16
fdivs
imul
enter
mov
inc
inc
inc
adc
xchg
xchg
aas
imul
push
inc
mov
xor
stos
xor
mov
mov
mov
sbb
push
or
gs
sub
lret
push
ret
xlat
inc
mov
pop
adc
xor
xchg
pop
jns
test
pushf
popf
addl
adc
out
jmp
stos
fcmovnbe
movsb
out
push
mov
xchg
cmpsl
daa
jge
out
incl
shl
in
mov
jne
add
add
inc
xor
aam
fidivrs
mov
shlb
fsub
stos
cltd
mov
xor
and
dec
ljmp
mov
pop
xchg
xlat
or
xchg
xchg
mov
cltd
xor
pop
add
xchg
xchg
out
popa
fcomps
sbb
shlb
mov
int
xchg
add
mov
lods
scas
ja
dec
fdivp
push
dec
push
in
in
pop
sbb
pop
out
imul
xchg
ret
scas
jge
sbb
mov
outsb
inc
xchg
sub
pop
sti
imul
xor
or
inc
jl
lea
xchg
sub
int
xor
imul
inc
mov
jge
jecxz
mov
xchg
push
idiv
cmp
cld
movsb
mov
enter
sub
insb
xchg
orb
push
lea
je
std
push
lds
mov
lock
dec
sbb
adc
xchg
outsb
mov
inc
scas
jae
and
fists
imul
dec
ja
adc
xor
mov
out
pop
mov
stos
shrl
out
mov
movsb
insl
stos
jp
xor
xor
into
xor
mov
mov
test
jmp
out
dec
push
adc
test
inc
jae
sbb
jae
cld
pop
adc
add
ffreep
imulb
jnp
dec
or
sbb
out
test
das
in
mov
mov
dec
ror
int3
xlat
jne
add
fmull
jl
loopne
jns
fcmovb
cs
inc
sbbb
fwait
push
cmp
cld
loope
xchg
inc
lods
call
insb
pop
pop
inc
inc
out
sbb
push
jne
lcall
and
mov
inc
and
add
flds
lds
shlb
scas
adc
xchg
into
cmc
adc
sbb
enter
cmpsl
shll
xchg
loop
icebp
cwtl
cwtl
sub
fsubrl
xor
jb
mov
add
push
or
cmp
nop
cmpsb
ffreep
out
xor
push
jo
sahf
xlat
mov
hlt
dec
lds
and
xor
mov
cli
sahf
jge
repnz
loop
mov
dec
popa
inc
push
cwtl
pop
push
ret
enter
add
mov
add
jecxz
xchg
rcrb
test
cs
lret
cmp
mov
mov
or
dec
jecxz
dec
popa
adc
mov
or
pop
adc
movsb
xor
ret
push
mov
sbb
daa
shrb
adc
fmull
vandnps
mov
and
clc
pop
push
and
loopne
and
sbb
scas
popa
push
cmpsl
or
test
les
push
bound
arpl
lahf
mov
popa
loope
dec
push
imul
enter
dec
sub
jecxz
sub
out
inc
mov
mov
push
test
nop
push
adc
daa
cmc
dec
pop
sarl
fstpt
sub
pushf
lahf
divl
or
or
addr16
mov
mov
jo
pop
sbb
arpl
dec
in
inc
shl
outsl
das
pop
lock
adc
les
xor
mov
sti
cmpsl
pop
fwait
ljmp
popa
mov
cltd
sub
push
pop
mov
pushf
xchg
mov
imul
das
mov
daa
fld1
and
sarl
add
neg
stos
jle
int
fsub
gs
fstps
cwtl
pop
push
push
xchg
lret
loop
xchg
pusha
xor
fs
loopne
adc
jbe
jae
add
daa
dec
shll
and
pop
jns
iret
lods
daa
loop
inc
pop
add
mov
jl
pop
mov
jb
test
fidivrs
icebp
pop
jg
mov
sarb
sbbl
xor
jae
jnp
ror
and
pop
cvtpi2ps
fldl
sar
sbb
xor
pop
aaa
xor
sub
mov
pop
push
shll
add
and
push
sarb
and
repnz
adc
mov
fstl
push
dec
fimuls
fistl
add
dec
out
rcr
mov
jecxz
cmp
jmp
jb
jae
jmp
lahf
ljmp
dec
pop
cmp
std
int3
mov
mov
mov
loope
scas
add
mov
dec
shll
mov
scas
cmpsb
push
xchg
xor
dec
sbb
les
xor
dec
jg
fmuls
dec
and
push
sub
mov
pop
push
cmp
insb
scas
sub
hlt
adc
sbb
jmp
push
bound
mov
xor
cmp
out
cs
mov
in
dec
xor
mov
xchg
sbb
lds
jno
mov
and
lea
ljmp
icebp
mov
inc
sarl
orl
push
int3
pop
cld
out
stos
sub
clc
insb
mov
push
pop
mov
or
imul
lods
dec
sbb
pop
mov
outsb
inc
mov
out
push
movsb
push
inc
xchg
adc
jne
or
mov
jge
cmpsl
mov
dec
or
mov
and
std
sub
lcall
push
push
stc
xchg
fstps
push
inc
out
mov
js
mov
xchg
or
push
dec
xor
sub
pop
js
push
outsl
sbb
lahf
cld
add
or
mov
stc
mov
cmp
push
jge
cld
shll
data16
out
mov
ja
psubsw
mov
ret
cmpsl
fstl
test
in
xchg
jb
pop
pop
push
jo
inc
mov
jnp
mov
inc
mov
dec
push
loopew
add
lds
pop
repz
cltd
std
mov
testl
or
pop
or
jbe
aaa
dec
jns
pop
mov
jg
shld
cmpsl
jg
xor
and
lahf
cmpb
inc
fisttpl
fimuls
push
imul
das
and
inc
adc
mov
add
rcr
lods
inc
shr
pop
adc
dec
imul
adc
hlt
test
rcrb
hlt
xor
enter
pop
push
cmp
xor
iret
push
cli
fists
aas
movsb
int
out
pushf
inc
in
mov
daa
jns
mov
scas
in
push
push
cmp
nop
call
cli
dec
inc
in
sarl
dec
lahf
ljmp
sub
das
pop
jne
or
out
shl
sarb
outsb
cmc
scas
sbbl
add
inc
mov
xchg
adc
shll
xchg
or
jge
repz
dec
cmp
sti
icebp
scas
rep
mov
insl
loop
pop
dec
outsl
push
cmp
hlt
jbe
adc
ljmp
pushf
aas
dec
lret
and
lret
repnz
xlat
inc
add
push
or
jno
jmp
out
rolb
cmpl
cmp
rorb
popf
jns
fsubrl
mov
insb
sub
enter
lret
test
outsb
out
out
inc
in
shlb
lods
xchg
and
fcmovnbe
xor
cs
inc
lds
adc
fdivr
rcl
je
std
jecxz
xchg
push
sbbb
jl
push
mov
jmp
outsb
xorl
popf
in
cmp
or
mov
lret
mov
jg
cld
sub
ret
push
sbb
and
inc
in
and
pop
inc
cmp
out
cmpsl
push
test
add
jae
orb
inc
sub
js
pusha
mov
daa
push
test
push
enter
arpl
insb
stc
mov
push
outsl
push
mov
cli
push
popf
inc
hlt
mov
adc
inc
mov
add
lcall
es
fmul
xor
jmp
cmpsl
push
mov
call
fildl
inc
outsl
sub
pop
xor
hlt
sbb
leave
das
inc
push
dec
xchg
clc
jmp
dec
jno
dec
hlt
testl
dec
jp
push
jge
push
repnz
fs
test
nop
xor
or
aad
mov
add
pop
popf
jle
ljmp
push
dec
lds
mov
mov
xor
pop
xchg
inc
cli
hlt
ss
inc
mov
add
pusha
aaa
loopne
cmp
cltd
gs
add
iret
lods
dec
popa
gs
call
and
addr16
call
cmpsl
inc
int3
frstor
sub
push
lahf
cmp
and
mov
mov
fldenv
xchg
push
js
popa
in
sub
and
sub
movsb
and
pop
leavew
call
cmc
pop
jnp
mov
mov
fnstcw
dec
push
into
js
int
out
dec
jnp
mov
pop
jecxz
fwait
cltd
jnp
int3
ss
sub
and
add
add
mov
sub
fdivr
jge
pop
pop
test
mov
movsl
xchg
push
dec
cmpsl
outsl
jnp
xlat
ljmp
jl
stos
ret
int3
xchg
sbb
test
hlt
std
cmp
xor
negb
mov
decl
sbb
jp
mov
mov
cmp
add
mov
test
mov
push
push
mov
cmp
pop
test
mov
lret
sub
xor
sbb
add
jno
mov
cwtl
cltd
mov
test
out
or
sbb
rcrb
scas
sbb
int3
in
insl
repz
fbstp
cld
xchg
iret
dec
or
idiv
incl
nop
out
pop
int3
test
insb
je
adc
negl
ss
out
loop
pop
mov
sbb
loopne
xchg
scas
test
int
fadd
or
xor
and
adc
imul
aas
rclb
sbb
mov
les
xchg
sub
and
xchg
popf
sbb
adc
ss
push
cli
xchg
mov
hlt
sbb
push
fists
or
and
jle
or
addr16
loop
movsb
hlt
xor
inc
add
insb
cld
pop
push
xor
scas
sub
push
jle
xchg
fisttpl
leave
mov
jne
add
sub
mov
daa
mov
into
dec
sti
and
push
je
pop
into
iret
fmuls
int
in
xor
adc
cmc
jae
jl
sub
shlb
or
sub
cli
jne
push
dec
xchg
sub
lahf
out
push
shll
inc
push
inc
gs
cmp
inc
sbb
push
inc
int3
dec
jno
dec
lods
xchg
rolb
and
add
or
in
fdivrl
adcl
xlat
pop
cld
addl
inc
repz
pusha
in
or
cmp
loope
push
pop
iret
ret
orb
cli
scas
adc
loop
movsl
andl
ss
mov
cmp
mov
and
push
sti
cmp
mov
std
pop
test
or
mov
test
jns
dec
sub
movl
push
sub
push
rorl
jle
dec
mov
adc
andl
loope
cmp
pop
push
jle
xchg
and
into
cld
or
jae
movsl
ret
fildll
push
push
and
movsb
adc
lret
dec
mov
lds
out
mov
test
and
pusha
scas
cwtl
popa
das
push
push
push
insl
cmpl
sbb
inc
add
sbb
sub
outsl
cmp
into
push
and
push
ljmp
mov
int3
inc
inc
push
lcall
push
sub
mov
or
leave
stc
outsl
lcall
scas
ljmp
sbb
in
push
das
lods
xchg
push
out
jp
mov
dec
mov
adc
jo
xchg
daa
idiv
inc
shrb
cmpsb
subb
sub
test
mov
out
scas
sub
mov
inc
enter
mov
int3
test
jl
xchg
out
mov
dec
int
je
cmp
jno
mov
pushf
in
jb
mov
xor
adc
scas
mov
xchg
xchg
mov
push
das
out
mov
cmp
mov
inc
popa
xchg
stos
push
push
dec
xchg
mov
clc
push
cwtl
cmp
int3
mov
mov
push
adc
pop
mov
mov
loop
mov
mov
adc
mov
lret
pusha
add
icebp
adc
push
push
push
stos
out
imul
add
mov
sbb
cli
lods
mov
insb
in
inc
cmp
shl
adc
fidivrs
push
mov
cmpsl
jecxz
mov
jge
stc
fistpl
or
clc
lret
inc
mov
imul
scas
scas
cmp
lods
xchg
call
add
cs
ljmp
or
lock
lods
scas
jmp
arpl
add
mov
cmp
sbb
aad
sub
push
mov
or
mov
sub
cld
sti
push
and
sahf
out
scas
icebp
and
test
addr16
sbb
es
adc
mov
pop
fildll
inc
jge
clc
cmp
adc
xchg
push
push
adc
pop
mov
sub
mov
mov
xchg
push
cmp
out
fldcw
clc
lret
mov
fs
xlat
inc
je
loope
mov
outsl
into
and
dec
push
stos
fimull
imul
dec
iret
cmpsb
push
xchg
sbb
cwtl
testl
sub
xchg
ficoms
mov
or
and
and
bound
mov
push
lcall
mov
clc
push
lods
dec
orb
xor
sub
jae
pop
rcrl
or
pop
es
das
xchg
ds
cli
movsl
mov
dec
lods
jl
or
mov
cmp
xor
data16
xor
pop
imul
loope
out
es
dec
rolb
sbb
push
daa
inc
loopne
ss
mov
fiaddl
fsubrl
jno
inc
dec
push
adc
inc
loopne
mov
mov
dec
lcall
xor
sarb
xchg
mov
outsb
cld
adc
loopne
sub
leave
add
mov
adc
push
push
lea
mov
pop
stos
stc
roll
jo,pt
vorpd
popf
jmp
push
mov
pusha
sub
mov
mov
mov
xor
mov
inc
data16
xlat
sbb
jno
std
arpl
add
sahf
dec
loopne
sub
sldt
test
jb
iret
xchg
aaa
cmp
sar
sub
xchg
inc
shr
mov
ljmp
push
ret
mov
sbb
enter
iret
xchg
add
call
fists
adc
xorl
mov
inc
add
stos
inc
aaa
cld
call
push
data16
int3
fistpll
je
xchg
shr
push
cli
lock
shl
push
call
sbb
push
inc
mov
mov
and
mov
mov
movsb
fmulp
leave
sti
test
leave
mov
mov
andb
test
js
sbb
pop
inc
cwtl
shrb
jns
repnz
push
mov
push
test
nop
aam
pop
jmp
adc
inc
lea
out
pop
das
adc
aad
or
icebp
push
push
ret
mov
ficoml
shrl
mov
mov
and
repz
pop
movsb
dec
fdivp
rcrb
sbb
lahf
add
pop
xor
stos
dec
xor
imul
cwtl
cs
fisttpl
sbb
shlb
xchg
ja
mov
xchg
mov
mov
lods
daa
inc
call
push
sbb
jge
mov
cwtl
mov
or
fst
inc
or
frstor
xor
push
idivb
adc
jo
out
push
or
fcoms
mov
sarl
int
decb
ret
dec
adc
xor
xchg
dec
fwait
lcall
fs
int
leave
xor
inc
fcoms
loopne
cmpl
fbld
dec
in
psubsb
and
cmc
jae
aas
adc
push
adc
mov
iret
hlt
movsl
xor
sub
repz
sub
mov
or
cmp
xor
xor
jl
pusha
push
cmpsb
stos
mov
push
orb
test
mov
jb
cmp
es
icebp
jmp
inc
hlt
out
xchg
adc
insl
jl
mov
jne
adc
cmp
jle
inc
int
dec
dec
xchg
push
pushf
push
loopne
iret
lcall
stos
fsubrl
movsl
jmp
and
aas
sub
js
push
cwtl
mov
or
jno
test
cmp
lods
push
mov
jb
adc
inc
pop
xchg
and
fwait
clc
jl
sub
fsubp
mov
loopne
inc
cmpsl
mov
sbb
jp
scas
add
mulb
lret
pusha
in
gs
mov
dec
mov
and
mov
enter
cmp
repz
jl
push
lret
je
sub
das
nop
push
mov
outsl
dec
adc
mov
adcl
call
jns
jbe
movsb
repz
out
sbb
pop
sbb
loopne
sahf
in
in
shrb
inc
mov
out
sub
btr
lock
lahf
jae
daa
subb
mov
push
iret
xor
sub
pop
push
pop
movsb
lahf
mov
fucom
lret
pop
pop
in
xor
jle
pop
mov
rolb
fdivs
aas
movsb
shll
cli
int
test
and
inc
sub
bound
fs
xor
jnp
js
mov
popf
fdivrs
out
mov
inc
adc
pop
xor
push
aam
outsl
pushf
test
xchg
cmp
incl
jg
negb
fucomi
mov
js
test
lods
movsl
test
ljmp
inc
xchg
outsb
cli
fwait
cmpsl
dec
mov
cld
mov
and
subl
jae
ret
and
xchg
cmp
xor
mov
rcr
or
rcrl
rolb
jae
dec
cmp
ja
std
cmp
push
rol
mov
mov
jecxz
xor
adc
lret
cld
mov
adc
mov
xchg
out
into
sub
and
and
fistl
and
push
sub
xchg
push
xor
jge
insw
test
sub
jns
push
movl
aad
and
gs
mov
addr16
jne
mov
leave
xchg
cli
loope
ljmp
push
mov
inc
int
dec
mov
or
xchg
pushw
cmp
mov
sarl
lds
push
mov
aaa
xchg
lcall
int3
pop
mov
fcmovb
pop
or
mov
mov
xchg
leave
cmp
sarl
and
cmpsl
test
jno
xor
mov
dec
outsl
and
dec
addr16
pop
hlt
ds
sbbl
gs
dec
cld
inc
imul
fnstcw
pusha
and
dec
pop
ds
sub
adc
fnstenv
fimuls
scas
push
xchg
arpl
sbb
iret
xchg
inc
lret
leave
xor
jecxz
sarb
xor
roll
lods
cmp
adc
int3
xchg
lock
pop
negl
mov
add
mov
ficompl
iret
imul
enter
and
ja
lcall
adc
sub
rorb
sbb
les
fnsave
inc
fidivrs
in
push
cli
ds
dec
xchg
cmp
outsl
popf
sbb
es
roll
xor
pusha
push
mov
outsl
stc
orb
jo
test
and
add
inc
into
outsb
jne
jle
mov
imul
loop
fwait
jmp
jmp
cmp
and
or
nop
popa
nop
push
sbb
xor
jbe
jg
adc
inc
in
lea
popf
inc
inc
sbb
mov
insl
scas
adc
push
mov
out
jne
cltd
fs
jns
add
mov
mov
fwait
popa
lret
inc
fs
mov
outsb
dec
jecxz
es
das
movsl
imul
call
and
fimuls
popa
dec
cli
movsb
popa
push
test
in
fld
sahf
and
mov
cmc
mov
push
insl
lds
xor
inc
sbb
clc
ret
xor
mov
loopne
stos
push
dec
mov
dec
and
jbe
lock
pop
push
and
push
ret
inc
ja
jge
insl
adc
outsl
xchg
popa
movsb
ljmp
xchg
mov
repz
clc
inc
and
sti
cmc
push
xchg
push
dec
xchg
cmp
push
adc
sarb
cwtl
cmpsb
and
cmpsl
js
stos
iret
dec
shlb
jo
mov
xor
clc
dec
mov
mov
push
sub
or
fsts
aam
pushl
push
orb
jo
or
enter
dec
es
pop
bound
sbb
lds
jle
shlb
ja
push
push
into
push
dec
xor
push
ds
bound
mov
sub
jl
movsb
aad
mov
push
pop
cmpsb
adc
imull
and
xchg
and
retw
int
add
data16
add
adc
sbb
hlt
mulps
mov
aad
ret
iret
push
stos
fnstenv
mov
adc
pop
xchg
mov
fnsave
push
adc
cmp
pop
xor
ret
notl
or
cmpsl
sarl
mov
orb
insl
or
push
pop
lds
add
push
imul
int3
mov
in
out
scas
cmp
dec
lcall
push
pop
add
addr16
pop
loop
add
mov
ljmp
mov
imul
fdivl
movsl
pushf
mov
push
inc
je
ja
dec
cmpl
push
fidivl
pushf
das
sbb
rcrl
out
push
xor
sbb
inc
jae
in
data16
cmp
mov
cmpsb
cmp
push
ror
and
or
push
or
cmp
rolb
scas
push
movsl
push
pop
xchg
mov
xchg
mov
fadds
sarb
in
inc
icebp
and
sbb
inc
add
leave
cltd
jo
out
lahf
jg
inc
stos
mov
sub
cmp
dec
xchg
push
int3
xor
add
lock
out
and
pop
lahf
fldcw
bnd
push
out
mov
popl
and
sti
das
popf
cmpsb
cld
xchg
pop
or
mov
flds
dec
je
stc
int3
sub
int3
lock
inc
lock
fisubrs
ja
adc
dec
lret
mov
adc
mov
jne
insl
pop
xchg
loopne
adc
ljmp
fldl
mov
ficoml
icebp
mov
or
adc
xor
cs
je
imul
lret
pop
popf
jb
imul
cli
lock
jno
and
push
mov
mov
mov
sti
icebp
sbb
icebp
test
out
inc
cmp
push
dec
or
dec
cmp
push
insl
add
mov
movsl
das
cmp
hlt
sub
not
roll
cld
rorb
pop
mov
mov
clc
fmuls
stc
mov
mov
pop
mov
icebp
or
testl
dec
inc
loope
pop
lahf
sti
jl
enter
sbb
xor
pop
aad
rcrb
inc
test
repz
pop
and
icebp
sub
lea
ret
lret
add
sub
adc
or
aaa
sarl
sbb
cmpsb
addb
adc
xchg
sbb
inc
xor
jmp
xor
shll
test
std
sub
jb
and
aas
addr16
and
xchg
cmp
mov
imul
pop
in
xchg
or
mov
push
pop
lret
xor
lcall
addb
cmc
pop
mov
int3
out
lret
mov
into
dec
sub
mov
imul
outsb
lea
cld
fsub
mul
rcrb
shrb
fs
cltd
dec
add
ds
rorb
in
sarb
scas
jge
jnp
pop
les
ja
scas
notb
iret
sub
and
test
ja
pop
scas
push
ds
xor
jecxz
shlb
adc
cld
pop
sti
insl
std
adc
xor
jb
adc
stos
add
or
rorl
push
dec
int3
cmpsl
mov
sbb
imul
cld
mov
push
xchg
imul
push
out
add
ja
out
or
fneni(8087
out
mov
aas
out
loopne
push
xchg
mov
in
nop
dec
daa
nop
adc
ret
fsubrl
clc
dec
pushf
pop
jb
dec
and
mov
mov
lahf
adc
push
aas
je
add
cltd
inc
repnz
xlat
mov
ja
cmp
pusha
adc
cmpl
in
and
push
xchg
sub
add
push
jg
in
cs
sub
pop
shl
out
jle,pt
dec
push
imul
into
push
frndint
les
adc
pop
xchg
inc
pop
xchg
stos
lret
push
ret
mov
sbb
clc
add
pop
ljmp
loopne
mov
xor
push
stos
int3
ja
fidivrl
sahf
popf
rolb
inc
jb
cmp
aaa
push
push
pop
movsl
push
mov
cmp
out
push
push
mov
jmp
adc
adc
daa
mov
data16
mov
and
xchg
push
lods
clc
xchg
into
dec
adc
pop
mov
rcll
lds
jo
repnz
fcmovnbe
in
pop
dec
in
addr16
ljmp
ret
mov
mov
ret
and
dec
add
dec
mov
xor
insb
adc
lods
data16
jle
mov
sbb
lea
ss
ljmp
call
pop
mov
js
std
or
cs
mov
push
adc
fucomp
iret
jns
push
inc
cs
push
mov
out
add
cmp
add
outsl
lock
dec
cmp
sub
aaa
xor
ja
lcall
stc
jecxz
mov
sahf
int3
call
scas
fisttpl
mov
jnp
test
or
jp
mov
and
stc
inc
fmull
mov
fdivrs
pushf
scas
push
push
pushf
ret
pushf
fiadds
inc
mov
mov
fsubs
or
movsl
fs
sbb
and
pop
enter
mov
pop
and
imul
sub
inc
aad
or
pop
mov
enter
sub
add
sbb
aad
std
adc
or
lret
adc
cld
cmp
mov
dec
jne
jle
pop
test
lods
dec
xor
std
dec
or
mov
enter
mov
fs
lret
sbb
loopne
mov
pop
je
outsl
jbe
adc
push
jb
mov
fcomps
fstps
jne
sbb
fists
lret
mov
je
lods
pop
push
cmp
sbb
imul
and
mov
jg
pop
sub
add
xor
xor
lret
loopne
inc
push
fadds
fidivl
push
roll
xchg
data16
loope
mov
sbb
ja
mov
in
ss
movsl
xor
fimull
movsb
pop
fimull
cs
leave
sbb
push
dec
movsl
push
jne
push
rclb
dec
fbstp
aas
jp
adc
push
cltd
repnz
or
adc
dec
lcall
xor
out
sbb
xchg
pop
or
jne
mov
std
ror
sub
cs
jbe
test
or
icebp
mov
shrb
mov
and
rcrb
push
lret
jbe
xor
popf
in
and
out
and
je
iret
push
mov
outsb
jecxz
decl
stos
into
sbb
inc
pop
out
sbb
mov
pop
lods
cmp
ret
xor
ret
dec
cmp
mov
lahf
dec
call
mov
cmpsl
mov
or
mov
rcll
dec
ret
cmpsl
sub
xchg
sbb
or
jmp
cmp
sub
movsl
stos
ljmp
call
enter
jg
in
or
add
push
aas
dec
sbb
xchg
lods
fmull
dec
out
dec
mov
or
jns
test
hlt
push
testb
adc
aas
mov
pushf
xor
sbb
pop
lods
adc
nop
out
push
sti
mov
cmp
outsl
jl
sbb
je
xchg
mull
jmp
hlt
out
xchg
test
mov
gs
testl
movsl
mov
cmpsb
push
mov
add
dec
mov
pop
cmp
mov
fimuls
mov
mov
add
imul
sub
inc
add
call
push
mov
xchg
movl
xor
cmpsb
inc
clc
test
addr16
xor
jmp
lcall
adc
ss
ss
cmpsb
or
cmp
mov
leave
add
mov
mov
jmp
mov
pop
or
fdivrl
fsts
pop
mov
mov
fidivrs
dec
aam
sbb
das
rclb
out
daa
lret
xchg
cmp
cld
mov
or
xchg
fstpt
notb
mov
mov
inc
fucomi
imul
out
mov
lret
xchg
cmpsl
stos
pop
aas
pop
int3
sbb
jnp
in
push
jle
and
scas
test
mov
mov
mov
or
push
dec
insb
fnstsw
in
mov
jne
insl
push
int3
icebp
ss
push
mov
inc
addr16
aam
mov
cmp
jnp
sarl
cmp
mov
sub
mov
test
aam
cmovne
testb
or
push
add
lahf
out
jbe
cmpsb
outsb
push
aad
fsubl
lods
arpl
mov
out
cmp
dec
out
push
xorl
icebp
repz
jb
sub
dec
adc
add
jecxz
jge
loopne
and
xchg
add
outsl
push
pop
ret
out
mov
inc
fnstsw
mov
mov
xchg
adc
cmpsl
scas
sub
and
add
arpl
mov
sbb
out
outsb
repnz
insb
loopne
stc
cmp
mov
mov
repz
sbb
ljmp
aam
and
aas
mov
int
push
adc
push
imul
lds
sub
jbe
add
xchg
mov
lods
jp
xor
lods
jg
aad
or
stc
xor
push
sbb
lods
and
inc
aad
mov
mov
mov
enter
int3
loop
pop
jns
stos
loope
jbe
repnz
sub
cmp
cmovp
sbb
dec
inc
gs
cmpsl
sub
out
adc
cmp
ficoml
xor
pop
jmp
out
sbb
arpl
cmp
fisttpl
fcoms
pushf
mov
cmc
int
test
testb
adc
push
mov
fistl
js
pushf
enter
cld
mov
in
jecxz
dec
and
dec
add
bound
outsl
mov
pop
sbbl
xchg
push
xorb
into
data16
dec
fbstp
loop
sahf
addr16
in
adc
inc
adc
lcall
icebp
mov
scas
lret
lods
sub
cs
or
adc
adc
jne
bound
sbb
jmp
sbb
xchg
cltd
xchg
in
aad
push
sti
mov
hlt
sahf
pop
leave
sbb
notb
aaa
mov
inc
stc
js
rcl
mov
mov
or
push
test
add
hlt
mov
movb
xchg
jg
imul
mov
pop
pop
push
dec
adc
adc
inc
cmp
mov
xlat
imul
sti
jge
dec
rclb
jp
sarl
sub
or
jp
das
xor
pushf
fisttps
in
xchg
pop
fistps
mov
cmp
xchg
or
and
push
ja
loop
scas
xor
scas
or
pop
int
inc
int3
mov
xchg
jae
out
sbb
into
push
jne
dec
ret
in
stc
pop
lods
and
and
inc
mov
and
jecxz
pop
or
push
inc
adc
into
sti
aad
push
mov
cs
mov
nop
test
out
shrl
or
mov
enter
push
out
repz
addr16
push
ficompl
xlat
dec
les
inc
sbb
jge
jmp
les
jge
xchg
dec
fnsave
push
sbb
dec
adc
jle
cli
push
sbb
mov
rcrb
shrl
and
repnz
pusha
push
cmp
fcomps
sbbb
lahf
shl
lds
dec
daa
loopne
stos
or
bswap
add
out
outsl
movsl
lods
cmp
jns
push
pop
lret
mov
outsl
popf
and
cwtl
insb
dec
jp
push
push
adc
push
inc
lock
sbb
lret
fcompl
cli
daa
movsl
pop
xlat
or
cmp
sbb
lcall
roll
es
mov
or
mov
roll
hlt
rcl
pushf
cli
test
inc
stos
pop
inc
repz
sub
pop
sub
add
insl
mov
imul
xor
xor
inc
shrl
xchg
lahf
push
lea
sub
in
pop
sub
mov
fwait
fdivl
shl
stos
and
sbb
lret
lods
fwait
or
inc
add
jb
ss
push
shll
shl
sbb
ss
lea
nop
or
cmp
pop
int3
lods
pushf
add
sub
xchg
mov
es
jle
popf
add
cmp
push
jle
push
in
call
ret
sbb
mov
xlat
lds
add
dec
push
rorl
pop
lcall
call
icebp
xchg
or
xorb
add
mov
cwtl
ror
pop
cld
jg
inc
mov
aad
pop
push
insl
adc
and
push
jmp
mov
push
dec
pop
fisttpll
mul
jns
das
sub
iret
adcb
or
pop
sarb
pusha
mov
jb
inc
sbb
and
cwtl
in
mov
xchg
xor
jnp
mov
mov
xor
mov
push
mov
adc
pop
inc
pop
mov
std
dec
mov
sbb
sbb
jge
sarb
inc
test
test
pop
or
add
stc
in
sahf
mov
mov
loop
je,pt
pop
mov
dec
push
fimuls
cltd
dec
xor
sbb
sub
cmp
pop
cld
clc
stc
push
xor
push
jnp
push
mov
ror
in
cmp
xchg
inc
scas
pop
push
mov
xchg
fbstp
fisubrs
fsub
jmp
sarl
lret
stc
sarl
insl
outsl
stos
orl
mov
outsl
icebp
xchg
adc
stc
js
cwtl
adc
sub
mov
adc
insl
lret
pop
mov
add
xor
int
mov
mov
and
icebp
shll
and
xchg
dec
mov
sbb
bound
adc
add
sti
test
cmpsl
lods
adc
pop
add
and
pusha
lret
cmc
repnz
faddp
daa
dec
les
test
repz
cmp
je
call
xor
mov
out
cmp
mov
scas
push
or
ja
out
das
aaa
das
fwait
xor
outsb
sub
lock
adc
pusha
cltd
push
rorb
mov
insb
mov
arpl
jne
fnstenv
sbb
in
std
jnp
js
loope
xlat
fimull
fwait
out
aaa
xchg
icebp
std
xchg
dec
cmp
rorl
jne
inc
mov
subl
dec
xchg
shrl
dec
lods
push
js
movb
jo
aad
xchg
btc
jl
pusha
cmpsb
add
cli
int3
jge
jae
out
std
jle
scas
sbb
fbstp
mov
pop
push
xor
and
fisubl
popa
divb
leave
out
sub
jo
or
jns
jl
pop
loope
icebp
stc
sbb
stc
lea
ja
call
jno
xchg
adc
pop
repnz
loop
push
rolb
sti
sub
clc
lods
imul
pop
out
loope
gs
jle
stos
or
sbb
je
scas
add
cmc
das
mov
pop
jo
cwtl
mov
popf
xchg
xor
shll
ret
sub
inc
jnp
mov
enter
jo
aam
mov
inc
cld
dec
aaa
and
mov
jge
es
lcall
je
mov
cmp
je
cmp
mov
dec
dec
ret
and
adc
inc
pop
lods
lcall
mov
rorl
cmp
or
test
mov
iret
leave
fldenv
or
push
std
add
adc
repz
xchg
int3
mov
or
movsb
sub
stos
addr16
scas
cmp
xor
in
sbb
inc
loopne
movaps
lods
in
xchg
cmp
sbb
enter
adc
jae
add
pop
lock
xor
mov
dec
loop
in
shrl
mov
dec
pop
jb
push
jae
ret
mov
jbe
insb
mov
pop
lods
out
movsb
repz
std
push
addr16
vmovdqu
out
js
or
mov
pop
and
xor
aad
dec
ret
xchg
jbe
fdivrs
outsb
mov
in
mov
sub
std
into
mov
in
int3
repnz
nop
cmp
push
rcrl
xchg
lods
lods
mov
ror
aad
push
sahf
mov
cmpsl
cmp
js
lea
lods
out
sub
loop
mov
fbld
in
testl
sbb
test
jl
mov
xor
push
pop
add
fidivl
xchg
out
jg
cli
js
out
add
add
test
sbbb
push
sub
call
mov
je
in
push
mov
or
adc
in
loop
addr16
aad
jge
popa
insl
test
xor
shrl
mov
int
ret
or
popa
push
std
aad
sub
jl
push
add
rorb
popf
or
mov
jns
or
sbb
outsb
daa
repz
and
sbb
int
fisttps
mov
mov
fisttps
testb
jnp
loopne
stc
and
popf
and
sahf
fs
xchg
push
jp
lret
mov
xor
or
movsl
sub
cmp
insb
mov
stos
push
adc
sub
sub
sub
push
imul
push
aas
and
fcoml
add
push
in
xlat
pop
lods
jge
mov
mov
int3
xchg
xor
cmp
jle
cli
push
int
popf
test
mov
xchg
inc
mov
stos
or
xchg
jmp
scas
adc
adc
cld
iret
mov
int
pop
and
in
das
mov
cmpsl
mov
inc
sbb
fcmovb
mov
lahf
lahf
mov
fnstsw
hlt
mov
inc
sbb
sub
mov
cmp
and
xchg
dec
dec
cli
pop
ja
les
mov
pop
mov
mov
fdivrs
mov
rclb
or
mov
xchg
mov
fdivrl
xchg
xor
sub
arpl
mov
adc
lods
xchg
add
mov
adc
pop
rorb
mov
xchg
leave
add
pop
jno
lock
xor
inc
jae
xchg
and
mov
insb
mov
add
push
jl
bound
and
sub
mov
sarb
push
clc
cld
jmp
testl
sbb
das
adc
sub
adc
xor
test
movsb
or
push
cs
ljmp
pushf
lods
stos
cmc
xor
sbb
add
mov
scas
js
popa
xlat
out
out
bnd
xchg
mov
add
lahf
sbb
jbe
stos
xchg
xchg
pop
sahf
inc
or
call
in
fcoms
das
lock
int
push
sbbl
mov
mov
inc
in
inc
add
hlt
lds
cmp
sbb
or
xchg
or
sti
fucomip
mov
icebp
int
and
jns
fwait
cmp
inc
xchg
jge
out
bound
and
pop
sbb
cmp
jle
adc
sahf
jle
sarl
fisttps
mov
pop
push
ret
jl
xor
and
sti
or
cmp
fisubrs
into
lret
out
fs
test
stos
mov
push
repnz
out
mov
iret
jnp
add
lds
inc
repnz
mov
fs
shl
xchg
mov
rcll
dec
ja
stc
mov
ljmp
enter
subb
pop
jns
mov
repz
je
lahf
mov
mov
int
pop
bound
mov
aam
outsl
stc
repnz
or
fwait
addr16
pop
mov
cmpsb
test
mov
jecxz
aam
and
mov
test
add
dec
cmp
shll
dec
and
jg
jns
out
or
repnz
mov
cwtl
xor
shll
ret
call
jns
insl
push
xor
xchg
xchg
movsb
lret
add
out
sub
add
lea
pop
xchg
xchg
add
mov
adc
addr16
mov
in
fbld
std
dec
and
fs
fidivs
and
xchg
lods
in
imul
insl
pop
fcompl
ljmp
sarl
lods
lods
dec
jp
mov
pop
push
jnp
test
cmp
add
push
mov
arpl
int3
xchg
pop
add
mov
sar
movsb
inc
or
ficompl
xor
out
int
ds
in
mov
inc
mov
push
dec
fsubs
jl
jmp
cmp
mov
test
add
cmpsb
add
dec
and
sub
cmp
xor
icebp
xchg
stos
adc
xor
and
push
jae
call
cltd
sbb
fstpl
pop
cltd
mov
xor
les
push
sbb
xor
xchg
in
gs
mov
out
lret
jbe
mov
or
sbb
fbld
fcmovu
lds
pop
jmp
dec
std
push
into
nop
fsubs
cs
test
ds
add
scas
ret
cmp
adcb
inc
mov
mov
mov
clc
and
in
fwait
adc
mov
movsb
inc
repz
add
adc
test
sbb
and
jb
jecxz
xchg
sarb
out
insb
out
or
push
pop
jae
bound
mov
int3
mov
in
int
dec
push
pop
push
test
xor
popf
pushf
jle
lret
xor
aas
call
in
insl
inc
push
adc
imul
push
scas
dec
cmp
dec
repz
cli
adc
mov
pop
fcom
ljmp
push
mov
gs
and
data16
sbb
outsb
aad
out
outsb
out
push
add
sti
jnp
mov
mov
xchg
sub
aam
sarl
cmp
aam
std
lock
rcl
mov
push
ss
add
push
sti
jno
popa
mov
xchg
insl
outsb
cmp
ljmp
and
adc
pusha
mov
lock
js
inc
or
fucomp
sbb
sbb
mov
repnz
pop
shrl
or
lahf
insl
out
mov
mov
adc
and
mov
or
imulb
in
mov
lea
neg
sbb
pop
lcall
mov
aaa
mov
shlb
arpl
aam
jl
xor
fs
xchg
cmp
and
in
out
pop
add
stos
in
ret
jecxz
cmp
lds
clc
roll
test
imul
push
jge
mov
outsl
pushf
ja
xchg
sbb
sar
outsl
fwait
pop
je
nop
stos
aas
push
icebp
aaa
out
scas
cwtl
xchg
ret
mov
cs
push
mov
xchg
xor
insl
and
jae
fs
lods
repz
or
and
sub
inc
cmp
push
pusha
in
mov
test
call
sbb
xor
sub
inc
ficompl
pop
shrl
dec
pop
xor
jge
or
pop
sti
sbb
xchg
pop
mov
sub
add
mov
outsb
mov
mov
ret
inc
call
ret
cwtl
xor
sbbl
shrb
or
sub
pusha
cld
mov
dec
xchg
loopne
dec
lods
pushf
sbbl
lahf
sub
jne
pop
mov
push
cmc
das
mov
push
sub
sub
xor
jb
neg
movsl
jmp
xorb
jl
cmpl
dec
pop
xchg
sub
cli
test
clc
adc
ds
xchg
ret
xchg
ds
sub
sub
mov
and
sbb
jnp
out
lea
test
xchg
jmp
hlt
popa
outsl
sub
jl
mov
sbb
ss
rcrb
mov
mov
push
imul
into
roll
mov
jnp
aaa
pop
mov
mov
popa
cmp
push
fsubl
mov
jg
xchg
imul
add
push
dec
sub
mull
nop
int3
sbb
repz
lret
out
insl
cmp
outsl
rcrb
mov
and
cli
imul
out
call
lods
mov
sbb
jnp
and
enter
xorb
xchg
xchg
mul
repz
arpl
fsub
rol
mov
repz
nop
test
stos
movlps
fistpll
dec
int
into
mov
fwait
cmp
lea
inc
mov
pop
mov
mov
pop
cld
mov
sbb
mov
push
movsl
and
arpl
dec
adc
push
leave
lcall
bswap
neg
popf
xor
jg
loop
aam
lods
cli
pusha
call
imul
repz
shll
mov
pop
pop
cmp
jle
ror
mov
push
push
push
es
mov
repz
lret
xchg
iret
ds
cmp
cwtl
fldcw
mov
ljmp
push
add
mov
xor
lret
stos
inc
push
insb
push
mov
mov
jnp
adc
xor
inc
je
jl
xchg
test
push
pop
insb
add
nop
cmc
mov
jp
aaa
gs
fsubl
dec
cmpsl
dec
imul
fcoml
mov
or
pusha
lods
mov
fidivs
dec
pop
ret
add
mov
imul
inc
pop
add
inc
fstps
andl
cmp
and
jne
dec
cmp
push
shl
dec
or
inc
movsb
cs
sbb
jns
cmc
sarl
xchg
imul
push
and
mov
cwtl
inc
add
stc
movl
out
shrl
push
mov
gs
imul
or
fildl
js
pop
aas
adc
or
mov
add
imul
mov
test
popf
enter
dec
jae
cmp
imul
sub
or
fiadds
and
xchg
in
and
repnz
outsb
sbb
cmp
pop
test
lods
shr
push
add
cmp
icebp
ffreep
mov
ds
sbb
inc
stos
call
aas
xchg
ret
add
andb
movsl
sub
dec
sbb
outsb
insl
jae
sti
push
mov
das
aam
jge
adc
jmp
mov
loopne
push
les
inc
out
clc
mov
rolb
ljmp
jmp
xor
lcall
lds
and
or
xchg
gs
cli
mov
xor
roll
jge
xchg
jmp
cmc
fwait
lea
push
mov
or
clc
add
or
pushf
mov
add
add
cmc
movsl
push
lret
cmpsb
pushf
daa
mov
pushf
adc
pop
cmp
push
mov
push
cmp
inc
lahf
popf
out
push
cmp
push
dec
pop
lods
jge
shlb
mov
dec
shrb
and
add
push
mov
mov
in
xchg
xorl
mov
xor
jo
addr16
mov
sahf
mov
nop
sbb
or
repz
ds
stos
aam
or
movsl
aam
gs
jle
sub
xlat
cmp
push
scas
mov
push
test
nop
mov
jns
xor
push
aas
lret
lea
and
push
movsb
popa
jno
and
mov
inc
lahf
pushf
pop
int
xchg
xor
ljmp
and
jmp
or
push
pop
es
sub
outsb
mov
xchg
ror
cwtl
and
cwtl
jmp
lcall
push
xor
jle
dec
cli
lret
add
sub
pop
mov
xchg
lret
jp
push
out
ja
imul
jge
adc
cwtl
repz
scas
jge
int
xchg
dec
xor
jmp
jno
push
fnstsw
les
and
push
jecxz
insl
push
decb
jg
mov
fs
hlt
cmp
mov
xchg
lret
daa
scas
cwtl
sbb
and
fcompl
ja
pop
in
inc
push
mov
inc
xor
sbb
mov
pop
sub
pop
sarb
test
jns
push
int
jns
pop
nop
es
lock
or
sbb
adc
push
mov
cmp
ret
pusha
cmp
dec
ret
adc
insb
xchg
lret
jecxz
out
adc
aad
pusha
cmp
xlat
pop
call
mov
pop
pop
add
scas
fwait
sub
pop
enter
push
scas
dec
xor
sbb
pop
xchg
sahf
add
cmp
scas
scas
and
scas
test
stos
arpl
cli
inc
inc
and
in
movzwl
inc
jbe
jbe
xor
je
adc
add
test
push
std
loopne
mov
push
mov
mov
and
sbb
fsubs
pop
mov
lods
fs
repnz
push
lret
sahf
imul
jae
mov
sub
ret
mov
and
in
xchg
mov
call
outsb
and
push
call
jnp
add
adc
jl
ret
mov
cmp
fnstenv
push
add
cmc
push
add
hlt
loopne
les
in
mov
out
out
mov
or
test
ror
call
add
sub
pop
mov
int3
scas
sub
jecxz
pop
add
jo
addr16
test
jns
mov
jnp
scas
les
adc
xchg
xor
push
push
js
dec
js
push
cmp
sarb
das
push
sar
mov
inc
mov
aas
outsb
xchg
hlt
sub
popf
sub
movsl
adc
leave
push
out
mov
mov
jecxz
jo
sub
pop
sbb
xchg
jg
mov
sbb
sub
dec
loopne
mov
dec
data16
xchg
xchg
cmc
xorl
and
pop
jmp
cmp
sti
mov
xchg
call
xchg
dec
sub
adc
insb
push
test
or
add
mov
sahf
add
inc
dec
push
in
arpl
notb
push
add
cmp
push
push
sub
out
movsl
in
dec
sahf
push
and
or
mov
sub
pop
nop
pushf
bnd
pop
mov
jae
insl
pop
ds
sub
push
ja
add
mov
or
mov
lods
mov
imul
adc
cmp
aam
jmp
adc
add
jge
fisttpll
mov
les
ja
dec
mov
in
mov
cmc
sti
out
insl
psrld
cs
push
mov
test
arpl
cmp
pushf
jg
dec
mov
js
xchg
mov
xchg
fucomip
cld
and
jb
lds
scas
sbb
icebp
cmp
jmp
and
and
mov
pop
dec
jns
and
rcll
scas
inc
rclb
mov
sbb
mov
aam
bound
adc
mov
les
pop
inc
leave
nop
ja
ss
in
or
cmp
or
fcmove
iret
fcoml
hlt
lret
sub
push
movsl
jbe
outsl
adc
push
mov
mov
popa
jg
xor
les
and
ficoml
dec
sbb
sub
hlt
and
outsb
dec
jne
cltd
int
sub
movb
lock
movsl
add
mov
es
xor
add
mov
push
stos
xor
and
repnz
jg
cmp
ret
adc
gs
lock
sbb
pop
in
mov
jp
and
cmp
dec
fmull
mov
loop
sub
clc
ja
mov
mov
push
and
stos
adc
sbb
movsb
mov
xchg
fdivl
jne
inc
sub
popf
mov
lret
xchg
cli
test
xor
cmp
sbb
inc
sub
fst
pop
lahf
fcomip
aas
outsl
push
or
jae
dec
ficoml
mov
and
test
or
cwtl
or
mov
bound
dec
push
jecxz
scas
sbb
push
jnp
sbb
sbb
jb
push
adc
lods
mov
mov
adc
jmp
jo
jbe
cltd
dec
es
mov
inc
test
mov
mov
mov
rorl
dec
rol
popf
push
and
sub
add
add
cmc
clc
cmpsb
adc
outsb
sbb
push
inc
xrelease
or
jne
lcall
pusha
sub
lods
das
pop
push
cmp
inc
shl
cmp
adc
and
push
and
push
notl
pop
xchg
lea
jbe
dec
mov
clc
sub
push
int3
cmp
ret
mov
scas
loopne
ja
inc
cmp
mov
sbbl
rorl
mov
lea
insb
scas
push
push
add
ficoml
enter
add
jno
out
aas
cmp
and
dec
pop
inc
pop
lret
push
ret
sub
push
mov
and
xor
mov
test
mov
inc
lahf
mov
jmp
rclb
jp
xlat
sarl
xchg
cmp
cmp
xchg
pop
call
mov
or
stos
jge
lcall
mov
repz
pop
xor
push
xchg
stc
xchg
loop
pusha
sbb
lock
pushf
fwait
mov
push
or
mov
sub
jno
stc
or
loopne
jle
rol
ss
jmp
imul
xlat
in
xchg
ret
xor
scas
fistl
cmp
xor
pushf
mov
pop
pushf
cmc
pop
sub
aam
mov
jb
and
mov
enter
aam
and
dec
adc
lcall
jle
mov
sbb
pop
das
mov
movsb
mov
jo
cmp
es
lods
mov
lret
ret
inc
mov
fisttpll
push
jp
repz
sbb
xchg
int3
mov
or
cmp
mov
lret
mov
jle
mov
stc
or
mov
pop
inc
or
dec
and
shrl
dec
sub
int3
mov
lahf
inc
adc
lcall
je
out
testb
in
fnstsw
cmp
jmp
nop
es
dec
ja
or
cmp
loopne
inc
negl
in
movl
sti
mov
jge
fidivl
cmp
adc
dec
sbb
jno
xor
adc
dec
mov
push
lret
cmpsb
je
mov
xor
sbb
ljmp
sbb
shrl
rorb
outsl
xor
jle
cld
lret
sub
mov
in
out
in
jmp
adc
in
pop
cli
cmc
xchg
xchg
or
mov
xchg
push
and
push
bound
mov
in
mov
xor
popa
xor
stos
fisttpl
mov
ret
inc
pushf
push
add
mov
cltd
jno
hlt
int
or
rcrb
cwtl
std
dec
ljmp
outsb
lock
mov
call
aaa
pop
sub
pusha
cmpsl
cmpsl
movsl
bound
sbb
cmp
jne
sahf
push
push
push
stos
imul
sti
xchg
mov
enter
je
imul
add
xchg
sbb
aaa
addb
int3
mov
rcrb
insl
sti
sbb
in
mov
inc
movsl
repnz
scas
xor
dec
mov
imulb
add
inc
adc
dec
cmp
xor
andl
mov
lret
push
lds
push
add
pop
call
mov
test
mov
cmp
out
sbb
jnp
adc
add
std
adc
repnz
pop
outsl
sti
mov
insl
add
push
inc
enter
lcall
cmpsb
ss
adc
test
cld
aam
sub
mov
sbb
pop
push
das
lds
mov
fidivrl
outsb
push
push
out
or
mov
jo
push
mov
clc
cltd
adc
das
mov
inc
arpl
imul
mov
lea
xchg
sbb
mov
jns
adc
mov
jmp
mov
in
pop
inc
add
jl
mov
add
pop
cmpsl
out
call
rorb
test
adc
dec
adc
jg
ffreep
inc
jp
cs
pop
mov
add
lret
jae
test
sbbb
popf
shl
test
sbb
aaa
aam
repnz
pop
arpl
je
or
loopne
mov
hlt
mov
lds
jmp
mov
xlat
test
jle
out
jmp
lods
fwait
montmul
cmpsb
ret
je
push
lods
xchg
mov
cmc
mov
or
and
into
mulb
ja
pop
ss
lds
xchg
shlb
and
inc
out
negl
or
jno
sub
xchg
adc
xchg
ss
in
out
xchg
out
fistpll
stos
adc
decl
sub
mov
cmc
popf
popf
xor
rorb
inc
dec
inc
mov
scas
cld
xlat
jl
ret
clc
jecxz
std
test
jp
aam
push
aad
add
jle
aaa
clc
dec
mov
sub
mov
xlat
xchg
inc
test
jl
test
xchg
mov
loop
or
shr
dec
mov
xchg
mov
and
dec
or
fucomip
xchg
test
mov
cld
fiadds
add
rolb
mov
ret
lea
out
mov
movsl
adc
pop
loop
sub
cmpsb
stc
xchg
jl
daa
pop
and
dec
mov
inc
loop
cmpsb
inc
adc
ds
cmpsl
xorb
add
xchg
insb
fwait
or
mov
jb
call
mov
movsl
nop
or
jecxz
mov
nop
sahf
add
inc
mov
cltd
xchg
sub
daa
sub
xor
cmp
das
jecxz
jecxz
mov
les
mov
add
and
sbb
sbb
or
mov
sti
mov
mov
lret
aam
ljmp
lcall
mov
mov
jl
test
inc
sarb
iret
fisubl
mov
ss
ret
fisttps
in
jns
rclb
pusha
cmp
sbb
push
dec
shlb
fstpt
pop
lea
adc
dec
out
adc
inc
fistl
pop
add
or
sub
lcall
push
inc
unpckhps
inc
js
mov
or
jne
xchg
xchg
lret
adc
and
shrl
add
lock
aam
adc
ds
cmpl
pop
mov
bswap
pop
sbb
pop
loop
lock
gs
sub
jo
mov
mov
mov
or
fdivp
aad
outsl
nop
xlat
test
lea
or
mov
mov
pop
xor
pop
mov
jmp
pop
cld
es
adc
sub
addl
aam
pop
mov
ret
fsubs
mov
fimuls
xchg
fwait
ja
inc
mov
cmp
ret
push
ja
stc
mov
push
call
mov
ds
test
fstp
jecxz
lahf
and
mov
fistl
pop
test
xchg
enter
pop
sub
mov
mov
cli
push
push
lock
add
sahf
ret
sub
mov
sub
sahf
sub
out
ljmp
push
adc
les
sub
pop
mov
or
sbb
sub
sbb
jecxz
add
push
fidivs
loopne
idivl
push
push
ret
push
in
ret
push
and
fs
push
repz
and
inc
aas
pop
outsb
mov
mov
mov
gs
xchg
or
sbb
push
sti
mov
dec
enter
sub
mov
lcall
mov
outsl
sbbb
push
mov
sbb
adc
aam
daa
jg
out
repnz
daa
ss
xchg
or
idivl
sub
sub
mov
js
sarl
aaa
ds
dec
push
daa
push
pop
push
add
mov
xor
push
imul
sti
dec
lock
or
repz
hlt
addr16
push
shrl
lahf
cmp
in
lea
push
push
out
adc
dec
mov
mov
add
xchg
mov
in
leave
push
mov
xchg
hlt
pop
stc
insb
xor
rol
add
mov
mov
jmp
loope
pop
pop
inc
jbe
stos
mov
or
pop
mov
mov
jae
mov
jns
cld
scas
mov
cmp
ds
sub
pop
loopne
pusha
lock
jmp
movsl
loopne
or
or
and
mov
pop
mov
and
fnstcw
jl
inc
jns
sub
sti
andb
rcrl
lret
and
sbb
inc
xchg
sti
out
out
movl
sahf
or
in
jbe
scas
push
sbb
push
test
mov
mov
push
inc
in
lret
repnz
icebp
out
int
cltd
jb
data16
xchg
mov
aad
sbbb
pop
lahf
ljmp
inc
add
aas
stc
sub
dec
xchg
xchg
cld
shll
xchg
mov
adc
lods
mov
das
inc
sti
out
pushf
movsl
jo
mov
sbb
sub
inc
xor
jne
xor
repz
mov
daa
xchg
inc
hlt
shrb
sti
mov
sbb
fcoml
decl
lock
repnz
pushf
sbb
loopne
mov
ja
cmpsl
dec
xchg
mov
xchg
push
mov
hlt
push
pop
xchg
jecxz
sub
fisubl
mov
and
mov
notl
mov
mov
in
sbb
inc
shrl
dec
shr
sti
dec
mov
popf
sbb
sub
ror
or
add
sti
mov
or
and
push
inc
dec
push
out
repz
cld
mov
and
icebp
xchg
ja
inc
jnp
push
jp
add
inc
pop
push
cli
add
stos
or
xor
push
aad
gs
add
test
mov
pop
insb
test
mov
mov
daa
repnz
icebp
inc
call
cmp
jne
das
sahf
jbe
adc
or
inc
out
pop
cld
fistl
sbb
add
ljmp
pop
lret
ljmp
repnz
daa
mov
jecxz
rcll
adc
in
sub
jle
mov
lock
nop
int3
inc
pusha
arpl
push
or
push
je
cmp
sbb
xchg
adc
mov
mov
shlb
aad
loopne
cmp
mov
add
xchg
adc
sti
or
popf
aas
pusha
loopne
pop
pop
in
mov
shll
addl
enter
daa
in
or
cld
shlb
push
scas
out
repz
jno
jae
xor
mov
loope
push
movsl
outsb
cmp
call
stos
and
mov
lret
inc
or
pop
daa
outsl
lods
pop
inc
test
jno
mov
cs
and
xchg
push
add
into
lea
xor
out
mov
add
lock
adc
jne
pop
stc
xor
jno
in
push
stos
sbb
xor
andl
inc
pop
cmp
out
push
cmp
adc
cmp
push
xchg
mov
add
add
jle
xchg
lods
adc
mov
xor
sahf
or
sub
mov
push
inc
cmp
jle
sbb
mov
inc
push
dec
movsb
gs
xchg
fdivs
cltd
mull
out
out
roll
jnp
movsb
jmp
adc
sarb
jb
dec
dec
sbb
jo
movsb
out
and
inc
pop
xchg
adc
lret
cmpsl
in
pop
clc
mov
sbb
mov
outsb
out
cmp
fistpl
in
aad
jmp
gs
push
test
push
add
mov
add
inc
sbb
mov
jno
cs
add
into
ss
jge
lock
push
dec
int
clc
out
outsb
pop
sarb
das
push
in
movsl
mov
mov
movsb
bswap
adc
cltd
lret
sub
lods
inc
pop
adc
shll
test
roll
xlat
xchg
pop
xchg
in
stos
inc
sbb
decb
pop
sbb
push
cmpsb
sub
subb
xchg
mov
pop
test
push
inc
mov
insl
test
cltd
bound
pop
jbe
xorb
faddl
inc
adc
repnz
jno
jge
insl
lcall
push
dec
mov
or
cwtl
pushfw
adc
shrl
scas
icebp
xchg
lcall
push
fcmovnbe
stos
mov
lcall
mov
jae
inc
cld
addr16
movsb
xchg
out
xor
test
pop
mov
js
scas
ja
scas
push
fisubrs
dec
jb
inc
add
leave
adc
sub
imul
mov
push
xchg
enter
hlt
cmp
mov
mov
mov
or
jno
xchg
pop
int3
dec
xor
outsb
fwait
pop
and
aas
push
divb
outsb
jns
lret
movsb
inc
iret
out
cltd
out
adc
dec
test
xor
lret
and
add
outsl
fdivrl
mov
out
outsb
and
xor
das
push
jmp
push
or
cmp
insl
sbb
and
add
loope
mov
dec
movsl
sub
out
add
in
in
pop
xor
scas
loope
cltd
add
push
test
int3
mov
jno
mov
test
scas
push
out
popf
cli
push
lods
das
mov
lock
test
cmp
pop
fdivrs
dec
dec
mov
movsl
stc
cmpsb
scas
cmp
mov
cltd
and
sbb
popf
mov
sbb
std
xchg
pushf
mov
stos
xorb
int
xchg
jne
xlat
push
xor
shrl
aaa
push
pop
cmp
fsubl
push
jmp
insb
call
js
jo
in
cmp
ds
mov
dec
fisttpl
outsl
arpl
push
ja
notl
cmp
push
pop
cltd
fwait
cmp
leave
xchg
push
jnp
inc
pop
push
pop
inc
fnsave
out
and
sbbb
lret
jns
add
xor
sbb
mov
lcall
jns
push
insl
das
xlat
cs
cwtl
sbb
lods
cltd
xchg
les
cmpsl
adc
push
dec
inc
dec
fs
fisttpll
sti
sub
lret
dec
dec
movsb
jge
lret
call
call
sbb
lret
add
lods
cmp
mov
dec
adc
lret
push
test
movsb
adc
cli
add
or
aaa
push
cltd
icebp
jl
ss
int
xchg
and
ret
mov
jns
leave
sub
sub
mov
movsb
pop
mov
jb
push
push
sbb
or
repnz
jg
xor
sbb
push
out
add
and
pop
push
leave
jb
call
test
mov
popf
stos
jecxz
inc
mov
and
fnstenv
pusha
out
ret
daa
je
mov
jbe
rcrl
jmp
cmpsl
jb
jnp
jae
xchg
iret
stc
push
nop
inc
mov
cmp
xor
fnstcw
mov
push
jo
fcomps
cmpsb
xlat
popa
and
and
jbe
sbb
or
dec
xchg
mov
inc
xor
inc
fidivs
jno
cmp
sub
mov
push
adc
ds
mov
cltd
in
mov
xchg
pop
fcoml
dec
stos
fcoml
jmp
inc
sub
ja
aad
push
and
and
mov
mov
jo
pushf
jbe
sbb
stos
jno
cmp
add
rcll
mov
mov
sahf
sbb
sbb
add
pusha
ret
cld
sbb
cmc
jg
inc
push
inc
jbe
ja
testl
shll
pop
lret
aam
ja
xor
xchg
mov
jmp
hlt
pop
pop
std
rcll
aas
gs
mov
std
mov
rcrl
adc
push
dec
pushaw
int
negl
and
ljmp
pushl
push
sub
rclb
hlt
xlat
data16
cmc
xor
movsl
aad
pushf
mov
mov
and
jae
mov
sti
imul
sarl
or
pop
mov
popa
movsl
fdivrs
loop
add
popf
and
mov
fildl
dec
and
shlb
pushf
mov
cmp
fwait
pusha
and
les
sbb
dec
scas
std
sub
sar
cmpsb
mov
cs
sub
jmp
inc
lret
pop
mov
cmp
mov
pop
jbe
cmpsl
lea
mov
pop
push
stc
xor
add
ds
mov
movsl
mov
outsl
arpl
loopne
stos
outsl
xchg
xchg
fsubrp
enter
fldt
sahf
push
dec
mov
push
icebp
mov
xor
inc
or
mov
aaa
push
mov
cmp
or
mov
mov
sbbl
add
or
ret
inc
movb
and
je
mov
lods
lea
leave
movsl
jns
filds
push
cwtl
popa
aad
ja
enter
and
jbe
loope
clc
test
jae
xor
xor
inc
lea
pop
pop
cld
adc
daa
jmp
or
push
int
cmp
or
mov
jbe
fistpll
fisubl
jbe
test
lcall
xchg
sahf
xchg
sub
inc
pop
dec
in
adc
add
mov
sahf
push
push
nop
out
test
xor
cmpsl
pop
roll
test
stc
sub
movsl
dec
xor
int
add
aaa
or
xor
dec
push
mov
lea
sbb
push
and
dec
add
xor
jo
hlt
pushf
mov
test
or
push
lahf
push
push
lock
mov
jne
insb
push
jnp
les
and
out
rol
cmpb
hlt
adc
adc
std
sbb
add
notl
jge,pn
cmp
outsl
push
jp
dec
out
pop
test
lock
pop
and
insl
rcrl
inc
sbb
enter
nop
push
xchg
lret
fnstenv
outsl
jecxz
out
int
push
neg
add
xor
mov
arpl
pop
jmp
lock
sub
ljmp
or
inc
cmpsb
mov
in
stos
das
sbb
or
cvtps2pi
mov
fisubs
push
push
pop
test
inc
adc
mov
addr16
add
int
imul
mov
cli
lret
or
jno
push
add
jp
pop
push
jb
test
lcall
jg
push
inc
mov
test
dec
jbe
add
stc
xor
mov
add
push
in
jae
cli
mov
pop
out
pop
xlat
cmp
pop
cwtl
push
and
push
out
push
jge
mov
dec
dec
ja
xchg
or
repnz
sub
testl
daa
sbb
jg
je
test
andl
mov
add
sub
inc
xor
mov
push
add
sahf
outsb
loope
scas
mov
cmp
mov
sub
cmp
hlt
push
dec
popa
mov
push
lret
vpunpcklwd
inc
fisubs
hlt
jne
add
sbb
push
pop
out
insl
decl
xor
fidivl
subb
divl
cmpsl
mov
mov
out
mov
jle
mov
iret
test
jb
into
jg
add
or
inc
xchg
dec
dec
orl
cmpsl
mov
jne
jmp
sbb
lret
pop
aaa
pop
clc
sbb
mov
pop
jp
shll
iret
test
sbb
mov
xchg
addb
cmc
xor
popf
sbb
loopne
sarl
or
jge
add
sub
cltd
bound
gs
add
sub
je
push
cli
xchg
cwtl
out
mov
scas
int
xchg
xchg
xor
mov
mov
stos
cltd
popa
in
lret
sub
pop
xor
test
push
push
mov
outsl
ret
jg
mov
loope
mov
pusha
popa
sahf
push
out
in
testl
nop
aad
lods
stos
sub
push
imul
mov
nop
test
sbb
inc
in
sub
test
cmp
cmp
mov
jl
jl
inc
mov
in
add
add
lods
pop
xor
and
cmp
mov
ss
jo
jle
loope
push
xor
stos
cmovb
lods
cmp
fsubs
das
adc
or
mov
notl
xor
cmpsl
andl
aad
xor
sub
std
cld
sti
cmpsb
push
cmp
sti
data16
add
aas
add
push
int
or
add
xor
pop
adc
rcll
lcall
adc
and
xorb
ljmp
popa
mov
cmpsb
xor
js
push
push
jle
adcb
inc
mov
or
xchg
gs
aaa
pop
mov
jp
inc
mov
pop
fbstp
hlt
adc
mov
mov
pop
faddp
mov
popa
cmpsl
fstl
and
decl
push
fnclex
and
mov
pop
sbb
mov
mov
adc
jbe
mov
xchg
xchg
xchg
push
push
pop
push
mov
xor
sbb
sbb
xor
pop
adc
adc
xor
sysret
adc
out
push
and
inc
dec
or
ret
cmp
inc
jmp
dec
ja
mov
push
jns
call
inc
clc
mov
jnp
xchg
lret
push
cmp
scas
mov
add
das
mov
xchg
in
mov
mov
decl
adc
add
adc
push
and
insb
daa
loop
daa
mov
test
mov
loopne
jo
shrb
jbe
movsb
sbb
imul
pop
jbe
jle
test
xorb
addr16
cmp
dec
mov
ret
pop
and
adc
jp
arpl
cmp
cltd
icebp
repnz
add
int
add
adc
mov
and
dec
dec
xchg
jl
decl
xchg
sub
xchg
call
aad
push
sbb
lahf
sub
adc
fildl
xchg
loop
push
push
add
add
sub
xchg
sub
loop
inc
push
sub
fs
mov
jle
or
xchg
push
xorb
sub
ficompl
int
mov
ss
movsl
xchg
jae
push
scas
call
push
lods
fldt
push
pop
decl
lcall
jb
insl
push
lcall
out
cmp
xchg
or
add
lahf
sti
mov
sbb
data16
lea
jl
gs
push
sbb
push
sbb
pop
sub
jecxz
pop
push
and
mov
mov
int
and
fmull
fisttps
jecxz
out
and
sub
lds
cmp
shll
sub
push
jne
sbb
mov
js
aaa
repz
push
sarl
cmp
mov
push
inc
sub
fstps
and
sub
ret
add
and
lret
inc
push
adc
add
jbe
adc
cmc
addr16
or
lea
mov
scas
outsb
mov
inc
inc
cmp
mov
dec
dec
fldt
sub
adcl
or
xor
jns
add
out
je
iret
das
xchg
push
xor
int3
call
outsb
inc
pusha
push
jae
and
aaa
mov
sub
inc
mov
pushf
inc
and
out
adc
xlat
nop
ja
dec
mov
pop
xor
dec
cwtl
repnz
cmp
jns
stc
ss
pop
jns
punpckhwd
mov
or
stos
call
mov
pop
push
cmp
and
das
jg
cwtl
cmp
subb
cmp
adc
daa
cwtl
insl
fsubrs
int3
xor
lods
movsl
jne
push
add
mov
aad
cmp
notl
jnp
jb
cld
out
sbb
and
out
jl
jno
fidivs
jns
sar
or
add
je
cld
lcall
nop
repnz
mov
imul
inc
cs
cmp
test
and
dec
ss
push
cmp
lock
nop
dec
xchg
fidivrl
in
xor
add
fcomps
sbb
lods
daa
pop
add
push
xor
sahf
jl
imul
ret
fs
cltd
cmp
ret
jg
mov
fdiv
mov
and
mov
fildll
sbb
add
mov
xchg
test
inc
int3
sub
test
jmp
popa
inc
push
push
mov
clc
add
not
inc
imul
push
xchg
push
into
dec
divl
rolb
in
jne
xchg
cmp
and
clc
fildl
icebp
sub
or
andl
int
jg
iret
xchg
in
jecxz
icebp
or
daa
out
rcll
mull
scas
stc
push
xchg
push
insb
shlb
ss
jno
ss
lahf
push
rcrl
and
dec
push
out
fwait
cs
push
cmpsb
sbb
adc
mov
xchg
imul
iret
mov
inc
adc
cmp
leave
add
fidivrs
mov
jns
lods
dec
in
xchg
pushf
es
mov
fcmovne
adc
btr
xchg
in
pop
fsubr
mov
adc
sbb
test
std
sbb
xchg
imul
cmc
es
mov
stos
mov
imulb
insb
inc
jo
scas
and
leave
popa
mov
push
push
shlb
nop
lret
sbb
std
lcall
sub
mov
and
push
cli
add
int
pop
out
dec
pop
push
mov
je
mov
clc
cmpsb
dec
xchg
cltd
cmp
sub
ret
mov
out
sub
fsubrl
lods
arpl
xor
push
mov
stos
rorb
xchg
jmp
call
pop
pop
sahf
jmp
fdivl
sub
pop
or
mov
push
mov
cmp
xor
es
mov
pushf
rcl
dec
add
mov
mov
mov
add
mov
push
cmp
in
dec
push
push
insl
adc
insl
outsl
in
rorb
add
xchg
iret
es
jae
cmpsb
in
stos
mov
xchg
lods
cmp
mov
push
test
inc
sbb
xor
repz
adc
mov
in
mull
mov
jne
lret
not
push
jb
sub
or
pop
fidivs
movb
jnp
rorb
cmp
nop
das
subl
bnd
or
jmp
dec
or
stc
xchg
pop
out
jbe
fisubrl
mov
pop
jne
daa
leave
sti
jb
aad
push
stc
fsubs
jno
fdivs
in
sub
lahf
test
mov
mov
pop
cmc
popf
dec
aad
xor
addb
sbb
cmpsl
movsl
and
aas
pop
mov
ss
mov
test
addr16
enter
std
jl
mov
loopne
shlb
outsb
adc
fcoml
int3
lea
xchg
jge
push
movsl
inc
adc
fcom
mov
sbb
adc
sbb
mov
jbe
nop
xchg
test
xchg
hlt
add
xor
arpl
lds
push
xchg
or
iret
add
stos
das
or
push
sub
icebp
insb
enter
ja
cltd
or
mov
and
mov
mov
cmp
mov
sub
pusha
test
dec
mov
dec
sbb
and
and
mov
ljmp
add
pop
jl
dec
mov
into
inc
add
dec
cmp
out
rorl
adc
inc
sub
xor
mov
dec
cli
jle
mov
rorl
jnp
add
cmp
ret
jmp
sbb
fiadds
jbe
xchg
push
push
mov
xor
fnstenv
jns
outsl
mov
xchg
fcom
mov
out
xor
inc
flds
or
repnz
nop
mov
sti
or
cmp
pop
cmc
xorb
or
lea
pop
out
push
fisttpl
out
lods
xchg
cmp
aam
adc
ret
inc
call
bound
les
dec
stos
mov
mov
or
pop
shll
xor
sbb
or
adc
loope
or
xlat
fmull
jmp
in
or
stos
fwait
mov
jbe
dec
mov
pop
outsb
mov
sub
cwtl
adc
in
insl
adc
or
mov
or
jae
loopne
push
fsubrs
in
sti
sub
aas
or
dec
lea
and
repnz
lods
mov
mov
scas
jp
push
stos
cmp
iret
cli
jmp
xchg
mov
fldl
xor
dec
mov
mov
ret
sub
loop
fldcw
jnp
insb
push
aad
adc
jbe
out
test
mov
pop
inc
mov
icebp
fldcw
rorl
sti
stos
lret
mov
jns
leave
mov
outsl
stos
cli
data16
xor
inc
loope
test
pop
dec
fisttps
xor
xchg
ljmp
repz
mov
add
scas
out
insl
jecxz
cmpsb
mov
push
out
xorb
mov
and
xchg
push
sbb
nop
leave
mov
jl
pusha
insl
add
mov
mov
mov
dec
sarl
dec
add
mov
adc
jno
mov
cmp
lods
or
call
jns
jge
das
cwtl
dec
ret
inc
in
add
pop
or
lock
ret
lds
mov
mov
mov
or
fdivl
movsb
fstpl
in
aam
rcll
xchg
pop
jp
int
mov
js
mov
mov
mov
ljmp
fistps
das
and
jns
test
sbb
lods
xchg
outsl
js
lock
mov
rol
int
mov
add
inc
aaa
push
pop
faddl
pop
ficoms
loop
int
xchg
mov
btr
pop
in
mov
or
sbb
fnsave
fidivrs
push
loope
dec
xchg
jge
jne
adcb
iret
sarl
lret
loopne
test
add
pop
push
decl
inc
push
pop
adc
stos
leave
mov
mov
in
test
inc
mov
fstps
stos
jmp
pop
int3
bound
sbb
pushf
fwait
pop
mov
push
cmp
gs
fnstcw
inc
cmp
mov
sahf
lock
addr16
sbb
test
lods
loopne
divl
pavgb
sbb
push
mov
sub
mov
inc
decl
lods
cmc
add
jmp
mov
mov
pop
ss
sbb
and
pusha
push
int3
adc
inc
pushf
inc
scas
imul
adc
dec
stc
inc
jb
sti
scas
xor
inc
fbld
int3
cli
xchg
dec
arpl
aad
pushf
jecxz
push
or
or
mov
cmp
cmpsb
xorb
adc
inc
popa
or
ret
and
pop
outsb
mov
lock
mov
mov
xchg
jge
adcb
mov
xor
insl
nop
popf
cmpsl
push
cmp
or
xor
leave
push
loope
cmp
mov
xor
fwait
scas
adc
dec
es
xlat
mov
cmp
loope
icebp
xor
test
aad
insl
lret
pop
out
mov
ret
mov
mov
sub
add
mov
ss
data16
repnz
divl
loopne
mov
push
and
imul
cmp
mov
mov
dec
pushf
call
mov
imul
dec
pop
add
lret
out
dec
movsl
sub
add
mov
push
pop
lret
movsb
cli
movsb
popa
and
xor
in
push
imul
mov
sbb
and
pop
cmp
dec
push
insl
mov
inc
lcall
adc
out
cmpsb
mov
loope
xchg
or
sub
pop
daa
cmpsb
in
xlat
std
js
pop
and
adc
jmp
dec
hlt
lods
mov
dec
fwait
xor
sarb
jb
and
push
pop
sbb
jl
lock
mov
push
hlt
in
addl
push
ljmp
mov
and
cmp
mov
xlat
jne
mov
and
pop
fimuls
clc
pusha
and
sti
mov
fidivrl
ja
push
inc
sbb
cwtl
movb
xchg
cmc
jmp
frstor
mov
cmp
cwtl
add
jle
pushf
es
pop
push
movsb
sub
sbb
das
rcr
sahf
cld
pop
sub
and
push
and
dec
mov
arpl
rclb
dec
xlat
pop
push
incl
insl
xor
lock
xlat
dec
outsb
lods
sahf
mov
aam
aas
cli
jno
mov
xchg
push
mov
xchg
jno
cli
jae
dec
idiv
lods
xor
mov
mov
mov
fwait
mov
shrb
fimuls
add
or
cmp
aas
inc
dec
das
push
neg
lea
mov
ret
call
test
insb
inc
dec
xor
xor
lds
mov
mov
shrb
adc
dec
mov
cmp
xlat
xchg
loope
leave
add
fmulp
mov
pop
adc
sub
out
adc
mov
int3
in
in
push
aad
cmp
mov
int
pop
or
sbb
inc
mov
iret
cmc
into
fs
dec
into
out
call
repnz
mov
push
or
aam
or
mov
push
pop
fisttpl
dec
or
out
cmp
sbb
add
hlt
hlt
push
add
pusha
pop
test
add
mov
ja
pop
mov
pop
mov
add
data16
inc
dec
cmp
cmp
fsts
lock
addr16
pop
jbe
mov
mov
test
jge
inc
int3
cmp
sub
repz
pushf
inc
dec
push
pop
imul
jmp
inc
adc
mov
ss
movsl
rorb
add
cmc
mov
add
add
decb
enter
pushl
mov
test
icebp
popa
je
xor
cld
ret
mov
cli
or
pop
and
les
in
add
repz
subl
andl
je
add
jnp
add
mov
in
push
mov
push
xchg
and
sub
push
push
lock
cmp
adc
lcall
inc
inc
inc
sub
pop
jmp
out
pop
sbb
je
mov
mov
mov
cld
lods
push
outsl
ror
xchg
mov
xchg
pusha
sbbl
cmp
jle
and
inc
push
gs
pop
add
pop
add
lods
mov
maskmovq
notl
pop
xchg
repz
and
mov
dec
mov
mov
loop
mov
inc
jnp
fbld
adc
iret
cld
das
pop
mov
dec
push
gs
movsl
je
sarb
xchg
or
stos
lret
lds
int3
cli
int3
jmp
stos
xor
xchg
cltd
loop
mov
and
push
je
fwait
lds
adc
xor
add
and
cmpsl
cmc
cmp
jmp
inc
hlt
data16
into
mov
fwait
push
stos
loop
dec
popf
nop
cmp
add
sub
cld
push
mov
int
ficompl
mov
mov
je
popl
mov
imul
xor
push
aaa
xchg
test
push
pushf
xchg
push
filds
movsb
mov
nop
popf
adc
out
add
rclb
test
ljmp
mov
cmp
ficoms
loope
sti
test
push
bound
jb
xchg
test
cmp
cmp
mov
inc
add
stos
dec
pop
aam
cmp
out
jne
xor
dec
add
loop
or
insl
scas
sub
loope
cmc
ffreep
inc
sbb
jmp
jae
repnz
arpl
jp
arpl
rcl
xchg
loop
insl
test
add
jecxz
shr
and
loop
shl
fidivs
mov
push
push
mov
adc
out
inc
mov
test
out
loope
sbb
aad
pop
iret
cs
pop
aaa
ret
mov
xor
imul
jecxz
or
scas
test
ret
mov
aaa
cmc
adc
movsb
addl
lea
jne
or
jne
scas
fstl
push
sbb
js
pushl
pushf
mov
or
popa
jne
jae
mov
aam
es
sahf
lock
push
adc
or
lea
fwait
sbb
adc
adc
sbb
mov
ret
sub
out
mov
add
add
and
ss
adc
cmp
aas
loop
dec
cs
add
xchg
ficoml
mov
xchg
mov
cmp
push
std
imul
mov
lods
xor
imul
add
fistps
dec
pop
adc
xor
test
push
daa
sub
inc
sbb
mov
out
sub
test
push
inc
adc
jp
sbb
in
data16
stc
daa
sbb
push
test
js
aaa
or
dec
test
lcall
cmp
sahf
in
xchg
sbb
xchg
outsl
mov
pop
stos
stos
addr16
inc
shl
lock
int
sbb
push
dec
fcmovb
cmp
add
rol
adc
jnp
cli
or
mov
je
adc
pop
cmpl
push
mov
into
addl
cli
mov
mov
leave
cltd
leave
popf
and
jle
leave
out
jns
clc
xor
jle
pop
dec
mov
mov
dec
int3
hlt
lahf
cmp
insl
sub
add
int
add
xchg
ffreep
shll
add
cs
pop
imul
leave
adcl
stos
sar
cwtl
sbb
lret
dec
js
nop
in
or
mov
sub
adc
or
mov
das
pop
sub
lret
aas
adc
clc
inc
jns
imul
inc
mov
pop
jp
mov
sbb
stc
sbb
out
cmp
sbb
pop
into
mov
xchg
out
or
push
pop
add
xchg
dec
mov
arpl
je
and
cltd
cltd
mov
ret
mov
imul
popa
jo
out
push
ljmp
or
pop
add
fldenv
push
xor
mov
push
adc
movsl
dec
push
das
mov
sub
popf
push
pop
imul
scas
rorb
dec
mov
icebp
cmp
or
inc
cwtl
jnp
push
clc
mov
cltd
decb
push
push
or
addr16
js
xorb
jb
inc
rorb
hlt
xor
scas
test
xchg
mov
adc
hlt
sbb
sarl
in
pop
inc
xor
fisubs
js
aas
shll
xchg
call
insl
add
lret
inc
popf
dec
cmc
mov
stos
lods
mov
mov
cli
in
pop
jb
arpl
sti
lret
fnstcw
mov
insb
out
jmp
mov
or
out
jl
in
sbb
or
int3
sbb
jae
out
orl
negl
dec
cltd
cli
jno
fldcw
xor
sbb
jae
stos
lahf
outsb
cmp
add
movsb
outsb
orb
cmc
out
insb
sbbb
mov
and
test
lret
lds
test
fstps
xor
pop
fmuls
push
xchg
mov
jbe
sub
lea
in
movsb
push
ss
jo
adc
jo
sbb
in
cmp
mov
stos
repnz
and
ficoml
add
outsb
cs
test
sub
sar
imul
lea
stos
sub
notb
push
xor
lret
pushf
arpl
jb
rolb
sbb
mov
bound
clc
call
je
cmpsl
adc
xchg
jno
push
jns
je
icebp
and
jnp
xchg
in
int
insl
arpl
sbb
bound
sub
les
test
je
or
sbb
mov
push
jne
repnz
jl
stos
call
test
or
xor
jg
addb
add
inc
icebp
jge
rcr
mov
ljmp
js
insb
jmp
xchg
pop
inc
cmp
arpl
dec
je
mov
aaa
pushf
iret
lds
cwtl
aad
adc
loope
outsb
insb
movsb
lahf
sbb
je
outsl
push
sbb
inc
nop
out
addr16
out
dec
inc
mov
dec
bound
push
mov
fistps
cmp
mov
call
inc
and
sbb
xor
mov
dec
dec
movsl
push
adc
mov
mov
push
mov
mov
pop
dec
int3
sti
lods
mov
lahf
int3
adc
movsl
xor
lds
in
add
pop
xor
pop
ljmp
mov
or
mov
mov
push
cltd
sbb
lock
xchg
push
inc
ret
and
mov
mov
inc
into
lods
jmp
dec
lea
shrl
addr16
sar
std
inc
cli
cmp
xor
push
mov
sbb
in
sub
ss
inc
jmp
mov
mov
add
sub
fs
adc
adc
pop
das
movsl
jne
lods
sbb
xor
jbe
call
arpl
out
repz
pushf
addb
dec
in
cli
push
data16
jno
jecxz
mov
movsl
sub
jns
inc
scas
jo
lods
and
scas
jbe
inc
mov
sbb
pop
xchg
ret
mov
rorl
mov
pop
inc
inc
mov
dec
mov
mov
push
sbb
rcrl
gs
loop
addr16
sub
decb
inc
xlat
jno
inc
or
pushf
adc
mov
insb
or
xchg
xor
mull
mov
sub
xor
test
ds
or
dec
lods
adc
xor
inc
sbb
in
data16
imul
loopne
sbb
inc
jns
jge
ljmp
pop
aad
add
xchg
insb
add
fidivrs
inc
stos
jge
lds
add
negb
in
xchg
jg
adc
lds
jnp
xchg
xchg
dec
add
pop
lea
mov
aad
inc
movsl
pop
je
mov
ficoms
repnz
orb
inc
cld
rcl
jbe
cld
insl
aaa
gs
dec
cmpsl
pop
inc
adc
ret
adc
jb
jo
ds
xchg
mov
jp
out
repz
ret
dec
cmp
pop
mov
mov
mov
lock
add
adc
cltd
pusha
fs
es
aad
mov
fwait
pop
faddp
xchg
fbld
pop
call
je
filds
push
pushf
cwtl
mov
mov
xor
add
out
jbe
add
jb
jmp
clc
lock
divl
xchg
push
shlb
fdivl
fbld
jae
add
and
push
sti
mov
test
orl
cmpb
ror
pop
mov
into
mov
clc
and
fiadds
ja
in
nop
ds
xchg
insb
push
mulb
xor
pop
rcr
lahf
jae
je
or
test
jno
cmp
xchg
sar
xor
shlb
pop
mov
stc
mov
insl
mov
or
jno
and
jecxz
stc
cmpsb
mov
inc
mov
xchg
sbb
fldcw
pop
dec
movsb
sti
repnz
dec
xchg
cmp
ja
xor
inc
lea
outsb
sti
in
lea
subb
dec
push
nop
cli
or
test
cltd
cmp
cmp
repnz
es
jmp
js
cmp
fcmovnu
push
xor
push
ds
xor
bnd
mov
lods
fcmovnbe
fdivr
dec
loop
incb
decl
bound
inc
xchg
xor
mov
sbb
insl
data16
adcl
out
xchg
int3
pop
es
addb
push
inc
std
push
mov
rolb
ret
and
cmp
in
jnp
cmp
pop
or
int
adc
out
adc
sbb
adc
jp
shl
jg
mov
xchg
jns
stos
stos
nop
and
testl
daa
dec
xchg
aas
inc
and
test
dec
bound
mov
push
sub
andl
notb
cmp
pop
xchg
pop
mov
loope
pop
fs
mov
pop
xchg
mov
test
ret
test
sub
mov
xchg
push
mov
xor
pop
aas
cli
inc
repz
or
or
mov
inc
cmp
pop
ds
scas
sti
test
push
xchg
int
leave
lock
sbb
and
mov
jecxz
add
mull
jno
ficompl
mov
mov
cmp
pop
xchg
das
sbb
xchg
mov
decl
push
jge
ljmp
out
pop
dec
into
cmp
fisubrs
pop
push
mov
pop
lds
pop
inc
movsl
test
pop
imul
iret
rcll
xor
insb
test
pop
ret
lock
jge
addl
jg
lea
xor
stos
cli
nopl
and
xchg
fsubrl
adc
pop
stos
ds
or
xchg
cmp
pop
dec
rclb
jbe
cmpsb
clc
inc
mov
sub
mov
fsubs
loopne
les
sub
in
pop
cli
xchg
jns
fs
arpl
scas
out
in
fucomip
sub
nop
push
sbb
xchg
mov
imul
and
pop
mov
push
cs
sbb
cs
and
cmpsl
jmp
jne
call
add
lods
mov
or
mov
loop
pop
in
add
scas
daa
lods
out
dec
push
pop
push
cld
ja
push
jge
rcrb
push
cmpl
movsl
pop
xor
fmull
push
lods
ds
divl
dec
cwtl
xlat
in
mov
andl
in
dec
dec
ret
rcr
or
in
cli
push
in
mov
lcall
xchg
daa
lds
cltd
ret
jne
dec
fisubs
xor
sbb
call
rcrb
jl
mov
dec
test
loop
int3
enter
pop
test
test
loop
mov
push
jbe
cmp
or
mov
sub
stos
sbb
jb
jbe
mov
and
sbb
jecxz
fldl
add
es
cmpl
pop
inc
les
push
cld
test
inc
sbb
adc
hlt
sub
insl
in
inc
and
icebp
dec
xor
or
sub
jns
dec
lods
adc
insl
int
mov
xlat
mov
push
cmp
push
dec
jl
in
add
mov
shrb
hlt
or
sbb
sti
inc
cmc
cs
lock
jnp
addl
mov
dec
push
adcb
inc
clc
int
jle
inc
sub
xchg
loope
mov
xor
pop
push
pop
lods
fucomi
adcb
add
pop
andb
mov
and
pop
or
adcb
insb
cmpl
popa
cwtl
push
push
pop
inc
mov
or
jle
out
pushf
test
and
xchg
inc
fimuls
add
in
xor
shlb
jmp
daa
lods
ja
adc
dec
cld
jno
shrl
xor
pop
daa
pop
cmp
inc
push
or
rcl
ja
ljmp
jg
xchg
dec
mulps
aaa
stos
pop
push
push
jno
jmp
and
adc
fiaddl
xchg
fsubrl
xlat
cmpl
test
cmp
mov
mov
push
das
jns
inc
mov
mov
inc
xchg
xchg
mov
sub
and
mov
dec
push
jl
mov
fs
cwtl
adc
call
inc
and
pop
cltd
mov
or
and
pop
ss
xor
andl
aad
out
jg
push
mov
xchg
aas
push
lahf
and
scas
daa
xorl
jb
cmpsl
les
icebp
cmp
out
sbb
cmp
sub
rolb
data16
push
or
in
insl
mov
pushf
mov
movl
dec
lods
das
jle
sub
jl
cmp
inc
and
cli
test
sbb
push
xchg
add
mov
sti
jecxz
inc
xor
cwtl
and
fisttpll
adc
negl
push
xor
js
mov
push
push
addr16
add
popf
sbb
daa
xor
xchg
jp
and
in
fldcw
popf
add
push
jo
cld
mov
enter
pop
dec
stc
movsl
mov
lock
sbb
cmp
jae
add
push
ret
out
and
push
jns
icebp
sub
repnz
fcompl
repnz
sahf
rorl
mov
cli
mov
aaa
xchg
mov
out
addr16
xor
sub
mov
sbb
insb
in
cmpsb
inc
xor
cmp
push
push
pop
fsqrt
jno
fucom
std
mov
in
aad
subl
mov
push
xchg
lret
outsb
scas
ds
or
inc
loopne
or
push
int3
enter
shll
push
mov
dec
jno
popa
dec
and
data16
push
data16
sbb
cld
xlat
test
leave
pusha
xchg
xor
cmp
outsl
sub
sub
push
mov
adc
outsb
scas
call
inc
sub
mov
push
ja
and
add
les
mov
sbb
sub
bnd
and
pop
xor
sub
and
test
adc
jg
and
in
fdivrp
mov
dec
ficompl
push
imul
mov
outsb
adc
sub
lods
fsubrp
sub
and
rol
push
adc
inc
inc
lock
andb
mov
pop
nop
hlt
lret
jo
cltd
fwait
setae
mov
int3
pop
push
fmul
push
lret
scas
into
jge
mov
cltd
ret
push
cmpsb
icebp
inc
lods
pop
add
imul
inc
or
nop
sub
inc
adc
cmp
dec
push
test
jbe
stos
insb
jle
test
lds
mov
mov
pop
lret
movsb
pop
sbb
insl
or
dec
mov
and
push
repnz
jmp
xchg
mov
jno
pop
call
sbb
adc
push
aam
dec
fbld
pop
jb
into
push
pusha
idivl
shr
push
jge
int3
jle
call
stos
cmp
xorb
fstps
adcl
test
xchg
std
push
sbb
mov
inc
loopne
scas
pop
cld
mov
loopne
scas
iret
daa
cmp
or
adc
and
add
imul
nop
imul
mov
test
clc
pop
push
mov
lret
gs
outsb
popf
push
and
popf
sub
or
pop
cltd
jecxz
mov
enter
mov
pop
and
mov
stos
and
or
mov
mov
xor
testl
es
pop
out
jae
test
addb
cmp
sti
movsl
cmp
inc
jno
out
sti
inc
add
mov
lcall
dec
paddsb
mov
shll
pop
loopne
push
push
cmp
pop
jno
sub
dec
out
imull
xlat
in
out
xchg
mov
cld
sub
jge
xor
sub
movsb
lahf
nop
gs
pop
pop
sub
xor
dec
adc
and
addb
jmp
test
mov
add
jle
data16
lods
adc
xchg
stos
sub
jmp
dec
xor
jno
pop
xor
mov
push
lret
aaa
mov
loope
imul
cmpsb
xchg
sarl
nop
aad
push
lret
addr16
cs
xor
aas
mov
fdivl
in
jbe
cmp
pop
dec
fistpl
inc
dec
cmp
or
shlb
das
lods
mov
add
ret
and
cmp
repz
out
push
es
popf
cs
cmc
mov
sarl
xlat
sub
or
push
dec
and
sub
neg
push
push
divl
xchg
inc
add
cld
inc
pushf
xor
adc
adc
pop
adc
jmp
aam
jmp
shlb
lock
sbb
arpl
shrl
hlt
mov
mov
int
cld
andb
xchg
outsl
sub
call
sbb
mov
mov
add
sbb
movsb
mov
imul
add
loop
aam
or
std
imul
inc
cmpsb
stos
inc
or
mov
inc
movsb
mov
fnstenv
test
mov
adc
push
jnp
clc
pusha
push
ret
add
ret
pop
and
cltd
push
pop
fs
push
stos
jae
cmpsl
fildll
push
not
into
dec
pop
outsb
cltd
mov
or
lahf
mov
pop
sahf
sub
pmaxub
push
fisttpll
mov
cmpsl
ss
fidivrl
cmp
cwtl
negb
pop
mov
jne
jecxz
add
dec
fistpl
test
xchg
pop
inc
lock
out
jmp
lds
pop
add
aaa
or
lret
mov
popa
jmp
neg
iret
mov
adc
xor
cs
int
mov
pop
push
outsl
out
push
arpl
test
mov
cs
popf
call
cmp
lahf
and
xor
xor
jbe
xor
xchg
test
repnz
data16
push
std
ss
push
lret
or
mov
out
mov
jno
aam
push
xor
push
cli
xor
adcb
mov
stc
shrb
jno
jg,pt
stos
and
adc
lods
stc
pop
shlb
sub
push
arpl
cmp
call
pop
xlat
and
cmp
xor
push
ja
imull
int
icebp
inc
in
test
sbb
lcall
pop
dec
iret
test
loopne
arpl
stos
push
jmp
mov
sub
xor
inc
icebp
cmp
cld
mov
shl
out
mov
xchg
arpl
test
push
iret
add
testl
mov
push
ret
ss
mov
inc
xor
fcoml
incb
adc
fisubl
xchg
pop
popa
push
fisubs
lea
cmp
dec
jp
mov
je
in
mov
leave
cmp
and
enter
sti
insb
outsl
jle
push
cmp
imul
stos
fidivrl
fcoml
jge
push
mov
hlt
and
mov
adcl
sbb
test
cmp
mov
and
repz
mov
jge
sub
sub
jmp
push
pop
add
pushw
test
movb
lods
ret
sarl
push
aad
sbb
ja
mov
lret
mov
imull
orb
push
dec
outsb
xchg
insb
xlat
sbb
mov
lods
cs
jo
mov
int
jmp
shlb
add
imul
subb
inc
fisttps
mov
sub
outsl
mov
data16
xor
sahf
in
call
mov
inc
sub
mov
push
cmp
dec
mov
fwait
popa
shlb
and
mov
jae
mov
xchg
lret
jmp
daa
and
dec
xor
push
loope
insl
es
dec
mov
stc
mov
sbb
mov
push
daa
out
incl
dec
lea
and
mov
cmpsb
adc
inc
pop
cmp
fcoml
pop
imul
mov
into
mov
mov
test
sub
nop
push
mov
clc
xor
xor
push
mov
fimuls
inc
push
cltd
arpl
stc
fimull
js
push
mov
std
dec
rcr
lret
stc
fistpll
inc
pop
in
mov
sbb
jl
ficoms
pop
jno
cld
clc
mov
mov
sbb
dec
stos
add
dec
fwait
add
jecxz
inc
ficoms
sub
cmp
xchg
and
push
xchg
inc
stos
inc
jae
cwtl
mov
inc
es
shll
inc
adc
pop
mov
mov
test
insb
xor
pop
inc
shlb
dec
xchg
int
call
jnp
ret
mov
pushf
pop
sbb
ja
xchg
pop
scas
mov
scas
shr
push
loopne
pop
mov
scas
jge
mov
call
sub
enter
cmp
push
daa
xchg
dec
das
push
lods
lcall
mov
jnp
xor
xchg
jecxz
pop
adc
scas
outsl
aam
ss
fisttpll
leave
jge
addr16
or
fs
push
dec
notl
adc
cld
xlat
popa
push
and
inc
xor
mov
int
push
mov
inc
cld
pop
stos
movsl
test
xor
sbb
stos
pextrw
cmp
cmpsb
adc
sub
cli
or
cmpsl
pop
repz
sub
inc
pushf
insl
cmp
test
rcr
loopne
iret
fsubl
cwtl
push
xchg
push
into
in
add
jg
ds
cmp
call
repz
movsl
inc
dec
pop
or
or
lea
mov
pop
cmp
jl
and
fstpl
mov
ljmp
add
daa
xchg
pop
insb
add
dec
popa
cmp
sbb
sbb
cld
pop
jne
loopne
cs
jp
add
jge
js
jb
add
mov
or
insb
out
fisttpl
xor
xlat
xor
push
xchg
push
insb
mov
mov
xor
std
shlb
int
insl
push
mov
in
fwait
mov
push
and
mov
sbb
mov
push
repnz
lahf
mov
sub
cmp
push
gs
lods
aam
xchg
jb
pop
fistpll
sahf
mov
inc
dec
push
pop
loop
and
fmull
aaa
sarl
mov
leave
sbb
fwait
aas
sbb
rorl
repz
push
mov
outsl
xor
mov
cld
adc
decl
fidivl
sarl
mov
lret
inc
stc
mov
adcl
or
mov
xchg
pop
dec
xorb
insl
dec
mov
loopne
jb
stos
cltd
jge
pop
daa
test
jmp
adc
mov
sti
push
mov
xor
shll
pop
add
xlat
insb
push
dec
adc
mov
mov
rclb
dec
jmp
cmp
cwtl
enter
xchg
adc
out
push
mov
pusha
xchg
sarl
popa
sbb
imul
sbb
shrb
lock
cmpsb
imul
leave
jbe
sub
add
daa
pop
add
xchg
rclb
cmp
dec
hlt
xor
ds
xchg
stc
imul
mov
cmp
mov
fwait
inc
inc
push
addr16
or
inc
fstpt
push
mov
push
jp
pusha
and
pop
xchg
push
jecxz
in
xchg
cmp
mov
imul
push
pop
dec
clc
inc
fiaddl
sti
mov
cmpsl
sbb
cli
sarb
xchg
mov
mov
inc
rorl
xlat
scas
stos
inc
add
scas
insb
shll
outsl
pop
adc
xchg
sub
test
inc
test
out
jo
loop
dec
or
in
adcl
ljmp
xchg
or
sbb
push
aaa
leave
jne
cmp
mov
lds
sbb
jge
xchg
imul
out
and
sub
fdivs
imul
lret
out
sub
jae
inc
mov
outsl
clc
dec
outsl
fidivrl
mov
stc
push
add
inc
or
xchg
mov
push
out
sub
jl
and
test
aaa
test
lea
call
sbb
fidivs
data16
arpl
adc
xor
ljmp
jg
mov
daa
inc
add
repz
mov
jb
push
mov
sub
es
mov
fisubl
mov
xchg
xchg
pop
arpl
in
cmp
mov
clc
mov
imull
jmp
mov
dec
pop
lods
adc
dec
outsb
rcl
rcl
ret
out
inc
mov
sahf
jp
lret
dec
cmp
dec
push
jle
stos
inc
popa
loopne
mov
xchg
stc
aam
mov
xchg
ss
inc
pop
outsl
popa
loopne
and
test
into
inc
je
imul
mov
push
stc
pop
call
push
mov
fwait
sbb
sbb
lods
idivb
aam
mov
mov
mov
jbe
mov
xchg
cmp
dec
sbb
bound
mov
push
and
and
ret
test
fbld
cmp
jo
mov
fstps
inc
lds
ja
scas
out
fiaddl
cld
sbb
inc
daa
aas
jp
js
test
jle
js
test
stos
out
inc
cmp
mov
popf
pop
adc
push
ret
mov
dec
add
repz
add
xchg
addr16
pop
mov
xor
inc
decl
push
leave
adc
cmpsb
fisttpl
jo
rcrb
cmp
jne
cmpsb
pop
sub
xchg
rcll
fwait
testb
idivl
push
xchg
pause
out
fld
pop
jge
mov
pop
imul
outsl
imul
pop
push
and
ja
test
shrb
fsubp
jecxz
ret
mov
lret
adc
icebp
xchg
incl
gs
sahf
or
negb
ficomps
inc
xor
and
jne
mov
cs
mov
enter
fsubrs
cmp
push
cli
fcoms
out
push
fmull
mov
sub
pop
dec
mov
xor
xchg
push
xchg
inc
add
mov
clc
test
lds
pushf
cltd
rcl
adc
fwait
sarl
aad
push
jge
cmp
lret
nop
inc
das
pop
xchg
jbe
adc
aad
shll
ds
shlb
or
sahf
sbb
out
add
adc
mov
pop
in
fadds
es
sbb
sbb
ror
adc
jl
faddl
push
fimull
and
fimuls
or
enter
sub
insb
cmpl
sbbl
inc
xchg
fwait
push
loope
xchg
sbb
mov
and
iret
andl
push
dec
dec
lea
inc
or
dec
mov
pop
sub
adc
ds
inc
xchg
popf
ds
test
mov
pop
mov
pop
adc
sub
jno
sbb
xor
es
sub
xor
jmp
xchg
gs
scas
dec
mov
mov
loope
cld
push
jns
pop
xchg
xor
push
mov
repnz
xchg
push
sahf
sub
push
loop
imul
mov
push
stos
arpl
adc
sarl
fmuls
jnp
xchg
mov
adc
les
mov
imul
cmp
dec
pop
mov
shrb
aad
adc
stos
mov
out
push
xlat
cs
push
sub
ffreep
je
mov
pop
das
rolb
je
and
adc
sbb
sbb
pop
sub
adc
xchg
mov
stos
scas
pop
pusha
xchg
jmp
inc
xchg
add
aaa
cmpsl
bswap
dec
std
adc
les
pop
shll
adc
lret
sarb
mov
sub
std
lea
xor
pop
xchg
cmpsb
mov
in
iret
jp
adcl
iret
mov
mov
in
orl
dec
out
adc
jecxz
je
push
loope
and
fidivrl
push
aad
cmpsb
mov
ljmp
push
out
add
mov
gs
and
pop
sub
mov
sbb
xchg
cltd
sbb
pop
cmc
repnz
lods
mov
cs
adc
shlb
jbe
jge
dec
es
int3
inc
add
adc
adc
push
jbe
out
rcrl
clc
pop
jae
psubb
xlat
or
push
lahf
xchg
packsswb
cld
mov
pop
mov
xor
push
jmp
cmp
sbb
out
in
ja
and
ret
xor
sbb
jl
jp
ljmp
adc
inc
pop
pop
mov
push
dec
aam
je
nop
jmp
icebp
jp
jecxz
aaa
in
adc
or
mov
fstpt
xchg
test
sub
out
and
xchg
and
pop
les
ficoms
lods
cmc
xor
cs
cmp
mov
sub
cwtl
push
dec
sub
aas
loopne
orb
shr
inc
fidivrs
mov
xlat
stos
and
inc
pop
add
push
bound
std
je
xor
ret
mov
jns
dec
and
mov
fldl
cld
sbb
out
mov
test
pusha
push
add
add
jge
int3
jno
shlb
sti
sbb
xchg
dec
jle
add
dec
add
stc
mov
mov
loope
mov
out
push
dec
iret
mov
loope
jb
js
sub
sti
add
mov
pop
mov
es
lods
lods
fs
aas
dec
xor
pop
push
in
jnp
aaa
push
mov
out
lock
adc
into
or
push
jae
push
in
int3
fldl
xchg
dec
mov
sub
push
mov
repz
jmp
orb
or
jbe
rcrl
adc
cmp
mov
out
or
xor
jno
cmp
mov
pop
or
ds
je
in
adc
movsl
cmc
mov
pop
xchg
inc
mov
jnp
push
test
rcrl
daa
mov
clc
add
push
dec
aad
cmp
mov
arpl
add
mov
push
and
aam
fwait
jp
nop
ret
cld
mov
or
je
ss
cmpsb
insl
mov
leave
sub
and
cli
pop
push
mov
xlat
lock
jns
push
dec
push
jb
lret
cmpsb
add
insl
sarl
dec
mov
xchg
cltd
lea
mov
dec
out
int3
adc
xchg
and
aas
mov
fldcw
dec
inc
testl
aad
adc
push
fdivp
in
adc
test
sbb
pushf
adc
mov
and
je
adc
outsl
xchg
std
ljmp
inc
imul
loop
sbb
push
loopne
repz
jge
in
and
rorl
sub
push
jp
jno
push
push
int
mov
jo
int3
xchg
jns
lock
rcrl
dec
xor
into
loope
lock
jae
dec
rcr
push
dec
pop
enter
push
mov
cmp
mov
push
and
xchg
js
xchg
adc
lock
push
es
into
rclb
js
mov
arpl
hlt
adc
adc
xchg
rcr
mov
or
mov
mov
or
roll
mov
hlt
adc
ror
pop
xchg
inc
pop
push
jae
nop
and
mov
jge
and
cmc
xor
pop
mov
xchg
in
pop
xchg
xchg
clc
mov
lea
push
arpl
gs
jle
popa
adc
sti
mov
rolb
shl
pop
or
xchg
lahf
es
mov
movsb
mov
and
or
mov
nop
cmc
cmp
jp
arpl
dec
mov
stc
jbe
push
movsb
push
negl
xchg
test
sbb
mov
push
mov
or
jb
jne
lcall
ss
sub
jnp
lock
or
or
push
test
data16
fwait
mov
xorb
fdivrl
adc
lea
mov
rorb
add
inc
adc
enter
outsl
sub
ss
shlb
loopne
test
or
les
out
pop
nop
mov
jns
sub
rolb
iret
xor
scas
in
mov
test
sbb
shll
subl
int3
shl
push
cwtl
lea
aaa
loop
cmp
mov
push
mov
pop
out
xchg
cmp
shrb
xor
andl
mov
cmp
pop
inc
aaa
dec
jbe
xchg
push
jecxz
arpl
push
push
lcall
mov
clc
pop
sub
pop
adc
fsubrl
mov
lret
jl
mov
data16
pop
add
scas
lock
inc
add
out
rcl
add
aaa
inc
std
loop
repnz
into
lcall
testb
cmp
push
dec
jecxz
xor
movsl
rolb
stos
movsl
mov
sub
cmpsl
pop
add
xchg
xor
mov
nopl
sbbl
cmp
and
push
fwait
std
stos
inc
lods
insb
pushf
inc
jle
mov
call
aaa
cli
hlt
jae
lss
stos
sbb
aam
xlat
into
out
xchg
push
sbb
xor
mov
sbb
in
popf
jo
insb
xor
lahf
gs
mov
pop
mov
or
sub
aas
or
xor
and
ja
lret
sub
nop
adc
scas
gs
sub
imul
movsb
jle
sub
movb
inc
stc
mov
jb
sub
push
mov
testl
ljmp
xchg
and
pop
inc
dec
rolb
xor
inc
fiaddl
sbb
test
rolb
andl
sbb
in
addr16
xlat
push
sub
jne
mov
stc
les
hlt
dec
mov
inc
mov
cmp
ret
lods
fsubrl
testl
nop
or
cmp
or
jp
xchg
or
fs
push
mov
jo
push
inc
xor
sti
pop
daa
ds
add
scas
scas
fmull
push
mov
sbb
cltd
fwait
mov
pusha
push
gs
or
pop
sarb
add
nop
xor
into
pcmpgtb
test
std
cmp
mov
rcll
xchg
xchg
scas
dec
xchg
scas
jecxz
repz
out
lds
pop
mov
insb
and
addb
in
or
mov
xchg
lods
jge
sub
je
insb
fadds
or
ret
movswl
in
fiaddl
xchg
and
sbb
cmp
mov
pop
mov
mov
mov
call
xor
push
xchg
jp
inc
mov
stos
dec
mov
sbb
fimuls
orl
lret
dec
pop
lds
xchg
inc
dec
or
pop
in
inc
mov
pop
pop
rcr
pop
dec
hlt
inc
or
lock
clc
test
fstps
xchg
test
dec
call
jmp
sbb
lds
loopne
ljmp
test
adc
push
test
pop
and
sbb
pop
sahf
aam
std
jb
cmp
jmp
xlat
or
or
cmp
lods
dec
pop
lods
push
mov
hlt
xchg
scas
push
out
mov
mov
xor
add
adc
add
out
fisubs
int3
dec
mov
lahf
loopne
out
inc
je
ret
mov
mov
fwait
jbe
or
mov
add
adc
daa
xchg
cmp
mov
xor
popa
cs
stos
mov
ret
or
fnsave
sbb
cmpsb
cmp
in
pop
sub
cli
inc
repnz
notl
cmp
insb
or
push
lcall
leave
dec
lods
pusha
fstl
sti
xor
popa
xchg
mov
rep
fldcw
out
cmp
test
mov
nop
dec
dec
cmpsb
lock
pop
loope
pop
jge
notb
push
push
pusha
arpl
inc
sub
sarb
add
jg
loop
scas
aaa
xor
add
rcrl
in
ss
popf
stc
frstor
insl
loop
fcoms
mov
daa
cmc
out
je
lods
or
rcrb
push
xchg
aam
sub
mov
fsubs
and
fwait
int
xor
adc
in
iret
push
sub
mov
mov
and
lods
mov
add
movsb
into
cmp
inc
mov
nop
hlt
pop
mov
test
or
or
pop
cmp
sbb
cld
push
inc
adc
movsb
mov
mov
cld
pop
scas
xchg
loopne
es
sbb
or
push
call
cmp
jns
inc
les
push
dec
outsl
stos
stc
cmpsb
jo
in
jnp
cmp
popl
leave
inc
inc
and
shll
sti
xchg
mov
and
and
mov
sbb
pop
mov
and
or
in
dec
jae
out
mov
imul
mov
push
in
push
imul
in
push
pop
sub
data16
loop
xor
dec
inc
imul
in
pop
push
fsubl
das
pop
negl
outsl
incb
repnz
push
dec
lods
jp
pop
cs
mulb
xchg
ja
es
cmp
push
int3
sbb
out
out
adc
xor
aas
nop
mov
xchg
andb
xor
enter
xor
cmp
pop
rclb
imul
or
dec
bound
and
and
mov
cli
repnz
mov
pop
imul
outsb
xor
popa
jecxz
jno
jl
ret
std
push
push
and
int
daa
pop
or
loope
mov
lret
scas
jmp
adc
aas
cli
mov
mov
and
dec
popa
movsl
pop
xchg
xchg
mov
popf
and
imull
sbb
in
imul
icebp
push
lods
arpl
cltd
pop
movsl
cmpsb
jmp
and
sbb
or
push
push
add
push
xor
lods
rcr
movsl
xor
arpl
repnz
inc
or
enter
adc
jnp
icebp
jmp
add
dec
push
popa
out
mov
fdivl
sbb
push
enter
sub
insl
jb
jae
or
dec
test
sub
mov
xchg
inc
stos
inc
into
cmp
push
push
ficoms
sub
outsl
insl
cli
mov
sub
icebp
mov
sbb
jno
dec
cmp
xor
in
mov
shlb
jp
jecxz
or
mov
data16
fwait
rcrl
pop
push
stos
push
cmp
out
cmp
inc
int
cmp
xchg
pop
das
sbb
jecxz
inc
jmp
fdivp
insb
mov
or
movsl
pop
sub
loop
add
push
push
mov
cmp
mov
shrb
mov
dec
cli
test
adc
mov
test
sbb
adc
out
outsl
pop
push
or
mov
aaa
mov
jo
imul
fcompl
or
faddl
mov
inc
and
mov
and
rorb
loop
jg
mov
out
inc
mov
ds
movsb
nop
popf
das
mov
cwtl
and
shll
ds
repnz
adc
xor
imull
xor
scas
outsb
das
and
push
or
leave
repnz
push
lahf
repnz
or
jnp
push
test
pushf
jmp
or
push
out
fdivrl
call
movsb
cltd
orl
mov
dec
xchg
lret
or
xor
push
test
mov
and
test
mov
lock
sub
cmc
push
loop
insb
push
pop
add
pop
jnp
push
xchg
cmpsl
adcb
cmpsl
data16
push
mov
in
dec
cmc
inc
add
mov
mov
xchg
mov
int3
adc
in
loop
push
sti
mov
shrl
pop
mul
sub
jp
xchg
dec
lea
test
fmuls
loop
inc
pop
movsb
lret
jge
xor
mov
pop
fs
mov
scas
pop
pushl
daa
or
mov
add
loope
nop
mov
xchg
sbb
push
add
cmp
add
lods
sub
icebp
and
ja
push
cmp
lds
hlt
jmp
scas
mov
clc
push
mull
clc
push
adc
shll
addl
mov
jo
mov
enter
rcrb
in
arpl
out
and
or
xchg
cmp
xchg
mov
xorl
or
popa
clc
mov
mov
or
mov
repz
lcall
cmp
xchg
mov
jle
gs
mov
movsl
jae
mov
push
test
jle
les
dec
in
and
dec
xor
push
mov
pop
mov
das
call
xor
iret
stc
repz
cmp
lock
test
das
sar
pop
cmp
inc
lock
xor
add
sbb
jnp
inc
loopne
xor
jl
mov
repz
and
jge
jmp
sbbl
mov
mov
int
sahf
push
gs
jl
movsb
push
mov
add
gs
ds
pop
dec
fs
push
sub
testl
mov
pop
xchg
icebp
push
data16
mov
adc
ljmp
data16
ds
push
adc
fwait
cli
push
and
loopne
lds
xchg
xor
pop
sbb
sbb
jne
gs
js
inc
sub
std
pop
js
or
and
pop
cmc
shl
sbb
pop
xor
add
cmp
daa
movsl
add
push
test
mov
mov
or
or
push
jle
imul
jae
stc
lock
inc
mov
or
mov
jae
hlt
xchg
push
add
sbb
aaa
xor
fsubrl
xor
adc
or
aam
adcb
sbb
loop
mov
repnz
jmp
js
outsb
stos
pop
lea
in
icebp
adcl
add
sub
xor
icebp
xlat
sub
sub
out
sub
sbb
insl
call
or
jns
adc
test
xchg
adc
mov
pop
ret
mov
leave
mov
xchg
dec
out
icebp
inc
dec
adc
add
mov
mov
inc
je
xchg
cmc
das
push
sti
cmp
mov
lahf
add
test
cmc
bound
jg
mov
push
fildl
out
cmp
cli
ja
inc
pusha
test
push
andb
cmp
pop
dec
and
jae
xchg
inc
imul
cli
in
orb
push
neg
pop
xchg
lret
lock
adc
or
cmpb
stc
and
in
add
shlb
add
lock
pop
and
adc
mov
xor
and
cmp
inc
out
int3
push
cli
mov
sub
sub
adc
addr16
mov
loope
sbb
add
leave
jmp
int
dec
push
or
cmp
out
out
cli
jns
and
pop
out
dec
fisttpll
jge
push
or
and
xor
lds
cmp
xchg
out
add
pushf
xchg
jle
inc
sarb
xor
pop
scas
adc
call
push
fidivs
cmp
fwait
in
pop
sub
js
jo
adc
mov
push
call
lods
and
iret
mov
insb
movsb
dec
int
out
repnz
xor
mov
or
call
jo
jge
into
scas
leave
jmp
or
jmp
pop
xchg
add
mov
test
cs
push
xlat
cmc
rol
ret
dec
and
cs
outsl
std
out
sbb
lahf
xor
popf
pop
mov
shrb
idiv
into
mov
adc
xor
push
dec
mov
pop
cmc
mov
je
adc
xor
pushf
dec
es
insb
adc
roll
push
inc
jle
rclb
mov
pushf
into
mov
cmpsl
iret
or
sub
shlb
mov
enter
push
adc
xor
aas
mov
mov
stos
xor
xchg
cmpsl
cwtl
fcmove
cmp
inc
xchg
cmp
xchg
mov
scas
and
lock
xor
cmp
add
loopne
push
jbe
add
es
adc
mov
repz
jmp
ret
clc
in
xchg
pusha
adc
int3
and
aam
dec
inc
in
in
orl
xchg
jl
jl
jb
jno
mov
mov
sbb
sbb
cwtl
jnp
xchg
xchg
test
xchg
sbb
mov
ss
inc
push
andb
call
jle
pop
adc
fnstenv
jecxz
scas
mov
xor
ror
pop
push
or
and
lods
cli
sbb
xchg
push
in
sub
dec
test
inc
or
rolb
cmpsb
xchg
lea
sti
imul
mov
loop
push
mov
jns
or
mov
jle
std
movsl
std
cmp
rcrl
adc
inc
cmpsb
cmpsl
xor
mov
mov
xchg
adc
insl
push
dec
adc
push
mov
adc
in
daa
xor
jp
dec
loope
test
jo
imul
aaa
dec
out
and
addr16
sub
mov
lods
add
divb
xchg
push
inc
int
mov
mov
inc
inc
mov
or
add
in
or
pushf
xor
adc
sub
mov
lods
xor
mov
mov
movsl
rolb
or
jmp
push
sub
idiv
ret
jmp
pop
push
rclb
cmpsb
lcall
call
inc
mov
int
sbb
in
sbb
fwait
sbb
enter
jae
addl
mov
mov
or
pop
xor
out
pop
xchg
sbb
push
fmuls
push
push
std
mov
add
test
and
add
sbb
jb
push
xchg
push
adc
jg
cmp
pop
push
enter
cld
or
cmpsb
or
in
imul
xor
dec
pop
pop
push
xchg
jne
push
mov
shlb
movl
xchg
call
mov
in
mov
mov
pop
mov
jnp
das
bnd
jb
push
aaa
dec
inc
mov
ja
cwtl
sbb
fs
lods
lods
cmc
hlt
stc
fwait
push
mov
dec
xchg
xor
xor
jb
pop
dec
sub
inc
dec
cwtl
jb
sbb
inc
adc
int3
jp
sti
scas
mov
jl
stos
add
cmpb
jp
fdivrl
adc
adc
je
insl
push
stc
cmp
pop
ds
jge
xchg
rolb
sub
outsb
test
and
scas
aaa
mov
orl
cmp
sub
pop
lret
sub
cmp
mov
popf
and
xor
xor
inc
scas
xor
jmp
or
xchg
js
pop
adcl
cmpsl
out
fldenv
lahf
mov
jp
ja
mov
lret
lret
pop
dec
stos
ljmp
jge
pop
cmpsl
push
gs
out
dec
jno
mov
test
bound
in
xchg
pop
add
and
xchg
inc
jmp
adc
lods
push
add
addl
mov
add
sbbl
movsb
add
mov
insl
icebp
fwait
jle
out
insb
mov
fists
mov
dec
jge
lahf
iret
dec
mov
sahf
dec
adc
sub
cmp
ret
xchg
mov
jle
insl
inc
arpl
outsb
shl
arpl
mov
in
xchg
push
mov
fadds
sub
xor
adc
mov
and
and
aaa
idivb
jg
imul
and
push
mov
nop
and
ja
xchg
or
mov
adc
mov
jbe
mov
clc
imul
jb
ds
mov
mov
mov
xor
push
pushf
sti
sub
jo
dec
jne
insb
js
add
lods
dec
mov
or
dec
xor
cmp
test
mov
or
nop
sub
popa
imul
sub
jno
sbb
aas
les
pop
loop
pop
xchg
sub
imul
movq
xor
or
mov
and
popa
xchg
jne
and
jno
mov
cltd
into
daa
jle
out
xor
mov
mov
stc
lahf
xor
hlt
dec
inc
lret
inc
stos
lret
shlb
mov
mov
sub
inc
push
inc
mov
rcrl
nopl
mov
adc
cmpsb
jne
daa
xorb
fcomps
cmpsl
mov
scas
in
cmpl
inc
addl
pop
mov
mov
sub
repnz
sbb
shll
inc
pop
sbb
stos
outsl
sti
and
fstpt
xlat
arpl
xchg
jnp
xchg
add
add
or
dec
xor
aad
fcmovb
mov
add
mov
enter
lret
pop
pop
dec
or
sub
push
ljmp
movsl
cmpsl
lret
mov
es
push
push
xchg
std
out
pop
push
mov
cmp
test
bound
xor
add
and
mov
in
fnstcw
lods
pop
dec
arpl
cmc
adc
dec
pusha
push
inc
js
cmpsb
cli
inc
dec
cltd
add
test
stos
outsb
popf
cmpsl
lods
xor
sbb
movsl
pop
sbb
inc
sub
or
clc
rcll
pop
lcall
pushf
dec
adc
fidivrs
les
popf
sahf
jb
cs
fs
mov
lret
mov
xor
adc
negb
lret
and
and
adc
mov
flds
cmp
mov
mov
jge
xor
movsl
pop
decl
and
fists
in
dec
inc
fs
cmc
jb
decl
push
mov
push
lahf
mov
sbb
inc
cmp
adc
ret
jne
cmp
fdiv
adc
loopne
pushf
flds
dec
xchg
sub
or
inc
fldcw
fnstcw
jnp
popa
sub
xchg
incl
adc
aam
sub
data16
orl
push
mov
add
ret
sbb
jge
popa
sub
cmp
or
dec
frstor
xchg
jge
lret
loop
repnz
or
insl
scas
lea
dec
jnp
aam
mov
lods
cltd
xor
in
je
jp
jnp,pt
inc
mov
dec
and
and
hlt
mov
dec
pop
icebp
in
inc
ret
insl
mov
lock
or
test
movsl
enter
mov
xor
mov
sbb
sbb
push
fcom
mov
pop
in
sbb
cs
add
arpl
pop
jmp
jl
xrelease
clc
mov
push
sarb
cmp
movsl
mov
loop
or
daa
stos
repz
jnp
ljmp
or
adc
pop
pop
into
in
enter
aad
inc
fcom
adc
test
popa
dec
mov
mov
loop
bound
ss
xchg
mov
inc
push
mov
mov
loope
push
xchg
leave
fcmovnbe
jo
ljmp
xchg
outsl
mov
in
movsb
negb
mov
pop
arpl
pop
and
or
cmp
lcall
mov
fs
pop
push
adcl
lret
mov
pop
sub
push
imul
pop
bound
or
add
sbb
ja
pushf
popf
jmp
add
or
fnstsw
sub
sub
pusha
out
jnp
add
fidivrs
repnz
jae
jae
xchg
popa
bound
imul
dec
sub
clc
xor
xlat
out
into
repnz
sti
pusha
mov
and
cmc
leave
or
xor
xchg
dec
push
jecxz
sbb
in
push
out
or
arpl
popa
xchg
pushf
pop
xlat
jl
and
jp
ljmp
adc
mov
aam
adc
je
xor
loope
pop
int3
xor
xor
lahf
fstp
aad
adc
jl
fs
pusha
and
pop
or
pop
dec
orl
mov
xor
xchg
or
popa
jecxz
xchg
outsl
inc
ss
xchg
push
mov
sub
sbbb
scas
movsb
filds
xor
fwait
xor
push
rcr
fldenv
pop
push
mov
pop
jno
mov
ds
adc
sbb
andb
or
es
int
sub
cwtl
or
cmpsb
adc
aam
xor
mov
mov
sub
in
fcomip
loope
orb
inc
dec
and
pushf
push
test
jno
inc
pop
adc
cs
xor
dec
xchg
test
das
xor
push
aas
lret
movsb
adc
out
mov
inc
pushf
cmove
mov
cmp
mov
cmp
addb
in
push
jnp
jecxz
fmuls
dec
lahf
je
jo
add
decb
rorb
enter
sahf
xchg
fst
hlt
jmp
cmp
mov
mov
inc
dec
pop
leave
pop
mov
fwait
xchg
sti
mov
inc
mov
fistl
outsb
add
xchg
adc
add
leave
test
lret
pop
push
cmp
mov
test
or
stos
xchg
mov
push
insl
xor
mov
imul
or
jne
sbb
inc
decb
pop
pop
and
sub
mov
cwtl
push
ret
daa
nop
pop
testl
sub
cltd
fwait
jge
add
sbb
and
pop
push
shl
or
dec
imul
clc
je
add
jge
sbb
stos
lcall
lds
mov
or
cmc
mov
das
jecxz
add
cmpsl
add
fs
cmp
mov
cmp
push
ljmp
dec
outsb
jmp
imul
int3
outsb
int3
jp
lock
or
pop
sub
pusha
sbb
into
jno
sarl
out
frstor
clc
std
mov
xchg
push
sub
jge
cltd
or
adc
and
xchg
js
push
jnp
dec
inc
inc
gs
adc
push
jl
mov
mov
cmp
cmp
repnz
daa
and
das
adc
jle
xchg
xchg
fxch
loope
cmpsl
add
sbb
lret
cmp
mov
mov
lea
jmp
and
in
outsl
push
sbb
adc
mov
daa
addr16
push
setp
xchg
das
movsb
add
add
jge
jo
fstps
in
pusha
iret
fdivl
inc
mov
in
push
movsb
icebp
mov
sbb
outsl
jb
aam
popf
xchg
mov
out
fildll
sbb
sub
lret
lcall
push
add
dec
mov
add
bound
leave
jle
fistps
shlb
fwait
iret
cmp
repz
arpl
jne
mov
push
arpl
lcall
cs
es
inc
testl
dec
sub
push
adc
mov
mov
mov
insb
push
cwtl
call
cmc
stc
push
es
mov
mov
push
fisttpll
add
dec
fcomps
mov
mov
xchg
dec
xchg
jbe
fwait
xor
jmp
movsb
jo
xlat
lods
mov
movsb
imul
jns
les
xchg
imul
push
andnps
ret
jbe
mov
mov
or
inc
nop
adc
pushl
add
insl
pop
sbb
push
nop
addr16
inc
mov
rclb
lret
inc
pop
vcvtsi2ssl
vrcpps
pop
jo
xor
movsb
add
comiss
ret
dec
push
bound
pop
rcll
xor
mov
cmp
test
pop
xchg
adc
xchg
pop
sbb
sbb
mov
or
pusha
pushf
inc
jg
dec
dec
push
sub
pop
fldcw
stos
mov
neg
clc
lcall
jns
sbb
push
je
mov
cli
xchg
cli
dec
jno
andl
in
aad
sbb
push
mov
dec
mov
lcall
sub
in
imul
mov
in
int3
div
jo
cmp
push
sub
push
adcb
mov
adc
int3
xchg
fs
aam
or
fists
mov
push
fcomp
dec
xchg
andl
mov
sub
test
std
push
out
notl
add
je
mov
ret
ret
pop
dec
pop
aas
loopne
xor
jp
xchg
jne
les
sbb
mov
sahf
dec
xchg
inc
arpl
cmc
jne
cs
hlt
mov
sbb
xchg
cmp
or
insl
dec
repz
or
cmc
dec
nop
arpl
incb
jmp
sub
xchg
lock
in
mov
cwtl
out
adc
jl
mov
mov
stos
lock
mov
push
adc
aas
jp
pusha
aam
addl
xchg
jo
das
imul
fsubr
and
mov
xchg
cld
int
dec
mov
gs
jmp
or
int3
sbb
mov
sbb
pop
jno
adc
jnp
lcall
mov
xchg
test
xor
add
out
dec
adc
mov
sbb
lods
pusha
lds
pop
int3
push
sub
repnz
mov
sbb
faddp
data16
adc
test
repnz
inc
hlt
adc
imul
jecxz
lods
sbb
inc
mov
jb
dec
lahf
xchg
and
add
xchg
js
inc
and
mov
fdivrl
jmp
push
and
add
cmpl
fnstenv
loopne
enter
jne
fidivrs
sub
sbb
data16
xor
jo
adc
jge
lea
jb
cmpb
mov
sarb
shrl
pushl
in
lret
rcll
push
mov
iret
jge
mov
lahf
xlat
movl
in
dec
cmpsb
xor
pop
jge
pop
dec
sub
fstps
adc
stos
jnp
divl
movsb
inc
scas
adcl
aam
std
and
int
inc
jecxz
fisubs
divb
adc
push
jne
push
je
imul
add
cltd
js
imul
sarl
or
movsl
pop
imul
in
jns
test
lock
cmp
imul
imul
mov
aam
xlat
cmpsb
sub
pop
movsb
mov
daa
insb
or
dec
int3
lret
fnstenv
scas
cmp
mov
inc
jmp
cwtl
fcompl
loop
pop
pop
sub
cld
int
aas
incb
loopne
sbb
repnz
clc
pop
std
sti
adcl
divb
movups
or
imul
add
dec
xor
in
idivb
test
adc
sarl
push
jmp
jnp
jbe
xor
mov
mov
pop
lret
mov
or
xor
push
testl
repnz
repnz
cmp
and
xchg
mov
jo
xlat
lcall
imul
out
mov
mov
inc
data16
lret
je
or
jb
mov
sub
mov
cwtl
clc
aam
ljmp
movsb
int3
cmp
xor
hlt
int3
xchg
lahf
fildll
out
adc
dec
pop
lods
xchg
scas
frstor
cmp
ret
adc
cmp
pusha
lds
fldl
mov
repz
shlb
push
pusha
popf
test
leave
xchg
leave
mov
movsl
mov
call
cmpsb
scas
push
xorb
mov
xor
dec
inc
jae
adc
adc
push
jl
jge
cmp
push
mov
shll
mov
fadd
add
mov
mov
mov
clc
push
inc
in
pop
sbb
mov
mov
iret
fs
mov
movsl
movsl
mov
jecxz
jl
dec
fildll
out
out
dec
out
inc
mov
loopne
imul
xchg
pop
xor
ljmp
fidivl
cltd
mov
mov
mov
lcall
mov
lock
dec
in
and
lahf
and
nop
movsl
mov
sar
jne
mov
in
sbb
jno
jmp
mov
push
mov
test
stc
orl
cmp
cmp
dec
repz
xchg
push
push
xchg
test
cmp
dec
xlat
dec
mov
adc
lock
aas
stc
mov
call
jmp
iret
push
gs
add
dec
fdivs
jmp
sbb
xchg
sub
dec
inc
jns
fistpll
push
jecxz
dec
mov
pop
mov
xor
adc
clc
jno
add
test
xchg
sahf
pop
enter
xor
clc
js
sbb
data16
rorl
sub
cld
enter
call
lock
test
and
enter
xor
lcall
movsl
ljmp
iret
jne
loope
add
pushf
push
lea
or
subl
popl
fwait
std
test
jno
pop
adc
lahf
outsb
or
test
out
dec
lods
enter
scas
fwait
int3
mov
xor
mov
lret
and
daa
add
cmc
xor
rcrl
inc
outsl
sbb
dec
mov
jp
out
or
das
negb
adc
insb
jecxz
inc
cmp
mov
jge
push
dec
lahf
sub
mov
ja
inc
adc
sbb
shlb
leave
popa
mov
sahf
xchg
fistpl
cmc
add
jp
mov
pop
cwtl
inc
rcrb
call
cmp
lods
sbb
xor
sbb
test
rcrb
mov
inc
mov
cmp
out
in
nop
mov
int
dec
jae
sbb
pop
test
daa
push
stos
nop
js
jo
push
pop
ficoml
in
imul
lods
and
add
mov
test
mov
pop
mov
mov
mov
add
movsl
xor
in
mov
jle
inc
xor
ds
clc
and
inc
lods
cmp
ds
push
icebp
out
push
loopne
pop
mov
push
sbb
or
mov
hlt
push
repnz
addr16
jbe
movd
mov
test
insb
jne
push
sub
fildll
jg
mov
outsb
lret
les
fldt
jo
scas
in
mov
sti
jle
and
add
int
clc
stc
aas
sub
cmc
pushf
mov
test
das
xchg
push
pop
pushf
lock
mov
dec
adc
jns
repz
mov
popa
mov
negl
mov
adc
ja
mov
xor
cs
imul
aam
dec
cmpl
push
sti
push
imul
or
jae
push
lds
inc
out
fs
pop
xor
loop
je
xor
pop
test
mov
dec
leave
sar
xor
cmpsb
repnz
lret
push
mov
add
stos
add
inc
lods
push
lret
addb
hlt
sub
fdiv
mulb
adc
or
add
mov
mov
test
lret
test
imul
xchg
push
ja
out
add
ret
mov
mov
filds
or
sbb
cmp
inc
xchg
loopne
pop
cs
cs
xchg
movsl
ror
leave
enter
enter
push
cmp
push
std
xchg
shl
xorb
cli
int3
push
inc
xchg
pushf
loope
in
idivb
jp
cmp
pop
lods
mov
dec
scas
dec
rolb
xor
sbb
addr16
sbb
jle
rcll
and
imul
jle
test
mov
pop
push
dec
adc
add
fsts
loope
daa
and
push
test
divl
sbb
lods
lret
add
pop
cmc
xlat
pop
sbb
jb
pop
cmp
jle
pushf
jl
and
in
stos
jne
fsubrs
mov
jne
scas
fisttps
or
stc
add
insb
movsb
mov
xor
cmp
xor
outsl
sub
mov
push
test
sbb
fisttps
aad
fistpll
in
lea
inc
mov
pop
jge
out
mov
or
fstps
ds
shlb
mov
mov
out
aas
cmpl
pop
mov
ret
xchg
pop
icebp
xor
mov
aam
ficomps
jbe
dec
imul
and
in
xchg
and
mov
decl
push
add
inc
test
inc
or
mov
and
and
cmp
fwait
sbb
push
and
jg
mov
insb
xchg
xchg
repz
out
inc
cwtl
adc
popf
xchg
cmp
cmp
mov
mov
fsubp
fnstsw
ficoms
ljmp
push
outsb
or
xchg
push
pop
adc
fstl
jno
mov
into
push
jmp
mov
sbb
sbb
adc
movsl
notb
enter
arpl
sub
jle
lds
inc
jmp
mov
popf
lret
or
aas
icebp
cmp
repnz
in
sub
xor
sub
inc
mov
stc
adc
or
jge
sti
jmp
pop
div
rclb
ljmp
mov
loop,pt
fistl
insl
bound
mov
arpl
dec
std
fisubl
adc
dec
ret
dec
jne
arpl
inc
movsb
adc
repnz
pushl
je
imul
push
sub
pop
push
lea
enter
push
inc
inc
xor
jbe
add
test
and
std
and
mov
fists
pusha
movsb
call
fnstsw
inc
xor
clc
test
jecxz
fstl
mov
rorl
inc
push
mov
pop
jl
adc
insb
scas
jb
jbe
push
jne
mov
dec
cld
clc
or
test
lcall
rcrl
dec
jns
adc
inc
ret
gs
and
repnz
pusha
mov
test
cltd
ja
sub
mov
cmp
jb
inc
or
fwait
jb
add
xlat
xor
cltd
inc
clc
lods
test
and
push
adc
xor
adc
inc
repz
jae
and
test
in
addl
mov
dec
call
mov
ficomps
jmp
push
xor
decl
out
xchg
frstor
mov
sbb
shrl
pusha
sub
dec
mov
cltd
adc
xlat
test
int
mov
mov
icebp
ja
push
push
je,pn
jo
loopne
repz
inc
sbbb
sub
jecxz
jle
in
cmp
adc
sbb
lret
mov
icebp
mov
mov
dec
adcl
dec
movsl
lahf
and
cmp
rcrb
scas
ljmp
pop
rcrl
mov
dec
xchg
lds
addr16
or
rcrl
in
stos
sub
enter
movsl
or
jge
lret
sub
sub
mov
pop
rorl
lret
into
fwait
outsl
jmp
repnz
cmp
rolb
xchg
jns
shlb
movsb
test
ds
sbb
pop
push
sbb
ljmp
stc
movsb
mov
test
outsl
mov
xor
lret
push
xor
aad
dec
pop
jbe
add
loope
adc
push
jo
pop
pop
movsl
xor
inc
inc
mov
inc
lock
popl
jp
fcomps
mov
in
pushf
shl
pop
cmp
test
push
push
pop
xchg
shl
push
addr16
mov
sbb
sbb
jno
xor
mov
js
les
addb
cli
fmull
sub
nop
stc
cmp
test
push
test
cmpb
push
mov
repnz
sub
mov
and
mov
dec
xchg
sahf
fs
dec
jne
pop
out
or
fsubrl
dec
pop
xchg
in
inc
push
add
sub
and
xchg
or
popa
push
mov
data16
xchg
xlat
mov
mov
sub
test
repnz
jp
ret
adc
add
mov
or
mov
out
or
fnstsw
add
pop
clc
sub
cmp
es
and
jae
stos
std
adc
sbb
pop
cmp
or
test
cmp
into
xchg
in
xchg
push
xchg
inc
popa
add
les
clc
xchg
inc
inc
add
sahf
pusha
int3
and
in
dec
adc
dec
arpl
jnp
std
pop
inc
imull
push
ja
or
movntq
std
and
xor
dec
movsl
sub
lret
movb
leave
sub
test
dec
mov
pop
mov
test
or
enter
cmp
movsl
mov
jnp
lock
cld
pop
push
sub
call
loope
cmp
daa
mov
enter
pop
enter
jge
inc
cld
arpl
int3
es
gs
das
pop
bound
or
sub
call
jmp
aaa
xchg
ljmp
pop
insl
jb
movsl
pop
fdivrl
repnz
pop
push
push
pop
std
xchg
sub
jle
or
out
xchg
push
cld
xlat
les
mov
jnp
fwait
sub
jno
lock
leave
add
popf
subl
cwtl
jl
jmp
in
aaa
jle
pop
rorb
lret
cmp
mov
push
adc
pop
fisttpll
push
cmp
sti
dec
dec
sub
and
sub
cltd
adc
fsubl
pop
ficoms
xchg
fisubl
out
sub
movsl
lea
insb
dec
dec
push
push
adc
jbe
jno
sbb
test
lods
roll
push
aaa
jo
es
movsb
xchg
mov
or
jae
cmpsl
jne
loope
rcl
das
jge
fs
movsl
out
adc
mov
stos
bound
leave
jbe
test
adc
cmpsb
icebp
lods
in
inc
cmpsl
xor
test
xchg
dec
sahf
fistps
or
push
hlt
loop
pop
xchg
adc
mov
in
xchg
int
in
insb
xchg
popf
repz
and
rcrl
pop
mov
jmp
pop
sub
cmp
xchg
add
std
lea
mov
hlt
xlat
out
fisubrs
dec
cmp
push
and
ret
cmp
cmpsl
in
adc
bound
scas
leave
andb
xchg
mov
inc
inc
insl
or
call
inc
jle
test
fisttpl
lea
movsl
rorb
pushf
shlb
push
sub
test
aas
sbb
out
ljmp
in
push
shll
push
sub
iret
and
bound
dec
mov
cmp
gs
lahf
movsl
in
or
lds
inc
sbb
and
adc
std
loop
sbb
mov
icebp
add
jg
and
pop
in
adc
pop
rcrl
mov
fldt
sti
mov
jp
and
cs
mov
and
mov
leave
or
inc
sub
xor
fcmovnu
mov
inc
pop
in
lods
add
pop
repz
mov
hlt
mov
inc
lock
jmp
data16
add
loope
pop
imull
repnz
int
mov
mov
jo
nop
imul
es
pop
fildl
data16
popa
dec
in
dec
ljmp
fistpl
mov
and
add
mov
into
fistpll
mov
push
add
pop
in
popl
repz
cmpsb
adc
int3
sub
jmp
or
jnp
or
push
pop
fiadds
fildl
pop
in
pushl
jp
cmp
inc
mov
into
mov
lods
pop
ljmp
xchg
movsb
adc
fsub
dec
fisubrl
mov
push
bound
mov
std
cmpb
dec
addr16
jmp
inc
jp
push
das
inc
lods
and
cmc
push
xchg
cmpsb
mov
aas
mov
mov
inc
fstpl
push
loop
imul
ss
jecxz
mov
sbb
jmp
dec
insl
mov
push
sub
mov
out
dec
pop
xchg
or
sbb
fwait
or
or
sti
sub
scas
mov
inc
in
pop
xchg
fistl
mov
mov
xchg
imul
sub
subl
push
push
jmp
int3
inc
jns
out
mov
imul
sub
pop
mov
test
push
stos
mov
mov
adc
insb
sbb
or
mov
or
fsubs
jmp
aaa
loope
aas
gs
push
jns
data16
lock
fimull
repz
dec
sbb
icebp
fcoms
dec
bound
popf
outsb
les
adc
and
movsl
jg
sbb
iret
out
addr16
lea
insl
popa
out
jns
jnp
adc
loopne
add
add
sub
lret
stos
push
jp
nop
adc
call
inc
sbb
cmp
ljmp
and
std
cmp
ja
bnd
jns
popf
into
jns
cmpsb
outsl
shl
pop
outsl
dec
mov
dec
roll
mov
movsb
aad
add
test
jecxz
sbb
and
push
mov
mov
mov
jg
loope
sub
icebp
adc
mov
xchg
lods
mov
mov
test
mov
sti
aas
xchg
pop
dec
pop
xchg
fidivs
dec
jnp
push
movsl
xor
testb
push
jmp
ret
cmp
mov
sti
cltd
cmp
movsb
and
and
dec
shrl
mov
rol
cli
aam
jno
and
fidivs
pop
adc
inc
push
xchg
lods
loope
pop
cli
add
or
push
ret
cs
dec
push
sub
sub
ss
stos
test
lods
dec
sti
loop
and
jo
dec
mov
push
mov
xlat
movsb
fildll
std
jg
jne
lahf
cmc
out
push
cmp
movsl
dec
icebp
jae
push
in
add
fs
jb
call
pop
mov
sti
add
ja
xchg
mov
fimull
dec
jle
push
divl
lret
adc
jge
sti
dec
lods
lcall
ret
out
mov
xchg
sub
mov
repz
xchg
movzwl
daa
adc
push
jmp
shrb
scas
sub
icebp
js
xor
jns
xchg
cmp
sbb
dec
xchg
mov
dec
movsb
mov
xchg
pop
mull
pop
ds
push
into
add
jecxz
xchg
pop
nop
andl
sbb
and
dec
cwtl
add
rcrl
shrl
aam
xchg
sub
lcall
loopne
adc
mov
lahf
pusha
or
jg
adc
sub
gs
and
not
fidivrs
test
in
rcrb
jae
in
push
rol
nop
scas
mov
jae
test
invd
addl
jmp
adc
sub
sbb
jmp
jo
out
xor
int
frstor
imul
mov
jge
imul
push
or
ret
pop
mov
or
sub
into
ja
out
mov
xchg
stos
sub
mov
sbb
xchg
push
nop
jle
and
jne
and
rol
andl
ret
adc
xor
jo
in
mul
aad
das
xor
test
insb
shlb
jbe
sbb
sbb
cmp
mov
xor
mov
push
sub
out
mov
xchg
add
subb
jle
jno
mov
stos
fistps
or
inc
and
pushf
clc
je
sbb
sbb
or
lods
test
or
in
inc
pop
das
mov
xlat
nop
cmpsl
pop
mov
mov
andb
sub
xchg
in
jnp
or
jb
xor
cmp
pop
sbb
or
leave
mov
subb
adc
stc
inc
jno
xor
sbb
or
popl
and
not
mov
jnp
mov
inc
imul
test
mov
mov
lahf
stos
mov
xchg
hlt
testl
int3
add
nop
mov
outsl
pop
pop
mov
cmp
fstpt
push
push
lcall
out
aad
sbb
xchg
push
xor
clc
cld
jns
push
ret
ret
fs
call
daa
ret
imul
pusha
loope
test
in
and
add
shl
into
popf
jecxz
test
out
sahf
inc
sbb
add
add
cmc
out
and
clc
out
rcll
cld
nop
stc
or
dec
pusha
mov
mov
jno
and
inc
testb
mov
sti
mov
movsl
and
sub
dec
les
int
lock
in
jmp
test
xor
pop
xchg
cmpsl
ds
stc
pop
call
mov
jae
mov
push
pushl
mov
xchg
js
out
lea
mov
out
rcrb
sub
cmp
cwtl
fs
in
push
setbe
ja
cwtl
dec
insb
in
rcrl
fs
data16
stc
xor
sub
add
outsl
nop
jo
push
fstps
ret
sbbb
xor
cmp
loop
movsl
push
jmp
shlb
add
out
and
ret
pop
inc
cmp
insl
scas
aaa
in
lahf
xchg
push
icebp
cmc
and
mov
scas
cmc
sti
lret
mov
pop
push
xchg
adc
and
and
ja
fidivrs
add
jns
mov
pop
xchg
inc
xor
mov
xorl
cmpsl
add
adc
xchg
test
push
adc
cmp
cld
jae
scas
rclb
push
jo
push
call
or
mov
jae
loop
sub
jle
sbbl
pushf
mov
xlat
and
data16
add
in
sub
outsb
inc
mov
or
pusha
stos
aaa
add
add
mov
cmp
daa
lods
sub
push
insb
xchg
fisubl
icebp
mov
push
mov
cmpsb
mov
addr16
fstl
mov
movsb
jbe
cmp
mul
in
std
pop
nop
jecxz
jns
pop
idivb
scas
iret
jecxz
test
push
inc
out
push
jmp
adc
sub
test
jnp
xor
cmp
lret
nop
mov
mov
out
inc
pop
pop
movsb
cmp
mov
in
and
inc
pop
mov
rcrl
xor
xor
xor
nop
sub
mov
pop
pop
sub
add
es
xor
pop
cmp
inc
mov
sub
cmovo
xchg
sbb
jne
dec
gs
mov
push
or
adc
test
hlt
add
mov
lock
jno
mov
hlt
mov
adc
es
mov
cld
pusha
loope
sbb
push
cld
jb
or
add
jg
mov
dec
fs
cld
outsl
mov
dec
dec
mov
inc
jb
push
stc
mov
outsb
xchg
add
fstpt
ret
cltd
push
loop
mov
mov
pop
jb
movsl
mov
outsl
jge
or
and
sbb
and
mov
sti
or
ret
mov
push
sub
cmpsl
addr16
adc
push
ret
mov
mov
adc
and
outsb
repz
rorb
pop
rolb
push
adc
xor
cmp
xor
adc
inc
cwtl
jo
push
fisubl
std
das
pop
outsl
sbb
sbb
in
jl
dec
xor
mov
aaa
in
cmp
sub
jo
iret
es
xor
push
int
pop
mov
sbb
out
out
sub
pop
stos
jnp
nop
into
popa
mov
insl
aaa
lret
push
dec
outsb
dec
daa
adc
jnp
xchg
testb
andb
mov
and
push
push
push
sbb
int
adc
lods
jle
aas
adc
pop
xor
out
lds
in
jbe
jmp
push
sbb
repz
adc
int3
arpl
and
lock
mov
std
je
imul
stos
sbb
popa
sub
sub
xorb
xor
mov
pop
ret
pop
scas
scas
mov
pop
mov
mov
pop
and
call
lds
sub
adc
xchg
clc
jecxz
or
mov
cmpsl
mov
fwait
mov
add
push
mov
rcrl
std
loope
sahf
jmp
ret
popa
movsb
jnp
push
pop
adc
sub
add
push
mov
outsl
fisubs
inc
cmp
in
add
cmp
aas
pop
lds
loope
arpl
inc
in
incb
cmc
jns
push
pop
mov
daa
sar
leave
int
or
push
and
and
ss
xor
test
pop
in
jno
mov
stos
sbb
cmc
popa
std
cmp
daa
loope
jne
mov
rep
xchg
inc
repnz
shrb
or
sbb
add
jnp
cs
leave
mov
fcmovu
jo
frstor
lret
fldt
jle
sbb
push
pop
fsub
add
pusha
xchg
mov
loope
sub
outsl
push
or
cmp
cmp
adc
lcall
and
push
add
sub
cmpsl
jp
nop
jecxz
sti
sub
mov
stos
mov
cmpsl
pop
mov
fsubrl
loope
fs
and
cmpb
cmp
mov
lods
xchg
mov
push
sub
mov
xchg
jmp
push
and
or
xorb
inc
imul
or
and
loope
pop
push
fmuls
cltd
mov
lds
arpl
mov
push
jl
clc
test
and
cwtl
pop
pop
sbb
dec
mov
hlt
lods
pop
insl
jmp
test
inc
lods
cmp
push
sahf
sub
pop
mov
dec
negl
sub
xchg
and
mov
mov
sub
cld
nop
repnz
fs
pushf
pop
out
jne
xor
popf
pop
mov
stos
inc
js,pn
jmp
loope
or
aaa
dec
mov
out
aas
stos
dec
lods
outsl
inc
cmp
jnp
pop
out
or
loope
inc
xchg
dec
testl
sbb
stos
mov
push
ss
jb
int3
cwtl
das
int
les
push
cld
movsl
adc
mov
jb
je
std
das
stos
bound
sbb
cmpsl
rorb
xor
push
cmp
out
test
push
push
adc
js
lock
push
add
imul
mov
out
aad
sbb
dec
orl
sub
nop
mov
inc
and
xor
cmp
pop
add
mov
xor
inc
shrb
dec
enter
out
jo
dec
add
test
pop
dec
add
sbb
pop
jo
jns
xor
mov
adc
lods
in
iret
jb
sbb
jb
sub
push
pop
clc
dec
or
rcr
fdivrl
aam
ret
adc
js
scas
ficompl
outsl
outsb
pop
sbb
jle
jnp
ret
adc
bnd
cmp
pop
in
dec
jg
ficoml
cs
inc
int
fsts
and
je
or
inc
das
rcrb
lret
aaa
mov
int3
pop
xor
rcrb
lret
inc
xor
lcall
jecxz
add
dec
xorl
adc
and
pop
out
lods
fldenv
jno
imul
mov
idiv
ud0
bound
repz
cmp
or
andl
decl
movsl
aam
icebp
pusha
xchg
ja
in
cli
fs
cld
inc
movsb
and
inc
or
push
cmpsb
xor
add
fstp
inc
sbb
jle
or
je
nop
mov
dec
mov
sbb
and
ud0
sub
sbb
js
mov
arpl
xor
pushl
mov
negl
push
lds
push
pushf
out
pushf
lret
hlt
frstor
mov
mov
into
push
jae
xor
outsl
xchg
cmc
mov
enter
adc
std
and
je
pop
lret
jle
ret
jne
clc
mov
push
jl
cmp
add
es
fstpl
loopne
sbb
clc
stos
scas
pop
test
stos
sbb
iret
pop
adc
cld
data16
shrb
inc
andb
mov
pop
push
insl
cltd
mov
shl
jb
mov
jno
jb
outsl
fs
or
movsl
movsb
lret
lret
shl
divb
lock
sbb
cwtl
mov
jbe
xchg
scas
adc
insb
lcall
ds
aaa
icebp
push
inc
cli
int3
xor
xorl
lahf
out
outsl
test
xor
or
inc
mov
xor
mov
inc
adc
cwtl
add
loopne
lds
repnz
in
sub
pop
adc
stos
cmc
and
dec
pop
leave
and
mov
out
mov
or
jne
mov
jne
lcall
dec
mov
xchg
pusha
aas
mov
in
push
xor
jne
out
jbe
sub
hlt
cmp
idivb
mov
roll
iret
mov
sahf
inc
and
push
push
shlb
in
and
sbb
jmp
shrl
shr
sbb
dec
mov
ljmp
xor
jl
mov
mov
aad
pop
test
xor
cmp
mov
iret
mov
push
jp
add
mov
xchg
fs
cwtl
repz
fdivr
or
fsincos
lahf
dec
sub
inc
nop
imul
pop
fucom
test
push
inc
mov
or
cmp
jo
jl
xor
sti
incb
jg
mov
xlat
mov
movsl
adc
pop
push
repnz
xchg
stc
xchg
clc
push
adc
jle
out
fcomps
outsl
popa
or
pop
pusha
pop
daa
mov
ja
xchg
mov
sub
sbb
imul
adc
xor
fcomip
adc
xchg
sbb
lock
daa
imul
or
add
sub
adc
clc
xchg
adcl
xchg
dec
test
sbb
xor
mov
mov
mov
push
scas
rorl
lea
push
lret
inc
mov
gs
cli
jns
ss
in
push
or
dec
adc
jge
lods
psrlw
sub
mov
cmc
or
xlat
push
into
cmc
loope
add
lock
pop
cmpsl
sbbb
jmp
xor
cld
mov
dec
mov
pop
or
lods
scas
dec
lock
push
test
orl
in
pop
pop
sub
lock
shlb
idivb
add
xchg
imul
out
pop
ds
and
jno
mov
push
add
mov
mov
mov
push
stos
int
rcl
xchg
lahf
mov
push
lock
rclb
mov
inc
hlt
aaa
stos
je
je
or
stos
xchg
push
repnz
xchg
jp
aad
sub
xchg
and
push
fbld
leave
lods
xchg
fstps
sub
fidivl
ret
xor
hlt
jmp
mov
in
mov
jecxz
mov
push
hlt
pop
clc
cmpsl
or
push
cmp
aas
dec
imul
data16
int3
cwtl
ficomps
dec
inc
popf
jle
jb
cmpsb
and
inc
push
adc
ljmp
loopne
arpl
outsb
sbb
jns
mov
rorl
adc
scas
ficoms
lret
pop
mov
out
in
mov
or
aaa
or
or
stos
addr16
out
call
pop
int3
call
divl
pop
dec
mov
pop
push
es
scas
stc
pop
push
cmp
pusha
loope
pop
xor
push
lret
bswap
and
mov
test
fwait
ljmp
or
pop
xchg
inc
adc
sti
flds
fs
mov
adc
loope
test
add
sbb
pushf
inc
loope
and
mov
scas
or
sbb
mov
xchg
lock
shll
pop
add
mov
xchg
divps
adc
data16
lahf
fcoms
mov
inc
push
sbb
cmpsl
and
add
jns
mov
sbb
jne
fimull
ja
mov
lods
mov
cvtpi2ps
dec
shll
test
push
lods
push
imulb
sbb
or
imulb
ljmp
mov
ja
pop
pop
mov
stos
cmc
andb
iret
mov
xor
dec
sbbb
jmp
sub
sub
notl
pop
jmp
cmp
sub
pop
test
mov
xor
pop
mov
push
rcl
stc
dec
sub
cmp
or
and
mov
jl
mov
je
pop
jmp
mov
xchg
mov
dec
xor
int3
xchg
jle
sbb
cmp
push
push
sub
daa
out
in
ljmp
cmp
pushf
push
stos
cmp
push
scas
jno
mov
aas
jge
xchg
lret
sti
cmp
add
ds
mov
movaps
pop
into
inc
inc
pop
imulb
cmp
xlat
decl
or
jo
insb
sub
es
pop
adc
dec
mov
pop
fisttpll
fwait
adc
cmc
mov
cmp
xorl
repnz
and
shl
cmpl
mov
jbe
jmp
outsb
pop
mov
rolb
repz
adc
fsub
lods
pop
jns
ss
les
fdivrl
push
stos
loope
clc
insl
fidivrs
loopne
mov
ror
cmp
mov
inc
adc
lock
push
jmp
cli
sub
mull
sub
push
mov
das
xlat
lods
jae
push
cmp
test
fimuls
fadd
jbe
xchg
xchg
jnp
fwait
cmc
pop
adc
test
push
or
mov
jmp
sbb
icebp
xchg
and
ja
loope
push
mov
sti
inc
sbb
aaa
pop
pop
cltd
sbb
add
data16
jne
ds
sti
aad
fwait
popl
pop
lods
add
pusha
pushl
or
and
rolb
arpl
lahf
xchg
addr16
out
mov
xor
cmp
adc
mov
out
inc
mov
popf
cmp
jno
fs
push
arpl
mov
in
push
sbb
xlat
sahf
push
cld
inc
int
aaa
sub
mov
cld
add
or
sbb
addr16
xchg
jne
das
inc
aaa
pop
insl
mov
mov
jns
aad
dec
insb
testl
cld
mov
insb
lods
push
les
sub
outsb
lock
jo
mov
dec
movsl
xlat
cmc
ret
xchg
inc
test
inc
jbe
les
push
cmpsb
bound
divl
mov
sub
xchg
xlat
xor
and
jo
fiadds
push
mov
je
bound
movsl
push
lods
ret
cmp
in
xchg
xchg
in
cld
cmp
mov
inc
mov
bound
push
sub
xchg
sub
enter
sbb
or
das
mov
pop
scas
fwait
or
adc
inc
mov
imul
cli
inc
testb
inc
dec
aam
xchg
insl
mov
pop
jae
stc
fdivr
lea
add
scas
add
in
jb
pop
inc
jge
dec
ss
xchg
jno
jge
cmp
fwait
cmp
outsb
outsb
mov
xor
mov
hlt
mov
gs
or
or
jg
push
icebp
adcb
add
negl
pop
jge
int
lods
cwtl
mov
frstor
or
mov
mov
fxch
or
in
daa
loope
pop
fistpll
imul
or
imul
and
call
dec
push
xlat
mov
pop
push
pusha
test
pop
mov
add
stos
clc
cmpsl
stos
mov
in
gs
xchg
cli
ds
push
cmpsl
fcomip
cmc
sbb
sbb
mov
stc
push
xchg
enter
lea
mov
xor
add
arpl
cmp
or
les
and
rcrl
loopne
popa
xor
aaa
adc
repnz
and
mov
hlt
incb
lret
xchg
loopne
adcl
out
insl
jns
shl
xor
sbb
pop
inc
jg
dec
insl
jg
jnp
sub
jmp
sahf
loope
bnd
lret
jne
pop
imul
lock
outsb
push
fists
in
jne
sbb
jno
test
into
imul
bound
mov
mov
cmp
inc
mov
loope
mov
pop
aam
shll
jnp
iret
ret
mov
sub
xchg
mov
int3
xchg
xor
out
xlat
dec
jle
and
jno
aad
push
out
adc
outsl
xchg
mov
and
jg
xchg
cmp
dec
out
push
stos
ficoml
cmp
mov
movsb
test
scas
mov
add
fwait
test
jmp
xchg
ss
out
imull
adc
pusha
stos
aam
xor
adc
push
stos
cmp
adc
pop
mov
dec
mov
je
fisttpll
das
inc
leave
jle
mov
sbb
pop
or
jnp
out
pop
push
push
cmc
add
jae
adc
shlb
lea
jecxz
dec
dec
add
push
dec
xor
xchg
dec
out
and
sub
sbb
jns
sti
testl
jge
adc
icebp
test
negl
inc
fiadds
je
mov
mov
adc
push
jecxz
mov
jp
pop
clc
dec
aaa
fmul
push
sbb
popf
push
pushf
fwait
jbe
pop
mov
dec
cmc
fsubl
cld
enter
jp
mov
sub
mov
sub
leave
fnstcw
test
ret
mov
das
test
jbe
std
mov
jns
jge
sbb
mov
inc
mov
jbe
jle
and
inc
xchg
int3
stos
fisubl
in
andl
mov
xor
hlt
aaa
bswap
push
int
movsb
jp
xchg
cmp
xchg
xchg
inc
in
cmc
adc
or
sbbl
cld
cmp
mov
fistpl
add
adc
aaa
insl
jge
in
nop
out
xor
aam
mov
pop
out
jnp
in
hlt
jle
mov
das
inc
mov
sarb
push
dec
aas
sbb
sub
popa
inc
pop
push
sub
pop
mov
data16
push
fisubrs
jb
sbb
daa
sub
sbb
daa
xchg
mov
outsb
and
lahf
mov
cmpb
outsb
divb
pop
mov
loope
jp
test
pop
imul
call
insl
fnstcw
cwtl
daa
int3
and
inc
int3
add
mov
xchg
icebp
inc
pop
xor
push
dec
xor
xor
test
jmp
and
in
sub
in
mov
fcompl
jmp
pop
inc
lret
imul
shrl
add
add
adc
sbb
out
lods
push
push
xchg
pushf
mov
xchg
and
cld
pop
icebp
filds
int3
and
jge
popa
ror
lock
pop
cmpsb
jecxz
adc
pop
pusha
xor
xor
sub
and
sub
xchg
xchg
inc
jnp
popa
jl
orb
cli
pop
mov
lods
push
sub
push
repz
mov
mov
aam
out
dec
lret
or
mov
addl
jnp
mov
in
out
popf
gs
fidivrl
insb
enter
adc
dec
xorb
adc
lods
in
sub
and
in
rep
out
cli
adcl
repnz
xor
pop
mov
out
imul
xchg
popa
mov
in
icebp
cmp
jle
adc
arpl
mull
sbb
jae
int
insl
adc
pop
popa
adc
and
push
andb
or
push
jo
xor
or
adc
mov
lods
xchg
das
mov
stos
inc
inc
jno
hlt
mov
imul
adc
cld
mov
aam
in
or
push
minps
push
sti
cmp
inc
leave
mov
xchg
inc
movsl
je
sbb
sbbl
int3
aam
push
lods
jnp
negl
jp
xchg
mov
notl
lock
mov
unpckhps
mov
mov
icebp
out
cmpb
or
addr16
out
cli
jae
fwait
cld
leave
adc
jne
push
imul
jns
out
mov
ror
movsb
out
int
or
les
lret
lret
pusha
cmp
sbb
cmp
sbb
and
popf
neg
lock
push
iret
and
inc
jae
fnstenv
insb
inc
jno
pop
lret
rcl
mov
mov
xchg
and
jnp
sub
cmp
jno
aaa
les
fwait
add
and
adc
clc
xchg
xchg
mov
addr16
dec
sbb
inc
mov
fbstp
inc
adc
push
mov
pop
push
xchg
xchg
aad
cmp
pop
pop
mov
inc
fs
push
aam
push
adc
or
push
aam
mov
add
rcll
xor
in
and
jo
dec
mov
aas
jbe
xor
fcomp
ss
out
and
jnp
scas
and
sbb
ficomps
adc
xor
movsl
in
aam
lahf
test
icebp
out
pop
cmpsb
scas
test
add
lret
dec
aam
mov
pushf
cmp
mov
mov
push
dec
push
daa
push
loop
jnp
insl
mov
dec
int
fs
movl
subb
shll
adc
add
in
inc
pop
xchg
movsl
xchg
push
inc
xor
fidivrl
mov
out
popa
nop
mov
xchg
sub
xchg
lret
out
subb
dec
hlt
mov
xchg
dec
adc
in
aaa
loope
or
lret
mov
mov
pusha
in
out
pushf
mov
mov
jae
dec
jle
mov
mov
sbb
push
gs
xlat
jno
push
and
in
sbb
xchg
jg
cli
in
cs
jnp
cmp
xor
mov
cmp
sarb
add
inc
aad
pushl
loope
inc
pop
xchg
xchg
movsl
xor
shlb
lea
add
das
lahf
mov
sahf
add
jo
or
push
stc
jns
jp
mov
mov
aaa
cmp
jbe
ljmp
sub
shlb
jnp
notb
out
add
xor
sub
arpl
pop
dec
mov
hlt
lcall
popa
pop
cmp
push
adcl
fistpll
sarl
ss
inc
push
lcall
enter
shrl
and
xlat
pop
and
sbb
cmp
xchg
pop
and
mov
hlt
lods
and
push
dec
fs
mov
ret
push
inc
xchg
arpl
in
out
and
movsb
jg
sbbb
xor
into
iret
popa
emms
das
mov
lea
or
mov
xchg
lock
jo
sbb
cmpsl
or
ror
movsl
lret
fdivrs
inc
push
add
add
into
jl
jae
mov
sub
xchg
inc
lods
add
lret
mov
xor
out
test
scas
mov
test
pop
cmp
mov
mov
inc
sub
outsb
subb
movsb
mov
or
add
push
inc
jnp
pop
dec
adc
push
sub
scas
fidivrs
lret
cli
mov
lret
shll
imul
movsl
add
push
xor
adc
rcr
stos
cmc
sub
outsb
xor
inc
rorb
or
lret
sub
nop
inc
out
adcb
test
pop
aad
into
jo
int3
aaa
cmpb
mov
inc
in
mov
jle
push
or
stc
mov
stos
out
mov
jg
pusha
ror
sbb
mov
pop
dec
imul
jge
inc
in
out
xor
jnp
mov
sahf
push
pop
fdivs
push
and
in
mov
in
inc
and
and
sti
outsb
jmp
sub
lods
mov
xor
inc
jle
push
filds
add
sub
imul
dec
call
and
xlat
xlat
movsl
sub
adc
sti
cmc
xor
push
lret
aaa
adc
imul
fdivrs
pop
mov
fbstp
cmp
test
mov
in
push
and
xchg
dec
jmp
repnz
movsl
testl
mov
jg
lret
xchg
pop
or
mov
loope
and
adcl
rclb
jae
insl
adc
fwait
or
jge
pop
inc
dec
test
push
shll
dec
idivb
lcall
push
xor
adc
int
mov
pop
ja
push
xor
mov
inc
inc
adc
cmp
push
pop
push
cmpl
jge
repz
data16
imul
subb
pop
jmp
jl
dec
arpl
push
dec
push
clc
insl
sub
dec
cmc
movsb
pop
pop
jnp
rcrb
imul
sbb
ret
fsubr
dec
sub
lcall
in
sarl
adc
lcall
mov
ljmp
and
push
or
scas
jne
cwtl
push
xchg
sbb
idivb
sub
xchg
dec
and
pop
test
loopne
mov
bnd
ret
sub
push
xlat
pxor
mov
gs
sub
jno
inc
lahf
push
loop
test
fwait
test
adc
mov
dec
jp
pop
xchg
xor
rorb
imul
pop
mov
mov
test
lods
hlt
cld
xchg
inc
test
mov
sbb
mov
hlt
cmc
rolb
pop
es
inc
in
ds
dec
pop
push
sbb
mov
lods
loopne
repz
dec
pusha
push
shlb
shll
push
out
shll
push
sub
lods
push
icebp
cmpsl
ja
in
push
xchg
ljmp
hlt
repnz
or
lret
push
stos
jp
sub
jmp
xchg
sbb
cmp
push
mov
clc
dec
adc
call
mov
mov
mov
pop
sub
addb
test
test
jecxz
push
or
sbb
rdpmc
mov
inc
adc
ds
dec
cwtl
loop
loopne
jmp
mov
push
xchg
icebp
sbb
sub
mov
leave
stc
add
push
fidivl
int3
or
pusha
mov
stos
insl
lods
xchg
loopne
lea
push
cltd
das
aaa
xor
movl
and
repnz
pop
inc
outsl
ficompl
imul
fwait
cmp
mov
mov
cmp
repnz
sbb
out
add
xlat
xchg
xchg
jmp
push
dec
pop
and
jle,pn
sbb
xlat
or
xchg
fs
inc
lock
sti
test
mov
xlat
mov
vxorps
movb
or
mov
sub
jae
push
movsb
inc
lds
jle
test
dec
sbbl
cmp
das
push
and
add
fnstcw
inc
pop
test
or
cld
xchg
fs
in
jge
sbb
in
pusha
mov
pop
scas
out
sub
fwait
sti
mov
mov
test
pop
cmp
repz
mov
jmp
add
fisubl
inc
mov
ss
jno
or
int3
pop
add
clc
jns
sub
mov
or
js
dec
sbb
jp
test
xor
out
jo
mov
add
mov
jbe
sbb
add
iret
cmpsl
xchg
int
mov
dec
popa
pop
jl
mov
test
xchg
cli
xor
lret
mov
push
inc
out
adc
cmpb
add
rcrl
fs
ret
pushf
loope
scas
repz
sub
mov
loopne
inc
push
movsb
sbb
sub
pop
push
fcomi
xchg
pop
push
scas
dec
pop
repnz
or
inc
fldl
lahf
xchg
mov
pop
cmpsl
test
mov
sbb
mov
lahf
cmp
inc
adc
sti
inc
push
or
test
xor
gs
add
insl
fidivrl
mov
and
pop
ljmp
sub
push
push
mov
scas
pop
lret
loope
lods
pusha
in
jge
insl
cmp
jle
repz
test
lods
or
pop
push
adc
mov
push
xchg
lret
jl
mov
outsb
sub
mov
push
cmpb
pop
cmpsl
or
popf
data16
jnp
mov
cmpsb
push
or
test
inc
sub
test
in
out
add
cli
and
or
xor
mov
xor
or
xchg
repnz
push
or
ret
dec
push
mov
add
sar
mov
xor
jmp
and
adc
mov
roll
es
sbb
cli
in
and
adc
sti
jne
insb
adc
inc
into
bound
inc
inc
mov
ds
daa
push
or
repz
frstor
lahf
sub
cmpsl
cld
dec
lods
je
and
in
shll
test
aad
negl
mov
xchg
cltd
ja
mov
ficompl
in
insb
scas
lds
pop
fmull
jl
jae
jg
push
iret
aam
jle
shl
xchg
xchg
push
test
cmp
pop
fisttps
or
int3
adc
stc
jnp
jle
mov
or
aad
fstpl
sub
cmp
dec
test
mov
xlat
sbb
sti
xor
jae
aaa
lret
pop
mov
sub
dec
scas
push
dec
sbb
jecxz
mov
mov
push
lods
lcall
aas
cmpsb
xor
call
add
sbb
mov
xor
daa
jne
pop
sub
xchg
mov
and
clc
dec
jne
sub
cmp
jp
mul
lock
adc
lcall
es
out
outsl
ficompl
loop
jbe
rdtsc
ffree
lret
movsl
push
fistpll
rclb
xor
sub
fwait
push
fldcw
or
repz
mov
jg
loopne
mov
ret
sub
add
xchg
mov
pusha
push
ljmp
repz
mov
fsts
imul
rorb
cli
cmp
lea
clc
inc
pop
roll
sub
popf
sbb
sbb
orl
je
push
lcall
jbe
rcrl
test
in
rcl
cmpl
inc
add
mov
enter
and
and
incb
cmp
and
cmpsl
jmp
cmp
bound
push
and
xor
xor
fsubrs
das
mov
adc
xchg
push
insl
loopne
xchg
jnp
or
lret
imulb
inc
and
pop
cld
mov
arpl
xor
movsl
dec
push
or
fiaddl
gs
loope
jo
cld
inc
in
xchg
clc
shlb
loopne
xchg
dec
fstp
xchg
cltd
inc
aaa
push
pushf
icebp
jl
out
xchg
leave
cld
iret
push
sbb
sub
or
mov
repnz
adc
test
xor
test
push
ss
mov
pop
aaa
leave
cmp
mov
out
outsb
dec
push
pop
sti
aad
addr16
xlat
mov
xor
jle
push
negl
inc
int
dec
testl
inc
xor
dec
push
stos
xlat
adc
repnz
cmp
mov
xlat
push
and
fbld
sub
mov
cmp
aaa
rcrl
pop
or
test
mov
fdivp
xchg
scas
divb
mov
pop
mov
pushf
nop
cmpsb
and
int3
aad
push
frstor
movsl
sub
sti
rorb
dec
sti
or
outsl
int3
xchg
xchg
into
dec
inc
sub
add
cmp
sbb
pop
dec
scas
insb
and
jge
ret
outsb
or
pop
sub
inc
push
cmp
outsb
nop
pop
lds
xor
call
push
cld
ss
out
int3
dec
mov
push
and
inc
sub
hlt
in
inc
rorl
pop
sti
pop
push
cmpsb
pop
pop
ljmp
fistpl
mov
or
xchg
mov
scas
mov
add
ljmp
loopne
test
pop
xor
push
jno
and
sbbl
push
xchg
lret
lret
aas
sub
and
js
jecxz
pop
idiv
in
dec
gs
add
dec
mov
sbb
ss
test
fnstcw
test
push
popf
adc
repz
outsl
adc
xchg
sub
cmp
repz
xor
jne
mov
xchg
ret
cld
js
xor
and
cs
mov
fidivs
or
jbe
push
jne
aas
cmpsl
push
mov
adc
pop
bound
out
into
jnp
mov
cli
addr16
lods
mov
xchg
scas
dec
fisttpll
dec
mov
lahf
mov
fsts
aaa
or
xchg
push
popf
fidivl
in
pop
fstpl
cli
and
test
sub
nop
push
outsl
and
lcall
dec
sub
sub
data16
lds
lcall
aas
sbb
mov
out
lahf
in
cltd
or
xor
test
int
push
cli
cmp
int
fstp
mov
xlat
sub
xchg
mov
in
mov
scas
je
sbb
sbb
push
sub
bound
mov
cmp
jg
mov
cltd
push
outsl
dec
mov
push
fdivl
rolb
xchg
cmp
and
inc
push
cmp
outsl
cmp
jge
das
divb
xor
insb
or
fcoml
jle
stos
push
xor
pop
aam
mov
xchg
xor
stc
add
in
jb
inc
test
pop
mov
into
cmpsb
test
shlb
xchg
and
xchg
aad
enter
adc
je
pop
sub
bound
mov
das
leave
sub
ror
in
sbb
popf
push
xchg
or
aas
shll
fcomps
push
mov
and
jp
push
shr
std
sbb
mov
add
mov
stc
outsb
sti
mov
sbbb
pop
test
lcall
inc
pop
sbb
cli
fs
call
out
rcll
fcomp
cmp
inc
fdivs
xchg
ret
mov
loopne
and
inc
inc
enter
sbb
mov
xor
inc
inc
push
xlat
sub
mov
xor
mov
ja
push
test
cltd
insb
shlb
daa
and
aaa
lahf
movsb
cwtl
mov
sub
jmp
cmp
sub
fdivrl
mov
jns
out
lahf
test
cmpsl
test
push
popl
cmp
stos
lods
int3
pop
sbb
jo
jecxz
sarb
mov
xor
cmpsl
xchg
inc
mov
iret
mov
in
sbb
push
jmp
jns
lret
cmp
insl
sub
scas
adc
push
pop
out
test
ljmp
cmp
ret
mov
ds
inc
sbb
cmp
cmp
rol
pop
lods
push
jo
lods
ret
pop
mov
aas
xchg
pop
or
das
data16
sub
mov
jp
fnstsw
mov
mov
mov
scas
ret
lahf
sbb
pop
or
outsl
lock
in
pushf
push
daa
adc
sti
stos
xor
or
inc
je
lret
out
jns
add
xor
imul
lods
add
popa
push
in
jno
add
ja
mov
push
cmp
push
adc
xor
inc
stc
mov
in
jne
scas
es
push
and
lret
dec
inc
xor
ss
adc
movsb
cmp
test
imul
cmc
push
xorb
ja
sub
lods
sahf
dec
and
push
fmul
frstor
adc
movb
sub
xchg
lret
insl
call
mov
shrb
jbe
gs
inc
xchg
inc
jne
repnz
mov
xchg
jo
add
jmp
jl
xchg
stc
arpl
mov
push
sbbl
lods
pop
push
fcmove
and
xchg
xchg
dec
mov
xchg
adc
jle
xchg
push
push
add
push
jle
in
pushf
addr16
jecxz
shll
icebp
test
gs
pop
pop
je
rorl
pop
hlt
aaa
sub
and
cmp
repnz
cwtl
sti
dec
adc
insb
xchg
and
push
scas
in
add
pop
pop
pop
mov
add
enter
aam
dec
pop
fcomi
xchg
add
rcrb
push
push
test
push
mov
insl
jb
fwait
cltd
fstpt
clc
movsb
or
jnp
cli
sub
sbb
or
cld
jmp
arpl
popf
jo
enter
jp
mov
ja
stos
addl
mov
sbb
leave
or
sbb
hlt
mov
hlt
aad
jle
out
in
in
mov
pop
cmpsl
movsl
repz
sbb
rclb
into
outsb
in
mov
lcall
js
pop
sahf
stos
jns
jae
lret
jb
out
dec
cmp
add
jecxz
cmp
mov
rolb
sbb
xlat
mov
mov
mov
or
lahf
rorl
es
mov
out
lods
pop
aaa
jle
test
addr16
sbb
clc
shrb
outsl
das
scas
xchg
aad
mov
xchg
loopne
pop
inc
ret
add
imul
sbb
add
jb
in
mov
je
mov
lea
inc
fucomp
imul
cltd
mov
inc
jecxz
lcall
jns
cmp
aas
add
fdivr
pop
pop
outsl
test
mov
lds
jns
dec
daa
xor
cs
inc
push
dec
stc
sbb
dec
jb
mov
stc
pop
insl
adc
mov
cmp
xor
shrd
push
pop
or
mov
lret
jnp
jmp
icebp
jecxz
int3
adc
fcomps
dec
clc
je
mov
jecxz
mov
fwait
adc
sub
out
mov
push
cmp
dec
mov
dec
stos
sarb
cli
sbb
mov
mov
pop
add
xchg
adc
xchg
fstpl
les
or
mov
mov
popf
inc
xchg
push
movsl
aad
pop
cmpsb
xlat
jo
aam
jmp
in
orb
jne
hlt
movsl
nop
fsubl
aad
cmc
int3
int
pop
xor
mov
xorl
inc
stos
out
mov
dec
clc
ljmp
lahf
rcrl
or
es
cmp
je
movb
sub
es
sbb
add
clc
inc
test
repnz
mov
int3
adc
jl
adc
push
pop
adc
iret
es
inc
fsts
dec
outsl
xor
sub
outsl
clc
mov
mov
or
jbe
dec
lods
sub
pushf
fwait
or
mov
loopne
into
dec
out
rcl
jmp
add
adc
pop
pop
mov
cmp
fprem1
sbb
add
or
inc
mov
add
popa
jo
dec
dec
inc
push
cmc
sti
hlt
adc
aad
push
mov
aas
and
hlt
xchg
mov
lret
pushf
xlat
in
andps
hlt
testl
mov
push
adc
shlb
mov
sti
jmp
out
pop
pop
sti
pusha
fimull
push
mul
shlb
rolb
outsb
push
lock
sub
add
int
loop
insl
adc
adc
fdivrp
loop
cltd
pop
pushl
fimuls
add
jae
jbe
mulb
shr
fildl
sbb
xorl
jno
pop
out
cmpsb
out
in
enter
mov
test
cltd
inc
ja
shll
push
add
cmp
jne
loopne
mov
cmpsl
mov
rol
mov
push
push
or
mov
gs
dec
jmp
push
inc
ficompl
jb
ja
xchg
sub
js
inc
ret
xor
fstpl
or
mov
inc
mov
or
pop
mov
or
je
subb
xor
xchg
mov
xchg
outsb
iret
jmp
mov
cwtl
cmp
xlat
mov
xchg
pop
out
cmp
icebp
sahf
lret
jns
inc
inc
lcall
and
in
leave
mov
pop
sub
pop
push
sahf
jb
inc
test
loopne
out
lods
ret
popa
xlat
lods
sbb
ljmp
icebp
jecxz
repnz
dec
mov
cmp
stc
mov
push
sahf
mov
push
int3
rcr
inc
test
das
xchg
pinsrw
imul
mov
gs
mov
pusha
outsb
inc
call
jle
popa
cmp
imul
xchg
repz
xor
cld
outsl
xchg
sub
incb
inc
fisttpl
jns
mov
jb
out
mov
imul
popf
insl
fisubrs
nop
lcall
mov
and
dec
sub
fcoml
pop
rcrl
or
push
and
xor
in
xchg
xor
mov
pop
in
sbb
pop
mov
call
mov
jmp
and
js
insl
int
mov
jl
jle
and
adc
dec
inc
je
push
fistpll
lcall
adc
aas
cmp
jmp
pop
mov
test
dec
mov
mov
and
cwtl
add
adc
mov
mov
es
push
cmpsb
push
daa
sar
inc
cltd
add
outsb
mov
data16
mov
int3
mov
fdivr
out
sbb
in
and
sub
sar
in
bound
jmp
push
mov
push
or
adc
and
sub
repz
sbb
pop
xor
insb
aad
xchg
repz
dec
fs
lds
cltd
rcl
xchg
or
jge
cmp
out
dec
sub
pop
pop
sti
mov
shl
jecxz
fucomi
mov
mov
jecxz
xor
or
jae
add
rcr
outsb
shl
adc
adc
sti
cmc
mov
and
jbe
jne
and
push
adc
or
jp
jmp
push
add
pushf
cmpb
mov
mov
adc
aas
push
orl
mov
mov
arpl
inc
insb
add
bound
cmp
jp
sub
pop
pushf
loop
fists
fildl
pop
icebp
adc
mov
mov
insb
in
in
jne
sbb
xor
adc
ja
daa
inc
sub
jl
lret
insb
jno
je
movl
lea
out
std
jnp
inc
or
addl
xlat
lea
cmp
out
lea
in
fdivr
push
data16
les
or
inc
pusha
add
mov
fwait
ret
add
mov
or
mov
and
and
mov
loopne
outsb
fstpl
icebp
mov
call
xlat
adc
movsb
sbb
sbb
js
adc
movsl
inc
push
ret
sub
subb
adc
or
inc
sbb
adc
aad
cltd
sub
push
stos
mov
xor
jmp
mov
rcll
fstp
movsb
adc
cmp
aam
jbe
inc
bound
out
fwait
sub
adc
add
pop
out
xlat
ret
jnp
adc
xor
cmp
clc
int
push
loopne
cmp
xchg
enter
jecxz
aas
lods
xchg
das
sti
js
sub
scas
inc
enter
movsb
es
mov
jnp
xor
mov
lds
test
sub
mov
and
jnp
sahf
jg
cmp
test
mov
iret
aas
dec
and
pop
insb
mov
dec
mov
jp
xchg
inc
add
movsb
mov
test
add
cli
sbb
xchg
dec
dec
mov
push
mov
or
lcall
mov
lds
mov
mov
push
fidivl
add
xchg
sbb
nop
daa
mov
jnp
lds
das
and
xor
rorb
jns
jmp
xchg
cmp
in
sbb
adc
add
pop
sbb
or
push
fcompl
mov
movsl
adc
sub
mov
push
jecxz
mov
cmp
jb
clc
inc
xchg
pop
add
inc
lock
jae
pop
sub
test
or
mov
mov
xchg
cmp
and
mov
mov
mov
ret
sbb
stc
mov
mov
fldenv
dec
pop
daa
mov
push
sub
and
iret
pop
xchg
pop
fcom
les
int3
sbb
lahf
sbb
fstpl
fwait
sub
sahf
arpl
jbe
and
inc
and
cmp
hlt
loopne
loope
and
inc
mov
jo
ret
sbb
jo
faddl
jb
mov
adc
dec
add
shl
ficoms
mov
mov
lahf
xchg
push
fistpl
hlt
mov
add
adc
mov
xchg
iret
inc
scas
dec
mov
and
test
es
pop
pop
xlat
xchg
pop
movsb
cld
in
add
adc
push
daa
fsubl
pop
xchg
push
and
shll
scas
addb
mov
add
jge
inc
clc
aaa
push
jnp
cld
jns
jno
mov
lock
lret
xor
lcall
dec
cmc
push
xchg
clc
jnp
jmp
dec
pop
aas
sub
out
mov
xchg
ja
cmp
inc
push
lret
dec
sahf
push
xchg
dec
add
arpl
mov
mov
aas
jno
into
repz
in
movsb
xchg
fdivrl
iret
jmp
cmp
and
int3
pop
mov
inc
push
push
nop
jecxz
adc
cmp
sub
sbb
dec
lods
clc
subb
dec
or
or
mov
enter
lock
or
lods
shll
inc
inc
sub
das
mov
adc
sub
pop
dec
shr
mov
push
pop
mov
xlat
stos
inc
push
dec
jae
mov
lea
daa
jne
int3
dec
adc
adc
sub
xor
cmp
xor
cs
loopne
sbb
loopne
jbe
lock
sbb
fidivrs
sub
xchg
outsl
cmp
es
add
mov
dec
bound
adc
push
jno
ret
out
inc
into
cmp
pop
fcomi
repz
test
mov
push
outsl
push
mov
jecxz
pop
jle
add
in
dec
cltd
in
inc
fidivrs
mul
pop
push
mov
scas
xor
mov
sbb
mov
pop
fwait
adc
es
lret
cwtl
int
cltd
fcmovu
fs
or
push
dec
lock
cmp
xor
rclb
mov
ret
push
jp
or
gs
clc
mov
sbb
or
rclb
xor
scas
pop
adc
pop
inc
jno
pop
add
test
xor
roll
mov
inc
xor
lcall
xor
dec
test
pop
push
jmp
xor
xchg
inc
push
push
cpuid
jbe
ss
in
xorb
addr16
lahf
sahf
test
lds
inc
sub
mov
sub
test
mov
jmp
subl
std
jns
push
xchg
add
sub
cmp
fildl
xor
popa
pop
int
inc
jp
daa
movsl
iret
andl
pop
mov
mov
mov
inc
mov
ljmp
negl
shlb
cli
mov
xor
dec
mov
cmp
leave
add
adc
cltd
in
push
data16
rcrl
jb
loope
xchg
jl
inc
inc
sub
test
fs
mov
dec
push
and
xchg
adc
adc
cmp
lds
push
xor
mov
loope
and
addr16
xlat
and
adc
dec
jge
jp
aad
fldl
std
jbe
in
into
inc
out
leave
sti
ja
add
push
fwait
cmp
cmc
jmp
lahf
mov
movsl
rol
loopne
sbb
out
enter
gs
add
ret
mov
jbe
dec
cmp
test
aas
test
inc
test
imul
fcoml
add
mov
push
iret
sub
mov
cltd
repnz
and
ljmp
pop
jb
cld
jnp
adcl
cli
jmp
jmp
jb
jmp
add
mov
adc
xchg
mov
insb
inc
adc
lret
xor
mov
jl
add
cmp
and
add
push
push
jno
add
insl
test
enter
xchg
bound
adc
testb
mov
aad
xchg
jne
sbb
pusha
lds
out
adc
dec
pop
inc
dec
and
addr16
push
jle
insl
jbe
in
aad
xchg
cmp
pop
mov
or
icebp
and
sub
loopne
inc
fdiv
leave
xchg
adc
sbb
fiadds
mov
sarl
cli
ja
int3
std
pop
jnp
or
jmp
push
jmp
xor
mov
divb
enter
push
fidivl
or
test
out
dec
dec
pusha
das
cmp
bound
pop
aaa
es
push
icebp
aam
push
dec
push
repnz
fildll
cs
mov
jno
stos
enter
xchg
dec
daa
mov
filds
movsl
aad
js
stos
mov
in
lock
pop
push
lret
addl
icebp
mov
lock
addb
add
clc
xchg
jnp
ret
xchg
into
mov
loopne
mov
dec
ret
mov
leave
sbb
add
jno
push
rcll
cmp
cmpsb
lret
xchg
movsb
pop
inc
pop
sub
popf
dec
rcll
fldcw
stos
movsl
nop
dec
nop
push
out
xor
loopne
call
dec
xlat
cmp
addb
pushf
outsl
xlat
pop
pop
pop
ficoml
insl
mov
xchg
js
and
cs
lock
ja
subb
push
sub
outsb
pop
mov
jle
xor
sub
xchg
push
psubb
cmp
mov
inc
inc
mov
popa
out
nop/reserved
iret
shlb
js
jmp
adc
scas
xor
dec
xchg
repz
mov
sub
loop
and
gs
pop
push
pop
ds
ss
xlat
in
mull
xchg
std
int
pusha
stc
xor
or
shlb
sti
jp
cmp
mov
adc
jns
out
jb
dec
inc
xchg
xchg
daa
mov
sbb
mov
and
pop
insb
jae
push
jp
cwtl
sbb
stos
outsb
pushaw
lretw
push
push
fcompl
stc
cli
and
dec
sub
jmp
and
sub
int3
and
cltd
cs
ret
shlb
loope
hlt
mov
data16
mov
test
jns
daa
xor
jg
hlt
cwtl
add
mov
and
aad
inc
xchg
mov
xchg
pop
jmp
jmp
fistps
int3
mov
in
push
pcmpgtw
mov
inc
jno
sub
aas
push
test
enter
mov
sub
adc
mov
inc
stos
sbb
gs
mov
outsl
call
jp
sub
mov
mov
and
mov
mov
and
fsubl
mov
push
mov
in
pop
sub
fidivrl
nop
test
inc
icebp
out
insb
sarl
lcall
and
xchg
cmp
cmp
je
jno
dec
into
inc
je
push
sahf
fimull
mov
xor
dec
jns
movsl
test
adc
cli
sub
or
push
sbb
cmc
dec
push
mov
rcrl
outsl
sbb
sti
pop
mov
and
in
sbb
orl
idivb
and
arpl
sub
mov
into
adc
fnstsw
mov
sub
mov
ret
icebp
and
lret
or
fistps
cld
or
fxch
lods
sbb
stos
adc
add
je
je
add
mul
imulb
gs
cld
nop
int3
cmpsl
sbb
cmpsb
stos
and
xchg
data16
jecxz
popa
and
jne
mov
adc
inc
pop
ljmp
sbb
enter
ror
pusha
cmc
jl
lods
adc
mov
adc
fisttpl
sbb
js
scas
xchg
movsb
lods
add
xor
xor
scas
imul
test
sub
fiadds
sbb
loop
fidivs
and
mov
imulb
lods
iret
stos
andl
inc
lea
dec
gs
jle
mov
out
pop
add
or
stos
xchg
mov
cmpsb
and
adc
pushf
mov
gs
add
xchg
inc
lret
pop
pop
push
enter
mov
popf
dec
dec
dec
lahf
and
mov
add
and
popa
les
fildl
jg
fmull
aad
mov
cmp
xor
pusha
pop
popf
pop
rclb
push
lock
mov
pop
pop
dec
ja
ret
test
jge
lods
clc
ret
cs
aad
lcall
mov
xor
bswap
out
imul
aaa
adc
out
push
inc
mov
inc
fsub
pushl
jo
out
mov
sub
add
push
pop
or
out
jp
push
add
sti
sarb
mov
mov
lea
div
ret
loopne
dec
std
sbb
call
mov
incl
adc
js
xchg
mov
lock
jns
imul
inc
movsb
aaa
sbb
les
mov
pop
lods
cmp
sbb
out
out
jl
cs
add
aad
mov
adc
out
add
mov
mov
popa
cltd
mov
aam
add
inc
enter
inc
dec
mov
cs
push
jb
fsubrl
sub
inc
lock
in
pop
adc
and
shlb
scas
adc
icebp
inc
hlt
sub
loope
or
xor
dec
push
aad
in
or
jb
xchg
dec
enter
repz
pop
pop
pop
mov
adc
mov
repz
and
rclb
inc
lds
pop
aaa
jbe
push
xor
test
or
icebp
push
test
jno
test
scas
je
push
inc
test
xor
jne
jl
sbb
jecxz
incl
inc
dec
xchg
and
insb
inc
xchg
into
and
scas
outsb
pop
pop
cmpsb
mov
push
fisubs
inc
and
pop
mov
fstps
sub
fstl
in
jmp
repnz
mov
rolb
inc
ret
sbb
fstl
xchg
fisubrs
mov
xor
mov
push
pop
and
dec
aas
sbb
mov
fisttpll
stc
mov
call
xor
xchg
or
ss
lret
outsb
push
cli
lret
pop
sub
lea
add
inc
push
jmp
aam
push
lcall
repz
stc
test
in
or
mov
cltd
mov
mov
sbb
xchg
jg
in
clc
scas
or
cmp
sub
push
add
in
and
xchg
cmpl
jge
stos
push
popa
xchg
out
cmp
push
mov
mov
fdivs
dec
cmpsb
repz
pop
or
add
imul
std
arpl
cld
les
pop
jo
fildll
sub
imul
inc
pop
xor
fnstenv
or
mov
sub
fwait
loop
subb
cld
mov
dec
fmulp
push
xchg
mov
ja
shr
outsb
mov
lock
push
icebp
jg
movsb
in
decl
pop
fwait
loope
xor
xchg
iret
sub
mov
dec
scas
xlat
je
inc
mov
jnp
add
iret
test
out
je
adc
pop
push
scas
pop
das
call
mov
inc
mov
push
inc
and
xchg
loopne
enter
mov
leave
call
adc
jns
mov
mov
ja
xor
call
xor
insb
mov
stos
fwait
xchg
fstps
push
cmpb
inc
jmp
jnp
cmp
adc
jns
sbb
cli
popa
addr16
push
jbe
adc
loopne
mov
leave
and
pop
frstor
dec
decb
mov
loop
rcll
pop
shlb
and
mov
mov
sub
lea
aaa
shll
adc
xchg
mov
lea
aam
jae
push
gs
hlt
push
lods
or
rcrl
mov
nop
and
add
cwtl
es
fucomp
cmc
sub
push
push
add
fdiv
cmp
jg
ret
enter
or
test
aad
xchg
xchg
push
test
xchg
jle
xor
icebp
xchg
rcll
push
add
add
push
pop
jbe
xor
or
dec
pop
fdivrs
fldt
fwait
fs
mov
in
lock
mov
cmpb
lods
jbe
and
sbb
inc
adc
adc
aam
cltd
out
out
fidivs
outsb
mov
jecxz
adc
mov
mov
ljmp
imul
loopne
ljmp
cmp
movsb
insl
nop
jne
imull
pop
insl
push
xchg
jb
jmp
in
sbb
jno
dec
xlat
movsl
add
decl
loop
push
cmc
mov
ja
loop
shr
push
scas
xchg
mov
int3
and
pop
cmp
xchg
aad
xchg
cli
mov
xor
mov
fldl
out
sbb
sub
loopne
xor
jge
xor
int3
cmc
pop
mov
cwtl
push
unpckhps
dec
testl
pop
in
mov
push
fdivs
jmp
xor
xlat
int
loop
cltd
fisttpl
adc
imul
or
dec
scas
jl
fldl
stos
popf
imul
inc
fiadds
es
enter
mov
scas
imul
addr16
repz
xor
inc
sbbb
sahf
mov
xor
cmp
mov
repz
xor
add
mov
test
ds
and
mov
ret
rcrb
mov
lret
xchg
jnp
push
dec
iret
out
xchg
into
xchg
add
pop
xor
adc
xchg
roll
call
in
sub
sbb
mov
aaa
push
sbb
sbb
hlt
inc
pop
adc
outsb
addr16
pop
inc
ss
or
adc
xchg
iret
es
mov
out
out
lret
and
js
xchg
add
je
out
test
jo
xchg
aam
xor
hlt
or
pop
jmp
in
push
mov
std
stos
shlb
loop
jp
aad
js
insb
mov
push
testl
cli
fs
out
scas
push
lock
and
xor
mov
pushf
scas
data16
int
bound
add
fs
sbb
mov
test
enter
and
xor
gs
pop
add
aam
ret
stos
mov
xor
mov
cmc
sbb
in
mov
sti
jmp
mov
faddl
pop
cmp
and
mov
rcrl
gs
repnz
xchg
dec
testb
and
test
sub
int3
cmp
dec
add
sbb
data16
jnp
jno
fs
xor
mov
call
inc
and
mov
xchg
mov
push
cmp
or
stc
mov
ss
lahf
inc
lret
inc
add
push
jbe
cmp
mov
xchg
icebp
or
test
inc
push
mov
lods
lds
push
cmpsl
mov
fs
xchg
push
nop
shr
lods
sub
and
cltd
mov
sbb
xchg
or
mov
xor
mov
sub
sub
inc
pop
mov
sub
cli
outsl
jb
das
scas
jno
cmc
repz
data16
cmp
jp
lods
and
cmp
dec
lods
loop
dec
pop
mov
test
imul
lahf
cli
cmp
cmpsl
xor
push
push
pop
lds
sub
aas
loope
sub
mov
and
div
dec
int
sbb
and
sbb
leave
mov
jae
xlat
sbb
push
lods
lret
or
movsl
stos
jnp
mov
sbb
fidivs
cwtl
insl
add
cmp
insl
inc
inc
xor
fiadds
sbb
pop
sbb
or
dec
shr
pop
xchg
xchg
lcall
ffree
sub
mov
adc
adc
aas
mov
pushf
pop
push
sub
xchg
nop
mov
pop
je
mov
pop
mov
nop
scas
sub
mov
and
loope
loop
or
jmp
dec
sbb
and
loopne
mov
fs
push
inc
xchg
popa
gs
popf
inc
adc
orl
cmpsb
in
popf
sahf
mov
cmp
in
data16
jmp
mov
out
or
pop
bound
pop
pop
shll
fwait
mov
int3
adc
mov
and
test
pop
inc
xchg
inc
in
jmp
in
popa
or
fdiv
aas
jecxz
test
xchg
clc
mov
mov
xor
inc
add
inc
loopne
loop
sti
pop
add
cmpb
add
insl
sbb
pop
scas
xor
inc
shl
cmovl
stc
xchg
test
xchg
dec
mov
xor
mov
mov
mov
mov
nop
jp
loopne
jl
shll
jecxz
and
imul
into
mov
std
mov
xchg
icebp
shlb
sbb
inc
arpl
mov
xorb
pop
xor
sub
jp
pusha
push
xor
xchg
xchg
lods
xchg
outsb
fidivrs
jb
test
mov
dec
pop
inc
jno
or
ja
jne
rclb
scas
inc
push
fadd
loope
inc
mov
jns
out
sub
fs
repnz
and
lcall
aaa
outsl
inc
push
aad
in
out
push
es
dec
es
popa
or
loopne
xor
loop
cmpsl
adcl
sbb
sbb
sub
lock
addr16
mov
jnp
sbb
int3
or
mov
addl
jnp
cmp
push
pop
or
mov
jae
mov
aaa
out
push
outsb
cwtl
mov
pushf
loope
test
repz
and
mov
dec
lds
xor
js
popf
test
loopne
lods
push
jecxz
repz
iret
sbb
in
add
jmp
imul
mov
pop
cltd
das
es
gs
ret
jle
and
sub
int
outsl
mov
xor
ja
lods
dec
fistps
jge
int
mov
fwait
mov
xchg
add
inc
mov
adc
or
xor
inc
test
sub
mov
data16
int3
test
and
dec
scas
and
leave
aas
xor
mov
pop
dec
scas
in
call
fwait
xlat
mov
test
movsl
lods
cmpsb
sti
inc
pop
int3
loopne
fs
outsb
sbb
add
cmpsl
adcl
test
mov
dec
jo
repnz
into
adc
test
fildl
cmp
aaa
pop
cmp
and
loope
sub
jno
and
movsb
add
inc
into
aaa
cld
lcall
mov
mov
sub
popf
mov
or
cmpsl
push
clc
xchg
pop
hlt
addr16
sub
push
jecxz
adc
imul
mov
fisubl
adc
mov
js
sub
cmc
mov
jno
addl
mov
or
dec
inc
sar
or
xor
mov
jg
cmc
fdivs
add
daa
das
xlat
dec
in
int
mov
imul
fnstsw
fiaddl
fisubrl
mov
loopne
sbb
mov
inc
or
mov
mov
push
sbbb
fildl
lods
lods
mov
ja
ljmp
fildl
ret
jne
outsb
iret
sub
scas
imul
shl
mov
pusha
add
ret
mov
rcl
push
cmc
lret
movsl
and
popa
sub
sahf
mov
xchg
sub
xchg
push
mov
jmp
add
inc
pop
adc
int
mov
inc
data16
inc
aad
pop
movl
int3
fldt
sti
lcall
and
or
or
repz
push
je
rcr
push
lcall
stos
je
adc
js
add
stos
jle
jle
fimuls
cmp
xor
xor
push
nop
aaa
mov
cmp
repnz
cmp
jge
mov
imulb
test
adc
dec
icebp
inc
adc
pop
out
pop
jl
movsb
or
hlt
repnz
test
or
sbb
movsl
popf
or
sbb
sbb
incl
daa
pop
cmp
sub
aad
mov
xchg
lds
addb
out
jo
mov
ljmp
push
and
out
jbe
addr16
ss
xor
rorl
xor
loope
xchg
mov
fcomp
scas
xor
xor
sub
xchg
and
rcrl
loope
and
repz
add
out
push
repnz
mov
js
fistl
push
mov
adc
rclb
sbb
lock
cmp
jge
mov
xor
xor
aas
xor
cltd
adc
icebp
sbb
xor
sbb
aam
test
push
inc
lcall
mov
jecxz
jg
sub
test
insb
fwait
sub
rorb
xchg
xchg
dec
out
add
scas
jae
push
pop
mov
cld
imul
pop
sbb
loope
push
push
daa
lock
add
fidivs
pop
call
imul
call
shr
arpl
adc
cmp
hlt
ret
jns
or
jnp
mov
and
nop
nop
lods
sbb
imul
jmpw
pusha
sbb
outsb
cmc
in
xlat
xchg
shll
clc
xchg
xor
mov
fs
mov
mov
std
push
xor
pop
imulb
fsubrs
pop
repz
fisubl
pushf
fdivr
jecxz
mov
std
sahf
jmp
pop
mov
dec
in
je
inc
sub
or
jnp
inc
int3
aaa
sbb
cmp
push
dec
iret
arpl
lods
imul
repz
in
out
mov
cmc
adc
cmp
mov
cmpsb
adc
jbe
mov
divb
js
in
xchg
mov
adc
jl
rcll
gs
aaa
jg
dec
shl
push
dec
push
push
mov
call
cmp
inc
jno
ja
mov
jg
and
ret
push
into
and
shrb
scas
jg
inc
scas
addr16
mov
push
stc
or
sub
mov
outsw
das
push
stc
std
sbb
aam
stc
inc
js
mov
jmp
in
lock
pop
xor
addr16
pop
sub
jle
test
sbb
dec
call
test
leave
and
mov
imul
or
ss
cltd
in
pop
cmp
mov
xchg
mov
jne
adc
cltd
lea
xchg
repnz
xor
test
xor
ret
push
popf
rclb
add
or
add
inc
jo
hlt
cmp
push
movsl
addl
lods
cmp
or
insl
and
cs
mov
dec
jp
cmc
cli
xchg
repz
lahf
fistl
dec
jl
dec
cld
push
and
out
aas
addr16
dec
test
push
leave
loope
lcall
mov
xlat
loopne
jge
aad
mov
jbe
outsl
adc
adcl
rol
jl
sub
sahf
aaa
push
adc
jge
shrl
fsts
in
pop
lds
fnstcw
xor
push
enter
int
cmpsb
cmc
pop
pop
in
test
push
enter
jns
test
pop
inc
outsl
push
out
push
fmuls
push
lret
lret
xchg
scas
mov
jns
insl
popa
mov
mov
fisttpl
in
jp
jno
pop
mov
icebp
loop
jnp
cmp
xchg
sub
inc
push
mov
je
inc
aas
xchg
sbb
repz
loopne
and
jae
in
ja
lock
sub
pop
mov
inc
pop
inc
mov
mov
jmp
xchg
xchg
in
lock
fldenv
lahf
cmp
xchg
inc
xor
jge
mov
xor
repnz
ret
pop
jp
or
mov
sub
leave
mov
mov
movsl
and
jnp
loope
repz
cwtl
dec
pusha
and
js
and
movsl
popa
cli
dec
mov
pop
mov
outsb
dec
fldt
je
mov
nop
mov
repz
and
mov
pop
repz
insl
inc
mov
lock
pop
sub
inc
call
cmp
sbb
testl
cmpsl
dec
out
js
inc
sub
cmc
pop
dec
je
xor
bound
imul
sub
push
and
shll
ror
inc
subb
dec
adc
cli
fiaddl
add
into
jo
mov
test
cmpb
lea
mov
fisubs
pop
sub
das
rcll
jge
loop
fistl
inc
adc
xchg
loop
mov
push
test
and
imull
adcl
adc
adc
cs
jmp
lods
lcall
mov
rclb
shrl
pop
pop
jecxz
fwait
aaa
xchg
out
outsb
call
insl
fistps
popf
mov
jne
idiv
inc
sbbl
dec
stos
jnp
shl
mov
mov
ds
inc
out
stos
fwait
mov
cld
pushf
lahf
sbb
lods
ljmp
xor
or
xchg
sbb
add
fcomip
bound
lock
mov
or
sarb
lret
jnp
adc
fcoms
xchg
stos
jmp
rorl
or
ds
repz
fsts
ljmp
xlat
in
sub
mov
mov
cmp
push
fs
cmp
sbb
adc
in
or
jmp
movsb
ficompl
jge
mov
dec
ss
je
loopne
cmp
into
pop
xchg
inc
push
ds
cmp
addr16
push
jno
push
stos
ds
sbb
sub
mov
std
or
scas
cmp
out
pop
into
cli
sub
xor
in
mov
fwait
cmp
jle
xor
pop
inc
jg
les
pop
cmc
mov
cmpb
and
in
or
in
lcall
adc
and
popf
xchg
jne
xor
sbb
mov
push
pop
and
sub
mov
aad
jge
and
fidivs
sarl
xchg
sbb
js
push
imul
out
pop
arpl
mov
ja
lds
and
popf
insb
or
sbb
mov
sbb
jge
push
lock
dec
inc
or
imul
iret
das
dec
sub
scas
pop
xor
fadds
add
mov
mov
xchg
cmpsb
cmpsb
push
push
ffreep
sahf
mov
leave
and
or
arpl
mov
sahf
dec
adc
jl
cmpsb
imul
mov
daa
rol
imul
cld
and
inc
das
jnp
mov
mov
jb
imul
adc
sub
imul
inc
mov
lret
inc
jge
rcll
sub
dec
adc
or
aaa
jns
add
negl
insl
dec
push
sti
and
enter
pop
scas
in
mov
adc
add
test
xchg
add
sub
pop
adc
out
shr
das
repnz
scas
movsl
mov
sbb
lcall
aam
cltd
dec
pop
jmp
xchg
xchg
aas
adc
fnstcw
and
add
fisttpll
mov
loop
jle
xchg
mov
scas
and
push
cmp
xchg
sbb
addl
iret
push
loopne
adcb
clc
fcomps
jl
sub
aaa
cmpb
jmp
in
adc
mov
pop
and
inc
into
push
or
imul
mov
movsb
js
pushf
aad
je
out
sbb
fsubl
jo
cmp
out
repz
sub
adc
inc
xor
pop
mov
pop
sbb
pop
popf
enter
or
test
enter
stos
push
sbb
or
mov
loop
xlat
cmp
sarb
nop
mov
cmp
ds
stc
clc
and
shrl
mov
sbb
and
repz
testb
cmpsb
rolb
cmp
pushf
sub
fcmovnu
cmp
inc
gs
mov
movsl
and
or
mov
data16
xchg
and
push
ret
lahf
dec
stos
push
dec
push
mov
pop
int
enter
adc
add
fs
dec
push
out
adc
jecxz
jp
mov
or
sub
fdivrs
aas
cmc
push
fdivrl
add
mov
scas
jecxz
mov
push
push
mov
dec
mov
imul
cmpsl
rclb
and
cmp
jge
add
lea
xchg
mov
enter
jns
test
insl
sub
out
push
sbb
ret
js
mov
fcmovne
iret
repz
mov
adc
lea
inc
jnp
jmp
mov
cmpsb
in
mov
jo
cli
mov
and
sahf
xchg
int
loop
push
ret
lods
xor
mov
lods
adc
movsb
lods
pop
mov
mov
lock
iret
leave
arpl
aam
dec
aas
jle
sub
xor
jnp
fstps
mov
clc
sbb
add
adc
mov
loopne
cwtl
es
stos
repnz
cmp
sub
dec
repnz
test
popf
stos
in
xor
outsb
subl
into
incb
movsb
cmc
shlb
sti
mov
sbb
and
pop
testl
jg
mov
dec
imul
jg
mov
jg
mov
push
push
aas
mul
aad
test
pusha
cmp
cmp
inc
dec
sahf
push
mov
enter
jle
decb
shll
mov
add
shll
fisubs
pop
clc
add
outsb
mov
shrl
popf
jp
xchg
cs
pop
sbb
jle
pushf
popa
or
icebp
gs
sub
xor
lea
incl
loop
xor
imul
sahf
fs
mov
sub
mov
nop
aam
cmc
dec
pop
mov
into
mov
add
mov
dec
sbb
cli
jl
imul
aam
and
add
aad
bound
cmp
or
jge
jo
nop
push
dec
loopne
ret
es
cmp
add
lds
lret
dec
or
mov
xchg
inc
and
out
dec
inc
dec
test
jg
imul
inc
scas
push
dec
je
or
aad
lahf
in
mov
rcl
filds
xor
pop
sbb
mov
pop
fwait
jno
jnp
inc
shlb
mov
js
jae
in
idivb
insb
add
decb
xor
jns
out
cli
je
xlat
xor
cmp
cmpsl
fdivr
jns
imul
aas
push
cmp
lldt
nop
fdiv
xchg
mov
nop
dec
mov
jecxz
lret
sub
fisttpl
cli
stos
jb
imul
movsb
rcl
adc
pop
fiadds
lcall
mov
stos
int3
in
dec
lock
add
mov
dec
push
rolb
cmp
fcmove
cwtl
cld
jecxz
sub
sub
cmpb
sub
fdivrs
xchg
xor
out
lods
push
stc
ljmp
or
add
xlat
imul
xchg
xlat
add
scas
lods
pop
and
cld
jnp
xor
not
xchg
mov
dec
fwait
sub
stos
out
inc
push
ficoms
cmp
dec
mov
imul
hlt
adc
jecxz
testl
mov
adc
scas
jo
stc
lods
test
inc
lock
mov
les
stos
and
cltd
ret
jbe
push
cwtl
outsb
lahf
dec
hlt
addl
outsl
sbb
addr16
scas
test
cmp
cmp
add
fsub
jp
push
ss
stos
jmp
cmc
es
or
add
mov
and
and
sbbb
jmp
add
push
xchg
dec
rorl
jle
or
js
aas
sbb
adc
adcl
xchg
xor
mov
daa
cmp
sub
dec
int
xor
add
push
testl
adc
movsl
lds
mov
fistl
shlb
aam
or
lcall
popf
push
jecxz
or
push
mov
sub
xchg
dec
sub
shl
and
xchg
or
sbb
hlt
aam
pop
pushf
xchg
in
adc
mov
outsb
mov
scas
sbb
stc
leave
mov
xchg
adc
sahf
out
jg
lds
lods
jecxz
push
push
sub
test
pop
fistpl
test
mov
lea
iret
cmpsb
jg
pop
test
aam
aam
loope
lods
sbb
or
ret
push
and
inc
and
push
out
jnp
or
jno
add
add
mov
mov
sahf
lret
divb
mov
cmc
pusha
push
rorb
faddl
or
fsubp
mov
cmp
add
push
pop
inc
add
add
ljmp
adc
ret
mov
cmp
jecxz
out
test
push
ffreep
mov
add
mov
insl
hlt
and
inc
mov
lcall
popa
addb
popa
mov
cld
pushl
in
ret
popa
xchg
mov
mov
popa
cltd
sbb
push
dec
xor
shl
lahf
int
mov
and
pop
insl
xchg
imul
aad
xor
and
sahf
lret
xchg
mov
adc
pusha
lds
xchg
arpl
or
pop
test
adc
gs
xchg
andb
xlat
push
lods
daa
add
cld
or
lahf
xor
dec
inc
cmpl
sub
xor
aad
insb
js
fwait
mov
dec
jno
std
fisubs
mov
sti
jp
mov
mov
xchg
jg
int
xchg
int
ror
xchg
pop
dec
jno
xlat
jge
roll
mov
or
das
arpl
loopne
sub
pop
or
bound
adc
push
rcl
mulb
sbb
or
adc
out
shll
ljmp
jb
dec
jle
cmp
shlb
leave
sbb
sahf
int
xorb
imul
jle
cmpsl
scas
mov
mov
mov
pop
push
adc
xor
xchg
movsb
pop
push
mov
je
ljmp
xor
stc
pusha
loop
arpl
int3
cmp
popw
out
adc
adc
pop
inc
sbb
iret
mov
cs
xchg
fs
add
in
dec
or
add
outsb
sahf
push
sub
push
scas
imul
pop
movsl
xchg
push
dec
repnz
mov
shlb
lea
pop
adc
and
adc
mov
lods
mov
mov
repz
add
fidivrs
hlt
mov
cs
mov
fldt
and
std
push
and
jb
sbb
add
gs
or
arpl
imul
adc
rclb
dec
out
setp
es
inc
jl
mov
cmp
xor
imul
pop
add
nop
in
mov
divl
and
enter
inc
adc
scas
dec
adc
pop
jb
aas
enter
cmc
mov
sti
jne
jno
popa
sub
xchg
jne
cmp
insb
leave
push
push
lcall
push
leave
out
lahf
mov
shll
out
inc
push
rorb
push
ret
lcall
orb
jnp
or
out
fstpt
sbb
leave
xchg
mov
sti
loopne
fst
mov
out
xor
push
loopne
mov
fldenv
out
imul
xor
movsb
iret
xor
rcr
dec
dec
call
mov
add
je
jl
inc
adc
ds
out
sbb
mov
testb
and
xor
loop
adc
and
cmp
icebp
sbb
cld
mov
sbbb
dec
icebp
jecxz
xchg
out
push
dec
sti
mov
in
outsb
mov
xchg
loopne
mov
xchg
int3
inc
sbb
bound
imull
fwait
sub
mov
popf
and
push
sbb
add
mov
xlat
into
xor
cmpsb
mov
rorb
dec
or
xchg
out
xchg
dec
ljmp
sub
xchg
icebp
lds
mov
shrb
sub
or
sbb
sub
cltd
push
js
cltd
mov
fcomps
push
jecxz
jg
std
mov
lahf
jb
arpl
xchg
or
hlt
jge
cs
cmp
aaa
mov
push
cmpsl
into
pop
hlt
mov
push
dec
dec
xchg
push
inc
add
loope
jg
fsub
mov
ljmp
gs
push
mov
sbb
jo
mov
cmc
sbb
nop
xor
cmc
inc
in
inc
insb
cmpb
mov
pop
pop
call
jmp
sbb
pop
lret
into
push
add
pusha
dec
cmp
movsb
ror
cmpsl
adc
cmp
ja
aas
sbb
in
pop
sbb
jno
hlt
inc
sub
stos
fldt
in
xchg
cld
xchg
mov
rorb
mov
push
js
inc
inc
sti
or
mov
pop
pop
clc
push
stos
dec
sarl
sbb
cld
cmp
dec
inc
imul
andb
pushf
add
rorb
leave
cmp
inc
fnstcw
bound
lret
icebp
xor
lea
lret
js
es
movsb
jp
sbb
xchg
jnp
aam
pop
push
adc
push
mov
out
mov
mov
lods
push
shrl
sarl
jp
jns
sub
lods
jmp
aad
sbb
and
ret
and
push
stos
daa
xor
movsl
mov
and
cmp
cmpsl
lret
sub
dec
addr16
push
sbb
pop
push
nop
int
fwait
inc
jge
fcoml
mov
in
mov
mov
xchg
pop
or
jnp
jne
mov
loop
jb
call
pop
and
and
pop
mov
mov
cltd
mov
cmp
cmp
push
popa
cmp
divl
test
adc
inc
adc
stos
in
push
sahf
xor
push
adc
pushf
pop
and
dec
mov
daa
mov
ss
sbb
cltd
in
mov
inc
cltd
scas
imul
popf
fwait
int
sbb
scas
divl
das
lret
movb
mov
lret
call
daa
cld
jnp
ret
sbb
inc
shl
sbb
or
shlb
loop
sub
sahf
lds
insl
pop
lock
sub
mov
inc
movsb
aam
push
mov
arpl
mov
dec
pop
mov
dec
mov
nop
lock
pop
xchg
inc
xor
mov
pop
mov
addr16
mov
inc
sub
cltd
jmp
pop
and
dec
dec
or
movsb
cld
lret
add
dec
out
pop
sbb
add
sahf
loope
mov
stos
mov
inc
xor
nop
std
sub
div
xchg
jecxz
out
or
mov
xchg
jp
cwtl
pop
add
bound
mov
push
mov
ja
pop
dec
in
imul
es
rol
popa
mov
pop
push
or
jl
or
pop
movsb
negb
pop
cli
out
mov
pop
pop
dec
xchg
ljmp
mov
stos
dec
inc
stos
gs
mov
inc
rcl
sahf
mov
test
xchg
adc
jb
jno
inc
movsb
fwait
je
xchg
mov
and
outsb
sbb
push
mov
mov
daa
ljmp
jne
es
repz
stos
and
call
aaa
jno
mov
outsl
clc
adcb
lret
mov
scas
jbe
push
into
xor
out
pop
gs
push
cltd
xchg
fistl
mov
mov
jno
addb
addr16
mov
ds
lea
mov
out
pop
loopne
addr16
adc
or
out
and
add
mov
test
ficompl
mov
stc
aas
les
test
arpl
add
aad
pop
and
push
sub
push
sbb
ds
cmp
lea
lock
dec
insb
aaa
xchg
push
sub
jbe
ds
imul
mov
jg
mov
arpl
das
fsqrt
xlat
psubusw
or
mov
lods
pop
mov
xchg
sub
and
ret
add
mov
test
subl
push
sbb
pop
or
stos
adc
add
repz
sbb
mov
cld
push
cmp
dec
mov
mov
nop
mov
xor
jge
pushf
jno
addr16
cmc
pop
and
int
movsl
inc
mov
notb
cwtl
sbbb
mov
jge
movsl
cmc
push
pop
es
loop
mov
std
nop
or
or
aaa
push
adc
loop
divl
iret
push
adc
or
sbb
fistpll
in
sbb
je
movsl
movsl
cmpsl
mov
cli
into
scas
cmp
into
or
dec
adc
insb
pushf
loopne
push
xchg
sbb
mov
and
dec
insb
cmc
mov
aas
cmp
cld
mov
inc
push
sub
mov
mov
mov
mov
cli
sub
inc
fsubrs
test
andl
scas
mov
lds
mov
xchg
dec
sub
and
fwait
cmp
inc
push
add
ja
jns
popa
movsl
mov
je
mov
test
xchg
jl
bswap
mov
mov
jbe
loopne
cmc
into
push
mov
enter
leave
inc
clc
pop
sahf
es
jl
dec
pslld
inc
dec
je
or
pop
cli
cmp
movsb
je
aad
loop
add
add
and
scas
pop
in
push
gs
mov
mov
pop
lret
repz
jne
dec
test
xchg
and
pushf
dec
jno
add
and
data16
je
out
dec
ja
sbb
lock
jne
test
and
sbbl
jl
ss
outsl
pop
pop
rolb
int3
in
xor
loopne
lcall
xchg
stos
arpl
mov
inc
cmp
in
movl
dec
sbb
add
nop
pop
cld
jg
mov
stc
push
pop
mov
jb
cmp
insl
cmp
cltd
xchg
adc
cmc
stos
mov
movsb
movsb
lret
mov
rcr
adc
sub
sub
mov
pop
jg
adc
adc
push
imul
sbb
cwtl
jp
adc
xlat
jo
test
mov
decb
xor
arpl
inc
icebp
dec
jmp
cmp
ljmp
push
in
mov
outsl
inc
dec
jo
aam
xchg
lods
movsb
add
xor
xlat
sbb
movl
lcall
pop
adc
pop
es
push
sti
push
rcl
cvtpi2ps
lea
xchg
repnz
push
test
call
in
pop
aam
in
nop
int3
xor
aam
jle
aam
jbe
scas
outsl
lret
and
xchg
or
mov
mov
inc
inc
xchg
out
pop
inc
sbb
std
jb
xchg
mov
xchg
dec
ljmp
sar
popf
jb
lret
add
lret
inc
hlt
jae
mov
fistpll
adc
pop
mov
cld
adc
imul
adc
sbb
cmp
aad
sub
xchg
icebp
lcall
sub
loope
cs
dec
leave
shlb
and
ss
pop
sbb
xchg
fisubrs
jno
mov
mov
or
leave
test
mulb
push
mov
rcr
mov
sub
jecxz
mov
out
mov
pop
in
jns
sbb
lahf
and
fs
lods
dec
xor
push
xor
cs
adc
dec
jno
ja
mov
lcall
and
mov
or
cs
dec
add
cmp
sbb
loopne
and
stos
add
sbb
pop
xor
movsb
mov
mov
mov
mov
test
dec
sub
mov
add
sub
outsl
xchg
xor
std
mov
jmp
push
clc
in
cmp
sbb
scas
pop
std
cmp
lcall
jnp
jmp
mov
lds
js
cmp
sahf
emms
shll
bound
stc
mov
lock
push
shrb
push
mov
jae
js
mov
adc
cltd
lds
lcall
fwait
mov
mov
movsb
insl
pushf
jmp
xchg
cmp
outsb
xor
sbb
push
aam
punpckldq
gs
mov
or
fisubrs
dec
sahf
add
xor
fdivs
or
cld
stc
pop
and
mov
inc
push
addr16
xchg
in
mov
je
pop
sahf
test
mov
push
mov
push
jl
sub
xchg
or
cmp
out
lea
or
push
ljmp
fistl
mov
mov
add
call
fsubl
stc
jne
xchg
movsb
mov
push
das
lea
sbb
movsb
mov
insb
mov
cmp
sbb
in
jg
xchg
adc
and
call
negl
dec
dec
mov
aas
push
mov
sub
cli
jge
push
cmp
aas
in
mov
aas
sti
pop
sub
idivl
lahf
les
pop
mov
xor
and
cmpsb
ljmp
xor
jns
and
imul
push
shrl
es
xchg
sbb
sub
adc
gs
cmp
sub
bound
stos
sbb
pop
push
or
sub
or
push
mov
js
lahf
mov
aaa
cmp
ljmp
xlat
stos
jmp
movsb
jp
xchg
fmul
mov
and
mov
inc
lcall
aaa
inc
ret
mov
int
inc
xor
xor
inc
sbb
loope
xchg
adc
ja
shl
dec
mov
stos
icebp
and
jb
iret
ja
mov
cld
pop
mov
push
popa
cmp
mulb
inc
andl
mov
shr
mov
or
xchg
outsl
test
pop
out
sub
cmp
lock
xchg
cmp
ret
repnz
push
mov
sbb
pop
xchg
mov
cmp
jge
sbb
or
cmp
sahf
sub
sub
cmpl
test
sub
aad
sbb
jmp
icebp
push
aas
sub
mov
pop
popa
mov
inc
icebp
adcl
adc
xchg
les
sahf
lret
outsb
adc
add
repz
mov
mov
xor
sbbl
push
lahf
or
pop
xchg
pop
xchg
mov
mov
jle
ja
pop
mov
ja
push
ret
bound
jmp
ss
or
repnz
popf
dec
sarb
aad
push
insb
mov
in
rcll
add
mull
xor
lods
sub
or
and
mov
aam
les
pop
pusha
ret
jmp
test
mov
pop
mov
icebp
rep
sbb
jecxz
push
mov
push
cmp
push
mov
daa
gs
aas
xlat
aaa
xchg
rcll
aam
or
daa
out
mov
pop
ja
mov
sub
jmp
in
dec
xlat
lret
cmpsl
xchg
push
inc
cmpsb
push
test
fdivl
ss
and
cli
nop
pop
and
jnp
pop
ret
mov
test
in
sahf
in
outsb
jne
ret
ljmp
and
aam
push
dec
jno
push
add
add
pop
xchg
cmp
roll
sbb
stos
mov
lock
out
jle
pop
dec
push
mov
jle
mov
mov
repz
movsl
in
xor
lds
lds
nop
js
jns
js
shlb
rcrl
sbb
sbb
shrl
dec
addr16
lods
add
enter
add
inc
add
std
aas
fs
sbb
jecxz
test
push
or
sub
inc
pop
sbb
mov
leave
jp
pop
mov
jo
xor
rorb
movsl
movsl
int3
jno
jge
lods
mov
fsts
movsb
pop
int
in
mov
je
jnp
xchg
cmpsl
das
inc
insb
sub
dec
lcall
inc
fwait
jno
push
or
pop
jmp
and
bound
sub
add
aad
cmc
push
jecxz
fwait
xorl
stc
and
ret
mov
aam
cltd
daa
pop
mov
fldenv
or
out
lea
stos
ss
mov
cmp
jns
mov
cmpsb
outsl
cmp
sub
test
lahf
lds
das
push
jns
cmp
cmp
test
sub
call
jecxz
cmc
sub
xchg
and
mov
jmp
nop
sbb
fsubrl
cmp
dec
std
push
in
cld
inc
mov
sub
mov
movsb
mov
movsb
iret
mov
jo
mov
mov
jp
call
es
xlat
inc
adc
mov
adc
outsb
push
ja
or
sbbb
pop
insl
int
xchg
cs
mov
pop
aas
mov
cld
lea
insl
pop
mov
sbb
enter
dec
mov
test
lret
out
xlat
fistpll
aam
ficoml
lret
xlat
mov
loopne
in
mov
cmp
dec
push
and
sbb
cmp
mov
sub
pop
das
add
shrl
dec
inc
pop
dec
sub
in
jge
mov
pop
iret
pop
mov
mov
arpl
jb
add
loop
dec
push
jae
mov
push
xchg
jecxz
jno
push
lock
ds
or
cmp
cwtl
mov
and
sar
mov
ds
out
sbb
test
ret
push
icebp
push
in
cs
mov
inc
push
inc
call
data16
sahf
mov
int3
xor
push
cmp
test
jg
jbe
jmp
imul
sahf
repnz
lret
shll
and
push
gs
divb
jge
jmp
pop
sbb
fwait
mov
and
lds
insl
mov
jb
push
fcmovnb
fs
sarl
sub
push
test
mov
xchg
pop
ret
mov
mov
sub
movsb
mov
add
aaa
jbe
jle
clc
sub
push
ret
stc
in
sahf
add
rorb
das
lahf
test
push
pop
clc
out
clc
pop
push
lods
jb
xchg
into
pop
add
xchg
scas
test
shrb
mov
jmp
out
lret
push
pop
mov
lea
and
dec
sbb
jnp
lods
inc
int3
mov
mov
shlb
mov
jne
aad
aam
scas
ja
dec
mov
inc
sub
test
repnz
pusha
xchg
lods
sub
hlt
adc
or
in
mov
mov
xchg
popa
push
mov
cmp
cwtl
jbe
xlat
push
movl
sbb
cltd
jne
jno
mov
mov
pop
sbb
nop
adc
cmp
inc
icebp
insl
mov
test
pop
mov
sub
dec
jne
push
fwait
cmp
fisubrl
insl
or
xor
scas
call
xchg
xor
or
shll
jge
orb
into
cmp
out
das
cltd
xor
cmp
hlt
test
lret
int3
sub
xorl
inc
pop
loopne
mov
dec
in
aaa
stc
fisttps
lcall
ret
inc
mov
loop
ds
hlt
pop
cmpl
jae
in
cmp
add
popf
into
sub
lods
clc
mov
stos
cs
cmp
test
rcr
pop
icebp
jb
pop
inc
xor
sub
fstpl
or
insl
andl
mov
lock
jecxz
jecxz
fstpl
cmp
into
adc
xor
add
sub
mov
outsl
add
sub
adc
pushl
aam
jle
mov
fsts
enter
out
mov
add
cmc
and
cmp
mov
shrb
mov
outsl
lcall
and
sbb
inc
lret
data16
mov
rorb
mov
enter
xor
imul
fisttps
mov
or
cmp
lea
mov
or
inc
adc
sbb
out
stos
mov
test
rol
das
cmpb
mov
xchg
dec
mov
popl
or
das
sbb
push
in
out
mov
inc
jbe
and
inc
add
lahf
push
jecxz
lods
shr
adc
inc
movsb
scas
sti
mov
xchg
cmp
add
or
imul
test
jl
test
testl
add
mov
mull
and
xchg
leave
ffree
mov
adc
xchg
cld
scas
cmpsb
dec
mov
cmc
inc
cmp
mov
cmpsb
pop
sub
mov
push
fnstenv
cld
cmpsl
repnz
sub
dec
out
loopne
jl
cwtl
negb
mov
push
inc
movsb
fcom
iret
popa
sbb
pop
add
mov
in
push
xchg
push
fsts
leave
leave
ret
sbb
das
inc
push
fwait
shll
aam
lret
test
pusha
leave
add
dec
mov
pop
rorb
cmp
rclb
sub
cmp
mov
push
insl
sbb
cmp
pop
xor
in
xchg
test
inc
imul
movsb
mov
mov
je
push
cwtl
lds
rol
test
jno
pusha
mov
jns
scas
call
mov
inc
dec
cltd
ds
leave
in
mov
inc
mov
daa
or
cmp
cmc
jp
mov
enter
bswap
test
lods
fsts
bnd
pop
or
aad
rclb
and
pop
fstps
jne
or
mov
cmpsl
shrl
sbb
xchg
ljmp
clc
xor
jmp
jnp
xchg
sub
fidivrs
inc
or
lcall
jne
inc
ja
pop
add
fnop
sub
cltd
testl
pop
pop
movsb
jns
leave
daa
repz
xor
fsubrl
aam
fldt
jno
cltd
cmp
jge
icebp
jbe
cltd
sub
xchg
lods
adc
add
shlb
and
mov
adc
push
lods
jns
sub
add
cmp
pop
mov
inc
jecxz
or
mov
orl
adc
cmpsl
sbb
or
insb
push
call
mov
enter
arpl
sbb
and
fdivrs
cmp
xor
adc
in
add
movsl
xchg
ret
in
push
popf
mov
mov
hlt
ljmp
mov
mov
xchg
addr16
add
jbe
aad
movsb
out
mov
pop
pusha
push
add
jne
xor
push
and
pushf
out
add
mov
sbb
jae
std
push
add
insl
loopne
pop
jne
loope
mov
das
xlat
les
mov
in
out
stos
test
fsub
xchg
mov
lret
ret
sbb
cwtl
int3
mov
cmp
dec
jae
loopne
mov
fwait
mov
sbb
test
jno
into
mov
pop
cmp
jmp
lock
popa
dec
and
test
outsl
push
adc
lds
xchg
scas
negb
fisubrl
out
jb
sbb
cmp
stos
dec
pusha
ss
punpckhbw
push
outsl
xchg
lret
pop
popa
iret
sub
sahf
and
sub
stos
push
jnp
xchg
inc
std
int3
cmp
sub
sahf
xchg
mov
das
inc
lods
dec
sub
stc
xchg
pop
and
scas
das
sahf
xchg
fisttpll
mov
test
lods
cwtl
sub
pop
idivl
int
les
xchg
pop
push
and
ss
adc
out
mov
popa
pusha
nop
cli
jmp
or
mov
fsubl
or
dec
leave
popf
push
jne
outsl
mov
test
roll
jno
inc
mov
fstpt
das
stc
mov
repz
out
xor
xchg
fbld
inc
lds
push
mov
sub
cmp
daa
fucom
lret
push
lock
jo
sbb
loopne
sbb
fdivrp
mov
dec
push
lock
dec
sbb
cmpl
sbb
sahf
dec
mov
scas
cld
pop
imul
push
xor
sti
xor
cmpsb
into
jnp
les
mov
mov
xchg
sbb
in
iret
xchg
and
insl
jl
cmp
sub
jbe
inc
fwait
imul
sub
out
lret
cmp
addb
movsb
inc
adc
inc
push
andl
add
push
pop
movsb
loopne
adc
jbe
loopne
xchg
cmpsb
idivb
inc
je
out
lret
or
pop
dec
mov
lret
add
not
xchg
inc
imul
jmp
sub
js
adc
pushf
xabort
add
push
push
subl
cmc
icebp
insl
jne
outsb
add
out
mov
stc
and
jno
jo
in
and
enter
push
aaa
popa
xchg
mov
lcall
cmp
jp
ja
shlb
out
es
das
test
mov
movsl
lods
jns
mov
mov
sarl
lret
ja
dec
pusha
mov
outsb
ds
mov
movsl
mov
pop
mov
into
ljmp
shrb
fisubl
std
out
movsb
jbe
pop
xorb
test
fidivrs
xor
xor
mov
cmp
adc
nop
mov
xchg
inc
cmc
std
cltd
push
scas
nop
out
les
lock
mov
push
cmc
cmc
and
xchg
sbb
pop
int
cmpsb
and
andb
loopne
iret
cmp
cmp
pop
ja
sti
outsl
sub
push
sub
ds
sbb
shrl
in
mov
cltd
lock
jl
jnp
int
cmp
add
sbbb
scas
std
inc
xchg
loopne
cld
mov
add
cmc
pusha
sbb
lock
xor
xorb
rorl
push
movsl
xor
sbb
mov
fdivl
hlt
subl
mov
les
psadbw
arpl
out
nop
jne
icebp
fldcw
adc
inc
cwtl
or
and
xchg
out
jle
popf
xlat
icebp
mov
or
aaa
out
cmp
or
mov
loop
xor
mov
sbb
jns
xchg
ss
das
sahf
les
clc
dec
or
imul
xchg
xor
std
addl
pop
pop
sarb
fsub
loopne
out
push
lcall
mov
inc
rcl
cmc
lods
push
ret
ficoml
repnz
fcmovne
rcrl
mull
xor
xchg
and
mov
call
push
inc
bound
and
lcall
xchg
pop
mov
ljmp
and
ds
aaa
adc
stos
and
jecxz
or
cmc
jl
or
mov
loop
inc
inc
mov
std
push
jb
negl
inc
lds
fwait
pop
jb
insl
cmc
pop
cwtl
divl
in
jno
movl
out
or
les
mov
mov
imul
mov
cli
in
mov
js
jmp
int
dec
inc
adc
xchg
test
test
shl
cld
adc
cli
mov
mov
fdivrp
loope
lea
repz
cltd
xor
mov
test
add
or
test
sbb
pop
rcr
das
lods
out
stos
xor
jp
sbb
adc
mov
mov
movsl
fdivrl
in
fbstp
mov
out
neg
push
cmp
and
test
pop
movsb
leavew
popf
fistpl
shr
sbb
xchg
sbbb
lods
jge
sub
hlt
xchg
mov
xchg
mov
mov
int
rcrb
imul
pop
sub
adc
xchg
inc
xchg
push
iret
cmp
and
shrb
push
xchg
inc
inc
xchg
jg
lret
sub
cs
adc
in
cmpb
push
shrb
dec
add
jbe
push
dec
cltd
aad
jbe
mov
cmp
inc
adc
dec
mov
pop
movsb
repz
fmull
and
sbb
or
gs
repnz
xorl
jg
subb
cwtl
les
clc
mov
cltd
pop
dec
lret
xchg
sbb
fwait
or
sti
and
mov
stos
cmp
lea
stc
mov
mov
lret
ja
jp
adcb
out
jbe
jne
jecxz
leave
sbb
inc
into
add
jae
xor
sahf
adc
loope
xor
lods
cli
cli
in
xchg
push
in
push
mov
pop
add
lcall
ja
cld
rolb
ret
fs
cmp
add
imul
fs
mov
mov
mov
sbb
inc
dec
jo
or
jg
mov
lods
lods
lods
or
loope
xor
imul
lock
lods
clc
hlt
lds
sbb
in
xor
sub
pop
sub
push
xlat
popf
outsb
cmp
mov
sub
jp
dec
enter
inc
in
push
pop
or
loop
and
cmpsb
push
loope
and
loopne
cmp
xor
lea
mov
and
mov
rolb
add
sarl
or
xor
inc
and
add
out
sub
lods
fsts
add
enter
aam
inc
lret
scas
dec
mov
add
push
shlb
stc
stos
cmpsl
jmp
ljmp
cwtl
xchg
fistpl
mov
lcall
loope
mov
aam
mov
jbe
add
cltd
rorb
fwait
sub
pop
push
icebp
and
jae
push
and
lods
cli
mov
push
lahf
orl
fnstsw
sbb
mov
aas
and
lock
adc
ret
and
mov
rorb
clc
sub
cs
std
jo
xor
cmp
out
shlb
es
mov
dec
mov
mov
dec
adc
jb
idivl
test
clc
rcl
lahf
popl
scas
roll
pop
pop
xchg
fists
push
shl
loope
fchs
call
adc
rol
or
int
scas
mov
mov
xor
out
inc
imul
inc
cld
dec
insl
fdivrp
sbb
lods
adc
fsubr
mov
adc
and
ss
push
lret
adc
les
adc
or
aas
mov
test
and
shl
mov
pop
dec
negb
fs
int3
sub
jmp
cs
cmp
and
add
add
daa
subw
fcomps
addr16
adc
js
adc
test
les
ret
out
lcall
aad
push
push
sub
xorl
or
cs
jle
shll
mov
cwtl
cmp
sbb
lods
mov
je
inc
inc
push
lret
jns
mov
out
sbb
cltd
fstpl
cmp
adc
dec
push
sti
ja
pop
push
repz
sbb
pop
int
inc
lcall
cmp
ficompl
shll
sub
mov
adc
loopne
sub
insb
cmp
mov
jno
push
mov
jb
dec
pop
cmp
mov
test
add
int
lods
mov
cmp
sbb
push
outsl
dec
or
jle
jp
push
xor
mov
add
das
insb
xchg
adc
or
xchg
data16
filds
out
cmp
inc
sbb
sbb
ret
test
pop
add
mov
sar
jo
mov
not
xchg
ret
loopne
call
pushf
xchg
ds
mov
pop
push
mov
out
jp
or
mov
aas
addps
daa
testl
mov
movsl
addr16
leave
inc
cmpsl
es
xchg
inc
pop
mov
test
or
sub
xor
pop
mov
es
outsb
mov
add
loope
and
or
jp
push
xor
lret
jne
fs
push
jle
jge
loope
ficoms
mov
jge
mov
xchg
dec
sarb
imul
mov
adc
sub
push
or
outsl
popf
jns
ret
mov
and
dec
sbb
out
std
dec
das
in
and
push
sub
stc
ret
in
or
jg
xchg
cwtl
ja
jne,pn
mov
jg
push
dec
mov
push
lock
in
loopne
cmpsb
fcoml
rcr
cmp
outsl
popa
scas
mov
push
jp
sti
insl
inc
pop
nop
ja
push
loopne
scas
dec
rorl
aaa
dec
sti
lsl
in
pop
xorl
insl
sbb
test
in
gs
or
pop
shrb
stos
aam
jb
mov
mov
pop
sbb
ss
or
mov
loope
add
sub
out
mov
cld
or
xchg
jmp
mov
movsb
pop
ds
loop
and
jmp
popf
inc
add
inc
popa
in
or
outsl
add
dec
sub
dec
pop
push
cmp
ja
outsl
insl
lods
dec
out
mov
mov
push
jb
jb
les
iret
out
jno
cmc
pop
jae
adc
pop
loope
xchg
adc
sbb
lahf
inc
mov
fcomps
or
outsb
movb
fsubrl
add
loopne
stos
sbb
push
push
mov
xchg
lret
dec
leave
scas
mov
cmp
push
xor
inc
fwait
jg
nop
pop
mov
and
dec
xor
dec
sub
xchg
mov
or
scas
inc
xor
icebp
cmp
jmp
cmp
mov
js
pop
xchg
dec
inc
sbb
and
outsl
add
sarl
and
ds
xlat
sub
push
sbb
mov
adc
rclb
in
mov
add
stc
xchg
add
mov
aam
sub
shll
outsb
sbb
enter
test
xor
sub
jo
jge
push
jne
jge
mov
mov
xor
dec
mov
gs
mov
push
push
adc
lock
inc
insb
xchg
mov
pop
or
test
mov
les
mov
xchg
imul
int3
pop
jno
js
in
jbe
sbb
push
jmp
and
lods
or
cs
rcrl
lcall
mov
dec
fidivl
fistpll
push
ja
addr16
jnp
fcmovbe
inc
imul
sbb
dec
mov
xchg
mov
and
lods
xor
and
adc
lods
test
mov
lea
fnstsw
push
add
je
aad
inc
lret
inc
ret
xor
xchg
pop
arpl
mov
inc
mov
jbe
test
in
out
pop
lods
lds
lods
pop
in
scas
jecxz
push
xor
pop
mov
cmp
arpl
inc
push
mov
pop
out
fwait
pop
add
ficomps
dec
pop
setnp
insb
fists
mov
popa
addr16
adcb
adcb
stc
idivb
inc
cmpsb
shll
pop
pop
jl
les
mov
cmp
dec
sbb
push
sbb
or
int3
inc
mov
adc
mov
shrl
cmpsl
mov
into
movsl
or
sub
test
jp
pop
aas
aas
jns
dec
leave
out
push
pop
push
mov
fs
cmp
dec
insb
ret
or
pop
hlt
jp
inc
or
fs
sub
lahf
std
icebp
push
fs
mov
lahf
jae
mov
mov
xchg
push
push
sub
insb
sbb
pop
lods
add
sbb
cwtl
jmp
imul
mov
daa
out
cmp
stos
mov
add
jns
test
ds
push
push
pushf
sub
xchg
mov
dec
in
dec
dec
outsb
out
pop
arpl
pushf
test
lea
xchg
add
fsubrl
repz
or
dec
inc
dec
mov
pop
lods
fnstsw
clc
jp
scas
neg
shll
add
mov
pop
lods
movsb
nop
je
ljmp
scas
add
mov
addr16
fs
aas
cmpsl
add
mov
stos
cld
xchg
pop
jle
push
daa
negb
dec
mov
mov
or
ret
sbb
ret
fcmovnb
adc
push
ret
repz
bound
sahf
jmp
mov
mov
ja
lcall
push
pop
int3
mov
or
pop
jmp
icebp
xor
cmpsb
inc
ljmp
shll
adc
jp
pop
push
sbb
stc
ficoml
movsl
mov
scas
lds
mov
mov
stos
enter
pop
jle
mov
das
notb
mov
sarb
jmp
int3
mov
popf
in
sub
and
add
in
add
pop
jmp
and
mov
inc
out
xchg
mov
flds
mov
jmp
xchg
ja
inc
sub
rorl
hlt
or
flds
mov
xchg
icebp
dec
xor
fs
outsb
mov
imulb
call
sbb
inc
pusha
test
call
push
stos
je
adc
icebp
sbb
bound
push
outsl
mov
cwtl
jecxz
dec
dec
idivl
adc
icebp
jno
cld
outsb
mov
in
jb
call
push
push
cmpl
out
sti
pop
sbbb
mov
fwait
cmp
sbbl
std
cs
push
mov
adc
cmp
push
test
jg
push
sub
lret
pop
imul
pop
push
pop
or
jb
sbb
fsubrs
inc
pop
xchg
adc
addr16
xchg
call
repz
in
lea
call
iret
fisubrs
sbb
test
xor
loope
push
shrb
add
idiv
mov
lret
inc
fsubrp
xor
xchg
xchg
jg
jge
xchg
and
mov
pusha
mov
mov
ret
xchg
test
cmpsl
test
cwtl
mov
fidivrl
lret
mov
lock
rcl
fisubs
fiaddl
jae
add
mov
fwait
test
lods
ljmp
and
xchg
cwtl
or
pop
sbb
lods
and
ljmp
incb
loop
xchg
pop
or
pop
sub
into
add
push
adc
call
mov
sbb
push
out
rcrb
cmp
and
jmp
lds
jp
inc
repz
dec
mov
popa
pop
or
and
sbb
inc
mov
push
fsubs
push
mov
sub
ja
push
adc
mov
shll
stos
aad
out
or
lret
push
out
mov
out
fs
aad
loopne
cltd
and
pop
inc
dec
add
es
shll
mov
jnp
out
jecxz
inc
or
notb
xor
call
jbe
daa
mov
push
jb
xor
lcall
fbld
data16
xor
aad
in
imul
jg
insl
push
icebp
movsl
test
sub
jae
fisttpll
vmovsldup
push
call
into
fidivrl
mov
stos
pop
fucomip
mov
icebp
mov
sahf
cld
imul
arpl
popa
fdivl
rorl
addr16
pop
adc
ret
mov
adc
fistpll
sbb
jo
lcall
imul
sub
pop
push
push
out
mov
mov
inc
push
adc
mov
xchg
rcll
dec
int
inc
mov
loop
lret
xchg
out
sbb
std
inc
cmp
repz
dec
lds
cwtl
dec
push
sbb
sub
push
add
xor
push
inc
cmp
in
jns
cmp
sub
ret
stc
sbb
scas
sahf
inc
add
adc
sub
jg
mov
cltd
clc
test
mov
iret
das
mov
call
loope
lods
std
out
push
pop
cmp
fcmovb
sarl
and
jnp
mov
xchg
jae
mov
add
inc
and
stos
pop
cwtl
inc
fcompl
popa
or
test
test
push
mov
lods
xor
bnd
pop
jmp
xchg
inc
scas
mov
lahf
mov
pusha
push
rorl
mov
outsl
das
fstps
mov
popf
cmp
int3
jne
shrb
cmp
sbb
xchg
jmp
inc
push
xchg
push
sbb
xchg
mov
mov
inc
mov
mov
mov
xchg
std
jmp
es
mov
lretw
adc
outsb
xchg
mov
pop
repnz
dec
rclb
xor
outsl
fldl
mov
stos
iret
xor
push
dec
sub
scas
sub
leave
lods
fwait
add
mov
push
mov
jno
sbb
popa
push
add
or
xchg
mov
jnp
movsb
cltd
inc
call
cltd
out
mov
pusha
or
xchg
push
or
subl
test
in
or
insb
nop
lea
in
mov
jnp
pminub
mov
fcomps
xlat
out
mov
fcmovbe
add
pusha
xchg
add
jns
cmc
cmp
mov
cmp
stos
mov
mov
cltd
jb
testl
hlt
mov
cld
je
jl
shlb
cmp
fmul
andb
sub
and
push
mov
rcrl
aas
mov
dec
sahf
fildl
inc
es
sahf
or
or
movsb
leave
or
sarl
cmc
fistps
adc
mov
jnp
pop
mov
sbb
jle
mov
inc
into
cmc
or
sarb
push
push
sub
imul
scas
aaa
jge
or
mov
mov
jmp
enter
mov
mov
xchg
ret
cs
and
rcrl
fwait
ljmp
lcall
mov
xchg
sbb
cmp
fidivs
mov
ds
rorb
and
xor
pushf
jnp
out
cltd
xchg
or
sahf
cwtl
scas
add
popa
adc
pop
mov
fwait
stc
and
pop
lcall
inc
lea
fstpt
adc
inc
xorb
in
push
std
in
xchg
mov
lcall
pop
or
inc
in
mov
pop
decb
pop
and
ret
mov
mov
ds
repnz
repnz
adc
sbb
lock
push
in
ret
sbb
xlat
movsb
nop
aam
jns
mov
ljmp
shr
scas
mov
push
xchg
testb
xchg
xchg
sbb
leave
insl
fwait
scas
cld
stc
imul
fidivrs
mov
mov
daa
into
loop
loopne
mov
ret
dec
pop
dec
dec
int3
lds
insl
push
gs
xor
lahf
push
and
movsl
das
aam
loopne
sbb
notl
fildl
mov
scas
jo
roll
mov
ja
mov
fdiv
sbb
jp
sub
add
lahf
ret
fsub
outsl
and
imul
or
movsb
pop
lds
sub
lods
dec
pop
pop
out
and
xchg
clc
mov
inc
nop
push
dec
std
popa
mov
pop
int3
icebp
push
inc
jb
out
fisubrs
push
adc
add
xchg
push
sub
and
test
push
bound
in
scas
sub
mov
aaa
das
aas
xchg
pop
dec
insb
je
push
xor
pop
or
rorl
jp,pn
leave
sub
xchg
fimull
inc
in
pop
sbb
mov
push
sub
xchg
lods
insl
sub
sahf
mov
ret
mov
push
rorb
push
cs
sarl
mov
dec
xchg
jp
xchg
mov
movsb
cmc
mov
ljmp
lcall
mov
rcll
bound
xor
xor
jb
jge
sbb
sub
imul
lret
dec
aad
fdivr
dec
insb
popa
sub
xchg
insl
ds
xchg
cmp
jecxz
push
push
pusha
in
js
mov
and
push
lods
add
sbb
sub
jmp
aaa
xor
hlt
fisubs
out
xchg
orl
js
push
push
les
pop
stos
call
out
pop
decb
or
icebp
adc
push
out
call
sbb
mov
or
sbb
adc
out
push
pop
movsl
mov
or
xchg
pop
add
idivb
xchg
outsl
mov
fbstp
mov
loop
stc
mov
mov
lret
inc
iret
mov
dec
pop
inc
cmc
out
inc
sub
mov
std
sbb
int3
xchg
ss
mov
inc
sbb
imul
dec
mov
xor
sbb
mov
pop
cmp
shl
fwait
inc
shlb
int
mov
xor
stos
mov
dec
mov
mov
adc
xor
rol
mov
fstl
jns
in
outsb
mov
movsb
shl
jb
sub
sbb
add
or
dec
lahf
jnp
testb
jae
inc
outsb
push
mov
dec
addb
and
push
loope
inc
arpl
ss
in
ficomps
ret
sub
inc
shrb
pop
imul
inc
sahf
pop
call
in
jae
insb
fmuls
sub
das
repz
rorb
cmc
inc
lahf
sbbb
xlat
lds
and
jl
ja
xchg
mov
inc
mov
arpl
jnp
imul
dec
push
lds
pop
movsl
int
jo
je
into
mov
out
jle
xchg
dec
sbb
std
lock
lods
mov
mov
or
cmpsl
mov
xchg
cmp
dec
fiaddl
mov
repnz
into
or
lods
xchg
mov
pop
into
add
inc
mov
and
lods
jno
pop
hlt
pusha
mov
add
loop
into
pop
cli
push
and
pop
pop
add
jno
add
jb
xor
and
in
fldenv
aad
push
fld
xchg
dec
add
inc
fwait
xor
fdivrs
add
gs
xchg
mov
scas
adc
xchg
test
or
lcall
pop
leave
mov
or
mov
in
pop
mov
add
pop
dec
sub
int3
push
pop
push
push
outsl
sbb
mov
or
jg
push
out
mov
or
xchg
test
pop
inc
mov
pop
jl
pushf
mov
andb
or
addr16
jnp
cld
dec
add
fidivrs
enter
inc
mov
daa
cmp
fistpl
xor
into
mov
mov
dec
test
cs
ficomps
int3
xorb
out
mov
arpl
pusha
aam
ret
popf
inc
decl
mov
add
insl
dec
icebp
dec
and
jo
or
orl
insl
ja
adc
dec
sahf
add
mov
jbe
xchg
stc
shrl
inc
adc
adc
mov
lahf
xchg
add
pcmpgtd
cmp
mov
mov
das
in
mov
sub
jge
push
dec
push
cmp
movsl
movsb
mov
push
cmp
xor
mov
lods
push
sbb
sbb
and
sub
and
imul
fs
inc
sbb
dec
adc
into
push
lods
sbb
fists
es
push
sti
xchg
iret
add
jnp
in
inc
push
adc
sub
fisubl
sbb
std
sti
in
cmc
leave
mov
add
lret
cmpsb
subl
enter
arpl
cmpsb
sub
mov
mov
lea
push
pushf
cmpsb
and
push
lock
ret
xor
repz
mov
xchg
or
xchg
dec
daa
lahf
je
add
mov
imul
inc
pusha
aaa
stc
daa
test
jns
xchg
sbb
icebp
orl
adc
and
push
mov
hlt
mov
jbe
arpl
lret
sarl
lcall
mov
sub
in
mov
inc
pop
mov
and
mov
cmp
sti
fmull
fstl
out
test
sub
jle
xor
sbb
xchg
sahf
pushf
sbb
xchg
cmp
mov
cmp
pop
pop
or
cmp
adc
cmp
add
pop
jmp
xchg
lods
dec
sarb
pop
call
and
dec
push
jge
subl
adc
jbe
push
add
and
mov
jmp
mov
pop
mov
aad
in
daa
lcall
lcall
repz
lret
xchg
scas
push
shl
or
push
repz
xlat
cltd
adcl
jo
push
jp
movsb
push
dec
adc
imulb
mov
js
rcrb
stos
push
aaa
pop
mov
repnz
loop
loope
lret
mov
add
push
inc
sub
cmc
lcall
sbb
popf
pusha
cmp
pop
mov
pop
leave
jbe
xchg
sbb
filds
jo
push
imul
mov
push
jne
push
xchg
dec
jg
testl
subl
lds
adc
mov
rorb
cld
addr16
insb
jno
xor
sbb
push
fcomi
mov
shll
adc
decl
cmp
fbstp
and
jns
xor
sbb
sbb
and
xor
jnp
out
push
and
mov
add
mov
jae
dec
pop
push
mov
scas
gs
popf
fildll
js
aad
fdivl
int3
out
add
sahf
mov
out
xor
iret
mov
pop
jmp
test
fists
scas
adc
cmpsl
push
imul
repz
mov
inc
mov
dec
movsb
push
xor
mov
and
rcrb
mov
inc
cs
adc
fwait
jo
bound
lods
sub
sti
flds
and
in
aaa
das
mov
cmp
js
popa
dec
xchg
and
inc
clc
dec
ss
add
outsl
stos
imul
cmp
mov
or
dec
rclb
mov
rcrb
push
iret
adc
lods
testl
add
cs
aam
data16
push
or
adc
add
pop
sbb
add
fcomps
mov
std
enter
jno
jae
xchg
inc
push
lock
mov
jge
jp
leave
orb
sub
add
test
mov
mov
dec
xor
jmp
and
cltd
test
jns
xor
out
jge
in
cld
dec
xchg
xlat
lahf
in
mov
je
mov
jne
roll
aaa
adc
pop
or
inc
cmc
jo
push
inc
fcoms
add
xchg
or
rorl
ss
mov
xchg
bound
dec
decb
inc
inc
mov
sub
fnsave
jb
xchg
or
jmp
gs
sub
dec
xchg
rcrl
sar
xor
xor
sahf
jns
mov
add
rcrb
inc
ficomps
je
lahf
out
rcl
inc
les
out
pop
xor
fnstenv
not
jbe
and
pop
sbb
add
sub
push
jne
std
or
push
cmpb
jne
mov
hlt
mov
mov
and
lcall
and
pavgw
in
imul
repnz
xchg
fsubrl
pop
test
cmovg
dec
ftst
daa
jno
jnp
aaa
jmp
pop
jl
inc
jae
push
sti
cmp
lret
push
dec
js
rcrl
cmp
cmp
in
pop
xchg
das
repz
push
fs
push
out
and
lds
imul
sub
sbb
add
mov
cmp
jno
inc
push
xchg
dec
inc
lods
call
fdiv
imul
imul
pop
cli
pop
push
add
rcll
xchg
out
popa
nop
sub
pop
icebp
mov
addl
jnp
cmp
push
repnz
mov
in
jmp
mov
into
fsub
cld
cmp
test
insl
test
cmpsl
lcall
dec
ficomps
or
pop
int
lret
xchg
setbe
sub
pushf
popa
mov
ss
or
and
iret
vunpcklpd
hlt
jmp
xchg
push
inc
ljmp
jo
jbe
push
insl
mov
xor
push
and
orb
int3
adc
or
int
ftst
test
sub
adc
pop
les
sarl
shlb
inc
mov
les
mov
dec
jno
add
ret
cltd
leave
int3
scas
lods
fldt
cmp
jecxz
fldcw
pop
inc
add
dec
pop
dec
aam
jne
imul
enter
repz
jg
and
push
test
push
push
dec
xchg
inc
aas
daa
jmp
je
incb
aad
iret
je
jnp
push
fmulp
std
or
loop
mov
inc
fiaddl
fiadds
mov
movsb
push
andl
lcall
mov
aam
xor
sub
jecxz
xchg
popa
dec
divl
mov
sub
out
stc
pushf
or
gs
add
add
mov
jne
push
fwait
jmp
cli
cwtl
adc
sub
xor
adc
inc
das
std
cmpsl
jge
cmp
ret
push
push
outsb
mov
insb
sub
faddp
mov
and
addr16
outsl
popf
ret
adc
shrl
push
dec
int
lea
movsb
push
mov
rclb
adc
aas
inc
arpl
mov
mov
mov
jg
aad
jge
shrb
aad
sbbl
and
loopne
out
sbb
mov
jle
cmpsl
hlt
mov
arpl
xchg
cmp
xor
lret
inc
or
in
push
cld
push
add
xchg
lods
push
popf
jl
adc
mov
std
test
sbb
test
negl
lds
jne
hlt
mov
in
jp
clc
ret
xbegin
pop
daa
outsb
out
mov
dec
xor
mov
outsl
shr
or
jecxz
sti
gs
addr16
cmp
loop
orb
test
sub
pop
les
cmp
push
xor
fnsave
mov
push
cmpsb
dec
insb
jns
ja
lahf
push
xchg
adc
mov
mov
mov
mov
pop
cmpsb
movsl
les
cli
jp
stos
xchg
and
jne
stos
imul
stc
out
pop
mov
hlt
xchg
xchg
mov
push
in
cmp
xchg
call
leave
and
xchg
js
sub
mov
cmp
loop
sub
inc
push
outsl
adc
push
scas
sbb
xor
push
arpl
das
mov
and
cmp
push
sub
add
add
and
loopne
jb
inc
testl
lret
testb
add
mov
xchg
imul
jnp
popa
lods
stos
and
sbb
not
rcll
movsb
xlat
jno
mov
lds
aad
outsb
lock
es
pop
mov
dec
xchg
fcmovu
cmpb
xor
xor
scas
pop
fildll
add
ret
cmp
and
jle
repz
test
push
repz
daa
dec
insb
dec
pushf
sub
jp
sub
cmpsb
cmp
pop
int3
xor
mov
adc
sbb
mov
test
add
setne
icebp
mov
lcall
xor
xor
int3
sub
lcall
jp
movsb
repnz
inc
fwait
addr16
shl
ds
dec
lret
or
cmp
lret
dec
push
addr16
addr16
bound
mov
sahf
bound
orb
loop
aam
add
mov
push
mov
xchg
test
jo
gs
mov
push
cmpsb
mov
repnz
loopne
jo
data16
rorb
adc
pop
fidivrs
cli
addr16
shlb
sbb
mov
mov
stos
lock
or
jg
inc
sub
dec
int
test
repnz
aaa
imul
or
aas
cmp
repz
pop
cmovbe
jns
mov
imulb
push
lcall
mov
js
divb
dec
loopne
loop
mov
cmp
inc
mov
jecxz
popl
aad
push
xor
cmp
pop
pop
stos
jb
cmpsl
daa
sub
adc
pop
mov
aam
xchg
push
mov
stos
aad
pop
mov
fwait
xchg
dec
lcall
icebp
cmp
jno
rorl
movsl
pop
mov
shll
push
mov
push
ret
inc
sbb
lret
movb
fsubl
clc
push
out
pop
hlt
inc
sbb
in
pop
adc
jle
sub
es
mov
and
shll
loopne
fdivrl
test
xchg
jge
jl
movsl
jmp
repnz
pop
xor
adc
lcall
lret
loopne
test
shll
cld
loope
imul
cmp
ret
add
mov
push
in
repz
cltd
cmp
std
sbb
dec
pop
aaa
jp
cmp
cld
dec
cld
aad
add
add
mov
outsl
mov
out
dec
mov
lea
les
pop
into
mov
sbb
inc
dec
fsubl
sbb
sti
add
cmp
lret
pop
ret
push
movb
lods
mov
adc
mov
xor
lahf
pop
sub
arpl
arpl
adc
mov
xor
jecxz
jmp
mov
div
out
jl
cld
into
movsl
mov
pop
testb
or
cwtl
lcall
jne
call
sahf
lret
xchg
push
add
sbb
cmp
pop
in
data16
add
out
inc
xchg
pop
adc
lds
and
aad
xchg
sub
nop
movsl
or
sub
loop
ss
aam
push
jmp
ret
xchg
enter
cmp
pop
dec
ret
add
push
mov
cwtl
sub
inc
out
or
mov
shr
fcom
mov
in
repnz
adc
js
sbb
or
or
loop
fiadds
push
mov
incb
or
sbb
mov
inc
inc
in
mov
inc
test
inc
inc
or
or
mov
jns
jp
adcb
lret
std
cmp
out
add
cmpsb
xchg
push
pop
dec
add
jae
xor
and
in
xchg
ror
mov
jb
outsb
movsb
scas
push
jle
mov
idiv
insl
mov
sbb
dec
pop
cmpl
jmp
popa
xor
push
dec
popf
lahf
scas
sbb
or
inc
pop
push
or
lea
lock
pop
sub
call
sbb
mov
pop
fimuls
gs
push
rcr
jbe
test
iret
cmpsl
je
sub
sbb
xchg
iret
sar
mov
repnz
jo
lods
mov
dec
ret
cmp
cli
xlat
lcall
test
dec
rclb
insl
xchg
nop
sbb
cs
xchg
cmp
dec
fisttps
or
dec
out
cmpsl
push
pusha
test
dec
aaa
movsb
or
popa
xor
xchg
outsl
adc
or
sbb
mov
cld
sub
or
test
xor
or
lcall
jno
add
inc
in
cmpsb
les
pop
lret
xchg
dec
aam
sbb
addr16
jo
cmp
mov
mov
xor
loope
cld
jno
xor
push
xor
inc
xchg
xor
je
push
sti
cmp
sbb
leave
icebp
cmp
push
and
mov
jno
cmp
fdivrs
xchg
mov
ja
popf
fstps
fsubl
xchg
cmp
push
pop
dec
sar
mov
mov
mov
push
jne
dec
pop
pop
repz
mov
sarb
outsb
sti
dec
js
fistl
push
add
jns
mov
inc
stos
add
idivb
gs
or
ret
xor
sbb
js
pusha
jo
repz
mov
cli
or
cli
std
jge
xchg
outsl
jg
cli
in
call
sbb
popa
arpl
stos
cs
mov
test
lret
repnz
sbb
lcall
push
and
stos
inc
push
mov
cmpsb
fwait
xlat
dec
mov
pop
mov
add
sbb
into
imul
pop
sub
fdivr
mov
push
shl
stos
outsb
cmp
addr16
movsl
pop
out
jns
cltd
test
or
mov
arpl
sbb
into
mov
dec
inc
cltd
lcall
adc
mov
ja
enter
or
sub
pop
mov
icebp
hlt
inc
jo,pn
push
cld
ret
shrl
dec
loopne
pop
popf
inc
push
sub
jmp
out
fs
or
sub
ds
mov
lret
pop
inc
scas
mov
or
sahf
inc
imul
sbb
jmp
push
test
jp
cmpsb
sbb
inc
pop
cmp
ds
mov
sbb
push
sbb
push
outsb
cmp
jle
jns
or
pop
mov
into
push
xlat
xchg
imul
movsb
fildl
in
cwtl
inc
fadd
mov
mov
push
sbb
es
dec
repnz
pop
push
in
jne
and
inc
jbe
xchg
inc
or
mov
mov
call
mov
xor
xchg
mov
jg
lea
push
sahf
out
stos
cs
das
inc
es
pop
pop
rorb
in
in
inc
mov
sbb
sub
or
outsb
sbb
sub
pusha
insl
lahf
cs
iret
in
add
and
movsb
pop
adc
rcrl
loop
and
jg
sbb
inc
jge
iret
push
dec
cmp
mov
adc
mov
xchg
adc
inc
sub
inc
bound
xchg
mov
gs
mov
shr
push
or
das
movsl
mov
push
add
push
movsl
jp
nop
adc
lods
arpl
xlat
aas
shlb
sbb
cwtl
ljmp
leave
mov
stos
ss
jmp
out
cmpsb
repnz
mov
adc
lods
and
je
jmp
scas
pushf
pop
scas
outsl
gs
nop
xor
adc
mov
pop
hlt
outsl
in
add
int
incl
jmp
imul
js
or
sub
andl
cmp
add
xchg
pop
and
jbe
cld
aad
add
shlb
lret
or
adc
xor
fadd
jmp
push
inc
xor
xlat
sti
jo
mov
aad
jge
jmp
rol
or
imulb
mov
cmpsl
out
mov
fwait
cltd
int
pusha
ja
gs
jle
push
lahf
push
ja
xor
call
or
mov
notb
sbb
adc
test
jae
arpl
fmull
jbe
mov
mov
xchg
leave
addb
mov
rcrl
popa
aad
inc
cmpsl
adcb
sbb
pop
xor
cld
pop
ss
mov
aaa
jns
lock
jae
je
xchg
jle
je
int
loop
xchg
gs
ret
cmp
cli
dec
js
outsb
lret
pop
and
xchg
cmp
mov
xlat
out
clc
cltd
imul
dec
sub
lahf
aad
call
sub
push
stc
inc
arpl
cmc
loop
inc
ret
in
jae
std
hlt
pop
add
adc
push
sbb
dec
push
pop
mov
fdivrs
js
push
icebp
xchg
movl
cmp
or
xlat
push
push
mov
shlb
outsb
lcall
pop
push
pop
cmc
and
mov
xor
push
cmp
aas
leave
sahf
mov
in
xlat
inc
mov
pop
adc
imul
movsl
icebp
mull
shufps
dec
test
sub
outsb
stos
mov
add
movsb
cmp
jae
push
out
aas
jno
adc
inc
imul
cmpb
xor
into
popa
aad
pop
data16
lods
lcall
mov
ds
lret
sub
scas
inc
mov
mov
push
inc
xor
movsl
mov
mov
das
push
pop
dec
test
mov
and
into
repnz
sbb
fdivrl
push
gs
jns
into
push
push
mov
ljmp
scas
in
lea
xchg
in
and
stos
outsb
sub
push
mov
mov
add
negl
aas
lret
push
addb
cmc
push
mov
mov
or
inc
mov
mov
js
outsl
sbb
mov
cmp
cmpsl
aaa
js
into
and
xchg
jo
add
mov
insb
mov
movsl
mov
adc
sub
inc
mov
xchg
jle
dec
xor
int3
je
ds
sbb
mov
js
fsts
popa
jnp
jb
repz
push
sbb
outsl
sbb
mov
add
jnp
lea
dec
pop
mov
jl
inc
push
sub
push
in
push
jl
sbb
es
pop
xchg
cmp
pop
xchg
aaa
or
lahf
jne
xor
dec
inc
cmpsl
or
mov
or
add
inc
xor
scas
fs
cli
cs
ja
sub
int
dec
movsb
lods
frstor
jo
cmpsb
fcoms
je
test
push
add
xor
push
pop
pop
jg
mov
mov
push
sub
inc
xor
int
add
mov
cmp
jnp
adc
mov
test
lcall
int3
addl
and
hlt
jno
test
std
rolb
iret
inc
fs
xchg
int
push
ret
pop
adc
xor
inc
jmp
inc
sarb
dec
fisubrs
pop
popf
shl
jge
adc
xor
pop
cmpsb
inc
jae
and
bswap
mov
dec
pop
mov
out
mov
add
xor
jle
clc
in
and
adc
pop
dec
pop
rcl
aam
lods
cmc
and
mov
mov
hlt
movsl
mov
add
cwtl
xchg
or
aad
mov
inc
sbbb
lods
cmp
jle
jmp
test
les
dec
jl
jecxz
jle
clc
fdivrs
adc
cmc
outsl
dec
sub
push
leave
pop
lret
je
pop
js
cmc
or
xchg
fmuls
lret
lock
pop
into
lods
aam
icebp
shr
in
and
and
sub
shll
scas
pop
inc
add
mov
cltd
adc
and
sub
das
sub
pop
cmpsl
sarb
mov
jae
cmp
sbbl
std
push
dec
movsb
neg
outsl
sbb
push
sbb
lcall
ret
jmp
call
push
cmpl
add
cld
jbe
ret
mov
adc
dec
and
int3
ljmp
lea
roll
int
xchg
pop
mov
in
push
mov
xor
push
xor
sbb
ljmp
lcall
sarb
fs
shl
pop
pop
cmpsl
jecxz
jno
mov
stos
mov
sbb
nop
out
pop
cld
hlt
push
scas
mov
push
jne
in
lahf
dec
data16
xchg
addb
adcb
data16
cmp
rclb
and
cmp
into
clc
cmc
test
call
inc
inc
leave
add
fistpll
mov
mov
mov
aad
repnz
scas
inc
mov
pop
out
cmp
test
sub
adc
loopne
cltd
dec
orl
mov
fucomi
popa
fs
ror
sti
sbb
inc
gs
das
sti
mov
bound
jns
mov
call
lret
pop
loop
xchg
adc
wrmsr
jnp
pop
inc
ret
fidivl
mov
sahf
lahf
jnp
mov
inc
lods
aam
sahf
sub
je
mov
dec
andb
cmp
leave
ret
cmpsl
cmp
pop
sbb
push
ljmp
sbb
jge
xor
dec
popa
arpl
enter
pop
mov
inc
cmp
push
cmp
stos
lret
lds
hlt
sbb
in
movsl
in
mov
adc
dec
stos
xor
mov
lock
pop
iret
icebp
out
pop
sbb
mov
out
lcall
pop
cmpsl
jo
lea
xchg
ret
pop
pop
adc
sbb
mov
arpl
mov
sub
add
outsl
adc
mov
inc
inc
mov
outsb
xchg
ret
inc
mov
into
jmp
pop
or
movsl
xlat
iret
jge
mov
push
imul
xchg
dec
jae
mov
jecxz
scas
cmp
and
fwait
clc
outsb
int
mov
arpl
out
ljmp
or
scas
or
sub
mov
mov
or
sub
cli
and
jg
jbe
jno
adc
mov
cmc
das
out
mov
sub
aas
sub
dec
fmull
cmp
xlat
inc
sub
jl
cltd
iret
daa
rcll
ret
pusha
pand
out
mov
and
pusha
push
cmp
push
nop
int
and
xlat
xchg
cmp
fsts
mov
and
adc
add
and
mov
out
push
sbb
idiv
xor
mov
pop
fwait
mov
lahf
adc
stos
dec
leave
movsl
outsb
xor
cmp
icebp
bound
dec
movl
fstpt
loope
pop
cmpsl
insl
xor
iret
sbb
mov
in
cmc
mov
add
jne
cmp
jl
add
pop
fildl
add
out
sbb
pop
fstps
sbb
sbb
and
in
and
mov
mov
int
insl
les
xchg
test
aas
push
or
fnstcw
lcall
pop
sahf
popa
sbb
das
arpl
out
lahf
popf
cmc
daa
or
jecxz
and
addr16
int3
and
lret
sarl
adcb
loopne
xorl
mov
fstpt
pop
mov
mov
xchg
inc
ror
xor
adc
fcoml
int
lds
test
lods
add
jg
add
adc
lea
movsb
cmc
xor
into
or
out
mov
sti
cmp
and
ret
iret
jnp
or
sub
mull
dec
push
enter
fisubl
sub
std
das
nop
push
andl
jge
js
xor
loopne
mov
enter
cmpsl
sub
push
nop
imul
jp
or
inc
insl
add
inc
lds
jo
flds
enter
imul
cmp
mov
add
test
out
js
inc
enter
mov
sahf
pop
or
adc
and
jg
jle
leave
daa
lcall
sbb
xchg
cmpsb
sti
aad
std
sub
and
cs
mov
sub
jmp
mov
adc
in
fnstcw
jge
scas
iret
iret
jae
inc
sub
push
pop
mov
xor
rclb
data16
xor
ret
in
int
inc
in
loope
xor
aam
aad
test
xchg
pop
cmp
pop
andb
stos
xor
mov
adc
push
test
popa
cmp
sbb
std
sub
roll
mov
mov
lcall
dec
fs
cmc
sar
xor
inc
mov
dec
mov
lods
outsl
xlat
fmulp
push
lock
into
cmpsb
cmp
imul
sub
shlb
popf
in
jge
xor
imul
xchg
sub
cmp
add
subl
ret
dec
jle
nop
lahf
dec
out
pop
scas
vpsubq
test
nop
insl
jecxz
cld
daa
fsts
fldt
rclb
in
sub
movsl
insb
push
mov
hlt
aad
pop
rcl
pusha
inc
insl
xor
jno
idivl
inc
mov
cmp
aas
mov
xchg
test
orb
inc
sub
negb
jno
test
mov
int3
xor
or
stc
or
push
jg
dec
repz
in
jnp
mov
aam
jp
pop
movsb
and
jae
jnp
ja
push
dec
mov
les
push
push
jb
cmp
push
cwtl
loop
push
inc
inc
jbe
sub
sbb
push
fdivrl
icebp
imul
cltd
or
jge
clc
rol
dec
into
jle
cs
cmp
sbb
sbb
mov
mov
sbb
out
or
in
fstpt
pop
fadds
popf
pop
test
mov
inc
in
jp
mov
lret
dec
jle
xchg
jb
xor
add
sub
test
rcrb
cs
lds
hlt
fs
dec
cs
cmp
cmp
sbb
hlt
pop
addl
xchg
and
repnz
dec
sbb
cmpsl
jle,pn
sarb
and
imul
pop
ret
je,pt
mov
loop
mov
dec
and
int
dec
push
dec
dec
ljmp
dec
mov
int3
sbb
aas
mov
xor
mov
fidivrl
stos
std
sahf
pop
mov
inc
mov
mov
push
repnz
mov
xchg
mov
daa
lcall
stos
stos
stc
in
roll
bnd
cmp
mov
pusha
std
xchg
adc
cmp
push
mov
jo
sub
call
push
scas
insl
mov
ror
mov
xor
sub
lahf
sbb
add
mov
cmc
pop
and
mov
insb
sarb
rclb
shrb
sub
and
icebp
and
sti
aad
jae
insb
scas
ja
cwtl
lds
popa
jmp
inc
lret
in
and
ret
sbb
jg
aas
fwait
push
ds
push
pop
jnp
insl
in
inc
test
in
mov
out
push
dec
xor
lea
dec
or
mov
jmp
pop
dec
sub
loope
psrlq
mov
ret
add
sbb
mov
push
rorl
insl
mov
and
add
test
mov
adc
ror
xor
std
aas
aad
xor
mov
addr16
dec
pop
ds
pushf
mov
cs
xchg
sti
sbb
push
mov
jmp
dec
jnp
mov
jo
xor
cli
divb
jle
in
or
jnp
mov
mov
cmp
aam
lret
cmp
int
cmpsl
add
insl
fstpt
and
pop
es
push
lcall
rcll
enter
mov
jmp
clc
fistl
jmp
arpl
dec
cwtl
stos
stos
inc
mov
sub
movsb
add
pusha
mov
mov
ret
mov
int3
rorb
or
push
incl
pop
jno
adc
pop
sbb
jge,pt
pop
xor
std
mov
cmpb
cmp
std
inc
sarb
das
mov
jb
jnp
inc
sbb
fiaddl
imul
scas
inc
xchg
add
jg
or
scas
add
mov
int
sbb
cmp
pushf
punpcklwd
cwtl
jecxz
push
mov
negb
dec
insb
cltd
pop
dec
cwtl
rorb
orb
adc
shrl
sti
fbstp
fstl
pop
loope
mov
test
jmp
fisttpl
inc
dec
es
bound
insl
pop
cltd
stos
and
mov
push
sbb
adc
movsb
outsb
sub
ret
rolb
fmuls
adc
inc
xchg
popf
push
sbb
mov
mov
inc
mov
add
fs
mov
xchg
adc
arpl
mov
cmp
cwtl
add
pop
sbb
jnp
cld
push
add
repz
cmpsl
pop
xor
outsb
fs
lret
adc
lret
add
jb
aad
xor
std
fnsave
imul
aas
sbb
je
dec
add
pop
rcrl
lcall
pop
sub
cli
pop
sub
pop
fs
xor
es
cmc
test
xchg
sbb
xchg
sbbl
ljmp
addr16
dec
push
movsl
sub
test
adc
sub
sub
divl
icebp
adc
jge
mov
dec
shl
mov
das
loope
dec
ja
fisttpll
inc
xor
lods
out
decl
outsb
sbb
mov
xorb
in
or
outsl
xchg
push
dec
xchg
fcoms
lods
sarl
dec
movsb
pop
out
fdivrl
stos
enter
cmc
addr16
push
insb
subb
ljmp
enter
cmp
loope
adc
jno
test
jge
stc
sub
cwtl
addr16
pop
cmp
rcrb
jmp
push
push
shl
in
mov
jecxz
push
or
push
pop
push
sub
push
xor
icebp
xchg
enter
sbb
cmp
jmp
add
out
or
repnz
push
add
int3
pushf
jge
dec
jl
movsb
cmp
adc
ds
add
xchg
out
or
sar
xacquire
insb
in
popa
loopne,pt
xchg
loopne
xor
inc
jnp
cwtl
add
or
jl
adc
add
mov
sbb
inc
xchg
js
inc
repz
add
sub
jge
shlb
sbb
pop
stc
jl
lret
and
out
sub
imulb
gs
lods
movsb
arpl
and
cmp
pushf
in
aad
cld
std
arpl
sti
xchg
mov
adc
js
push
jb
mov
inc
pop
xlat
dec
mov
jle
xchg
fimull
mov
sar
sub
fwait
sub
test
pop
fdiv
cmp
loop
fcmovnb
add
scas
fidivrs
xchg
sbb
cmp
movsb
jmp
jg
or
jae
jb
jb
or
pop
inc
jp
or
fildl
arpl
mov
bound
jle
push
fistl
stos
or
insb
jge
mov
jo
repnz
ficompl
adc
mov
xchg
cmc
insb
stos
xchg
sub
xchg
mov
sub
or
pop
xchg
ret
popf
ss
add
cmc
mov
adc
xor
sbb
xchg
mov
iret
popf
mov
scas
xchg
mov
adc
lea
es
xor
sub
cmp
or
lret
pushw
and
fisubl
mov
jmp
jno
cmc
dec
data16
or
sub
pop
test
sahf
and
and
mov
imul
xor
sub
ret
rcl
inc
in
mov
mov
push
adc
sbb
cmc
or
int3
add
pop
mov
cmp
gs
mov
sbb
pop
sti
pop
adc
jmp
lahf
xchg
sarl
cmc
lods
notb
mov
imul
push
arpl
mov
or
xor
lea
fists
lcall
pop
pop
inc
mov
mov
ffree
dec
or
and
cmp
sbb
jbe
xchg
xor
pushf
pop
pop
push
jg
mov
test
xchg
movsb
loopne
xchg
es
shlb
repnz
mov
push
push
popa
fisubrl
mov
sub
dec
incb
and
cmpsl
xchg
lret
mov
bound
mov
adc
popl
xchg
push
sub
and
jmp
xchg
push
sub
inc
dec
nop
lds
add
inc
ja
lods
icebp
dec
aas
mov
pop
mov
push
enter
sarb
xchg
mov
arpl
sub
outsb
add
pop
jge
sub
fcoms
dec
pop
xchg
loop
call
cmovge
aad
inc
mov
mov
lahf
xchg
pop
adcb
hlt
popf
adc
dec
call
and
sbb
cmp
ja
mov
mov
jecxz
in
and
dec
cmp
dec
testb
pop
out
frstor
mov
xchg
daa
dec
les
pop
leave
push
jge
imul
cwtl
mov
sbb
push
dec
stos
test
mov
fisttps
lahf
dec
xchg
out
sub
pusha
adc
xchg
cmpsb
int
roll
mov
loop
les
hlt
inc
test
sti
cli
push
pop
push
xchg
loopne
xor
xchg
xchg
scas
pop
xor
push
shlb
lock
adc
and
add
cmp
xchg
subb
inc
cmp
dec
jl
xchg
push
inc
mov
popl
add
mov
mov
pshufw
in
dec
inc
je
mov
jbe
mov
je
xor
cmpsl
dec
sbb
insb
and
in
clc
jmp
push
imul
imul
fisubl
lahf
loop
or
addr16
push
mov
sbb
mov
pop
mov
sahf
cs
lret
jbe
or
adc
xchg
add
stos
inc
das
xchg
test
js
jbe
mov
mov
mov
mov
jno
mov
loop
pop
jnp
sahf
out
lods
or
push
mov
loopne
outsb
in
pop
fwait
xchg
adc
push
push
out
mov
ret
dec
in
jne
lods
xchg
and
js
pop
xchg
lea
divb
xchg
jle
mov
aaa
icebp
push
pop
out
mov
out
inc
cwtl
sub
dec
mov
inc
mov
das
aad
mov
mov
xchg
idiv
push
jl
pop
cli
mov
enter
mov
jo
test
pop
adc
fimull
in
or
push
sub
sbb
or
call
mov
add
cs
mov
sbb
dec
mov
fidivs
xchg
fidivrl
inc
ret
fiaddl
shr
ljmp
xchg
icebp
lods
movsl
sbb
inc
push
dec
and
push
mov
enter
push
xor
lds
sub
cmp
pop
mov
repnz
mov
jae
fmull
popf
movsl
movsl
jnp
in
mov
lods
loope
inc
outsb
mov
adc
fcompl
adc
pop
repnz
test
fiadds
xchg
cmp
scas
push
lret
js
add
xchg
outsl
xchg
jmp
repz
sub
mov
addb
mov
adc
jbe
movsl
fcomps
std
sub
pop
mov
pop
push
and
xor
cs
jle
sub
sbb
pop
ret
adcl
fstl
leave
es
int
sbb
push
enter
out
rclb
es
fisubs
xchg
xchg
es
rorb
fmuls
push
xor
add
roll
inc
mov
outsl
xchg
rorl
jl
jmp
ljmp
jg
lahf
add
call
fsts
or
rcl
cltd
ss
or
imul
imul
sbb
gs
jbe
arpl
dec
sbb
cmpsb
xor
mov
mov
adc
ja
or
out
lret
jmp
clc
jb
out
in
mov
pop
in
mov
mov
daa
movsl
insl
sahf
int3
and
insb
movsb
push
or
jg
out
mov
rclb
xor
pop
sub
gs
xchg
lods
push
adc
push
pop
xchg
out
add
mov
in
outsb
adc
scas
pop
inc
mov
jne
ds
outsb
mov
sbb
and
ja
pop
mov
test
jge
fcmovnb
sbbl
cmp
cltd
iret
cld
or
fs
add
sarl
shll
pop
add
sbb
adc
mov
adc
daa
sbb
call
sbbl
sahf
aaa
push
xchg
shlb
push
das
cmpsb
mov
push
hlt
test
test
jo
inc
push
pushl
adcb
pop
jo
inc
xchg
inc
shlb
sbb
test
lods
rcl
mov
icebp
sbbl
xchg
dec
sbb
adc
add
dec
dec
in
in
or
mov
jmp
jl
flds
rcrb
or
int
and
mov
das
mov
or
inc
mov
adc
adc
mov
icebp
fwait
push
mov
clc
push
jge
cmp
inc
and
cmp
inc
rcrb
into
push
leave
into
test
xor
mov
cwtl
xchg
pusha
add
adc
lcall
sbb
aam
stos
gs
push
cwtl
and
test
push
js
adc
jge
aad
das
push
mov
in
inc
lret
jb
cmp
ret
in
je
cmp
inc
adc
jb
hlt
adc
sub
pop
je
dec
push
fidivrl
mov
in
je
jl
mov
xor
shrl
orb
ja
inc
cmp
jge
insl
scas
xchg
and
lds
add
nop
mov
mov
push
xchg
cwtl
enter
andl
test
push
lods
adc
push
mov
aaa
push
js
sub
mov
mov
nop
insl
sub
and
mov
sbbb
loop
mov
add
imul
sbbl
sbb
imul
loopne
rol
test
inc
cmp
jecxz
lods
js
dec
add
mov
arpl
inc
imul
inc
fisttps
push
mov
dec
mov
rorb
cmp
mov
rolb
cmp
mov
add
mov
pop
ljmp
adc
xchg
clc
mov
pushf
push
push
sub
inc
mov
movsl
jmp
mov
xor
std
and
sub
or
mov
sbb
loop
or
in
cmp
bound
insb
cmp
sub
cmpsl
jnp
nop
jo
and
jp
cmp
mov
inc
imul
jmp
and
cmp
xchg
sub
repz
push
int
into
xchg
pop
ja
wbinvd
iret
push
mov
cmp
ds
mov
dec
fisttps
out
roll
aam
out
nop
mov
test
add
jno
pop
pop
jecxz
inc
loope
sub
fists
shl
sahf
mov
dec
pop
xor
sub
xor
jg
inc
mov
xor
imull
push
es
in
lods
push
inc
je
cld
lods
aad
jge
cmpsb
jp
scas
test
jae
mov
aad
mov
mov
cmp
xchg
add
loopne
repnz
push
aaa
cld
roll
mov
cmpsb
fs
out
sbb
sti
int
and
mov
mov
fwait
jbe
fldenv
inc
sub
or
sub
sti
mov
or
clc
mov
les
dec
and
pop
cmp
dec
in
imul
movsb
shrl
xor
jge
jle
pop
pop
rcr
insl
fbstp
sahf
call
nop
push
dec
dec
add
jae
rolb
adc
inc
insb
js
fisubrs
aas
aaa
xor
lock
mov
lahf
push
int3
movsl
lds
lahf
jle
lret
test
xor
mov
loop
pop
ret
out
negb
cltd
jns,pn
mov
mov
xchg
push
cld
ljmp
int
adc
mov
stc
xchg
and
add
daa
push
sub
sub
sbb
adc
mov
int
lret
add
iret
mov
dec
cli
test
inc
in
jne
lock
mov
cmp
and
daa
mov
cmp
cmc
mov
xchg
cmp
cmp
shll
push
repz
mov
nop
ret
into
xchg
das
jle
fldl
add
repz
ror
cmp
mov
lods
std
test
cmp
in
lock
jmp
sub
or
xor
rclb
imul
inc
push
popa
out
push
sahf
mov
inc
iret
xchg
adc
leave
sub
jp
lock
cmc
cmp
test
aad
ds
inc
pop
testl
popf
in
inc
push
aad
add
and
shlb
lahf
ds
shrb
xor
push
push
mov
jne
popa
inc
jge
dec
int3
sub
je
adc
pushf
sbb
rcr
jbe
inc
leave
arpl
adcb
sarl
sbb
mov
or
xchg
into
sub
imul
clc
sbb
and
mov
dec
or
xchg
cmpsb
pop
hlt
adc
mov
repz
inc
enter
roll
jmp
bnd
cli
add
aam
jne
ret
mov
aad
jg
mov
movsl
push
cli
mov
clc
mov
cltd
inc
test
or
mov
inc
popa
push
rcrb
jl
push
imul
mov
lret
in
imul
and
mov
add
xchg
sub
mov
fwait
xchg
dec
dec
pop
das
or
pushf
add
push
inc
jnp
mov
or
loop
pop
ja
or
pop
dec
dec
popa
rorl
pushf
sbb
movsb
in
cmp
pushf
sahf
adc
mov
mov
dec
mov
test
adc
pop
frstor
sub
dec
inc
repz
pop
push
sub
adc
js
jno
sbb
out
inc
adc
pop
push
lahf
stc
sbb
mov
sub
daa
xchg
imul
mov
xor
or
call
gs
pop
iret
push
cmp
xchg
in
lods
rclb
fimuls
xchg
lahf
jae
cmpsl
push
xor
adc
fstl
push
pop
sub
add
mov
and
cmc
ret
jns
stos
sti
daa
mov
sub
cld
int
jbe
inc
test
dec
sbb
imul
mov
cli
test
cmp
jbe
iret
inc
adc
pop
inc
or
rcr
or
hlt
sar
mov
mov
inc
lret
xor
and
sub
jns
push
mov
mov
push
test
stos
add
mov
into
sbb
jnp
aam
test
mov
or
std
cltd
pop
mov
aad
das
pop
xchg
int3
hlt
cmp
mov
insl
aad
fmull
mov
test
and
mov
xchg
scas
jp
or
and
hlt
fstpl
repz
mov
leave
lea
test
mov
mov
mov
adc
pusha
test
push
leave
xchg
add
lods
sbb
mov
mov
cwtl
pop
lds
xor
push
sub
xor
xor
es
insb
ret
mov
inc
inc
test
mulb
mov
jbe
jbe
pop
sbb
mov
test
jae
mov
sub
aam
scas
jb
outsb
ret
aam
mov
pop
add
cmp
int3
adc
ljmp
mov
inc
clc
inc
lret
stc
sub
sbb
into
loop
repz
rcrl
xchg
js
push
and
ja
test
sbb
pop
lock
mov
sbb
addr16
popf
push
bound
test
loopne
fwait
sahf
data16
inc
dec
in
add
xchg
es
mov
nop
cmpsb
jb
divb
test
pop
xchg
dec
mov
adc
pop
mov
mov
cmpb
mull
mov
adc
sbb
push
mov
mov
dec
jle
mov
stos
cmpsl
adc
xchg
mov
xchg
leave
sub
adc
lahf
add
push
comiss
paddsw
mov
sbb
pop
inc
mov
mov
fchs
mov
std
aam
adc
push
cmp
inc
cs
push
out
movsl
xchg
sbb
mov
push
push
jae
ret
dec
in
jmp
xlat
sbb
out
repnz
repz
ret
xor
sub
and
pop
inc
mov
icebp
pop
sbb
mov
test
jge
mov
ret
xlat
clc
xor
push
xor
and
adcl
lret
aad
and
ficoms
cmp
fs
aam
insb
or
test
roll
fcmovnb
fwait
jno
loop
repnz
adc
in
testl
sbb
loopne
and
cmpsb
xor
lea
aaa
sbb
adc
insb
pop
sbb
inc
push
sbb
lea
jle
mov
jb
daa
inc
popf
jmp
pop
xor
pushf
sub
aas
xchg
adc
sbb
scas
dec
xchg
mov
cmc
pop
cmp
cmp
fsub
ret
jmp
in
ja
mov
mov
adc
sub
jne
add
test
inc
sbb
rorb
cli
sbb
cmp
mov
push
mov
mov
jns
jbe
mov
mov
cmp
jg
cs
int
pop
stos
in
mov
sbb
cmc
jmp
cwtl
movsl
adc
adc
out
es
rolb
push
add
shll
or
push
shrb
sbb
xor
sub
stos
orl
add
and
rorl
int
jge,pn
in
mov
push
imull
fnstcw
lret
jne
lcall
je
mov
add
repnz
stos
movsl
xchg
or
add
into
jecxz
and
out
fs
lea
jmp
add
std
cli
movsl
pop
dec
cmp
addr16
fstps
sbb
mov
cltd
shll
push
pop
bound
sub
mov
xchg
clc
push
jno
jno
in
imul
lcall
in
adc
gs
cli
scas
and
clc
rcrb
int
jmp
mov
roll
daa
in
inc
in
addr16
cmp
lret
lods
pop
mov
pop
cli
adc
dec
jo
cli
imul
cwtl
shl
jno
dec
sti
pop
mov
lret
idivb
and
sbb
jmp
jecxz,pn
or
cmp
xlat
stc
xchg
std
lret
xor
jno
icebp
std
mov
and
adc
aas
fmulp
xor
mov
lcall
sub
loopne
movsl
jno
pop
mov
mov
mov
je
pop
push
and
jg
outsb
dec
lock
mov
cmc
or
aam
fdivrl
mov
sbb
pusha
add
movsb
inc
mov
xor
imulb
test
test
fsubp
or
sub
inc
clc
push
and
xchg
orb
in
sub
mov
inc
pop
aam
rclb
scas
dec
pushf
mov
ret
sub
push
dec
inc
pop
ficompl
sub
aaa
cld
clc
xchg
or
insl
mov
lods
dec
dec
xor
mov
pop
sbb
xor
je
xorb
in
jnp
pop
call
outsl
das
mov
sub
fiaddl
sub
cld
in
test
or
mov
cli
mov
lea
fsubl
mov
mov
inc
idivb
xchg
insb
mov
outsb
les
inc
mov
add
fidivs
rcll
pop
dec
mov
shl
xor
sub
push
sbb
mov
ret
std
out
xchg
add
adc
cmpsb
mov
mov
inc
inc
push
add
mov
out
out
int3
ds
movsb
or
lods
and
lods
and
insb
testb
dec
loop
dec
fs
cmc
pushf
insl
pop
int3
mov
push
or
je
mov
cmp
cmpsl
push
les
mov
movsb
lea
or
push
shrb
arpl
mov
xchg
outsl
cwtl
bound
adc
pop
jo
test
jl
in
dec
or
fdivrl
loop
push
jo
adc
jmp
enter
loop
enter
jp
push
das
jns
shlb
mov
mov
fstl
daa
call
jne
add
mov
mov
pop
hlt
ja
outsl
ja
mov
repz
ljmp
cmp
or
inc
dec
xchg
sub
mov
bound
loope
xchg
dec
bound
lret
aaa
loope
movsb
inc
adc
enter
add
dec
xchg
sti
and
adc
push
iret
jl
aam
cmp
mov
shrl
mov
popf
stos
mov
pop
mov
in
incl
call
push
mov
add
nop
orl
cmp
push
hlt
pushf
pop
push
cmpsb
aas
jecxz
sbb
rcl
jns
push
andb
jg
test
inc
out
cs
das
jne
sbb
xchg
sbbl
fcmovbe
and
int
cmp
loopne
pop
lods
divl
adc
cs
scas
mov
or
cmpb
jno
push
fs
or
fsubrl
mov
ds
push
incl
test
loop
jno
xchg
loope
pop
popa
mov
and
scas
imul
xor
add
push
lock
out
mov
aad
mov
or
shll
repz
stos
fcomps
out
lds
test
lock
fiadds
xlat
mov
xchg
ljmp
bnd
mov
in
stc
fs
lods
push
dec
dec
mov
subl
xchg
loope
imul
mov
adc
std
outsl
mov
adc
or
push
or
sbb
lcall
inc
dec
and
repnz
mov
push
lret
movsl
imul
test
fwait
xchg
cld
mov
stos
or
leave
divl
out
mov
sbb
and
sbb
lods
adc
test
pushf
push
sbb
bound
ror
lock
dec
out
decl
shll
lds
inc
insb
icebp
popf
mov
faddl
cs
adc
mov
fwait
cmp
xor
push
sbb
imul
pop
out
arpl
dec
cmpsl
sbb
or
ret
stos
mov
mov
mov
lcall
inc
and
xchg
xchg
xor
cmp
or
cltd
lock
push
loope
arpl
imul
sbb
mov
jecxz
mov
xchg
mov
frstor
mov
in
aas
mov
mov
shl
jmp
and
sti
scas
js
pop
lret
addr16
push
pop
les
push
cmp
inc
push
or
mov
pop
jne
dec
les
pop
inc
pop
loopne
je
in
adc
dec
jo
or
lret
movsb
add
orl
sbb
popf
xchg
push
popf
add
aad
fsubl
pop
fisttpll
ja
loopne
sbb
pop
inc
cmpsl
loope
fisttpll
and
xchg
roll
test
lahf
pop
pop
or
pop
aad
icebp
mov
ljmp
mov
fs
nop
into
aas
push
pop
sbb
jno
mov
adc
bound
mov
xchg
add
cmp
sbb
adc
imul
pop
insb
aam
add
push
scas
pop
adc
mov
scas
pop
fcomp
shrl
or
mov
mov
shlb
cmp
mov
xor
adcb
cld
pop
mov
sti
jnp
pop
lret
add
sbb
cmpsb
outsb
rorb
call
xor
mov
movsl
sbb
loopne
aam
out
std
sub
cs
jle
xor
push
mov
loope
and
clc
fcoml
mov
mov
mov
dec
jg
into
popl
mov
jl
insb
daa
cmp
arpl
ret
mov
mov
pusha
int3
test
xchg
addl
mov
push
and
inc
inc
push
test
cli
movsb
xor
add
jmp
fstl
fwait
movsl
test
sub
pop
mov
jae
mov
cld
popa
xchg
movsb
iret
cmpsb
ds
pop
adc
jmp
fisubl
test
cmp
aas
inc
sub
push
cmp
leave
pop
sub
sbb
xchg
pop
adcb
sbb
inc
cld
out
test
pop
push
sub
repnz
pop
cmp
adc
leave
fs
rclb
jge
mov
push
xlat
outsl
stc
test
out
jo
pop
ds
lret
daa
lahf
insb
pop
push
jne
aaa
inc
js
nop
jge
mov
dec
and
ret
ret
mov
pop
xor
inc
fldl
cmp
call
push
inc
dec
mov
mov
dec
popf
push
lahf
das
pop
std
out
out
andl
sub
mov
mov
shl
mov
jne
jns
adc
jl
mov
jge
cltd
cld
fnsave
jns
adc
pop
sub
mov
cwtl
movsb
or
mov
clc
ret
imulb
lock
mov
or
and
outsb
sarl
scas
fidivl
ja
cli
jmp
subl
ja
mov
pushf
or
outsl
adc
add
stos
rcrb
jmp
orb
std
aaa
sbb
cli
mov
test
and
mov
icebp
testl
ret
mov
xchg
inc
lods
cmp
push
lea
nop
lock
out
lods
push
cmpsl
stos
and
dec
inc
js
data16
stc
inc
sub
and
push
leave
ja
hlt
fs
decl
mov
out
xchg
pop
clc
xchg
icebp
out
mov
adc
test
cmpsb
mov
sti
xchg
xorb
test
push
mov
and
push
cld
aam
adc
aas
leave
enter
pop
icebp
mov
mov
adc
dec
jmp
daa
push
pop
fisttps
lods
mov
push
ss
push
or
push
pop
imul
adc
xchg
ja
adc
pusha
mov
inc
pop
fs
cld
jae
mov
xor
inc
push
mov
inc
or
ret
pop
xlat
enter
fcmovu
jns
in
mov
mov
or
and
mov
sub
lcall
dec
in
jne
jmp
out
sbb
enter
icebp
inc
ss
das
in
inc
in
jo
mov
gs
add
rorl
inc
pop
addr16
add
pop
lret
jns
or
mov
icebp
mov
sub
rorl
xchg
and
test
mulb
iret
mov
nop
xor
repz
push
mov
pop
aaa
nop
mov
xchg
mov
xchg
xor
push
test
ds
add
lcall
pop
dec
mov
pusha
xchg
les
inc
stc
outsb
inc
and
repz
sar
test
xchg
icebp
push
add
pop
fidivrs
adc
mov
xchg
mov
jle
dec
ljmp
ja
cmp
sub
add
fucomip
cmp
and
mov
mov
ja
dec
shlb
fimull
stc
fidivrs
movsb
pop
imul
mov
mov
daa
cmpsb
fstpt
xchg
xchg
scas
lock
sti
jbe
out
inc
cld
stos
pushf
bound
into
and
add
inc
inc
in
sbb
push
push
pop
inc
cmp
or
jns
push
mov
shlb
pop
add
xchg
lret
pop
js
int3
lds
in
inc
cwtl
std
xchg
scas
outsb
and
insl
icebp
jne
mov
insb
cmp
rcrb
push
xchg
push
jne
popf
clc
in
fs
xchg
sub
jbe
push
rcll
mov
addr16
fcmovb
mov
lcall
xchg
adc
in
and
sarb
pop
out
sbb
jle
test
dec
ret
pop
dec
addr16
dec
add
mov
cmp
notl
sub
shll
bound
adc
push
or
sbb
xchg
mov
je
sub
aas
xchg
lock
call
subb
mov
je
push
push
sbb
mov
fwait
xchg
pop
lret
add
push
dec
shufps
add
add
mov
jp
sbb
adcb
test
fisubs
dec
mov
repz
fstps
mov
fnsave
test
cs
jecxz
sub
and
ljmp
idivl
jae
sbb
movsb
add
jae
or
call
mov
cltd
pop
test
fcmovne
bound
cmpsl
lret
inc
jno
jp
dec
jmp
sub
xchg
mov
fstl
loopne
pop
pop
imull
cmp
add
lahf
mov
push
sub
push
jecxz
or
push
popa
and
popf
outsl
add
cmc
add
inc
jnp
jae
mov
pop
gs
rolb
pop
pop
int
lret
lcall
add
out
sub
pop
mov
out
pop
inc
pop
aad
hlt
xchg
xchg
mov
das
and
repnz
push
loope
imul
dec
sbb
loope
sbb
jmp
lods
jnp
in
sbb
in
outsl
pushf
jb
stos
jg
ret
or
scas
ret
mov
lahf
cmp
mov
mov
jmp
mov
push
add
jp
test
int
push
das
out
in
mov
add
bound
pop
decb
and
cmp
cmp
jo
pop
mov
mov
js
push
hlt
mov
push
popf
stos
xor
push
and
fidivs
in
xchg
push
cmc
lahf
lea
shrl
pop
data16
sub
adc
push
mov
push
sub
andb
js
aaa
sahf
dec
xchg
mov
inc
mov
cmpsl
je
cmpsl
jae
scas
imul
out
adc
mov
mov
dec
add
push
fs
mov
sub
dec
lahf
in
sbb
in
aas
leave
out
ret
ret
dec
sbb
pushf
xchg
pop
fnsave
sbb
jmp
rcll
cmp
ret
and
leave
adc
jmp
je
iret
jle
cmc
lods
mov
js
push
push
dec
int
jl
adc
mov
lahf
or
push
or
cmpl
insb
gs
insb
sarb
pop
jmp
nop
int
add
sbb
dec
or
jne
insb
ds
adc
loopne
bound
add
adc
sbb
and
popf
mov
inc
insb
popf
sarl
jecxz
add
sbb
push
jge
scas
xor
jp
cmp
push
mov
mov
stos
movsl
rcrl
int
mov
and
and
arpl
out
pop
push
pusha
in
xor
push
or
jmp
add
dec
repz
frstor
cmp
aaa
sub
adc
ficoml
repnz
xchg
or
jge
out
fs
add
xor
mov
sbb
and
push
jecxz
or
arpl
out
fldcw
loopne
jl
iret
outsb
subl
out
cs
push
jae
xor
add
movl
sbb
pusha
push
scas
cmpsl
dec
cmp
adcb
cmp
mov
inc
jmp
lds
xor
adc
iret
in
divb
lods
mov
repz
mov
cmp
das
mov
loope
sub
add
in
adc
cmp
bound
testb
pushf
sbbb
xchg
mov
mov
xchg
out
dec
pop
loop
xor
add
add
pop
icebp
inc
mov
pop
das
xchg
jp
movsl
mov
int
popa
sub
mov
mov
popf
getsec
out
cmc
adcb
xor
in
jb
mov
mov
sub
outsl
es
hlt
into
push
pop
test
xor
sub
jg
mov
rolb
in
dec
rep
xor
test
jns
push
lret
sub
xlat
mov
lods
sbb
out
cmp
jecxz
shll
pop
std
push
jg
sbb
insb
fistpll
mov
jne
add
push
call
in
sub
test
insb
cmp
vpaddsw
jno
nop
sub
jne
dec
sub
lret
gs
ds
dec
xchg
pushl
fdivrl
loop
pop
or
jb
movsb
shrb
sub
add
add
mov
inc
insb
sbb
rorb
dec
loopne
dec
jl
cli
push
ljmp
shrl
pop
sbb
xor
loope
and
mov
mov
dec
ret
push
repnz
call
cmp
lock
dec
xor
push
xchg
mov
push
pusha
jne
xchg
mov
pop
int
mov
sti
jo
or
cmp
mov
jp
jns
gs
movl
jbe
mov
outsl
sub
jle
push
std
dec
sbb
pushf
lods
lods
xor
push
enter
add
mov
sub
or
xor
or
popa
cltd
xorb
repnz
lcall
int
std
stos
or
ljmp
clc
cmp
pop
imul
xchg
leave
jbe
inc
movsl
sar
insb
leave
cmp
test
or
mov
je
sbb
and
add
adc
daa
jae
push
pop
divb
fistpll
inc
popf
gs
in
xchg
js
aad
mov
imul
push
jl
dec
lods
ss
call
in
das
jecxz
push
xor
jno
movsl
addl
sbb
mov
cmp
int3
loope
or
dec
scas
mov
inc
add
xlat
mov
jns
or
add
lods
in
sub
movsb
sub
or
mov
add
xor
mov
push
cmp
mov
xchg
arpl
xchg
test
sarb
fisubrs
fbld
push
imul
orb
lahf
cs
or
leave
cmp
cwtl
imul
movsb
outsb
cmp
push
loopne
shll
inc
sbb
test
rcll
adc
sub
mov
into
add
out
fsubrl
push
xlat
mov
ret
xchg
lock
test
fsubs
dec
mov
push
repnz
jmp
dec
in
sub
xchg
jne
outsl
dec
inc
rclb
std
sub
sahf
sub
dec
ret
ret
imul
mov
mov
shlb
jnp
cmp
mul
jle
fstps
dec
xchg
fisttps
and
lret
and
add
push
icebp
xor
idivl
lret
insl
push
loope
cwtl
addr16
ss
inc
push
xchg
add
arpl
lods
imul
pop
outsl
rorb
arpl
jl
pop
add
dec
rcr
ja
jno
jb
insb
in
xchg
xlat
call
in
stc
mov
push
clc
mov
leave
int
dec
mov
incl
cmp
or
dec
xlat
push
cmp
rolb
fwait
jno
js
sbb
jbe
push
lret
lcall
push
sbb
sub
cmp
sbb
and
xor
mov
in
jnp
lds
clc
aaa
insl
xor
sbbb
in
lods
add
pop
out
pop
pop
push
or
mov
hlt
test
sbb
add
cmp
add
cmp
and
lret
jl
mov
pushl
outsl
add
jge
jb
js
xor
icebp
mov
add
and
aas
lret
mov
jmp
cmp
jnp
scas
in
jns
outsl
incb
mov
out
outsb
push
movsl
mov
xchg
mov
pop
and
mov
ret
cmp
cmpsl
xorl
mov
mov
add
sub
cmp
adcl
adc
lcall
cmp
or
movsb
out
cmp
xchg
and
mov
pop
mov
rcll
jb
fistpl
pop
lcall
test
fdivrl
shr
mov
jmp
lret
inc
sub
test
adc
mov
bound
cmpsl
sbb
mov
pop
in
add
fdivr
push
cmp
cmc
movd
imul
fisttpll
or
roll
adc
cli
jnp
lods
inc
enter
flds
ror
out
cltd
lods
sub
or
xor
orl
and
and
cmpl
mov
shll
cwtl
add
dec
mov
in
idivl
test
scas
lock
xor
push
mov
adc
dec
fbstp
repz
enter
inc
stc
xor
and
sbb
ljmp
jmp
pusha
dec
jb
jnp
xor
dec
out
fwait
popf
and
pop
or
clc
adc
ret
test
popa
repz
idivb
scas
sbb
gs
int
pop
jmp
xchg
int
xchg
sbb
or
pop
xchg
push
ljmp
xchg
mov
jl
loopne
sbb
or
sub
cmc
mov
aam
sub
mov
ja
mov
daa
dec
sub
int
inc
loopne
sub
ud2
cmpsl
sbb
cld
pop
arpl
pop
popa
in
divl
push
mov
cmc
jbe
or
or
cmp
dec
mov
push
inc
xor
or
lahf
mov
push
inc
xchg
sbb
mov
test
fnstcw
pop
pop
mov
dec
dec
and
mov
in
aaa
pop
call
test
fdivp
cmp
sub
shl
dec
fists
dec
jecxz
ss
negl
aam
xor
or
out
dec
sbb
sbb
es
xchg
push
sub
inc
sbbb
xor
outsl
sbb
mov
dec
xchg
std
fwait
or
pusha
xchg
sbb
sub
test
insb
adc
and
add
pop
jo
xchg
in
mov
outsb
mov
mov
or
mov
js
adc
xor
sub
cltd
xlat
or
push
pop
shr
cli
stos
pop
in
fbstp
push
rolb
jbe
cmc
mov
mov
bound
jns
mov
xchg
testb
mov
sub
fstp
cmp
aad
sti
adc
pop
ret
push
jecxz
inc
fildll
shr
enter
inc
and
sahf
mov
mov
cli
push
jl
stc
call
inc
adc
fisttpll
rolb
aam
jg
or
pop
test
movsb
lea
cmpsb
jecxz
inc
fidivl
mov
or
fsts
andl
loopne
inc
push
les
push
sbb
xor
out
fstl
sbb
mov
push
mov
movsl
dec
and
mov
icebp
mov
sub
loope
xor
lcall
pop
mov
mov
add
sbb
in
pusha
mov
or
push
push
imul
mov
ret
inc
sub
pop
lahf
in
pop
es
mov
cmp
and
sbb
jnp
shrb
imul
shl
push
fadds
orb
push
mov
out
jns
dec
repz
cmp
jecxz
lcall
mov
push
fdivrl
or
loopne
in
fistpll
sub
add
mov
jnp
push
jns
movsl
mov
stos
inc
cmpsb
jmp
fbld
mov
push
pop
mov
mov
out
sahf
cmp
fwait
scas
mov
and
popf
movsl
sbb
sarl
sub
xchg
fwait
mov
ret
lcall
mov
xor
xchg
cmp
addl
inc
jl
sbb
fnsave
loope
pop
jne
or
pop
push
xlat
adc
xchg
adc
or
jl
pop
pusha
sbb
pop
lods
fs
rorl
inc
adcl
adc
repnz
pop
fstpl
addr16
fsubl
dec
pushf
xchg
int
xor
arpl
mov
sub
jmp
adc
cltd
enter
mov
cld
in
imul
dec
push
js
jnp
jl
icebp
mov
test
xchg
cmp
pushf
js
jp
jb
insl
and
in
ja
and
movsb
xchg
inc
fbstp
mov
jb
in
fistpl
stos
movsb
test
ret
fs
fnsave
fsubr
pop
das
in
mov
mov
mov
loope
leave
repz
subb
xor
or
pop
cmp
icebp
mov
sti
xor
int3
mov
mov
cmp
loop
push
adc
idivl
vpunpckldq
cmp
sbb
or
in
sbb
xlat
sbb
popa
scas
jae
sbb
dec
pop
mov
stos
cmp
test
push
in
sbb
and
mov
mov
mov
cmpsb
xchg
xor
and
ja
push
fcmove
xchg
cmp
jbe
ret
adc
push
pop
bound
sub
clc
sbb
fs
mov
les
xor
cs
rorb
dec
lods
xor
mov
mov
dec
cmp
mov
addr16
addl
push
rclb
mov
shld
jns
stos
decb
jl
adc
or
prefetch
push
push
scas
adc
and
cmp
lock
mov
push
test
mov
repnz
dec
enter
les
rol
mov
adc
rcll
sub
fsubl
das
pop
bound
inc
pop
aad
fs
cmpsl
in
mov
sbb
inc
pop
cmpsb
stos
or
mov
jb
jnp
das
rclb
and
pop
add
inc
push
inc
fdivr
in
scas
dec
je
adcb
pop
popf
enter
lea
sahf
sbb
push
aam
cmp
fisubrs
cltd
or
xor
mov
in
and
jno
scas
aaa
hlt
int3
sub
push
mov
in
pop
xchg
xor
push
into
stos
xor
dec
mov
dec
icebp
shl
adc
pop
add
div
rorl
ret
outsb
pop
mov
add
stc
jmp
in
es
xchg
fstl
inc
ss
add
jmp
lret
std
shrl
lea
adc
or
vpmulhuw
adc
mov
ss
hlt
pop
movsl
sbb
add
scas
pop
cs
movsl
xchg
push
fwait
and
lcall
mov
dec
cli
cmpb
mov
add
les
test
sub
stos
pop
mov
xchg
push
push
jmp
ds
clc
fsts
jle
mov
jecxz
xchg
push
jne
pop
bound
and
dec
mov
jae
push
xchg
rcll
sbb
pop
jo
fs
repnz
cwtl
stos
popa
test
fimuls
call
pop
dec
rclb
out
cmp
pop
daa
and
xchg
popf
lret
int
xor
push
sbb
xor
int3
and
mov
fadds
sbb
idiv
test
jecxz
out
cmp
xor
cmp
cli
into
bound
pop
mov
lret
mov
push
jnp
push
scas
mov
movsb
adc
sub
dec
add
ja
sbbb
mov
repz
inc
mov
sarb
or
xchg
sti
pop
xlat
aas
sti
inc
and
jne
mov
insb
pop
int
leave
cmpsb
cmp
pop
stos
inc
add
inc
dec
into
scas
cli
imul
jne
ds
sub
mov
repnz
inc
les
ds
movl
test
jnp
popa
clc
ficoms
int
sub
sub
fnstsw
mov
stc
es
int
mov
aam
mov
push
dec
cltd
aas
lods
stos
cld
xchg
inc
pop
in
mov
cmpsb
sub
ljmp
aad
dec
dec
sub
outsl
insb
leave
mov
outsl
xchg
icebp
xchg
int
jns
enter
std
out
jecxz
fdivp
std
add
inc
mov
add
and
mov
cmpsl
andb
loop
mov
mov
xchg
and
and
xchg
push
ret
xor
mov
jle
ljmp
pop
loopne
stc
popa
insb
insl
xchg
pop
pop
and
fildll
iret
jns
arpl
add
mov
jbe
fisttpll
int3
aas
pop
loop
lock
inc
int
popf
ret
inc
inc
aaa
fisubrs
mov
es
sbb
mov
mov
std
pushf
jb
push
inc
xchg
push
inc
pop
or
push
int3
mov
test
movsb
mov
or
or
cs
mov
push
mov
out
in
cmp
pop
aam
out
xchg
scas
clc
cld
push
xor
inc
leave
xor
lea
rcrl
and
add
and
hlt
sub
inc
push
mov
js
push
fildll
sub
jbe
push
dec
ss
xchg
mov
dec
fstps
sub
sub
push
fdivrs
jnp
loop
mov
mov
or
mov
cld
push
push
scas
sahf
sbb
push
mov
mov
outsl
pusha
jle
je
inc
sub
imul
push
sbb
inc
fsubp
shll
test
xor
out
repz
adc
insb
push
ror
test
mov
or
jmp
xchg
or
and
ret
shll
stos
push
mov
mov
loopne
pop
inc
mov
push
or
sbb
out
cli
orl
insl
sbb
test
sarl
mov
inc
xor
jae
imul
jmp
aas
xor
sbb
sub
add
sbb
jb
cmpsb
in
inc
dec
pop
cld
mov
xor
ss
icebp
xor
pusha
jno
repnz
inc
jge
mov
jecxz
mov
sub
fs
insl
xchg
mov
xor
shlb
scas
mov
adc
lcall
dec
pop
daa
jecxz
movsb
out
fdivs
pushf
repz
cltd
subl
daa
shll
mov
leave
mov
scas
or
or
into
mov
xor
jbe
mov
mov
dec
into
inc
xchg
xchg
mov
insl
add
dec
jle
mov
push
sbb
lods
and
dec
fisttps
push
or
and
mov
scas
int
jbe
pop
dec
jne
loop
jmp
sbb
lret
jl
xchg
push
mov
jle
pop
loop
xor
add
push
jnp
inc
add
aas
into
jl
rcrl
imul
cmp
lcall
movsb
loope
js
add
dec
out
push
add
add
loop
xor
sti
test
popf
adcl
mov
mov
mov
cwtl
ret
lret
sbb
xchg
movsl
es
and
movsb
ret
mov
ljmp
mov
loopne
dec
daa
pop
subl
cwtl
dec
push
mov
stos
or
or
ja
sub
fcmovnbe
test
cmp
mov
jle
cmp
pop
lock
jb
loopne
nop
in
xchg
add
mov
sbb
int
jmp
sarb
cmpsb
addr16
fstl
xor
and
je
inc
lret
imul
adc
push
jae
test
iret
lds
mov
addr16
int
cld
inc
cmp
jne
jns
std
or
fildl
out
shll
mov
ret
enter
imul
out
out
xchg
imul
jns
and
mov
jae
add
clc
sbb
insb
jge
lret
clc
sbb
iret
movsl
push
adc
sarb
add
subl
jl
xor
mov
sbb
inc
add
fstpt
fidivs
cs
lcall
in
in
pop
lock
xchg
jns
fdivl
xor
cld
in
mov
jb
sub
out
fbld
mov
push
add
adc
xchg
pop
cmp
adc
movsb
mov
scas
mov
pop
je
in
inc
lods
push
xchg
jecxz
pop
es
push
jne
dec
mov
movsl
adc
mov
push
sbb
mov
dec
dec
inc
xchg
jae
insl
pop
loop
xlat
stos
out
sbb
cwtl
and
fidivs
in
mov
mov
sbb
mov
jbe
adc
cmp
fnstenv
inc
push
repnz
iret
gs
add
decb
mov
pop
mov
sbbl
adc
xor
nop
inc
xchg
ljmp
lock
pop
cmpsb
jo
lods
pop
lret
into
cmp
xlat
add
xchg
int3
aad
test
xchg
add
stc
jb
out
enter
retw
xor
jecxz
cli
aas
add
cmpsl
add
add
cmp
pop
sar
xlat
xchg
inc
xor
fmuls
xchg
inc
rclb
xor
lret
hlt
stc
jp
xor
icebp
aaa
sbb
sub
xchg
insb
ficoml
sbb
test
cmp
fs
mov
push
xchg
divb
mov
xchg
outsb
lahf
fcmove
cmp
sar
into
cmp
jmp
adc
std
mov
and
jae
cmpsl
mov
call
add
xchg
and
cmp
cs
out
and
push
cs
jne
pusha
arpl
mov
fisttps
xchg
pop
test
cmp
jle
movl
inc
insb
test
jecxz
dec
or
pop
fsubs
push
shr
lret
xchg
and
out
mov
bound
inc
cmp
aam
mov
mov
pop
push
test
push
testb
fcomps
out
mov
es
hlt
push
push
jl
xchg
or
xor
bound
repnz
xbegin
lods
mov
aas
pop
xchg
aas
fistpl
sub
jno
jl
cmp
into
sbb
movsb
add
sbb
and
mov
pop
add
jecxz
bound
mov
imul
inc
stc
hlt
scas
cmp
push
cld
loop
loop
sub
pop
xor
out
bswap
xchg
popa
mov
shll
adc
lret
mov
dec
bound
jbe
pop
les
fsubrp
mov
or
push
arpl
pusha
pop
dec
pop
icebp
push
lret
xchg
jne
cmp
icebp
xchg
repnz
push
es
orl
stc
or
orl
test
loopne
loope
push
cmpb
push
lret
dec
leave
mov
pop
imul
stos
mov
inc
inc
sbb
data16
xchg
xchg
mov
cmp
cltd
cmp
inc
push
orl
clc
jne
adc
repnz
cmp
and
lcall
dec
sub
or
outsl
xor
mov
or
pop
rorl
les
and
icebp
out
mov
ljmp
imul
into
cmp
pop
cmp
aad
push
dec
es
rcll
les
in
sub
iret
icebp
mov
xchg
push
push
xchg
aas
fs
aam
pushf
pop
cmp
mov
stos
out
hlt
xor
std
sbb
push
pop
outsb
into
push
mov
xchg
jo
inc
mov
fsub
sub
fwait
mov
int3
jge
mov
sub
mov
jns
cmpsb
stos
mov
fcompl
xchg
cmp
sbb
push
inc
add
aas
push
mov
stos
push
lcall
ds
cmpb
movsb
lods
shll
cmpsl
ljmp
push
jle
out
pop
dec
mov
adc
lret
or
cli
push
mov
dec
dec
rcl
leave
and
push
inc
repnz
ret
andl
jb
sbb
cmc
aad
mov
das
sbb
das
mov
sbb
pop
stc
into
push
je
arpl
jp
xchg
fiadds
cmp
outsl
mov
outsb
aam
clc
push
push
movsl
in
mov
xor
add
jg
mov
fsubrs
clc
and
fwait
out
in
sbb
jno
nop
out
nop
xchg
mov
sbb
iret
dec
rcr
mov
inc
mov
cmp
cmc
rorb
inc
stc
inc
mov
jmp
adc
jecxz
push
mov
mov
pusha
gs
pop
mov
adc
xchg
and
pop
jmp
jno
xor
sbb
and
dec
scas
lds
les
xchg
outsl
mov
add
lods
lds
js
movsl
aaa
loope
push
sub
push
faddl
popf
xchg
loop
mov
lret
pop
iret
dec
stos
add
leave
imul
leave
pop
int3
cs
into
fmull
outsl
outsb
repnz
lcall
cmp
mov
mov
dec
dec
pop
sbb
je
pushf
repnz
sub
jne
scas
popa
lods
ret
rorb
daa
mov
fcmovnu
stc
lahf
adc
mov
jbe
out
mov
pushf
jb
flds
ss
cmc
ja
fs
sbb
sahf
es
cmp
dec
in
mov
xchg
push
push
loopne
pop
shll
das
ss
scas
cmpsl
push
push
ds
dec
lods
mov
cmpsl
or
ja
mov
xchg
pop
lods
std
mov
rcrl
cmp
subl
add
stos
insb
stos
cmp
mov
outsb
andl
mov
ret
pop
lods
ss
pop
inc
dec
jns
clc
fucomip
and
sbb
fwait
test
das
jmp
adc
daa
adc
jl
cmpb
pop
mov
cmp
jae
pop
rorl
gs
add
xchg
insl
cld
dec
insb
pusha
lods
out
insl
mov
scas
cmp
xchg
pop
adc
data16
sub
cmp
mov
jb
loopne
push
and
mov
push
in
dec
fimuls
stc
mov
sbb
mov
or
cmpsb
xchg
ret
jae
scas
jg
aam
dec
dec
push
or
in
movsl
add
lods
inc
imul
arpl
adc
push
ror
cmp
sub
xor
out
test
cli
insl
mov
lods
data16
fldcw
mov
testl
push
rorb
pop
lret
fwait
lods
shr
mov
or
xchg
ficomps
push
jbe
es
sbb
and
push
dec
cld
mov
or
fsub
lcall
mov
clc
inc
fsubrl
xadd
add
push
mov
loope
mov
or
repnz
arpl
sahf
ljmp
enter
jbe
jp
pop
cmp
dec
push
test
mov
bound
dec
mov
incb
scas
inc
aam
push
clc
test
lea
jno
call
and
or
imul
push
ds
dec
mov
rol
and
or
xchg
flds
push
arpl
add
adc
sub
inc
pusha
jae
cmp
repnz
xor
sbb
mov
repnz
sbb
sbb
cmc
aaa
push
stos
inc
rorb
subb
in
mov
push
lea
mov
movb
in
push
mov
mov
bound
push
pop
jno
add
mov
jmp
sbb
mov
adc
lret
pop
xor
mov
push
jbe
dec
call
je
mov
pop
mov
inc
addr16
pop
and
sbb
outsb
inc
rcrl
imul
push
enter
insb
arpl
push
daa
sbb
fsub
add
pop
lahf
lea
mov
cltd
in
fbstp
stos
fsubs
data16
sub
cmp
adc
lret
repnz
mov
adcl
mov
mov
outsl
popw
leave
or
xchg
and
movb
idivb
das
push
out
sbb
pop
cmp
cmp
push
fsubl
jnp
mov
int3
lret
xor
ds
adc
fisubs
mov
mov
or
shrl
jns
popf
push
orb
clc
cmp
test
outsb
cmp
push
dec
movsb
imul
cmc
sbb
clc
jmp
fcomp
std
movzwl
dec
nop
imul
jbe
push
popf
ret
shrl
push
push
mov
adc
sbb
sub
xchg
push
pop
inc
mov
jl
test
or
sub
lret
sti
xor
and
out
jo
stos
push
pop
andl
pop
and
sbb
imul
shlb
test
loop
mov
mov
pusha
inc
and
ljmp
dec
repz
aad
pop
xchg
lret
fistpl
rol
mov
roll
jbe
ret
pop
pusha
push
cmpb
cmp
repnz
add
mov
stos
push
fldl
pop
mov
lret
cmp
testl
push
lret
psllq
stc
inc
mov
cltd
sub
faddl
push
movsl
jne
add
and
incl
out
gs
in
popa
jnp
jl
adc
push
fdivs
xchg
push
mov
frstor
adc
dec
in
adc
xchg
leave
xor
les
stc
sub
iret
and
movsl
mov
iret
mov
jp
pop
leave
lcall
rorl
xor
out
mov
jns
adc
ljmp
icebp
adc
mov
jle
cld
sbb
hlt
and
jno
push
push
push
dec
pop
mov
fcoms
xor
and
test
xor
add
xor
call
cmc
leave
xchg
or
mov
aaa
mov
sahf
mov
cmp
rolb
add
aaa
loope
add
iret
and
pusha
lahf
fisttps
add
sub
adc
gs
fnclex
loop
movsb
push
and
mov
cmp
mov
loope
adc
or
sub
in
and
ret
pop
and
push
pop
mov
sahf
push
rcll
neg
pop
ds
cmp
jmp
lods
test
and
jecxz
repnz
add
fcmove
sub
addl
add
pop
or
fdiv
mov
adc
outsb
sub
test
stos
rcll
xorb
pop
icebp
lret
push
cwtl
add
push
add
mov
in
and
xor
mov
sbb
imul
in
aaa
stos
mov
mov
jp
lea
cmpsb
push
push
xchg
je
imul
xchg
sbb
mul
stc
mov
and
push
adc
lock
and
xor
inc
mov
mov
cmp
movsl
addr16
int3
pushf
xor
shrb
xchg
pop
icebp
add
sbb
rol
jne
dec
jecxz
sub
sbb
mov
push
and
sbb
rclb
notl
stos
mov
sbb
out
add
pop
push
lds
push
xorl
rorb
scas
lds
xor
inc
pushf
push
xchg
mov
shll
ret
ljmp
mov
insb
add
mov
add
and
jge
add
pop
ja
jle
outsl
dec
push
lcall
loopne
cmp
pop
sarl
pushf
add
iret
ds
arpl
lods
adc
add
push
ret
mov
dec
pop
jns
xor
shll
sarl
cs
loop
and
xchg
mov
mov
xchg
aam
pop
ret
mov
test
and
push
in
lods
mov
mov
dec
arpl
mov
adc
sbb
push
or
notl
sub
out
int
pop
xor
leave
rcrb
test
out
adc
cwtl
test
sub
sahf
cmp
push
mov
stc
inc
pop
fnstsw
xor
mov
inc
xchg
incb
aaa
and
push
cltd
orb
pop
or
push
clc
fwait
stc
out
or
insl
imul
insb
dec
aad
repnz
push
mov
and
mov
push
sub
call
push
clc
outsl
or
add
pushf
popf
aaa
jecxz
add
jge
push
push
fwait
pushf
das
fisubl
mov
outsb
cmpl
lahf
xchg
js
popa
xor
mov
add
insb
jge
int
inc
js
jbe
dec
clc
lret
cltd
mov
fldenv
or
mov
test
data16
inc
loop
ret
int3
pushf
jecxz
mov
xor
lret
mov
cld
test
cli
mov
icebp
call
or
mov
xchg
loopne
push
cmp
inc
adc
mov
in
sub
int3
sub
mov
fildl
dec
arpl
inc
out
add
fistl
cmpsb
sbbb
pop
inc
cmp
mov
scas
test
imul
mov
xchg
push
jg
arpl
fcompp
int3
ret
inc
test
push
sbb
imul
xchg
pop
movsl
out
push
les
cmp
dec
xor
mov
inc
fsubrs
jmp
mov
movsl
push
stos
pop
divl
aad
pop
test
cmpsb
push
neg
inc
in
outsb
fidivrl
test
mov
or
stos
cmpsb
inc
or
mov
iret
add
fimull
lea
xchg
out
cmp
ss
xchg
fcom
in
mov
sbbl
daa
xor
not
arpl
dec
mov
loop
mov
mov
insl
jae
push
pop
lea
or
xchg
sbb
pop
or
mov
rcr
sub
pop
dec
stos
xor
imul
xor
pop
xchg
aad
fadds
ds
mov
sbb
add
pop
test
out
lea
icebp
sub
jbe
hlt
fdivs
int
mov
and
std
push
cli
cmp
lock
sub
pop
adc
iret
inc
int
movb
pop
xchg
push
push
dec
sub
pop
ret
jmp
mov
jp
mov
fimull
shll
and
add
xchg
cwtl
fcoml
jl
mov
lods
cmp
push
out
pop
insb
lods
ret
sub
std
mov
stos
clc
jbe
mov
jno
and
jmp
mov
mov
lds
das
sub
call
mov
sub
xor
mov
jns
call
stos
fucomp
sub
sub
jae
or
ficoms
mov
push
in
iret
mov
add
shll
add
pop
lds
mov
pop
addr16
js
scas
rorb
call
in
cmpsl
mov
rclb
incl
cli
jl
enter
add
pop
mov
inc
jge
loopne
xor
pop
pop
cs
aaa
out
das
dec
cmp
mov
int3
pop
imul
fiaddl
pop
push
cmp
push
lahf
bnd
pop
outsb
loope
in
push
sbb
cmp
sbb
std
xor
cltd
jne
not
jg
cmpsb
mov
xchg
sub
sbb
call
stos
repnz
cmp
test
mov
addl
out
enter
add
les
sbb
pushf
fwait
dec
iret
xor
cmpsb
adcl
jg
mov
lds
cmc
fldl
mov
addr16
xlat
jmp
andb
outsl
adc
jno
push
movsb
mov
push
or
cmp
bound
jne
jge
push
out
pop
push
cmp
inc
in
push
cwtl
or
aaa
js
mov
xchg
push
or
fists
cli
lock
pop
jb
and
push
es
inc
fdivl
dec
ret
push
mov
popa
xchg
pop
andl
les
faddp
aaa
call
and
push
and
in
jmp
ds
xchg
jbe
jl
mov
pop
jno
cmp
out
stos
shll
mov
xor
cmpsb
pop
ret
iret
sti
mov
loopne
stos
push
subb
and
in
scas
lock
mov
xor
hlt
pop
mov
outsb
or
pop
or
das
jmp
fistpl
mov
loop
or
pusha
lods
push
imul
adc
adc
lea
jge
push
test
lret
movsb
mov
push
adc
xor
ss
and
cmp
test
inc
mov
lods
lahf
xchg
mov
adc
xor
sahf
push
mov
push
addr16
mov
cmp
xchg
pop
mov
sbb
in
daa
push
xor
xor
xchg
lret
xchg
push
sub
mov
sub
js
sbb
jnp
mov
jae
sahf
in
pop
scas
cmp
insb
lahf
lods
jne
xchg
pop
mov
lock
push
adc
adc
pop
das
cli
pop
clc
add
nop
testl
in
pop
inc
or
out
enter
jmp
inc
rclb
fisttps
sub
daa
xchg
dec
insl
fcoms
out
js
stos
out
push
mov
lods
adc
in
mov
jae
sahf
xchg
dec
or
scas
fs
inc
jge
jg
push
imull
sbb
jbe
dec
jne
mov
sub
push
inc
mov
and
pop
mov
fldz
jp
fdivs
xor
push
imul
test
int
inc
push
rcll
cs
repnz
push
iret
sub
jb
cmp
cmp
les
adc
mov
mov
fcmove
sub
and
incb
or
fists
mov
mov
daa
das
pop
repnz
fsubl
push
or
or
mov
mov
and
in
dec
or
xor
xchg
pop
and
jnp
test
sub
stc
fsubrl
addb
inc
das
test
aaa
icebp
or
jbe
jns
push
rcrl
sub
push
mov
fbld
sub
push
and
mov
aas
aam
test
mulb
fldenv
adc
fisubs
mov
xlat
cs
imul
imulb
cmp
rcr
push
sarb
movsb
outsl
xchg
pop
jb
out
lds
or
into
and
or
shl
cli
push
test
arpl
lods
and
adc
std
mov
aas
ret
cld
mov
insb
push
push
pop
hlt
push
imul
addr16
dec
xchg
cmpl
mov
cmp
sar
jns
out
call
fbld
push
mov
xchg
jno
aaa
out
pop
inc
push
add
std
jae
fisubrs
orb
push
leave
sbb
pop
sbb
inc
cmp
push
out
cltd
pop
mov
or
int3
dec
icebp
mov
rcl
stos
push
fxch
push
mov
mov
std
les
lods
mov
mov
mov
add
push
mov
push
dec
mov
add
jge
mov
add
faddl
jmp
push
push
cmpsl
mov
push
dec
dec
addr16
mov
movsb
push
into
cmp
rorl
int
out
call
daa
mov
inc
test
jo
adcl
or
leave
aad
pmulhw
ljmp
es
sahf
int
adc
inc
in
pop
je
inc
stos
push
mov
out
outsl
mov
hlt
int
push
inc
stos
cmp
add
rcl
call
imul
jbe
mov
cmpsb
rcll
pop
push
sti
or
popf
mov
mov
push
aad
aas
dec
sti
inc
push
xchg
in
hlt
jl
fsubrl
mov
imul
ss
mov
stos
inc
jecxz
mov
rclb
sub
imull
popf
sbb
lods
adc
mov
fwait
xor
and
and
lock
dec
dec
jo
dec
and
push
mov
xor
mov
and
add
ljmp
sahf
imul
mov
pop
fstpl
addb
call
cmpsl
aam
mov
pop
les
orl
pop
ss
loop
cwtl
pop
adc
in
cwtl
jp
mov
shlb
sub
sub
jmp
pop
mov
adc
cmp
xchg
add
stc
push
push
pop
pop
and
cld
add
or
roll
jae
dec
inc
inc
mov
cld
xorb
mov
icebp
adc
pop
aaa
jl
clc
ds
inc
sub
xchg
xchg
sbb
add
push
push
sti
xchg
cmp
pusha
mov
pop
out
mov
xchg
ret
push
lock
std
mov
push
xchg
int3
decl
mov
fdiv
int
jb
xlat
mov
hlt
popf
add
mov
int
and
xchg
push
lret
mov
mov
dec
mov
dec
bound
das
cmp
xlat
add
dec
push
lods
xor
adc
or
cmp
inc
jns
sub
cmp
movsb
js
xchg
pushf
mov
pushf
loopne
xchg
movsl
sarb
ja
repz
xchg
adc
mov
inc
test
out
ljmp
lea
cmp
mov
fmull
orb
mov
cmpsb
push
repnz
hlt
xchg
mov
push
fcmovne
pop
pusha
add
mov
test
loop
ja
cmp
das
pop
sub
movsb
loop
sbb
aas
les
ljmp
ss
or
std
or
in
pushf
and
jae
sahf
out
adc
sub
fcmovb
imull
sub
jns
xchg
xor
repnz
aam
mov
ficompl
dec
lcall
cmp
aam
cmpsb
loopne
or
dec
xchg
cmc
in
add
xchg
int3
ja
inc
jmp
mov
add
pop
ja
xor
imull
jb
int3
dec
and
jge
outsl
out
xor
cmp
cmc
rol
dec
out
int3
clc
dec
fidivrs
and
loopne
mov
pop
sub
mov
push
mov
jg
das
xchg
data16
dec
jnp
mov
js
jmp
bound
and
or
cmpb
xlat
mov
mov
add
es
leave
std
push
lahf
sbb
cmp
sub
shl
adc
fbstp
cmp
push
rorb
mov
inc
pop
sub
hlt
es
scas
dec
in
inc
cmp
and
shl
inc
int3
cld
dec
dec
mov
xchg
imul
test
or
inc
push
and
mov
sbb
out
push
das
in
sbb
dec
xchg
dec
outsl
aad
add
xor
jne
imul
jge
cmp
sub
sahf
mov
out
mov
xchg
stos
sbb
push
sbb
mov
cwtl
and
adc
repz
je
jbe
adc
shlb
or
shrl
ja
es
push
xchg
sbb
adc
or
inc
mov
cmpsl
or
push
mov
push
in
test
shll
fwait
jecxz
cmpsl
insl
aam
fucomi
xor
inc
mov
adc
push
in
mov
out
xchg
andb
inc
pop
jb
push
mov
xchg
xor
sub
jb
iret
push
push
cltd
add
mov
cmc
push
sub
jge
fimuls
loopne
aam
xorb
mov
xchg
rcr
sti
fmul
pop
rcrl
das
loope
mov
mov
data16
movsb
in
jl,pn
push
xorl
ja
dec
mov
aas
inc
in
mov
arpl
fildl
push
cmp
in
or
adc
push
pop
lea
data16
or
lds
adc
adc
fildl
psrlw
add
enter
fs
adc
or
mov
pop
sub
rcrb
iret
fsin
mov
jb
xchg
or
mov
popfw
xor
adc
outsb
scas
lock
lds
xchg
mov
jno
jae
dec
jg
and
pusha
mov
in
in
xor
dec
jmp
sub
mov
jg
decb
hlt
es
mov
leave
push
pop
push
movsb
push
or
aam
lcall
imul
jns
cltd
inc
fisubrs
hlt
aad
arpl
sbb
dec
out
mulb
aaa
push
jo
mov
cmp
push
jg
cmp
mov
jns
mov
es
jnp
lret
dec
addr16
out
inc
push
bound
popf
mov
test
pusha
inc
inc
xchg
insb
push
je
xchg
dec
and
pop
cli
xchg
pop
fcmovnb
movsl
rcrb
rcrb
lods
xchg
sbb
rcll
xor
inc
jno
mov
mov
mov
popa
scas
pop
sbb
icebp
inc
hlt
sti
sub
mov
mov
and
and
cltd
jo
mov
loop
jbe
das
cli
sub
mov
mov
inc
pop
mov
dec
clc
and
mov
push
hlt
insb
mov
jp
and
lret
add
mov
xchg
cltd
stos
test
xchg
fcmovu
bound
push
fs
fildll
sahf
xor
adc
sbb
push
push
stos
aaa
pop
adc
fldcw
mov
pop
divb
xor
adc
test
daa
repz
mov
shrl
xchg
dec
mov
dec
insb
iret
mov
jo
fcoms
dec
dec
and
rcrb
or
in
and
push
add
aam
cwtl
jmp
pop
push
pusha
lods
mov
inc
dec
stos
pop
divb
push
aaa
xchg
xchg
stc
push
and
mov
cltd
xchg
shl
aas
mov
mov
jo
sti
inc
dec
and
and
xor
jge
mov
mov
jo
mov
out
push
cld
dec
loope
xlat
xor
dec
aam
inc
dec
sbb
jge
pop
aad
into
das
jae
push
jmp
mov
enter
and
mov
mov
int
mov
ret
pop
push
nop
xor
push
add
xor
imul
pop
out
jo
push
cmp
sub
sub
xor
ror
mov
jl
adc
inc
in
inc
clc
and
punpckldq
loopne
test
in
mov
jne
pop
loop
leave
imulb
xor
adc
dec
mov
mov
jae
push
cwtl
popa
outsb
push
pop
inc
lcall
push
or
arpl
insl
jbe
les
into
pop
fs
pop
cmp
shll
test
and
xchg
int
sahf
pop
cmp
push
dec
jno
jp
pop
dec
fs
jle
ret
xor
sahf
sub
mov
imul
sti
in
push
xor
cld
xchg
aas
mov
xchg
test
dec
pop
pop
mov
fstps
pop
in
cs
sbb
xlat
movsb
negb
lret
pop
fstpl
ljmp
adc
inc
loop
sbb
pop
cli
enter
aaa
in
lret
outsl
cmp
test
popf
pop
pop
push
xor
jge
push
mov
xor
xchg
fsubp
xor
dec
xlat
int
popf
test
add
add
mov
es
arpl
sbb
ret
xor
leave
ret
dec
jl
iret
iret
rol
sbb
xor
fiaddl
std
cmpsl
dec
inc
push
mov
push
insb
mov
jno
inc
aad
ret
xchg
mov
outsb
sub
sub
es
adc
pop
mov
insb
pop
mov
inc
mov
popa
cmp
cmp
mov
add
cmp
cmp
mov
movhps
sub
pop
add
pop
jo
fimull
jge
mov
std
test
aad
sbb
push
mov
lcall
push
fwait
addr16
leave
xrelease
or
rorb
jo
jno
shlb
fidivrl
pop
jl
pop
xor
jb
xor
sub
xbegin
mov
jg
cmc
adc
jno
lret
in
in
mov
or
pop
out
or
xchg
fidivl
push
ja
mov
sub
dec
cmc
shrl
mov
push
scas
jecxz
dec
addr16
cmp
in
lds
sbbb
sbb
cmp
jne
push
jne
dec
jne
out
lods
rolb
stos
ds
jmp
cmp
xor
aam
sbb
sti
cmc
pop
xor
mov
mov
ljmp
cli
and
insl
xor
jle
into
shlb
subl
das
push
out
cmp
cmp
cld
in
lods
mulb
bsf
ret
in
cmp
leave
dec
jo
xchg
ficompl
fs
dec
cmp
and
cmp
test
and
mov
jbe
jnp
add
test
icebp
fcom
add
xlat
mov
addr16
aas
aam
adc
pop
int3
adc
cmp
pop
std
mov
cmp
mov
fs
cmp
cmp
add
jno
aam
sbb
stc
dec
jmp
mov
inc
mov
jecxz,pt
fs
lret
inc
add
mov
mov
sub
adc
or
repnz
pop
add
cmp
and
mov
mov
insb
pusha
mov
ret
andb
mov
fwait
pusha
loop
fildll
jge
imul
cmp
out
mov
outsl
sbb
loope
dec
shrl
mov
adc
shlb
hlt
inc
test
pop
cltd
pop
repz
sti
xorl
iret
xchg
and
mov
mov
idivl
xchg
cmc
insb
bound
mov
push
jbe
xchg
cmp
outsb
ja
mov
loopne
add
aam
popf
inc
push
mov
loope
sar
mov
lock
inc
in
call
mov
cmpsb
aad
adc
dec
mov
into
popf
push
add
popf
mov
pop
pop
hlt
inc
xchg
jle
push
sub
add
pop
pusha
or
rcll
dec
add
jmp
es
bsr
xchg
add
jno
dec
mov
mov
mov
mov
mov
jmp
addr16
adc
imul
and
and
jecxz
xchg
in
inc
push
and
xorb
clc
in
rcr
hlt
lret
push
push
sub
mov
sub
sbb
rorb
lcall
inc
repnz
sarl
add
stos
rol
shrd
sub
mov
shlb
shrb
lods
lret
outsl
hlt
xchg
pop
push
popa
jle
cmp
mov
sbb
int
dec
push
add
sti
jbe
xchg
js
clc
enter
inc
sub
inc
and
popa
outsl
iret
add
sub
faddl
pop
ss
jge
cltd
dec
notl
test
mov
stc
xor
push
pop
push
rcll
push
mov
mov
scas
fldl
enter
add
ret
jecxz
pusha
dec
mov
mov
sub
inc
sbb
inc
mov
call
mov
inc
std
push
xchg
gs
stos
aaa
sub
out
int3
stc
mov
lret
mov
nop
pushf
xor
das
adc
ljmp
jl
lock
pushf
jnp
out
jne
or
jbe
pop
les
push
in
scas
idivl
out
call
push
cld
and
js,pn
in
dec
and
push
outsl
inc
xor
jl
les
shl
mov
mov
jne
imul
jge
push
mov
jo
xchg
sbb
sbb
rorl
fistpl
jo
adc
in
push
push
ss
inc
pop
out
adc
iret
jo
lea
mov
push
daa
js
mov
adc
mov
popf
out
sbb
arpl
dec
movsl
faddl
test
xchg
aam
repnz
push
mov
jecxz
push
cmc
cmp
inc
sbb
pop
pop
daa
imul
xor
mov
mov
and
xlat
inc
imul
ds
loope
out
popl
in
jae
dec
es
mov
mov
jns
adc
ja
or
aas
movsb
xor
cmp
std
sub
ja
mov
xlat
and
push
shll
out
cmovge
mov
mov
adc
jmp
pop
push
jno
repnz
inc
push
fbstp
dec
in
shrb
in
jle
testb
mov
push
or
mov
movsl
int3
sahf
fdivs
mov
pusha
adc
gs
cwtl
fs
push
fmul
sub
mov
pop
ret
mov
cmp
out
test
mov
inc
mov
loopne
xchg
push
add
jmp
lret
mov
push
xor
test
pop
jle
pop
inc
nop
pop
out
std
or
push
rorl
or
jnp
fisubs
fsubs
mov
mov
dec
add
pop
push
push
stc
push
or
shll
popf
mov
push
push
js
scas
pop
arpl
dec
mov
mov
scas
add
lods
lret
or
outsb
lret
and
push
jg
mov
addr16
jge
fistpl
mov
movsl
inc
cmovb
adc
jnp
and
ficoml
icebp
push
idivb
jecxz
imul
mov
jno
adc
inc
loop
inc
or
lahf
adc
inc
inc
out
jg
mov
iret
jmp
adc
add
sahf
mul
lahf
xchg
rol
les
insb
data16
sub
loope
pop
arpl
xor
dec
roll
inc
and
test
dec
sub
data16
push
repnz
outsl
xchg
lock
pop
js
sub
xlat
push
aam
cmp
xchg
pop
dec
int
movsl
out
push
test
or
jns
add
mov
mov
mov
pop
lret
insl
outsb
sbb
call
outsl
movsl
ret
test
addb
mov
dec
jle
cmp
and
sbb
push
test
cli
xchg
pop
xchg
shl
and
repz
and
jmp
pop
inc
adc
arpl
pop
sbb
pop
fsub
or
fiadds
dec
add
andb
in
lock
daa
out
push
arpl
fcompl
test
mov
dec
pop
nop
shlb
mov
mov
movsb
leave
inc
ret
std
jle
add
xlat
fcompl
push
and
ss
xor
lock
sub
addb
jb
hlt
outsb
es
mov
mov
adc
or
fstl
call
test
shl
adc
xchg
add
mov
dec
xor
jne
inc
lret
mov
mov
cmp
lret
push
dec
push
sbb
je
jge
jb
outsl
cmp
jle
mov
popf
push
adc
sub
shrb
sub
outsl
mov
popf
lods
mov
sub
adc
cmp
es
cmp
push
sub
loopne
xchg
test
rcll
push
sub
xor
pop
inc
add
sbb
in
push
dec
and
int3
sti
cli
imul
inc
in
call
clc
mov
mulps
stos
mov
in
int
gs
imul
sub
arpl
ret
xor
out
mov
pushf
mov
popa
lret
insb
or
jg
inc
sub
jo
testl
fsubr
or
movsb
rorl
int3
xor
pusha
sbb
mov
push
sbb
xchg
jg
pop
xor
cmpsb
rcrb
push
adc
mov
and
das
xchg
ficomps
mov
jecxz
or
lcall
sub
arpl
add
pop
mov
xor
mov
hlt
shr
pop
push
lock
inc
adc
test
ret
or
adc
mov
in
dec
test
lods
mov
insl
outsb
sub
pushf
ss
jns
mov
jg
lods
jp
ljmp
fucompp
lahf
dec
push
dec
sahf
std
imul
mov
and
push
data16
mov
push
sbb
ds
push
sbb
pop
dec
sbb
negb
add
es
das
push
xchg
loope
push
cmc
cs
addr16
mov
adcl
mov
mov
rcrl
mov
cmp
sbb
xchg
push
cmpsb
nop
pop
push
lds
jl
jnp
popa
cmp
repz
dec
fdivrp
dec
add
dec
sahf
jg
mov
mov
lahf
out
or
jb
addl
xchg
add
stos
mov
mov
inc
xor
mov
insl
loop
mov
jmp
sbb
mov
mov
lret
xchg
sahf
ficomps
xor
leave
inc
add
xchg
lods
fcmovu
mov
in
sbb
inc
xor
shl
pusha
lret
mov
mov
test
jns
add
fwait
bnd
shl
in
inc
enter
cli
mov
jo
pop
pop
in
test
mov
mov
cmp
cmpsl
push
xlat
insl
loope
inc
or
loop
pop
cmp
sub
xor
addl
mov
pusha
xor
mov
push
and
mov
cmpsb
addr16
das
pop
in
mov
push
push
lods
pop
mov
push
pop
or
xor
push
mov
fiaddl
or
push
mov
dec
xchg
popl
jb
mov
cmp
fs
sti
cs
ja
repnz
insl
addl
dec
dec
cwtl
cli
es
sub
adc
cmpb
xchg
punpcklbw
xor
inc
int3
sub
jne
add
push
pusha
xor
xorl
sti
pusha
push
adc
push
fisttpll
pop
push
sbb
stc
inc
add
xor
dec
mov
mov
outsb
ljmp
add
mov
dec
daa
pop
xchg
jne
cli
and
rorl
ljmp
das
sahf
fcomps
mov
xchg
cmpb
loop
cmpsb
mov
xorb
sbb
add
lahf
lahf
loope
cmc
rclb
mov
inc
aad
pop
outsl
xchg
enter
sub
ljmp
arpl
dec
pop
inc
shrl
and
pop
add
cmp
push
mov
out
cltd
adc
mov
sub
rcrl
sbb
dec
xchg
xor
data16
jae
mov
mov
mov
loop
pop
pop
into
push
jnp
in
int
or
fisubrl
mov
xchg
jo
cwtl
mov
dec
mov
les
ljmp
sbb
imul
pop
mov
and
movsb
push
fwait
mov
lods
pop
mov
add
bound
cmpsb
out
xor
out
je
xchg
sbb
and
mov
jmp
fcoms
cmc
jmp
add
push
mov
and
xor
loopne
outsl
imull
jg
jp
lods
mov
movsl
adc
xor
pop
lock
lret
xchg
mov
es
xchg
imul
fsubrl
cmp
and
aad
rcl
and
mov
ss
push
sub
jecxz
pop
aas
push
xor
jno
mov
pop
cmp
imul
fsubr
sub
stos
shll
rcrb
push
in
sbbl
dec
push
jle
mov
jb
inc
lods
sub
cltd
or
fmul
jl
push
jb
enter
xchg
mov
sti
mov
fcomp
fidivrs
adc
xor
stc
out
sahf
mov
xor
aaa
jecxz
push
loopne
xchg
pop
jp
mov
push
mov
cld
sub
cmpsl
roll
sub
pop
push
popf
ret
mov
les
push
pop
push
pushf
jp
push
add
pushf
xchg
inc
jae
cmp
xchg
es
les
cmp
adc
lock
stc
add
xchg
jle
inc
dec
in
push
mov
outsl
movl
fstpl
hlt
lcall
gs
outsl
pushf
inc
pop
fcoms
jmp
fildll
and
mov
popa
scas
dec
jp
popw
inc
pop
scas
xor
stc
cld
mov
mov
add
mov
in
mov
inc
in
pop
outsb
ljmp
into
adc
je
mov
rorb
shll
inc
lods
cld
inc
mov
jo
jge
and
call
and
xchg
dec
push
adc
and
add
into
icebp
xor
or
push
cli
jmp
addr16
xor
pop
sbb
cmp
stos
into
add
mov
shll
xlat
xor
sbb
in
push
ljmp
inc
mov
mov
bound
cmpb
fisubrl
mov
mov
cmp
push
ljmp
pop
movsl
imul
stc
mov
fsubrl
je
repnz
inc
cmp
mov
adc
lock
pop
mov
push
popa
pop
mov
and
arpl
int3
insb
cmp
jns
lds
ljmp
dec
adc
sub
push
lds
lock
shrb
adc
mov
jecxz
decb
jecxz
push
adc
ja
and
jb
stc
loope
pop
xchg
aaa
sbb
lret
xor
imul
in
in
shlb
insl
sbb
daa
sub
cmp
pop
sbb
iret
sub
adc
imul
loop
aam
sahf
push
or
jbe
adc
dec
jge
xchg
or
push
cmp
dec
adc
adc
sub
mov
xchg
in
cmpb
push
pop
incb
pop
es
push
in
cwtl
and
xchg
xlat
js
loopne
xor
scas
lcall
insl
ret
xlat
jecxz
pop
xchg
cltd
test
enter
jp
or
leave
sbb
clc
add
push
stos
lods
push
and
int
aas
mov
mov
push
cmp
mov
mov
test
sbb
jle
mov
test
fwait
lods
push
or
sub
insb
or
jg
nop
gs
lahf
add
push
mov
xor
pop
add
sbb
cmp
mov
xchg
dec
push
aad
bound
jg
jp
dec
sahf
jmp
mov
lcall
sbb
out
or
imul
and
ficoms
jmp
adc
fisubrs
das
mov
jno
pop
push
pop
and
cmc
js
fs
jecxz
add
das
ret
jne
push
add
jle
push
in
sar
sarb
push
out
addr16
stos
dec
imul
sbb
stc
scas
lods
xchg
and
adc
xchg
add
pop
sbb
aam
je
inc
dec
gs
mov
pop
out
push
mov
mov
inc
sbb
popa
mov
sub
add
lea
sbb
int
or
sub
inc
in
inc
out
cmp
sub
fiaddl
cmpsl
inc
stos
inc
sahf
dec
jp
popa
pop
and
and
mov
gs
ss
test
lcall
inc
neg
in
in
and
sbb
xchg
inc
inc
mov
fisubrl
cmpsl
aaa
add
jp
mov
cltd
pop
push
cwtl
xchg
lods
hlt
lods
cmp
popf
jne
jp
sub
loope
test
jmp
xchg
push
lret
out
shrl
aad
adc
pop
push
fcoml
sbb
imul
cmp
enter
fistpll
pop
popa
ja
pop
loop
lahf
test
stos
subb
insl
pop
push
or
add
and
push
mov
das
fistpll
mov
pop
sub
sarl
add
je
inc
sbb
ret
lcall
xchg
mov
stos
jmp
shrb
faddp
in
mov
add
mov
adc
xor
mov
sbb
inc
test
cmp
outsl
cmp
mov
push
and
push
js
sbbb
fdivp
int3
jge
pop
mov
or
out
arpl
sbb
shld
xor
push
push
jge
enter
sti
scas
loope
push
sbb
push
mov
push
mov
out
cmp
fwait
inc
jge
lret
daa
mov
fdivl
adc
aas
mov
aas
cltd
outsb
inc
popa
scas
pop
aas
dec
or
in
mov
push
data16
jl
mov
std
pusha
sbbb
call
pop
stos
inc
imul
addl
in
dec
push
insb
lahf
xlat
mov
mov
outsb
ret
rcl
mov
mov
jo
adc
test
sbb
push
inc
jp
out
mov
jae
aam
xlat
lock
cmpb
sub
push
dec
push
jl
mov
push
sbb
fsts
sbb
add
dec
sbb
dec
push
ljmp
cmp
adc
or
fucomip
addr16
enter
out
mov
lea
push
push
mov
pop
push
adc
in
cli
push
or
call
mov
arpl
loop
inc
into
inc
out
ljmp
adc
test
push
dec
xchg
pop
jmp
or
pop
rcrl
inc
sbb
or
loope
dec
negb
out
xchg
mov
lret
pop
mov
xchg
mov
dec
lea
lcall
inc
xor
dec
mov
hlt
es
fdivl
ljmp
movsl
adc
sub
lods
jae
inc
cmp
inc
js
fxch
push
mov
imul
sbb
push
cmp
sub
in
lea
adc
stc
scas
sub
insl
inc
arpl
daa
or
adc
xor
rcll
push
sbb
inc
popa
fsubrs
test
mov
orl
aaa
in
inc
into
shrl
mov
mov
xlat
jmp
lahf
aad
pop
push
cmpb
inc
cmp
mov
daa
xor
cld
notb
popa
cwtl
adc
mov
std
out
sbb
mov
in
roll
sbb
pushf
pop
or
sbb
pop
inc
pushf
jl
sbbb
add
fists
lea
out
in
iret
xchg
pop
dec
and
into
mov
mov
mov
movsl
mov
xor
jl
pop
inc
push
dec
push
ret
xchg
dec
iret
lds
mov
pop
stos
xor
jno
imul
mov
sbb
sbb
mov
xchg
inc
xchg
or
cltd
pop
add
push
ljmp
cmp
mov
int
out
stos
pop
and
sub
loop
in
dec
and
lcall
cmp
fsubl
push
xchg
out
cmp
dec
fnstcw
test
ret
inc
cmc
pop
scas
mov
sbb
adc
fwait
mov
loope
repz
out
cmp
into
sub
push
popf
sbb
jb
and
movsb
call
jo
adc
lds
jl
mov
popl
jb
rclb
fmuls
loope
aad
xchg
dec
outsl
xor
test
sub
push
xorl
mov
sbb
mov
incl
out
aam
shrl
fnstcw
gs
ret
mov
scas
fs
xchg
out
push
xchg
in
daa
adc
push
jns
sub
iret
lock
inc
insb
sbb
ret
mov
push
push
mov
cltd
lahf
pushf
mov
xor
push
cli
nop
leave
aad
lcall
js
push
leave
in
inc
mov
js
jl
push
rcll
xchg
push
js
dec
leave
lods
bound
movsb
mov
popa
pop
sahf
into
jne
fincstp
xor
push
lods
cs
faddl
push
and
jnp
jbe
push
cmc
and
idivl
insb
mov
pop
mov
jp
sub
mov
mov
adc
scas
scas
dec
idivb
add
loope
outsl
sti
pop
lods
test
leave
pushf
icebp
xor
cmp
sub
jno
fstl
arpl
lcall
jmp
adc
mov
test
xchg
jl
in
lret
mov
ljmp
push
push
pop
loop
cmp
xacquire
cmp
cmp
xchg
js
lcall
push
mov
fwait
mul
fmuls
int3
pop
es
fnstcw
lret
cmp
movsb
mov
fimuls
push
out
xchg
add
cmp
iret
in
sub
mov
xchg
lret
push
and
scas
dec
mov
xor
jmp
nop
sbb
jb
jecxz
adc
rclb
add
hlt
adc
aam
dec
int
add
int3
lods
stos
inc
pop
cwtl
pusha
mov
add
data16
adc
adc
roll
cmp
testl
out
fisttpll
loope
sbbl
lret
mov
xchg
call
ja
or
js
cmp
jecxz
enter
sahf
push
adc
or
sbb
data16
bound
shlb
xchg
jo
pusha
and
and
add
sub
jno
hlt
jo
pop
sbb
pop
cmc
push
pusha
scas
push
lret
dec
cmpsb
pushl
ret
shr
sbb
pop
sub
cs
pop
stc
imul
and
icebp
push
jle
or
and
add
dec
push
mov
inc
xchg
jmp
or
dec
in
xchg
test
lds
pop
int3
outsb
stc
and
je
add
dec
mov
push
jg
add
into
push
mov
adc
std
jo
cmp
or
pusha
sub
stos
mov
cli
sarl
pop
outsl
push
out
adc
xchg
pop
sub
sub
mov
inc
arpl
sbb
bound
xor
int
iret
lods
xchg
jae
push
mov
sub
xor
stos
or
add
ljmp
cmp
push
ljmp
sbb
out
add
and
lahf
mov
pop
loopne
loop
addr16
shlb
push
ret
sbb
idivl
sbb
int
sub
ret
dec
popa
mov
jbe
in
inc
iret
into
xchg
das
aas
xchg
mov
lahf
js
adc
das
sbb
cli
or
ret
call
leave
lods
dec
fs
pop
enter
add
mov
imul
push
fs
xor
cmp
jp
cmp
ss
adc
nop
stc
pop
loop
nopl
and
test
sbb
mov
clc
push
add
jmp
out
imull
jmp
loop
icebp
sti
dec
ret
out
mov
adc
xor
fsubr
imul
xor
jg
aam
js
dec
jo
xchg
mov
andb
pop
mov
std
ljmp
ret
push
pop
jg
cmp
scas
in
sbb
mov
insl
sbb
xchg
jo
sub
stos
mov
sub
test
enter
into
xor
xchg
cmp
and
jo
push
pop
sbb
or
pusha
mov
pop
mov
add
sbb
adc
sbb
mov
mov
es
inc
pop
call
mov
add
sahf
lret
sub
mov
sbb
test
arpl
pop
xor
push
xor
mov
add
popf
cmp
test
mov
adc
push
imul
adc
cmp
fsubs
clc
orb
push
data16
loopnew
sbb
and
mov
cli
ficoms
pop
cmp
mov
pop
sub
in
jae
das
push
pusha
addr16
mov
mov
gs
mov
dec
dec
or
std
mov
das
lds
pop
rcrb
adcb
cli
mov
test
pop
push
inc
jnp
shr
rorb
nop
addw
mov
pop
jp
popa
dec
pop
sub
push
das
scas
scas
insl
xor
cmc
or
data16
and
cmp
imul
dec
dec
das
rclb
xchg
popa
push
stos
inc
mov
ljmp
pop
shr
or
add
sbb
xchg
arpl
in
outsb
in
jae
pusha
and
jbe
cmp
pop
xor
cmp
aam
push
les
pop
pop
iret
inc
sub
into
inc
jne,pt
subb
lret
rol
sbb
movsl
jg
cmp
inc
stc
mov
int3
test
into
fwait
cs
shrb
scas
xor
outsb
movsb
lahf
mov
loop
sub
jae
push
clc
xchg
cmp
fsub
fbld
in
cmp
pop
mov
int
cmp
add
fstl
push
lret
aaa
stc
and
das
or
cmove
xchg
arpl
inc
ja
repnz
jge
xchg
in
iret
add
movsb
fbstp
jnp
jnp
sarl
cmp
sub
dec
cld
jae
addr16
adc
xchg
ret
mov
cmc
ficomps
imul
mov
std
ljmp
cmp
pop
insl
sub
lret
ret
xchg
cmp
fsubs
stc
sub
daa
aas
jne
lcall
call
inc
adcb
xor
and
fcmovnbe
jecxz
push
mov
push
in
imul
xorb
or
lea
add
int
inc
push
dec
pop
ficoml
lcall
mov
sub
inc
mov
cmp
pop
and
ljmp
jl
xlat
mov
cmp
ficoml
hlt
and
inc
adc
xlat
add
ja
mov
jne
fldenv
aad
mov
mov
scas
jmp
mov
cmp
cld
pshufw
aad
dec
rorb
stos
notl
das
mov
imul
and
fldt
mov
repz
cld
add
push
lcall
fwait
ja
sub
sbb
ficomps
inc
cmp
lods
cmp
dec
mov
mov
rcr
and
xchg
movsl
addr16
sub
or
and
or
imul
mov
pop
icebp
lock
inc
xchg
dec
adc
push
movsl
frstor
lret
xchg
idivb
adc
mov
cltd
clc
or
push
outsl
sbb
enter
inc
mov
and
fmull
popa
mov
test
xchg
outsl
dec
adc
jno
push
pop
add
cmpsb
inc
pop
cwtl
mov
nop
shr
mov
out
les
cli
jnp
mov
dec
add
xchg
jl
ljmp
subl
cmpsl
xor
fwait
pop
dec
dec
fiadds
out
pushf
ss
inc
outsb
std
sbbl
sbbb
testb
adc
cltd
mov
sbb
int
mov
xchg
outsb
jmp
jge
insb
fadd
mov
mov
dec
dec
scas
and
ficomps
lret
dec
shll
inc
xchg
xchg
xchg
push
das
cmpb
inc
xchg
xchg
adc
xchg
pop
jns
mov
inc
dec
out
mov
outsb
pop
push
sub
fiaddl
push
fwait
add
or
outsl
jle
fs
mov
das
push
jns
or
dec
mov
dec
cwtl
fwait
lods
std
orl
dec
ss
cmc
cld
cli
jo
push
mov
mov
add
sahf
cmpsb
or
aaa
lods
jae
pop
lods
stc
bound
arpl
data16
sarb
push
fistpll
pusha
sbb
xchg
fisubrs
insl
and
push
leave
push
stos
shll
pop
out
pop
cwtl
popa
aam
call
mov
aad
jle
pop
xchg
dec
and
nop
stos
fs
mov
xor
icebp
pop
test
mov
ljmp
sub
jge
sub
shl
mull
sahf
mov
push
pop
cmpsb
orl
lds
fcmove
rclb
aad
addl
inc
push
cmp
mov
xchg
dec
dec
das
jnp
aaa
stos
lahf
jae
and
fiaddl
rcr
inc
mov
sahf
inc
pop
idivl
mov
inc
cld
mov
movsb
daa
mov
lds
cwtl
push
es
cmpsb
gs
lret
scas
fs
fadds
dec
inc
jo
popf
stc
sub
sub
or
xchg
or
mov
and
clc
xor
mov
imul
mov
fstl
and
mov
and
sti
in
and
add
mov
pop
stos
push
and
xchg
mov
mov
cmpsb
shl
mov
jle
jns
xor
movl
pop
mov
jle
adc
mov
cld
jle
js
aas
add
mov
dec
das
dec
aad
les
repz
inc
jge
sub
sti
jle
or
test
test
sbb
negl
push
dec
and
pushf
notb
adc
stos
call
add
stos
cmpsl
shll
hlt
cwtl
cmp
cmpl
push
jo
mov
dec
jl
sahf
mov
add
fisttpll
dec
pop
sub
mov
inc
push
adc
les
and
test
pop
orl
cld
mov
adc
out
aaa
sub
xlat
sub
jbe
das
das
cmpsl
insb
push
lcall
es
out
fldt
lret
push
sbb
enter
mov
into
inc
adcl
cmp
mov
fdivrs
sbb
and
add
add
pusha
and
mov
scas
push
cmpsb
aaa
hlt
cli
mov
jbe
dec
imul
popa
movsl
push
lahf
repz
pop
popa
sbb
or
mulb
push
ljmp
xor
ficompl
adc
mov
icebp
sub
push
sbb
inc
xor
ror
dec
insb
enter
cld
out
push
cmp
jge
push
adc
shl
das
dec
pushf
xor
nop
push
add
ret
or
xchg
adc
sub
jle
xchg
adc
inc
inc
call
rorl
xor
sbb
inc
das
or
fidivs
pop
cmp
mov
mov
aaa
subb
jb
xorb
addr16
cmp
cmp
mov
dec
aaa
xchg
hlt
insl
mov
mov
js
repz
sbb
incb
fwait
xor
les
inc
andl
sbb
push
imul
icebp
adc
push
mov
fmull
in
test
and
rolb
ja
gs
out
push
inc
jmp
jg
addb
cmc
lahf
incl
jb
push
xchg
cwtl
dec
sbb
dec
adc
xchg
push
out
je
xor
cld
mov
inc
mov
scas
jno
sti
icebp
add
jb
cmp
test
pop
and
stos
sbb
jo
add
lcall
sbb
xor
jnp
pushf
pop
stos
mov
fs
or
cltd
xorb
cmp
xor
mov
shrl
cli
mov
ss
repnz
xchg
dec
adc
jae
add
lret
data16
neg
daa
fnsave
test
std
mov
inc
and
adc
call
push
dec
in
cld
fistps
lock
pop
and
push
call
xor
notb
push
imull
adc
and
push
cmp
push
mov
pop
and
inc
pop
out
push
out
adc
cltd
jge
mov
rorl
in
int3
sub
sub
sbb
mov
jbe
add
fwait
ret
test
push
mov
mov
data16
push
lret
sbb
jmp
cmp
inc
xchg
jns
pop
or
push
into
sarl
lahf
mov
loope
aam
push
xchg
push
mov
cmpsl
xchg
scas
je
iret
jle
and
addr16
scas
xchg
repz
imul
dec
repz
dec
repnz
inc
push
insl
int
mov
pop
pop
dec
negb
cmp
add
mov
repz
jmp
andl
sub
xchg
mov
xor
call
jmp
mov
mov
and
cmp
sbbl
dec
movsb
xchg
mov
cmp
aad
jmp
xchg
and
loope
fwait
in
lcall
aad
loop
xchg
inc
mov
add
dec
push
xchg
loop
lds
jecxz
cld
dec
orl
int
push
das
jle
mov
mov
fdivrl
sub
mov
or
push
rcl
and
inc
int
sub
and
push
mov
and
dec
push
ss
dec
test
push
mov
xorl
stos
ret
sbb
cmpsb
dec
inc
je
pop
insb
sti
mov
xchg
or
in
faddp
sub
negb
mov
mov
aam
mov
das
js
enter
in
mov
mov
push
pop
push
xchg
and
in
inc
rcr
lret
cmp
xchg
inc
stc
inc
repnz
in
in
and
pop
inc
lea
jge
imul
mov
pop
mov
insl
pushf
lahf
jle
dec
data16
pop
int
mov
sbb
mov
push
insb
in
xorl
mov
hlt
fists
jl
cmc
ds
fisubrl
dec
adc
jecxz
enter
movsl
mov
sbb
pusha
pop
clc
out
cmp
push
xchg
leave
cmp
dec
sahf
mov
or
ret
mov
pusha
cmp
jbe
and
xchg
mov
cli
mov
sub
scas
or
out
pop
xchg
jne
subl
push
cmp
sub
clc
sbb
in
popa
hlt
out
nop
mov
lret
in
fwait
leave
dec
xchg
mov
mov
add
lods
mov
jnp,pn
cmp
jecxz
stos
frstor
xchg
pop
mov
add
mov
pop
xchg
adc
emms
test
sbb
xor
mov
pop
sbb
dec
gs
jp
sub
xor
jmp
jnp
mov
cmp
jae
inc
inc
mov
add
imul
imul
ja
sub
mov
cmpsb
les
adc
cmpsb
lret
out
mov
rcrl
push
xchg
loopne
and
pop
movsb
aam
push
jl
cmp
test
fnsave
push
jbe
xor
stos
test
into
jecxz
cmpsb
cwtl
mulb
jl
xlat
cs
jns
lods
mov
xor
cmc
dec
adc
inc
xor
cmpsl
dec
mov
push
lods
adc
mov
cmp
add
cs
xor
idivb
mov
nop
mov
inc
mov
fsubrl
and
stos
aam
push
daa
cs
rcll
mov
jge
xchg
push
and
push
push
enter
add
xchg
out
xor
stc
iret
push
jne
jmp
inc
jp
call
inc
ret
mov
mov
xchg
out
sbb
mov
test
icebp
test
push
dec
mov
push
ja
jo
cmp
push
cs
pop
popa
lds
push
add
sbb
hlt
adc
nop
outsl
test
inc
push
orl
iret
clc
push
mov
mov
dec
pop
int3
out
pop
mov
lods
in
pop
or
push
adc
enter
int
inc
outsl
lds
push
loope
sbb
add
inc
xor
test
hlt
fnstsw
in
xor
in
aam
jae
movsl
push
gs
outsl
int3
lret
or
aad
cli
pop
subl
inc
cli
out
push
loope
int3
fsubrl
stos
mov
inc
mov
adc
push
add
clc
movsb
sub
lret
in
addr16
pop
daa
inc
cmpsb
ss
mov
andl
dec
adc
aaa
mov
inc
lea
loopne
aas
and
push
test
neg
ja
test
push
adc
cwtl
repnz
and
xor
mov
rolb
push
in
mov
std
dec
adc
pop
fisttpl
loop
jo
jg
jp
stc
mov
test
push
jb
mov
fstp
xor
mov
lods
sub
mov
mov
fidivrl
lret
lock
or
int
xchg
in
and
iret
cmp
pop
cmp
cld
int3
insb
arpl
pop
gs
xlat
jo
iret
sub
and
cli
add
lret
icebp
xor
outsl
insl
xchg
mov
or
fimuls
pop
imul
mov
out
and
into
repnz
mov
jmp
leave
int
cwtl
into
call
jo
lahf
test
std
ja
lock
jno
cli
lock
adc
lock
inc
dec
and
bnd
icebp
dec
lds
add
ljmp
flds
lret
rcl
xor
sub
les
xchg
mov
push
jecxz
push
lcall
xchg
cld
pop
pop
adcl
jg
cmpsl
and
jns
dec
mov
les
subl
pop
aaa
mov
push
mov
push
push
sub
int3
arpl
push
adc
arpl
mov
mov
push
sub
mov
or
lret
in
and
and
fdiv
ljmp
outsb
js
mov
add
cmp
jecxz
push
scas
adc
jne
stos
or
fnstenv
pusha
jge
pop
push
mov
mov
jmp
movsl
in
bswap
rorl
xchg
int
es
les
scas
lahf
nop
inc
subb
xor
fdivl
pop
or
sar
fstp
xchg
clc
push
push
insb
pop
leave
fsubr
mov
test
pop
shll
es
and
jp
jb
inc
and
inc
jno
imul
in
daa
insb
cmc
cld
jns
pop
lret
jbe
cli
std
fistl
add
loope
or
xor
adc
push
repnz
in
mov
lea
inc
scas
stos
sub
add
aas
jbe
fwait
mov
fiadds
push
jge
or
aam
lods
jp
cs
leave
adc
fs
fcomps
bound
aaa
lods
nop
fwait
mov
popa
cli
and
fstps
dec
mov
ds
popf
aas
pop
and
pop
cmp
xchg
roll
fdiv
adc
cmp
or
adc
xchg
stos
fcoml
sbb
push
jo
jns
je
push
into
pop
sbb
jl
cmc
ja
cmc
movsb
aad
movsb
adc
mov
addr16
pop
or
inc
add
or
hlt
stos
fisubl
and
jbe
loopne
outsl
or
sbbb
and
fstpl
shll
jb
int
pop
push
sahf
sahf
push
sub
addr16
cltd
inc
and
jae
or
int3
mov
movsl
inc
scas
pushf
and
cs
add
je
and
cmp
cmp
push
sub
mov
xchg
arpl
sub
mov
data16
insl
xchg
pop
and
xchg
lds
mov
jg
daa
xor
stos
and
aam
cltd
mov
stc
mov
adc
sbb
pusha
push
push
fistl
mov
cmp
mov
or
loope
xchg
scas
sub
pop
adc
push
xchg
popa
addr16
xchg
fcmove
add
jae
leave
jo
adc
lods
inc
pushf
push
in
and
cmp
iret
mov
pop
insl
cld
in
and
js
cli
add
imul
add
pusha
rcrl
adc
repz
adc
cmp
stos
push
push
aaa
cld
mov
lret
pusha
outsl
lcall
jno
outsl
loop
jnp
scas
xchg
cmp
enter
out
lods
mov
pop
cld
xlat
vpaddusb
mov
test
movsb
mov
xor
inc
mov
insb
stos
not
imul
and
lret
sbb
pushf
in
cmp
fs
pop
or
push
cwtl
ror
or
dec
addl
pop
jle
cmp
jge
jae
pop
xor
sarl
dec
movsl
ss
repz
xchg
sub
jg
inc
xor
sbb
pop
clc
cmpl
jnp
cmpsb
or
movsb
js
mov
pushf
sti
sbb
jo
in
add
and
push
sbb
idivb
push
or
cs
cli
fwait
cmp
add
dec
inc
and
sub
mov
mov
cmp
mov
fisttpll
lods
les
sahf
aaa
xchg
out
xchg
mov
xchg
xchg
pop
xchg
adc
pop
test
movsl
sahf
push
mov
outsb
add
and
loope
in
imul
mov
cli
mov
jge
adc
adc
or
test
in
aad
dec
ss
outsl
sbb
ljmp
xor
cmp
mov
jecxz
aaa
add
mov
push
pop
pop
fcmovnbe
sarb
mov
scas
scas
data16
pop
sub
dec
or
dec
into
cmovge
out
push
aaa
xchg
jge
inc
pop
lea
mov
fcoms
inc
mov
mov
roll
out
mov
movsb
hlt
ds
mov
arpl
loop
repz
fldt
aam
cmp
add
loopne
inc
push
dec
jne
sub
jb
sub
lahf
push
scas
test
gs
mov
arpl
adc
js
sub
mov
movsb
jle
rorb
sbbl
jg
fwait
push
jno
sub
aas
aam
shl
js
aas
in
adc
lds
dec
jmp
adc
mov
mov
mov
out
aam
aam
push
adc
ljmp
ss
inc
and
pop
scas
inc
xchg
mov
divl
sbb
mov
std
cmpl
ja
lret
jl
test
mov
sbb
push
in
ja
fdivr
dec
push
insb
cmp
stos
mov
adc
push
add
pushl
pop
out
out
push
int
dec
ljmp
aaa
xor
and
add
cs
ja
neg
int
pop
mov
lods
xor
mov
sbb
mov
xchg
cmp
ja
sbbl
push
xchg
add
idiv
cmpsb
nop
push
movsl
aam
and
shlb
xor
cmp
loopne
loope
dec
into
cld
cmp
repz
xchg
lds
or
xchg
jno
movsl
pop
cmp
fstl
lret
scas
sbb
jb
inc
in
inc
xchg
into
std
xor
xchg
aas
dec
clc
mov
fildl
adc
insb
xor
mov
xchg
and
xchg
push
nop
xlat
sub
or
push
movsb
mov
mov
mov
mov
pop
xchg
stc
mov
pop
fdivrl
or
cmp
pop
movsb
lcall
lcall
popl
iret
rcrl
push
addr16
xlat
shll
lahf
jns
cmp
xchg
iret
push
xchg
bound
lcall
cmp
loopne
jb
xchg
js
xchg
lret
in
pop
test
xchg
loop
mov
push
mov
jg
xchg
lods
mov
out
pop
xchg
inc
fimuls
cmpb
addr16
dec
lret
js
loopne
stc
pop
push
add
pop
sub
xchg
daa
xor
repz
bound
movsl
movsb
or
roll
inc
cmc
push
test
xchg
or
pop
dec
es
pop
lds
and
cmc
xor
or
jp
mov
mov
ds
cld
xor
dec
xlat
sbb
add
pop
ret
call
movsl
push
xorl
mov
add
icebp
dec
in
dec
arpl
insl
aad
push
cmp
insb
fidivrl
sub
push
out
testb
shlb
mov
dec
push
mov
test
cmpsb
ficompl
sub
repnz
notl
and
gs
aaa
scas
dec
scas
cmp
ds
jp
mov
loop
aam
dec
in
and
in
xchg
in
fisubl
into
add
neg
hlt
mov
leave
mov
add
lea
pop
pop
mov
sbb
jg
sub
dec
in
aaa
push
inc
aam
mov
push
xchg
icebp
jne
inc
add
mov
je
pop
fsubl
xor
xchg
in
scas
inc
mov
ret
pop
inc
and
pop
mov
xchg
rorl
adcl
pop
jo
mov
sub
sbb
fsubl
or
leave
mov
movsb
xchg
ss
jb
mov
mov
ret
fcoms
cwtl
xchg
shrb
aad
dec
push
pushf
aad
push
jne
push
pop
ret
in
jle
dec
clc
jns
dec
cmp
push
adc
jmp
imul
push
mov
fs
addb
in
push
mov
cld
cwtl
mov
dec
imul
int
lea
aam
outsl
addl
push
mov
sbb
repnz
popf
mov
pop
testl
js
sti
lods
pusha
fwait
in
std
test
pop
add
xchg
insb
xor
ret
push
dec
fsubl
lret
mov
sbb
in
fldt
or
add
movsb
sbb
xor
cmp
adc
lods
cmpsl
stc
stos
aad
adc
xchg
add
push
dec
cmp
js
ret
fisubl
insl
add
cld
adc
cmp
sbbl
or
decb
ret
mov
mov
loopne
or
xlat
aad
loopne
mov
xchg
dec
lods
out
outsl
sub
jb
imul
xchg
xchg
cwtl
jge
and
and
sub
int
push
cmc
test
mov
inc
or
test
mov
filds
shr
cmp
dec
mov
or
aas
jg
movsb
and
xor
mov
cwtl
ficoml
inc
dec
enter
std
shrl
movl
cmp
adc
aas
orb
pop
int
addr16
ds
hlt
xchg
inc
or
out
jns
shrl
jle
fs
sub
push
dec
cmp
test
rol
incl
adc
arpl
js
bound
outsb
mov
mov
cmp
gs
rcl
outsl
inc
xor
mov
xchg
loope
icebp
and
mov
in
jg
or
gs
sbb
pop
mov
outsl
pop
cmc
int
fwait
xchg
arpl
adc
push
dec
mov
add
sub
mov
cli
xor
inc
add
mov
push
mov
aas
dec
pop
cld
cmp
xchg
mov
shll
mov
in
sahf
mov
mov
adc
xchg
adc
sub
jle
fwait
out
and
aad
sbb
mov
mov
inc
push
pop
imul
sbb
daa
push
pop
pop
gs
push
lea
cwtl
sbb
inc
mov
jo
loop
jle
xchg
outsl
and
in
outsl
push
loopne
inc
push
mov
or
mov
and
xchg
cmp
mov
hlt
fwait
aas
addr16
loopne
cmpsb
jno
push
repz
push
mov
in
push
or
pop
das
out
jecxz
out
xchg
jg
xor
push
jge
dec
jecxz
add
push
cld
sub
xorb
pop
sbb
sub
mov
lahf
add
jle
outsl
cmp
mov
outsl
jmp
mov
sbb
xor
cmpl
push
cmpb
xor
rclb
push
fbstp
push
pop
scas
into
jl
inc
lods
cmp
pushf
xor
and
inc
sahf
adc
hlt
xorb
cmpsl
and
inc
push
xor
fsubr
shr
outsl
add
xlat
lods
lahf
xorb
jp
movb
add
sub
das
sub
sbb
cmp
pop
add
pusha
mov
test
pop
add
pop
and
fistpll
loopne
test
pop
mov
iret
inc
into
dec
or
cmp
inc
arpl
inc
data16
cmp
lcall
outsb
xchg
call
inc
lods
hlt
test
pop
nop
jle
mov
push
and
mov
add
scas
or
add
aam
insb
inc
lods
pop
movsl
mov
orl
push
or
mov
pop
lcall
dec
imul
lods
dec
xchg
fisubrl
inc
sub
xor
imul
dec
clc
jns
mov
and
jle
into
sub
test
mov
out
pop
loopne
mov
cmp
sub
lcall
inc
in
aam
or
sahf
mov
in
pop
scas
xchg
iret
popf
xchg
push
int3
jmp
movsb
ret
lock
jae
inc
bswap
clc
popa
repz
cmp
and
cmp
adc
popf
shrb
pop
mov
jp
push
mov
adc
push
mov
inc
shlb
xor
enter
add
ret
lock
add
adc
cld
cmp
pusha
jmp
bound
out
sbb
mov
ja
leave
xorb
fldenv
push
cld
xchg
pop
cmpsl
or
cmc
inc
mov
adcb
shr
into
jecxz
pop
mov
sub
cli
cs
popa
jle
mov
jns
repz
aam
sbb
mov
cmp
subl
cld
pop
inc
mov
addb
xchg
cli
imul
ljmp
bound
notl
xor
xor
iret
daa
lea
mov
add
dec
mov
ret
mov
xor
ds
fsubrs
repnz
les
shl
mov
adc
adc
dec
pop
jge
jne
std
inc
adc
jp
loopne
lcall
push
xor
cld
aad
mov
push
fstpt
movsl
psubusb
cli
push
jecxz
stos
add
sahf
repnz
push
xorb
xchg
shlb
mov
jp
ds
cmpsb
xchg
or
loope
test
cmp
out
mov
nop
inc
addr16
dec
test
std
icebp
in
fisttpl
mov
adc
lds
mov
and
ret
mov
push
jmp
das
sarl
mov
mov
movsl
fcomps
call
and
orl
push
mov
jmp
mov
mov
frstor
cli
pop
icebp
mov
adc
fwait
inc
pop
dec
mov
pop
sub
jbe
sbb
mov
dec
sbbb
movsl
cltd
sbb
cmp
fwait
cmp
lods
push
rorb
popl
jg
fbld
fcoms
xor
inc
lea
out
and
or
lea
fdivrp
xor
cs
shlb
shll
xchg
pop
shlb
mov
sbb
cmpl
orl
inc
mov
lods
into
call
test
inc
addb
xor
sub
test
mov
add
inc
xor
ret
sub
fcompl
in
sbb
push
add
rorb
and
dec
push
je
xor
push
pop
and
and
hlt
imul
xchg
inc
sbb
decl
fcmovne
loop
ret
subl
pop
enter
push
fs
mov
jge
mov
out
int
push
iret
and
dec
mov
xlat
adc
scas
dec
rorl
mov
xchg
imul
pop
pop
fwait
cmp
lcall
cmp
xor
xor
sbbl
pop
icebp
sub
jmp
bound
fdivrp
ljmp
ljmp
cmp
pusha
cli
mov
fs
fstp
inc
xchg
in
mov
xchg
dec
push
in
in
and
dec
iretw
sti
inc
mov
addl
xlat
jo
cmp
ja
inc
je
fisttpl
ss
imul
xchg
lret
push
stc
sarb
xor
ja
outsb
and
add
mov
mov
cmc
mov
xchg
jmp
xor
bound
sub
addr16
imul
adc
cli
lcall
daa
mov
test
js
push
xor
call
jp
mov
sub
popf
rcll
clc
out
hlt
sub
fs
call
jg
clc
lahf
mov
cld
jp
and
push
or
fbld
jge
dec
adc
movsl
xchg
push
inc
cmpsb
inc
inc
adc
in
dec
imul
xchg
sbb
mov
fidivrl
jns
call
cmp
cmp
xchg
rorb
repz
jmp
jae
mov
dec
xlat
adc
ja
int3
and
shlb
xchg
sub
xchg
mov
xor
andb
jbe
lret
in
lcall
fisttps
sub
daa
xchg
les
mov
out
in
dec
sbb
push
xor
add
in
imul
mov
jmp
push
sub
mov
outsb
dec
mov
pop
add
sti
adc
pop
repnz
out
mov
mov
in
int
pop
out
mov
or
push
std
mov
rcl
and
arpl
idiv
push
fidivrl
test
es
add
ficomps
jb
sbb
sar
push
xorl
jno
test
addr16
cld
pop
cli
jg
push
out
mov
je
xchg
and
shl
and
in
clc
rcrl
arpl
bound
lret
dec
test
inc
out
pop
icebp
sub
push
sub
inc
pop
addr16
xchg
fidivrs
xor
arpl
cmpsl
imul
aad
popa
gs
pushf
lea
lcall
pop
jg
add
mov
jo
xchg
adc
mov
and
fnsave
mov
cmp
imul
iret
add
xchg
mov
push
cmpsl
adc
xor
mov
jecxz
mov
or
push
lods
fldenv
mov
mov
fcoml
push
jle
shrl
inc
lds
movsb
cmc
ds
push
std
pop
sarl
shlb
loop
loop
push
into
mov
loope,pn
icebp
xchg
sbb
andl
mov
cltd
jno
insl
int
inc
repnz
push
lock
jl
push
das
mov
pop
in
fwait
int3
mov
ja
stc
dec
adc
sbb
push
jne
int3
or
and
add
pop
mov
jl
mov
cmp
push
or
lea
jbe
frstor
jge
cs
xchg
data16
cmpl
fdivl
adc
fsubrl
pop
cld
xchg
js
pop
out
xchg
push
mov
pushf
mov
addr16
lret
lahf
ja
clc
sbb
fstpt
ficoml
mov
pop
jo
cmp
push
xchg
inc
hlt
data16
pop
pop
push
push
imul
add
sub
mov
lret
pop
outsl
outsb
mov
sbb
lahf
mov
push
dec
sub
inc
in
inc
fcompl
push
cltd
lods
sbb
iret
lds
ds
inc
rclb
sti
xchg
scas
cmp
or
rolb
fcmovbe
xor
dec
jne
or
push
movsw
das
imul
jmp
mov
shll
movsb
push
pop
adc
sub
cmp
imul
xor
dec
xchg
popa
jp
mov
pop
insl
adc
dec
inc
pop
mov
jo
adc
aad
es
xchg
sbb
add
ljmp
sub
rcll
ficoms
xchg
in
and
or
jo
jae
decl
adc
dec
ljmp
dec
pop
ror
loope
outsl
leave
fs
mov
iret
dec
bnd
movsb
add
xchg
jge
and
data16
push
pusha
jmp
jne
mov
faddl
insl
test
rol
repz
pushf
imul
aas
cmp
mov
dec
pop
push
cmp
sub
mov
mov
int
xchg
vhsubpd
jno
scas
sahf
lcall
jae
imul
mov
rcrl
cmovnp
adc
jo
mov
es
lret
xchg
jo
adc
cmp
xchg
jo
repnz
fidivrl
mov
jp
sahf
mov
sub
mov
cmp
mov
mov
neg
cmpsb
sbb
leave
stos
daa
aam
jp
mov
pop
pop
sbbb
mov
xor
orb
add
leave
add
pop
sbb
pusha
icebp
sbb
mov
nop
ret
or
sti
dec
add
cs
jno
xor
ret
cmp
popa
ljmp
ret
ja
mov
je
add
aas
adc
inc
adc
add
cmp
stos
and
dec
or
faddl
or
dec
xor
push
movsl
mov
xchg
divb
bound
adc
mov
pusha
iret
inc
mov
jae
test
into
ljmp
in
out
fisubs
test
or
cld
push
cmpsl
mov
cmpsl
xlat
push
jmp
in
mov
jns
inc
add
xor
insl
xor
adc
xchg
daa
xchg
or
xchg
xchg
xchg
mov
dec
or
and
test
mov
mov
mov
mov
mov
pop
pop
arpl
sub
mov
jmp
push
clc
push
dec
addl
and
dec
xor
mov
cmp
dec
mov
aaa
jo
inc
inc
dec
shr
enter
sbb
sahf
mov
jmp
ficomps
mov
jg
leave
adc
fwait
ret
jmp
popf
xchg
test
dec
addl
and
sub
mov
and
adc
out
mov
aas
mov
pusha
mov
outsb
xchg
fs
mov
call
xor
lcall
mov
mov
es
xor
dec
test
dec
cmp
test
sub
ds
sub
mov
iret
pop
jno
nop
lahf
arpl
xor
push
push
dec
dec
vpcmpgtw
sub
add
xchg
cmc
leave
popf
out
pop
xor
xor
lea
pop
cmp
jbe
sbb
or
dec
push
push
dec
jmp
and
xchg
int3
mov
cmp
push
cmp
out
jmp
loope
mov
ss
xor
or
std
loop
in
sbb
pop
add
pusha
std
pop
je
inc
aas
adc
fwait
sub
lods
lret
shlb
loop
test
out
clc
xlat
sub
in
idivl
mull
imul
and
xchg
pop
rcll
movb
adc
sbb
movb
mov
ss
push
int3
daa
mov
sub
ret
push
loop
test
add
sub
mov
repnz
mov
sub
repnz
nop
insb
xchg
ljmp
pop
arpl
pop
xchg
jo
test
out
sahf
xchg
pop
xchg
into
cmp
cwtl
xchg
ss
mov
or
adc
and
push
adc
js
jae
int
fnstcw
push
bnd
movl
es
fadd
mov
push
test
addl
jnp
cmpsb
inc
outsb
addr16
ljmp
or
test
mov
add
mov
insb
mov
iret
push
lods
ret
pop
inc
xchg
push
ret
negl
dec
dec
jae
mov
mov
inc
pop
arpl
jge
and
dec
cli
sbb
shll
and
sub
mov
push
xor
xchg
pop
mov
mov
mov
push
outsl
xchg
mov
dec
mov
mov
cmp
insb
mov
mov
out
cwtl
pop
lea
and
aaa
pop
popa
or
inc
mov
mov
mov
iret
fnclex
repnz
js
xchg
dec
mov
test
iret
mov
hlt
lret
scas
sbb
test
push
xchg
inc
nop
mov
sub
or
sbb
sub
pop
and
pop
enter
in
iret
mov
jg
xor
push
fstl
pop
mov
bnd
push
test
push
or
xor
mov
aas
insb
adc
adc
loopne
inc
sti
mov
mov
adc
or
inc
cmc
sbb
cmp
or
add
xchg
add
cmp
cmpsb
pop
inc
mov
insb
pop
out
inc
pop
cmp
cmp
and
pop
add
cmp
lds
fxch
push
inc
push
jne
mov
xchg
cmp
jnp
mov
mov
shr
push
jmp
sar
aad
repz
jp
push
mov
das
dec
push
mov
out
cltd
enter
mov
cmp
sbb
out
xor
es
in
insb
dec
jb
leave
idivb
xor
std
add
popf
popf
mov
add
push
jmp
aaa
pop
pop
rcrb
pop
fs
bnd
outsb
out
lods
lret
and
pop
ja
mov
nop
stos
xor
pop
mov
int3
imul
and
arpl
fisubl
ljmp
stc
arpl
xchg
xchg
mov
lret
jecxz
dec
mov
adc
into
std
add
clc
xlat
ret
in
pop
and
adc
ljmp
push
arpl
jo
inc
xlat
cld
movb
stos
add
notb
inc
jb
cmpsb
movb
out
pop
bound
sbb
lret
and
and
mov
scas
cmp
push
aam
nop
add
push
movsb
dec
dec
and
clc
xchg
xchg
je
xchg
outsl
imull
cmc
and
xor
jp
fldl
dec
cmp
xor
pusha
clc
push
wbinvd
iret
mov
stos
jecxz
mov
jns
mov
ja
lahf
dec
pushf
dec
lahf
add
xchg
pusha
mov
dec
push
mov
cs
push
dec
test
xor
and
scas
lock
fcompl
xor
mov
jl
outsl
adc
jns
ss
ljmp
aam
ss
mov
stc
dec
mov
mov
aam
cmp
sbb
mov
ret
adc
scas
pop
out
xor
notl
mov
push
int3
ret
loop
fwait
pop
mov
add
push
mov
jbe
mov
movsl
push
repz
rcl
xchg
or
lock
aaa
scas
mov
outsl
idivl
mov
pop
rcll
pop
jp
popf
lcall
mov
adc
loope
inc
popa
xor
fdivl
sub
sub
pop
dec
out
xchg
popf
push
push
test
or
ficoml
push
mov
int3
cmc
and
mov
arpl
out
sbb
leave
xchg
inc
movsb
or
mov
and
pop
movl
xchg
out
sbb
jo
cmpsb
sub
dec
and
cmp
pop
jae
inc
adc
cwtl
sub
mov
pusha
lcall
je
pop
mov
fs
into
jmp
and
lea
mov
sub
lahf
mov
cs
jns
mov
mov
sbb
fwait
loopne
mov
and
notl
insl
xchg
rorb
jae
xor
js
pop
ret
rcl
or
pop
rorl
jno
stos
shll
add
adc
push
fistpll
mov
xor
inc
lret
cmpsb
loop
fnstcw
loopne
sti
ret
jno
adc
inc
icebp
lea
dec
pop
jne
dec
movsl
pop
push
xor
stos
jns
push
xor
and
inc
ret
adc
xchg
mulb
jecxz
xor
adc
lods
arpl
rclb
or
icebp
aas
and
pop
dec
add
sti
data16
test
outsb
hlt
pop
fwait
jae
jb
sti
out
pop
leave
and
or
inc
dec
or
xchg
xchg
dec
mov
mov
in
lock
mov
add
dec
jg
scas
imull
inc
xchg
rolb
pop
lds
pop
mov
mov
push
add
inc
mov
mov
dec
lcall
cmp
dec
ja
fiadds
xchg
push
push
int3
or
mov
lea
mov
ficoms
out
dec
call
cltd
pop
mov
cmp
dec
fisubrl
mov
pop
xor
dec
xchg
pushf
jl
leave
or
or
mov
call
and
cmp
repz
push
xchg
cmp
es
fnstsw
insb
into
jl
sub
jg
dec
inc
dec
fs
xor
mov
data16
orb
xor
jle
lock
sub
ja
mov
jae
jmp
lret
dec
into
cltd
cmp
pushf
sub
xchg
xchg
sbb
in
imul
jge
pop
adc
mov
loop
jbe
ret
pop
dec
dec
sub
cmp
and
pop
hlt
and
add
int
outsb
pop
lods
jne
scas
fwait
mov
mov
push
push
jecxz
pop
cmp
repnz
or
mov
imul
sbb
add
pop
pop
jo
shrb
or
neg
cmc
add
inc
addr16
ss
and
test
jbe
repnz
jns
xchg
imul
jecxz
xchg
mov
outsb
adc
outsb
or
xchg
and
inc
rcll
dec
popf
add
inc
push
pop
mov
test
push
test
inc
call
lods
mov
lods
xchg
xor
or
mov
out
les
int
pop
jno
bound
push
jno
int
outsl
jns
jp
jne,pn
outsl
add
imul
hlt
int
xchg
arpl
cmp
cmc
xchg
in
jg
lods
xchg
jge
in
lock
adc
sarb
cmp
rolb
fildl
fwait
cwtl
cltd
ja
cmp
jno
cmp
xchg
test
adc
shlb
int3
adc
sbb
scas
cmc
cmp
jne
aad
insb
dec
rorl
cmp
mov
jno
outsl
jp
test
fcmovb
dec
xchg
subl
shl
imul
popf
fnstsw
mov
outsl
dec
ds
insb
into
stos
fistpll
jge
cli
test
sbb
fstl
into
nop
inc
subb
mov
inc
mov
mov
mov
pop
inc
adc
mov
pop
sarl
jecxz
add
lret
cltd
lods
jl
jle
fimuls
sub
aaa
loopne
push
lods
leave
ljmp
js
sub
or
decl
mov
jns
or
push
shlb
fidivrs
inc
mov
clc
inc
and
popf
or
lret
gs
sbb
negb
bound
stc
adcb
sub
shl
jl
pop
mov
lcall
mov
repz
std
mov
mov
das
pop
mov
or
jle
inc
fimull
xchg
iret
add
push
mov
divl
add
xor
mov
lds
xchg
or
shl
insb
dec
or
dec
xor
sub
xor
mov
push
nop
push
xor
add
pop
mov
jmp
jle
fdivs
dec
cmpsb
lods
data16
sub
mov
inc
mov
add
xor
cmp
icebp
stos
sbb
jp
mov
outsl
out
sub
imull
ljmp
jecxz
inc
call
mov
jb
cmc
insl
or
lods
pop
iret
pop
shr
ret
xchg
and
pushl
add
shrl
push
push
pop
mov
loope
stc
in
xchg
scas
add
sub
adc
in
fstp
inc
cmp
mov
xchg
xchg
push
fisttpll
lods
mov
lock
hlt
cld
xchg
test
xchg
push
xchg
ljmp
scas
pop
mov
pop
aaa
ds
push
add
push
neg
mov
insl
dec
dec
jno
sub
sbb
add
pusha
js
pop
loop
daa
imul
enter
lcall
aaa
or
rorb
roll
push
push
movsl
xchg
popf
dec
xchg
xchg
sti
mov
or
adc
pop
and
mull
lret
cmp
aad
into
ss
shr
mov
and
lret
imul
mov
jmp
xor
icebp
add
je
pop
pop
aaa
fstl
cmp
cmpsl
cmp
sbb
push
adc
fcompl
rolb
inc
into
cmpsb
add
xor
inc
jne
add
push
push
ja
cmp
cmpsb
test
xchg
jg
sbb
cmc
inc
mov
in
js
popf
jno
and
inc
ljmp
add
lret
push
sub
and
jbe
sbb
ficoms
test
sbb
sub
mov
stos
addr16
lcall
add
pop
or
or
pmaxub
jge
inc
fildl
xor
adcb
cmp
add
movsl
fcomp
xchg
lret
mov
inc
inc
push
add
icebp
xchg
nop
loop
movsb
inc
xor
nop
mov
and
dec
stc
adc
jmp
scas
mov
test
jmp
adc
xchg
mov
push
inc
les
fcmovnu
cmp
test
test
outsb
cltd
icebp
cmc
aas
sub
inc
xlat
scas
or
pop
jne
xor
je
test
pop
iret
je
scas
push
data16
and
out
mov
dec
enter
xor
pop
or
fldenv
mov
sub
popa
lahf
mov
pushf
mov
jo
fmul
mov
testb
test
std
js
mov
fs
cltd
out
cli
cmp
inc
mov
popa
fidivl
xor
or
and
cwtl
hlt
xchg
sbb
loopne
xchg
daa
dec
inc
xchg
std
int
inc
dec
pop
icebp
xchg
test
ret
add
sbb
mov
mov
scas
inc
sbb
pop
add
outsl
loop
bound
ret
bound
out
adc
ret
inc
push
lret
xor
lods
adc
cmp
jo
add
outsb
ficompl
into
hlt
aam
dec
daa
xabort
loope
imul
repnz
xchg
pop
shrl
aam
and
out
jp
out
sbb
test
mov
addr16
into
mov
push
pusha
mov
rcll
andl
cltd
jnp
out
mov
xlat
cmp
mov
jecxz
aam
cs
fsubrs
add
push
mov
jecxz
add
ldmxcsr
mov
push
enter
mov
std
mov
es
and
cmc
jae
cmp
test
sti
add
push
repz
cmpsb
mov
jge
jbe
jns
setbe
frstor
enter
push
into
jmp
inc
pushf
sbb
jp
mov
mov
pushf
in
adc
pop
and
mov
sbb
fstl
faddl
xor
mov
jmp
mov
mov
mov
lret
dec
cmc
das
pop
inc
and
or
inc
cmpl
dec
push
cmpsl
or
je
std
mov
hlt
inc
out
push
sahf
outsl
loope
pop
enter
sub
cs
or
and
negl
mov
sahf
cmp
sub
inc
push
sahf
roll
or
fldl
fdivrp
sub
stos
sub
hlt
mov
jle
imul
xor
cmp
cmp
les
pop
dec
call
std
arpl
and
je
mov
push
jo
sub
push
outsl
out
cmpsb
jmp
lock
addr16
and
mov
sbb
add
les
add
jns
jnp
jns
cs
inc
sbb
mov
push
sub
ret
push
sti
inc
dec
cltd
int3
jo
fs
bound
pop
aas
out
sbb
hlt
fs
imulb
clc
ret
loop
inc
mov
je
mov
or
test
popa
cmp
in
push
pop
mul
dec
dec
lahf
ret
fidivrl
mov
xchg
pushf
ret
test
push
adc
bound
fstpt
sbb
or
lahf
cmp
in
adc
faddp
pop
cwtl
mov
push
mov
stos
mov
call
rcrl
imul
mov
out
mov
push
sbb
pop
sbb
test
pop
lock
xor
mov
lds
and
xorb
lcall
lret
lret
mov
mov
mov
in
push
arpl
mov
cmp
cld
or
and
push
push
cmp
pop
mov
sub
add
dec
mov
loope
mov
push
loopne
inc
nop
repnz
cmp
xchg
mov
sub
pop
mov
inc
add
pop
sarl
push
aad
clc
aaa
sub
adc
lret
aad
lock
add
out
lods
mov
sbb
or
adc
ss
fidivrs
cmc
ret
cwtl
inc
fisubrl
mov
jb
mov
movsl
popf
aaa
dec
cltd
ljmp
xchg
lea
jae
mov
xor
jne
iret
and
inc
inc
in
and
cmp
stos
xor
je
mov
cmc
inc
jo
mov
mov
mov
xorb
outsl
idiv
mov
xchg
aam
lcall
ss
fs
mov
leave
mov
jbe
or
or
rol
inc
cli
xor
lds
loop
in
mov
mov
pop
xor
popf
lret
xor
pusha
xchg
mov
data16
loop
mov
xchg
mov
mov
aaa
dec
scas
jg
nop
into
test
ret
inc
xor
mov
push
xor
cs
pop
inc
iret
dec
out
mov
loop
pop
movsb
roll
adc
jno
sbb
jb
cmp
jle
add
cltd
out
lret
jmp
pop
push
dec
jecxz
xor
mov
mov
dec
adc
xor
xor
mov
jl
add
pop
test
cld
sti
repz
ret
dec
loope
fs
mov
push
add
cmc
pop
mov
push
adc
pop
add
pop
ret
into
sbb
nop
stos
pop
lcall
mov
jle
add
fcomps
mov
mov
jb
dec
gs
push
test
std
cmpsl
mov
into
out
adc
and
or
adc
cli
mov
call
and
lods
and
in
mov
lahf
jge
repnz
adc
lea
cmp
pop
add
jle
xchg
xchg
mov
add
dec
dec
xor
mov
adc
xchg
pop
mov
aam
in
pop
cmp
sbb
or
mov
scas
or
cltd
jns
test
push
mov
mov
je
neg
mov
stc
lods
decl
dec
fcmovnu
fdiv
call
sbb
lods
lcall
scas
sbb
cmc
mov
sub
push
dec
push
cmp
nop
push
movsl
call
pop
push
cmpsb
or
cmp
xchg
mov
arpl
insb
xchg
xor
in
xor
fs
dec
pushl
xor
inc
mov
pop
or
loop
push
cld
daa
lret
sub
sbb
in
jo
lods
adc
xor
aas
xchg
test
lea
pop
or
xor
shrl
rcll
addr16
xchg
dec
inc
inc
std
ficoms
cli
inc
push
mov
adc
fidivl
clc
decb
xor
mov
mov
dec
or
ss
cmp
push
mov
out
mov
outsb
cmp
jle
cld
ret
mov
mov
push
std
dec
sbb
xor
pop
dec
fisubl
xchg
push
pop
inc
fcmovu
jno
cmp
test
stc
bound
scas
out
cmp
mov
test
add
lods
add
daa
jp
push
push
cmp
cwtl
inc
insl
in
cld
cmp
xlat
push
and
loope
stc
pop
in
popf
out
shlb
out
test
fs
addb
pop
arpl
pop
push
and
mov
jnp
rorl
jbe
mov
and
xor
fcom
imul
mov
inc
mov
or
push
sbb
int3
jl
and
arpl
jg
push
mov
cmpsb
mov
lea
dec
movsl
or
add
mov
sbb
mov
mov
mov
fneni(8087
jg
lods
stos
sarb
and
adc
xchg
pop
xorl
inc
out
dec
out
pop
push
popf
adc
push
sbb
out
mov
xor
cmp
into
testl
andl
or
sub
insl
push
aas
pop
mov
test
in
mov
xor
fsubrs
testb
cmpsb
sub
bound
in
ret
mov
decb
mov
jl
sbb
jns
xchg
test
xlat
add
imul
add
inc
push
and
lcall
jo
add
lcall
push
adc
fnstsw
jl
adc
aam
popa
mov
sbb
sbb
xor
mov
sarl
or
xchg
adc
pop
insl
decl
or
cmp
jbe
test
push
out
add
cmpl
adc
dec
stos
cmp
and
fnstsw
sbb
push
fsubrs
sar
rcll
nop
das
or
mov
repnz
pop
jle
je
popf
std
push
xchg
or
addr16
mov
aad
daa
dec
test
adc
jnp
push
clc
or
ret
mov
insb
mov
pusha
sarb
jns
xor
xchg
inc
push
cmp
jo
push
gs
push
fsubs
arpl
outsl
outsb
icebp
add
dec
push
jle
push
pop
into
repz
jmp
pop
and
test
pop
cmp
aam
arpl
push
stos
xchg
lods
sub
in
loopne
xor
outsl
pop
mov
std
cli
lock
jno
mov
mov
test
rcrl
mov
ljmp
sbb
cli
dec
mov
jle,pn
shl
imul
add
mov
sub
std
adc
pop
sub
outsb
js
scas
cwtl
mov
clc
pushf
repnz
mov
popf
inc
or
dec
test
cmp
out
sub
and
movsl
stos
mov
iret
scas
pop
jo
xchg
mov
stos
rorl
cltd
dec
ja
mov
sub
bound
inc
add
mov
sbb
lods
jae
mov
inc
inc
insb
ja
jmp
cmp
mov
adcb
jmp
or
test
xchg
call
jecxz
sub
mov
cli
pushf
std
push
test
cmpsb
sub
movsb
sub
jbe
test
xchg
and
cmp
insb
mov
inc
dec
scas
out
lods
inc
lock
je
icebp
inc
addr16
add
sbbb
iret
or
rclb
loopne
mov
leave
mov
sub
aas
lret
fists
sbbl
clc
loopne
sub
xchg
pusha
sub
dec
testb
mov
sub
pop
fiaddl
mov
movsb
mov
dec
inc
in
in
out
fs
cmp
out
fcomps
pop
mov
in
fdivr
add
hlt
pop
cmp
pop
lret
or
sub
push
add
shlb
fisubs
lahf
rorb
and
bound
fistpl
push
jecxz
pop
jnp
div
mov
pop
rcrl
pop
test
fsubrl
inc
into
icebp
add
mov
mov
movsb
cmp
pop
lea
cwtl
xlat
int3
push
cmp
cmpsb
jle
push
ja
fsubrs
fsubrs
sbb
mov
or
mov
pop
add
es
xchg
xchg
or
subl
push
mov
in
test
js
jmp
sahf
popf
dec
lods
pop
inc
pop
mov
sarb
mov
add
jns
add
xchg
mov
jbe
add
sti
fs
push
xchg
fidivrs
fsubs
popa
rcrb
jmp
fs
mov
sbb
inc
pop
jne
addr16
adc
jl
xor
fs
xchg
push
mov
cmp
popa
adc
filds
and
fs
add
mov
lea
dec
or
mov
ljmp
inc
fwait
es
rclb
mov
xlat
rcrb
fptan
cmp
mov
aam
mov
push
add
stos
test
mov
in
push
pop
out
sbb
mov
xor
mov
jb
repz
or
pushf
fwait
inc
cwtl
mov
jmp
bound
sub
loopne
out
icebp
fidivs
mov
push
xchg
ds
rorb
in
jmp
fsubrl
test
xchg
loop
ret
and
lahf
cmc
and
int
xor
test
dec
int3
std
cmp
arpl
jmp
scas
in
mov
lods
mov
call
int
enter
fstps
add
stos
mov
cmp
jnp
xchg
in
mov
xchg
jecxz
and
sbb
or
enter
ja
test
pop
pop
mov
pop
dec
movsb
stos
call
loopne
mov
cmp
rol
mov
push
jle
mov
pop
jl
pop
icebp
testb
aas
in
jo
pop
add
xor
xchg
sbb
xor
hlt
dec
mov
mov
out
loopne
mov
test
test
xor
cmpsb
scas
cli
inc
pop
mov
sub
rcrb
mov
dec
add
into
or
call
out
jo
sbb
rcll
push
insl
out
addl
inc
leave
shrl
dec
outsl
cmpsb
mov
scas
jge
dec
and
fxch
mov
or
cwtl
ret
sbb
dec
mov
idivl
sbb
fwait
dec
fbld
mov
pop
xor
push
jnp
mull
mov
fistpl
jg
in
xor
test
fs
or
jge
dec
clc
out
shlb
dec
sbb
cmpsl
push
gs
sub
xchg
pusha
sbb
arpl
movsl
loope
cmp
push
cmc
inc
push
mov
and
cld
in
aam
or
mov
ss
mov
out
daa
icebp
sub
hlt
ficompl
repz
cmp
inc
loope
fcomps
pusha
dec
xor
pushf
add
andl
sub
inc
push
cld
xchg
xchg
mov
jae
sub
xchg
in
pop
mov
and
subb
inc
add
hlt
mov
xor
test
sub
repnz
icebp
xchg
adc
or
xor
insb
xchg
pop
sub
lds
push
xchg
sub
push
out
jg
cmp
sbb
outsl
xchg
push
pop
cld
and
push
xchg
push
cmp
xchg
sbb
jae
and
mov
aaa
push
jl
lret
sbb
aad
in
inc
jne
out
mov
or
in
stos
mov
push
or
mov
in
les
loopne
adc
ret
and
pop
mov
mov
xor
jecxz
imull
push
xor
scas
loop
loopne
aam
test
loop
jl
addr16
jnp
into
jne
push
adc
push
pop
push
inc
dec
xchg
daa
test
lahf
inc
call
test
or
mov
inc
xlat
sbbl
cs
sbb
dec
repnz
jns
dec
sbb
movsl
and
xor
sub
arpl
push
sub
addl
jnp
add
xor
sbb
pop
aaa
mov
js
push
inc
scas
xchg
inc
mov
sahf
and
hlt
jmp
ds
loop
sbb
imul
mov
and
xor
push
lea
test
mov
mov
or
dec
pop
data16
dec
int
xor
subl
aaa
inc
mov
jnp
cmp
in
push
push
lret
or
pop
or
mov
test
pop
std
inc
jmp
mov
stos
outsl
scas
inc
pop
pop
popf
mov
xchg
into
lcall
lds
loop
sub
push
mov
lret
xor
jle
aam
mov
dec
or
outsb
mul
je
push
pop
movsb
jnp
rolb
test
jge
push
xchg
outsl
push
rol
xchg
inc
fldcw
outsl
mov
pop
repz
and
cmp
adc
mov
jl
inc
cmp
sti
sahf
popa
or
xchg
mov
fdivr
lret
cmp
xor
mov
adc
insl
in
jl
movsb
shll
mov
or
mov
sbb
aam
push
in
add
inc
loopne
fimull
push
lock
mov
fstps
jecxz
sbb
pushf
rclb
xchg
loop
and
push
movb
jp
sbb
add
inc
push
rcl
lahf
add
lds
jmp
xor
cli
cli
xor
leave
das
and
rclb
outsl
push
adc
clc
inc
dec
filds
cli
nop
daa
aam
fwait
xlat
ja
mov
ljmp
and
xchg
pop
mov
mov
frstor
mov
gs
jbe
push
mov
fbstp
cmp
popf
add
jle
das
pop
mov
mov
and
repz
sbb
mov
aas
ljmp
jb
jo
lods
jns
push
jbe
lret
arpl
int
push
jle
inc
xor
popa
dec
es
out
pop
fistpl
inc
mov
lods
pop
outsl
scas
sub
js
adc
fs
push
mov
les
and
xor
sub
dec
outsl
push
push
sbb
pop
sarb
inc
adc
cmp
push
push
lock
aam
icebp
mov
stos
mov
ds
cld
cmp
adc
sub
pop
jle
or
cmp
aam
sub
jb
add
int
imul
imul
hlt
loop
mov
test
std
jnp
lahf
faddl
adc
or
push
sub
movsb
cli
mov
mov
repz
cmpsb
and
hlt
fsubl
sub
test
popf
out
dec
and
xor
enter
push
mov
inc
pop
mov
aaa
stos
rorl
xchg
test
sbbl
dec
dec
jbe
lret
popf
jmp
dec
rcl
repnz
cmpsb
ja
call
sub
xor
cmp
ret
test
sub
cmp
test
sbb
std
psubq
xor
aam
dec
cmp
aas
xor
jle
cmc
gs
clc
mov
fistpl
stos
fcoml
mov
xchg
mov
mov
xchg
cmp
push
ljmp
xchg
push
jle
cmp
jno
and
or
iret
dec
sub
sbb
repz
into
inc
aad
mov
std
clc
mov
fildll
scas
pop
mov
test
insb
iret
sbb
out
and
mov
clc
push
shll
mov
xchg
cmp
lock
pop
out
iret
sbb
sahf
pusha
gs
sbb
mov
jge
or
test
enter
iret
pop
aaa
lret
inc
in
inc
popl
fdivr
jmp
iret
mov
xchg
push
cmp
jmp
std
fistpll
push
das
cld
repnz
popa
scas
int3
add
mov
cwtl
addb
ss
ficoms
inc
add
inc
pusha
roll
dec
enter
xchg
push
mov
inc
ljmp
sbbb
inc
rolb
stos
pushf
jecxz
inc
cmp
pop
pop
mov
inc
sbb
call
cmp
or
pop
mov
aas
or
inc
mov
mov
sbb
pushf
adc
loopne
push
xlat
sbb
es
xchg
xor
jne
cmpsl
jecxz
popa
movsl
insb
cmp
scas
push
cmp
mov
pop
into
out
jbe
pop
pushf
push
or
stos
adc
cmp
jmp
pushf
push
test
call
push
sub
subb
lcall
aam
insl
cmp
mov
not
mov
loop
push
push
fdivrl
push
jl
sbb
cmpsb
into
push
cmp
lret
xchg
in
std
mov
lods
pop
adc
das
adc
mov
sti
dec
fisubrs
xchg
stos
cmp
cmc
repnz
cs
mov
cmovbe
push
pop
jo
sbb
dec
bound
inc
je
mov
clc
and
pushf
sub
lock
mov
pop
popf
sti
xchg
push
sbb
dec
add
mov
pushf
mov
cmp
push
xchg
sub
stos
das
in
xor
aad
ja
notl
test
dec
mov
call
and
xor
loopne
push
xor
cs
fildl
or
mov
out
jbe
push
shlb
rorl
mov
ret
mov
pop
popa
popf
call
mov
call
push
sbb
inc
mov
dec
mov
dec
fdivrl
leave
hlt
cmp
jnp
int3
test
aaa
shl
dec
jl
jae
mov
sub
xor
cmp
imul
mov
lret
lahf
inc
inc
hlt
idivl
and
sub
leave
dec
pushf
incb
push
mov
lret
cmc
rolb
loop
sbb
lcall
int
in
mov
xor
icebp
daa
cmp
mov
dec
ja
jp
pop
mov
mov
leave
rcrl
call
rcrl
inc
sub
mov
insb
sbb
int
cwtl
cmpl
xchg
cmc
negb
sub
stos
sti
xor
push
hlt
lds
arpl
dec
adc
and
sub
ja
mov
inc
idivl
xchg
add
ror
cmp
scas
mov
mov
mov
dec
pop
inc
jno
sahf
stos
je
bound
enter
sbb
sbb
xlat
dec
fsubrl
and
in
cld
mov
mov
insl
in
dec
xchg
cs
jnp
mov
pop
mov
inc
jl
dec
and
sub
add
push
fnsave
xchg
insb
int3
popa
repnz
jge
adc
out
adc
inc
mov
jns
in
lds
mov
stos
shlb
or
and
inc
xchg
arpl
push
ss
or
jnp
into
ret
pop
ret
in
jl
mov
mov
mov
ret
lahf
jno
jmp
adc
call
repnz
jle
addr16
xor
lret
sbb
and
sub
decb
xor
rorb
cmp
xor
fistl
sbb
add
jae
imul
dec
pop
mov
int3
jo
xchg
inc
pop
mov
mov
xchg
adc
cltd
aas
inc
mov
loopne
rcl
mov
dec
cmp
adc
pop
push
mov
sbb
int
std
inc
adc
mov
cld
mov
in
cltd
in
leave
roll
add
andb
insb
push
jns
fadds
in
jge
dec
mov
jbe
lock
icebp
call
stos
sub
mov
push
rcrb
dec
jns
jp
stc
and
push
push
mov
mov
mov
xlat
sbb
daa
fmull
and
jnp
add
inc
movsb
or
sub
ljmp
cmp
imul
mov
adc
sahf
sub
dec
add
cmp
push
mov
sub
mov
fidivrs
or
mov
cwtl
test
cli
jg
xor
cmc
out
outsl
rcll
ljmp
call
mov
xor
ds
leave
mov
rorl
push
test
xor
jl
sub
lock
inc
push
int
jp
xor
in
and
xchg
sbbl
xlat
js
pop
mov
inc
clc
ret
mov
sbb
lret
and
pop
dec
sub
mov
std
fidivrl
in
mov
shr
pop
and
sub
jp
ja
lds
adc
cmp
decb
sub
fdivl
ja
sub
icebp
push
enter
in
mov
dec
lahf
mov
xchg
aas
lret
popf
and
sub
add
dec
mov
jno,pn
dec
lret
lret
outsl
sub
movl
and
jo
cmc
sbb
jno
fcmovb
ret
jg
das
icebp
sbb
es
adc
call
jle
and
cmpsb
rcl
cltd
cld
fisubrl
xor
movsl
lret
and
dec
gs
arpl
mov
imul
jge,pt
xchg
repz
add
mov
mov
das
pop
mov
xor
inc
jb
aaa
xlat
push
mov
cli
popa
cwtl
mov
xchg
pop
sbb
in
orb
fmull
arpl
lcall
push
cmp
sbb
sbb
mov
fldl
hlt
test
cmp
cmpsl
or
ret
xchg
xchg
jns
in
push
stc
popf
mov
fmuls
cmp
push
mov
fisttps
out
sub
clc
lds
mov
xlat
mov
les
jle
lock
mov
push
and
aaa
xor
add
adc
push
mov
sysexit
lahf
fisubl
insl
xchg
push
sub
aam
add
pop
mov
sbbl
dec
ret
sbb
rolb
aad
lea
mov
push
jns
ret
add
scas
sbb
aas
cmc
into
psrad
popf
js,pn
xchg
push
insl
mov
mov
mov
in
mov
and
insl
mov
push
xor
xchg
sbbb
adc
add
xchg
insl
sub
ds
xor
mov
std
sbb
cld
movsb
push
imul
ret
enter
call
test
mov
push
pop
divps
sbbb
mov
fcmovu
int
addr16
ljmp
push
xchg
je
and
mov
leave
pop
jae
or
and
int3
lock
ss
lret
rorl
mov
testl
cmpb
mov
loop
outsb
xor
lock
lret
pusha
inc
test
xor
add
mov
pushf
xchg
shll
mov
pop
lock
and
into
sar
mov
sub
inc
ja
mov
push
add
adc
mov
add
cmpsb
jb
dec
stos
test
and
dec
dec
shlb
sbb
sub
add
std
mov
xchg
push
inc
sti
pop
push
bound
fs
gs
fiaddl
push
xor
mov
cmc
jmp
sahf
movsb
clc
imul
sbb
subb
adc
push
jns
out
mull
sub
cmp
xlat
lret
mov
or
roll
imul
or
mov
daa
mov
cmpl
push
movsb
imul
push
dec
cmpsl
popf
popf
les
sbb
loop
outsb
jns
push
incb
iret
out
movsb
lahf
ss
aas
or
adc
loopne
or
and
es
cli
stc
pop
mov
lahf
popl
inc
stc
arpl
cld
in
push
dec
pop
add
sbb
stos
and
mov
aaa
mov
lea
test
arpl
test
xorl
add
out
lahf
movsl
out
xchg
mov
aam
jge
dec
xor
jle
jno
in
mov
insb
iret
insb
iret
ffree
mov
pop
mov
inc
out
lds
ljmp
leave
shrl
lds
scas
jae
rcl
orps
push
xchg
ret
mov
scas
dec
nop
das
jmp
arpl
jns
sbb
push
movsb
adc
mov
loope
stos
stos
jne
jecxz
lret
cmpsb
subb
insl
lea
lock
sub
test
xor
ret
or
cli
xchg
xor
aad
sti
xchg
adc
popa
push
cmp
out
push
pop
jmp
mov
lahf
push
insl
xlat
jmp
aaa
js
xor
cmc
mov
test
pop
push
mov
test
mov
sbb
shll
mov
cmc
arpl
jae
sarb
adc
pop
es
jl
fsub
cmp
push
push
div
push
push
stc
and
hlt
stos
jle
repz
add
mov
mov
push
xchg
and
dec
push
adc
stc
add
inc
mov
mov
or
push
pop
fsubr
push
xor
pop
jmp
shrl
pop
dec
in
and
pop
pop
lods
mov
aam
sti
fldcw
xor
xchg
mov
sahf
and
adc
dec
loopne
pop
mov
ss
fisttpll
xchg
aad
ficoml
xor
movsb
test
ret
repnz
bound
xchg
adc
fdivr
pusha
lods
xchg
test
mov
scas
pop
jnp
shll
aas
insl
sbb
xorb
push
out
negl
push
sub
push
call
mov
xor
seta
inc
pushf
stc
push
cmp
cmp
jne
ljmp
jno
inc
scas
mov
push
jge
int3
mov
leave
aaa
cmc
out
mov
inc
push
subl
xchg
test
xchg
lods
loopne
sub
fiaddl
icebp
inc
mov
jge
ficompl
fistpll
sub
testl
xchg
mov
inc
xchg
push
loope
loope
fadds
mov
xchg
js
add
mov
mov
andl
movsl
xchg
jnp
aas
test
pushf
out
outsb
imul
mov
mov
add
pop
cld
inc
push
pop
sbb
lcall
push
sbb
aaa
repnz
sub
enter
pop
lock
lcall
ds
push
or
inc
mov
sti
and
sbb
mov
pop
sarl
sub
mov
xor
jp
sub
jg
mov
iret
cmc
push
xchg
sbb
addr16
jbe
mov
ror
test
mov
in
and
push
sti
add
xchg
xor
add
xchg
cmc
loop
pop
mov
dec
xchg
into
fdivrl
xor
les
cmpsb
add
mov
xchg
cmpsl
add
jmp
subl
jb
daa
sub
push
mov
js
add
pop
add
pop
movsbl
arpl
adc
loope
dec
sub
stos
pop
in
arpl
pop
cs
sub
shll
jno
add
inc
cmp
imulb
fildl
push
pop
adc
lds
dec
dec
ss
mov
iret
in
ret
ss
das
je
sub
cmpsl
jne
sub
clc
lret
pop
adc
in
pop
mov
fisttpll
test
inc
inc
or
cmpl
mov
add
and
dec
inc
scas
xchg
and
xor
and
clc
sbb
dec
mov
jbe
rclb
daa
in
pop
pop
sbb
push
add
je
fiadds
dec
shrl
fwait
xor
inc
mov
leave
cmp
mov
int
stos
into
jge
shrl
wbinvd
sbb
jmp
or
testl
cmp
jb
stos
clc
jle
jmp
cmp
outsb
adc
lods
mov
xchg
inc
pop
leave
jno
xchg
sub
adc
sbb
test
dec
and
inc
jns
push
aas
stc
xlat
cmp
insl
mov
or
xchg
inc
inc
enter
inc
and
cwtl
fstl
in
test
mov
mov
sbb
and
add
or
sub
xchg
and
sti
sub
les
adc
push
jge
repz
adc
fnsave
fwait
lea
mov
hlt
andl
mov
and
test
fmull
scas
xchg
addr16
shr
jnp
movsb
lret
out
mov
mov
aas
push
mov
test
inc
push
mov
xchg
add
jnp
lds
lahf
inc
jg
inc
xor
mov
lods
sbb
arpl
ret
pop
mov
pop
sbb
jle
push
outsl
into
cmp
dec
push
add
cmpsl
insl
adc
icebp
dec
sahf
mov
pop
rclb
lea
shlb
dec
inc
mov
xor
mov
jne
arpl
outsl
ds
cwtl
push
iret
mov
pop
test
imul
jno
std
ret
cmpsl
push
mov
add
aas
pop
mov
movsb
adc
mov
cmpsb
xor
nop
jge
sub
fnsave
push
ja
pop
pushf
test
jecxz
xor
jle
sub
xor
lret
mov
sub
outsl
and
scas
popa
aad
cs
jmp
push
mov
hlt
xchg
cmp
aas
mov
sbb
cld
jns
or
les
popa
bound
fs
or
push
add
je
and
mov
loope
mov
jns
or
xlat
push
xchg
sub
rcrb
xorl
adc
xor
inc
out
das
pop
mov
push
or
push
shlb
or
fiadds
inc
cs
cmp
add
adc
mov
sub
cwtl
push
test
mov
repz
adc
stc
xor
nop
es
ljmp
dec
and
ljmp
jecxz
push
daa
cmp
xlat
hlt
scas
dec
lea
xchg
out
lods
cmp
push
mov
setnp
xor
test
jbe
inc
mov
clc
cmp
pop
jg
orb
jo
mov
std
mov
mov
xchg
cli
insb
or
lock
lcall
gs
sub
shl
inc
xchg
int3
lcall
lret
push
inc
icebp
cwtl
xchg
xchg
lods
cmp
out
sub
cmp
mov
aaa
outsl
xor
test
ds
popa
sbb
dec
pop
and
xor
push
icebp
push
xor
sarl
pop
sub
dec
jl
fisubrl
cwtl
movsb
addr16
mov
iret
fwait
sbb
stc
orb
ficoml
mov
xor
adc
pop
pop
mov
imul
aas
mov
cmpl
icebp
mov
cs
fwait
popf
fnstsw
pusha
mov
ss
adc
mov
inc
popa
mov
nop
ja
jae
xor
mov
sbb
mov
pop
xlat
shlb
jl
outsl
lahf
inc
inc
push
test
or
fstpl
push
and
lret
movsl
push
outsb
out
add
int
adcl
aam
bound
inc
lret
andl
sub
pop
push
das
cltd
dec
mov
mov
sbb
lahf
out
into
jne
cld
scas
ror
subl
aas
fcomip
lods
shl
repnz
mov
mov
inc
sub
xchg
fimull
mov
pop
popf
ljmp
shlb
xchg
add
adc
inc
xor
dec
out
dec
jmp
and
inc
mov
shlb
mov
sbb
jmp
divb
sub
jo
cli
bound
fwait
mov
mov
and
test
xchg
aam
cmpsl
int
and
js
addr16
cmovb
cmp
addl
fwait
pusha
mov
mov
inc
aam
inc
add
push
lods
mov
mov
iret
or
rcl
out
insl
das
mov
or
lods
out
out
jg
cmp
leave
test
adc
mov
shr
or
xor
loop
stc
aaa
ja
add
add
xor
xchg
cmp
loop
ret
fisttpll
pop
jns
aad
xor
push
ret
pop
int3
ja
insl
and
jl
dec
vmovaps
jge
mov
xor
in
pushl
push
mov
fcomp
mov
cwtl
pop
sub
out
lea
jo
mulb
push
mov
popa
sbb
inc
xchg
sub
inc
xchg
jp
loopne
xchg
fdivrp
mov
xchg
inc
int3
mov
mov
mov
sysexit
push
sub
mov
dec
nop
sub
mov
mov
shrb
imul
pushf
lock
cld
pop
add
add
fadds
adc
in
inc
or
rorb
sub
xlat
push
xchg
stos
dec
repz
sub
imul
adc
out
dec
mov
iret
in
mov
cmp
stc
call
jmp
aam
fcoms
pop
enter
xchg
icebp
dec
push
cmp
xor
add
loopnew
std
mov
nop
xor
add
je
loop
sbb
jge
mov
mov
mov
push
lods
xchg
stos
push
popa
or
int3
push
inc
xchg
ljmp
aam
adc
aad
or
push
or
jecxz
fmull
daa
dec
and
or
mov
icebp
mov
repnz
rclb
nop
jp
cmp
pop
push
mov
popa
and
out
fucomi
push
mov
minps
dec
les
lods
mov
lods
push
jg
xorl
fnsave
fldcw
lret
jns
add
jp
xor
or
and
xchg
cwtl
imul
notb
adc
jns
stc
cmp
mov
pop
scas
ljmp
sub
pop
inc
test
mov
jg
imul
enter
inc
popa
push
cmp
cld
push
repz
adc
clc
ss
sbb
sub
pop
dec
or
jno
pushf
cli
cwtl
cli
and
jge
cmpsl
adc
xorb
dec
dec
push
test
std
or
insb
pop
xchg
out
dec
pop
adc
fs
es
cs
test
loopne
jmp
repnz
out
jmp
mov
orb
add
scas
adc
std
rcll
cmp
dec
repnz
fdivrp
mov
into
icebp
rclb
cltd
cmpl
addl
das
ret
cmc
xchg
xorl
jecxz
sub
scas
push
mov
push
iret
insb
push
setp
mov
repz
push
and
fiadds
and
lods
mov
scas
and
sub
jbe
out
rcrl
inc
stos
test
pop
and
push
mov
pop
das
or
jl
cmpsb
sti
sbb
call
jne
adcb
cmp
int3
pop
cmp
push
or
pop
sbb
push
push
cmc
test
sub
sbb
cmpsl
pop
je
push
push
adc
jmp
ja
in
aas
pop
inc
dec
roll
jbe
les
xor
mov
repz
jecxz
inc
dec
cmp
ret
dec
call
arpl
adc
pcmpeqb
dec
xchg
inc
xorl
mov
cmp
into
mov
cmp
fwait
in
mov
stc
dec
fdivrs
out
inc
sub
rcl
lret
or
loopne
cmp
xlat
lea
mov
scas
int3
mov
data16
pop
clc
cmp
adc
jle
out
cltd
fcoms
add
das
clc
test
inc
sbb
jge
xchg
inc
xor
mov
fldcw
hlt
int
lret
sub
aam
int3
aaa
cmpsl
roll
daa
push
sbb
mov
mov
pop
add
outsl
in
fsubrs
insl
jnp
scas
fmull
push
mov
xchg
or
nop
outsl
cmp
pop
cmp
ror
popf
or
rclb
inc
iret
nop
dec
pop
dec
lds
mov
xor
jne
mov
clc
sbb
repz
xor
js
ret
or
mov
in
adc
aam
add
fbld
cmc
ret
add
iret
aas
mov
mov
sti
ds
add
lods
fsubl
xchg
mov
popa
aam
test
jg
xchg
xor
add
xor
dec
pop
insb
adc
movsl
mov
and
adc
xchg
in
or
adc
adc
arpl
jp
or
push
pushf
ret
add
rcrl
and
jnp
sub
pop
test
xchg
mov
inc
addl
incl
inc
test
hlt
test
pop
mov
xor
push
inc
jb
xor
ja
sub
rcrb
xchg
rcr
jae
jnp
shld
xchg
sub
mov
out
js
dec
ljmp
jnp
mov
add
fsts
add
inc
cltd
dec
inc
dec
daa
dec
insl
test
jne
add
notl
adc
test
mov
jg
pop
push
in
fiadds
bound
pop
bound
loop
lods
arpl
sbb
add
repz
hlt
lcall
cmp
xor
mov
xchg
mov
mov
cmp
and
dec
cmc
mov
add
mov
and
sbb
iret
mov
pop
pop
fmull
cmp
mov
cmp
inc
mov
pop
mov
mov
jmp
pushf
lea
bound
pop
sub
xlat
lock
push
xchg
fisttpl
lods
push
push
arpl
jmp
mov
or
hlt
pop
and
and
add
adc
pop
scas
jae
mov
pop
mov
int3
sbb
rorl
outsb
ret
insl
popa
inc
iret
sub
xlat
shrl
imul
sahf
call
lret
nop
sbb
std
push
fs
pop
xor
lods
jno
and
cmp
sub
sahf
lahf
movsl
xchg
mov
outsb
cmp
dec
in
mov
pop
inc
pusha
iret
fimuls
cmp
les
outsb
or
fimuls
mov
pop
cmc
call
ljmp
mulb
mov
mov
emms
inc
inc
mov
mov
aam
xor
hlt
int
outsl
push
inc
int3
xchg
hlt
call
cmp
stos
add
inc
jno
adc
test
arpl
adcl
sbb
push
mov
outsl
lcall
and
lds
imulb
push
xchg
xlat
imul
or
mov
ds
xor
xchg
out
or
jl
adc
and
cmpsb
stos
and
es
imul
inc
iret
cmpb
lahf
nop
add
jbe
insl
repz
inc
sbbl
stc
inc
or
jp
es
cmp
push
adc
cmpsl
push
lods
mov
jge
jle
mov
xlat
or
scas
inc
subb
mov
divb
or
dec
jno
in
mov
cmp
dec
into
push
inc
in
enter
adc
dec
sub
xchg
push
leave
ret
mov
xor
sub
mov
scas
xchg
sbb
ljmp
jecxz
mov
sub
push
shrb
add
push
dec
je
sub
fiadds
mov
nop
cld
and
roll
pmaxub
sub
test
jb
idivl
inc
adc
sbb
dec
cld
mov
movsl
ror
xchg
pop
gs
xchg
sub
xchg
loopne
xor
and
xor
or
jne
test
sub
lret
or
adc
lahf
xchg
mov
in
sub
mov
cld
and
lret
cmpsb
push
push
xlat
push
inc
sub
push
loop,pn
int
in
cli
fidivrs
cmp
mov
jle
inc
in
pop
nop
mov
shrl
xchg
and
pop
inc
stc
jecxz
stc
icebp
fnsave
daa
jg
jecxz
mov
rorb
cmpsb
mov
shr
or
cmp
sub
xchg
pop
cmpsb
mov
cmpsl
inc
cmp
sti
fstps
ficoml
push
sub
inc
inc
aaa
mov
popa
repnz
cmp
lea
into
stos
dec
rorb
sub
rclb
rcll
jns
iret
lcall
dec
inc
and
push
mov
jb
ja
adc
dec
fcoms
xor
movsl
mov
ret
pusha
xchg
out
pop
add
in
jnp
idivb
pushw
sub
push
sub
adc
xchg
or
out
pop
clc
or
mov
je
adc
leave
mov
xor
dec
xchg
jno
sahf
int
outsb
or
rcrb
fistl
scas
loope
cld
add
push
cltd
lret
push
movsb
adc
call
xchg
or
cwtl
cs
sub
jmp
sti
cmpsb
jecxz
cmp
sbb
js
push
jae
and
xlat
mov
movsl
repz
mov
fsubrl
xchg
test
lock
in
mov
in
negl
js
sub
in
mov
xchg
add
xor
imul
sbb
push
fsubr
fs
js
xor
xor
adc
ret
clc
shr
out
popf
test
xchg
lcall
pop
imul
call
and
or
lcall
clc
ret
fwait
xchg
pop
inc
pop
and
lds
jg
push
xchg
push
mov
inc
scas
sahf
lcall
nop
mov
dec
shrb
and
mov
add
mov
pushf
pop
and
in
cmpsb
lods
push
xchg
pusha
mov
xchg
sub
leave
add
add
pusha
enter
cmc
popa
sub
sub
aas
or
adc
iret
int3
lds
mov
or
mov
jmp
notl
xor
cltd
inc
sahf
cvttps2pi
and
loope
jge
sub
xchg
xor
xor
ds
cld
mov
dec
leave
mov
inc
cmp
in
movsbl
shlb
ficoml
hlt
popf
stc
iret
push
inc
insl
imul
movsl
lcall
xchg
mov
xlat
pop
test
es
inc
push
imul
or
arpl
mov
test
inc
jecxz
es
xchg
mov
imul
nop
cli
pop
xchg
dec
and
mov
xor
lods
mov
push
icebp
loope
push
iret
pop
repnz
ret
push
dec
xor
out
inc
popf
xchg
add
int
cltd
mov
xor
imul
and
call
xchg
push
fnstsw
xchg
sti
fwait
loop
out
xchg
push
inc
mov
add
push
or
mull
fstpt
cmp
xchg
fdivs
std
cmp
test
out
push
sbb
adc
out
je
cmp
jo
push
xchg
lds
mov
inc
xchg
jmp
mov
test
or
pop
push
stos
push
mov
pop
cmp
movsl
dec
dec
jo
cmpsb
loope
out
mov
jmp
mov
push
mov
add
ret
fmull
cmp
inc
and
pop
pop
sub
dec
cmp
shll
lcall
add
bnd
out
add
xchg
xchg
sti
dec
mov
pop
int3
jp
dec
jnp
aad
mov
lret
call
add
sbb
daa
mov
imul
aam
sub
das
cmp
pop
dec
cmp
xchg
out
jae
vphaddwd
aaa
xor
leave
or
imul
cmovne
and
ret
sub
lods
cmp
out
mov
cltd
loopne
cltd
sub
cmp
sub
inc
mov
inc
lods
loop
scas
test
cmpsl
ja
iret
aas
cli
sbb
jo
or
pop
and
xchg
fst
mov
xor
mov
ljmp
loop
pushf
push
iret
inc
int3
clc
out
jnp
bound
fdivs
jg
jl
mov
in
ret
mov
test
dec
sbb
les
sub
mov
mov
and
dec
push
and
sbb
inc
xchg
cld
cmpsb
add
movsl
sti
or
cmp
push
sbb
repnz
sbb
and
jge
sbb
sub
jl
sbb
insb
bound
xor
fstl
jp
pop
add
push
dec
leave
stos
pop
pop
sahf
pusha
jp
cli
insl
jmp
int3
sbb
xor
test
or
shrl
jb
inc
fildll
in
js
in
or
jecxz
repnz
or
ja
out
add
cmpsl
popf
mov
jg
xchg
arpl
add
outsl
in
movsb
nop
dec
lods
je
dec
add
shlb
lods
cwtl
lahf
aam
insl
mov
ja
inc
xor
sbb
mov
add
aam
loop
scas
lahf
lret
jae
ja
ret
lcall
dec
enter
cmp
das
stos
mov
js
push
shlb
inc
imul
mov
sub
imul
adc
add
imul
popa
les
movsb
pop
mov
stos
adc
dec
mov
cmp
test
orl
dec
pushf
xor
lods
mov
mov
mov
mov
push
or
insb
pop
push
add
xchg
mov
mov
and
sar
shlb
sbb
scas
out
sub
clc
xchg
sub
and
fstl
movsl
sub
dec
clc
push
mov
les
rcll
sbb
cmp
movsb
mov
stc
daa
fs
push
add
in
ret
in
push
and
xor
shl
dec
xor
or
push
popf
pop
cwtl
pop
dec
popf
sbb
rcrl
push
xchg
inc
aam
xchg
jns
xchg
mov
enter
or
inc
mov
icebp
mov
xchg
nop
xor
pushf
pop
dec
add
and
pushaw
aam
roll
dec
and
fisubs
int
shrb
jns
jmp
imul
arpl
cmp
jae
shrl
mov
cmp
cmp
mov
lcall
aaa
out
pop
stc
xchg
shr
xlat
cmp
in
lds
sub
mov
clc
test
inc
movsb
adc
mov
shl
repnz
dec
add
mov
dec
pop
cmp
test
xchg
add
xor
aas
loope
popa
jb
pop
insb
sub
xchg
jl
push
test
mov
gs
imul
sub
lea
mov
push
or
loop
jnp
arpl
inc
sub
push
mov
or
loop
lcall
and
incb
mov
in
cmpsb
ljmp
addr16
jo
jle
xchg
sub
add
sub
repz
mov
fs
imul
adc
or
jne
sbb
mov
mov
xorb
nop
adc
xchg
ds
nop
cs
lods
scas
arpl
data16
mov
or
and
data16
push
jno
push
pop
lcall
divb
lret
sub
sub
loope
xchg
int
pusha
and
xchg
adc
in
or
std
ret
sub
sbb
jg
sbb
hlt
into
pop
push
mov
hlt
std
mov
mov
in
xchg
dec
mov
loopne,pn
cmp
popa
and
mov
lods
cmpsb
shll
lea
out
clc
call
pop
imul
cmp
ret
and
cmc
outsb
in
fnstcw
sub
jnp
jp
mov
xlat
call
ss
pop
jne
add
pop
insl
ret
jae
lcall
stos
test
dec
mov
das
lcall
push
jecxz
cmp
inc
xchg
mov
data16
lret
fidivrs
divl
sti
or
push
jns
and
std
xchg
stc
stos
adc
mov
pop
leave
cmp
push
push
mov
inc
add
push
lea
int3
test
adc
jns
std
divps
movsl
jne
sub
push
incl
cmp
ljmp
mov
and
cmp
sahf
or
push
enter
scas
int
mov
bound
or
cmpsb
dec
cs
pop
mov
xlat
or
pop
std
pop
adc
add
shlb
inc
inc
stos
fldt
repz
out
pusha
sub
outsl
jmp
cmp
pop
mov
sbb
push
pop
lahf
call
stc
jns
fdivl
loopne
repnz
fidivl
loop
jecxz
push
insl
lods
popf
cmp
std
addl
jno
inc
shll
adc
jg
int
nop
sbb
cmp
fwait
push
add
mov
sub
ja
ljmp
test
jne
pop
pop
frstor
in
adc
ret
or
repnz
pop
sbb
shl
or
icebp
in
xchg
ficompl
mov
clc
pop
repz
fbstp
pushf
out
out
js
sub
xchg
mov
sub
add
inc
lret
mov
sbb
push
pop
scas
pop
int3
imul
adc
das
mov
jge
js
movsb
scas
mov
int3
dec
cmp
test
dec
int
or
sahf
aad
xlat
cmpsl
jp
ret
push
push
jo
fs
jno
test
repz
jmp
adc
andl
test
rorl
ret
stos
or
test
int
imul
cmp
jle
xchg
mull
iret
pop
push
icebp
mov
mov
jns
movl
mov
lcall
xor
push
sbb
push
mov
imul
outsl
les
fwait
and
sub
mov
testl
icebp
in
subb
mov
sub
fistpll
orb
xor
jnp
add
sbb
nop
jnp
adc
and
cs
icebp
sar
xchg
lods
loope
add
adc
jmp
push
xchg
aaa
mov
and
xor
mov
mov
test
xchg
dec
dec
jp
cmc
mov
add
int3
ds
adc
addr16
addl
mov
cmp
or
pop
mov
sub
xchg
sub
xchg
aas
and
adc
push
lcall
stos
xor
pop
push
arpl
lea
sub
pop
sbb
cmpsb
sbb
mov
ljmp
push
repz
pop
aad
inc
in
inc
fmull
xchg
cmp
cs
std
add
fucom
xor
hlt
out
scas
mov
xchg
je
mov
mov
insl
das
adcb
imul
xchg
cwtl
sbb
adc
pop
add
std
push
jne
xor
repz
xchg
mov
inc
popf
adc
mov
xchg
fldl
push
cmp
hlt
sbb
add
dec
out
mov
xchg
jae
jne
loope
and
mov
pop
lret
inc
inc
lea
pop
cmpsb
lds
adc
stc
jl
das
lock
mov
aaa
dec
mov
jg
lods
lret
ret
inc
jno
sub
push
lret
push
xor
lcall
mov
pextrw
mov
ss
icebp
repz
push
mov
jb
xlat
outsl
mov
ja
cmpb
mov
jb
cld
adc
sbb
pushf
jle
dec
aas
sahf
jle
into
push
data16
scas
ljmp
pusha
movsb
f2xm1
sti
imulb
cmpsl
out
pusha
pop
add
loop
xlat
inc
test
mov
insb
insl
cmp
leave
mov
or
dec
xchg
inc
sahf
insb
push
adc
rcrb
les
es
out
scas
add
mov
out
cwtl
sub
push
push
jo
clc
cmpsl
adc
insl
mov
inc
inc
lods
orb
in
stc
dec
mov
insb
nop
mov
fiaddl
rolb
jmp
loop
xchg
negb
test
xor
into
out
xchg
jnp
sti
lcall
pop
add
shll
leave
cmp
adc
subl
enter
push
sti
or
sbb
lcallw
push
test
mov
dec
push
mov
mov
pop
test
leave
mov
int3
and
mov
jecxz
std
enter
movl
mov
psubb
xchg
popf
mov
push
pcmpgtw
movsb
jbe
dec
lods
cltd
repz
or
gs
testl
addr16
mulb
fsin
movsb
aam
sbb
xchg
fldl
repnz
fistpl
divl
mov
mov
lods
int3
imul
out
mov
and
fldt
pop
inc
mov
jp
sub
roll
dec
sti
jns
bswap
mov
mov
dec
add
out
add
lds
or
int
or
mov
test
jnp
cltd
jnp
xchg
imull
inc
insb
push
mov
push
fdivrl
scas
add
fwait
adc
loop
lods
nop
inc
out
xor
sub
jnp
pop
or
mov
popf
enter
data16
daa
push
cld
imul
adc
stos
xor
in
inc
lret
xchg
mov
or
scas
addr16
sbb
push
jl
iret
dec
jecxz
xchg
imul
sub
adc
fistpll
push
rorb
sbb
pop
addb
in
xchg
jmp
adc
pop
mov
pop
cwtl
xchg
orl
aad
adc
enter
stos
xchg
cmp
mov
movsl
enter
cmp
mov
inc
nop
lea
mov
lds
sbb
lret
stc
scas
push
push
sbb
xchg
dec
push
mov
das
add
or
and
lds
adc
pushf
fisttpll
je
std
out
pusha
cmpsb
ljmp
pop
and
xor
andb
mov
insb
jp
inc
mov
push
xchg
sub
jno
jbe
shrl
pusha
push
mov
loop
rcrl
pop
add
nop
cmpsl
mov
insb
push
xchg
frstor
sbb
jg
pop
lods
cli
lcall
dec
loopne
pop
fsubl
shr
cmp
test
or
push
in
inc
cmp
sbb
repnz
adc
jecxz
dec
jnp
test
lods
or
sbb
lods
ret
ficoml
xorb
lods
insl
add
jecxz
cli
mov
xor
adc
lret
divb
daa
lret
push
jb
pop
movsb
sub
adc
mov
sbbl
repz
int3
jnp
push
cmp
inc
push
sahf
cmp
adc
xor
xlat
and
push
mov
lods
dec
icebp
inc
in
out
add
inc
mov
test
imul
mov
dec
in
inc
xor
jp
add
and
call
jb
mov
xchg
xchg
push
sbb
dec
jbe
dec
sbb
inc
roll
push
push
test
leave
cmp
mov
leave
jns
fsubrl
or
repnz
jle
jle
xchg
clc
cmp
ss
inc
leave
ljmp
test
or
mov
xor
dec
je
lock
dec
and
cmp
push
inc
push
fiaddl
roll
cltd
jbe
shrb
push
ljmp
test
adc
test
dec
stos
pop
fmulp
int
sub
js
cmp
ficompl
iret
push
fidivs
dec
fwait
pop
das
mov
stos
add
mov
xor
fcmovb
cmc
dec
movsl
dec
xchg
mov
push
lea
mov
int3
add
std
bound
sti
addb
scas
mov
cli
cmpsb
pop
xchg
out
xlat
adc
out
in
push
dec
mov
push
jno
adc
adc
int3
push
jmp
pop
or
repz
imul
insl
cs
push
dec
sar
xchg
insb
lret
push
inc
lahf
enter
and
aad
int
leave
stc
lods
pop
push
stos
js
adc
mov
dec
jmp
sarl
sub
mov
xorl
cmpsb
and
xchg
and
xchg
lahf
push
push
mov
add
movb
jae
or
dec
mov
stos
push
aaa
int3
movsl
in
mov
and
mov
negl
ss
aas
mov
scas
xor
fcmove
xor
stos
shrb
cs
pop
movsb
mov
inc
insl
pop
cmp
addr16
add
cmp
jle
add
iret
cmp
insb
inc
push
movb
idivb
xor
xor
push
mov
jle
jb
insb
nop
aam
call
cmp
mov
pop
xchg
les
dec
sub
or
xchg
adc
loope
dec
icebp
data16
xchg
movsb
pop
mov
cmp
nop
inc
scas
cmp
call
xor
xlat
lahf
jns
adc
or
fstpl
es
xor
ss
xchg
insl
mov
inc
loop
imul
or
iret
mov
jmp
sahf
pop
fisttpl
lock
cltd
xor
sti
enter
jmp
gs
or
out
pop
cltd
dec
jno
fisubs
mov
mov
repz
scas
adc
das
fildll
dec
sbb
sub
jmp
jns
push
lret
push
push
push
pop
data16
and
pop
mov
out
rep
mov
xlat
and
out
lret
aam
and
sub
int
call
popa
and
adc
cmp
andb
movsb
das
jp
cmpl
cmpb
loope
mov
fs
xlat
insb
lea
mov
jno
into
rcl
cmpsl
mov
lea
sbb
icebp
inc
adc
mov
ret
sbbb
dec
push
loop
inc
adc
fcoml
pop
xchg
cmc
les
dec
mov
mov
loop
add
jbe
mov
daa
fildl
dec
sub
sbb
sbb
mov
cwtl
inc
fidivl
adc
jo
out
cmpsb
nop
das
inc
cwtl
mov
loope
sbb
jb
ret
lahf
xlat
sbb
xchg
inc
div
sti
ret
mov
popa
testb
pop
jae
cmc
cmpl
cmp
cmp
jo
mov
sub
arpl
jmp
testl
lahf
aam
in
sbb
cmp
inc
pop
mov
fisttpl
or
out
or
ret
shrb
or
cs
sahf
mov
dec
sub
mov
mov
fs
add
ljmp
movsl
add
scas
fdivrs
adc
jle
jo
xor
adc
pop
fiadds
adc
dec
ficoms
cmp
or
ss
into
push
or
xorl
adc
jmp
adc
xchg
loop
and
fsubl
popa
cmp
add
xchg
inc
in
sbb
xchg
add
cmpsl
fisubs
ljmp
iret
cmpsl
into
inc
pop
mov
enter
mov
imul
push
cmp
in
aas
mov
sub
or
ljmp
dec
xchg
mov
xor
cmp
jno
jne
dec
add
cmp
mov
movsl
in
hlt
mov
xchg
sub
mov
mov
cld
lock
mov
sbb
rcrl
sarb
and
imul
sub
cs
lahf
test
jp
aam
aaa
mov
cmp
sbb
in
mov
pop
push
mov
inc
out
scas
stc
mov
pop
lcall
pop
fsubrs
and
inc
cmp
cmpb
outsb
add
push
xchg
jb
pop
loop
addr16
scas
lea
dec
insb
in
js
sbb
jl
pop
xchg
xchg
adc
inc
sub
test
punpckhwd
shrb
les
sbb
xchg
cmpsl
jb
mov
mov
lcall
iret
or
pusha
inc
sub
push
inc
out
mov
inc
fs
push
lods
xchg
push
leave
xchg
xchg
sub
jns
cli
cmp
xchg
aad
xchg
pop
into
xchg
push
lcall
push
jae
int
fs
dec
cmp
lods
test
mov
divb
ja
lock
outsl
mov
sbb
mov
mov
and
adc
xchg
out
popf
jmp
orb
ss
dec
adc
and
jge
fs
mov
pop
imul
mov
mov
fdivl
into
js
mov
pusha
and
sub
cli
cli
movsb
fdivs
adc
lods
jo
inc
shrl
rol
mov
pop
cmpb
mov
sub
mov
mov
sahf
dec
cmp
and
sti
out
lret
sbb
xlat
adc
cld
btc
sub
adc
daa
insb
jge
and
arpl
test
fs
lods
mov
dec
lds
sbb
adc
lock
popl
xchg
test
dec
fsts
addr16
xchg
cmp
pop
push
loopne
ret
jp
push
cmpsb
lods
ret
stc
inc
out
sbb
cmc
cmp
adc
out
mov
jo
cmpsl
lods
inc
xor
push
ds
mov
mov
push
mov
mov
lahf
or
in
jecxz
pop
aas
loope
int
pop
and
jmp
xor
addr16
push
sbb
push
jl
insb
fisubl
in
in
add
shrb
stos
add
jns
lret
jp
sbb
dec
sbb
jge
inc
es
push
mov
mov
in
add
xor
outsl
and
jo
pop
outsb
xchg
sub
movsl
adc
mov
les
imul
adc
xchg
stc
jbe
ret
enter
push
inc
js
bound
shrb
in
loop
pop
sarl
xchg
inc
cli
lods
cmp
fisttps
out
lret
lret
cmp
inc
jle
mov
jbe
push
sti
sub
xor
sub
and
xchg
sbb
repnz
jecxz
sbb
les
push
fs
mov
lcall
dec
xor
xor
cwtl
ss
dec
pushf
and
mov
adc
into
sahf
xchg
fistpl
ja
ret
pop
xor
test
adc
mov
jle
adc
inc
clc
jbe
sbb
adc
outsb
dec
add
pop
mov
push
adc
ret
ret
inc
lods
jmp
pop
out
add
icebp
cmp
rcl
mov
mov
mov
cltd
xchg
popl
pop
repz
jo
inc
out
pop
ja
cmp
jne
sub
in
or
cmpl
aad
and
mov
lds
imul
es
aas
jb
mov
sahf
xor
and
push
outsb
dec
fdiv
push
lock
xchg
test
imul
inc
cmp
ljmp
jne
mov
aam
xchg
idiv
aas
xchg
pop
cmp
pop
mov
hlt
mov
nop
xchg
push
movsl
mov
pop
rcrb
jle
daa
jnp
lahf
data16
mov
adc
clc
sarb
out
jl
xor
inc
stc
lret
mov
mov
outsb
jne
and
scas
mov
cmpsl
jbe
mov
in
mov
mov
cmp
sub
push
inc
jne
jb
scas
leave
test
and
ret
mov
into
in
dec
out
lret
imul
add
lret
xchg
scas
fsubp
and
push
dec
cmp
das
shlb
mov
xorb
cs
inc
or
repnz
mov
sbb
xchg
leave
ss
notb
out
jmp
daa
mov
inc
adc
movsl
and
imulb
movsl
pop
xchg
aaa
pop
cltd
imul
fwait
xor
mov
insb
repz
cs
arpl
rcrl
inc
jne
imul
mov
call
test
mov
adc
ret
pushf
adc
push
inc
mov
cmp
push
cmc
mov
je
outsb
dec
and
icebp
and
and
pushf
inc
stos
movsb
cmc
jno
jg
cmp
ret
xchg
pop
nop
jno
xor
bound
out
add
fisttpll
loopne
cmp
jge
cmp
mov
mov
mov
ret
cli
outsl
dec
sbb
aad
mov
mov
cmp
xor
out
mov
dec
repnz
xor
mov
lds
mov
fadds
mov
outsl
pop
push
int3
mov
mov
aas
je
adc
pop
xor
xor
and
jle
adc
or
add
pusha
push
test
inc
inc
insl
inc
repz
pop
mov
rcrl
daa
mov
ror
sub
ds
dec
int
stc
cmp
push
pop
leave
adc
aaa
or
push
mov
popf
sub
mov
dec
xor
and
pop
mov
and
xchg
push
mov
xchg
sbbb
and
lahf
push
xchg
icebp
xor
loop
int3
cmp
jle
xchg
lea
cmpb
nop
dec
sbb
incl
pusha
xchg
nop
addr16
test
lock
lret
xor
mov
inc
lret
mov
mov
cmpb
push
iret
movsl
popf
lcall
nop
mov
mov
mov
sti
cmp
push
aad
js
cmp
and
imul
in
cmp
movsl
mov
xchg
fiadds
ds
pop
scas
hlt
add
mov
cwtl
std
jne
jl
jg
mov
push
in
ja
outsl
dec
xchg
cmp
pusha
lds
cmp
mov
std
rcr
sub
cmp
mov
jl
lret
and
cld
push
bound
jbe
ljmp
subl
xchg
add
and
mov
js
xchg
xchg
jmp
fmull
push
pop
enter
cli
and
outsb
fsubrs
cmp
mov
mov
imul
jmp
fisubrs
sub
mov
and
insb
sub
add
jl
mov
sbb
jbe
sahf
leave
std
inc
aas
xor
xchg
fwait
ja
mov
dec
fwait
aas
mov
xlat
sbb
lds
jbe
dec
addl
cli
add
sbb
push
aaa
dec
mov
stos
or
sbb
in
das
push
pushf
call
mov
js
stc
sarl
mov
sub
xchg
scas
call
fwait
sarb
pushf
lods
stc
mov
out
mov
mov
hlt
mov
push
push
pop
in
adc
sub
ljmp
idiv
xor
aam
scas
mov
hlt
jmp
mov
sub
xchg
jl
rorb
popl
push
rcrb
outsb
inc
mov
pop
push
fs
iret
cvtps2pi
lret
movsl
mov
rcr
inc
xor
arpl
mov
or
mov
out
pop
dec
shll
cmp
call
xor
and
mov
loop
pop
inc
dec
insb
and
inc
jbe
and
mov
ja
or
cmpsb
mov
notb
jne
sbb
or
inc
mov
adc
fiaddl
adc
lcall
inc
stc
sub
loope
out
clc
in
enter
js
xor
fsubrs
push
test
mov
jb
adc
cmc
dec
cmp
xchg
ljmp
xchg
inc
inc
mov
pop
lret
cmp
xchg
daa
mov
mov
jns
sbb
mov
jmp
xchg
push
add
xor
outsb
pop
pop
fnstsw
push
pusha
mov
imul
push
mov
cwtl
mov
mov
dec
fadds
sbb
dec
cmp
push
imul
jg
paddusw
jo
inc
adc
insb
loop
mov
imul
jmp
hlt
lcall
and
repz
inc
and
dec
dec
enter
mov
or
popf
sub
in
or
sbb
inc
push
mov
xorl
adc
imulb
insl
dec
sub
fistpl
pop
jle
std
rcl
popa
mov
aas
adc
pop
hlt
out
ss
push
call
testl
jmp
and
pop
sbb
loop
sbb
xor
adc
or
lahf
pushf
xor
fwait
xchg
and
jmp
out
cmp
stos
dec
xor
xor
dec
pop
add
pop
aas
dec
inc
pop
popf
sub
stos
adc
insl
dec
rolb
or
xchg
adc
pop
ja
xchg
jmp
and
insl
add
sti
adc
inc
fisubl
rcll
mov
ja
shlb
stos
sarb
adc
cmp
and
mov
and
cli
add
nop
ficoml
sub
xchg
push
divl
add
shll
cmp
fnstsw
mulb
sub
jbe
pop
int3
cwtl
imul
pop
addr16
and
push
xchg
outsl
das
imul
pusha
ret
mov
mov
lock
pop
and
gs
ret
adc
push
in
daa
xor
movsl
pop
push
insb
dec
or
mov
imul
or
mov
jecxz
test
add
test
lcall
add
jmp
ss
push
ljmp
or
mov
sub
ficomps
fnsave
aad
or
pop
sub
sbb
into
mov
cmpsl
popa
pop
imul
lods
notl
push
dec
fiaddl
test
nop
outsb
mov
mov
mov
jb
mov
cltd
stc
xchg
mov
maskmovq
mov
cltd
fs
add
out
imul
pop
push
test
xchg
mov
mov
mov
sbb
fs
xchg
nop
inc
repz
testb
lcall
test
in
xlat
mov
xchg
sub
xor
cmpsl
or
stc
mov
push
jne
cli
mov
bound
mov
and
imul
and
push
scas
cli
and
xor
sbb
sarb
lock
mov
mov
lret
arpl
cmp
into
rol
outsl
and
pop
ss
jmp
ja
mov
push
jbe
arpl
push
push
mov
fmulp
xor
enter
add
sti
jg
ds
loopne
call
mov
stos
xor
cli
test
xchg
jbe
nop
and
loope
rclb
out
xor
lcall
adc
jmp
rolb
hlt
decl
test
out
lret
jg
adc
data16
outsb
lcall
cmp
mov
adc
jb
sub
sbb
test
cmp
arpl
popa
dec
xchg
cmp
push
cmpsb
sub
jmp
dec
in
popf
rclb
paddsb
je
cmpsb
push
aam
sub
cmp
sub
pop
notb
or
mov
pop
fildl
notb
test
andb
cltd
mov
aam
imul
pop
das
ror
push
je
pop
gs
mov
idivl
stos
sti
das
or
jecxz
div
pop
jbe
shrb
sbbb
pop
cltd
add
pop
enter
push
iret
mov
jl
cs
mov
lods
mov
mov
stc
add
aad
in
xchg
orl
popf
add
mov
mov
jmp
out
fimull
xchg
sub
and
int
xchg
inc
sub
or
int3
jbe
sub
or
rclb
std
push
fiadds
mov
lods
ljmp
mov
adc
sti
cmpsl
xor
and
cmc
icebp
movsb
imul
sahf
xor
movsl
inc
test
push
jbe
dec
cmp
and
cmp
aad
push
or
loopne
push
test
cmp
dec
push
into
push
in
ljmp
into
or
or
xchg
test
fisttpll
pop
les
sahf
pushf
push
in
dec
xchg
sbb
mov
js
aaa
adc
add
call
mov
das
inc
aas
sbb
sbb
loop
dec
aas
out
out
loop
mov
cmp
js
ds
adc
mov
sbb
mov
aad
xchg
jno
and
push
popa
lods
mov
jnp
aad
jae
pusha
cmp
pop
add
cmp
lret
mov
xchg
add
and
mov
jg
das
add
xlat
jle
push
adc
das
ret
or
add
or
sbb
mov
push
sbb
sbb
les
add
sti
jo
mov
pop
push
lds
enter
inc
mov
lods
ficoms
aaa
lcall
jp
cltd
cmp
add
xchg
inc
pop
dec
jle
xor
jnp
movsb
sahf
je
and
add
sbb
fs
in
xchg
addb
sbb
inc
cmp
test
mov
xchg
and
push
pop
sub
dec
jno
and
add
add
mov
int3
pop
testl
hlt
repz
cmp
arpl
push
and
cmpsb
pop
dec
arpl
lahf
fldenv
push
and
push
jns
scas
test
xor
fstpt
push
arpl
cltd
jne
leave
popw
xor
data16
mov
jg
sbb
jb
or
mov
addr16
ret
inc
test
data16
into
clc
pop
inc
popf
subl
imul
into
add
stc
in
ljmp
jb
xor
lds
insl
add
pop
add
cltd
xor
out
xor
aam
inc
add
cli
insl
mov
dec
test
sbb
mov
mov
inc
jp
bound
mov
xor
rorl
xor
insb
ret
lock
mov
stc
cwtl
xor
test
notb
inc
cmp
and
cwtl
inc
inc
dec
or
cmp
pop
out
cltd
or
cmp
ret
scas
add
sbb
add
cli
scas
inc
fmuls
mov
pop
arpl
push
mov
push
add
rcrl
jl
mov
shl
pop
dec
ficoms
dec
dec
mov
test
das
sub
in
jge
or
notb
es
aad
and
repz
nop
inc
xchg
pop
sbb
pop
jmp
adc
in
cmp
jmp
gs
lret
jp
in
lcall
std
xchg
lret
popl
mov
mov
int
dec
pop
nop
sbb
in
je
jmp
xchg
dec
out
in
in
dec
std
imul
push
mov
movsl
cmpb
cli
pop
mov
adc
and
jmp
in
xchg
insb
mov
add
cmp
ficomps
push
lahf
and
push
call
jmp
lea
sbb
inc
rorl
and
mov
andl
dec
dec
pop
aaa
in
jcxz
fbstp
jge
outsl
in
sbb
sbb
icebp
bsf
sub
xchg
daa
pop
inc
mov
jnp
pop
movsl
inc
js
push
fxch
sub
jo
in
ret
popa
xor
push
scas
jg
push
mov
inc
ret
jns
ret
int
xchg
lods
push
faddl
xchg
mov
xchg
pop
scas
lret
stos
mov
test
mov
fstps
xchg
inc
or
xor
push
arpl
repnz
sbb
sub
clc
mov
push
addb
imul
fdivs
mov
je
jnp
sub
or
pushf
btc
or
or
mov
arpl
movsl
in
insl
out
ljmp
cmc
inc
sub
mov
subl
or
ficoms
push
mov
cmp
popf
xchg
xchg
fnstenv
cwtl
or
push
inc
dec
popf
cmpl
out
les
fnstcw
sbb
repnz
iret
lds
jg
pcmpgtw
and
jns
cmp
mov
cld
movl
and
ss
push
inc
add
pop
add
add
xchg
stos
xchg
shll
xchg
mov
jae
xor
xchg
mov
rcrl
mov
and
int
loopne
adc
fadd
jecxz
and
jmp
jmp
pop
jp
add
scas
outsl
add
pop
cltd
fwait
out
dec
mov
fs
jp
ljmp
add
daa
fcmovne
mov
mov
scas
jae
ret
mov
jbe
push
in
scas
sti
cmc
sbb
imul
stos
js
xchg
sbb
mov
xchg
call
push
lock
int
test
out
dec
cmp
jmp
gs
shl
push
inc
std
sbb
sub
rorb
frstor
imul
xchg
inc
jae
push
and
lcall
xor
cmp
xor
jp
das
popa
popf
mov
popf
jle
mov
scas
ret
lods
jge
add
dec
gs
mov
mov
push
jp
movsl
pop
jae
mov
fidivs
mov
xchg
jle
lock
rcr
sub
mov
inc
and
mov
or
sarl
xor
std
cltd
xchg
int3
arpl
adc
pusha
inc
repnz
add
gs
insb
fnstcw
or
add
jecxz
push
ja
pop
pop
fldcw
adc
js
adc
negl
xchg
fs
shrl
lock
mov
jo
sti
sbb
xor
outsl
inc
addr16
add
inc
movsb
or
inc
and
lahf
push
jg
jne
push
ds
xor
inc
jae
arpl
cmp
or
pop
sub
xlat
into
mov
stos
adc
pop
xor
gs
pop
add
dec
je
out
adc
jne
jle
mov
xchg
xchg
arpl
push
mov
aam
test
jne
xchg
shll
test
das
add
mov
fucom
shl
adc
adc
addr16
xchg
ljmp
sbb
dec
addb
push
push
mov
mov
xor
add
je
pop
xchg
push
repz
sbb
movsl
loope
pop
movsb
and
jno
andl
in
jge
lods
sbb
jo
mov
sbb
hlt
shrb
push
adc
jl
shlb
mov
pop
push
andb
aam
inc
inc
and
xchg
les
adc
fsubr
jo
cli
inc
cmc
sub
cmp
inc
sbb
rcrb
test
stc
pop
stos
push
inc
inc
push
es
int3
fcoms
fimull
fisubrl
and
scas
repz
jp
push
add
gs
stc
insl
repz
mov
dec
rolb
out
xchg
fwait
or
es
inc
mov
inc
pushf
inc
test
cmpsb
sub
roll
ljmp
mov
les
jl
mov
jbe
lcall
sub
jae
and
ss
fwait
lods
xchg
pop
mov
outsb
iret
in
jge
mov
push
clc
in
arpl
sbb
sbb
iret
lds
fptan
mov
mov
pop
nop
inc
lods
fcmovbe
mov
mov
pop
jg
xchg
xchg
mov
jge
push
call
cmc
fildl
aaa
fs
repnz
mov
pop
insl
xchg
vaddss
cmp
fsubl
test
dec
popa
dec
or
fstpl
xlat
add
add
fidivrs
jle
xchg
aad
sbb
scas
enter
cmp
mov
dec
dec
xchg
scas
dec
xor
inc
dec
inc
into
cli
iret
sub
jecxz
testl
test
or
inc
stos
gs
mov
sti
cmpsl
lods
mov
jb
sahf
mov
iret
lock
sub
xor
jmp
mov
cmp
bnd
ret
fdivrs
push
sahf
push
xchg
bound
mov
jp
loopne
cli
mov
xchg
andb
icebp
test
jae
push
or
dec
jne
inc
adc
mov
gs
mov
pop
mov
push
add
loop
ss
jmp
ret
and
pop
lea
mov
iret
mov
pop
loopne
lock
fldt
xor
jl
sar
mov
push
dec
inc
ret
inc
push
cs
fadd
jbe
mov
out
add
push
xchg
gs
dec
loopne
jno
stc
cmp
hlt
mov
testl
imul
mov
dec
cmc
in
inc
or
and
jecxz
sbb
cmp
cmp
sub
mov
mov
xor
sub
cmp
jle
push
sbb
in
lock
hlt
pop
int
out
adc
in
aad
mov
andl
rcrb
jne
jmp
or
and
repnz
push
add
mov
rcll
sbb
push
roll
in
in
add
je
lock
cmpsl
cmc
pop
xchg
in
jb
lods
mov
lahf
jge
in
cwtl
test
cmp
mov
adc
cltd
cld
sub
push
cmp
xchg
xchg
repnz
push
cmp
pop
pop
dec
dec
cmp
dec
ret
dec
out
sti
js
into
gs
jg
cs
test
pop
mov
imul
or
loope
push
push
xor
stos
inc
xchg
fwait
stos
and
clc
lock
fisubs
pop
bound
enter
scas
pop
hlt
xchg
imull
inc
scas
and
xchg
mov
int
movsl
add
fiadds
mul
out
insb
fcompl
mov
inc
stos
jp
mov
mov
sbb
mov
jge
pop
das
icebp
aaa
mov
subl
icebp
xchg
iret
rcr
mov
lods
fiaddl
stos
loopne
pop
push
xchg
aas
ljmp
mov
xchg
dec
test
in
sti
test
sbb
jb
in
lcall
clc
dec
leave
jecxz
cli
sar
sub
iret
cmc
xlat
pop
fdivr
cmp
pop
insl
push
pop
iret
and
mov
pop
je
jbe
rcrl
lods
ss
int
test
xchg
popf
inc
fs
jg
or
jecxz
insb
add
xchg
lock
add
push
mov
adc
test
stc
sub
imul
fcoms
inc
inc
test
xchg
cwtl
mov
mov
or
and
es
addl
rcrb
dec
inc
inc
test
push
pop
dec
adc
xor
ds
push
jg,pn
push
aaa
mov
xor
inc
stc
cli
outsl
push
jp
das
fnstsw
pop
mov
stos
sub
jbe
add
jbe
push
sbb
pusha
pop
ja
and
push
push
imul
mov
out
xchg
mov
insl
out
lods
sub
test
outsb
gs
xchg
cwtl
mov
les
lcall
cmp
dec
data16
mov
repz
rclb
fbstp
lock
mov
insl
jae
in
mov
add
repz
push
and
pop
xchg
aam
das
insl
cmpsb
pusha
mov
and
push
xor
sbb
dec
cmpsl
in
jmp
pusha
and
dec
ljmp
gs
in
mov
pause
icebp
jno
ljmp
xchg
loopne
inc
aas
inc
cs
jmp
or
cmp
cwtl
leave
mov
sub
dec
jl
or
mov
sub
or
mov
pop
pop
dec
xor
popf
jg
mov
bound
out
enter
in
lods
dec
dec
push
jno
add
sub
nop
outsb
std
mov
scas
ret
pop
add
js
ljmp
inc
leave
jo
mov
sahf
push
fdiv
push
adc
jl
adc
jle
bound
jp
cld
xorl
ficoml
sarb
repnz
push
lcall
fsubrl
movsb
shlb
outsb
xchg
push
das
push
pop
mov
ja
mov
daa
cld
cwtl
jmp
int
in
pop
push
push
adc
and
jne
inc
test
lock
cmc
imul
lock
jno
xor
add
notb
out
or
or
clc
cmp
int
or
je
rcll
inc
imul
jecxz
fwait
add
adc
aam
mov
mov
les
fsubr
sub
shrl
cmp
pop
cmpsb
cli
icebp
sbb
inc
and
stc
sarb
and
adc
lahf
dec
xchg
pop
fdivrl
and
inc
xor
cltd
pop
push
out
and
sti
sbb
stc
fwait
lock
addl
mov
call
negl
or
push
into
pop
mov
les
pop
addr16
lcall
ret
fistl
mov
mov
iret
add
xor
imulb
cmp
sbb
fnstsw
mov
and
icebp
cmp
xor
pop
gs
cmp
xchg
mov
mov
add
push
xchg
fidivl
lahf
dec
mov
sub
pusha
pop
aas
popf
push
cmp
add
sbb
push
subl
or
pop
sahf
cmp
popa
sub
sbb
and
jge
mov
cltd
pop
mov
jge
loop
sbb
test
int3
pop
and
sbb
rcll
add
or
mov
xchg
or
and
or
jb
and
add
mov
push
test
or
sbb
shlb
inc
fstpt
and
mov
mov
xchg
dec
cmp
push
xor
mov
test
scas
mov
mov
inc
xchg
dec
mov
in
or
in
xor
lods
outsb
ret
jno
mov
mov
push
sub
inc
dec
mov
rcr
push
and
xchg
movsl
pusha
mov
pop
call
andb
pop
test
roll
push
or
and
adc
sti
push
add
jne
clc
stc
lret
mov
pop
xchg
xorb
test
fdivrl
fwait
xor
sti
pop
in
add
fldt
int
scas
push
cmp
push
sahf
stos
pop
inc
xor
inc
into
test
insb
mov
int
or
adc
out
mov
mov
lods
xchg
xor
outsb
loopne
fxch
int3
iret
push
xchg
jne
scas
fimull
jmp
xor
cmp
push
scas
xor
jle
jmp
lock
imul
mov
mov
pusha
test
ret
xchg
shlb
aas
sub
sarb
outsl
out
dec
adc
mov
sub
loopne
or
and
in
cmp
hlt
push
les
mov
mov
sar
or
jnp
bound
or
sbb
lret
shlb
nop
pop
mov
mov
negb
dec
das
jne
mov
mov
add
ss
push
inc
imul
bound
jo
stos
cmc
adc
pusha
pusha
cmp
mov
test
arpl
filds
jecxz
inc
sub
rcrl
cmpsb
xor
push
les
mov
jae
jnp
in
popa
bound
lret
cltd
jle
sbb
aas
je
mov
or
ja
jmp
pop
insl
or
pop
lret
movsb
lret
add
push
cmp
shl
hlt
mov
outsl
loope
mov
mov
pusha
push
aas
cmp
xor
inc
mov
pop
dec
fildl
mov
mov
int
push
aaa
mov
cmp
jo
adc
add
out
mov
wrmsr
or
sti
std
dec
ljmp
mov
pop
xor
mov
sbb
adc
inc
mov
xchg
sub
push
rcr
or
es
cmpsb
jno
dec
std
dec
xacquire
ja
ljmp
xchg
dec
push
hlt
inc
push
adc
mov
mov
test
jns
bound
cmp
daa
push
jle
lahf
lahf
fwait
lock
ffree
dec
push
jb
std
push
sarb
mov
dec
shrb
dec
lret
sbb
pop
rclb
ret
gs
insb
js
pop
mov
dec
inc
icebp
xor
sbb
jecxz
or
sahf
sub
sbb
fs
push
fbld
cmp
and
repz
scas
add
test
fists
push
mov
dec
jno
pop
adc
mov
pop
mov
pop
test
loopne
movsb
mov
lock
cmpsb
inc
pop
xchg
cmc
push
dec
lcall
dec
push
fs
and
jmp
xchg
add
ror
test
fcmovb
pop
repnz
lea
or
sbb
test
or
push
xor
ffreep
dec
sbb
push
cmp
je
push
in
xlat
jae
xchg
cmpsl
mov
test
xor
dec
sub
or
int3
test
pop
in
adc
mov
ja
xchg
xor
leave
xor
lcall
xchg
iret
pushf
adc
mov
mov
mov
jge
pop
adc
fiaddl
cmp
sub
mov
fs
cld
push
std
jecxz
mov
dec
sbb
in
pop
fdivrs
iret
loope
ret
popa
lock
icebp
jmp
cmp
inc
icebp
cmp
pop
add
and
push
sub
xor
cmp
test
mov
sti
dec
mov
and
stos
push
cli
push
orl
inc
bound
and
pop
jg
jl
xbegin
jns
fidivrl
sbb
stc
imul
or
xchg
pop
jecxz
or
test
and
pop
and
xchg
jge
cld
ljmp
test
pushf
int3
inc
lds
jo
mov
pop
js
imul
mov
lahf
dec
int3
outsl
mov
xor
push
lret
xor
jge
scas
ja
adc
jge
pop
pop
push
int
aam
xchg
sub
cs
mov
test
xor
mov
mov
or
xor
ljmpw
sbb
movsl
push
xchg
and
cmc
rcll
lahf
sti
mov
inc
fwait
jmp
andb
in
mov
push
mov
mov
nop
aam
sub
pop
xor
daa
jne
sub
lods
mov
int
pop
jl
jge
mov
adc
int
xor
and
lock
sub
mov
xchg
xchg
mov
enter
ds
adc
dec
xchg
sub
je
ljmp
cld
and
cmpsb
pop
mov
inc
scas
or
stc
pop
fmull
cli
mov
fsubrs
fstl
ds
roll
cwtl
or
mov
pop
mull
mov
stos
jnp
jne
mov
pop
push
hlt
lret
jmp
mov
dec
cltd
xchg
and
sbb
mov
frstor
add
mov
xchg
mov
rolb
inc
in
pop
testb
xchg
add
mov
and
cltd
xchg
xchg
jg
mov
cltd
mov
or
in
cli
lds
cs
les
lock
inc
push
inc
pop
and
or
ret
mov
inc
imul
lock
and
vmwrite
push
ljmp
and
dec
lcall
push
into
jge
push
inc
cwtl
ja
call
das
mov
sahf
jg
inc
add
push
gs
and
outsl
int3
mov
aas
fldt
push
enter
in
mov
pusha
xchg
out
ss
into
pop
xchg
dec
hlt
jno
lcall
bnd
mov
daa
pop
mov
add
xchg
jnp
iret
andnps
dec
pop
or
enter
cmp
repnz
adc
jp
pop
dec
mov
xchg
mov
loope
xchg
jno
lds
and
movsb
ja
dec
stc
call
sub
push
lods
sbb
stc
jo
fidivs
inc
cmpsl
push
fcomps
jo
mov
jno
push
cld
and
cmp
mov
daa
xor
sbb
mov
jns
and
and
xor
nop
xchg
mov
adc
gs
push
mov
lods
into
dec
jns
cvtdq2ps
xor
dec
sbb
stos
push
js
jle
ss
int3
shll
in
cmpsb
or
mov
mov
pop
aad
pop
insb
inc
daa
adc
shll
lret
pop
mov
lret
mov
aam
inc
shll
adc
mov
fnstsw
les
add
dec
lock
push
dec
pop
mov
jne
inc
mov
dec
ss
ret
fisubrl
pop
loop
xchg
mov
add
cmpsl
push
inc
add
fisubrl
adc
scas
jns
pop
hlt
sbb
int
lds
or
cmp
sbbl
popl
dec
jns
dec
mov
add
inc
shll
cmp
fstl
adc
or
sbb
xchg
into
sbb
test
sbb
cmp
mul
sub
dec
int3
cmp
jne
xor
pop
jecxz
fs
sahf
jg
mov
loop
lods
clc
xchg
dec
scas
push
pop
js
mov
push
cmp
mov
mov
xor
shl
rcrl
sahf
lcall
jge
or
dec
inc
inc
xchg
push
xchg
cmp
mov
ja
dec
pop
fldenv
mov
out
fst
sti
lods
push
ds
das
inc
and
divl
dec
and
jp
xchg
xor
pop
lods
hlt
dec
inc
xor
pop
dec
data16
imul
mov
mov
push
sub
push
xchg
inc
jg
push
iret
mov
jp
xchg
les
int
sub
ss
clc
cs
mov
sub
xor
gs
test
ja
inc
leave
enter
addr16
inc
mov
outsl
dec
cmc
or
fadds
cmp
lods
jb
nop
and
ss
cs
mov
movsl
ficompl
or
je
jl
ret
int3
sub
cmp
movl
pop
sbb
sbb
mov
stos
xor
dec
sbb
inc
loop
jmp
add
sbb
mov
mov
mov
lret
hlt
and
andl
cmp
and
xor
dec
and
mov
dec
popf
and
adc
jmp
in
pop
or
adc
gs
inc
adc
scas
int3
stos
xor
mov
in
cmp
lods
adc
jnp
stos
stc
stos
es
mov
xor
cmpsb
movb
movb
fdivrs
push
sar
mov
outsl
xor
imul
mov
push
ret
and
lahf
and
loope
cmp
pushf
jp
sbb
outsb
das
xor
cltd
loopne
pop
je
or
dec
push
movb
xchg
add
or
or
xor
mov
scas
in
mov
mov
cmpsb
scas
aaa
mov
fdivrl
xchg
mov
lret
or
cmp
pop
fldenv
stos
fidivrs
push
xor
and
add
sbb
xchg
sti
leave
xchg
xchg
mov
pusha
dec
jle
das
xchg
jle
sub
dec
in
jnp
pop
adc
or
jns
mov
mov
jns
cmp
fstl
mov
sbb
lods
shll
imul
inc
or
les
das
adc
mov
jns
jbe
hlt
adc
pop
lds
pushf
int
mov
jbe
cmpsl
jnp
adc
scas
push
sub
sbb
insl
ja
test
xchg
push
jmp
es
jg
and
and
xor
cmp
add
mov
fimull
jnp
call
es
repz
out
sti
or
xchg
pop
mov
mov
outsl
sub
int3
sbb
add
clc
push
jnp
jno
xchg
dec
xor
add
jmp
jp
push
dec
adc
push
aaa
pop
lcall
or
out
movsl
lahf
mov
jecxz
xlat
pop
or
arpl
std
sbb
nop
mov
cltd
lret
sbb
xor
imul
xor
and
lods
cltd
scas
xadd
push
mov
pop
imul
shl
fldl
mov
aam
push
ja
dec
sub
xchg
sbb
ljmp
aam
insb
mov
or
pop
xchg
pop
fs
les
jl
repz
mov
or
add
in
and
pop
pop
adc
addr16
insb
adc
pop
in
mov
lock
mov
mov
movsl
xor
mov
lods
jns
push
add
mov
cmp
pop
dec
mov
les
insl
or
pop
mov
test
cmpsb
or
mov
sub
push
rcrl
sahf
cld
cli
out
push
int3
xor
push
in
movl
aaa
jmp
mov
xor
ret
sbb
idivl
outsb
repz
in
lock
ror
rcr
pop
sbb
sbb
jbe
movb
clc
mov
fsubr
pop
insb
push
adc
call
mov
in
mov
movb
stos
subb
mov
dec
xchg
pop
push
das
jno
sti
xor
or
push
add
xchg
xor
cld
mov
jle
mov
fimull
inc
aas
out
add
and
nop
shll
adc
fs
add
cmp
dec
es
rcrb
add
add
mov
mov
add
sub
mov
mov
fdivrl
roll
sbb
imulb
fstps
or
popf
jp
shlb
add
ret
adc
dec
mov
xchg
and
mov
mov
mov
hlt
lods
addr16
push
ljmp
jmp
loope
pop
popf
cwtl
pop
adc
movsb
or
ficoml
add
popf
andl
aaa
xchg
pop
ja
movsl
add
add
mov
scas
sub
fucom
push
adc
xor
bound
push
push
scas
and
cs
jno
sti
in
cs
aam
int
adc
jnp
dec
lds
mov
and
shlb
xor
add
mov
sti
pop
sti
pop
jl
call
out
leave
xchg
inc
sub
repnz
dec
dec
mov
rcrb
js
mov
icebp
aas
push
jae
dec
cmp
pop
pop
mov
xchg
dec
mov
adc
clc
fldl
add
fistps
pop
in
xor
cmp
xor
arpl
cmp
loope
or
and
std
fildll
mov
sbb
xchg
and
cmp
pop
mov
jo
cmp
jmp
decb
pop
scas
movsl
fmulp
push
fstps
mov
enter
jle
xor
das
xchg
push
ret
xor
aam
std
sahf
mov
out
push
stc
sbb
in
orb
inc
sbb
mov
cmp
loop
inc
push
mov
pop
sub
mov
pushf
mov
mov
sub
push
cltd
dec
mov
movsb
andb
push
orb
mov
call
mov
mov
nop
std
shl
out
dec
cs
in
inc
push
and
dec
hlt
jl
or
push
adc
jle
ret
adc
sbb
mov
and
lock
sub
and
xchg
mov
stc
dec
push
in
loope
outsb
les
and
mov
outsb
xor
in
mov
je
mov
or
ljmp
fnstenv
lods
ret
pop
stos
and
lods
outsb
scas
insb
inc
jecxz
xchg
push
pop
stc
sub
test
mov
sub
hlt
adc
pop
lret
lret
dec
xchg
outsl
dec
out
dec
dec
xor
movsl
or
inc
daa
aam
mov
lds
enter
sarl
mov
lods
or
out
or
dec
es
mov
in
pop
imul
and
ljmp
sub
add
adc
sbb
jle
iret
sbb
lcall
sub
loopne
sub
mull
pop
out
fsqrt
jg
sub
addr16
fisubrl
fdivrl
xlat
sbb
sub
insb
cmp
into
cmp
int3
sarb
inc
sbb
adc
mov
bnd
loop
imul
mov
stos
int3
stos
movb
shl
xchg
sub
or
out
jmp
test
jae
iret
cmp
gs
push
cmp
inc
insb
outsl
icebp
mov
arpl
icebp
push
divb
and
jge
das
cs
cli
pop
push
mov
xchg
lea
ljmp
jo
sub
stos
pop
out
cmp
mov
test
mov
lods
inc
sub
push
aam
mov
ret
outsb
inc
mov
add
imul
cmpsl
push
jnp
loop
add
and
mov
cwtl
test
shl
cmp
sahf
push
aas
outsl
adc
mov
fcmovu
dec
jle
scas
dec
lret
loope
dec
and
mov
ljmp
aas
test
mov
movsb
and
cltd
cmc
dec
adc
stc
lahf
cwtl
inc
xlat
xor
orl
pop
js
cs
addl
or
pop
test
insb
adc
xchg
pop
dec
cmpsb
mov
stc
cwtl
sti
mov
sbb
sub
ljmp
cltd
lret
test
mov
fnstcw
faddp
cmpsl
cmp
jmp
fildl
nop
cli
int3
cli
jae
xor
test
lcall
mov
mov
jb
mov
and
aas
fiaddl
fisubl
inc
mov
jne
imul
sete
test
mov
test
dec
sbb
dec
sbb
data16
dec
jle
inc
jle
adc
mov
sub
mov
sbb
cmpsl
pop
pushf
jge,pt
out
or
out
or
test
or
inc
outsb
aad
repz
popf
div
outsl
xor
vmovups
adc
loope
andb
jne
lods
cmp
jl
jp
aad
mov
jns
push
mov
xchg
popa
shll
inc
mov
push
shl
subl
aad
mov
out
adc
sbb
lods
xor
and
out
push
ja
out
fs
sbb
push
mov
lcall
pop
push
movsb
sub
movsb
loopne
cmpsl
or
inc
rcrb
shrl
adc
jne
mov
dec
fxch
xchg
rorb
sahf
push
loope
jle
loope
jae
xchg
push
dec
mov
ficompl
and
jecxz
aad
jl,pt
icebp
xor
jmp
rcrb
push
int
xor
adc
fstpl
pop
xchg
and
inc
insb
mov
xor
add
mov
xor
mov
inc
mov
test
xor
std
je
dec
out
sahf
or
dec
mov
xor
int3
jbe
jae
or
jge
and
nop
mov
fists
xchg
lcall
mov
mov
jp
inc
mov
xor
jp
pusha
pop
sub
int3
sbb
iret
mov
sub
xchg
lret
insb
xchg
andl
mov
sub
jle
imul
rcll
xor
out
pusha
fstl
cmp
sbb
add
xchg
push
jg
add
iret
fstpt
mov
and
pushf
aas
fisubrs
cmpsl
mov
or
add
movsl
inc
lods
mov
sub
mov
jle
sahf
or
out
jle
enter
mov
jbe
loopne
fwait
mov
iret
shrb
adc
stos
lea
xor
psllq
aad
add
cmpsb
std
sarb
mov
xchg
adc
mov
xor
cs
rorl
imulb
xchg
adc
in
adc
lret
push
inc
xchg
xor
inc
mov
cmpsb
mov
and
mov
mov
xchg
mov
outsl
lret
jbe
cmp
push
jecxz
in
imul
add
adc
lock
sbb
test
mov
jg
std
cld
jne
stc
insb
or
adc
mov
out
sbb
pop
sarb
cwtl
mov
inc
mov
int3
call
data16
andl
mov
xchg
in
andnps
test
or
sub
adc
mov
push
scas
outsb
je
xlat
loop
popl
imul
pop
sarl
test
les
test
iret
add
adcb
mov
adc
std
movsb
mov
sarb
adc
ret
jecxz
sti
xchg
jns
xchg
cmp
sahf
dec
push
adc
cltd
pop
jo
shll
fiaddl
jmp
pop
sub
rclb
lds
bound
jl
or
inc
jp
popa
rol
mov
aad
lcall
xchg
aam
shrb
dec
inc
cld
inc
push
ret
sub
jp
lret
xor
mov
jbe
or
dec
icebp
outsb
dec
test
arpl
ja
fistl
adc
xor
in
sbb
dec
push
das
negl
mov
loopne
push
inc
cwtl
into
je
cmpsl
loop
enter
jno
jae
mov
loope
iret
xchg
daa
shr
jbe
scas
pop
cmp
hlt
mov
jge
push
inc
adc
mov
jns
lds
xchg
or
pop
mov
xor
arpl
pop
cmp
push
jecxz
stos
in
negb
addr16
ret
mov
push
xchg
call
cmpsl
push
xor
push
inc
stc
bound
into
jb
mov
test
rcll
add
jmp
inc
xor
stc
lret
hlt
xchg
mov
mov
daa
cs
in
mov
lcall
out
push
out
fstpt
mov
sbb
rolb
arpl
orl
jl
jb
adc
or
les
pop
mov
loop
dec
sbb
jmp
cwtl
repnz
push
sarl
ficompl
sbb
ret
mov
stos
es
dec
cmp
cmp
out
lcall
nop
lds
scas
out
jno
mov
dec
aaa
repnz
imul
fistpl
cmpsb
fiadds
xchg
loopne
mul
and
js
in
adc
xchg
mov
pushf
idivl
js
ret
jp
in
int3
or
adc
insl
in
mov
call
fwait
lret
shrl
aas
lods
ss
jp
jle
loop,pt
push
sbb
pop
mov
aam
mov
push
lret
insb
mov
lds
sbb
pop
or
out
jl
es
popa
leave
xchg
xchg
push
mov
and
lahf
cmp
stos
add
ret
aaa
in
in
out
std
mov
rclb
xchg
push
dec
jno
pop
push
mov
push
xor
icebp
insb
mov
push
cmp
mov
pop
sbb
cmp
ja
dec
mov
jmp
scas
divb
jns
leave
gs
hlt
pop
add
sub
adc
xchg
in
movsb
inc
cmpsl
sub
sahf
jmp
pop
in
in
jmp
cltd
subl
mov
lock
mov
add
das
jge
int3
loope
dec
xor
adc
cmp
fdivs
xchg
adc
in
pop
stos
or
jo
jg
imul
xor
jge
jl
lods
sbb
in
mov
mov
push
xchg
les
push
xchg
repz
sub
mov
sbb
les
pop
pop
push
sub
inc
cmp
inc
inc
jo
mov
pusha
mov
xchg
enter
jno
sbbl
addr16
fwait
divl
inc
xorl
scas
movsb
enter
lds
hlt
fdivl
mov
scas
mov
js
lahf
ljmp
sahf
dec
xor
shl
out
pop
ds
imul
in
dec
lahf
ret
dec
cmp
inc
test
aam
stos
mov
movsl
dec
arpl
sbb
push
fs
sarl
jns
jo
sub
inc
xor
adc
scas
cmp
in
xor
rorb
adc
aam
aaa
or
or
inc
je
outsb
andl
scas
mov
subb
xchg
ret
daa
test
sbb
mov
sub
mov
sub
scas
sub
push
and
jmp
movsb
testl
flds
into
dec
test
sbb
pop
push
lds
push
cltd
dec
mov
pop
cmp
jecxz
dec
cmpsl
stc
fbld
out
out
jae
mov
mov
mov
xorl
xchg
imul
mov
insl
mov
int3
outsl
pop
inc
add
mov
sub
ss
ljmp
xor
xchg
ds
fcoms
sub
sbb
or
sti
outsl
loope
les
out
mov
mov
mov
xchg
mov
je
loopne
out
stos
fcompl
pusha
icebp
cltd
test
repnz
out
mov
out
sub
mov
data16
bnd
sub
mov
cmpl
cmp
lret
dec
inc
dec
aas
ss
push
push
mov
inc
mov
loop
xchg
stos
aas
dec
sbb
sub
bound
jns
dec
in
xor
lds
repz
dec
jae
or
aas
mov
dec
lods
test
stc
repnz
cmp
enter
inc
sbb
jne
cmc
dec
in
jle
adc
mov
xor
in
mov
add
sub
adc
jmp
push
fst
stc
das
test
push
push
lret
test
aas
pop
pushf
sbb
sbb
inc
lcall
mov
add
scas
and
xchg
int
pop
rorb
push
jae
jo
in
xor
movsl
mov
rcll
enter
pop
inc
sbb
adc
cld
jb
cmpsl
ljmp
pop
xor
loop
sbb
sbbl
adc
das
ja
and
xor
cmp
popa
mov
cmp
int3
mov
lahf
dec
pop
or
js
cmpsb
out
sbb
lods
add
dec
call
ffreep
lretw
sar
aad
jmp
mov
call
mov
pop
insb
xchg
push
idivb
and
decb
test
jb
and
cmp
mov
out
xchg
rcrl
add
data16
repnz
mulb
xor
sub
mov
aas
dec
test
xchg
jge
and
jl
das
lcall
andl
js
push
out
mov
inc
pop
test
ds
outsl
movsb
es
push
daa
cmp
lods
cmp
loopew
jmp
outsl
and
aaa
adcl
dec
scas
int3
or
sub
sub
hlt
add
jp
icebp
in
cmp
mov
sub
ds
out
lcall
lahf
movsl
adc
mov
adc
sbb
mov
loope
push
sti
call
fmull
movsl
pushf
into
inc
lods
jmp
call
dec
inc
inc
dec
cmp
add
int
lcall
push
ret
push
clc
fucomp
repz
je
adc
andb
out
inc
enter
jecxz
or
jl
mov
orl
lret
mov
and
lret
mov
mov
or
test
inc
dec
jecxz
add
dec
ljmp
andl
fs
loop
mov
lcall
pop
mov
push
add
stos
pop
test
inc
ds
movsl
repz
dec
cmpl
mov
mov
iret
jnp
test
xlat
movsb
movsb
mov
call
and
jb
add
bound
xchg
pusha
lret
mov
add
inc
cmp
xchg
xchg
pop
ficompl
sti
and
mov
mov
mov
into
addr16
jle
pop
lock
sub
fs
data16
xor
iret
lock
aaa
mov
add
dec
daa
inc
stc
sbb
add
lds
popf
movsb
test
jno
cmpsl
test
mov
cmp
aam
in
loop
adc
jmp
in
inc
xor
adc
leave
imul
mov
jnp
js
push
sub
fildll
or
stc
fidivrs
into
rorl
or
pop
jne
out
std
jp
pop
lea
mov
dec
ret
xchg
cmp
push
mov
test
pop
ja
and
add
sti
in
xchg
inc
int3
jp
mov
daa
sahf
ss
mov
jge
popf
sub
and
xchg
pop
test
in
xorb
lea
mov
xor
mov
test
xchg
jle
pop
mov
mov
lret
cld
cmp
ret
gs
mov
orl
movsl
adc
in
inc
test
stc
int
mov
inc
sahf
dec
xchg
test
sarb
or
dec
stos
or
addr16
into
xchg
xorb
test
inc
xchg
sahf
push
out
inc
adc
cli
jl
stos
xchg
sahf
mov
inc
sub
mov
imul
scas
loope
arpl
adc
xchg
jns
xchg
cld
aas
repnz
push
mov
or
and
imul
ja
push
xchg
add
mov
jl,pt
xchg
add
in
mov
jo
and
hlt
adc
repnz
sub
fsub
pop
lods
sbb
and
sub
inc
dec
pop
mov
sbb
jmp
jns
sub
daa
cwtl
inc
pop
dec
in
inc
dec
push
cmpsl
sub
add
dec
push
arpl
jns
test
xor
fwait
add
fadds
push
cmp
fimuls
das
add
push
mov
jbe
xorb
xchg
cmc
ss
daa
jne
inc
lods
leave
js
ss
stos
inc
mov
daa
inc
xor
xchg
arpl
push
ss
inc
ret
mov
pop
pop
xor
jecxz
fcoms
add
sub
fisubrs
loop
push
and
and
pop
adc
pop
inc
fmull
mov
jle
cwtl
xchg
mov
sbb
int3
mov
adc
mov
and
xor
mov
sbb
jo
mov
jnp
cwtl
jae
dec
lcall
and
fidivs
mov
pop
and
outsb
inc
mov
dec
loop
cmpsb
xor
mov
add
sub
mov
ljmp
bound
add
sub
into
andl
les
add
leave
fwait
xchg
js
add
dec
roll
pop
cli
sub
sub
inc
lods
jg
daa
and
insb
mov
jge
leave
adc
mov
in
and
cmp
pop
int3
imul
cltd
sub
mov
aad
xchg
pop
jne
pushf
push
jns
cmpsl
dec
arpl
jbe
mov
fxam
or
popf
and
mov
xor
pop
stos
mov
push
inc
push
imul
jl
fstps
shll
sbb
popa
cwtl
fucom
mov
loope
and
sahf
sub
rcrb
sbb
cmp
mov
dec
push
sub
jnp
imul
xor
push
cmp
aas
inc
or
sbb
movsl
xchg
fsubrl
mov
lea
inc
aas
ds
mov
xchg
scas
adc
mov
mov
pop
stos
dec
das
xor
icebp
dec
inc
mov
mov
je
int3
xor
mov
in
jns
ret
sbb
dec
out
call
mov
dec
inc
fcoms
cmp
xchg
scas
push
or
int3
inc
pushf
xor
xor
sub
cmp
out
fidivs
xor
movsl
pop
cld
int3
scas
ret
cmpsb
cmpb
pop
or
cmp
push
or
adc
adc
xorl
dec
dec
pusha
xchg
push
push
nop
sub
repnz
inc
and
fmul
test
sub
ds
push
mov
insb
push
adc
inc
inc
test
inc
mov
xor
js
gs
adc
pop
je
mov
xchg
not
adc
imul
add
into
mov
cltd
sbb
or
int
fldl
or
adc
popa
aam
frstor
and
nop
jne
mov
or
jae
sbb
in
and
aaa
pop
in
aam
pop
das
add
jae
daa
mov
mov
mov
lods
add
ja
js
cmp
dec
fcmove
push
notb
xor
sub
fmul
mov
sub
out
movb
mov
lods
lea
dec
cld
rclb
popa
push
pop
leave
mov
adc
mov
fs
flds
rcl
lods
mov
sahf
nop
xchg
std
pop
mov
jne
pusha
mov
mov
iret
int3
inc
ja
iret
out
dec
pushaw
xor
xchg
nop
push
xchg
clc
scas
mov
cwtl
mov
repnz
sub
pop
or
in
pop
insl
and
in
jmp
inc
xor
clc
mov
dec
sahf
sub
ljmp
cli
ffree
fildll
mov
cmp
int3
mov
or
int
pop
lock
in
popf
aaa
fcomp
cmpsl
int3
int
ret
insl
xor
xchg
std
lret
pop
rcrb
fs
mov
sbb
daa
or
out
sahf
inc
dec
cmp
cmp
call
pop
mov
push
lahf
add
faddp
jecxz
ror
sbb
popf
pop
xor
test
mov
outsl
data16
stc
pop
rorb
inc
pop
mov
cs
icebp
mov
inc
and
mov
xchg
mov
push
dec
aam
ja
nop
add
jl
inc
rclb
in
popf
push
imul
bound
push
loope
xchg
jb
add
inc
mov
inc
xchg
push
add
rorb
popa
pop
jae
orb
cmp
push
push
aad
into
mov
mov
into
lds
lret
push
or
scas
ret
fimull
push
aaa
icebp
iret
mov
mov
insl
adc
pop
mov
scas
pop
jb
sub
lahf
lahf
call
pop
pop
adc
inc
leave
fistl
inc
icebp
sub
pop
xor
scas
sti
inc
sbb
dec
mov
fucom
jecxz
add
lock
imul
fwait
mov
sbb
es
sub
js
push
pushf
cmpsl
out
adc
push
divb
out
ljmp
popa
sbb
nop
nop
push
adc
jecxz
cs
cmpps
jmp
in
jnp
insl
inc
roll
mov
js
arpl
xor
in
mov
sbb
mov
adc
shrb
mov
int
or
out
cmp
and
mull
mov
aam
fsubp
jne
add
or
or
cltd
jb
stos
out
mov
decb
leave
sbb
mov
mov
cmp
xor
push
sub
fistpll
pop
testb
mov
xlat
clc
or
sub
sbb
push
test
push
jl
roll
pop
jae
insl
dec
fs
xchg
pop
repnz
mov
mov
bound
mov
mov
shl
adc
insb
jg
cwtl
cmp
xor
scas
jg
fistpl
push
dec
in
xor
jno
hlt
add
fnstcw
sub
ljmp
inc
or
popf
mov
mov
sub
inc
push
fwait
ja
faddl
insl
mov
sbb
rorb
mov
mov
inc
dec
arpl
fwait
cmp
icebp
into
int3
xchg
xchg
mov
mov
sti
popa
sbb
sbb
je
cmp
fstps
cmp
push
in
pop
add
jecxz
lcall
jne
mov
ficompl
cmc
inc
dec
cmpsl
loope
enter
dec
stc
data16
jp
loope
insl
lds
imul
les
cmp
mov
mov
ja
mov
fld
fcomip
xchg
adc
lcall
ja
rorl
mov
shl
mov
movsb
pop
stos
stc
mov
adc
pop
enter
xchg
movsb
repnz
gs
loopne
push
push
imul
ljmp
xlat
popf
aad
jle
hlt
hlt
mov
dec
sub
cmpl
mov
scas
scas
jmp
xchg
sti
test
int3
scas
push
gs
ds
pop
jecxz
cmp
cmp
and
sub
orl
cltd
jne
pop
jbe
jne
mov
or
adc
ljmp
fidivs
jl
in
mov
leave
inc
rclb
in
outsb
mov
adc
inc
cmp
push
and
arpl
push
test
xor
xlat
loopne
pop
fldl
sbb
in
dec
js
sub
dec
xor
stos
pop
rolb
test
pop
leave
pusha
cmp
hlt
mov
push
adc
mov
ret
xor
cmp
xlat
clc
pop
push
lea
stc
jnp
jns
mov
out
cmp
notl
hlt
rcrl
stc
in
daa
push
sbb
cltd
decl
je
lods
or
fnstcw
imul
stc
aad
xor
adc
inc
and
sub
dec
roll
cmpb
or
dec
inc
fs
cmpsb
pop
adc
clc
inc
lods
imull
sub
out
subl
adc
and
fidivrs
cli
ds
lock
nop
leave
push
cld
addr16
or
sub
cmc
fwait
into
push
aaa
inc
cld
stc
pop
imul
sub
or
imul
add
data16
sbb
push
fs
mov
scas
pop
movntq
out
push
mov
jne
add
lock
mov
mov
lods
mov
out
mov
adc
aad
lret
fisttps
pop
adc
push
pop
sub
std
cmp
rcrl
jg
push
and
mov
cwtl
aam
in
out
jns
ljmp
sub
mov
lret
lods
mov
xor
pusha
mov
cmp
addb
sub
loop
fcoml
sbb
or
mov
jb
clc
sahf
jnp
inc
sub
and
push
mov
mov
aaa
in
stos
mov
cltd
sub
scas
xor
fbld
fstl
push
fisubl
mov
lea
call
pop
pop
scas
andl
std
sbb
jl
push
push
sub
xor
xor
ror
dec
sbb
popf
mov
xlat
cmpsb
jmp
mov
in
and
mov
mov
popa
inc
das
inc
xchg
xchg
push
fdivrl
xchg
ja
pop
mov
call
and
mov
jle
andb
adc
fidivl
jns
movsb
cmp
add
mov
jo
jle
cli
clc
pop
out
fwait
lret
insb
loope
leave
fninit
inc
pop
add
int3
out
dec
adc
xchg
sbb
test
mov
adcl
outsb
add
cwtl
push
jb
cmpsb
call
pushf
mov
dec
pop
lea
fcmovnbe
mov
mov
bound
jno
arpl
cs
or
adc
bsf
scas
add
push
adc
lahf
mov
and
iret
cli
or
inc
or
lock
xor
and
add
inc
pop
and
sbb
mov
lods
loopne
sbb
and
mov
out
fwait
lods
sbb
shr
jnp
pop
add
clc
addl
xchg
or
inc
mov
cmp
inc
cmp
into
mov
gs
xchg
and
push
add
pop
incl
sahf
jb
mov
addr16
loope
movsb
mov
arpl
negl
loope
jg
ss
cmpsl
fnstcw
data16
es
and
inc
pop
sbb
lock
sti
insb
push
aam
pushf
into
or
mov
cli
out
pop
nop
movsl
adc
inc
jge
ret
sbb
imull
daa
dec
xchg
int3
lcall
or
add
mov
xchg
test
sbb
pop
int3
xchg
repz
aad
lret
xor
in
mov
int
les
aam
dec
fisubrs
aad
xor
or
out
aad
dec
adc
cli
je
sbbl
mov
xchg
subb
aas
xchg
cmpsl
test
repz
ds
jnp
dec
loope
shl
fwait
or
lods
mov
hlt
jb
mov
dec
sti
sbbb
adc
xchg
sbb
sub
insb
imul
lret
mov
leavew
push
and
popa
loopne
sub
lret
icebp
and
shrb
cs
idivb
add
jne
dec
shlb
rcr
ret
lods
sub
inc
and
gs
pop
shl
push
inc
jae
pop
push
xlat
lcall
inc
inc
nop
push
sub
cmp
push
cmp
ja
loopne
and
popf
pop
rcrb
dec
xor
ret
xchg
sbb
sub
jbe
jo
testl
cld
inc
xchg
pop
scas
or
pop
jb
mov
mov
push
jns
pop
cmp
mov
loopne
cwtl
xor
sub
pushf
add
stos
or
xchg
nop
jg
sub
or
jae
rclb
sti
pushf
data16
insb
ret
push
pushl
jmp
pop
pop
imul
push
stc
xchg
mov
mov
bound
rcrl
leave
jl
jmp
in
sub
rolb
adc
jb
outsb
repnz
ffreep
mov
dec
mov
dec
xchg
sbb
or
mov
jl
xor
cwtl
mov
dec
sub
rcrb
aam
or
ret
stos
pop
pop
sub
ss
lds
jle
mov
popa
xchg
sub
add
mov
cmp
mov
adc
xchg
mov
pop
jne
fmulp
nop
lcall
mov
adc
mov
cmp
lea
inc
inc
push
add
cwtl
adc
insl
mov
and
or
aad
into
in
in
jmp
test
xor
sbb
fmull
mov
fsubrs
sahf
jo
xor
sub
xlat
hlt
inc
pop
adc
pusha
aad
int3
add
test
cmpsl
push
add
add
loope
call
ds
icebp
mov
sbbb
std
mov
mov
mov
xor
nop
mov
stos
test
sbb
lea
pop
add
je
lods
idivb
jns
in
pushf
mov
jns
push
add
xorb
movsb
scas
pop
push
or
jae
leave
lea
popf
cs
scas
and
mov
push
and
loopne
stc
cmp
rclb
ficomps
and
pop
jp
mov
test
mov
loope
mov
add
mov
pop
out
dec
mov
pushf
orl
xor
sar
dec
adc
xchg
jae
je
mov
daa
cmpsl
add
mov
xchg
cmpsl
inc
jg
cwtl
xlat
pop
pop
int3
inc
mov
mov
out
hlt
mov
in
popf
xor
dec
sbb
addr16
clc
push
pop
xchg
repnz
xor
nop
pop
jle
inc
push
dec
icebp
mov
data16
cs
fcmovnbe
pushf
xor
jmp
jle
aad
popa
push
push
pop
dec
xor
and
jmp
movsb
sbb
in
imul
mov
sarb
push
addr16
xor
int3
fisubrs
bound
pop
leave
dec
xor
mov
es
push
xchg
mov
enter
xchg
xchg
sbb
add
push
xchg
loopne
cmp
dec
call
mov
cmc
push
mov
xchg
pop
outsl
fistl
enter
or
roll
ds
lret
xchg
icebp
add
test
aaa
decl
cwtl
adc
push
into
and
xchg
inc
pushf
js
pushf
xor
aad
jo
add
lock
jge
inc
add
in
cmp
cmp
nop
jo
lds
scas
lcall
outsl
lea
xor
xchg
jecxz
sbb
pmaxsw
sti
mov
mov
call
xlat
and
sbb
xorb
sbb
lcall
jb
in
fwait
mov
pop
or
aaa
push
into
in
pushf
ret
inc
shll
mov
loope
aas
xor
popf
mov
outsl
jecxz
movsl
mov
sbb
rorb
scas
call
insl
out
mov
repz
xchg
xchg
push
xchg
fucomip
roll
stos
jno
test
mov
xor
fiaddl
mov
xchg
cmp
cmp
aad
inc
xor
xchg
fisubs
inc
and
mov
push
std
mov
xor
or
ficoms
pop
js
lock
int
stc
ja
xor
mov
xchg
shl
in
shrb
jp
jns
lds
dec
imul
arpl
stc
mov
popf
adc
repz
mov
rcl
call
fwait
mov
fldl
testl
cmp
fsubrs
sub
sub
outsl
scas
out
in
xlat
insl
pushf
int3
ljmp
mov
stos
in
adc
fcmovnu
or
pop
inc
push
roll
mov
pop
fistpl
and
xchg
dec
sub
sub
mov
cmc
push
pop
fnstcw
and
cmp
mov
nop
aas
inc
scas
pop
ret
stos
pop
stos
xor
mov
adc
xchg
ds
xor
push
jo
int
sbb
out
repz
fs
outsl
and
pop
jge
es
adc
ja
mov
dec
popa
mov
popa
scas
add
out
dec
and
pop
xor
and
js
jl
jle
ret
les
pop
push
lahf
out
jne
or
fiadds
mov
dec
lret
data16
movsl
fcoms
jns
sahf
sub
adc
shr
mov
inc
fdivrs
dec
aas
rolb
fnstenv
add
inc
lcall
cld
pop
fsubrl
popf
out
mov
imul
adc
movsb
lahf
cmpl
mov
xor
outsl
push
pop
jmp
lahf
dec
fidivrl
das
cmp
test
test
pusha
rol
xchg
dec
mov
xchg
sar
pop
fstpt
jle
in
test
sub
dec
pop
jmp
sub
fldenv
shlb
cltd
xor
inc
clc
or
mov
lds
and
adc
push
jns
or
out
ja
mov
sbb
mov
insl
add
adc
je
aam
or
inc
rcll
dec
sub
push
int
push
cwtl
or
ret
mov
push
fld1
imul
ret
cmc
out
js
jo
out
test
push
jmp
or
daa
add
cltd
lcall
sub
jecxz
mov
pop
adc
test
mov
addr16
sbb
add
inc
out
sahf
sub
xor
int
pop
mov
mov
sti
movsl
push
loopne
push
movsl
sub
stos
in
pop
push
daa
int3
fimuls
subb
sti
jge
jg
inc
mov
gs
rolb
je
add
pop
inc
sarb
outsb
xchg
scas
jnp
out
sbb
aas
fucomp
dec
addr16
scas
ljmp
mov
and
lret
pushf
dec
mov
nop
pop
data16
cmpsl
cmp
push
addl
outsb
mov
cs
out
aaa
in
push
xor
jecxz
or
dec
mov
pop
pop
cmp
pusha
pop
push
or
cli
inc
and
push
fnstenv
insl
and
scas
pop
repz
add
lods
dec
sbb
lret
adc
xchg
sbb
mov
inc
dec
cmp
push
cmp
sbb
add
push
xor
lods
movsb
inc
or
dec
pop
nop
inc
mov
xor
daa
adc
adc
shrl
dec
mov
sub
jmp
das
inc
push
adc
xor
outsb
sub
inc
mov
jb
cld
mov
inc
xchg
stc
cmp
mov
rcll
jp
ret
xor
aam
cmp
ljmp
test
push
xor
inc
pop
pop
lret
push
dec
lea
mov
hlt
outsl
add
ret
dec
sbb
test
bnd
sti
ret
dec
imul
jmp
mov
pop
movsl
cwtl
cwtl
jecxz
mov
adc
mov
sub
add
inc
mov
xor
out
jl
adc
mov
clc
bound
addr16
fmull
rcrb
inc
scas
jle
sbb
rcrb
sbb
test
test
negb
movsb
imul
aad
cmc
mov
pusha
xchg
jo
pop
add
ret
pop
sub
fiaddl
aaa
push
push
pop
sahf
add
add
ret
rcrb
leave
and
or
mov
cli
mov
pusha
roll
adc
cmpsl
insb
loopne
adc
ss
fstps
and
test
pushl
scas
xchg
lret
and
inc
or
rcr
sbb
nop
dec
mov
rolb
pop
xchg
xorl
mov
cwtl
cmp
in
ror
push
lahf
xchg
rorb
add
je
push
jg
adc
aas
jp
jnp
fxch
jns
inc
mov
sub
rclb
fsubp
cli
xor
jecxz
bound
loopne
add
cltd
jb
mov
sub
dec
sti
rcrl
fldenv
aas
test
rclb
pop
ljmp
scas
sub
iret
xchg
stos
decl
bnd
shlb
pusha
xchg
cwtl
xorl
cs
shrb
mov
test
ss
cmp
cwtl
sbb
popa
aam
cmc
test
push
push
popa
cmp
out
jo,pt
xchg
xor
inc
fildl
adc
sbbl
and
push
dec
xor
push
jle
test
fildll
int
lret
ds
out
push
loopne
popf
add
sub
mov
jnp
ja
jecxz
xor
sub
inc
rcl
std
out
fisubrs
mov
cwtl
sbb
mov
sub
mov
out
pop
mov
icebp
jl
xor
xor
int3
or
push
jp
repz
mov
mov
in
shlb
cltd
mov
dec
les
in
test
fistps
lds
adc
outsb
js
sbb
mov
push
sbb
rorb
jno
idivb
sbb
push
dec
ss
rcrb
shll
xor
insl
sar
mov
pop
test
cmpsl
mov
out
push
dec
push
hlt
add
mov
lret
mov
cmp
adc
and
or
mov
fimull
imul
scas
dec
mov
xchg
repz
dec
mov
xchg
sbb
loope
sub
sbb
adc
cli
cmpsl
push
dec
cmp
xchg
sti
sbb
ja
add
adc
cmp
sub
mov
and
lea
cwtl
enter
dec
jb
jg
ds
push
dec
into
sub
cmp
pop
dec
xchg
leave
push
pop
jae
xor
hlt
lods
clc
add
push
insl
pop
lret
int3
out
or
fimull
cld
aam
add
xchg
mov
lret
mov
nop
nop
pop
aad
cmp
and
push
jbe
jno
mov
in
ficoml
adc
and
xor
ljmp
stos
jle
lock
cmp
pusha
xchg
mov
mov
jnp
sbb
fidivrs
aaa
jno
sahf
outsb
mov
dec
dec
sub
xor
lcall
test
sarb
add
daa
mov
mov
adc
pushf
add
jbe
add
push
push
add
cmp
insb
fs
xlat
inc
loope
mov
jne
fdivrl
ljmp
push
rol
cmp
cltd
fildl
enter
mov
sar
ds
or
imul
dec
push
std
push
mov
outsb
lret
mov
in
xor
cld
imul
lods
add
mov
dec
fiaddl
mov
sub
and
pop
jb
pop
loope
mov
cmpsb
inc
mov
and
ret
outsb
in
mov
mov
lock
nop
mov
xchg
mov
in
cmp
push
in
xchg
fisubs
popa
push
jo
outsl
push
ret
daa
lds
adc
mov
add
cltd
sub
in
lds
mov
inc
imul
loop
sbb
loopne
mov
in
pop
xchg
ds
js
testl
add
mov
adc
xchg
xor
fmull
cmp
adc
dec
stc
dec
add
cmp
call
add
insb
dec
dec
out
sbb
in
dec
dec
adc
cmp
stc
fmulp
sbb
loope
mov
mov
imul
scas
test
int3
ret
xchg
push
inc
cltd
jmp
xor
mov
or
sub
icebp
repz
add
sti
scas
movsb
neg
std
or
push
cmp
mov
xchg
daa
push
movsb
shll
and
or
mov
sahf
push
pop
or
enter
mov
xor
cmpsl
add
xchg
jl
int3
sbb
in
push
xchg
sbb
jae
mov
adc
loopne
xchg
rcrl
rolb
xchg
ret
jo
dec
call
mov
adc
movsb
movsl
stos
stc
shll
fwait
cs
pop
jne
jp
mov
inc
mov
adc
xor
cltd
cli
loop
stc
adc
call
pop
mov
jp
sub
hlt
shrl
mov
es
push
jecxz
test
mov
gs
mov
shrb
insb
jl
js
sub
inc
test
test
sbb
push
ljmp
mov
mov
xor
and
adc
popf
ljmp
leave
inc
push
out
xor
repz
filds
ljmp
movsb
cmpsb
pop
loopne
add
push
cld
shrl
je
loopne
add
pop
pusha
arpl
sbb
ret
add
pusha
enter
cmp
iret
repnz
dec
sub
push
xchg
test
adc
dec
xor
mov
mov
push
lds
leave
push
sbbl
pop
sbb
sub
xor
retw
push
lcall
dec
and
add
mov
xor
push
add
cmp
xchg
push
cmpsl
add
in
dec
xor
das
and
rcl
or
and
dec
mov
ja
jo
push
mov
fcomps
pop
arpl
into
cmp
push
add
test
sbb
scas
mov
sbb
dec
pop
popf
pop
int
pop
mov
cmp
mov
xor
xorb
push
cltd
jae
adc
mov
jp
jnp
ds
jg
jecxz
or
adc
pcmpgtb
sub
mov
andl
adc
lock
push
imul
cmp
mov
fimuls
jo
jo
aas
outsb
jo
mov
lock
xchg
fs
ljmp
or
sub
sti
cmpsl
stc
jg
test
cmpsl
ljmp
xchg
xlat
dec
je
sub
sub
aas
or
movl
cmc
xchg
mov
push
adc
int
scas
or
shll
cwtl
es
fistpll
push
jmp
fadds
mov
dec
mov
mov
sub
inc
js
fisttps
jb
cli
add
neg
aam
push
stc
arpl
inc
push
fnstenv
jg
mov
mov
add
sbb
dec
mov
std
jecxz
mov
scas
cltd
out
push
test
jno
dec
imul
repnz
repnz
or
xchg
cmp
xor
push
lret
les
cmpsl
mov
sahf
test
xchg
sahf
pop
push
push
xor
xchg
les
cli
iret
dec
pop
mov
popf
jb
adc
test
jg
dec
jb
mov
mov
add
adc
cmpb
xor
icebp
cli
push
clc
xchg
std
mov
dec
cmp
mov
mov
inc
xor
fidivl
fstpt
xor
lret
imul
mov
sarb
add
cwtl
push
hlt
mov
rcrl
les
popf
inc
pop
or
mov
sarl
fdiv
xor
sub
jg
mov
xor
movsl
cs
cld
and
adc
cmp
mov
js
das
pop
loopne
out
call
xchg
in
ds
fcmovne
push
mov
std
adc
std
adc
and
mov
ret
xchg
sbb
xorl
inc
cmp
mov
push
out
sbb
add
mov
xor
sub
inc
dec
xor
sbb
flds
int
jge
pop
ljmp
sahf
ljmp
cli
pop
movntq
out
popf
push
fimull
inc
pop
sub
mov
repnz
testb
push
cld
mov
rolb
aaa
cmp
xchg
pop
movlps
mov
enter
daa
leave
mov
adc
mov
sbb
pushf
frstor
sbb
inc
add
ja
lret
repnz
pop
imul
pop
aad
add
popa
jno
mov
sub
insb
xchg
stos
loop
in
xchg
popa
push
andl
push
test
shrb
cmpsl
jp,pt
add
stos
aam
lcall
and
sub
adc
in
enter
movsl
shll
lahf
adc
xchg
jbe
clc
pop
test
adc
cld
addr16
imul
xchg
sbbl
push
or
and
dec
sldt
add
sub
rcrl
mov
jl
push
xchg
jecxz
sub
push
mov
and
shlb
dec
aam
adc
mov
incb
outsb
xchg
inc
shrl
or
enter
in
stc
rclb
shrb
adc
push
dec
test
inc
mov
jnp
aad
push
movsb
lahf
mov
mov
fcomps
hlt
push
arpl
fcoms
dec
inc
outsb
sti
jae
scas
test
dec
pop
stc
sub
mov
test
mov
or
addr16
shr
dec
cmc
sti
and
stos
xchg
scas
orb
pushf
mov
xchg
push
xlat
in
jno
cltd
ret
push
rcr
insl
adc
mov
es
and
pushw
out
mov
jbe
add
jns
adc
jne
dec
adc
add
sbb
test
and
mov
inc
push
pop
movsl
ret
xor
jmp
cmpsl
loop
iret
je
insb
and
in
call
sub
data16
dec
repnz
pushf
dec
ret
fmull
jl
adc
int
jbe
bound
imul
xchg
xchg
fwait
push
decl
cld
push
mov
add
fcmovb
cwtl
lock
pop
and
adc
rorb
dec
cmp
pop
dec
lds
incl
aam
xor
mov
xchg
mov
jbe
imul
lods
jg
scas
cwtl
xor
mov
gs
in
xchg
mov
xchg
jecxz
or
es
int
mov
mov
lcall
leave
ror
sbb
mov
sti
adc
sub
xor
mov
pop
mov
stos
les
fwait
cmc
xor
std
jb
mov
cmp
jmp
clc
cmpsl
push
test
xor
xchg
das
das
movsl
rol
cltd
mov
push
sbb
xchg
xchg
mov
pop
fdivrs
ficomps
enter
lret
test
sahf
lret
cmpsb
lds
lahf
pop
int
xor
cltd
pop
dec
inc
in
hlt
sub
pop
xor
shlb
push
mov
cmp
dec
mov
call
iret
adc
test
and
loope
lret
mull
push
dec
outsl
repnz
xor
inc
jecxz
sub
mov
outsl
cmpsb
mov
iret
xchg
repz
inc
or
adc
inc
xchg
leave
or
push
sbb
mov
fdiv
push
stos
xchg
hlt
mov
inc
cmc
adc
jg
aad
in
xchg
cmc
inc
pop
push
inc
lock
add
xor
inc
or
inc
pop
sbb
cmp
test
decb
popa
lock
sahf
pop
into
fiaddl
fucomp
mov
sahf
dec
add
mov
dec
pop
add
mov
shrl
mov
decl
inc
xchg
push
popl
push
push
test
movsl
inc
inc
ja
jo
fsubrs
incb
pushf
push
jne
mov
or
xor
pop
insl
repz
and
leave
lds
mov
loope
shrl
sbb
inc
std
frstor
adc
xchg
adc
mov
xchg
cs
pop
pop
movsl
xchg
test
loope
jl
or
xchg
or
dec
aaa
mul
sub
mov
rcll
mov
jecxz
inc
icebp
cmp
pusha
mov
hlt
dec
or
subl
add
outsl
pop
jae
dec
pop
sub
or
mov
pop
xchg
imul
lret
in
fcoml
push
dec
dec
jno
fnstcw
aad
jns
push
add
aam
sahf
xchg
daa
mulb
jmp
clc
xchg
femms
aaa
inc
lea
sub
xor
idiv
jae
popa
xchg
leave
test
cmp
incb
dec
shl
sbb
lret
xchg
cmpsl
mov
jle
lods
inc
mov
cmp
jge
sbb
lahf
pop
xchg
out
mov
sub
xlat
cmp
cs
sbb
cmp
inc
sbb
mov
daa
imul
lcall
or
mov
aam
cmp
xchg
jb
sub
push
data16
roll
outsl
je
pop
pop
push
in
lret
add
pop
std
jg
mov
cwtl
adc
inc
xchg
mov
in
loop
pusha
mov
push
out
mov
fwait
cmp
sbb
aas
xchg
adc
cmp
stos
pop
es
push
pop
mov
and
sub
push
cmpsl
mov
mov
repnz
lods
or
cmpsl
or
scas
mov
jmp
int3
and
cmp
cmc
mov
mov
rorl
sbb
imul
push
popa
adc
jl
add
pop
mov
mov
jnp
and
inc
or
icebp
stos
decl
stc
dec
adc
add
inc
mov
shlb
dec
stos
dec
mov
div
sbb
mov
or
inc
fsubrs
mov
scas
daa
fistps
ss
sarl
dec
out
dec
dec
xor
mov
adc
lcall
pop
dec
push
jno
sbb
negb
idivb
lea
cmp
fsubr
incl
aam
or
mov
add
aad
mov
xchg
ds
jge
loop
adc
emms
xchg
adc
mov
sub
cmp
pop
jl
mov
dec
sbb
cmp
mov
push
lea
mov
faddp
dec
push
adc
cs
cmp
movsb
dec
ret
adc
pavgw
sbb
inc
in
in
stos
sub
test
fisubs
addb
and
test
jp
lcall
movsb
cli
fstps
or
jae
mov
push
fs
xchg
jg
test
mov
mov
dec
xor
jno
mov
jbe
ret
out
sahf
adc
jnp
lret
adcb
adc
cld
jae
sbb
mov
sti
pop
push
fdiv
jne
push
sub
in
fcomp
xchg
xchg
jl
popa
inc
dec
pop
out
es
fldcw
call
pop
and
adc
dec
cmp
clc
jno
push
jmp
jecxz
js
or
xchg
cmpsb
adc
pop
pop
fcoml
fwait
leave
jbe
add
mov
lahf
cs
dec
pop
sub
xchg
scas
testb
push
dec
dec
int3
push
cmp
pop
and
xor
rorl
xor
ret
sub
push
dec
sbb
xchg
push
mov
pushf
xchg
aas
adc
fidivrl
pop
mull
das
pop
hlt
cmc
rcrb
jecxz
pop
mov
aaa
jge
xchg
jecxz
movsb
jne
push
enter
cs
xorb
xchg
xchg
leave
sub
xchg
call
rcrl
mov
loope
lcall
aaa
add
pop
test
mov
fs
or
push
inc
jne
fwait
into
mov
into
notl
sbb
xor
add
mov
or
dec
testl
int
ret
dec
data16
iret
or
mov
dec
loopne
ja
testl
pop
call
inc
insl
pop
xchg
and
mov
das
cli
and
fnclex
imul
adc
movsl
mov
rcrl
add
cmp
cmp
cmp
cltd
and
xchg
lods
mov
cltd
jle
aad
sbb
sti
pop
sbb
sbb
lds
add
ljmp
mov
dec
sub
and
lcall
mov
dec
mov
pop
inc
stc
xchg
xchg
adc
mov
scas
mov
fildll
mov
loopne
xchg
cmp
in
jb
rorl
xor
pop
mov
cmp
jne
pop
lods
movsb
fisubl
not
sahf
cs
sbb
aam
ljmp
fdivr
mov
sbb
adc
fidivrs
mov
xor
sbb
jbe
cmp
rol
sti
xchg
clc
xchg
push
pop
hlt
xor
jle
sbb
shr
pushf
jle
inc
arpl
fldcw
aas
and
xor
lea
push
mov
pop
test
mov
pop
cs
and
mov
call
and
rcrb
adc
cmp
pop
call
add
test
or
gs
in
xchg
cmp
inc
mov
and
cs
mov
int
sub
insb
sub
daa
daa
jo
jnp
outsl
cmp
jnp
lds
push
dec
push
fbld
ljmp
gs
lahf
es
mov
fsubrl
loop
sub
sbb
dec
xchg
mov
mov
sbb
ret
jp
aam
movsb
xchg
int
ficomps
in
insl
pop
decb
push
js
adc
or
or
pushf
je
add
add
add
ret
dec
sbb
mov
mov
test
lret
pushf
and
mov
dec
les
hlt
or
daa
xchg
andb
jne
or
sub
xchg
notl
adc
scas
test
and
fidivrl
enter
icebp
jne
jae
cs
xor
ljmp
stos
jge
sub
push
aad
mov
shll
in
jne
lds
out
mov
jmp
mov
popf
jp
fwait
pop
jg,pn
push
jp
push
xor
cld
mov
pop
test
or
mov
mov
cmp
xchg
mov
loopne
fdivr
jge
imul
pandn
mov
sub
mov
pop
es
ret
push
and
ljmp
daa
sbb
popa
adc
enter
ficoml
dec
ja
pop
push
pop
in
jmp
mov
daa
sti
pop
cmp
jnp
test
sbb
lahf
pop
jle
aad
roll
dec
into
adc
inc
aaa
aam
mov
and
mov
popf
xchg
in
sahf
push
imul
stos
jbe
movsl
jmp
sub
cmpsb
lea
idivl
cmpsl
jp
and
popf
push
lret
or
repnz
add
idiv
mov
ja
mov
mov
pushf
cmp
mov
je
mov
jae
aad
test
or
mov
cmp
jl
rcrl
rolb
lret
xchg
ror
push
cmp
add
lods
jno
sti
push
inc
cmpsl
jge
lea
fsts
mov
repnz
and
and
ret
rcrb
adc
mov
enter
je
inc
push
addr16
test
sub
jo
leave
adc
mov
push
testb
pop
insb
dec
sbb
xor
pusha
jl
adc
cli
cmp
cmc
dec
mov
pop
ds
jnp
popa
xchg
sbbl
lods
mov
sub
negb
lea
loopne
mull
mov
vmread
push
cs
sub
paddusb
frstor
xor
imul
push
dec
int3
or
es
xor
shrb
aaa
lea
sub
rclb
sbb
aad
and
xor
pop
das
repz
sbb
mov
pop
sbb
lret
bound
mov
adc
dec
nop
xor
sub
ljmp
xor
test
lcall
cmp
mov
shll
xchg
or
stc
sbb
xchg
fnsave
pop
insl
sub
or
testb
cmp
adc
imul
or
cmpsl
xor
or
js
mov
jp
mov
les
dec
dec
outsb
sub
sub
jle
or
push
dec
adc
inc
das
mov
xlat
repnz
pop
mov
inc
pop
lods
pushf
daa
mov
and
pop
int
es
xchg
in
ret
out
push
fcomps
push
mov
loope
out
orb
outsl
daa
fnstenv
mov
pop
or
mov
das
xor
sbb
adc
negl
ret
jp
div
aam
inc
lock
adc
sub
inc
xchg
sub
dec
popl
jo
pop
mov
and
icebp
enter
dec
mov
enter
dec
mov
ret
cmp
test
daa
sub
decb
fs
xor
les
sub
xchg
push
dec
ret
mov
push
xchg
xchg
jbe
orl
shlb
jg
je
and
xchg
cmpsl
mov
or
or
pop
and
arpl
je
add
sub
or
in
test
bound
push
outsl
dec
test
sub
aaa
and
add
pop
daa
adc
shrl
sub
cmp
sub
daa
out
dec
ret
data16
fisubrs
shrl
lds
mov
cmc
negl
movsb
xorl
add
lret
pop
sbb
add
adc
sub
into
and
daa
rcl
push
mov
xlat
rorl
ja
lahf
into
jecxz
and
incb
ss
and
data16
jo
sbb
push
or
gs
femms
add
pop
mov
inc
xor
rol
xchg
adc
pop
push
inc
dec
xchg
xor
pop
xor
inc
cmpsb
int3
mov
push
cmc
xchg
jns
imul
hlt
cmpsb
stos
inc
jo
mov
adc
in
ret
sub
mov
testl
pop
and
fimull
dec
scas
mov
sbb
test
shlb
outsl
imul
sbb
aaa
add
fsubl
aam
out
push
adc
pop
cmp
add
fdivrs
pop
nop
xchg
fcoml
fdivrs
pop
testb
inc
inc
push
shr
popf
mov
cs
inc
negl
push
rcll
call
jl
push
clc
inc
fs
gs
inc
and
xor
mov
mov
cmc
xchg
lock
sbb
inc
xor
mov
mov
pop
sub
out
dec
js
and
ret
jne
stos
jbe
faddl
jbe
fsub
nop
mov
sti
xchg
ljmp
xor
pop
jmp
ret
xchg
cltd
mov
mov
outsl
cmpsb
and
fwait
dec
adc
xchg
and
push
sti
dec
inc
mov
sbb
inc
std
stos
icebp
xchg
push
jbe
mov
icebp
inc
ss
add
in
loopne
stos
pop
dec
and
popa
mov
add
cmp
stos
adc
mov
lods
es
out
out
ss
adc
stc
inc
test
adc
in
lret
inc
mov
outsb
mov
scas
ss
xor
mov
push
mov
stos
cmp
shr
adc
call
adc
lahf
xor
les
std
or
push
test
call
dec
std
xchg
push
hlt
and
cmp
push
push
pop
in
mov
test
and
ss
insl
subb
mov
icebp
add
in
or
cs
mov
add
fldt
addl
or
dec
pop
sarb
push
mov
or
pop
adc
shrl
cmp
or
mov
insl
jg
outsl
dec
clc
mov
je
cmpb
or
insl
cmp
jle
mov
ret
daa
cld
push
cmp
xor
sbb
pop
or
push
mov
or
scas
sub
in
mov
dec
mov
mov
adc
mov
or
imul
jmp
test
in
scas
scas
cld
dec
mov
mov
and
inc
and
shlb
pusha
sub
dec
enter
fdivs
mov
repz
adc
cmp
pushf
pop
mov
mov
and
ret
in
bound
iret
in
mov
mov
stos
sti
inc
add
and
fcompl
sbb
cmp
in
aam
daa
ljmp
sbb
pop
test
jno
pop
and
dec
std
in
push
loopne
and
xchg
cmp
jo
cmp
hlt
imul
leave
fdivs
xor
movsl
adc
sbbb
ljmp
mov
inc
mov
add
xor
rol
adc
xchg
dec
add
inc
mov
add
mov
dec
add
in
dec
push
fildl
dec
lahf
cmp
adcl
dec
sahf
xchg
pusha
mov
xchg
daa
ret
sbb
cmc
rol
inc
inc
jp
in
stos
xor
cmc
dec
adc
xchg
inc
add
mov
cld
xor
add
sub
push
ret
clc
mov
stos
xchg
xlat
push
jo
call
pop
ja
push
lods
inc
mov
xchg
in
hlt
jl
sub
loope
or
mov
inc
stc
xor
inc
incl
lret
jle
cmpsb
add
stos
in
adcl
dec
add
aaa
popf
imul
pushw
jne
add
jbe
inc
mov
mov
cmp
mov
mov
mov
dec
sbb
xchg
cltd
testl
inc
mov
icebp
lahf
ror
test
mov
adc
or
jecxz
roll
xchg
gs
in
cmp
nop
pop
mov
iret
xchg
sub
dec
dec
push
ret
test
stos
mov
sbb
mov
mov
pusha
mov
jmp
cmp
popf
adc
inc
inc
bound
outsb
add
mov
ja
jae
jl
inc
xlat
fistpll
outsl
mov
cmpl
lret
fisttpl
mov
testb
mov
loopne
jmp
jne
pop
in
fisttpll
sub
dec
pop
mov
sti
out
sub
pop
dec
mov
push
and
pop
mov
mov
jno
ja
cmc
mov
out
cmpsb
sbb
popf
popf
xorl
add
stos
call
push
inc
sub
leave
sbb
push
shrb
js
imul
and
pop
adc
dec
and
xchg
out
insb
pop
mov
jmp
xchg
filds
jno
mov
pop
mov
stos
sbb
sub
gs
cltd
les
pop
out
adc
outsl
mov
pushf
jmp
or
cli
add
push
outsb
adc
pop
xchg
clc
mov
dec
push
mov
ljmp
movsl
mov
jno
adc
cmc
jo
sub
adc
jge
xchg
lret
pop
add
dec
pop
mov
in
shll
fildll
mov
add
hlt
jns
lahf
mov
scas
xchg
mov
stc
mov
cmp
xor
je
inc
iret
or
test
inc
lock
push
jle
mov
or
xchg
arpl
dec
mull
cli
mov
cld
inc
fcmovu
push
negb
fwait
sbb
filds
push
mov
bswap
adc
mov
popf
jp
add
in
popa
dec
fildll
add
xor
dec
fdivl
mov
lods
std
aam
iret
or
mov
imul
leave
mov
jp
mov
in
push
rolb
mov
int
rolb
and
movl
insb
mov
or
adc
cltd
mov
xor
jg
adc
push
int3
and
shll
jle
gs
push
je
jg
mov
divl
mov
mov
lds
int3
insl
push
pop
ja
mov
jecxz
fimull
pop
mov
adc
push
dec
mov
mov
push
test
and
add
lret
dec
add
sub
pop
and
aas
lds
jb
cmpsl
ret
fidivs
jge
int3
lahf
mov
or
dec
fwait
jo
and
imul
dec
xor
add
cmpb
mov
cmp
ficompl
cli
inc
popl
arpl
lock
mov
xor
pop
in
add
popa
lea
popa
std
push
adc
sarl
jle
lods
out
and
aam
dec
mov
jp
mov
xchg
clc
dec
mov
ret
mov
add
ret
push
jne
arpl
ja
dec
bsf
sahf
test
daa
pushf
push
rorb
sbb
mov
mov
pop
stos
adc
sub
inc
jnp
cmpsl
inc
leave
inc
mov
pop
adc
lret
dec
jecxz
and
adc
xchg
push
js
mov
xchg
xor
imul
testb
jne
xchg
jecxz
fisubrs
add
cmp
movswl
mov
xchg
cmp
jbe
aaa
inc
movsl
ja
clc
or
ja
std
xchg
xchg
xor
push
test
ljmp
xor
insb
cmp
mov
sbb
repnz
dec
push
icebp
das
mov
repz
push
sub
fiaddl
or
mov
ret
test
mov
scas
inc
dec
lds
sbb
imul
ljmp
inc
test
movsl
ret
mov
orl
xchg
mov
aaa
xchg
push
adc
mov
cmpsb
cmpsb
sbb
aas
pop
push
mov
adc
fcoml
cld
sbb
or
pop
xchg
pushl
ret
fnstcw
or
cmovnp
sub
sbb
addr16
ja
outsl
push
ss
mov
sbb
rorl
xor
insl
ljmp
enter
inc
dec
divl
ja
inc
jb
push
lret
inc
adc
or
mov
cvtpi2ps
dec
jne
push
sbb
mov
or
push
mov
inc
adc
std
in
std
es
pushf
pop
lldt
insb
cmp
icebp
ljmp
mov
out
test
fs
inc
fs
add
or
mov
and
push
jo
adcb
mov
mov
pop
popa
aam
push
sub
mov
pop
mov
dec
xchg
jmp
xchg
imul
add
mov
rol
xor
dec
ds
jo
stc
out
and
adcb
mov
jnp
jnp
jp
sub
test
popa
sbb
cmp
gs
mov
mov
cmp
lds
inc
dec
sbb
repz
xor
lock
subl
imul
sub
mov
sub
sbb
sub
cmp
mov
repz
mov
andl
outsb
fidivs
cmpb
and
mov
gs
int
pop
jge
or
fs
fs
fadd
shl
nop
outsl
test
inc
adc
mov
rcl
rcr
sub
ficoms
sub
mov
adc
jns
andl
jp
arpl
inc
mov
inc
mov
lret
pop
pushf
add
loop
out
mov
je
jnp
into
loop
cmp
xchg
fmuls
mov
mov
or
sbb
dec
and
scas
aas
leave
sti
loopne
xchg
and
fcomi
dec
dec
push
or
and
mov
jmp
lret
inc
shlb
fidivrs
and
pop
sbb
pop
cmp
xor
dec
fwait
cmc
shll
ss
sub
negb
repz
mov
jo
xchg
lods
inc
vpmaxsw
mov
loop
test
shll
lret
divl
or
mov
cmp
mov
inc
mov
sub
aad
nop
pop
add
lock
jb
addl
sahf
or
shrb
insb
fidivrl
sbbl
enter
fisubl
mov
or
push
test
xchg
or
fwait
ret
sbb
out
dec
add
push
push
in
je
lock
push
dec
shlb
inc
pop
xor
icebp
loope
clc
jl
sbb
add
or
outsl
pop
pop
push
push
sub
mov
ss
stos
lds
or
pop
inc
dec
scas
std
cmp
out
cmc
adc
jge
popf
jb
sub
adc
fiadds
push
test
adc
fidivrs
mov
cwtl
lods
dec
push
jbe
cmp
xor
scas
fdivr
add
lea
in
iret
sarb
pop
and
mov
insl
stos
in
inc
inc
mov
cmc
mov
rcl
pop
cmc
add
dec
sub
push
pusha
stc
push
mov
pop
push
mov
loope
lods
rorl
xchg
shrl
mov
nop
jns
adc
pop
sbb
arpl
jbe
mull
outsb
cmp
push
ret
cs
push
push
pop
cmp
cmp
adc
xor
sbb
mov
jae
mov
xchg
leave
push
add
push
iret
and
xchg
push
ljmp
rcl
lcall
pop
jp
lods
aad
inc
xor
cmp
cmp
lret
cmp
imul
roll
inc
mov
add
into
mov
cli
sbb
lods
movsb
repnz
loopne
dec
ret
sbb
sub
or
cwtl
lds
out
inc
sbbb
add
lret
adcl
pusha
mov
loope
sti
repnz
push
pop
cs
sub
es
lock
call
or
arpl
test
lcall
jecxz
out
xor
out
xor
filds
mov
inc
ljmp
loopne
lahf
cmp
into
sub
push
add
add
push
push
inc
xor
fdivr
pop
call
cmc
aam
mov
mov
jno
inc
and
mov
jno
ds
adc
mov
mov
and
mov
leave
pop
bound
gs
shrb
cmp
xlat
cmp
sub
pop
dec
mov
xlat
aam
lahf
dec
imul
inc
xchg
outsb
push
stos
nop
ror
push
inc
fwait
clc
pop
xchg
test
ljmp
imul
shlb
jo
xor
jge
iret
lds
mov
ja
sbb
fs
in
or
add
and
dec
hlt
add
pushf
call
cmp
lret
sub
or
or
fdiv
mov
cmp
dec
xlat
icebp
int
push
mov
mov
cmpsb
test
cmp
nop
inc
jae
jg
scas
push
add
std
test
xor
cmp
test
nopl
nop
xchg
sub
fadds
addl
push
or
sbb
sub
lods
jecxz
subl
out
mov
lret
imul
mov
testb
and
jb
pop
push
or
popf
cmc
mov
cltd
aam
mov
xchg
adc
cmp
testb
xchg
pop
aam
mov
rcrl
ja
movsb
pop
fidivs
and
inc
inc
test
je
mov
out
sbb
pop
hlt
mov
mov
hlt
add
sub
mov
stc
mov
int3
repnz
add
jbe
add
xor
pop
push
jae
movsl
mov
out
inc
mov
sarb
jbe
push
into
inc
popf
push
shrl
mov
mov
pop
pop
mov
xor
shlb
mov
stc
push
mov
test
and
push
mov
imul
aad
leave
inc
push
pop
mov
sbb
xlat
iret
rol
fistl
inc
add
mov
inc
mov
inc
cmp
mov
std
rcrb
fwait
popf
lods
pop
jge
cmp
repnz
dec
mov
lcall
outsl
jo
inc
js
cmp
dec
enter
adc
jge
mov
cmp
mov
xor
sbb
lods
cmpw
divl
ss
adc
mov
jle
cli
push
pop
push
push
add
scas
sahf
rol
push
jns
mov
jecxz
jnp
stc
cli
in
and
cmp
lahf
sahf
xchg
imul
pop
cmp
shll
mov
sbb
rcll
aas
jbe
stos
mov
or
cmp
fwait
jecxz
cwtl
loope
div
sub
ret
sbb
adc
fisubrs
subb
pop
dec
fcoml
fadds
xchg
inc
repnz
scas
and
sbb
outsb
daa
jno
in
ret
loop
adc
cmp
dec
dec
aaa
xor
xor
xor
cmc
mov
maxps
loopne
and
test
jg
mov
outsl
dec
mov
inc
repnz
mov
out
stos
enter
mov
out
xor
sbb
push
test
imul
mov
popl
dec
enter
dec
pop
aas
shl
xor
sbb
lds
pusha
mull
mov
pushf
jb
std
lock
sub
test
xchg
mov
imul
jns
stos
out
icebp
add
and
and
mov
xchg
mov
pop
out
pop
aaa
ljmp
xchg
xchg
xor
cmp
push
les
daa
mov
add
call
leave
mov
in
in
xlat
mov
adc
sbb
pop
add
es
in
xor
mov
add
lds
inc
jns
and
cmpl
aas
mov
sub
fmulp
int
nop
call
leave
xlat
pop
or
mov
or
sbb
test
clc
fisubrl
lret
in
lods
movsl
adc
daa
rcr
mov
ja
xor
mov
pop
xor
xor
lret
jle
xchg
mov
sbb
pop
cmova
push
icebp
cmp
inc
xchg
cltd
movsl
push
and
mov
xor
cmp
adc
or
popf
xor
or
inc
jge
imul
mov
imul
dec
out
push
and
add
pushl
xchg
or
addr16
ljmp
mov
or
shll
ja
je
add
test
cmp
or
jecxz
out
adc
pop
sub
push
jns
and
jmp
insl
mov
nop
and
mov
jg
adc
or
call
sar
pop
iret
in
mov
in
mov
jecxz
or
add
loope
daa
mov
dec
stos
nop
push
fisttps
js
les
movsl
dec
andl
lret
adc
xchg
hlt
lret
in
out
jns
fbstp
data16
xor
jo
xchg
push
sbb
inc
push
insb
int3
in
ret
jnp
xchg
push
adc
nop
push
and
sbb
nop
mov
lret
dec
loopne
pop
xchg
imul
ss
pushf
mov
sbb
repz
movsl
les
inc
lret
pop
mov
popa
dec
fcoms
js
daa
sub
mov
push
jg
pushf
icebp
xchg
or
fwait
pop
stos
push
fistl
pop
xor
or
inc
bound
dec
sar
je
mov
xlat
push
sub
loopne
dec
jo
hlt
fwait
jmp
pop
subb
icebp
out
ret
sbb
jno
adc
imul
push
repz
outsl
int3
enter
jae
ret
mov
sub
scas
std
mov
xor
push
lods
insl
mov
push
in
push
xchg
leave
lods
adc
mov
mov
popf
add
mov
in
fnstenv
mov
insb
jb
cmp
scas
push
ret
inc
xchg
push
inc
or
push
mov
sbb
jmp
fdivrl
fdivl
jge
dec
cs
inc
mov
femms
popf
sub
icebp
loopne
or
lret
insl
cmp
mov
xchg
ja
add
add
jmp
fstpl
pop
jp
adc
xchg
mov
xchg
add
fsubrl
xchg
repz
xchg
ja
xorb
sahf
mov
std
lods
pusha
je
mov
mov
mov
test
jg
inc
adc
loopne
ret
and
mov
aam
pop
popa
rclb
sbb
fimuls
push
mov
fdivrp
mov
jecxz
push
les
xchg
adc
jmp
mov
loope
sub
repnz
je
scas
rorb
iret
into
movsl
into
jg
inc
in
add
push
sarl
push
pop
cld
inc
in
int3
xchg
lret
lret
rorb
add
cmpsb
cmp
pushf
pop
jecxz
dec
mov
mov
fsqrt
adc
stos
loope
mov
shr
insl
std
icebp
dec
pop
push
lods
lods
popa
cmc
mov
imulb
adc
push
lock
jecxz
pop
add
cmp
push
pop
pop
nop
scas
or
shl
leave
jecxz
cli
imulb
mov
pop
and
push
inc
sub
sbb
fnstsw
xchg
push
aam
aaa
cli
jp
dec
sbb
jle
lea
jae
jb
push
outsb
insb
out
out
aas
mov
fs
imul
imul
fcomps
repnz
fldcw
mov
imul
clc
dec
mov
das
enter
xor
outsl
mov
xor
mov
xchg
stos
push
sub
jnp
jbe
inc
push
push
aad
out
mov
push
adc
enter
test
mov
mov
push
add
push
cmp
arpl
add
sub
aam
dec
arpl
jl
shrb
call
aas
bound
xchg
test
push
and
push
sti
and
popf
xlat
inc
mov
popf
ja
stos
or
shl
xchg
fmulp
pop
das
sbb
mov
jne
enter
xchg
jno
loope
sub
xchg
int
daa
jg
pop
setb
cmp
inc
cmp
bound
out
add
lret
stos
sbb
cmpsb
test
add
cmp
movsl
dec
js
sub
int
xor
mov
add
sbb
push
dec
pop
jmp
leave
sbb
xlat
cld
mov
out
push
xlat
in
push
jmp
movsl
xchg
js
sti
jecxz
into
and
mov
sub
mov
dec
incb
xchg
xlat
cld
loopne
cmp
adc
mov
lret
fsubrl
mov
xchg
pop
test
xchg
popa
sbb
sbbl
or
test
xchg
push
jle
arpl
sbb
inc
push
outsl
mov
jp
inc
scas
push
test
xchg
jnp
popa
jmp
sbbb
addr16
sub
add
push
scas
mov
pop
mov
outsl
cmpb
iret
push
call
xchg
or
inc
or
lods
adc
push
outsl
sbb
test
fbstp
xchg
xchg
incb
adc
mov
imul
sub
and
pop
mov
pop
mov
call
and
mov
mov
add
cmc
jge
inc
inc
push
ss
inc
jns
jge
shl
xor
push
pop
fwait
lea
sahf
push
mov
aaa
mov
sbb
adc
inc
sti
pop
mov
jmp
xor
cwtl
cmp
cld
jo
jbe
add
inc
in
or
push
add
jae
push
popf
test
dec
insb
lock
imul
ja
sub
push
stos
jnp
push
rcrl
mov
jnp
mov
mov
xor
and
enter
negl
and
cltd
inc
pop
dec
inc
push
jp
cmpsb
into
xor
lcall
jb
or
fidivrs
mov
test
out
mov
aaa
fsubr
ficoml
stc
mov
inc
pop
xchg
cs
add
dec
xor
sbb
inc
sub
shrb
std
add
ret
stos
sbb
pop
testl
mov
sub
pop
cmc
and
ss
fisubs
sub
sbb
mov
ja
jmp
nop
sbb
movsb
into
leave
stc
les
out
inc
testl
adcb
mov
loopne
pop
lods
jmp
fwait
push
jge
jg
xchg
push
negl
mov
ret
push
or
pop
hlt
mov
push
xchg
sub
push
subl
mov
push
sti
sbb
sti
popa
push
dec
dec
cmpl
pop
in
dec
xchg
jno
lods
fmull
and
push
sbb
mov
cmp
imul
mov
xchg
fstps
imulb
and
jecxz
testb
pop
js
sbb
insl
xor
mov
mov
mov
dec
nop
mov
pop
movsl
adc
push
aam
jle
repz
lods
mov
inc
fs
and
and
sbb
mov
add
jmp
add
mov
loope
loope
leave
lds
dec
xor
xchg
insl
mov
push
cmp
mov
lcall
fisubrl
and
lahf
stos
xor
adc
mov
cmp
lods
or
xchg
fs
test
inc
rcll
mov
pop
jne
mov
and
push
in
fsubs
cld
sub
hlt
cmp
or
xor
push
lcall
lods
adc
pop
cmpsl
push
push
outsl
out
push
test
into
insw
xchg
repz
jmp
stos
add
adc
flds
push
pushf
jo
mov
rcl
dec
or
inc
cmpsl
test
and
rorb
in
inc
mov
out
aam
ja
scas
stos
xor
add
icebp
cmp
cwtl
ss
mov
and
xor
push
or
stos
addl
push
dec
cmp
xchg
push
sub
andl
and
or
jb
jge
repnz
test
inc
dec
pop
sub
rolb
jb
add
xchg
lret
dec
xchg
nop
ret
push
sbb
xlat
cwtl
ret
ret
inc
add
in
popl
loop
pop
aas
mov
mov
faddl
je
xor
sbb
in
or
sub
xchg
idivl
aas
insl
mov
inc
mov
fdivrl
xchg
adc
add
lock
aam
dec
pop
stc
rol
notb
scas
out
xlat
jne
add
rolb
mov
dec
fdivl
pushf
lret
adc
inc
push
dec
cltd
jp
aas
push
bound
test
xchg
cs
pop
arpl
fsub
xchg
dec
imul
pusha
and
mov
nop
adc
inc
or
jns
sahf
mov
mov
push
popf
in
aas
mov
mull
in
pop
cwtl
jl
push
cmc
dec
popa
and
pop
in
int
pop
lds
cmpsb
fstps
divb
jle
and
imul
sbbb
xor
mov
mov
pop
shl
jle
stmxcsr
cmp
aad
cli
push
popf
lret
movsb
or
mov
mov
clc
cmp
xchg
into
inc
or
and
lds
push
push
jbe
pop
push
xchg
pop
jb
lock
pop
xor
adc
push
push
movb
sub
shll
into
sti
or
dec
pop
jns
loopne
mov
sub
mov
call
arpl
or
loopne
ds
ret
sub
enter
mov
faddp
pushf
sbb
pop
adc
adc
outsb
aas
xor
dec
incl
add
dec
mov
and
adcl
push
inc
cwtl
test
jl
xor
push
out
push
dec
jbe
jl
data16
rol
sub
test
enter
movsl
fs
sbb
and
mov
inc
outsb
pop
arpl
inc
adc
push
cmp
mul
data16
pop
and
dec
mov
cmpsb
jo
lods
dec
adc
xor
jp
or
cld
outsl
xchg
insb
test
jbe
push
cmp
cmp
aaa
push
pop
cmp
sub
fimuls
add
repnz
ret
mov
lret
je
jp
aad
mov
jp
movsl
cmc
inc
or
shll
jns
mov
cmp
call
call
arpl
fabs
mov
mov
mov
ss
ret
sbb
jle
xor
and
cmp
fldcw
std
xchg
shll
ror
push
into
dec
sbb
xchg
xor
das
inc
mov
inc
call
cli
inc
daa
sbb
mov
mov
mov
out
adc
fists
push
pop
insb
jbe
sub
mov
sbb
sub
mov
xchg
push
out
jl
jmp
push
lret
popf
cmc
xlat
sub
test
xor
dec
mov
inc
int3
jg
dec
sub
cmpsb
fcomps
push
jb
inc
int3
sti
push
sbb
mov
inc
outsb
dec
and
xchg
mov
pop
mov
cmpb
mov
iret
test
arpl
movb
in
add
inc
xor
icebp
lea
xchg
pop
mov
sub
outsl
push
out
icebp
dec
adc
and
mov
mov
dec
dec
imul
sbb
inc
loope
pop
mov
push
mov
rclb
adc
stos
call
call
jmp
pushf
xor
sti
lock
out
jns
arpl
mov
lods
mov
sbb
push
pop
ffree
cmp
or
repz
bound
das
loop
ret
push
pop
jmp
mov
push
popf
pop
data16
test
adc
sbb
loopne
jg
cmp
adc
add
cmc
adc
mov
push
sub
jae
add
icebp
inc
scas
push
sbb
adc
or
das
jns
sub
mov
push
sub
mov
pop
adc
mov
mov
sbb
pop
pop
add
mov
nop
mov
test
xor
ja
mov
and
enter
and
mov
and
jmp
adcl
mov
fs
arpl
mov
mov
push
dec
sahf
enter
lret
xor
or
pop
mov
lods
mov
test
adc
repz
or
sbb
pusha
aam
adc
adc
seto
xorb
sub
and
mov
scas
sbb
scas
push
inc
mov
faddl
iret
es
pop
notl
popa
out
add
std
mov
pushf
adc
xchg
mov
movsb
pop
pop
mov
sub
int3
add
sub
jb
jmp
pop
and
sub
inc
push
inc
in
repz
repnz
data16
adc
hlt
jne
adc
xchg
jmp
test
dec
in
fadds
imul
xchg
push
xor
getsec
out
xor
cmp
imul
adc
pushf
cmpsb
lret
push
mov
or
fisttpl
les
ret
lcall
fldt
sti
lock
cmp
lahf
pop
ljmp
pop
jge
mov
mov
pop
ss
pop
adc
dec
pusha
ljmp
cmpsb
hlt
jae
out
xor
test
jg
imul
lods
into
pop
inc
test
push
cs
sbb
ficomps
or
push
jp
xchg
xchg
jl
iret
pop
pop
out
xor
dec
mov
leave
mov
sub
and
std
jmp
mov
in
test
imul
dec
mov
int3
loop
xor
mov
xchg
mov
test
pushf
addb
push
lods
pusha
jno
pusha
and
xlat
push
dec
jb
stos
push
mov
mov
xchg
adc
js
addr16
es
and
mov
fsubl
hlt
mov
pop
call
imul
cmpsl
xchg
shlb
add
mov
adc
sub
sahf
or
lods
xchg
cmovne
mov
adc
addr16
or
add
outsb
jb
cli
fnstcw
push
jge
rcr
jb
mov
mov
mov
push
push
gs
ja
xchg
or
mov
ss
fs
repnz
outsb
jb
mov
ret
xor
out
int3
jl
mov
xor
mov
scas
mov
mov
into
and
inc
mov
xchg
loop
xlat
mov
divl
pop
jecxz
imul
sbb
into
xchg
pop
inc
aam
cmp
mull
test
ret
jo
stc
push
inc
fcmovu
dec
sti
push
stos
mov
sbb
xorl
cwtl
jb
ss
adc
push
jmp
mov
xchg
aas
jbe
jg
xchg
mov
mov
aaa
push
pop
lret
stos
daa
dec
mov
hlt
gs
jo
iret
stos
add
dec
enter
xor
loopne
shlb
es
mov
imul
jbe
loope
inc
sub
fstpl
lret
and
jecxz
or
mov
imul
jmp
push
dec
loopne
mov
test
lods
rorb
sub
mov
aam
imul
inc
jae
jge
fwait
dec
icebp
push
inc
mov
filds
sbb
pop
lcall
inc
push
pop
cmpl
loop
mov
leave
xor
mov
call
adcb
adc
mov
out
sti
dec
and
fcmovne
or
inc
adc
je
sarb
xor
stos
add
test
lock
adc
bound
lods
and
jno
iret
js
fs
mov
add
xor
jno
sub
mov
adc
push
shrb
xchg
js
jnp
enter
adc
sarl
cmp
jns
fidivrs
jg
pop
lods
jp
fbld
loopne
xchg
mov
hlt
xor
xor
mov
xchg
inc
mov
or
std
lret
imul
push
sub
dec
cmpsb
dec
adc
faddl
jb
stos
xchg
sti
sbb
sbb
mov
ja
mov
fdivrs
or
data16
xchg
outsb
mov
push
cmp
pop
pop
mov
sbbl
cmpb
into
inc
dec
cs
je
xchg
adc
int
adc
mov
rcr
std
in
cmp
jmp
push
mov
add
lret
loop
inc
inc
dec
data16
idivl
jecxz
jmp
aaa
leave
sti
in
jp
mov
in
mull
dec
mov
mov
je
cmp
mov
lods
out
jge
jbe
xchg
sbb
jo
mov
xor
fldcw
outsl
leave
xor
adc
and
cli
fcmove
xor
pop
inc
cmpsb
jge
cmp
adc
and
jmp
test
mov
insl
movsb
xchg
or
int
out
cltd
sahf
xlat
lret
xchg
jbe
out
into
push
sti
lods
ljmp
aad
pop
mov
pop
xchg
dec
outsb
loopne
mov
out
push
mov
add
gs
dec
inc
add
mov
lahf
push
cmpsb
dec
mov
loop
pop
mov
cmp
jle
inc
add
push
dec
adc
scas
mov
mov
js
inc
push
movsl
pushf
jne
xchg
or
cmc
call
push
test
push
and
shr
cmp
mov
movsl
mov
add
mov
movsb
lret
xlat
xor
or
push
mov
mov
data16
cmp
add
mov
inc
inc
je
push
insl
lock
leave
sub
xchg
mov
test
inc
orl
mov
loopne
lret
add
sub
mov
jb
fs
pop
mov
adc
fisttpl
sub
inc
frstor
test
movsl
fdivrl
outsb
push
sbb
mov
adc
cmpsb
mov
dec
cmp
dec
jbe
push
shl
lret
cmp
xchg
xchg
mov
xchg
xor
dec
push
xchg
jp
mov
pop
rorl
dec
mov
ja
pop
adc
jbe
cs
in
push
add
ja
mov
cmp
shlb
mov
jl
adc
idivb
fistl
testb
jns
pusha
pop
mov
and
fisubrs
bound
jg
sub
jle
addl
mov
inc
cld
jno
adc
cmpsb
push
dec
sbb
or
push
or
push
mov
ds
adc
cltd
cmc
jns
sbb
mov
dec
jmp
jge
lods
imul
test
mov
outsl
test
or
or
adc
shrl
mov
pop
test
sbb
add
loope
ret
mov
cli
cltd
mov
cmp
mov
lods
stc
dec
push
hlt
movsb
mov
push
xlat
jmp
xchg
mull
mov
pop
roll
clc
std
fidivl
pop
dec
add
sbb
and
ret
sahf
lahf
xor
ret
repz
mov
mov
jge
stc
cltd
jb
push
sub
mov
js
lods
sbb
xchg
in
popa
fnsave
lods
xor
mov
cld
fildl
loope
call
ret
aas
adc
push
lods
jecxz
out
pop
sahf
incl
sub
xchg
outsb
shrl
ret
sbb
jns
inc
sbb
adc
jl
mov
test
cld
xchg
dec
leave
lock
in
sbb
pop
imul
lcall
jbe
stos
push
sbb
aam
ds
lods
rorl
rcll
xchg
out
ret
mov
ss
and
popa
xchg
scas
cmpsl
push
out
mov
mov
jle
mov
adc
fcmovbe
pop
pop
fstpt
dec
js
lods
addb
ljmp
sbb
xor
cmp
and
bound
cwtl
pop
push
es
shl
inc
cmc
mov
jge
xchg
pop
dec
clc
cmp
jae
pop
imul
jo
in
inc
or
je
movsl
inc
je
stos
shr
dec
nop
scas
icebp
pop
rcl
popa
pop
insl
cli
imul
cwtl
shll
xor
cmpsb
lahf
cs
lret
push
fimuls
mov
and
push
into
out
mov
dec
scas
sbbl
sbb
pushf
or
divb
mov
mov
inc
and
xor
sub
test
or
push
daa
jnp
pusha
fwait
aas
ret
jnp
dec
pop
enter
and
and
clc
or
adc
cs
in
js
in
jp
mov
push
xchg
int3
xchg
push
add
mov
into
sbb
adc
pop
fstps
or
pop
daa
jg
daa
lds
push
subb
loopne
add
xor
mov
cmpsl
cmp
mov
testl
adc
add
pop
inc
out
cmp
loop
into
rclb
xlat
cld
sub
mov
cs
xorl
aaa
int3
and
mov
mov
pop
stos
lahf
test
xchg
sub
stos
jecxz
add
popf
xorl
ret
pop
call
rorb
mov
stos
dec
sbb
mov
sbb
cmp
push
xlat
mov
sarl
fistpll
fldl
push
and
xchg
adc
mov
repnz
add
je
mov
cltd
inc
sub
repnz
xchg
pop
dec
lods
adc
ljmp
dec
insb
pop
pop
cwtl
jbe
xchg
hlt
mov
inc
clc
mov
cwtl
jbe
decb
cmc
cmp
mov
sub
lods
jnp
jmp
fimull
mov
adc
lods
pushf
jp
cmp
xchg
sahf
rolb
or
pop
test
sub
mov
out
hlt
jp
and
roll
xchg
jle
xchg
pop
pop
loopne
cli
mov
cs
lock
xchg
cmpsb
sub
sarl
pop
or
mov
mov
fbld
call
sub
iret
pop
push
dec
mov
ja
rcll
out
iret
add
stc
push
xchg
jg
mov
imul
pop
fdivp
orb
fildll
lahf
notb
stos
repz
lcall
push
sbb
mov
sbb
data16
rcll
cmc
lahf
jle
into
add
in
in
mov
data16
cmp
loopne
mov
ljmp
mov
pop
or
sbb
sub
dec
scas
cli
lret
in
dec
adc
imul
ret
push
xchg
lret
jge
pop
xor
xor
stc
cmp
stc
jo
enter
pop
sub
repnz
or
sbb
push
lods
and
push
pop
js
pop
rcrl
pushf
sbb
sub
outsl
mov
inc
jo
movsl
mov
sub
cmpb
mov
mov
and
jl
add
scas
push
and
dec
xchg
xor
cltd
lods
jae
bound
rclb
aaa
das
cli
xchg
gs
sbb
adc
jno
ret
cmp
dec
imul
js
test
imul
sbb
xchg
cmpb
imul
aad
outsb
xor
loop
call
in
and
inc
mov
cld
mov
notl
push
or
inc
ss
nop
outsl
shrl
jg
pusha
mov
cmp
mov
jge
lret
sub
aaa
xor
xchg
inc
inc
sub
jae
and
pop
mov
fidivrl
add
or
movsb
in
mov
cltd
lret
push
arpl
shr
fst
mov
mov
sbb
sub
divb
int
or
mov
cmp
cld
add
popa
clc
jae
pop
pop
pop
lds
adc
mov
jg,pt
in
inc
rorl
dec
clc
mov
mov
mov
xchg
inc
inc
lods
arpl
mov
sub
out
and
sub
dec
jno
movsb
add
outsl
das
subb
repnz
lods
lods
inc
jo
or
scas
mov
cltd
mov
daa
and
mov
data16
in
mov
dec
fwait
xor
pop
xor
xor
cs
sarb
xor
test
aas
aam
mov
out
pop
pop
dec
push
cmp
sub
push
cmp
and
hlt
sbb
mov
dec
std
cmp
iret
fnsave
adc
dec
pop
cmp
jg,pt
cmc
mov
lods
int3
les
aas
filds
in
leave
inc
outsb
xor
jb
dec
stos
call
arpl
lods
cli
push
mov
adc
push
inc
push
jno
adc
mov
nop
xor
jno
push
xor
xorb
mov
mov
sbb
fisttpl
jge
jnp
outsb
in
inc
push
sub
outsb
push
imul
sahf
arpl
inc
lods
xchg
pop
sbb
jg
pop
arpl
loopne
popa
fisubrl
insl
pushf
js
or
cmp
push
popf
addr16
cmp
xor
add
fwait
ror
mov
dec
movsb
adc
lock
mov
out
sub
and
push
pop
mov
addr16
fstps
dec
and
lret
daa
and
adc
push
mov
push
add
cmpsb
pop
sbb
or
dec
ljmp
xchg
push
add
pushf
maxps
cmp
int
push
and
repnz
pop
mov
shrb
mov
xchg
lea
xor
mov
hlt
adc
lahf
clc
pushl
mov
test
popa
push
loope
and
repnz
loop
lods
xchg
add
inc
mov
hlt
sub
dec
fadd
rolb
pop
negb
aad
into
mov
stos
push
inc
xchg
pop
or
sbb
xchg
cmpsb
int3
inc
and
xor
addr16
and
loopne
insb
in
cmpsl
cmp
lcall
idivl
sub
and
and
inc
aas
jle
mov
inc
mov
lret
cltd
pop
adc
test
data16
jne
pop
mov
xor
jo
lcall
push
repnz
add
mov
out
stc
pushf
js
mov
lock
xchg
mov
ficoml
dec
mov
scas
mov
mov
mov
ret
ds
fsub
push
sub
aam
lock
ss
aad
outsl
xor
fldl
mov
and
adc
inc
call
push
mov
mov
xor
mulb
xchg
ret
insl
cmpsb
or
xchg
add
xchg
lret
and
int3
and
es
stc
push
ret
push
inc
aad
pop
xor
dec
pop
fdivl
cmp
fcomip
inc
out
mov
inc
push
imul
pop
pop
cli
mov
mov
mov
jg
xchg
add
add
loop
test
and
cli
jne
sbb
jns
cmpsb
pop
sbb
bound
sbb
jg
loope
fistpll
push
jecxz
dec
sbb
pusha
int3
dec
icebp
jge
jbe
sti
inc
and
sbb
gs
inc
dec
in
sbb
lds
inc
push
adc
faddl
dec
pop
cmp
sbbl
lods
mov
subb
cmc
pop
dec
repz
xchg
nop
sarl
and
lret
scas
fsubrs
test
icebp
dec
hlt
mov
pop
aam
fistps
inc
scas
push
mov
test
cmc
sbb
fbstp
xor
cmp
dec
mov
ja
dec
mov
adc
push
xchg
adc
jge
mov
cld
jecxz
mov
and
sub
jnp
mov
adc
insl
sahf
sub
ss
inc
ds
mov
jae
out
sbb
into
mov
into
mov
into
sub
fistl
xchg
lcall
jl
cmp
sbb
push
dec
std
mov
out
cmp
in
lods
xchg
bound
add
cmp
push
jle
xchg
stc
popa
leave
imul
iret
out
xor
jl
add
in
xchg
adc
lcall
sti
in
sbb
inc
mov
out
xchg
cmp
movsl
iret
scas
test
lods
repz
pop
mov
dec
or
push
je
mov
clc
test
inc
mov
jbe
test
or
sub
add
out
sarb
cli
jl
adc
addr16
and
inc
mov
adc
jb
xor
fiaddl
loop
or
mov
mov
and
jb
lods
push
dec
stos
rorl
sti
pop
jg
mov
jno
dec
ret
cmp
cmp
dec
add
mov
mov
mov
inc
lret
std
xchg
leave
pop
pushf
out
pop
cs
stos
or
adc
test
xor
push
dec
movb
push
pushf
cmp
jecxz
mov
jbe
xor
mov
insl
or
test
xchg
and
cmp
enter
jae
aam
lret
push
test
adc
sub
imul
nop
xor
jne
aaa
mov
adc
shll
mov
xor
pop
data16
pop
pop
icebp
sbb
mov
mov
dec
or
lcall
shll
out
sub
cmp
pusha
add
xorl
add
jbe
jp
adc
inc
loope
adc
mul
mov
loopne
aas
xchg
fwait
sbb
in
and
xor
xor
sbb
dec
cltd
je
cmpsb
outsb
mov
pop
loopne
out
mov
dec
xor
mov
stos
mov
pusha
jbe
cltd
jo
adc
repz
pop
and
jae
xchg
cmc
push
out
mov
and
push
adc
cmp
xor
mov
dec
xor
aaa
imul
push
stos
in
shr
mov
jle
je
pop
jmp
mov
jae
pop
push
in
push
cmp
sub
jns
lcall
xor
incb
push
sub
lret
sbb
es
lds
mov
or
out
clc
cli
test
push
addr16
xor
dec
insb
ja
imul
xchg
pop
ret
dec
adc
push
aam
or
sbb
push
sub
mov
mov
xor
std
fs
movsb
push
stos
sub
pop
dec
lahf
jae
mov
mov
or
jne
stc
mov
mov
sbb
insl
jns
mov
xor
pusha
xchg
push
inc
xchg
cli
dec
jno
mov
in
push
jb
or
into
in
stos
scas
fs
sahf
xchg
xlat
cmp
mov
popf
sub
mov
sbb
aas
fldln2
jp
sbb
ja
mov
or
pop
jnp
xchg
addr16
jle
mov
jae
jb
cld
in
xchg
in
addr16
mov
xchg
addr16
ds
lods
and
aaa
seta
xor
negl
and
inc
arpl
cmp
or
hlt
divl
dec
cmc
mov
xchg
push
xchg
push
pusha
idiv
pop
scas
and
nop
mov
insb
jb
mov
push
roll
mov
pop
inc
mov
xchg
adc
sahf
dec
push
jnp
fnsave
movsb
lods
in
mov
pop
shr
pop
fidivl
lcall
sbb
or
iret
stos
add
mov
movsb
push
push
inc
and
int
out
xchg
in
bound
in
popf
sbb
ret
call
push
mov
add
outsb
pop
xor
gs
inc
add
xchg
add
cmpsb
push
lock
and
cmp
ds
pusha
popa
xchg
js
jmp
mov
movsb
mov
nop
cmp
jmp
sbb
stos
fwait
scas
xchg
inc
iret
pop
xchg
fwait
nop
inc
and
jnp
push
mov
push
hlt
sub
xor
sahf
xchg
ljmp
stos
or
dec
iret
and
rcrb
cli
mov
cmpsl
add
push
mov
mov
fbld
cmpb
push
add
mov
xchg
mov
test
adcb
push
shll
lock
jnp
push
push
ud2
in
stos
dec
xor
mov
or
inc
jb
cwtl
jle
data16
call
adc
add
enter
dec
jecxz
in
mov
push
cmpsl
test
sub
push
shlb
adc
push
sbb
add
insb
adc
inc
stos
wrmsr
or
ljmp
or
fnsave
xchg
mov
inc
imulb
xor
sbb
iret
int
and
mov
dec
xchg
cmpb
stc
xor
icebp
sub
mov
cmpsl
xor
sub
add
cmp
ja
test
cmp
scas
fimull
inc
lock
xchg
outsl
test
lret
or
jecxz
imul
stc
rolb
rcll
mov
test
movsb
or
add
mov
pop
aam
mov
xchg
ret
mov
xor
xchg
jae
mov
push
dec
mov
inc
cs
fucomi
lretw
sub
mov
lock
lock
mov
js
pop
loop
je
jno
sbb
mov
ja
mov
dec
pusha
or
fwait
out
jnp
mov
out
test
cmp
dec
repz
xor
jns
punpcklwd
std
nop
clc
cld
fildl
cmp
out
aaa
dec
int3
pop
mov
mov
sahf
popa
or
mov
out
pop
or
std
mov
or
inc
fistpl
or
or
aaa
mov
out
xchg
xor
add
leave
sub
mov
or
push
inc
cs
push
fwait
mov
fwait
xchg
subb
lods
jo
sbb
icebp
lods
mov
mov
cltd
cltd
das
movb
and
mulps
dec
scas
out
inc
jae
popa
xor
mov
sub
cltd
adc
or
mov
test
push
mov
sahf
shll
repz
add
cmc
add
jmp
test
cmpl
iret
cmp
cmp
cmp
ss
aam
into
sub
pop
pop
xchg
sub
xchg
or
fistps
mov
addr16
bound
call
pop
lods
jae
mov
push
or
aas
lock
push
pop
or
cltd
push
rcrb
add
mov
popf
ljmp
ds
inc
in
lcall
or
negb
xor
enter
adc
iret
inc
scas
push
movsb
jae
jp
leave
sbb
pop
std
jb
mov
mov
int
mov
inc
push
movsb
pop
int3
scas
into
hlt
xor
inc
and
pop
xchg
adcb
and
mov
test
pop
sub
pop
hlt
push
xchg
lods
int3
inc
push
dec
lret
jno
in
into
mov
xchg
movsl
cli
xchg
clc
dec
sub
in
stos
out
or
pusha
loopne
lahf
xor
in
adc
pop
insl
iret
add
fists
cmpsl
subl
xlat
xlat
cmp
and
mov
shrl
xor
in
xor
test
imul
adc
fcoms
xchg
sbb
in
pop
pop
jle
arpl
mov
inc
push
pop
push
mov
ljmp
mov
cwtl
repz
stos
cmpsl
pusha
pop
leave
add
or
or
clc
out
cmpsl
aam
popa
das
jg
xchg
lcall
jmp
lods
lds
jecxz
mov
idivl
stos
or
pop
mov
iret
jmp
mov
mov
test
outsl
mov
inc
mov
or
cmp
pop
test
in
pop
stos
mov
xchg
push
iret
push
inc
aad
roll
adc
repz
sbb
xor
arpl
add
sarl
cmp
pop
popa
pushf
mov
loopne
dec
add
add
adc
push
add
nop
jmp
add
out
push
jp
cwtl
jno
loopne
cwtl
pcmpgtw
and
repz
test
xchg
or
decl
push
jecxz
sub
idivb
lcall
cltd
and
mov
shlb
scas
add
sub
dec
enter
sub
dec
adc
push
pop
push
or
push
in
in
fldenv
out
and
jle
push
add
sub
sbb
xchg
xchg
int
jecxz
loopne
jo
sti
push
ljmp
push
xchg
jo
sar
out
test
sub
repnz
push
je
aas
mov
sub
out
subb
inc
loope
addl
sti
ror
sti
cmc
push
add
mov
jno
pop
scas
add
bound
jbe
jo
arpl
subb
dec
jl
lea
mov
inc
cmp
add
sub
sub
cld
jnp
adc
sub
aam
jno
dec
push
xor
insb
dec
cmp
jo
jae
std
pop
and
repz
rcl
out
inc
cli
ds
in
xchg
ds
out
mov
imul
jb
scas
xlat
cwtl
sbb
repnz
mov
mov
insl
pop
jl
xchg
lock
jle
fwait
in
adc
addr16
inc
mov
lret
out
inc
adc
lods
les
cmp
jae
jp
push
cltd
cld
jl
fs
aad
std
push
push
push
xor
push
dec
mov
les
pop
hlt
mov
jbe
imul
sbb
xchg
stos
xchg
cld
pusha
sbb
sub
gs
int
inc
push
pop
jae
pop
xchg
imul
mov
pop
cltd
or
lea
das
clc
loope
and
loopne
sahf
pop
push
lret
outsb
cmp
mov
lret
sub
loopne
mov
mov
pop
sub
std
lea
jae
mov
pop
and
fsubl
xchg
adc
jp
bound
movsb
test
xor
push
popf
arpl
sbb
mov
adc
xchg
clc
push
sarl
sbb
push
std
insl
push
test
int
pop
mov
out
imul
mov
cmc
inc
aas
xor
cld
loop
jae
xchg
ljmp
ret
cmpl
mov
push
push
mov
popa
jle
jl
je
mov
ds
imul
push
cmp
in
lret
and
icebp
xor
mov
bound
xor
popf
out
ror
push
bound
pop
icebp
out
test
dec
test
and
bound
sbb
xor
mov
hlt
sub
dec
sub
std
xor
dec
jns
and
stc
push
aam
cmp
lcall
xchg
lods
xchg
mov
sbb
xor
fnstsw
lods
inc
xchg
andl
push
cmp
lods
push
sbb
add
lret
iret
outsb
mov
mov
mov
in
adc
cmc
mov
stc
cli
add
jg
sub
jb
dec
cmpb
xor
mov
pusha
push
xchg
sub
scas
and
adc
aam
mov
cmpsl
mov
notrack
push
lret
sub
aam
inc
shlb
fistpl
lcall
pop
pop
mov
xchg
mov
mov
inc
inc
sahf
push
outsl
js
test
sahf
sub
jl
pop
aaa
mov
cltd
repz
insl
xchg
add
fs
cmpsl
xchg
mov
sarl
insl
sub
icebp
pop
sbb
ja
push
mov
mov
addl
insb
sub
pop
pop
xor
ja
fsubl
movsl
stos
mov
jl
lahf
push
mov
repz
iret
and
nop
rcl
dec
jl
leave
xchg
out
add
xchg
inc
adc
dec
jno
fildll
push
lea
dec
xor
sbb
xorb
xchg
lret
xchg
dec
int
inc
aaa
inc
cmp
xor
dec
sub
pop
hlt
jge
cmp
fs
mov
adc
gs
xchg
push
push
jnp
je
into
arpl
div
lds
lods
cmp
xlat
iret
sbb
fldenv
jge
ss
mov
mov
pop
addps
test
andb
popa
and
pop
std
in
add
sub
divl
in
adc
and
mov
inc
xlat
pop
sub
xor
cmp
ds
lahf
jl
adc
ret
leave
jbe
sahf
lahf
xchg
test
xor
leave
xor
xor
movsl
int3
pop
mov
mov
or
ss
or
andb
insb
bnd
enter
frstor
or
inc
pop
fcomps
cmp
andl
or
mov
xchg
jmp
ljmp
inc
sub
and
pop
push
pop
bound
call
fldenv
mov
mov
jo
add
push
ret
or
inc
and
enter
inc
and
cmpsl
dec
das
mov
test
xlat
fnstsw
jo
sahf
outsb
shr
icebp
inc
call
in
lcall
dec
xor
cmp
cmpsl
sub
push
lds
jge
loopne
cli
mov
add
cmp
test
push
sub
js
and
mov
cld
popa
jnp
jae
xchg
sbb
pop
out
cmpl
jne
int3
mov
sti
jb
pop
ja
fdivr
mov
call
jbe
pop
push
js
push
cmc
aas
in
push
out
out
rolb
mov
pop
push
inc
jb
test
pushf
mov
mov
jne
or
fnstenv
sbb
mov
pop
inc
gs
jg
cmp
dec
arpl
cld
mov
xor
cmc
arpl
lods
repz
add
mov
das
xlat
dec
inc
sahf
in
jno
dec
or
lock
inc
jge
fsubr
cmp
jne
or
mov
or
jge
xchg
push
arpl
or
and
rorb
jbe
jae
je
add
scas
insl
aas
mov
mov
cmpb
mov
adc
adc
pop
or
leave
sbb
es
mov
pop
arpl
pop
adc
jne
nop
sub
mov
adc
mov
repz
inc
lret
adc
cmp
pop
sbb
pusha
addr16
movsl
mov
push
xchg
insb
lock
fidivl
es
xchg
sub
xchg
bound
stos
jle
stc
jg
jecxz
xor
push
pop
lret
jns
icebp
pop
mov
push
sbb
and
lret
mov
and
mov
mov
jne
test
or
or
or
cwtl
xchg
fimull
leave
movups
jbe
mov
fnstsw
popa
mov
dec
push
bound
mov
movsl
mov
call
cmp
xchg
andb
add
or
testb
fsts
movsl
push
leave
adc
inc
cld
xchg
jb
mov
icebp
sbb
repnz
and
pop
adc
pop
loop
dec
jge
mov
sub
sub
push
push
dec
les
xor
aam
dec
mov
icebp
lds
aam
pop
sbb
iret
in
cwtl
shrb
scas
lods
ficompl
xchg
leave
les
jo
insb
jb
out
mov
popa
lods
cmp
outsl
aaa
inc
jae
aam
jmp
movsb
das
add
jg
mov
sarl
aaa
inc
aaa
mov
jnp
push
movsl
aad
mov
bnd
insl
sahf
push
gs
sub
pop
add
mov
jg
mov
aad
and
dec
mov
mov
cmp
or
or
push
mov
mov
jmp
call
fwait
in
mov
mov
push
mov
lret
jae
jcxz
push
in
cmp
dec
mov
add
pop
dec
fsubl
dec
push
mov
jge
shll
mov
outsl
pop
in
sarl
arpl
loopne
stc
or
inc
jb
inc
fwait
ror
adc
pop
mov
cmp
inc
push
dec
les
xor
cs
jb
rcll
add
insl
xchg
mov
mov
add
in
xchg
adc
sub
mov
mov
pop
jecxz
in
or
dec
push
std
pop
lods
int3
xchg
pop
dec
aas
pop
movsb
mov
lret
aad
cmp
add
mov
lret
pushf
mov
dec
mov
pop
lds
repz
sbb
jle
xchg
jo
mov
push
mov
adc
pushf
shrb
adc
jb
cmpsl
pop
jb
popf
int
das
mov
dec
lods
flds
cwtl
test
in
ljmp
mov
xchg
insb
test
cmp
inc
mov
jae
mov
fld
ret
out
adc
in
push
jno
hlt
sbb
jb
lret
mov
mov
inc
inc
fdivp
push
pop
fildll
jbe
push
pop
mov
dec
or
test
out
dec
fldcw
pop
pop
dec
loop
sub
jg
or
push
jo
les
fldt
pushf
push
pop
in
xchg
add
dec
fidivl
mov
fiaddl
or
inc
fidivl
adc
mov
lcall
rorl
mov
and
sub
bts
sub
ficoml
out
out
mov
jmp
mov
aas
inc
pop
sub
jp
jle
aad
mov
enter
mov
fimull
jnp
mov
popf
push
in
and
pop
andb
aad
adc
jmp
pop
mov
iret
or
pop
rorb
stos
mov
push
jne
arpl
sub
imul
pop
clc
test
xor
lods
mov
and
mov
out
jae
shlb
or
inc
and
sbb
mov
push
popa
mov
pop
sbb
adc
rorl
sub
jge
mov
pop
cmc
repnz
xchg
jl
notb
xchg
ss
xor
xor
loopne
or
in
sarl
jge
xchg
ficompl
mov
shl
popf
inc
sbb
add
mov
in
outsl
sahf
jg
sbb
rol
roll
pop
pop
mov
test
lods
into
cli
lret
fdivrl
scas
mov
scas
out
cs
leave
mov
icebp
push
loop
in
aaa
or
jle
fdivp
das
sbb
outsb
loope
mov
outsb
pop
or
into
mov
hlt
outsl
int
lods
jg
lock
insl
dec
add
lea
push
or
repnz
insl
push
iret
icebp
js
in
add
repnz
faddl
push
dec
fs
push
lret
ds
jmp
pop
sbb
add
xchg
xor
leave
jo
outsb
ljmp
mov
mov
shr
pop
std
popa
cmpsl
outsl
xchg
sub
das
inc
cmp
in
cmp
popf
shrb
cltd
pop
add
lods
or
inc
push
test
stos
sub
cmp
and
xchg
rcll
imull
jbe
adc
xor
fstpl
and
mov
mov
jecxz
fbstp
std
add
mov
fisubs
add
jecxz
call
inc
sbb
inc
es
sbb
cld
mov
mov
sbb
popl
outsl
add
lods
nop
test
insl
pop
add
popf
add
mov
lret
cmp
jno
cwtl
cltd
into
or
hlt
dec
or
mov
out
jno
mov
mov
xchg
nop
gs
xchg
rcll
adc
push
mov
into
pop
aas
ds
inc
sbbb
add
xorb
pop
fiaddl
dec
sub
sub
int
and
or
in
mov
jl
or
pop
imul
sbb
and
test
movsb
scas
out
mov
in
adc
shr
inc
enter
repnz
lret
mov
jecxz
mov
jp
mov
fisubs
ja
arpl
cwtl
pop
fnstenv
and
sbb
or
mov
lret
je
jge
pop
iret
cld
cs
or
aad
mulb
inc
push
mov
dec
data16
pop
mov
into
stos
push
loope
cmp
jl
out
lods
outsl
xchg
mov
add
and
gs
or
adc
hlt
pop
dec
cwtl
dec
fisttpl
dec
sbb
xchg
insb
stc
jo
pop
xor
cmpl
leave
imul
cld
xor
add
loop
xor
les
adc
inc
cltd
fdivp
clc
push
mov
mov
add
inc
xlat
gs
dec
je
das
shl
rolb
cmpsl
std
fidivrl
mov
jno
popf
jno
movsl
popf
cmpsb
gs
lcall
xchg
lods
adc
pop
sub
cmp
adc
dec
addb
jg
xor
jle
push
into
mov
nop
fcomi
sub
imul
xchg
pop
orl
lcall
xor
jne
cmpsb
cli
es
cmp
pop
sbbb
in
push
and
jb
daa
or
mov
pop
pop
outsb
pop
fdivrl
mov
cli
add
mov
rolb
call
mov
pop
or
jnp
dec
cmp
pusha
outsl
mov
dec
clc
mov
popf
sub
xchg
cmp
aaa
das
jb
cmp
aad
sbb
push
sbb
dec
rcr
push
sbb
and
pusha
roll
xchg
scas
and
cltd
sub
mov
jge
mov
push
or
mov
inc
ljmp
outsl
and
shll
shlb
sub
inc
out
call
xor
add
or
out
in
jle
pop
pushf
push
xchg
dec
and
cwtl
sub
or
loope
add
inc
mov
cmp
adc
in
sbb
and
push
jg
cmp
xor
out
xlat
xchg
mov
jo
fdivrl
add
xorl
sbb
insb
sbb
cltd
inc
pop
frstor
fsubr
adc
adc
pop
sbb
jg
add
lea
fimull
repz
jg
imul
xchg
sub
dec
shld
and
xacquire
add
dec
add
sbb
mov
cmp
cmp
lods
and
or
adc
cmpsb
adc
mov
sbb
cmp
or
out
jl
sbb
xchg
cltd
mov
inc
sbbl
pop
outsb
jne
test
cmpl
int3
cmp
mov
sti
sahf
mov
xchg
es
and
stc
push
dec
mov
ja
fbstp
lods
dec
add
pop
and
dec
pushl
mov
out
xchg
jb
sbb
addr16
push
pop
pop
mov
mov
lds
cmp
and
cs
pusha
push
outsb
inc
sub
int
enter
or
in
pop
loopne
ljmp
xchg
stos
add
mov
sbb
and
push
jmp
cmp
daa
mov
sarl
mov
stc
jmp
lret
ret
insb
idivb
es
out
xor
movsb
pop
cmp
jge
imul
cmp
outsl
into
mov
out
mov
out
jecxz
add
lea
or
out
scas
sbb
sub
xchg
xor
mull
mov
push
in
inc
jp
push
cmpsl
outsb
inc
out
cltd
mov
in
mov
loop
das
mov
push
jp
jnp
adcl
loopne
xor
pop
inc
xor
sbb
popa
mov
dec
push
loope
in
sbb
inc
mov
jle
insb
sbb
sbb
pop
sbb
jg
add
or
leave
pop
jmp
lods
popa
addr16
cli
pusha
mov
js
adc
or
add
cli
mov
sub
dec
fs
ds
pop
jae
and
xor
pop
add
jmp
testb
divl
pop
push
imul
in
popl
sbb
mov
sub
xchg
lock
pop
scas
lea
push
fnstcw
xchg
dec
sti
orl
cs
scas
adc
jbe
xchg
cmpsl
inc
sub
mov
and
aad
dec
movsl
movsl
inc
jge
mov
cmpsb
mov
push
sub
test
add
adc
lcall
loop
stos
aad
in
daa
shrl
push
xchg
mov
sbb
xor
test
jne
and
sahf
adc
pop
cltd
xchg
test
mov
movsl
das
xchg
adc
add
push
lods
lods
mov
xchg
jp
and
lods
xchg
sub
jne
inc
dec
xor
insl
or
shl
add
cmpsb
or
jle
mov
into
mov
mov
jns
and
xchg
add
jl
jns
push
adc
mov
and
dec
cli
mov
icebp
jae
adc
dec
mov
iret
cld
mov
inc
data16
testl
jle
into
sbb
cld
push
adc
mov
les
aam
fistpll
imul
pop
xchg
sub
xchg
pop
and
mov
out
xchg
pop
add
sti
adc
pop
push
aaa
pusha
push
stc
ret
mov
pop
cmpsl
ss
lea
iret
mov
cmpsl
push
rcll
jbe
repnz
out
mov
repz
xor
loop
dec
add
fwait
les
and
cltd
aam
jge
call
pop
mov
xchg
pop
in
push
loop
dec
xchg
jbe
cs
adc
adc
outsb
fists
lret
repnz
nop
test
daa
pop
rcrb
inc
in
outsb
roll
pop
mov
movsb
cmpsl
sub
add
das
repnz
sbb
popf
pop
add
movsb
dec
push
cs
mov
in
mov
aam
and
add
movsl
in
mov
int3
inc
fdivs
adc
push
mov
movsb
add
aad
add
sub
ret
lea
push
mov
mov
adc
cmpb
subl
mov
or
mov
lret
push
mov
out
or
lods
dec
call
jp
mov
lahf
test
inc
arpl
popa
cmp
subb
cmp
test
sbb
scas
cmp
mov
xlat
sub
mov
fisttps
scas
xlat
ficomps
sub
pop
into
or
movsl
lods
call
mov
scas
dec
mov
into
pop
dec
xchg
cli
mov
das
subb
repz
and
lods
sbb
outsl
orb
xor
xchg
in
ljmp
fnsave
and
in
jo
jmp
inc
int3
inc
cmp
aas
mov
dec
lahf
popf
push
xorb
dec
sahf
pop
cs
inc
int3
pusha
jnp
jmp
inc
add
shrl
aas
inc
sub
add
pop
xchg
sub
ss
and
scas
mov
fsubp
ret
outsb
lods
test
lds
mov
aam
pop
xor
and
aas
out
out
push
push
pop
mov
jae
dec
push
dec
push
or
cmp
mov
xchg
int
adc
or
jbe
mov
inc
mov
mov
loopne
inc
or
sub
push
mov
aam
jae
imul
ret
xchg
sahf
icebp
je
fsqrt
imul
nop
mov
fsts
cwtl
adc
add
dec
movsb
pmulhuw
subl
arpl
shll
aam
leave
shll
std
gs
lods
push
js
dec
push
jo
sub
rorb
mov
and
mov
shlb
pop
lret
sub
sbb
xchg
icebp
jae
mov
dec
cmpb
es
push
cmp
or
call
push
and
orl
adc
inc
push
test
roll
in
inc
movsl
inc
cmp
jle
mov
cwtl
jnp
out
xor
push
mov
jns
dec
ljmp
push
and
test
movsl
mov
ljmp
sub
push
mov
jo
subl
pop
ljmp
aam
out
mov
movb
scas
sub
js
mov
lock
cli
xchg
add
fimull
sbb
repz
fisttpll
adc
insl
aad
jp
test
repz
xchg
push
imul
mov
cltd
lock
scas
ror
stc
push
loope
popa
mov
int3
lock
adc
or
mov
and
mov
adc
dec
pop
sahf
mov
cmp
dec
cld
mov
ja
add
cmp
xor
sarb
push
cmpsl
mov
decb
xchg
push
stos
pop
mov
xchg
aam
ds
arpl
dec
pop
sahf
cmp
adc
cld
sub
inc
movsb
xchg
push
and
mov
faddp
adc
test
es
in
aam
movsl
add
pushl
jo
mov
add
adc
lock
rol
rep
xor
jg,pn
sub
sbb
hlt
pop
mov
add
jae
cld
xlat
fnstsw
scas
mov
in
call
mov
outsl
mov
out
movb
pop
pushf
out
sbb
push
out
sub
loope
sti
mov
push
call
mov
push
or
or
ja
push
mov
push
jae
popa
sub
enter
cmp
cmp
mov
fidivrs
loopne
ret
repz
test
arpl
pop
ret
and
mov
fstpt
xor
loopne
mulb
sbbb
test
pop
mov
pop
mov
xchg
in
cmp
push
popl
push
sbb
cs
jae
cld
mov
movsl
sbb
sub
outsl
aad
out
aam
or
loop
xlat
add
insl
lods
repnz
cmpsb
je
je
mov
cmpsl
inc
fidivrs
mull
hlt
push
inc
cltd
enter
loope
jo
lret
pop
notl
outsl
jmp
push
dec
hlt
pusha
bound
mov
sub
mov
es
aad
or
and
daa
add
mov
xor
push
insb
movsb
xchg
mov
sbb
and
fldl
sbb
cmc
xchg
stos
in
sti
xor
mov
mov
rcrb
sbb
or
pusha
es
pop
mov
cli
mov
adc
ja
lds
xor
xchg
inc
ss
dec
push
jns
loop
mov
xchg
outsb
xchg
mov
subl
push
imul
push
lds
mov
fcompl
dec
sbb
paddw
dec
sbb
hlt
jle
xchg
push
scas
mov
ret
xchg
xor
mov
movsl
xchg
adc
mov
pop
dec
adc
dec
xor
mov
and
js
and
test
ret
push
loop
loop
cmp
scas
adc
icebp
jmp
inc
fwait
dec
pop
lcall
pop
cmp
xor
sbb
dec
xlat
mov
test
sbb
inc
jecxz
mov
adc
aam
push
inc
test
add
xchg
push
int3
lds
pop
mov
and
cmp
aam
lods
or
aad
testb
imul
push
lcall
loopne
lds
mov
movsl
dec
fdivr
popf
add
or
andb
test
repnz
pop
jmp
out
xchg
out
enter
cmpsl
push
and
add
lret
sub
xor
je
xor
test
pop
out
sti
xchg
dec
pop
cs
pop
insl
xchg
push
in
data16
sub
js
dec
pusha
insb
ret
inc
sub
out
sti
sti
les
test
outsb
aad
mov
mov
add
cli
popf
nop
cmp
syscall
xor
cmp
imul
in
push
ljmp
sub
jo
push
cmp
negl
fsubl
sbb
and
or
in
adc
lret
xlat
aas
fists
popa
sub
and
mov
sub
adc
pop
in
out
mov
nop
mull
clc
push
inc
cmpsb
xor
sub
jno
mov
enter
outsl
lock
sbb
jecxz
sbb
out
sub
mov
lods
inc
mov
sbb
test
loop
cwtl
arpl
int
xor
jle
sahf
repz
sub
and
xor
cmp
inc
inc
into
fisubrs
jl
aas
ret
adc
inc
jge
negl
lock
cld
insb
testb
push
insb
sub
lds
mov
sub
sti
mov
pop
int
call
mov
scas
loop
dec
push
dec
mov
fs
or
cmp
jl
test
push
popa
ljmp
pop
ret
mov
lock
insl
xor
dec
lods
pop
and
adc
mov
or
xchg
dec
adc
xor
cltd
push
test
mov
push
jno
xchg
xchg
xchg
cmp
push
fcmovb
push
jno
aaa
push
scas
ja
lea
adc
adc
outsb
adc
movsl
movl
aaa
jmp
cmc
mov
mov
in
xchg
in
cltd
cmc
pop
mov
mov
jae
push
xlat
adc
jp
inc
addr16
imul
push
mov
insl
mov
test
xchg
add
inc
and
xchg
fidivrs
sarb
dec
outsb
test
test
imul
xchg
and
popa
fmul
lock
mov
mov
push
jns
mov
sbb
rcr
test
mov
dec
pushl
adc
cwtl
addl
loopne
ss
loope
or
out
in
pop
dec
jb
adc
dec
lods
adc
push
lea
xchg
cmp
cld
xor
fs
or
int
lcall
lret
cltd
rcl
gs
adcl
fdivl
lret
jmp
xorl
lea
and
outsb
fcmovnu
out
gs
stos
cmp
xchg
dec
out
or
or
cmp
pop
fsubr
and
mov
arpl
push
in
mov
push
sarl
mov
xlat
or
lods
lret
and
loopne
push
leave
arpl
les
and
inc
inc
cltd
or
outsb
dec
push
cli
jmp
mov
sahf
and
inc
and
out
inc
adc
xchg
test
test
xor
push
lcall
mov
test
hlt
push
inc
push
aam
push
lock
arpl
rorl
and
dec
adc
pop
mov
inc
clc
fldt
lods
mov
punpckhdq
jb
test
mov
nop
and
jg
iret
in
sbb
xchg
mov
push
push
testb
sub
insl
adc
xor
jae
mov
mov
lea
mov
rcrl
xchg
jg
push
sub
popf
es
in
dec
mov
push
dec
movsb
popa
push
sub
out
pusha
lock
jp
hlt
xor
inc
stc
pushf
sbb
xchg
testb
les
inc
mov
aas
pop
jne
jle
ret
inc
pop
loop
sub
dec
jne
stos
inc
rorl
mov
mov
or
xchg
or
mov
pop
int3
add
adc
push
je
sbb
push
andl
or
pop
add
scas
cli
ljmp
push
icebp
or
test
andb
loop
and
cwtl
adc
rorl
adc
inc
mov
xor
jne
outsb
je
ret
mov
pop
jo
out
fsubs
loopne
mov
out
pop
mov
push
push
dec
les
jecxz
test
xlat
xchg
jg
je
ret
xor
add
ret
xor
out
mov
lahf
push
aad
inc
fs
xor
rorl
es
push
push
add
repnz
push
sub
fbld
in
aas
sahf
movsb
fsubl
inc
dec
call
cmp
ds
data16
in
sarl
enter
in
inc
cmp
push
mov
scas
addr16
lods
xchg
mov
mov
nop
aas
sbb
dec
dec
mov
dec
sbb
int3
sbb
pusha
pop
lahf
xchg
lret
pop
call
add
or
in
inc
subb
stc
pop
or
jp
call
pop
xorb
ret
cld
jg
add
sub
cmp
xchg
test
xor
cmp
fwait
das
insb
mov
pushf
mov
mov
xor
adc
mov
mov
popf
cmp
es
push
dec
je
inc
int
xchg
xbegin
dec
mov
aad
dec
jno
out
xor
pop
test
out
sub
xor
lea
xchg
test
push
mov
enter
inc
push
add
mov
pop
cmp
mov
xor
lret
or
sarl
jp
out
cmc
pop
jae
popa
fiaddl
xor
lret
or
mov
adc
hlt
fcmovb
xchg
fidivs
and
jge
xchg
repz
xor
in
in
aad
scas
sbb
mov
pop
sub
cs
mov
ljmp
fstpt
ds
out
xor
fwait
mov
xchg
inc
push
lea
mov
pop
mov
cmp
lahf
mov
test
insl
ljmp
sbb
xor
sbb
jnp
jbe
outsl
rclb
xor
sbb
outsb
inc
es
ljmp
push
dec
mov
out
cmp
adc
mov
insb
fucomp
test
dec
cs
inc
stos
aaa
adc
sub
jno
jbe
lock
cld
fs
out
or
ficompl
cmp
sbb
pop
xchg
bound
cltd
xor
ss
pop
cmp
iret
and
sub
xchg
sahf
dec
jecxz
mov
xor
bound
adc
outsl
lea
sbb
pop
insl
imul
xchg
mov
pop
mov
sub
dec
pop
push
imul
push
fldl
or
jecxz
push
push
cmc
fidivl
and
mov
xor
mov
xor
inc
movsb
and
push
adc
dec
jbe
add
dec
int
xchg
dec
jb
mov
gs
jp
in
xchg
mov
cmp
test
in
in
addb
insb
insb
or
je
xchg
cmp
aad
push
fldenv
xor
jmp
dec
inc
jns
xlat
repnz
mov
icebp
xorb
push
mov
xor
dec
icebp
dec
scas
enter
sti
cltd
mov
xchg
pop
loop
dec
pop
pop
mov
pop
dec
stos
pop
mov
out
push
ljmp
inc
idivb
push
call
ljmp
cmp
xlat
mov
and
mov
movsl
sub
sub
mov
lods
jle
sbb
ret
pop
mov
sarb
bound
and
cwtl
nop
lret
lods
mov
push
mov
jno
fdivr
ficoms
test
cmpl
xlat
cmp
shll
push
jo
mov
push
addr16
sub
and
push
cwtl
icebp
lock
mov
cmp
loope
xor
jnp
das
pop
add
or
mov
enter
dec
jne
prefetch
or
cmpsl
and
in
sub
roll
scas
repnz
dec
xchg
dec
xor
jae
inc
je
push
pop
pop
xor
iret
stc
add
loop
mov
lock
imul
lods
fistps
fwait
pop
add
enter
fsubr
pop
imulb
sbb
and
outsl
mov
cmp
cmp
insb
xchg
add
js
jbe
inc
mov
nop
jb
xchg
jmp
ja
rolb
cmc
mov
or
sbb
je
mov
pop
jo
orl
jge
push
int
sti
inc
jge
idivl
jae
mov
push
and
ficoms
sbb
fs
push
cmp
test
xlat
outsl
xor
sub
mov
dec
lds
shlb
rcll
es
and
mov
cmpsl
insl
test
mov
xchg
out
or
repz
push
popa
jbe
insl
inc
data16
cpuid
pop
fdivl
push
jg,pt
ss
jp
jge
mov
mov
mov
cltd
lods
mov
mov
xchg
xchg
fstpt
push
inc
ljmp
jecxz
push
loope
mov
mov
fcomp
pop
scas
mov
sub
lcall
jp
mov
dec
xchg
mov
es
insl
mov
adc
cld
sbb
inc
dec
movsl
int3
cld
push
dec
dec
xchg
mov
jno
xchg
cltd
in
stos
ss
pop
into
adc
mov
push
or
mov
in
xor
stos
nop
jecxz
xchg
ret
gs
jl
aad
jle
xlat
lods
and
into
adc
sbb
cmp
push
jno
pop
or
scas
ror
nop
enter
mov
jbe
in
push
push
and
dec
out
mov
sub
lds
popa
mov
mov
ret
push
cmp
aaa
hlt
jbe
aaa
in
flds
popl
popa
inc
clc
xor
das
je
dec
jl
scas
ret
scas
subb
scas
mov
adc
cmpsl
arpl
sub
jp
pushf
hlt
stos
shl
ljmp
insb
out
mov
out
pusha
imul
adc
xchg
out
mov
push
mov
or
lret
xchg
push
mov
sub
outsl
push
decb
push
aaa
cltd
fs
test
adc
testb
fwait
xchg
sbb
sub
xchg
imul
shlb
mov
shll
mov
lea
and
adc
and
fdivl
inc
loope
lock
push
xor
sbb
dec
push
inc
sbb
aas
cmc
xorl
adc
imul
adcl
mov
mov
jnp
or
insl
test
inc
repnz
add
sub
or
mov
inc
add
into
popa
mov
jb
orb
add
leave
pop
or
dec
aas
sub
sbb
push
xchg
or
or
mov
ja
or
or
insb
or
mov
icebp
push
sti
jp
imul
insb
pop
inc
jne
stc
dec
mov
pushf
pop
outsb
jp
mov
test
and
test
push
rcll
mov
mov
clts
mov
popa
cli
int3
xchg
xchg
mov
ja
das
fbld
sbb
loop
shl
out
dec
lods
mov
and
jns
addr16
cli
loopne
or
pop
jo
dec
ret
in
les
fnstsw
xchg
test
fwait
in
push
mov
inc
jne
fs
adc
mov
dec
dec
cltd
out
xor
es
pushf
inc
ret
imul
inc
sub
ljmp
subl
test
rcr
mov
and
xor
inc
cmp
mov
jmp
pop
fidivs
push
mov
js
dec
iret
std
xchg
and
jae
stos
xchg
jmp
movsl
test
cmpsb
nop
or
or
and
and
repnz
push
jmp
andb
insb
shll
xor
push
ljmp
rcll
pop
and
push
je
popl
aaa
adc
xchg
repz
aas
lods
or
jmp
cwtl
inc
shlb
popf
sbb
mov
orl
insl
aam
and
outsb
inc
push
fdivs
or
mov
mov
pop
test
cmpsb
sahf
cs
out
mov
dec
dec
sbb
pop
sahf
xchg
xchg
mov
pop
or
cld
sub
or
pop
mov
scas
push
cmp
sub
imul
pop
loopne
adc
xchg
mov
cwtl
test
test
cmp
test
jge
out
outsl
cmpsb
shrl
icebp
pop
sbb
cmp
pop
pusha
xchg
mov
pop
push
daa
or
int3
bound
inc
shll
pop
jnp
pop
imul
fdivl
inc
sbb
inc
sbb
and
adc
xchg
and
call
data16
mov
dec
push
test
mov
cli
stos
sti
ret
mov
pop
add
or
data16
push
inc
int
pop
adc
mov
lock
loop
inc
mov
inc
addr16
inc
cmc
ret
mov
test
mov
push
inc
push
loope
push
loopne
mov
inc
mov
int3
xchg
loopne
xchg
enter
subl
out
lret
pop
adc
insl
lods
mov
rorl
inc
xor
rclb
mov
fiaddl
mov
mov
cmc
pop
daa
push
mov
jbe
lods
pop
jp
jne
negl
adc
push
test
mov
xchg
or
jno
inc
lcall
nop
jbe
and
pop
pushf
jnp
pop
call
jno
push
dec
sar
and
mov
mov
mov
adc
mov
cmp
jecxz
mov
sub
sbb
pushf
mov
xorl
xor
aam
jp
test
push
int3
loope
lock
jmp
gs
gs
jmp
push
jmp
jno
or
fsubl
lret
inc
pusha
loop
loope
int
pop
pop
dec
in
xchg
in
jge
emms
enter
mull
insb
ss
inc
cmp
icebp
pusha
add
notl
jnp
fadd
dec
pop
mov
mov
xor
xchg
cwtl
cmp
push
fdivrl
out
aaa
roll
dec
mov
arpl
mov
lods
add
mov
or
shlb
ret
sub
xchg
mov
inc
push
lods
inc
rdpmc
push
jno
cli
mov
gs
cli
dec
stos
dec
mov
mov
insb
inc
push
pop
stos
rol
adc
xchg
inc
push
xchg
sbb
mov
lret
pop
mov
cmpsb
cmc
stos
aaa
inc
add
jge
sbb
out
subl
enter
subl
movsl
push
scas
in
add
mov
bound
xchg
outsl
inc
push
iret
std
xor
in
mov
in
xchg
cmp
fcoml
pop
xor
and
outsl
mov
mov
gs
or
xlat
in
daa
inc
sbb
ljmp
popl
rol
test
out
lock
xor
int3
ret
cld
mov
int
popf
add
inc
inc
push
lcall
pop
cmp
fisubrs
push
in
jp
pop
in
lret
cmp
out
test
xorb
lcall
sarl
mov
nop
pop
adc
jg
pop
pop
lods
xor
push
adc
sbb
or
adc
addr16
mov
add
cwtl
add
and
bound
repnz
jge
cli
adc
int3
xchg
mov
test
jns
dec
pop
push
or
in
jbe
mov
stos
mov
mov
enter
in
in
push
xlat
push
ljmp
hlt
movsl
aad
ror
aad
test
lds
mov
lret
mov
pop
das
push
popaw
insl
cmpsl
or
push
fildll
iret
arpl
and
xor
adc
mov
adc
cmovle
push
aad
adc
inc
dec
lea
aas
movsl
cmp
push
mov
loope
sbb
inc
in
push
sbb
data16
mov
lret
imul
fildll
push
cmpsl
mov
gs
or
fldl
add
sub
ret
scas
or
and
int
mov
cmpsb
xor
sbb
pop
mov
and
nop
xor
pop
fsubs
dec
inc
rcll
nop
fsubrp
xchg
in
mov
mov
insl
dec
test
and
pop
cmpsb
and
and
sub
dec
jo
xor
cld
jno
push
push
xor
xor
jb,pn
add
adc
scas
mov
in
adc
out
faddl
sub
aam
pushf
mov
mov
outsb
push
jge
js
sahf
jl
out
and
test
leave
pop
bound
shll
arpl
sub
ffreep
outsl
mov
adc
setle
push
movb
xchg
clc
mov
insb
out
lock
or
pop
inc
add
flds
stos
inc
mov
ja
mov
mov
lods
cmc
fstpt
rorl
push
or
xchg
cmp
sub
popf
adc
insw
int3
fsubl
or
mov
mov
aaa
xchg
pushf
cld
mov
jecxz
popa
repnz
pop
js
or
leave
xchg
leave
jno
jl
jg
mov
push
dec
xchg
jecxz
and
dec
xchg
push
mov
dec
adc
imul
or
mov
arpl
sbb
mov
cmpl
lahf
inc
out
xchg
cld
jl
jne
ljmp
sbb
fisttpl
mov
adc
out
cmp
xor
pop
xor
outsb
dec
shlb
cmp
test
shl
mov
sub
pusha
jno
xor
addl
jecxz
xor
neg
mov
stos
cltd
xlat
movsl
ror
mov
cli
add
aaa
loope
cmp
mov
fdivr
fildl
pop
jae
incb
sbb
xchg
vpacksswb
sbb
ljmp
sbb
ja
adc
push
mov
repnz
lds
dec
loopne
pop
cltd
xlat
rcl
mov
arpl
pushf
cmp
stc
mov
fnstenv
sub
shrb
ret
sub
mov
fsubrl
leave
inc
jle
jecxz
stos
mov
cmp
cmpsb
jmp
lea
xor
test
sbb
in
lret
pusha
imul
xchg
pushf
insb
int
xchg
add
cli
dec
push
outsb
adc
pop
fmul
loop
shr
cwtl
mov
test
or
inc
sub
leave
xor
cld
pusha
stos
pushf
fiaddl
rcl
les
mov
cwtl
cmp
mov
out
mov
repnz
mov
xchg
inc
xchg
mov
mov
or
fiadds
jns
in
std
sbb
test
pop
add
xlat
xchg
int3
pop
gs
fisubl
fists
cltd
push
push
stc
add
aad
pop
or
subl
test
int
and
dec
out
cmp
std
sbbb
add
stc
push
dec
inc
call
xchg
into
push
cmpsl
push
mov
mov
pop
pop
mov
ret
mov
aad
je
lahf
add
or
cmp
and
jno
sbb
jmp
sub
insl
xchg
cld
lea
mov
adc
test
std
jae
add
pop
loop
dec
fisttpl
or
hlt
lret
push
jg
dec
lcall
leave
xlat
subb
cld
mov
movsb
sbb
pop
xor
ljmp
lahf
lods
push
dec
nop
fisttpll
xor
jo
dec
fld
sbb
xor
int3
jo
xchg
push
mov
xchg
in
cmpsb
add
jae
xorb
add
es
ljmp
mov
xchg
push
sbb
lock
cmpsb
cmp
lods
sub
push
cmp
cmp
jmp
pop
cwtl
mov
lods
or
andb
jmp
fisttpl
loope
xor
es
dec
mov
mov
and
lds
jmp
xchg
sub
shrb
add
push
jbe
loopne
sarb
push
sub
mov
adc
sbb
addb
adc
xchg
fisttpll
jge
es
stc
stos
neg
jmp
icebp
scas
insb
add
stos
cli
stc
mov
mov
pusha
inc
lock
pop
mov
jne
fs
cmp
out
mov
sarl
push
cmp
mov
cs
lcall
ss
fs
jnp
mov
sub
sbb
sub
fdivrp
cmp
and
mov
mov
mov
in
bound
int
cld
enter
xor
xor
or
arpl
stc
pop
mov
and
mov
xchg
mov
mov
or
stos
mov
pop
xlat
add
push
daa
xchg
mov
xor
sbb
imul
getsec
mov
cmp
or
dec
jg
mov
lcall
add
lods
xrelease
xor
nop
add
or
repz
fwait
icebp
imull
pop
add
lods
push
out
outsb
arpl
jns
adc
pop
aaa
inc
jecxz
je
dec
dec
jbe
mov
sbb
inc
push
push
mov
sbb
sbb
je
jmp
fidivrs
add
icebp
andb
dec
in
dec
repnz
pop
mov
aad
xor
sub
imul
ret
xor
xchg
push
clc
gs
js
stos
sbb
jb
sub
stc
cmpsb
mov
push
aas
or
insb
xor
aad
dec
stos
jecxz
xchg
jb
insb
and
dec
sub
sbb
add
push
mov
mov
xor
fidivrs
cli
mov
int
mov
ds
jo
push
mov
scas
sub
xchg
lods
jmp
rorb
outsl
dec
mov
xor
out
mov
mov
ds
ret
sbb
mov
xchg
fwait
out
push
xor
xor
movb
ds
xor
dec
dec
jns
lods
out
cmc
jp
out
enter
mov
stos
adc
jbe
out
add
rcrb
popf
mov
das
enter
scas
inc
in
jns
cmpsl
lahf
or
mov
rcrb
push
clc
imul
sub
aam
into
fimuls
xor
sbb
and
test
cmpsl
push
in
mov
aaa
cmpsl
fidivrl
insb
in
das
xor
jns
jbe
mov
pop
mov
clc
mov
leave
cmpsl
xor
pop
sub
lea
pop
push
sub
sbb
lods
idivb
mov
pushf
adc
or
xor
loop
mov
jae
in
xchg
jge
ficomps
mov
popa
stos
lock
xchg
gs
sub
loopne
dec
es
lcall
inc
ja
cmpsl
hlt
ss
cli
cs
pop
gs
in
xor
pop
sbb
movsb
jmp
push
cltd
adc
dec
sub
in
test
xchg
nop
add
loopne
je
insl
push
cs
pop
test
test
pop
mov
dec
sub
add
daa
inc
and
movsl
push
push
push
jmp
gs
xchg
outsl
xchg
jbe
sbb
push
pmuludq
stc
and
jnp
push
mov
xchg
xor
push
xchg
cmp
loopne
pop
push
cmp
mov
out
push
fwait
add
and
jmp
cmp
aaa
xor
je
gs
mov
xor
rcll
and
jae
add
repz
jne
inc
sahf
dec
repnz
ja
adc
ficompl
push
dec
cltd
shlb
scas
lahf
icebp
inc
or
adc
dec
pop
add
leave
mov
jl
nop
cmp
dec
lcall
fwait
xchg
cmp
fwait
iret
mov
push
inc
es
test
dec
sbb
dec
mov
stc
add
adc
sbb
dec
lods
ret
jle
decl
dec
int3
lods
and
jo
in
xor
call
lea
je
cmp
clc
inc
push
stc
ss
push
test
mull
xor
xchg
pushf
adc
icebp
jns
lods
push
and
int
mov
or
inc
cwtl
cmp
push
pop
stos
push
jne
int
leave
jmp
insb
mov
leave
mov
mov
xor
pop
push
jns
jbe
int
add
mov
sub
fs
pop
push
pop
add
sub
in
gs
lret
loop
mov
into
mov
cmpsl
sub
add
popa
push
jl
loopne
inc
inc
imul
sbb
cs
dec
pushf
shll
cmp
ror
adc
cmp
or
cmp
pop
mov
int3
dec
sbb
lret
mov
in
push
or
jle
adc
test
or
fistps
out
movsb
das
popf
xorl
iret
ret
mov
inc
outsl
add
popl
add
mov
cwtl
push
cmpsl
adc
xchg
jb
movsb
adc
ret
push
pop
dec
mov
out
fs
fimuls
stos
lret
cltd
mov
pusha
jmp
jno
test
cmp
mov
pop
jno
cwtl
xchg
sahf
repnz
or
push
push
mov
ficompl
je
pop
pop
fsubs
stos
ret
mov
push
and
push
in
sahf
into
std
mov
xchg
pop
push
lret
cltd
sub
push
inc
push
and
mov
push
pop
loope
hlt
fldt
pop
inc
sarb
shl
iret
insl
adc
jge
fldl
and
aaa
insb
fidivrl
out
imul
stc
mov
push
fists
mul
add
xor
adc
call
or
call
ret
cmc
mov
xchg
call
cmp
out
jg
pop
pop
scas
and
mov
movsb
negb
rcrb
addr16
pop
xor
sbb
or
mov
push
push
or
orb
das
cmpsb
and
fwait
shl
mov
push
clc
dec
and
notl
repnz
cmc
dec
icebp
test
jns
fstpt
repz
pushf
bound
jbe
mov
push
sub
sub
imul
adc
clc
repnz
xor
andl
stc
mov
mov
and
add
enter
sbb
dec
out
and
jae
adc
jmp
out
and
sbb
int3
outsb
mov
fbstp
cli
clc
movsl
jno
mov
inc
add
das
fmull
inc
mov
nop
mov
xchg
rcl
lods
jne
imul
lret
push
cmpsl
jns
adc
jb
cmp
add
pop
adc
sub
sub
clc
xchg
mov
add
mov
leave
pop
xchg
hlt
lret
pushf
xor
sub
int
mov
adc
ja
pop
cmp
inc
cs
adc
aad
sti
scas
sub
jae
jmp
or
cli
inc
movups
repz
scas
cmp
leave
adc
ret
adc
push
int3
push
fdivrs
and
jge
std
imul
dec
fnsave
inc
jns
xchg
dec
xchg
movl
outsl
hlt
xor
lods
cmp
push
inc
hlt
adc
ljmp
sti
mov
testb
sbb
mov
mov
les
popa
push
test
sub
xlat
sbb
xor
xor
pop
push
test
test
in
dec
pop
push
test
jbe
cmp
stos
cli
lcall
mov
ljmp
jb
push
mov
adc
xor
lahf
aam
fnstcw
ret
test
loopne
into
mov
add
xor
bnd
in
sti
mov
sahf
pop
xchg
dec
inc
mov
nop
popf
nop
sbb
aam
outsb
mov
dec
roll
int3
jmp
popa
xchg
hlt
push
popf
je
scas
or
ret
sbb
jl
into
pusha
and
lret
decl
fdivrs
sbb
mov
xchg
hlt
mov
insb
or
scas
dec
aad
adc
aam
push
gs
test
and
outsb
icebp
fcomp
popf
cli
add
aad
idivl
aas
je
fstpt
cmpsb
mov
cs
and
push
adc
enter
sarl
int
ss
aas
cltd
into
idivb
stos
imulb
sub
cmp
pop
cmp
cmp
push
mov
repnz
insl
loop
push
add
push
mov
mov
add
inc
jl
cmc
es
ss
out
test
inc
xchg
and
cmp
ffreep
je
cmp
fxch
jno
adc
mov
inc
or
shrb
push
and
cmpsl
fimuls
sub
pop
cmp
out
aam
mov
out
aaa
xlat
jb
sbb
adc
xchg
or
mov
loop
xor
test
repz
repz
dec
or
repz
stc
xor
into
and
adc
pusha
mov
fisubl
je
mov
pusha
adc
bound
mov
jbe
ret
jno
push
inc
rcl
jns
mov
mov
push
jno
and
adc
cmp
inc
lret
cmp
dec
arpl
ret
xchg
loopnew
mov
mov
mov
inc
ja
mov
jno
inc
pop
iret
std
test
test
nop
mov
mov
pop
push
and
mov
push
int3
push
outsb
pop
or
aaa
and
js
pusha
sub
jae
adc
xchg
xor
aam
mov
push
mov
sti
test
std
xor
outsb
push
or
fstps
stc
or
ds
in
lcall
imul
sbb
rclb
repz
xor
leave
ja
roll
outsb
shll
dec
dec
lahf
jl
push
lcall
mov
call
jnp
imul
in
sub
lods
sahf
cmp
and
xchg
cmp
hlt
mov
fsubrl
mov
sbb
xor
out
stos
nop
lea
mov
out
xlat
pop
sbb
addr16
int3
fisttpl
fistpl
dec
sub
jno
repnz
adc
imul
lret
rolb
dec
jae
shl
stc
and
pop
xchg
xchg
in
fcmovu
faddl
sbb
push
leave
push
fisttps
fildll
int
jmp
xchg
mov
out
mov
mov
and
je
pop
xchg
idiv
sub
and
arpl
mov
push
dec
mov
jns
das
xchg
dec
cmp
push
ds
shr
push
sahf
sub
mov
loop
jg
and
out
xchg
test
cmpsb
ret
sbb
jecxz
pextrw
push
call
int3
xorl
push
pop
fmull
add
inc
sbb
daa
mull
inc
fmulp
pop
js
lods
je
jne
push
mov
pushf
fcompp
or
sbb
inc
cld
cmp
pop
mov
leave
sub
cmp
imul
movsb
mov
loope
xor
stos
les
in
adc
xlat
les
xor
inc
outsb
je
arpl
leave
cmp
out
inc
sbb
mov
mov
and
inc
pop
inc
and
mov
cmp
into
cmp
fnsave
xchg
add
xchg
mov
hlt
cwtl
push
pop
jns
mov
repnz
pop
scas
push
pop
ror
mov
xchg
int3
mov
fcompl
daa
cmp
push
scas
mov
lcall
bnd
cmp
mov
stos
std
out
jae
jb
cli
jbe
inc
add
inc
push
fsubs
nop
ja
mov
test
pop
in
xchg
scas
sbb
dec
fldl
sti
and
loopne
sbb
jmp
gs
jns
lcall
rcr
jno
sub
hlt
arpl
fwait
push
cmpsl
lret
pop
mov
hlt
imul
inc
sbb
and
cwtl
dec
pop
mov
fistl
ds
mov
or
pop
push
enter
push
lock
rolb
repz
out
fs
push
stos
cs
mov
mov
add
outsl
pushf
mov
sbb
mov
mov
mov
hlt
sbb
mov
int3
repz
sbb
fdivl
jmp
fcmovnbe
cmp
mov
cmp
imulb
jo
pop
in
xor
push
sahf
jbe
cmpsb
into
pop
hlt
jecxz
push
xlat
fldcw
adc
inc
add
shlb
outsb
push
ret
xorb
pop
rclb
jmp
xchg
mov
mov
push
mov
imul
jmp
call
fiadds
lcall
int3
jge
clc
dec
inc
inc
dec
ljmp
mov
mov
push
repnz
lods
mov
and
jmp
out
or
repnz
cmp
sbb
psubw
mov
enter
mov
xchg
sbb
sahf
scas
inc
push
push
add
lds
mov
mov
scas
jp
lret
xchg
mov
fimuls
and
dec
adc
shl
xchg
in
outsl
mov
mov
outsb
jo
xor
imul
push
inc
sub
sahf
mov
pop
jmp
push
adc
test
lret
xor
mov
in
lcall
outsb
and
aad
cmp
mov
repz
repz
mov
in
repz
jo
inc
push
popf
xchg
pop
push
or
int
mov
push
xchg
fmul
xlat
or
imul
pop
push
ljmp
pusha
xchg
popl
mov
pop
cmpsl
lahf
pop
xor
sub
push
pop
loop
cwtl
hlt
cmp
cmp
lods
push
jge
popl
add
shlb
add
loop
dec
sub
in
jbe
jle
add
rol
aam
popa
adc
cld
dec
test
lods
cmc
outsb
jge
mov
repnz
mov
out
std
jg
sub
aas
negl
insb
cmp
je
hlt
push
movsb
lods
and
popa
pop
xchg
mov
mov
hlt
add
lcall
ficoms
lods
cmp
push
add
dec
push
jg
loope
adc
insb
adc
xor
sub
out
in
fsubs
stos
in
add
push
pmaddwd
enter
enter
xor
loop
sub
inc
lret
test
outsl
cmp
mov
mov
arpl
inc
popf
mov
popf
cli
jle
sbb
xchg
mov
mov
clc
jae
push
cmp
xchg
fstpl
inc
sub
cmpl
mov
lcall
aas
add
xchg
cmc
arpl
jns
mov
daa
push
stc
inc
sbb
inc
or
bnd
fldt
adc
sub
pop
dec
jl
leave
or
sti
mov
lods
cmpsb
push
push
pop
adc
mov
loop
jno
jle
lret
ret
pop
les
push
in
js
xchg
add
call
scas
push
or
cmpsl
xchg
mov
mov
ss
xchg
andb
jp
dec
cmp
xchg
jae
lret
jge
mov
test
fistpl
loope
imul
fiaddl
inc
adc
jb
fstl
add
mov
cmp
or
out
sub
fbld
add
js
add
xchg
and
jns
dec
adc
mov
lret
ljmp
fcmovu
lods
sbb
fsubrl
lret
push
sahf
push
mov
mov
fadd
adc
test
addr16
test
loop
mov
pop
cmpsl
lds
cmp
push
je
shll
mov
mov
aaa
mov
jns
rolb
test
ljmp
cmpsb
rol
lds
xchg
fs
jmp
pop
cli
mov
std
and
adcl
push
push
mov
iret
sub
xchg
les
aaa
cmp
jl
mov
les
or
testl
sbbb
lods
test
push
add
sahf
lea
adc
icebp
lock
sub
jbe
into
sub
iret
jge
jns
cmpsl
mov
xchg
dec
scas
jge
cli
ljmp
das
out
cmp
inc
push
cmpsb
dec
dec
sbb
loope
nop
push
jge
jnp
xchg
sbb
cli
or
out
es
std
sbb
add
push
loop
inc
out
pop
pop
xchg
xlat
jb
ret
sbb
mov
dec
daa
mov
movsl
inc
sbb
sub
xor
xor
mov
popa
pushf
outsl
insb
jecxz
mov
lret
sar
jl
mov
fwait
dec
lret
lods
outsl
sbb
jb
into
lock
dec
enter
cmp
repz
inc
jbe
shlb
and
pop
outsb
or
cmp
popa
scas
out
jge
push
xlat
imul
push
shr
arpl
fldcw
mov
jbe
cltd
mov
cmpsl
cmp
mov
stos
sbb
dec
jb
andl
and
in
in
xchg
mov
mov
out
push
lahf
pop
cmc
addb
mov
xchg
inc
push
pop
cs
das
sub
in
or
sbb
pop
int
push
jae
imul
popa
aas
xor
shl
cmp
or
clc
daa
out
mov
aad
push
ja
popf
addr16
addr16
inc
mov
xor
sahf
push
sub
mov
inc
lret
pop
fsts
cmc
sbb
enter
mov
fldt
adc
mov
enter
or
inc
pop
inc
scas
cmp
sbb
pop
add
inc
xchg
xor
es
push
fsubrs
cld
add
xorl
pop
sub
fidivrs
pop
test
popa
pop
inc
xchg
lret
sbbl
js
xchg
scas
loopne
cmp
mov
out
sti
add
test
push
into
rcrb
daa
mov
push
fbstp
aas
xor
pop
icebp
jecxz
dec
test
xor
scas
scas
mov
sub
mov
into
in
add
xchg
fstp
push
sub
ja
bnd
adc
clc
or
cltd
cli
pop
call
dec
pop
fimuls
cmp
mov
fcomps
mov
jle
cmp
jne
dec
inc
scas
sbb
adc
xor
adc
adcl
insb
pop
scas
jl
dec
cltd
mov
int3
es
jge
push
fidivl
push
aaa
ljmp
jo
or
mov
test
daa
clc
jo
mov
xchg
insl
jmp
cs
cmpsb
and
mov
pop
inc
js
jns
xchg
js
notb
mov
pop
in
xor
jno
stc
and
xchg
lcall
rorb
sbb
cmpsl
mov
xor
test
arpl
insb
lea
aam
push
ficompl
gs
sahf
adc
fildl
xor
mov
jo
jb
mov
aaa
mov
outsb
std
pop
mov
adc
hlt
mov
sub
mov
add
mov
jb
inc
xor
movsb
jbe
and
add
inc
movaps
sbb
imul
mov
mov
movsl
scas
xor
pusha
or
mov
pop
xchg
pop
loope
cmp
mov
ffree
adc
push
push
inc
cmp
imul
or
add
xchg
shrb
repnz
ss
ja
dec
aam
mov
cmpsb
xchg
mov
incb
or
mov
roll
mov
cli
popf
xchg
jae
loope
or
xchg
cmp
jne
mov
mov
xchg
inc
bound
sbb
imull
jecxz
dec
sbb
and
pop
push
iret
mov
mov
add
xchg
cwtl
mov
lds
lret
xor
inc
pop
push
repnz
push
hlt
ds
stc
xchg
incb
jl,pn
repz
mov
fisubl
jmp
push
xor
ja
push
pop
mov
sub
adc
das
xchg
cli
mov
das
push
std
in
pop
xor
adc
sbb
cmp
push
mov
inc
dec
jmp
push
mov
xchg
movsl
pop
clc
loopne
mov
inc
cmpsb
cwtl
sub
lret
xor
push
cmc
leave
mov
js
aad
popa
stos
cld
cmpsl
das
call
scas
push
adcl
lcall
ss
das
daa
mov
push
mov
sub
push
icebp
imul
ljmp
mov
add
xchg
pop
inc
dec
dec
mov
int3
sti
out
iret
arpl
push
inc
push
add
cmp
andl
hlt
sub
loope
dec
adc
cmp
cmp
je
dec
ljmp
push
adc
push
inc
pop
dec
sub
xchg
sbb
mov
mov
add
cmp
movsl
in
xchg
jle
into
or
lahf
in
rcll
in
push
outsb
mov
mov
sbb
mov
adc
pop
aas
je
cmp
insb
mov
sbbl
popa
in
pusha
or
mov
or
jae
call
in
mov
mov
lods
or
scas
daa
movsl
insb
inc
notb
arpl
jmp
sub
cld
lock
andl
mov
push
xor
mov
cmp
push
cmp
mov
stos
adc
cwtl
adc
add
sbb
xor
das
scas
int3
les
cli
mov
sbb
add
fstps
lahf
mov
cmpsb
sub
mov
imul
in
adc
dec
push
imul
or
push
mov
sbb
push
fdivr
sub
out
mov
cmp
and
dec
dec
cwtl
das
in
sub
xor
popa
loop
repz
and
xchg
mov
mov
adc
stc
bound
inc
jne
rolb
imul
lret
loop
cltd
fistpll
sbb
cmpsb
pop
inc
jg
test
outsl
cmp
or
les
push
or
lock
das
push
xchg
push
push
or
negb
shll
pop
xor
cmc
aad
adc
xchg
inc
rorl
lcall
push
xchg
and
in
sarl
sbbb
repnz
and
pushf
mov
mov
lods
pop
jl
dec
xchg
aas
jle
fcomps
ja
and
test
lret
xchg
out
into
xor
and
mov
dec
loopne
cld
outsl
add
cmpsb
push
sub
jnp
cmp
test
fcoml
cmpsl
cmp
and
shll
push
std
ss
pop
fsubl
cmp
daa
stos
jecxz
jle
int
xor
adc
inc
dec
neg
pop
test
cmc
xchg
xchg
sahf
add
push
shlw
sbb
cmp
mov
push
jnp
jl
mov
leave
xor
cld
stc
nop
rcrl
mov
out
int
mov
rorl
mov
cmpsl
sub
mov
dec
xor
cmp
sub
icebp
call
shll
mov
repz
rcrl
fimull
movsb
stos
mov
jg
or
clc
xchg
mov
push
scas
daa
rclb
xor
aaa
xchg
fs
cmpsl
sub
fidivl
mov
add
inc
adc
in
dec
es
jle
mov
xor
and
sub
lods
repz
dec
cltd
xchg
adc
mov
push
sbb
in
aas
push
hlt
aaa
jb
jnp
daa
test
into
adc
or
xor
sub
int3
rcr
inc
sbb
or
jb
mov
imul
mov
js
pop
pop
mov
repnz
ss
cmpsl
push
pusha
mov
pop
fabs
jbe
mov
pop
add
in
inc
or
jg
fneni(8087
dec
dec
add
xor
sbb
cmc
inc
mov
movsb
mov
add
out
xor
outsb
cmp
mov
cmc
mov
stos
mov
jae
mov
ret
loop
mov
mov
js
stc
stc
jnp
cmp
ljmp
cmp
add
inc
pop
pusha
and
mov
rcrb
add
icebp
out
mov
inc
pop
lods
movsb
out
shll
out
aad
aam
popf
testb
ror
gs
movsb
jbe
push
stos
and
adcb
cwtl
movsl
xlat
scas
and
adc
adc
add
adc
pop
scas
mov
and
mov
xor
rsqrtps
jp
push
push
sbb
xor
sar
popa
imul
out
inc
mov
mov
cwtl
add
ds
cmp
repz
mov
cwtl
jo
jp
ret
aam
aam
add
test
pop
dec
stos
jns
push
ret
inc
jno
mov
cmpsb
enter
in
idivb
jno
lcall
sub
jmp
mov
pushf
cmp
dec
dec
jb
gs
xor
mov
sub
adc
inc
orl
push
sub
cld
les
jmp
ret
hlt
sub
jl
xchg
xchg
adc
sub
in
imul
fwait
je
imull
bound
loope
sub
shll
xorl
cmp
rcll
jae
sbb
add
xchg
test
cmc
ret
pusha
int
inc
xchg
lea
insl
dec
adcl
addr16
cs
mov
cs
scas
sar
add
xchg
lds
mov
and
clc
xor
xor
popf
fistl
mov
adc
adcb
or
push
push
adc
leave
ret
pop
cpuid
cmpsl
jle
xchg
sbb
adcb
nop
test
jg
xchg
dec
jb
enter
mov
inc
shlb
cwtl
fs
cmp
adc
jl
fs
sbb
dec
es
xchg
xor
lret
mov
adc
mov
ret
notl
or
rcrl
movl
imul
sub
xor
sub
arpl
sbb
or
sub
sub
out
xlat
orb
shrb
inc
inc
jmp
jle
adc
jnp
add
out
mov
jmp
xlat
int
add
movsl
dec
add
lea
push
imul
pop
mov
push
sahf
sahf
int
pop
jl
sbb
sbbl
push
nop
int
test
xor
int
sub
xor
in
inc
hlt
inc
repz
rcrb
mov
rcrb
sbb
adc
add
adc
repnz
and
xchg
je
rclb
dec
sub
jbe
ds
mov
repz
sub
into
ss
xchg
inc
mov
fistl
sbb
cmp
shrb
insb
pop
sbb
cmp
or
hlt
adc
arpl
pop
mov
cmpsl
repnz
popl
rcrb
sub
adc
jle
gs
sub
xchg
and
movb
mov
xor
add
inc
inc
adc
and
shll
jb
std
ljmp
and
inc
scas
pop
out
mov
fdivl
pop
or
sbb
xchg
and
mov
cmpsb
dec
bound
pushf
xor
in
loope
ja
movsl
imul
inc
lds
scas
imul
xor
pop
push
and
sub
adc
cmpl
aas
movsl
or
test
fmull
in
cwtl
insb
or
div
repz
leave
xchg
and
jg
jb
outsl
outsl
mov
lahf
mov
sub
or
lock
enter
into
and
rorb
jne
xchg
xor
jbe
je
jnp
jnp
stos
jl
je
pushf
in
push
pop
sub
xor
dec
cs
mov
aad
daa
sbb
gs
jnp
dec
mov
stos
pop
mov
scas
and
xorb
gs
enter
cmc
aam
outsl
dec
mov
or
pop
cs
fistl
int3
mov
ds
mov
add
mov
loope
mov
stos
fstps
cmp
lret
movsb
adc
inc
std
push
in
jle
cmpsl
data16
mov
imul
andl
mov
test
cmpsb
out
push
rol
lret
xorl
and
cli
jns
cwtl
clc
shr
std
dec
mov
ret
std
int3
xor
aad
inc
fldcw
lea
jecxz
and
cmp
add
daa
sbb
ret
cmc
fyl2x
enter
sbb
loope
xor
inc
push
dec
sub
xlat
call
dec
cli
or
daa
xchg
mov
dec
test
fsubrs
pop
orl
nop
push
shll
loop
loope
cmp
lret
cmc
out
sbb
int3
gs
mov
dec
cmp
xchg
mov
dec
mov
pop
fidivrs
mov
sbb
inc
mov
lahf
mov
mov
mov
andl
ret
push
iret
sti
repnz
cmp
lret
mov
dec
dec
add
pop
adc
sub
ficomps
xor
gs
jmp
dec
mov
icebp
pop
arpl
add
jo
adc
push
mov
inc
sub
xor
dec
loope
mov
call
inc
cmpsb
pop
adc
dec
pop
sbb
pusha
and
int3
repz
jmp
sub
cmc
sub
sub
pushf
push
cs
push
scas
imul
ret
cmc
cmpsl
dec
cmpl
loopne
xlat
inc
daa
mov
in
jmp
mov
adc
fs
cmpsb
pop
std
push
xchg
dec
push
and
xchg
sbb
and
cmc
data16
pop
inc
inc
jmp
stos
push
push
fadd
in
xchg
push
sub
testl
sbb
sti
jmp
test
rorb
jnp
xor
repnz
jp
inc
mov
mov
ljmp
push
pop
xchg
roll
xchg
imul
sti
stos
mov
adc
cmpsl
stos
lock
sbb
mov
out
fisttps
test
daa
mov
push
ja
bnd
in
insl
mov
addb
xchg
pop
lock
cmp
xor
and
dec
jmp
pop
mov
insb
jge
rep
cld
inc
ss
loopne
and
fsubs
ficompl
pop
and
sbb
and
mov
xor
ficoml
aad
repnz
xchg
dec
sub
cs
jecxz
mov
aaa
aam
rorb
sub
bnd
jp
in
xchg
inc
mov
cmp
xor
mov
bound
icebp
mov
pushf
pop
sbb
loop
clc
jne
sub
or
pop
sub
call
xchg
test
push
icebp
ficomps
push
add
aaa
aaa
and
push
out
mov
sub
in
pop
pushf
sbb
cld
into
xchg
int3
xlat
and
xchg
loopne
xor
les
pop
mov
and
and
ds
das
enter
addb
gs
mov
repnz
xchg
loope
shll
inc
bound
popf
sbb
insb
push
or
inc
jno
mov
stos
add
lea
xchg
in
or
test
outsl
push
addl
int
inc
cmp
and
mov
rorb
and
mov
pop
pop
mov
fdivrs
push
xchg
mov
and
ljmp
ret
mov
dec
repnz
cmp
push
mov
popa
xchg
sahf
arpl
jecxz
rcll
sahf
scas
jmp
jl
dec
lret
jnp
subl
inc
sub
xlat
or
jge
cltd
in
jl
or
push
mov
icebp
add
jne
icebp
add
loop
fsubrs
xchg
sarb
js
sbbl
add
add
out
outsb
mov
dec
adc
mov
inc
jp
inc
push
stos
xchg
ds
adc
and
pop
adc
outsl
fldl
jp
pop
mov
xor
stos
jno
push
xchg
sbb
sti
sahf
ss
mov
mov
nop
addl
and
mov
into
loop
repz
test
lock
ss
cld
jnp
push
fists
loop
xor
xchg
jnp
test
in
mov
xor
es
movsb
pop
sbb
mov
add
out
sti
lods
lds
xor
xchg
mov
pop
es
inc
push
sbb
pop
or
pop
pop
adc
dec
minps
int3
push
and
lds
jle
mov
sub
fimull
imul
sub
push
xor
shrl
inc
xlat
int3
pop
cmp
xchg
jge
inc
stc
cltd
mov
mov
jno
shrl
stos
lods
sub
xchg
test
pop
pop
fucomi
lret
inc
xchg
cli
int3
lret
jecxz
daa
stos
inc
test
mov
inc
sarl
lret
mov
jnp
bound
or
add
xor
mov
jl
xor
mov
pop
shrd
dec
movsl
je
movsl
js
nop
outsb
dec
popa
pop
xchg
pop
rorb
clc
jns
rorb
sbb
rorb
sahf
cli
sti
sahf
xchg
inc
scas
mov
mov
iret
add
ret
lds
cmp
aas
and
mov
add
data16
subb
cmp
test
add
jns
xor
cmp
mov
ljmp
fdivrl
and
stos
fcomps
mov
aad
jg
adc
loopne
mov
and
mov
icebp
add
mov
fadd
mov
xchg
jmp
movsl
xor
mov
jo
push
push
xor
mov
xchg
mov
or
add
stc
sarl
mov
push
imul
push
dec
and
adc
jmp
stc
jns
pop
dec
popa
inc
add
sbb
cli
xchg
jg
jmp
or
or
inc
xchg
cs
adc
sti
pop
mov
scas
or
xor
pop
mov
pop
arpl
scas
mov
mov
repnz
dec
dec
repnz
scas
mov
mov
push
inc
and
iret
lret
or
cmp
lret
xlat
inc
cmc
push
pop
adcb
in
pushw
and
test
jg
fs
jecxz
sti
lret
iret
adc
xor
jns
xchg
inc
mov
jns
push
mov
iret
sub
add
test
mov
push
cs
lret
xchg
mov
lock
fists
and
clc
es
fwait
jmp
das
pop
mov
adc
mov
std
jmp
fsubs
cs
inc
xchg
and
negb
test
pushf
dec
insl
push
inc
jp
and
and
lret
loop
dec
clc
push
sub
testl
loopne
xchg
pop
sub
pop
jo
jo
sub
stos
fcomip
mov
les
mov
mov
sahf
mov
add
pop
cltd
lock
faddl
test
in
rcrl
loopne
adc
idivb
orb
popf
pop
cli
pop
or
sub
test
xchg
inc
xchg
mov
pop
mov
and
sbb
sub
fucomp
xchg
pop
pop
cwtl
sbb
and
cmp
dec
jns
cmp
adc
mov
xchg
pop
add
fildll
frstpm(287
add
cmpsb
dec
repnz
sub
fimull
nop
cld
rcrl
loopne
cmc
fisubl
pop
in
ljmp
jnp
cmpsl
aaa
or
push
push
mov
push
xchg
je
xor
inc
out
adc
cmc
mov
lds
pop
cs
and
js
aam
mov
mov
popa
fcmovne
or
mov
push
add
mov
mov
aad
xchg
pushf
sub
in
push
out
and
xchg
or
push
sbb
test
pop
enter
loop
das
sub
aaa
or
lahf
jne
loop
mov
mov
clc
push
mov
dec
mov
push
in
mov
pop
lret
pop
jns
pop
repnz
sarb
inc
addr16
jl
inc
outsb
add
xor
push
add
sbb
lcall
rolb
and
add
push
notl
xchg
fwait
popa
mov
jns
pop
cmp
cmp
jne
lcall
inc
faddl
jp
mov
nop
out
sub
xor
cli
stos
adc
clc
or
and
mov
mov
sti
jl
mov
xor
lret
sub
sub
test
pop
jmp
cmp
mov
cmp
call
test
loopne
je
xchg
out
sub
rcrl
stos
lahf
add
pop
jo
sub
add
bound
in
pop
pop
sbb
in
sub
jp
stc
pop
test
jb
aas
dec
and
dec
sbb
pop
aam
dec
mov
rcll
push
fdivl
add
jae
mov
dec
in
repnz
push
dec
cmpsl
add
cltd
jge
mov
cld
pop
stos
js
fwait
and
testl
fisttps
or
imul
jne
jb
pop
xor
pop
jmp
mov
push
inc
cltd
dec
das
sti
xchg
f2xm1
sahf
fstps
ds
cmp
lret
push
insl
stc
push
imul
fldl2t
cmpl
in
push
cmp
or
adc
fistpl
adc
fs
sahf
push
inc
in
or
jnp
insl
sbb
xor
fisubl
add
cmp
jns
popa
inc
add
cwtl
adc
jnp
xchg
sti
sub
mov
and
in
mov
add
ret
pop
mov
les
adc
adc
jge
lea
inc
mull
mov
das
fcmove
add
gs
stos
sbb
xlat
sub
mov
mov
adc
bound
dec
loopne
sbb
push
push
cltd
inc
mov
jb
test
stos
mov
mov
jmp
outsl
mov
jbe
in
ljmp
test
push
mov
xchg
jmp
pop
xchg
sbb
mov
jmp
xor
mov
call
xor
mov
cmpsb
stc
mov
xor
mov
add
fwait
in
inc
push
fadds
xorl
xchg
xchg
ljmp
lock
inc
repz
mov
cmp
dec
adc
xchg
push
test
adc
cmpsb
mov
xchg
cmp
jne
outsb
popf
test
sub
jge
int
aaa
push
aaa
adc
push
pop
cmpsb
nop
adc
lock
mov
mov
in
lret
sub
bound
dec
sbb
push
xchg
enter
xor
mov
or
add
popa
cmpsl
jne
outsb
orl
js
pop
mov
sbb
xchg
cli
adc
inc
pop
push
jp
ds
aad
or
addr16
leave
mov
pop
cmpb
inc
bound
aam
insb
loope
popa
test
jl
sub
popf
outsl
gs
enter
lahf
mov
jnp
lret
jne
inc
adc
cmp
mov
mov
aam
or
push
inc
cmp
pusha
jb
xchg
and
mov
adc
into
xchg
loopne
lea
fdivrp
mul
popl
mov
pop
test
cld
or
mov
adc
and
cltd
mov
cltd
sbb
fstp
pop
xchg
dec
mov
mov
pop
jl
mov
mov
fdivp
xor
out
hlt
add
cltd
adc
out
mov
lods
or
mov
incb
push
and
sarl
mov
cld
cmp
loope
mov
sub
push
pop
repnz
and
cli
je
iret
xlat
jae
mov
stc
nop
bound
sub
divl
in
adc
loopne
loop
push
ss
test
cmpb
or
sbb
std
pushl
imul
addr16
push
jo
sti
push
push
mov
pop
xchg
popf
sbb
jnp
push
mov
in
iret
mov
pop
jae
mov
sub
sub
insl
out
imul
jecxz
out
push
loop
dec
mul
lea
adcb
mov
mov
or
sub
mov
cmp
pop
faddp
dec
push
shrb
out
mov
inc
mov
mov
or
je
mov
xor
adcl
inc
inc
outsb
ja
sub
push
mov
js
imul
jg
jbe
popa
ds
incl
loope
mov
hlt
mov
push
roll
push
imul
inc
cwtl
jo
stos
dec
fistpll
push
inc
subl
pop
mov
push
loopne
bound
add
fstps
add
pusha
adc
pop
outsb
aas
adc
clc
mov
enter
stc
dec
loop
add
arpl
sbb
pop
cmp
fildll
sub
cmp
add
ds
lret
in
lock
and
xor
xor
negb
scas
jnp
mov
aad
repz
push
ret
imul
out
ja
jno
gs
in
xchg
stos
enter
mov
add
jnp
dec
mov
dec
add
outsb
cmpsb
cmp
xchg
push
xor
mov
xor
aaa
push
mov
push
adc
imul
lods
std
sahf
add
in
ret
xor
sti
ljmp
pop
push
inc
inc
dec
xor
mov
and
adc
popf
divb
sbb
inc
adc
pusha
jp
xchg
test
xor
push
roll
sahf
daa
insl
mov
lcall
pop
test
jb
mov
pop
mov
in
loopne
mov
mov
cmp
clc
iret
loope
js
push
test
ljmp
dec
mov
aam
sub
ljmp
movsb
outsb
jp
data16
arpl
in
inc
mov
add
mov
fwait
push
sub
sarl
fisubrl
xchg
push
dec
in
adc
iret
xor
loopne
add
stc
xchg
adc
pop
cmp
jl
pop
cmp
in
inc
mov
jle
xor
decl
fistps
outsb
test
bswap
ja
ss
shll
push
outsb
hlt
aam
xchg
cld
iret
pop
hlt
popa
ja
inc
aas
xchg
lods
daa
xchg
mov
mov
enter
jne
cmpsl
aaa
or
or
mov
push
mov
push
or
push
mov
iret
inc
ret
add
out
fsubs
lret
daa
jle
cli
js
sahf
pop
xor
imul
jecxz
inc
out
mov
sub
adc
movsl
adc
and
aaa
xor
movl
jecxz
xchg
or
insb
mov
inc
cmpb
cmp
into
mov
sahf
xchg
call
cli
loopne
jne
jnp
mov
stos
pop
dec
xchg
xor
push
sub
movsb
lret
cmpl
pop
adc
daa
sbb
mov
std
inc
out
gs
out
pop
fwait
stc
inc
inc
int3
ffreep
in
sti
sbbb
ljmp
inc
jb
fsubr
iret
repnz
outsl
add
pusha
pmuludq
test
gs
xchg
inc
std
and
sbb
cmpsl
cmp
ljmp
in
sbb
jno
lods
xchg
xchg
sbb
insb
lods
mov
insb
dec
insl
fcmovu
sub
repz
dec
out
popa
inc
xor
cmp
stc
mov
sbb
aam
mov
pop
add
cwtl
lock
in
mov
sub
shrl
push
cmp
pop
sub
mov
sub
push
test
push
mov
rolb
jecxz
in
mov
xor
addr16
mov
xchg
add
fs
addl
sub
mov
pusha
mov
add
inc
or
xchg
sbb
cmpsb
iret
dec
sub
imul
inc
enter
jb
pop
clc
in
and
scas
adc
lods
sbbl
sbb
push
ret
imul
es
dec
jecxz
hlt
cmp
std
and
xor
inc
xchg
xchg
test
xlat
mov
leave
pushf
in
xlat
dec
push
sbb
movsb
rcll
jne
pusha
stc
loop
insb
sbb
pusha
inc
inc
repnz
outsb
push
fsts
jecxz
mov
stos
add
ljmp
movsb
mov
sbb
loope
mov
ljmp
stc
or
iret
inc
mov
mov
data16
aad
addr16
mov
mov
shrb
sub
enter
jle
inc
push
jmp
stos
fisubrl
mov
xor
adc
clc
lock
insb
adc
pushl
adc
and
mov
stc
int
inc
cwtl
test
and
push
es
xor
lcall
test
xchg
mov
lcall
dec
or
push
scas
mov
push
inc
lahf
mov
sub
push
sbb
push
test
out
pop
add
xchg
add
inc
into
popa
aad
mov
add
enter
push
pop
mov
sub
inc
clc
xor
jno
pusha
mov
stos
mov
push
in
jg
sbb
mov
lds
hlt
ret
sbb
or
xor
fimull
or
inc
xchg
mov
call
sbb
fisubrl
dec
sub
out
lret
cmp
dec
cmp
jmp
push
pop
test
xor
inc
fcoml
xchg
js
hlt
push
mov
out
sbb
popa
push
fwait
add
or
pop
imul
les
shrb
arpl
ret
dec
loope
data16
xor
ffreep
fldcw
enter
push
and
data16
imul
add
sbb
loopne
jno
call
sub
cltd
shrl
cmpsb
gs
insb
mov
jae
popa
repnz
mov
hlt
jmp
mov
and
jl
and
in
data16
fidivs
mov
dec
popf
inc
dec
and
sub
dec
subb
jb
test
push
sub
test
in
cmc
add
push
in
das
inc
fwait
xchg
roll
push
sbb
sti
aas
mov
inc
stos
leave
imul
mov
mov
test
in
imul
push
dec
mov
test
lea
jge
lahf
insb
out
sahf
or
sub
test
rol
mov
mov
shl
enter
push
add
ljmp
push
xchg
cmp
sbb
mov
movsl
sbb
int
fsts
lret
lret
lahf
int
or
push
mov
mov
ja
xor
sti
sub
jb
and
xchg
xor
add
outsb
ljmp
sti
xor
inc
mov
lret
cmp
mov
jbe
sub
mov
inc
cmpsl
cli
stc
movsb
xchg
cmpsl
lock
jle
sub
inc
popl
fbstp
sbb
rcrb
xlat
ficoms
xor
lret
jb
imul
outsb
cmp
and
pause
sub
stos
xchg
cmp
xchg
repnz
cwtl
xchg
aad
rep
jmp
lret
cmp
xor
arpl
push
rcrb
add
fs
gs
movsl
adc
das
add
jl
inc
sbb
ret
hlt
cmp
mov
pop
dec
cwtl
push
pop
sti
data16
mov
repz
out
xchg
push
lods
xchg
enter
and
dec
adc
shll
cwtl
jo
rcll
subl
movsb
lea
fdecstp
es
jmp
mov
mov
movsl
int3
lods
shrl
cmpsb
mov
or
cmc
xor
or
leave
lock
dec
bound
pop
sti
or
insb
push
mov
test
cmpsl
in
movsl
cli
dec
pop
adc
push
cltd
mull
sub
sub
pop
rclb
dec
in
in
call
out
jg
push
push
adc
clc
enter
in
mov
jnp
cld
enter
shl
jae
out
push
mov
rcr
jo
ja
inc
xlat
ljmp
mov
in
xor
jne
pop
mov
push
js
std
adc
in
sub
push
fcoms
pop
adc
popf
lret
shll
pusha
fcomi
mov
leave
add
xchg
xlat
imul
arpl
ficomps
pop
jle
xor
pop
xchg
pop
lea
jl
pop
je
inc
scas
xchg
lods
dec
pop
jae
aad
into
xlat
in
inc
imul
je
cmc
stos
sub
jle
js
xor
adc
insl
out
jl
loopne
mov
sti
dec
jnp
cs
int
mov
lods
xchg
sahf
pop
push
stos
stos
add
inc
mov
bound
je
sahf
pop
inc
sahf
rolb
dec
das
into
jl,pt
xchg
sbb
inc
out
hlt
xchg
scas
mov
jmp
aam
jg
or
xchg
icebp
sbb
in
and
loop
jbe
jno
pop
fstpt
lds
xor
jg
sub
jnp
or
push
jg
mov
mov
sub
jb
sbb
cmpsl
or
sub
nop
rorw
cmpsl
ret
mov
push
and
imull
jmp
pop
cwtl
test
ds
add
hlt
xor
aaa
push
or
pop
cwtl
je
sbbl
into
mov
cmpsb
int3
push
jp
insl
cld
inc
icebp
push
es
cmp
sbb
test
lret
aas
addb
add
hlt
gs
sub
rorb
out
js
stos
lods
dec
pop
mov
jbe
repnz
xchg
mov
pop
fidivl
dec
jnp
dec
call
lahf
jns,pt
andb
xchg
jne
rclb
xlat
cld
dec
imul
push
hlt
rcl
and
adc
mov
xchg
jecxz
lcall
mov
cmc
loop
fwait
jp
gs
cltd
mov
jo
shlb
or
xor
icebp
or
gs
mov
push
xchg
mov
dec
adc
mov
and
xor
in
cld
mov
icebp
stc
test
daa
fs
ds
add
mov
mov
js
test
stos
sahf
shlb
rorl
push
inc
imul
sbb
out
and
lea
fimuls
mov
data16
mov
add
sbb
xchg
fmul
mov
clc
fstps
jae
mov
lret
insl
testl
lea
or
in
sahf
or
jbe
dec
int
cmpsl
insl
cs
aad
push
mov
sahf
lea
xlat
jmp
push
mov
xchg
and
cmp
mov
pushf
ss
fcomps
pop
sti
adc
out
cmpsb
dec
in
dec
ficompl
jns
hlt
subl
mov
inc
jge
addb
jns
adc
mov
int3
nop
mov
lods
repz
xor
repnz
dec
fs
and
es
aam
sbb
or
pop
orl
push
popa
xchg
pop
js
xor
adc
mov
adc
imul
xchg
mov
dec
pop
mov
inc
les
movsl
shrl
xchg
adc
xchg
jp
push
out
add
lret
filds
push
dec
and
xor
imul
lea
pop
pop
imul
movsb
stc
dec
sbb
test
dec
pop
cmp
push
and
dec
pop
xor
in
mov
pushf
xchg
sub
fidivl
push
add
popf
jg
gs
and
fdivr
inc
add
pop
fwait
loop
ret
push
xor
shlb
push
mov
mov
mov
scas
xchg
insl
mov
xor
xchg
jo
lods
orl
cmc
inc
dec
jo
sbb
inc
add
fisubl
push
xor
xchg
sbb
push
out
mov
outsb
jno
mov
sub
orb
xchg
push
sub
stc
cmp
pop
adc
mov
shll
sub
and
adc
xlat
daa
out
loope
insl
mov
imul
mov
mov
ljmp
js
outsl
not
mov
or
mov
movsl
xlat
insl
xchg
lods
jge
testb
bnd
fdiv
scas
leave
call
push
xchg
pop
adc
and
mov
lods
xchg
in
cmp
sbb
addr16
jns
push
mov
stc
pusha
inc
fldt
jns
fnsave
repnz
addl
pop
ret
sub
scas
pop
push
cld
adc
ja
mov
sbb
lds
lock
test
pop
scas
cmc
mov
mov
dec
and
mov
fisubrl
pop
pop
jmp
pushf
cltd
and
int3
cmp
addl
out
dec
mov
add
sub
mov
les
adc
pushf
in
aad
mov
fdivl
xor
out
cmp
add
mov
mov
pop
mov
xchg
js
pop
jl
test
lods
add
popf
mov
fildl
cltd
pushf
call
xor
test
fldt
aad
adc
fiaddl
pop
lods
mov
xor
out
sbb
xchg
test
cmp
jns
mov
sub
int3
jns
divb
in
mov
adc
jp
push
aad
cmpsl
xor
add
xlat
add
pusha
mov
andl
mov
loop
cmp
jl
cmova
jne
and
sti
jbe
xor
inc
cwtl
das
inc
push
jmp
ror
or
jl
xor
or
dec
aam
jg
ret
and
pop
pushf
les
add
rcr
pmulhw
push
dec
mov
iret
inc
insb
scas
stos
push
cltd
in
pop
popa
inc
sub
cmpsb
imul
nop
push
nop
jbe
emms
leave
in
adc
adc
pushf
negb
and
cs
fcmovbe
jp,pn
mov
xor
das
cmpsl
unpcklps
push
out
dec
leave
jb
aam
js
mul
mov
nop
outsb
inc
jns
xlat
xor
xor
in
mov
jne
pop
xor
stos
sbb
pusha
je
ss
stc
stos
in
in
movsl
ljmp
clc
push
rolb
sub
std
dec
gs
ljmp
ret
mov
mov
or
sub
adc
mov
push
mov
pop
cwtl
sbb
pop
push
lods
bswap
push
cmpsl
sbb
sbb
out
or
add
lret
sub
clc
and
pop
jmp
call
std
rorb
xchg
sub
cltd
outsl
jno
test
repnz
sub
scas
push
cli
xor
mov
nop
mov
and
clc
repz
test
jp
mov
add
add
mov
cmp
xchg
mov
jns
or
jmp
lods
push
add
sahf
rcl
lret
push
pushf
mov
jl
daa
fldl
insl
xor
and
test
pop
inc
inc
sahf
sahf
into
sbb
push
ljmp
jns
cli
fs
dec
push
dec
inc
imul
push
adcb
arpl
sub
push
dec
test
stos
push
out
inc
test
sub
or
lds
clc
pop
fidivrl
push
repz
repnz
jno
pop
lret
mov
push
pop
xchg
add
push
pop
dec
xor
sbb
mov
push
out
repnz
xor
inc
and
jmp
xchg
fsubl
test
movsb
jge
outsb
jp
shr
jl
loopne
les
ja
push
push
add
jp
sub
inc
inc
aas
sti
lea
xor
push
sbb
mov
push
xchg
jg
test
mov
jp
enter
outsb
rcrl
ja
stos
sbb
jecxz
sbb
cmp
aad
call
jmp
sub
movsb
jp
jns
pop
mov
cmpsl
imul
jl
pushf
inc
divb
out
jge
pop
cwtl
lock
jl
and
lret
loop
adc
dec
sub
xchg
cmpsb
int
mov
xchg
inc
popa
mov
jg
jl
push
pop
lods
mov
pop
test
lret
in
out
insb
pop
push
fistps
roll
bound
fs
or
lahf
xchg
sub
dec
mov
sbb
notb
les
lock
movsl
je
sbb
push
clc
rorl
mov
pop
sub
push
nop
push
call
sub
jl
cmpsl
mov
repz
pop
sub
xchg
or
jg
int3
icebp
inc
pop
sbb
outsb
imul
stos
rolb
orl
loope
mov
jno
ret
in
mov
dec
movsl
sbb
xchg
xor
mov
movsl
lock
add
push
dec
inc
in
into
mov
sbb
pop
cmp
push
cmpsl
fnstsw
cmp
mov
test
movsb
sbb
adc
add
ret
ds
lcall
xchg
fdivrs
fst
out
mov
pop
loopne
jnp
sbb
push
loopne
lcall
sub
mov
inc
push
push
mov
sahf
stos
lahf
lods
dec
add
outsb
and
lcall
adc
cmp
push
dec
inc
das
mov
shrb
addr16
adc
jns
decl
adc
inc
mov
aas
inc
popa
cmp
stos
inc
ucomisd
rsqrtps
icebp
rorl
jecxz
das
addr16
add
mov
push
arpl
and
inc
cmp
fisubs
subl
fsubrl
aam
in
mov
and
sbb
rclb
push
mov
pop
xchg
cs
cmp
nop
fcoml
mov
popa
cmc
scas
dec
scas
xor
stos
out
out
cwtl
clc
pop
pop
push
rcrb
lods
push
xchg
lods
cmp
pop
or
add
clc
jle
and
or
shl
iret
and
or
incl
aas
jmp
scas
jno
dec
push
lods
jmp
icebp
adc
aam
jnp
mov
test
xor
cmp
mov
aas
sub
enter
ss
mov
aaa
lds
mov
loop
repnz
outsb
imul
mov
fmul
and
xchg
sbb
adc
test
jae
jmp
repz
rolb
xchg
cmp
jae
xchg
outsb
mov
sbb
sti
inc
clc
jg
aam
bound
setnp
xchg
stos
sbb
or
jne
stc
inc
cltd
push
push
xchg
sbb
loope
fists
imul
mov
jle
dec
arpl
cmpsl
xlat
iret
fistps
add
clc
adc
mov
push
sbb
and
loope
push
ret
addr16
lea
in
ja
nop
clc
sbb
push
dec
inc
mov
and
fdivl
mull
subl
out
jo
sahf
loopne
push
mov
in
push
xor
aaa
mov
and
push
repnz
insb
jae
cltd
call
fisubrs
inc
jg
add
orl
jge
int3
inc
out
sbb
or
push
push
mov
mov
mov
and
inc
or
enter
in
sar
add
add
mov
push
adc
inc
push
and
add
pop
and
popa
aas
lea
call
mov
pop
insb
jne
aam
insl
dec
lcallw
mov
orl
clc
imul
dec
fcoms
cmp
iret
jne
inc
icebp
adc
pop
pop
mov
int
add
js
add
pop
mov
lods
jge
cmp
dec
mov
mov
mov
sbbb
cli
pop
shlb
mov
mov
inc
push
je
popa
mov
dec
xchg
cltd
scas
pop
inc
stos
mov
cld
xor
jmp
arpl
out
push
hlt
dec
inc
sub
xor
stc
jg
insl
test
pop
xchg
jmp
push
cmp
inc
pop
inc
add
adc
add
sbb
cmp
sub
push
lret
inc
das
mov
ficoms
jno
daa
addb
mov
clc
in
push
or
xchg
inc
xor
cmp
and
pop
mov
dec
push
sbb
pushf
sbb
add
jp
xchg
dec
clc
push
dec
jns
or
popa
push
out
and
into
pop
mov
cmpsl
pop
adc
inc
or
push
and
std
cmp
sub
mov
dec
shlb
pop
sub
jb
or
add
mov
push
pop
flds
and
fidivl
stos
fsubrl
sti
cmpsl
mov
pop
xchg
orl
in
dec
divl
pop
mov
cli
clc
dec
push
leave
ficoml
xchg
or
or
mov
inc
inc
out
mov
mov
enter
addr16
arpl
xor
bound
push
sub
or
mov
mov
int3
pop
pop
or
iret
add
xor
pop
or
jl
sub
adc
jo
pop
stc
mov
pop
cmova
mov
lea
push
movsb
and
sbb
inc
movsl
mov
dec
mov
dec
jg
mov
std
leave
dec
ret
adc
jnp
imul
test
rcrb
inc
xchg
popa
or
fdiv
insb
xchg
or
mov
xor
icebp
dec
insb
add
mov
gs
outsl
sahf
dec
jg
lock
outsb
xor
subb
filds
lahf
sbb
add
loopne
pop
mov
push
out
sub
mov
in
xlat
sub
cmpsl
inc
test
adc
mov
push
mov
in
sub
mov
jecxz
xchg
jl
dec
rorl
push
xlat
sarl
jle
inc
xor
mov
enter
mov
sub
add
andb
and
cmp
jns
push
jnp
pop
push
cld
popa
nop
repz
in
xchg
add
repnz
cmp
xor
cmp
cmp
jle
int3
pop
inc
cwtl
mov
cmpl
push
or
ficompl
cwtl
jo
stos
mov
imul
push
mov
es
pop
mov
pop
ja
daa
and
arpl
push
popf
mov
dec
scas
clc
dec
aam
dec
and
aad
out
sbbb
pop
scas
test
stos
cmpsl
std
in
icebp
enter
push
mov
push
cs
in
icebp
cmp
add
mov
sahf
pop
dec
ret
pop
cmp
sbb
lahf
loope,pn
lods
adc
repnz
push
push
xor
aaa
mov
cmc
push
or
out
clc
je
or
cld
push
sbb
int
data16
fcompl
sahf
push
arpl
sahf
mov
and
cltd
push
ds
aam
rsm
xchg
jge
jb
push
pop
and
mov
fcomi
xchg
pop
fstl
mull
rol
rorb
push
dec
cs
mov
out
pop
test
inc
sbb
inc
jl
push
fcoml
adc
and
push
cs
testl
stc
test
mov
aad
jg
lock
arpl
cmp
jge
xchg
divl
fstpt
sbb
sbb
mov
pop
inc
pop
shlb
popa
push
mov
dec
sub
mov
je
and
daa
loopne
je
dec
add
adc
jp
lret
add
pop
cmpsb
inc
scas
add
hlt
and
jne
fbld
in
xchg
js
push
wbinvd
adc
add
mov
cli
pop
pop
sub
int3
bound
nop
lock
add
jg
adc
xchg
lret
mov
sub
enter
lods
decb
shll
pop
push
adc
pushw
xchg
push
cmp
sbb
inc
or
loopne
bound
test
test
mov
inc
sahf
add
aad
push
scas
js,pt
xchg
mov
sahf
pushf
fmull
enter
cltd
xchg
mov
fsubl
push
mov
push
pop
xor
sub
inc
gs
mov
clc
popa
push
je
cwtl
cmp
inc
adc
inc
call
addr16
icebp
xor
test
dec
pop
shl
ret
push
fistpll
lea
jne
mov
stc
xchg
mov
and
cmp
das
addr16
pop
inc
jg
add
shl
sahf
daa
loop
xor
movsl
add
pop
movsb
repnz
or
enter
ds
test
fstpt
jns
cmpb
loopne
jae
cli
dec
xchg
pop
cmpsb
mov
in
or
push
pushf
scas
lea
pop
add
adc
testb
movsl
cmp
std
fwait
mov
iret
insl
xchg
mov
les
sahf
pop
jg
mov
mov
mov
test
enter
imul
push
shlb
cli
rcrl
fcom
test
cli
ds
sub
inc
fdivrs
xlat
cli
int3
scas
mov
addl
xchg
sbb
mov
xlat
push
adc
das
fcmovnu
push
and
xchg
xchg
repz
cmpsl
pop
mov
je
test
das
xchg
xchg
mov
rcrb
xor
mov
dec
je
daa
dec
into
out
jle
or
sti
in
sti
add
cwtl
mov
jle
insl
mov
pop
popa
hlt
arpl
dec
inc
jge
push
shll
and
jbe
out
rcr
and
inc
dec
pop
cmp
es
xchg
inc
jno
cmp
enter
shrb
cld
sub
loope
sbb
cvtps2pi
pop
sub
or
push
add
pusha
jae
pop
pop
iret
xchg
or
lods
jmp
sbb
aam
xchg
sbb
enter
arpl
fbstp
pop
xor
jl
loop
mov
int3
rcll
dec
out
out
xor
imul
sbb
jno
insl
mov
mov
push
loopne
pop
mov
adc
sub
cmp
or
mov
add
cmp
xor
aad
cmpsl
lea
mov
or
bound
imul
test
xchg
xchg
push
mov
add
jo
insl
inc
jmp
mov
xlat
cmpsl
xor
mov
stos
jb
fstps
mov
andb
out
jl
int3
pop
mov
and
pop
inc
xor
jae
into
div
push
lcall
dec
mov
add
mov
adc
or
or
test
xor
jg
das
iret
nop
sti
xor
push
movsl
pop
mov
jne
lods
mov
clc
pop
jne
xchg
rclb
dec
add
xlat
cli
mov
adc
inc
jg
je
in
faddl
xchg
insl
daa
mov
lods
push
push
sti
sub
inc
arpl
inc
push
push
ret
fwait
cmp
jge
inc
out
mov
adc
add
cs
nop
push
leave
shlb
in
scas
out
inc
int
push
or
int
push
xor
xrelease
cmc
sbb
mov
std
dec
sub
push
xlat
das
shll
in
mov
data16
sbb
push
sbb
jns
bound
cmpsb
jbe
popf
cltd
pop
lds
pop
lods
daa
mov
adc
test
arpl
mov
sar
push
loopne
inc
pop
fwait
sub
and
adc
push
imul
fdivp
mov
mov
or
cmp
in
lcall
in
push
xor
push
mov
mov
loop
loop
out
ds
push
or
ret
rorb
push
out
roll
ret
inc
scas
pop
fnstenv
sbb
or
jge
mov
stos
outsb
and
and
shrl
addb
mov
cltd
roll
cmp
cmc
ret
aaa
fs
jnp
ss
pop
adc
mov
lods
mov
pop
push
popf
mov
adc
loopne
jmp
into
cmpsb
cmp
pop
ljmp
das
sar
jl
movsb
ss
inc
std
insb
cltd
adc
inc
inc
lcall
or
mov
mov
jnp
cltd
mov
sub
stc
or
xor
dec
cmp
lea
mov
mov
hlt
lret
mov
call
sbb
lret
rclb
jae
mov
adc
sub
sbb
push
outsl
out
aad
icebp
mov
inc
sahf
icebp
insl
sbb
insb
pop
aad
shrl
mov
rcll
clc
testb
icebp
sub
sbb
or
loope,pn
jmp
fisubrl
push
or
pop
shrb
lea
push
adc
lahf
push
sub
xchg
cwtl
dec
pop
cmc
mov
cmp
inc
xchg
ja
idivl
inc
adc
addr16
mov
aam
clc
dec
or
loope
ja
shlb
aaa
mov
lock
fidivrl
pop
mov
mov
mov
ss
jbe
dec
scas
rolb
inc
xchg
mov
or
xchg
jmp
adc
mov
or
orb
lds
shll
out
jecxz
andb
jbe
lods
xor
stos
iret
shl
out
cmpsl
adc
xor
add
outsb
cwtl
movsb
outsl
lcall
rcrb
mov
test
mov
mov
arpl
sbb
movsl
xor
lret
sti
outsl
adc
add
or
cmp
pop
mov
imul
sub
lods
fidivs
dec
and
rorb
movl
loope
subl
nop
xchg
mov
mov
pop
jno
pop
jg
jecxz
or
fstpt
shl
into
aam
sbb
in
loop
xchg
scas
dec
aad
imul
call
cli
adc
ret
add
or
cltd
pop
idivb
xchg
mov
pushf
push
push
int
inc
push
jbe
adc
xchg
fsts
jns
add
xor
jnp
movl
pop
fadds
or
ljmp
xchg
je
jbe
mov
lea
xor
test
ret
dec
push
and
xor
push
incb
rcll
adc
cmp
adc
push
maxps
ficomps
jb
jns
insb
popf
ja
jo
test
mov
fwait
pop
jb
adcb
lahf
or
push
adc
pop
sub
loopne
mov
mov
sub
aam
outsl
mov
sub
sub
mov
xor
jo
lahf
cmp
lcall
mov
sub
push
mov
xchg
int
push
or
lock
pop
pop
imul
xchg
scas
lret
pushf
icebp
out
bound
pop
xchg
daa
int
test
xchg
test
pusha
cbtw
sahf
cli
or
mov
fldt
jge
pop
mov
mov
or
mov
arpl
jne
fwait
imul
insb
sub
xchg
adc
lds
adc
add
cmp
sbb
es
push
jo
stc
push
mov
mov
outsl
int
push
jns
shll
or
in
movsl
cmp
test
adc
cli
imul
dec
mov
mov
fwait
push
add
mov
out
sbb
push
sub
mov
nop
idiv
mov
mov
scas
mov
pop
push
test
xchg
push
mov
pop
je
ds
testl
push
clc
inc
mov
mov
sub
in
cs
subb
xchg
pop
iret
lcall
mov
inc
movsb
jle
ja
ficoml
sbb
xchg
lock
les
fsubrp
ds
sub
add
and
mov
std
int
into
xor
inc
sub
xchg
aam
icebp
aam
or
adc
aad
or
out
xor
pushf
sbbb
cmpsl
ljmp
pop
mov
push
adc
mov
jo
xchg
sahf
loopne
sub
adcb
add
mov
js
inc
mov
push
adc
pusha
mov
fxam
jle
aad
aad
and
xor
jmp
sub
inc
sub
mov
je
cmp
jl
fadds
addr16
push
leave
les
incl
aad
sti
mov
mov
fwait
rcrb
pop
xor
sarl
lods
mov
mul
or
mov
or
push
sub
xor
pop
pop
sbb
cwtl
hlt
incl
dec
shrb
xchg
and
scas
push
adc
inc
mov
adc
fists
jecxz
or
cmp
bnd
or
xor
or
push
movsl
and
ss
adc
rcll
and
and
sbb
adc
clc
xor
adc
cmp
fs
or
or
cmp
mov
repz
popa
push
mov
cs
mov
xor
and
dec
and
cmpsb
mov
popf
mov
sar
loope
les
dec
in
xor
rcrb
pusha
in
les
inc
out
in
mov
jp
stos
mov
int3
repnz
mov
push
lods
dec
xchg
push
push
push
aad
lock
sub
cmp
xchg
jge
lds
adc
adc
cmpsb
mov
repz
out
dec
add
xlat
push
test
jb
dec
into
mov
imul
dec
lock
add
mov
ret
popa
iret
loop
faddl
je
sub
dec
lret
shll
cltd
shrb
lds
sbb
jmp
push
or
arpl
into
push
andb
test
pop
lahf
mov
mov
popf
adc
adc
sbb
mov
test
xchg
and
leave
xchg
fs
std
iret
mov
push
mov
xor
stc
and
cmp
inc
mov
xor
push
leave
fwait
js
in
std
fwait
adc
lock
out
idiv
jno
mov
push
mov
sahf
les
mov
outsl
movsl
out
nop
xorl
icebp
loope
movsb
add
add
loopne
scas
lea
andb
hlt
inc
add
jo
cs
cwtl
bound
movsl
push
shrl
insl
jo
imul
outsl
adc
cmpsl
adc
push
inc
and
pop
push
clc
loope
lret
sbb
je
frstor
pushf
mov
adc
cmovp
ja
imul
ja
fimuls
jecxz
sarb
out
inc
or
mov
fldcw
sbb
mov
add
lods
push
push
jnp
fldenv
jge
dec
push
push
sub
cmp
mov
dec
jmp
mul
xchg
lret
dec
dec
xchg
sub
in
cmp
clc
push
add
adc
in
and
ret
arpl
push
ja
movsl
mov
jbe
pop
loope
lcall
mov
je
ret
xor
test
mov
push
inc
cmpsl
adc
leave
cltd
addb
xorl
std
push
pop
out
xor
and
cmp
lea
icebp
sub
xor
jo
cs
or
notl
lods
mov
outsb
jmp
lods
int
cmp
push
insb
out
fisubrl
stc
nop
pop
xchg
lds
push
fiaddl
cmp
jg
test
shrb
cmp
adc
les
pop
pop
add
test
sahf
mul
sub
mov
inc
leave
ds
mov
mov
sbb
mov
xor
jno
insl
jb
loop
fnstsw
lods
inc
sbb
insb
std
xlat
xchg
or
imul
cli
mov
sub
rcr
mov
flds
sti
sbb
mov
push
xlat
aam
mov
nop
ja
lcall
mov
ret
jno
lcall
icebp
enter
cli
mov
imul
fsub
pop
mov
mov
and
sub
sbb
mov
inc
mov
scas
jae
icebp
test
sahf
mov
push
mov
fnstcw
gs
pop
loop
mov
push
ss
pop
mov
adc
inc
popa
es
movsl
add
in
stos
sbb
dec
cmpsl
fwait
jbe
cmp
sub
lea
cs
cmpsl
add
andl
enter
addb
add
daa
push
roll
push
fcom
lcall
mov
pop
lea
int
cmp
xchg
jecxz
scas
pop
jg
faddl
pushf
mov
mov
lret
shll
in
jae
gs
push
lcall
adc
imulb
mov
push
mov
pop
lea
sub
andb
sbb
lods
xor
into
outsl
cmpb
clc
mov
cmp
idivl
mov
sti
add
mov
call
jne
icebp
les
loopne
pop
insb
frstor
out
sbb
lds
hlt
stc
stos
xchg
adc
sbbb
jae
out
adc
adc
add
push
dec
adc
inc
lcall
movsb
in
pop
push
adc
and
je
stc
popa
dec
int
ret
jns
int3
mov
leave
test
out
push
mov
mov
and
rorl
xchg
int3
hlt
adc
scas
mov
hlt
hlt
ret
and
test
lds
push
xor
sub
adc
test
fsubrs
mov
xchg
pop
out
stos
stc
adc
jno
inc
pop
mov
nop
bound
fistl
xor
adc
mov
and
dec
or
adc
test
scas
xor
dec
lea
leave
sub
or
cmp
orl
addr16
loopne
insl
fadds
fs
jnp
mov
fiadds
sahf
mov
data16
aaa
or
xchg
inc
cmpsl
arpl
jecxz
mov
and
into
pop
imul
fisttpll
loopne
cmp
jnp
fcoms
mov
pop
pop
dec
pop
cmc
outsb
jle
pushf
test
daa
shr
mov
int3
mov
subb
dec
add
mov
lcall
mov
push
pop
loope
cli
loope
push
divl
jnp
xlat
fwait
stc
or
jg
cld
mov
movb
jne
sub
inc
lea
or
pop
sbb
and
fnstsw
add
adc
rolb
sbb
push
xor
mov
lret
out
mov
cmp
pop
cltd
pop
lds
inc
ja
lahf
lods
lret
fdivr
and
push
push
inc
jge
push
inc
test
cmp
cmp
lock
adc
test
cmpsb
push
cmc
inc
gs
ficomps
movsb
jp
test
int
inc
inc
nop
add
imul
stos
mov
and
les
daa
fiaddl
adc
lret
or
popa
or
cmc
add
test
enter
and
cli
cs
out
mov
lahf
push
or
fs
int3
mov
inc
fs
xchg
clc
push
xchg
cltd
loopne
jle
add
cmp
cld
or
mov
mov
pmullw
mov
and
jnp
jecxz
pop
sub
insb
lret
cmp
sub
mov
xor
dec
aad
sub
imul
lret
xchg
insb
pop
sub
or
leave
jns
lock
and
in
or
pop
les
and
push
sbb
loop
xor
mov
mov
repz
fcmovnu
jmp
mov
mov
js
jne
iret
ljmp
mov
repz
dec
sub
pop
or
iret
adc
lods
mov
xchg
jmp
or
push
and
out
popf
std
jle
cs
popa
aaa
dec
or
sub
cmp
cwtl
push
mov
jne
js
mov
fidivs
mov
or
imul
inc
lret
or
insl
pop
jle
push
xor
lret
pop
pop
xchg
and
inc
out
mov
jg
inc
mov
push
jg
out
dec
xchg
test
cmp
mov
cmpb
ss
jno
fidivrs
add
mov
fisubrs
ja
mov
mov
inc
mov
aaa
pop
sbb
insl
ss
xchg
mov
scas
mov
shll
jno
add
test
pushf
inc
sbb
mov
enter
std
jne
adc
xor
or
mov
pop
mov
mov
push
mov
lahf
fwait
xchg
and
cmc
pop
xchg
aaa
sbb
xor
add
gs
pop
aad
or
mov
out
push
adc
mov
in
xor
les
or
pop
out
jg
imulb
sub
push
mov
pop
adc
mov
mov
pop
fwait
inc
shlb
jne
jb
dec
inc
pop
stos
insl
lret
and
shl
cmp
jp
mov
aad
gs
js
mov
mov
mov
sbb
sahf
xor
add
mov
stc
dec
into
cli
das
xchg
les
loope
inc
imul
xor
fcompl
out
add
loop
sub
fbstp
shrl
and
xchg
and
pop
data16
xchg
filds
pop
pop
jb
lock
rclb
daa
fldt
pop
sub
inc
int3
iret
adc
add
jns
xchg
sbb
fistpll
adc
push
push
mov
je
mov
mov
jae
xor
into
cmp
out
call
or
cmp
ret
push
ret
xchg
shlb
sub
std
out
xchg
test
cli
imul
es
orl
jl
rol
adc
or
or
adc
mov
jl
mov
lret
mov
ja
mov
sbb
mov
xorl
mov
add
sarl
orl
jnp
insb
shll
sbb
add
inc
add
inc
loop
ds
mov
mov
loop
xchg
dec
cmpsl
pop
mov
sahf
vmovntpd
fucomip
negb
fnstsw
mov
inc
xchg
sub
sti
rcrb
repnz
test
jne
enter
movsb
sub
push
pop
nop
and
sub
cmpsb
data16
sbb
in
repz
pop
push
adc
mov
jg
aam
rorb
add
int3
dec
jmp
cmp
mov
add
push
std
fidivl
fcomp
and
movsl
jne
enter
adc
les
test
add
xor
in
incl
rcrb
lock
es
frstor
sbb
sub
inc
testb
lds
and
adc
repz
pop
push
adc
sbb
dec
dec
mov
push
out
mov
mov
jmp
hlt
mov
mov
xchg
sub
jecxz
and
stos
inc
rsqrtps
mov
lock
rcll
lahf
jae
je
sbb
aad
jne
or
mov
jbe
pop
mov
dec
daa
scas
cli
je
jg
loop
fisubs
xor
cmp
mov
outsb
push
sub
jge
and
sahf
pop
rolb
jb
std
pop
push
test
movsb
mov
inc
aad
lock
das
inc
xor
in
pop
mov
jmp
out
ljmp
fnsave
clc
enter
push
daa
arpl
into
push
pop
sbb
into
mov
xor
mov
inc
xchg
inc
movsl
iret
add
pop
and
not
lock
xor
jbe,pn
or
dec
mov
jl
out
cmc
les
jp
imul
pop
jg
decl
inc
loopne
fmull
push
out
mov
adc
lods
ss
xchg
xchg
sub
or
and
xor
mov
int
dec
sbb
jbe
adc
mov
sub
bound
out
jmp
out
iret
mov
loop
shlb
pop
xor
mov
push
and
imul
jle
jo
lahf
mov
and
enter
loop
jno
cmp
rorl
cltd
movsb
or
cmp
lods
jo
in
pop
dec
insl
mov
roll
out
pop
shl
sub
mov
lock
mov
mov
gs
or
jmp
into
js
fnsave
sub
imul
stos
imul
repnz
lods
sbb
hlt
pop
inc
mov
repnz
testb
icebp
cmpsb
adc
jl
inc
xchg
jge
jmp
lea
sbb
notb
loopne
pop
cmp
cmp
or
xor
push
jle
scas
out
std
enter
mov
ret
hlt
push
movsb
ljmp
notb
iret
xor
mov
mov
push
or
pop
dec
cmp
and
int3
insl
sbb
and
loope,pn
sub
push
rorb
cmp
cmpsl
cld
daa
sbb
fdivp
fcoms
jle
inc
or
cmc
cmpsl
dec
add
sub
lods
pop
add
dec
xor
push
mov
jmp
cmpsl
mov
movsl
mov
scas
xchg
ror
cmp
sbb
imul
pop
mov
in
jmp
xor
daa
filds
jmp
lock
mov
jno
dec
bound
arpl
jnp
fidivrl
ljmp
pusha
add
shrb
movsl
jno
sti
cmp
jbe
fucomip
es
pop
sbb
sub
aad
std
xchg
cmp
push
nop
cmp
je
bound
in
in
jae
or
and
jne
dec
pop
jbe
mov
ss
sbb
ficomps
lahf
testl
jp
dec
fdivr
movsb
stc
push
sbb
repnz
pop
push
ficoml
add
or
mov
pop
lcall
fimull
jb
jmp
sti
mov
aad
loope
mov
inc
jge
dec
xor
scas
mov
cli
lods
das
stos
cmp
lock
or
mov
jecxz
loope
or
xchg
in
decb
imul
xlat
jge
mov
lods
mov
push
pop
insl
ret
cli
dec
cmp
push
imul
stc
jg
inc
push
pusha
jmp
ss
mov
jmp
xor
outsl
add
sbbl
cs
ret
loopne
negb
mov
pop
lahf
repnz
or
and
xchg
mov
movsl
mov
jecxz
movsb
mov
sub
xor
in
fs
rorl
ja
jg
xchg
add
xchg
jb
mov
in
or
outsb
push
xchg
outsl
int
gs
lret
inc
mov
dec
enter
ror
mov
stos
sbbb
fisubs
xchg
pop
sub
and
out
mov
xlat
stos
jl
push
add
dec
sti
sub
or
dec
jns
shlb
mov
outsb
xor
cwtl
into
int3
mov
inc
cmc
jno
les
outsl
aaa
sub
dec
sarl
loopne
movsb
or
lahf
das
shlb
mov
in
insb
aad
repnz
xchg
sub
adc
ss
fwait
shlb
xchg
std
pop
sub
lret
jp
rorl
add
dec
lahf
lods
pop
mov
jmp
sbb
dec
jne
push
add
push
pushf
pop
pop
push
std
stc
and
lods
or
movsb
js
div
insl
roll
xor
and
and
and
shll
push
cwtl
outsl
aad
rcll
sub
aas
das
add
movsl
in
mov
pop
jl
sbb
pop
inc
or
dec
sub
push
mov
andb
jne
shll
gs
repnz
es
dec
ret
aas
clc
or
fstpt
cmp
stos
popa
ds
jge
xchg
sahf
sub
mov
pop
adc
mov
mov
push
pop
mov
sub
pop
and
xchg
pop
ja
xchg
loope
in
test
fidivrl
out
jne
adc
leave
and
clc
inc
stos
das
jg
sub
or
xor
loopne
xor
xor
or
push
in
cld
imul
jge
push
lock
pop
adc
cmpsb
lods
or
xor
cmp
pop
adc
xchg
imul
in
jne
loop
out
in
leave
fidivrs
leave
cmp
adc
outsl
jmp
pop
les
or
jbe
stc
jmp
sbb
xchg
dec
push
mov
fcompl
jbe
sbb
adcl
ss
mov
sbb
mov
push
test
push
fwait
push
mov
mov
mov
adc
mov
ret
test
jp
dec
fdiv
lds
adc
or
repz
dec
mov
xchg
inc
push
pop
dec
dec
das
dec
sub
xor
ss
or
mov
arpl
sub
dec
rcll
ret
sub
add
xchg
jp
or
in
mov
imul
push
aaa
fsubrl
mov
in
inc
sub
imul
push
xor
jmp
push
ds
fmul
movsb
popf
lods
subl
push
lock
pop
and
insb
xchg
mov
or
repnz
pop
jg
push
dec
pop
xchg
pop
imul
stos
sub
xchg
jo
jmp
push
push
ret
or
adc
call
mov
es
in
mov
sti
mov
mov
test
or
int3
push
outsb
stos
mov
cwtl
stos
cmc
fcoms
cli
or
xchg
jl
iret
pop
cmp
or
inc
xchg
xchg
add
dec
jne
xchg
stc
pusha
sub
xchg
loopne
xrelease
iret
cmpsb
mov
mov
and
jge
xor
jle
flds
xchg
push
pop
add
das
or
jns
mov
rorb
fwait
cmpsl
dec
inc
inc
xchg
cs
loope
xor
test
sbb
ret
inc
lcall
shll
movsl
inc
icebp
mov
pop
in
sub
jb
xchg
imul
sbb
pushl
addr16
fisubrs
inc
popf
fs
int3
fldt
je
push
pop
sbb
push
jle
sbb
in
stos
xor
xor
mov
or
sbb
aas
jecxz
ds
xchg
enter
out
add
jecxz
adc
xor
pop
arpl
scas
movsb
in
in
stos
test
fmulp
inc
jnp
xor
cmpsb
push
test
repnz
inc
jne
or
js
scas
movsb
daa
xchg
lret
ss
inc
rcrl
xor
sarl
dec
stos
mov
push
and
out
mov
fmuls
or
imul
push
push
xchg
rorb
int3
mov
popf
push
sub
pop
sub
and
aaa
in
mov
lock
dec
test
cli
inc
dec
pop
hlt
jmp
sbb
jecxz
inc
mov
jge
sub
leave
mov
and
addr16
mov
repnz
inc
push
xchg
fistpl
pop
loop
mov
in
xchg
mov
cwtl
ss
cmp
popf
lahf
and
testl
or
insb
mov
cld
add
arpl
cmp
lahf
mov
jns
mov
cmp
ja
xchg
adc
in
mov
aam
xor
test
mov
jns
scas
cwtl
pop
and
sbb
popa
lahf
xchg
pop
test
sub
subb
int3
jmp
or
sub
in
loopne
adc
flds
gs
ret
push
jb
nop
mov
cmp
push
lea
fsubrp
loop
imul
xorb
push
cmp
dec
xchg
xchg
mov
enter
mov
mov
mov
pop
test
push
jns
sub
stos
fs
lods
lcall
adc
sbb
sub
rorb
mov
adc
in
addr16
jb
mov
fxch
mov
repz
mov
testb
pop
dec
cmp
ljmp
sbb
dec
shrl
mov
movsl
adc
and
out
idivl
jns
ret
jno
stos
loope
lds
xchg
and
adc
cli
lds
sbb
sub
cli
dec
xorb
pop
mov
scas
add
push
mov
andb
xor
in
xor
and
fmull
mov
nop
repz
aam
or
sbb
fldenv
fcomps
ljmp
aas
testl
rolb
pop
iret
cli
sub
mov
stc
inc
stos
movsl
sub
dec
lret
popa
fcomps
lods
sti
adc
mov
pop
and
sub
xchg
push
movsb
shrl
or
repz
pop
fwait
jp
scas
jmp
js
or
or
fcoms
shlb
xor
mov
imul
jbe
insb
out
stc
xchg
out
enter
inc
inc
pop
popa
rorl
into
xor
cmp
adc
add
sub
mov
ja
adc
jg
or
dec
hlt
dec
loop
js
fcompl
sahf
ja
or
inc
pop
push
add
clc
fsts
insl
adc
mov
pop
adc
outsb
mov
adc
lahf
sarl
lods
adc
sub
sub
into
mov
inc
sbb
ret
mov
adc
mov
leave
and
cmp
sbb
mov
pop
mov
push
pushf
cltd
xchg
fstpt
xor
ss
cmp
sti
sub
ss
adc
pcmpeqb
xor
adcb
test
mov
dec
xor
cld
out
in
fsts
mov
add
sbb
mov
jns
mov
arpl
push
cmc
xchg
sarl
dec
iret
decl
mov
adc
mov
xchg
cli
and
push
sub
cmc
shl
sub
or
int
mov
jl
movsb
cs
push
jg
xchg
outsb
ss
sahf
mov
pushf
mov
ret
sub
mulb
mov
mov
fidivl
mov
jg
or
mov
jns
aaa
das
aas
sbb
shlb
pop
jbe
nop
xor
xchg
xor
mov
ret
xchg
pop
rcll
loop
add
cmc
movsb
hlt
mov
jb
ljmp
mov
repnz
dec
cltd
hlt
push
push
outsb
mov
in
nop
or
fwait
aas
add
fnstenv
jo
test
jbe
outsb
and
lret
mov
fistps
xchg
mov
sbb
insl
jne
into
or
shlb
push
cmp
jmp
outsb
repnz
or
out
and
add
inc
or
inc
lods
les
or
aaa
fcomp
sbb
cli
cmc
xor
adc
outsl
test
popf
pushf
xor
adcb
addr16
sbb
sub
mov
mov
stos
mov
cmp
jp
shlb
mov
sub
rorb
bound
adc
cwtl
lods
test
and
adc
sbb
mov
sti
jl
lahf
pop
push
gs
mov
pop
adc
mov
repnz
jne
iret
and
fisubrs
push
jno
shlb
icebp
sahf
cmp
nop
inc
jmp
add
stc
mov
fadd
js
cltd
cltd
mov
or
shlb
mov
cld
dec
cmc
nop
xor
aad
mov
stos
xor
inc
call
xchg
rcll
xchg
jb
dec
jecxz
inc
fildll
jns
add
pop
mov
mov
fdivr
pop
loop
mov
add
mov
cmp
cmp
enter
movsl
ja
add
mov
push
mov
je
loop
gs
jp
jecxz
cli
cmc
call
imul
imul
adc
scas
xchg
out
inc
add
scas
daa
mov
cs
out
adc
fdivl
sbb
movsb
and
popa
fisubrl
and
jle
sbb
cltd
adc
cmpsl
pslld
call
jl
inc
xor
mov
repnz
fists
lea
cmp
mov
jnp
in
int
jb
outsl
xchg
jl
mov
aaa
cmp
mov
in
cli
sub
add
lea
movsl
stc
jns
aas
sti
cs
fimull
ja
mov
pop
inc
mov
mov
or
in
fisttpl
outsb
cli
bnd
fs
loopne
lods
push
pop
pusha
xchg
xchg
mov
pop
gs
nop
mov
shl
sahf
jno
int
neg
stos
mov
ret
inc
pop
mov
add
mov
xchg
je
pusha
pop
bound
jle
pop
ret
rcll
mov
inc
jle
adc
sbb
xor
es
shrl
cmp
mov
mov
shll
and
rolb
ja
sub
jne
iret
addr16
and
pop
xchg
push
sarb
sbb
enter
jmp
xchg
cwtl
jg
fdivrl
aam
test
and
pop
lods
add
out
adc
cld
sbb
mov
mov
jns
addr16
es
dec
xchg
mov
imul
test
rorl
pop
push
aas
mov
outsl
addr16
int3
scas
xchg
jp
sbb
add
hlt
into
pop
xchg
inc
idivb
fstl
in
repz
mov
movsb
xor
call
xor
push
pusha
xor
pop
enter
inc
jo
and
in
mov
or
gs
push
sbb
sbb
cmpsl
movsl
jecxz
mov
dec
and
dec
aas
clc
push
push
or
iret
adc
test
mov
xor
cmp
stc
mov
gs
iret
pusha
and
lret
push
mov
ja
cmp
daa
lahf
jno
mov
mov
jo
mov
cld
insb
pop
mov
sarb
mov
jecxz
ja
push
dec
mov
dec
push
mov
jno
notb
mov
bound
cmp
sbb
int3
sub
repnz
hlt
fildl
push
sub
sub
jae
movl
lds
jb
jle
push
enter
cmp
out
or
xchg
xchg
lahf
pop
push
pop
pop
adc
out
icebp
or
movsb
dec
in
stc
leave
out
or
mov
clc
mov
or
sarb
mov
addr16
xchg
sarb
outsl
stc
stc
xor
pop
repz
fildll
jae
xchg
mov
inc
xor
xchg
mov
mov
loop
xor
out
outsb
sub
dec
sub
cmp
leave
and
ret
insl
js
xor
and
add
pop
mov
cld
frstors
repz
clc
leave
mul
arpl
dec
rclb
jno
andl
rclb
outsl
xor
xlat
push
cmp
pop
inc
ljmp
cld
push
adc
adc
pop
add
in
dec
sti
cmp
add
aaa
mov
repnz
jg
shrb
xor
inc
push
mov
mov
sti
jg
scas
inc
mov
mov
xlat
mov
jae
fstl
push
jnp
loopne
in
ret
out
pop
scas
das
sub
jns
xor
nop
test
popl
push
bnd
push
inc
push
fidivs
stc
adc
inc
jnp
push
or
pop
shrb
and
data16
xor
mov
andl
shll
mov
jg
pop
cwtl
mov
pextrw
add
mov
mov
jl
mov
xor
ja
je
sbbl
inc
mov
shll
nop
jns
xchg
lock
mov
sbb
xchg
sbb
out
inc
iret
dec
sbb
sbb
popf
mov
into
loope
mov
popf
roll
mov
scas
ljmp
pmulhuw
int
bnd
mov
js
cmp
and
aam
pushf
mov
out
jle
in
cmpsb
mov
out
jle
stos
xchg
jne
cmp
aas
cmp
sbb
jmp
pop
std
pop
sub
popa
pop
xlat
lret
ds
mov
orl
sbbl
lods
mov
fs
sub
mov
mov
repz
popa
scas
xor
pop
dec
xchg
mov
xor
int3
inc
dec
add
mov
jmp
mov
xchg
xor
xchg
push
or
popa
jg
and
cld
mov
sub
cld
xor
lret
arpl
dec
push
adc
clc
push
dec
in
outsb
xchg
pop
mov
ds
push
inc
mov
push
cmpl
clc
sbb
adc
decl
add
je
popf
adc
dec
add
dec
movsb
add
fdivl
test
in
add
jbe
and
shll
cmpsb
es
ret
adc
fstpt
xchg
fstps
je
pop
xor
mov
jns
jno
sub
cmp
sahf
sbb
repz
fs
dec
mov
or
adc
push
outsb
cmp
jge
push
mov
pushf
adc
mov
push
je
enter
data16
dec
adcb
add
popl
popa
or
fwait
arpl
loopne
sti
pop
jnp
insb
in
pop
fcomps
icebp
mov
cmp
cmc
test
sub
shlb
mov
push
outsl
push
cmp
mov
mov
rolb
dec
dec
jnp
jmp
lods
mov
cmp
inc
mov
sub
imul
fldenv
ja
push
mov
cmp
pop
pop
fdivrp
mov
fwait
mov
ja
sbb
lcall
cmpsl
loopne
mov
sbb
mov
push
fsubs
cltd
lods
xchg
movsl
rorb
pop
pop
sub
cwtl
inc
inc
sbb
pop
jb
push
bsr
sbb
dec
jae
stc
inc
sbb
cmp
dec
test
popf
lea
pop
sti
jae
cmpsb
aaa
cmpsl
in
aas
das
xchg
push
into
lods
push
xor
imul
lods
mov
jl
sub
cmp
mov
cmp
jno
cmp
add
iret
popf
cmc
dec
fildll
or
jnp
mov
add
push
pushf
pop
cmp
movzwl
sub
call
adc
fnstenv
push
notb
cmpsl
inc
inc
in
mov
inc
shll
mov
ja
jge
mov
lret
push
jb
mulb
adc
inc
test
les
imul
add
lret
es
push
mov
mov
xor
push
xchg
insl
pop
loopne
rclb
pop
xchg
pop
mov
aas
inc
sti
cli
dec
or
xor
enter
mov
ja
pop
pop
mov
mov
stos
movsl
jne
lret
xchg
jmp
cwtl
cmp
lds
mov
sub
or
lock
xchg
and
lock
or
mov
pop
arpl
int
mov
xchg
sbb
shrb
push
inc
mov
pop
ljmp
pusha
loop
rorl
xor
fcoms
xchg
lcall
stos
shlb
lods
lods
jae
jo
les
push
out
inc
jbe
sbb
fldcw
call
dec
mov
add
lahf
push
test
dec
pop
add
dec
mov
pop
or
dec
inc
sbb
inc
jns
xlat
or
sub
mov
cmp
inc
ljmp
push
call
cmp
into
pusha
cmc
xor
je
aaa
aaa
jne
scas
jno
rol
int
insl
mov
jp
push
stos
fists
sbb
pop
adc
scas
xchg
cmp
xor
jb
mov
test
imulb
fwait
ret
jb
sub
xchg
cs
pop
movsl
dec
push
sbb
sti
cltd
cwtl
lds
dec
call
fisubs
dec
pushf
jge
shll
enter
cmp
lock
popf
aaa
push
imul
jno
jae
push
mov
xorb
insl
xorb
sbb
inc
addr16
push
adc
rolb
into
scas
push
test
mov
jmp
xor
cmp
out
and
aaa
dec
and
hlt
lock
jge
inc
push
arpl
sub
fisttps
and
and
sbb
xchg
adc
cs
add
push
jmp
push
lcall
leave
testl
xchg
leave
mov
bound
xor
popf
fnstsw
jbe
hlt
mov
imul
nop
cmpsb
push
pop
std
jge
mov
js
dec
mov
inc
or
sub
je
movsl
outsl
push
sbb
cld
jns
ja
push
cltd
ss
pop
testb
mov
xchg
push
jl
mov
jge
mov
std
pop
movsb
je
inc
fcomps
cmp
and
imul
cmp
fsubrs
test
and
inc
pop
lods
xchg
xchg
inc
es
pop
enter
outsb
push
stos
insb
jae
lds
loope
lock
or
dec
or
mov
xchg
or
adcl
or
ss
les
stos
loop
and
jecxz
fs
aam
inc
adc
dec
gs
xlat
std
fcompl
clc
dec
xor
jecxz
push
test
cmp
cmpb
jb
daa
subb
lods
xor
xor
jne
mov
fisttpl
mov
and
ljmp
mov
fcmovnb
in
cmc
adc
lret
leave
pop
fwait
arpl
das
lea
mov
and
sbb
jae
popf
aas
jnp
in
jp
mov
add
xchg
pop
insl
mov
xchg
xor
inc
jg,pn
xchg
cli
mov
cmp
mov
pop
sub
cs
xchg
popa
jg
push
and
aaa
inc
or
pusha
in
push
dec
enter
ret
xor
jo
fdivrl
inc
in
cltd
aam
push
mov
sahf
cmp
fsubrp
pop
outsb
push
shll
mov
and
in
pop
lret
sbb
xlat
movsb
ret
fildl
outsb
pop
es
lcall
inc
push
or
xor
rclb
pop
xor
pop
mov
push
sbb
jmp
sbb
cmp
sbb
movsb
test
cmp
push
adc
mov
and
repz
cli
pop
mov
xchg
jmp
fs
dec
add
stos
enter
test
sbb
jne
aas
hlt
sub
outsb
lock
jg
push
lret
aad
inc
sti
push
cmpsb
movsl
in
jnp
adc
pop
sti
mov
hlt
cmp
test
jge
dec
push
and
int3
mov
add
mov
xchg
insb
mov
aas
outsl
add
cli
lret
xlat
bnd
ret
jle
push
fisttpl
jge
stos
ret
inc
xchg
xor
add
out
adc
sub
imul
xchg
pusha
fiaddl
mov
mov
jb
xchg
mov
jns
test
lahf
outsb
incb
xchg
sub
stc
imul
data16
shl
and
or
lods
add
sbb
lock
pop
out
jbe
mov
je
mov
sbbl
repnz
in
add
test
cwtl
and
lods
fs
mov
or
out
repnz
cmp
xchg
and
xorl
icebp
dec
fmul
cmp
in
fwait
jns
outsb
and
arpl
out
jecxz
mov
jp
jns
std
mov
aam
mov
xchg
cmpsb
pop
shll
fwait
pop
pop
stos
inc
sub
sbb
cmp
out
test
ret
pushf
sub
test
or
xor
andb
mov
mov
cmpsb
stos
xchg
adc
sbb
pop
adc
xor
sbb
dec
jle
mov
cli
mov
jno
inc
gs
pop
mov
xchg
cwtl
shll
mov
jne
xor
cmpsl
mov
out
sbb
andb
into
jmp
mov
pusha
loope
adc
addr16
movsb
jl
popf
xor
adc
pop
mov
cltd
jp
stos
mov
pop
ret
sbb
lret
push
xchg
push
clc
push
fdivs
data16
dec
pop
sub
fsubl
xchg
dec
rcll
sahf
popf
jae
and
pop
jbe
mov
or
nop
xor
cmp
lret
jo
hlt
adc
sti
push
inc
insl
cld
add
xchg
jge
add
xorb
mov
out
push
inc
ret
lods
cmc
imull
dec
test
movsl
push
leave
mov
js
lods
and
dec
lret
fistpl
std
xor
outsb
mov
mov
mov
xlat
jae
orb
mov
pop
lock
xchg
aad
mov
cmp
ret
cs
sbb
stc
jge
push
mov
dec
and
dec
pushf
pop
adc
in
sbb
ds
sti
xor
xor
dec
inc
mov
cwtl
cmpb
into
pop
cwtl
jmp
roll
inc
test
fucomp
push
jmp
data16
mov
adc
lret
mov
cmc
out
and
punpckhbw
cmp
adc
std
js
into
mov
mov
inc
mov
mov
cmp
leave
push
js
adc
mov
add
sub
xor
mov
push
jecxz
add
pop
or
ret
pop
insb
cmpsl
push
out
mov
gs
inc
ss
inc
xchg
out
test
sub
push
sub
xchg
int3
icebp
push
inc
push
xchg
fldt
adc
test
hlt
add
loopne
pop
mov
mov
cmp
ja
ret
xchg
shlb
push
xor
xor
inc
adc
mov
popa
push
xor
clc
jae
cmpsb
in
pop
scas
dec
push
sbb
fwait
aas
and
xlat
xor
andl
adc
sub
insl
mov
stc
les
rcrb
cwtl
outsb
dec
into
mov
cpuid
enter
cmpsl
in
push
xchg
stos
call
xchg
outsb
push
cmc
cmp
outsb
test
dec
rcll
jo,pn
cwtl
in
out
test
xchg
dec
xchg
inc
push
sbb
inc
rol
mov
xchg
cmc
dec
out
fidivs
ljmp
mov
imul
push
movsb
jle
jb
sbb
jmp
or
std
sahf
sarb
add
scas
aaa
pop
inc
jo
lods
lods
sti
sbb
outsb
inc
fs
divb
lea
movsb
pop
psubusb
or
push
bound
lock
jns
ljmp
mov
outsl
iret
jmp
in
mov
or
sbb
aad
das
push
mov
jp
lret
dec
popf
push
inc
mov
dec
cmpsb
and
fldl2t
sarb
mov
outsb
mov
fisubrl
jl
daa
cmpsb
decb
push
pushf
loopne
insb
clc
cs
fwait
xor
xchg
mov
sub
retw
imul
lahf
dec
sub
mov
ficoms
jp
jae
mov
cmp
pop
mov
pop
jbe
xor
in
les
or
dec
inc
xchg
jmp
loopne
iret
stc
imul
mov
inc
mov
pop
dec
jbe
sub
daa
fs
jge
mov
mov
inc
adc
daa
test
data16
xor
lock
shl
cmpsb
lea
push
and
mov
popf
hlt
xor
pop
adc
push
pop
sahf
jns
repz
sbb
cmp
jle
shr
xchg
pop
jecxz
and
cmc
gs
mov
jge
arpl
mov
ss
pop
xchg
and
inc
push
and
sbb
sarb
out
add
push
stc
mov
ss
mov
mov
fistpll
push
jbe
xor
setns
jbe
stc
and
sbb
fst
xor
xchg
outsl
adc
mov
pop
dec
ficoms
loopne,pt
adc
mov
sbb
pop
sbb
fcomp
leave
shll
pop
aad
idivb
data16
cmpsl
jmp
pop
iret
mov
inc
mov
push
mov
loope
pop
xor
dec
lods
pusha
frstor
mov
pop
movups
test
jl
inc
fwait
mov
jne
cmp
lock
fldl
mov
cmc
xor
pop
leave
jg
pop
popa
sahf
dec
adc
mov
loope
sub
inc
xor
xor
and
dec
and
push
pop
push
mov
out
aad
ljmp
mov
mov
push
and
pusha
loop
push
loope
cs
insl
dec
leave
cmp
cmp
ja
cmp
out
dec
jp
vpavgw
sub
or
sub
inc
ret
adc
ljmp
test
pushf
pop
dec
xor
insb
or
negb
xor
mov
xor
jb
add
sbb
and
enter
incb
out
xchg
pop
jb
jne
lods
daa
mov
add
and
jmp
sub
shrl
dec
mov
jmp
inc
imul
push
pusha
or
jmp
inc
inc
xor
xchg
sbb
fisubrl
sub
push
in
cld
lea
cmp
in
das
rcrb
xchg
lahf
loope
scas
data16
enter
xchg
sbb
xchg
out
cmp
adcb
sbb
and
std
cmp
mov
int3
aas
mov
mov
ret
pop
bnd
lret
in
mov
xor
cwtl
xor
scas
dec
decb
mov
inc
hlt
xlat
std
in
pop
push
jle
dec
jl
inc
ja
push
jnp
push
mov
jno
cvttps2pi
push
push
push
imul
clc
popf
fmuls
fwait
stc
sub
pop
dec
jp
loop
cwtl
mov
scas
adc
jae
mov
bound
push
mov
ret
test
jne
pushf
pop
mov
and
jns
sbb
xor
mov
mov
pusha
int3
jg
jle
pop
sbb
pop
lods
nopl
xchg
insb
push
nop
pop
je
pop
cmp
outsb
dec
lcall
int3
xchg
mov
mov
std
jmp
fwait
ja
lret
mov
xchg
mov
dec
out
cmc
cmpl
pop
push
jg
int
lods
sbb
inc
mov
xchg
iret
mov
jecxz
mov
xlat
inc
pop
and
inc
aaa
jmp
insb
enter
repnz
stc
imul
icebp
mov
dec
mov
sar
mov
pop
push
push
sbb
sbb
int
popa
rcrb
fistpll
sbb
in
leave
push
fisttpll
adc
int
mov
lahf
cmp
pop
insb
ljmp
jge
lods
sti
inc
test
cs
movsl
sub
jmp
pop
push
adc
push
xchg
xlat
sub
xor
xor
mov
cmp
push
sbb
mov
or
scas
loopne
push
add
cmp
es
sub
outsl
xor
pop
stos
inc
pop
mov
xchg
shlb
sarb
mov
add
movsb
js
sub
and
fcomip
je
int3
cmp
mov
cmp
xorb
or
divb
daa
aaa
push
icebp
jnp
pop
ja
jae
add
add
jbe
jp
jne
out
adc
das
mov
lea
hlt
mov
dec
inc
sbb
fnstenv
push
data16
jns
addr16
gs
pop
cli
ret
ds
lret
mov
sub
mov
es
add
lds
loope
test
jmp
push
scas
outsl
xchg
adc
push
xor
fdivl
push
cmp
loop
shrb
fldt
movsl
xchg
fldenv
out
push
xor
adc
cltd
fnstcw
xchg
or
and
add
orpd
lahf
adc
sub
movsb
xorb
xchg
mov
stos
xchg
xlat
adc
rol
into
push
jno
mov
mov
inc
fidivs
adc
push
adc
in
out
sub
stc
sbb
add
dec
outsl
mov
inc
es
mov
into
outsl
jns
subb
xor
gs
add
lock
imul
sahf
loop
shl
sub
hlt
insl
cltd
sti
stos
test
into
mov
inc
add
in
adc
in
cmpsb
dec
lods
stos
mov
mov
push
out
jne
imulb
clc
fstl
and
jbe
xchg
pop
dec
enter
shrb
fwait
sbb
xchg
popf
add
stc
enter
cmp
arpl
into
dec
sub
call
cs
loop
push
imul
adc
dec
rcl
cmpsl
call
jae
jmp
mov
out
in
inc
dec
mov
mov
cld
mov
stos
mov
sbb
fstl
mov
sbb
fistps
lods
push
jnp
dec
sub
push
test
sbb
in
jmp
clc
loope
fs
push
inc
fistps
rorl
mov
sub
or
adc
jl
add
inc
mov
mov
sbb
pop
mov
mov
mov
cs
mov
mov
js
inc
mov
inc
cli
in
xchg
std
push
icebp
into
pop
insl
out
xchg
pop
lret
or
cld
in
rcrb
les
les
in
push
sbb
mov
mov
or
bound
int3
std
shlb
in
dec
inc
imul
mov
mov
loopne
mov
ret
outsl
adc
leave
hlt
or
jg
enter
aas
or
sbb
jl
cmc
cmp
adc
and
pop
mov
punpckldq
fs
int
jnp
mov
pusha
subb
fidivrs
je
lock
insb
pop
xchg
insl
push
fbstp
fstl
jmp
in
fisubrs
stos
jbe
loope
xor
and
jo
popl
stos
test
dec
and
inc
pop
push
push
in
jne
mov
pusha
adc
mov
mov
int3
xor
and
daa
or
sbb
sbb
mov
je
pop
insl
fistpl
push
rorl
lods
int
clc
dec
popa
bnd
pop
scas
push
and
adc
notl
xor
dec
aaa
cmp
lcall
or
or
shll
and
and
jp
fimull
dec
mov
dec
sub
sub
mov
or
push
xor
addr16
jp
es
xor
sbbl
ds
sarb
insb
xchg
sub
add
out
jle
ret
dec
jne
subl
cmp
adc
dec
addr16
mov
shll
or
xor
jae
dec
sub
mov
pop
jno
jnp
ja
and
rcrl
rcl
pop
and
lds
jb
push
jmp
lods
int
jno
gs
cmpsl
mov
dec
ret
mov
mov
ret
xchg
mov
sbb
movsl
fcoms
mov
addl
scas
xchg
sahf
shlb
gs
out
adc
iret
xor
xor
fcompl
or
das
loop
data16
xlat
aam
icebp
cmpl
rorb
mov
lock
inc
jg
push
out
in
psrad
ljmp
add
xorl
jp
daa
imul
push
bound
shl
add
movsl
add
adc
iret
out
outsl
test
stos
or
fwait
sbb
loope
rorl
and
fidivl
and
insb
insb
icebp
add
cmp
xchg
or
or
sub
sub
adc
add
lea
adc
cwtl
cmc
in
lret
out
jo
test
and
mov
xchg
pusha
mov
movsl
out
inc
and
es
xchg
rorb
aas
fimuls
push
push
mov
in
lods
pop
xchg
or
test
iret
lds
push
in
or
in
loop
adc
push
dec
imul
sub
addr16
lock
and
std
xchg
sbb
inc
mov
inc
or
imul
mov
fimuls
pop
inc
pop
push
ja
mov
adc
pop
bound
mov
lret
mov
sbb
jl
mov
hlt
sbb
insl
repnz
jo
or
pop
push
add
xchg
aam
cmp
sub
sbb
movsl
imul
add
pop
mov
push
dec
insb
lock
ds
int3
push
pushf
push
andl
push
outsb
dec
or
pop
push
mov
outsb
repz
xchg
cwtl
and
sbb
xor
fs
je
and
and
mov
mov
fstl
sub
mov
ja
sub
and
jl
sahf
xchg
add
sub
shlb
cmp
xchg
dec
jmp
popf
leave
lods
pushf
fldenv
sub
enter
and
xchg
dec
nop
inc
sub
cmp
push
pop
cmpsl
incb
inc
adcb
lcall
push
cmp
xor
jp
add
pop
int3
les
pop
sub
sbb
xor
and
shll
dec
mov
fst
cwtl
push
cld
sbb
sti
lock
pop
test
xchg
mov
dec
add
push
loopne
cmp
add
cmc
xchg
stos
mov
xor
notl
sbb
out
inc
shll
ss
lret
inc
int3
xchg
subb
test
bound
popf
fisubl
std
test
xchg
imulb
das
or
pusha
jg
repnz
ret
ret
imul
or
push
dec
sbb
sbb
add
imul
and
fnstsw
push
xchg
loope
daa
int
scas
sub
or
dec
push
xchg
push
flds
mov
lds
adcb
ds
adc
stos
int3
icebp
or
out
mov
xchg
mov
cwtl
push
out
addr16
out
cmp
inc
push
inc
jp
pop
ds
leave
test
adc
adc
jno
insl
xchg
aad
jno
sarl
push
cmp
leave
stos
pop
cmpsb
inc
jmp
aad
or
dec
inc
out
xchg
dec
cmc
jecxz
xchg
movsl
stc
pop
ja
into
lahf
daa
jl
mov
pop
push
xor
or
sbb
pusha
ret
jl
xchg
mov
mov
xor
aad
pop
shrl
lahf
jp
cmp
sbb
lahf
jno
push
cmp
push
cs
outsb
add
shl
pushf
sbb
push
cmpsb
fwait
loope
shr
dec
and
mov
ret
jne
adc
pusha
cmp
adc
mov
jmp
lods
adc
cmpsl
aas
ds
xor
fwait
jno
xor
bound
xchg
cmpsl
bound
dec
cwtl
or
into
jp
push
xor
inc
sub
andb
jo
mov
inc
xlat
jns
jne
hlt
or
out
aas
in
scas
add
subb
cmpsb
lock
test
jno
repnz
push
lods
rcrb
adc
pop
icebp
call
adc
stos
add
loope
or
cmc
rolb
mov
mov
adc
fcoml
ss
insl
es
dec
repnz
and
stos
shlb
hlt
aas
cs
mov
and
sub
xchg
xor
mov
mov
cli
ret
jb
mov
testb
or
push
inc
rcll
add
lret
pop
mov
adc
jae
in
mov
mov
add
mov
or
or
mov
adc
inc
sbb
insb
sbb
dec
mov
ss
add
lcall
aaa
out
inc
lods
clc
lods
ja
adc
stc
shlb
pop
imul
jb
fcmove
cmp
ljmp
push
int3
xchg
mov
fdivrs
lret
aam
jl
pop
inc
cwtl
dec
mov
push
iret
cmp
cmp
adc
mov
popf
in
mov
in
fdivl
rcr
pop
in
aaa
int
inc
sahf
add
adcl
mov
xchg
inc
movsb
popa
daa
stos
push
ds
inc
jmp
into
cmpsb
mov
sbb
lret
in
dec
hlt
push
dec
and
popf
xchg
and
push
mov
aas
dec
push
pusha
negl
shlb
mov
nop
insl
repz
imul
int
dec
xchg
dec
pop
adc
pop
push
add
dec
roll
xchg
bound
pusha
inc
adcb
sub
cmp
pop
fldt
inc
shlb
sub
icebp
mov
ljmp
pop
fwait
jnp
loope
rcll
jp
fisubrl
test
sbb
mov
push
andb
xchg
pop
mov
popa
sete
popa
xor
call
push
jnp
sbb
push
push
jl
inc
xchg
das
sbb
add
xchg
imul
xchg
outsl
sbb
scas
dec
push
mov
sub
xor
testl
xchg
movb
int3
push
je
inc
xor
je
mov
roll
push
jne
lret
xchg
bnd
outsl
jmp
loop
clc
scas
test
scas
push
stos
xchg
mov
enter
push
cmpsl
add
inc
jmp
jb
out
int3
out
push
xchg
shll
cmp
pop
cmp
call
rcrb
mov
pop
sub
jae
lds
xchg
lcall
enter
and
sub
in
or
dec
mov
mov
add
in
adc
test
fs
into
gs
bound
loop
cs
jbe
cmp
cwtl
jmp
or
and
push
subb
inc
xlat
daa
mov
push
sbb
or
push
push
jl
xchg
inc
movsl
pop
adc
les
xor
mov
xor
mov
notl
sbb
out
pop
xor
repz
hlt
hlt
roll
push
push
aaa
push
in
shlb
jmp
push
arpl
sbb
and
in
pop
or
outsl
adc
or
rol
cmp
pop
test
orb
repz
bound
clc
fists
pop
add
dec
pop
and
push
jo
shrl
add
lahf
lret
pop
sar
cmpsb
jns
in
gs
xchg
fnstsw
dec
data16
fidivrs
das
mov
pop
pop
aam
imull
cmpsb
add
xor
movsb
rorb
pop
push
rcl
je
lea
andb
dec
mov
out
xchg
les
jg
test
dec
rcr
sub
add
lret
add
outsl
push
leave
rclb
mov
pushf
imul
fs
adc
push
xchg
in
jns
popa
add
mov
cs
jle
push
scas
dec
test
mov
push
sbb
iret
aam
fdivp
jp
push
mov
xor
dec
das
mov
push
aaa
mov
iret
mov
lret
enter
mov
ret
xchg
imul
cmpsb
scas
out
mov
dec
ja
dec
inc
adc
je
popa
push
dec
adc
push
insl
cmpsb
jno
adc
mov
lods
popf
mov
push
aaa
cmp
pop
push
popa
sbb
daa
enter
xlat
pop
jl
ja
lock
call
aaa
pop
and
cmpb
shr
adc
mov
push
push
fs
push
jno
les
push
cmp
push
xor
or
adc
sbb
mov
push
and
push
xorb
insb
pop
mov
mov
ds
add
stos
dec
jle
cld
and
cmpsl
hlt
arpl
sahf
lea
andl
dec
sub
hlt
jnp
pusha
in
sbb
mov
leave
mov
lret
cmp
pop
cmp
out
divl
push
jp
sbb
aam
iret
pop
jge
int3
mov
notl
lods
lods
outsb
mov
data16
popf
sbb
inc
lods
mov
dec
leave
pusha
scas
es
mov
clc
insl
in
pusha
fsubrs
mov
test
orb
push
les
aas
sbb
shlb
stos
ljmp
cmpsb
pop
add
pop
aad
inc
xchg
cmp
jmp
rep
jns
jg
sbb
mov
mov
nop
out
insb
sub
xor
cltd
xor
lcall
mov
ficoml
sub
jne
and
mov
test
outsl
lcall
push
dec
in
fistps
and
lea
mov
xor
dec
out
or
sbb
jbe
js
xlat
fstpl
ret
adc
mov
add
xor
out
xchg
jno
pop
test
push
mov
mov
mov
fs
ret
stc
and
jne
ljmp
push
rorb
nop
dec
lock
daa
ljmp
xchg
xor
daa
sub
jmp
mov
lahf
jo
rorb
jo
mov
fmuls
rol
and
sbb
rcl
adc
mov
sub
idivb
outsb
jno
sahf
cmpsl
into
jno
sub
cltd
mov
arpl
adc
mov
arpl
ret
lds
das
inc
test
mov
pushf
out
mulb
add
scas
subb
mov
xorl
daa
xor
fisubs
fildl
jo
dec
lods
inc
cmpsl
pop
jecxz
test
dec
frstor
rorb
sub
jne
ds
gs
filds
and
jp
insb
pop
cmc
mov
lods
pop
rcrl
jne
sbb
scas
inc
scas
imul
adc
dec
jae
test
inc
mov
in
jge
rcl
push
sub
stc
adc
inc
clc
data16
jns
sbb
push
outsl
fwait
test
jmp
dec
std
pop
clc
add
mov
outsl
mov
add
mulb
jl
sbb
js
cmpsl
pop
pop
mov
rcrb
pushf
pushl
xor
aad
pushf
in
sbb
cmp
js,pn
cmp
and
iret
dec
or
mov
arpl
jne
pushf
es
addb
jge
inc
push
icebp
int3
addr16
testb
sbb
sub
push
jne
rolb
or
push
add
sub
xchg
dec
lahf
jecxz
aad
adc
sbb
test
mov
leave
dec
pop
int
xchg
push
movsl
aaa
mov
jo
insl
cmp
cmp
shlb
mov
sbb
loop
daa
jae
sub
sti
cmpsb
ja
dec
divl
pusha
pop
xchg
push
sub
mov
xor
dec
std
xor
pop
push
xchg
test
mov
outsl
mov
sbb
adc
roll
scas
jns
sti
or
dec
rclb
mov
scas
jl
in
rcrb
sbb
pop
into
lcall
inc
stos
ficompl
loop
out
in
dec
ficomps
pop
jmp
mov
lea
mov
xchg
xchg
enter
sbb
fwait
sub
je
push
mov
jo
js
ss
aaa
inc
sahf
rcrb
mov
adc
add
mov
pop
push
xor
fs
sbb
mov
xchg
and
repnz
iret
mov
repz
repz
jno
mov
popa
xlat
stos
sbb
or
outsb
xchg
lret
lods
push
movsb
or
daa
repz
mov
out
fwait
ret
inc
xchg
dec
pop
call
rcr
mov
mov
inc
inc
lret
cld
jb
jo
vmwrite
push
je
imulb
sbb
mov
jns
movsb
shrl
cmpsl
jmp
pop
jo
sub
rorl
jmp
int3
sub
mov
fwait
push
dec
dec
lods
clc
fsubrs
adcl
or
sbb
sbb
sub
ja
scas
ja
aaa
xor
outsb
push
sbb
pop
lret
mov
hlt
or
insl
mov
icebp
int3
out
pop
movsb
jnp
push
outsb
ret
jge
xchg
sahf
divl
popa
fistps
pop
sub
lock
jnp
cmp
test
push
out
addr16
jge
in
cld
lret
insl
sbb
cmpsl
jl
xchg
insl
popf
leave
fisubrl
out
mov
pop
pop
dec
imul
imul
inc
sahf
pop
mov
fstpl
cmc
mov
mov
sbb
pop
and
iret
mov
gs
jae
push
mov
mov
push
mov
data16
add
xchg
repnz
sysret
inc
call
and
or
stos
lret
insl
repz
sbb
pop
push
orb
and
jbe
or
jmp
out
or
clc
inc
nop
scas
xchg
fdivs
inc
mov
pop
fcoml
cmp
jl
rol
out
and
test
inc
fldenv
in
pop
les
jecxz
mov
jo
testl
cmp
push
xor
pushf
imul
in
repz
mov
gs
insb
out
enter
mov
xorl
clc
mov
jne
xor
call
jmp
fucomi
sbb
cmc
inc
decb
les
nop
push
fisubrl
into
fs
jo
jnp
and
dec
ljmp
cwtl
adc
cltd
mov
mov
aam
xor
sbb
dec
rclb
and
cmp
lcall
xlat
dec
push
mov
xchg
fcoms
mov
mov
adc
bound
dec
test
mov
add
aaa
hlt
jg
jne
push
lods
call
pop
aam
cmp
js
and
stos
dec
jecxz
cmp
movsl
in
and
or
lcall
xchg
xor
and
pop
and
shrl
or
lret
jg
mov
fstpl
addr16
pushf
push
push
mov
bound
mov
sbb
xor
in
mov
in
push
xchg
stos
mov
imul
and
cmp
push
pop
leave
mov
fwait
call
mov
test
inc
sbb
test
outsb
push
popf
cmpsl
sbb
mov
dec
push
jg
push
and
fdivs
pop
addb
mov
xor
adc
mov
push
inc
fistl
scas
inc
lock
std
imul
sub
or
and
xchg
mov
movsl
push
outsl
jno
jo
adc
cmp
push
ja
sbb
test
sbb
xchg
xor
cmc
push
iret
pop
sbb
push
icebp
out
sub
bound
xor
or
xor
popa
inc
dec
fwait
push
outsl
bound
push
or
xchg
mov
jl
or
xchg
dec
fs
loop
lods
pop
sbb
pop
or
shlb
cmc
xchg
mov
push
jbe
mov
enter
pop
jle
ljmp
aaa
lret
pop
or
jbe
sub
repnz
sbb
dec
jbe
pop
mov
and
adc
fistl
jl
rorl
push
dec
sub
imul
fiaddl
mov
movsl
mov
cltd
mov
ja
mov
pushf
orb
shl
pushf
xchg
or
out
dec
mov
iret
xchg
push
push
in
push
clc
sbb
mov
xor
xor
add
cli
dec
xor
imul
in
add
addb
int3
jp
fcomps
pop
push
gs
and
dec
nop
adc
fidivrs
push
lahf
jecxz
xor
js
outsl
mov
adc
insl
cmp
or
aam
or
outsb
sbb
pop
add
mov
mov
jge
inc
jbe
cmpsl
inc
pop
jne
pop
mov
movsl
scas
mov
test
jg
je
jmp
inc
insb
add
push
cltd
or
sti
mov
mov
add
int3
cli
pop
adc
push
mov
xor
pop
push
testl
les
nop
jne
and
inc
adc
cs
push
js
push
sub
addr16
aam
test
mov
xor
popa
push
scas
sub
dec
pop
mov
inc
rcll
movups
call
mov
ja
pop
enter
push
jmp
jmp
stc
mov
pop
ja
or
pop
pop
pop
lret
sbb
xchg
lcall
jle
and
xor
sti
cmp
xchg
mov
cmp
pop
adc
repz
and
jnp
lcall
inc
pop
insl
cmp
or
sub
jmp
lea
sub
movsb
sahf
mov
insl
xchg
shlb
cmc
xchg
add
and
mov
or
mov
scas
fdivrs
pop
dec
dec
sub
mov
ljmp
pop
and
pusha
xchg
mov
xor
lret
and
lret
adc
fs
dec
mov
in
insb
jle
ficoml
add
jmp
std
outsb
cmp
insl
push
sub
imul
sub
in
add
fmull
icebp
jnp
adc
sub
stos
addb
das
mov
jne
pusha
fistpll
xchg
xchg
cmpb
sahf
repz
rorl
mov
cmp
and
xlat
dec
pop
dec
ret
jo
mov
roll
inc
mov
add
lret
cld
xor
pop
stos
mov
insl
jecxz
inc
insb
inc
xor
addb
sbb
dec
pop
or
pop
sub
adc
lea
in
dec
stos
dec
es
lock
push
cmpsl
sbb
fistpll
cmp
mov
mov
pop
mov
addr16
mov
sub
and
jg
cmc
pop
pop
sahf
xor
adc
fildll
pop
pop
lods
ja
mov
in
ret
ljmp
push
out
add
jg
mov
mov
scas
inc
dec
mov
stc
add
mov
gs
mov
ret
js
push
in
daa
mov
jmp
test
das
mov
xchg
repz
mov
pop
scas
test
bound
fisubrl
mov
xchg
add
adc
ret
mov
mov
pop
push
push
ljmp
adc
xchg
lret
shrb
push
xchg
cmc
push
bound
xlat
and
push
inc
out
outsl
adc
xor
inc
and
movsl
fistps
inc
mov
xor
iret
mov
mov
pop
adc
sub
pop
inc
cmp
cmpsb
inc
cli
inc
lret
fiadds
cmp
rcrl
ret
jl
insb
inc
testb
xor
mov
jmp
outsb
and
out
mov
sbbl
mov
jp
cmc
testb
dec
or
ss
jmp
cld
cmp
dec
mov
shll
sbb
cmp
addr16
pop
int3
cmp
sub
adc
shrl
scas
stc
cmp
in
into
movsb
stos
xor
shlb
or
loope
jp
les
ja
pop
jb
dec
loope
xchg
sub
xor
idivl
into
push
rcl
mov
cld
xchg
pushf
xchg
pop
cwtl
xchg
cmp
push
orb
sti
jne
mov
pop
cwtl
notl
fisubl
or
cs
mov
shlb
scas
rorb
sbb
mov
inc
stc
sub
jb
mov
mov
pop
lret
lcall
aas
test
fs
outsb
std
push
mov
mov
ret
xor
xchg
mov
outsl
pop
pop
and
pop
mov
and
sub
and
in
rclb
mov
or
pop
jb
ss
adc
jmp
imul
mov
xchg
mov
shlb
pop
mov
aam
dec
mov
lcall
and
movsb
dec
sub
popa
dec
xchg
ss
sub
mov
pop
sub
pushf
outsl
pushf
out
out
xchg
and
cmpl
addb
mov
enter
inc
sub
incl
sbb
and
out
add
mov
xchg
push
mov
and
cmp
jo
mov
pop
inc
xor
add
mov
das
aas
shll
sub
cmp
loop
insb
arpl
pusha
into
dec
enter
mov
xor
push
push
dec
dec
cltd
dec
cwtl
and
add
push
and
mov
mov
add
nop
sub
push
scas
mov
sbb
add
inc
cmpsl
incb
xchg
push
and
and
cli
fs
dec
shlb
push
mov
nop
out
out
push
out
loop
int
fistpll
loopne
popf
es
shl
xchg
push
cli
jnp
xchg
and
jb
sbb
leave
dec
es
sub
inc
adc
testb
cmp
inc
lea
pop
js
mov
test
dec
movsl
xchg
xor
arpl
pushf
inc
movsl
cld
test
sub
icebp
mov
mov
mov
lods
mov
imull
scas
push
add
leave
pusha
push
or
pop
sbb
cli
jp
pop
jmp
jns
icebp
and
clc
ficomps
xchg
mov
pop
or
clc
lods
push
xchg
out
scas
jmp
pop
repz
fstps
lods
movsb
cmpb
aad
mov
fisubrs
push
enter
repnz
dec
test
xchg
lock
inc
pusha
xchg
jb
shl
insb
mov
outsb
addb
pushf
xchg
fs
push
in
out
fs
cs
sub
imul
sub
jmp
xlat
xorps
nop
cli
mov
mov
jge
sbb
iret
jno
scas
push
lahf
dec
mov
popf
sub
or
out
jg
adc
scas
fbstp
sti
jmp
cmpsl
addr16
inc
push
inc
ljmp
push
repnz
sub
jp
xlat
adc
fucomip
fyl2x
inc
imul
dec
inc
clc
push
loop
mov
push
mov
push
stos
jp
ret
inc
pop
pushf
addps
jno
push
les
jl
aad
jle
pop
xor
out
sbb
and
pushf
daa
out
sbb
arpl
mov
push
popa
sub
enter
ret
mov
movsb
mov
inc
sti
jmp
xchg
adc
sub
or
and
sbb
cld
in
sbb
cmc
inc
les
enter
mov
cmp
cwtl
rcrb
sub
cmp
or
mov
mov
roll
add
out
cltd
sbb
fs
stos
pop
jecxz
dec
push
and
xlat
fbstp
adcb
das
out
out
ljmp
int3
arpl
mov
lret
xor
inc
bound
nop
btr
or
push
mov
dec
fildl
lret
cmp
addr16
mov
mov
jnp
loop
in
xchg
js
dec
sub
rsqrtps
add
or
lods
cmp
sti
pop
dec
lcall
mov
aaa
and
mov
imul
adcb
dec
jno
sub
mov
psrlq
mov
jo
add
aaa
or
xchg
xchg
sbb
push
sub
cld
cmp
out
ret
pop
in
xor
xchg
aam
pop
rorl
stos
push
int3
add
negb
into
ficoml
mov
sub
mov
cmp
xchg
jbe
mov
dec
clc
mov
jge
in
dec
sub
dec
pop
inc
cmp
ja
mov
adc
pop
adc
iret
les
scas
in
jo
repnz
sahf
jg
aad
xor
cmovo
in
mov
sahf
aaa
loope
mov
bound
addr16
sub
cmpl
cmp
jbe
adc
notl
pop
in
jp
push
lcall
mov
mov
mov
insb
pop
lea
in
jmp
lahf
test
cltd
inc
scas
inc
mov
or
or
fistl
mov
ret
pop
movsb
mov
dec
popa
in
xor
gs
aaa
pop
cmp
jo
aas
test
cmpsb
mov
test
ja
lret
mov
dec
pusha
or
inc
std
aaa
jno
xchg
sub
mov
push
fbstp
xor
and
sarb
cwtl
push
xor
mov
dec
in
cmp
popf
fstpl
imul
cmp
adc
push
insl
mov
jp
mov
es
pop
mov
add
lock
aam
or
push
inc
jno
fdivrl
in
adcl
add
mov
fistps
and
nop
cmp
inc
es
sub
bound
push
xchg
rcll
or
icebp
int3
mov
dec
inc
push
mov
pop
shlb
enter
int3
inc
lea
mov
inc
add
and
js
xor
js
adc
das
cmp
or
xor
daa
in
fwait
add
mov
call
cwtl
and
mov
sarl
adc
dec
leave
xchg
movsl
mov
xrelease
xor
inc
adc
xchg
adc
pusha
fisttps
cmp
into
push
xchg
in
dec
imul
jge
call
mov
pop
push
data16
push
mov
mov
jne
sub
xor
out
pop
xchg
pushf
test
mov
pop
aaa
mov
in
cmp
dec
lcall
cltd
dec
mov
int
hlt
adc
out
int
ret
fcomp
in
add
daa
pop
mov
mov
outsb
mov
insb
popa
add
es
icebp
clc
inc
scas
push
push
mov
inc
popf
or
ret
sub
xchg
ljmp
add
xchg
cmp
xlat
btr
dec
jmp
mov
aam
movsb
mov
mov
pop
add
frstor
cmp
sarl
std
dec
es
aad
adc
mov
fadds
dec
mov
arpl
mov
xlat
xchg
dec
sbb
iret
pop
cmp
imul
scas
fwait
lea
cmp
inc
pop
cli
push
lret
dec
or
sbb
scas
iret
adc
add
mov
xchg
mov
jae
pop
outsl
sub
scas
nop
or
int3
repz
jecxz
fwait
push
int3
aaa
lods
xlat
inc
rol
mov
and
incl
notl
inc
pop
inc
jbe
push
pushf
sahf
and
fidivs
and
mov
xchg
jb
jg
shl
out
je
mov
adc
xor
push
jb
inc
dec
out
pop
sbb
cmp
shr
popa
sub
iret
sbb
pop
mov
mov
mov
pop
mov
out
insl
add
inc
in
inc
insb
jecxz
arpl
pusha
push
outsl
xor
inc
adc
cwtl
imul
or
add
fsts
mov
cmp
insl
fsub
sub
clc
mov
mov
movswl
in
scas
mov
out
mov
loop
sbbb
add
push
pop
mov
adc
outsb
dec
movl
aas
push
das
icebp
test
loop
pop
mov
arpl
add
mov
mov
mov
mov
orl
fildl
cmp
aas
mov
aad
pop
xchg
inc
scas
jp
xchg
xchg
adc
mov
push
jle
mov
jecxz
jno
sub
aas
jns
cmpsl
mov
mov
and
pop
lock
jae
mov
or
xchg
xchg
lcall
jp
push
and
push
cmp
lods
push
sbb
push
arpl
ficomps
test
jecxz
ja
push
push
xor
ja
pop
sub
mov
inc
aas
fsubr
add
rep
loopne
test
adc
fs
xchg
loop
out
dec
add
into
sbb
lods
cmc
sbb
test
dec
cmp
jns
sti
xchg
dec
cmp
mov
lea
mov
hlt
mov
stos
test
jnp
leave
call
adc
test
mov
push
in
loop
ja
outsl
dec
addb
dec
cmpsl
in
arpl
sbb
or
push
fldl
scas
stc
outsb
push
les
out
dec
xor
inc
dec
je
les
leave
test
jno
scas
push
sbb
push
xchg
bound
in
pop
sub
movsb
mov
testl
imul
jo
xchg
push
and
dec
test
shlb
push
inc
and
dec
add
test
decl
fwait
loopne
xchg
stos
pop
pop
movsl
sahf
xor
outsb
inc
dec
movsb
rcll
mov
pop
lret
push
inc
mov
jbe
xchg
adc
push
stos
add
mov
stc
inc
push
sarb
std
add
add
aaa
push
clc
test
push
sub
nop
aaa
sub
adcb
inc
jmp
lret
mov
lds
jp
mov
scas
mov
inc
lret
gs
fcom
out
rcrb
jns
dec
and
xor
aam
insb
int3
rorl
jmp
mov
test
sub
adc
cli
int
pop
int
jnp
adc
mov
xchg
out
xchg
inc
xor
sbbl
push
insb
pop
outsb
sahf
cmc
sbb
pop
nop
cltd
cmc
push
and
jbe
js
sub
cmpsl
inc
pop
mov
addr16
lds
into
xor
jae
arpl
mov
rorl
test
lret
shll
and
pop
xchg
scas
lcall
push
ss
inc
scas
and
cmp
dec
and
stc
push
shlb
xorl
mov
movsb
push
jg
adc
out
les
push
sti
imul
sbb
fbld
sub
jnp
cmpsb
pop
enter
mov
pop
leave
ret
mov
xor
mov
rorb
cmpsl
lds
ret
ja
bound
jmp
out
imul
cmp
pop
mov
mov
aam
add
scas
fnsave
dec
sbb
pop
mov
mov
sub
xchg
popfw
std
ja
dec
or
pushl
or
xlat
daa
push
fmul
hlt
lock
fistps
ja
fldt
adc
cmp
or
loop
dec
jge
jae
lods
xor
pop
mov
or
rcr
pop
pop
pop
out
into
jne
mov
fstl
mov
test
imul
sbb
cmc
outsb
jge
xchg
ds
pusha
cltd
sub
rcr
cmc
das
cwtl
xchg
mov
rcll
gs
les
faddl
pushl
inc
in
loop
ljmp
loopne
pop
bound
arpl
imul
repz
and
test
aad
xor
pop
xchg
insb
lret
test
mov
out
sbb
inc
push
jmp
adc
andl
xchg
fs
add
test
enter
jno
mov
xor
rcrb
push
nop
shrl
repnz
dec
adc
push
nop
adc
jae
imul
cmp
cmp
push
outsl
xchg
sarb
enter
fdiv
mov
sub
mov
movl
xor
lahf
jp
inc
mov
pop
inc
iret
cltd
jg
mov
loope
je
pop
dec
sub
adcl
mov
in
bound
lea
movsb
addr16
mov
es
and
or
adcl
loop
xor
xor
mov
xor
int
xchg
loop
mov
out
jne
jns
push
sbb
inc
divl
xchg
cmp
mov
mov
push
dec
mov
call
adc
inc
pusha
xchg
jmp
lods
int
std
roll
in
nop
and
rcl
imul
in
repz
cltd
and
pop
fadd
dec
push
jp
inc
shlb
and
dec
xchg
dec
add
pop
mov
fidivrs
insb
adc
push
js
aas
aaa
add
xchg
int3
aaa
out
push
out
jns
inc
mov
and
mov
int3
or
jb
dec
mov
lahf
aaa
inc
sti
pop
mov
es
scas
sbb
sarl
fldenv
sbb
es
fisubrl
rolb
rorb
fbstp
out
es
sbb
fdivrl
imul
loope
pop
insb
bound
adcb
jae
das
cld
rdtsc
or
xchg
in
push
leave
jg
loope
inc
in
mov
popa
aad
add
fdivr
add
mov
cs
pop
jmp
iret
mov
sbb
inc
repnz
lret
arpl
add
inc
inc
sbb
cmpb
jg
adc
xchg
cmp
popa
pop
sbb
xor
mov
inc
pop
in
pushf
push
and
outsl
jb
int3
and
repz
add
adc
repz
xchg
andl
inc
sahf
mov
pop
jle
mov
sbb
aam
inc
jl
dec
test
stos
lds
jns
sbbb
lret
outsb
sub
cmpsb
adc
leave
stc
and
fisttpll
adc
into
sti
fsubl
mov
add
arpl
push
cld
pop
mov
lahf
fiadds
popl
sbb
mov
orb
in
lods
pop
test
xlat
and
jp
lock
jnp
inc
fmulp
sub
outsb
add
pushf
lds
mov
mov
enter
hlt
xchg
push
loop
nop
mov
daa
setle
call
pop
push
xor
and
sub
jecxz
sub
mov
ss
or
test
xchg
adc
mov
out
out
sub
rolb
out
pop
cmp
add
xchg
rcll
pushf
movsb
jbe
xchg
xor
into
sub
movsl
dec
es
push
add
jb
into
cmp
add
mov
arpl
dec
mov
push
aas
ficoms
push
js
lods
mov
jmp
clc
lds
inc
sub
fisubl
ds
or
stc
xchg
scas
sbb
out
inc
repz
into
sub
xchg
jne
xor
cli
push
cli
lret
adcb
mov
pop
push
stos
mov
lods
pop
adc
push
pop
cs
add
mov
lcall
and
adc
pop
jmp
fidivs
cltd
mov
and
das
pop
mov
push
cmpsb
stos
icebp
xor
pushf
jmp
mov
jl
pop
xchg
mov
lods
fs
jecxz
and
lret
dec
arpl
mov
pop
cmp
push
dec
cmp
gs
jns
xrelease
or
insl
cmp
mov
push
fimull
adc
jle
xchg
sbb
and
repz
cmp
and
out
jp
xor
popf
push
out
mov
outsl
push
and
sbb
pop
cmpsl
mov
cmp
insb
aas
and
clc
adc
fisttps
sahf
pushf
pop
stos
mov
test
mov
adc
sub
jge
ja
xchg
mov
fdecstp
and
mov
lahf
aas
push
inc
cmp
cwtl
cmp
fisubrl
jecxz
xchg
dec
in
adc
pop
xchg
inc
enter
sub
outsl
fadds
imul
mulb
cltd
inc
mov
sbb
les
xor
fwait
xchg
test
rclb
and
lahf
xor
xor
jecxz
cmp
inc
sbb
xchg
pop
sub
cmp
ds
add
mov
repz
xlat
mov
lds
movsb
fcoms
fsubs
imul
repz
lcall
lcall
jb
push
sarb
inc
loop
shl
stos
enter
fstpl
movsb
dec
cmpsl
in
mov
movsl
cmp
xchg
jle
in
xor
cs
repnz
mov
xchg
pop
ret
xlat
hlt
jecxz
add
sti
sub
inc
cld
inc
sbbb
adc
jg
xor
nop
adc
push
jg
xchg
pop
sbb
sarl
xchg
mov
aad
cmp
outsb
loopne
push
scas
mov
in
fmuls
jns
sbb
into
cmp
sbb
test
jnp
mov
cmp
imul
pop
xor
pop
imul
lret
xchg
adc
jns
stc
pop
sub
iret
push
test
mov
pusha
sub
out
loope
in
sub
cmp
jns
xor
out
mov
enter
out
sti
push
push
pop
dec
or
insl
lock
lock
mov
adc
adc
cmp
and
outsl
xchg
call
fcmovbe
leave
aam
jle
or
mov
mov
test
out
add
lahf
push
fdivrl
add
adc
je
mov
and
lcall
ret
sti
lds
shll
ja
stos
xchg
lods
inc
fs
call
data16
and
idivb
addr16
cli
ficompl
adcb
jp
ret
mov
xchg
andb
cltd
insl
mov
mov
push
lahf
or
lahf
rcll
or
les
inc
sbb
fwait
aam
or
mov
in
js
xchg
and
lcall
cwtl
mov
pushf
stos
mov
or
stos
mov
das
call
movsl
stc
add
les
out
into
adc
push
push
adc
scas
mov
mov
test
repnz
fisttps
pop
mov
in
xchg
bound
sub
shlb
jae
mov
lock
out
pushf
mov
aam
arpl
sbb
cli
push
or
xchg
fmull
insb
popf
pop
cmp
ss
lds
outsb
shr
add
sbb
pushf
push
jge
adc
cmp
push
outsl
das
cs
lret
jp
insl
int
les
mov
into
sbb
lods
mov
cli
mov
mov
lea
pop
dec
leave
pushf
mov
cmp
scas
adc
rolb
xchg
adc
pop
testl
pop
into
std
popf
push
rcl
aaa
bound
ficoml
hlt
movsb
xchg
mov
dec
iret
leave
cltd
inc
mov
adc
sub
les
repz
aam
jns
sbb
pop
in
dec
in
popa
data16
push
ljmp
adc
insb
jmp
pop
stos
pop
pop
or
stos
jle
add
stc
xchg
push
das
dec
sahf
decb
adc
out
fdivs
and
xchg
mov
and
test
mov
inc
sar
nop
push
mov
pop
inc
xor
in
lahf
mov
xlat
repnz
mov
out
sub
mov
sahf
aaa
push
rcl
and
ja
in
popf
or
int3
clc
pop
leave
loope
fwait
and
mov
hlt
clc
inc
adc
mov
testl
test
call
pop
adcb
pop
inc
push
stos
xor
int
popf
ret
rcr
pop
stos
test
ss
push
dec
in
push
sub
nop
and
mov
and
xlat
xchg
push
out
cmp
je
dec
dec
fs
jge
sbb
mov
mov
mov
and
pushf
xor
gs
jno
xchg
pop
rcrb
sbb
cmp
daa
dec
cld
dec
and
dec
test
xor
mov
mov
pop
and
cld
sub
mov
adc
movsb
lods
sub
movsl
aas
popa
jno
pop
insl
xor
aaa
xor
mov
push
push
iret
xchg
sbb
jbe
xchg
inc
loop
cmp
repnz
push
mov
fxtract
in
bts
movsl
jg
sub
mov
mov
mov
mov
int3
outsl
es
fdivl
shrl
pop
mov
mov
or
imul
jno
pop
call
fnstcw
inc
adc
cwtl
pop
pop
pop
and
pushf
mov
rolb
lods
loope
gs
pop
pop
push
pop
jmp
pusha
out
int3
jns
aad
bound
out
pop
adc
movsb
test
icebp
in
xor
jg
xchg
mov
fsubrs
xor
ja
mov
mov
mov
sub
push
lea
sub
xor
out
mov
mov
mov
mov
inc
clc
cld
or
and
lret
mov
pop
cmp
dec
cmpsb
loope
inc
jno
pushf
das
ffreep
or
inc
dec
popa
enter
cmp
cmc
ret
js
fistpl
sbb
xor
pop
pop
push
inc
imul
sbb
xor
in
mov
sarb
imul
repz
push
aaa
adc
and
xchg
or
or
rorl
xchg
daa
cmp
jge
ficomps
movsb
adc
dec
imul
out
mov
outsb
jbe
push
inc
scas
cmpsb
std
fwait
and
jecxz
push
fildll
es
loope
jp
sub
orb
pusha
fwait
sub
je
sti
add
dec
xor
lods
pushl
pop
sub
sbb
imul
push
adc
or
add
sbb
fstp
ds
pop
repz
inc
xchg
mov
push
scas
aaa
jp
and
test
cmp
inc
mov
add
cmpsb
inc
jnp
les
and
shll
imul
inc
daa
or
aad
add
rcrl
fsubrl
and
adc
mov
outsl
mov
xchg
push
jae
subb
add
xchg
imul
out
inc
cli
in
daa
mov
or
push
jle
loopne
pop
je
mov
pushf
fs
cs
loopne
jb
sbb
idivb
clc
movsl
lods
xchg
inc
mov
std
cmp
mov
nop
lock
jecxz
mov
popa
dec
int
or
xor
push
adc
ret
add
or
pop
aad
scas
sub
lods
inc
xchg
out
or
cmpsl
cmovne
in
int3
adc
sbb
or
push
ss
pop
push
int
int3
aam
lahf
inc
sbb
jno
out
sbb
mull
add
stos
and
stos
cmp
subb
pop
adc
cld
xchg
test
cmp
aaa
sar
je
xchg
out
dec
fsubrp
out
cmpsl
out
push
mov
insb
push
pushf
push
push
les
arpl
dec
and
in
adc
mov
adc
push
mov
cmp
adc
xor
fbld
xorl
and
mov
jecxz
cwtl
sub
clc
out
idiv
or
push
mov
add
jle
mov
jnp
adc
lods
xchg
jne
pop
jne
cvttps2pi
daa
pop
stc
adc
push
pop
insb
xchg
or
ja
jns
mov
aaa
popf
lock
lock
mov
in
sbb
xchg
xor
inc
fsubl
pop
jmp
jne
ficoms
call
jge
push
inc
jne
inc
xor
std
pop
bound
and
out
out
out
adc
lahf
xchg
pop
nop
ret
push
data16
pushf
dec
jno
repz
mov
add
fldt
arpl
data16
dec
ficoml
fs
pop
outsl
add
pop
fcomps
jno
mov
push
ficoml
cmpsl
push
out
jne
push
mov
dec
lea
out
push
inc
jns
dec
lahf
pop
loopne
rcll
lock
or
inc
lods
cs
xchg
test
mov
pusha
mov
mov
push
scas
data16
movsbl
mov
adc
fcmovb
ret
pop
ret
add
das
or
or
aaa
std
fildll
and
inc
nop
pusha
dec
mov
lcall
cmp
out
imul
xchg
fiadds
aad
subb
dec
stos
out
jns
push
daa
sbb
push
jb
or
pop
lret
jl
mov
test
lret
rorl
outsb
adc
pop
pop
test
add
enter
xchg
xor
pop
int3
sbb
pop
je
pop
mov
sbb
iret
add
stos
roll
xchg
mov
cmp
cmp
jnp
fstl
movsb
stos
rcl
jle
int3
repz
jge
mov
iret
arpl
mov
outsl
arpl
scas
cmp
and
fdiv
cmp
mov
aam
add
push
psrlw
dec
pop
in
inc
call
rcll
jecxz
cmc
imul
dec
mov
subb
cwtl
push
jns
mov
adc
icebp
nop
dec
dec
or
sbb
dec
stc
xchg
push
xor
bound
mov
fwait
jne
add
mov
push
push
dec
adc
sub
push
cltd
fucom
sub
mov
mov
pop
pop
pop
lock
cmpsl
shll
xchg
jne
add
mov
sub
divb
inc
sub
shlb
loop
adc
push
arpl
ljmp
fsubrs
or
cwtl
jb
add
jle
cmc
push
mov
mov
mov
xor
cld
push
adc
jns
mov
clc
push
movsl
lock
test
inc
or
or
cld
in
inc
addr16
orl
inc
mov
into
ss
movsl
jmp
add
push
mov
adc
adc
jmp
fldenv
loope
sub
sbb
push
fwait
das
sbb
dec
cmpsl
rolb
mov
out
loopne
sub
pop
and
shrl
jmp
sbb
enter
das
pop
in
push
inc
jge
push
in
rclb
dec
mov
mov
mov
mov
or
sub
fwait
push
jmp
sub
stos
mov
cmpsb
add
pop
xor
jmp
daa
mov
lods
fwait
mov
sbb
aad
es
dec
mov
cmp
sarl
int3
mov
jnp
pop
pop
call
addb
adc
jmp
dec
repz
mov
in
repnz
mov
negb
cltd
pop
jns
and
and
pop
fisubrs
mov
push
popf
les
mov
push
call
cmc
sti
mov
sub
mov
lcall
adc
daa
hlt
ror
jl
or
push
addr16
roll
jne
mov
cmpsl
or
push
lock
cmc
cld
fcompl
ficompl
sbb
fisubs
movsb
std
cmp
xchg
add
xor
insl
adc
div
enter
xor
cs
sbbb
mov
xchg
xor
cltd
sbb
rcr
or
mov
and
sbb
and
in
cmp
and
cmpsl
cs
dec
xor
sbb
jp
outsb
mov
and
jecxz
cmp
bound
test
add
xchg
mov
aaa
aas
loopne
lahf
cld
cwtl
jp
push
cmp
stos
push
dec
dec
test
or
adc
sbb
dec
cmp
hlt
add
mov
cmp
push
mov
lds
push
scas
sarl
imul
orb
nop
add
xor
test
sub
loope
shll
mov
fcoml
addl
and
jl
rclb
mov
push
sbb
stos
mov
push
stos
std
pop
in
mov
stc
outsl
push
jg
jns
lods
dec
inc
jns
hlt
fstps
movsl
or
lock
sbb
mov
pusha
sub
dec
xchg
std
fwait
outsl
and
cmpsl
push
add
pop
inc
jecxz
adc
mov
cmpsb
pop
cwtl
xlat
rolb
clc
aas
out
push
aaa
mov
xor
jl
dec
cmp
jle
sub
and
and
push
das
leave
adc
movsb
cmp
cmp
outsl
cltd
lret
push
fsubrl
fsubrs
cmpsb
adc
mov
mov
call
sub
fstpl
outsb
cmpsl
sbb
adc
or
and
xor
adc
mov
fisttpl
fidivrl
pop
xor
dec
add
test
rcr
jb
adc
xchg
mov
aaa
enter
mov
aaa
out
jo
cmp
adc
adc
pop
out
sub
mov
fbstp
icebp
inc
or
xchg
cmp
and
or
arpl
adc
pop
idivl
sub
sub
aas
ds
lret
sub
fs
jmp
inc
popf
lds
std
jnp
sbb
lcall
out
pop
roll
sbb
xor
jnp
add
imul
sub
outsl
push
int
lods
sub
jo
jns
cld
sub
adc
cmp
outsb
xor
mov
in
cmc
ss
jno
scas
mov
push
xor
sub
push
adc
jp
test
xor
cmp
lods
shl
jbe
dec
xchg
dec
ror
dec
jbe
lcall
in
call
lcall
inc
cwtl
sbb
js
fldln2
aad
adc
adc
xor
jl
stos
xchg
mov
jl
cmp
cld
test
mov
outsl
adc
xchg
aas
stc
add
push
aas
in
xchg
add
jmp
xchg
push
push
dec
add
pop
jp
pop
push
mov
sbb
adc
aad
fs
cmpsl
movsb
les
mov
clc
std
mov
push
test
mov
in
js
inc
pop
pop
mov
lods
or
xchg
jne
mov
dec
js
jae
outsl
dec
daa
mov
push
pop
out
sub
dec
in
imul
cmp
popf
shlb
and
mov
mov
mov
ds
and
sbb
aam
paddw
jnp
xchg
stos
mov
in
lcall
xchg
je
mov
or
push
mov
mov
xchg
mov
lret
cmp
les
loopne
std
jns
out
add
lods
cmc
es
imul
jnp
call
outsl
pop
sti
push
outsl
iret
mov
adc
fstpl
xlat
cmp
movsb
push
imul
or
mov
int3
imul
xchg
sbb
dec
adc
adc
push
lods
out
push
arpl
push
jecxz
cmp
mov
iret
lret
jb
and
mov
imul
movsb
sub
mov
sti
and
cltd
ret
fwait
jo
popf
aaa
push
mov
scas
mov
leave
xchg
in
push
test
xchg
insb
sub
std
lret
sub
stos
jnp
add
daa
sub
mov
loop
mov
call
rep
mov
stos
sarb
and
xchg
fidivrs
fisttps
jmp
js
push
jns
ljmp
inc
fistl
xor
xchg
jecxz
add
stos
mov
or
adc
ljmp
lods
je
dec
arpl
pop
bound
sub
cmp
fs
stos
aad
cmp
ljmp
int
int3
and
loope
push
mov
mov
sbbl
mov
sbb
pop
adc
nop
adc
adc
daa
mov
icebp
movb
dec
mov
loop
std
ficoms
push
add
shll
dec
xor
adc
pop
sub
cli
dec
lcall
add
lods
mov
or
pushf
in
lods
sub
aaa
pop
adc
mov
push
push
cwtl
mov
out
add
mov
out
mov
lcall
stc
in
push
add
cmc
rclb
adc
and
sti
loop
fdivs
out
rcrl
xor
sbb
ljmp
ret
aaa
xchg
ficompl
or
aas
jne
push
xchg
adc
xchg
icebp
and
push
xchg
out
or
popf
mov
outsl
pop
ret
nop
lcall
or
ficoms
jp
push
push
adc
pop
cmc
push
add
call
fldcw
test
fildl
xchg
adc
cmp
and
sbb
push
mov
ret
fsubrp
or
ljmp
adcl
in
jp
xchg
jmp
mov
pop
addr16
sahf
imul
pop
jl
cmp
dec
push
shlb
push
cwtl
std
pop
mov
adc
lret
mov
inc
int
jnp
repnz
stc
mov
adc
stos
mov
inc
sbb
push
xorb
cmp
into
pop
cs
mov
aad
mov
scas
mov
js
in
stos
jl
lock
and
inc
mov
out
jecxz
popf
pusha
xchg
inc
cmp
addr16
std
push
and
sub
frstor
xor
push
stc
xchg
sahf
push
enter
stos
push
xor
insl
jl
mov
cld
push
jae
jle
xor
adc
test
lcall
push
sub
pop
movsb
lds
mov
aaa
add
iret
out
lea
lock
cmp
mov
out
pop
out
shll
inc
ja
jnp
mov
mov
ret
fisubrl
dec
jmp
xor
loop
outsb
dec
fs
filds
in
and
stos
cmpsb
xchg
enter
pop
pop
stos
fld
adc
mov
mov
pop
add
mov
xorl
cmp
inc
test
fistl
jmp
jo
push
cs
or
ds
inc
sub
lds
test
enter
addl
bound
and
pop
cmpsb
xchg
pop
mov
mov
lret
mov
call
xchg
pop
addr16
out
js
int
jl
adc
add
xor
cmpsl
xor
gs
movsb
jne
int3
push
fisttpl
adc
imul
mov
push
push
mov
jle
das
call
xor
clc
or
and
cli
ror
stc
or
xchg
repnz
jg
xchg
test
pop
jg
imul
mov
dec
xchg
call
push
push
inc
nop
mov
mov
cmp
bound
mov
lods
into
ja
and
pop
or
mov
push
inc
push
enter
sarl
iret
and
jne
mov
mov
jne
jb
cwtl
and
lds
les
and
pop
push
jno
js
jb
imul
out
mov
clc
xchg
lret
xchg
mov
icebp
pushf
adc
insl
mov
repz
adc
jnp
or
add
pop
add
hlt
dec
divb
shll
repnz
dec
xchg
movsl
shrl
jnp
repz
jns
sub
xor
cmp
pop
add
sub
push
in
movsl
jo
push
nop
jle
jno
adc
outsb
insb
jnp
mov
in
sbb
mov
mov
dec
inc
push
loope
jbe
fldenv
jno
jns
scas
xchg
int
jo
cltd
push
sbb
mov
xchg
enter
add
or
jbe
clc
hlt
mov
cwtl
jp
in
hlt
cli
jmp
stos
outsl
aaa
dec
mov
or
mov
imul
or
inc
popl
icebp
fisttps
inc
movsl
cmp
das
mov
fnstsw
mov
jecxz
dec
inc
pop
and
movsl
mov
scas
jp
cwtl
outsb
fsubrl
mov
xchg
mov
cltd
jnp
fs
or
xchg
cmp
fcomi
lcall
push
mov
scas
sbb
les
jno
push
mov
adc
into
or
mov
cmpsl
in
ret
fnstenv
dec
inc
jmp
cmpsl
daa
aad
sarl
test
mov
dec
jns
and
sub
out
jne
mov
in
jg
mov
jl
mov
dec
enter
push
jge
sbb
sub
ds
pusha
cwtl
push
enter
pop
inc
mov
imul
push
mov
sub
jns
jp
pop
pop
xchg
cltd
add
sbb
sti
pop
xchg
cmp
xor
mov
jne
add
sub
out
sahf
icebp
pusha
stos
pop
fimull
pop
inc
imul
ss
mov
mov
fidivrs
fwait
jae
push
push
or
icebp
aam
mov
jne
roll
mov
call
std
xchg
mov
mov
and
push
mov
das
inc
mov
xlat
pop
jle
push
loop
imul
js
mov
lcall
dec
pop
rorl
mov
in
rclb
cmp
inc
pop
jne
clc
xchg
shlb
xor
aaa
xchg
insb
ficompl
xchg
out
sbb
shrb
jp
das
pop
xor
and
dec
mov
pop
lock
stos
add
das
into
push
outsb
push
mov
daa
dec
add
fstl
xchg
sbbb
inc
rcll
pop
push
jmp
jg
sbb
xorb
lea
push
nop
cmp
das
push
push
data16
inc
jle
jae
call
mov
jns
mov
cmp
cmp
test
stos
jnp
mov
sub
mov
shll
sahf
aad
inc
bound
jb
imul
jle
pop
xchg
data16
lea
or
sbb
cmp
test
xchg
add
xor
jg
daa
pop
jmp
sub
push
mov
sub
xlat
movsb
dec
mov
mov
lock
inc
addr16
test
sbb
daa
inc
je
inc
adc
jne
mov
push
inc
rorb
cli
mov
test
out
inc
and
jns
push
adc
fidivs
inc
dec
addb
movsl
mov
add
sahf
es
into
cli
mov
mov
mov
or
cld
xorb
cmp
cmp
or
add
jns
addl
jbe
int3
cmpsb
pop
test
testl
push
xor
nop
and
inc
inc
sub
cmpsb
test
arpl
mov
xlat
movsb
loopne
sti
xchg
nop
lods
insb
notl
inc
pop
out
test
mov
or
imul
jb
mov
sbb
jns
addb
cmp
rclb
clc
insl
cmpsb
or
stos
adc
lahf
jmp
sbb
mov
scas
xchg
sbb
daa
pop
test
mov
jb
mov
and
jg
in
fstpt
ljmp
and
pop
popa
stos
pop
rorl
inc
lock
pop
cmp
mov
dec
xchg
mov
cltd
jno
nop
mulb
addr16
scas
push
fdivr
or
nop
mov
jne
ret
push
jns
scas
inc
bound
stos
out
push
movsl
test
jmp
mov
push
and
dec
je
jmp
adc
aad
shrl
jne
cmc
inc
loop
pop
jb
jo
repnz
cld
fisubrl
push
lahf
and
xor
xchg
pop
dec
mov
test
imul
pop
leave
or
cwtl
test
sub
sbbb
add
cltd
mov
adc
idiv
lods
outsb
imul
pushf
stos
add
inc
push
jne
push
mull
jo
jle
pop
dec
int3
and
loopne
mov
xor
adc
mov
mov
pop
add
mov
nop
lods
or
orl
in
dec
aam
jp
push
in
in
jg
stos
sub
adc
jmp
fcoms
aaa
outsl
rep
sbb
add
mov
cmc
add
test
pop
into
cmp
aas
jl
stos
or
ja
or
mov
cmpsb
mov
addr16
push
add
push
emms
hlt
cld
clc
or
bound
sub
cmp
inc
rol
mov
ret
repz
rclb
add
orb
jg
notb
call
ljmp
cmp
jecxz
out
idivb
pop
jge
aas
or
pop
scas
in
mov
jo
sub
cmp
lahf
aad
adc
aad
cmp
das
repnz
addr16
dec
pop
mov
cltd
dec
mov
jmp
push
jno
cmp
int3
mov
fsubp
fldl2t
or
cmc
mov
push
lcall
adc
gs
les
mov
int3
ja
out
push
mov
mov
mov
outsl
lea
loopne
dec
sbb
int
fisubrl
andb
jno
fsubs
shrd
pop
loope
adc
inc
jbe
cwtl
add
adc
cmp
jns
push
call
lods
mov
and
jbe
jmp
or
sbbb
fsincos
pop
ja
popf
es
les
sub
scas
mov
sbb
fs
cmc
add
inc
xor
push
bound
dec
mov
addr16
mov
mov
lret
aaa
stos
test
repnz
xchg
rcr
pop
lods
ja
and
mov
int
or
or
in
gs
and
sbb
add
or
push
std
imul
adc
cmpb
int3
lods
push
or
sbb
pop
jbe
in
popf
jecxz
test
fcomps
ret
sahf
mov
test
add
dec
adc
jns
pop
es
mov
push
xchg
je
mov
js
pusha
jmp
aas
lock
jno
cmpsb
mov
adc
sbb
inc
leave
and
cli
pushf
jne
mov
ror
jecxz
inc
call
ljmp
mov
sub
sbb
sbb
mov
pop
mov
sbb
data16
sub
ds
lahf
sbb
or
cmp
push
jmp
mov
gs
sbb
mov
push
ja
jne
cmp
jns
in
jne
adc
js
clc
fs
gs
mov
inc
cli
mov
jno
orl
rorl
xorb
ljmp
outsl
shll
or
orb
ja
int3
mov
add
repz
pop
lea
sbb
adc
aaa
sbb
xor
sbb
pusha
sbb
xor
push
ret
lods
call
jp
cmp
shll
sahf
jmp
fisttpl
mov
pop
push
les
test
je
and
push
sbb
lahf
out
pop
leave
mov
xor
das
je
jno
packssdw
ja
push
es
jnp
push
pop
sbb
clc
mov
and
scas
sub
fbld
xchg
lods
repz
xchg
aad
xor
fcoml
divb
ljmp
adc
or
jb
add
mov
aaa
notb
int3
fildl
inc
cmp
dec
push
adc
push
cmp
mov
jl
mov
shrb
call
rcrl
cmc
cmp
mov
lahf
rorb
adc
inc
xchg
adc
sub
mov
pop
leave
orb
dec
imul
cli
popa
ret
ljmp
jo
lock
lret
and
mov
xchg
out
js
push
xchg
mov
cltd
mov
push
cli
rcrb
sahf
rcl
pushf
lahf
xchg
insb
sbb
add
xchg
cwtl
into
repz
repz
into
ret
adc
pop
cmpsb
cltd
insb
mov
push
fists
cs
xor
inc
in
xchg
daa
mov
adc
cmp
sti
fstps
xchg
xor
stc
jnp
movb
or
mov
push
push
adc
mov
repnz
push
or
jbe
mov
or
jbe
orl
jb
xor
out
loop
lret
ss
or
cmp
and
cmpsb
and
or
lret
mov
lret
ljmp
lods
xchg
push
lret
xor
mov
pop
adc
iret
pop
loope
jne
movl
mov
nop
pop
sub
call
pop
mov
repnz
cmp
dec
pop
aad
cltd
ljmp
push
dec
xor
call
int
mov
xorl
mov
inc
or
fs
test
push
push
mov
mov
xchg
cmp
mov
cmp
adc
add
jbe
or
adc
lret
jae
xor
scas
loopne
aaa
jmp
std
neg
xor
push
push
adc
mov
cmpsb
ret
lahf
insb
push
mov
adc
mov
dec
xor
adc
mov
scas
rorl
test
fwait
jl
add
or
mov
xor
mov
inc
jo
lods
sub
pop
dec
xchg
and
icebp
je
push
mov
repz
mov
inc
lock
jne
xor
leave
pop
movsl
es
jns
popf
xchg
jg
in
pop
ret
fstl
pop
push
stos
push
nop
icebp
add
xchg
cld
loope
imul
subl
sub
push
test
xor
out
cmp
pushf
imul
cmp
faddl
mov
xor
sarb
xchg
xchg
mov
call
test
ret
lcall
sub
xchg
movsl
push
xor
pushf
jle
out
stos
push
ret
cmp
mov
addr16
add
pop
or
mov
cmpsb
push
ds
jns
pop
push
mov
adc
dec
mov
push
popa
std
outsb
or
movsb
popf
mov
ss
gs
ret
mov
gs
test
adc
rcr
cmp
dec
mov
cli
mov
and
lods
scas
or
xchg
sub
mov
sub
negl
ljmp
push
addr16
xor
xchg
pop
test
fucomi
stc
sub
push
mov
mov
popa
pop
loope
inc
push
data16
mov
xchg
ret
dec
jle
mov
repz
ds
add
stc
push
pop
jo
push
imul
daa
shlb
addr16
jae
pushf
stos
xchg
cmpsb
pop
cmc
mov
out
inc
test
in
lods
fists
cli
jo
call
out
inc
add
cmp
pop
jge
jmp
dec
dec
jb
add
in
mov
mov
push
lret
jne
incb
arpl
mov
scas
sub
mov
pop
shlb
ret
les
dec
dec
cmp
sbb
adc
inc
sbb
ret
mov
aaa
incl
in
ja
jmp
xchg
je
sbb
sub
lods
inc
xchg
dec
pop
jbe
call
insb
test
push
jnp
mov
sbb
aad
cmp
mov
test
and
jge,pt
cmpsb
xchg
icebp
or
push
adc
xchg
jns
lods
mov
out
sbb
cli
ds
pop
outsl
or
sbbl
rcl
mov
and
or
sti
stos
mov
xchg
add
jne
fcomp
sub
jecxz
mov
stos
rcll
dec
xchg
repz
fucomi
and
xor
into
and
lahf
ds
mov
fs
aad
mov
jae
rcll
xchg
dec
movsl
stos
movsb
mov
xchg
lods
sbb
mov
mov
push
pop
xchg
fnstcw
lcall
into
jg
in
loop
dec
das
ret
and
jbe
xchg
sub
lds
inc
aad
cmp
mov
jnp
xor
or
and
mov
mov
js
outsb
ficompl
hlt
bswap
imul
nop
pop
shl
rcl
sbb
pop
fisubrs
movsb
xchg
ljmp
in
jns
inc
sbb
js
std
mov
imul
test
push
xchg
add
mov
mov
insl
inc
lods
sbb
cli
aaa
or
out
xor
dec
xchg
es
fwait
movsl
dec
fucom
out
jbe
push
push
dec
or
jbe
pop
cmpsb
pop
xor
fdivs
sbb
imul
xchg
xchg
jl
lret
adc
cltd
fcmovu
jo
rcr
in
add
aam
aad
xchg
cmp
dec
jbe
xor
pop
ds
out
xor
popa
mov
push
or
div
fmuls
mov
punpckhwd
inc
std
addr16
inc
stc
mov
mov
jnp
jmp
sbbb
mov
mov
arpl
repnz
lret
sbb
out
ja
lods
dec
mov
mov
dec
or
dec
xchg
inc
mov
arpl
inc
jge
xor
cmp
cld
lret
pop
loope
test
dec
into
lea
mov
inc
aas
jg
jns
jmp
imul
sub
and
ficoms
adc
jb
data16
cmpl
pop
stc
mov
vpsraw
push
jge
cmp
jb
sbbb
adc
loopne
sub
sub
cmp
xor
mov
in
inc
cmp
lcall
fstpl
fucomip
ja
lock
hlt
js
xor
insb
and
leave
shll
and
jecxz
cmp
faddl
es
jge
lds
js
daa
cmp
sbb
rclb
ror
lea
cmp
cmpsl
cltd
sub
add
and
scas
adc
and
sbb
imul
or
pop
push
and
sub
cmpb
adc
push
xchg
push
aas
mov
divb
aas
mov
add
mov
fucomp
lods
pop
mov
fisttpll
lock
mov
movb
mov
mov
push
lods
xor
into
add
mov
and
sub
or
pop
je
shrl
lock
pop
sub
cmp
pop
cmp
sbb
cmp
movb
inc
xchg
mov
mov
aad
sub
mov
add
mov
lret
lret
js
and
movups
add
add
xchg
cmp
sahf
addb
xchg
es
ret
sub
adc
shrb
adc
aad
int
xchg
adc
mov
aaa
fsubs
stc
inc
inc
pop
into
dec
shll
aas
in
jmp
push
pop
lds
ret
pop
call
cmpsw
jp
pop
jne
xor
mov
fwait
pop
dec
pop
xor
sub
push
pop
pop
inc
inc
ds
xor
icebp
inc
aaa
lods
adc
cld
ror
cmpsb
mov
push
add
cmp
jb
insb
dec
and
fidivrs
call
jp
mov
mov
insl
fdivrl
inc
out
inc
test
and
insb
cmp
adc
shll
into
out
es
ret
xchg
pop
xor
mov
or
fnstsw
cmp
xorb
shrb
add
and
sbb
pop
xchg
inc
lock
pop
daa
rolb
dec
stc
push
test
push
movsl
pop
hlt
xchg
xor
or
out
dec
pop
sub
loopne
jae
mov
aas
das
jl
loop
ljmp
icebp
mov
repz
xchg
popa
insl
sbb
mov
push
dec
call
icebp
into
xor
gs
jmp
jo
inc
jbe
mov
loopne
mov
bound
pop
sbb
loop
stc
int3
add
pop
test
fmul
in
fs
adc
mov
loop
add
subl
mov
stc
jg
ss
pop
mov
sahf
adc
jecxz
mov
cltd
fnsave
cmc
mov
xor
and
mov
imul
imul
cmp
or
sti
push
jg
push
scas
sarl
lock
adc
fsub
lret
cltd
mov
add
divl
hlt
push
cmp
outsl
push
fcom
popf
insb
mov
dec
ds
pusha
in
push
loop
inc
cmp
xorl
add
aas
or
or
push
mov
shll
jae
out
xor
pop
ja
ljmpw
jno
and
push
sbb
scas
cmp
inc
or
dec
jno
and
mov
jae
imul
fisttpll
mulb
jns
inc
push
lcall
mov
aas
cltd
daa
push
loop
fistpl
sbb
push
aas
cmp
jmp
lret
add
pop
pop
dec
ljmp
cmp
inc
rcrb
adc
loop
mov
mov
xorb
mov
jno
pop
repnz
daa
ret
and
enter
lock
je
push
or
pusha
ss
popa
mov
adc
in
in
int
lea
mov
cld
jg
xor
ds
cmpsb
sahf
add
sub
or
pop
loop
cmp
sub
fildll
jb
call
lock
jae
shlb
mov
mov
mov
push
das
ret
pushf
sub
test
add
mov
dec
fistl
xchg
aas
lock
xor
pushf
jnp
jle
stos
xchg
addr16
push
rolb
push
push
es
dec
push
xor
fwait
scas
sbb
mov
fidivl
push
mov
cmp
pop
mov
aaa
popf
arpl
bnd
or
cli
dec
cmp
sub
cs
dec
rorb
fs
and
rorb
lret
xor
shll
popa
sbb
pop
push
or
popf
in
cltd
cmp
push
stos
push
sbb
cs
mov
pop
pop
clc
pop
sbb
cltd
adc
inc
mov
bound
lds
add
mov
sbb
and
push
adc
jmp
movl
orb
shrb
mov
push
adc
cmp
aaa
test
cmpb
inc
shrl
mov
loope
push
or
popl
xlat
fisubrl
xchg
arpl
and
int3
fsts
push
jae
fucomi
pop
mov
dec
scas
sub
out
fbld
in
jmp
jns
xlat
xor
sbb
jecxz
inc
sbb
mov
mov
lock
mov
out
ret
xor
outsb
pop
push
jle
sub
cli
test
loopne
repz
push
sub
dec
jmp
imul
xorl
or
jmp
scas
cltd
insl
dec
inc
pop
les
xchg
jbe
mov
adc
cmp
pop
xchg
mov
pop
icebp
outsb
push
jl
xor
xor
jno
mov
cmp
push
ret
jb
insl
loop
shrb
pop
or
or
loope
insl
or
push
lret
cmp
push
fs
sbb
xlat
mov
push
cmpsl
inc
popa
or
push
pop
inc
lea
jne
cmp
jge
in
and
lds
mov
or
or
dec
aam
jno
dec
push
mov
cmp
loopne
nop
out
aam
dec
mov
cmp
sbb
test
jle
es
fmull
jg
pop
lcall
inc
mov
and
rcrb
cmc
fldl
shl
cmp
imul
lds
js
test
add
pusha
push
dec
xor
mov
push
and
cwtl
cmp
les
cmp
mov
sarl
jnp
sub
hlt
dec
or
sub
incb
pop
in
adc
xor
jmp
inc
rolb
adc
lock
sbb
push
arpl
repnz
loop
mov
xchg
mov
sbbb
sbb
jnp
inc
mov
bound
subb
sbb
sbb
cmp
jnp
in
mov
pop
sti
aas
sbb
arpl
cmp
mov
dec
xchg
andl
add
nop
dec
xor
aad
addl
loopne
cld
push
push
outsl
icebp
mov
stos
out
xchg
push
mov
jno
popa
jp
mov
push
xchg
loopne
adc
iret
mov
fiaddl
push
in
xor
mov
push
mov
mov
testl
leave
push
inc
mov
and
shl
rclb
sahf
add
in
push
inc
into
sbb
jno
sbb
bound
pop
outsb
lods
or
jo
rorl
popf
lcall
ret
cmpsl
pusha
ds
cmp
movsl
ret
xchg
mov
mov
xor
int3
test
test
fwait
adc
cmp
dec
movsb
mov
xchg
gs
out
xchg
jecxz
arpl
dec
mov
add
push
xlat
lds
stos
sbb
popf
aaa
push
cmc
scas
mov
es
imul
cmpsb
mov
jecxz
mov
and
mov
inc
jae
rcrb
out
sbb
xchg
popf
inc
cmpsb
push
test
xor
or
jns
pop
inc
das
mov
lahf
push
dec
sahf
dec
divl
int
mov
pop
bound
test
lock
mov
adc
outsl
loop
cmp
or
or
xor
lds
stc
aaa
lcall
nop
add
les
xchg
cmp
mov
jl
xchg
xor
sbb
fwait
insb
in
mov
cmp
rcrb
jp
lods
mov
scas
fsubr
sub
fs
fdivp
mov
iret
popf
int3
pop
push
nop
adc
xchg
bound
jmp
pop
out
inc
mov
jle
push
stos
jmp
ds
dec
pop
fimuls
cmpl
out
js
jecxz
add
lds
inc
out
lds
pop
aas
shlb
or
inc
cmp
ret
call
inc
jnp
inc
cmc
cmpl
mov
cmp
mov
outsb
test
add
imul
sub
dec
mov
push
test
pop
adc
mov
lods
je
test
jge
sub
xchg
test
imul
in
inc
mov
aad
sub
xor
lods
inc
mov
push
sahf
push
xchg
cli
mov
les
or
add
mov
xor
into
outsl
aad
push
xlat
cmp
bound
adc
mov
or
rorb
cld
mov
and
xor
gs
mov
cltd
jb
repnz
dec
mov
loope
idiv
cmp
sub
fdiv
jmp
jge
push
test
stc
pop
in
cs
pop
mov
push
jl
test
push
sbb
dec
data16
push
andb
scas
sahf
lret
jb
jl
call
pop
add
push
ss
fcomps
lret
mov
inc
dec
lods
fs
sub
and
mov
fscale
std
dec
out
mov
fidivrs
shlb
loope
das
dec
pop
pop
fwait
mov
xchg
out
aad
add
adc
or
loope
push
orb
je
out
dec
test
cld
jmp
mov
negb
dec
xchg
xor
sbb
push
jae
les
or
sbb
mov
jge
adc
das
cmc
pop
mov
mov
jle
mov
inc
inc
cs
push
test
dec
xor
push
xor
daa
inc
out
sub
scas
imul
mov
jo
dec
lods
loopne
ljmp
pop
and
dec
jnp
push
jo
aam
mov
aas
mov
or
push
dec
ret
xchg
aam
xchg
ljmp
sbb
addr16
insb
adc
inc
inc
lds
sbb
out
adc
mov
jnp
jge
mov
mov
mov
stc
mov
and
xor
or
mov
and
dec
adc
mov
and
sahf
leave
add
scas
stos
ret
leave
push
fiadds
outsl
test
mov
xchg
into
push
orb
sbb
pop
push
mov
mov
inc
jmp
scas
lcall
enter
sbb
in
jbe
ret
imul
sbb
in
sbb
int3
inc
scas
xor
mov
int
cmpsb
stos
lahf
fisubl
imul
jmp
nop
lds
popl
into
test
push
push
xchg
mov
adc
shlb
mov
fdivr
cwtl
push
xor
ja
inc
dec
mov
mov
dec
fildll
push
aad
add
pushf
movsb
sub
xor
shr
ret
jb
mov
sbb
dec
and
pop
dec
mov
sbb
iret
add
das
rorb
roll
cmpsl
adc
daa
icebp
ret
sub
jnp
std
mov
inc
stos
dec
hlt
inc
adc
dec
addl
pop
sbb
mov
sbb
stc
xchg
jns
in
cvtpi2ps
dec
add
cmp
lret
sbb
xlat
inc
adc
push
sbb
es
sarb
cmp
fbstp
repz
jg
int
int3
out
aaa
stos
dec
cmp
insl
shrl
push
pusha
mov
xchg
ss
sti
and
movsb
outsb
in
aad
shll
mov
inc
jmp
dec
and
int3
cmc
nop
inc
or
int
mov
xchg
insb
sbb
loopne
fisttps
insl
outsb
xchg
or
jne
pop
enter
mov
xchg
idivl
jb,pn
cmp
mov
test
cld
push
stos
xor
jns
xchg
icebp
sbb
cli
hlt
test
push
cmc
dec
popa
sbb
int3
jmp
mov
push
inc
adc
jbe
push
pusha
pusha
and
xor
push
insb
les
sub
cmpsl
dec
inc
sub
fs
jge
push
in
xor
mov
xchg
cmpsb
dec
xchg
push
or
fldl2t
add
adc
pop
data16
jp
mov
or
sti
mov
mov
mov
xchg
lds
xchg
xor
xchg
xlat
push
in
sub
lret
in
std
insb
lret
lahf
mov
mov
push
fldenv
test
xchg
test
mov
jmp
jb
dec
shlb
xchg
cltd
push
cmp
fcoml
leave
aas
in
popa
notb
sub
and
mov
roll
scas
fdivs
rclb
mov
shl
in
push
insl
in
mov
push
inc
push
lret
inc
push
xor
into
vandps
dec
fnstcw
mov
or
mov
bound
pop
fbld
push
mov
mov
aaa
push
ss
in
movsb
aas
xchg
sub
mov
push
inc
dec
cmpsl
push
sbb
xorl
lret
test
xbegin
jp
pop
lcall
imul
scas
rolb
inc
sti
push
sub
mov
adc
into
cmp
shlb
stos
mov
iret
std
out
sbb
cltd
sub
push
idiv
dec
xchg
loopne
icebp
lea
and
jmp
fs
sub
cs
imul
sbb
into
jb
mov
pop
xchg
lcall
mov
mov
add
mov
roll
sbb
sbb
sarb
dec
popf
dec
clc
lods
mov
sahf
adc
mov
xor
push
push
cmovno
or
movsb
xchg
pop
and
push
fldl
add
movsb
add
sbb
cs
fsts
add
hlt
cmp
mov
mov
scas
push
mov
jbe
sbb
insl
cmp
cmp
dec
sbb
sti
imul
ss
add
testb
cmpsb
movsl
inc
pop
push
stc
adc
scas
mov
xchg
mov
mov
popa
cld
lcall
xor
push
mov
mov
or
repz
fildll
jl
hlt
pushf
lahf
int
push
jmp
cld
jbe
xlat
das
cmp
scas
fidivl
add
fisttpll
cmc
jns
bound
fdivs
or
fiaddl
gs
fistpl
loopne
and
popf
xchg
cmp
lock
mov
jae
add
sbb
into
out
and
rcrl
aad
jmp
das
aaa
mov
leave
jae
std
or
dec
jecxz
rorl
mov
out
sbb
fistpl
ret
pushf
imul
jge
testl
aaa
sbb
mov
push
dec
enter
adc
cmp
add
xor
stc
dec
stos
jp
or
inc
inc
inc
push
gs
mov
test
test
cmp
bound
mov
es
fisttpl
lret
outsl
sub
pop
pop
enter
sarl
jp
xchg
clc
outsb
jns
scas
add
testb
push
xor
and
repz
in
jge
pop
jecxz
scas
add
or
cmpsl
add
and
shlb
stos
jl
pop
sbb
das
frstor
inc
lock
fiadds
popa
xchg
xchg
fcoml
jp
ljmp
ljmp
out
mov
adc
dec
iret
jle
out
pop
out
mov
enter
cmpsb
xchg
rcr
loopne
idivl
adc
inc
jbe
xchg
dec
xor
cmp
hlt
pop
pop
xor
sbb
test
aas
lods
mov
or
rcl
xor
inc
pop
jg
jmp
loop
mov
push
mov
jg
push
xchg
imul
pop
and
cmp
in
scas
orb
int3
jmp
push
mov
cmp
mov
stc
add
dec
filds
lret
sti
mov
fstl
icebp
and
lahf
sbb
out
scas
push
clc
dec
rorb
roll
jbe
cmp
cmpsb
cltd
sahf
pop
subb
and
sub
push
dec
xchg
add
add
jmp
addr16
or
hlt
ljmp
jecxz
nop
pusha
mov
testb
test
adcl
scas
jno
mov
mov
push
in
mov
mov
mov
inc
fidivl
test
dec
dec
cmp
pop
cmp
push
xchg
mov
and
data16
popf
jg
jnp
shrl
loop
pop
shl
int3
jge
push
bound
cmc
pusha
es
stos
sub
push
cli
push
pop
mov
pushf
jbe
mov
jnp
test
sub
cmp
xlat
insl
mov
lahf
jmp
or
in
push
rdmsr
pushf
hlt
jbe
loope
filds
inc
pop
mov
pop
pop
lret
ja
push
cld
inc
pop
xchg
div
mov
jge
in
cmpsb
xor
cld
xor
cmp
add
aad
add
jnp
add
sbb
sbb
mov
stc
in
sbb
xor
adc
or
leave
pop
xor
dec
fisttpll
xor
xchg
fldcw
mov
xchg
mov
sbb
cmp
clc
pushf
mov
push
pop
or
xor
adc
xorb
cli
popf
mov
imul
jmp
inc
mov
bound
das
pop
scas
mov
mov
repnz
adc
lahf
outsb
int
and
xchg
push
xor
jl
dec
pop
popa
xlat
sub
into
fdivr
pop
or
scas
xchg
push
cmp
jecxz
mov
hlt
stos
adc
sub
push
stos
lods
outsb
sbb
mov
sub
in
xor
pop
loop
lcall
add
jp
test
jb
cwtl
pop
sti
jb
mov
out
das
es
filds
mov
out
rcrl
sbb
inc
std
shrl
cs
fcmovnbe
addl
cmc
sub
add
lock
sbb
add
cmp
mov
out
sbb
mov
sbb
insb
xor
inc
xchg
into
bound
cmp
daa
jne
push
pushf
repz
jp
ljmp
js
mov
aam
xor
dec
or
dec
jge
mov
dec
xlat
inc
adc
pop
stos
or
mov
and
scas
enter
xlat
fidivrl
lret
into
fwait
in
and
icebp
mov
jb
fldenv
fstpt
out
cltd
xchg
out
sbb
push
cmpsb
aad
int
lea
in
jae
std
dec
sbb
adc
mov
loop
dec
jp
or
sbb
cs
lahf
cmp
out
jns
daa
cltd
dec
push
jno
sarb
and
pop
jge
shrb
jge
and
fnstenv
sub
cmp
int3
xchg
std
aad
xchg
pop
je
inc
and
mov
int3
dec
pop
adc
mov
shlb
repnz
js
fwait
or
sub
fldl
das
ret
inc
aas
shrb
sub
cwtl
sbb
cmpsb
or
push
sub
dec
addr16
pop
ja
imul
push
les
les
mov
add
cs
mov
aaa
pop
hlt
lcall
mov
dec
rcrb
out
mov
scas
ficompl
int3
fcompl
add
das
and
arpl
int3
inc
pop
imul
ljmp
mov
inc
pop
andl
ret
ret
sub
fdivrl
std
inc
add
das
dec
int
fadds
dec
xchg
inc
mov
jns
pushf
ficoml
mov
jg
pop
loop
andl
je
data16
aam
shll
mov
mov
fisubrl
pushf
sahf
outsb
fdiv
mov
add
fdivrp
das
lods
paddsb
lret
push
cmpl
jecxz
les
mov
imul
pop
fistpl
and
xor
mov
push
sub
mov
mov
mov
xchg
or
xor
sub
jmp
sbb
jns
js
jp
jo
out
add
addr16
aad
pop
sahf
push
jno
sbb
testb
js
cmp
dec
push
xor
jne
loopne
out
mov
dec
dec
mov
icebp
pop
mov
adc
sarl
je
sbb
push
xchg
sti
sbb
jecxz
popf
lret
je
mov
push
aad
xlat
dec
repnz
movsb
sub
dec
adc
movl
pop
mov
jnp
xchg
cltd
cmpsb
test
ja
inc
xchg
dec
fisubs
fimuls
pop
jns
icebp
icebp
xor
sar
jmp
ljmp
das
and
int3
pop
pop
mov
dec
outsl
mov
inc
icebp
cltd
ss
xchg
jo
xchg
fildll
mov
lds
cld
cli
cs
lea
pop
sbb
ror
loopne
sahf
rcrl
jmp
ret
inc
pop
in
mov
inc
in
test
test
add
dec
aad
mov
clc
fwait
mov
popf
stos
and
dec
mov
in
fildl
loop
sti
add
sbb
test
or
adc
mov
std
xor
shll
out
cmp
fdiv
stc
out
in
dec
adcb
sarl
fisubs
sub
mov
cmpb
repz
fidivrl
bound
jb
mov
cmp
cmp
mov
stc
sbb
mov
rol
fisubrs
inc
repz
pop
push
add
out
push
into
inc
inc
pslld
sarb
movsl
xchg
adc
outsb
lods
test
pushf
je
imul
jl
fadd
adc
mov
mov
adc
lret
icebp
jp
aaa
add
fwait
adc
push
sbb
push
lods
icebp
test
icebp
and
or
xlat
jo
add
repz
push
and
iret
jbe
and
inc
push
dec
pop
sbb
mull
xchg
adc
pop
std
ret
incb
xchg
addr16
jmp
adc
dec
xchg
jns
cmp
cmp
shrb
jnp
cmpsb
xlat
subb
pop
xchg
sub
xor
loopne
clc
mov
xorb
test
mov
negb
cmp
sbb
dec
and
ret
push
fs
sub
cmp
add
cmpsl
movb
inc
call
pop
add
mov
insb
cmc
jg
ljmp
bound
xchg
cmp
dec
fcos
mov
xchg
jae
stos
mov
xchg
sbb
outsb
rcll
sbb
fwait
jle
mov
jle
push
mov
dec
dec
xor
mov
in
jg
hlt
mov
mov
repz
jp
icebp
jo
imul
pop
movsl
cltd
lcall
pop
jl
and
xor
fwait
push
mov
mov
mov
dec
and
dec
dec
imul
mov
adc
leave
addr16
and
icebp
mov
cmp
pop
push
out
mov
fists
jge
sbb
scas
and
enter
stos
mov
or
rcr
jmp
adc
and
out
lcall
jmp
jmp
nop
push
clc
rcr
mov
cmp
stc
push
ret
xor
fbstp
pop
pop
mov
lods
stc
mov
sti
and
pop
imul
aam
mov
mov
add
push
insb
scas
sbb
popa
push
xchg
movsl
shl
movsl
sbb
xchg
imul
jne
das
cmp
or
mov
push
jnp
movsb
test
jmp
sbb
out
push
lahf
sbb
icebp
dec
xorl
dec
dec
add
mov
ficoms
cmpsb
fwait
push
mov
adc
sub
sub
shl
inc
shr
shl
cld
popa
mov
sub
push
pop
rcl
lock
jg
outsb
fwait
ljmp
push
in
movb
loop
stc
push
add
fdivl
stos
xor
xchg
mov
mov
or
jbe
and
cmc
xchg
mov
bound
neg
in
push
jno
pop
shlb
divb
xchg
fidivrl
outsl
arpl
cwtl
pop
je
xlat
pusha
rcll
test
or
or
negl
push
or
push
push
add
ljmp
sbb
sub
lods
and
adc
xor
jecxz
cltd
leave
leave
inc
fwait
push
dec
cmpsl
cmp
pusha
push
cs
arpl
sub
fmull
mov
scas
push
xchg
adc
sarb
insb
and
repz
std
mov
leave
mov
roll
int3
jge
ret
sbb
inc
popa
pop
add
jle
cmp
lahf
push
jmp
fdivrs
mov
aam
imul
and
adc
or
mov
dec
sahf
std
scas
mov
xchg
push
imul
pop
jae
or
orl
js
test
pop
xor
divb
pop
push
xor
enter
inc
hlt
sub
pop
inc
call
ljmp
push
sub
sub
adc
jb
shrb
lret
xor
daa
cli
pop
fcompl
stos
fldln2
mov
notb
sbb
pop
xor
jae
lods
pop
sbb
jno
inc
dec
xchg
lcall
mov
pop
or
sbb
les
dec
pop
insb
inc
adc
scas
and
pop
push
jne
adc
xchg
stos
fbstp
insl
nop
lret
sbb
fcompl
insl
stc
adc
xchg
inc
repz
jb
shrl
xchg
pop
dec
es
lretw
je
mov
xor
lret
jnp
push
mov
jb
pop
imul
mov
std
js
lds
into
push
sahf
out
cltd
pop
cmpsb
mov
imul
cmp
ds
dec
and
jns
and
pop
add
dec
xor
call
xor
in
dec
movsl
sub
mov
xor
xchg
fisubs
mov
xorb
ret
and
push
sbb
mov
pop
or
mov
fs
push
jb
lds
in
out
popf
jno
fildl
push
cmpsb
addl
addl
push
push
push
rorb
rsqrtps
ds
xchg
lret
xchg
shlb
cmp
popa
mov
sahf
push
xchg
lea
pop
and
shrb
sbbb
das
ret
clc
aaa
xor
stos
imul
aas
data16
lds
mov
add
imull
scas
or
dec
in
lock
mov
aas
push
fcompl
cmpsl
enter
jl
cltd
ja
ret
lods
lcall
mov
pop
jmp
mov
jb
xchg
and
mov
hlt
in
mov
hlt
nop
lcall
mov
xchg
jbe
leave
idivl
mov
inc
daa
stos
xor
mov
lea
das
pushf
leave
cmp
mov
bound
notl
pop
sub
cmp
pusha
mov
gs
stos
stos
or
ja
and
inc
mov
outsb
push
xor
cmpsb
adcl
cmp
leave
sub
mov
sub
cmpsl
mov
dec
cmp
xchg
cld
push
stos
xlat
sub
outsl
fisttps
xchg
idiv
nop
xor
sub
ret
add
dec
mov
or
dec
sbb
mov
cmp
scas
clc
xchg
cli
in
or
insl
adc
pop
xchg
inc
mov
std
sbb
dec
hlt
cli
xor
cld
popa
jno
loopne
cmp
fiadds
mov
mov
movsl
adc
mov
shrb
daa
inc
jns
cmc
xchg
xchg
inc
setae
ds
js
iretw
shufps
pop
in
dec
std
mov
mov
fbstp
js,pt
subl
icebp
scas
mov
aas
sbb
jmp
add
js
test
aaa
scas
xor
repz
aam
ds
inc
ret
or
loopne
lea
scas
cmp
jo
cmp
xchg
inc
or
add
sbb
cld
fimuls
int3
repnz
pushl
shr
inc
int
test
ds
data16
andl
aad
mov
clc
in
out
xchg
jmp
xchg
inc
fs
mov
pop
inc
ljmp
test
xchg
add
xchg
pop
out
and
add
push
push
mov
mov
outsb
pop
bound
std
jae
lret
xor
ja
and
cwtl
cli
cmp
fs
and
cmpsl
fstpl
enter
sbb
push
rcr
les
pop
inc
int3
adc
nop
sbb
dec
add
cli
xor
pushf
mov
je
aad
pop
push
jl
jl
adcb
mov
and
inc
repz
jge
outsb
jl
or
or
xchg
sbb
sbb
add
fwait
repnz
push
sbb
fstps
mov
push
sbb
jp
in
mov
xchg
dec
or
rorl
pushf
pop
or
add
cmp
push
leave
daa
idiv
sub
ljmp
mov
mov
or
mov
loopne,pn
pop
jnp
xchg
sbb
add
inc
mov
mov
pop
xlat
shlb
jecxz
cli
test
aam
or
sub
pop
jo
jmp
jo
addr16
sub
xor
shll
lret
jle
mov
mov
std
fcom
movq
int3
mov
arpl
and
daa
adc
push
xchg
pop
mov
fs
jmp
cmp
stc
ljmp
or
bound
push
mov
adc
mov
cmp
jl
push
stos
fcompl
jno
clc
cltd
jle
jmp
out
out
insl
xchg
mov
mov
and
push
imul
cltd
cmp
fldenv
adc
iret
jae
ja
jne
push
dec
sbb
into
cmp
push
sbb
addr16
cmp
in
xchg
pushf
push
pop
jne
lahf
scas
rorl
lret
pop
test
xchg
not
pusha
aas
push
lods
loope
fdivr
test
pop
sbb
and
cmp
inc
and
loopne
dec
pop
push
push
and
sahf
addr16
ja
pop
adc
mov
and
rcr
pop
mov
and
subl
ds
xor
mov
outsb
add
jne
stos
clc
lock
xchg
mov
adc
addr16
fisubrs
les
mov
adc
add
jo
in
addr16
cs
rolb
imul
movsb
inc
clc
cmpsb
mov
mov
xchg
push
push
pop
cmp
notl
test
adc
in
cmpsl
push
in
repz
mov
inc
fisubrs
inc
flds
adc
adc
pop
cmpsl
adc
push
imul
cmp
add
mov
daa
push
pop
shl
pop
rclb
lock
in
sbb
jl
ffree
mov
mov
dec
mov
insb
inc
mov
inc
push
mov
mov
loop
in
or
push
js
sbb
mov
push
aaa
lds
enter
imul
aas
test
jge
fwait
shll
sub
addr16
stos
fstpt
add
inc
cmc
mov
adc
ds
outsl
loop
cmc
push
out
ds
aaa
in
adc
adc
add
cmp
lods
push
mov
push
dec
loop
cmp
jo
movsb
dec
mov
sub
scas
push
scas
jnp
or
movsl
mov
pop
xor
xlat
dec
imul
xchg
jp
popf
xchg
mov
mov
mov
std
dec
mov
inc
mov
aad
cmp
xor
jg
test
jne
inc
xchg
shrl
into
enter
xchg
push
stc
cmp
negl
fimuls
fbld
xchg
sahf
jae
dec
out
out
cld
xchg
mov
xor
push
aam
outsl
fwait
xchg
jnp
dec
and
andl
add
push
idiv
dec
jno
ja
mov
insl
jno
pop
call
stos
pusha
lret
push
movsb
pushf
adc
adc
rolb
test
outsb
loopne
push
pop
loopne
repnz
xor
lret
dec
loopne
pop
pop
scas
jno
divl
mov
push
notb
sbb
int3
aas
adc
xchg
fsts
cmp
mov
mov
push
mov
iret
ljmp
push
adcb
inc
clc
jmp
data16
mov
mov
dec
add
push
loopne
lock
xchg
xchg
mov
and
mov
je
jp
cli
sub
nop
dec
cmpsb
dec
jno
cmp
jge
xchg
pop
int
call
test
pop
mov
test
jge
inc
fisubs
rorb
mov
cmc
pop
repz
in
movsb
out
push
mov
sub
or
shll
loope
inc
int
mov
sbb
stc
inc
loop
out
call
out
inc
or
sub
das
adc
int3
sbb
jecxz
jno
xchg
or
out
jne
xor
inc
inc
and
dec
jb
sbb
mov
pop
outsb
dec
movsb
mov
js
mov
stc
nop
xor
push
jno
cld
xor
add
div
jge
bound
xor
leavew
mov
sarb
scas
mov
jbe
idivl
dec
add
jecxz
or
dec
test
call
xchg
ja
rcr
das
cmpsl
and
fwait
test
arpl
push
out
mov
jl
dec
adc
lret
in
and
movsl
sub
in
lret
pop
aaa
test
out
mov
scas
test
call
jecxz
test
mov
xlat
sbb
cwtl
pop
sahf
jb
mov
push
sbb
in
inc
ds
loope
mov
jg
add
adc
mov
fnsave
iret
or
cmpsb
sub
inc
not
lds
and
sub
mov
fnstcw
pop
addr16
lahf
shrb
ljmp
inc
cltd
jnp
imul
jp
xchg
add
push
insb
std
and
pop
xor
jbe
mov
popa
jecxz
mov
fisttpl
rcrl
les
sub
and
fistps
mov
sub
sbb
lods
fstl
pop
scas
xor
call
bound
rorl
pop
and
hlt
ds
inc
sti
ficoms
mov
loopne
push
push
in
sbb
xor
inc
outsl
fwait
loop
push
mov
and
xchg
jae
lahf
mov
sub
jae
inc
push
fcom
movsl
and
inc
lds
call
inc
ss
sbb
pop
stos
lods
inc
outsl
mov
mov
cmp
mov
and
dec
dec
pop
dec
pop
daa
leave
mov
fsubs
in
pusha
pop
push
cld
test
pushf
fwait
call
pop
sbb
adcb
rol
mov
pop
inc
aam
inc
pop
xor
pop
mov
stos
mov
gs
pop
fld1
push
jb
sub
mov
test
mov
pushl
rolb
and
mov
xor
xchg
lahf
add
dec
outsl
sahf
test
mov
inc
sbb
jmp
jne
mov
adc
sub
cld
add
mov
test
fs
jp
into
test
movsb
cli
push
test
subb
cld
jo
mov
or
pop
sub
js
sub
sbb
xor
cmpl
mov
test
imul
scas
push
push
imul
xorl
jnp
dec
bound
or
jae
das
fcom
loop
movsl
dec
sbb
mov
add
mov
push
xor
push
xlat
fistl
push
bound
jns
fnstcw
lahf
adc
cmp
imul
sub
or
inc
je
sub
std
inc
je
in
fdivrl
filds
mov
orb
and
pop
jmp
mov
div
jb
xor
cmp
dec
test
pop
push
out
jmp
xor
sbb
cs
cs
in
ds
out
lret
or
loopne
movsb
pop
mov
imulb
push
cmp
dec
or
or
xchg
xor
mov
pop
cmp
push
jne
xchg
out
dec
mov
rclb
ffree
sub
mov
push
adc
xchg
push
gs
jge
sbb
mov
jle
jnp
out
sbb
mov
xor
lock
jecxz
jmp
push
inc
push
pop
pushf
lret
cmpsb
and
sbb
shll
lds
push
and
lds
pushf
xchg
sbb
jp
xchg
and
cmpsb
cwtl
rcrl
adc
and
xor
loope
test
rolb
mov
sub
and
add
lcall
fadd
je
xchg
adc
pop
cmp
jnp
pop
push
lcall
sahf
mov
pushf
int
mov
ficompl
inc
push
dec
test
sbb
movsb
stc
mov
or
add
cwtl
pop
sahf
add
or
add
ror
push
imull
es
inc
int
pop
cmp
and
mov
push
pop
jne
mov
xchg
mov
and
data16
nop
pushf
inc
push
inc
aad
sub
xchg
fs
call
mov
push
hlt
ret
lods
je
out
lahf
jb
xchg
int3
push
popl
orl
cmpsb
ss
jbe
jl
mov
mov
clc
inc
adc
ficompl
or
out
xor
or
shll
add
pop
imul
stos
push
push
xchg
adc
add
cmp
in
leave
push
popa
movb
fmul
sbb
mov
and
adc
cmp
test
test
push
push
cmp
les
mov
outsl
clc
push
jg
fwait
pusha
jb
mov
add
mov
out
push
pop
jne
jge
jnp
jno
mov
orb
cs
xchg
mov
jge
sbb
fs
mov
rcll
jo
adc
jnp
adc
xlat
cmpsl
mov
call
dec
cs
sub
mulb
or
and
dec
in
inc
sbb
mov
jge
adc
mov
pop
jb
adc
loope
cmpsl
xchg
je
popf
pop
dec
jns
sarl
call
dec
stc
or
faddl
insl
les
mov
lret
ja
xor
adc
and
or
jl
pop
pop
fdivl
fsubl
subb
mov
and
mov
pop
xor
adc
sbb
and
pushf
out
arpl
inc
jnp
stos
push
shl
jno
mov
inc
pop
inc
rcr
scas
and
subb
cli
cld
pop
cmp
and
aaa
jns
push
dec
leave
mov
stos
jmp
and
ss
fisttps
cltd
sub
nop
lods
mov
lds
adc
in
fs
inc
mov
jge
inc
out
mov
ja
cmp
lahf
dec
test
enter
and
fwait
lcall
pop
add
lea
xchg
push
in
pop
xchg
pop
clc
ljmp
mov
cld
test
dec
pusha
lds
mov
mov
jo
cmp
xor
movsl
cwtl
sti
bound
loop
out
pop
jecxz
inc
rcl
imul
pushw
pop
xchg
fcompl
or
aaa
mov
iret
mov
or
testl
stc
bound
and
xor
dec
lods
pusha
mov
mov
loopne
dec
mov
sbbl
rcr
ja
call
scas
icebp
xor
add
lret
jne
out
or
dec
mov
mov
pop
or
mov
add
loop
cmp
xchg
cmp
cmp
setb
popf
pop
ret
pop
sti
lock
mov
mov
mov
add
inc
jnp
outsb
andb
sahf
push
dec
mov
sub
shll
xchg
and
xchg
push
push
pop
push
ret
add
mov
dec
lods
mov
add
xor
cli
bound
sub
cmpl
lock
jmp
ds
out
dec
push
xlat
test
xchg
cmpsl
xchg
sub
jb
push
pop
dec
fsts
push
cld
leave
daa
test
std
mov
stc
aas
lahf
fxch
les
push
jo
dec
and
sti
outsb
aam
mov
jmp
inc
inc
fsubrs
pop
fsubp
stos
mov
adc
je
cmp
stos
call
fisttpl
jb
inc
ror
out
push
fidivl
cmpb
pop
popa
bound
cmp
push
sbb
leave
test
jo
lcall
xchg
add
in
rorb
xorb
loope
jle
hlt
jns
dec
pavgb
mov
fwait
mov
cltd
mov
and
sarb
push
loop
outsl
out
lock
sbb
in
cmpsl
pusha
mov
out
sbb
add
inc
es
aad
inc
sub
arpl
nop
subl
cs
jmp
pop
mov
pop
dec
lds
mov
mov
lods
clc
add
add
lods
loope
xor
pusha
mov
lahf
mov
push
pop
scas
test
lahf
and
imul
sub
mov
pop
xchg
scas
add
jb
adc
in
dec
push
mov
xor
or
ret
andb
in
test
rclb
add
mov
mov
sbb
int
loop
push
cmpsl
cmpsb
sub
cmpsl
icebp
mov
or
shr
rcr
mov
movsl
cmp
jnp
mov
lods
lods
mov
push
nop
pop
ss
popa
loop
mov
cmp
mov
pop
ljmp
mov
in
pop
stos
stos
aas
stc
dec
sbb
xchg
stos
ret
xchg
mov
mov
cwtl
pushf
pop
in
mov
imul
xchg
dec
ss
mov
data16
dec
nop
xor
and
mov
inc
test
aad
leave
loopne
sbb
or
push
imul
movsl
pop
or
repnz
pusha
loop
adc
jmp
outsb
leave
mov
or
nop
call
mov
mov
lock
rcll
mov
jecxz
and
xor
add
repnz
pop
shrl
add
sub
fs
lods
pop
xor
xlat
rolb
push
sar
clc
adc
mov
mov
popa
inc
insl
adc
cmp
pop
xchg
addr16
scas
lret
jmp
mov
leave
mov
and
ss
and
fwait
loope
jmp
int
mov
fldt
and
jecxz
imul
test
mov
cmp
movsb
iret
mov
hlt
rcrb
enter
idivb
inc
test
and
nop
ret
aam
add
out
pop
push
inc
mov
xchg
dec
popa
lea
or
in
rcrl
rcll
xchg
sub
in
lods
xor
push
xlat
andl
xchg
sti
mov
in
scas
or
cmpsb
push
popf
add
mov
jnp
push
mov
test
jle
es
mov
xor
into
and
in
sub
xor
cwtl
fs
or
sub
xchg
mov
adc
addb
inc
dec
scas
adc
add
bound
out
pop
fisttps
stos
jns
dec
sub
je
orl
sub
mov
outsl
ret
sub
jne
int
in
clc
and
jne
mov
cld
aam
xor
ret
add
inc
insb
sub
or
dec
in
test
icebp
xchg
outsb
jl
or
push
dec
mov
shll
inc
lahf
and
rorb
push
out
test
inc
pop
sub
bound
hlt
ss
test
inc
xorl
push
cmp
adc
xor
jbe
int
mov
jae
jb
mov
xchg
cmpb
mov
test
aad
mov
clc
push
mov
lcall
xor
jl
sti
dec
test
arpl
fstl
enter
repz
fcmovu
add
pop
jg
inc
repz
cmpsl
xor
lret
and
sub
testl
orl
cmp
pop
mov
jo
xchg
ljmp
sbb
hlt
out
cmp
rcll
mov
mov
jae
jp
loopne
test
pushf
loop
lds
cmp
aad
fs
pop
faddp
ficomps
xchg
int
push
mov
stc
out
pop
fiaddl
hlt
jecxz
xorl
int
fistpl
mov
sti
mov
test
dec
push
sub
inc
jle
jg
adc
addr16
xor
ljmp
vpcmpeqw
sbb
bnd
out
fldl
das
dec
fldln2
out
xor
jb
aad
enter
jp
ljmp
cmp
xchg
dec
cwtl
addr16
cmp
loope
mov
sub
int
fdiv
imulb
push
cli
mov
push
pop
out
cmp
insb
fwait
test
sub
outsb
mov
adc
out
int3
dec
scas
sarb
ss
sarl
jecxz
jae
jp
sbb
rcr
nop
sbb
dec
and
push
sti
and
shl
pop
dec
mov
jne
mov
or
out
mov
push
les
clc
pop
mov
insb
call
outsb
xor
add
jmp
pop
jge
fdivrl
insl
or
jbe
je
subb
movsb
sbb
lock
jno
out
cltd
jae
addl
or
test
sti
orb
aaa
xchg
sti
aad
inc
popa
loopne
push
fcompl
inc
cs
lret
add
mov
add
xlat
and
loopne
outsb
xchg
pop
popa
mov
pop
pop
push
jo
jns
shll
fs
sbb
aam
add
data16
fimull
push
jo
mov
pop
inc
sahf
fldl
ret
test
test
xchg
add
mov
xlat
adc
fsubrs
mov
int
ja
and
xchg
lds
pop
push
cmp
mov
mov
in
fdivs
movsb
sbb
sbb
repz
test
pop
mov
push
sub
jnp
push
and
or
push
enter
push
cmp
add
in
xchg
push
aaa
insl
in
mov
xchg
dec
test
fwait
xor
cmpsl
ds
out
and
and
push
scas
mov
cli
and
push
jnp
mov
and
out
or
xlat
xor
test
mulb
and
insb
adc
clc
fsubs
and
mov
adc
sbb
pop
aas
arpl
dec
sarl
aam
cld
mov
outsb
pushf
inc
roll
ret
adc
stos
cmp
loop
pop
dec
jmp
add
dec
sub
test
pop
es
ret
add
mov
sbb
sbb
pop
lods
cmp
popa
mov
pop
xchg
push
in
sbb
sbb
aaa
sub
mov
push
sti
adc
hlt
clc
pop
in
mov
jle
or
jne
xorl
mov
dec
loop
insb
or
sarb
int
mov
push
inc
mov
ret
inc
push
jbe
mov
pop
xchg
nop
push
test
jl
popa
xor
fcom
sub
dec
aas
cwtl
movsb
cmp
lea
ljmp
cmp
xchg
cmp
mov
cld
mov
and
decb
dec
out
pop
pop
aas
cmpsl
push
sub
pop
adc
xor
mov
mov
addr16
push
cmp
push
adc
ret
sbb
out
int
cmp
in
lods
xlat
adcw
mov
cwtl
aas
pusha
inc
int3
enter
xchg
mov
mov
fbld
or
filds
lods
stos
xchg
mov
aam
and
stc
fwait
mov
or
dec
ljmp
into
sar
imul
sti
sub
sbb
insl
bound
dec
loope
pop
leave
xchg
mulb
adc
sub
pushf
mov
xchg
sub
inc
dec
outsb
enter
xchg
out
sub
push
mull
rcll
insl
lcall
pop
test
jg
push
adc
lds
cli
pop
cmp
cmc
roll
or
jecxz
jno
out
adc
mov
lods
in
es
jno
cltd
mov
sub
push
hlt
movsb
icebp
ds
aas
dec
add
sbb
dec
push
cli
xchg
flds
xchg
cmpsb
fdiv
jnp
or
fld
xchg
imul
or
fs
dec
sbb
arpl
and
cmpsb
add
enter
pop
mov
hlt
mov
sub
ja
or
xor
std
je
lds
outsb
scas
mov
dec
dec
push
cmc
cwtl
enter
or
inc
pop
in
ds
jnp
cmp
inc
mov
pop
push
fs
sub
movsl
jmp
popf
shll
and
js
and
sbb
or
fsubp
mov
xorl
push
in
push
sti
in
xchg
and
mov
icebp
cmp
fcomps
leave
scas
jbe
mov
mov
inc
out
sahf
out
pop
add
ljmp
push
dec
and
ss
pop
ss
loop
sub
data16
aam
mov
paddw
cmp
pop
pop
mov
jae
or
push
into
ficomps
add
inc
jp
jnp
mov
mov
dec
sub
jb
and
mov
mov
cmp
pop
sar
pop
push
aaa
hlt
stos
xor
jns
mov
rclb
out
sti
lock
or
cmp
xchg
enter
xor
out
call
in
sub
mov
scas
sbb
into
sub
cmp
arpl
adc
mov
jnp
jecxz
pop
movsl
inc
mov
stc
repz
xchg
inc
test
test
fiadds
xor
pusha
aaa
jo
fstl
mov
hlt
imul
out
sbb
scas
dec
dec
pop
insl
cmc
insl
stos
mov
pop
xchg
ja
fs
jne
ss
push
inc
andl
xor
lret
fdivrs
leave
adc
mov
and
ja
cmp
lods
and
repnz
mov
stos
mov
mov
pop
hlt
lahf
jle
jne
mov
popf
xacquire
jne
insb
or
icebp
cmp
mov
lret
mov
jmp
adc
lock
int
in
rcll
sbb
cmp
push
cmp
xlat
in
fldt
inc
test
pop
lcall
push
dec
fucomp
ret
cmpb
lock
mov
lock
ds
sub
cmp
pop
stc
push
aaa
out
mov
mov
xchg
fnstcw
adc
arpl
inc
sarb
bound
dec
les
jecxz
loop
pop
pop
cld
fisttpll
imul
lret
stc
out
push
fwait
sbb
iret
push
mov
or
ja
fs
aaa
mov
pop
mov
and
pusha
add
mov
dec
xor
jno
sbb
repnz
jp
int3
jns
push
cmp
js
hlt
popa
rorl
or
imulb
insl
jle
dec
stc
mov
mov
pop
xchg
gs
outsb
jnp
out
push
sub
sub
lcall
dec
and
jmp
and
push
and
push
mov
stos
out
icebp
inc
adc
iret
andl
inc
sbb
xchg
add
adc
adc
in
outsb
mov
arpl
xchg
xchg
cltd
or
in
fucomip
stc
xchg
std
sub
lock
loope
adc
lea
popa
mov
divl
xor
cld
ror
jle
jno
ljmp
add
lods
lahf
mov
xchg
sub
push
xchg
loopne
int3
cmp
and
orb
mov
mov
jmp
repz
xor
ss
lods
push
sbb
mov
and
cmp
cmp
xchg
mov
je
adc
test
lret
ss
add
test
mov
xchg
xor
js
inc
in
or
lea
out
xor
fsubrs
orb
cltd
js
cmp
or
ja
xchg
and
cmpsl
add
enter
loop
clc
sub
mov
in
ret
adc
scas
mov
add
jge
icebp
ret
pop
test
mov
cmc
out
sbb
popa
fildl
stos
lret
mov
clc
sbb
pop
insl
cmp
sub
xchg
pusha
mov
das
rclb
push
or
pop
stos
sub
mov
jo
mov
cmpsl
mov
sbb
or
xor
push
gs
inc
adc
jo
xchg
cmp
mov
sub
push
stos
std
jp
stc
imul
mov
mov
xor
xor
dec
xchg
sub
nop
daa
popf
mov
mov
stos
ss
out
mov
repnz
nop
les
dec
scas
xchg
out
push
lock
jo
jle
shll
jns
mov
cmp
out
pop
mov
rcrb
icebp
xchg
andb
xor
mov
mov
stc
das
inc
cmpsl
mov
xchg
loope
mov
aam
fstpt
sub
faddp
lcall
rcl
jp
mov
mov
in
jae
daa
mov
imul
in
js
sub
mov
loopne
xor
test
or
ds
xchg
adc
mov
push
dec
nop
jge
pop
inc
mov
sbb
adc
xchg
adc
xor
fwait
adc
out
lods
xor
and
pinsrw
adc
push
push
dec
pusha
xlat
movsl
and
push
mov
mov
sar
cwtl
lahf
hlt
cmp
xlat
js
sbb
rcrb
or
movsb
jb
push
and
notl
fwait
jnp
dec
jmp
adc
xchg
cmp
fcmovnu
mov
xor
lds
jnp
cmp
leave
fistps
xchg
test
ljmp
mov
mov
in
loop
xor
daa
add
or
sbb
into
les
outsl
push
addr16
and
aaa
sbb
inc
xor
adc
jo
sub
jle
std
ret
shlb
adc
insb
cmp
or
outsb
sbb
test
pop
xchg
lods
cmp
ficoml
mov
mov
dec
cmp
unpcklps
add
pop
cmp
test
dec
dec
daa
out
iret
xchg
jge
sbb
das
sbb
loope
mov
or
daa
pop
cmp
inc
push
imul
mov
andl
jle
loopne
mov
or
dec
cmp
or
xlat
lret
movsl
adc
sub
and
dec
push
fcmovbe
stos
jb
xor
and
or
or
int3
xor
int3
or
icebp
shrl
and
inc
fistpl
insb
ret
pushf
out
int3
call
outsl
adc
shll
sbb
or
pop
add
enter
inc
and
fsts
dec
jns
test
and
or
xchg
fwait
xchg
xchg
fnstcw
mov
data16
or
in
loope
xchg
loopne
into
stos
jb
and
mov
inc
movsl
sti
inc
sbb
ljmp
enter
mov
das
in
iret
ret
dec
pop
inc
mov
push
xlat
mov
mov
mov
in
jo
xor
inc
cmpsb
femms
dec
mov
loopne
sub
jnp
loop
lds
push
test
pushf
pop
xor
mov
mov
push
movsb
sbbb
test
dec
ljmp
scas
mov
cmc
xchg
push
imul
sti
fsts
xchg
cld
push
jne
inc
fnstcw
rclb
addr16
push
movsl
out
jle
adc
mov
xchg
pop
in
repnz
arpl
popa
addl
lods
insl
aas
fidivrs
push
lret
lcall
or
or
push
mov
test
and
jo
adc
jg
add
pop
stos
bnd
and
xchg
das
push
add
in
pop
xchg
pop
mov
adc
adc
test
nop
popf
pop
insl
sub
push
push
push
orl
daa
nop
mov
test
dec
sti
add
lret
jp
insl
lcall
lea
pop
test
faddl
jecxz
shlb
mov
xchg
dec
nop
insb
movsb
or
jg
fxtract
dec
and
and
out
mov
insl
cmp
rolb
cmp
fists
cli
xchg
or
es
fcmovu
cmp
aam
loop
outsl
insl
cmpsl
mov
jno
xlat
insl
sub
push
jle
adc
add
cmovb
xorb
dec
ljmp
xchg
aas
insb
push
enter
pop
xchg
adc
add
shll
out
mov
sbb
fldenv
push
push
dec
out
into
test
pop
inc
push
enter
call
mov
int3
clc
jmp
sahf
cmp
sub
jle
sbb
dec
imul
fildl
jp
out
cld
sbb
popf
pop
es
sub
ja
xchg
sub
movsl
daa
pop
push
mov
sub
sbb
sbbl
or
lret
jmp
call
in
leave
or
cmp
pop
stos
push
pop
lods
in
pop
cmp
es
mov
push
xchg
mov
lret
cld
addr16
js
cli
jb
arpl
movsl
adc
hlt
notb
les
lds
push
mov
popa
mov
ljmp
cli
nop
daa
scas
pusha
stc
xchg
push
popf
mov
cmp
push
test
push
loope
jle
sub
cmpb
scas
dec
mov
or
inc
les
or
sub
insl
imul
fldenv
inc
and
adc
scas
pop
pusha
fisttpll
jne
adc
shrb
pop
sub
scas
stos
lret
lock
sbb
ja
icebp
mov
ljmp
push
mov
xlat
sbb
mov
mov
jp
sub
xchg
andb
je
adc
sub
inc
cmp
or
scas
pop
and
add
pop
sbbl
mov
mov
icebp
popf
bound
add
rcr
jl
test
pusha
lret
jb
leavew
cmp
push
aaa
lret
das
mov
adc
in
shlb
aad
push
mov
mov
fcmovu
cmc
out
out
loope
pop
xchg
jge
pop
jo
int
dec
mov
hlt
cmpsb
pop
popa
pop
mov
push
xchg
jne
neg
test
jge
and
sub
gs
aaa
mov
sbb
sahf
pop
jle
loope
add
mov
mov
and
inc
sbb
pop
mov
rclb
push
fidivs
cwtl
add
lock
mov
call
inc
cmpsl
rcll
mov
test
push
sub
inc
ficoml
mov
sub
enter
js
aad
clc
mov
popa
ss
cwtl
mov
adc
test
push
xor
loope
jp
rol
pop
test
icebp
test
andb
fs
lcall
jp
inc
aas
pop
xor
xor
add
mov
mov
rol
mov
arpl
mov
jge
sbb
pop
mov
jb
push
jmp
push
sti
ja
out
in
mov
sbb
adc
jmp
rcrl
pop
cli
cli
or
jp
stos
mov
sub
mov
shll
add
test
icebp
mov
stos
sbb
lret
lret
sub
push
push
arpl
and
push
loop
js
xchg
dec
les
inc
js
mov
filds
dec
dec
push
ds
clc
mov
push
popl
adc
enter
lods
push
add
cmp
std
cmpsb
adc
test
pusha
mov
and
loope
pop
shl
and
in
dec
xchg
dec
test
add
sub
in
mov
repz
pop
scas
mov
add
sbb
mov
mov
in
ljmp
cltd
xchg
fsts
fdivr
pop
inc
inc
add
jge
jmp
sbb
push
pop
inc
enter
xor
push
cmpsl
mov
repz
pop
movsl
into
mov
add
lods
mov
and
pop
fbstp
js
cli
mov
addr16
sbb
cmpsl
sbb
and
sub
hlt
adc
shll
xchg
rol
inc
popa
adc
push
call
xor
lods
test
mov
pop
xor
mov
or
pop
loopne
xor
stc
repz
inc
and
jg
repz
inc
sahf
inc
hlt
pop
test
pop
and
leave
outsl
mov
cmp
stos
fcomps
and
pop
in
jno
loop
outsb
fwait
dec
int3
jae
in
xor
dec
std
pop
inc
in
addr16
pop
pop
cmp
in
iret
hlt
pop
mov
or
out
rorl
lahf
test
cwtl
loopne
out
or
adc
pushf
xchg
xor
mov
xor
xchg
dec
mov
xchg
mov
dec
dec
fsubrs
push
orl
popl
test
int3
fwait
popa
lds
test
pop
outsl
test
cs
xor
fisubs
imul
pop
mov
dec
push
cmp
jb
add
pusha
mov
outsl
sbb
add
pop
nop
sbbb
xchg
jbe
outsl
adc
xorb
int3
mov
mov
push
sbb
xchg
lea
mov
adc
xchg
lcall
outsb
cmp
mov
jl
lock
lahf
add
js
es
stos
xor
addl
or
enter
mov
push
std
xchg
jb
jge
fisttps
xchg
dec
mov
sub
jbe
mov
ss
dec
adc
pop
outsl
in
movsb
push
jmp
subb
dec
dec
cwtl
jns
stc
lea
sub
pop
push
in
gs
loopne
ja
sub
mov
xchg
cmp
lods
mov
addr16
mov
push
scas
adc
popa
inc
sbb
cwtl
aas
loop
push
mov
push
jno
in
adc
pop
mov
xor
inc
xchg
test
popf
gs
push
dec
adc
popf
gs
push
aad
pop
scas
dec
jb
xlat
stos
sbb
cwtl
or
push
fisubl
maskmovq
aam
mov
push
aad
pop
scas
push
lods
ret
push
lret
cmp
icebp
mov
sbbl
inc
aaa
xchg
int3
int3
fdivr
or
inc
popf
hlt
rorl
stc
rclb
insb
jp
rol
mov
pand
sbb
addr16
pushf
sbb
ja
jecxz
dec
aam
cld
jg
sbb
popf
lret
dec
pop
pop
xchg
xchg
xorb
jne
sti
mov
sahf
pop
xchg
je
sub
in
dec
jno
fbstp
jns
sub
dec
adc
aaa
or
mov
in
push
mov
add
mov
adcb
lods
push
mov
int3
mov
mov
lods
out
jecxz
mov
and
insl
xor
leave
mov
ds
push
adc
outsl
bound
ja
scas
das
dec
push
adc
mov
aas
jl
inc
arpl
push
test
jg
pop
cmpsl
xor
sahf
je
jno
fs
popa
dec
addr16
cli
mov
cmp
fbstp
xchg
scas
cltd
dec
nop
loopne
sub
es
jp
jb
xchg
sti
pop
pop
clc
dec
or
aam
aam
std
xor
mov
jno
shlb
stc
inc
and
xchg
in
loopne
loopne
icebp
jmp
mov
sbb
testb
mov
cltd
pop
mov
mov
mov
cmp
xor
add
sbb
pop
mov
pop
loope
movsb
xor
movlps
sbb
cmp
lock
insb
bound
adc
sahf
in
sbb
fstpt
dec
mov
call
mov
fcomip
mov
scas
push
scas
jp
fsubl
fisttps
jae
nop
cmp
insb
cli
movl
dec
or
lods
cmp
sbb
rol
cld
fisttps
call
mov
fisttpl
or
sbb
mov
iret
jae
xor
scas
outsb
xchg
fmull
push
xchg
stc
jnp
adc
repnz
push
aad
pushf
repz
dec
lock
xchg
lcall
movsl
dec
scas
sahf
cmp
jae
push
mov
cmc
loop
in
and
cs
sub
add
insb
and
and
sbb
fscale
push
pop
ss
sbb
mov
and
mov
pushf
push
xlat
cmpsb
mov
push
jl
test
fldt
mov
sub
cltd
dec
ret
hlt
lcall
stos
faddl
rorl
popf
movsb
add
sub
sub
and
aad
jg
mov
xor
fadds
enter
popl
les
clc
in
outsl
addb
lret
movb
rcrl
loope
jne
popf
add
cltd
cwtl
int3
mov
clc
lods
xchg
addr16
mov
pushf
fdivs
sbb
aam
adc
lods
inc
popf
insl
or
and
jae
lret
daa
mov
lret
aam
out
mov
popf
ljmp
add
aad
sbb
xchg
out
sub
mov
dec
lds
ret
ds
in
inc
push
faddl
aas
leave
and
sti
jb
push
out
sbb
es
clc
and
ja
mov
xchg
cmp
xor
mov
scas
addl
jmp
out
jmp
adc
jp
xchg
cs
mov
hlt
inc
sbb
mov
jae
sub
repnz
sbb
pop
jne
mov
popa
movsl
and
roll
jno
or
test
sub
mov
stc
in
cmc
pop
adc
aas
xchg
or
and
fbstp
and
dec
sbb
add
mov
nop
data16
cmp
xor
jbe
xor
sub
stos
or
pop
xchg
sbb
mov
loope
pop
dec
add
pop
jl
xor
mov
hlt
jle
adc
cmc
mov
cmpsb
lods
notl
sar
dec
mov
or
mul
mov
and
xor
mov
mov
je
push
daa
out
sbb
pop
or
es
xlat
push
call
call
sub
mov
cli
js
inc
or
clc
mov
ds
pop
mov
push
inc
pop
dec
jbe
roll
jb
add
packsswb
hlt
fs
mov
sbb
aaa
shl
movsb
jo
lahf
push
jne
sbb
mov
scas
sbb
mov
notw
sub
hlt
xchg
insb
stc
sub
jmp
mov
ret
mov
inc
movsl
inc
pop
or
lret
dec
cmp
and
ljmp
lret
fidivl
or
mov
push
pusha
or
loope
push
cmp
fnsave
jbe
jno
mov
es
lahf
pusha
inc
enter
imul
shlb
addr16
push
dec
jl
ds
adc
cld
or
bound
pop
in
sub
loope
lock
bound
gs
data16
aaa
fcmovnbe
jg
inc
mov
sbb
push
mov
ret
cmc
test
jno
mov
jp
mov
andb
mov
push
dec
dec
mov
or
pop
jbe
push
ror
mov
inc
mov
mov
adc
nop
gs
jg
add
push
inc
xor
adc
xor
pusha
sbb
into
ss
repz
push
insl
lcall
inc
ret
sbb
xor
push
or
loop
js
andb
lock
xchg
and
js
movsb
ss
xor
fidivrs
cmp
xlat
push
mov
mov
sbb
fcompl
mov
sarl
ja
scas
sarl
outsb
in
loopne
fwait
push
jo
lods
xchg
gs
bnd
sbb
ds
lea
rolb
mov
lret
xor
mov
mov
push
adc
jecxz
push
pop
adc
hlt
repz
inc
push
xchg
and
and
call
add
jle
jne
leave
jmp
rclb
outsb
outsl
mov
test
in
inc
repnz
aam
aas
sahf
mov
jae
jl
pop
stos
adc
fisubrs
push
dec
dec
and
inc
mov
cltd
sub
lcall
fsin
or
push
call
mov
push
mov
sahf
cld
scas
repz
pop
add
arpl
sbb
mov
aad
add
jge
ljmp
push
repz
or
int3
jo
mov
mov
inc
jae
sub
bound
pusha
add
lcall
fs
xchg
jnp
jmp
xchg
adc
xlat
xor
repz
out
jl
push
insl
loop
leave
in
and
sahf
jmp
js
clc
mov
inc
fwait
lahf
xchg
ss
xor
mov
jp
inc
daa
out
loope
data16
aas
lock
mov
and
adc
and
push
or
mov
or
inc
dec
icebp
mov
rcrb
pop
mov
std
insb
aam
in
sbb
test
jge
jae
sbbb
push
call
decl
pop
xor
enter
in
jle
stos
data16
aam
mov
inc
and
pushw
jnp
loopne
mov
clc
dec
dec
sbb
mov
aaa
aad
js
push
loope
cmp
mov
xchg
out
scas
inc
shlb
push
mov
xchg
lcall
pop
mov
dec
jle
imul
adc
and
inc
shr
and
pop
arpl
pop
loopne
lahf
pop
call
dec
and
int3
jge
daa
test
test
push
js
shr
add
in
test
push
pop
imul
mov
add
xchg
popf
dec
jnp
sub
xor
sti
sub
lcall
jge
push
mov
add
cld
xor
inc
and
xor
mov
pop
bnd
sub
leave
jae
les
adc
pusha
mov
and
jmp
aas
mov
xchg
mov
xor
or
mov
jge
cs
xor
or
xchg
call
sbb
sbb
and
xchg
xorl
jb
cmp
cmp
lahf
adc
jne
mov
mov
jae
aad
testl
fiadds
cmpl
ret
lock
fildll
sub
imul
push
dec
jno
fwait
xor
and
cld
mov
or
and
adc
shrl
jne
ficomps
popa
sbb
push
sub
push
jp
sub
mov
jb
movsl
jo
or
sbb
flds
roll
andl
add
test
mov
xor
rorb
icebp
fnstcw
xchg
mov
cltd
xor
popf
jne
xchg
cmpsb
aam
push
sub
sbb
test
adc
fwait
enter
mov
pop
out
mov
pop
xlat
into
mov
fildll
into
sbb
gs
repnz
jnp
daa
pop
push
and
mov
pop
jnp
push
les
test
sbb
leave
cmpsb
fildll
insl
xor
xchg
popf
popa
and
repz
test
inc
ljmp
push
in
or
pop
adc
push
push
dec
les
and
test
pop
or
jecxz
jne
dec
fs
andb
mov
xlat
inc
sbb
sahf
cmpsl
out
mov
mov
out
mov
daa
mov
pop
sub
out
scas
stos
ror
cmpsb
cmp
leave
xor
insb
call
dec
fwait
movsl
stos
mov
pop
adc
test
in
gs
int
adc
jns
pop
sbb
negl
and
in
das
adc
add
mov
in
jl
fmull
push
mov
or
dec
jecxz
xchg
out
jecxz
xchg
xor
call
xchg
adc
mov
fldl
mov
pop
mov
inc
or
dec
or
jnp
fisubl
les
fldenv
mov
popf
ret
jbe
sub
push
xchg
sbb
add
jmp
add
dec
xlat
fldl
rcll
lea
xchg
iret
movsl
add
mov
push
jbe
pop
fistpl
int
pop
inc
mov
out
scas
xlat
call
push
in
mov
mov
cmp
mov
lods
mov
add
fcomps
and
fwait
out
and
fwait
add
aaa
fnstcw
adc
add
gs
cmp
jae
in
in
xchg
aaa
mov
cli
jne
sbb
and
repz
and
in
repz
hlt
xor
jmp
pop
sbb
in
mov
sbb
add
dec
dec
push
jp
idivb
hlt
lea
jb
addl
orb
test
imull
lods
jle
push
scas
das
push
push
jg
mov
or
fs
insb
pop
fdivr
push
sub
cltd
fwait
sbb
push
pop
mov
imul
mov
lds
out
push
jmp
fmull
std
cmp
add
push
jl
cmp
dec
stc
inc
pop
or
nop
mov
dec
or
test
arpl
xchg
cmpsl
push
jecxz
cmp
pop
pop
je
fldl2t
mov
sbb
mov
inc
ljmp
or
test
in
xor
xor
cltd
inc
aam
pop
imul
pop
jmp
aaa
or
test
xchg
stos
lods
insb
pusha
cmp
mov
mov
dec
xchg
xchg
mov
aas
dec
mov
je
or
test
inc
or
push
imull
js
cmp
sub
or
loope
ror
xor
in
cmp
or
mov
push
push
fisubrl
out
push
cmp
daa
imul
push
je
imul
imul
ja
mov
cltd
rorl
repnz
inc
mov
push
mov
dec
das
out
rcll
sub
dec
mov
stc
pop
negl
jne
dec
mov
xchg
ret
xchg
fidivrl
mov
rcr
jns
icebp
push
add
mov
add
mov
lds
xor
clc
test
fwait
out
xchg
push
imul
test
nop
imul
fbld
je
or
xchg
sub
inc
xor
or
xchg
sub
add
out
int
cmp
inc
jmp
xchg
push
outsl
clc
lret
repnz
pop
or
sahf
cmp
mov
data16
dec
add
and
xchg
pop
adc
incl
cmpsl
add
push
insl
xor
jns
adc
fnstsw
rorb
inc
jl
xor
xor
dec
addb
mov
arpl
push
mov
je
das
jl
xchg
xor
sub
aad
shlb
out
pop
xor
xor
es
cmp
dec
clc
lret
push
dec
outsb
negb
and
xor
push
mov
scas
int
pushf
pop
or
testb
mov
imul
dec
mov
in
out
lahf
adc
clc
loope
xlat
imul
sar
push
lret
cli
jae
mov
fsubr
inc
and
sar
jb
addl
ret
mov
imul
push
decl
cs
shrd
add
xchg
std
lcall
in
mov
sti
sub
test
lods
insl
das
cmc
push
in
cwtl
sbb
sarw
mov
xchg
add
gs
or
xchg
fsubr
call
mov
add
fimuls
adc
enter
aas
data16
cmp
mov
negb
imul
fisubrs
rol
dec
je
aam
shr
xchg
jecxz
mov
es
inc
divb
mov
xlat
stos
or
push
and
fdivs
and
sbb
pop
rcl
idivl
adc
xor
subb
imul
lret
cld
push
jne
push
cmpsl
shll
xchg
adc
xchg
dec
sbb
fucom
push
jg
pop
xor
mov
bound
sbb
adc
inc
or
aad
lahf
cmc
insl
push
mov
rorb
scas
das
sub
dec
iret
lock
add
dec
mov
fsts
pusha
cmpsb
xor
aam
repz
cmpsb
pushf
pop
mov
std
sub
mov
mov
icebp
lds
test
dec
inc
pop
fnstcw
shl
bound
mov
daa
mov
mov
leave
rcrl
orl
bnd
pop
popf
xchg
lahf
ljmp
cld
xchg
push
aam
fwait
arpl
inc
xchg
and
xchg
jne
xor
and
js
mov
movsl
push
pop
pop
lahf
xor
stc
insb
sbb
sti
test
dec
out
add
je
push
insl
pushf
scas
or
adc
out
inc
xchg
mov
adc
dec
xor
sbb
scas
pop
sub
les
add
je
or
pop
push
jo
leave
imulb
cmpsb
xor
int
mov
frstor
cli
and
hlt
inc
sub
sub
mov
imul
xlat
push
scas
js
add
std
stc
and
pop
push
jge
rol
cltd
stos
decl
dec
movsl
add
adc
mov
pop
pop
ret
mov
cwtl
jle
jp
leave
cmpb
subl
mov
cmc
cli
adc
mov
pop
add
scas
mul
sub
scas
lods
stc
daa
cmp
pop
sbb
lock
icebp
rcrl
xchg
and
jo
add
pop
xor
jecxz
rcrl
push
arpl
cmpsl
jge
sahf
out
inc
cltd
mov
and
das
pop
test
push
ret
js
es
dec
pop
mov
add
xchg
sahf
imul
nop
add
test
lret
push
cmp
notl
mov
dec
xor
lcall
lcall
call
in
les
jae
pop
pop
xchg
outsl
jns
int3
bound
mov
js
aas
jnp
pop
mov
cmpsl
test
jmp
cltd
mov
in
imul
rcl
adcb
mov
leave
inc
pop
ffreep
jmp
arpl
adc
push
sbb
jno
push
inc
mov
cwtl
repnz
int3
xor
ret
out
mov
arpl
and
add
add
adc
hlt
cmpsl
xor
pushf
pop
pop
sar
insl
dec
push
adc
ljmp
push
lds
mov
cmp
push
add
cltd
or
mov
jle
sbb
scas
or
xor
addl
xor
dec
jmp
jp
ret
pop
mov
mov
jl
test
sub
cs
dec
push
loope
mov
sti
pop
jae
push
repnz
sti
leave
insl
out
cmp
shrl
fisubl
imul
push
cmp
sub
dec
mov
test
fldcw
adc
mov
mov
xchg
xor
lods
dec
pusha
pushl
iret
into
sarb
cmp
out
mov
mov
adc
les
mov
dec
mov
sbb
jae
xchg
pop
popf
adc
mov
dec
or
test
lods
std
ja
add
scas
cmp
imul
sub
lock
jae
rcl
mov
mov
leave
call
or
add
pop
sub
rol
mov
adc
lea
aam
xor
add
add
es
jmp
cmp
jp
ds
ss
hlt
daa
sbb
push
pop
ljmp
lock
inc
cli
inc
mov
push
jae
iret
lock
dec
xor
icebp
mov
add
jmp
pop
adc
addr16
add
jge
fldl
add
gs
push
add
pop
stc
movsb
add
mov
sub
lods
or
jns
push
fs
sbb
les
push
repnz
ret
and
or
mov
cmpsl
jae
and
sahf
adc
roll
dec
vmread
sub
mov
lret
pop
sbb
push
into
cmp
mov
mov
jge
adc
jae
movsb
ja
jg
stc
icebp
mov
clc
or
or
pop
jne
sarb
mov
inc
xchg
insb
sub
push
call
sarl
test
add
xchg
ds
daa
xchg
adc
pop
std
sahf
sub
shr
and
das
jl
sub
out
scas
push
ds
sahf
push
pop
lds
and
xor
f2xm1
fwait
lahf
push
push
repnz
pop
add
pop
in
movsl
inc
push
xor
ret
mov
pop
adc
clc
jae
das
pop
jnp
arpl
leave
enter
call
adc
cmp
push
mov
ficomps
rcrb
jge
outsb
cs
xor
aam
cmp
inc
dec
loope
add
addb
dec
fwait
lea
ss
bound
mov
cmp
loop
sbb
int
test
addr16
sbb
into
outsb
lret
or
sub
push
fucomip
push
adcl
aad
pop
cltd
xor
lods
or
outsb
std
push
jo
push
rolb
adc
push
mov
mov
inc
pop
jecxz
aaa
ret
jns
add
push
int3
fisttps
lods
es
mov
addb
adc
sbb
ja
or
jg
sub
jo
mov
and
inc
xchg
dec
out
mov
mov
outsb
pop
mov
into
mov
insl
push
sub
and
loop
movsl
fcoml
mov
inc
inc
orl
test
or
and
push
sbb
lret
sbb
pusha
fwait
int3
loopne
nop
xor
insl
out
cmpsb
cmp
xor
pop
clc
out
lret
pop
jo
dec
inc
mov
inc
pop
dec
std
addr16
stos
xor
int3
mov
iret
mov
mov
push
xor
inc
fwait
pop
adc
stc
pop
stos
xchg
repnz
je
mov
and
dec
dec
mov
sarb
mov
fistpl
add
mov
into
sahf
cmp
fmull
jnp
push
dec
inc
pop
outsb
testb
std
test
cmc
push
adc
js
outsl
test
sar
repz
mov
fs
dec
scas
xor
jb
loop
add
addr16
movsl
imul
std
sub
test
aaa
sarb
mov
lea
hlt
cli
push
push
jmp
inc
lret
pushf
insl
lods
out
movsb
test
dec
ds
xlat
aam
pop
mov
jbe
hlt
test
loopne
stos
mov
shlb
jl
mov
xchg
sub
dec
lds
pop
lahf
sbb
divb
movsb
pop
mov
arpl
add
int
or
fld
insb
lock
and
pop
xlat
lret
add
xchg
ja
cmpsb
call
and
mulb
and
jae
or
xchg
xchg
pop
insl
mov
push
roll
mov
les
inc
gs
iret
add
sub
ljmp
jl
mov
insl
imul
dec
dec
sbb
pusha
ss
pushl
loope
adc
dec
and
adc
mov
and
lods
xchg
mov
mov
mov
je
pusha
into
ss
jo
inc
test
mov
dec
push
mov
iret
aas
shl
ficomps
mov
dec
rcrl
out
js
addb
leave
mov
sbb
leave
imul
sbb
fbstp
lds
or
faddl
inc
xchg
loopne
stc
xor
les
leave
fsubrs
stos
push
pop
jp
popa
mov
in
xchg
push
lds
lahf
mov
inc
outsb
scas
call
imul
xchg
adc
pop
lret
push
insb
cmp
fcom
test
lret
adc
or
dec
adc
pop
fptan
xchg
gs
or
hlt
cmp
into
add
jmp
mov
pushf
push
lret
pop
cmp
mov
js
jg
mov
mov
lret
aaa
aaa
push
loop
outsb
jnp
jne
dec
or
sbb
cmp
jns
outsb
lcall
enter
mov
dec
pop
mov
inc
xor
lock
cmpl
xor
ljmp
jl
pop
repnz
pop
inc
mov
es
inc
mov
inc
adcl
cmpsl
add
cs
mov
lea
push
pop
mov
mov
mov
popf
inc
add
leave
ficompl
dec
nop
scas
xor
js
xchg
pop
mov
sahf
shll
sub
lds
sti
xor
iret
ret
rorb
inc
clc
lods
jle
data16
repz
sub
aaa
js
push
clc
out
mov
fistpl
push
std
sub
push
lds
ret
dec
adc
outsb
stos
add
jnp
repz
sub
adc
inc
pusha
imul
shl
js
inc
out
jg
rclb
imul
xchg
mov
insl
or
sub
les
jmp
push
aas
or
dec
lea
xor
sub
pop
dec
jecxz
jns
stos
std
inc
mov
out
lds
mov
inc
sbb
cmp
jnp
xchg
mov
adc
mov
into
xor
loop
clc
or
mov
stc
add
inc
jecxz
pop
clc
mov
mov
lods
test
adc
or
jo
test
sub
jle
dec
inc
addl
inc
cwtl
push
lods
aam
popa
cmp
stos
inc
adc
xchg
cs
xor
bound
ljmp
xor
xchg
xchg
or
insb
out
push
loopne
fisubl
inc
gs
jno
lods
mov
cmpsb
mov
push
xchg
push
insl
bound
loop
mov
sahf
cmp
ja
mov
sbb
cs
iret
pop
and
call
arpl
mov
lea
es
fwait
inc
pop
int3
ret
xor
jp
push
mov
pop
and
ret
cwtl
xor
adc
xchg
pop
xor
jp
or
stos
push
dec
pop
xlat
mov
jnp
sahf
inc
add
dec
loopne
out
clc
mov
sub
pop
add
mov
xchg
or
icebp
aad
mov
test
adc
f2xm1
test
push
xor
push
dec
lds
in
sub
out
insl
aad
aas
stc
add
push
add
stc
xlat
enter
mov
pop
aam
outsl
fisttps
jle
inc
jb
mov
xchg
pushf
outsl
sub
mov
sub
inc
xchg
cmp
push
repnz
ljmp
and
pop
mov
jp,pt
jp
mov
out
dec
pop
je
aam
subb
andb
push
mov
stc
adc
cli
sbbl
sub
js
mov
fsubrl
hlt
data16
pushf
and
push
rorl
xchg
les
mov
sbb
adc
jae
sub
mov
cs
repnz
scas
xor
cmp
xor
testb
and
mov
dec
jg
lock
pcmpeqw
cmp
mov
cmp
mov
pop
sahf
lahf
pop
andnps
in
cmp
pop
add
xchg
jp
fcoml
xor
loop
push
cmp
ljmp
xor
jne
insl
jo
or
dec
sub
push
iret
call
push
jb
mov
lods
push
lods
ss
jbe
mov
pop
jne
pop
xchg
je
sub
lret
jp
ficompl
xchg
sbb
pop
cmp
gs
mov
cmp
sbb
cmc
pop
inc
or
negl
jnp
pop
xor
jns
mov
jmp
jge
sub
mov
lock
or
inc
mov
ficoms
call
sbb
mov
pop
out
outsl
fsts
test
or
sub
xchg
add
adc
jae
mov
push
int3
outsb
cmp
fistpll
pop
fisubl
pop
dec
mov
leave
test
dec
xchg
iret
daa
pop
rcrl
jmp
int3
addr16
or
and
xchg
cmp
loope
aaa
pushf
int3
dec
cmc
cltd
outsb
je,pt
adc
push
andb
mov
push
sti
jbe
loope
or
lea
sub
lret
fdivrl
icebp
sub
mov
dec
repz
pusha
outsb
icebp
sub
imul
sti
scas
mov
dec
jbe
fwait
ljmp
cs
push
pop
and
loopne
mov
mov
arpl
dec
lods
mov
xchg
push
nop
test
sub
and
jo
xlat
into
aas
add
daa
push
movsb
mov
std
inc
or
frstor
cmp
xor
rcl
jne
pop
and
or
pop
or
icebp
add
out
jmp
push
les
xchg
lock
cmc
pop
popf
fwait
lcall
mov
xor
insb
xchg
ja
scas
in
inc
inc
pushf
jp
pop
mov
stc
sarb
je
sub
cmpsb
xor
aad
dec
es
in
add
iretw
imul
lahf
fnstsw
mov
rcrb
cmp
movsb
push
xchg
mov
push
xor
mov
jge
push
cs
cli
sub
notl
mov
sbb
pop
lods
test
loope
push
inc
sti
lods
aad
lret
addr16
pop
push
mov
mov
adc
mov
gs
sub
jle
lcall
add
das
out
or
bound
sbb
dec
cmp
add
sub
and
mov
jl
mov
xlat
sahf
sbb
nop
cmp
mov
push
push
dec
adc
ja
push
lods
pop
lcall
fsts
mov
jecxz
pop
cld
add
mov
stos
mov
bound
negl
clc
mov
sbb
adc
cltd
addr16
xchg
lods
mul
xchg
lahf
inc
mov
xchg
repz
fmull
pop
gs
aad
repnz
dec
push
jns
add
outsb
sarl
cmc
sbb
leave
out
xchg
jns
mov
imul
lcall
push
and
push
and
outsb
nop
test
insb
ljmp
test
in
std
push
pop
imul
xor
sti
dec
push
mov
jge
pop
jae
sub
les
fmull
dec
mov
loope
fbstp
data16
sbb
sbb
rclb
mov
cmp
outsl
push
mov
into
fcomps
dec
push
push
jmp
and
inc
test
adc
popf
lods
mov
js
pmaddwd
scas
adc
add
je
mov
test
jp
and
mov
xchg
dec
and
rcr
and
loope
cld
cmovo
adc
gs
or
outsb
cmp
dec
mov
sahf
dec
dec
push
sarl
fidivs
xor
and
rcrb
std
pop
sub
pop
pusha
cmp
fcmovu
or
pop
and
or
dec
jp
fadds
mov
in
js
inc
mov
jl
and
ror
push
mov
adc
cs
cmp
xchg
jl
negb
popf
push
push
mov
shlb
cmp
cltd
ret
pop
dec
insl
ljmp
dec
in
dec
dec
repnz
loope
sbb
and
mov
sarb
data16
icebp
fld
das
das
cs
imul
sub
out
and
das
pop
int
push
xor
sub
pop
out
gs
inc
scas
sbb
sbb
mov
and
inc
cs
inc
stos
mov
sub
imul
sub
cli
mov
fisttpll
xor
test
xchg
ret
or
cmpl
add
gs
in
xor
xchg
cmp
repz
xchg
xor
loop
sub
inc
fmul
mov
stos
cmp
xor
rorb
jl
test
dec
enter
xchg
or
and
iret
imul
ret
push
jnp
aas
in
cmp
popf
faddp
rorl
lock
cmp
lds
xor
mov
dec
sbb
or
cmc
movsb
test
or
xor
dec
jo
pop
cmp
push
mov
fwait
mov
sub
sbb
int3
fiadds
add
es
rclb
mov
in
mov
sahf
jo
jecxz
sbb
loope
jp
push
lahf
out
jl
xchg
cmp
xchg
ljmp
pop
lods
test
ss
cmpsw
fldcw
repnz
hlt
adc
pusha
add
std
mov
inc
aad
pop
popa
sub
xchg
ds
or
imulb
inc
and
mov
jl
in
mov
daa
cmpsb
xchg
sub
cmp
push
or
fisttps
int
stos
lock
jnp
fidivrs
in
jbe
fmull
xchg
xchg
lahf
mov
out
out
aaa
adc
test
mov
mov
and
add
mov
mov
lea
ja
addr16
insb
outsl
repz
cmp
popa
mov
inc
lds
mov
clc
out
arpl
xchg
popa
inc
std
jl
mov
int3
jmp
sub
xor
push
cmp
in
arpl
cld
stos
icebp
lret
lea
cli
add
mov
int
stos
xchg
xor
addb
icebp
cli
add
out
dec
add
mov
icebp
rcrl
and
mov
add
mov
cld
xor
mov
addl
xchg
sbb
pop
dec
in
push
imul
xchg
loope
pop
sbb
out
fnstsw
lcall
in
std
sahf
adc
iret
pop
add
mov
sti
push
dec
mov
inc
jge
inc
lea
and
and
insl
outsb
push
sahf
jbe
xchg
es
movsl
ret
mov
mov
mov
add
fst
add
hlt
hlt
add
cwtl
sub
inc
cmpb
adc
mov
sbb
into
dec
mov
or
mov
movsl
sub
ret
jnp
xchg
sahf
mov
xlat
js
mov
popa
daa
pushf
clc
cmpsb
pop
ds
in
pushf
sbb
pop
rcrw
insl
jns
ja
imul
jno
roll
cwtl
popf
test
mov
ja
fmul
cmp
sti
stc
inc
push
pushf
scas
cmpb
stos
add
jno
insl
or
mov
lock
mov
xchg
std
lea
adc
es
jg
pop
push
lds
inc
lock
xor
mov
sub
imul
fwait
pusha
mov
cmc
jecxz
mov
mov
mov
pop
lea
mov
mul
or
sahf
hlt
in
or
icebp
pop
mov
mov
sub
mov
rclb
add
ret
jo
shll
and
sbb
push
lock
adc
dec
or
mov
insb
es
es
sbb
mov
mov
mov
nop
das
cltd
cli
jae
xor
mov
es
cmp
push
popf
in
loop
adc
mov
sarl
sbb
fimull
adc
jae
aad
clc
sbb
ja
cs
add
fwait
call
and
xchg
adc
shll
popf
negb
pop
int
rcr
mov
jb
shll
mov
sbb
iret
cmp
dec
jle
outsb
ja
dec
mov
xlat
push
jno
dec
clc
sub
dec
jae
push
mov
pop
xchg
jne
fcomps
sbb
push
aaa
mov
incl
jle
mov
bswap
out
add
jl
in
push
mov
mov
lcall
cld
cmc
or
test
out
xchg
sub
loop
adc
or
mov
das
mov
dec
mov
data16
outsl
mov
repnz
cmp
mov
push
sub
incb
aad
dec
sub
test
push
inc
rol
adc
sbb
jb
imul
sub
add
xchg
jbe
fcoml
repz
push
mov
movsl
mull
pop
in
cmc
addr16
mov
stc
jp
stc
or
fs
lahf
sbb
push
inc
inc
rclb
cmc
jnp
push
mov
pop
mov
inc
cmp
sbb
lret
fldl
dec
and
loopne
fimull
mov
add
enter
xchg
scas
pop
xchg
xchg
jp
sbb
mov
mov
xor
mov
jnp
adc
mov
cld
dec
lods
jne
jne
or
mov
jb
cli
jg
imull
fistps
movsb
mov
sub
pop
adc
mov
hlt
popf
sbb
lret
mul
icebp
stos
pop
cmp
cmp
popa
jo
enter
push
in
sub
lods
cmp
pop
gs
xor
imul
mov
adc
cmp
inc
in
jae
xchg
out
stos
sub
and
mov
sbb
push
cwtl
daa
scas
cld
lcall
jecxz
into
sbb
icebp
adc
sub
mov
mov
nop
or
in
xchg
imul
aad
jbe
pushf
clc
inc
adc
test
test
jnp
xchg
mov
dec
sarb
fidivl
pop
pop
pop
lea
mov
sbb
push
inc
or
insb
cmpsb
pop
mov
dec
sti
mov
or
jnp
sar
popl
pusha
icebp
pop
fsubrl
ja
add
stos
xchg
and
in
cmp
push
xchg
sbb
mov
or
xor
sti
mov
mov
popa
jge
std
enter
enter
es
inc
out
sub
mov
outsb
jmp
cs
pop
jns
int3
dec
lcall
and
pop
ret
fistpll
aas
xchg
test
andl
mov
cmpsl
aaa
test
mov
imul
sbb
mov
sub
ficomps
dec
xchg
mov
fbld
jge
cmp
jb
leave
nop
daa
lcall
adc
je
or
push
div
cltd
cmc
dec
in
rcrb
cwtl
push
test
add
movsl
adc
pop
shll
push
jecxz
inc
jbe
ret
bound
out
cs
xchg
lahf
lret
ret
fistpl
ss
or
popf
in
sbb
xchg
les
xor
inc
je
loopne
push
ret
xor
outsb
add
push
mov
outsw
fbstp
mulb
sti
ljmp
inc
movsb
push
sbb
adc
loope
mov
aas
xchg
pop
iret
arpl
scas
shlb
cmp
xchg
in
leave
and
data16
jae
cmpsb
xchg
inc
jl
cwtl
mov
inc
inc
sti
pop
inc
lock
cvtps2pd
dec
not
inc
adc
roll
mov
sub
cmpsb
test
fldenv
xchg
out
add
sbb
mov
cmp
fwait
adc
out
nop
inc
ss
jns
push
mov
push
insb
dec
popf
and
xor
mov
jle
push
cli
pop
fwait
stc
sbb
adc
sbb
xor
pop
into
pusha
jmp
jb
roll
lret
movsl
mov
cmpl
insb
stos
and
cld
out
dec
and
popf
inc
dec
and
pop
loopne
and
pushf
mov
push
mov
loop
sbb
sahf
shlb
jns
pop
das
pusha
leave
icebp
inc
cmp
cmp
inc
dec
mov
jmp
dec
jg
lods
movsl
pop
mov
mov
xlat
xchg
lock
mov
ret
ja
gs
sbb
xchg
repnz
push
bnd
aas
and
setge
movsb
add
cmpsb
xor
cmp
lds
sub
xchg
sbb
mov
adc
mov
jb
sub
ja
sbb
sub
add
fldenv
arpl
jb
aam
in
pop
dec
idivl
xlat
dec
lea
sub
pop
mov
and
mov
rorl
cmp
sbb
adc
popa
add
nop
sub
xchg
inc
lret
adc
nop
aam
into
dec
sbb
out
sbb
jb
sbb
and
adcb
hlt
xchg
pop
push
aaa
xchg
jmp
xchg
enter
hlt
xchg
mov
push
xor
gs
cmp
popa
pop
sahf
test
jnp
xchg
inc
scas
test
sbb
std
outsb
mov
fiaddl
sbb
movl
sub
inc
in
sub
inc
and
shlb
popa
js
push
dec
fldenv
sbb
or
fildll
or
js
fisubrl
jmp
cld
mov
in
das
insb
adc
jbe
push
aas
xor
lods
jnp
mov
mov
push
pop
jg
or
lret
sti
out
push
dec
leave
cmp
push
andl
mov
pop
rclb
nop
test
pop
xchg
aas
movsb
popf
int
mov
xlat
ret
push
inc
sbb
inc
and
cmpsb
pop
vmwrite
subl
adc
sub
mov
out
sbb
fcmovbe
das
mov
ljmp
cld
inc
cmp
outsb
xchg
and
js
mov
arpl
jmp
not
sub
fld
sti
insl
addr16
pop
dec
jns
sarl
dec
sbb
mov
aaa
vcvtpd2dq
int
dec
stos
adc
incb
ds
mov
adc
mov
cmc
negl
mov
fcompl
mov
into
push
mov
lcall
dec
pop
aas
pushf
inc
sbb
cli
mov
ds
stos
cli
jecxz
pop
sbb
mov
lahf
into
push
nop
pusha
test
mov
daa
add
je
inc
subl
pop
pop
loop
dec
push
add
ds
imul
fldl
xchg
and
push
or
int3
cmp
and
add
and
xor
fdivrl
mov
adc
mov
inc
mov
mov
xchg
sbb
push
push
pushf
lods
or
test
jae
add
jmp
mov
mov
cmpsl
mov
inc
or
hlt
push
stc
push
mov
repz
or
jae
mov
add
push
bnd
dec
cmp
push
popf
and
cmp
fdivs
out
xor
imul
fidivl
jne
scas
ja
lcall
pop
fistps
insl
pop
xor
dec
jg
adc
add
nop
mov
jne
push
sbb
cmpl
dec
cmp
pop
fisubs
outsb
fwait
mov
xchg
jl
addb
clc
adc
jge
pop
shrb
pushf
push
mov
push
repnz
in
push
push
pop
xchg
scas
arpl
mov
pop
ret
jno
test
pop
addr16
push
and
pop
fdivr
cmp
jne
mov
aas
cmpsl
cltd
fists
out
lods
jmp
fs
test
sbb
mov
out
xorl
or
sbb
push
push
sar
sub
out
mov
lods
push
out
aas
fsub
out
mov
cmp
jp
lds
int3
mov
xor
fnstsw
pop
or
xchg
sbb
lret
push
out
xchg
loop
inc
cmpsl
push
push
xor
lret
mov
push
and
jge
test
int
adc
dec
in
pop
fwait
dec
clc
mov
adc
stc
icebp
xor
inc
xchg
xchg
divps
mov
repz
fwait
add
pop
push
out
je
xchg
pushl
sub
jl,pt
or
mov
jnp
nop
jge
cmpb
test
xor
imul
popa
mov
or
and
xchg
mov
popf
cmp
outsl
imul
sbb
leave
inc
push
and
and
test
orb
test
or
mov
xor
push
leave
aaa
imull
jp
mov
gs
shl
hlt
fcmovne
cmp
push
adc
mov
int3
aaa
sub
das
loope
mov
cmp
out
sub
push
dec
mov
in
xlat
cwtl
ror
add
mov
nop
scas
xchg
cmpsl
and
addr16
sub
or
and
fwait
jo,pn
add
dec
aam
pop
test
fiadds
pop
out
mov
test
dec
adc
fs
int3
test
mov
jg
mov
and
fsub
cmp
push
shr
mov
dec
inc
sbb
dec
adc
mov
sub
pop
sub
ss
and
nop
jne
enter
xor
push
adc
orl
cmp
ja
dec
jge
pop
xchg
cmpsb
sbbl
data16
mov
jns
lret
enter
lret
jae
outsb
xlat
xchg
invd
xchg
or
shlb
pop
fisttpl
mov
xchg
pusha
inc
mov
jmp
and
bound
xchg
stos
fstp
testl
jmp
inc
in
iret
dec
pop
orl
jno
mov
add
movl
inc
add
nop
push
je
push
pop
iret
sub
mov
inc
les
xor
sbb
gs
sbb
fiaddl
movsb
push
mov
and
dec
test
sub
aaa
pushf
adc
pop
dec
xor
repnz
ds
cmc
add
dec
popa
push
in
fnsave
and
iret
test
add
aam
lods
jmp
mov
adc
pop
outsb
inc
cmc
in
test
int3
jne
mov
cmp
cmp
bound
dec
pop
scas
fistpll
outsb
enter
jmp
sub
push
daa
clc
loope
cmpb
scas
jns
mov
mov
mov
inc
cltd
into
xchg
and
dec
cltd
aaa
ljmp
mov
iret
mov
ficomps
testb
aaa
mov
hlt
or
fstps
and
xchg
sbb
mov
lret
popf
inc
inc
or
or
mov
mov
xor
sbb
mov
mov
cmp
loop
mov
fs
fimull
pop
lds
lods
and
jns
cmp
stc
and
and
arpl
jg
aad
push
pop
jmp
fwait
and
imul
mov
mov
testb
flds
push
pop
and
mov
push
sbbb
loop
xchg
lret
mov
adc
repnz
andl
outsl
dec
push
cmp
fcompl
idiv
or
imul
sbb
cwtl
int3
shl
push
cmpsb
xor
sbb
mov
mov
push
fistpl
xchg
inc
loop
ret
lds
jbe
and
imul
imul
inc
pop
insl
xor
cmp
jge
arpl
push
add
test
add
cltd
cli
enter
cld
insl
cmp
out
push
stos
out
inc
cmpsb
mov
and
cmc
and
fisubl
popf
add
adc
arpl
mov
pop
or
bound
add
inc
jl
push
mov
jae
cld
xchg
push
mov
popa
mov
inc
xor
mov
sahf
popf
call
divb
daa
pop
aas
jle
jge
adc
push
mov
bound
and
dec
icebp
mov
imul
pop
inc
mov
pop
loop
fnstcw
cmc
sbb
xchg
mov
pop
adc
je
add
fdivrs
push
jl
lock
into
repz
out
pop
scas
fstpl
sahf
sub
pop
push
adc
call
fwait
popf
mov
push
int
repnz
ret
psubusw
imul
sbb
add
push
and
add
pop
mov
outsb
out
cwtl
add
call
out
lock
inc
xchg
scas
cld
test
dec
lds
push
sub
outsb
dec
jnp
cmp
push
adc
mov
push
or
jle
pop
scas
xor
and
les
add
std
jnp
push
xchg
sub
inc
mov
add
sub
insb
add
pop
adc
clc
lods
in
fldenv
adc
subl
pusha
dec
xor
or
push
mov
fstpl
jle
push
clc
repnz
adc
cmp
sbb
dec
mov
stos
sbb
cmpsb
lcall
mov
cmpsb
mov
lea
aas
mov
pop
insl
inc
jnp
or
fld
ss
pop
lds
loope
jae
xchg
ret
movsb
ret
jmp
nop
dec
mov
mov
arpl
mov
sbb
fistpll
mov
lret
inc
test
shl
push
psubb
mov
sahf
stc
dec
push
push
dec
jbe
shlb
mov
fcom
notl
js
test
xor
ljmp
fst
sub
jbe
fisubrl
push
sbb
ds
adc
or
jo
mov
xor
and
xlat
sarb
cli
inc
out
dec
arpl
sarb
push
ljmp
adc
pop
and
cld
int3
orb
movsl
and
js
inc
shll
cs
aaa
fcomps
adc
xchg
pop
jg
dec
jo
mov
test
pusha
mov
and
lods
inc
or
js
inc
jae
mov
push
repz
inc
or
mov
pop
gs
shrd
out
pop
sub
mov
dec
aaa
jg
add
sahf
inc
popa
pop
cltd
inc
stos
test
push
andl
jns
arpl
jo
inc
adc
leave
into
les
idivb
push
pop
dec
pop
adc
leave
dec
mov
add
aam
push
xorb
shl
loop
cmp
or
xchg
fnstenv
ret
xlat
jp
fdivs
mov
pop
push
in
xchg
loopne
std
pop
stos
in
xor
pusha
pop
dec
mov
mov
pusha
gs
cmpsl
fs
push
xor
mov
mov
ret
jge
cmp
jo
sbb
repz
push
xlat
dec
es
cmp
mov
pop
iret
lret
es
cmp
xchg
rcrb
adc
insl
stc
in
rcrl
rorl
push
or
jp
test
in
xor
lods
je
adc
add
push
stos
mov
adc
std
rorb
jmp
mov
icebp
push
and
movsb
inc
jne
mov
and
ret
xchg
fcompl
sbb
xchg
aas
cmc
push
cmpsb
fs
and
adc
push
xor
cmp
fidivrs
pop
lret
negl
addr16
mov
cmp
fnstenv
push
imul
dec
xchg
cmp
sub
imul
mov
cmpl
popf
push
push
sbb
inc
jbe
int3
jg
or
test
pop
dec
enter
ret
insl
sub
xchg
add
inc
push
nop
mov
rcr
xchg
mov
sub
jg
icebp
jle
cmp
cmp
mov
and
mov
je
clc
sub
or
lods
sbb
cmp
outsb
into
int3
adc
scas
js
hlt
mov
inc
jne
nop
mov
fldcw
je
int3
test
sub
mov
or
test
jb
sahf
fcoml
sub
fsubrp
mov
inc
push
jle
fsub
mov
daa
push
xchg
jmp
fnstenv
gs
pop
jo
stc
rolb
adc
pushf
clc
push
jns
add
js
push
jbe
pop
push
es
ss
cld
lahf
adc
in
jnp
call
insb
daa
ret
leave
cmp
nop
repz
mov
xchg
js
je
in
add
and
repz
inc
cltd
clc
ret
test
adc
daa
int3
repnz
push
push
push
jo
mov
cmc
or
sbb
sahf
lds
push
mov
xchg
xchg
insl
push
push
mov
xchg
or
mov
cmp
jle
cmp
mov
dec
lock
mov
cmpsb
and
add
out
pop
inc
push
push
push
dec
jb
jnp
push
popf
mov
mov
xchg
adc
mov
outsb
or
inc
cmovae
cld
xor
and
add
out
fdivs
cmp
lcall
pop
stos
push
lea
test
mov
sbb
push
sbb
xchg
mov
mov
mov
cmp
xchg
cmp
std
add
fucom
mull
in
push
call
cld
test
dec
jo
or
stc
pusha
and
ja
jp
sub
ja
xor
into
push
adc
pop
mov
aas
shlb
push
decb
mov
push
push
and
sbb
dec
mov
push
insl
cmp
aam
sarl
sbb
cmp
daa
scas
mov
jb
roll
ss
aad
add
pop
sub
inc
ret
loope
cmp
cltd
mov
lahf
sbb
or
ljmp
sahf
mov
lods
loope
mov
cli
cmp
icebp
movsb
xlat
gs
mov
push
out
ret
popf
jl
mov
mov
leave
ss
or
push
stos
mov
pop
and
push
ret
or
sarl
adc
or
pushf
cli
lret
rcr
mov
jae
cmpsb
or
loope
sub
dec
mov
test
add
addb
sub
inc
add
lods
push
fnstcw
mov
in
xchg
push
shrl
clc
pop
adc
xchg
lcall
sub
hlt
addr16
out
jb
mov
push
test
fstpl
test
and
shl
stos
icebp
clc
movsl
cmp
lcall
loopne
cwtl
push
and
dec
into
xor
outsl
lahf
adc
pushf
cmp
test
sub
rcrl
imul
xchg
xchg
dec
pop
dec
mov
or
push
imul
adc
xorl
jle
sbb
fistpl
xchg
mov
es
mov
pop
inc
sbb
sbb
push
xchg
dec
mov
mov
xor
lret
iret
adc
mov
shrl
or
rcrb
xor
out
mov
dec
push
imul
fbld
jp
repnz
lea
into
iret
cmc
ret
dec
inc
pop
pop
in
pop
fistpll
pop
push
ret
fcomps
sbb
mov
out
mov
push
ficomps
inc
fwait
rorb
iret
cwtl
push
imull
lods
insb
mov
fisubrs
push
outsl
mov
stos
xchg
mov
gs
cmc
mov
mov
push
push
add
icebp
lcall
push
mov
cmp
dec
fisubrl
push
push
pop
popl
fisubs
pop
cmp
mov
push
mov
pop
out
cmp
inc
scas
jne
add
sbb
pop
cmpsl
or
lret
aaa
stos
dec
pop
ds
mov
icebp
and
inc
lods
and
adc
fists
and
and
push
testb
inc
xor
aad
shrl
insb
mov
mov
add
jae
fiadds
jecxz
jns
and
cltd
or
cwtl
xor
dec
pop
dec
cmpsb
xor
cli
js
frndint
lahf
cmpxchg
push
or
lods
jo,pt
stos
fbld
stc
lods
adc
sbb
popf
cmp
test
adc
mov
lods
cmp
adc
addr16
sbb
jg
inc
mov
fsubr
push
es
lea
xchg
lahf
or
mov
pop
push
cld
push
sbb
xlat
pop
ss
out
add
loop
mov
int
das
cmp
jle
add
and
mov
or
sahf
dec
inc
cltd
sbb
adc
subb
lret
xor
dec
push
cmp
ds
rcll
popa
adc
and
mov
gs
ss
pop
mov
ret
mov
ds
rol
mov
add
lods
push
sbb
xchg
arpl
sub
mov
scas
jae
and
xor
lods
sahf
mov
cmpsl
and
addr16
mov
fcmovnb
ret
out
or
or
lret
ret
adc
sbb
push
mov
cmpsl
repnz
dec
shrl
lock
dec
stc
std
add
rclb
out
cwtl
dec
std
mov
pop
sahf
shrb
daa
fldl
pusha
leave
and
dec
and
rclb
ror
icebp
inc
pop
and
rcll
js
pop
lcall
out
cltd
fidivl
jbe
and
dec
cmp
mov
or
sbb
js
inc
rcrb
shl
adc
xor
push
rclb
in
add
fstps
shll
push
jnp
xchg
ja
popa
cmp
mov
adc
bound
adc
xchg
xor
xchg
xchg
popf
jns
leave
sub
lcall
stc
and
insl
inc
test
out
pop
sub
mov
and
imul
xchg
mov
lds
inc
xchg
loope
ret
jbe
shlb
dec
inc
pusha
add
mov
out
fcmovnu
pop
adc
push
divl
out
mov
and
mov
in
mov
test
push
data16
inc
sti
loop
sar
dec
cmp
pop
mov
jmp
and
mov
out
or
js,pt
adc
mov
cmpl
inc
mov
and
and
xor
fsubs
inc
sbb
loopne
xorb
repnz
adc
sub
lret
xchg
sbb
jbe
sti
ds
pushf
add
add
mov
or
mov
ret
sbb
dec
dec
loop
clc
jmp
lods
or
mov
fnstcw
pop
pop
jb
int3
xchg
movsl
mov
push
pop
pop
cmp
mov
mov
lret
push
in
lret
mov
jnp
repnz
push
mov
xchg
xchg
sub
or
mov
sbb
inc
xor
inc
cmp
xlat
sub
pop
sbb
in
rclb
in
xchg
fdivl
dec
nop
or
cmp
dec
cmp
lret
pop
add
test
enter
mov
cmp
xchg
cli
movsb
rcrl
outsb
mov
mov
ljmp
rolb
xchg
push
in
xchg
pop
call
and
mov
aad
mov
aam
pop
or
hlt
cmpsb
unpcklps
add
push
repnz
rolb
cmp
cmpsb
sbb
es
sub
or
jo
lret
lds
mov
in
mov
lock
gs
imul
adc
ja
mov
in
jns
aas
mov
mov
sub
movsl
loop
dec
add
dec
daa
leave
insl
inc
lods
movsb
jp
sti
fwait
imul
in
mov
lret
shll
add
inc
ljmp
int3
xchg
stos
sub
dec
sahf
out
lret
jmp
xchg
les
xchg
mov
xchg
in
pop
pop
or
adc
daa
js
sbbb
jmp
jge
add
cmp
out
mov
sub
movsl
sahf
or
xchg
push
je
and
mov
mov
mov
pop
out
test
gs
stos
cmpsb
stc
nop
dec
pop
push
dec
cs
cmp
mov
fwait
dec
retw
lret
jp
out
dec
sub
push
jne
or
or
push
xchg
aad
lods
mov
jmp
iret
xchg
into
inc
add
int
cmp
mov
stos
mov
ljmp
ror
pop
cmc
imul
in
mov
clc
and
adc
mov
cmp
addl
pop
pop
fcmovnb
and
pusha
cmp
lds
daa
cmp
or
mov
jnp
mov
lods
sub
pop
mov
adc
outsb
jp
xor
adcl
xlat
and
add
aas
jp
stos
frstor
sti
push
sbb
xor
mov
sbb
fwait
push
clc
add
andl
lret
pop
jl
or
add
and
mov
mov
cltd
lret
mov
dec
and
jns
xchg
scas
mov
out
or
push
sbb
test
dec
negl
fs
addr16
sub
lods
mov
stc
adc
pop
xchg
fdivrl
inc
or
shlb
mov
xor
stos
movsl
jb
test
push
das
push
arpl
out
mov
repnz
cmp
rcrb
divl
mov
adc
push
inc
or
adc
lret
icebp
sbb
xchg
and
mov
pop
insb
fbstp
aad
mov
push
mov
mov
mov
scas
mov
dec
sub
pop
loopne
inc
jns
popa
fstp
xlat
xlat
inc
mov
push
in
sub
xlat
cmp
repnz
lcall
cmpsl
aaa
jp
lock
sbb
int3
jge
and
lea
add
pop
add
loopne
pop
lock
in
fldl
push
nop
lret
mov
mov
fnstcw
cld
int3
mov
inc
add
in
cvtdq2ps
arpl
push
mov
filds
gs
sub
dec
lds
push
test
shrb
sub
mov
push
popa
call
jmp
adc
dec
xor
fisubrs
lods
ret
lret
inc
pushf
sub
pop
adc
jo
repz
mov
loope
bound
push
inc
addb
or
lds
lock
inc
adc
add
fisttpl
push
ljmp
jne
aaa
jg
ja
fisttpll
jbe
clc
push
push
test
inc
pop
or
or
repnz
xor
inc
push
xor
rep
es
lret
xor
stos
gs
xor
push
mov
pop
cmpsb
inc
mov
loopne
cmp
in
adc
xor
add
mov
insl
xor
fdivr
idiv
sub
inc
xor
dec
xchg
mov
dec
lret
mov
ljmp
lods
sbb
xchg
scas
ljmp
ds
push
mov
repnz
mov
cmc
and
jo
pushw
add
ss
fwait
pusha
aaa
test
push
call
scas
push
xor
mov
or
mov
xchg
push
jmp
push
movsl
das
je
xchg
push
adc
adc
sbbb
lret
push
mov
sbb
je
test
add
into
imul
adc
xchg
or
out
cwtl
imul
imul
mov
test
dec
test
cltd
cmp
aaa
pop
pop
aad
sub
sbb
das
out
ficoml
cmp
imul
add
pop
test
push
or
cld
and
scas
aam
add
mov
jo
sub
sbb
fsubrs
aam
lret
test
and
or
sub
fmulp
lret
cmp
and
push
xchg
outsl
jnp
xchg
push
and
inc
cmpl
jge
or
sbb
or
dec
fwait
mov
adc
adc
adc
mov
sti
mov
inc
sbb
sbb
add
cs
sub
and
les
arpl
out
mov
cmpb
xor
repz
jnp
cwtl
sub
fstpt
adc
jbe
sub
idiv
push
pop
mov
add
pop
inc
adc
pushf
xchg
pop
pop
push
vpunpcklwd
testl
mov
adc
adc
inc
mov
out
cmp
sbb
mull
je
adc
cltd
ret
inc
out
das
mov
lods
sub
test
cmpxchg
hlt
movnti
sbb
jno
iret
push
ror
stos
cmp
jge
cmp
movsb
xor
add
sysenter
xchg
iret
ret
and
sahf
jnp
stos
mov
add
fdivr
push
or
scas
mov
push
in
test
xor
loopne
push
into
xchg
mov
xchg
cmp
pusha
pop
hlt
dec
ret
push
cmp
mov
cmpsl
test
cld
adc
sbb
pop
aaa
cwtl
xlat
mov
adc
pusha
insl
cmp
bound
dec
adc
test
pushf
arpl
jl
dec
popa
push
xor
sbb
in
test
int
sub
out
loopne
sbb
adc
ret
adc
or
int
lahf
stos
dec
repz
inc
add
xor
lret
and
or
xor
stos
jne
fs
cwtl
mov
sahf
lds
xor
mov
cmc
mov
iret
into
push
int
in
cmp
gs
fdivrl
and
testb
sarb
add
lods
jb
cmp
adc
xor
mov
jo
xlat
jecxz
sti
bound
xchg
mov
jo
or
fwait
sbb
insb
imul
es
movsl
and
pusha
cld
and
mov
lahf
xchg
lahf
adc
fisubs
mov
call
push
sahf
lea
int
and
pop
loop
mov
subl
pop
cli
pop
fbstp
push
out
dec
sub
xchg
in
sbb
ja
lods
pop
push
cmp
dec
not
jne
test
pop
insl
bound
pop
and
mov
and
cmp
loop
push
int3
std
pop
add
into
faddl
mov
xchg
pop
xlat
adc
cmp
mov
loop
mov
sub
xchg
arpl
xor
xchg
mov
pop
mov
lock
scas
inc
mov
rorb
jnp
jge
lds
mov
jecxz
push
fwait
mov
pop
sub
add
mov
test
test
sub
cmp
aam
cmc
jl
sub
aas
loope
xchg
push
xor
add
addr16
pop
push
int3
push
cltd
dec
cmp
jb
cmp
push
xchg
mov
ljmp
or
inc
ret
dec
push
add
sbb
mov
scas
out
out
lods
mov
fsubr
dec
jne
jmp
cmp
mov
adc
xchg
loopne
lds
sbb
nop
mov
add
add
adc
add
sbb
fsubrl
mov
lcall
mov
sub
jnp
mov
sub
xor
mov
adc
push
cmp
lods
ret
pop
sbb
orb
jle
lret
lahf
xchg
in
insl
add
mov
loop
push
in
pushf
ja
mov
cltd
mov
xor
sub
add
pop
and
push
sub
orb
push
test
repnz
dec
sbb
cmpsl
lcall
sub
mov
icebp
into
mov
mov
mov
and
repnz
loopne
cmp
imul
les
cld
mov
fcoms
frndint
dec
lds
adc
imul
push
sahf
inc
repnz
and
dec
pushf
loope
and
lods
addl
xchg
mov
push
mov
imul
inc
inc
aam
dec
iret
fisubrs
dec
jge
std
mov
push
mov
and
pop
mov
sbb
sub
movsb
das
aaa
inc
daa
dec
jmp
pop
sbb
jns
rol
rcrl
mov
das
pushf
sub
movsl
sbb
xor
stc
clc
and
cmp
xchg
out
fs
jb
cli
dec
fistl
or
jns
pop
and
out
cwtl
inc
test
in
cmp
push
cmp
pop
daa
xchg
jno
movsb
pop
jns
add
mov
je
cmp
addl
mov
inc
push
ret
in
or
mov
popa
icebp
stos
bound
hlt
scas
xchg
ljmp
rcl
fiaddl
aas
aad
or
adc
gs
js
mov
shl
pop
mov
ljmp
lret
enter
repz
arpl
jge
ja
arpl
push
lea
ficomps
mov
rcrb
enter
jnp
mov
jecxz
xchg
std
cmp
mov
adc
daa
gs
into
adc
inc
push
or
in
xchg
lahf
sbb
pop
nop
jnp
dec
push
mov
inc
nop
cwtl
push
das
jae
pop
addr16
jl
loope
test
mov
lods
adc
loopne
hlt
aaa
pop
cmp
jg
nop
out
adc
test
add
or
clc
or
mov
sar
lods
cmp
lret
loopne
cmpsb
sarl
fiadds
add
pop
bound
inc
leave
loopne
outsl
cmc
dec
sub
sbb
jno
shlb
out
loope
and
push
into
scas
out
cmp
mov
adc
stos
mov
pop
xchg
aaa
leave
fnstsw
nop
test
outsb
in
in
es
out
mov
and
test
imul
insl
shr
cmp
adc
sub
imul
mov
push
add
cmp
aas
jne
mov
popa
sub
sbb
cltd
out
loopne
sar
xchg
out
out
loope
or
scas
lea
or
data16
out
orl
inc
adc
pop
arpl
mov
lods
inc
popa
js
mov
jp
addl
adc
aaa
xchg
lsl
call
je
and
push
push
cmpsb
jo
aas
lods
mov
pop
mov
push
aas
pop
pop
xchg
sub
bound
sbb
push
ds
mov
scas
lea
arpl
sub
jo
mov
adc
enter
popf
push
test
daa
ficoml
and
mov
mov
rcrl
iret
sub
popl
xor
stos
or
xlat
cmpl
cltd
lcall
xchg
loopne
mov
xchg
jo
fwait
push
dec
popa
sbb
lret
mov
pop
loop
divl
xchg
std
xchg
push
inc
out
enter
mov
and
test
jb
lret
pop
inc
jnp
stc
sarl
movsb
int3
ds
and
in
popf
sub
push
push
hlt
lods
jecxz
push
call
adc
aaa
jl
jp
test
add
xchg
es
fsub
cmp
pop
lcall
out
sub
and
sub
cs
xor
leave
fs
movsl
movsl
and
sub
fs
mov
jnp
and
mov
clc
int3
mov
pop
xchg
ja
add
sti
sbb
mov
pop
lock
mov
addb
jae
sbb
push
lcall
adcb
sub
cld
xchg
cmp
popa
or
xchg
inc
or
scas
cwtl
cmpsl
adc
imul
pop
inc
scas
inc
add
cwtl
imul
fs
cmc
icebp
dec
sub
rcrb
inc
mov
aas
divb
mov
int3
popa
movb
mov
cmp
scas
mov
into
stc
cmc
sub
fmull
xchg
push
dec
xor
out
outsb
mov
sbb
loope
adc
xlat
insb
adc
mov
mov
cmp
push
popa
ficompl
push
icebp
jne
mov
loopne
pop
cld
push
cmp
cmpsl
jmp
je
outsb
jbe
and
sbb
lahf
lcall
adc
aaa
pop
or
outsb
mov
es
pop
test
mov
jo
add
dec
xor
stc
and
les
les
pop
xchg
fnstsw
xchg
sti
std
push
or
sti
dec
aam
cmpb
fdivr
xor
and
xor
mov
dec
outsb
mov
cmp
testl
out
lea
add
push
dec
mov
fdecstp
int3
push
into
xchg
aad
xchg
mov
xor
inc
bound
adc
add
dec
jo
ljmp
sbb
add
sub
pop
lret
and
dec
mov
ss
inc
mov
mov
test
mov
nop
int3
int
cmpsb
xchg
aam
fwait
es
cwtl
dec
inc
xor
xchg
ds
sub
jno
adc
out
test
addr16
cltd
jmp
cmp
jae
push
jne
sbb
push
shrb
fsubrl
or
xor
jo
filds
lods
mov
out
lahf
mov
insb
mov
pusha
insl
fs
and
fnstsw
outsb
inc
mov
into
jl
repz
faddl
sbb
sbb
paddq
pop
fisubrs
mov
sub
aas
cmpsb
lods
mov
mov
cmp
aam
mov
scas
outsl
xchg
or
mov
dec
pop
lret
inc
popa
subb
data16
and
insl
adc
lret
pushf
dec
inc
repz
push
cmp
dec
out
or
enter
add
push
sbb
mov
push
dec
jmp
pop
ljmp
mov
fiadds
dec
jb
dec
adc
repz
lahf
jne
lock
push
mov
dec
pusha
add
lea
or
mov
rcr
imul
or
sub
fisubrl
inc
sahf
call
add
cltd
push
cmp
xchg
pop
arpl
jge
stos
sub
cmc
push
push
mov
xchg
out
mov
mov
mov
push
mov
or
pop
lock
mov
fsubl
sub
sub
mov
dec
rolb
cld
xor
and
adc
repz
cmp
pop
push
lahf
sub
mov
rolb
xorl
push
sbb
lods
loope
lods
inc
mov
aas
sub
enter
or
cmp
adc
push
pop
mov
cmp
mov
out
inc
lcall
sub
in
roll
les
sub
sarb
movsl
adc
jge
outsb
mov
and
sbb
adc
int3
cmpsb
aas
or
ret
ret
fcoml
add
adc
add
xchg
dec
aam
mov
jl
and
dec
mov
jl
fbld
push
insb
and
adc
or
jle
sti
pop
mov
pop
sahf
xor
xchg
js
cmc
pop
std
add
das
and
or
mov
mov
sti
inc
fst
dec
pop
inc
pop
push
lods
rcl
xchg
loopne
mov
push
movsb
mov
shrb
add
adc
cmpb
or
popf
stos
push
es
je
jne
lret
pop
adc
mov
mov
cltd
sti
adc
out
shrb
sub
add
push
xorl
fildll
fcomip
scas
fnstcw
xchg
fs
out
jo
inc
cwtl
fcoml
fcoms
mov
mov
inc
jo
fdivl
pop
out
dec
push
lods
xor
sub
out
lcall
xchg
fdivl
cmc
in
mov
dec
fiaddl
lea
and
repnz
icebp
mov
jmp
sbb
jo
or
mov
push
pop
xchg
les
sub
rclb
xchg
test
or
std
and
outsb
and
jl
push
out
pop
ljmp
xor
xchg
push
je
push
test
stos
adc
sub
xor
add
popa
fstpl
scas
repz
in
push
mov
adc
jne
pop
push
sbb
ficoml
ficoms
jno
mov
es
scas
cmp
or
jl
jbe
adc
inc
outsb
or
push
lea
out
push
fidivs
cltd
iret
cmp
popf
je
push
dec
jns
mov
cmp
jnp
lock
inc
add
or
jmp
push
jnp
cmpb
cmp
mov
push
mov
imul
pop
leave
mov
notb
lds
fs
imul
stos
sbb
adc
rolb
daa
rol
xlat
call
negb
cmp
jne
mov
bound
sbb
xchg
cmp
or
in
int
lds
scas
sub
add
mov
or
subl
or
cltd
hlt
aaa
nop
push
out
inc
mov
add
add
test
hlt
pop
in
mov
lret
or
add
fstps
or
add
dec
mov
dec
mov
sbbl
xor
out
ftst
xlat
cltd
mov
jg
pop
scas
fstpl
pslld
mov
jge
imul
mov
inc
sbb
mov
fwait
out
imul
or
idiv
adcl
pop
lahf
dec
lds
ret
cmpsl
xchg
mov
and
cmpsb
add
pop
push
aad
lcall
stos
mulb
imul
xchg
insb
jo
pop
test
push
push
loop
adc
movsl
cld
fisttps
mov
out
daa
shlb
xchg
test
ja
jl
xchg
int3
and
frstor
mov
adc
adc
jmp
ljmp
mov
jge
xchg
push
test
iret
in
push
mov
xchg
mov
or
mov
dec
push
aad
stc
das
pop
int
subl
cli
inc
imul
test
sbb
mov
int
leave
popf
inc
lea
mov
push
dec
mov
mov
push
mov
push
mov
xchg
iret
xchg
sbb
add
popf
mov
cli
fistpl
jno
cld
xor
aad
fsubrl
test
leave
fstpl
imul
shrl
and
mov
das
xchg
push
nop
popf
insl
aaa
inc
and
xchg
cmp
ret
hlt
movsl
dec
lahf
mov
jmp
hlt
mov
jo
shl
adc
enter
lcall
ret
mov
je
fcomps
cmpsl
fwait
out
nop
jo
add
mov
push
sbb
scas
dec
out
repnz
out
pusha
add
scas
inc
call
popa
ss
dec
fld
test
in
add
adc
sbb
rcrb
es
push
out
adc
flds
loope
inc
int
inc
sub
cwtl
cmp
mov
leave
lret
jne
clc
xor
aam
bsr
cs
dec
cmc
cmp
int3
pusha
aas
mov
dec
insb
pop
repz
jp
and
hlt
add
sub
mov
rcll
lcall
xchg
stc
les
xchg
jecxz
mov
jp
sub
sbb
cwtl
movsl
push
shll
dec
xchg
push
sub
xlat
dec
roll
cmpsb
dec
in
or
xchg
mov
movsl
or
in
fists
in
test
sbb
push
xlat
dec
mov
call
ret
jnp
add
fmul
push
mov
mov
rorb
inc
pop
loope
pop
negl
and
aad
cmp
das
lret
push
jle
inc
jle
roll
paddw
sbbb
push
rorl
arpl
mov
lods
mov
mov
add
cmpsl
xchg
lret
daa
adc
mov
popl
mov
inc
push
inc
jecxz
ja
cwtl
cmp
mov
xor
sub
cwtl
xor
inc
inc
stos
push
xor
sub
repnz
jae
xor
movsb
add
data16
adc
in
jl
orl
mov
in
adc
xchg
fsubrl
mov
inc
lds
sti
sub
divb
inc
pop
jo
ds
inc
int
mov
popf
in
mov
dec
stc
sbb
dec
jle
stc
mov
dec
jmp
or
jo
push
xchg
in
mov
adc
fwait
add
adc
xchg
ss
inc
stos
jne
mov
popf
jecxz
lret
mov
cwtl
std
push
add
mov
jns
test
shll
jg
mov
in
jb
scas
sbb
cmp
push
mov
jne
add
or
icebp
cmp
jmp
cmpsl
push
dec
cmpb
mov
push
mov
jmp
xor
jle
sub
jae
xchg
mov
out
stc
lods
inc
inc
jne
aaa
ror
adc
xor
mov
xchg
cld
lcall
xor
insl
scas
imul
adc
sbb
insb
mov
daa
xorl
xchg
cmp
pop
sub
sti
sub
shll
xor
sbb
push
cmp
imul
mov
jmp
fcmove
xchg
and
sbb
sub
cmpl
roll
lods
movsb
fsubs
dec
adc
pop
pop
dec
je
and
in
push
pop
adc
mov
xchg
lds
movsb
add
ljmp
cld
pop
fadds
in
add
pop
andl
mov
mov
xchg
jne
lea
lds
sub
and
mov
adc
in
mov
xor
js
roll
movsl
pop
mov
mov
ja
test
cmpb
imul
jns
mov
les
push
jne
cmpsl
movsl
fidivrs
mov
push
adcb
add
call
mov
aas
mov
pop
out
lcall
sbb
les
dec
in
iret
sbb
sbb
adc
imul
fidivs
hlt
adc
push
and
and
xor
jmp
and
cmp
lods
imul
xor
xchg
cmp
jecxz
fldl
dec
icebp
xchg
shlb
ljmp
nop
out
xchg
mov
cs
add
cmpsb
xchg
xchg
cld
push
xchg
insl
into
imul
adc
je
sti
mov
imul
push
dec
push
inc
push
jg
lods
pop
test
shrb
add
divl
pop
jmp
add
fs
nop
pop
stc
jecxz
push
pop
mov
mov
add
test
mov
or
js
pop
xor
lods
push
das
mov
bound
in
lock
dec
fmull
sub
imul
aad
movsl
ds
adc
scas
mov
fucom
loopne
mov
jb
mov
out
rorl
scas
aad
outsl
xchg
data16
int
pop
cltd
movl
xchg
push
lret
push
mov
fimuls
pop
fstl
cld
test
gs
aas
sbb
push
mov
xor
push
sbb
leave
insl
xor
jmp
xchg
pop
stc
inc
mov
lea
rcrb
stos
lcall
inc
cmpsb
mov
jnp
mov
test
loop
std
in
daa
push
jge
lret
mov
adc
aam
aaa
data16
pop
push
ficoml
add
pop
jmp
mov
lods
iret
jnp
and
lods
lcall
mov
push
lods
ror
dec
or
mov
sbb
imul
in
cwtl
lcall
rcrl
mov
xchg
imul
pop
and
mov
or
dec
outsl
and
mov
into
repz
pop
pop
loopne
int
add
or
repnz
sbb
mov
cmp
aaa
daa
sub
dec
xor
mov
nop
jl
int
notb
dec
push
xchg
lods
es
xchg
pop
arpl
inc
lahf
int3
or
adc
xchg
or
mov
iret
add
sbb
fnstcw
jb
int
daa
cld
or
jge
xchg
loopne
jo
sub
scas
popf
dec
int
inc
dec
clc
add
dec
ret
gs
fistpl
test
or
leave
decl
mov
inc
gs
and
pop
xchg
inc
outsb
addr16
mov
mov
hlt
xor
bound
jnp
pop
enter
sbb
addr16
add
cmp
or
insb
adc
fcmove
inc
inc
push
mov
arpl
xorb
sub
lods
loope
push
lock
push
imulb
and
je
adc
mov
stos
sbb
rcll
lods
mov
clc
loope
cli
add
dec
fsts
jno
mov
aaa
or
in
hlt
dec
mov
cmovb
leave
mov
mov
jmp
popf
insl
mov
les
lret
aas
pop
push
stos
add
in
fisubl
push
push
push
mov
movsl
ljmp
jne
int3
cmp
mov
fcoml
ja
pop
xchg
jae
aam
pop
lods
leave
lret
cmp
cmp
pushf
pop
popf
jno
test
jecxz
movsl
add
adc
lea
pop
leave
mov
inc
call
pop
push
pop
push
outsl
movsl
mov
in
inc
add
mov
xchg
enter
dec
push
repz
cmp
pop
jle
mov
mov
mov
xor
lods
ljmp
nop
xlat
mov
mov
ja
pop
imul
lcall
pop
jecxz
insl
insl
pusha
xchg
js
ja
and
ja
movd
insl
pusha
mov
xchg
loopne
rcr
test
scas
negb
dec
mov
push
outsb
inc
xor
sub
jne
outsb
notl
clc
sub
or
sahf
jp
test
andl
int
or
orb
xor
mov
clc
lods
ds
into
sub
lret
mov
jb
and
dec
pop
cmp
in
and
lds
sub
mov
or
inc
sub
push
inc
into
cld
in
xchg
add
inc
push
stos
inc
cld
pop
int3
leave
test
mov
sbb
popf
push
mov
fldt
pop
sbbl
push
adc
adc
mov
stos
or
and
jge
pop
mov
sub
js
add
inc
shll
addr16
rorl
push
sbb
cld
mov
mov
cmp
jecxz
imul
push
insb
add
jnp
ds
bnd
mov
call
mov
sbb
cmp
adc
add
fbstp
lahf
enter
rcr
cld
shrb
nop
cltd
add
push
ss
pushf
push
hlt
xchg
xchg
loope
lods
xor
xor
sbb
mov
push
and
outsl
aam
cld
inc
push
add
mov
test
in
lret
test
sbb
js
or
je
ljmp
int3
sti
mov
fisttpl
out
inc
insb
xchg
shr
push
jne
imul
xlat
adc
push
mov
imul
adc
not
pop
or
leave
inc
adc
outsb
imul
jl
popa
dec
and
cmpsl
adc
adc
shlb
popf
sbb
aam
add
mov
ljmp
shl
mov
sub
mov
popa
inc
adc
jmp
xchg
insb
popf
cmp
sub
xor
in
mov
inc
repz
add
adc
in
mov
movsl
stc
notl
test
push
xor
xchg
pusha
nop
xor
loopne
lock
leave
and
je
mov
loop
movsb
mov
test
shlb
lcall
les
sbb
negb
pop
mov
xchg
jae
xchg
mov
add
nop
les
test
or
mov
sub
popf
outsb
pop
hlt
jnp
faddl
data16
cmp
pop
or
lock
mov
std
cmp
push
test
sbb
or
mov
adc
cld
jmp
ja
and
lods
int
adc
xor
aad
push
xchg
inc
shll
adc
mov
frstor
fwait
xchg
pop
fsubrs
xor
mov
mov
divl
sub
roll
loopne
mov
leave
icebp
notb
mov
fwait
repz
sbb
loope
jge
and
adc
arpl
in
mov
movsb
mov
lods
adc
mov
sbb
ljmp
sbb
dec
andb
inc
mov
lods
cld
pop
mov
aas
imul
sub
push
mov
mov
test
repnz
ljmp
pop
flds
lcall
icebp
data16
leave
movsb
mov
mov
rclb
fmul
jecxz
mov
andl
out
inc
adc
xor
cmp
jb
push
fnsave
mov
add
movsb
hlt
ud1
jmp
pop
inc
outsl
fiaddl
mov
push
sti
jl
sbb
fbld
orl
pop
nop
orb
dec
shl
imul
enter
push
popa
jg
fidivrl
out
dec
mov
mov
inc
mov
xchg
mov
push
cmc
pusha
cmp
push
test
shll
fwait
push
movsl
lock
mov
add
sbb
and
mov
fs
sub
mov
rcrb
rolb
cld
sub
ret
jge
cmc
lcall
or
bswap
idivb
adc
pop
cmp
iret
aam
pop
inc
sbb
mov
or
cmpsl
mov
shll
or
add
jae
add
lret
sti
sbb
sbb
fnop
cmp
fnclex
inc
adcl
inc
pusha
cmp
pop
test
in
sub
lea
aas
xor
cmc
lret
insb
popa
mov
xchg
je
sub
cmp
cmp
jge
xor
pop
das
je
pusha
inc
shlb
leave
sbb
out
push
or
dec
lock
mov
mov
and
pop
shl
loopne
jo
or
cmp
xor
or
pusha
cmp
or
dec
sti
cld
insb
mov
idivb
stos
gs
out
pushf
mov
and
ss
push
cmp
mov
rclb
and
call
nop
ja
push
scas
pop
add
mov
aad
inc
int
jbe
sub
jno
movsb
adc
cmc
test
push
loopne
stos
push
imul
adc
push
xor
mov
stc
ficomps
cmpsl
lcall
jg
jnp
push
push
and
pop
andl
cltd
jp
cmp
xor
shrl
xchg
ljmp
xor
sub
mov
sbb
in
js
ret
sti
mov
enter
cmpsl
jns
mov
sbb
pop
inc
and
pop
fstps
push
jns
fisubrs
addl
inc
push
mov
sbb
lods
mov
mov
lahf
mov
push
ss
rclb
lahf
push
cmp
mov
pop
pop
or
in
rcrb
ljmp
filds
push
stos
call
mov
add
push
xchg
dec
daa
jb
xor
repz
sbb
jl
mov
aam
sub
dec
fiaddl
xchg
call
das
xchg
sbb
test
imul
sbb
mov
inc
shl
jae
fnstenv
nop
repnz
mov
push
pop
xchg
sbb
fcmovbe
sar
pop
dec
test
inc
mov
xor
rorb
cs
movsb
or
or
mov
adc
fldenv
test
neg
outsb
test
lcall
ret
mov
dec
mov
mov
movsb
mov
lock
inc
push
cmp
mov
addb
push
mov
sbb
mov
jecxz
lret
loope
jp
jnp
imul
ja
int3
in
mov
or
inc
jle
addl
adc
sub
stos
and
xor
test
mov
dec
ret
pop
and
daa
mov
cmp
xchg
mov
ds
sub
xchg
loopne
arpl
lret
cmp
push
arpl
xchg
inc
scas
jle
adc
pop
arpl
xor
pop
repz
and
jns
xlat
jg
int
jl
mov
sub
xchg
lahf
testb
xchg
jmp
mov
fists
jne
push
xchg
or
sbb
push
das
add
scas
or
adcl
push
loop
and
loopne
adc
sub
mov
cmpsb
mov
mov
push
mov
xchg
and
xchg
lret
inc
int3
test
inc
cltd
je
arpl
scas
icebp
and
sub
aam
mov
push
icebp
sbb
inc
pop
stc
daa
mov
jo
add
imul
adc
clc
mov
fldl
push
sti
call
or
mov
jge
push
sbb
mov
mov
jmp
mov
cmp
pushl
sbb
lods
into
daa
subb
dec
or
fwait
xor
imul
scas
push
pop
inc
cmc
enter
jmp
jne
mov
aaa
pop
adc
aam
sete
dec
out
aaa
outsl
addb
dec
xchg
test
add
mov
mov
popa
push
mov
fildll
or
ret
inc
std
push
push
xchg
jle
imul
push
lahf
subl
sahf
seta
cmpsl
cmp
nop
or
shl
xor
aam
ds
popl
fnstenv
enter
jp
scas
test
jl
lea
inc
push
rcrl
test
add
push
std
scas
cmc
icebp
pop
addr16
xor
dec
sub
jecxz
in
cs
pop
dec
adc
pop
test
pop
add
in
jg
sbb
imull
cs
enter
insb
shrb
leave
inc
iret
mov
cmp
mov
adc
push
shr
sbb
add
pushf
cmp
jle
mov
stc
in
jecxz
fisubrs
hlt
fldenv
dec
xor
pop
daa
lahf
or
nop
out
mov
in
dec
inc
xchg
cmpsb
jo
lods
sub
int
outsl
and
push
mov
ja
or
jae
out
xchg
rcll
mov
icebp
inc
jns
repz
mov
ds
inc
jmp
or
add
aas
dec
sarb
xor
icebp
jmp
ja
mov
sbb
outsl
out
aad
sbb
xor
aam
sub
popa
or
adcl
loop
dec
xchg
loope
sub
ss
push
dec
mov
adc
cmp
aam
sbb
and
mov
mov
or
add
push
dec
mov
imul
ds
cmpsl
or
popa
and
inc
jle
xchg
push
cmp
lcall
sbb
dec
es
lods
int3
es
aas
push
and
adc
add
gs
out
repz
mov
rorb
sbb
mov
mov
out
dec
popf
sbb
xor
in
in
push
xor
aam
sti
ja
ljmp
mov
movsb
xchg
cwtl
cmp
mov
sub
in
xor
cmp
aas
enter
les
mov
mov
adc
inc
mov
push
mov
xchg
adc
xor
adc
cmp
jns
adc
adcl
out
sub
sbb
mov
or
jecxz
movsb
xor
stos
mov
fmulp
aaa
dec
fsub
sub
pop
xchg
loopne
mov
jbe
subl
les
pop
push
repz
movsb
movsb
adc
cmp
fsts
lcall
xor
and
les
or
loopne
mov
mov
les
sub
mov
in
push
mov
cmpb
fnstenv
cmpsb
rorl
pushf
popf
aaa
mov
jne
pop
loop
inc
or
adc
cmp
cmp
je
outsl
pop
sub
mov
in
scas
push
fdivs
mov
rcll
mov
xor
je
pop
repnz
int
jl
out
nop
dec
mov
inc
add
sub
ficompl
cmpb
mov
push
stc
roll
cs
push
orl
add
pushf
and
mov
lods
mov
xchg
dec
mov
loope
stos
cmp
movsb
idivl
adc
loopne
in
lahf
xlat
jp
dec
push
pop
cmpsb
adc
xchg
mov
test
and
imul
xor
pop
jno
aas
orl
jp,pt
pop
jne
mov
stos
mov
sbb
mov
mov
stc
inc
arpl
or
push
xor
xorl
insb
push
shrl
mov
jb
leave
lret
add
stos
shlb
pop
fcmovnu
sub
mov
dec
lock
test
sbb
xor
sahf
cmpsb
or
pushf
sbb
stos
adc
cmpsl
mov
jne
or
loopne
stos
and
aad
sbb
xor
cmp
jne
fstpl
jnp
cmp
loope
cltd
test
sbb
inc
or
mov
outsl
insb
inc
mov
lock
mov
popf
dec
cmpsb
dec
aam
pop
fcomps
addr16
inc
mov
in
jge
out
push
lret
pop
js
and
inc
std
fisttps
loope
and
mov
jp
pop
xorl
rclb
push
sub
push
push
xchg
adcb
lret
frstor
mov
or
add
pop
out
or
xor
add
mov
pop
scas
mov
adc
jp
in
adc
int3
xor
push
shlb
cs
lret
icebp
add
pop
das
sub
add
or
mov
stos
jo
adc
and
adc
mov
inc
inc
jbe
enter
into
aaa
lds
pop
mov
rorb
pop
lcall
jnp
aad
clc
lret
jno
ret
call
jnp
jmp
in
pop
jecxz
inc
cltd
fisubs
popa
aaa
pop
inc
pop
fadds
je
lods
insl
outsb
dec
or
test
iret
cltd
test
mov
xor
in
bound
pop
mov
sub
insl
test
lods
xchg
mov
inc
out
pop
pop
jnp
inc
mov
xlat
jp
sbb
imul
bound
mov
xchg
add
movsl
fcompl
lock
mov
loope
repz
and
aam
imul
in
sbb
ja,pt
cmp
mov
rep
dec
rolb
pop
adc
inc
cs
lea
jecxz
je
inc
cmpsb
or
and
jo
add
pop
movl
fdivrp
sub
cmpl
pop
cltd
jbe
test
xor
pop
jbe
adc
inc
lahf
push
ficoml
movsb
call
data16
inc
xor
sbb
ljmp
xchg
in
sub
inc
or
sti
pushf
xchg
cmc
xor
pushf
mov
clc
icebp
adcb
jge
add
push
jle
push
pop
adc
xor
cmp
insl
ret
test
push
aam
aad
mov
scas
in
jnp
dec
sbb
dec
pop
movsb
fstcw
sbb
xor
and
dec
push
outsl
call
aaa
or
rol
cmp
mov
bound
mov
imul
jmp
or
loope
pusha
sbb
mov
push
add
cld
sub
dec
jae
cmp
clc
cmpsb
movsb
inc
xchg
inc
add
push
adc
jo
std
in
incb
adc
ficoms
mov
sbb
pop
add
int
test
outsb
nop
add
rcr
sbb
xchg
ret
movsb
jge
and
inc
push
ja
fistl
mov
mov
xchg
jne
xchg
xor
mov
cs
mul
jge
mov
lea
mov
mov
lock
arpl
loop
sub
adc
mov
fninit
mov
pop
pop
stos
loop
dec
cmpsl
js
pushf
stos
mov
cmp
dec
movsl
mov
fimull
outsb
sahf
out
dec
push
push
mov
cmp
lods
fstps
cmpsl
js
xor
xchg
negl
lahf
aam
jns
xchg
cltd
lret
je
aaa
repnz
push
js
out
jmp
mov
adc
jb
and
pop
xchg
rolb
je
dec
outsl
leave
cs
jae
and
in
ret
xor
fisubs
lahf
loop
sbb
dec
popa
fucompp
fsubrs
gs
movsb
iret
push
dec
xchg
call
mov
and
shlb
mov
jmp
gs
adc
xorl
dec
cli
xchg
ret
xor
add
xchg
dec
cmp
mov
aaa
dec
lcall
and
or
subb
xchg
imul
jno
out
jb
addl
mov
mov
sub
cmc
or
add
ljmp
in
mov
xchg
dec
mov
iret
imul
punpckhdq
les
or
pop
out
jl
pop
sub
and
or
cmc
das
jmp
aam
cmpsb
loope
mov
test
cmp
hlt
test
cld
mov
out
and
test
xchg
insl
mov
or
insb
fs
inc
cmove
add
outsb
dec
les
jp
mov
popf
push
loop
out
aas
lret
into
adc
fistpll
out
sahf
mov
adc
push
js
lret
imul
mov
loop
ret
adc
add
mov
aaa
les
stos
jae
jle
repnz
jl
add
sub
xchg
sbb
mov
push
sub
int3
mov
mov
rclb
mov
cltd
popa
sar
mov
xor
cmc
or
jge
jg
or
push
mov
fildll
mov
jmp
xlat
inc
cmp
xchg
jl
test
sub
std
ja
cmp
sbb
mov
push
rolb
shlb
xor
xchg
ret
cs
jmp
das
inc
mov
mov
and
xchg
arpl
imul
pusha
cmc
add
mov
cmp
addl
add
jge
sbb
loopne
jo
sub
repz
and
cld
clc
pop
test
mov
in
pop
daa
cmp
movsl
sbb
ja
rorl
outsb
cmp
mov
push
fldcw
mov
lret
mov
mov
push
sbb
or
jmp
xor
push
int
mov
rol
aas
jp
ss
push
in
mov
loope
insb
lds
xor
push
fcmovne
push
sbb
or
mov
add
jne
or
stos
mov
jnp
and
subl
push
in
dec
xor
xchg
into
dec
pandn
es
jns
mov
inc
fwait
jo
rorl
adc
cmp
push
movsb
repnz
lods
lods
shr
mov
icebp
pop
push
sub
fxch
insl
iret
aas
scas
and
and
icebp
test
enter
das
jmp
cld
ret
test
aas
arpl
and
pop
imul
cmp
pushf
enter
fisubs
call
jp
inc
mov
jg
mov
sbb
jge
fidivs
enter
mov
insl
xchg
mov
add
ss
jmp
into
stos
and
cmp
pop
popa
imul
add
jle
enter
into
mov
mov
test
jg
icebp
jle
xchg
jecxz
mov
pop
popf
xor
cmp
pop
mov
sbb
xor
cmp
sbb
fnstcw
jae
ja
lahf
sub
pop
cmc
mov
scas
add
negl
and
out
jb
mov
pop
std
stos
dec
xchg
and
mov
out
repnz
inc
ds
hlt
sub
fnstcw
adc
loope
or
sbb
nop
shl
mov
push
or
push
fcompl
push
jae
pop
test
mov
adc
hlt
roll
pop
push
xchg
cmp
xchg
cs
jnp
push
push
ror
mov
and
or
inc
pop
xchg
sbb
repnz
cmpsb
lahf
jo
enter
dec
pushf
shll
xchg
mov
les
movsb
mov
mov
inc
cltd
add
and
push
clc
pop
das
loopne
mov
cmpl
jbe
jge
sub
ret
mov
pop
pop
int3
mov
push
lock
push
test
jl
divb
inc
jmp
and
fiadds
test
push
dec
inc
loope
movsl
and
insb
push
jmp
jmp
push
adc
xor
jecxz
fsub
aas
add
push
push
dec
and
mov
insb
rcl
sub
arpl
outsb
pop
push
and
sbb
sti
scas
jb
cmp
outsb
inc
xchg
xchg
xchg
mov
pusha
addl
cld
sub
jecxz
mov
or
scas
xchg
jmp
and
ret
pop
out
push
lcall
jp
shr
stos
fcompl
gs
repnz
xchg
or
rcll
push
mov
cmp
pop
xor
lods
and
adc
lods
adc
xchg
add
fs
cmp
jmp
mov
mov
mov
xlat
adc
xchg
ret
xchg
dec
mov
adc
mov
in
fstpt
dec
std
out
in
stc
pop
push
push
ljmp
add
ffree
jae
lods
aad
int
out
cmp
jmp
xchg
cmp
mov
shrb
mov
mov
mov
std
repz
adcl
adc
stos
enter
mov
mov
enter
js
dec
sbb
bound
cs
out
or
jne
and
js
and
rcrl
xor
xor
pop
mov
cmp
leave
maxps
cld
cmp
iret
dec
das
in
push
scas
addr16
orb
sub
adc
xchg
lods
push
mov
cld
or
cmpsb
mov
push
xor
xchg
mov
pop
pop
mov
rcr
int3
mov
mov
cld
or
xchg
ret
jp
jmp
aas
pop
fidivrs
sub
add
test
push
push
adc
push
mov
arpl
xchg
cmp
insl
divb
outsb
enter
cs
push
aam
out
jmp
xchg
inc
xchg
es
push
call
cmp
aaa
pop
xchg
out
neg
add
adcb
mov
push
adc
add
int3
into
xor
icebp
outsl
sbb
or
call
fistl
roll
movb
dec
jle
jp
or
sbb
dec
mov
adc
enter
scas
fadds
mov
dec
pop
ja
enter
in
push
mov
mov
push
roll
stc
ret
stos
xchg
xchg
flds
or
xor
fcomps
nop
repz
jp
cmpsl
arpl
ljmp
pop
push
and
inc
mov
shl
lods
fcoml
mov
inc
incl
and
aaa
repnz
dec
xchg
movsb
jbe
xchg
cmpsl
mov
or
je
dec
lods
or
sub
shrl
fnsave
test
xor
sbb
cmp
mov
mov
hlt
fcoml
inc
dec
inc
popf
pop
mov
cld
push
adc
lret
fadd
xchg
orl
xchg
push
mov
pop
inc
lret
jle
jge
add
fdivp
xchg
scas
push
add
repnz
add
mov
into
outsb
in
scas
cmp
pop
popa
popa
jmp
cmp
mov
sahf
push
push
out
arpl
and
out
mov
and
add
sbb
mov
xlat
je
add
popa
cltd
ja
sti
cmp
jnp
rcrb
jmp
pop
repnz
clc
jp
sbb
mov
cmp
sbbb
lcall
clc
xchg
dec
adc
xchg
jo
enter
lods
add
jp
pop
sbb
fadd
xchg
cmpl
loopne
xchg
dec
in
inc
pop
inc
push
insb
fisubrs
sub
sbb
pop
insl
mov
mov
xchg
xchg
ja
mov
and
xchg
add
mov
aas
fs
cmp
jbe
cmpl
mov
pop
add
je,pt
cmc
dec
cmp
hlt
fs
aad
xchg
std
pop
lahf
lret
dec
outsl
movsl
hlt
outsl
inc
push
or
std
gs
cmpsb
jecxz
and
das
push
cmp
sub
and
inc
sbb
pop
sti
mov
adc
cli
dec
pop
shr
test
xchg
fdivrs
orb
shll
lea
fisttpl
in
push
nop
sbb
aas
ss
mov
dec
sbb
add
cmp
incb
jae
lds
xor
cs
fcoml
mov
mov
testl
mov
stc
cs
fildl
lret
pop
ds
inc
add
jecxz
xlat
imul
and
inc
leave
into
test
cli
mov
xchg
dec
dec
std
pop
cmpsb
xchg
sub
jns
push
or
lahf
jmp
xchg
ror
es
lcall
shr
and
or
pusha
jge
add
js
out
and
mov
sub
js
pop
enter
and
stc
xchg
mov
inc
scas
clc
push
mov
cmp
xchg
sbb
or
jno
mov
dec
icebp
insl
cmp
rcrl
cltd
push
mov
mov
lds
popa
out
xchg
or
fsts
dec
or
xor
pop
std
push
pop
push
inc
jecxz
lods
nop
or
push
pop
and
shll
push
out
mov
int
daa
out
jne
lock
or
adc
add
jge
enter
inc
dec
xchg
cmpb
dec
cwtl
or
mov
mov
addb
sbb
cmp
into
sub
ja
lock
xlat
dec
pop
adc
dec
xchg
dec
insb
mov
mov
xchg
pusha
adcb
loope
ljmp
cmc
sub
push
sbb
enter
mov
leave
lods
push
outsb
outsb
fsts
ret
cmpl
cltd
outsb
mov
jns
out
stos
subl
mov
xchg
jp
add
pop
call
xchg
jae,pt
pop
cmpl
jge
cmp
dec
leave
mov
adc
movsl
mov
roll
mov
pop
addr16
jl
lret
jno
xchg
pop
or
inc
push
xchg
shlb
mov
lret
nop
out
testl
xor
sub
xchg
shll
and
daa
pop
and
fs
push
xor
push
adc
pop
shl
push
jg
or
pop
mov
outsl
pop
sbb
mov
sbb
cs
xchg
addr16
mov
adc
inc
fs
mov
and
outsb
jne
mov
pop
jnp
pop
mov
out
xchg
mov
inc
js
subb
xchg
dec
and
inc
lret
dec
arpl
out
jl
mov
shll
fldl
jns,pn
loope
imul
sbb
add
push
xchg
cmp
and
imul
inc
sub
adcl
sbb
lea
lahf
arpl
xor
pop
push
enter
repnz
xchg
pop
cmpsl
imul
hlt
adc
jb
leave
mov
mov
sbb
add
sub
pushf
push
ficompl
stc
in
mov
stc
je
filds
lods
push
and
mov
movsl
jge
arpl
push
sti
out
push
test
lret
es
and
nop
sbb
xor
in
call
adc
addb
sbb
and
imul
movsl
pop
add
mov
cli
and
cltd
stos
mov
jmp
imul
pushf
sbbl
mov
loope
test
cmp
or
fistpl
pop
xchg
lds
adc
stc
add
ja
pop
pusha
lea
sbb
movsb
cs
shll
repnz
iret
jmp
arpl
sub
jo
das
adc
aam
ret
sbb
sbb
jle
jge
in
mov
out
in
aaa
cs
push
cmpsl
shl
mov
lods
aam
mov
push
xchg
mov
enter
inc
cmp
mov
stc
dec
sti
ds
mov
adc
push
dec
cld
jae
cmp
sahf
inc
jne
pop
lret
push
pop
xchg
cltd
inc
or
xchg
fwait
scas
push
pusha
out
push
outsb
and
loope
lods
or
sbb
dec
addr16
les
cltd
mov
sub
add
mov
shrb
xor
mov
test
jg
xor
out
sub
cmp
ss
dec
rol
mov
sub
sub
mov
xor
es
sbb
push
add
insb
ffree
ss
jne
fcmovnbe
jb
jmp
mov
fdivrl
frstor
pop
sub
add
mov
scas
or
test
mov
pop
pop
jne
pusha
mov
lahf
inc
dec
fs
xchg
in
andl
or
mov
mov
fwait
inc
js
lcall
js
cmp
pop
rcr
loopne
fwait
aad
shlb
and
push
xchg
adc
movsl
adcl
jge
sub
mov
iret
adc
call
sbb
std
mov
dec
fs
sbb
xor
enter
dec
imul
in
rclb
push
test
adc
ficoml
sarb
or
and
sbb
lret
mov
or
movsb
ret
pop
call
leave
dec
data16
mov
cs
dec
icebp
std
stos
pop
insl
filds
ljmp
ss
aaa
dec
and
jnp
mov
xlat
sub
xor
outsl
int
into
sbb
fs
add
scas
pop
rorl
jle
xor
sbbb
mov
add
clc
call
adc
rorb
inc
repnz
push
sub
xor
stos
jmp
les
imul
or
mov
data16
add
imul
inc
push
cmpsl
jmp
jb
fdivrs
popa
movsl
xor
fwait
cmp
sbb
dec
fcmovnu
in
mov
lock
jne
jecxz
jecxz
pop
xor
mov
mov
jnp
sarl
sti
lahf
je
fadds
sub
fstps
jle
dec
sti
iret
xchg
rcll
lcall
inc
int3
das
jae
or
add
jne
sub
pop
lea
pmulhuw
ja
or
cs
std
icebp
inc
jg
fs
cltd
es
js
cmp
and
clc
mov
out
add
xchg
pop
cmp
lret
sahf
cmp
sbb
int3
stos
in
mov
fbstp
div
imul
pop
mov
mov
xorb
adc
dec
mov
xor
shll
xor
fisubs
adcb
push
mov
jl
xor
out
fisttps
or
stos
fsts
sbbb
daa
sarl
cmp
movsl
inc
cwtl
mov
mov
xchg
addr16
movsb
adc
mov
cmpsb
xchg
cmp
mov
cmp
lods
mov
les
es
stos
xor
and
jmp
test
sbb
lds
test
inc
sbb
orl
xor
push
push
sbb
test
add
outsb
mov
lock
out
fidivl
or
inc
xchg
repnz
aaa
mov
cmpsl
divb
nop
int3
into
lock
xlat
aam
cltd
inc
inc
push
ljmp
add
les
test
call
fildll
lods
add
sarl
mov
xchg
adc
insl
push
lcall
push
fsubl
ud1
and
xchg
popa
div
dec
fstpl
jae
mov
test
inc
pop
sbb
out
jbe
and
outsb
inc
sbb
outsb
adc
pop
and
push
test
mov
sarl
es
dec
inc
mov
mul
lahf
les
push
sub
sub
sbb
aam
vpunpckhbw
addr16
dec
xor
imul
sarb
pop
lret
mov
and
daa
imul
dec
repnz
mov
dec
cmpl
stos
inc
cli
jb
mov
jne
int
mov
popf
mov
out
xchg
xchg
xchg
sbb
je
mov
or
nop
mov
lock
xor
addb
add
out
scas
movsb
test
in
lret
jmp
jl
inc
mov
ljmp
dec
cmc
adc
xor
inc
sub
jae
xor
sahf
cli
dec
out
xlat
and
leave
push
fiadds
add
arpl
or
push
mov
add
pop
ljmp
pushf
test
xchg
aam
dec
sub
mov
mov
pop
jne
and
inc
push
mov
xor
inc
std
subb
inc
aad
mov
jp
add
scas
jge
iret
xlat
and
fidivs
mov
in
lods
test
icebp
jmp
fists
shll
js
insb
push
scas
sub
nop
stos
inc
movsl
ret
inc
cmp
or
das
js
call
pop
sub
mov
or
cmp
mov
jne
lret
or
mov
fidivrl
loope
pop
test
mov
sub
rcrb
idiv
jp
cmp
cmc
mov
cmp
cmp
lods
jno
jne
imul
sbb
and
sub
lods
sbb
push
push
add
xchg
rorl
push
inc
fwait
pop
cmp
xlat
adc
shrl
scas
outsb
sbb
fcomps
cwtl
add
mov
iret
push
rorl
pop
pop
sbb
dec
clc
jnp
sub
int
hlt
push
out
sbb
out
mov
aas
mov
add
call
fmul
imul
jae
dec
out
xchg
pop
aaa
cmp
sub
js
popf
push
sub
in
sbbl
cltd
sbb
add
arpl
mov
out
push
rcll
mov
cmc
or
pop
jmp
in
int
icebp
lods
addl
loop
sub
push
jp
push
arpl
outsb
xor
aad
mov
lret
lahf
mov
into
das
imul
call
mov
push
or
clc
aaa
push
push
lock
inc
dec
mov
mov
and
addl
cli
and
inc
bound
movsl
lock
aas
lret
in
adc
mov
fldcw
mov
mov
mov
inc
dec
ffreep
cmc
cmpsl
jg
pop
push
jmp
pop
ret
stos
lock
roll
nop
adc
leave
add
std
dec
pop
adc
sub
sub
leave
test
daa
cmp
dec
orb
sub
sub
aas
jmp
enter
les
mov
cmc
sbb
cwtl
cs
pop
push
sub
shlb
add
mov
hlt
imul
inc
or
cmp
xlat
stos
xchg
cmp
shrb
pop
repnz
and
mov
mov
cwtl
xchg
mov
pop
jecxz
pop
insb
xlat
rol
pop
inc
lea
lock
xor
aad
repz
inc
push
pop
or
jl
and
and
mov
les
jmp
les
push
mov
mov
jnp
cmp
xor
imul
rcll
jae
cwtl
sbb
cld
sub
inc
pop
lret
lret
test
sbb
mov
adcb
xor
mov
push
jmp
pop
cwtl
mov
sahf
xchg
leave
jne
inc
test
repz
dec
cmp
pop
sbb
xor
jge
inc
fsubrs
push
addr16
xor
sbb
push
inc
mov
je
push
insl
out
inc
clc
fsubr
push
jecxz
xor
and
out
inc
inc
and
cmp
je
add
bound
ljmp
mov
imul
mov
sub
cmpsl
push
inc
cmpsl
or
andl
pusha
fldenv
xchg
xchg
mov
int3
and
call
xor
mov
fists
cmc
sub
inc
mov
push
lcall
adc
cmp
repz
enter
nop
xor
cwtl
add
xchg
inc
and
xchg
jmp
mov
dec
pop
imul
data16
push
push
mov
mov
out
shl
pop
mov
iret
jge
and
sbb
leave
xchg
popa
jmp
in
ja
std
add
pop
sbb
mov
jbe
arpl
xor
repnz
cmp
test
mov
data16
les
movl
inc
add
stc
mov
lea
fld
insb
pop
ficompl
sbb
dec
iret
mov
add
mov
mov
inc
test
push
mov
cmp
push
loopne
pop
jp
mov
and
and
lea
pop
inc
or
mov
leave
xor
andb
jmp
xlat
jne
mov
test
cmpsl
jne
xlat
pop
outsl
flds
in
les
mov
lock
xlat
jle
lcall
mov
mov
and
mov
push
andb
dec
mov
cwtl
das
inc
test
jae,pn
sub
add
push
arpl
inc
or
unpckhps
ja
into
xor
adc
cmc
loope
pusha
data16
fidivl
out
and
clc
jo
cs
adc
cmp
lret
outsl
mov
cmp
cmpps
aad
test
push
repnz
add
sub
adc
ljmp
jb
cwtl
in
or
ror
mov
clc
and
xor
pop
andb
jmp
mov
xlat
jp
sub
out
push
pop
mov
lret
cs
xchg
sub
dec
push
popf
shl
jle
cmp
movsb
fsubr
arpl
jnp
mov
in
cmpsb
pop
popa
mov
lahf
jmp
cmp
cld
or
sarl
in
lret
or
or
cmp
and
roll
subb
iret
pop
mov
shlb
fdivrl
clc
notb
inc
cmpsb
cmp
jns
fldcw
std
in
loopne
sbb
sub
into
int3
pop
into
add
mov
das
pop
mov
adc
dec
push
mov
mov
sahf
push
mov
and
adc
enter
movsb
movsl
pop
aas
daa
sbb
test
mov
sahf
push
pop
add
xchg
pop
jp
test
roll
iret
stos
fs
pop
cli
add
js
scas
in
int3
cmc
fwait
stc
fcompl
push
popf
mov
hlt
testl
push
cltd
ss
pop
test
in
in
sub
xchg
adc
push
jge
push
sub
xlat
mov
cmc
out
arpl
jnp
or
test
iret
icebp
scas
jecxz
ds
lock
xchg
and
movsb
loope
scas
sahf
mov
push
out
pop
out
and
stc
and
outsb
insl
xor
cmpsb
jnp
sahf
mov
sbb
cld
das
xchg
repz
mov
xchg
or
push
dec
add
add
or
inc
inc
cmp
adc
ret
add
add
inc
pop
jne
sbb
lcall
xor
shll
xchg
leave
mov
int
je
mov
iret
inc
inc
test
adc
sbb
clc
cmp
repz
repnz
addl
pop
mov
out
outsl
outsl
mov
adc
movsb
ds
fs
pop
xchg
sub
and
lods
test
pop
stos
psubusb
sti
cli
dec
add
out
xor
cmp
add
pop
arpl
aad
jae
mov
inc
mov
clc
outsb
sti
push
fisttpll
xor
movsl
xchg
push
sub
push
sbb
mov
xchg
xlat
adc
jge
out
nop
push
sub
and
jge
xchg
sbb
add
fcoml
push
aam
lods
mov
movsb
pushf
mov
or
mov
inc
push
inc
and
xchg
out
sub
das
outsb
cmp
mov
adc
mov
or
sbb
dec
push
or
sahf
or
jmp
dec
pop
rcll
mov
mov
push
mov
mov
mov
sub
test
push
lret
arpl
mov
mov
test
mov
cli
popf
leave
cmp
enter
xchg
sarl
in
lahf
int3
lcall
stos
iret
js
arpl
push
xor
mov
sbb
mov
das
pop
push
lock
add
insl
clc
es
gs
mov
mov
and
pop
test
std
rcl
pop
cld
je
xchg
cmp
aaa
lahf
test
mov
pop
and
arpl
or
int
in
jns
sub
jnp
outsb
test
jle
mov
shll
fiadds
sahf
and
loopne
jle
mov
cmc
inc
ret
jne
mov
sub
jle
pop
mov
jbe
cmp
sbb
dec
jge
cmp
mov
xchg
lcall
mov
fistpll
mov
lea
add
sti
mov
pop
clc
xor
mov
mov
mov
mov
scas
adc
stc
lods
ret
in
loop
sub
rolb
mov
lahf
push
add
bound
lahf
testl
and
sbb
mov
xor
xchg
add
mov
push
add
sub
dec
cmc
sbb
lret
push
lret
dec
push
test
stos
adc
mov
popf
xor
stos
or
lods
das
adc
mov
and
adc
sbb
into
jecxz
shlb
cld
mov
push
fwait
sbb
jmp
dec
mov
cmpsb
pop
dec
adc
shlb
ret
xor
dec
dec
pop
fbld
mov
xlat
or
mov
ds
xlat
dec
push
mov
jne
mov
icebp
push
lahf
sbb
adc
rcrb
in
inc
lock
xchg
cmp
add
scas
repnz
jae
movsl
cmpsb
pop
inc
mov
inc
jb
ret
and
push
push
movsb
mov
fs
or
xlat
add
lret
xchg
mov
cmp
fcomps
cld
mov
cld
leave
and
mov
push
rcr
lret
dec
clc
imul
or
and
sahf
xor
and
xchg
rcrl
inc
jp
jge
mov
andl
pushf
xchg
xorb
jno
sub
mov
mov
cmp
add
add
insl
xchg
xchg
jbe
cmp
adcb
ljmp
or
xor
std
lahf
push
sbb
icebp
popf
mov
lret
pop
dec
sbbb
mov
jo
xchg
add
xchg
out
push
adcl
push
loopne
scas
and
in
andl
iret
ljmp
mov
orb
jg
dec
repz
int
mov
push
lret
push
int
iret
cmp
pop
das
and
dec
inc
rcrb
xor
test
cmp
xchg
pop
outsl
pop
push
xchg
in
in
jnp
aaa
mov
in
pop
sbb
pop
fstl
imul
dec
sub
imul
push
pop
jo
add
mov
and
add
arpl
cli
lock
push
incl
adcb
mov
sub
data16
cmp
out
arpl
mov
call
rcrl
or
jne
mov
lcall
push
dec
or
std
push
ret
add
mov
sub
xchg
jmp
sbb
mov
aas
test
shll
mov
out
xor
aam
test
insb
shl
test
fdivs
and
sub
xor
ret
sbb
push
xchg
or
mov
out
sub
inc
dec
or
mov
inc
push
fisubs
stos
ss
xor
ja
jle
je
sbb
jge
jae
jne
sbb
mov
testl
aas
pop
mov
pop
mov
jb
std
test
movsl
xchg
pop
sbb
ret
pushw
mov
sub
insb
push
test
mov
adc
sarl
icebp
mov
push
and
adc
jge
cmp
pop
jg
ds
pop
jecxz
sub
les
cmp
mov
xchg
push
jecxz
je
or
push
xor
aaa
xor
loop
icebp
jbe
and
sub
sub
mov
and
sbb
dec
repz
xchg
cmc
cmc
stc
xchg
idiv
pop
jle
xor
nop
call
fidivrl
mov
lods
pop
stos
and
jmp
mov
lret
hlt
ds
mov
ljmp
mov
cmp
pop
xchg
inc
sub
mov
lahf
mov
push
sbb
notl
test
jno
out
std
gs
xchg
and
aam
hlt
es
cmp
xchg
cmp
sbb
bound
imul
fimull
fsub
adc
lods
xorb
in
mov
aam
leave
xor
enter
pusha
inc
insl
popf
sti
fsubrl
xchg
aaa
xchg
push
mov
mov
sbb
sub
leave
add
js
and
and
stc
in
sub
lea
dec
jmp
cld
pop
inc
xchg
cs
mov
xlat
dec
rorl
lea
sub
cmp
fiadds
enter
jbe
dec
cmpsl
pop
sub
pop
test
mov
xor
mov
mov
insb
push
or
add
iret
mov
pop
xchg
test
jp,pn
xor
pop
push
xchg
ja
loope
and
adc
addb
pushf
jg
or
daa
lret
adc
cmpsb
adc
aas
lds
inc
jae
push
icebp
xor
stos
xchg
sub
das
imul
dec
xchg
imul
subb
shll
bound
clc
mov
shl
sbb
scas
mov
lret
add
push
jb
popa
ljmp
ss
lahf
pop
push
and
out
adc
bound
push
pop
les
data16
mov
orl
rcr
push
inc
jmp
mov
push
jnp
inc
sbb
or
adc
mov
inc
xor
aaa
sbb
adc
es
shll
outsb
sub
adc
inc
into
das
inc
popa
pop
or
push
loopne
mov
sbb
loopne
jo,pt
shrb
ret
loopne
jmp
push
jae
mov
bound
lahf
push
jl
jno
sbb
aas
cwtl
movsl
cld
aam
int
test
xchg
fsts
or
fistl
lea
scas
mov
imul
xor
jbe
outsl
imul
test
or
lret
jp
test
mov
out
jae
push
pop
sbb
mov
addr16
int
cmp
adc
dec
add
test
and
addr16
ror
clc
mov
cmp
push
jo
xor
dec
jle
jmpw
mov
mov
loope
ljmp
dec
xor
adc
data16
dec
fstpl
outsb
xchg
ret
dec
les
loop
lods
mov
ret
mov
shlb
or
pop
cltd
sbbb
stos
mov
mov
sti
jne
lahf
push
cmp
movsb
subb
pop
mov
inc
fsubrl
inc
cmp
lret
ss
mov
cs
dec
sub
sub
nop
test
add
jb
shll
into
popf
sahf
fcompl
dec
int3
notb
push
pusha
sub
fisubl
movsb
adc
pop
jp
cmpb
test
xchg
stos
cs
sbb
int3
mov
les
mov
mov
adc
dec
stos
sub
movsl
pop
ljmp
cmp
jo
ljmp
or
clc
lahf
cmp
sahf
push
addr16
adc
mov
icebp
es
xchg
and
aad
jne
outsl
in
addr16
pop
or
or
inc
test
push
loop
push
aad
rorl
test
movsl
sub
xchg
sub
lods
and
shr
inc
mov
mov
push
mov
push
jge
out
subb
xchg
das
mov
sub
mov
mov
pop
cld
jl
stos
push
mov
mov
push
push
or
decl
ja
sub
lods
in
popf
mov
xchg
data16
fnstenv
lods
cmp
repnz
or
push
fadds
es
xchg
jl
into
add
push
xchg
dec
lahf
inc
pop
cmp
inc
adc
ret
push
mov
pusha
insl
js
ret
sti
stos
sarb
hlt
outsl
and
enter
out
pop
dec
out
sub
cmp
fsubrl
push
clc
adc
or
mull
sub
mov
mov
push
das
int3
lds
sbb
out
inc
addr16
movsl
push
scas
in
jns
sub
int3
or
das
jb
cmc
mov
cmc
mov
jle
adc
add
jp
mov
xor
mov
repz
testb
inc
inc
cmc
ret
xchg
icebp
xchg
aas
inc
sarl
outsb
xorl
ret
insb
scas
mov
xchg
into
stos
jge
inc
xchg
add
insb
or
pop
adc
sub
jecxz
dec
sbb
orb
pop
popa
bound
lock
push
imul
mov
jnp
in
add
adc
jbe
xchg
mov
mov
das
jg
add
imul
out
call
les
lahf
inc
adcb
insl
lods
adc
xchg
xchg
mov
xchg
adcl
xor
icebp
popa
jle
test
dec
mov
lcall
mov
stos
dec
add
lods
mov
mov
scas
xor
shlb
mov
mov
push
scas
in
in
dec
mov
mov
cwtl
ds
lcall
ljmp
paddb
xor
aas
sahf
cmpsb
test
pop
fs
add
mov
lret
jne
fnstenv
aam
sbb
xor
sti
cmpsl
outsl
hlt
ret
jg
dec
jg,pn
add
cmpsb
pop
xor
call
jmp
adcl
ds
outsl
pop
ret
movsb
sbbb
pop
dec
fnsave
fldl
int
xchg
dec
push
mov
jne
inc
lock
and
adc
sti
fldl
pusha
les
push
mov
fucomp
mov
xor
inc
lahf
and
pop
mov
mov
sub
scas
popl
nop
and
or
mov
int
lahf
push
test
fisubs
icebp
aad
repnz
and
xor
lret
xor
aas
or
test
out
xchg
out
testl
mov
mov
dec
out
nop
call
inc
push
mov
or
mov
cmp
adc
cltd
add
test
cmp
jnp
stos
fnstenv
nop
or
rcrb
fsubr
add
pusha
cli
rclb
clc
movsl
sub
xor
add
js
jmp
pop
mov
sbb
jns
dec
add
and
data16
movsl
mov
mov
pop
mov
jle
repnz
mov
rcll
add
fadd
sub
subb
sahf
mov
je
fsubs
repz
scas
cmpsl
adc
rclb
lret
fbstp
sbb
lods
or
pop
int3
cmp
or
add
repnz
inc
sbb
or
out
fimuls
xchg
xchg
mov
jmp
ret
mov
pop
pop
gs
adc
mov
mov
cmp
outsl
and
gs
or
and
cmp
mov
mov
inc
ss
les
xlat
and
push
jecxz
dec
das
push
xchg
or
jnp
mov
push
pop
pop
pop
iret
loopne
adc
enter
lea
jmp
mov
dec
push
mov
xchg
or
and
cmp
jns
aad
xor
fwait
rcrb
xlat
test
stos
fsub
lds
jno
adc
cs
mov
sahf
call
dec
aaa
jo
scas
mov
addl
lea
lods
lcall
dec
sbb
test
cltd
stos
insb
andl
or
int3
adc
repz
aam
decb
mov
lea
idivl
jne
dec
mov
imul
push
dec
add
jae
repz
cmp
dec
int
adc
icebp
fnstcw
adc
clc
fcoml
mov
fisubrl
inc
cwtl
lock
rclb
adc
cmp
pusha
or
sub
int
stc
add
pop
orb
and
mov
aaa
inc
mov
movb
jbe
lea
aas
xchg
ret
jb
sbb
or
popl
in
or
adc
lcall
xlat
pusha
rcl
int3
jmp
push
xchg
insb
push
xor
fsubl
xor
cmp
icebp
cld
cmp
inc
shrl
dec
fisttpll
fisubl
test
jp
subb
lods
out
pop
jl
sti
mov
push
popa
mov
mov
jmp
xchg
cltd
call
sbb
idiv
popf
rcrl
out
pop
loope
or
sbb
adcb
data16
stos
push
inc
jge
cs
jg
mov
shll
mov
stos
and
ja
sbbl
adc
fbld
inc
or
nop
push
ror
repz
adc
adc
jmp
push
or
jbe
lods
jbe
push
mov
jge
hlt
sub
pop
into
shlb
cmpsl
sbb
imul
aam
pop
test
push
dec
sbbb
stc
mov
inc
add
dec
fdivrl
scas
test
adc
dec
cmp
inc
lods
sub
sti
xchg
xchg
hlt
insl
mov
cli
cwtl
jp
mov
and
cltd
mov
enter
dec
cmp
dec
test
jae
pop
pop
shrb
in
push
outsl
stos
ds
shlb
sbb
repz
xlat
xchg
loope
jp
ja
mov
pop
ja
sub
xchg
in
pop
push
sub
or
mov
test
adc
pop
jns
jne
cmpsb
add
test
sbb
pop
push
jb
lods
jne
dec
loopne
gs
jns
jne
popa
add
xchg
lret
mov
insb
sub
outsl
push
mov
mov
jp
push
sub
cmpxchg
adc
scas
mov
rorl
push
mov
mov
mov
jle
in
push
out
rorb
mov
push
jle
into
inc
cmp
je
and
cmpsl
jae
outsl
scas
outsl
mov
scas
ret
fsubs
aad
in
push
stos
jmp
aad
push
fsubl
jecxz
sub
xlat
push
into
ret
lock
push
push
imul
sbb
sbb
fcomip
jecxz
out
inc
gs
movb
xlat
mov
lret
insl
je
int
test
mov
ficoml
ljmp
push
fldenv
mov
fimuls
in
inc
adc
xor
jmp
xlat
jbe
sahf
push
insl
add
adc
mov
imul
sti
fsubs
mov
pop
jmp
fimuls
inc
sbb
mov
inc
dec
inc
negl
sahf
mov
inc
or
mov
adc
aaa
cltd
inc
daa
or
lret
icebp
ja
roll
out
out
cmp
jnp
and
xchg
mov
mov
sub
mov
pop
lods
dec
mov
int
mov
pop
xor
aad
push
mov
dec
rcrb
cli
ret
sub
pop
add
cmp
inc
roll
or
movsb
push
bound
or
mov
inc
jns
xor
push
xchg
das
adc
jns
or
or
mov
jmp
in
xor
push
sbb
push
add
xor
sbbb
or
lods
mov
jne
mov
insb
fsub
adc
testb
lahf
push
xchg
scas
insb
ret
pushl
data16
pop
out
out
mov
insb
adcl
mov
mov
and
inc
adc
mov
cmp
inc
repnz
mov
sub
ss
mov
shl
jge
out
jno
and
cmpsb
sub
mov
test
fxch
insl
cld
mov
shrb
je
arpl
mov
jge
jp
das
pop
mov
sub
xchg
push
out
cmp
cmp
xor
dec
adc
shlb
mov
mov
popl
xchg
insb
lahf
xchg
xchg
data16
push
ffreep
fdivl
pop
loop
fdivrs
jmp
imul
mov
insl
add
psllq
popa
jo
or
push
inc
inc
adcb
inc
out
out
rorb
test
cwtl
in
push
xlat
jp
mov
jle
mov
adc
xchg
in
jbe
mov
out
fwait
addr16
mov
mov
lahf
mov
cmp
sahf
pop
out
lock
loopne
lods
in
iret
mov
data16
arpl
xor
add
xchg
fsubrp
stos
aad
negb
push
pop
inc
sbb
out
jb
pop
mov
jmp
outsb
sbb
out
fildl
mov
inc
push
add
xor
push
aaa
stc
aad
xor
repz
xor
adc
mov
push
xchg
push
out
daa
or
pop
add
fdivr
jmp
add
dec
mov
mov
xchg
jne
xchg
out
shl
xchg
cli
mulb
outsl
sub
out
aas
jb
ret
out
mov
adc
jle
cmp
or
fdivr
pop
in
and
call
insl
adc
sub
sub
pop
mov
jne
push
sbb
add
mov
not
push
push
popl
push
es
mov
movsb
mov
fidivrl
jmp
inc
jecxz
xchg
jno
fisttps
lret
es
pop
mov
cs
push
pop
aad
pop
jne
mov
sahf
pop
fnstsw
nop
push
js
inc
jmp
insb
jb
fstpt
test
pop
test
cmc
fs
jb
inc
push
shlb
xchg
gs
in
movb
js
aad
bound
cmp
sahf
adc
pop
in
cmp
mov
mov
sbb
or
ret
sub
mov
add
movsb
jmp
orb
shll
and
into
dec
push
aas
xchg
or
cmc
or
ret
add
xchg
adc
mov
mov
je
add
and
mov
adc
dec
jns
cld
sub
push
dec
inc
or
les
outsl
pop
cmp
dec
xchg
dec
inc
push
scas
push
ret
or
mov
pushf
sti
mov
test
dec
aam
arpl
roll
bound
movsl
jb
test
les
dec
dec
adc
add
cmpsl
xchg
lea
and
sbb
xchg
shlb
sub
jns
jbe
xlat
ret
xlat
dec
shrl
addr16
sbb
mov
fsub
imul
push
loop
dec
and
pop
push
sub
add
adc
in
mov
loop
push
add
sarb
sub
aas
and
dec
push
dec
jg,pt
arpl
inc
dec
cld
sbb
adc
dec
bound
fwait
out
dec
jl
mov
cld
inc
mov
jmp
jp
xor
sbb
and
pop
mov
repz
fcomps
or
idivb
gs
xlat
js
loopne
iret
int
add
pusha
in
pop
fldl
add
sbb
cs
and
sbb
jmp
jns
sub
pop
int
pusha
fcoms
add
jge
inc
sbb
aam
gs
xchg
or
and
in
mov
aad
lret
insl
push
jb
outsb
jmp
std
or
jae
push
jbe
and
scas
adc
mov
xchg
sub
adc
fwait
and
mov
sbb
mov
imul
sub
es
push
iret
jne
inc
fisttps
aaa
and
fisubs
sbb
loopne
push
iret
mull
and
mov
mov
repnz
mov
xchg
andb
sti
jns,pn
ljmp
aas
enter
inc
mov
test
or
jns
dec
add
xor
sub
xor
push
loope
pop
mov
sbb
cmp
push
dec
inc
js
sbb
mov
push
test
mov
popa
addb
aas
out
sahf
ljmp
inc
mov
mov
rcll
movsb
pop
cmp
mov
loope
fistpll
and
sahf
xchg
pushf
aam
imul
mov
mov
dec
cwtl
jg
enter
into
stos
and
mov
aaa
ljmp
xor
xor
add
imul
shrl
fists
mov
pop
dec
dec
cmp
cmpsl
movsb
ljmp
jge,pt
gs
fcomip
xchg
push
stc
fsubrl
sbb
add
je
jb
push
rcrb
stc
inc
jp
sahf
adcl
hlt
push
add
and
in
arpl
jbe
pop
lret
sbb
xor
sub
ret
aad
inc
cli
loopne
push
xor
stos
and
xorl
mov
in
cmp
mov
xor
pop
shr
jb
lods
js
add
sbb
xor
push
add
push
out
fldl
push
mov
mov
frstor
adc
mov
in
adc
je
lret
jno
inc
cmpsb
push
insl
mov
xor
pop
and
add
pop
mov
pop
aad
jmp
fsts
das
jmp
in
mov
cmp
or
lods
test
add
add
mov
ss
movsb
pop
jl,pn
ss
push
lcall
sub
jnp
pop
fistps
sbb
daa
xchg
imul
clc
outsl
mov
push
cmpsl
push
sub
dec
call
imul
push
fwait
cmpsl
mov
cli
dec
or
sahf
jge
sub
pop
in
or
xlat
adc
pushf
shlb
adc
outsb
push
add
popa
call
or
fdiv
hlt
add
aaa
inc
mov
mov
sbb
xchg
cmc
test
scas
pop
cmp
addr16
fistps
fbld
fdiv
aaa
and
imul
sub
nop
lods
shr
loope
and
shr
pop
jbe
pop
mov
movsl
add
xchg
mov
xor
or
xchg
cmpsl
int3
daa
shl
mov
fcomp
lret
adc
lret
or
mov
out
cmp
push
outsb
push
iret
jbe
test
or
mov
add
pop
mov
bound
add
xor
lret
sub
push
mov
movsb
clc
inc
out
dec
movsb
leave
mov
and
and
into
sbb
jp
shl
mov
xor
loop
int
pop
push
mov
shll
mov
mov
sbb
sub
xchg
insl
dec
nop
das
xor
jp
out
popf
in
sub
add
cmpsl
xchg
sbbb
mov
cmp
rcrb
and
adc
incb
ds
mov
stos
mov
test
mov
jmp
cmp
stos
sarl
popa
mov
pop
add
fwait
pop
and
mov
and
xchg
add
jo
pop
je
xchg
in
insl
lcall
lcall
scas
xor
sub
sarl
inc
mov
xlat
fcmovnb
mov
inc
pop
pushf
xor
inc
rorb
xchg
mov
shrl
fisttpl
in
test
push
sbb
push
adc
pop
jmp
cmp
pushf
scas
adc
movsl
cmp
add
dec
stos
push
inc
cmp
out
stc
pop
adc
and
testl
push
xchg
stos
in
out
enter
push
mov
mov
lret
mov
add
add
in
mov
int3
add
imul
push
mov
imul
fistl
xchg
pop
cmp
fidivs
pop
mov
es
cltd
lock
ds
out
insl
lcall
fsub
sub
pop
out
in
ljmp
or
loope
std
lods
orl
stc
fwait
les
icebp
and
test
aaa
dec
ror
jp
mov
stos
cltd
xchg
xor
inc
ja
adc
sub
lock
pusha
mov
cmp
mov
sub
pushf
test
pop
push
cmpsl
into
inc
xor
or
dec
cltd
inc
ja
dec
adc
pop
and
aaa
inc
fcmovb
push
mov
pop
push
lret
mov
cmp
mov
jno
dec
jae
lret
out
cmpsb
test
push
sbb
mov
int3
sbb
shll
mov
add
sub
lods
cli
xor
xor
add
js
or
and
addb
sub
mov
in
jecxz
and
ficompl
lret
loope
stc
and
xchg
cmp
dec
pusha
iret
jecxz
xchg
xor
push
insb
ret
in
fildll
mov
fldenv
push
mov
scas
scas
sbb
test
shll
push
icebp
js
xchg
mov
mov
ficoms
and
sbb
jno
sti
mov
push
pop
pop
lods
ret
xor
lahf
lahf
int3
inc
loopne
fs
hlt
insb
loopne
jmp
jns
div
dec
xor
sbb
inc
std
inc
mov
xlat
sub
pop
push
mov
xor
mov
add
adc
inc
pop
outsl
sbb
dec
mov
jo
popf
sti
mov
pop
sbb
sub
inc
cmp
rcpps
cli
in
sub
mov
mov
loop
rclb
sbbb
out
fwait
mov
aam
push
cmp
popf
das
push
loop
fiaddl
add
inc
xchg
dec
add
dec
mov
ljmp
xchg
lods
pop
test
mov
clc
lea
adc
popf
fistpl
push
loop
or
xor
xorl
sub
sbb
mov
outsl
add
das
scas
negb
dec
jb
pop
mov
xor
arpl
adc
dec
addr16
cmp
lds
outsl
in
mov
stc
sysenter
dec
jno
mov
fstpt
jo
movsl
sti
push
loop
rorl
leave
jmp
lret
jl
scas
je
dec
xor
jecxz
jno
cmpsb
xor
push
aas
sbb
lods
or
insb
mov
leave
jp
adc
xor
loope
nop
or
ss
xlat
push
gs
cmp
fwait
pop
pop
xor
cmpsl
dec
vmwrite
in
inc
or
lock
fbstp
pop
cmp
or
jae
lods
push
adc
movsb
in
sub
sti
ret
push
lods
xchg
or
scas
cld
xchg
inc
adc
cs
cli
into
xchg
add
xchg
outsb
popa
jecxz
add
cld
fcos
sbb
fst
push
add
dec
xchg
mov
dec
mov
iret
jecxz
aam
sbb
arpl
je
hlt
pushf
insl
imul
lock
mov
dec
shll
xchg
cli
dec
mov
iret
insb
sbb
adc
xlat
sarb
sub
pop
lcall
rol
sub
aad
push
pushf
mov
insl
pop
fucom
ljmp
out
mov
stos
enter
clc
mov
mov
push
cli
sbb
xor
in
loopne
test
mov
insl
jecxz
insl
add
jmp
out
pop
sub
imul
aas
mov
xorb
mov
mov
rorb
xor
dec
jp
and
fsubrl
mov
xlat
aad
ljmp
addr16
pop
sti
pushf
inc
push
jecxz
outsl
mov
mov
lock
aaa
xor
call
cwtl
xchg
pop
popf
cmp
pop
in
fcompl
scas
pop
xor
ja
aaa
repz
pop
scas
les
pop
movsl
pop
or
xchg
in
insl
push
ss
mov
mov
sub
cmc
sbb
inc
jmp
in
jecxz
inc
mov
jo
mov
adc
jecxz
js
add
push
inc
rcll
or
jne
sbb
or
aam
nop
insl
scas
mov
and
pop
test
push
lds
dec
dec
repz
mov
js
outsb
inc
mov
adc
xchg
bound
mov
mov
jno
mov
xchg
iret
addr16
movsl
in
imul
data16
andl
enter
xor
cmpsl
xchg
inc
shrb
push
sub
and
push
jb
push
sti
xchg
mov
pop
out
mov
mov
jge
ljmp
push
cmp
adc
int3
psubusb
stc
into
outsl
push
out
decl
inc
stc
int
mov
mov
call
insb
out
in
mov
and
inc
mov
lahf
push
jne
outsl
das
jecxz
cmpsb
mov
and
push
notb
adc
sarb
psubw
dec
mov
sbb
jp
jb
xor
mov
loopw
lds
push
mov
mov
ds
std
sub
mov
inc
mov
xchg
icebp
jle
inc
js
xor
dec
dec
dec
jl
int3
add
sub
mov
mov
test
loopne
xor
push
imul
fidivl
inc
movsb
adc
arpl
add
stos
jb
outsb
icebp
cmp
ss
jg
sub
pop
mov
pusha
sbb
ja
cmpsb
fs
sti
shlb
sbb
ljmp
push
aaa
mov
daa
aad
sti
dec
push
xchg
ud0
je
inc
idivl
dec
insl
mov
xchg
pop
cwtl
jle
or
test
mov
les
out
pop
aaa
push
push
dec
push
out
xor
nopl
rcrl
jbe
pop
popf
inc
cwtl
test
push
xor
adc
sahf
cltd
cs
jmp
or
stos
ja
jg
leave
cmc
xchg
pop
stc
or
sbb
js
dec
lods
es
adc
clc
dec
cmpsl
sbb
rorl
icebp
nop
sbb
movsl
mov
inc
jo
or
ljmp
inc
lock
in
cmp
lods
sahf
ja
icebp
ficoms
and
je
jecxz
leave
xchg
imul
stc
push
mul
pop
scas
bnd
push
xchg
insl
mov
mov
push
mov
fs
mov
jne
mov
fnstsw
std
and
xchg
out
pop
cmpsb
in
pop
jmp
sbb
adc
cmc
loopne
sbb
jns
inc
xchg
xlat
bound
push
or
push
ret
inc
lds
pop
jne
xor
int
clc
adc
jmp
mov
push
out
ljmp
mov
test
mov
adc
loop
add
mov
xchg
sub
cld
add
inc
push
dec
mov
negb
add
fnop
pushf
sub
xchg
adc
arpl
dec
add
mov
adc
btrw
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
add
add
add
add
mov
add
inc
loope
add
add
add
add
add
add
addb
add
add
add
enter
sbb
or
add
add
add
add
add
add
addb
add
add
add
or
add
in
fmull
add
and
add
add
add
mov
dec
es
jae
loop
xchg
mov
sbb
ja
sub
daa
scas
mov
call
mov
sub
data16
pop
bound
push
call
cli
in
sarl
test
xorb
lods
adc
gs
mov
aad
push
jne
popa
and
sbb
lock
or
and
push
imul
mov
xor
lcall
insb
imul
cmp
mov
xchg
cltd
mov
insl
or
fs
shrb
dec
leave
gs
iret
sbb
inc
mov
cmp
adc
in
mov
inc
xchg
idivl
in
pop
iret
lods
je
lret
xlat
mov
pop
push
sbb
mov
pop
pop
add
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
outsl
aad
pop
call
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
pop
mov
add
sbb
push
jo
mov
pop
mov
push
push
push
pop
pop
pop
sub
xor
add
js
sbb
add
mov
push
mov
popl
push
or
pop
sub
or
cmp
jne
mov
jmp
repnz
sar
lahf
in
mov
mov
test
xor
adc
add
sbb
cli
stos
or
push
and
fstps
jmp
jl
pop
mov
es
mov
cmpb
jnp
rcrb
fisubrs
jg
mov
jmp
decb
and
push
and
ret
push
push
movsl
das
mov
xor
adc
fisubrs
mov
cs
pop
adc
adc
popa
in
sti
lea
rcrl
xchg
pop
pop
sahf
lahf
loop
fisubrs
add
push
push
call
sub
icebp
xchg
mov
fs
pop
faddp
add
scas
lcall
and
pop
not
cli
ret
push
xchg
push
or
adc
pop
fisubrs
imul
leave
xchg
mov
outsl
lcall
ret
fisubrs
fcoms
fcmovnbe
pushf
popl
nop
cmp
sub
and
add
jnp
jno
and
xor
push
packssdw
mov
lret
out
je
jmp
adc
dec
sbb
or
pop
dec
nop
lods
dec
in
popf
or
dec
inc
dec
dec
call
push
or
mov
add
jg
push
sbb
movsl
push
pushf
push
push
xchg
sbb
jl
int
stos
mov
pop
sbb
sub
and
xlat
mov
mov
mov
mov
xchg
cmpps
inc
cmp
dec
out
jnp
mov
inc
adc
pop
mov
xor
mov
sbb
mov
pop
nop
lahf
mov
in
xchg
xor
jae
dec
mov
std
cmp
roll
xchg
xchg
shrb
out
mov
jo
fstpt
loop
out
ds
iret
push
sbb
xchg
mov
pop
mov
pop
outsb
jno
sbb
and
xor
and
clc
lcall
and
lahf
dec
jne
sbb
push
mov
cli
sub
icebp
out
jle
push
push
mov
std
pop
push
inc
mov
lds
sbb
sub
pop
lods
or
dec
mov
mov
pop
sbb
pop
arpl
pop
push
imul
pop
jo
push
int3
adc
pop
ffree
xchg
lods
xchg
sbb
dec
lods
shll
add
loop
push
and
in
inc
xchg
mov
scas
dec
sarb
aaa
dec
xchg
sti
and
repnz
add
mov
push
sbb
cs
pop
addl
fstps
fiadds
int3
xchg
inc
in
xchg
test
jmp
sub
add
cld
xchg
sbb
lcall
dec
repnz
mov
add
insb
jne
sbb
clc
rol
cld
hlt
fcomps
daa
popf
adc
mov
psubusw
xchg
movsb
mov
sub
and
xchg
data16
pop
jne
je
jmp
ljmp
ret
inc
push
dec
ret
inc
add
ret
rcrl
daa
jge
js
add
fsub
repz
jg
out
cmp
or
ss
pop
jg
decb
pop
lock
jnp
dec
add
cld
or
add
cld
adc
fcompl
jg
popa
jnp
dec
add
pop
sahf
or
jg
pop
jg
pop
stos
add
enter
divb
pop
lret
xlat
mov
jg
ljmp
stc
cwtl
int3
xchg
js
call
mov
dec
scas
jle
add
push
outsl
push
jg
in
mov
pop
jg
into
ds
std
push
pop
arpl
pop
test
arpl
pop
fsub
mov
jp
fs
pop
push
sub
add
jg
sub
pusha
into
pop
incl
cmp
ljmp
testb
push
pop
es
jg
ret
std
pop
fsub
ficomps
jg
in
jg
ret
jnp
rcrl
arpl
jg
pop
or
testb
jbe
pop
clc
push
js
jg
loope
push
jbe
push
push
dec
push
jg
ret
nop
scas
jns
mulb
pop
fdivs
loope
mov
out
jg
fbstp
jl
pop
stos
inc
js
cmp
rcrl
or
pop
push
push
cltd
push
push
mov
test
cwtl
fdivs
or
mov
loopne
ror
pop
cmp
push
sarl
cli
arpl
pop
fmuls
std
pop
fmuls
loope
popf
rcrb
add
dec
inc
pop
jnp
pop
data16
jp
iret
pop
arpl
jg
sbb
mov
jg
sub
jle
loopne
cltd
sarb
jg
pop
in
bound
and
jg
pop
adc
std
pop
call
dec
lahf
push
js
push
imul
dec
loope
cmp
fbstp
cmpl
adc
inc
sbb
or
loope
add
popa
std
pop
push
mov
adc
inc
js
pop
inc
xor
out
lods
cmp
xchg
cmpl
push
cmp
mov
mov
loope
add
js
add
jmp
inc
ffreep
iret
pop
jg
xchg
int
ja
cmp
mov
mov
loope
add
mov
iret
pop
jg
xchg
int
ja
cmp
mov
mov
loope
add
aad
dec
mov
mov
es
mov
push
loope
add
mov
std
push
inc
xor
out
lods
cmp
xchg
sbb
xchg
int
ja
cmp
es
jg
std
arpl
pop
lcall
lret
aad
dec
mov
mov
es
fmul
mov
push
insl
js
push
andl
cmp
mov
push
shr
shl
cmc
dec
js
push
andl
movsb
jge
fisubl
sub
pop
jg
pop
jg
cmp
jmp
inc
jg
pop
xor
std
pop
lcall
add
lahf
ss
xor
std
loope
loopne
pop
aas
mov
adc
jg
out
cmpl
push
jg
loope
sbb
push
jg
mov
ljmp
mov
sub
pop
jg
sub
data16
gs
aaa
cmp
out
xor
orb
push
sub
mov
stc
arpl
and
int
pop
lods
scas
pop
push
or
loopne
pop
dec
cmp
add
repnz
xchg
mov
inc
mov
mov
inc
lds
xor
adc
pop
daa
push
shrb
add
dec
iret
push
das
jp
dec
stos
xlat
add
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
add
outsl
mov
lcall
add
jg
pop
jg
pop
ljmp
jg
pop
jg
pop
jg
dec
std
jg
pop
jg
pop
jg
pop
jg
pop
jg
mov
sbbl
pop
jp
cmp
mov
scas
push
fcmovnbe
pop
add
sbb
les
push
jle
lcall
inc
sub
shlb
addr16
mov
and
pop
or
or
cmc
fnstcw
out
out
fs
mov
ja
cmc
mov
test
adc
sarb
dec
insb
negl
mov
shrb
xorl
or
cltd
ret
insl
xchg
xlat
popa
pop
dec
mov
imul
loop
mov
and
mov
ljmp
mov
sub
sub
cltd
inc
frstor
f2xm1
out
dec
push
cs
mov
xchg
ja
movsb
jl
nop
mov
sbb
gs
add
add
aad
por
and
stos
sub
lret
lds
imul
or
xchg
ljmp
and
dec
popa
mov
cltd
cmp
int
xchg
jnp
push
lret
fistpll
cwtl
bound
enter
add
and
stos
into
mov
adc
cmpl
cmpl
mov
notl
mov
or
icebp
daa
repz
loope
movsb
popf
das
mov
loop
jne
dec
scas
rolb
or
pop
xor
or
and
fistps
arpl
push
sbb
popa
sub
jno
push
mov
cwtl
mov
icebp
mov
notl
sbb
sahf
jae
xchg
repnz
pop
ret
int3
pop
popa
mov
loop
enter
cmc
mov
sahf
inc
add
push
lods
vpmulhuw
add
xchg
adcl
movsb
pop
icebp
mulb
shll
cld
cmp
jg
cmp
jg
sub
push
inc
and
in
ret
out
jbe
and
cmpsb
xchg
mov
xchg
inc
xchg
xchg
sbb
and
add
pop
xchg
pop
mov
leave
jne
outsb
mov
mov
cmp
jb
or
push
clc
cmp
add
clc
add
pop
sub
and
cmp
stc
jecxz
push
test
or
mov
adc
adc
or
lea
and
repnz
mov
cwtl
jge
mov
incb
in
inc
addr16
arpl
push
fcmovb
stos
dec
loopne
mov
in
mov
hlt
or
ja
jl
shll
scas
push
imul
pop
inc
dec
cli
inc
sub
pop
pop
in
test
or
xor
mov
jp
jbe
cmp
jns
popl
add
add
add
add
add
or
add
adc
fmull
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
fmull
add
fmull
add
fmull
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
fmull
add
fmull
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
xor
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
mov
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lea
add
jmp
fiaddl
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
xor
loop
insb
mov
imul
pop
in
cltd
mov
mov
cmc
in
lret
mov
cmpsl
cmp
fcoml
rcr
outsb
mov
cli
add
aam
jns
lods
adc
nop
fisttps
sti
leave
enter
mov
dec
popf
hlt
stos
and
dec
addl
js
xchg
pop
popl
test
popa
jns
push
cmp
xlat
push
outsl
sti
mov
out
imul
in
xchg
mov
dec
push
stos
and
mov
adc
pop
xchg
sbb
jno
or
push
and
insl
jl
divl
jge
int3
pop
mov
push
inc
out
fldl
pop
inc
nop
sub
lcall
out
loopne
cld
rolb
mov
outsb
pushf
jl
inc
dec
leave
mov
and
jl
nop
int
sbb
ret
jne
out
sbb
mov
inc
and
push
mov
pop
dec
mov
sub
xchg
jp
push
not
or
lcall
addr16
lods
and
cmp
xor
cmc
cmp
div
cld
lahf
inc
je
xchg
mov
pop
mov
dec
std
xchg
aas
cmp
lods
sahf
dec
jmp
add
pop
mov
xor
stos
mov
outsb
sub
sub
jle
sbb
out
imul
inc
or
repz
cmpsl
xchg
adc
mov
ror
jge
mov
dec
aaa
scas
pop
inc
mov
jno
std
dec
cs
imul
pushf
std
stos
mov
cmp
cmp
lock
pop
mov
test
jecxz
jns
ret
lods
add
test
push
and
mov
movl
in
sbb
in
mov
cmp
cmpsl
or
push
xchg
into
je
leave
mov
subb
rcrl
push
sbb
dec
es
outsl
push
or
mov
fildl
sub
inc
cwtl
jnp
jecxz
mov
testb
mov
cmpsl
fs
jne
dec
stos
cld
call
negl
sbb
and
stos
js
loope
xchg
outsl
out
lret
jle
xchg
scas
stc
pusha
sub
ja
pop
cmp
ja
mov
sub
arpl
sbb
inc
xchg
dec
adc
fsubs
shlb
dec
sub
repz
cld
xchg
push
push
ret
push
jne
sarl
loopne
cmpsl
dec
and
inc
enter
addr16
cmp
jge
lods
cmp
int3
jns
cli
shll
popa
dec
sub
inc
xchg
inc
xor
ja
fistps
insb
bound
leave
cltd
fstps
or
adc
scas
sbb
inc
scas
divl
push
xchg
mov
test
cmp
test
xor
cli
inc
lahf
icebp
push
mov
in
lods
sarl
and
jns
sub
and
add
inc
mov
or
pop
std
aas
repz
cltd
pushl
stc
das
test
pop
bound
xor
jl
out
fs
in
cmp
xchg
ljmp
xor
mov
mov
push
mov
mov
fmul
imul
out
mov
or
cmp
rolb
or
aam
loope
cmp
adc
stos
adc
mov
fsubrl
cmp
or
out
xchg
imulb
mov
mov
cmp
loope
mov
lret
add
int3
or
je
adc
imul
lret
stos
inc
pop
cmp
insl
jo
jmp
sbb
inc
ljmp
xor
jg
push
adc
inc
add
inc
addb
mov
dec
dec
or
adc
xchg
push
pop
shl
jb
fdiv
out
adc
sub
clc
and
inc
pop
dec
jp
jne
loope
cmp
push
stos
lock
cmp
and
pop
mov
mov
sbb
test
lcall
or
ds
int3
mov
aaa
shrl
loope
cs
ret
sub
paddusb
push
ss
xchg
cmc
inc
or
aad
inc
fcomi
jmp
jno
xor
mov
push
mov
sbb
push
mov
xchg
xor
das
mov
push
ja
pop
jbe
dec
into
mov
xor
jg
push
mov
sahf
jae
inc
dec
mov
or
rcrb
push
mov
inc
or
xchg
inc
mov
sub
cld
dec
mov
sbb
xor
or
sbb
mov
lcall
jb
loope
xchg
xchg
xor
push
adc
mov
pop
fwait
test
push
out
or
xchg
daa
sbbb
xchg
out
xchg
stc
pop
test
add
mov
inc
xchg
sub
jge
push
aad
les
fdiv
cltd
or
lahf
loop
mov
sub
sbb
fs
inc
or
or
test
lahf
and
shrl
ds
loop
call
add
mov
lds
dec
cwtl
out
sbb
jns
cld
pop
jbe
mov
test
and
pop
outsl
sbb
xor
jo
popf
jns
mov
jle
push
xor
inc
fistl
arpl
ljmp
icebp
fistpll
aad
mov
dec
pop
fsubs
cltd
movb
jb
das
push
mov
adcb
sub
std
movsb
enter
xor
dec
ficoms
cmp
sti
xor
movsb
xor
idivl
jno
insb
sub
add
push
rcll
add
push
popf
xchg
mov
call
sub
pop
fstps
jmp
loop
cli
push
lods
cltd
fs
push
lahf
outsl
add
mov
test
xor
xchg
jns
lret
mov
add
movsb
pop
in
addr16
inc
cmp
ja
xor
adc
mov
pusha
das
mov
pop
push
popf
bound
xchg
fdivl
in
sub
mov
inc
mov
test
aas
imul
imul
sti
xchg
jae
in
push
push
std
push
fidivs
in
cmpsb
fildll
shll
pop
test
or
mov
pop
rcrl
or
or
or
sarb
ret
in
and
lds
add
jle
fwait
push
sbb
pop
inc
pop
test
add
jmp
ret
je
jns
je
add
xchg
or
cmpsb
jo
cmp
fsubrs
and
iret
int
sbb
pop
dec
popl
outsb
add
add
orb
mov
sub
test
stos
sbb
xchg
jg
fcoms
popa
mov
xchg
lahf
icebp
mov
loope
sti
add
mov
popf
inc
lret
cmp
cmp
add
and
int3
push
pushf
es
roll
scas
pop
or
lds
jl
xor
push
adc
scas
punpcklbw
add
int3
xchg
dec
xor
push
add
jmp
dec
push
mov
xchg
sbb
cmpsl
fneni(8087
inc
hlt
imull
push
xor
ret
sbbl
jmp
jne
xor
ss
sbb
pop
into
jmp
sub
sbb
jle
cmc
pusha
dec
pop
repnz
movsb
mov
inc
adc
ljmp
ljmp
push
out
xor
cmp
loope
fcoms
imul
scas
inc
jmp
leave
inc
iret
dec
add
xchg
push
jp
mov
mov
in
sbb
gs
cwtl
out
mov
pop
cmp
mov
mov
std
jae
sarl
adc
sbbb
insb
push
cmpb
mov
push
cmpsl
loop
push
cmp
dec
inc
dec
and
push
cmp
mov
imul
mov
mov
fisubs
test
mov
sub
test
add
add
pop
or
mov
sbb
sub
mov
adc
mov
push
pop
in
sub
pop
pop
iret
daa
jnp
dec
mov
aaa
mov
fwait
mov
repnz
fisubrs
shl
je
xchg
xchg
jnp
and
pushf
fisttpl
xor
and
xchg
es
movsl
pop
mov
mov
push
incb
pop
lock
sbb
jg
insb
sbb
pop
jne
xchg
sbb
push
sub
adc
lods
repz
jns
in
ret
into
xlat
jg
inc
fstps
xchg
lods
jecxz
cli
mov
test
cmp
push
in
adc
inc
mov
scas
add
fisttpl
pop
cmp
pop
fmuls
xorl
scas
push
js
adc
int
es
int
cmpsb
test
pushf
ffreep
movsb
xor
stc
ljmp
jmp
mov
xchg
fisttpll
mov
add
lds
and
and
xchg
pushf
aam
and
aam
outsb
push
add
push
arpl
inc
pop
std
movsb
pop
es
xchg
mov
in
test
adc
dec
filds
fisttpll
movsl
sub
mov
add
jle
or
sbb
xchg
add
jb
adc
dec
dec
jg
call
cwtl
push
aad
fcmovnb
dec
es
mov
mov
xchg
sahf
mov
stc
push
out
xchg
sub
test
jae
imul
jmp
and
sbb
mov
ficoms
cmpsb
test
sbb
out
push
faddp
push
lahf
add
loop
adc
addr16
sbb
add
imul
xor
fcmovne
cmp
mov
cmp
add
pusha
cs
and
mov
fwait
cmpsb
pop
xchg
push
xor
add
fstpl
enter
loop
jmp
mov
sub
dec
js
outsb
dec
in
or
jnp
pop
lods
shl
mov
subb
aam
xor
pop
inc
pop
test
inc
outsb
sbb
cwtl
out
dec
jb
std
cmp
xchg
fcmovbe
outsl
ljmp
xchg
fmuls
fwait
dec
lods
xchg
daa
adc
inc
pop
in
gs
iret
imul
jne
sti
push
divb
dec
movsb
or
aad
orl
or
in
xchg
fbstp
inc
xchg
inc
xchg
in
push
ret
ss
fstpt
dec
add
push
cmp
imul
add
jl
and
test
and
roll
les
cmpsb
cltd
add
xor
hlt
adc
inc
sub
mov
mov
and
inc
push
mov
sub
adc
and
ljmp
outsl
mov
xchg
pop
push
xchg
mov
lds
mov
fidivl
fsubl
test
mov
lock
xlat
jmp
dec
xor
inc
dec
divb
mov
and
pop
jae
pop
in
mov
push
lret
cmp
iret
pop
lahf
rorl
pop
sbbl
lds
gs
cmp
cmpsb
sub
push
and
icebp
push
data16
test
push
in
daa
ss
movsl
loop
in
test
sarl
aam
imul
nop
xchg
lea
or
sti
std
cmp
fcomps
pop
out
or
lahf
in
pushf
sbb
in
inc
negb
and
cmp
and
mov
jne
ljmp
aaa
fwait
adc
pushf
dec
cltd
inc
add
mov
cltd
jle
aas
lea
popa
adc
das
jg
mov
fstps
fcompl
lret
fcoms
or
fs
mov
mov
fbstp
inc
mov
pop
xchg
mov
and
adc
pop
mov
lret
sar
popf
sub
fnstcw
adc
frstor
push
push
xchg
cld
or
pop
jne
icebp
cmp
into
add
or
or
push
sub
or
dec
in
imul
out
add
imul
loop
dec
and
lods
mov
rolb
xchg
shrl
loopne
out
mov
mov
das
mov
mov
loop
or
icebp
mov
cmp
cli
sub
push
ficoms
jge
lods
jmp
ljmp
sbb
adc
mov
clc
adc
popa
add
jnp
pop
addr16
lahf
mov
sub
jae
fdivrs
sbb
hlt
ficomps
das
jge
jo
stos
js
add
and
fmuls
int3
shll
sbb
xlat
push
mov
mov
int3
xor
inc
enter
pushl
outsl
jns
pop
inc
push
lock
or
lock
dec
cmpsb
push
mov
mov
and
mov
jecxz
xchg
mov
in
imul
cmp
cmp
stos
shlb
leave
dec
adc
lret
jg
sub
jmp
rorb
incl
stc
icebp
fistpl
pop
add
push
fucomp
mov
pop
out
fwait
sbb
popf
push
lcall
shlb
shlb
fimuls
jne
gs
inc
jg
bound
inc
rcll
sbb
sbb
inc
leave
fldl
sahf
movsb
and
inc
rclb
adc
in
stc
test
lds
inc
imul
aad
inc
mov
mov
fldt
dec
mov
test
call
jl
out
jmp
xlat
out
movmskps
insl
or
fldenv
stos
cld
ljmp
sbb
and
gs
sahf
xchg
lods
pop
test
cmp
push
sbb
leave
xor
pop
fsubrs
mov
dec
pop
mov
sarl
sub
xchg
lock
xor
das
pop
fsubs
enter
sbb
rolb
mov
add
ret
std
lds
jb
pop
xor
cmp
adc
ficoms
add
xor
sub
ss
inc
into
mov
subl
loop
arpl
xchg
push
sub
jmp
addr16
lcall
das
bound
mov
movsl
pop
mov
xchg
xchg
sub
xchg
cmpl
leave
xlat
push
push
jbe
nop
sub
sbb
jl
push
roll
adc
jnp
nop
out
out
mov
imull
sbb
mov
sbb
and
in
jno
and
jge
xor
fwait
xor
mov
cmp
sub
push
idivl
add
imull
mov
pop
jge
push
xchg
sub
lret
push
les
inc
out
sarl
addl
repnz
int
repz
test
cmp
outsb
mov
jne
add
inc
mov
repnz
cs
adc
dec
test
lret
xchg
out
xchg
aaa
mov
loopne
cmp
int3
nop
sub
cmp
add
std
push
dec
adc
lds
jne
cmp
mov
sub
hlt
adc
std
test
sub
aam
inc
fists
push
xlat
aas
mov
xchg
int
sub
jne
movsb
or
or
cmp
shl
fisttpl
popa
mov
and
sbb
push
dec
and
dec
add
mov
dec
mov
inc
pusha
in
nop
ss
out
inc
jae
mov
loope
mov
fldcw
loope
js
fmul
mov
test
xchg
or
aad
or
pop
test
cmp
ss
loop
inc
cs
pop
out
insl
out
sub
into
pop
inc
inc
fbstp
repz
pop
nopl
std
sub
inc
aad
jns
cmpb
sub
sub
and
cmpsb
fidivrl
adc
inc
push
jp
xor
mov
pushf
sub
movsl
fsubs
xchg
call
add
mov
or
and
jns
lret
aad
mov
mov
into
into
addr16
sub
push
popa
sbb
dec
imul
in
xchg
or
movsl
xchg
roll
xor
int3
sub
pop
and
mov
loope
leave
push
ja
xor
jg
cli
inc
push
std
popa
jp
add
cmp
rclb
popa
test
aaa
xor
cmpsb
aam
push
mov
cmp
nop
push
je
pop
mov
movsb
cmpsb
push
jbe
inc
insb
push
xchg
xchg
int
pop
ss
movsl
pop
sub
fprem
lret
aam
ja
das
cmpsl
arpl
das
adc
cld
fucom
loop
les
jle
test
incb
repz
ljmp
lahf
ljmp
lock
mov
test
gs
or
xchg
mov
cmpsl
dec
push
pop
cmp
hlt
adc
sahf
roll
into
lds
ret
dec
lret
adc
mov
icebp
in
mov
xlat
add
clc
pop
les
inc
mov
addr16
xchg
xchg
popf
jmp
lret
cmp
das
pop
scas
mov
insb
inc
sahf
xchg
cwtl
mov
mov
adcl
out
sbb
pop
shll
mov
mov
push
push
inc
or
cmp
jg
mov
insl
cmp
ss
leave
push
inc
movsb
lahf
add
jb
pop
push
cmpsl
cltd
and
mov
cmp
pop
jecxz
mov
push
sub
sbb
adcb
jecxz
enter
insl
pop
cmp
jge
fsubrs
inc
fsubs
or
push
js
aas
sbb
dec
add
mov
pusha
rcrl
push
push
movsb
dec
fldcw
push
rorl
mov
jge
icebp
mov
rorl
jmp
mov
dec
cwtl
sti
orl
jbe
and
lahf
cmc
iret
xchg
fwait
push
sti
adc
or
test
mov
inc
sbb
and
jg
push
push
loopne
sub
pop
xor
push
pop
scas
inc
pop
cmp
es
les
xchg
sahf
test
test
mov
fmull
or
jnp
mov
and
pop
inc
mov
insl
rcrl
in
outsb
stos
inc
in
dec
dec
hlt
cmp
ret
jae
ret
xchg
add
inc
movsl
ret
insl
push
mov
or
test
outsl
lock
shll
loopnew
pop
ss
jnp
sti
and
inc
arpl
fisubrl
adc
cmpsb
lret
sahf
adc
mov
fwait
xor
repnz
dec
mov
popa
cwtl
mov
inc
outsb
lea
lret
inc
fsubr
fs
call
test
rolb
inc
add
add
fwait
push
loopne
inc
dec
adc
mov
mov
data16
pusha
fiaddl
out
leave
xchg
aam
inc
lods
lods
loop
mov
jae
pusha
xor
cmp
cli
pop
outsb
xchg
stos
jae
test
or
sub
fisubs
mov
pop
ss
cmpsl
jmp
push
cwtl
dec
stc
push
cmp
into
sbb
int
pop
cmpsb
outsl
pushf
movsl
jno
call
lahf
mov
mov
aas
jmp
test
mov
in
imul
outsl
cmc
adc
sub
lock
dec
jns
adc
repnz
fisubs
xchg
cld
clc
je
in
data16
dec
arpl
lahf
dec
fsubrl
pushf
push
adcb
dec
insl
mov
sbb
das
jno
mov
addr16
ja
mov
mov
dec
outsb
outsl
sub
inc
nop
push
enter
jne
repnz
xchg
inc
or
adc
dec
jl
pop
mov
arpl
and
mov
and
ret
pop
pop
sub
push
stc
xchg
cmpsb
fisubrl
mov
sbb
jae
rorb
dec
dec
fcoms
outsb
adc
adc
and
add
shrb
push
adc
xor
inc
idivb
sahf
xor
or
loope
js
lock
pop
and
sub
pop
fnstenv
cmp
gs
test
test
lcall
jbe
aam
push
test
xor
cmpsb
mov
inc
roll
insb
mov
cmp
sbb
int3
jmp
cmpsb
lahf
jl
mov
mov
clc
pop
sub
les
das
fwait
idivl
add
jne
gs
jl
orb
inc
stc
iret
loop
call
cltd
into
lods
leave
or
shrb
adc
pushf
xchg
inc
lods
add
lods
push
or
push
cwtl
jne
mov
mov
repz
mov
in
add
xlat
push
sub
mov
and
lods
movsb
xor
movsl
pop
lock
mov
jns
cli
dec
and
adc
xchg
sbbb
fiaddl
cld
stos
pop
sti
cmp
dec
mov
inc
adc
push
sbb
mov
cltd
in
xor
mov
push
mov
ja
pop
mov
jecxz
mov
pop
nop
xchg
fs
loopne
std
jp
mov
lods
xchg
or
sbb
dec
and
iret
cwtl
adcb
mov
inc
sub
push
mov
pop
inc
xor
cld
orl
cmc
adc
jp
mov
cwtl
cmp
sbbl
nop
mov
mov
aas
sbb
push
adc
jge
pop
test
hlt
daa
push
jle
call
mul
inc
jg
xor
stos
push
xchg
mov
push
dec
pop
adc
mov
push
xchg
or
xchg
andl
and
adc
pushf
jb
xchg
mov
mov
cmp
shrl
xchg
leave
mov
stc
mov
outsb
pusha
pop
inc
shll
test
hlt
mov
int3
mov
das
scas
dec
ljmp
insb
dec
lahf
ror
push
mov
xor
jge
sub
mov
adc
stos
dec
cltd
jno
insl
cmp
dec
mov
xor
mov
and
adc
inc
add
and
shll
std
stos
mov
imul
mov
ds
sub
adc
dec
jno
inc
ds
in
bound
and
fmuls
xrelease
pusha
inc
pop
iret
push
xor
mov
nop
or
pop
push
adc
int
jb
in
stos
mov
sub
ss
aad
ljmp
xchg
dec
gs
mov
push
icebp
pop
sbb
rorb
mov
add
mov
les
ret
call
mov
adc
int
sub
mov
leave
pop
std
lret
xor
inc
lahf
ja
ret
adc
scas
sub
pop
sub
ss
pushl
mov
sub
lahf
pop
mov
xchg
mov
cmp
cmpsb
rcr
xchg
jecxz
loop
jmp
mov
sti
adc
push
loopne
sub
outsl
psubusb
fldt
push
hlt
fistl
scas
std
int
cmp
and
ss
dec
test
pop
pcmpeqw
add
xchg
scas
gs
sbb
and
xor
add
dec
in
push
mov
mov
fs
mov
xor
shr
imul
adc
jmp
jle
out
pop
dec
cwtl
or
lds
mov
dec
push
in
into
or
or
jmp
or
cwtl
sbb
push
rcll
adc
xchg
add
mov
int
xor
mov
sbb
idiv
xorl
jecxz
or
xor
dec
imul
adc
adc
cwtl
jecxz
mov
es
scas
mov
dec
cmp
lahf
pusha
cmc
lcall
add
mov
cmc
xor
lahf
aas
dec
ds
lods
sub
mov
out
stos
xchg
addr16
test
push
mov
shr
push
fcomip
in
push
cmc
cmp
sbb
shrl
ud0
push
adc
pop
and
cmpsl
lea
and
in
push
ss
pop
sub
test
xor
or
xchg
and
lods
jae
ss
in
push
pop
mov
addr16
pop
pop
arpl
mov
sbb
or
mov
hlt
std
stos
leave
insb
mov
js
rclb
aad
adc
xchg
dec
lea
jp
push
cs
leave
or
scas
fcmovnbe
sbb
cmp
mov
ret
ljmp
mov
adc
mov
pause
add
nop
pop
push
mov
add
sahf
sbb
or
popl
in
mov
test
sub
xorb
jecxz
aad
js,pn
out
int
mov
cmpsl
xor
lock
mov
daa
or
inc
push
mov
outsb
out
mov
inc
cwtl
dec
std
bound
inc
aad
xor
or
sti
inc
mov
shll
push
sbb
mov
xlat
outsb
lret
sbb
dec
in
or
or
adc
cmp
jge
rcrb
mov
add
jecxz
inc
mov
dec
mov
mov
dec
lock
cmp
test
repnz
dec
jg
movsl
insl
call
xor
clc
or
test
testl
pushf
test
test
cwtl
inc
fdivrp
popf
and
sub
or
stos
testb
stos
aaa
mov
aam
pop
mov
js
les
xchg
roll
arpl
idivb
mov
mov
jmp
and
cld
leavew
sub
or
xlat
mov
cwtl
cmp
ja
xor
push
fisttps
mov
inc
xlat
mov
test
mov
ja
jb
xor
out
out
outsb
jp
fistpll
add
divl
rol
cltd
arpl
mov
and
data16
add
bound
mov
mov
fs
and
mov
call
dec
fwait
icebp
sbb
add
movsb
jae
repz
nop
xchg
pop
lea
and
flds
cmp
add
dec
pop
jge
lea
pop
or
movsl
push
mov
mov
adcb
jp
cmp
xor
xor
cmpsb
shll
lds
sub
stc
das
sub
pop
insb
xchg
add
pushl
in
jl
sbb
repnz
decl
xor
out
pushl
push
xor
bound
lret
mov
push
mov
pushf
es
mov
mov
jbe
sub
inc
pop
pushf
mov
xchg
and
xchg
mov
insb
dec
cmpsb
xchg
popf
enter
mov
xor
or
lcall
arpl
inc
aas
adc
jp
daa
lea
jae
pop
aad
aad
mov
add
xor
jg
dec
ljmp
test
or
aad
add
adc
xchg
fistps
fbstp
pop
sub
scas
dec
xchg
sar
push
stc
mov
xchg
lret
mov
arpl
or
adc
mov
mov
sub
mov
test
call
insb
xlat
roll
xchg
jno
xchg
adcb
mov
icebp
in
test
ret
test
mov
dec
push
cs
lds
iret
aam
loopne
jb
push
dec
jecxz
push
hlt
clc
push
sbb
in
orl
cli
xor
mov
jno
les
dec
add
popf
sub
jb
das
xor
pop
aad
sahf
ds
test
cli
stos
mov
lcall
sbb
ljmp
iret
xchg
mov
push
cmp
loop
inc
push
adc
mov
out
jmp
mov
jbe
mov
rorl
popf
mov
push
add
movsb
mov
mov
jne
xchg
inc
lahf
pop
cmp
add
push
xchg
popf
iret
rcr
scas
cltd
jnp
mov
sub
jp
insl
sub
les
cmp
cmpsl
mov
lcall
lahf
pop
stos
or
add
cld
shlb
cmp
mov
mov
pop
xor
xor
or
ds
iret
inc
insb
jb
cmp
std
aas
out
jg
icebp
pop
icebp
out
cwtl
jmp
pop
int3
sbb
add
add
mov
inc
lock
cmp
xlat
push
in
cs
push
add
pop
sbb
cmp
movsl
and
cmc
fdiv
in
ror
xchg
sbb
xchg
jmp
movsb
push
jmp
push
pop
dec
mov
sbb
sbb
ret
cmc
dec
pop
lcall
fnstcw
adc
jle
jge
inc
cmp
xlat
outsl
sub
mov
mov
mov
sahf
fdivl
sbb
mov
sub
out
rorb
cmp
pop
jb
insl
jns
dec
lahf
xchg
out
inc
jno
mov
in
cs
sub
jb
mov
into
aam
scas
loop
push
or
scas
inc
jo
jae
popf
adc
movsb
ret
jecxz
cmp
add
xlat
stos
xchg
xlat
mov
dec
stos
int3
out
loop
lea
sbb
or
cmp
fwait
inc
scas
shrl
stc
pop
mov
fbstp
push
lock
cmp
lret
sub
cmp
xchg
aad
roll
xor
push
dec
mov
repz
jecxz
das
adc
xor
pop
std
fdiv
fldenv
outsl
inc
sti
test
xor
push
out
clc
mov
call
int3
cs
scas
pop
popf
out
mov
xchg
imul
jb
outsl
fwait
into
sub
and
lods
pop
fwait
insb
lock
dec
lds
adc
hlt
add
lock
loope
or
mov
int
xchg
jge
iret
nop
dec
mov
shll
call
cwtl
jb
xlat
xchg
add
sub
or
sbb
inc
or
loopne
lahf
xor
xchg
test
lods
pop
lock
dec
pop
and
xor
mov
bound
mov
jb
cmp
cmpsb
xor
cmpsb
xor
lcall
dec
mov
jge
pop
dec
cmpb
push
push
std
jmp
std
or
sbb
pushf
push
or
in
cmpsb
xchg
jbe
rcrb
fcoml
dec
xor
pop
push
sbb
data16
ss
outsb
stc
stc
scas
cmp
rcll
test
xor
push
dec
fdivrl
pop
sarw
mov
push
sbb
addr16
shrb
sub
push
leave
cmpsl
or
mov
push
jo
sub
pop
xchg
inc
cs
ljmp
rorb
cmp
mov
or
adc
mov
jae
push
pusha
test
cmp
inc
arpl
popa
addr16
pushf
xor
mov
xor
pop
pusha
popf
sarl
xchg
inc
loope
fldt
call
shll
js
mov
andb
push
outsb
aas
mov
jne
loope
push
lret
mov
test
xchg
cs
xchg
push
sar
sub
stos
sarl
jle
test
mov
mov
adc
out
dec
jg
jmp
stos
or
ret
sti
jge
push
and
adc
fiaddl
scas
ret
xchg
pop
inc
scas
mov
fnsave
sbb
fcompl
xchg
inc
push
push
and
and
imul
rcrb
pushf
or
push
push
fldenv
pop
fldenv
into
inc
push
mov
adc
inc
adc
jge
mov
dec
mov
scas
lret
ret
vphaddbd
jge
mov
dec
fs
je
pop
cmp
loope
jmp
cwtl
dec
mov
sub
scas
xor
ss
mov
scas
aaa
jmp
jb
jae
adcb
jns
mov
mov
xor
cmp
jb
scas
cmc
dec
jno
imull
iret
xchg
stc
mov
pop
popl
icebp
pushw
test
and
mov
pop
and
xchg
mov
jp
push
call
xor
cmc
jno
pop
js
pop
pop
mov
pusha
xor
cltd
scas
cltd
mulps
and
jmp
or
int
jns
mov
pop
or
push
sbb
or
sbb
std
mov
ja
addr16
pop
or
dec
les
xlat
outsl
das
xchg
push
cmp
cwtl
test
ja
dec
shlb
lds
bound
mov
arpl
insb
ss
cli
ret
sbb
jecxz
in
jb
pop
icebp
lcall
enter
jns
rcl
flds
lcall
mov
mov
fadds
push
ljmp
fldenv
ss
imul
mov
das
ja
sub
iret
cmp
cmp
std
cmpb
arpl
bound
shll
fadds
stc
xchg
lods
adc
mov
aam
lds
push
repnz
sahf
lahf
sub
xor
imul
rcrl
xor
ja
loopne
popf
mov
std
pop
sub
rcr
shl
sub
stos
cmpsb
test
lock
push
addr16
or
decl
add
cld
pop
lret
icebp
push
iret
cmp
mov
add
sarl
pop
xchg
notl
sahf
pushf
das
imul
out
pop
xchg
ja
mov
push
jp
scas
jl
dec
push
imul
push
mov
pop
push
jecxz
sti
fsubrl
sbb
add
stc
aaa
cmpsb
dec
jp
lret
pushl
data16
popf
adc
out
sbb
add
pop
mov
sbb
and
vcvtsi2ssl
movl
addl
mov
jno
sub
jb
jns
jns
or
or
sbb
mov
inc
push
fwait
leave
lea
int
shl
xor
dec
jne
xor
lcall
inc
lret
cmpsl
gs
sub
mov
xchg
ror
psubsw
daa
mov
mov
rcl
aam
lret
push
mov
push
outsl
out
jb
xor
xchg
popa
enter
cmp
inc
pop
lret
pop
mov
mov
imul
adc
mov
imul
and
adc
mov
jns
hlt
mov
cld
adc
sub
stc
in
inc
jae
ljmp
push
mov
test
fwait
test
adc
mov
push
xchg
dec
lods
pop
sbb
adc
jg
pop
lcall
fistps
scas
fcomp
out
xor
lock
dec
mov
les
xor
pop
lret
sahf
sub
iret
fdivrl
imul
cs
shrb
push
bswap
es
xor
dec
dec
rcr
jns
lret
dec
dec
jae
das
rorl
xor
fninit
out
cmp
pushf
nop
mov
cltd
test
in
in
and
mov
pop
xor
sbb
jge
dec
cwtl
or
outsb
sub
iret
xor
and
fsubp
jle
fbstp
dec
stos
roll
sub
out
repnz
sahf
or
cmp
fwait
mov
adc
cwtl
sbb
xor
daa
es
push
sub
push
xchg
aaa
pushf
or
icebp
stc
mov
pop
repz
jbe
out
inc
mov
xchg
mov
cs
ret
es
ret
xchg
cmp
pop
in
imull
add
cli
roll
jp
mov
xchg
test
dec
mov
mov
iret
pop
rol
dec
rclb
sbb
cmp
or
jb
add
insb
pop
leave
mov
dec
stos
sub
pop
pop
lds
mov
xchg
repz
dec
and
xchg
popa
xchg
icebp
aas
aaa
inc
pop
mov
mov
dec
rclb
adc
push
xchg
adc
out
addr16
mov
loope
inc
fisubrl
arpl
mov
push
pop
sub
movsb
ds
mov
add
mov
sbb
ret
lret
fneni(8087
cmp
lret
push
icebp
test
mov
pop
mov
loopne
stos
dec
xchg
insl
jno
repnz
and
les
les
hlt
into
xchg
pop
ss
sub
jns
cmp
dec
sub
and
daa
mov
pusha
sbb
cmp
sub
mov
gs
pusha
ds
clc
jno
xor
cs
fistpl
mov
imul
sub
push
fwait
js
ret
adc
std
repz
xor
xor
xlat
mov
cwtl
in
or
std
add
mov
outsl
loop
jmp
out
mov
mov
loopne
out
cmp
adc
sub
jle
pop
outsb
rol
ret
clc
mov
xchg
dec
loopne
fs
in
fldt
push
sti
repz
add
and
dec
mov
cmp
xchg
xchg
xchg
or
mov
pop
sub
pop
push
dec
daa
ds
fisubrs
mov
adc
addr16
mov
leave
xchg
or
push
push
sub
pop
in
dec
xlat
inc
imul
xlat
icebp
fdivr
pop
mov
fidivs
jle
ds
mov
das
mov
stc
sub
pop
inc
inc
jae
push
or
movsb
ret
bound
pushf
adc
outsb
fnstsw
outsb
add
pop
mov
inc
sub
or
cmp
add
pop
nop
xchg
es
aaa
sbb
sub
add
xchg
dec
fs
inc
cs
lods
push
lds
dec
outsl
lcall
lret
pop
cmpsb
cmpsb
scas
adc
in
jge
lock
and
mov
add
xor
adc
or
xchg
lods
fcom
mov
icebp
xor
pop
dec
pop
xor
je
and
mov
push
add
and
outsl
mov
push
scas
add
xchg
addr16
pop
repnz
in
test
and
andb
ljmp
jp
inc
xchg
sbb
mov
cmp
js
dec
pop
pop
jg
call
inc
mov
sub
shlb
mov
cmp
mov
mov
mov
cmp
pop
jb
add
aaa
lds
push
sub
mov
shlb
pop
push
in
movsl
and
lcall
lret
or
mov
fildll
cld
xor
mov
cmp
xlat
rolb
adc
sub
push
and
pushf
xor
mov
pop
sbb
pusha
pop
shll
xor
mov
sub
adc
aaa
inc
add
fwait
movsb
mov
das
imul
call
test
sbb
cmc
push
jbe
add
xchg
dec
and
jmp
int3
cld
xor
shll
mov
mov
pop
mov
inc
mov
dec
scas
sub
jns
lcall
mov
sbb
mov
lods
xor
sahf
cli
bound
add
insb
push
mov
cmp
xchg
aam
jecxz
inc
add
cwtl
pop
dec
mov
inc
sub
mov
sub
fidivrl
in
xchg
in
dec
outsl
lock
mov
repz
mov
add
mov
sub
adc
and
data16
inc
pushf
fwait
popf
movsb
or
add
jne
sti
gs
test
jl
adcl
cmc
gs
das
mov
rcrb
adc
in
mov
lret
mov
lods
je
fisttpl
xor
push
adc
push
ss
in
sub
pop
stos
mov
mov
xor
xchg
sub
movswl
call
insl
jp
shll
insl
test
dec
cltd
ja
cmp
pop
test
rcl
fcoml
icebp
movsb
mov
fisttpll
lret
decl
arpl
mov
xchg
or
lcall
out
mov
inc
inc
or
lock
movsl
push
pop
daa
and
gs
sbb
sub
xchg
dec
xor
inc
nop
push
pop
mul
push
mov
imul
xor
pop
and
mov
sub
xchg
dec
xchg
and
pop
daa
dec
call
jmp
out
mov
es
movsl
and
int
lret
das
dec
dec
icebp
pop
cwtl
test
pop
cmp
ss
stos
jmp
repnz
dec
stc
jmp
or
mov
loope
push
in
pusha
test
je
xchg
or
cmp
daa
repz
imull
fnstcw
cmc
icebp
cs
shll
test
and
lcall
lahf
ss
in
mov
out
inc
shr
jo
inc
sbbb
fsubs
in
movsb
scas
jge
fistl
or
repnz
cmpxchg
jb
pop
test
lahf
and
sarb
out
xor
xor
inc
sub
inc
xchg
lea
aaa
cwtl
mov
in
rcrb
addr16
loope
aam
mov
ja
ss
jno
mov
jmp
xlat
lea
fs
or
mov
or
add
dec
mov
push
aaa
xchg
push
pop
stos
cmp
lods
negb
dec
or
inc
jnp
sbb
shrl
es
dec
or
popf
jecxz
sub
mov
lods
ljmp
daa
fistpll
cmp
sbbl
jo
fcmovnbe
repz
movb
adc
iret
lahf
xor
sub
test
and
mov
sbb
popa
dec
pop
mov
cwtl
inc
pushf
and
insl
xchg
cs
out
call
je
fimuls
add
inc
lea
inc
mov
pop
xchg
aaa
adc
dec
daa
cmc
daa
jne
xor
mov
inc
imul
cmpsl
cmpsb
cmp
jmp
aas
clc
push
das
push
lods
cmp
cltd
push
xchg
xchg
test
mov
dec
into
xorl
inc
scas
flds
jl
mov
out
call
jnp
rolb
and
fisttpll
push
sub
jle
inc
fildl
push
lret
push
or
out
mov
sub
mov
xchg
cmp
ror
pop
aas
mov
insl
lahf
adc
lods
roll
jb
aad
das
jb
xor
dec
mov
adcl
and
shll
pop
into
xchg
push
inc
out
adc
subl
lds
jge
dec
push
push
test
pop
add
ja
adc
rclb
jo
jae
xor
call
mov
mov
inc
aad
mov
xor
clc
add
pusha
pushf
pop
arpl
mov
jl
in
stos
jecxz
xchg
adc
mov
xchg
les
rcll
sbb
lock
mov
xchg
notl
or
push
pop
cmp
ja
or
outsb
push
add
lcall
dec
push
ss
jns
inc
sub
rcl
push
inc
stos
repz
jbe,pn
jae
out
scas
dec
cmp
in
leave
adc
mov
imul
pop
iret
sbb
adc
jns
ljmp
sbb
sbb
jg
fstpl
popf
xor
cwtl
lahf
push
mov
dec
ljmp
mov
int
test
out
add
mov
add
mov
inc
inc
imul
push
pop
mov
mov
loop
loop
dec
adc
jmp
adc
dec
ljmp
imul
cltd
dec
push
ret
pop
orb
addr16
cmpsl
and
cmp
mov
shl
aam
mov
rcrb
cmp
mov
cmp
mov
movsb
xorb
mov
adc
mov
pop
mov
pop
jae
or
out
mov
and
aad
inc
or
sub
test
inc
push
and
or
nop
dec
cwtl
cmp
jecxz
ss
mov
or
sub
fidivrl
cmp
clc
rcll
aam
push
ret
dec
mov
fiaddl
lea
push
inc
insl
add
es
or
test
in
mov
popf
xor
dec
jbe
scas
ret
aad
jo
sbb
mov
js
push
clc
sub
cmp
loopne
cli
ror
dec
or
repz
xor
lds
arpl
push
xchg
das
xor
int3
scas
mov
add
dec
xchg
lcall
pop
xor
int3
or
jno
movsl
aaa
gs
out
adc
addr16
leave
cs
cmp
sub
std
dec
jmp
or
mov
xchg
adc
push
mov
inc
lahf
adc
and
mov
dec
stos
xorl
fldl
jno
dec
jecxz
xor
lods
daa
scas
movsb
push
dec
int3
xchg
insl
insl
mov
push
sub
call
pop
mov
jge
lods
cmp
pop
push
add
jge
cmpsl
out
repnz
packssdw
outsl
xchg
xor
fldenv
sti
push
movhps
adc
mov
loope
and
fisttpl
jne
in
lods
mov
mov
sbb
jne
xchg
sbb
xchg
sbb
or
xchg
daa
add
mov
fs
das
mov
mov
sti
mov
lds
mov
aam
jle
jae
iret
jg
xor
pop
sahf
inc
outsl
mov
jb
xchg
insb
aad
lods
pop
bound
push
fidivs
loop
pushw
jmp
fidivrs
push
adc
pop
ja
lea
sbb
lret
pop
outsb
cmpsl
ja
adc
lret
cmp
lcall
scas
mov
mov
mov
push
xor
push
outsb
ljmp
in
ret
out
outsl
adc
rcrl
popf
ds
pop
push
mov
clc
decl
jns
in
mov
insl
in
hlt
sahf
inc
jmp
stos
leave
lret
mov
hlt
sub
add
call
inc
push
popf
subb
mov
pop
jmp
test
dec
dec
xchg
jns
ljmp
mov
mov
stos
fldt
and
repnz
push
leave
xor
loopne
ss
fs
mov
hlt
leave
js
push
mov
repz
cmpsb
hlt
ljmp
adc
subl
insl
repnz
jb
xchg
imul
dec
pop
repz
lods
or
mov
cld
cmp
mov
ljmp
lret
cmp
cli
jle
sbb
popf
sbb
xchg
es
cmpb
lret
into
xchg
ficoml
out
adc
mov
sub
test
pushf
xor
dec
sub
cmp
or
xchg
std
lods
das
fwait
into
mov
es
shr
lret
or
mov
aas
dec
js
pop
jecxz
and
imul
cltd
inc
div
dec
mov
jle
addl
xchg
pop
mov
mov
dec
imul
adc
subb
inc
dec
inc
test
jnp
cmp
outsl
js
adc
data16
mov
push
fdivrl
outsb
es
outsl
cmp
insl
ss
gs
std
rolb
lcall
scas
mov
test
pop
mov
movsb
adc
inc
mov
in
dec
jno
adc
mov
cmpsl
mov
push
lahf
push
jg
adc
jge
dec
jmp
push
inc
movsb
orl
imul
mov
iret
jbe
and
popf
push
jecxz
aas
pop
fcoms
ret
mov
testl
mov
popa
xor
sub
push
mov
lods
hlt
mov
push
insb
stos
sbb
mov
cmp
out
mov
pop
test
push
popa
push
dec
fld
sbb
stos
in
jo
arpl
lret
leave
mov
stc
pop
sub
ficompl
xchg
aam
pop
inc
lahf
sbb
stc
lods
adc
clc
fcmovu
and
enter
inc
or
pop
mov
aad
jl
shlb
in
orb
jb
fnstsw
jl
ret
test
scas
int
ds
and
dec
cmc
test
dec
sub
adc
sub
and
negl
push
mov
clc
push
imul
sub
sub
insl
xchg
scas
movsb
das
jb
popa
xorb
mov
mov
mov
jns
mov
push
out
or
mov
scas
and
mov
cwtl
jecxz
in
adc
pop
jae
pop
aam
jnp
or
mov
int
inc
fwait
or
jo
or
jns
inc
xchg
push
inc
cmp
cmpsl
mov
add
mov
jp
push
cmpxchg
mov
adc
and
dec
push
pop
inc
xor
rorb
or
mov
ds
push
and
movsb
out
orb
loopne
movsb
pop
add
or
xchg
ficompl
push
adc
adc
and
push
jl
pop
dec
outsl
push
subb
into
fildll
jg
insb
pop
nop
and
arpl
sub
repnz
inc
decb
jg
sub
push
ret
pop
in
jl
test
push
jle
scas
xchg
push
mov
ror
add
cmpsl
cwtl
pop
leave
aas
cmp
popa
xor
fxsave
cmp
jle
cwtl
inc
and
iret
stos
je
out
cmp
pop
arpl
push
adc
push
pop
dec
decb
in
lock
dec
add
xor
push
pop
jmp
add
sub
int3
arpl
arpl
mov
jae
push
fidivs
sub
dec
mov
subb
jge
cmp
mov
push
into
cli
addr16
push
and
adc
iret
lcall
push
mov
pop
jb
xlat
xor
js
lret
and
jmp
dec
mov
xlat
repnz
shrb
dec
shlb
daa
lods
push
push
in
jo
popf
xor
rcrb
mov
pusha
cmp
sti
ror
sub
mov
fisubrl
stos
dec
mov
or
clc
enter
int3
movsb
xor
fcompl
adc
faddp
cs
jno
int
sbb
imul
add
icebp
sub
and
ds
push
in
pop
jg
mov
and
mov
and
mov
clc
jne
jge
sbbb
clc
xchg
jecxz
add
fsubrs
mov
jnp
mov
aad
loopne
jbe
mov
dec
and
dec
adc
cmp
insl
jae
sbb
fs
cmpsb
daa
test
mov
clc
inc
cltd
mov
xchg
mov
into
mov
subl
pop
aas
cli
add
repz
add
dec
jo
pop
adc
xor
dec
sub
push
mov
and
dec
cltd
aaa
in
out
lret
jge
outsl
adc
sub
fisubl
sbb
insl
xor
outsl
pop
popf
push
mov
mov
and
fstl
mov
push
daa
lods
daa
mov
jbe
jne
push
sti
mov
sub
addr16
cld
les
shrb
gs
mov
adc
das
int
inc
sub
test
jnp
loop
in
adc
test
push
pushf
or
pop
sub
adcb
cmp
mov
jg
jo
push
orb
push
mov
xchg
outsl
xor
lahf
fdivl
jle
shll
cltd
jmp
ret
cltd
loope
adc
adc
fwait
test
int3
mov
push
imul
movsl
xchg
lea
cli
xor
push
rcll
icebp
cmp
out
iret
aas
lret
or
das
dec
das
push
sbb
sub
nop
insb
rclb
out
ret
repz
adc
int3
and
test
in
pop
test
fldl
and
sbbb
jbe
add
gs
xor
leave
jle
dec
push
pop
pop
fldenv
pop
aaa
movsb
ljmp
lret
cmp
push
dec
inc
pop
jne
sbb
inc
js
xor
js
push
cld
inc
mov
test
out
dec
adc
gs
cmp
pusha
mov
sub
ja
mov
insl
xchg
fisubrl
fsubs
mov
outsl
aaa
lock
lds
insl
push
movsl
cli
repnz
aad
ljmp
sub
subl
aaa
popf
pusha
repnz
pop
mov
call
push
mov
fiadds
ljmp
cld
stc
clc
jle
lret
jno
cmp
mov
out
andl
ret
popa
jo
int
dec
lods
pop
cmc
pop
out
xor
push
and
andb
jg
xor
sbb
aaa
pop
rolb
mov
xchg
test
ljmp
mov
hlt
mov
sub
testb
xor
iret
xchg
sbb
mov
inc
not
and
arpl
scas
jle
cmc
cwtl
pop
add
mov
test
add
cmpsb
sbb
dec
sbb
mov
loope
iret
fdivp
ja
lds
push
hlt
fisubrl
mov
sbb
jno
shll
sbb
and
sub
mov
sub
cmpsl
shll
add
push
rorl
sub
iret
fs
dec
sub
cmp
inc
fwait
cwtl
aam
loopne
cmc
mov
adcb
push
or
xchg
push
mov
js
inc
push
xor
mov
inc
leave
fdivs
out
fisttpll
jno
ds
jecxz
fstl
pop
xchg
sub
cld
out
ror
pop
mov
sbb
fucomip
iret
adc
pop
push
in
repz
fcoml
mov
movsb
xchg
xor
lds
sub
leave
data16
das
mov
aaa
jae
xchg
orl
or
stos
and
cmp
into
rclw
mov
decl
in
xchg
rclb
dec
and
dec
loopne
sbb
cmp
inc
push
ret
jo
loop
loope
jp
jmp
shlb
push
sti
xor
xor
cld
rcrb
mov
push
lods
cltd
arpl
clc
gs
aas
out
and
sahf
es
orb
jbe
push
mov
addl
lret
mov
or
adc
sub
add
inc
inc
adc
int3
and
cmc
mov
icebp
clc
repz
gs
push
mov
jle
xor
adc
ret
inc
es
cmp
fs
inc
or
push
push
sub
cmp
scas
aas
sub
mov
ja
cld
fnstcw
cmp
mov
push
insb
repnz
cwtl
imul
mov
lock
enter
filds
mov
inc
lds
sub
lods
or
mov
int3
add
lret
jbe
nop
sahf
xchg
jne
fildll
ss
inc
repnz
sub
jge
mov
dec
cmp
enter
iret
movsb
cli
pop
inc
and
inc
sbb
rorb
jno
loope
jp
dec
inc
pop
je
dec
out
mov
and
in
dec
test
call
mul
movsl
pop
loop
cld
mov
scas
clc
fsubl
xchg
pusha
leave
inc
mov
adc
int
nop
aam
std
stc
rcr
clc
cwtl
cmp
xor
aaa
insl
push
mov
rclb
mov
add
icebp
pop
mov
inc
dec
ljmp
jmp
cli
jl
and
push
xchg
xlat
add
push
frstor
fwait
pop
push
inc
repnz
data16
mov
sub
lock
mov
packssdw
int3
xchg
pop
dec
not
and
lods
mov
xchg
cmp
scas
jp
hlt
jge
cmpsb
push
repz
scas
and
push
ret
jne
push
out
push
inc
adc
dec
or
add
jnp
adc
rorb
fisubrl
mov
js
pop
daa
std
pop
fs
filds
pop
out
push
jo
push
cmp
mov
pop
leave
jle
sub
aas
add
adc
out
cmp
test
pop
ss
clc
xchg
int
shrb
popa
lock
jae
adc
add
dec
imul
add
leave
mov
sbb
adc
add
stos
fs
sub
push
mov
jg
sub
pop
and
out
aaa
cmpsb
lcall
xchg
dec
iret
adc
das
movsb
int
pop
inc
or
dec
dec
push
imul
shl
xchg
dec
jnp
cltd
imul
fldenv
xor
add
and
sti
dec
fsubs
sub
mov
jge
xchg
movsb
dec
mov
pusha
mov
repnz
mov
js
aaa
es
fs
popa
xor
mov
cmp
and
js
sub
adc
cmpsl
dec
loopne
mov
jns
adc
push
je
xchg
mov
test
xchg
outsl
sbb
test
shl
mov
push
cmp
dec
sbb
rcl
and
stos
pop
cmp
mov
xor
in
std
jae
mov
repz
vmwrite
lahf
jge
lock
sbb
adc
negl
fwait
ror
int
icebp
out
repnz
sub
pop
outsb
inc
xchg
dec
outsb
test
cmpsb
xlat
rcrl
push
sub
imul
lcall
outsl
out
fstpt
pop
or
sti
mov
add
cltd
into
cmp
sahf
push
dec
aam
xor
mov
push
inc
sbb
and
outsb
mov
mov
xchg
inc
add
jno
cmp
stc
xor
lods
xchg
pop
dec
jle
sbb
std
xchg
fsubrs
fildl
sbb
test
lahf
das
cmpsl
xor
jmp
rclb
mov
lahf
int
push
into
dec
cli
push
aam
in
jb
jl
int3
mov
adc
cmp
lock
inc
ficoms
loop
cmp
stos
and
mov
sub
inc
inc
push
sbb
and
lret
sbb
cmpsl
test
inc
subl
push
mov
and
enter
and
mov
repnz
pusha
cmc
push
pushf
sbb
jbe
xchg
add
rcl
xchg
scas
xchg
shrl
fstpt
in
pop
push
pop
pop
jo
imul
or
mov
add
incb
lods
lea
jb
push
inc
lds
sbb
repz
mov
and
bound
inc
or
cmp
movsb
add
mov
in
loopne
sbb
mov
stos
ds
adc
or
cld
mov
popa
loopne
mov
sub
inc
dec
jg
pushf
fs
mov
pop
aas
push
and
outsl
push
push
cmp
mov
shlb
addb
ds
dec
mov
cmpsl
rolb
xchg
adc
jp
std
push
xchg
std
adc
or
mov
fwait
sbb
loop
or
fistpll
call
cs
push
cmpsl
cmp
jns
xchg
and
cmp
leave
and
mov
gs
inc
fs
in
cmp
rorb
mov
inc
xchg
int3
pusha
and
or
mov
adc
into
mov
jl
hlt
bound
lock
dec
sub
jmp
ds
fwait
inc
mov
and
mov
mov
shll
lods
aam
jno
mov
pop
mov
leave
out
xorl
aaa
xor
imul
leave
jne
jmp
mov
add
movsl
mov
sub
fs
ficoml
inc
out
mov
lcall
pushl
fadds
dec
fldpi
rcrl
hlt
cmpb
mov
gs
sub
ret
inc
rcrb
pop
jae
or
mov
call
out
pop
dec
out
inc
push
enter
push
xchg
add
add
shl
loop
pop
xchg
test
mov
jnp
add
loop
and
pop
jnp
fcoms
mov
mov
and
std
push
pop
jge
xchg
and
movsb
mov
sbb
pushf
jns
loope
mov
sbb
jno
fnstenv
sub
out
pop
ss
push
pop
xchg
add
sbb
loope
roll
xchg
stc
pop
ds
xor
push
addb
cli
pop
xchg
push
mov
cli
outsb
nop
ret
ret
test
jg
imul
ds
arpl
xor
test
jge
cmpsl
outsb
clc
std
lock
sbb
je
pop
inc
push
sub
adc
adc
popa
arpl
xchg
cwtl
xor
fsubrl
jmp
mov
neg
loope
ljmp
pop
dec
nop
jg
addr16
sbb
xchg
lret
dec
cmpsl
jge
test
in
cli
in
pop
pop
pop
stc
mov
addr16
int3
out
cwtl
rcll
push
lock
test
call
pop
inc
aas
sarb
andb
jle
sbb
adcb
inc
mov
sub
sub
inc
xor
jecxz
mov
jg
fwait
lds
dec
test
dec
pop
dec
sub
mov
lods
and
fcomps
sbb
lahf
mov
int3
fs
lock
mov
popf
movsb
xlat
popa
repz
fistps
lds
ss
mov
add
into
xor
pop
jg
lods
enter
sub
lret
mov
scas
pop
sub
xlat
jp
inc
shrl
cmpsb
cli
mov
mov
imul
adcl
cmp
enter
sahf
movsl
sbb
mov
shll
xor
pop
cmp
int
mov
mov
mov
ret
pop
aaa
stc
jo
dec
test
rcrl
sub
fwait
mov
mov
clc
xlat
xor
stos
add
fisttpll
sbb
notb
out
adc
sbb
movsl
jo
rclb
pop
insl
jno
adc
jae
insl
pop
push
rcr
mov
jg
sbb
js
inc
xchg
clc
int
aad
sub
repz
mov
mul
adc
xchg
out
test
rcrb
hlt
imul
in
int
and
push
mov
add
mov
inc
mov
xor
or
fnstenv
stos
jb
cmp
fisttpll
and
adc
sub
out
inc
xchg
mov
in
mov
arpl
stc
test
xchg
es
push
fs
scas
enter
imul
dec
je
pop
movd
repz
xor
pop
dec
hlt
mov
hlt
fs
sarl
lcall
xchg
dec
pusha
je
mov
add
cmp
das
imul
leave
xchg
mov
xchg
cmp
enter
xchg
into
jge
jnp
es
aam
adc
aas
pusha
stos
popa
jb
fdiv
xchg
push
leave
push
in
cmpsb
out
adc
mov
repz
ficompl
lcall
dec
and
leave
and
mov
add
lahf
mov
daa
and
loop
cmp
jbe
jle
mov
popf
mov
lods
xor
mov
rorl
jecxz
adc
outsb
shll
xchg
insl
jne
sbb
lahf
lret
repnz
mov
call
jecxz
push
mov
and
outsl
out
or
jnp
push
in
into
and
xchg
and
xor
mov
jbe
stc
cltd
mov
push
lock
xor
jnp
adc
mov
adc
add
int3
mov
pop
inc
leave
inc
movsb
add
cmp
cmp
mov
jl
shlb
xor
mov
push
push
pop
hlt
pop
ja
pop
int
out
adc
sbb
sub
es
nop
cmp
and
mov
shrl
bound
fsubr
jbe
loop
popa
insl
aam
and
dec
and
mov
je
mov
div
xchg
sub
mov
int
lcall
adc
addr16
jp
sbb
cs
cmpsl
dec
out
popf
mov
inc
pop
hlt
jle
add
movsb
mov
xchg
jg
cmpsl
mov
xorb
je
jp
in
in
jge
shlb
loop
dec
fimull
aam
loopne
push
sub
scas
jbe
fidivrs
scas
jmp
iret
push
and
cwtl
xor
mov
mov
leave
mov
jge
aad
js
aaa
repnz
lret
mov
pop
sarb
rorb
dec
pop
test
sub
adc
fs
mov
pop
jb
rolb
fcoml
mov
sbb
xor
das
adc
inc
lock
dec
ret
and
stc
xrelease
roll
xor
clc
and
ja
ds
sbb
fdivrs
loope
fnstsw
nop
cmp
xchg
lcall
sti
sub
dec
test
fs
jle
adc
and
jae
movsl
xchg
fwait
enter
insb
inc
ret
or
mov
jmp
xchg
ljmp
dec
in
pop
and
scas
push
pop
push
sub
xor
sbb
inc
adc
ret
mov
lcall
jno
out
and
cwtl
popf
in
out
pop
mov
xchg
pusha
or
push
jbe
mov
or
mov
or
mov
and
imul
call
mov
or
daa
insb
rcll
push
je
fmull
into
enter
jle
jns
mov
sbb
roll
adc
stos
movsb
or
pusha
mov
cld
mov
and
fwait
push
ret
fidivrl
xor
int
or
sub
and
pusha
mov
insb
rorb
ds
or
pushf
jg
roll
mov
adc
xor
outsb
sbb
cmp
loopne
inc
adc
mov
int3
xor
sbb
add
jns
ret
pop
xor
or
ss
push
fisubl
xchg
int3
adc
add
repz
cld
mov
sti
xchg
stos
and
mov
pusha
and
lahf
aas
xorb
jg
and
add
jns
in
adc
cltd
jge
xchg
xor
sub
push
adc
mov
mov
push
mov
cmp
jmp
fadd
es
add
mov
movsb
xor
dec
data16
ljmp
xchg
in
enter
lret
sub
mov
jnp
cmpsl
subl
dec
ret
push
push
and
push
mov
dec
test
or
jae
jno
loop
lock
cs
dec
das
push
lret
outsb
lret
imul
and
cmp
xchg
mov
mov
cmp
scas
int3
test
dec
and
fcmovu
push
gs
push
aam
shlb
arpl
sub
stos
jg
enter
movsl
jne
ljmp
sbb
or
pop
jo
test
mov
sar
cmp
cmpsl
mov
push
fistpl
in
jmp
and
mov
jb
lods
stc
rcrb
sarl
dec
add
xor
cmpsb
popa
jae
cmp
rdpmc
push
push
ror
mov
shlb
mov
pop
hlt
jb
movsl
test
popf
lret
push
outsl
shl
push
jmp
adc
std
or
mov
xorl
pop
loopne
push
mov
ret
out
mov
push
std
rcll
mov
mov
cli
pop
xlat
pusha
scas
and
inc
mov
and
mov
sbb
or
xchg
pop
out
ja
add
mov
mov
or
cmpl
xor
daa
mov
mov
xchg
inc
add
daa
xchg
cmp
leave
xor
jns
sbb
stos
jp
pop
inc
lods
leave
data16
pop
lock
jne
jmp
je
dec
add
jnp
shll
loop
out
clc
push
mov
js
inc
inc
mov
dec
mov
ss
cmp
mov
stos
arpl
xchg
cmpl
fisubs
repz
pushf
add
push
mov
ja
cmpsl
mov
inc
rolb
cmpsl
movsb
scas
xor
aad
pop
stos
push
pop
cs
shl
mov
jb
pop
mov
dec
adcl
mov
adc
and
xlat
dec
insl
fcoml
add
rorl
popa
xorb
push
lahf
xacquire
out
arpl
nop
in
js
sub
sti
adcl
jg
adc
stos
add
jb
sbb
xor
ja
clc
cltd
divb
cmpsl
rclb
xchg
clc
stos
in
lds
jo
out
lahf
dec
rclb
mov
mov
movsl
push
pop
push
cs
std
adc
push
movsl
cmpsb
stos
lret
cmp
jl
mov
clc
dec
push
xor
dec
in
ja
into
std
ret
pop
or
jp
or
pop
dec
xor
test
sub
sbb
push
mov
or
xchg
or
cld
mov
lcall
fldl
push
cmp
in
push
push
mov
data16
fwait
repz
arpl
outsl
jp
js
rol
dec
mov
sbbl
mov
push
pop
sub
loope
xchg
mov
sbb
pop
stos
fcoml
or
sub
in
enter
pop
xchg
ret
jae
test
fisttpl
lahf
outsl
roll
jle
mov
and
test
pop
jno
pop
lahf
inc
push
mov
xor
iret
js
sbb
add
dec
fs
mov
mov
addr16
cmp
mov
ja
aad
jbe
gs
nop
rol
dec
rcl
bnd
stos
xor
lcall
mov
das
mov
push
into
aaa
in
test
sub
xchg
outsb
sub
rorl
lahf
mov
nop
dec
addr16
jmp
xor
jns
add
sbb
or
fcoml
mov
jmp
jno
mov
mov
sub
arpl
push
push
adc
movsl
test
popa
les
mov
loop
fnstsw
daa
mov
aaa
das
xchg
push
dec
xchg
cltd
mov
pop
mov
pop
xchg
sbb
loopne
sbb
stos
es
push
sbb
inc
fmull
sbb
jae
movsl
fistps
sbb
test
rcll
adc
pop
push
adc
arpl
add
and
jns
xchg
subb
inc
jmp
push
and
xchg
stos
pop
xchg
mov
pop
stos
xor
pusha
jo
sub
pop
push
fstps
fstpt
pop
xor
aam
adc
mov
mov
call
jnp
jne
adc
jmp
out
push
gs
rorl
subb
jmp
add
pop
popf
add
mov
out
adc
mov
dec
pusha
das
sub
das
and
test
and
xor
es
push
leave
adc
jmp
pusha
sti
lock
adc
pop
daa
mov
clc
dec
xor
lods
pop
push
fsubrl
jmp
xor
ja
mov
das
jg
inc
filds
mov
xchg
and
mov
cmp
xor
jmp
ja
push
jp
jl
iret
sub
pop
rol
mov
pushf
test
orb
mov
cld
xor
fs
dec
xor
pop
pop
dec
mov
insb
loopne
dec
jns
mov
and
out
sub
pop
mov
push
fsubrs
shlb
mov
outsb
pop
insl
lahf
out
xchg
pusha
imul
add
mov
cli
mov
jo
into
cmp
inc
mov
inc
cltd
inc
or
js
test
gs
mov
push
mov
mov
ret
test
lods
or
sub
and
mov
sub
int3
psrlw
jo
mov
fnstsw
push
bound
mov
cmp
fwait
mov
rcr
testl
xchg
mov
push
mov
xor
adcl
sbbb
jl
movsl
lods
pop
lock
pop
imul
add
pop
lcall
fcoms
push
and
stos
insl
push
je
dec
mov
sbb
jg
dec
dec
adc
imul
imul
adc
out
sarb
and
lock
dec
and
jo
sub
pop
mov
scas
repnz
mov
mov
push
inc
je
ss
mov
stc
rorl
pop
dec
mov
pop
lcall
stos
enter
stos
imul
loopne
xchg
mov
jb
ja
push
pushf
add
sbb
int3
inc
mov
pop
mov
sub
adc
pop
mov
cmp
in
test
adc
out
cwtl
mov
sti
subb
into
mov
mov
enter
aad
leave
inc
fcmovu
repnz
repz
ss
es
divl
and
add
test
mov
push
sbb
iret
jbe
inc
repnz
enter
fwait
repnz
mov
jmp
loope
push
xorb
xchg
lahf
mov
xor
or
pop
push
mov
test
cmp
dec
popl
hlt
rorb
imul
mov
test
pop
xor
sbb
subl
mov
call
loope
cmp
call
leave
xchg
je
mov
imul
cld
sub
enter
inc
and
inc
call
movsl
loop
dec
dec
cmp
push
jge
push
sub
xor
lret
sub
popf
lcall
mov
insb
jnp
stc
push
inc
xabort
xor
xor
sub
fisubrl
fildll
push
jns
xchg
shl
cmp
incb
je
pop
jns
addb
adc
cwtl
repz
or
xchg
adc
and
lds
xchg
pop
cmpsb
mov
sub
mov
xchg
mov
std
outsb
push
in
jae
push
add
jle
cli
dec
mov
iret
fs
clc
mov
shrl
int
nop
mov
or
lds
ds
add
out
sbb
sbb
test
add
sub
mov
cmp
lcall
adc
pop
stos
push
fnstsw
roll
xchg
cmp
jno
data16
dec
xchg
inc
repnz
lcall
nop
insl
daa
call
in
lahf
add
mov
and
jb
pop
jo
push
out
push
out
jmp
aad
in
adc
fstl
sub
insb
mov
push
pop
mov
dec
test
out
or
jae
adc
mov
dec
jae
dec
nop
push
ja
cmp
mov
pop
lret
jle
push
fwait
enter
dec
pop
sbb
ss
adc
aad
movl
inc
pop
cmc
cmp
testb
popf
faddp
mov
pusha
and
leave
pop
lahf
cld
xor
lcall
and
adc
frstor
xor
or
cmp
dec
inc
push
call
js
cwtl
cmp
mov
dec
jnp
ds
inc
rorl
adc
jno
pop
push
push
dec
xchg
xchg
adc
shlb
push
je
pop
arpl
je
mov
jle
inc
repz
dec
fstps
ljmp
in
jnp
insb
data16
mov
ds
pushf
add
add
inc
or
scas
dec
rclb
mov
pop
xchg
mulb
inc
js
daa
xor
in
mov
sbb
popa
stc
adc
xchg
xchg
ss
ficoms
test
xchg
aam
cmpsl
xchg
insb
scas
imul
ret
dec
mov
movsl
mov
shr
rolb
imul
jnp
out
and
fldl
test
iret
pusha
stos
pop
xor
or
cmc
int
enter
fcompl
push
add
ljmp
test
add
arpl
ja
lret
mov
nop
movsb
clc
mov
xchg
rcrb
mov
loope
call
jnp
jno
mov
pop
pop
dec
xchg
add
mov
and
cmp
cmp
test
add
xlat
test
jge
sub
cmpsb
ds
mov
dec
and
pop
lret
ret
pop
insb
or
mov
rorb
mov
mov
les
jmp
xor
cmpsb
cwtl
and
popf
or
rcll
aaa
sbb
andl
jp
repz
push
mov
rorb
push
dec
xor
cmp
int
sub
pop
sub
repnz
jnp
mov
mov
push
stos
ljmp
jl
sub
scas
pop
xor
mov
push
stc
loopne
test
adc
ret
ret
mov
cmpsl
movsb
adc
mulb
xor
xchg
int
das
loopne
pop
jbe
andb
ljmp
int
sti
cmp
into
mov
push
mov
dec
lods
dec
dec
stos
movsl
iret
dec
inc
popa
push
push
dec
out
mov
int3
cmpsb
add
pop
pop
sbb
add
jne
and
dec
mov
cmpsb
jmp
add
fwait
data16
add
shr
dec
xor
adc
mov
mov
jno
adc
adc
pop
xchg
leave
pop
shl
xchg
add
and
es
sbb
fnstcw
xor
push
inc
mov
sbb
insl
inc
aad
mov
into
testl
dec
xor
inc
rorb
or
push
jle
mov
pop
enter
stc
dec
repz
aas
not
xchg
movswl
outsb
aas
mov
xor
and
dec
and
inc
fwait
pop
insb
imul
psllq
lea
insl
rclb
fs
mov
mov
jmp
sub
jl
scas
outsb
ret
icebp
aam
fdivrs
mov
sub
push
mov
dec
xchg
pop
aas
enter
inc
nop
sti
fwait
cmp
xchg
jno
mov
shlb
cmpsl
lds
or
pop
cmp
mov
int3
mov
push
lcall
jae
mov
shrb
imul
es
mov
dec
movsb
adc
insb
mov
and
jge
jb
loop
inc
mov
xchg
lahf
cwtl
sbb
fisubl
dec
stos
mov
sub
int
push
enter
cmp
jno
adc
pop
movsb
xor
mov
sbb
mov
pop
mov
insl
cmp
or
inc
mov
and
inc
jle
dec
je
pushf
xchg
mov
test
pop
cmp
das
dec
or
fadds
jae
cmpsl
imul
leave
sbb
idiv
fs
movsl
pop
jb
iret
insb
sub
jle
mov
dec
adc
cmp
mov
push
inc
push
add
mov
inc
push
pop
push
adc
fcmovbe
or
dec
into
pop
das
enter
out
adc
sbb
push
xor
cmpsb
pop
aas
adc
dec
inc
cli
mov
in
das
mov
popl
xlat
inc
xchg
add
xor
xor
mov
pushf
icebp
jns
bound
rorl
loopne
mov
push
mov
test
stc
clc
sbb
imull
cmovp
sbb
and
aad
fsubl
adc
outsb
test
pinsrw
notb
dec
popf
in
fwait
aaa
mov
and
jp
repnz
inc
movsl
add
loop
ret
push
pop
or
adc
lock
cmp
out
leave
pop
cmpsl
lret
test
test
inc
add
xchg
inc
negb
int3
les
cmp
fisttps
push
pop
inc
out
sbb
in
hlt
jo
sbb
xchg
jl
ret
insb
outsb
pop
mov
push
int3
xor
rol
clc
mov
jbe
jge
push
arpl
stos
xchg
loopne
pop
mov
xchg
pop
pusha
into
cld
xor
imull
loop
jno
in
xor
test
sub
mov
sbb
nop
js,pt
push
push
mov
popf
sbb
test
sub
hlt
fwait
mov
sub
ret
lea
inc
pusha
rcrb
mov
sti
fisttpll
scas
mov
out
aas
mov
xchg
es
ja
ja
xchg
push
xchg
and
leave
into
rcll
xchg
fsubrl
cli
sub
inc
enter
movsl
dec
sahf
sub
cmp
into
hlt
push
inc
out
andl
cmp
inc
and
xor
add
mov
dec
adc
leave
ss
jg
repnz
dec
ja
jle
fisttpl
dec
pop
lds
ja
mov
ja
ja
sbb
push
sbb
push
xchg
sbb
pushf
mov
xchg
adc
movsb
outsl
cmpsb
push
push
push
mov
fcom
add
movsb
movsb
insl
shrb
aad
inc
lds
sub
sbb
pop
mov
lea
out
jns
insb
rorl
loopne
nop
xlat
xchg
mov
adc
repz
test
mov
push
xor
push
shlb
fistpl
push
lock
dec
ja
std
cmp
fistps
adc
popf
negb
fs
data16
mov
mov
dec
or
les
pop
out
test
aad
icebp
hlt
pop
mov
mov
imul
and
lcall
out
mov
jg
sbbb
mov
mov
negb
ds
test
add
arpl
lea
mov
pop
cli
fcoms
and
inc
sbb
pop
dec
decb
jecxz
xchg
jle
int3
sub
jns
adc
push
outsl
aad
jbe
hlt
loope
inc
xor
les
mov
adc
xchg
lret
rorb
repz
pushf
fucom
adc
or
cmpsb
out
mov
shrl
sbb
jno
or
popf
inc
repz
imul
add
inc
inc
xor
mov
mov
pop
into
lcall
cmpsl
push
divl
rol
aam
pushf
push
lea
or
jecxz
sub
xlat
cs
pop
adc
lret
xchg
rorb
scas
inc
orb
pop
and
repnz
sbb
cmpsl
cltd
cmpsb
movsb
sahf
sbb
lret
aad
insl
xabort
insb
sub
add
push
cmp
out
inc
int3
jl
scas
adc
decb
mov
es
pop
sub
mov
insl
pusha
lahf
pushl
push
cltd
adc
jp
lret
addr16
sarl
mov
arpl
pop
repnz
shrl
xchg
mov
sbb
mov
xchg
fisttpll
in
or
imul
xchg
or
pop
cmc
cs
testl
popa
dec
adc
fstl
fsubrl
jg
scas
cmpl
add
xor
lods
cmp
mov
sub
push
jp
mov
ds
jae
jae
cmp
jbe
add
clc
sub
jb
mov
xchg
fs
movsl
je
mov
xor
std
cmp
cwtl
movsl
cmp
xchg
out
sbbb
fidivs
imul
mov
mov
cli
sarb
push
cmp
das
cmpsl
pop
test
fnsave
int
test
cld
pop
popf
lret
jbe
xorl
dec
xor
add
shl
das
popa
sbb
pop
cmp
jg
outsb
mov
mov
repz
in
scas
data16
enter
mov
sub
inc
push
hlt
and
mov
mov
mov
shrb
addr16
push
fcompl
repnz
lret
sub
xor
and
int3
push
shr
pop
cmp
leave
mov
stc
lret
xchg
pop
rcrl
xor
rcll
jg
push
and
pop
je
imul
scas
data16
jecxz
in
mov
sbb
cld
and
sahf
cmp
outsl
imul
mul
cmpsl
lcall
sti
mov
push
out
test
inc
dec
int3
jns
dec
xor
shlb
sti
repnz
sbb
cmp
add
pop
aas
pop
pop
outsb
icebp
stos
movsl
mov
dec
test
xor
jbe
mov
inc
mov
xchg
into
mov
arpl
pusha
sbb
xchg
fwait
mov
sbb
xor
jnp
cmp
js
aas
xchg
mov
xchg
xchg
dec
jno
inc
das
or
xchg
xor
dec
jle
mov
push
and
xchg
stos
fs
stos
adc
out
push
add
jbe
push
inc
jecxz
aad
mov
fdivrs
lcall
mov
movsl
rolb
sub
dec
pop
int3
aam
orb
add
orl
roll
fadds
push
mov
jmp
or
imul
pavgw
push
cmpsl
lcall
aad
dec
insb
sub
mov
mov
pop
punpcklbw
aad
insl
cmpb
popa
sub
mov
movsb
into
adc
cmp
mov
pop
add
jge
aad
dec
push
mov
xchg
jbe
lods
xchg
stc
dec
imull
xchg
mov
push
in
mov
or
sub
jne
test
movsb
into
and
out
mov
lret
cld
xor
mov
sahf
add
mov
sbb
fwait
int3
lret
and
pop
cmp
or
cmpsb
adc
fdivrl
inc
aad
cld
inc
call
dec
mov
je
gs
sbb
imul
or
sahf
frstor
pop
out
ds
repz
xlat
xor
sub
loop
jl
outsb
inc
orb
notb
js
shl
jnp
mov
aad
xchg
loopne
xchg
mov
rorb
mov
sub
lret
frstor
cs
fisttpl
inc
fmull
xchg
repz
adc
imul
cmp
mov
fisttpll
rolb
cltd
ljmp
ret
pop
lock
mov
mov
popf
pop
dec
mov
add
xchg
xchg
inc
loop
lret
mov
sub
lea
push
xchg
iret
jecxz
sub
adc
pop
sub
dec
ljmp
mov
xchg
test
xchg
mov
bound
mov
out
enter
leave
dec
add
add
push
sbb
leave
mov
icebp
and
lds
dec
mov
push
js
cmpsl
pop
jb
test
add
pop
sbb
pop
mov
jne
stc
hlt
out
loop
dec
pop
daa
ds
leave
push
rcrl
stos
ret
movsl
les
cmp
les
sbb
adc
mov
cld
ficoms
scas
xor
call
push
jae
jno
sub
jp
test
test
cmp
loop
and
stc
rol
xchg
push
sti
iret
xor
cmove
stc
inc
and
jp
frstor
stos
scas
mov
cld
sub
or
adc
jg
mov
lods
out
lret
dec
sbb
rorb
sbb
or
incl
pop
je
jp
fdivrp
or
fld
lea
xor
add
in
orb
data16
pop
pushf
adc
push
loopne
jge
push
fdivr
xor
mov
movsl
test
int
out
mov
popf
bswap
pop
push
sbbl
sub
fwait
xchg
cmp
sahf
rclb
movsl
sbb
mov
mov
dec
add
mov
sub
cmp
inc
in
jns
cmp
dec
data16
mov
je
inc
out
sbb
lods
inc
fnstsw
mov
pop
stc
call
lods
cld
mov
js
out
ret
sub
dec
sub
mov
sub
or
inc
rcll
cmpsb
mov
sub
ja
fs
lret
push
call
push
scas
and
in
pushl
rcrl
cli
ret
test
xor
inc
inc
aas
xor
and
int3
adc
xlat
dec
xor
jg
jp
movsb
out
mov
loope
mov
dec
aaa
repnz
icebp
cmp
or
and
xor
cli
ja
adc
adc
outsl
jge
pop
ret
mov
push
xchg
and
dec
popa
icebp
adc
pop
push
or
sahf
add
fisubrl
inc
mov
jge
out
loopne
fsubrs
inc
xor
mov
std
and
sub
iret
inc
mov
pop
mov
ja
push
lret
js
mov
popf
xor
stc
adc
cmp
jmp
mov
out
push
pop
lahf
and
pushf
pop
sahf
xor
push
lea
jg
roll
jae
fiadds
ficoms
aam
or
mov
insl
cmp
fstp
pop
push
lahf
call
cli
ss
add
pop
dec
aam
dec
pop
enter
lods
push
jb
shll
fistl
jbe
test
jp
and
mov
mov
repz
hlt
enter
jno
clc
ss
cmpsb
dec
ljmp
pop
aaa
jmp
inc
lds
aam
mov
sbb
mov
dec
cmp
mov
enter
bound
jg
push
les
pop
add
mov
aas
aad
sti
lret
pop
inc
aad
lahf
pop
adc
js
push
mov
sbb
jmp
cmp
jno
shrl
scas
in
out
lcall
clc
dec
es
sub
movsl
in
jae
gs
push
push
push
sbb
add
or
or
nop
cmpsb
out
dec
stc
pop
divb
test
sahf
arpl
inc
xor
dec
sbb
jns
adc
adc
sbb
fcoms
int3
fisubs
cli
clc
jg
push
movl
lock
outsl
xor
push
outsl
in
dec
lret
push
xchg
test
adc
fldt
adc
aas
push
push
push
je
jecxz
jbe
sub
das
std
daa
mov
inc
add
xchg
movb
insl
push
sub
daa
popf
movsb
dec
jmp
pop
shll
or
inc
movsb
roll
in
fldenv
out
xor
ds
dec
lcall
dec
push
sbb
adc
shlb
popf
mov
cwtl
and
and
mov
jnp
sub
jmp
jp
cmp
es
rclb
test
or
idivl
mov
inc
adc
sbb
xchg
subb
enter
mov
imul
sbb
xor
xchg
stc
scas
les
adc
call
jl
cwtl
repz
es
stos
imul
lret
rolb
lds
cltd
sbb
xsha256
cmpsb
xlat
cmp
popa
mov
xchg
mov
adc
sub
stos
enter
push
sahf
rsqrtps
je
pcmpeqb
cmp
adc
xor
pop
xor
in
adc
xlat
movsb
adc
insl
dec
out
fwait
and
mov
fcmovu
xor
mov
mov
dec
and
mov
mov
lahf
sbbb
repz
xchg
jp
ret
es
mov
mov
sub
shll
jae
sahf
sub
xchg
fwait
out
popa
add
add
outsb
dec
push
clc
push
inc
sbb
inc
pop
push
int
mov
arpl
sub
addb
jecxz
xchg
pop
outsb
xchg
pop
cwtl
inc
xlat
lcall
addb
mov
ret
jo
or
jl
push
movsl
shl
xchg
inc
jae
xor
dec
cmc
push
push
ret
pop
push
mov
pop
adc
std
pusha
sarl
pop
rclb
out
movsl
sub
xchg
pop
push
mov
adc
dec
mov
stos
mov
arpl
push
loop
push
and
xor
into
adc
xchg
pop
repz
push
dec
cmpsl
and
scas
xorb
jl
jmp
lcall
xchg
dec
lahf
pop
and
cmp
outsb
addb
popf
xchg
push
je
ret
addr16
mov
jb
movsb
sbb
push
negl
test
out
jg
inc
ljmp
stc
fsubrl
movsl
push
mov
pushf
mov
ret
xor
bswap
inc
aad
mov
enter
testl
int3
or
jl
fs
int3
inc
test
mov
les
repz
int3
pop
je
lahf
inc
int3
mov
addb
ss
xor
or
mov
push
iret
scas
idivl
pushf
cmp
xchg
dec
cli
or
popf
andb
inc
jecxz
in
or
and
jle
sbb
mov
mov
xchg
fildl
xor
xchg
mov
add
and
xchg
adc
outsb
loopne
xor
movsl
or
xor
mov
jge
lods
sub
outsb
cmc
int3
cmp
scas
adc
sbb
inc
scas
pop
in
test
cmp
pop
lahf
and
add
mov
xchg
addr16
cmp
adc
int
es
bound
in
inc
inc
loope
cmp
jae
inc
adc
jne
adc
loopne
or
xchg
lcall
roll
mov
xor
or
adc
push
lods
jl
xchg
pop
gs
dec
mov
xor
leave
stos
popa
xchg
aam
mov
pusha
dec
scas
in
stos
outsb
add
jnp
mov
int
ja
cmp
lahf
sbb
arpl
add
jp
mov
jns
mov
stos
add
sbb
jle
push
mov
add
jae
shll
mov
mov
and
icebp
push
jno
das
fildl
in
xchg
and
push
pop
popa
xchg
push
je
sub
aas
push
pop
jns
xchg
repz
add
adc
clc
adc
cmp
lods
sbb
dec
mov
jb
jns
pop
fmul
push
add
or
dec
outsl
repnz
xor
xor
dec
jo
mov
lock
imul
jp
stc
add
icebp
sub
repnz
mov
sahf
or
jae
les
jne
ffree
imul
or
mov
rorl
es
fsubrs
ss
mov
rcrl
or
gs
fcomps
loop
and
je
jns
jno
or
out
inc
sub
push
xchg
cmc
cmpsb
cmc
mov
mov
push
loopne
or
pop
mov
mov
rcll
jecxz
and
sbb
xchg
xchg
or
xchg
jb
xchg
xlat
jns
sub
xchg
test
add
loopne
test
push
rcll
mov
adc
mov
mov
sar
fnstsw
dec
enter
fwait
xor
loopne
test
pop
jmp
bound
movsb
pusha
shl
xchg
aaa
mov
ds
fwait
out
outsl
adc
jno
test
inc
mov
lret
push
nop
mov
and
push
push
andl
imul
mov
js
pop
xchg
xlat
jl
add
pop
inc
aad
jb
sarl
dec
mov
pop
jae
test
je
bound
add
outsb
push
lret
cmpsb
pushf
xchg
lea
pop
lods
mov
repnz
xor
nop
rol
enter
xchg
inc
stos
scas
shll
gs
sbb
pop
dec
add
mull
aad
sbb
out
and
mov
shrl
mov
test
pop
mov
das
imul
add
mov
jl
imulb
enter
add
adc
dec
fsubl
mov
lods
es
popf
add
cmc
inc
clc
shrb
adc
cmpsl
addr16
or
mov
addr16
jg
mov
stos
inc
rcr
or
cmc
fcompl
arpl
mov
je
arpl
xchg
dec
xchg
mov
mov
cmpb
cld
cmp
rclb
je
sbb
pusha
fstps
sbb
jp
sub
imul
or
sbb
pop
pop
dec
jnp
test
cmp
bound
lock
ds
add
lods
pop
not
negl
pop
icebp
mov
jbe
mov
loope
push
out
rorb
popa
cmp
into
loope
jmp
lods
or
pop
sub
cmp
les
push
jne
sbb
xchg
mov
jo
iret
push
xchg
test
mov
into
jns
push
mov
fsub
mov
pop
shl
jne
lock
rolb
and
lods
repnz
pusha
mov
xchg
aad
jmp
jmp
mov
cmp
js
sub
dec
sub
in
ds
inc
mov
add
adc
pushf
shlb
and
loop
jg
fimuls
dec
test
iret
fmuls
testb
aad
sub
push
jne
mov
xchg
push
fs
dec
jg
xor
jno
gs
add
xchg
mov
jg
nop
ret
push
push
cmp
clc
push
xchg
fsubp
roll
cmp
adc
cltd
inc
icebp
and
fdivrl
mov
add
addl
adc
adc
ror
pop
push
push
pop
xchg
push
inc
in
scas
pusha
mov
divb
mov
loopne
lret
in
ss
xchg
loop
jae
sbb
stos
js
std
aad
mov
ss
mov
mov
push
fdivp
jno
cmp
mov
icebp
gs
incl
pop
sub
fidivs
dec
mov
inc
inc
gs
dec
aaa
fucomp
dec
scas
add
adc
cmc
rcrb
xor
xor
dec
pop
cmp
test
outsl
sbb
cmp
jae
aaa
xchg
dec
sbb
loopne
cmpsb
stos
fimull
cmp
fcomp
xchg
aas
movsb
xlat
movsb
mov
mov
inc
inc
add
dec
mov
ds
mov
pop
adc
or
loop
or
xchg
ja
mov
dec
mov
cmp
push
lea
inc
sbb
push
mov
pop
inc
add
insb
jbe
popf
and
sub
mov
mov
mov
mov
rolb
add
push
and
sbb
mov
mov
gs
test
xchg
jne
fldenv
pop
fidivrl
outsl
inc
aad
xlat
sbb
rcr
lahf
cmp
je
xor
xchg
jo
mov
and
lock
in
mov
mov
call
jnp
push
cli
dec
sbb
mov
nop
mov
test
cmp
xchg
adc
fcoms
jns
add
nop
les
sar
pop
mov
cmpsb
ds
cmpsl
mov
pop
add
inc
ljmp
fs
sbb
adc
sarb
push
xchg
cmpsb
add
and
in
and
push
add
lock
insl
loope
out
mov
and
enter
les
fnsave
inc
push
fwait
aas
jg
xchg
sbb
xor
xchg
popa
xchg
pushf
push
fcoms
xchg
sbb
inc
jns
xor
lret
push
pop
jl
insl
pop
cwtl
je
call
sbb
pop
cs
ret
mov
out
push
cmc
stos
cld
or
mov
add
add
or
inc
cltd
push
stc
dec
mov
lcall
jl
and
push
enter
push
cmp
mov
imul
out
insl
ret
sub
dec
push
dec
xchg
repnz
imul
cmp
arpl
cmp
aas
adc
pop
add
dec
push
out
int3
lds
and
cli
rclb
jnp
adc
ret
or
scas
xor
jne
popf
cmp
pop
or
add
jle
pop
fwait
mov
repnz
lds
loop
mov
clc
aas
fstps
in
jbe
push
mov
push
scas
and
adc
inc
loop
shrl
daa
lcall
or
add
and
pop
rcrl
adc
adc
xor
dec
cmp
adc
stos
mov
daa
mov
mov
std
xor
inc
cwtl
sub
dec
sbb
sbb
adc
cmp
icebp
jmp
jg
push
or
bound
cltd
dec
aam
xchg
fcompl
in
pop
or
fs
jns
test
pop
push
sub
dec
stos
das
faddp
inc
jle
enter
imul
push
mov
jo
cli
loopne
dec
pop
mull
pop
xchg
mov
jmp
dec
sub
mov
in
cmp
rorb
imul
cmp
jbe
nop
push
stos
call
aaa
jecxz
in
mov
and
nop
xchg
mov
sbb
lret
imul
inc
and
adc
mov
xchg
insb
or
add
jg
scas
cwtl
xchg
or
shrl
or
and
xor
mov
push
mov
push
popa
mov
sbb
jge
fcoml
ret
cmp
sbb
push
adc
movsb
ror
les
xor
daa
bound
pop
push
pop
cs
jbe
sbbb
mov
js
sub
mov
daa
fimuls
fwait
sbb
inc
fmull
sti
movsl
mov
pop
fcoml
test
stos
pop
mov
ret
adc
ror
ja
dec
inc
and
jle
stc
sbb
rorb
outsb
adc
push
nop
sbb
pop
inc
jno
xchg
jge
mov
sub
aaa
cmp
push
clc
orl
jp,pn
add
cmpsb
jns
jns
xchg
add
inc
fbld
loopne
arpl
fsubrl
sbb
pop
adc
sub
jo
hlt
lods
nop
mov
sbb
cmova
outsb
mov
pop
call
push
fdivrs
push
les
nop
in
rclb
mov
dec
call
aam
int
or
dec
pop
and
ss
mov
in
jbe
fistpl
shrb
push
mov
sahf
mov
loopne
push
js
bnd
or
sbb
xchg
pop
xor
out
pop
jns
dec
cwtl
inc
enter
jg
rolb
lcall
pop
or
cmp
cmp
and
shlb
mov
mov
pop
push
insl
and
rcrl
cmpsb
btr
sbb
sbb
data16
cmp
jp
test
inc
out
lret
xor
loopne
dec
fisubs
stos
imulb
test
scas
cmc
mov
xchg
and
push
xchg
arpl
xchg
rolb
adc
lfs
sub
fstl
adc
push
enter
push
and
stc
int
or
or
daa
dec
jecxz
xchg
idivb
js
aam
mov
ds
dec
xchg
test
loop
sub
arpl
sub
push
mov
xchg
add
jecxz
cld
fisubs
fcmovne
add
xchg
pop
mov
cmp
ret
out
jo
stos
lahf
cli
and
enter
scas
inc
xor
data16
sbbl
and
pusha
xor
sbb
mov
call
inc
pushl
cmc
mov
cwtl
outsb
aam
repz
imul
dec
jge
add
mov
mov
pop
cmp
lea
xor
fidivrl
jae
hlt
mov
sbb
out
xor
outsb
ljmp
daa
sub
sbb
cmpsl
outsb
sahf
lods
push
out
bound
add
enter
dec
jb
jns
addb
dec
cs
insb
pop
ret
dec
vcvttsd2si
dec
and
stos
lods
hlt
mov
xor
sahf
lock
sar
mov
jmp
inc
sti
xor
adc
movb
add
push
stc
jb
sbb
add
pop
mov
clc
jle
inc
mov
cs
cltd
ret
lea
in
pop
add
sbb
pop
cmp
push
xlat
mov
scas
orb
and
mov
mov
pusha
and
pop
or
cld
lods
add
ljmp
aam
sub
inc
out
adc
push
add
mov
cmovno
cld
test
pop
xchg
xor
enter
dec
cmp
shl
scas
dec
fsubrs
out
push
mov
or
mov
mov
add
mov
arpl
jno
pop
xchg
popa
test
ret
xor
sub
adc
xchg
inc
testl
scas
cmp
je
nop
mov
jne
xor
xor
cmc
add
testb
gs
sbb
push
int3
cmp
in
xchg
jbe
xchg
into
and
aas
inc
dec
inc
pop
mov
xor
loop
inc
cwtl
call
aas
mov
fisubs
in
das
push
cli
pop
cmpsb
xor
mov
test
pushf
loopne
xorb
insl
pop
push
cmc
lea
cmp
mov
call
add
add
xor
ret
shll
jecxz
mov
ss
jb
ds
loopne
push
cmpb
cmp
movsl
mov
dec
pusha
pushf
mov
pop
mov
outsl
stos
cld
icebp
push
into
adc
push
add
mov
popa
push
nop
fwait
sbb
icebp
enter
xor
pop
mov
mov
jbe
push
les
sub
dec
pop
ret
cmp
in
subb
scas
and
mov
sbb
aad
and
add
in
sbb
fprem1
mov
mov
test
jg
mov
mov
icebp
in
sbb
fs
pop
imul
push
outsb
mov
mov
es
mov
or
push
insb
out
sub
xchg
mov
xchg
lock
cli
adc
xchg
sbb
fwait
dec
dec
jecxz
filds
pop
dec
inc
sbb
addl
sbb
and
push
lock
daa
sahf
outsb
sbb
andb
push
mov
sbb
aaa
inc
cmc
scas
test
sbb
hlt
pop
call
dec
leave
cli
xchg
mov
push
dec
mov
push
sub
and
lock
pushf
dec
xlat
xor
inc
cmpsl
popa
scas
cld
shl
adc
pop
adc
xchg
testl
or
pop
or
pop
cmp
mov
mov
xor
cwtl
stos
cmp
xorl
ficoml
mov
data16
push
mov
mov
dec
xor
clc
sti
push
mov
and
sbbl
leave
int
fnstenv
sbb
aad
popl
mov
jmp
popf
test
sub
jl
jl
dec
jae
mov
inc
fstpl
std
sbb
pop
lods
shll
lods
push
mov
fdivrl
pop
mov
xchg
mov
mov
mov
cmpsb
jg
sub
jg
inc
adc
jno
loop
push
popl
inc
push
pop
mov
cwtl
lock
mov
mov
pop
xor
mov
cmpsl
in
pop
adc
jo
cmp
inc
inc
in
shrd
or
mov
aaa
ljmp
cld
aas
pushf
in
decb
cli
pop
insl
les
lret
mov
and
xor
mov
das
ds
pop
sbb
call
nop
sarl
cmp
scas
loopne
jns
dec
loop
int
mov
fdivrl
insl
mov
mov
loop
mov
clc
or
cmp
push
add
sub
push
inc
inc
mov
add
add
adc
xchg
dec
xchg
jl
lret
dec
push
cmp
push
sahf
fcoml
enter
pop
cltd
and
pop
test
lret
icebp
fidivl
arpl
lcall
ja
mov
mov
test
mov
or
aaa
cmovns
push
dec
test
leave
jae
dec
leave
mov
push
icebp
insb
stos
fstpl
shlb
xchg
fstpl
ljmp
push
add
jbe
repz
ds
mull
loop
mov
stos
mov
mov
xor
jl
in
stc
jbe
mov
dec
xor
out
cmp
lds
mov
add
dec
adc
xor
jno
mov
nop
fisttpll
mov
cmp
jbe
inc
push
mov
mov
pop
adc
cli
andl
lcall
loop
push
mov
cmp
mov
adc
xchg
in
or
daa
mov
jo
cmp
or
pop
jmp
inc
push
fmuls
in
popa
jns
inc
cmp
popf
cmp
leave
mov
hlt
mov
mov
test
pusha
iret
aas
mov
xchg
stos
imul
imul
lods
push
mov
xchg
jbe
in
mov
ljmp
dec
or
push
adc
loopne
lret
mov
mov
outsb
incb
divl
leave
xchg
aam
mov
jno
out
mov
xor
icebp
xor
push
call
jns
inc
fwait
icebp
movsb
xor
adc
add
movlhps
and
mov
mov
add
popa
clc
add
add
pop
js
frstor
arpl
sti
xor
mov
pop
mov
sbbb
mov
and
gs
ficoms
repz
inc
dec
pop
push
xchg
mov
add
cmp
iret
xor
test
mov
outsl
enter
xchg
int3
test
in
ret
xchg
pop
gs
mov
ljmp
pop
dec
jns
and
test
cmpsb
int
lods
fcmovnb
push
pushf
cmp
push
lea
sbb
pop
lock
ret
dec
sbb
cmp
arpl
in
stc
subb
pop
mov
add
shrb
stc
push
sub
mov
or
sub
or
jbe
push
pop
or
xchg
xor
into
outsb
push
cltd
pop
ret
mov
mov
lods
or
movl
popa
sub
hlt
je
mov
mov
push
sbb
ret
fsubr
cltd
sbb
and
aad
mov
sub
push
mov
imul
imul
fisttpll
repnz
cmp
ret
pop
sub
xchg
sbb
roll
add
sahf
push
jmp
dec
xchg
leave
loop
movsb
test
pop
dec
and
sub
addr16
xor
pop
aaa
mov
sub
fiadds
cmp
push
mov
inc
bound
fs
loop
add
mov
or
xchg
test
movsl
stc
addl
adc
mov
roll
subb
pop
adc
jl
jl
out
fwait
sbb
inc
hlt
in
pop
lds
fsts
push
les
cmp
lahf
fadds
xor
insl
loope
aaa
xchg
jns
add
cmp
fisubl
mov
mov
mov
xchg
lret
out
cmpl
ret
test
nop
aam
outsl
outsl
rorb
bswap
xchg
and
jae
sti
clc
outsb
dec
lds
test
and
add
xchg
fs
pop
rcll
mov
mov
out
cmp
pop
sbbb
xor
mov
push
dec
jmp
xchg
ret
call
xor
rcr
push
jnp
pop
icebp
xor
rcll
mov
fsubs
mov
aam
pusha
lds
pop
test
mov
icebp
push
je
jle
xchg
outsl
leave
sbb
les
add
pop
inc
lods
push
xlat
sub
xchg
fisttpl
push
in
dec
mov
cltd
mov
sub
fisttpl
fisttpll
cmpb
push
mov
dec
or
cltd
cmp
addr16
pushf
stc
push
mov
adcb
out
adc
aam
jl
aad
add
adc
repnz
mov
fs
lcall
ret
inc
int
add
inc
inc
pushl
into
jg
mov
pop
jnp
pop
out
fwait
gs
iret
add
ss
mov
xor
push
ficompl
out
mov
push
cmp
pop
insb
fs
test
adc
gs
push
push
adc
dec
add
mov
out
mov
xchg
lds
std
call
cmp
inc
xor
sarl
cmp
cmp
ja
movb
adc
dec
out
es
mov
add
out
push
xchg
fimuls
jbe
add
sub
push
icebp
push
jmp
les
fldt
stos
add
sub
jo
inc
push
adc
loop
jno
adc
dec
repnz
test
jl
pop
mov
push
icebp
out
adc
shr
ss
aaa
jae
mov
stos
and
lret
push
mov
add
adc
and
stc
pop
fistpl
jbe
mov
cmp
inc
ret
add
xor
inc
push
xor
cmp
add
jmp
cmp
cmp
push
lea
pop
addl
jb
jnp
jle
mov
fldl
fnstenv
pop
push
rorb
or
pop
cmp
pushf
scas
or
or
inc
mov
mov
imul
sbb
cltd
add
pop
fbstp
lods
jmp
sti
add
ds
fidivl
and
repz
icebp
nop
jno
addr16
dec
dec
mov
push
out
push
or
pop
sbb
loope
ss
inc
jge
insb
enter
cwtl
roll
ffreep
dec
xchg
pop
inc
push
push
jmp
mov
mov
jl
mov
ljmp
in
sub
ret
jl
iret
cltd
mov
iret
jo
aam
xchg
movsb
test
adc
sbb
cmp
movsl
dec
or
enter
lods
ja
adc
je
mov
sbb
test
ljmp
xchg
ds
sbb
add
cmp
jecxz
jmp
ja
dec
mov
lea
xor
cmp
ljmp
mov
mov
cld
cmp
mov
lds
push
push
outsl
pop
push
jle
inc
sub
js
nop
rcl
add
cmpsl
es
add
aas
adc
mov
shl
mov
push
pop
sub
call
ds
push
or
icebp
jns
jns
icebp
cwtl
imul
adc
call
inc
add
or
xor
and
aam
cmpsb
xor
inc
decl
inc
aaa
mov
hlt
ljmp
mov
cmpsl
cmp
js
inc
sub
test
sub
movsl
sti
shl
and
sti
xchg
out
out
incl
rorl
jbe
jmp
fisubs
repnz
add
xorb
cmp
std
in
sahf
jno
cmp
push
cmp
inc
fwait
push
test
pop
in
mov
rol
andb
stc
loopne
movsl
xchg
loopne
mov
dec
jmp
lret
mov
sbb
push
lods
std
das
add
mov
fadd
int3
pop
push
daa
mov
mov
cmp
pop
in
sbb
mov
push
mov
push
in
pop
adc
cs
dec
test
mov
in
pushf
push
mov
shlb
iret
mov
pop
loope
filds
jle
fldcw
pop
out
cmp
jae
mov
push
test
fcoml
inc
xor
outsb
daa
shll
fadd
dec
pop
jnp
hlt
scas
fidivl
dec
cmp
dec
jle
mov
sahf
loop
pop
push
pop
je
popa
out
cmp
adc
cmp
mov
mov
aas
stos
lods
cmpsb
jo
push
xchg
mov
xor
mov
sub
xor
test
hlt
faddl
mov
and
jp
jae
pop
mov
fcmovb
mov
in
cmpsl
std
add
sbb
inc
jg
mov
pop
lahf
sbb
mov
mov
cli
mov
inc
push
fisubs
mov
mov
iret
ret
mov
fcoml
add
inc
lcall
inc
xor
mov
jg
in
xor
mov
xor
imul
xchg
adc
mov
pop
mov
fiadds
fs
cmp
and
std
cmpsl
fdivr
mov
icebp
cmp
hlt
orb
jbe
xor
and
add
cmpsb
dec
mov
and
xor
repz
dec
sbb
clc
insl
xlat
sub
lea
xor
pop
sbb
mov
xchg
add
jmp
nop
dec
pop
fs
gs
idivb
and
nop
outsl
and
scas
jne
mov
xor
cmc
lds
sbb
popf
xor
leave
jb
outsl
mov
dec
or
push
shrb
test
fidivrs
popf
out
xor
sub
cltd
imul
loope
jl
outsb
sbb
push
push
iret
jle
mov
cmp
jg
fnstsw
push
lret
cmp
xchg
in
and
lods
movsl
test
fucomip
scas
cmc
push
adc
mov
inc
insb
push
cmc
adc
mull
int3
fsts
mov
jl
mov
rorb
fcom
cld
nop
cmp
or
cmp
insb
pop
add
insl
jp
pushf
sahf
bound
and
mov
xor
arpl
pop
test
ret
xor
movsb
mov
sbb
push
xchg
mov
outsb
mov
cmp
xor
lcall
aas
jge
icebp
loop
sub
js
or
imul
pop
push
pop
aas
cld
push
lahf
sbb
das
jecxz
fsubrs
xor
int
lahf
jecxz
pusha
lds
data16
in
int
sbb
or
icebp
jb
in
leave
mov
loope
cwtl
or
ljmp
aaa
insb
jb
jmp
and
inc
inc
xorb
dec
dec
or
out
cmp
sub
outsb
stos
pusha
sub
mov
mov
mov
jnp
xor
out
in
incb
rolb
popf
loop
mov
iret
aam
sbbl
sbb
xchg
xor
scas
push
push
jp
adc
mov
adc
push
movsl
dec
inc
xor
mov
mov
cmp
adc
cmp
movsb
out
inc
pop
ja
fistps
iret
in
ret
jg
dec
test
jnp
and
mov
lea
dec
pop
or
xlat
sbb
movsb
cmp
mov
mov
xchg
xor
lcall
loopne
stc
mov
sbb
sbb
xor
mov
or
adc
cmp
sub
adc
mov
sysenter
ret
lahf
clc
jecxz
shll
add
mov
push
test
js
int3
cld
loop
fwait
sarl
nop
loope
xchg
cld
inc
imul
xchg
pop
repz
push
ret
cmp
nop
sbb
push
xor
loop
pop
sub
aas
push
arpl
in
lahf
inc
sbb
and
adc
pop
push
push
mov
push
jmp
and
or
mov
sbb
add
fwait
push
in
repnz
sub
inc
xchg
inc
cmpsl
es
push
xor
leave
gs
mov
faddp
insl
fwait
cld
iret
rorb
rcll
jns
push
mov
pop
jbe
shl
cmc
mov
loopne
add
pop
inc
cmp
int
pop
imul
cmc
mov
lods
addr16
icebp
push
xchg
pop
cli
inc
arpl
in
pop
outsl
data16
or
sbb
daa
out
filds
repz
in
scas
lea
out
ror
adc
push
sbb
xlat
ljmp
jne
aaa
leave
scas
sarb
adc
aad
out
adc
out
scas
dec
xchg
inc
lcall
push
imul
stos
push
cltd
cld
xchg
call
xlat
mov
and
sbb
movsl
mov
mov
and
movsl
jae
das
gs
jmp
xchg
or
push
and
sahf
xchg
and
pop
ja
fldcw
fdivrs
out
cmp
ret
mov
jbe
mov
stos
push
popf
fnstsw
mov
shll
jne
ss
frstor
frndint
adc
popf
xor
add
cmp
stos
ja
inc
dec
stos
fldt
jg
mov
push
ds
repz
out
dec
or
mov
pop
dec
add
repz
cld
sbb
ret
mov
add
xor
aas
inc
push
xchg
adc
insb
fs
xorl
enter
mov
mov
fwait
shll
lods
repnz
fs
cmp
jl
les
sub
pop
inc
movsl
decb
or
movsl
cs
xchg
loopne
and
pop
cld
sbb
nopl
push
mov
inc
ja
cmp
mov
mov
jmp
add
push
push
or
daa
and
jbe
int
and
add
xchg
cmpsb
imul
sbb
xlat
pop
fsubs
add
push
movsb
push
sub
jle
popa
cltd
jnp
cmp
pushf
jge
in
xlat
lahf
lahf
ss
adc
out
sti
aas
popf
sahf
jo
sub
imul
jge
test
or
int
jmp
cmp
fiadds
roll
and
in
cwtl
mov
lea
sbb
xchg
icebp
loop
mov
xchg
outsl
cmpsb
lahf
cmp
jp
fiaddl
pop
pop
push
xchg
fld1
insb
cmp
sub
push
out
arpl
jo
inc
out
out
sub
enter
je
lock
xchg
push
lea
cmp
movb
rorb
inc
roll
mov
pop
jne
sub
adc
sbb
sub
jns
adc
out
xchg
aaa
add
loope
sbb
call
pop
xchg
aad
pop
or
popf
xchg
addb
rorl
sbb
lret
inc
mov
test
jno
jecxz
repnz
dec
mov
ret
fcomi
ret
mov
cltd
sub
in
xchg
icebp
loope
test
cmc
out
popa
jbe
imull
sub
add
nop
sub
subb
fisubs
push
push
or
hlt
fcmovnb
pop
push
jo
and
sub
test
outsb
jmp
sub
add
sbb
nop
testl
aaa
icebp
mov
insl
cs
cli
call
sub
iret
sahf
push
push
cmpsb
add
aas
jle
stos
pushf
nop
push
sbb
dec
cmp
pop
out
xor
jge
add
pop
pusha
push
push
sub
loop
call
xor
movsl
out
cltd
sbb
inc
js
sbb
loop
pop
addr16
icebp
dec
test
es
nop
mov
cmpsb
jl
sbb
out
adc
lret
push
push
pop
fpatan
inc
sarl
lcall
pop
sbb
xchg
test
inc
std
cmp
xchg
outsl
or
add
xor
popf
cmp
stos
lods
mov
scas
lret
lret
add
ror
inc
mov
dec
cmp
fdivrs
fwait
orl
xchg
inc
test
cli
pop
pop
dec
fiaddl
or
and
out
add
cmp
add
cmp
in
aam
stc
sti
push
sti
cmc
insb
into
ljmp
imul
adc
jp
enter
mov
add
in
inc
pop
push
mov
int3
es
out
popf
fmull
push
into
push
push
mov
enter
popf
lods
cltd
loopne
cmc
add
add
mov
xlat
fcomip
rorb
jnp
iret
int3
jmp
pop
lods
call
lret
das
jns
inc
leave
mov
mov
dec
inc
roll
cmp
mov
and
xchg
pop
or
fwait
dec
jg
and
add
inc
out
and
pushf
comiss
flds
mov
jno
test
loopne
dec
int
xor
insb
out
mov
or
lret
lret
push
add
jp
aad
repz
push
mov
jg
jmp
or
adc
adc
xchg
dec
stos
mov
or
into
cwtl
push
cmp
cltd
mov
jmp
jmp
sbbl
xchg
fs
mov
mov
subl
mov
pop
jecxz
lret
ds
or
add
in
mov
sbb
pop
adc
mov
sub
mov
add
into
mov
pushf
sahf
mov
dec
add
les
fwait
xchg
push
iret
dec
mov
push
leave
pushf
adc
dec
xor
add
sub
shl
add
push
icebp
mov
dec
cld
pusha
mov
xchg
and
dec
fisttpll
xchg
adc
cld
aaa
and
cmpsb
sahf
xor
adc
stos
or
sub
cmc
mov
stc
sbb
pop
gs
dec
iret
gs
adc
lret
ret
and
jnp
shlb
or
fndisi(8087
pop
add
add
jmp
in
adc
lret
mov
cwtl
insl
scas
dec
push
movsb
aas
xchg
hlt
fcmovne
sub
pop
cmp
push
add
arpl
mov
push
ror
push
mov
pop
in
out
jnp
xchg
pop
push
std
mov
out
mov
mov
arpl
push
int
iret
bound
aad
adc
lret
stc
inc
mov
jno
cmp
mov
xchg
push
jae
inc
addr16
aad
jo
call
fildll
cmp
pop
adc
xor
stos
fs
mov
lods
jae
add
xchg
mov
push
mov
and
lock
sbb
mov
fsubr
jge
mov
data16
mov
mov
test
imul
pop
jl
xchg
out
mov
enter
sbb
dec
fidivl
pop
leave
in
repz
xchg
std
xor
testb
sub
push
lods
lds
test
sub
out
addr16
sub
jb
xor
jmp
dec
mov
clc
pushl
int3
stc
fdivr
in
cld
jae
sti
mov
push
not
aaa
mov
pop
or
into
shlb
cmp
ret
xor
and
clc
dec
inc
mov
gs
xor
imul
push
sbb
xor
xor
xlat
pop
sbb
lock
sub
push
mov
mov
addr16
mov
pusha
mov
daa
cltd
popa
mov
jns
or
test
mov
fstl
fimuls
lret
psubd
test
mov
mov
mov
ja
cld
inc
push
lods
sub
cmp
leave
icebp
sbb
divb
push
dec
rcr
inc
jg
sub
int3
push
shld
testb
pop
pop
dec
mov
jnp
lods
and
dec
add
rcrl
inc
sti
test
leave
mov
sahf
push
std
mov
push
fnstcw
mov
mull
mov
and
cld
pusha
loop
lods
lock
push
or
data16
pop
dec
dec
push
lods
clc
fstl
add
cmp
inc
int3
and
lret
mov
movsb
pop
add
dec
dec
or
out
push
mov
xor
cld
add
insb
xchg
ds
add
sbb
cmp
inc
jmp
shlb
dec
int3
sub
cmp
fwait
sbb
rep
mov
cld
inc
dec
out
shlb
dec
add
mov
mov
out
mov
mov
scas
daa
mov
adc
jae,pt
and
sub
aas
mov
add
lcall
push
leave
cmpsl
sub
mov
movsb
adc
loop
jb
ret
loopne
adc
jle
in
cli
push
fildl
mov
mov
lret
or
mov
leave
xor
dec
sub
in
dec
stc
sub
je
imul
mov
lahf
lods
ds
adc
test
movl
add
ret
adc
ja
pop
scas
jp
xchg
mov
fldt
inc
outsb
popf
sbb
push
aaa
bound
or
or
cmp
adc
lods
movsb
addr16
adc
stos
jns
fcoml
fistl
and
insb
stos
rol
in
jle
mov
pop
ret
jmp
jb
fcoml
jge
add
mov
mov
add
and
popa
push
arpl
std
mov
mov
adc
adc
stc
dec
mov
sub
xor
push
mov
out
xchg
xorl
outsb
arpl
lock
pop
icebp
jae
xchg
lcall
fyl2xp1
outsb
mov
mov
sub
add
jns
fwait
sarl
pop
outsb
pop
fs
leave
adc
loope
lcall
cwtl
add
xlat
mov
sbb
pop
bound
lock
sub
fs
mov
pusha
imul
nop
xor
fidivrs
adc
push
out
cmp
loop
xchg
es
adc
pop
mov
jne
jge
fidivl
jmp
cld
pusha
mov
imul
cmpsl
inc
fcmovnbe
pop
pop
jecxz
rcrl
and
lea
clc
shll
push
popa
inc
push
lds
nop
lcall
pushf
push
cli
cmp
in
xorb
ss
pushf
jp
push
vunpckhps
pop
jle
mov
in
ror
mov
mov
jg
mov
xchg
stos
in
dec
jp
adc
out
pop
jmp
aam
ds
in
ljmp
push
adc
out
cwtl
inc
add
cmp
lods
aad
inc
pusha
push
cmp
xlat
in
push
cmpb
cmp
xchg
jnp
mov
adcb
in
popf
mov
fwait
dec
adc
lods
stc
shrl
sbb
sub
icebp
sbb
adcl
pusha
jg
sbb
xchg
shll
pushf
clc
outsl
imul
push
jb
sbb
cmp
outsl
push
sti
mov
mov
fcomp
dec
bound
mov
in
call
rorb
loop
push
int
mov
xchg
arpl
pop
mov
test
out
mov
das
pusha
sub
pop
addr16
or
lret
sub
push
ret
into
adc
inc
pop
subb
jns
lcall
sub
adc
push
notb
sub
inc
rorb
movsl
mov
popf
xor
mov
mov
loope
lea
repnz
repnz
push
es
dec
mov
adc
mov
leave
lock
pop
loop
xchg
cmpl
or
call
pop
fists
mov
add
mov
ja
mov
or
mov
enter
adc
add
ja
pop
cmp
loope
mov
pop
or
cmc
sub
push
movsb
mov
dec
lret
mov
les
and
subl
pop
xchg
aad
add
jbe
cmc
adc
push
sub
icebp
repnz
repnz
push
sahf
sbbb
push
xchg
stc
scas
sarl
add
pop
pop
cmp
or
ss
or
mov
mov
jp
xchg
rcrb
andl
sub
mov
sub
mov
pop
jae,pn
pop
pop
int
sbb
inc
mov
rorb
inc
dec
mov
shlb
rorl
mov
sub
lock
jge
repz
js
jmp
addl
dec
mov
mov
movsb
add
pop
sub
inc
push
inc
pop
xchg
inc
in
cld
or
sub
xor
push
imul
out
sbb
sub
dec
push
mov
or
in
pop
ja
cs
dec
jne
test
mov
push
pop
jbe
addr16
and
jmp
and
js
mov
fucomi
outsl
insb
xchg
popa
je
cmp
loope
rorl
pop
dec
push
lods
sbb
bound
ret
sbb
xor
sbb
leave
mov
dec
and
cmp
pop
movsl
pop
jge
ss
xchg
insl
lea
add
xchg
mov
out
popa
xor
push
mov
aaa
ljmp
xchg
icebp
adc
mov
mov
xchg
test
adc
mov
shrb
push
ss
adc
int3
push
cli
push
dec
xor
sub
dec
push
push
aam
mov
loope
in
cmc
add
in
test
jmp
ss
fimuls
cmp
push
ret
stc
sub
push
mulb
cmpsl
push
push
xorl
xchg
in
sbb
fwait
paddsb
aas
lock
repnz
mov
arpl
aas
sub
divb
pop
lret
ror
stos
push
lock
cmp
out
add
add
xchg
repnz
push
mov
aaa
inc
notl
ficomps
sub
cmpsl
mov
in
stc
add
jnp
aaa
pop
cmpsl
stos
dec
xchg
shll
pop
mov
in
cwtl
jbe
push
pusha
mov
leave
inc
push
adcl
test
or
mov
adc
insb
jno
hlt
adc
es
ss
pop
sbb
xchg
mov
sbb
mov
add
aad
push
daa
push
hlt
insl
cmpl
in
jp
cmp
repnz
or
or
jecxz
fs
je
sub
int3
imul
push
xchg
repnz
push
movl
and
pop
sbb
add
mov
and
mov
data16
pop
shl
inc
mov
or
xchg
push
mov
and
and
mov
test
stos
push
dec
aam
popa
inc
leave
xor
adc
cwtl
sub
ljmp
pop
cs
push
mov
hlt
adc
mov
mov
jge
inc
jne
mov
lea
mov
pushf
in
mov
sub
mov
inc
sub
xchg
aam
sti
xchg
std
sbb
mov
daa
sbb
cwtl
mov
rcrb
mov
movsl
vmovapd
push
sti
xor
push
fstpt
aam
test
sub
sbb
mov
repz
sbb
cmp
pushf
test
mul
jns,pt
mov
dec
cmp
lock
or
lcall
neg
add
jnp
in
mov
sub
xchg
push
ss
repz
out
lahf
sub
push
clc
jge
bound
mov
adc
mov
inc
fs
shrl
rcr
add
mov
mov
push
lahf
adcl
jp
sbb
sahf
mov
movl
test
fidivrs
mov
add
das
ficoms
movsl
inc
and
popf
inc
push
mov
jmp
mov
or
in
add
xchg
imul
sarl
jle
mov
jno
in
dec
fstpl
movsb
push
mov
sbb
mov
sti
cmp
fs
or
movsl
das
in
stc
out
lds
jp
loope
pop
repnz
jno
cmp
pop
jmp
and
sbb
cmp
int3
repz
shl
jecxz
jo
shl
mull
leavew
mov
sub
dec
dec
add
es
push
xchg
add
andl
imul
in
in
pop
adc
das
xor
cmp
mov
sbb
lock
fbld
and
into
pusha
mov
cmp
cs
andb
dec
movsl
jns
sub
lods
sbbl
push
add
pop
cmpsl
dec
fidivrl
lock
rcll
sub
fwait
mov
arpl
xchg
or
dec
push
add
mov
sahf
and
pop
jecxz
sub
adc
or
shll
mov
addb
hlt
leave
cmp
xchg
push
fidivs
out
lcall
out
loopne
inc
jo
icebp
insb
fldcw
mov
mov
pop
jp
cmpsb
cmpsb
push
jmp
lret
out
js
adc
mov
fists
ss
inc
dec
mov
test
pop
mov
movsb
fsts
sbb
cmc
out
adc
inc
cs
in
inc
rcrb
push
lahf
sbb
push
hlt
lcall
mov
adc
push
cmp
inc
jae
mov
rorl
scas
leave
sahf
push
pusha
pop
sti
adc
mov
xchg
lods
mull
adc
pop
and
enter
jns
push
push
fnsave
test
pop
clc
test
sahf
leave
les
pop
fdiv
lret
daa
cwtl
pop
jle
daa
imul
mov
jmp
xchg
ret
jae
inc
pusha
lret
lock
test
lahf
adc
jl
insb
mov
or
xchg
xorb
cmpsl
mov
cwtl
insl
scas
mov
mov
arpl
outsb
mov
add
lcall
data16
sarb
mov
jg
in
nop
cmp
int3
mov
sub
and
nop
cmp
das
push
gs
aaa
jg
inc
xchg
dec
bound
mov
xchg
xor
mov
sbb
mov
add
dec
hlt
mov
aad
icebp
nop
test
adc
xchg
clc
outsb
xor
push
adcl
add
and
into
adc
enter
pop
outsb
sub
cwtl
out
xchg
repz
out
xchg
jmp
inc
xor
xchg
pop
test
and
and
pop
pusha
addl
orb
mov
ds
cmpsb
loop
les
or
popa
ret
dec
lds
sbb
dec
fidivs
inc
pusha
adc
or
data16
mov
and
nop
cmp
jle
outsb
std
int
movsb
andl
xchg
dec
int3
mov
test
outsb
add
sbb
divl
in
sub
or
or
sbb
cmp
xchg
xchg
ja
push
xchg
adcl
adc
gs
inc
lahf
sub
stc
mov
out
inc
aaa
pop
cmp
jge
cwtl
pop
pop
fidivrl
aas
inc
popf
push
mov
sbb
or
push
jmp
adc
sub
dec
fsubrl
mov
mov
mov
push
lret
subl
push
ret
xchg
jb
loope
adc
imull
into
and
add
and
clc
pop
fiadds
push
call
dec
cmp
mov
fldcw
stc
outsl
xchg
mov
mov
xor
cs
loope
mov
sti
xchg
cmp
mov
aas
mov
shll
movsl
out
clc
cwtl
dec
push
xchg
sahf
push
and
ret
sbbl
push
gs
data16
outsb
dec
pop
aad
lret
cli
add
dec
in
xor
sub
mov
push
add
add
inc
iret
push
imulb
push
pop
loopne
ss
jne
mov
fisttps
add
push
lods
movsl
cmpsb
stos
and
and
daa
jne
loop
push
adc
mov
and
push
mov
inc
xchg
mov
jb
stc
cmpb
jno
push
fwait
cmpsb
les
mov
cmp
enter
jnp
icebp
xor
cmpsl
es
imul
ds
sub
push
outsb
mov
insb
aad
cmp
or
addl
or
or
icebp
pop
push
test
add
lcall
sub
es
mov
test
sahf
push
test
jae
adc
stos
daa
cmp
jnp
pop
jmp
aaa
inc
mov
mov
cld
jno
cltd
pop
pop
clc
mov
pop
cwtl
jg
test
xchg
pop
push
jge
xor
jecxz
xor
movsl
outsb
shlb
sbb
popa
stos
xor
pop
jns
mov
jle
sub
enter
cs
xchg
xor
pop
inc
jmp
pop
sub
fistl
dec
sub
adc
test
negb
fwait
ret
iret
clc
loop
cmp
cmc
mov
inc
jo
or
xchg
push
in
repnz
add
pop
leave
stos
jno
xchg
dec
faddl
push
pop
xor
insl
mov
cmp
cs
mov
jns
or
call
stos
lahf
jno
pop
push
inc
popl
and
std
pop
sub
in
dec
push
inc
negb
adc
sahf
out
call
xchg
loope
test
stc
push
icebp
or
stos
cld
lret
mov
xchg
mov
out
pop
in
lahf
subb
fwait
call
mov
push
lret
and
addr16
jle
add
pop
and
daa
push
fistl
out
mov
mov
out
inc
inc
daa
xor
dec
ljmp
pop
jbe
inc
subl
add
cli
iret
aaa
pop
push
out
outsb
das
cmp
and
xchg
test
or
push
mov
sarl
mov
bound
mov
xchg
test
fisttps
jbe
imul
into
mov
lods
mov
cmpsb
cmp
loop
jbe
nop
mov
sub
cmp
jg
sub
inc
mov
adc
pop
adc
icebp
mov
jecxz
shlb
pop
cli
sbbb
stc
insl
lahf
add
arpl
mov
lds
push
or
sub
lods
adc
lret
add
pop
mov
andl
dec
pushf
call
lret
pop
add
mov
xor
jge
xchg
cltd
lret
sub
xor
jo
add
insl
add
fmull
or
repz
popf
jbe
mov
xor
aas
sarl
cwtl
and
inc
test
xor
cmc
notl
leave
push
add
lret
mov
stc
call
aas
out
pop
or
push
arpl
mov
sub
leave
push
ficompl
scas
pushf
lahf
scas
dec
cmp
mov
loop
pop
add
dec
int
fmuls
shll
push
jle
sbb
and
jne
jns
iret
add
add
test
sahf
int
mov
enter
push
xchg
jae
pop
xchg
idivl
in
insb
adc
xchg
xchg
frstor
fidivrl
xor
fs
fs
lret
push
and
inc
cmp
push
adc
mov
lret
testl
mov
das
or
add
divb
leave
mov
mov
cmp
test
xchg
cltd
pop
repnz
repnz
dec
xor
or
xchg
push
das
xor
inc
adc
jae
nop
push
add
pop
xor
xchg
pushf
mov
and
push
das
std
sub
outsb
mov
lods
sahf
sahf
sub
scas
cmp
sbb
das
adc
xchg
sbb
mov
adc
mov
push
mov
mov
in
jp
add
add
push
sub
sbb
dec
push
call
fistps
cs
lret
fildll
mov
aam
adc
loop
inc
inc
sahf
sub
das
jbe
leave
add
arpl
push
add
fdiv
xlat
cmp
push
sbb
adc
mov
or
fwait
arpl
xchg
loop
jnp
cmp
dec
sub
add
jne
pusha
sub
mov
inc
nop
inc
test
lea
push
add
mov
mov
pop
sub
test
push
jo
pop
jge
inc
mov
ret
jo
sbb
cltd
imul
mov
call
sub
and
dec
mov
mov
mov
adc
or
adc
ret
dec
mov
mov
pop
cmp
adc
jmp
push
inc
adc
js
sub
and
popa
dec
push
std
loope
dec
sub
mov
add
test
inc
jnp
xor
xchg
dec
mov
push
ja
rorb
xor
xchg
mov
jg
xchg
ffree
cli
pusha
xchg
out
or
test
mov
xchg
pusha
sbb
sbb
jae
dec
add
and
add
ret
hlt
rolb
jo
sub
bound
cld
xchg
pop
int
addr16
jne
mov
mov
cmp
sub
mov
add
mov
ffreep
pusha
ror
int
hlt
inc
icebp
cmp
xor
dec
aad
ja
cwtl
addr16
jp
and
loopne
dec
dec
cmp
mov
adcl
pop
outsl
nop
mov
loope
inc
in
pop
mov
xor
cmp
mov
ja
add
ret
xor
and
jns
lea
dec
add
sub
xor
fwait
lcall
gs
pop
and
bound
and
pop
xchg
ljmp
pop
lds
cmp
popa
mov
fimull
ljmp
dec
in
push
mov
mov
fcomps
lea
jns
fucom
out
std
les
mov
mov
outsb
mov
mov
cmpsb
adc
cmpsl
testl
mov
push
dec
int
adcl
je
enter
mov
lret
cs
mov
jmp
popa
xor
sub
fbld
push
iret
lods
mov
bound
ret
addr16
sub
xchg
mov
out
inc
dec
jne
fwait
adc
addl
and
outsl
jne
adc
testl
stos
pop
imul
aad
xor
mov
xchg
sbb
jl
sub
fnstenv
push
pop
mov
sbbl
jo
and
jnp
loopne
nop
jae
inc
mov
movsb
mov
xor
fisttpll
xchg
adc
fmuls
ss
jmp
je
push
stos
gs
fwait
int3
loope
std
push
addr16
aad
adc
ja
dec
push
mov
pop
in
lods
dec
lret
insb
xchg
jns
shrl
xor
mov
movb
pop
cmp
daa
jge
popf
jg
lcall
xchg
stos
lods
and
stc
mov
mov
add
inc
adc
out
or
ficoms
je
xchg
and
cmp
insb
inc
adc
push
sub
fldcw
inc
and
fldl
inc
leave
jl
iret
in
cld
adc
mov
adc
fistl
imul
outsl
filds
pop
in
sbb
jae
sbbb
xor
jne
cmpsb
lcall
dec
sub
xchg
lods
dec
xchg
xor
dec
sub
sub
mov
enter
lahf
clc
testl
mov
cmp
js
icebp
int3
jge
clc
ds
movsb
sub
xchg
sbb
popl
mov
dec
cmp
mov
adc
mov
push
jge
ljmp
testb
les
pop
xchg
push
jbe
shll
adc
pop
aad
xor
lods
cmp
mov
arpl
aas
in
aas
in
mov
mov
inc
rcll
xor
daa
sub
sub
xchg
mov
fcomip
data16
test
data16
mov
pop
fildll
jp
dec
push
push
add
movb
mov
pop
out
add
push
xchg
mov
mov
xor
jg
test
pop
jns
mov
mov
jnp
push
jbe
jp
jno
shrl
popa
push
and
mov
jbe
cmovbe
pop
pop
add
jnp
cmp
movsb
mov
cmc
pushf
fidivrs
xor
jl
or
sub
jp
lods
cmp
xchg
mov
dec
jno
mov
xor
sub
idiv
pop
popa
mov
cwtl
xchg
test
jp
jle
mov
popf
mov
sti
fcompl
xchg
cmp
sbb
les
fwait
iret
jo
dec
xchg
or
sub
leave
push
and
mov
out
pop
cmpsw
jmp
or
xor
pop
mov
dec
push
sti
sub
ljmp
jge
jo
mov
shrl
mov
jp
jp
shrl
push
pusha
xchg
adc
mov
push
subb
push
push
push
mov
and
fwait
loopne
sbb
and
pop
pushf
loopne
push
cmp
sahf
xor
popa
lret
xor
cmp
mov
ja
pop
dec
xor
pop
xor
fmull
loop
jns
xor
fcmovnbe
xlat
ss
mov
lods
mov
ds
cmpsl
pop
decb
outsl
mov
subb
or
push
pop
test
imul
std
dec
mov
rol
adc
or
lret
les
pushl
mov
dec
clc
in
xor
andl
xchg
dec
jb
pop
inc
mov
jb
jae
pusha
adc
das
adc
loopne
push
mov
es
jae
jecxz
inc
or
sbb
mov
and
lea
inc
mul
mull
dec
mov
dec
movsl
mov
or
mov
jmp
sbb
ss
mov
inc
lcall
fldpi
xlat
and
xor
jb
and
lret
push
and
inc
dec
fcompl
nopl
sbb
pusha
push
pushf
and
loop
repnz
cmp
mov
je
xchg
xor
sub
insb
lahf
call
popf
icebp
fldenv
or
fcmove
adc
jmp
push
sti
outsl
loope
sbb
outsb
popf
sub
add
fiaddl
rcl
je
xchg
add
mov
mov
inc
add
sbb
nop
jne
sub
mov
dec
push
cmp
ror
lret
xor
inc
jg
mov
sbb
push
dec
or
mov
fistpll
in
pop
psrlq
ss
cmpsb
in
push
jle
pop
cmp
cmc
pop
push
xchg
or
adc
and
mov
jle
inc
ficomps
int
inc
cmp
xchg
push
mov
lahf
bound
clc
xor
cmp
jno
cli
sub
pop
cmp
xor
shlb
int3
jne
mov
jmp
adc
dec
push
add
popf
mov
mov
adc
daa
stos
mov
and
pop
pop
pop
outsb
xchg
ficomps
aad
enter
pop
dec
xchg
sbb
clc
outsb
insl
pop
repnz
xor
xor
aam
xchg
clc
aaa
arpl
lds
test
das
cld
cmpsl
xlat
mov
cmp
push
fimuls
js
sbb
shl
jno
out
je
push
arpl
push
jae
sub
lea
dec
jns
jbe
in
stc
sti
inc
outsl
rorl
or
or
mov
fs
add
jle
mov
add
xchg
mov
mulb
jge
mov
sub
sti
push
push
lret
jne
mov
scas
inc
loop
and
int
inc
daa
ds
lods
xor
pop
and
movsb
push
in
popf
fcompl
mov
fsubrs
pop
push
popf
rcrl
popf
xchg
mov
call
mov
daa
pop
cmp
cmpsb
hlt
pop
adc
movl
subl
sub
shlb
and
push
fsubr
scas
sbb
jo
add
gs
and
mov
cmp
or
out
test
add
mov
sub
mov
mov
in
mov
cmpsl
jge
and
sbb
repnz
fimull
fmulp
in
arpl
frstor
insb
mov
jb
cmpsl
push
adc
movsb
push
aas
ss
lods
or
push
jg
mov
lahf
pop
xchg
repz
add
shll
xchg
mov
xchg
jb
int3
daa
xchg
or
mov
jg
mov
pop
jg
jo
push
fimuls
sbb
adc
sbbb
loop
call
fimull
cmp
or
aam
and
sbb
icebp
fnstsw
out
pop
sbb
jge
fcoms
sbb
mov
out
sahf
push
inc
and
mov
jne
sbb
pop
fwait
push
sbb
int
xchg
test
fcoms
inc
ljmp
sub
mov
loop
mov
ja
call
add
cld
xchg
leave
xchg
push
loope
push
push
add
sbbb
jo
inc
cmpsb
adc
inc
add
push
sbb
dec
addr16
js
sbb
int3
movsb
ds
cld
inc
and
mov
gs
xchg
adcb
outsl
push
shlb
rcr
mov
mov
sbbl
add
push
mov
xor
aas
or
jge
out
mov
loop
and
mov
push
jb
and
jl
sti
push
aam
test
adc
daa
dec
dec
pop
test
jae
mov
loope
rcr
mov
mov
push
cmp
cmp
rorl
lock
xor
shll
cld
jno
mov
stos
int
sub
out
mov
push
in
mov
in
loope
xlat
sub
int3
iret
jne
sub
shll
iret
xchg
int
scas
add
enter
dec
std
mov
repz
jno
and
jno
rcrb
insb
xchg
mov
stc
in
int
sub
or
stos
mov
outsb
cmp
stos
sub
add
aaa
or
jns
iret
jae
lods
das
xchg
stos
sbb
dec
xor
lods
mov
xchg
popf
loopne
push
fadd
pop
mov
sub
cmpsl
adc
mov
add
push
push
mov
loopne
dec
cmpsl
aam
ljmp
faddl
jne
mov
mov
dec
aaa
adc
rorl
or
xchg
xchg
rcrl
pop
faddl
or
cmpsl
loop
jo
pop
and
pop
and
inc
es
insb
pop
adc
push
pop
sub
lcall
aam
sbb
sub
test
outsb
loopne
sub
lahf
push
enter
das
xlat
enter
test
inc
jl
mov
insb
les
jae
test
sbb
add
fiadds
inc
mov
aam
dec
xor
adc
js
iret
leave
loop
dec
or
adcb
dec
mov
dec
pop
in
pusha
cli
xchg
lock
and
jl
in
sbb
mov
shr
pop
xor
xor
test
pop
dec
lcall
shl
xor
cmp
inc
jge
in
loope
cld
dec
addr16
jmp
jne
jo
pushf
inc
out
call
mov
stos
ret
hlt
pop
ror
icebp
test
push
adcb
mov
add
xchg
push
mov
dec
nop
mov
push
fidivl
adc
xor
stos
daa
adc
fs
test
push
or
out
lock
nop
mov
jge
scas
hlt
lcall
jecxz
das
mov
add
push
xchg
notb
int
fisubrs
out
stos
sub
test
mov
aad
popa
movsl
and
pop
dec
mov
mov
repnz
insb
lret
enter
cmpsb
lock
dec
xchg
pop
movsb
ror
lahf
pop
pop
imul
mov
mov
xor
mov
xchg
ds
scas
inc
stc
xor
inc
sbb
pop
pop
fwait
sub
scas
push
ljmp
ljmp
xor
push
arpl
push
repnz
cs
or
add
mov
jno
and
jne
xor
int3
out
pushf
nop
mov
stc
daa
insl
dec
sub
xor
adc
jo
jb
call
fdivs
arpl
stc
sub
add
or
xchg
xchg
mov
aam
mov
std
inc
aam
mov
adc
mov
sbb
jo
inc
mov
push
cli
push
das
lods
adc
inc
movsb
mov
pop
imul
cld
push
jns
sbb
rclb
mov
jns
add
jnp
iret
faddl
sti
rcrl
mov
mov
sub
fisubs
cmp
mov
sti
iret
inc
jp
sub
out
xchg
mov
hlt
daa
call
movsl
rcrl
stc
mov
mov
into
push
fistpl
daa
mov
mov
popa
push
xchg
mov
pop
xor
inc
mov
jns
sub
rcr
pop
pop
cmpsl
cltd
fsubrs
aad
push
pop
mov
int
mov
dec
lcall
clc
inc
in
xor
arpl
or
and
push
jnp
and
cli
inc
mov
or
test
add
in
test
out
push
xchg
push
addr16
push
dec
lret
inc
icebp
arpl
flds
xchg
sbb
xchg
mov
mov
gs
pop
ljmp
push
imul
mov
in
pop
inc
fdivrp
movsb
in
fsubl
sbb
cmc
xchg
mov
outsb
cmp
add
rorl
push
cmc
lods
popf
mov
stc
in
cmpl
adc
in
sahf
les
mov
shrb
mov
fcomp
xchg
xchg
dec
jmp
inc
insb
mov
and
add
pop
cs
jle
dec
dec
mov
inc
fdivs
adc
scas
mulb
lcall
or
out
push
xchg
jns
mov
push
mov
ret
xchg
add
xor
or
pushf
pushf
stos
popa
xor
xchg
dec
test
insb
mov
jns
mov
out
and
loope
cwtl
loop
lret
add
aad
in
inc
hlt
in
adc
daa
pop
mov
idivw
int3
iret
out
xchg
jecxz
lret
add
push
jb
cmp
popf
out
aaa
pcmpeqd
subb
xchg
xor
add
ror
jge
adc
jb
inc
cmp
aam
test
into
mov
sub
push
dec
adc
cmp
dec
movsb
pop
dec
xor
mov
fimull
jns
mov
cmc
mov
mov
shl
insl
xor
repnz
out
cld
fsubr
xchg
aad
aaa
push
testb
jmp
imul
int
push
inc
fs
inc
cltd
stos
xchg
cmp
in
or
xchg
fnstcw
enter
add
rolb
gs
mov
and
inc
and
mov
pop
fwait
icebp
test
mov
push
xchg
push
out
xor
out
sub
xor
inc
nop
push
es
push
xor
sti
stos
xor
ss
inc
sub
mov
xor
inc
cmpb
cmp
sub
testl
mov
stc
mov
cwtl
ffree
and
adc
mov
insb
shrb
je
into
daa
xlat
adc
loop
cmp
loopne
xor
scas
mov
shl
mov
imulb
movsl
ss
ss
lock
adc
call
and
dec
sub
sahf
movsl
push
sbb
shrl
jae
loopne
int3
or
das
mov
dec
cmpsl
fmull
rorb
cli
inc
push
mov
loop
lods
in
or
inc
add
sbb
adc
pop
mov
pusha
sbb
sub
dec
xchg
pop
insb
pop
xchg
lret
sbb
out
daa
lods
adc
in
sbb
pop
inc
cmp
add
inc
mov
movsl
shrb
dec
cmp
arpl
clc
push
sub
iret
push
inc
stc
push
cmpsl
imul
jp
mov
or
xor
sbb
clc
lods
sahf
pusha
loop
xchg
inc
in
insl
push
ror
pushl
mov
test
jbe
lds
test
rcrb
lret
shll
lcall
cmpsb
fucompp
sub
mov
adc
xchg
icebp
xlat
and
mov
nop
ret
inc
fs
mov
ret
and
imul
out
mov
add
test
add
data16
pop
pop
scas
jns
imul
out
scas
andb
inc
scas
imul
fcomps
mov
cld
pushf
inc
inc
aas
loope
push
cmc
and
pop
inc
push
sub
test
fnstenv
ds
xchg
cmp
setb
mov
push
inc
test
das
xor
mov
pop
out
sbb
enter
outsb
sbb
push
testb
and
cli
lahf
fwait
mov
xchg
gs
dec
or
and
lret
push
jb
lcall
inc
rorl
push
xor
int3
pop
test
sbb
xchg
lcall
test
aad
dec
leave
fnstenv
or
add
ror
inc
les
push
sbb
cltd
mov
dec
lea
lods
ss
cmpsb
pushf
mov
and
ret
xchg
mov
mov
mov
stc
lods
sub
outsl
sub
xchg
sub
cli
mov
sti
mov
cmpl
cmp
stos
lock
invd
jp
xchg
xor
aad
ds
cmp
xchg
lods
sahf
pop
inc
or
cmp
fcomps
add
push
sub
frstor
scas
push
lret
mov
lahf
xchg
movsl
cmp
adc
dec
cmp
scas
ja
pop
inc
jae
mov
movl
pop
jno,pt
push
lret
inc
cmp
mov
push
jmp
xor
movsb
dec
cmp
les
popf
out
es
sbb
mov
add
pop
push
arpl
pop
cmc
cmp
stos
mul
mov
movsl
dec
out
sub
push
and
xchg
sub
imul
push
add
cwtl
fidivrl
jmp
adc
dec
mov
jge
pop
mov
mov
rcrl
das
xor
mov
fdivl
adc
push
in
iret
popa
fadd
shll
cmp
pop
icebp
test
jl
insb
das
inc
sahf
jp,pn
call
dec
pop
fisubs
loop
sub
add
xchg
push
mov
or
push
jns
inc
popa
mov
jge
or
movq
insb
repz
test
hlt
mov
push
fistps
dec
mov
aaa
pop
popf
xor
dec
cmpsb
cwtl
pushf
mov
xchg
nop
sarl
or
jo
and
js
mov
ror
btr
loope
mov
sub
xor
stos
addr16
mov
rcll
pushf
and
dec
add
outsl
xchg
or
filds
push
xor
fisubrl
scas
xchg
adc
sbb
ret
inc
cltd
or
incl
aaa
cld
cld
insb
testl
push
das
inc
rcll
decl
xchg
jnp
mov
repz
adc
out
pop
lock
sub
cmp
add
lds
into
aam
push
sbb
cmpsl
in
pop
pop
pop
and
ficompl
cwtl
in
jb
jae
add
mov
jne
cli
sbb
mov
or
cmp
jp
je
xor
imul
add
xchg
shlb
jae
sbb
in
add
insb
pop
lahf
sbb
xor
and
add
adc
xchg
lcall
lret
aam
mov
inc
xlat
pop
adc
into
xor
xchg
add
ja
dec
or
cmp
or
lret
cmp
or
pusha
popa
je
cmp
je
loopne
pop
shl
mov
mov
inc
inc
ret
into
xor
scas
loop
adc
mov
icebp
mov
add
and
add
or
jmp
and
dec
xchg
inc
and
jo
pop
inc
es
mov
pop
xor
mov
loope
neg
jle
xor
ficoml
sbb
es
xor
imul
push
xchg
in
xor
jnp
add
jbe
outsb
inc
jp
adc
dec
mov
fcoml
outsb
stos
dec
push
pop
out
jge
popf
push
push
mov
ret
push
pop
push
popf
sub
test
in
inc
xchg
shrl
rcr
pop
inc
fldcw
mov
cmc
aas
inc
or
dec
inc
mov
ja
dec
push
addb
mov
test
sbb
adc
mov
mov
xor
dec
sub
movsb
ror
adc
mov
inc
jle
nop
inc
jmp
cmovb
fdiv
gs
jno
pop
xchg
fidivs
insl
imul
mov
ffreep
mov
jne
mov
ret
cli
dec
mov
in
out
dec
xor
test
cmp
pop
in
mov
lods
std
nop
ds
enter
cmp
scas
dec
scas
mov
outsb
sbb
push
loop
cmp
push
sub
leave
inc
cmp
inc
xor
ss
testl
gs
std
das
fs
push
js
pop
dec
ljmp
jbe
imul
inc
je
sub
pop
mov
jbe
mov
mov
test
pop
dec
data16
aaa
push
and
movsb
cmp
inc
cmc
test
jne
push
push
dec
aam
aad
rol
inc
insb
repnz
inc
jae
shll
mov
insb
inc
movsl
mov
pop
pop
or
fnstcw
push
outsb
mov
cmp
repz
lret
adc
sarl
inc
popf
imul
mov
dec
sbb
loopne
outsb
fcoml
out
sbb
call
out
aas
pop
inc
rclb
xchg
fs
lock
dec
push
divl
popl
adc
dec
test
jb
xor
dec
cmp
mov
and
cmpsb
mov
inc
ja
pushf
pop
xor
std
add
ljmp
addr16
mov
jbe
loopne
push
push
jne
push
inc
hlt
and
add
jb
inc
call
cli
adc
mov
clc
inc
sbb
xchg
sti
push
stc
rcrb
xor
fnstcw
mov
xchg
sub
adc
pop
cld
outsb
daa
push
ss
lret
dec
xchg
dec
lods
sub
sub
mov
mov
cwtl
mov
push
outsb
mov
mov
pusha
xchg
lods
fidivrs
mov
and
repnz
js
sbb
mov
notb
shll
and
lock
ja
icebp
push
push
and
scas
pop
fadds
or
out
imul
sbb
mov
xchg
push
and
fidivrs
pop
test
add
shll
repnz
cwtl
add
sarb
mov
sbb
jmp
sub
mov
push
enter
fs
push
dec
jl
push
mov
xchg
sub
jbe
xchg
test
adc
rcll
pop
flds
insb
jecxz
cld
push
scas
cmp
js
cld
cmp
sbb
dec
push
push
fistps
pushf
dec
xor
popf
cli
into
ds
mov
jl
dec
jae
movsb
sbbb
fcmovne
and
pop
pop
add
mov
ret
add
pop
and
pushf
fcoml
sub
dec
inc
sub
jno
push
sbb
lahf
mov
push
andl
dec
mov
scas
cmp
xor
lret
adc
cmp
mov
lods
ficoms
pop
movsb
mov
into
or
shlb
push
idivl
and
sub
cwtl
icebp
mov
rclb
mov
add
aad
add
mov
xor
and
xchg
inc
jg
out
push
jo
adc
and
jle
add
jg
cmp
dec
rol
jecxz
push
ret
adc
jns
fcoms
cmp
cwtl
sub
lret
movsl
into
popa
into
js
xlat
xchg
ret
call
mov
daa
pop
clc
loope
mov
sub
test
cmp
int
arpl
jmp
jecxz
mov
mov
sbb
push
arpl
and
push
push
sti
add
hlt
movsl
shr
int3
scas
mov
enter
imul
ret
xchg
xchg
ss
mov
cld
insl
xchg
dec
pop
cmc
insl
rcrb
jp
ljmp
sahf
cmpsl
pop
aad
loopne
cmp
jp
loopne
xchg
clc
int3
int3
dec
mov
les
outsb
and
dec
out
outsb
pop
adc
insl
cmp
add
jg
xchg
arpl
bound
mov
call
dec
imul
jns
mov
pop
lea
push
xor
mov
sarl
leave
mov
mov
xor
sbb
dec
jns
xlat
xor
aam
icebp
push
dec
and
adc
pop
inc
jge
stc
std
sub
lahf
mov
dec
test
repz
test
out
and
jbe
call
mov
adc
mov
sbb
mov
mov
mov
pop
jne
insb
cmp
fidivl
out
cld
mov
xchg
rol
insl
dec
xchg
clc
icebp
adc
xchg
sbb
cmpsl
xlat
add
pop
fs
fwait
jnp
loope
fxch
popa
xchg
dec
inc
js
in
roll
push
aad
xchg
mov
loop
cmp
adc
add
dec
fidivrl
dec
popf
sbb
add
or
pop
fidivl
ficoms
mov
lea
xchg
gs
sub
mov
push
and
pop
cs
not
jnp
push
repnz
loopne
cltd
out
add
pop
pop
pop
xchg
adc
xchg
push
or
add
fidivrs
popa
sti
out
idiv
cmp
aam
jbe
xor
mov
sub
movq
xor
sub
arpl
cmc
jmp
pop
nop
cmc
xor
jo
push
cmp
add
sbbl
in
stos
jno
xchg
mov
xchg
sbb
mov
jmp
and
sub
xchg
mov
les
iret
dec
arpl
jo
push
jo
inc
jecxz
jno
adc
mov
sahf
mov
cmp
cmc
mov
movb
adc
add
aaa
in
fnstsw
clc
dec
mov
sub
insb
in
jge
arpl
pop
lahf
fdivs
daa
imul
inc
jne
and
inc
and
push
test
mov
push
sub
push
or
sub
pop
or
push
xchg
fiadds
jl
mov
push
fistl
movsb
lahf
push
xchg
xchg
jl
out
es
lcall
les
jne
loopne
es
in
imul
add
int3
add
cwtl
in
xor
sub
std
push
jp
daa
xchg
push
stos
add
cld
mov
push
call
pop
xor
mov
call
subb
outsb
or
dec
push
push
jne
or
lret
xchg
cmp
push
mov
aaa
inc
ret
mov
arpl
std
add
popf
push
pop
inc
mov
sbb
lds
decl
loop
inc
in
loop
je
dec
sahf
add
arpl
inc
fisubl
push
sbb
ret
pop
outsb
sub
mov
es
ja
xor
jo
jle
add
jmp
outsb
pop
arpl
ret
fbld
fadds
mov
bound
repnz
or
jmp
inc
jecxz
insl
fs
loop,pt
popf
outsl
push
jno
inc
cmc
mov
daa
mov
das
dec
cmp
xchg
push
inc
lcall
repnz
push
test
jle
or
pop
inc
pop
fucomi
add
pop
iret
add
aam
xor
ss
test
mov
inc
les
ljmp
push
shlb
lods
add
lds
out
jmp
cli
jl
pop
push
pop
mov
movsl
mov
jns
inc
xchg
dec
mov
mov
inc
hlt
mov
sbb
jb
outsl
cmp
pop
or
cmp
outsl
loop
jmp
pop
arpl
xchg
test
and
sbb
insb
aas
sub
xchg
mov
mov
push
int3
and
data16
rdtsc
pop
cmp
leave
sbb
pushf
lcall
out
sbb
ljmp
push
rclb
out
xor
hlt
xchg
pusha
xchg
cmpsb
clc
lea
pop
xchg
add
movsl
ds
popa
std
sbb
pop
sahf
push
dec
push
inc
mov
fdivr
inc
inc
xor
cmpsb
in
push
cwtl
xchg
shrb
es
in
test
repz
push
subb
gs
push
and
and
stos
and
mov
mov
bound
and
aad
cmpsb
lods
mov
xor
sbbl
add
add
cld
cmp
cli
sub
fnstenv
fs
and
outsb
push
cwtl
fisttpll
push
std
mov
add
lods
and
cmp
mov
push
cwtl
iret
mov
and
out
mov
pop
jg
dec
mov
das
mov
or
lahf
xlat
inc
mov
push
call
cmpsb
scas
or
das
jmp
jp
lret
ja
lods
pushf
insb
bnd
test
mov
or
and
mov
mov
adc
sub
push
je
xchg
add
arpl
ret
mov
sarb
stos
lods
loopne
dec
jecxz
adc
push
movsl
jmp
mov
add
out
or
insb
jb
push
lahf
popf
mov
jae
flds
and
lahf
in
fcoms
adc
or
mov
les
insb
add
jae,pt
sub
adc
cmp
pop
mov
imul
std
pop
or
sbb
mov
test
dec
enter
mov
jae
nop
psraw
xchg
js
jg
push
add
jg
rcrl
nop
bound
sbbb
or
enter
jo
fmuls
lock
pop
dec
fs
scas
sbb
cltd
aas
push
aas
mov
popa
push
sub
inc
sahf
xchg
inc
xchg
out
and
inc
mov
xchg
shll
adc
mov
cmpb
ret
xor
jge
add
mov
mov
outsb
aam
divl
clc
xor
gs
push
xchg
nop
mov
xchg
jo
push
test
in
nop
ljmp
nop
mov
pop
adc
push
das
mov
jmp
mov
jge
scas
push
out
rclb
mov
out
inc
pushf
jecxz
lret
cmp
push
repnz
mov
xchg
fbstp
movsb
ds
push
sbb
arpl
mov
lahf
jbe
andb
icebp
stos
in
xchg
cmc
or
test
pop
daa
or
loop
in
adc
pop
jge
or
push
pop
js
test
into
jae
dec
and
dec
inc
les
adc
xchg
je
jo
jo
push
push
imulb
dec
mov
cmc
inc
inc
adc
lret
addr16
popf
arpl
movsb
popl
into
gs
sbb
fiaddl
push
and
sub
aas
sbb
push
xchg
sbb
ret
pop
jecxz
push
je
sbb
lods
fwait
jp
sbb
sbb
push
mov
aad
arpl
and
outsl
jl
xchg
push
and
scas
pop
jle
sbbl
jo
mov
xor
into
add
lock
push
fnsave
sahf
stos
scas
jmp
ja
cmpsb
and
mov
lcall
pop
inc
fucomp
and
dec
push
sub
mov
cmc
bound
out
mov
stos
jle
mov
repz
das
cmc
bound
dec
scas
or
imul
sbb
cmp
fxch
mov
enter
push
mov
fisubl
lds
pushf
jmp
fdivs
jb
outsl
or
pusha
sbb
jbe
add
xchg
jecxz
loopne
imul
cld
adc
sbb
loope
dec
daa
pushf
aad
sti
add
pop
inc
test
imul
xchg
mov
imul
jle
push
aaa
adc
and
xchg
jbe
fisubrs
movb
fistpl
mov
mov
loopne
pop
popf
sbb
cli
insl
mov
in
outsb
stos
sbb
add
fs
aad
mov
sub
push
aam
cmp
mov
push
pusha
xorb
cmpsl
dec
lret
cmp
inc
jno
loope
in
fcompl
sub
cmp
push
daa
xor
shrb
repnz
mov
and
stos
mov
inc
inc
nop
loope
aas
ds
ret
cli
out
out
orl
andb
or
loope
jge
lds
lds
pop
mov
addr16
inc
add
or
fdivp
iret
xor
push
jge
stc
mov
inc
shr
adc
daa
add
insl
out
add
dec
cli
mov
inc
pusha
cmovo
imul
andl
xor
movsl
sbb
lea
jbe
dec
cld
xchg
pusha
mov
sub
sbb
mov
xor
pop
mov
dec
das
xor
sbb
sbb
test
fcom
cmp
in
popf
mov
adc
and
add
mov
nop
imul
fmuls
pop
subl
inc
xchg
nop
mov
imul
test
xor
iret
lods
dec
pmullw
scas
lds
loopne
push
loopne
loopne
cmp
into
fwait
in
divl
mov
pop
jle
in
mov
xor
iret
stos
sbb
fcomps
sub
test
jne
add
in
mov
cmp
ret
inc
lcall
stos
or
sbb
xchg
jecxz
adc
js
dec
jle
pusha
push
aas
mov
decl
out
lretw
and
mov
add
jg
pop
xor
xor
cmp
cmp
jle
daa
mov
ljmp
dec
nop
xchg
repz
push
ljmp
inc
adc
add
mov
pushf
and
fistpll
sub
xchg
lds
cld
inc
mul
dec
sub
int
mov
xchg
jle
add
shrb
lahf
xchg
push
mov
fnsave
xchg
jnp
mov
and
mov
push
cmp
fnstenv
xchg
paddw
shl
jg
das
in
data16
mov
cs
mov
outsb
sbb
push
in
dec
ret
out
lret
lods
std
cmp
mov
adc
inc
jecxz
xor
nop
push
into
sahf
mov
mov
mov
push
mov
movsb
jge
ds
fldcw
loop
imul
les
pop
arpl
ss
sbb
outsl
mov
mov
mul
inc
dec
fucom
push
mov
cltd
inc
inc
sbb
movsb
or
mull
jbe
and
xlat
in
push
test
jmp
stos
les
out
jl
loop
fisttpll
int
cmpsl
andb
andb
xchg
xchg
outsl
jmp
sub
outsb
lods
out
xchg
push
rcr
inc
andl
mov
lret
popf
fwait
cmp
cmp
movsl
mov
jl
inc
or
testb
sbb
out
xchg
iret
adc
sti
mov
ds
roll
xchg
push
push
rcll
jle
sbb
movsb
adc
sub
sub
sub
aad
mov
pushf
or
call
test
rclb
aaa
in
ret
mov
movsb
hlt
fs
lds
notb
mov
dec
gs
inc
xchg
aaa
xorb
and
jle
out
xchg
mov
xchg
sbb
jecxz
insb
out
out
cwtl
in
add
adc
xchg
and
stc
mov
leave
pop
add
inc
cmpsl
pop
mov
fistpll
xacquire
cs
adcb
bound
fcomps
call
xchg
movl
inc
orl
jmp
aad
push
or
movsb
fnsave
pop
cmpsb
mov
adc
push
daa
test
fmull
mov
push
pushf
arpl
clc
adc
imul
mov
pop
inc
outsl
fnstsw
mov
popf
pop
mov
loopne
dec
ror
jae
imulb
mov
dec
adc
call
inc
cmpsl
call
cwtl
daa
sbb
mov
adc
xchg
xchg
xlat
adc
jb
movl
xchg
hlt
mov
push
pushl
aad
rcl
pop
popa
push
pushf
rol
push
mov
sub
inc
cli
push
push
and
mov
mov
jb
jne
xor
fistpll
mov
sbb
or
mov
xrelease
cmp
cmc
xchg
mov
inc
xchg
in
mov
jecxz
stos
rcrb
aad
or
je
jae
sub
mov
ret
pop
sbb
shrl
push
mov
je
into
sub
mov
gs
cli
shl
int3
mov
adc
daa
rcrb
std
xor
test
in
mov
negb
cmp
xchg
lods
pop
fnstenv
push
divb
scas
imul
fs
pop
cli
dec
inc
mov
jecxz
inc
loopne
ja
setl
leave
cmp
mov
insb
adc
imul
mov
cmp
imul
xor
dec
lea
pop
loop
stos
pop
inc
cmp
add
or
add
stos
pop
icebp
adc
xor
aam
hlt
sarb
clc
inc
add
dec
cmp
sbb
adc
inc
mov
loop
cmp
xchg
idiv
lods
int
xor
mov
call
nop
in
data16
jne
cmp
int3
call
test
out
shlb
adc
mov
mov
cwtl
negl
xchg
dec
xlat
loope
nop
mov
cld
sbbb
and
aad
in
test
mov
insb
xchg
inc
jmp
iret
aas
es
movsb
mov
add
movb
pop
lret
into
cmp
mov
push
dec
jge
or
cwtl
xor
sub
stos
fistpll
stos
icebp
rol
xor
add
jne
add
jecxz
in
dec
add
mov
adc
push
and
pop
dec
fdivrl
xor
xor
cmpsb
mov
push
push
mov
sbb
sub
lret
xor
xor
insb
mov
movsl
xor
in
push
int
sbb
int
xchg
aaa
loopne
inc
mov
out
push
loopne
push
push
and
fstpt
xchg
ficompl
push
in
add
fwait
cmp
jle
xor
out
movsb
and
inc
xlat
jne
das
sti
shrb
sbb
dec
add
mov
into
xor
movsb
jp
dec
dec
xor
pusha
aas
loopne
sbb
push
pop
adc
rorb
repz
add
ret
adc
pop
xor
test
lea
in
aas
push
xchg
fidivrl
xchg
mov
fstl
loop
cmp
sbb
movsl
cmc
loopne
sbb
stos
std
or
nop
adc
dec
std
idiv
loopne
dec
and
jae
jbe
push
insb
push
dec
cmp
arpl
inc
scas
push
in
jne
jp
int
neg
cltd
outsb
adc
cmpsl
insb
xchg
test
popa
fwait
add
cmp
test
int3
jecxz
inc
movsb
lods
mov
cmc
add
das
inc
inc
mov
outsb
div
pop
mov
inc
or
aas
insl
aaa
dec
imul
and
adc
dec
xchg
arpl
jnp
push
and
out
push
loop
push
inc
bound
popf
pop
dec
movsb
jp
inc
int3
stc
scas
mov
jp
aaa
or
xor
mov
popa
rorb
lods
ds
adc
cs
dec
js
push
lret
xchg
push
adc
mov
fldt
push
adc
adc
add
les
test
ror
inc
js
add
xor
jb
rcl
popa
shrb
shlb
test
enter
sub
adc
lds
cltd
and
mov
out
fwait
mov
pop
ss
mov
lret
mull
and
adc
incb
lcall
xchg
shll
shlb
inc
addr16
mov
inc
pop
mov
xchg
xor
mov
sub
popf
dec
fiadds
pop
imul
repz
inc
sbbl
add
lods
mov
mov
mov
outsb
cmp
fs
mov
lret
popa
sar
push
ja
out
mov
cmp
push
in
dec
sbb
stc
jle
test
pop
and
addr16
iret
mov
rcrl
add
push
fisttpll
data16
orb
cltd
in
inc
pop
cmpsb
cwtl
idivb
xor
lahf
add
cmp
scas
or
mov
jge
inc
fcmovnb
popa
daa
cmp
in
in
aad
sub
cli
jmp
aam
nop
xchg
sarb
jg
jmp
and
bound
fisttps
out
movsb
out
pop
adc
add
out
movsl
xor
xchg
ficomps
mov
cmp
xchg
dec
adc
mov
lock
sbb
aaa
adc
jo
mov
addb
mov
mov
push
inc
hlt
arpl
int
ret
pop
shr
pop
repz
jb
adc
jb
cmpl
jg
xlat
sarl
jns
mov
lea
in
pop
adc
hlt
sar
rol
ds
sub
int3
movsl
cltd
test
rorb
out
mov
mov
mov
iret
pop
xchg
repnz
popf
pop
pop
nop
mov
jmp
std
xor
jne
int
or
test
pop
rcrl
imul
push
cmp
ret
stc
mov
push
xchg
mov
add
mov
pop
inc
push
inc
push
daa
test
and
sub
dec
mov
jp
sub
xchg
pop
sub
enter
adc
fnstcw
inc
imul
nop
dec
xor
sub
mov
cltd
or
inc
mov
adc
jo
or
or
test
bound
enter
mov
sbb
adc
or
hlt
in
gs
mov
lahf
arpl
lret
ss
ret
lods
sbb
les
push
mov
push
xchg
sti
inc
test
push
sub
lds
hlt
cmp
pusha
inc
cwtl
out
mov
or
neg
lret
js
push
push
and
cli
push
imul
fldenv
fsubrs
fs
in
mov
mov
into
rcrb
les
add
and
pop
flds
xorb
push
mov
jmp
inc
pop
cmc
xchg
inc
shll
xchg
sub
dec
jae
and
pmovmskb
mov
cmp
jnp
shll
push
outsl
dec
push
fistl
push
sub
cltd
push
in
dec
xor
jb
jae
notb
inc
lret
sbb
cli
sbb
rorb
inc
xor
pushf
into
push
andb
adcb
xchg
and
sbb
cld
xchg
stos
add
mov
je
cltd
and
xor
sti
repz
push
insl
push
xor
adc
out
or
dec
pop
or
xor
inc
dec
push
mov
jno
sbb
dec
xchg
scas
data16
clc
lcall
adc
out
lea
insl
or
jp
in
pop
loop
lret
jbe
mov
jbe
inc
cmp
sub
mov
icebp
push
loop
inc
cmp
push
xchg
clc
repnz
ss
push
xor
push
add
int3
cltd
and
adc
fstpl
adc
dec
fildll
and
xchg
mov
inc
add
in
jl
cmp
loop
shlb
sbb
fistpl
test
test
sub
jg
push
enter
mov
pop
xor
jns
sbbl
aaa
aad
ror
in
cs
xchg
mov
nop
or
bnd
test
je
into
mov
jge
fdivr
dec
push
mov
testl
lret
loope
sub
or
and
or
inc
mov
mov
or
cmpsl
mov
into
shlb
aad
xchg
mov
sub
lods
nop
pusha
lock
movsb
mov
xor
outsb
lahf
movsb
fistl
jg
nop
in
sbb
out
out
test
adc
sarb
xchg
aas
pop
sub
add
xor
fcomp
cs
mov
out
pop
mov
push
fcmove
mov
outsl
int
sbb
fisttpll
shl
pop
ds
sbb
lods
pop
das
cmp
jne
jno
cmp
sbb
addr16
jge
std
inc
arpl
fsubl
add
movswl
call
sub
push
jmp
nop
ret
xchg
pushf
add
cwtl
and
inc
sub
push
pusha
or
aad
adc
test
sahf
mov
dec
imul
jge
xor
daa
pop
xorl
jbe
ljmp
mov
ffree
push
dec
dec
sbb
and
stc
dec
pop
push
ljmp
dec
test
lret
mov
leave
add
fs
sahf
test
mov
jnp
shlb
add
and
mov
aad
js
sbbb
popa
out
cwtl
data16
or
testb
xlat
lds
movsl
push
pushf
sbb
push
sbb
gs
add
push
jno
cld
outsl
pushf
iret
popa
dec
or
and
add
sub
push
and
fwait
jle
mov
lahf
aaa
adc
inc
pop
pop
inc
inc
push
scas
and
scas
dec
add
into
jl
jns
jp
pop
popa
sbb
cmp
adc
scas
sub
mov
push
out
or
arpl
xor
sub
test
dec
leave
insl
repnz
pop
hlt
pop
repz
leave
icebp
aad
jge
jbe
rorl
in
popa
bound
mov
gs
mov
cmp
shll
and
rorl
int
pop
sti
add
inc
push
push
dec
sub
add
push
daa
stos
and
mov
push
fucomp
nop
jp
or
pop
sbbb
imul
out
pushw
push
ficoms
push
jle
sarl
dec
data16
rcl
mov
xor
clc
sbbb
xchg
and
push
cwtl
clc
mov
fwait
popl
ds
or
mov
fildl
addl
sbb
cwtl
mov
aas
or
jmp
imul
loop
xor
aaa
mov
inc
popf
cs
jge
popf
mov
fbld
xchg
test
aaa
xor
ret
or
xchg
dec
test
sub
xor
popf
jns
mov
aaa
sub
adc
jbe
inc
call
out
stc
jmp
mov
adc
fwait
sqrtps
push
xchg
fs
cmp
loope
cmp
adc
cmp
mov
shll
or
ficoms
outsb
neg
cmpsb
sahf
fsubrp
je
xorl
mov
and
and
mov
jp
mov
xor
cmp
mov
jb
jae
lods
and
inc
scas
out
push
push
add
lret
cmp
fsubs
cltd
fildll
push
scas
lds
sub
ljmp
dec
mov
int3
dec
jno
ss
into
mov
xor
addr16
insb
push
push
movsl
inc
repnz
push
cli
xchg
mov
sub
out
fiaddl
cmpl
dec
test
mov
dec
xor
sub
cmp
dec
add
repz
test
jb
insl
das
push
cmc
sub
pop
rolb
test
pop
lods
push
bound
outsb
insl
dec
sub
pushf
outsb
mov
mov
pop
cmp
sbb
dec
call
sub
lock
out
inc
dec
pop
popl
ffree
repz
xor
mov
inc
je
adc
and
adc
push
sub
pop
ret
lods
adc
stc
mov
lret
xor
mov
fnsave
add
aam
test
xchg
orl
adc
nop
sbb
mov
dec
enter
test
sub
mov
and
pop
movsb
jp
xor
popa
jb
ret
lret
inc
pop
jns
or
mov
xchg
outsb
pop
fimuls
inc
or
int3
in
pop
outsb
adc
sub
imul
cwtl
mov
test
push
out
sbb
cmp
repz
inc
push
sbb
cltd
rcl
xor
lahf
mov
popf
in
cmp
test
inc
cmp
jnp
cmp
test
in
fisttpll
sahf
push
pushf
add
and
scas
sbb
fdiv
lock
cwtl
dec
scas
cs
lea
cld
cmp
ss
cmpsl
mov
xchg
mov
in
pushl
outsb
add
pop
dec
stc
inc
mov
cwtl
lahf
cmp
aaa
sub
fstpt
mov
aam
xchg
stos
cmp
pop
add
lea
fdivr
and
xor
rorl
cmp
mov
sahf
shlb
cmp
jmp
test
push
sub
andb
pop
popa
adcb
repnz
xchg
daa
jno
lock
add
cwtl
push
ds
mov
cmp
jo
fsubs
adc
dec
cmpsl
into
mov
ss
and
cmp
outsl
adc
lret
in
mov
pop
xlat
lock
aad
push
xor
push
sub
dec
jne
mov
lods
ret
push
loop
inc
xor
lahf
das
mov
cmpl
push
jl
mov
jmp
inc
mov
and
hlt
lahf
iret
nop
or
pop
scas
in
mov
popa
mov
hlt
sbb
xchg
rcrl
in
push
dec
inc
sub
cwtl
mov
fucompp
das
shll
pop
cmp
cmp
leave
popf
negl
jae
test
mov
cmpl
add
xchg
xchg
inc
fdivrl
push
inc
push
or
push
push
jg
ljmp
ficompl
cmpsl
cld
cmp
insl
ja
mov
sti
lock
orb
insl
or
cmp
call
jg
sbb
mov
sbb
shrb
sub
imul
hlt
lret
mov
test
push
add
cmc
xchg
sbb
clc
dec
mov
push
sub
gs
sbb
out
repz
sarl
aam
hlt
sub
mov
pushf
xor
push
lahf
xor
les
ljmp
add
jnp
lea
and
aad
push
inc
cmp
rorb
js
int
lret
push
push
js
xchg
rcrl
sahf
stc
sub
lret
int3
inc
dec
cmpsl
push
mov
pushf
mov
std
mov
xor
xor
test
mov
cmp
clc
js
add
push
sbb
dec
fdivl
ficoml
mov
cmp
jo
xchg
dec
inc
fwait
and
lock
push
les
and
mov
and
into
mov
in
add
fldenv
mov
loopne
mov
pop
or
or
adc
or
fwait
sbb
fadds
fistpl
add
xchg
inc
es
std
dec
cmp
stos
popf
andl
or
ss
aas
pop
in
push
cmp
dec
and
jae
fstpl
shrl
jmp
loope
add
popf
dec
add
rolb
mov
pusha
test
mov
inc
adc
cmc
je
and
cmpsl
insl
idivl
cmpb
and
lret
add
gs
xchg
cmp
adc
aas
sub
mov
sbb
and
push
push
hlt
dec
cltd
outsb
repz
shll
lods
ja
push
sbbb
push
mov
mov
xchg
mov
sbb
jmp
pop
loopne
cmp
repz
cmp
push
fsubr
and
cmp
fidivs
push
and
aaa
hlt
add
sub
push
pop
sbb
ss
popf
daa
mov
and
repnz
hlt
mov
jge
or
out
ret
insl
mov
loopne
sbb
jmp
out
mov
shr
sahf
sub
xor
test
leave
fsubl
inc
and
ds
jne
or
push
rcl
call
pop
push
dec
or
push
xchg
out
lods
cmp
fnstenv
lret
stos
adc
xor
push
xchg
fcmovnbe
jge
rcrb
rorl
xor
pusha
fsubrs
xchg
push
shl
les
mov
and
stos
movl
das
xor
sti
cmc
push
shrl
cmpsb
push
and
and
or
js
outsl
lahf
sbb
mov
pop
push
fildl
pop
push
ljmp
dec
sbb
cmp
or
cld
filds
lret
jns
leave
cmpsb
xlat
les
enter
jb
loopne
jle
fmulp
fstl
cltd
xchg
dec
loop
dec
daa
sbb
js
jge
lret
push
lock
jb
fwait
pushf
pop
cs
ret
mov
mov
pushf
dec
jnp
sub
lahf
and
aad
cmpsb
cmp
or
push
push
jo
lea
sub
pop
mov
mov
cmc
inc
andb
imul
outsb
bound
lcall
mov
mov
cmp
mov
mov
pop
dec
or
sbb
inc
movsl
rep
out
ss
dec
pop
xor
or
push
fcomps
xchg
enter
aad
subl
mov
negb
mov
test
fdivrl
dec
negl
addb
xchg
sbb
fldcw
aas
inc
xchg
repnz
xchg
xchg
cmpsl
or
jecxz
shl
add
out
loopne
inc
ret
jp
addr16
lods
xor
jecxz
fsubrl
add
test
addr16
jg
jbe
pusha
dec
in
cmp
fsubs
mov
jo
cmpsl
inc
xchg
mov
sub
add
aad
mov
ret
dec
loope
dec
adc
fldenv
push
pop
ss
cmp
sbb
rcll
out
mov
out
cs
pop
sub
xchg
fcomps
or
mov
aam
fdivrs
shll
imul
addr16
fsub
clc
das
je
cmpb
add
xor
push
jge
mov
xchg
lods
stos
inc
pop
movsl
fucomi
fbld
mov
fs
test
and
imul
lods
inc
mov
cwtl
mov
xchg
jge
lret
imul
ror
imul
mov
xor
adc
cmpb
pop
pop
adc
adc
jb
leave
sbb
int3
sbb
mov
cmp
outsb
and
pop
icebp
or
daa
jmp
test
hlt
pop
mov
sub
or
cltd
pop
jne
jb
xchg
ret
ret
daa
dec
repnz
andl
ds
dec
dec
mov
dec
or
pop
aaa
jne
arpl
enter
xor
cltd
arpl
stos
in
mov
xor
stos
mov
cmp
out
xlat
in
adc
and
stc
inc
cmc
roll
ficoms
push
cmpsb
loope
leave
clc
sbbl
inc
fldenv
xor
aaa
je
and
loopne
sarb
xlat
into
xorb
adc
sbb
fstps
int3
arpl
jae
sarb
lods
cmpsl
imul
inc
dec
mov
mov
imul
loope
and
xor
mov
xor
push
cmpsl
nop
mov
fwait
and
xchg
xor
sbb
xchg
call
sbb
mov
fcomps
mov
mov
shrb
loopne
std
fistl
jp
mov
lds
dec
sbb
pop
or
or
sahf
mov
cmp
push
add
cs
testl
scas
mov
sbb
fstpt
cmp
jl
ljmp
sti
push
jmp
mov
jecxz
clc
out
shlb
ffree
fsubs
pop
cmp
xchg
test
xor
or
pop
aaa
and
pop
int
xchg
decl
sbb
lcall
jnp
add
jb
xchg
sahf
mov
add
mov
ret
testb
into
jecxz
jl
push
cli
mov
int3
sahf
mov
lods
sbb
lea
jo
adc
movsb
sbb
popa
xor
mov
fs
xor
arpl
mov
and
in
lret
mov
bound
mov
sbb
sub
mov
mov
testb
ljmp
insb
sbb
imul
ja
push
or
nop
fildl
pop
loop
ja
push
pop
bound
out
mov
inc
sub
jmp
xchg
stos
jb
js
fdivrp
and
or
jg
ret
and
roll
xchg
iret
popf
dec
pop
push
mov
mov
add
push
cld
imul
mov
dec
inc
ret
hlt
addr16
std
or
arpl
ds
inc
lret
loope
xchg
inc
pop
sub
cmp
movsl
mov
leave
jmp
or
out
and
jg
sbb
sub
mov
mov
mov
xchg
pop
dec
push
push
rcl
xor
sub
dec
pusha
and
push
aaa
in
outsb
sub
aad
push
pusha
xor
fcomps
push
dec
push
jae
adc
mov
das
jmp
repz
xor
ret
xchg
into
orb
addr16
aad
js
jg
push
dec
adcb
cmp
pop
jo
mov
or
test
cltd
sbb
idivl
fimull
sbb
stos
mov
test
mov
jbe
push
push
cltd
push
mov
cmp
movsb
loopne
mov
xchg
fisubrl
and
loopne
adc
in
sub
and
subb
cmpsl
ja
popf
xchg
outsl
stos
popf
pusha
fidivl
xchg
cmpsl
addl
mov
lcall
aaa
int3
cld
daa
shll
rcl
es
mov
mov
mov
and
mov
stos
and
xchg
pop
fisubrs
dec
xor
pop
test
push
data16
insl
xchg
fisubl
push
dec
cmc
hlt
xor
fisubrl
ret
cmp
mov
cmp
dec
insb
in
lahf
test
pop
fsubp
stos
push
ror
repz
jle
lods
mov
pop
sub
dec
push
out
inc
pop
or
jo
stos
adc
sahf
dec
xor
mov
mov
call
inc
jecxz
iret
jp
scas
mov
mov
mov
and
pop
sbb
into
jbe
mov
or
cmp
push
fnsave
inc
jae
mov
xor
dec
int
adc
mov
cmc
push
aam
or
icebp
dec
sbb
xchg
addr16
mov
xchg
out
leave
stc
xlat
and
inc
inc
xor
inc
xor
in
fcmovu
fildll
dec
ret
clc
mov
cmp
repnz
mov
xor
xchg
sub
sub
jne
dec
loopne
pop
lret
gs
inc
cmp
push
arpl
adc
inc
imul
sub
xchg
lds
inc
lock
bnd
arpl
stos
sub
fstps
insb
sub
fstps
cmpsb
dec
ficoml
lahf
pop
cmpsb
sub
jnp
ljmp
mov
pop
cmp
popf
das
pop
sub
pop
mov
push
jbe
sbb
xchg
mov
ljmp
mov
aas
pop
stos
pop
les
arpl
sbb
and
dec
push
mov
stos
add
and
pop
and
int3
xor
out
mov
rcrb
lcall
jp
mov
mov
fbstp
jne
and
in
or
push
cli
inc
xor
leave
aam
push
mov
sti
inc
cmp
faddl
mov
and
xor
pusha
jecxz
sarb
movsl
xor
stos
cmpl
xchg
imul
out
test
jno
mov
pop
mov
pop
xor
inc
cmp
into
xchg
imul
test
dec
jl
mov
xor
hlt
xchg
xchg
adc
js
mov
outsl
dec
xorl
mov
loopne
dec
outsl
leave
push
adc
jmp
imull
inc
into
add
fldz
daa
jo
mov
mov
mov
cmpsb
in
cmpb
xchg
imul
and
inc
stc
jp
xlat
push
daa
mov
or
push
mov
mov
iret
jne
push
lods
negl
mov
jb
in
mov
jle
push
lahf
xchg
xor
test
test
rorl
mov
mov
push
lret
es
ja
aam
mov
cmc
outsb
les
dec
inc
mov
rol
scas
pop
push
dec
pop
cmp
popf
mov
loopne
mov
jecxz
lea
jl
out
cmpb
jbe
mov
test
and
sub
xchg
scas
cmp
jbe
sbb
in
jo
or
data16
pusha
mov
sti
es
test
adc
je
nop
push
push
push
push
or
negl
mov
clc
cmpsb
mov
jns
fwait
or
insb
addr16
mov
mov
pop
pusha
mulb
jle
rol
fs
cmp
inc
stos
cmp
and
fsubs
xor
inc
repz
mov
adc
mov
sub
adcb
push
inc
mov
loopne
stos
add
fsubp
icebp
nop
movsl
mov
mov
mov
es
scas
jb
pushf
movsb
mov
and
movsb
mov
cs
aam
test
push
aad
jns
jecxz
cwtl
das
ljmp
icebp
loope
adc
inc
sbb
and
and
loop
or
decl
movsl
dec
jns
js
leave
sub
adc
or
cwtl
sbb
popf
xor
mov
sbb
popf
in
pop
repz
sbb
fdiv
xor
sahf
sub
pop
fmuls
lret
out
mov
xchg
jl
les
fmuls
imul
js
outsb
and
xchg
icebp
stc
lods
mov
sbb
push
in
push
mul
fwait
or
add
jle
ret
dec
add
ret
call
or
xchg
lret
mov
sub
adc
mov
sahf
hlt
rcrb
pop
sub
daa
sub
jle
call
in
call
scas
bound
xchg
cwtl
pop
mov
adc
mov
jg
mov
add
mov
push
sbb
stc
mulb
ljmp
js
imulb
sbb
jno
pop
dec
dec
adc
movsl
mov
dec
les
xor
mov
jg
jns
mov
push
jbe
xchg
adc
mov
push
mov
cli
out
and
enter
cltd
dec
lahf
jecxz
inc
pop
xchg
sbb
xlat
inc
and
aad
add
je
aas
call
fmuls
sub
lods
aad
cmp
lea
mov
aam
ja
mov
les
inc
std
and
rolb
ja
sbb
stc
js
push
aad
mov
mov
push
push
ret
push
call
mov
mov
pushf
mov
pop
lahf
push
ss
and
das
inc
ds
cli
mov
or
ja
data16
mov
sbb
orl
inc
test
repz
push
rcl
mov
stc
sahf
daa
das
scas
loop
and
cmp
cmpsl
sbb
enter
sbb
inc
sub
aaa
dec
cmp
sbb
and
adc
push
add
adc
outsl
test
xor
push
jne
fiaddl
dec
out
lods
xchg
dec
sub
js
or
mov
cli
add
dec
or
sti
lock
aas
jl
fmuls
inc
lods
cwtl
adc
test
daa
jae
sarb
jecxz
push
test
xchg
jmp
pop
add
push
fs
lock
imul
and
adc
ret
stos
inc
xchg
xor
ss
xor
mov
jns
sbb
stos
cmpb
or
jecxz
notb
icebp
rcll
sti
sub
addr16
out
sbb
iret
lret
ljmp
addr16
mov
fildll
loopne
pushf
push
popa
dec
add
mov
jg
xchg
in
mov
mov
pop
icebp
push
repnz
jo
loop
popf
jge
xchg
jg
mov
popf
out
rorb
push
sub
push
xchg
lds
out
hlt
xor
int
adc
xchg
out
insl
and
sar
sub
lahf
outsb
or
xchg
fildl
out
add
out
pop
out
jnp
jo
or
jg
or
jne
xchg
add
scas
movl
in
test
push
jne
loop
in
cmp
mov
mov
insl
andl
rcl
bound
jbe
outsb
cmpsl
lds
xchg
cmpsb
pop
mull
les
xchg
out
cmp
popa
je
iret
fisubrl
pop
fidivrs
insl
mov
mov
outsb
fxtract
int3
bound
loop
js
neg
clc
sti
xor
push
mov
mov
or
xchg
scas
xchg
adc
xchg
repz
fcompl
mov
xchg
jnp
or
sub
into
scas
andl
pop
jle
in
out
adc
insl
icebp
negb
inc
lods
jb
addb
outsb
rorb
data16
xchg
cmp
mov
ss
loopne
mov
xor
mov
sti
mov
ds
out
addr16
jp
mov
dec
jp
mov
icebp
mov
popf
nop
add
in
push
inc
mov
cwtl
mov
and
int
aas
inc
fbld
sbb
adc
add
cwtl
loopne
and
push
xchg
call
adc
sub
push
in
mov
cmpsl
cmp
js,pt
mov
push
jmp
js
mov
adc
fbstp
faddl
je
int3
in
in
addb
push
mov
inc
mov
push
ret
jl
fisubl
cmp
push
jl
and
inc
repz
cmp
in
pushf
mov
fs
ror
test
rcl
pop
sbb
not
push
jg
mov
mov
pushf
cwtl
test
mov
mov
mov
cmc
mov
mov
ja
call
mov
or
fistpl
inc
in
test
sahf
ficomps
cmc
std
call
rol
lds
add
lret
jbe
push
push
cs
sbb
jo
push
out
mov
xlat
adc
pop
dec
sarl
dec
in
cli
out
mov
inc
bound
inc
dec
stos
les
cmp
inc
adc
jge
test
cld
cwtl
in
insb
sub
andb
imul
xchg
ljmp
push
test
xor
mov
in
movsb
pop
xchg
xor
sbb
js
fsubs
imul
cmpb
int
outsb
lock
add
jnp
popa
cmp
and
pop
dec
xor
leave
pop
sti
dec
cmc
out
pop
call
xchg
ja
out
hlt
lods
mov
leave
lret
mov
xchg
and
and
sbb
shrl
stc
sub
lret
aam
jge
ret
out
fwait
aas
decl
fldcw
fdivl
and
roll
pop
ss
cli
test
push
lods
push
into
jg
sbb
xor
cwtl
in
out
mov
testl
repz
call
test
cld
adc
lahf
hlt
inc
pushf
or
xor
push
ret
xor
rol
call
push
rolb
pop
fimuls
cltd
cwtl
lock
fsts
mov
into
push
mov
test
lahf
fsubrl
sub
stc
push
sti
cmp
jmp
xchg
std
and
or
popa
cmp
jb
mov
adc
daa
xor
stos
or
and
push
adc
rclb
push
sub
inc
push
data16
mov
mov
cltd
das
insl
inc
movsb
cmp
xchg
imul
cmp
test
mov
aad
sbb
mov
lret
imul
sbb
dec
aas
into
xor
add
sahf
mov
imul
sarl
in
jnp
mov
mov
lahf
push
pop
mov
jge
lds
mov
fstps
pop
sbb
loopne
bound
stos
dec
pusha
rclb
mov
mov
dec
out
arpl
jns
ja
pushf
dec
push
adcb
inc
jmp
jg
jg
xchg
sub
pop
xor
dec
lods
mov
or
mov
jo
fwait
dec
jp
test
adc
outsl
sahf
bound
and
dec
mov
in
or
sub
sub
jno
cmc
mov
add
rorb
sub
imul
mov
ds
ljmp
adc
and
sbb
xor
pop
jno
int3
loop
insl
inc
sbb
mov
and
cmp
adc
or
mov
lret
cmpl
std
adc
sub
jbe
inc
push
jno
clc
xlat
cwtl
test
sub
hlt
jp
xor
jo
sbb
in
xor
das
mov
fucompp
mov
add
jle
xchg
outsl
dec
fidivrs
mov
inc
add
popf
out
imull
jecxz
mov
jl
fdivr
mov
inc
mov
repnz
add
movl
push
shlb
loope
push
xchg
adc
lsl
aaa
mov
mov
in
popf
push
jns
dec
mov
xchg
mov
imull
xor
adc
lock
pcmpeqw
repz
or
push
add
jge
mov
inc
mov
mov
mov
fsts
sbb
sti
test
in
mov
sti
and
xor
mov
cmp
cwtl
jle
or
push
pusha
int3
cmpsl
mov
fsubp
in
imul
push
js
pop
je
and
lods
jo
mov
mov
mov
in
iret
and
mov
les
sbb
adc
leave
jbe
jecxz
mov
ret
mov
and
stos
fstl
and
inc
mov
mov
sbb
ja
ja
ljmp
xorb
jl
or
shlb
inc
mov
subl
push
loope
in
bound
cmp
in
cmpsl
je
mov
push
jg
jo
fidivrl
xchg
gs
xchg
ret
cmp
fdecstp
lcall
pop
lret
cmp
mov
shlb
fs
sahf
add
pop
popa
xchg
push
clc
lahf
add
loopne
cmp
rorl
jb
sub
hlt
aas
jmp
pusha
inc
dec
xchg
xchg
int
movsb
inc
push
repnz
push
cltd
sbb
sbb
mov
lods
pop
rcrb
mov
sar
push
loope
push
adc
fistpl
jg
mov
dec
incb
int
push
insl
mov
out
icebp
cmp
add
js
cmp
cmp
insb
ljmp
add
jno
rcr
jecxz
mov
dec
sbb
push
mov
adc
pop
mov
or
mov
ret
adc
jbe
xchg
loopne
xchg
sahf
push
mov
pop
pushf
sbb
jmp
lods
cmp
in
jecxz
mov
lods
pop
notb
shl
aad
add
add
fstp
ss
lcall
bound
mov
shrl
jno
dec
pop
cmp
in
push
push
rolb
jmp
out
call
push
pop
mov
adc
in
xchg
xchg
aam
or
and
rol
inc
in
insb
jns
shr
xor
loop
stc
cmp
into
push
jl
xor
adc
fidivrl
loope
lds
test
shlb
fdivrl
mov
scas
sub
shlb
pusha
bound
jle
and
cmp
lods
je
subb
add
mov
icebp
jnp
fdivr
lods
ss
mov
arpl
xchg
loopne
cmpb
jmp
mov
xorb
sbb
jecxz
addr16
loop
jecxz
std
repz
jmp
mov
add
mov
lcall
lock
shll
and
adc
shll
lret
cmpsl
mov
lods
dec
shlw
jo
jge
mov
subb
mov
add
cwtl
pop
pop
cmp
and
mov
pop
pop
je
add
roll
mov
fistpl
or
xchg
sbb
iret
sbb
fdivrs
nop
pop
sub
test
or
mov
jno
and
rorl
test
mov
and
xlat
mov
pop
imul
cmc
jae
ja
pop
cli
xor
fld
pop
dec
mov
sbb
adc
inc
mov
gs
test
rcrl
mov
addr16
dec
sub
mov
les
insl
divl
cmpsl
ss
dec
outsl
rclb
add
hlt
add
ret
les
pop
jge
add
sbbb
sbb
mov
leave
adc
cmpl
jg
loop
stc
sub
push
cmp
or
hlt
lea
jbe
enter
xchg
testl
sbb
xchg
pop
push
into
jo
pop
and
dec
jnp
inc
or
cld
jae
inc
xchg
imulb
fidivl
or
roll
mov
scas
arpl
arpl
pushf
add
pop
ds
ja
add
ret
cmpsl
lcall
and
in
test
movsb
xor
jns
and
cmp
lods
cli
outsb
movsb
xchg
mov
imul
xchg
scas
mov
mov
mov
cmp
lcall
mov
loopne
jmp
sub
add
or
mov
and
xchg
inc
sbb
sahf
out
xor
in
subb
xchg
test
dec
and
outsl
xor
jecxz
xor
hlt
inc
mov
rorl
mov
mov
push
or
jns
data16
mov
mov
add
pop
in
xchg
pop
cmp
leave
push
cmp
mov
lret
jmp
imul
jbe
xorl
and
lea
and
fimuls
add
cmp
daa
pop
add
xchg
ljmp
and
loopne
mov
sbb
xchg
and
xchg
push
push
popf
dec
imul
je
push
mov
std
rcll
dec
fsubrs
outsb
add
or
or
and
cs
bound
sbb
stos
pop
sbb
aaa
int
pop
mov
out
test
arpl
je
es
sbb
lret
cltd
add
push
or
xchg
dec
xchg
fdivrl
pop
xchg
hlt
insb
jbe
or
jmp
mov
jno
inc
and
pop
push
pop
aad
cmc
mov
or
sbb
popa
dec
ljmp
add
jnp
add
cwtl
repnz
mov
notb
mov
icebp
and
std
lret
jne
test
add
gs
xlat
sub
arpl
aas
push
push
in
aam
stc
sbb
add
adc
js
cmp
test
inc
shlb
stc
pop
cltd
pop
popf
jge
xchg
mov
push
sub
cmc
dec
inc
sbb
insb
imul
and
dec
sbb
fists
sbb
cmp
jns
rcrl
mov
and
push
fldcw
cltd
lea
mov
imulb
pop
lret
inc
xor
push
fisttpl
pop
and
iret
mov
jg
imul
hlt
je
sub
and
mov
sti
fs
mov
jmp
clc
push
out
cmp
mov
cmc
fldenv
mov
inc
mov
push
insb
test
mov
xchg
add
mov
cmp
mov
loop
mov
sti
and
pop
pushf
mov
call
repnz
jo
lcall
cmp
subl
dec
jg
or
mov
pop
rol
lods
cmp
xlat
lret
insl
ss
inc
pop
scas
loop
sbb
cmp
xchg
xchg
adc
mov
je
push
pop
fnstsw
testl
fstp
jl
sub
fidivl
clc
cmp
mov
add
insb
es
jp
or
lahf
jnp
jp
iret
je
std
ss
out
xor
or
fcomi
mov
gs
dec
adc
mov
xor
cmp
xor
cmc
mov
xor
pop
lds
jns
sti
jmp
jg
push
inc
lea
jbe
jl
inc
jns
pusha
cld
dec
in
or
in
mov
addr16
iret
lea
stos
mov
adcl
nop
dec
loope
aam
mov
sbbb
sub
sub
inc
scas
test
hlt
rcl
sahf
jno
icebp
aas
mov
jno
aam
mov
pushf
xchg
std
std
in
lods
mov
and
imul
mov
adc
push
sub
push
cmp
mov
lcall
or
jle
inc
mov
stos
scas
add
es
mov
fnstenv
cmp
fbstp
cmp
aad
fwait
ret
mov
gs
icebp
dec
enter
movsl
and
or
xor
scas
xchg
mov
shlb
cwtl
in
adc
xchg
orl
enter
aaa
xor
sub
aas
iret
pop
and
fdivrl
lods
and
dec
add
mov
jo
cmp
mov
xor
cmp
inc
pop
mov
mov
lahf
push
es
fwait
inc
xlat
daa
pop
gs
mov
cmp
sub
imulb
and
mov
cmp
sub
js
into
in
mov
dec
sbb
ret
cmp
jbe
rcrb
jl
shr
rcrb
mov
push
jecxz
repz
xor
sub
add
dec
scas
fstl
dec
push
aas
xor
mov
cmc
mov
or
sub
ljmp
xchg
xor
inc
stos
cli
pop
testb
or
loopne
and
insl
inc
mov
inc
jae
or
xchg
xor
push
call
scas
xor
jecxz
data16
cwtl
in
in
dec
mov
adc
pusha
test
xor
inc
filds
pop
and
sbb
popf
jl
subl
aas
ja
jae
js
jb
mov
jno
sarl
jns
outsb
or
mov
dec
or
sbb
mov
add
xchg
sti
cmp
mov
pop
mov
pop
mov
pop
sub
dec
mov
cmpsl
fisubrl
lret
jns
call
and
loope
mov
sbb
mov
fildll
mov
jne
xchg
jg
ret
push
xlat
nop
daa
sbb
jns
icebp
and
cmp
xor
sbb
out
cmp
into
rcr
mov
sub
lock
cmpsb
fwait
push
jbe
popa
mov
mov
cwtl
mov
xchg
scas
sub
inc
sbb
push
xor
aas
out
push
mov
ds
sahf
scas
or
popf
aad
sbb
xchg
mov
divb
aaa
repz
sbb
add
rorl
loop
dec
lea
addb
mov
fistpl
lods
stos
fildl
jae
in
adc
stos
mov
push
push
dec
inc
or
int3
scas
or
fistpll
push
mov
add
int3
sub
pop
jo
sbb
cmp
cmpsb
mov
call
imul
sub
icebp
js
fimuls
andl
test
in
pop
outsb
jle
lahf
xchg
cmp
adc
sub
push
shr
shl
ret
iret
sbb
adc
mov
jl
addb
xchg
fisubrl
dec
dec
mov
jg
rclb
retw
and
mov
data16
scas
dec
sbb
fld1
mov
ja
ljmp
sub
lcall
lods
sub
testl
adc
mov
sbb
xor
pop
lret
jge
or
mov
jnp
insb
xor
and
sub
nop
lret
push
outsl
sbb
inc
cmp
fimull
adcb
stc
push
les
sbb
push
in
sub
or
stc
pop
push
imul
pop
cmp
rolb
std
xor
pop
adcl
aas
mov
jbe
inc
mov
std
inc
insl
pop
fs
int3
mov
scas
lea
divb
mov
push
push
mov
push
inc
dec
mov
xlat
je
popa
dec
push
imul
pop
add
lock
loope
cltd
pop
out
mov
push
jo
mov
cmp
sub
xchg
sbb
repz
cmp
ja
xchg
sub
gs
cmp
mov
mov
cli
inc
leave
fists
dec
insb
mov
aaa
shll
push
push
fldt
frstor
ljmp
mov
jne
mov
cs
in
fldcw
sarl
addr16
sbb
pop
fldenv
das
push
add
adc
jge
xchg
in
punpckhbw
aam
pop
hlt
outsb
nop
mov
and
and
popf
jmp
fildl
mov
sbb
jecxz
sub
iret
or
push
ja
jo
mov
clc
mov
mov
push
jb
jae
adc
cmp
pop
cmp
fcomi
mov
loopne
fsubs
and
into
shll
pop
loope
repnz
adc
xchg
mov
inc
push
pop
dec
call
inc
or
dec
push
test
sub
adc
adc
cmpb
cmpsl
sbb
rolb
je
mov
lock
push
stos
test
je
push
mov
sahf
mov
and
mov
mov
xchg
pop
out
stc
pop
or
rorb
pop
lock
push
iret
addb
or
push
mov
inc
es
or
jmp
sbb
test
scas
repnz
das
mov
nop
dec
js
cmpb
and
sbbl
pop
movsl
lods
icebp
stc
mov
sahf
loopne
cmp
mov
lds
pop
xchg
mov
stos
fcomps
push
ret
subb
pop
enter
xchg
int3
or
push
scas
loopne
sbb
fmuls
or
in
pusha
xchg
dec
add
repz
push
mov
and
and
sbb
loopne
sbb
pop
and
or
test
inc
or
sarb
repnz
cmp
xor
dec
xchg
add
aad
inc
jl
adc
or
add
movsb
repz
addr16
and
loopne
iret
scas
into
lcall
xchg
dec
inc
jbe
in
lret
sbb
movsb
loop
iret
inc
sbb
pop
pop
fsubs
jmp
sarb
pop
mov
in
pop
in
xchg
dec
fdivp
lock
repnz
adc
sbb
add
mov
mov
adc
icebp
sub
fimuls
scas
mov
fsubp
xchg
rorb
mov
push
cld
aad
mov
insl
enter
push
pusha
icebp
pop
sbb
or
or
addr16
and
or
sub
push
aas
dec
mov
fwait
inc
cmp
aam
cmp
pop
jae
ds
rclb
cmc
jge
ficoms
push
xor
fists
iret
mov
ficoml
gs
mov
jae
aaa
lds
push
cmc
inc
sub
xchg
jmp
xchg
mov
and
nop
ret
pop
enter
sti
sub
aad
lds
ja
dec
mov
mov
pushf
daa
repz
xchg
mov
hlt
push
stos
leave
sub
xor
pop
or
fwait
mov
sbb
shl
xchg
inc
andl
in
dec
adc
les
lea
xchg
sub
sbb
push
jge
imul
outsb
movsl
inc
loopne
xlat
add
jo
push
or
out
jb
insb
dec
push
xor
and
mov
inc
mov
mov
sahf
sbb
subl
lret
mov
sti
cmpsl
pop
call
lret
mov
inc
jge
xorb
daa
inc
cmc
pop
sbb
cmpsb
pop
or
hlt
fmuls
shll
pop
push
ljmp
cmpsl
mov
loopne
xor
in
xchg
stc
push
xor
cmp
adc
xchg
xor
movsb
or
jb
mov
xchg
inc
cmc
push
push
daa
sahf
stos
and
or
sbb
cli
xchg
xchg
es
cmc
pushf
shl
pushf
xlat
pop
das
imul
sub
dec
mov
add
mov
inc
pushf
je
pop
js
add
adc
fistpll
add
ja
mov
aas
jb
jbe
aad
xor
mov
stos
dec
dec
adc
mov
test
add
pop
rorb
mov
fwait
pusha
xor
sbb
sti
int3
nop
mov
repz
sbb
clc
daa
xor
dec
adc
push
mulb
test
pop
out
push
pushw
insl
sar
mov
sbb
and
mov
adc
divb
clc
aam
mov
jne
sti
call
pop
mov
inc
aas
loopne,pn
insl
jae
adc
clc
mov
sbb
pop
cmp
repnz
arpl
pop
das
data16
inc
push
mov
lcall
xor
popf
icebp
xorb
sbb
adc
insb
mov
xchg
int3
inc
pusha
and
mov
mov
test
arpl
int3
mov
mov
pushfw
inc
out
adc
pop
or
popf
sahf
movsb
fidivrl
in
lock
movsb
mov
cmc
lret
push
mov
add
pop
jl
sahf
fsts
out
adcl
lea
ss
push
call
fbstp
xchg
dec
push
loopne
cmpsl
sbb
dec
mov
mov
cmp
sub
negl
mov
cmp
scas
inc
xor
and
in
fcoml
mov
imulb
dec
xor
dec
adc
arpl
add
and
or
push
sub
mov
lcall
mov
bound
mov
loop
inc
out
add
bound
je
mov
and
jo
aaa
or
cwtl
jbe
push
in
pusha
pop
push
sbb
mov
cmpsb
in
test
mov
test
or
movsb
add
insl
out
push
mov
sbb
xor
adc
and
adc
or
push
and
test
add
push
mov
cmp
and
lret
sbb
add
mov
dec
xor
fstps
push
cltd
jecxz
in
andl
data16
push
jge
xor
cmp
mov
and
pushf
push
push
cltd
outsl
icebp
inc
lea
ror
movsl
inc
jae
mov
call
imul
jbe
xor
or
cmp
xlat
mov
dec
sbb
mov
enter
fsts
jg
out
in
adc
mov
sub
bound
dec
pop
stc
jmp
hlt
fsubrs
xchg
cmpsl
mov
mov
jg
in
cld
sub
inc
adc
add
insb
faddp
shlb
out
in
imulb
cmpsl
adc
filds
sub
test
in
sub
imul
sahf
repz
mov
add
daa
jbe
lret
mov
inc
pop
xchg
mov
repz
std
mov
mov
std
or
push
das
aas
out
out
inc
mov
andb
mov
lds
sbb
fadd
fldl
std
and
roll
push
jl
mov
sarl
out
sbb
push
inc
xchg
jmp
mov
push
aam
cli
push
int
scas
xor
movsl
bnd
sarl
sti
mul
and
sbb
push
xchg
mov
jmp
xor
insb
jp
jno
aad
ljmp
insl
jp
imul
mov
std
push
loopne
mov
mov
xor
addr16
out
sub
push
inc
cmp
push
mov
mov
and
jns
jmp
and
jmp
xor
push
adc
iret
xorb
stos
insl
hlt
inc
fiadds
xchg
loop
lahf
lret
in
fildl
rol
add
mov
insb
inc
iret
stos
jns
movsb
push
push
ljmp
or
push
scas
sti
imul
mov
aaa
mov
mov
jl
mov
addb
push
int
adcb
data16
movsl
das
inc
aad
test
or
repnz
ds
or
adc
stos
sub
sbb
arpl
sbbl
inc
jp
sbb
lea
daa
add
mov
in
jg
je
movsb
ja
ss
inc
imul
mov
push
ret
fnstenv
sub
shrl
int3
sbbb
cmp
lret
lock
pop
testb
mov
gs
jecxz
or
add
adc
mov
lahf
es
repz
or
push
pop
out
cli
xchg
jp,pn
sbb
inc
aam
pop
sub
es
pushf
mov
stos
int3
push
xor
out
int3
ljmp
xor
sbb
and
jl
add
stc
movsl
test
aad
fcoms
out
nop
sbb
imull
repz
xchg
sbb
dec
outsb
cmc
add
cmp
sub
and
stc
xor
arpl
ss
xchg
mov
adcb
sub
mov
cltd
mov
in
xchg
sbb
add
fbld
int
jne
add
pop
pop
call
andb
in
fistps
es
cmp
mov
dec
jecxz
in
and
dec
or
mov
pop
xchg
sahf
mov
mov
insb
inc
in
pop
xchg
sub
dec
inc
push
test
ja
add
cld
mov
mov
movsb
add
filds
call
pop
cmp
sbb
cltd
pusha
insl
or
xor
xchg
call
repz
fidivl
mov
pop
dec
push
aam
push
jae
bound
std
scas
xor
cmp
mov
mov
fldlg2
sahf
or
and
test
shl
push
cmp
sub
cmp
scas
inc
xor
lods
or
loopne
das
sbb
out
cwtl
pop
adc
int3
or
cmp
mov
lahf
inc
dec
or
js
fmuls
push
mov
or
and
or
dec
les
dec
inc
lret
sbb
push
cld
adc
test
sub
pop
imul
or
ja
ss
ret
mov
data16
dec
lret
movsl
cmpsl
mov
push
cltd
or
shlb
mov
add
jae
scas
jb
inc
push
xchg
add
mov
jnp
adc
xor
ret
sbb
jecxz
es
pop
je
xor
fisubs
fisttpl
in
mov
cmp
sbb
push
or
push
cmp
sbb
cltd
adcl
imul
loop
scas
mov
xor
insl
and
icebp
add
ja
hlt
lret
int3
loope
cmp
js
ja
aad
insl
leave
movsb
xchg
push
or
nop
dec
rorl
or
call
jle
ret
push
pop
movsb
mov
hlt
jae
xchg
mov
inc
popa
sub
movsb
jge
scas
ljmp
loopne
xor
icebp
int
lret
icebp
pop
dec
loope
sbb
popf
push
mov
add
ss
cwtl
rcl
pop
cmp
add
lret
sbb
mov
adc
jns
mov
mov
pop
test
dec
aad
nop
mov
jnp
inc
push
cmp
stos
mov
in
rcll
divl
xchg
xor
fldcw
mov
jle
mov
ljmp
push
jne
jl
lcall
lock
std
sahf
xchg
and
mov
stos
jnp
mov
data16
enter
push
mov
loope
lods
and
call
xchg
adc
aam
xlat
setge
add
shll
xchg
push
add
mov
scas
sbb
adc
xchg
push
and
push
sub
xchg
mov
ffreep
mov
jmp
lea
add
push
jl
sub
sbb
mov
gs
in
lcall
xchg
fldcw
clc
mov
jno
or
dec
out
out
xor
lret
xlat
mov
test
test
mov
ficoml
pop
push
mov
mov
sarb
pand
inc
cs
ds
ljmp
int
mull
sbb
rorl
addb
jle
xor
adc
repnz
stos
and
outsl
push
test
dec
lods
shll
push
push
pop
sbb
or
jle
lret
jo
dec
gs
lret
pushf
cmp
popf
jecxz
jae
adc
shll
mov
push
xchg
cmc
clc
out
insl
pop
fsubp
cld
pushf
mov
xchg
or
aad
pop
inc
jge
sub
xchg
mov
mov
loop
jg
rcr
sahf
jb
add
lret
dec
mov
fimull
dec
xchg
mov
mov
testb
jb
repnz
hlt
add
in
pop
fldenv
add
cwtl
and
or
xchg
je
popa
aaa
mov
jbe
and
xchg
xchg
loop
fistl
add
jno
adc
add
or
or
pop
int3
adc
xorb
pop
sub
rclb
inc
mov
mov
aad
pop
fidivrs
insl
mov
or
lods
inc
push
push
sub
jge
sub
lock
or
mov
or
inc
sbbb
mov
cltd
pop
sbb
insb
mov
lods
mov
cmp
into
jp
push
add
push
gs
jno
in
stc
js
mov
lcall
out
out
add
mov
in
or
push
xchg
fiaddl
shrl
push
xor
fisttps
xor
cmp
cltd
mov
xchg
sbb
stos
dec
cwtl
xchg
jg
or
sub
pop
or
movsl
push
mov
cmp
jg
test
out
repz
xor
jnp
jno
ljmp
negb
push
fistl
repz
mov
pop
insb
cmp
lock
mov
imul
out
jne
xchg
jmp
je
mov
cmp
mov
test
imul
aad
daa
or
or
sbb
arpl
hlt
lock
fwait
sub
add
sahf
and
or
lret
mov
popf
inc
jge
sub
add
fs
das
test
lahf
add
outsb
adc
stos
inc
jle
in
inc
cltd
push
cwtl
fistl
pop
mov
bound
xchg
mov
int
mov
push
or
cmpl
pushf
add
test
mov
and
les
pop
or
dec
add
test
movsb
xlat
fcoms
cmpsl
and
push
std
ja
lret
aas
push
mov
ds
shrl
push
cmp
cwtl
scas
mov
jp
pop
inc
or
jb
lea
cwtl
les
testb
ss
int3
or
inc
add
iret
fildll
jae
popa
int
aas
or
mov
mov
leave
call
test
cltd
xor
adc
movsl
jb
push
push
pop
jg
int3
mov
jo
adc
sbb
ret
cld
xchg
push
rcll
sbb
adc
ret
cltd
arpl
repnz
jecxz
in
xchg
mov
dec
mov
loope
sbb
add
test
cmp
mov
push
hlt
hlt
mov
es
bnd
addr16
and
sbb
inc
mov
push
scas
lock
in
push
mov
movsl
sub
add
inc
pop
nop
and
inc
inc
leave
popf
aad
and
cmp
out
mov
loopne
mov
sbb
add
lds
pop
and
fwait
cld
test
lret
popa
in
cmp
inc
pop
ret
lcall
adc
stc
pop
jns
push
fcoml
push
stos
inc
mov
or
pushfw
pop
inc
jnp
pop
cmc
and
es
sahf
inc
cwtl
addb
push
mov
and
sarb
mov
js
in
xchg
dec
das
das
fs
int3
in
ret
js
mov
push
jne
ret
push
sbb
push
lahf
sbb
divb
cmp
je
mov
push
aas
push
push
push
pusha
jg
insl
sar
pop
insl
sbb
test
mov
sub
xor
aaa
xor
insl
popf
push
push
add
or
stos
movsl
fidivs
les
fisubl
jb
cltd
mov
or
mov
jmp
pop
and
enter
mov
cmp
loope
fiadds
add
mov
movb
and
dec
sti
add
jae
adc
jne
les
dec
je
pop
mov
cmpsl
jbe
jp
xchg
jne
sbb
fsubr
xchg
mov
xchg
sbb
pop
adc
jp
mov
stos
jbe
add
daa
sub
sti
in
xor
mov
or
push
and
stos
je
pop
loopne
xor
lods
cld
test
inc
dec
bound
mov
scas
lods
or
arpl
cltd
jp
pop
dec
xchg
push
xchg
cmp
movsl
and
pop
movb
dec
cmc
imul
inc
movsb
cmp
cmc
and
xchg
mov
mov
push
lret
or
pop
jle
incl
insb
mov
xchg
popa
sub
add
inc
inc
sbb
push
inc
clc
xor
daa
cmc
sbb
loop
daa
cli
cmp
jg
lret
push
sub
inc
cmpsl
mov
mov
clc
sub
mov
lea
mov
xlat
dec
push
cs
inc
inc
fbld
inc
or
test
fwait
push
imul
push
cmpsb
sarb
xchg
xor
rcr
pop
and
adc
arpl
inc
lock
orl
xor
or
rcrb
adc
ret
and
pop
sub
hlt
repnz
dec
xchg
mov
sub
xlat
pop
sarb
fisttpl
insb
jb
loope
xchg
inc
pop
mov
stc
inc
mov
xchg
mov
dec
je
cmpsb
push
std
leave
mov
jnp
es
and
pusha
push
push
ret
scas
add
add
test
dec
shll
scas
push
cmp
jns
insl
mov
jno
ja
and
xor
adc
lods
mov
pop
and
sub
pop
push
sbb
or
out
std
sub
aad
mov
das
lods
cs
dec
out
in
pop
mov
daa
and
cmp
rcrl
adc
xchg
add
rcll
push
divl
js
adc
rorl
sbb
mov
pusha
xorl
lea
pop
xchg
mov
cmpsb
add
pop
mov
arpl
fs
hlt
mov
sbbb
lahf
leave
lret
inc
icebp
frstor
mov
mov
loop
and
shll
cwtl
mov
fildll
lds
jns
sbb
outsb
icebp
add
icebp
mov
imul
or
fs
mov
push
push
cmpsl
bound
push
repnz
fcmovnu
ficoms
and
das
clc
mov
test
dec
mov
inc
pop
out
mov
and
in
jns
cltd
pop
mov
mov
out
cli
mov
pop
nop
loope
icebp
sbb
adc
adc
dec
cmpsb
cwtl
je
repnz
lock
xchg
fisttpl
cmp
movl
dec
das
std
cwtl
push
out
scas
pushf
icebp
xchg
sub
mov
stc
in
cmp
les
add
xchg
jns
fsubl
jecxz
imul
dec
sub
sub
movsb
sub
sub
xor
inc
lods
sbb
icebp
xor
inc
nop
test
jl
dec
cmc
mov
out
adc
out
jp
in
out
push
add
pop
out
adc
mov
fs
dec
pop
dec
insl
adc
cmc
push
addr16
mov
pop
movsb
and
outsl
add
ljmp
lahf
mov
sbb
and
pop
sbb
scas
mov
cwtl
pop
std
int3
or
shrb
je
loopne
fwait
pop
pop
xchg
pop
sbb
mov
inc
ret
repnz
xchg
dec
jmp
mov
adcl
xorl
cmp
or
push
push
cld
scas
mov
pop
inc
bound
setae
cmpsb
fwait
mov
test
sti
sbb
in
adc
jecxz
fwait
cli
cwtl
sbb
xchg
or
adc
pop
icebp
nop
mov
push
pop
out
stos
sarb
push
shrl
mov
add
adc
pop
aam
test
pop
and
in
xchg
aaa
dec
daa
repz
ds
sbb
cmp
sub
stc
pop
push
jge
test
sbb
sub
popf
xor
fsts
sbb
cmp
cltd
hlt
out
adc
hlt
mov
cmp
jo
adc
push
aad
in
add
leave
push
push
loopne
das
push
cmp
pusha
sbb
mov
mov
pop
mov
outsb
pop
je
or
imul
adc
nop
or
and
fnstsw
or
or
pop
sub
cmpsb
popf
mov
test
sti
stc
add
mov
cmp
jae
or
ret
jl
jge
cmp
lds
aad
xchg
cwtl
icebp
lahf
or
push
mov
mov
xchg
inc
inc
push
cmp
jae
xchg
pop
lahf
out
pcmpeqw
xor
mov
andl
imul
mov
bound
lods
orl
cmc
sahf
mov
lret
cmp
out
inc
insl
int
jbe
inc
cwtl
clc
adc
sbb
add
xor
xchg
sub
data16
data16
aas
pushf
ret
das
jmp
or
imul
mov
xlat
divl
dec
data16
jb
cmp
sub
mov
idiv
fcompl
push
push
test
xchg
loope
mov
adc
jne
lods
ficoml
or
sub
jg
call
xchg
mov
dec
fsub
dec
hlt
mov
xor
loop
xlat
push
jne
pop
test
xchg
hlt
shl
cltd
adc
popf
adc
mov
bnd
test
andb
xchg
ret
and
enter
xor
mov
or
and
push
enter
push
mov
adc
mov
xchg
pop
stos
cltd
gs
movsb
mov
loopne
jg
repnz
mov
sbb
test
je
rol
adc
scas
jl
push
lea
ja
clc
sbb
outsb
std
xor
imul
xchg
push
jp
mov
cwtl
imul
sarb
cmp
sub
jbe
je
push
cmc
scas
imul
mov
das
sbb
cmp
jmp
xor
rolb
negb
cmpsb
or
xor
iret
cmp
aas
xchg
arpl
add
push
cmp
lock
cmp
int3
jecxz
outsl
shrb
sub
xchg
rorl
ds
push
cmp
cli
add
sbb
fs
pop
stos
mov
loope
cmp
out
lds
pop
sub
call
lahf
pop
sub
js
daa
pop
cltd
jno
data16
adc
jb
clc
inc
out
test
je
dec
pop
mov
push
jae
into
jo
xor
pop
and
insb
mov
jno
mov
jbe
bound
aas
sbb
xor
mov
inc
xchg
aam
xor
mov
rcrl
aaa
adc
lahf
stc
ljmp
sub
flds
cld
fs
into
ret
push
or
imul
in
push
lahf
pop
hlt
sbb
and
dec
sub
ret
add
xorw
cmpsl
aam
pop
and
out
rclb
mov
movsl
jb
lret
or
cmpsb
loopne
xor
mov
cmp
scas
pop
test
inc
sar
ds
cmp
pushf
lret
enter
sbb
testb
mov
lahf
and
jae
jb
mov
adc
lret
dec
stos
mov
dec
sbb
imul
push
outsl
and
dec
sbb
test
pop
mov
lahf
and
add
jb
out
stos
push
into
loop
jnp
pop
lods
sub
shrb
push
es
pop
and
or
rol
aas
jne
sbb
dec
sub
push
mov
sahf
sahf
test
cld
cmp
push
test
dec
js
cmp
jbe
sub
aaa
pop
das
out
into
push
jb
data16
insl
jp
movsl
xchg
mov
pop
mov
fwait
out
add
test
ret
stc
rorl
sbb
or
sbb
lahf
jmp
shlb
mov
pushf
pop
adc
dec
imul
mov
sub
pop
mov
pop
adc
hlt
ret
movsb
fsub
pushf
jge
pusha
dec
xchg
hlt
fcom
in
in
ss
filds
pop
arpl
push
and
test
add
inc
pop
lds
call
push
jl
shll
jp
xchg
inc
imul
adc
in
cmp
xor
lea
mov
pop
add
pop
pop
push
mov
and
cmc
sbb
test
and
add
inc
jl
inc
out
cmp
dec
outsb
jecxz
nop
mov
out
inc
lods
mov
dec
push
inc
lahf
icebp
mov
loop
aaa
fbstp
ret
xor
jb
pop
push
xlat
insl
aas
repz
inc
sub
push
sbb
adc
test
inc
sub
pusha
insb
xor
sub
sub
lds
mov
shll
cmp
adc
push
inc
sbb
jne
ret
pop
popf
stos
jp
sbbb
jle
insl
sub
or
push
scas
mov
or
mov
or
loopne
leave
inc
cmp
gs
daa
pop
dec
xchg
mov
xchg
add
cli
inc
adc
adc
sbb
jge
push
sbb
push
popfw
pop
repnz
mov
bound
cli
sti
lahf
aas
xchg
xor
xchg
int3
cmp
mov
adc
mov
adc
sti
mov
mov
jle
jns
or
stos
shrl
xor
push
cld
adc
and
xor
dec
outsl
dec
sub
push
fwait
outsb
out
sbb
jecxz
repz
cs
ljmp
mov
inc
dec
addr16
outsb
pusha
xchg
xor
xchg
mov
or
nop
fmul
arpl
dec
stc
mov
cmpb
stos
sub
popf
lods
xchg
inc
and
xor
stc
lods
jmp
negb
jmp
inc
sbb
sbb
mul
cld
xchg
push
cmp
mov
xor
arpl
out
push
push
adc
scas
stos
cmp
fld
add
push
xchg
adc
or
ja
xchg
fldt
cltd
mov
mov
pop
in
movsb
ret
jp
mov
push
fs
pusha
or
cmp
adc
les
ret
push
outsl
sub
dec
inc
inc
lret
testb
lock
push
cmp
jl
dec
jbe
mov
movsl
xchg
or
dec
addr16
inc
cmpsw
filds
xor
or
fs
adc
pusha
div
push
dec
add
inc
mov
daa
push
inc
lods
mov
jge
int3
hlt
jmp
adcb
fwait
insl
xchg
jb
pop
ss
sub
mov
inc
scas
fcoms
jmp
scas
mov
mov
inc
xchg
outsb
dec
mov
mov
xchg
test
push
addr16
inc
pop
sahf
nopl
sub
movsb
loopne
int
outsb
lock
mov
jne
call
jmp
add
je
into
test
jl
int3
push
pop
imul
daa
xchg
int
sbb
fstl
jmp
in
push
sbbl
xchg
and
test
jge
jp
repnz
movsb
jnp
movsl
push
movsl
pop
cltd
int3
lcall
outsb
push
mulb
stos
add
push
addr16
mov
or
inc
adc
dec
fbstp
int
or
mov
bound
pop
movsl
jne
jge
bound
movsb
ja
sbb
pop
repnz
or
xor
sbb
mov
adc
insl
dec
aaa
daa
mov
push
push
mov
sbb
fistl
jle
ret
fsub
loope
cmp
inc
add
jecxz
or
rcrb
dec
xchg
cli
inc
lods
stos
ljmp
int3
lret
xor
inc
fisubrs
stc
cmp
data16
nop
das
gs
pop
sub
cmpsb
ss
scas
cld
push
pop
xor
popa
dec
push
sbb
pop
enter
mov
cld
cli
shrl
pop
clc
add
lret
and
mov
jge
stos
stos
mov
aad
pop
jg
xchg
jecxz
shll
imul
repnz
cld
iret
mov
xlat
dec
dec
shr
bound
push
and
inc
lock
or
jge
xor
fisubl
loop
pop
shl
dec
push
inc
std
clc
mov
out
ljmp
adc
mov
loope
cmc
lea
sbb
repz
sahf
out
pusha
cmp
inc
loopne
cs
out
insl
cli
outsb
push
gs
loop
stos
cmp
scas
adc
lea
in
cmp
sub
jb
push
xor
inc
mov
xlat
add
int
pop
cmpsl
test
cmp
mov
push
ss
je
ret
jb
ljmp
imul
subb
mov
movsl
mov
add
sbb
cmpb
sbb
cwtl
imul
cli
imulb
test
hlt
iret
xor
fldl
pop
scas
xchg
inc
xchg
cmp
push
sbb
jo
sub
and
mov
cmp
mov
sub
into
rcl
or
cs
stc
mov
ret
mov
dec
stos
sbb
add
xchg
stos
cmp
pop
shlb
sub
dec
adc
mov
out
push
mov
mov
out
cmp
shl
jbe
lods
mov
push
fwait
cld
fs
in
pushf
push
outsb
mov
sub
cld
mov
xlat
ds
dec
mov
cmpsb
fcomi
and
and
dec
mov
or
jb
mov
out
ss
jo
dec
in
sbb
adc
arpl
inc
pop
xlat
movsl
in
pop
mov
xor
pop
cmpsb
inc
mov
push
gs
neg
mov
ret
pushf
fidivs
xchg
dec
je
pusha
push
cmc
push
or
mov
notb
movl
icebp
lock
push
pop
mov
lea
in
sub
dec
pusha
jbe
jne
insl
push
ret
xchg
scas
mov
mov
add
cmpb
dec
imul
stos
lea
jnp
aam
sub
aaa
andl
add
mov
icebp
outsb
xchg
dec
lret
xchg
push
ljmp
decl
shrb
mov
dec
sbb
pop
mov
pop
fildll
into
test
pop
xor
mov
and
fists
lahf
jae
cmp
cld
dec
fidivrl
adc
add
jbe
xor
sub
arpl
icebp
jno
pop
xchg
jecxz
mulb
loope
and
outsl
lahf
leave
adc
pushl
fdivrp
orl
jle
mov
mov
sub
pop
shrb
and
enter
xchg
or
cmpsl
leave
mov
popa
cmpsl
or
sbb
leave
mov
sbb
mov
adc
mov
in
xchg
xor
xchg
dec
xor
fisubrs
into
in
rolb
xchg
push
roll
pop
mov
add
pop
sar
pushf
lret
pop
add
adc
insb
bound
adc
xchg
fldcw
push
pop
sbb
pushf
add
clc
jl
jns
pop
dec
fsubrs
ds
fcom
dec
mov
test
push
xchg
pop
mov
clc
jae
mov
pushf
fs
xlat
in
aam
add
xchg
mov
nop
jb
orb
fs
push
mov
mov
cmpsb
das
or
pusha
add
ja
inc
mov
leave
jno
or
jle
mov
jecxz
es
xor
sahf
push
repnz
andl
fbstp
adc
push
mov
mov
aaa
aam
sub
loope
jno
dec
dec
ret
mov
cld
popf
push
adc
lahf
push
sub
mov
add
aad
mov
add
je
dec
dec
sub
cltd
sbb
popf
cld
add
dec
ret
xchg
out
cmp
std
ljmp
sub
jno
mov
insb
icebp
push
xchg
in
movsb
mov
ret
ljmp
jno
ljmp
mov
dec
lahf
and
divl
inc
jge
jae
add
jae
fwait
test
aaa
je
aas
lods
pusha
lahf
outsl
fnstcw
push
ret
mov
popf
outsl
loopne
hlt
or
outsb
mov
sub
stos
insb
imul
out
xchg
dec
pop
out
mov
mov
mov
test
mov
jmp
and
loope
xor
inc
mov
lds
ficoml
cltd
push
std
jae
push
in
icebp
or
cmpsb
xchg
imulb
push
stos
add
mov
in
mov
mov
sub
loope
jmp
imul
call
xor
jl
jge
nop
jns
xchg
lret
fbld
lret
mov
mov
lock
call
mov
js
push
rol
jbe
mov
cmp
mov
jecxz
pop
xchg
out
xor
mov
nop
adc
pop
cwtl
std
das
push
mov
xor
subb
add
sub
xchg
push
xor
idiv
jecxz
icebp
ret
inc
lods
repnz
push
sarb
sti
jmp
movsl
push
jo
inc
stos
jb
xor
sub
xor
pop
add
das
sub
and
or
mov
and
insl
repz
fists
call
jcxz
jp
lock
mov
fbstp
push
xchg
cmp
shll
lret
adc
fisttps
xchg
into
outsl
loopne
add
jmp
xchg
dec
sahf
loopne
mov
pop
scas
jbe
xor
out
push
pusha
dec
cmp
scas
gs
mov
popf
mov
mov
sbb
sub
sub
jnp
push
ficompl
push
dec
rcll
or
gs
sahf
xor
lds
or
mov
in
fsubrl
leave
add
insb
fistl
mov
fwait
rorl
ljmp
rorl
iret
cmpsl
test
outsb
lcall
sub
or
dec
xchg
iret
jb
jmp
scas
das
and
std
jg
pop
mov
mov
dec
lock
jae
in
pop
dec
ficomps
test
push
sub
fwait
lcall
shl
int
enter
xchg
add
sbb
add
popf
sti
mov
mov
mov
jle
testl
mov
in
add
loope
and
dec
adc
pop
js
add
insb
imul
lcall
insb
repnz
imul
cmp
adc
adc
mov
rclb
jno
cmp
cmpsb
inc
gs
push
push
jns
lea
enter
sub
mov
xorb
js
jno
sbb
adc
leave
scas
outsl
mov
addl
jnp
gs
sub
leave
inc
mov
out
gs
sub
test
dec
jle
clc
push
fptan
stos
sahf
mov
scas
in
push
push
mov
ss
mov
ret
ja
dec
push
mov
ds
and
aad
xchg
arpl
pop
cwtl
or
sti
xchg
je
mov
iret
pop
mov
mov
in
dec
mov
inc
scas
inc
in
jno
push
sarb
push
enter
js
and
ret
xchg
jno
jne
ds
insb
ja
mov
lcall
je
sub
sti
je
andl
into
loope
sti
jbe
push
jg
lahf
insb
outsb
sub
or
data16
adc
jb
ret
hlt
mov
mov
ret
xor
sbb
ljmp
leave
lcall
in
in
push
pusha
jo
inc
lds
mov
mov
cmp
insb
bound
xchg
dec
adc
ret
xchg
nop
or
jno
hlt
or
jnp
pop
pop
sti
fistl
mov
adc
or
xor
add
dec
jge
jecxz
pop
insl
or
lock
mov
adc
sbb
jae
cwtl
sub
mov
shlb
xlat
xlat
push
dec
xor
jae
mov
popa
cli
inc
lea
mov
pop
and
adc
std
stos
or
cmp
cmpsb
cmpsb
dec
bound
imul
inc
in
add
inc
xor
inc
fisubrl
aam
shlb
incl
jp
sub
and
pop
push
jb
adc
xchg
aas
fwait
mov
push
sarl
pop
lods
aam
or
push
or
scas
mov
lea
dec
xchg
jb
xor
je
and
xchg
aam
pop
sbb
mov
cmpsl
and
dec
sbb
adc
popf
test
stc
not
mov
push
inc
inc
pop
lds
in
inc
sbb
mov
leave
add
insl
loopne
mov
movsl
push
in
mov
jnp
das
jbe
cmp
dec
jmp
mov
aaa
les
les
mov
test
in
adc
mov
movsb
xchg
insl
xchg
dec
clc
es
xor
lds
or
sbb
mov
push
fidivrs
clc
ret
outsb
mov
ja
fsubl
filds
dec
stos
mov
mov
std
mov
ret
in
fcoml
aas
sbb
lcall
pop
and
dec
lcall
push
cmp
rol
mov
pop
jo
in
dec
cmp
adc
lock
cmp
jno
leave
into
xor
lret
cwtl
in
add
xchg
test
pushf
xchg
xor
packsswb
scas
sbb
int
adc
outsb
pop
dec
jnp
orb
push
mov
and
sbb
mov
lcall
int
loop
sub
or
jg
aaa
mov
or
shrl
out
movsl
fldcw
jge
cmp
cli
cmp
cmc
sahf
xor
push
sbb
sbb
push
dec
test
lods
movsb
dec
in
xchg
pop
mov
imul
inc
jbe
popf
cmp
cwtl
aad
push
mov
push
jno
rorl
dec
push
dec
mov
and
hlt
ret
adc
push
fcomip
xchg
mov
lock
cmp
xlat
je
in
sbb
lods
mov
pop
ret
adc
subl
dec
mov
pop
les
mov
adc
push
or
dec
ljmp
dec
ljmp
inc
loopne
nop
or
ret
mov
cmpsl
mov
aaa
pop
adc
clc
divb
xchg
bound
inc
xor
jne
add
movsb
pop
scas
cltd
push
pop
push
mov
mov
add
shlb
or
push
mov
cmpsl
sbb
clc
jl
shl
bound
cmp
push
pop
ret
push
push
pop
popf
cmp
mov
cmp
add
jp
push
jae
lret
pop
pop
jbe
out
push
pop
mov
push
cli
sub
mov
jmp
lea
sbb
push
sti
adc
jnp
jg
cmp
clc
and
shlb
push
shrl
scas
xchg
out
aad
push
add
outsl
adc
inc
daa
mov
lock
popl
scas
pop
in
adcl
jmp
lock
inc
cmp
inc
cld
std
call
fdivrs
cmp
add
les
adc
xchg
test
daa
cltd
stos
out
cmp
xor
sbb
mov
mov
scas
dec
incb
lds
int3
arpl
mov
push
cmp
daa
rorb
pushf
dec
push
mov
das
lea
iret
arpl
pop
or
sub
repnz
out
lahf
decb
aam
loope
or
test
fmuls
cltd
in
pop
icebp
out
xchg
mov
data16
and
sbb
dec
pop
ss
inc
jmp
sub
dec
dec
mov
sub
inc
xor
pop
inc
or
cwtl
and
add
pop
mov
aad
sub
nop
pushf
jnp
inc
xchg
adc
jge
sbb
in
mov
mov
int3
mov
pop
sbb
push
or
lock
cwtl
mov
jno
or
ficoml
int
leave
gs
xchg
sbb
pop
sbb
mov
pop
test
mov
mov
xor
cmpsb
xchg
jnp
add
outsb
mov
popf
iret
out
cmc
jl
ret
lds
rorb
outsl
inc
and
mov
mov
cmp
cmpsb
dec
std
mov
std
cmpsl
inc
fisttpll
fsubrl
push
mov
xorb
jbe
hlt
enter
dec
clc
cmp
icebp
cmp
bound
push
xor
mov
cli
jecxz
pop
data16
add
subb
pop
cmp
mov
inc
jp
inc
icebp
mov
sub
in
imul
in
mov
imul
push
scas
ss
cmc
lock
add
lret
add
sarl
xchg
test
mov
les
adc
or
arpl
scas
cmp
aad
sub
stc
loop
xchg
mov
lds
dec
sahf
shll
lock
std
pushf
jmp
mov
mov
jo
pop
xor
and
xorb
lea
arpl
sarb
aad
int
mov
faddl
push
jp
rorb
mov
jns
bound
push
inc
lock
sbb
xor
xor
mov
and
mov
or
in
mov
pop
daa
popf
xor
repnz
sbb
das
xchg
cltd
push
cmpl
ds
sbb
dec
add
scas
push
mov
adc
lods
test
inc
movsb
dec
test
sti
iret
loopne
shll
out
push
movsb
xchg
cld
lock
in
sub
or
leave
pop
dec
imul
xchg
jbe
mov
shrb
mov
jbe
pop
push
daa
xchg
dec
call
je
push
xchg
aas
sub
sub
cmp
leave
leave
mov
mov
push
cld
mov
mov
mov
lret
cli
mov
in
dec
iret
ja
lods
or
les
cld
xchg
addr16
mov
cmp
test
xchg
dec
shll
and
cmp
testl
stos
adc
push
clc
mov
dec
sbb
xchg
add
push
rcrb
ficoml
in
mov
add
insb
cmpl
push
jg
cmp
mov
pusha
mov
sbb
inc
xchg
cmp
or
in
sub
aaa
clc
mov
lret
testb
gs
jp
mov
pop
push
fdivrp
mov
out
xor
addr16
and
mov
xor
inc
cmp
mov
adc
xchg
dec
jno
fsubl
fidivs
xchg
mov
fninit
add
test
sub
or
loopne
clc
sbb
mov
jmp
xlat
mov
or
mov
data16
jb
outsl
cmpsl
inc
cmpsb
push
shll
cmpsb
jae
dec
lods
dec
adc
mov
xor
xchg
xchg
or
pop
xchg
mov
add
ja
and
aam
pop
ficompl
lea
dec
int
insb
sub
or
fs
jg
push
or
jae
adc
cmpsb
cmp
leave
inc
cmp
lds
mov
jo
popf
pop
stc
jg
adc
testb
cmp
test
inc
jle
sbb
sub
aad
cmp
push
adc
mov
cmpb
into
add
aad
subb
nop
ficoms
movsb
push
ret
ja
imul
xor
stos
jp
outsl
outsl
push
push
add
jb
jg
pop
cmpsb
xchg
mov
repz
daa
fistl
repnz
rorl
jmp
inc
aas
fpatan
or
or
push
mov
inc
or
pop
stos
insb
fiaddl
xor
js
shlb
addr16
inc
jbe
lods
and
inc
cmp
or
push
lock
int
stc
jp
mov
adc
mov
imul
int
mov
out
dec
testl
fcom
rcl
in
sahf
mov
aad
sub
lret
pop
lods
stos
inc
jmp
mov
rcll
push
imul
les
xchg
xchg
dec
idivb
jbe
rcl
adc
lahf
ss
push
xchg
lock
push
mov
sahf
shrb
xchg
shll
fnstcw
jecxz
out
jmp
addr16
mov
jecxz,pt
sbb
cmpl
je
xchg
adc
mov
rcrl
or
repz
rorl
mov
push
adc
in
sbb
rcll
or
imul
inc
push
inc
scas
jo
out
push
loop
or
push
aad
sub
in
call
stos
sub
and
loop
cmpsl
stos
xchg
std
aaa
cmp
sahf
popa
mov
pop
xlat
sub
test
inc
jp
pop
mov
jne
orb
enter
das
push
pop
aaa
mov
stc
pop
fisubs
dec
rcrl
out
fwait
es
jae
mov
stos
int3
push
iret
pop
stos
and
mov
hlt
in
cmp
add
pop
pusha
sub
xor
test
mov
out
fidivrl
xchg
cmp
mov
test
add
test
push
dec
mov
ffreep
cltd
mov
aam
mov
pop
stos
lock
ds
shl
mov
out
pop
dec
lods
cld
adc
sub
aam
push
xchg
push
roll
ss
cmc
push
mov
dec
mov
popa
lods
test
icebp
outsb
cli
xchg
mov
mov
mov
out
sub
mov
push
inc
mov
inc
add
cmp
sub
mov
in
aad
mov
xchg
das
push
stos
sahf
cmpsl
cmpsb
add
pop
icebp
inc
push
je
das
outsb
lahf
pop
ficompl
or
xor
in
pop
insl
idiv
dec
and
movsb
add
sub
std
inc
push
lret
push
movsb
gs
xchg
and
movsl
outsb
or
xchg
pop
dec
scas
in
loope
sbb
jg
hlt
stos
lret
lods
or
or
jns
mov
paddsw
imul
or
lods
fldenv
or
jne
mov
jae
push
inc
mov
push
clc
mov
push
mov
outsb
clc
jmp
out
pop
sub
xchg
cmc
sbb
mov
cmp
test
ja
or
jne
dec
mov
and
out
dec
mov
cltd
pop
xchg
outsb
in
push
in
movsl
lahf
adc
xlat
gs
pop
push
jae
sbb
sbb
xor
int3
sarl
out
mov
dec
push
push
xchg
adc
lahf
out
cmpsl
stos
sbb
push
insl
das
and
mov
jne
mov
pop
int
addr16
jl
add
pop
xor
mov
sbb
pop
sub
fistpll
dec
mov
lahf
out
pop
sti
fs
sub
cmp
mov
sub
sub
sub
fwait
jmp
out
stc
mov
or
lods
pusha
push
sbb
push
dec
data16
jne
adc
add
cwtl
jnp
and
sub
and
inc
xor
inc
icebp
fdivl
or
and
inc
arpl
mov
jae
mov
mov
cmc
mov
cmp
jae
imul
cli
cs
inc
xchg
cmp
lds
jbe
data16
notb
dec
pop
mov
fimull
fldl
and
mov
arpl
mov
dec
es
jae
ja
rol
test
push
xchg
fmuls
mov
and
dec
and
cmp
ds
and
scas
dec
xor
xor
mov
sub
dec
idivb
jl
jo
fldcw
inc
repnz
and
inc
xor
fld
iret
lods
inc
xor
jl
lcall
addr16
jle
pop
dec
inc
cmp
stc
and
movb
pop
dec
jo
popf
mov
popf
mov
xor
out
adc
out
loope
loopne
mov
arpl
xor
dec
xchg
inc
fstpt
mov
ljmp
movsl
dec
jno
cmp
adc
or
pusha
jmp
imul
inc
popa
mov
inc
pop
jbe
repz
sahf
fdivs
cmc
ret
xchg
jecxz
push
lock
in
dec
mov
and
shlb
jecxz
mov
inc
out
inc
jmp
lret
popa
and
js
mov
push
sub
int3
xor
daa
cmp
lock
pop
jp
mov
cmpsl
cld
sbb
add
cmpsl
cwtl
test
shl
sub
repz
not
add
jl
fs
pop
addr16
ljmp
cmp
imul
bnd
mov
loope
and
subb
jbe
aaa
rcl
std
pop
cmpl
mov
sbb
icebp
mov
adcb
xor
fisubrl
mov
outsb
sti
in
and
popf
lods
xor
xchg
push
sbb
lock
cmc
mov
xor
xchg
ds
inc
and
cltd
loopne
push
pop
sbb
jle
mov
adc
mov
aaa
out
sbb
cltd
rolb
cmp
rolb
or
clc
out
or
test
ljmp
loop
pop
dec
adc
sarb
or
xlat
int
cmp
in
push
lret
pop
lret
cltd
dec
in
imul
stos
mov
and
or
jl
fadd
cmc
mov
mov
push
popf
pop
or
pop
lds
cmp
add
add
mov
mov
push
inc
pop
aaa
mov
test
pop
pop
jp
pop
cld
rcll
mov
scas
xchg
arpl
push
rolb
or
adc
xchg
fisubrl
pop
cmp
xor
fs
cmpsb
push
adc
sbb
in
push
cmp
or
out
jb
rclb
mov
push
mov
insb
jl
adc
mov
lock
pop
in
into
jae
idivl
dec
cltd
std
stos
add
sub
pop
addl
adc
add
dec
sub
add
jg
pop
in
leave
push
outsb
jle,pt
cmp
nop
add
mov
sbb
mov
fldt
imul
and
add
xor
mov
push
xchg
xchg
dec
aad
in
aaa
xchg
mov
iret
pop
add
shl
fcompl
or
daa
xchg
lahf
in
xor
aas
or
cmp
test
ds
jb
sub
xor
mov
repz
jge
out
ficoms
inc
push
fs
mov
jbe
jo
mov
das
jno
pop
shrb
jecxz
mov
jne
xchg
aam
push
push
out
mov
mov
lds
push
fidivl
lea
xchg
pop
dec
sbb
push
out
into
dec
cmpsl
movsl
jnp
test
mov
int3
cmc
fistpll
fisttpll
cmp
adc
jae
jns
adc
xchg
sbb
sub
cmc
sub
push
xchg
cmp
jg
jne
scas
out
std
mov
gs
in
push
jo
les
outsb
cmc
xchg
mov
imul
shl
add
in
ss
movb
cli
inc
or
inc
loopne
out
fsts
mov
scas
inc
mull
sub
jb
push
test
movsl
or
mov
ret
lahf
cmp
loop
add
mov
push
push
dec
out
test
test
incb
pusha
mov
das
shrl
nop
pop
jb
add
dec
or
lcall
cld
popa
cmp
mov
fmuls
cmpsb
pusha
or
test
pop
scas
cmp
cmpsb
xor
mov
xchg
mov
shrb
fistpl
fsubl
arpl
dec
repnz
shrb
xchg
fucomip
fbld
xor
lods
xor
loopne
or
ret
mov
lcall
cli
cltd
cli
cmp
push
mov
stc
pop
std
pushf
ss
xor
xchg
lds
mov
sbb
adc
jmp
jmp
loope
cmp
jnp
cmpl
dec
jge
sub
mov
pusha
inc
mov
and
and
mov
fucomi
or
leave
xorl
orl
xchg
imul
lcall
pop
cwtl
test
filds
cmp
mov
xlat
rcrb
mov
movsl
xorb
out
pop
test
mov
ljmp
or
sub
pop
dec
inc
cli
jno
mov
lcall
adc
aaa
stos
dec
or
scas
js
xor
xor
pop
mov
jmp
test
sub
stc
sub
shlb
cltd
out
test
sbb
outsb
cmp
pop
sbb
aas
push
push
mov
icebp
adc
dec
or
outsl
adc
add
test
cmpsb
inc
or
shlb
jle
jns
mov
cmp
pop
sub
inc
dec
mov
fidivrl
pop
cmpsl
push
or
ja
xchg
out
adc
incl
mov
push
dec
adc
fsubp
jmp
dec
mov
sbb
pop
pop
jle
mov
lahf
testl
mov
je
lahf
cmpsl
jecxz
je
cs
cmp
lea
adc
sahf
and
not
test
nop
orb
int3
sbb
dec
inc
mov
or
cmp
cmp
ja
add
push
add
jge
cli
loop
or
popf
mov
inc
cmp
in
pop
adc
mov
icebp
inc
mov
je
test
cmp
shll
jno
mov
pop
push
bound
pop
dec
movsl
cmpsl
loope
push
dec
mov
call
sarb
push
sub
loop
insl
or
mov
xor
outsb
inc
xchg
mov
xchg
fstl
enter
scas
and
arpl
add
in
mov
data16
xchg
cmp
repz
adc
sub
outsl
dec
inc
mulb
push
or
nop
jge
pop
cmp
imul
fldenv
inc
pop
aaa
insl
repz
dec
loope
lods
hlt
cmp
sbb
fisubl
jno
pop
cmpl
cmpsl
stos
movsb
mov
mov
push
xor
test
rclb
dec
xor
mov
shrb
adc
cmp
mov
outsb
mov
dec
mov
in
or
dec
icebp
sbb
push
mov
push
out
movsb
orl
cmpsb
aad
jecxz
or
dec
push
test
xchg
jle
push
mov
mov
or
leave
mov
loope
add
sldt
mov
add
js
and
jne
mov
fcomp
int
jno
scas
test
sub
and
bnd
rclb
sub
lods
add
or
ljmp
push
jge
mov
jbe
mov
in
ret
int3
inc
and
mov
cwtl
outsb
push
negl
fadds
inc
cmp
pop
inc
test
scas
clc
lock
or
add
enter
sbb
jp
je
lcall
mov
or
push
mov
ds
jmp
subl
pop
jp
loop
ljmp
or
fistpll
shlb
test
pop
es
jo
pop
stc
mov
jno
aaa
cltd
pop
out
je
adc
xor
mov
mov
xchg
addl
int3
std
fwait
in
out
fdivrs
pop
or
push
hlt
add
jnp
dec
pop
and
mov
adc
mov
movsb
mov
inc
out
in
into
cld
jno
push
in
pop
fisttps
mov
lock
xor
arpl
xchg
xor
add
sub
xor
sbb
mov
js
stos
jmp
push
sub
mov
push
dec
xchg
jmp
daa
inc
xchg
lahf
clc
sub
ret
xchg
xchg
sbb
sbb
push
stc
jle
aad
fildl
arpl
rcl
dec
mov
xchg
arpl
icebp
dec
std
out
cmc
outsl
jo
and
jmp
ret
imul
test
loopne
test
out
cmp
xchg
out
imul
pop
shrb
xor
pop
inc
mov
lock
sbb
sbb
mov
clc
lcallw
repz
ret
cltd
mov
cmp
scas
pop
sbb
icebp
scas
test
fsubs
or
xor
jae
mov
roll
xor
push
push
mov
mov
pop
or
icebp
incb
push
daa
scas
movzwl
cmp
xchg
and
jnp
pop
cmpsl
popf
and
dec
ja
jmp
mov
sub
data16
testl
or
push
dec
jecxz
dec
adc
dec
cmp
ret
aad
mov
fst
push
inc
cmp
add
loopne
add
test
inc
or
pop
xor
jge
imul
sbb
xchg
xor
inc
sbb
xchg
insb
push
mov
sub
or
pop
scas
jecxz
mov
loope
mov
dec
pushw
mov
bound
mov
icebp
push
mov
test
mov
movsb
int3
popf
mov
aas
inc
stos
pop
mov
pop
ds
lcall
mov
jp
xchg
mov
sbb
jbe
lret
cmpb
cmp
adc
mov
and
lret
out
out
mov
adc
pop
xor
pop
pop
xchg
outsl
xor
jge
outsb
pop
xlat
jmp
xchg
repnz
mov
scas
pop
daa
sahf
push
xchg
cli
sub
test
mov
mov
arpl
ss
xor
push
dec
sub
rcll
fs
sub
mov
nop
jno
xchg
movsb
imul
push
stos
arpl
fucomip
sahf
adc
pushf
fadds
rorl
mov
and
push
shl
jge
cmc
in
rcr
fidivl
mov
mov
or
cmp
dec
mov
xor
dec
iret
mov
jbe
inc
and
xchg
adc
xchg
cmp
out
pop
and
mov
jmp
or
pop
jnp
insb
movsb
mov
sbb
inc
sub
jecxz
sbb
mov
xchg
std
das
out
jp
jb
test
pushf
loop
xchg
in
outsb
inc
xchg
data16
pushf
and
adc
scas
clc
mov
sbb
mov
xor
lods
xchg
jge
rolb
dec
push
mov
inc
jns
arpl
sub
nop
mov
insb
aaa
inc
mov
lock
push
xchg
orl
ss
dec
mov
push
jnp
fnsave
xchg
and
and
and
cmp
mov
and
mov
jo
sti
ss
mov
mov
lds
sbb
jp
movsb
sub
push
les
sub
sbb
stc
test
mov
loop
inc
dec
fidivrl
pop
add
mov
fimuls
fwait
push
adc
dec
inc
jne
ret
jnp
inc
out
mov
fwait
jae
jmp
sub
or
dec
add
test
aaa
int
or
in
pop
sbb
fsub
pop
mov
mov
or
jnp
fidivrl
add
fisubrs
pop
cwtl
adcb
sub
mov
pop
xchg
add
loop
aas
outsb
ffreep
sub
mov
xchg
pop
cmp
test
sbb
inc
popf
xor
jnp
mov
xlat
notl
jnp
add
adc
shl
cwtl
jb
aam
push
outsb
sbb
fsts
or
inc
out
clc
push
aam
cmpsl
insb
ret
push
cmp
push
inc
jp
xor
add
push
mov
mov
jp,pt
insl
xor
dec
adc
sbb
rorl
xor
loope
sbb
add
sub
mov
lock
adc
ds
pop
in
xor
std
inc
adc
cmp
sbb
sub
test
pop
fdivr
test
test
mov
mov
push
cmp
push
lahf
mov
stos
push
outsl
jns
stos
in
icebp
dec
sub
pop
repnz
push
popa
in
fdivrp
insl
add
adc
lods
fbld
and
pop
xchg
gs
imul
movsb
pop
mov
pushf
arpl
lret
add
testb
stos
cltd
ja
xchg
aaa
pop
out
sbb
cs
gs
dec
sub
xor
xchg
shlb
pop
sbb
jns
or
mov
jl
lahf
add
clc
cmpb
je
xchg
push
adc
into
inc
nop
in
mov
sub
ror
fwait
lret
adc
arpl
inc
pop
sub
sbb
in
lret
mov
pop
fs
push
xor
sahf
xchg
ds
leave
aad
dec
stos
jle
push
popf
shlb
mov
aad
shll
pop
jns
mov
jb
leave
pop
ss
xor
stc
aas
push
or
sbb
mov
hlt
sub
mov
in
insl
sbb
and
mov
repz
icebp
incb
fmuls
cmp
lock
xlat
repnz
mov
mov
lods
cli
in
jnp
push
in
push
mov
and
adc
mov
hlt
xor
ret
xchg
lods
adc
push
imul
in
push
dec
into
icebp
add
aaa
test
int
repnz
mov
ljmp
sub
fs
in
sarb
pop
int
aaa
cltd
test
jle
ds
sub
hlt
push
jecxz
out
xchg
xchg
shlb
push
in
test
dec
xchg
jp
xchg
mov
movsb
movsl
imul
sbb
add
or
call
idivb
mov
adc
mov
jns
jae
xchg
lock
inc
push
inc
inc
popa
cli
mov
aas
xchg
test
adc
rorb
jl
cmp
inc
in
pop
icebp
or
pusha
dec
mov
js
in
aas
add
pop
std
movsb
dec
sbb
mov
mov
mov
inc
cld
iret
jle
sbb
xchg
pop
icebp
mov
lret
movsl
into
dec
push
popf
popa
add
or
mov
or
lods
lds
in
inc
and
scas
cli
imul
fmul
push
jno
into
mov
mov
pop
scas
es
fwait
shl
and
cs
mov
mov
push
dec
scas
xchg
stos
popa
and
in
movsb
aad
loopne
dec
push
cmc
sbb
fidivrs
jno
test
pop
and
shlb
sbb
mov
stos
cwtl
inc
mov
mov
pop
xor
push
xor
mov
lock
jb
les
stc
fisttps
push
addr16
push
xchg
sti
dec
dec
fnstenv
pop
orb
cld
aaa
cmp
gs
lret
jnp
cmp
pop
ss
inc
in
mov
dec
push
push
into
loope
repnz
popf
xchg
test
into
inc
mov
pop
push
mov
mov
ret
outsb
dec
jno
stos
ds
enter
fistl
push
iret
sbb
push
add
cmp
int3
mov
inc
ja
push
mov
jb
cmp
mov
loop
push
out
das
jp
cmp
int3
cmp
inc
aam
inc
dec
or
xor
mov
ret
popf
ja
add
xchg
jo
xchg
push
sbb
mov
or
imul
push
inc
icebp
ficomps
jbe
faddl
mov
mov
adc
xlat
stc
inc
push
cmp
orl
jmp
sbb
enter
mov
dec
mov
and
das
or
ljmp
enter
adc
fcmove
adc
mov
xor
pop
test
or
lods
cmp
sahf
mov
cmp
int
push
imul
pusha
scas
out
dec
call
mov
xchg
or
dec
int3
xor
ret
loope
scas
mov
pop
sub
ficoms
sbb
lock
cmpsl
test
sbb
pop
add
test
lods
pop
dec
inc
test
jo
iret
lcall
lahf
mov
cmpsl
stos
test
cmc
les
lahf
and
xchg
stos
int
stos
fisttpl
cmpsb
sbb
or
aad
or
add
dec
dec
out
jl
adc
add
pop
pusha
and
sub
lret
mov
dec
call
cmpsl
adc
sub
push
pushf
sahf
mov
adc
mov
sub
lock
xchg
pop
or
mov
mov
rorl
pushf
cmpl
cmpsl
cmp
pop
mov
fwait
push
ja
push
mov
out
jae
and
out
adc
xchg
rol
sub
mov
loope
xchg
sub
hlt
sub
cmc
mov
dec
mov
sub
mov
mov
sbb
jb
iret
mov
xor
jp
add
mov
ret
stos
pop
push
inc
dec
and
add
and
pop
data16
pop
push
xchg
push
inc
xchg
xchg
push
xor
rorb
je
and
cli
sbb
dec
xlat
jp
xchg
jmp
cld
cmpl
xor
jl
xor
mov
adc
test
jae
cwtl
adc
xor
adc
test
idivl
sub
xchg
shrb
lock
movsb
in
and
fwait
adcb
aas
jnp
enter
push
decb
stc
mov
pop
mov
sub
sbb
pushf
adc
push
sub
cmp
cmc
or
jo
gs
cmpsb
push
ficomps
mov
xor
xchg
enter
dec
divb
cmp
in
mov
dec
aam
cmp
hlt
mov
imul
aas
mov
push
xchg
sub
rcll
cltd
sbb
std
cmc
shll
adc
pop
fistpll
into
add
adc
das
testl
aas
xchg
xor
dec
cmpb
jne,pn
outsl
adc
sahf
or
jns
lea
xchg
mov
sub
cmpb
dec
hlt
inc
pop
sbb
and
mov
mov
call
sbb
lcall
or
inc
and
cmp
mov
inc
dec
xchg
test
fs
xor
inc
cwtl
or
jmp
sbb
les
adc
dec
fimuls
shlb
sub
mov
lret
cwtl
sub
arpl
je
cmp
lahf
mov
push
stc
xchg
and
mov
sub
daa
pop
leave
test
cmpsl
in
cmp
mov
mov
shrl
movsb
jge
mov
fwait
xlat
dec
jb
stos
dec
push
add
lods
setl
xchg
adc
lods
loopne
es
push
cs
mov
sub
xchg
pop
repz
loopne
outsl
pop
pop
pop
scas
movl
cld
xchg
fwait
in
mov
inc
test
inc
pop
jns
mov
jns
cmp
call
sbb
sbb
adc
xor
and
push
or
sub
mov
jbe
stos
dec
xlat
xor
rcrb
push
loop
dec
mov
cmp
push
pop
adc
mov
jle
lods
mov
mov
mov
pop
ficompl
out
push
movsb
lret
xlat
imul
cld
inc
sub
out
gs
js
push
push
inc
insb
in
lods
lods
pushf
add
and
xchg
arpl
sbb
inc
ds
fisubl
adc
and
mov
js
pop
and
test
sub
shll
cwtl
lock
clc
int3
js
xchg
jne
js
rep
sub
loope
repnz
push
out
inc
scas
mov
add
daa
pushf
pop
jl
and
mov
cmp
add
mov
shll
insb
loopne
pop
push
pop
mov
adc
or
scas
lds
lea
xchg
sbb
sar
popa
std
xor
imul
lcall
lds
fnstcw
inc
sbb
xor
adcb
fst
mov
ja
mov
cmc
jns
mov
jno
repz
das
or
mov
into
scas
bswap
icebp
orb
into
or
push
pop
cld
pop
pop
sub
cwtl
cmp
sbb
sbb
mov
mov
lods
push
addl
jne
loop
sarl
pop
mov
jne
or
aam
cmp
xlat
ljmp
cwtl
push
repnz
mov
ret
sbb
imul
repz
cmc
aam
mov
mov
js
sub
cli
cmp
sbb
inc
dec
scas
jnp
stos
scas
dec
add
sub
gs
leave
or
addb
fucom
gs
push
int3
add
jmp
in
imull
stc
aam
mov
or
mov
scas
aad
adc
xlat
jno
ret
jle
xchg
aam
jno
mov
sbb
mov
cmp
jno
push
imul
xor
push
sbb
xchg
mov
fidivrs
push
jl
dec
and
and
inc
loopne
pop
subb
xor
xor
out
jb
test
jne
ret
jne
mov
sub
mov
out
mov
mov
pop
jle
loopne
or
sti
test
rcrl
jno
push
inc
pushf
test
add
je
in
mov
out
arpl
testb
sbb
sub
outsb
fnsave
mov
jae
insb
add
fistpll
inc
enter
mov
icebp
pop
ret
sarl
in
leave
mov
test
imul
dec
sbb
mov
mov
das
ficomps
push
sbb
inc
cwtl
sub
push
xchg
add
imul
outsb
jnp
push
jge
sbb
mov
insb
jns
xchg
movsl
jbe
bound
call
enter
xchg
stos
flds
movsl
and
psrlw
nop
pop
adc
jecxz
aad
cmc
dec
add
push
ja
popf
push
lahf
mov
insl
push
xor
pop
dec
mov
ret
and
inc
or
xor
jle
insl
iret
xchg
sahf
ljmp
outsl
out
cwtl
jle
stc
lds
adc
mov
mov
ds
sub
test
mov
sub
sarb
movsl
push
loopne
addr16
add
enter
jbe
es
int3
cld
cmp
mov
jp
mov
lahf
ss
insb
inc
cmpsb
jecxz
das
add
adc
in
cmp
sbb
jg
scas
in
hlt
nop
es
dec
out
cld
mov
push
and
xchg
scas
cmp
rcrb
xchg
sub
aam
icebp
xchg
sbb
test
and
pop
les
sbbl
sbb
jmp
jnp
popa
push
hlt
push
push
out
shl
movsb
pop
pop
pushl
or
adcb
xor
out
out
les
mov
loopne
mov
pop
mov
pop
inc
sub
xchg
pop
je
jno
dec
push
mov
adc
notb
add
cli
jle
stos
testl
sub
insl
push
imul
jecxz
xor
lock
inc
dec
les
imul
stos
dec
cli
adcb
push
fstps
cmp
cmp
ljmp
lods
jno
loopne
inc
or
out
inc
cmc
cmp
xchg
insl
xchg
inc
fs
xorb
cld
popa
gs
adc
rorb
jmp
sub
and
xor
jg
sbb
mov
daa
cmp
sub
inc
leave
inc
int
sbb
fildll
gs
ljmp
inc
insb
rolb
and
cwtl
icebp
ss
roll
or
jge
jmp
mov
jo
cltd
pop
aas
fstl
aad
mov
mov
shrb
sbb
aam
xor
adc
add
loopne
xchg
cmp
push
rorl
cmp
jge
xor
out
mov
pop
xor
lods
xchg
push
scas
stc
cld
scas
ljmp
mov
movsl
push
movsl
outsl
jl
test
adc
push
sbb
sub
pop
mov
add
push
adc
jae
lcall
ret
xchg
adc
sti
xor
cmp
jb
lahf
or
or
aaa
and
sub
mov
mov
shlb
insb
fisttpll
xchg
clc
orl
addb
mov
sub
repz
lods
inc
xchg
mov
loop
jle
mov
add
push
or
fdivr
push
in
sti
inc
adc
jns
mov
out
pushf
sahf
xchg
and
xor
outsl
out
mov
dec
jecxz
adc
mov
push
push
fbld
jmp
push
cmpsb
inc
jb
adc
mov
xorb
fiaddl
fst
lea
add
lds
mov
dec
or
xchg
dec
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
lds
int
aad
push
pushf
jg
cmp
popa
inc
ljmp
push
push
or
gs
pushf
cmp
cmp
jl
inc
cltd
cmp
in
sbb
js
stc
rorb
int
push
adc
jnp
jno
xchg
movsl
lock
out
mov
rcll
inc
mov
adc
fistpl
cmpsb
cli
lods
xchg
jl
xchg
jl
cli
jb
popf
mov
push
pop
sbb
sub
xchg
stos
add
sub
lcall
rorl
arpl
popl
fstpl
pusha
popf
test
aaa
dec
in
mov
sub
cld
cld
xchg
in
sahf
scas
jo
ret
inc
in
test
packsswb
adc
out
rolb
pop
cltd
js
pusha
popa
lret
or
inc
and
call
mov
pop
mov
dec
scas
lods
daa
adc
pop
lds
loop
cmp
jmp
insb
call
mov
es
cmp
mov
sbb
push
inc
sbb
and
imul
mov
dec
jnp
mov
cmp
mov
loop
sub
sub
pop
cmpb
or
push
ds
mov
inc
in
pop
pcmpeqw
int3
call
push
xor
outsb
jl
jbe
sarb
dec
push
or
mov
pop
sub
insl
aaa
cmp
les
push
dec
push
dec
push
and
push
xchg
int3
or
inc
xor
in
inc
push
sbb
cmp
adc
negl
xor
roll
sbb
cmc
outsb
push
jle
or
adc
dec
cld
mov
add
mov
test
push
push
std
cwtl
mov
jmp
adc
adc
scas
iret
push
test
movsl
adc
imul
pushf
fisubrs
pop
sarl
and
pusha
lds
push
gs
je
lock
bound
hlt
pop
aas
mov
mov
adc
cmc
mov
or
xor
mov
test
mov
shll
push
jmp
ja
mov
mov
sub
loopne
pop
sub
mov
jl
mov
out
rcrb
inc
shrb
cmpb
rclb
mov
mov
outsb
stos
cmp
and
jo
mov
dec
cltd
push
xchg
sbb
jne
repz
stc
push
or
leave
push
int3
mov
pop
ja
mov
xor
aaa
pop
and
iret
fwait
push
jle
adc
push
mov
push
int
outsb
push
mov
in
ret
push
mov
mov
imul
rorb
out
sbb
add
das
xchg
in
jg
aaa
pusha
ror
fistpll
and
sub
jl
out
push
repz
ds
test
jle
mov
inc
xchg
pop
leave
into
sub
cmpsl
subb
addr16
fs
sbb
lret
push
insb
adc
jno
push
arpl
add
jmp
push
push
adc
mov
and
and
fcoml
cmp
sahf
loopne
jno
jecxz
shll
sbb
sbb
dec
in
dec
les
xchg
sti
dec
jle
mov
mov
js
aas
push
fwait
sbbl
mov
xchg
inc
mov
xchg
test
or
pop
cmc
mov
fsubl
sbb
out
mov
xchg
loop
insl
leave
add
mov
add
mov
mov
rorl
movsb
pop
jle
outsl
je
push
lahf
dec
fs
negb
mov
out
scas
push
cmp
hlt
push
xor
lock
mov
sub
hlt
pushf
push
push
mov
mov
idiv
sub
test
bound
mov
out
scas
mov
hlt
fists
sahf
pop
add
idivl
bound
mov
jo
push
fcomip
sahf
push
cli
js
mov
scas
mov
mov
push
cld
mov
pop
xor
js
je
ljmp
sub
sbb
dec
scas
sbbl
rorb
pop
movsb
xchg
jns
push
and
xchg
outsb
je
pop
sahf
push
shr
inc
xchg
or
aam
mov
xchg
shr
divb
pop
inc
les
adc
cmp
data16
mov
push
pop
xchg
mov
pop
sahf
movsb
inc
push
inc
dec
cli
scas
mov
adc
push
xor
dec
cmp
jge
push
inc
test
mov
mov
pop
sub
mov
ds
push
fdivr
into
cmpsb
mov
ja
pop
cwtl
out
das
fisubl
adc
jmp
es
sub
add
cli
cli
ret
jae
cmp
xor
mov
data16
or
daa
aam
xchg
push
daa
hlt
jecxz
adc
test
and
inc
lcall
xchg
or
mov
movsb
pop
lcall
cmp
fiadds
jb
das
cmpsb
addr16
stos
xchg
pusha
outsl
push
movsb
es
test
fbld
adc
movsb
lret
addr16
cmpsl
mov
dec
xchg
shl
fldln2
cmp
push
sti
testl
aad
or
or
xchg
testb
das
imul
pop
pop
leave
data16
add
inc
fidivrl
mov
adc
shrl
adc
lea
sub
test
pop
or
cmp
aad
mov
and
dec
sbb
xchg
imul
mov
cmpsl
leave
lods
add
push
mov
shl
out
fwait
xor
and
cmp
in
lcall
enter
pop
mov
or
ret
adcb
enter
addb
inc
push
inc
popa
ds
or
pop
gs
adc
add
mov
aaa
and
pop
dec
sbb
int
dec
dec
xor
pop
inc
sbb
push
stc
inc
ss
mov
test
add
lahf
xchg
movsb
ficomps
loope
imul
push
fists
scas
xor
movsl
cmpb
divb
jmp
xor
out
mov
fbstp
sarb
lcall
and
dec
stos
push
sub
mov
ja
pop
popa
fs
mov
lods
inc
inc
push
mov
xor
lods
fistpl
sub
out
or
ja
lea
and
ja
pop
inc
mov
sub
pop
jmp
movsb
xor
jmp
sbb
xor
or
mov
xor
push
or
xchg
lods
insl
inc
xchg
xor
or
movsb
inc
out
inc
mov
jg
mov
xchg
daa
mov
mov
pushf
or
in
push
inc
xor
idivl
lret
and
mov
jp
ds
sub
shlb
popa
push
mov
cwtl
jl
in
mov
add
cwtl
inc
xor
xchg
push
sar
mov
arpl
mov
mov
dec
addl
test
mov
or
rorb
in
dec
jns
cmpsl
insl
sti
pushf
xlat
lods
dec
and
cmp
inc
popf
fcomps
les
sub
jecxz
cmpb
sub
pushf
adc
and
imul
jnp
je
push
mov
pop
jbe
xor
sub
jns
fldenv
push
mov
leave
jmp
pop
adc
mov
mov
loope
stc
lret
mov
sub
mov
int
jne
bound
cmovl
jp
mov
jo
lods
lock
mov
mov
ret
lods
fldenv
loopne
push
adc
adc
lea
add
jge
add
dec
ja
loope
loope
xchg
jbe
rorl
lea
stc
test
mov
mov
outsl
xor
push
ss
mov
adc
and
mov
in
loopne
in
xchg
das
xchg
cmp
sbb
pop
jns
fdivp
lds
std
ds
sti
sub
xchg
scas
push
cltd
shll
loope
jmp
adc
mov
enter
pusha
cmc
lods
xchg
dec
in
xchg
push
nop
jge
or
testl
sub
sub
mov
mov
mov
cli
mov
aaa
jo
xchg
into
scas
mov
repnz
dec
ret
inc
stc
push
pop
scas
push
cmc
movsl
cmc
or
adc
mov
gs
pop
jg
frstor
xchg
popa
push
sbb
movsl
sbb
int3
and
cmc
ljmp
cli
mov
pop
imul
cmp
das
xor
in
inc
int
cmpsl
mov
cmp
adc
jne
sub
shrb
mov
popa
gs
lret
std
pop
push
xorb
cmp
ret
dec
add
fldcw
jl
and
out
pop
push
xchg
add
push
stos
push
outsw
mov
push
push
repnz
pop
push
pop
loop
js
lods
xchg
jge
lock
outsl
push
inc
sub
andb
out
scas
hlt
shlb
out
insb
repz
mov
cli
jecxz
ret
cmp
in
sbb
xchg
dec
mov
movsb
sbb
mov
dec
inc
dec
pop
test
pop
in
fs
icebp
mov
lods
imulb
xor
cmp
cmc
adc
iret
add
in
mov
scas
inc
imul
or
push
pusha
out
mov
sub
out
rcrb
repz
inc
push
push
pop
mov
lret
mov
mov
jb
lret
or
cli
jg
aam
mov
or
inc
pushf
rclb
sbbb
xor
adc
sub
adc
loop
int
push
jns
loope
adc
iret
dec
repnz
xchg
sbb
push
fnstenv
sub
xchg
jg
sub
pusha
cltd
rorb
cmpsb
jecxz
mov
loop
jbe
jnp
mov
inc
ret
mov
imul
pop
repz
cld
stc
pop
mov
add
mov
dec
aad
aas
xor
xchg
pop
sbb
mov
cmp
fistps
adc
sbb
sub
in
int3
movsl
xchg
xchg
jmp
mov
outsb
jbe
in
fwait
sbbl
sbb
add
aam
lahf
jno
cli
jno
pop
pop
dec
mov
movsb
sub
jmp
out
ret
sbb
in
add
or
add
jnp
xor
out
adc
pop
or
jb
mov
aad
xor
popa
in
ret
test
insl
jp
fimull
test
fstps
pusha
jg
adc
cmpsl
cmp
fisubs
into
pop
imul
lock
sub
cmp
dec
insb
inc
lret
mov
pop
mov
jp
pop
mov
adc
cmp
aas
mov
push
das
in
aaa
dec
sub
test
ljmp
lock
nop
xor
or
xchg
xchg
add
leave
sbb
pop
cmp
mov
loop
push
sbb
imul
jecxz
stc
idivb
rclb
incl
das
stos
xlat
cmp
lret
mov
lahf
push
adc
mov
mov
mov
sahf
add
pop
or
mov
movsb
pop
sbb
mov
jmp
sub
add
jecxz
inc
imul
stos
mov
jae
xchg
inc
add
mov
lahf
leave
jnp
in
aaa
pop
sub
adc
in
pop
mov
cltd
xchg
jecxz
push
and
push
or
loope
stos
xor
mov
push
cwtl
cmp
jmp
popf
es
sub
loop
push
dec
inc
stos
jge
pop
andl
inc
fistpl
jnp
inc
shlb
popa
cmp
int
push
outsb
push
xor
pusha
sbb
and
ja
cmpsl
add
push
adc
jnp
mov
mov
cmp
mov
cmpsb
es
outsb
icebp
test
in
push
or
and
clc
adc
addb
mov
test
or
out
les
mov
daa
insl
inc
sbb
test
mov
or
nop
dec
lahf
cmp
inc
sbbl
dec
loop
xlat
leave
out
push
cmp
jg
mov
jl
fwait
int3
aad
jns
in
bound
xchg
out
call
popf
cld
adc
sbb
pop
int
and
jnp
outsl
mov
mov
dec
cmpsl
xor
push
push
xchg
imul
jl,pt
jp
clc
movsl
sarb
fldcw
mov
repz
test
in
mov
and
shlb
xchg
mov
fcompl
lahf
mov
adc
pop
pushf
leave
sub
cld
lret
push
jl
shll
cmp
add
movsb
or
jne
js
fisubrs
sub
inc
jb
adc
jecxz
loopne
cmpsb
mov
sbb
inc
add
xchg
ja
inc
jno
aaa
jmp
mov
lahf
leave
jge
push
push
bound
lds
pop
add
jbe
dec
pushl
xor
inc
movsb
stos
xchg
cmp
cmc
cli
les
add
xor
sbb
sbb
add
out
or
addl
jmp
xchg
xchg
rorb
xchg
sub
inc
sbb
int3
mov
inc
pop
lods
lcall
cmpsl
mov
jmp
lret
hlt
gs
add
xor
notb
cmp
fdiv
hlt
in
fadd
pop
mov
mov
mov
shrl
loope
xchg
in
sarl
icebp
jmp
cmpsl
int
adc
int
idivl
xlat
iret
and
add
jo
fldcw
inc
jmp
xor
push
or
add
sub
movsb
mov
pop
and
adc
and
int3
add
mov
sbb
cmp
movsl
cmpsb
cli
mov
jp
inc
int
cmpsb
movsl
inc
mov
ss
adc
dec
mov
pop
dec
fneni(8087
rcrb
testb
bound
cmpsb
mov
push
push
pop
jmp
xchg
push
inc
or
add
sbb
push
mov
or
das
mov
test
imul
xor
fs
shrb
nop
jmp
sbb
push
xchg
rol
fstl
adc
xchg
ret
and
sbb
cmpb
subl
ss
repz
and
movsb
int3
dec
out
ds
ds
test
outsb
out
test
xor
pop
cmp
pop
fs
sbb
inc
pop
xor
pop
leave
push
repnz
sbb
outsl
mov
ja
addr16
loop
pop
jle
andl
dec
jne
mov
inc
sub
aas
pop
mulb
sub
mov
and
and
out
mov
or
jno
cmp
mov
scas
pop
or
and
repz
aaa
xchg
je
sahf
and
popa
mov
sub
lock
xchg
jl
sti
lahf
mov
push
cmp
subb
add
cmp
mov
mov
hlt
pop
out
push
inc
inc
fisttps
add
js
mov
cmpsl
sbb
mov
loope
and
inc
push
pushf
out
sub
fwait
test
or
shlb
mov
popa
cmp
lods
leave
into
lods
xor
and
iret
adc
fnsave
in
test
stos
and
xor
add
dec
ret
jno
sbb
sarl
jmp
mov
movl
jae
dec
pushl
ret
dec
sub
and
fwait
in
loopne
dec
mov
cmp
jg
push
clc
in
repz
je
push
jbe
dec
scas
mov
xor
push
mov
cld
lods
shll
out
jp
xor
mov
adcb
adc
lods
add
mov
inc
jns
arpl
mov
addr16
cs
or
cmp
pop
jb
push
test
pop
push
rcr
pop
stos
mov
push
mov
gs
push
add
loope
bound
lea
xchg
jo
mov
inc
dec
jne
jge
and
mov
push
addr16
addr16
out
testb
mov
loop
xchg
aad
sar
push
jbe
cmc
jg
sbb
cmpl
clc
andl
xor
mov
sahf
rcr
mov
and
pop
hlt
cmp
pop
mov
sbb
out
dec
jge
xchg
fisubrl
rolb
dec
and
mov
dec
jecxz
pushf
mov
mov
daa
xlat
mov
cmp
into
lods
xor
fcoml
jge
mov
mov
cmp
adc
adc
aas
pusha
outsl
add
xchg
sub
mov
cs
or
or
add
add
push
xchg
inc
fs
ret
xor
adc
and
adc
lods
ss
je
jp
pop
popf
xchg
jp
add
daa
mov
aam
test
cli
je
sub
cli
enter
cmpsb
xchg
push
xchg
push
sbb
mov
lea
push
cmp
sub
push
push
push
add
mov
add
mov
nop
mov
daa
xchg
and
mov
cmp
and
arpl
inc
mov
jbe
in
jle
in
mov
in
ja
jge
and
fmuls
hlt
mov
bound
fildll
mov
mov
push
out
ror
inc
push
jp
and
dec
subb
mov
aaa
jno
sbb
push
jb
pop
outsb
out
xor
xorb
sbb
fisubrs
sahf
ret
imul
sbb
jle
cmp
mov
push
xor
lcall
fcom
fsub
jecxz
pushf
add
outsl
jne
dec
in
inc
idivl
enter
clc
insb
popa
mov
in
fsts
jns
lock
in
sub
and
add
fiaddl
mov
sbb
jae
push
ss
fs
sub
stc
icebp
cmp
sub
inc
mov
out
inc
pop
mov
push
sbb
clc
xchg
pop
imul
fimull
int3
lret
or
shlb
xchg
jb
in
mov
and
xchg
es
adc
xor
mov
mov
push
vcvttps2dq
lods
movsl
test
jne
ljmp
inc
lock
shlb
ret
test
scas
shlb
pop
xchg
xor
jb
dec
adc
sbb
divl
mov
jnp
mov
sahf
out
push
sbb
daa
icebp
ja
mov
lea
xor
mov
pop
or
xchg
xor
insb
jne
sarl
sbbl
orl
sub
cmp
in
and
out
sbb
add
add
push
out
stos
mov
stos
jnp
lcall
mov
int
or
in
sahf
sbb
imul
lahf
sbb
mov
test
push
dec
into
or
push
cmp
hlt
movq
cmp
dec
push
orl
jae
movsb
xor
notl
into
lret
addb
popa
adc
hlt
into
cmpsl
add
pop
push
ret
push
pop
mov
push
insb
pop
and
icebp
mov
test
or
mov
jmp
jecxz
jno
js
dec
mov
or
add
xchg
or
out
imul
jmp
pop
lsl
test
dec
mov
nop
xchg
mov
cwtl
sub
subl
or
testb
xor
dec
nop
push
je
xchg
mov
enter
cli
in
fbld
push
mov
gs
dec
shll
lds
out
push
pop
pop
inc
dec
inc
mov
adc
lret
subb
jle
int3
xchg
fwait
int3
fwait
test
mov
sbb
mov
add
jl
mov
pop
loope
es
ja
or
jecxz
inc
jle
adc
sub
sbb
aam
xchg
mov
pop
vmovups
or
mov
inc
sarl
call
leave
xlat
imul
sbb
add
es
sbb
or
push
loope
xchg
andb
xchg
dec
lods
out
leave
lret
sbb
insb
xchg
inc
pop
stos
add
xchg
std
xor
insl
sbb
mov
mov
adc
sbb
mov
lock
jl
add
cs
pop
pop
js
mov
push
fnstsw
mov
mov
jne
mov
sbb
fidivrl
mov
mov
add
fcmovnbe
cmc
inc
rcr
inc
bound
jo
loope
scas
xchg
daa
sbb
jbe
aam
cmp
sbb
and
xchg
xor
dec
ret
imul
push
and
and
xchg
xchg
pop
jns
notb
scas
mov
insl
shrl
pusha
and
nop
fmuls
cmp
add
mov
mov
lcall
pushf
adc
fsubr
outsb
pop
pop
ja
popf
loopne
push
js
inc
or
push
jno
popw
and
fists
mov
je
loopne
xchg
mov
push
mov
xchg
jb
mov
or
add
hlt
inc
mov
int3
mov
arpl
fsubrl
imul
ss
gs
mov
aas
hlt
sti
jle
das
ja
aam
lret
shrb
mov
out
movsl
mov
nop
jnp
jmp
mov
xlat
test
and
nop
jb
sbb
sub
add
pop
jnp
mov
mov
jno
aaa
sti
pop
out
xlat
movsb
notl
cwtl
inc
test
enter
push
and
popf
xor
daa
adc
push
cmp
shr
mov
repnz
mov
mov
xchg
cmp
ret
or
mov
test
mov
add
outsb
mov
and
push
jae
out
jne
mov
outsl
lock
pop
notl
movsl
cmpsb
stos
scas
cmpsl
fidivrs
out
or
and
shrl
mov
cli
das
pop
or
mov
inc
adc
ds
gs
sub
or
jg
stos
mov
dec
jbe
adc
inc
negb
frstor
add
lds
arpl
mov
mov
mov
loope
sar
jae
sub
inc
xchg
sub
mov
scas
add
iret
jl
fcmovnbe
sub
fcompp
mov
jle
test
inc
jl
jns
mov
and
loopne
and
adc
mov
outsl
fisttpll
stos
outsl
jbe
std
in
out
ss
lea
outsb
lcall
jge
xchg
cmpsb
inc
push
and
jbe
popa
dec
fisubl
lods
jns
xchg
adc
fdivl
mov
sub
insl
imul
xor
inc
inc
in
xchg
and
mov
sbb
addb
dec
adc
mov
popf
pcmpgtb
rol
inc
fcomip
jmp
out
xor
and
mov
jne
push
mov
xchg
cli
dec
loope
push
outsb
jmp
mov
cmp
pop
mov
fsubr
lea
and
call
loop
mov
push
btr
mov
shlb
add
ret
fisubs
sbb
stc
clc
lea
test
sub
aam
sbb
push
inc
or
popa
repnz
stos
lret
xor
jb
imul
xchg
pushf
cmpsl
adc
mov
test
push
fcomi
push
shlb
stos
push
mov
push
jl
mov
fwait
in
push
mov
xchg
inc
dec
lcall
iret
jnp
scas
subl
xor
data16
or
cld
pop
aaa
cmp
add
jns
xchg
into
jb
out
jb
jae
pop
ficomps
push
dec
sub
dec
cmpsb
xchg
ljmp
movsb
inc
mov
fs
add
gs
pop
sbb
nop
cmp
faddl
daa
xor
sbb
push
inc
sub
fadds
inc
inc
jb
int
into
imul
ds
or
out
call
test
in
aas
xor
adc
fwait
jecxz
rdmsr
insb
inc
or
add
ret
or
leave
cmp
mov
push
imul
jge
push
gs
dec
icebp
mov
pop
add
ja
arpl
cmp
pop
out
add
test
jl
mov
out
test
loopne
test
into
add
cmp
cwtl
lock
imul
mov
bound
cmovo
test
mov
xchg
scas
mov
ss
cmpsl
pop
pop
fs
aam
pop
daa
ja
sti
insl
aaa
pusha
inc
dec
sub
lahf
ds
xchg
int
lods
lock
push
cwtl
in
lret
enter
dec
sarb
int
scas
pop
out
das
shlb
dec
sub
sub
lcall
out
les
mov
stos
cmpb
push
inc
test
push
in
std
xchg
pop
lds
jmp
fwait
pop
clc
jb
xchg
xchg
stos
push
out
je
mov
dec
dec
or
rcr
js
jns
popf
jl
pop
pop
int3
push
addr16
pushf
xor
fdivs
ret
inc
sbb
mov
mov
imul
int
mov
dec
hlt
add
es
inc
testl
loopne
enter
movsb
inc
test
enter
rcrb
push
push
sbb
fsubrp
test
cwtl
pop
scas
fcoms
mov
push
das
jp
sbb
repz
and
push
in
jae
push
pop
sub
jae
ss
shr
xchg
push
cwtl
sub
push
fisttps
jmp
mov
cmc
pop
fdivs
lock
xchg
rorb
cmpsb
jns
fadds
ljmp
setp
sbb
sbb
ja
popa
xchg
cmp
mov
xor
pop
push
adc
add
inc
int
lahf
ret
push
adc
jo
in
arpl
xlat
jle
addr16
out
sub
insl
sub
sbb
dec
addr16
and
fcmovb
test
pop
iret
or
aam
mov
xchg
les
inc
fidivrl
jo
movsl
and
dec
outsb
mov
inc
dec
xchg
jnp
notl
out
lcall
jb
rcll
imul
pop
cli
xor
mov
add
xchg
lea
fidivl
adc
cwtl
ds
std
movsl
addl
cmpsb
fildll
pop
jl
jge
or
sbb
dec
push
sbb
fcom
and
jns
lock
aad
cli
loope
aad
inc
pop
sbb
shl
dec
pop
fwait
mov
lds
mov
sbb
lcall
gs
and
es
fdivs
adc
mov
movsb
les
dec
jp
jae
loope
test
std
xchg
ja
sub
xchg
loopne
xchg
cltd
xchg
ret
pushf
ja
aaa
pop
or
add
ljmp
fbld
hlt
inc
sbb
fs
test
fildl
bound
jo
mov
lods
mov
xor
dec
mov
jb
adc
xor
repz
and
sub
leave
and
les
adc
sbb
pop
dec
gs
jge
or
xor
pusha
lea
mov
push
leave
and
mov
lret
imul
mov
ja
test
inc
jmp
push
shll
fisubrs
stos
push
inc
ss
arpl
cmp
inc
fldcw
sbb
out
push
outsb
jne
subl
pop
xchg
test
mov
bound
stc
or
out
inc
mov
add
cmpsl
inc
cmp
jmpw
mov
adc
jmp
mov
xor
push
pop
stos
sbb
cmp
cmp
adc
inc
mov
leave
mov
sub
xchg
mov
popa
dec
mov
sub
dec
dec
out
test
clc
mov
mov
xor
sub
dec
adc
mov
xchg
pop
sbb
push
pop
push
lods
lods
dec
pop
repnz
test
jp
xchg
leave
cltd
cmp
xlat
jl
fwait
mov
into
sub
push
mov
mov
mov
imul
sub
in
fimuls
ret
imul
psrad
or
lcall
xchg
stos
fwait
ja
test
je
repnz
mov
in
mov
mov
xchg
je
lret
popf
add
mov
lcall
or
fisttpl
mov
dec
xchg
inc
add
jle
cmp
subb
jo
into
mov
sbb
hlt
mov
int3
pop
fdivr
ficoms
inc
jae
sbbl
popa
out
stos
enter
lret
push
jnp
mov
nop
pop
push
aas
gs
je
mov
xlat
ss
repnz
mov
jp
enter
xchg
jl
mov
idivl
cmp
pop
sti
cltd
mov
lds
out
xchg
dec
pop
daa
xor
lods
insl
xor
call
sahf
xorb
push
adc
aad
mov
cld
xor
imul
stc
pop
pushf
jne
cs
fisubrs
mov
loopne
cltd
xchg
pushl
lock
xchg
aaa
xlat
inc
lcall
into
mov
or
stc
sub
pushf
in
movsl
or
addl
mov
mov
jnp
popf
pushw
enter
xchg
in
adc
pop
and
dec
inc
mov
shr
sub
insl
movsl
dec
xchg
push
imull
mov
ret
sbb
xchg
les
cli
push
jecxz
pushf
ds
mov
pop
add
pop
push
inc
jno
daa
pop
adc
cmp
ret
mov
fwait
loopne
rorl
imull
call
scas
lcall
test
mov
jmp
movzbl
mov
cmp
addr16
sub
outsb
mov
out
and
jnp
ja
insb
ds
xor
adc
enter
pop
lcall
std
inc
test
icebp
dec
pop
das
add
mov
dec
adc
cmp
and
movsb
movsl
mov
mov
lcall
ss
daa
mov
mul
aas
jecxz
inc
add
ret
pushl
je
adc
adc
in
xchg
adc
pop
add
fcomp
inc
xchg
shlb
fidivl
inc
in
mov
pop
xor
mov
sub
adc
inc
mov
stos
or
jmp
sarb
sub
leave
push
xor
fcoml
ffree
fwait
call
loop
jp
xchg
int
in
add
xchg
fwait
dec
pop
push
andb
cltd
out
adc
int
mov
lret
add
stc
dec
jae
push
cmp
sbb
xchg
ret
ret
and
jno
ljmp
jns
jae
pushf
or
mov
call
jne
gs
xchg
sub
or
lock
xchg
jo,pn
mov
sahf
mov
test
dec
mov
into
pop
jae
in
sub
test
out
popf
sbb
fmull
mov
stc
lock
sub
scas
aas
xchg
jb
dec
push
cmpsl
popa
push
jne
dec
inc
movsl
test
movb
pop
test
mov
cmpsb
aas
pop
sbb
fst
mov
jae
xchg
xchg
inc
mov
push
xor
ljmp
add
mov
pop
pop
push
lret
test
lods
dec
or
fwait
jns
scas
dec
in
mov
dec
xor
sti
aad
mov
mulb
jmp
adc
xchg
mov
mov
adcl
fimuls
mov
cmp
ficoml
xor
xlat
sub
iret
sub
js
stos
ret
pop
mov
mov
mov
add
pop
jg
mov
fdivp
xor
ss
dec
xchg
cltd
fidivrs
mov
rorl
jbe
add
push
into
outsl
das
push
and
push
mov
mov
cmp
stc
inc
adc
push
adc
sarb
xor
int
add
mov
xor
cmp
push
mov
lret
ja
adc
lahf
fimuls
mov
inc
shll
insb
mov
dec
xlat
loopne
movsb
mov
pop
cmp
push
pop
je
in
adc
dec
pop
stos
aam
movsl
mov
adc
adc
sub
dec
mov
repz
xchg
adc
js
xchg
pop
add
out
mov
adc
mov
xchg
lods
mov
and
add
clc
mov
ja
mov
repnz
mov
ds
fidivrl
mov
adc
dec
insb
addr16
or
ljmp
iret
cmpsl
fistps
icebp
das
or
dec
pusha
call
sub
movsb
inc
std
sahf
iret
adc
xor
pop
and
movsb
sbb
or
les
jns
test
outsl
clc
cmp
push
mov
hlt
and
roll
aad
clc
mov
cs
push
mov
mov
ss
push
and
daa
xor
sub
xchg
in
or
cmp
xchg
adc
jnp
or
pop
cmc
inc
sub
fwait
mov
mov
fistps
mov
ds
xchg
mov
jne
jnp
and
dec
sbb
in
add
aam
into
sbb
inc
push
in
fs
mov
jne
mov
rcrl
xchg
jecxz
pop
jne
out
jb
and
cmpsl
movsl
mov
stc
ds
aad
push
insb
nop
or
push
lds
and
pop
xchg
push
sub
or
lcall
jl
out
lods
ret
test
or
lds
mov
rorb
mov
pop
jge
into
mov
ftst
mov
divl
fadd
inc
mov
add
js
jp
sti
outsl
sbb
push
cltd
pop
mov
jne
mov
pushl
and
jb
divl
mov
cmp
mov
sbb
stc
cltd
out
sbb
or
insb
arpl
mov
fcmovnu
pop
pop
jg
mov
std
push
mov
adc
mov
lret
xchg
out
test
jnp
inc
jno
xor
rorl
push
mov
add
add
dec
lea
xchg
mov
adc
sub
out
or
mov
pop
jnp
movsl
dec
iret
jecxz
mov
push
jp
divl
push
mov
fdivs
lahf
mov
and
test
xor
xchg
clc
mov
in
sarb
sub
out
aad
popa
jle
xchg
or
daa
loopne
xor
ret
add
mov
xchg
cld
lret
popf
add
call
pop
and
popa
std
aaa
hlt
cmp
cwtl
pop
inc
jns
xorl
imul
jp
push
xor
jp
push
cmpsb
test
or
lahf
lods
inc
imul
outsb
stos
aam
cld
and
pusha
cmpsl
sub
mov
insl
dec
mov
fs
stos
or
jbe
cmpsl
ffree
add
xor
push
push
jmp
in
jne
mov
adc
dec
das
cmp
rorl
shll
leave
mov
cmp
push
fdivrl
add
mov
adc
out
pop
or
std
js
push
dec
xchg
push
pop
out
adc
lea
ds
ret
inc
adc
xchg
dec
sbbb
or
bnd
push
or
adc
xchg
pushf
ds
lret
gs
push
mov
sub
add
mov
pop
clc
jecxz
aaa
push
iret
sub
cmp
es
cwtl
push
scas
sarl
lret
xor
xor
sarb
push
lcall
stos
mov
push
jmp
dec
adc
stos
loope
cmpsl
jge
gs
push
xchg
jo
filds
and
ret
cli
or
mov
in
out
out
cmp
enter
test
sub
and
cmp
or
push
inc
aad
jbe
stos
dec
insl
jae
dec
sahf
push
sbb
ljmp
rolb
sub
inc
fcmovnu
xor
lcall
bound
inc
test
mov
popa
in
mov
bound
xchg
into
mov
rcrl
adc
push
testb
in
push
jecxz
dec
inc
jecxz
mov
testb
fs
scas
cmc
xchg
dec
subb
std
mov
sub
stos
push
rcrl
jmp
pop
cmp
cs
test
cmp
inc
pop
push
lock
inc
jbe
push
sbb
mov
vpsraw
lcall
testb
xor
xchg
sub
adc
popf
mov
xchg
outsb
pop
mov
fdivp
inc
mov
pop
inc
leave
imul
cmp
pop
fbld
in
sbb
enter
mov
push
rcr
jno
sbb
mov
xchg
in
and
aaa
xchg
xor
cmpsl
lds
pop
insl
xchg
or
in
imul
xor
leave
js
push
or
loop
popf
xchg
sarl
add
hlt
mov
push
lret
mov
xor
outsl
cltd
fcmove
jb
data16
hlt
call
push
arpl
insb
jmp
fisttps
int3
dec
xor
jl
jge
insb
and
popa
pop
pop
adc
adc
ret
or
fstl
into
loope
mov
jmp
mov
cmp
ljmp
out
andl
std
rcr
mov
and
call
outsb
shr
in
pusha
sar
sub
insl
and
push
sub
sbb
cmp
xlat
movsl
fsubrl
or
dec
mov
nop
outsl
sti
and
jp
test
repnz
xor
enter
mov
orl
push
lcall
xchg
aas
test
out
decl
xor
js
adc
xor
sbb
test
gs
mov
stos
inc
mov
sar
int
xchg
cmp
lret
mov
jp
stos
xchg
stc
push
inc
adc
push
cwtl
adc
inc
je
in
outsb
cmp
in
mov
cmp
adc
push
in
iret
shrl
lret
mov
jg
pop
scas
inc
into
popa
jecxz
xchg
mov
jmp
or
arpl
les
sub
and
sbb
unpcklps
sbb
loopne
movsl
rclb
daa
push
xchg
mov
add
pop
mov
sbb
shrb
cltd
pop
imul
pop
pushf
and
mov
push
imulb
or
xor
sahf
rcll
frstor
cltd
daa
not
inc
int
cmp
lcall
sub
mov
shlb
loop
or
out
add
mov
ja
sbb
insb
loop
sbbl
sbb
mov
aas
aam
ret
push
sub
and
test
mov
pop
outsb
sub
mov
and
hlt
dec
nop
jnp
and
pop
dec
scas
jmp
bound
dec
mov
and
stos
mov
jmp
loop
leave
fsubr
out
jno
dec
div
sbb
jns
push
ds
scas
mov
movsl
pushl
jae
mov
sbb
ret
cltd
nop
jg
mov
out
out
lahf
inc
or
mov
adc
cltd
cmpsb
and
xor
cmp
in
hlt
xchg
pop
mov
cmp
sbb
and
xchg
mov
cmp
pop
adc
adc
pop
xchg
push
imul
add
push
std
cltd
dec
sub
cmp
aam
sub
sbb
rolb
popf
nop
mov
imul
sar
xor
jmp
xor
je
dec
cmp
jb
mov
jg
dec
sub
out
lret
or
push
cwtl
mov
sub
leave
loope
add
popf
and
dec
xchg
shl
scas
xchg
jae
pusha
das
xchg
xchg
imul
and
xchg
dec
pushf
test
shll
ds
imul
loope
xchg
and
push
push
add
pop
test
xor
dec
or
test
shrl
pushf
scas
mov
loope
pop
popf
xchg
mov
jno
clc
cmp
imul
sbb
pop
pop
or
stos
lea
mov
sahf
in
lahf
testb
adc
add
inc
rorl
mov
ja
nop
xor
sbb
push
jge
sti
clc
and
lahf
cmp
jo
shll
enter
jge
aaa
jne
dec
fwait
sub
roll
mov
push
xor
lods
test
mov
divb
in
fimuls
mov
jp
andb
and
std
inc
leave
pop
add
xor
test
and
cmpsl
std
sbbl
mov
inc
jne
or
pop
ss
or
outsb
arpl
fdivrl
cmp
dec
bound
xor
sbb
push
mov
or
and
pop
pop
aas
sub
push
sub
jae
fmulp
push
pop
in
mov
xchg
rclb
fs
cmp
pop
inc
data16
dec
xor
jo
into
scas
addr16
stos
xor
inc
and
xchg
cmp
and
in
clc
push
loop
lea
jno
mov
mov
jbe
cld
test
aam
dec
and
sbb
adc
negl
jno
inc
out
in
xlat
adc
pop
fsub
mov
inc
outsb
sub
lods
push
filds
mov
pop
jbe
mov
mov
and
arpl
inc
inc
sarb
jg
jae
inc
inc
cld
int3
jge
mov
inc
cmp
cmc
or
lock
push
jb
shlb
fcmovnb
ss
xlat
pushl
or
inc
push
int
xor
cmpsb
lods
add
das
sub
out
mov
lcall
inc
pusha
push
sbb
jmp
idivb
push
inc
xor
add
push
ljmp
repnz
sbb
ret
cwtl
scas
out
adc
inc
imul
jecxz
dec
add
or
fsubs
xchg
clc
dec
sub
out
jne
jl
icebp
movsb
sbb
in
mov
jnp
scas
mov
xor
call
add
xchg
shlb
or
push
cmpsl
mov
lock
sti
push
aad
sub
push
push
mov
lret
dec
xor
cmp
pop
scas
sbb
pop
cmpsl
lods
pop
push
ficomps
push
mov
xor
sub
sub
or
ficoms
cs
push
popf
pop
sub
inc
mov
fnsave
push
test
or
les
xchg
push
and
jb
sub
bound
rcr
mov
mov
xchg
adc
rcrb
mov
fwait
and
cmp
pop
cmpsl
divb
sub
pop
jb
push
pop
add
pop
mov
btc
jg
call
and
movsb
icebp
mov
cltd
fs
aas
aaa
pop
addr16
push
aam
jp
shrl
mov
outsb
fdivrs
jg
cmp
mov
adc
leave
jnp
dec
aam
sub
jge
jge
jmp
inc
pushf
mov
add
mov
xor
nop
inc
inc
sbb
fiadds
dec
mov
mov
cmp
repz
sti
testb
sbb
lock
lea
outsl
mov
lods
pop
jae
push
out
jne
in
hlt
xor
xor
xchg
out
loopne
pusha
sbb
mov
and
in
adc
sub
xchg
ret
mov
invd
cmc
sti
xor
add
outsl
mov
push
xlat
xchg
xchg
jno
fsubrp
mov
test
xchg
pop
or
fmuls
jae
xor
loop
cld
data16
pop
insb
mov
and
xchg
shl
push
dec
xchg
mov
je
pop
adc
movsl
in
into
push
mov
xor
loopne
cli
popa
sbb
adc
cld
fadds
iret
jo
adc
sbb
push
jnp
jmp
js
push
lret
xor
roll
xchg
jmp
mov
cmp
leave
out
mov
test
subl
push
cmc
add
and
dec
pop
mov
xchg
je
pop
pop
popa
xlat
mov
cltd
leave
xchg
fs
lea
dec
andps
fadds
mov
push
fwait
and
push
loop
cmp
add
sub
add
ljmp
gs
xor
jmp
or
or
aas
fisttpll
add
and
gs
cmp
mov
add
add
pushf
xchg
mov
push
ja
bound
imull
xchg
jecxz
mov
cmp
lret
and
fdivrs
and
xor
push
and
and
mov
mov
lds
and
adc
jle
mov
xchg
mov
ret
mov
out
cmp
or
mov
or
out
aas
fidivrs
and
or
xor
pop
mull
add
xchg
cmpl
adc
movsl
mov
out
shlb
andb
fs
test
adc
in
jmp
scas
dec
pop
outsl
xor
popa
mov
cmp
lret
ljmp
inc
repz
pop
cmp
dec
mov
imul
mov
lahf
add
cmp
mov
xchg
je
pop
and
test
stc
xor
enter
pushf
inc
jno
hlt
push
adc
lock
mov
cmpsl
push
mov
lds
test
mov
mov
sbb
andl
sub
sbb
fwait
mov
sti
cmp
cli
adc
ficoml
mov
fmull
nop
xchg
insb
push
je
xchg
mov
cld
not
fstps
or
pusha
dec
imul
sbb
and
loope
loop
xor
mov
and
cld
ss
sub
cmp
pop
lods
test
dec
pop
add
xchg
out
movsl
sti
xchg
mov
in
cmp
jbe
push
mov
cmp
mov
mov
mov
stos
xchg
sub
push
inc
mov
lds
stos
xchg
ss
in
call
push
dec
and
pop
xor
es
inc
shl
adc
idiv
out
aad
xlat
pop
push
lahf
divl
jl
sub
pop
push
out
popf
lret
outsb
push
xor
inc
add
out
mov
add
jmp
out
sarb
add
dec
adcb
mov
mov
jno
mov
enter
push
pop
or
insb
adc
rcrb
test
test
test
fisubrs
and
push
add
push
mov
addb
ja
xchg
bound
stos
stos
scas
testb
ret
stos
negl
dec
pop
in
cmp
mov
add
push
data16
daa
cmc
sbbl
lock
rol
push
mov
xlat
add
pop
sub
lods
dec
std
enter
ja
je
iret
inc
aas
out
das
or
sbb
pop
add
ss
bound
sub
aas
sbbl
mov
fists
add
mov
pop
or
lds
iret
mov
movsb
hlt
sar
xlat
inc
mov
mov
jl
push
inc
adc
aad
aas
loope
dec
cld
rcr
movsl
iret
lahf
push
sub
fs
cld
sti
or
inc
xchg
lds
cmp
push
inc
test
sbbl
rclb
inc
cmp
jo
popf
mov
out
cmp
cmp
adc
sub
repz
or
mov
sbb
in
lret
jne
mov
mov
pop
jo
xor
xchg
orb
fwait
xor
cmp
rcll
into
pop
pop
in
je
push
inc
xor
push
cwtl
mov
stc
movsb
push
xchg
sbb
pop
sarl
mov
mov
add
xchg
push
out
or
rep
pop
jle
push
xor
fcmovne
lods
xchg
cltd
in
cmc
iret
inc
or
mov
or
movb
and
jg
mov
es
xor
les
push
adcb
or
sbb
sub
push
ret
out
ret
add
xor
jmp
clc
push
bound
mov
mov
adcl
push
inc
adc
fwait
inc
and
add
les
add
dec
es
mov
arpl
test
in
xchg
fstp
jp
cmc
push
out
int3
xchg
bound
pop
pop
clc
in
iret
outsl
adc
push
lahf
mov
or
orl
fs
lahf
and
lea
in
jo
push
add
sub
aas
push
out
push
maskmovq
mull
out
rorl
mov
out
xchg
sub
xlat
test
xchg
dec
push
cmc
jge
jns
stc
roll
xchg
in
pushf
push
inc
dec
movsl
xchg
or
xchg
inc
in
sbb
enter
sub
push
add
in
je
scas
shll
nop
sub
rdpmc
jno
xor
sbb
jmp
leave
pushf
and
push
addb
xchg
inc
testb
and
lea
sub
mov
or
inc
js
jle
push
iret
insl
cmp
ja
scas
adcb
pop
cld
mov
pop
addr16
call
xchg
mull
jne
cmp
add
inc
or
add
test
mov
popf
loopne
leave
sub
sub
arpl
cmp
jmp
push
mov
push
fisubrl
fs
xor
iret
outsb
pushf
outsl
repz
addl
dec
cmpl
jns
xor
dec
popa
or
dec
mov
pop
sub
mov
stos
pop
lcall
sbb
mov
adc
and
lret
xor
popf
xor
dec
xor
sbb
xchg
std
scas
jmp
or
lods
cmpl
scas
jmp
loop
lahf
xchg
cmp
pop
pop
mov
mov
xchg
and
ret
loop
sbb
push
lret
and
bound
in
pop
outsb
mov
fwait
or
sub
sarl
lds
mov
add
xchg
rolb
jns
fildll
mov
test
jne
jo
cli
pop
imul
pop
cmpsl
inc
fyl2xp1
lcall
aam
cli
mov
cmp
xchg
mov
mov
test
fdivl
pop
mov
fsts
xor
scas
outsb
lahf
in
insl
add
testl
movsl
push
add
and
push
lods
dec
fmul
pop
mov
cmp
mov
not
mov
sbb
dec
mov
mov
adc
mov
pusha
push
inc
ror
sub
xor
xor
dec
inc
es
cwtl
into
aam
inc
cmp
dec
xchg
bound
mov
lcall
andb
lods
push
cmpl
sbb
mov
xchg
popa
cmpsb
data16
dec
insb
cld
mov
push
imul
sub
fdivl
ljmp
fdivs
inc
sub
xchg
sbb
aad
or
add
loop
pop
shrd
jle
outsb
inc
push
or
push
insl
pop
mov
cmp
rcll
inc
push
out
insb
jg
in
xchg
pop
shrb
sub
aas
jae
xlat
fidivl
xor
fucom
sbb
cld
scas
push
pop
mov
movsb
lock
sahf
inc
leave
lcall
mov
push
aad
push
lods
and
sbb
and
enter
ret
jo
cli
sub
adc
pop
push
pop
push
fdivs
mov
cmpl
inc
and
lds
sub
out
xchg
mov
dec
lds
jmp
lea
lcall
idivb
push
xor
or
push
movsb
sbb
xchg
sar
cli
imul
mov
das
mov
push
dec
imull
adc
rclb
inc
xorl
ds
cmp
cmp
mov
and
sbb
mov
push
or
sbb
outsb
lret
mov
xor
enter
push
shl
add
mov
loope
adc
inc
test
test
push
jo
mov
repz
add
repnz
fs
mov
adc
add
push
dec
sbb
mov
push
movsl
mov
xchg
loope
leave
inc
xor
pop
and
xchg
xlat
mov
pop
xchg
cmp
fimull
ds
xchg
je
push
dec
cmc
sbb
xchg
adc
and
popa
jg
mov
xor
inc
xor
pop
aam
push
pop
dec
shll
pop
loope
push
jle
adc
shrb
pusha
rolb
mov
loop
nop
sar
sarl
rolb
scas
cmp
xor
inc
cmp
and
testb
xchg
jp
mov
xor
es
in
pshufw
cmp
jmp
shrl
movsb
lret
lds
leave
push
push
ret
inc
in
ret
insl
xchg
test
add
adc
push
cwtl
sbb
ds
lcall
into
or
xchg
push
sahf
out
dec
out
call
pop
sub
push
lock
cmp
inc
dec
test
or
jp
inc
in
jg
outsb
adc
add
adc
jmp
out
sbb
and
adc
lods
xchg
std
movups
jbe
mov
iret
rcrl
xorl
pop
clc
daa
cwtl
sub
int
fs
or
movsb
je
test
xchg
push
push
adcb
cmp
ljmp
mov
jmp
push
mov
test
gs
dec
out
fadd
adc
stos
cmc
mov
loope
cmc
sub
fbld
loop
cld
xor
das
repz
fldcw
sti
jp
mov
jecxz
and
add
jmp
into
jo
adc
stos
mov
adc
std
enter
flds
cmp
inc
addl
cmpsb
jns
sbb
data16
push
jl
aas
insb
imul
fcoml
jnp
fwait
cmp
pop
pop
negl
insl
xchg
or
xor
mov
mov
cmpsl
pop
dec
dec
rorl
imulw
xchg
cmpsb
jbe
outsl
int
in
mov
mov
mov
jg
jmp
push
inc
ds
push
push
mov
int
outsl
mov
movsb
jo
cltd
xlat
or
inc
inc
fwait
lret
adc
or
mov
inc
push
mov
and
test
xchg
mov
sbb
xor
pop
mov
fwait
adc
push
mov
pop
push
in
jl
adc
xor
push
add
sub
push
sub
out
rcrb
and
xlat
aam
fwait
push
lcall
or
mov
movsl
add
and
arpl
mov
cwtl
cmp
loope
sbb
outsl
nop
mov
lds
mov
xchg
movsl
outsb
std
jb
sub
lret
mov
sbb
push
pop
test
push
les
sarl
sbb
loope
stos
or
xor
mov
mov
mov
jl
xor
ss
hlt
hlt
push
sahf
lea
fdivr
lcall
adcb
pop
xor
je
pusha
inc
rclb
jge
insb
mov
jmp
or
lea
data16
cs
push
push
mov
mov
or
and
lea
push
lret
into
push
out
cmp
pop
mov
jnp
mov
dec
pop
mov
cmpl
lahf
and
push
iret
fldenv
push
subl
stos
pop
cmpsb
adc
pusha
mov
ret
or
lds
jbe
gs
push
stos
or
pop
arpl
xchg
loope
xchg
jmp
inc
fmul
jg
dec
mov
sbbb
iret
pusha
mov
mov
jmp
sti
inc
push
mov
in
movsb
ds
pop
mov
xchg
pop
jecxz
insb
outsb
inc
loopne
popf
inc
mov
incl
notl
idivl
outsl
data16
xchg
setbe
test
push
jle
loopne
xor
lods
or
mov
fidivrl
sbb
push
in
jl
push
push
out
add
or
andb
push
sbb
int3
mov
clc
subl
xchg
decb
mov
and
and
pusha
lea
jmp
jge
mov
lret
lea
mov
mov
mov
dec
sqrtps
adc
sti
scas
fdivrs
pop
test
cmp
ds
mov
xor
add
movsl
adc
mov
mov
xor
adcl
pop
testl
jne
test
sbb
xchg
incb
incb
jp
repnz
ret
lods
test
in
or
fidivrl
in
sbb
lret
ljmp
imul
out
cmpps
mov
and
enter
mov
sbb
shl
dec
in
fisttpll
cmp
sub
subb
sbbl
add
adc
jns
push
fs
mov
insb
xor
push
sbb
jne
add
pop
outsb
add
enter
mov
xchg
push
push
insl
mov
faddp
push
adc
fldenv
xchg
cmpb
sub
or
cmp
or
fwait
or
pushf
cmpsl
int3
loope
cmpsl
mov
dec
dec
sbb
inc
outsb
mov
xchg
ja
jle
iret
aad
into
sbbl
dec
adc
sbb
into
les
sub
sbb
jbe
adc
fsubr
mov
dec
mov
shrb
loopne
or
stos
lods
xor
jo
xor
jnp
dec
addr16
lea
rcr
push
mov
sbb
pop
mov
pusha
aaa
stc
push
push
xchg
loopne
movsb
pusha
lea
push
mov
pop
jns
gs
inc
lret
vpsubusw
in
cmpsl
inc
mov
ljmp
pop
cltd
push
popa
in
enter
pop
insb
lret
mov
mov
cmp
lret
mov
pusha
add
dec
out
shrb
mov
mov
cmp
outsl
dec
movd
fisubl
adc
or
stos
inc
sti
mov
cmp
repz
lahf
fsubrl
xchg
pop
std
inc
pop
push
rorb
and
out
in
cmp
dec
push
dec
pop
out
mov
add
test
adcb
pop
xadd
add
xor
cmp
insl
imul
sub
mov
lahf
out
sbb
sub
push
adc
and
push
xchg
jne
std
adc
xchg
les
aas
pop
push
shlb
addb
gs
push
mov
xchg
sub
lods
rorl
fimuls
clc
xchg
je
outsb
mov
sub
mov
add
shlb
mov
out
lods
int3
inc
cmp
insl
adc
mov
mov
loope
outsb
rol
xor
mov
pop
mov
nop
lods
sbb
xchg
sub
mov
jne
or
in
bound
cld
push
mov
xchg
cmp
add
and
mov
xchg
rcrb
jno
mov
movsl
jns
imul
test
cwtl
add
clc
or
push
mov
jo
cmpsl
jp
lahf
cmp
ret
xor
mov
out
push
and
push
mov
cmp
loopne
cmpsl
addr16
imul
loop
mov
xchg
nop
lret
sahf
out
shlb
das
jp
push
lods
mov
and
ds
cmc
aad
insb
cmp
aam
and
rorb
push
pop
das
pushf
cltd
dec
cmp
stos
cmp
loope
jnp
in
enter
push
add
in
in
lcall
sbb
sbb
jne
idiv
repnz
push
or
clc
cltd
int
mov
and
push
mov
xlat
inc
adc
mov
aaa
sub
mov
and
lea
xchg
xor
sbb
je
push
xor
xor
or
mov
ljmp
add
in
push
or
push
jecxz
pop
or
fdivrl
fnstsw
test
das
jle
repz
lock
shl
mov
push
cs
push
mov
mov
mov
mov
movsl
add
xor
dec
pop
or
lret
shl
mov
test
inc
jae
xchg
push
mov
adc
mov
ret
adc
dec
add
jle
sbb
push
fsubr
and
sbb
push
mov
xchg
xor
outsl
dec
stos
jnp
daa
pmaxub
xlat
popf
inc
bound
lods
out
dec
mov
or
push
mov
hlt
arpl
push
and
dec
and
out
xchg
ror
js
cmp
cmp
and
loop
das
jecxz
mov
add
loope
sub
insb
mov
lea
mov
popf
ja
nop
sahf
add
fisttpl
xchg
dec
adc
or
insl
lret
adc
pop
scas
fisubrs
repnz
pushf
hlt
sbb
lock
push
lods
push
js
mov
dec
insl
shl
outsl
jnp
mov
xor
xchg
int3
and
aas
mov
mov
xor
je
call
cmp
pop
sahf
xor
out
idivl
push
hlt
enter
sub
cli
xor
inc
rclb
lock
and
jbe
sub
xor
push
mov
les
in
pushf
cmp
sub
int3
insb
sahf
shrl
hlt
mov
add
push
or
std
pop
daa
inc
jmp
dec
sbb
mov
jb
loop
xor
mov
aas
aad
mov
lret
inc
int
addr16
stc
loop
scas
push
nop
into
mov
loope
sahf
sahf
mov
xor
adc
and
popf
std
mov
jp
aaa
and
repz
sahf
and
jnp
adc
jmp
gs
cwtl
push
jo
mov
and
fsubl
outsb
aaa
cmc
lahf
add
mov
sub
out
rorl
shr
addr16
test
cmp
div
mov
cwtl
fsubl
mov
negl
sub
push
leave
fildl
cmovs
packuswb
in
dec
cmpsl
int
daa
push
pop
jno
testb
hlt
adc
jp
add
push
jmp
subb
or
addl
sub
enter
push
js
jle
in
scas
in
xor
sbb
movsl
shr
movsl
cmpsb
outsl
sub
lock
outsb
dec
mov
cs
jbe
jg
dec
sub
sbb
aam
sahf
sub
sub
rcll
xlat
add
outsl
sub
mov
fcmovnb
in
inc
mov
mov
and
negb
notb
mov
repnz
xchg
dec
fwait
mov
cmpsl
lock
mov
pop
cli
and
xor
mov
mov
or
test
mov
xchg
mov
add
jbe
pop
mov
aaa
inc
mov
lahf
adc
push
xchg
jmp
ljmp
dec
pop
fmuls
imul
push
add
mov
mov
mov
les
sub
or
cmp
inc
hlt
jmp
out
out
fildl
imul
lret
ja
pop
cmc
aas
mov
fcompl
lods
mov
cld
es
mov
popa
and
and
xchg
sub
push
ret
out
sahf
inc
xor
inc
sub
outsb
jge
test
in
or
int3
mov
inc
pusha
mov
pop
jmp
xchg
outsl
fs
push
adc
in
push
dec
adc
push
movsl
xlat
cmpsl
sti
mov
pop
adc
pop
imul
xchg
mov
add
mov
or
pop
xchg
dec
bound
add
popa
push
xchg
dec
xchg
dec
ja
jbe
inc
scas
int
into
lods
stos
mov
xchg
mov
pop
incb
mov
mov
sub
push
xchg
inc
or
les
insb
mov
cmpsl
mov
dec
fwait
push
sar
outsl
loop
subl
test
xor
clc
pop
sbb
into
add
pop
in
stos
lods
stos
out
ret
cld
aaa
jmp
subl
lods
pusha
pop
fisubrs
sahf
push
mov
xchg
iret
push
hlt
push
lods
push
jp
pop
jbe
lods
pop
das
mulb
aas
cmpsb
pop
cmp
jmp
lods
andb
dec
pop
movsl
pop
pop
andl
lods
inc
stos
es
ret
mov
popa
mov
in
xchg
adc
in
leave
mov
mov
testb
aaa
aam
sbb
inc
dec
pop
or
xor
and
xor
sub
mov
fdivl
sahf
cli
stos
fs
arpl
mov
mov
outsl
mov
cwtl
iret
stc
sbb
jnp
push
loop
icebp
jb
loopne
pop
mov
mov
dec
loope
cld
sub
andl
jns
icebp
push
sahf
push
fidivl
jbe
into
or
or
int
xor
cmp
imul
adc
shr
inc
aas
pop
scas
rol
fs
dec
xchg
test
jno
call
lock
xchg
sarl
bound
or
mov
cli
sbb
xchg
mov
mov
and
mov
in
es
je
call
aaa
testb
pop
cltd
and
ss
lods
cmpsb
xchg
inc
stos
add
mov
gs
jae
mov
scas
shl
push
mov
dec
js
add
cmpsl
cmp
movsb
fcmovu
lea
sbb
mov
mov
adcb
push
imulb
mov
mov
cmp
mov
pushf
jg
mov
adc
pop
popa
pop
pop
fst
jge
scas
je
xor
cltd
push
xor
cli
and
flds
movsb
add
out
pop
push
cltd
aam
mov
pushf
test
mov
xor
adc
push
xchg
mov
xchg
cwtl
in
nop
in
data16
and
dec
mov
in
mov
out
mov
icebp
sbb
sub
pop
addr16
push
shlb
dec
insb
jne
cli
add
mov
or
dec
test
or
enter
ja
jns
xchg
xchg
orb
cmp
shlb
inc
add
push
aaa
sbb
mov
mov
scas
out
inc
repnz
sbb
mull
out
jle
cmp
daa
sbb
lock
xchg
mov
pop
mov
loopne
into
fcmovnbe
stos
mov
ss
inc
or
popa
es
clc
negb
test
xchg
jne
subl
xchg
das
xor
mov
push
inc
fimuls
daa
sarb
mov
jne
repz
fistpl
mov
jae
mov
mov
loope
aad
aad
mov
int
add
sbb
aad
mov
clc
sub
mov
push
int
mov
jp
add
out
mov
push
xchg
std
lcall
and
cwtl
int
xchg
hlt
or
sub
xchg
add
pop
pop
cmp
xor
fcomps
pop
pop
rcrb
js
mov
mov
push
xor
adc
leave
aas
ds
nop
mov
push
add
adc
jbe
cmp
cmp
test
mov
ficompl
and
xchg
insb
mov
out
stos
push
pop
mov
sbb
sub
aaa
ret
xorl
mov
in
adc
jbe
fists
dec
adc
lret
and
jg
adc
pop
or
mov
jnp
xlat
cmp
stc
xlat
adc
out
mov
out
sarb
rcr
stos
loop
cmp
dec
xchg
mov
xchg
xchg
loope
fwait
inc
xchg
adc
adc
and
negl
pusha
outsl
mov
js
push
mov
cld
js
or
out
movsl
fdivrl
call
iret
or
es
cmc
jnp
enter
pop
stc
xor
mov
iret
and
test
jo
add
loopne
ror
xorl
sub
cwtl
sub
in
or
incb
test
mov
stc
push
inc
fwait
pusha
jne
dec
inc
ud2
xor
das
sbb
add
ror
inc
icebp
fildll
pop
or
xor
xchg
rolb
dec
jbe
xor
mov
add
repz
shrb
xor
add
shlb
cmpsl
out
push
lods
ljmp
popa
jle
ret
shll
imul
arpl
mov
pop
inc
pop
lret
and
vcmpps
incl
fiadds
sbb
test
or
lcall
fidivrl
push
pop
sub
jecxz
outsb
push
lds
aas
sarb
into
sub
pop
jle,pn
iret
xchg
lret
aas
cmpsl
mov
sbb
jmp
sbb
jo
push
mov
mov
mov
sahf
aad
js
mov
test
fidivrs
mov
sbb
out
or
pop
lcall
repnz
ss
push
xchg
or
test
or
addr16
fcomps
or
leave
addr16
push
cmp
and
pop
inc
test
pop
adc
push
xor
jp
pop
jle
mov
cmpb
xchg
pop
loop
pop
jmp
mov
ljmp
cmpsb
jle
sbbb
int3
mov
and
or
stos
sub
xor
mov
popf
leave
ret
mov
sbb
inc
fdivs
mov
int3
test
filds
sub
sub
js
fsubrs
push
inc
push
mov
ljmp
add
inc
or
inc
jg
in
sbb
outsb
xchg
in
push
bound
shr
jo
psubsb
sbb
mov
ss
sub
lods
loopne
aam
rclb
cmp
pop
imul
jbe
fsubl
pop
repnz
rolb
icebp
testl
cmc
jge
dec
ret
int
loopne
fistpll
push
insb
daa
sbb
mov
shll
iret
pusha
jnp
dec
dec
js
js
lret
cltd
inc
pop
les
mov
cmp
push
js
dec
sub
pop
dec
sub
inc
adc
ss
cmpsl
pop
shll
js
in
into
imul
adc
fsts
mov
mov
sbb
pop
lock
push
scas
aam
xor
stos
pop
or
dec
imul
lock
push
js
aam
addl
rcrl
fsub
jnp
cmp
das
jle
popf
insl
push
stc
cli
arpl
out
in
gs
dec
shlb
mov
or
pop
ljmp
mov
rcrl
fildll
sub
sub
imul
ja
sub
inc
and
cmp
roll
jo
subl
sub
cmp
xchg
lahf
and
sahf
cld
cmp
hlt
cld
out
dec
repz
into
xchg
push
fisttpll
sub
ljmp
cs
mov
cs
fcmovbe
not
dec
loopne
jle
and
fistpll
stos
pop
push
pslld
sahf
sbb
stc
arpl
add
mov
sahf
adc
cmpb
or
iret
clc
dec
mov
mov
addr16
dec
push
jle
mov
sbb
add
flds
out
icebp
ja
fbld
mov
repz
jno
imul
xchg
jl
mov
stos
pop
jecxz
adc
xchg
mov
pop
push
imulb
scas
and
rol
push
enter
jge
jne
or
mov
movsl
adc
xor
mov
cmc
pop
out
movsb
mov
dec
shl
jge
pop
mov
sbb
test
faddl
lret
fsubrs
cmc
push
adc
loopne
jle
pop
xor
fcomi
sarl
aam
mov
dec
test
inc
mov
lods
sub
pop
stos
loope
adc
add
push
adc
inc
jbe
outsl
pop
nop/reserved
roll
pusha
mov
mov
addr16
jle
dec
push
mul
push
cmpsb
pop
mov
inc
inc
mov
flds
xchg
add
push
scas
bound
or
and
ljmp
imul
repnz
and
mov
pop
insb
insl
outsb
aaa
mov
push
cltd
das
pop
cmpsb
xor
fs
inc
cmp
imul
push
sub
mov
loope
push
cmp
add
rclb
jge
lock
cld
scas
pop
loopne
cli
inc
push
and
in
or
cmpsb
lea
dec
rolb
mov
xchg
mov
push
xlat
mov
es
push
xor
sub
pusha
push
mov
cmpsl
insl
lahf
sbb
xchg
cmp
push
fld
lods
mov
std
or
and
repnz
test
mov
xchg
xor
iret
lods
push
out
dec
faddl
mov
xchg
pushf
push
sbb
inc
pop
sub
sbb
lret
add
mov
mov
mov
das
insl
insb
lds
push
sahf
fists
and
shlb
adc
int3
rcr
mov
mov
and
iret
frstor
jbe
sub
add
xchg
ret
jg
dec
inc
xchg
cs
inc
mov
xor
lods
xor
andl
and
or
ljmp
add
cmpsb
fisubl
or
les
jg
ret
fcoml
sbb
popa
push
mov
mov
push
xchg
cld
addr16
and
test
scas
ret
mov
out
xor
jnp
push
stos
xchg
xor
cmc
sahf
xchg
or
cmpsb
pop
pop
xor
mov
mov
mov
aad
or
cmpl
adc
cmpsb
add
xor
fnstenv
push
fisubl
inc
xor
add
push
inc
out
or
outsl
mov
movsb
gs
or
mov
iret
push
mov
int
jg
test
xchg
ficoms
loopne
or
out
and
inc
dec
or
andl
inc
ret
lcall
cmpsb
jnp
dec
out
or
mov
or
scas
mov
jns
mov
daa
lret
stc
test
out
test
mov
mov
repz
jb
mov
xchg
push
sub
in
in
jno
jb
jns
xcrypt-cbc
cmpsl
xchg
jno
in
xor
jns
insl
fnsave
lds
fnstenv
test
push
lret
mov
out
push
fiadds
mov
int
jge
clc
mov
call
adc
in
mov
test
in
je
ss
mov
sub
pop
aad
push
sarl
out
cmc
insl
mov
dec
es
pushf
push
icebp
add
sub
arpl
add
lret
ret
movsl
push
push
cltd
xor
filds
inc
mov
push
jl
test
mov
inc
mov
fsubl
add
movsl
popf
loop
sbbb
xor
test
cmp
cmp
outsl
xlat
lret
imul
fs
rsm
adcl
call
mov
xchg
and
aas
push
xchg
hlt
popa
push
rcrb
push
std
pop
push
imul
out
cmpb
lahf
cs
orb
mov
aam
dec
jle
add
mov
sub
call
test
adc
dec
cmpsb
aam
mov
ret
pop
pushf
cld
pusha
fldl
dec
loop
or
sub
test
pop
adc
pop
adc
and
bound
inc
cmp
mov
sahf
pushf
jmp
pop
hlt
in
mov
mov
pop
aam
cmp
cmp
mov
movsb
loopne
faddl
mov
cmp
jle
test
or
mov
out
in
movl
stos
fwait
and
popa
cs
cmpb
mov
jne
out
shl
dec
xchg
adc
jbe
pop
rorl
ret
into
dec
stos
rep
inc
cmp
cmpsb
mov
loopne
inc
jnp
or
sub
push
hlt
lahf
sbbb
arpl
ret
xchg
call
popa
imul
out
outsb
sarl
popa
lds
push
add
std
sub
shrl
jnp
iret
das
push
popf
inc
movsl
xor
movb
inc
bound
aad
es
mov
mov
dec
fmull
lods
stos
pop
adc
ds
cmp
inc
aam
adc
lahf
mov
inc
mov
mov
dec
gs
fmuls
cmp
inc
lahf
push
xchg
dec
hlt
lea
popa
lock
popf
outsb
mov
fs
jae
jae
pop
lods
inc
cmp
icebp
enter
bnd
xor
sbb
fsubp
xchg
aad
and
int3
bound
inc
inc
lods
pop
scas
mov
xor
add
and
xor
popf
add
mov
or
xchg
int3
mov
cmpsl
xor
or
fildl
test
test
adc
daa
ret
imul
jg
pop
dec
icebp
inc
push
sbb
mov
ljmp
push
mov
sub
mov
and
or
aaa
mov
lret
jmp
sbb
mov
bound
lods
out
pushf
repz
rorb
out
imul
jno
jecxz
call
pushf
ja
sti
hlt
inc
adc
repnz
dec
jge
scas
shrl
sbb
xor
push
push
push
testb
lods
movsb
filds
pop
test
mov
ss
sbb
sub
cmp
cmc
lret
lret
jne
jecxz
and
pop
adc
add
js
sbb
push
out
hlt
lcall
xor
test
push
add
shr
push
push
adc
add
pusha
inc
std
inc
jl
les
js
push
js
dec
pop
pop
js
xchg
ljmp
cmc
lret
cmp
and
mov
sub
mov
jmp
dec
and
xor
insb
movsl
or
dec
insl
pop
push
and
dec
rcrl
cmc
adc
jo
dec
dec
imul
pop
mov
je
adc
mov
iret
stos
movsb
lock
mov
fisubrs
ja
mov
dec
adc
mov
pop
mov
daa
jp
adc
cmc
jo
jmp
lahf
mov
push
incb
aaa
repz
hlt
mov
adc
inc
fnstsw
pop
mov
add
loope
sbb
xchg
sahf
sbb
int3
push
dec
xchg
leave
ljmp
out
mov
cmp
sti
cmp
fs
in
std
jae
loop
pop
in
sub
scas
sbbw
inc
js
add
xchg
inc
xchg
jb
xor
push
jbe
sub
loopne
repnz
xchg
pusha
repz
sub
pusha
imul
or
mov
popf
mov
jb
fnstsw
rcrb
out
mov
jbe
mov
incl
jns
mov
xchg
cmp
pop
push
dec
mov
pop
ret
push
xor
mov
push
sbb
js
mov
in
mov
fisubs
std
shlb
jle
dec
iret
ret
jge
push
es
ljmp
mov
orb
je
dec
mov
inc
mov
and
mov
int
or
pop
jo
cs
shrl
sbbl
mov
movsl
nop
stc
js
scas
ss
or
stc
mov
clc
pushf
stos
cmp
push
cmpb
aad
out
push
je
fsubrs
rol
add
dec
pop
push
mov
xchg
or
sar
cs
jecxz
dec
pop
xchg
leave
mov
xor
aad
jp
mov
std
sti
int
pop
lret
ret
pop
mov
mov
rorb
dec
lods
push
push
sti
mov
and
and
out
or
orl
dec
jmp
stc
jae
fdivrs
scas
fsts
jmp
arpl
sarb
rclb
xchg
sarl
pop
mov
dec
sbb
mov
subl
xchg
call
into
stos
lea
push
stc
ss
into
mov
test
das
imul
fadd
push
hlt
pop
and
lcall
and
jno
int
xchg
mov
mov
fs
adc
xchg
insb
jno
xchg
adc
icebp
fiadds
notl
int
mov
pop
clc
push
adcb
jge
rcll
fs
insl
cli
in
scas
add
pusha
outsb
lea
lahf
or
jle
xor
xor
inc
mov
push
adc
scas
mov
icebp
sub
repnz
fs
xchg
insb
jns
subl
sub
lock
xchg
push
xor
and
cld
in
pop
sub
subb
loope
mov
sub
fadd
leave
fistl
inc
xor
push
popl
pop
cli
jae
mov
ja
xchg
icebp
les
arpl
cmp
stos
iret
mov
jle
cmp
js
js
mov
lea
dec
sahf
out
cmc
add
cmp
pusha
push
hlt
in
add
sub
inc
sub
push
inc
cmc
jle
jnp
cld
ret
xchg
lods
clc
bswap
sub
cs
mov
popa
pop
push
loope
addl
sbb
repz
lods
les
push
ret
and
rcrb
inc
mov
dec
sub
fadds
mov
leave
mov
sub
jp
cltd
scas
sbb
lahf
sbb
out
push
stc
adc
stos
push
mov
shlb
adc
sub
imul
xchg
xchg
pop
mov
outsb
clc
sbb
xchg
mov
push
jae
aas
mov
outsb
scas
daa
lahf
mov
inc
mov
xacquire
mov
add
addr16
orb
mov
cmp
xchg
pop
cmp
mov
or
xchg
dec
jo
repnz
inc
pop
pop
call
mov
xchg
jmp
sbb
addr16
aas
loop
mov
sub
mov
mov
mov
dec
fwait
mov
rorb
xchg
sub
inc
xor
jne
adc
nop
lock
jnp
jg
push
aas
pop
std
jo
lret
push
rorb
fsubrs
out
and
popf
xchg
jmp
aam
cld
mov
pop
arpl
rclb
inc
push
pop
xor
or
jg
or
daa
int
fildll
jp
push
divb
fildll
xchg
xchg
add
test
adc
xor
cmpsb
mov
xlat
aam
and
mov
rcrb
cld
sub
stos
test
shrl
outsb
jne
mov
jge
icebp
js
or
add
les
dec
test
fwait
dec
xor
dec
jp
in
sbb
cli
shlb
fimuls
xor
das
in
jbe
xlat
stc
adc
xor
aam
jecxz
jno
lods
lods
and
clc
cmc
xchg
cmc
scas
dec
jne
clc
push
test
insb
lret
xor
paddsb
inc
jecxz
mov
mov
mov
ss
sbb
pop
bound
rcll
push
jne
movl
sbb
mov
sub
jae
xor
loopne
dec
jl
test
cli
int3
dec
ss
mov
aam
test
fadds
scas
mov
jmp
or
push
or
xchg
push
js
popf
pop
subl
add
push
mov
inc
add
lods
jne
rcr
ret
repz
pushf
mov
lock
xor
hlt
ljmp
repnz
das
pushf
mov
cwtl
ss
mov
jge
incb
cltd
inc
bt
mov
iret
hlt
add
je
jne
scas
sub
fldt
out
pushf
das
xchg
imul
rolb
and
mull
shrb
add
jle
insb
stos
js
push
clc
orb
mov
xchg
fistpl
lahf
leave
ds
add
mov
dec
add
clc
out
rcrl
pop
pop
mov
cld
in
dec
jo
adc
mov
inc
stos
mov
and
mov
mov
dec
pop
pop
pop
sahf
icebp
mov
out
xchg
sarl
sub
fbld
mov
ret
and
mov
jnp
rep
into
outsb
cmc
aas
mov
cmpb
jmp
in
iret
inc
roll
or
stc
das
test
mov
lods
push
lahf
gs
jbe
or
or
sub
faddl
lea
movsl
pop
or
pop
xor
inc
xchg
jae
inc
sub
mov
mov
je
mov
push
jmp
movsb
js
xchg
pop
cmp
mov
push
inc
dec
fsub
push
xchg
ss
xor
push
mov
push
test
mov
push
jb
lods
adc
jae
ret
lock
sbb
inc
out
jmp
xor
pop
xchg
inc
jg
fwait
push
scas
adc
fldcw
movsl
insb
pop
or
cwtl
lahf
shlb
sbb
mov
pop
sub
push
setns
xor
aad
fs
idivl
mov
test
xor
xor
xchg
mov
pop
shl
cmc
mov
sub
mov
sub
rcrl
mov
push
and
addr16
sbb
movsb
adc
rep
outsl
cmp
divl
cmp
icebp
xchg
jmp
mov
inc
mov
outsl
rorb
in
les
bound
push
cmp
pusha
int
mov
loop
aaa
cmp
xchg
lcall
xchg
mov
sub
inc
mov
adc
xchg
adc
xor
or
icebp
test
inc
inc
xchg
scas
lds
mov
dec
push
sbb
shlb
and
cmpsl
adc
call
pop
jle
inc
inc
stos
mov
ficoml
shl
loop
mov
pop
js
in
data16
pop
ja
cmpsb
xor
adc
push
xchg
in
ljmp
push
sub
add
xor
dec
jle
je
cmp
stc
push
mov
xchg
arpl
out
lcall
xor
pop
faddp
cmp
lret
xchg
sbb
insl
mov
push
fs
ss
fidivrl
stos
pop
fwait
sub
sub
fstpt
add
scas
sub
imul
mov
paddsb
mov
xor
fistpll
and
sbb
xchg
pushf
adc
push
jb
loope
orb
js
push
add
imul
xchg
mov
mov
lods
xor
test
xchg
sub
daa
inc
dec
jae
push
clc
mov
xor
inc
push
jo
scas
pop
mov
pop
aas
in
push
adc
xlat
out
lret
stos
rcrb
jle
jne
xchg
imul
ja
ds
nop
cli
mov
lret
jle
fnstcw
addr16
fsub
shrb
gs
lret
test
mov
mov
scas
pop
js
sbb
lret
push
xchg
sti
mov
jb
mov
pop
call
fs
outsb
mov
adc
in
call
mov
jecxz
jg
push
xor
adc
insl
xchg
mov
fadds
icebp
or
pushl
cmpsl
divb
xchg
aad
push
push
js
mov
push
std
ss
and
push
jnp
jl
and
dec
lock
mov
push
daa
jmp
pop
xor
mulb
loopne
mov
jg
std
idivl
fisubl
aas
out
xchg
xor
pop
cli
pop
xor
aas
pop
mov
mov
insl
push
out
sub
dec
int3
sbb
cmpsl
data16
mov
jmp
jnp
lods
mov
int
flds
cld
sub
test
inc
adc
lds
push
movsb
jne
add
inc
arpl
fbstp
xchg
lret
pop
push
insl
jno
out
jecxz
mov
mov
aad
jg
sub
inc
mov
pop
out
pop
jp
int
int3
ret
cmpl
mov
pop
js
mov
lods
sahf
scas
dec
js
and
mov
jmp
mov
ds
loopw
aaa
xchg
js
sub
loop
sub
cltd
or
dec
pop
xchg
or
mov
pop
les
ret
jl
mov
mov
test
std
mov
ret
sbb
inc
dec
lods
jmp
mov
push
add
mov
inc
leave
and
and
dec
and
fldl
fcmovnu
cmc
test
inc
addl
cmp
stc
pop
out
xor
test
ds
mov
cs
stos
lea
xchg
push
sbb
or
cmp
jns
fcmove
loopne
push
stos
lds
fmuls
popa
shll
pop
cwtl
inc
lods
out
dec
and
bswap
xlat
lods
jg
mov
push
leave
jne
movsb
les
iret
aaa
mov
sbb
dec
clc
daa
call
pop
dec
pop
dec
lret
movsb
or
scas
fsubp
cltd
push
sbb
sahf
fs
jge
pop
pushf
mov
mov
insb
inc
xchg
sbb
inc
jle
jne
lock
fistpll
sbb
sbb
sub
je
lock
push
adc
xchg
mov
fs
sbb
outsb
push
in
inc
sub
cmp
cmp
xchg
in
popf
pop
or
sbb
imul
mov
dec
xor
out
xor
dec
ret
push
and
mov
dec
sbbl
pop
dec
mov
test
and
ss
mov
push
jbe
xchg
lods
inc
dec
or
inc
lods
adc
jle
test
stos
test
pop
in
data16
mov
add
mov
insl
loopne
dec
jge
xlat
dec
push
xor
add
movsl
loopne
xchg
cli
or
std
mov
lret
jbe
fwait
in
pop
or
inc
sub
imul
testl
jecxz
jge
and
leave
repz
jne
jecxz
or
test
sub
and
push
insb
mov
adc
inc
xchg
lods
add
push
call
leave
and
imul
mov
divl
movsb
in
in
dec
pusha
fwait
sarl
cmpsl
int3
sub
lcall
jl
jle
sahf
push
push
sbb
pop
fwait
mov
outsb
mov
lcall
lahf
fcomps
cld
xchg
rolb
rcr
pushf
mov
repz
jne
adc
and
test
and
push
pop
jecxz
repnz
popa
lods
adc
hlt
adc
xchg
imul
pop
sbb
js
aas
arpl
lock
sub
lods
or
xlat
cltd
mov
cmp
pop
flds
ljmp
test
jecxz
add
xor
add
or
test
scas
push
arpl
dec
cmp
cmp
int
add
ret
divb
xor
fstps
add
mov
sbb
xchg
fwait
pop
sbb
jnp
mov
pop
push
insl
or
mov
popf
xor
sbb
pop
cmp
jne
mov
cmp
movsb
ja
dec
or
jno
pop
stos
and
sub
leave
pop
outsb
stc
pop
dec
cmc
bound
in
outsb
loop
in
fisubrs
mov
pop
movsb
pop
fwait
sbb
push
imul
scas
mov
xchg
test
mov
int
arpl
xor
lret
adc
adc
dec
xchg
fisubs
shll
test
adc
cmpsb
inc
jp
sbb
xchg
leave
jle
push
ds
repnz
inc
ljmp
loope
mov
fcmovb
add
mov
cli
repz
pop
leave
enter
loopne
addl
adc
mov
outsl
dec
notb
jnp
ror
adc
ljmp
mov
loop
aaa
stc
and
cmp
and
or
cmp
pop
pop
inc
inc
mov
adc
test
ja
pop
cwtl
pop
pop
movsb
add
pop
repz
xchg
repnz
addr16
jle
inc
ds
mov
in
mov
add
fsubrl
cli
pushl
test
cmpsb
cs
dec
shrb
xchg
imul
mov
notl
push
jle
pop
cs
lret
sub
sub
out
adc
push
push
xchg
dec
mov
push
xchg
lret
sub
cmp
lea
push
out
jbe
and
add
and
sbb
in
lret
out
xchg
adc
cmpsb
rcrb
sub
cltd
jno
aaa
ret
test
bound
dec
push
push
jl
lds
in
inc
popf
lret
xchg
mov
adc
daa
sti
adc
pop
or
pop
fcmovb
or
out
out
iret
mov
mov
lahf
add
cltd
mov
xchg
jp
shll
pop
int3
add
jbe
mov
jbe
jbe
push
je
mov
int3
lea
lds
jmp
clc
mov
fwait
imull
icebp
sbb
aad
and
leave
inc
fdivrl
loopne
xor
out
add
mov
or
in
nop
pop
pushf
adc
daa
fucomi
bnd
filds
divl
pop
fisubs
push
dec
add
es
inc
movl
sti
push
sub
mov
ficompl
mov
and
inc
lods
sub
or
push
je
xchg
cmp
push
ret
test
inc
sbb
xchg
push
imul
stos
sub
pop
test
cltd
lret
jb
in
ret
mov
xor
xchg
aam
test
imul
dec
scas
iret
xchg
leave
sarl
cwtl
je
xor
push
jecxz
mov
cld
mov
cmc
pop
and
shld
pop
hlt
push
xorb
push
sub
sbb
mov
jne
add
sub
cmp
add
movsl
mov
scas
bswap
pop
sub
aas
adc
movsb
xchg
pop
sub
cmpsb
repnz
xorl
loopne
jno
loop
cmp
aad
adc
push
and
or
roll
mov
cmp
fbld
push
popa
pop
scas
or
stc
jp
leave
xchg
mov
and
mov
mov
mov
sub
ret
imul
out
aam
inc
jge
movsl
lret
sub
xor
mov
ds
xor
pop
adc
xchg
adc
sbb
inc
cld
mov
outsl
dec
mov
icebp
sbb
jns
push
fstl
pop
gs
shl
call
jb
mov
lock
stc
addr16
cmp
mov
jp
cmp
jo
lret
cwtl
loop
xor
dec
inc
mov
in
xor
pusha
ljmp
xor
dec
es
inc
xchg
push
mov
cmp
mov
test
inc
repz
pop
dec
ror
movsl
cmp
and
pop
shlb
mov
hlt
jne
cltd
adc
rcr
mov
push
ret
imul
fsub
out
lock
pop
insb
mov
xor
pop
xchg
xor
xor
pop
jp
dec
or
mov
sub
and
mov
js
hlt
movb
aam
dec
sub
pop
std
xchg
out
inc
rcll
sub
jo
mov
push
enter
int
adc
inc
push
jl
aad
mov
dec
jbe
and
imul
ss
sub
arpl
cmp
sub
jne
imul
es
push
push
mov
cmp
jns
loopne
fs
aad
push
add
pop
or
test
into
lcall
arpl
sbb
sub
ja
scas
lcall
ljmp
jo,pn
ljmp
sbb
xchg
fwait
cmp
nop
shlb
xchg
mov
sarb
jns
pop
xchg
lods
jmp
push
aad
mov
adc
sbb
hlt
xor
scas
xor
jne
shl
or
and
xor
or
insb
cld
into
adc
fidivs
repz
mov
cmc
enter
nop
cs
pop
fsubp
jb
rorb
jnp
pop
xchg
and
imul
sti
out
rcrl
push
sbb
jns
out
or
push
mov
dec
ljmp
mov
ret
cmp
dec
sub
mov
adc
pusha
pop
pop
idivl
repnz
adcl
push
repnz
jae
cwtl
xor
xchg
pusha
shll
in
or
insb
adc
jl
jp
mov
movsl
mov
arpl
inc
add
cmp
jg
mov
push
inc
ficoms
mov
mov
ds
push
sbb
mov
jne
mov
mov
rcl
mov
cli
adc
xchg
loopne
ljmp
sbb
ds
inc
mov
ret
push
imul
xlat
bound
scas
mov
and
push
inc
mov
xor
psubw
sub
mov
lds
fisubs
test
pop
adc
ss
leave
pop
clc
in
ja
ljmp
add
into
cmpsl
out
mov
mov
add
push
sbb
leave
mov
je
arpl
xchg
add
negb
jge
dec
or
mov
jecxz
leave
das
push
inc
push
stos
lock
lcall
cmp
in
sub
pop
mov
outsl
dec
js
hlt
xchg
adc
jle
rcrb
cmp
xchg
scas
sbb
adc
stc
dec
xor
cld
push
lcall
push
and
sbb
dec
sbb
or
mov
addr16
cmp
cmp
mov
lods
add
cmp
push
push
inc
fsub
sarb
and
inc
sarl
xchg
test
out
sub
inc
je
xor
mov
test
mov
inc
in
mov
mov
sub
sbbl
mov
or
and
adc
push
pop
push
scas
xor
sub
push
ret
pop
lods
das
incb
stos
mov
pusha
ss
jns
out
data16
icebp
iret
pop
mov
mov
addr16
dec
data16
ret
cmp
pop
hlt
popa
mov
cwtl
clc
icebp
shr
movb
ja
test
scas
jge
cmpsl
mov
and
aam
adc
data16
dec
jecxz
testb
rcrb
loope
test
push
cli
dec
mov
jne
mov
ficompl
or
mov
add
push
sahf
xchg
xor
int3
cmp
in
adc
xor
mov
pop
arpl
out
sub
mov
popa
movsl
mov
enter
dec
outsb
pop
mov
mov
jl
jns
pop
pop
mov
cltd
sbb
ss
sub
scas
mov
int3
mov
lods
pop
cmp
ret
xor
bound
fdivrs
popf
loope
cltd
inc
clc
scas
cli
adc
aad
out
xor
stos
dec
push
pop
xchg
and
addr16
add
scas
sub
jl
stos
sti
mov
ret
fstpt
cmp
adc
inc
xor
aam
aam
mov
adc
in
or
push
dec
insb
pop
inc
aam
adc
inc
mov
xor
cmpsl
repnz
or
pop
test
enter
dec
inc
ret
ljmp
dec
fdivrs
adc
mov
pmaddwd
scas
jae
mov
arpl
cmp
pusha
fistps
sbb
push
inc
or
or
hlt
test
std
xor
inc
mov
dec
mov
je
mov
cmp
push
push
xor
sbb
xchg
mov
jmp
jl
inc
push
je
cmp
sti
xor
mov
subl
push
inc
stos
imul
aaa
and
addr16
ds
stc
cmp
scas
push
call
jae
scas
push
fs
push
and
mov
insl
test
sbb
mov
notb
dec
mov
outsl
nop
push
push
mov
adcl
bnd
rcll
jae
mov
xlat
int3
mov
out
clc
mov
add
inc
das
push
jnp
divl
sub
clc
jns
xchg
push
adcb
cli
pop
sbb
push
hlt
data16
repnz
mov
cmp
mov
loope
mov
iret
fs
mov
mov
sbb
add
xchg
mov
xor
cmp
xchg
lret
arpl
enter
xchg
adc
xlat
xchg
mov
mov
iret
dec
in
movsl
pop
xor
add
imul
std
sarb
in
sbb
test
test
adc
pop
loopw
xchg
push
push
subb
dec
mov
xchg
sti
cld
pop
xchg
sarl
mov
push
xor
adc
pop
dec
enter
mov
aam
dec
push
or
nop
gs
adc
pop
ja
jmp
xchg
pop
and
sahf
push
subl
push
and
push
daa
scas
dec
mov
call
outsb
mov
insb
stos
dec
test
pop
mov
imul
dec
inc
cmp
mov
mov
gs
cltd
jne
xchg
or
jl
mov
cmovne
pop
cmp
test
jbe
xor
xor
iret
sub
cmpsl
adc
and
sbb
dec
cmp
in
shlb
aaa
adc
inc
cmp
je
repnz
sbb
add
sahf
xchg
and
push
call
fsubl
pop
xchg
mov
insb
insb
ret
jg
pop
mov
jno
in
cmp
add
and
xchg
lret
insl
cmp
es
int
daa
inc
vcvttsd2si
test
and
dec
sub
mov
lods
add
daa
and
mov
addb
test
out
cmc
mov
or
aas
ds
xchg
mov
in
filds
and
jnp
insl
stos
push
shlb
fs
push
ljmp
cmp
add
test
insl
ret
movsl
adc
test
xchg
inc
idivl
dec
fistpl
and
sub
sbb
enter
inc
sbb
andl
adc
push
add
push
ret
out
fwait
mov
add
addr16
loopne
lds
fwait
inc
add
jns
sbb
adc
sbb
or
das
shrb
mov
testb
xor
adc
popf
popf
dec
out
xor
das
pusha
cmp
cmp
jmp
es
jge
fldt
jecxz
std
ja
xchg
cmp
jecxz
jne
adc
pop
inc
aad
jp
add
xor
add
jo
fsubr
sbb
pop
push
shlb
lods
test
outsl
ret
test
sti
mov
lods
dec
fidivrs
push
and
inc
dec
or
xchg
or
inc
aas
mov
fisubrs
cmp
gs
repnz
addr16
mov
xchg
xor
mov
popf
cmpsl
pushf
cmp
cmc
stos
xchg
pop
dec
popa
scas
idivb
jle
lea
pop
xor
test
jge
ret
cltd
aad
and
inc
outsl
inc
jmp
add
cmc
add
arpl
fdivl
fnsave
shlb
xchg
ret
popf
mov
jmp
cmp
insb
xor
mov
pop
xchg
lret
inc
cmpsl
dec
scas
sti
pop
cwtl
lods
and
and
cmc
out
pop
jno
sar
mov
sub
dec
testl
xchg
xchg
outsl
and
adc
cltd
or
fistps
arpl
ret
ret
push
js
insb
sar
mov
dec
scas
popf
and
xchg
mov
cwtl
cmpsl
lret
or
push
loop
js
inc
push
call
lods
inc
sub
mov
sub
lcall
and
pop
out
outsb
fs
int3
scas
xchg
in
lock
scas
int
call
inc
ret
and
ret
pop
sbb
mov
in
xor
pop
mov
iret
ret
lret
xchg
mov
mov
in
aad
inc
sbb
xor
push
aas
or
dec
test
add
loopne
stc
cmpsb
fiaddl
incb
jge
mov
xor
test
lods
pushf
pop
mov
adc
dec
mov
push
jg
cld
arpl
stos
push
and
push
mov
sbb
push
inc
xor
add
adc
ret
mov
jae
cli
mov
jge
dec
adc
adcb
scas
mov
mov
out
xor
scas
adc
mov
adc
in
addr16
out
jmp
test
imul
in
jne
push
out
jns
lret
dec
les
das
push
fscale
adcl
imul
pop
dec
cmp
mov
mov
inc
ljmp
mov
xchg
mov
insl
pop
add
adc
mov
mov
push
out
test
pop
push
pop
pop
gs
jge
jbe
mov
xchg
add
fistps
lea
stos
pop
inc
xchg
out
rorl
mov
data16
out
or
adc
and
jb
cmc
sbb
fistl
ret
ljmp
sbb
ret
xchg
cmpsb
cmc
mov
sbb
out
ljmp
dec
dec
mov
cmpsb
push
shl
inc
lods
and
sub
repz
insb
mov
adc
push
mov
lcall
jne
inc
mov
in
mov
adc
idivb
and
and
or
fadd
mov
and
lods
push
in
ljmp
dec
aaa
cli
dec
mov
out
pop
mov
inc
mov
jb
xor
scas
sbb
mov
ds
or
dec
clc
pop
ret
cltd
outsb
into
xor
popl
rcrl
mov
nop
push
ljmp
test
add
xchg
outsl
add
jae
adc
test
xor
sub
sub
loopne
mov
rcr
lock
xchg
test
insb
cs
arpl
jns
jae
jge
lcall
repnz
in
mov
push
pop
sbb
mov
ljmp
and
pop
mov
loopne
add
xchg
push
mov
fistpl
jbe
mov
sbb
shl
jecxz
add
imul
in
inc
mov
and
lret
jmp
sub
ds
jg
or
ss
cmp
in
rcr
and
xchg
pop
sbb
xchg
fstps
inc
mov
lea
xor
mov
mov
xor
cli
cld
arpl
or
loop
mov
jae
inc
push
fidivrs
vpand
mov
push
or
test
mov
pop
stos
ss
jge
push
xchg
fs
or
int
arpl
jmp
je
mov
test
or
pop
mov
sbb
jnp
sbb
dec
fchs
and
mov
fsubr
push
xchg
jnp
push
mov
add
daa
xlat
push
and
lcall
cmp
mov
mov
inc
mov
std
adc
add
lcall
push
clc
cli
les
push
jle
sub
lods
pop
iret
popa
sbbl
push
das
ret
clc
int3
push
icebp
fstpl
and
mov
icebp
pop
cltd
test
out
jge
movntps
das
call
stc
or
testl
in
dec
bound
mov
hlt
sbbl
cli
inc
stos
adc
ret
enter
arpl
jge
sbb
sbb
ja
pop
into
fs
loopne
and
sbb
add
cmp
xor
cs
jne
and
sarb
repz
aam
inc
dec
xlat
push
dec
fstpt
mov
lds
lret
aam
inc
test
arpl
sub
pusha
mov
jae
jp
cmpsb
mov
in
xchg
stc
mov
out
test
cmp
in
pop
sbb
pushf
pop
sarb
lods
rolb
xor
sub
popa
or
jmp
lea
int3
loope
in
addr16
enter
sub
cmp
leave
mov
sbb
fcoml
shll
aas
push
and
and
aas
shlb
repnz
jo
cmp
mov
push
shrb
or
idivb
mov
pushf
stos
lahf
cmp
jne
mov
test
in
cmpsb
out
es
jle
mov
jmp
cmova
mov
imul
dec
push
pop
fcoms
scas
or
push
push
repnz
sbb
jne
les
and
mov
jne
pop
and
adc
fnstcw
or
insb
pop
adc
aad
rolb
sub
in
push
xchg
mov
mov
lahf
and
mov
test
das
sub
ret
sub
mov
xor
lods
daa
insl
icebp
sub
outsb
or
or
orb
xchg
mov
push
mov
inc
add
push
fdiv
shll
push
outsl
data16
mov
sub
cltd
pop
mov
jecxz
dec
mov
arpl
push
gs
sbb
in
rcll
in
std
movsb
ja
pop
dec
mov
or
imul
shlb
clc
fstpt
dec
xchg
push
gs
pop
mov
cmp
gs
jecxz
mov
rcrb
arpl
add
lods
ret
out
mov
jmp
in
xor
int
xchg
inc
imulb
mov
jno,pt
pop
in
sub
sti
scas
nop
cld
insl
adc
ljmp
jno
in
fld
sarl
aad
sti
rcrl
ret
sahf
pop
cmp
xabort
add
stos
or
data16
sbb
aam
lods
jb
inc
xchg
movaps
dec
adc
dec
loop
mov
pusha
xchg
mov
mov
aaa
mov
jae
push
inc
pop
ljmp
jecxz
mov
cmp
ja
xchg
and
pop
add
jae
in
add
jo
rclb
sub
sub
xor
xor
push
push
cmp
jns
call
test
cmp
mov
mov
pop
mov
jg
fs
cld
jnp
inc
loope
pop
or
mov
and
popa
ret
mov
cwtl
les
imul
mov
and
stos
xchg
or
add
xor
out
into
and
lods
or
inc
pusha
xchg
shrl
fildll
mov
vmovshdup
push
mov
test
aas
in
and
pushf
bound
sbb
dec
sub
jmp
mov
pop
sub
in
aam
cmpsb
cld
and
mov
insb
daa
inc
mov
push
inc
or
dec
mov
mov
xor
jle
movsb
adc
adc
ret
imul
cmpsb
xchg
ja
sbb
mov
out
aas
shl
fnstenv
xchg
mul
mov
divb
fsubrs
sub
and
xor
or
sbb
xchg
dec
loope
or
outsl
imul
cltd
push
int
enter
ljmp
cmp
cwtl
mov
jo
xchg
pop
sub
aam
jo
loopne
clc
push
jbe
and
pop
xchg
scas
mov
mov
cmp
jae
rorl
add
hlt
sub
bound
out
das
iret
add
aas
jae
and
shll
pushf
cltd
int3
cmp
repnz
cmp
add
inc
and
bnd
xchg
mov
arpl
and
jb
data16
pop
lret
aam
fisttps
add
aam
mov
cltd
mov
mov
sub
mov
repz
rcrl
inc
push
mov
repz
mov
adc
iret
test
xor
sbb
rolb
test
xchg
sets
lock
sub
cwtl
icebp
loopne
iret
xchg
call
mov
punpcklbw
mov
lcall
xor
jmp
fidivs
add
lgs
hlt
lods
sbb
inc
xchg
push
push
dec
adc
test
mov
leave
imulb
and
xchg
push
and
mov
push
adc
sub
lea
loop
shlb
outsb
inc
rol
sbb
mov
outsl
mov
shl
push
inc
xchg
test
stos
mov
int3
or
test
movl
or
jne
push
jl
xor
xchg
loopne
jne
push
nop
xor
xchg
inc
loop
ret
pop
sub
or
int
outsl
mov
pop
adc
lods
pop
and
cmp
mov
lret
ud1
pop
inc
sub
sar
addl
dec
mov
dec
dec
loop
mov
xchg
das
pop
adc
xlat
repnz
pop
adc
jp
push
jl
notb
jl
divb
sbb
test
xchg
aad
mov
negb
jae
push
cltd
cs
jae
pop
cmp
je
push
sub
inc
add
les
jmp
aam
popa
dec
sub
movsb
stos
enter
mov
insl
inc
enter
mov
stos
push
mov
std
ljmp
or
push
fcmovnu
adc
and
add
dec
adc
or
fisubl
fdivrl
inc
repnz
inc
cli
mov
xchg
mov
sbb
iret
in
push
sub
or
add
jecxz
shll
dec
cltd
sub
jno
shrl
xchg
mov
xor
ljmp
loop
movsb
jle
loope
nop
mov
mov
mov
fists
loopne
cmp
sar
incb
stos
cmp
mov
adc
cmp
mov
jp
mov
popf
pop
xchg
les
orb
hlt
push
sti
fnsave
xchg
test
cmpsl
xor
sub
push
add
cs
inc
xor
or
mov
cmc
sub
bound
sbb
mov
pop
pop
inc
and
in
xorb
dec
mov
jge
mov
fs
dec
insl
cltd
je
pop
add
daa
inc
call
sbb
mov
pop
loopne
xor
jle
lcall
jae
test
pop
and
sbb
ja
outsb
cmp
ja
sti
xchg
cmc
ror
shl
into
rol
leave
or
or
arpl
mov
ret
test
mull
dec
pop
jne
sub
xor
jb
ret
fildl
lcall
mov
inc
ss
mov
std
test
bound
dec
lcall
fmull
xor
jecxz
test
loope
in
adc
xchg
sub
fdivrl
add
je
bound
inc
or
jg
mov
mov
xchg
or
int
jo
jle
repnz
dec
dec
mov
ret
ficoml
movsl
hlt
jb
xlat
in
xor
jo
and
or
mov
pop
push
dec
push
rcl
les
mov
arpl
mov
or
xor
and
mov
imul
pop
adc
mov
aas
leave
jle
fwait
mov
xchg
inc
stos
push
in
pop
dec
or
jl
jle
jg
cltd
xchg
ljmp
scas
lret
pushw
into
xor
cmpsb
jmp
xor
mov
insb
jne
push
sbb
call
stos
add
out
jl
aad
fadd
arpl
push
test
mov
xor
movsb
push
call
ret
pop
push
rorl
cltd
xor
cli
iret
jb
aas
fs
lcall
cwtl
cmp
mov
mov
push
cmp
jno
pusha
insb
jae
call
mov
lods
and
mov
int3
sbb
mov
loopne
movsb
insl
xor
testl
loope
fstpl
out
mov
test
dec
sbb
cmp
in
adc
notb
pop
repnz
das
ret
jno
jne
pop
push
nop
xchg
mov
sbb
inc
jmp
add
dec
xchg
cmp
in
pop
mov
or
adc
or
push
mov
pop
push
jno
fidivs
dec
es
or
cwtl
jmp
pop
push
push
cmpsb
aaa
jp
sub
jb
in
push
adc
rcll
cmp
cltd
mov
jb
lods
ds
fwait
jg
mov
jl
fisttpl
loop
dec
out
xchg
out
or
enter
lret
lahf
in
cmpsl
adc
aaa
in
sub
lea
xor
pushf
add
les
fisubl
cmp
add
enter
dec
rcrl
sahf
mov
gs
mov
pop
les
mov
ja
repnz
jmp
std
in
mov
mov
aas
pop
sub
jnp
xor
sbb
push
add
add
push
enter
ljmp
jg
popf
sbb
data16
mov
stc
cmpsb
lods
cmp
push
nop
jge
pushf
cmp
test
test
rorl
dec
les
jecxz
pop
fadds
push
and
adc
push
xchg
mov
sbb
inc
mov
xor
cs
cmpsl
sub
pop
push
mov
sahf
repz
imul
out
dec
ss
cld
lcall
mov
lea
mov
addb
ljmp
mov
jne
dec
jne
pop
push
cmp
pop
cmp
faddp
mov
orl
mov
mov
lret
ret
or
add
mov
clc
movsb
imul
out
mul
insl
xchg
mov
xchg
aas
xchg
adc
fadd
icebp
frstor
mov
push
leave
int
add
push
in
int3
mov
out
insl
scas
ja
scas
fwait
cs
mov
test
dec
xchg
movsl
mov
push
in
pop
notl
mov
mov
sbb
fistpll
inc
jmp
pop
fs
pop
adc
push
sub
in
out
enter
dec
push
bound
cld
xchg
sbb
mov
inc
fdivrs
neg
or
stos
lret
mov
xchg
and
loope
or
das
rclb
test
or
push
cmpl
push
jae
cmc
in
mov
xchg
dec
jb
xchg
loopne
mov
lods
adc
add
mov
inc
pop
inc
cmp
out
icebp
fimuls
sub
jo
cwtl
mov
add
aad
and
push
pusha
in
mov
inc
mov
fbstp
nop
loop
pushf
cmpsl
sbb
aas
movsb
clc
jecxz
push
push
jo
je
cmp
test
stc
sub
arpl
shll
inc
dec
ficompl
mov
mulb
outsl
mov
pop
fs
lcall
in
and
out
inc
scas
enter
inc
scas
xchg
mov
test
bound
es
in
insl
and
pop
mov
mov
jne,pt
movsl
mov
jno
orl
jle
inc
lods
out
lcall
imul
sub
push
push
ja
mov
xchg
loope
sub
push
dec
jl
xor
movsl
loop
lret
and
popa
aaa
es
ja
mov
pushf
sub
arpl
shlb
loopne
pusha
push
mov
andl
movsl
call
mov
movsl
xchg
lret
mov
dec
jne
mov
jo
fst
enter
xor
jl
imul
add
incb
out
sbb
dec
xlat
pop
push
jge
addb
into
and
mov
push
lea
mov
shl
test
leave
fpatan
rcll
xor
or
aad
xchg
je
cmpsl
popf
outsl
mov
xchg
aaa
loop
bound
lds
insb
mov
test
out
xor
inc
insl
or
add
jo
xor
fisubrl
clc
sti
incl
xchg
data16
xchg
fdivrs
bound
add
sbb
push
xchg
les
out
dec
push
cltd
mov
pop
xchg
jmp
xchg
mov
bnd
cmp
mov
fistpl
mov
mov
shr
mov
jle
adc
lcall
out
dec
adc
mov
jp
lods
repz
cmp
xor
mov
jno
popa
pop
mov
mov
scas
test
xchg
out
movsl
and
repz
add
jle
lea
les
pop
mov
sub
arpl
fwait
and
test
dec
mov
sbb
xchg
lret
xchg
cmp
dec
imul
popa
sahf
fs
bound
addl
ss
dec
and
push
ret
adc
xor
dec
sar
imul
out
repz
xchg
scas
and
fisttps
ljmp
push
nop
sbb
xchg
or
or
ret
sarl
mov
shll
mov
sarb
push
jmp
jno
movsl
pop
sbb
pop
pop
inc
cmp
rolb
mov
and
pop
fsubrl
pop
or
add
adc
movsl
mov
add
scas
fldcw
ljmp
mov
mov
lret
es
mov
data16
and
xor
in
mov
fs
push
push
fcmovnbe
repnz
bound
out
enter
rol
mov
data16
adc
decl
sbb
pop
repz
test
addr16
jno
shrl
dec
icebp
mov
imull
jmp
xor
test
dec
lahf
faddp
mov
jns
inc
mov
js
sbb
mov
nop
mov
sbb
repz
mov
push
iret
test
xchg
in
es
popa
jne
fistps
subl
adc
clc
dec
pop
push
mov
push
or
insl
cmp
push
push
iret
xchg
adc
nop
and
xchg
ret
adc
inc
jno
mov
xor
rcr
aad
push
icebp
movsl
or
inc
stos
push
loop
pop
cmpsb
std
inc
popf
push
movsb
in
jbe
pop
into
aam
adcb
xchg
ss
in
out
dec
pop
and
ret
cmp
pop
sbb
lcall
lds
fsubs
pop
cmp
jmp
push
dec
lock
rcrl
pop
dec
mov
xchg
jmp
sub
fld
idivl
mov
test
aas
push
cld
inc
imul
lds
rolb
call
mov
mov
cmc
loope
div
mov
pop
mov
xor
jg
call
xor
sub
out
xor
xchg
or
adc
xlat
mov
cmpsl
shll
sub
stc
cmpsb
or
cs
xchg
imul
xor
push
sbb
mov
stos
popf
outsl
pusha
or
xor
cmp
ret
das
xchg
cmc
or
and
pop
push
mov
xchg
inc
add
push
cmp
lods
xlat
sti
xor
jo
add
sbbl
dec
rorl
push
enter
int3
lcall
aas
int3
adc
cli
adc
jb
push
adc
mov
push
mov
push
lds
mov
std
jle
gs
rcl
sub
in
and
les
mov
and
fsincos
ror
data16
shll
push
icebp
shrl
in
in
sub
sbb
pusha
cli
ret
xchg
rolb
fists
dec
into
pop
sahf
jae
xlat
aad
in
add
fisttpll
push
cltd
jno
xor
pop
jecxz
popf
push
test
fsubl
aam
in
pusha
je
xchg
inc
push
mov
repz
push
inc
loope
add
ret
pop
push
sub
lds
ljmp
fnstsw
scas
int
ds
dec
xlat
inc
fnstsw
mov
cld
fnstcw
dec
adc
and
inc
mov
pop
loop
subb
push
xchg
jle
and
pop
xchg
inc
fnstcw
sbb
out
or
push
mov
mov
xor
lods
int
add
jo
xor
pop
adc
or
iret
lock
ret
lahf
lock
jmp
pop
mov
mov
push
fsubl
fbstp
fmull
mov
jg
fsubrs
adc
cmp
cmpsb
sbb
sahf
mov
cwtl
push
cltd
ret
cmp
inc
scas
ss
aas
mov
xchg
inc
push
cmp
clc
push
lret
and
cmpsl
cmp
mov
pop
lock
sub
push
sbbl
dec
daa
xorb
add
aas
test
push
xchg
sub
pop
fbstp
arpl
repz
add
adc
cmc
push
push
mov
dec
sarb
or
xor
mov
iret
pop
shl
and
lods
pop
iret
or
mov
aam
or
adc
jo
fsts
xor
outsl
scas
popa
test
sbb
inc
xor
lcall
dec
and
aam
mov
add
test
push
icebp
jns
aad
push
dec
or
mov
aad
cmp
xlat
jne
loop
pop
jge
dec
jle
jb
jne
mov
imul
out
into
test
inc
mov
out
and
loop
adc
dec
clc
jae
dec
pop
in
test
adc
adc
std
inc
jno
xchg
lds
add
popa
out
repnz
cmp
add
mov
add
dec
jle
gs
add
or
or
fisubs
xor
xchg
xor
daa
mov
xchg
and
pop
lock
mov
popf
fidivl
scas
sbb
ja
mov
inc
inc
insb
sub
mov
or
sub
inc
sahf
negb
arpl
xchg
xchg
mov
dec
dec
push
dec
hlt
into
and
fwait
ss
addr16
outsl
sbb
jecxz
pop
sbb
pop
and
sbb
orb
cwtl
aam
xchg
mov
leave
enter
adc
mov
out
adc
sbb
mov
cmp
shr
in
pop
cmc
hlt
mov
xlat
iret
push
pop
bnd
jle
jnp
dec
cmpsl
in
icebp
add
mov
sub
arpl
lods
add
pop
adc
fsts
mov
fldt
int3
popa
iret
adc
sub
xchg
fistpl
and
pop
lahf
mov
dec
push
faddl
lcall
sar
mov
fdivrs
lods
idivl
adc
clc
inc
push
jmpw
mov
mov
sub
dec
push
sbb
lcall
subl
or
mov
xor
mov
shlb
clc
dec
add
mov
out
push
shrb
pushf
int3
xchg
aaa
pop
jo
stos
xchg
inc
ja
out
push
jle
fsub
fistl
jo
or
scas
popa
daa
xorb
dec
jae
dec
inc
bound
imul
imul
adc
dec
loop
mov
fildll
stc
jecxz
mov
or
lods
cmp
cwtl
xchg
add
pop
add
push
pop
aaa
cs
xor
or
mov
ficompl
insb
aad
andb
pop
ror
xchg
xchg
aam
nop
pop
adc
lds
jnp
jo
sbbb
xor
and
push
imul
sbb
adc
mov
push
sbb
mov
pop
mov
iret
shll
jmp
lds
adc
cwtl
dec
loop
add
in
bound
jo
jnp
mov
test
sub
or
adc
xchg
addr16
cmp
fbstp
sti
mov
pop
in
adc
je
fisubs
je
int3
pusha
dec
push
test
loopne
xchg
sti
fst
inc
mov
fsubrs
xchg
or
cmc
mov
cmc
mov
hlt
aam
icebp
pop
call
inc
push
sub
jmp
mov
sub
ss
jo
lcall
imul
clc
ss
stc
mov
mov
inc
push
mov
insb
mov
push
cmp
xchg
je
jae
sbb
orl
xchg
adc
je
fcmovnb
mov
or
mov
stos
jns
jg
subl
cmp
cmp
and
sub
push
push
mov
mov
xorb
mov
dec
bnd
pop
adc
cmp
jle
add
sarb
or
ds
push
xchg
cmp
pop
inc
push
dec
mov
dec
movsl
xor
adc
pop
add
lods
mov
push
gs
inc
insb
add
rcpps
out
sbb
cmpsl
push
imul
push
shll
jns
repnz
std
lock
xchg
add
adc
mov
fwait
sub
in
dec
xchg
insb
shrl
adcl
xchg
ss
imul
lret
arpl
leave
mov
ljmp
or
and
mov
mov
fwait
add
outsb
mov
sbb
or
das
call
inc
mov
fdivrs
add
dec
in
mov
push
fcmovnu
xchg
pusha
inc
xor
inc
outsl
add
push
int
loopne
insb
xorl
inc
mov
jo
mov
push
sbb
js
xor
push
mov
dec
push
les
test
nop
lcall
xchg
cmp
xchg
jmp
pushf
mov
inc
nop
mov
call
idivb
xor
sub
out
int
adc
jnp
dec
cmp
rclb
jns
call
outsl
mov
jmp
pop
inc
ss
test
ja
mov
jno
fs
xor
mov
fmull
repnz
push
ret
and
scas
mov
push
jecxz
aas
nop
sub
jne
pop
shll
and
jl
popf
bound
jnp
dec
sbbl
sbb
fmuls
jns
incl
pop
lahf
push
mov
aad
sub
push
mov
add
push
sub
push
jle
iret
or
mov
int3
or
subl
ret
pshufw
lahf
insb
ficoml
es
icebp
mov
lock
in
jae
addr16
pop
xor
insl
out
fnsave
psadbw
inc
xor
xor
lcall
das
mov
into
cwtl
inc
iret
sbb
or
pop
mov
aam
xchg
jo
pushf
dec
outsl
mov
int3
inc
sarl
rcrl
andl
sbb
movsb
int
jbe
adc
or
jecxz
or
ss
cmpsb
in
push
ljmp
xor
jb
and
inc
xorl
or
inc
rcrb
and
subb
repz
cmpb
mov
das
pop
in
mov
dec
outsb
add
push
and
cmp
pop
xchg
aaa
mov
adc
data16
sub
daa
popa
add
lods
sbb
lahf
popf
lods
sbb
test
xchg
popa
sub
dec
ret
or
cmpsl
push
loop
in
in
inc
out
sbb
jo
cmp
stos
shl
lret
pop
bound
and
jmp
push
sbb
add
arpl
push
sub
cmpsl
aaa
das
or
inc
sub
sub
push
testl
scas
sub
xchg
mov
jmp
jnp
loope
lcall
in
and
int
test
pop
inc
xor
imul
mov
mov
loopne
inc
negb
stos
mov
sbb
sbb
ret
mov
push
gs
ds
rcrb
mov
and
js
xchg
std
hlt
and
mov
sbb
cli
pop
rcll
insl
in
jmp
loopne
movsl
mov
adc
adc
movsl
movsb
sbb
popa
xor
test
popa
sbb
push
jb
jmp
ds
cmp
shrl
xchg
dec
cmp
jle
sbb
push
popf
addr16
pop
cmp
hlt
jbe
mov
test
andl
jno
lret
xlat
mov
addr16
mov
xor
sbb
mov
psubd
out
jg
popa
cmp
lods
mov
and
cmp
mov
notl
lret
adc
or
push
scas
push
es
sbb
mov
jg
lcall
movsl
inc
test
add
scas
outsl
sub
bswap
push
pop
cli
inc
pop
xor
cmp
aas
mov
imul
ret
pop
jb
ja
pop
jbe
shl
lods
test
sub
into
cmp
pop
xchg
int3
adcl
jb
lea
push
fisubs
add
push
imulb
mov
inc
pop
lods
adc
arpl
in
cmp
push
jle
mov
nop
out
xchg
fistpll
add
xor
or
inc
int3
adc
pop
dec
adc
push
mov
xlat
xor
and
add
pop
jmp
sub
dec
dec
inc
cmp
inc
movsl
pop
inc
insb
jbe
xor
loop
mov
jp
dec
lcall
out
repz
mov
stos
and
xor
hlt
stos
push
sbb
jmp
nop
add
push
mov
les
and
sbb
inc
or
bswap
or
daa
mov
mov
std
cmp
pop
jl
push
sbb
and
sbb
les
adc
popf
xchg
arpl
sub
icebp
jb
stc
adc
into
xchg
rorb
pusha
push
pop
xor
lods
xchg
cwtl
adc
jg
aad
movsb
in
dec
fs
pop
sbb
aad
dec
stos
jl
ret
push
cmpsl
jge
int
jmp
and
fcmove
into
fcmovne
sbb
mov
add
adc
in
jl
push
aas
loopne
aad
ret
pop
rclb
mov
les
jle
in
mov
es
xor
xchg
aad
xchg
lea
insl
mov
sub
jb
mov
es
cmp
add
out
push
in
lea
ja
imull
cmp
stc
xchg
mov
xchg
scas
std
push
pushf
xor
mov
fisttpl
sub
shlb
xor
jne
fcmovnb
outsl
jle
xor
mov
sbb
icebp
lods
push
outsb
pop
sub
addr16
push
test
out
or
ror
call
xor
pusha
jge
pop
jmp
mov
cmpsb
jnp
bound
ret
push
sti
inc
push
out
and
pop
fisubrs
lock
out
sti
mov
dec
jae
pushf
adc
mov
jp
inc
scas
outsb
jo
shrl
leave
jle
das
or
out
lea
shrb
and
ret
adc
xchg
xlat
mov
test
dec
xchg
lret
mov
outsl
jnp
cmp
cmp
and
lods
mov
lods
adc
rcll
mov
mov
mov
in
int3
test
mov
jg
jg
inc
movsl
and
shlb
mov
xor
int3
daa
push
pop
das
mov
rcll
inc
rclb
std
cmp
enter
setnp
add
mov
jp
push
mov
sti
out
push
sbb
xor
dec
cld
rcrl
pop
dec
add
jl
cltd
mov
mov
xchg
add
jb
rcll
ljmp
repz
cld
aas
hlt
mov
clc
repz
xchg
lods
sbb
inc
mov
stos
bound
cmp
xchg
or
xor
iret
jne
xchg
push
xor
pushf
xchg
fdivp
sahf
push
outsl
pop
mov
or
js
stc
shl
xchg
outsb
cmp
mov
jle
push
and
dec
out
mov
lods
test
ss
sbb
stos
pop
out
pop
inc
xchg
addr16
jp
ret
push
dec
leave
sbb
ret
cwtl
add
pop
inc
inc
cmc
cmp
lcall
mov
fisubs
lcall
and
dec
in
fucomi
push
stos
mov
mov
dec
mov
fbld
mov
lock
inc
jnp
cmpsb
fldl
adc
adc
mov
add
mov
mov
ret
add
imul
add
sbb
mov
dec
mov
sahf
dec
ret
xchg
adc
cmp
xchg
in
mov
test
cmc
shrl
ds
cmpps
clc
mov
pop
mov
mov
movsl
mov
je
mov
rcrl
jg
outsl
jns
inc
jmp
xor
sahf
lahf
dec
loope
mov
ja
xchg
fsubs
pop
push
sub
mov
or
cmp
xchg
pop
fdivrs
inc
or
insb
outsb
mov
shrl
fistps
or
pop
adcl
and
and
std
adc
aaa
ja
out
mov
inc
cltd
inc
insb
fwait
aas
cs
js
push
and
roll
in
add
ret
xchg
lock
inc
jmp
add
push
decb
sub
cs
test
pop
xchg
jmp
stos
jno
mov
rclb
pop
dec
pop
mov
repnz
mov
pop
mov
fucomi
popf
mulb
lock
push
pop
inc
ret
pop
sbb
lret
outsb
rcl
cltd
and
inc
dec
sahf
jl
xor
mov
push
fisttps
dec
outsl
shll
ds
pop
das
cmp
loopne
xchg
sti
leave
pminub
daa
mov
xorl
inc
xchg
popa
das
xchg
ret
push
movaps
lcall
push
in
lods
fstpt
enter
sbbb
dec
or
adcl
and
cmpsb
and
add
ret
cmpl
add
jbe
cmp
out
aam
and
add
xchg
sub
inc
les
test
pop
xor
scas
sbb
mov
sahf
mov
mov
cmpsl
out
das
mov
notl
xor
cmp
lock
sub
cmp
cli
je
in
in
add
add
jge
lahf
adc
inc
mov
add
aas
les
pop
mov
push
fnsave
add
and
jle
and
cmpsl
or
pushf
loopne
add
push
pop
or
xor
das
stos
adcb
dec
sbb
sub
test
xchg
cld
xor
xor
sub
decl
xor
outsb
push
bound
fwait
add
xor
mov
in
out
mov
cmp
jns
adc
test
mov
adc
gs
or
out
loope
jg
ss
outsb
ss
subl
jge
xchg
sub
dec
fistl
cli
mov
fstps
mov
std
fldl
movsb
icebp
mov
jmp
hlt
out
jne
mov
and
clc
sub
xchg
push
rcll
rol
outsb
lcall
dec
dec
mov
out
aas
or
in
and
xchg
push
ret
and
mov
xchg
rorb
sbb
aam
push
clc
xor
mov
inc
ficoml
in
and
fnsave
test
pushf
adc
xchg
scas
dec
sub
call
jb
xchg
js
inc
bound
test
shll
and
pop
std
aaa
mov
add
mov
rcr
out
inc
mov
cli
lcall
addr16
jo
cmp
pop
out
test
inc
pushf
jb
stos
xor
pop
inc
mov
mov
fists
in
cmp
sbb
in
mov
mov
adc
push
mov
movsl
xor
and
or
mov
pop
repz
imul
sub
jle
shrl
shlb
mov
rolb
mov
addr16
cmp
add
data16
push
dec
imulb
xchg
xchg
stc
jb
in
cmp
cmp
push
sbb
dec
cmpsl
ss
movsl
hlt
push
mov
addr16
mov
push
xor
add
lahf
notb
jp
sub
in
cli
fcoml
rorl
push
mov
or
lret
cwtl
mov
mov
lret
outsb
imul
fiaddl
cwtl
pop
js
js
inc
repnz
scas
mov
xchg
add
ss
sbb
test
pop
pop
stc
lods
sbb
in
inc
mov
fstl
in
pop
cli
ds
jo
pop
mov
loop
add
jge
jo
repz
cmpsb
inc
fildll
push
xchg
add
and
or
pushf
insb
int
out
add
inc
mov
pop
and
mov
mov
shrl
xchg
fbstp
sub
in
push
adc
arpl
insb
mov
jne
sub
sbb
fdivl
fsubl
adc
call
movsl
and
sahf
jnp
sub
pushf
stos
imul
mov
cmpsl
jle
cmpsl
jg
pop
mov
push
cmp
cmp
orl
mov
jno
dec
loope
cld
push
and
out
or
lcall
addr16
pop
outsl
lahf
rclb
lahf
sub
pop
fistps
xchg
hlt
fnstsw
xchg
mov
outsb
or
mov
insb
mul
aad
mov
inc
mov
add
mov
rcr
in
fcmovne
imul
repz
loop
sar
dec
inc
test
xor
leave
mov
stos
mov
jmp
jnp
xchg
cwtl
icebp
ljmp
ja
and
fiaddl
jne
dec
mov
inc
ss
inc
sbb
enter
nop
outsl
adc
push
adc
in
push
inc
ds
mov
imul
scas
rcr
cld
sahf
faddl
cld
sbb
lock
popf
mov
lods
in
cvtps2pi
adc
je
push
jne
xlat
sub
fimull
or
test
sti
out
push
dec
mov
sbb
popa
or
jecxz
xchg
rolb
sahf
sti
xchg
pop
dec
mov
jnp
xchg
mov
push
jo
or
cli
pop
xchg
xchg
fnstenv
add
or
call
xor
rolb
and
in
cld
mov
fnsave
xchg
and
mov
nop
popf
pop
in
pop
insl
out
scas
adc
dec
sti
push
decl
repz
mov
fsubp
in
add
add
lock
mov
lahf
cmp
fistpl
xor
lock
stos
inc
sub
sbb
dec
lcall
inc
popf
dec
add
ds
idiv
mov
mov
pop
int
testl
or
inc
jne
inc
jno
rclb
shr
jb
cwtl
mov
push
dec
add
or
out
notl
adc
stos
sti
mov
in
loopne
xchg
mov
loopne
sbb
stos
repnz
sbb
sbb
lods
out
add
or
add
loope
cmp
pop
imul
int3
xlat
adc
mov
sub
jns
scas
mov
das
sbb
mov
data16
push
xchg
inc
mov
test
sti
inc
xor
xlat
mov
es
enter
pop
jle
add
adc
jle
pop
push
lret
rcr
pop
arpl
test
sarb
int3
cmpsb
ja
mov
mov
inc
pop
fldt
lds
push
sbb
push
lahf
push
lods
xchg
leave
dec
pop
dec
push
or
adc
ret
repz
insl
xadd
sub
sub
or
xchg
inc
pop
es
hlt
pop
aam
in
mov
cmp
int
sub
or
or
mov
xchg
daa
mov
push
push
pusha
ret
movsb
or
sub
call
sbb
aas
pop
jnp
lret
sahf
xor
int
aas
pop
fistps
cmc
or
shll
and
ret
cmp
pop
popf
push
mov
add
das
lahf
lret
dec
xchg
pop
xor
cmpsl
push
or
inc
push
dec
xchg
mov
arpl
mov
jmp
jg
iret
or
fs
xchg
dec
add
xchg
sub
xchg
jo
fsubrl
mov
les
ds
jae
pushf
sbb
jb
test
repz
mov
jge
or
fs
add
jg
fs
pop
sti
or
ss
push
xchg
mov
sub
lods
imul
xchg
xchg
loopne
lea
ret
cli
sbb
cmp
or
mov
push
dec
jbe
scas
xor
add
jae
cmp
rol
dec
jbe
movsb
ret
mov
adc
adc
inc
fsub
gs
push
out
cmp
pop
push
shlb
dec
cmpsb
outsl
ds
lret
fidivl
xor
xchg
dec
and
inc
lock
sbb
add
cmpsb
loopne
rcll
cmp
pusha
aas
push
add
xor
pop
jmp
xlat
and
rcr
sbb
sbb
inc
jl
repnz
decb
inc
mov
xchg
les
outsl
cmp
nop
xor
subb
cmp
mov
and
cmp
clts
mov
cmpl
mov
and
mov
decl
cmpsl
jne
lret
aad
hlt
pop
sbb
stos
add
xor
or
and
dec
cwtl
int3
lahf
push
shll
or
out
enter
sti
lods
push
js
inc
mov
sub
aaa
mov
loope
sbb
xchg
jmp
pop
xchg
je
xchg
dec
sub
aas
jmp
pop
jge
popa
sbb
mov
cmp
lret
push
xchg
in
in
jecxz
cmp
pop
jecxz
out
test
cmp
sub
xor
ffree
arpl
sub
out
mov
pushf
cmp
push
jno
adc
es
adc
jle
rorl
or
cli
jmp
cwtl
mov
jl
sbbb
js
lret
xor
insb
popa
add
in
mov
push
or
xchg
pop
xchg
shlb
cmpsl
pop
decb
jecxz
push
inc
xor
mov
pop
cmp
and
xchg
inc
pop
pop
pop
push
ret
inc
mov
jge
mov
pop
or
jns
bound
xchg
mov
lcall
ja
repnz
xor
mov
mov
push
xor
scas
mov
push
mov
mov
dec
push
add
inc
cld
jle
scas
jo
jnp
cmc
mov
int3
add
movsl
or
je
test
and
dec
xchg
sarb
popf
std
mov
inc
sbb
mov
test
mov
adc
inc
dec
das
lods
cmc
push
daa
mov
jno
jbe
mov
sahf
not
decl
xchg
sbb
adc
mov
mov
mov
mov
outsl
add
out
aaa
ret
mov
cwtl
adc
cli
ret
add
and
call
pop
xchg
cmp
inc
xchg
into
sbb
fsubrl
lods
clc
ss
and
push
popa
jge,pn
xchg
in
test
loopne
ficomps
or
pushf
addl
adc
cmpsb
push
ss
mov
jmp
pop
andl
dec
mov
daa
xor
icebp
jle
mov
cmpsb
dec
xchg
dec
out
addr16
ret
pusha
sbb
sbb
daa
lods
fildll
xchg
push
inc
repnz
and
jg
jp
add
mov
int
adc
je
mov
lea
mov
sbb
adc
popf
add
imul
jge
mov
ret
in
scas
dec
aas
sbb
outsb
cmc
jge
xchg
testb
lds
loope
or
xor
xchg
mov
mulb
cwtl
xchg
fsincos
incb
pop
aaa
dec
in
mov
cmp
addr16
and
lcall
dec
push
dec
daa
test
ficomps
shr
repz
or
gs
cwtl
imul
sub
ror
pop
xor
sbb
adc
push
aam
shll
push
imul
adc
xchg
in
imul
es
insl
xchg
outsl
or
mov
or
mull
stos
xchg
lock
in
das
adc
push
divb
mov
orl
ja
aas
leave
mov
mov
aam
sbb
int
aad
mov
mov
insl
sbb
cmp
or
shl
jnp
test
jb
cmp
in
mov
push
cmp
and
test
pushf
scas
push
mov
pop
sbb
mull
enter
pop
popa
lahf
and
dec
fsts
and
mov
pop
outsl
jb
jg
arpl
outsb
data16
ja
rcl
xchg
call
xchg
mov
lods
gs
std
adc
xchg
xchg
out
in
incb
push
ret
psraw
cmp
test
add
cld
clc
or
jp
jmp
jnp
jle
cmp
ljmp
mov
sbb
dec
cli
sbb
sbb
dec
jne
mov
pushf
imul
iret
shlb
aam
sbb
mov
arpl
add
dec
test
xlat
mov
mov
adc
sbb
mov
jle
outsb
jmp
adc
int
mov
or
jecxz
inc
mov
in
add
fs
repz
jmp
repz
pop
adc
xchg
mov
push
push
lock
sarb
sub
ja
push
sbb
shlb
fnstcw
std
or
and
bound
mov
jo
jg
dec
data16
lcall
inc
pop
aad
pop
jecxz
sbb
jae
aam
aam
or
xchg
jg
add
subl
jmp
cs
sbb
cmp
insb
push
cmp
xchg
das
bound
adc
and
test
mov
mov
cld
lods
mov
in
fiadds
cmp
or
mov
push
fmulp
xorb
xchg
cli
mov
mov
sbb
ljmp
rcr
iret
repz
mov
mov
or
mov
jecxz
xchg
and
push
cmpsb
mov
xor
or
clc
das
icebp
adc
jecxz
push
mov
nop
sti
and
or
test
pop
push
int3
xchg
iret
inc
mov
and
inc
sahf
daa
fmuls
mov
add
popa
sub
jno
cmp
jle
out
cltd
cmc
mov
divb
mov
cld
fs
cmp
js
cmp
jmp
lods
xchg
cmp
iret
and
fldt
not
loop
adc
rcr
xor
mov
fs
push
jns
jb
jo
push
mov
stos
mov
mov
stos
push
mov
pop
xor
jbe
or
mov
in
push
pop
repz
adc
arpl
or
sti
dec
adc
xor
xchg
sbb
lahf
pushf
pop
pop
cli
or
sub
stc
jnp
mov
aam
mov
push
mov
mov
scas
sbb
hlt
jae
rolb
sbb
xchg
ficoml
push
or
xchg
imul
push
ret
cmpsb
or
scas
into
pop
rclb
push
sbb
call
mov
jmp
mov
inc
pop
cs
data16
lcall
pop
popf
xor
cli
dec
xchg
lods
pop
jno
mov
in
jl
lcall
cs
mov
popa
and
cmove
ja
push
xor
sbb
push
xorl
ljmp
or
xor
jne
sub
std
cmp
sub
ffreep
movb
and
rcrb
jno
lcall
leave
and
pop
ja
jae
nop
icebp
dec
enter
test
sub
lahf
or
or
mov
push
inc
outsb
lcall
pop
out
xor
ss
bound
push
mov
mov
sbb
int3
dec
add
pusha
push
push
jmp
cli
loopne
push
in
mov
fstps
mov
lret
jmp
ret
aam
daa
cwtl
sbb
mov
or
test
pop
movsl
adc
cmp
stos
iret
sub
inc
aad
xor
ss
jo
sub
mov
mov
arpl
movsl
cmp
mov
add
popf
cwtl
test
sub
lcall
push
testb
btc
test
dec
xchg
cmp
dec
and
rclb
mov
mov
in
scas
xchg
xor
xor
jl
push
cwtl
and
fdivrl
push
and
jae
mov
lret
push
sti
dec
pop
fadds
inc
and
psubb
aad
xor
pop
dec
dec
stc
dec
pop
xchg
inc
mov
pop
or
rcrb
arpl
imul
adc
andl
imul
ja
js
mov
dec
cmp
inc
push
mov
push
daa
or
or
cld
fiaddl
mov
add
jne
dec
rcrl
xchg
insl
mov
repnz
call
mulps
mov
pop
ss
lods
or
jne
adc
xchg
mov
ret
mov
add
dec
int
cwtl
insb
lods
pop
sub
mov
mov
fsubrs
mov
nop
xchg
jle
mov
jb
imul
mov
pop
jns
outsb
inc
pop
push
inc
lret
clc
push
or
shrb
mov
and
jne
adc
iret
xor
rcrb
add
mov
xor
jp
scas
fldcw
add
movb
pushf
jns
jge
push
ret
iret
mov
mov
callw
sub
testb
loope
stos
sub
xlat
cmp
pop
add
ret
cmp
or
lds
jmp
push
or
ret
imul
xchg
addr16
scas
loope
pop
sub
cltd
pop
test
negb
popa
test
xlat
int
xor
jb
dec
dec
pop
test
cmp
dec
jp
or
shlb
or
and
mov
dec
and
js
jmp
mov
loope
cmpsb
add
aad
inc
dec
jo
push
repnz
aas
and
pop
fisubrs
adc
sub
ds
pushf
lcall
shrb
es
and
mov
ss
cmp
repnz
pop
dec
stos
mov
enter
add
sub
or
pop
iret
add
clc
ljmp
xchg
inc
mov
or
in
push
add
mov
lods
rorl
jge
stos
xor
xor
and
inc
out
add
dec
jb
push
xchg
out
lret
fimuls
lods
or
mov
das
push
cmpsl
jbe
int
lahf
in
push
pop
lahf
leave
or
mov
dec
out
sbb
stos
aad
cmpsb
mov
add
cltd
loopne
mov
imul
adc
lds
xchg
lds
sub
enter
inc
mov
mov
mov
dec
inc
loopne
dec
mov
mov
or
iret
test
push
lods
jb
dec
in
mov
bound
pop
sbb
push
inc
xchg
pop
test
lcall
orl
push
lods
jbe
mov
pop
mov
fwait
jecxz
pop
aam
test
jle
scas
inc
xchg
sbb
sahf
outsl
push
incl
imul
nop
nop
xchg
sbb
jb
pop
sbb
mov
mov
stos
lods
in
mov
in
jp
out
mov
cmpb
gs
or
in
pop
addl
out
push
daa
mov
mov
xchg
not
add
jbe
pop
xchg
scas
or
xchg
sub
jae
xchg
inc
fdiv
dec
addb
scas
sbb
int
or
push
or
push
negb
dec
jl
insl
inc
mov
mov
jnp
sarl
jne
dec
stc
cltd
sbb
popa
fldpi
scas
xor
add
cld
and
xor
rol
fadd
frstor
out
or
mov
je
incl
mov
push
test
dec
lcall
push
sub
and
enter
cmc
push
mov
shrb
jp
dec
lret
jecxz
xchg
outsl
inc
or
fisubrl
adc
out
out
pop
outsb
outsl
in
imul
mov
lret
xor
fsubs
outsl
jae
ret
mov
push
inc
dec
pop
ret
mov
lods
pop
test
and
push
cli
jns
fucom
pop
mov
mov
fucompp
xchg
cld
insl
pop
es
cltd
addl
clc
and
dec
mov
push
adc
adc
gs
inc
pop
sub
call
aam
rclb
or
fsubs
pop
repnz
jne
inc
dec
inc
push
fisttpl
sub
push
rolb
rol
rcll
test
mov
das
add
push
mov
sub
repnz
out
adc
mov
cmpsb
jb,pt
xchg
mov
pushl
adc
cs
sarb
jg
mov
cmc
mov
mov
cmpsb
out
sbb
and
insb
test
mov
dec
lock
lea
xchg
out
movsl
mov
or
or
outsb
ds
aaa
add
js
xor
inc
xor
jb
pop
pop
arpl
js
pop
push
test
lahf
outsb
xchg
push
add
adc
ret
bound
fwait
rcrl
sbb
jbe
in
dec
rcrb
dec
push
cwtl
sbb
out
stos
cmp
and
jg
xor
cld
sbb
mov
xchg
dec
out
add
pop
shrl
pushf
inc
cmp
shrb
xchg
pop
add
mov
scas
jne
jp
stc
mull
xorl
push
add
ror
aas
cli
pop
xchg
pop
push
ljmp
clc
mov
pop
lods
mov
xor
mov
jp
or
orb
adc
imull
push
jnp
in
stos
mov
cltd
aaa
mov
popf
mov
xchg
fbstp
push
jge
fistpl
xchg
xchg
in
daa
scas
jae
xchg
jp
adc
cmp
mov
lods
pop
dec
hlt
push
pop
fcmovne
inc
and
fldenv
push
arpl
mov
gs
sub
jb
lahf
ret
mov
sub
pop
inc
mov
pop
sub
push
pop
adc
movsl
jb
dec
dec
dec
inc
fimuls
lcall
sub
jl
adcb
mov
pusha
mov
or
mov
push
xchg
jno
push
ja
mov
sub
jmp
push
lods
sbb
push
push
mov
cmp
sub
mov
dec
or
loope
fistps
jp
and
xchg
add
fiaddl
pop
mov
mov
and
cld
lcall
sbb
cmpsl
inc
cmp
idivl
pop
mov
jge
enter
dec
mov
outsl
sub
sbb
xor
and
adc
dec
and
arpl
xor
mov
jle
stos
xor
dec
pop
pop
pushf
cmp
push
push
lahf
pop
leave
insl
cmp
xlat
push
jne
jbe
xor
orl
test
push
cmp
fstpt
inc
push
dec
sbb
movsb
adc
jne
out
nop
pop
mov
sbb
add
dec
inc
movsb
frndint
jp
stc
enter
scas
cld
push
dec
and
xor
pop
mov
jmp
or
inc
leave
xor
push
shll
loopne
jo
push
mov
sar
push
mov
arpl
ss
dec
cmpsl
es
xchg
jle
pop
sti
ror
sbb
pop
repnz
int
mov
pop
dec
jns
loop
mov
adc
mov
aaa
shr
enter
cli
dec
imul
fadds
fsubrs
cmpsb
xchg
or
leave
hlt
lahf
adc
fisttps
repnz
cli
xchg
fildll
mov
dec
xor
pop
add
mov
mov
iret
adc
imul
insb
je
fistps
cmpsl
push
xor
mov
sbb
cwtl
mov
jno
jg
and
pushf
jge
pop
loopne
pop
notb
push
idivl
inc
or
clc
push
pushf
or
fdiv
jl
gs
pop
xchg
int3
lahf
push
jb
jo
mov
ja
scas
cwtl
mov
xor
fdivl
add
add
cmp
scas
jmp
imul
aas
sahf
gs
cs
daa
mov
movsl
push
xor
inc
ja
out
cmp
pop
sub
xchg
or
mov
cltd
add
js
pop
mov
cmp
pop
xchg
sub
jecxz
inc
jg
cmp
js
insl
stos
sub
jbe
ja
out
jl
ficompl
ret
cmpb
test
jl
lret
add
mov
jae
jns
es
and
inc
add
adc
pop
and
xor
jno
rcll
xchg
and
pop
xchg
jne
mov
xchg
rolb
push
sub
stc
into
imul
daa
fildl
mov
fidivrs
sub
jne
iret
into
shl
imul
xchg
data16
mov
mov
cli
xchg
xchg
jg
mov
inc
mov
sbb
shr
das
in
in
mov
and
iret
lea
adc
xor
shlb
arpl
sbb
fcomi
fwait
jmp
shll
call
pop
pop
xchg
arpl
das
jae
sarl
jbe
xchg
jg
add
pop
scas
mov
adc
gs
pop
adc
clc
lret
and
js
hlt
mov
imul
xor
sahf
stos
cs
movsl
imul
mov
mov
mov
jbe
lret
inc
cmp
out
and
mov
stos
xchg
ljmp
adc
insl
push
dec
sub
daa
mov
mov
roll
lret
mov
or
push
loope
ret
add
push
fisttpl
mov
adc
test
je
in
je
sub
lods
dec
or
cld
and
clc
decl
rorl
es
mov
dec
mov
pop
mov
lret
aas
jmp
add
insb
insb
jmp
popf
pushf
fcmovnu
push
cltd
or
rorb
inc
pusha
add
dec
shl
ja
loopne
inc
xchg
icebp
cmpb
or
out
enter
cmp
cmp
push
and
loopne
push
test
pop
ds
add
loop
dec
or
js
jbe
lods
fisttpl
lret
jno
fcomp
cmp
cmpsb
test
addl
cmc
out
nop
push
arpl
dec
lcall
mov
pop
loop
outsl
jmp
rol
mov
adc
lea
scas
adc
clc
pushf
arpl
add
imul
xchg
fstpl
fcom
jl
inc
or
jmp
inc
js
adc
push
jb
in
add
or
inc
into
mov
push
ficoml
cmp
mov
cmpsb
xor
ja
xorps
adc
cmp
jno
ret
sub
rclb
cld
out
in
icebp
int3
sbb
ret
sub
into
stos
xor
mov
ret
lahf
out
aaa
push
or
xor
or
out
sahf
test
and
out
xchg
sbb
mov
fsts
xchg
xchg
loope
je
xchg
repnz
dec
cmp
xchg
mov
pop
push
xor
hlt
addr16
pop
dec
or
or
pop
out
pop
sub
cld
fcompl
xchg
push
cmc
fwait
mov
rolb
and
and
pushf
sub
pop
cmpsl
mov
or
dec
push
imul
cltd
std
cmp
std
mov
lea
xchg
pop
pop
adc
fyl2xp1
pop
fwait
xor
mov
and
add
xor
push
mulb
or
test
call
gs
push
in
pop
sub
pop
in
xchg
inc
cmp
add
dec
or
and
or
cmp
mov
mov
mov
lods
mov
insl
or
xor
xor
test
aad
push
push
loopne
xor
or
popa
inc
adc
loop
ja
dec
rorb
int
push
lds
jmp
jno
cs
arpl
xchg
xchg
dec
jne
adc
gs
pop
fwait
cmp
addb
sbb
repz
push
pop
adc
rolb
adc
push
cld
push
or
adc
and
jp
mov
jp
idiv
loope
adc
scas
mov
add
sbb
sub
in
sbb
jg
rcrb
add
into
js
sbb
mov
fisubrl
jns
dec
lds
iret
push
mov
mov
leave
and
popa
aaa
lea
jl
adcl
lds
imul
inc
notl
pop
push
pop
je,pn
adc
dec
insb
jno
xor
adc
jl
inc
sub
test
push
aas
bound
cwtl
call
add
push
loope
lds
sub
xor
sahf
dec
rclb
ja
insl
insb
imul
ss
ljmp
dec
aaa
sbb
mov
pop
sti
pop
stos
sub
jge
or
sbb
pop
dec
and
pop
imul
in
pop
fs
lods
repnz
sub
sahf
test
add
insl
or
cmpsl
push
setno
test
leave
rcrl
push
in
fsubs
push
dec
mov
shll
xchg
lock
out
int
aaa
test
lret
scas
or
cwtl
add
lret
arpl
add
jl
jb,pt
or
dec
xlat
mov
gs
int3
shl
lahf
or
rcll
sub
ret
ret
pop
popa
cmp
outsl
iret
pop
mov
lret
test
imul
sahf
mov
xchg
and
arpl
cmp
cmc
mov
inc
xchg
in
inc
pop
rcl
cmp
outsl
sub
scas
dec
pushf
push
out
jl
inc
lock
cmp
xor
aaa
aad
loop
xor
sbb
xchg
push
pop
sahf
adcl
js
test
pop
mov
pop
jae
push
lcall
test
mov
inc
and
pop
mov
xor
jmp
insl
xor
xchg
and
outsb
lods
mov
lret
add
push
xchg
enter
cmp
cmpsl
or
add
out
pop
jmp
xorb
lods
xchg
in
dec
pop
pop
imul
mov
sbb
dec
or
adc
dec
repnz
xor
jo
and
addr16
daa
or
std
pop
xchg
cs
ljmp
aas
shrl
mov
sub
mov
daa
and
dec
incb
aam
jle
rcrl
sbbl
in
push
and
add
call
repnz
icebp
cmc
mov
cmp
cmp
mov
ret
insl
pop
mov
inc
int3
push
jle
hlt
popf
mov
push
xor
sbb
push
into
fidivrl
cmp
leave
aam
cmpsb
dec
mov
or
sub
shll
ja
movsl
mov
rorl
lds
or
std
push
inc
loop
movsl
push
mov
inc
test
jecxz
stos
rcl
dec
mov
testb
loop
jmp
popa
adc
mov
mov
iret
mov
sbb
je
cli
xor
repnz
insl
push
sbb
in
push
mov
int3
in
dec
adc
push
dec
shll
lea
dec
lea
push
or
ds
daa
mov
and
dec
addr16
test
cli
adc
jae
insl
stos
test
outsb
fucomi
pop
dec
and
das
mov
cmpsl
test
cwtl
mov
stos
push
bound
mov
fistpll
jge
xor
repz
inc
pop
dec
jne
pop
ret
das
sub
mov
dec
in
pop
jae
fistl
call
into
inc
dec
dec
enter
pusha
js
mov
jmp
lret
shlb
movsb
arpl
cwtl
inc
jno
sbb
decl
adc
push
inc
aam
and
rcrb
xor
mov
mov
sbb
in
xchg
xchg
pop
fcom
jno
sbb
inc
and
sbb
mov
dec
push
jae
js
std
or
dec
add
push
lock
mov
cli
sub
xorb
push
dec
mov
in
jns
insb
sub
mov
cmp
fwait
inc
ret
xchg
jns
lods
in
rol
mov
or
repz
pop
dec
fldenv
xor
rcrb
in
push
in
sub
fldpi
rcll
mov
mov
je
into
jbe
jns
nop
pop
push
add
sub
add
into
cmp
test
pop
jle
xchg
clc
bound
xor
notl
xor
mov
adc
ret
push
xor
into
or
pop
fwait
mov
adc
in
push
jnp
nop
push
cmp
test
or
mov
sub
pop
mov
loope
jae
sti
push
jno
enter
xor
pushf
sbb
mov
dec
lods
xor
shlb
insl
cld
loop
mov
inc
jbe
lds
xlat
mov
sti
jecxz
fidivrl
jge
jae
jmp
loopne
inc
loope
mov
mov
divl
cmp
ss
add
lea
je
insl
xlat
push
in
and
lods
push
fcomps
sub
adc
jp
in
adc
test
jge
push
cmp
sbb
push
nop
add
sub
decl
shll
mov
pop
adc
push
movsl
jp
or
enter
aaa
pusha
iret
lcall
stos
cmpsb
out
ret
cmp
xchg
mov
xor
or
testb
lods
jbe
add
or
jp
jne
in
push
mov
les
ret
and
pop
movsl
mov
jg
hlt
inc
hlt
xchg
mov
data16
adc
leave
iret
inc
in
aad
aam
mov
xor
ss
dec
insl
iret
aam
lods
div
xchg
push
push
inc
cmp
scas
inc
mov
js
hlt
cli
push
add
cmp
xchg
adc
enter
cmpsb
add
sti
mov
pop
pop
pop
inc
mov
rol
mov
pop
iret
int3
adc
adc
pop
ds
xlat
dec
test
jae
cld
xchg
lahf
jno
out
xor
es
push
inc
cmp
test
push
cmpsl
adc
inc
ficoml
dec
or
loop
jecxz
lock
cmp
es
push
adc
orb
xor
sbbb
push
cmp
add
in
out
decb
pop
imul
fidivrs
add
inc
in
test
sub
sbb
adc
mov
call
dec
sti
aad
jb
clc
sub
popa
cld
mov
cwtl
pop
inc
and
xor
lods
sub
pop
stos
stos
es
mov
inc
cmp
lret
outsb
sub
or
leave
sbb
xchg
icebp
loope
test
or
cmpsl
xor
fdivs
pop
xor
sahf
pop
lcall
insb
inc
adc
gs
jne
enter
mov
mov
sbb
icebp
and
sbb
pop
adc
ja
jle
cwtl
and
int
lds
ret
es
sub
adc
sbb
adc
sti
loop
cmp
xor
clc
cmp
popa
clc
pushf
leave
fdiv
aaa
mov
push
out
jl
push
aad
std
jg
clc
and
bound
mov
mov
and
cmp
pop
mov
imul
pop
inc
mov
iret
stos
jns
lock
scas
xchg
mov
cvttps2pi
xchg
lahf
jne
out
lods
sub
popf
nop
pop
aad
mov
pop
pusha
mov
jl
push
adc
pop
push
scas
pop
movsl
mov
enter
cmp
inc
cmc
icebp
fcoml
xor
clc
lods
mov
inc
mov
jl
cltd
fimuls
and
cmp
scas
jg
jmp
inc
ret
lahf
dec
stos
xor
push
push
xchg
lods
loop
mov
sub
jp
dec
jg
int
pop
fnstcw
gs
addr16
jecxz
je
cmpb
out
mov
cmpsl
cmpb
pop
jbe
dec
fs
sbb
lods
ficoml
pop
scas
or
ja
or
cltd
popf
imul
and
mov
das
sbb
xor
nop
sub
push
icebp
lods
cld
adc
out
movsb
ja
mov
imul
and
or
orl
inc
loop
gs
arpl
fidivs
dec
sub
sbb
rclb
add
rcr
lods
out
add
or
repnz
scas
adc
pop
sub
scas
jnp
mov
push
outsb
scas
imul
pop
mov
decb
dec
mov
mov
outsl
testl
pop
sub
int
push
or
jbe
cltd
das
fldt
mov
push
in
lret
and
mov
pop
xchg
sbb
and
pop
mov
lods
enter
scas
push
aas
mov
pop
leave
sbb
into
mov
ret
inc
sub
aas
and
inc
and
movsb
sbb
push
enter
pop
sbb
shrb
xor
bt
and
add
add
mov
cmp
sarb
jle
rorl
mov
xchg
call
xor
vprotd
sbb
lods
mov
in
jne
enter
adcl
pop
and
push
bound
adc
add
je
int3
xlat
lcall
push
lds
mov
sub
jg
lds
xor
imul
or
int
xchg
or
aad
shll
mov
adc
iret
rcl
inc
sbb
fmull
outsl
adc
push
push
xchg
out
out
mov
ret
cmp
or
addr16
lea
mov
sub
movswl
lock
test
push
add
and
in
mov
stc
test
sub
jb
lahf
leave
es
jnp
lret
in
pop
fcoml
xchg
inc
pop
gs
fs
inc
test
out
mov
sbb
repz
cltd
dec
sub
ds
lods
jl
test
hlt
jmp
xchg
or
cmp
jns
dec
sar
icebp
aam
xchg
repz
jae
mov
mov
fxam
or
bound
movsb
sub
and
fwait
jne
sti
jb
pop
stc
or
push
adc
cltd
jecxz
push
negl
sub
jne
popa
gs
push
fsubrs
mov
add
int3
cmp
gs
or
cwtl
leave
testl
filds
xchg
lods
and
sbb
adc
sahf
sbb
add
jg
adc
fistl
lcall
add
out
sbb
cmp
cmp
arpl
loope
call
into
and
add
push
inc
and
push
rcr
mov
pop
xchg
mov
xchg
sub
shlb
pop
nop
insl
in
stc
add
pop
in
testb
sub
inc
sub
jmp
xchg
shrl
imul
mov
push
ror
sub
test
jl
aam
dec
insb
ret
je
dec
and
rol
push
loopne
je
je
sbb
rorl
shr
adc
data16
cmpsb
inc
lods
mov
rorl
aad
icebp
mov
jo
es
daa
xchg
mov
sbb
xor
mov
sub
sub
xchg
aaa
sbb
int
sub
sbb
add
shlb
jbe
push
bnd
sbb
mov
jp
sub
in
mov
loop
pop
dec
dec
inc
or
dec
inc
jae
icebp
sub
xor
sub
jbe
aad
mov
mov
mov
sbb
cmpsl
or
mov
scas
popa
int3
sbb
lds
mov
dec
add
xchg
fwait
or
insb
or
jp
mov
iret
fidivrl
inc
pop
ljmp
sbb
dec
or
leave
pop
dec
int
repz
and
lret
mov
xlat
pop
jp
lahf
ret
aam
daa
data16
add
data16
imul
inc
adc
push
adc
sti
insb
loop
test
dec
call
jno
rcl
xor
push
out
jle
add
std
pop
and
in
ljmp
repz
and
xchg
int3
lret
popa
mov
and
ja
xchg
push
lcall
shrb
repnz
cwtl
daa
pop
nop
or
jbe
fs
pusha
pop
add
data16
mov
sahf
mov
sarb
xor
dec
xor
xchg
lahf
out
sub
jl
jl
pop
cmp
xchg
pop
jns
scas
insl
aam
imul
nop
pop
sub
fmuls
lret
add
jle
cmp
arpl
xor
and
lods
push
pushf
push
daa
lds
or
clc
scas
sub
add
mov
sbb
dec
mov
pop
lahf
sbb
cmp
hlt
popf
xor
int3
and
sar
inc
push
int3
xor
mov
mov
or
jae
lods
or
repnz
inc
xor
dec
mov
adc
insb
cmp
mov
sub
clc
xchg
xor
enter
into
ds
cltd
cmpsb
jae
inc
and
xchg
add
sub
pop
flds
int
dec
dec
add
loopw
sub
scas
mov
push
jb
mov
xor
idivl
mull
jp
push
je
and
imull
cmp
jne
pop
dec
push
test
and
pop
loopne
push
push
mov
incb
mov
inc
inc
sbb
push
fldenv
mov
lret
iret
aam
adc
mov
fwait
rorb
push
int
add
inc
adc
in
inc
cmpb
add
cmp
mov
and
pop
sar
cmpsl
in
adc
addb
mov
mov
int3
jae
or
ljmp
mov
adc
mov
mov
es
adc
mov
daa
add
outsb
jns
test
js
pop
mov
xor
xor
mov
fiaddl
fcoml
fwait
hlt
xor
mov
or
imul
aaa
dec
and
int3
mov
aas
std
push
pop
jl
jle
std
jb
jge
shrl
call
rolb
pop
mov
add
jb
adcb
popa
pushf
lods
shl
xor
cmpb
sbb
mov
dec
sub
ret
pop
push
push
scas
inc
test
shll
push
movsl
or
fwait
pop
pop
clc
jo
push
or
sti
and
cltd
test
pop
mov
mov
xor
mov
mov
mov
decb
add
mov
jae
push
lock
jmp
mov
repz
popf
adc
scas
orl
cmp
xchg
xchg
mov
test
clc
lds
scas
sub
ffree
icebp
fsubrs
xchg
adc
ljmp
ret
movsl
dec
dec
jecxz
ljmp
jge
fwait
inc
inc
jmp
ret
test
loope
dec
mov
out
shrl
mov
inc
jae
imul
into
out
adc
pop
jbe
mov
sbbl
push
pop
cmp
push
push
dec
add
push
cwtl
popf
inc
lods
mov
pusha
xor
sub
mov
cmp
stos
cli
add
push
pop
aad
pop
xchg
pop
rclb
repnz
notb
cld
sbb
lcall
out
test
sub
int3
addr16
mov
mov
dec
out
stos
iret
xor
rcrb
cmp
xorb
mov
push
rcrb
mov
mov
mov
or
mov
in
loopne
dec
mov
fisubs
and
inc
xlat
fstpt
mov
rcll
loope
in
mov
mov
bound
call
xchg
cltd
sub
aas
jmp
imul
mov
jae
jb
cltd
sarb
xor
push
adc
leave
movsb
clc
xchg
lahf
movsl
inc
fmull
sub
push
mov
les
std
test
pop
addr16
into
hlt
sbb
sub
pop
or
js
es
andl
mov
lcall
cwtl
adc
popa
adc
sbb
and
add
not
add
pop
lea
lea
push
mov
daa
mov
jno
dec
adc
push
sbb
pop
ret
xor
pop
pop
xchg
jne
xor
push
fnstcw
scas
and
shlb
nop
fisubrl
hlt
push
pop
outsb
lahf
fsts
jbe
add
lcall
dec
repz
push
mov
lods
xor
dec
dec
into
mull
jg
mov
mov
push
dec
ljmp
int
stc
or
clc
dec
xchg
mov
jmp
or
and
fs
cltd
shrd
cmp
ds
movsb
in
pop
cmpsb
daa
shll
cmp
add
inc
mov
cs
bound
inc
into
std
push
icebp
or
pop
jns
arpl
subb
cld
pushl
in
pop
dec
enter
jno
dec
adc
popa
test
in
ret
pop
adc
pop
jae
aad
in
insb
xchg
sahf
mov
dec
ret
lea
out
shll
das
jmp
mov
lcall
and
imul
mov
cwtl
push
mov
cmpsb
into
sbbl
push
xor
insl
push
push
push
push
dec
add
lea
push
jnp
std
mov
or
stc
movsb
sub
lahf
stos
and
shlb
sub
insl
mov
pop
dec
adc
add
add
xor
or
push
jne
fildll
or
cmp
clc
xchg
lcall
sbb
out
cli
fsubl
lcall
sub
ud0
pop
sub
imul
fwait
insl
sub
jl
dec
les
data16
mov
cmp
outsb
ljmp
repnz
inc
and
icebp
pop
cmpsl
xor
lret
es
mov
out
or
jbe
dec
jp
jp
aas
jbe
sbb
out
fadds
hlt
insb
mov
std
adc
or
pop
push
or
sti
xor
cltd
lcall
bound
in
xor
call
popf
cmp
add
leave
cmp
inc
ret
arpl
jnp
sub
xchg
cld
fisttpl
dec
adc
shrb
decl
stos
inc
mov
xor
test
stc
adc
inc
xchg
rcrb
in
aaa
aas
test
dec
ja
fs
cmp
dec
mov
out
lods
xlat
dec
lods
cmpsb
stc
push
or
cltd
inc
or
adc
hlt
mov
sub
movsl
icebp
ja
les
int3
insl
in
pop
movsl
inc
in
jno
cltd
add
lcall
out
mov
lcall
fisubs
jne
iret
xchg
call
scas
push
pop
bswap
scas
mov
sbb
arpl
lret
jae
mov
push
jns
lcall
repz
fists
test
xchg
pop
xchg
xchg
ret
push
mov
iret
mov
pop
into
icebp
loope
leave
popf
aam
xlat
jno
popf
rcl
xchg
add
test
adc
pop
in
loope
push
outsb
push
cmpl
sbbl
call
pop
sub
test
scas
mov
outsl
adc
jecxz
fidivs
dec
sbb
ss
adc
xchg
lahf
xor
inc
sub
push
inc
mov
and
subl
sbbl
or
xchg
mov
ret
cmp
rorl
dec
mov
jg
pop
xchg
icebp
pop
nop
mov
test
lahf
pop
sbb
in
jne
outsb
xor
adc
lret
lcall
imulb
mov
sbb
loopne
cmp
je
jle
addr16
cmc
aam
inc
xorl
mov
sbb
icebp
stos
jecxz
xchg
sti
and
rorb
mov
rcrl
pop
sbb
and
movsb
sti
dec
push
pop
add
ss
sti
rol
cli
pop
out
sysret
sub
jg
sub
adc
or
daa
xchg
push
jl
les
enter
jb
xchg
mov
adcb
pop
ja
das
or
into
dec
or
ja
fildl
cmp
sti
xchg
clc
imul
stos
or
mov
adcb
cmp
mov
out
mov
xor
int
aam
cmp
pusha
mov
push
les
adc
pop
mov
movsl
pop
out
in
andl
adc
mov
and
jg
cli
jb
test
xchg
popa
or
xorb
mov
inc
je
add
icebp
repz
out
outsl
je
rorl
cltd
mov
subl
sbb
outsl
xchg
test
jae
in
and
scas
inc
pop
lret
or
push
ljmp
mov
sbb
xor
popf
hlt
xor
lcall
mov
add
test
test
add
cmp
jnp
xor
mov
push
xchg
insb
mov
test
ja
cvtpd2ps
jbe
lret
and
js
arpl
loop
dec
mov
jp
xor
jmp
mov
iret
xor
decl
scas
push
stc
das
xchg
xchg
mov
sbb
pop
int3
jle
cs
fsubrl
inc
shrl
clc
sbb
jne
scas
xchg
sub
dec
adc
and
int3
or
mov
dec
shll
cmp
cltd
es
jb
or
sarb
add
pop
stos
xor
std
jae
fwait
mov
add
lea
fadd
fistpll
jge
fdivs
mov
add
push
fdivrl
imul
stos
adc
add
sub
fistps
inc
lahf
shll
inc
cmp
iret
dec
arpl
sub
int
or
enter
jne
fsubrs
mov
ret
subl
push
inc
das
std
mov
push
sahf
sbb
pop
out
and
push
cld
lcall
insb
pop
or
stos
hlt
outsb
les
das
push
bound
dec
xchg
dec
cld
gs
popa
pop
cmp
sub
fnsave
push
loopne
or
jl
stc
ret
push
shlb
add
fidivl
sti
std
mov
xchg
pusha
sbb
jb
or
popa
out
loopne
mov
pop
push
jle
lcall
into
insb
or
push
ret
fs
push
mov
or
lahf
sbb
xchg
js
loop
pop
adc
ja
sbb
xchg
stos
add
jl
sbb
cmp
xor
dec
lahf
cmp
push
orb
imul
lahf
mov
jns
xor
pop
les
mov
rol
mov
stos
hlt
test
adc
rcr
dec
jle
lods
push
loopne
inc
push
push
xor
cwtl
stos
mov
adc
mov
es
cmpsb
jmp
icebp
push
add
aad
sti
jecxz
mov
push
mov
dec
ret
push
pop
movsb
mov
arpl
xchg
and
orb
push
ffreep
scas
fbld
push
jb
ret
mov
push
cmp
jno
push
or
xor
insb
pop
pop
cmp
ss
mov
mov
out
xchg
add
push
repnz
sbb
adc
aas
sbb
push
int3
inc
jno
jns
je
mov
mov
xor
and
mov
repz
xlat
inc
adc
or
loope
push
out
inc
in
shll
push
iret
or
sbb
dec
mov
in
enter
test
call
jb
lret
aad
jae
xchg
out
adc
mov
jl
fisubs
add
xor
aam
repz
and
pop
cwtl
das
enter
push
inc
lods
and
mov
lock
mov
je
push
inc
or
mov
mul
add
mov
mov
adc
push
mov
nop
stc
push
push
sub
pop
aaa
idivl
insl
and
cmpsb
dec
pop
jne
out
jo
pop
add
xchg
lea
adc
sub
mov
pop
push
enter
imul
rcll
scas
xlat
loopne
dec
mov
stos
arpl
jo
jp
jnp
iret
lret
loope
fstps
jmp
rcrb
and
bound
lods
in
push
inc
sahf
jne
pushf
and
xchg
xor
push
leave
pop
mov
test
cmp
iret
movsb
sub
mov
mov
mov
fnstenv
dec
mov
push
push
fwait
rolb
cmp
xor
pop
imul
and
sarl
int3
pop
adc
push
mov
insl
mov
xchg
fld
sub
loope
dec
jne
fidivrs
mov
push
mov
cmp
cmpsl
and
sub
mov
out
sbb
loopne
or
add
mov
andl
inc
and
mov
xchg
mov
xchg
xor
push
fildll
aaa
sarl
sub
mov
dec
loope
jge
mov
and
mov
movsb
mov
adc
dec
mov
mov
xor
sbb
push
or
inc
xchg
xchg
sub
test
ficoms
mov
jnp
mov
sahf
xor
mov
nop
dec
pusha
pop
mov
fwait
lret
lret
cltd
arpl
call
aaa
mov
sbb
cli
push
jg
das
pop
in
lea
pop
pop
in
xor
outsb
xchg
inc
pushl
sub
cld
xor
cli
sahf
data16
mov
mov
inc
scas
divl
sarb
xchg
mov
fidivl
xlat
jbe
cltd
loope
sbb
sarl
fstl
pusha
push
adc
aas
test
stc
add
jle
push
xor
shrl
xchg
outsl
inc
enter
mov
jb
pop
or
pushf
lret
mov
sbb
aad
jns
cltd
int3
dec
stos
mov
shlb
jns
out
cwtl
mov
sub
dec
fwait
scas
xchg
push
pop
ss
push
lods
xchg
push
xor
sub
mov
and
sahf
add
pop
xor
jns
iret
jg
aam
or
rcrl
push
dec
sbb
testl
and
mov
sub
adc
xchg
pop
icebp
pop
cwtl
cmp
inc
pop
into
dec
jp
stos
ret
mov
shlb
dec
inc
lods
cli
push
jno
lds
jb
pusha
inc
xor
popf
sub
mov
jge
inc
pop
cmpsl
xlat
jecxz
insb
pop
enter
jl
nop
cmp
clc
jge
pop
add
out
das
xlat
mov
xchg
jle
mov
push
inc
xchg
je
add
fnclex
push
cmc
xchg
cmp
imul
test
jg
test
jnp
shll
stos
xlat
inc
xlat
and
into
sahf
out
and
cmp
mov
ljmp
adc
lods
sti
mov
mov
nop
mov
mov
cmpsb
xchg
mov
add
ja
shrb
dec
and
hlt
sahf
xchg
fcmovnbe
adc
in
rcl
jbe
mov
mov
decb
sub
pusha
addr16
push
xorl
cmp
sbb
daa
xchg
and
xchg
and
and
mov
mov
faddl
ret
aaa
mov
bound
pop
lcall
cmp
test
sub
jecxz
mov
mov
lods
mov
andb
cmp
jmp
sub
ljmp
leave
push
adc
lret
pop
pop
enter
jns
jecxz
jge
cmp
aas
das
add
cmpsl
pushf
dec
out
jmp
push
xchg
aad
mov
imul
pop
jmp
sub
scas
mov
aaa
push
repz
mov
pusha
int
lahf
cmpsb
aaa
dec
mov
movsb
lcall
insl
cli
pushf
mov
jmp
ror
loopne
sbb
fnsave
adcb
decl
out
sti
xchg
jmp
mov
sbb
pop
and
sbb
in
jl
mov
ret
xchg
rcll
ror
push
lea
popf
jle
pop
mov
mov
inc
negb
sahf
scas
jp
ds
bound
fists
or
or
cmpsb
je
cmc
cmp
xchg
sbb
or
and
mov
xor
push
jecxz
jp
stos
pop
xchg
or
das
push
push
stos
sarl
mov
std
cmp
cmp
shufps
inc
and
and
mov
mov
mov
xor
pop
dec
push
xlat
ja
imul
fcoml
mov
stc
lcall
insl
in
js
jbe
jb
mov
rcrb
int
dec
jno
das
pop
push
cmp
pop
jb
inc
aaa
pop
mov
mov
gs
addl
int
out
push
out
rcr
call
rorb
aam
cmc
pop
jmp
cmp
fsts
ret
pop
adc
mov
inc
ret
outsl
jo
add
pop
imul
xchg
fwait
outsb
pop
mov
inc
sub
out
outsl
mov
dec
insb
cmp
push
pop
mov
out
jns
std
loop
inc
sbb
mov
adc
popa
jecxz
dec
fnstcw
fxch
lods
test
mov
pop
jge
int3
arpl
out
push
dec
out
inc
cmp
mov
mov
cltd
jp
clc
imul
add
loop
mov
sub
xchg
in
sbb
pop
xchg
lcall
push
xlat
and
or
into
imul
adc
jo
inc
mov
dec
faddl
add
xor
stc
mov
mov
jmp
jnp
pusha
mov
push
shrb
push
arpl
mov
addl
or
sti
sub
jge
sub
loope
cmp
mov
push
shll
or
dec
jne
cmp
or
sahf
rorb
sbb
retw
mov
cli
divb
cwtl
inc
js
ljmp
xchg
sub
jns
shlb
jne
jno
push
jl
pop
insb
into
dec
lea
test
in
mov
inc
xor
icebp
test
mulb
imul
push
jmp
shlb
sbbb
push
loop
idivb
and
mov
cmp
xchg
and
out
insb
sub
push
fdivl
sub
jne
xlat
andl
cmc
imul
ret
xor
lds
mov
outsl
out
sub
imul
lods
fcoms
gs
mov
pop
pop
fldl2t
adc
cmpl
jne
je
add
cs
pop
das
and
mov
mov
leave
fisttpll
stos
addl
mov
mov
cld
loopne
fstpt
mov
fsts
lock
xor
aad
jmp
pusha
xchg
rclb
ret
or
mov
sub
lahf
mov
cwtl
insb
xor
imul
and
in
dec
dec
jne
out
jg
addr16
icebp
scas
cld
lret
xor
fdivs
dec
pop
fidivrl
jb
push
inc
and
push
pushw
mov
jecxz
jne
mov
shlb
jge
pushf
xchg
pushl
add
mov
push
xchg
in
pop
popf
sahf
and
incb
mov
shrl
call
sub
cmpsl
ljmp
lock
or
repnz
call
out
or
or
jns
lods
ljmp
test
and
les
test
test
mov
jbe
jmp
xor
cmp
aam
ja
mov
add
mov
and
xlat
or
adc
push
in
roll
aam
push
xchg
dec
sub
fwait
sub
pop
or
push
or
sarb
fnstsw
or
pop
cmp
xchg
or
and
add
data16
mov
xor
fwait
jmp
rcrl
mov
push
xor
push
shll
int3
ret
sbb
pop
sub
mov
jne
sahf
mov
inc
dec
mov
sub
movsl
jmp
rorl
sbb
inc
fs
mov
push
mov
jbe
mov
es
movsb
sbb
repz
and
xchg
dec
mov
jecxz
shl
pop
out
cltd
mov
jp
mov
ja
mov
fs
icebp
mov
data16
xchg
cmpsl
xchg
xchg
ror
push
mov
sbb
jle
sub
push
adc
xor
xchg
addr16
or
psubusb
or
insb
loopne
adc
jp
xchg
lock
jo
daa
mov
add
rolb
pop
push
xor
pushf
mov
data16
pop
clc
jge
stos
jecxz
jg
dec
mov
push
cmpsl
imull
inc
dec
sub
jg
sub
ret
xor
push
xchg
js
lahf
fsubs
mov
xchg
xchg
xor
add
das
sub
push
mov
ret
ret
rolb
inc
or
les
adc
les
shrb
cld
movl
out
hlt
les
cmp
cmp
mov
stos
aaa
and
sar
mov
and
jo
dec
cmc
clc
subb
mov
mov
and
cld
mov
sarb
nop
cld
jo
pop
das
cmp
test
add
popa
cmpsb
cmp
test
or
sub
inc
mov
popa
std
pop
bound
lods
ljmp
cmp
repnz
sbb
rorl
jg
sbb
pushf
and
inc
fdivl
sahf
jne
push
and
dec
pusha
rorb
pop
ret
add
push
cmp
inc
adc
fs
xorb
push
sbb
loop
gs
out
xor
jae
ret
push
pop
dec
in
hlt
cmpsl
push
test
xor
dec
adc
push
les
popf
cmp
gs
js
push
adc
jmp
push
lret
jecxz
mov
pop
xor
lret
mov
daa
jmp
mov
jmp
jp
mov
aaa
lods
je
les
test
pop
mov
fs
movsl
xchg
dec
mov
mov
jge
or
push
fwait
lcall
push
scas
pop
mov
mov
add
sbb
jno
mov
pop
in
filds
mov
addb
cs
mov
xor
cli
mov
dec
std
xchg
push
pop
pop
pop
mov
ljmp
sarb
dec
ja
lcall
popf
js
mov
subl
gs
in
dec
lret
stos
push
ss
push
nop
neg
pop
into
js
cmp
fwait
mov
hlt
or
leave
mov
jle
pop
mov
mov
xchg
repnz
inc
xor
es
sub
repnz
iret
mov
add
clc
gs
lds
leave
cmp
and
cmp
in
sti
out
adc
pop
hlt
jmp
pushf
rcl
jns
adc
and
pop
stos
int3
adc
pop
das
repz
xor
or
arpl
jg
push
pop
push
rcrb
jae
mov
push
fwait
pusha
and
jl
out
pop
rclb
push
mov
xchg
sub
aad
mov
icebp
rcl
std
in
sahf
fidivrl
sbbb
imul
lret
jmp
adc
test
mov
adc
pop
jp
imul
incb
cs
xorb
cmpsl
popf
daa
xchg
lods
int3
fsubs
xor
mov
movsb
sbbl
pusha
repz
lret
lds
insl
dec
push
pusha
shrb
xor
movsb
inc
ljmp
fstpt
loopne
sahf
jne
mov
mov
test
push
sub
xchg
outsb
scas
jnp
data16
nop
mov
rorb
mov
push
adc
leave
movsb
inc
mov
mov
sarl
jae
cmpsl
pop
xor
xchg
or
hlt
hlt
shlb
into
add
inc
and
sub
fwait
pushf
data16
jae
sbb
cmp
insb
fisubl
fsts
jnp
in
xchg
add
in
xchg
jmp
js
sbb
jae
roll
jae
loope
jmp
mov
sub
xchg
xchg
ljmp
jo
test
mov
fsubrl
and
pusha
repz
mov
out
sbb
mov
add
and
dec
repz
pop
mov
movsl
mov
jmp
or
sbb
or
mov
in
pop
scas
jge
lock
or
inc
mov
fadds
insl
pop
jp
mov
ds
pop
pop
cli
call
jl
rcrl
jae
in
jb
jl
jmp
mov
movl
mov
sbb
pop
es
in
sbb
sbb
or
ret
mov
and
ret
scas
pop
int
cmp
imul
mov
push
ror
nop
pop
adc
xor
and
out
repnz
adc
and
xchg
call
loopne
cmp
mov
pop
pop
xor
test
add
inc
roll
jp
mul
dec
dec
sbb
and
push
ljmp
dec
add
mov
sti
ret
mov
jle
hlt
jne
xchg
adc
lods
lahf
inc
rorl
inc
in
inc
dec
xchg
inc
sub
imul
jo
mov
pop
cltd
rcrb
outsl
inc
bound
mov
lods
xchg
jo
sub
sub
lods
outsl
fsubrs
jp
addr16
addr16
jmp
push
mov
xchg
loope
push
push
lret
pop
lock
cmc
sbb
push
in
inc
pop
adcb
xor
jge
jo
sbb
jmp
stos
aam
xchg
jno
lret
mov
insl
fwait
mov
pop
xor
test
fcom
pop
mov
popa
fwait
push
push
ja
leave
mov
fbld
fldenv
shll
lods
or
dec
inc
adcb
lret
mov
in
adc
cltd
ja
mov
out
mov
les
mov
xchg
push
mov
nop
mov
mov
lods
cmp
aam
loopne
and
into
jnp
pushf
inc
sub
hlt
dec
and
loop
fbstp
stos
inc
mov
nop
stos
mov
cmp
dec
cmc
mov
sub
outsb
fstpt
mov
loop
mov
repz
pop
adc
dec
cmp
test
js
clc
mov
out
adc
enter
inc
or
add
rolb
call
jbe
push
xchg
pop
and
pop
call
push
icebp
xor
mov
jecxz
cmpsl
ds
push
insl
testl
sbb
push
int
jno
or
mov
frstor
sub
xchg
fsubr
les
loopne
xchg
and
cmpsl
sub
lahf
in
cbtw
mov
or
xchg
test
jmp
pop
inc
loopne
and
pop
xlat
push
mov
pusha
adc
call
dec
adc
shrl
adc
aam
jae
loope
push
out
or
cmpsl
incl
call
fstps
test
aad
pop
xor
flds
dec
xor
mov
or
test
sar
popa
push
orl
clc
mov
dec
cmc
and
adc
jnp
js
addl
jmp
jae
add
mov
jbe
add
mov
jb
push
stc
cmp
jns
dec
dec
mov
or
mov
and
adc
clc
inc
loopne
add
xchg
jo
mov
insl
aam
sub
push
xchg
mov
call
adc
shrb
addb
out
sub
jb
push
xchg
aam
push
fs
sahf
push
test
sti
sub
xchg
push
addr16
ss
stos
fisubs
push
lcall
jo
lret
mov
mov
push
cmp
mov
sub
cltd
jge
xchg
pop
xorl
lcall
add
pusha
ljmp
adc
insb
loope
xor
ret
push
add
sbb
sbb
repnz
sub
bound
inc
mov
pushf
daa
out
cmpl
push
lea
ds
into
xor
aad
mov
arpl
and
pop
sub
add
cmp
shll
das
mov
je
dec
mov
pop
cmp
mov
mov
sub
mov
fistl
adc
mov
popa
mov
or
lret
cmp
push
lock
xor
dec
inc
add
outsb
sub
sbb
dec
loop
loop
or
imull
lahf
rcl
mov
sub
inc
test
jnp
mov
cmpsb
dec
aad
nop
or
adc
xchg
push
mov
fiaddl
pop
xor
je
mov
dec
or
and
inc
and
mov
sbb
sahf
sbb
in
sub
cmpsl
mov
fstpt
xchg
lods
enter
xchg
repz
les
mov
dec
jmp
lds
std
push
push
pop
xchg
push
jp
in
insb
loopne
or
pop
ret
mov
xchg
call
in
pop
call
cmp
mov
iret
mov
mov
les
cwtl
cmp
test
sub
pushl
pushf
dec
xchg
and
jno
push
xchg
clc
xchg
xchg
pop
pop
or
test
or
popf
movsb
sbb
jle
sti
call
dec
mov
lret
mov
push
test
xchg
pushf
imul
daa
ret
fwait
xchg
sbb
pop
inc
stc
push
ds
sub
pusha
fs
push
mov
loope
push
xlat
repz
pop
push
add
jae
dec
mov
mov
cmc
cmc
negl
out
add
or
nop
xchg
in
nop
adc
jnp
sahf
in
adc
insl
movsb
and
into
adc
dec
out
int3
out
adc
pushf
rcl
out
outsb
mov
test
data16
push
clc
mov
sbb
ss
jmp
ljmp
jae
push
addr16
daa
xchg
je
lahf
in
xchg
mov
push
sub
adc
adc
dec
xchg
mov
shrb
fsub
push
sub
js
test
out
dec
mov
push
sbb
popf
pop
test
pop
pop
pushf
bnd
dec
cld
popf
shr
jne
pop
lock
pop
lret
sbb
cmp
mov
inc
xor
jmp
jg
scas
mov
iret
dec
mov
push
add
stos
inc
mov
loope
pop
std
std
xor
pop
js
mov
out
jl
pusha
pop
sbb
popa
cwtl
cmp
mov
test
stos
pop
mov
test
idivl
sti
nop
scas
mov
mov
inc
mov
sub
cmp
rorl
sub
pop
lea
mov
scas
lret
xorb
inc
andl
mov
and
and
clc
std
fisubrs
xor
dec
cmp
xchg
add
sti
mov
mov
adc
lods
out
dec
fisttps
in
insl
nop
xchg
sti
mov
sbbb
mov
xor
cmp
rol
xorl
add
cld
xchg
andb
jbe
adc
xor
fsubl
pusha
lcall
inc
ficoml
adc
pop
cmp
cmp
xchg
and
push
rclb
inc
sub
repz
xor
cmp
jmp
and
shl
adcl
xchg
int3
pop
jmp
outsl
xor
ret
mov
notb
test
sbb
mov
push
out
sub
jle
jno
test
int
sarb
pop
mov
adc
stos
test
clc
mov
scas
pop
xchg
jne
fimull
lret
fsubrl
xchg
sbb
jo
adc
arpl
mov
ret
je
icebp
nop
push
movsb
inc
scas
mov
and
push
jge
outsl
ficoms
push
pop
jl
stos
xor
and
and
rolb
ds
add
mov
push
add
push
repz
fsts
sub
mov
jmp
in
fabs
adc
xchg
dec
push
push
lcall
stc
ss
daa
push
jb
lret
out
adc
mov
movsl
push
and
mov
and
jg
lcall
pop
xor
xorb
je
mov
jmp
jno
jb
ret
sbb
xor
push
je
xchg
pushf
mov
push
gs
imul
dec
inc
dec
inc
and
push
test
clc
or
adc
sbb
fcoms
test
jmp
dec
in
mov
mov
test
dec
filds
das
mov
lahf
dec
jb
hlt
mov
or
jl
jl
xor
in
xchg
dec
adc
sbb
in
or
jno
imul
sbb
adc
mov
fcompl
es
pusha
jne
pop
dec
je
and
call
shrl
fadds
inc
sub
and
dec
push
mov
daa
mov
movsl
in
dec
inc
inc
shll
xor
dec
dec
fs
sti
fistpll
inc
mov
jl
dec
pop
mov
sbb
lods
dec
mov
sub
pop
cmp
add
jbe
xlat
fstpl
mov
push
mov
xor
mov
mov
push
ljmp
mov
and
lock
inc
mov
mov
cmp
push
xlat
sbb
xchg
insl
jo
cmp
lods
pop
sub
or
fdivs
inc
loop
mov
stos
cmp
es
movl
mov
cmpsb
andb
jae
je
scas
dec
cmpsl
cmp
inc
ja
orl
dec
jle
icebp
jp
and
xchg
push
add
test
and
cltd
call
and
es
push
testl
ret
dec
cld
mov
xchg
sub
rorl
xor
rolb
psubusb
lds
push
dec
push
inc
jne
xor
test
test
out
xchg
mov
pop
pop
or
xchg
xchg
imul
popf
xor
aas
cmp
loopne
push
test
rcrl
popf
in
fprem
xchg
jp
jb
mov
adc
cmp
cmc
shl
jns
mov
xor
std
xchg
push
mov
andl
dec
pop
adc
sub
mov
insb
repnz
in
test
push
ficompl
mov
loop
add
inc
jbe
hlt
loopne
in
push
adc
inc
int
sbb
add
sbb
jnp
add
mov
inc
cmp
sbbb
sub
jg
cwtl
adc
rolb
dec
mov
mov
test
add
pop
xor
inc
fstpl
add
mov
test
cltd
cmp
test
testb
fcomps
jne
inc
mov
jns
and
sub
movsl
adc
sbb
adc
and
adc
xor
out
sbb
jne
push
aam
scas
pop
cmp
adc
jmpw
xor
addb
cmpsb
cmp
and
or
sbb
stc
enter
pop
dec
xchg
jne
dec
rcrb
pop
pop
lcall
imul
iret
addr16
cld
in
xor
add
in
lock
inc
ret
xchg
nop
or
mov
lret
repnz
push
inc
cmp
aam
mov
push
das
cwtl
jnp
xor
push
dec
ja
popa
es
pop
and
subb
xchg
ljmp
cmp
ficoms
mov
dec
dec
push
std
mov
push
dec
push
cmp
outsb
cli
popf
aam
insb
pop
aam
gs
jecxz
jle
mov
add
int3
mov
mov
add
jbe
jo
mov
arpl
or
int
dec
adc
push
popa
dec
imul
ret
flds
sbbb
mov
leave
aaa
in
jle
pcmpeqw
inc
dec
dec
mov
lret
push
scas
in
cmp
shl
bound
stos
ret
popf
call
mov
dec
std
rorb
aad
cmp
mov
jne
ljmp
repz
and
mov
mov
pop
inc
enter
enter
pushfw
movsl
insl
mov
loope
or
aas
loope
mov
pop
cmp
add
imul
outsb
scas
cwtl
cmp
cmpsl
loopne
push
vmwrite
jl
push
outsb
out
inc
icebp
mov
dec
jae
ljmp
pop
rcr
cs
lock
push
push
xor
cmpsb
xchg
sarb
jl
movsb
jbe
loopne
clc
jbe
lods
sbb
into
les
mov
repnz
cli
lock
call
xchg
xor
out
mov
mov
inc
cltd
push
sti
scas
push
mov
mov
xchg
mov
negl
or
fldl
mov
stc
lods
xsavec
jno
lods
pop
test
push
push
pop
addl
xchg
lret
jmp
push
add
loopne
icebp
or
xlat
cltd
adc
xchg
outsl
xchg
and
xor
jns
jae
aad
aas
cmp
xor
jnp
push
in
and
cwtl
xor
and
or
push
mov
scas
addl
xchg
int
jge
int
jmp
test
mov
js
test
xchg
cltd
ss
fnstsw
cmp
mov
ret
into
cltd
aas
cmp
sub
out
mov
pop
inc
cwtl
test
loope
cs
shll
cli
imul
cli
xlat
add
bound
testl
cmp
test
push
mov
push
or
jmp
shl
lcall
mov
sub
imul
clc
aam
arpl
sbbl
mov
ret
push
inc
mov
xchg
mov
call
lods
daa
shrl
jnp
cmpsl
stos
jge
or
jns
inc
mov
xchg
stc
push
cmp
xadd
mov
stos
xor
clc
or
or
test
stos
fsubrs
sub
xor
cmpb
inc
inc
xor
cmp
repz
in
and
pop
mov
or
push
imul
rclb
loope
and
mov
inc
rdmsr
and
lret
jmp
or
sub
fistps
dec
data16
sbb
aas
xchg
sub
adc
push
cltd
push
in
dec
cmp
pusha
test
xor
fucom
int
pop
inc
jnp
das
inc
push
icebp
and
pop
fldt
cmp
inc
cmp
sbb
shll
mov
xchg
pushfw
mov
pushf
sub
xchg
iret
and
repnz
imul
loop
fdivs
stc
rcrl
jecxz
jbe
jmp
pop
lahf
cmp
js
dec
in
mov
insb
push
adc
push
lds
pop
xor
pop
pusha
or
popf
push
fsubp
push
mov
xchg
rolb
jnp
sti
jle
enter
pop
pop
xor
xchg
adc
fldcw
dec
sahf
sub
cmp
movl
idivl
ss
shll
or
fwait
sbb
loop
lcall
add
test
add
loope
popf
sub
test
stos
xchg
fcomps
jb
and
xchg
pop
fildl
iret
push
jbe
xchg
jnp
stc
cmp
cmpsl
adc
and
movsl
cld
mov
cmp
xchg
gs
addr16
out
mov
mov
cmpsb
mov
arpl
inc
lods
push
push
pop
mov
or
test
std
jmp
adc
adc
mov
adc
loopne
pop
cwtl
scas
xor
iret
js
inc
and
test
cld
out
pop
sub
adcb
push
out
inc
daa
xor
dec
push
pop
std
stos
verr
leave
ja
lea
jae
mov
rep
cmp
pop
or
ret
fcomps
out
adc
xlat
xchg
lret
xor
cmpb
dec
jge
enter
add
ret
imul
xchg
sti
mov
aaa
test
mov
mov
xor
mov
iret
xchg
jge
mov
scas
xchg
dec
inc
mov
sbb
mov
lods
mov
xlat
mov
outsl
pop
aad
sahf
out
xchg
lock
add
add
cmpsl
lcall
or
lcall
pop
jecxz
add
sbb
decb
and
pop
js
push
sbb
jmp
dec
dec
mov
ss
push
leave
int3
jb
imul
dec
pusha
inc
xchg
cmp
mov
test
clc
add
mov
push
jecxz
inc
and
mov
out
pop
imul
push
pop
sub
div
imul
xchg
jne
cmp
cmp
out
test
or
mov
aad
sub
cmpsb
mov
mov
dec
cmpsb
push
cmp
and
repnz
pop
loopne
cmpsl
cmp
mov
mov
lret
scas
or
clc
xchg
aad
add
lret
pop
cmpsl
movsl
lods
push
lds
or
aas
xchg
test
hlt
lds
stos
mov
popf
jnp
arpl
adc
dec
xor
test
out
shll
pop
int3
ror
repz
push
jbe
push
in
das
lcall
cmp
dec
sbb
xor
fnsave
repz
mov
popl
xlat
mov
leave
ffreep
xchg
pop
mov
sub
inc
int3
icebp
sbb
cli
ss
fstenv
mov
lods
sub
mov
pushf
mov
fidivl
mov
stos
sub
jo
mov
mov
xchg
mov
mov
rcl
inc
mov
jae
jne
xchg
and
cmpsl
pop
mov
out
ds
dec
mov
cmp
fsubs
inc
cwtl
sub
and
pop
xchg
inc
sub
and
and
leave
aas
adc
repz
sbb
mov
outsb
mov
sbb
pushf
rorb
rclb
xchg
xchg
popa
and
and
sbb
xchg
inc
jne
sbb
setbe
and
sbb
mov
cs
and
xchg
movsb
movsl
call
out
ljmp
cmp
das
inc
add
sbb
clc
scas
sarl
xchg
add
or
pop
adc
fwait
leave
loopne
call
xchg
icebp
cmc
mov
call
stos
adc
fcomps
je
xorb
in
lock
cld
enter
mov
inc
cld
enter
mov
js
inc
andl
pop
imul
lds
insl
adc
sub
in
stos
loopne
out
clc
call
negb
shl
pop
mov
jle
mov
orps
mov
iret
adc
mov
mov
mov
push
jbe
xlat
stc
addr16
int3
mov
cwtl
mov
cmp
push
ror
in
cmp
mov
lcall
test
iret
pusha
rclb
dec
mov
pop
pop
inc
cli
add
in
loope
jge
pop
fmull
js
mov
leave
adc
dec
loop
hlt
and
jb
jg
push
dec
fimuls
cmp
xor
loope
idiv
push
lds
sub
add
jno
sbb
inc
clc
xchg
xor
cmp
insl
in
shrl
and
xchg
jnp
push
fcompl
out
sar
enter
xchg
sbb
lret
lcall
and
dec
roll
mov
jb
mov
ficomps
mov
mov
ret
cwtl
cmp
cmp
insl
cli
cld
jae
pop
gs
aam
in
jns
mov
adc
scas
lds
daa
sbb
mov
cmp
call
dec
sbb
fdivs
sbb
jb
pop
idivl
mov
lcall
aas
add
xor
lock
adc
xchg
loope
jg
rclb
mov
dec
sahf
dec
adc
das
cwtl
out
lret
cmp
mov
notl
adc
push
xor
call
adcb
mov
push
or
stc
lcall
xchg
cmp
mov
pop
sarl
mov
push
or
dec
std
add
dec
fisttpl
sub
xor
loop
sbb
test
or
jl
xchg
or
xorl
add
ss
dec
enter
mov
in
dec
xchg
push
dec
or
mov
jbe
jmp
fimull
aad
push
dec
push
xchg
sbb
loope
ret
cmpsb
popa
js
clc
pop
xchg
jmp
mov
aaa
aas
lock
cmp
inc
xlat
push
icebp
or
pop
sub
fs
xchg
std
and
xchg
test
mov
add
imul
lock
out
popa
xor
jg
out
mov
or
mov
ret
outsb
iret
shll
cmp
stos
movsb
mov
orb
jbe
adc
cmp
mov
mov
loop
jge
js
cmpb
int
iret
inc
push
ror
inc
out
adc
int3
add
dec
insb
pop
cmp
pop
inc
rcrl
fisubs
pop
faddl
mov
mov
ja
insl
cmp
repnz
and
nop
insb
incb
xchg
xor
jne
add
mov
fs
lret
push
adc
jmp
test
bound
lds
lretw
xchg
push
insl
std
fwait
dec
daa
loope
jae
jbe
ss
mov
shlb
pop
inc
cmpsl
dec
pop
sbb
scas
pop
jb
sub
popa
adc
add
push
sub
pop
int3
sbbb
mov
or
and
xor
dec
test
fadd
jge
mov
add
xor
add
popa
xchg
mov
sahf
test
push
stos
int3
in
pop
or
inc
mov
push
and
adc
in
lea
scas
mov
pop
sbb
decl
pop
sub
cltd
add
xorl
fistps
xlat
lret
pop
lret
inc
mov
aas
addl
xor
jle
adc
cwtl
pop
shll
jecxz
es
sbb
cmp
es
pushf
adc
pmulhuw
aas
inc
dec
cmp
push
js
and
addr16
and
js
jae
and
jle
repnz
pop
and
ja
pusha
adc
les
sbb
jno
xchg
jbe
call
les
out
fs
push
jmp
dec
push
mov
movsl
xor
dec
call
pop
pop
xchg
fstps
rcrl
jne
jge
insb
ret
andl
jg
xchg
jp
in
ljmp
jno
push
gs
in
sub
mov
cmc
jne
js
mull
jecxz
jne
mov
jge
lret
adc
jbe
pop
popf
and
or
xchg
and
popa
dec
sbb
out
or
scas
cmp
stos
pop
mov
cmp
and
aas
xor
push
sahf
outsb
fdivs
xor
fprem
jnp
pop
add
jnp
ficoml
pusha
in
aaa
aad
sbb
out
fidivrl
and
test
int3
mov
int3
ret
lea
mov
push
imul
push
das
and
add
fcompl
ja
inc
pop
or
cmp
cld
sbbl
pop
push
push
lock
jp
jno
insl
push
cmc
or
xchg
sbb
insl
push
cmp
mov
dec
lock
daa
pop
insl
cltd
addr16
inc
enter
jbe
push
cmp
push
adc
test
dec
enter
rcl
jp
mov
nop
mov
roll
out
into
jbe
sub
or
xchg
arpl
ja
sub
xchg
outsb
sahf
adc
ljmp
stos
cltd
xchg
pop
hlt
add
stos
mov
xor
ret
push
cltd
shll
rol
fs
sub
fs
sar
mov
xor
push
push
adc
repz
mov
adc
jmp
inc
in
jns
push
pop
pop
loop
mov
or
popf
xchg
add
cltd
in
push
sub
test
call
cmpsb
push
add
mov
mov
int
sahf
sbb
in
test
into
xchg
bound
push
xchg
sbb
pop
arpl
std
jmp
mov
jo
aas
jp
pusha
sarl
mov
cmovne
shrb
or
enter
fwait
mov
mov
es
pop
mov
jne
scas
mov
js
orb
mov
jl
in
or
addl
lret
es
test
test
std
jecxz
adc
inc
and
push
xchg
test
iret
push
push
rolb
jae
imul
mov
test
pop
mov
rcl
rcr
xor
xor
or
loop
jecxz
mov
daa
mov
jbe
or
push
inc
out
sbb
les
sub
imul
sbb
adc
mov
push
fwait
into
outsb
mov
mov
es
leave
sbb
cwtl
inc
jmp
dec
popa
adc
fstps
stos
xchg
or
orb
jg
test
xchg
or
repz
fcoml
movsl
inc
or
call
ss
je
aam
sahf
or
shrb
les
arpl
repnz
in
insb
cmpl
iret
enter
mov
jge
icebp
hlt
xorb
pop
xlat
sbb
push
aas
negl
mov
adc
ljmp
jle
push
ret
inc
jle
inc
repnz
pop
push
loopne
lods
inc
arpl
not
dec
gs
xchg
divl
jns
adc
shlb
or
mov
in
es
iret
xor
cmp
ja
lahf
insl
test
xchg
xchg
mov
fisubrl
insb
aam
mov
or
xchg
jbe
int
mov
dec
je
push
mov
or
lods
cmp
clc
mov
test
sbb
cmp
int
and
xchg
mov
out
sbb
inc
push
or
fmul
fimuls
pop
adc
nop
adc
addl
aam
push
leave
jnp
xor
push
into
iret
cmp
push
xchg
cs
daa
aad
sub
cmpsl
lea
decb
ja
sbbl
and
clc
inc
icebp
and
sahf
fst
mov
mov
inc
and
xor
daa
mov
jp
push
cmpl
lea
mov
sbb
cwtl
xchg
xchg
movsl
icebp
mov
mov
jge
mov
out
jnp
stos
iret
mov
sbb
xlat
push
imul
pop
in
das
jecxz
aaa
add
jp
in
sahf
push
mov
mov
push
cmpsl
icebp
xor
mov
add
popa
jle
mov
mov
inc
rclb
inc
xchg
ret
bound
and
js
xlat
jb
xchg
jo
test
cmp
xor
jge
mov
dec
xor
xchg
aaa
scas
mov
dec
push
repz
test
inc
adc
pop
fbstp
dec
dec
imulb
iret
nop
mov
lahf
sub
mov
xchg
je
cmp
insb
mov
mov
and
sti
push
xchg
jae
jnp
stos
sub
orl
add
pop
mov
mov
jb
mov
out
xchg
push
test
je
push
jmp
loop
mov
mov
adc
cli
and
inc
pop
dec
cmp
jne
ljmp
mov
cwtl
cmp
jle
cwtl
mov
push
cmc
lods
sbb
xorl
and
push
dec
outsl
xchg
sub
imul
lods
mov
jecxz
out
jmp
and
or
add
fists
xchg
insl
aam
inc
sarb
xchg
jp
fbstp
fdivr
popf
sti
daa
ror
sub
ret
lods
or
imul
cld
push
or
and
das
sti
mov
ret
lahf
ja
or
insl
addb
adc
and
fistps
dec
adc
fistps
or
cmp
lcall
pusha
xchg
test
sub
push
rolb
mov
call
call
push
mov
xchg
sti
dec
cmp
inc
in
popf
fcomps
and
bound
ljmp
and
sub
mov
cltd
mov
xor
xchg
cmp
xchg
fsubrl
pop
aam
inc
add
aas
xchg
arpl
mull
xor
test
and
push
cli
cmp
xor
pushf
test
sub
or
ljmp
mov
pushf
mov
insl
data16
std
call
push
cmp
insb
jg
sbb
xchg
push
in
push
std
push
enter
or
push
cwtl
sbb
xor
sub
dec
or
dec
xchg
mov
not
outsl
aam
sti
push
outsl
adc
test
or
pop
add
dec
dec
push
mov
add
fs
mov
mov
sahf
xor
cld
ljmp
push
mov
jo,pn
pop
pop
pop
mov
iret
fbld
and
xchg
dec
js
dec
mov
or
sbb
lret
pop
mov
mov
sub
and
clc
movsb
cmpsl
ja
jb
and
out
push
push
mov
inc
sbb
out
pop
xor
push
setne
fs
ficoml
mov
sti
sbb
mov
jnp
pop
lds
push
outsb
pop
sbb
mov
orl
push
jl
loopne
add
jo
in
je
scas
pop
xlat
pop
push
pop
mov
andb
jo
scas
test
cli
pop
pushf
jle
fs
dec
stos
cmc
icebp
push
dec
hlt
adcl
cld
push
jmp
push
inc
inc
mov
push
sbb
lret
add
adc
mov
sbb
inc
push
insl
lock
fdivs
lock
xor
cmp
and
jmp
pop
call
sub
pop
fidivrl
std
push
les
push
mov
int3
in
xchg
mov
mov
jge
loop
xchg
into
add
add
cmpsl
push
mov
mov
movsb
int
fdivr
in
aam
xor
sbb
and
adc
lret
in
pinsrw
or
ss
movsb
std
xchg
bound
dec
testl
roll
push
ss
cltd
add
xchg
inc
pop
call
dec
add
xor
sbb
xlat
pop
pop
nop
ljmp
pop
add
mov
pop
mov
leave
pop
sbb
andl
cld
push
sub
mov
mov
mov
or
pusha
mov
mov
cmp
cmp
mov
or
rcrl
cltd
cli
arpl
push
sbb
test
dec
lds
mov
mov
push
push
pop
iret
dec
popf
mov
or
cmpsl
aas
and
sbb
mov
cs
pusha
add
dec
or
bound
add
insb
cmp
add
or
adc
stc
pop
jae
adc
inc
mov
mov
aam
add
jae
dec
sbb
test
mov
and
bound
sub
or
mov
pop
mov
loopne
test
mov
cld
push
rcrl
sbbl
xchg
mov
xchg
cwtl
mov
add
lret
test
das
mov
push
pushf
cmp
xchg
jnp,pt
xchg
or
pop
sub
add
loopne
pop
std
jb
scas
in
rol
sub
mov
imul
push
or
mov
stos
cmp
xchg
jb
xor
test
xchg
rcrb
mov
mov
out
loop
outsb
adc
dec
pop
stc
or
jp
jo
push
nop
dec
cli
daa
test
stos
mov
mov
push
xor
xchg
mov
push
pop
add
xor
mov
movsl
jnp
lahf
das
scas
sub
cltd
sbb
sub
mov
dec
les
loop
out
in
rcr
jecxz
dec
xchg
les
jne
push
out
daa
jl
pushf
scas
mov
repz
jo
add
inc
repz
sbb
ljmp
fs
push
nop
mov
dec
loop
jl
pop
lahf
mov
pop
and
addr16
dec
cmp
jl
mov
sbb
fidivl
mov
and
mov
lock
pushf
pop
inc
mov
hlt
stos
lock
je
push
cmp
cwtl
out
or
nop
pop
jge
cmp
leave
ficoms
decb
pusha
insl
fisubl
lahf
mov
mov
inc
jae
adc
shl
jg
fistl
ret
lock
push
cld
ss
outsl
movsl
jbe
mov
cltd
adc
call
xchg
pop
sbb
in
pop
jo
add
ljmp
mov
mov
mov
lods
int3
and
xchg
and
add
sarb
sbb
ja
das
dec
push
lahf
jae
movsb
cwtl
gs
faddl
sbb
mov
add
sti
and
shr
cwtl
pop
movsl
or
rcll
rorl
pop
push
cmpsb
in
cli
test
adc
daa
scas
inc
pop
dec
pop
xor
jnp
aaa
xchg
or
pop
or
inc
jmp
fcompl
pop
mov
pop
lea
jae
push
loop
cmp
dec
adc
rcll
inc
jge
mov
into
xor
push
in
stc
adc
mov
inc
push
inc
jb
addb
xchg
mov
cmp
aad
push
mov
iret
sbbl
dec
bound
cmpsl
rcll
adc
add
push
outsb
add
mov
push
xchg
xchg
aaa
cltd
les
js
lds
xor
add
mov
sbb
loopne
addb
push
cmp
les
jo
jnp
push
cmpsl
divb
cmp
sub
ljmp
pop
lret
popf
add
pop
xchg
cmp
jg
clc
inc
or
ds
je
aas
leave
int3
push
push
nop
push
cltd
cmpsb
in
pushf
and
flds
xor
and
xor
mov
jl
pop
aad
cmp
push
daa
pop
ss
imul
icebp
cli
inc
mov
stc
ret
fidivl
cld
mov
int3
std
cmpsl
add
movsb
fwait
mov
lret
imul
inc
sbb
imul
out
add
rcr
iret
adcb
int3
stos
push
insl
pushf
stos
cmp
jecxz
out
sub
push
stos
lahf
dec
sti
mov
aad
sub
les
por
pop
je
andl
arpl
shl
inc
and
mov
call
addr16
pop
ds
mov
in
in
mov
mov
gs
jecxz
push
push
cmp
mov
insb
lahf
push
and
mov
mov
cmpsb
add
dec
mov
into
push
and
mov
insb
test
loope
and
pop
in
xlat
xor
xor
dec
cwtl
ret
and
pop
out
js
popf
push
loope
jns
jno
cli
xorb
ret
jns
adc
jae
mov
jnp
pop
inc
inc
fcoml
mov
mov
sti
push
push
and
add
dec
lret
xchg
jp
test
std
lret
xchg
cld
lcall
and
or
inc
push
and
sbb
jnp
stos
or
xchg
loope
adc
jg
jle
scas
or
add
addb
add
pushf
pop
xor
pop
nop
xor
lock
testb
stos
inc
fnstenv
cmpsb
andb
sbb
push
rcl
xor
rdmsr
push
mov
fidivrs
cmpsl
lods
gs
sbb
fs
cmp
test
out
dec
les
lods
xchg
lods
mov
std
or
mov
out
aam
ja
movsb
push
push
xchg
xor
into
in
mov
jb
ss
in
push
daa
bound
cmp
pop
cli
mov
lock
adc
movsb
push
ljmp
mov
stos
mov
jae
dec
jp
mov
cwtl
lods
mov
mov
adc
mov
notb
push
inc
push
and
addb
sub
dec
data16
jecxz
mov
mov
jecxz
jno
pop
orb
icebp
push
ds
in
inc
jns
push
into
cwtl
mov
sub
out
adc
hlt
mov
lds
dec
pop
or
jne
stos
int3
iret
and
test
stos
add
adc
and
adc
xchg
cmp
adc
or
cmp
shll
dec
push
and
testl
jmp
cmc
jb
cwtl
test
adc
pop
sub
push
sbb
mov
fstp
xchg
mov
mov
pop
in
ret
fadds
daa
adc
fcmovb
sub
jne
cmp
adc
push
into
dec
sbb
lods
insl
test
pushaw
sbb
out
inc
leave
jecxz
movsl
idivb
mov
ljmp
sahf
insb
pop
cwtl
push
lcall
dec
xor
inc
cmp
dec
mov
xchg
scas
enter
lds
sbb
mov
std
icebp
icebp
inc
xor
arpl
cmc
dec
sbb
xchg
aam
cmp
stc
xchg
les
and
dec
out
sbb
mov
push
repnz
gs
lret
aad
nop
or
rolb
jno
test
insb
jbe
addl
divb
es
mov
cmp
stc
push
dec
push
mov
pop
jae
push
popa
dec
and
rol
pop
imul
in
cwtl
sbb
orl
inc
lret
nop
xor
sbb
out
mulb
inc
lea
adc
or
inc
rolb
jb
popa
pop
jnp
push
lods
adc
mov
dec
or
daa
daa
addr16
pop
inc
pop
pop
sbb
adc
mov
and
adc
cwtl
push
push
jbe
in
or
sbb
imul
jnp
popf
mov
int3
jo
inc
imul
mov
mov
movl
xchg
add
adc
movsb
dec
mov
dec
xacquire
stc
loope
push
push
push
add
outsl
fistpl
dec
and
push
push
sub
add
lcall
mov
cmp
xchg
mov
andl
lret
aas
lock
xchg
loop
jo,pt
test
xlat
ret
les
push
cmp
jp
fdivl
fisttpll
scas
fsubrp
sub
mov
sub
jo
xor
sub
out
and
lahf
and
dec
loop
scas
ret
jl
xor
movsb
sub
mov
push
std
sub
rorl
addr16
jne
mov
add
sbb
jecxz
ss
push
xor
enter
mov
or
cld
lds
out
lcall
mov
das
push
sub
and
push
sub
mov
mov
jge
mov
push
dec
fcoml
push
iret
andb
xor
iret
clc
push
adc
adc
push
pop
aas
fnstcw
daa
call
fistl
rcr
scas
rcll
cmpsl
jne
in
xor
ret
dec
push
pop
ljmp
fwait
cli
inc
adc
scas
testb
in
fs
lret
aad
aas
repz
pusha
outsl
les
mov
inc
add
aam
or
int
or
mov
and
xchg
cltd
cmpb
lret
pop
pop
sub
out
icebp
mov
push
lds
repnz
mov
scas
sbb
xor
jmp
mov
negl
adc
push
and
pop
idivl
mov
clc
xor
outsl
push
lret
fdivp
fidivrl
into
pop
xlat
inc
and
aas
sub
sub
lock
cmc
mov
adc
xchg
pushl
inc
dec
ficompl
fdivrs
push
xchg
mov
sub
mov
and
add
mov
inc
push
cli
xchg
mov
add
test
mov
jo
jnp
adc
imul
adc
sbb
pop
sti
addl
jno
pop
xchg
loop
mov
push
es
pushf
sub
push
pop
pop
popf
dec
loop
sti
push
cmp
enter
int
sbb
adc
sbb
addr16
div
aam
sub
mov
cmpsb
mov
call
nop
xor
sub
cmp
ja
scas
lods
pop
add
jno
xor
sub
fnstsw
cmp
imul
cmc
add
mov
imul
outsl
sub
pop
in
add
fistpll
jae
testl
fdivl
rcrl
call
repz
push
outsb
xor
out
iret
sub
sbb
std
aaa
push
mov
lret
aas
mov
enter
inc
pop
and
data16
mov
cmp
inc
xchg
sbb
hlt
dec
inc
push
in
adc
jnp,pt
jb
pushf
sub
inc
es
clc
pop
push
rcll
out
cmp
sub
in
xchg
mov
mov
out
mov
iret
push
pop
mov
inc
cmp
xor
fwait
cmpsb
in
rorl
push
and
jne
pop
xor
mov
mov
lods
rclb
dec
int3
js
mov
rclb
test
movsl
pop
xchg
cld
pop
mov
xchg
outsb
jle
mov
mov
out
sbb
pushf
mov
loope
scas
add
int
and
add
and
dec
pop
dec
mull
stc
jmp
pop
sub
loope
data16
xchg
enter
nop
push
inc
sub
cltd
dec
aam
push
mov
das
jecxz
jbe
frstor
movsl
imul
push
push
js
fdivrl
dec
sahf
adc
subb
mov
mov
jge
adc
mov
fsubrs
adc
pop
dec
bound
leave
fidivrl
dec
cmp
xchg
pop
mov
notb
or
test
and
scas
lea
lret
xchg
ret
sub
lds
lahf
or
out
dec
cmp
cmc
mov
and
jns
mov
pop
fsubrl
push
das
pushf
push
add
enter
jae
sbb
push
hlt
cmp
test
inc
xor
mov
dec
lods
or
mov
sbb
testl
aad
jge
pop
or
push
pop
jno
or
sbb
xor
mov
aaa
or
int
test
xchg
jns
jl
push
mov
fdivrp
movsb
stos
mov
dec
xor
insb
pop
push
cmp
cld
in
popa
add
push
mov
jbe
shrb
test
stos
push
insb
or
jo
jmp
lea
test
mov
xchg
aaa
stc
aam
scas
popf
and
dec
mov
icebp
out
jmp
test
lea
pop
pusha
ja
fidivrs
clc
pop
xlat
sub
sarl
mov
xchg
cmp
lds
cli
mov
xor
jmp
push
inc
ror
movsb
outsl
arpl
dec
dec
cmp
nop
js
or
shrb
imul
xor
dec
js
push
lods
xchg
pusha
iret
jnp
lcall
jae
lcall
divb
jnp
pop
add
lock
inc
cmp
andb
iret
pop
push
mov
out
loopne
dec
fwait
sub
sub
scas
stos
mov
pop
sahf
sub
jp
into
loopne
mov
iret
int3
das
adc
int
mov
jle
cmp
ret
jae
xor
pop
jnp
inc
insl
jmp
dec
dec
jbe
jmp
mov
add
scas
lcall
mov
outsl
adc
push
andb
add
and
push
leave
cmp
testb
lea
cli
and
add
je
mov
pop
loope
mov
in
in
fwait
xchg
pusha
lret
mov
rolb
lea
aad
mov
xor
or
adc
in
mulb
xchg
ss
leave
bound
cwtl
and
fdiv
and
inc
int3
nop
adc
xor
adc
cmc
cmpsb
scas
fisttps
push
in
adc
fmull
es
xchg
xor
push
pushf
fldt
cmp
inc
bound
fimull
hlt
cs
pushf
out
mov
mov
dec
leave
mov
sub
adc
into
loop
in
shl
sub
or
xor
pop
mov
je
aad
out
adc
xchg
stos
pop
mov
lahf
mov
jbe
je
insb
fbld
cmp
stc
mov
iret
cmpb
push
fcomip
aad
stc
ja
test
or
fimuls
shlb
push
push
mov
int3
sbb
mov
xor
and
pop
mov
ljmp
hlt
inc
sahf
cmp
outsl
mov
das
or
addr16
bswap
fwait
pop
out
push
inc
or
loopne
pop
push
ret
aas
hlt
fwait
sub
add
mov
in
outsl
push
xchg
test
xchg
ja
aam
push
adc
fwait
das
jns
push
mov
jmp
inc
in
ds
cmp
fdivp
fldl
and
mov
jge
and
fstpt
xor
test
sbb
xor
add
mov
mov
js
mov
idivl
jmp
push
lea
outsb
dec
scas
emms
out
cmp
test
push
xor
xchg
movsb
movsl
outsb
push
outsl
adc
push
in
cmc
add
adc
das
fld
xor
ret
push
pop
add
add
add
push
jb
pop
in
insb
fmull
or
cmp
jbe
jp
insb
enter
icebp
jns
pop
lds
jg
jg
jns
inc
inc
fildll
add
jne
mov
push
inc
adc
out
lea
sbb
push
daa
dec
adc
xchg
out
mov
popa
bound
nop
repz
or
popf
or
ss
dec
jne
call
in
jno
movsl
rol
imul
fisubl
push
lret
mov
pop
mov
and
sar
sbb
mov
data16
xchg
jl
enter
inc
scas
cld
pop
arpl
and
adc
outsl
into
adc
dec
fisubrl
rcrl
subb
insl
aad
jbe
xor
shll
sbb
add
rcpps
mov
fs
aas
jmp
xor
mov
dec
dec
cmp
cmpsb
mov
pop
jp
dec
xor
jbe
leave
and
hlt
jmp
shlb
pop
clc
sbb
mov
hlt
push
or
dec
xchg
and
fisubs
jp
inc
sub
sbb
cmp
out
push
adc
cwtl
push
fsub
addr16
vmovss
adc
lods
jp
mov
adc
mov
test
mov
lock
addr16
xchg
inc
dec
ret
imul
sahf
push
dec
xchg
xor
aam
adc
cld
in
cmp
leave
inc
dec
pop
loopne
sbb
mov
mov
pop
frstor
rcll
testl
or
pop
xor
arpl
jp
test
popf
inc
inc
imul
jecxz
dec
outsb
mov
insl
test
push
pusha
xchg
adc
mov
mov
sub
push
xchg
call
adc
es
jecxz
fdivl
jnp
xchg
inc
sub
and
sub
outsl
mov
mov
aaa
iret
xchg
push
jmp
daa
and
shll
and
sbb
scas
cmpsl
mov
mov
pop
cmp
mov
shlb
out
jmp
jo
mov
lcall
fwait
das
into
rorl
and
ss
jb
and
cld
pusha
mov
cmpsl
gs
std
cltd
add
pop
mov
fdivr
jmp
xchg
fwait
xor
push
outsl
cs
lock
jnp
test
call
lea
inc
das
icebp
adc
xchg
mov
sbb
dec
cmp
mov
or
jle,pt
xchg
je
jp
cld
icebp
dec
inc
cwtl
xchg
push
sub
arpl
fmulp
pop
popf
je
testb
pop
fisubs
shrb
cmp
mov
inc
aaa
xchg
cli
test
leave
movsl
xchg
in
inc
cmp
cli
or
mov
mov
imul
mov
test
adc
xchg
rcl
add
and
jmp
lret
movsl
cmp
scas
mov
inc
sbb
scas
jns
fistps
pop
test
jo
mov
push
sbb
add
pop
xlat
pop
jb
inc
or
mov
jp
jnp
ss
xchg
test
outsb
xchg
sub
nop
push
mov
adc
xor
jp
insl
sbb
dec
sub
mov
add
daa
lcall
fdivr
ja
sub
ja
in
popf
dec
rclb
mov
outsb
imul
cmp
fcomp
jne
pop
mov
sbb
mov
pusha
sub
cltd
dec
mov
lret
mov
fs
mov
repz
fadds
adc
shrb
cltd
shlb
int3
mov
cld
rcrb
xor
fmuls
pop
das
adc
test
decb
les
jmp
or
scas
lret
movsb
lds
push
jne
xchg
jae
aam
jl
not
or
scas
mov
jns
fwait
movsl
nop
jns
mov
push
fwait
sbb
cli
jmp
sahf
fidivrs
ss
jecxz
xorl
xor
inc
loope
sbb
push
addl
jo
dec
test
and
leave
lret
ret
sub
pop
in
fldenv
pop
or
addr16
pop
insb
jne
movsl
sub
mov
out
mov
sbb
loopne
mov
xor
fmuls
inc
call
shlb
xorl
loope
pushf
push
cli
repz
jns
jp
cmp
js
xchg
xchg
dec
jmp
scas
je
lods
adc
xor
mov
or
in
data16
push
adc
jle
mov
sbb
test
add
sub
les
fisubrl
pusha
data16
xchg
xor
cltd
fmull
je
or
insl
xchg
push
sub
negb
xor
cltd
outsl
outsl
pop
jp
dec
insl
aas
dec
jbe
pop
aas
mov
adc
sub
fs
divl
push
orb
nop
ret
add
movsb
mov
xor
into
call
and
rorb
shl
push
popf
cli
mov
fwait
into
xchg
cld
mov
inc
add
bound
cs
jno
mov
mov
and
clc
aam
xlat
xchg
in
scas
repz
addr16
and
dec
out
test
cs
mov
adc
lret
pop
cli
lds
sahf
sbb
xchg
push
cltd
int
addr16
jo
pusha
test
push
outsb
jmp
sub
cs
cmpb
fwait
rolb
aaa
or
shlb
mov
imul
xor
push
aaa
or
sub
mov
jo
sbb
ret
popf
bound
lcall
mov
jbe
inc
sub
pop
jb
ret
pushf
dec
mov
hlt
ja
bound
pop
andb
fs
and
push
mov
xchg
sbb
fiaddl
lock
xor
inc
loop
lahf
inc
out
mov
or
scas
push
fidivl
inc
or
mul
insb
sarl
xor
mov
mov
cmp
inc
jo
movsl
mov
inc
xchg
pop
repnz
adc
int
rcl
xchg
cmp
inc
in
rcpps
mov
icebp
lock
rcll
out
jne
xor
push
add
add
andb
bound
sub
cmp
fimuls
je
je
out
in
mov
and
xlat
xlat
mov
adc
fwait
js
mov
pop
sub
stos
mov
out
jne
xchg
pusha
or
into
mov
sahf
ja
lods
in
in
int3
aam
aad
mov
in
push
dec
repz
mov
ret
ja
and
rorl
repz
addr16
idiv
pusha
insb
pop
inc
sub
jp
push
js
js
int3
push
rolb
out
stos
xchg
aad
jnp
cmp
pop
mov
and
jne
dec
xor
mov
and
shl
inc
xchg
mov
mov
repz
pusha
push
mov
xor
idivl
mov
ja
and
jae
fstpt
adc
leave
push
pop
mov
icebp
sub
dec
sbb
pop
sub
lahf
inc
mov
cmovnp
sub
insb
movb
dec
xchg
xor
sbb
sub
sahf
lahf
test
push
ljmp
jge
ret
or
dec
push
jmp
push
xchg
out
cmpsl
and
gs
pop
fwait
xor
xor
int3
jns
out
test
mov
mov
not
or
aam
int3
and
icebp
sub
shll
mov
out
jbe
add
mov
cmp
jmp
stos
test
mov
dec
xorb
add
stos
insl
enter
pop
push
data16
xor
add
jl
and
sub
xchg
and
arpl
std
mov
bound
sbb
outsl
imul
mov
jmp
cli
push
ret
and
mov
push
popaw
and
lret
sbb
std
dec
inc
mov
dec
mov
mov
cmp
add
push
jne
ret
add
sbb
ss
pop
ret
pusha
into
sub
or
lret
sbb
and
pop
test
sbb
jp
pop
test
sub
shr
insl
movsb
repz
ds
fdivl
dec
test
rolb
mov
xchg
sub
test
rcll
leave
adc
jg
dec
mov
sbb
test
cmc
mov
call
adc
jno
xchg
ffreep
outsl
pusha
loope
addb
pop
aam
daa
inc
sbb
add
ret
shl
dec
add
dec
pushf
and
mov
loopne
arpl
fcmovbe
sub
push
push
sub
sbb
movl
shlb
incb
leave
notb
mov
sub
cli
pop
scas
aad
iret
jp
andb
dec
pop
inc
int
or
sbbl
pop
mov
add
ja
call
lods
test
in
into
and
bound
cmp
dec
cmpsl
inc
jbe
div
sarl
jmp
dec
inc
pop
fwait
test
and
jle
pop
pop
rclb
jb
push
dec
stc
or
pop
sub
and
push
cmpb
xorb
jno
mov
dec
mov
lret
adcl
loopne
rol
pop
or
cmpsb
pop
add
or
fbstp
cmp
mov
mov
sbb
rcrb
out
fsubr
xchg
cmp
icebp
inc
ret
mov
xor
adc
xchg
pop
push
and
cmove
je
stc
shlb
mov
cmp
lcall
jle
cmp
sbb
cwtl
lret
lret
inc
cs
mov
ds
arpl
icebp
into
ss
cmpsl
shll
jae
or
pop
xlat
and
lret
jl
push
orl
cmpsl
mov
pop
sahf
jg
out
mov
push
xchg
loope
push
iret
jb
mov
hlt
std
aam
xchg
mov
aam
xchg
mov
inc
cltd
or
mov
movsl
push
sub
mov
or
ficoms
lods
js
js
lcall
push
out
imul
orl
jg
arpl
xchg
out
stc
fdivs
xor
outsb
or
and
iret
jle
or
fidivs
or
push
mov
dec
cmpsl
and
aas
fs
pop
adc
xlat
jp
mov
pop
dec
xlat
clc
inc
test
pop
fadds
push
mov
push
inc
mov
adc
sub
cwtl
jnp
push
clc
call
inc
aaa
jecxz
out
cmp
inc
jmp
sub
add
inc
mov
hlt
ficoms
lock
xor
cmp
adc
pop
xchg
test
mov
mov
sbb
sub
pusha
jnp
push
movsl
negb
enter
lock
xor
dec
in
daa
mov
pop
std
jl
fistl
sahf
scas
dec
jno
or
sbb
stc
xor
sahf
xchg
push
xchg
inc
test
push
inc
popa
mov
cmp
and
into
mov
das
out
jbe
out
cmc
dec
dec
mov
test
inc
loop
add
mov
je
mov
hlt
cmpsb
sbb
cmp
dec
pop
cmp
stc
out
cltd
cmc
int3
mov
daa
popf
inc
and
lahf
jno
mov
pop
or
mov
xchg
add
pop
shrb
in
loop
lret
sub
cmp
or
daa
inc
or
cmpsl
adc
xor
mov
lods
push
add
lret
sbb
bnd
incb
popf
push
shll
mov
test
sti
xor
inc
pop
int
dec
hlt
enter
lcall
sub
add
insb
mov
sub
add
xor
jns
xlat
pop
xor
popa
xor
push
inc
mov
cmp
out
cmp
cmp
pop
push
pop
cltd
loopne
lea
and
push
loope
fwait
mov
negl
xor
hlt
fidivl
add
adc
mov
lahf
xchg
xchg
or
jl
jle
pop
jo
jb
aad
nop
hlt
cli
into
fsubrl
pushf
and
mov
loope
inc
or
mov
arpl
mov
sub
test
call
rcrb
adc
clc
addr16
std
mov
lret
shlb
outsl
movsl
sbb
xor
lahf
nop
or
je
fst
and
mov
repz
xlat
or
lret
jecxz
or
pop
test
lss
lcall
jl
push
inc
push
pop
push
cld
sbb
out
das
pop
mov
dec
adc
sub
sahf
clc
daa
leave
addr16
xor
mov
push
data16
stos
inc
push
xchg
imul
stc
out
mov
sbb
punpckhwd
push
xchg
clc
insl
cmc
loop
enter
or
xchg
push
bound
sbb
std
aas
fdivrs
add
pop
xchg
sti
into
sbb
jns
lahf
xor
out
test
add
sbb
sbb
push
or
jbe
test
and
mov
dec
cmc
test
dec
and
fdivr
orb
stos
mov
pop
sub
inc
mov
stos
xor
inc
push
loope
mov
push
adcb
pop
xchg
ds
pop
push
push
xchg
test
mov
int
in
jnp
sti
leave
add
mov
push
mov
mov
xlat
aaa
adc
icebp
mov
out
mov
pop
add
dec
daa
inc
in
xchg
pop
mov
mov
adc
sbb
subl
data16
adc
inc
test
daa
and
cmpsb
mov
add
xor
mov
mov
xor
enter
inc
movsl
mov
movsb
push
arpl
mov
andl
fs
imulb
inc
pushf
inc
es
lahf
adc
dec
mov
push
sub
negl
or
lcall
subb
insl
aas
repnz
xchg
iret
mov
xor
sti
aaa
push
sbb
test
bnd
or
mov
pop
and
test
test
mov
push
aaa
sub
xor
mov
repz
push
xchg
lock
out
inc
pop
push
mov
and
mov
in
pop
mov
cmp
into
movsl
mov
cmp
cltd
cmp
xor
and
xchg
xor
push
test
outsb
push
push
and
clc
pop
mov
aas
dec
mov
or
mov
mov
lcall
jmp
test
movsl
inc
sub
aam
jl
js
movsb
pop
cli
imul
lcall
popa
and
push
xchg
jne
iret
repz
std
call
roll
adc
add
pop
fsubl
inc
and
nop
inc
popf
xchg
mov
pop
in
nop
xor
mov
or
outsb
xlat
inc
clc
lds
mov
mov
mov
and
mov
sbbb
jo
push
cmp
fsubl
sbb
inc
rorb
hlt
ret
dec
pop
xchg
clc
inc
hlt
cmpsl
push
dec
test
lea
push
ja
inc
adc
fdivrp
leave
int
jg
int
aaa
insl
loopne
dec
inc
cmpsb
mov
gs
aad
pop
and
nop
push
mov
xor
outsb
decl
je
dec
xchg
stc
mov
aas
int3
lods
xchg
sub
sub
xchg
push
push
gs
ret
negl
xor
cli
sbbl
pusha
stc
xchg
int3
mov
mov
fisttps
adc
js
sub
jae
mov
push
pop
push
xchg
sbb
mulb
mov
jb
in
sbbl
pop
insb
sub
pop
shl
xor
loope
sti
mov
mov
je
sbb
popa
and
gs
mov
jnp
in
sub
test
shlb
mov
mov
loope
sbb
repnz
clc
mov
es
sbb
sbb
add
pop
add
sbb
lcall
fdivp
out
or
mov
dec
cmp
call
lods
push
out
push
dec
sahf
xchg
xchg
popa
imul
fiadds
add
dec
xchg
ja
sub
rolb
lcall
xchg
add
jbe
and
fs
test
cmp
mov
and
das
cli
xchg
sbb
jbe
and
or
lds
popa
pop
sbb
xor
inc
aad
xor
cmp
int
xchg
or
aaa
cli
enter
mov
mov
mov
inc
xchg
adc
mov
shlb
sub
push
idivl
mov
ret
push
pop
pop
jg
repz
pop
cmpsl
cs
out
xchg
xchg
pop
add
sbb
gs
sub
dec
xor
ret
adc
cmp
ss
vmwrite
andb
cs
adc
add
mov
out
pop
sarb
popa
mov
or
cmp
outsb
pop
jae
cmp
or
shll
repz
or
adc
jg
add
lcall
mov
aaa
mov
cs
mov
pop
out
pop
lahf
insb
out
fadds
fidivs
repnz
xlat
leave
xchg
lds
call
lods
fisubrl
sahf
push
push
into
test
insb
jecxz
xor
fidivrl
push
pop
fsubrs
pop
ficomps
jg
repz
xchg
dec
shl
mov
inc
rorl
xchg
pop
mov
adc
dec
int3
fst
rol
pusha
fimull
mov
pushw
mov
nop
add
cmpb
fistpl
add
repnz
xchg
adc
xchg
add
xchg
sub
push
aaa
push
mov
gs
sub
loope
lds
pusha
rclb
out
fwait
mov
sbb
lea
pop
inc
sub
dec
fmuls
ds
and
scas
cmp
cmpsl
sbb
mov
scas
arpl
outsb
test
push
loopne
xor
push
in
fisubrl
sbb
and
or
jp
in
pop
or
sub
push
adc
mov
sarl
cmp
bound
or
mov
cmp
test
and
mov
scas
andb
xlat
mov
in
push
mov
pop
cmpsb
and
in
dec
pusha
and
sbb
xchg
xor
sub
add
iret
xchg
xor
inc
push
push
mov
fucom
sar
mov
hlt
mov
pop
test
fs
cmp
cmp
in
lods
fists
ljmp
pop
sub
lock
dec
and
xchg
iret
sbbb
jo
sub
jl
ja
add
rcl
cmp
mov
jne
mov
clc
lcall
ror
test
and
in
add
mov
adc
mov
in
movsl
neg
jae
test
mov
xor
sub
xchg
aas
push
add
pop
mov
je
outsl
xor
sahf
testl
dec
ljmp
cmp
dec
sbb
cmpsl
pop
loopne
cmp
scas
jae
lcall
sarb
mov
push
pop
and
xchg
dec
or
mov
js
pop
shll
stc
in
dec
fdiv
or
ljmp
mov
fdivrp
mov
cld
push
xchg
aas
push
cmp
or
mov
and
popa
filds
pop
inc
xor
jno
pushf
adc
idivl
je
lds
clc
cmpsb
xlat
sub
xor
xchg
jne
rorb
jge
std
adc
movsb
in
into
imul
mov
push
add
sub
ljmp
ret
xchg
outsl
cmpsl
mov
and
std
push
xchg
sbb
and
push
inc
mov
negl
cmp
cmp
or
xchg
js
sub
inc
push
xchg
add
je
mov
mov
rclb
loop
mov
inc
sub
inc
jmp
mov
pop
mov
ret
push
xchg
ret
push
dec
ja
in
fs
jo
test
lods
push
push
xor
dec
mov
sti
lods
push
xor
cmp
outsl
jmp
pop
xchg
xchg
mov
gs
imul
mov
movb
cmp
adc
ja
pusha
jne
cmp
mov
jge
lods
xlat
outsl
shlb
jle
inc
jae
int3
stos
ucomiss
push
pop
inc
cmp
into
adc
dec
inc
lahf
int3
enter
fisubl
xchg
aas
sub
and
in
sub
test
push
shll
fsubl
and
imul
push
lods
out
insb
push
pop
js
cwtl
pushf
aad
insb
inc
cmp
movb
push
stc
sbbb
aaa
add
mov
push
ret
cmc
or
clc
pop
adc
mov
xchg
stos
imul
inc
mov
pop
mov
push
jae
xor
cltd
je
imul
pop
cmp
mov
mov
add
push
jb
adc
mov
jmp
jns
ja
adc
pop
pop
data16
fiaddl
xor
loopne
in
dec
mov
push
insl
sbb
add
pop
fwait
push
mov
dec
lea
sar
jns
or
pop
aad
xchg
mov
or
adc
add
aas
lcall
sbb
movsb
mov
pop
or
cld
daa
es
inc
xchg
mov
enter
pop
scas
pop
popf
or
dec
fcompl
inc
cwtl
mov
fcomi
outsb
js,pn
aad
mov
test
push
mov
arpl
out
push
jnp
iret
mov
repnz
jne
cmp
jle
adcb
test
out
dec
cmpsl
js
out
lods
xor
scas
rolb
ficomps
mov
xchg
or
loop
cmp
enter
push
add
jecxz
and
xchg
xor
adc
sub
mov
cli
cmp
dec
mov
xlat
fstpl
jl
test
std
pop
lret
or
imul
imul
and
rorb
cmp
mov
in
incl
mov
sub
out
push
cmc
inc
cmpsb
add
scas
cld
push
xchg
and
mov
xchg
insb
pusha
adc
mov
xchg
ret
test
jge
lahf
xor
je
popa
aam
xlat
cs
pop
and
add
scas
xor
ja
push
movsb
jbe
mov
xlat
dec
mov
cmpsl
or
adc
xor
fcompl
adc
scas
adc
cmpsb
sub
icebp
lds
imul
mov
movzbl
sbb
fsubrp
das
xchg
dec
cli
popa
repz
aas
mov
mov
test
jns
aas
mov
sub
repz
cmc
cld
jp
xchg
inc
pop
les
rolb
dec
mov
adc
push
push
fildl
add
pop
clc
repnz
xor
loopne
sahf
mov
mov
jg
ss
cmp
aaa
rcrl
shrl
mov
std
pop
xchg
lahf
gs
sbb
ljmp
push
in
jbe
int
jle
lret
ds
fidivs
xchg
ret
mov
mov
or
mov
cmp
mov
pop
sub
xor
push
pop
cmpsl
mov
or
orb
stos
pusha
mov
sub
fstpt
jae
and
jno
push
sahf
aad
ja
or
xchg
or
das
sbb
out
bound
test
lahf
xor
mov
imul
fildl
jmp
popf
push
dec
push
ret
xchg
cli
pop
pop
das
jmp
push
and
pop
jecxz
mov
aam
mov
test
xchg
jbe
jmp
dec
sub
lret
pop
cmp
pop
adc
stc
fucomi
jno
add
into
icebp
insl
mov
xchg
dec
push
mov
mov
pop
mov
filds
cmp
inc
call
sbb
xlat
int3
mov
stos
in
mov
mov
in
test
sbb
popa
sbb
std
sub
dec
adcl
mov
fcomps
insb
in
mov
mov
ss
or
xor
gs
arpl
sbb
jg
xlat
ret
dec
ss
pop
or
or
mov
jecxz
mov
or
add
push
bound
xchg
cmpsl
push
mov
enter
dec
in
jno
fwait
cmp
and
fdivl
adc
sti
in
int3
popa
push
shll
cli
dec
add
xlat
sahf
mov
mov
add
lret
adc
out
xor
fs
shl
cmc
out
test
pop
fsubrs
lahf
fs
shrl
decl
sbb
cli
pop
push
leave
jnp
or
adc
xchg
and
lcall
or
and
insl
or
xlat
lods
test
jne
in
jb
sbb
mov
cmc
jns
cmp
in
icebp
jl
adc
cmpsl
bound
add
inc
push
fwait
mov
call
pop
cli
stc
fldt
push
cmp
adc
out
insl
int
inc
sbb
cmp
inc
or
and
in
adc
or
pop
test
mov
sti
mov
adc
testb
mov
mov
ret
inc
or
stos
inc
out
fmull
fidivl
dec
sub
cld
sahf
and
rcl
pop
push
add
aam
fldt
ss
cs
push
rolb
or
arpl
cmpsl
inc
mov
mov
rorl
mov
cmp
adc
jo
pop
aaa
fs
subl
lds
sbb
rcl
jne,pn
jne
lahf
push
bound
test
adc
adc
jg
sbb
inc
adc
in
sbb
sbb
sub
mov
js
lock
fwait
pop
lods
inc
das
adc
pop
mov
pusha
jb
push
jns
mov
popf
movsb
inc
outsb
add
push
pop
pop
ret
add
std
insl
fstl
jno
xchg
jbe
mov
sbb
inc
xor
and
test
cmp
mov
sbb
jmp
js
jg
mov
xor
cld
das
add
adc
and
insl
fucom
jge
sbb
ret
xlat
mov
nop
loope
jecxz
rorb
lcall
pop
ja
jecxz
test
mov
sbb
add
int
xor
xchg
adc
aaa
jne
mov
les
xchg
dec
pop
lea
lea
out
ds
sbb
mov
jecxz
sbb
dec
fildl
shrb
lret
jae
mov
ja
xchg
mov
add
daa
push
mov
je
adc
insb
xchg
mov
cmpsb
fisubrs
dec
idiv
lret
adc
in
xchg
mov
pop
mov
rcrl
andl
pop
aam
pop
pop
pop
ds
xchg
rorl
dec
stc
mov
iret
xor
aas
jecxz
mov
aad
jp
pop
dec
jno
stc
mov
and
js
imul
mov
push
sbb
xlat
or
mov
mov
jp
lods
mov
pop
mov
scas
dec
out
pop
add
mov
fisubs
loopne
pop
out
clc
push
mov
sti
jecxz
into
jbe
fimull
iret
xchg
jnp
xor
aad
fnstsw
adc
dec
or
sub
sti
adc
out
mov
cmp
jb
ds
mov
cmpsb
mov
mov
mov
movsl
push
jb
scas
mov
fistpl
lahf
imul
fcmovnbe
stos
sar
and
jg
inc
iret
xchg
inc
arpl
xchg
repnz
mov
mov
jmp
jmp
add
in
jl
dec
aam
adc
rep
xchg
scas
popa
enter
imul
cwtl
cli
lahf
jns
push
ret
fimuls
dec
mov
add
fbld
push
imul
repz
sbb
ss
fisttpll
sub
data16
out
daa
or
int3
jg
mov
call
adc
xchg
repz
fsubrl
enter
push
sti
mov
aad
cmpsb
test
pushf
mov
aad
xlat
dec
repz
add
adc
push
mov
xor
jno
dec
arpl
inc
pop
subb
jp
adc
scas
sahf
xchg
pop
jns
jmp
lahf
mov
aam
push
xchg
sahf
shrd
mov
fcmovbe
arpl
mov
rcl
mov
ret
xchg
hlt
jbe
je
adc
aad
xchg
fwait
mov
loopne
xlat
rolb
out
add
xchg
repz
push
jle
push
jb
xlat
out
stos
mov
mov
fcoms
icebp
jns
dec
sbb
scas
jbe
adc
push
xor
pop
or
push
shlb
insb
push
popa
adc
lret
in
push
int3
jne
xchg
dec
xor
sub
pop
xor
mov
mov
je
dec
aad
mov
orl
mov
sub
in
mov
fistpll
dec
adc
ffreep
mov
pusha
pop
mov
fbstp
mov
sbb
mov
mov
fsubp
xlat
lods
push
cld
in
pop
mov
popa
aas
rol
sub
pop
rcrb
fcomp
jecxz
jo
inc
out
add
imul
inc
das
dec
and
xchg
mov
sub
popf
mov
in
mov
or
mov
ljmp
cli
shll
daa
movsb
loopne
adc
cmp
ret
cmpsl
jb
les
cmp
cmp
ffreep
subb
bound
orb
les
or
clc
lods
mov
ror
adc
in
insl
and
decb
xchg
out
aas
scas
in
mov
xlat
in
into
cltd
sub
lds
pushf
fcompl
xor
fcom
sbb
push
test
sub
out
mov
ljmp
and
push
jmp
imul
loope
or
mov
mov
cmc
push
inc
loop
sti
pop
pop
xchg
mov
xchg
inc
mov
push
pop
sub
pop
jne
jle
ljmp
lret
or
push
es
jne
aam
cmp
nop
xchg
add
xchg
loope,pn
jge
incb
jecxz
pop
lods
cmp
sti
aad
add
clc
jmp
push
call
clc
pusha
mov
or
hlt
sbbb
cltd
jne
pusha
dec
push
in
insl
enter
xchg
in
ret
scas
inc
sahf
add
sbb
stc
jp
jle
inc
pop
repnz
sub
add
and
inc
mov
jae
cmp
sbb
lret
sub
imul
fs
adc
push
pop
push
loopne
pop
sbb
dec
sbb
jp
pop
repz
arpl
lods
push
push
jno
pop
dec
mov
hlt
push
pop
jne
pushl
decb
push
pop
and
mov
push
xor
and
xchg
push
push
xor
js
mov
loopne
sahf
aam
maxps
jno
gs
or
pop
sti
loopne
push
cmp
mov
xor
mov
out
lea
in
in
inc
inc
mov
mov
mov
fwait
repz
and
stos
jbe
aaa
push
jb
mov
inc
cmpsl
out
jg
nop
or
mov
or
aam
test
addb
dec
sbb
xchg
fldl
push
pop
pop
push
push
xchg
in
jg
and
fiaddl
and
dec
jmp
jmp
test
cmp
stos
pop
adc
jno
jbe
or
xchg
dec
push
shlb
in
mov
jns
mov
popl
xor
xlat
push
adc
mov
jns
imul
push
iret
in
add
mov
stc
stc
out
dec
add
std
or
dec
cmp
movsl
push
ficomps
movsb
inc
imul
adc
jg
mov
pop
mov
inc
adc
xchg
in
clc
add
loop
rcrl
or
and
sub
aam
mov
lcall
inc
mov
mov
xchg
inc
loop
pop
repnz
mov
jecxz
outsb
xchg
sahf
sahf
and
std
aad
stos
ret
sahf
mov
aas
sbb
mul
aas
cmc
jmp
or
rorb
add
and
and
mov
mov
add
test
inc
dec
mov
mov
test
adc
es
loope
dec
lods
pop
mov
push
dec
mov
and
call
xchg
jb
push
adc
test
les
lret
adc
hlt
dec
push
push
lret
ds
inc
push
dec
inc
fidivrs
mov
jecxz
sub
cmc
fnstenv
outsl
cld
imul
lea
mov
loopne
outsl
out
cmpl
pop
leave
std
mov
jecxz
cmpsb
adc
hlt
sahf
mov
bound
pop
je
add
dec
jne
inc
and
movsb
dec
sti
pusha
scas
xor
jle
int
mov
add
inc
leave
mov
sbb
dec
sbbl
xorb
dec
imul
stc
fadds
lock
xchg
inc
imul
push
jae
xchg
outsb
adc
jnp
mov
push
sub
stos
jae
nop
jle
icebp
pop
stos
xor
cmpsl
sbb
orb
inc
mov
out
cmpsb
mov
mov
mov
mov
or
call
adc
xor
adc
mov
jno
push
nop
mov
js
xlat
test
jl
mov
jns
dec
xchg
jbe
mov
mov
push
outsl
inc
ret
loop
mov
xchg
in
lds
xor
test
cmpsl
sbb
or
fsubrl
xchg
xchg
xlat
push
sbb
cltd
push
nop
pushf
shl
loope,pt
sbb
fildll
mov
stos
sub
leave
inc
ficoms
inc
loopne
sub
jo
inc
push
mov
loope
bound
es
imul
movsb
rclb
cwtl
pop
mov
loop
dec
mov
adc
jb
mov
stos
test
iret
inc
daa
jno
or
jecxz
scas
orl
jno
clc
and
inc
jno
movsb
jbe
sbb
rcrb
or
jns
movsb
imul
stos
or
stos
push
inc
jbe
jg
or
adc
xor
push
mov
insb
inc
jne
mov
sti
xor
sub
in
mov
and
jmp
hlt
das
aam
dec
sbb
and
mov
pop
insl
or
mov
setne
mov
pop
mov
out
mov
mov
inc
dec
dec
adc
xor
lea
popf
addb
mov
lahf
push
push
inc
add
sahf
push
cmp
mov
insb
add
arpl
push
cmp
pop
cmpl
loop
pop
ljmp
std
movsl
dec
clc
mov
xor
sub
loope
fbld
add
push
push
push
xor
daa
sub
jmp
adc
jg
mov
mov
inc
cltd
mov
andl
and
mov
insb
dec
push
sbb
mov
call
or
cmpsb
mov
pop
inc
pop
lock
mov
sbb
fdivrs
add
xor
push
push
add
push
mov
clc
in
pop
push
pop
out
hlt
or
fsubl
into
dec
jnp,pn
enter
mov
add
ror
ds
fstpl
adc
je
pushf
pop
xchg
cmp
inc
push
jns
sub
dec
add
fistl
push
call
insl
fists
sub
lock
or
bound
mov
pop
cmp
icebp
shrl
mov
data16
test
cmp
push
cmp
adcb
sbb
cwtl
out
fs
leave
xchg
mov
out
jbe
push
or
rol
mov
std
daa
mov
add
jg
mov
in
inc
xchg
pop
pusha
repz
sbb
sub
js
rcrb
and
xor
add
mov
mov
cmp
mov
jg
icebp
bound
mov
mov
sbb
nop
mov
js
imull
mov
adc
xchg
test
and
hlt
ret
sub
ret
push
in
cs
inc
push
sbb
add
sbb
jmp
mov
push
xchg
pop
out
mov
sbb
lods
repnz
jae
bnd
fmull
mov
fstl
andb
imul
dec
dec
push
jle
daa
jb
daa
addl
fstps
pusha
jge
cmp
inc
jp
push
daa
pop
mov
xchg
sub
dec
jo
outsl
bound
pop
cmpsb
xchg
push
pop
dec
rclb
jecxz
scas
lret
cmpsl
or
xor
cld
cmp
dec
mov
adc
jmp
jno
inc
sbb
loopne
jo
jae
mov
sarb
