add
push
addr16
mov
outsl
aam
jmp
add
lock
psrlw
decl
rol
xor
jmp
jmp
scas
or
maxps
ror
push
xchg
pop
jmp
sub
push
sbb
add
cmp
call
adc
rclb
pop
sub
movq
jmp
fadd
cmp
push
dec
pop
adc
jae
jmp
mov
mov
fucomi
add
jecxz
js
inc
movl
and
push
inc
pop
adc
jmp
mov
fwait
jno
repnz
xlat
add
rcr
push
clc
pop
sbb
push
xchg
pop
shr
pmaxsw
adc
sbb
js
add
movb
jmp
lret
lahf
jmp
cmp
add
jmp
out
loop
test
sbb
jmp
bound
add
jl
arpl
jmp
mov
adc
xor
rcpps
rol
add
and
add
and
sbb
and
xor
rcpps
push
sahf
pop
sbb
movl
sub
jl
or
xor
and
push
aaa
pop
js
unpcklps
add
push
dec
pop
jns
psubusb
movl
sub
jae
rcr
adc
ja
or
pcmpgtw
jnp
pmulhuw
sbb
jnp
and
push
xchg
pop
sub
xor
and
dec
movw
sub
jne
rsqrtps
or
add
jmp
arpl
sub
or
push
xchg
pop
jo
punpckhdq
dec
movw
and
punpcklbw
js
push
inc
pop
jmp
mov
add
sub
push
inc
pop
jae
push
lahf
pop
sbb
cmpl
jne
add
mov
jmp
add
push
mov
cmp
into
dec
aas
jle
rorb
scas
out
push
mov
dec
add
mov
lock
std
cwtl
mov
adc
mov
mov
jge
test
adc
lods
lock
inc
jp
push
scas
sub
xor
pusha
pushl
lock
inc
jp
ljmp
mov
dec
add
adc
mov
mov
std
jbe
cli
adc
mov
mov
sahf
gs
jg
jecxz
adc
add
adc
cmp
stc
adc
stc
mov
adc
mov
mov
popa
scas
xor
adc
mov
mov
lahf
mov
and
stc
mov
pusha
data16
stc
mov
arpl
cmpsl
mov
push
mov
mov
adc
mov
test
ljmp
ljmp
mov
stos
mov
xchg
pop
inc
push
xchg
clc
adc
stc
mov
sahf
lds
ret
clc
adc
xchg
xchg
mov
sbb
test
test
ljmp
add
adc
push
xchg
cmp
sahf
mov
mov
ljmp
sahf
mov
xor
aam
cmp
sahf
imul
jno
cmp
sahf
mov
cmp
jmp
add
mov
mov
adc
icebp
mov
cli
adc
stc
mov
cli
pushf
icebp
test
inc
cmp
sahf
stos
mov
jno
cmp
mov
lock
jb
sahf
stos
aam
and
stc
mov
stos
xor
sub
push
sub
push
sub
push
sub
push
xor
inc
cmp
sahf
mov
or
xor
mov
cmp
adc
call
out
outsl
mov
mov
mov
adc
ljmp
ficoms
mov
cwtl
les
int
repnz
pusha
mov
popf
movsb
les
push
xor
sub
mov
sarb
repnz
inc
mov
xchg
cmp
jge
dec
mov
sbbl
les
enter
ret
cmp
cmp
xchg
shlb
add
xorb
pop
call
mov
xor
adc
mov
loopne
rdmsr
mov
sarb
xor
adc
mov
loopne
ljmp
jmp
mov
add
insb
mov
xchg
loope
xor
mov
cmp
push
js
ds
xor
adc
jno
aad
cmp
push
js
sub
jns
cli
adc
mov
cmp
sahf
lret
outsb
mov
pop
or
jns
jno
cmp
pushf
xchg
cmp
je
dec
mov
gs
sub
test
jge
cmpsl
mov
adc
add
mov
adc
cmp
jge
cmpsl
mov
adc
cmp
jge
cmpsl
mov
adc
cmp
inc
rcll
push
mov
mov
pushf
mov
fmuls
add
mov
scas
mov
fadds
add
mov
std
push
mov
adc
mov
ret
aad
enter
xchg
adc
int3
rcll
adc
int3
rcll
jbe
cld
xchg
je
cld
xchg
ja
rorl
jo
loopne
jp
icebp
sahf
jno
aad
mov
jno
jno
fdivr
pop
int
xchg
js
shrb
aad
popa
rcr
xchg
adc
int3
les
inc
int
xchg
jnp
icebp
cli
pop
int
jo
leave
mov
mov
les
jp
aad
mov
adc
mov
mov
adc
pushf
mov
push
mov
icebp
cli
adc
add
add
mov
add
jnp
add
shll
add
add
add
add
add
add
add
cmp
inc
add
sarb
add
outsb
mov
sub
mov
rcll
jmp
aam
stos
push
jge
sbb
call
sub
add
add
add
add
int
and
cld
pop
xor
or
out
fnstenv
das
sub
xchg
out
dec
mov
lret
call
fisubs
outsb
scas
stos
adc
std
and
jge
xchg
call
push
pop
fincstp
std
mov
dec
lds
int3
or
add
add
add
loope
add
fs
push
cwtl
mov
add
add
add
lret
rcl
xor
add
add
lahf
add
add
add
int
incb
add
add
add
add
add
add
add
add
add
add
iret
in
add
testb
add
add
mov
add
add
add
add
roll
add
add
add
add
add
add
add
dec
test
in
add
add
je
rolb
add
ds
jp
add
push
mov
add
cmp
stc
add
cmp
add
xor
add
cmpsb
add
sbb
add
out
xor
add
add
add
add
cli
add
add
pop
pop
mov
mov
push
jp
add
rcl
add
and
add
xchg
mov
add
inc
loopne
cltd
cwtl
inc
out
lods
add
aam
add
add
mov
pop
push
add
scas
and
and
pop
adc
divb
push
jnp
push
or
mov
cltd
add
shll
jnp
mov
lret
dec
out
add
test
jp
add
jae
xchg
mov
push
mov
mov
jb
sub
lds
lods
lods
js
push
out
sub
or
in
jns
sbb
or
jecxz
ret
in
mov
add
mov
add
and
cmp
jle
insl
icebp
push
movsb
ret
into
sarb
js
shl
mov
daa
pop
mov
rcrb
pop
aas
mov
test
xor
pop
mov
das
cmp
jecxz
imul
push
add
adc
shr
std
and
inc
andl
sbb
push
ret
or
xchg
and
ds
vcvtsd2si
xchg
push
cltd
sub
mov
push
xchg
and
fistpl
inc
mov
xor
jbe
add
dec
pop
inc
fs
inc
push
pop
cli
push
cmp
lods
mov
cmpsl
je
add
jmp
loope
adc
xchg
xchg
test
ds
popf
mov
sub
mov
push
lods
push
lcall
fstps
mov
pop
jbe
std
subb
stos
or
loop
out
fwait
or
xchg
add
rorb
rcrb
mov
or
je
xchg
sti
or
mov
cmpsl
ret
pop
ljmp
int
mov
addr16
arpl
add
xchg
jne
loope
ficoms
jnp
xlat
cmpsl
mov
jecxz
mov
inc
dec
aaa
pop
aam
jp
xchg
dec
xchg
shrb
dec
ret
ljmp
aam
mov
data16
jns
inc
push
xchg
int3
xchg
or
fxch
xchg
nop
movl
loopne
pop
push
mov
mov
or
stos
pop
test
sti
sub
push
nop
jns
mov
out
add
jge
repnz
ljmp
sub
mov
and
aam
pop
sub
fisubrs
jmp
js
xchg
add
push
mov
jno
xchg
testl
sbb
add
push
in
sbb
and
test
jecxz
mov
ja
push
jmp
sub
imul
insl
stos
ffreep
inc
push
jp
fdivrs
sub
xor
test
int
loope
adc
out
pop
test
cmp
cmp
and
repnz
das
mov
rcll
fisttps
jns
mov
movsl
xchg
push
outsl
mov
mov
pop
lea
es
pop
outsb
cwtl
adc
mov
jbe
nop
in
ret
pop
frndint
les
jecxz
jl
daa
int
gs
mov
inc
je
cmp
mov
sub
sti
add
out
fsubl
cwtl
add
sahf
cmp
push
sub
mov
mov
mov
sub
jp
sub
fldcw
ljmp
or
push
xchg
jb
mov
in
xchg
jp
cli
setno
adc
xchg
sub
adc
loop
aaa
xchg
dec
add
jne
nop
inc
lds
out
and
sbb
add
ja
push
dec
in
cmp
sub
pop
roll
cmp
xor
arpl
mov
xchg
lods
insb
push
xchg
loope
sub
divb
and
lock
jp
in
jmp
push
inc
ljmp
jne
lret
lods
bound
jno
cmp
ljmp
dec
pop
push
das
fucomp
mov
or
scas
push
dec
ds
addb
lcall
insb
daa
test
dec
movsb
or
cmpsb
mov
jo
sub
aam
sub
xchg
dec
xor
cli
mov
stos
mov
fcomip
shl
mov
call
or
mov
adc
leave
movsl
enter
fwait
mov
jle
pop
ljmp
cld
sti
call
push
xchg
movsl
dec
cwtl
addr16
sub
loop
inc
dec
bound
loop
adc
pop
out
and
jmp
or
jnp
shlb
fcomps
mov
and
xchg
leave
xchg
imull
movq
ret
fisttps
mov
mov
scas
mov
push
add
xchg
int3
xor
or
dec
sub
push
add
mov
inc
cmpsl
in
mov
jb
and
dec
aas
xlat
rol
addl
stc
gs
jnp
mov
inc
or
xlat
shlb
aas
inc
das
test
into
cmp
subb
pop
arpl
xchg
cli
lea
lret
cwtl
cmp
mov
mov
xlat
mov
cltd
xchg
mov
push
mov
xchg
mov
lcall
mov
xchg
jo
mov
test
and
or
lret
insl
movsl
aam
test
fmull
adc
ja
xchg
dec
dec
xlat
mov
mov
iret
arpl
sub
push
sbb
push
push
sub
scas
lods
in
push
xchg
mov
mov
inc
xor
decl
cmp
shlb
xchg
sub
js
dec
out
mov
xchg
pop
pusha
mov
aas
test
sti
in
cmpsl
mov
mov
aam
in
push
and
lahf
or
and
in
dec
jle
repnz
cld
shll
popf
out
iret
cmove
lea
das
mov
pop
inc
push
popf
in
stos
popa
stc
and
pushf
outsl
lds
jb
fsubs
aam
clc
jns
add
shl
rclb
nop
xchg
imul
sbb
outsb
jecxz
aas
in
cwtl
cmp
lcall
jns
xchg
jl
or
jecxz
repnz
stos
popf
add
mov
stos
sbb
sub
xchg
bound
pop
fistpll
out
xor
or
and
std
int3
mov
push
sbb
enter
mov
jg
jbe
sbb
sub
cltd
into
mov
and
mov
or
xchg
push
mov
cmp
sbb
rclb
in
cmpsl
dec
mov
in
xchg
jae
aam
pop
mov
cmpsb
mov
pop
mov
clc
es
adc
pop
fsts
filds
test
xchg
sbb
fildll
ja
push
cmpsb
cmpsl
test
lret
inc
outsl
mov
pop
cmpsl
mov
pop
outsb
sub
mov
xchg
or
or
push
mov
bound
xchg
mov
loop
movq
data16
call
into
in
jp
outsb
arpl
xchg
hlt
and
sbb
inc
loop
jg
sub
arpl
mov
push
pop
insl
inc
ret
cmp
inc
imul
imul
sub
sar
loope
movsl
adc
cmc
lods
pop
or
nop
test
std
mov
adc
and
sbb
scas
xor
mov
mov
mov
or
sub
mov
sarb
pop
dec
jo
out
mov
cmpsb
lret
push
sahf
ljmp
or
lods
pop
rcrb
in
lods
ljmp
cld
sti
cmp
out
cltd
push
xor
outsb
cmpsl
roll
cmc
dec
test
test
xchg
test
and
mov
sub
xor
outsb
test
sub
test
sbb
mov
cmp
cmp
bound
add
xchg
pop
dec
test
xchg
fidivrl
sub
lret
sbb
out
pop
aas
pop
sub
insb
ds
xchg
rclb
test
addr16
pop
sub
scas
test
xchg
pop
sbb
in
icebp
and
fstpt
pop
ljmp
adc
sub
scas
addl
scas
nop
jl
xchg
mov
pop
push
mov
imul
xor
inc
ret
in
mov
test
ljmp
mov
cmpsb
mov
adc
xchg
in
aad
add
fsub
ficoml
mov
xchg
jg
ret
ret
push
fisttps
jmp
fisttpll
ljmp
adc
mov
inc
test
and
and
cs
nop
push
hlt
fcomps
outsl
add
loop
imull
add
pop
mov
mov
mov
loopne
dec
mov
les
dec
add
mov
jge
add
out
jnp
add
push
insl
add
jmp
stos
cmpsl
sub
xchg
push
adc
pusha
jecxz
inc
in
add
lods
loope
inc
scas
jge
mov
shr
out
mov
out
lret
xchg
or
jb
jp
pop
aas
jecxz
push
pop
inc
or
scas
adc
xchg
sub
jmp
shll
shrb
xchg
inc
add
sbb
divb
sub
lcall
xchg
scas
mov
adc
add
in
sub
mov
xor
icebp
fnsave
xchg
cltd
push
int
nop
xlat
pop
pop
clc
push
xchg
out
js
jge
and
push
pop
movsb
ret
in
push
mov
mov
aad
imul
jmp
adcl
mov
mov
nop
fdivs
stc
sbb
mov
in
ss
aad
loope
add
ret
pop
loop
inc
insb
xchg
and
jl
test
das
ljmp
or
out
mov
sbb
and
cmp
in
or
push
push
imul
xchg
mov
outsb
iret
cs
or
shrb
mov
ss
repz
gs
push
push
les
frstor
movsl
inc
roll
mov
mov
mov
mov
fisubrl
xchg
inc
or
fnstcw
lea
xchg
add
cltd
mov
scas
cltd
fadd
sbb
or
aad
and
dec
idiv
fiadds
dec
inc
ss
dec
aam
or
in
data16
bound
or
lret
rclb
fcoms
leave
adc
daa
push
pop
ss
dec
mov
jno
cwtl
push
test
sbb
aaa
adc
mov
jno
cmpsb
ficoml
sbb
mov
push
cmp
movsb
push
jecxz
shl
cld
jo
in
call
dec
testb
sar
inc
mov
iret
repnz
add
fidivrl
loope
in
hlt
popa
xor
inc
daa
push
and
loopne
fiadds
xlat
jge
test
out
es
adc
movsl
sti
mov
jp
push
out
nop
shll
inc
mov
xchg
push
push
xor
pop
mov
jo
mov
mov
jo
add
sub
mov
adc
jb
xor
push
and
mov
fldenv
pop
or
adc
scas
repz
dec
dec
jl
adc
popa
std
pop
pushf
xor
sbb
cld
jae
inc
push
lods
cmpsb
xchg
fcmovb
fs
leave
addr16
mov
dec
inc
push
outsl
movb
lea
xor
or
mov
sbb
cmc
adc
sub
mov
mov
jnp
adc
push
lcall
push
push
pusha
daa
or
push
or
hlt
insl
shll
inc
mov
sub
fwait
and
mov
in
jecxz
cwtl
call
das
popf
pop
mov
addr16
sbb
mov
mov
pop
jnp
jno
stc
aad
test
add
jmp
cs
mov
mov
out
adc
cmp
mov
es
and
cmp
into
lcall
ds
stos
jl
jmp
inc
xlat
jge
jo
mov
pop
jle
fisubrs
cwtl
jbe
jno
test
rclb
push
and
shlb
jno
aad
xchg
cmp
xchg
push
clc
xor
push
sbb
xchg
dec
lcall
mov
mov
sub
dec
insb
enter
and
adc
cmp
stos
adc
jp
cmp
subb
mov
cmpsb
sbb
cld
push
sbb
lock
push
cmpsb
mov
out
inc
insl
scas
cmp
and
jo
xchg
pop
and
stc
mov
lock
xchg
ss
fsts
sub
cmpsb
aam
mov
mov
push
or
add
pop
inc
sub
cli
pop
inc
add
mov
mov
inc
rol
test
xchg
cmpb
pop
mov
popa
adc
mov
adc
pop
mov
loope
int
stos
lret
push
push
dec
rclb
clc
adc
sarb
push
adc
or
pop
inc
adc
fisubrl
add
sbb
fists
push
jne
aad
mov
roll
mov
and
loopne
mov
lret
mov
into
outsl
shr
in
fs
sbb
imul
sbb
inc
movsb
in
jo
mov
daa
adc
in
mov
sub
test
dec
xor
dec
inc
mov
sahf
mov
lcall
mov
cli
jp
ja
xchg
inc
das
imul
pushl
imul
sbb
outsl
cltd
test
fcoms
ljmp
das
add
imul
repnz
shll
add
rep
push
cmpsl
pop
mov
xchg
push
pop
stos
jge
adc
fnstenv
or
xor
jl
sbbl
cmp
mov
xchg
iret
mov
iret
les
aad
loop
and
xor
fs
mov
ret
fisubrl
mov
shrl
push
rorl
icebp
int3
pop
out
enter
add
or
mov
out
pushf
fisttps
mov
sbb
mov
fcmovnb
movsb
out
sbb
push
fistl
xchg
cmp
or
xchg
and
jg
andl
sub
add
pusha
push
pusha
in
cmpb
xchg
aaa
into
push
fwait
shlb
icebp
pcmpeqd
clc
dec
or
adc
icebp
push
repnz
xchg
js
pop
adc
push
mov
fidivrl
filds
inc
adc
sub
pop
ja
scas
out
enter
out
cld
push
xor
imul
adcl
ret
outsl
pop
int3
jbe
out
add
fdivp
in
outsl
and
ret
pop
lcall
jl
and
shll
cs
mov
leave
adc
mov
push
cli
mov
loope
push
adc
call
lcall
shrl
dec
addr16
int3
add
sbb
decl
jl
and
ljmp
mov
out
cs
ds
lods
lods
inc
std
cmpsb
data16
in
xlat
arpl
xchg
imul
ja
test
or
ds
add
jge
aas
pop
popf
cld
cli
inc
repnz
scas
xchg
lods
sub
or
fdivr
push
jecxz
scas
test
jne
lods
inc
out
push
repnz
mov
add
in
nop
inc
add
shll
dec
jne
jns
cmp
loope
call
into
cmp
dec
clc
jbe
push
repz
mov
mov
adcl
jle
push
outsl
jnp
xlat
mov
and
add
aas
xor
adc
sahf
mov
xlat
jno
push
sub
les
imulb
push
xor
cmpb
xchg
stos
rclb
loop
jo
and
fisttpl
jmp
gs
loopne
les
xor
or
fistpll
push
jge
les
pop
insl
jl
push
mov
into
mov
jo
sbb
pop
out
mov
pusha
loope
cmp
cmp
lcall
xlat
repz
inc
popa
mov
push
add
cmc
cmp
nop
imul
sbb
and
lock
test
rcr
jns
and
rcll
or
mov
mov
std
movsl
test
fisubrs
mov
push
ljmp
inc
andl
xorb
loope
adc
xlat
int3
fstpl
pop
les
fcomp
jmp
les
out
xor
das
push
add
outsb
std
jbe
xchg
scas
cld
insl
pusha
out
loopne
ds
mov
cs
mov
lock
sub
xlat
jge
mov
insb
jmp
push
ret
jle
aad
push
inc
add
stos
in
lea
or
dec
pop
push
rorl
dec
adc
mov
iret
fists
fcmovnbe
inc
xor
movsl
andb
mov
inc
daa
mov
pop
jnp
xor
mov
mov
shl
cmp
dec
and
xchg
popa
jmp
push
pop
jbe
scas
pop
insb
clc
outsb
dec
out
hlt
add
into
add
sbb
popf
movsb
cs
inc
xor
fdivrs
mov
mov
inc
sbb
push
fcoms
push
mov
ret
cmp
push
mov
adc
push
xchg
add
cld
lahf
jnp
add
or
scas
pop
test
repnz
test
shll
jecxz
add
jo
sbb
ficoms
inc
shlb
jno
lret
cmpsb
into
cmp
sub
out
dec
ret
into
sbb
xor
pop
push
nop
negl
in
je
xor
cwtl
cli
dec
sti
rcll
bound
ret
insb
arpl
dec
push
jecxz
mov
aad
dec
mov
sub
and
pop
insl
repz
lds
xchg
mov
dec
xor
stos
ret
adc
hlt
fwait
sar
xchg
xor
mov
lea
jnp
cmp
cs
mov
aad
into
sbb
mov
lcall
iret
aad
sti
cltd
imul
xlat
pop
test
pushf
inc
stc
inc
or
daa
push
sti
icebp
hlt
sbb
mov
icebp
sbb
push
cmp
or
adc
cmp
shlb
push
xchg
dec
js
dec
jnp
lret
int3
pop
pop
inc
or
pop
add
dec
outsl
mov
mov
mov
mov
cmc
mov
movsl
jge
movsl
rcll
sub
fstps
xchg
xchg
push
mov
iret
inc
mov
shr
loopne
push
fs
xchg
in
jb
sbb
out
mov
lret
push
arpl
stos
mov
popf
dec
xchg
sub
shl
cmp
jge
insb
ja
dec
and
mov
stos
mov
xchg
push
testl
inc
pop
in
sar
in
inc
push
repz
shlb
and
xchg
shlb
mov
sbb
aaa
testl
outsb
aaa
ret
xchg
jmp
mov
lds
ds
sub
bound
xchg
lds
pop
dec
cld
int
lods
mov
aad
add
dec
cmc
cmp
xchg
in
pop
pop
js
dec
sub
stos
pop
mov
loope
clc
mov
and
jb
imul
and
cmp
xor
test
cmp
daa
dec
xor
sbb
popa
negl
int
inc
mov
popa
out
or
inc
ret
fucomi
adc
pop
jmp
int
add
jne
add
jecxz
and
bound
dec
fistl
addr16
lcall
add
adc
insb
repz
decl
ljmp
cld
lcall
sub
and
xchg
jb
popf
pop
adc
gs
push
push
and
xchg
mov
mov
dec
push
ftst
mov
mov
push
pop
and
mov
and
dec
xlat
lods
imul
add
jge
insb
push
ss
pop
push
into
dec
inc
sub
dec
stos
neg
and
cld
stc
cmpsb
lret
xchg
popf
in
mov
fs
outsl
xchg
in
sub
cmpsl
cmp
subb
popf
cmc
xchg
push
xchg
add
cmp
push
sub
ss
push
jb
in
cmp
inc
jo
pop
inc
inc
jo
fsubr
sub
mov
sbb
adc
adc
lods
pop
sbb
adc
std
jmp
cmp
push
ds
or
add
sbb
movsl
mov
enter
call
mov
aam
idivl
cmp
add
pop
inc
into
adc
push
push
leave
bound
mov
idivl
es
movsb
cmp
sub
leave
push
ret
jnp
or
mov
pcmpeqw
gs
or
cmp
jb
inc
jnp
mov
adc
and
ud2
outsb
jle
imul
dec
push
cmc
push
inc
or
stos
xchg
rcl
mov
adc
or
andb
notb
adc
mov
mov
pop
mov
lcall
push
enter
sbb
push
mov
push
mov
cmp
bound
in
lcall
ds
fnstcw
lods
mov
loope
cmp
outsb
mov
test
or
xor
xlat
movsb
sbb
push
inc
pusha
xchg
mov
mov
imul
push
in
scas
adc
cmp
shlb
xchg
adc
xor
add
mov
inc
sbb
sub
ljmp
ret
add
int3
cwtl
data16
jae
jo
mov
mov
jge
inc
data16
hlt
enter
push
in
mul
push
lea
sub
lahf
mov
shll
daa
testl
push
cmc
xchg
lret
loopne
dec
int
out
inc
cmc
nop
iret
addr16
gs
pusha
push
fadds
movsbl
mov
fnstcw
or
scas
enter
inc
push
dec
mov
push
mov
cmpsb
dec
jg
xchg
lahf
push
int3
add
fidivrs
bound
fdivrs
imul
add
inc
cmp
mov
cmp
xor
je
pop
bound
push
dec
repnz
sarl
lahf
inc
sub
xchg
cs
enter
push
mov
fsubl
cmp
loopne
mov
xchg
adc
sub
mov
inc
test
pop
cmp
repz
sti
add
bound
or
mov
push
push
scas
jp
pushf
repnz
popf
jno
push
add
jmp
es
sub
dec
xchg
jg
loopne
adc
lret
rorb
ss
add
cmp
lret
and
cmp
xchg
push
repnz
movsl
int
ds
mov
fsubrl
inc
fisubrl
push
mov
inc
loope
fisubrs
call
and
mov
ja
repnz
mov
sbb
repnz
aad
dec
imul
adc
mov
sbb
adc
cs
andb
push
fnstsw
shl
lea
enter
dec
pop
xchg
push
into
push
lock
outsl
sbb
negb
xchg
push
sub
nop
insl
mov
cld
sbb
push
push
cmpsl
dec
add
jecxz
data16
mov
loopne
jno
dec
movsl
push
mov
js
push
flds
push
or
and
pop
stos
or
jnp
les
mov
lcall
xchg
xor
fsub
enter
and
cmp
divb
mov
mov
int
ss
adc
mov
aas
daa
mov
jns
mov
leave
or
int
sbb
lock
je
push
test
mov
mov
dec
jo
jmp
dec
xchg
mov
or
sarl
int
jecxz
sub
in
pop
or
mov
jne
int
or
inc
and
in
cmp
jbe
enter
jns
mov
or
cmpsb
subb
mov
out
ljmp
call
arpl
enter
push
mov
inc
sahf
mov
mov
int
adc
in
pop
rorb
xchg
mov
cmp
xchg
push
add
adc
in
or
std
jge
add
mov
sbb
idivl
es
adc
mov
mov
aaa
lcall
mov
cmp
mov
hlt
std
loopne
lea
or
cmp
or
jae
fbstp
loop
cltd
sarl
lock
popf
pop
test
sub
jge
xchg
xor
repz
xorb
mov
inc
inc
and
sub
lods
ja
jmp
lock
call
into
cmp
pop
fdiv
cltd
cmp
movsb
data16
dec
mov
sub
sbb
pusha
ret
xchg
clc
addr16
out
pop
sub
xadd
call
push
out
jno
push
inc
pop
stos
inc
pop
xor
imul
jns
jns
lret
adc
pusha
ret
inc
jbe
add
adc
cmp
pop
xchg
stos
pusha
xor
or
call
jge
pop
enter
mov
xchg
mov
mov
std
push
repnz
nop
aad
loopne
mov
mov
or
sub
aam
enter
les
add
jno
popf
cmp
jno
and
inc
pop
lahf
sub
lea
xor
mov
mov
fistl
jecxz
fildll
xor
mov
sbb
mov
loop
ja
dec
xchg
pop
sbb
sub
sub
ja
push
ret
or
lods
data16
mov
cmp
adcl
sbb
dec
push
sbb
mov
or
adc
jne
sub
mov
orl
mov
jg
scas
ret
inc
push
fadd
hlt
aam
int
orl
mov
sbbb
das
adcb
lods
mov
sbb
pop
xorl
jp
cmpsb
cmc
movl
jge
in
xchg
pop
xchg
jp
dec
dec
jnp
jns
xchg
mov
dec
fs
jle
sti
pop
push
fimuls
and
fs
jl
inc
imul
pop
mov
cmc
jno
push
cmpsb
call
cwtl
ret
pop
cmp
frstor
arpl
lret
xchg
or
dec
pop
sbb
mov
push
inc
xchg
mov
inc
sub
out
fiadds
rcrl
lods
inc
xor
pop
aad
pusha
je
into
xchg
dec
or
les
xchg
mov
bnd
xor
inc
push
add
mov
ret
pusha
jmp
adc
sbb
idivl
and
insl
jg
scas
inc
jne
fcoml
push
mov
jne
or
repnz
mov
xchg
test
mov
lods
pop
and
mov
sbb
jnp
pop
loop
adc
inc
or
push
sub
fcmovnb
cmp
or
sti
inc
outsl
ds
iret
test
jecxz
pop
je
jns
popf
cmp
sarb
mov
or
aas
jle
xchg
out
mov
lret
cwtl
ret
fistps
int
imul
cmp
push
pop
sbb
adc
lea
ss
negb
jns
loop
push
mov
fidivs
mov
stc
xchg
out
pop
aad
out
mov
int3
cmp
in
gs
pushl
inc
out
stc
add
mov
jle
bound
inc
lock
push
jge
and
repnz
and
jl
and
push
xchg
rol
cmc
enter
mov
and
lret
jmp
xchg
icebp
ret
or
icebp
out
fisubrl
cmp
jae
stos
sbb
jns
pop
or
imul
xchg
and
popa
inc
lods
ret
sub
stc
dec
xlat
jp
inc
jae
into
mov
mov
cmpsl
dec
add
push
push
les
dec
test
mov
cmp
inc
sub
aas
mov
cmp
cmpsl
ja
lret
les
cmp
jg
push
pop
dec
gs
movsl
pusha
stos
xchg
xchg
aaa
lods
ss
adc
jg
mov
fs
xchg
sbb
lahf
js
popf
mov
jb
xchg
clc
cwtl
lea
rol
sub
mov
outsl
mov
test
aaa
jae
dec
ds
add
and
and
lahf
and
dec
mov
movsl
mov
clc
cmpsb
int3
stos
fidivrs
sarl
rol
sub
rol
jle
jno
inc
insb
out
stc
pop
cmp
xorl
out
jo
scas
es
adc
lock
movsl
daa
lret
adc
push
xchg
outsb
into
scas
push
cmp
mov
repnz
jnp
outsl
mov
mov
jmp
popa
xor
sub
add
fbstp
jg
pop
ret
lret
imul
sbb
out
push
rorl
lcall
jmp
roll
stos
add
push
ds
lods
pusha
and
sub
scas
sti
push
mov
es
cmpsb
aad
sbb
pusha
xchg
das
mov
or
sbb
cmp
sub
pop
sub
add
lock
sbb
repz
test
lods
fmull
popf
ret
mov
inc
cld
mov
xorl
xchg
sar
push
jb
mov
jge
inc
lock
push
cltd
out
mov
cmp
pushf
or
les
std
fbld
lock
jecxz
into
repnz
mov
lahf
pusha
mov
out
mov
mov
stos
mov
dec
ljmp
stos
pop
mov
leave
repz
je
test
jmp
divb
inc
stos
imul
lret
ret
mov
pushl
xlat
adc
jo
ss
ljmp
test
xchg
in
gs
inc
cmpb
jmp
dec
loopew
mov
leave
movsl
clc
push
push
mov
pop
pop
movsl
aad
pop
dec
jecxz
pop
inc
pcmpgtd
push
xchg
inc
lcall
lods
hlt
fs
je
add
imul
mov
or
in
out
ret
jbe
std
add
out
repnz
jge
fldcw
lea
sub
jbe
sti
xor
pop
push
fwait
aam
jbe
int3
sbb
cmp
les
test
dec
loop
jp
fiaddl
adc
cmp
sbb
add
pop
jge
add
popf
jnp
lcall
arpl
or
enter
popa
cmp
sbb
sbb
jl
divb
shrb
sub
fmul
pop
aaa
shll
mov
push
bound
inc
icebp
test
scas
scas
inc
in
cltd
cmp
test
rclb
pop
jmp
inc
and
cwtl
cmpsb
out
test
dec
rorl
pusha
in
lds
mov
push
cmpsb
xchg
push
into
lock
std
sbb
pop
mov
sbb
mov
add
pop
cmp
push
std
add
xchg
lret
fcomi
inc
popf
fiadds
cli
cmpsb
push
js
push
sub
cmp
ret
out
dec
mov
push
jl
insl
jmp
xchg
aad
fwait
aaa
movsb
lcall
fisttps
lods
push
ficompl
or
sbb
jg
jle
in
or
sarl
jle
in
push
fldl
xchg
jp
push
repnz
pop
jns
mov
shrl
mov
cltd
mov
cmp
iret
lret
fs
sbb
mov
lds
cmp
sub
jmp
outsl
das
cmp
add
cld
inc
sbb
roll
daa
ror
cmp
push
mov
push
push
stc
fwait
rcrl
es
bound
aaa
adc
xchg
ficoms
sbb
cmp
inc
cmp
test
and
lods
push
xchg
pop
sbb
fs
adc
push
pop
cmp
ja
pop
mov
lock
dec
pop
sub
insl
mov
jmp
xchg
nop
push
xor
sti
jle
dec
lea
fidivrs
insl
jmp
xlat
test
adc
cmp
pop
sbb
loope
adcl
dec
mov
push
xchg
jmp
fisttpll
mov
adc
push
push
lea
lret
shlb
add
add
sub
int3
jne
ficoml
movsb
movsl
mov
test
dec
int
mov
dec
lods
xor
aas
sbb
sbb
xor
inc
jg
shll
xchg
cmp
mov
aaa
mov
cmpsl
sub
jbe
and
pop
lds
cmp
sub
xor
stc
cmp
fwait
sub
aad
outsl
scas
jecxz
and
mov
lods
ja
stos
push
cmpsl
mov
pusha
loope
mov
pop
xchg
jmp
bound
push
arpl
stc
sub
dec
loopne
cli
aad
stc
into
sbb
add
insb
outsb
pop
out
dec
sbb
push
into
mov
add
into
sahf
das
jl
repnz
shll
ret
mov
sbb
imul
loopne
xorl
pusha
and
aaa
xchg
inc
int3
and
fs
lahf
or
mov
cld
dec
and
add
pop
lds
popf
fnsave
push
mov
shrb
int
mov
push
jo
fmull
push
out
adc
pop
push
pop
dec
push
in
pop
frstor
movsb
lock
inc
mov
stos
flds
xor
and
push
push
sub
xchg
mov
and
push
out
rcrb
lea
inc
in
dec
mov
add
push
stos
lret
add
lds
lea
scas
jno
jmp
fisubrs
ja
mov
cmp
mov
faddl
out
lods
das
or
movsb
mov
ret
cs
ret
sbb
das
imul
jmp
pusha
ja
jl
arpl
xlat
je
sub
mov
mov
mov
jbe
outsb
sbb
fs
ja
pop
fcompl
sub
int
repz
outsl
pop
jle
push
add
loop
jmp
inc
pusha
and
or
outsl
loopne
add
or
inc
lret
adc
pop
jl
std
repnz
stos
fidivs
shlb
mov
jb
xchg
outsb
imul
in
sub
mov
jl
cmp
stc
sbb
jp
fistpl
mov
jg
push
jle
dec
notb
mov
sti
sub
push
cmpb
rol
mov
cltd
sub
cltd
lock
fnsave
dec
dec
pop
repz
add
fucomip
jne
mov
das
adcb
mov
out
pop
pop
jno
in
cld
jnp
xor
stos
pop
call
ss
sbb
sti
adc
shr
imul
int
or
and
inc
shll
and
cmp
sarb
push
mov
add
pop
repnz
cmpb
mov
test
and
fstps
cmpl
pop
rcrl
jae
xor
into
popf
dec
mov
test
add
rcpps
add
jno
xor
sub
insb
fsubrp
adc
xchg
in
mov
into
aam
out
add
mov
inc
xchg
test
cmpl
sub
lcall
stos
pop
imul
xrelease
xchg
mov
test
push
test
pop
xor
sub
xchg
jne
daa
jae
pushf
clc
cmc
xlat
inc
xchg
mov
xlat
inc
add
fnstcw
fildll
mov
out
subl
xor
push
mov
fldenv
xchg
shrb
movaps
mov
subl
addr16
mov
cmp
dec
or
jno
and
gs
sbb
mov
enter
iret
cltd
mov
addr16
or
ss
pushf
sbb
jmp
mov
jns
inc
lahf
rcrb
pop
jecxz
jo
xchg
sti
rolb
or
addb
mov
aas
xchg
aas
aad
pusha
shlb
dec
sbb
sbb
int3
into
shrb
out
and
push
mov
push
adc
aad
adc
outsb
push
arpl
lret
inc
jecxz
mov
lret
sbb
aam
and
fwait
insl
jmp
enter
and
cwtl
xchg
adc
packuswb
sub
or
arpl
inc
sbb
flds
pop
repz
jnp
mov
xor
test
repz
scas
repz
xchg
mov
jb
sbb
inc
mov
pop
jno
subb
mov
inc
fwait
inc
jmp
mov
insb
xchg
xchg
inc
xchg
fsub
or
fstps
into
xor
adc
pminsw
adc
adc
or
pop
mov
pop
popa
dec
inc
and
les
jmp
in
push
testb
xor
arpl
push
mov
xlat
mov
fwait
lahf
add
dec
mov
es
imul
out
out
adc
test
popf
nop
cmp
fst
mov
xor
sub
and
imul
les
pop
adc
push
dec
andl
push
cmpsb
add
xlat
and
pop
movsb
mov
in
jg
xchg
pusha
int
lock
mov
divb
fdivrs
xor
fnstcw
pop
and
ljmp
mov
imul
push
inc
orl
xchg
clc
adc
mov
popa
push
sbb
sti
cs
bound
fldcw
imul
jmpw
in
inc
push
or
xor
push
popf
in
mov
cwtl
mov
pop
repz
shll
xor
dec
mov
cmpsl
mov
xor
testl
aad
je
push
cmp
cmp
mov
ret
mov
mov
sti
dec
push
jge
mov
cmp
or
push
subl
movsb
rcrb
andb
push
adc
sarb
movsb
mov
cmpb
inc
roll
and
sti
push
lods
stc
test
fcom
xchg
xchg
mov
es
aam
adc
pusha
adc
bound
hlt
sub
sub
push
jne
insl
dec
and
inc
mov
xchg
mov
scas
aad
pop
and
lcall
popa
cmp
mov
out
fistpll
lret
notb
aad
pop
sbb
clc
sub
or
in
mov
pusha
cmc
loopne
insl
push
pop
cltd
dec
dec
sbb
xchg
dec
lret
xor
jo
or
jnp
add
loopne
mov
imul
mov
cmp
cmc
ret
add
aaa
bound
adc
testl
xchg
jo
nop
xchg
push
add
test
dec
jmp
ds
push
inc
js
pop
nop
adc
jnp
dec
inc
xchg
ret
js
push
xor
xchg
pop
adc
push
cmp
add
dec
xlat
shl
inc
pop
aaa
sub
lcall
adc
rclb
sub
sbb
pop
sbb
sbb
test
andl
xchg
int3
insl
pusha
pop
outsb
sub
sbb
inc
push
fcmovnu
icebp
fstps
popf
into
pushf
icebp
sub
push
or
aad
in
rcrl
or
jge
mov
sub
mov
sbb
cmc
mov
sub
push
and
jg
jp
push
inc
loope
or
sub
jecxz
xorl
xchg
lcall
adc
shlb
leave
out
orb
sbb
ds
xchg
mov
add
dec
divl
mov
cmp
mov
fildll
dec
dec
jbe
pop
enter
addr16
pop
xor
outsb
jb
loopne
repnz
and
mov
test
mov
cmp
sub
mov
or
cmpsb
mov
aas
jno
sub
int3
dec
pop
xor
lods
das
jp
in
daa
fcmovne
icebp
ljmp
ss
mov
inc
sbb
hlt
outsl
add
jge
cwtl
lret
faddl
loope
pushf
outsl
and
push
or
insb
pop
or
xchg
sarb
dec
std
das
mov
mov
sbb
or
nop
xchg
dec
aad
sbb
jmp
fdivrs
mov
outsl
jmp
arpl
cs
lret
rorl
jne
mov
mov
pop
popf
notl
cmp
mov
scas
xchg
or
pop
xchg
sbb
rcr
push
imul
arpl
push
xchg
pusha
arpl
popf
clc
ljmp
outsb
xor
lahf
addr16
pop
iret
mov
inc
cmp
add
arpl
jns
lea
jmp
bound
pushf
pop
fcompl
sub
loope
jb
and
movsl
sub
pop
cmp
jmp
fwait
stos
xchg
or
cmp
scas
lods
ss
sahf
xchg
inc
push
jno
pop
loopne
scas
cwtl
std
outsl
mov
mov
jnp
inc
sahf
mov
and
hlt
test
inc
sahf
inc
pop
add
rolb
add
les
in
outsl
sbb
pop
test
data16
enter
jle
mov
rorb
imul
fs
pop
popf
repnz
sbb
dec
imul
jg
and
pushf
pop
cmp
dec
or
loope
xchg
orb
jnp
sub
add
insl
pop
jmp
rcrb
repz
cmp
xchg
push
in
add
dec
sub
ret
scas
jne
fcmovnbe
in
stos
shl
sbb
sbb
fbstp
pop
pop
iret
shll
lods
insl
in
daa
sbb
bound
dec
sbb
aaa
test
mov
out
pop
test
daa
mov
push
clc
test
dec
in
sub
xor
out
cmp
popf
int3
pop
mov
and
cld
add
push
mov
sbb
js
adc
insb
test
addr16
in
push
out
xchg
xchg
fidivs
sub
pusha
cs
mov
ljmpw
xchg
jb
jge
cmp
int
aad
dec
add
add
arpl
sub
xor
movsb
lahf
push
sbb
dec
mov
dec
fisttpll
or
mov
xchg
test
inc
jl
jb
call
xor
sub
jnp
xor
in
fnstenv
pop
jbe
cmp
jmp
inc
imull
pop
mov
push
aas
pushf
repnz
cmp
jnp
adc
in
adc
insb
or
movsb
cmp
dec
lds
and
cld
rep
push
bound
out
cltd
fxch
mov
lahf
sub
mov
adc
or
fs
xorb
sbb
xchg
scas
xor
sub
push
mov
mov
sub
fnstsw
movsb
aaa
test
mov
faddl
or
or
xor
ss
jmp
mov
in
fucom
rcll
jle
xchg
or
mov
push
jno
xor
fisubs
cmp
aas
movsb
and
addr16
fdivs
sub
pop
jbe
push
inc
or
or
rclb
xorl
inc
push
mov
subb
push
cwtl
ljmp
adc
mov
dec
push
xchg
dec
icebp
scas
pop
leave
push
cwtl
lods
cmp
inc
outsl
out
aam
inc
xor
dec
mov
aad
cli
mov
in
pushf
out
cmp
rcrl
test
test
ss
sub
xor
pop
sahf
nop
push
fcmove
dec
cmp
xor
int3
or
in
add
movsl
push
cmp
xchg
outsb
mov
push
adc
dec
ret
jge
sub
fiaddl
mov
and
sti
adc
push
jns
hlt
jge
xchg
js
xor
movsb
xor
pop
outsb
mov
push
movsl
out
call
inc
sbb
dec
mov
xor
shr
test
pop
daa
in
rcll
mov
lods
idivb
stc
lcall
dec
pop
mov
mov
lods
add
fidivrl
shlb
repnz
dec
jecxz
imul
cmp
jb
mov
sahf
imul
popa
jnp
movsb
outsb
cli
and
sbb
mov
dec
xor
xchg
mov
and
ja
pop
mov
pushf
lahf
jno
jo
jge
lds
add
add
pop
aam
stos
in
mov
fwait
push
loop
push
xchg
test
jg
xor
fwait
adc
addr16
pop
sbbl
out
lcall
jae
or
push
and
mov
sub
mov
sbb
jg
ds
jb
mov
shlb
adc
pusha
mov
orl
adc
call
xchg
cmc
addl
sub
fmuls
xchg
fldenv
mov
pop
pusha
push
fcmovbe
mov
mov
xchg
jb
and
lods
pop
sbb
enter
dec
divl
xor
in
inc
test
push
fwait
xor
test
sub
cli
sub
jne
push
insb
cmpsb
xchg
mov
ret
mov
xor
lds
xchg
cmp
lahf
lret
or
mov
fcmove
insb
insl
fnstsw
in
mov
mulb
inc
xor
xchg
in
rsm
cmp
mov
popa
cmp
faddl
pusha
cmpxchg
aam
mov
gs
in
cmp
fsts
icebp
fwait
sub
jmp
cmp
rolb
push
mov
fistl
test
cs
sub
dec
mov
xor
sti
and
out
cmpsl
lods
add
sub
fstl
lods
jecxz
inc
repz
les
xchg
jmp
mov
imul
dec
frstor
sbb
sbb
lcall
mov
nopl
fcoms
add
sub
xor
mov
aaa
test
and
and
add
mov
and
gs
jae
sbb
mov
clc
ljmp
sub
dec
mov
das
pop
add
sbb
cmpsw
getsec
aaa
jge
mov
shlb
pop
sub
mov
mov
fsubs
xor
mov
out
adc
pop
out
loopne
adc
xor
mov
jge
mov
inc
sbb
adc
or
mov
push
pop
repz
in
test
outsl
je
scas
adc
mov
adc
das
jle
stc
shll
test
outsb
sbb
je
lds
sub
cmp
js
test
sbb
sub
sahf
push
pop
sbb
cmp
push
mov
aaa
mov
sbb
lahf
or
loop
outsl
fcomip
xchg
cs
cmp
das
fiadds
call
lds
les
pop
ljmp
addr16
je
xor
and
aaa
jle
shlb
pop
and
jp
insb
jmp
cmp
lcall
sbb
dec
pushf
inc
push
sub
lahf
cmp
in
mov
inc
aaa
lcall
xor
out
in
mov
adc
and
xchg
fwait
mov
jge
inc
lahf
and
cmp
adc
xchg
mov
push
mov
mov
mov
cmpsb
jge
stc
inc
out
mov
scas
and
mov
lock
shll
and
or
dec
stos
pop
pop
in
inc
or
cmpsb
lea
popa
addr16
in
cmp
lea
ss
add
add
sub
add
pusha
scas
ds
mov
scas
mov
or
mov
xorb
test
cs
and
push
mov
outsl
and
scas
pop
test
mov
and
lahf
pusha
xor
je
ret
jmp
pop
pop
and
cmp
inc
xchg
mov
sbb
mov
mov
push
push
push
cmpsb
xlat
jbe
les
push
leave
mov
mov
pop
cwtl
jl
adc
pop
pushf
shll
and
xchg
inc
pop
inc
sbb
dec
xchg
mov
sbb
test
ret
mov
icebp
cmpsl
and
jl
mov
add
mov
sar
stos
jle
cli
sbb
pop
or
pop
test
das
pop
xchg
mov
mov
cwtl
shrl
adc
cmp
rcll
pop
jle
mov
in
or
mov
pop
xlat
sti
outsb
outsb
add
loope
stos
movsl
flds
lret
cwtl
sub
sub
out
push
stos
jg
jge
push
out
loop
movsb
push
lods
mov
cli
mov
ds
insb
mov
mov
or
je
or
lret
mov
sub
loop
push
scas
mov
out
mov
xor
invd
into
or
loope
adc
out
nop
stos
mov
adc
ja
jmp
or
dec
sub
fsubs
add
out
xor
and
sarl
xchg
pop
mov
sub
pushf
and
jns
inc
test
hlt
lret
cmpsb
and
jb
lods
adc
mov
xchg
mov
lods
mov
repnz
push
add
fsubs
arpl
lret
ror
cmp
xchg
insb
mov
sub
mov
stos
mov
cmp
lds
insb
push
push
pop
push
ljmp
pop
push
mov
sub
lock
daa
loope
cmp
mov
mov
sub
pshufw
stc
jno
add
inc
test
xchg
in
addb
inc
push
xor
lret
aas
aad
xor
xchg
fbstp
mov
or
and
addb
xchg
or
dec
xchg
or
add
adc
sbb
push
ficoms
mov
sbb
xor
add
lret
inc
adc
cmpsb
push
bts
sub
out
call
loop
lret
push
mov
fidivl
push
push
push
mov
int3
fnstcw
das
lods
es
stos
dec
repnz
in
mov
or
xchg
dec
arpl
jl
aad
fldenv
mov
sbb
jo
call
scas
movsb
mov
movsb
mov
push
pop
mov
and
in
inc
jae
sar
lods
dec
cwtl
mov
sub
jns
mov
imul
jge
out
daa
add
jmp
ja
addb
jp
aad
int3
dec
dec
adc
pop
pushf
sti
fistl
add
push
mov
ja
and
lcall
cmpl
adc
stc
push
scas
sub
movsl
or
addl
imul
pushf
pop
sahf
outsl
and
inc
inc
das
sbb
push
inc
jno
xor
mov
ss
cmp
fwait
cmp
mov
add
mov
mov
adc
adc
jl
mov
test
mov
das
push
and
dec
xchg
roll
stos
jecxz
jl
lahf
mov
repnz
and
clc
shrl
lods
mov
push
cmpsl
ss
mov
cmpsb
and
and
nop
add
fdivs
je
push
mov
lock
mov
ds
inc
adc
or
cmp
push
inc
jmp
jl
jl
jecxz
inc
mov
or
dec
repz
adc
shrl
and
xor
pop
sub
lea
inc
in
push
icebp
dec
adc
push
aaa
neg
cs
push
popf
lahf
aas
push
and
lds
jg
adc
push
mov
jbe
scas
inc
jg,pn
gs
adc
xchg
movsl
test
push
dec
data16
int3
inc
sahf
jge
ds
jne
xlat
mov
stc
or
dec
xchg
iret
gs
jne
mov
jae
call
jnp
jo
sub
sub
adc
push
pushf
in
mov
sbb
lods
push
mov
enter
int
jae
push
xor
mov
jne
std
pop
cli
add
stos
pusha
sbb
mov
xor
jno
lea
pusha
lea
xchg
xchg
sti
in
mov
fsubl
push
xchg
xor
les
int
dec
pop
lahf
test
ds
out
dec
fwait
dec
orb
xchg
mov
adc
in
xlat
mov
out
xchg
aaa
xor
loop
or
mov
jge
ja
cmp
adc
ljmp
pop
sub
push
xor
xchg
or
pusha
hlt
mov
and
or
mov
int3
sbbl
lret
clc
pop
shll
sbb
mov
sbb
pop
sbb
add
mov
std
adc
or
xor
sahf
cld
outsb
add
push
dec
xor
int3
sarl
add
sti
cmp
push
and
and
xchg
jns
das
stc
push
xor
sub
mov
mov
inc
pop
hlt
inc
mov
lock
add
test
fbstp
adc
push
push
nop
or
jb
jne
push
cli
mov
cmp
pop
rcr
les
push
aad
mov
dec
and
add
insl
add
ret
gs
pop
pop
jg
sub
shrl
mov
sub
repz
inc
rcrb
fucomi
out
fisubs
iret
loop
xor
xchg
das
sbbl
std
xchg
sbb
psubsb
xchg
jle
xchg
pop
dec
xchg
cmpl
xor
mov
pop
and
mov
add
fdiv
pop
mov
pop
mov
in
jae
mov
inc
push
pop
cmp
add
mov
loop
iret
sbb
and
icebp
jp
adcb
aaa
jb
inc
and
outsb
jae
jge
mov
cmp
mov
pushf
jge
dec
addl
mov
and
into
enter
and
cmp
and
push
jns
add
adc
xor
movsl
fnstsw
mov
aaa
mov
pop
sarl
sahf
jnp
xchg
add
cmp
les
outsl
dec
pop
dec
arpl
aaa
int3
mov
pop
ds
mov
rcrb
addb
rcrb
fldt
loope
enter
into
hlt
xor
sti
add
pop
xchg
sahf
fwait
pop
lock
inc
push
inc
dec
call
loop
into
inc
mov
jnp
adc
hlt
out
xorl
stc
push
mov
fdiv
pop
mov
jo
int3
into
xchg
dec
and
leave
add
push
mov
out
xor
fsub
je
push
dec
in
mov
into
inc
sahf
cmp
inc
sbb
adcb
inc
or
or
mov
mov
sub
jge
cmp
xchg
shlb
sti
in
scas
mov
pop
add
push
add
cs
out
add
mov
ja
mov
repz
pop
cmp
mov
xchg
fcompl
int3
out
in
inc
xchg
in
sbb
lea
fnstsw
sbb
add
and
out
pop
fmuls
lds
mov
push
push
inc
lods
pop
dec
add
mov
mov
leave
leave
jp
dec
xchg
mov
mov
adc
pop
push
xlat
fsubl
insb
out
jecxz
inc
testb
data16
xchg
add
xor
mov
sub
push
and
cmp
loop
sbb
fists
call
or
lret
fsub
enter
mov
mov
xor
sub
test
jns,pn
mov
and
pop
ret
loope
das
mov
cmc
pop
sub
xor
sbb
data16
test
push
out
sbb
xchg
jns
int
aas
jmp
cmp
fs
add
push
into
sti
xor
aad
lret
stos
mov
scas
push
xor
mov
add
xor
cmp
fnsave
push
mov
inc
bound
clc
jns
dec
add
cmp
decl
fcom
pop
loope
pop
insl
mov
sub
je
dec
js
mov
scas
fidivl
sahf
imul
and
sbb
xlat
push
cmpsb
insl
pop
in
pop
shll
loope
les
inc
inc
into
stos
lahf
mov
cmp
cld
sub
hlt
or
into
ficoml
mov
mov
sub
adc
lret
add
push
mov
lahf
int
sub
push
aas
mov
das
mov
jo
cmpsb
xor
mov
fimuls
in
inc
iret
insl
push
unpcklps
dec
repnz
cmpsl
dec
dec
adcl
jp
mov
push
shlb
fcmovnbe
dec
roll
pop
mov
stos
test
mov
xor
jbe
outsl
dec
push
mov
rcr
sub
ds
cmp
dec
ss
jae
lds
std
andl
cmp
add
xchg
fisttps
stos
test
mov
inc
cltd
cmp
mov
addr16
enter
sbb
xchg
cmp
outsb
out
push
lods
call
push
icebp
lcall
and
test
add
xchg
pop
lods
outsl
jnp
or
xor
enter
sub
out
xor
lock
out
cmp
push
popf
iret
js
and
adc
aas
aam
fmuls
sarb
jl
mov
sbb
xchg
jmp
push
cmpsb
lods
or
cmpsl
adc
xchg
aas
addr16
mov
dec
push
roll
sbb
push
dec
lods
xor
inc
je
jns
leave
push
xchg
and
hlt
clc
pop
stc
xor
sbb
ljmp
into
sbb
mov
pop
ja
push
push
adc
lds
repnz
cmp
inc
or
add
mov
inc
xor
add
xchg
mov
sbb
mov
movsl
sub
repz
dec
or
sti
movsb
push
jge
inc
out
sbb
xchg
cmpsl
jae
jp
mov
sbb
aad
shl
fists
bound
adc
or
aam
add
lcall
xor
aad
add
cmp
fs
mov
daa
mov
sbb
incb
call
pushf
es
and
dec
pop
les
repnz
or
dec
xchg
outsb
jecxz
fnstcw
dec
insb
inc
sub
cmp
shll
out
push
pop
enter
add
mov
jle
mov
outsb
xor
pop
scas
bound
ret
sub
dec
jmp
ficomps
stos
xor
fsubrl
mov
jl
jmp
leave
mov
push
jl
mov
mov
add
sahf
add
repnz
xchg
mov
in
pop
cwtl
push
hlt
and
lcall
mov
push
xchg
inc
mov
lock
sub
jp
inc
stos
lock
popa
and
jo
movsl
outsb
sbb
repnz
lods
cmpl
andb
mov
shr
je
mov
jnp
cwtl
mov
cmp
mov
fdivs
xchg
xchg
dec
xchg
icebp
xchg
push
adc
test
lret
aaa
psubusw
ror
cmp
dec
mov
les
or
mov
push
dec
in
jl
inc
xchg
call
mov
cmc
xor
adc
inc
mov
cmc
fistl
xor
orl
fsubl
and
inc
dec
fdivr
dec
lods
stc
rcrl
ja
fsubs
sbb
sub
stc
mov
mov
test
test
add
adc
inc
andb
iret
xchg
mov
sbb
cmp
imul
cltd
clc
arpl
xchg
fldenv
popf
pusha
adc
movsb
nop
push
fucompp
cmpb
fimull
inc
or
leave
shr
mov
pop
cmp
sbb
jge
ret
test
mov
push
dec
ja
xor
cmpsb
inc
mov
xchg
mov
and
jbe
cmp
in
dec
dec
cmpsb
lock
dec
and
adc
stc
xchg
push
inc
insl
nop
xor
outsl
ret
cmp
icebp
nop
lahf
inc
pop
pop
aam
xchg
out
nop
shrl
adc
mov
mov
push
aam
pop
jno
mov
cmp
lds
mov
out
ret
pop
push
mov
add
es
add
cmpsb
outsb
fisttpll
xchg
and
adcb
sbb
fs
jg
adc
movsb
pop
addl
ror
out
dec
dec
fcompl
mov
mov
popa
adc
mov
mov
adc
rcl
sub
ret
dec
in
or
out
js
outsl
insb
pop
sbb
add
fcmove
cmpsb
cmpl
or
mov
jb
sub
cmp
dec
insb
mov
or
sarl
pop
add
fidivrl
inc
inc
in
sti
mov
lret
ficompl
addr16
xchg
fdivrs
cmp
dec
xchg
inc
test
or
int3
mov
xchg
pop
inc
inc
fsubs
rclb
mov
adc
mov
mov
fmul
push
jle
lea
and
and
popf
fs
imul
ljmp
pushf
in
cmc
mov
and
push
inc
popf
adc
jb
pop
sti
cmp
jbe
mov
jno
pushf
repnz
enter
lea
lahf
aas
cmp
test
sub
jge
imul
inc
sub
je
ret
out
das
out
mov
mov
aad
sbb
int3
mov
cltd
test
ja
xor
daa
push
or
adc
push
add
sti
cmp
jb
cmp
aas
dec
movsb
cmp
stos
sahf
mov
inc
rcrb
fpatan
out
jp
jno
iret
fidivrs
loope
and
bound
cmpl
cmp
insl
inc
pop
ja
nop
rcrb
je
addr16
ret
fcmovnb
dec
mov
fs
rcrl
pop
pop
fsubrs
pop
xorl
out
les
fwait
lret
mov
jmp
sti
mov
lock
jmp
xor
mov
push
xlat
in
lahf
into
dec
test
jge
jg
cmp
mov
mov
pop
inc
or
sub
loope
andnps
pop
cltd
fdivs
cltd
fsubrs
repz
sti
cmpsl
sub
xchg
repnz
dec
xchg
aaa
mov
xchg
outsb
aaa
gs
test
call
cmpsl
inc
cmp
sbb
dec
cmp
or
xchg
push
data16
mov
pop
daa
dec
mov
dec
and
mov
rol
sbb
mov
rcll
push
repnz
ret
das
ds
push
aas
loopne
pushf
sub
ret
fs
rclb
pop
mov
mov
or
nop
mov
out
imul
cltd
mov
ja
out
hlt
push
xor
shll
sub
adcb
ja
test
push
out
scas
fs
cli
test
sub
popa
push
xor
jl
inc
rorw
lock
inc
inc
out
leave
testl
cmpsb
push
pop
inc
loop
fsubrl
mov
push
stos
out
je
mov
in
inc
sbb
pop
andl
pop
daa
pop
cmp
ss
mov
pushf
push
adc
gs
stc
adc
sub
mov
or
inc
in
shlb
cmpsb
xchg
mov
and
or
dec
xlat
call
push
cltd
into
push
push
imul
rcr
jns
pop
xchg
jl
cmp
cmc
sub
jg
push
test
mov
add
lahf
lahf
loop
lds
sbb
pushf
das
lods
lods
push
imul
sub
clc
push
push
loopne
mov
popa
divb
cwtl
mov
push
repz
addb
lret
add
shrb
xchg
and
xchg
ret
bound
xchg
mov
fiaddl
dec
inc
add
pop
xchg
push
mov
pusha
stos
add
xor
imul
inc
loope
cmpl
xor
lcall
jno
lock
adc
scas
add
movl
sub
mov
out
dec
adc
or
mov
je
lret
push
inc
nop
and
imul
ret
sub
movsl
std
fcmovnbe
movsl
push
cwtl
popa
enter
movsl
in
jbe
fs
xchg
arpl
mov
sub
jg
mov
ret
push
jo
fldl
fistpl
enter
movsb
fnstenv
popf
jmp
andb
dec
data16
das
mov
add
sahf
addr16
leave
push
push
push
in
mov
insl
jno
repnz
add
imul
in
xor
fistps
add
cmp
pop
sbb
scas
imul
push
sbb
mov
mov
lds
and
lea
insl
rcr
ljmp
cmpsb
rcll
xor
push
jo
in
and
sbb
cmpsl
mov
rol
sub
cs
shl
movsb
add
mov
jae
push
ficoml
pop
and
mov
or
shlb
and
mov
push
adc
and
aam
test
inc
outsb
and
int
xor
dec
sahf
pop
adc
icebp
ret
loop
lret
xchg
jo
nop
movsb
into
mov
dec
cmpsb
imul
subl
pop
inc
pusha
pop
or
pop
es
lods
cmp
sbb
test
cwtl
aas
adc
arpl
repnz
mov
dec
cmp
stos
arpl
mov
adc
mov
out
ja
cmovbe
test
pushaw
push
xchg
jno
mov
scas
push
pop
push
xchg
xor
pop
jg
xor
in
bnd
divl
mull
mov
pusha
add
pop
jae
cmp
movsb
sub
or
movsb
add
sti
adcl
cli
sub
sub
cmp
imul
scas
mov
jg
popf
mov
insb
jae
stos
pop
dec
cs
mov
xchg
xchg
repz
loope
in
jecxz
jmp
or
sbb
and
jnp
into
or
pop
xor
sub
add
push
jge
mov
inc
dec
or
loopne
lret
icebp
xor
push
jmp
sub
lcall
push
sub
sbb
push
lahf
ss
jecxz
gs
push
pop
in
cmpb
adc
cmp
adc
icebp
lea
iret
xor
push
jb
jo
mov
stos
cmpsb
inc
pusha
push
xchg
jno
cs
scas
push
xlat
call
xor
mov
cmp
sub
sbb
adc
aaa
jbe
rorb
mov
pusha
dec
pop
push
std
jns
cmp
and
push
jl
loope
sbb
orb
dec
jns
sub
mov
adc
daa
sbb
jge
addl
popf
or
and
jge
inc
push
mov
mov
inc
xlat
fnstcw
inc
pop
repz
dec
out
les
jp
test
and
add
push
lahf
ss
push
sbb
pop
pop
jge
enterw
mov
mov
bound
push
cmp
out
and
mov
sti
dec
aam
adc
das
push
test
dec
pop
sbb
lock
mov
imul
pop
scas
loop
insl
xchg
in
stos
arpl
dec
pop
mov
jne
add
cmp
dec
cmp
int
dec
in
jmp
jmp
movsb
push
arpl
cmp
xor
dec
imul
imul
jp
push
test
lods
push
sahf
mov
rorb
sbb
shl
jg
fwait
outsl
sub
jne
cmpsb
cmp
rolb
or
ret
scas
lock
fisubl
repz
cmc
cmp
and
imul
cltd
and
movsb
sbb
lds
xchg
dec
cs
pop
push
mov
adc
int3
in
push
test
loop
ds
andl
test
movsl
mov
and
or
or
test
jg
fcmovne
inc
xchg
jb
loop
lret
inc
test
or
mov
xchg
movsb
inc
test
popa
pop
xchg
mov
sub
push
adc
cmc
push
inc
orl
pushf
lret
repz
adc
inc
js
test
push
data16
fistl
jae
stc
adc
pop
push
dec
ljmp
push
hlt
rcll
jecxz
pop
xor
pop
xor
cmp
xor
or
jb
cmp
mov
jge
dec
mov
sahf
cli
jl
iret
mov
xchg
cmp
cld
xchg
roll
lea
mov
mov
xor
adc
fwait
xlat
sahf
pusha
jle
ljmp
inc
or
inc
out
sub
pop
sbb
jno
out
stos
mov
call
nop
pop
mov
aaa
cs
inc
stos
sub
pop
cmp
push
or
push
mov
int3
mov
gs
mov
cmpsb
mov
xor
pop
rcrl
pop
mov
mov
xchg
xor
cli
mov
iret
imul
push
sub
rcrl
push
xor
hlt
push
adc
jne
xor
arpl
shlb
jl
push
pop
cmpsl
rorb
push
adc
and
ljmp
sbbl
loope
mov
cmp
or
test
xchg
mov
sbb
jge
inc
loopne
dec
jmp
push
andl
lret
xchg
lcall
nop
ja
sbbb
leave
pop
inc
sub
mov
xchg
xchg
popf
push
pop
cltd
cmp
mov
int3
es
xor
mov
imul
add
lock
mov
ss
stos
in
or
pop
popa
mov
sub
clc
bound
stos
pop
sbb
test
xor
xor
add
js
sbb
mov
imul
adc
ficompl
nop
repz
dec
loopne
xlat
add
popf
insl
mov
pop
xor
jmp
mov
insb
xchg
int
leave
jecxz
push
or
mov
movsl
xchg
cmp
cmp
cmpsb
pop
cmc
outsb
mov
iret
std
out
jmp
sarl
mov
mov
dec
or
inc
sub
pop
cmp
pop
imul
xchg
cmp
cmc
fstps
shlb
clc
inc
sbb
mov
add
xchg
in
sub
mov
xor
shll
add
scas
mov
out
enter
pop
pop
sub
cmp
sub
dec
inc
pop
mov
cmp
xchg
or
and
ljmp
cli
stos
mov
stos
add
cltd
cmpsl
lcall
in
lds
cmc
cld
jb
insl
xchg
xor
cmp
jg
popf
sub
lcall
enter
outsl
idivb
push
push
call
xchg
lcall
stc
mov
lock
pop
push
mov
sub
pop
and
outsl
popf
int
pop
cli
adc
jb
mov
xchg
movsb
stc
sbb
shll
imul
push
or
adc
sbbl
jae
clc
ret
pop
stos
dec
notb
and
cmpsb
push
lock
mov
faddl
fsubrl
sbb
insl
dec
mov
and
push
cld
int3
add
mov
sub
cmp
test
inc
in
pop
out
add
pop
cltd
cmp
adc
fcmovbe
add
sub
jne
idivb
lea
sub
mov
jnp
add
testb
icebp
shrl
add
das
cmpsl
in
aas
jb
mov
andb
clc
lea
cmp
in
push
xchg
out
frstor
stc
outsb
insb
testb
push
shll
xchg
lcall
add
data16
adc
mov
out
mov
jmp
stos
pushf
pop
lods
enter
lock
cli
xor
xchg
mov
jns
jbe
scas
adc
cld
shlb
lods
int
jbe
or
cmp
lds
push
inc
mov
ret
movsl
sub
rorb
movsl
xchg
mov
push
mov
pop
push
rolb
mov
mov
pop
sub
push
lcall
fistps
sub
ds
and
sub
lret
scas
and
mov
jo
adc
add
or
sbb
lods
mov
lcall
xor
mov
inc
roll
inc
fwait
adc
mov
jmp
pop
dec
outsl
jl
xor
call
loopne
popa
sbb
fsubrl
outsl
pusha
sub
cs
pop
cmpsl
cld
stc
loop
repz
jae
pop
inc
ss
xor
jno
std
ljmp
out
clc
or
pop
movsb
push
out
mov
push
push
cmpsb
adc
or
stos
mov
xchg
or
imull
mov
lret
insb
xchg
std
mov
insb
sti
mov
add
xor
adc
mov
mov
xor
mov
adc
aas
sub
inc
mov
or
pop
pop
pop
rcrb
pop
inc
sbb
push
cli
ljmp
in
xor
mov
aas
loopne
jno,pn
aad
mov
inc
scas
mov
sbb
cmpsb
insl
lods
sub
js
inc
sbb
cmp
and
outsl
or
cwtl
cmp
push
cld
mov
movsb
in
andb
inc
pop
idiv
push
mov
mov
adc
dec
shl
loop
xchg
js
stos
mov
mov
outsb
outsl
mov
scas
test
dec
cmpsb
rcrl
xchg
and
or
jo
dec
inc
lods
jb
stc
orl
std
out
repnz
or
mov
mov
xchg
xor
push
rorl
xlat
sub
mov
ret
xor
stos
push
adc
scas
push
jge
pop
incb
scas
xchg
jb
jecxz
dec
sub
fcomps
sub
leave
dec
xchg
add
roll
push
outsl
cmp
inc
mov
ficoms
fadd
lock
xchg
mov
ds
loopne
je
jno
cmc
jmp
pop
int3
cli
xchg
mov
xlat
jae
push
dec
lods
sub
cmp
test
mov
faddl
adc
js
fldenv
push
adc
push
add
jmp
sbb
repnz
fisttps
lods
shlb
xchg
movsb
pop
pop
outsl
leave
bound
ficompl
and
in
mov
cmp
stos
sub
mov
sub
aas
cmc
insl
jmp
arpl
mov
jo
mov
stos
inc
xor
xchg
xor
inc
ja
and
aad
push
sub
cmp
shrb
mov
gs
loopne
push
push
inc
cwtl
out
es
lret
lret
dec
repnz
xchg
cmp
mov
push
imul
mov
xor
adc
inc
dec
ljmp
pop
sbb
test
and
test
sub
imul
jb
iret
aam
pushf
add
mov
jecxz
push
xchg
dec
popa
xchg
sub
sub
push
or
pop
js
jl
push
cwtl
push
lock
adc
sub
cli
movsl
loop
jb
xor
sbb
sti
pop
test
ljmp
lods
jo
pop
push
aam
fcmovnbe
xchg
movsl
je
and
add
pop
mull
bound
arpl
std
xor
jnp
daa
add
mov
jne
test
sub
adc
stc
mov
jge
or
xor
fidivrs
push
sahf
mov
add
pop
sub
mov
and
add
cmc
xchg
mov
je
andb
pop
ds
enter
push
push
inc
mov
popf
fs
stos
cmpsl
aad
rorb
clc
mov
and
nop
dec
mov
imulb
mov
pop
out
mov
popa
fistps
cmp
icebp
and
imul
xor
and
mov
cmp
in
push
scas
push
xchg
sub
sbb
mov
push
push
gs
cmpsb
test
add
pop
push
lea
pop
jnp
and
pop
clc
push
push
nop
in
popf
mov
lock
xchg
xchg
insb
rcrl
dec
mulb
bnd
lret
mov
inc
or
pop
mov
sub
push
jae
xchg
mov
jb
ja
lret
ss
xchg
out
mov
sub
daa
mov
dec
cli
cs
in
or
movsb
cmp
je
cmp
push
ja
cmpsl
adc
test
imul
pop
xchg
xchg
pop
fisubs
sbbl
loopne
inc
mov
dec
push
outsb
int
int3
movsb
imul
rcll
rcr
out
sub
xchg
dec
mov
fs
jge
and
sub
scas
aam
stos
mov
mov
adc
insl
push
or
sbb
jp
insb
loope
fldcw
mov
in
mov
hlt
outsb
dec
daa
sub
int
loop
jb
lds
dec
rcrb
pop
cmc
cwtl
pushf
lahf
adc
mov
lock
push
inc
and
jmp
loope
mov
sahf
jnp
das
xchg
js
xchg
das
and
inc
add
pop
inc
mulb
out
mov
rcll
mov
movd
mov
mov
pop
sbb
xchg
xor
cltd
stc
mov
mov
enter
fucomi
pop
shll
adc
mov
sahf
push
sub
add
xor
fisttpl
mov
or
add
xlat
test
jmp
mov
adc
or
sub
mov
xlat
pop
xor
xchg
movsb
fwait
xchg
inc
imull
xor
mov
mov
lock
sub
nop
inc
lds
add
add
imul
mov
imul
popa
or
popf
mov
sbb
push
jo
add
sbb
push
lret
std
fcomps
idivb
ret
sub
popf
cmp
out
push
xor
add
in
xorl
xlat
or
loope
mov
mov
aam
repnz
repnz
jb
inc
pop
sub
pusha
bswap
sub
lahf
dec
mov
push
push
cld
mov
push
push
push
adc
pushf
xor
xor
adc
movsl
out
add
adc
jle
jo
lcall
cmp
jp
insb
jl
clc
loope
js
push
rol
iret
stos
aam
inc
pusha
insb
adc
push
push
xchg
dec
outsb
fcmovu
popf
mov
shrb
and
bound
jge
add
imul
das
sub
mov
je
pop
loopne
adcl
xchg
jbe
stos
mov
jge
insl
and
fdivrs
dec
loope
and
jle
push
adc
imul
pop
incl
int
lock
paddusb
mov
mov
jno
sub
push
jb
xchg
sbb
out
scas
lods
rcrb
insl
xchg
jne
add
mov
lea
inc
or
pop
ja
sahf
add
lds
test
pushl
add
adc
enter
dec
js
mov
fbld
cmp
pop
adc
and
or
sbb
nop
test
bound
lcall
std
std
xor
scas
jg
push
sbb
mov
add
mov
insb
lahf
xor
push
pop
movsb
pop
xlat
and
inc
cmp
stos
clc
test
mov
xor
lret
xor
inc
sti
adc
jle
arpl
jl
mov
inc
inc
add
xchg
loope
enter
jae
push
jno
push
pop
mov
add
rcrb
mov
xchg
mov
inc
aad
loop
jbe
pop
cmpsb
stos
jg
jo
push
mov
mov
cmp
sarb
lea
mov
out
insb
popf
pop
push
sbb
sbb
mov
popa
scas
mov
gs
adcb
shrl
test
stos
out
push
jmp
pop
mov
pop
mov
movsl
aam
dec
sbb
out
cs
out
inc
int
jp
insl
les
stos
faddp
test
out
jp
mov
scas
outsb
repz
inc
lods
je
push
cmpsl
inc
xor
or
xchg
fwait
int
inc
in
pop
cmp
fmuls
jbe
aad
sub
aaa
stc
sub
mov
add
xlat
or
pop
arpl
sub
jb
inc
add
pop
in
lods
push
fnstsw
jmp
data16
push
js
fwait
sub
movsl
push
lock
sbb
negl
mov
cmp
xor
xlat
imul
pop
int3
sbb
mov
mov
mov
jno
dec
sub
pop
jo
inc
add
push
cli
out
mov
inc
mov
mov
push
fidivs
scas
add
cmc
jb
lret
or
or
in
cmp
adc
jb
insb
dec
jne
push
push
lds
je
sar
adc
inc
xchg
out
fsubl
cmp
jp
jnp
mov
push
clc
fadds
divb
ficoms
mov
mov
sub
push
sbbb
out
and
xor
pop
adc
lret
sub
dec
in
int3
stos
add
sub
mov
repnz
das
xchg
cs
xorl
andl
xor
xchg
in
push
and
lcall
pop
jl
popa
add
leave
xchg
push
add
mov
outsb
jae
pushf
outsb
fwait
test
inc
sbb
inc
popa
mov
int3
push
pop
sub
test
pop
adc
enter
mov
insb
adc
mov
movsl
jg
xor
pop
pushf
push
jmp
out
shl
cli
lds
push
adc
add
mov
hlt
arpl
mov
push
or
mov
pop
mov
adc
mov
sub
fwait
ret
mov
push
xor
mov
xchg
leave
pop
fistps
push
rcr
lret
jle
xor
jne
js
jns
push
outsb
jo
push
push
mov
dec
lahf
cmp
ret
push
pop
js
mov
mov
cltd
lds
out
inc
and
addr16
push
sub
jp
je
sub
incb
out
inc
pop
mov
dec
xchg
adcb
pop
jge
icebp
arpl
clc
icebp
mov
push
push
ja
or
pop
out
aam
xor
sti
lock
je
popf
push
jecxz
jae
insb
or
sahf
xor
mov
loopne
in
push
pop
mov
mov
sbb
and
test
mov
mov
mov
push
sbb
xchg
xchg
mov
cmp
push
mov
push
add
roll
inc
jmp
std
inc
out
stos
ja
mov
hlt
loopne
mov
adc
orb
push
dec
sub
mov
int3
inc
les
inc
fnstsw
mov
push
insl
div
jne
and
cmpsl
in
test
push
xchg
ret
aad
hlt
jl
jge
sbb
pop
leave
push
xchg
cmp
push
ljmp
jmp
rcrb
shlb
dec
lods
mov
mov
cs
mov
ss
pop
mov
mov
push
imul
popf
insl
or
imul
insb
aas
adc
xorb
shl
mov
push
pusha
add
lret
cmpsl
in
enter
data16
jb
push
fsubr
xchg
add
ljmp
push
roll
or
sub
mov
cmp
imull
cmc
jle
add
repz
push
or
sbb
lret
xor
mul
push
xor
leave
add
mov
cld
sbb
test
bound
jb
sbb
in
repz
mov
xor
mov
jge
pop
adc
xor
pop
mov
ret
xchg
filds
push
sbb
adc
xor
mov
js
dec
cmp
addr16
mov
xchg
mov
insl
inc
cld
jbe
sub
mov
hlt
fnsave
push
add
fidivrl
sub
in
adc
lcall
imul
mov
or
adc
pop
cmc
testl
dec
sbb
push
mov
cmpsl
insb
outsb
int3
mov
inc
mov
cltd
xchg
jl
or
mov
xor
scas
mov
movsb
mov
loopne
lock
or
jb
xchg
rorb
hlt
sarb
mov
adc
sahf
cmpsl
popa
pop
and
hlt
push
hlt
mov
ss
sti
aam
movl
ss
or
repz
push
jg
or
cmp
push
js
jns
movsb
je
pop
dec
push
int3
int
pop
and
pop
pop
xor
out
pop
dec
icebp
push
jmp
outsl
shll
sub
jns
adc
adc
std
jne
sbb
dec
xchg
mov
inc
js
movntps
lods
ds
mov
inc
mov
das
push
jp
mov
xchg
repz
ret
jne
sahf
adc
std
push
xor
mov
inc
push
or
mov
ret
push
leave
fidivrs
out
les
push
es
push
push
add
mov
push
push
adcb
movsb
xchg
or
insl
pop
jns
frstor
clc
mov
jle
or
sbb
sbb
test
xlat
mov
xchg
or
adc
add
mov
out
fcoml
mov
mov
scas
and
inc
dec
mov
inc
adc
sub
ds
or
sbb
jmp
fcmovne
mov
orl
mov
mov
jmp
pop
ret
cmp
or
arpl
cmpsb
mov
in
jl
mov
pop
imulb
cmp
adc
dec
shl
mov
pop
test
test
mov
mov
add
pop
lahf
inc
mov
sbb
sbb
jmp
inc
jae
or
xor
fcmovnb
push
leave
fadds
outsb
jg
imul
sub
push
popf
inc
and
push
mov
test
fstps
jp
ret
mov
mov
out
bound
add
push
sbb
clc
pop
xor
pop
sbb
pop
mov
adc
std
and
mov
sbb
test
ds
nop
jecxz
and
dec
popf
mov
or
pop
dec
insl
xchg
push
bound
loopne
jle
test
jp
mov
adc
jbe
push
stos
mov
mov
mov
push
in
sarb
add
hlt
push
out
and
mov
sub
mov
cmpsl
mov
mov
jmp
jno
pushf
js
and
mov
pop
pop
jns
ret
lds
popf
in
icebp
xor
jmp
and
les
add
or
push
cmp
je
loopne
inc
lret
dec
mov
insl
or
cmp
aas
push
push
andb
inc
jecxz
jg
comiss
add
mov
lods
xor
pusha
testl
test
pop
mov
out
add
pop
pop
and
push
insb
adc
fcmovb
hlt
xor
xchg
insb
inc
mov
sbb
or
mov
popf
jle
sub
fucomi
mov
mov
ds
stc
stos
out
mov
sahf
fst
cwtl
mov
ret
inc
or
pushf
mov
push
popa
mov
enter
push
je
xor
dec
xor
enter
jns
inc
shll
pop
push
xchg
sbb
mov
jp
and
and
and
add
add
add
jns
lcall
dec
mov
dec
mov
lds
mov
cmc
addr16
jmp
adc
clc
xor
sbbb
pop
cmp
das
push
test
lock
enter
mov
sahf
pop
dec
addr16
loope
mov
add
out
pushl
dec
cld
or
aad
or
or
pop
incl
clc
gs
and
jbe
dec
or
xor
lds
dec
cmp
mov
call
shrb
subl
jmp
jp
inc
ljmp
xchg
lret
lea
xchg
cmpsb
outsb
xor
scas
ja
push
sub
nop
mov
inc
push
jle
push
push
cmpl
mov
sbb
dec
add
lcall
sub
and
xchg
jmp
xor
test
leave
movsl
sbb
icebp
mov
bound
xchg
lods
push
daa
lea
xor
push
dec
xchg
je
inc
xchg
cmpsb
pushf
dec
or
aad
mov
mov
mov
push
xor
enter
xchg
add
dec
add
or
clc
xchg
and
mov
jns
jbe
or
scas
nop
mov
test
xchg
mov
ret
or
inc
xor
mov
test
mov
sbb
jmp
xor
les
xor
dec
dec
je
xor
fistps
or
ret
mov
pop
mov
dec
mov
stos
sbb
testb
jne
scas
sub
ja
fmul
add
in
in
cmp
call
mov
cs
cmp
adc
outsb
mov
cmp
in
mov
stos
jb
mov
push
imul
add
daa
xchg
sahf
adc
mov
add
lock
cmpsl
leave
loope
dec
mov
mov
pop
mov
fldt
push
and
sub
int3
movsl
mov
push
or
pop
xchg
pop
sub
out
or
mov
lahf
push
aas
cld
pop
loope
insl
fdivl
inc
mov
push
and
xor
push
js
jmp
das
xchg
push
or
roll
leave
outsb
push
adc
outsb
mov
xchg
out
lret
fimuls
pop
or
push
add
je
jae
sahf
fbstp
out
push
cmpb
pop
addl
test
cmpsl
fldt
lock
movsb
xor
imul
std
mov
or
divl
sbb
inc
and
cli
loope
ret
leave
pop
mov
sub
stc
mov
arpl
add
inc
cmpsb
or
rol
lods
aas
imul
inc
imul
xchg
adc
cwtl
mov
outsb
jl
push
ret
jo
aas
mov
sarb
jb
sar
and
push
push
or
jo
stc
mov
cmp
push
add
sub
inc
movsb
aas
sbb
adc
jb
adc
inc
mov
cltd
fnstenv
int
out
sbb
xchg
movsb
pop
in
push
pop
xchg
xlat
and
xor
xchg
rorb
mov
xor
add
sbb
adc
add
xchg
lret
mov
pop
ljmp
sub
popf
mov
mov
jno
xor
jmp
add
mov
in
xor
ja
in
jae
scas
popf
insl
jns
in
jge
js
movsb
dec
dec
mov
or
mov
sbb
icebp
inc
ja
adc
pop
sbb
jge
ds
adc
int
pop
shl
sbb
cmpl
subl
fwait
testb
push
pop
imul
stc
and
loope
push
fstps
out
filds
cwtl
mov
inc
mov
in
lds
shl
jecxz
movsb
pop
nop
mov
cmp
rolb
cmp
push
mov
lods
lcall
mov
dec
add
sub
rclb
jl
pop
dec
pop
adc
sub
mov
dec
push
aam
loopne
stos
test
sbb
out
adc
pusha
stos
lcall
add
aad
dec
or
mov
fisubrl
cmpsl
fistpll
push
jno
pop
pop
sub
fidivrs
fcoml
cmp
imul
dec
pop
sub
xlat
insl
sbb
cmpsb
mov
repnz
icebp
xchg
dec
int
rorl
pop
and
cli
push
mov
or
js
pop
cmp
cmpsl
jnp
mov
mov
out
and
inc
lcall
shrl
rorl
fsubp
sub
mov
pop
pusha
sti
dec
leave
sarl
jae
mov
negl
test
add
stc
daa
push
clc
dec
push
xor
mov
addl
pop
add
cmp
jb
adc
add
inc
push
test
sbbl
inc
mov
dec
divb
xchg
mov
bound
push
outsl
cli
add
sbb
push
cmp
and
pop
pop
jo
mov
in
sub
loopne
or
mov
ss
jecxz
add
jbe
in
dec
jnp
test
mov
or
inc
stos
sbb
pusha
iret
daa
pushf
sbb
or
rcrb
imul
mov
dec
das
insb
pop
xor
fmull
mov
idivl
pushf
test
pop
jl
sbb
aam
xchg
ffree
movsl
adc
stos
add
sar
push
mov
or
mov
sbb
xchg
shlb
iret
push
lods
in
and
iret
push
dec
outsb
adc
xchg
sub
ja
aas
push
shlb
dec
xor
cmp
dec
mov
cld
jne
cwtl
int
xor
and
into
leave
mov
dec
cmp
sub
lret
leave
lcall
js
imul
jmp
inc
push
fidivrs
in
insb
dec
lods
addb
sub
in
mov
notb
pop
sahf
aaa
xchg
sbb
add
popa
cli
sub
inc
js
push
test
mov
shr
jl
mov
sbb
sahf
push
jg
out
scas
xchg
ljmp
xchg
mov
pushf
fisubs
adc
xchg
lds
mov
jl
clc
daa
adc
jno
jp
shll
insb
gs
xchg
div
jmp
subb
cmp
sbb
sbb
jb
inc
xor
daa
rcll
stos
mov
orb
ja
sbb
aaa
pushf
test
jns
mov
fildll
xor
lret
ret
inc
scas
stos
push
mov
add
pop
or
stc
inc
jo
lahf
arpl
or
pop
adc
xchg
jg
push
sbb
cmp
fidivl
movsb
out
int3
adc
inc
inc
fadd
push
or
and
lret
mov
jmp
je
inc
lds
add
jg
push
icebp
out
fbstp
fnstsw
mov
mov
cltd
fs
jo
xlat
mov
pop
jo
lea
and
jo
and
sbb
data16
rcl
jno
or
mov
mov
lcall
xor
mov
mov
dec
cmp
push
cmp
xchg
add
in
test
jbe
daa
aam
sarl
cld
xchg
sub
push
test
pop
loope
int3
imul
lcall
int3
fidivs
or
addb
dec
loope
dec
imul
cltd
mov
scas
sub
jns
pop
repz
out
stos
dec
cmp
cwtl
fs
sub
cmpsb
cmp
pop
pop
dec
notb
dec
out
in
xchg
das
inc
jge
cmpsb
imul
inc
mov
fbstp
jl
test
mov
sbb
or
das
lods
adc
add
fsubrl
jno
sbb
jl
jp
outsb
int3
test
ja
or
rorb
push
mov
in
imul
add
mov
inc
xor
loope
out
sbb
xchg
mov
adc
sub
mov
sub
xlat
mov
mov
adc
dec
paddb
dec
sub
dec
xchg
shll
cmpsl
sti
pushf
push
out
clc
adc
and
sbb
mov
int3
dec
fs
dec
scas
jecxz
sub
fwait
mov
into
add
lods
stos
mov
pop
pop
sahf
sub
loope
push
or
inc
pop
sbb
div
inc
xor
cs
mov
mov
js
movsl
xor
push
jnp
enter
xor
push
adc
dec
push
negb
call
mov
dec
sar
add
sarb
leave
push
hlt
in
rorb
pop
fisubl
stos
pop
pushf
or
ljmp
push
cmp
fists
xorb
mov
jmp
ret
cs
ja
inc
xor
clc
xchg
fcompl
movsl
leave
sbb
lds
mov
lods
scas
cltd
jne
icebp
push
or
std
cli
inc
insl
fcmovnb
push
jno
scas
mov
fwait
lds
nopl
rolb
in
ja
sub
stos
pop
xchg
add
jb
out
sbb
out
cmpsl
shll
and
movl
dec
mov
sarl
push
cmpl
ljmp
cld
push
jle
mov
lods
cmp
mov
loop
xchg
adc
pop
jle
cmpsl
and
xchg
repz
daa
jmp
mov
cmp
outsl
shlb
cmpsb
pop
in
xor
mov
sub
mov
jns
cmp
inc
aad
testl
pop
pushl
push
push
inc
imul
idivb
cmp
movsl
test
faddp
pop
jne
je
hlt
adc
in
ss
pop
mov
in
jecxz
or
mov
add
cmp
and
gs
ret
mov
jg
int3
addr16
pop
jecxz
inc
pusha
outsl
mov
pop
lock
scas
test
push
fsubrs
daa
push
cmpsb
mov
scas
dec
lret
outsb
cltd
fcoml
fidivs
clc
mov
push
inc
movsl
out
out
dec
push
mov
addr16
stos
fsubl
dec
fisttpll
adc
mov
mov
pop
fwait
sar
xlat
add
sub
or
jl
mov
or
and
pop
mov
jg
lds
push
jg
mov
push
aaa
mov
imul
ds
movsb
repnz
inc
pop
add
cwtl
int3
dec
mov
pop
insl
mov
sbb
lret
loopne
movsl
stc
mov
xlat
adc
dec
iret
push
popa
jb
bound
pop
je
lock
adcb
lahf
jb
sub
push
adc
jle
arpl
pop
repz
jecxz
cmp
rol
dec
mov
lock
mov
loope
mov
cmp
sbb
add
xor
jecxz
lcall
fimuls
push
mov
lods
popf
push
je
lods
leave
int
stc
sub
push
scas
and
stos
ss
mov
jge
jo
jecxz
mov
jb
pop
mov
mov
jmp
sbb
lods
xor
xchg
jecxz
add
mov
lea
adc
loopne
cmp
sub
sahf
int
outsl
sub
sbb
movsl
xlat
gs
lods
push
pop
loopne
addb
jbe
test
sbb
unpckhps
ret
xlat
les
iret
rorb
dec
lock
stos
out
adc
imul
mov
lock
dec
pop
das
inc
loopne
push
sbb
lock
mov
mov
push
ficomps
push
or
sbb
push
jle
add
cmp
ret
push
imul
mov
sbb
gs
push
data16
sbb
pop
pop
sub
and
xchg
mov
jae
movsb
lret
mov
ljmp
add
cmpb
enter
dec
pop
mov
sti
mov
in
shl
mov
outsb
jle
bswap
xchg
fbstp
scas
std
push
popf
sbb
or
or
push
dec
ret
insb
in
fisttpll
clc
sub
out
fstp
push
lods
rorl
jbe
inc
pop
pop
xor
shlb
and
arpl
add
mov
in
mov
jns
pop
mov
out
and
stos
cmp
shrb
lds
push
repnz
pop
aas
jle
dec
add
popa
fs
sbb
xchg
push
dec
and
mov
mov
outsl
and
addr16
cmp
and
mov
xchg
sub
dec
sbb
in
sbb
je
pop
fisttpl
sub
ss
xor
cmpsl
enter
mov
or
inc
jmp
test
xchg
and
mov
stc
popa
mov
cs
int
ds
sub
cmpb
shl
xorb
adc
and
push
sbb
clc
sarb
dec
mov
and
int3
sub
sbb
stos
in
sbb
pop
in
dec
je
out
mov
clc
and
mov
jo
pop
add
dec
jecxz
mov
pop
pushl
mov
mov
pop
movsb
xchg
push
jl
fwait
in
in
sar
mov
rcll
lahf
rcr
dec
loopne
cli
push
lock
sbb
inc
push
shlb
cmp
mov
scas
in
mov
mov
in
pop
pop
mov
movsb
mov
aas
jbe
sbb
mov
in
faddl
jno
lock
sub
mov
mov
add
xchg
cltd
pop
push
pop
mov
and
in
hlt
sbb
inc
fprem
fwait
cli
mov
sti
daa
lods
shl
pop
out
ret
inc
push
push
adc
and
sarb
xor
dec
out
mov
lret
xor
sbb
and
out
movhps
mov
popl
cli
jae
cli
lahf
and
and
roll
xchg
jne
adc
jo
ja
mov
loope
xor
push
add
mov
sti
sub
jns
cwtl
mov
ds
mov
cs
movsb
pop
popa
scas
push
inc
xchg
add
ffreep
aam
or
cmp
xchg
out
add
icebp
ss
sub
and
aaa
out
sbb
push
mov
dec
xchg
xchg
mov
in
lods
imul
xor
and
pop
loopne
mov
outsl
scas
shrb
or
pop
sbb
inc
fsubrl
popf
add
sbb
fadd
repz
loop
dec
loop
clc
jns
mov
test
insb
mov
roll
fwait
and
push
lret
mov
push
push
loopne
pushf
aad
cs
popa
and
cwtl
jge
imul
adcl
out
popf
xor
push
nop
mov
add
sbb
test
outsl
and
out
mov
call
adc
push
int3
cld
scas
xor
jle
ljmp
mov
xchg
push
call
notb
ds
push
dec
push
pop
jle
xchg
fsubs
xchg
sbb
int3
nop
notb
fwait
sbb
sub
dec
adc
push
ja
xchg
cmpsl
addr16
push
add
add
sub
rcll
inc
lret
sarl
push
cs
js
in
jmp
mov
enter
mov
xor
testb
jbe
push
dec
popa
js
jno
pop
pop
cli
lods
lcall
push
daa
pop
fdiv
xchg
imul
shll
xchg
mov
push
cmp
inc
pusha
cmp
les
or
lds
cwtl
and
cld
stos
dec
adc
cs
sub
popa
inc
mov
mov
iret
pop
fnsave
imul
movsb
mov
clc
ljmp
outsb
inc
fdiv
shl
mov
xor
test
cli
mov
icebp
and
lods
xchg
sub
in
in
or
out
mov
xchg
adc
jae
xchg
std
pop
mov
inc
or
jnp
mov
lock
int3
enter
mov
fdiv
les
inc
mov
sbb
adc
lret
sahf
cmp
sbb
mov
leave
clc
add
add
stos
jl
pusha
mov
jnp
pop
dec
sbb
cmc
sbb
mov
mov
dec
jae
outsl
in
or
cmp
or
call
sub
sarl
movsl
fnstsw
sarb
ficoms
cwtl
xor
popa
sbb
sahf
and
pop
xchg
mov
fwait
mov
aaa
negb
fdivs
addr16
leave
cmp
pop
jl
je
cmp
rorl
sahf
cmp
sbb
xchg
cmc
mov
bnd
je
mov
in
adc
jae
shl
xchg
and
push
push
sti
scas
xor
cltd
call
and
in
adcb
dec
dec
mov
subb
iret
leave
adcb
xchg
gs
nop
mov
ret
xchg
pop
cs
in
mov
or
pop
nop
in
adc
jo
mov
pop
push
xchg
and
out
mov
repz
cmpsl
jge
out
subb
xchg
xlat
rorb
cld
and
cmp
pop
pusha
cmp
sahf
lret
jge
push
adc
sub
jmp
out
and
xchg
mov
addr16
je
mov
and
add
pop
imul
pushf
adc
cmp
mov
int
dec
stc
mov
test
fsubrl
mov
cmpsl
adc
les
notb
and
decb
fidivl
int
in
sub
jmp
popa
mov
aam
xchg
fisubrs
or
adcb
rcll
sub
or
aam
nop
sahf
xor
or
test
dec
mov
jae
fsub
push
movsb
or
cmpsb
in
cwtl
lock
ds
or
mov
jae
add
out
inc
jno
sbb
mov
inc
movsl
imul
or
xlat
test
cwtl
xchg
and
xor
outsl
ds
ret
fdivrl
shlb
sub
inc
ljmp
mov
dec
pusha
push
sbb
add
mov
mov
cmp
mov
add
mov
lock
cmp
push
cmc
and
cmp
dec
test
pop
push
xor
cmp
push
mov
out
inc
fadd
adc
adc
and
cld
imul
push
out
fisttpl
enter
pop
or
inc
aam
xchg
loop
shrb
add
xchg
push
push
mov
jmp
pop
mov
idivl
rcll
in
js
repnz
and
outsl
pop
xor
mov
mov
lea
dec
fnsave
loopne
cwtl
les
ds
jno
scas
icebp
jg
mov
adc
divl
mov
cwtl
xchg
loop
xor
pop
fisubs
loop
and
xor
mov
sbb
sub
addr16
mov
popf
pop
ficomps
popa
sub
add
push
std
mov
dec
incl
dec
jecxz
cmc
in
mov
adc
mov
or
lods
mov
dec
test
sub
pop
fnsave
xor
gs
mov
in
mov
xchg
adc
jno
aam
repnz
or
test
jns
xor
jl
int
mov
negb
xchg
adc
int
shll
jb
mov
push
leave
rcrl
xchg
call
jl
sahf
dec
dec
fcos
jb
or
xor
rcrl
mov
xchg
shrl
lock
out
jo
fidivrs
jmp
inc
ja
or
mov
stc
mov
or
test
hlt
lods
sar
jno
cmpsb
ljmp
dec
inc
cmp
enter
pop
cmp
fwait
mov
sarl
pop
jmp
cs
inc
xor
fisubrs
mov
pop
cltd
fwait
push
mov
mov
std
mov
or
inc
andl
in
fwait
adc
insl
xchg
data16
jns
mov
mov
adc
sbb
or
sti
pop
ds
repz
into
roll
push
repnz
push
pop
testb
mov
dec
xchg
clc
std
int3
aad
pop
xor
sbb
loope
mov
push
and
add
sub
sbb
sbb
adc
inc
int3
das
sahf
aaa
jo
xchg
push
xchg
jns
stos
leave
iret
shll
mov
movsl
sub
das
jnp
pop
in
out
fadds
repz
cli
int
xchg
rol
movsb
out
fs
cltd
je
pop
int
mov
ret
jmp
push
cmp
inc
lods
and
sub
mov
gs
insb
mov
in
sub
push
push
lods
scas
cltd
mov
hlt
sbb
sahf
xchg
push
fdiv
popa
subb
and
sub
and
in
pop
mov
mov
jbe
aas
je
sahf
shrl
add
mov
dec
adc
or
aas
mov
or
into
imul
add
scas
xor
push
hlt
lods
sub
push
inc
and
int3
inc
push
mulb
inc
lret
lret
jnp
in
nop
es
and
xchg
push
std
nop
mov
push
jg
lret
dec
nop
cmp
sub
xor
aam
pop
adc
scas
jns
sbb
mov
out
shlb
test
clc
scas
xchg
adc
stos
inc
sti
xor
mov
jmp
loopne
stc
rorb
iret
or
push
push
push
es
clc
push
sbb
pop
add
rolw
enter
xor
sub
sbb
adc
push
push
fwait
pusha
cli
daa
jge
mov
adc
dec
mov
mov
les
outsb
push
push
jnp
push
ja
adcb
lds
sub
jbe
mov
push
rolb
lahf
insb
mov
movsl
fucom
in
xlat
push
sub
jg
andb
out
loopne
inc
and
push
mov
daa
pop
xchg
xchg
mov
inc
nop
leave
push
inc
lods
test
pushf
stos
and
fwait
add
scas
in
inc
test
sti
pop
andl
xchg
cwtl
sahf
dec
ret
pop
mov
out
sti
mov
or
aam
repz
scas
aad
jecxz
mov
in
pop
mov
in
loopne
out
into
ss
mov
pop
arpl
lcall
rol
std
adcb
imul
cmpsb
fs
jno
lds
gs
xor
fisttpl
xchg
add
pop
call
out
lock
sbb
addr16
ficompl
cmp
scas
or
jmp
lcall
test
cmp
mov
addr16
std
jl
scas
xor
je
dec
fimuls
in
jmp
popf
pop
cltd
es
mov
sbb
mov
insb
jbe
loop
mov
mov
cmp
mov
imul
rcr
and
fisubl
nop
add
mov
mov
push
xorl
push
xchg
shlb
bound
inc
pop
addr16
xor
xor
aaa
js
gs
adc
add
xchg
pop
ds
jns
shl
data16
or
or
mov
mov
lcall
adc
xor
push
inc
lahf
sub
or
mov
push
cltd
mov
push
mov
adc
adc
popa
pop
repnz
leave
cmp
fldt
jae
mov
fcmovnb
popf
frstor
push
pop
gs
mov
xchg
movsl
mov
mov
cmp
adc
mov
fwait
pop
jge
lods
cmp
test
push
or
lret
jmp
aas
lret
repz
test
std
cwtl
rorl
int3
sub
push
fs
jp
out
movsb
adc
xlat
sub
push
fcmovnb
mov
cmp
pop
lahf
sub
adc
test
mov
fsubl
push
push
stos
sahf
xchg
je
in
jp
mov
push
adc
xor
mov
out
sahf
or
ficoml
in
scas
pop
repnz
aas
lcall
push
ja
insl
inc
lods
pop
shlb
jmp
jge
cwtl
test
inc
dec
imul
cmp
in
push
stos
fsubr
imul
fisttpll
inc
mov
mov
sub
cmp
xchg
mov
insl
adc
arpl
jbe
dec
addr16
sub
mov
jo
adc
cmp
cmp
pop
jmp
ret
pusha
cmp
jnp
test
xchg
push
in
ds
pop
data16
lcall
mov
adc
dec
faddl
adc
sub
inc
out
sub
xchg
xrelease
pushf
xchg
aam
pop
pop
loopne
fildll
mov
je
repz
push
and
rcrl
iret
inc
cltd
xchg
and
popa
in
roll
mull
and
divb
je
fdiv
push
out
dec
and
sbb
xor
xor
push
mov
dec
lret
std
or
pop
adc
or
mov
dec
into
fwait
xor
sbb
and
ret
sub
aaa
cmp
dec
stos
xor
xor
jae,pt
add
fsubrs
fcmovb
pushf
ljmp
xchg
mov
fs
in
int3
mov
loope
int3
incb
movsb
rcrb
push
inc
pop
repz
hlt
hlt
mov
pop
cmp
and
pop
cld
sbb
jge
insb
mov
mov
loopne
lods
cmp
sbb
adc
jg
test
xor
stc
jns
call
cmpsl
js
das
mov
daa
test
and
mov
or
jns
sarl
sbb
jge
adc
repnz
out
push
aas
jge
jcxz
mov
mov
sbb
mov
sbb
pop
jl
push
push
out
std
stos
fsubr
imul
ljmp
insl
dec
mov
lods
fisttps
cs
imul
ret
sahf
outsb
push
idivb
repnz
cs
movsb
pop
pushf
in
cmp
cmp
push
out
add
outsl
jb
inc
ljmp
add
mov
xor
sbb
subl
or
cmc
movsl
mov
rcrl
cmpsl
or
push
pop
xchg
mov
xchg
inc
aaa
mov
lcall
js
mov
adc
xchg
in
fcomps
mov
sbb
js
lods
decb
icebp
push
lods
cmpsb
add
ds
fwait
adc
jb
out
xor
xchg
cmpb
sub
and
mov
pusha
clc
stc
and
inc
hlt
test
sub
int
enter
cmp
jge
std
fidivs
pop
sub
or
paddw
popa
mov
push
iret
hlt
cli
adc
xchg
rcrl
sub
or
mul
aas
jb
mov
ss
and
test
ds
subb
cmp
cld
push
push
fs
xchg
jmp
dec
mov
or
scas
aas
push
add
les
loope
out
xor
pop
stc
lods
call
insl
mov
push
mov
cmpl
and
repz
mov
pop
div
cmpsb
mov
adc
mov
push
or
xor
ljmp
inc
sub
lahf
xchg
dec
in
mov
adcb
lahf
jnp
push
push
push
repnz
mov
mov
mov
sub
in
repnz
insb
test
in
arpl
cmp
sub
add
lods
sbbb
shll
out
insl
pop
lret
adc
lea
mov
mov
rol
sbb
movsl
inc
push
aas
inc
add
pop
mov
adc
lea
imul
xor
aas
mov
je
test
fs
inc
call
jle
iret
pop
jl
in
add
add
mov
incl
xor
in
dec
jo
cmpsb
enter
xor
test
stos
cmp
popa
aaa
xor
out
cli
sub
pop
scas
and
sbb
pop
push
mov
mov
mov
add
shr
xchg
add
push
stos
add
mov
sahf
call
add
push
in
adc
sbb
ds
lods
shl
mov
jb
or
pop
out
jbe
movsl
divb
jne
add
mov
mov
cmp
out
mov
or
add
dec
mov
je
sbb
sub
push
mov
sub
mov
loop
sar
xor
cmpsl
dec
and
xor
pop
cwtl
cs
scas
or
sti
cmp
inc
mov
cli
or
xchg
out
jg
loope
enter
jnp
dec
push
cmp
xor
stos
fcmovu
sub
sbb
std
sahf
xchg
jbe
pop
dec
mov
js
jbe
xchg
jmp
jge
in
outsl
mov
cwtl
movsl
xor
pop
out
inc
inc
jnp
cmpsl
popf
sub
mov
xor
push
call
or
fnstcw
mov
cmp
iret
sbb
js
decb
std
jle
sub
push
clc
mov
mov
mov
imul
in
mov
stos
xor
jbe
push
inc
aas
ret
push
mov
scas
jno
mov
sub
pop
mov
pop
inc
ret
int3
mov
fisubrl
ret
ljmp
push
adc
mov
into
test
cs
mov
pop
hlt
imul
in
sbb
imul
insb
cmp
pop
fistl
pop
adc
cwtl
gs
sbb
adc
adc
xchg
negl
repnz
push
icebp
xor
adc
adc
jbe
lock
mov
lret
mov
and
negl
mov
xchg
addr16
sahf
mov
and
mov
sub
xor
cmp
xchg
cmpsl
inc
xchg
hlt
xchg
mov
shlb
pop
inc
jae
popf
aas
xchg
sbbl
mov
jnp
mov
cld
or
movsb
push
jns
icebp
pop
lods
sqrtps
dec
inc
imul
imul
shlb
fdivrl
dec
inc
pusha
mov
sub
pop
mov
arpl
jecxz
push
xchg
sub
mov
mov
push
and
movsb
repnz
hlt
pop
xorl
dec
xorb
fwait
dec
fstpt
xor
pushf
or
call
push
popl
gs
mov
mov
lret
cltd
movsl
enter
andb
cmpsb
push
inc
mov
jns
push
in
xchg
jp
ficompl
loopne
or
inc
in
fs
and
leave
ljmp
popa
popa
or
push
jg
popa
xlat
mov
pop
cmpsl
aad
je
jmp
int3
or
mov
fcoml
out
mov
xchg
cmp
jae
test
testb
enter
loope
and
jae
outsb
arpl
add
xchg
pop
mov
repnz
sti
imul
pop
icebp
cmpsl
jge
rcl
cli
or
clc
fmull
dec
fiadds
push
sub
addr16
mov
lds
leave
mov
sub
sbb
dec
ret
lret
enter
int3
icebp
mov
inc
neg
or
repz
sub
xor
mov
pop
cmc
loopne
push
mov
daa
pop
aaa
mov
scas
jecxz
add
insl
imul
out
inc
cltd
cmp
and
movsb
rorl
jbe
or
lea
pushf
jnp
fdivrs
adc
je
aam
mov
call
adc
mov
icebp
repz
das
xchg
or
incl
ret
or
mov
and
addl
ljmp
ds
mov
cmp
lods
push
mov
adc
sbbb
stc
nop
xchg
adc
push
adc
icebp
incl
mov
and
repz
push
nop
sub
jg
xor
jmp
pusha
call
mov
adc
aam
mov
in
lret
divl
adc
inc
mulb
fmuls
loope
jbe
jns
inc
xorb
or
loopne
mov
jbe
daa
nop
jnp
xchg
mov
sub
push
dec
xchg
daa
mov
xor
adc
repz
pushf
adc
mov
or
sti
clc
mov
mov
add
xchg
decb
sub
jp
xor
loopne
inc
sub
pushf
sub
fs
outsb
mov
punpcklwd
leave
das
loop
mov
mov
sahf
mov
cwtl
sub
xor
jbe
test
sub
daa
sbb
and
cmp
mov
cmp
aaa
xor
fstpl
adcl
cs
push
and
or
ss
fwait
add
gs
mov
rclb
pop
in
fistpll
vpandn
or
lahf
jle
push
dec
cwtl
pop
mov
mov
jo
mov
aas
jo
inc
ja
enter
leave
mov
and
shll
cs
lods
mov
pop
xor
cmp
mov
add
rolb
jo
test
mov
inc
scas
mov
push
bound
push
pop
stos
sbb
gs
xchg
xchg
inc
xchg
xor
or
mov
push
in
sbb
dec
add
int
dec
das
sbb
out
sahf
fidivl
push
clc
faddp
aaa
pop
data16
stos
fsubr
addb
loopne
add
mov
movsl
or
push
fldenv
sub
xlat
sti
sbb
xor
int3
add
mov
pop
dec
es
pop
sub
add
xlat
fisttpl
add
mov
sahf
push
sahf
and
fsubs
lret
mov
push
jp
mov
andb
popa
cmp
lret
inc
mov
mov
daa
in
pop
into
add
ud2
popa
cmp
aas
lret
dec
lahf
mov
es
fistl
jp
test
cmp
mov
push
fisttpl
jp
popf
inc
jmp
push
inc
insb
andl
int
sbb
mov
lahf
rorb
cmp
mov
jne,pt
mov
jecxz
adc
arpl
dec
mov
jbe
lahf
and
gs
imul
pop
and
js
out
mov
lret
xchg
lret
xor
andb
jmp
jns
mov
dec
cmp
loope,pn
test
cwtl
mov
mov
dec
in
pop
xchg
and
hlt
xchg
mov
add
test
imul
sbb
push
cli
push
in
jbe
leave
outsb
adc
sti
jns
sbb
mov
cmp
rclb
add
out
enter
mov
xor
mov
pop
pop
sub
arpl
cmc
cmp
sbb
or
stos
mov
ja
stos
mov
mov
push
inc
in
sbb
clc
mov
xchg
mov
xchg
rorb
cmp
adc
rorl
xchg
jne,pt
dec
push
int
adc
arpl
dec
rorb
add
hlt
push
dec
pop
arpl
addl
sbb
mov
ret
mov
xor
mov
and
and
dec
stos
xor
jp
mov
std
or
pop
dec
xchg
ljmp
mov
push
xor
and
sub
lcall
push
mov
jg
dec
sub
push
adc
ret
loope
pop
adc
and
and
addr16
sti
js
sti
call
inc
inc
xor
fistpl
imul
jb
cli
cmc
dec
scas
mov
jp
stos
jne
packsswb
jmp
push
in
jbe
mov
inc
cmpb
inc
cmp
clc
sub
shlb
xchg
rorl
mov
and
cmp
stc
mov
icebp
push
dec
mov
cmovae
test
and
outsb
add
sahf
clc
inc
test
es
mov
das
fsubrs
pop
out
sub
push
and
mov
xchg
stos
aam
sbb
pop
mov
rorb
xor
jle
sbb
test
test
push
add
pop
pop
xchg
xor
xlat
jg
lods
jnp
push
call
ds
cld
jecxz
in
adc
mov
adc
and
pop
dec
shll
sbb
les
test
inc
pop
cmpsl
xor
jae
inc
dec
mov
in
popa
pop
mov
iret
cmp
mov
mov
repnz
mov
xchg
inc
mov
popf
punpckldq
insb
movsl
ret
push
or
add
dec
cmp
pop
pop
or
insb
fcomps
pop
sbb
movl
or
jnp
dec
mov
in
push
test
and
or
lds
orb
pusha
ret
mov
add
push
inc
das
mov
out
repz
cli
lea
int3
mov
out
pop
mov
pushf
lods
cmp
push
mov
cli
xor
cmp
stc
push
inc
add
test
jmp
xlat
add
clc
mov
out
lea
cwtl
adc
cmp
mov
inc
rorb
in
or
sub
xchg
pop
aad
fbstp
fcmove
outsb
stos
lcall
icebp
in
hlt
jae
subl
in
dec
ret
xor
xor
jmp
mov
pop
repz
inc
cli
mov
mov
lahf
popf
fmuls
push
cmpsl
jbe
or
mov
sarb
gs
jbe
pop
je
neg
xchg
subl
fimuls
stos
adc
aaa
push
arpl
mov
cmp
int
push
mov
dec
test
enter
shl
push
dec
push
pop
xchg
sub
push
es
inc
push
pop
or
dec
scas
stos
xchg
int3
xor
cli
pop
inc
flds
xchg
sbb
mov
repnz
or
sub
cmp
cmp
inc
ljmp
mov
jp,pt
push
or
jns
xor
and
jno
xchg
lods
jl
inc
xor
int
push
or
faddl
mov
adc
mov
add
roll
lret
jbe
fistl
je
or
rcrb
or
dec
sub
lret
mov
inc
sti
mov
adc
nop
pop
or
in
mov
and
jle
cli
lcall
dec
lods
sbb
xor
out
mov
fists
or
mov
cltd
les
outsb
aad
mov
testl
andl
sub
add
jecxz
sarl
in
mov
lret
fildll
xor
shll
cwtl
dec
xor
cli
aaa
sub
inc
and
mov
js
sub
cmpsl
leave
push
dec
mov
mov
jo
inc
loopne
test
adc
mov
shr
daa
mov
push
xor
test
lea
cwtl
pop
mov
adc
ljmp
fcoms
cltd
jle,pn
sbb
adc
test
shlb
in
jp
orl
rclb
xor
jb
mov
loop
ljmp
jecxz
jo
mov
cmp
imul
add
sti
icebp
lahf
sub
insb
mov
test
jp
sbb
ja
adc
push
push
jecxz
cmp
push
xchg
shlb
jg
or
mov
cmpsb
sbb
mov
mov
add
cmpsb
sub
xchg
jno
mov
lahf
mov
mov
not
pushf
xor
or
cwtl
inc
flds
and
cli
shr
adc
subl
movsl
xchg
sub
iret
addr16
xor
mov
push
sahf
jle
mov
loopne
sub
lds
in
push
cli
mov
jp
cmc
mov
cmp
popa
mov
pop
sarb
adc
mov
mov
jnp
data16
push
or
xchg
ljmp
rcl
mov
aaa
lock
insb
mov
jp
mov
mov
jmp
loopne
xor
add
add
out
add
cmp
sbb
pop
pop
dec
mov
repnz
push
xchg
jp
lahf
mov
ret
xchg
xor
decl
data16
mov
push
dec
adc
xchg
je
jmp
or
fwait
jg
inc
cmp
xor
mov
mov
xchg
mov
test
dec
sti
mov
xor
xor
sbb
and
push
mov
repnz
gs
dec
add
jae
es
lea
push
sbb
lret
xor
in
ljmp
sub
cmp
dec
into
pop
add
ffreep
mov
sbbb
push
lock
int3
loopne
fisubl
iret
icebp
lret
push
fstpt
xchg
and
aam
jmp
jge
and
or
dec
out
fs
sbb
mov
loopne
movsl
cmc
hlt
inc
pop
push
lahf
pop
imul
jge
jle
xlat
jnp
loope
aad
ljmp
jge
fistps
adc
daa
xor
sbb
or
cmp
pop
js
add
push
addr16
movsl
push
add
out
adc
pop
xor
mov
sub
fwait
sub
add
and
xor
pop
jno
or
cmp
mov
push
mov
fistpl
fsubs
add
adc
mov
pop
xchg
dec
in
pop
xchg
cmp
test
dec
jbe
push
pop
leave
fistl
dec
scas
pop
inc
cmp
lods
jp
adc
nop
fcmovnu
and
sti
movsl
jo
xchg
adc
cli
jo
fcmovnu
xchg
jno
push
cmp
in
xchg
sbb
mov
ja
dec
out
iret
dec
loopne
cmpsb
pusha
adc
pop
or
sti
hlt
ljmp
ljmp
cmc
repnz
aad
dec
movsb
pushf
popa
pop
mov
andl
loop
xchg
jmp
xchg
fs
jbe
fiaddl
js
push
sbb
jl
jbe
ljmp
or
sub
lahf
cmpsb
dec
jb
in
sub
add
or
lret
sub
movsb
push
lock
cmp
aaa
jecxz
loopne
ss
cmp
scas
shll
adc
mov
ret
ss
icebp
and
dec
xchg
xchg
call
movsl
xchg
aam
mov
lret
xchg
adc
pop
sbb
popa
xlat
mov
lret
sbb
fsubl
sbb
jge
push
cmpsb
jae
mov
aam
popf
mov
or
mov
incl
sbb
hlt
mov
pop
jecxz
cmp
xor
xchg
lods
jle
mov
adc
jo
shl
mov
sub
nop
sbb
adc
mov
test
in
lcall
push
test
in
or
push
lds
add
inc
push
jbe
jle
push
leave
cwtl
jne
lcall
mov
or
mov
jnp
aas
cld
hlt
std
sub
inc
icebp
cmp
cmp
loopne
add
xor
sub
or
rcrb
and
clc
scas
dec
jns
ljmp
xchg
add
xor
jge
cwtl
int
movl
pop
popf
adc
lds
jbe
add
pop
add
pusha
cmp
fcomip
rol
fbstp
pop
aad
in
sbb
ljmp
jg
mov
pop
push
divl
ljmp
daa
stos
das
gs
push
mov
xlat
ja
lret
outsb
loopne
adc
je
aad
jbe
dec
sbb
and
adc
jl
pop
inc
mov
mov
outsl
mov
ror
in
out
cmp
add
shll
hlt
adc
mov
push
cmp
enter
dec
jge
sub
hlt
xchg
pop
insl
and
jp
inc
jnp
jne
mov
fcoml
les
test
sbb
mov
int3
aas
ja
xor
daa
scas
in
or
lret
lds
mov
lods
outsl
jp
ret
xchg
aaa
cmp
fmul
inc
stos
dec
adc
jl
mov
mov
lds
clc
or
or
addr16
mov
stos
xchg
inc
push
scas
add
push
sbb
push
jnp
cli
sarl
mov
cmpsl
jmp
push
ret
mov
push
adc
in
lock
xlat
jge
les
lcall
insl
mov
outsl
sbb
adc
std
pop
clc
mov
shll
mov
mov
fucomip
or
mov
in
xchg
jae
adc
add
lds
test
cld
pushf
lahf
add
and
pop
mov
pop
xchg
mov
sahf
divb
in
test
and
fnstcw
xchg
lods
sbb
aam
aas
cmpsb
xor
mov
pop
cmp
push
les
xchg
push
xor
mov
sub
mov
lret
pop
pop
cltd
and
push
jo
pop
push
and
repnz
les
jo
addr16
lret
inc
fmulp
stc
add
xorl
mov
mov
mov
dec
sbb
dec
inc
and
or
push
stos
frstor
stc
rorb
shlb
sbb
mov
movlps
mov
loopne
js
imul
xchg
iret
mov
ja
sbb
enter
push
sbb
out
or
fidivl
sbb
or
mov
sub
mov
mov
in
dec
test
jge
sub
dec
jns
out
lahf
mov
xchg
clc
adc
dec
stos
push
fidivrl
inc
xchg
adcl
inc
and
adc
stos
lods
es
mov
repz
pop
jmp
mov
and
mov
push
fdivrs
lret
repnz
xor
ja
push
sbb
adc
cmp
sub
sar
mov
dec
int
test
fistps
test
ds
es
push
add
inc
add
jno
fwait
cmp
popa
das
sub
hlt
sbb
cmp
adc
xchg
in
ret
and
dec
scas
ret
pop
sbb
xchg
es
xchg
inc
xchg
push
or
enter
out
outsl
xchg
std
nop
dec
mov
push
clc
sbb
mov
repnz
ret
push
sub
pop
adc
inc
fabs
cmpsb
repz
shll
out
lods
jbe
sti
xor
cmp
mov
mov
jne
lea
xchg
dec
cmp
adcl
mov
cmp
add
xor
and
adc
je
mov
inc
xchg
push
test
es
popa
or
aaa
enter
push
sbb
inc
inc
bound
inc
push
mov
insb
mov
call
arpl
ret
lods
jbe
mov
xchg
dec
imul
outsl
mov
cld
inc
into
jmp
and
outsl
adc
mov
adc
stos
jg
dec
push
jecxz
push
fldt
test
pmulhuw
add
ss
out
in
inc
pop
clc
outsb
mov
push
xchg
jecxz
in
subl
mov
lcall
lret
sbb
push
stos
sub
and
cmp
dec
orb
mov
cmp
pmaddwd
pop
or
aaa
push
cmp
xor
mov
and
dec
pop
rsm
mov
xchg
xchg
jno
push
aas
outsl
sbb
and
or
or
das
addr16
ret
inc
in
out
pop
push
jg
clc
add
leave
add
pop
inc
cmpsl
push
and
cwtl
movsb
std
dec
pop
mov
dec
mov
xor
dec
ja
or
add
test
into
pop
push
inc
popa
pop
add
fcompl
sti
sahf
mov
jmp
js
and
jbe
addl
mov
aaa
or
mov
arpl
and
sbb
mov
mov
out
lds
push
ljmp
push
xlat
repnz
sbb
lea
popa
jg
jmp
popf
mov
cmp
mov
fwait
stos
test
jge
xor
sti
test
jl
jl
bound
inc
jo
rolb
push
ss
loope
mov
fildl
mov
xchg
inc
ficomps
jnp
data16
leave
push
adcl
push
in
in
or
js
rorl
movsl
loopne
dec
jp
or
rolb
int
cmp
sbb
cmp
inc
sbb
push
and
xor
push
mov
push
mov
rclb
mov
add
xor
lods
fmull
pop
pop
inc
sbb
add
jp
jo
lock
mov
es
cltd
imul
ret
mov
shr
dec
andnps
mov
and
sahf
mov
push
adc
outsb
stc
out
xchg
jp
xor
stc
addl
loope
xchg
jp
je
outsb
in
enter
xor
outsl
sub
mov
cld
pop
mov
in
xor
aas
lret
repnz
and
test
mov
or
pop
sbb
mov
adc
loope
imul
pushf
mov
push
adc
mov
xchg
xlat
cmpsl
in
xchg
and
icebp
pop
lea
push
push
mov
test
push
xlat
push
dec
sbb
sarb
clc
mov
mov
dec
inc
sbb
add
movsl
pop
sahf
cli
sub
movsl
push
mov
aaa
jo
inc
loopne
mov
push
ret
cmp
mov
sub
fs
xor
lret
pcmpeqw
outsl
mov
jns
lahf
movsb
incl
js
loope
jns
cs
out
roll
sbb
gs
in
mov
jmp
out
fisttpl
or
push
jmp
arpl
insb
or
inc
jno
movsb
mov
mov
frstor
sbb
test
mov
jnp
jno
xchg
icebp
in
sahf
decb
iret
pop
pinsrw
scas
insb
sahf
daa
sbb
es
aam
movsb
jnp
jo
sub
out
sub
cmp
sbb
push
or
ds
pop
mov
clc
and
adc
mov
and
cmpsl
in
cmp
cmpb
cwtl
test
dec
dec
movsb
jno
popf
rorl
adc
and
das
cmp
adc
mov
popf
jmp
jg
std
sub
xchg
mov
fiaddl
pushf
cmpsb
iret
and
ret
sbb
pushf
mov
push
and
addr16
std
call
sahf
stos
int3
fistpll
dec
sbb
mov
pop
das
sbb
pop
call
push
sbb
push
xchg
pop
mov
imulb
repnz
mov
mov
leave
pop
ss
ljmp
and
rorl
jecxz
enter
js
push
js
jg
push
ljmp
pop
das
test
mov
mov
test
mov
sub
out
jge
rolb
lods
jmp
aaa
setbe
or
cmp
cmpsl
pop
ja
adc
addb
sbb
sbb
cmp
les
fisttps
into
int
aas
ror
into
cmc
ja
std
ja
jns
es
cmp
cltd
or
daa
adc
cltd
in
icebp
dec
mov
das
cmp
push
test
fsubs
rcll
xor
mov
imul
ljmp
ds
int3
adc
push
mov
in
mov
and
adc
ss
imul
adc
sbb
insl
call
cmp
cmp
cmp
nopl
xor
sbb
pop
fs
sub
jmp
sbb
ds
fdivrl
cmp
pop
add
nop
and
testl
inc
sub
sbb
sub
sub
push
orl
iret
test
in
scas
mov
mov
cs
push
gs
or
dec
loope
cmp
into
in
pop
popa
cmp
fsts
test
sub
out
aam
or
dec
pop
adc
push
jmp
js
fisubs
mov
mov
shll
test
shl
lea
mov
pusha
jo
push
cmpsb
xor
lods
mov
and
insb
xor
aad
popf
ret
imul
mov
pop
call
pop
push
mov
fistl
sub
sub
clc
shrb
mov
xlat
pop
adc
pop
das
jge
jmp
xchg
cld
ret
movsl
shl
in
lret
dec
lret
nop
outsl
sub
ret
xchg
mov
popa
sti
idivl
cli
out
mov
mov
push
nop
jb
mov
lock
sbb
xchg
jecxz
lock
shrl
dec
daa
into
jmp
jle
sub
adc
in
xchg
or
xchg
lcall
dec
push
mov
lds
rcr
pop
inc
mov
push
xchg
clc
or
rcrb
stos
rcll
inc
dec
and
pop
pop
lods
mov
test
and
push
out
out
cmp
push
add
call
mov
stos
pop
pop
xor
or
adc
stc
aad
pop
or
dec
loope
loopne
popf
lret
or
jl
lea
jg
std
jg
enter
and
in
mov
mov
sub
mov
data16
add
or
call
pop
inc
xchg
mov
sub
cli
and
inc
pushf
test
mov
test
fcom
jle
xchg
iret
out
clc
mov
outsl
xor
mov
jne
mov
fistps
push
mov
xor
jbe
mov
and
xchg
pop
mov
mov
inc
mov
loopne
add
push
jbe
inc
xchg
addr16
pop
sbb
ss
push
fdivs
js
nop
mov
mov
rorb
cmpsb
jnp
pop
mov
push
mov
adc
mov
jbe
mov
loopne
mov
sti
inc
sbb
jb
cmpsb
popa
mov
xlat
cwtl
pushf
jnp
sub
push
pushf
dec
out
pop
fmull
imul
jns
or
nopl
sub
adc
and
mov
cmpsl
fiaddl
and
xchg
push
push
je
mov
ret
mov
pop
cmp
in
xor
sub
aas
je
lock
std
add
cmp
xor
movsl
insb
jo
cli
push
leave
jge
push
cli
xor
pop
js
out
ss
rorl
stos
pop
push
insl
sbb
pushf
mov
adc
push
out
pusha
ljmp
dec
xlat
mov
xor
sbb
imul
push
or
scas
iret
inc
pop
sbb
js
pop
mov
xchg
inc
cmp
pop
mov
nop
mov
sarb
in
pop
push
jns
js
das
jae
daa
mov
mov
sbb
roll
lret
jmp
mov
int
pop
mov
sti
jne
jo
pop
or
outsb
push
sbb
pop
ljmp
sbb
rorb
mov
pop
adc
loop
pop
out
jae
loopne
jae
in
xor
repnz
push
cmpsl
dec
inc
cmpsb
fadds
jb
cmpsl
fidivrl
lds
loop
je
inc
sub
add
aam
cs
lcall
pop
xor
and
lds
jbe
cmpsl
jnp
cmp
mov
or
and
lcall
cs
fsubs
das
and
and
pop
pusha
int
mov
je
push
pushf
mov
scas
xchg
loope
lret
jbe
jb
push
out
xor
mov
out
jg
fldenv
mov
movsl
mov
xchg
test
das
jl
mov
xchg
shlb
jl
lock
les
fldt
push
jmp
xchg
das
fmull
mov
adc
in
sbb
daa
imul
add
mov
inc
movsb
loope
pop
jo
cmp
sbb
sub
roll
xor
xor
std
mov
lret
std
cmpsl
xchg
test
enter
gs
dec
mov
fmull
lods
inc
add
test
dec
pop
mov
fsubr
fcoml
aad
xor
xchg
jno
jge
mov
jecxz
adc
mov
xchg
mov
push
imul
daa
fcomip
mov
cli
mov
cmp
pop
inc
pop
sbb
jge
fmull
mov
jecxz
out
pop
fsubr
pop
rorl
mov
or
popf
jae
xor
imul
cmpsb
pop
std
and
jge
sub
mov
jle
sub
sbb
ss
int
push
shrl
dec
add
push
enter
mov
xchg
pop
fisubrs
daa
movnti
mov
lock
xchg
js
pop
push
fistpll
cld
out
lods
shl
stc
mov
mov
shl
push
inc
push
adc
sub
cmp
xorl
and
adc
notl
fsub
jecxz
popa
cmp
gs
xchg
mov
subl
outsl
mov
xlat
jl
pop
dec
out
add
cmp
adc
clc
popa
jp
fnstenv
stc
shl
sub
aas
and
nop
mov
inc
outsl
add
or
insb
pop
int
jmp
and
jp
push
fucom
out
mov
push
lds
jle
lds
xchg
push
push
loopne
leave
ljmp
xor
jae
cmp
xchg
imul
xchg
mov
aas
add
mov
cmpsl
mov
inc
dec
mov
xorb
push
test
adc
repz
add
inc
cmp
or
movsb
pop
mov
sbb
je
dec
icebp
push
xor
mov
in
dec
mov
and
push
hlt
dec
repz
stos
loope
or
fwait
out
sub
xlat
or
cmp
mov
and
iret
or
int3
sub
and
int3
lea
mov
jmp
out
sbb
test
lods
bound
xor
int3
loope
mov
arpl
push
mov
insl
cmpsl
aas
in
repnz
mov
outsb
rcll
int
int
addl
xor
push
insb
mov
out
sbb
jne
sub
mov
repz
xor
js
jbe
loopne
mov
mov
clc
das
sbb
cwtl
call
nop
or
leave
fldl2e
sbb
jnp
call
lock
jle
es
cmpsl
xor
lcall
jmp
test
insb
stos
inc
lock
scas
push
or
add
out
stos
xchg
and
clc
fdivs
add
and
jle
mov
std
pop
les
jno
outsb
lret
test
mov
int
sub
test
push
data16
insb
push
cmp
jmp
inc
into
add
je
jb
pop
add
nop
iret
and
mov
out
ss
hlt
cmc
and
movsl
xor
mov
ss
xor
fildl
imulb
sahf
call
fstps
mov
insl
xor
jnp
adc
outsb
jle
push
je
loop
mulb
outsl
push
cmp
inc
push
rcr
mov
lods
push
outsb
lahf
shlb
xor
iret
fucomip
sub
push
mov
ror
ja
in
call
mov
aaa
lock
call
loopne
dec
rclb
notb
cld
sahf
sbb
cmp
add
jle
fistps
push
xchg
in
je
jno
cmp
push
xchg
aam
or
cmc
xchg
out
lock
out
fistl
scas
adc
pmaddwd
inc
mov
dec
inc
fstpt
dec
movsb
enter
and
pushf
pushf
pop
jo
fiaddl
movsb
mov
push
push
not
aaa
xchg
cltd
mov
push
test
imul
es
cmp
loop
mov
cmp
lea
ss
fcmovne
push
ficomps
jb
int3
movsl
mov
jbe
ror
push
out
mov
imul
lcall
jmp
ljmp
aam
jo
push
mov
ret
pushf
fnstenv
dec
out
mov
mov
mov
repz
out
shl
mov
mov
mov
sahf
dec
mov
addl
icebp
sbb
push
mov
mov
and
daa
jge
cmc
xchg
insl
fcompl
out
mov
movsb
out
xchg
fdivrs
sub
clc
popa
add
add
dec
pop
jbe
mov
cmp
vpunpckhwd
or
icebp
dec
mov
enter
sti
jne
pmaddwd
addr16
mov
cmp
mov
jnp
addr16
inc
ja
jmp
or
mov
sub
mov
dec
xor
test
mov
adc
and
or
decb
push
cmp
xor
fidivrl
pop
sbb
sub
in
inc
pop
aas
scas
fstps
aad
xor
inc
imul
jg
add
orl
add
rcr
clc
iret
and
pusha
pop
aaa
xlat
gs
xchg
mov
iret
daa
shlb
sub
arpl
outsb
cmp
xor
mov
int
mov
inc
cmpb
jp
int
into
jle
adc
mov
paddusb
cmp
setl
je
fmull
fcoml
fdivrs
xlat
xor
xchg
clc
pop
pop
rorb
mov
bound
ss
in
mov
mov
inc
ret
decl
sub
psubd
cmp
fimull
add
in
sar
int
sub
pushf
test
ret
mov
mov
fbstp
pop
push
xchg
cmp
ret
xor
mov
jne
adc
enter
ja
std
jle
add
inc
dec
push
shr
out
out
stc
jmp
mov
cmp
call
push
inc
sahf
fmuls
rcll
mov
shl
dec
js
les
jnp
push
jno
push
repz
popa
mov
and
bound
aas
bound
lret
adc
cs
and
mov
pop
cld
mov
inc
pushl
and
adc
div
or
popa
mov
fcoms
or
jno
inc
cltd
add
idivl
popa
add
inc
popa
stc
inc
sub
or
and
mov
or
rorb
sti
test
leave
stc
cmpsb
lret
mov
lds
out
std
dec
shlb
cs
pop
add
call
pop
jle
xchg
sbb
cmp
movsb
mov
stos
cmp
ror
jge
in
xchg
aaa
cli
ja
cld
cmp
jle
xor
dec
fnstenv
jecxz
mov
pushf
xor
pop
mov
jg
outsb
inc
ljmp
cld
and
mov
mov
inc
cmpsl
gs
adc
mov
aas
ficompl
push
out
mov
pop
imul
into
ljmp
stc
inc
cwtl
aas
out
mov
dec
cs
or
frstor
idivl
nop
mov
pop
or
cmp
sbb
inc
loop
inc
xchg
sbb
mov
out
mov
dec
mov
outsl
inc
jle
out
mov
pop
lock
gs
mov
cmp
in
dec
je
rolb
pop
and
in
dec
ret
push
cs
das
lods
insl
pop
mov
sub
call
fidivrs
lahf
adc
in
cli
mov
jno
int3
ljmp
popf
inc
add
mov
xchg
stos
popf
aaa
lds
in
xchg
pop
jns
add
jmp
mov
leave
popa
mov
bnd
aas
bound
pop
andl
cmp
bound
leave
imul
push
shl
mov
loope
sbb
or
sub
sub
in
inc
cmp
mov
leave
fs
icebp
sub
idiv
push
jo
xor
dec
jecxz
xor
test
pop
in
lcall
call
sub
cmpsb
jbe
or
inc
jae
or
xchg
int
xor
movsl
jae
jno
loopne
pushf
mov
inc
sub
pop
push
leave
sub
inc
rclb
xchg
packsswb
ret
ret
xor
les
ds
leave
iret
jecxz
push
jbe
cmp
cltd
add
rclb
add
mov
aad
mov
ficoms
inc
cli
cld
in
ret
mov
adc
ror
std
mov
push
mov
hlt
jg
lret
ds
xchg
jae
pop
cmc
cli
mov
subl
sub
int
in
scas
inc
push
xchg
add
cmp
jno
sub
mov
movsl
pop
in
imul
imul
lcall
iret
repnz
mov
ss
sub
fistpl
pushf
lahf
repz
push
outsb
cwtl
adc
cltd
xchg
fnstsw
dec
int3
cmp
or
sarl
mov
fwait
ret
ljmp
rcrb
insl
aad
in
cmp
ja
dec
xor
mov
out
test
jge
das
fcomi
mov
xchg
sub
mov
inc
lods
rclb
ja
adc
lds
cmp
jle
pop
cwtl
pop
fwait
loop
out
test
loop
sub
hlt
mov
stos
orb
mov
dec
incl
idivl
je
sub
and
ss
cmc
inc
jle
test
div
aad
or
dec
cmp
loop
ljmp
jecxz
xchg
or
call
negl
push
mov
adc
aaa
jo
cmpsl
out
sub
test
dec
and
sbb
stc
jno
mov
xor
inc
push
adc
hlt
in
popf
jno
pop
add
outsb
je
shll
jne
incb
pop
mov
icebp
inc
int3
push
ss
stc
jb
adc
cmp
mov
inc
jg
pop
sbbl
rcl
jb
xchg
int
mov
sub
lock
or
call
dec
mov
lret
xchg
lock
xchg
mov
dec
aad
jns
in
loope
popf
or
ja
inc
inc
push
shlb
push
popf
push
push
fisubs
or
xor
push
imul
cmpsb
pop
insl
vphsubbw
sbb
jae
jecxz
mul
fmul
jo
icebp
ret
add
and
push
cmp
inc
aad
dec
nop
mov
mov
lret
fisubs
cmp
into
cmpsl
pop
mov
pop
sahf
mov
cmp
or
xchg
push
in
mov
pop
fdivl
ret
in
cli
mov
fwait
or
stc
pop
and
xchg
insl
int3
jbe
xor
stos
les
mov
push
les
and
shlb
sub
and
push
dec
mov
pop
or
mov
int
sub
push
mov
inc
loop
fisubrl
jmp
rcrl
mov
int3
push
push
xchg
scas
pop
in
or
inc
in
test
notl
pop
popl
lods
fidivs
cmp
out
imul
cmp
mov
mulb
dec
enter
in
mov
out
imul
sub
bound
jae
or
sbb
mov
sbb
inc
ret
daa
fisubl
mov
mull
xor
push
inc
cmpsb
lahf
dec
cli
sbb
das
arpl
frstor
adc
imul
in
paddusb
jge
add
stc
mov
adc
insb
jnp
or
adc
xlat
jge
test
sbb
and
xorb
dec
jp
mov
xchg
arpl
push
push
mov
jg
inc
sub
dec
mov
je
xchg
enter
loop
sub
cmp
loope
scas
dec
push
scas
push
dec
push
daa
enter
es
push
cwtl
cmp
add
lret
add
setnp
popa
leave
ljmp
shlb
pop
outsl
mov
cmp
dec
inc
jo
mov
pop
push
rolb
cmpsl
insl
out
pop
mov
shl
out
outsl
dec
stc
movsb
or
rcrl
popa
cmp
push
fs
inc
push
mov
xchg
or
inc
mov
xchg
andb
mov
fwait
mov
pop
lret
jne
inc
or
push
jns
and
sub
loop
cwtl
jge
xchg
xorb
sarb
mov
sbb
mov
dec
cld
stc
pop
aad
sti
test
mov
mov
xorb
out
popf
lcall
or
call
add
mov
adc
push
in
adc
in
rcll
iret
ret
mov
xchg
xlat
mov
inc
xchg
roll
inc
fiadds
jmp
pop
gs
lret
jbe
inc
xor
outsl
jae
cmp
xlat
call
repz
bound
lock
jb
fs
in
loopne
insl
jmp
xor
stc
add
cmp
jb
pop
rcrl
daa
rol
cmc
mov
jecxz
orl
mov
es
sbbb
subl
scas
fsubp
pop
mov
sbb
or
fsubrl
mov
je
je
popf
sti
ljmp
mov
dec
ret
pop
sarl
xchg
push
sti
fldl
mov
mov
lret
lods
jp
xchg
cmp
push
adc
sbb
fwait
inc
xchg
dec
pop
jmp
repz
enter
mov
mov
xchg
lods
into
aam
push
sub
pop
mov
xchg
sbb
lret
js
popf
adcb
out
pop
xchg
daa
dec
fs
sub
jbe
cmp
push
dec
int3
dec
cmp
ja
ret
mov
icebp
mov
sahf
testb
push
arpl
jge
and
sti
movsb
cmp
dec
ja
push
adc
jecxz
scas
rclb
cs
into
fnsave
dec
out
jle
inc
xor
push
sbbb
adcl
and
stos
arpl
leave
call
jns
push
into
sub
stos
test
ljmp
cld
lahf
sahf
push
inc
cmpsb
roll
pop
stos
aas
xchg
mov
inc
repnz
xor
xchg
pushf
sbb
ret
mov
jno
inc
fidivrl
mov
cwtd
inc
inc
gs
ret
stos
cmpsb
js
dec
insb
cmp
movsl
jg
push
in
adc
cmpsb
es
and
mov
iret
sub
push
loop
fstpl
inc
push
inc
sti
repz
cwtl
xchg
cmp
xchg
popa
test
push
arpl
add
insb
inc
aas
pop
ds
out
stc
jo
sahf
mov
lea
cmp
popf
repz
sub
cli
mov
dec
jno
xchg
xor
cmc
mov
pop
push
xchg
shl
movsb
push
dec
fdivrl
daa
pop
push
orb
add
push
xchg
push
jns,pn
xchg
sbb
stos
pop
sbb
sbb
lods
popf
jno
shr
leave
fsubl
stc
repz
cmp
add
jg
mov
jno
lret
cmp
lea
push
pop
xchg
mov
mov
aaa
push
rcrl
mov
out
mov
xor
mov
popf
insb
sbb
aam
insl
dec
scas
ret
sub
bndstx
mov
xchg
mov
jmp
pop
rcrl
faddl
popa
push
ret
les
sub
fdivs
pop
jnp
in
pushl
push
push
xor
hlt
fdivp
add
insl
inc
out
je
pop
mov
jnp
cmc
std
add
in
or
push
mov
arpl
lea
ret
cmp
aaa
lods
xchg
cmp
cmp
push
mov
add
pop
sbb
test
pop
mov
int3
xchg
dec
stos
push
mov
shll
adc
jno
add
push
jg
or
insl
sub
and
adc
shl
mov
sub
ffreep
bound
fnsave
ja
pushf
and
loope
add
pusha
and
pushf
cmp
js
adc
jge
push
dec
lret
dec
js
inc
jp
mov
lock
shrl
pop
mov
sub
mov
lahf
lods
xor
pop
and
int
fisttpll
orl
hlt
push
sub
in
clc
sub
mov
repnz
loopne
pop
dec
das
jno
and
add
pop
sti
mov
dec
sbb
fstps
cli
jae
pop
jecxz
fisubs
sub
xorl
sub
push
int3
pop
test
into
cmp
lahf
push
pop
push
and
jle
mov
aaa
stos
add
test
in
leave
lcall
aas
push
bound
jmp
dec
out
sahf
cmpsb
mov
mov
rcrb
jae
repz
cltd
xor
data16
mov
xor
xchg
xchg
and
mov
filds
lds
je
sub
decb
notb
mov
nop
dec
xlat
sub
decl
cmpsl
xor
jae
push
pusha
test
nop
hlt
imul
fadds
test
shll
loope
mov
push
inc
cli
scas
pushf
sti
pop
xor
stos
sbb
neg
pop
xchg
sub
loop
lock
in
dec
sub
sarb
dec
inc
repz
sub
jbe
push
fdivp
or
jne
icebp
out
inc
out
out
inc
adcl
mov
and
jb
icebp
sub
in
add
js
add
fdivrs
and
hlt
addl
daa
mov
loop
xchg
sahf
iret
in
or
nop
or
cmp
push
ljmp
popa
mov
fsubs
dec
cmpsb
xor
lods
lds
push
enter
or
ret
fldenv
and
test
sub
popf
push
lret
cmp
test
or
cmp
cmp
xchg
cld
test
and
mov
mov
push
test
jl
popa
xchg
push
mov
inc
test
cmpsb
rcr
jl
inc
sahf
stc
pop
cmpsl
pop
lds
movsl
mov
notl
cwtl
pusha
mov
addr16
gs
icebp
dec
or
adc
inc
out
mov
dec
jge
js
mov
stos
ds
mov
xchg
pop
rorb
fadds
jg
loopne
in
xchg
pop
lret
cmpsb
nop
or
jmp
clc
call
lret
mov
mov
inc
mov
iret
mov
orb
and
and
bound
shlb
fs
cmpl
lret
mov
js,pn
ja
cmc
cmp
shrl
mov
inc
popa
shlb
imul
lret
daa
cs
mov
leave
stos
xor
xchg
sub
xor
jne
setg
xchg
enter
leave
and
sti
cmpsb
jge
or
test
inc
mov
fdecstp
sub
fs
pop
mov
adc
pop
jns
add
dec
mov
dec
movsl
pop
rcll
ja
das
outsb
aaa
adcl
adc
int
aas
pusha
mov
dec
sbb
out
call
dec
out
or
mov
sbb
dec
enter
push
lcall
jl
ds
sub
mov
test
cld
ss
xchg
inc
add
push
dec
add
jbe
pop
jl
ret
and
loope
jbe
or
sbb
mov
fwait
sbb
and
rcr
lret
and
rcll
mov
dec
sti
mov
xchg
and
add
xchg
jge
fisttpll
iret
xchg
push
jb
popa
push
rclb
push
rcll
in
cmp
adc
je
clc
hlt
pop
out
or
pop
pop
jecxz
out
out
mov
dec
pushf
in
popa
jns
jg
xchg
lret
dec
in
lock
jl
movsl
mov
push
add
jns
sbb
fsubrs
insb
movb
push
call
imul
lock
jge
xor
lret
add
fwait
and
ss
cli
push
sbb
icebp
and
sub
inc
xchg
jb,pt
js
mov
jle
dec
fisttps
sahf
cwtl
sbb
and
les
jbe
fs
loop
aam
fiaddl
push
push
mov
loope
or
loopne
pusha
inc
int
jg
pop
fisubrs
outsl
sti
shll
lahf
faddl
loopne
ret
insl
mov
adc
sub
mov
cmp
mov
dec
sti
mov
xchg
and
call
sub
aam
jb
mov
scas
test
dec
test
pop
adc
ret
into
mov
frstor
cli
cmc
test
das
imul
mov
mov
and
lret
push
in
dec
pusha
js
push
jnp
in
scas
xor
mov
pop
sar
dec
xchg
adcb
imul
push
stc
mov
or
je
mov
jbe
and
icebp
jno
in
mov
inc
jnp
sbbl
addr16
dec
cmpsb
mov
pop
imul
sub
adc
aaa
push
and
sub
les
popf
jecxz
add
movsb
cmp
popf
mov
add
mov
jne
clc
mov
into
lods
shl
inc
sub
lock
xchg
dec
cmpsl
sbbb
mov
fcom
into
out
aaa
and
repz
arpl
push
shrl
xchg
adc
das
jp
cmp
push
rcrb
outsb
pop
mov
pop
movsb
sarb
mov
bound
lods
movb
xlat
fstpt
int3
repz
mov
cmp
mov
fnstcw
mov
mov
in
dec
in
frstor
sbb
push
jo
shrl
push
fcoms
lea
dec
js
in
mov
lods
das
push
imul
mov
js
fwait
test
popf
or
push
dec
xchg
mov
xor
cmp
mov
cmp
jecxz
ret
mov
xor
pop
cmpsb
xor
or
nop
test
cmp
ja
jns
mov
iret
cli
int3
and
add
rclb
setge
push
loop
rcrb
mov
pop
or
repnz
dec
pop
sub
sbb
mov
pop
inc
adc
popa
lods
mov
cld
mov
outsl
imul
fnstcw
adc
and
xor
fisttpl
test
sti
inc
in
enter
repnz
aam
xchg
mov
cs
ljmp
mov
outsb
ds
lret
call
insl
push
mov
or
push
adc
inc
mov
out
loopne
test
ljmp
lds
sbb
cltd
sbbb
or
adc
or
pop
push
mov
mov
out
outsb
call
leave
xor
cld
dec
faddp
cmc
fcom
xor
mov
jmp
gs
pop
js
adc
dec
test
sub
jo
push
enter
sub
sub
xchg
and
cmp
pop
stos
ret
mov
cmp
and
push
mov
clc
xor
stos
add
xor
sbb
cwtl
adc
sbb
add
cs
sub
lahf
repz
std
sbb
pop
add
mov
inc
mov
xor
lret
jge
int
pop
into
movsb
loopne
cmp
xor
sub
mov
dec
clc
lret
mov
mov
xor
gs
in
mov
jp
in
mov
popf
fsts
lahf
scas
out
mov
xor
or
pop
popf
pop
cwtl
sbb
out
and
rclb
or
mov
arpl
jmp
hlt
sarl
jecxz
aas
loop
pop
pushf
bound
add
in
idiv
and
in
lcall
or
lret
clc
fisubl
mov
int3
ja
insl
inc
stc
loopne
ss
pop
lret
mov
sub
inc
in
jmp
out
mov
lret
or
dec
scas
and
adc
add
call
mov
subb
xorl
add
sahf
pop
push
fsubr
outsb
adc
mov
xchg
test
xor
or
shlb
lret
cmp
sbb
pop
sub
adc
in
pop
imul
pop
ret
leave
das
jmp
push
pop
mov
aas
psrad
lahf
arpl
jbe
jg
pop
sahf
dec
iret
and
or
fisttps
das
sbbl
mov
cmp
xchg
sbb
and
pusha
or
popa
add
xchg
lods
push
test
mov
inc
fisttpl
mov
call
sti
jl
jg
fs
fists
xchg
pop
add
adc
scas
pushf
out
cmp
push
test
or
pusha
mov
test
mov
mov
arpl
out
cwtl
inc
xchg
pop
add
cmpl
xor
xchg
scas
xchg
ljmp
popf
ljmp
jno
sbb
mov
test
sub
repz
shll
int
pop
roll
xchg
lods
addr16
mov
out
mov
jmp
mov
dec
shr
jae
cli
inc
push
mov
movsl
mov
addr16
sarb
mov
pop
loope
test
fcompl
test
adc
xchg
es
xchg
test
popf
adc
andl
pop
or
xchg
inc
loop
inc
dec
mov
lock
push
add
ret
popa
insb
sub
lock
fisubrl
lret
inc
jmp
sub
add
mov
adc
push
sub
call
push
jne
cmpsl
dec
in
js
and
adc
sub
mov
push
push
mov
lods
dec
cmpsl
bound
loop
fs
xchg
sub
cmp
jo
das
inc
fsts
sbb
mov
xchg
mov
push
jge
in
rolb
push
jle
mov
push
push
rol
push
xor
pop
cli
fiaddl
xor
loope
cmp
mov
or
repnz
sti
sbb
xchg
or
add
inc
inc
cmp
dec
mov
and
inc
or
cltd
insb
jo
xchg
fsubs
mov
xchg
fcoml
jg
lret
mov
add
adc
fsub
incb
jle
stos
push
xor
pop
and
jbe
jbe
sti
add
pop
inc
pushf
imul
repnz
jns
mov
push
push
addr16
sub
jmp
sbb
jo
lea
das
pop
jbe
loope
cmp
ret
stos
and
or
push
push
out
lods
mov
pop
test
pop
push
aam
add
mov
jno
xchg
stos
adc
mov
xor
fnstenv
sub
dec
push
pushf
mov
sti
inc
insb
call
sub
inc
mov
xchg
fdivs
dec
arpl
test
addr16
mov
out
sti
ret
or
dec
cmp
mov
xor
jp
pusha
cwtl
lds
pop
cmpsb
loope
lcall
push
imul
xchg
push
mov
cwtl
add
xchg
mov
add
in
xchg
cmp
add
daa
movq
add
ds
loopne
xor
jno
cmpsb
aam
lahf
sbb
mov
push
fstpt
clc
jp
pop
or
xchg
shl
lods
jbe
mov
mov
repnz
add
repnz
fwait
leave
ret
stos
gs
sub
ss
jne
je
in
rep
jnp
rcrb
add
mov
lcall
insb
xchg
xchg
mov
outsb
mov
add
in
scas
pushf
fwait
cmpb
mov
out
and
adc
push
sub
les
pop
ret
add
fdivrl
pop
loope
test
lret
or
push
shlb
shll
loopne
push
in
inc
add
cmp
mov
pusha
lahf
std
aas
xchg
mov
mov
in
lods
cwtl
push
andl
push
mov
mov
pop
xchg
mov
jbe
and
jge
je
fiaddl
mov
push
xor
shrb
cli
mov
rorb
rcl
cld
sub
clc
int
mov
ret
cmc
cmpb
repz
xor
repz
mov
dec
add
lret
popf
fldt
sub
mov
and
mov
cmp
stos
pop
sbb
fdivl
popa
push
xor
inc
icebp
std
adc
pusha
xchg
jnp
jnp
lods
mov
jae
leave
popa
and
stos
sub
adc
add
test
jo
push
imul
xacquire
loope
xor
dec
jns
in
mov
dec
js
into
jnp
aaa
and
cmpsb
fisttps
cmc
insl
pop
mov
adc
nop
bound
xchg
nop
xchg
xchg
mov
jle
and
fisubs
adc
xchg
add
add
ss
scas
jo
sub
insb
pusha
push
mov
pop
push
pop
loope
sbb
icebp
loope
daa
mov
mov
sub
int
pusha
stc
cmpsb
imul
dec
push
dec
jp
inc
rorl
in
pop
push
icebp
in
decb
lea
lock
mov
call
mov
fstpl
fs
fistpl
test
pop
cmpsb
jne
frstor
pop
and
fwait
jo
xor
add
cwtl
lods
push
lds
out
mov
xor
add
pop
or
mulb
or
add
mov
xchg
mov
push
cmc
sbb
cmc
call
fldcw
mov
lods
sub
enter
mov
in
mov
std
scas
insb
dec
popa
mov
arpl
popa
add
jbe
rcrb
movsb
pop
pop
fisubs
jmp
mov
ja
lcall
add
pop
or
fnstsw
add
pop
rcr
add
int
out
out
xchg
push
mov
xor
xchg
and
and
mov
xchg
pop
sub
mov
lods
jne
arpl
gs
mov
fisttps
inc
add
outsb
je
mov
pop
cwtl
les
pop
cld
xor
sub
adcl
out
mov
mov
in
das
mov
or
scas
add
dec
add
gs
hlt
stos
mov
dec
shrl
mov
mov
cwtl
xor
inc
mov
outsl
lea
mov
inc
jmp
inc
lahf
add
add
cmpl
fcmovb
cmp
inc
or
repz
out
cwtl
aaa
mov
dec
inc
popl
add
cli
mov
inc
mov
xor
fists
mov
adc
cld
ljmp
xor
loope
mov
nop
mov
jns
jb
pusha
mov
or
adc
jae
adc
adc
pop
test
pop
dec
or
mov
test
mov
pusha
ljmp
mov
and
pusha
jnp
add
inc
jo
inc
cmc
jb
stos
xlat
movl
xchg
mov
jae
sbbl
ja
hlt
sub
and
icebp
mov
repz
sti
fldcw
lcall
mov
inc
xchg
movsl
mov
test
loopne
xor
or
mov
push
scas
or
out
sahf
add
inc
nop
sbb
lock
inc
xor
movsl
sbb
or
lock
loopne
push
fisttpll
notl
out
inc
cld
push
mov
jge
js
jno
jb
or
mov
or
popf
inc
je
jo
popa
hlt
adc
movsl
faddl
repz
movsl
add
outsl
push
pop
sbb
xorps
mov
jecxz
insl
sub
mov
icebp
jge
call
cli
stos
adc
push
aas
sarb
xor
dec
inc
adc
leave
in
sti
add
stc
adc
sub
add
clc
fsts
inc
sub
int3
push
push
fldl
inc
lret
jo
adc
test
notl
add
sbb
insb
fxch
hlt
mov
fimull
xchg
fisubs
in
ljmp
sti
mov
icebp
cmp
iret
xchg
cmpsl
adc
ja
sbb
fnstcw
sbb
stc
or
xor
gs
pop
in
fs
jae
jecxz
cmpsl
pop
int
sahf
pop
jp
lds
cs
mov
lods
mov
cmp
fwait
shrl
roll
mov
inc
paddb
shlb
add
lock
pop
ljmp
ja
outsb
xchg
mov
ficomps
sarl
and
and
mov
jl
mov
js
sarl
xor
in
stos
rcrl
test
dec
outsb
lock
and
mov
sbb
insb
and
mov
cli
pushf
pop
repnz
pop
in
add
mov
cmp
mov
sbb
and
popf
jne
js
cwtl
cmp
imul
test
fldl
cmp
xlat
inc
sbb
int3
jns
xchg
adc
and
aad
jns
icebp
int3
xchg
pop
test
cmp
pusha
adc
push
outsb
and
pop
jge
stos
rorb
mov
mov
xchg
fs
shrb
cli
sub
sbb
sub
movsb
mov
cli
xchg
dec
and
sbb
fdivrs
xchg
cmpsl
add
sbb
xchg
insb
xchg
add
cmp
adc
sbb
add
repnz
repnz
cmpsb
or
std
fadd
add
mov
jns
jo
clc
imul
lods
mov
inc
hlt
call
xor
jno
inc
inc
mov
aam
daa
test
stos
adc
ffree
mov
jp
and
dec
cli
testl
xchg
or
or
cmp
out
cwtl
jle
jnp
mov
and
test
dec
es
insl
imul
insl
add
pop
out
movsl
cmp
jae
roll
mov
clc
lock
cli
ljmp
mov
inc
ret
mov
out
test
les
popf
and
jg
lret
xorl
nop
gs
loopne
pop
and
bound
fwait
or
ret
pop
jbe
add
mov
cmp
xchg
add
cmpsl
sbb
rcr
jbe
jl
xchg
push
mov
loope
fisttps
pop
sbb
lock
das
insb
add
sub
xlat
aaa
lock
insl
adc
not
int3
stos
and
inc
xorb
and
ljmp
movsl
nop
test
call
jb
push
movsl
dec
mov
int
xor
sub
dec
sti
fsubl
imul
movsl
and
sub
mov
push
shl
lret
push
sub
jne
imul
xchg
adc
out
fistps
inc
pusha
dec
inc
add
mov
add
mov
rorl
sub
mov
sub
in
pusha
pop
mov
add
xchg
cli
aas
stc
push
daa
sbb
push
je
lret
lea
sub
mov
pop
xor
rcr
fldl2t
lcall
pop
loop
and
lods
or
mov
lret
pop
jp
or
aam
xchg
and
or
lods
inc
je
push
frstor
and
push
sub
add
mov
mov
mov
dec
push
cmp
aam
lret
xor
ss
cmc
cmp
insb
outsb
lea
sub
cmp
mov
push
pop
leave
les
into
adc
mov
inc
push
pop
add
mov
mov
mov
lods
and
xchg
mov
test
or
xchg
iret
mov
dec
cmp
out
jnp
sbb
adc
sub
and
and
jle
sub
pusha
or
ret
sub
mov
out
mov
jmp
adc
pusha
mov
gs
stc
idiv
or
into
aam
fistl
std
imul
rorb
loopne
dec
out
mov
push
xor
loope
in
loopne
subb
adc
inc
popf
xchg
fdivs
stos
bound
sarl
mov
sbb
sub
fs
shl
roll
push
shlb
int
test
jg
ret
jnp
mov
push
cmp
nop
ljmp
and
lods
loopne
mov
and
sbb
adc
pusha
adcl
xchg
inc
adc
and
and
mov
in
mov
jbe
mov
rcrl
sbb
fsubp
fiadds
out
out
cmp
mov
mov
inc
dec
ficoms
and
icebp
push
fdivrs
jmp
negl
mov
mov
ljmp
push
rol
scas
xor
sahf
sub
stos
ret
cmp
orb
mov
mov
mov
sbb
cmp
mov
mov
addb
or
pop
xor
adc
rolb
or
outsl
cmp
push
jnp
rcrb
shll
mov
xorl
int3
jge
sub
jl
jns
adc
stos
and
into
inc
or
mov
inc
push
fstpl
std
add
test
cmpsl
and
or
lret
cmpsl
mov
inc
push
sub
gs
test
sbbb
mov
cmp
je
leave
add
sets
mov
push
aad
sub
shll
dec
mov
xchg
xchg
add
or
push
testb
lock
xchg
jl
dec
add
push
out
pop
jae
xchg
inc
sti
xlat
add
bound
xlat
insl
adc
mov
pop
cwtl
mov
sbb
adc
lret
shll
in
and
loop
cmp
mov
xor
int3
pop
sahf
dec
sahf
rcr
jl
loopne
sbbl
adc
es
in
cwtl
lret
mov
mov
fcmovb
sub
push
mov
std
inc
imul
enter
shl
mov
test
insl
loopne
scas
inc
fsts
xor
pop
inc
jbe
mov
js
lea
mov
push
dec
lret
or
movsb
xchg
add
sub
jae
inc
lea
cli
add
inc
adc
repnz
add
mov
xlat
pop
ja
or
pop
imul
mov
xchg
mov
add
jns
sbb
and
adc
dec
dec
jp
loopne
stos
jg
mov
sbb
or
sbb
inc
js
lahf
jbe
test
and
sbb
and
jg,pt
stos
test
jb
mov
xchg
mov
push
pop
cmp
mov
add
mov
and
add
mov
push
enter
mov
pop
pop
and
and
sbb
out
pop
push
mov
arpl
popa
add
push
jbe
in
add
jne
or
pop
lcall
lret
mov
dec
popf
mov
bound
insb
or
dec
pop
in
pop
mov
cltd
sbb
mov
out
inc
push
cmp
jb
mov
repz
push
movsb
inc
inc
dec
push
cmp
scas
repnz
fucomip
cltd
jl
and
pop
dec
jecxz
inc
repz
mov
popf
jg
adc
adc
out
push
or
jae
pop
mov
xchg
int3
les
scas
pushf
mov
mov
rolb
out
add
xlat
adc
sti
popf
mov
jp
scas
cld
xchg
xor
mov
and
aad
inc
mov
lods
jmp
mov
decb
mov
lods
ljmp
es
ds
push
into
call
in
push
test
enter
cmp
inc
cwtl
jb
shlb
pop
push
movsl
xchg
pop
repnz
jmp
cmp
dec
pop
and
ss
adcl
lds
out
aaa
cli
mov
dec
arpl
ret
js
imul
push
pop
in
ret
scas
mov
pop
dec
test
mov
mov
std
sub
cmpsb
xor
cmp
das
and
jbe
insb
push
fs
jecxz
inc
xchg
ds
xorl
dec
lret
mulb
fwait
adc
push
test
lret
adc
mov
mov
push
scas
pop
inc
lcall
jle
dec
sbb
cmp
mov
adc
cs
fwait
pop
add
jp
rorl
jo
fcomi
inc
orb
cwtl
movsb
lock
inc
xchg
mov
subb
out
mov
inc
mov
mov
add
iretw
add
lcall
sbb
push
daa
xchg
mov
jl
jbe
shl
roll
or
outsb
lea
pop
mov
fldcw
mov
push
imul
push
xor
mov
or
or
jbe
cmc
lret
addr16
enter
filds
adc
mov
imul
dec
dec
jg
negb
jbe
pushf
call
and
dec
sbb
dec
xchg
fs
or
or
or
add
mull
aaa
mov
shll
or
daa
mov
hlt
sbb
xor
jecxz
xor
sub
push
add
mov
bound
inc
mov
das
sub
mov
push
movsb
out
lcall
sbb
jp
xor
sarb
jl
imul
cmp
sbb
inc
aas
int3
pusha
xchg
adc
aam
jbe
mov
jne
xlat
lahf
dec
inc
mov
stos
adc
mov
in
loope
out
scas
in
fscale
orl
cltd
loop
push
scas
lcall
lret
dec
fsubrl
cmp
pushf
inc
mov
in
decb
ljmp
popa
aad
xor
xchg
push
gs
sbb
addb
xor
fnstenv
loope
ja
popf
push
cmp
and
or
out
ffreep
fdivl
pop
stc
push
mov
fldl
cwtl
sbb
pop
sarl
or
and
push
in
mov
out
call
xor
subl
inc
lods
mov
sub
mov
in
and
mov
pop
mov
jne
loope
or
mov
mov
bound
hlt
add
add
in
add
mov
cmp
mov
dec
fildl
xor
cli
pop
and
lret
inc
xchg
jmp
add
fldl
and
xor
addr16
jmp
rclb
popf
mov
xlat
fpatan
mov
lret
lods
add
hlt
mov
dec
ret
ds
in
aam
test
div
mov
sahf
daa
cmc
sub
lahf
mov
add
or
add
mov
sbb
in
mov
and
mov
int3
lods
cwtl
faddp
stc
pushf
cmp
mov
cmp
fsub
fcoms
cld
or
test
cs
movsb
jg,pn
mov
add
pop
sbb
mov
ret
mov
dec
sbb
sbb
sbb
ficomps
nop
ffreep
mov
fildll
or
daa
or
int
sbb
or
repz
test
cmp
xlat
push
pop
and
mov
inc
xchg
jne
jg
fistl
mov
jmp
pop
loopne
dec
es
int
pushf
and
jmp
cwtl
ljmp
dec
das
out
mov
adc
mov
mov
mov
mov
sti
pop
mov
add
cld
outsl
sbb
ret
idivl
mov
push
fnstcw
in
sbb
sbb
lcall
jnp
cmp
xchg
popa
dec
iret
lods
add
shll
inc
sahf
add
shrl
sbb
jl
popf
cmc
mov
scas
insl
pop
lea
or
ficomps
adcl
aas
mov
test
movsl
nop
nop
lcall
je
scas
and
mov
lcall
dec
sbb
or
and
sahf
adcl
cli
push
mov
mov
mov
jmp
mov
stos
ret
out
xlat
sbb
ljmp
test
inc
int
sbb
dec
xchg
pop
mov
inc
xor
arpl
fbld
mov
fwait
imul
mov
mov
mov
rol
outsb
das
in
add
paddusb
hlt
and
scas
push
lret
and
push
or
lret
dec
aad
xchg
dec
xchg
push
and
sub
mov
aam
inc
into
stos
iret
push
lcall
std
push
jbe
dec
xchg
out
mov
sbb
add
lock
clc
push
xor
fistps
xchg
rcrb
jne
mov
scas
pop
sub
loopne
push
imul
cmp
js
cld
mov
mov
jmp
iret
adc
or
fistpl
lret
xor
pop
inc
add
sub
inc
or
inc
push
iret
outsb
and
fucomp
sarl
movsb
mov
clc
addr16
ret
je
mov
push
sub
jne
dec
mov
in
jo
jg
sub
sub
ss
mov
or
mov
pushf
mov
lods
ret
mov
dec
repz
mov
jge
mov
xchg
add
das
cmpsb
int
js
std
fimuls
cmp
into
mov
mov
adc
or
in
popl
fs
addb
add
pop
and
sub
cmovnp
xor
nop
sarl
leave
outsl
pop
sahf
xchg
xlat
pop
push
and
test
pop
push
lods
pushf
cmp
xor
push
mov
xchg
inc
sahf
adc
out
push
mov
push
mov
sub
fxch
rclb
movsb
std
test
add
sbb
pusha
or
mov
lods
mov
mov
mov
add
push
daa
rolb
bound
fistpl
push
xchg
daa
or
movsl
xchg
stos
fdivrl
jle
cmp
sub
shll
sub
nop
adc
mov
inc
dec
sub
cmp
cmp
add
mov
sbb
out
movsb
mov
mov
push
dec
stos
pop
mov
inc
movsb
leave
sbb
arpl
test
xchg
mov
mov
mov
pop
insb
pop
xor
std
push
je
mov
sbb
mov
in
push
imul
ret
rolb
mov
xchg
dec
sbbb
daa
ret
jmp
mov
mov
add
faddp
lahf
mov
xchg
jo
xor
jge
aam
mov
inc
mov
cmpsl
call
iret
xor
in
jno
dec
inc
adc
sub
add
xor
jge
shrl
dec
inc
mov
addb
test
pop
dec
in
leave
scas
cmp
sbb
mov
xlat
and
dec
mov
jp
dec
into
pushf
addr16
mov
cltd
hlt
inc
inc
or
pop
jb
bound
and
dec
mov
ret
dec
mov
fwait
pop
aas
scas
sbb
xchg
push
divl
inc
pop
cld
or
jns
dec
rolb
fwait
add
fmuls
xor
mov
andl
mov
fdiv
push
in
and
imul
xchg
lea
out
jmp
push
jns
paddq
repnz
push
das
rorl
sbb
pop
es
pop
das
mov
fwait
push
sbb
mov
mov
dec
daa
in
stc
add
and
inc
xchg
sub
insb
mov
mov
aad
xchg
and
and
dec
je
pop
xor
data16
sbb
lock
mov
fiaddl
inc
push
inc
aas
test
dec
lcall
jmp
int
movsb
dec
cmp
pop
dec
out
inc
ds
mov
aad
dec
imul
insl
jnp
out
test
ja
pop
jg
movsb
in
xchg
mov
sbb
sar
mov
aad
push
sbb
subl
add
fadd
sub
gs
jns
xchg
subl
xchg
mov
dec
or
rcr
jae
jle
shll
cmp
xchg
or
sahf
inc
xchg
sbb
and
adc
fadds
cmp
iret
out
add
mov
mov
add
sub
xor
mov
xor
pop
and
mov
xlat
movb
test
add
sbb
jno
add
shr
xorb
imul
popa
lret
cltd
jl
pop
jbe
push
inc
flds
mov
adc
fdivrs
push
movsl
in
pop
jae
jge
sarb
adc
imul
cmpsl
lret
adc
sarb
outsb
jle
popa
cmpb
mov
xor
outsb
frstor
pop
cmp
mov
push
pop
cltd
add
stc
aaa
sub
mov
sub
das
jbe
sub
cmp
shlb
addl
mov
iret
xor
mov
xor
push
pop
dec
cmpsb
mov
mov
ret
cltd
popf
pop
dec
add
rorl
and
pop
sbb
xor
test
mov
push
leave
xchg
mov
jno
and
push
push
imulb
mov
bound
hlt
sti
push
pop
or
sub
cmp
adc
arpl
lods
call
decl
or
outsl
mov
repnz
test
fsts
jp
inc
adc
pop
push
in
pop
xor
cmp
fistpll
push
add
mov
sarb
mov
jmp
sub
pop
int3
loopne
mov
clc
jg
mov
adc
or
ja
decb
push
cld
sbbl
dec
pop
std
cli
mov
pop
cwtl
fildll
in
or
ret
fidivrs
out
cmc
jge
ficompl
pop
cs
cmp
arpl
sub
cmpsb
jp
mov
xchg
incb
fwait
inc
mov
push
add
mov
xchg
mov
mov
inc
pop
mov
jl
shlb
sub
mov
pop
dec
pop
xchg
fnstcw
and
cmp
dec
shr
mov
jmp
sbb
cmpsb
fprem1
or
hlt
js
mov
dec
xchg
enter
xor
mov
dec
push
mul
lahf
xchg
push
cmp
adc
adc
dec
or
xchg
jb
cmc
mov
mov
out
mov
mov
in
cltd
pop
or
cmpsl
insb
fbld
add
into
pop
pop
sbb
xor
je
or
pop
mov
pop
aaa
mov
clc
cwtl
jns
rcrl
ja
test
jb
cmpsl
inc
mov
xchg
pusha
jecxz
int
leave
enter
test
lret
push
mov
sbb
repz
jbe
movsl
enter
jne
loopne
arpl
ds
sbb
adc
sub
or
jg
shlb
jle
rclb
inc
das
test
cmpsb
adc
lock
jb
fs
js
pop
repz
mov
out
and
add
pop
mov
jns
je
add
dec
jae
loopne
pop
push
mov
fbstp
sahf
or
add
clc
fs
pop
jecxz
andb
push
sub
dec
pop
gs
jae
dec
pop
cmp
loop
pop
jae
fcoms
ja
in
pop
push
or
add
jge
rcll
dec
icebp
jge
sub
aad
in
jmp
loope
jecxz
mov
dec
jge
mov
mov
inc
fucomi
dec
adc
ret
pop
popa
xor
mov
test
dec
sub
lahf
xchg
mov
push
cwtl
pop
jge
mov
nop
mov
xchg
repnz
nop
aaa
mov
pushf
mov
xlat
cmp
clc
sbbl
inc
push
cmp
sub
leave
lock
push
ds
js
test
sbb
js
test
cltd
shlb
imul
or
fsubrs
lcall
out
out
cmp
lcall
xchg
aaa
ret
sub
mov
addr16
vmovaps
sbb
mov
add
pushf
loope
imul
xor
js
sub
pop
xchg
mov
lcall
xor
stos
sti
les
mov
sbb
xchg
and
inc
sub
ja
in
xchg
push
xchg
addr16
fs
imul
sub
pop
dec
or
nop
sbb
add
push
out
test
or
out
push
out
inc
xchg
clc
into
int3
jg
push
mov
cmp
repnz
test
push
jg
mov
xchg
outsl
bound
jg
xorl
mull
mov
addr16
sub
js
inc
pop
pushf
mov
lahf
repnz
fwait
rclb
or
ret
jns
lds
inc
fwait
push
fisubrl
stos
addr16
push
adc
leave
xor
and
mov
push
sub
int3
imul
sarb
rclb
jl
sub
das
scas
add
pop
xchg
push
push
test
or
into
xchg
jbe
pusha
mov
test
push
dec
mov
mov
cmpsb
mov
jmp
scas
add
das
mov
fcmovnb
inc
test
jbe
dec
aas
test
stos
iret
cmc
imul
sub
pop
fldcw
mov
pop
std
xchg
fyl2x
leave
clc
pop
jl
mov
lock
xorl
mov
pusha
test
xor
xchg
addr16
lds
push
mov
sub
cmp
push
insl
mov
out
test
mov
lds
mov
pop
mov
dec
fisubrl
icebp
addr16
mov
jle
lds
inc
xchg
and
cmp
or
dec
and
fs
stos
pusha
jno
fnstenv
pusha
mov
pop
bound
negb
and
incl
push
cmc
stos
pop
stos
ret
btc
xchg
jne
push
xchg
pop
pop
add
pop
dec
movsb
push
loope
xchg
sub
pop
xchg
or
mov
push
adc
mov
in
mov
imul
std
imul
ds
cmp
ss
jbe
jbe
jecxz
and
dec
push
out
sahf
mov
sahf
in
push
dec
scas
mov
xor
xchg
add
inc
sub
sbb
test
xlat
xchg
jp
cmpb
das
inc
xchg
mul
fimuls
outsb
pop
sbb
aas
mov
pop
add
test
push
daa
in
stc
pop
sbb
pop
dec
dec
jp
scas
jns
outsb
add
mov
rcrl
dec
ds
cld
mov
push
jecxz
xlat
ljmp
pop
fisttps
ljmp
pop
flds
sbb
dec
mull
mov
fwait
sub
rcl
dec
test
sti
jmp
popf
idivl
lahf
xor
pop
pop
in
repz
jb
inc
and
mov
push
aas
into
shll
jnp
in
pusha
data16
leave
xor
shlb
repnz
push
mov
nop
arpl
sbb
cmp
and
xchg
fstpl
push
addl
pop
iret
xorl
xchg
jb
push
outsl
shrb
pop
mov
jno
adc
out
jno
fadd
lods
fbstp
push
jae
mov
daa
xchg
pop
gs
ljmp
push
mov
jge
fldcw
jge
pop
add
jp
push
xchg
xchg
fistpl
aam
divb
cmp
in
add
cmp
dec
lcall
fildl
es
dec
cmpl
or
int
ret
jg
addr16
stos
out
mov
xor
push
data16
faddl
lea
push
xor
out
adc
pop
sub
sub
sbb
jle
loop
cmp
movsl
cmp
lcall
and
jle
add
pop
cltd
add
cmpsl
pop
push
adc
enter
mov
jle
adc
out
push
lods
mov
aam
pushf
data16
pop
std
bound
jmp
pop
adc
cmp
popf
dec
loope
mov
addr16
stos
mov
stos
ds
aaa
in
jge
pop
mov
jge
test
add
in
mov
aam
scas
xchg
aam
xchg
mov
inc
in
cmp
push
add
adc
inc
pop
xchg
std
xchg
xchg
popa
mov
and
xor
xchg
adc
pop
aam
daa
and
xchg
leave
sahf
inc
add
mov
iret
push
jecxz
test
push
push
fsub
std
jmp
pusha
movsl
mov
clc
jmp
mov
aam
and
pop
out
xorl
stos
cltd
cmp
mov
clc
sub
dec
test
inc
pop
out
lock
xchg
mov
in
aas
jge
arpl
cmp
sub
btc
cmpsl
pop
popf
xchg
daa
addr16
mov
xchg
andb
sbb
pop
or
xchg
lods
mov
sbb
inc
mov
hlt
xor
mov
mov
pushf
mov
insb
adc
adc
pop
cs
mov
jge
add
push
and
mov
adc
icebp
stos
mov
test
adc
mov
les
fld
mov
and
stos
push
push
gs
push
mov
push
mov
idivl
out
cmp
pop
push
lret
dec
sbb
mov
dec
xchg
push
adc
call
mov
orl
cmp
xlat
sbb
sbb
fiadds
add
aas
mov
cwtl
push
xlat
mov
cmp
mov
mov
mov
out
ret
in
adc
scas
std
adc
jbe
push
std
pop
lods
adc
nop
cmp
sub
push
xchg
out
pop
mov
imul
ss
xchg
sub
adc
mov
out
sub
jg,pt
sbb
adc
sti
cmp
inc
mov
test
xor
inc
repz
test
xchg
icebp
lahf
jbe
xchg
pop
inc
adc
sarl
cmp
adc
test
scas
stos
jnp
mov
and
jmp
push
jecxz
fsts
pop
loope
mov
sahf
inc
xor
push
or
fcom
inc
in
xchg
shl
pusha
jbe
loopne
ret
mov
xor
mov
xor
xchg
cmp
lret
xchg
add
movb
cltd
jb
add
fistps
loope
lea
dec
faddl
mov
mov
cmp
pop
fcom
mov
imul
insl
xlat
gs
cs
xchg
aaa
fdiv
jl
xchg
and
stc
and
je
add
push
aad
push
jmp
pop
inc
out
pop
mov
mov
push
push
pop
int
mov
adc
leave
std
push
sub
jl
lret
mov
pop
sub
das
outsb
or
xchg
leave
push
mov
jle
aam
xchg
aad
mov
sti
into
and
mov
cmp
or
sub
push
pop
cmp
sbb
fwait
xchg
xchg
std
imul
push
sub
dec
popf
push
mov
enter
sbb
xlat
iret
repz
scas
sbb
ss
das
push
and
xor
inc
inc
xorl
out
mov
sbb
and
mov
daa
sub
pushf
or
push
xor
insl
ret
xchg
cmc
sub
sub
adc
in
daa
mov
aad
loop
mov
add
adc
insb
ret
lahf
mov
outsb
jno
xor
fisttpl
aaa
jb
xchg
loop
mov
push
push
and
js
or
mov
sbb
cmp
subl
dec
cmpsl
cmp
adc
mov
loope
mov
xor
xchg
mov
pop
jecxz
adc
pop
adc
mov
pop
jbe
and
pop
mov
inc
aas
adc
not
inc
mov
ret
xchg
push
int3
or
imul
sub
rol
cmc
push
nop
dec
ljmp
out
sub
mov
adc
sub
int
icebp
and
lock
mov
mov
xchg
cltd
mov
cmp
sub
and
insb
sbb
push
xchg
mov
xchg
push
std
unpcklps
insl
popf
jbe
in
jne
leave
sbb
movsb
addr16
pop
push
in
lds
outsl
popa
gs
data16
dec
mov
subl
loop
cmpb
pop
xchg
jbe
int
hlt
lret
or
popf
sub
fnstenv
or
sub
insb
ret
pop
scas
scas
stos
mov
cmpsb
ret
lock
mov
inc
and
aam
mov
in
mov
push
cmp
xchg
ffree
push
xchg
iret
out
test
mov
aam
out
sub
loope
or
mov
adc
outsb
sarb
cwtl
fistpl
mov
adc
mov
fcoml
loope
ja
lret
cld
arpl
pop
outsb
push
or
and
mov
pusha
mov
jl
mov
add
imul
and
xchg
inc
push
jbe
ja
fs
loop
test
adc
or
mov
push
xor
pop
pop
sbb
test
rcll
ds
pop
outsb
bound
xchg
pushf
xchg
rorl
test
out
jo
mov
inc
es
jge
test
ret
add
outsb
imull
int3
and
clc
cltd
push
ljmp
cmpsb
mov
xlat
jmp
cmc
out
and
imul
cmp
imul
mov
shrb
push
push
aas
mov
cld
pop
cmpsb
push
xchg
add
mov
int
inc
dec
adc
jge
stc
xlat
call
lahf
xchg
scas
cli
clc
and
fisttps
fdivrl
fstpt
sbb
ljmp
and
and
mov
sub
cmc
push
xchg
sarb
dec
ljmp
cmpsl
test
test
xor
or
xchg
pusha
hlt
out
push
jle
cmc
sub
arpl
call
jne
or
aam
cli
hlt
popa
sub
or
insb
gs
mov
and
lds
in
jno
mov
dec
jne
aas
dec
mov
stos
iret
decb
iret
dec
pop
xor
push
jmp
add
dec
cmpsl
call
jp
in
or
sub
cmp
out
pop
xor
iret
movsb
aaa
and
int3
jg
out
mov
jae
push
rclb
push
jle
ja
cmp
fdivp
pop
inc
jns
mov
rol
and
bound
insl
push
mov
cmp
aaa
dec
insb
dec
and
and
iret
and
shlb
out
mov
into
xor
mov
mov
mov
lahf
or
es
sbb
test
dec
or
lds
loop
mov
push
adcb
incb
add
mov
jmp
rorb
pop
xchg
sub
mov
jno
sti
pop
mov
xlat
xchg
push
dec
cs
dec
jnp
mov
xor
pop
jb
cmc
add
pop
jbe
push
dec
bound
pop
jnp
xor
scas
add
sbb
push
ds
sahf
sti
jne
mov
push
adc
inc
pop
cmpsb
cmp
jmp
fsubl
xor
loopne
enter
push
test
push
shlb
cs
xchg
mov
lea
out
push
add
adc
outsl
clc
mov
adc
cmpb
cwtl
rcll
jecxz
mov
inc
cmp
imul
dec
inc
lds
in
ds
cli
xlat
mov
dec
sbb
mov
sti
mov
aam
stc
popf
sub
dec
mov
dec
pop
lock
test
je
imul
or
fdivrs
stc
push
jno
das
in
pop
or
subl
inc
push
call
nop
sub
aad
rorl
adc
stos
pop
sbb
aam
dec
shll
fsubrs
lods
push
jge
ret
jne
pop
insl
lcall
or
mov
cmp
xor
movsl
jo
cwtl
and
mov
xchg
cld
in
mov
arpl
dec
leave
iret
sti
aaa
cmovge
dec
pop
dec
xchg
in
movsb
jle
cmp
popf
cmp
sbb
shlb
add
int
arpl
jbe
pop
aad
xorb
cmp
xchg
mov
add
dec
pop
cltd
fs
rol
sub
dec
cmpsl
xchg
pop
cmpb
mov
xchg
ds
jl
mov
inc
mov
adc
or
mov
sbb
lcall
es
aas
cmp
sub
add
xchg
jmp
add
lock
mov
adc
mov
movsb
mov
aad
xchg
and
jl
cltd
adc
ficoms
gs
outsl
lods
pop
jp
lods
mov
and
aam
or
outsl
dec
or
or
xchg
dec
jne
mov
in
in
jo
cmp
fs
jp
inc
cmp
imul
jns
mov
pop
add
jmp
jo
inc
xchg
inc
enter
imul
mov
jp
cld
mov
push
addr16
push
insl
leave
lcall
xor
adc
movsb
inc
push
push
in
xchg
sbb
fadd
sub
xchg
sbb
lret
movsl
sub
shll
cmc
leave
andl
das
cmp
test
fimull
add
xor
cmpsl
pop
and
mov
cwtl
xorb
push
mull
xchg
or
repnz
and
fldlg2
xchg
hlt
inc
sub
mov
jg
cmp
fistpl
ljmp
lret
ja
sahf
stc
es
addb
push
aaa
stc
jge
fisttpll
push
pop
sbb
je
sbb
ret
and
mov
mov
out
cltd
jo
test
nop
pop
add
incl
sub
adc
xchg
repz
mov
inc
sub
jge
jecxz
insl
add
mov
mull
es
xchg
xlat
lcall
pop
cmc
cwtl
adc
fstpt
stos
dec
pop
push
sub
dec
test
jl
pop
jb
pop
cmp
cmpsb
cld
subb
sub
frstor
add
jbe
and
stos
mov
inc
adc
bnd
or
roll
and
leave
pop
roll
xlat
add
aaa
fisttpl
mov
fcmovbe
sub
jle
cmp
sub
pop
pop
outsl
sbb
push
gs
lea
dec
mov
in
rolb
and
or
out
les
pop
add
repz
repz
inc
daa
or
jno
adc
xchg
adc
jno
aas
out
fdivrp
and
clc
into
mov
xchg
popa
sarl
fsts
test
pop
cmp
cmp
and
jge
jecxz
aam
bound
js
dec
inc
mov
pop
add
push
add
cs
lahf
ret
cmc
adc
xchg
rol
mov
xor
insb
sbb
push
mov
adc
cmp
pop
test
andb
mov
xor
fbstp
adc
push
push
or
fwait
pop
or
gs
dec
sub
sbb
xchg
mov
loope
xchg
xor
xchg
test
mov
outsb
jo
mov
push
and
dec
cmp
dec
xor
movsb
xor
mov
pop
or
scas
pop
or
sti
movsl
push
jl
lahf
push
lea
data16
xor
lcall
lahf
ret
or
mov
push
mov
mov
hlt
int
xchg
outsl
pop
lods
filds
jle
mov
movsl
stos
dec
les
dec
imul
divb
sbb
sub
push
cmpsl
out
jns
or
sbb
popf
push
dec
lahf
hlt
sub
mov
icebp
ds
dec
movsb
popf
test
fidivs
popa
sarb
pop
adc
mov
add
sbb
dec
xor
or
add
fsubrs
jnp
adc
pop
mov
les
inc
mov
push
pop
imul
mov
dec
clc
sti
imul
je
dec
lret
mov
shl
xor
imul
das
jo
adc
jno
inc
mov
jmp
les
push
or
outsl
push
xchg
test
jp
or
scas
push
stos
popa
dec
xor
int3
and
mov
adc
movsw
mov
mov
jnp
outsl
enter
movsb
iret
enter
out
pop
sub
mov
xor
ficompl
jl
jg
inc
nop
fisubl
addr16
pushw
push
xchg
lea
jp
jge
rcrl
repz
hlt
jl
inc
xchg
insl
push
xor
nop
imul
lret
aaa
iret
cmp
sub
mov
outsl
xchg
mov
lret
stos
ficoml
rep
cwtl
jge
mov
xor
mov
das
lcall
xorl
popa
fs
or
dec
or
mov
dec
outsb
add
test
out
in
enter
out
loope
push
movsb
lods
fucomp
add
xor
cltd
xchg
iret
clc
mov
or
sbb
add
push
sub
mov
int3
sbb
lea
int
xor
mov
add
icebp
adc
lock
inc
into
xor
and
test
repnz
mov
mov
lods
add
bound
bound
in
jbe
sahf
in
mov
loopne
outsl
lret
adcl
sub
iret
pop
dec
adc
adc
fbstp
cmp
cmc
xor
sub
sbb
sbb
add
and
fisubs
jne
sbb
dec
movb
mull
pop
jle
jmp
inc
xorl
insb
hlt
cmpsb
mov
push
dec
ss
nop
xor
addr16
sbb
or
mov
jge
hlt
or
loop
pop
cmp
add
mov
fidivrl
push
fiadds
xor
mov
int
mov
xor
out
outsl
mov
mov
dec
repnz
sbb
rcll
pop
loope
movsl
js
test
xlat
xor
inc
sar
bound
lret
inc
mov
xchg
fsubrs
loopne
cmp
jo
jnp
test
arpl
repnz
jns
pop
mov
out
fxch
test
and
adc
repz
mov
stos
mov
test
jge
xchg
adc
adc
mov
sub
and
sub
mov
pop
repnz
mov
push
test
arpl
sbb
and
push
insw
imul
aad
in
mov
aas
rcll
lret
mov
dec
sbb
ds
xlat
jmp
add
inc
insl
fsubs
dec
adc
inc
push
adc
fcmovnb
pop
jb
shll
lods
imul
cmp
dec
mov
xor
inc
je
and
push
loop
out
stos
push
mov
rorl
outsl
add
vpsubw
cld
sub
lds
ds
cli
out
mov
pushf
push
jg
jge
inc
add
jno
push
movsb
lea
adcl
dec
xchg
mov
test
lds
sti
mov
imul
sub
jnp
or
addr16
jo
dec
jne
push
pop
repz
mov
jge
iret
leave
cld
test
add
xchg
push
mov
or
jb
mov
std
aas
cmp
jp
int
repz
dec
lods
into
jg
data16
mov
ja
cmp
mov
add
fmul
aas
lcall
jg
ds
mov
lods
pop
jb
sahf
insb
sahf
xchg
stos
imul
or
add
push
sahf
and
push
das
inc
xchg
gs
pusha
rorl
sbb
dec
xchg
call
xor
lds
cmp
gs
inc
mov
fiadds
and
daa
fsubr
icebp
in
jl
ljmp
in
sti
adc
mov
sub
inc
mov
and
xchg
and
inc
mov
dec
loop
pop
pop
xor
dec
or
leave
xchg
mov
mov
mov
sbb
aas
sub
test
xchg
dec
mov
enter
pop
jge
xor
cmp
xchg
sbb
shll
stos
lock
mov
or
or
rcl
cmp
or
mov
outsb
mov
cmpsl
xchg
jnp
jo
scas
lret
aas
rclb
dec
adc
push
lock
arpl
insl
adcl
les
rorl
push
mov
fistpl
fldcw
das
add
mov
loop
fisttpll
pushf
mov
jnp
dec
push
idivb
mov
inc
mov
xor
mov
shl
ljmp
out
pusha
stc
inc
sahf
or
push
aaa
addr16
mov
jg
jecxz
orl
mov
dec
sub
mov
outsb
jge
cli
cmovnp
fs
popf
ret
es
scas
sbb
pop
mov
pop
or
sahf
adc
pop
sti
out
push
ljmp
orl
ds
xchg
pop
inc
popa
sbb
push
out
lret
cld
sahf
sub
in
fcomps
dec
aas
lret
mov
and
jg
sub
mov
mov
mov
xor
push
dec
or
and
int
inc
insl
xor
jne
or
dec
push
in
xor
adc
daa
rcl
insl
or
movsb
add
je
rcll
ret
push
pop
jle
push
ja
xor
add
jnp
or
sbb
mov
inc
movq
rcrl
pop
icebp
outsb
ja
cmovle
je
shrl
jp
jns
xor
jne
loope
jns
mov
xor
pop
sub
sti
ss
fcomps
test
nop
pop
outsb
lret
xlat
jbe
xor
mov
scas
iret
push
sbb
push
out
push
movsl
mov
sbb
add
xorb
std
sub
sub
orb
dec
mov
add
cld
and
push
repz
mov
leave
jl
mov
add
incb
jns
or
test
repz
stos
sti
icebp
ret
lahf
cmp
scas
cmpb
sbb
aad
add
lahf
sub
xor
sbb
lret
pop
popa
dec
sub
adc
addr16
or
into
xchg
pushf
in
stos
or
pushf
movsl
push
or
dec
sbb
imul
out
lcall
xor
hlt
or
pusha
jae
mov
dec
adc
scas
jno
cltd
stos
or
inc
mov
test
xchg
xor
push
repnz
sub
mov
rolb
xchg
loop
xor
stos
push
fisubrl
sbb
mov
movb
cltd
dec
xchg
insb
shrb
shrb
mov
cltd
xchg
stc
inc
clc
sub
add
movsb
mov
mov
lods
loope
cmpsb
jae
add
add
loopne
test
cmp
loopne
int
js
aad
adc
or
inc
sar
cmp
adc
mov
cwtl
shll
negb
jl
mov
xchg
fpatan
sbb
and
push
out
je
or
mov
lcall
rol
inc
lods
lret
in
lods
sbb
stos
inc
int
test
out
mov
cmp
mov
pop
mov
cmp
mov
inc
aad
mov
imul
inc
cmp
xorl
loopnew
testb
xor
cmc
pop
ret
mov
cltd
inc
cmpb
aas
ss
iret
fnsave
mov
mov
sub
jle
push
push
lcall
push
insl
push
loopne
inc
and
iret
dec
mov
push
stc
xor
dec
stos
call
rorb
adc
mov
imul
loop
inc
adc
mov
sbb
pop
or
xlat
aad
pop
stc
sub
add
cs
in
aam
mov
mov
adc
dec
adc
and
fidivrs
push
js
xchg
dec
int3
xchg
addr16
mov
in
cmpsl
sahf
pop
pop
and
pushf
inc
sbb
pmaxsw
pop
dec
std
fdivrl
xlat
ds
pop
mov
loop
sbb
ss
and
loopne
inc
shl
stos
xlat
dec
jl
or
pop
push
jl
mov
jmp
iret
adc
sbb
dec
jae
jno
imul
add
xor
jo
mov
es
mulb
subb
and
leave
ffreep
ret
iret
mov
adc
stc
sbb
jb
xlat
ret
sub
es
pop
ss
push
out
nop
testb
mov
rcr
mov
and
nop
cmovnp
cltd
addb
pop
lock
inc
fisubl
mov
adc
movsb
aad
jbe
pop
or
inc
notl
cmp
cld
add
loope
cmp
cltd
lahf
lahf
sbb
mov
addl
jp
or
xchg
sbb
xchg
push
cmp
sub
movsb
or
cmp
lahf
gs
pop
mov
cmp
frstor
scas
icebp
fstp
fdivs
sbb
cs
not
xor
jl
xor
mov
jnp
adc
jle
out
out
iret
sub
mov
mov
int3
pavgw
out
add
xchg
mov
insb
hlt
clc
daa
rorl
fcoml
dec
mov
inc
sub
leave
insb
cmp
jnp
jbe
xlat
sbb
xor
adc
pop
aad
and
loopne
out
aaa
mov
dec
fidivrl
sub
xchg
shr
divl
push
es
insb
push
lcall
movsl
mov
pushf
fisubs
dec
mov
lods
sbb
das
pop
or
add
bound
mov
in
enter
ja
fisubs
xchg
addr16
cli
push
adc
jl
iret
sub
loop
mov
in
jns
mov
int3
dec
imul
push
das
cmp
in
ret
mov
pop
mov
xchg
cmp
push
add
insb
iret
pop
int3
inc
xlat
inc
push
jg
mov
or
addr16
imul
xor
lcall
imul
xchg
dec
pop
mov
add
push
dec
sahf
inc
mov
jns
and
pop
add
aaa
int3
sti
cmpsl
pop
cld
jmp
mov
hlt
add
push
flds
clc
push
add
pop
inc
adcl
xchg
mov
dec
jecxz
iret
int
fisubl
sub
ret
hlt
xorl
jmp
lcall
les
or
add
lods
cmp
add
adc
scas
mov
test
push
leave
rclb
andb
das
icebp
movb
cmp
jp
in
pop
js
nop
pop
mov
add
and
pop
js
sub
out
fimuls
and
jecxz
mov
in
scas
fistps
test
cmp
je
lret
xor
xchg
push
pop
jne
mov
mov
or
xchg
pop
add
sahf
andl
fcomip
test
push
xchg
cmp
jbe
jmp
movsl
scas
mov
ret
mov
dec
in
loope
dec
shl
das
data16
mul
arpl
cltd
movsl
pushf
enter
pop
push
movsl
cmp
ret
mov
xlat
dec
cmpsb
enter
es
xor
pop
test
aad
mov
fucomp
mov
adc
icebp
dec
lods
xor
dec
add
adc
mov
push
cmp
cmp
das
fldenv
sub
pop
js
lds
std
fwait
push
pop
sub
lds
enter
repz
sbb
cs
adc
lahf
aaa
adc
mov
and
inc
sub
push
push
mov
fildl
push
and
cmp
ds
dec
xchg
jb
in
xchg
mov
sti
push
rclb
ret
jbe
jo
rclb
pop
ja
mov
repnz
push
out
out
jle
fwait
pushf
xchg
movsb
lods
lods
mov
xchg
data16
sarl
daa
cmp
adc
scas
test
inc
ret
rclb
call
rcrl
fisubrs
mov
jno
add
out
loopne
and
cmp
pop
jbe
mov
xchg
pop
cmpsl
in
clc
push
jb
push
sub
jl
sarb
dec
enter
sub
mov
add
scas
aaa
lods
xor
add
adc
add
filds
fnstenv
push
cld
bound
dec
and
clc
leave
jo
add
jbe
mov
cmp
pop
xor
pop
cmp
cmpsb
fisttps
repz
add
xor
jb
push
cwtl
push
jns
call
xor
push
pop
iret
popf
addr16
in
lock
mov
dec
ror
adc
insl
in
rclb
and
or
sbb
mov
jb
out
cld
ds
fmuls
push
out
inc
cmp
jno
hlt
imul
cmp
adc
mov
mov
out
icebp
mulb
js
repnz
cmp
jns
cmp
mov
cmp
and
and
dec
mov
aaa
in
pop
jge
ret
pop
push
mov
xchg
push
and
cmp
xchg
xchg
popf
loopne
roll
sarl
mul
mov
sbb
jp
mov
dec
sub
std
cmp
pop
cmp
fucomi
rorb
adc
call
sub
dec
push
rolb
pop
cmp
out
loop
pop
fcmovnu
fists
imul
push
movsl
push
and
dec
xchg
sbb
fs
push
or
fsubl
xchg
outsl
cmpsl
loop
sbb
popa
leave
js
sub
or
ret
out
std
adc
mov
imul
mov
idivl
hlt
in
pop
fprem
cwtl
fucomi
outsl
hlt
ja
mov
jp
mov
test
lcall
sbb
lods
mov
and
cmp
stos
shl
inc
pop
jle
push
cmpsb
std
outsl
shll
push
jecxz
sub
popl
sub
jg
xorl
stos
stc
popa
xor
in
sub
xorb
fists
rorb
add
xlat
fstpt
out
jbe
dec
cmp
sti
sbb
jnp
add
mov
jl
pop
addb
mov
cmp
in
lcall
or
shrb
daa
add
rorl
mov
outsl
sbb
aas
dec
rcrl
test
imul
adc
inc
mov
push
inc
cmp
out
pop
jmp
out
dec
repnz
dec
aam
dec
sbb
mov
je
sahf
add
push
cmp
divb
call
test
stos
inc
in
nop
into
sub
adc
sbb
and
push
lock
and
cmp
shll
fldlg2
push
sub
shlb
push
jecxz
xchg
arpl
mov
aam
xor
pcmpgtd
cmc
mov
sub
xor
xor
loopne
scas
lods
shlb
jns
jnp
inc
dec
mov
inc
es
pop
inc
mov
ja
lahf
mov
ret
mov
dec
scas
jge
dec
xlat
xor
mov
mov
enter
push
pop
pushf
dec
xlat
mov
int3
loop
push
inc
push
xor
add
mov
loop
inc
aas
pop
xchg
in
addl
int
hlt
out
xor
outsl
push
out
inc
aaa
xor
pop
push
movsl
mov
cmp
jmp
test
inc
fwait
sub
lods
imul
arpl
mov
xchg
sarb
insb
cld
mov
cltd
mov
push
mov
jno
mov
outsb
xchg
sub
inc
sub
xchg
mov
pop
push
mov
mov
js
dec
jno
pop
pop
cmpsl
and
ret
mov
dec
pop
mull
icebp
xchg
sub
sub
sbb
icebp
or
sbb
scas
ss
mov
push
addr16
lods
mov
out
add
lds
cmp
mov
xor
fbld
stc
add
mov
push
add
repnz
gs
arpl
push
test
xchg
or
es
stos
mov
lret
xchg
mov
xchg
mov
es
fxch
fwait
sti
stos
push
push
outsl
push
xchg
push
popa
subb
dec
lcall
push
cli
outsl
push
mov
sbb
and
add
ret
scas
xlat
mov
xor
push
jae
mov
pop
push
cmp
ret
loope
mov
incb
cmp
xchg
xlat
aaa
shr
jp
les
inc
insl
dec
push
push
movsb
push
sbb
mov
or
imul
mov
sahf
xchg
aam
pop
sbb
xchg
pop
ja
pop
add
imul
aaa
add
mov
es
popf
xor
cmp
out
sar
aas
and
push
xchg
cmp
add
fisttpl
jg
and
push
mov
ljmp
pop
add
inc
and
arpl
sub
cld
and
cmp
xorl
fisttpl
jl
xchg
imul
out
outsb
jecxz
aaa
inc
push
lret
xor
aad
aaa
xchg
out
cmp
ret
call
sub
or
lret
pop
shl
pop
in
fisubs
dec
jg
mov
push
inc
sub
adc
xchg
xlat
lcall
movsl
mov
cli
jae
lock
sbbb
les
xchg
xchg
mov
cmp
outsl
ljmp
push
nop
pop
stos
imul
sahf
mov
andb
sbb
sbb
mov
dec
mov
fildll
jns
ss
fsubrl
mov
mov
in
xor
xchg
inc
jmp
inc
cld
and
hlt
or
mov
sbb
xor
jl
insl
das
pop
xorb
pop
out
mov
xchg
pushf
push
cmp
cmp
adc
lret
subl
stos
xlat
and
movsb
push
add
mov
lcall
mov
fidivrl
jle
cltd
pushf
cmpsb
repnz
jne
xchg
xor
call
push
xor
fwait
pop
fdivrs
adc
inc
mov
sbbb
adc
int
aas
loopne
jmp
hlt
mov
movsb
push
icebp
and
dec
mov
mov
pop
mov
popa
and
mov
adc
mov
pop
fisubl
pop
pop
outsl
adc
dec
in
sahf
ds
sub
lcall
sbb
inc
lds
popa
jno
inc
push
sbb
jecxz
movsb
es
sarl
lods
arpl
mov
adc
dec
mov
mov
aam
loope
inc
outsb
fwait
arpl
shlb
pop
fisubrs
mov
mov
int3
and
sbb
fdivl
push
in
push
ss
mov
adc
xor
ret
rorl
daa
xlat
mov
shl
push
cld
in
sub
dec
cmp
nop
int3
xor
mov
fnstenv
shlb
push
into
test
push
cmpsl
sub
push
out
int3
idivl
cld
push
mov
mov
sbb
jecxz
inc
push
lcall
add
sarl
and
sbbb
test
aas
mov
out
roll
jae
lds
aad
cld
cld
mov
pusha
push
pusha
adc
mov
xor
mov
or
imul
jmp
sti
cmpsb
popf
sahf
shlb
fnstsw
pop
loope
fistpll
inc
inc
pop
xor
or
pop
jmp
push
mov
aam
test
les
sub
fwait
mov
and
pop
mov
cmp
xor
adc
hlt
outsl
loop
push
loope
and
add
leave
cmpsb
xor
add
int
in
and
jno
test
cmp
xchg
mov
cmc
or
js
xchg
jns
add
and
push
fidivl
in
popa
add
in
mov
cmp
mov
das
insb
sbb
cmpsb
cltd
sahf
inc
pop
insl
mov
inc
jmp
popa
fmuls
es
cld
cmp
inc
pop
and
pop
push
and
shr
pushf
popw
nop
fldcw
cltd
xor
xchg
xchg
sahf
and
fst
loope
loopne
pushf
ja
clc
ja
pop
shlb
andb
aaa
cmc
push
ss
inc
dec
mov
mov
pmullw
ljmp
fs
loope
add
stos
adc
or
mov
stc
pop
int
or
cmpsb
push
test
dec
jmp
cmpsl
jecxz
cltd
lahf
enter
popf
push
adc
mov
jl
orl
fld1
adc
pop
dec
jnp
mov
movsb
or
pop
pusha
mov
mov
xchg
sti
add
out
into
xor
shll
dec
bound
sahf
lock
call
movb
xor
xchg
and
jg
int
mov
mov
xor
enter
lret
fnstsw
fdivr
lods
inc
push
iret
jle
mov
js
mov
xchg
push
lahf
xchg
xor
stos
cld
ss
jbe
repnz
mov
in
xchg
jb
mov
sarl
mov
mov
in
lea
add
cmpsl
ficomps
cmp
pop
mov
and
les
push
clc
push
mov
pop
jae,pn
and
cld
ret
or
std
inc
cmp
loope
and
stos
in
ss
fwait
xchg
sbb
in
pop
test
sahf
pop
mov
xchg
sub
sahf
ficompl
mov
aam
pop
push
push
mov
push
xchg
aas
mov
enter
in
dec
mov
jge
icebp
cmpsb
das
in
cmp
inc
jne
mov
cmpsl
push
ljmp
pop
adc
mov
xor
jecxz
pop
repz
ret
jb
pop
xchg
push
jns
mov
pop
sbb
popf
popf
cmpsb
stos
and
outsl
sub
cmp
cmpsl
cmp
movsl
lods
inc
ret
mov
in
andl
insb
xor
mov
mov
adc
out
pop
les
scas
js
pop
ds
popa
xor
pop
cli
sbb
sarb
cmp
call
cmp
mov
push
mov
pop
out
pop
test
popf
push
mov
mov
add
sbb
dec
mov
pop
xlat
or
out
jp
cli
and
adcb
in
jb
push
in
mov
mov
mov
aaa
in
sbb
gs
dec
insl
cli
dec
mov
lods
push
jle
into
adc
xchg
mov
mov
mov
lret
fsubl
test
push
mov
shrb
lods
ss
sti
popa
sub
mov
cmp
cmp
pop
lds
std
and
or
ss
mov
icebp
stos
sbb
and
mov
inc
or
jge
and
bound
or
lret
cld
xor
loop
lds
sub
std
pop
mov
fwait
lock
inc
int3
ja
sarb
or
stos
push
inc
xchg
mov
jmp
les
das
push
adc
push
fxch
mov
add
adc
clc
sahf
test
lock
dec
fcom
push
repz
cmp
sbb
push
hlt
mov
cmpsb
and
jmp
pushl
aad
cli
call
pop
inc
pop
jle
xlat
ret
cli
dec
out
popf
movsb
filds
mov
clc
or
das
imul
fsubs
mov
pop
in
cmp
aaa
mov
push
iret
jle
mov
pop
hlt
mov
sti
popa
sub
or
nop
xor
jbe
cmp
aaa
test
mov
in
test
fsubl
push
xchg
push
cltd
xor
mov
jmp
rcr
or
jl
ds
pop
push
xor
xchg
ljmp
mov
sub
repz
mov
push
lods
push
loop
stos
cli
pop
jecxz
test
pop
in
sub
bound
adc
mov
cmp
add
fstpl
and
jecxz
fcmovnbe
repz
jp
pushf
in
and
sbb
xchg
imul
shrl
cmp
push
jne
jp
jle
fnstenv
cmpxchg
mov
frstor
push
mov
sbb
pop
imul
aam
jecxz
mov
xchg
pop
leave
xchg
jb
rcrl
inc
inc
scas
in
cmc
mov
or
scas
in
jmp
cs
arpl
mov
push
sbb
or
mov
test
push
cmp
sbb
jae
sub
xor
ljmp
adc
test
mov
lcall
jg
pop
fisttps
das
outsl
and
pop
in
xor
xchg
int3
mov
xchg
cld
adc
inc
pop
pushf
sub
aad
pusha
mov
or
out
add
xor
ja,pt
sbb
xor
data16
fidivs
dec
push
rorl
movsl
scas
xor
rclb
ja
mov
and
jb
xchg
dec
inc
insl
mov
sub
jge
cmovnp
inc
mov
dec
and
cmp
scas
mov
leave
lret
stc
roll
jo
push
mov
popa
jb
xchg
leave
je
enter
loope,pt
dec
xor
roll
adc
mov
inc
rcrl
movsb
nop
sub
adc
aas
repz
cmp
xor
andl
sbbb
test
out
ja
iret
jp
add
loopne
int
scas
cmp
fsubrl
xor
jo
and
iret
xchg
jae
and
sbb
fs
pop
incl
insb
mov
loope
in
inc
xor
popf
jg
mov
std
popa
bound
fdivl
mov
shr
nop
add
and
leave
ja
xchg
and
xchg
adc
sub
xchg
jns
push
mov
xor
in
pop
iret
lock
xor
sbb
mov
repnz
jle
cmp
sub
gs
addr16
cmp
and
lods
xchg
jecxz
xchg
outsb
into
mov
inc
lret
scas
fistpl
mov
mov
scas
loope
insb
ret
inc
pushf
xchg
jo
jns
pop
add
inc
adc
jg
sahf
and
and
adc
or
xchg
lods
scas
adc
xor
sbb
ljmp
stc
adc
js
ds
pop
mov
stos
pop
fwait
xchg
cltd
add
cmpsl
into
ljmp
jo
pop
cmp
cltd
xchg
xlat
or
ljmp
daa
dec
sbb
rcll
js
jmp
pusha
fcmovnu
test
outsl
sub
cwtl
lret
insl
lods
lahf
adc
push
xchg
pop
repz
mov
xchg
inc
ret
mov
ficoml
in
scas
mov
xchg
test
and
cmpl
rorb
js
and
mov
shrl
inc
stc
pop
inc
in
cld
cmp
cld
xchg
outsl
icebp
sarb
dec
ret
je
call
jge
mov
cmp
xor
daa
ss
adc
dec
mov
movsl
sub
inc
sqrtps
into
nop
xchg
or
in
in
leave
notb
aas
popa
hlt
pop
in
mov
and
mov
push
xor
cli
jle
add
fnsave
jecxz
push
and
xchg
dec
add
dec
jmp
repz
xchg
ja
out
je
ret
hlt
mov
repnz
push
arpl
and
cmc
fsts
int
mov
jmp
mov
xor
cwtl
lahf
sbb
xor
aas
cwtl
imul
xchg
mov
mov
xchg
stc
mov
movsl
push
xchg
xchg
adcb
rcr
mov
pop
movsb
fdivrs
push
stc
mov
dec
in
and
xor
and
xlat
negb
mull
mov
add
iret
adc
dec
shl
pop
ret
je
mov
js
rcrl
jge
dec
push
fld
push
adc
dec
push
call
orb
das
xor
out
hlt
js
les
or
das
int3
mov
push
lcall
js
ret
hlt
add
scas
cmp
or
nop
mov
jnp
xchg
mov
sub
movb
jecxz
out
cmp
add
adc
pop
aaa
mov
ds
add
cli
mov
ljmp
dec
dec
sub
mov
mov
cltd
lea
je
lret
mov
mov
dec
add
cwtl
test
mov
mov
inc
in
xor
or
iret
xchg
inc
je
lods
mov
cli
jp
fisttpll
loope
call
mov
sahf
imul
lods
cli
bound
inc
cmp
fcmovb
int3
pop
imul
int3
dec
xor
push
das
push
std
mov
sarl
mov
push
xor
mov
push
repz
jae
cmp
mov
into
mov
push
sub
xor
mov
repnz
popa
ja
ds
pushf
mov
adc
mov
mov
test
ret
xchg
pop
dec
jecxz
push
inc
xor
leave
or
adc
test
in
pushl
xor
xchg
je
das
sub
mov
sbb
out
fildll
scas
cltd
pop
imul
jg
xor
push
notl
and
xor
inc
pop
add
sub
lcall
test
fwait
dec
aaa
outsl
xchg
jl
imul
movsb
push
fsubs
test
mov
xchg
jle
shll
repnz
daa
shlb
enter
lods
inc
mov
dec
pop
rclb
mov
push
mov
neg
popf
leave
cmp
ds
insl
xchg
frstor
push
and
mov
icebp
mov
inc
fmuls
mov
adcl
cmp
fistps
push
mov
jle
dec
pop
adc
repz
and
mov
mov
flds
pop
dec
mov
fiaddl
sbb
inc
das
shlb
push
icebp
rolb
mov
mov
xor
mov
shr
popf
ret
and
int3
mov
cmp
xchg
test
cmove
pop
addr16
mov
jno
mov
mov
mov
mov
testl
mov
push
call
sub
fsubl
and
dec
in
pop
add
aas
out
pop
cld
ds
or
xchg
int
fcompl
sub
addr16
orb
adc
mov
data16
fidivs
testl
mov
dec
inc
ret
add
test
mov
call
push
lahf
shrb
sub
jg
pushf
and
adc
xchg
es
sbb
test
mov
xor
mov
filds
inc
inc
or
rcll
lock
inc
xchg
mov
popf
mov
xor
mov
jmp
nop
sbb
mov
mov
xchg
fstpl
jb
ja
pop
or
enter
push
mov
dec
and
cmp
loop
scas
add
or
loop
cs
push
add
dec
loope
mov
mov
std
add
rclb
out
pop
sbb
inc
mov
fildl
push
pop
push
push
mov
outsl
lds
dec
aam
leave
pop
nop
mov
add
jns
sub
mov
scas
sub
dec
lahf
testb
and
je
ja
ss
push
pop
dec
sub
mov
push
je
sarl
sti
shlb
xchg
shll
xor
rorb
cmp
adc
fmuls
mov
jne
mov
aam
adc
inc
iret
sar
mov
pand
mov
or
imul
loopne
xchg
mov
cwtl
sub
stos
and
dec
xchg
or
mov
jmp
dec
scas
into
lds
icebp
aaa
loopne
insb
cmpsb
add
mov
mov
sbb
pop
mov
mov
mov
xor
es
add
rcll
push
repz
jne
lret
fwait
test
movb
lock
sbb
mov
xor
pushf
sbb
jmp
sbb
or
add
popa
inc
dec
call
movsl
push
into
bound
jbe
inc
jg
test
adc
or
push
xchg
or
sub
lret
imul
push
lds
lret
js
jmp
fwait
dec
mov
xor
ds
pop
and
or
popf
aam
rcll
dec
inc
imul
fsubrp
adc
and
movsb
mov
push
aad
jmp
or
sub
sbb
xchg
mov
pop
xchg
pop
dec
dec
je
cmp
mov
outsl
and
push
outsl
cmp
pop
fldt
dec
xor
or
and
divb
sub
add
mov
repz
sahf
repnz
insb
and
mov
scas
or
push
jg
out
jno
into
pop
cld
push
xchg
shr
pop
aad
jae
aaa
sbb
mov
movsl
pop
lcall
movsb
mov
xchg
add
pop
shl
lcall
inc
movsb
push
filds
negb
mov
inc
into
cmp
mov
cmp
xchg
icebp
jmp
orb
sarb
mov
loope
das
inc
push
cmp
sbb
mov
popf
fldl
jecxz
pop
xchg
in
mov
pop
mov
arpl
mov
testb
jne
and
mov
adc
xchg
dec
pop
stos
movsb
cmp
vpsubb
rol
stos
or
cmpsl
jo
jecxz
mov
mov
fcomi
add
cmp
fiaddl
add
ss
iret
orl
jb
adc
add
cli
loope
ja
sub
adc
cmc
jp
lds
jl
add
mov
add
or
add
add
pop
inc
enter
add
fsubrl
out
stos
repnz
ficoml
outsl
and
or
mov
add
orb
jecxz
lret
sbb
add
dec
leavew
js
or
jmp
add
fwait
insb
gs
dec
xor
xor
add
jle
inc
roll
add
clc
dec
push
mov
add
push
sahf
inc
add
add
sbb
fisttps
add
loop
add
add
and
mov
xchg
add
popa
and
or
sub
inc
inc
cmp
jl,pt
push
add
lods
inc
fstps
mov
add
icebp
sub
add
mov
xchg
cli
dec
insb
bound
into
lret
popf
sbb
lock
cmpsb
push
xchg
stos
pop
pop
xlat
jle
cmpsb
xchg
jnp
add
mov
out
lahf
mov
dec
pop
lds
xchg
add
popa
lock
add
iret
xchg
mov
jae
cmp
or
ja
icebp
xchg
mov
add
mov
or
add
imul
gs
and
test
outsl
xchg
push
cwtl
xor
mov
pop
and
add
mov
add
or
xchg
xor
mov
clc
add
loope
shlb
push
mov
adc
cmc
int3
notb
pop
mov
sbb
fcoms
pop
add
arpl
add
cmp
sbb
ljmp
cmp
cmp
repnz
das
mov
pop
add
push
or
add
nop
dec
std
mov
stos
mov
lods
add
dec
insl
pop
daa
add
leave
dec
or
and
ja
adc
ret
xor
js
sti
lock
subb
push
fiaddl
add
lods
test
movl
add
mov
push
int3
adc
jl
sub
cmpsb
shll
lldt
outsl
pop
xor
dec
repnz
mov
add
rorl
ljmp
push
adc
lea
and
inc
mov
and
int3
out
testl
inc
sti
push
add
ret
jecxz
cmp
add
and
jo
movsb
inc
cmp
popf
jg
jns
adc
xchg
std
pop
mov
xor
sbb
les
dec
push
js
shlb
xchg
jmp
test
or
negb
popl
lret
sbb
movsl
test
pop
add
add
or
xor
xchg
ljmp
add
cmp
inc
add
je
sahf
stos
cmp
push
aad
rcr
jne
addl
lds
add
setns
out
add
xor
mov
mov
add
jno
leave
lret
sub
jl
dec
add
lods
clc
fistps
addb
mov
mov
xchg
rorl
xchg
add
lret
ret
mov
pop
test
xchg
or
idiv
es
mov
add
add
add
popa
jae
les
pop
add
rolb
add
and
fs
enter
lcall
mov
int3
mov
inc
add
jno
add
mov
mov
sub
inc
push
fdivs
out
sbbl
add
nop
dec
mov
test
cmp
lds
pop
aaa
mov
in
jg
add
and
add
push
mov
fdivrs
add
arpl
add
push
adc
mov
add
jmp
adc
cmpl
daa
xchg
fxch
jmp
mov
fld
mov
cmc
mov
aas
and
push
es
nop
add
dec
outsb
fldl
in
stos
cmp
push
inc
call
add
inc
in
add
std
xor
ljmp
xchg
inc
cmp
mov
jns
out
test
rcrb
mull
sbb
mov
das
bound
in
and
pushf
mov
aaa
or
jb
sbb
ds
shrl
in
mov
sbb
nop
or
or
mov
inc
xchg
inc
in
fidivs
cmpsb
imul
cmp
add
inc
out
ljmp
ret
inc
add
mov
xor
add
mov
aaa
inc
xchg
mov
loope
add
jns
inc
push
add
pop
in
add
xchg
popa
divl
add
arpl
out
divl
sahf
add
and
gs
xchg
imul
mov
cmp
mov
lret
sbb
push
cli
call
mov
or
jmp
xchg
lret
in
add
std
aam
sldt
cmp
lods
xchg
out
xor
push
push
sbb
pop
or
addb
jae
in
add
mov
int3
cmc
jo
add
jl
fs
add
jle
bound
xor
mov
call
mov
lret
push
mov
pusha
insb
add
sub
jne
ljmp
add
cmp
or
test
mov
dec
add
lret
mov
add
cmc
xor
add
mov
jb
xor
add
cmp
mov
das
jge
mov
xor
push
add
movsl
mov
mov
int3
dec
lahf
add
test
add
aam
add
xchg
sub
sub
lcall
mov
loop
adc
push
insl
add
cmp
pop
ficoml
add
shl
mov
pushf
add
dec
psubb
add
mul
in
in
cmp
push
mov
inc
std
ja
loop
cwtl
xchg
add
add
sbb
mov
jbe
add
add
popf
push
addr16
movsb
in
mov
pop
and
and
daa
pop
add
test
insl
in
add
add
stos
in
call
test
add
lcall
pushf
add
xchg
cmp
xchg
sub
gs
loope
ror
add
pop
add
add
add
and
add
add
push
inc
out
jl
sub
lahf
test
cmpsb
out
add
fists
shll
add
push
sub
add
and
xor
xchg
rcrl
rorb
movsl
and
sti
mov
or
pushf
shl
cs
push
es
xchg
mov
lahf
gs
outsb
and
sub
arpl
test
mov
nop
jne
movsl
into
pushf
test
out
mov
cwtl
jecxz
add
arpl
lret
pop
bnd
add
push
movsl
scas
jmp
xchg
and
mov
stos
push
inc
addl
loop
aam
pop
iret
dec
mov
sbb
fisubl
jmp
dec
aas
mov
rcl
adc
add
jl
mull
push
mov
push
and
mov
pusha
jno
add
xchg
test
and
bound
add
std
pop
pop
cmpsb
mov
pop
jl
call
add
repz
add
pop
aas
outsb
sub
add
add
pop
loopne
add
xor
jnp
add
add
mul
xor
add
fstl
mov
push
dec
add
add
adc
xchg
cwtl
add
add
popf
mov
sub
cmp
lret
sbb
jge
aam
fstpl
adc
sbb
sbb
and
xchg
adc
add
add
insl
ret
jb
jg
lods
int3
test
sub
and
call
hlt
gs
inc
xchg
es
push
push
call
sti
push
cmpsb
sti
cmp
xor
sub
dec
or
out
adc
mov
mov
pop
clc
fwait
xchg
cmp
add
jmp
hlt
add
movsb
add
inc
shl
mov
push
lcall
add
adc
pop
cli
clc
lcall
mov
mov
adc
xchg
aaa
mov
add
mov
ret
and
sarl
and
add
lret
sub
add
arpl
adc
clc
cmp
add
jno
int
jb
les
add
mov
push
cltd
mov
loopne
sbb
loop
hlt
loope
lahf
add
cmp
add
jmp
mov
add
pusha
pop
add
jp
jge
add
add
add
cmp
out
xor
sahf
test
add
and
mov
fistpl
mov
jns
stos
fs
flds
sti
sub
jns
or
int3
sbb
add
add
xor
clc
push
and
mov
outsl
mov
cmc
push
pextrw
loopne
scas
xor
out
enter
pop
fwait
push
add
loope
sarl
sti
xchg
add
xlat
xor
outsl
add
cld
aam
in
sahf
mov
lods
push
jmp
pop
sbb
pop
jl
pop
add
dec
cmp
or
ret
jns
xchg
orl
mov
sbb
fwait
std
mov
push
cmpb
addb
or
add
add
test
add
sub
out
sarl
push
xor
xor
mov
jmp
push
push
mov
ret
cmp
and
mov
loopne
push
sub
insl
fwait
mov
cmc
mov
cmp
pop
or
fimull
add
and
addb
mulb
dec
xlat
pushf
push
faddl
sarb
aad
fisttpll
mov
movsb
lret
call
push
in
add
lock
clc
gs
inc
in
rorb
adc
jmp
lret
dec
int3
push
ja
add
push
inc
stc
sysenter
fs
xchg
das
cmc
add
in
mov
inc
sbb
repnz
mov
icebp
cltd
incb
mov
rclb
stos
stos
insb
imul
jbe
in
aas
adc
fwait
mov
mov
nop
ficoms
nop
pop
push
xchg
es
fsub
mov
enter
mov
mov
add
sbb
or
xor
mull
leave
or
pop
xchg
push
mov
add
pop
rolb
fucom
cld
test
inc
adc
xor
std
in
xchg
pop
inc
mov
xor
pop
sub
xlat
pop
mov
fbld
sahf
mov
out
dec
mov
add
push
cs
in
cmp
lds
lods
mov
and
push
pop
test
fsubl
push
lea
cli
sar
add
lea
lods
pusha
mov
mov
shrb
mov
sti
pop
jae
add
sub
cmp
jae
mov
in
xor
add
add
push
ret
sub
add
xor
aaa
add
or
xlat
imul
dec
test
xchg
mov
into
or
sti
and
aas
add
cmp
cmp
xor
and
xor
sub
mov
movsb
fldln2
inc
arpl
es
out
imul
fisttpll
stos
mov
in
sub
adcb
enter
xorl
movsb
push
lcall
push
xchg
ja
push
mov
in
add
lret
inc
mov
mov
lahf
add
lods
iret
aas
lret
jle
stc
xchg
cmp
add
mov
cmp
or
sub
setge
in
cltd
gs
divl
dec
cmpsl
cltd
mov
inc
add
and
out
popa
jns
lods
inc
loopne
add
add
lea
mov
lds
lret
jmp
sahf
mov
push
mov
sbb
add
adc
sbb
push
add
jge
sub
frstor
jle
mov
xchg
inc
add
or
dec
cmp
add
lret
mov
and
cmp
add
loope
sbb
sahf
xchg
xorl
sysenter
std
xor
xor
mov
mov
adc
push
js
mov
insl
pop
add
cmp
and
add
shl
add
pop
jo
push
add
cmpsl
js
jecxz
hlt
sub
add
add
call
dec
pop
pop
dec
stc
fwait
add
add
int3
in
pop
mov
scas
in
add
add
out
or
test
add
lret
mov
push
add
xor
push
inc
push
add
push
cmp
add
bound
fiaddl
enter
lock
jns
roll
dec
ja
subb
add
dec
in
mov
mov
xor
addr16
push
in
aaa
push
xor
inc
pushf
add
lcall
add
popf
popf
add
pop
rolb
sub
push
loope
pop
cmp
cmpsl
cltd
dec
add
mov
imul
adc
roll
jno
imul
add
or
dec
cltd
jp
xchg
or
add
scas
je
jae
add
nop
into
add
add
jge
sbb
or
std
pusha
lret
or
popf
pop
sbb
or
dec
mov
xchg
sbb
ret
aam
les
or
sbb
outsb
pop
jae
mov
and
pop
scas
or
dec
cmp
adc
xor
movsl
gs
arpl
pop
mov
mov
add
jo
js,pt
ja
add
add
pop
dec
sbb
enter
mov
jge
out
imul
mov
add
push
mov
mov
test
and
imul
inc
xchg
xor
repz
lea
adc
jnp
add
test
imul
pushf
mov
ds
fucomp
hlt
add
xor
jno
dec
push
mov
add
aad
cmpsl
es
nop
push
adc
mov
pop
popf
mov
jo
jge
add
sub
pop
cmpsl
lret
adc
jbe
or
or
cmpsb
aas
ljmp
and
inc
lcall
push
sub
push
daa
cld
adc
jecxz
add
out
dec
decl
add
loope
xchg
mov
fldl
add
add
adc
lds
or
test
jmp
and
sbb
push
popa
addl
mov
and
sbb
mov
fstpt
es
sub
push
mov
add
sbb
add
cmp
aas
hlt
stc
add
mov
fstpl
pop
call
divb
rcrb
shll
sahf
loop
add
addl
dec
aaa
add
leave
mov
sub
das
stos
or
xchg
jmp
add
jbe
pushw
add
pusha
mov
loop
loope
cltd
and
out
xchg
jmp
jl
hlt
mov
inc
aas
mov
add
add
movsb
inc
xchg
xor
push
add
bound
addr16
arpl
push
popa
xor
add
xchg
add
dec
inc
xchg
pop
cmp
xchg
add
les
ror
insl
add
shll
inc
add
out
push
cmp
out
add
cmpsb
xor
data16
xor
add
inc
adc
pop
add
lock
dec
into
fsubrl
je
fiaddl
add
sti
mov
add
dec
push
push
popa
addl
mov
mov
cmp
pop
fwait
scas
ret
xchg
pushl
outsl
bnd
add
call
clc
dec
jne
mov
cli
xchg
imul
inc
cmc
das
sub
popl
pop
mov
add
ja
jmp
pushf
add
add
add
and
sar
dec
add
add
xor
cmc
add
dec
adc
aaa
pop
add
jb
push
sub
or
add
add
mov
jne
call
pop
rclb
or
decl
add
xchg
pop
lcall
dec
add
add
inc
push
add
mov
mov
in
repnz
pop
stos
xchg
pop
sbb
mov
xchg
test
add
popf
lods
pop
add
mov
xchg
inc
aas
mov
push
cld
fiaddl
add
cli
inc
xchg
insb
add
pop
nop
push
or
adc
inc
push
add
pop
cmpsb
adc
dec
and
orb
arpl
pop
fyl2x
add
inc
cmc
cmp
mov
les
add
jp
shll
sub
add
jns
movsb
sub
ss
call
idivb
test
xor
jne
sahf
testl
sub
cwtl
adc
mov
icebp
add
add
out
shll
dec
stc
add
aaa
and
mov
mov
push
fwait
inc
ret
add
das
sub
mov
jge
call
cmpsl
int
rclb
cwtl
add
scas
aam
mov
xchg
pop
or
add
fists
xlat
gs
das
cmp
sbb
add
pop
or
out
or
add
ficoml
pop
push
xor
inc
int
out
cmp
jne
sahf
add
in
imul
add
mov
es
pop
inc
push
pop
sub
loopne
add
add
lods
and
add
out
xchg
add
pop
lds
cmp
dec
loope
add
add
jle
pop
mov
int
add
outsl
popf
cmp
popl
nop
dec
sbb
dec
add
xlat
loope
sub
mov
add
sbb
mov
lods
mov
mov
rolb
add
ss
add
jle
dec
add
mov
add
pop
testl
dec
sub
jmp
push
fldenv
cmc
cmp
out
fnstenv
std
outsb
add
js
ja
inc
mov
call
dec
or
add
add
arpl
push
mov
in
add
add
lods
pop
ljmp
push
mov
shlb
pop
mov
mov
aaa
add
pop
sub
andb
mul
dec
mov
push
shll
add
insb
add
adcl
jns
rcrb
stos
jo
imul
jp
push
inc
faddl
pop
scas
cmc
add
push
xor
insl
sub
cs
mov
lods
mov
xchg
mov
sub
xlat
cmp
add
inc
cmp
sub
out
aaa
or
ret
jnp
add
insb
sldt
insl
sti
dec
sbb
inc
mov
add
outsl
scas
and
icebp
add
cmpsb
sub
mov
pop
push
xlat
add
cmp
add
les
add
and
add
jo
mov
int3
rcr
setns
lock
jo
add
pop
lods
push
jae
add
pop
lock
push
test
lock
mov
stos
inc
or
sbb
inc
and
aaa
add
and
push
icebp
inc
mov
or
in
pop
push
ror
dec
icebp
fs
movsb
add
daa
jl
leave
adc
push
inc
jmp
addr16
fxtract
les
arpl
aas
or
jmp
add
fcoml
sahf
push
mov
data16
inc
add
mov
pop
mov
add
add
pcmpgtw
ret
mov
lcall
jmp
push
sub
xchg
movsb
hlt
jp
ret
xor
push
fidivs
sub
ss
ret
test
lods
push
add
add
shl
in
cmp
add
pop
mov
or
pop
ja
mov
push
das
in
cmp
or
enter
adc
push
inc
in
jmp
addr16
nop
sbb
mov
and
add
jmp
jns
into
insb
in
xor
stos
cmc
add
cli
aam
ljmp
push
xor
lcall
clc
shl
jne
add
subb
mov
inc
cmp
out
icebp
mov
lea
xchg
ljmp
movsb
pop
sbb
pop
add
pop
xchg
jge
adc
add
jp
push
and
adc
movsl
dec
inc
lock
xchg
add
xor
mov
cmc
ds
das
or
rorb
bound
push
add
jns
sbb
xchg
ret
in
sub
add
add
lds
int3
arpl
adc
adc
add
add
sbbl
aas
adc
ss
cmp
add
fcmovnb
mov
xchg
add
or
add
imul
mov
scas
lods
add
nop
test
ffreep
or
mov
add
cli
inc
je
and
aaa
xchg
popf
and
push
cmp
add
lods
or
push
loope
mov
inc
rcll
cli
cmp
das
call
es
jno
fisttpll
pop
das
cmp
adc
cs
add
and
lock
dec
test
add
add
scas
lods
shl
xor
in
aaa
add
push
and
out
add
xchg
push
clc
mov
lcall
mov
sti
add
mov
add
fstps
xor
mov
add
in
inc
adcb
pusha
mov
inc
je
adc
add
movsl
dec
pushf
xlat
jns
outsl
and
sti
mov
subl
clc
popf
and
xor
test
rorl
outsl
int
int3
js
add
filds
pop
jmp
cmp
dec
xor
mov
iret
adc
jb
adc
adc
mov
and
mov
in
jo
add
adc
sbb
ja
mov
dec
mov
mov
mov
lcall
rorl
insb
scas
mov
mov
lods
mov
mov
adc
cmpsl
imul
add
xor
outsb
sub
mov
hlt
popf
add
cmpsb
jns
pop
inc
add
fisubl
sub
stc
iret
shr
add
pop
in
icebp
movsb
imul
xchg
or
mov
sbb
into
cmpb
cmpl
mov
jns
jno
add
add
mov
xchg
ret
mov
add
ljmp
add
mov
inc
add
jns
xlat
mov
push
or
sbb
fadds
test
jo
or
sbb
inc
sti
inc
jb
xchg
fcomps
mov
sub
leave
ja
clc
adc
call
fwait
out
pop
dec
sub
popa
rcrb
rcrb
lcall
cwtl
push
test
add
or
jge
and
pusha
sub
add
les
sub
cmpsl
ror
add
push
jno
mov
in
add
add
adc
add
add
cld
xorl
mov
cmp
cmpl
push
add
loope
jbe
add
outsb
add
add
jne
cmp
sub
add
xchg
push
out
pop
add
add
loopne
pop
and
xor
mov
add
jp
fwait
cmpsb
add
push
inc
out
mov
leave
inc
aas
cmp
out
lahf
or
cmpsb
cmp
jge
aas
lret
jae
pop
mov
loope
adc
shlb
push
push
add
ss
je
jmp
add
inc
inc
daa
mov
push
add
jle
fwait
xchg
incb
in
or
test
jb
xor
mov
fldcw
inc
jb
xchg
pop
xor
adc
xor
rorl
cmp
or
mov
dec
mov
mov
mov
push
cmp
je
cmpsl
lock
movsb
sbb
dec
xchg
mov
call
xorb
scas
fcmovbe
and
push
sti
inc
mov
mov
and
dec
cmp
or
loope
movsb
dec
mov
inc
xchg
push
xchg
push
xchg
jge
dec
insl
loopne
mov
cmp
add
push
push
jne,pn
push
lock
add
pop
cmc
repnz
xchg
push
mov
adc
popf
in
test
cmp
loope
insl
mov
stos
jbe
xor
fstps
add
mov
add
mov
inc
clc
out
xchg
stos
jns
insb
stos
cmp
add
mov
push
cltd
sbb
xor
mov
sti
mov
lods
adc
sbb
add
mov
mov
call
push
int3
cmp
loopne
mov
rorb
sub
dec
in
in
dec
sti
daa
jno
xchg
sub
inc
dec
push
cmp
in
mov
stos
mov
push
push
mov
xchg
inc
or
iret
scas
inc
mov
add
dec
or
and
fidivl
push
xor
and
mov
dec
or
ja
push
setg
filds
insl
popa
in
add
add
pop
rorl
add
mov
add
loope
pop
add
lock
scas
inc
xchg
mov
jno
test
add
sbb
xchg
movsb
xorl
in
adc
sub
inc
add
add
or
inc
outsl
jl
cmp
mov
aaa
cmpsl
sub
add
push
mov
arpl
inc
test
inc
dec
push
push
jl
add
loopne
lods
out
aam
or
push
adc
test
jecxz
mov
gs
push
mov
sbb
jae
mov
add
rclb
or
sbb
add
sub
out
mov
mov
pop
pop
or
ljmp
lods
cmpsb
cwtl
stos
and
das
mov
sahf
ss
sbb
jmp
pushf
xor
dec
je
add
mov
in
sbb
in
pop
cltd
pop
imul
xor
mov
js
mov
test
fisttps
out
push
ficomps
pop
add
cmp
push
testb
aas
clc
enter
lods
dec
inc
sub
pop
xchg
call
mov
in
jecxz
sub
adc
adc
add
mov
roll
mov
inc
mov
lods
cwtl
bsr
push
fmul
jno,pt
jg
enter
lods
mov
pop
jbe
mov
call
lret
cli
pop
pop
out
jl
dec
jg
jno
fs
and
repnz
shr
repnz
cld
inc
and
xor
pop
popa
xchg
nop
mov
cwtl
insb
push
pop
add
xchg
push
das
in
jge
jns
mov
rorb
fsubs
mov
cmpsb
repz
add
push
movsl
mov
sub
push
mov
xor
jg
or
add
call
add
add
add
cmp
pop
hlt
cltd
ljmp
inc
mov
add
and
lret
add
lods
call
mov
and
dec
in
and
jbe
or
movsl
cmpsb
xchg
push
out
icebp
dec
lods
hlt
pop
aam
add
add
das
cld
push
lcall
cmp
addl
add
ja
cld
jnp
imul
push
out
push
xchg
adc
inc
and
xor
std
fisttps
dec
and
mov
lea
add
dec
pop
xor
xchg
enter
popf
lret
mov
ret
loopew
push
lea
roll
outsb
hlt
out
dec
stc
adc
or
fisubs
mov
inc
hlt
in
repnz
mov
xor
pop
mov
popa
out
inc
out
ret
loopne
and
mov
push
add
dec
rcll
cld
call
cli
mov
sbb
scas
xchg
mov
fdivl
push
shrl
lods
jmp
icebp
push
pop
divb
and
mov
pop
enter
mov
add
mov
cltd
stc
add
ja
xor
imul
xchg
jle
fldpi
mov
mov
or
adc
cmp
xor
add
xor
mov
xor
sbb
mov
ja
pop
loope
cmp
add
cmc
mov
add
clc
insl
lea
ret
data16
fistpll
adc
add
cmp
xor
add
push
cmp
lods
pushl
in
cmp
repnz
sub
add
cs
call
or
cmp
adc
fs
ret
inc
mov
inc
cmp
insb
sbb
sbb
jo
jns
popf
jecxz
adc
enter
pop
scas
xchg
mov
int
jb
mov
push
push
sbb
adc
sub
add
scas
xchg
and
dec
jp
inc
sub
xchg
mov
mov
ror
inc
mov
sub
fucomi
pop
es
out
vminps
push
add
add
jae
lret
jae
ret
into
in
sti
mov
addl
cmpsl
sbb
xor
mov
mov
jmp
jbe
and
sbb
scas
mov
cli
cld
mov
push
cltd
movsb
insl
fimull
and
xchg
jmp
rolb
mov
loop
out
mov
sahf
add
sti
mov
je
add
add
pop
lcall
xor
cmp
loop
jns
fcmovnb
insl
sub
add
mov
pop
ret
xchg
dec
mov
out
add
rcll
inc
or
add
xor
cmp
adc
mov
mov
add
mov
frstor
fcmovu
xchg
subb
and
mov
test
or
outsb
sbb
xor
xor
sub
jne
add
push
xor
sbb
add
add
adc
std
int3
out
sbb
ret
dec
dec
inc
add
cmp
jae
cli
gs
inc
xchg
int
movsl
push
xchg
je
mov
jg
popf
scas
and
add
shr
test
add
add
ds
add
ret
add
loope
icebp
iret
fs
add
in
bound
dec
add
jne
inc
push
xor
add
in
xchg
imul
pop
lods
dec
xchg
add
jp
mov
insb
pop
jbe
or
icebp
mov
pop
mov
aas
or
rolb
fdivr
cs
and
add
in
mov
jmp
mov
bound
add
pop
popa
call
outsl
xor
gs
mov
out
loopne
add
fsubrs
add
mov
mov
add
pop
daa
cmp
daa
test
mov
test
pop
add
pop
xor
push
insl
mov
loopne
mov
arpl
or
cmp
sub
sub
pop
add
push
mov
mov
daa
mov
je
fisubl
jg
rorl
fbstp
outsb
jo
xchg
sub
adc
int3
js
pop
insl
mov
mov
ss
cmpsb
das
lcall
add
cwtl
jecxz
pop
pop
negb
rol
push
cmp
jbe
das
xchg
xor
aam
and
inc
stos
inc
jge
test
lahf
test
xchg
out
cmp
jg
stc
jp
aas
mov
mov
das
push
lods
iret
in
lods
cmp
mov
adc
rcrl
pushf
orl
mov
xchg
jp
lret
mov
out
push
mov
and
rclb
in
pop
popf
enter
orl
ret
stc
notb
cli
xchg
or
xchg
pop
negb
xlat
or
cmp
cmpsl
stos
dec
push
jns
cmp
jo
scas
pushf
or
in
sub
stos
push
hlt
inc
arpl
push
mov
pop
in
mov
stc
inc
mov
push
mov
push
mov
pop
pop
repz
and
test
dec
and
dec
je
mov
cmpsb
or
jns
aad
and
inc
mov
out
push
sar
stos
dec
addl
inc
sub
or
out
dec
idivl
jnp
or
test
loop
xchg
jmp
iret
out
xchg
rcll
pushl
adc
jne
aas
mov
popa
mov
jge
shrl
fmul
ds
rcrb
add
in
nop
bound
inc
fiaddl
add
lret
mov
add
add
movsl
in
testb
add
sub
sub
lods
pushf
fadd
fistpl
cmp
lods
mov
jbe
mov
mov
enter
adc
or
add
add
add
pop
shll
outsl
push
mov
mov
dec
and
jae
dec
or
push
push
fs
sbb
adc
fisubl
and
push
fs
roll
testb
pop
imul
daa
push
andl
push
jmp
and
icebp
cmpsl
andb
cli
filds
mov
sbb
ret
mov
jno
lahf
dec
pusha
jge
jbe
les
clc
loopne
jp
pushw
pop
sub
mov
push
xchg
imul
mov
rcl
jecxz
int3
mov
daa
out
xor
mov
xor
in
jnp
mov
jae
fstl
dec
cmc
mov
dec
and
add
out
ja
aaa
addr16
mov
mov
xchg
add
add
fs
xor
pop
jbe
adc
ret
xor
js
pop
cld
sub
cmp
fnstsw
sbb
test
or
lods
jl
add
test
jb
jne
xchg
in
loope
cmpsb
addb
and
pop
fwait
mov
out
call
stc
jp
add
xor
cltd
daa
rcrl
xchg
cmp
add
mov
pop
push
inc
frstor
nop
or
push
ljmp
in
inc
xor
add
mov
repnz
sarb
add
scas
jno
dec
lods
lock
or
repnz
pop
adc
loope
jns
jle
js
add
add
push
or
sbb
jl
xchg
in
in
nop
sbb
imul
stos
or
xchg
jge
dec
xor
pop
add
movsb
je
add
push
repnz
stos
inc
mov
xchg
xlat
sub
add
arpl
sbb
imul
cmp
sti
jne
dec
add
dec
movsb
inc
cld
add
jmp
stos
add
fdivrl
add
or
dec
cmpsl
int
fnstcw
xchg
xor
pusha
cltd
mov
push
adc
ss
adc
aas
xor
mov
inc
lcall
lahf
fldl
xlat
sbb
bound
jle
or
add
dec
inc
dec
scas
pop
lahf
xchg
fldcw
add
inc
xchg
add
pusha
add
add
repnz
cmp
jae
lcall
hlt
mulb
mov
push
add
mov
test
jmp
jmp
inc
cmp
or
add
add
add
add
inc
push
outsl
lret
sahf
sbb
leave
mov
mov
mov
mov
lds
adc
sub
sbb
mov
fs
add
cmp
mov
add
jl
negl
lret
sbbl
ljmp
sbb
fwait
stos
cmp
inc
into
inc
push
jg
jmp
pusha
bound
insb
and
add
scas
rcll
xchg
mov
inc
mov
jecxz
test
lds
ret
jno
cli
testl
sti
out
aam
dec
stos
jb
pushf
sbbb
dec
or
xchg
pop
lcall
cmp
sub
or
imul
stos
and
xor
or
rcr
ret
and
push
xor
stos
pop
enter
sarb
call
pusha
mov
add
push
es
sbb
fldl
add
xor
out
stos
loop
insb
add
call
or
mov
pop
out
mov
shlb
adc
out
addr16
mov
add
aaa
fimuls
and
cmpsb
rolb
mov
rclb
bound
iret
addr16
mov
jle
jl
jl
xor
std
jl
fadds
add
sub
dec
xchg
sbb
add
roll
int3
mov
pushf
jae
out
lahf
xchg
mov
sahf
stos
dec
mov
ja
addb
add
decl
mov
scas
xor
cmpsb
mov
imul
shrb
pop
ret
cmpsl
pop
cltd
pop
xor
lea
xor
rclb
or
pop
jecxz
jmp
shlb
popl
jl
cmp
sti
stos
inc
popa
roll
mov
and
add
add
pop
scas
push
inc
or
add
xor
dec
lahf
add
jne
cmpsl
imul
add
nop
loop
out
out
std
hlt
divb
or
idivb
popl
fucomip
jecxz
push
push
cwtl
fs
cmpsb
pop
in
mov
add
mov
dec
add
add
add
out
add
mov
push
cmpsb
in
loope
outsl
mov
out
dec
fisubs
mov
sbb
cmp
jmp
add
add
add
pop
sbb
add
sub
pop
jl
xchg
es
pop
clc
daa
adc
xor
add
add
add
push
xchg
imul
stos
or
add
cmp
and
mov
test
dec
add
dec
xor
cltd
lahf
pop
jmp
adcl
sbb
mov
loope
xlat
mov
aad
insb
add
sbb
es
sub
jg
add
add
xor
or
mov
xor
add
xchg
sbb
adc
add
push
push
add
scas
gs
sahf
sbb
jae
add
and
push
filds
add
sub
xor
dec
push
mov
mov
lret
in
filds
add
fisttps
mov
add
andl
jns
aad
insb
in
mov
lods
inc
fsubrp
push
data16
add
push
inc
add
add
fucomi
xor
loopne
bound
mov
or
add
add
bound
add
add
sub
daa
rolb
mov
insl
mov
in
add
in
sub
icebp
jno
xchg
fiaddl
rorb
sbb
push
inc
mov
mov
test
adc
outsl
lods
in
cmp
pop
add
and
fdivs
pop
cwtl
test
mov
mov
jp
cld
sahf
add
add
arpl
out
ret
jns
in
fcompl
mov
push
lldt
jp
leave
imul
sub
mov
sti
pop
daa
push
dec
push
out
push
jnp
dec
mov
pop
adc
jmp
mov
xchg
add
mov
cmp
sub
add
adc
in
sbb
xchg
fnstcw
sub
mov
cmp
add
rcr
jl,pn
rcrl
push
add
mov
mov
jno
and
sar
mov
push
cmp
sarl
popf
leave
jecxz
adc
das
lods
add
push
call
and
mov
adc
aas
xchg
icebp
dec
mov
sahf
hlt
ds
bnd
cmp
aam
or
cltd
notb
add
or
sldt
inc
call
fs
mov
add
add
fwait
fwait
cmpsl
icebp
adc
add
xor
addl
dec
lcall
add
add
mov
pop
cmp
fs
pop
push
add
fprem1
cld
js
test
ret
pop
addl
push
sahf
xor
add
mov
call
inc
push
in
pop
add
add
aad
inc
sti
lcall
add
xchg
or
inc
adc
add
and
jbe
int3
push
roll
std
and
filds
mov
xor
sub
add
sub
into
jl
push
jmp
add
jmp
roll
cmp
test
and
mov
inc
inc
add
push
add
fldl
add
adc
rcrb
inc
jle
addr16
into
shrl
dec
add
int
adc
add
push
mov
aas
aaa
ret
mov
sub
add
add
mov
jbe
mov
icebp
repnz
inc
add
pusha
mov
add
inc
inc
cli
mov
add
add
stos
or
lock
and
cmp
div
mov
cmp
add
pop
push
add
add
add
or
pop
add
in
push
xor
dec
lds
mov
test
daa
pop
nop
pop
nop
sbb
and
jmp
add
pop
jb
rorb
push
pop
cmc
iret
iret
add
scas
dec
lods
in
xor
dec
mov
jno
add
xlat
fnsave
add
stc
sbb
xchg
or
pushf
jnp
xor
xor
mov
pop
push
fistps
lahf
mov
ret
push
or
mov
std
and
and
push
mov
hlt
fldenv
aaa
stc
aaa
dec
fsts
xchg
test
pop
add
xor
fistpl
add
jnp
inc
data16
add
mov
add
push
lods
imul
xchg
icebp
ds
mov
in
lret
lea
add
jp
inc
mov
sti
jo
pushf
idiv
mov
icebp
add
sbb
popf
push
mov
mov
hlt
sub
add
xchg
pop
addl
add
cmp
add
push
loop
cmp
rorl
xchg
xor
ret
pushf
pop
aas
pop
rorl
jge
mov
xor
xor
lret
inc
gs
dec
add
jae
adc
lods
icebp
pop
sbbb
dec
xor
add
in
out
shlb
pusha
add
out
or
adcl
or
sub
iret
push
jmp
scas
push
inc
cmp
jne
cmp
in
rorl
in
pop
add
pop
daa
add
add
stc
je
jp
mov
sahf
inc
imul
and
push
outsl
subb
pushl
and
mov
je
inc
mov
pushf
in
mov
std
popa
gs
mov
sbb
lcall
fadd
and
add
in
outsl
popa
arpl
xchg
push
jg
mov
add
xlat
mov
jl
push
xor
sbb
popa
ficoms
xchg
and
mov
clc
fwait
inc
lret
inc
es
cmc
je
jns
cwtl
pop
and
adc
pop
je
adc
jmp
mov
sub
dec
jmp
cmp
cld
jle
add
in
out
imul
xor
aas
imul
js
adc
stos
fisubs
dec
add
push
add
lods
testl
test
xchg
add
movsl
add
mov
fidivrl
sub
loop
xchg
cmpsb
lods
or
and
rclb
shll
sbb
cwtl
sbb
jmp
rcrb
sbbb
clc
fiadds
popf
and
add
add
mov
or
mov
push
pop
stos
loope
shll
pop
pop
mov
add
jecxz
mov
stos
and
and
mov
sub
add
jl
add
jmp
test
gs
aad
loope
sti
in
sbb
fists
fwait
mov
in
push
pop
xchg
icebp
cmp
mov
inc
and
xchg
pop
jl
push
loop
lret
add
out
push
inc
xor
lret
adc
pop
cmp
cmpsb
and
fildl
mov
add
add
add
in
mov
xor
xor
mov
mov
incb
imul
add
popa
mov
add
add
lret
je
push
and
jp
dec
outsb
sbbl
cmp
mov
sub
adc
pop
mov
testl
and
cwtl
fsubrl
xor
mov
xchg
jg
add
mov
inc
add
mov
sbb
and
mov
push
je
dec
jg
aad
loope
negb
shlb
cmpsl
rcrl
iret
pop
ret
add
addl
cmp
addb
sub
add
aam
push
movsl
enter
mov
pop
push
insl
adc
jge
jb
popf
clc
bound
jmp
cmc
inc
cmp
sub
or
dec
fwait
icebp
xor
inc
pop
je
mov
dec
jne
mov
add
add
imull
cmp
jge
xchg
pop
add
add
outsl
mov
jbe
int3
add
add
cld
arpl
div
pop
das
mov
shl
movsb
popa
cltd
add
pusha
pop
dec
pop
lods
cmc
cltd
cs
fisubs
push
sub
adc
adc
aam
sub
push
jns
orl
sbb
push
pmaddwd
add
imul
mov
mov
xchg
pop
add
add
outsb
aad
mov
sub
add
out
out
fwait
pop
mov
stos
jbe
jne
sarb
add
pop
sbb
add
add
add
xchg
cmp
dec
add
sbb
push
scas
mov
add
out
incl
add
mov
add
cmp
test
xchg
mov
jp
jbe
mov
add
add
into
outsb
daa
mov
xchg
js
add
shrb
add
stos
fists
push
dec
add
add
stos
cmp
adc
out
inc
inc
sldt
add
out
mov
dec
pop
add
add
cmp
cmp
mov
add
dec
imul
mov
sar
pop
test
jp
inc
std
popl
add
cli
push
js
jecxz
mov
sti
and
add
add
insl
add
push
mov
jmp
mov
jl
test
pop
mov
mov
lea
cmpsl
xchg
sahf
or
arpl
scas
cld
jmp
stos
xchg
push
sbb
xor
push
fwait
or
push
push
mov
movsl
or
push
jle
jbe
add
jns
repnz
mov
add
sub
mov
sbbb
mov
xor
xor
push
lods
pop
inc
call
lea
add
jns
test
insl
jb
xchg
xor
push
lcall
test
les
pop
mov
add
cmp
xor
lea
repz
push
jge
sub
add
in
add
add
adc
inc
testl
pop
fwait
mov
hlt
pushf
add
add
fwait
xchg
push
dec
push
mov
mov
add
add
xchg
mov
popa
xor
add
add
bound
jo
add
cwtl
jmp
cmp
inc
mov
jle
add
lret
dec
push
pop
std
insb
mov
add
rorl
add
add
orl
add
pop
mov
std
test
test
inc
inc
arpl
push
add
add
test
pop
add
lret
add
push
je
stos
test
push
add
jmp
ss
aam
or
dec
pop
dec
add
mov
pop
xor
cmp
out
xchg
sbb
or
adc
cmp
pushf
cltd
or
shlb
push
popl
out
push
fdivrl
mov
lods
add
pop
xorb
push
sbb
inc
push
push
fwait
and
jge
xor
adc
popf
leave
in
add
adc
sbb
pop
jne
add
and
ffreep
xor
and
add
cmp
test
lock
inc
jg
push
int3
or
and
push
dec
mov
xor
hlt
test
add
xor
xchg
xchg
push
inc
scas
and
hlt
cmp
inc
sbb
xchg
push
les
ret
mov
xchg
pop
sub
add
pop
outsl
and
shll
mov
orb
inc
orl
daa
int
fdivrl
sbb
mov
push
popf
jbe
pop
jns
andb
sub
gs
dec
mov
and
add
in
lods
mov
arpl
addr16
shll
mov
jmp
mov
sub
adc
jb
movsl
ret
repz
add
or
jns
xchg
test
fwait
mov
or
mov
test
xor
cmp
in
mov
or
add
out
or
mov
repnz
popf
pop
push
mov
jnp
add
mov
cmp
jmp
inc
dec
or
rcr
mulb
xchg
mov
gs
jae
sahf
imul
leave
pop
aas
arpl
test
faddl
popf
cmp
mov
fnstsw
fwait
add
add
jmp
xor
sbb
test
sahf
xchg
add
and
gs
lcall
mov
add
fadds
add
mov
dec
ret
stos
sti
cmp
inc
pop
in
mov
lods
idiv
add
pusha
aam
out
orb
out
add
xorl
add
mov
push
jle
cli
push
in
test
pushw
nop
inc
push
dec
scas
add
cmp
inc
ret
cmp
push
pop
mov
mulb
mov
add
mov
inc
add
add
push
data16
pop
mov
add
add
fistps
nop
sub
rcrb
iret
repz
mov
scas
mov
roll
jnp
scas
add
add
daa
pop
add
add
mov
lods
js
sbb
xlat
enter
or
add
add
pusha
hlt
or
push
bound
loopne
add
add
mov
xchg
sbb
cltd
add
add
js
jg
in
add
add
sbb
sub
xchg
sub
add
cmp
popl
inc
add
add
popf
pop
jae
test
or
movsl
add
stos
sti
fcmovne
fldl
xlat
jp
stos
add
add
test
xchg
icebp
add
dec
loope
sbb
add
xchg
cltd
leave
and
add
dec
push
stos
es
add
pop
pop
ja
repnz
add
pop
fnstsw
mov
pushf
or
push
xor
and
aad
add
jge
dec
or
pop
cmp
xor
or
mov
add
and
or
add
pushf
jle
int
jbe
ret
scas
aad
push
iret
add
sbb
add
sbb
add
ret
cltd
pop
lock
add
enter
add
std
push
aas
aas
add
stc
ljmp
aas
add
xor
add
stos
sub
flds
dec
std
inc
push
pop
add
mov
stos
call
mov
dec
sub
mov
add
stc
je
add
add
sbb
aas
jmp
das
add
iret
add
lods
mov
sub
add
add
add
cs
movsl
add
fsubr
sbb
or
arpl
into
or
add
movsl
mov
push
mov
es
and
push
mov
cmp
shll
fimuls
arpl
cli
fildl
xor
stos
xor
xor
jne
add
insl
test
add
loopne
mov
mov
jnp
lods
or
dec
ret
daa
add
jecxz
lcall
add
cmpsb
sub
lahf
mov
pop
std
and
add
pusha
xchg
add
add
pop
dec
push
sub
lcall
jmp
add
fimuls
add
cs
int
xchg
add
test
push
fidivs
out
add
push
int
pop
xor
out
add
add
add
add
cmp
gs
mov
in
add
jne
inc
pop
ljmp
clc
hlt
push
and
test
pop
add
inc
jmp
popl
add
jmp
ss
stos
sub
cwtl
jns
fcom
sub
add
dec
outsl
xchg
dec
or
and
jl
fistps
mov
sbb
add
push
in
into
ficompl
shl
into
sbb
fwait
sti
cmp
add
add
xchg
push
add
clc
xlat
js
loope
cmp
xchg
rclb
enter
jl
les
jle
mov
add
cmp
ja
pop
scas
iret
add
popa
cmp
push
mov
imul
and
orb
mov
or
out
push
adc
rorl
add
jg
xor
testl
push
xchg
pop
in
je
sub
or
sub
adc
inc
cltd
outsb
sub
or
loopne
popf
sbb
xchg
mov
mov
xchg
shrl
jp
mov
add
push
sbb
add
jo
in
popf
cmp
test
add
cltd
cmp
cmpsb
aaa
enter
cmc
xchg
jb
mov
popl
mov
adc
and
adc
dec
sbb
push
lds
push
xchg
pop
mov
jg
cmc
aaa
jns
stc
mov
add
jae
inc
mov
xor
xchg
arpl
js
add
mov
int
std
mov
add
stc
jns,pn
push
in
dec
les
nop
or
add
xor
imul
popf
inc
pop
or
aaa
ss
xchg
pop
cmpsl
test
cmpsl
lock
push
pop
orb
imul
add
iret
and
test
add
cwtl
pop
xor
pop
jge
lock
sub
and
jmp
mov
mov
and
xlat
icebp
loop
cld
pop
xor
jmp
nop
sbb
add
adc
adc
cmp
idivb
mov
insl
mov
cmp
add
jg
int3
mov
fidivrs
inc
jae
pop
sti
push
add
aam
pop
mov
inc
mov
dec
sbb
add
add
in
das
pushf
push
cwtl
filds
ret
addl
nop
fisubl
xchg
ds
andb
aaa
sub
mov
cmc
shr
cli
xchg
push
fdivr
roll
and
shrb
sbb
loopne
repz
push
hlt
aad
clc
das
ja
push
cs
in
lret
dec
fildl
xchg
or
xchg
data16
add
jo
dec
je
sbb
inc
or
push
insl
in
add
sub
add
das
setg
in
scas
sbb
xchg
lock
add
add
fucom
pop
add
add
pop
ret
je
jmp
addl
inc
mov
push
ss
xchg
es
xchg
adc
add
mov
adc
add
bound
sbb
hlt
imul
pop
jp
daa
xchg
pushf
popa
lds
xor
sbb
cli
mov
lock
sub
add
js
fbstp
dec
inc
ja
sub
jmp
rcrl
int3
pop
xchg
lds
in
push
mov
add
pop
push
lea
outsb
std
mov
xor
data16
sub
jo
lcall
popa
add
daa
pop
mov
mov
int
sti
ljmp
icebp
sbb
jl
scas
or
sti
xlat
rclb
adc
push
jno
and
pusha
sbb
mov
add
incb
inc
loop
xor
ret
jl
lock
fisubl
or
out
mov
cmpl
arpl
cltd
jb
add
lock
fists
subl
jge
ljmp
push
sbb
add
cmc
inc
mov
fsubl
scas
and
repnz
add
add
pop
mov
movsb
loop
dec
lret
jp
lret
jg
xor
test
cmp
jae
mov
push
add
cmp
cmc
cmp
add
movsl
jo
push
repz
mov
stc
mov
adc
add
sub
mov
leave
pop
mov
fucomip
sbb
or
and
cmpsl
popf
jbe
push
repnz
cmp
je
shrl
fisttps
xchg
in
inc
xchg
stos
xor
add
out
pushf
daa
roll
xor
and
paddsw
push
sub
scas
cmp
in
fists
cmp
adc
loopne
movb
sub
or
add
out
lahf
push
lods
out
out
fstps
or
pop
mov
jge
push
leave
mov
fildl
dec
xchg
cmp
add
jmp
push
xchg
clc
imul
in
fists
flds
add
sbb
loop
pusha
jb
mov
fcomi
imul
scas
xchg
xchg
push
clc
cmp
mov
adc
aas
pop
aaa
push
movsb
dec
push
sub
out
xor
mov
add
inc
jmp
add
in
inc
pop
fnstcw
lods
xor
add
mov
add
lret
mov
add
inc
mov
or
add
je
scas
push
add
add
xchg
movsl
inc
test
std
mulb
adc
daa
call
add
add
dec
push
aam
xchg
mov
rolb
mov
or
sub
lcall
adc
pop
mov
add
mov
mov
xchg
cmpsb
dec
xor
push
xor
enter
das
cmp
add
add
pusha
sub
imul
push
cmp
data16
adc
jno
add
add
push
cs
xchg
daa
cmpsb
cmp
add
add
lahf
clc
leave
cmpsl
pop
inc
movsb
fwait
sub
js
stc
cmp
rclb
movb
mov
rcll
cmp
fstps
mov
add
or
add
xchg
add
int
add
sbb
push
sahf
xchg
add
mul
pushf
cmpsl
dec
add
add
push
data16
xor
ja
mov
in
fiadds
add
pop
cli
add
add
sub
xchg
adc
fadd
inc
push
sbb
or
leave
shlb
mov
rol
jp
sbb
and
cmp
ljmp
leave
movsb
dec
push
push
mulb
ffree
jbe
inc
imul
jecxz
or
add
popa
xor
out
xchg
out
cmp
loopne
popf
test
out
add
out
mov
stos
cmp
push
sbb
pop
cmp
pushl
pop
add
xchg
and
cld
push
lcall
fsubs
ret
div
in
inc
cli
add
call
sbb
lahf
inc
cmp
add
lods
sub
sub
pop
add
xor
fcoml
andl
cmp
icebp
mov
xchg
sub
cwtl
outsb
mov
push
lds
adc
or
sub
xor
ret
push
loope
pop
mov
fwait
in
pusha
scas
or
daa
inc
jb
aad
das
enter
mov
sub
jnp
inc
sbb
xchg
pop
lods
inc
fs
adc
xor
movsl
cld
outsl
test
adc
xor
rcr
pushf
mov
int3
popl
aas
lods
mov
cmp
push
jmp
movsl
imul
dec
or
data16
and
pop
std
es
loope
gs
out
and
pop
push
popf
push
sti
rolb
jbe
lds
add
loopne
popf
inc
xchg
je
inc
jne
cmc
pushf
mov
int3
add
outsb
push
sahf
sbb
mov
mov
aam
pop
pop
idivb
outsb
aas
mov
add
push
fidivl
mov
dec
add
push
popf
add
fdivrs
enter
add
outsl
fsubrl
int3
int3
int3
int3
int3
int3
int3
inc
jl
gs
fistps
sbb
cmc
je
aas
jmp
ret
add
dec
sub
arpl
jbe
xlat
add
iret
aas
adc
sbb
ja
dec
jae
mov
push
jnp
dec
push
dec
cmp
xchg
adc
sbb
mov
sbb
stos
fdivr
sbb
mov
and
dec
ds
pop
jnp
push
pop
ljmp
jnp
testb
add
ret
adc
jl
in
rcrl
arpl
push
mov
hlt
add
add
add
ljmp
hlt
mov
shll
and
mov
dec
inc
add
nop
outsb
xchg
scas
and
cld
scas
dec
int
xchg
add
or
in
imul
pushf
mov
ds
xchg
adc
add
sbb
movsl
loop
fstps
les
mov
repz
add
ja
cld
ss
push
jmp
pop
sbb
lret
add
inc
mov
int
mov
loope
adc
hlt
icebp
mov
xchg
int3
inc
inc
add
mov
in
cwtl
insl
cmp
jb
inc
and
cmp
inc
imul
cwtl
ds
mov
je
incb
mov
mov
outsb
shll
add
dec
fcmovu
das
subb
and
mov
cmpsb
adc
fcmovnu
lret
pusha
fmuls
inc
subl
add
add
movsb
cmp
lds
xchg
out
stos
orl
lret
das
or
mov
shrl
xchg
repnz
cld
jg
loope
into
adc
add
int
add
aas
jnp
loopne
insb
add
lods
mov
test
add
mov
add
imul
adc
das
lcall
add
hlt
aaa
popf
les
mov
add
push
daa
scas
pop
push
roll
add
mov
pop
call
in
addl
mov
loopne
in
pusha
push
out
bound
adc
add
cmpl
ret
mov
add
shrb
pop
xchg
mov
testb
leave
add
test
mov
mov
jbe
adc
sbb
cltd
jmp
add
fwait
insl
dec
cmp
cltd
jecxz
call
sbb
mov
sahf
add
add
in
test
out
and
mov
sub
xchg
in
inc
mov
dec
cmp
add
inc
or
add
add
mov
iret
shr
fisubrs
add
add
insl
ljmp
stos
stos
inc
nop
push
jnp
dec
decb
mov
mov
inc
and
inc
dec
add
add
stos
jnp
scas
inc
add
lcall
add
cld
pop
mov
push
add
xchg
sub
cmpsb
test
je
add
adc
add
sbb
scas
mov
call
xchg
sub
cmp
loope
pop
aas
xchg
lock
aad
add
sub
cmpsl
arpl
xchg
rcr
fstp
lods
lret
pop
pop
icebp
gs
inc
add
orl
cmpsl
jo
add
xchg
aas
pop
faddl
out
xchg
aas
stos
mov
popf
sti
cs
fs
mov
insb
ds
pop
add
sahf
aas
test
dec
pop
and
mov
push
mov
fimull
jno
add
loopne
cmp
sbb
test
lock
add
add
sbb
cwtl
sbb
fidivrl
ljmp
sub
in
test
lock
stos
stos
dec
aas
fistl
inc
dec
add
adc
or
je
stos
stos
in
jg
out
add
add
jecxz
mov
orb
fldl
add
add
es
inc
jo
andb
loop
add
xchg
addr16
in
mull
scas
pop
dec
jg
mov
add
je
inc
ja
ss
mov
sbb
stos
add
mov
push
lcall
mov
xor
jbe
das
and
int3
jbe
xor
aas
pushf
imul
sarb
movl
movsl
add
inc
fsub
sbb
out
sbb
pop
shll
cld
or
gs
pop
andb
and
mov
jb
inc
in
call
jnp
int
xor
or
iret
int3
mov
mov
sti
mov
popf
scas
ja
clc
inc
pop
xor
out
mov
dec
out
mov
mov
push
and
xor
jg
test
sub
adc
hlt
movsl
out
jmp
mov
and
std
mov
test
lods
cmp
mov
ret
xchg
mov
andb
pop
sbb
adc
dec
ror
adc
add
mov
pop
and
push
ja
cmp
scas
stc
mov
in
pop
jl
add
xor
xor
shl
mov
bound
js
add
dec
add
aas
stos
ss
mov
mov
push
mov
lods
add
or
and
xlat
lods
xchg
out
xor
adc
add
js
add
aaa
add
add
gs
fs
pop
or
adc
clc
je
lahf
xor
sub
movsb
pushf
mov
or
mov
dec
add
add
jecxz
loopne
sahf
pop
pop
pop
lahf
bound
pop
add
add
cld
loopne
ret
enter
dec
fmuls
add
add
and
add
push
lods
add
add
and
jnp
add
and
xchg
add
hlt
hlt
sbb
pop
sbb
add
loop
cmp
mov
and
pop
cmpsl
jecxz
and
subb
fsubr
popf
push
std
repnz
mov
add
fisttps
out
ficoms
xchg
hlt
push
mov
sbb
sub
push
push
aas
xchg
sbb
das
and
ds
jg
loop
shr
mov
cli
jmp
pop
in
mov
icebp
incl
add
popf
push
dec
imul
decl
aaa
mov
orl
mov
cmpsl
mov
addr16
in
inc
dec
jg
adc
push
xlat
inc
dec
inc
dec
fs
xor
push
jecxz
jae
lret
ds
adc
stc
mov
ret
fwait
jbe
jmp
and
push
xchg
aam
es
dec
mov
stc
nop
mov
nop
pop
adc
popa
popf
sbb
in
icebp
add
int
stos
add
in
sarl
and
pop
cli
and
add
add
je
movsl
out
gs
inc
or
arpl
inc
test
repz
or
pop
and
mov
es
rcl
push
or
add
dec
arpl
add
in
jns
add
mov
xchg
in
sahf
cld
push
in
popa
cmpsl
pop
push
sub
add
add
data16
pop
dec
hlt
std
add
imul
es
iret
sbb
jp
mov
sub
popa
stc
addl
js
shll
sar
icebp
add
testl
test
repz
fnclex
clc
xor
xchg
ret
pop
add
stos
mov
mov
rclb
push
out
cmp
jno
push
cmp
jle
xor
or
fldl
aam
gs
add
add
add
or
in
icebp
add
lds
in
and
jbe
js
adc
mov
mov
push
pop
mov
add
mov
dec
pop
mov
adc
add
bound
jle
inc
push
test
push
xchg
testb
and
pusha
push
add
jne
or
push
pop
nop
push
xorb
dec
adc
add
fwait
sar
xor
repnz
or
push
pop
data16
cmc
cltd
and
dec
xor
xchg
andl
mov
orl
or
loop
iret
dec
out
mov
call
add
push
adc
add
subb
stc
das
push
mov
sti
mov
lods
or
pop
mov
clc
out
das
lock
add
add
cmp
scas
mov
mov
cs
mov
fistps
mov
popa
pop
xchg
xor
jae
add
cmpsl
pop
mov
mov
push
addl
scas
out
mov
push
icebp
or
sub
push
or
int3
mov
add
xchg
ret
roll
add
xchg
test
add
call
mov
inc
shl
jmp
in
adc
bound
icebp
lret
icebp
cltd
imul
xchg
add
add
or
xlat
arpl
je
xchg
sub
pusha
int
lahf
mov
add
mov
out
cmp
adc
jbe
movntq
add
fdivp
lret
cs
xor
repnz
inc
adc
inc
sbb
jne
addr16
sub
std
pusha
iret
jne
mov
cmp
xbegin
lret
xor
mov
popa
ret
ror
insl
add
std
pusha
das
mov
jmp
mov
popf
xor
push
lret
cmp
xor
or
stos
repz
jb
fbstp
cmp
and
sahf
add
add
ja
add
ficomps
mov
mov
fiaddl
or
add
add
xchg
in
add
test
aam
pop
xchg
jae
sbb
inc
jg
adc
lret
rolb
dec
add
add
add
dec
daa
loope
stc
xor
in
mov
xchg
push
icebp
cmpsl
sarb
cmp
sub
ds
cmpsl
arpl
push
jge
cmp
jno
js
sti
mov
add
add
push
xor
pop
jmp
nop
ja
jbe
add
add
mov
mov
add
dec
shlb
pop
add
rclb
cmc
shlb
push
shlb
add
mull
fldenv
clc
or
addb
sahf
dec
xchg
cmc
mov
jg
xchg
jp
add
dec
add
add
add
rorb
pop
ret
cmpsl
test
arpl
ret
inc
mov
fdivrl
jbe
cwtl
pop
add
inc
fists
mov
test
sub
adc
in
shl
pop
test
pop
push
and
cs
jno
or
add
add
inc
inc
mov
lret
pop
dec
lock
xchg
mov
mov
mov
push
and
cs
ljmp
hlt
add
mov
push
xchg
iret
inc
xchg
fisubrs
mov
idivb
or
push
test
add
loop
add
add
stos
dec
dec
cmpl
fldt
push
cld
incl
push
mov
sbb
xchg
fsubr
adc
lcall
rcl
sbb
in
test
enter
outsb
add
enter
lahf
jb
fnstenv
loop
aad
shll
push
sub
and
and
xor
dec
adc
mov
mov
pmulhuw
dec
and
cmp
outsb
jb
cmc
je
sbb
mov
pop
cmp
push
outsb
inc
mov
fwait
aad
gs
addr16
mov
adc
pop
nop
fbld
mov
rcrl
lods
sbb
cmp
or
mov
cmpsb
pop
mov
or
dec
addr16
or
arpl
cli
dec
dec
mov
mov
sbb
xor
ja
and
add
into
xchg
dec
popl
mov
imul
or
push
xor
add
add
sbb
jb
mov
push
add
testl
int3
lret
add
rclb
mov
pop
aas
imul
repnz
fldl2t
in
sahf
stos
stos
insb
imul
shlb
cmp
add
or
xor
repnz
pop
cmp
adc
and
add
popf
add
add
ljmp
jmp
and
mov
nop
push
fdiv
fbstp
add
lods
sahf
in
cmp
pop
or
call
add
lods
mov
hlt
out
das
mov
and
pop
push
or
push
dec
in
gs
sbb
adc
jbe
or
mov
add
pushf
aas
mov
stc
sub
inc
aaa
xor
cs
test
adc
mov
mov
pop
lods
gs
cwtl
in
jl
fwait
fs
pop
gs
xlat
lods
or
mov
pop
pop
loop
fidivrl
adc
adc
xchg
xor
roll
xchg
mov
test
out
sbb
xor
mov
xchg
dec
sub
das
aam
stos
and
or
adc
xchg
xchg
mov
adc
aaa
aas
and
jo
addr16
shl
cmp
inc
out
mov
jmp
jo
xor
cmp
pop
sub
xor
adc
mov
xlat
mov
ret
mov
dec
lods
sbbb
add
shl
or
ss
daa
mov
aam
fidivl
andl
dec
cmp
insl
xor
or
cmpsb
mov
pushf
lret
cmc
inc
inc
add
add
and
pop
add
add
subl
outsb
add
add
gs
add
add
jmp
fsts
cmpb
pop
shl
shll
push
add
add
sti
inc
add
add
test
inc
xor
bound
lea
or
imul
cmp
add
add
popf
fisttps
pushf
cli
lock
xchg
xchg
and
cmpl
add
sti
mov
out
push
outsl
push
ja
lock
mov
mov
inc
or
or
je
mov
xchg
xlat
mov
push
mov
xor
lock
stos
and
jns
mov
lea
xlat
adc
sub
push
cmpb
aas
xor
inc
mov
xor
fs
in
pushl
or
out
cmc
cld
dec
hlt
lods
add
push
lock
movsl
ret
push
pusha
out
lahf
add
push
mov
outsb
sbb
add
mov
adc
xchg
leave
push
push
cwtl
add
jnp
je
add
popf
int3
mov
jbe
lret
cmp
std
mov
pusha
test
out
xchg
jo
push
push
sahf
loope
xchg
and
shrl
popf
lods
jg
iret
shlb
xor
jo
pop
xor
dec
shrl
scas
dec
cmp
leave
xchg
pop
push
mov
xchg
xchg
push
add
add
fdivrl
into
adc
shrl
insb
movsb
repnz
loop
popa
pushf
pop
mov
and
push
enter
push
rol
jbe
mov
push
or
test
jle
insl
lahf
xchg
stc
jmp
adc
jl
xchg
aaa
nop
cmc
inc
push
pop
fisubrl
mov
daa
cmc
lret
add
add
sub
daa
repnz
stos
or
setno
fwait
cwtl
or
cwtl
adc
out
lret
add
jbe
mov
mov
faddl
xchg
xor
xor
inc
fucomp
cld
sbb
mov
lret
outsb
and
fwait
add
and
xlat
jmp
cwtl
xor
adc
mov
push
jge
lods
cmp
push
pusha
pop
popa
and
xor
pop
add
pop
popl
mov
mov
add
loope
movsl
fisttps
in
xor
inc
cmp
incb
mov
push
add
add
xor
sub
nop
notl
shr
daa
aaa
in
push
jae
xchg
pop
mov
add
in
es
repnz
pop
iret
or
faddl
ds
add
mov
add
jmp
push
or
icebp
jae
in
ds
cmc
pop
sub
adc
andps
adc
xchg
test
xor
ret
movsb
add
sub
sbb
outsb
sbb
and
hlt
imull
xlat
sbb
jecxz
lret
js
xor
mov
fcmove
movsl
in
add
cwtl
rclb
divb
xor
fmuls
loopne
and
lret
pop
add
int
cltd
aam
add
and
add
call
add
dec
outsb
leave
inc
adc
inc
push
scas
inc
mov
daa
icebp
mov
aaa
shlb
mov
mov
push
mov
add
orb
or
fwait
inc
pusha
xchg
pop
add
add
sbb
jo
hlt
lret
mov
add
arpl
add
mov
jae
lea
icebp
faddp
stc
ss
push
shrd
aaa
adc
insb
je
jmp
int3
addr16
ret
les
xchg
push
jo
ret
mov
insb
push
repnz
jl
sbb
loopne
imul
bnd
and
push
add
add
ss
imul
inc
lahf
ja
push
ja
xor
iret
sub
fildl
cli
rorb
pop
and
stc
add
int
roll
add
mov
cmp
mov
pushl
cmpsl
add
xchg
jg
xchg
test
add
inc
add
cmpsb
or
call
jg
out
insb
lods
mov
pop
call
ret
add
push
ja
lods
int
movsl
insb
imul
xchg
mov
xor
mov
or
xchg
add
mov
mov
jbe
push
xor
xchg
pop
pop
lods
rorl
xor
sub
xchg
out
adc
iret
cmc
je
mov
adc
push
mov
add
cld
add
fiadds
loope
flds
xor
add
cld
out
add
jns
inc
cli
rclb
xchg
sub
in
sub
lods
fnstenv
addr16
xor
es
xchg
mov
outsl
pop
dec
xchg
sub
pushf
arpl
mov
cmp
in
xchg
inc
loopne
add
add
cltd
adc
push
orb
in
push
add
jbe
add
cs
xor
xlat
push
xchg
push
dec
rorl
jg
icebp
mov
fisubrs
in
sub
mov
sub
ss
pop
and
pop
out
cmpsl
or
imul
dec
je
and
inc
adc
andb
jmp
mov
call
ret
sbbb
js
repnz
out
sub
jecxz
ds
add
cmp
fsubl
add
pop
adc
int
add
fmuls
dec
loopne
imul
push
add
add
sub
sbb
arpl
or
je
imul
sbb
add
lods
mov
divb
or
sub
xor
add
add
stc
add
lahf
shlb
pop
mov
add
pop
mov
jbe
add
jno
jo
add
into
mov
xor
push
add
and
xor
dec
mov
out
loope
jno
adc
test
adc
add
dec
addr16
add
lods
loope
add
xlat
lret
add
loop
jo
add
cld
inc
xor
or
lcall
cmpl
std
pop
push
sub
jnp
popf
leave
fidivl
sti
outsb
add
add
in
add
xor
add
adc
mov
lods
or
mov
add
push
iret
add
add
shl
in
cmp
aaa
mov
notb
mov
mov
ret
add
daa
cmpsb
aam
les
add
inc
aaa
fists
mov
in
inc
xchg
add
sbb
add
add
popa
daa
jns
add
xor
ret
add
filds
vmwrite
sbb
bound
call
mov
sti
xchg
pop
dec
mov
sub
pop
enter
or
inc
cmp
add
push
sti
dec
mov
add
jp
data16
add
mov
push
add
xchg
fwait
data16
add
and
cmpsb
call
les
add
add
dec
popf
pop
mov
popa
add
push
or
lds
lock
add
add
popf
outsl
fs
add
ficompl
jecxz
or
ret
stos
sarl
int
orl
lock
push
fsubrs
add
mov
xchg
out
movsb
cmp
movsb
sti
rcrb
mov
add
add
les
test
pushf
sub
shlb
sahf
inc
lds
mov
jl
adcb
pushf
dec
jge
faddl
add
add
inc
data16
fwait
mov
mov
mov
add
js
cmp
add
cli
xchg
decl
dec
mov
cmpsl
dec
sub
jmp
ljmp
aam
add
sbb
xor
mov
xchg
mov
cmpsb
in
dec
popa
xor
aam
movsl
sub
push
and
sbb
mov
in
push
or
sub
test
fucomip
ficompl
fwait
hlt
pop
push
enter
add
sub
mov
cmp
add
scas
vmovddup
fstpt
sbb
fistl
adc
call
mov
pop
add
xchg
add
imul
inc
add
add
add
push
push
in
gs
cmp
sbb
pushf
add
add
loope
das
add
xchg
or
inc
daa
jmp
stos
xchg
jno
dec
mov
add
dec
add
lock
vmovaps
mov
lret
or
repnz
btr
adc
jp
add
xor
dec
xor
mov
mov
mov
notb
sub
inc
int3
je
aaa
inc
cmp
cwtl
push
mov
mov
cmp
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
popf
pop
je
mov
inc
lahf
mov
sub
xor
ficoms
add
ret
adc
scas
sbb
xlat
mov
and
inc
sbb
inc
testl
pop
mov
lret
out
add
movsl
add
add
lret
roll
jmp
xchg
add
xchg
add
dec
push
adc
leave
or
addr16
add
ljmp
sub
into
std
jg
jle
popf
ja
notb
cli
dec
call
jmp
bound
and
iret
fs
jb
add
in
fidivs
dec
add
data16
inc
pop
out
pop
push
mov
mov
imull
inc
cwtl
fwait
sub
sub
adc
xlat
out
or
and
add
dec
and
xor
jae
xchg
jns
arpl
ljmp
pop
jae
out
pusha
loop
lret
cmp
add
add
xor
shr
test
add
dec
adc
cmp
mov
or
inc
cmp
lods
mov
jnp
xchg
sarb
add
pop
cmc
mov
or
xchg
xor
add
xchg
test
xlat
sub
pop
adc
call
je
mov
cmpsl
loop
and
mov
mov
mov
insl
mov
dec
and
nop
mov
dec
xchg
add
xchg
mov
insl
inc
push
jne
mov
in
shlb
jae
dec
push
inc
push
push
stc
add
mov
leave
les
insb
cmp
sub
xor
rcrb
xchg
or
mov
sub
add
xchg
lock
jns
xor
mov
pop
mov
ret
pop
xchg
and
push
mov
xchg
imul
inc
add
lea
repnz
sub
xlat
xor
idivl
pop
sahf
out
arpl
cmp
out
inc
dec
xor
push
xor
jnp
pop
sub
fs
jo
and
mov
xchg
sbb
add
cmp
iret
outsb
add
add
push
jne
add
jl
xchg
and
test
sub
clc
les
enter
add
mov
pop
cmp
imul
lds
mov
add
dec
or
inc
mov
add
jns
ret
lock
mov
icebp
push
mov
pop
lea
sbb
enter
imul
call
icebp
xchg
add
inc
inc
or
and
mov
add
pop
test
jno
cli
out
xchg
in
imul
std
add
fldcw
cltd
fwait
push
arpl
out
hlt
xchg
mov
out
adc
jno
or
mov
add
add
fabs
xor
mov
ret
hlt
inc
call
sbb
outsl
aam
mov
sbb
popf
insl
adc
cmp
mov
dec
jg
jnp
popa
and
push
xor
sarl
ja
enter
testb
xchg
xchg
mov
add
int
pop
pop
das
jmp
add
dec
and
mov
fcmovnb
or
add
add
jle
decb
cmp
mov
add
into
add
add
xchg
jp
jmp
xchg
cmp
movsb
ret
adc
push
sti
inc
fstps
lods
fs
cmp
cli
lock
sub
xchg
add
lahf
xchg
xor
cmp
fsubrl
mov
rep
sarb
mov
clc
fiadds
adcb
lcall
xor
lahf
lock
clc
fcmovnu
lret
lcall
and
les
inc
js
xchg
add
arpl
shl
sti
sahf
xor
popf
pop
push
aaa
or
dec
pop
sti
insb
sbb
sub
mov
add
add
test
cld
adc
shrl
pop
daa
dec
mov
repnz
add
aam
mov
ds
jmp
shl
js
xor
test
ret
nop
pop
adc
mov
cs
movsb
push
mov
les
shrl
push
mov
fwait
push
xor
pop
mov
jle
jb
add
fiadds
sbb
int
cmpb
in
push
mov
pop
lea
mov
js
lods
cmp
loope
test
or
lret
add
or
daa
jp
ret
enter
mov
xchg
pusha
je
push
popf
loop
inc
xchg
mov
jo
aam
inc
add
add
es
adc
pop
push
xchg
xchg
dec
out
insl
ljmp
cli
cmp
cmp
loopne
mov
push
push
shll
push
push
orl
lea
aam
jg
into
gs
jg
roll
cmp
test
outsb
lock
pop
js
cmp
push
sti
fistpll
sbb
adc
sbb
push
cltd
mov
mov
icebp
inc
mov
and
push
push
mov
mov
scas
stos
ret
sbb
jbe
lods
or
jge
pop
xchg
mov
inc
das
addb
pop
lods
xor
mov
cmp
lret
pop
rorb
test
sub
dec
daa
xor
pop
out
stc
push
stos
and
rcrl
xchg
cmp
jb
xchg
incb
xchg
push
mov
lret
roll
cmc
mov
out
iret
pop
sbb
inc
inc
sub
addb
mov
aam
les
leave
in
xchg
cmp
add
pop
push
inc
lock
fldt
cmpsb
fadd
pop
cmc
jl
push
es
pop
sub
iret
jno
cwtl
bsr
push
fmul
jno,pt
cmp
andl
or
add
add
cmpsb
adc
jmp
xchg
sbb
ret
xchg
add
add
inc
jle
pushf
out
cmp
adc
xor
rolb
add
add
mov
out
adc
cmp
or
adc
cmp
xchg
cltd
adc
paddb
arpl
mov
xor
push
dec
cmpsl
cmp
sti
add
mov
fisttps
xchg
pushl
adc
add
mov
sub
outsb
sub
ja
pushf
xchg
cmp
mov
pop
push
sbbl
jg
pop
gs
cmp
lcall
stc
and
sub
push
test
ljmp
xor
dec
jnp
imul
push
mov
add
scas
or
add
add
std
add
mov
add
xor
add
or
add
inc
mov
ret
add
gs
mov
fiadds
push
lahf
xor
xorb
lret
pop
popf
add
xor
sbb
push
add
cmp
clc
sub
add
xorl
int
rclb
mov
insb
stc
add
roll
cs
gs
cmp
add
pop
jl
fldl
add
test
add
add
loop
add
popa
testb
ret
inc
addr16
add
in
add
std
mov
add
repz
add
test
add
bound
push
sbb
and
add
daa
add
je
add
repnz
add
add
icebp
add
pusha
mov
add
iret
inc
add
into
bswap
jns
xchg
pop
push
incl
add
fldl
addr16
add
add
add
dec
add
add
add
add
add
adc
xchg
or
add
and
nop
mov
fidivl
add
add
add
adc
jnp
dec
jbe
add
add
dec
fcoms
andl
add
add
dec
push
mov
imul
push
ror
mulb
xor
in
inc
or
jl
call
inc
jb
adc
je
push
push
scas
xor
lcall
test
jmp
loop
lods
loopne
in
xlat
and
jae
mov
cmpsb
into
inc
dec
addr16
fdivs
xchg
push
jp
pop
xchg
push
movsb
pop
lods
ja
cmp
mov
sahf
jge
xchg
popf
adc
stos
test
mov
inc
repz
es
test
aad
add
add
add
pushf
repz
adc
inc
mov
lods
cmpsb
aaa
popf
jno
xorl
push
cld
decb
ret
and
dec
or
lret
push
sbb
les
sub
adc
ret
pop
jo
addr16
or
insl
adc
and
mov
test
js
in
ss
shrb
in
jg
pusha
or
aaa
repnz
fsubs
adc
jno
call
adc
pop
cmp
cmpsb
push
inc
scas
addr16
leave
aaa
fwait
stc
mov
in
stos
jp
adc
mov
sub
inc
sub
push
clc
jnp
sbb
pop
pushf
mov
xchg
mov
mov
and
inc
call
mov
orb
iret
mov
test
std
cmp
add
xor
jo
cld
enter
and
cmp
cmp
xchg
stc
movsl
js
arpl
les
outsl
cmp
sbb
loop
movsb
add
add
add
push
mov
push
stos
pusha
and
or
mov
std
push
or
pusha
mov
pop
lret
stos
inc
xchg
push
int
ja
xchg
shrb
mov
push
pop
pop
dec
pusha
lock
clc
fucom
mov
fs
notb
ficomps
xor
cmp
loope
sarb
adc
aad
add
add
mov
lods
push
inc
ljmp
repz
mov
add
xchg
sub
inc
mov
mov
xor
pop
daa
repnz
push
or
popf
pop
jp
push
lea
add
add
loopne
pop
test
mov
cltd
jge
mov
mov
je
mov
in
mov
push
inc
cmc
and
sub
sub
iret
pop
add
add
sbb
jg
call
ss
stos
imul
ficompl
lret
into
bts
test
push
mov
repz
or
push
add
sub
add
rcrl
inc
add
ljmp
push
ret
or
ja
jp
mov
add
add
pop
adc
cwtl
fcmovu
test
jne
data16
or
jno
mov
movsl
repz
xor
xchg
sahf
lods
pop
or
xchg
adc
insb
jecxz
lods
mov
add
pusha
xor
dec
fs
and
lods
adc
jno
xchg
aaa
fwait
out
clc
scas
mov
jb
adc
scas
fildl
add
add
dec
pusha
enter
test
inc
sbb
shrl
test
jl
pop
mov
xlat
sahf
leave
imul
inc
imul
ds
inc
cmpl
mov
mov
push
sahf
or
xor
dec
inc
sub
xor
iret
pop
add
add
sbb
jg
call
ss
stos
imul
ficompl
lret
into
bts
xchg
outsb
jnp
cld
adc
movsb
add
mov
or
push
mov
sbb
lret
leave
mov
inc
sbb
or
mov
dec
fdivl
cs
xchg
push
xor
adc
push
push
outsb
cld
mov
cwtl
mov
jnp
mov
popa
fldl
ds
cmp
add
xchg
adc
mov
sbb
mov
jns
cmp
jb
int
xchg
mov
movsb
mov
sarl
loop
cmp
adc
add
add
andb
adc
adc
mov
mov
cmp
mov
js
scas
cwtl
pusha
dec
les
pop
xor
cmpsb
lahf
les
mov
stos
rcrl
sti
jne
mov
inc
or
shll
mov
sub
stos
es
cmp
add
test
jmp
addb
bound
add
in
fisubl
push
adc
add
cwtl
add
xchg
sarl
add
add
aad
lea
insb
push
loopne
das
pop
jge
add
jge
push
push
pop
outsb
push
mov
add
add
sti
add
clc
ds
xor
test
xchg
sarb
repnz
jnp
cmp
std
fiadds
add
mov
lcall
je
bound
das
sahf
icebp
aaa
inc
add
add
add
add
add
jp
add
add
add
sub
add
adc
add
add
add
xchg
add
xor
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
frstor
add
add
add
add
add
inc
cmpsb
add
add
add
add
add
add
add
add
add
add
add
add
jb
xchg
dec
sub
sbb
movb
add
add
add
jno
fildl
ljmp
add
add
add
xor
sbb
imul
add
stos
pushf
add
and
repz
push
mov
pop
lret
sub
add
cmp
das
data16
mov
adc
mov
mov
mov
daa
xchg
movsb
les
add
les
les
test
addr16
cmc
decb
jo
dec
or
add
add
dec
xor
or
sub
mov
stos
pop
xor
jns
pop
add
lea
add
mov
cmp
ja
popa
mov
lods
popa
jae
adc
mov
add
jo
cmpsl
mov
ret
add
add
loopne
aad
out
or
push
std
push
icebp
out
sbb
push
ja
dec
mov
lods
shll
jae
fiadds
cmp
out
out
push
adc
sub
push
jb
lods
aas
push
pusha
testb
sub
lret
sbb
lods
roll
sbb
sub
fisttps
lods
jle
mov
data16
xor
ljmp
lea
sbb
pop
cmpsl
cmp
cmp
cmpsb
jl
push
mov
mov
xchg
add
int
pop
add
add
add
add
mov
lret
add
add
add
or
mov
add
dec
add
inc
add
nop
add
sub
roll
loop
jb
outsb
add
add
add
add
add
pop
add
xchg
into
add
pop
add
add
add
add
imul
add
xchg
add
add
add
add
add
lock
add
add
add
add
add
add
lcall
add
add
add
add
add
popa
add
add
add
add
add
pop
add
dec
add
add
add
add
add
add
ret
add
add
pop
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
je
je
mov
rolb
add
add
add
add
add
add
add
add
add
sub
and
push
add
add
add
sbb
mov
in
rolb
inc
add
add
add
add
add
add
cltd
xor
sub
subl
mov
stc
sub
mov
mov
cmc
jl
sub
cli
test
enter
aam
or
add
add
add
and
dec
clc
xor
outsl
jnp
mov
pop
fwait
loope
hlt
jle
popf
push
fistps
bound
inc
or
ret
push
dec
and
fstp
scas
fisttps
dec
dec
out
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
verr
cwtl
add
push
add
add
add
in
add
add
popa
add
add
add
add
mov
iret
add
add
add
testl
or
and
push
add
add
add
arpl
dec
add
add
mov
and
xchg
shl
mov
loop
or
bound
adc
pop
lods
adc
push
xchg
loope
int
insl
push
sbb
cmp
pop
sarb
sahf
or
push
shll
push
push
lock
ret
cltd
mov
xchg
pop
sub
lods
int
cmp
mov
cli
sub
mov
mov
cmc
insl
add
mov
shlb
lret
push
mov
aam
add
add
xchg
in
es
inc
jae
ret
inc
xchg
add
int3
or
mov
lret
into
xchg
in
adc
clc
in
loop
jno
outsl
cmp
in
and
lock
dec
or
inc
push
sbb
aad
push
xchg
sub
xlat
loopne
mov
shrl
mov
gs
pop
dec
scas
pop
inc
cmp
es
cmp
pop
fwait
pop
out
int3
idivl
sbb
mov
or
cmp
xor
or
out
loope
add
sbb
out
inc
out
or
xor
jb
mov
inc
inc
rclb
mov
cmc
jmp
cmp
fsubrl
cmpsl
adc
lods
jl
cwtl
jnp
icebp
repnz
fwait
lock
pop
or
gs
loope
in
jle
pushf
dec
cs
push
push
push
clc
fnstcw
or
lods
leave
mov
pusha
or
icebp
lret
loop
mov
loop
inc
inc
je
sarl
xor
pop
jae
add
push
mov
hlt
jg
int3
add
pop
jmp
pop
imul
outsl
push
insl
cmp
repnz
dec
or
sbb
shrl
inc
lret
vpaddd
js
pusha
mov
mov
test
mov
mov
cmp
into
cmc
cmp
cli
mov
pop
hlt
and
stos
mov
pop
jg
add
inc
xorl
sti
sbb
jge
and
jne
or
dec
sbb
ret
aad
stos
ss
push
insl
shl
pop
int3
mov
or
fstpt
push
push
adc
cmp
lret
cld
lods
pop
je
dec
in
popa
scas
insb
mov
int
xor
js
mov
into
sbb
dec
or
loopne
sub
xor
jno
dec
popa
or
and
lcall
popa
stos
mov
mov
mov
test
cld
inc
cmp
jmp
xor
inc
outsb
cwtl
push
jg
or
in
lahf
ljmp
jae
lret
jae
lods
lcall
aaa
rorb
inc
dec
jg
and
fnstenv
stc
pop
loope
aas
xor
fsubrs
xor
cmp
cmp
arpl
mov
icebp
inc
dec
jb
sahf
jnp
fcompl
daa
mov
repz
jl
push
jo
inc
test
lcall
jle
sbb
xor
cld
std
cmp
popa
xchg
dec
lods
aaa
jle
movl
pop
iret
mov
add
int
jno
cmp
adc
cmp
adc
rep
pop
jne
dec
out
pop
scas
outsl
pushl
dec
popl
mov
sbb
jecxz
sub
aaa
test
add
gs
push
mov
xchg
jbe
mov
add
mov
popf
and
add
mov
cmpsl
add
add
mov
add
add
or
mov
add
push
mov
add
pop
cmc
stos
and
addl
mov
add
or
jne
add
add
add
incl
add
add
adc
insl
aam
add
imul
add
fisttpll
add
add
add
mov
cltd
add
aaa
add
leave
test
add
inc
imul
cmp
mov
cmp
jo
orb
jp
jno
shll
popl
mov
imul
les
add
test
movsl
insl
enter
add
add
xor
mov
mov
add
stos
adc
add
test
add
sub
add
mov
jge
push
lcall
leave
mov
add
xchg
add
pop
out
add
adc
add
rolb
loop
add
push
cmp
add
xchg
add
out
xor
mov
mov
or
scas
mov
adc
xchg
add
sbb
fildl
push
xorb
or
push
add
outsb
add
sbb
add
dec
mov
add
dec
lods
mov
add
add
mov
and
scas
or
les
sbb
out
aad
add
call
add
gs
xorb
add
mov
add
mov
add
add
add
sti
inc
flds
add
add
lea
add
ret
add
add
mov
pop
and
add
add
add
add
shlb
add
sahf
add
add
add
pop
add
icebp
aas
pop
add
add
fmull
add
add
add
inc
jbe
fdivr
push
add
add
pop
mov
add
push
sub
add
add
cmp
repnz
add
add
ficoms
fcmovbe
add
add
add
loope
out
add
add
mov
stos
insb
add
add
push
dec
xor
add
add
xchg
push
mov
add
add
add
and
int
add
add
jb
mov
add
sahf
stos
add
add
sbb
add
ljmp
add
test
add
add
add
jnp
add
add
fst
mov
add
add
insl
movl
clc
sldt
add
add
test
add
mov
pop
add
add
ret
imul
add
insl
add
add
add
pop
daa
inc
add
add
das
push
out
add
add
cs
add
add
and
add
add
sub
loop
add
add
add
in
xchg
add
add
pop
xor
add
jp
lods
add
add
add
add
inc
xor
movsl
add
add
fs
or
add
add
jg
add
add
add
add
add
pushf
mov
add
add
mov
add
add
add
add
add
add
add
jbe
cmpsl
add
add
push
add
add
add
add
add
add
add
add
push
pop
addb
add
imul
add
hlt
in
add
add
or
add
lahf
push
sti
inc
add
add
mov
add
xchg
sarb
add
add
add
add
add
xor
add
add
negl
shlb
orb
add
fstpl
movsl
jnp
add
add
jae
add
xor
add
test
add
sub
add
jo
add
scas
or
inc
addl
stc
std
add
mov
add
xor
add
or
add
push
add
inc
mov
mov
pop
add
addl
fiadds
mov
jbe
add
push
add
fnstenv
add
mov
push
add
aaa
pushf
add
sub
add
je
incb
int
push
nop
int3
add
out
add
loopne
add
add
pop
jl
cmp
jno
add
jns
add
lret
mov
pop
adc
mov
push
mov
test
jnp
cmpsb
or
add
xor
add
jle
add
push
add
cmc
outsb
add
dec
add
jmp
push
add
mov
add
add
mov
jmp
std
or
sti
mov
cmpb
fisttpl
rorb
je
test
add
add
push
dec
add
fsubrl
or
sbb
sbb
dec
mov
mov
sbb
jl
outsl
scas
test
or
add
jb
movsb
pop
or
pop
and
mov
mov
xchg
insb
jle
add
xorl
inc
into
xor
insl
filds
popf
add
cli
xchg
aam
inc
insb
or
push
std
and
xchg
pop
push
push
push
add
mov
jns
cmp
outsb
sahf
fcomps
repnz
addb
shlb
outsb
sbb
mov
and
dec
and
jge
fldt
es
imul
insl
and
inc
mov
sub
dec
outsl
inc
lods
mov
sbb
fldt
orl
aam
sti
mov
cltd
and
push
dec
stc
pop
mov
sbb
das
jle
subb
inc
add
lds
sub
fwait
cmp
mov
je
fwait
pushf
cmpsl
popa
xorl
sub
push
jmp
lods
push
fstl
cli
add
pop
add
add
sub
pusha
mov
sub
add
int
inc
addr16
adc
mov
sarb
adc
stc
mov
nop
mov
or
icebp
mov
nop
ja
add
pushl
add
ljmp
add
out
or
xchg
adc
mov
imul
cmpsl
jno
xchg
add
cmpsl
cli
jmp
shll
sub
mov
cmp
jns
mov
pop
fs
mov
lcall
aam
int3
pop
adc
and
or
test
stos
mov
dec
mov
repz
add
and
sub
aaa
dec
loope
outsl
cmpl
lods
sarl
ds
xchg
ret
xor
mov
into
or
jne
add
loope
jg
lahf
add
incb
jo
push
or
or
aas
cmc
out
sub
adc
mov
cmpsl
xor
aad
andb
add
or
test
cmp
pop
sbb
data16
cmp
mov
xchg
push
popf
mov
mov
mov
cmp
decb
cmp
mov
cmp
inc
movsb
push
das
lcall
push
mov
call
movsl
hlt
rorl
hlt
mov
cmp
outsb
add
xchg
popa
cmp
repz
movsb
pop
pop
xchg
push
mov
mov
lods
dec
add
test
sbbl
scas
or
mov
incl
fnstsw
mov
or
ss
cltd
push
or
pushf
mov
mov
add
xchg
cltd
cs
mov
add
loope
mov
movsl
inc
std
add
jp
ret
andl
jmp
add
xor
lret
clc
divb
mov
add
add
mov
int
pop
bound
shrd
mulb
push
adc
fnsave
mov
dec
push
ds
test
mov
xchg
add
ljmp
jecxz
lds
add
jle
push
mull
arpl
push
add
enter
fsubl
jmp
test
sarl
pop
dec
add
fidivrl
aaa
std
jns
add
mov
outsl
adc
std
fidivl
push
add
push
inc
loop
lods
cmp
dec
add
add
add
add
mov
sbb
add
das
aaa
mov
movl
verr
add
add
shl
ret
add
pop
movsl
add
add
mov
add
add
ljmp
orb
ja
add
mov
add
add
sahf
mov
fadds
add
outsb
fisubl
push
add
add
dec
in
add
add
add
sbb
mov
add
fmuls
add
add
add
add
add
jl
add
add
add
jp
add
in
lret
add
add
jno
add
add
dec
dec
xor
loopne
add
fdiv
out
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
js
add
stos
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
fldl
add
cmc
add
add
add
add
add
add
add
inc
add
add
add
mov
add
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movb
add
add
add
add
add
add
mov
add
add
movsb
incl
ret
in
add
xchg
imul
mov
sub
sbb
adc
jns
pop
add
mov
add
add
daa
flds
pop
jae
sbb
jnp
fcmovu
jmp
inc
mov
add
add
add
mov
les
ret
and
and
and
and
and
and
and
and
and
and
add
inc
xchg
sbb
stc
xor
and
mov
cmp
aam
repz
add
add
or
aad
push
push
mov
mov
xchg
xchg
push
cmc
sub
push
pop
mov
add
add
ds
popa
mov
je
jge
push
test
pusha
out
pop
in
mov
bound
add
add
add
sub
or
dec
out
inc
ret
dec
mov
adc
loopne
and
jge
push
add
imul
cld
mov
sahf
cmpsb
popa
xchg
jp
outsl
adc
add
add
add
mov
xchg
pop
in
sub
sbb
scas
pushf
jns
cmp
xchg
lcall
add
add
int
add
add
je
cld
add
cld
sbb
loop
add
add
add
xlat
out
add
add
add
imul
add
add
add
add
xor
push
mov
hlt
jle
add
add
add
xor
add
add
add
cmp
add
add
xlat
push
add
add
add
imul
add
repz
mov
scas
add
add
add
cwtl
rcrl
add
add
add
sub
adc
mov
add
add
add
sti
mov
dec
add
add
mov
add
add
add
add
add
add
add
add
sub
add
jecxz
add
cltd
mov
ja
fldl
pop
addr16
add
add
and
add
add
add
add
add
add
int3
lldt
rcrb
add
add
add
repnz
push
inc
icebp
add
test
add
add
push
pop
xorb
add
subl
rcr
add
sbb
push
out
add
mov
add
or
add
pushf
add
inc
insb
add
cmc
aaa
add
stos
add
ret
mov
add
xor
in
js
add
test
add
mov
enter
mov
dec
mov
add
and
add
jbe
add
mov
add
lea
dec
int
add
and
add
inc
add
fstpl
fstpt
addb
nop
mov
add
mov
inc
mov
add
addb
mov
add
add
add
add
add
add
test
dec
jns
imul
add
add
jge
shlb
add
ret
insl
add
test
data16
or
bound
add
sti
add
add
add
add
add
add
add
add
aas
push
dec
add
add
push
mov
add
add
xchg
shlb
add
and
roll
add
add
add
add
and
add
add
nop
fistpl
js
add
push
add
add
add
add
add
add
add
add
add
out
lods
add
nop
mov
add
add
imul
add
int
add
jmp
add
add
add
add
add
sub
add
fsts
add
movl
add
adc
add
add
add
add
cmp
repz
add
add
pop
fcomps
add
add
add
shr
lahf
inc
pop
fldl
inc
push
inc
cmp
sbb
arpl
in
repnz
frstor
sbb
adc
cmp
sub
push
roll
lea
or
insb
add
mov
das
cmp
mov
stos
hlt
insl
push
pop
fsts
sub
or
xor
pop
inc
test
ss
jae
and
nop
daa
into
mov
int3
mov
fstpl
std
adc
imul
sub
sub
jle
dec
in
hlt
lods
into
adc
seto
test
pop
daa
ret
mov
popa
xchg
xor
jl
dec
adc
js
pop
lds
cwtl
les
xor
mov
aaa
movsb
mov
push
and
add
fisttpll
loopne
mov
aam
sbb
adc
dec
clc
adc
add
shrl
inc
mov
pushf
add
inc
push
outsl
xchg
inc
pop
flds
inc
push
inc
fcoms
outsl
dec
fwait
loope
mov
mov
dec
mov
cmp
pop
nop
imul
ja
ret
rcl
mov
push
nop
cmp
mov
daa
and
xchg
mov
push
adc
dec
inc
pop
cli
mov
xlat
je
sub
push
loopne
pop
adcb
push
pop
add
mov
imul
addr16
dec
cltd
cli
popa
push
mov
fisubrl
xchg
subb
jge
insb
fdivl
pushf
inc
xchg
sbb
mov
insl
xchg
xor
in
mov
xchg
shlb
scas
sahf
nop
mov
cmp
and
lods
fmull
inc
inc
in
cld
mov
enter
pop
mov
inc
cld
push
add
cld
push
mov
lahf
push
dec
mov
add
inc
inc
fwait
jle
xchg
jmp
pop
dec
xor
adc
push
out
test
out
push
jge
mov
icebp
pop
xchg
insb
sub
mov
xchg
gs
and
xchg
push
jbe
push
fcoms
in
dec
sbb
jge
outsl
inc
in
mov
popa
mov
nop
mov
mov
pop
aaa
xor
daa
mov
aaa
add
pop
lea
fucom
inc
ljmp
push
jge
pop
fsubs
push
sbb
les
jbe
dec
fists
aam
pop
sbb
test
cmp
test
cs
xor
add
cwtl
loopne
xor
xchg
mov
insl
inc
mov
inc
pop
xor
les
ljmp
add
xchg
aad
rol
repnz
sub
xor
cmp
pop
out
mov
stc
fildll
imul
dec
add
and
or
nop
cmp
push
imul
push
iret
fs
dec
or
jae
cmpsb
xor
insb
popf
jbe
fwait
loope
jbe
jns
nop
xor
sbb
xchg
and
je
pop
mov
test
push
pop
jle
fwait
xchg
mov
xor
ficomps
or
das
or
cmp
jmp
aas
push
push
sti
add
lcall
mov
inc
xchg
cmpsl
lock
pop
pop
sbb
xchg
xor
sub
in
lret
jecxz
push
aas
cmp
dec
mov
subl
in
bnd
fwait
pop
rcll
sub
mov
inc
push
aas
pop
mov
jns
cli
outsl
outsb
rcr
fistl
ret
daa
fnstenv
adcb
xor
push
loopne
mov
clc
arpl
fsubrl
data16
daa
cmp
repnz
aaa
daa
pop
mov
cli
adc
xor
or
sub
sbb
jns
dec
sub
jne
test
jae
sbb
mov
jns
div
fdiv
cltd
push
aaa
popa
sbb
xchg
mov
push
jbe
push
mov
adc
in
mov
lods
xchg
cmp
mov
add
mov
sub
pop
and
ja
jne
mov
icebp
pop
jne
xor
stc
test
lcall
jge
dec
and
repnz
cmp
int3
int3
xchg
pop
fists
cmp
insl
aam
add
mov
cmp
xchg
xchg
int
pop
sbb
sub
jne
adc
jno
movsb
push
sbb
pop
dec
push
cmp
jle
imul
in
outsl
into
out
lcall
ficoml
sbb
adc
add
dec
pop
mov
pusha
and
in
je
ds
mov
mov
shrl
clc
mov
or
stos
subl
mov
shlb
dec
push
inc
dec
jne
stos
mov
repz
xchg
popa
jb
lahf
sbb
imul
es
hlt
mov
mov
pop
mov
fcomps
notl
mov
test
test
or
das
or
ds
fucomip
mov
or
pop
jae
dec
int3
xchg
jecxz
add
mov
outsl
mov
stos
shl
xor
pop
push
jbe
lahf
aaa
mov
out
cmp
pushf
push
xor
dec
mov
test
out
gs
hlt
je
xchg
push
jo,pn
movsl
push
sbb
cmp
mov
xchg
push
mov
insb
pusha
iret
aad
fcomps
fmul
jmp
sahf
xchg
dec
mov
daa
sbb
xor
xchg
and
daa
fs
sub
mov
mov
sub
jbe
movaps
lahf
or
jl
stos
or
xor
es
jnp
dec
mov
jnp
stos
mov
repz
mov
popa
mov
in
sahf
push
jbe
js
arpl
hlt
rol
js
push
mov
je
cli
pop
mov
fcomps
rcl
xor
shl
jno
test
mov
iret
add
jg
je
inc
push
fldz
mov
push
add
addb
sub
xchg
xor
out
mov
mov
cmp
dec
mov
jecxz
or
cmp
in
pop
xor
push
adc
lret
sbb
test
pop
shrb
movsl
push
pushf
or
dec
aad
push
roll
cld
sub
mov
arpl
fdivrl
sti
and
xor
in
mov
adc
xor
dec
inc
jmp
ljmp
shll
add
sti
push
test
mov
adc
or
stc
mov
or
jno
stos
mov
xor
dec
or
stos
mov
repnz
mov
pushf
in
jg
ja
xchg
repnz
inc
dec
aas
test
push
ret
ret
add
push
mov
negb
pop
mov
cltd
pop
lods
jge
repz
xor
jge
mov
push
lods
dec
and
add
xor
inc
add
pop
pop
cmc
inc
jno
inc
int3
test
cld
mov
popa
mov
popf
into
fimuls
cmp
popf
cmp
and
popa
mov
enter
push
stos
nop
pop
aas
jo
dec
dec
add
jle
data16
iret
sub
xchg
out
stc
jo
dec
inc
int
jns
jnp
test
push
in
dec
push
aas
scas
cld
std
mov
scas
popa
jno
cmc
pusha
insl
or
sbb
leave
fucomi
jmp
shlb
push
lcall
pop
insl
lahf
xor
lret
es
repz
aad
jg
ljmp
icebp
test
cmp
scas
dec
stos
push
adc
dec
mov
xor
xor
aad
stc
cmp
pop
or
push
nop
cli
lret
push
cwtl
stos
xorl
in
mov
lods
jb
call
xor
or
dec
lcall
mov
xchg
popf
jbe
into
decb
jp
lcall
push
pop
pop
add
add
push
cmpsl
clc
adc
push
sub
pop
lret
into
popa
xchg
xchg
push
jg
mov
adc
adc
imull
jp
xchg
xor
out
mov
add
int3
cli
jb
or
test
push
repz
clc
dec
mov
js
insl
mov
insl
ret
stc
test
mov
push
js
lds
loope
or
inc
add
inc
insb
movsb
push
pop
sbb
cmp
divl
jne
jnp,pt
mov
out
repz
loopne
jecxz
add
imul
mov
movsl
push
mov
shrb
lods
xchg
jbe
sub
pushf
inc
push
dec
inc
jge
push
xchg
wbinvd
imul
xchg
repz
jne
sub
inc
xchg
dec
int3
xor
push
lods
lret
in
push
mov
gs
into
mov
sub
xlat
in
jg
jne
cmpsb
dec
jle
xor
add
and
xlat
in
xor
in
sbb
push
lret
xchg
xchg
or
dec
jno
adc
xor
cltd
and
sbb
jnp
mov
or
repz
pop
dec
fcompl
out
xor
dec
lds
jle,pt
xchg
popa
sub
out
imul
stc
cmc
adc
data16
in
js
rol
test
or
in
aam
xlat
inc
in
jecxz
mov
sbb
xor
push
divb
into
aas
js
loope
sub
mov
outsl
xchg
ds
cli
mov
mov
jge
push
movsl
or
ss
inc
stc
mov
and
mov
push
pop
sahf
insb
mov
leave
imul
mov
dec
xorb
std
aaa
aaa
inc
daa
imul
mov
push
xorl
mov
lock
ret
aaa
jnp
cmp
push
dec
push
jge
or
jmp
add
push
lds
inc
fadds
cs
ret
rcl
sub
sbb
xchg
shlb
je
sub
loop
leave
add
or
mov
pop
sbb
mov
es
cmp
cmp
xchg
mov
add
repnz
in
outsl
jge
neg
mov
or
shl
ss
aad
out
xchg
cmp
inc
movsl
inc
adc
xchg
aas
xchg
int3
xor
pop
in
ja
int3
xor
sub
mov
cmp
push
mov
jne
fwait
mov
mov
pop
aas
xchg
rdmsr
test
inc
or
je
rep
jo
andb
mov
push
jle
fs
sbb
or
movsb
lock
inc
cs
test
rorb
or
lcall
mov
aam
ror
dec
jne
xor
add
push
jno
jmp
add
sbb
pop
rcll
or
sahf
ss
fidivrs
adc
push
sbb
in
test
fnsave
mov
or
xor
adc
rol
mov
jmp
sahf
in
pop
xchg
clc
ss
inc
lods
mov
ss
imul
hlt
mov
mov
jb
cmc
outsl
adc
mov
jns
ficompl
lcall
inc
push
adc
push
lock
out
adc
jl
jns
cmpsl
rcrl
lahf
repz
adc
lods
movsl
xor
xor
bound
pusha
pop
jb
xchg
iret
test
leave
stos
out
pop
jl
add
pop
adcb
xchg
call
jno
sub
gs
lret
ja
mov
rcrl
mov
jp
sbb
or
jmp
xchg
push
lret
movsb
rcr
test
push
pop
xor
cs
repz
loope
pop
jle
pop
loop
pushl
int3
xchg
aam
ljmp
jb
lret
aad
xor
pop
hlt
or
shrl
out
aaa
or
imul
rolb
scas
rcrb
cmp
pop
pop
push
cmp
insl
cmpsl
pop
push
stos
mov
push
dec
lcall
mov
pop
pushf
push
pusha
leave
shr
lahf
and
inc
call
sbb
ss
jl
add
jno
lcall
sbb
scas
push
lahf
aad
sub
or
into
scas
sbbl
test
shll
pop
xchg
push
sub
push
aad
mov
sub
add
sahf
jae
xchg
popf
xor
stc
adc
insb
outsb
mov
mov
cld
or
jp
sbb
push
mov
sbb
cmpsb
xchg
mov
sub
xchg
orb
fbstp
add
cmp
and
cmp
jmp
mov
out
add
pop
lret
das
add
inc
in
orb
adc
cli
iret
imul
pop
out
pop
jmp
mov
or
add
pop
shl
mov
fimuls
jnp
mov
in
push
xor
loope
xor
ljmp
jg
cmp
out
mov
cmpsb
arpl
pusha
jno
fisttpl
std
and
loop
gs
pop
push
add
dec
jmp
cmp
ss
xchg
xor
mov
sub
adc
inc
pop
xchg
mov
sbb
jbe
imul
neg
jno
mov
mov
in
aas
test
imull
data16
idivl
arpl
sub
cmp
repnz
popf
or
push
test
fildll
loop
mov
shl
dec
leave
fcoms
shrl
sbb
xlat
xor
adc
pop
push
bswap
in
mov
int
insb
scas
push
iret
scas
das
repz
popa
jl
mov
enter
adc
jecxz
daa
xor
xchg
add
fcmove
roll
sbb
mov
les
mov
mov
fnsave
call
roll
es
stos
js
out
out
pusha
jle
push
scas
aad
scas
cmc
pop
jno
leave
repz
mov
aad
loopne
mov
in
test
addr16
idivl
xor
lret
xchg
shrb
inc
test
pop
dec
or
jg
nop
orl
jae
xlat
out
dec
mov
sbb
addr16
xchg
jo
popf
mov
or
mov
dec
or
add
ret
aas
dec
popa
outsb
cwtl
fxch
dec
stos
dec
mov
mov
mov
outsb
int
cmp
mov
pop
pop
sbb
jno
pop
mov
push
adc
icebp
mov
fcoml
insb
lods
test
pop
icebp
mov
dec
jecxz
lahf
jae
inc
mov
mov
sbb
das
pop
daa
jno
inc
and
loopne
hlt
leave
push
cmpsb
ret
xchg
jns
jl
stos
fistpl
ret
cmp
insl
stos
orl
inc
cmp
lahf
shlb
aam
jae
adc
divb
ljmp
addr16
adcl
rcrl
out
inc
movb
mov
int
cs
in
cmpsl
sarb
push
in
sub
mov
cmp
mov
pushf
adc
mov
mov
jle
mov
lock
test
adc
jp
add
insb
cltd
xchg
xchg
andb
inc
mov
in
inc
orl
outsl
cld
leave
xor
scas
sub
enter
hlt
mov
sbb
test
jbe
xor
fstpt
push
clc
pop
jl
pop
iret
adc
test
jns
outsb
loopne
pop
cltd
push
cli
mov
mulb
mov
mov
mov
and
adc
mov
pop
cmp
sarb
js
data16
sbb
xor
cmp
fcmovb
call
inc
stos
fisttpll
cld
push
ljmp
dec
aas
inc
arpl
lsl
inc
lock
gs
rorb
lods
sarb
arpl
movsl
dec
dec
push
sub
push
jnp
sti
push
dec
adc
mov
sbbl
mov
cmpsl
orl
add
imul
and
push
rorl
xorb
sbb
jne
push
xchg
movsl
add
pop
jae
sbb
or
insl
mov
mov
int3
dec
mov
mov
sahf
dec
js
mov
jne
dec
jl
xor
xor
adc
in
push
mov
sbb
push
cmc
pop
adc
xchg
jge,pt
xor
inc
pop
sbb
or
cmp
jae
js
notl
mov
in
sti
roll
sti
mov
aam
jo
cmp
add
xchg
outsl
shr
fsts
js
in
fwait
out
cmpsl
cmp
call
mov
int3
mov
dec
xor
dec
push
imul
lret
push
call
dec
fisttpl
sub
mov
or
mov
mov
push
xchg
jno
inc
add
dec
jge
invd
imul
adc
pop
outsl
mov
jp
push
push
mov
in
xchg
imul
and
std
hlt
mov
mov
inc
pop
int3
xchg
lods
cmp
dec
jle
and
int3
dec
jno
mov
les
mov
mov
push
aam
test
cmpsb
sbb
repnz
dec
adc
adc
mov
outsl
fdiv
loope
int3
or
sbbb
int
mov
or
mov
sahf
pop
mov
cld
jp
and
dec
cmp
xor
js
xchg
jmp
jno
std
scas
jo
fiaddl
mov
pop
push
mov
jp
push
mov
xlat
xor
pop
cmc
inc
mov
and
cs
cmc
aad
popa
xchg
sub
int
xchg
mov
fisttps
mov
js
add
mov
nop
push
push
sub
inc
mov
mov
ret
push
cmp
sbb
or
test
loope
mov
mov
or
sub
cmpsb
add
dec
movswl
xor
in
dec
push
and
loope
jg
mov
mov
sti
test
jne
xchg
inc
ficompl
sbb
int
cmp
aaa
adc
cmp
add
sbb
add
mov
not
lahf
push
fldl
iret
mov
decb
lds
les
mov
push
sub
jmp
loop
popf
loop
jo
les
lock
movsb
mov
dec
adc
fcoml
pop
pop
push
popa
dec
out
cmp
out
cld
add
dec
and
adc
mov
mov
cmpsb
sub
adc
mov
cwtl
adc
xchg
dec
ja
push
fistpl
and
inc
mov
pop
dec
popa
sbb
xorb
test
rcll
dec
ja
scas
push
mov
sub
in
lods
and
inc
fdivrs
jnp
adc
sahf
xchg
cmp
out
xchg
adc
imul
lea
gs
enter
dec
cmp
mov
fisubs
andb
add
xchg
fstpt
fisttps
cmpsl
push
mov
int
lahf
pop
dec
aaa
ret
dec
lods
fsubp
scas
pop
repz
lret
lea
jo
lret
jno
push
pop
lods
dec
idivb
arpl
sbb
ja
jl
out
or
adcl
test
dec
mov
call
push
and
mov
xor
aas
sti
add
aad
icebp
sahf
into
cs
push
fmul
setno
shrl
xlat
xor
mov
daa
pop
notl
insl
mov
pop
sbb
adc
jbe
jae
xchg
add
outsl
divl
lock
jb
je
sbb
aad
sti
sub
aam
cmp
xor
and
cmp
sbb
int3
push
mov
add
enter
mov
insl
adc
xor
hlt
xchg
lcall
pop
outsb
shll
int
xor
sbb
aas
mull
dec
or
out
fiaddl
push
movsb
dec
outsl
xlat
push
or
fdecstp
add
ljmp
into
mov
ret
pushl
bound
mov
pop
push
outsl
out
and
pop
punpcklwd
jl
mov
pusha
shlb
mov
inc
dec
popf
popf
negl
jne
mulb
rcrl
inc
inc
ljmp
outsb
loope
out
cmc
xor
sub
sub
lret
dec
or
pop
xchg
add
test
pusha
dec
mov
sub
es
mov
or
sbb
ja
ja
mov
mov
inc
push
mov
pop
inc
rcr
movsb
icebp
call
xchg
lods
fisttpl
inc
fidivl
push
and
icebp
pop
sbb
lret
stos
popf
add
clc
sub
xlat
cmp
and
pop
dec
outsb
cmp
scas
insl
inc
daa
lea
push
lods
mov
mov
gs
mov
cmpsl
add
sbbl
adc
mov
fistpll
enter
insb
lods
sub
aas
pop
lcall
arpl
int
hlt
int
xchg
add
pop
adc
pop
sbb
pusha
test
jo
adc
add
push
insb
sbb
loopne
inc
mov
mov
das
ficoms
orb
jmp
dec
adc
add
add
nop
fdivl
imul
jg
mov
push
xchg
dec
repnz
and
insb
outsl
and
dec
sti
pop
mov
mov
adc
je
jle
dec
mov
pop
out
gs
lods
outsb
inc
ss
lods
pop
test
push
add
stos
daa
lods
dec
fldt
and
push
movsl
mov
and
mov
adc
stc
and
adc
dec
mov
or
sahf
jne
fdivrl
imul
or
mov
push
roll
push
xchg
inc
jle
and
or
sbb
out
iret
test
inc
imul
in
pcmpgtd
push
iret
outsl
inc
mov
mov
lds
bound
add
jo
jno
pop
je,pn
jnp
mov
or
lcall
jecxz
add
scas
out
mov
xorl
fisttps
sbbb
xchg
gs
adc
xor
sbb
leave
mov
sbb
mov
add
mov
loopne
xchg
mov
xor
mov
aam
out
pushf
js
div
and
es
clc
js
inc
test
pop
call
sub
jg
inc
mov
ret
sti
lea
adc
add
ljmp
inc
decb
cmp
jmp
imul
inc
rcll
fisubs
je
mov
push
enter
shrb
add
adc
out
mov
xor
jne
xor
xor
ljmp
mov
cs
fidivl
mov
repz
adc
xor
cmc
push
scas
js
jecxz
loopne
add
add
mov
mov
or
jns
mov
sub
and
pusha
out
rorl
mov
and
or
mov
pop
mov
movsl
xchg
inc
sbb
jecxz
mov
pushf
incl
push
stos
loopne
xchg
mov
sbb
dec
mov
fiadds
pop
push
mov
pop
cmp
xchg
into
popf
inc
cmpsb
adc
pop
and
sahf
fldl2e
xor
in
mov
push
and
mov
xchg
push
pusha
pop
adc
out
mov
loopne
add
