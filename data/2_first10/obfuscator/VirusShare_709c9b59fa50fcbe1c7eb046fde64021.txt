pop
push
jns
pop
lcall
cmp
paddb
push
lds
scas
xchg
push
adc
js
xchg
push
inc
or
sahf
repnz
jnp
scas
filds
iret
sbb
jae
adc
mov
test
push
fimull
nop
fcoml
xchg
mov
dec
pop
scas
push
ljmp
jbe
pop
mov
dec
cmp
das
lods
icebp
pop
gs
push
dec
xor
inc
cmc
adc
add
or
adc
jmp
mov
adc
jg
fists
mov
lret
psubd
mov
xor
and
adc
jo
insb
jae
push
mov
mov
std
out
int
iret
adc
push
sbb
rclb
stos
dec
mov
insl
test
test
lds
stc
xchg
mov
negb
push
adc
pushl
ret
adc
jmp
je
mov
mov
adc
inc
and
push
repnz
lcall
push
aad
jecxz
xchg
iret
js
adc
mov
pop
mov
enter
pushf
cmp
mov
inc
pop
add
mov
pusha
fstl
popa
dec
test
mov
pushf
adc
adc
jg
orl
test
cmp
cmpsl
mov
rclb
lea
jb
jmp
dec
neg
inc
jmp
pushf
mov
pushl
mov
pushf
pushl
ret
jmp
lea
je
call
call
push
mov
pushf
lea
jmp
push
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xchg
push
or
test
test
pushf
or
push
mov
movb
lea
je
call
call
mov
outsb
imul
jmp
loope
ret
cld
aad
mov
adc
lods
cmpsb
stos
aas
jle
xchg
stos
loop
movsb
xlat
ljmp
pop
or
rol
enter
pop
sub
addr16
aam
inc
test
iret
add
add
insl
cmp
mov
adc
cmpsl
inc
jle
pop
and
pop
mov
fimull
mov
sbb
jg
lahf
inc
xchg
rcrb
push
push
inc
push
pop
and
popa
aam
das
out
mov
fprem
repz
mov
idivl
xor
gs
mov
cmpsb
pop
aam
ljmp
pop
not
loopne
xchg
int3
jg
pushf
movl
jge
dec
push
cs
cli
shll
pop
dec
lahf
dec
imul
pusha
and
imul
sbb
inc
dec
es
les
push
xor
out
pop
add
fsub
fmull
cltd
cli
out
clc
arpl
mov
mov
test
add
ror
pushl
pusha
jmp
movl
movb
pusha
pushf
pushl
lea
jmp
mov
jmp
lea
je
shl
bsr
bt
movzbw
add
or
test
rcl
ror
mov
pusha
test
add
pushl
test
push
cmp
mov
btc
mov
bt
cmp
movw
push
call
jmp
jmp
lea
jae
clc
cmp
clc
sub
call
add
bswap
mov
jmp
cmp
sub
cmp
pushf
pushl
popl
bt
pushf
pushf
cmp
call
mov
push
pushf
pusha
push
lea
jmp
lea
jbe
xor
rcl
btc
mov
neg
shld
jmp
in
adc
jmp
xor
sbb
add
pushf
repz
add
add
ss
movsl
bound
lcall
inc
movsl
push
xchg
loop
push
dec
lds
xchg
sub
fisubrl
mov
pop
cli
push
inc
pop
pop
sub
js
mov
ret
add
pop
jnp
out
xchg
lret
lahf
adc
lcall
scas
push
cmp
sbb
idivl
pop
in
shrb
mov
and
in
mov
aas
push
fadd
ficoml
cmp
dec
in
jp
cmp
shlb
jg,pn
popf
sbb
xchg
jbe
cld
add
test
outsl
idivb
jp
add
pop
jnp
adc
add
aas
xchg
gs
outsl
sbb
push
test
addr16
ret
jo
lds
pop
and
fwait
xchg
mov
popa
inc
mov
mov
mov
rcll
scas
loop
sbb
ds
fldenv
pop
aas
enter
fsubrl
or
pop
stos
popf
pmulhuw
fstpl
jl
dec
in
gs
jle
shrl
dec
aam
test
lea
mov
mov
inc
cli
or
iret
scas
inc
push
add
aad
fdivp
mov
popa
sbb
lret
cltd
ja
stos
clc
xor
cmc
push
sub
stc
cmc
call
call
pushf
xchg
movzbw
movl
cwtl
movw
push
call
negb
shlw
and
or
gs
cmpl
call
jns
lea
mov
xor
jle
xlat
push
mov
popf
je
xchg
aam
sub
adc
jg,pt
adc
leave
fnsave
out
jecxz
pushf
aam
imul
push
jns
inc
push
movsl
sbb
mov
mov
jecxz
aaa
pop
mov
pusha
pushf
pushl
ret
pushf
movl
call
xor
jns
mov
cmp
add
xchg
dec
xchg
in
shrl
in
lahf
int3
xor
push
push
in
inc
call
or
lods
shrl
mov
push
scas
aaa
insb
and
cld
ja
mov
lea
adc
mov
jbe
mov
cmpsl
cli
call
cmp
add
jno
add
pushf
push
jmp
movl
pusha
movl
movb
lea
jmp
add
xchg
shll
call
daa
or
lods
and
daa
jne
cmc
sahf
in
xchg
push
sarb
bound
cwtl
add
scas
inc
inc
mov
je
in
rcl
aaa
ret
and
mov
mov
sub
outsb
xchg
mov
push
incl
daa
gs
mov
mov
add
frstor
mov
mov
push
and
insb
mov
add
pushf
pushf
inc
pushl
test
push
push
cmp
seta
push
pushf
call
jne
gs
xor
fs
insb
add
and
cmp
call
mov
sub
gs
pop
in
push
mov
data16
inc
gs
cmp
fwait
hlt
xor
daa
push
inc
gs
mov
sub
lret
jbe
mov
push
ficoml
gs
jmp
mov
xchg
pop
inc
gs
std
repz
sub
inc
inc
gs
or
incb
mov
fxch
and
pop
inc
gs
dec
dec
inc
jp
sub
push
inc
gs
sbb
es
nop
psrlq
xor
inc
ret
push
inc
gs
xchg
mov
data16
gs
xor
inc
lds
sarb
sub
mov
inc
gs
sbb
inc
xchg
push
inc
gs
push
nop
push
inc
gs
or
imul
bnd
cld
pop
inc
arpl
sub
xchg
pop
inc
fdivl
ss
inc
gs
lcall
adcl
lds
cld
xor
xchg
push
inc
gs
pop
cmc
shll
inc
gs
stos
test
sub
add
xchg
or
xchg
fsts
gs
mov
aam
xor
testb
inc
gs
xor
xchg
adc
movsl
push
inc
gs
push
ret
gs
test
inc
gs
xchg
out
fnsave
gs
rorb
mov
adc
out
push
inc
lcall
add
sub
rclb
push
test
cmp
mov
testb
gs
cmc
hlt
push
xchg
sub
mov
rclb
mov
sub
mov
xchg
mov
xor
inc
ja
inc
gs
sbb
dec
ficoms
gs
aam
xor
subb
xchg
push
inc
gs
xor
mov
push
inc
gs
mulb
mov
nop
iret
in
or
aad
ret
inc
mov
push
and
cmp
fnstcw
dec
and
mov
add
adc
cmp
mov
iret
xchg
hlt
outsl
cmp
stos
adc
cmpl
and
call
pushf
jmp
lea
jae
bsf
mov
shrd
bts
mov
pusha
seto
shr
mov
call
pusha
mov
lea
lea
jmp
test
jmp
sub
pushf
lea
call
pushf
jmp
outsb
inc
adc
xchg
negb
push
xlat
out
sbb
mov
call
imul
pop
xor
xor
aas
mov
ror
push
popf
push
clc
rorb
test
repz
jno
jmp
add
adc
mov
jp
sbb
jne
add
and
xchg
inc
into
jno
repnz
xchg
repz
push
mov
sahf
pop
aaa
roll
cmp
notb
imul
push
sub
push
ss
push
or
pop
sbb
add
movl
bt
cmc
stc
rol
push
push
not
call
lea
jne
shrd
mov
jnp
rcl
sub
dec
sub
shld
stc
rcr
mov
cmc
pushf
cmc
jmp
lea
jbe
bts
mov
shl
add
btr
sub
mov
bswap
test
bsr
rcl
add
not
ror
stc
movl
sub
call
jmp
mov
test
pushf
add
call
aaa
xchg
fldenv
mov
mov
imul
pop
push
addr16
cmpsb
cltd
add
xchg
cmpsb
pop
and
mov
leave
xchg
dec
outsb
lds
push
aam
inc
add
cmp
add
aas
fldenv
and
fisttpl
test
pop
mov
cmpb
leave
or
inc
shlb
ret
push
jg
lods
popf
mov
pop
dec
outsl
lea
fnsave
into
xlat
add
jp
enter
call
sbb
clc
cmp
inc
or
or
cmc
movl
add
stc
add
jmp
add
inc
js
je
jb
arpl
jae
pushf
jmp
lea
je
stc
test
sub
bt
bt
pushf
test
cmp
call
push
mov
lea
call
popf
cpuid
nop
pusha
pushf
movl
pusha
mov
movl
pushf
push
push
lea
jmp
lea
je
call
jnp
stc
bsf
push
dec
mov
push
sbb
setg
bsf
sub
cmp
neg
js
pusha
mov
sbb
btc
mov
bswap
jmp
or
pop
shll
cmc
push
push
fimuls
cmpl
outsb
xchg
push
mov
sbb
icebp
pop
fdivrs
out
cmp
inc
rorl
xchg
inc
lahf
pop
loope,pn
subb
push
in
repnz
out
out
es
loope
push
es
imul
jecxz
aam
movsl
in
adc
xor
push
adc
cmc
mov
pop
out
xchg
dec
and
mov
test
rclb
mov
cmpb
pushf
lea
jne
pushf
mov
pusha
lea
jmp
jmp
cmp
cmp
cmp
jmp
add
jecxz
add
sbb
push
push
add
jecxz
add
xlat
adc
pop
push
add
jecxz
add
sbb
fs
add
add
xor
xor
cmc
push
repnz
pushf
jmp
pushf
lea
je
stc
pushf
stc
jmp
push
jmp
and
mov
cmp
cmp
pushf
push
test
push
push
call
jmp
cmp
bt
stc
cmpb
mov
lea
jne
xor
xor
btc
mov
xor
add
jmp
call
xor
pusha
repnz
jmp
call
pusha
movl
lea
jo
pusha
movl
push
push
lea
jmp
jmp
pushf
adc
pusha
pushf
pushf
lea
jmp
ror
stc
jmp
jg
jg
shll
ljmp
inc
mov
imul
mov
je
es
int3
ja
test
or
cltd
mov
xor
nop
imul
pop
jp
mov
scas
stos
mov
xchg
dec
test
fucomip
out
icebp
lock
mov
jae
adc
mov
pop
pop
cmc
push
mov
or
stos
pop
lds
mov
dec
inc
ljmp
ja
dec
pop
pop
or
iret
jo
mov
mov
mov
lea
call
jbe
jae
xchg
mov
not
pusha
inc
inc
mov
not
pusha
mov
lea
jmp
add
cmp
call
cmp
pushf
mov
call
mov
mov
push
pop
push
sbb
dec
ficompl
jno
mov
add
fwait
mov
arpl
cmp
arpl
pop
iret
test
sbb
sbb
cltd
out
bound
and
dec
cmp
mov
insl
fcom
fstps
sbb
pop
clc
xchg
jle
mov
pop
mov
adc
inc
jl
movsb
outsb
or
jecxz
pcmpeqw
orl
mov
sub
mov
push
push
push
jnp
mov
cs
scas
adc
push
gs
add
call
push
shll
jnp
or
push
lfs
and
mov
push
fwait
sbb
test
in
mov
push
add
push
pop
fisubrl
dec
int3
testb
orl
in
imul
lea
mov
jl
fadd
cmp
mov
das
xchg
and
adc
inc
and
pop
lock
add
jmp
adc
pop
add
mov
pop
add
xorl
mov
add
pop
std
std
notl
ret
je
popa
pusha
into
shrl
imul
pop
pop
push
ss
mov
std
jge
mov
inc
mov
pop
movl
sbb
ja
xchg
addl
hlt
inc
mov
and
xchg
push
jbe
test
ret
xchg
xor
sbb
dec
mov
call
jmp
imul
roll
inc
nop
or
imul
mov
sbb
mov
faddl
and
or
fsts
popf
sbb
mov
xchg
fstpl
push
inc
or
push
jg
call
jle
push
lea
call
test
cmp
push
sub
pusha
lea
jl
pusha
movb
lea
jne
pusha
push
jmp
adc
push
jmp
movb
call
mov
call
push
push
call
lea
ja
sets
push
bswap
mov
not
mov
movb
mov
pushl
push
setb
lea
mov
pusha
mov
not
pop
push
mov
push
pushl
ret
add
jmp
and
pushf
pushf
add
pushf
pusha
mov
lea
jmp
movl
lea
ja
pushf
push
mov
push
movw
pusha
push
pushl
ret
pushf
mov
clc
mov
cmpb
push
pushf
lea
jne
test
rol
bswap
sub
lea
mov
add
add
jmp
or
sar
mov
cmp
stc
cmpb
pushf
pusha
jmp
bsf
bt
mov
cmc
jmp
call
pushf
movb
mov
lea
jne
push
pusha
call
sub
pushf
add
or
pushf
jmp
loopne
or
mov
adc
fstpl
lds
in
xor
fidivs
push
cs
jmp
into
scas
pop
loope
or
ror
addr16
xchg
movsb
sub
jnp
push
jno
into
mov
xchg
jge
pop
lea
fwait
jmp
scas
jmp
mov
fmuls
daa
fsubrs
jne
pushf
movl
call
cmc
not
sub
xchg
shld
mov
adc
rcr
shl
or
mov
test
bt
pushf
push
mov
rol
mov
call
and
mov
dec
adc
pop
sbb
loope
mov
sbb
movsl
enter
lret
leave
movsl
jle
rol
lock
in
jns
sub
ret
cmp
adc
or
insb
xchg
sub
push
loopne
lods
pop
inc
arpl
das
clc
jmp
stos
rclb
jmp
push
mov
mov
xchg
sub
enter
adc
out
adc
pop
test
lock
jns
std
mov
pop
daa
es
iret
or
enter
out
movsl
cmpb
sti
inc
sub
dec
mov
and
sbb
hlt
jmp
lea
jne
rol
jmp
call
lea
je
push
movzbw
call
mov
mov
inc
test
or
push
sti
ret
inc
jne
add
pop
aaa
add
ss
push
js
inc
push
or
aad
in
loopne
sub
aaa
nop
adc
push
mov
ss
and
std
dec
lods
clc
stos
ret
mov
cmp
pop
rolb
pop
inc
popf
sti
mov
mov
ljmp
fst
rcll
sarb
mull
sbb
mov
add
inc
pushf
lea
call
bt
clc
pusha
test
cmp
pushf
movb
movw
call
jmp
pushf
stc
pushl
add
pushl
movb
jmp
ja
push
push
shll
mov
xchg
shlb
in
xchg
lret
adc
lods
fisubs
mov
jg
lret
xor
inc
pop
jnp
aaa
imul
mov
push
rorl
pop
mov
fcom
pop
popf
clc
or
lds
xchg
sub
adc
lods
sar
dec
push
dec
xlat
pushf
jmp
call
movw
rep
bswap
not
mov
mov
mov
mov
lea
jmp
jmp
cmp
movb
test
mov
push
lea
je
bsr
mov
clc
add
xor
or
shrd
mov
pusha
cmc
clc
test
call
push
xchg
fcoms
mov
inc
lea
sub
nop
outsl
xor
stos
mov
psubw
iret
aaa
push
scas
loop
xor
out
or
inc
sarb
enter
add
inc
mov
jl
lds
xor
pushf
mov
call
inc
add
lods
xlat
xchg
xchg
cmc
cli
mov
cmp
pop
pop
aam
dec
sbb
pusha
sbb
jne
xchg
push
cmc
in
imul
in
fwait
push
mov
shrb
mov
mov
movsb
popa
lods
int
mov
loope
jecxz
ret
fs
jmp
mov
pushf
movl
pusha
call
lods
lock
xchg
fsts
pop
jp
gs
inc
add
xchg
cs
dec
cs
lds
xchg
mov
cli
xor
jb
or
mov
inc
sbb
push
mov
push
pop
mov
dec
insb
pop
or
fsub
xchg
add
les
aad
add
mov
in
pop
pop
sbb
and
dec
mov
lds
adc
cmc
dec
cmpsb
mov
popa
xchg
int3
dec
inc
aad
inc
bound
cltd
fs
mov
out
and
and
xor
xor
inc
xor
pop
outsl
and
cmp
ficoms
dec
pusha
orb
xchg
leave
sub
popa
push
xor
jb
sub
dec
xchg
icebp
call
nop
xchg
dec
dec
sahf
sub
subb
js
lods
out
and
push
les
jmp
inc
rclb
adc
dec
lea
bound
arpl
ficoms
enter
daa
hlt
dec
ss
shll
cmp
adc
cmp
mov
sub
xchg
xchg
cmp
sbb
lret
add
aas
jbe
arpl
mov
and
mov
bound
adc
inc
andb
jne
dec
jno
shll
sub
testl
push
lret
sub
dec
cwtl
ret
stos
or
lea
push
loope
cwtl
outsl
or
pop
cld
repz
les
test
mov
mov
imul
repz
jecxz
xor
in
mov
or
test
aam
cmc
mov
testl
das
mov
inc
push
js
dec
and
enter
or
mov
into
dec
mov
popa
icebp
cmp
add
ret
adc
sbb
lret
pop
and
jge
fmuls
cltd
pop
xchg
mov
jmp
inc
pop
aam
out
pop
mov
mov
cltd
stos
or
js
sbb
jmp
bound
inc
push
add
lea
mov
mov
movsb
jg
lea
sub
pop
sti
cmpb
add
xchg
mov
or
mov
fcomps
cmp
jbe
cmpsb
add
xor
lcall
ja
rcl
cltd
nop
hlt
adc
test
repz
popa
add
dec
lods
xchg
pushf
outsl
jbe
and
scas
and
pop
mov
pop
dec
rorb
and
inc
and
mov
sarb
push
sbbb
add
mov
pushf
mov
bswap
pushf
movsbw
lea
mov
pushf
movl
jmp
call
shr
sub
adc
movsb
out
cmp
or
fwait
aas
popa
ds
test
lret
inc
and
push
mov
add
xor
sub
ret
mov
fcoms
jb
ja
repnz
pop
idivb
aaa
cs
dec
ds
fbld
out
add
rorl
xor
mov
out
data16
dec
scas
add
sub
inc
imul
sbb
push
xchg
sub
lret
cwtl
cmpsl
fistps
inc
or
inc
mov
repnz
sub
icebp
js
pop
movsl
andl
xor
mov
inc
test
je
aam
inc
pop
fistpl
bound
add
mov
inc
not
not
stos
pushf
mov
call
lea
movsbl
mov
mov
mov
mov
mov
lea
ja
call
sbb
btc
adc
bt
mov
jmp
lea
jae
call
movb
pusha
pushl
movl
pushf
pushf
lea
jmp
lock
xchg
mov
ds
out
jp
notb
shlb
sbb
adc
in
gs
mov
mov
les
push
cmp
lret
add
arpl
insl
inc
pusha
shll
ja
xor
adc
testb
mov
pop
cld
incb
sub
aam
shr
dec
in
sub
scas
cmpsb
aam
jnp
xchg
rcl
push
fcmovnb
lods
or
mov
mov
adc
cmp
pushf
ror
jmp
xchg
aam
jp
mov
sub
in
jp
mov
jae
xchg
mov
pop
mov
repz
test
xchg
mov
inc
push
pushl
mov
lea
bswap
not
pop
pushf
push
pusha
pushf
pushl
ret
call
inc
inc
test
pop
enter
test
jne
xor
mov
xor
pop
dec
xor
test
inc
pop
add
dec
test
xor
test
inc
mov
test
xchg
push
xor
enter
xor
imul
fs
add
stc
stc
mov
bt
add
mov
rcr
jmp
lea
jbe
bswap
movzbw
sub
sub
shld
mov
inc
sar
rcl
mov
add
rol
add
push
btc
shr
add
push
mov
test
test
add
pusha
lea
mov
pushf
jmp
pusha
movb
pushf
mov
pusha
lods
add
jnp
push
clc
test
add
bt
call
lea
ja
jmp
cmpb
pusha
call
scas
sbb
dec
shll
testb
sub
xor
pop
aam
test
adc
dec
pushl
mov
xchg
cld
arpl
decl
xchg
xchg
and
dec
shrl
jbe
js
test
cmpb
sahf
popf
xor
cmp
stos
rcrb
cmp
test
push
sub
lea
stc
call
and
mov
call
push
push
adc
dec
push
mov
mov
pop
mov
xchg
popl
cmp
cmp
mov
call
mov
sub
xchg
nop
inc
cmp
or
xchg
push
cltd
mov
push
daa
cmp
cmp
into
pop
mov
cmp
scas
js
in
and
cltd
fsubrl
roll
in
addr16
cmp
cmp
mov
mov
movsl
lock
push
mov
data16
adc
xchg
in
insl
stos
pop
ja
push
cmp
lods
sbb
mov
arpl
lods
or
sbb
fs
cwtl
rcl
aad
push
int
fstl
xchg
push
ret
jnp
fisttps
push
in
sbb
push
rcll
ljmp
idivb
jb
or
insl
sbb
jns
push
lea
in
mov
mov
pop
or
lods
sub
nop
movsb
sub
jno
dec
sub
fs
stos
push
sbb
gs
movsb
outsb
add
stos
fadd
push
sub
and
bound
loope
mov
loope
enter
lods
bound
jecxz
cmpsb
push
push
mov
and
xor
jecxz
push
cwtl
sbb
mov
xorl
int3
mov
aam
mov
jecxz
xchg
das
push
adc
ficomps
loopne
pushf
jecxz
jmp
je
leave
lods
jg
sub
rol
cwtl
imulb
add
hlt
into
xchg
sub
cmp
or
push
jl
inc
clc
pop
dec
pop
cltd
cmpsb
out
es
adc
lods
sti
dec
jo
lcall
call
push
xor
push
xchg
imul
sbb
into
sbb
pop
idivl
adc
inc
int
test
cmp
xchg
push
outsb
dec
mov
xchg
dec
mov
pop
or
cmp
sub
adc
sub
out
sbb
lcall
xchg
movsb
inc
imull
mov
add
push
cmp
sbb
fs
pop
ljmp
repz
xchg
bound
dec
ret
popa
mov
in
xchg
fwait
das
push
lods
mov
in
mov
mov
jecxz
mov
insl
mov
bound
sub
sub
and
fnsave
pop
movsl
adc
movsl
mov
add
scas
imul
fsubrl
mov
adc
pop
imul
fsubl
insl
adc
mov
or
fcompl
fdivrl
mov
inc
scas
and
fmull
mov
mov
fcompl
movsb
adc
mov
mov
scas
arpl
fdivl
mov
add
push
sbb
adc
inc
lea
pop
jno
out
mov
xchg
sub
bsf
jmp
xor
sbb
outsl
nop
push
pcmpgtw
sahf
jo
fcomps
cmpsb
push
cwtl
mov
test
xchg
aam
sbb
fnsave
cltd
mov
fiaddl
cli
insb
jns
fdivrl
sub
xchg
jnp
leave
imul
or
add
dec
dec
sbb
outsl
lods
sub
rcrl
lods
insb
lcall
xor
das
scas
xchg
rorl
sub
aam
in
and
pop
fld
jo
ljmp
cmpsb
ja
jecxz
push
xor
sub
out
cmp
addr16
or
mov
xor
jmp
insl
dec
in
int
jo
sbb
sub
pop
and
je
enter
jp
shrb
sbb
test
insb
xchg
jmp
adc
dec
add
fldt
outsb
mov
sbb
nop
test
push
adc
nop
jge
mov
mov
sub
movsb
xchg
in
or
push
push
sbb
outsl
scas
push
push
fs
out
out
pop
lock
push
dec
mov
inc
outsb
mov
push
adc
xchg
adc
pop
sub
leave
lods
adc
jno
pop
scas
mov
adc
cwtl
mov
dec
mov
test
movsb
insl
out
fwait
or
lods
mov
push
loopne
outsb
aad
mov
pushf
ljmp
dec
pop
icebp
sub
mov
mov
sbb
pop
sbb
stos
inc
mov
lods
out
rclb
pop
adc
adc
std
pop
popa
adc
adc
push
pushf
lods
bnd
stos
daa
or
es
xchg
sbb
mov
adc
and
scas
mov
mov
adc
lods
pop
int
in
out
push
pushw
sbb
cmp
jbe
xor
xchg
or
adc
arpl
jno
lock
mov
stos
int
push
in
cwtl
stos
cmp
cltd
stos
xchg
dec
fwait
jae
loope
mov
in
sbb
sbb
mov
scas
or
movsb
jecxz
inc
jg
mov
sbb
fbstp
in
inc
push
ljmp
gs
stos
insl
arpl
imul
imul
arpl
push
loope
add
fs
jo
or
cmpsb
adc
stos
adc
shr
int
mov
test
loopne
insb
popf
or
pushf
jne
inc
xor
insb
sti
pop
xor
mov
lods
pop
push
leave
leave
inc
push
sbb
jecxz
insb
jbe
ss
jo
data16
and
in
pop
dec
fsub
pop
and
adc
fcomps
mov
xchg
sbb
hlt
pop
push
adc
loopne
enter
pop
mov
cmpsb
adc
sub
jecxz
sbb
arpl
data16
arpl
loopne
mov
lods
cmp
fwait
or
jecxz
das
rclb
inc
dec
adc
call
lret
or
and
or
dec
mov
fisubl
outsb
inc
mov
sbb
ja
adc
mov
pop
mov
outsl
cmpsb
mov
cwtl
push
adc
arpl
jno
sbb
test
imul
insl
cmp
jo
insl
jecxz
nop
mov
push
sbb
jo
jecxz
bound
sbb
adc
jo
mov
push
gs
dec
mov
outsl
sbb
lret
fwait
mov
adc
lahf
lods
ja
mov
out
mov
test
movsl
dec
imul
sti
push
outsb
lods
jo
mov
cmc
lods
adc
push
cmp
and
xchg
push
mov
popa
loope
jo
icebp
pop
push
sbb
jo
ja
ja
fisttpl
xchg
adc
or
push
pop
sbb
and
outsl
mov
sbb
pop
and
dec
popf
cwtl
sub
sbb
pop
jno
push
pushf
pushf
push
frstor
scas
fmull
ljmp
fistpl
test
jne
mov
add
inc
pop
repz
sub
imul
sbb
fsts
mov
fwait
push
fld1
sarb
pop
jb
sub
cmp
mov
add
sbb
adc
pop
and
out
bound
pop
xchg
fcomps
loope
sbb
lods
jno
scas
jno
insl
lods
neg
in
arpl
scas
push
jecxz
scas
mov
popf
outsb
jo
out
fwait
lcall
adc
jno
fiaddl
add
sbb
push
sbb
into
push
scas
repnz
sub
in
adc
mov
movsl
push
arpl
loopne
loope
adc
jge
test
jo
sub
mov
out
and
out
ja
insl
sbb
out
mov
in
mov
sub
dec
pop
adc
mov
ljmp
ja
mov
ljmp
test
fildll
imul
push
das
jg
add
mov
popa
mov
bswap
pop
xchg
xchg
lods
push
scas
push
and
mov
cs
test
mov
inc
movsl
push
mov
in
mov
bound
lock
adc
and
sbb
outsl
jl
mov
adcb
mov
in
ljmp
adc
lret
cmp
xor
sbb
subb
mov
stos
sub
add
fs
pop
or
mov
dec
xor
outsl
sbb
mov
lret
sahf
pusha
lock
inc
dec
inc
nop
in
mov
in
mov
incb
in
push
sub
testb
mov
imul
push
inc
mov
test
xor
test
mov
ret
push
or
pop
and
mov
cmp
xchg
scas
loope
lcall
push
outsl
sub
sub
adc
adc
jecxz
push
mov
mov
add
pushf
fisubrl
push
jno
dec
scas
adc
cs
mov
out
or
push
arpl
dec
out
mov
scas
dec
out
pop
outsb
mov
lret
jno
adc
dec
mov
aas
scas
in
sbb
mov
outsb
push
mov
mov
movsl
inc
sub
push
mov
fidivs
lock
loopne
test
or
adc
mov
push
and
lret
bnd
pop
sbb
test
scas
dec
gs
arpl
lret
and
mov
mov
lock
adc
popa
jecxz
dec
lret
scas
pusha
inc
cwtl
or
gs
add
or
add
push
mov
xor
mov
outsl
and
jno
jno
push
ljmp
sbb
mov
pusha
push
imul
pop
mov
mov
std
sbb
dec
or
push
push
dec
cmp
or
xchg
in
gs
adc
sbb
pop
lcall
rcr
repz
popf
loope
mov
adcb
mov
add
shlb
mov
or
cmp
ss
outsb
repnz
dec
add
push
data16
add
xor
pusha
into
xor
xor
xor
mov
loope
push
cli
mov
dec
pop
shll
adc
jno
jo
stc
out
or
loope
push
xor
mov
shll
add
fsubrl
inc
adcb
pop
mov
shl
scas
inc
lds
push
bound
mov
pusha
aam
add
ljmp
dec
pop
mov
shlb
push
icebp
outsl
sbb
repz
or
adc
mov
cs
push
mov
in
mov
lret
mov
rcrl
sbb
lret
adc
fsubr
add
icebp
mov
rorb
sbb
aaa
push
pop
adc
or
hlt
or
sub
inc
rcrb
fmul
mov
push
in
push
les
xchg
enter
sbb
mov
xchg
ss
or
sbb
outsb
or
aas
imul
sub
fistps
mov
movsl
adc
push
lret
cmp
jl
aaa
mov
mov
xchg
mov
in
mov
sbb
mov
cmpsl
imul
push
mov
pusha
add
iret
mov
adc
rolb
fdivrl
add
and
mov
pop
push
push
jo
int3
mov
movsb
cmpsb
sub
inc
pusha
inc
xor
mov
sub
test
sbb
push
sbb
fisttps
cmpsb
aaa
push
in
fcmovnu
and
loopne
xchg
mov
mov
mov
dec
mov
aam
mov
stc
out
adc
cmp
ja
mov
adc
stos
test
lock
push
mov
push
in
sbb
lock
gs
sbb
nop
mov
mov
mov
mov
dec
xor
in
jecxz
mov
mov
sub
xchg
xor
test
test
push
mov
mov
insl
and
in
sbb
inc
push
aam
les
in
push
xchg
xchg
mov
stos
sbb
add
adc
sub
mov
insb
pop
aam
fadds
ljmp
sbb
rclb
mov
and
adc
push
cltd
cmp
jmp
shlb
adc
sti
data16
in
jne
mov
mov
pushf
call
je
inc
push
lock
fdivs
out
aaa
rcr
mov
in
pop
mov
loopne
sbb
mov
sahf
gs
fcompl
push
rol
dec
jae
fwait
imul
sahf
pushf
adc
mov
cwtl
sbb
fs
pusha
pop
push
cwtl
push
pop
clc
push
imul
inc
outsb
repnz
mov
cmp
loop
and
roll
add
les
mov
mov
sbb
xor
sbbl
nop
imul
sbb
in
pushf
lods
xorb
cmpb
sub
in
aam
in
or
in
sbb
jo
mov
sbb
adc
inc
or
test
imul
sub
or
lds
mov
sbb
outsb
cmp
push
data16
pop
test
mov
insl
sbb
sbb
fsubrl
lcall
cmp
sbb
imul
dec
mov
bts
mov
cld
fwait
pop
movsb
xchg
stos
popf
outsb
or
insl
loop
aaa
adc
or
lock
sahf
enter
mov
pop
lea
or
roll
gs
and
cmpsl
push
mov
sbb
addr16
and
xorl
push
jmp
push
aad
lcall
data16
imul
pop
inc
cmp
fwait
and
inc
or
imul
inc
sbb
inc
inc
gs
arpl
bound
mov
or
cmp
imul
push
out
call
adc
sbb
pop
push
repz
addr16
sbb
lock
scas
mov
inc
imul
mov
dec
mov
lock
imul
jo
insl
sub
mov
in
sbb
pop
sbb
shlb
pop
xchg
pushl
in
xor
pop
mov
sub
push
pushf
sub
in
into
mov
fldln2
dec
sbb
jge
pop
je
mov
sbb
dec
shrl
jmp
les
repz
mov
lea
lret
mov
sub
sbb
sub
pushf
insl
cli
bound
mov
jecxz
mov
sbb
push
in
sub
push
lods
pushf
fs
stos
sub
xlat
hlt
cs
cs
je
xchg
outsl
jb
sub
mov
mov
lods
cmp
ja
cld
in
mov
xlat
lods
nop
das
jl
sub
xlat
mov
sbb
sub
sub
lods
mov
and
popf
add
pop
addr16
jl
sub
jo
xlat
sub
inc
xchg
fs
fs
push
jl
mov
daa
jno
or
mov
dec
pop
hlt
lahf
lods
jb
out
insb
pop
or
cmp
sahf
pop
xchg
mov
cli
fdivl
data16
sub
and
lods
lods
ret
in
mov
push
adc
sbb
push
mov
mov
pop
mov
mov
sub
jl
stos
ret
ljmp
ficompl
sbb
out
mov
push
sbb
mov
xchg
das
fwait
inc
mov
mov
mov
leave
mov
inc
cmp
push
lods
sahf
pop
aad
push
jno
insl
mov
out
push
adc
aam
inc
or
dec
bound
pushf
xchg
insb
xor
loopne
ja
int3
adc
ljmp
or
gs
sbb
in
sbb
dec
test
stos
out
bound
sbb
or
ds
lock
in
sbb
lock
in
xchg
sbb
sbb
lock
sbb
sbb
out
call
push
cmp
mov
inc
sbb
lock
or
push
push
adc
push
sbb
lock
mov
insl
xor
in
sbb
lock
gs
sbb
push
out
jecxz
fs
ss
clc
stos
shl
or
add
push
mov
or
in
pop
xor
setne
push
dec
cwtl
lock
imul
mov
in
sbb
lock
in
cmp
push
loop
out
sbb
lea
xchg
push
add
pop
sbb
mov
jge
jno
sbb
sbb
arpl
mov
in
xchg
sbb
and
stos
fs
addr16
in
sbb
mov
gs
mov
in
sbb
mov
cmp
push
stos
mov
mov
in
sbb
lock
mov
or
in
xor
sbb
lock
sbb
sbb
mov
inc
mov
push
stos
test
mov
lahf
push
fwait
in
sbb
or
in
and
popf
push
imul
or
mov
gs
in
sbb
lock
push
push
mov
mov
inc
xor
sbb
lock
gs
sbb
sbb
mov
xchg
xor
rcrb
push
or
test
lock
mov
in
sbb
mov
inc
in
mov
inc
sbb
or
add
sbb
xchg
in
jl
xchg
sbb
add
gs
xchg
and
push
gs
fs
mov
test
sbb
push
imul
mov
sbb
jno
lods
testb
sub
jo
jno
xor
mov
lods
in
inc
in
scas
adc
cmp
in
sbb
lock
in
pop
sbb
push
scas
imul
mov
in
stos
sbb
lock
gs
dec
and
push
push
mov
dec
jo
stos
pop
mov
jnp
in
jo
insl
dec
mov
mov
add
lock
or
adc
or
sbb
lock
in
jp
outsb
sbb
push
jmp
adc
gs
sbb
push
mov
mov
in
jecxz
addr16
sbb
lock
sbb
push
mov
xchg
lock
outsb
sbb
data16
sbb
lock
test
xchg
in
sbb
loopne
outsl
in
loop
sbb
jno
lods
mov
insb
pusha
dec
pop
mov
ja
adc
imul
mov
sub
xor
popa
mov
inc
scas
sbb
xchg
cmp
out
loopne
pop
outsb
mov
push
imul
int3
ja
cmpsb
dec
sub
push
jmp
fwait
sub
dec
sahf
mov
and
jecxz
xor
cltd
arpl
movsb
sub
mov
in
data16
in
imul
imul
ucomiss
in
in
lock
mov
sbb
cltd
jp
leave
fsubr
sbbl
loope
push
cmp
xor
xchg
xchg
ljmp
adc
lock
sbb
popa
dec
gs
or
adc
out
add
push
lock
mov
outsb
sub
lahf
mov
fsubrp
das
mov
dec
fcoms
out
mov
stos
sbb
push
jge
cmpsb
sbb
inc
jnp
jl
int3
xchg
jno
cmpsl
or
sbb
lahf
insl
xchg
out
dec
pop
outsl
jno
pop
cmp
lock
push
bnd
cltd
xor
jge
lods
data16
cmc
xchg
add
sbb
sti
jecxz
in
inc
jecxz
push
mov
inc
xorb
sub
pusha
xorb
movsb
gs
or
and
notb
jno
rcrl
outsl
sub
jne
loope
cmp
mov
sbb
shl
in
jo
imul
popf
in
outsl
sbb
repnz
adc
mov
sbb
inc
notb
gs
sti
mov
ret
jb
call
push
sbb
in
loope
out
jnp
pop
stos
dec
cmp
jns
sbb
dec
popf
aam
mov
inc
shlb
ljmp
in
xchg
sub
pop
imul
push
jo
push
test
fwait
bound
bound
jge
dec
xchg
addr16
adc
mov
or
xchg
lods
push
lret
cmp
or
or
adc
dec
fnstenv
push
mov
repnz
and
push
insl
mov
adc
jmp
mov
jns
repnz
movd
sbb
jmp
pop
movsl
sbb
loope
mov
loopne
ds
nop
outsb
sub
outsl
fadds
gs
outsb
push
imul
and
popa
sar
and
movsb
call
sub
bound
add
in
repnz
sbb
xor
xchg
imul
dec
and
scas
stos
push
lock
sbb
arpl
scas
cmp
je
stos
xchg
data16
das
call
sbb
dec
mov
sbb
and
xchg
sbb
lock
adc
pop
test
fs
jnp
dec
iret
hlt
xor
lret
hlt
jo
xor
call
xchg
dec
xorb
mov
jo
imul
mov
pop
lretw
push
cmpsb
cmp
out
es
and
mov
pop
sbb
push
pop
cmp
and
pop
in
fs
fs
jo
adc
out
pop
fisubrl
push
jo
xchg
pop
ror
push
dec
mov
xchg
int
cmc
cmp
repnz
and
mov
aad
mov
lea
and
mov
pop
fs
lods
test
and
mov
adc
mov
cmp
push
negb
hlt
inc
lret
lcall
fwait
cmp
out
pusha
mov
in
movsb
xlat
arpl
fucom
mov
in
int
testb
loopnew
push
and
mov
dec
adc
dec
call
sub
mov
pop
push
lret
push
xchg
mov
aad
xchg
inc
outsl
xchg
lcall
xchg
inc
cwtl
ss
jo
ret
cmp
lock
cmpsl
movsl
lahf
in
mov
and
pop
push
xchg
jbe
das
pushf
fs
pop
inc
fs
loopne
inc
arpl
cmp
ja
add
gs
loopne
push
adc
sbb
cwtl
lcall
fs
out
leave
cli
adc
mov
fadds
sbb
jno
or
pushf
pop
add
stos
and
lods
push
xchg
xchg
jg
sbb
xchg
jno
iret
mov
je
ja
rclb
push
adc
fdivs
out
rclb
lock
aas
sub
sub
jecxz
mov
dec
and
mov
sbb
andb
fsubrs
test
movsl
pushf
sbb
xorl
outsl
lss
adc
out
jmp
dec
int
jo
xchg
mov
inc
stos
out
cmp
mov
fcoml
sbb
pop
out
inc
jno
xchg
dec
or
push
fsubrs
mov
mov
out
mov
sbb
push
and
pop
jo
into
pushf
imul
jmp
pushf
sbb
mov
addr16
imul
push
xchg
or
and
out
jecxz
and
out
cmp
mov
and
push
xor
mov
outsl
jo
mov
mov
inc
insl
out
bound
fwait
sar
mov
movsb
mov
getsec
into
arpl
mov
outsb
aam
mov
sub
adc
mov
sbb
dec
mov
cmp
loop
mov
pop
imul
and
jns
mov
mov
mov
cmp
or
jo
inc
out
pop
pop
or
js
pop
jle
adc
jo
dec
dec
lods
jge
jns
add
gs
in
das
int3
mov
mov
sbb
lahf
adc
fs
jge
outsl
notb
xchg
scas
jnp
and
xchg
inc
jecxz
sti
mov
and
sub
fbstp
popa
lds
cmp
sbb
into
jp
mov
mov
mov
jg
scas
imul
divb
notl
sbb
add
pop
and
pusha
out
lods
cmc
cmp
push
cltd
mov
daa
pop
lods
add
mov
fidivrl
cltd
or
push
js
ja
pop
cmp
inc
decl
push
mov
xchg
sub
in
hlt
jmp
aas
fmuls
dec
mov
dec
sbb
mov
stos
push
push
mov
and
dec
xchg
pop
fwait
inc
adc
dec
out
lods
pusha
mov
cltd
aad
ljmp
cmpsl
mov
imul
sub
icebp
rcrl
loop
jp
test
and
imul
fcomip
lcall
and
frstor
dec
repnz
mov
fdivl
lret
mov
pop
in
stos
dec
pop
add
dec
sbb
out
mov
imul
fadd
adc
jl
mov
ljmp
add
lea
lea
call
cmp
inc
push
or
mov
add
cmp
mov
sub
mov
sub
or
mov
cmp
fldl
repnz
aaa
adc
scas
dec
jnp
mov
mov
cmp
imul
sub
pusha
xchg
insb
cmp
imulb
dec
pop
mov
push
inc
fisubrs
out
mov
shll
movsb
sub
xor
mov
dec
sahf
dec
clc
fstpt
sbb
xor
mov
sub
test
outsb
cmp
pop
shr
je
push
dec
mov
cmp
mov
out
mov
push
ljmp
sbb
jl
add
cmp
fs
sbb
inc
cmp
cld
pusha
sti
sbb
mov
push
es
sbb
insb
jo,pn
test
fcompl
loope
inc
xchg
push
jo
jno
in
pop
ret
push
or
subb
outsb
dec
xchg
cmp
xchg
mov
jno
fistpll
icebp
int3
and
push
add
cwtl
or
or
sub
in
cld
mov
pop
add
xor
repnz
pop
pop
pop
dec
mov
arpl
mov
xchg
push
adc
lock
or
in
push
jo
mov
push
mov
jo
mov
xchg
mov
inc
stos
xchg
lods
push
xchg
out
sbb
and
insl
or
lods
movsb
jnp
sub
sbb
adc
jno
inc
dec
jl
cmpsb
pop
jo
lock
imul
pop
movsb
repnz
cltd
test
xchg
push
in
lea
and
fwait
mov
cli
mov
sahf
icebp
and
int3
push
repnz
xchg
fldcw
lret
imul
mov
lock
pop
lret
adc
icebp
dec
in
jecxz
and
add
insl
mov
mov
adc
fidivrs
ja
imul
cli
pop
in
cmpsb
cmp
dec
repnz
mov
pushf
pop
sbb
mov
test
scas
fucomi
jno
dec
push
shrb
imul
dec
cs
mov
outsb
ror
repnz
mov
ljmp
sbb
or
sahf
sub
stos
in
in
pusha
mov
shll
mov
out
scas
xchg
or
outsb
mov
bound
push
xchg
xchg
inc
push
jl
movups
jge
fcoml
jo
sahf
sbb
outsb
fwait
repnz
mov
jb
lcall
ret
mov
jno
lahf
push
push
arpl
sbb
xor
add
mov
daa
jb
push
rcll
imul
pop
mov
mov
adc
aad
test
sbbb
cmp
sbb
ja
gs
cmp
and
push
ficompl
call
mov
fisubrs
xchg
sbb
inc
inc
dec
sub
loope
in
jae
sub
lcall
bound
jg
int3
hlt
sub
push
pop
rcll
je
imul
outsb
push
mov
or
push
jno
movsb
adc
dec
dec
inc
lds
mov
icebp
inc
mov
jno
imul
sbb
or
jbe
xorl
mov
imul
adc
dec
dec
push
push
insl
imul
fs
pop
loope
out
add
fmull
jle
outsb
mov
test
fs
lods
es
or
bound
movsb
mov
dec
loop
insl
mov
pop
std
sbb
les
mov
cli
dec
xor
jne
filds
sub
cmp
mov
test
push
pusha
int3
push
sbb
shr
sub
mov
xchg
inc
fcomi
ljmp
jmp
daa
mov
xlat
mov
mov
mov
ss
les
fs
cmc
mov
ja
sahf
insl
out
mov
lock
add
sbb
iret
push
aam
mov
push
fcomps
jp
sbb
int
divb
or
fs
aas
call
arpl
gs
adc
xchg
cmp
fs
das
cmp
pop
outsb
or
test
out
push
aas
inc
outsb
push
jb
cmc
out
push
outsb
std
cmp
adc
test
dec
into
imul
mov
test
idivb
adc
in
loopne
mov
or
dec
lahf
int
imul
cmp
adc
lods
int3
aad
mov
push
cmp
sub
shl
and
movsb
mov
cmp
jmp
nop
add
lods
mov
es
sbb
sub
outsb
clc
fs
xor
das
adc
sbb
sub
jb
xchg
pop
push
xlat
sub
mov
mov
pop
ja
sub
lock
push
aas
out
cld
or
lods
in
xchg
sbb
fimuls
fisubrs
into
sub
out
lods
outsl
or
fwait
popf
fs
mov
popf
hlt
cmp
das
sub
addb
sbb
xor
lea
sbb
jle
shlb
and
mov
dec
or
mov
push
mov
sbb
imul
inc
dec
and
mov
sbb
inc
ljmp
int
mov
mov
inc
mov
lock
ficoml
sbb
sbbb
and
mov
pushf
cmpsl
int3
push
int3
mov
loop
dec
add
cmp
test
cld
out
cmp
in
sbbb
adc
pop
notb
mov
out
mov
push
std
incb
pop
mov
imul
lcall
mov
jmp
aas
repnz
inc
sub
lds
and
mov
add
fs
lret
adc
lret
cmp
mov
jo
add
or
imul
das
pop
es
loopne
lods
add
test
mov
adcb
fsts
ljmp
fs
sbb
and
sbb
pop
xor
mov
cmp
xor
and
pop
sbb
aam
es
int3
nop
xchg
dec
lock
lods
xchg
fwait
or
in
or
adcb
mov
outsl
jnp
push
iret
and
cmp
insl
cld
and
int
insl
adc
dec
int3
icebp
jns
or
outsb
scas
out
dec
jbe
js
int
in
xchg
lcall
fwait
adc
imul
test
stos
lret
pop
jns
lret
mov
cmc
mov
pop
jno
sub
and
icebp
jl
dec
repz
stos
repnz
mov
xchg
xchg
in
jecxz
mull
mov
daa
jno
mov
outsb
xchg
sub
iret
stc
dec
cmp
fwait
clc
push
cmp
movsl
movsl
inc
sub
fs
sub
aad
mov
xchg
xor
mov
aad
jg
rolb
mov
mov
push
int3
jo
outsb
sbb
lahf
jo
xchg
mov
xchg
in
add
dec
loop
mov
push
pop
fs
mov
sub
lods
or
dec
clc
pop
test
inc
imul
loop
pop
or
mov
fimuls
jmp
lods
add
jno
loopne
add
mov
cmp
dec
mov
fsubl
sbb
gs
xor
push
and
jg
lods
repnz
lret
mov
insl
jno
cmc
call
xor
test
data16
mov
and
jecxz
jl
dec
pop
mov
in
mov
mov
in
push
push
dec
mov
out
push
lret
sbb
adc
add
sbb
notb
lods
sbb
jo
xchg
in
xchg
jbe
pop
imul
outsb
pushf
mov
dec
test
imul
and
clc
and
dec
mov
out
imul
push
push
int
sti
es
inc
scas
inc
nop
cmp
and
repnz
xchg
mov
and
sbb
pop
cmp
sbb
stc
mov
cmp
add
out
pop
and
mov
pop
push
test
inc
int3
jle
daa
in
xchg
enter
fidivs
cmp
pusha
mov
push
lcall
push
inc
aam
or
jmp
arpl
cltd
dec
nop
les
mov
mov
jo
push
icebp
lods
mov
pushf
test
jmp
push
out
xor
mov
inc
outsl
cmp
pop
jnp
mov
xchg
mov
leave
fsubl
outsb
adc
inc
out
jecxz
addl
mov
inc
push
xor
cmp
pop
cli
and
sbb
push
xchg
test
out
aas
pop
insl
stos
fidivs
call
jno
sbb
push
iret
stos
scas
lods
repnz
sbb
mov
sub
sbb
movsb
pop
or
sub
fs
pop
and
push
mov
fidivrl
insb
loopne
pop
gs
push
fsubrl
lods
sub
jecxz
xchg
sbb
adc
lahf
fists
mov
sub
scas
leave
fwait
icebp
mov
scas
mov
jo
mov
mov
push
icebp
add
jb
pusha
inc
icebp
fs
push
popf
xor
or
xor
mov
or
jge
mov
mov
xlat
test
lahf
outsb
pop
sarl
mov
sbb
and
cmpsb
ljmp
xchg
adc
data16
push
mov
xchg
cld
sbb
cld
or
add
aam
out
mov
xor
mov
mov
and
loope
jb
sub
mov
jb
mov
and
loopne
push
lock
jbe
daa
movsl
repnz
mov
mulb
outsb
arpl
push
loopne
mov
inc
popf
adc
lds
mov
pop
mov
pop
or
pop
outsb
cmp
lods
mov
pushf
mul
push
nop
lea
rorl
imul
dec
lock
mov
pop
popa
insl
out
push
mov
lods
int
mov
and
ljmp
sub
jmp
lret
or
cmp
imul
frstor
xchg
aam
js
das
cmp
sahf
outsl
lock
mov
pop
es
sbb
cltd
sbb
ja
adc
add
jo
fwait
jno
jge
lods
stos
aas
insb
pop
mov
fs
scas
xchg
lcall
mov
in
jb
push
mov
fs
lea
and
in
mov
pop
push
push
mov
dec
adc
mov
lret
push
stos
mov
test
inc
jl
and
sbb
lret
popf
push
mov
out
std
js
lock
pop
test
sbb
outsl
stos
cmp
stos
sbb
popf
jl
sub
sub
sub
mov
xchg
mov
dec
les
mul
mov
pop
sbb
stos
xchg
dec
mov
dec
in
jae
xchg
je
jp
insl
hlt
pop
sub
sbb
xchg
stos
mov
lock
xchg
jbe
addr16
xor
popa
stos
push
or
pop
test
out
or
dec
add
cmp
cmp
lock
pop
or
cld
insl
pop
ret
arpl
jns
loop
js
mov
nop
pop
sub
dec
cmp
daa
jb
movsl
stos
hlt
loope
adc
xchg
mov
insl
lret
and
jo
mov
data16
subb
pusha
xchg
lahf
out
pop
insl
fucomi
mov
and
dec
sub
repz
out
inc
aad
sbb
in
or
mov
les
jo
sub
lods
mov
mov
pop
xor
mov
test
mov
dec
push
iret
push
pop
loope
dec
outsb
es
notl
mov
cmpsb
inc
icebp
pop
bound
mov
fs
outsl
movsl
outsb
inc
les
testb
jl
clc
dec
mov
int
sbb
adc
jle
mov
sbb
inc
data16
jno
lea
std
arpl
out
int3
push
jle
dec
sbb
sub
jno
dec
sub
or
lods
or
std
push
outsb
add
sbb
test
imul
sub
iret
jp
lret
popa
imul
push
loopne
cmp
cwtl
fs
push
outsb
jecxz
cs
mov
out
imul
xchg
imulb
sar
cmp
adc
movsb
les
jns
sub
lods
push
cmp
sbb
push
push
icebp
insb
ljmp
int3
pop
imul
inc
adc
outsb
mov
pop
inc
push
loop
decb
lea
call
inc
stos
jns
mov
insl
lahf
cli
jl
sahf
imul
xchg
sub
es
mov
lcall
mov
hlt
cltd
cld
out
sub
imul
or
dec
dec
nop
pop
mov
gs
mov
repnz
xor
add
jbe
dec
add
mov
jns
sub
movsl
imul
push
fxam
and
scas
xchg
aaa
insl
mov
fnstsw
cli
in
int3
xor
jns
ss
sub
nop
sub
fwait
pop
sbb
cwtl
push
mov
loope
ss
adc
lods
aas
push
movsl
adc
push
or
dec
lods
dec
orl
arpl
sbb
stc
or
mov
mov
leave
inc
repnz
arpl
pop
mov
dec
jle
adc
adc
lcall
gs
outsl
mov
stos
mov
pop
mov
push
or
mov
out
pushf
mov
xor
inc
lods
lret
sbb
shr
and
cmpsb
call
movsl
es
repz
mov
inc
inc
push
adc
lock
jo
insl
in
jns
sub
xor
push
sub
mov
cmovae
movsl
dec
pop
mov
pop
lcall
lret
cmp
pop
pop
lods
test
loopne
fisttpll
dec
sbb
popa
mov
add
sbb
xor
push
dec
jo,pn
adc
es
cltd
dec
int3
mov
sub
or
xchg
xor
push
and
mov
xchg
cmp
aad
and
push
in
mov
xchg
icebp
or
pop
lret
es
jp
and
jge
sub
cmpsl
test
fs
in
lods
fnstcw
and
imull
xchg
inc
mov
insl
ficoms
mov
jb,pn
cmpsl
xchg
pushf
and
mov
es
test
or
jne
sub
mov
imul
in
fisttpl
outsb
cld
jb
insb
lret
es
shl
dec
sub
sbb
xor
mov
mov
imul
pop
push
dec
sub
sbb
imul
xor
fucomi
aam
arpl
lret
mov
sub
push
push
dec
in
icebp
popa
jo
repnz
outsb
ret
scas
push
es
or
add
adc
fsubrs
fidivrs
cld
fwait
or
and
ljmp
outsb
repnz
pusha
jb
in
adc
sti
addr16
dec
jbe
mov
fwait
xchg
inc
movsl
mov
mov
imul
repz
shll
es
xchg
jecxz
shlb
in
dec
lret
inc
xchg
pop
mov
sub
ss
adc
cwtl
icebp
cmp
int3
xchg
push
jbe
mov
mov
insl
fbstp
arpl
stos
push
push
in
adcb
push
mov
ret
dec
or
daa
mov
adc
mov
js
gs
scas
sub
add
int
xlat
and
xchg
xchg
lods
sub
fstpl
dec
outsb
pop
jae
xor
jl
test
pusha
inc
jb
jp
fs
lds
sub
outsb
loopne
fisubl
cmp
das
daa
outsl
lds
lahf
jno
jno
aad
addr16
jbe
negb
cmpsb
fsubrs
xor
lock
shrl
jno
dec
shlb
inc
fidivrs
mov
pop
xor
mov
fstl
lcall
push
mov
daa
dec
daa
div
pop
jge
fadds
mov
xor
pop
vpshlb
stos
mov
jle
lret
xlat
mov
fwait
pop
jl
sbb
imul
ret
mov
popf
jno
xor
lds
lods
jmp
mov
mov
sbb
dec
imul
push
jbe
sub
adc
imul
jb
sub
adc
mov
xor
sbb
nop
mov
inc
mov
leave
sbb
shlb
repnz
loope
rol
cli
cltd
dec
fwait
mov
sbb
mov
sub
dec
es
cld
scas
icebp
push
mov
cmp
adc
jmp
or
pushf
std
xchg
push
xchg
and
pop
in
loopne
cs
loopw
and
popf
icebp
xlat
mov
xor
stc
xchg
mov
inc
push
jle
and
jo
std
add
jb
mov
jge
in
es
pop
xor
cmpsb
adc
aam
pop
cmovp
fsubrl
sbb
out
ja
aam
mov
ret
enter
lcall
mov
mov
sbb
test
and
dec
outsb
dec
pop
stos
mov
sbb
push
sub
adc
nop
loop
cmpsl
lock
add
add
pusha
imul
dec
dec
dec
mov
mov
pop
mov
jno
add
sbb
sub
mov
pop
ljmp
stos
stos
and
sbb
sbb
add
push
lcall
adc
xor
or
adc
mov
pop
lods
adc
rclb
outsl
jns
mov
dec
hlt
out
mov
pop
mov
xor
xor
jnp
cmp
cwtl
or
mov
stos
lea
mov
dec
in
outsb
movsb
jmp
xor
mov
pop
in
jle
adc
fwait
push
enter
nop
or
mov
inc
mov
add
xor
inc
pushf
aad
and
das
pop
xchg
repnz
outsl
lcall
test
jno
mov
es
dec
mov
pop
cs
and
push
pop
inc
insb
cmp
ljmp
mov
mov
push
fsubrs
sub
cwtl
xchg
jb
sub
sub
out
pop
out
lock
pop
int
lea
sbb
sbb
pop
sub
sbb
sub
stos
push
clc
or
stos
push
in
xchg
mov
bound
dec
leave
addr16
inc
push
lcall
xlat
sub
sbb
sub
test
push
scas
call
ror
in
add
fidivrs
test
lods
movsb
xor
int
iret
push
ds
cmp
cmp
jns
cmp
mov
in
ret
out
rcl
mov
cld
in
pop
jae
xor
outsb
push
inc
or
dec
stos
dec
xchg
cmpsl
xchg
ds
mov
xchg
jno
mov
vpshuflw
lods
sub
mov
cltd
push
adc
sub
or
daa
jae
cmpsl
insl
sub
sbb
outsl
repnz
stos
jecxz
lock
dec
add
fstpt
out
cmc
mov
cmp
hlt
cmp
xchg
cli
in
pushf
loope
mov
mov
pusha
sti
push
movsl
jb
popf
jge
mov
mov
sbb
sarl
pushf
js
inc
shlb
push
sbb
push
mov
ss
push
pop
xor
jnp
int3
pop
outsl
adc
enter
inc
or
stc
and
xchg
or
scas
and
or
add
jg
mov
xor
movsb
lods
lock
push
movsb
in
mov
andb
push
push
incb
and
fsubrp
pop
insl
xchg
push
or
jo
scas
mov
xchg
add
out
andl
mov
ret
and
sarl
xorb
and
xchg
dec
and
lret
cmpsb
inc
adcb
cld
in
lock
lock
pushf
xchg
mov
movsb
xchg
pop
sbb
push
das
jb
mov
ljmp
xor
push
fwait
cwtl
loopne
imul
pop
sbb
mov
rclb
mov
negl
jb
mov
daa
or
ljmp
jl
movsb
push
lods
sbb
pushf
mov
cmpsb
or
mov
sti
mov
gs
pop
adc
loop
js
mov
or
insl
idivb
cmp
pop
mov
push
lcall
jbe
dec
xchg
push
push
push
sbb
mov
fidivrl
dec
mov
xorb
or
call
pop
dec
sub
mov
lods
adc
cmp
pop
ljmp
xchg
imul
out
xlat
jae
and
lds
add
ffreep
adc
sbb
dec
faddl
ret
mov
inc
lret
nop
or
push
add
sub
fisttps
or
push
scas
dec
xchg
mov
push
lock
push
dec
mov
aam
fimull
jae
add
outsb
lods
or
stos
mov
call
xchg
dec
mov
and
xchg
movsl
push
or
test
mov
je
xchg
mov
mov
xchg
sub
adc
cmc
scas
pusha
ja
icebp
or
sbb
dec
jmp
inc
ret
pop
mov
xor
adc
outsl
adc
cmp
mov
pop
pop
repnz
pop
loopne
and
arpl
stc
ljmp
push
sub
pop
mov
mov
jno
nop
cli
cld
decb
mov
and
dec
mov
movsl
aas
cmp
stos
mov
jo
jbe
jecxz
rorl
xchg
fs
shlb
loop
xchg
arpl
fistps
dec
jp
pop
push
in
fs
es
cmp
mov
ds
cmpsl
xor
and
int
es
imul
adcl
outsl
int3
out
pop
icebp
xchg
pop
mov
jns
fldenv
bound
shlb
xor
inc
push
popf
xchg
lock
loop
and
mov
pusha
arpl
pop
stos
jnp
and
push
sbb
pop
movsb
or
outsb
xlat
or
cld
sbb
test
hlt
movsb
inc
jg
xor
cld
mov
imul
dec
pop
test
aaa
sbb
jl
jge
pop
cld
dec
mov
cmp
outsb
dec
cmp
xor
sahf
sub
pushf
es
adc
in
jle
push
cmc
sbb
shll
and
aam
sub
gs
sub
inc
mov
add
cmp
adc
lcall
mov
loop
dec
mov
jnp
mov
in
jno
in
fidivl
sub
xchg
cmpsb
push
out
lea
xor
scas
push
sbb
sahf
dec
jle
imul
mov
adc
popa
mov
sbb
pop
loope
jle
dec
fbld
xchg
and
sub
outsb
fistps
ja
in
jno
rorb
iret
out
and
push
xor
jecxz
cmp
sub
sbb
dec
mov
aaa
addr16
loope
mov
adc
lret
and
jno
dec
jle
jl
pop
sub
xchg
mov
xchg
loop
adcb
fcomps
jmp
js
bt
enter
cltd
or
jmp
mov
pop
lods
fnsave
xacquire
ret
pop
out
adc
cltd
imul
mov
icebp
inc
dec
cltd
test
fwait
jg
xchg
fcomps
ljmp
outsb
mov
inc
ljmp
mov
insl
pop
stos
mov
sarb
call
pushf
push
mov
mov
mov
pop
je
mov
subb
mov
pop
push
cltd
in
js
sbb
jns
dec
fwait
xor
and
out
loopne
jle
ljmp
push
loopne
push
sbb
cltd
loop
insl
rcrl
dec
mov
pcmpgtw
mov
sbb
sbb
and
mov
push
push
and
adc
arpl
sub
and
loope
loopne
sbb
add
call
daa
jl
dec
mov
idivl
stos
mov
jns
dec
shll
stos
pop
push
jo
add
sbb
or
add
push
pop
lock
sbb
adc
lods
cs
outsb
ljmp
stos
xchg
xor
shrl
dec
stos
inc
into
inc
pop
and
push
scas
aad
and
rclb
mov
xchg
jae
inc
mov
sbb
andb
movsl
sub
ret
and
sbb
pop
xchg
mov
dec
daa
rcrb
sbb
xor
test
decw
repnz
mov
scas
add
test
cmpsb
pop
cli
loopne
xor
push
cmp
jns
imul
sbb
lcall
jo
jno
std
inc
gs
push
pop
out
sarb
jno
dec
jns
mov
insl
out
loope
push
test
fmull
or
mov
clc
sbb
outsl
jno
ss
xor
push
cmpsl
add
popf
insl
mov
bound
and
push
lds
xor
pop
ds
gs
in
mov
popa
mov
int3
mov
fldt
outsb
push
xor
lcall
pop
jbe
mov
or
dec
sbb
pop
and
popf
imul
lds
loope
pop
scas
in
outsl
sub
int3
xchg
outsl
out
adc
pop
lods
ret
xchg
sub
andl
sub
adc
pop
lcall
pop
orb
mov
rorb
fcmovb
std
adc
orb
iret
dec
cld
movsl
movsl
test
gs
xor
cmpsb
lods
ret
out
icebp
outsb
or
scas
xchg
jl
ss
xchg
fs
daa
movsl
sbb
and
push
xchg
adc
sub
lods
or
dec
inc
pop
lods
mov
leave
test
stc
mov
test
adc
test
stos
sbb
aam
mov
push
mov
dec
ret
cmp
pushf
in
jge
mov
adc
inc
or
push
jmp
int
in
out
sbb
or
in
jb
sub
inc
ret
jno
sbb
ja
dec
popf
cbtw
jge
outsl
mov
and
or
scas
in
adc
bound
push
sbb
lea
mov
outsl
adc
xor
and
sbb
cli
adc
pop
imul
mov
xchg
mov
mov
fistpll
mov
mov
cld
mov
and
movsl
rolb
xor
sub
dec
jno
addr16
icebp
lock
orb
mov
pop
sbb
outsb
sbb
pusha
push
push
pop
fisubrs
and
or
sub
xchg
lods
mov
sub
insl
fldcw
adc
cld
dec
sub
test
mov
xchg
outsb
outsb
pop
xor
pop
adc
push
in
rorl
and
jle
das
inc
mov
mov
sub
insl
popf
testl
call
repz
mov
cmp
push
pop
cmp
sub
push
inc
push
lock
mov
pop
mov
test
insl
sbb
std
adc
dec
mov
sbbl
movsb
sub
bound
lcall
int3
dec
mov
jl
sub
push
mov
push
mov
repnz
iret
bound
cld
movsl
into
push
lahf
add
mov
sbb
test
fimull
movsb
test
call
jno
fwait
imul
push
in
jecxz
push
pop
mov
or
pop
adc
xor
inc
bound
inc
jl
jl
sbbb
stos
imul
mov
sahf
dec
bound
in
sbb
movsl
pop
adc
pop
pop
push
cmpsb
sbb
aas
mov
test
subb
mov
shrb
out
mov
jl
aaa
icebp
pop
or
and
pop
ficompl
fildl
dec
mov
and
daa
shrl
sub
jnp
jo
push
mov
and
lods
pop
xchg
stos
adc
mov
mov
xor
out
adc
adc
ficompl
das
xchg
cmp
push
xchg
or
or
repnz
and
xchg
stos
pop
lock
shlb
in
cwtl
jecxz
lea
bound
idiv
dec
jo
lock
sub
shrl
fbstp
dec
fsubrl
push
jmp
adc
lret
jns
insl
je
xchg
push
enter
stos
mov
les
iret
or
cmp
add
cmp
add
mov
jb
loop
push
or
sbb
or
mov
int3
mov
mov
fnsave
or
dec
scas
cmp
stos
ja
lock
dec
and
cli
dec
sbb
jge
pop
pop
movsb
xchg
into
lea
add
xlat
sub
mov
andb
sub
aaa
push
mov
fs
jns
mov
mov
jnp
sub
aas
lcall
xchg
fisubl
movsb
cmp
stc
mov
xchg
cli
sub
xchg
cmp
call
in
frstor
aad
jb
out
addr16
jl
xlat
aaa
mov
jno
clc
dec
imul
adc
fwait
cmp
lahf
pop
sbb
ja
cmc
or
arpl
adcb
int3
pop
not
push
adc
or
imul
divb
jecxz
jecxz
xor
lock
xor
jmp
cmp
mov
ja
fidivs
push
and
sbb
inc
sbb
icebp
fidivrs
and
icebp
dec
icebp
movsb
out
lret
repz
xorb
aas
jno
repnz
outsl
mov
test
stos
outsl
test
sbb
shr
lods
and
mov
insl
adc
ret
repnz
sbb
shl
in
cmpsl
adc
xor
xchg
sbb
pushf
dec
es
aad
push
mov
lret
xor
bound
xchg
addr16
fimuls
rorb
repnz
mov
clc
lock
jp
cmpsb
sbb
jae
push
inc
imul
or
out
mov
push
add
sub
shrl
addl
lcall
lods
push
jl
dec
cmpsb
rcrl
aas
int3
inc
ljmp
in
sahf
or
sbb
pop
loop
dec
loop
es
hlt
cmpsl
mov
mov
test
rcrl
lret
mull
sbbl
hlt
shlb
mov
cmpsl
pop
mov
inc
ror
ficompl
lret
inc
mov
push
scas
pop
addr16
or
sub
mov
pop
sbb
hlt
add
push
jb
orb
pop
add
stc
movsb
mov
lods
repnz
mov
sarb
fs
mov
loope
jo
mov
bound
nop
mov
sbb
pop
iret
lahf
jae
icebp
dec
es
or
lods
cld
pop
int3
hlt
aaa
pop
dec
test
vrcpps
sbb
or
or
daa
sbb
ficoml
dec
xor
pop
aas
out
rolb
out
jo
or
rolb
pop
cli
in
ret
movsb
inc
ss
xor
out
mov
ljmp
cli
jmp
sbb
pushf
ficomps
iret
pusha
cld
mov
arpl
xlat
movsl
dec
enter
loope
adc
mov
mov
int3
mov
lock
mov
gs
loopne
lret
movsl
push
mov
jb
xchg
loope
adc
adc
enter
sahf
or
mov
cmpsb
mov
bound
mov
sub
sahf
in
cmp
pop
adcb
sbb
pop
lea
or
sbb
or
fdivrl
sbb
pop
ds
mov
pop
mov
sub
scas
ss
jge
adc
outsl
and
or
add
sbb
mov
push
movsb
and
pop
add
adc
adc
push
sbb
in
fsubl
mov
sbb
outsb
push
sub
pop
xor
frstor
stos
popf
ss
adc
lret
jg
pop
push
jmp
sbb
mov
movsb
jmp
in
icebp
les
lock
add
and
in
jge
orb
movsb
mull
daa
jae
and
mov
dec
sbb
adc
sub
gs
dec
repz
jge
data16
jmp
fsubrl
sbb
push
mov
outsb
sbb
pushf
pop
mov
sbb
mov
sbb
pop
bound
mov
stos
or
and
push
mov
outsl
sbb
pushf
addr16
movsb
sbb
xchg
sbb
push
pop
in
pop
sub
fmull
jo
add
adc
test
sbb
ja
dec
cltd
cmc
cmpsb
mov
in
sbb
sub
cmc
mov
stos
push
lea
or
xor
movsl
sub
mov
in
adc
call
or
scas
dec
inc
fs
hlt
das
movsb
aaa
fistps
xlat
sbb
pushl
data16
cmp
or
jo
in
jge
fwait
int3
shlb
test
loop
arpl
call
outsl
dec
in
mov
outsl
lock
jmp
lods
push
jo
sub
cld
mov
cmp
pop
out
outsb
sub
sbb
outsl
jle
jecxz
jno
xchg
jno
push
arpl
xor
cld
mov
mov
fisttps
data16
push
call
jno
in
push
outsb
outsl
sbb
dec
sbb
addr16
pop
jb
jl
pushl
adc
jmp
outsb
sub
xchg
sub
inc
jecxz
ljmp
pop
mov
dec
xchg
call
push
lea
cli
loopne
icebp
sub
daa
movsw
mov
push
dec
lret
push
test
rcrl
mov
and
pop
inc
repnz
fwait
insl
inc
sbb
and
les
lods
jbe
sub
jno
sbb
insl
int3
fwait
test
cmp
pop
jo
mov
imul
shll
push
mov
fs
pusha
iret
jp
imull
pop
and
popf
or
pop
push
loope
les
imul
cmpsb
adc
call
mov
addr16
ja
and
lahf
dec
sub
jo
mov
mov
clc
js
sbb
push
lock
add
daa
outsb
roll
push
insl
ja
or
mov
daa
movsl
pop
dec
mov
mul
dec
lahf
jo
xor
rorl
mov
movsb
andl
push
adc
and
cld
lock
outsl
in
pop
imull
dec
or
in
push
sub
sub
sbb
cld
mov
sub
lods
sbb
stos
jo
jge
and
xchg
dec
pop
ds
mov
sbb
negl
stc
sub
divl
xor
cmp
mov
sub
or
outsl
test
jp
ret
pop
xchg
cmp
or
in
xlat
adc
push
pop
outsb
xor
or
jnp
subl
lcall
fbld
lcall
and
push
in
mov
sub
push
pop
push
int
sbb
out
pop
pop
outsl
pop
std
sub
cmp
popf
mov
fists
jmp
imul
iret
mov
nop
mov
dec
loope
dec
add
imulb
movsl
pop
mov
cmc
xchg
add
dec
int3
push
adc
rcrl
repz
lods
jecxz
ja
sub
sub
cmpsl
pop
movsl
add
lods
out
pop
hlt
xchg
fisttpl
add
je
gs
lock
stc
cmpsb
cld
ret
in
jg
lea
movsl
pop
inc
bound
popa
jo
cmp
inc
dec
xchg
inc
lock
mov
add
dec
mov
mov
jge
jb
fdivl
test
mov
cld
and
cltd
push
pop
jne
lock
jne
fs
cmp
jo
gs
jno
ja
xchg
sub
dec
jmp
and
mov
lea
jno
out
mov
pop
sbb
scas
sbb
jo
mov
dec
ret
push
pop
fdivs
popa
jo
cmp
jns
or
sub
in
cld
fidivl
inc
insl
les
stos
xchg
scas
mov
lcall
dec
sbb
and
fimull
lods
add
bound
stos
rcr
mov
fwait
pop
ja
dec
adc
ret
xor
jmp
sbb
push
pop
push
and
cmc
lret
sbb
out
sub
fxch
push
mov
loope
scas
gs
lret
push
or
movsl
int3
sbb
mov
inc
add
fmuls
adc
adc
jb
xor
fcomi
sti
jnp
cmp
cmp
loopne
mov
clc
cli
jl
xchg
ljmp
push
bound
sub
icebp
fistpl
dec
outsb
mov
aam
fisubrs
imul
or
flds
adc
popa
cmp
les
int3
sub
ficoml
in
roll
sbb
pop
sub
jl
out
jge
inc
scas
mov
lret
pusha
cmpsb
movlps
cmpsb
mov
lret
out
mov
out
push
lret
pusha
data16
mov
popa
mov
dec
cmpl
push
fdivrs
lcall
adc
pop
shlb
in
mov
or
cmpsb
mov
xor
xchg
inc
sbb
dec
jge
push
and
sbb
or
jge
mov
push
and
movsb
addr16
sbb
outsb
sbb
and
test
mov
jo
push
mov
sbb
xchg
and
in
pushf
sbb
sub
pushf
jo
orl
repz
sti
mov
push
mov
lods
dec
addr16
imul
scas
mov
mov
sbb
xchg
sub
sub
lret
or
lods
test
xchg
sti
or
scas
out
cmp
repnz
aaa
insl
pop
sahf
jmp
push
in
sub
xchg
out
mov
xchg
mov
movsb
outsb
mov
mov
push
je
mov
test
mov
mov
push
cmp
sub
push
mov
and
jno
adc
repnz
xor
repz
push
ja
or
nop
je
sahf
sarb
mov
mov
ficompl
push
jmp
jg
lock
in
mov
bound
fcmove
or
mov
jo
mov
stos
add
pusha
loopne
shrl
xchg
dec
cmpsl
bound
mov
pushf
push
xor
xchg
cmpsb
sbb
mov
adc
mov
out
mov
mov
xchg
inc
notb
shll
fdivrl
or
mov
jecxz
popa
xchg
shl
aaa
xlat
fadds
push
pop
aas
jp
insl
lods
or
in
pop
bound
and
stos
pop
loop
cmp
outsb
jnp
adc
mov
sub
cld
cltd
test
or
bound
cli
lret
mov
out
jo
nopl
stos
imul
cmp
cmp
push
cmpsl
xor
jns
push
stc
in
push
lcall
xor
mov
repz
xchg
sbb
cmpsb
jl
push
jg
or
pop
mov
jno
sbb
and
insl
lock
pop
mov
stos
pop
mov
cmp
dec
xlat
xchg
lcall
sbb
xor
in
mov
mov
mov
mov
ds
in
xor
jb
mov
fnstsw
aad
mov
push
fwait
or
jmp
jo
nop
mov
cmc
sbb
mov
mov
in
pop
xchg
movsb
pop
mov
in
mov
push
and
rcrb
stos
pusha
cltd
dec
pop
mov
fdivs
cltd
sbb
lds
jns
jae
stc
jb
mov
fstp
lret
in
push
pop
scas
mov
sbb
aas
fstpl
icebp
mov
mov
push
push
mov
mov
mov
arpl
loopne
in
dec
scas
add
jecxz
popa
mov
fidivs
inc
rorl
test
ss
push
jbe
leave
xor
xchg
adc
es
sbb
xchg
test
adc
insb
pop
shll
les
jl
sbb
or
dec
rep
dec
scas
popf
scas
imul
movsb
adc
adc
mov
fimull
ja
xchg
xchg
mov
add
adc
xchg
int3
sbb
xor
sbb
xchg
jge
push
xor
inc
inc
xor
cli
aaa
mov
mov
sahf
and
sub
fisubl
imul
imul
adc
in
pop
jne
mov
mov
push
mov
and
mov
lahf
xchg
mov
pushf
mov
dec
daa
js
mov
push
cmp
xor
sahf
or
sub
lods
pop
lahf
imul
imul
and
push
xchg
imul
pop
xchg
or
jp
dec
insl
sub
sub
leave
call
inc
inc
sarl
lods
push
out
pushf
mov
jns
mov
and
adc
dec
outsl
xchg
insl
mov
lahf
cwtl
mov
fbstp
test
push
mov
lret
les
xor
adc
mov
data16
cmc
arpl
cmp
les
jno
and
lret
stos
loop
stos
fucomp
adc
xor
outsl
test
cmc
sbb
mov
xchg
aas
cmp
jno
aas
push
std
sbb
call
mov
push
mov
stos
or
mov
inc
dec
cmp
xor
push
fcoms
sahf
cld
adc
cmp
and
mov
adc
ljmp
sub
push
cmpsb
mov
lret
je
cmpl
das
call
shr
mov
xchg
lds
insb
adc
xor
or
fcoms
dec
cmpsl
bound
in
xor
push
add
mov
shlb
inc
add
push
inc
jmp
sahf
out
inc
in
popf
icebp
fcompl
cmc
fcoml
and
sbb
pop
in
and
sbb
mov
push
subb
push
adc
icebp
sbb
lock
add
pop
sbb
xchg
mov
jo
icebp
icebp
idivl
mov
cmp
aad
mov
fwait
negb
mov
and
lea
jg
scas
sbb
and
and
or
sbb
rcl
dec
outsl
loope
shll
loope
or
sbb
in
xor
stos
inc
insl
mov
mov
fiaddl
add
lods
aam
jg
mov
pop
push
imul
stc
mov
inc
add
lcall
and
fmuls
fldt
ss
bnd
inc
xchg
cld
mov
mov
std
scas
lock
in
pop
mov
or
cld
xorl
insb
lea
in
in
adc
xchg
aam
mov
mov
dec
scas
add
push
jno
xor
xor
sbb
fists
repnz
test
push
adc
adc
out
mov
ret
push
pop
cmc
push
jecxz
imul
add
lret
pop
sbb
inc
sub
and
cwtl
pop
xchg
mov
push
xchg
mov
popf
imul
dec
insb
jb
inc
imul
jo
std
push
pushf
sbb
mov
push
cs
mov
sub
sbbb
push
loop
pushf
and
mov
mov
aaa
sbb
xchg
js
popf
out
cmp
loope
mov
push
std
das
mov
loopne
test
jo
xchg
mov
call
ja
movsl
jge
mov
popf
adc
cmp
ja
pop
mov
sub
daa
dec
inc
jns
push
movsl
out
mulb
dec
pop
or
icebp
jb
xchg
or
popf
adc
pop
loope
mov
adc
adc
sub
lock
lea
pop
or
jno
fwait
daa
adc
cli
push
enter
mov
push
xchg
imul
or
lahf
lock
imul
xor
xor
or
cltd
and
lea
sbb
adc
inc
cmp
out
xchg
test
push
mov
sub
hlt
mov
sub
jb
inc
xchg
je
scas
pop
jl
cmpsb
pop
jno
push
lcall
sub
mov
popl
pop
mov
les
xchg
push
sub
ja
inc
nop
ret
sub
lret
imul
adc
int3
xchg
sbb
mov
add
mov
int
icebp
js
dec
sub
sub
fidivs
in
clc
jne
xor
movsb
mov
and
imul
pop
out
out
or
es
sub
dec
adc
es
imul
pop
stos
jb
int3
push
notl
pop
and
popf
push
xorl
outsb
and
jo
fisubl
in
js
inc
add
es
push
xlat
sub
mov
jno
jl
and
mov
rorb
fistpll
xchg
dec
mov
add
loopne
xor
mov
xor
jl
jo
jno
cmpsl
int3
cmc
iret
pop
icebp
outsb
mov
cmpsb
test
int
aaa
xchg
imul
mov
fdivl
sbb
mov
movsb
aaa
push
xor
and
add
mov
cmpsb
cld
call
sbb
mov
idivl
sbb
sbbl
shlb
xchg
stos
mov
inc
or
adc
add
lret
xor
dec
mov
mov
ds
and
imul
sahf
imul
stos
in
stos
xchg
pop
adc
sbb
out
xchg
mov
in
xchg
test
ret
xor
pop
lock
xor
lcall
into
stos
inc
mov
addr16
jb
test
mov
adc
lock
in
mov
leave
adc
lock
cmp
mov
pushf
adc
shl
adc
dec
insl
or
or
mov
icebp
jo
sub
loopne
cwtl
pop
inc
and
aas
loope
mov
rolb
dec
xchg
pop
sub
jne
mov
cmpsb
mov
jbe
and
movsl
push
es
iret
jp
in
ja
jb
inc
pushf
stos
cmp
cmp
sbb
mov
fisttpll
gs
int3
xor
or
add
pusha
nop
cmp
cmp
mov
xchg
std
imul
adc
sbb
rcrb
mov
lret
repz
in
or
mov
add
sbb
jnp
mov
mov
jp
or
or
push
mov
add
cmp
pop
in
pusha
jmp
dec
jno
push
adc
jb
cld
sbb
cmp
fsubrs
es
jno
xrelease
jb
fsubrs
movsl
mov
sbb
cmp
lret
call
cmp
jecxz
repnz
pop
addb
popf
es
bound
ljmp
mov
mov
fiaddl
test
inc
mov
adc
fcompl
daa
or
lods
sbb
xchg
sub
sub
mov
mov
sbb
xchg
ljmp
int3
cmp
cmp
aas
xchg
push
lret
dec
popf
pusha
in
rclb
mov
repnz
test
push
lahf
mov
jmp
mov
std
mov
add
loop
and
sbb
sub
pusha
mov
adc
and
in
push
lods
mov
mov
jo
push
in
add
mulb
mov
mov
inc
mov
repz
or
pop
mov
xor
test
insl
push
rclb
rep
xchg
cmpsb
mov
cs
in
mov
decl
and
sub
lahf
xchg
pop
sub
mov
mov
loopne
sub
ljmp
adc
insl
push
mov
lods
push
call
mov
pusha
loop
mov
or
mov
pusha
movl
lahf
or
fisttps
sbb
xor
dec
cmp
mov
test
adc
getsec
push
call
stos
pop
mov
dec
mov
pop
push
adc
mov
sti
push
push
mov
in
cld
dec
xchg
xor
mov
lds
jp
mov
pop
addr16
sub
stos
mov
dec
lods
gs
push
mov
scas
sub
test
imul
and
cwtl
cmp
call
repnz
inc
js
loop
dec
loop
sbb
sub
dec
in
scas
scas
addr16
notb
scas
in
mov
int
inc
add
xor
loopne
pop
push
outsl
mov
push
icebp
push
and
sbb
inc
adc
sbb
loopne
jns
cmp
out
inc
lock
js
dec
sbb
push
adc
rolb
mov
bound
ficoms
mov
sub
stos
loop
jo
fildl
pop
or
out
sub
in
and
lods
inc
adc
addr16
out
divl
dec
stos
push
insl
or
movsb
repnz
pop
sub
sbb
icebp
and
iret
insl
leave
mov
out
adc
or
int3
lds
add
ja
jo
stos
cmp
mov
lds
xchg
lcall
aaa
sub
inc
decl
dec
sbb
scas
icebp
shll
jbe
stos
out
fs
std
sti
imul
jae
adc
rcl
repz
leave
mov
cli
or
movb
cwtl
adc
mov
clc
in
cmp
inc
stos
sbb
lret
movsl
dec
clc
and
pop
cmp
pop
rcll
push
addr16
movsb
data16
in
shl
stos
cmp
mov
pop
mov
mov
adc
sbb
out
mov
inc
or
dec
fidivrl
and
lcall
pop
enter
arpl
push
into
push
subb
scas
repnz
movsb
sahf
dec
push
pushf
in
add
dec
push
leave
sbb
jbe
dec
push
loope
sbb
in
sahf
adc
faddl
je
mov
stos
cmp
lods
sbb
sub
ljmp
loope
sub
imul
pop
dec
cld
jno
dec
and
loopne
jmp
ret
cmpsl
add
imul
and
mov
xor
in
inc
aas
roll
sub
mov
push
bound
lods
lock
and
imul
push
pop
jo
adc
icebp
jo
mov
movsb
adc
mov
mov
ljmp
pushf
sbb
pop
in
aas
ljmp
in
aas
scas
inc
xor
sbbb
ret
in
test
push
or
test
sub
dec
bound
jno
outsb
imul
movsb
gs
sbb
mov
sbb
sbb
fdivr
mov
mov
ret
icebp
push
or
stos
xchg
and
bound
sub
out
pop
sub
outsb
or
cmp
sub
sbb
mov
dec
sbb
outsl
push
lahf
outsb
cmp
add
adc
sbb
adc
push
inc
xchg
add
mov
ljmp
and
fisttps
in
push
fisubl
adc
gs
pop
lret
outsb
fldlg2
aaa
dec
stos
gs
jae
lods
inc
andb
push
jge
fnstsw
cmp
imul
popa
jge
nop
or
xchg
mov
stos
inc
daa
mov
inc
cmp
in
sbb
xlat
in
lods
loop
lods
jb
mov
push
pushf
lea
xchg
adc
sub
fisttpl
push
mov
sbb
jbe
xor
cli
push
std
fisttpl
mov
pushl
adcl
adc
aaa
repz
push
shrl
push
hlt
dec
ja
mov
shll
js
es
mov
mov
insl
sahf
test
dec
loop
mov
repnz
cli
cmp
mov
in
int3
jne
ret
aaa
fcmovnbe
shlb
js
xor
jp
inc
pop
jp
shrl
movsb
and
jp
adc
mov
or
shrl
mov
lahf
stos
mov
jg
mov
inc
pop
arpl
and
out
movsl
sub
decb
ljmp
mov
sub
cmc
pop
sbb
int3
lret
jp
in
mov
mov
scas
ficoml
addr16
leave
popf
jecxz
mov
aaa
and
xor
arpl
arpl
outsl
or
jb
adc
cwtl
in
and
xchg
divb
jbe
pop
dec
push
push
mov
cmp
mov
das
jns
pop
cmpsl
push
push
lods
adc
inc
aaa
add
sub
les
mov
cld
mov
insb
out
cltd
sbb
stos
lcall
fwait
sbb
outsl
or
bound
loope
es
insl
mov
sub
daa
in
lahf
sbb
mov
mov
pop
dec
jl
push
mov
ljmp
and
fidivrs
fsubrl
xchg
pop
stos
rol
push
push
sahf
fildll
inc
push
sbb
leave
push
push
xchg
call
sub
xchg
adc
cli
sahf
xchg
in
sub
add
scas
bound
and
dec
out
push
mov
das
cmp
or
dec
inc
cmp
xchg
testl
xchg
imul
icebp
jmp
mov
lcall
xchg
pop
into
lods
lret
cmpsb
mov
in
cltd
xchg
sub
aaa
jge
adc
mov
pop
int3
cmp
dec
jo
imul
cli
push
xchg
push
fidivrs
push
mov
mov
mov
mov
aad
outsb
mov
sub
imul
jbe
loope
or
mov
lods
ljmp
outsb
cmp
mov
push
lock
sbb
imul
cmp
xor
pop
inc
or
or
ljmp
inc
lods
and
jno
rcrl
pop
pop
adcb
data16
stos
or
inc
jmp
mov
stos
cs
xor
and
inc
adc
pop
sbb
dec
cmp
adc
cmp
xchg
jo
pop
imul
cmp
or
testb
mov
cmp
in
ja
loopne
je
lock
imul
ja
jae
insl
pop
pop
push
add
in
ja
adcb
lods
sbbb
dec
dec
inc
lock
mov
cmc
jno
outsb
add
and
adc
orb
imul
fwait
lcall
loop
fisubrl
popa
xchg
and
shr
cltd
loopne
xchg
outsb
repnz
cmpsb
hlt
subl
cmp
fwait
dec
mov
jno
mov
fidivl
pop
dec
lea
pop
ja
cmp
xor
push
xchg
pop
pop
gs
insl
push
pop
into
xor
mov
push
pop
in
sahf
in
sub
push
push
divb
inc
dec
and
movsl
cltd
xchg
in
sbb
popa
in
push
je
or
sbb
pushf
bound
jb
cmpsl
adc
int3
dec
adc
mov
sahf
mov
icebp
dec
je
aaa
clc
mov
sahf
jmp
bnd
adc
icebp
mov
jbe
sub
sub
gs
mov
nop
shll
leave
repz
mov
mov
nop
in
test
sub
nop
dec
in
imul
sub
add
sbb
test
sbb
movsb
mov
push
mov
push
or
adc
or
or
bound
ljmp
ljmp
push
and
push
inc
sbb
dec
adc
test
add
mov
ja
je
mov
jbe
or
add
in
jo
mov
mov
cmp
hlt
push
mov
mov
imul
fisttpll
rcrb
or
out
adcb
adc
sbb
outsb
jb
fcom
adc
or
adc
jge
add
jbe
test
outsb
in
dec
and
xchg
mov
sbb
pop
pop
push
mov
pop
loop
inc
mov
scas
pusha
pushf
divb
stos
jg
jmp
jl
insl
pop
data16
push
fidivrs
jbe
inc
lods
fdivrs
cmpsl
shlb
or
out
cmp
fwait
repnz
or
sub
clc
test
xor
in
jo
push
imul
test
sbb
mov
jno
fmulp
push
push
test
or
xchg
mov
mov
movsb
lock
jno
sarl
add
fsubl
mov
sub
adc
cmp
push
push
sub
xchg
js
mov
or
les
gs
or
jae
jno
frstpm(287
pop
dec
add
inc
cmpsl
aas
inc
arpl
mov
shll
shlb
mov
xchg
jne
mov
shl
shrd
or
out
xchg
int
popa
outsb
inc
dec
jge
jo
adc
jns
sub
arpl
sub
dec
xor
movsb
sarl
sti
or
push
cltd
out
lahf
push
adc
push
push
sbb
pop
xchg
out
test
in
mov
xor
add
jmp
insl
call
arpl
cli
jmp
adc
ja
adc
iret
cli
adc
sbbb
pop
leave
add
fcmovb
mov
sbb
push
ret
test
movsb
add
mov
cmp
or
mov
popf
sub
jl
push
addr16
or
dec
cmpsb
jmp
mov
aad
pop
enter
xor
and
fwait
les
gs
loop
fidivl
stos
mov
cmp
out
ljmp
out
add
outsb
mov
cmp
aas
sbb
bound
in
outsl
outsb
lods
sbb
sub
sub
mov
mov
outsl
loopne
jnp
js
mov
adc
mov
inc
push
jbe
movsb
adcl
cld
loopne
xor
adc
movsb
sbb
icebp
es
mov
jo
stos
pop
sbb
xchg
mov
cmc
sub
mov
jb
adc
or
mov
fistpll
add
pushf
jnp
adc
xchg
sbb
aas
sbb
mov
shlb
cmp
lods
mov
testb
xchg
mov
mull
ja
popf
pop
ds
dec
xchg
xchg
outsl
adc
int3
push
and
mov
lret
in
dec
adc
fwait
adc
cltd
gs
mov
imul
icebp
fistl
mov
imul
jl
fistpl
add
cmp
dec
sub
sub
and
inc
adc
mov
jo
cmp
imul
and
jg
lahf
lret
std
pop
xchg
mov
imul
mov
xor
xchg
ffreep
sbb
cld
mov
fcomp
and
cmp
mov
dec
jmp
cmp
cli
inc
stos
out
and
xor
bound
inc
movsl
and
mov
mov
sbb
cmp
test
dec
pop
push
fimull
inc
xchg
mov
fs
out
outsl
adc
mov
add
shlb
add
jl
pop
xchg
lods
es
sbb
sub
ljmp
mov
adc
xchg
adc
add
mov
sbb
lock
add
cmp
subb
not
lock
loope
xor
add
add
xor
sbb
andb
stos
mov
mov
and
pop
data16
mov
stos
dec
pop
mov
daa
push
in
cmp
popf
data16
bound
faddl
jbe
and
hlt
xchg
daa
and
decb
popf
fistpll
in
xchg
and
je
add
cli
jg
jno
mov
ds
ds
push
js
es
mov
jmp
jo
loope
rolb
hlt
push
nop
jbe
add
push
xchg
lcall
std
xor
push
dec
repnz
jo
mov
js
mov
xchg
bound
outsb
nop
and
mov
fwait
jno
push
imul
adc
cld
push
in
nop
push
negb
push
push
mov
lock
lock
mov
and
stos
jo
movsb
sub
adc
xor
sbb
in
ficomps
adc
pop
jnp
pop
jl
xchg
jp
sub
pop
fdiv
movsl
sahf
jl
mov
or
inc
mov
movsb
adc
add
mov
fs
jo
sub
icebp
test
sub
xchg
sub
jl
push
adc
push
adc
inc
cld
xchg
fmull
and
mov
jno
out
lods
lcall
lods
mov
repnz
or
jb
mov
dec
adc
icebp
mov
fistpll
fisttps
mov
mov
loop
jo
and
pop
mov
sahf
adc
and
or
mov
mov
xchg
cmpsb
notb
sbb
outsb
pop
lods
push
cmpsb
mov
add
mov
cltd
lods
sub
mov
push
adc
fwait
in
mov
lods
push
dec
adc
flds
jb
cmp
xchg
ljmp
adc
xchg
inc
or
cmp
push
shrb
mov
orl
dec
out
mov
pop
sbb
jnp
sub
mov
pop
xchg
jo
pop
and
jno
adc
jmp
notb
xchg
clc
sarl
andb
leave
sbbl
lock
mov
movsb
pop
fs
roll
cmpb
push
aas
scas
push
pop
or
mov
push
inc
xchg
aas
sbb
shlb
in
mov
orl
push
mov
inc
xchg
ja
repz
jmp
mov
inc
jge
jns
mov
xchg
jecxz
shlb
mov
ret
in
pusha
jb
cwtl
outsb
inc
xlat
jo
ljmp
xor
lds
mov
ret
cmp
pop
pop
xchg
xchg
dec
push
sub
popl
push
pop
test
add
lahf
pop
or
xchg
outsb
dec
cmp
push
les
xchg
jns
ds
push
sbb
imul
dec
scas
mov
adc
sub
shrb
sahf
xchg
lods
lods
cmp
xlat
lods
cmp
and
mov
mov
fbstp
push
dec
nop
and
mov
mov
sub
shll
stos
int3
cmpsl
and
dec
inc
xor
sbb
mov
dec
jb
shll
movsb
jae
adc
dec
mov
pop
mov
mov
out
jmp
and
sahf
mov
jmp
dec
into
fbld
lahf
jb
inc
lcall
jno
je
add
ds
mov
or
ja
lods
sub
or
rol
fnstsw
loope
fs
sbb
rcll
outsl
fstpt
lock
int
inc
fmul
in
cli
jg
aaa
mov
callw
cmp
mov
dec
pop
jo
mov
clc
or
or
sbb
shlb
pop
jle
imul
das
popa
popf
out
and
out
repnz
daa
mov
adc
loop
movsl
adc
iret
push
mov
insl
add
or
iret
popa
lahf
pop
or
rorb
adc
es
mov
cs
fs
jge
mov
jo
int
js
outsb
and
or
xchg
cmp
sbb
pop
push
call
cld
jmp
in
sbb
sbb
js
pop
mov
xchg
inc
and
outsl
xlat
int3
add
pop
jmp
xchg
repnz
test
mov
jb
and
testb
movsl
sbb
scas
cs
scas
scas
push
or
xchg
xor
push
out
pop
mov
and
mov
cmp
lret
ja
and
dec
push
push
testb
jp
or
mov
daa
loope
int3
xchg
cld
sbb
lcall
stos
sbb
xlat
fimull
insl
inc
stc
xlat
mov
push
dec
pop
outsl
lds
fistpl
pop
loope
mov
bound
pushf
mov
jl
outsb
icebp
lock
outsl
add
aaa
adc
sbb
ljmp
frstor
jne
jb
xor
sbb
imul
push
inc
sbbb
lea
aas
movsl
dec
int
jno
or
xchg
jo
jns
jbe
mov
sub
jnp
jge
cmp
jecxz
cmpsb
mov
inc
mov
jb
xchg
movsl
pop
adc
pop
fstps
lds
shrl
cmp
add
mov
dec
test
xlat
add
scas
sbb
and
in
and
outsl
mov
lret
xor
jge
jb
sub
loop
arpl
and
in
pushl
stc
sbb
int3
jbe
pop
in
dec
jo
sub
adc
fnsave
mov
popf
sub
dec
pushl
xor
inc
mov
pusha
out
xor
pop
push
add
pop
int
inc
in
mov
mov
imulb
or
mov
test
jno
mov
mov
pop
or
mov
mov
enter
out
adc
jl
adc
nop
inc
push
cmpsb
cwtl
mov
add
xchg
and
loope
sahf
lods
sbb
arpl
mov
or
adc
sbb
mov
or
lcall
mov
dec
inc
sub
sbb
out
push
pop
mov
sbb
jp
loope
mov
out
mov
arpl
pop
negb
loope
jno
test
sahf
cli
scas
jno
sbb
jo
xor
roll
push
insl
mov
mov
xor
insl
jge
or
mov
lret
pop
cmp
addr16
mov
fstps
inc
dec
shrb
jge
mov
dec
rclb
jge
cmpsb
cmp
mov
dec
lret
and
aas
lcall
scas
dec
ljmp
jecxz
or
push
test
mov
xchg
in
adc
sub
dec
cmp
mov
or
pusha
cwtl
dec
icebp
mov
in
adc
popa
lods
or
xchg
mov
inc
push
jo
lea
mov
or
pusha
mov
jbe
mov
fs
sbb
dec
or
loope
xchg
loop
mov
inc
xlat
jno
lds
cmp
sbb
jg
adc
outsl
ret
xchg
xchg
xchg
cmp
and
mov
adc
xchg
sbb
scas
jle
mov
xchg
xor
mov
push
sub
push
lea
mov
mov
mov
pushf
cltd
gs
sbb
in
jg
push
cmp
adc
inc
in
xor
push
xlat
xor
fildl
jb
imul
enter
pusha
mov
jecxz
pop
decl
cltd
jecxz
ljmp
adcl
cltd
fstpt
cmp
and
fs
push
mov
pop
push
xchg
movsb
sub
add
loope
test
lcall
cmp
sbb
roll
push
sub
out
pop
pushf
pop
add
mov
mov
enter
fsubr
jo
orl
ss
sbb
bound
cmp
lret
mov
das
inc
iret
mov
adc
cld
int3
pop
adc
xchg
fsubp
imul
xor
in
sbb
pop
fimull
dec
adc
push
or
adc
push
outsb
in
push
pop
xor
loop
sbb
fsub
dec
xor
int
addb
sub
add
popf
jno
cmpsb
mov
jno
push
outsl
xchg
mov
add
movsl
jo
imul
cwtl
xchg
loop
int3
push
or
popf
inc
xchg
xor
jge
js
pushf
dec
arpl
and
ret
pop
dec
or
sahf
and
ja
dec
or
fcoml
lar
mov
or
stos
adc
mov
and
xor
or
out
fisttpll
aam
hlt
ret
fsubrl
ljmp
sbb
or
push
cmpl
add
and
or
hlt
clc
test
int3
push
push
and
fstps
push
jae
addr16
push
pop
jnp
lahf
push
sbb
in
ds
push
rclb
fs
cmp
int3
sti
aad
repnz
and
ret
sub
aaa
jnp
cwtl
mov
dec
jo
cwtl
les
inc
mov
fs
lods
pop
xor
sub
daa
clc
mov
mov
push
add
mov
jne
or
jne
lret
mov
mov
dec
push
pop
aaa
loope
push
mov
jae
pusha
insl
pop
and
mov
imul
icebp
xor
rcrb
xchg
sbb
mov
imul
sbb
cmp
outsb
lcall
js
push
es
out
sbb
popa
pushf
dec
jb
rorl
shlb
shr
mov
push
ja
pop
xor
dec
cmc
rorl
loop
fwait
int3
mov
adc
sub
mov
pop
movsl
pop
inc
stos
enter
lds
mov
mov
adc
cmp
add
or
in
movsl
xlat
mov
xchg
and
loope
cli
add
jb
jle
shlb
nop
adc
dec
xor
jno
adc
nop
pop
inc
adc
jl
xor
fisttpl
and
adc
pop
pop
sbb
sbb
jb
xchg
and
movsl
push
dec
js
lds
aam
loopne
push
sbb
stos
pop
loopne
popa
mov
push
add
cmp
pop
mov
add
cmp
mov
dec
push
sbb
pop
scas
into
mov
pusha
sbb
sbb
sbb
dec
add
sahf
sub
pusha
loopw
int
movsb
or
mov
jo
jg
mov
jecxz
push
es
pop
fmul
jmp
jmp
stos
fstpt
cmp
in
mov
lock
stc
xchg
scas
popf
mov
pop
es
mov
add
push
loop
sbb
push
adc
ljmp
js
inc
pop
xchg
cmp
aam
add
test
out
inc
lahf
loope
xchg
mov
lds
pop
push
xor
cmp
add
xor
and
push
sbb
push
mov
xlat
gs
add
mov
mov
cmp
or
push
out
ja
sbb
inc
fsubl
es
pop
sbb
cs
dec
sahf
cmc
outsb
in
mov
lret
dec
xor
ret
imul
add
push
inc
mov
xchg
cmpsb
add
xor
icebp
jg
jno
mov
sahf
lods
add
pusha
mov
loope
xchg
in
outsb
mov
sub
mov
jo
mov
or
dec
mov
cmp
hlt
imul
stos
adc
mov
sub
aas
stos
mov
mov
sti
dec
sbb
mov
fimuls
in
fwait
push
push
stos
mov
pop
insl
pusha
imulb
add
imul
call
and
dec
pop
insl
mov
pop
orl
or
pop
push
das
out
outsl
pusha
adc
xchg
mov
lret
scas
mov
jmp
mov
mov
xchg
jns
and
repz
and
pop
adc
pop
jl
jno
adcb
in
adc
movsl
ja
inc
add
add
cvtps2pi
cmpsb
pop
push
or
scas
xchg
xor
mov
adc
fwait
xchg
mov
sbb
push
xchg
lock
movsb
pop
data16
ror
mov
inc
das
push
jecxz
xchg
int
or
push
mov
lock
mov
jl
xchg
jno
jge
push
out
lahf
cmp
dec
in
lcall
in
pop
jnp
push
mov
jp
inc
pop
cmp
notb
xchg
sbb
dec
jae
jl
out
sub
int3
or
mov
in
pop
jno
dec
arpl
imul
dec
sbb
arpl
sarl
fstps
or
rorb
in
in
xor
fsts
inc
adc
mov
push
sete
outsl
in
xor
lea
sub
cld
pushf
add
in
lock
dec
test
adc
adc
cmp
inc
adc
sti
out
mov
sbb
xchg
or
int
rorl
int3
pop
test
das
loop
pop
in
sbb
xchg
rorb
adc
lret
add
cmp
int
es
pop
and
dec
lret
test
xor
sbb
lds
push
push
mov
loopne
test
ja
in
mov
push
sbb
jp
dec
sub
add
mov
mov
imul
jno
shll
out
cld
and
leave
jb
cltd
in
leave
in
xchg
fs
mov
femms
adc
mov
sbb
dec
in
sarb
cmpl
jle
dec
jmp
in
and
push
ja
cld
mov
xchg
push
push
popf
add
sbb
adc
sti
xlat
in
std
test
fs
imul
mov
mov
pop
rclb
lods
xor
cs
imul
jno
jl
fistpl
daa
mov
popf
jnp
xchg
jb
imul
mov
ret
int3
outsb
incl
test
jno
imul
push
js
movsl
pop
cltd
gs
jmp
iret
or
andl
mov
dec
mov
pop
and
mov
dec
mov
push
fmul
jnp
mov
lret
andl
push
dec
push
sbb
pop
mov
xchg
xchg
and
imul
and
push
test
inc
and
xor
popf
xlat
je
mov
jmp
bound
fs
ja
cld
int3
push
mov
cwtl
mov
xlat
fdivp
lahf
add
fs
movsb
pop
mov
push
hlt
adc
scas
cld
adc
mov
push
daa
mov
push
loopne
jl
jg
es
xchg
outsb
mov
mov
add
imul
pop
mov
cltd
lret
jno
cmp
fisubrl
fwait
dec
push
xchg
lret
scas
popf
mov
jo
test
in
jo
cmpl
fwait
jbe
addr16
insl
pop
mov
stos
les
push
ja
rcrl
fs
xchg
arpl
addr16
xorb
mov
sub
push
roll
int3
lock
outsb
popf
sbb
es
pop
push
out
fs
dec
dec
cmc
jb
lea
push
fcomp
stc
mov
mov
aam
scas
mov
inc
lret
add
rcrb
adc
sub
sub
cmp
outsb
adc
add
push
pop
sahf
es
pushf
sbb
cmp
shr
lds
push
xchg
notb
outsl
mov
test
outsb
sbb
shr
xchg
test
les
decb
mov
in
pop
cld
jo
sub
xchg
in
dec
or
and
in
ret
and
xor
outsl
jo
pop
out
mov
jnp
lcall
mov
lret
xchg
or
push
xchg
sbb
add
mov
mov
sti
push
xchg
push
lods
or
sti
push
mov
sub
lock
ret
inc
xor
loope
js
mov
fcmove
adc
sahf
jl
lcall
inc
xchg
cli
fisttpl
jns
mov
nop
xchg
sbb
jle
pop
mov
inc
push
lods
mov
inc
dec
dec
add
push
mov
movsb
jmp
add
sub
dec
lock
adc
sbb
dec
pop
sbb
adc
nop
cs
imul
pop
dec
jo
call
mov
ljmp
cmp
jmp
pop
xchg
jb
jbe
and
sbb
mov
lret
dec
ljmp
sbb
out
fsts
pop
aaa
mov
frstor
push
mov
shll
jb
arpl
test
cmp
lods
mov
gs
ds
xchg
int3
push
sbb
adc
lock
call
dec
in
adc
in
lret
cmp
fs
xchg
pop
pop
stos
jb
lahf
sbb
loope
sub
jns
outsb
ret
and
dec
insl
cmp
std
xchg
or
cmpsb
popf
addr16
xor
rclb
enter
test
stc
repz
jge
out
pop
mov
jb
xor
call
pop
mov
xchg
shl
mov
cmpsb
lds
out
dec
jmp
mov
shlb
pop
add
scas
les
pushf
mov
lcall
out
or
push
push
adc
sbb
std
into
jo
pop
mov
movsb
scas
es
or
mov
adc
mov
mov
jne
rorl
or
mov
cwtl
xchg
dec
cmp
cs
push
push
fildll
and
cltd
loopne
cmpsl
mov
push
mov
mov
sub
js
mov
es
jo
cmp
mov
adc
push
ss
or
mov
sbb
inc
mov
cmp
xor
ds
mov
sahf
imul
or
dec
inc
push
adc
iret
add
xchg
cmp
sub
push
fwait
ret
push
mov
mov
mov
pop
popf
jp
cmp
sub
popa
push
inc
mov
jae
and
push
andl
lahf
movsl
jb
push
add
test
and
dec
sahf
push
notl
adc
testb
and
stc
sub
inc
clc
nop
movsl
inc
sub
insl
insb
aaa
sub
mul
in
and
lahf
dec
push
push
sbbb
adc
leave
mov
or
pusha
rcr
dec
ljmp
xchg
push
jno
adc
pop
xchg
adc
sbb
pop
shll
push
shr
xchg
adc
inc
adc
addr16
add
filds
fs
push
fxch
xchg
adc
adc
fwait
jno
in
test
clc
mov
push
js
cmpsl
iret
pop
outsl
sets
fisttps
out
pop
cltd
and
push
and
movsl
xchg
rorl
xchg
pop
test
imul
std
dec
mov
mov
arpl
xor
ja
iret
pop
push
fcompl
mov
test
or
dec
popa
jns
ret
and
test
fwait
mov
sbb
or
rolb
jb
push
test
inc
mov
pop
fwait
stos
imul
nop
dec
fistps
dec
push
cmc
and
xchg
sarl
or
movsl
push
das
scas
push
or
mov
out
mov
mov
sbb
xor
dec
in
and
mov
pop
inc
gs
and
xchg
xchg
je
fistpll
outsb
cltd
rcr
das
popf
in
and
mov
lret
fs
or
mov
rcr
out
xor
pushf
imul
popf
adc
mov
push
andb
xchg
dec
cmp
fwait
xor
pop
pop
cmp
mov
movsl
sbb
ss
cmpsl
ss
adc
fcomps
mov
push
ja
cmp
nop
push
mov
fwait
or
call
int3
cmp
cmp
cltd
jo
mov
jge
ficompl
xchg
or
loopne
xchg
mov
es
addr16
stos
cmp
loop
int
xchg
pop
insl
into
cld
add
lcall
adc
pop
jl
pop
adc
xor
inc
xchg
pop
add
push
mov
lcall
pop
pusha
mov
jno
gs
push
jge
xor
mov
sbb
xor
inc
icebp
repnz
pusha
std
adc
push
inc
mov
ss
cmpsb
or
and
mov
dec
test
xor
add
out
adc
std
pop
adc
int
push
push
pop
cmp
stos
jg
jae
or
stos
repnz
call
lahf
xchg
scas
or
in
outsb
insw
ret
in
mov
mov
movsl
fnstenv
and
dec
pusha
js
sbb
gs
pop
mov
and
stos
lret
mov
gs
inc
in
dec
xchg
sbb
dec
xor
mull
pop
mov
fninit
mov
out
fnsave
pushf
mov
repnz
jo
daa
sub
push
and
inc
in
stc
jmp
shrl
pop
jno
fldenv
popf
cmp
inc
xchg
filds
clc
xchg
ljmp
mov
stos
or
fmuls
or
adc
mov
mov
mov
and
sbb
in
dec
or
aaa
xchg
add
dec
push
push
push
cmp
jb
mov
jno
and
loop
fst
mov
int3
push
gs
scas
ret
ss
pop
fs
insl
outsl
or
outsl
sub
xchg
hlt
test
mov
xchg
mov
mov
xchg
lahf
mov
sbb
stos
mov
mov
addl
in
cmp
jl
test
xchg
dec
sbb
mov
sbb
xchg
inc
loop
lea
jmp
dec
xchg
outsl
loope
push
cmpsl
mulw
ljmp
into
pop
sahf
mov
and
hlt
stos
lods
dec
cli
in
ret
push
pop
mov
mov
in
adc
sbb
mov
repnz
mov
lock
hlt
push
rcrb
rcr
nop
dec
or
lcall
sub
jo
mov
pusha
sbb
mov
push
sbb
sbb
mov
jecxz
iret
loopne
in
dec
xchg
imul
mov
push
sub
pop
add
push
gs
cmc
ljmp
mov
jb
ficompl
mov
xchg
mov
lret
ljmp
aad
inc
shr
xchg
jno
inc
push
out
inc
pop
jne
adc
xor
mov
es
lods
mov
fwait
push
jmp
push
sarl
stos
and
sub
lods
mov
pop
sbb
mov
test
repnz
sahf
cltd
jnp
out
sbb
lods
mov
in
pop
jo
dec
and
push
and
cvtps2pi
cmpsl
pusha
pop
int
outsl
repnz
mov
enter
push
cmpl
cmpsl
pop
pop
lret
pop
sahf
loopne
div
addr16
shrb
cmp
inc
gs
inc
cmpsb
std
or
call
imul
fs
bnd
dec
sti
mov
fisubrs
dec
cltd
negl
out
bound
hlt
xor
sub
wrmsr
cmp
or
mov
dec
mov
cmp
adc
std
cld
xchg
ljmp
jmp
mov
jmp
push
push
mov
jo
inc
add
ret
fisttpl
jns
fidivl
loope
outsb
insl
or
aad
fsubrl
rclb
dec
filds
call
mov
loope
jo
inc
xchg
sub
movsb
or
pop
inc
adc
cmpsb
jle
xor
loop
dec
scas
popa
out
cmp
mov
subb
sbb
outsl
cmpsb
lret
call
int
stos
sbb
stos
fimull
rclb
xchg
in
mov
loope
xor
mulb
outsb
mov
and
lock
xor
loopne
push
pop
or
inc
or
dec
push
imul
jb
aam
pop
dec
fwait
fs
sbb
pushf
out
aaa
mov
int3
movl
and
adc
xchg
rol
imul
pusha
in
leave
mov
ficoml
dec
subb
jno
insl
leave
sub
adc
outsl
shll
cwtl
cmpsl
push
int
add
jno
or
inc
or
ret
or
sbb
dec
mov
int3
xchg
jo
sbb
movsl
mov
es
test
out
ret
sbbb
shll
sub
cwtl
repz
outsb
cmp
pop
and
dec
test
jb
lock
popa
nop
sub
das
xchg
xor
andb
ljmp
out
bound
mov
xor
jp
movsl
imul
fisubs
jns
pop
lock
mov
in
mov
push
pop
pop
lods
pop
pop
pop
inc
sub
out
popa
out
stos
je
shrl
getsec
adc
test
shl
in
pop
sbb
repz
push
in
insl
mov
test
xlat
in
test
out
sbb
lret
in
es
icebp
sar
rcl
xlat
mov
cltd
insl
stos
jp
push
jo
imul
mov
jl
mov
add
pop
mov
sub
and
imul
fidivs
ror
add
xorb
mov
mov
notl
jl
insl
imul
insl
stos
xorb
clc
adc
cmp
dec
sbb
dec
mov
cltd
ja
cmp
adc
sub
into
inc
cmc
adc
in
jns
cmp
in
aaa
fmull
push
dec
cltd
ret
cmp
ds
or
or
negl
and
jge
clc
xchg
rorb
jg
jo
push
pop
pop
push
jno
jb
sarb
jo
xchg
rolb
and
lahf
aas
pusha
jo
cltd
dec
mov
movsl
jbe
cmp
loope
in
pop
lcall
push
mov
cmc
lea
mov
mov
jo
in
aad
out
js
inc
inc
adcl
imul
in
jmp
push
cli
pop
daa
int
decb
aaa
mov
imul
xchg
lods
xor
in
sbb
sbb
ja
and
stos
clc
sbb
pop
sub
movsb
mov
dec
inc
inc
nop
shrb
cmp
add
xchg
dec
or
in
mov
loop
lods
adc
es
cmp
xor
or
cmpsl
or
std
sub
pop
daa
testl
add
cmp
mov
sbb
loope
pop
jbe
xor
push
cld
dec
push
push
int
cmp
test
nop
sarb
nop
es
push
mov
int3
and
adc
and
cld
and
sbb
movsb
fdivp
lds
sbb
or
lret
adc
mov
dec
movsl
push
popa
aas
pop
mov
iret
or
dec
lods
in
pop
cmp
push
or
dec
fucomip
inc
pushw
pop
out
loope
cli
cld
xchg
in
or
stos
jno
mov
sahf
movsl
xor
pop
icebp
mov
xchg
cmp
cld
mov
pop
fistl
std
dec
stos
int3
les
gs
pop
mov
sub
mov
in
xchg
negb
or
ficomps
jae
orl
sub
popa
faddl
push
cs
and
sub
cmpsb
imul
pop
jo
call
cld
std
ss
ror
andl
dec
insl
pop
and
dec
add
mov
leave
pop
mov
insl
jle
xor
les
adc
inc
adc
repnz
outsb
pop
mov
inc
aaa
mov
pop
inc
jecxz
jp
adcb
ja
jle
dec
mov
dec
cli
xchg
lahf
fistl
ljmp
in
fdivl
or
leave
mov
repnz
mov
sbb
xchg
mov
jge
mov
call
into
lods
hlt
xchg
test
imul
or
in
sti
addr16
aam
shrb
imul
jbe
mov
pop
mov
dec
cmp
mov
mov
mov
movsl
popf
outsl
xchg
adcl
mov
out
pop
xchg
daa
mul
or
fsubl
clc
lock
ficomps
sub
mov
and
fwait
jp
push
jmp
out
mov
lahf
mov
xorb
mov
push
push
add
loop
jge
int
gs
xor
cli
popa
cltd
dec
out
insl
cmpsl
div
mov
in
iret
fldl
test
or
push
test
lea
mov
fsubs
fildll
mov
ret
sbb
inc
mov
loopne
push
jnp
mov
int3
cld
insl
sub
dec
fildll
stc
fiadds
es
or
lret
fwait
push
cmp
mov
sbb
adc
sub
sarl
jl
pop
repnz
rcrl
js
aaa
add
mov
sub
sbb
jb
jl
outsl
xlat
shlb
mov
cltd
jo
mov
int3
jb
stos
imul
ret
stos
insb
push
push
aas
call
lds
insl
mov
ret
push
test
push
clc
lods
xchg
stos
in
sbb
dec
jg
dec
mov
add
sub
mov
sbb
enter
test
lahf
jnp
lcall
mov
dec
cltd
arpl
mov
mov
add
rorl
iret
lahf
xchg
lret
mov
mov
shl
mov
mov
insl
fisubrl
insl
shll
in
stos
in
addl
mov
push
inc
roll
cmpsb
or
inc
insl
add
movsb
leave
inc
jmp
pop
jns
mov
cmp
movsl
push
cmp
lret
lcall
mov
int3
inc
inc
cmpsl
std
outsb
sub
sbb
dec
dec
movsl
inc
testl
jnp
cmp
or
pop
or
sub
dec
int3
or
decl
xchg
lods
adc
adc
movsl
inc
lret
insl
fnsave
in
lcall
add
into
cmpsb
ljmp
push
fisubl
pop
jge
pushf
mov
lock
fcoml
mov
sub
inc
nop
dec
inc
fsubrl
adc
sub
movsl
mov
cli
cs
repnz
lods
mov
sbb
stos
sbb
dec
int3
sub
xchg
fstpl
popf
jbe
push
fsubs
pop
test
pop
fistl
sbb
sbb
imul
sarl
scas
pop
jno
cmpl
int3
cmp
out
sub
sub
inc
lret
pop
shll
pop
loope
outsb
int
add
add
pop
jle
hlt
icebp
decb
mov
dec
xlat
shr
in
sub
test
stc
mov
xchg
imul
and
pop
imul
dec
and
test
imul
sbb
std
mov
popf
cli
loope
xor
mov
outsb
or
jle
xchg
adc
jo
gs
jge
lods
pop
movsb
stos
loope
insl
test
cmpsb
cmpsl
cltd
bound
das
push
fcmovne
pop
dec
out
out
sbb
mov
or
sbb
push
pop
jnp
lods
inc
xchg
adc
push
ljmp
out
cld
loopne
xchg
dec
mov
lock
mov
out
sahf
fnsetpm(287
pop
dec
scas
nop
ficomps
dec
push
fcoms
aaa
mov
and
mov
popl
in
outsl
cli
outsb
sbbb
arpl
int3
addr16
mov
cmp
popf
or
mov
mov
or
add
ljmp
and
xchg
mov
inc
dec
outsl
sub
orb
or
pop
sbb
xlat
xchg
lods
lcall
jo
mov
push
aas
push
xor
xlat
out
pusha
sbb
xor
test
lea
inc
pusha
mov
lea
jo
mov
les
sahf
push
int3
shr
test
fwait
or
push
lods
int3
jl
outsb
xor
addr16
mov
inc
aas
or
inc
push
lret
adc
xchg
cmp
bound
fiaddl
mov
and
jp
mov
sub
and
adc
sbb
imul
imul
outsb
cmp
push
gs
mov
rolb
xbegin
adc
jo
dec
cmp
ja
mov
add
sbb
pusha
ja
push
mov
cmpsl
mov
pop
imul
mov
lods
int3
sub
mov
fsubrs
adc
insl
adc
or
popa
dec
mov
cmp
insl
cmp
ljmp
in
aam
gs
sub
dec
adc
push
scas
shlb
jo
cs
loop
lahf
mov
adc
sbb
jge
icebp
sub
sahf
sbb
cs
cmpsb
addr16
dec
stos
adc
mov
adc
stos
out
mov
sub
ljmp
loope
jmp
mov
jne
mov
lret
mov
fldenv
es
and
mov
xchg
ljmp
jl
outsl
push
cmc
sbb
negl
in
inc
test
iret
lods
dec
outsb
mov
push
pop
mov
inc
scas
lret
add
cltd
cltd
add
jge
and
adc
loop
mov
loopne
mov
hlt
push
out
lcall
icebp
bound
or
sbb
xchg
int3
out
std
dec
lret
mov
ljmp
cmp
mov
ljmp
xlat
dec
jl
push
mov
cmpsb
imul
mov
ds
adc
and
cwtl
adc
out
pop
popl
std
stos
pop
loope
or
sbb
aaa
and
lods
stc
sbb
push
sbb
dec
adc
ficomps
jge
popa
mov
movsl
mov
enter
and
popf
jmp
mov
in
jno
in
int3
cmp
test
lcall
adc
xchg
cmpsb
pop
mov
ret
push
or
sub
jb
push
cmp
push
mov
push
int3
divl
push
pop
sbb
dec
sbb
dec
add
fwait
and
pop
pop
and
jne
sbb
icebp
add
mov
and
lahf
inc
cmp
adc
movsl
dec
daa
lock
shrb
push
shl
sub
inc
sbb
push
into
push
push
movsb
mov
es
pmaxub
lods
mov
jl
imull
jo
or
lock
sub
mov
daa
ljmp
mov
bound
xor
cwtl
mov
push
mov
inc
cmpsb
sub
das
sub
pushf
cmpsl
mov
repz
mov
ljmp
sbb
inc
lock
or
int3
pop
aam
imul
in
adc
mov
or
mov
mov
mov
in
mov
jmp
pop
jno
lea
ss
ret
add
outsl
or
int
push
xchg
sub
insl
and
out
call
or
sahf
hlt
add
outsb
and
pop
cli
push
and
jge
mov
pusha
sahf
aam
loopne
push
jl
fs
outsl
or
dec
imul
movsb
insl
cs
shlb
aam
in
loop
mov
and
mov
dec
insb
push
sbb
jo
les
loope
pop
jo
sbb
fisubrs
sub
mov
jge
adc
lock
xorl
stos
sub
mov
data16
imul
push
fnstsw
dec
push
mov
nop
adc
insl
jns
es
sbb
aaa
stos
stos
inc
in
mov
dec
fbld
sbb
ljmp
hlt
pop
das
pop
push
rolb
xchg
test
push
repnz
ret
mov
lods
insb
pop
or
pop
pop
push
jb
jmp
mov
dec
rcrb
dec
mov
ret
mov
sbb
orb
bnd
addr16
fwait
insb
in
pop
popf
lret
pop
dec
repnz
dec
hlt
jnp
inc
mov
sbb
outsb
call
adc
push
ret
bswap
xchg
pop
push
pop
inc
or
mov
leave
mov
mov
loop
addr16
mov
dec
je
and
nop
arpl
sub
aam
pop
dec
mov
jb
add
sub
pop
popf
out
call
and
mov
lea
ret
push
sub
outsb
loopne
adc
mov
pop
shrb
sahf
test
mov
xlat
fldcw
xchg
sahf
mov
mov
in
jno
or
dec
insl
fimull
test
sbb
dec
and
bound
movsl
imul
lret
jmp
ljmp
mov
sub
ss
or
ficomps
pop
in
ss
xchg
cmpl
pop
mov
push
mov
xorb
popa
scas
dec
xchg
mov
or
dec
pushf
xor
mov
adc
pop
jb
lods
pop
push
jno
and
and
aam
std
data16
rorb
add
outsl
jb
popa
push
xchg
shr
adc
xor
sub
xor
jo
xchg
inc
call
mov
loop
stos
jns
faddp
pushf
xor
pop
ja
pop
les
popa
dec
or
inc
adc
dec
dec
imul
cld
cmpl
testb
out
jno
sub
mov
in
sbb
cmp
jmp
add
scas
push
bound
cld
xor
sub
imul
inc
inc
lea
test
inc
jge
mov
jb
mov
jg
cmc
add
orb
push
mov
lahf
adc
mov
xchg
push
add
cmp
jnp
les
sahf
mov
andb
mov
insl
dec
pop
lods
xchg
in
mov
add
inc
sub
mov
cmp
add
lods
inc
shrl
and
jo
aad
pusha
les
mov
rdpmc
adc
mov
test
or
xchg
push
or
cmpsl
and
inc
mov
fmul
dec
push
and
sub
jno
or
popf
sbb
mov
pop
outsb
pop
fstpl
inc
cs
in
cmc
out
lock
lahf
insb
aam
mov
popa
movsb
pop
lods
imul
add
mov
addr16
out
jb
push
outsb
aam
and
adc
xchg
lcall
loop
pop
lcall
sbb
xor
mov
xchg
push
sahf
adc
std
sub
sbb
enter
pusha
sahf
mov
pop
dec
mov
xor
push
outsl
jo
sti
or
mov
mov
inc
popf
test
das
jb
out
movb
in
pop
add
push
lods
lret
enter
dec
sbb
push
mov
mov
lahf
test
adc
mov
icebp
das
xchg
repz
jl
mov
mov
xor
mov
dec
sahf
dec
aad
mov
call
popa
cmpsb
xchg
or
mov
pop
cltd
js
loope
xchg
ret
cli
pop
cwtl
push
adc
mov
and
cld
or
sarb
jecxz
out
mov
ljmp
push
sbb
sbb
daa
jno
push
jne
or
xor
inc
fisttps
ret
push
sub
and
inc
test
mov
and
pop
in
pop
cmp
or
sarl
jmp
pop
sbb
gs
sub
shrl
xchg
neg
fmulp
call
ljmp
lock
jae
dec
sbb
int
and
outsb
push
lods
jl
add
add
and
mov
inc
push
fisttpll
mov
nop
je
and
adc
cmp
movsl
push
push
jno
lods
jp
out
pop
jbe
adc
cwtl
out
push
in
pop
or
das
data16
lret
mov
in
out
xlat
fstpl
fldt
jnp
out
out
insb
orb
xchg
push
negb
cwtl
jae
sbb
xchg
cmp
cmp
in
pop
lcall
xchg
ljmp
pop
jns
sub
imul
es
jmp
hlt
sub
cmp
aas
cmp
pop
jmp
jb
fcomip
outsb
lock
sbb
pushf
adc
sbb
shll
jl
sub
sbb
rolb
mov
adc
jle
imul
push
jbe
jle
stos
cmpsb
out
sbb
cmp
imul
add
push
add
sbb
xor
jecxz
clc
scas
cs
sub
pop
inc
cld
inc
sub
jecxz
movsl
mov
or
loope
inc
sbb
cltd
fimull
add
mov
shrl
lods
or
lods
adc
inc
lea
loope
mov
inc
int3
adc
mov
fildl
daa
shlb
js
push
out
push
inc
mov
sbb
sbb
fsubl
mov
adc
lahf
mov
shll
pop
mov
xchg
ret
mov
dec
pop
add
lea
mov
lcall
and
inc
mov
sbb
xor
divl
lcall
and
insl
or
fs
jno
xlat
add
int3
jge
inc
mov
movsl
push
pop
loopne
nop
push
in
mov
in
and
or
sbb
sbb
out
pop
push
inc
mov
jl
in
push
cs
mov
cld
add
jge
shrl
mov
sarb
push
jmp
fidivrl
mov
std
pop
lock
pop
and
cmp
push
lahf
in
inc
ja
sbbl
and
sub
les
mov
dec
add
sub
fistpll
inc
cli
ficompl
mov
test
enter
mov
pop
ss
idivl
je
cmp
or
mov
mov
aaa
lods
ljmp
mov
xchg
xlat
fadd
jmp
inc
fdivrs
adc
pop
pop
iret
mov
push
icebp
pop
loope
push
mov
jmp
push
mov
sbb
pop
leave
ds
addr16
rolb
loope
cmpsl
push
outsl
loope
mov
movsb
seto
rcll
rcrl
mov
sbb
push
cmpsl
adc
scas
dec
jno
inc
shlb
push
jo
lock
pop
sub
jle
cld
fmul
mov
or
popf
sub
lods
adc
ret
jno
in
and
test
sbb
xchg
pop
push
pop
pusha
push
mov
sub
jp
or
and
pop
pushf
pop
and
cmpsb
dec
test
imul
adc
and
jo
ljmp
and
fs
jno
inc
jg
and
xchg
popa
jmp
mov
jo
andl
xlat
mov
cwtl
push
jge
mov
fstps
or
lods
lcall
push
test
jp
jo
mov
ss
outsl
loop
lea
ds
testl
call
adc
mov
mov
dec
lods
imul
push
gs
pop
fsubrl
xor
mov
stos
jg
push
mov
mov
das
and
pop
or
sbb
pop
add
nop
sbb
scas
mov
mov
lods
dec
or
lea
aas
addr16
loopne
dec
mov
adc
push
push
outsb
fisttps
in
pop
mov
mov
jge
and
les
and
imul
out
mov
hlt
cltd
mov
xor
sub
lods
lret
cld
or
clc
or
imul
ds
std
add
and
mov
mov
add
les
xchg
mov
jge
pop
or
mov
and
pop
lcall
xchg
aam
mov
mov
data16
and
mov
movsb
and
jo
push
cld
test
dec
mov
pop
and
fistps
nop
pushf
addr16
bnd
adc
frstor
push
dec
sub
jns
fildl
filds
sbb
test
or
cmp
add
jge
mov
and
lret
mov
mov
loopne
sbb
inc
fbld
mov
lds
in
rcrl
sub
mov
lods
mov
outsb
mov
fidivl
sub
cmp
iret
mov
mov
movsl
push
mov
pop
jmp
inc
and
setl
inc
loope
mov
sub
adc
mov
clc
sub
push
add
dec
jns
mov
push
mov
orl
push
dec
add
nop
mov
sbb
call
test
sbb
insb
or
mov
sbb
adc
mov
push
inc
adc
mov
icebp
inc
xor
mov
jb
lock
or
gs
jge
add
jne
inc
cmp
lock
push
shll
pushf
push
pop
cmpsl
es
rclb
inc
push
pop
mov
mov
fisubrl
faddl
lods
or
inc
mov
int3
jl
cmpsl
dec
xchg
fwait
daa
mov
imulb
aas
sbb
mov
push
pop
xchg
cmp
jg
add
outsb
mov
inc
pop
pop
imul
cmp
idivl
out
dec
push
xor
out
cltd
lret
repnz
pop
mov
outsl
push
cmpsb
out
mov
addr16
sub
loopne
dec
cmp
cmp
insb
push
cwtl
sbb
ljmp
push
out
lahf
lret
pop
push
mov
fs
fidivl
cmp
mov
ret
push
pushl
fwait
sbb
shll
xchg
cmp
popa
inc
jbe
sbb
mov
rolb
cmpsb
cmc
sbb
loope
mov
dec
mov
inc
out
shll
xor
jb
out
repnz
push
lea
insl
mov
call
pop
scas
fiadds
xor
fcompl
popf
lods
movsb
push
mov
cmp
lods
xor
outsl
lock
aaa
in
inc
pop
push
outsb
andb
or
inc
in
fsubrl
pop
or
mov
pusha
pop
sub
mov
jo
and
ljmp
fstps
jg
mov
bound
imul
xchg
jno
pop
out
or
arpl
mov
dec
push
inc
and
inc
in
sbb
mov
cld
jge
or
sub
in
adc
push
sbb
dec
dec
or
dec
lock
gs
sbb
es
push
mov
or
into
dec
icebp
data16
or
cli
mov
adc
adc
sub
in
sub
adc
out
push
push
sbb
pusha
shrl
icebp
lds
xor
mov
jno
sub
xor
das
sarb
in
adc
movnti
stos
daa
stc
shlb
and
fdivrl
xchg
popf
push
in
mov
and
mov
mov
loopne
icebp
xor
or
add
cli
lahf
add
mov
daa
daa
outsl
lcall
xor
in
pop
xchg
push
fisubrl
loope
int3
mov
out
scas
pushf
stos
push
addl
in
mov
and
and
iret
sbb
mov
pop
test
in
repnz
shlb
clc
or
insl
or
pop
xchg
lods
mov
jb
aad
mov
pop
lods
repnz
in
nop
in
xor
jb
test
bound
cmp
jmp
lods
mov
cltd
push
jb
pop
shrb
lret
push
xor
jae
aad
jp
in
popa
call
dec
pushw
or
inc
dec
dec
mov
aas
sub
xor
mov
bound
jno
pushf
jns
sub
adc
jo
mov
repnz
pop
incl
and
insl
sbb
adc
ret
mov
cld
lods
push
ja
insl
pop
xchg
mov
add
lcall
dec
out
mov
popf
enter
push
icebp
stos
out
jp
cmp
test
mov
mov
scas
in
sub
mov
ja
test
jo
in
aad
inc
xor
fs
sub
cmpsb
les
mov
mov
mov
dec
outsb
fsubs
jo
sub
insl
lea
or
mov
pop
cs
dec
add
xchg
add
repnz
cld
call
mov
jb
scas
dec
jp
sbb
inc
xlat
inc
sti
dec
fwait
out
xchg
jno
sub
dec
adc
or
pop
ljmp
test
jle
cmp
insl
fildll
or
outsb
mov
call
jp
ret
inc
dec
xor
ljmp
repnz
jb
paddusb
jle
or
sti
mov
fucomip
mov
adc
xchg
pop
scas
subl
lods
lock
lret
mov
mov
add
repnz
mov
iret
adc
sub
pushf
pop
mov
mov
xchg
sub
cmp
pop
shrb
repnz
daa
mov
cmp
xor
popa
mov
test
popf
sbb
lret
mov
icebp
jg
and
nop
nop
pusha
push
popa
repnz
outsl
push
pop
arpl
popf
scas
pop
fiadds
mov
pushf
adc
aad
scas
and
ficoms
xchg
jmp
insl
cltd
mov
dec
pushf
mov
mov
adc
aas
add
or
shl
stc
arpl
repnz
cmp
and
dec
or
cmp
lret
or
dec
mov
add
push
es
inc
loop
test
sbb
add
push
or
outsb
jne
daa
cmp
insl
push
fs
jne
lods
fcoms
sbbb
cmpsb
repnz
add
aam
adc
xchg
jb
jg
xor
inc
lock
inc
cmc
fstpl
sbb
mov
add
sub
or
hlt
imulb
mov
sbbl
sub
repz
lea
outsb
jmp
ret
test
test
xor
or
pop
dec
pop
sub
shl
inc
arpl
shlb
push
mov
sahf
mov
inc
jb
push
mov
pop
xchg
in
pusha
cltd
cmp
call
arpl
popa
jecxz
dec
mov
and
mov
shlb
push
xchg
ret
shl
xchg
xchg
iret
jne
stos
xor
push
pop
enter
adc
or
push
imul
sub
sub
mov
test
mov
mov
fnstcw
in
sbb
sub
inc
jae
cltd
jmp
lcall
rcrb
pushf
mov
sbb
leave
mov
mov
mov
dec
push
movsl
push
push
xor
inc
pushf
mov
in
mov
stos
jo
xchg
mov
push
push
xchg
add
push
or
test
or
pop
jge
and
stos
loop
pop
outsl
insl
dec
inc
or
dec
mov
or
sbb
jb
push
pop
decb
rolb
rolb
lcall
sti
sahf
les
xor
stos
imul
sarb
popa
in
popf
jno
in
or
inc
bound
mov
dec
mov
pop
fs
jo
into
jmp
popf
jbe
xor
add
fbstp
imul
mov
rorb
pop
fs
movsb
sbb
stc
push
test
movsl
cmp
popa
cmp
jo
bound
pop
stc
jnp
xor
filds
rcrl
push
fwait
or
sub
pop
pusha
mov
outsl
push
insl
cmpsl
sub
imul
or
xlat
jo
dec
or
xchg
loopne
imul
stos
dec
imul
in
fstps
into
push
mov
mov
dec
pushf
jne
outsl
cmpsb
sub
rolb
dec
jecxz
dec
push
pop
cmp
cmpsb
int3
mov
cli
mov
adc
shlb
dec
add
sub
sbb
add
mov
cmpsb
in
imul
push
adc
bound
dec
or
and
or
or
inc
dec
adc
dec
cmpsb
or
int3
xorps
sbb
pop
call
js
insl
adc
packsswb
fstpl
add
pop
adc
mov
lea
out
sbb
add
push
mov
pusha
repnz
les
push
dec
cmp
fstpt
jecxz
xorl
cmpsl
int3
push
add
or
gs
in
cmpl
and
call
repz
jnp
adc
imul
pop
pop
outsl
adc
ss
or
adc
inc
sti
mov
cmp
out
imul
sub
dec
mov
dec
sub
and
jbe
sub
sbbb
cmpsl
jno
daa
push
stos
fiaddl
loope
pop
movsl
push
mov
hlt
push
sbbl
and
lods
sbb
lods
fbstp
inc
ret
push
outsb
sbb
xchg
cmp
lods
dec
xchg
ja
or
mov
pop
shrl
fists
lds
mov
pop
ljmp
mov
lock
jns
scas
dec
and
cmp
iret
movsl
inc
mull
adc
testb
ss
cmp
jo
xor
sti
inc
jo
sbb
aam
arpl
xor
mov
cmp
aad
push
data16
fistps
push
dec
js
ret
cmp
jno
movsl
jo
jo
sub
cmp
adc
push
jne
add
sub
data16
rep
ret
jge
lock
cmp
aaa
xchg
adc
lea
jmp
add
or
popf
mov
adc
imul
and
push
sbb
movsb
inc
std
stos
scas
neg
or
out
sub
lods
ljmp
in
pop
jbe
clc
loop
out
or
movsl
lret
dec
mov
sahf
jmp
inc
ss
mov
pop
push
jb
cmp
data16
adc
iret
pop
mov
sub
aaa
lahf
loopne
jb
sub
fcoml
incb
xchg
jns
adc
frstor
mov
insl
cmp
dec
in
iret
sbb
dec
ret
loope
cltd
fwait
imul
pop
and
call
aam
pop
ficompl
push
sbb
xlat
xor
push
out
mov
and
or
bound
aas
sbbl
pop
push
fdivl
jbe
inc
ss
mull
jbe
xchg
pop
xor
jmp
lahf
mov
dec
ja
mov
jo
sahf
mov
or
jb
jne
push
xchg
test
jmp
call
add
push
inc
cmp
sarb
adc
stos
add
inc
push
sti
or
sbb
sbb
imul
push
cmpsb
cmp
push
inc
dec
jnp
add
jne
ficomps
inc
sbb
outsb
dec
bound
sahf
push
push
and
mov
inc
and
lcall
push
movsl
or
popf
fs
dec
dec
fistpl
loop
cmp
hlt
sbb
loopne
push
jb
dec
and
loopne
add
iret
dec
jle
stos
xchg
cmp
jbe
sbb
cld
pop
inc
repnz
mov
dec
or
pusha
inc
xchg
aas
sbb
dec
out
xlat
retw
xor
xor
sub
cmpl
movsl
pop
scas
and
ficoml
adc
and
dec
sub
xchg
cld
je
pop
jo
mov
int3
loope
sbb
rcrl
out
xor
mov
add
in
sbb
jmp
ss
fisubrl
xchg
out
xor
rorb
ja
mov
mov
pop
mov
sub
decb
lea
and
mov
dec
pop
mov
pop
mov
and
rsm
jg
sarb
mov
and
movsl
xchg
aam
push
ret
insl
jb
push
adc
mov
inc
fcmove
mov
jne
and
mov
imul
lcall
ret
inc
aaa
lods
push
adc
and
popa
je
ds
pop
pushf
inc
int
jnp
xchg
dec
sbb
outsb
or
out
fmull
xchg
in
js
fadds
orb
es
jbe
push
mov
pop
dec
subb
ret
pop
mov
aaa
dec
mov
push
dec
and
fnsave
es
lods
add
imul
add
xchg
add
inc
mov
clc
jp
add
mov
mov
aaa
xor
dec
adc
pop
mov
pop
and
inc
xchg
loopne
outsb
imul
jmp
dec
lahf
mov
sbb
mov
fldenv
jo
jle
xor
and
rcrl
sbb
jae
ja
push
or
jp
mov
subb
popf
and
out
loopne
adc
xchg
inc
mov
mov
jmp
insl
loope
adc
pushf
mov
mov
sub
outsb
xchg
mov
out
adc
mov
inc
adc
sbb
push
stc
sub
mov
ret
adc
loop
aad
sbb
mov
andl
scas
and
in
fmull
lea
pop
test
cmp
insl
lock
call
xor
xchg
aas
xchg
outsl
pop
add
cmp
mov
dec
les
jb
cmpsb
push
test
mov
sbb
lahf
outsb
push
gs
inc
mov
or
xchg
and
cli
add
in
xlat
hlt
negl
sub
movsb
ret
imul
fs
xchg
std
loopne
xorl
inc
fmul
out
test
jo
ret
push
add
pop
or
mov
js
insl
push
call
in
lcall
in
mov
fisubrs
sbb
rol
jo
cmpsl
stos
add
in
movsb
in
stos
pop
iret
clc
pop
dec
movsb
push
stos
test
call
in
lods
in
mov
xchg
popf
push
or
cli
pusha
xchg
stos
out
stos
insl
xlat
loopne
imul
out
test
jge
jno
push
mov
test
scas
stos
dec
pop
mov
pop
icebp
stos
fs
in
lock
push
add
testb
mov
in
mov
popa
sub
in
and
cmp
jno
dec
jmp
and
inc
sbb
sub
icebp
stos
and
xchg
mov
lds
call
mov
sbb
push
adc
sbb
in
cwtl
arpl
fsubs
mov
mov
sbb
gs
stos
dec
gs
push
cltd
push
or
mov
lcall
dec
push
nop
pop
fdivs
push
data16
jo
push
cmc
in
mov
xchg
stos
push
adc
sbb
clc
loope
shlb
mov
mov
ja
push
adc
sahf
bound
mov
push
inc
mov
cld
out
ss
cmpsl
or
js
test
orl
test
adc
sbb
rorb
movsl
sbb
popf
mov
xchg
push
addr16
cmp
pop
inc
or
fsqrt
jo
ret
add
stos
and
cltd
xchg
sbb
and
lret
add
adc
xor
add
or
jo
pusha
push
add
push
push
sbb
mov
jo
insl
adc
test
lret
jo
lods
xor
in
fsubl
into
es
xchg
mov
xor
sbb
mov
repnz
add
rcrb
jge
mov
sbb
sbb
mov
aas
stos
and
xchg
jl
scas
sbbb
mov
adc
loopne
repnz
loopne
inc
mov
or
mov
adc
and
xor
push
fwait
xor
add
jno
xchg
shrb
jbe
insb
and
push
sbb
ret
push
pop
jbe
or
mov
insl
push
daa
mov
jb
jnp
repz
imul
or
in
mov
dec
sbb
ficompl
insb
mov
cmpsb
dec
test
loop
mov
cmpsb
push
add
fs
inc
pop
shll
xchg
sbb
adc
inc
mov
gs
in
add
push
sbb
mov
imul
mov
inc
push
dec
arpl
pop
ret
mov
push
mov
jbe
ret
movsl
repz
xchg
mov
iret
in
cmp
sub
add
jno
pop
popf
sub
jo
cmpsb
and
pushf
sbb
arpl
sub
pop
pop
in
in
sub
jnp
les
in
xor
es
cmp
imul
loop
pop
xchg
int3
or
mov
adc
ss
and
movsl
mov
pop
mov
xor
je
mov
shll
es
cmp
fdivr
jmp
xor
pop
mov
movsl
ss
test
mov
and
pop
sti
aad
pop
hlt
scas
jo
pop
pusha
cmpsl
sbb
mov
xor
xor
mov
repz
jmp
jno
pop
or
push
dec
aaa
add
stos
mov
clc
pushf
fs
lret
outsb
testl
jmp
push
scas
gs
jmp
notl
lock
in
int3
fs
fs
pop
pusha
mov
cmp
fisubrs
sahf
enter
add
call
gs
hlt
or
ljmp
mov
sbb
ficoms
push
xchg
xchg
pop
mov
mov
repz
aas
pop
xorb
dec
cld
repnz
subb
ss
inc
sbb
jmp
cli
jmp
mov
lret
xchg
pop
rcrl
mov
sbb
das
imul
and
mov
shl
sbb
jb
sahf
loopne
sbb
mov
jo
xchg
push
lahf
mov
sub
pop
iret
sub
daa
add
leave
test
loope
jmp
arpl
push
lahf
inc
test
sub
loop
sbb
fstps
cmpsb
hlt
xor
add
fnsave
filds
je
lahf
xchg
push
xchg
or
test
sti
int3
and
pop
sarb
xor
scas
imul
icebp
and
repnz
and
mov
test
ja
icebp
out
adc
and
test
ret
imul
and
mov
insl
int3
ficoml
lods
cmpsb
vmulps
push
or
call
push
cli
inc
push
sub
dec
inc
sbb
cmp
mov
mov
cmp
in
sbb
add
dec
dec
jbe
jl
adc
cmp
mov
imul
cmp
xchg
iret
rolb
cmp
es
mov
mov
popa
mov
sbb
jge
cmpsb
cld
lret
fmuls
add
jns
ja
jmp
loope
cmp
and
imul
sahf
jno
cmp
scas
cmp
sub
jle
xchg
fidivrs
in
push
lock
add
mov
bnd
xor
pop
pop
xor
jecxz
inc
jb
cmpsb
js
sahf
jb
loop
das
sub
inc
dec
sbb
mov
fisubrl
cmp
xchg
in
fcomip
xor
fs
mov
cmp
dec
aas
inc
jo
icebp
call
mov
lock
mov
mov
int
repnz
dec
jnp
stos
sbb
pop
leave
fsub
xor
dec
addr16
imul
add
xchg
jge
outsb
cld
aad
clc
cmpsb
or
mov
adc
je
adc
push
ds
dec
xchg
jns
je
add
rcrl
dec
sub
data16
pop
pop
orl
popa
fwait
mov
pop
scas
shll
movsb
mov
subb
push
lea
push
mov
pop
loopne
jmp
cmp
jl
mov
imul
pop
jge
hlt
aaa
daa
in
insl
pusha
adc
outsl
shl
ret
mov
testb
aam
pop
cld
faddl
jmp
popa
xor
or
ljmp
sti
fwait
test
jns
pop
mov
adc
movsl
jae
pop
push
fwait
adc
ret
mov
jle
fcoms
pop
push
inc
rclb
fnstsw
inc
outsl
cmp
jl
mov
in
shl
je
flds
icebp
jb
push
data16
mov
in
pop
mov
lods
int3
test
inc
lret
aaa
mov
adc
cli
xor
rep
xchg
stos
push
push
mov
inc
jecxz
test
push
xor
int3
mov
inc
xor
inc
shrl
push
scas
mov
adc
aaa
sub
lods
dec
lahf
pop
adc
push
sbb
shll
xor
inc
add
sahf
mov
xor
xor
add
imul
jnp
dec
adc
mov
push
xor
das
stos
and
and
mov
aam
pop
pop
test
and
in
lods
mov
cld
pop
lods
shrl
mov
test
jge
lods
xchg
call
int
pop
js
scas
mov
mov
push
movsl
sbb
xor
jmp
imul
jbe
int3
mov
fwait
sub
ret
test
jmp
outsb
lock
in
insl
inc
mov
cmpsb
jno
test
sbb
jl
sbb
sub
and
mov
cmp
add
out
fsubl
loop
fstps
pop
fcompl
pop
jno
mov
testb
sub
je
gs
mov
insb
sbb
repnz
add
cmpl
clc
stc
cwtl
repnz
push
pop
in
dec
mov
in
pop
nop
mov
imul
jne
jne
loope
sbb
popa
jp
arpl
adc
jmp
inc
and
adc
jo
lods
dec
cltd
fbstp
enter
gs
lahf
out
popa
cld
stos
or
adc
sbb
aad
in
iret
mov
outsb
mov
pusha
xchg
mov
lods
lea
shlb
mov
mov
pop
inc
pusha
outsb
sbb
repz
sbb
pop
sub
pushf
int
mov
test
movsl
cmp
cmp
inc
push
xchg
fabs
mov
sahf
jo
jo
rcll
pop
in
sbb
je
repnz
or
outsb
jne
adc
cmp
test
xchg
inc
loopne
jo
shl
iret
dec
sub
jae
movsb
push
movsb
mov
cmp
push
daa
loope
ret
and
ljmp
push
imul
pop
or
inc
dec
popf
icebp
and
mov
popf
lret
test
out
inc
mov
jne
ret
outsb
pop
xchg
push
leave
or
mov
out
fidivs
push
sahf
mov
cli
test
sbb
test
push
outsb
repz
fs
ljmp
in
xchg
sbb
jb
jp
push
stos
test
in
outsl
jg
jo
out
mov
cmpsb
gs
sbb
push
adc
mov
std
push
stos
xchg
stos
sbb
outsb
cld
fdivp
mov
push
imulb
jbe
sub
icebp
mov
push
push
push
in
xchg
sub
xchg
rclb
stos
imul
mov
stos
test
test
stos
dec
mov
sbb
sarb
push
gs
pop
mov
pop
adc
mov
icebp
shll
jno
sbb
mov
push
sbb
stos
pushf
jno
sbb
call
mov
mov
sti
stos
in
movsb
jecxz
sbb
aas
mov
sbb
cmp
add
lahf
sbb
cmp
jbe
pop
sti
mov
out
mov
mov
pop
enter
inc
pop
out
pop
jecxz
sbb
stos
add
sbb
mov
loopne
push
adc
or
imul
xchg
mov
adc
lock
mov
lcall
sbb
add
arpl
and
jo
fcmove
sbb
push
ja
adc
or
adc
push
mov
jo
dec
mov
sbb
jecxz
or
mov
repnz
mov
stos
divl
jl
mov
push
and
arpl
std
movsb
imul
adc
mov
dec
add
mov
lahf
push
cli
sar
imul
rorb
shll
or
mov
push
sbb
stos
sbb
stc
add
dec
push
lea
ja
enter
sti
xchg
xchg
pop
add
xor
jo
cmc
sarb
mov
cmpsl
popf
add
stos
inc
push
js
sbb
dec
or
mov
jle
mov
call
gs
pushf
adc
push
or
insl
adc
inc
aaa
test
mov
xchg
idivl
or
int3
xchg
mov
js
ficoms
repnz
mov
lock
outsb
or
or
push
ds
fs
xchg
sbb
ss
cmpsb
stos
repnz
lods
jb
out
jno
insl
xlat
xor
xor
xchg
xchg
jb
dec
sbb
cmpsb
push
mov
icebp
int3
jp
dec
loopne
mov
inc
stos
fstp
es
or
dec
fwait
mov
pushl
lahf
sub
jns
ja
mov
jns
pop
cmp
mov
in
pop
mov
sub
xor
data16
aad
iret
test
mov
xor
adc
adc
lret
pop
cmp
je
jb
xchg
jnp
mov
pop
mov
cld
stos
std
shrl
outsl
rolb
push
sbb
stos
jle
imul
and
or
dec
and
nop
sub
jmp
movsl
lret
int3
push
mulb
or
int3
xor
xor
rorl
out
dec
sub
and
imul
lret
les
fsubr
sbb
adc
leave
cmp
dec
out
clc
or
cld
mov
xchg
mov
push
mov
inc
push
dec
push
mov
push
inc
dec
outsb
arpl
stos
popf
in
sbb
sbb
stos
dec
xchg
mov
dec
adc
les
jo
push
lret
jo
add
pop
test
and
sub
shlb
fwait
cmpsb
pop
ljmpw
inc
cmpsb
jnp
stos
test
fs
out
arpl
mov
and
adc
mov
mov
repz
hlt
lret
add
js
dec
stos
xor
mov
mov
add
rol
pop
mov
push
stos
test
add
std
mov
adc
add
ror
add
xchg
test
in
xchg
xchg
add
sbb
mov
add
mov
mov
icebp
stos
pop
mov
pop
movsb
bnd
mov
add
and
int
fwait
and
mov
mov
push
int3
adc
add
and
xor
or
xchg
add
inc
dec
ds
jo
pop
pop
mov
add
sbb
pop
in
gs
test
outsl
imul
cmp
rcr
push
or
fcmovu
xor
in
push
movsb
pop
sub
stos
pushf
addb
lea
aad
das
pop
jo
push
in
add
cmc
sbbb
mov
rorb
jo
push
push
testl
out
movd
fsubrp
bound
adc
pop
cwtl
adc
iret
push
and
movsb
xchg
push
stos
adc
push
jno
add
xchg
bound
rorl
test
repz
dec
push
mov
sbb
sbb
pop
nop
adc
outsb
sub
mov
and
xchg
sbbl
add
imul
arpl
test
or
mulb
pop
jg
mov
cmp
repz
dec
aas
insl
push
adc
jb
outsl
xchg
fwait
js,pn
test
sbb
movsl
cld
dec
nop
outsb
cmpsl
ret
adc
or
and
cld
xlat
mov
imul
fistpll
mov
pop
push
outsb
jno
inc
out
sahf
mov
dec
xchg
ja
mov
adc
ss
rorb
inc
sti
pop
add
hlt
fbld
test
out
dec
sbb
test
push
mov
cmp
xor
loopne
mov
dec
repnz
push
pop
les
inc
loopne
cld
jae
adc
fwait
aam
popf
or
pop
orps
adc
call
jb
pop
mov
popa
mov
in
inc
cwtl
adc
mov
lret
mov
or
sub
push
imul
ja
cvttps2pi
jns
ljmp
fimuls
cwtl
hlt
mov
std
mov
pop
xchg
gs
clc
pop
stos
sub
cmp
orb
mov
adc
out
ret
test
sub
and
popf
lds
xor
insl
xor
xor
insl
test
push
sbb
cmp
fwait
lock
mov
add
mov
mov
jp
ficompl
aaa
xchg
xchg
or
push
out
dec
or
jge
and
lahf
out
lret
jecxz
adc
add
mov
fbld
jb
dec
movsb
dec
es
mov
outsb
or
fs
pop
in
fidivrl
loop
and
imul
loopne
pop
movsb
or
call
lods
ret
dec
or
or
ss
in
or
add
rcll
xchg
das
loopne
and
mov
lahf
xlat
popf
rcrb
adc
subb
mov
lret
fsubrs
mov
sarb
cmp
mov
mov
adc
pop
sub
adc
nop
dec
out
mov
stos
mov
mov
mov
fsub
add
mov
xor
dec
push
bound
lods
xchg
add
stos
pop
rcl
mov
push
and
scas
imulb
mov
mov
outsl
enter
rorl
push
cmpsb
ja
loope
in
rcrl
push
adc
test
or
cltd
pop
imul
in
fists
mov
jne
rorb
movsb
mov
push
movsl
jp
xchg
mov
xchg
mov
call
in
pop
arpl
stos
mov
in
sbb
stos
sub
loopne
mov
out
mov
mov
ror
pop
repnz
xchg
push
push
fildll
push
add
push
sbb
sbb
clc
xchg
mov
bound
fsubs
imulb
fs
adc
inc
sub
iret
call
or
loopne
movsl
in
and
sbb
xchg
fdivrl
test
repnz
hlt
lds
lea
pop
sbb
out
stos
popa
or
jae
mov
fwait
pop
imul
push
dec
f2xm1
fs
imul
jp
btc
push
inc
pusha
stos
dec
mov
andb
jo
cmp
mov
inc
stos
rcrl
dec
pop
sbbb
lret
push
stos
cs
movsb
iret
mov
push
stos
and
push
out
out
sti
fsubr
dec
stos
xchg
mov
xor
clc
xchg
lods
mov
cld
repnz
or
sub
pop
out
nop
lea
sarl
pop
jns
or
roll
and
dec
rorb
sbb
por
mov
maxps
xor
jle
pop
iret
je
sub
lea
fimuls
or
test
movsb
stos
loope
dec
sbb
mov
adc
lea
xor
stc
mov
and
ret
mov
orb
loop
dec
bound
push
stc
dec
add
in
pop
loope
sarl
mov
push
mov
sbb
inc
and
test
inc
inc
ljmp
xorb
jno
sbb
sbb
aaa
es
cmp
xorb
push
mov
and
mov
pusha
movsb
xchg
or
dec
mov
push
jno
std
pop
les
sbb
mov
cs
shlb
loopnew
xchg
movsb
xchg
jp
outsl
imul
cwtl
stos
mov
mov
cmpsb
mov
adc
in
or
mov
and
loope
mov
sahf
pushf
fsubrl
dec
insl
call
ljmp
adc
mov
je
adc
shlb
cmpsb
lock
bound
mov
mov
pop
lods
cli
lods
scas
jb
push
repnz
xchg
xor
mov
in
fisubrs
pop
scas
ficoml
pop
cmp
out
lea
dec
add
mov
push
repnz
sub
cmpsl
fldt
mov
add
leave
push
cli
mov
ja
shll
lods
adc
mov
push
pushf
mov
jo
dec
dec
popl
shlb
cmp
stos
sbb
in
inc
fmull
mov
jg
dec
mov
popa
adc
push
push
xchg
add
pop
scas
or
mov
sub
adc
hlt
test
data16
xchg
cli
imul
arpl
lods
xorb
ret
int3
bound
xor
inc
lods
cmp
idivl
lcall
in
mov
cmp
xor
mov
ljmp
add
outsb
loopne
mov
sbb
or
lret
fbstp
sub
push
into
push
out
mov
push
dec
scas
shll
jb
int3
jb
sbb
mov
ror
lock
sbb
inc
fildl
sub
jno
xchg
xchg
loope
enter
cld
and
aam
dec
jno
adc
gs
push
jo
in
mov
or
movsl
int3
xor
sbb
jp
iret
mov
sbb
cs
pop
cmc
cli
pop
or
push
mov
repnz
xor
dec
cmp
mov
or
js
bound
lods
and
imul
mov
sti
push
sbb
mov
shlb
adc
ss
sbb
rcll
aaa
mov
xor
pop
bound
addr16
inc
cs
je
ja
mov
adc
sbb
sahf
stos
ljmp
pop
inc
cmc
dec
icebp
inc
jno
push
iret
cmpsl
cmp
sbb
cmp
stos
push
stc
aaa
js
jno
ljmp
jbe
sbbl
inc
sbb
or
dec
cltd
leave
test
jb
mov
sbb
iret
mov
mov
pop
pop
pop
js
push
fs
int
in
fmul
adc
or
fnstenv
pusha
dec
daa
lcall
lret
jl
orl
sbb
inc
or
iret
or
clc
push
xchg
sahf
test
aad
sbb
dec
dec
hlt
jge
add
movsb
pop
mov
sbb
and
push
pop
outsb
shlb
bound
stos
xor
push
xchg
scas
dec
movsb
les
stos
jmp
mov
sbb
and
add
and
xchg
dec
out
mov
ret
stos
fs
sbb
sahf
stos
xchg
hlt
jle
je
jo
test
adc
cmp
repnz
and
sbbl
stos
fs
popa
sbb
fcoml
jo
jg
push
sub
inc
push
scas
xchg
fldcw
in
push
fstps
cmp
sub
bound
dec
push
stos
aad
mov
jmp
mov
adc
adc
testb
aad
mov
jne
mov
dec
iret
je
call
mov
mov
lret
out
mov
adc
dec
mov
stos
pop
mov
sbb
stos
adc
push
mov
stos
fwait
jno
mov
out
dec
pop
cmp
mov
out
inc
fdivl
add
faddp
stos
adc
test
pop
cmp
sti
mov
scas
xchg
push
and
push
mov
sbb
mov
pop
push
cmp
dec
repz
mov
adc
out
push
fsub
mov
or
in
movsb
cmpsl
xchg
push
pop
sbb
push
push
in
dec
test
dec
dec
mov
push
xchg
dec
fs
lods
mov
je
adc
ror
repz
popf
pop
cmp
push
push
mov
mov
mov
push
xchg
ss
movsb
adc
hlt
inc
add
xchg
loop
push
inc
inc
hlt
lods
fnsave
loope
dec
pop
sbb
xchg
adc
push
mov
ja
cmc
push
nop
pop
xchg
or
push
aad
adc
push
jo
jnp
lock
xchg
sbb
or
movsl
mov
movsl
lods
stc
mov
push
cmp
add
movsl
jno
in
xor
mov
ja
in
and
push
repz
shll
outsb
mov
or
ja
outsb
movsb
sub
fs
pop
rol
shll
cltd
adc
or
dec
popf
and
pop
rclb
cmp
ss
pushaw
sub
add
adc
and
xor
pop
les
dec
mov
or
and
mov
xor
mov
lret
adc
dec
push
icebp
adc
jo
inc
sbb
pusha
loope
mov
jns
pop
mov
inc
in
push
lock
adc
subb
gs
stos
mov
lods
movsb
cmovl
lea
mov
andb
lods
test
cli
mov
shrb
int
xor
cmp
inc
mov
stos
pushl
leave
xchg
jecxz
jo
jge
pop
sbb
out
sub
mov
xchg
inc
stos
adcb
adc
adc
outsb
cmp
mov
add
test
mov
fadds
test
stos
jne
sbb
mov
dec
adc
adc
into
adc
cmp
insl
fisubrl
call
inc
or
mov
test
stos
sbb
ret
aad
adc
push
push
jmp
outsb
mov
xchg
add
je
mov
or
sarl
bnd
mov
fcompl
clc
stos
mov
mov
lcall
mov
int3
aaa
lods
sub
jecxz
in
andb
call
mov
mov
test
push
sub
cltd
stos
mov
loope
xchg
into
mov
daa
arpl
fstpt
repnz
cs
push
pushf
adc
pop
inc
mov
sbb
push
xchg
mov
sub
mov
xchg
xchg
pop
and
imul
lcall
adc
fistl
mov
je
out
mov
sarb
or
sbb
mov
sub
xor
push
jo
inc
cs
pushf
mov
addr16
icebp
adcl
xchg
into
stos
push
lods
sub
mov
imul
adc
push
psubsb
dec
in
in
add
sub
movsb
adc
pop
in
test
mov
adcb
cs
and
mov
pop
fs
popf
iret
in
pop
lods
mov
and
sub
movsb
sbb
insl
push
fdivr
or
push
sbb
xor
xchg
sahf
mov
mov
hlt
cmc
jo
xchg
mov
inc
mov
lods
scas
mov
sahf
test
imul
add
in
jns
sub
pop
dec
fidivrl
add
dec
or
pop
rdmsr
mov
push
sub
inc
outsb
push
add
out
clc
int3
xor
cld
outsl
and
xor
imull
jbe
mov
pop
add
pop
out
test
fisttps
mov
xlat
cmp
shr
call
fdivl
and
add
mov
cmpl
adc
and
or
mov
jb
mov
or
clc
cs
iret
mov
mov
lods
xor
cmpsb
add
fsubs
push
sub
cmp
sub
mov
inc
stos
pop
push
stc
loop,pt
adc
jge
shr
mov
mov
pusha
rcrl
rcl
sub
insl
and
or
push
shrl
aaa
mov
loope
int
jo
mov
pop
xchg
mov
repnz
xchg
or
push
popa
fwait
pop
mov
xchg
and
int3
xor
mov
dec
mov
add
pop
xchg
mov
lret
adc
fistps
xchg
mov
and
ds
mov
pusha
and
add
fidivs
cmc
test
or
push
sbb
and
xor
insl
fdivl
lahf
fsubr
jns,pn
lret
push
and
scas
push
sbb
leave
shl
sbb
cmpsl
ljmp
sub
stos
lret
xor
jl
mov
mov
or
dec
in
rorb
cwtl
sbb
mov
scas
mov
testb
cmpsl
pop
arpl
stos
sub
es
ljmp
jno
cmp
mov
inc
jb
dec
pop
pop
mov
and
call
jne
cwtl
movsl
mov
mov
mov
mov
jecxz
lahf
push
imul
lahf
mov
inc
psadbw
sbbb
mov
sub
mov
fwait
push
lahf
or
es
xor
inc
call
mov
or
shlb
es
loop
aam
or
mov
imul
test
jo
add
mov
xchg
out
or
adc
lret
les
adc
lock
sub
mov
jo
jb
lods
add
sbb
adc
scas
sbb
push
out
sbb
sub
xor
pop
mov
fsubs
fwait
jp
mov
push
cwtl
xchg
push
fistl
lret
add
push
and
dec
ljmp
push
or
adc
sbb
push
repnz
ja
sbb
push
negl
or
pop
sbb
jmp
xchg
outsb
lock
iret
in
mov
sbb
ja
push
cwtl
xor
sub
outsb
int3
cltd
adc
pop
adc
fbstp
out
insb
popf
insl
xlat
mov
push
lcall
scas
ja
ret
push
mov
push
lahf
or
mov
pop
jl
jb
inc
and
lods
fwait
arpl
fldcw
cs
mov
fsubr
cld
mov
or
xor
sub
fldenv
nop
push
cltd
adc
icebp
fsubr
dec
sarl
mov
xchg
dec
cmpsb
push
mov
js
lret
fdivrs
jp
add
and
inc
and
mul
add
fsubrs
jb
sub
mov
out
sub
pop
pop
mov
or
ja
adcb
add
jp
cli
mov
cmp
ss
les
roll
or
push
mov
jb
rcll
data16
repnz
pushl
popa
aam
lods
in
mov
xchg
bound
jae
ljmp
mov
sub
xorb
jp
std
in
jae
das
sbb
sti
in
repz
mov
jno
xchg
jns
out
shrb
jl
repz
loope
in
pusha
movsl
imul
mov
push
jge
call
or
sbb
scas
lret
idiv
shlb
cli
arpl
in
int3
imul
fistl
ljmp
add
sbb
fadd
pop
cmp
in
addb
xchg
cmp
test
mov
lock
lretw
shll
mov
jnp
lahf
pop
jno
sub
sti
shl
out
fwait
lea
lcall
mov
ja
add
pop
insl
mov
sahf
in
test
and
sbb
push
imul
push
jo
sbb
imul
bound
jo
adc
mov
fisttps
mov
push
push
mov
movsb
or
adc
pop
ret
mov
test
pop
push
push
and
push
mov
test
push
lea
push
and
mov
pop
add
fcoml
data16
lea
mov
pushf
jno
xlat
out
mov
in
lret
rol
in
adc
call
or
cmp
dec
mov
leave
ja
cmpsb
mov
lds
loop
decl
pop
lcall
cmp
addl
mov
mov
add
popf
fwait
cmp
sub
pushf
push
cmp
outsb
or
adc
data16
xor
cli
adc
int3
pusha
lea
aam
insl
inc
sub
xchg
add
int
xchg
arpl
js
fbld
jne
xchg
mov
mov
sbb
jmp
pop
push
pop
fsubrp
push
clc
jmp
add
xor
or
mov
dec
icebp
jp
inc
add
inc
roll
fs
xchg
pop
arpl
test
push
cs
in
data16
pop
lcall
lcall
call
push
out
lcall
aam
mov
xchg
daa
or
mov
imul
in
jnp
xchg
xor
inc
rolb
call
sub
in
jbe
iret
mov
lea
outsl
dec
pusha
jg
cs
rcr
lock
fwait
mov
xchg
fnstcw
pushf
dec
icebp
jb
xor
mov
mov
inc
mov
out
sarl
or
fsubrp
inc
ds
pop
sub
outsb
and
aas
sbb
and
dec
push
pop
fwait
dec
sub
in
jbe
fwait
lret
mov
fistpl
jg
mov
stos
sub
pop
test
call
es
push
jno
ret
push
add
xchg
push
and
notb
mov
fcmovnb
lock
sti
push
pop
mov
imulb
sub
cmp
or
adc
push
stos
daa
inc
or
lea
int3
sahf
or
and
lods
lret
jb
push
iret
pop
notb
inc
arpl
and
sahf
jb
aas
sub
mov
jno
loope
imul
add
mov
fadd
jge
inc
lahf
adc
pop
mov
sbb
sbb
lret
lods
bound
aas
mov
lock
jbe
lock
sub
es
imul
sti
push
lret
add
push
call
andl
movsb
add
scas
sbb
fsubs
imul
mov
gs
addr16
hlt
stos
xor
jne
arpl
mov
ret
lret
cmp
outsl
test
mov
fisttpll
mov
jp
dec
push
pop
jle
cmpsb
rcrb
sbb
adc
cmp
sub
sub
xchg
mov
shrb
stos
es
pop
addl
loopne
or
mov
movsl
and
ljmp
and
bound
adc
ja
adcb
cmp
pusha
xchg
jg
xor
mov
add
push
aam
add
fists
add
mov
xchg
pushf
nop
jbe
lcall
pop
inc
sub
jno
cmp
add
xor
inc
lds
add
movsl
nop
push
add
push
mov
lcall
and
outsb
int3
outsl
pop
outsl
dec
pushf
sub
sbb
add
sbb
repnz
adc
cld
mov
push
outsl
pop
push
jns
or
lds
lret
mov
sti
push
or
inc
pop
repz
jno
icebp
inc
add
stos
xchg
inc
addr16
add
ret
loopne
lahf
ret
daa
fdivl
ret
lahf
ret
gs
clc
cmp
movsb
imul
imul
imul
push
divl
in
lcall
aam
inc
es
jo
xchg
add
xchg
sub
fwait
outsl
xchg
int3
mov
pushf
xchg
sahf
and
mov
shll
push
sbb
mov
loopne
adc
sub
adc
xchg
outsb
jns
dec
xchg
call
fs
sub
pop
pop
pusha
lods
xor
cwtl
push
or
loop
sub
mov
fcmovu
xchg
inc
push
lret
jb
in
push
dec
or
dec
scas
repnz
cmp
rcl
cmp
fisubrl
and
mov
jnp
std
sbb
mov
fisubrs
sbb
xchg
mov
xor
lret
imul
mov
add
xlat
cmpsb
sbb
add
fbstp
popa
outsl
push
aaa
xor
xor
jne
jg
add
lahf
mov
popf
imul
out
mov
cmp
aad
push
sub
sbb
lock
adc
pushf
in
lods
insb
or
jo
lock
je
and
sbb
inc
fsts
ljmp
xchg
sbb
xchg
push
jge
pop
jno
cmp
loopne
cmc
adc
sbb
mov
mov
pcmpeqb
imul
imul
cwtl
pop
mov
dec
cmpsl
mov
movsl
fbstp
test
add
add
and
icebp
jo
and
jbe
sbb
cs
and
sub
leave
adcl
outsl
and
dec
and
lods
jp
iret
pop
push
cmc
cltd
mov
and
test
sub
inc
inc
dec
mov
repnz
xchg
test
cmpsl
repnz
mov
mov
jmp
pop
sub
scas
movsb
lods
push
aas
movsl
aaa
dec
cli
mov
cmp
std
mov
out
out
adc
pop
in
sahf
cmpsb
add
push
and
aad
xchg
jnp
inc
sbb
add
mov
jmp
outsb
cmpsb
fldcw
repnz
xchg
sbb
lcall
insl
pop
ja
cli
xchg
push
popf
imul
fs
cmpl
in
std
jl
sbb
ljmp
not
clc
cmp
not
iret
in
pop
pop
mov
testl
push
insl
and
out
idiv
in
cltd
sub
pop
in
mov
jne
in
sti
fs
jmp
pop
pop
xor
jb
cld
fbld
test
clc
sbb
sbb
mov
sub
ljmp
mov
jns,pn
jb
or
xchg
out
dec
jo
xchg
and
mov
add
js
pusha
xor
sbb
test
mov
add
cmpsb
sahf
mov
dec
mov
mov
stos
fsts
stos
jg
sbb
cwtl
shrb
jbe
jl
dec
lea
cltd
push
lahf
push
lcall
xor
and
aaa
mov
mov
and
es
popf
xchg
cmp
test
mov
ja
ljmp
ljmp
lret
mov
xor
xchg
test
imul
xlat
and
jae
sub
sbb
push
xchg
pop
lret
mov
inc
adc
cmpsb
sbbl
movsw
jno
ja
and
push
push
sub
dec
xchg
pop
arpl
cmpsl
mov
in
out
and
adc
lds
dec
push
scas
push
popf
or
mov
in
sbb
and
call
mov
pop
xor
fidivrl
mov
jge
xor
mov
test
mov
push
ljmp
xchg
insb
and
jo
int3
and
and
leave
sub
mov
lock
mov
add
rcrl
dec
mov
cmp
scas
pop
jae
pop
inc
cli
cmc
and
push
bound
cmp
xchg
stos
aad
clc
fs
xchg
mov
ret
or
pushl
inc
mov
mov
jae
adc
sub
pop
sub
sub
mov
repnz
jb
dec
insl
rcl
mov
mov
daa
mov
adc
and
mov
add
out
ljmp
sub
add
out
in
aad
inc
xchg
sti
mov
mov
cmp
xor
fcomps
mov
lea
rolb
sub
mov
js
stos
out
or
ficoml
sub
push
dec
das
sbb
jns
pusha
adc
std
enter
mov
sub
jg
sub
pop
das
stos
dec
jns
out
popa
ljmp
mov
cmpsl
aam
and
mulb
push
mov
lods
es
bnd
sub
fidivrl
cltd
repz
adc
pop
in
push
inc
sbb
xchg
sbb
push
psubsb
mov
mov
rorb
mov
out
inc
xchg
or
xor
or
lahf
pop
ret
push
out
pop
pushf
addr16
pushf
sub
inc
cld
cmpl
lock
sub
add
stos
cmp
mov
sbb
ds
gs
mov
sub
pop
test
lret
jmp
and
out
pusha
dec
bound
out
cmpsl
icebp
cmpsl
gs
stos
leave
push
jns
loope
stos
fdivr
cmc
push
sbb
mov
shll
mov
dec
push
fsubl
js
adc
repnz
jl
push
dec
gs
sbb
add
lahf
mov
jo
jl
xchg
cltd
xor
in
es
js
movsb
cmp
jne
mov
mov
movsb
lea
sbb
add
repz
repnz
out
lods
int3
gs
jbe
fbld
insw
sti
or
scas
mov
add
inc
in
lods
pop
movsb
lret
movsl
aas
scas
adc
lret
mov
sub
mov
shrl
lret
fnsave
test
inc
xchg
ja
cmpsb
std
outsb
adc
fisttpll
jno
xchg
ljmp
aad
ja
sbb
sbb
jnp
in
scas
push
inc
pop
pop
fsubrl
fcomp
fs
sbb
outsb
in
mov
jo
fs
arpl
lods
jno
mov
push
mov
sbb
pop
loop
mov
adc
add
das
testl
inc
xor
inc
fwait
stos
fcoml
jo
lods
sbb
mov
mov
aas
mov
lock
push
notl
push
dec
and
pop
xchg
sub
pop
dec
xchg
push
adc
mov
sbb
pop
xor
pop
sub
mov
adc
sub
or
jge
jecxz
mov
inc
mov
imul
lock
add
enter
xchg
aam
out
add
or
sub
sub
jns
icebp
insl
sar
adc
push
mov
mov
sti
fiaddl
mov
push
cmpsb
push
push
jl
mov
lods
out
mov
xchg
ljmp
lock
adc
mov
sbb
and
sbb
mov
or
mov
sti
jns
fs
mov
inc
in
push
jne
imul
mov
testb
xor
dec
stos
pusha
xor
add
pop
pushf
mov
mov
dec
adc
or
aam
jl
mov
sti
push
sti
mov
ret
repnz
mov
lock
xlat
adc
cs
mov
cmp
xor
sbb
lcall
xchg
mov
dec
inc
push
mov
mov
sub
pop
push
lahf
xor
mov
lods
xchg
rcrb
push
jno
mov
aas
ret
pop
lret
mov
outsb
cmpsb
add
test
mov
sub
push
daa
dec
sub
jo
mov
gs
rcrl
push
xchg
js
test
and
cmp
jmp
aas
insl
mov
mov
mov
jge
jnp
ret
pop
mov
push
cmp
call
fdivl
fs
pop
add
aas
xorl
lock
mov
push
out
add
popa
or
jg
push
push
lock
cmp
mov
andb
lahf
mov
xlat
sub
add
pop
test
call
adc
pop
pop
mov
mov
pop
addr16
das
sahf
or
lods
fs
fcmovnu
mov
xor
or
mov
nop
add
lods
sub
popa
shlb
ss
ret
xchg
or
cmp
mov
inc
adcl
jg
jge
imul
in
xchg
xchg
sub
xlat
ljmp
cmp
xor
insl
nop
mov
inc
les
test
mov
xor
mov
pusha
movsl
add
fs
sbb
mov
mov
inc
mov
xchg
mov
popa
imul
or
mov
lahf
mov
rol
imul
jmp
or
imulb
add
cmpsb
mov
into
and
and
adc
jnp
imulb
es
dec
dec
dec
dec
jecxz
mov
xor
mov
ret
cld
and
lock
jno
subl
and
insl
jle
push
and
stos
cmc
cmpl
mov
in
ror
loope
ljmp
sub
mov
add
jge
les
inc
jb
repnz
pop
pop
push
or
pop
push
in
push
add
loope
mov
nop
mov
test
and
pop
or
pop
dec
hlt
and
lret
xor
cmp
cmpsb
lahf
mov
mov
inc
stos
data16
mov
xor
subb
in
and
int3
push
pop
repnz
push
xchg
repnz
push
jae
iret
and
aaa
in
cmp
or
or
and
scas
js
sub
stos
add
and
lock
lock
aaa
xchg
pop
sahf
xor
loopne
jo
jecxz
fs
mov
arpl
cmp
dec
sub
repz
mov
pop
sbb
shll
out
xlat
test
dec
sbb
mov
bound
mov
dec
fwait
push
add
cltd
lret
push
mov
loopne
arpl
mov
mov
std
xchg
lea
pop
rclb
mov
pop
jo
mov
sbb
mov
and
or
shrl
mov
call
in
out
in
into
arpl
pushf
ljmp
hlt
fneni(8087
push
cmp
mov
pop
inc
repz
xchg
testl
push
in
adc
push
insl
cmpsl
daa
cs
in
jmp
mov
loopne
push
cmp
stc
mov
pop
pop
jecxz
bound
mov
push
add
imul
repz
mov
xchg
loopne
fiaddl
jo
scas
fidivl
sub
repz
lret
pusha
movsb
sahf
jbe
out
sbb
pop
bound
cmp
xchg
push
fsubl
mov
icebp
dec
ficoms
cmp
iret
aaa
cwtl
inc
push
inc
imull
loopne
jo
dec
fistps
sti
xor
push
mov
adc
mov
out
stos
outsl
scas
mov
dec
loope
or
lods
mov
insl
sub
cmp
fimuls
dec
out
ja
and
imul
aas
or
sahf
subl
mov
jns
sub
mov
mov
call
pop
jmp
imul
mov
fwait
int
aas
cmp
shrb
xor
stos
pop
in
in
stos
fs
outsb
push
mov
xor
pop
and
mov
push
inc
sub
cli
sub
scas
int
gs
incb
pop
sbb
mov
and
das
out
out
or
cwtl
loope
sarb
aas
pop
jg
andb
ss
or
sbb
leave
sub
scas
xor
aas
ss
loop
jmp
jge
and
mov
arpl
sbb
aas
in
mov
insb
mov
jge
xorb
cltd
shl
xchg
lcall
jge
xor
std
sbbb
dec
dec
daa
loopne
loopne
outsl
je
in
ficomps
push
lret
and
or
push
lahf
inc
cmp
sbb
ljmp
xchg
outsb
mov
rorl
push
aas
mov
pop
mov
ret
dec
pop
push
stc
out
xor
add
lock
jbe
jl
adc
inc
xlat
cmpsb
daa
and
inc
xchg
loopne
iret
fwait
pop
jbe
aaa
lods
pop
int
movsb
pop
sbb
sub
cmp
pop
iret
cltd
add
inc
insb
popf
sub
and
pushf
ljmp
lock
leave
stc
sub
cmp
fwait
and
dec
aas
and
inc
shrb
sbbb
cmp
or
cmc
sbb
push
mov
xor
add
incb
lods
fs
loopne
dec
cs
dec
xchg
in
fisttps
inc
mov
mov
xor
add
pushf
push
mov
sub
jl
hlt
ljmp
out
add
or
mov
or
xchg
je
or
ret
sbb
inc
jbe
in
in
jp
movsb
daa
scas
and
mov
fwait
loope
xlat
lods
dec
mov
xlat
lds
outsb
or
mov
xchg
stos
syscall
in
mov
xchg
test
jmp
jbe
jbe
in
and
inc
ret
shll
mov
pop
repnz
lret
imul
mov
int3
and
sbb
mov
mov
sub
sub
xchg
movsl
and
incl
mov
jge
sub
lods
adc
insl
jae
fbld
popf
sbb
lods
ds
cmp
fwait
dec
mov
stc
sub
add
lock
inc
jle
mov
and
imull
cmpsl
jno
mov
gs
cltd
roll
mov
sub
mov
jl
mov
mov
cmp
addb
icebp
fmul
stos
mov
mov
jl
pop
push
ss
lock
add
data16
or
xor
pop
xor
aas
sbb
movsl
pop
jo
int3
movsl
test
dec
fdivl
int3
test
xchg
scas
mov
pop
mov
jge
push
sbb
sbb
sbb
sbb
inc
insl
mov
push
sti
pop
and
pop
xor
jecxz
mov
mov
add
mov
cmp
inc
or
out
sub
and
orl
dec
add
pop
or
sub
fnstsw
pop
stos
jae
fistpll
cmp
mov
je
or
adc
pop
pop
lock
and
pop
cmc
mov
gs
mov
test
mov
jo
jae
pop
fldt
adc
pop
scas
inc
gs
lret
inc
or
sub
ss
sbb
aam
or
ss
popa
pop
std
in
or
lds
bound
popa
adc
cs
stos
push
and
outsb
or
adc
arpl
subb
inc
cs
xor
ret
sahf
or
repnz
shrb
fsubl
repz
stos
ret
xor
xchg
in
daa
adc
rcrl
ds
test
and
dec
or
lret
inc
mov
mov
fimull
test
xchg
pushf
dec
pop
idivl
ljmp
lds
scas
pop
jb
dec
xor
mov
cs
dec
pop
push
adc
ret
fimull
push
or
inc
push
or
mov
mov
dec
iret
in
xchg
or
jecxz
mov
and
adc
inc
imul
mov
pushf
outsl
push
mov
into
arpl
sbb
dec
ret
fstpt
imul
add
dec
insb
sti
loop
dec
mov
lds
push
xor
fbstp
call
imul
sub
inc
push
push
mov
loope
jge
cmpsb
aaa
xchg
in
fbstp
movsb
sbb
arpl
fsts
fisttpl
mov
scas
jp
and
loopne
mov
mov
or
add
sub
adc
jl
mov
sub
divb
jmp
lret
fsubs
push
ljmp
gs
leave
fcoms
jge
es
cwtl
je
xor
jge
sub
imul
xchg
orl
mov
sub
mov
data16
xchg
movsl
jbe
test
orl
or
mov
mov
xor
and
stos
imul
scas
mov
jge
adc
push
dec
imul
lock
lret
jb
rolb
or
sub
and
jno
cld
test
sbb
xlat
and
push
push
push
insl
clc
lea
stos
inc
dec
shlb
or
dec
mov
jo
xor
popf
pop
xchg
shr
xchg
inc
xchg
dec
stos
adc
xor
jnp
mov
ss
push
sbbl
gs
es
data16
push
push
data16
push
sbb
data16
sbb
movsb
cwtl
scas
gs
pop
xchg
mov
add
ret
and
jge
aaa
rcll
ja
pusha
xor
or
das
out
xchg
sub
enter
mov
stos
ljmp
nop
mov
jmp
or
dec
insl
xor
mov
mov
xchg
dec
xor
fdivs
cli
in
fs
scas
popf
ja
and
in
jb
flds
cmp
in
loope
iret
lock
jl
leave
mov
jle
mov
fwait
sbb
ljmp
ljmp
sbb
int3
cmpsb
arpl
addr16
inc
loopne
lods
or
enter
orl
movsb
jbe
lods
xchg
sbb
cmpsb
and
decl
sub
es
iret
or
fstl
mov
pop
aam
jb
int
sbbl
test
jns
pop
pushf
inc
sbb
pushf
imul
xor
sub
mov
add
jb
dec
stc
push
inc
inc
and
cld
add
cli
divb
sbb
das
bound
lock
dec
jge
add
call
adc
lock
ja
loopne
inc
pushf
movsl
jno
push
xchg
sarb
or
push
fisttpll
or
or
add
push
loope
add
bnd
cld
xchg
adc
daa
mov
xchg
popf
fistps
and
dec
shll
sbb
lcall
scas
mov
and
cld
int
mov
mov
sub
mov
adc
xlat
pushf
mov
xlat
mov
cli
das
jne
mov
push
inc
mov
dec
cmp
clc
and
imul
or
lret
adc
add
mov
out
lcall
aaa
int
xor
es
test
mov
mov
push
loope
dec
in
scas
int3
test
stos
aaa
sbb
mov
lahf
lcall
int
sub
xchg
dec
data16
mov
mov
mov
mov
call
pushf
test
push
push
inc
sub
shr
add
faddl
sub
fwait
aaa
jp
movsl
loope
lcall
mov
jp
adc
mov
mov
mov
add
pushf
and
mov
insl
dec
lea
in
pop
rclb
lea
adcl
repnz
pop
insl
inc
orl
clc
lods
insl
repnz
cmpsb
cld
mov
lea
adc
notb
ljmp
negl
push
stos
mov
jp
popa
repnz
cmp
xorb
push
cmc
lods
lods
sub
dec
pop
popa
mov
dec
das
cmp
xor
gs
sbb
out
sbb
outsb
rcrl
dec
iret
mov
insl
ret
mov
push
aaa
add
or
pop
arpl
push
pop
pop
adc
stos
or
and
mov
xchg
incb
sbb
in
inc
or
daa
fists
fwait
mov
add
les
call
lret
out
sbb
push
icebp
pop
push
add
push
in
dec
fcompl
add
pushf
int3
jl
cmp
popf
mov
sbb
xor
call
jge
insl
into
sub
jae
stos
call
cmp
push
inc
fnstenv
repz
cmpsl
pusha
xor
lds
sub
es
jge
add
or
movsl
jle
sbb
inc
outsb
fsubrs
mov
jns
bnd
in
outsl
pop
jb,pn
lret
inc
pop
out
rcrb
jmp
test
fcomps
mov
sbb
ds
jl
pop
cltd
das
sahf
mov
dec
mov
fs
adc
out
addr16
popf
imul
fs
adc
fidivrs
bound
pop
outsl
adc
mov
pop
jb
into
mov
shl
or
test
mov
xchg
jne
xchg
add
add
fnstcw
pop
mov
in
sbb
sbb
cli
idivb
jb
xor
xlat
loope
out
xchg
movsl
call
das
xor
lock
add
daa
idiv
jno
and
cmpsl
xor
mov
push
xlat
xchg
fnstenv
fs
push
cltd
mov
int3
fdiv
movsl
pop
xor
pop
jno
xor
stos
leave
and
out
pop
lds
les
sub
lds
lahf
iret
mov
push
mov
rcrb
mov
loope
repz
mov
imul
test
push
sbb
scas
and
push
lahf
cltd
imul
push
xchg
rcr
sbb
movsl
jno
mov
dec
sbb
imul
das
int3
mov
mov
ja
andb
daa
ljmp
mov
pop
sub
outsl
pushf
test
jno
sub
or
lods
nop
add
in
daa
mov
repnz
xchg
daa
lcall
jae
xchg
add
aaa
cltd
xchg
addl
push
or
mov
ret
pushf
cmp
cwtl
or
mov
in
xlat
pop
in
xor
dec
outsb
in
adc
lret
xchg
fwait
pop
sahf
mov
mov
cwtl
and
xchg
in
pop
insl
out
mov
loop
xchg
mov
mov
pop
pop
mov
daa
mov
xchg
lahf
mov
nop
inc
mov
push
mov
lock
mov
fdivl
jle
loop
mov
fimull
lock
pushf
xor
ret
daa
inc
out
inc
repnz
adc
mov
xor
jl
cmp
sub
mov
adc
es
inc
sub
pop
mov
je
pop
xchg
xlat
test
dec
jl
cmp
fldenv
jbe
or
pop
popa
mov
test
inc
loope
dec
rcrl
aad
jmp
shll
mov
data16
jno
sub
shl
mov
test
push
and
xchg
scas
cli
push
loope
push
test
sahf
mov
push
mov
imul
popa
mov
popa
js
and
xor
jg
mov
adc
cmpsl
data16
bound
and
ss
push
cltd
stos
jnp
sbb
jl
subb
fwait
in
inc
pop
jecxz
mov
repz
in
mov
ljmp
jmp
lods
movsl
mov
jecxz
inc
jmp
jbe
mov
xchg
movl
sub
xchg
push
call
ret
or
mov
mov
fistps
add
lods
push
popa
mov
pop
mov
outsb
add
andl
icebp
lock
or
ror
and
add
xchg
in
clc
push
jge
add
incl
pop
ja
push
bound
sub
ret
rcr
mov
mov
push
xor
aad
mov
clc
jp
stos
clc
and
mov
sarl
inc
adc
or
pop
mov
roll
adc
mov
inc
shll
sub
mov
or
lret
lcall
mov
out
insl
mov
jb
dec
xor
fcmovnb
xor
mov
notl
push
dec
dec
and
cmp
stos
jnp
ljmp
pop
lret
mov
add
xchg
inc
sub
mov
jmp
and
and
add
mov
xor
flds
or
xchg
mov
jp
push
push
or
mov
cmp
adc
in
sub
lcall
mov
loopne
lods
in
mov
aaa
add
aaa
sbb
mov
es
fisubrl
jg
aad
jl
fs
mov
cld
xchg
stos
out
testb
movsl
jb
sbb
cli
or
mov
mov
mov
insl
adc
jo
out
and
inc
xchg
pop
test
bound
push
rcrb
cli
cmp
xor
fs
scas
test
pop
loope
int3
xor
mov
mov
lea
loopne
push
xor
pop
lods
mov
push
xchg
sub
pusha
in
mov
sub
std
cmp
in
and
scas
push
mov
lea
pusha
fists
cmp
sub
xlat
xor
rolb
lock
xchg
add
add
sti
adc
adcb
mov
pop
adc
data16
lahf
sbb
add
push
fucomp
push
js
add
mov
test
test
test
mov
xor
jb
inc
std
cmp
scas
lods
insl
es
out
and
test
call
xor
jp
call
dec
jo
add
jae
push
das
mov
and
test
and
pop
dec
mov
cmp
fisttpl
movsb
stc
cmp
cmc
adc
add
fstps
sub
in
adc
sbb
outsb
cmpsb
outsb
mov
rcrl
pop
mov
sbb
cld
jno
sub
cmp
fsubrl
jmp
cmpsb
cwtl
popa
aas
leave
xor
cmpsl
inc
lock
lret
shrb
test
shl
rorl
pop
fistl
sub
adc
das
fstps
jno
xor
mov
in
mov
rorl
dec
or
dec
push
inc
inc
vpshuflw
in
es
das
sbb
popf
imul
mov
loope
loopne
imul
fwait
in
mov
mov
jmp
mov
pop
mov
add
dec
cmpl
mov
push
push
xchg
xchg
ret
lods
jb
bound
fimull
sti
add
sti
xchg
sbb
fwait
scas
and
test
mov
aaa
or
sub
js
cmpsb
push
clc
stos
popf
add
push
fcmovbe
mov
adc
imul
mov
movsl
roll
pcmpgtw
mov
cld
stos
aam
sar
sbb
mov
adc
lods
push
pop
stos
xchg
pop
add
dec
negb
lret
push
lock
pop
lods
sbb
jo
fnstenv
imul
pop
adc
outsb
mov
jae
and
jb
xchg
lcall
pushf
fwait
insl
dec
lcall
xor
mov
cmc
sbb
xlat
push
mov
or
out
sbb
popf
mov
mov
rcrl
in
and
mov
leave
cmp
mov
sbb
adc
pop
stos
sub
jno
jo
mov
xor
adc
insl
int
mov
jecxz
xchg
lock
sbb
aad
mov
movsl
sbb
xor
dec
adc
mov
movl
push
jp
rorb
push
pushf
inc
loop
popf
jno
jmp
mov
repz
aad
push
xorl
pop
sub
inc
cmp
sbb
dec
aam
out
xchg
out
add
dec
push
push
iret
pop
out
dec
inc
mov
imul
nop
jno
jle
jno
ja
mov
push
shrb
shlb
mov
out
fcomip
xor
cmpsb
jns
pop
fnstcw
or
jo
pop
pop
add
test
adc
adc
pop
andl
pop
or
test
hlt
and
or
push
adc
imul
and
aaa
or
mov
inc
push
sub
pushf
cmp
push
push
pop
les
cltd
push
int3
mov
insb
adcl
shlb
xchg
and
mov
pop
sub
sub
push
pop
mov
hlt
bound
dec
out
popa
call
xchg
inc
cmp
arpl
insl
dec
dec
sub
inc
nop
fidivrl
and
mov
jmp
jle
lahf
sub
xor
adc
adc
xchg
inc
loopne
addb
cmp
test
pushf
ja
dec
sbb
es
cli
mov
inc
and
icebp
bound
or
adc
cmp
stos
pop
mov
pop
jae
mov
dec
xchg
lods
mov
daa
or
sbb
divb
dec
push
sahf
cmpsl
dec
add
rcll
in
lock
bound
ss
cwtl
mov
stc
dec
shlb
cmc
inc
fwait
inc
icebp
cmp
inc
xorl
popa
rcl
push
mov
mov
jmp
aaa
sbb
sbb
cmpsb
push
mov
out
push
adc
imul
mov
xchg
repnz
mov
pop
out
xchg
es
lods
sbb
add
xor
fildl
add
pop
cmpsb
xchg
lcall
mov
mov
jno
pop
jbe
mov
movsw
stc
xchg
dec
lcall
outsl
adc
data16
repnz
dec
jb
lret
popa
or
add
loop
adc
jp
stos
aaa
pop
arpl
mov
pop
push
mov
pop
mov
bound
inc
inc
test
data16
ret
out
xor
xchg
xor
xchg
jno
add
cld
jle
mov
fucomi
addr16
or
cmpb
xchg
inc
mov
cmp
mov
inc
pushf
addr16
dec
sahf
or
mov
push
out
xor
mov
ljmp
idivb
push
push
mov
cmp
stos
lods
adc
cmpb
xchg
cmp
int3
aam
add
fdivl
pop
cmpsb
cli
inc
adcl
xlat
or
scas
inc
outsb
outsl
jb
or
adc
mov
leave
stos
cmc
int
mov
cmpsb
dec
or
and
ja
mov
cltd
mov
xor
add
sbb
lahf
in
inc
loope
out
repnz
pop
pusha
shlb
mov
pushf
sahf
jge
or
jmp
je
rolb
pushf
mov
sbb
lods
dec
sbb
cwtl
lea
xor
adc
inc
insl
xor
pushf
lret
out
stos
add
ret
jae
xchg
dec
fs
and
pop
fsubp
daa
ss
jb
fbstp
outsl
inc
lods
insl
xor
in
push
or
sbb
mov
pop
in
jb
fidivrl
rcr
std
cltd
and
sub
xor
or
adc
cld
mov
daa
call
pop
jle
push
xchg
xchg
pop
mov
sub
add
stos
shlb
mov
cmp
mov
and
mov
and
insl
test
gs
adc
mov
mov
adc
lret
pop
push
in
pushf
mov
lahf
mov
jae
insl
xchg
out
mov
push
or
cwtl
mov
xor
push
pop
iret
add
icebp
mov
mov
adc
dec
mov
lods
pusha
loope
jg
andb
aaa
shlb
repnz
popa
mov
pop
adc
lods
repnz
out
imul
inc
inc
xchg
les
lods
int3
jne
fisubs
mov
sub
dec
dec
lock
mov
sbb
int3
xor
lret
aaa
dec
inc
add
lahf
jbe
jno
and
loop
in
iret
stc
arpl
aam
dec
push
dec
xor
cs
mov
cmp
movsl
out
pop
insl
rorl
scas
push
fisubrs
out
sbb
jae
insl
in
out
imul
lea
push
outsl
push
mov
lahf
mov
out
mov
insb
lods
sub
dec
dec
test
jbe
nop
mov
pop
dec
dec
cmp
cmp
add
sub
fistl
xor
sub
xchg
addr16
lret
cmc
scas
inc
cltd
jno
stc
xchg
in
movsb
cld
fmuls
push
aaa
mov
nop
nop
negl
ss
dec
xchg
lods
pop
bswap
adc
dec
mov
dec
mov
push
out
pushf
inc
mov
fldt
mov
adc
pop
mul
xor
les
orb
fs
insl
cmp
jns
es
adc
sbb
insl
gs
mov
ja
adc
ret
and
adc
test
pop
sti
mov
mov
test
xchg
movsl
add
int3
addr16
fbstp
push
push
stos
adc
cmp
xchg
sub
push
mov
je
xor
sbb
xchg
aad
cli
lods
outsl
fildl
scas
dec
popf
add
ljmp
xor
in
out
cmpsb
xchg
sub
push
int3
pop
gs
dec
and
add
jl
add
mov
stos
cmpsb
out
jge
in
mov
insl
leave
cltd
daa
mov
adc
fisttpl
fiaddl
cmpsb
adc
inc
sub
xlat
xor
movl
inc
cmpsb
adc
mov
mov
dec
outsb
push
jb
or
repnz
inc
xor
ret
adc
mov
inc
repnz
cwtl
pop
adc
add
mov
jecxz
fwait
xor
ret
lcall
jno
loope
rorl
dec
sbb
mov
loopne
adc
adc
xor
dec
pop
lock
cli
xor
mov
xchg
leave
and
mov
sub
lahf
movsl
inc
cmp
fisubrs
in
pop
stc
and
xor
inc
in
push
pop
and
popa
lods
adc
pop
inc
repnz
repnz
maxps
dec
rclb
xor
stos
and
jns
push
sbb
mov
in
pop
mov
fs
sbb
mov
cltd
sbb
gs
xor
lock
dec
and
mov
push
mov
adc
fcomps
mov
mov
pop
arpl
fidivrl
xchg
or
sti
xchg
sti
es
int
popa
lret
pop
jb
std
pop
and
sti
lds
pop
adc
adc
movsl
sbb
adc
cmp
mov
push
xchg
xchg
jbe
cmp
and
imul
push
push
faddl
fisttpll
pop
adc
mov
repnz
dec
add
xchg
sub
sbb
dec
lods
mov
stos
push
adc
adc
jl
test
orb
and
mov
pop
cmpb
cmpsl
push
jge
mov
sahf
add
pop
ficoms
sub
popa
dec
insb
shrl
fsubr
cmpsl
push
dec
inc
fwait
and
movsl
stos
dec
cli
das
and
pop
mov
int3
mov
loop
xor
in
lock
in
aas
arpl
xor
xchg
mov
filds
mov
movsl
cmp
aas
inc
sahf
mov
dec
xlat
shlb
xchg
dec
bnd
in
sub
mov
negb
mov
imul
dec
push
pop
mov
gs
or
jbe
cmp
pop
cmp
cmpsb
repnz
daa
xchg
or
mov
push
scas
xchg
xchg
adc
pushf
sbb
cld
or
xchg
mov
mov
jb
pop
add
iret
into
pop
mov
jge
ss
jle
or
sbb
shlb
ljmp
xchg
sbb
loopne
and
pushf
andb
movsl
sub
mov
xor
cmpsb
test
ficoml
add
sub
out
loope
cltd
mov
push
push
les
jb
outsb
fs
mov
movsl
pop
loope
fsubs
adc
xor
popa
fcoms
or
adc
or
loope
push
sbb
sbb
repnz
call
pop
xchg
pusha
scas
pop
mov
int3
hlt
sub
pop
lcall
cli
push
and
lock
dec
movntq
out
jo
lea
xor
ret
pop
nop
jo
sbb
mov
xor
test
cld
sub
and
repnz
mov
xchg
lret
or
add
cmp
mov
cwtl
sub
popa
sub
dec
cmp
push
fdivl
in
push
pop
sub
and
lret
iret
insl
int
xor
push
and
leave
repnz
subb
mov
push
xor
sbb
jge
popf
push
sbb
ficomps
and
loopne
sub
mov
mov
push
or
mov
pop
gs
and
inc
jne
repnz
sbb
je
iret
or
pop
pop
xchg
dec
loop
or
cmpsb
test
sub
testb
movsl
pop
xlat
mov
inc
push
gs
stos
mov
in
xlat
mov
gs
bnd
pop
outsb
repnz
sub
stos
jl
jb
add
or
xor
mov
orb
sbb
jb
push
gs
hlt
in
outsb
pop
fwait
lea
or
and
bound
inc
mov
sahf
int3
idivb
cltd
adc
shlb
lods
in
lock
fwait
movsb
cltd
shl
push
adc
pop
push
push
sub
sub
outsb
add
gs
sbb
cmp
xor
add
adc
cltd
jno
mov
fldt
cmp
mov
sub
lods
test
cmp
mov
nop
out
jmp
daa
mov
aam
mov
loope
test
xchg
call
lahf
or
das
fimuls
lret
aaa
sbb
dec
outsl
sbb
xchg
bound
or
int3
sub
fildll
sub
cli
add
mov
incl
push
imul
and
stos
es
scas
and
icebp
imul
xchg
hlt
and
jnp
add
mov
adc
and
jb
and
imul
sahf
movsl
popf
cmpsl
pop
movsl
and
sub
insl
sbb
pop
sbb
ret
fstl
sbb
dec
inc
dec
mov
jl
sbb
xchg
fwait
pop
les
push
aad
imul
lds
mov
or
clc
push
out
fxch
jmp
mov
stos
mov
adc
cmp
aaa
aaa
adc
repnz
dec
xchg
cmpb
push
jnp
and
push
mov
sbb
jno
pop
out
jge
shlb
and
aad
fdiv
repnz
outsl
pushf
imul
mov
dec
or
pop
int
mov
cmp
pop
xchg
mov
adc
jno
sbb
dec
out
lock
cmc
sub
inc
mov
test
pop
jno
and
dec
lahf
sub
adc
mov
mov
stos
mov
stc
in
je
dec
bnd
test
jp
xchg
cld
arpl
addr16
jb
lock
dec
jge
fs
clc
xlat
aam
cmp
scas
mov
push
ret
push
test
repnz
jo
arpl
push
inc
icebp
add
push
repnz
push
cmpsb
stos
dec
lret
mov
cltd
sbb
lret
push
mov
outsl
and
xor
push
cmp
pop
xor
nop
push
int3
or
jecxz
repz
test
mov
xor
sub
imul
push
fsubs
ret
roll
int
testl
daa
clc
xchg
jmp
sub
aaa
jmp
xor
add
cmovae
mov
mov
ret
xchg
aaa
filds
fists
and
mov
mov
pop
test
and
fcoms
imul
popf
fs
repnz
cltd
push
lcall
les
fwait
imul
sbb
and
fs
sbb
mov
jge
inc
in
sub
ficoml
jo
mov
xor
rcll
sbb
jo
loope
in
pop
jmp
push
mov
pop
cmpsl
cmp
mov
out
dec
movsl
or
outsl
les
dec
dec
jne
pop
fimull
or
mov
rorb
sbb
fisttpll
ret
push
xchg
fdivp
clc
and
push
sbb
xchg
sub
clc
dec
repnz
pop
sbb
mov
fidivl
sub
pop
add
gs
and
mov
adc
or
int
sbb
fsubrl
in
push
pusha
mov
ds
adc
sbb
movsl
pop
jne
stos
dec
out
mov
pop
outsb
stos
lahf
xor
sarl
xchg
stos
sub
movsl
xchg
pop
adc
xor
fwait
jmp
add
lahf
loope
and
jbe
jb
adc
mov
mov
out
xchg
outsl
mov
clc
icebp
pushf
icebp
sbb
iret
push
cwtl
fisubs
pop
xchg
lret
xor
and
xor
addr16
mov
aaa
dec
xor
shll
and
ret
pusha
mov
aam
push
in
fs
addr16
adc
adc
pushl
test
jg
mov
lahf
or
inc
insl
sub
hlt
mov
in
loope
scas
popa
fadds
imul
rorb
fisubrl
or
mov
mov
jb
loope
imul
ja
bound
and
das
jb
or
fsubl
fistps
movsl
rcll
shr
mov
lock
addb
jle
sbbl
aam
pop
inc
ret
mov
inc
cmp
sbb
xlat
cmpsb
sub
xor
sub
push
sbb
ds
pushf
movsb
and
lods
lds
push
add
xchg
and
lods
cmp
ficompl
loope
xchg
pushf
xchg
std
mov
push
inc
mov
push
inc
gs
or
frstor
addr16
insl
cld
jne
and
push
dec
sbb
clc
mov
pusha
int3
jge
xchg
pushf
sarl
mov
dec
sti
mov
adc
push
dec
mov
and
adc
jl
mov
into
pop
pop
mov
sti
mov
mov
xchg
fcmovb
vpunpcklbw
push
or
les
popf
imul
push
cmp
jg
xchg
dec
repnz
movsl
cmp
cmpsb
lahf
sbb
pop
jecxz
leave
jle
movsb
xor
add
cltd
bound
dec
int
out
add
or
and
jae
jg
shrl
int3
mov
sbb
icebp
mov
movsb
xchg
sbb
arpl
mov
xchg
jnp
sub
addr16
adc
lock
jb
dec
jnp
jp
inc
es
mov
pop
test
or
and
and
mov
mov
cmc
jmp
fiaddl
repz
pop
xchg
fs
sbb
xor
lock
dec
das
jb
add
and
sbb
loope
in
and
xchg
cmp
cmpb
sti
mov
sub
js
mov
fstp
pop
mov
sbb
je
lahf
and
data16
aas
fcomp
mov
ficoml
sub
mov
shrb
cmpl
jecxz
push
in
mov
clc
add
lret
dec
or
hlt
std
push
in
movsl
gs
push
pop
jns
and
les
test
stos
sub
inc
notb
scas
xchg
jo
into
push
out
lea
jg
dec
or
outsb
mov
cmpsb
pushw
dec
test
stos
shlb
push
sbb
pop
mov
stos
mulb
push
pop
in
ret
data16
mov
fmuls
push
stos
int
shlb
outsb
mov
add
mov
or
test
mov
push
mov
pop
mov
shlb
call
and
movsl
data16
sbb
xor
data16
jnp
clc
or
xlat
test
adc
pushf
jge
or
jns
setp
ret
fs
outsb
or
dec
push
add
dec
push
sarb
decb
dec
stos
cli
mov
into
mov
aam
dec
jo
fcmovbe
shll
inc
hlt
gs
pop
movsb
js
push
and
inc
sarl
data16
dec
xchg
test
shll
inc
shrb
sbb
je
add
or
sub
in
mov
ret
mov
xor
in
sbb
push
jo
push
ljmp
outsb
xor
mov
xor
push
outsb
sub
es
movsb
loop
gs
inc
mov
sbb
ret
aas
adc
or
cmc
sbb
mov
pop
sub
xchg
stos
inc
in
xchg
ja
insb
xchg
mov
gs
mov
jl
mov
add
stos
mov
dec
jo
decl
bound
outsb
xchg
sti
and
sbb
xor
aam
pop
lea
lahf
clc
movsb
pop
adcb
mov
or
aas
mov
std
push
mov
lret
movsl
insb
dec
push
pop
clc
loope
adc
lret
inc
aam
stos
xlat
mov
outsb
adc
dec
dec
ret
stos
jge
mov
add
jae
rcl
cmp
cmp
neg
jo
add
xchg
push
stos
lods
pop
lods
in
sbb
pop
scas
sbb
mov
mov
dec
cli
mov
mov
mov
pop
fdivrs
fsubrl
adc
mov
xchg
mov
mov
lods
mov
int3
lret
cmp
adc
jnp
push
mov
inc
xlat
pop
mov
jecxz
xchg
fistl
xor
outsb
mov
push
lods
popf
jo
hlt
daa
mov
mov
fs
insl
arpl
push
push
enter
mov
cmc
and
stos
out
xchg
outsb
stos
cmp
inc
fs
test
std
stos
in
and
ja
gs
jno
push
jg
in
xor
sbb
sahf
sub
aas
outsb
cmp
aaa
jo
or
xchg
sub
and
xchg
lods
push
insl
loope
xor
lahf
cmp
mov
loope
jge
mov
sti
push
jns
jo
sbb
addr16
adc
xchg
mov
sbb
add
push
sub
or
add
fmull
sbb
fs
mov
jo
inc
lea
xchg
adc
outsb
adc
sbb
leave
add
inc
mov
dec
iret
clc
sbb
in
in
out
test
ss
add
cmpsl
movl
jbe
adc
dec
pop
cmp
jle
ret
adc
out
fildll
stos
outsl
dec
mov
mov
add
sbb
imul
fwait
or
lods
leave
pop
ds
jno
les
inc
and
ds
rcl
inc
or
out
push
jno
xchg
in
aaa
mov
ret
pop
cmp
mov
sbb
add
or
sbb
lret
ss
icebp
sbb
loope
std
rolb
or
lods
sub
pop
es
imul
xchg
notl
in
pop
popa
cmp
arpl
arpl
sub
mov
pop
xor
in
ja
adc
das
adc
cmp
inc
out
sbb
or
sbb
mov
lods
and
test
gs
into
adc
inc
in
push
xor
fstp
fcoms
data16
mov
fmuls
push
mov
dec
fisttps
in
jo
mov
fisubrs
sbb
xchg
fimull
sbb
or
mov
pop
test
inc
jmp
negb
jns
lahf
test
stos
ror
int3
jo
dec
push
sbb
movsb
push
stos
lahf
and
cmp
stos
and
mov
jl
inc
cmp
in
jno
push
pop
inc
mov
lcall
loopne
push
mov
and
in
fstl
in
stos
fcoml
aam
jo
mov
shll
outsb
cmp
push
mov
leave
outsb
jnp
pop
shrb
or
es
fisttpll
imul
pop
shlb
adc
popf
movsl
cmp
jns
pop
mov
mov
in
mov
mov
adc
loope
push
xor
mov
sbb
int
push
xchg
ljmp
push
dec
popf
cmp
and
mov
add
fidivrs
xchg
cld
rcr
mov
loope
test
sub
push
pusha
loopne
or
in
dec
pop
mov
add
cmp
jno
call
inc
imul
ret
rol
cltd
cmpsb
ret
hlt
push
jge
pop
cmp
repnz
outsl
arpl
xchg
pop
sub
in
and
cmp
mov
arpl
ficompl
repnz
shlb
into
inc
leave
mov
cli
pushl
pop
xor
stos
dec
pusha
insb
rcrb
gs
xchg
mov
jne
mov
lock
repz
and
dec
dec
dec
stos
xor
sub
mov
cld
shll
inc
dec
xor
stc
mov
out
das
add
ja
xchg
or
call
push
insl
inc
or
fcomp
hlt
mov
sbb
loop
fldt
in
bound
sub
shlb
ljmp
fwait
int3
sbb
push
adc
fidivrs
fadds
les
cmp
mull
fisubrs
imul
bound
fldcw
aaa
push
mov
add
adc
sub
fisttps
lods
pop
mov
add
xor
mov
rolb
dec
dec
sub
push
popa
xchg
sahf
xchg
dec
in
fnstsw
mov
pop
pop
ret
sbbb
loope
xchg
mov
dec
mov
sbb
jge
or
ljmp
or
ja
fisubl
sbb
in
loope
mov
sbb
aaa
sti
adc
sub
fidivrl
dec
mov
push
ret
pop
lock
cmp
mov
jae
push
or
dec
dec
jnp
lock
jl
push
lahf
adc
mov
es
jno
inc
decb
mov
lds
aaa
test
and
or
xchg
mov
mov
sbb
push
jns
jb
adc
fnsave
xchg
mov
mov
push
mov
mov
gs
mov
sbb
movsb
mov
dec
lret
nop
stos
sub
ja
mov
imul
or
cmpb
sub
jb
iret
pop
add
outsl
mov
xor
jmp
mov
mov
dec
sbb
imul
or
sahf
inc
loopne
out
cmp
lods
pop
fbld
mov
adc
sar
stos
cld
adc
pop
fdivs
test
aas
nop
loope
and
push
lahf
cmp
cmpsl
popa
daa
mov
aam
stos
dec
cmpsb
dec
lock
pop
cmp
add
ret
pop
jnp
rcr
int3
ret
pop
ljmp
add
push
inc
and
sbb
push
pop
jg
pusha
sbb
mov
mov
mov
aaa
push
adc
jb
mov
lea
lcall
popf
sub
movsl
sbb
push
out
sub
in
add
jp
lcall
mov
insl
fwait
mov
sub
xchg
daa
push
divb
movsl
adc
loop
sahf
mov
jl
mov
mov
inc
lods
and
gs
and
adc
loopne
adc
push
cltd
cltd
xchg
and
loope
mov
or
jnp
outsl
test
push
pushf
pop
or
or
add
call
and
dec
clc
data16
sub
in
addr16
aam
sbb
pushf
divl
mov
cmc
je
mov
outsb
mov
inc
pop
jb
xchg
adcb
lcall
inc
icebp
adc
mov
mov
lock
sub
cmp
les
jne
jecxz
dec
call
pop
mov
mov
sbb
aas
xlat
pop
mov
fistpll
pop
xchg
divl
stos
push
jo
mov
jmp
mov
cmc
xchg
xorl
jo
lcall
cld
and
movsl
pop
cmpb
arpl
mov
data16
es
or
subl
push
push
or
xor
push
in
dec
mov
cmp
jg
dec
out
and
imul
sbb
pushf
mov
subb
mov
cmpsl
imul
outsl
cmp
dec
scas
mov
jno
int3
dec
cld
lret
test
pushf
and
mov
pop
popa
adc
and
hlt
and
sahf
inc
adc
sarl
ljmp
sub
lret
loope
mov
bound
bound
arpl
pop
inc
pusha
cmpsl
sub
fiaddl
jb
push
mov
dec
rclb
push
mov
test
inc
lret
lods
popa
mov
lcall
data16
out
and
mov
dec
cld
mov
add
in
rol
dec
dec
inc
jno
cmp
dec
and
jb
xchg
mov
lea
xchg
int3
or
loope
push
adc
mov
xchg
xchg
pop
daa
jp
cmp
or
xchg
stos
pop
hlt
cld
mov
outsb
out
rcrb
adc
and
mov
xchg
insb
push
mov
jnp
dec
int3
cmpsl
pop
add
lods
or
es
arpl
inc
std
dec
add
mov
ja
lea
push
mov
icebp
jns
cmc
and
mov
add
sbb
mov
adc
jle
cmp
inc
jns
lock
xor
jmp
xchg
jo
sarl
in
icebp
lcall
adc
mov
mov
in
add
adc
xchg
and
shlb
dec
sbb
pop
int
cwtl
idivl
mov
dec
adc
cmp
push
pop
mov
out
int
cmp
cli
popa
push
fs
add
dec
mov
in
sub
and
cmp
sbb
mov
or
dec
push
outsl
jmp
cmpsb
call
gs
lods
in
xchg
dec
cli
jno
lret
adc
movsl
mov
pop
int3
stos
mov
dec
stos
sbb
xchg
in
cmpsl
inc
pop
mov
inc
movsb
imul
push
push
push
jecxz
pop
int
cmpsl
and
int
pop
call
dec
jbe
idivl
push
inc
je
adc
shll
frstor
jne
fnsave
psraw
dec
xor
fstps
dec
dec
dec
movsl
or
jno
sub
stos
mov
outsl
clc
imul
int
loopne
add
mov
div
outsb
and
mov
mov
mov
inc
mov
sarb
loop
sbb
sbb
pop
dec
cld
dec
fldt
enter
test
and
popf
sahf
pop
pop
fwait
scas
xlat
imul
repz
outsb
inc
add
out
sub
xchg
inc
loope
imul
or
mov
mov
xor
movsl
ret
mov
psubd
jno
call
pop
ret
in
sub
cmp
mov
cli
in
and
xor
and
movsb
or
mov
hlt
sub
fs
loopne
in
mov
mov
sarb
test
push
pop
mov
scas
imul
pop
xchg
xor
sbb
shll
loope,pn
xlat
pusha
outsb
and
fsubrs
inc
in
cmp
fisubs
out
xchg
out
outsl
pop
add
pop
jge
sbb
mov
aas
lock
jnp
hlt
jno
inc
arpl
mov
mov
xlat
xchg
jb
stc
stos
movsl
cmp
or
les
jb
leave
mov
mov
sbb
das
mov
sbb
ss
ret
fs
push
int
jnp
outsb
xor
in
adc
or
dec
shlb
push
out
push
inc
xor
fimull
xchg
xor
imul
movsl
ja
mov
mov
xor
and
dec
push
adc
mov
aaa
ja
sbb
pop
mov
stos
cmpl
insl
or
mov
in
call
dec
or
aaa
jo
xor
cltd
hlt
jge
sbb
mov
sarl
notl
jno
and
mov
or
cmpsl
push
cmp
nop
push
aam
jecxz
mov
mov
adc
cli
in
mov
jge
in
sbb
insb
add
inc
sahf
imul
ret
nop
xorb
pop
aam
jno
push
xchg
cltd
jb
daa
leave
xor
push
jp
mov
pop
xor
push
repz
pushf
inc
mov
sbb
mov
add
or
rcrl
cmp
cltd
out
jo
or
mov
out
push
mov
movsb
jl
and
enter
dec
leave
sbb
mov
xchg
mov
js
int
daa
dec
bound
test
fwait
addr16
jb
mov
sub
or
mov
mov
pop
aad
insl
adc
ljmp
sahf
negl
or
inc
jp
jmp
cmpsl
dec
fmull
sahf
subb
lock
popa
lahf
lret
jno
fwait
sbb
xchg
out
negb
mov
scas
rorb
test
mov
enter
mov
and
pop
mov
andb
add
mov
xchg
dec
les
push
fists
or
pop
sub
sub
sub
sub
sti
cmc
xchg
mov
mov
push
dec
mov
out
out
add
ret
mov
dec
fisubrl
jne
mov
xchg
inc
loop
inc
popf
outsl
sbb
rcr
xor
push
dec
push
arpl
in
gs
and
sbb
gs
stos
test
jno
adc
mov
fmull
in
dec
mov
jg
xor
xor
sbb
cltd
sbb
mov
cmpsl
js
sub
fwait
adc
dec
and
js
xchg
push
stos
adc
add
cmp
xor
aaa
mov
push
mov
in
adc
inc
pop
jbe
add
sbb
mov
lds
jns
or
cmp
ret
jp
or
insb
fisttpl
push
testb
xor
sub
daa
fsubrp
xor
push
xchg
imul
les
jo
cmpsb
add
cmpsl
jo
jbe
inc
xor
cmp
and
test
aaa
faddl
mov
lods
fs
sbb
mov
stc
xchg
mov
push
cmp
enter
mov
rcll
popf
mov
ret
lret
or
decb
popf
pushf
rorb
rclb
lods
mov
push
pop
add
in
xlat
jecxz
cli
pushl
lea
nop
xlat
push
add
dec
mov
mov
out
adc
insl
pop
lcall
insl
jb
rcll
push
xchg
dec
bound
xor
call
testl
push
repz
stos
mov
pop
cmp
mov
aam
aad
and
loope
dec
shlb
jne
jbe,pt
cmpsb
iret
mov
movsl
push
mov
mov
loopne
adc
xor
add
out
mov
mov
int3
out
mov
or
lret
adc
int3
push
push
xchg
cmp
mov
popa
and
sbb
mov
cmpsb
xor
mov
popf
sti
iret
lock
add
call
mov
inc
mov
jle
and
arpl
cmpsb
iret
das
mov
faddl
push
sbb
mov
xchg
int3
pusha
int
into
pop
stos
xor
adc
ficompl
add
cmpb
mov
mov
loope
jb
stos
pop
mov
movsl
xor
jle
cltd
push
sub
dec
mov
loopne
and
mov
fstl
orl
bound
sbb
loope
hlt
mov
or
stos
pop
les
fildl
imul
sahf
sahf
inc
pop
mov
or
negl
mov
mov
lret
pop
mov
mov
pusha
ja
outsl
loope
add
cmpsb
repnz
mov
sti
xchg
aas
jno
aaa
and
movsl
jno
dec
pop
sbb
ja
add
jecxz
scas
lret
mov
jno
repnz
xor
stos
bnd
daa
inc
sub
dec
inc
mov
lock
inc
push
jg
mov
xor
adc
cld
jae
or
imulb
bound
leave
jnp
notb
push
inc
adc
jp
cld
push
mov
out
and
xchg
and
outsb
jnp
lea
pop
sbb
mov
and
inc
outsb
cld
in
mov
add
xor
xchg
mov
mov
inc
xor
inc
nop
repnz
lods
jo
jo
xchg
mov
int
mov
fidivs
aam
xor
sbb
push
cmc
dec
out
jle
fldl
scas
dec
cli
or
sbb
jno
rcll
or
ret
push
bound
lret
insl
das
push
popa
mov
sbb
in
and
jbe
jmp
shll
fsubrl
xlat
lock
mov
inc
icebp
inc
adc
add
mov
aam
xchg
jp
sbb
icebp
dec
repnz
repz
and
pusha
add
push
pop
sti
pop
test
jae
mov
cmp
adc
xchg
fwait
out
mov
or
test
lods
aad
in
ljmp
push
xorb
sbb
ret
popa
pop
dec
incl
inc
and
pop
mov
add
mov
movsl
pop
adc
loopne
ja
adc
jp
sti
ss
xor
scas
test
negl
pop
push
lods
adc
loopne
clc
loope
clc
xchg
insl
ss
sbb
xor
or
dec
lock
xchg
mov
xchg
dec
jg
test
jno
lret
shl
sti
push
pop
and
lea
sbb
jg
pop
mov
or
cmp
push
lods
paddw
stos
push
in
and
int
push
cmp
inc
stos
jno
test
push
popf
in
outsl
fmulp
daa
adc
fs
and
dec
xor
aaa
mov
das
sub
int
adc
xor
dec
test
sbb
xchg
or
repnz
mov
jl
lock
dec
scas
shrb
jo
sbb
in
das
sbb
fcomip
adc
fs
dec
cs
movsb
inc
inc
mov
fstpl
cmc
jnp
adc
fistps
xor
mov
popf
pop
popf
cs
mov
popf
mov
lods
fs
aaa
dec
and
loop
cli
outsl
sub
mov
lahf
push
ds
xchg
aas
sbb
push
sbb
jno
dec
xor
inc
mov
aaa
call
push
shrb
jb
xor
mov
dec
mov
lock
jo
mov
push
lods
push
mov
xchg
pop
loope
and
test
out
pop
mov
and
xchg
or
add
das
fsubp
xor
rorb
les
mov
repz
inc
mov
cmp
in
out
es
jo
sbbl
pop
les
shlb
int
mov
push
push
sti
ljmp
and
cs
stc
in
sub
jae
mov
fistl
mov
push
mov
adcb
icebp
xchg
mov
xor
pop
lea
popf
sbb
arpl
mov
sahf
int3
pop
push
sbb
cld
xor
sahf
cmpsb
in
push
xor
push
xchg
pop
xor
movsb
outsl
sbb
or
test
jmp
sbb
outsb
lock
xchg
jne
push
add
cs
adc
push
dec
call
dec
dec
repnz
icebp
pushf
popa
in
leave
sub
stos
fdivl
imul
inc
inc
jbe
popf
push
jb
mov
inc
notl
out
add
sub
cli
push
fdivp
lahf
mov
mov
push
cmpb
xchg
sub
in
popaw
mov
mov
and
add
leave
mov
outsb
dec
movsl
mov
pop
fidivl
xchg
dec
sbb
loopne
fdivrl
lods
imul
shlb
sbb
leave
aas
lods
sbb
dec
loopne
mov
imul
jg
clc
xchg
xchg
test
outsb
dec
dec
insl
insl
sbb
mov
add
mov
sbb
lahf
and
push
rorb
jle
xchg
cmp
push
sub
dec
fldcw
jl
outsb
fdivp
xor
pop
ss
and
cwtl
inc
adc
add
out
lea
loope
sahf
pop
imul
mov
cmp
xchg
sahf
adc
cmp
out
dec
mov
lret
out
mov
push
fldl
and
scas
sbb
es
bound
outsb
inc
scas
iret
iret
fistpll
icebp
cmpsb
xchg
sbb
lret
icebp
les
pusha
jle
stos
mov
clc
sub
mov
in
cmp
imul
lods
sbb
sbb
jge
mov
mov
push
jns
and
lods
pop
mov
shrl
sub
lea
mov
popa
jle
dec
cmp
xchg
dec
imul
gs
sbb
adc
jp
xchg
gs
mov
jb
push
stos
stc
push
cwtl
push
stos
stc
mov
jg
out
mov
mov
popa
sarb
push
in
push
ss
outsb
call
jne
sub
sbb
mov
gs
sahf
cmp
outsb
cs
popf
lods
sbb
jne
and
inc
pop
fistpll
stc
aam
in
repnz
nop
and
mov
and
sbb
or
clc
inc
sub
inc
and
ja
cmp
in
popf
outsl
dec
xchg
dec
movsb
push
mov
js
push
mov
pop
sub
ja
fwait
fs
sub
pop
lods
jbe
loopne
int3
sbb
or
push
jae
fisubrs
xchg
push
xchg
pop
jne
in
stos
loope
mov
dec
fildl
adc
popa
addr16
mov
xchg
lret
rcll
lock
adc
sbb
ss
or
xchg
movsb
push
mov
xor
xchg
inc
cwtl
mov
mov
mov
call
add
pushf
imul
inc
jecxz
cmpsl
push
lods
and
daa
cltd
mov
xchg
outsb
xchg
xor
dec
jns
push
outsb
fucomip
push
inc
imul
push
mov
gs
dec
imul
loope
jl
pop
cwtl
int
arpl
sbb
inc
mov
mov
adc
lods
stos
pop
xlat
fs
mov
mov
mov
adc
lret
icebp
mov
out
js
xor
pusha
cmpsl
in
mov
bound
cmp
and
and
dec
popw
mov
pop
xchg
insl
loopne
pop
cmp
push
fnstcw
mov
push
mov
cmp
inc
mov
andb
and
pop
xchg
adc
xor
fs
jmp
arpl
sub
push
xor
xlat
jo
lahf
jbe
dec
clc
mov
push
inc
dec
cmpsl
pop
shll
out
and
repnz
jmp
mov
add
xchg
push
lret
scas
out
xchg
repnz
mov
addr16
mov
sub
jl
cmp
in
push
xchg
xchg
ficomps
das
iret
inc
sub
pop
push
dec
adc
mov
fdivs
aaa
and
hlt
insl
pushf
fs
sbb
xchg
xchg
or
pop
xor
push
xor
inc
xchg
int3
or
test
pop
sub
and
divb
mov
repz
pushw
xor
xchg
fucomp
push
jge
jp
bound
inc
mov
sbb
or
sbb
sbb
inc
sarb
test
sub
inc
mov
lahf
ja
fwait
xor
sbb
fidivs
jne
inc
in
or
dec
sbb
ds
adc
mov
inc
hlt
push
xchg
lods
fcoml
sbb
lock
lods
xor
inc
arpl
mov
movsl
es
push
mov
or
imul
test
movsl
rep
movsl
addb
fidivl
push
jb
pop
in
mov
sub
adc
jb
push
je
icebp
mov
neg
cmp
ljmp
mov
mov
adc
xorb
aaa
frstor
fldl
loopne
sbb
push
and
sbb
jo
add
popf
xor
mov
fcompl
dec
lret
dec
xchg
aaa
mov
sbb
ss
sbb
loopne
mov
mov
mov
jns
adc
add
int3
sbb
loop
pushf
lcall
and
pop
test
push
enter
bound
mov
mov
div
movsl
and
test
sahf
imul
xor
fwait
lea
sbb
lods
inc
fisubl
sbb
gs
mov
mov
loop
cmpsb
ja
inc
addr16
pop
push
mov
popa
xchg
ljmp
sbb
mov
jno
jb
bound
sbb
pushl
mov
stc
pushf
out
stos
mov
lahf
pop
xor
out
xchg
rcl
mov
ret
rcrl
push
outsl
shr
divl
adc
push
insl
mov
lock
ja
jmp
mov
sub
push
inc
and
push
in
lock
xchg
pushf
leave
stc
movsl
lock
push
jl
mov
data16
fildl
lcall
int3
fwait
push
mov
pop
pop
in
mov
cmp
xor
stos
inc
push
mov
jmp
push
mov
and
cmp
cltd
je
push
fdivrs
jb
jmp
jp
jecxz
pop
jecxz
dec
xchg
enter
push
add
mov
sarb
push
inc
adc
lahf
cwtl
sbb
cs
pop
test
sbb
test
xor
or
int3
hlt
insl
inc
sarl
and
call
dec
inc
mov
cmpsb
pop
push
sub
sbb
mov
dec
adc
mov
pop
fldl
dec
fsubl
and
les
mov
pop
mov
xchg
mov
filds
xchg
fcompl
nop
gs
sub
lds
push
sahf
addr16
sub
sbb
arpl
test
test
sub
into
push
out
and
push
sti
pushl
imul
push
shl
rcr
mov
mov
push
or
imul
jmp
arpl
cmp
jo
inc
lds
or
or
add
pop
lds
push
mov
loop
out
mov
pop
push
lock
mov
jbe
sub
push
cmp
ja
dec
lcall
add
and
outsb
xor
push
xchg
mov
mov
sarl
sub
mov
jp
push
cmpsb
fadds
mov
test
dec
pop
xchg
xchg
mov
mov
daa
mov
shrb
mov
out
lods
mov
pop
lock
adc
jo
cmp
cmp
mov
arpl
imul
adc
mov
sti
sti
and
mov
call
pop
imul
inc
iret
sbb
mov
shrl
lret
cld
sub
daa
icebp
aad
and
stos
mov
dec
push
gs
and
sub
sbb
in
pop
out
lods
adc
mov
mov
sub
jae
mov
dec
add
fsubrs
data16
fidivl
or
rclb
mov
sbb
les
bound
add
push
iret
fbstp
sbb
imul
fists
call
cld
adc
xor
movsb
push
pop
mov
pop
mov
xor
loopne
data16
insl
ficoms
mov
or
pop
push
sub
mov
lods
adc
sahf
pop
pusha
inc
jno
bound
fcompl
push
push
inc
orb
jno
mov
mov
mov
mov
sbb
int3
movsl
push
inc
clc
sub
stos
dec
inc
rcr
mov
pop
cld
cmpsl
xor
inc
and
aam
lods
dec
inc
mov
loope
lret
pusha
out
mov
mov
push
mov
mov
mov
inc
stc
sub
loope
mov
mov
lods
jg
aad
fidivl
jbe
data16
in
pusha
arpl
outsl
aam
fisubrl
aaa
mov
pop
inc
jbe
comiss
mov
xchg
cmovb
mov
push
xor
jo
sub
repnz
stos
test
in
out
ret
jl
push
and
jo
jnp
popf
or
mov
lea
outsb
shll
mov
insl
mov
xor
xor
mov
push
sbb
aas
mov
mulb
loope
dec
mov
and
mov
or
mov
insb
dec
xor
mov
fstps
xchg
xchg
adc
cmp
leave
lods
mov
dec
dec
or
lods
jb
cwtl
jle
js
sbb
mov
and
xor
inc
pop
into
dec
rcrb
aam
push
dec
and
adc
sbb
jno
faddl
or
movsl
pop
cli
lock
adcl
mov
mov
in
or
xchg
ja
push
fs
in
pop
repz
mov
int3
rcrb
cli
sbb
pop
dec
hlt
daa
es
xor
pop
xchg
cli
fbstp
in
mov
lahf
pusha
mov
jb
pop
loope
mov
in
pop
imul
out
mov
pop
pop
adc
xor
insl
mov
inc
xchg
loope
std
cltd
arpl
cs
insl
add
and
mov
loopne
xchg
loopne
imul
xchg
stc
cmpb
shr
and
imul
cmp
loope
fadds
imul
test
pop
xchg
sti
testb
xchg
mov
nop
testl
pop
test
in
and
mov
gs
test
jne
adc
dec
mov
jno
add
mov
mov
push
sbb
xchg
lret
setne
pop
call
ret
xchg
mov
jle
xchg
in
in
mov
data16
dec
sub
icebp
dec
mov
fwait
sub
lds
and
adc
movsl
mov
popa
mov
addr16
pop
inc
pop
adc
inc
mov
push
push
push
mov
lahf
out
js
mov
stos
xchg
or
mull
jae
xchg
push
mov
lret
in
adc
mov
push
enter
mov
dec
loop
push
push
stos
out
in
das
iret
jecxz
sub
cmpl
test
jns
call
inc
outsb
jo
ljmp
arpl
jg
scas
test
stos
mov
outsb
aas
inc
outsl
test
popf
jo
jmp
loopne
movsl
mov
push
push
es
mov
xchg
mov
sbb
jecxz
push
movsl
or
in
test
iret
and
dec
stos
test
popf
fs
dec
sub
sub
stos
adc
lret
fsubl
subl
imul
movsl
sbb
adc
cmp
add
or
push
mov
sub
test
push
stos
std
mov
inc
or
mov
in
or
mov
ret
xchg
test
in
xchg
push
cwtl
mov
jb
loop
jae
mov
sbb
mov
stos
pop
imul
mov
stos
icebp
mov
mov
in
mov
fdivrs
negb
jno
mov
push
mov
ret
mov
and
mov
mov
and
sbb
mov
mov
sub
mov
inc
mov
mov
cmp
push
mov
xor
cmp
jnp
push
rclb
push
or
unpckhps
movsb
nop
pop
pop
mov
arpl
adc
xor
lock
ret
jecxz
and
sub
lcall
dec
jo
push
pusha
mov
mov
add
pop
dec
or
das
mov
adc
mov
dec
movsb
popa
repz
add
lret
sbb
lret
movsb
cmp
nop
sub
call
adc
test
sub
xchg
test
mov
stos
enter
es
add
adc
jl
xchg
push
xchg
fldcw
mov
add
loop
pop
imul
push
cmp
bound
dec
push
out
pop
pushf
dec
adc
movsb
push
xor
mov
das
push
fldenv
jb
insl
enter
clc
cmp
xor
and
mov
lahf
pushw
frstor
sbb
push
mov
push
scas
ds
dec
movsb
inc
jno
and
outsb
mov
push
cltd
pushf
push
arpl
pusha
xlat
movsb
int3
nop
push
daa
sbb
stos
push
mov
mov
or
enter
sub
test
out
and
mov
scas
jbe
push
cmp
xchg
hlt
test
popa
std
add
xor
add
and
adc
jecxz
icebp
mov
int
push
movsb
insl
shlb
lods
imul
push
push
call
push
push
mov
or
push
jo
mov
mov
mov
leave
jbe
xchg
mov
mov
lods
lods
in
pop
and
jle
into
jo
sbb
push
movsb
fwait
in
divl
push
sub
test
sbb
sbb
loope
out
xor
in
stos
xchg
jbe
sahf
cmp
sbb
scas
sbb
jo
insb
in
sub
lods
in
sub
sub
iret
lods
insb
stos
jmp
jo
lock
xor
icebp
xor
out
rcll
addr16
sbb
stc
inc
xor
repz
add
mov
popa
aas
xlat
and
lods
aad
push
loopne
sbb
jp
sbb
fwait
jno
mov
adc
dec
loop
stos
es
mov
jp
add
pop
in
leave
cmpsl
daa
fs
fbstp
mov
ret
push
mov
xchg
stc
mov
dec
out
test
mov
in
jno
dec
in
rcrl
pop
movsl
jg
out
hlt
aad
mov
or
daa
popf
and
es
sub
leave
add
inc
arpl
dec
inc
pushf
adc
lds
mov
fisubrs
fisubrs
imul
xor
adc
scas
sbb
scas
push
ss
bound
and
repnz
adcl
js
or
fwait
cmpl
cmp
sbb
push
sbb
loope
add
cmp
jge
mov
pop
pop
cmp
testl
xlat
push
test
popa
sarb
outsl
cld
pop
mov
test
jmp
outsb
sbb
and
lcall
fs
rol
xor
das
hlt
aaa
jo
js
lret
dec
call
popf
popf
imul
insl
xchg
iret
fisttps
mov
or
rorb
and
pusha
push
cmpsb
sub
cmp
and
jno
push
call
add
push
test
mov
insl
sarl
xchg
scas
xor
clc
dec
and
add
out
sbb
inc
rolb
dec
jo
mov
or
insl
mov
dec
ret
xchg
negl
cwtl
shll
ja
ret
sahf
mov
shll
mov
mov
in
repnz
push
inc
orb
adcl
cwtl
sti
mov
enter
stos
jns,pt
lods
push
dec
jbe
jo
mov
mov
popf
rcrb
jmp
into
dec
insl
adc
sub
push
les
ljmp
xor
jne
icebp
cld
imul
or
sub
dec
dec
lods
icebp
mov
add
test
dec
push
mov
and
imul
inc
dec
test
lcall
mov
and
xor
dec
xchg
adc
mov
push
fists
push
adc
icebp
insl
xor
push
lock
lahf
scas
dec
pusha
mov
jno
imul
and
std
lahf
aaa
fidivs
inc
insb
ret
mov
das
data16
shll
daa
lcall
mov
pushf
fs
jo
jb
mov
movsb
jb
mov
and
in
fucomp
rolb
pop
outsl
loope
scas
pop
sti
sbb
arpl
lcall
bound
push
aaa
shll
sbb
fwait
ret
fdecstp
mov
ret
sbb
push
rorb
sbb
icebp
push
xacquire
popf
imul
xchg
jo
shrb
sbb
movsl
dec
push
imul
mov
mov
pushf
cltd
pop
xchg
jl
cld
xor
pop
add
fimuls
enter
jmp
push
cwtl
lods
jo
xor
pop
bound
scas
or
movsb
sub
mov
xchg
movsl
sbb
movsb
and
dec
pusha
cltd
dec
jecxz
push
mov
sub
cmovnp
inc
fst
stos
dec
dec
push
mov
stos
cltd
sbb
lods
gs
in
cs
ds
add
xor
scas
pop
jg
es
pop
sub
insl
sub
stos
adc
and
int3
cli
xchg
test
mov
frstor
fwait
push
imul
dec
add
int3
loope
insl
movsl
scas
and
or
mov
adc
imul
push
push
jo
ss
push
mov
arpl
mov
dec
mov
pop
mov
jp
lcall
sub
or
add
sub
movsl
xchg
lods
adc
fldcw
insl
adc
rcll
push
mov
jecxz
subb
ret
cmp
sub
sbb
mov
in
lods
mov
mov
mov
testb
mov
stc
pop
enter
dec
and
cmpsb
daa
int3
fwait
bound
mov
jecxz
or
mov
fiadds
pop
cs
lock
jb
push
hlt
leave
test
int3
jge
sbb
mov
xor
out
loop
nop
inc
push
cli
in
mov
mov
push
add
test
outsb
adc
loope
pop
pop
movsl
fldcw
popa
cmpl
fisubs
cmp
xor
cli
xor
pop
imul
int
jo
inc
push
popf
bound
es
pop
pushf
jp
mov
pop
es
and
movsb
and
ret
ret
imul
sub
mov
stos
int3
sub
out
imul
and
and
mov
mov
cwtl
xor
cld
jnp
and
push
sbb
mov
movsl
stc
sbb
or
jle
lock
adc
stos
cmpsb
dec
sub
mov
in
dec
xchg
mov
dec
mov
or
and
cmp
add
push
push
aam
fs
mov
ret
jmp
fwait
sub
cmp
movsl
outsl
or
movsb
fidivl
sub
lods
sahf
jp
ljmp
xchg
push
pop
pushf
mov
aas
and
adc
fmul
xor
push
mov
ret
or
movsl
dec
inc
pop
push
cwtl
ljmp
ret
cmpsl
push
rorb
push
mov
pushw
dec
pushf
out
movsb
fwait
outsb
push
jo
movsb
or
in
inc
mov
call
out
sbb
push
and
add
cltd
stos
jo
pop
and
inc
push
movsl
jb
and
insl
sbb
xor
fnstenv
adcb
cmp
jb
sub
mov
sbb
dec
push
shlb
scas
jb
arpl
leave
aaa
cmp
out
outsl
sub
js
movsl
push
jmp
cwtl
ret
les
sub
xchg
pop
lods
push
popa
mov
mov
in
pushf
push
mov
in
dec
test
fsts
adc
test
lock
es
mov
push
movsb
pop
outsb
xchg
icebp
cmp
push
icebp
push
ljmp
sbb
lock
add
mov
sub
push
jecxz
fsubrl
sub
aam
lock
lret
mov
lcall
lret
sub
jb
je
cmpsl
inc
jg
int
jg
lea
loopne
xchg
push
int3
lods
repnz
xchg
xor
fimull
sub
fidivs
push
filds
sbb
ja
fcoms
pop
cmpsb
xor
lcall
jmp
roll
in
mov
shr
addr16
int
adc
jb
dec
cmp
mov
into
out
mov
sub
sarb
test
fwait
push
or
jo
jmp
or
sbb
test
in
sub
push
mul
jb
lea
fsubrl
test
sahf
into
call
inc
jmp
mov
jno
pop
inc
jg
sub
arpl
imul
bound
dec
sbb
push
mov
jbe
arpl
dec
xor
or
jg
or
in
push
pop
sub
and
pop
push
mov
xor
mov
mov
or
lds
daa
and
mov
xor
outsl
lods
or
outsb
pop
scas
xchg
bound
dec
je
in
mov
cs
outsb
mov
xor
sub
inc
jb
fs
rcll
dec
mov
pop
je
in
out
pop
dec
xchg
and
mov
add
push
stos
jno
mov
push
add
pop
aam
ret
sbb
test
mov
push
mov
popa
mov
bound
lret
les
das
dec
idiv
fisubl
subb
xor
scas
dec
sbb
dec
loope
sarl
adc
pop
add
jecxz
out
mov
cmp
pop
call
jl
lret
into
shll
gs
pop
jle
dec
scas
push
xor
fdivp
cmp
cmp
out
or
inc
fwait
adc
pushf
or
add
or
and
ret
in
lods
int3
imulb
jb
add
dec
or
in
push
in
sbb
sub
repnz
adc
jmp
fs
shr
lods
jb
sbb
scas
mov
sub
out
fiaddl
test
jmp
xlat
sub
or
fs
or
ja
pop
push
sub
dec
sub
cmp
or
push
jp
hlt
jge
nopl
ret
and
pop
or
repnz
add
in
dec
mov
into
bound
out
xor
mov
movsb
jo
pop
jo
dec
popa
jo
test
cmpsl
dec
and
dec
out
mov
shlb
addb
insb
icebp
push
movsb
xchg
mulps
lock
jmp
aam
jl
push
push
sub
jecxz
xchg
mov
je
cld
stos
scas
icebp
lahf
in
inc
push
and
mov
rorl
fdivrl
add
jmp
sbb
test
sbb
rorb
xchg
inc
dec
cs
add
test
sbb
inc
sbb
mov
paddusb
setg
lock
outsl
sub
es
xchg
sub
sub
fdivrs
push
int3
xor
dec
call
mov
popf
out
xchg
imul
sub
pop
lods
xor
daa
sahf
and
arpl
cld
xor
mov
fs
iret
mov
imull
and
fwait
lods
push
mov
xor
loope
mov
inc
mov
mov
add
lret
stos
je
jb
popa
pop
test
mov
mov
das
pop
adc
or
cwtl
inc
pop
stc
movsb
shlb
mov
pusha
xor
mov
fdivrs
movsb
fs
pop
imul
dec
jns
or
adc
fistpll
push
cmp
je
xor
dec
lahf
and
movsb
jno
inc
fiadds
xor
push
idivl
sub
int3
ss
in
popf
or
xchg
imul
mov
das
mov
adc
dec
sub
out
jnp
add
push
mov
jge
mov
movsl
sbb
mov
es
pop
lahf
xor
jl
jb
xor
test
test
test
mov
enter
add
icebp
mov
or
and
sbb
pop
in
pop
shll
and
push
and
jo
jo
sub
fwait
addr16
rcll
imul
mov
and
mov
sti
nop
repz
mov
pushf
fidivs
andb
aas
ss
mov
pusha
call
lea
sarl
pop
jns
xlat
adc
jl
mov
xchg
lock
jnp
sub
cmp
adc
adcb
addr16
imul
pop
cs
pop
and
test
sbb
sbb
call
cld
xor
push
sbb
xchg
repz
test
cmp
dec
addr16
xor
hlt
pop
xor
pop
ja
das
imul
xchg
and
xchg
inc
sub
gs
lea
and
push
scas
dec
lods
int3
mov
mov
sbb
adc
movsb
fwait
adc
pop
mov
cmp
sub
xor
xchg
pushf
adc
jbe
sahf
hlt
add
mov
and
add
ret
adc
lahf
ret
xchg
leave
jge
sbbl
xlat
mov
loopne
jo
addr16
fsubl
and
xor
jp
adc
sbb
psubsw
mov
pushf
lret
lret
js
dec
sub
outsl
daa
inc
mov
loope
push
movsl
mov
fs
add
addb
jb
add
in
push
clc
nop
test
sbb
and
es
adc
pop
stos
dec
ljmp
mov
push
mov
mov
loop
jno
leave
aaa
popa
dec
sbb
outsb
cmpsl
sub
xor
lods
pop
mov
xchg
hlt
je
bnd
aas
sahf
sti
lea
sti
jb
inc
fisubl
cmpsb
add
fadds
mov
mov
inc
and
mov
cmp
push
sub
ficompl
in
push
cli
js
fs
fs
loop
rorl
mov
ret
out
sub
lahf
cmpsb
not
inc
dec
stc
sub
sub
test
lods
mov
arpl
or
sub
jmp
test
and
push
stc
xchg
pop
sbb
jno
call
lock
mov
addr16
mov
arpl
add
dec
aam
push
pop
daa
mov
les
dec
lds
and
ja
inc
rclb
push
fcomps
mov
push
stc
mov
pop
mov
mov
lock
xchg
pop
hlt
test
lret
inc
jo
iret
and
jo
lret
outsb
clc
mov
or
lahf
cmp
js
inc
lods
ret
add
mov
outsb
stos
out
sbb
and
mov
adc
sbb
mov
xor
xor
push
repnz
dec
fmull
cmp
add
sbb
loopne
in
xchg
enter
mov
lock
mov
dec
lock
pop
aaa
mov
mov
in
in
stc
ss
lods
jns
sbb
pop
mov
test
xchg
cltd
cs
in
and
cmp
dec
push
push
imul
mov
inc
dec
shl
mov
leave
inc
jno
bound
sbb
int3
push
mov
and
fucomi
inc
stc
imul
sub
outsl
outsb
cmp
add
outsl
cli
popa
mov
subb
rcll
cmp
outsb
fidivl
jle
imul
add
lock
in
gs
dec
dec
rorl
mov
int3
xor
mov
orb
cltd
cs
cld
ja
shrl
pop
push
stc
pop
and
mov
inc
pop
sarl
shll
push
adc
mov
push
data16
test
out
ficoms
loope
inc
xor
aas
fsts
push
cmpsl
mov
cmp
mov
dec
imul
test
icebp
cmp
dec
lea
add
scas
mov
movsb
ret
mov
mov
adc
cmp
mov
dec
out
or
lods
outsl
stc
push
pop
xchg
pop
mov
mov
xlat
ljmp
mov
or
mov
int3
data16
sbb
add
sbb
xchg
mov
xor
jmp
lock
mov
loopne
loopne
scas
test
int3
lret
daa
sub
jle
test
dec
dec
push
cmp
sbb
push
xchg
imul
call
sbb
fimuls
jo
in
push
ss
push
xor
mov
bound
decl
and
mov
jno
xor
out
test
cmc
stc
mov
out
rcr
dec
pop
mov
mov
pop
lods
pop
iret
xchg
mov
push
mov
mov
jae
jmp
xchg
lret
jb
sbb
xchg
outsl
jbe
jge
cwtl
fiadds
lret
push
icebp
add
cltd
ja
in
mov
add
stos
aaa
sub
xor
mov
mov
aam
stos
pop
sub
bound
jns
stos
cmpsl
stos
in
sbb
scas
sbb
fwait
or
dec
mov
shrb
push
push
jo
imul
enter
push
jecxz
sbb
stos
push
movsb
pop
cmp
push
mov
fldenv
test
dec
xor
cli
mov
scas
add
sub
in
pop
test
mov
pop
jne
inc
in
mov
jmp
mov
test
push
lret
stos
pop
inc
es
sbb
adc
xchg
dec
cli
sbb
dec
mov
stos
loope
xor
mov
jmp
das
test
in
sub
sbb
or
sbb
dec
repz
jns
sub
sbb
mov
mov
in
mov
std
stos
jnp
inc
sbb
dec
mov
in
dec
dec
sti
sbb
rcrb
mov
sbb
xchg
xor
mov
mov
dec
pusha
xor
stc
mov
repnz
dec
xlat
pop
cld
sub
sub
sbb
imul
sbb
shlb
push
push
sbb
push
push
fs
mov
cltd
rol
push
inc
cmpsb
mov
mov
cmp
dec
div
jge
mov
mov
or
xor
push
sbb
jne
push
lock
dec
cmp
mov
sbb
push
jmp
jae
push
shlb
dec
or
xchg
sbb
shrl
sbb
pop
scas
popf
outsl
cs
sub
mov
pop
dec
sbb
stos
fisttps
scas
and
gs
mov
stos
inc
jns
je
mov
and
push
xor
call
gs
sbb
dec
cmp
stos
lahf
push
fsub
leave
xchg
sti
test
stos
xchg
inc
scas
hlt
stos
rcll
js
or
scas
xor
lock
mov
stos
sahf
xlat
pop
sub
pop
mov
addr16
or
sbb
xchg
sbb
and
and
mov
adc
imul
nop
mov
lret
push
lahf
les
push
out
lods
movsb
sbb
inc
pop
lds
arpl
sub
and
scas
jle
shll
scas
cmpsb
in
xor
mov
jno
icebp
scas
inc
jne
lahf
cli
test
adc
mov
repnz
pop
test
cltd
xor
mov
stos
mov
pop
mov
jmp
nop
ret
shl
cmp
data16
mov
mov
lret
sub
stos
and
insl
dec
sbb
out
pusha
and
mov
int
mov
adc
mov
mov
ss
push
adc
and
sbb
movsl
rclb
xor
bound
gs
inc
loope
pop
popa
outsb
push
mov
push
std
pop
sbb
mov
pusha
jo
mov
and
sub
xchg
mov
mov
jecxz
fdivrl
adc
imul
mov
sub
lds
and
xchg
mov
mov
mov
leave
sbb
ja
jmp
dec
mov
int3
sub
mov
inc
push
cmp
mov
int3
scas
push
cmp
adc
fidivl
sbb
or
scas
dec
add
testb
rcrl
popf
push
stos
lcall
fs
xor
repnz
sarb
add
mov
lcall
xlat
push
push
adc
lret
maxps
xor
pop
hlt
mov
enter
xchg
addr16
lods
int3
mov
pop
test
test
gs
lahf
sbb
fistl
into
iret
fwait
std
popl
sti
roll
lods
xchg
in
push
or
imul
bound
loopne
aad
mov
sbb
lods
adc
loope
mov
dec
popf
pop
pushf
test
in
jmp
xchg
add
or
in
mov
dec
shl
or
mov
out
mov
sub
leave
adc
mov
push
or
lret
jb
push
aad
jecxz
xchg
adc
movsb
repnz
xchg
loopne
pushf
xchg
sub
loope
popf
inc
shr
and
ss
lea
outsl
fisubl
and
bound
dec
out
lea
gs
call
aaa
scas
icebp
mov
ficoml
icebp
xchg
cmpsb
aaa
in
out
pop
and
jo,pt
arpl
sbb
jno
jecxz
add
and
repz
jo
or
sbb
das
pop
movsl
mov
mov
adc
push
jbe
mov
pop
insl
dec
mov
jp
lcall
dec
ss
lods
imul
push
arpl
int
ss
in
test
sbb
sbb
jle
lock
data16
imul
or
xor
fisubs
imul
dec
aad
cmp
cltd
in
lcall
mov
push
es
out
mov
fidivrs
mov
jns
mov
iret
cwtl
sub
pop
hlt
cmp
mov
adc
and
add
int
or
pop
xchg
imul
mov
ds
in
and
clc
loope
aam
inc
popa
push
xchg
out
inc
and
mov
popf
xor
jbe
mov
scas
push
outsb
and
ja
pushf
lock
jb
xor
ret
push
fldt
insl
mov
push
xor
pop
ret
jecxz
xor
xor
mov
rclb
addr16
fbstp
sarb
push
and
jl
mov
jmp
outsl
shrb
dec
ret
mov
cltd
push
int
in
jnp
movsb
pop
mov
int
dec
daa
inc
movsb
and
push
mov
cli
lea
xor
aaa
ret
jnp
add
aas
aam
addr16
addr16
outsb
sub
iret
test
cmpsb
jo
repz
mov
stc
ljmp
outsl
sbb
cli
mov
lock
popa
push
add
sub
imul
lock
add
or
icebp
mov
xchg
mov
mov
cli
mov
or
jecxz
pop
shlb
outsb
sbb
arpl
or
jp
push
es
lock
inc
mov
ljmp
pop
imul
lock
rcll
cltd
mov
adc
adc
loopne
les
int3
add
outsb
repnz
outsb
mov
ss
jns
mov
inc
push
pop
add
shll
inc
and
int3
mov
outsb
pop
into
ds
mov
lods
mov
xor
lods
mov
imul
jo
mov
loop
dec
imul
or
out
mov
lods
loopne
or
jb
popa
adc
push
cmpsl
xor
rorl
jns
movsb
data16
mov
sbb
or
jl
jae
andl
or
push
jae
lret
mov
mov
sbb
adc
popf
inc
push
lret
or
repnz
fiaddl
mov
fildl
jns
orps
repnz
in
lret
mov
repnz
sbb
movsb
sbb
xor
push
mov
lock
loope
mov
or
jecxz
stos
fs
mov
pop
imul
push
mov
mov
test
xlat
stos
fldl
push
les
xor
das
push
inc
push
mov
lret
cs
aas
int
mov
adc
das
movsl
dec
add
outsb
stos
movsb
out
and
das
mov
int
xor
inc
bound
mov
rcrb
cs
sub
push
adc
or
dec
test
add
lahf
add
addl
push
push
mov
sub
addr16
shll
jb
nop
sbb
inc
mov
bswap
mov
mov
repnz
mov
outsb
ret
or
out
xchg
in
and
dec
mov
pusha
sub
lods
repnz
sbb
nop
fs
sbb
cmpsb
mov
xor
scas
add
fiadds
outsl
in
push
mov
jge
sahf
push
movsl
xor
add
or
xchg
add
mull
mov
or
jo
ljmp
movsl
enter
jno
out
call
push
repnz
lods
adc
or
sbb
or
pop
jns
push
loopne
push
mov
sub
cli
gs
mov
sub
es
filds
adc
jle
xor
sub
and
xchg
clc
add
pop
xchg
aad
gs
jb
sbb
xor
pop
dec
xchg
xchg
mov
push
pop
sbb
inc
pop
push
mov
gs
jecxz
popw
ret
shll
add
mov
push
int
in
movsl
es
aad
movsb
iret
pop
loope
sti
adc
into
inc
loope
fcmovb
fisubl
stos
int3
test
outsl
das
mov
rolb
jecxz
scas
pop
sbbb
insl
imul
loop
fs
sbb
mov
test
xchg
pop
lcall
imul
pop
add
sbb
and
jecxz
cmp
fucomip
adc
shr
outsl
sub
sub
add
xchg
sahf
movsb
sbb
mov
and
movsl
cli
in
movsb
lods
or
movsb
divl
fwait
xor
xor
mov
pop
cli
sbb
ss
mov
mov
jl
jle
or
sub
dec
imul
mov
daa
shll
push
clc
sahf
out
idivl
xor
scas
push
pushf
in
in
ret
xchg
mov
pop
adc
lret
inc
mov
xor
mov
jo
mov
push
mov
dec
push
cs
repnz
pop
jb
in
or
cltd
outsb
inc
dec
push
add
repnz
enter
cmp
ret
gs
sbbl
test
in
icebp
mov
mov
jbe
fcomi
adc
sub
mov
sbb
dec
push
scas
jecxz
lods
cld
inc
mov
pop
imul
adc
iret
mov
test
lock
in
jp
push
xchg
outsl
cld
sti
movsl
shll
into
adc
and
adc
call
adc
bound
lret
test
cmp
inc
mov
pop
shrb
lahf
sbb
stos
mov
pushf
mov
pop
or
aas
jl
push
mov
fdivr
mov
popf
pop
and
loopne
push
nop
scas
repnz
pop
jo
pop
nop
sub
roll
push
das
jecxz
in
imul
cmp
std
adcl
and
push
in
inc
cmp
out
push
xor
dec
mov
stos
inc
into
int3
es
sbb
cmp
es
jge
mov
stos
fdivl
lock
xor
shr
fstpl
lahf
xor
cmp
push
mov
les
cld
fidivrl
movsl
jb
ds
sub
dec
or
add
pop
jg
push
cmp
and
ss
push
sbb
push
scas
jae
bound
cmp
pop
arpl
fcompl
in
push
push
pop
jae
add
lret
fs
lods
outsl
int3
hlt
lock
jnp
pop
xor
mov
sarl
jle
mov
mov
imul
xchg
push
xor
in
push
xor
ja
and
cld
push
lret
out
push
jns
push
fwait
sbb
push
mov
imul
push
fsubrp
inc
mul
in
outsb
cmpsb
push
mov
push
adc
jo
sub
sti
push
sub
pop
or
es
mull
mov
pop
arpl
fsubrl
lock
pop
sbb
xor
dec
add
movsb
lods
loope
je
jmp
cmp
lock
pop
dec
aas
mov
dec
int3
das
jmp
imul
push
ret
mov
in
jp
pop
adc
orl
jmp
loope
scas
stos
xchg
mov
sub
pop
adcb
xor
mov
popa
mov
lods
mov
pop
xor
xor
mov
lcall
jbe
sbb
or
push
cltd
mull
movsl
jns
leave
fcompp
dec
aaa
rcr
inc
xchg
cmp
sahf
cmpsb
cmp
sub
xchg
aas
push
lods
fstps
cmpsb
sti
mov
lea
adc
lock
xor
pop
outsb
xor
mov
mov
adc
into
xchg
inc
pushf
loopne
xlat
stc
mov
aaa
push
mov
cltd
sahf
add
dec
ljmp
rolb
std
dec
mov
enter
out
dec
data16
out
cmp
call
push
sub
adc
lods
je
imulb
es
mov
xchg
push
sbb
mov
mov
int3
jbe
in
sbb
pmuludq
inc
mov
add
add
pop
lods
push
xchg
stos
rorb
es
sub
jl
aad
dec
das
negl
adc
sbb
cmc
xor
loope
inc
mov
or
pushf
in
push
jge
icebp
push
call
mov
sbb
mov
sbb
push
pop
movsl
pop
mov
nop
mov
xchg
outsb
incb
cltd
cmp
insb
pop
dec
lahf
lods
xor
pop
dec
test
and
test
pushf
sub
mov
mov
je
fcoml
iret
stos
or
xlat
push
pop
daa
movsl
lea
inc
mov
mov
pop
pushf
lret
xchg
pushf
sub
stos
fcmovb
xchg
cmp
loope
push
mov
jb,pn
data16
xlat
cmpsl
dec
stc
dec
jae
cwtl
les
xchg
sbb
xchg
pop
shlb
mov
adc
mov
bound
sbb
sti
stos
xchg
sbb
fsubp
mov
pushf
mov
sti
and
mov
mov
lret
mov
mov
popf
xchg
and
pop
sbb
imul
rcl
outsb
or
jbe
insl
push
cs
jge
xchg
sbbl
js
mov
push
jmp
loope
lods
pop
pop
jo
xor
rol
call
jb
rcrb
mov
stos
or
jno
and
lea
out
into
shll
fadd
and
xchg
or
pop
out
add
sub
push
loopne
lcall
loop
sub
xchg
int3
ss
adc
ret
dec
jp
popa
nop
rcrl
mov
push
pop
mov
shrb
sahf
push
mov
imul
jecxz
sbb
bound
jns
pop
lods
mov
pop
sub
sub
shl
dec
lcall
jbe
dec
inc
pusha
mov
cmp
jo
dec
repnz
or
jo
or
popf
outsb
inc
into
arpl
or
frstor
scas
mov
mov
mov
xchg
cld
outsl
bnd
lahf
stos
cmc
jle
ljmp
pop
stc
pop
add
lock
in
outsl
fbld
testb
mov
lods
int3
adc
divl
daa
pop
fdivrp
add
outsl
xor
insl
sbb
in
nop
out
adc
pusha
adc
negl
mov
sti
cmpsl
loopne
and
outsl
or
rcr
xor
lcall
xchg
mov
filds
nop
dec
xchg
imul
jbe
mov
xchg
ss
xchg
int
jb
mov
in
xor
cmpsl
cmp
or
aaa
ss
add
mov
dec
xor
xor
or
mov
cltd
inc
add
lahf
ret
popa
mov
pop
xchg
in
mov
and
nop
inc
cmpsb
push
and
lcall
pop
pushf
dec
add
scas
aam
mov
and
fisttpl
inc
ss
scas
fldcw
push
insl
xor
inc
and
and
pop
and
dec
or
loope
xor
lret
sub
imul
cli
sbb
xchg
imul
dec
in
test
add
mov
js
or
sahf
ja
aaa
mov
lods
mov
add
sub
cmp
ficoms
nop
mov
mov
fbld
jbe
sarb
lea
pop
dec
loopne
test
cmpsb
lea
arpl
mov
fimuls
mov
mov
xor
fiaddl
out
inc
pop
inc
lcall
es
popf
jno
das
xor
test
fwait
adcb
inc
nop
sti
outsb
sbb
jbe
outsl
jae
loop
push
out
push
add
insl
lahf
push
pop
icebp
inc
hlt
adc
dec
adc
mov
jge
sub
mov
jb
test
rorb
lret
fucomip
out
dec
xchg
push
repz
jg
jno
in
enter
push
fisttpll
push
clc
scas
inc
or
mov
mov
pop
cmp
lock
jo
pusha
fidivs
sbb
inc
lret
pop
repnz
inc
in
nop
jno
sbb
negb
mov
xchg
and
sub
pop
cmp
movsb
das
mov
inc
movsl
ljmp
lret
mov
repnz
mov
sbb
inc
mov
pop
test
mov
or
adc
add
xchg
lea
lret
push
inc
and
lods
insl
lods
lods
outsl
adc
les
pop
popf
pop
sbb
lea
lock
xchg
out
jno
sarl
xor
add
or
or
aas
adc
ret
pop
int
jo
dec
add
popf
lds
insb
call
push
outsb
adc
gs
scas
xorb
inc
adc
jecxz
shl
fwait
mov
sbb
push
clc
jo
in
outsb
or
or
pop
cmp
loope
cmp
xor
xor
mov
iret
repnz
jno
js
mov
sbb
movsl
cmpb
xchg
mov
lods
cld
mov
cmp
jl
insl
sub
pop
lahf
or
push
jb
loope
or
jl
icebp
mov
stos
sub
sbb
sahf
sarb
cwtl
inc
adc
xlat
lret
xchg
insl
ss
adc
out
incb
dec
gs
cmp
fstl
push
mov
sub
mov
push
fwait
xor
ret
pop
inc
test
sub
and
adc
lock
addr16
add
nop
push
sti
xchg
mov
and
sbb
ret
movsb
xor
imul
xchg
and
mov
jnp
xchg
cwtl
mov
dec
sbb
xchg
cmp
inc
lret
imul
sbb
fbstp
lcall
icebp
adc
lds
rorb
mov
imul
cmp
stos
inc
add
xor
mov
cltd
enter
dec
adc
test
pop
enter
push
outsb
pop
or
or
cs
movsl
push
adc
out
mov
mov
dec
push
jo
loope
cmp
adc
dec
out
fcomip
jp
push
hlt
adc
sbb
fcomip
jo
test
adc
dec
repnz
xchg
cmpsb
call
pop
imul
jmp
push
cmp
add
adc
dec
loope
mov
sbbb
jmp
and
xor
fwait
pop
and
and
imul
mov
push
shlb
cmp
scas
jne
sbb
test
imul
arpl
stos
jo
sub
dec
sbb
jbe
call
or
and
popa
mov
pushf
xchg
sbb
test
ret
or
in
sub
insb
and
popa
sahf
mov
push
scas
fimull
dec
notb
sbb
cmp
das
fildll
cli
insl
in
in
lahf
or
int3
and
sbb
stos
addr16
aaa
in
add
loope
xlat
daa
adc
xor
test
ret
gs
imul
pop
out
and
pop
aas
mov
lss
or
inc
mov
dec
push
out
mov
mov
arpl
addr16
punpckhdq
imul
lods
xchg
dec
cmp
cmpsb
fisubl
sbb
dec
fisubrl
fs
jmp
sub
xchg
clc
sbb
pop
mov
fildl
xlat
or
fidivrs
and
shlb
int
ficoms
fldt
inc
imulb
xor
jecxz
adc
inc
imul
mov
imul
dec
add
sub
pop
cltd
in
add
movsl
and
mov
ljmp
sbb
or
setp
and
sub
pop
pop
les
outsl
jnp
mov
mov
int
pop
push
sub
xor
and
dec
dec
cmc
imul
lcall
dec
outsl
pop
sub
inc
cmp
test
lcall
pop
or
sbb
loop
cmp
add
pop
dec
pop
repz
dec
xor
bnd
jecxz
cmpsl
and
jge
sub
sahf
ljmp
fs
inc
ret
mov
mov
into
pop
xor
xchg
fdivl
shll
cmpl
ljmp
hlt
repz
imul
lods
pop
cmp
outsb
jl
mov
imul
pop
fbstp
insb
xchg
jp
out
cmpsb
fbstp
pop
mov
cltd
pushf
sub
sbb
mov
push
leave
rorb
jmp
adc
sahf
mov
dec
xchg
inc
fisubl
icebp
xchg
mov
lds
negb
stc
pop
les
and
sbb
mov
mov
xor
xchg
add
adc
inc
mov
lret
fsubrp
cmp
popa
sbb
push
in
mov
js
pop
loopne
xchg
test
cwtl
rcrb
decb
push
or
fbld
mov
lods
mov
push
dec
jmp
sbb
jmp
bound
aas
ljmp
pop
leave
je
pop
jl
loop,pn
or
cmp
cmp
hlt
jne
pop
fmull
mov
sub
xchg
fwait
stos
aaa
gs
and
lcall
fists
and
adc
dec
mov
push
mov
jbe
addl
decl
pop
pop
stos
xchg
dec
xor
jb
ret
loope
repz
add
jae
push
int3
jne
mov
js
xchg
push
popa
cmpsb
ds
shlb
notl
addb
xor
insb
xlat
call
in
adc
popa
adc
test
xor
sub
imul
in
sbb
fisubl
fcomi
sbb
push
mov
cmpsb
andl
pop
fdivp
loope
sahf
scas
insl
iret
xchg
adc
jg
mov
imul
lock
outsl
xchg
lods
popa
push
mov
sahf
mov
mov
xchg
fistl
pcmpgtd
sbb
mov
mov
cld
lods
sbb
and
xchg
mov
and
jle
adc
sub
cmp
cli
mov
mov
jbe
rcll
mov
negb
loop
and
sbb
dec
daa
jp
aad
test
outsl
pop
rolb
mov
imul
ftst
inc
adc
ljmp
jb
ss
mov
cltd
das
out
mov
lahf
loope
inc
mul
dec
xor
mov
mov
in
mov
lock
in
sti
negb
mov
mov
lock
xchg
aad
mov
xchg
xchg
lock
xchg
push
cltd
pop
or
fdivs
insl
xchg
mov
popf
pop
push
insl
and
cli
repnz
stc
mov
mov
xor
push
ret
and
outsb
mov
frstor
out
adc
fcompl
push
mov
sbb
imul
mov
adc
xchg
scas
outsb
stos
or
inc
gs
xor
outsb
loopne
sbb
cmpsl
test
mov
sub
aaa
bound
sbb
popa
outsb
xchg
add
push
stos
ja
sbb
pop
and
stos
push
loopne
sbb
imul
scas
sbb
or
lcall
mov
sbb
mov
negl
adc
iret
repnz
dec
mov
stos
shll
rcrl
and
lods
push
and
sbb
jmp
stos
dec
mov
movsb
sbb
jno
shrb
and
jo
int3
sbb
dec
sahf
test
cmp
inc
sbb
pop
repnz
or
clc
repnz
ja
sbb
xor
add
mov
push
sbb
sbb
fisubrs
sub
push
inc
imul
jmp
lds
outsb
rcl
movsb
push
popf
imul
push
movsl
lods
std
dec
xchg
mov
mulb
leave
andb
iret
jo
add
ds
sbb
sbbl
or
mov
sub
or
mov
xchg
jno
push
mov
sahf
lea
or
push
fnsave
lcall
call
mov
imul
shl
and
in
xlat
loop
aam
mov
dec
in
xchg
jle
ss
mov
dec
xor
mov
cmp
inc
stos
pushf
mov
bound
mov
leave
sbb
ljmp
push
stos
push
push
scas
pop
dec
fstps
push
mov
loop
mov
xchg
or
stos
sbb
mov
cmp
push
sbb
stos
mov
lock
mov
gs
push
xchg
mov
insl
lahf
sub
add
mov
pop
xor
or
pop
sub
outsb
push
shlb
cltd
dec
cmp
scas
js
lock
mov
jo
mov
ret
cmpsb
lret
sbb
mov
adc
inc
in
push
insl
push
sbb
dec
stos
dec
scas
push
stos
dec
mov
fwait
sub
call
mov
cmp
out
pop
or
mov
cwtl
stc
dec
mov
inc
mov
fcomp
inc
mov
repnz
jmp
ret
movl
outsb
cli
es
stos
mov
push
loopne
pushf
xchg
addl
mov
lock
stos
mov
movsb
call
hlt
push
cmp
xor
dec
stos
fnstenv
dec
mov
dec
push
adc
popf
push
stos
mov
divb
mov
movsl
fbld
imul
push
dec
stos
dec
movsb
xor
push
inc
cmp
adc
xchg
inc
inc
jo
pcmpeqb
into
dec
pop
stos
or
dec
mov
jo
or
push
dec
jp
fisubl
jno
scas
jo
lods
push
xor
stos
pop
dec
pop
jo
jno
test
enter
pusha
fbstp
mov
push
mov
xchg
mov
mov
iret
pusha
push
mov
adc
push
aad
xchg
inc
push
dec
testb
or
int
xchg
mov
lock
pop
adc
sbb
push
icebp
outsb
add
cmp
mov
scas
push
stos
fs
stc
dec
mov
lcall
outsb
xchg
push
push
pushf
out
cmp
gs
push
pushf
in
or
adc
mov
lahf
int
cli
pop
cld
sbb
push
adc
addr16
adc
pushw
addr16
rclb
sbb
push
xor
imul
pop
imul
stos
pushf
dec
outsb
sbb
or
in
sbb
sbb
stos
xchg
cltd
scas
int
sbb
fs
stos
adc
push
dec
lods
scas
addr16
stos
pop
in
pop
fidivs
test
stos
out
sub
and
stos
in
scas
scas
push
push
adc
cld
dec
xchg
push
mov
test
pop
insl
push
dec
outsb
sub
test
stos
sbb
dec
test
pop
jae
cmpsb
jecxz
adc
mov
stos
pop
test
dec
mov
clc
sub
mov
dec
stos
inc
mov
in
fs
pop
data16
pop
push
stos
xor
sbb
out
stos
sahf
scas
push
jno
add
mov
or
stos
loop
fs
sbb
push
daa
inc
mov
loop
cmp
or
repz
shlb
int3
cmp
mov
mov
inc
bound
sub
imul
rorl
pop
in
xor
mov
sub
pop
enter
jns
jg
out
inc
ljmp
adc
xchg
mov
movsb
add
lea
repnz
adc
and
in
loopne
add
mov
xor
aaa
ja
cli
std
xchg
cmp
cs
jne
push
cmp
add
push
push
adcl
xlat
add
mov
cltd
add
js
addr16
inc
pop
sahf
divl
cltd
mov
mov
movsb
aas
ret
test
divl
das
pop
addr16
dec
add
or
add
inc
call
adc
test
sbb
xor
xor
aaa
ret
adc
pop
adc
test
xchg
bound
fisttpll
mov
mov
xchg
adc
bnd
pop
or
js
mov
lcall
test
xor
lahf
in
cmp
jnp
loop
jo
sub
push
jmp
sub
fsubl
mov
xchg
sbb
outsb
sbb
lea
xchg
push
push
pop
mov
imul
test
push
stos
sbb
insl
or
ljmp
inc
nop
mov
add
adc
mov
insl
jp
cmpsl
jne
sbb
notl
jo
mov
in
xor
cmp
out
fs
hlt
mov
cld
popa
subb
mul
aaa
imul
jnp
inc
jnp
inc
jg
push
inc
adc
hlt
add
mov
enter
loope
xchg
xorb
repz
out
aaa
push
clc
shr
xchg
xor
lds
aas
test
ret
sub
add
unpcklps
sbb
jge
mov
xchg
lret
repz
cmp
pop
popa
pop
dec
mov
call
imul
xorl
sti
ss
add
inc
outsb
jle
in
outsb
sub
jp
and
and
dec
fidivrs
xor
pop
pop
shl
mov
pop
dec
movsb
dec
xchg
dec
in
or
sub
mov
pop
and
jne
scas
push
lods
frstor
test
adc
adc
aas
dec
push
mov
pop
bound
ss
fs
in
stos
subl
sahf
push
xchg
sbb
lock
insl
scas
ret
int
int3
xchg
and
aad
push
or
push
mov
mov
pop
cld
loopne
mov
cltd
push
mov
add
ss
mov
sbb
sub
or
or
mov
movsl
cld
xchg
cmp
push
fs
adc
bound
sbb
lcall
mov
or
pop
lods
push
pop
sub
or
jl
jne
cmp
hlt
mov
nop
xor
fiadds
imul
xchg
inc
mov
cld
ds
mov
movsb
mov
enter
stos
jle
andb
cld
outsb
mov
fmull
adc
jl
lods
outsb
in
pop
insl
stos
in
lret
int
adc
ja
mov
lds
add
andb
sub
not
idivl
gs
mov
push
xchg
pop
sub
int3
xchg
out
icebp
adc
jb
aas
testl
inc
or
mov
ret
pop
and
ja
rcrl
mov
loop
xor
or
inc
aas
pop
fcomi
and
mov
jnp
loopne
test
xchg
sarl
mov
inc
mov
xchg
out
xor
sbb
stos
lods
jo
in
and
pop
repz
sub
shl
loopne
xor
mov
loopne
out
mov
pop
test
outsb
sub
xor
testl
pushf
jb
lret
mov
xor
mov
dec
push
popa
pusha
lds
and
mov
jge
in
mov
mov
cmp
sbb
gs
lods
or
lods
ss
xchg
in
sub
pop
dec
push
mov
fwait
jg
loop
and
sar
outsb
jle
xchg
cmpsb
lods
pusha
jmp
push
jl
decl
int3
hlt
jbe
arpl
outsb
dec
jne
xlat
lea
js
jns
jo
cld
dec
xor
push
jmp
testl
movsb
jbe
ljmp
sub
popf
imul
pusha
jg
stos
dec
jo
test
mov
out
movsb
fs
in
pop
sbb
lds
sbb
jbe
lock
xlat
jo
lret
sub
enter
pop
imul
sub
xor
call
cmp
stos
dec
sbb
inc
ja
mov
ja
es
aad
ret
movsb
mov
enter
or
inc
mov
dec
pusha
xchg
lret
pop
shrb
adc
pusha
mov
sbb
jo
lahf
or
in
in
mov
iret
push
addr16
adc
cwtl
imul
mov
mov
leave
aas
rclb
in
and
dec
rcrb
gs
sbb
mov
and
shll
sub
cmp
pop
popf
pushf
sbb
fidivl
pop
sbb
mov
ret
dec
push
mov
pop
and
jg
rol
jns
ds
stos
add
lahf
mov
jbe
mov
jbe
inc
pop
or
push
xor
imul
inc
dec
sub
sbb
mov
cmp
pop
int
insl
sbb
dec
lret
in
movsl
cld
repnz
shll
fucomi
pop
jns,pn
ljmp
out
mov
shrl
pop
xchg
imul
int3
cli
mov
sbb
inc
fiaddl
dec
int
jmp
gs
fstpl
sbb
sbb
adc
arpl
cltd
inc
outsl
sbb
xchg
int3
popf
pushf
outsb
and
gs
xor
adc
sbb
jp
aas
lret
sbb
popf
lahf
and
pop
or
or
jp
stos
lret
ja
and
sbb
mov
lcall
xor
jmp
imul
inc
loop
dec
dec
sti
pop
mov
aas
fcoml
rclb
dec
stos
push
or
mov
mov
test
in
pop
in
pop
sbb
push
xor
pop
test
xchg
mov
xchg
aaa
stc
mov
or
imul
jae
cltd
or
xor
enter
mov
lods
xorb
push
xor
xchg
shl
sbb
mov
bound
or
and
xchg
std
aas
xor
stc
or
adc
or
ret
dec
sbb
push
mov
mov
stc
mul
dec
jns
adc
in
push
mov
sbb
inc
mov
xor
lock
stos
sub
sub
pop
lods
dec
jle
out
mov
loopne
outsl
shrb
jae
push
aaa
cmpsb
stos
dec
xchg
lret
js
imul
dec
shll
adc
testb
mov
sbb
stos
dec
or
sub
jbe
push
loopne
or
mov
bound
mov
mov
stos
shlb
lret
leave
push
and
out
lcall
ret
fwait
inc
out
sub
push
mov
ss
decb
sub
sti
addr16
xor
aam
subb
aad
js
xchg
adc
mov
loope
mov
dec
in
icebp
jne
lea
push
in
inc
in
sahf
jbe
nop
jo
in
js
jl
pop
xchg
pusha
xor
push
in
sbb
jmp
loope
cmp
fs
addr16
hlt
je
jo
xchg
xlat
mov
cmp
fs
push
setb
in
std
mov
in
xor
dec
xchg
leave
pop
mov
dec
shll
cmpsb
aad
stos
pop
xchg
inc
icebp
out
adc
stos
cmpsl
pushf
and
adc
sahf
mov
in
cmpsb
lock
mov
or
das
in
dec
jnp
add
int3
and
jmp
dec
push
fwait
lods
mov
cli
xor
adcl
add
add
jbe
push
mov
dec
cmp
lcall
pop
ret
xchg
jne
cmp
data16
xor
mov
lods
dec
pop
mov
sbb
dec
ja
push
sub
sbb
inc
std
idivl
inc
lock
xchg
cltd
xlat
sbb
arpl
and
aam
stc
push
les
mov
ffree
xor
jg
fwait
fs
push
pop
insl
add
outsb
test
sub
lock
call
stos
outsb
jno
lock
sbb
sbb
pushf
fucomip
cmp
jmp
in
push
aad
fidivl
hlt
lds
jno
dec
or
sbb
pop
sub
xor
sbb
cmp
enter
adc
in
pusha
mov
or
loopne
into
inc
or
mov
adc
leave
cwtl
sahf
fsubrp
jo
les
push
loope
add
xlat
mov
xor
xchg
mov
pop
mov
lods
bound
xor
lahf
stc
cmp
lods
in
inc
jno
jne
mov
and
mov
pop
sbb
imul
jo
adc
mov
fbld
inc
jl
sbb
daa
and
daa
fdivl
lahf
cmp
mov
sbb
sbb
inc
jnp
inc
jnp
inc
mov
pop
bound
pushf
lret
add
les
inc
movsb
mov
ljmp
sbb
test
xor
fbld
push
mov
inc
stc
outsl
in
push
xor
sbb
inc
stos
fs
das
pushf
sub
push
or
lods
test
adc
loope
insb
jbe
inc
pop
in
cmp
cmpsb
lods
or
cmp
xor
lret
cmp
dec
dec
sub
cmp
mov
lahf
jnp
mull
and
jge
push
and
in
jbe
clc
cmp
pop
movsl
pop
and
push
xor
in
pop
xchg
int3
cmpsl
dec
or
fs
pop
loope
mov
mov
dec
sub
xor
test
out
lock
fs
leave
sbbb
in
mov
fistpll
mov
lock
shll
loopne
sbb
lret
jg
inc
cwtl
loopne
xor
or
int
rolb
inc
movsl
and
push
xchg
out
ds
xchg
jecxz
out
add
add
pusha
popa
jb
in
lock
cmp
ljmp
jo
push
jp
adc
inc
mov
cs
and
shll
sub
addr16
arpl
mov
adcl
xchg
xchg
xchg
mov
inc
dec
and
int3
cmp
mov
mov
stos
cwtl
pop
push
sbb
loop
push
ret
mov
outsl
lock
dec
xorb
mov
arpl
sub
mov
sub
js
sub
fsts
sbb
fs
and
sub
dec
and
popa
or
mov
scas
int3
pop
hlt
es
popf
aas
xchg
jl
cmpsl
movsl
pop
loope
jb
jle
in
xchg
mov
sbb
popf
jb
pop
xor
dec
xchg
stc
into
and
loopne
xor
inc
insl
jp
inc
rcll
inc
lods
fs
xchg
mov
sbb
pop
push
sub
dec
pop
push
fstpl
cld
addb
aam
imul
mov
sub
es
shll
fwait
imul
fsts
lock
sub
lea
loop
repnz
fists
cmpsl
nop
xchg
xchg
pop
unpckhps
ss
sub
popf
jno
hlt
dec
adc
imul
jo
jno
frstor
insl
dec
sbb
outsl
sub
xchg
or
mul
sub
dec
fsts
arpl
lods
loopne
rcll
pop
ja
ret
xchg
repnz
xchg
xlat
cli
fwait
aaa
or
cli
push
mov
ja
outsl
push
ljmp
jno
aad
lods
popa
push
imul
leave
shrl
jb
and
adc
aaa
rcrl
add
inc
mov
mov
je
jns
pop
fnstsw
lea
pop
or
or
mov
mov
mov
jg
in
inc
inc
pop
dec
adc
mov
outsb
sbb
or
push
and
mov
jb
arpl
xchg
lcall
dec
je
jecxz
lret
popa
mov
lods
inc
daa
dec
jnp
loopne
test
adc
xchg
mov
mov
imul
pop
jo
jns
shlb
std
jl
sub
cmp
push
jno
add
cli
push
ljmp
jbe
test
push
pop
mov
mov
cmp
pop
sub
sub
scas
in
nop
outsl
loope
mov
xchg
mov
dec
mov
cltd
scas
ljmp
loope
mov
insl
or
mov
lea
and
sub
cmp
pop
imul
fsubrl
inc
mov
pusha
ret
dec
push
sbb
push
rcll
or
cmpsl
fisubrl
in
pop
or
jge
xor
push
aaa
jne
xlat
mov
clc
jl
sub
aaa
and
pop
push
mov
mov
cmpsb
jb
and
out
sbb
inc
sub
pop
test
or
and
mov
mov
dec
push
and
adc
inc
pop
jb
pop
jge
adc
repnz
xor
mov
mov
out
adc
lods
add
dec
jl
in
cmp
jnp
jo
sti
in
xchg
int
iret
stos
adc
mov
sbb
xor
xchg
add
push
lahf
sti
pop
in
pop
out
adc
fidivl
dec
pop
mov
push
sbb
sbb
ljmp
mov
stos
jmp
loopne
adc
stos
push
fildl
sbb
call
mov
mov
push
stos
das
fwait
jns
jo
jb
jne
sub
in
jbe
repnz
mov
into
push
in
add
push
push
stos
dec
fwait
mov
dec
stos
rorl
mov
shrl
push
inc
pop
mov
shl
push
test
scas
pusha
push
pusha
imul
aaa
loopne
push
add
out
fildl
dec
sub
push
fidivrs
push
call
push
loop
iret
pusha
sbb
inc
addr16
push
jne
popa
imul
lret
mov
add
dec
mov
xor
pop
push
incb
out
inc
mull
inc
push
mov
mov
movsb
xchg
sti
scas
les
es
or
lret
mov
and
or
cmpsl
pushf
push
pop
adc
dec
push
adc
push
lret
cmpsl
push
test
lods
stos
sbb
sbb
outsb
fldt
aas
inc
out
and
outsb
xor
iret
inc
decl
mov
mov
daa
adc
gs
in
dec
stos
and
inc
dec
pop
push
inc
or
in
icebp
lret
add
bound
pushf
dec
imul
or
leave
xor
andl
or
push
mov
pop
jne
bound
adc
sbb
pop
repnz
xor
enter
pop
cmpsl
mov
lcall
leave
cmp
sub
sbb
lahf
fisubs
pop
sbb
xchg
stos
int3
mov
sub
push
in
jno
test
pop
jno
mov
adc
dec
jle
adc
mov
test
in
ret
fsubs
inc
sbb
out
movsb
fs
sub
or
adc
pop
inc
out
mov
fcomi
mov
je
jno
mov
out
bound
mov
inc
shlb
add
ret
xor
insl
push
ljmp
iret
jo
jne
filds
lock
push
push
pop
mov
imulb
hlt
addl
out
push
and
dec
aad
ljmp
jbe
in
mov
jns
outsb
aas
test
adc
lods
sbb
xchg
hlt
fucomp
push
int
mov
dec
das
mov
jge
arpl
aam
fisttpl
sbb
mov
and
sahf
pop
push
ljmp
pushf
lahf
jns
xchg
pop
mov
in
mov
mov
inc
mov
push
mov
push
inc
cmp
push
or
pusha
push
lea
in
leave
scas
push
sub
dec
dec
pop
push
xchg
jl
add
or
jo
push
lea
sbb
es
fimuls
test
pop
xchg
arpl
mov
push
out
in
mov
pop
mov
xchg
jb
push
out
mov
xchg
sub
hlt
fidivs
repnz
mov
cmp
js
xchg
jb
test
or
mov
inc
mov
jae
mov
cwtl
lock
mov
fcom
cmp
jge
lea
mov
lret
cmpsb
push
add
pusha
pop
shr
adc
mov
lock
sub
aaa
adc
ficompl
notl
lods
nop
push
subl
fsubrl
jo
lcall
jns
loopne
cmp
mov
cld
mov
cmpsb
call
mov
and
sbb
lcall
cltd
popf
pop
lret
pop
aas
cmpsb
xor
pop
xchg
pop
enter
sahf
mov
push
and
cld
push
inc
fs
and
and
mov
sub
jmp
stos
es
push
lret
addr16
xchg
xchg
add
mov
dec
sub
int
loopne
fdiv
or
xor
ss
mov
lret
cld
jae
int3
jne
fs
jnp
fsubrs
inc
daa
add
mov
lcall
hlt
mov
mov
pop
push
orb
mov
imul
cli
ja
cli
fstl
into
inc
scas
filds
and
pop
call
mov
in
and
mov
imul
or
inc
adc
das
aam
repnz
xchg
daa
or
or
cmc
add
filds
insb
dec
push
insb
mov
fidivl
mov
sahf
icebp
les
adc
xchg
test
add
inc
pop
imul
adc
jb
push
mov
in
dec
dec
push
xchg
imull
inc
repnz
jle
lods
jb
xor
loope
or
pop
sbb
std
jmp
mov
or
out
dec
lret
lea
cmp
sbb
sahf
mov
testl
jle
cmpsb
fs
fstl
xchg
push
repz
pop
movsl
sub
lods
dec
xor
and
cld
xor
sub
inc
mov
pop
in
adc
in
lods
fcomip
jae
out
loop
call
pusha
or
insl
movsl
dec
jne
add
adc
adc
shlb
aaa
sbb
xchg
loopne
adc
jno
outsb
push
loopne
icebp
out
inc
xchg
loopne
lahf
test
and
mov
jo
jno
jno
jae
xor
jle
add
popf
movhpd
and
je
sub
rcll
test
ds
pop
and
movsb
mov
fldt
mov
pop
jno
sbb
in
in
jmp
mov
clc
add
push
pushf
rolb
test
push
xchg
mull
mov
and
sahf
jno
or
mov
cs
push
push
sub
stos
mov
cmp
xor
xchg
test
mov
add
nop
arpl
fsub
adc
adc
stos
sbbl
pop
mov
pushf
in
in
iret
xor
in
jns
dec
adc
outsl
aaa
cltd
aam
mov
pop
es
repnz
xor
leave
aaa
lock
pop
stos
gs
mov
xchg
jbe
cmpb
xchg
cld
lret
test
jmp
dec
mov
shll
mov
and
call
pop
cmp
inc
xor
leave
call
push
mov
sbb
pop
dec
pop
mov
or
or
int3
out
pop
jno
dec
lahf
stc
fidivl
lods
loope
mov
lret
stos
stc
xchg
adc
sub
es
in
push
mov
faddl
adc
pop
inc
sub
fsubs
dec
xchg
sahf
bound
inc
in
in
push
xlat
xlat
cmp
mov
andb
inc
popa
mov
mov
mov
dec
cmpsl
adc
jle
cmpsb
lahf
mov
sub
dec
popa
mov
pushf
inc
lss
lock
inc
push
lock
xor
sub
pop
imul
subl
xchg
add
pop
sub
fnsave
cli
push
sbb
jp
sbb
mov
lret
in
cmp
mov
mov
lock
je
popa
int3
xor
push
add
ror
and
jno
xchg
pop
or
stos
jecxz
dec
sbb
sub
ljmp
mov
in
outsb
pop
xchg
mov
and
push
mov
rolb
jbe
subl
cltd
adc
imul
jnp
int
pusha
jne,pn
data16
loopne
jnp
push
cmp
or
dec
lahf
mov
inc
xchg
pushf
xchg
adc
pushf
push
jmp
xor
int3
sub
sub
lods
adc
je
xchg
sahf
add
fldenv
sub
cmp
ljmp
arpl
subl
nop
push
fists
fdivrl
mov
mov
or
dec
sub
bound
gs
cmp
sbb
loop
add
mov
xchg
mov
sbbl
in
pop
cmpsb
jl
cmp
lds
adc
xchg
inc
and
dec
inc
mov
dec
repnz
ficomps
adc
cmpsb
mov
xchg
jne
rorb
daa
jle
fwait
jb
shlb
sub
jbe
orl
dec
lods
icebp
popa
add
sbb
push
mov
insb
dec
fwait
push
and
aaa
les
pop
fldenv
or
ficoml
and
stos
adc
mov
int
or
lea
out
gs
inc
adc
jo
cli
inc
adc
or
sub
or
dec
or
mov
mov
sbbb
dec
jno
jno
mov
push
cs
imul
push
mov
add
jp
insl
sub
mov
addl
inc
mov
inc
pop
stos
and
xor
mov
mov
xchg
sbb
sbb
push
add
in
pop
outsb
insb
dec
mov
xor
mull
imul
insl
mov
xchg
mov
ljmp
pop
stos
mov
cmp
gs
ja
jge
test
mov
mov
cmp
or
aad
add
loopne
jo
add
fnstenv
rclb
stos
addr16
outsb
sbb
movsl
mov
stos
lahf
mov
xor
jmp
test
dec
rcrl
insl
pop
sbb
iret
sbb
sahf
add
jne
pushf
sub
out
popf
cltd
leave
cmp
xchg
and
sub
stos
push
fs
pop
movsl
jne
add
pop
push
push
aad
movsl
adc
ja
test
fisubl
xor
cmpsb
mov
push
data16
lock
aaa
call
mov
cmp
cmp
divb
push
add
jp
xor
pop
lds
in
mov
dec
lret
int3
pop
push
pop
lds
pop
jo
imul
loope
push
inc
inc
movsl
aas
xchg
popa
adc
sub
cmp
insl
cmp
jl
sub
clc
push
and
les
daa
add
inc
push
adc
in
das
aas
mov
dec
and
mov
gs
je
jbe
in
mov
mov
mov
jb
out
jl
add
sbb
cmp
xchg
sbb
cmpsl
orb
add
jl
mov
inc
lock
mov
fs
scas
lret
jb
add
pushl
loope
gs
fadd
nop
loop
fwait
in
xchg
movsb
outsl
xchg
xchg
pop
xor
mov
fs
in
mov
cmc
in
aaa
and
mov
lret
lea
push
jmp
stc
jp
aaa
stc
rcrb
push
push
lods
insl
cld
repnz
pop
and
sbb
mov
cld
movsb
scas
or
inc
hlt
add
pop
pop
idivb
adc
pop
sbb
add
cli
push
mov
imul
adc
inc
sub
sub
int3
je,pn
insl
mov
or
gs
out
or
sub
or
addr16
cmp
pop
sti
mov
xchg
enter
adc
mov
sub
cmpsb
popa
push
push
popf
lret
cwtl
lods
rcrl
xor
jmp
pop
mov
adc
fcmovnu
or
outsl
jmp
pop
andnps
ljmp
xchg
push
xchg
lea
add
aaa
mov
mov
fnsave
xor
cmp
sub
sbb
iret
out
hlt
cmp
lods
sub
cmp
mov
push
pushf
icebp
xlat
jb
push
push
xor
dec
ds
mov
test
neg
loop
leave
shl
aas
mov
adc
adc
aaa
jp
loop
repz
and
call
pop
je
xor
push
fsubrp
add
push
or
imul
dec
in
sub
int3
xchg
sbb
cwtl
imul
outsb
lds
mov
pushf
push
mull
mov
inc
pushf
jno
sbb
outsb
sub
js
in
inc
sbb
mov
jo
mov
sbb
sbb
stc
push
outsb
sub
mov
add
or
dec
pop
cmp
loop
rorl
pop
cli
pop
inc
xlat
and
popa
mov
dec
mov
pop
or
push
outsb
or
inc
dec
dec
cmpsl
xchg
mov
filds
xor
or
ss
icebp
gs
outsl
in
sbb
shrb
fisttpll
test
adc
js
lahf
popl
add
ljmp
lret
pop
xchg
loope
popa
inc
adc
lock
xor
repnz
roll
sti
or
and
or
add
jb
movsl
jp
or
dec
loop
xlat
je
cltd
imul
adc
xor
fs
mov
and
mov
inc
cltd
or
adc
pop
fdivs
dec
mov
ss
adc
outsl
sub
sub
lret
shrl
jno
popf
and
sub
fidivs
mov
xlat
and
or
je
fistps
push
in
out
pop
andb
mov
sub
fs
cmc
mov
dec
in
lock
push
mov
mov
sbb
pop
mov
mov
lcall
jle
jno
cltd
mov
aam
sbb
jge
fistps
jno
out
xchg
out
flds
movsb
ret
in
pop
mov
lods
jae
arpl
lea
std
test
sarb
pop
jp
xchg
lods
jb
pop
mov
div
dec
mov
fldenv
inc
test
repnz
ret
cmpsl
and
xchg
test
enter
pop
pop
aas
add
jb
add
ljmp
mov
mov
ja
out
adc
push
enter
sbb
push
jge
push
lods
cmc
jmp
pop
in
loop
sbb
sbb
mov
jno
sbb
cmp
adc
push
in
icebp
mov
mov
js
repnz
push
insl
sbb
xor
outsb
xor
sbb
lods
jb
es
xchg
jmp
cltd
and
or
push
sahf
in
out
mov
std
inc
cmp
data16
and
mov
cmc
gs
jo
pop
mov
stos
icebp
ja
pop
stc
mov
jg
out
mov
cmp
jmpw
outsl
or
sub
jge
sub
xchg
fucomip
sarl
jle
cmp
lods
or
repz
movsl
loopne
push
mov
gs
push
scas
ss
bswap
and
mov
mov
push
jno
sbb
mov
sub
incl
movsb
cmp
stos
call
in
mov
xchg
stos
xlat
lea
arpl
movsb
push
or
nop
stos
xchg
jnp
cmpsb
adc
jbe
out
es
sbb
or
mov
or
sub
sbb
movsl
lcall
push
mov
out
adc
jno
push
repnz
ret
movsl
ret
fxsave
add
in
add
orb
dec
add
ficompl
inc
int3
or
mov
or
add
push
mov
add
lsl
sub
outsb
inc
sub
popa
inc
js
mov
and
dec
push
orl
into
pushf
xchg
jecxz
mov
sub
aaa
pop
out
mov
shlb
ret
popa
stc
sbb
xchg
inc
inc
jb
into
fdiv
cmp
mov
and
cld
jle
xchg
add
mov
dec
ret
testl
mov
cmp
inc
jmp
lods
sub
xor
out
repz
dec
aam
mov
xchg
dec
lahf
outsb
jg
sub
adcl
mov
test
jecxz
pop
ret
dec
sahf
push
fcompl
dec
push
and
je
insl
lds
in
sbb
fmul
cld
lahf
ds
push
mov
push
rcr
inc
mov
inc
testl
in
cmc
inc
push
aaa
jb
lods
dec
and
mov
pop
xchg
mov
clc
aaa
jecxz
and
pusha
mov
add
adc
cmp
imul
decb
test
push
add
out
adc
sub
ja
mov
bound
add
mov
inc
mov
sbb
mov
fnsave
sub
testl
in
gs
inc
pop
shll
test
sbb
jo
adc
dec
xchg
lock
or
stos
push
dec
popa
in
shl
jle
insl
pop
fiaddl
imul
cmp
cli
int
scas
dec
jno
jo
gs
inc
out
outsb
jecxz
movsb
nop
jb
call
frstor
xor
pop
cmp
push
stos
les
repz
repnz
add
inc
cmp
aad
ret
mov
lret
in
pushf
pop
jg
push
mov
jo
mov
dec
dec
inc
scas
add
lds
pop
fdivl
jno
sub
gs
xchg
fsubrp
mov
sahf
dec
popa
cmp
xorl
test
push
fdivs
outsl
pop
jo
lock
adc
xor
and
mov
jg
sub
popa
arpl
mov
mov
sbb
ret
inc
mov
inc
mov
test
jb
push
dec
or
mov
shll
popa
decb
push
in
cmc
or
inc
sub
or
out
fcmove
or
ss
and
xchg
clc
mov
cli
cwtl
push
lock
shlb
popf
mov
std
dec
push
cmp
lock
pop
lret
adc
pop
cmp
cwtl
fs
notb
push
push
scas
addr16
sbb
push
sbb
out
outsb
dec
push
out
push
fsubrs
movsb
imul
stos
adc
adc
std
cmp
cmp
cs
aam
dec
push
dec
decl
jo
jo
add
or
rorl
mov
lock
inc
inc
cmp
jg
mov
test
mov
inc
lock
aad
sub
outsb
lods
insb
fs
cmp
and
jo
mov
outsl
iret
pop
subb
xchg
sbb
test
cmpsl
in
lock
push
jbe
sbb
mov
jae
loopne
sub
push
adc
es
movsb
aam
popf
imull
bound
scas
daa
pop
imul
rep
call
and
xchg
cmpsb
scas
dec
mov
pop
xchg
mov
subb
pop
ret
xchg
lods
jb
adc
push
shll
mov
insl
sub
mov
fistpll
push
xchg
sub
and
adc
movsb
movsl
imul
push
jo
mov
jbe
outsb
addr16
dec
mov
add
cmp
jae
outsb
pop
xchg
loopne
and
jle
xchg
mov
dec
xlat
xchg
mov
xchg
push
sbb
or
ss
push
frstor
push
inc
or
dec
loop
test
xchg
movsl
ret
pop
or
insl
adc
aaa
and
add
lods
fucomp
mov
out
in
xchg
inc
and
out
mov
adc
dec
aam
jbe
pop
sub
shlb
dec
push
sub
cmp
pop
mov
outsb
mov
arpl
mov
in
vpunpckhdq
movsl
repnz
mov
dec
loopne
aad
push
fnstcw
or
in
dec
lock
xor
or
sub
pop
sbb
or
fbstp
and
or
jb
std
mov
mov
daa
mov
cld
hlt
iret
dec
rcrb
xchg
pop
cmp
push
fidivrl
mov
xchg
insl
pop
sahf
sub
lret
adc
dec
mov
adc
in
mov
or
sbb
call
xor
jns
mov
mov
sub
fadd
stos
mov
ss
sbb
add
mov
or
mov
jb
inc
lahf
faddl
mov
scas
jecxz
jecxz
loop
mov
sbb
pushf
notl
test
sbb
aaa
inc
cmp
add
shlb
fs
add
les
add
and
jl
push
test
xchg
inc
sub
mov
xchg
cld
lret
jle
lock
outsb
adc
fdivrl
mov
jnp
dec
stos
int3
inc
fbld
mov
loope,pn
inc
mov
lods
push
sbb
dec
sub
fstpl
pop
inc
sbb
pop
pusha
arpl
mov
adc
lret
mov
in
dec
and
mov
loop
imul
lahf
or
imul
dec
addl
into
stos
add
pop
adc
lret
lock
sbb
jno
ficoms
xlat
cmp
cmc
xchg
or
jb
xor
sub
sbb
es
mov
das
lods
sbb
dec
ss
shr
sbb
push
pop
in
mov
or
loope
jns
scas
mov
int
shl
sub
and
jge
sub
or
cmp
xchg
aas
clc
shll
or
dec
call
sub
lods
gs
sbb
sbb
lock
or
mov
lret
mov
xchg
xor
movsb
jle
add
ret
cld
xor
daa
stos
cmp
push
fs
mov
and
loop
cmpsb
push
xchg
add
es
mov
lahf
push
js
test
cmp
mov
in
cld
adc
xchg
les
xor
cmpsb
push
xor
pop
mov
xchg
inc
loope
in
test
jecxz
cmc
cmp
add
lds
cmc
pop
stos
repnz
in
iret
popf
sub
adc
enter
mov
sub
mov
lock
lods
pop
cmpsb
jnp
mov
cmpb
addr16
aaa
lods
adc
dec
andb
dec
or
popa
nop
mov
pop
add
outsb
mov
xchg
shl
dec
addb
adc
dec
aas
pop
jl
cmp
cmp
shl
roll
mov
aam
out
jae
inc
gs
xchg
mov
sub
cmp
jbe
addb
mov
test
popa
sbb
sub
dec
imul
push
add
das
popf
ret
mov
pop
mov
mov
sbb
outsb
adc
test
filds
outsl
adc
inc
loopne
or
pop
jg
or
out
xlat
lods
out
inc
mov
jmp
xor
push
dec
pop
test
xorb
jae
inc
mov
imul
and
xchg
ljmp
cmp
loope
lret
outsb
lahf
xor
ja
movsl
mov
ficomps
dec
dec
fisubl
iret
sbb
adc
dec
xor
test
pop
jl
add
sub
les
ffree
mov
cld
scas
arpl
inc
xlat
xor
cs
outsb
dec
lss
dec
xor
jno
dec
in
bound
sbb
sbb
sub
aad
sub
fwait
addr16
test
fcomps
adc
fwait
sbb
es
rcrl
int3
sub
mov
mov
fstpl
push
ja
lock
call
test
fwait
sbb
into
mov
mov
cmp
es
cmp
inc
scas
mov
scas
ja
dec
add
mov
add
adc
movsb
ja
and
jb
rcrl
mov
outsb
jne
jno
push
or
jnp
push
fs
pop
pop
movsl
push
lea
xchg
add
loopne
ret
mov
cltd
js
jbe
pushf
mov
iret
and
mov
jns
and
pop
mov
inc
sub
mov
mov
stos
adc
test
adc
push
cmp
fisubrl
xchg
xor
mov
shrb
pop
jo
clc
jp
cltd
negb
aas
mov
lret
jo
add
cmpsl
sbb
add
ds
and
testb
shll
mov
pop
rcl
decb
fincstp
or
jno
lret
f2xm1
or
dec
sub
stos
stc
sbb
and
jbe
movsb
mov
gs
xorl
push
insb
xor
add
and
xor
cmp
inc
test
pop
int3
hlt
in
fcmovnu
jnp
dec
xchg
lds
mov
jne
imul
xorl
mov
push
lods
sbb
pop
or
sbb
pop
popf
sbb
jb
jo
xlat
cmc
sbb
stos
xor
sbb
inc
fisubrs
mov
inc
mov
xchg
lret
sbb
and
rol
imul
lcall
mov
push
lea
int
xor
mov
pop
fadds
orb
imull
cld
jg
js
push
or
sbb
leave
xor
or
mov
or
es
loopne
xchg
xor
fcomi
pop
mov
mov
adc
jns
and
adc
xor
lcall
push
or
sbb
mov
mov
sbb
test
push
es
add
jp
xorl
dec
jge
negl
and
cmpsb
cmp
xchg
mov
pop
sub
das
mov
shlb
mov
popf
repnz
jmp
fucomi
mov
dec
push
push
in
jmp
mov
stos
and
push
adc
cli
popa
cmp
scas
xchg
or
filds
mov
fldcw
and
jmp
lret
adc
xor
and
or
xor
lods
shl
xchg
addr16
add
mov
cmpsl
into
sub
test
and
push
arpl
fisubrl
inc
add
jb
je
pop
testl
dec
inc
test
outsb
pusha
stc
or
dec
sub
in
add
gs
sbb
push
loopne
lods
sub
and
lods
or
sbb
out
jbe
scas
mov
mov
insl
loope
or
xchg
fs
mov
jne
lods
jge,pt
xchg
fstps
fs
leave
js
cmpsl
lds
or
push
jg
xor
sub
add
mov
add
loopne
mov
mov
dec
mov
mov
add
adc
call
adc
mov
lock
fcomi
sub
aaa
mov
pusha
jmp
or
lahf
xor
mov
orl
loop
stos
and
xchg
dec
mov
xor
testl
dec
sub
jno
js
pusha
and
cli
mov
inc
lcall
test
gs
pushf
mov
incb
stos
int3
xchg
cmpsb
mov
ja
push
jl
jno
fs
pop
cmpsb
insl
sbb
imul
mov
dec
sahf
mov
fwait
add
data16
cmpsb
push
pop
out
bound
loope
add
push
mov
pop
jno
pop
packssdw
xchg
jno
and
fs
adc
cmpsl
jmp
test
ja
imul
sbb
pushf
mov
sbb
push
fisttps
mov
fs
cltd
pop
insl
cmp
repz
jmp
imul
push
stos
fwait
out
rol
loopne
mov
add
adc
cmp
mov
fldcw
fbstp
mov
xchg
leave
in
pop
sub
jb
or
lds
sbb
pop
jo
das
aaa
adc
cmp
imul
xor
or
icebp
sbb
insl
jae
lea
stc
iret
ficoml
jge
pop
or
dec
xchg
sbb
cld
dec
pop
xchg
in
fistps
outsl
int3
push
notl
adc
fstpl
jo
push
dec
pop
imul
stc
and
jmp
rorb
dec
mov
xor
mov
pusha
testb
pop
pop
mov
mov
loope
jno
mov
fimull
xchg
jecxz
insl
fists
out
sub
pusha
lcall
mov
jl
icebp
sbb
js
jge
es
xchg
pop
cmp
sahf
cltd
sbb
push
adc
add
push
repnz
jge
lret
xor
sub
out
push
int3
aad
sahf
stos
jnp
push
lret
jo
loopne
mov
aaa
iret
pop
and
xchg
outsl
lahf
sbb
add
subl
loop
or
and
pop
test
mov
dec
pop
or
xchg
jo
pop
xchg
and
mov
mov
mov
jns
in
push
out
stc
cld
fwait
pop
dec
fcompl
inc
lcall
shrl
add
mov
stc
jmp
roll
mov
xchg
movsl
push
icebp
push
insl
push
in
pusha
cmp
adc
adc
cwtl
mov
push
stc
stos
ds
movsb
and
inc
jg
std
dec
test
test
or
sbbb
insl
int3
pop
es
pop
lahf
movsl
mov
xorb
fs
mov
dec
cmp
sbb
outsl
movsl
jmp
fucomip
mov
cmpsb
mov
pop
sub
mulb
pop
jb
cltd
cwtl
push
push
pop
out
push
inc
cmp
xchg
sub
fmull
xchg
mov
cmp
adc
fcoml
movsl
repnz
shr
movsl
in
xor
outsb
and
mov
pop
testb
repnz
mov
mov
in
scas
cmp
mov
iret
xor
pop
or
mov
or
mov
pushf
arpl
outsl
int3
ja
out
mov
gs
adc
xchg
push
idivl
xor
sub
nop
stos
imul
push
ja
xchg
inc
xchg
cmp
out
push
pop
add
imul
gs
mov
mov
aaa
enter
nop
ret
lds
mov
pop
xchg
ljmp
fs
push
stos
aaa
sahf
sarl
mov
mov
mov
add
pop
adc
mov
loope
dec
sub
mov
cmp
scas
inc
push
adc
xchg
dec
btr
add
dec
js
pop
mov
inc
fwait
sbb
shlb
fisttps
add
ficoms
fs
pop
fiaddl
stos
nop
addl
or
jae
cmp
stc
or
test
roll
jo
out
push
jmp
cmp
ljmp
jb
mov
push
push
bound
dec
xchg
outsb
movsb
mov
xchg
push
jno
cmpsl
arpl
loope
xchg
and
fsubrl
mov
bound
push
mov
add
movsl
repz
add
inc
adc
xor
inc
xor
cmpsb
jb
stc
pop
jle
sub
lret
lods
sbb
ljmp
mov
xchg
sub
js
sub
mov
rcrl
fwait
bound
aam
inc
jmp
dec
jle
or
mov
je
xchg
fcmovne
out
sahf
ret
aam
dec
cmpsb
movsb
xchg
jne
add
scas
or
daa
sarb
outsb
add
bound
scas
cmp
push
jge
imul
push
add
out
leave
mov
sbb
adc
lret
call
jmp
sbbl
jb
and
pusha
jb
and
and
popa
rolb
dec
add
inc
es
cwtl
lret
out
and
std
xor
call
cwtl
pop
stos
lret
mov
xor
lods
dec
test
insl
test
fnstenv
jno
inc
sbb
mov
mov
sub
mov
adc
stc
dec
sub
movsb
xchg
in
sbb
outsb
stos
dec
mov
movsl
push
test
mull
pop
dec
ret
mov
mov
sbb
dec
cmp
jae
movsl
sub
repnz
iret
clc
xorl
lds
andl
fwait
push
ficompl
pushf
xchg
dec
int3
stos
loope
add
sub
fidivrs
sbb
inc
stos
dec
lahf
push
mov
cmp
sub
xor
fs
imul
xchg
lods
sub
jno
jns
push
xor
xor
adc
out
sahf
add
stos
data16
out
push
pusha
popa
inc
jns
shll
js
xor
lds
jb
mov
pop
out
xchg
lods
jmp
int3
mov
out
movsb
adc
xor
jb
loopne
or
mov
outsl
in
xor
xlat
outsb
je
movsl
mov
push
add
or
and
jmp
jb
mov
mov
lahf
push
jp
imull
movd
pop
or
ret
mov
stos
xchg
inc
xor
in
jnp
fildll
jns
mov
cmpsb
mov
mov
int3
jge
adc
jp
stos
mov
pop
mov
pop
jbe
jg
imul
repnz
lods
pop
sbb
mov
dec
push
loope
jge
sbb
inc
mov
xchg
shlb
and
enter
xchg
icebp
call
lcall
or
adc
or
sti
dec
mov
fcompl
lcall
push
repnz
push
and
add
out
and
pop
cwtl
push
imul
outsb
imul
dec
adc
xchg
rcr
push
sub
adc
fwait
mov
add
mov
mov
push
movsb
popf
fadds
inc
lock
add
mov
sbb
mov
dec
mov
or
mov
adc
scas
pop
inc
xlat
push
jecxz
dec
mov
xchg
jno
mov
fildll
stos
xor
dec
addl
push
mov
mov
mov
popf
lcall
aad
popa
jbe
cwtl
xor
jno
in
pop
xor
cmpsl
push
mov
xchg
xchg
icebp
xor
mov
fnstsw
mov
sbb
icebp
or
cli
jns
sbb
icebp
fs
repz
sbb
pop
adc
sub
xchg
dec
xchg
fisubs
out
leave
pop
and
cld
ss
lock
sbb
pop
fwait
ljmp
or
mov
leave
lahf
or
hlt
inc
ss
ret
jl
test
jno
in
xchg
mov
aad
jb
clc
dec
insb
lods
loopne
sbb
and
lock
adc
xchg
out
inc
fnstsw
in
outsl
call
push
lods
cltd
outsb
fistpl
mov
push
push
inc
insl
and
mov
adc
int3
and
or
loope
jne
mov
cmpsb
cmp
popa
jae
test
ja
in
jp
hlt
sarb
es
dec
or
fdecstp
lods
leave
fldt
call
adc
ror
xchg
fldenv
xor
dec
popf
jle
cltd
imul
fnstcw
stc
mov
mov
fcmovnb
mov
pop
inc
repnz
sub
pop
mov
fidivrs
push
imul
mov
cmp
mov
or
mov
cltd
data16
pop
jecxz
dec
sub
jle
jl
xor
add
mov
outsl
mov
mov
add
adc
dec
mov
pop
ficoms
fs
push
mov
das
xor
pop
inc
mov
popa
mov
ljmp
stc
stos
insl
sahf
daa
and
mov
pop
mov
pusha
sub
jecxz
mov
cld
je
xchg
bound
ljmp
cmp
rolb
dec
jl
and
dec
lahf
fwait
data16
std
and
clc
cmpsl
cmp
fildl
mov
mov
xor
mov
arpl
dec
cmp
xchg
or
or
dec
mov
popf
cmc
or
lret
imul
push
mov
cs
das
and
jo
cmp
sub
popf
outsb
and
dec
inc
imul
pop
stc
loopne
adc
and
mov
push
xor
outsl
and
in
outsb
pop
push
pop
leave
dec
test
push
mov
das
lret
mov
fcmovbe
fwait
adc
cld
push
ror
push
cltd
subb
imul
lcall
jle
or
xlat
lock
movsb
add
xor
and
iret
shl
jb
mov
mov
push
or
repz
mov
mov
mov
xor
pop
movb
xlat
iret
fisttps
es
and
aad
das
addr16
mov
aad
pushf
pop
sub
jo
addl
pop
cmpsl
add
inc
xor
mov
push
adc
push
in
into
xor
cwtl
adc
push
call
sub
sbb
mov
mov
mov
cmp
leave
mov
xchg
inc
cmp
xor
lahf
xchg
fcmovu
lahf
mov
mov
push
sbbb
je
xor
loope
scas
cmp
sub
mov
movsb
or
lret
mov
cli
pop
and
xchg
fisubrs
xor
fbstp
cmc
int3
loopne
and
cmp
out
xchg
xchg
mov
in
mov
sarb
mov
mov
pop
js
xor
mov
imul
add
lahf
pop
jl
testb
jb
incb
or
lahf
repnz
xchg
lcall
sbb
mov
pop
sbb
sbb
add
outsl
xor
jb
lods
cwtl
loope
inc
sbb
cwtl
lds
imul
fistpll
pop
int3
push
lahf
imul
xlat
lcall
scas
nop
add
cmpsl
mov
test
mov
sbb
into
dec
jb
mov
add
out
aam
mov
sahf
xlat
or
ja
jo
dec
cmp
mov
sub
imul
mov
xor
fisubrs
or
jmp
cli
leave
xor
ljmp
xchg
cwtl
ja
or
loopne
out
mov
in
test
dec
xor
stc
popf
and
sbb
mov
outsl
sbb
jo
adc
fsubl
add
lods
adc
jns
pop
sbb
xchg
movsl
sub
mov
pushf
and
and
and
pop
loope
inc
int
out
xor
lods
addr16
or
das
out
mov
icebp
dec
fildll
sbb
mov
xchg
cmpb
mov
or
dec
mov
dec
xor
repz
mov
daa
pop
jle
sbb
mov
movsb
sub
xchg
daa
mov
jge
ret
mov
cli
shll
notb
inc
and
loope
push
adc
rorb
mov
mov
ret
pop
ret
mov
test
mov
pushf
outsb
adc
push
add
rcrl
xchg
icebp
push
or
push
icebp
dec
add
dec
in
push
xor
test
lahf
in
pop
mov
and
movsb
jno
jo
or
inc
push
and
sub
cld
loopne
and
or
mov
lock
adc
xchg
mov
cltd
inc
jg
gs
pop
fsubs
cmp
xlat
orb
loope
test
or
or
scas
dec
pop
mov
jl
prefetch
adc
data16
cmp
mov
bound
test
rolb
sbbb
mov
mov
mov
mov
pop
mov
and
in
xor
dec
xchg
fistpl
push
lock
cltd
test
stos
jg
sub
aaa
imul
mov
or
sub
push
stc
fs
push
inc
imul
mov
aas
and
xchg
mov
inc
mov
sahf
mov
mov
sbb
push
scas
lcall
xchg
inc
dec
pop
lret
fwait
jae
sub
sbb
scas
jl
mov
lock
jae
cmp
fucomi
cmp
lock
rorl
sub
fisubrs
in
dec
sbb
clc
mov
in
xor
ljmp
out
mov
pop
inc
sbb
mov
das
std
mov
stos
xchg
sbb
les
gs
mov
xor
xchg
cmp
lock
clc
fwait
ret
push
xchg
pop
loopne
mov
data16
mov
or
pop
es
xor
movsb
mov
in
push
cltd
xchg
mov
mov
cmp
lret
arpl
loop
lock
std
outsl
xchg
pop
shrb
out
mov
push
int
mull
sahf
stos
sbb
and
outsb
stos
and
dec
jg
sbb
cmp
in
inc
or
adc
dec
call
cld
shrb
nop
fldt
push
adc
push
jb
pop
pop
shl
aaa
je
nop
movsl
sub
inc
jle
xchg
add
sbb
dec
adc
shlb
out
es
das
dec
ljmp
mov
mov
lock
sub
xchg
jo
pop
lret
andb
es
cmp
pusha
in
dec
push
pusha
jge
popa
inc
idivl
fs
mov
pop
inc
popa
jns
fmull
fisttpl
repnz
dec
loope
aas
sbb
cli
popa
adc
div
cmpsl
ds
pusha
icebp
outsb
or
mov
fsubl
pusha
cld
test
lods
inc
int
lea
inc
pop
dec
in
inc
pop
push
cmp
jo
dec
mov
jmp
fnstsw
xor
mov
inc
cmp
mov
xchg
int
and
jo
or
inc
std
jnp
pop
movsb
mov
idivl
pop
mov
cmc
stc
and
xchg
lea
in
pop
fadd
outsb
xchg
or
mov
mov
loop
lret
xchg
inc
mov
lcall
movsl
ja
movsb
fisubl
sbb
mov
ret
xchg
xor
pop
popa
mov
pop
in
cmp
rclb
out
dec
fldl
cmp
push
dec
fcoml
adc
int
movlps
mov
adc
cs
mov
icebp
mov
lcall
scas
lret
std
in
xchg
mov
in
ret
sar
or
lods
orb
out
xchg
push
mov
fidivl
cmp
movsb
int3
mov
bnd
fwait
imul
adc
in
movsb
bound
leave
data16
mov
push
imul
in
dec
loope
dec
pushf
testb
icebp
pop
aaa
shlb
cmpsb
adc
cmpsl
add
push
lock
sarb
insl
add
mov
jne
jno
push
mov
out
and
xchg
pop
in
push
mov
jns
sbb
fs
adc
sbb
xchg
adc
lret
add
jo
pop
dec
cmp
cmp
adc
push
mov
arpl
stos
fildl
lahf
sbb
xchg
xchg
stos
js
mov
mov
fsubrl
out
mov
hlt
sbb
dec
push
jl
cld
loopne
nop
pop
jno
inc
xchg
imul
outsl
push
test
hlt
push
inc
xor
add
mov
add
sub
jnp
or
jmp
mov
lods
jb
xor
adc
in
lcall
fidivs
aaa
in
sub
jmp
sub
sbb
pop
out
push
addr16
cmp
call
mov
sarb
xchg
mov
jo
mov
inc
in
mov
jge
outsl
mov
pop
fildll
mov
test
dec
lret
dec
les
test
js
mov
jno
push
in
xchg
imul
mov
push
dec
sbb
in
adc
dec
movsb
sbb
jo
xchg
and
ss
outsb
push
jl
movsb
jo
jo
mov
in
inc
cs
jge
test
imul
mov
lock
data16
cmc
dec
jbe
xlat
incl
mov
lods
sbb
movsl
mov
dec
pop
push
inc
jne
dec
ljmp
adc
push
and
popf
mov
out
sbb
cmp
push
dec
push
mov
pop
mov
mov
or
mov
xor
pop
adc
sbb
rorb
dec
in
xchg
mov
jmp
or
cmp
jo
mov
cli
or
dec
dec
adc
jno
jbe
iret
lods
rclb
loope
xchg
call
inc
xchg
fildll
add
jge
rorl
mov
outsb
stos
pop
mov
test
and
cmp
cmp
ljmp
jmp
fisttpl
mov
and
leave
sbb
and
adcb
jl
sbb
mov
jo
leave
lock
mov
pushf
or
bound
cmp
out
cmpsb
mov
into
fwait
movsl
sbb
mov
repnz
rorb
aas
jnp
testl
mov
xchg
jecxz
stos
dec
inc
or
pop
mov
cwtl
pop
fs
shlb
int3
fisttpl
dec
dec
insb
push
imul
gs
sub
and
movsl
sbb
add
mov
or
rcl
in
inc
jb
imulb
out
adc
mov
inc
mov
mov
mov
adc
or
pop
xchg
call
cs
fdivl
push
fs
fists
mov
mov
push
jno
push
xor
out
icebp
sti
mov
leave
in
push
mov
adc
ljmp
rol
xchg
into
lock
inc
icebp
fdivr
inc
adc
xchg
sbb
lret
sbb
imul
add
push
jle,pn
in
fistps
les
push
pop
xorl
mov
stos
in
inc
pop
push
jns
dec
pop
lock
ja
cltd
pop
scas
adc
in
mov
out
dec
and
imul
cli
dec
movsl
xchg
cmpsl
test
push
fs
sbb
dec
or
pop
inc
clc
or
fwait
jmp
adc
movsl
pop
jp
jo
imul
pop
shll
add
arpl
call
insl
push
mov
dec
in
sub
stos
add
jae
mov
or
iret
popf
popl
mov
xor
or
xchg
pop
nop
ret
rorb
sub
cmp
sub
mov
hlt
test
jae
mov
and
cmp
lret
mov
dec
in
mov
out
xchg
add
lds
popa
inc
jae
xchg
and
xchg
mov
cs
lret
or
test
stc
shrb
movsb
inc
or
cld
sahf
int
pop
jmp
lahf
imul
adc
mov
inc
or
test
jge
in
lock
pop
cmpsb
int3
inc
jle
and
xchg
les
das
inc
pop
es
imul
popf
xor
shl
xor
adc
cmc
insl
jb
leave
cmp
lds
nop
lds
xchg
add
and
and
sub
imul
es
in
lds
int
adc
sbb
aas
test
sub
fbstp
push
or
pop
lret
clc
mov
fimuls
xchg
jg
je
mov
xor
popa
popa
das
xchg
stos
pop
int3
and
imul
sub
sbb
pop
call
pop
xor
stos
ficoms
aaa
sbb
fnstsw
pushf
das
loopne
mov
pop
dec
ror
aaa
sahf
and
shrl
cli
in
xchg
gs
clc
nop
inc
pop
mov
push
add
or
add
dec
sbb
pop
cltd
daa
dec
hlt
pop
cwtl
mov
jo
add
add
in
stos
es
jl
int
lea
pop
xor
popf
inc
push
and
sub
insl
ja
xchg
lret
cli
sub
and
outsb
mov
sub
cld
or
fisubrs
jle
or
push
lods
dec
push
jb
lea
imul
lcall
mov
dec
jmp
std
add
dec
inc
mov
cwtl
push
mov
in
pop
pop
sub
in
rol
shll
insb
mov
push
push
pop
test
pushf
imul
enter
ret
pop
xor
cli
aad
xor
and
in
mov
inc
xor
push
pop
gs
add
rcll
and
imul
and
mov
das
inc
push
outsb
sbb
in
ja
push
xchg
mov
clc
push
jo
mov
mov
mov
add
push
and
ja
and
jp
and
loope
inc
sti
shrb
jmp
push
and
jg
jns
inc
dec
cmp
iret
adc
mul
in
mov
out
and
mov
out
inc
jae
arpl
cmpb
push
loop
xchg
movsl
sbb
hlt
sahf
xchg
ret
mov
rcrb
dec
popa
and
out
lahf
sbb
fs
fldl
push
out
push
cltd
test
and
cld
out
in
dec
imul
or
fwait
xchg
dec
outsb
lea
imul
sub
add
jae
sbb
test
xorb
es
nop
inc
dec
lods
jl
cmp
or
lret
jge
sub
cmc
dec
mov
jp
pop
loope
or
dec
outsl
or
xchg
dec
loopne
xchg
or
push
xor
mov
mov
stos
mov
pop
dec
subb
or
outsb
sbb
nop
jnp
mov
scas
lock
cmp
es
mov
aaa
mov
cli
push
lods
daa
sub
jo
ss
cld
hlt
in
pusha
ret
imul
cwtl
pop
insl
or
mov
imul
and
adc
loope
xchg
mov
adcl
fwait
sub
sbb
out
stos
scas
sahf
adc
push
scas
popf
mov
push
iret
loope
add
pop
add
out
mov
test
outsl
pop
fildll
data16
jb
dec
std
pop
sub
sbb
pushf
push
mov
les
mov
movsl
sbb
es
test
fs
or
lock
divl
out
xor
xor
lods
ret
mov
sbb
adc
fsts
mov
out
jb
stos
nop
mov
fsubs
imul
cltd
in
test
pop
fstpt
popa
lods
loopne
decl
loope
inc
lret
inc
rclb
and
mov
xchg
lock
inc
mov
jno
and
dec
dec
add
jecxz
jl
mov
cli
cltd
jno
pushf
fldcw
stos
jae
arpl
pop
jmp
adc
outsl
cmpsb
dec
fcoml
daa
test
sti
sbb
icebp
mov
lods
lcall
hlt
das
sub
loope
int
and
mov
ficomps
cwtl
pop
and
inc
jmp
pop
lods
fcoml
sbb
pop
mov
ret
arpl
pushf
adc
imul
call
lock
int
rcrl
aaa
mov
cmp
or
lods
int3
in
repnz
xchg
aaa
jns
jg
sbb
pop
inc
push
movsl
outsl
mov
xlat
mov
mov
dec
jbe
pop
std
push
cmp
lods
daa
and
push
jge
mov
or
mov
and
stos
pop
or
sub
xor
rorb
mov
xor
lahf
adc
icebp
dec
inc
dec
mov
cmpl
movsl
jns
mov
sbb
jge
add
mov
ss
adc
scas
and
scas
push
movsl
inc
mov
loope
push
hlt
push
push
loop
int
jg
inc
ds
popa
xchg
ja
sbb
add
fwait
sbb
movsb
daa
pop
mov
dec
in
jl
mov
rcl
mov
jb
popa
pop
test
imul
and
fisubs
xorl
data16
sbb
andb
lcall
pop
xor
and
and
rcl
gs
negl
mov
rclb
je
fs
shlb
in
shll
int3
pop
jl
daa
push
and
push
xchg
fcoms
jbe
fwait
inc
xor
mov
xlat
inc
addr16
dec
and
fwait
push
mov
repnz
imul
xor
sub
adc
mov
rorb
adc
or
cwtl
add
jno
jae
xor
mov
mov
xchg
cld
out
jnp
push
outsl
ficomps
push
mov
addr16
jbe
cld
loope
cmp
adc
dec
and
add
fidivl
xor
xchg
insl
mov
push
inc
push
pusha
fidivs
insl
ret
inc
ret
filds
pop
cmp
or
repnz
push
adc
sarb
dec
pop
xchg
mov
cmp
jo
xchg
xchg
adc
push
aaa
ret
popf
loopne
dec
mov
dec
loop
imul
cmpsb
pop
xchg
and
and
ss
movsb
in
jo
sbb
and
adc
jmp
lret
imul
lea
sarl
subl
push
mov
push
add
testb
scas
mov
popa
push
mov
and
imul
insl
sub
call
jns
jmp
lcall
or
cmp
fistpll
mov
jl
sbb
lahf
jle
jge
popa
iret
and
hlt
xchg
test
test
out
pop
notl
jle
sbb
mov
popf
and
sbb
daa
test
mov
data16
iret
pusha
mov
imul
mov
inc
xlat
gs
imul
mov
xchg
sbb
stos
jo
test
repnz
lods
sbb
xor
xlat
mov
pop
call
add
inc
adcl
imul
pushf
lret
out
popf
out
ret
pop
repnz
mov
lea
cltd
sub
mov
mov
xor
outsb
add
mov
mov
mov
or
jns
adc
fwait
pop
and
frstor
or
sbb
sub
dec
aaa
jns
jo
jmp
xchg
xchg
mov
sub
cmp
ficompl
es
mov
pop
sub
sub
xchg
gs
cmc
pop
ljmp
push
movsl
mov
or
jo
adc
mov
pop
xor
pop
in
push
imul
popf
dec
call
icebp
jmp
stos
pop
xchg
xchg
mov
inc
mov
jnp
insl
add
bound
and
xor
push
sub
out
stos
jg
mov
es
scas
xor
cmc
cmpsl
mov
push
sbb
pop
lcall
sub
popf
pop
stos
pop
pusha
push
mov
pop
insb
push
mov
xor
adc
cltd
nop
ret
decl
dec
xchg
sbb
pop
scas
fcom
xor
sbb
repz
imul
and
in
pop
ficompl
jle
xchg
outsb
cmpsl
call
repnz
out
rcll
fmulp
sub
rol
mov
mov
lods
sbb
jns
test
clc
adc
mov
pop
adc
jg
sti
sbb
iret
pop
push
push
ret
mov
cwtl
mov
dec
xor
pusha
stc
cmp
lock
loope
ljmp
das
es
mov
pushf
inc
mull
mov
or
dec
mov
int3
rcrb
insl
dec
fildl
mov
incl
lods
daa
mov
outsb
jb
xchg
ficoms
out
outsl
and
fistpl
out
scas
ret
int
testb
stc
pop
aas
loope
enter
push
movsl
lods
push
in
inc
sbb
jns
dec
das
shlb
sbb
or
sbb
addr16
leave
popa
cmp
rclb
pop
mov
mov
jo
movsl
repnz
leave
cmp
or
insl
repnz
pop
and
lret
mov
lock
push
pop
xor
or
add
sub
mov
dec
mov
sub
fildl
aad
inc
shlb
dec
xor
in
sbb
adc
fmulp
out
push
loopne
jle
bound
ljmp
decb
mov
aaa
nop
add
imul
sub
in
pop
jns
xchg
mov
cmp
xor
pop
dec
lods
dec
cmp
add
in
inc
std
fldcw
xchg
testb
mov
add
push
xchg
pop
imul
icebp
aas
sbb
mov
dec
mov
dec
fiadds
and
rcrl
int
push
sub
adc
and
int
or
push
xor
test
lret
inc
insb
or
hlt
cmpsl
lret
inc
gs
insl
and
xchg
bsf
sub
jmp
cmp
dec
popa
mov
cmp
leave
stos
popf
icebp
mov
movsl
and
adc
fsubrl
push
xchg
aaa
push
in
cmpsb
popa
pop
out
outsl
in
shll
adc
fwait
and
and
sahf
jae
xchg
pavgw
js
daa
test
mov
cmovs
es
sub
and
or
mov
sbb
mov
xlat
call
push
jo
xor
xchg
cld
scas
mov
mov
ja
push
in
clc
sbb
push
lret
shufps
xlat
sbb
and
mov
mov
shlb
xor
in
xlat
push
adc
frstor
sub
ljmp
inc
scas
int
inc
cmp
pusha
cmpsl
adc
bound
ja
or
pop
cltd
mov
fistpl
ljmp
pop
dec
imull
jp
fwait
data16
xchg
cmpsb
das
fstpl
sbb
rorb
xadd
or
mov
pop
insl
pop
push
push
imul
adc
adc
sbb
fs
ficompl
stos
sub
outsb
orb
int3
fs
mov
sub
mov
push
adc
push
sahf
adc
jo
ja
lea
xchg
roll
jb
xchg
std
scas
sbb
push
pop
or
dec
outsb
imul
push
sub
dec
xchg
enter
sahf
jbe
fsubrs
or
imul
inc
and
xlat
mov
mov
xchg
out
fucomip
xchg
lods
xlat
xchg
mov
lahf
sub
ret
push
jo
insl
jle
mov
mov
or
sub
fmuls
push
pop
fs
jge
int
push
push
cmp
add
xchg
add
or
repnz
push
mov
das
pusha
xchg
out
nop
jo
inc
jb
loope
insb
jnp
sub
es
adc
mov
cmpsl
dec
test
xchg
xlat
lock
mov
sbb
pop
in
int3
xchg
push
push
fildl
test
ss
rcrl
icebp
adc
call
xchg
mov
iret
push
xorl
pop
movsl
loope
xor
ja
add
jbe
mov
pop
inc
push
push
dec
repz
xor
movsb
inc
outsl
xorl
loop
popf
push
or
add
out
in
jo
rorl
and
sbb
push
lods
and
mov
call
daa
test
in
pusha
scas
stos
mov
inc
inc
rolb
inc
or
pop
inc
adc
scas
fdiv
fsubrl
mov
jne
sbb
add
insl
or
cmp
loopne
lods
push
sbb
fs
mov
leave
loop
ljmp
imul
in
mov
push
jg
out
loope
mov
pop
mov
lret
mov
sub
in
mov
stos
repz
inc
fcmovnu
sti
and
push
add
clc
sti
jmp
push
push
fdiv
dec
sbb
mov
in
repz
ja
subl
cmpsl
loopne
ss
or
je
adc
std
int3
mov
rcrl
mov
sti
xchg
or
mov
mov
out
fcompl
mov
mov
in
popf
add
dec
lahf
xor
push
and
fcmove
jno
fwait
xchg
fstps
inc
stos
jno
jae
inc
popa
mov
pop
mov
push
sbb
xor
mov
sub
mov
xchg
sahf
pop
mov
lods
push
loope
inc
xchg
ss
pop
xchg
les
test
jb
add
in
outsb
mov
rolb
cmp
roll
push
in
adc
fs
inc
and
and
mov
inc
sbb
sbb
fs
xchg
or
push
sarl
das
cmp
lods
outsl
or
jae
sbb
repz
nop
jno
mov
sbb
sbbl
lret
ds
stos
or
push
imul
shll
std
cs
popa
jno
loopne
lods
scas
je
or
mov
jo
mov
nop
shlb
pop
push
and
or
lahf
lock
fisttps
fiaddl
cld
pop
mov
xorl
in
movsb
aas
adc
pop
mov
call
es
adc
mov
ss
xorb
pushf
jb
loope
mov
pop
testb
cld
cmc
ljmp
pop
sub
loop
gs
cmp
addr16
inc
sub
jb
inc
repnz
stos
mov
add
js
jb
insb
sub
xor
and
pop
xor
lret
and
mov
add
imul
xchg
pop
ret
in
into
mov
rcrl
push
push
outsb
dec
icebp
lahf
cmp
cmp
push
loope
adcb
stc
jae
lods
or
fwait
push
dec
call
or
pop
mov
inc
ror
insl
sbb
lahf
movsb
iret
pusha
push
push
add
lods
imul
repz
mov
scas
es
push
jno
mov
dec
insb
bound
or
or
sbb
rcl
dec
jno
mov
or
dec
mov
adc
lds
push
or
loop
push
push
sbb
fstpl
dec
mov
dec
out
xchg
movsb
mov
mov
mov
outsl
mov
dec
out
lods
sbb
sbb
popf
addr16
aad
sub
sbb
xor
mov
inc
mov
adc
fistpl
ds
xchg
push
hlt
inc
cmpsl
mov
aam
repnz
add
shll
and
mov
xchg
xchg
test
mov
add
pop
pop
jo
les
fwait
jbe
pop
test
test
jno
out
xlat
dec
pop
sub
jno
imul
add
fisttpll
dec
jne
ret
sarb
repnz
jecxz
or
pusha
dec
incl
xchg
fcmovb
lret
jecxz
mov
stos
sbb
pusha
rorb
lods
xchg
fcomps
mov
in
jmp
jge
adc
xchg
dec
mov
shlb
insl
leave
nop
jg
adc
pushf
push
dec
jb
movl
out
xchg
int3
imul
dec
xor
sbb
xchg
or
pop
roll
pop
vmulsd
push
pusha
cltd
cld
mov
jb
cmp
push
mov
repz
les
mov
iret
dec
push
or
dec
xor
shll
jae
xchg
push
dec
popf
sbb
call
js
push
xchg
stc
push
mov
and
and
popl
sbb
pop
sahf
loop
dec
hlt
adc
insl
or
stos
repnz
xor
and
inc
push
gs
cmp
ret
das
mov
lods
int
cwtl
adc
push
js
fisttpl
cltd
cltd
xor
fs
or
adc
test
fstpt
xchg
or
ljmp
dec
fidivl
dec
cmp
mov
push
pop
add
or
imul
mov
dec
mov
push
mov
arpl
cmp
push
popf
sbb
mov
test
notl
clc
and
jb
xchg
in
xchg
fidivrl
std
sub
fildl
stos
jb
adc
ret
jno
popa
scas
rclb
outsb
test
mov
bound
stos
pop
dec
dec
push
push
into
dec
xor
push
jl
mov
fnstcw
out
mov
sbb
inc
mov
add
jl
lea
lcall
cmpsb
sti
adc
jae
xor
sbb
adc
mov
add
aas
jp
mov
mov
pusha
inc
inc
sub
cmpsl
mov
iret
push
jl
mov
call
iret
xchg
dec
dec
or
popf
arpl
daa
or
aas
fnclex
inc
and
push
loop
imul
cmpsl
mov
pushf
push
mov
lock
lock
add
leave
pop
jle,pt
cld
iret
popa
mov
mov
lock
and
mov
dec
loopne
cmpsl
mov
xor
pusha
and
mov
mov
mov
fnop
jb
movsb
lock
jno
cmp
xchg
loope
sti
jle
push
cmp
mov
adc
repnz
pop
shlb
add
js
nop
in
mov
sub
mov
scas
pop
push
outsb
adc
cmp
fsubrl
jns
or
xlat
lcall
cli
movsb
and
or
dec
sub
or
or
ljmp
into
out
sbb
mov
rcrl
lock
shll
pop
arpl
fwait
dec
roll
es
push
cmp
push
pop
imul
mov
icebp
push
scas
adc
and
jge
pop
loop
mov
arpl
das
xchg
add
inc
mov
adc
and
push
fsubs
sbb
loope
sub
or
call
sbb
outsl
rcll
cmp
movsb
or
scas
sbb
push
adc
push
fs
dec
sub
adc
sbb
outsl
and
mov
adc
loop
sub
xorb
push
fisubrl
lds
jnp
push
adc
pop
pop
outsb
pushf
pop
loope
orb
xchg
lods
fs
sbb
pop
fs
into
movsl
fldenv
and
ret
cmp
sub
xor
or
sbb
std
cmp
lods
lcall
ret
adc
mov
movsl
dec
pop
add
sbb
pop
mov
insb
shrl
jl
fidivrl
mov
iret
xchg
cltd
fiaddl
lods
das
push
stos
ljmp
or
add
ljmp
mov
outsb
lret
inc
lcall
sbb
sbb
xorl
cmp
push
addr16
ficoml
mov
mov
loopne
or
ss
into
push
mov
sbb
add
mov
lcall
nop
xor
aam
icebp
loope
or
sti
pop
loop
mov
and
movsl
pop
cmp
jns
stos
mov
jle
jo
adc
pop
insl
push
lock
push
test
pop
call
push
flds
jecxz
jmp
jo
or
cmp
cmp
sbb
dec
inc
icebp
lock
insb
jecxz
ret
mov
pushf
or
pop
or
push
cmp
push
jo
popl
jg
enter
push
sub
mov
notb
imul
pcmpeqd
xchg
push
es
loop
inc
mov
dec
xor
jecxz
outsb
pop
lcall
test
mov
sahf
push
lahf
lret
insl
shlb
sub
pop
rcll
jbe
push
jb
mov
push
clc
sbb
jns
mov
aaa
pop
adc
inc
movsl
push
mov
adc
stos
pop
mov
lods
xchg
mov
sbb
sbb
jecxz
mov
sbb
and
testb
movsb
call
pop
mov
or
xchg
dec
inc
in
xchg
cmp
jecxz
adc
frstor
adc
aad
and
and
jmp
mov
and
dec
pop
fists
test
sbb
jno
rolb
add
in
cmp
push
mov
sub
pop
mov
add
push
lock
inc
add
stos
loopne
fistl
movl
decb
dec
adc
inc
mov
sub
loope
mov
mov
pop
nop
mov
mov
jecxz
loopne
jbe
push
fimuls
insl
les
mov
sbb
outsb
adc
and
inc
fidivrs
sub
popf
cmp
lret
inc
and
lea
xchg
sbb
scas
pop
or
mov
sti
push
xor
sbb
push
les
lock
repz
mov
jbe
jns
lahf
dec
inc
xlat
xor
mov
outsl
es
jecxz
cli
jbe
jo
mov
adc
cmpsl
scas
mov
mov
xchg
lret
mov
mov
bound
dec
lock
lea
movsl
icebp
and
ficoml
and
push
fwait
jno
andps
xor
imul
jno
push
iret
pop
scas
fs
scas
mov
cmp
test
imul
out
sub
lods
nop
js
ficoml
inc
add
inc
inc
push
xchg
fwait
pop
rolb
mov
lahf
ret
int3
mov
adc
jno
lock
or
inc
ffreep
lahf
test
xchg
ja
sub
fisubrl
ror
dec
stos
dec
scas
mov
test
mov
xchg
enter
push
mov
mov
sbb
sbb
inc
adc
cs
arpl
leave
cld
pop
andb
dec
je
js
movsb
push
and
mov
mov
lods
xchg
fbld
xchg
dec
incb
xchg
jno
or
sahf
pop
into
leave
idivl
roll
pop
adc
fidivl
mov
sbb
cmp
or
incl
sub
int
clc
adc
inc
pop
adc
mov
jp
lahf
ret
add
aaa
push
insb
push
fwait
mov
test
ja
dec
mov
notl
pop
pop
push
test
xor
mov
sbb
push
and
mov
test
sub
pop
xor
xor
lods
inc
pop
enter
pusha
in
data16
sti
pop
add
loope
dec
aas
notl
negl
cli
movsl
xlat
fwait
loope
mov
xor
push
ds
inc
cmp
fistl
popa
mov
mov
adcl
xchg
cmp
push
add
mov
nop
popa
enter
pop
add
shrl
inc
push
out
xchg
inc
scas
sti
dec
xchg
lods
lahf
repz
push
lcall
insl
imul
loopne
lret
ss
repz
lret
fldl
dec
and
scas
repnz
pop
loop
addl
in
lock
in
sub
cld
pop
xchg
push
mov
bound
push
sarl
ret
xchg
pop
and
int3
sbb
cmc
sub
out
jnp
mov
lret
outsl
or
insl
les
jl
fildll
xchg
jp
out
dec
insb
push
jle
int3
daa
sub
cmp
or
dec
and
and
repz
adc
mulb
ss
and
stos
sbb
push
pop
lea
xor
or
and
stos
inc
cmp
imul
add
stc
aad
das
push
lods
adc
insl
jb
sbb
pop
call
loopne
imul
sub
inc
xor
test
stos
dec
imul
daa
notl
out
aaa
sbb
imul
xor
outsl
xchg
xchg
lock
and
out
pushf
cmp
sbb
xorl
jns
in
pop
or
lds
shl
adc
jge
inc
imul
stos
aaa
jl
out
sbb
xor
xchg
arpl
fs
sub
and
sub
mov
shrb
add
xor
fcmovbe
lods
sahf
outsb
rorl
imul
in
mov
scas
pop
jmp
pop
ja
loopne,pt
xchg
jle
xchg
sahf
enter
and
test
scas
jb
daa
bound
aam
sub
movsb
inc
outsl
mov
xchg
inc
pop
cmp
cmp
xchg
sub
movl
lock
xchg
cmpsb
mov
and
pop
int3
push
adc
icebp
mov
adc
jo
mov
outsl
and
fcmovb
sub
pusha
fucomi
imul
inc
cs
pop
in
cwtl
int
xchg
and
sub
shl
inc
cmp
aad
mov
sahf
xchg
adcl
sbb
ficoml
cli
out
mov
mov
scas
loopne
push
lods
xor
fnsave
mov
repz
dec
mov
clc
inc
inc
lea
or
cld
pop
fisttps
jecxz
push
mov
mov
adcb
jb
pusha
xchg
and
ds
add
movsl
outsb
pop
pop
mov
lods
pop
cmp
call
mov
inc
dec
fdivrs
imul
add
jnp
fnstenv
andb
pop
call
imul
das
popa
xor
mov
mov
sahf
add
cmc
aaa
mov
pop
or
sbb
adc
xor
xor
rorl
cmp
fs
sub
mov
cmp
dec
push
imul
icebp
in
int3
mov
icebp
insl
rorl
lds
xchg
rolb
sbb
fistl
push
sahf
pop
jb
mov
out
sub
xor
mov
pop
cmp
aas
cmp
cmp
sub
push
push
sbbb
xchg
data16
xchg
imul
xchg
rcrl
jo
dec
dec
pop
fisttpll
adc
mov
js
and
ret
rep
out
xlat
inc
xlat
aaa
xchg
mov
sbb
js
cmp
pop
and
mov
dec
lods
inc
push
dec
repz
jb
cmp
add
cld
popl
out
pop
rorl
fnsave
mov
lret
in
mov
fcomip
lret
and
jle
mov
or
mov
mov
jmp
pop
xchg
cmp
jg
hlt
xchg
fdiv
lock
cwtl
sbb
call
outsb
xchg
and
movsl
adc
dec
gs
pop
mov
pop
pop
lock
mov
lds
aaa
sbb
lds
push
dec
dec
dec
adc
or
leave
cmp
inc
les
cmc
cmpl
jno
ljmp
lock
addb
pop
out
push
dec
outsb
imul
jle
fiaddl
and
shl
fistps
xchg
inc
mov
push
ret
push
xor
cmp
aas
adc
adc
xor
dec
popf
jo
and
cltd
nop
outsl
dec
pop
addr16
int
addl
es
mov
xchg
lods
aam
movsb
out
or
pop
std
xchg
pop
pop
sbb
sbb
push
fnstsw
sbb
fsubl
pop
jg
gs
punpcklwd
int
enter
mov
stos
pop
ds
mov
inc
adc
cli
add
int
mov
pop
jb
pop
jno
in
jo
fsubrs
or
xor
jns
sbb
inc
insl
xchg
lock
lret
je
dec
arpl
lock
and
mov
mov
mov
mov
jno
insl
xor
mov
hlt
out
nop
jno
or
stos
movsl
ljmp
mov
outsb
ret
mov
and
push
cmc
xchg
rclb
icebp
xchg
xor
shlb
jb
lods
dec
mov
sahf
inc
push
loope
cmp
lcall
data16
icebp
fs
and
or
sub
add
sbb
xor
push
or
lods
scas
in
lret
xchg
into
mov
mov
cmpsl
adc
inc
mov
in
mov
xchg
in
scas
es
lahf
out
push
adc
jmp
lret
pushl
cli
cmc
loope
cli
fs
mov
sub
push
lock
xchg
mov
sbb
jmp
subb
or
mov
or
adcl
bound
and
ljmp
test
rorb
cld
pop
lock
pusha
loopne
lahf
mov
movsl
stos
fisttps
dec
nop
mov
lret
scas
fwait
addr16
mov
sarb
push
int3
xchg
sbb
cmpsl
pop
mov
outsl
adc
imul
sbb
imul
push
adc
insb
icebp
mov
je
jo
mov
cmp
sub
sub
xchg
enter
xchg
shr
cmp
pop
lret
loopne
push
mov
sbb
cmpsb
or
stc
mov
lahf
pop
and
and
in
jae
jp
lock
mov
cmpsb
sbb
cltd
in
orl
insl
inc
mov
inc
pop
mov
sbb
imul
scas
adc
sti
pop
rcr
jo
lret
out
insb
jle
push
or
xchg
es
add
sbb
push
and
mov
stos
jno
bound
jns
stos
jo
sbb
mov
mov
add
ret
sub
insl
out
sbb
repnz
test
popa
add
xor
fwait
lds
loope
out
cli
or
outsl
out
lahf
bound
leave
push
pop
jl
or
fcmovb
push
pop
push
fiaddl
fdivp
out
lock
lcall
es
cli
dec
dec
out
inc
xchg
jl
out
rclb
xchg
out
pop
add
pop
pusha
jp
cmp
lods
sub
leave
cmp
scas
dec
pushf
lock
imul
shrl
rcl
xchg
xor
push
adc
addr16
movsl
stos
cmp
clc
addr16
mov
subb
add
dec
fwait
xchg
inc
add
mov
imul
pop
mov
and
cli
stos
and
adc
xchg
out
shl
mov
pop
sahf
adc
scas
lods
pop
jno
mov
mov
add
imul
pop
sub
xor
test
mov
movsl
fs
ret
jecxz
lcall
sbb
lock
bound
jp
jno
push
scas
xor
sbb
fcoms
pop
or
and
lcall
xor
dec
push
push
pop
out
cmpl
es
add
enter
fwait
jb
xchg
test
cmpb
and
mov
int
jo
jne
mov
ljmp
dec
popa
imul
inc
dec
in
iret
outsb
lods
gs
pop
adc
inc
or
xchg
imul
lret
fidivl
out
out
imul
pop
outsl
popf
movsb
gs
gs
mov
arpl
sbb
lahf
or
fcomp
outsl
push
in
inc
push
pop
insl
ror
sbb
es
adc
lock
xor
mov
shrb
stos
ja
xchg
pusha
jmp
sbb
test
mov
add
dec
lods
lret
mov
fdiv
pop
fisubrl
pop
dec
fcoms
leave
dec
in
jb
nop
push
stos
mov
and
mov
cmp
loop
mov
add
cmpl
inc
ret
cmpl
test
pop
jb
imul
in
push
inc
test
iret
insb
adc
jle
pop
fisubs
pop
adc
jmp
pop
gs
aas
rorb
es
movsb
xchg
or
mov
testb
sti
mov
mov
dec
imul
test
out
lds
adc
mov
popa
ss
pop
jno
xor
dec
cmp
jge
stc
xor
outsl
sbb
rcrb
popa
sub
push
fs
subb
and
adc
mov
in
mov
cmp
push
sbb
mov
aad
bound
hlt
mov
subl
test
hlt
test
pop
gs
dec
loop
inc
pop
pop
and
push
cmpsl
shlb
jns
nop
or
adc
scas
outsb
lock
rcll
xchg
xchg
push
inc
sub
repnz
add
gs
int3
sbb
or
xor
cltd
test
xor
ljmp
lcall
pop
pop
mov
lods
in
insl
ds
repz
negl
jnp
pop
mov
jp
xlat
mov
clc
adc
lret
shlb
lea
pop
sbb
sub
divb
enter
gs
dec
lahf
mov
jo
jp
hlt
ficomps
sbb
xchg
or
sub
addr16
jg
cltd
popa
pop
mov
mov
mov
je
jo
dec
jecxz
push
and
adc
cld
mov
stos
ret
and
loope
push
mov
movsb
xchg
aam
cmp
movsb
mov
int
add
and
jae
and
movsb
test
xchg
lock
pop
jo
lods
xchg
pop
sahf
inc
dec
cmpsb
jecxz
jmp
les
out
arpl
andb
stos
sub
xor
call
inc
imul
jnp
shr
icebp
mov
pop
in
into
xor
data16
jp
cmpb
aaa
or
sub
xor
dec
add
pop
out
mov
push
xchg
rol
cmp
mov
aas
and
cmp
xchg
or
mov
inc
fidivl
jmp
xchg
in
daa
movsl
arpl
mov
sbb
dec
fwait
outsl
xor
push
mov
xchg
lods
fsubp
enter
in
xor
jmp
bound
iret
ss
inc
lock
add
and
sbb
es
imul
repz
cmp
cwtl
mov
push
jge
jb
into
fbstp
or
insl
sbb
imul
jb
adc
xchg
fwait
imul
iret
dec
stos
in
loopne
mov
add
mov
inc
mov
mov
out
jg
jnp
mov
das
and
xchg
jae
lods
stos
movsl
pushf
adc
ret
sti
scas
mov
push
sarl
lods
jg
imul
fstpt
mov
add
pcmpgtb
mov
xor
jbe
push
mov
cmp
jl
push
inc
inc
and
retw
iret
cld
sub
stos
adc
out
mov
pusha
sbb
xor
xchg
dec
lahf
push
xchg
andl
jo
fimull
add
mov
sub
cwtl
lcall
fs
dec
mov
mov
in
jmp
push
mov
lret
popa
cltd
pop
jnp
pop
add
and
insl
lret
negb
mov
add
and
mov
cmp
pop
and
sub
arpl
lods
pop
movsb
push
dec
and
inc
or
insl
pop
ja
fadds
repnz
cli
and
jg
mov
mov
and
xor
shr
loope
mov
enter
out
xlat
pushf
inc
mov
scas
dec
jmp
mov
push
flds
xchg
cs
call
call
push
imul
cwtl
imul
aas
add
push
movsb
adcl
fbstp
jo
in
add
pop
jno
stos
or
lods
outsb
int
pop
add
dec
mov
mov
dec
mov
dec
and
fucomip
dec
imul
mov
ror
adc
and
adc
ret
jns
sbb
xor
loopne
cltd
sarl
insl
popf
adc
in
shll
or
mov
push
jecxz
in
icebp
sbb
xor
inc
addr16
mov
mov
jb
mov
cmp
inc
jo
xlat
lods
scas
jb
arpl
icebp
xchg
sub
mov
sbb
sbb
outsl
mov
call
cwtl
popa
cmpsb
scas
testb
jb
mov
or
cmp
cmp
lds
add
sbb
sub
scas
push
out
push
test
mov
push
pusha
mov
jo
mov
repnz
ret
loope
in
lcall
cld
mov
add
and
data16
mov
pop
pop
out
divb
incb
mov
cmp
push
sahf
insl
shrb
movups
out
fcompl
mov
pop
popf
push
fnstcw
shl
es
aad
xor
jno
lret
in
cld
insb
fwait
sti
and
jo
aad
imul
jno
popf
js
sbb
mov
in
cmp
stos
add
lods
imul
sbb
jne
fcmovnb
mov
push
and
call
into
mov
mov
lods
xchg
fsubrl
outsb
testb
xchg
imul
dec
xor
dec
mov
mov
sub
cmpb
ret
fsts
es
sub
jl
inc
out
or
rolb
pop
repz
les
scas
jecxz
jp
scas
and
pop
dec
mov
push
lock
sbb
jnp
stos
lods
fldenv
lods
mov
addr16
shl
addr16
mov
and
sbb
lret
xor
adc
lods
cmpsb
mov
and
push
lret
cmp
sub
sbb
jae
cmpsb
sub
outsb
stos
cwtl
xchg
push
push
sub
mov
xchg
sub
sub
fidivs
sbb
jbe
xor
sub
loop
jo
mov
leave
and
mov
add
adc
pop
pusha
inc
mov
clc
lds
mov
or
or
repnz
pop
mov
inc
sub
mov
sub
cmp
jns
jo
sbb
add
sub
fs
test
movsb
and
lahf
mov
arpl
add
xchg
xor
dec
lock
nop
outsl
mov
mov
sbb
lcall
mov
orb
xchg
or
imul
out
adc
lret
mov
cmp
imul
pop
mov
movsl
jge
cmp
pop
push
or
xchg
std
lods
xor
je
fwait
mov
lret
call
xor
xchg
lahf
mov
addr16
inc
add
dec
mov
cltd
insl
inc
mov
imul
ja
mov
test
adc
sti
inc
out
fisttps
loopne
ret
inc
int
jmp
pop
shr
out
cmp
dec
clc
xor
inc
mov
sbb
das
shlb
pop
mov
xor
xchg
and
push
jecxz
sbb
lds
sub
adc
add
jmp
sbb
enter
scas
cmp
xchg
dec
loope
subb
movl
or
push
push
mov
or
aaa
movsl
lcall
xchg
shlb
fiadds
test
xor
sub
adc
addr16
mov
and
lea
pop
les
add
dec
nop
shl
addb
scas
movsl
stc
mov
icebp
imul
negl
xchg
sbb
stos
inc
outsb
test
pop
jbe
fdivl
adc
ljmp
dec
pop
mov
lds
push
mov
xchg
imul
jge
jb
or
xchg
insb
or
in
dec
fbstp
sbb
jo
cmpb
sub
cvtpi2ps
lea
xchg
pop
mov
shrb
mov
sub
movsb
lahf
popa
sub
sub
push
fs
mov
clc
mov
xor
fwait
inc
movsb
jb
pop
ja
shll
shufps
leave
xlat
or
dec
int
addr16
mov
lock
adc
xchg
outsb
or
cld
mov
int3
ror
pop
int3
dec
loop
and
daa
loop
es
inc
lock
pop
ja
insl
std
jmp
lret
outsb
daa
jae
jo
dec
decb
jns
xchg
fwait
jecxz
cltd
fwait
inc
jg
repz
mov
out
xchg
lods
push
push
lods
jecxz
and
adc
push
in
inc
xor
fdivrp
mov
mov
sbb
mov
pop
push
in
lahf
push
xor
mov
mov
mov
notb
mov
sub
dec
jge
and
fwait
movsb
push
shr
add
stos
or
jmp
mov
mov
cmc
in
inc
ja
jno
call
test
xchg
cmp
mov
or
cltd
add
bnd
dec
and
daa
jo
push
dec
inc
xor
bound
popa
push
insl
jb
scas
in
sub
mov
pop
mov
inc
xorl
pop
loope
xchg
enter
in
cmp
jo
fisttpl
outsb
and
lods
fs
sub
lock
jo
bound
dec
or
lock
mov
sub
jge
inc
mov
jne
mov
xchg
movups
or
pushf
leave
fsubrl
dec
dec
mov
push
mov
sbb
xlat
cli
mov
adc
nop
rcl
ret
push
out
cwtl
fwait
pop
imul
pop
xor
mov
out
out
push
sbb
fisubs
xor
in
gs
sbb
int
adc
stos
dec
fsubl
cmp
shlb
icebp
lods
push
mov
sbb
call
daa
fwait
add
jmp
out
adc
sub
pushf
sbb
xchg
lret
push
xchg
or
xor
cmp
sbb
shll
jae
mov
data16
bound
jb
inc
ret
lret
or
jecxz
jg
jl
push
or
movsl
sbb
jns
push
in
neg
call
mov
aaa
xor
mov
add
or
cmpsb
pop
loop
shrl
or
mov
scas
jnp
mov
pop
xchg
add
test
std
mov
fs
ja
mov
sbb
sub
and
ret
mov
mov
pop
sbb
fwait
sbb
sub
ret
pushf
lea
xchg
addr16
mov
cltd
in
push
sbb
mov
mov
cltd
mov
jge
arpl
adc
mov
inc
loop
addr16
mov
scas
out
sub
mov
cwtl
enter
jecxz
mov
sbb
add
hlt
jo
repz
subb
lea
and
loopne
es
mov
adc
or
sbb
imulb
lret
loopne
mov
fsts
shll
cmp
fiaddl
out
sbb
xchg
add
mov
loope
jno
insl
outsb
mov
mov
mov
negl
mov
stos
lods
or
xchg
test
push
jnp
fwait
mov
ljmp
xchg
add
je
test
call
xchg
jns
fidivl
ja
int3
push
adc
mov
pop
adc
cmp
loop
mov
xor
idiv
and
test
or
lcall
push
pop
ficompl
jno
jecxz
pop
fmulp
and
imul
lcall
aas
sarb
inc
mov
mov
xorl
in
fcmovnb
in
dec
mov
pusha
in
bnd
lret
icebp
outsl
adc
gs
sub
mov
mov
or
adc
ret
js
jno
test
movsb
or
sbb
es
pop
call
bound
pop
or
adc
sbb
rcr
out
das
ffree
jns
dec
add
add
pop
std
add
jae
xorl
push
in
in
call
jbe
mov
mov
mov
add
and
lcall
fs
adc
push
pop
out
or
sub
pop
mov
mov
pop
lock
into
inc
in
pop
iret
and
push
stc
lods
dec
popf
sbb
dec
xchg
pop
cs
xor
add
movsb
fs
lods
inc
arpl
decb
push
mov
ljmp
pop
push
jo
pop
xor
dec
add
inc
popf
aas
jecxz
mov
push
stos
inc
shrl
in
negl
inc
lea
into
mov
mov
dec
inc
mov
mov
pop
mov
imul
mov
xchg
test
gs
rorb
in
imul
or
stos
fistpl
sbb
inc
xlat
lahf
in
mov
adc
fmull
stos
pop
mov
mov
lock
imul
xor
orl
add
loopne
ljmp
add
cltd
sbb
push
jecxz
sbb
dec
lea
and
cmc
loop
fidivrl
ficoml
fwait
xchg
insl
cmp
pop
movsl
divb
icebp
ror
pushf
shll
dec
mov
stos
mov
sbb
push
xchg
nop
test
lcall
imul
mov
lahf
outsb
mov
pop
stos
and
pop
add
aas
lds
sub
xchg
pop
push
sub
sub
and
mov
cmpsb
outsb
xchg
das
push
movsb
xor
loopne
xchg
mov
inc
ret
and
outsb
and
ret
push
sar
popf
testl
lods
or
sbb
in
ret
and
jno
scas
mov
cmp
pushf
push
jge,pt
mov
sbb
or
std
mov
lock
dec
fldenv
sbb
cltd
arpl
dec
fs
loop
fsubrs
sahf
mov
shll
adc
outsl
mov
dec
imul
imul
idivl
lcall
es
push
in
lock
jb
jbe
push
mov
iret
cmc
xor
add
pusha
dec
mov
cmp
test
mov
mov
in
fs
outsb
pop
jns
bound
and
lea
sub
in
and
adc
push
lahf
dec
popa
jmp
lahf
jmp
dec
dec
icebp
push
nop
pop
push
adc
std
icebp
sbb
int3
mov
subb
sub
ja
and
jae
jns
rolb
outsb
or
data16
popf
mov
push
pop
pop
and
ficompl
addr16
dec
popa
fimuls
lock
pop
inc
shr
mov
push
sub
jb
scas
push
pop
jecxz
lcall
mov
movsb
gs
sbb
cs
loope
mov
xor
add
leave
and
jo
mov
aaa
sbb
mov
mov
mov
or
add
or
pop
add
stos
dec
sbb
pop
dec
pop
ljmp
shrb
mov
cmp
pusha
icebp
mov
jge
mov
sbb
or
ret
cmc
mov
push
hlt
cltd
jecxz
je
inc
mov
inc
dec
cmp
jb
in
push
lods
outsb
pop
mov
into
imul
xor
in
pop
mov
adc
fs
mov
mov
lock
jge
sub
pop
mov
mov
movntq
loop
mov
push
loope
inc
inc
cltd
or
add
push
dec
cmp
push
lods
or
adc
mov
andb
loopne
ljmp
ljmp
push
jno
sub
adc
aas
std
cwtl
mov
xchg
test
xchg
mov
dec
jae
or
pop
sti
lret
fwait
ret
jbe
dec
popf
inc
push
lds
and
and
in
pop
mov
test
out
jo
mov
pop
xor
push
pop
cmpsb
inc
xchg
popa
or
xor
inc
adcb
data16
mov
call
add
in
in
adc
sub
or
pusha
ljmp
mov
rcll
mov
adc
lods
cmp
jg
inc
mov
in
fwait
insl
orb
fistl
sti
xor
lret
scas
pop
clc
sar
xlat
js
loop
mov
lea
or
push
outsl
arpl
fnsave
scas
ret
insl
xor
xor
mov
add
dec
aaa
adc
jp
ret
scas
push
mov
mov
rcl
mov
popa
cmc
mov
fwait
rcll
mov
es
xchg
les
outsb
xorb
imul
dec
lds
int
xchg
inc
xor
push
jbe
movsl
mov
pop
divb
jne
dec
arpl
insl
addr16
loop
xor
pusha
cmp
das
fistpl
stos
lret
cmp
fnsave
sti
and
add
into
cmp
je
icebp
cmpsb
mov
jne
and
ja
sbb
std
xor
sub
mov
negl
test
or
es
mov
aas
push
fs
sub
js
xchg
cld
in
or
xor
sbb
xchg
jp
in
inc
dec
inc
ss
or
cmp
mov
lcall
adc
fwait
xchg
dec
stos
adc
int
jbe
mov
movsl
mov
cltd
and
jo
jno
xchg
mov
fsts
sbb
mov
lock
mov
push
out
int
ret
mov
mov
lds
dec
sub
fs
or
stc
int3
mov
outsl
push
shlb
ret
inc
in
lret
dec
cmovbe
jmp
mov
inc
aas
or
out
pop
test
sub
cmp
rcpps
sbb
xchg
sbb
xorb
jg
and
rolb
dec
xchg
and
sbb
movsl
stos
mov
pop
lds
pop
xchg
fidivl
or
pop
jb
outsb
mov
mov
pop
addb
jb
iret
cmp
test
adc
pushf
sbb
shll
sub
pushf
mov
cmc
cmp
sbb
cmp
test
in
cmp
in
and
pop
pusha
movsl
or
lret
mov
loope
sbb
mov
sahf
jl
sub
fiaddl
jo
or
jmp
xor
mov
mov
adc
adc
scas
stos
fwait
inc
movsl
push
das
cmc
or
sarb
xchg
mov
jo
push
sbb
pop
not
sbb
xor
jbe
ja
fidivrl
testb
mov
movsl
add
leave
mov
mull
rorl
mov
mov
jns
mov
inc
imul
xlat
mov
push
or
mov
cmp
sub
mov
and
fidivrl
sbb
icebp
jge
insb
and
jo
mov
inc
lret
das
nop
and
pop
mov
mov
pop
and
lcall
mov
adc
add
imul
aaa
xchg
fisubs
xorb
aaa
pop
cli
xlat
out
enter
jg
pop
and
jp
push
push
mov
push
inc
sbb
push
fcompl
js
shrb
xchg
jle
pop
or
adc
int
or
call
jecxz
mov
cmp
out
nop
inc
dec
mov
sbb
mov
not
sbb
or
sbb
and
lods
sub
sub
sarb
pusha
or
jb
mov
dec
push
les
ja
shll
test
pop
lcall
inc
or
cli
xchg
out
and
lods
or
leave
dec
or
fbstp
fisubl
mov
xchg
or
lods
xchg
inc
clc
or
movsl
mov
fucomi
or
add
mov
xlat
xchg
xchg
sti
inc
pop
stos
bound
add
iret
and
mov
xor
sahf
jno
rclb
out
or
push
std
icebp
jnp
mov
push
mov
fwait
lcall
pop
sbb
test
imul
mov
inc
adc
icebp
jb
cmp
push
loope
pusha
addr16
nop
or
mov
cmp
andl
pop
cmpsb
push
mov
inc
hlt
jo
stos
add
xchg
cmpb
adc
sbb
cmpsb
das
mov
pop
pop
jmp
lret
add
jno
dec
scas
decl
int
gs
ja
mov
push
aam
out
pop
dec
and
cmp
jo
fstpl
scas
mov
mov
sbb
je
cmpsb
push
in
or
mov
dec
xchg
jno
aas
add
iret
mov
idivl
jo
and
add
jb
jb
pop
stos
mov
movsl
pop
cli
mov
xchg
in
inc
sbb
sbb
iret
lds
mov
pop
mov
and
inc
arpl
cmpsl
sbbb
and
into
leave
cs
and
jno
or
cmpsb
stos
push
pop
xor
xor
and
insb
xchg
xchg
fimuls
fbld
mov
int
add
xor
cltd
cltd
sahf
push
dec
pop
loope
xchg
fs
inc
xchg
push
push
outsb
adc
sub
aam
fwait
inc
dec
cmp
iret
inc
fcompl
bnd
out
push
push
dec
xchg
push
jo
ficomps
das
stos
pop
mov
push
pop
icebp
xchg
mov
pop
fs
pop
dec
shlb
adc
lock
insb
mov
in
leave
adc
push
ds
cmpsb
repnz
jae
ficomps
rclb
sbb
sarl
call
inc
adc
sbb
mov
push
add
pop
ror
mov
imul
js
ret
mov
lret
mov
lea
push
pop
std
mov
sub
popf
test
push
lods
pop
sahf
jno
fldt
daa
xchg
dec
mov
sbb
pop
lea
rcrb
sub
gs
adc
pop
and
out
jo
rcr
dec
pop
inc
inc
sbb
mov
cmp
and
xor
adc
cli
divl
lcall
jo
sbb
inc
test
fs
in
jmp
jno
and
jecxz
cmc
add
mul
and
ss
jp
lock
in
mov
pop
cmpsb
fsubrl
outsl
repnz
pop
mov
add
adcl
int
int3
pop
pop
lahf
je
adc
mov
fs
sbb
mov
test
mov
pop
in
scas
push
xchg
and
push
or
xor
add
xchg
fisttpll
mov
fimull
sbb
iret
mov
or
cwtl
pop
add
pop
push
sahf
dec
xlat
stos
shlb
or
jg
test
fwait
sbb
adc
push
nop
jp
push
adc
mov
jno
js
mov
outsb
pop
push
adc
shl
popa
or
stos
sbb
xchg
je
lcall
lcall
outsl
in
gs
lret
nop
mov
adc
inc
and
cmpsb
stos
mov
and
sub
mov
sub
jge
jno
fchs
shrl
xchg
out
inc
xor
fs
xchg
outsb
and
jle
loopne
or
pusha
mov
loop
or
mov
adc
imul
xchg
inc
sub
jno
adc
aam
mov
and
jbe
outsb
xlat
push
gs
mov
pop
mov
aas
pop
adc
adc
out
adc
cmp
sub
lcall
por
jge
xchg
xchg
je
arpl
lods
rcrl
mov
fs
pusha
jp
mov
pop
mov
push
xchg
mov
fadd
aaa
push
addr16
adc
push
fs
sbb
shr
aam
pop
push
rcll
pop
stos
es
fidivl
scas
lret
fs
lahf
in
int3
or
flds
outsb
mov
repnz
lea
rcll
or
or
mov
pop
mov
or
mov
bound
inc
lds
movsb
mov
cmpsb
scas
mov
dec
push
sahf
fildll
and
scas
mov
dec
pop
sahf
pop
divl
shlb
inc
pop
lahf
mov
cmpsb
jle
push
and
mov
imul
lret
stos
mov
hlt
mov
ret
push
fsubl
or
mov
mov
lock
xchg
and
push
hlt
pop
loop
cli
cmp
call
pop
and
mov
xchg
leave
in
out
jge
push
sub
shll
int
adc
mov
bound
jne
daa
divl
jae
pop
dec
loop
lds
xlat
sub
inc
stos
xchg
push
mov
add
mov
lods
and
dec
adcl
lods
or
in
fldl
and
xor
or
sbb
pushf
pop
out
push
jns
mov
xchg
xchg
or
mov
cli
dec
jnp
sahf
pop
pusha
mov
mov
enter
mov
mov
mov
mov
or
lahf
ljmp
jo
jmp
mov
jle,pn
test
jb
shrl
bnd
xchg
cmp
fcmovnb
ffreep
icebp
insl
sub
dec
lahf
addb
inc
insb
xchg
jo
hlt
pop
daa
adc
xor
movl
ss
mov
inc
cmp
or
push
movsb
adc
push
jl
call
push
test
push
lcall
loopne
orl
fistps
shlw
mov
sub
outsb
sbb
adc
shl
nop
outsl
pop
push
cmp
lahf
and
call
sahf
mov
sbb
lret
push
cmpsb
inc
stos
sti
push
pop
adc
mov
mov
push
adc
stc
lcall
jo
cmc
popf
jno
fnsave
cli
mov
jg
scas
push
push
je
scas
mov
mov
mov
pop
stos
cmp
fisubrl
xchg
sbb
popa
das
mov
xchg
outsl
aam
pusha
rcrw
sbb
adc
mov
or
stos
mov
pusha
xchg
fs
insl
sbb
arpl
adc
adc
push
std
mov
dec
cmc
sarb
dec
push
push
xchg
mov
and
jns
or
popa
pushf
rcl
mov
stos
sbb
mov
xchg
xchg
data16
adc
bound
dec
popf
mov
push
push
inc
mov
stos
sbb
xor
xchg
gs
inc
stos
imulb
sbb
inc
inc
ds
pop
test
repnz
mov
fldcw
pop
stos
cmp
jo
hlt
daa
shrl
pop
push
dec
movsl
stos
sbb
movsb
fwait
mov
xlat
inc
or
stos
shl
dec
rcll
xor
sbb
popf
sahf
mov
sub
out
aas
push
cmp
inc
test
dec
inc
outsb
stos
test
popf
mov
xchg
in
sub
dec
mov
pop
std
loopne
aaa
sub
stos
loopne
jb
fidivs
lss
pop
aas
jl
test
in
push
shrb
lahf
test
cmpsl
add
xchg
pop
jns
push
cli
inc
add
insl
push
and
jo
mov
adc
ror
sbb
pop
cmp
stos
mov
insl
in
adc
jp
fsubrs
add
stos
sbb
gs
sub
push
test
insl
mov
pop
dec
imul
sbb
shrb
movsb
xor
push
testl
in
outsb
cmp
sbb
mov
xchg
fs
pop
popa
add
adc
arpl
mov
jl
in
scas
push
je
push
or
lahf
pusha
jo
dec
push
scas
imul
out
out
sub
test
mov
jmp
xchg
inc
ds
sbb
sub
or
xchg
push
sbb
mov
mov
push
sub
xor
push
call
in
inc
dec
fists
xchg
mov
loope
out
arpl
xor
or
push
fsub
cmp
lock
push
add
leave
mov
mov
cli
mov
fstpt
cs
icebp
mov
in
lds
pop
dec
mov
mov
sbb
adcl
cmp
inc
cld
xor
aaa
insb
das
pop
rorl
insl
popa
dec
xor
lock
sbb
ficoms
hlt
mov
cld
push
lret
push
cmp
pop
jg
cli
jg
lahf
xchg
lods
stos
mov
inc
imul
cmp
mov
adc
or
add
pop
scas
add
adc
jbe
into
jb
and
mov
lcall
pop
daa
xchg
add
clc
cld
aad
fwait
xor
out
pop
add
jg
jge
sub
adc
mov
mov
rcrw
repnz
sarl
sti
push
pop
nop
imul
das
jg
mov
sar
dec
mov
sbb
mov
mov
xor
jo
pop
dec
rorb
mov
std
sbb
lods
pop
ss
int3
lret
jp
leave
add
stos
dec
lret
and
fimuls
mov
mov
add
outsb
mov
mov
lcall
jg
ljmp
jmp
xor
push
out
je
mov
mov
pop
rcrl
mov
xchg
insl
pushf
add
fprem1
sub
jg
dec
mov
or
es
mov
in
jmp
out
aaa
test
movsb
inc
inc
ret
mov
sbb
lahf
dec
pop
loope
fs
mov
cmc
dec
mov
in
int
faddl
sub
and
xor
push
mov
in
in
jb
sbb
test
mov
test
es
pop
and
enter
mov
in
movsl
imul
fwait
or
pop
add
jne
in
xchg
insl
push
jb
push
minps
pop
fidivrs
repnz
pop
pop
imul
stos
cmp
inc
mov
test
into
imulb
test
cmp
out
rcrl
sbb
xlat
jb
mov
lcall
gs
leave
fsubs
dec
outsl
jae
iret
push
or
test
je
lds
mov
mov
xchg
xchg
aam
scas
ficompl
mov
and
fiadds
inc
cmp
out
xchg
fwait
repz
sbb
fistl
jns
lret
cmp
fistps
jl
xchg
sar
scas
das
insl
push
aaa
iret
mov
sbb
mov
dec
xchg
and
mov
jp
cs
jne
repnz
loope
mov
cli
mov
test
cmpsl
sbb
ja
push
aaa
dec
repz
popa
andb
fnstenv
sbb
push
fwait
jbe
mov
push
int
pop
inc
loope
jbe
js
mov
lds
lds
mov
in
and
or
das
es
idivb
sti
mov
pop
out
leave
ret
lods
sbb
mov
rcrb
stos
dec
js
rclb
xlat
out
je
mov
iret
adc
mov
push
nop
nop
lahf
sbb
add
mov
stos
pop
pop
lock
cmp
pop
jno
sbb
in
xchg
fwait
sbb
pop
mov
sbb
cld
mov
fdivrl
loope
add
stos
adc
sub
sahf
add
inc
ret
or
dec
mov
mov
jb
lret
es
pop
inc
pop
ljmp
cmp
pop
push
sbb
mov
mov
insl
jge
or
pusha
test
or
jle
pushf
dec
orb
adc
mov
xchg
addr16
in
push
sub
mov
imul
and
test
in
mov
fidivl
test
addr16
dec
lahf
gs
scas
add
imul
mov
mov
push
bound
sub
loopne
test
cmpsb
cld
lods
loop
je
loope
push
mov
push
enter
pop
mov
movsb
xor
jb
negb
cmp
fadd
stos
mov
xchg
inc
adc
ret
rorb
xor
ficompl
and
lds
aad
outsl
xchg
fldln2
pop
andb
movsb
xorl
or
shlb
mov
mov
lahf
in
jns
icebp
mov
dec
jge
or
and
in
mov
and
fstps
hlt
mov
dec
and
call
js
lcall
mov
mov
or
mov
mov
mov
insl
insl
pop
loope
test
add
lock
or
jo
adcb
xor
in
or
lock
xor
stos
adc
scas
popf
nop
xor
sbb
or
pop
push
or
mov
or
hlt
xor
imul
dec
xor
sbb
cmp
mov
jb
mov
fucomi
shlb
idivb
dec
push
and
lret
int3
loop
inc
sub
mov
cld
stos
sbb
iret
push
icebp
xor
lods
sahf
mov
sbb
daa
addr16
nop
loope
or
pop
fldl
movsl
int
dec
cwtl
push
inc
jno
sub
addr16
dec
das
scas
inc
xsaveopt
cltd
and
cltd
jmp
jl
cltd
push
dec
out
mov
push
lods
mov
cmp
cmc
lret
fldcw
pop
dec
shrb
sbb
jno
inc
mov
cld
adc
add
clc
loope
pushf
mov
or
or
in
jae
adc
add
lret
das
dec
or
and
adc
stos
loope
cs
jp
push
fwait
movsb
gs
cmpsl
xchg
inc
into
push
jno
sbbl
mov
scas
mov
pushf
mov
test
shrb
add
rclb
push
inc
adc
sbb
aam
pop
or
arpl
inc
pop
nop
ret
cmp
shrl
fisubl
dec
mov
lcall
out
inc
cmpsl
dec
es
mov
fnsave
sub
inc
pop
xchg
popa
cmpsl
ljmp
dec
jb
out
icebp
popf
dec
lahf
or
mov
mov
jb
xchg
mov
repnz
jno
add
or
movsl
add
fsts
in
fists
cmp
fs
out
xchg
mov
jecxz
movsb
and
push
mov
xchg
lods
cld
mov
mov
hlt
idivl
pop
mov
xor
push
or
mov
test
cmp
xchg
jo
shlb
lods
xor
pop
outsb
lods
dec
mov
sbb
pop
dec
outsl
adc
fildll
push
push
outsb
js
mov
xchg
test
pop
lret
mov
fwait
mov
aaa
icebp
pop
mov
lods
mov
fildl
out
test
sub
push
dec
dec
dec
call
push
out
ret
int3
lcall
xchg
inc
sbb
dec
imul
clc
or
addr16
andb
scas
test
add
fisubrs
push
leave
out
cmpsl
or
sbb
int3
aaa
negl
int
in
iret
aas
pop
dec
test
jg
mov
mov
andb
pop
mov
lods
or
mov
mov
pop
scas
mov
or
add
ret
imul
mov
lds
add
popf
mov
or
inc
popf
divl
pop
cltd
mov
push
test
imul
xchg
daa
cmp
roll
cli
imul
loope,pn
cmp
mov
ljmp
jb
add
mov
loope
aas
mov
xchg
bndstx
dec
adc
aad
fistps
sub
imul
mov
fsubs
cmp
push
xor
insl
push
lock
call
push
leave
shll
ljmp
adc
lock
adc
xlat
inc
and
push
cmp
pop
mov
loope
jecxz
sub
roll
sub
mov
movsb
push
mov
mov
jl
jecxz
pop
and
and
imull
lret
je
pop
mov
sub
jno
movsb
dec
lcall
or
push
mov
jns
pop
mov
loopne
adc
loopne
add
pusha
cmp
lods
insl
mov
pop
jle
inc
inc
mov
or
rcrb
call
mov
in
inc
dec
add
jo
jns
jp
sub
imul
mov
or
inc
sub
mov
mov
push
mov
leave
adc
sub
cmp
pop
jnp
xor
js
loope
iret
out
mov
clc
lea
repz
test
int
xchg
and
dec
das
or
jae
dec
mov
cmpb
mov
gs
movups
das
pushf
pop
fimuls
fstps
sub
pop
dec
and
mov
adc
xchg
gs
loopne
je
jo
and
mov
sbb
or
prefetch
je
addl
decb
adc
push
int
dec
fs
leave
popf
jnp
dec
dec
or
ret
aad
test
fsubs
inc
and
adc
imul
gs
ficompl
mov
mov
fbstp
imul
pop
out
xchg
pop
or
dec
arpl
and
out
int
mov
adc
stos
push
adc
lret
jo
dec
idiv
sub
int
add
pop
push
lods
mov
jns
fstps
stos
pushf
jge
or
cmp
cli
addl
jg
pop
xor
xor
dec
pop
mov
mov
adc
ror
cmp
jmp
cmpsb
pop
add
and
out
imul
pop
lret
xor
push
test
mov
add
stos
inc
ljmp
sbb
loopne
mov
or
scas
in
dec
pop
outsb
mov
mov
pop
jns
and
adc
orl
in
xchg
shll
cmpsb
aaa
fisubl
mov
ds
out
push
mov
nop
lock
ret
lock
arpl
aaa
cmp
lahf
or
and
dec
xor
ss
insl
add
jae
in
sbb
xor
movsb
xlat
cwtl
sub
push
cmp
loope
lds
dec
xor
loopne
and
xchg
lahf
lahf
adc
mov
sbb
push
or
jno
lds
jbe
data16
jo
add
cld
mov
sbb
lods
aaa
pop
mov
int3
push
xlat
pop
add
lahf
sbb
fidivrl
imul
stos
mov
sbb
in
or
inc
xor
jmp
aaa
xchg
mov
mov
dec
mov
mov
out
mov
xor
stos
sbb
cmp
sbb
sub
or
sub
jnp
mov
shll
pop
mov
mov
fcmove
sub
inc
fbld
xchg
fnstenv
or
in
scas
jg
cmp
add
int
jo
sub
movsl
inc
popa
pop
repnz
movsb
xor
in
pop
add
inc
mov
outsb
mov
pop
pop
mov
lock
pop
fs
adc
adc
inc
mov
cld
lea
bound
dec
pop
cwtl
inc
fsts
push
mov
push
jns
and
out
loopne
rcr
ret
pop
loopew
sbb
lods
bound
sbb
outsl
jb
pop
jb
nop
ret
je
push
ss
popf
sahf
lock
arpl
fisttpl
lret
xchg
orb
mov
loopne
lods
mov
mov
aas
cltd
jo
pop
js
cmp
iret
imul
nop
sub
aas
loope
pop
cmp
aam
cmc
fwait
push
jb
xor
lahf
pop
cmc
dec
pop
jb
and
jne
fidivl
and
leave
cmpsl
test
xchg
pop
mov
inc
xor
shlb
pop
push
mov
scas
mov
sub
lds
imul
jle
lahf
xor
repnz
cmc
push
mov
dec
or
sbb
in
sub
dec
nop
mov
jge
std
inc
dec
lea
fldl
in
mov
fwait
imul
dec
and
inc
inc
ret
mov
mov
cmpsl
xchg
cmp
dec
mov
mov
pusha
lret
xchg
push
push
mov
sub
ljmp
dec
and
jp
mov
loop
mov
cmp
cmp
jnp
mov
mov
sbb
jb
loope
jns
pop
loopne
stos
pop
mov
dec
pop
test
fldenv
jge
mov
out
out
mov
flds
out
adc
mov
or
xchg
cmpsb
in
xchg
js
mov
pop
in
and
mov
pusha
jle
xor
push
cmpsl
mov
xor
mov
push
mov
xchg
cmpsl
or
pushf
pop
adc
jl
cltd
clc
sbb
out
fcomp
in
stos
addr16
and
dec
rcl
divb
sbb
fimull
xor
loopne
das
loopne
sahf
lahf
jo
aas
icebp
xchg
out
or
outsb
pop
mov
jp
dec
adc
mov
mov
in
fisubs
mov
cmpsl
mov
loopne
mov
outsb
aaa
cmp
bound
jl
data16
ficoms
push
xor
and
xchg
add
and
sbb
adc
pushf
inc
inc
imul
dec
cmp
clc
jb
loope
loope
aaa
push
scas
dec
mov
and
dec
mov
fucomp
movsl
jns
xchg
jno
sbb
push
sarb
gs
mov
add
dec
mov
loopne
jno
push
loop
xchg
dec
xor
outsb
out
xchg
mov
sub
test
jmp
jmp
popf
cltd
in
hlt
int3
xchg
and
fbstp
xor
in
pop
cmp
sbb
mov
or
lods
and
xor
add
pop
frstor
xchg
sar
xchg
cmpsb
lret
mov
pop
pop
sbb
push
cmpsl
inc
pop
aaa
add
and
adc
je
in
add
mov
test
sub
fwait
mov
jnp
pop
sub
jecxz
or
dec
mov
push
loope
sahf
inc
add
in
xchg
iret
adc
mov
stos
push
in
in
aas
pop
int3
or
es
mov
jle
jb
ret
cmp
ja
in
sbb
add
adc
out
fcomip
mov
cmp
and
fwait
dec
or
pusha
in
loop
mov
cmpsb
int3
or
lods
pop
movsl
fisttpll
xor
shlb
std
movl
test
in
ja
ret
dec
je
daa
ror
xor
mov
stos
loope
movsb
mov
ret
xchg
mov
popf
xchg
fnstsw
cmpsl
mov
inc
clc
mov
les
mov
adc
sub
sahf
cmp
fbstp
mov
push
mov
xchg
fnsave
adc
shlb
mov
outsb
or
mov
sub
inc
pop
xchg
ret
fbstp
movsl
mov
jmp
mov
nop
xorb
sub
addb
xor
mov
in
mov
test
loop
push
mov
shll
inc
stos
fs
in
jo
dec
loopne
inc
or
ja
insb
rcrl
dec
fwait
push
push
jns
arpl
fistl
mov
cmp
dec
cmp
leave
cltd
sbbb
sbb
out
lods
jno
cmp
data16
inc
lahf
pop
outsb
sbb
repz
lods
test
jecxz
pop
fs
aas
pop
jecxz
push
movsb
insl
xchg
ss
out
push
ds
jb
icebp
fwait
movsb
icebp
fldcw
dec
les
sub
insb
pushf
push
push
mov
movsl
fdivl
mov
ret
loop
sub
add
filds
lcall
pushf
cmp
ret
mov
xchg
sbb
xor
in
fists
inc
pop
lods
xchg
mov
push
dec
sub
addb
xchg
or
mov
arpl
jl
jo,pt
sbb
push
pop
fucomp
ret
or
push
loope
div
loopne
scas
adc
push
jecxz
int
mov
or
push
adc
lock
mov
into
pop
sbb
mov
push
std
mov
scas
testl
pop
popa
pusha
aas
xor
cmp
push
stos
jb
outsl
mov
rolb
in
pop
cld
fwait
and
jmp
call
mov
mov
sbb
arpl
or
ret
jge
das
rol
leave
xchg
mov
pop
or
call
push
test
adc
sbb
sub
push
daa
lret
add
mov
movsb
mov
jmp
jp
lcall
or
ficompl
enter
js
mov
test
sbb
inc
mov
gs
cmp
pop
xchg
pushf
or
popa
stos
or
xor
loop
std
dec
pop
scas
jmp
jo
cmp
nop
pushf
sub
int3
mov
in
sub
es
jb
shll
jl
dec
mov
and
xor
mov
movsl
pusha
mov
and
fimull
out
test
stos
es
aam
and
lods
cmp
and
lret
mov
fisubrl
push
notl
and
sub
add
adc
push
mov
jl
dec
or
and
mov
lock
jb
subb
inc
popf
jno
pusha
fiaddl
or
ja
push
popa
pop
add
loopne
pop
xlat
mov
sbb
iret
xchg
bswap
movsb
iret
pop
sbb
sub
add
orb
xchg
out
mov
ret
loop
out
lods
push
test
push
mov
imul
and
or
pop
xor
mov
aad
xchg
adc
in
adc
xchg
out
out
pusha
aad
jns
in
mov
jo
insl
xor
xor
mov
jo
outsb
jb
ds
rorl
mov
mov
push
fwait
jge
cmpsb
add
inc
dec
mov
adc
mov
dec
mov
lcall
sbb
lret
lahf
call
mov
ret
push
inc
push
or
pop
ret
mov
cmpb
mov
and
mov
lods
adc
int3
inc
into
pushf
dec
xlat
cmp
mov
enter
movsb
in
rcl
jno
push
cltd
jmp
xor
fidivl
push
pop
ja
insl
sbbl
and
je
push
dec
xorl
sub
or
mov
or
mov
aad
jns
mov
dec
mov
sbb
xchg
sbb
pushf
and
pusha
mov
cmp
aaa
call
mov
sbb
adc
push
leave
xor
mov
stos
jae
adcl
mov
jnp
sbb
sbb
push
shl
push
sub
je
bound
push
cmc
fiaddl
jno
mov
or
and
sbb
lcall
iret
mov
and
sub
cmpl
clc
fs
clc
add
mov
lods
aam
pop
sbb
cs
mov
add
push
push
mov
scas
lock
mov
jno
and
mov
test
lcall
and
cltd
data16
xor
mov
fdivl
movsl
js
rcll
outsb
lahf
xor
ja
sbb
inc
pop
jb
jo
loope
clc
lahf
mov
push
nop
imull
pop
mov
movl
and
loopne
lret
ds
adc
mov
cld
andb
rcr
dec
mov
xchg
and
jmp
push
or
mov
inc
sub
pop
jns
repz
jnp
adc
sbb
xchg
lcall
mov
inc
push
roll
pop
mul
ret
xchg
out
leave
mov
mov
lds
es
lods
adc
hlt
jb
pusha
fisttps
and
dec
mov
jns
nop
daa
add
xsaves
mov
mov
popa
push
cwtl
lahf
push
int
ret
and
xchg
mov
pop
in
stos
pop
mov
pusha
lret
sub
notb
movsl
aaa
dec
dec
cs
and
jle
stos
lahf
in
pop
movsb
mov
pop
inc
repnz
pusha
imul
lahf
cmp
call
or
mov
mov
lret
jo
pop
jns
fistpll
out
lahf
cmp
arpl
fmuls
dec
loope
aaa
cmp
mov
push
pop
adc
imul
push
enter
int3
loope
stos
pusha
pop
inc
jmp
icebp
jns
mov
icebp
xchg
add
mov
jmp
js
push
fstpl
pop
leave
jno
mov
repz
aaa
sub
cmp
add
imul
arpl
push
lock
sbb
cmpsl
dec
lcall
arpl
cmc
iret
push
aad
jne
mov
add
test
pop
outsb
mov
fldl
pushf
lods
fldenv
jnp
ffreep
stc
inc
clc
xlat
mul
dec
jno
mov
pushf
add
mov
dec
jb
stc
aad
movsl
flds
mov
out
push
leave
xorb
sahf
or
lahf
aam
adc
mov
and
mov
jne
mov
xor
sbb
aam
adc
cwtl
jg
lods
ja
fs
mov
pusha
lea
repz
fisttps
outsl
xchg
aam
and
js
fs
test
push
icebp
cli
pop
pop
stos
push
mov
mov
icebp
imul
ret
lods
push
mov
jb
insl
mov
and
shr
jo
fdivl
push
popa
adc
in
jno
mov
cmp
pop
fcoms
jnp
pop
int
jle
andb
popa
mov
addr16
out
mov
adc
jbe
push
jbe
ret
xchg
mov
pop
js
adc
add
mov
scas
pop
or
movzwl
outsl
dec
add
lret
adc
in
data16
dec
popa
add
in
imul
scas
and
xor
dec
pop
or
push
popa
sbb
sub
cmp
mov
sub
jo
shll
jno
and
pop
inc
ljmp
mov
jns
icebp
push
inc
lock
shr
jo
push
mov
fdivl
fcmove
mov
faddp
or
push
xchg
ret
jg
repnz
cmc
shrl
mov
xchg
pop
lods
pop
or
jmp
xchg
xor
call
jo
xchg
stos
out
dec
filds
mov
push
scas
stc
pop
daa
enter
stc
add
xchg
movsl
loope
pextrw
inc
adc
pop
stc
out
sub
xlat
mov
dec
repnz
push
pop
pop
xor
leave
stos
push
xchg
cli
sahf
jl
mov
lcall
in
sub
ret
mov
ljmp
xor
fisttps
sbb
jge
pop
in
mov
mov
xor
lea
mov
mov
sbb
outsl
emms
mov
and
hlt
cmpsb
xchg
jecxz
pop
sub
pop
inc
inc
sbb
mov
xchg
popa
pop
subb
adc
repnz
lret
rorl
lret
loopne
xchg
lret
daa
xor
lock
dec
sub
xchg
push
inc
inc
test
fwait
sbb
mov
jo
pop
xchg
es
push
cltd
lret
cmp
popl
add
cmpsb
adc
dec
jo
mov
and
add
push
pusha
or
cmpl
mov
jg
iret
lods
nop
ret
mov
arpl
fisubs
stc
jo
push
ds
mov
jl
cwtl
pop
movsb
dec
push
ljmp
sbb
inc
add
scas
pop
loopne
int
sub
inc
push
iret
sbb
cmp
pushf
add
in
xchg
inc
adc
fidivs
in
xor
sbb
iret
pop
pusha
add
and
repz
rcll
aaa
dec
enter
mov
cmp
ret
rcll
push
jg
xchg
cmp
inc
into
xchg
mov
add
call
and
add
inc
dec
mov
mov
cmp
out
push
and
das
sub
adcb
shlb
dec
jo
outsl
xchg
in
cmp
mov
add
leave
ljmp
cmp
fwait
jno
sar
les
lcall
push
jo
add
sub
xchg
lock
adc
ss
popa
or
lcall
xchg
jb
jo
scas
push
mov
mov
mov
pop
and
sub
xlat
cmp
imulb
add
fucomi
cmp
lea
mov
out
decl
mov
ss
pop
add
pop
cmp
mov
sti
in
sbb
mov
xor
push
test
jnp
fnstenv
mov
gs
test
loop
jge
xor
cmp
jbe
push
in
mov
sbb
xor
push
push
and
bound
shrb
stos
imul
fwait
ljmp
dec
stos
jne
xor
mov
lea
mov
test
addr16
push
add
push
mov
and
ljmp
and
sahf
cmp
aam
lahf
les
push
push
cmp
clc
in
outsl
cmp
repnz
cmp
jp
pop
sbb
test
in
scas
shl
mov
mov
aad
dec
rcl
cmp
stc
xchg
adc
mov
inc
cmpsl
xor
popa
sbb
loope
xchg
xor
sti
repnz
icebp
test
push
test
out
inc
mov
dec
outsl
pop
loop
out
es
xor
mov
movsl
adc
ret
dec
cmp
jae
cmp
ficoml
movsl
adc
mov
jg
and
cmp
mov
pusha
mov
ror
mov
xor
mov
dec
pop
ror
and
popa
add
ds
mov
push
xchg
mov
push
in
sbb
jg
notl
lock
pop
jmp
leave
movsl
pop
icebp
pop
enter
sbb
cmpsl
cmp
icebp
lcall
push
lods
repnz
pop
enter
push
pop
and
enter
add
mov
data16
push
clc
mov
xchg
leave
negb
pop
mov
aam
loopne
push
push
mov
negl
jb
push
pusha
hlt
sbb
cmp
sti
sar
adc
xchg
lahf
rcrb
jge
pop
mov
jno
adc
mov
insl
fildl
mov
mov
popa
mov
inc
addr16
inc
jg
stc
or
add
cmc
ret
fists
jb
shl
jnp
mov
jbe
mov
add
adc
ljmp
dec
cmpsb
arpl
mov
imulb
fld
movswl
decl
loopne
jle
mov
imulb
in
push
and
mov
xor
push
test
cmp
arpl
lret
sbbb
icebp
fcomi
adc
mov
popa
add
inc
jmp
mov
rcr
jmp
cmp
pop
sbb
sbb
imul
lahf
cmp
xlat
pop
push
inc
pop
push
shrb
cmp
fnstcw
pop
sbb
lods
mov
lcall
orl
and
push
adc
jge
cmpsl
pop
xchg
lock
mov
in
dec
sbb
jns
adc
leave
int
loope
das
jno
sub
push
pop
lret
shll
insl
mov
fildl
pop
mov
and
sbb
dec
mov
jecxz
adc
loop
and
negl
pusha
out
in
lret
lret
stc
and
pop
and
or
mov
fdivr
out
mov
push
aaa
dec
add
inc
imul
and
loopne
pop
sbb
jl
sbb
xchg
jmp
dec
fidivl
xchg
cmp
movsl
aas
jb
mov
jge
adc
mov
xor
cmp
sub
add
repnz
push
or
mov
in
mov
or
pop
mov
pop
xchg
enter
out
out
lret
cs
dec
adc
rolb
mov
push
pop
push
dec
sbbb
push
aaa
pushf
lock
ja
jbe
xor
icebp
rorl
pop
es
sbb
sbb
or
mov
leave
mov
mov
shrl
inc
test
pop
inc
cmp
cmp
sbb
repnz
int3
pop
jecxz
or
cs
iret
and
test
jno
sub
xchg
pushl
mov
and
clc
pop
or
mov
into
xchg
shrb
fs
movsl
sub
mov
lock
dec
loope
or
add
repnz
jo
outsl
add
sbb
mov
and
js
and
sbb
js
jne
ljmp
sub
pop
push
je
scas
pushl
xchg
fs
mov
test
xchg
mov
loop
ja
or
lds
cltd
rcrb
dec
scas
imul
ret
testb
testl
sbb
adc
sbb
dec
push
jae
sub
mov
test
push
mov
dec
mov
push
cmpsl
fisubrs
pop
lcall
mov
adc
xor
xor
in
outsl
sub
mov
lods
xor
out
sbb
add
jb
in
jns
mov
call
fmuls
lock
ljmp
outsb
imul
out
mov
jmp
adc
mov
jo
pop
jl
mov
gs
movsb
xor
pop
insb
repnz
scas
hlt
sub
pop
movsl
insl
fisttps
jp
ret
aam
mov
cmp
loopne
setp
shl
xor
addr16
popf
dec
and
shll
mov
xlat
xor
fdivp
or
cltd
mov
notl
es
sbb
fs
jne
xchg
mov
cmp
sub
cld
mov
sub
aad
sti
cltd
ret
xchg
mov
sub
mov
inc
ret
inc
fidivrl
mov
fwait
xchg
pop
jmp
orb
loope
test
and
mov
push
jb
in
xchg
xor
push
ret
sub
pop
xchg
test
call
dec
jne
mov
cltd
in
sub
data16
lahf
jmp
mov
scas
aaa
xchg
outsl
in
adc
int3
icebp
fbld
pop
xor
ret
in
jo
loope
lahf
loopne
xor
push
xchg
pop
jno
test
mov
adcl
loope
xchg
test
push
ja
push
xchg
movsb
movsb
inc
mov
or
and
pushf
out
jp
adc
call
sbb
bound
in
leave
xor
addl
mov
lret
movsl
jmp
int3
ja
pop
rcll
les
mov
mov
push
push
dec
sbb
outsb
add
sbb
cmp
xchg
insl
ljmp
in
sub
xor
jg
sub
mov
push
fdivs
push
sbb
pop
xchg
xchg
nop
inc
dec
sbb
lret
in
pusha
pop
loope
dec
jmp
push
fnstenv
pop
jae
jns
fildl
icebp
out
out
or
and
test
shll
fistps
mov
lcall
mov
or
xor
push
lcall
pusha
imul
and
dec
push
mov
imul
movsb
pop
mov
call
fs
jno
cmp
mov
sbb
scas
push
xor
pushf
cmpsb
rsm
popf
pop
leave
push
loop
add
in
in
push
adc
add
add
test
sub
popa
cli
and
mov
or
gs
ja
push
pop
xor
dec
in
stos
jno
mov
sbb
sub
add
sbb
scas
mov
push
or
lret
xor
push
adc
sub
das
stc
test
mov
dec
fs
test
sbb
inc
clc
scas
mov
xor
je
cmc
lock
in
pop
mov
sbb
pop
fwait
sub
add
out
xor
push
call
mov
dec
push
mov
cmp
xchg
andl
xchg
push
jb
xchg
arpl
pop
negl
cli
pusha
or
pushf
or
orl
cmp
outsl
fidivrl
and
sbb
insl
dec
and
xchg
inc
add
stc
call
jno
test
pushf
mov
adc
test
dec
or
pop
lods
xchg
lahf
icebp
movsb
and
int3
mov
lods
xlat
movsb
and
and
test
ljmp
sub
add
pop
loop
mov
ds
lds
aas
jg
mov
ret
insb
dec
fisttpl
and
es
xchg
mov
andb
lret
cwtl
filds
sbb
mov
out
scas
ret
jbe
pop
scas
mov
jns
mov
js
movsb
push
adc
cmp
les
jno
std
shlb
inc
push
mov
xchg
mov
add
aaa
cmp
scas
and
stc
inc
mov
sbb
and
fiaddl
inc
xor
and
ret
insl
jo
iret
lock
or
xchg
adc
jo
mov
ss
hlt
lods
movsb
aaa
out
inc
test
call
add
cld
jae
xor
xor
mov
int3
fistpl
dec
fisttpll
sahf
repz
mov
adc
in
test
mov
xor
lret
push
jo
push
sub
cli
loopne
movsb
adc
mov
das
stos
fs
sbb
mov
loop
leave
icebp
cmp
sahf
lcall
push
jb
movsb
pushf
stos
test
jb
filds
lock
jbe
in
icebp
sbb
mov
sub
repnz
mov
outsl
mov
dec
cmp
cmp
imul
std
out
inc
adc
nopl
iret
pop
pop
daa
or
cmpsl
jg
jle
loope
inc
sbb
sub
pop
popa
adc
or
outsl
lret
imul
jmp
pop
in
pop
stos
subb
mov
addb
mov
roll
push
sbb
pop
dec
sbb
test
jne
adc
sbb
cmp
push
cmp
inc
dec
stos
jg
add
stos
pop
jae
bound
cmpsl
jae
pop
mov
shrd
out
iret
sbb
xor
rol
lret
xlat
mov
mov
jge
push
in
pop
lahf
xorl
sbb
sahf
sub
sbb
loopne
pop
pop
loope
lock
sub
sub
cmpsb
sub
and
clc
dec
add
hlt
fcoms
addr16
call
rolb
mov
sbb
xchg
bound
ficoms
mov
cmp
mov
scas
inc
pop
out
add
mov
sbb
jb
cmp
cmp
adc
or
out
int
lret
daa
popa
jbe
inc
mov
or
jg
xor
lcall
rclb
pop
out
pop
jo
mov
jp
mov
xchg
out
pop
addr16
push
popf
adc
or
ret
cmp
add
repnz
test
ret
outsl
out
mov
into
fstl
int3
adc
push
xor
enter
jp
fwait
or
mov
test
add
xor
lahf
sarl
dec
das
cmpsl
sub
inc
cmp
sbb
pop
imul
add
cmpsb
jbe
adc
lea
mov
es
rol
cmp
sub
inc
pop
xor
ja
fists
add
and
ja
stos
xchg
mov
adc
mov
insl
sbb
and
pop
lods
xor
lea
lods
fists
ds
pop
enter
jle
stos
mov
mov
je
mov
fs
pop
lds
shlb
fwait
icebp
dec
push
sbb
cltd
and
push
or
xchg
sub
push
fdivs
sbb
mov
movsl
mov
mov
aad
stos
adc
xchg
sti
jmp
mov
lock
ret
mov
les
cmp
insl
andb
sub
sub
and
jge
cld
dec
popf
in
adc
mov
fidivl
fisttpll
pop
push
inc
ja
jnp
inc
stos
lods
nop
and
xchg
pop
test
loopne
lds
lock
mov
mov
jp
sbb
enter
shl
insl
mov
pop
sbbb
mov
jp
cli
mov
xchg
lock
filds
sub
shl
xor
in
mov
or
or
outsb
mov
nop
mov
cli
aaa
popa
xchg
stos
repnz
or
repz
push
cltd
and
ljmp
lock
jbe
mov
xchg
lods
push
repnz
xchg
loopnew
repnz
ret
xor
mov
cmp
clc
pushf
cmpsl
sbb
xor
test
ficoms
mov
xor
fldenv
inc
loopne
cmp
and
sbb
mov
adc
into
inc
pop
outsl
sahf
imull
sub
cmp
mov
arpl
fiaddl
mov
add
mov
dec
sarb
imul
fidivs
mov
adc
js
mov
or
cmpsl
cli
fcoml
pop
sbb
shlb
les
lods
sahf
insl
jle
pushf
lret
std
dec
cmp
insl
lret
and
mov
lock
or
loopne
out
sbb
mov
dec
pusha
notb
leave
dec
pop
in
dec
mov
dec
test
dec
cmp
mov
in
icebp
pop
call
lock
mov
cmpsb
outsb
movsb
sbb
lea
mov
xchg
mov
add
mov
mov
xor
add
pop
arpl
shr
in
adc
mov
adc
xchg
adc
sbb
cmpsl
test
xchg
inc
adc
in
mov
sub
cmpsb
ret
shlb
mov
push
fcompl
adc
sbb
xchg
es
mov
cmp
xor
sbb
jne
imul
mov
idivw
sbb
in
outsb
add
cmp
xor
sub
cmp
shl
or
daa
mov
push
pop
sbb
pop
pop
fldenv
sbbb
rcrl
cld
lret
popa
loop
mov
adc
jno
mov
pop
ljmp
int
aaa
add
mov
mov
lds
lods
mov
add
xchg
mov
lds
out
inc
fistl
or
iret
push
or
leave
gs
xchg
sbb
jmp
cmp
cmp
xchg
adc
push
fstps
adc
fcompl
sbb
mov
push
movsb
cmpsb
mov
xor
lods
and
fs
fnstcw
ret
shr
in
add
es
jmp
xor
push
or
ja
xor
cmpsl
fwait
ja
adc
sti
mov
fcmovb
push
inc
mov
out
or
cli
bound
adc
jno
sub
ljmp
test
nop
lcall
mov
jae
ret
and
mov
lock
popf
lret
push
adc
mov
sbb
mov
fisubs
mov
bound
dec
cmp
fstps
stos
stc
rclb
sbb
lods
orb
mov
dec
imul
pop
daa
sbbb
mov
or
dec
sub
ja
and
addr16
jae
jl
inc
out
mov
jo
aad
stc
cli
push
nop
mov
mov
jle
mov
lea
mov
push
int3
out
mov
xchg
iret
sbb
dec
fs
lret
int
mov
fstpl
pop
jl
xlat
cmpsb
daa
push
jb
fsubrs
sub
dec
movsb
jle
push
sbb
cmp
adc
xor
sbb
test
pop
mov
mov
pushf
mov
loope
push
mov
push
dec
popf
pop
imul
sub
test
xor
mov
stc
xchg
sub
stos
insl
xor
stc
push
or
xor
mov
pop
bound
push
inc
and
cmp
rcrl
into
pushw
fwait
loop
xchg
pop
mov
addb
xchg
dec
cmp
and
fnstenv
lret
mov
sbb
jnp
sbb
pusha
and
pop
lea
jno
inc
xlat
push
pop
mov
pop
call
mov
imul
jae
push
push
hlt
scas
divb
test
icebp
cmp
push
sub
push
pushf
jmp
sub
sub
rorl
mov
sbb
push
sbb
sahf
clc
in
pop
dec
pop
scas
icebp
mov
cmp
rolb
inc
lds
xor
mov
mov
dec
dec
lahf
sub
insl
lods
pop
mov
ja
in
sub
push
sub
add
or
mov
xchg
cmc
jl
lret
loopne
mov
popf
sbb
mov
aaa
or
add
out
stos
ja
and
movsb
sub
es
test
test
fs
ljmp
cltd
mov
out
pop
cld
lcall
imull
jb
mov
jg
mov
cmp
out
pushf
bound
andl
rcrl
and
scas
push
jle,pt
cmp
xor
mov
push
aaa
jg
jbe
mov
test
or
ds
pop
fmuls
mov
pop
adc
movsl
dec
push
icebp
pushf
xor
adc
push
stos
sub
xor
lods
nop
clc
xor
adc
sub
cli
or
push
pop
outsl
sbb
xor
sbb
int3
nop
cli
leave
sub
lret
xor
inc
or
es
pop
add
lea
sbb
inc
stc
lock
mov
xlat
mov
jmp
adc
int3
jbe
leave
mov
mov
dec
dec
xor
mov
faddl
mov
lea
out
test
cmp
push
pop
cmp
scas
and
push
sub
les
outsl
outsb
leave
pop
xchg
lods
mov
and
jl
sysenter
sbb
sbb
add
sub
add
mov
mov
jo
adc
movl
stos
aaa
sbb
dec
int
aaa
cmp
in
push
push
pop
mov
inc
std
insl
call
push
lock
jle
fisttpl
lahf
sti
sbb
push
xlat
and
sbb
mov
ds
inc
sub
idivb
add
inc
cli
push
lcall
leave
les
loopne
xor
mov
push
mov
push
sub
or
inc
je
dec
or
insl
lret
push
xchg
pop
inc
inc
jno
xchg
xchg
sub
push
and
scas
pop
fldt
outsl
sub
push
in
lahf
loopne
dec
push
sar
cmp
push
sub
dec
and
data16
pop
in
push
imul
dec
xchg
insl
pusha
lcall
sub
cli
sbb
jge
enter
gs
inc
mov
in
dec
sub
cld
adc
mov
stos
mov
daa
fdivs
sub
mov
sbb
aad
jo
push
push
imull
mov
or
inc
icebp
pushf
leave
fs
mov
cmc
jecxz
jg
test
dec
pop
xor
ficoml
push
pop
pusha
rclb
mov
mov
fidivrs
mov
mov
in
jmp
hlt
sub
stos
sahf
loope
lock
rcrl
mov
pop
cmpsl
jne
adcb
push
lods
pop
clc
out
aaa
mov
sbb
push
notl
es
or
addb
leave
mov
jns
cld
inc
xchg
iret
mov
lods
rol
sub
fcoms
xchg
pop
dec
cmp
cmp
sbb
push
pop
mov
pop
cmp
shr
lods
mov
pop
xor
cmp
mov
xor
test
cwtl
pop
fwait
cli
xor
and
and
xchg
test
jmp
mov
or
and
xor
lcall
mov
pushf
mov
mov
hlt
add
push
daa
and
pop
mov
adc
sahf
jae
in
mov
xchg
jo
and
hlt
movsb
pusha
loop
lret
mov
das
push
xor
sti
adc
xor
loop
ljmp
adc
mov
pop
jle
fs
adc
insl
xchg
cmp
cs
pop
add
insl
pop
in
and
fidivl
inc
mov
cmpsl
mov
xor
pmulhuw
mov
test
stos
int3
jp
divl
loopne
mov
fs
loopne
xchg
and
ja
scas
push
jo
push
sub
push
mov
mov
sub
inc
out
inc
mov
sub
and
sbb
sbb
xor
jp
into
sbb
cmp
sti
push
mov
enter
cmp
mov
add
kmovw
jmp
pop
jne
icebp
sbb
xchg
test
adc
fidivrs
test
xor
jecxz
pop
nop
or
xor
xchg
adc
std
div
sub
and
call
xchg
icebp
xchg
mov
int3
lock
ja
inc
ds
pop
stos
rolb
movsl
xor
push
xchg
xor
aaa
addl
mov
addb
mov
cmc
sub
cmpsl
mov
outsl
sub
push
neg
lds
inc
stc
stos
sub
jmp
adc
testl
xor
inc
incb
mov
add
cli
mov
dec
cmp
pushf
inc
loope
enter
data16
xor
movsb
cwtl
pop
pushf
cmp
ret
stos
daa
dec
in
lret
cmp
sub
cld
pop
aad
imul
jp
std
pushf
adc
jle
mov
loop
push
dec
or
mov
shlb
pop
ret
int3
inc
pop
xchg
outsb
adc
sbb
jne
popf
mov
notb
push
inc
outsb
cmpl
adc
rorl
add
xchg
dec
stos
pop
in
pop
in
mov
cmp
jo
cmp
mov
cld
or
data16
mov
cmp
cmpsb
pop
jp
bt
dec
or
lret
imul
pop
dec
jae
in
sahf
xchg
stc
dec
pop
ja
mov
shll
jno
leave
sbb
fisubl
movsb
cmp
std
fbstp
sbb
xlat
stos
clc
ljmp
xor
fcoml
push
mov
jnp
stos
sbb
lock
arpl
cmp
cmp
inc
mov
push
scas
mov
mov
sbb
test
insl
mov
loop
or
bound
sbb
add
mov
xchg
push
fwait
shrl
jno
cmp
adcb
sub
mov
bound
sbb
pop
lret
int3
mov
imul
pusha
jl
mov
in
sbb
mov
lret
movsl
test
iret
jle
and
mov
sbb
mov
or
jnp
pop
and
pop
int3
dec
fwait
or
mov
adc
mov
sbb
in
sub
adc
stos
xor
sbb
pop
call
add
cli
mov
push
std
xchg
cmp
and
push
or
imul
int
sbb
aaa
pusha
inc
cwtl
aaa
mov
data16
in
or
or
fwait
lods
xchg
pop
push
in
clc
stos
adc
pop
cld
sbb
mov
shrb
lods
mov
ja,pn
jb
xchg
push
out
inc
sbb
jge
lea
sub
outsb
cli
fiadds
ss
jno
mov
dec
fists
dec
adc
push
fildl
and
inc
dec
sbb
outsb
mov
dec
jbe
in
jge
jo
inc
sbb
pushw
sub
sbb
xchg
sbb
cmp
jo
push
mov
adc
pop
fsubl
push
fsubl
adc
gs
jne
and
ljmp
add
imul
or
push
mov
orl
add
sbb
stc
call
movl
jno
xchg
incl
cli
mov
mov
push
dec
in
sbb
xor
sbb
sbb
mov
sti
jl
xchg
ja
bound
ret
mov
mov
cmp
dec
in
mov
push
loop
dec
fisubs
mov
in
fdivl
sbb
or
or
xchg
jbe
mov
cli
mov
mov
enter
movsb
lods
fisubrl
sbb
mov
sbb
ss
leave
popf
aaa
clc
dec
imul
sahf
in
mov
outsl
jl
push
add
push
test
lods
xor
xor
inc
pop
inc
jne
mov
out
xor
jno
out
fildll
sbb
mov
dec
aas
xor
push
mov
data16
push
fisubs
imul
push
dec
mov
mov
jno
push
rcrl
mov
xor
dec
or
adc
push
cli
out
push
cltd
adc
cli
cmp
sbb
xor
fcomi
xchg
repnz
ljmp
loope
dec
mull
jae
adc
into
mov
daa
push
inc
push
mov
mov
arpl
and
je
pop
outsb
dec
pop
sahf
mov
inc
dec
arpl
aam
jle
add
xchg
rcrl
and
out
lods
xchg
xor
pop
xor
push
xlat
pop
and
inc
dec
dec
das
jno
mov
scas
aad
sub
loope
mov
vphaddbd
xchg
fsub
fwait
mov
jne
ljmp
ja
mov
nop
inc
iret
pop
and
pop
shr
mov
ljmp
and
lea
mov
mov
mov
xchg
aaa
jecxz
pop
sub
xor
xlat
leave
enter
fsubrp
loop
inc
adc
pushf
xchg
nop
fsubp
pop
mov
mov
pop
mov
mov
xchg
es
outsl
jg
div
int3
jmp
das
fsubr
lret
xchg
stos
scas
outsb
shrb
sbb
in
aaa
je
iret
push
mov
dec
cmp
push
fs
sub
roll
cld
lock
inc
imul
mov
es
out
into
xor
dec
imul
add
mov
sub
lret
dec
in
or
scas
scas
jb
sub
jnp
lock
faddp
mov
jbe
pop
movb
xor
xchg
push
aaa
cld
lret
push
insb
push
push
clc
fs
inc
add
iret
lea
xor
inc
lea
dec
push
xchg
or
jb
pop
das
leave
xor
arpl
push
movsl
idiv
pop
or
push
outsb
sbb
mov
jp
mov
jbe
sbb
jmp
cmpsl
arpl
sarb
cli
insl
fsubrs
mov
pushf
out
movsb
mov
xor
fimull
and
aam
fadds
inc
cmp
or
ret
dec
mov
in
ss
sub
cld
mov
lea
cmp
fildl
xchg
loop
sbb
pop
pop
pop
push
sbb
push
add
sub
mov
popf
repnz
inc
das
mov
sub
addr16
dec
or
test
and
ja
nop
and
dec
inc
add
into
jmp
int3
inc
sbb
adc
shlb
pop
and
sbb
or
or
mov
cmpsl
mov
leave
dec
jnp
call
jl
dec
lahf
arpl
inc
and
inc
enter
aaa
jo
fstl
sbb
cmp
decb
jbe
scas
popa
lcall
and
fs
cs
aaa
sub
das
int3
adc
sub
adc
or
icebp
mov
jmp
ficompl
daa
repnz
sarb
ret
and
stos
mov
cmp
inc
ss
sbb
int3
ja
cltd
pop
shr
out
stos
dec
movsb
adc
popf
lock
jbe
xchg
movsb
cwtl
scas
pop
aam
or
sub
shr
out
add
scas
int
jge
mov
addr16
dec
fidivl
subb
mov
jecxz
negb
dec
rcrb
or
xor
mov
outsb
lret
dec
xchg
ret
cmc
mov
repnz
nop
pop
sbb
fisubrl
or
xchg
test
lret
xchg
out
push
repnz
mov
scas
ljmp
and
sub
jnp
arpl
loope
movsb
repnz
sbb
cltd
outsl
std
mov
jo
sub
pushl
inc
sbb
cmpsl
add
pusha
fisubrl
in
sub
or
mov
lahf
sub
test
stos
data16
xor
sub
imul
adc
scas
shlb
ret
mov
and
jno
adc
push
fs
das
mov
xchg
mov
test
jb
test
scas
in
movsl
lds
in
testb
or
or
popa
lods
xor
or
sub
dec
out
sbb
mov
and
and
add
xchg
jo
push
hlt
imul
fcoms
pop
leave
mov
aas
pusha
dec
dec
bound
push
scas
adc
xor
add
xor
and
and
shl
ja
mov
es
xchg
icebp
daa
daa
sub
mov
ret
jb
das
fiaddl
push
aad
xchg
outsb
mov
out
add
cmpsl
std
lahf
mov
sti
xorb
xor
addl
sub
and
out
movsb
outsb
adc
mov
lods
andl
nop
orb
int3
jmp
jne
cmp
popa
mov
leave
roll
cli
sub
adc
mov
shrb
push
mov
outsb
dec
xchg
fs
and
nop
and
int
cld
lea
repz
fs
movsl
pop
in
hlt
int3
or
xor
sbbb
adc
push
iret
fmuls
std
dec
cmp
loope
adc
mov
cmpsl
xchg
add
mov
jmp
sbb
in
imul
push
frstor
es
nop
jmp
push
les
jecxz
cmp
lahf
jo
mov
xorb
pop
movsl
pop
push
stos
add
push
mov
and
inc
push
push
insl
lock
fucomp
xchg
sub
movsl
jp
ss
stos
ret
adc
int3
jns
jb
mov
dec
mov
mov
mov
mov
add
jp
pop
and
fistps
add
add
arpl
outsl
dec
lods
cwtl
in
js
fiaddl
add
das
dec
inc
pop
ss
sbb
add
arpl
push
jb,pn
jmp
popf
loope
push
popf
fisubs
and
stc
mov
push
movsb
cli
addr16
jo
push
or
mov
xchg
dec
test
lret
sbb
xchg
bound
test
loope
mov
xchg
cmp
rcrb
aad
jo
dec
loopne
sbb
movb
ret
aad
sbb
lret
jo
hlt
repnz
lods
pop
push
cli
movsl
fisttps
lcall
or
jle
frstor
xchg
or
imul
pop
outsl
icebp
mov
in
xor
gs
daa
nop
mov
cmp
sbbb
insl
pushf
inc
in
jnp
aaa
lcall
mov
mov
ja
int3
adc
xchg
lret
mov
imul
xchg
ret
js
out
dec
loopne
push
out
inc
outsl
movsl
rclb
add
aaa
pop
pop
sahf
add
fisttps
dec
mov
mov
ljmp
push
push
rcrb
cmp
push
stos
jns
ds
cltd
or
lea
mov
imul
out
leave
xchg
mov
in
pop
and
in
mov
jmp
cmp
and
mov
sub
sbb
push
cmp
mov
mov
cmp
popf
adc
adc
mov
pop
scas
mov
popf
ret
mov
xlat
jmp
movsb
cwtl
jb
test
mov
lock
scas
in
xchg
xor
fs
fdivr
sub
pop
shl
jnp
lret
inc
imul
out
xchg
imul
adc
and
dec
push
sbb
loopne
mov
mov
inc
jno
inc
les
jg
addl
mov
mov
dec
movsl
push
jo
paddsw
cmp
fistpl
or
test
out
add
pop
cmpsb
mov
add
gs
ret
imul
mov
pop
stos
in
or
inc
sub
mov
sub
sbb
jno
in
xor
loope
xchg
icebp
cmpsb
fldenv
lret
icebp
mov
pop
std
jp
imull
dec
or
lods
repnz
mov
jecxz
cmpsb
insl
cmp
or
ret
outsb
dec
cmp
add
js
mov
das
xor
cmp
arpl
and
pop
ja
mov
sub
and
cmpsl
lods
lock
push
nop
xchg
ss
xchg
aad
icebp
and
and
mov
mov
sbb
mov
fidivrl
add
adcb
test
inc
mov
in
ret
mov
sbb
movsl
jb
pop
xchg
mov
cmc
sbb
jl
addr16
push
adc
mov
jp
sbb
das
mov
rcll
pop
sbb
cmpsb
sahf
or
mov
mov
test
ficomps
loope
fists
mov
in
mov
lods
movb
inc
add
and
movl
stc
sub
fcoml
pop
bound
jg
out
xlat
lods
cmp
mov
and
cmp
fistpl
cmp
enter
movl
aaa
add
mov
fwait
mov
sub
dec
mov
stos
ficoml
mov
int3
lea
testl
push
addl
push
imull
inc
pop
add
icebp
xor
and
enter
cli
xor
pop
pushf
dec
sbb
cmp
and
add
and
aaa
or
xor
fisubs
cmp
divl
pushf
adc
mov
xchg
add
jmp
out
test
popa
xchg
movsl
xchg
dec
sbb
nop
mov
adc
xchg
lods
fwait
jmp
into
out
sti
lock
push
and
xchg
sbb
mov
mov
mov
sbb
dec
fwait
dec
add
lret
in
push
lods
dec
mov
les
sarl
mov
xchg
bound
imul
cli
iret
adc
and
sub
dec
inc
mov
nop
ljmp
in
insl
sub
dec
fbstp
xor
xor
sub
mov
xor
lret
mov
fiaddl
in
lods
dec
fwait
sbb
movsb
test
stos
inc
popa
pop
out
inc
ja
mov
pop
jp
and
mov
insl
insl
cmp
jo
cld
cmp
inc
xchg
lahf
loopne
and
pusha
mov
sbb
mov
popa
mov
pop
pop
cli
and
pop
jl
sbb
xchg
adc
pop
ljmp
dec
ret
dec
add
xchg
sbb
jb
push
andl
loop
and
cmc
push
xor
jmp
aam
in
outsb
mov
sub
add
data16
mov
jb
fists
cmp
adcl
mov
push
mov
loope
sti
pop
dec
daa
repz
mov
jnp
mov
inc
mov
pop
mov
mov
aas
mov
mov
mov
ds
dec
js
mov
lods
jno
or
pop
popa
or
xchg
movsb
sub
ret
stc
adc
dec
std
in
or
mov
lods
mov
subl
jmp
movsl
arpl
push
dec
int3
xor
pusha
inc
xchg
xor
mov
icebp
push
or
lods
cmp
xchg
dec
inc
ficoms
inc
and
xchg
mov
aaa
sub
or
inc
loop
dec
mov
ret
inc
sub
sub
outsb
lock
mov
mov
mov
sub
cmp
add
cmpsb
xchg
outsl
pop
das
arpl
divb
adc
inc
dec
call
push
outsb
mov
inc
push
jo
fldt
dec
xlat
adc
f2xm1
sbb
repz
mov
lahf
xor
test
xor
dec
fwait
add
fidivrl
in
jmp
mov
fildl
jbe
jns
cwtl
lds
pushf
fnstenv
xor
or
adc
jb
in
in
dec
aam
popf
aam
push
iret
mov
out
and
xor
sub
lcall
imul
fsubrs
std
or
xor
fsubrl
loope
jne
aaa
mov
call
into
fidivrs
or
sub
mov
sbb
cmc
lret
fstl
pop
nop
dec
lret
cwtl
cmp
mov
fdivl
outsl
int3
xlat
outsl
lock
xor
in
insl
iret
gs
fwait
xchg
daa
adcb
fimull
cmpb
pop
add
mov
loop
lock
mov
int3
icebp
imul
aad
pop
push
lods
call
ret
jb
test
add
mov
jb
jp
leave
fbstp
lock
adc
xlat
mov
pusha
adc
sbb
imul
and
mov
push
pop
jp
xchg
cmp
repnz
ret
xchg
sbb
movb
rorb
das
mov
or
pop
mov
jno
lock
push
arpl
in
sahf
aaa
pop
sbb
mov
jbe
cmpsb
and
les
inc
mov
mov
and
std
js
add
lock
fldenv
adc
mov
testb
fildl
subl
icebp
xchg
mov
aaa
fidivl
sti
dec
and
and
mov
mov
imul
std
sbb
cmpsb
popa
mov
and
stos
dec
cmp
bound
pop
outsl
pop
push
inc
mov
loop
movsl
push
pop
sahf
inc
and
sub
mov
cmp
mov
lcall
pop
enter
mov
mov
or
in
out
repnz
push
sbb
mov
das
push
jle
sub
dec
xchg
push
loope
and
xlat
add
popf
pop
out
cmc
sbb
jmp
fnstenv
movsl
jno
fwait
add
cs
or
jecxz
scas
pop
jno
popa
fwait
leave
leave
sbb
mov
push
mov
mov
shll
call
imul
adc
lock
pop
and
jg
dec
cltd
cmc
and
cmpsb
arpl
pop
imul
fsubr
pop
in
mov
pop
or
xchg
add
or
std
ljmp
inc
add
xor
stc
or
pop
or
movsb
mov
mov
pop
pop
jmp
lock
popa
fstl
or
mov
int
xchg
push
add
push
jg
or
bound
dec
jae
fists
inc
lds
lock
dec
int
out
push
sahf
mov
out
pop
sbb
cmpsl
mov
or
sbb
cmp
daa
mov
sub
push
push
add
cmp
jmp
fsubl
or
xchg
adcl
flds
dec
xorl
pop
xchg
mov
and
js
and
pop
mov
push
cmpsl
mov
nop
xor
jecxz
xchg
sti
popa
lea
push
test
daa
jne
xor
addr16
pop
pop
aas
rcrb
test
inc
rcrb
xchg
sbb
es
scas
sub
pushf
jns
mov
daa
add
imul
xchg
dec
nop
pop
xchg
popa
addb
xchg
xor
lret
inc
out
fbstp
fbld
daa
jge
mov
adc
mov
movsb
lahf
dec
mov
negb
sahf
sub
mov
negb
xor
cmp
xchg
adc
xchg
jno
fmul
xchg
mull
rcrb
and
dec
dec
and
cwtl
mov
xor
sub
push
les
mov
xchg
xor
or
and
dec
adc
xlat
xor
push
icebp
sbb
mov
shr
jo
push
sbb
mov
xor
ja
push
in
sbb
out
pop
imul
js
or
sbb
mov
push
pop
mov
lods
inc
sarb
xor
rcll
cmp
mov
mov
ss
add
dec
pusha
loopne
mov
mov
pushf
lahf
gs
pop
mov
movsl
cmp
cmc
aam
loope
cmpsl
icebp
dec
and
jnp
lock
xorl
test
out
inc
inc
divb
add
cmpsl
push
jae,pt
addr16
jbe
movsl
pop
pusha
out
flds
or
xchg
sub
and
mov
cmp
xor
popa
aas
xchg
clc
imul
fimull
and
and
cmp
push
fcomi
jno
gs
or
popa
cltd
cwtl
loope
lea
arpl
adc
cwtl
lcall
mov
adc
cltd
mov
arpl
add
push
ret
sar
imul
loopne
push
mov
sbb
or
int3
or
cli
sbb
fwait
lret
adc
lcall
loop
jecxz
pushw
lret
cmp
xchg
mull
int3
fistl
dec
fisttpll
push
pusha
and
loopne
add
lods
lret
dec
dec
popf
cmpsb
and
mov
pop
lret
sbb
mov
dec
adc
xchg
cmc
je
or
mov
test
push
cmp
pop
or
lcall
pop
int3
mov
mov
mov
mov
jnp
popf
push
out
dec
sbb
loope
pop
dec
push
mov
imul
pop
and
add
data16
xor
cwtl
adc
loope
mov
insb
int3
mov
mov
rorb
fidivl
sub
stos
add
pop
in
lret
ret
popa
mov
xchg
pop
push
ds
xchg
mov
shrl
movsl
push
push
lcall
or
push
and
mov
hlt
jmp
or
sbb
jbe
mov
xchg
shll
rorl
push
jno
in
and
or
pop
in
call
popa
sbb
dec
mov
out
mov
pop
lcall
xor
push
sub
and
lcall
and
pop
adc
pop
mov
fimuls
mov
imul
pop
adc
in
fisubl
scas
popf
stos
clc
in
andb
dec
push
jae
lcall
gs
std
mov
ja
mov
rorl
mov
fcmovnbe
test
popl
adc
aaa
imul
xchg
mov
sbb
mov
and
push
pop
das
repnz
cs
daa
lods
jge
insl
sbb
int3
mov
cli
xchg
push
lock
lret
stc
sbb
push
mov
adc
mov
clc
repnz
in
adc
scas
pop
outsl
add
bound
pop
outsb
ret
xlat
xchg
ret
push
jp
pop
push
movsl
and
xlat
adc
or
sub
sub
test
es
mov
add
popa
fbstp
es
outsb
sahf
mov
outsb
repz
or
add
xorb
xor
push
push
shll
adc
loope
inc
mov
and
xor
push
or
js
inc
xchg
jo
sti
or
mov
clc
inc
cmp
mov
in
and
ljmp
sbb
inc
outsb
fs
mov
loop
dec
fnsave
roll
dec
jno
push
inc
aaa
leave
lods
loope
mov
divl
jecxz
pop
and
out
stos
pop
push
sahf
pushf
inc
mov
popf
push
mov
test
mov
movsb
push
pop
jb
cmc
es
ret
nop
jp
test
ficompl
aam
addl
dec
xor
loop
jp
dec
mov
sbb
repz
jne
and
lcall
xchg
mov
aas
aas
fistps
stos
cld
push
lock
add
cli
fistpll
scas
arpl
es
shlb
push
lret
test
pop
icebp
mov
lahf
mov
jb
loop
pop
in
fistpll
ss
xchg
mov
fsts
xchg
jmp
dec
jo
stos
fisttpl
jb
shll
mov
sbb
xor
ret
lcall
cmpsb
cld
push
inc
jecxz
mov
xor
cltd
and
pop
and
fiadds
mov
pop
xor
clc
xchg
aaa
test
pop
adc
or
cmp
push
mov
pop
xchg
inc
fisubs
dec
jno
es
ret
fidivrl
pushf
call
jg
jbe
pop
push
mov
and
dec
popa
out
jne
push
loope
call
lahf
notb
mov
xor
adc
sbb
mov
push
add
imul
dec
sub
int3
movsl
roll
mov
and
sub
call
imul
cmpsb
in
xchg
sbb
jno
jmp
dec
ljmp
iret
fs
jb
inc
mov
inc
xor
sub
mov
in
iret
and
pop
fs
cmp
jl
mov
inc
jmp
add
shll
enter
stos
pop
mov
vcmppd
addr16
shll
mov
outsb
out
jo
jp
push
movsl
pop
insl
cltd
push
xchg
loope
pop
jno
sbb
scas
mov
dec
popa
and
add
out
imul
mov
xor
push
fsts
bound
pop
imul
jnp
shl
mov
sub
xor
fnstsw
lret
clc
test
repz
xchg
sub
push
dec
push
cltd
imul
sbb
sbb
sbb
lods
mov
shrl
cmp
push
orb
rorl
insb
imul
inc
pop
dec
push
daa
jmp
test
enter
insl
bnd
or
add
aam
ja
int3
cmpsl
leave
xchg
outsl
xor
lds
xor
lods
dec
xchg
int3
aaa
push
pop
hlt
push
jecxz
mov
push
movsb
lret
out
test
divl
fcomp
imul
add
in
stos
lret
hlt
test
repnz
jbe
daa
ljmp
in
ret
mov
icebp
nop
test
xchg
in
dec
fdivl
std
gs
insb
jno
push
dec
imul
cs
insl
outsb
jb
and
or
icebp
in
outsl
jb
sarl
dec
sysret
adc
test
push
adc
mov
jo
mov
mov
stc
aaa
addr16
add
cmpsb
bound
std
mov
mov
sahf
push
sbb
or
dec
jo
xchg
mov
lret
lcall
push
xor
gs
les
sbb
lahf
aam
in
mov
mov
sbb
out
data16
mov
pop
xor
cmp
dec
pop
in
mov
lods
movsb
cmpsl
dec
ljmp
insl
int
lahf
pop
sbbb
nop
xchg
jno
sti
push
aad
xchg
pop
scas
and
xlat
pop
dec
lods
pop
scas
mov
nop
lahf
push
xor
imul
sub
into
fcompl
push
push
inc
jl
pop
pushf
mov
enter
pop
push
cmpsl
fmuls
cmp
pop
xlat
xor
divl
jno
xor
movsl
arpl
aas
fisubrs
xor
xor
js
cmpsb
inc
lcall
add
pop
and
pop
pushf
fisttpll
push
shlb
testb
repnz
sub
outsl
std
add
jl
loopne
xchg
jb
cmpsb
adc
inc
ds
push
sub
lcall
sbb
test
ret
fisttps
cmpsl
dec
loop
pop
sbb
shll
int
in
mov
aaa
push
movsb
or
popf
add
sub
lahf
mov
pop
xchg
dec
xchg
mov
in
loopne
mov
push
push
sub
sub
mov
jnp
adc
clc
adc
dec
movsb
out
xchg
mov
jbe
loop
movsb
in
out
daa
push
and
push
lahf
and
adc
sbb
outsl
insl
dec
inc
filds
es
xchg
mov
arpl
xchg
fwait
xchg
adc
xchg
pusha
adc
jecxz
loop
xchg
mov
mov
cli
push
in
dec
clc
pop
cmp
mov
mov
pop
mov
lcall
adc
dec
mov
adc
jp
xor
push
or
push
lods
mov
int
mov
sbb
shl
mov
in
loope
dec
pop
out
mov
fdivp
lds
inc
or
xor
dec
mov
xor
shlb
push
sub
xchg
imul
in
jle
sbb
xchg
in
or
loopne
mov
pusha
ret
sti
dec
movsb
lock
push
push
cmpsb
mov
pop
mov
jns
in
mov
aaa
mov
mov
add
mov
js
inc
outsb
pushf
lods
divl
xchg
mov
sbb
pop
mov
mov
das
mov
mov
mov
sbb
pop
loope
add
lret
or
loopne
sbb
lea
jbe
mov
aad
pop
xchg
jbe
pop
pop
mov
loope
xor
xchg
cmp
mov
insl
adc
cltd
fstpt
ss
sub
loopne
cli
adc
mov
sub
or
mov
push
rcll
pop
in
or
in
add
sbb
and
push
xlat
lret
test
xor
jno
and
and
mov
mov
cmpl
loopne
ljmp
pop
jnp
or
sub
in
int3
outsl
xchg
mov
sub
les
adcl
inc
out
iret
push
pusha
pushf
pop
cltd
inc
outsl
jl
xor
shrl
push
xchg
push
daa
js
mov
dec
in
fcom
inc
pop
test
and
clc
fadd
push
sbb
iret
enter
mov
add
mov
dec
gs
sub
loope
imul
repz
push
pushf
mull
iret
inc
mov
sbb
or
lahf
sti
lret
push
das
push
push
add
cltd
fistpll
mov
mov
fdivr
addl
out
stos
mov
stos
fs
sub
jecxz
push
xorl
adc
sub
pop
mov
add
inc
adc
pop
dec
xchg
flds
xor
xor
mov
cli
imul
xor
mov
in
or
cmp
rcll
xchg
xor
xchg
int
leave
icebp
inc
cmp
sbb
repnz
imul
loope
pop
mov
neg
imul
cmp
dec
testb
add
pushf
fs
mov
xchg
ss
mov
push
xchg
mov
aaa
dec
mov
divl
loop
pusha
frstor
out
shr
lea
mov
jns
lds
ds
iret
ret
and
inc
mov
adc
push
testl
xor
mov
or
iret
mov
push
sub
repnz
idivl
add
ret
cmc
shld
stos
jnp
sub
mov
sbb
cltd
dec
int3
lock
dec
stos
mov
fs
inc
xchg
pusha
movsb
push
stos
sub
outsb
psubusw
jbe
push
lds
dec
stos
je
or
stos
push
lock
add
aaa
pop
mov
outsb
aam
stos
cmpsl
mov
mov
push
push
dec
fwait
mov
pop
mov
aam
cli
test
mov
adc
in
in
call
test
xor
jns
push
in
mov
arpl
sub
pop
imul
cmp
xchg
scas
mov
sub
dec
or
cwtl
jo
and
cld
lock
cmp
mov
sahf
outsb
cmp
sub
cmpsb
jo
mov
push
call
imul
xchg
inc
push
cmp
movsb
jnp
mov
mov
aad
outsb
in
mov
sub
call
and
sub
bound
push
and
or
lods
bound
in
adc
lea
testl
sub
bound
lcall
pusha
call
in
or
pusha
mov
xlat
or
testl
mov
sbb
stos
jge
notl
fwait
sahf
sbbb
dec
xchg
mov
and
dec
loop
movsl
add
out
lock
scas
push
lods
mov
and
insl
in
cmp
ja
aam
inc
mov
in
mov
mov
mov
imul
lods
sbb
clc
lods
and
addb
dec
push
ljmp
mov
or
sbb
mov
stos
mov
aad
adc
sbb
outsb
ljmp
sub
jmp
push
xor
mov
stos
loopne
push
adc
push
mov
pop
cmpsb
loopne
ret
ljmp
insl
mov
push
mov
insl
test
scas
mov
gs
cmc
in
outsb
idivb
sub
pop
fs
clc
loope
shlb
loopne
popl
ljmp
sbb
and
jl
mov
inc
rsm
shlb
or
add
inc
dec
adcl
xchg
adc
or
in
push
inc
pop
or
lret
mov
mov
and
push
loop
sbb
sbb
pop
mov
nop
mov
bnd
xchg
cmpsb
mov
xlat
out
inc
mov
jno
add
loope
bound
lcall
or
adc
pop
xor
inc
mov
sbbl
hlt
sub
call
stos
adc
add
lea
push
dec
sub
cmpsl
gs
add
in
inc
loopne
into
mov
je
shlw
scas
cmpl
mov
fs
add
pusha
call
jecxz
sub
stos
cmp
movsb
test
xchg
or
in
enter
cs
mov
dec
mov
lret
or
stos
fs
add
js
in
popa
fdivrs
mov
fistps
fidivrs
cld
shlb
mov
inc
adc
aam
mov
movsl
push
push
xchg
out
std
rorb
insl
xor
add
insl
sbb
jne
cld
pop
xchg
pop
push
mov
or
pushaw
push
push
stos
sub
inc
pop
pushf
in
stos
sbb
inc
stos
mov
push
jmp
lret
push
push
adc
lcall
cld
stos
test
fisubrl
sbb
push
pop
push
fwait
scas
jmp
mov
stos
push
nop
leave
sbb
cld
stos
jp
pop
fs
out
pop
jo
int3
sbb
test
scas
cmp
sub
fisubs
pop
mov
stos
xchg
imul
stos
push
pop
inc
mov
rcr
sbb
stos
sub
dec
pop
xor
stos
imul
sbb
leave
in
pusha
and
push
fmuls
lea
xchg
pusha
xchg
cmp
jecxz
jb
sub
mov
arpl
call
adc
mov
jo
push
mov
pushf
xchg
cmp
sbb
popa
decb
adc
test
mov
adc
cwtl
data16
mov
mov
and
jl
lock
repnz
std
test
dec
je
xchg
lods
xchg
dec
bound
out
ret
cmp
or
sahf
inc
and
mov
fnsave
jo
lahf
jbe
jmp
sarl
cli
mov
push
mov
and
add
test
out
adc
xchg
mov
cmp
add
cmp
fucomip
cmp
imul
mov
mov
mov
pusha
mov
out
cltd
mov
rol
fwait
cmp
aas
mov
adc
loope
sub
pop
xor
fmull
sub
mov
sub
ds
add
popa
test
push
out
pop
mov
pop
in
in
mov
pop
push
push
sbb
jae
jge
bound
cs
das
jl
lods
mov
test
xchg
notb
int3
cmpsl
push
push
and
sbb
mov
cmp
or
cmp
shrl
xchg
push
in
or
adc
xchg
rcrl
sbb
insb
hlt
sub
ja
mov
lds
sub
ss
pop
dec
fnstenv
pop
push
imul
dec
cltd
sub
adc
xor
xor
sti
inc
stc
out
pop
mov
mov
ds
push
push
sbb
mov
add
cltd
sti
stos
mov
xor
xor
mov
and
xchg
outsb
out
sbb
jp
loope
mov
int3
es
mov
dec
out
mov
je
pop
cltd
int
pop
pop
push
mov
and
xor
and
mov
xchg
iret
daa
cmpsl
insl
repz
adc
fadd
dec
jbe
inc
dec
fdiv
cmp
popa
mov
imul
mov
je
push
and
pop
mov
push
call
cli
dec
sub
outsb
mov
cld
test
insl
js
pop
imulb
lods
sub
int
add
mov
leave
mov
daa
or
imull
add
mov
fwait
pop
lea
ret
bound
jnp
fidivl
push
push
push
or
push
leave
outsb
or
and
leave
fmulp
outsb
jo
imul
idiv
jo
lods
mov
xchg
sbb
mov
jl
imul
push
cmp
mov
mov
or
dec
icebp
and
add
outsl
aaa
mov
or
sbb
mov
scas
push
mov
add
insl
and
test
pop
ja
ret
cmpb
xorl
mov
aas
jle
xor
cmpsb
xor
xor
sbb
xchg
icebp
inc
jb
pop
and
sbbb
out
adc
in
inc
dec
shlb
lods
int
dec
insl
pop
pop
dec
lret
mov
xchg
lahf
outsb
jnp
insl
cli
sbb
inc
loopne
shll
push
jecxz
dec
cwtl
cmp
mov
mov
push
loope
fwait
xchg
aad
jne
cmp
out
sarl
subb
cmp
lahf
imul
repnz
jl
daa
lods
int3
xchg
sbb
jge
popf
jno
add
in
outsl
sbb
ficoms
in
xchg
xchg
jb
mov
dec
shrb
jo
xor
and
das
xchg
inc
adc
push
insl
out
pop
pop
mov
add
lods
xchg
xchg
sub
mov
pop
or
and
dec
dec
cmpsl
addr16
mov
sub
push
xlat
in
dec
push
jae
sub
mov
aad
sbb
add
xchg
sbb
mov
xor
jnp
shlb
jmp
outsb
lods
fcomip
xchg
add
ss
inc
cwtl
inc
loope
subl
pushf
shrd
push
jae
lock
mov
xor
or
je
icebp
xchg
sub
jecxz
sbb
cmc
or
subl
lahf
fidivl
out
arpl
movsl
imul
test
and
movsb
fiaddl
mov
adc
mov
xor
dec
sti
mov
jne
mov
imul
shlb
test
shll
mov
cs
stos
and
pop
sti
mov
enter
inc
lret
out
jmp
mov
mov
in
pop
xor
hlt
mov
movsb
fistl
jo
lods
dec
out
cltd
das
xchg
mov
stos
stos
rorl
sbb
outsl
adc
iret
xor
test
mov
test
shlb
das
mov
fdivr
jb
test
adc
or
jecxz
xchg
sbb
sub
cltd
rcll
mov
push
mov
or
lock
inc
and
xchg
int3
rclb
sbb
mov
mov
mov
adc
andb
jns
test
push
out
xchg
fists
pushf
std
mov
test
pop
ret
mov
mov
xchg
sbb
jns
pop
push
cli
popf
mov
sbb
iret
mov
pop
lahf
sbb
das
data16
lahf
dec
mov
sbb
pop
addr16
push
cld
aas
xor
xchg
mov
rol
sub
pop
roll
lret
jp
and
imul
pop
jns
and
out
ret
fistps
test
xchg
ja
ljmp
in
out
es
insl
cwtl
mov
mov
cmpl
je
xchg
outsb
repnz
jb
xchg
fsubrl
in
lds
jne
lret
pop
or
outsb
daa
stos
stos
loopne
popf
sub
fiadds
xchg
dec
fprem
in
pop
mov
jecxz
insl
insl
adc
outsl
xor
stc
pusha
rcl
cmpsl
and
pop
inc
lea
in
dec
fstpt
jb
popa
sbb
fldenv
push
mov
jbe
fwait
inc
mov
cltd
mov
xchg
sti
scas
push
push
xlat
roll
and
cmp
subb
sbb
cmp
mov
test
out
xor
ss
adc
xchg
fs
and
adc
insl
inc
mov
cmpsl
mov
mov
ja
pusha
incb
mov
adc
fidivl
lods
inc
in
pop
lock
xor
sbb
or
and
rcr
stos
sub
insb
mov
xchg
mov
int3
mov
test
imul
lock
mov
ss
mov
pop
scas
add
inc
xor
ret
imul
scas
dec
fildl
arpl
pop
adc
icebp
mov
fmull
xchg
pusha
sub
mov
push
mov
mov
aas
xlat
push
xor
movsb
imul
dec
dec
gs
cld
enter
sub
push
sub
cmpsb
pop
sbb
push
divl
cltd
mov
xor
fidivrs
les
test
push
rcrl
test
std
mov
aas
jg
xchg
shlb
add
push
ljmp
cmpsl
test
jb
lds
sbb
lods
es
pusha
adc
mov
mov
xchg
xchg
aad
push
mov
or
push
pusha
mov
mov
loopne
push
xchg
test
and
adc
and
js
inc
call
mov
xchg
cld
xchg
in
insb
popf
pop
loope
pop
pop
fs
and
in
jge
testb
jns
dec
mov
mov
out
mov
fidivrl
cwtl
sbb
and
scas
push
int3
push
xchg
pop
lds
xor
jbe
sub
dec
out
icebp
pop
stos
push
jge
pop
xchg
movsl
xor
fs
xor
loope
mov
es
sbb
mov
enter
lret
push
jno
insb
leave
andb
xchg
dec
loop
cmp
test
xchg
sbb
shll
cld
repnz
jo
imulb
mov
pop
xchg
jb
mov
lret
jge
mov
sub
loopne
adc
inc
jp
roll
in
or
scas
loopne
xor
pop
arpl
mov
xchg
dec
bound
or
push
xchg
pop
or
loope
cli
ss
adc
mov
jp
push
jmp
rcrl
lods
shl
push
xor
mov
cs
dec
in
jns
pop
jne
int
mov
mov
or
js
mov
out
xor
pop
adc
dec
loopne,pn
inc
lret
scas
jnp
out
repnz
popa
shll
subb
clc
cmp
add
push
or
cmpsl
cmpb
mov
push
xor
mov
push
int
adc
jo
ror
mov
ljmp
inc
sbb
bound
popa
sbb
push
add
stos
fs
fsubrp
repnz
loope
jmp
or
lock
shrl
push
cmp
arpl
pusha
imulb
loope
sbb
and
jmp
shrl
out
jg
ja
movsb
mov
dec
dec
mov
mov
dec
scas
xchg
insl
lcall
sub
push
jne
ja
adc
push
mov
aaa
mov
sub
or
lahf
popf
outsb
ss
xor
push
in
mov
mov
cmpsb
jns
xor
jns
xorl
inc
nop
pop
ja
call
or
sbb
add
and
pop
mov
stos
xlat
out
or
lods
mov
and
pop
pop
call
shl
pop
out
shlb
jo
shll
sub
adc
int3
add
jbe
push
cmp
or
fisubs
xchg
mov
add
sahf
out
gs
mov
cmp
int3
pushf
push
imul
sub
test
or
xchg
test
daa
movsb
mov
sbb
mov
pop
sbb
lahf
repz
add
sbb
jnp
pop
dec
push
cli
pop
in
scas
dec
imul
mov
outsb
adcb
sub
rcrl
decl
imul
lods
mov
sahf
sbb
outsl
popa
mov
push
addw
jbe
les
xor
dec
mov
pop
sti
rcrb
out
clc
jae
xchg
cmp
sub
nop
pop
cld
cmc
or
or
push
insl
mov
or
push
inc
shll
jp
out
adc
loop
in
mov
pop
sbb
mov
cmp
shll
or
xor
imul
xchg
jns
pop
pop
lods
call
dec
out
push
cmpsl
dec
sbb
fcomi
cmc
xchg
mov
loopne
push
jno
jge
sbb
add
and
cmp
aad
addl
ja
jmp
imul
xor
adc
mov
notb
jnp
icebp
sahf
fwait
jl
mov
movsl
mov
shr
in
mov
cmc
pop
stc
pop
pop
lret
lret
std
loopne
sti
xchg
lock
xor
rol
mov
pop
lods
shrb
lea
imul
jo
xchg
movsl
fstps
jo
icebp
sbb
push
lcall
xchg
cli
push
orl
pop
ds
cli
mov
jl
or
xchg
ja
in
sub
outsb
rorl
call
pusha
adc
mov
add
jl
mov
jmp
test
cmp
popf
movsl
jno
rcrl
test
loopne
cs
outsb
xor
popa
mov
fisubrl
add
pushf
call
stc
inc
jge
sar
fsubrs
mov
in
jp
out
icebp
xchg
adc
and
arpl
inc
scas
imul
in
jno
mov
xor
xor
ret
xchg
je
adc
cmp
fs
sub
es
mov
xchg
and
dec
lcall
lret
mov
mov
sbb
or
ss
inc
lahf
mov
dec
jecxz
lods
jmp
sub
sbb
int3
out
ljmp
jno
push
popa
mov
push
stos
dec
lock
xchg
sub
jle
dec
xchg
xor
and
pop
cmp
orb
dec
sbb
xchg
out
and
lods
lods
push
in
or
push
mov
pop
scas
ss
push
ret
das
and
dec
stos
dec
push
imul
mov
imul
out
and
inc
mov
jne
or
cmpl
dec
push
xchg
icebp
cmpsb
test
jo
sbb
les
das
xchg
cmpsb
sub
pop
and
push
in
mov
pop
xor
push
imul
push
clc
jle
jnp
mov
mov
outsb
mov
ja
lahf
and
mov
add
sbb
adc
pop
out
mov
cmp
insl
int
loope
jge
icebp
push
lret
and
adc
push
dec
dec
sbb
jb
and
fdiv
ss
xorl
pop
jp
clc
int3
cmpsl
push
lret
loope
sbb
fimuls
ja
jmp
pop
mov
xchg
and
push
and
jb
inc
dec
adc
jne
jecxz
adc
test
shrl
cmp
pusha
sbb
xorl
mov
sub
mov
and
cmpsb
lds
adc
aaa
sbb
mov
mov
aam
inc
fldenv
rcll
icebp
push
jl
sub
xchg
jge
outsb
xor
jbe
loopne
pop
jne
add
sbb
jmp
mov
jl
fs
repnz
rcr
mov
dec
push
sub
mov
jne
add
xchg
and
rcrl
pop
lea
mov
cwtl
adc
sbb
cmpsl
push
fadds
jns
punpckldq
and
mov
sti
in
out
jo
shll
lahf
repnz
cmc
add
fistpl
xor
pop
xor
lock
xlat
jbe
adc
mov
scas
cmp
or
loope
outsb
or
scas
xchg
sub
mov
addb
insb
xchg
jns
rcrl
xor
lock
mov
mov
mov
jp
push
cmp
adc
mov
incl
xlat
data16
sbb
inc
jbe
and
cld
jo
movsl
sbb
movsb
inc
xchg
je
pop
jmp
pop
and
or
xor
das
outsb
xchg
cmp
xchg
roll
or
mov
pop
lds
stos
mov
jg
stos
sub
mov
mov
aaa
loope
inc
fbld
movsl
out
mov
stos
loopne
jl
adc
jle
xchg
test
cmp
fdivs
and
andl
cmp
loop
lods
stc
push
pop
and
xchg
lock
mov
cmpl
addr16
faddl
or
sbb
ljmp
lock
test
xchg
or
lret
cld
jae
bound
movsl
pusha
jo
cld
jne
push
sub
ljmp
stos
xor
mov
outsl
sahf
pop
pop
inc
movsl
lahf
out
pop
fnstcw
loope
insl
jno
mov
xchg
xor
xchg
fwait
adc
imul
adc
popa
mov
roll
mov
or
les
pusha
lret
inc
mov
scas
cmpb
jbe
aaa
cmp
scas
xchg
lods
or
add
scas
movsb
int3
dec
fwait
push
jo
mov
std
xorb
mov
popf
mov
cmp
xchg
cmpsb
pop
push
xchg
xlat
mov
iret
mov
pop
in
xchg
lods
pop
dec
jge
ret
in
cli
sub
outsb
dec
pop
imul
inc
mov
test
push
loop
cs
mov
or
repnz
mulb
cltd
mov
mov
sahf
cmpsb
je
dec
clc
int3
out
mov
mov
and
push
jnp
mov
mov
or
xor
mov
aas
inc
sbb
mov
mov
adc
xor
pop
sub
mov
popf
lds
mov
mov
and
mov
lods
lock
sub
and
fisubrl
inc
mov
cmpsb
dec
outsl
sub
ret
in
pop
mov
cld
sbb
xchg
mov
lahf
xchg
inc
notb
popf
ret
or
and
lods
insl
pop
adc
push
add
add
mov
leave
leave
shlb
push
rcrb
add
popf
fistpl
loop
fildl
pusha
dec
add
push
movsb
inc
sahf
sahf
movl
pop
jle
lcall
mov
test
aaa
push
inc
xchg
daa
mov
pop
lcall
ja
das
xlat
fdivrl
test
cltd
push
dec
cmp
movsb
dec
xchg
ss
add
repnz
push
daa
cmp
inc
movb
pop
sub
inc
xor
xchg
xlat
test
xor
push
sarl
jp
pop
test
shlb
pop
xchg
xor
cmp
mov
adc
push
aaa
mov
fidivl
xchg
xchg
jbe
and
lret
ss
popf
int
inc
xchg
jge
sub
out
fsub
fstpl
lcall
sbb
sbb
and
push
pop
test
jl
add
stc
or
or
sbb
bound
dec
in
jnp
pop
and
je
mov
inc
sbb
mov
pusha
xor
pop
sub
and
push
out
mov
push
add
dec
fdivl
dec
ret
daa
out
fdivr
dec
dec
xor
push
mov
or
sub
push
mov
imul
jmp
xchg
es
call
push
fidivl
mov
mov
push
jo
or
sub
sbb
and
fsubr
mov
mov
and
pop
mov
enter
jae
popf
outsl
sbb
jb
sarb
loopne
in
lods
xlat
movsb
insb
mov
push
adc
std
xor
and
mov
or
fwait
out
ss
and
dec
iret
addr16
repz
pop
lret
mov
or
lods
outsl
mov
movsb
cwtl
cmp
push
mov
mov
movsl
pop
mov
ret
push
push
loopne,pn
in
cmpsl
sbb
das
xchg
in
aaa
pop
movsb
jo
movsb
mov
push
shlb
pop
mov
sub
js
xor
jl
xchg
aam
mov
and
fs
fs
push
aam
lock
bound
nop
and
mov
xchg
cmpsl
test
int
roll
mov
push
and
mov
jno
sub
adc
sbb
sahf
mov
lret
fidivl
sub
pop
sub
testl
xor
test
loopne
mov
out
movsl
push
sub
sar
jb
xor
fstl
icebp
mov
movsl
fs
xchg
call
out
xor
je
insl
push
jno
repnz
cmp
movsl
mov
movsl
jp
dec
or
jecxz
xchg
movsb
data16
nop
lcall
xchg
adc
sbb
cwtl
inc
popa
mov
test
xchg
jp
sbb
out
int
adc
enter
sti
jle
pop
mov
fcmovnb
loopne
mov
mov
push
cwtl
dec
lahf
or
sub
addr16
dec
aam
mov
cmp
movsb
shlb
mov
insl
push
faddl
lcall
inc
push
cmpsb
imul
and
jns
xchg
loop
dec
or
test
in
shlb
xchg
cld
dec
movsb
mov
mov
fistpll
stc
adc
call
sbb
fs
cmp
insl
aaa
cli
mov
loop
loopne
jbe
dec
gs
xlat
test
cmc
xchg
push
bnd
testb
xor
jno
mov
insl
sbb
cmp
push
add
xlat
cli
push
pop
pushf
jmp
testl
jno
inc
aad
das
cwtl
cli
fstl
shlb
stos
push
inc
push
js
jb
stos
pushf
mov
iret
incb
shll
imul
mov
mov
imul
lea
inc
lret
mov
or
stc
roll
mov
push
xchg
xlat
push
mov
inc
jmp
es
mov
xchg
into
iret
imul
or
dec
test
adc
gs
notb
movsl
jg
push
sbb
cmpsl
xchg
in
and
or
negl
jno
jnp
pop
ja
fldt
ja
xlat
mov
add
jns
jmp
loopne
xchg
cmp
adc
or
insl
or
gs
lods
push
jae
fcmovnu
push
inc
sbb
adc
mov
xor
mov
sub
fwait
sahf
inc
sub
scas
int
push
sub
and
aaa
and
cmp
or
mov
and
lahf
mov
jo
pop
popf
or
mov
aam
loopne
fldl
out
dec
cmp
idiv
insb
lods
cmpsb
fstl
push
sub
inc
cld
add
or
pusha
clc
xlat
js
mov
xor
cmpsl
sbb
jge
fisttpll
add
cmp
fcoms
mov
inc
cmp
ss
sbb
dec
into
cmp
mov
lret
xchg
jns
and
xor
ds
fs
push
mov
test
shlb
in
outsb
pop
mov
mov
icebp
js
call
inc
sbb
sti
mov
stos
push
dec
sub
pop
sbb
test
cmpl
rorl
insl
loopne
xor
add
mov
push
jne
dec
into
fwait
popf
cli
sub
icebp
pop
mov
jl
cmc
lahf
xor
xor
mov
gs
xor
movsl
add
or
sbb
jp
loopne
mov
test
cld
std
jmp
cltd
test
and
addb
pop
dec
jp
out
mov
mov
push
pop
mov
xchg
imul
mov
ret
rcrl
inc
mov
inc
push
and
push
and
outsb
ja
aaa
cmp
adc
sahf
jg
out
fidivrs
jae
iret
sbb
scas
cmp
rcrl
and
aaa
aaa
jle
mov
xor
pop
nop
aaa
mov
shl
sub
cmp
movsl
int3
out
addr16
dec
addr16
and
fwait
ret
mov
insl
test
in
ret
les
dec
add
rol
gs
xchg
stos
cmpsb
or
scas
lods
cld
aad
lods
xor
pop
mov
movsl
inc
stos
dec
pop
popa
test
sbb
insb
loopne
jb
dec
mov
daa
js
pop
mov
andl
xor
and
or
std
dec
dec
jo
dec
sbb
mov
pop
lods
pop
dec
mov
lret
sar
mov
pop
push
and
pop
sub
shrb
inc
mov
mov
xchg
sbb
jp
pop
fsubp
mov
out
test
inc
push
popa
cmpsb
cmpsb
sub
stos
or
sbb
or
sbb
dec
sbb
or
sbb
pushf
dec
fdivp
mov
rcll
lret
repnz
push
in
cld
jne
loope
inc
bnd
rcr
inc
xor
xchg
in
cmp
cmpsb
arpl
in
ret
mov
insl
or
pop
xor
ss
sbb
cmp
add
inc
xchg
sub
or
pop
push
test
out
cmp
adc
xchg
paddusb
or
cmp
lret
cs
aaa
inc
sbb
imul
call
mov
and
dec
mov
xor
pop
mov
push
pop
dec
and
pop
dec
xchg
xchg
je
push
mov
icebp
adc
jne
and
pop
mov
cmp
stos
xchg
outsb
stos
sbb
xchg
push
adc
cmpsb
mov
lret
cmp
les
mov
add
pushf
leave
rolb
mov
pushf
addr16
add
in
mov
fsubs
lods
shll
sbb
aaa
push
jl
dec
subl
push
mov
inc
inc
popa
push
sbb
cmp
push
ficoml
lock
rcrb
rcrb
orb
push
test
cmp
pop
mov
push
mov
movsl
aam
shl
out
mov
loope
ja
or
loop
push
mov
lea
sbb
fistpl
mov
sbb
imul
pushf
or
inc
lods
dec
mov
push
lret
stos
out
and
jp
ficoms
fisubrl
stos
pop
xor
xor
stc
mov
sbbb
incb
mov
mov
mov
lahf
shlb
cld
movsl
imul
les
dec
xchg
imul
push
in
scas
sbb
or
sub
in
call
mov
jo
push
insl
or
mov
jno
outsl
outsb
call
and
cmp
cld
repnz
subl
jns
xlat
mov
or
inc
imul
sub
mov
mov
sbb
icebp
mov
lcall
dec
pop
inc
xchg
lods
out
popf
add
adc
bound
jmp
arpl
movsb
leave
test
movsb
scas
js
out
leave
sub
es
push
xor
movsb
insl
gs
subb
inc
sbb
dec
and
das
mov
mov
test
push
sub
add
lret
fidivl
push
xor
lret
lcall
not
mov
pop
mov
test
loope
orl
imul
cmpsl
xchg
and
sub
jmp
pusha
and
movsl
pushf
inc
dec
sbb
mov
mov
call
movsb
mov
jo
test
cmpsb
imul
cmp
cmp
or
pusha
add
dec
pop
pop
shll
jecxz
loopne
icebp
enter
sahf
popa
hlt
cld
inc
cs
loope
insb
and
imul
fs
pop
xor
lcall
stos
loope
or
mov
add
mov
inc
and
cmp
inc
mov
mov
adc
sub
fcoms
add
push
ret
and
sub
or
or
mov
loope
ss
cmp
aaa
dec
mov
into
jo
dec
or
mov
mov
cmpb
jb
lahf
and
sub
sub
mov
jae
jno
mov
mov
push
add
jo
mov
mov
test
in
sub
mov
xchg
jno
push
mov
rcrb
loope
dec
popa
sub
imul
mov
jmp
mov
pop
int
mov
mov
or
xchg
add
mov
aad
jecxz
and
sub
imul
stos
lods
add
arpl
cmp
call
and
inc
mov
pop
sub
or
xchg
or
mov
xchg
sbb
in
ljmp
xchg
and
rcr
lock
and
sbb
xchg
outsb
mov
loope
popl
fdivrl
mov
jge
scas
lea
pop
adc
or
arpl
fisubrs
mov
hlt
nop
subl
mov
xor
icebp
pop
mov
push
lcall
sbb
cltd
adc
xor
lea
push
rcl
or
dec
popf
push
jmp
mov
popf
lods
dec
aam
popf
cmp
int3
xchg
in
or
rcr
imul
sbb
sbb
adc
dec
dec
cmpsl
xlat
mov
das
xor
lret
xor
or
pop
shll
fnstsw
or
jne
mov
mov
push
mov
xchg
lret
inc
pushf
imul
mov
mov
lret
push
loope
sbbl
int3
lds
lock
adc
or
or
in
mov
outsl
loopne
sbb
sbb
lods
rcll
or
insl
xor
push
repz
sub
pop
inc
shlb
pop
loope
shll
fildl
leave
cwtl
adc
imul
lock
xchg
in
inc
push
loope
xchg
outsl
repz
test
lods
cld
sbb
sub
dec
inc
in
lods
sub
mov
pop
filds
icebp
dec
mov
dec
hlt
ficompl
xor
sbbl
in
imul
data16
cmp
sub
or
mov
jo
in
mov
dec
cli
xchg
std
lods
sbb
and
cmpsb
ljmp
sbb
pop
popa
out
in
scas
mov
out
and
pop
adc
mov
fisttpl
dec
mov
es
imull
dec
mov
sar
rorl
xor
daa
out
pop
test
outsl
stos
movsb
cmc
repz
es
mul
jb
fsubrs
add
and
or
jae
mov
jl
pop
lock
pop
jp
loopne
xchg
hlt
push
and
push
loop
and
test
and
ret
inc
xchg
bound
lock
cmpsb
sbb
dec
es
sbb
sbb
and
jg
dec
jno
cmpb
and
andb
cmpsb
pop
scas
mov
sti
std
ljmp
cli
mov
xor
sub
add
mov
adc
pop
mov
outsl
jb
stc
jno
inc
sbb
and
es
gs
dec
mov
and
or
scas
test
shrb
outsb
inc
sub
mov
xor
xchg
movsb
shll
or
loopne
pop
mov
sbb
jle
mov
punpcklwd
push
sarb
inc
xchg
fildl
clc
mov
es
pop
cmp
xorl
dec
arpl
and
adc
jno
xor
jo
icebp
jge
inc
inc
sbb
mov
cmp
add
pop
ljmp
bound
je
pop
in
and
xor
adc
loope
sub
mov
scas
js
test
add
rclb
rorb
mov
cmp
out
jmp
sub
mov
in
gs
add
or
fxam
lret
fdivs
add
int3
lock
je,pt
shl
out
dec
shlb
pop
mov
lea
jmp
xchg
aam
repz
mov
xor
add
cmc
push
mov
test
mov
mov
xor
pusha
mov
mov
shlb
loopne
xor
ss
dec
hlt
mov
aas
mov
jge
mov
pop
pop
lds
jns
dec
and
mov
mov
inc
cmpsb
int3
push
adcl
xlat
ja
int3
fs
cmp
pand
push
lcall
out
sub
daa
ljmp
fs
popf
push
jbe
sbb
outsb
mov
in
jg
and
rcrb
testl
aas
aam
pushf
in
cld
sub
pmulhw
add
mov
mov
dec
test
ret
and
mov
cmpl
cmp
cli
sbb
adc
push
loop
test
or
push
mov
cmp
lods
int3
stos
jge
popa
cmp
ret
cmp
call
dec
cli
push
cmc
mov
lahf
repnz
dec
jno
pop
sbb
aas
pop
lret
xchg
sbb
or
xchg
lret
in
pop
leave
aas
orb
xor
popf
and
adc
out
pushf
int3
cmp
in
test
in
cmpsl
iret
es
pop
dec
pop
sbb
stc
pavgb
dec
imul
mov
or
pusha
cmp
lret
push
pop
fdivrp
sbb
mov
mov
sbb
int3
xchg
add
xchg
outsb
imulb
pop
leave
inc
mov
push
and
outsl
pushf
sub
orl
jo
sbb
sbb
pop
mov
add
cmc
dec
aaa
ud1
add
cltd
sub
int
hlt
movsb
mov
int
lock
sbb
cmp
ficoml
xor
or
insl
repnz
subb
andl
ljmp
cmp
add
insl
mov
mov
sbb
lock
es
mov
shr
push
inc
xorb
sarb
push
jg
movsl
xorl
mov
jne
mov
out
push
inc
test
hlt
sub
shl
roll
fprem
xchg
add
outsl
cmp
mov
pop
mov
and
movsb
mov
clc
stc
mov
pop
mov
cmpsl
adc
fnsave
shr
adc
sbb
sub
cmp
pusha
cmp
add
dec
fstpl
dec
and
pop
out
dec
inc
call
mov
popl
mov
xchg
fcmovne
mov
and
xor
lock
movsl
xchg
sub
imulb
test
ljmp
jo
mov
lock
outsb
mov
jg
leave
xchg
push
jmp
stos
in
pop
jl
or
lcall
jne
das
dec
fwait
or
int3
or
orl
mov
jbe
sbb
js
jo
mov
pop
clc
repz
pop
jbe
repz
inc
inc
inc
scas
outsl
mov
outsb
rcrl
cmp
add
fstpl
push
int
shll
xor
ret
mov
iret
xor
or
cmp
sbb
sub
jmp
cmovne
inc
stos
or
mov
add
jl
es
inc
push
dec
lahf
add
cmp
mov
and
ret
arpl
in
shll
mov
lods
adc
dec
mov
and
sub
les
mov
inc
aaa
ja
scas
dec
sbb
jmp
dec
inc
inc
jo
cmp
testl
popf
add
pop
inc
das
lret
fs
popf
jmp
cs
pushf
and
or
mov
mov
lcall
lret
out
pop
mov
dec
aaa
mov
pop
call
bnd
mov
dec
mov
inc
adc
scas
push
xchg
add
jb
add
cltd
fsubs
pop
jno
lock
inc
push
push
lret
vaddsubpd
pop
cwtl
cmp
sbb
leave
pop
dec
or
mov
jbe
stos
xchg
inc
sub
adc
aaa
sbb
lret
lods
pop
jo
sbb
sbb
pop
jno
cmp
xor
sbb
dec
jle
xor
jno
and
in
fs
cli
cmpsb
sbb
cli
dec
das
push
cltd
sarl
loope
jb
sbb
int
add
fsubrl
mov
push
sub
and
orb
loopne
dec
xchg
lods
mov
jne
orb
shlb
mov
je
fs
mov
addr16
push
mov
xchg
jg
rcrl
leave
mov
shll
adc
mov
dec
dec
outsb
je
inc
fs
movsb
outsl
mov
and
iret
mov
add
dec
jle
inc
fcomi
sub
cld
push
xor
je,pt
sbb
push
loopne
shrl
jbe
es
cld
inc
pop
sub
mov
ja
pop
fnsave
out
sub
scas
imul
push
add
inc
jnp
imulb
mov
cs
jle
rclb
ljmp
or
jb
dec
ljmp
mov
xchg
test
outsb
push
and
sub
cmp
mov
adcl
daa
in
std
xchg
mov
adc
mov
nop
jmp
xor
pushf
stos
pop
adc
test
test
mov
mov
inc
inc
lcall
lcall
test
out
pop
inc
mov
mov
add
push
je
imul
push
mov
push
pushf
ljmp
call
icebp
mov
and
repz
jg
int3
je
imulb
jp
add
lods
or
fnsave
pop
or
pop
out
xlat
imul
push
sbb
cli
mov
adc
mov
adc
push
fisttpll
test
aas
es
push
out
dec
cmp
and
and
loope
push
mov
jno
or
push
push
imul
lcall
hlt
popf
daa
std
xchg
dec
lret
adcl
lret
push
mov
mov
cwtl
mov
ja
test
push
mov
cmp
insl
popfw
mov
in
xchg
adc
lret
inc
or
sbb
jb
rcll
jns
ror
sbb
inc
or
add
out
cltd
xor
fildl
push
cmp
push
mov
lcallw
daa
sub
fistl
xor
adcb
fcmovnb
das
mov
fcmovb
cmpsb
and
add
cwtl
sahf
cld
aas
add
mov
inc
cmpb
sbb
sbb
faddl
shl
or
mov
pop
and
nop
lock
jle
insl
clc
int
outsl
adc
arpl
aad
jno
inc
and
mov
mov
in
call
sub
cwtl
xchg
scas
test
push
outsl
cs
mov
jnp
cmp
call
mov
and
jmp
mov
mov
sbb
imul
sti
loopne
pop
das
pop
cmp
xor
dec
aaa
clc
unpcklps
sub
and
lods
shlb
hlt
mov
fwait
inc
scas
xor
mov
push
dec
jge
or
nop
mov
jno
add
shl
and
ss
pop
loope
cmp
popf
cmp
ret
push
pop
mov
shr
and
push
pushf
mov
in
mov
mov
stos
dec
cmp
mov
mov
sbb
ss
pop
outsl
sbb
movsl
loope
pop
fbstp
and
sub
sub
arpl
or
popf
mov
add
flds
test
rcrb
mov
aaa
jbe
dec
dec
xor
push
sub
and
and
xchg
iret
sub
push
mov
mov
lods
mov
pop
mov
mov
outsb
or
in
and
mov
pusha
fsts
mov
mov
mov
rcll
movsl
mov
rol
sbb
sub
inc
adc
xor
mov
push
pusha
xchg
hlt
pop
lock
pop
push
nop
add
lds
mov
mov
mov
pop
rorb
out
pop
sti
cli
sub
add
stos
imul
bound
pop
inc
out
ljmp
xchg
and
sarb
dec
cld
fs
or
push
in
sbb
dec
pop
test
orb
jmp
mov
out
in
pop
loopne
fstl
cmp
fdivrs
fcoms
push
iret
pop
movsb
nop
aam
scas
sbb
pop
pushf
mov
loope
aas
fdivrs
dec
addr16
scas
sarb
jbe
fs
lret
mov
mov
push
fwait
mov
movsl
leave
xchg
fstpt
add
cmpsb
dec
and
or
or
incb
push
mov
popf
sbb
jo
lods
pop
test
and
xor
and
lahf
movsb
jnp
adc
mov
ja
push
loopne
lds
inc
mov
and
lods
iret
inc
movsb
mov
push
dec
aas
clc
pop
xchg
cmp
lcall
sub
push
int3
dec
cld
rcrb
mov
xchg
dec
loope
push
rolb
outsb
cmp
jne
sub
push
inc
js
andl
push
mov
lea
push
lret
cld
daa
icebp
adc
aas
and
stos
mov
push
bound
dec
es
and
data16
ret
pop
in
xlat
push
xchg
sbb
enter
jle
js
inc
lods
mov
nop
in
push
je
pop
repz
es
popf
movsl
sbb
fdivl
add
hlt
mov
scas
pop
push
fwait
out
cmp
movb
adc
andb
pop
push
sbb
dec
data16
fwait
cmp
add
addr16
and
xor
inc
inc
clc
aas
sub
sub
imul
fcomps
out
test
inc
int
mov
xchg
and
and
jns
dec
and
pop
scas
testb
xlat
loopne
mov
rol
lods
pop
bound
xor
jbe
push
imul
int
jne
add
or
aam
ret
scas
dec
icebp
or
adc
jp
icebp
inc
push
adc
outsb
loopne
mov
in
fisubs
outsl
dec
test
test
test
add
xchg
and
dec
push
xlat
dec
scas
andb
in
sub
leave
add
icebp
dec
movsb
or
fbld
push
mov
fidivl
xor
adc
int3
test
int
mov
mov
aas
jmp
inc
stos
add
rcl
lods
and
adc
ud1
pop
cs
jecxz
adc
call
fnsave
repnz
rol
ret
jb
mov
push
mov
leave
xchg
dec
mov
mov
xor
dec
push
sub
in
inc
sub
dec
xchg
out
mov
jno
shll
aad
repnz
leave
cmpsb
xchg
mov
pushf
cs
lahf
dec
and
add
test
dec
xchg
xor
dec
jo
mov
sti
mov
in
mov
rolb
out
or
mov
loop
and
std
dec
test
push
lea
jns
loopne
lock
jb
rolb
adc
push
call
mov
add
push
outsl
ja
movsl
add
xchg
insb
or
lods
popf
movsl
sbbl
daa
xchg
mov
xchg
jl
pop
sbb
mov
add
ja
mov
push
push
mov
dec
cmp
mov
jle
inc
test
inc
fcomps
rcrb
jb
jbe
xchg
data16
rcrb
out
repnz
repz
push
sub
xchg
aaa
nop
xchg
lea
xor
dec
repnz
xlat
fidivs
inc
sbb
adc
dec
mov
mov
mov
xchg
lcall
out
test
mov
es
cmpsb
push
insl
push
mov
mov
aas
lahf
dec
dec
out
test
daa
push
pop
mov
xor
gs
xchg
outsb
cld
cs
adc
fildll
jae
push
nop
jnp
push
push
xor
xchg
ja
test
jbe
sbb
xor
xor
outsb
into
push
cmp
gs
pusha
dec
scas
mov
cmp
mov
lods
pop
and
es
cwtl
jo
jg
stos
or
mov
sbb
or
in
mov
lods
jb
pushf
outsl
mov
ficompl
inc
lret
cmc
fdivl
push
and
jb
pop
xlat
roll
jb
jne
hlt
out
jb
jo
and
or
dec
fsubrs
xchg
mov
pop
stos
pop
push
lds
movsl
ja
loopne
repz
or
sbb
test
mov
cld
into
lods
mov
popa
loope
in
pop
out
inc
push
xlat
adc
es
mov
cs
out
cmp
imul
cmp
push
xchg
imul
fcompl
sbb
push
pop
xchg
add
scas
loope
int
pop
fs
test
int3
xlat
push
into
push
mov
repnz
xchg
fistpll
lahf
fsts
push
add
popa
in
shrl
sbb
cmp
into
or
sub
xchg
test
lret
lock
xor
xchg
cld
outsb
popf
outsb
sarb
or
lds
mov
repnz
mov
popf
push
inc
cmc
xor
pop
lods
loop
sahf
pop
adc
lahf
mov
and
xor
mov
and
jnp
call
cmpsb
imul
xor
pop
xchg
mov
xchg
push
lahf
movsb
jo
mov
test
mov
pop
icebp
xor
scas
popa
pop
data16
inc
xchg
and
mov
ss
mov
ret
nop
dec
subl
jno
pop
sbbl
sbb
ret
xchg
ficomps
fcomps
lods
jae
insb
in
mov
cld
jb
movmskps
and
pop
dec
ficompl
xchg
inc
xlat
xor
dec
push
lret
xlat
test
rcrl
sbb
push
xor
cmp
fucomip
repz
aaa
dec
addr16
repz
stos
pop
xchg
ja
aad
cmp
lods
mov
and
and
mov
and
fldenv
lcall
xorl
dec
fsubl
fwait
in
cs
inc
push
sbb
pop
bound
movsb
inc
sti
insl
orl
hlt
fisubs
lock
ffreep
arpl
movsl
sbb
push
lods
shrl
jb
cltd
pop
add
iret
add
cmp
mov
jns
mov
jbe
ja
aad
cltd
pop
and
shll
push
lods
lock
mov
int3
mov
push
lret
shl
lock
test
mov
or
push
push
sub
int
mov
and
add
sub
mov
mov
movsl
jns
aaa
std
ret
jno
or
mov
jb
ljmp
mov
cmp
aaa
frstor
jmp
inc
adc
enter
push
or
fnstcw
stos
xlat
mov
stos
repnz
addl
outsl
mov
inc
sub
push
push
xchg
pop
imul
sub
mov
sbb
inc
fwait
lods
out
icebp
cmpl
mov
cltd
lahf
repnz
clc
cmp
or
mov
xchg
test
movsl
cltd
int
fcomi
jbe
fnsave
mov
insl
or
push
mov
dec
sub
cmp
xchg
sarl
adc
jg
xchg
rcrb
in
inc
fbld
inc
movsb
pushl
jecxz
out
outsl
mov
push
mov
sti
lea
loop
cmp
mov
and
je
inc
and
sbb
add
xchg
push
std
std
stos
mov
add
fsubl
inc
and
inc
or
inc
loop
fcomps
ljmp
mull
les
insl
mov
cmp
jmp
lock
xlat
pop
mov
mov
stos
out
pop
cmpsb
and
push
stos
cmpsb
lahf
mov
push
mov
pop
loopne
lahf
fidivl
lock
xchg
pop
ja
call
sbb
or
cltd
in
dec
push
test
arpl
xchg
sbb
fs
or
bound
in
outsb
xchg
push
sbb
jno
lods
dec
jmp
in
xor
sbb
jno
mov
sub
sbb
xchg
imul
test
mov
cli
das
repnz
sub
cmc
insb
imul
push
pushf
insl
scas
fldenv
insl
mov
or
scas
fwait
andl
add
xor
mov
lods
xor
jbe
ljmp
mov
cltd
jne
or
or
mov
out
loope
dec
dec
jnp
pop
and
push
sub
mov
add
mov
fisubs
cmc
mov
fidivrl
loopne
repnz
push
push
ss
test
ja
out
fbld
push
sbb
pop
and
mov
test
stos
lods
adc
test
fsubrl
fidivl
or
add
xchg
lods
mov
jp
xchg
hlt
push
or
jmp
jl
hlt
aaa
xlat
sub
or
and
sbb
or
mov
or
mov
clc
stos
mov
in
jge
cmc
fisubrs
mov
fidivrs
push
nop
rorl
leave
inc
dec
fstp
cmpl
shll
pop
fbstp
pop
lods
adc
pusha
mov
shrl
pop
cmp
mov
sbb
ret
loop
pushf
pop
loope
shlb
hlt
dec
adcl
jno
cmp
xchg
ss
loop
iret
cmpl
adc
inc
adc
addr16
popf
dec
mov
fs
push
cmp
mov
lock
mov
and
mov
xor
popa
xchg
daa
fcomps
cld
je
push
bound
jno
shrl
mov
ss
mov
popf
repnz
repnz
into
bound
ret
pop
int
push
rcrl
es
pop
jmp
pop
pop
sub
xchg
inc
jmp
pop
xchg
addr16
pop
add
mov
sub
xchg
cmpsb
std
setge
cwtl
xorb
pop
test
mov
mov
push
outsb
jmp
lret
mov
sar
xor
mov
or
cmpxchg
push
mov
cmpsb
outsb
mov
pop
idiv
ret
bound
pop
pop
repnz
sbb
insl
sti
or
fs
dec
popa
push
mov
stos
stos
shll
mov
dec
aad
jae
je
push
add
and
xor
jo
ret
pop
push
test
pusha
sbb
mov
and
adc
lock
cmc
sub
push
xchg
movsl
test
add
xchg
jno
inc
cmpsb
xchg
xor
je
pop
push
dec
loopne
sbb
cmp
and
adc
leave
aas
aad
sub
jbe
ljmp
add
mov
pop
cmp
shll
xor
or
scas
lea
add
mov
outsb
aam
xor
xorl
repnz
pop
scas
mov
ds
jb
xchg
mov
fsubrs
aas
imulb
mul
mov
shrl
ret
outsb
fisubl
es
jb
out
cli
lods
mov
or
mov
idivl
jo
mov
int3
mov
jp
out
lock
frstor
and
inc
int
out
cli
and
movsl
out
out
dec
adc
mov
xor
mov
fisubs
leave
cmp
jne
mov
in
or
push
xchg
dec
imul
cmpsl
loop
jb
push
pop
faddl
ret
cli
mov
bound
popf
imul
inc
lret
fstsw
mov
pop
in
sbb
cmp
xlat
jno
fcmovu
mov
mov
or
sar
or
outsb
rorb
dec
mov
mov
and
xlat
lods
pop
dec
push
stc
clc
sbb
pop
dec
mov
scas
add
pop
mov
add
add
pop
or
cmp
lret
adcb
xlat
mov
push
mov
jo
pop
mov
inc
fistl
jo
or
popf
xchg
jnp
mov
push
mov
add
push
or
cmp
arpl
dec
mov
sub
mov
mov
cmp
mov
loopne
xorb
imul
mov
push
out
fstpl
pop
fcmove
mov
punpckhdq
sbb
add
or
addb
shrb
push
je
cmp
pop
push
lods
out
repz
sbb
cmp
out
fwait
push
and
cld
jae
and
enter
pop
xchg
andl
or
cmpsb
inc
nop
push
aad
adc
rcrl
push
aaa
inc
cmc
push
fdivs
imul
arpl
and
lahf
push
cmc
pop
xchg
mov
xor
repz
mov
jl
sub
mov
sbb
sbb
push
sahf
inc
fwait
out
cmp
in
push
test
fscale
add
outsl
jns
or
sub
cmp
imul
jo
add
outsb
and
cwtl
and
mov
cli
or
jne
jnp
fisubrl
sub
repz
jbe
std
movsl
sub
add
fmull
xor
test
fsubrs
cs
popa
inc
test
adc
cmp
cmp
xchg
dec
mov
imul
cmp
pop
stc
mov
mov
and
inc
lods
into
jp
jo
arpl
inc
arpl
adc
in
out
pop
fstps
inc
je
repz
mov
xor
in
dec
sbb
inc
insl
outsl
jge
jbe
add
cmp
ja
arpl
jecxz
pop
pop
inc
xor
imul
lret
pushf
sbb
and
movsb
dec
insl
push
jno
dec
jecxz
mov
cli
fldt
dec
les
xlat
lods
and
fbstp
fucomip
jl
mov
sar
mov
mov
es
arpl
pop
inc
or
leave
cltd
ret
aam
mov
pushf
es
xor
sub
mov
roll
xchg
push
mov
cmp
xchg
outsl
mov
mov
mov
mov
xchg
ficomps
adc
dec
pop
std
loopne,pt
adc
dec
pushf
push
lds
and
data16
mov
dec
inc
inc
lods
sahf
and
mov
lds
rcl
into
popf
movsb
pushf
ror
add
dec
sbb
popl
scas
gs
jle
movsl
sbb
mov
adc
fists
cltd
xor
add
and
pop
push
lcall
adc
mov
jb
stc
hlt
mov
bound
inc
jo
xor
push
inc
andl
jecxz
inc
lods
mov
xchg
push
mov
xchg
ljmpw
sub
mov
jnp
dec
pop
scas
bound
jo
lock
popa
fsubrp
adc
push
mov
int
dec
lret
stc
push
adc
inc
mov
mov
outsb
ret
pushf
je
scas
in
jp
mov
sbb
jo
adc
scas
or
sbb
push
add
aad
xor
sbb
mov
lcall
ret
fldz
xlat
icebp
push
push
fwait
pop
or
push
push
mov
fucom
cmp
xor
out
popa
sbb
pop
aas
jb
adc
xchg
leave
mov
fcmovnu
popa
jno
fisubs
cmc
and
sbbb
loop
pop
push
push
mov
outsl
lret
sbb
xor
push
ds
in
jmp
leave
inc
mov
cltd
pop
inc
mov
test
jle
jne
mov
adc
jno
ja
jns
inc
sbb
cmpsl
leave
clc
inc
movsl
xlat
test
mulb
inc
mov
sub
jnp
inc
cwtl
fwait
aaa
aaa
cmp
outsb
maxps
ss
sub
leave
gs
adc
adc
popf
aaa
stos
mov
orb
sahf
dec
add
mov
cld
pop
or
out
lcall
repnz
stc
loopne
icebp
pop
jmp
outsb
in
or
incb
xchg
mov
rorb
dec
std
out
pushf
loop
scas
jo
push
lods
fstl
push
bound
xor
xchg
in
add
mov
adc
or
stos
pop
int3
dec
cld
cwtl
into
imul
je
dec
jl
movsl
xchg
cwtl
lds
cltd
inc
xor
int
out
jmp
jecxz
mov
mov
jg
lcall
jle
leave
and
push
sbb
lods
and
ja
xor
mov
sti
insl
push
adc
jmp
inc
mov
lcall
inc
cli
sub
sub
add
cmp
lcall
dec
jae
fwait
and
mov
inc
stc
cmpsb
in
xlat
dec
shll
or
sbb
mov
shll
aad
lret
jmp
adc
ret
mov
push
mov
lods
add
mov
aaa
dec
mov
insl
dec
iret
fs
ret
mov
mov
jae
mov
leave
int3
test
push
shlb
movsl
in
cmp
insl
mov
add
fistps
inc
scas
mov
test
shll
push
ret
int3
in
sbb
jo
dec
jge
jno
mov
jge
jne
test
push
mov
xchg
out
pop
icebp
addl
xchg
aaa
mov
test
jle
xchg
in
and
xor
push
and
mov
xor
jo
adc
loope
les
push
out
movb
pop
mov
mov
xor
test
ja
movsl
imul
imul
jno
mov
in
sbb
lock
aam
jno
xor
movsb
and
lahf
dec
arpl
outsb
in
or
addr16
dec
movzbl
imul
inc
sti
or
js
inc
mov
loop
jmp
jns
call
std
sub
test
movsb
sbb
mov
adc
call
mov
jo
les
cld
clc
jg
sbb
push
pop
int3
and
xchg
arpl
test
insl
adc
xor
test
dec
add
jmp
xchg
loopne
add
stc
sub
shlb
jle
cltd
pop
mov
and
push
pop
nop
lret
mov
aam
movsl
gs
sti
mov
adc
lock
ret
cmp
ja
js
xchg
jp
sub
pop
scas
test
dec
sbb
adc
or
int3
icebp
sbb
pop
mov
roll
and
mov
lahf
sub
cld
stos
loope
repz
gs
aas
mov
gs
fwait
pop
loop
hlt
jo
jns
and
jae
movsb
gs
in
rolb
mov
xor
fisubrl
xchg
push
xchg
and
stc
sbb
dec
mov
pop
xor
xchg
xchg
dec
out
add
jns
pushf
xor
push
outsl
in
mov
push
lcall
fwait
or
pusha
mov
movsb
mov
bound
pushf
insl
and
push
jns
lock
fucom
push
or
or
inc
dec
scas
inc
in
mov
cmp
aaa
xchg
lret
xorb
mov
push
xlat
push
shlb
lcall
sarl
rep
and
or
sbb
ss
xchg
inc
fnstsw
xor
xchg
sbb
mov
adc
and
sub
cmp
lods
pushf
shrb
mov
cmp
fwait
adc
scas
movsl
push
and
cmpsl
shll
leave
mov
and
lock
mov
push
jmp
js
mov
ret
and
mov
fldenv
int3
inc
in
lods
sub
jg
insl
fs
pop
push
jg
addl
pop
test
jo
sbb
cmp
sub
stos
inc
mov
xor
xchg
jb
outsl
or
loopne
cli
xor
test
cmp
insl
int3
std
sbb
sbb
outsb
cmp
mov
jg
or
dec
aas
cmp
int
rol
xchg
sub
adc
pop
lock
insl
mov
jo
jge
push
in
ljmp
cmpsl
fs
and
pop
mov
lock
inc
neg
into
fdivl
add
inc
or
mov
pop
adc
hlt
inc
inc
jbe
or
int3
push
dec
test
int
int3
adc
daa
jge
pop
sub
push
add
pop
mov
pusha
aad
ja
and
mov
and
jo
insl
cmp
roll
nop
ss
data16
mov
mov
mov
add
js
xchg
ja
adc
and
scas
imul
or
and
movsl
out
mov
dec
cmp
int3
xchg
es
mov
pop
and
shll
dec
sub
add
cmp
shlb
jb
push
push
mov
and
out
mov
stos
adc
mov
repz
jl
test
mov
dec
in
dec
xor
jno
stos
dec
fildl
pop
cld
mov
xchg
out
dec
sbb
call
push
outsb
pop
xchg
ja
add
mov
pushf
sub
sbb
lea
lret
add
pop
roll
inc
or
popa
or
out
mov
push
shl
add
mov
sarl
xor
rorb
ljmp
sub
fistpl
enter
mov
cmp
jne
gs
ficoml
in
scas
xchg
in
mov
inc
ss
xchg
jb
aaa
mov
dec
stc
arpl
inc
fwait
test
test
mov
fisubl
add
rcr
push
lea
jle
rep
cltd
sbb
xor
mov
push
sbbb
dec
mov
xor
ljmp
fimuls
add
mov
mov
cli
movsb
sub
je
push
pop
or
sti
stos
dec
xchg
jge
push
dec
mov
jecxz
jne
bound
sbb
sbb
outsl
hlt
xor
jo
add
ja
repnz
push
add
push
jo
or
hlt
je
and
sub
iret
cltd
nop
stos
inc
inc
call
dec
add
lods
arpl
jl
lock
jg
lods
mov
push
int3
lods
leave
mov
jp
inc
mov
test
sbb
imul
insb
nop
mov
js
cli
scas
popa
xor
mov
or
sbb
xor
xchg
sbb
jb
test
icebp
push
pop
gs
or
icebp
mov
test
push
jae
into
mov
mov
sbb
push
and
mov
rolb
and
adc
mov
cmpsl
mov
loopne
fwait
sub
fildll
jb
loope
xlat
fidivrl
xchg
sahf
jg
icebp
pop
data16
aaa
hlt
in
adc
xor
imul
mov
daa
mov
scas
cmp
dec
in
jbe
jl
jb
xchg
das
insl
sbb
mov
xchg
push
stos
insl
stos
daa
jg
jl
push
ja
fwait
fwait
stos
adcb
lret
lds
aaa
mov
ss
xor
cmp
jnp
cmpsb
daa
fwait
adc
test
jecxz
mov
rolb
pop
and
and
xchg
rcrb
lods
jb
push
sub
cld
or
sbb
fbstp
or
inc
and
fstps
shll
inc
movsl
mov
add
xor
mov
sub
lcall
add
mull
test
cmp
and
pop
jo
je
mov
pushl
adc
cmp
and
icebp
push
or
pusha
cli
mov
jo
push
pop
pop
clc
or
clc
movsb
and
repnz
pop
stos
sub
les
push
aas
stos
lock
jmp
out
add
adc
andb
inc
in
jg
add
sbb
and
mov
loop
testb
loop
jns
jmp
lods
or
les
int
and
movsb
pop
jo
add
call
adc
aad
and
movsb
test
dec
fsubrs
mov
fiadds
and
sub
pop
adc
lods
lcall
and
or
mov
aaa
bound
imul
int
out
divl
das
and
sub
dec
cmp
jmp
xor
and
mov
mov
jg
inc
pop
and
out
jb
xchg
mov
xor
lahf
mov
dec
leave
popf
xor
mov
pop
fistpll
je
cmpsb
jp
nop
xlat
lock
and
aaa
lret
ss
pusha
cli
clc
lea
push
mov
fwait
mov
mov
out
jbe
insl
into
mov
test
in
sbbb
sub
int3
or
fdivl
outsb
insl
dec
testb
movsb
jae
dec
xor
js
nop
mov
fs
enter
push
in
cwtl
lret
pop
mov
ret
orb
mov
cmp
outsl
push
xorb
shrb
inc
inc
insl
int
sbb
fwait
jbe
add
pop
or
adc
stc
add
mov
shr
mov
mov
jmp
jno
or
sbb
pushl
sti
xchg
cmpsl
dec
dec
loop
aaa
insl
dec
xchg
xchg
or
sub
xchg
fs
adc
xchg
bound
imull
sbb
or
mov
mov
testb
jnp
and
push
bound
out
pop
sub
or
test
inc
pop
lahf
test
mov
adc
push
jne
movsl
shl
mov
dec
mov
mov
inc
push
adc
add
sbb
adc
sahf
pop
jbe
in
dec
jb
pop
outsb
in
icebp
pop
fs
or
add
push
bswap
fcompl
js
lahf
and
push
or
pop
aas
push
ljmp
xchg
cmpsb
inc
inc
lahf
cs
or
or
in
lds
jge
aaa
mov
push
scas
mov
fs
adc
in
out
fcmovu
inc
cmpsb
pop
mov
icebp
jecxz
daa
fsubl
inc
inc
and
and
add
shrb
fwait
test
std
lods
lea
or
xchg
jo
jg
in
adc
and
jecxz
adc
adc
outsb
mov
ror
popa
push
sub
enter
roll
popf
shrb
fsubs
loop
jo
rcrl
out
sahf
int3
or
xor
jmp
outsb
sub
cli
mov
cs
mov
dec
push
insl
test
or
mov
add
or
xchg
int3
xlat
icebp
push
or
imul
aaa
and
jno
sub
movsb
int3
jo
gs
callw
dec
fldcw
imul
cmp
leave
insl
loope
sub
es
enter
dec
xchg
mov
cmpsb
dec
pop
xlat
xchg
ret
scas
aas
adc
pop
add
mov
popf
and
out
fistpll
mov
push
lods
ja
pop
and
jbe
add
xchg
decb
popf
mov
ljmp
imul
out
and
xchg
pushf
adc
pop
add
mov
lock
cwtl
dec
lods
loopne
cmp
insl
inc
mov
cli
and
ja
movsl
fcmovne
and
popf
test
sbb
pop
scas
mov
jmp
repnz
repnz
rcrb
adc
repnz
add
fs
push
cli
mov
mov
int3
pop
or
out
sub
fcompl
cli
in
aaa
dec
xor
notl
inc
test
adc
adc
jo
scas
xchg
aas
pop
int3
cmc
or
cmp
add
mov
rclb
adc
in
bound
lea
sbbb
fwait
sbb
jb
adc
movsl
shrl
push
es
nop
stos
jge
mov
pop
call
popa
mov
shrb
cmpsb
mov
or
mov
scas
sbb
jl
gs
xchg
dec
or
aaa
pushf
imul
xor
mov
lock
jb
dec
icebp
loop
rorb
negb
xlat
adc
pop
adc
pop
add
cmp
mov
pop
mov
shrb
ret
in
outsl
in
pusha
lcall
cmpsb
sbb
sbb
and
cli
pop
das
or
dec
and
enter
pusha
out
leave
out
sbbl
dec
push
scas
dec
fsts
mov
packuswb
push
out
xchg
dec
sbb
mov
cld
xor
xchg
insl
fwait
out
iret
imul
fs
ljmp
mov
stc
mov
lods
leave
and
jns
cwtl
test
xchg
daa
dec
xchg
mov
cmp
shrb
sbb
loop
leave
jnp
or
and
or
push
int3
cmp
adc
push
inc
adc
mov
sbb
or
ficoms
mov
in
mov
push
or
and
sbb
fwait
lds
ja
roll
cs
xchg
dec
fimull
or
and
pop
push
outsb
outsb
data16
adc
xor
test
xor
pop
lcall
lcall
fidivrs
mov
inc
ja
mov
push
test
lret
push
jmp
and
xor
add
jb
cmp
inc
jmp
xchg
gs
xchg
sbb
ret
dec
mov
or
inc
sbb
scas
and
cmp
jb
arpl
mov
js
push
push
inc
adc
ljmp
adc
xor
mov
jb
cmp
push
and
cs
sub
xchg
jbe
inc
dec
cmpb
xchg
out
pop
add
stc
mov
or
jae
cmp
xor
mov
mov
pop
xchg
pop
repnz
rol
aas
movsl
fnstcw
lret
mov
cltd
push
stos
sbb
adc
mov
outsl
dec
ret
push
mov
jecxz
rcll
push
sbb
and
scas
out
fisubl
or
pop
sub
mov
push
mov
movsl
imul
mov
lock
jb
inc
sti
and
mov
lahf
mov
enter
jb
or
movsb
outsb
sub
push
push
push
or
in
mov
int3
cli
hlt
imul
pusha
inc
loopne
inc
push
pop
in
push
stos
insl
gs
adcb
pop
inc
add
nop
jbe
cmp
and
mov
sbb
xor
and
mov
insb
lahf
jg
mov
out
ljmp
mov
pushf
jb
mov
test
dec
bound
leave
mov
shlb
mov
fidivl
out
ljmp
mov
sub
mov
pushf
sbb
mov
pop
sbb
mov
adc
jno
pop
inc
popf
push
popa
add
fwait
add
in
sub
mov
lcall
sub
cmpsl
lahf
and
or
pop
pop
push
int3
outsb
jo
fnsave
loopne
or
pop
outsb
and
xor
insl
jge
mov
mov
mov
pop
daa
push
xchg
dec
fs
push
pushf
call
sub
idivl
lcall
fsubp
ja
enter
jne
imul
dec
push
lock
inc
adc
pop
test
mov
insl
jb
xor
ja
adc
in
xchg
dec
push
outsb
rolb
pop
mov
jo
cwtl
pop
push
cmp
fcompl
dec
int3
inc
pop
lock
arpl
mov
dec
ss
sub
xchg
pop
subb
iret
push
xchg
adc
adc
inc
adc
imul
and
jno
gs
sub
cltd
add
ficompl
test
add
loop
and
jge
les
fs
clc
mov
push
outsl
addr16
dec
pop
lahf
xchg
lods
xorl
das
sub
sbb
sbbl
add
and
xorl
mov
rorb
add
outsb
xchg
xchg
es
sbb
mov
orb
es
jno
mov
lcall
fcmove
cli
int
or
shl
push
outsl
mov
cmp
in
jmp
cmp
push
stos
into
jle
xchg
mov
jns
lock
mov
jne
std
push
stos
sbb
rcll
rcll
jno
lea
mov
rclb
fldenv
push
cmp
push
idiv
shlb
iret
jno
iret
lock
or
mov
arpl
mov
jp
rcrl
xchg
stos
add
jbe
fucomi
xchg
adc
inc
push
cli
movsb
fnsave
shlb
sub
adc
pop
insl
mov
push
imul
les
xchg
bound
outsl
jecxz
arpl
mov
add
sbb
lds
dec
cs
mov
scas
lret
xchg
xor
xchg
rcrb
adc
cld
rcll
sbb
fs
or
sahf
andb
es
pop
dec
outsb
out
fwait
bound
xchg
push
xchg
sub
add
inc
mov
or
fwait
mov
aad
jmp
and
mov
int3
nop
cltd
ret
mov
xchg
in
or
testb
adc
cmp
push
movsl
in
or
adc
add
jo
and
mov
add
aaa
into
addr16
mov
mov
sysenter
cmp
sbb
mov
jbe
arpl
sti
add
vandnps
jae
repnz
xor
dec
int3
hlt
lods
jecxz
and
pop
cltd
shr
or
aaa
and
ds
shl
push
jl
out
pop
sbb
adc
add
push
imul
mov
cwtl
jo
mov
xor
cld
cli
cmp
imul
dec
inc
imulb
push
dec
jbe
gs
scas
dec
pushf
fildll
outsb
push
enter
push
call
sbb
mov
mov
mov
divl
lret
push
icebp
push
mov
pop
adc
outsb
jnp
enter
jno
jl
mov
mov
inc
insl
lcall
xor
mov
shll
shll
shlb
mov
bound
and
aas
les
jno
adc
stos
aam
test
or
test
xchg
jo
mov
cld
rol
movsl
xchg
cmp
mov
mov
push
loop
pop
pop
enter
add
xchg
popa
mov
imul
xor
je
dec
ljmp
cld
aam
mov
push
sub
sbb
fwait
scas
cmp
in
jo
and
lahf
pop
negl
adc
jae
lock
lods
sub
shrl
loope
int3
adc
xchg
sub
stos
dec
push
shlb
jmp
lods
inc
int
mov
fmuls
dec
mov
hlt
jecxz
cltd
jno
es
inc
insl
pop
test
scas
jno
cli
mov
insl
je
lock
dec
fs
adc
mov
fstpl
outsb
js
data16
sub
testl
scas
mov
fldt
int3
bound
mov
jb
or
mov
bound
inc
adc
iret
dec
or
sti
cmp
lret
or
ret
ficompl
cli
insl
std
or
pop
sub
mov
js
ja
nop
in
add
das
gs
in
int3
mov
jbe
push
loope
push
sbb
sub
sbb
test
pop
ljmp
cld
cli
in
clc
adc
mov
jb
and
in
ret
in
pop
rcll
testl
lods
pop
fsubl
cmp
lock
leave
icebp
cmp
adc
imul
xchg
repnz
push
push
jp
cmp
ja
inc
out
mov
xor
mov
cmp
loope
lahf
xchg
fstpl
cmp
mov
leave
lret
sbb
mov
movsb
push
out
adc
jnp
adcb
cld
stc
mov
push
fnsave
and
scas
and
or
xchg
adc
shrb
and
sub
and
lds
mov
sbb
jb
repnz
mov
adc
push
pop
pop
cltd
adc
scas
sarl
jbe
incl
inc
xlat
and
and
push
loope
mov
rol
pop
mov
jae
push
mov
xlat
jno
shl
sub
jae
mov
mov
mov
xor
fbld
fisttps
inc
out
cmp
sub
add
mov
out
adc
ja
ds
mov
push
push
adc
test
add
nop
pop
mov
hlt
and
icebp
inc
push
bnd
mulb
int3
dec
insl
sbb
mov
sub
dec
cli
mov
mov
adc
jo
ret
inc
cmp
jne
xor
mov
push
pop
sbb
repnz
imulb
icebp
or
mov
add
and
inc
js
adc
enter
or
hlt
out
sbb
cmp
pushf
jae
clc
cli
rcrb
mov
add
divl
jmp
pop
sbb
add
int3
fwait
add
aas
aaa
push
jno
adc
add
pop
shrb
push
mov
and
sub
push
out
xor
std
lret
cmc
push
int
gs
lods
xor
call
movsl
sbb
fiaddl
gs
dec
ror
addl
jg
jmp
cmp
mov
push
mov
hlt
lods
mov
cli
jl
sbb
sub
xor
add
out
pusha
insl
sub
nop
mov
lods
pusha
sub
pop
mov
add
ret
cmp
adc
xor
cli
pushf
lahf
loope
mov
inc
pop
icebp
push
int3
xchg
out
xchg
mov
mov
dec
push
mov
or
mov
loopne
mov
imul
in
jno
sbb
xchg
mov
clc
popa
shlb
xlat
imul
push
pop
adc
mov
fnstenv
mov
loop
sbb
add
out
sub
mov
dec
out
push
xor
sbb
xchg
test
inc
shrb
xchg
mov
jb
dec
jmp
mov
loope
iret
pop
aaa
jns
mov
push
enter
imul
popa
in
stos
popf
add
test
xlat
lcall
and
sbb
ljmp
dec
hlt
aas
rcll
pop
mov
and
cmpsb
mov
dec
out
add
cmc
xchg
mov
icebp
jecxz
pop
movsl
and
dec
fistps
lret
pop
je
push
sbb
outsb
mov
fs
mov
jns
mov
in
mov
cmp
cli
push
cmp
mov
sbb
or
xchg
stos
xchg
pusha
in
pop
loop
push
addb
and
mov
divl
and
push
xor
sub
sbb
inc
jnp
inc
xor
lods
out
jno
loope
xchg
mov
or
or
sub
and
iret
mov
xor
cmpb
cld
jns
xchg
movsb
pop
int3
and
add
sarl
xor
jle
gs
mov
mov
aaa
xor
mov
mov
cmp
pushf
pop
sbb
sub
cld
in
sbb
iret
push
adc
outsb
fidivrs
imul
loopne
popf
mov
fidivl
cmpsb
mov
je
and
jb
pushl
inc
mov
adc
pop
imul
div
stc
pop
nop
fs
clc
jmp
mov
inc
and
sub
repz
jnp
mov
pop
movsl
lahf
pop
pop
popf
repz
fidivl
enter
movsl
inc
pop
pop
adc
mov
pop
dec
xchg
pop
xchg
loope
ja
jb
mov
clc
sbb
mov
ja
dec
sar
xchg
mov
ljmp
xchg
fisubs
pop
cmp
jae
imul
or
shr
jno
cwtl
sbb
cmpsl
fidivs
or
clc
dec
and
les
sub
les
in
mov
mov
adc
sub
mov
filds
sub
sbb
aaa
loopne
add
lods
pop
in
dec
in
lock
out
int
imul
pop
cmp
pop
add
push
sahf
mov
push
pop
xchg
gs
mov
cmp
daa
imul
sbb
pop
add
ret
bound
dec
pop
push
sbb
dec
or
subb
dec
mov
ljmp
and
cmpsl
pop
cltd
lahf
cli
inc
jecxz
int3
and
mov
pop
movsl
cwtl
add
fsubl
mov
cmp
mov
fisttpll
inc
and
cmp
and
adc
pop
mov
rcrl
mov
and
ss
lods
xor
jmp
adc
das
lcall
add
mov
fdivl
dec
int
and
mov
xchg
sahf
ret
add
ret
jb
push
loopne
imul
jecxz
shl
push
and
inc
aaa
jp
adc
xchg
xor
jbe
mov
sub
mov
dec
cmp
es
ficoms
adc
mov
mov
or
xor
rorl
aaa
adc
loop
js
push
xchg
push
int
shrb
hlt
mov
mov
jo
add
lock
xor
shll
cmpsl
dec
adc
ds
sub
mov
mov
dec
or
cmpsl
lods
movsl
pop
jmp
lret
mov
popf
test
xorb
xchg
sbb
mov
lods
pop
pop
push
dec
addr16
add
cmp
push
push
nop
xor
cld
sbb
sbb
mov
mov
mov
repnz
or
mov
fs
jno
ds
or
cmp
imul
or
adc
sub
aaa
insl
mov
dec
fs
fidivrs
sahf
in
mov
mov
fldt
mov
cmp
mov
pop
pop
pop
std
lahf
pushf
loope
mov
or
nop
fcmovu
ret
rolb
pop
pop
rcrl
mov
mov
or
ljmp
jle
cli
mov
jb
stc
sahf
mov
add
push
icebp
xor
cli
push
data16
aaa
es
imul
sbb
clc
mov
divl
lods
mov
ja
lods
mov
sahf
ret
mov
push
push
sahf
mov
cmpsb
mov
sarl
pop
in
and
out
fsubl
inc
jbe
sbb
roll
mov
push
dec
call
jb
pop
int3
sub
xor
mov
lea
outsl
xchg
shlb
add
hlt
dec
pusha
es
pushf
popf
lret
and
dec
in
inc
sbb
mov
loop
mov
push
adc
or
sbb
jb
out
sbb
mov
push
pushf
jl
pop
mov
mov
lahf
xchg
mov
pop
jmp
lods
ret
push
daa
jle
dec
or
mov
movsl
movsb
jo
push
insl
enter
mov
icebp
push
mov
push
outsl
mov
std
inc
mov
scas
jg
xlat
outsb
ja
out
xlat
out
repnz
sub
insl
sarl
or
es
dec
cmpsb
gs
ja
xchg
mov
push
cmp
xchg
cmp
es
sbb
out
and
dec
jmp
dec
imul
out
int3
stos
lds
adc
sub
and
lcall
in
sbbl
out
dec
cmc
ror
mov
jno
arpl
lret
cs
addr16
jbe
gs
push
inc
sarb
jnp
outsl
jl
sahf
repnz
mov
outsl
dec
mov
xlat
arpl
jno
dec
sbb
mov
mov
mov
push
dec
mov
fimull
scas
call
and
push
or
ja
dec
in
push
jns
aaa
mov
outsb
push
cmp
and
push
and
add
mov
adc
jecxz
les
mov
cmpsb
out
push
test
insl
fsts
add
std
dec
pusha
int3
in
and
imul
les
scas
repz
mov
dec
popa
das
dec
icebp
jge
push
xor
mov
mov
rcll
add
ret
mov
bound
xchg
in
mov
aam
pop
dec
xchg
mov
mov
xchg
gs
shlb
pop
fdivs
jg
jns
jg
jbe
nop
mov
lahf
subb
push
sti
test
push
dec
scas
scas
cwtl
movsb
lahf
cli
dec
icebp
mov
into
push
fs
aad
cmp
ret
sbb
nop
inc
xchg
imul
jo
cmp
adc
xor
aaa
nop
into
jmp
mov
and
or
inc
pop
add
inc
pop
sarl
aam
push
mov
mov
mov
fstps
inc
xor
mov
mov
int
ja
pusha
cmp
icebp
sub
sar
and
sub
and
jmp
sub
fisubs
cs
test
movsb
jecxz
out
jl
mov
fldcw
jp
pop
imul
fidivrs
fildl
adc
push
add
mov
shll
test
and
imul
clc
adc
fwait
es
lods
shll
dec
out
pop
gs
mov
mov
movsl
fs
hlt
iret
in
sahf
movsb
inc
movsl
mov
imul
movsl
insb
inc
push
cmc
aaa
push
mov
test
mov
in
push
mov
jg
sbb
stos
add
xchg
test
adc
or
out
adc
mov
pushf
mov
or
mov
imul
mov
mov
cmc
packssdw
mov
add
arpl
gs
mull
pop
pop
insl
or
xchg
lds
push
pop
and
hlt
xorb
and
dec
xchg
ljmp
sbb
jno
xlat
adc
pop
xchg
bound
into
popa
fisubs
orl
pop
and
cmc
mov
and
jbe
je
jno
add
cmp
faddl
rcll
int
mov
cld
pusha
sub
jecxz
fwait
pop
mov
jno
das
aas
jle
sub
rcrb
adc
dec
xlat
mov
scas
inc
inc
xchg
arpl
outsb
add
fwait
ret
pop
shl
pop
popf
mov
les
stc
dec
scas
xchg
aad
loopne
iret
or
pop
mov
mov
ss
popf
mov
pop
dec
loopne
and
fistpll
dec
cmp
push
push
xchg
jo
imull
aam
mov
out
mov
pushf
jmp
pop
dec
loope
mov
testl
fstpt
mov
pusha
mov
mov
or
push
inc
fsubs
enter
in
mov
cmpsl
imul
mov
xchg
push
add
and
aas
int3
iret
cltd
push
jg
sub
mov
inc
xor
lret
adc
sub
pop
xor
ss
jo
pop
in
lcall
mov
inc
lret
lcall
add
mov
ds
mov
loopne
jno
jle
adc
and
repz
or
test
fs
repnz
hlt
push
push
ljmp
mov
push
adc
sahf
and
movsl
jbe
dec
xlat
lods
cwtl
jge
cmp
scas
in
mov
movsl
mov
xchg
and
pop
jo
lods
add
stc
push
movsb
push
jae
jno
dec
xchg
int
movsl
into
imul
pop
ficompl
sbb
mov
adc
xchg
mov
xor
popf
xor
add
jge
movsl
jo
into
adc
test
sbb
test
fwait
gs
xchg
stos
pusha
jno
add
xchg
lahf
in
mov
and
sub
add
push
loopne
imul
cmp
and
aas
cs
mov
and
or
sub
and
ret
test
sarb
dec
jge
js
lret
out
dec
lods
jp
pop
push
sub
test
mov
shrb
jnp
mov
mov
and
mov
fbstp
daa
push
dec
in
xor
pop
in
sbb
rclb
adc
pop
add
lods
out
pop
add
es
in
arpl
lcall
inc
pop
sbb
insl
and
pushf
and
outsb
lods
loop
adc
sub
in
and
or
addr16
loope
pop
out
sub
sub
mov
out
jle
and
or
stos
mov
and
jnp
out
push
cld
mov
pop
mov
adc
mov
jg
adcb
fwait
pop
je
adc
or
jo
test
dec
or
pop
outsl
pop
dec
or
test
movsl
dec
cmp
inc
adc
push
and
movsl
loope
inc
aas
push
fimull
inc
inc
inc
mov
cmp
or
aam
scas
mov
mov
loop
and
pop
test
sub
out
fs
fstpt
cmp
xor
inc
test
jge
inc
jg
idivl
pusha
loop
inc
dec
ljmp
fidivl
fadds
sti
and
jnp
cwtl
xchg
ficompl
mov
enter
mov
inc
and
loop
das
sbb
sahf
or
cmc
je
sbb
in
fimuls
xchg
jl
sti
mov
jns
or
fwait
js
or
std
ffree
mov
and
mov
lahf
divl
add
mov
ss
fdivrl
adc
andl
popa
mov
and
mov
sub
jns
adc
rolb
pop
fdivs
je
cmp
inc
xchg
mov
pop
pop
mov
mov
mov
dec
sbb
imul
mov
std
and
sbb
outsb
pusha
ja
mov
inc
pop
mov
rcrl
lret
inc
adc
in
gs
adc
mov
notl
jecxz
xor
nop
sbb
and
jo
addr16
jl
mov
jae
stos
cmp
jbe
cmc
inc
scas
pop
xchg
pop
push
xor
sub
fwait
jno
jne
sub
jge
push
cmp
insl
sbb
or
in
out
mov
mov
mov
inc
sbb
fisubl
fucomi
mov
inc
int3
inc
push
cmpsl
movsb
mov
jp
pshufw
mov
sub
mov
aaa
ss
cs
sub
scas
jge
es
xchg
fistpll
xchg
pushf
mov
jecxz
add
push
xchg
insl
lock
lret
mov
cmpsb
push
mov
pusha
pop
lahf
sbb
xor
push
jo
mov
test
pushf
cmp
cld
xor
stos
mov
pop
add
mov
cli
jle
loopne
dec
neg
icebp
ds
mov
mov
lret
int
fs
mov
sbb
sbb
push
mov
sbb
mov
mov
cli
leave
pop
cmpsb
je
xor
add
lock
cld
insl
sbb
cwtl
outsl
pop
stc
arpl
sbb
mov
mov
int3
or
mov
adc
mov
mov
test
and
mov
and
shrb
mov
sub
repz
into
es
scas
call
mov
inc
int3
and
mov
fisttpll
mov
mov
fbld
sub
mov
nop
out
pop
and
or
sbb
jmp
neg
je
push
sub
cld
xchg
mov
inc
shr
cli
cmp
sbb
or
mov
imul
jb
xor
xchg
fs
outsl
push
sbb
insl
pop
je
loope
lea
addr16
lods
std
pop
repnz
aad
xchg
mov
sbb
mov
dec
lcall
inc
nop
xchg
addr16
stos
imul
cltd
imul
das
sbb
jno
cltd
lret
shl
and
lock
xor
aas
xor
ss
lret
bound
aaa
mov
xchg
aas
push
jle
das
xchg
jo
add
in
dec
sbb
cltd
movsl
pop
mov
xchg
mov
sbb
jno
push
or
pop
mov
add
adcb
bound
fisubs
outsb
mov
loopne
ss
call
loop
mov
bound
mov
jg
pop
outsl
out
xchg
pop
inc
lock
js
int3
mov
add
fwait
mov
mov
mov
mov
hlt
lahf
lods
in
in
lds
pop
and
aas
lock
loop
dec
pushw
stos
lcall
push
cwtl
pop
inc
gs
repnz
xor
xor
ja
adc
push
aaa
repnz
or
mov
les
jbe
mov
mov
imul
push
inc
lret
jl
cmpsl
int3
jo
xchg
dec
repnz
loop
lods
outsb
sub
mov
mov
cltd
hlt
push
mov
mov
adc
shll
fcompl
loopne
sbb
pushf
pop
cwtd
push
pop
popf
xor
cmpsb
sub
lret
cmp
je
push
pushf
jns
bound
pop
xchg
sbb
cwtl
sbb
push
ret
in
sub
sbb
mov
jmp
sbb
fs
clc
shrb
adc
sbb
push
and
mov
mov
ret
xor
scas
filds
aam
fbstp
loope
les
dec
shrl
pop
out
repnz
idiv
ja
data16
repnz
xor
mov
adc
cmc
mov
and
pop
lds
mov
and
add
icebp
sbb
or
repnz
mov
dec
cmpsl
cmp
data16
dec
jo
int
test
nop
cmp
movsl
cmp
mov
stos
mov
inc
sahf
in
pop
out
popa
popf
xchg
push
fidivl
lock
jbe
test
pop
jnp
dec
fisttpll
call
ret
ret
mov
jbe
in
ljmp
repnz
lock
adc
insl
and
push
aaa
mov
jl
mov
push
mov
dec
and
push
pop
pushf
mov
xor
mov
pop
loop
add
test
mov
into
mov
ljmp
aad
in
pusha
in
mov
enter
out
sub
in
pop
or
out
push
xchg
out
or
out
adc
or
or
repnz
mov
inc
jle
popf
mov
jae
and
fldt
and
push
jmp
sub
mov
arpl
rcll
addl
inc
adc
mov
add
pop
adc
mov
sub
xchg
add
call
jno
dec
add
fildll
daa
test
cmp
ret
or
xchg
jne
mov
aaa
loopne
xor
jb
pop
mov
adc
leave
or
popf
fs
in
imul
xchg
repnz
mov
jbe
add
ja
data16
jno
fistpll
mov
adc
aaa
dec
sbb
pop
jg
mov
or
jmp
out
adc
bnd
nop
xor
in
out
pslld
mov
out
xor
test
push
lcall
push
repnz
and
fistpl
mov
xchg
mov
lahf
icebp
jo
call
repnz
or
ffree
sbbb
cli
ficoml
mov
scas
jns
push
test
clc
lea
repnz
mov
mov
bndldx
inc
mov
sub
jle
dec
jbe
nop
sbb
and
in
mov
sub
fs
jno
jb
movsl
xchg
mov
ja
fcomp
jns
insl
adc
and
nop
outsb
repnz
jno
cs
fxch
mov
es
sub
mov
and
int3
dec
in
imull
mov
jae
out
inc
test
inc
lods
pop
mov
push
and
sub
or
xchg
bound
xor
call
sub
sub
test
ret
mov
sahf
stc
stos
xchg
pusha
mov
push
sub
sub
lret
imul
mov
js
iret
in
mov
dec
cmpsl
and
or
xchg
clc
pop
mov
sbb
inc
jno
lods
sbb
jno
popa
aas
jno
scas
es
stos
jns
jmp
ljmp
out
fdivrs
pop
es
and
fiaddl
lahf
inc
cmp
adc
addr16
les
lcall
mov
stos
xchg
repnz
in
jno
mov
lock
or
out
cmp
mov
push
jb
cmp
jbe
jno
dec
das
stos
push
add
adc
lods
pusha
shll
lock
subl
push
xchg
lods
loop
pop
dec
ljmp
std
ss
fdivrs
xor
data16
push
nop
cmp
daa
or
sub
mov
add
pop
lahf
mov
mov
or
fwait
xchg
ljmp
inc
shlb
mov
shl
mov
or
insb
pop
and
mov
popa
dec
jnp
push
adc
xor
mov
adc
addb
mov
mov
popf
lret
aad
push
xchg
stos
ficompl
dec
adc
inc
sub
adc
out
out
in
and
loop,pn
pushf
sbb
push
lods
sbb
adc
in
or
outsb
mov
mov
push
jo
scas
lret
mov
jg
std
test
jo
push
fimuls
scas
les
fucomp
sti
push
iret
adc
scas
cli
jl
pop
push
loopne
sbb
adc
mov
adc
arpl
outsb
jmp
clc
jnp
fs
sbb
or
cmp
dec
lea
and
les
dec
push
inc
mov
fs
dec
es
cltd
or
mov
sbb
stos
dec
and
lods
dec
icebp
mov
sub
jmp
insl
pop
stos
lcall
inc
adc
stos
adc
fcomp
dec
mov
lcall
ljmp
movsl
jg
aas
and
enter
dec
sbb
fcmovnu
loopne
int3
mulb
xor
dec
in
scas
sub
outsb
sub
and
jmp
stos
inc
stos
fwait
aaa
imul
stc
dec
push
mov
in
gs
das
scas
cmp
movl
movsl
inc
ret
mov
sub
mov
xchg
mov
movsl
mov
and
movsl
cmp
mov
mov
xor
imul
push
aad
sub
sub
repnz
pusha
push
outsl
jno
pop
jle
cmp
sub
test
rcl
pop
mov
stos
cltd
dec
mov
fildl
push
int3
stos
adc
inc
push
iret
es
fs
jle
xchg
ljmp
stc
mov
lcall
sbb
sbb
adc
adc
jp
or
lods
dec
loope
lods
cmp
push
inc
xchg
or
push
in
mov
dec
mov
mov
fdivrl
jo
xchg
sarl
push
imul
adc
xchg
or
xchg
insl
sub
jo
repnz
and
movb
ret
sub
pop
inc
sbb
or
outsl
stos
dec
dec
fdivrs
mov
mov
inc
aaa
in
push
jns
xor
dec
cmp
lret
jecxz
lahf
in
or
xor
pop
or
sub
out
ja
or
mov
mov
dec
cmc
xchg
jg
clc
xchg
lds
fs
test
fcoms
inc
cmpsl
in
sbb
stos
outsb
jl
jns
jg
dec
fidivrl
mov
mov
stc
xchg
inc
xor
dec
lods
fwait
or
bnd
mov
lret
push
lret
mov
test
repnz
and
jns
mov
or
mov
or
sub
pop
lock
adc
add
popa
cmpsb
fistpll
adc
dec
mov
sbb
ljmp
andl
cmp
insl
add
mov
in
repnz
push
push
or
lock
int3
xchg
in
fcomps
imul
icebp
movsl
arpl
insl
push
xchg
adc
movsb
js
sahf
movsb
pop
push
push
mov
and
and
imul
cltd
test
int3
push
jo
inc
jno
bound
mov
popf
clc
rcll
stc
sub
jb
cltd
mov
fmull
cmpsl
aas
repnz
or
ja
mov
xchg
dec
push
or
or
fldcw
jo
xchg
nop
pop
cli
or
fidivs
sbb
mov
sbb
mov
push
jne
push
pop
cmp
xor
gs
cmp
sub
add
mov
pop
push
outsb
mov
jo
fwait
and
jns
cs
sub
add
mov
xlat
mov
xor
adc
sub
outsb
xchg
xchg
cmpsb
mov
xor
mov
or
and
int
xchg
mov
inc
js
adc
dec
cmp
pop
insl
leave
mov
mov
jns
clc
xchg
into
in
in
mov
xchg
cmp
push
loop
scas
lods
repnz
mov
cmp
fs
cld
and
arpl
dec
testb
movb
mov
add
das
jb
sub
mov
loope
inc
xlat
sub
mov
xchg
push
ficompl
ficoms
flds
insl
push
cltd
add
add
jp
je
dec
mov
jmp
or
pop
and
cmp
pop
dec
pop
xor
fcoml
jbe
pop
pop
dec
push
xchg
inc
mov
mov
insl
jmp
inc
dec
dec
fnsave
add
nop
sbb
add
sti
cmc
imul
out
jg
inc
add
loop
pop
jmp
cmp
adc
fwait
pop
shlb
sbb
testb
scas
jecxz
out
movsl
loopne
popf
inc
and
repnz
pop
push
shl
dec
fsubl
mov
pop
lods
and
and
pop
mov
pop
test
cld
push
cmp
in
dec
adc
int3
outsl
addr16
arpl
pop
pop
cmp
push
mov
ret
fimuls
push
mov
add
rcrl
mov
sub
or
dec
inc
insl
dec
lret
or
add
ret
sbb
scas
sub
dec
push
mov
mov
outsl
ljmp
sbb
lea
aaa
ficomps
pop
jno
push
pop
adc
mov
repz
mov
mov
xlat
push
mov
ja
pop
and
lcall
mov
lahf
jae
and
mov
mov
fists
addr16
mov
adc
nop
jo
inc
jmp
mov
push
int3
adc
xor
sahf
mov
add
mov
ret
or
inc
jbe
push
sbb
stc
cwtl
sub
aam
push
dec
imul
repnz
test
pop
push
repnz
lcall
rcll
jg
mov
add
outsl
adc
lods
gs
cwtl
rolb
iret
mov
out
fcmovb
fcompl
popa
mov
pop
push
rclb
mov
outsl
insl
mov
pop
mov
inc
icebp
lahf
push
aam
andb
dec
repnz
add
inc
mov
push
stc
lds
xchg
insb
pushf
repnz
dec
fs
and
fs
pop
pop
rorl
xor
lret
in
je
std
mov
out
mov
sbb
bound
jmp
or
pusha
sub
add
jo
imul
pop
cli
subl
push
mov
inc
mov
jle
mov
sub
pop
jmp
loope
or
in
xchg
in
jg
jne
add
push
out
movsb
ja
jnp
repnz
dec
sbb
inc
icebp
jo
sahf
clc
lcall
push
or
jle
jne
mov
mov
and
push
repnz
movsl
mov
pop
lock
sbb
int
mov
mov
mov
pop
mov
sbb
cmpsb
jo
dec
aad
aaa
insb
dec
jnp
testl
pop
sbb
add
out
fmuls
sub
pop
arpl
lods
mov
repnz
mov
das
dec
ds
jno
mov
push
imul
mov
jmp
cmpsb
call
xor
jo
adc
lods
mov
push
jo
and
movsl
daa
imul
jge
sub
push
lahf
inc
clc
xor
xchg
sub
pop
cmp
testl
bound
xor
dec
mov
repz
inc
les
in
lret
sbb
xor
out
pop
out
and
fucomip
push
inc
loope
push
loopne
mov
inc
mov
inc
stos
int3
xchg
mov
inc
xorb
aaa
pop
out
xchg
inc
rcrb
pop
roll
sbb
stos
pop
ja
pusha
test
or
mov
xchg
jge
repnz
iret
repnz
pop
sahf
aaa
mov
lds
stos
loopne
cmp
cmp
jno
push
jno
mov
andb
test
sub
pop
add
adc
outsb
add
jo
loopne
cmc
push
and
mov
andb
push
mov
ljmp
in
outsl
or
push
fisubrl
sbb
mov
or
inc
repz
xlat
lock
xchg
jns
es
aas
mov
lret
ds
jo
sub
imul
cmp
jp
insl
push
sbb
sbb
loopne
mov
pop
mov
in
aad
jo
push
in
mov
scas
pop
xchg
mov
add
sub
pop
adc
mov
push
cs
mov
sbb
fidivrs
xor
mov
in
xchg
dec
ficompl
push
and
fmull
insl
mov
lahf
in
dec
loop
mov
xor
sub
jno
mov
aad
inc
push
adc
sbb
movsl
loope
ss
scas
xchg
adc
sub
pop
in
lret
rcl
stc
imul
jo
clc
sbb
out
mull
jo
dec
pop
pop
pushf
cs
mov
ds
or
mov
or
pushf
xchg
cmp
stc
mov
pop
and
mov
adc
ret
jl
jns
repz
cli
in
mov
imul
push
scas
mov
mov
iret
mov
mov
jae
add
jg
fisubs
sahf
mov
xchg
rolb
inc
pop
push
repnz
shlb
fwait
jo
xchg
imul
cmp
pop
fnstcw
jmp
insl
sub
jb
and
pop
jno
mov
push
clc
lret
add
wbinvd
movsl
popf
shll
push
fisttpl
loopne
stos
repnz
pop
add
orb
fcmovne
mov
loopne
and
pop
add
in
pusha
xchg
mov
scas
cli
jno
add
movsl
xchg
cmp
in
sbb
clc
jb
test
sub
mov
cld
lret
and
rorl
fwait
mov
fstl
xor
lock
mov
adc
mov
and
outsl
orb
rorl
enter
hlt
inc
sbb
mov
shll
add
mov
pop
movsl
fldenv
inc
ds
jne
jbe
les
nop
jb
and
sub
or
sub
and
dec
test
or
xchg
out
xchg
cmp
mov
jae
push
xor
dec
cmpsb
popa
js
xor
repnz
test
cmpsb
inc
adc
jecxz
dec
adc
out
repnz
fldenv
sub
adc
lret
fimull
pop
ret
cmpb
inc
fadds
cmp
push
mov
test
or
xor
xor
mov
pop
cmp
add
cld
mov
mov
sub
dec
sbb
icebp
and
fidivrl
repnz
inc
fs
cwtl
push
pusha
push
das
repnz
dec
popa
sub
lret
and
cmc
adc
sub
lods
mov
aaa
call
sbb
xchg
mov
cmp
pop
mov
inc
dec
jo
xchg
sahf
push
and
pop
sub
push
jbe
mov
subl
sbbl
out
sbb
addr16
fstpt
mov
in
pusha
insl
cs
gs
bnd
or
mov
sbb
jle
lock
dec
sbb
scas
jb
mov
loop
adc
mov
mov
and
mov
pop
push
inc
lods
jbe
adc
stc
xchg
xchg
test
test
std
xchg
mov
pop
mov
jo
mov
mov
xor
popf
jno
fwait
outsl
cmp
adc
mov
repnz
cmc
sub
dec
xchg
mov
mov
movb
mov
adc
nop
out
dec
insl
xchg
push
adc
fwait
adc
rorb
shll
adc
or
hlt
cmp
dec
scas
sbb
sub
sbb
sbb
loope
shll
lods
push
inc
adc
lea
into
sbb
inc
dec
mov
xor
add
lret
out
shl
pop
xlat
xchg
imul
cmp
mov
mov
jl
push
idivb
sbb
in
xchg
ret
out
mov
mov
push
mov
push
test
xor
mov
fstps
mov
in
imul
stos
jle
out
sbb
sub
repnz
mov
cmp
andb
cli
ljmp
add
xor
jl
add
sub
jnp
pop
adc
dec
add
in
dec
leave
stos
aas
adcl
mov
addr16
mov
ret
xchg
sbb
mov
xchg
and
or
mov
fisubs
pop
add
test
or
loop
mov
or
jb
mov
mov
loop
mov
pop
xchg
or
movsb
popa
aaa
movl
out
push
cmpsb
inc
les
xlat
or
pop
scas
cli
test
fcmovne
scas
dec
lahf
pop
cmp
jbe
out
adc
add
mov
dec
jecxz
jge
jbe
inc
add
jb
dec
js
jnp
dec
cmpsb
popf
std
mov
lret
lods
or
mov
scas
mov
cmp
mov
lods
shl
mov
fmuls
add
iret
or
imul
and
cmc
test
or
int
popf
test
in
ss
jbe
gs
push
jge
repnz
loope
call
push
sbb
jl
dec
test
bound
inc
movsb
outsb
insl
dec
push
mov
or
and
fcomps
pop
pop
lret
jo
mov
mov
sbb
jmp
rcrl
negb
push
sub
mov
ljmp
jb
and
fwait
aaa
jb
jae
inc
mov
mov
jg
push
lret
mov
inc
sub
cmp
cmpsb
in
lock
mov
dec
add
dec
lea
or
loope
mov
xchg
cmp
inc
pop
aaa
mov
iret
jbe
scas
pop
fidivs
insl
adc
mov
sahf
sbb
out
mov
sbb
xor
cmpsb
imul
mov
mov
jo
loop
cpuid
pop
mov
sbb
mov
jo
xchg
mov
mov
movsl
mov
jmp
stos
decl
cmp
mov
push
out
in
pushf
dec
pushf
xor
lds
sbb
xchg
add
mov
lret
notl
imul
xchg
push
dec
mov
pusha
dec
imul
movsb
and
cmpsl
jl
cmc
aaa
stos
push
scas
mov
rorb
bound
pop
mull
repnz
movsl
insl
xchg
adc
pop
test
xchg
int3
outsl
fisttps
sub
stos
imul
lret
sbb
mov
movsl
jae
sbb
mov
adc
xchg
push
xchg
decb
and
pop
aam
shrb
inc
inc
roll
popa
lret
stc
mov
mov
pop
or
les
mov
jmp
cmpsb
arpl
sbb
cmp
int3
data16
in
lods
pushf
imul
outsb
and
push
mov
fwait
loopne
lahf
bound
xor
mov
hlt
add
jo
shll
mov
push
ret
cmp
stc
push
loope
outsl
test
add
les
scas
jb
movsl
mov
pushf
dec
or
loopne
pop
jle
adc
lock
xchg
icebp
jp
enter
jl
fdivrs
pop
in
scas
idivb
add
scas
enter
jbe
mov
out
cmp
xchg
loope
jb,pt
ret
sub
add
sub
lock
lahf
push
push
push
std
lea
in
push
out
shrl
push
adc
dec
ljmp
stos
nop
aam
loop
dec
out
cs
scas
lock
fwait
lcall
add
sub
loopne
jo
or
sbb
sub
or
fisttps
cmpsb
xchg
mov
fwait
add
mov
fnstenv
xor
xchg
push
push
adc
loop
and
enter
mov
out
jnp
xlat
xchg
lret
push
jmp
xchg
xor
test
cmp
je
xorb
je
repnz
shrb
or
clc
leave
and
frstor
fldt
lret
and
xlat
sbb
rolb
lcall
mov
cli
jl
pusha
mov
push
mov
lock
adc
sbb
fmuls
loope
cli
xorl
xchg
inc
loopne
sbb
imul
xchg
sbb
inc
mov
mov
push
and
inc
ljmp
clc
xchg
arpl
imul
fiaddl
sub
call
cmp
fdivs
xor
dec
mov
jp
mov
and
push
cmc
mov
or
mov
dec
testb
cwtl
jbe
imul
loop
cmp
xor
mov
std
jp
rcrb
arpl
xchg
ret
mov
fsubl
jns
sbb
fidivl
out
sarl
mov
fcompl
sbb
iret
sbb
sub
leave
and
cmp
dec
mov
sahf
cmpsl
inc
ret
inc
mov
ficoml
insb
sub
xchg
insl
repnz
inc
inc
shll
dec
daa
int3
shlb
push
fdivp
fsubrp
loopne
cmp
sbb
ss
pop
mov
fisttps
fcoml
insl
imul
incb
cmp
mov
mov
sub
sbbl
and
dec
rorb
pop
scas
push
and
mov
push
xchg
or
in
pop
imul
mov
rorl
shlb
leave
decb
loope
push
jl
jge
pop
mov
notl
push
dec
fisubs
lea
push
add
and
shll
scas
pop
cld
test
mov
pop
pop
push
cwtl
iret
push
push
insl
xor
test
divl
das
pop
movsl
jns
out
pop
rol
cmp
inc
mov
mov
shlb
mov
mov
call
jp
sub
and
popa
push
jo
mov
cmc
or
mov
gs
scas
lock
test
or
test
dec
out
pop
mov
mov
enter
dec
push
ja
cmpsb
ss
dec
mov
cmc
dec
ja
into
dec
or
notb
push
mov
mov
sbb
jne
bound
or
jo
sub
and
jmp
cmpsb
lea
fwait
sub
in
xchg
imulb
pop
mov
mov
mov
fs
lahf
loopne
inc
pop
in
sbb
push
jp
sub
add
and
loopne
pusha
and
std
mov
loopne
adc
cli
addr16
aas
sbb
xor
sbb
in
loopne
sbb
insl
and
fidivs
mov
push
in
xor
ja
xchg
in
popa
mov
bound
ss
fdiv
sub
dec
and
outsl
xor
mov
pop
nop
cmp
push
jns
and
xor
mov
mov
jo
mov
push
sub
outsb
in
outsl
jle
pop
and
pushf
test
cmpl
mov
push
clc
mov
and
lock
or
adc
pop
jno
mov
inc
adc
loopne
mov
mov
popf
outsb
xor
lahf
mov
icebp
sbb
add
or
pusha
pop
cltd
ds
dec
iret
and
dec
iret
mov
xor
push
cmpsl
lret
fimuls
mov
mov
sbb
adc
pop
xchg
jecxz
lods
adc
mov
cmp
dec
cmp
mov
pminub
insb
mov
pop
jg
stos
xlat
push
fwait
outsl
aaa
shlb
in
gs
cmp
push
push
sbb
xchg
xor
je
adc
dec
test
fists
add
bound
leave
movsl
push
pushf
mov
out
in
je
call
mov
jnp
int3
test
daa
cmpsb
adc
mov
push
ret
popa
movsl
adc
dec
sbb
inc
add
test
sbb
pop
and
cmpl
push
rclb
inc
hlt
mov
sbb
mov
rcrl
lock
sbb
cmp
push
xor
jno
sbb
sahf
xchg
pop
repnz
xchg
vmovq
mov
mov
out
popf
fists
mov
inc
adc
mov
jbe
mov
mov
push
sbb
push
aad
or
mov
repz
into
inc
lcall
push
push
repnz
dec
mov
mov
lret
neg
loopne
mov
out
leave
lret
shll
sbb
mov
jbe
lds
mov
movsb
add
cmp
push
cmp
in
dec
cmp
add
ljmp
dec
jo
mov
jo
aaa
sbb
ja
hlt
lcall
jae
std
push
and
pop
fisttps
cmp
xchg
das
in
loope
sub
inc
cltd
andb
popf
add
iret
mov
xor
fsubp
pop
fmull
movsl
mov
lcall
popa
inc
or
lret
xchg
sbb
call
mov
lds
pushf
pop
mov
lods
push
test
pop
es
int3
jmp
add
inc
or
and
dec
xor
stos
popa
out
pop
fstpl
ds
mov
pop
or
ret
shll
jge
dec
cmc
add
jecxz
mov
test
xorb
lret
int
imul
push
push
dec
fcomp
dec
repz
out
mulb
pop
sbb
xor
gs
js
pop
cli
push
sub
adc
add
lret
gs
and
sub
push
imul
dec
in
dec
cmpsl
std
xchg
ljmp
test
and
fs
and
xlat
cmp
mov
sbb
adc
repnz
lahf
mov
pop
sbb
clc
addr16
popf
adc
testb
stos
mov
frstor
pushf
xchg
int
mov
push
or
jecxz
jcxz
mov
pop
dec
mov
lahf
popf
push
jne
mov
ljmp
mov
xchg
jo
dec
mov
shlb
loopne
cmp
fwait
xlat
sub
data16
fimull
or
pop
xchg
cmp
stos
fcoml
sub
lret
dec
out
xor
push
cld
fimull
out
jecxz
xor
andb
jecxz
or
cmp
movsb
mov
fwait
xchg
cmp
ljmp
in
aaa
xchg
jmp
sub
aad
mov
shrl
push
dec
out
clc
push
pop
mov
cmp
jg
fidivl
out
icebp
jno
mov
arpl
sarl
adc
pop
jp
pop
sahf
lds
mov
pop
adc
inc
iret
mov
stc
stos
int3
jb
sub
push
movsb
adc
xchg
movsl
jg
scas
lahf
or
in
dec
inc
add
in
xchg
dec
sub
dec
movl
push
mov
int3
push
shrb
repnz
arpl
adc
cwtl
ror
lock
es
cltd
cwtl
fs
fcompl
cltd
lea
dec
loope
mov
push
pop
lahf
mov
es
push
scas
xchg
add
lea
lea
adc
xchg
mov
js
in
shll
ss
dec
je
rep
cmc
in
xchg
das
adc
sub
mov
ljmp
aaa
test
push
movsl
push
push
loope
aad
mov
adc
repz
lds
insl
in
stos
imul
lods
or
mov
lahf
inc
mov
or
jge
mov
shlb
or
and
cmp
pushf
add
xchg
or
jge
adc
mov
ret
mov
loop
repnz
test
inc
cmp
and
mov
inc
mov
pop
sbb
jno
jmp
dec
das
xchg
pushf
jnp
iret
and
pop
cld
repnz
nop
sbb
inc
mov
xchg
rclb
fldt
pop
push
lods
sub
shr
sbb
jb
push
dec
inc
sbb
pop
dec
ja
mov
mov
mov
test
outsb
mov
cmc
int
cli
addl
fnstcw
add
int3
lds
jg
pusha
leave
sub
jo
push
pop
pop
lret
mov
fsub
jae
xor
jp
lret
ljmp
test
sbb
jo
jmp
out
jb
loope
movsb
or
dec
jbe
es
dec
outsl
dec
lock
push
lock
loop
mov
sbb
jecxz
cmp
test
pop
lcall
ss
add
repnz
and
cmp
dec
gs
mov
jmp
lcall
or
cmp
out
sub
popf
add
lahf
clc
add
in
push
add
stos
cs
lcall
pop
sbb
xchg
out
in
sub
sbb
or
mov
data16
or
push
cmpsb
imul
lret
sbb
stos
outsb
test
add
in
stos
pop
jo
mov
mov
icebp
mov
pushf
lret
or
popf
adc
stos
dec
jg
stos
or
xor
xchg
sub
and
sub
cmp
stos
repz
jbe
testb
and
xchg
xor
xchg
pop
imul
mov
loopne
pop
dec
ss
add
or
outsb
jo
stc
aad
dec
loopne
imul
push
lea
jno
icebp
jl
and
enter
inc
imul
js
popa
dec
loop
and
gs
insl
insl
std
arpl
or
dec
outsb
repnz
scas
adc
int
add
push
jae
arpl
outsb
mov
add
cmp
sbb
ds
push
inc
xchg
jo
inc
inc
call
mov
add
imull
cmp
int3
test
pop
jnp
sub
push
sarb
jg
sub
mov
out
dec
xchg
sarl
hlt
mov
lds
stos
fdivrs
inc
fistl
call
mov
loopne
into
sbb
loop
jno
lods
scas
dec
aaa
inc
movb
repnz
lahf
ffree
jmp
cmp
mov
rolb
repnz
fmuls
or
pop
add
int3
jnp
lahf
cmp
and
popf
loopne
add
sti
add
xchg
test
repnz
pop
fwait
xchg
ret
adc
mov
pop
fists
mov
cwtl
fcoml
xor
vpsrld
jne
cmc
iret
push
repnz
mov
xor
mov
dec
push
jbe
push
push
push
pop
adc
inc
push
js
fstl
mov
shlb
cltd
cmp
dec
repnz
add
fists
and
inc
push
mov
xchg
sub
dec
mov
push
xor
into
bound
jnp
push
mov
fcompl
shll
jbe
aam
sub
aaa
and
sub
inc
mov
clc
pushf
mov
and
sbb
add
int3
jae
sbb
fwait
jl
and
in
out
repnz
push
jno
ficomps
adc
mov
mov
pop
mov
sub
ljmp
mov
daa
xchg
jge
sbb
jb
push
in
push
repnz
fldenv
outsl
int3
js
ds
enter
std
xor
inc
and
pop
or
leave
mov
jge
rcl
dec
adc
jbe
adc
cmp
stc
stos
in
notb
push
xchg
sbb
add
and
repnz
sub
xchg
and
or
jp
sbb
xor
xchg
push
aad
ljmp
and
pop
fcmovu
pusha
xchg
xor
fcoms
add
cltd
stos
add
push
test
stos
inc
dec
in
test
ss
int
jcxz
inc
mov
sbb
repnz
cmp
stos
es
es
shl
xchg
rcr
cltd
in
out
dec
popf
mov
mov
cmp
sbb
mov
fldcw
cs
loop
fcmovu
mov
stos
adc
push
and
or
fnsave
in
pusha
and
inc
and
dec
cli
and
push
add
jge
ja
pop
loope
and
jbe
mov
cmp
lret
dec
test
mov
shlb
imul
mov
in
es
repz
sbb
lock
pop
mov
jae
in
repnz
iret
inc
scas
loop
mov
sbb
cmp
or
lods
mov
xor
mov
lret
inc
shrb
jmp
or
pusha
xor
pop
xor
mov
inc
lret
into
mov
mov
rorb
adc
xor
mov
imul
jge
jae
pop
adc
lods
push
cmp
mov
imul
add
loopne
popa
imul
movsb
out
sbb
cmp
push
outsb
sbb
cwtl
fbstp
testl
je
mov
jno
cmp
fsubl
fisubrl
cmp
cmp
sbb
leave
pop
fnstcw
jnp
das
repnz
jae
or
fdivrs
fwait
jmp
popf
push
dec
js
ret
std
cwtl
push
add
iret
push
mov
mov
jmp
stos
dec
les
clc
dec
xchg
push
test
mov
scas
cmp
rcrl
aad
sar
aaa
push
fninit
movsb
push
push
fcmove
push
bound
cmp
mov
test
mov
mov
mov
mov
cmp
mov
insl
in
sbb
xchg
gs
mov
fsubr
scas
lock
movsb
push
lret
and
xor
pusha
frndint
ljmp
jne
jo
js
cmp
ss
bound
mov
sbb
or
and
jbe
mov
mov
scas
and
jo
stc
mov
xlat
add
in
pushf
leave
sbb
cli
and
mov
xor
out
imul
adc
lret
lahf
arpl
repnz
or
dec
cmp
rorl
inc
xor
insl
mov
mov
movsb
jp
cmp
adc
mov
ss
or
sahf
push
outsb
dec
push
cmp
in
mov
mov
outsl
and
mov
adc
pusha
inc
iret
mov
js
es
sbb
fidivrl
stos
cmp
iret
addb
mov
aaa
and
loop
and
aaa
add
imul
fwait
xlat
mov
movsl
mov
pop
test
stos
jae
push
add
xchg
push
adc
inc
cli
or
and
sbb
jo
and
push
nop
fcmove
fistl
repnz
movsb
dec
sahf
inc
jg
nop
push
insl
xor
push
call
add
aaa
adc
pop
aam
jl
adc
imul
push
cs
dec
or
pop
dec
out
lcall
lds
sbb
sbb
push
aas
mov
out
stos
rcrl
mov
mov
fmul
ret
mov
push
cmp
and
sub
nop
imul
mov
ja
orl
leave
dec
jns
mov
test
imul
inc
fdivl
in
jbe
mov
stos
mov
inc
mov
cmp
lret
lea
mov
shr
push
cmpsl
jo
bswap
xchg
inc
jbe
in
mov
int3
jp
insl
pop
or
mov
popa
shll
xor
dec
iret
in
and
ret
jecxz
add
add
fstps
imul
stc
imul
cmp
repnz
mov
mov
push
adc
pushf
mov
jae
insl
imul
dec
aam
outsb
pop
sarb
cmp
cmp
outsl
pop
repnz
push
scas
dec
fstl
loopne
test
add
pushf
mov
mov
jo
or
dec
push
sbbb
gs
movsb
int
mov
sbb
fwait
jbe
in
enter
movsb
enter
fwait
loope
xchg
imul
lods
dec
gs
or
loope
in
xchg
push
das
in
cwtl
add
add
xor
sar
and
int
fs
inc
bnd
daa
imul
lock
mov
pop
loop
mov
ds
mov
dec
orl
mov
sahf
movsb
out
mov
dec
add
loope
mov
sbb
insl
push
in
or
shlb
cs
inc
pop
cmp
dec
aam
inc
adc
lods
fucompp
repnz
loopne
call
jno
daa
adc
negl
or
sbb
stos
jmp
mov
sub
pushf
out
mov
jp
jnp
add
lds
cli
std
outsb
push
mov
xchg
mov
mov
jmp
dec
jmp
mov
nop
jb
pop
xchg
cmp
push
mov
ja
cmp
frstpm(287
fldenv
cmpsb
andl
into
push
mov
loopne
gs
mov
out
mov
test
in
pushf
and
fisubrs
mov
push
mov
cmpsl
in
jecxz
lret
int3
es
insl
fildll
sbb
and
scas
movsl
lods
mov
pop
icebp
fdivrl
repnz
data16
lret
arpl
mov
dec
stc
or
movsb
add
inc
repz
std
repz
sbb
inc
jne
pop
lock
push
mov
mov
aas
test
pop
mov
sahf
ljmp
rcrl
out
add
stos
jb
push
add
in
sbb
cwtl
inc
ja
pop
jno
sub
pop
repnz
xchg
sub
jmp
mov
filds
cmp
in
add
sub
and
repnz
push
jecxz
sbb
adc
ss
dec
ljmp
lds
dec
mov
scas
push
xchg
bound
repz
sub
cld
sbb
mov
lret
mov
and
mov
mov
int
cld
jb
pop
mov
sahf
imul
repnz
int3
sub
in
cmp
mov
jmp
sbb
jo
pop
out
loope
cmpsb
dec
adc
push
adc
cs
out
mov
sbb
movsl
cmp
arpl
dec
or
gs
cld
cmpsl
ret
inc
out
fs
ds
test
fstpl
or
repnz
lar
in
jl
mov
and
cwtl
push
fwait
addb
sbb
sahf
fucomp
lahf
or
nop
and
mov
icebp
xchg
out
push
sbb
ljmp
cltd
mov
insl
dec
sbb
les
jno
jo
aaa
push
sbb
mov
lea
jmp
and
or
add
pushf
icebp
hlt
push
icebp
sub
xchg
icebp
leave
pop
mov
das
xor
cmp
in
mov
repnz
adc
push
mov
push
lock
mov
sub
mov
sub
sbb
mov
xchg
or
mov
cld
jae
jo
mov
mov
mov
cmpsl
inc
push
or
cmp
mov
lret
bound
pop
pop
and
xor
addl
mov
push
jno
cs
repnz
ret
test
adc
mov
lea
adc
cli
maskmovq
je
pusha
and
andl
mov
pusha
cmpsb
pop
and
shl
daa
adc
cmp
les
call
dec
lock
fs
cmp
mov
sbb
jbe
outsb
out
push
xchg
mov
and
insl
iret
push
inc
ret
ss
in
xchg
push
xlat
out
fneni(8087
je
or
in
inc
loopne
aam
jl
xchg
or
push
jo
test
jmp
aad
and
adcl
lret
std
sbb
icebp
fs
jb
adcb
mov
stos
jge
push
sbb
movsb
push
push
dec
divl
mov
mov
mov
ret
push
push
xlat
test
imul
jbe
pop
cmp
lcall
test
fwait
add
mov
mov
sub
mov
dec
mov
inc
fwait
mov
xchg
jge
popa
mov
loope
jl
push
lcall
popf
in
mov
sbb
push
push
inc
mov
xchg
cmp
sbb
fwait
iret
pop
mov
jmp
sbb
data16
inc
leave
xchg
icebp
lret
cmp
pop
cmp
mov
jle
jle
or
xchg
mov
and
cmpsb
inc
sbb
test
pop
stos
ss
sub
popa
cmpsb
pop
cmpsl
jle
inc
jmp
add
lahf
inc
adc
sbb
adc
pop
xor
out
nop
es
shlb
mov
stos
lock
mov
cmp
pop
mov
mov
divb
movsl
mov
mov
jne
sub
push
data16
xchg
inc
pushf
into
xchg
lea
mov
or
repnz
loopne
fs
sub
pusha
gs
lods
loop
test
sbb
bnd
lcall
mov
push
push
stc
or
cltd
cmpsb
cmpb
mov
shr
adc
imul
and
cli
cmp
sub
push
pop
stos
sbb
movsb
addr16
mov
and
and
movsl
add
popf
or
test
jp
adc
ret
adc
xorb
push
bound
xchg
jno
icebp
jmp
sbb
mov
jg
or
fsub
outsl
push
int3
lock
std
push
mov
jno
dec
lock
xchg
ror
outsb
jno
adc
pusha
push
negl
cmp
add
push
testb
negb
lds
inc
sarl
pusha
aaa
shll
shrb
mov
pop
rclb
sbb
fsubs
pop
cmp
shlb
and
cmp
sbb
inc
aad
mov
in
popf
jmp
jmp
sahf
sub
rcll
pop
int3
xor
sbb
loope
test
and
in
and
xor
subb
int
jge
fdivs
cli
xchg
call
mov
adc
mov
repz
pop
fisubrl
sbb
pop
cmp
imul
cltd
out
xchg
mov
mov
nop
jno
push
int3
aam
lret
je
roll
dec
xor
loope
add
mov
cmp
gs
lret
leave
adc
mov
mov
fwait
xor
outsl
inc
and
fstpt
cmp
mov
and
iret
xor
loopne
push
mov
and
ljmp
push
ja
loope
mov
push
scas
bound
lret
jp
xchg
dec
add
sbb
repnz
in
outsb
mov
add
pop
and
loopne
int
pop
push
lods
adc
push
scas
mov
repnz
pop
xor
xor
ret
aad
jo
mov
inc
jbe
xor
jno
sub
or
dec
shlb
repnz
sbb
mov
pop
xchg
dec
add
jecxz
or
dec
pop
movsl
sbb
cmc
pop
xchg
std
xor
fwait
xchg
push
push
xchg
pop
rcrl
pop
inc
movsb
je
frstor
les
in
add
mov
xor
mov
adc
and
sub
rol
cmpsb
jg
addr16
test
outsb
shll
add
mov
xor
jmp
pop
or
fdiv
hlt
xor
ljmp
ficoml
mov
scas
mov
and
adc
pop
fcmovbe
movsb
fcomps
mov
sub
jmp
mov
popf
cmp
cmp
push
adc
xchg
int3
push
xchg
lock
pop
stos
or
std
icebp
adc
xchg
fdivl
cltd
jle
test
add
lds
add
or
jbe
mov
push
or
adcb
orb
dec
push
add
mov
out
jno
push
imul
pop
pop
dec
pop
popa
mov
aas
shll
jno
jbe
mov
ljmp
in
daa
add
cmp
inc
stc
or
or
cmpsl
aad
jnp
dec
enter
lds
jbe
out
jb
cmp
adc
and
and
mull
cmp
sbb
in
pop
xor
dec
pop
test
jl
mov
mov
adcb
sub
sbb
push
icebp
or
xor
int
mov
or
outsb
mov
push
imull
pushf
xor
or
and
cwtl
lea
sub
push
xor
daa
mov
inc
cmp
gs
inc
mov
bound
jge
jmp
loopne
test
sarl
icebp
cmp
iret
push
call
fldcw
sub
add
fisttps
jo,pt
fdivl
pop
movsl
ret
mov
lods
mov
xor
mov
jl
lods
jg
sbb
pop
shll
jg
movsb
cmp
sub
xchg
jl
mov
shlb
xor
cli
xorb
inc
xor
mov
jb
pop
or
repnz
test
into
xor
sbb
xor
pop
mov
or
lret
mov
or
mov
cmpsb
pusha
lcall
or
sbb
cmp
dec
inc
repnz
sbb
fcmovb
dec
icebp
adc
test
movsb
int3
or
pusha
cmp
mov
dec
jmp
adc
mov
loop
sahf
movsl
push
ret
pop
mov
lret
cmp
mov
mov
cmp
in
add
adc
mov
mov
in
imul
inc
lods
outsl
stc
cmp
lahf
mov
xor
adc
ljmp
pop
or
add
vpmadcsswd
fnstcw
mov
mov
pusha
push
adc
xor
scas
dec
ret
jbe
inc
aaa
sbb
sbb
push
mov
mov
pop
pop
mov
data16
mov
mov
push
adc
scas
jo
lret
and
icebp
sbbb
or
jbe
aas
adc
orb
lods
inc
fdiv
mov
jo
loope
add
fidivrs
mov
in
mov
pop
mov
add
sub
cmp
mov
aam
clc
repz
mov
cmpsl
add
sti
push
popa
jae
sbb
dec
ficoml
push
mov
jb
or
and
fsubrl
lret
and
loopne
mov
xlat
pushf
push
push
call
inc
fisubrl
mov
repnz
push
mov
in
add
mov
mov
dec
mov
testl
mov
test
adc
scas
imull
lret
sbb
pop
jl
ds
iret
xchg
or
jbe
sahf
lds
dec
bound
mov
repnz
push
imul
mov
push
mov
xchg
push
dec
jmp
rorb
xor
test
loop,pn
pop
jno
addl
add
insb
or
in
push
pop
imul
imull
sub
cmpsb
xchg
jo
dec
fiadds
sbb
push
dec
fwait
cld
imul
repnz
adc
lcall
xchg
xor
xchg
outsb
incb
push
mov
or
dec
lods
stc
fidivs
das
xchg
fucom
loop
pop
imul
and
cmp
test
fldl
sbb
scas
sub
mov
shll
push
lods
xchg
or
jno
int
and
pop
call
stos
or
mov
fidivs
lods
ds
jnp
mov
prefetch
cmp
leave
or
dec
inc
stos
push
popa
insl
mov
dec
mov
lods
jb
add
jno
dec
push
or
xor
aas
outsl
adc
repnz
xor
hlt
jmp
loopne
loope
jb
pushl
or
jo
mov
ljmp
in
les
mov
sahf
or
js
loope
insl
and
jp
dec
sub
loop
mov
cmp
pop
and
stos
fisubs
sahf
xchg
mov
push
mov
lret
out
xor
pop
test
shrl
xor
movsl
pop
jno
inc
rorl
lock
lods
push
ja
sbb
dec
adc
mov
loopne
adc
sub
movsl
roll
out
sbb
sub
mov
ja
repz
cltd
stc
mov
js
orb
inc
jmp
sub
mov
inc
cmp
jbe
sbb
jo
cmp
inc
adc
dec
mov
ficompl
hlt
jo
mov
jbe
pusha
xor
pop
cwtl
lds
mov
jb
sahf
sbb
mov
sub
pop
and
sub
in
xchg
inc
in
mov
dec
xchg
adc
loopne
xor
push
das
xor
test
pop
in
push
push
outsb
sub
pop
mov
fidivrs
mov
outsb
repz
adc
rcrb
mov
jno
mov
fsubrl
lock
sbb
mov
roll
faddl
sbb
push
ljmp
sbb
nop
addr16
xor
xor
arpl
std
out
arpl
inc
bsr
rcrl
bound
and
in
loope
inc
jg
mov
pop
and
push
lret
and
addr16
jns
mov
test
movsb
mov
scas
mov
arpl
push
in
mov
dec
sbb
lods
and
mov
sub
mov
test
popa
mov
pop
imul
sbb
jb
dec
pop
testb
fldcw
not
out
pop
mov
and
dec
jo
push
push
cmpsb
mov
and
push
mov
or
push
push
or
in
shl
mov
xchg
out
ljmp
insl
lahf
mov
jecxz
stos
mov
mov
lods
jmp
rcrb
loope
jg
mov
add
mov
and
sbb
ja
pop
jecxz
outsb
mov
mov
xor
xchg
stos
test
dec
dec
fmull
mov
fisubl
cmp
mov
mov
inc
xchg
adc
mov
and
mov
jecxz
icebp
pop
jle
sub
test
enter
cmp
out
pop
mov
jl
test
mov
mov
adc
fwait
or
fsubl
push
cmpb
and
andb
dec
mov
pop
or
scas
push
cmp
int3
aaa
dec
dec
or
dec
inc
outsl
mov
sbb
push
pusha
jbe
mov
pusha
jp
cmp
xlat
clc
ds
sub
aaa
adc
inc
add
nop
jge
xchg
ret
pop
and
test
out
xchg
or
push
mov
sub
jnp
jo
mov
lret
lea
test
mov
mov
jo
pusha
loope
mov
sbb
mov
push
cmp
out
addr16
pop
mov
repnz
inc
sub
ds
jb
push
xor
aaa
or
shrb
ljmp
cmp
mov
adc
xor
je
hlt
fnstsw
jg
and
mov
repnz
push
lea
mov
mov
push
xchg
inc
mov
pop
ret
pop
add
mov
adc
push
imul
lods
icebp
loopne
jb
xor
lods
aam
pusha
cli
jl
cltd
xchg
cmpsb
cmp
add
in
push
xor
jg
lret
dec
xchg
jbe
lea
dec
int3
mov
sbb
add
lea
in
dec
add
aad
mov
and
jnp
cmp
pop
jo
lret
dec
movsb
pop
mov
clc
pop
shrl
repz
rcrb
insl
jmp
outsb
cld
mov
mov
ret
jnp
jno
dec
movsb
push
xor
loopne
cmp
repnz
mov
push
mov
lods
xor
ss
imul
das
xor
outsb
dec
lock
daa
cmp
lea
mov
scas
std
lea
shlb
add
cmp
das
in
int3
in
div
sub
or
xchg
xchg
bound
push
lret
jno
enter
push
pop
mov
lret
out
test
mov
and
push
iret
aas
xchg
or
cmp
xor
mov
push
jp
mov
sahf
fs
pop
xor
pop
in
mov
ljmp
pusha
mov
bound
mov
loop
out
daa
test
daa
daa
jb
xlat
in
sub
sbb
xchg
cltd
dec
jbe
cmpsl
out
popa
xchg
inc
jle
push
cmpsb
pop
mov
xor
sbb
xor
adc
rorb
jb
clc
out
fcomi
push
mov
popf
adc
repz
cld
mov
inc
aas
leave
fs
or
pop
pop
pushf
dec
dec
mov
adc
and
cmp
dec
push
outsl
push
mov
mov
mov
gs
ljmp
xor
sub
imul
out
daa
pop
test
leave
sbb
fwait
loope
mov
sbb
xlat
mov
add
faddl
ret
pop
enter
popa
jecxz
negl
sbbl
pop
sub
push
mov
pop
adc
xchg
adc
aaa
cwtl
jno
notb
dec
lcall
mov
mov
repnz
adc
cmpsb
out
in
adc
leave
decl
xchg
pushf
aaa
inc
add
sahf
adc
mov
inc
cmp
repnz
or
mov
arpl
repnz
push
shll
cld
jb
cmp
ss
lods
adc
sbb
xchg
cmp
xor
dec
mov
fcmovnbe
push
inc
shll
rolb
idivl
mov
fwait
pop
pop
xor
jo
dec
popf
imul
inc
and
mov
mov
std
or
push
imul
sahf
pusha
adc
lock
sbb
ss
jno
adc
stos
jp
sub
dec
cmpsl
dec
adc
mov
push
movsb
ljmp
adc
sti
aam
jecxz
push
or
add
mov
divl
inc
fmul
inc
aam
cmp
cmp
pop
aaa
jno
jae
adc
ja
cmpsb
jecxz
sub
rorb
stos
stc
mov
sub
inc
popf
push
movsb
test
movsl
dec
data16
lods
or
mov
lds
mov
dec
jae
ror
les
xchg
test
jbe
jae
xor
enter
xor
or
sbb
jno
movsb
push
sti
subl
pop
scas
sbb
outsl
sqrtps
lret
jmp
jg
or
push
cmp
aaa
filds
stc
jmp
addb
out
mov
inc
xchg
push
out
push
jo
mov
or
pop
jle
cwtl
cmp
mov
and
ret
sub
hlt
pop
sarb
pushf
outsl
mov
scas
ljmp
push
sub
fisubrl
movsb
pop
add
adc
scas
aam
jecxz
dec
push
mov
add
or
push
cs
mov
xor
out
adc
xor
fsts
push
adc
bound
or
arpl
mov
in
cwtl
ss
jg
dec
in
imul
add
movsb
punpcklbw
ljmp
mov
mov
in
mov
ja
mov
and
push
dec
fldt
movsb
push
pop
movsb
cmp
mov
popa
mov
iret
and
push
mov
lret
lahf
mov
ret
mov
out
mulb
mov
push
pop
rorb
les
jo
daa
sub
popa
popa
pushf
cmpsb
aaa
clc
sbb
pop
pop
push
adc
int
sbb
push
fsubs
cmp
test
sahf
mov
mov
mov
dec
ja
xlat
in
or
push
sub
push
sbb
stc
pushl
sub
pop
mov
xor
loope
dec
and
dec
rcrl
repnz
adc
dec
sarb
fdivs
push
inc
mov
push
mov
add
sahf
scas
daa
cli
jl
jo
add
das
lret
xchg
xlat
rcll
dec
pop
or
loopne
fs
shlb
mov
pop
or
sbb
mov
sbb
push
jno
movsb
jmp
fldt
aad
adc
xor
sbb
clc
dec
shl
jecxz
hlt
lock
outsb
sahf
mov
repz
mov
frstor
add
xchg
and
lds
inc
or
lods
adc
jnp
popf
in
out
sub
sub
popf
imul
lea
jmp
dec
sti
adc
out
imul
inc
sub
insl
mov
or
bsr
mov
mov
fsubl
frstor
lods
push
cmp
cmp
popf
and
dec
pop
movsl
lret
cmc
out
jp
fucomi
repnz
out
in
and
dec
sbb
or
cli
xor
outsb
sti
xor
mov
mov
pusha
add
and
and
jmp
pop
mov
dec
dec
out
xor
pop
frstor
jl
in
pop
dec
mov
sbb
cmc
cmp
and
fisubrl
incb
dec
inc
scas
shl
aas
cmpsb
sub
popa
lods
cmp
testb
movsb
cwtl
movsb
dec
es
mov
mov
cwtl
popf
mov
lock
push
inc
mov
and
add
pop
lcall
int3
adc
pop
inc
or
aaa
xchg
inc
mov
xchg
and
arpl
idivb
es
xor
call
adc
idiv
aaa
ja
leave
add
push
repz
rclb
repz
std
ljmp
add
lods
out
xor
pop
das
test
cmp
jmp
enter
push
or
jnp
ss
icebp
xor
out
icebp
dec
xchg
dec
stos
repnz
and
mov
lea
xor
enter
call
mov
es
cmp
inc
xor
ret
iret
mov
loop
dec
mov
fldcw
cmp
divb
cs
push
bound
in
data16
out
pusha
jo
pop
hlt
adc
sub
popa
push
in
clc
or
cli
mov
mov
aam
fwait
jbe
dec
imul
mov
mov
push
jb
jecxz
cmp
dec
push
mov
inc
dec
pushf
jo
cmc
fsubrp
cmpsb
inc
outsl
call
js
lods
in
cltd
rcll
mov
jb
enter
andb
mov
ja
outsl
jno
or
aas
xor
mov
pop
loop
int3
lods
adc
pop
cmpsl
aad
add
mov
mov
and
lds
out
and
inc
or
push
adc
sbbb
rorb
push
movsb
mov
imulb
pop
and
ficoms
xchg
call
pushf
outsb
mov
iret
outsl
xor
shll
dec
or
sub
xchg
fs
sbb
and
outsl
cltd
into
push
ret
in
or
lcall
sbb
aaa
mov
shlb
mov
cmp
fidivl
pusha
xchg
xchg
test
jbe
stos
push
int3
mov
or
repnz
imul
mov
int3
flds
movsl
lds
mov
and
popf
sub
mov
pop
mov
repnz
add
mov
pop
xor
fld
xchg
jp
inc
or
les
cwtl
and
mov
fnstsw
adc
mov
dec
push
xlat
mov
push
out
lock
in
push
fidivs
or
mov
cmpsb
mov
inc
mov
pop
mov
outsb
xchg
sbb
cmpsb
adc
xchg
pusha
xchg
sub
and
lock
mov
sti
add
dec
call
test
popa
mov
xlat
cmpb
jae
push
and
pop
outsb
mov
outsb
ret
cmpsb
mov
loop
fcompl
adc
add
push
roll
adc
inc
xorb
into
lret
pop
push
and
pop
repz
fldt
je
sbb
outsl
xchg
mov
mov
xor
std
jno
rcll
in
insl
cmp
dec
mov
dec
sub
pushf
cld
rcll
inc
std
pop
pop
test
movsl
rorb
jb
and
in
test
pop
lock
adc
sahf
mov
enter
sbb
ret
js
loop
mov
mov
adc
out
idivl
add
test
mov
aaa
xor
push
sbb
cld
imul
xchg
or
lods
inc
sbb
xchg
outsb
scas
mov
movsl
inc
sbb
in
push
xor
xchg
mov
dec
lea
pop
pop
mov
inc
and
sbb
mov
cmp
add
xchg
cmp
jno
mov
cld
sbb
lds
dec
lret
repnz
cmp
xchg
aad
xchg
stos
cmp
std
dec
mov
xchg
pop
bnd
jo
mov
imul
jno
jne
lea
lock
adc
mov
inc
ret
adc
gs
lods
popf
ficompl
pop
push
negb
fs
lea
mov
clc
ljmp
popf
daa
pop
stos
mov
sub
inc
sub
lods
or
xchg
dec
ds
xchg
push
dec
add
mov
fsubr
push
fistl
hlt
xchg
movsb
dec
dec
repnz
fchs
add
aas
jbe
mov
push
and
pop
mov
xchg
pop
sbb
in
pop
fidivl
cmp
ficompl
lock
test
pushf
in
dec
sti
sahf
jg
lock
ret
add
cld
cmpsl
pop
icebp
fbstp
icebp
xlat
sub
imul
leave
adc
mov
jnp
push
xchg
outsb
pop
mov
sub
in
xor
in
inc
lahf
aad
sub
and
jo
jbe
jb
dec
pop
ret
scas
mov
popa
push
and
mov
stos
jnp
lds
xchg
inc
das
pop
jo
jns
or
das
shl
fldcw
lock
mov
mov
cli
andb
jmp
loop
fs
loopne
adc
mov
test
mov
and
scas
sbb
je
xor
testb
mov
lahf
inc
mov
adc
mov
xchg
mov
mov
notb
sub
test
inc
and
mov
dec
dec
nop
movntq
out
orb
jle
mov
dec
lahf
aaa
push
and
push
adc
mov
add
sbb
sbb
mov
dec
mov
loope
cmp
pop
jnp
lret
mov
cwtl
cmp
popf
sbb
dec
mov
sahf
xchg
stos
mov
nop
enter
data16
es
push
shlb
arpl
push
fdivl
fldt
mov
pop
ljmp
lret
shll
pop
push
inc
popf
fs
sub
adc
pop
sbb
pop
out
jp
adcb
cmpsb
outsb
add
cmp
fs
mov
mov
adc
jns
xchg
outsb
aaa
mov
scas
dec
pop
xchg
or
movsl
insb
cmpsb
sbb
sbb
and
mov
adc
lods
dec
cli
imul
daa
mov
loope
mov
cltd
adc
push
jb
sti
lcall
popa
frstor
pop
arpl
push
pop
jb
pop
sbb
jo
push
fildll
test
mov
jnp
test
iret
xor
repnz
lods
iret
xchg
cs
dec
out
imul
ljmp
into
ret
dec
mov
fidivl
cmpsb
nop
lock
call
mov
jecxz
js
inc
xor
mov
shr
in
push
les
aam
sahf
inc
sbb
inc
sbb
lods
sbb
scas
push
adc
dec
repnz
and
mov
lahf
imul
repnz
sbb
movl
rclb
pop
jb
mov
ljmp
xchg
cld
jecxz
jnp
and
inc
out
movsl
aas
add
and
bound
loop
cmp
ja
imul
sbb
jecxz
dec
roll
jbe
popl
add
test
or
popl
lret
sub
adc
fwait
xor
sbb
xchg
iret
mov
ljmp
gs
movsl
lret
lods
repz
push
cmpsb
mov
cltd
repnz
push
push
lahf
leave
lock
lahf
mov
ja
pop
and
shll
or
sub
pop
jecxz
fwait
decb
inc
sbb
lahf
rorl
popf
out
insl
repnz
adc
and
insl
jl
outsb
out
mov
repnz
imul
xchg
mov
lock
and
jp
xchg
xchg
xchg
scas
lret
movsl
push
test
mov
fstl
popa
test
jmp
inc
jmp
mov
scas
sbb
loope
xlat
je
and
mov
and
arpl
outsb
fsubl
mov
shlb
rcl
in
inc
mov
cmpb
sahf
fwait
repz
ds
imul
adc
sbb
mov
sbb
cmp
scas
add
cs
in
int3
aaa
lods
sbb
cltd
sub
lahf
dec
in
int3
popa
and
mov
movsl
pop
and
movsb
dec
imul
es
imul
cs
sbb
rolb
scas
lods
inc
out
or
shrb
idivb
icebp
cs
push
cmpsl
add
scas
mov
scas
cli
mov
mov
movsl
hlt
push
in
mov
and
out
lock
bound
sahf
pop
pop
jmp
sub
adc
aam
imul
and
push
int3
inc
dec
out
pop
imul
imul
push
push
sbb
mov
insl
in
mov
in
clc
sbb
outsb
insl
and
mov
mov
xchg
jb
push
ds
aad
movsb
repnz
movsb
lcall
jo
xor
outsl
fsubrl
lods
bound
sbb
wbinvd
scas
lock
ja
cltd
movsb
aad
icebp
or
les
lcall
add
insl
leave
pop
jnp
xchg
add
ret
pop
imull
adc
scas
sbb
outsb
xchg
in
adc
jmp
lods
sahf
cmpsl
dec
movsb
or
lods
pusha
push
mov
lods
lret
mov
cmpsl
mov
sahf
or
outsl
mov
pop
adc
jne
shrb
or
adc
les
mov
mov
hlt
pop
mov
mov
in
pop
bound
pop
fucomp
push
mov
out
hlt
jo
mov
jbe
dec
jl
mov
push
popa
repz
pop
mov
xlat
adc
push
jo
mov
sbb
pop
loopne
cwtl
sbb
and
add
test
gs
mov
das
adc
lret
or
bound
rcll
xor
cs
xchg
nop
lods
dec
and
out
mov
pop
ljmp
movsb
push
sub
mov
mov
mov
xor
in
mov
sub
fnstenv
and
lcall
jmp
sbb
fndisi(8087
mov
adc
jmp
dec
mov
dec
sbb
mov
dec
mov
mov
dec
pop
jo
pop
or
mov
sub
mov
push
lret
lcall
into
insl
or
pop
cwtl
std
loope
mov
repnz
ss
pop
icebp
push
lock
sub
push
add
mov
sahf
sub
push
and
adc
dec
dec
pop
nop
cmp
xor
mov
sub
int
xor
nop
jmp
ret
stos
sub
loop
in
repnz
jo
jne
pop
and
repnz
repnz
stos
mov
sahf
jo
sbb
inc
sub
movsl
jb
push
mov
ror
sub
xor
and
mov
rep
mov
nop
jg
dec
or
inc
loope
pop
adc
inc
daa
sahf
andb
es
mov
lods
ljmp
lods
xlat
imul
push
in
mov
jb
int3
lcall
adc
sbb
loopne
inc
stos
movsl
arpl
mov
aam
bound
pop
xchg
jmp
xchg
sbb
ret
sub
shll
lock
popf
shlb
xchg
cmc
jo
outsb
mov
mov
cmp
mov
or
iret
bnd
pop
outsb
fs
outsl
repnz
xor
add
ret
out
lods
sub
push
jo
jle
pusha
mov
xchg
lods
adc
or
insl
inc
jmp
pop
ds
or
in
sub
lods
repnz
outsb
pushf
mov
lea
fcomps
mov
lock
or
sub
jae
mov
cmpsl
jecxz
test
out
out
mov
sbb
cmp
cmp
sbb
dec
mov
popa
js
mov
arpl
imul
dec
rcrb
jae
into
sbb
imul
ficompl
pop
insb
insb
lret
add
push
xorl
cmpsb
inc
xchg
fcomp
jp
mov
test
sbb
jno
sbb
mov
and
mov
xchg
pop
insl
pop
jae
fidivrl
aaa
jnp
fwait
testl
adc
shlb
mov
cli
sub
pop
sub
sub
mov
bt
lock
mov
xorb
adc
dec
out
and
jne
and
mov
sub
ror
repnz
imul
fsubs
in
and
in
pop
idivl
shrb
ljmp
inc
out
jns
push
loopne
adc
dec
je
or
lcall
insl
js
lcall
xchg
mov
fdecstp
js
stos
jno
lock
adc
stos
xor
and
cmp
sbb
cltd
pusha
pop
adc
rclb
push
fnsave
int3
test
imull
or
in
lahf
je
mov
mov
repnz
jnp
jmp
sbb
mov
add
mov
sub
mov
addr16
loop
inc
push
mov
xor
dec
popa
int3
in
popf
mov
adc
imul
cs
pushf
and
xchg
cmp
push
mov
fildll
mov
add
pop
jp
addr16
sub
fmull
fwait
mov
sbb
incb
add
add
mov
adc
es
xchg
mov
inc
add
enter
or
lret
xchg
jno
andb
mov
push
xor
sti
mov
lcall
dec
rol
in
mov
shll
mov
cmpsb
insb
int3
aad
aaa
cmp
mov
fisubrl
mov
mov
push
mov
sbb
in
repnz
fcoms
notl
cmp
adc
mov
mov
loope
mov
and
mov
cmp
dec
test
lret
push
inc
scas
cmp
lods
lret
or
sbb
sti
cmc
push
dec
dec
insl
into
imul
mov
popf
sub
in
rcr
adc
ljmp
pop
dec
pop
jno
popf
shl
add
out
mov
or
repnz
int3
scas
add
inc
pushw
mov
push
xchg
iret
lret
push
and
retw
out
cmpsl
add
mov
aad
out
les
xor
stos
mov
loop
addr16
lock
jbe
ljmp
negb
sub
sbb
popl
inc
xor
add
mov
stos
add
dec
cmp
rorb
push
push
mov
push
mov
xor
push
pop
jmp
jge
push
sahf
fistps
and
repnz
mov
jmp
push
add
insl
fcoml
test
xchg
enter
dec
imul
sub
and
sub
movsl
mov
lret
dec
push
ficoms
mov
test
stos
out
jo
sub
sbb
popf
data16
iret
push
xchg
dec
in
xchg
fimuls
adc
mov
icebp
push
mov
in
mov
loope
mov
inc
pop
negl
jge
mov
enter
mov
inc
mov
int
or
xchg
test
scas
mov
or
out
aad
xor
enter
sbb
push
pop
mov
ret
sub
iret
lock
fs
repnz
pop
jecxz
xor
push
inc
in
or
add
jb
pop
icebp
mov
mov
jnp
inc
sti
lahf
xchg
push
push
push
mov
inc
cmp
lcall
arpl
push
inc
push
loope
clc
mov
jne
mov
mov
cmpsb
ret
push
in
vfpclasspd
dec
sbb
hlt
and
js
jo
jo
mov
jg
dec
adc
das
lret
jb
mov
adc
mov
imul
jno
js
pop
pop
cmp
out
lahf
std
mov
js
sahf
repnz
cmp
or
xchg
nop
xchg
and
jg
push
sbb
push
dec
jb
push
push
add
add
jbe
lcall
pop
aad
lea
movsb
add
mov
jl
imul
iret
dec
mov
add
xlat
add
jle
sbb
scas
jle
outsl
or
add
ficoml
push
outsb
int3
xchg
idivl
mov
pop
xchg
inc
and
lret
inc
stos
mov
pushf
xchg
roll
pushf
aad
adc
loop
dec
insl
faddp
inc
sbb
sbb
pop
dec
test
fucomp
jmp
jno
jl
push
dec
sbb
fimull
xlat
fsubs
lcall
jg
bound
and
loope
jbe
fnsave
adc
ret
jb
insb
cmp
mov
mov
sbb
in
dec
aad
repnz
jle
sub
mov
or
xchg
pop
cs
in
mov
das
sbb
pop
fstps
shrl
sub
dec
and
xor
or
das
icebp
aas
stos
xchg
jno
cmp
and
push
stc
jp
gs
lods
scas
loopne
test
loop
daa
mov
mov
movsl
push
jo
add
mov
sub
rolb
or
outsb
jne
or
punpckhdq
bound
outsb
imul
jg
pushf
sub
cmp
loope
lahf
xchg
fistps
adc
xchg
pop
dec
lahf
testb
mov
jge
add
sub
mov
jno
jg
xchg
push
adc
mov
lcall
xor
test
stos
aaa
iret
push
cmp
lea
pop
sbb
adc
dec
push
mov
mov
push
test
adcl
stc
dec
xlat
pushf
mov
leave
in
fisubrs
jb
bound
push
movsb
pop
mov
outsl
fs
lcall
test
mov
add
fs
in
test
shl
lea
xchg
mov
sub
push
jecxz
gs
add
ljmp
loope
sub
jl
and
lods
in
mov
clc
in
fs
add
lods
jmp
or
je
jcxz
outsb
shrb
sbb
lods
inc
cmp
pop
jl
push
xchg
add
mov
jae
sub
cli
sub
dec
push
fadd
pop
jae
xchg
mov
test
inc
sub
scas
addr16
jmp
test
in
repnz
sub
lea
dec
into
cmp
sub
push
test
call
jle
movsl
subl
push
dec
inc
jmp
pcmpeqw
movsb
jns
addb
pop
shll
dec
mov
andb
ficoms
sub
or
mov
push
movsb
inc
pushf
dec
test
mov
aas
scas
clc
mov
mov
pop
cmp
std
ja
pop
cld
test
in
xor
les
jo
fldcw
int3
cmp
loopne
in
insl
sub
bnd
leave
cld
and
push
inc
stos
dec
push
mov
clc
in
loopne,pn
mov
imul
adc
popa
mov
pop
popf
jo
adc
outsb
shll
lds
in
js
loopne
mov
xor
repnz
ljmp
dec
leave
or
mov
out
jp
mov
xor
ror
outsl
outsl
cmp
and
sub
popa
pop
sbb
stos
adc
inc
pop
cmpsb
pusha
and
arpl
popf
loope
push
cltd
pop
or
ss
push
cltd
orl
scas
rorb
movsb
push
pop
push
ljmp
add
inc
xor
jge
rorl
mov
push
fucomi
inc
adc
pusha
fimuls
push
or
mov
adc
adc
sbb
or
sbb
ja
cld
push
mov
fbstp
or
inc
test
repz
xchg
jb
fs
test
testb
sbb
mov
dec
mov
inc
fsubrs
mov
cmp
fdivl
gs
les
pop
pop
or
pop
mov
cmp
int3
out
jno
je
jg
xor
cmpsl
pop
hlt
sbb
ret
pop
pop
subl
ror
dec
jge
jg
lock
mov
ret
out
stos
add
scas
lods
cltd
sbb
xchg
xor
sbb
daa
dec
push
push
sbb
mov
test
nop
inc
mov
lods
loopne
in
insl
repnz
mov
ja
enter
sub
adc
sub
adcb
jge
loop
into
mov
gs
es
dec
mov
cli
mov
movsl
jecxz
pop
add
jo
mov
clc
repnz
or
or
sub
jbe
lock
lods
neg
adc
xor
aas
das
fstps
or
xchg
lods
aaa
repnz
ret
test
adc
arpl
cmp
out
addr16
outsl
popa
push
cmpsl
xchg
mov
lods
mov
jnp
mov
xor
push
mov
push
mov
sbb
in
scas
xchg
insl
fcomip
xor
jb
pushf
out
jo
xor
sub
xchg
lods
shlb
inc
sbb
push
mov
sbb
or
lcall
dec
adc
sbb
mov
scas
pop
mov
inc
stc
popa
mov
adc
mov
xchg
or
sub
fistps
xlat
adcb
mov
sub
add
inc
adc
repnz
xlat
sbb
loopne
out
enter
hlt
xor
dec
addb
dec
push
data16
jl
xchg
and
rclb
mov
rorl
test
fisubs
or
mov
or
mov
push
xchg
xor
std
and
and
repnz
les
sbb
sbb
in
mov
add
les
mov
mov
jle
out
add
adc
lret
jae
andl
test
xchg
pop
and
dec
jg
lea
jae
ficomps
stos
sbb
ret
dec
sti
sub
cmp
rcrl
inc
imul
sbb
push
cmp
xchg
divl
push
cmp
ret
adc
lock
outsl
leave
jmp
lock
aaa
mov
mov
or
mov
dec
dec
dec
and
lods
pop
push
dec
push
adc
stc
sub
lret
add
adc
es
adc
call
fldcw
dec
shl
cmpsb
mov
lea
lcall
dec
das
xchg
daa
adc
push
sbb
mov
lahf
mov
lds
dec
test
sbb
dec
and
pop
pop
les
xor
popa
inc
dec
xor
popf
sub
adc
test
pop
mov
add
adc
bnd
add
jp
dec
movsb
sbb
mov
dec
adc
mov
ds
jl
jbe
insl
sbb
sahf
imul
pop
jo
lock
jl
pop
mov
xor
pushl
mov
push
lret
fwait
and
push
adc
inc
jbe
mov
mov
mov
jmp
aam
fsubrp
js
dec
dec
scas
andb
mov
sub
repz
movsb
push
push
adc
sbb
ss
repnz
or
in
sbb
in
or
jmp
sti
cwtl
sub
sbb
pushf
inc
popa
mov
cmp
out
dec
push
cmpsl
cmp
fnstcw
and
cmp
and
aas
cmp
xor
inc
clc
pop
in
ljmp
xor
jo
jno
sbb
sbb
in
pop
lods
and
pop
pop
daa
dec
and
sbb
jnp
daa
push
push
mov
scas
daa
iret
pop
lea
jo
jno
repnz
mov
pushf
stos
in
mov
jae
adc
mov
xchg
icebp
inc
jbe
mov
cmp
loope
mov
sub
outsb
push
fs
sub
dec
lcall
es
fidivl
sub
cmp
jmp
lret
cwtl
adc
adc
xor
and
mov
outsl
fwait
iret
call
mov
insl
loope
dec
movsl
and
loop
sub
pop
pop
out
mov
les
sbb
ljmp
jl
cld
pop
jo
sbb
movsl
mov
sub
and
icebp
mov
out
in
xchg
cmp
pop
and
outsl
and
and
xor
repnz
imul
mov
pop
clc
inc
nop
dec
pop
cmp
push
test
mov
adc
mov
fldt
repnz
fdivs
cwtl
popa
mov
notb
sub
out
out
jns
pop
push
imul
fmull
mov
rclb
add
push
add
pop
add
shrb
lock
sub
or
iret
adc
add
and
lock
sub
aad
mov
cmp
mov
pop
clc
add
cmp
cmc
pop
adc
xor
xchg
push
jmp
sbb
add
cmpsl
lahf
scas
insb
sbb
sti
cs
mov
fwait
imul
call
mov
add
sbb
add
repz
add
pushf
addr16
cltd
orl
lods
xor
mov
loope
sbb
in
and
jb
jnp
dec
push
aas
pop
jo
lds
shll
cmpsb
test
stos
mov
andl
sub
imul
mov
jae
jbe
mov
outsb
movsb
negb
nop
mov
jb
gs
add
stos
aaa
mov
movsl
sbb
insl
jmp
data16
arpl
cmp
mov
sbb
mov
mov
xchg
aam
into
mov
sbb
sbb
div
sbb
cmc
ljmp
add
imul
test
cli
inc
fcmovbe
fcomps
iret
sbb
lahf
push
add
cmp
ficompl
sbb
push
lea
fnstenv
cltd
outsb
pop
leave
and
outsl
data16
jnp
int
stos
popf
add
repz
mov
cmp
rclb
sarb
lods
lock
pop
xchg
dec
into
mov
sub
and
dec
pop
sub
xchg
lods
shrl
or
push
push
rcl
pushf
push
pushf
push
fstps
out
shrl
mov
outsb
shll
xor
sub
lcall
mov
fs
rorl
and
pop
int3
lods
pop
xchg
jbe
aam
cwtl
add
cltd
push
sahf
test
xor
out
and
repz
add
and
lods
jb
adc
mov
cltd
shrl
add
scas
out
pop
movsb
and
adc
mov
lds
js
in
mov
pop
lcall
sub
lods
les
mov
ret
fsubr
push
in
ret
in
dec
push
test
mov
xchg
jmp
push
dec
dec
jno
xor
adc
stos
xor
add
xor
mov
and
xor
out
and
lods
and
int3
scas
push
mov
leave
dec
add
mov
or
sub
in
das
jae
test
int3
xor
es
sub
jp
jno
stos
bound
popf
scas
pop
loop
and
ljmp
pop
push
jbe
scas
or
mov
sbb
xor
mov
xchg
sbb
loop
insl
insl
dec
testb
mov
sarl
imul
cmpl
out
adc
jp
fwait
mov
leave
orb
pushf
lret
loop
in
shll
adc
das
cmp
inc
std
insb
or
lods
dec
sbb
lcall
das
mov
lret
lea
adc
std
dec
mov
in
pop
dec
inc
or
sbb
mov
push
pop
sub
in
inc
push
xchg
or
int3
mov
dec
jno
stc
insl
orl
adc
push
xor
and
int3
std
sbb
iret
jb
addl
jno
cmp
in
mov
sub
sbb
fwait
pop
cmpsb
ljmp
lea
pop
insl
stos
mov
daa
push
out
pop
nop
push
das
add
sub
sub
sub
mov
xor
sbb
scas
or
imul
in
pop
cmc
sub
xor
sub
out
sub
jns
jns
ss
pop
mov
sbb
sub
or
imul
stc
je
movsb
mov
lret
jecxz
dec
ret
cmc
cmp
sbb
mov
mov
iret
cld
jno
mov
sbb
addr16
loop
ret
adc
pushf
mov
xor
push
sbb
jp
or
sbb
bound
xor
sti
xchg
testl
cmpsl
daa
lods
cwtl
repnz
dec
mov
mov
pop
or
insl
or
sub
test
mov
pop
push
or
clc
jbe
mov
or
sbb
mov
das
js
sbbb
or
fildll
push
std
mov
mov
sarl
inc
cld
lock
stos
repnz
or
cld
sbb
mov
xchg
dec
xchg
inc
sbb
mov
mov
dec
sarb
dec
int3
mov
shr
dec
stos
mov
sbb
adc
ljmp
inc
test
jno
mov
adc
mov
pop
sub
bound
xor
or
sbb
push
in
scas
bnd
pop
mov
and
push
inc
scas
out
in
jl
mov
pop
jle
repnz
pop
inc
shrb
or
pop
xchg
rorl
push
push
cmp
insl
jo
pop
test
pop
mov
mov
mov
cltd
mov
jmp
mov
fwait
js
cld
notl
mov
adc
daa
movsb
std
push
addl
in
sbb
mov
adc
jae
leave
mov
movsb
dec
mov
sbbb
sub
pushf
sub
inc
jbe
dec
push
pop
adc
mov
xor
js
cs
movsl
xor
mov
mov
sub
jnp
lcall
imull
test
adc
adc
mov
clc
sbb
pusha
int
nop
sbb
add
xor
or
repnz
and
imul
fsubl
imul
or
dec
pop
adc
pusha
mov
loop
and
pop
adc
or
mov
fs
dec
mull
popa
popa
fdivrs
and
adc
mov
les
stos
lret
scas
xchg
inc
arpl
test
fistpll
cltd
xor
push
push
push
mov
es
fsubr
inc
mov
cmpsb
lahf
insl
cltd
out
fneni(8087
pop
mov
adc
or
stos
sub
jge
shll
scas
adc
lock
and
add
fwait
call
nop
dec
pop
jo
sub
int3
push
push
dec
aad
or
mov
dec
sarl
lds
mov
pop
push
ljmp
outsb
mov
mov
dec
je
pop
mov
outsb
outsl
clc
mov
dec
dec
out
fists
mov
test
pusha
stos
push
pop
mov
cmpsb
mov
pop
adc
cmp
cld
ja
dec
jne
xorb
ljmp
sub
jge
push
sub
test
cmpsb
mov
mov
insl
cld
mov
adc
out
mov
adc
movsl
cmp
dec
cmp
nop
test
arpl
fs
cmp
mov
inc
insb
push
mov
or
inc
xor
lods
jo
pop
call
or
int3
cld
push
bound
out
dec
dec
mov
sbb
cmpsb
ja
mov
cmp
leave
sbb
mov
imul
dec
jbe,pt
hlt
ljmp
adc
dec
sbb
lock
cmc
int
jns
into
mov
sbb
hlt
in
pop
push
lock
icebp
scas
ret
mov
lock
or
or
xchg
dec
sbb
pop
sub
divb
cmp
gs
mov
cs
fldt
mov
dec
arpl
sub
mov
inc
adc
xor
dec
ds
xchg
out
mov
or
fcomps
and
mov
push
sbb
rcrb
push
fwait
rol
sub
jb
movsl
in
call
xchg
iret
adc
and
dec
popa
sub
or
adc
push
ljmp
stos
sub
loope
jb
add
jb
and
sbb
jecxz
xchg
mov
cmp
flds
mov
jg
adc
or
sub
out
mov
data16
arpl
mov
jl
mov
cmp
add
dec
fld
sbb
pop
repnz
stos
push
inc
int3
and
int3
daa
mov
imul
nop
fidivs
mov
pop
repnz
popf
jo
out
stos
push
push
pop
lock
xchg
out
and
mov
xor
dec
mov
mov
mov
xor
cs
pop
push
es
cmc
add
mov
int3
jp
ja
repnz
and
cmp
in
xchg
pop
out
mov
dec
push
scas
sub
std
xchg
mov
pop
sahf
lret
pushf
testl
subb
cmp
movsb
sbb
fdivl
cwtl
mov
scas
inc
push
dec
adc
or
sbb
adc
xorl
add
push
movsb
adc
adc
mov
sub
mov
in
jo
bound
mov
arpl
into
lret
movsl
sbb
and
lret
insl
scas
xchg
lods
mov
or
lcall
mov
adc
lock
or
out
and
in
icebp
fmull
movsb
jo
or
push
outsb
jbe
mov
mov
fwait
jecxz
movsb
adc
lds
call
dec
mov
mov
call
dec
jbe
sti
stos
bound
and
mov
xchg
push
dec
ljmp
mov
pusha
lcall
push
movsl
sti
out
addr16
imul
lea
xchg
cmp
roll
sbb
inc
fstpl
sub
dec
imul
adc
sub
and
dec
dec
inc
push
push
icebp
jo
int3
mov
and
mov
mov
inc
aas
xor
mov
mov
mov
fwait
mov
dec
mov
mov
pop
shrb
jno
pop
push
hlt
lock
cs
mov
imul
jo
lock
mov
jno
sbb
mov
or
sub
and
ljmp
imul
mov
icebp
mov
lret
cmp
ret
lret
dec
fidivl
mov
xor
inc
ja
xor
cmpsb
dec
pop
push
bound
call
mov
jnp
xor
ja
cmp
dec
cld
shrl
pusha
push
push
fldcw
insl
mov
mov
or
adc
push
jnp
xchg
adc
xchg
adc
add
call
adc
out
xlat
scas
add
sub
sbb
inc
das
daa
jge
inc
cmp
mov
mov
add
xor
cmp
pop
imul
mov
fldt
or
fwait
lret
inc
flds
dec
test
mov
push
rcrb
sahf
pop
lret
shlb
push
scas
adc
in
loope
mov
int
les
fwait
and
mov
inc
lock
mov
mov
jl
add
cmpsb
clc
sub
loop,pt
lret
movsl
mov
imul
sub
push
mov
popf
push
ficompl
sbb
jne
adc
xor
fsubr
and
sbb
and
push
jp
xor
mov
jp
sbb
mov
sub
dec
xor
xchg
add
test
arpl
xchg
rcll
jge
arpl
ret
mov
xchg
nop
or
clc
fucomp
pop
fwait
push
notl
jb
orl
mov
fsubrl
jbe
imul
add
pop
lahf
addr16
dec
scas
sbb
sub
fimull
dec
sub
dec
das
pusha
and
nop
mov
enter
pop
fs
mov
test
or
pop
repz
sbb
or
test
jo
repnz
mov
int
in
fnstcw
loope
pop
jecxz
ficompl
aaa
xlat
pop
mov
rcrb
loop
adc
mov
cmpsb
bound
dec
imul
or
lods
pop
es
jne
xor
sbb
mov
sti
lcall
mov
out
in
push
sub
and
arpl
movsl
fldcw
imul
loopne
nop
mov
adc
push
gs
pusha
hlt
jge
icebp
addr16
push
out
mov
in
or
jno
pop
mulb
pop
out
mov
outsb
loopne
cs
and
mov
shl
lret
lcall
xchg
cs
jno
mov
mov
xchg
loop
jmp
cmp
das
and
into
hlt
sub
adc
jge
sbb
fbld
fwait
std
sub
mov
cmp
imul
movsb
cmpsl
pop
cld
aaa
lea
shrb
mov
mov
mov
nop
lock
clc
addr16
into
xlat
hlt
out
inc
in
lea
adc
pop
test
xor
sub
and
cld
in
aaa
mov
pop
pop
or
pop
lahf
adc
dec
movsb
mov
pop
lock
mov
dec
jno
in
arpl
es
dec
sub
lock
repnz
dec
cwtl
test
loopne
test
mov
popf
mov
sub
sbb
pop
lea
test
hlt
add
jl
lcall
push
adc
mov
mov
xor
int3
inc
dec
and
imul
popa
cmpsb
push
test
dec
xor
test
cmpsl
xchg
add
push
faddp
and
lcall
and
push
sbb
cmp
test
mov
and
lea
or
iret
ret
lret
outsl
xor
pushf
cld
dec
cs
mov
and
add
mov
mov
pop
jnp
dec
sbb
or
xchg
jae
dec
test
loopne
xorb
stos
lcall
mov
insl
std
mov
imul
addr16
repnz
xchg
nop
outsb
or
and
outsl
mov
cmp
es
lahf
aad
sub
adc
shrl
hlt
out
popf
sbb
adc
or
add
inc
filds
xor
outsl
xor
jne
push
inc
cmp
stos
mov
leave
fildl
lcall
and
add
pushf
sbb
int3
push
mov
stc
ss
or
pop
cmp
and
push
push
mov
jnp
sar
pop
outsl
pusha
mov
mov
lcall
sbbb
sbb
jno
mov
xor
jle
inc
in
loopne
xchg
mov
dec
dec
ss
dec
xchg
inc
loopne
rcrl
lret
lods
pop
xor
mov
jb
dec
jo
mov
lock
lcall
push
sbb
mov
in
scas
or
out
dec
pop
int
fs
dec
sbb
inc
int
jo
dec
inc
repnz
xlat
dec
mov
dec
in
insl
jb
cmp
cld
cs
es
stc
sbb
push
repnz
mov
dec
fiadds
xchg
aad
adc
adc
fs
cmpsb
mov
outsl
mov
fld
xchg
lcall
xlat
rolb
lods
sarl
nop
jo
dec
pop
nop
bound
loop
dec
mov
dec
sbb
xchg
sbb
fmull
lock
jo
adc
int
push
sbb
push
and
jp
clc
dec
pop
out
lock
push
cmp
sbb
mov
addr16
dec
scas
mov
imul
pop
add
or
and
test
das
int3
mov
mov
pop
fwait
repnz
jecxz
ret
fildll
push
ss
movsl
sbb
push
push
xor
mul
xchg
daa
jne
xor
adc
xchg
jmp
scas
mov
hlt
sbb
ljmp
adc
in
mov
outsb
repnz
pop
cmp
pop
mov
imul
cs
fucomp
fs
std
xor
popa
lret
dec
stos
cs
push
sbb
add
out
ror
out
adc
imul
dec
ja
rolb
mov
mov
mov
aaa
jno
mov
ret
fsubrs
daa
imul
inc
int
jl
faddl
mov
pop
stos
insl
inc
rsm
dec
andl
xchg
outsl
xchg
mov
insl
xchg
stos
lret
mov
mov
and
rorl
mov
sbb
or
jge
inc
jecxz
pop
arpl
and
mov
jb
into
fisubrl
in
push
mov
jo
insl
or
or
ljmp
and
jno
pop
lock
pusha
sbb
adc
sub
cmp
sub
lahf
data16
ljmp
jo
int3
fwait
fs
std
pop
lock
push
push
xchg
icebp
iret
gs
and
daa
negl
and
enter
lock
jge
shrb
push
cmc
mov
stos
lods
ss
cltd
aam
push
sbb
mov
xchg
ss
mov
rol
out
adc
cli
inc
jae
dec
out
lods
push
pop
fstl
sub
lcall
sbb
mov
add
in
loope
bound
jno
lock
jo
movsb
push
out
addr16
es
sub
mov
jb
test
andb
lods
jns
lret
sti
icebp
push
jge
xor
jns
fidivs
pop
jo
ss
lock
ret
mov
pop
test
mov
push
nop
or
repnz
push
mov
add
es
js
xchg
movsb
mov
loope
push
adc
jmp
scas
icebp
mov
test
xchg
xor
push
xchg
adc
pop
dec
mov
sbb
xor
mov
or
xchg
cmpsl
iret
xor
ss
sbb
add
out
push
rcrb
jmp
jns
fs
push
mov
les
sbb
mov
dec
mov
notb
pushf
jo
lret
or
out
pop
outsb
xor
mov
aad
arpl
push
iret
cwtl
jmp
sub
cmp
sub
jge
cmp
addb
test
ljmp
push
push
inc
out
jnp
or
cmp
cld
cli
jnp
popf
imulb
jb
loop
loopne
mov
jo
xor
mov
out
inc
mov
jmp
push
fists
mov
bound
test
mov
shlb
movsl
addl
sbb
xor
xor
adc
aam
jl
outsb
push
addr16
cld
push
stc
jo
jmp
pop
sbb
loope
les
jno
mov
movsb
imul
mov
pop
lock
and
es
jnp
mov
movsl
popa
push
mov
and
aaa
cmc
xchg
ljmp
add
mov
jno
js
push
jl
cmp
pop
jno
adc
int3
iret
cmc
fbld
cli
mov
and
ret
mov
push
fs
lahf
hlt
cwtl
cmpsl
nop
fisttpll
adc
imul
mov
ljmp
push
xor
es
arpl
imul
iret
xchg
inc
cs
sub
call
les
add
mov
lds
stos
sub
push
mov
popa
push
inc
scas
cmp
or
xor
adc
movsl
stos
xchg
mov
mov
push
outsl
or
jo
cli
mov
imul
ret
stos
add
aam
xlat
adc
bound
ficompl
shrb
mov
push
push
mov
dec
pop
mov
pop
mov
in
mov
and
mov
sub
data16
mov
push
out
nop
sub
mov
push
mov
bound
cld
xor
mov
jno
pop
mov
cli
stos
mov
les
mov
ss
inc
fwait
cs
insl
sbb
mov
inc
pushf
jno,pt
testl
out
stos
repnz
insl
andl
mov
push
xchg
in
out
movsb
loopne
aas
shrb
mov
push
arpl
cmp
lahf
push
dec
pop
or
scas
popw
cli
push
jmp
push
jns
xchg
in
sub
push
int3
adc
pop
pushf
lcall
rol
icebp
push
subb
int3
push
stos
shll
xor
testb
xchg
fsubl
adc
icebp
dec
or
iret
cmp
mov
jns
push
and
pop
and
adc
jle
sti
bound
xor
xor
aam
dec
xchg
dec
out
add
stos
sub
mov
or
adc
imul
scas
and
mov
mov
repnz
orb
sbb
add
jb
aam
pop
adc
mov
insl
pop
aaa
test
fisubrl
or
sbb
outsb
sbb
mov
in
adc
loopne
jnp
in
pop
xorb
arpl
and
ja
nop
pop
in
jge
gs
xchg
loop
jecxz
adc
sub
rorl
jno
inc
movsl
out
or
add
pushf
fdivs
imul
sub
jo
sbbb
out
jmp
jmp
insl
dec
cli
mov
sahf
fwait
cmp
sub
std
loopne
stos
orl
jp
pop
jecxz
stos
mov
clc
jnp
jmp
mov
ret
mov
in
mov
xchg
xchg
in
test
mov
and
arpl
xor
loop
mov
flds
adc
into
std
pop
out
dec
push
and
out
sub
sbb
lahf
imul
inc
push
loop
sbb
imul
outsl
out
insl
pusha
test
jle
out
jnp
cli
and
and
dec
mov
js
or
dec
imul
cmp
scas
mov
jb
ja
cmp
mov
aad
ljmp
push
push
bnd
push
shlb
sbb
fildl
cmpsb
sbb
jmp
jo
dec
dec
mov
testb
mov
shrb
loopne
mov
cmp
lcall
push
cmpsb
jmp
stos
xchg
mov
adc
pop
jmp
int
sbb
mov
jecxz
jo
and
push
out
push
inc
scas
mov
mov
repnz
dec
push
mov
sbb
data16
or
push
stos
in
fldcw
push
add
aaa
pop
popf
and
icebp
pop
and
ss
and
mov
push
pop
sub
push
stos
fwait
imul
inc
mov
sbb
lock
in
sbbl
add
cs
idivl
mov
sub
bswap
repnz
dec
int3
xchg
outsl
movl
mov
lret
cmp
sbb
sahf
jge
cwtl
cmp
stc
and
test
add
adc
lods
mov
cmp
fwait
bound
add
and
mov
outsb
mov
ljmp
xchg
gs
add
sub
movl
dec
sub
mov
pop
cmp
cmp
fsubrl
fs
jbe
cmp
int3
shrb
in
fcomi
sbb
pop
call
fwait
stos
push
sbbl
shrb
push
xchg
fistl
jge
adc
cwtl
and
movsl
fwait
sbb
call
fistpl
mov
sbb
popa
cmp
in
jb
xchg
add
sbb
popf
dec
pushw
ss
dec
push
push
int3
sub
repnz
scas
mov
fs
std
fisubl
stc
sahf
call
sbb
gs
xchg
or
aad
mov
pop
jb
sub
sub
fcompl
cld
je
repz
clc
jp
xor
enter
in
push
nop
push
sbb
pop
xchg
outsb
movsb
rcll
hlt
test
jecxz
pop
mov
les
insb
in
mov
mov
xchg
ret
sub
jl
dec
dec
sbb
mov
dec
popf
into
push
pop
mov
cmp
sub
cmpsl
jecxz
inc
nop
cwtl
jl
pop
fdivrs
dec
idivl
or
gs
push
imull
mov
adcb
xor
sbb
mov
mov
mov
lret
adc
mov
cld
inc
jns
jl
xor
fists
jo
cmpsl
loop
pushf
ss
int3
repnz
sbb
aaa
dec
out
ficompl
andl
aas
cli
add
pop
rorl
gs
and
out
sbb
sub
inc
pop
adc
dec
xorb
and
add
movsb
and
mov
sub
insl
jno
pop
mov
cli
mov
ficoml
cmp
out
mov
mov
daa
loop
mov
xchg
dec
loope
enter
pop
xorl
mov
popf
xchg
imul
int3
cmp
pop
in
gs
or
jo
or
repnz
dec
pop
push
imul
idivb
xchg
jno
dec
lahf
jns
imul
movsb
repnz
inc
jne
mov
sbb
dec
aam
inc
mov
xchg
mov
cltd
or
cli
clc
mov
jno
lods
inc
clc
pushf
xchg
sub
pop
cmp
mov
lcall
gs
xchg
xor
test
pop
pop
pop
mov
or
jno
aad
or
ljmp
push
loop
mov
jmp
popf
test
addr16
dec
jno
shrb
cmp
stc
lods
outsl
sbb
fwait
sbb
testb
int
test
lret
mov
mov
jecxz
push
in
jbe
mov
mov
or
repnz
mov
adc
in
fmull
adc
xor
aas
xor
mov
in
repnz
inc
in
fsubr
or
push
lret
jno
cmp
mov
or
in
mov
xchg
sub
in
cmp
mov
test
insb
lret
ljmp
dec
mov
je
or
mov
cltd
jmp
push
pop
js
stos
scas
dec
pop
or
scas
xchg
jmp
dec
xor
addr16
fcoml
cmp
lea
loope
xchg
sbb
int3
aam
jl
push
add
sub
xor
adc
aaa
insl
mov
repnz
cmp
xor
ja
or
in
lock
aam
fidivs
push
cmp
lret
aas
adc
jmp
sbb
repnz
cmpsl
dec
mov
movsb
push
insl
fisubrl
inc
add
pusha
lock
rorl
and
pop
adc
mov
adc
dec
mov
pop
xor
jp
mov
fistpll
sub
or
xorl
xchg
xchg
loopne
int3
xor
mov
gs
loopne
movb
mov
push
xchg
scas
dec
ss
out
sub
sbb
arpl
ds
mov
inc
out
or
push
jmp
fdiv
sub
mov
jmp
mov
jl
gs
sub
daa
cmpsb
add
aas
cmc
add
incl
sbb
pushf
lea
loop
call
jo
cld
gs
lods
and
repnz
push
pop
mov
xchg
popf
jecxz
stos
dec
fsubs
inc
sub
dec
in
in
rclb
mov
cmp
in
pop
dec
fistl
repz
sub
sub
pop
sahf
add
xor
and
fxch
dec
jp
bnd
and
and
pop
mov
nop
fidivrl
xchg
mov
pop
stos
mov
mov
push
movsb
imul
lods
jmp
int3
inc
mov
shll
mov
mov
cmpsb
pushf
mov
xchg
jo
icebp
pop
and
mov
icebp
dec
mov
or
mov
mov
in
mov
pop
sub
adc
jge
pop
in
inc
mov
xchg
and
out
cs
sbb
roll
or
cli
out
mov
stos
fimuls
movsl
xchg
je
icebp
lock
popa
leave
and
and
outsl
imul
adc
scas
jb
scas
clc
test
int3
popf
gs
sub
addr16
jb
scas
ret
test
movaps
mov
in
adc
jge
lret
cmp
push
lods
cmp
jle
scas
sub
add
mov
cli
mov
fstpl
and
mov
cmp
lods
pop
mov
cld
mov
sahf
aaa
mov
mov
mov
ret
or
dec
push
les
mov
loopne
ds
jno
insb
in
adc
push
sbb
adc
sbb
in
and
dec
out
mov
es
adc
xor
outsb
push
jmp
or
add
imul
dec
lcall
mov
xor
mov
jb
mov
mov
hlt
xor
jp
sub
push
fidivl
es
fsubr
pop
sub
mov
stos
mov
cmp
lock
mov
xor
ja
pop
mov
out
dec
push
int3
je
jb
incb
dec
mov
mov
pop
ja
xchg
dec
mov
mov
or
and
jge
popa
in
imul
sbb
mov
test
push
sub
pop
or
pushf
cmp
sbb
and
addr16
psubsw
rcll
push
pop
mov
test
mov
cmp
out
ret
push
push
jb
jne
jmp
mov
or
iret
pop
enter
ret
add
mov
adc
mov
inc
dec
iret
movsl
jne
movsb
pop
xor
in
mov
push
mov
xlat
adc
jns
push
es
scas
fxtract
jb
movsl
pop
and
mov
imul
or
std
test
ss
xchg
lods
xchg
and
ret
xlat
addr16
mov
fsubl
push
out
insb
mov
adc
mov
lret
jb
push
push
ret
push
and
xchg
aam
and
dec
addr16
lock
lods
int3
fwait
outsb
fs
cmpsb
sub
sub
jmp
in
xchg
dec
adc
jns
imul
loopne
xor
adc
and
sub
fs
dec
je
bound
inc
and
cmpsl
fisttpll
push
push
mov
stc
lock
test
shlb
movsl
mov
sbb
xor
stos
sub
sbb
cmp
mov
gs
or
jo
xchg
pop
xor
and
scas
push
jmp
mov
add
and
ret
lea
outsb
jae
lret
mov
sbb
pop
out
push
repnz
push
in
stos
sbb
es
movsb
test
sub
cld
push
fs
push
mov
dec
mov
pop
into
mov
icebp
dec
ffree
mov
test
cs
add
cmp
mov
subl
stos
int
adc
dec
xor
inc
test
test
jb
sbb
xorl
add
repz
je
jne
sub
std
xor
into
mov
fsubrs
or
cmp
or
out
and
pop
ds
loope
cld
mov
and
mov
test
stos
rclb
cmp
loope
sbb
addr16
xor
xchg
out
pop
and
outsl
xchg
mov
iret
cmp
push
lock
inc
repnz
push
das
js
repnz
cmp
push
into
inc
hlt
mov
push
adc
and
cmp
adc
movsl
insb
push
push
jecxz
insl
mov
and
pop
scas
adc
sbb
mov
das
scas
sbbb
add
mov
push
movsb
sbb
adc
dec
pop
mov
and
rorb
push
sub
popf
inc
add
xchg
add
pop
aas
stc
stos
xor
add
push
pop
mov
mov
repz
rcrb
sbb
test
data16
xlat
add
repnz
mov
lea
outsb
sub
dec
ret
stc
xchg
mov
lea
fwait
outsl
adc
mov
add
mov
mov
sbb
mov
xchg
lods
push
in
add
sbb
push
jle
mov
jmp
das
stos
push
loope
rcll
ss
cmp
pop
cld
iret
jo
mov
icebp
jno
mov
lods
push
jbe
sahf
mov
mov
test
sub
xor
sub
mov
xlat
dec
xchg
and
stos
or
jp,pt
xchg
mov
lret
cli
mov
insb
push
sbb
dec
fwait
adc
pusha
push
pop
sbb
scas
testb
pop
out
dec
lods
sbb
or
adc
pop
pusha
cli
pop
cld
jne
je
imul
jae
cld
xor
aam
sub
ljmp
mov
dec
sub
ljmp
or
inc
and
mov
hlt
insb
sbb
stos
cmp
xor
stos
je
mov
lahf
mov
mov
shrb
cltd
scas
out
mov
mov
mov
int
cli
insl
stos
mov
dec
lcall
inc
push
sbb
pop
xchg
dec
xchg
adc
fwait
outsl
out
loope
imul
sub
adc
lret
call
movsl
lahf
xor
lret
adc
fldt
pop
daa
in
sbb
daa
pop
push
or
and
gs
in
pop
dec
mov
int3
rdmsr
mov
pusha
or
fnstcw
out
mov
jmp
loope
sub
cmp
inc
fistpl
shlb
pushf
jl
pop
outsl
lods
ficompl
push
jno
in
push
lods
dec
sbb
pushf
jecxz
and
sar
add
adc
scas
aaa
sbb
pop
lock
adc
icebp
jns
in
int3
sbb
jge
es
fs
xchg
inc
scas
sub
cmpsb
lods
ljmp
out
cmp
dec
push
push
mov
mov
push
xchg
movl
mov
xchg
push
mov
jl
mov
in
xor
jbe
nop
jecxz
sub
std
ss
inc
pop
scas
int3
cld
imul
ja
mov
or
outsl
insl
in
mov
push
icebp
movsb
jb
out
es
sbb
mov
int3
aam
mov
sbb
into
push
pop
lock
lret
jecxz
inc
mov
xchg
out
xor
mov
out
mov
and
nop
rcll
jno
sub
push
sub
and
cmp
or
cs
scas
push
lea
sbb
in
leave
xor
dec
and
out
pop
add
xor
gs
lock
push
aas
xchg
pop
sbb
adc
sub
jb
pop
es
xchg
scas
int3
xlat
pop
dec
divb
mov
xchg
bswap
adc
mov
test
push
dec
andl
mov
fimuls
mov
fbld
ja
sub
imul
fcmovne
adc
test
jnp
movsb
fsubs
ss
mov
sub
icebp
pop
sbb
in
stc
test
cli
clc
push
pusha
or
outsb
imul
insl
ljmp
jno
pop
lcall
mov
outsb
xor
loope
or
movsb
pop
outsb
push
or
test
jbe
repnz
mov
lods
sbb
add
inc
pop
cltd
or
inc
pop
ljmp
cli
dec
repnz
mov
mov
mov
imul
add
shrl
pop
sbb
xacquire
add
rcrb
jo
shlb
cmpsb
xchg
dec
pushf
jbe
jns
fmull
popf
popa
cmp
test
mov
mov
aam
stc
es
xchg
pop
out
inc
cmp
sub
cmp
addr16
jl
pop
out
jge
shll
mov
or
popf
and
ret
outsb
in
lret
mov
addb
in
mov
mov
push
in
lock
add
sub
push
mov
loope
scas
aaa
or
mov
insb
pusha
dec
pop
push
les
or
popf
lcall
inc
mov
push
push
mov
popl
push
and
mov
jle
mov
iret
stos
adc
lds
bound
xchg
in
sub
push
mov
sbb
lods
dec
std
pop
shrb
jmp
mov
sub
loop
mov
sbb
inc
jno
dec
add
mov
daa
fstpl
mov
das
adc
outsb
jge
test
std
sbb
jo
lret
ss
push
out
loope
cmc
addr16
jl
loop
add
dec
xor
sti
xchg
fidivl
adc
mov
mov
cmpsb
lahf
arpl
insb
mov
mov
mov
test
mov
sbb
fidivl
mov
negb
mov
pop
sti
movsl
mov
clc
enter
mov
jno
add
push
dec
mov
mov
mov
push
cmp
aam
xchg
ljmp
into
rcll
pop
pop
xchg
sbb
add
cs
mov
dec
xor
or
mov
xor
pop
mov
cmp
xor
jno
iret
imul
or
shrl
test
push
pop
insb
add
sbb
repnz
ret
imul
xchg
xor
jl
xor
jbe
mov
mov
sbb
lret
cmp
icebp
mov
or
pusha
dec
lret
ret
xor
inc
adc
jne
imul
lret
xchg
rorb
fcomps
rcrb
push
inc
mov
pop
sahf
lahf
mov
ret
repnz
pop
loop
das
dec
out
sub
mov
jb
lea
lds
mov
xchg
lock
cmpsl
mov
cmc
jo
in
cmp
int
or
inc
in
in
movsl
ret
subl
mov
test
scas
lock
xchg
rolb
ja
stc
sub
dec
icebp
mov
mov
jo
mov
std
lock
ret
sbb
dec
jbe
int
loop
mov
jno
leave
sub
push
mov
jno
ret
inc
mov
out
jecxz
or
mov
jbe
sub
mov
push
repnz
dec
mov
in
adc
dec
cli
popl
mov
jno
imul
xchg
dec
dec
mov
or
leave
jge
mov
test
ret
mov
jno
jb
jnp
dec
adc
mov
daa
ljmp
mov
andl
dec
repnz
sbb
jg
push
push
pushf
test
out
xchg
add
rorl
jl
std
jb
or
lock
cmp
push
fsubrs
and
les
inc
push
mov
inc
popa
je
xor
adc
xor
scas
out
lods
mov
mov
xchg
nop
ljmp
push
sub
or
int
in
adcl
in
xor
ret
testb
pop
dec
and
mov
dec
popl
dec
jb
push
in
pop
jg
jl
aam
mov
icebp
imul
push
pop
sub
mov
push
scas
jbe
lods
xor
inc
jo
cld
fmuls
lahf
sub
dec
insl
lods
sub
arpl
loop
dec
or
pop
pusha
call
or
jb
mov
test
jns
or
divl
dec
cmp
in
aas
jne
mov
dec
sbb
insb
push
insl
imul
mov
mov
mov
lods
in
imul
pop
repz
sub
add
clc
mov
adc
popf
and
ficoml
clc
aaa
push
out
outsb
in
and
fisttpl
test
mov
lods
sbb
xor
jo
mov
or
shrl
imul
mov
jecxz
roll
sub
lcall
sbb
inc
mov
and
lcall
mov
push
dec
xchg
xchg
mov
sahf
sbb
dec
cs
adc
fucomip
mov
lcall
in
xor
sbb
mov
jno
or
sub
mov
sbb
or
and
cwtl
call
jmp
mov
adc
mov
push
mov
push
cltd
sub
sbb
fistl
push
movsl
enter
jae
dec
and
cmpsb
pop
fcmovb
dec
xchg
shll
mov
shl
xchg
add
jnp
or
sbb
fcmovu
outsl
jl
cmpsb
adc
aas
pop
push
dec
addr16
pop
insl
into
or
repnz
or
pop
jne
mov
iret
adc
mov
lods
mov
les
push
inc
sbb
mov
dec
imul
or
jae
and
and
sbb
pop
sbb
sub
gs
cli
pop
inc
ret
es
xchg
leave
outsl
xchg
in
mov
loope
jmp
pusha
mov
mov
les
int3
pop
pushf
mov
xlat
cmp
pop
scas
movlps
or
mov
lret
push
push
cmp
jmp
push
sbb
ss
jns
in
imul
xor
sarb
fldt
gs
in
into
push
iret
fnstenv
xlat
fldenv
xchg
ds
repnz
pushf
mov
adc
lahf
bound
pushf
xor
cwtl
ret
fcmovb
sub
or
addr16
fisubs
xor
int3
mov
lret
push
mov
sbb
mov
fwait
fs
stos
sub
pop
mov
addr16
sbb
cmp
scas
cmp
lods
or
lret
test
fmuls
xchg
cmp
dec
jmp
cld
in
pop
push
jno
mov
sbb
loop
lods
icebp
dec
inc
loope
sti
movsl
xchg
test
loope
mov
fwait
rorl
lods
stos
adc
lahf
ljmp
jecxz
loope
stos
jmp
or
popf
push
sbb
adc
icebp
inc
pusha
loope
push
scas
stc
inc
int
xchg
jo
add
mov
push
out
repnz
cmc
and
sub
push
jg
das
mov
repnz
scas
add
xchg
inc
xchg
out
arpl
leave
or
aaa
sbb
popf
iretw
loope
push
xchg
shlb
push
insl
jns
ss
mov
jl
ja
push
ret
or
push
sub
cmp
ljmp
imul
pop
dec
and
cmpsb
fdiv
ret
jl
fcmovb
ja
pusha
adc
iret
inc
roll
push
pop
mov
roll
repnz
adc
mov
xchg
mov
mov
sbb
push
out
sbb
repnz
imul
je
xchg
icebp
in
mov
adc
hlt
jne
jbe
in
mov
xchg
mov
pcmpgtb
mov
ror
imul
and
fldenv
jno
cmp
lea
enter
ss
sbb
cmpsl
ret
ljmp
jbe
push
ljmp
inc
rcrb
dec
inc
call
mull
jmp
dec
insl
mov
andb
mov
bswap
xchg
fsubrl
fs
sub
clc
xchg
out
hlt
loope
sub
mov
push
sahf
mov
add
push
movsl
ficomps
sbb
icebp
clc
push
jo
jb
or
sarl
stos
fldt
mov
xlat
fs
inc
movsl
sbb
lcall
icebp
and
dec
add
sbb
fdivrl
jae
mov
mov
pop
out
add
imul
mov
fwait
stos
sbb
lret
jmp
outsb
pop
sbb
xor
push
sbb
and
nop
mov
sbb
fstpl
daa
pop
sub
dec
xchg
test
mov
sub
pop
inc
repnz
add
lret
ds
inc
sahf
lea
pop
aas
cmp
in
stc
stos
test
popf
xchg
push
jp
dec
sub
lahf
dec
mov
push
fs
push
inc
decb
clc
dec
ret
inc
mov
mov
pop
xchg
lods
int3
push
fwait
or
cli
scas
loope
scas
loope
nop
sub
imul
pop
fwait
add
mov
ret
and
stos
fstpl
adc
and
fstpt
sti
sbb
mov
push
pop
decb
rcr
push
mov
xchg
xor
pusha
fadd
fwait
insl
movzbl
insl
negl
lcall
aaa
mov
call
fcoms
pop
pop
pop
stc
cli
dec
pushf
sub
repnz
rorb
test
xor
adc
jnp
jo
jo
inc
lods
jl
imul
xor
add
jno
je
arpl
cld
clc
lock
mov
mov
dec
filds
loopne
call
sbb
lcall
bound
adc
fisubrl
push
mov
xor
fcoml
imul
repnz
xor
ret
out
cmp
shrl
addb
jo
jg
dec
insl
sbb
mov
pop
adc
inc
dec
and
in
mov
mov
gs
pop
adc
pop
mov
jbe
and
or
inc
or
and
call
push
jb
mov
xchg
push
fistps
cld
jmp
adc
lret
jae
imul
clc
mov
loop
xchg
mov
ljmp
push
sar
mov
jecxz
sbb
xor
mov
sub
dec
jg
push
cmc
lock
jno
repnz
add
push
jnp
cmc
sti
jbe
dec
add
fsubrl
in
jle
es
test
sbb
iret
adc
pop
mov
mov
shrl
pslld
and
loopne
jge
sbb
shrb
bound
repnz
iret
popf
popa
fs
nop
lahf
loopne
int
push
insl
dec
sahf
arpl
stos
outsl
and
in
nop
cmpsl
sub
ss
lret
shrl
fbstp
dec
jo
out
sbb
fists
sub
dec
popa
mov
push
es
popf
sbb
mov
xor
mov
call
mov
mov
add
enter
andb
lret
frstor
push
pop
lret
add
movsb
scas
dec
lock
sub
dec
outsl
out
dec
repnz
and
lret
shr
movsl
out
dec
add
pusha
mov
mov
js
push
inc
mov
or
cmpsb
imul
cmpsl
jno
mov
pop
idivl
adc
pop
sbb
dec
xchg
push
mov
mov
int3
mov
mov
int
xchg
mov
xchg
pop
in
cmp
ret
movsl
xchg
pop
ss
shl
push
scas
stos
mov
dec
or
push
pop
xchg
leave
pop
rol
shl
in
mov
cmpsb
fcmove
sub
addr16
ja
xchg
dec
sbb
mov
pop
aas
and
cwtl
loope
mov
and
dec
dec
shll
push
mov
xchg
pop
lea
jbe
mov
xchg
ja
aad
xchg
add
xlat
mov
sub
scas
lods
ret
or
pop
push
dec
mov
sub
mov
pop
jle
mov
push
arpl
pop
pop
lods
and
test
out
inc
fs
imul
gs
sbb
fldcw
inc
call
stos
fsubrs
test
data16
xchg
dec
out
repnz
and
mov
lcall
sub
fildll
imul
and
aas
mov
push
dec
dec
push
stos
fs
out
mov
lock
out
icebp
repnz
in
in
into
inc
mov
add
add
mov
cmp
fsubrl
mov
rcrb
stc
adc
pop
fucomip
rcrl
or
loopne
pushaw
hlt
adc
in
inc
pop
aas
imul
icebp
in
es
mov
gs
xchg
subb
mov
mov
lods
mov
push
adc
shr
or
iret
lock
sub
push
out
outsl
mov
daa
int3
sub
gs
aaa
lcall
sbb
or
loopne
shll
cld
cmpsl
ret
dec
push
lcall
pop
and
fistpll
xchg
insl
pop
mov
cld
pushf
add
icebp
sbb
outsb
lea
hlt
jo
sub
mov
movsl
pop
jo
push
mov
pop
les
fstps
test
ja
adc
push
dec
popl
adc
jo
in
imul
movsb
scas
push
and
roll
jae
pop
mov
lcall
add
outsb
mov
cltd
pusha
data16
xlat
cmp
mov
fld
and
fwait
inc
add
xchg
sahf
testl
adc
fidivl
bound
gs
sub
jge
int3
cld
in
repnz
and
rcrb
test
or
mov
ja
mov
mov
xor
aad
dec
aaa
sbbl
pop
aad
addr16
scas
mov
frstor
imul
dec
rcrb
jno
sbb
mov
mov
adc
es
mov
inc
loop
ljmp
mov
xlat
bound
out
mov
mov
imul
inc
xchg
out
xor
out
mov
loope
icebp
scas
mov
inc
push
mov
sub
pop
cmp
sti
mov
xor
aas
mov
jmp
mov
mov
adcb
sub
imul
or
cmpsl
cli
sbb
shrb
fcoml
dec
lahf
or
mov
in
inc
mov
rcrb
mov
mov
jl
fwait
dec
fcoms
pop
imul
insl
and
cli
fwait
mov
cmp
mov
cmc
jbe
add
fnstsw
ds
adc
push
mov
in
imul
sub
inc
aam
jae
lret
jnp
lods
movsl
sbb
in
sub
xchg
and
push
in
cmp
bound
movsb
int3
ja
stos
out
and
loopne
xchg
cmp
mov
dec
ror
arpl
xor
enter
ljmp
sbb
jo
mov
jb,pn
out
jle
mov
mov
test
int3
sahf
fstpl
fsubrl
lock
sub
iret
jge
push
pop
imul
mov
movsb
or
repnz
out
int
rcl
icebp
and
cwtl
push
test
mov
or
lea
sub
inc
cmpsb
pop
outsb
jno
ret
lods
and
pusha
inc
fisubl
out
sahf
daa
and
repz
mov
into
adc
mov
imul
pop
imul
aad
loope
clc
pop
mov
jb
and
mov
jecxz
inc
and
sub
cmp
popa
mov
and
mov
xchg
in
jmp
lds
sub
mov
or
sub
jmp
arpl
lock
cmp
pop
ljmp
jne
jo
push
ret
pop
test
jbe
inc
mov
sbb
lds
dec
mov
les
arpl
push
jg
xor
cmp
sbb
sbb
jg
jmp
movsl
clc
movsb
shr
ret
or
into
mov
push
sbb
add
leave
stos
sahf
sti
mov
pusha
cmp
mov
add
lock
cld
icebp
mov
mov
mov
cmp
or
or
rolb
aas
out
ljmp
jl
xor
in
aaa
adc
sbbl
mov
outsb
sbb
mov
cmp
xchg
sub
dec
xchg
pop
cmp
sub
push
test
in
test
div
gs
adc
loopne
xchg
cli
and
add
jmp
or
lock
or
and
arpl
loope
loopne
sbb
mov
push
hlt
mov
fldl
movsb
sbb
mov
push
mov
jmp
stos
push
repnz
sbb
out
sbb
jl
repnz
cwtl
dec
icebp
fists
push
bound
dec
sbb
ret
pop
out
adc
cltd
in
xor
call
rclb
insb
sub
xorb
lods
call
mov
idiv
in
mov
dec
imul
add
hlt
divl
add
sar
cli
dec
cltd
dec
in
das
imull
scas
pushf
cmp
inc
sub
inc
scas
ss
aam
scas
aad
sbb
mov
lahf
bound
dec
or
mov
cmp
mov
lea
or
pop
pop
sbb
dec
xchg
pop
ljmp
mov
mov
lea
mov
fsubp
dec
cmp
inc
popf
jge
pop
sbb
sti
or
imul
lods
jbe
pusha
fnstcw
aad
push
or
and
movsl
fwait
pop
adc
cli
data16
lea
pop
push
insl
bound
and
inc
xor
inc
xchg
cmp
cmp
lds
push
pop
div
mov
pop
mov
xchg
xlat
icebp
and
mov
sti
adc
sbb
cmpsl
add
cmc
popf
jb
jno
dec
call
or
mov
xchg
dec
push
adc
pop
and
push
out
pop
lds
mov
adc
and
aad
notl
jns
mov
out
repnz
fdivrs
cmp
sub
pop
push
aad
loop
mov
leave
imul
sbb
inc
shrb
pop
add
je
jg
aad
push
subl
sbb
mov
push
lock
push
add
repnz
lds
jne
dec
outsl
bound
cmp
iret
popa
pop
leave
hlt
in
sbb
cmpsl
aam
into
sub
pop
mulb
daa
push
mov
mov
xchg
or
push
scas
and
lret
and
not
fisubs
in
frstor
sub
div
jo
ficompl
jo
jne
adc
test
xor
mov
lahf
fs
sbb
cltd
sub
cmp
or
std
cld
js
mov
icebp
dec
int3
mov
fs
scas
outsl
pushf
xor
xchg
xor
and
dec
push
add
add
or
jg
in
loope
xchg
pusha
push
js
pop
mov
dec
in
dec
xor
sbb
push
sub
in
xlat
nop
inc
in
je
icebp
movsb
lret
rcrl
lock
cmc
adc
repz
pop
mov
in
and
cltd
and
cmp
sahf
pop
negb
pop
cld
cmp
movsb
cmp
pop
add
dec
lods
int3
outsb
cs
nop
addl
lahf
xor
cmpsl
lods
push
dec
jle
pop
push
loopne
lds
fisubrl
adc
pop
ficoml
imul
xor
lret
dec
cmp
lock
stos
adc
or
stos
jb
out
sbb
xor
rorl
into
sbb
or
sbb
and
jo
inc
icebp
fsubrs
jo
int3
mov
pop
lock
xor
jecxz
jno
inc
jno
sbb
xchg
fcompl
in
aaa
nop
fnstsw
jp
and
pop
sub
call
jae
stos
or
mov
mov
fsubr
das
outsb
in
xchg
bound
rclb
sbb
sub
mov
sub
outsl
xor
mov
aaa
dec
imul
sub
push
jmp
adc
test
push
std
rclb
loopne
movsb
jp
adc
mov
loopne
xchg
ffree
dec
stc
sub
arpl
and
movsb
shlb
insb
insl
sub
mov
ljmp
sbb
inc
inc
icebp
xchg
imul
ljmp
dec
in
in
push
push
fs
jno
xchg
pop
shrb
adc
lods
pop
sahf
xchg
std
outsb
call
jo
mov
jno
jl
imul
popa
dec
lock
dec
into
dec
pop
fbld
adc
dec
pop
ds
movsl
rorb
jb
pusha
cs
outsb
movsb
icebp
sbb
dec
stos
fdivl
lds
pop
js
mov
scas
call
in
adc
jo
xor
notb
nop
pusha
sub
test
ljmp
repnz
or
in
out
aas
incl
push
adc
sbb
push
orl
inc
mov
and
cmp
cmpsb
sbb
cmp
call
or
cltd
push
cmpsb
mov
inc
xchg
inc
shlb
and
pop
fcmovu
mov
leave
in
push
xor
nop
sub
std
pop
pop
fisubl
push
xchg
sub
dec
test
xor
test
add
push
shll
pop
mov
dec
adc
or
xor
in
mov
fdivp
xchg
mov
out
pop
sub
ljmp
jo
inc
cmpsb
pop
mov
or
mov
gs
pop
xchg
sbb
and
lret
xor
pop
add
sub
push
call
lcall
sub
inc
inc
movsb
lahf
outsb
sbb
jnp
iret
shlb
cmp
mov
movsl
in
mov
push
dec
gs
sti
dec
jb
rorl
ficoml
gs
in
sub
bnd
jae
addr16
stos
ljmp
movsl
or
mov
push
xor
stos
xchg
cli
xchg
push
test
inc
cmp
inc
xor
repnz
pop
sbb
xchg
mov
mov
mov
pop
in
jmp
out
out
cli
pop
scas
into
nop
loope
fs
xor
data16
lret
filds
pop
or
dec
lret
mov
ret
add
jl
xor
xor
pushf
bnd
adcb
mov
loope
inc
movsw
mov
in
outsb
mov
add
int3
mov
rcr
sbb
daa
dec
js
cs
sti
mov
or
inc
push
outsb
arpl
das
xchg
mov
cs
xorl
insl
jmp
mov
xlat
sub
lods
into
dec
cmp
xchg
cld
sub
cmp
pop
insb
mov
jge
lahf
insl
or
rcrl
sahf
add
mov
lock
xor
lcall
jne
int3
gs
data16
push
push
adc
and
sub
dec
lret
sbb
pushf
sub
fistpll
fmuls
in
xor
pop
xchg
shl
insl
int
jbe,pn
push
xor
mov
lods
jnp
shrl
mov
and
icebp
shl
je
push
gs
jge
push
jg
outsb
xchg
mov
icebp
out
push
dec
outsb
cmp
fwait
pop
cmp
mov
and
popf
cmp
cmp
repnz
test
divl
pop
inc
cmpsl
or
out
cmovne
add
sub
daa
outsl
inc
push
enter
ljmp
fstps
lock
idivb
movl
jnp
cs
xor
mov
mov
int
aam
leave
and
xchg
mov
shl
cmp
addb
cmp
fs
outsb
pusha
loope
xor
mov
fwait
cmc
mov
enter
and
xchg
fidivl
pop
push
insl
mov
scas
add
push
es
push
jmp
cmp
int3
cmp
push
dec
popl
cmpsb
or
inc
add
lock
jno
mov
pushf
mov
in
add
js
or
or
mov
jns
sub
cltd
and
add
inc
add
xchg
stos
pop
aam
gs
cmpsb
add
add
int
and
dec
sbb
shll
mov
mov
rclb
jnp
ja
sbb
ret
xchg
test
mov
loop
dec
adc
add
pop
out
lock
popa
pop
lock
mov
pop
dec
out
in
call
mov
call
addr16
in
stos
dec
xchg
push
nop
sbb
add
jecxz
ret
in
icebp
pop
or
inc
rcrb
lock
pop
sbb
xchg
and
out
sahf
int
mov
sub
ja
and
mov
add
nop
dec
push
out
sti
mov
in
aad
test
nop
cmp
les
sar
ss
test
sbb
les
jl
and
insl
jmp
pop
mov
adcb
mov
cmp
sbb
push
iret
sub
mov
popf
lea
jp
mov
mov
mov
aaa
mov
push
xlat
xchg
ret
inc
add
mov
dec
xor
pop
jle
xchg
mov
shrl
out
aaa
repnz
or
mov
lock
inc
mov
jns
shlb
sbb
jnp
pop
xor
xor
pop
outsb
jg
imul
lret
loopne
fs
push
mov
xorl
jae
or
call
xchg
cwtl
in
sbb
addr16
mov
adc
divb
mov
pop
scas
jno
pop
in
pop
or
mul
stc
mov
popf
icebp
dec
xlat
inc
mov
loop
jns
cli
loope
in
shrb
mov
dec
loop
push
add
in
or
icebp
popf
mov
add
mov
in
mov
jne
cli
outsb
inc
sub
roll
push
mov
ja
mov
imul
lahf
adc
xor
movsl
cmp
clc
or
mov
out
subb
mov
jns
push
stos
out
imul
sbb
mov
sub
add
pop
pop
lock
mov
outsl
push
add
ljmp
jne
int
xchg
mov
push
cmc
int3
jno
mov
xchg
dec
dec
aaa
stos
scas
lock
mov
mov
mov
idivb
loopne
aas
insb
sbb
add
xor
movsb
cmpl
test
push
popf
push
adc
stos
push
push
repnz
dec
push
mov
add
sub
sbb
sub
enter
stos
jne
repnz
mov
mov
lods
adc
scas
mov
lcall
and
clc
push
mov
lcall
sbb
movsb
fnsave
cmp
mov
jle
pop
xor
mov
les
jge
mov
in
cmpsl
jbe
mov
in
dec
stos
mov
out
mov
pop
adc
adc
dec
sbb
xchg
cmp
es
outsb
movsb
into
addr16
loop
push
aas
sub
data16
das
fsubrl
ljmp
inc
fwait
sbb
in
subb
test
add
out
leave
cmp
jae
jle
jmp
test
or
scas
jo
lahf
repnz
adc
dec
sub
cld
sbb
fwait
lcall
push
cmp
fldt
sub
ljmpw
jecxz
out
pusha
fisttpl
into
xchg
ljmp
add
push
pop
fs
mov
fstl
mov
loope
sub
je
xchg
cs
pop
mov
fldt
fidivrl
and
je
ficoms
push
jnp
mov
stos
sbb
movsb
mov
jo
push
mov
add
push
mov
lret
mov
pushf
xor
push
xchg
pop
jp
lea
dec
imul
or
mov
in
in
mov
mov
mov
popf
adc
bound
fmul
jge
es
sbb
orl
add
mov
xor
xlat
nop
sub
or
sub
ficoml
cmpsl
adc
add
aas
dec
mov
adc
sub
cmpsb
pop
xchg
stos
jp
rolb
mov
push
stos
mov
dec
jge
scas
icebp
sbb
aas
sub
mov
and
push
lods
rol
sbb
out
adc
sbbb
je
divb
mov
es
lret
jb
or
adc
pop
sub
outsl
or
xor
xor
bound
imul
or
inc
mov
xor
fs
popf
mov
push
pop
xor
fidivs
inc
data16
pop
hlt
popf
sbb
jp
es
mov
loop
mov
mov
pop
jp
inc
mov
popf
jge
push
lods
cmpsb
mov
scas
inc
add
sbb
in
xchg
insl
sub
push
movsl
jne
xchg
mov
inc
push
lahf
stos
shlb
dec
clc
pop
jne
lahf
lcall
jecxz
aam
push
mov
pop
or
aaa
dec
out
insl
xchg
repz
jnp
inc
arpl
adc
and
lock
out
sbb
imul
movsl
repnz
les
popf
dec
das
inc
or
shlb
mov
xchg
fcmove
test
lahf
rcrl
lods
mov
loope
and
lock
add
icebp
mov
pop
xor
and
push
sub
rcrl
stos
stos
mov
mov
lds
adc
sbb
lock
nop
insl
add
sbbl
lods
mov
jmp
cmpsl
pop
in
mov
sub
icebp
dec
jb
adc
mov
push
push
lea
cmp
sbb
xor
add
cmp
mov
sti
and
faddp
inc
inc
sub
aad
imul
popa
ret
add
pop
cs
outsb
and
into
lcall
dec
pushf
test
pusha
fnstsw
lock
rcrb
mov
mov
jo
insl
add
dec
jno
jmp
pop
es
inc
inc
jno
aad
mov
rcrb
inc
fs
adc
int3
cmpsl
mov
lcall
dec
mov
mov
cmp
test
lods
inc
or
mov
repnz
sbb
fwait
xor
es
sbb
scas
testb
in
sahf
add
dec
in
jne
mov
pop
loopne
inc
xor
pop
pop
pop
push
push
push
aam
xchg
push
xchg
movsb
repnz
cmpsb
mov
fsubp
sbb
testl
data16
jle
push
call
movsl
lret
loope
pusha
or
mov
orb
push
dec
in
jp
push
inc
fistl
dec
cs
add
lods
repnz
in
cmpsb
es
xorb
push
mov
aas
cmp
push
mov
shll
enter
xchg
sbb
fidivrl
mov
lods
add
push
mov
push
roll
adc
pop
ja
inc
mov
icebp
loope
cmc
sub
ret
sbb
in
imul
fisubrs
movsb
pusha
mov
push
in
pop
call
dec
stos
movsb
adc
movsl
xor
bound
and
xchg
test
gs
das
hlt
hlt
aam
cmpb
push
mov
cmp
mov
add
mov
aam
or
mov
fwait
nop
xchg
icebp
push
sbb
push
sub
sub
mov
mov
in
xlat
stos
and
jg
repnz
cmp
aaa
in
sbb
rorl
divl
sbb
adc
adc
mov
cmp
into
dec
sbb
arpl
jns
mov
push
cmp
std
and
mov
dec
sbb
loopne
push
into
jbe
jp
jmp
mov
lret
cmp
inc
xor
test
dec
and
xchg
in
ljmp
adc
mov
cmp
test
loopne
lcall
or
add
test
pop
popf
decl
jmp
loop
lods
xchg
xor
mov
stos
stc
bound
fists
mov
inc
pop
mov
jle
jo
dec
mov
jb
cmp
popf
mov
xchg
arpl
mov
push
dec
adc
ds
lock
fwait
push
imul
pop
in
dec
cwtl
or
mov
subb
push
arpl
scas
loop
ja
cmp
push
lea
jb
xor
add
mov
mov
or
push
es
cli
push
push
adc
ds
cmp
inc
in
adc
cs
jle
mov
arpl
fidivl
jmp
cmp
clc
or
enter
lods
addr16
rorl
notl
mov
mov
sbb
add
jnp
movsl
cmpsb
popa
adc
xchg
addl
lock
rorb
push
movsb
stos
outsb
push
lahf
and
pop
fnstsw
push
xor
in
and
push
aad
cmp
pop
jmp
and
xchg
in
pop
xor
repz
add
cwtl
jl
add
sbbl
ret
loop
push
sub
mov
push
not
in
das
dec
insl
daa
mov
or
arpl
push
int3
push
out
cmp
jmp
cmp
mov
fnsave
scas
mov
inc
xchg
int
push
addl
inc
clc
add
mov
lahf
inc
shlb
xor
pop
test
or
int3
movsl
cmp
jmp
or
mov
lds
adc
mov
push
mov
fbld
xchg
sub
movsl
data16
mov
xor
dec
repz
divb
lea
lods
or
xor
mov
and
mov
imul
pop
or
outsl
adc
test
in
mov
test
stos
adc
bound
jno
enter
and
or
scas
data16
sarb
mov
and
sahf
mov
mov
jae
mov
aas
mov
jp
sbb
repz
mov
test
sarb
add
repnz
mov
xchg
push
rorl
scas
sub
add
es
iret
rorb
or
and
adc
mov
dec
sbb
and
cmp
inc
inc
pop
mov
mov
js
mov
mov
insb
or
gs
adc
pop
or
hlt
mov
dec
sub
sbbl
mov
stos
ljmp
and
out
repnz
scas
loope
pop
pop
mov
bound
outsb
repnz
ljmp
lods
outsl
sbb
mov
mov
rclb
and
push
std
fiaddl
cmp
out
cmc
loope
pop
cmpsb
push
stc
mov
or
stos
loope
insl
inc
loopne
cmpsl
jo
inc
push
sbb
add
sar
mov
gs
pop
sub
inc
pop
xchg
sti
xchg
lcall
push
lods
in
jb
adc
out
out
das
pushf
mov
or
adc
fldt
jle
jge,pt
lock
cltd
ret
dec
mov
sbb
movsl
dec
sbb
sub
loope
adc
dec
xchg
push
fwait
and
pop
xor
adc
popa
push
shrb
and
enter
add
scas
lret
hlt
fmull
xor
in
repz
and
arpl
adc
pusha
data16
jecxz
push
sub
cld
sub
frstor
sbb
sub
dec
xor
mov
stos
mov
ljmp
es
jl
mov
dec
pop
or
pop
call
add
adc
aaa
mov
stos
or
inc
or
bound
dec
test
cmp
cmp
cld
or
mov
xchg
mov
xchg
data16
pop
bound
jbe
pusha
add
fists
repnz
pop
cld
xchg
sub
fstl
pop
cwtl
lahf
repnz
test
mov
cli
push
repnz
sbb
or
pop
dec
fbld
push
outsb
pop
arpl
cmc
xchg
or
jecxz
xchg
mov
pusha
ficoml
and
push
data16
jb
add
mov
dec
outsb
pop
lahf
xor
add
ds
stos
ret
negl
sub
xor
mov
mov
loope
movsl
xchg
in
imul
xor
jnp
cs
repz
pop
pop
or
sbb
and
sub
push
jp
in
cmp
lds
or
jecxz
xchg
dec
pop
sahf
movsl
push
aas
xchg
outsb
mov
imul
cld
mov
popa
sub
push
adc
xchg
and
pusha
add
test
mov
inc
iret
mov
cltd
adc
iret
mov
or
dec
repnz
sub
and
out
cld
mov
pushf
cmpsl
filds
or
pop
loop
jb
pop
mov
icebp
push
cmpsb
stc
xchg
dec
push
in
xlat
add
inc
or
xchg
jnp
sahf
add
lock
aad
lods
dec
mov
gs
push
shll
movsl
pop
jb
dec
add
bound
sbb
stc
jle
inc
pop
mov
das
adc
in
mov
xchg
sub
dec
cwtl
dec
jbe
xor
int
test
xchg
cli
cmp
mov
inc
xchg
push
sub
mov
lock
mov
test
xchg
adc
push
jge
fwait
push
test
sbb
pop
cli
mov
addr16
popa
scas
out
sub
cmp
cmp
lret
in
mov
insb
and
xor
mov
xor
shrl
shlb
or
pop
mov
inc
movsl
mov
inc
mov
imul
sbbb
repnz
xchg
pop
jo
pop
lods
bound
mov
and
out
es
repnz
lcall
xchg
jmp
loope
mov
lds
pushf
jg
mov
in
pop
mov
push
or
mov
push
push
jno
sbb
xchg
mov
notb
je
sub
cld
adc
pop
daa
jge
in
icebp
mov
mov
ss
jecxz
in
jecxz
jbe
mov
push
or
sbb
xchg
lds
mov
mov
and
cmpsl
mov
mov
int3
mov
adc
and
sahf
daa
push
es
cmp
sbb
xor
or
adc
cli
in
push
or
sbb
add
jl
int3
hlt
adc
rol
cmp
aaa
in
fsub
outsl
lcall
add
std
mov
cmpsb
repnz
pop
sub
mov
xor
data16
lock
imul
outsb
pop
mov
adc
sub
loop
ret
pop
in
mov
mov
sbb
or
cli
sub
imul
sbb
push
sub
or
std
mov
sbb
adcb
pop
jns
fcoms
repnz
popf
xor
into
inc
movsl
mov
in
fisubl
mov
fidivrl
push
or
push
pop
mov
stos
insl
in
ret
mov
int
add
sbb
stos
add
mov
jmp
xor
lcall
outsb
cld
out
cwtl
and
mov
mov
sub
andl
orb
xchg
out
lret
sub
mov
sub
sub
cmp
movsb
and
notl
pop
sbb
insl
lret
xchg
fcoms
outsb
rorl
adc
icebp
adc
xchg
jp
pop
mov
and
mov
bnd
iret
jp
insl
les
cmp
test
adc
sbb
int3
out
pusha
jno
sbb
sbb
jmp
dec
or
pop
nop
mov
push
outsl
outsb
test
adc
rcrb
ljmp
lret
addr16
cmp
cltd
adc
mov
mov
icebp
mov
arpl
pop
outsb
int
or
xchg
push
orb
cmpsl
fwait
cld
mov
adc
jbe
fst
inc
sbb
movsb
imul
pop
shl
add
sub
shlb
sbb
mov
or
mov
mov
adc
sbb
sbb
lods
test
mov
arpl
lcall
and
sahf
xchg
sub
xchg
dec
sbb
outsb
ret
mov
lret
push
cwtl
xor
and
pop
inc
pop
add
js
out
lods
jcxz
sub
add
dec
iret
pop
add
sub
aaa
adc
adc
sbb
test
xchg
jge
xor
push
push
lret
in
xchg
popf
jbe
imul
std
in
or
repnz
shll
mov
popf
jmp
sbb
sub
sbb
and
xor
orl
ffree
test
and
mov
mov
leave
or
or
xchg
js
into
or
cwtl
and
push
fwait
xor
or
push
fdivr
fisttpl
in
repnz
sbb
mov
imulb
dec
and
int3
jbe
in
in
jo
stos
int3
cmp
adc
mov
movd
into
adc
fadds
mov
in
mov
nop
push
mov
cwtl
xchg
lock
and
pop
mov
notl
mov
lret
dec
xorb
aam
or
xchg
inc
das
lds
push
iret
cld
adc
es
or
out
adc
xor
pusha
test
arpl
in
xchg
bound
int
popa
sbb
ror
andb
jle
jb
shll
mov
jbe
dec
imul
jp
mov
and
pop
in
loopne
jmp
lods
icebp
jmp
sbb
loope
cmp
rorb
in
idivb
aad
or
xchg
and
repz
mov
xchg
push
and
push
mov
fucomip
mov
push
mov
subl
adcb
rclb
mov
push
icebp
xchg
sub
xchg
stos
pop
aaa
jbe
fsubr
in
cmp
fs
lods
add
rcrb
xor
movsl
repz
fdivs
push
fwait
out
repnz
loope,pn
push
loope
mov
or
in
jae
mov
divl
rcrl
xchg
in
or
fsubl
pop
sub
sbb
adc
inc
and
in
xchg
mov
mov
add
int
cmp
jo,pn
lea
adc
js
and
xor
jo
mov
repnz
lods
or
pop
add
out
repnz
fnstcw
dec
xor
jle
xchg
mov
adc
jmp
sub
add
repnz
and
dec
mov
mov
dec
pop
fnstcw
add
scas
lods
pusha
xchg
push
xor
sbb
lods
nop
mov
sbb
int
add
jbe
sub
orl
sbb
mov
xchg
fidivl
sbb
lods
mov
movsl
icebp
sub
or
mov
fsubl
mov
add
push
jle
arpl
fnstsw
mov
sub
mov
test
in
outsl
sub
adc
xlat
scas
xor
loop
sub
mov
test
fisubs
int
add
out
repnz
rclb
arpl
sub
gs
jmp
pop
mov
xlat
lock
popf
fs
mov
mov
jmp
cmp
test
push
jecxz
shlb
clc
mov
mov
cmp
out
sbb
sbbl
cmpsl
push
add
sbb
and
lret
sub
insl
int3
jne
ret
ffree
or
push
jo
add
lcall
insl
sub
orb
mov
adc
sbb
rcrb
sbb
bound
inc
in
pop
js
lock
xor
lods
stos
xchg
nop
stos
ljmp
lret
out
mov
jmp
and
push
stc
fsubrs
loopne
lcall
lods
sub
mov
sub
pop
inc
out
nop
mov
and
cwtl
cmpsb
and
and
sahf
pusha
pop
scas
lods
push
inc
js
loope
add
push
les
and
cltd
pop
in
or
mov
sub
sbb
dec
cld
sbb
xor
pop
in
sub
xchg
inc
mov
and
jno
jbe
in
add
lret
ret
dec
fwait
fs
sub
push
dec
jb
sbb
mov
stos
int
jo
or
or
sub
mov
adc
mov
jne
fimuls
jp
pop
mov
adcl
sub
out
cmp
and
daa
imul
lds
in
sub
mov
test
sub
jns
dec
jbe
jbe
or
mov
pop
cmp
or
sti
or
lock
cli
jmp
fsubs
pop
in
xchg
cmp
sbb
fidivrl
popf
jns
dec
insb
mov
and
dec
stos
push
out
jo
lods
fwait
mov
mov
xchg
aas
and
mov
inc
adc
mov
repnz
out
push
repnz
mov
fisubl
push
or
adc
fldcw
sbb
and
repnz
loopne
add
adc
push
test
repnz
jecxz
notb
sub
cmc
push
adcl
mov
repnz
jae
ljmp
in
stos
dec
das
and
outsb
repnz
and
arpl
sbb
out
pop
mov
mov
xchg
mov
adc
cmp
cld
cmp
adc
pushf
pop
fisttps
mov
scas
xchg
repnz
pop
push
push
sbb
mov
adc
filds
adc
pop
dec
cmp
xor
push
loopne
cwtl
notl
mov
shl
repnz
jns
adc
inc
scas
xlat
mov
push
push
lds
imul
popf
push
adc
mov
insl
mov
sub
cmpsb
xchg
pusha
hlt
out
in
fnstenv
inc
hlt
mov
popf
fiadds
mov
or
add
mov
pop
push
inc
dec
negb
dec
push
or
mov
inc
in
mov
lahf
mov
movsb
data16
lods
and
mov
shlb
add
rorl
or
fs
xchg
ss
iret
imul
jo
jbe
mov
sbbb
sti
push
movlps
xlat
or
jne
push
mov
outsb
sbb
ljmp
stc
aas
gs
mov
in
outsb
mov
add
clc
iret
add
stc
cmp
mov
loop
xchg
jecxz
xor
stos
mov
test
inc
test
aaa
pop
dec
mov
movsl
mov
dec
jbe
hlt
xchg
pop
mov
sti
add
and
mov
clc
pop
fwait
daa
mov
push
ljmp
incb
in
insl
jle
jo
icebp
int3
loop
cld
incb
das
add
push
xor
mov
jecxz
push
mov
pop
sub
dec
mov
fidivrl
and
push
ljmp
sub
dec
dec
mov
xchg
push
jbe
not
pop
jne
js
push
lock
mov
xor
dec
scas
mov
pushf
addl
mov
loope
jae
push
jb
mov
mov
xchg
xchg
inc
iret
push
fbstp
dec
mov
sub
rcrl
mov
sub
ja
mov
cmpsl
adc
push
imul
mov
adc
cld
pop
mov
mov
pop
cwtl
mov
out
xorb
test
add
sbb
or
fsubrs
sbb
ret
mov
cmpsl
xchg
lock
les
repnz
in
sbb
push
adc
scas
imul
push
in
in
jnp
cltd
cmp
mov
icebp
push
xchg
sub
dec
and
sarl
movsl
cltd
data16
data16
or
sub
cmpsb
nop
pop
jo
mov
fwait
insl
xor
dec
hlt
mov
popa
mov
and
pop
xchg
cwtl
in
push
dec
pusha
mov
xor
push
jo
lret
jb
inc
cld
push
in
arpl
imul
hlt
fwait
daa
mov
lea
xchg
stos
add
daa
xchg
add
popf
jge
mov
cmpsb
in
push
xchg
lods
mov
pusha
jns
xchg
sub
pop
pop
divb
es
icebp
pop
enter
xorl
fcmovne
inc
mov
lcall
mov
mov
out
push
gs
jecxz
movsb
decl
movsl
ds
inc
add
fidivrs
mov
sub
mov
inc
test
or
sub
lret
and
daa
ljmp
mov
sub
pop
push
mov
in
jns
stos
leave
movsl
pop
stos
lret
and
pop
das
add
fwait
or
lcall
mov
fldenv
outsl
bound
sbb
adc
sub
mov
rorl
cmpsb
pop
mov
fildll
xor
pop
mov
cmp
mov
cmpsb
mov
inc
sarl
mov
rcrb
sub
das
cmp
mov
lcall
mov
mov
push
push
inc
mov
sti
mov
inc
xchg
add
inc
gs
popa
mov
lret
fdivp
and
push
adc
out
sbb
cli
sahf
push
mov
push
lock
jecxz
push
xchg
sbb
push
loop
shl
lods
jl
stos
scas
xchg
push
mov
aam
negl
stos
xchg
scas
movsl
sbb
ljmp
outsl
das
xor
mov
stos
dec
movsb
faddl
push
data16
jp
or
imul
inc
das
mov
add
shl
push
mov
jmp
mov
jb
mov
gs
pop
fs
sub
adc
dec
sbb
sub
in
outsl
bound
and
jl
xor
int3
cld
sub
loope
cwtl
mov
divl
adc
mov
mov
mov
insl
xor
jb
sub
and
pop
leave
sarl
mov
xchg
icebp
mov
sub
jb
pop
sub
repz
dec
xor
dec
cmp
pop
cmpsl
sub
adc
xor
and
mov
mov
repz
jo
sbb
adc
pop
outsb
jl
pop
or
pop
xor
sub
dec
insl
lahf
stos
mov
push
push
sub
jp
push
sahf
add
mov
cmp
mov
nop
fwait
imul
and
orb
xchg
stos
popf
mov
cld
pop
fwait
xor
xor
shl
xor
inc
int
sar
pop
or
jno
mov
sub
aaa
dec
sbb
cmp
lock
stos
popf
aad
mov
mov
call
lret
pop
and
xchg
arpl
push
xor
lods
sbb
mov
push
es
jns
lods
add
mov
mov
repnz
fisttpl
lods
mov
sub
mov
ja
inc
mov
int3
pop
in
rcrl
pop
mov
sbb
jp
mov
or
js
lea
mov
xchg
sub
sbb
repnz
push
cmpsl
mov
fsubrs
scas
xchg
mov
dec
adc
fs
and
loopne
movsb
stos
test
xchg
cmp
aad
pop
push
out
pop
outsl
es
notl
cmpsl
call
ja
jp
insl
push
jno
cmpsb
lcall
sarl
icebp
or
dec
and
out
ss
call
adcb
jle
js
push
sbb
loopne
rcr
nop
inc
pop
ljmp
or
sub
sub
jno
mov
outsb
lret
sbb
pop
fisttps
push
test
jo
out
repnz
movsl
push
xorl
adc
outsb
in
fnstcw
adc
movsb
or
les
mov
sbb
stos
xchg
adc
sub
jecxz
and
jo
pop
testl
lcall
xchg
test
pop
jp
loop
inc
icebp
sbb
dec
aaa
fiaddl
xchg
insl
cmc
pop
jno
or
repnz
into
push
sub
iret
push
pop
repz
pop
pop
jmp
pusha
pop
jne
jno
arpl
pusha
scas
sbb
aam
aaa
jp
mov
lock
mov
call
lock
cmp
lods
pop
mov
cli
ret
mov
mov
test
add
aad
nop
or
mov
cmpsb
mov
and
movsb
mov
lahf
pop
das
dec
dec
arpl
outsb
cmpsl
push
adc
lcall
leave
adc
in
int
into
outsb
and
pop
and
out
fstpt
inc
xlat
dec
pusha
or
fistl
out
lds
sbb
dec
loop
out
mov
lahf
sahf
subl
inc
call
out
es
sbb
mov
in
mov
bnd
test
push
sub
fs
sub
inc
lock
xor
or
lods
pop
sbb
mov
jbe
outsb
mov
leave
loop
dec
mull
loop
out
imul
lock
ss
xor
mov
lahf
ret
repnz
jg
sub
cmp
jp
orb
mov
fpatan
push
pop
push
mov
lods
rolb
sbb
cmpsl
mov
cmpsl
ljmp
cmpsb
push
fwait
xor
pop
imul
sub
movl
imul
mov
daa
inc
hlt
nop
fwait
aas
xchg
or
cli
fwait
sbb
in
cmp
ss
outsl
mov
add
int3
mov
push
dec
sbb
movsb
push
mov
or
icebp
imul
sbb
orl
mov
jp
lea
cwtl
inc
dec
push
sbb
sub
rcrb
daa
ss
icebp
out
outsl
mov
pusha
bnd
stos
pop
imul
xor
daa
outsl
xchg
cmp
dec
and
mov
jmp
adc
loopne
cli
xchg
mov
lods
and
mov
inc
stos
xchg
jns
outsb
push
mov
sbbl
mov
sbb
sub
sbb
popa
pop
mov
and
sbb
add
cmc
jno
imul
repnz
fisttps
push
push
cmpsl
lret
test
gs
pop
sub
and
inc
aaa
lods
sahf
hlt
push
cmp
mov
movsl
pop
notl
pusha
push
mov
sbb
add
xor
iret
mov
es
pop
fs
and
cmpsl
jo
stos
mov
mov
repnz
nop
jb
pop
sbb
bound
mov
or
inc
dec
jecxz
bound
es
in
or
xor
testb
loope
in
xlat
mov
and
aam
ljmp
test
call
lock
subb
xchg
mov
stos
outsb
adc
jbe
adc
adc
in
repnz
popa
sbb
movsb
mov
jno
adc
inc
jns
xchg
mov
adc
pushf
pop
in
mov
test
int3
jp
sub
adc
mov
pop
ds
adcl
and
xor
inc
and
jle
add
sti
jp
xlat
hlt
jp
in
mov
cmpsl
push
mov
nop
xor
subl
jmp
negl
ljmp
int3
xchg
adc
mov
jp
xchg
ljmp
pop
mov
js
mov
xlat
pop
inc
lea
and
adc
repz
dec
lcall
xor
push
pop
fwait
or
arpl
adcb
inc
ja
lret
xor
stos
jg
popa
push
mov
lods
pop
push
xorb
sti
or
fisubl
fsubrs
adc
and
testb
dec
lret
je
movsb
inc
add
cs
and
loop
dec
jnp
sbb
test
stos
jno
cld
sti
xorb
test
add
inc
addb
shrb
mov
push
pushf
sbb
dec
mov
pushf
cltd
outsb
or
pushf
outsb
dec
mov
jb
xor
movsb
push
bnd
mov
dec
pushf
mov
sbb
leave
stos
out
jmp
pusha
les
and
js
incl
out
repnz
stc
mov
mov
int3
ljmp
cltd
gs
pop
xchg
ss
jne
frstor
inc
in
addl
bound
cmpsb
xchg
scas
test
pop
mov
lds
xchg
es
ret
push
inc
sub
mov
cwtl
cli
outsb
jns
in
pop
ss
or
adcl
movsl
aas
push
imul
jo
dec
nop
jl
repnz
mov
pop
insl
add
sbb
lahf
xor
into
xor
sahf
dec
push
insl
mov
add
imul
push
jno
add
pop
pop
sbb
adc
adc
mov
pop
clc
dec
test
stos
dec
jne
outsb
dec
mov
sbb
repnz
jns
sbb
or
add
xchg
lcall
sub
ss
ficoms
xor
cmp
popf
sbb
add
out
lock
lret
sarb
jle
lock
lcall
repz
fwait
arpl
out
push
imul
hlt
data16
pop
loop
mov
mov
or
or
pop
jo
lock
mov
outsl
dec
loop
sbb
jb
or
fimuls
scas
cmp
int3
es
fdivs
in
pop
cmp
out
movsb
fmull
es
int3
push
pop
and
lcall
loop
and
xchg
gs
pop
ja
cmp
xor
call
idivb
pop
add
mov
call
xor
sbb
aaa
stos
lret
cmp
aas
pushl
movsl
clc
lods
pop
inc
and
dec
testl
jo
in
outsb
adc
sbb
push
pop
loopne
gs
inc
es
outsb
and
lods
dec
xor
mov
sbb
rorl
insb
cli
out
hlt
xor
jo
sub
mov
mov
and
ss
fwait
cmp
movsb
outsb
ja
int3
stos
dec
dec
or
and
jo
pop
ret
sbb
int3
jbe
adc
lret
xlat
addr16
cmp
lea
jno
xchg
or
push
mov
and
lret
movsb
sub
mov
insb
cmpsb
fildll
inc
xor
lcall
inc
sbb
and
punpckhwd
cmp
lods
insl
mov
add
xor
xor
mov
xchg
pop
cmpsb
imul
cmp
sub
popw
adc
iret
cmp
adc
mov
fsubrs
dec
pop
jno
inc
add
and
popl
scas
xchg
mov
call
jnp
fists
mov
mov
scas
in
or
lea
xchg
mov
or
mov
mov
loop
add
cmp
pop
fs
add
call
inc
dec
mov
jbe
sbb
sbb
pop
push
mov
add
lods
mov
cmc
sbb
fbld
dec
scas
and
mov
xor
push
nop
add
push
test
jb
lahf
and
stc
sub
inc
stc
shlb
test
mov
push
imul
shlb
lret
fs
cmp
pop
adc
sub
or
mov
pusha
cmpsb
mov
mov
sbb
mov
fsubs
sbb
mov
es
and
xor
push
fstps
cmp
mov
scas
cmpsb
cmp
mov
cmpsb
lcall
stos
loope
dec
imul
in
sub
loope
and
clc
popf
add
int
jl
adc
fldt
js
shlb
cmp
xor
sub
and
cli
dec
in
jnp
jo
mov
shrb
stos
in
dec
and
repnz
mov
mov
mov
push
mov
sbb
data16
and
icebp
outsb
movsl
sbb
shl
in
and
cltd
and
sahf
pusha
mov
mov
mov
cmp
cmp
adc
inc
and
lods
adc
and
mov
inc
xorb
push
pop
pusha
bound
jb
les
movsl
mov
dec
pusha
inc
pop
int3
inc
push
sbb
pop
les
ret
cld
sub
cmc
ret
out
int3
sub
mov
pop
or
and
aaa
lcall
mov
dec
mov
repnz
scas
push
aad
push
ror
jno
aaa
push
lea
inc
fcompl
xchg
outsl
xor
xor
cmpsl
mov
int3
mov
mov
in
pop
adc
sub
aas
stos
or
imul
inc
cmp
in
mov
pusha
stos
cld
xor
mov
arpl
ret
mov
mov
icebp
das
add
inc
sub
mov
ss
sahf
lods
in
dec
push
jo
push
sub
mov
mov
mov
and
xor
xor
imul
dec
cmp
call
xchg
je
imul
sbb
dec
mov
cli
arpl
bound
repz
inc
cs
dec
lock
and
outsb
aad
sbb
xchg
arpl
out
das
shlb
lcall
mov
lds
cs
nop
fdivs
push
jb
int3
das
fwait
insl
sbb
aas
add
sti
sbb
mov
test
outsb
mov
inc
fbld
adc
jb
loopne
in
popf
jne
lret
movsb
movsl
pop
imul
mov
lahf
mov
not
shll
sbb
cmc
repz
cmp
popa
repnz
movsl
push
aaa
scas
jmp
inc
xor
loopne
lock
lcall
dec
pop
add
in
mov
push
add
dec
sbb
scas
sbb
int3
movsl
and
jge
and
jb
and
cmpsb
sbb
lock
xchg
gs
insl
arpl
add
pushf
cmp
add
out
loope
js
cmp
lock
nop
call
jae
pop
mov
push
loopne
fbld
pop
scas
jb
movsb
leave
fidivl
lcall
cld
xorl
sbb
add
pop
sbb
out
lds
movsl
in
ret
xchg
push
adc
sub
cmp
addr16
sbb
and
xchg
sub
sub
jl
cld
fisubl
sbb
inc
and
push
or
xchg
or
mov
mov
cld
jne
add
xchg
push
sub
mov
lret
je
push
add
add
jno
ss
imul
pop
cld
int
dec
inc
add
jns
fwait
shlb
mov
movsb
mov
clc
inc
or
and
loopne
inc
sub
pusha
mov
repnz
push
push
lcall
idivb
imul
xchg
outsb
mov
repnz
jo
and
mov
push
sub
test
jno
repnz
test
scas
xchg
mov
insb
in
pop
in
or
daa
dec
shlb
insl
inc
ficompl
push
push
imul
ss
out
and
test
ffreep
movsb
inc
sub
leave
mov
arpl
adc
add
popf
out
rol
in
mov
mulb
ss
popf
and
inc
or
add
std
sub
bound
aad
scas
and
xor
mov
xchg
add
pop
std
test
nop
ljmp
hlt
xchg
hlt
inc
add
mov
cmc
jbe
and
mov
cmp
int3
fstpt
mov
jecxz
in
imul
cmp
shlb
aad
loopne
xchg
movsb
popf
mov
xor
test
aad
lock
pop
lock
sbb
inc
push
insl
dec
mov
andb
sbb
jae
movsb
pop
adc
mov
rcr
jo
xor
jbe
push
push
ret
loope
cmp
sbb
imul
bound
sbb
add
lret
outsb
inc
scas
jb
into
pushf
pop
add
inc
dec
movsb
icebp
cmp
cmp
aaa
addl
inc
add
ror
add
xor
imul
sbb
sub
sub
scas
push
mov
fisubrl
pusha
repnz
xor
sahf
cmpsb
stos
push
aaa
xorl
push
lea
fidivrs
xor
je
sbb
sub
inc
repnz
cmp
dec
out
mov
adc
gs
pop
push
ret
movsb
mov
xchg
negb
pusha
adc
out
mov
testl
sbbb
scas
dec
icebp
incl
repz
imul
pop
mov
inc
arpl
adc
adc
sbb
mov
dec
pusha
fnstsw
xchg
lret
std
dec
xor
gs
in
pop
add
imul
rcrl
fwait
mov
pop
popa
pusha
or
cltd
inc
mov
inc
call
stc
mov
addb
das
nop
call
sbb
push
cmp
jb
lock
fwait
or
test
fs
hlt
popf
push
mov
xchg
push
bound
movsl
dec
dec
in
pusha
in
repnz
fdivl
ds
mov
adc
or
dec
jecxz
adc
out
repnz
fs
xor
and
es
pop
mov
fsts
inc
sbb
daa
push
dec
das
dec
jge
imul
stos
sub
xchg
push
add
or
sub
addr16
cmpsb
lahf
bound
mov
mov
push
jo
or
pusha
mov
daa
icebp
dec
jb
sti
jl
or
leave
or
fwait
outsb
shlb
dec
and
xchg
inc
popa
mov
or
mov
in
int
test
dec
mov
mov
push
sbb
xor
jae
ret
inc
out
and
lods
xchg
adc
rclb
cld
xchg
lods
aaa
and
add
mov
sub
gs
fistpll
lahf
ljmp
scas
xchg
jne
and
popf
cmpsb
ljmp
push
iret
out
fldl
xchg
or
pop
out
ljmp
mov
mov
jno
or
lock
or
jo
int
or
sbb
test
sub
imul
mov
sub
jmp
ljmp
pop
adcb
stos
rorb
lret
les
jg
enter
cmp
daa
xchg
stos
insl
and
scas
xchg
push
pop
jg
fbld
and
sbb
ja
push
loop
inc
adc
cmp
push
das
inc
addr16
stos
jge
ss
sbb
push
insl
mov
div
or
cmp
fs
sub
int3
jno
cmp
push
lret
inc
stos
decb
js
sub
or
mov
fsub
fucomip
sub
das
fldenv
sub
inc
add
sub
and
lods
test
xor
dec
and
rcrl
mov
pop
push
repnz
stos
sub
sub
clc
fbstp
enter
hlt
push
nop
jno
ljmp
int
push
paddw
jbe
sbb
mov
inc
jb
mov
outsl
or
sbb
mov
iret
cld
mov
inc
mov
sub
add
mov
adcl
fimull
sbb
sub
jno
pop
in
popf
adc
or
movsl
xchg
mov
cmp
fld
cmpsb
inc
mov
testb
jmp
cmp
pop
sbb
in
dec
pop
dec
ljmp
ljmp
xor
loope
adc
and
movnti
and
outsl
mov
jo
and
loop
pop
mov
iret
pop
and
gs
inc
mov
xchg
pop
cmpsl
push
dec
lods
xchg
mov
aaa
frstor
dec
mov
sub
bound
push
pusha
fldl
xlat
or
cmpsl
inc
xor
sbb
fidivrl
mov
call
icebp
push
inc
sbb
jmp
pop
in
js
icebp
add
je
int3
pushf
sbb
jle
data16
fbld
sahf
mov
jbe
es
mov
mov
push
xor
cwtl
mov
cld
sub
pop
jae
js
ret
test
dec
dec
pushf
mov
test
jno
mov
cmpsb
pop
jns
clc
arpl
dec
dec
or
lock
fisubs
jecxz
sbb
xor
xor
in
mov
jmp
lds
jb
je
and
aam
and
sbb
pop
xor
mov
jmp
push
scas
repnz
cmp
cmpxchg
pop
lods
cs
and
mov
mov
lods
lret
mov
movsl
test
mov
mov
fmull
push
or
adc
and
ret
fs
sbb
lods
or
sbb
xchg
subl
adc
lahf
mov
shll
pop
push
lret
cltd
xchg
push
cmp
lods
pop
mov
aas
and
popa
imul
sbb
imul
mov
cltd
out
in
pop
lock
pop
dec
inc
mov
pop
xlat
fst
jge
push
mov
sti
fbstp
add
fwait
pop
and
jno
lods
repnz
sbb
mov
pushf
xchg
jns
cmp
les
pop
mov
and
loopne
add
dec
decl
sbb
push
inc
lahf
aaa
mov
push
repnz
stos
mov
xchg
and
pop
lea
imul
ljmp
jb
cmp
inc
and
call
into
and
cld
movsb
add
loop
stos
loopne
or
repnz
xchg
in
rcl
push
pusha
adc
lock
dec
clc
pop
and
out
lods
lret
popf
mov
xchg
lret
lock
imul
push
in
rorl
sbb
je
popa
ret
cwtl
pop
dec
mov
jmp
sub
or
jnp
push
loope
andb
jo
pop
pushf
fnstsw
fisubrl
ret
sbb
mov
fmuls
lea
adc
outsl
sbb
popa
mov
popa
or
cmc
sbb
or
mov
loopne
jbe
sbb
pop
enter
pop
sahf
add
pop
and
pusha
gs
leave
mov
push
jecxz
mov
push
arpl
iret
pop
outsl
sub
cli
ljmp
jae
in
dec
sbb
add
sub
mov
lcall
das
mov
xorb
stos
push
mov
sbb
push
add
inc
imul
pop
insl
cmpsb
xchg
ljmp
sub
mov
fninit
sbb
jb,pt
test
cmc
orb
cmpsb
pop
mov
out
das
sahf
push
addl
stc
mov
sbb
data16
test
mov
or
xchg
out
stos
gs
loop
cltd
dec
sub
add
mov
clc
frstor
lcall
lods
movsl
sub
scas
clc
cld
fimull
adc
jns
mov
cmp
mov
test
mov
cmp
push
mov
imull
add
inc
cmc
cmp
in
in
repnz
shrl
in
idivl
out
out
hlt
fistpl
or
push
push
les
cmp
int3
push
push
cmp
and
das
pop
inc
push
hlt
icebp
push
push
push
and
mov
push
xor
gs
or
out
loope
pop
insl
ljmp
pop
jno
or
test
sti
and
scas
sub
mov
mov
repnz
imul
lea
pop
add
or
shll
or
xchg
dec
dec
cltd
movsb
lcall
lock
in
inc
das
push
repnz
adc
in
stc
sbb
mov
icebp
mov
sbb
ficomps
xor
push
dec
test
leave
mov
fwait
push
cmp
add
mov
mov
dec
xorl
add
mov
fisttpll
sbb
pop
or
addr16
clc
sub
mov
popf
xor
and
mov
int
icebp
aam
jl
sub
inc
and
cld
jae
sub
xor
mov
cmp
fidivs
dec
mov
dec
fsub
lds
or
xor
cwtl
sti
pop
pop
sub
nop
push
nop
xlat
inc
dec
and
in
mov
and
cs
out
jo
js
push
sub
leave
popa
inc
dec
sbb
gs
call
dec
loop
mov
aas
cmp
sahf
dec
lahf
lods
icebp
popf
es
shrb
push
cld
sub
jl
fcmovnb
scas
sbb
jb
leave
cwtl
add
pop
bound
repnz
mov
jp
cltd
xor
lahf
inc
cmp
or
stos
jge
or
jnp
xchg
imul
jg
mov
out
mov
or
cld
fs
icebp
test
jne
icebp
adc
jns
int3
jb
jno
mov
sbb
mov
stos
cltd
in
jae
sub
js
out
fs
jecxz
ret
mov
in
repnz
mov
in
addb
adc
mov
push
pop
scas
lods
pusha
ja
outsl
push
mov
pop
mov
jp
lock
sub
imul
inc
ret
cmp
insl
popf
popa
test
sub
pop
mov
repnz
add
xor
jecxz
sbb
sbb
int3
je
repnz
mov
fidivrl
mov
jge
in
repnz
xchg
fs
bt
les
add
or
or
call
ret
loopne
xor
nop
ret
adc
dec
aaa
pop
pop
mov
and
pop
outsb
fmuls
lods
and
sub
scas
mov
or
add
lock
in
icebp
lods
jno
dec
out
mov
imul
mov
cmp
push
daa
xchg
lret
gs
fidivl
and
push
jb
sbb
xlat
imul
repnz
xorb
sbb
addr16
dec
loope
pusha
pushf
or
insb
and
int
out
bound
mov
es
data16
sub
mov
inc
jg
shll
lahf
or
mov
int3
push
xor
cmp
insb
pop
imul
inc
pop
repnz
jo
adc
ficompl
and
mov
lret
lea
xchg
arpl
into
je
pop
pop
movsb
scas
push
adc
mov
gs
int
pop
sub
je
sub
and
push
jmp
jb
int3
xor
sbb
fisttpll
cmc
icebp
enter
inc
lret
addb
mov
xchg
sbb
popa
add
xor
add
mov
pop
adc
scas
sub
mov
mov
mov
pop
loop
jge
fdivl
pop
jo
int3
mov
sub
lods
nop
call
jo
adc
iret
in
mov
int3
or
pop
imul
push
xchg
xchg
seta
mov
dec
insb
cwtl
insl
sub
cmpsb
jmp
adc
xchg
mov
or
int3
cmp
jne
icebp
inc
mov
addr16
pusha
inc
adcb
mov
test
repnz
inc
in
push
xor
and
mov
mov
jae
ja
xchg
xchg
icebp
dec
subps
pop
mov
test
rcr
fsubr
nop
pop
adc
mov
fs
pop
aas
movsl
xchg
mov
cmpsb
sar
pop
add
dec
dec
xchg
ss
jb
fildll
xor
sbb
sbb
push
pop
nop
sub
iret
nop
popa
stos
loope
fisubs
jno
inc
insl
cmp
xor
scas
sbb
sar
pop
push
adcb
xchg
shl
mov
mov
or
and
scas
test
pusha
imul
popf
sub
xor
and
fisubrl
orl
fstl
testl
pop
jae
ljmp
ss
arpl
dec
xor
movsl
adc
fildll
dec
jge
jmp
and
dec
lods
repnz
scas
dec
xchg
sub
xor
cmp
movl
mov
or
mov
push
jp
pop
adc
outsb
ljmp
xor
daa
push
mov
jo
inc
add
xchg
gs
jp
mov
ss
scas
pop
add
jl
sbb
orb
mov
inc
subb
movsb
push
jp
xlat
fbld
push
mov
jmp
scas
loopne
mov
mov
and
aad
ds
scas
mov
lods
in
jge
adc
call
lds
pop
repnz
fwait
popf
push
lods
mov
test
lock
xchg
fbstp
jno
jo
jp
mov
mov
push
or
xchg
hlt
mov
out
arpl
fsubrl
out
jb
int3
aaa
pop
arpl
lret
mov
stos
in
pushf
add
xchg
dec
xor
ret
pop
and
mov
out
mov
fnstenv
lcall
je
scas
mov
jne
outsl
xchg
lret
loopne
mov
mov
lcall
xorb
or
pusha
mov
aas
pop
sbb
clc
cltd
push
mov
dec
sbb
int3
out
sbb
mov
xor
int
dec
stos
mov
mov
sbb
pop
fwait
jmp
daa
mov
imul
dec
in
icebp
movsb
jns
xlat
in
xor
pop
xor
lds
repnz
clc
int
repnz
mov
mov
mov
pop
test
mov
rep
pop
arpl
scas
dec
mov
sub
push
xor
lods
sbb
sub
lock
inc
inc
icebp
ret
repnz
add
mov
push
loopne
or
push
mov
jmp
xchg
sti
push
pavgb
aam
xchg
fisttpl
and
insl
cmp
ret
push
mov
rcr
add
xchg
icebp
xor
push
xchg
mov
shrd
ret
cmc
jae
cmc
std
mov
add
cmpsb
sahf
adc
les
sbb
sbb
in
jno
js
jecxz
sbb
es
sbb
jle
xor
shlb
pop
je
movl
pusha
mov
idiv
ret
xchg
push
rcrl
loop
sbb
dec
push
mov
inc
mov
pop
jne
test
aad
fdivl
lcall
dec
aaa
lahf
in
xor
push
push
std
les
stos
in
out
jnp
sub
or
mov
jne
rolb
sbb
sub
fs
int
je
shrl
or
cmpsb
imul
cmpsl
sbb
or
xor
test
aas
mov
and
pop
scas
adc
loope
fwait
sub
add
push
sbb
mov
and
push
jp
int3
dec
icebp
jns
push
lock
pop
orl
loop
add
gs
dec
mov
sbb
pushf
adc
push
lock
sbb
hlt
adc
lret
dec
pop
subl
and
stc
mov
jbe
jns
pushf
mov
and
or
and
int
inc
lahf
lds
movsb
mov
ucomiss
mov
pop
push
inc
xchg
mov
dec
notl
cmp
aaa
jne
lods
insl
mov
sbb
into
jbe
movsb
adc
lahf
gs
mov
movsl
addb
mov
movsl
pushf
dec
mov
xor
pop
test
lock
std
push
or
mov
pop
pop
ds
shlb
ret
sbb
xor
fs
push
mov
out
mov
and
aaa
nop
je
repnz
lock
mov
add
les
jl
xchg
insl
stos
cltd
mov
in
dec
xchg
pop
jo
ret
jne
cwtl
out
and
mov
and
cmp
dec
icebp
jno
adcb
sub
ljmp
push
mov
push
adc
int3
cmp
push
icebp
mov
mov
divl
inc
push
cmp
cmp
sbb
push
dec
mov
mov
jb
stc
pop
pop
jge
test
sbb
mov
mov
pusha
arpl
js
fwait
mov
push
xchg
mov
sub
repnz
cmpl
push
mov
mov
mov
adc
cld
cli
mov
adc
dec
popa
in
xor
adc
xchg
xor
push
sbb
sub
inc
cmc
mov
mov
mov
mov
test
mov
sub
popa
insl
mov
push
ficomps
out
jecxz
mov
sbb
rolb
mov
scas
and
aad
ret
xor
and
in
cmp
xor
stos
rcr
rcrl
and
cltd
aas
cwtl
pushf
cld
int3
xor
xchg
mov
sbbl
insl
lgs
orb
mov
mov
shrl
cmc
in
mov
dec
loope
inc
out
nop
imull
pushf
ret
cs
in
mov
xor
out
pop
mov
hlt
lock
fimuls
inc
ljmp
popf
fcompl
pop
lods
or
xor
or
jmp
jl
lock
scas
mov
cmpsb
or
sub
xchg
adc
inc
rolb
test
pop
adc
aas
sub
mov
xchg
pop
dec
push
cmpsb
std
mov
loopne
adc
int
rcrl
stos
add
jmp
or
sbb
or
stc
fwait
dec
sbb
icebp
cmp
fcomi
push
dec
repnz
sbb
pushf
insl
jge
daa
cmp
push
out
mov
sbb
movsb
mov
jmp
sbb
pop
jno
enter
pop
lods
in
jno
mov
mov
aad
push
or
or
lea
jl
dec
fwait
aad
cmp
cs
adc
jp
mov
dec
mov
mov
loopne
aas
sti
repz
jbe
int3
mov
lcall
repz
lret
cwtl
mov
add
mov
insb
aad
sub
adc
pushf
jbe
lahf
cmp
lret
lock
mov
icebp
mov
mov
outsb
lods
or
cmc
jmp
mov
add
jo
cmp
test
pushf
push
add
not
lret
xchg
outsb
int
or
imulb
xor
int3
rorl
test
adc
int
int
or
dec
xor
out
mov
or
or
adcl
outsl
pop
fidivrs
or
push
call
mov
mov
pushf
adc
mov
and
insl
push
sub
in
push
fyl2x
mov
xchg
sub
pop
inc
xchg
xor
xor
and
inc
hlt
bound
int3
movsl
pop
fs
xchg
in
sub
repnz
cmp
addr16
mov
jns
jle
jp
int3
not
stos
cli
shll
xor
imul
or
sarl
stos
dec
outsb
jb
pop
movsl
sub
mov
jne
pop
ds
movsb
mov
push
xor
cmp
insl
in
jg
sbb
adc
and
sub
les
xchg
imul
sbb
pusha
mov
sbb
pop
xor
cmp
push
inc
bound
mov
fisubl
pusha
cmp
insl
jno
aaa
call
xor
sbb
sbb
scas
add
sub
push
popf
ja
jae
aaa
jg
enter
mov
xor
or
inc
sub
insl
pop
and
sbb
adc
add
cltd
ja
sub
iret
in
pop
mov
jge
movsl
add
add
sbb
mov
mov
lods
sbb
dec
outsl
sub
jb
in
mov
imul
add
sahf
flds
sbb
xchg
mov
xor
xchg
pop
inc
push
mov
xchg
mov
dec
mov
sbb
mov
pushf
xor
outsb
mov
adc
push
insl
test
pop
mov
iret
or
xlat
in
jns
fwait
roll
add
mov
mov
mov
movl
sub
cld
mov
test
lahf
mov
xor
mov
mov
mov
lahf
adc
mov
add
fwait
push
int3
push
push
xlat
ljmp
outsl
push
mov
repnz
mov
cmpsb
cmp
jp
add
pop
insl
pop
fsubrp
dec
shlb
fistps
out
scas
or
cmp
adc
int
scas
bound
and
sbb
in
mov
sub
pop
jl
xor
repnz
and
jmp
push
mov
sub
movsb
mov
inc
pop
neg
sub
sahf
sub
push
or
xchg
les
and
scas
fwait
xor
and
jb
rol
and
lock
inc
mov
test
pusha
push
in
notl
jo
lock
jle
mov
ja
add
ljmp
int3
daa
or
stos
jl
pop
js
pusha
scas
dec
push
xchg
leave
jl
lahf
fs
subl
rorb
sbb
ljmp
ljmp
in
xchg
inc
nop
dec
mov
dec
popf
xor
sbb
lock
jo
test
fbld
outsb
test
cmp
sub
mov
xor
icebp
mov
jg
cwtl
scas
sub
jns
jns
nop
sub
data16
mov
mov
gs
jg
dec
push
push
push
pop
lahf
xor
or
and
and
jae
xchg
jp
and
frstor
out
dec
cmp
jb
incl
push
rcrb
fs
arpl
outsb
mov
cld
jnp
xlat
hlt
fisubl
fst
and
fs
aad
cmp
movsl
and
in
sub
mov
pusha
aam
test
xor
sub
js
mov
popf
fmul
dec
jo
xchg
lods
insl
adc
push
adc
jno
es
or
loopne
mov
mov
push
outsb
sub
xchg
ficompl
mov
push
cmp
push
and
fcompl
dec
hlt
std
xlat
lds
add
imul
psubusb
cmpsb
pop
imul
out
jo
das
gs
push
jnp
dec
mov
push
loopne
sub
sbbl
cmp
aad
scas
fcoml
jno
adc
xor
jbe
cli
ret
sbb
cli
jp
mov
rorb
adc
repnz
mov
add
outsl
divb
frstor
repz
sbb
cs
in
jo
into
xchg
jg
mov
rcr
or
jge
jge
lret
jno
test
jecxz
in
sub
jnp
xor
push
cmp
push
jo
inc
mov
fists
push
mov
lea
repnz
mov
popa
mov
push
xor
or
push
scas
mov
lea
cltd
xor
sub
sbb
aad
hlt
add
sahf
rcr
mov
adc
fs
sbb
out
dec
push
sbb
mov
lods
jbe,pn
in
in
fisubs
pop
jl
jg
ret
stc
xchg
push
mov
push
fsubrl
or
sbb
ljmp
cs
push
add
mov
movsb
or
mov
lods
fsubs
fcoml
outsl
mov
scas
dec
rorb
xchg
inc
ja
dec
imull
ficoml
jb
int3
push
xchg
push
add
or
fwait
xor
pop
push
icebp
dec
subl
imul
lahf
cmpsb
subb
or
lcall
jbe
sarb
mov
sub
cmp
add
movsl
and
pop
pop
fwait
xchg
mov
loopne
cmpsb
and
fildll
sub
rcl
andb
divb
fisubrl
adc
jnp
sti
jb
cmpsb
and
repnz
push
inc
int3
cld
sub
cmp
xchg
push
cltd
mov
mov
lods
adc
imul
xor
inc
repnz
out
ja
cmp
mov
cmp
jmp
sub
inc
xor
imul
fsubs
out
xchg
mov
fdivl
pop
sub
test
and
jge
stos
lret
pop
lahf
ret
outsb
loope
int3
push
add
incb
xlat
push
push
pop
rorl
scas
cmp
frstor
repz
add
pop
addr16
movsb
in
xchg
mov
jg
add
xlat
out
stc
mov
sti
outsl
pop
fisttps
orb
fldl
xorb
inc
xor
pop
mov
lret
incb
incl
push
lods
dec
mov
icebp
pop
cld
lret
mov
mov
and
mov
arpl
jae
int3
outsb
stos
repnz
pop
xchg
sub
push
imul
movb
push
mov
lahf
idivb
fbld
test
lds
stos
or
scas
cli
imul
out
lds
cmp
in
cmpb
orb
in
sbbl
or
xorb
lret
sbb
aas
pop
stos
mov
jo
movsl
loope
pop
movsb
jae
pusha
mov
pop
xchg
cmpsb
sahf
mov
add
rcrl
rcl
or
mov
iret
ljmp
add
jo
fdivp
repnz
adc
fsub
cmpsb
or
pop
stos
outsl
insl
dec
sub
mov
leave
or
pop
ret
and
and
movsb
dec
jmp
bound
pop
push
stos
jnp
xor
lea
cmp
inc
dec
sbbb
mov
inc
mov
cli
adc
mov
cmp
or
mov
jl
or
push
int
add
xchg
subps
lods
or
cld
mov
fiaddl
andl
popf
jnp
call
movsl
bound
mov
pop
test
ss
push
loop
and
mov
fstpt
ficompl
pop
in
aaa
jbe
aam
sub
mov
outsl
in
les
and
popf
sbb
mov
push
cld
outsl
test
mov
mov
hlt
or
and
sbb
push
cmp
xchg
xor
fdivrl
mov
push
jno
mov
mov
mov
xor
icebp
out
cmp
mov
pushf
adc
mov
in
sub
jge
jmp
adc
dec
sub
and
adc
mov
mov
cld
and
fildll
xchg
cmp
sbb
push
inc
jecxz
pushl
lods
mov
adc
in
mov
xor
mov
mov
mov
inc
sbb
gs
mov
out
push
imul
popl
or
test
andl
push
ja
dec
pop
push
sarb
sub
mov
mov
sbb
push
xchg
jg
mov
test
mov
jno
cmp
mov
aas
xor
ljmp
in
fldcw
dec
in
shlb
sub
mov
into
adc
inc
sbb
mov
shlb
fistpl
push
es
int
js
arpl
notl
popf
cmp
sbb
outsl
lock
fs
ret
sbb
mov
cmp
sbb
xchg
jl
inc
inc
popa
add
mov
adc
pop
mov
scas
pop
add
dec
fbld
sub
arpl
cmpsb
lock
test
and
mov
stc
push
add
arpl
leave
out
mov
and
orb
push
xor
outsl
repnz
ror
push
pop
jmp
jo
and
jno
mov
adc
mov
cs
cmc
sbb
cmp
ret
pusha
jo
ficompl
jg
out
jmp
bound
mov
cmp
addr16
push
dec
sub
fs
loop
and
call
bound
jne
loop
xor
loopne
xchg
push
lahf
insl
mov
or
in
or
loopne
inc
test
scas
adc
pop
xlat
les
pushf
hlt
lret
pop
jp
cld
cmpsl
sub
pop
cmp
add
pop
mov
enter
lea
and
xor
out
ds
mul
idivb
arpl
mov
icebp
lret
mov
sti
pop
sbb
cmc
inc
dec
cmp
mov
add
add
push
pop
insb
pop
push
cmp
nop
fld
pushf
and
sbb
pop
mov
push
mov
test
cmp
sti
xor
lods
fildll
mov
stos
push
popa
sub
adc
mov
bound
sbb
std
lods
jmp
test
jno
arpl
mov
push
sbb
xchg
dec
or
lock
stos
xchg
out
push
jl
sbb
and
test
bound
adc
sbbb
xchg
jo
sub
pop
mov
lret
xchg
icebp
sbb
loop
in
pop
and
pop
cmp
inc
xor
push
sub
bound
out
jae
mov
add
and
lock
xor
out
addr16
gs
pop
cld
mov
scas
movsb
fcmovnb
ret
inc
bound
add
stos
mov
dec
pop
stos
mov
je
xchg
stos
mov
inc
push
xor
ss
cltd
in
out
push
jg
push
in
mov
cmpsl
xchg
out
cmp
leave
push
subb
lret
repz
das
sub
loop
jl
mov
cmp
insl
jmp
pushf
mov
popa
push
push
bound
stos
mov
jb
pop
mov
jmp
std
mov
js
inc
push
repz
sbb
fiaddl
shl
jb
cli
sbb
pop
mov
mov
jle
mov
scas
sbb
jle
add
fdivl
sahf
push
divl
andl
mov
fstpt
pop
pop
jp
push
mov
push
scas
mov
push
das
add
jle
enter
fdivp
lret
inc
mov
cli
push
jno
bound
iret
cmp
pop
ds
adc
outsl
mov
jns
fbstp
or
push
imul
lock
fistpll
popa
xlat
push
aam
xor
adc
jno
fisttpl
inc
dec
dec
shrl
out
mov
ret
cmp
dec
pop
mov
lar
shr
and
push
inc
sub
or
push
lock
add
pop
pop
imul
mov
popa
mov
test
sbb
add
pop
mov
pop
js
mov
cmp
testb
mov
sbb
mov
jg
sarb
jno
mov
sub
fbld
push
jne
addr16
xor
jmp
sbb
mov
mov
subb
addr16
ljmp
leave
push
lea
fisubl
mov
movsb
cmpsl
or
out
lock
inc
pop
pop
add
dec
sbb
sbb
sub
add
test
ja
leave
xchg
mov
dec
shlb
ja
push
stos
cmpsl
nop
and
mov
or
bound
push
popa
sbb
and
jns
dec
ds
xchg
lods
or
rcl
fildl
sahf
xor
or
jo
gs
jl
sbb
call
or
or
cmpsb
mov
test
scas
add
dec
push
dec
iret
hlt
out
adc
jmp
xchg
xor
fidivrs
imul
mov
sti
fwait
mull
xchg
stos
mov
sub
push
push
or
push
imul
cmc
add
repnz
enter
mov
lcall
cmp
xchg
xchg
jns
imul
loop
add
imul
int3
sbb
inc
lds
pop
and
or
out
in
popa
mov
xor
adc
popf
pop
into
push
int
pop
dec
lret
out
xchg
cmp
xchg
push
push
rclb
test
int3
insl
xor
or
leave
pop
fdiv
hlt
fbld
push
xchg
lea
and
imul
add
mov
adc
xchg
dec
mov
push
ror
insl
mov
cmp
je
imul
xor
dec
lret
test
in
daa
in
cltd
into
aad
ja
ret
mov
cmpsb
sbbl
es
inc
call
lea
and
in
mov
mov
mov
shrb
jp
pop
mov
lock
mov
scas
push
cli
sub
and
fiaddl
cs
ret
or
shrb
xchg
sub
or
pushf
das
jno
cmp
inc
xchg
in
dec
scas
mov
inc
stos
in
push
ja
ljmp
fisubrl
decb
mov
mov
cmc
pop
repnz
imul
xchg
sub
push
dec
fdivrs
imul
stos
sbb
pusha
insl
jno,pn
fs
repnz
jl
xor
jp
gs
addr16
or
cltd
ljmp
and
dec
out
repnz
sti
cmovne
and
sbb
addr16
fwait
sti
and
cmpsb
std
data16
adc
pushf
aaa
lcall
mov
das
mov
xchg
pop
rol
stos
fwait
xchg
repnz
sahf
dec
add
in
xor
sbb
sbb
ret
and
outsb
sub
xchg
movsl
repnz
gs
dec
mov
mov
jo
add
out
fwait
pop
call
pop
mov
imul
adc
dec
out
test
jg
orb
mov
inc
imul
mov
ror
push
push
repnz
repnz
jle
outsl
mov
lea
pop
mov
fdivr
stos
lods
in
fists
lds
dec
pop
or
xchg
jne
notb
jl
mov
xorb
xchg
test
xor
or
dec
push
or
jmp
loope
pushf
pushf
outsl
or
xchg
mov
mov
rol
lods
pop
icebp
sbb
scas
xchg
jno
xor
or
ja
loop
nop
fisubs
jg
icebp
aaa
adc
and
call
xchg
mov
cmc
fdivl
popf
lcall
movsl
repnz
in
js
vmload
mov
xor
out
sbb
inc
fnsave
inc
scas
adc
lock
ret
xor
inc
xor
pop
sub
hlt
mov
mov
cli
push
sub
jecxz
repnz
pop
rcrl
sbb
movsl
sbb
push
mov
lret
test
jnp
mov
sti
and
push
ds
iret
lcall
into
insl
jl
mov
jb
mov
pop
mov
shll
mov
pop
in
mov
test
mov
je
inc
adc
int3
sbb
inc
mov
or
fwait
sahf
dec
inc
mov
add
loopne
je
mov
add
cmpsl
out
push
pop
lock
push
outsl
scas
iret
pop
cmc
xor
ret
sarl
cmpsb
or
xor
mov
shrb
cltd
adc
dec
nop
sub
dec
pop
dec
ficomps
ds
subl
or
fldcw
xor
pop
or
sub
sub
mov
int3
push
mov
rolb
adc
jp
mov
dec
and
sub
mov
push
xor
lods
je
xor
mov
sbb
xchg
inc
loopne
push
pop
inc
push
dec
mov
jmp
lret
dec
divl
and
test
nop
je
cmpsl
inc
mov
ficoms
sbb
shr
sarl
mov
adc
loope
mov
gs
ss
cmp
xor
lods
mov
es
filds
popa
dec
pop
jmp
mov
adc
xor
les
sub
out
loope
pop
jae
mov
roll
cmp
pop
dec
stos
sbb
lcall
mov
xchg
test
repz
pop
rol
mov
gs
out
repnz
in
cmp
cmp
push
mov
mov
xchg
jge
jo
adc
jno
repnz
mov
bound
push
fidivl
mov
dec
fsubrs
in
add
mov
push
aaa
xor
pop
xchg
fisubl
or
imul
xchg
int3
dec
ljmp
sahf
xor
sub
mov
cmc
jmp
movsl
sub
lea
dec
aaa
cli
lods
stos
adc
mov
pop
jl
outsl
xor
lods
imul
jne
mov
pop
testb
push
fsubrl
in
or
mov
fs
mov
sbb
lods
mov
lahf
push
loopne
pop
and
incb
mov
jle
sub
and
jp
xor
mov
pop
test
and
scas
push
and
shll
ds
rclb
ja
add
jb
lea
adcb
lock
lock
out
mov
repnz
lcall
jl
dec
cmp
mov
xorl
ds
das
mov
xlat
pop
xor
mov
push
mov
inc
mov
and
test
scas
sub
or
movq
push
mov
jae
dec
out
mov
sub
cmc
outsb
nop
imul
mov
adc
test
sti
and
adc
call
inc
add
fucomp
jb
ss
xchg
ljmp
fstpl
jmp
aaa
repz
es
dec
repnz
in
and
ss
call
in
popa
push
ror
pop
jecxz
and
jge
loopne
pop
or
xchg
loop
mov
jno
repnz
mov
adc
std
pop
lret
sbb
dec
in
into
jno
adc
sbb
ljmp
imul
add
and
jmp
jg
dec
out
or
icebp
and
ja
and
insl
cmc
push
in
or
ds
ljmp
js
cmp
std
in
cmp
push
push
ljmp
std
push
adc
xchg
mov
sub
mov
insl
mov
mov
aas
bound
sub
repnz
jns
cmpsl
pusha
mov
inc
push
test
pop
mov
mov
xchg
lcall
xor
xor
stos
sbb
lahf
icebp
out
inc
jo
jnp
push
mov
cld
xchg
pop
imul
adc
ret
push
and
sbb
fbld
test
push
sahf
daa
xor
stos
mov
aam
fstpt
sub
or
daa
mov
push
mov
cmp
bswap
sbb
mov
push
into
jno
aam
pop
inc
call
popa
popf
in
sub
mov
subb
jno
adc
cwtl
adc
outsb
mov
jg
mov
rcr
lods
push
or
outsb
sbb
jae
addr16
add
lahf
test
inc
add
dec
sub
and
int
lods
xorb
inc
pop
mov
jmp
dec
inc
xchg
cmc
jmp
dec
icebp
outsl
stos
or
add
adc
fisubl
call
arpl
adc
sbb
fidivs
mov
xor
outsl
sub
or
pop
add
hlt
sub
jo
in
jge
stos
dec
jle
clc
inc
sub
push
pop
xchg
pop
repnz
add
and
fs
pop
shl
sbb
frstor
push
les
scas
push
fnstcw
popf
sub
insl
jbe
and
shrl
xchg
in
or
xchg
and
bound
adc
pop
sar
pop
lods
sub
sbb
das
xchg
test
or
insl
adc
mov
push
shlb
xlat
fwait
aad
push
mov
xchg
xchg
sti
xor
mov
jo
lods
ljmp
nop
imul
inc
test
sub
add
notw
and
inc
aad
pop
in
xchg
push
and
loop
in
sub
dec
call
and
repz
out
add
jecxz
scas
int3
jge
or
negl
inc
adc
push
and
mov
lret
insl
shll
iret
jne
mov
fldt
test
add
imul
in
out
xlat
mov
mov
dec
mov
repz
sahf
in
ljmp
add
sbb
add
and
inc
xchg
xor
outsb
arpl
push
movsl
dec
mov
xchg
dec
mov
loopne
xchg
dec
ret
jbe
das
cmp
repnz
aaa
aam
jno
adc
sub
adc
pop
pushf
pop
mov
or
je
cmp
sbb
adc
das
orl
outsl
bound
adc
ja
jg
jo
inc
cmpsl
scas
dec
mov
add
mov
jno
push
fs
xchg
iret
fsubrl
shll
jl
mov
jne
and
cmp
lret
jl
imul
addr16
mov
stos
mov
arpl
push
adc
xor
arpl
rcrl
jno
mov
lret
mov
jo
push
sbb
ret
fwait
sbb
std
jo
inc
ret
jge
dec
orl
sbb
or
push
nop
daa
cmc
push
dec
lahf
sti
icebp
xchg
shl
sub
inc
push
dec
icebp
pushf
sub
cmp
sub
xchg
sub
xchg
popf
xor
pop
mov
jno
mov
in
or
push
mov
int
xchg
mov
sub
insl
and
inc
mov
pmaddwd
adc
pop
mov
cs
or
outsl
in
mov
xor
adc
mov
and
xor
mov
dec
push
outsl
fisttpl
lods
in
shll
pop
push
push
lahf
xor
inc
fwait
inc
pop
or
pop
and
cmp
outsl
jmp
mov
adc
jecxz
mov
subl
mov
xchg
repnz
and
cmpsl
loop
cmp
dec
repnz
es
add
sti
pop
ret
push
push
lret
movsl
ret
loope
jle
fistpll
ljmp
xor
sarb
pop
dec
cmp
movsb
shr
ja
push
dec
adc
mov
daa
lahf
imul
jl
and
xchg
fisttpl
jae
lods
pop
aas
sbb
and
dec
xchg
stos
push
jns
add
lret
jmp
jg
leave
sub
lods
sbb
mov
inc
push
test
es
mov
ljmp
mov
xor
test
mov
mov
xlat
imul
stc
cwtl
sarb
pop
int3
jp
mov
pop
outsb
pop
out
adc
xchg
fnsave
ljmp
sbb
cmpsl
xor
jge
jl
imul
push
rol
in
mov
pop
or
pushf
pop
dec
clc
jo
jp
adc
movsb
push
bound
imul
cltd
stos
xchg
mov
bound
jno
cmp
jnp
push
jns
and
pop
in
icebp
ljmp
fildl
mov
adc
movsl
and
repnz
mov
xor
aas
movsl
and
pop
mov
xor
xchg
das
out
aas
into
jo
mov
mov
or
cld
popa
sub
jb
sbb
or
int
jno
mov
lcall
jb
imul
xor
cmp
xchg
and
jmp
sarl
pop
pop
mov
lret
mov
inc
out
cmp
jecxz
lret
inc
test
and
push
sahf
sub
icebp
outsl
push
cli
dec
add
pop
mov
jnp
lock
jmp
in
aas
dec
ret
cmp
loopne
xchg
fs
lret
dec
cltd
push
addr16
fs
mov
fidivl
in
rorl
jns
addb
lea
jecxz
sub
jmp
test
or
sub
xchg
in
loopne
push
test
int3
in
aas
lds
xor
in
pop
jo
dec
lods
pop
mulb
cmpl
xchg
addl
cmp
in
dec
orb
push
pop
adc
ret
dec
xchg
mov
pusha
add
popa
fwait
xchg
mov
repnz
xor
pop
rclb
sub
lods
fsubr
sbb
push
negl
ret
fstpt
xchg
push
orb
xor
repnz
pop
mov
out
mov
sbb
test
les
movsl
xor
scas
fs
les
lret
dec
xchg
into
lcall
dec
mov
push
mov
mov
call
in
test
dec
pop
jo
inc
push
scas
mov
mov
lods
repnz
imul
add
imul
aad
movsl
dec
push
add
adc
aad
inc
shll
jmp
pusha
add
gs
leave
popa
shll
jo
adcb
fsubl
fisubrl
sub
in
mov
bound
test
mov
lret
fists
xor
outsb
nop
mov
cmp
imul
adc
mov
mov
xchg
cmp
sbb
mov
lret
aad
ficomps
xor
inc
pop
fimuls
add
stos
das
shl
jle
insb
sub
or
adc
adc
jp
xchg
mov
mov
mov
push
insb
andl
cmp
mov
add
mov
lock
imulb
fucomp
sub
sub
mov
imul
orl
lock
or
addr16
jbe
push
sub
test
repnz
ror
fiadds
lcall
movsl
dec
ss
sbb
push
sbb
pushf
xor
ds
ds
mov
push
jecxz
xchg
xor
push
movsl
xchg
in
xor
pop
sbb
mov
adc
jle
xchg
dec
bnd
insl
xor
xchg
cmp
adc
pusha
jb
aaa
adc
mov
xor
lods
push
dec
iret
and
xchg
in
push
and
inc
aam
movsb
enter
popf
pop
and
pop
sbb
sahf
test
sbb
mov
lret
push
fstps
xchg
movsl
adc
js
cmp
push
div
shrl
imul
imul
stos
or
into
bound
cmp
ljmp
xor
add
mov
sbb
subb
xchg
xchg
ljmp
mov
loope
sbb
or
push
fcoms
lds
pop
loopne
mov
mov
in
negb
call
jge
cld
jae
lret
pop
dec
mov
stos
sbb
mov
jb
or
xor
insb
shrb
sub
iret
adc
lods
cmp
sub
push
mov
xchg
test
or
test
imul
cmp
mov
push
and
dec
insb
inc
jg
lcall
aas
dec
hlt
sub
sub
mov
shll
cmp
jno
decl
lods
test
or
jns
add
subb
adc
xchg
addr16
ss
fmul
aas
fisubl
roll
cmp
push
sbb
sub
out
cli
cwtl
push
cmc
adc
cmp
dec
and
leave
pop
nop
inc
insl
loopne
cmp
je
and
mov
jb
inc
sbb
pop
test
in
mov
lret
add
pop
inc
xor
cmp
negl
lods
lods
cmpsb
xchg
aas
inc
add
icebp
out
and
fiaddl
jne
pop
lea
lret
popa
pushf
lds
call
xor
or
mov
jno
fiadds
push
lret
pminub
xchg
add
int3
dec
cmpsl
dec
xor
cmp
dec
push
xchg
adc
push
xor
adc
add
dec
lret
fistl
cmp
rcr
int3
adc
push
inc
pushf
imul
dec
xchg
int
mov
notl
inc
or
mov
mov
lock
dec
imul
lret
adc
jae
test
pushf
pop
cmp
pop
mov
out
mov
in
in
sbb
loope
movups
mov
xchg
repz
lea
in
lods
movsl
int
lock
out
jb
hlt
or
sub
mov
inc
jb
sbb
mov
lcall
sahf
icebp
fistps
test
mov
and
addr16
jns
xchg
pop
movsb
shr
mov
push
dec
xchg
mov
aad
in
mov
jge
or
mov
lea
sbb
xor
fwait
jb
push
out
mov
cltd
pop
mov
mov
pop
mov
fldenv
xchg
push
xchg
add
imul
sbb
push
ss
call
or
pusha
add
insl
fildll
jns
movsl
mov
fscale
insl
sti
ret
sub
jne
sbb
in
movsb
inc
jne
jae
dec
xchg
push
out
jecxz
cmpb
and
out
adc
mov
mov
inc
test
inc
not
xlat
sbb
and
rcrl
mov
gs
imul
jbe
cs
loope
insb
jns
rorl
xchg
pop
inc
rolb
mov
std
in
loopne
pusha
shll
ficoml
icebp
rolb
repz
and
loop
lods
sbb
mov
fs
roll
inc
nop
gs
push
dec
scas
bnd
mov
sub
fwait
mov
into
data16
mov
xor
in
addb
lods
insl
mov
stos
mov
sbb
mov
cld
add
call
and
cmpsl
push
fistl
dec
lods
imull
add
and
jecxz
rcl
push
cltd
dec
fstl
jle
icebp
pop
push
aas
xchg
out
push
push
aad
adc
fadd
ret
popa
divl
cltd
out
fwait
fnstenv
pop
fdivl
fcomp
fistl
out
mov
xchg
loopne
cltd
insl
cs
repz
jno
lods
push
mov
sbb
mov
mov
sbb
and
cltd
push
dec
jp
dec
or
mov
mov
adc
sub
lret
push
mov
push
jbe
pop
int
push
cmp
mov
int3
xchg
cmp
mov
in
add
mov
das
and
hlt
and
dec
call
pop
jae
inc
lret
lret
push
sbb
popf
mov
adc
or
push
jbe
lods
sub
jo
repz
fidivs
add
or
add
insb
and
sbb
inc
aam
lods
jmp
mov
dec
insb
add
sub
mov
push
adc
mov
cmp
mov
mov
xor
inc
and
jle
mov
sub
xchg
ret
sbb
inc
pop
push
cmp
fs
and
mov
arpl
and
and
push
jmp
mov
mov
subb
lods
mov
push
mov
mov
mov
mov
xchg
push
or
ljmp
mov
pop
hlt
pop
jg
stos
adc
adc
adc
aam
mov
or
in
cwtl
fwait
cmpsb
fucomip
pop
icebp
jmp
push
xor
icebp
lret
rcr
adc
or
mov
jo
push
push
aam
jno
push
lods
pusha
sbb
test
pop
bound
imul
out
insl
fiaddl
hlt
fcmove
cmc
sub
movsb
push
outsb
push
mov
inc
sub
pop
in
push
sbb
imul
stos
fwait
gs
sbb
das
push
sbb
bound
rcrb
fs
jnp
fisubrl
sbb
push
sbb
rorb
lock
fsub
mov
jo
stos
cmpsl
jno
jo
or
cmp
movsb
out
cmpsb
mov
mov
or
fs
push
push
int3
push
sub
clc
lods
dec
test
stos
scas
mov
lret
cmp
inc
xchg
stos
add
xor
jl
call
pop
mov
cmp
mov
adc
xchg
inc
dec
pop
or
mov
jmp
mov
dec
fs
imul
pushf
pop
sbb
outsl
xchg
pop
push
mov
pop
sbb
fwait
hlt
xor
stos
sbb
cmp
fmuls
fs
cmp
jno
lock
cmp
pushf
je
fisttps
gs
mov
jo
stos
xchg
in
pushf
pop
imul
jo
outsb
dec
dec
jo
bound
stos
push
adc
in
cmp
jno
insl
pusha
sbb
jno
xor
jns
call
adc
or
inc
inc
sub
adc
or
or
or
or
fsubl
movsl
out
push
outsb
imull
dec
mov
mov
shrb
outsb
sbb
insb
pop
movsb
test
clc
cwtl
mov
adcb
in
sbb
lods
mov
or
sbb
orb
mov
jmp
fnstsw
push
or
aam
inc
mov
or
cmp
sub
stos
insw
sbb
or
mov
push
pop
fcompl
lret
push
int
sub
sbb
inc
mov
in
push
and
setl
add
fmull
hlt
dec
popa
adc
sbb
jnp
ret
jne
or
enter
mov
or
call
jo
xchg
cmp
or
xlat
jl
or
or
stos
jle
sub
cmp
cmp
mov
in
inc
mov
mov
mov
fdivrl
call
jo
hlt
negb
add
insl
xor
scas
fcompl
je
push
and
fcompl
adc
push
loope
or
fbld
das
mov
push
xchg
adc
es
adc
jbe
lods
cmc
or
mov
sub
mov
fdivrl
scas
push
mov
icebp
jo
pop
out
call
push
or
int
pop
cs
test
outsl
in
cmpsl
pop
lcall
rcll
inc
mov
xor
test
pop
mov
push
mov
mov
sub
xchg
pop
dec
cmpsl
pop
jo
or
jo
mov
stos
sub
jnp
test
ret
adc
xchg
mov
data16
jle
or
clc
movsl
lock
lods
mov
xchg
and
ljmp
hlt
and
xchg
dec
sub
xchg
jo
shrd
imul
cmp
out
add
iret
arpl
movsb
sbb
mov
xchg
imul
push
and
insb
pop
mov
adc
movsb
out
mov
ljmp
mov
ljmp
sbb
fwait
gs
dec
or
sub
and
adc
into
outsb
arpl
xchg
mov
push
fstpl
cltd
nop
or
or
pop
and
bound
sbb
pop
mov
mov
loop
jl
xchg
sti
mov
lcall
in
sbb
stos
sbb
mov
sahf
shrb
push
popf
xchg
sub
pop
pop
in
push
sbb
push
ja
frstpm(287
sbb
sbb
or
sbb
cmp
sbb
les
lahf
and
add
mov
hlt
sbb
rcrb
add
mov
sbb
sbb
or
cltd
push
or
lcall
data16
or
pop
push
push
in
sbb
out
stos
lods
cld
cmpsb
loopne
pop
sbb
mov
cwtl
push
jmp
popf
push
xchg
fstp
adc
jo
pusha
pop
push
push
dec
loop
push
pop
fs
push
aad
gs
pop
sub
xchg
mov
lods
pop
loopne
test
in
or
jno
aas
repnz
inc
jo
sub
cwtl
pop
xchg
in
sbb
push
fs
mov
stos
adc
push
sbb
loopne
pop
lock
fucomp
or
fistpl
pop
in
and
lock
xchg
adc
roll
cmp
hlt
sbb
in
bound
jo
rcll
sbb
ljmp
sbb
xchg
sbb
fsts
rcrb
movsb
data16
pop
inc
mov
adc
sbb
jge
cltd
push
loope
dec
sbb
aam
jne
out
testl
fistpll
mov
add
sub
data16
cmpsb
ret
mov
sbb
iret
movsb
adc
pop
data16
or
adc
in
gs
pop
push
pusha
adc
adc
mov
aam
shrb
outsb
inc
stos
test
fistps
dec
sbb
sbb
xlat
xchg
adc
ret
push
jbe
in
inc
mov
arpl
shrl
aas
or
arpl
cmp
jg
aad
shrl
es
movsl
and
pop
jecxz
cmp
out
arpl
data16
jbe
mov
insl
dec
cmp
add
xor
sub
andl
xor
sahf
rorb
data16
xchg
stos
sbb
pop
add
and
cmp
jno
pop
mov
push
pop
pop
fmuls
xchg
mul
xor
in
lds
lcall
push
les
scas
fs
mov
into
pop
mov
or
or
int
add
jo
jo
xlat
xchg
push
sbb
adc
push
fcomps
aas
push
fisubs
div
push
adc
outsb
cmpl
movsb
add
fdivl
jecxz
pop
mov
shlb
loopne
orb
pop
in
in
fsubl
push
and
jb
xchg
xor
add
sbb
imul
pop
jne
fidivl
aad
xor
push
mov
fs
push
mov
or
scas
add
and
push
sbb
rcl
sahf
in
lcall
fs
in
push
push
add
sub
jp
stos
xchg
gs
mov
sub
loopne
xchg
insl
fdivs
fnstenv
sbb
fwait
push
fcomps
ficompl
lods
push
test
sub
rclb
jno
addr16
das
mov
repz
jo
stos
rorl
lcall
pop
pop
sub
test
push
or
stos
dec
jbe
sti
in
scas
sbb
lock
sbb
push
lods
in
sbb
lock
sbb
les
push
lret
scas
cmp
fiaddl
pusha
insl
inc
jo
in
bound
movsb
jo
jmp
sub
or
and
and
mov
xor
lea
lcall
data16
push
adc
xor
jl
lret
pusha
pop
sub
adc
xor
fisubs
jo
adc
mov
out
movsb
lret
jle
jbe
mov
ja
call
movsl
jecxz
push
inc
popf
dec
cmp
pop
outsb
mov
mov
fidivl
push
insl
notb
cmpsl
setl
pop
jns
or
push
xor
lods
adc
arpl
jo
stos
sub
jecxz
mov
out
mov
call
xchg
sub
adc
inc
mov
rolb
pop
pop
and
jmp
mov
sub
dec
sub
push
push
cltd
ficomps
mov
jne
xchg
insl
leave
sbb
mov
xchg
add
cmp
pop
cli
daa
dec
jle
lahf
pop
push
jl
loope
in
cmp
in
out
jmp
jo
dec
stos
jmp
arpl
pop
push
mov
cmp
fbstp
mov
mov
dec
fs
fiadds
pop
fwait
outsb
ret
into
test
movsl
jb
stc
insl
dec
cmp
faddl
add
divb
fildll
or
cld
aaa
or
nop
lds
mov
sbb
fs
and
bswap
mov
mov
and
pop
outsl
arpl
and
cmp
cld
sbb
mov
dec
push
mov
ret
loopne
pop
xchg
mov
sbb
lret
dec
imul
shlb
jno
xchg
adc
dec
lahf
fbstp
nop
xor
mov
dec
inc
mov
sbb
fldcw
pop
ljmp
nop
loopne
mov
mov
pop
sub
jecxz
jae
in
gs
xchg
jns
es
fwait
cmp
dec
stc
jno
iret
xor
addl
push
sub
pop
pop
push
jnp
jge
jb
stc
fstpl
adc
add
jb
stc
add
rorb
add
ljmp
jl
scas
push
cmp
pushf
daa
mov
pop
dec
jle
add
test
stos
sbb
pop
cmpsl
sbb
pop
dec
outsl
pop
push
jg
inc
aad
popf
cld
mov
loope
mov
outsb
push
jp
int3
pop
and
xchg
jle
mov
adc
xor
xor
dec
mov
jnp
xorl
sar
push
sub
data16
mov
mov
out
rcrl
aaa
jne
cmp
repnz
xor
pushf
in
mov
inc
or
movsl
mov
cmp
xchg
outsl
loopne
add
std
fldlg2
and
inc
int
fimuls
rorl
pushl
pop
cmp
in
testl
andb
imul
or
mov
mov
push
mov
mov
fbstp
push
dec
push
jecxz
adc
lcall
xor
sbb
xlat
arpl
arpl
mov
jmp
in
cli
mov
xor
xchg
lahf
ret
pushf
adc
push
add
fcoms
add
xchg
push
sub
or
stos
loop
aaa
lahf
repnz
lock
lods
mov
pop
push
pusha
mul
andb
in
scas
dec
popf
insl
xor
negl
xor
sbb
in
push
jb
pop
pop
clc
xor
test
mov
xchg
jno
jb
call
insb
outsb
jge
mov
sti
pop
mov
arpl
adc
cmp
jo
mov
data16
bound
or
or
nop
pop
jmp
xor
add
test
xor
jnp
outsb
dec
cmpsb
call
mov
loopne
push
xor
in
jmp
es
adc
jnp
sbb
jb
insl
jno
adc
cmp
push
cli
mov
mov
lcall
mov
mov
loope
xchg
mov
imul
inc
int
dec
fsubrs
jecxz
fs
jge
sbb
jmp
fwait
aas
adc
or
pop
fst
iret
mov
lret
jp
outsb
int3
in
dec
push
outsb
inc
dec
inc
ds
jo
rclb
sub
pop
in
push
mov
xchg
adc
mov
pushf
mov
lret
loope
and
inc
sbb
or
dec
out
sbb
movsl
sub
mov
mov
cld
inc
sbb
out
mov
dec
outsb
cmpsb
lahf
imul
movsl
icebp
jno
fwait
outsl
ja
push
mov
inc
mull
adc
rolb
or
out
mov
das
psubsb
xchg
sar
jnp
stos
test
dec
push
inc
lods
cmpsb
lods
pop
lods
push
cwtl
cmp
and
lcall
jbe
repnz
test
outsl
mov
lock
pop
test
enter
xchg
and
sbb
and
mov
scas
push
imul
sbb
out
jb
fisubs
pop
rcrl
out
decb
push
mov
stos
or
inc
mov
lret
inc
mov
cmp
jl
jle
mov
jae
cld
stos
jne
loope
sbb
std
addr16
out
jbe
ss
clc
dec
lahf
fisttpll
insl
jb
test
xor
insl
xchg
out
mov
mov
in
dec
mov
mov
sbb
jb
ds
mov
push
pop
lahf
sbb
and
xchg
pop
in
inc
mov
fwait
mov
cli
imul
push
cmp
icebp
pop
addr16
pop
sbb
pop
sbb
jge
jbe
mov
imul
cmp
pop
sbb
daa
outsl
push
inc
push
insl
mov
mov
lods
sbb
mov
sbb
daa
cmp
scas
popa
bound
roll
aas
pop
push
fdivrs
cmp
pop
bound
arpl
or
jnp
fsubl
out
repnz
inc
outsl
mov
fisubrl
and
adc
repz
xor
js
movsb
ljmp
mov
add
cmp
lahf
adc
inc
imul
arpl
outsl
adc
ds
testl
mov
or
fstps
fidivl
fstl
sub
push
dec
ss
aas
cmp
adc
stc
insl
in
adc
cwtl
sub
fisubs
pusha
and
outsl
xchg
lahf
addr16
jmp
loopne
out
jbe
nop
fidivl
pop
cmp
jl
xchg
test
xchg
mov
gs
cli
les
mov
cmp
in
cs
push
mov
push
les
outsb
lds
loop
jb
xorb
hlt
lock
outsb
push
lret
lcall
iret
add
stc
sbb
ret
mov
jl
and
sahf
imul
jo
mov
loope
dec
sub
xor
adc
jle
divb
out
lods
scas
pop
mov
mov
fstpt
or
xchg
scas
xchg
cli
sahf
sarb
xor
mov
jle
or
xchg
jmp
divb
add
jmp
and
adc
lods
stos
sbb
adc
gs
movsb
mov
adc
jge
popa
lret
sub
xchg
dec
lods
cmp
cmc
in
arpl
cmp
cmp
cmp
stos
mov
cmp
sub
mov
in
and
mov
mov
pop
mov
adc
mov
fs
rcll
inc
neg
jno
les
adc
and
fists
inc
insl
ret
cmp
fisttpl
popf
push
push
mov
jg
mov
jo
movsb
fistpl
xchg
sub
je
adc
jle
fwait
mov
inc
scas
aaa
mov
xchg
mov
fdivl
jl
int3
mov
dec
push
mov
xchg
mov
fisubrl
inc
inc
push
call
icebp
lahf
xor
pop
jo
scas
lcall
mov
push
inc
push
bound
les
pop
sbb
dec
add
push
cmp
jno
out
sbb
adc
jno
pop
fstpl
sub
push
outsb
sub
arpl
mov
dec
test
push
insl
xor
push
xchg
xor
andb
or
mov
mov
jo
jbe
movsl
jno
outsb
and
fbld
add
mov
mov
jge
popf
and
jmp
pop
push
std
sub
setp
in
in
xorb
cmp
xor
into
sbb
notl
mov
lock
pusha
les
movsl
data16
gs
cmpsb
jo
ret
xor
lock
sub
lods
call
pop
and
in
cmpl
cmp
push
sbb
andb
xor
daa
adc
mov
dec
inc
fdivr
pop
outsl
xor
pusha
lret
lods
mov
arpl
sub
adc
mov
movsl
jnp
push
lds
mov
addr16
cli
mov
in
pop
ss
fimuls
mov
ljmp
pop
andl
adc
cli
lahf
dec
add
into
mov
aad
xor
pop
jae
jle
dec
inc
adc
mov
inc
jl
imul
mov
add
and
push
xor
or
int
cmpsb
adc
test
adc
dec
mov
test
in
xchg
sti
loope
imul
jecxz
adc
jp
movsb
mov
jl
mov
mov
outsl
pop
pop
sub
pop
rclb
stc
repnz
mov
or
push
pop
fdivs
or
sbb
mov
xchg
outsl
sar
add
mov
movsl
repnz
inc
mov
jo
aad
andl
cld
pop
ret
sbb
nop
mov
and
mov
sti
cmp
mov
fwait
add
and
std
out
pop
subb
icebp
shl
out
loope
mov
data16
and
ljmp
sub
dec
pop
fdivl
add
jge
sbb
movsb
into
mov
jo
cmp
inc
push
push
sbb
lcall
loopne
jno
push
enter
icebp
lods
push
repnz
pushl
lods
loopne
mov
inc
xchg
sbb
xchg
cmp
jno
inc
pop
mov
xor
add
pop
jne
pop
mov
fdivrl
loopne
xchg
pop
out
jecxz
fucomip
pop
jecxz
lcall
inc
in
cli
pop
pop
add
xor
ss
push
jo
cwtl
xor
xchg
pop
adc
lret
push
adc
stc
inc
outsl
and
das
add
movsb
popf
mov
pushl
scas
repz
call
push
sbb
std
enter
mov
inc
sbb
icebp
xchg
cmpsl
sbb
pushf
and
fnsave
sub
int3
cmp
jno
mov
fs
scas
fstpt
mov
jo
dec
adc
adc
stos
ljmp
out
dec
loope
cmp
inc
cmp
rolb
movsl
scas
stos
call
cmc
sub
and
mov
sub
push
adc
pop
ljmp
addr16
push
dec
ret
popa
in
adc
mov
mov
xor
dec
mov
in
cltd
imul
or
in
push
jo
roll
fmull
bound
and
jmp
loopne
pushf
aas
rorl
loopne
or
and
push
nop
call
pop
les
faddl
or
adc
inc
mov
mov
push
fistpl
jmp
xor
inc
sbb
cwtl
ljmp
cwtl
scas
mov
xor
sub
mov
cld
test
jb
test
jno
fcmove
sub
mov
inc
mov
push
orb
scas
xchg
inc
aas
outsl
ljmp
sahf
out
xlat
adc
mov
call
push
pop
pop
andb
mov
outsb
int
test
mov
mov
pop
mov
jbe
leave
push
lcall
sub
dec
cmp
hlt
dec
sub
xchg
push
movb
lret
add
xchg
push
fimull
ja
cmp
leave
data16
xchg
pop
out
mov
xchg
mov
adc
adc
jl
imul
mov
clc
stc
and
xor
mov
sarb
add
cmp
push
sub
sbb
mov
add
mov
dec
ret
std
imul
jae
sbb
int3
mov
inc
sbb
sbb
stos
jle
mov
mov
mov
jnp
pusha
aaa
push
adc
fs
dec
mov
das
mov
in
jns
les
sub
in
mov
add
sub
mov
in
lods
dec
and
mov
xchg
pop
mov
pop
sub
or
mov
pushf
rorl
mov
ret
bound
pop
lds
in
push
lcall
jae
pop
ret
cli
in
xchg
mov
lcall
sub
in
mov
addr16
or
fstl
rcll
mov
out
test
mov
fs
inc
popf
push
lock
hlt
and
daa
mov
bound
fbstp
or
xorb
jnp
in
jmp
cmp
ljmp
in
mov
out
or
sub
int3
hlt
sub
in
ss
sbb
adc
jno
mov
iret
in
fcmove
or
insl
stos
call
repnz
in
rcll
repz
lahf
hlt
adc
xchg
mov
dec
stos
mov
sub
and
gs
mov
mov
hlt
push
ljmp
sbb
sti
cmpsb
imul
lcall
and
lret
imull
add
das
lret
dec
adc
mov
mov
lret
mov
mov
movsl
mov
mov
add
orb
mov
mov
mov
je
push
jo
xor
out
or
ss
lock
sahf
outsb
dec
jnp
sub
mov
dec
lods
jb
inc
jle
rorb
mov
inc
pusha
dec
dec
rcll
mov
adc
jae
stos
pop
push
inc
dec
fistps
sbb
dec
push
loope
ss
cmpsb
xor
adc
dec
ljmp
mov
addr16
sub
ljmp
dec
out
jbe
int3
mov
mov
imul
ljmp
sub
dec
nop
insl
fnstcw
loopne
gs
icebp
ja
in
jmp
das
xor
sets
sub
cld
or
mov
mov
and
sub
lock
loopne
mov
inc
loopne
jno
imul
ds
fsubrl
mov
or
jae
in
out
fs
imul
gs
dec
or
or
pop
jne
jo
daa
xchg
pusha
jns
pop
lods
sbb
fcomps
adc
adc
dec
inc
xor
ljmp
rol
mov
jo
outsl
push
outsb
in
mov
insl
sub
pop
jmp
jnp
out
fcompl
xchg
mov
sub
fldcw
or
pop
lret
pop
inc
loope
fsubr
sbbl
cmp
ja
push
imulb
xor
or
repnz
clc
and
jge
out
cli
popa
or
daa
outsb
mov
scas
sbb
sbb
mov
out
out
ja
push
jno
out
cmp
push
cmp
fmuls
mov
inc
idiv
mov
or
pop
or
sbb
push
or
sub
fisubrl
inc
pop
jge
mov
inc
icebp
jo
or
stos
mov
ds
popa
mov
xchg
push
pushf
mov
sub
fistpll
aas
adc
imul
mov
in
mov
mov
lret
add
and
enter
mov
roll
fimull
in
ffreep
dec
cmp
push
cs
imul
negl
popa
and
xchg
insb
mov
mov
dec
jle
mov
jmp
xchg
fcoml
lock
xchg
mov
xchg
add
push
cli
popa
mov
inc
scas
frndint
inc
add
push
add
dec
cmp
adc
dec
cmpsb
pop
movsl
clc
push
gs
adc
cmpsb
test
popf
test
sbb
lret
adc
mov
fucomp
sbb
adc
cmpsl
lods
rclb
shl
popa
adc
loope
cmpsb
pop
inc
lods
sbb
cmp
jno
inc
arpl
inc
sahf
mov
inc
into
aaa
jne
mov
cmp
jg
pushf
je
aaa
push
pop
mov
outsl
arpl
inc
push
cmpsb
mov
sbb
imul
mov
mov
mov
sub
sbb
repnz
test
jno
pop
and
sbb
mov
cmp
inc
cmp
frstor
jno
pushf
add
xor
test
inc
jno
push
jno
inc
ljmp
icebp
fisttpll
sbb
mov
mov
mov
or
or
andb
or
lods
sahf
bound
outsb
bnd
add
daa
adc
cmp
iret
out
fnsave
sbb
fnsave
and
fstp
stos
and
sbb
inc
out
and
sbb
dec
and
xchg
dec
ficoml
ret
mov
loope
mov
pop
push
sbb
ja
popf
mov
sbbb
mov
stos
xchg
dec
jo
pop
dec
adc
inc
lods
pop
xor
mov
jmp
pop
pop
jae
scas
mov
pop
ss
mov
pop
out
or
cmc
inc
mov
andl
adcl
sub
outsb
in
mov
in
in
or
scas
repnz
in
jecxz
leave
ja
xchg
mov
fistpl
lcall
sbb
mov
fwait
xor
es
sbb
fstps
dec
lea
pushf
outsl
jne
pop
sbb
mov
xor
shll
xchg
or
fstpl
outsb
dec
xor
mov
aas
mov
setb
xor
imul
mov
fcompl
cmp
bound
movsl
sbb
in
adc
out
movsb
popf
jb
mov
dec
inc
inc
mov
mov
pop
pusha
daa
push
outsb
mov
leave
shl
jmp
shlb
sbb
inc
aad
mov
lea
inc
jecxz
push
adc
pop
scas
cltd
push
sbb
dec
ja
rolb
cmp
fimull
in
mov
arpl
sub
outsb
bound
mov
mov
add
jb
pop
and
sub
cmp
ficoms
ret
arpl
pop
leave
inc
mov
inc
dec
mov
xchg
scas
sub
cmpsl
adc
mov
enter
jns
pop
int3
xchg
fcomps
enter
pop
and
ret
or
inc
lahf
imul
sub
sbb
inc
scas
mov
xchg
pop
insl
mov
movsb
cwtl
das
push
loopne
xor
mov
mov
and
add
sbb
mov
jns
and
xor
mov
call
mov
pop
loopne
xor
push
inc
and
xor
arpl
mov
mov
jne
sub
loope
push
pop
mov
div
ss
push
outsb
pop
xchg
mov
mov
dec
and
mov
or
sbb
jb
inc
sbb
loop
push
lret
mov
pop
xchg
aaa
imul
xor
and
mov
sbb
or
aaa
sbb
rolb
mov
xchg
movsb
and
push
cli
or
mov
push
lahf
ret
mov
jno
sbb
xorb
jno
xchg
push
mov
pop
jmp
pop
adc
sub
sub
sbb
inc
xchg
das
cmp
xor
and
int3
in
sbb
push
iret
cmpsl
and
lret
adc
pusha
in
ficomps
or
imul
jo
jo
lods
mov
xor
xor
push
dec
xchg
into
push
imul
movsb
test
out
sbb
sbb
mov
ret
call
stos
adc
mov
adc
push
loope
icebp
jl
dec
adc
add
fimuls
ret
sbb
movsl
mov
psllq
push
ljmp
dec
jne
scas
dec
sbb
std
xchg
xchg
outsb
pop
jae
push
jno
gs
cwtl
clc
fs
stos
cwtl
fwait
jg
xchg
xchg
xchg
xor
jmp
and
adc
jl
and
fiaddl
pop
scas
scas
notb
or
cmc
ds
or
pop
push
sub
popf
cmp
mov
mov
sub
add
int3
lahf
mov
or
mov
or
test
xchg
adc
loop
test
addb
fiaddl
cs
shrb
ljmp
outsl
fimuls
stos
ret
add
mov
je
pop
add
loope
push
mov
cwtl
mov
jae
pop
icebp
cli
inc
inc
sbb
dec
aaa
pop
xchg
ja
push
fs
mov
push
loope
inc
and
dec
call
sbb
jmp
addl
mov
andb
icebp
sbb
jnp
testl
lea
lock
test
jmp
es
in
jb
dec
outsl
cwtl
inc
in
sbb
movsb
mov
movsb
pushf
or
cmp
sbb
lret
push
mov
sbb
sub
es
loope
jb
fsubl
out
adc
jecxz
pushf
xor
jno
loopne
adc
mov
sbb
push
pop
outsb
int
sbb
lods
in
es
es
cmpsl
push
dec
jb
sbb
adc
dec
and
dec
outsb
adc
mul
dec
lret
test
fs
imul
jp
js
sar
inc
inc
mov
adc
scas
push
mov
or
xor
mov
xchg
lock
and
pusha
and
rolb
add
das
cmp
xor
dec
jne
xlat
xor
sub
mov
icebp
dec
mov
repz
add
xchg
add
outsl
mov
outsb
xor
adc
in
mov
in
dec
jo
loope
jge
pop
push
dec
xchg
cmp
mov
push
jl
roll
fwait
push
dec
and
sbb
stc
jecxz
rcrb
int3
xchg
insl
adc
cmpsl
ja
push
pop
stos
and
lock
fstpt
daa
fbld
dec
sahf
gs
inc
mov
inc
push
mov
mov
push
ret
sarl
daa
pushf
or
adc
aaa
push
mov
fstps
sub
xchg
out
xchg
fs
or
dec
mov
cmp
dec
xchg
mov
inc
lahf
test
inc
and
in
imul
fsubr
sarl
imul
fs
out
stos
stc
cli
pop
mov
mov
jl
shr
mov
scas
or
lahf
mov
mov
imul
or
fmuls
add
inc
cmp
fisttpl
inc
sub
mov
lods
lahf
xchg
or
leave
push
jno
dec
fstl
fdivr
pop
sub
out
mov
lds
sbb
pop
aad
sub
and
pop
and
in
outsb
movsb
xchg
sbb
dec
sbb
lock
sbb
movsl
je
mov
fstl
push
mov
pop
sbb
ss
lret
mov
jle
jae
pop
sub
stos
add
mov
mov
fistpl
cwtl
mov
mov
mov
enter
jmp
imul
scas
in
fistpl
add
fcoml
xor
fnstsw
sbb
cmp
lods
fs
lret
jge
and
push
or
and
mov
mov
dec
add
xchg
mov
xchg
lods
aad
jecxz
dec
lods
test
enter
jmp
mov
mov
popa
lods
in
mov
mov
ss
xchg
mov
jbe
ret
sub
mov
mov
cmpsl
outsb
or
or
sbb
sbb
in
ret
imul
mov
cltd
movsb
mov
sub
bound
ret
or
out
sbb
dec
loopne
mov
fwait
xchg
cmp
aaa
pop
movsb
cmp
jge
ljmp
mov
add
push
pushf
inc
sbb
ret
and
roll
inc
mov
or
sub
and
ja
je
sbb
mov
xchg
or
adcb
test
cld
dec
cltd
sbb
push
or
loope
loop
imul
sbb
sbb
daa
loop
sbb
lods
lea
cmp
sahf
clc
and
ja
out
cmp
aas
dec
cwtl
dec
mov
sbb
aaa
add
rorb
dec
imul
outsb
lcall
mov
jb
inc
cmp
xchg
lods
sbb
inc
sub
adc
inc
in
pop
pop
fs
adc
lock
jnp
fistpl
cmp
popf
mov
outsl
mov
popf
jne
rolb
inc
lret
adc
cmpsl
push
mov
jg
data16
in
push
int
adc
xor
jp
push
pop
sbb
mov
out
inc
mov
fwait
jae
divl
insl
xor
cmp
mov
lods
pop
in
gs
sbb
push
in
js
imulb
adc
fnstenv
pop
or
pop
jl
pop
dec
adc
scas
fimuls
pushf
fisubrl
clc
fdiv
arpl
adc
adc
sahf
shll
lret
outsb
sub
or
mov
sti
cld
add
lahf
and
clc
lea
mov
push
add
push
in
aam
push
adc
imul
in
aaa
add
xor
adc
fwait
pop
imul
lods
or
lods
insl
sbb
fwait
pop
loopne
add
mov
inc
cmp
cltd
insl
sbb
mov
outsl
hlt
sbb
jecxz
shll
std
dec
jge
or
stos
add
push
cmp
sub
sbb
dec
loopne
xor
inc
leave
mov
pop
stos
addr16
pop
cmp
pop
into
outsb
mov
dec
sbb
mov
es
movsb
xchg
and
pop
mov
mov
popf
test
push
pop
jle
in
or
outsb
mov
add
or
leave
xchg
xchg
lods
cs
jmp
cs
cmp
xchg
cmp
sbb
push
lret
in
jl
in
xchg
iret
outsb
lods
dec
addr16
push
and
cmp
add
js
mov
xor
inc
and
jno
fs
pop
outsl
addr16
test
pop
addr16
mov
sarb
popf
pop
gs
push
mov
or
fs
cwtl
insl
xchg
and
pop
xor
adc
cmp
js
mov
or
push
push
ljmp
lods
pop
dec
xor
mov
popa
push
fldcw
dec
xorb
and
ljmp
jecxz
insb
add
inc
mov
mov
ror
dec
xor
jno
arpl
pop
cmpsw
mov
repnz
fisubl
inc
push
sub
push
mov
mov
sub
sbb
shll
inc
mov
movsb
sbb
ror
sbb
shll
push
or
xor
xor
lahf
js
pushf
enter
fsubl
lcall
fcomi
pop
add
mov
push
icebp
arpl
sub
out
out
cltd
add
xchg
adc
scas
mov
sbb
sbb
movsl
sub
lea
mov
and
popf
or
loopne
xor
sub
outsb
and
int3
and
es
mov
mov
imulb
xchg
push
shr
push
and
sub
mov
inc
insb
mov
jp
mov
sbb
hlt
and
and
fildll
ret
daa
scas
sbb
mov
cmp
fdivrp
push
fisttpl
pop
fbld
data16
xchg
pop
scas
pop
das
inc
cmpb
push
inc
mov
xchg
push
sub
mov
lcall
pusha
lods
pop
or
pop
cli
mov
xchg
mov
filds
sbb
imulb
jmp
loop
push
xor
push
xchg
rolb
out
int3
in
fisubl
lea
sbb
leave
sub
out
lcall
push
inc
aaa
mov
fwait
mov
aam
sbb
add
jmp
sbb
lods
negb
popf
aaa
jnp
sub
xchg
ljmp
mov
lahf
xor
adc
outsb
dec
xchg
loope
mov
fmull
fdivl
xorb
adc
xchg
mov
sbb
inc
dec
sbb
faddl
lock
jnp
insl
jecxz
lahf
mov
dec
inc
push
push
inc
adc
xor
xchg
popf
sub
jns
sub
lahf
out
fnsave
je
inc
cmp
mov
adc
insl
das
pop
fdiv
or
bound
sub
les
or
mov
arpl
mov
aas
xor
jns
sbb
in
or
and
sub
inc
mov
repnz
idivb
adc
data16
mov
push
sbb
pop
lock
sbb
pushf
dec
mov
jno
sbb
rcl
xor
out
sbb
sbbl
andl
lds
cmpsb
add
dec
mov
test
cmpsb
or
mov
mov
js
fdiv
or
lds
mov
dec
or
push
jp
int
mov
cltd
or
sahf
std
dec
xchg
lcall
mov
lea
jo
sub
xor
adc
push
mov
dec
mov
mov
gs
shlb
xor
sbb
push
mov
mov
pusha
and
or
pop
fcmovu
mov
pop
scas
xchg
jge
lods
pushf
es
lds
push
sbb
jns
sbb
inc
sub
jge
popa
cmc
arpl
adc
adc
mov
int
cmpsb
sbb
shlb
mov
sbb
mov
lahf
adc
rcll
loopne
hlt
mov
inc
stos
lahf
mov
fwait
xor
lods
loope
sbb
mulb
adc
outsl
sbb
test
daa
stos
loop
es
cmp
outsb
jbe
dec
sbb
or
push
sbb
pusha
lea
xor
pop
mov
xchg
sub
adc
dec
mov
pop
mov
idiv
and
js
call
lahf
jns
push
pop
sub
fwait
jbe
aam
fcompl
stos
or
int3
ficomps
dec
fcomps
cwtl
push
and
adc
test
mov
push
adc
lcall
xchg
push
cmp
fs
das
test
mov
jns
xchg
inc
lea
xchg
sub
mov
shlb
ss
imul
lret
and
cld
dec
out
leave
ret
xchg
xchg
or
outsl
mov
cwtl
xchg
or
and
ret
xchg
and
mov
cmp
and
sub
or
mov
push
mov
das
popa
clc
push
xor
je
mov
pop
movsl
dec
ret
add
push
js
mov
add
xchg
cmpsb
iret
mov
cld
adc
dec
mov
fldl
mov
jns
ss
es
adc
jecxz
push
int3
sbb
aaa
clc
or
mov
rcl
mov
mov
fstpt
pop
push
dec
pop
insl
adc
xchg
mov
lods
jo
popa
mov
movsl
pop
imul
ficoml
add
test
subl
fstl
add
add
rorb
and
mov
mov
es
fcoml
fcmovne
test
jno
sti
jb
cli
or
add
popf
test
loope
push
lock
add
sahf
cmp
push
mov
cmpsl
adc
or
cmp
dec
push
shrb
aad
test
inc
test
adc
gs
rol
in
mov
mov
sbb
int3
mov
clc
push
lds
pushf
fwait
jno
pop
add
lea
dec
fistl
sbbb
mov
loope
xor
xor
mov
into
and
jb
xchg
divb
mov
lods
mul
xchg
sub
pop
pop
add
insl
and
andb
sub
inc
pop
cs
int3
mov
add
insb
sbb
xor
sub
jbe
in
dec
xchg
jmp
push
in
movsl
xchg
ja
sbb
adc
xor
jg
aaa
loopne
mov
imul
loope
mov
icebp
add
lods
xchg
mov
adc
das
lcall
bound
aaa
lcall
pop
pop
and
xchg
and
xchg
pop
dec
loopne
addr16
xor
pop
push
mov
lret
imul
outsl
xchg
jmp
xor
add
aas
mov
jb
or
inc
sbb
dec
imul
xchg
in
ljmp
sbb
dec
arpl
out
lcall
jno
mov
dec
in
and
jl
sbb
loop
mov
mov
in
inc
fs
cld
repnz
or
mov
sub
stos
pop
jbe
ljmp
stos
sub
mov
movsl
shlb
adcl
push
stc
int
in
ret
and
push
cltd
jecxz
mov
arpl
pusha
jo
out
inc
cli
pop
inc
or
imul
and
in
test
cli
or
faddp
popf
ljmp
jle
mov
mul
adc
cmp
and
sub
dec
fidivs
or
fisubl
push
bound
ja
test
cmpsl
pop
out
xorl
mov
outsl
mov
loopne
adc
mov
xor
push
ret
repnz
cmp
test
push
int3
push
pop
inc
fistl
insl
adc
push
sbb
jno
movsb
jo
fucomp
add
mov
dec
out
cmp
add
sbb
mov
adc
repnz
movsb
adc
push
icebp
pushf
lcall
arpl
xchg
cmpsl
sbb
sbb
mov
mov
adc
cwtl
int
stc
mov
out
loopne
out
lret
cmp
cmp
popf
fucomp
push
out
jbe
dec
cwtl
int
adc
xor
out
sbbb
pusha
cmp
negb
int
pop
push
pop
xor
push
daa
push
push
dec
jo
arpl
push
jo
mov
pop
pop
lock
outsb
jl
in
gs
adc
sub
repz
fisubl
jb
je
pop
cmp
push
cmp
sbb
inc
lock
adc
aam
xchg
or
rol
fidivrs
and
iret
mov
inc
movsb
sbb
mov
adc
out
push
sbb
es
mov
out
push
fidivrs
xchg
pop
pop
sbb
jl
push
inc
fcompl
imul
xchg
cmpsb
pop
push
jo
dec
daa
xchg
add
sub
mov
push
xchg
pop
jl
mov
dec
lahf
lcall
adc
sub
jmp
out
fisubl
repnz
inc
jbe
push
jae
clc
out
mov
rcrb
add
and
xchg
mov
and
pop
insb
mov
adc
js
pop
popf
sub
stos
push
out
or
and
aaa
mov
and
fisttps
mov
test
aaa
mov
mov
sbb
dec
lds
mov
out
mov
ja
xor
sti
pop
mov
fisttpl
repnz
loopne
jb
mov
inc
push
icebp
repnz
sub
jae
sub
pop
pop
mov
sbb
xor
adc
cmp
jbe
cmc
lods
inc
push
lea
roll
add
mov
ljmp
jb
fcompl
into
mov
xchg
lahf
rcrl
in
and
ret
icebp
jo
cmp
imull
test
push
cwtl
cld
mov
rcrl
ss
lahf
imul
lods
add
mov
sbb
aad
xor
dec
pop
cld
dec
inc
pop
add
stos
test
pop
xchg
adc
movsl
dec
scas
cmp
lods
jns
lcall
pop
jne
cld
adc
gs
mov
dec
xchg
sbb
sbb
pop
orl
sub
add
std
add
loopne
pand
icebp
mov
hlt
jb
arpl
cmpsb
jl
es
xchg
xchg
cmp
inc
mov
adc
and
dec
pop
shl
xor
addr16
out
dec
popf
cli
adc
or
or
mov
repz
jbe
out
popf
mov
aad
inc
out
nop
ljmp
sbb
scas
sti
notl
xchg
lock
iret
test
or
mov
notb
xor
mov
sub
sub
mov
gs
popf
sbb
dec
pop
add
outsb
push
addr16
push
push
dec
test
lea
sbb
xor
push
mov
sub
lret
sub
in
std
push
cmp
ret
mov
mov
iret
adc
jb
std
testl
mov
inc
int
loopne
add
lods
fs
cmpsb
mov
ss
fidivs
jno
ss
and
ss
nop
add
pop
pop
arpl
lcall
and
dec
pusha
sub
test
mov
ljmp
fwait
mov
xchg
fcomip
mov
or
jge
lock
lea
add
jnp
mov
mov
cwtl
inc
es
testl
or
mov
pop
jno
into
dec
mov
jb
inc
xor
repz
lahf
sbb
and
mov
jecxz
sbb
push
lock
enter
add
outsb
mov
scas
dec
jno
inc
pop
add
loop
icebp
add
adcb
stc
lods
cmp
test
mov
jecxz
das
movsl
lcall
push
adc
int3
lret
aam
dec
mov
in
hlt
mov
sbb
push
pop
mov
dec
cmc
pop
lcall
mov
push
scas
ret
pop
insl
mov
mov
mov
mov
pop
sub
sub
fistpll
mov
xchg
in
sub
mulb
shlb
xchg
pop
xor
inc
mov
mov
sbb
add
ss
std
data16
enter
xchg
aas
or
or
lods
sub
mov
lret
mov
out
inc
outsb
cld
xor
push
sub
scas
cld
adc
scas
mov
and
xor
daa
das
jp
push
push
mov
test
and
nop
jo,pn
xor
xor
xchg
jge
mov
gs
lods
int
or
ljmp
dec
or
adc
cwtl
inc
jo
jp
aaa
inc
dec
pop
aad
and
mov
mov
stc
ljmp
pusha
xor
mov
mov
xor
arpl
cmp
outsl
sbb
add
sahf
mov
sub
add
arpl
push
arpl
push
xchg
push
lods
aad
rcrl
stos
jo
xchg
cmp
cmpsb
or
mov
lret
insl
pop
add
data16
fcoml
dec
scas
push
mov
adc
test
pop
popf
jno
movsl
jp
sub
inc
xchg
dec
push
sub
popf
sub
in
scas
dec
push
stos
fucom
sbb
mov
and
sub
sbb
sbb
insl
dec
push
sub
xor
mov
adc
mov
mov
clc
lcall
fdivrl
fwait
add
shll
mov
mov
in
mov
cmp
daa
scas
lcall
fisttpll
sbb
xor
stos
lods
and
add
fwait
mov
cmc
adc
ret
lcall
dec
hlt
ss
add
push
inc
xchg
inc
pop
or
push
pushf
adc
cli
cmp
sbb
lods
ja
mov
mov
mov
mov
adc
add
pushf
xchg
mov
int
jo
dec
sahf
ss
xor
pop
movsb
cli
inc
add
inc
aam
ret
cmc
push
cwtl
ljmp
movsb
fistl
mov
and
or
clc
or
mov
cltd
cmc
test
ljmp
icebp
fdivl
sub
pop
mov
inc
jnp
adc
dec
cmpsb
and
xchg
and
cmp
clc
push
scas
sbb
inc
add
and
pop
outsb
mov
sbb
popf
sub
popf
imul
pop
push
sub
add
addr16
in
inc
ljmp
xchg
adc
push
inc
jno
cmp
mov
push
test
not
mov
push
inc
negb
lcall
insl
stos
pop
xor
lcall
jb
mov
mov
outsl
loope
outsl
jnp
pop
mov
shlb
or
loope
outsl
pushf
mov
jle
imul
cmp
jg
cmp
push
out
jae
adc
add
jb
pop
mov
std
mov
sbb
push
adc
jl
pop
xor
push
rorb
popf
int3
je
imul
dec
sbb
ror
imul
testb
xchg
hlt
aaa
inc
xchg
icebp
mov
pop
orb
imul
xlat
xor
loopne
xchg
idivb
ljmp
cmp
cmp
les
pop
enter
jae
iret
mov
adc
inc
out
jge
mov
mov
inc
xor
adc
push
mov
mov
fwait
lock
and
and
xchg
imul
dec
shrb
pop
int
pop
insl
int3
std
xor
sbb
add
adc
sbb
adc
insl
xchg
fs
rcrb
les
dec
jno
lcall
mov
dec
cmc
push
push
inc
xor
lret
sbb
dec
jmp
adc
dec
push
lret
mov
dec
push
ljmp
inc
adcb
push
mov
pop
pop
ret
orb
mov
bound
int
popf
lcall
cmp
or
mov
lods
ja
adc
imul
mov
rol
rclb
std
jbe
pop
inc
xor
xor
das
sub
aaa
pop
test
push
mov
sbb
iret
pop
cld
call
inc
xor
inc
lock
add
fildll
loope
sbb
or
jge
mov
xor
dec
in
xchg
push
shl
subb
pop
ret
roll
in
sub
cmp
pusha
inc
inc
cs
adc
aam
sbb
add
mov
and
pop
sbb
xchg
cmp
mov
mov
scas
cmp
xorl
dec
inc
popf
or
mov
xor
movsb
not
jge
lret
rorl
cs
xchg
mov
ret
mov
cmp
pop
jp
ja
pop
cmp
cmp
pop
or
mov
gs
fwait
jo
lock
push
imul
lods
push
mov
pop
notb
roll
xor
addr16
mov
pop
jb
xor
jbe
mov
imul
fcoml
mov
and
add
jge
push
into
and
clc
fisttps
jb
xor
shl
push
or
mov
mov
jno
mov
xor
call
jnp
mov
mov
in
dec
in
mov
ret
sbb
xor
nop
lods
out
movsb
pop
mov
pop
fwait
fwait
jo
sbb
testb
mov
xlat
clc
iret
aam
cli
mov
and
cli
shll
jb
int3
jo
fmuls
add
inc
jge
movsb
outsl
fldt
movsb
sbb
imul
sbb
xchg
mov
jo
jbe
cmpb
mov
ret
call
hlt
lahf
es
mov
sub
lahf
lahf
mov
push
mov
movsl
push
mov
or
int3
cmp
xor
dec
mov
xchg
mov
stos
es
adc
imul
sbbb
mov
ja
leave
push
xchg
scas
jmp
dec
popf
in
or
add
sbb
mov
jb
or
in
ror
gs
inc
mov
push
pusha
loopne
roll
lret
enter
push
hlt
dec
add
es
push
js
mov
stos
push
hlt
sub
inc
movl
xor
add
lahf
int
outsb
je
inc
adc
aam
jmp
aam
adc
cmc
out
and
roll
mov
stc
aam
push
in
shlb
mov
mov
gs
lahf
pop
cmp
ds
loopne
out
orb
imul
ret
push
mov
xor
push
push
iret
loopne
jo
jge
stc
mov
pop
fs
dec
insl
adc
inc
js
js
dec
imull
mov
mov
fs
fiaddl
dec
push
pop
das
mov
inc
cmp
shl
cld
fists
lea
dec
pop
shrb
out
add
in
pop
fidivs
xor
sbb
mov
mov
cmp
call
and
inc
mov
fwait
mov
int3
or
ja
test
xchg
sbb
push
mov
jbe
jge
lcall
and
or
lret
lea
repnz
xchg
std
enter
and
push
push
jnp
sbb
and
addr16
mov
arpl
cli
fwait
loop
pop
push
dec
pushf
adc
scas
and
not
cmp
in
sbb
leave
movsl
imul
mov
pop
and
shrl
sahf
add
ror
in
sbb
leave
popa
sub
jns
movsb
add
jno
mov
cmpsb
adc
imulb
rolb
push
inc
and
fisubl
lahf
mull
jno
arpl
ljmp
dec
mov
pop
shl
mov
mov
xchg
imul
lcall
push
jmp
and
test
loop
sbb
fadd
faddp
add
loope
ljmp
js,pn
ret
movsl
mov
mov
mov
mov
and
movsb
add
dec
pushf
push
cmp
sbb
jle
addr16
mov
jl
push
repz
repz
negl
lods
jno
mov
adc
shrb
stc
and
push
shlb
stos
es
in
enter
mov
arpl
sbb
imul
or
fisubrs
sub
xchg
lods
mov
lret
mulb
loop
push
in
in
loop
sbb
adc
and
nop
dec
add
sti
push
cmpsl
push
aas
lcall
nop
ret
lock
popf
jno
fs
dec
fwait
outsl
aad
rorl
jbe
cmp
mov
data16
cmpsb
sbb
pop
jmp
sub
mov
test
dec
mov
or
sub
jp
out
jbe
or
mov
mov
and
sub
aas
lret
test
shl
ja
fistpll
lods
xchg
std
ss
push
push
cld
sub
imul
dec
fwait
popf
loopne
pop
dec
mov
lret
mov
mov
pop
sbb
fldt
and
imul
pushl
jns
lret
inc
xchg
fwait
jge
stos
cltd
insb
mov
push
pusha
sbb
mov
pushf
mov
cmp
mov
push
mov
ljmp
mov
pop
ljmp
sub
ljmp
outsb
loope
ljmp
sbb
sbb
and
mov
stos
pusha
stos
pop
push
fwait
out
out
ds
mov
adc
movb
push
movsl
mov
dec
and
fwait
stos
and
inc
pop
pushw
leave
clc
lcall
mov
adc
xor
rolb
pop
ljmp
outsb
or
jbe
bound
test
or
bound
sahf
xchg
sti
adc
push
cmp
loope
andl
jb
xor
adc
std
lcall
mov
addr16
lahf
popf
push
in
adc
icebp
or
mov
xchg
sbb
adc
lret
data16
push
mov
fiadds
mov
ret
fidivl
xchg
notl
std
iret
popa
sub
push
mov
stc
cmc
aad
mov
adc
or
xor
in
mov
cmp
mov
mov
add
pusha
es
inc
jns
and
adcb
and
out
mov
and
and
daa
add
leave
ds
out
jns
adc
push
mov
mov
cs
sbb
push
dec
je
outsl
in
adc
imul
push
inc
out
fs
xlat
insl
sbb
fisttps
pop
inc
gs
dec
pusha
jl
es
sub
in
mov
iret
push
add
loope
lods
lcall
and
jbe
cmc
imul
jno
xchg
xchg
dec
adc
lcall
mov
repnz
mov
mov
rcrb
lcall
pusha
ficoml
sti
frstor
pop
ljmp
push
cmpsl
or
and
fs
mov
ret
sub
lds
sub
mov
mov
cli
enter
push
xor
sbb
sbb
cmpsb
call
dec
add
stc
push
mov
leave
and
popf
mov
dec
pop
adc
mov
mov
jmp
mov
inc
sbb
dec
es
xor
loopne
rcr
cmp
bound
daa
bound
mov
clc
pop
enter
xor
mov
mov
sub
add
mov
ficoms
sub
push
stos
add
jmp
in
dec
mov
adc
movl
fdivrs
call
dec
leave
stos
insl
in
dec
cmp
cmpsb
sti
pop
and
add
movsb
jno
out
movsb
mov
mov
or
pop
jb
mov
jl
inc
dec
mov
jbe
je
cli
mov
pop
xchg
cmp
xor
dec
orb
pop
or
mov
mov
clc
mov
bound
push
outsb
bound
sahf
stos
cld
imul
dec
std
test
cwtl
rorl
mov
pop
jae
mov
inc
dec
sahf
push
mov
jbe
int
andl
sti
imul
sub
mov
icebp
cmp
add
push
out
pop
lret
iret
pop
lock
ret
cmp
add
clc
mov
inc
pop
mov
sbb
pop
sahf
cltd
test
mov
adc
push
xor
int
mov
adc
movsb
ret
mov
xchg
xchg
xlat
xchg
pop
fs
push
stos
loope
dec
sub
enter
push
inc
cmp
sub
cmp
pop
rorb
mov
pop
mov
push
pop
jb
inc
std
lahf
data16
push
cmpsb
and
enter
lods
out
jno
test
in
negb
adc
pop
lcall
sub
clc
mov
add
fistpll
push
jmp
jo
or
frstpm(287
mov
dec
mov
xchg
adc
vmwrite
inc
pop
and
test
and
sahf
lsl
mov
jecxz
mov
mov
lcall
aad
fsub
xchg
mov
dec
stos
push
dec
nop
jge
mov
mov
sbb
cs
pop
pop
movsl
fnstcw
mov
nop
arpl
es
pop
pop
cmp
jmp
and
mov
cmp
xchg
sub
mov
dec
imul
sti
movsl
xchg
test
std
iret
data16
mov
cltd
push
sbb
lods
sbb
mov
lds
in
adcb
insl
pop
dec
push
movsl
lret
jb
in
popf
fcoml
pop
jne
outsb
ja
push
push
mov
daa
sub
fldenv
inc
fmuls
in
stos
dec
or
fwait
das
mov
sbb
push
mov
in
sbb
and
and
and
imul
mov
mov
pop
nop
icebp
inc
ja
lods
sub
cmp
loope
mov
mov
mov
leave
lods
fidivrs
cmp
sub
shrl
jp
dec
add
outsb
push
push
int
stos
pop
out
or
outsb
lods
dec
sbb
xchg
add
repnz
cmp
in
jb
xchg
outsl
dec
fcoml
pop
popf
adc
or
sbb
in
cmp
inc
dec
mov
xchg
sbb
or
fnstsw
div
lock
and
ljmp
pop
mov
and
inc
std
iret
or
out
sbb
cmpsb
fucomi
leave
push
into
pop
hlt
push
pop
sub
cltd
cltd
jae
ljmp
arpl
fsubrl
jbe
push
or
dec
sbb
sti
ljmp
pop
or
or
pop
adc
sbb
xor
movsl
clc
out
pop
outsl
cmp
mov
loope
and
shll
in
inc
imul
mov
popf
mov
out
es
lock
testl
les
ljmp
arpl
cmc
out
and
ljmp
add
push
push
jnp
sbb
fisubrs
and
add
mov
fs
push
sub
das
mov
fucomi
jnp
sbb
jns
dec
stos
sub
pusha
jp
mov
sub
adc
or
add
adc
mov
cmc
and
xor
out
mov
jo
pushf
cmp
bts
adc
adc
jae
inc
jns
fimull
sarl
mov
cs
decl
stc
cmp
add
mov
add
adc
inc
adc
insl
sbb
outsl
push
in
fs
filds
sub
bound
mov
pop
bound
inc
xlat
rolb
pop
mov
mov
mov
inc
popf
and
shlb
sarl
addr16
sbb
test
mov
inc
mov
push
or
mov
lret
jbe
dec
sbb
std
jecxz
ja
repnz
ljmp
xchg
mov
imul
dec
mov
xchg
out
pop
hlt
or
pop
jmp
test
mov
cmp
sbb
dec
shll
inc
movsb
dec
daa
pop
fistpl
repnz
sub
pop
mov
and
mov
pushf
daa
mov
scas
cwtl
cltd
xor
ljmp
lret
push
xor
and
out
push
sbb
or
push
aaa
lret
in
lods
sbb
fisubrl
daa
icebp
push
push
jbe
leave
jo
fwait
inc
or
fprem1
into
sub
movsb
cmp
insl
fldenv
dec
xlat
lock
jb
decb
shr
xchg
addr16
inc
jno
lods
pop
cmpsb
cmc
and
cltd
aaa
pop
sar
push
xchg
arpl
and
icebp
sbb
ret
adc
sbb
lods
xor
jmp
fnstcw
popf
imul
icebp
mov
bound
rcll
in
popf
sti
call
mov
adc
mov
cmpsl
std
mov
xor
xor
mov
xor
mov
ret
ljmp
je
sbb
lcall
dec
cmp
or
insl
sahf
cmc
pop
jno
push
lret
jl
fidivrs
addr16
out
pop
inc
pop
fsubrl
ljmp
ljmp
cmc
cs
ljmp
addr16
mov
icebp
fnstsw
aam
jg
adc
inc
out
pop
cld
pop
ljmp
cmpsl
loopne
push
dec
sub
fidivrl
loopne
stos
or
or
sbb
loop
jo
out
xor
es
mov
sub
and
or
stos
and
inc
or
and
pop
shll
mov
clc
mov
or
roll
add
enter
aam
loope
push
sbb
cld
xchg
aam
nop
ss
popa
rclb
js
decb
loop
cld
xchg
mov
mov
push
mov
in
cmp
in
pop
jo
xchg
mov
movsb
push
sub
xchg
pop
mov
lock
inc
in
sbb
sbb
lock
lcall
cmc
dec
ljmp
dec
std
push
lret
cltd
lods
mov
notb
dec
repz
stos
aad
or
xor
arpl
les
lret
inc
ljmp
out
pop
inc
fst
add
xor
loopne
movsb
lods
adc
test
dec
es
or
cli
jno
hlt
ret
clc
pop
ljmp
mov
ljmp
adc
stos
xor
imul
dec
test
fstpl
add
fucom
movsb
or
punpckhdq
sbb
jmp
or
ficoms
sub
and
pop
and
sub
xlat
mov
movsl
push
mov
dec
aad
adc
pop
lods
push
add
popf
jno
xchg
adc
xchg
sub
xchg
sahf
push
jae
mov
out
sub
dec
cli
int3
data16
mov
sbb
in
insl
inc
fisubl
fdiv
mov
adc
jno
cld
jmp
mov
popf
shrl
jg
mov
lock
ret
xchg
pop
mov
and
stc
and
outsb
inc
fidivrl
lea
and
ss
pop
das
xchg
push
fldt
int3
lahf
in
or
sbb
fxch
mov
push
adc
test
jl
add
movsb
push
push
mov
mov
and
dec
insl
mov
inc
or
inc
adcb
push
imul
jp
mov
xchg
sub
sub
sub
sbb
push
mov
sub
aad
and
xor
jne
ret
aaa
loopne
testl
mov
lret
cmp
dec
pop
idiv
outsl
inc
int
mov
movsb
or
mov
dec
xchg
add
ss
mov
mov
push
add
sub
mov
jns
cmpsl
or
inc
bound
mov
and
adc
mov
mov
mov
sbb
jno
in
sub
out
xor
jno
jo
call
loopne
stos
or
fnstsw
test
or
sbb
and
and
ret
repz
iret
in
push
frstor
arpl
inc
xor
adc
jbe
outsl
or
add
test
stos
pop
mov
rep
out
pop
rclb
mov
pop
notb
xchg
test
adc
imul
std
sbb
int3
int3
sahf
addr16
scas
fildll
mov
pop
mov
inc
mov
fwait
rol
stos
stos
adc
jno
fcoml
popf
imul
js
imul
movsl
mov
xchg
sub
outsb
sub
sbb
int3
sbb
and
out
mov
ror
scas
dec
mov
mov
sahf
cmp
out
rclb
xor
adc
lds
jnp
or
and
pop
pop
repnz
sub
call
sbb
mov
js
mov
xchg
and
jb
xchg
adc
roll
pop
arpl
fiaddl
pop
mov
mov
inc
in
xchg
and
dec
push
jl
fsubr
xchg
fldcw
icebp
cmpb
stos
ja,pt
lock
add
in
pushf
es
pop
lds
fisttps
int
or
andl
jne
pop
pop
add
adc
mov
inc
subb
mov
mov
addr16
or
cwtl
mov
loope
fnsave
popa
lcall
divl
push
inc
movsl
mov
sub
adc
pop
and
fistps
inc
sub
scas
or
pop
adc
or
out
ret
pop
ljmp
mov
sbb
lock
popa
adc
movsb
fidivs
cmp
enter
sbb
cmp
mov
gs
scas
popa
push
fldl
leave
dec
scas
sub
fwait
mov
cmp
inc
inc
loope
pop
sbb
add
jmp
hlt
sbb
js
movsl
push
out
inc
mov
leave
jbe
mov
jge
mulb
dec
push
shll
ja
mov
jge
and
outsl
sub
mov
mov
jo
loope
dec
cmp
jae
jae
jns
les
std
ficompl
cmp
fmull
outsb
xor
aam
mov
mov
aam
pop
dec
mov
aas
sbb
dec
and
rolb
or
mov
sbb
pop
movl
out
or
adc
xchg
mov
or
icebp
cmp
jnp
rcl
and
fidivrs
mov
lods
out
pop
add
and
jb
aas
jge
enter
inc
fsubrl
int
pop
loope
and
mov
and
icebp
adc
adc
cwtl
cmc
jmp
xor
fbld
push
orb
jp
mov
cmc
and
mov
mov
movsl
fisubrs
mov
mov
pop
lcall
cmp
inc
jmp
out
jmp
sub
int
cmovl
xchg
ja
pop
dec
pusha
enter
or
das
fldl
add
push
lock
xor
cmpsb
in
and
pop
lods
xchg
fdivrl
bound
bound
and
ds
sbb
dec
push
pop
pushf
addr16
mov
adc
mov
dec
mov
sar
mov
push
dec
clc
adc
mov
insl
mov
pavgb
mov
mov
addl
xor
push
stos
pushf
dec
lret
dec
sub
xor
push
xchg
jmp
jo
jbe
imull
mov
rorl
cld
stos
cmpsb
int
rclb
mov
dec
push
fldt
repz
test
and
loopne
adc
mov
xlat
in
movb
dec
mov
lret
cmp
sbb
jno
stc
pop
call
and
and
sbb
jae
std
cmc
out
lret
xlat
mov
std
js
push
mov
loope
idiv
and
pop
mov
pop
mov
mov
mov
sub
inc
xor
leave
ss
fists
or
lahf
lret
add
iret
ss
pop
mov
pop
shlb
sbb
push
mov
in
sbb
dec
push
jo
mov
jo
fidivs
lock
mov
dec
adc
roll
fwait
scas
popa
pop
sbb
jp
fbstp
outsb
mov
push
mov
cmp
fidivl
pop
loopne
insb
mov
jecxz
and
or
jl
repnz
mov
fimull
aaa
mov
std
int3
push
insl
xchg
xchg
cmp
or
pop
pop
mov
call
gs
lock
mov
xor
mov
sbb
xor
inc
in
aad
sahf
push
inc
test
jbe
xchg
or
loope
pop
movsb
dec
in
sub
repnz
xchg
arpl
sti
sbb
int
iret
andl
mov
and
push
xchg
jbe
nop
dec
fdivl
sub
aad
inc
lods
pop
ljmp
cmc
xchg
mov
mov
sub
push
inc
cmp
es
pop
pushf
in
lret
loopne
das
stos
shlb
lods
add
dec
popf
sbb
sbb
mov
push
sub
adc
dec
xor
popf
mov
mov
loopne
int3
xchg
and
bound
sub
loope
hlt
popf
and
sub
es
outsb
int3
cmpsb
jo
adc
es
pop
je
lds
xor
push
es
lods
mov
lods
call
mov
sub
jo
adc
jae
ret
mov
ss
dec
push
mov
in
mov
lds
jg
pop
xor
divl
out
and
mov
sub
pop
es
cld
adc
in
mov
stos
in
dec
out
cmpsb
cwtl
xchg
adc
popf
xchg
mov
push
andb
and
push
push
and
adc
insl
and
in
mov
in
lods
sub
ja
dec
icebp
mov
popf
cmpsl
xor
xchg
int3
data16
push
outsb
inc
jns
cmp
xchg
mov
xchg
aas
nop
js
push
icebp
xlat
popf
popl
jecxz
jecxz
mov
jns
mov
ss
fs
test
push
mov
faddp
out
and
mov
mov
xchg
push
xchg
fwait
stc
addr16
push
addb
mov
jmp
lahf
sub
aas
loop
cmp
pop
movsl
sub
inc
mov
jge
push
push
aam
xor
lret
inc
jo
inc
ret
xchg
sbb
filds
jne
loope
jp
xor
bnd
lock
or
xchg
jp
sub
ja
cltd
dec
cmp
and
jle
cmp
sbb
fwait
fs
cltd
pusha
sarl
dec
lock
test
imul
cli
dec
mov
adc
and
push
cmp
dec
sbb
push
divl
cmp
pop
sub
xchg
pop
cld
jno
js
sbb
cmpsb
inc
imul
out
xor
push
sbb
add
sbb
aas
push
iret
in
push
push
jno
cmp
aad
and
xor
mov
out
jp
xchg
jne
inc
jle
sti
lret
push
test
cld
cmpsb
lret
lret
cltd
outsl
mov
out
dec
inc
sahf
cld
fidivrl
ss
shlb
or
xchg
lods
or
scas
or
cmpsl
ja
xlat
xchg
punpckhwd
int
pop
shlb
in
jb
ja
mov
jno
adc
sub
sbb
push
repnz
clc
es
gs
push
push
xchg
imul
pop
inc
lret
mov
sbb
sub
icebp
dec
lcall
jle
hsubpd
aam
int3
mov
mov
rcl
sbb
push
sbb
ljmp
mov
es
jne
arpl
sbb
mov
test
adc
sub
jb
jle
cli
mov
cli
jo
dec
cmpsb
test
mov
mov
dec
pop
fs
repnz
sbb
mov
imul
fisttpll
loopne
out
es
shl
mov
addr16
sbb
or
mov
pop
jle
je
lods
mov
pop
ss
fwait
pop
dec
data16
aas
ljmp
xor
js
out
aas
add
pop
jbe
lret
repnz
push
fdivrl
and
mov
test
xchg
push
pop
sub
inc
jecxz
mov
fimuls
mov
xor
rclb
loopne
insl
ljmp
ss
sarb
fsub
sub
push
popf
xchg
test
xor
jb
mov
sbb
sbb
mov
mov
cmpsl
mul
outsb
shr
dec
mov
mov
shrb
sarl
hlt
or
test
popf
sbb
sbb
div
lods
clc
xchg
xchg
adc
test
xchg
xchg
shrl
jo
mov
push
outsl
stos
arpl
shll
popf
mov
hlt
call
add
xor
pop
lods
stos
dec
mov
xor
movaps
or
adc
scas
repnz
jae
lock
sub
jb
jg
sbb
jo
popa
mov
shll
and
inc
call
pop
mov
cli
lock
mov
push
int
loopne
pop
and
sbb
add
and
ja
mov
test
int3
xor
pop
mov
lret
cld
in
loopne
call
lret
lret
lret
dec
cmp
dec
mov
push
je
xor
push
jmp
cmpsb
inc
pop
ret
xchg
pop
mov
adc
mov
mov
jmp
je
test
adc
jb
lahf
jo
in
cmp
jno
icebp
sub
and
outsl
mov
push
mov
dec
adc
popf
push
imul
xchg
test
fisubs
loop
jb
clc
mov
repz
jae
daa
pop
or
hlt
jmp
loopne
shlb
and
ret
icebp
pop
cmpsl
idiv
sbb
cwtl
lcall
pop
es
jmp
push
das
nop
sub
add
and
jp
mov
int
sub
xchg
mov
xchg
sbb
xchg
mov
mov
leave
std
fnsave
mov
scas
sbb
add
lret
fwait
pop
test
ror
test
add
ja
mov
out
or
insl
push
sbb
xor
sbb
das
addb
lea
sahf
or
aas
xchg
ret
movsb
jno
mov
mov
test
imul
jb
arpl
psrad
pop
rcr
xor
lcall
add
mov
mov
mov
imul
xchg
arpl
xor
outsb
mov
fs
pop
test
push
mov
jge
inc
pushf
pop
scas
aas
jo,pn
push
jg
pop
sti
or
add
outsl
mov
imul
xor
outsb
mov
sbb
mov
inc
out
int3
xchg
push
in
mov
orl
push
hlt
in
fwait
push
scas
xchg
cmp
mov
xchg
mov
sahf
movsb
mov
icebp
ret
push
inc
mov
in
sbb
imul
cmpsb
int
popf
adc
cmp
stos
or
xchg
pop
in
decl
imul
jae
gs
jecxz
xchg
or
icebp
sbb
pop
push
mov
mov
mov
sbb
add
pushf
mov
hlt
sbb
pushf
scas
and
arpl
mov
sbb
adc
loope
sub
test
sub
jo
mov
fcoml
jge,pn
push
sbb
dec
adc
mov
adc
pushf
add
cltd
mov
popf
push
pop
mov
xchg
or
pusha
loope
imul
adc
pop
fcoml
and
fwait
outsb
fs
sub
adc
jo
jne
xchg
sbb
addr16
mov
or
or
jo
stos
mov
fsubrl
cld
stos
jo
in
xchg
ja
push
inc
xchg
cmp
adc
fsts
sub
loopne
push
in
lock
xchg
lret
data16
in
jge
or
or
popf
out
sbb
pusha
outsb
mov
jno
and
orb
in
insl
cmpsb
sbb
jmp
and
pushf
xchg
and
and
dec
cmpsb
mov
or
inc
dec
adc
andb
mov
mov
adc
mov
mov
mov
xchg
mov
out
data16
add
clc
xchg
outsb
mov
xchg
and
popf
or
test
mov
or
mov
inc
aas
popf
mov
cmp
mov
xchg
fs
jo
and
jo
and
xchg
and
and
adc
mov
aas
lret
mov
xchg
pop
insl
sbb
push
outsb
push
dec
sbb
movsb
adc
popf
xchg
xlat
dec
and
outsl
loopne
mov
ret
pop
dec
mov
sahf
pop
cwtl
in
jp
test
mov
loope
subl
mov
fs
and
mov
hlt
sbb
popf
mov
aad
lods
cwtl
mov
outsb
ljmp
mov
jnp
ficompl
adc
lods
popf
adc
test
pop
mov
sub
mov
data16
dec
jo
xor
jno
inc
mov
movsb
mov
mov
movsb
mov
outsl
pushf
and
pop
pop
jmp
push
bound
mov
dec
repnz
inc
es
pop
out
cld
repnz
fistpl
mov
aaa
stos
nop
js
test
or
inc
pop
popa
push
dec
mov
repnz
mov
xchg
es
mov
push
sahf
std
pop
jno
push
negb
xchg
fcompl
movsb
mov
into
mov
loop
test
fcoml
xchg
pushf
lods
stos
sub
stos
mov
or
aaa
bound
fisttps
sbb
pop
sub
call
push
jne
inc
fwait
pusha
cmp
jge,pn
repnz
inc
lret
lods
pop
ljmp
inc
daa
sbb
push
repnz
sub
repnz
jno
aad
adc
adc
xchg
push
out
dec
xlat
fstpl
jecxz
call
pusha
cmpsb
movsb
jecxz
pop
repnz
pop
adc
outsl
shlb
inc
movsb
bound
cld
daa
jno
mov
push
mov
js
xchg
mov
fsubrl
cmp
mov
jnp
mull
repnz
repnz
mov
sub
repnz
mov
sub
repnz
in
cmp
repnz
repnz
call
pop
sbb
mov
gs
mov
add
fucomi
jne
fcmovnb
sub
dec
out
jae
repz
and
aaa
in
loop
rclb
inc
push
aaa
push
insb
jle
xlat
sbb
cmpsl
mov
pop
pop
cld
rorl
push
loopne
sub
add
push
nop
dec
cmp
popf
mov
jb
and
outsb
xchg
inc
xor
mov
fdivp
cwtl
mov
iret
mov
push
pop
lcall
pusha
and
or
cmpsb
sbb
sbb
add
mov
jo
jmp
dec
inc
lret
mov
pop
mov
mov
out
iret
lods
or
shrb
pop
sub
bound
shlb
push
fstpl
aad
in
jmp
mov
lret
cmc
stos
out
in
jno
jbe
shl
mov
sti
stc
test
dec
repnz
pusha
push
add
and
sub
mov
fsubs
or
sbb
popf
and
mov
pushf
popa
mov
xchg
xchg
sbb
pop
push
sub
pushf
and
adc
or
sbb
or
xor
cmp
jno
mul
clc
call
cwtl
sub
test
mov
cmpsb
mov
ret
mov
icebp
fstl
fs
push
aad
push
mov
jo
or
dec
push
cmpsb
xor
mov
ljmp
addr16
and
xor
arpl
popf
mov
imul
arpl
and
mov
popf
pop
mov
dec
inc
repnz
outsb
push
test
and
aam
popfw
adc
mov
or
or
sbb
mov
and
scas
adc
iret
sbb
pop
popf
add
adc
sbb
repnz
xor
cmp
shll
mov
notb
subb
dec
aam
cmc
je
insl
or
cs
or
and
xor
stos
add
sti
popf
xlat
aam
lret
inc
xor
pushf
popf
stc
jo
jnp
data16
or
xchg
fistps
iret
push
icebp
andl
jecxz
xchg
add
jbe
imul
scas
jo
mov
es
scas
fistpl
sbb
dec
sbb
nop
mov
or
add
fst
xor
movsb
jo
jno
movsb
add
xchg
or
popf
cmp
or
aam
mov
mov
sti
inc
pop
xchg
and
outsl
push
inc
xchg
mov
int
fnstcw
mov
cmp
pop
or
call
jle,pn
push
add
daa
xor
cmp
push
sbb
rorl
ret
and
sarl
pop
or
xchg
mov
push
add
icebp
mov
fiaddl
stc
cs
mov
mov
inc
cmpsb
in
int3
jge
loope
pop
or
call
mov
push
sub
in
dec
es
and
push
pop
jno
cmpsl
mov
dec
in
xor
xchg
test
inc
inc
jmp
sub
mov
fisubl
repnz
bound
rcll
pop
fidivrs
out
sbb
mov
lds
sbb
insl
repnz
clc
dec
shl
or
push
cmp
hlt
stos
lret
js
idivl
sbb
adc
mov
jae
lea
fists
jno
icebp
push
in
ss
outsb
imul
sub
pop
sbb
push
dec
xchg
sbb
mov
xor
sub
or
and
daa
popf
or
sub
mov
mov
push
adc
dec
sub
arpl
out
and
jb
loopne
gs
stos
les
ficomps
push
fcompl
ret
jo
fwait
mov
and
xchg
or
add
scas
sub
pop
sbb
in
mov
outsl
xlat
fstl
xchg
pushf
xchg
or
xor
in
dec
push
cs
or
outsl
push
insl
mov
js
adc
dec
das
fidivl
int3
enter
repnz
adc
mov
xor
repnz
jg
aad
pushf
and
xchg
js
sub
add
gs
cld
sbbb
out
out
stos
test
movsl
mov
dec
add
dec
xchg
pusha
push
aam
push
hlt
xchg
imul
jo
lods
mov
mov
idivl
jo
in
mov
in
adc
aam
ljmp
adc
or
lcall
fs
and
loop
iret
adc
jbe
lods
ds
ds
lretw
cwtl
dec
mov
xorb
jo
lods
mov
adc
push
sti
mov
add
push
sub
inc
push
je
add
xchg
and
pop
arpl
scas
lods
test
cmpsl
andl
decb
mov
mov
addr16
or
lods
sbb
sub
jmp
push
mov
adc
mull
in
stos
fnstsw
jno
jo
xchg
arpl
addl
mov
call
lods
add
mov
xor
bnd
loopne
ss
fcomps
arpl
dec
test
pushf
fidivrs
dec
stos
cmp
lds
loopne
jo
pop
popf
dec
add
sbb
push
fwait
aaa
pop
dec
subl
pop
push
loop
lret
pop
addr16
fisttps
jmp
iret
stos
and
mov
mov
sahf
push
fwait
push
adc
mov
fcoml
adc
aad
std
jb
arpl
pusha
ja
and
or
push
iret
push
dec
pushf
loopne
loopne
xchg
cld
adc
and
cmp
out
jno
scas
inc
lcall
loope
or
lcall
xchg
and
and
ficompl
push
fs
pop
sbb
adc
and
rcrb
ret
inc
je
mov
pop
sub
dec
inc
fistpll
js
jecxz
dec
lahf
jbe
out
adc
and
rcrl
adc
mov
adc
mov
jae
sbb
mov
push
cmp
pop
mov
push
hlt
iret
mov
hlt
xchg
mov
or
mov
sarl
mov
fcomp
add
dec
nop
es
arpl
cmp
dec
jne
mov
int3
aam
popf
loope
and
gs
mov
addr16
jno
lret
inc
mov
push
or
or
in
push
dec
stos
lret
pop
adc
fcoml
arpl
enter
jl
loopne
push
pop
and
jge
mov
daa
xchg
ret
ss
fcoms
loop
fsubl
shlb
lcall
or
mov
pop
sbb
sbb
mov
jno
jb
out
pop
mov
ljmp
mov
and
nop
gs
divl
push
jecxz
inc
sub
adc
and
push
xor
pushf
jae
cmpsb
mov
in
or
lret
push
xchg
sub
aad
mov
push
fwait
jmp
jnp
mov
filds
adc
sbb
adc
pop
in
mov
ljmp
lret
popa
pop
andl
sbb
pop
dec
mov
sub
popl
xor
std
mov
popl
mov
lock
shrl
xor
fs
cltd
push
add
mov
adc
jno
sahf
adc
add
cmp
push
mov
movsl
popa
jle
push
adc
push
dec
mov
push
int
pminsw
aad
adc
adc
add
xchg
pop
jo
dec
movsb
sub
mov
scas
mov
xchg
pop
push
mov
clc
push
fists
dec
or
lods
pop
xor
imul
adc
pusha
mov
add
out
push
sub
push
adc
add
push
roll
dec
mov
ret
fimull
fisttpl
cmpsl
repnz
mov
jno
xchg
std
xacquire
imul
pushf
sub
bound
iret
insl
clc
mov
xor
cmpsl
mov
mov
mov
pop
ja
adc
xchg
sbb
mov
out
push
movsb
xchg
xchg
in
and
fwait
mov
mov
repnz
cli
jl
call
adc
cmpsl
bswap
and
sbb
mov
pop
mov
mov
cmpsb
adc
rcrw
mov
push
int
pop
add
sbb
adc
int
inc
imul
lea
xor
sbb
sub
dec
cmpsb
sub
cmp
popa
adc
lahf
add
pop
sbb
popa
xchg
insl
and
sbb
shl
and
xchg
sub
faddl
leave
pop
in
mov
jecxz
call
adc
sub
jo
mov
adc
sbb
or
cli
pusha
sub
icebp
out
mov
imul
jg
adc
xor
add
xchg
imul
xor
outsl
aas
mov
xchg
jmp
shl
adc
lods
and
push
sub
cwtl
ja
sti
push
bound
sub
scas
pop
sbb
cmp
dec
xchg
jge
repnz
add
xor
mov
and
lock
outsb
push
loope
arpl
and
mov
pop
insl
add
or
out
mov
jecxz
mov
loop
and
push
jl
push
jnp
gs
mov
mov
fsubl
cmc
mov
enter
push
mov
loopw
jl
or
mov
cmp
pop
or
sub
mov
and
stc
stos
ret
inc
fsub
je
cli
mov
add
pop
xor
sbb
jp
xor
inc
ret
fsubrs
inc
imulb
xchg
bound
rcll
xchg
sbb
out
fidivl
xor
cmc
in
xchg
repnz
sbb
roll
aad
jmp
outsb
popa
mov
jecxz
cmpsl
insl
mov
outsl
outsl
loopne
scas
sahf
jo
out
add
pushf
rol
mov
dec
sbb
mov
jne
cltd
rorb
lods
jmp
mov
sbb
loope
das
je
test
test
jno
mov
xchg
out
inc
and
sbb
inc
jns
dec
ss
das
cmp
stos
push
jmp
fs
rcrl
and
addr16
push
sub
jl
out
shll
xchg
lret
and
push
mov
push
mov
fwait
sub
imul
mov
mov
mov
ss
out
or
mov
pop
inc
gs
jae
aaa
scas
fmuls
mov
cmp
repnz
loope
cmp
into
pop
out
dec
and
int3
xchg
sbb
mov
pop
test
push
and
sbb
sub
je
xor
stos
imul
mov
cmp
cmp
das
and
aaa
cli
and
jno
dec
popf
xor
in
mov
aad
leave
arpl
bnd
inc
pop
jmp
movsl
pop
je
icebp
mov
xor
out
adc
in
dec
push
outsl
sub
push
mov
lods
xor
fwait
and
out
inc
pop
pop
lahf
push
cltd
push
scas
shlb
repnz
lods
shl
sub
push
adc
jb
cli
mov
inc
sti
nop
add
sub
jecxz
jbe
xor
adc
pop
pop
pushf
adc
test
xchg
movsl
and
loop
dec
ret
lock
test
cmp
and
pop
std
in
xorl
aas
push
mov
sbb
mov
mov
test
or
fsubrl
mov
lea
and
and
xchg
mov
rcl
mov
dec
pushf
mov
popf
scas
dec
gs
stos
push
repnz
daa
adc
jmp
jg
addr16
xlat
push
mov
jo
mov
jmp
push
xor
jmp
push
stos
fsubrl
jp
daa
ljmp
cmp
mov
pop
pop
mov
mov
and
cltd
mov
sbb
adc
iret
adc
test
lea
and
pusha
fidivs
mov
sbb
or
dec
and
mov
push
add
or
cmp
sub
jle
push
icebp
or
rol
cmp
icebp
out
fsubrl
test
cmpsl
mov
popf
stos
xchg
inc
push
fmull
imul
or
pop
sbb
and
mov
imul
push
fbld
loopne
mov
shrl
es
xchg
xor
cmp
hlt
out
and
inc
lods
or
bound
push
mov
adc
dec
out
and
pop
in
pop
fld
mov
lahf
add
mov
lea
add
fsubrp
loopne
pop
mov
nop
mov
mov
js
sub
mov
mov
fisubl
jno
arpl
cwtl
mov
jo
ljmp
mov
jno
je
xchg
leave
mov
cltd
push
mov
cmp
mov
icebp
movsb
push
lods
adc
jo
mov
outsl
pushf
mov
sub
or
fisttps
jo
pusha
mov
mov
jo
dec
fwait
jg
gs
stos
xchg
xchg
in
icebp
fildl
cmp
and
fstpl
repnz
xor
add
cmp
mov
imul
jp
mov
xor
mov
cli
icebp
movsl
clc
and
or
dec
aaa
scas
jbe
popa
sbb
ret
mov
sub
sti
mov
movsl
pop
sbb
mov
mov
adc
ljmp
pusha
push
icebp
sbb
jne
mov
or
mov
insl
scas
int
or
pusha
mov
sbb
test
ljmp
pushf
sbb
pushf
mov
pop
or
mov
mov
jns
outsl
mov
jo
test
mov
call
cmp
mov
movsb
rcrb
pop
xchg
inc
mov
imul
scas
cmp
sahf
xor
insb
mov
pop
rcrb
stc
jg
pusha
hlt
ljmp
repnz
ljmp
popf
inc
pushf
out
lock
sbb
es
andb
sbb
int
insl
jmp
push
lods
lcall
pop
dec
xor
into
dec
lcall
mov
push
fwait
sbb
pusha
and
push
or
sbb
mov
or
dec
icebp
mov
and
jo
mov
push
add
dec
jo
outsb
or
inc
test
movsb
xorl
mov
push
mov
jo
mov
inc
outsl
mov
push
mov
scas
xchg
ss
stos
hlt
aam
addr16
scas
mov
gs
push
cmp
xchg
in
jno
mov
xor
xchg
mov
mov
pop
aaa
cmpsb
jno
jo
dec
gs
repz
roll
xor
mov
dec
and
mov
mov
dec
gs
mov
faddl
inc
xchg
pop
mull
outsl
cmc
popf
lods
sbb
push
das
sbb
mov
lcall
popa
jb
sahf
pushf
loope
sub
adc
xchg
popa
jno
xlat
inc
aaa
outsb
int
pop
ja
xor
and
clc
sub
mov
ja
aad
sahf
in
adc
leave
hlt
sbb
hlt
imul
cmp
fsubr
mov
pop
mov
push
fsubrl
inc
or
sbb
mov
imul
add
mov
fs
dec
xchg
mov
add
test
ss
lock
mov
repnz
stos
sub
cmp
jo
xlat
jmp
push
and
leave
fcoml
mov
or
xchg
adc
hlt
daa
sbb
shr
mov
stos
dec
ss
push
insl
out
rep
lahf
xlat
pop
aas
sbb
bound
aaa
sub
xchg
cmp
lods
xchg
inc
add
bnd
pop
dec
movsl
mov
mov
jb
add
int3
ss
lods
or
inc
movsb
mov
xor
sbb
adc
pop
sbb
cmovl
icebp
je
out
lock
mov
mov
repz
mov
dec
popa
jbe
sarb
mov
mov
add
shll
repnz
adc
xor
mov
mov
cli
sbb
jnp
in
lods
xchg
sbb
fnop
dec
and
or
add
dec
adc
cmpsl
mov
mov
adc
es
jo
insl
or
imull
dec
lock
int
or
lods
dec
rcrl
and
outsl
xor
sbb
pusha
leave
lea
xor
cmp
sbb
std
out
sbb
push
mov
sbb
and
mov
push
test
xchg
in
inc
dec
sbb
jae
out
fdivl
aaa
push
fldcw
ds
mov
inc
pop
mov
mov
notl
imul
mov
dec
ja
mov
insl
es
pop
test
js
loop
mov
pop
mov
xchg
leave
push
loopne
loope
fists
inc
jb
std
add
pop
sub
aad
test
mov
or
lods
dec
mov
pushf
mov
sbb
shll
mov
or
sub
dec
xor
ds
lahf
jg
rorb
jmp
mov
lahf
icebp
pop
rcr
loope
jns
out
out
imul
sbb
nop
mov
mov
inc
sarb
xlat
stos
scas
push
jge
and
mov
clc
jb
inc
cmp
pop
repnz
jbe
scas
mov
jo
jo
ret
sbb
sbb
inc
cmp
mov
add
out
movsb
xor
sub
sbb
jo
jae
in
sbb
mov
fdivl
outsb
or
inc
mov
dec
xor
inc
mov
fildll
or
frstor
add
adc
daa
sbb
adc
xchg
sbb
cld
mov
mov
mov
cli
push
sbb
arpl
fsubrl
loope
dec
imul
in
cmpsb
fdiv
movsl
mov
mov
push
jecxz
sbb
mov
data16
in
adc
jns
xchg
fwait
sar
mov
lea
das
lods
aam
pop
or
mov
shr
ja
jb
sub
and
inc
fidivs
mov
mov
push
mov
das
imul
jno
mov
or
mov
jb
mov
mov
test
mov
pop
xchg
add
nop
out
stc
int
ss
mov
or
dec
popf
cmp
gs
call
push
inc
mov
add
or
out
mov
mov
mov
xchg
sub
arpl
lock
inc
out
or
mov
mov
dec
inc
or
fstps
lcall
sbb
movsl
mov
cmpsl
popf
insl
jo
xchg
push
fld
jg
mov
sahf
dec
xchg
mov
sbb
pop
clc
push
sbb
gs
leave
bound
inc
and
pop
pop
outsl
icebp
mov
scas
loop
and
imul
rcrl
sbb
and
pop
adc
mov
scas
loop
fmull
movsb
inc
adc
pushf
mov
mov
inc
mov
fdivrl
aam
mov
and
mov
jmp
mov
ret
clc
cmp
push
mov
sbb
sbb
mov
jo
inc
js
out
push
loopne
jle
fildl
mov
adc
les
sub
icebp
lock
jae
mov
lock
insl
mov
cmp
sub
cmp
in
pop
cmp
xorb
sti
jp
and
jmp
lret
inc
adc
mov
or
scas
popf
mov
add
stos
push
pop
rcll
and
dec
cmpb
mov
mov
jo
mov
inc
jno
mov
mov
jno
inc
push
aam
fs
pop
lahf
jle
inc
sahf
mov
es
push
cltd
jecxz
in
fucomp
cmp
jecxz
dec
mov
mov
mov
jno
mov
mov
jno
rcrb
fisubl
xchg
dec
xor
loopne
jne
push
xchg
stc
jge
repnz
out
pusha
jb
loopne
adc
fwait
cs
stos
cmpsb
dec
arpl
std
jo
jg
mov
fldt
test
shlb
cli
inc
dec
or
cmpsl
mov
outsb
sbb
jmp
jbe
clc
cmp
pushf
jecxz
or
mov
cmp
jae
sub
notb
mov
arpl
mov
jno
cmp
into
pop
pop
pop
and
mov
outsb
or
and
mov
scas
jecxz
mov
mov
mov
test
imul
lods
mov
call
mov
push
dec
adc
and
xchg
aaa
mov
add
es
lock
popf
je
es
mov
fwait
pop
mulb
movsb
sbb
xchg
jb
sub
pop
sbb
sarl
jecxz
sub
rcr
mov
xchg
mov
adc
pop
pop
jo
pshufw
jb
inc
pop
add
je
ja
test
dec
push
mov
jge
pushf
aam
pop
imul
fisubs
jp
in
push
sbb
dec
divb
pop
push
pushf
cmpsb
in
jmp
pop
movsb
push
test
out
sar
into
pop
repnz
lods
sahf
es
or
lods
jb
push
or
lret
cmp
sbb
icebp
dec
pop
aaa
sub
xor
mov
or
test
xor
pusha
pop
jno
mov
mov
insb
push
mov
pop
cmp
cmp
repnz
or
test
mov
pop
cli
xchg
xor
and
fsubs
faddl
xchg
and
cmp
cmpl
jbe
es
and
in
enter
and
jle
cmpsb
inc
sbb
add
mov
fidivrl
xchg
ds
clc
repnz
div
or
mov
cld
and
repnz
jae
jno
gs
mov
loopne
adc
das
mov
test
mov
or
cwtl
addl
pop
jecxz
mov
movsb
mov
add
push
aam
outsl
mov
mov
in
rorl
jmp
mov
xchg
adc
int
pusha
fmull
or
sbb
jno
jecxz
xor
adc
sbb
repnz
push
stos
sbb
lcall
scas
outsb
sub
mov
in
sbbb
mov
fwait
mov
lret
pop
loope
in
push
push
cltd
notl
push
mov
mov
inc
pop
stos
and
ret
aaa
call
in
popf
movsl
jno
xchg
rcl
dec
dec
push
les
pushf
push
jmp
out
mov
loop
sbb
sti
adc
mov
stos
mov
in
ljmp
arpl
fmuls
gs
out
mov
adcb
aas
xchg
lahf
sbb
cmpsb
pop
imul
arpl
push
rol
sti
cmpsb
icebp
in
and
stos
frstor
idivb
enter
mov
clc
xchg
and
pop
in
xor
popa
fsub
icebp
mov
ret
nop
pop
push
sahf
enter
stc
push
test
negb
nop
or
movsl
pop
inc
push
sub
mov
jo
andl
movsb
jp
fistps
into
in
pushf
pop
jmp
cmp
inc
mov
lods
xchg
dec
lods
inc
sarb
fwait
and
add
sbb
jno
icebp
and
aad
push
stos
dec
sub
icebp
call
lahf
push
or
adc
aaa
cmp
insb
mov
leave
mov
lcall
jno
in
aaa
in
push
or
mov
imul
ljmp
mov
jb
cwtl
clc
and
or
rorl
popf
jno
sbb
mov
mov
mov
or
hlt
shlb
mov
and
push
mov
mov
mul
pushf
shl
jno
out
cmpsb
pop
jno
dec
fnstenv
cli
adc
mov
sub
das
mov
xor
xor
ljmp
popa
xchg
shrb
inc
mov
leave
arpl
add
xchg
es
test
test
dec
shll
cmp
mov
mov
fistps
fwait
dec
pusha
outsl
cmp
pushf
push
shl
stc
push
xor
xchg
jge
or
cmp
test
shrb
ljmp
mov
sub
push
das
subb
mov
insl
sbb
xchg
push
mov
fsubrp
pop
cmp
enter
mov
inc
cmp
ficompl
mov
into
adc
dec
rcrl
pop
loopne
push
addr16
and
cmp
mov
adc
and
mov
bnd
repnz
in
mov
mov
sbb
or
stos
add
mov
cmp
mov
or
sbb
punpckhdq
and
repnz
aaa
pop
cmc
out
iret
sub
pop
dec
out
mov
dec
fistpll
xchg
in
mov
call
mov
dec
lret
loop
or
stos
xchg
mov
jb
add
loopne
mov
fisubs
jb
shll
ret
testl
ja
jns
out
sbb
mov
cli
popf
inc
mov
ljmp
mov
jp
sahf
jbe
pop
data16
inc
dec
add
mov
mov
fbstp
inc
and
cmp
sbb
mov
pop
dec
lcall
pop
addr16
shrl
push
and
addl
xlat
cmpsl
loope
sub
push
xchg
push
fsubl
mov
ss
adc
repnz
std
push
pop
mov
inc
int3
daa
inc
jl
mov
push
xor
add
inc
cmp
mov
daa
ja
shr
mov
mov
arpl
outsb
push
pop
jno
mov
fs
inc
das
sbb
sbb
cmp
mov
sbb
pusha
add
adc
sub
xor
jno
jno
xor
jno
pop
mov
mov
mov
movsb
lret
stc
xor
push
mov
js
cmpsl
shrb
mov
push
test
dec
or
mov
and
repnz
inc
notl
sub
inc
imull
rcrb
lods
mov
xor
notl
aaa
dec
mov
mov
test
sahf
jmp
addr16
pop
ds
mov
mov
stos
mov
sub
jle
scas
mov
jmp
frstor
adc
addb
add
push
mov
mov
cmp
push
or
iret
xchg
scas
mov
mov
xchg
xchg
stos
mov
pop
xor
xchg
mov
add
mov
icebp
rcrl
lods
dec
adc
add
jb
inc
orb
lods
fiaddl
and
xchg
mov
int
js
jno
fcmovnu
add
nop
sbb
adc
stos
xchg
lds
clc
pop
fwait
pop
pop
dec
xchg
sbb
fs
xor
xchg
pop
push
mov
bound
mov
xor
inc
xor
jge
ljmp
pushf
and
movsb
repnz
shll
imul
xlat
inc
repz
push
mov
jns
lahf
lcall
outsl
fcmovnb
dec
cmp
sub
or
push
cmp
fs
jge
and
adc
clc
xor
movsl
push
mov
int3
dec
push
pushf
lahf
in
add
addr16
gs
push
xchg
cmp
push
fisttpll
or
pop
pop
lahf
rorb
lahf
adc
ljmp
xchg
in
inc
subb
cmpsl
or
in
bound
or
movsb
je
mov
ret
jb
or
jae
pop
mov
aas
aam
aam
test
push
testl
int3
sbb
inc
jnp
jmp
mov
jne
mov
push
pushf
pop
fiadds
mov
or
inc
in
cmc
sub
aad
jno
scas
inc
cmp
xchg
rol
jb
bound
dec
repnz
loopne
repz
pop
add
fildll
lcall
test
filds
ja
pcmpgtb
xor
pop
mov
cmp
xchg
inc
cli
mov
test
incl
es
pop
cmp
cli
pop
mov
clc
shlb
xor
mov
xchg
push
pop
cs
test
sbb
mov
bound
and
fisttps
push
loopne
aaa
jl
and
mov
inc
cmp
es
daa
adc
es
daa
adc
mov
pop
aaa
and
and
call
insl
mov
adc
subb
jno
in
in
sub
lret
test
rolb
icebp
cmp
mov
or
imul
xchg
push
ja
ds
scas
aaa
pop
add
cmp
jge
aaa
sub
sbb
scas
outsb
aad
dec
adc
stos
in
jb
out
adc
js
sbb
fcomi
and
aas
sbb
mov
pushf
stos
adc
push
push
mov
pop
in
jmp
les
inc
pop
out
mov
jbe
or
outsl
cwtl
call
loopne
stos
jno
xor
jb
xchg
sbb
movsl
mov
imul
jbe
ljmp
in
push
lret
mov
add
dec
dec
mov
test
inc
loope
cs
stos
scas
push
ficoms
out
je
iret
adc
icebp
es
dec
and
aam
lcall
shll
xchg
add
pushf
jno
inc
mov
inc
sbb
mov
mov
mov
jo
jno
mov
lcall
mov
and
xlat
icebp
add
lahf
imul
cmpl
jge
movsl
aad
lods
adc
aaa
gs
in
ljmp
shl
ds
pop
fcompl
call
mov
add
cmp
pop
sbb
inc
lahf
push
mov
shl
andb
pop
adc
inc
and
mov
fstpt
scas
adc
cmp
push
loop
jmp
icebp
test
adc
test
xor
icebp
js
and
push
add
mov
popa
mov
dec
sbb
fcmove
mov
jbe
push
mov
mov
pop
sub
pushf
or
sub
mov
scas
jo
mov
mov
ret
mov
scas
lcall
bound
or
add
push
icebp
push
fiaddl
jb
movsb
insl
mov
sbb
in
dec
mov
mov
and
mov
pop
xchg
fiadds
mov
mov
push
movsl
inc
dec
sbb
xchg
shrb
fstpl
imul
cwtl
stos
mov
mov
sub
faddl
data16
test
mov
scas
mov
rol
mov
ja
pop
gs
icebp
scas
mov
lock
or
mov
mov
popa
test
push
outsb
gs
aad
nop
adc
ja
inc
retw
stc
push
loop
mov
lcall
push
and
outsl
scas
or
test
rolb
hlt
push
push
pop
jo
incb
mov
push
add
xlat
dec
dec
xchg
mov
jl
fnstsw
lcall
or
clc
ljmp
pusha
dec
inc
xchg
sub
mov
int
rorl
mov
adc
sub
mov
shll
push
outsl
or
lret
cwtl
mov
jno
xchg
jmp
and
cmp
jg
int
and
mov
push
stos
xor
jo
sub
mov
in
mov
mov
fsubr
inc
daa
orb
shll
lahf
mov
sbb
imul
mov
mul
ljmp
cmp
jecxz
jne
mov
mov
clc
mov
loopne
jns
mov
lods
addr16
jo
or
int3
jl
shl
imul
mov
mov
das
or
xor
imul
xor
out
push
movsl
dec
std
pop
dec
loope
ficoms
mov
sub
jns
mov
mov
inc
movsb
getsec
pop
loope
stos
xchg
rorl
inc
add
fwait
imul
mov
dec
xor
inc
cmc
cmp
dec
cmp
mov
xor
mov
or
jmp
in
mov
mov
jo
jno
dec
cmp
sub
dec
mov
sbb
pop
cmp
mov
mov
lcall
pop
js
xlat
das
mov
sub
cmp
jno
xchg
mov
lret
push
jge
jb
sub
imul
add
jo
sbb
xor
sub
addr16
in
or
and
pop
ja
repnz
mov
sbb
sub
lcall
shrb
mov
ja
mov
inc
mov
dec
and
divl
adc
xor
push
xlat
test
sub
popl
lret
or
pop
pop
dec
clc
and
mov
mov
cmp
aaa
xchg
cltd
mov
fidivl
ss
jb
nopl
sbb
mov
adc
iret
or
adc
subb
popa
hlt
ret
gs
imul
fwait
test
sbb
outsb
pop
lds
xor
loopne
sub
mov
mov
movsl
fistps
sbb
imul
mov
fistps
bound
loopne
out
sbb
iret
loopne
imul
fwait
movsb
and
jecxz
xchg
mov
or
fucom
or
mov
mov
jo
adc
mov
cmpsb
push
inc
loop
adc
imul
push
mov
sub
lock
dec
and
mov
cmc
or
mov
dec
pop
sar
and
jae
jl
fimuls
test
pop
in
push
fisubs
and
push
lea
and
push
fmulp
cmp
outsl
push
mov
inc
or
mov
push
xor
cmpsb
push
jnp
mov
in
xor
testl
shlb
dec
testl
lea
pushf
pusha
push
mov
neg
into
jo
or
and
mov
dec
xchg
stos
loope
gs
jno
xchg
jp
dec
sbb
nop
push
pop
outsb
jo
pusha
mov
jnp
dec
xchg
push
lcall
inc
push
add
push
mov
push
cmc
mov
out
push
mov
or
or
mov
mov
repnz
sbb
cli
pop
mov
dec
jno
mov
ret
sbb
cmp
sahf
cwtl
int3
lcall
int
stc
clc
push
outsl
dec
mov
addr16
lock
in
pop
xor
and
cmp
sbb
and
pop
and
ret
loopne
fwait
push
scas
and
popf
sbb
dec
sub
popa
and
and
scas
sub
sub
inc
mov
fs
std
stos
out
mov
hlt
insl
dec
negb
and
fs
test
fcoml
pop
push
xor
stos
mov
xchg
lret
dec
jb
cmp
jg
cmpsb
xor
jge
fstpt
in
fbld
mov
sahf
in
icebp
fdivl
push
dec
push
jno
and
sbb
sub
jo
in
cld
push
jle
movsl
sub
cmpsb
jle
and
push
jmp
push
lret
push
cld
mov
push
mov
sbb
repnz
aam
push
and
int
sbb
sbb
mov
mov
push
adc
pusha
lcall
sbb
jl
inc
inc
lahf
enter
sbb
sub
aaa
mov
or
leave
aas
aad
jno
test
cld
inc
lock
dec
and
push
rcll
in
movsl
mov
dec
pop
dec
lahf
cmc
mov
sbb
pop
xlat
notl
out
inc
popa
mov
mov
mov
mov
movsb
mov
inc
pop
lret
call
in
mov
mov
js
mov
or
out
mov
cmpsl
inc
sbb
xlat
mov
rcrb
mov
xchg
pop
sbb
stos
lods
ljmp
iret
movsb
jo
or
mov
scas
ret
add
mov
call
or
and
icebp
mov
mov
inc
movsb
mov
dec
repnz
pushl
lea
jns
filds
stos
loop
lock
cld
sbb
jno
pusha
sbb
outsb
dec
and
mov
lcall
addr16
enter
xor
mov
popa
adc
inc
movsb
icebp
or
jmp
pop
aas
mov
sbb
movsl
jecxz
xorb
sbb
sub
iret
test
ss
ljmp
sbb
aas
pushf
lods
lret
cmp
pushw
add
cmpl
scas
mov
dec
dec
pop
mov
adc
mov
pop
push
je
movl
add
fldenv
mov
mov
in
or
ss
mov
dec
outsl
sbb
in
xchg
fidivl
and
pop
push
pop
lahf
into
pop
loope
push
addr16
lock
sbb
dec
add
push
mov
lods
fiaddl
xchg
call
cld
push
mov
aam
mov
rclb
or
sub
push
push
cmp
sub
subl
or
cmp
xchg
fiaddl
jecxz
call
mov
jmp
fisttpll
cltd
sahf
xor
mov
push
sbbb
iret
dec
jbe
jbe
pop
xrstor
scas
jecxz
ss
jmp
ss
inc
lock
divb
or
rolb
stc
sub
or
adc
lods
cmp
jno
inc
fdiv
div
mov
movsl
mov
sub
dec
imul
into
cmp
cmp
jns
into
in
ds
jno
popf
mov
mov
mov
xor
mov
lret
scas
add
mov
insl
loope
jmp
ja
movsb
mov
ret
bound
mov
loopne
cld
push
pop
cmpsb
and
inc
movsb
or
pushf
add
jg
fcos
xor
clc
cmp
mov
aam
xor
inc
or
out
push
js
or
mov
cmp
xor
mov
jecxz
fistl
dec
push
cs
jge
push
std
data16
cmpsl
jmp
arpl
repnz
xchg
jno
cli
inc
adc
fisubl
mov
incb
outsb
pop
or
ljmp
sbb
adc
sarb
int3
push
ss
imul
pusha
pop
push
out
jmp
or
and
cmp
sub
xor
adc
jbe
pop
add
scas
icebp
and
add
add
push
jbe
sahf
push
sbb
testl
pop
sbb
mov
dec
movsl
inc
pop
repnz
fbld
or
push
data16
push
divl
icebp
loope
lret
movsb
inc
mov
mov
push
and
sub
sbb
popf
imul
or
gs
adc
mov
inc
add
out
ficompl
movsb
clc
cmp
pop
xchg
sub
sub
dec
xchg
push
or
clc
pop
and
sarl
jb
push
sub
repz
add
adc
dec
mov
dec
imul
rorb
mov
inc
call
inc
out
mov
push
pop
mov
fwait
lds
jnp
stos
pop
sub
xchg
ss
pop
adc
ret
mov
cmp
loopne
push
inc
pop
mov
inc
pop
mov
call
push
pop
scas
outsb
in
adc
inc
ret
es
jecxz
jo
xchg
inc
jecxz
xchg
aaa
pop
icebp
repnz
aaa
test
sbb
mov
fistps
mov
lods
out
mov
inc
ss
adc
add
mov
inc
mov
mov
and
dec
mov
jg
add
mov
or
pop
cmp
mov
out
cmc
fwait
testb
cmp
and
xchg
mov
bound
jns
sbb
popa
inc
daa
fstpt
mov
push
mov
cmp
sub
shr
push
orb
dec
shr
ret
je
lcall
add
aas
pushf
mov
push
dec
ljmp
sub
xor
out
sbb
or
sub
xchg
aam
fistps
out
sub
jno
loope
push
push
xchg
pop
aam
pop
and
pusha
idivl
in
icebp
mov
lods
dec
pushf
aad
call
sub
int
aaa
sti
xchg
in
fcomip
in
aad
push
out
pop
push
in
mov
jne
and
pop
pop
jle
mov
inc
xor
pusha
inc
es
es
add
mov
xor
push
adc
sub
sbb
inc
ret
mov
call
adc
data16
sub
sbb
push
pushf
fbstp
push
nop
xor
outsl
lret
sbb
inc
sbb
lock
or
mov
dec
pushf
push
popf
ja
out
fidivrl
or
into
push
es
icebp
stos
dec
fdivrs
inc
lcall
jne
mov
adc
cli
sbb
xor
add
test
dec
dec
arpl
outsl
jle
lock
loope
rol
lock
bound
cmp
mov
mov
stos
fneni(8087
ja
cmpsl
popa
mov
mov
add
push
movl
lods
add
jge
rolb
cmp
outsb
mov
mov
shlb
das
pop
jno
pop
mov
aas
add
sarb
lret
dec
sbb
iret
ror
push
mov
imul
std
push
jle
mov
push
or
add
mov
fiadds
pop
in
popa
pop
loopne
arpl
sub
xchg
push
popf
mov
fidivl
push
popf
mov
pop
call
sbb
mov
test
dec
add
fiaddl
mov
mov
lods
jecxz
and
in
out
aas
shlb
pop
and
fisubrl
pop
movsb
mov
sbb
pop
outsb
sbb
and
sub
jmp
rorl
push
orl
adc
pop
in
dec
pop
movsb
xchg
mov
adc
adc
aas
in
int3
xor
pop
shll
or
mov
insl
dec
inc
ss
mov
pop
sbb
sub
and
mov
jnp
imul
nop
jmp
dec
stos
sbb
jo
in
pop
mov
mov
adc
adc
sbb
sti
or
outsb
dec
ret
dec
push
and
and
lret
push
ljmp
mov
xor
or
push
inc
and
mov
or
add
pop
inc
ljmp
or
mov
loopne
fidivrl
leave
jnp
push
inc
mov
jno
inc
or
adc
lock
aad
xchg
and
pop
mov
incl
adc
scas
add
cmp
mov
mov
dec
inc
imul
pop
pop
pop
sub
and
mov
imul
jnp
cmpb
mov
std
adc
inc
pop
inc
inc
pop
mov
xchg
dec
imul
leave
xchg
add
sbb
and
mov
popf
inc
inc
call
dec
jae
addr16
mov
insb
jb
cmpsb
fistps
adc
mov
in
fs
inc
in
arpl
inc
push
pop
mov
inc
and
in
or
mov
je
pop
cmpsb
xor
mov
jp
dec
scas
mov
fiaddl
push
outsl
mov
and
es
adc
mov
in
lods
sahf
cmpsl
call
and
inc
pop
icebp
addr16
icebp
outsb
decb
push
mov
inc
mov
mov
pushf
mov
push
je
xchg
repz
cs
mov
lea
repz
sar
push
std
jecxz
lods
or
cmp
test
in
sahf
inc
and
sbb
push
shl
test
pop
movsl
icebp
mov
dec
and
pop
movsb
sub
and
aaa
xor
adc
cmp
jb
fstps
shll
mov
repnz
cmpsl
loopne
dec
repz
push
popa
push
dec
push
outsl
popf
adc
xor
call
dec
mov
mov
test
and
and
int
mov
data16
dec
insb
dec
popa
repnz
cmp
insl
sbb
xchg
movsl
bnd
leave
andb
mov
ljmp
add
push
je
movsb
mov
dec
push
hlt
iret
add
and
pop
pop
add
fucomip
sbb
and
add
es
ljmp
arpl
fldl
addb
lods
xchg
push
stc
push
lds
shrl
xor
jmp
xchg
divl
push
in
lret
pop
jo
push
lods
imul
add
jb
loopne
jg
in
lcall
jne
aaa
lret
bound
mov
xor
jl
and
cmpsb
insl
jmp
testb
xor
mov
xchg
sub
jmp
dec
fimuls
dec
xchg
jo
jbe
inc
ja
xchg
out
test
xor
mov
in
cltd
jns
cs
mov
jp
dec
xchg
jg
lret
inc
push
jb
xor
popa
xchg
mov
loop
pop
jae
pop
cmp
cld
loopne
dec
adc
xlat
push
mov
loopne
lock
outsl
add
xchg
and
ljmp
fs
fistps
test
stos
jmp
push
loop
stos
mov
mov
pop
sbb
sub
cmpsb
test
shlb
or
popa
aad
adc
int
pop
push
pop
outsl
inc
fs
repnz
mul
pop
push
rcrl
cmpsl
js
sub
xor
es
out
dec
mov
sbb
ss
pushf
stos
push
lahf
push
sbb
or
inc
add
in
loope
out
nop
ljmp
xor
mov
ja
lods
pop
cli
subl
cmp
ds
int3
mov
xor
repnz
rorb
gs
aas
aaa
cmp
push
xchg
iret
and
and
addr16
push
fldt
and
iret
not
fisubl
cmp
jnp
inc
les
cmpsl
mov
jae
aaa
push
mov
lods
scas
mov
cld
pop
sbb
jo
mov
push
push
out
adc
or
add
cmp
inc
and
pop
out
call
jecxz
mov
dec
adc
xor
pushf
jbe
sbb
cmp
imul
fucomi
sub
arpl
in
push
xchg
push
dec
mov
stos
and
mov
outsb
add
movsl
xor
ljmp
or
xor
insl
or
mov
push
in
mov
mov
or
loope
jae
push
bound
nop
push
mov
push
rolb
fiadds
inc
mov
push
xchg
sbb
or
cmp
mov
loope
add
mov
fiadds
ljmp
mov
xchg
movsb
sbb
xchg
push
dec
xchg
addr16
in
push
dec
cmp
rorl
fcomi
ljmp
fcmove
jg
mov
mov
jbe
shlb
sbb
loope
sub
imul
das
loopne
or
stc
jno
add
loope
ret
adc
loopne
mov
sarl
push
mov
xchg
sub
mov
mov
lea
fsubrl
mov
add
fucom
mov
les
jecxz
jmp
push
jnp
adc
aad
mov
push
mov
data16
lcall
imulb
xchg
imul
lcall
fwait
mov
xchg
lods
fs
dec
xchg
jnp
mov
movsb
pop
stos
pop
ljmp
sarl
xchg
mov
pusha
aad
jg
sub
pushf
dec
adc
out
fldenv
out
fbstp
pop
pusha
bound
and
or
loope
push
sbb
rcrw
and
and
movsl
mulb
jae
xchg
clc
and
jbe
ja
push
movsb
xor
ret
cmpsb
imul
or
cmpsl
dec
out
jmp
enter
sub
andl
adc
test
dec
outsl
pop
and
and
bound
mov
jmp
sbb
pop
or
and
sbb
scas
cmpsl
sub
ds
xor
mov
push
jo
cmp
sbb
movsl
inc
xchg
popf
test
dec
pop
and
sbb
lods
dec
ja
or
imul
rcrl
insb
es
push
clc
scas
in
jg
lock
call
fistpll
das
ljmp
pop
sahf
mov
out
sub
inc
jno
aaa
scas
into
jb
jae
xor
sub
das
adc
and
mov
into
sarl
test
cs
mov
imul
mov
push
fisubrl
dec
nop
ljmp
leave
loope
movsb
sub
jl
in
imul
mov
adc
dec
in
lods
repnz
lds
arpl
xor
dec
and
jb
mov
and
xchg
in
sbb
fidivrl
push
icebp
jle
push
and
lds
stos
repnz
and
and
movsl
pop
xor
clc
push
jge,pn
xchg
ficomps
pop
outsl
lods
add
dec
cmp
and
test
push
js
imulb
jae
subl
dec
movsb
shlb
or
ljmp
popa
scas
sub
xor
insl
fdivp
and
clc
cmp
movsl
mov
popf
dec
insl
ss
xor
lret
call
pop
push
scas
mov
and
push
loopne
sahf
int3
test
cld
dec
stos
mov
lds
test
mov
mov
pop
adc
push
sti
rcrb
add
pop
arpl
aad
and
and
sarb
adc
insl
nop
and
js
xchg
push
clc
or
into
movsl
mov
fwait
shl
sbb
pop
ficompl
dec
dec
call
hlt
out
enter
add
push
pop
push
or
je
and
ficompl
xorb
clc
repnz
xlat
cmp
and
flds
jnp
clc
mov
pop
sub
or
out
mov
mov
dec
icebp
add
int3
pop
mul
js
nop
cmpsb
stos
xlat
loop
stos
push
lock
shrb
push
dec
scas
or
mov
pop
push
cmp
lret
xor
xlat
and
jb
out
pop
jp
cltd
jg
add
mov
dec
sbb
sbb
rolb
xor
xchg
lock
xlat
lods
call
jb
les
xor
cmp
rorb
es
push
sub
mov
je
mov
mov
lahf
fistpll
push
jns
cmpsb
mov
mov
or
fucom
fsubs
fistpll
sarb
rcll
mov
and
or
mov
das
mov
fisubs
or
push
jb
pushw
mov
sub
mov
pop
pop
pop
scas
or
xor
push
shrb
mov
lret
outsb
out
mov
add
dec
js
dec
sbb
std
add
mov
or
mov
mov
mov
inc
fs
mov
inc
mov
stc
fcomp
inc
sbb
jns
mov
rcrl
xor
loop
fcoms
ljmp
divl
dec
mov
and
jns
push
loope
cmp
iret
sar
inc
jae
and
xchg
mov
idivb
mov
and
mov
sbb
cmpsl
test
and
int3
lcall
cmpl
pop
sbb
pop
mov
mov
dec
or
js
pushf
sbbb
or
lret
pop
inc
push
sbb
unpcklps
jbe
repz
lds
rorl
push
pop
aam
aaa
lds
or
sbb
jb
sub
mov
fsubs
aad
adc
scas
cmp
mov
aad
adc
or
mov
or
out
or
arpl
dec
or
stos
mov
mov
mov
popa
dec
aad
into
jno
sub
out
mov
mov
repnz
xor
inc
aam
push
jb
lods
shlb
mov
cs
mov
mov
push
sub
cmpb
loopne
bound
shl
sbb
stc
xor
pop
ret
jl
jp
push
pshufw
xor
inc
int3
push
pop
imul
and
mov
leave
mov
lret
imul
push
cmp
add
aaa
or
adc
call
andb
sbb
jne
mov
das
out
sbb
insb
imul
jb
data16
cmp
sbb
xchg
outsl
jo
addr16
out
pop
js
scas
out
jb
das
outsl
adc
adc
repnz
loopne
mov
and
push
sbb
stos
imulb
jo
rorl
and
call
pushf
out
inc
jb
dec
in
dec
pop
pop
and
xor
iret
mov
fs
mov
and
fidivrl
subb
mov
mov
imul
push
dec
lods
ret
and
sub
mov
rcrb
lret
xor
cmp
ret
rorb
ss
in
in
add
and
es
push
inc
movsl
js
insl
add
mov
add
jns
inc
cmp
pop
dec
fs
sbb
pop
lea
lods
arpl
cmp
repnz
cmpsl
mov
nop
cmp
repnz
fs
insl
pop
adc
cmp
repnz
aaa
sub
pop
stos
push
mov
cmp
loop
lods
orl
stc
jno
xchg
xchg
pusha
push
out
insl
mov
movsl
ret
test
repnz
es
mov
push
hlt
cli
fidivrl
movsb
ja
push
cs
das
lock
xchg
outsl
mov
pop
and
cmpxchg
cmp
loopne
cs
gs
adc
movsl
fmull
cld
iret
mov
andb
nop
idivl
mov
stc
xorl
fsubl
fcoml
es
sbb
movsb
mov
cmpsb
jmp
lock
xor
push
loopne
lret
rorb
loopne
shlb
push
mov
cltd
or
cmove
lahf
mov
sbb
mov
orl
jb
hlt
lock
orl
imul
mov
mov
lret
mov
loop
xchg
xchg
sub
in
rol
and
bound
clc
cmpsb
clc
outsl
xlat
xor
adc
lahf
in
call
mov
es
shl
rorl
add
sbb
cmp
cmc
andb
lods
loope
popa
and
movsb
sub
mov
cmpl
imul
pop
pop
mov
xchg
and
pusha
jb
cmp
mov
jb
fstl
push
shr
jo
fcompl
outsb
mov
or
push
mov
je
repz
sbb
push
mov
mov
jns
push
mov
xchg
and
call
xor
sar
or
lahf
and
jbe
pop
aad
sub
nop
outsb
cli
inc
add
pop
js
test
lock
push
push
mov
icebp
mov
sbb
in
push
and
in
in
sub
sub
push
enter
out
mov
push
xchg
shlb
ficomps
mov
bound
sbb
outsl
push
jg
fistps
fs
int3
mov
adc
daa
jmp
mov
imul
cmp
push
fsubrp
push
xor
out
les
mov
mov
xchg
dec
or
pop
js
sub
inc
int
inc
push
movb
in
xor
mov
jle
mov
xor
cmp
stc
ret
out
div
in
popf
shl
cmc
mov
stos
cmp
push
and
leave
rcrl
jecxz
add
xchg
scas
cmpsb
mov
mov
inc
xchg
dec
das
mov
jbe
jbe
jo
xor
pop
pop
test
fistpl
clc
nop
sub
popa
mov
rcrb
repz
jns
push
outsl
inc
xor
inc
lret
scas
and
popa
jae
lock
outsb
dec
sbb
icebp
mov
jp
fwait
ljmp
cltd
insl
loopne
cltd
xchg
aam
gs
push
bound
jmp
sbb
in
insl
scas
aaa
lods
cltd
push
and
aad
movq
nop
sub
cmc
xchg
inc
adcb
sub
outsb
fs
and
insl
fidivs
bound
stos
outsl
jb
xlat
adc
and
popf
and
jo
loopne
inc
mov
jo
loopne
inc
mov
and
pop
shrd
dec
and
xchg
stos
dec
push
cmc
dec
push
cs
adcb
mov
mov
dec
adc
dec
jnp
pop
out
out
insb
xchg
imul
dec
dec
jecxz
dec
clc
adc
cmp
fistpl
push
jbe
mov
xchg
mov
push
adc
shll
mov
inc
inc
int3
pop
dec
cmp
fisttpll
inc
rcll
push
mov
pusha
data16
mov
bound
jbe
pop
push
mov
mov
mov
jno
lea
pusha
pop
icebp
lock
sbb
test
aad
repnz
adc
iret
pop
and
mov
inc
jp
mov
add
pop
and
inc
icebp
dec
and
sahf
mov
mov
jp
in
loopne
dec
in
dec
mov
fucom
pushf
push
lods
out
pop
lret
out
add
mov
dec
jecxz
inc
lret
push
or
mov
ficompl
stos
push
aam
mov
push
orb
xchg
pop
ss
mov
pop
cmc
and
mov
jne
leave
pop
mov
lahf
or
mov
or
inc
mov
mov
les
pop
push
pop
scas
mov
xchg
dec
mov
outsl
mov
std
dec
jno
popf
in
aas
sarl
cmp
jno
xchg
test
cmp
lods
sub
xor
aad
test
ljmp
and
sub
and
and
repnz
adc
cwtl
test
push
fmull
icebp
jb
sub
aas
jo
push
adc
std
faddp
dec
or
scas
imul
dec
mov
or
mov
pcmpeqw
push
in
cmp
lea
dec
ljmp
xorb
jle
or
lahf
into
jle
fsub
aad
and
repnz
xor
pop
xchg
dec
sbb
and
sahf
stos
negl
inc
or
test
cmp
dec
bnd
jmp
popa
cltd
test
outsl
sbb
popf
mov
cli
jo
mov
test
dec
daa
xlat
int
jl
jp
jl
or
icebp
repz
push
test
bnd
ret
shlb
and
cmp
push
and
pop
cmp
fldenv
lea
outsb
and
divw
iret
xchg
pop
out
sub
pop
pop
xchg
mov
or
or
int
jae
adc
inc
arpl
sub
shll
xor
iret
push
loope
test
fwait
xor
cmp
adc
mov
das
push
movsb
mov
lea
ljmp
in
movsb
mov
and
cs
movsl
push
mov
cmp
sub
inc
imul
movsb
gs
add
cmpsl
leave
repnz
mov
or
push
or
xor
in
lock
out
mov
xchg
addr16
ffree
shrb
cmp
dec
subb
mov
inc
ficoms
pushf
pusha
bound
rclb
imul
lods
ret
pusha
loopne
xor
es
xor
mov
test
xchg
jmp
sbb
push
stos
cld
ljmp
pop
sub
or
adc
mov
push
or
repnz
test
movsb
pop
adc
xor
add
jb
or
out
mov
adc
sub
pop
mov
stos
mov
jmp
push
pushf
dec
pusha
inc
movsb
xor
push
pop
mov
repnz
imul
and
pop
mov
mov
outsb
and
or
cwtl
fs
jmp
push
and
aam
add
pop
outsb
mov
fisttpl
adc
cmp
sbb
scas
pushf
mov
adc
pop
push
xor
fiadds
cmp
lahf
add
hlt
pusha
gs
enter
arpl
xlat
push
imul
cmc
and
pop
and
mov
push
js
in
mov
mov
clc
shl
outsb
and
sbb
add
cmp
xor
stos
mov
and
mov
movsb
jmp
mov
fs
int
pusha
mov
push
and
loope
or
push
xor
mov
das
sub
jae
lods
fistpl
cmp
sub
push
cmpsb
push
adc
or
pushf
daa
or
dec
pop
cmpl
mov
inc
or
jl
xlat
adc
fdivl
xchg
fiaddl
mov
repz
lcall
inc
repnz
sbb
pop
ficoml
xchg
jecxz
sbb
out
push
pop
mov
sub
sbb
sub
pusha
shrl
mov
rolb
pushf
cmp
cmp
fsubr
std
pop
lcall
repnz
adc
and
scas
xchg
in
or
bnd
stc
lock
xchg
inc
xchg
inc
movsb
inc
movsl
mov
and
jo
test
das
and
jo
test
andl
ds
mov
jo
and
lahf
movsb
jo
push
inc
or
pushf
lret
outsl
stos
idiv
and
pop
mov
sub
in
dec
adc
pop
sbb
lea
scas
jnp
sbb
push
mov
in
mov
imul
fcomp
pushf
xlat
mov
and
xchg
in
daa
ficoms
and
xor
scas
dec
push
push
add
iret
fdivs
sbb
nop
es
sub
push
ds
popf
ljmp
pop
push
cli
pop
popf
lcallw
adc
lock
enter
jecxz
xor
lret
push
inc
mov
xchg
stc
jmp
mov
adc
mov
push
xchg
inc
add
imull
cs
sbb
push
jmp
mov
int
incb
loope
lahf
cmp
push
scas
aaa
pop
addr16
pop
mov
sbb
adc
loope
mov
notl
mov
outsb
adc
negl
sbb
adc
minps
sub
mov
dec
mov
sub
mov
mov
sub
sub
rorb
xchg
sub
popa
idiv
pop
push
out
jp,pn
mov
in
repnz
movsl
adc
xchg
or
add
or
mov
ja
and
mov
push
out
add
or
rcrl
xchg
xchg
mov
pop
mov
or
add
mov
pop
addr16
inc
or
jp
pop
je
les
or
clc
xchg
sbb
call
icebp
popa
push
jns
jno
jmp
and
cwtl
fisttpl
sbb
arpl
or
outsb
hlt
cmp
out
mov
mov
outsb
and
imul
xor
test
aas
scas
data16
or
mov
stc
insl
scas
xchg
aas
icebp
movsb
sub
push
jg
jl
pusha
dec
clc
cwtl
lods
mov
ret
fwait
cli
push
and
and
jae
mov
std
pop
mov
and
mov
push
sub
mulb
and
xchg
loopne
cmp
xchg
mov
jbe
lods
je
shlb
mov
mov
fs
shrl
dec
fsubl
xchg
or
jo
pop
mov
cmp
adc
out
add
and
shl
dec
mov
and
sub
xor
mov
mov
adc
notb
in
lods
or
sbb
mov
mov
adc
fcmovnb
jle
fisttpl
add
dec
xor
iret
or
dec
jns
call
popw
cmp
stc
mov
lahf
loopne
mov
lea
dec
sbb
rorb
rep
sbb
sbb
add
mov
ficompl
arpl
jl
mov
mov
stc
mov
and
inc
push
iret
add
push
xor
test
pop
cs
adc
and
adc
cmp
pop
push
mov
cmpsl
jecxz
xor
imul
pop
and
andb
lds
adc
or
jmp
ljmp
loope
movsb
iret
mov
cmp
lcall
dec
mov
clc
push
xlat
lds
rorb
ds
and
sub
jecxz
sub
inc
repnz
orb
or
mov
push
add
cs
jl
mov
rcl
outsb
and
mov
imul
or
mov
push
xchg
out
into
repnz
scas
cmp
mov
lret
test
pop
movsl
sbb
pop
stos
test
and
loopne
lds
and
lret
insl
cwtl
imul
sbbb
rcrb
out
mov
adc
scas
jns
dec
test
pop
hlt
xchg
or
iret
int3
out
lock
call
lret
push
in
sbb
ljmp
sbb
ss
mov
or
iret
fidivrs
sbb
mov
pop
loop
jecxz
testl
xor
testb
sub
pop
xchg
pop
sbb
mov
inc
in
dec
mov
sbb
sub
rcll
mov
sub
aaa
inc
jmp
mov
jmp
mov
mov
mov
push
popa
dec
outsb
hlt
push
xchg
dec
loopne
pusha
add
pushf
sbb
mov
rcrb
cmp
sti
pusha
pusha
jle
scas
jno
in
scas
push
xchg
add
lock
inc
mov
xchg
mov
fdivrp
cmp
subl
dec
pop
mov
sub
mov
sbb
notl
es
sarl
xchg
aaa
popf
movsb
or
jp
pusha
imul
mov
in
daa
imul
mov
sub
jmp
jb
mov
and
mov
test
mov
movsb
dec
and
ret
fsubrl
jo
or
inc
pusha
mov
and
mov
rcrb
aam
adc
and
sbb
faddl
andl
das
out
lea
lods
call
jmp
jecxz
mov
mov
gs
stos
sub
lahf
sub
stc
dec
pop
sub
sub
xchg
fsubp
ds
cli
jg
cmc
pop
and
fcoms
cmp
jae
mov
movsl
mov
jmp
shl
dec
or
rolb
jg
out
pop
jo
push
xchg
mov
popa
fisubrl
or
pushf
ljmp
sbb
cltd
fyl2x
pop
gs
rcl
pop
xchg
mov
jp
ds
xchg
pop
xorl
pop
add
add
testl
sub
xor
jb
sarb
mov
pop
orl
inc
fsubs
mov
add
push
mov
aas
xor
adc
adc
lds
sbb
mov
shlb
adc
lods
mov
bound
adc
mov
dec
hlt
sbb
cmpsl
dec
pop
sbb
sbb
outsb
and
fildl
add
jae
cwtl
dec
and
sti
inc
pop
in
ja
jo
cwtl
sbb
or
dec
ja
adc
movsl
pop
inc
or
repnz
stos
or
xchg
adc
insl
mov
sbb
in
mov
je
insl
rep
cmp
lcall
pop
mov
push
out
lcall
xor
fwait
in
dec
add
jb
dec
fnsave
cltd
mov
loop
fs
mov
nop
xchg
push
mov
mov
xor
jbe
mov
or
mov
pop
ss
xchg
daa
movsl
jle
or
sbb
pop
sbb
inc
cltd
clc
cmpb
cmp
pop
jne
inc
cltd
lea
and
adc
divl
ljmp
sbb
push
pop
cmpsb
test
cltd
lea
or
mov
adc
and
cmp
mov
push
push
or
mov
push
repz
inc
dec
or
jo
rorb
divl
fs
mov
cltd
push
push
or
or
jo
or
and
jno
mov
pushf
mov
and
daa
cmp
mov
mov
ret
lds
and
aaa
jmp
daa
mov
dec
pop
incl
pop
lret
xor
push
in
out
stc
shrl
sbb
call
mov
loopne
mov
test
push
clc
mov
add
add
xor
pop
mov
xchg
test
in
scas
xor
xchg
xchg
ljmp
mov
cmp
pop
out
adc
adc
les
dec
mov
pop
xchg
divb
mov
push
cmpsl
fwait
daa
sub
jnp
movb
loopne
out
pop
xchg
mov
gs
gs
nop
inc
or
mov
adc
mov
dec
push
sbb
push
sub
sbb
loopne
jne
fwait
mov
jbe
imul
aas
sub
aas
sbb
stc
mov
and
shlb
xchg
cmpsb
gs
dec
ss
adc
imul
mov
sti
push
add
roll
mov
mov
cmp
cmp
sbb
pop
popf
jns
and
call
xor
mov
popf
mov
fwait
mov
xchg
mov
sarb
leave
pop
and
mov
cmp
loope
scas
xor
roll
xchg
lret
lret
pop
mov
adc
dec
fcmovu
sbb
dec
adc
push
pushf
push
mov
adc
mov
enter
sbb
jae
mov
mov
mov
rclb
mov
adc
push
pop
xor
imul
jno
shl
out
or
pop
add
pop
daa
sarb
push
hlt
cs
mov
lods
fs
xchg
pusha
push
repnz
jns
out
and
aad
inc
jg
mov
mov
pop
std
dec
mov
push
dec
lret
xchg
mov
mov
mov
cs
imul
jnp
pop
es
jmp
faddp
xor
jbe
addr16
fistpll
enter
insl
lds
cmpsl
in
scas
and
leave
xor
divl
mov
std
mov
pop
movsl
stos
loopne
cmp
cmp
pop
and
cmp
mov
xor
fstp
jo
adc
mov
sbb
sti
fcomps
mov
repz
cmp
inc
cmp
aam
pushf
xchg
andl
or
clc
movsb
shlb
xchg
inc
jnp
mov
push
rolb
pop
popf
adc
shll
lea
mov
sbb
mov
addb
repz
call
sub
in
sbb
stc
movsb
pop
cs
inc
shlb
and
cmp
add
mov
xchg
imul
inc
pop
popf
lods
fnstenv
fwait
ds
sbb
in
dec
and
pop
nop
adc
and
adc
mov
mov
pop
mov
adcl
or
lods
lea
sbb
jmp
adc
ja
cmp
adc
push
pop
dec
test
mov
sbb
sub
lahf
xchg
leave
push
stc
movsl
lahf
and
adc
xor
push
call
xor
mov
push
repnz
ja
inc
dec
fisubl
adc
sbbb
jbe
rorb
repnz
ja
lret
pop
mov
in
jecxz
mov
xchg
xor
fwait
jmp
std
jb
sbb
and
mov
lock
pop
hlt
jb
frstor
inc
in
shll
xor
addr16
sub
xchg
pop
mov
xchg
inc
push
and
movsw
mov
mov
loope
out
bound
lcall
jae
data16
pop
mov
pop
sbb
imul
mov
inc
loope
loop,pt
in
stc
les
lahf
xor
fildll
add
jno
lahf
dec
mov
int
inc
repz
mov
ss
jp
mov
es
sbb
and
sbb
aaa
or
xor
sub
fs
inc
jle
jae
xchg
inc
push
inc
repnz
add
and
sahf
call
loope
xchg
ds
dec
adc
out
aam
pop
add
lock
dec
or
ds
cmp
push
sub
divb
icebp
and
mov
mov
pop
int3
or
xor
xchg
rorb
sub
mov
fstl
in
push
mov
lods
fimull
imul
lret
jl
dec
cli
sbb
data16
sub
pop
loop
fildll
shrl
cmp
loope
not
shrb
push
mov
ficoml
aad
jg
pop
pushf
cmp
stc
dec
cmpsl
loope
imulb
jo
shll
pop
cmp
mov
icebp
sti
ljmp
xor
fiadds
or
mov
outsb
jmp
sbb
addr16
lods
ja
movsl
and
lods
rcrb
gs
mov
stos
mov
cmpsb
mov
adc
outsb
push
sbb
mov
push
loopne
loop
pop
adc
data16
comiss
sbbl
xchg
sub
mov
test
wbinvd
pushf
popf
dec
pushf
rcrl
out
add
dec
shll
jbe
inc
sub
data16
mov
jecxz
shll
lret
push
sub
sbb
scas
mov
out
or
outsl
dec
mov
in
mov
outsb
or
push
jge
inc
pushf
pop
scas
aas
out
stc
addr16
jmp
dec
cli
mov
jns
add
fisubrs
test
sahf
call
or
pop
test
adc
sub
clc
clc
pop
fldt
sub
imul
dec
cmp
jg
pop
inc
rcrl
sbb
sub
jnp
nop
pop
gs
xchg
jb
xchg
sbb
or
dec
xlat
mov
shlb
mov
adc
cmc
outsb
out
popf
cli
mov
lcall
rcll
lds
pop
cmpsb
inc
push
mov
jb
mov
imull
and
aam
lock
dec
stos
mov
push
adc
dec
out
jno
push
cmp
dec
lds
pop
imul
mov
sti
mov
mov
pop
stos
ja,pt
and
dec
lea
fisubl
mov
dec
mov
gs
sbb
cmpsb
popf
jns
in
push
fnstcw
je
and
int3
dec
popf
pop
lock
or
test
jb
inc
imul
in
lods
hlt
cmc
jmp
adc
cmpsl
call
xor
jno
sub
and
jl
lock
push
loopne
outsb
loope
inc
mov
in
fbstp
pop
adc
jnp
loop
in
mov
mov
mov
pushf
and
ss
pop
das
cli
sarl
fsubl
cmp
pop
mov
movsl
pop
mov
nop
mov
loope
pop
or
loop
jno
sub
sahf
sbb
inc
push
bound
lret
pop
loope
dec
mov
sbb
cltd
outsl
mov
pop
or
jb
rolb
mov
and
cmp
lret
loope
jae
lds
les
push
mov
mov
into
leave
test
pop
mov
adc
pop
and
in
stos
mov
dec
ss
fsubrs
movsl
sahf
mov
jl
in
cmp
jl
mov
into
pusha
movsb
sub
jo
or
sub
ljmp
imul
push
push
call
add
shrb
xlat
fcomps
adc
cmp
mov
sub
ficomps
sub
sti
jo
cld
stos
xchg
dec
pop
rcrl
scas
push
jb
loope
stc
push
insl
jno
cmpsl
sbb
lds
aam
sti
test
cli
loop
sbb
icebp
mov
imul
sbb
and
call
and
int
aas
adc
outsl
mov
sbb
inc
enter
xchg
lods
mov
adc
mov
mov
imul
and
add
test
insl
jo
js
jmp
sbb
mov
scas
pop
aam
sbb
lret
sub
iret
scas
jo
sbb
ret
adc
call
inc
dec
mov
sbb
out
adc
push
sbb
stos
fcomi
add
stos
rorl
iret
and
negb
movsb
jbe
addr16
inc
loope
loop
dec
pushf
insl
mov
push
scas
mov
xchg
mov
push
mov
sub
sub
rorb
mov
lcall
sub
mov
stos
and
pop
xchg
xlat
sbb
add
lret
xorl
scas
outsl
lcall
mov
mov
imul
icebp
dec
dec
lahf
xor
mov
clc
pop
imul
pushf
je
lret
imul
adc
cwtl
pop
in
pop
or
iret
push
adc
push
in
fmuls
mov
dec
pusha
mov
scas
mov
or
cmp
sti
cmp
cmp
jbe
and
lods
and
push
pop
mov
mov
sub
push
lods
push
pop
fcoml
movsb
mov
out
xor
lret
xor
sbb
jo
ss
pop
pop
sbb
adc
mov
ss
sbb
inc
jns
push
in
fcoml
and
fisubl
pop
pop
popa
xor
jg
std
dec
adc
add
bound
mov
jo
cmp
and
mov
push
mov
outsb
adc
push
int3
and
dec
ret
adc
sbb
pop
lahf
sub
push
sub
adc
pop
sbb
scas
movsl
aam
es
jno
jno
movsb
jae
jge
pusha
fmuls
jle
imul
cmp
lock
ss
call
push
arpl
pusha
mov
add
repz
rolb
call
xchg
and
loope
sbb
or
xchg
cmpsb
pop
pop
adc
fs
int3
sub
fcmovbe
imul
add
xchg
imul
dec
int
jo
mov
scas
int3
bound
mov
loopne
cmp
or
sti
mov
add
hlt
lods
bound
adc
push
leave
and
arpl
addr16
inc
loop
push
andl
pusha
mov
sub
rcr
dec
pop
dec
rcrb
xor
adc
add
adc
pop
mov
or
sbb
btr
das
enter
outsl
adc
es
inc
in
daa
inc
or
cs
sbb
mov
push
inc
mov
mov
lret
ss
ja
cmp
cld
insl
jg
pusha
cmp
cmpsb
icebp
dec
pop
xor
pop
dec
out
dec
arpl
test
daa
bound
inc
mov
pushf
push
repz
outsl
push
cmc
mov
pop
jno
xchg
mov
xchg
sahf
pushf
dec
push
nop
adc
cmpsl
jle
or
dec
testl
push
sarb
cmp
lock
mov
cmpsb
lods
push
jns
sub
pop
push
cmpsb
scas
add
push
pop
mov
aas
push
lods
xor
mov
es
ret
test
inc
xchg
xchg
mov
cmp
rcrb
or
lahf
jo
and
sahf
test
pop
cmpsb
cmpsb
sbb
or
fimull
mov
pop
aas
mov
int3
lods
call
fbld
addr16
cmpsb
jmp
loopne
fs
pushf
pop
or
dec
cli
hlt
scas
test
pusha
mov
fstpt
scas
imul
mov
jno
mov
orl
add
call
call
es
mov
adc
sbb
jns
cli
pop
pop
adc
stos
pop
inc
ss
fcompl
mov
sub
xchg
jmp
aas
pop
cmp
fcmovnb
pop
or
insl
fidivs
loop
mov
pop
adc
pop
bound
pushf
loope
push
mov
lods
scas
jb
call
aaa
fcmovnb
or
sbb
in
dec
outsb
outsl
fwait
add
cs
mov
in
loope
adcb
into
adc
rcrb
or
js
jo
gs
add
dec
inc
lods
mov
int
sbb
scas
pop
fisubrl
jle
jl
sbb
mov
jb
and
andb
lcall
in
add
mov
jo
sub
sub
test
shr
push
mov
mov
and
daa
gs
hlt
mov
insl
dec
mov
sahf
cmp
adc
jmp
inc
lods
lock
icebp
movsl
int
dec
add
negl
inc
leave
lcall
adc
push
and
push
cmpb
push
mov
jb
mov
cmp
mov
cmp
in
inc
xor
cmp
or
mov
in
imul
lahf
icebp
je,pt
mov
ret
loopne
adcl
fwait
mov
enter
stc
stos
xor
pop
push
ljmp
lds
mov
mov
nopl
adc
adc
lret
dec
or
ss
mov
jb
loop
movsl
mov
inc
sbb
xchg
inc
xchg
nop
pop
fnstsw
inc
lret
loope
pushf
mov
inc
out
test
imul
jno
sub
stc
lcall
jmp
mov
insb
pop
imull
dec
jle
sbb
stos
jge
psrld
cwtl
mov
inc
inc
and
in
cltd
pop
mov
out
xor
popf
nop
fidivrl
mov
repz
xchg
in
lret
xchg
sbb
mov
outsb
shl
dec
shrl
inc
pop
pcmpeqb
push
sub
jecxz
dec
sbb
jl
dec
loop
sbb
in
adc
test
fidivs
push
and
fs
mov
xchg
inc
and
out
pop
dec
sbb
in
sub
sbbb
sbb
repnz
cmp
nop
sub
cs
gs
sbb
or
pop
add
sub
stos
mov
inc
aas
mov
cmpsb
sub
dec
push
aaa
popf
movsb
ja
add
stos
or
ret
or
and
add
add
mov
jb
xor
ret
pop
mov
push
lahf
or
shlb
lahf
mov
mov
mull
loopne
mov
pushf
scas
cmp
add
les
mov
jae
test
xor
dec
jp
movsl
mov
pop
ds
cmpsl
add
cwtl
mov
addr16
cmp
sbb
sub
les
pop
inc
imul
mov
aad
insl
in
lcall
pop
xor
imul
sbb
adc
insl
xor
add
shlb
add
add
loop
ljmp
cltd
sahf
repnz
ja
xchg
mov
ja
xor
ljmp
pand
xor
jno
jo
xchg
dec
sbb
stos
dec
jmp
dec
push
in
sbb
cmp
test
jb
xchg
xchg
push
pop
divb
adc
xor
loope
xor
sahf
mov
mov
xchg
sbb
movsb
rcr
cli
loop
jns
mov
sbb
sbb
int3
mov
jp
or
out
jbe
dec
cld
daa
adc
adc
sub
aas
push
push
das
call
or
sbb
ljmp
popa
mov
or
fldenv
in
sub
lods
or
lret
pop
inc
in
xor
fisttps
adc
movsl
pop
testb
lcall
fcmovb
jp
xchg
sub
cmp
mov
cs
jno
gs
in
pop
lods
xchg
sti
xchg
inc
sub
ret
addr16
adc
push
cli
adc
imul
sbb
mov
mov
bound
jbe
mov
fsubrp
mov
arpl
stos
cld
mov
sub
loope
pop
movsl
sub
addb
fucomip
lock
dec
sub
dec
and
cmp
sbb
ljmp
mov
push
push
fcmove
fucomp
popl
adc
int3
or
xchg
test
cmpsb
mov
bound
sub
cmp
lods
rcrb
inc
push
sbb
jb
gs
dec
jp
rolb
sarb
xor
test
call
cltd
pop
out
sbb
and
movsb
lret
add
xor
xchg
aaa
ja
push
out
movsl
jbe
stos
xlat
lods
mov
mov
sub
scas
sub
mov
dec
fadds
ret
call
xor
in
mov
mov
mov
aad
dec
movsl
mov
outsb
movsl
inc
std
in
xchg
mov
fiaddl
and
inc
pop
sub
sysexit
adc
adc
outsb
dec
xor
out
lods
mov
repnz
xchg
dec
cmpsl
bound
inc
push
cltd
push
das
sarl
insl
sub
cmpsb
data16
mov
cli
bound
mov
movsl
jno
out
mov
jns
dec
jo
pushf
icebp
xor
pop
inc
insl
xchg
sub
int3
jbe
pop
xchg
call
push
dec
sbb
push
sbb
movsb
outsb
stos
sbb
jns
lds
mov
lods
in
sbb
dec
push
clc
pusha
push
je
mov
or
pop
adc
insl
loop
in
jns
cld
jb
stc
je
std
loopne
jle
jge
int3
or
lods
jg
fldl
push
mov
sbb
outsb
add
imul
scas
int3
popf
push
fildl
cmp
push
das
dec
repz
stos
sbb
mov
xor
pushf
xchg
lods
sbb
test
lcall
cld
and
addr16
mov
fisttpll
jmp
shrb
cmc
lahf
stos
in
or
ret
adc
inc
push
cmp
out
outsb
jo
or
push
das
xor
std
cs
dec
test
push
mov
aaa
fists
mov
mov
adcl
mov
mov
sbb
xlat
sub
jo
stos
fisubrl
pop
mov
mov
outsl
dec
jp
dec
mov
stos
insl
adc
sbb
jno
dec
repz
imul
adc
fldcw
cmp
push
repnz
ljmp
repnz
aaa
mov
repnz
xchg
push
sub
lcall
or
pop
movsb
and
in
add
mov
lcall
scas
sub
inc
fs
push
pop
mov
pop
imul
out
lcall
adcl
mov
pop
cmpsl
ds
out
push
fisubrs
and
inc
aaa
in
add
jno
add
push
outsl
adc
and
jmp
lods
sbb
dec
xchg
pop
cmpsl
mov
dec
push
cmpsb
dec
stc
std
movsb
sbb
cmp
mov
jae
inc
pop
mov
push
jl
int
insl
or
mov
and
pusha
jbe
fisubrl
or
jne
scas
push
cmp
fsubr
cmc
mov
icebp
faddl
xor
jbe
aas
arpl
or
dec
xchg
push
cld
js
out
jge
clc
in
cld
mov
pop
out
in
and
sub
out
mov
imul
sbb
sbb
imul
sub
ljmp
add
faddp
pop
mov
das
inc
pop
xchg
jb
xlat
push
shll
xchg
aaa
mov
pusha
sbb
je
fsubrl
stos
jle
adc
jge
nop
hlt
xor
ja
inc
imul
sub
jb
cltd
scas
mov
scas
cli
push
pop
aaa
stos
jb
mov
and
sarl
ret
adc
sub
or
xor
sbb
adc
and
insl
and
testb
dec
popf
mov
icebp
mov
or
push
int3
pop
jbe
cs
fidivrl
ret
jl
loopne
into
cli
loopne
in
scas
dec
xchg
outsb
lods
and
in
mov
sbb
mov
xor
call
cs
dec
fwait
dec
mov
dec
lods
dec
adc
cmp
outsl
repnz
in
add
push
movsb
pusha
imul
fs
ss
ljmp
cmpsl
jo
in
push
inc
jno
pop
ljmp
mov
cmp
dec
push
adc
sbb
pop
lahf
sub
mov
fstpl
mov
or
mov
outsb
icebp
movsb
sbb
jno
sbb
loop
or
sbb
ljmp
cli
sbb
ljmp
sbb
fucomp
movsb
mov
ljmp
iret
pop
mov
jno
lret
xor
test
sti
sbb
sbb
xor
dec
xchg
xchg
push
in
imul
cmp
mov
cmp
dec
and
lods
inc
movsl
pop
clc
lcall
jbe
inc
in
sbb
cmp
push
cmp
sub
inc
cld
mov
out
mov
ja
in
xchg
cmpsb
stos
push
lcall
or
and
aad
outsb
mov
xlat
and
cmp
inc
jns
cwtl
cs
arpl
je
insb
ds
mov
or
clc
xchg
dec
test
lret
mov
lock
jns
inc
xchg
jo
and
movsb
lods
mov
inc
fnstsw
jmp
out
xchg
and
into
and
mov
call
in
adc
and
popa
push
cld
hlt
adc
mov
jno
cmpl
mov
jae
test
push
out
adc
sbb
cmp
pop
lods
mov
rol
int
pop
cli
sub
ja
repnz
mov
sbb
and
test
add
out
jno
push
xchg
lods
adc
cmp
push
ds
bound
cmp
divl
in
insl
mov
jne
loope
push
mov
lahf
sbb
pop
jo
dec
jne
inc
in
in
or
ret
mov
mov
cli
xor
stc
lods
stos
inc
imul
clc
int3
pop
outsb
pop
inc
gs
jb
sbb
imul
adc
cli
fstps
sbb
mov
popf
sbb
sbb
lret
and
mov
sub
fs
mov
mov
mov
and
fnsave
outsb
jo
pop
in
xor
cmp
xchg
inc
out
stos
mov
data16
xchg
fwait
imul
dec
mov
test
int3
and
loope
adc
and
xor
sbb
dec
icebp
stos
push
cli
pusha
cld
adc
dec
enter
jb
inc
fwait
cmp
sbb
loope
push
lock
das
cli
out
pop
shll
fidivrl
stc
nop
jp
cmp
cmp
rol
and
xchg
imul
pop
add
ror
push
add
out
and
aam
decl
jmp
mov
and
push
imul
loope
js
sub
push
pop
lods
pushf
add
das
xchg
sub
lret
mov
jb
fiaddl
insl
pop
lods
addl
mov
lahf
fistps
xor
push
lock
das
pop
mov
pop
and
pusha
stos
outsl
popa
pop
pmaxsw
ffreep
pop
or
ja
lcall
mov
pop
outsb
sub
xchg
outsb
xchg
rcll
jae
out
adc
outsl
mov
xor
lods
adc
outsb
mov
sahf
in
test
lods
out
out
lods
and
pop
stos
and
pop
loop,pt
shrl
cwtl
test
mov
add
arpl
imul
bound
sbb
sbb
or
test
add
pop
lea
adc
push
add
mov
mov
push
jo
in
pop
or
fs
inc
adc
push
icebp
dec
jge
loope
loopne
add
or
mov
pop
mov
ficoml
repnz
adc
or
and
sub
sub
xor
nopl
mov
fs
push
dec
xorb
into
fistl
dec
sub
sub
in
and
icebp
lahf
jb
imul
add
std
push
mov
jo
das
jno
imul
das
out
movsb
adc
movsl
sbb
or
clc
push
out
sub
cmp
sbb
mov
fsts
stos
xlat
mov
fnstcw
jp
fdivp
xor
lret
idiv
lret
pop
stos
call
fisttpl
mov
hlt
pop
repz
push
sbb
mov
mov
ret
inc
cmp
lock
sbb
je
out
mov
jo
push
dec
pop
mov
pushf
mov
shl
pop
mov
mov
dec
mov
outsb
push
popa
jno
lds
frstor
pop
outsl
fwait
test
push
adc
cmpsb
shl
sbb
enter
sarb
pop
jb
repnz
mov
int
xor
in
adc
pop
or
push
fisubl
jp
jmp
and
push
insl
sub
xlat
dec
fldenv
int
mov
mov
in
mov
mov
movsl
push
insl
mov
xor
mov
dec
pop
call
ja
push
int
adc
and
mov
mov
inc
call
or
mov
and
shlb
roll
dec
push
shlb
and
loope
in
stos
dec
fstps
mov
js
ljmp
aaa
push
movsl
popf
xchg
pushf
mov
stos
dec
cmp
lahf
movsb
jmp
adc
in
adc
lods
ja
cli
and
push
lods
mov
push
cmpsb
dec
pop
push
pop
stos
xor
adc
pop
inc
cmp
mov
outsl
sub
jo
test
out
movsb
insb
dec
or
sub
cmp
fmuls
xchg
and
idiv
ss
xchg
inc
popf
cli
or
push
jno
hlt
xchg
xchg
cmpsl
push
shlb
jns
push
shll
push
cmp
mov
add
sahf
jbe
popf
fcmovb
mov
scas
jle
mov
gs
dec
das
into
and
jl
in
popa
push
mulb
push
stos
xor
roll
jl
cmp
jmp
mov
jb
dec
rcrb
imul
xchg
bound
popf
fs
data16
fs
mov
dec
arpl
gs
xchg
mov
clc
or
cmp
mov
pusha
aam
jae
xlat
jle
lods
cmpsb
lods
adc
mov
pusha
push
stc
xchg
pushw
mov
push
mov
mov
imul
cli
mov
filds
xor
jb
test
fisttpl
push
ret
popa
nop
inc
and
jecxz
repnz
div
adc
dec
xchg
mov
sbb
test
cmpsb
xchg
inc
push
jecxz
xor
dec
cltd
mov
insl
xor
fwait
jle
and
test
loop
lods
scas
ficompl
cmp
inc
rcrl
mov
adc
mov
std
push
inc
outsb
push
push
sub
loope
jns
xor
jno
ja
and
mov
push
cmp
mov
in
in
mov
movsl
xchg
sub
int3
cmp
cmp
popa
aaa
fstl
mov
pop
inc
outsb
pop
hlt
adc
pop
outsb
aas
jmp
test
fnsave
ja
fs
clc
mov
xchg
scas
sbb
imul
pop
gs
outsb
sbb
jmp
xchg
out
pop
scas
cmp
dec
push
fucomip
and
dec
add
in
mov
or
pop
sbb
or
aaa
stos
inc
push
fiadds
fidivrl
xchg
test
and
mov
popf
xchg
fbld
cltd
pop
jnp
mov
ja
push
cmp
pop
stos
push
out
sbb
cld
mov
fisubs
testl
adc
shll
mov
in
insl
push
test
fdivrl
cwtl
cmc
nop
stos
dec
outsb
jo
sbb
pop
jb
je
mov
sahf
adc
adc
mov
mov
sbb
scas
imul
xchg
xchg
and
jnp
push
push
fsubs
divb
inc
icebp
fisubl
imul
in
cmp
lcall
pop
test
sbb
mov
sbb
mov
dec
mov
mul
or
imul
push
in
pushf
inc
cmp
rcrb
icebp
mov
lahf
popf
pop
lea
out
mov
push
je
popa
mov
pushf
jno
cmpsl
arpl
sbb
xchg
mov
icebp
icebp
mov
and
fistpl
jne
lahf
lea
mov
frstor
mov
stos
cltd
xchg
fsubrl
cli
sub
cmpsl
inc
mov
xchg
push
push
sahf
inc
lea
push
mov
push
cwtl
push
cltd
repnz
jae
mov
cmpl
cmovnp
mov
loope
cld
jecxz
popf
loope
dec
add
mov
cmp
in
ficomps
cld
pop
jo
adc
fwait
sub
popa
sarb
xor
inc
aaa
leave
xor
adc
imul
mov
or
xchg
xor
call
bound
and
jo
mov
out
inc
jns
adc
and
cld
pop
xchg
mov
push
ss
aad
sub
shl
leave
sahf
imul
cmpsb
js
sbb
fcmovb
mov
dec
int
ja
rorl
es
scas
fldcw
push
ret
and
sub
in
mov
pushf
js
push
stc
mov
dec
and
mov
enter
xlat
push
jno
inc
lret
arpl
mov
xorl
ljmp
and
push
lcall
dec
imulb
xor
mov
dec
rep
jg
fnstsw
stos
cmpsl
leave
jmp
aas
xchg
bound
sarl
sbb
paddb
aam
mov
mov
loopne
sarl
push
pop
outsb
arpl
pop
sub
xlat
insl
lahf
push
frstor
mov
popa
popl
cli
clc
or
sub
sub
idivl
and
adcl
outsb
sbb
std
cmpsl
lds
jb
cwtl
sti
sbb
fmuls
notl
lcall
pop
nop
or
movsb
mov
add
cs
mov
movsl
lea
jo
stos
loopne
jb
pushl
dec
add
std
mov
xchg
in
movsl
sbb
adc
jb
mov
inc
dec
pushf
popf
fs
ss
add
outsb
std
sub
mov
adc
cmp
mov
pop
xor
sbb
jnp
sbb
adc
stos
test
mov
and
call
jno
jmp
shll
inc
shrb
movsl
adc
stos
fimuls
imul
add
ljmp
xor
jbe
xor
xchg
jp
pop
popf
arpl
test
dec
lods
and
mov
push
frstor
stos
xchg
arpl
cmp
sbb
cli
rcrb
rcrb
ficompl
mov
insl
cmc
movsb
gs
xor
jnp
out
mov
dec
sbb
push
outsl
jo
mov
mov
test
and
sub
pop
xchg
mov
gs
lea
cmp
ret
dec
int3
out
div
sbb
dec
out
cwtl
js
sub
sbb
push
dec
bound
lods
inc
insl
dec
dec
xor
js
inc
dec
xlat
add
adc
or
fstps
fildl
outsb
adc
jg
out
jl
out
pop
in
into
pop
popw
das
push
or
xchg
in
pusha
sub
push
imul
test
mov
jl
adc
inc
aam
arpl
test
and
ljmp
mov
ljmp
ret
inc
test
mov
ret
out
sbb
jns
dec
fdivs
daa
in
in
cmp
jle
lods
jge
or
arpl
sub
outsb
and
fmul
jp
jo
aam
jl
push
adc
imul
dec
fistpll
and
aam
bound
data16
jne
adc
sbb
jecxz
pop
movsl
pop
jge
adc
ret
dec
stos
jb
pop
mov
ret
bound
in
adc
xor
sub
pop
mov
sbb
mov
jle
cvttps2pi
jp
insl
sbb
js
push
movsl
dec
lods
push
fwait
shrb
les
cli
mov
push
sub
jmp
sub
fs
fimuls
movsl
inc
mov
out
xchg
scas
lods
insl
outsb
loope
and
lahf
mov
loop
idivb
mov
imul
pop
push
pop
xchg
stos
icebp
imul
ds
lahf
aad
lahf
ljmp
push
lcall
or
mov
jb
and
dec
call
es
pop
lock
pop
xchg
add
fwait
insl
fs
jno
pusha
mov
or
sub
insb
dec
popf
mov
dec
frstor
cld
shrl
mov
jno
add
pusha
mov
movsb
and
outsb
cmpsb
cmpsl
push
pop
arpl
sub
xchg
add
mov
lods
aam
jmp
push
xorl
nop
mov
xchg
push
jb
xadd
add
ljmpw
dec
xchg
stos
jl
idivb
push
sbb
sub
cmp
dec
repnz
pop
lock
sub
jno
add
push
adc
and
adc
stc
loopne
bound
pop
push
mov
dec
jle
xor
mov
insl
push
jle
mov
orl
dec
fwait
xchg
and
xchg
stos
jno
xor
cs
movsb
push
or
cwtl
testb
dec
stos
pop
insl
in
and
es
and
fisubs
lock
loopne
adc
push
sbb
lock
rcrl
xor
and
jbe
inc
insl
inc
scas
lods
or
pop
cmp
insl
jbe
ret
mov
loopne
xchg
lds
or
bound
movsl
fs
pop
sbb
xchg
ljmp
in
jge
mov
lds
push
add
lods
xchg
push
ljmp
cmp
lods
dec
pusha
arpl
pushl
popf
sbb
pop
xchg
out
jno
mov
pop
xchg
stos
sub
popf
mov
nop
xchg
dec
fsts
mov
in
add
mov
out
cli
pop
pop
cmpsl
leave
add
dec
pop
ret
mov
dec
ror
test
jmp
icebp
dec
rol
test
sub
xor
nop
push
pop
mov
dec
mov
sbb
inc
or
xchg
jmp
shll
mov
cli
mov
cmpsl
loope
inc
es
and
xor
mov
test
addr16
push
test
daa
pop
shlb
lahf
adc
gs
mov
fstpt
jmp
sbb
movsl
jns
inc
in
pop
shrl
fwait
mov
cwtl
adc
sbb
mov
jae
jmp
push
shld
pop
sbb
int3
jg
dec
popf
xor
std
movsl
dec
ljmp
scas
cli
insl
jbe
cmp
xchg
push
addr16
mov
dec
xchg
data16
cmp
das
das
xchg
int3
out
sbb
pusha
fs
movsb
jg
pop
dec
ja
aaa
decb
jo
out
mov
xor
add
or
movsb
or
jae
or
repnz
mov
xor
fbld
pop
inc
push
data16
dec
adc
mov
lds
mov
mov
xchg
xchg
imul
adc
xor
cmp
dec
push
mov
fcomps
int3
mov
jae
pop
and
and
scas
pop
xor
pop
and
fcmovne
pop
iret
cmp
adc
out
mov
sub
jl
in
ret
jge
mov
jmp
mov
outsl
mov
lahf
rolb
xor
mov
outsl
xor
pop
cltd
xor
pop
stc
pop
push
jo
push
shll
fcmovnu
loope
fwait
mov
mov
fildl
dec
out
in
fwait
and
hlt
lahf
scas
lahf
nop
aad
mov
push
add
ss
test
flds
sbb
cld
jle
ds
xchg
adc
mov
fmull
in
and
cltd
in
jb
fcompl
addr16
incl
and
or
pushf
es
cwtl
fwait
aas
sti
jne
dec
inc
jb
xchg
dec
outsb
and
test
adc
fs
jo
int3
adc
call
les
orl
jb
add
sbb
cltd
mov
rcl
lock
xor
jno
pop
cwtl
out
and
mov
pop
stos
push
out
arpl
aas
jno
cmp
jo
gs
outsb
in
arpl
in
push
xor
loope
ljmp
enter
xor
lcallw
add
pop
das
or
dec
or
adc
ljmp
jmp
fisttpll
mov
push
dec
xor
pop
fadds
push
or
jo
repz
adc
shll
jge
lahf
mov
push
pop
dec
add
lods
pushl
jns
add
jo
fidivrs
or
push
lods
jb
es
out
mov
in
push
jnp
mov
or
push
push
jmp
cli
int
aam
dec
fiaddl
lea
stc
out
pop
iret
jno
test
sub
lods
movsb
fwait
lahf
movsb
nop
xchg
fldenv
sbb
cld
sub
ljmp
sahf
pop
add
inc
add
or
shr
xchg
cmp
mov
cs
rclb
adc
jb
dec
imul
das
jo
sub
adc
in
mov
movl
mov
bound
xor
xchg
aas
sub
cmp
or
inc
sbbb
mov
pusha
and
addl
add
in
scas
ljmp
xor
stos
xchg
stos
dec
test
jb
dec
ss
add
aaa
dec
scas
cmpsb
push
enter
add
scas
pop
dec
pop
mov
xchg
mov
sub
stos
adc
mov
imul
xchg
dec
jbe
mov
repnz
or
inc
pushf
push
push
iret
sbb
push
mov
cmc
mov
mov
pop
loopne
hlt
adc
addr16
jge
negb
ret
scas
push
dec
push
rcrl
push
jno
lret
sbb
lods
adc
dec
int3
sbb
xor
jns
movsb
pop
cld
cmpsl
hlt
and
inc
movsl
pop
mov
mov
fidivs
inc
pop
fisubl
arpl
jle
sbb
adc
jo
sbb
cmp
jo,pn
mov
push
lcall
in
xchg
mov
dec
and
mov
add
cmp
popa
push
or
lods
pop
idivl
in
mov
add
nop
xchg
jo
mov
xchg
dec
cwtl
stos
pop
pop
mov
cmp
pop
mov
mov
pop
and
aaa
push
push
sub
jle
lea
lock
stc
in
iret
xchg
es
push
mov
or
lods
and
sahf
clc
mov
push
mov
inc
test
test
add
fidivrl
adc
dec
sbb
sbb
sub
dec
stos
pusha
int3
mov
jg
into
out
shrl
push
jo
clc
adc
inc
or
ja
or
popa
jo
sbb
add
mov
push
cmpsb
and
adc
sub
lock
sub
scas
push
fldt
push
add
pause
subb
fdivl
insb
lret
sbb
cmp
inc
mov
ja
std
testb
jl
fistpl
cs
scas
mov
stos
jecxz
push
inc
outsb
mov
mov
ror
xchg
inc
jnp
add
aas
aad
aad
pop
fisttps
sbb
mov
inc
sub
jo
pop
out
gs
xor
sub
or
xchg
dec
out
pop
pop
adc
push
cs
cltd
push
xor
add
sub
mov
dec
adcb
addr16
or
mov
nop
int
ds
out
movsb
lds
push
sbb
jo
notb
js
mov
testb
pop
mov
dec
pop
mov
jno
mov
shlb
sarl
pop
movsl
movsb
jo
cltd
addr16
aad
shrl
or
mov
mov
cld
fsubs
rorb
daa
int3
in
ret
or
aaa
sub
push
or
or
lret
pop
ja
adc
add
jo
aaa
mov
dec
mov
loop
pushf
rcr
jns
imul
aaa
mov
mov
pushf
call
aaa
mov
mulb
push
and
mov
sub
pushf
sub
jns
dec
push
dec
imul
pop
sbb
dec
xorl
in
fwait
sbb
and
lock
lcall
call
mov
inc
out
scas
add
pushf
dec
dec
movsb
int3
rdtsc
insl
pop
cmp
sub
jecxz
cli
jp
pusha
push
mov
cmp
aas
or
or
mov
fucom
adc
mov
mov
out
scas
sub
incl
mov
adc
in
aas
mov
imul
jae
sbb
and
or
bnd
dec
nop
sbb
cmp
fwait
jb
out
adc
pushf
mov
ja
xchg
out
mov
out
push
xchg
xorb
into
addr16
xor
stos
jns
mov
mov
sarl
jge
mov
cmp
and
icebp
cmp
dec
int
xor
inc
ret
lock
mov
mov
xchg
popa
mov
out
imulb
hlt
jb
test
or
sbb
push
mov
jge
pop
xor
cmp
xor
fisttpl
push
mov
sub
pop
cmp
int3
push
rclb
adc
add
fisubrl
xchg
mov
addr16
pop
aas
test
inc
outsb
aad
outsb
cmp
mov
jne
pop
repnz
int
push
sub
or
aaa
mov
sbb
cld
aas
cmp
dec
push
outsb
popf
dec
fildl
pop
repnz
pop
cmp
mov
xchg
cmpsb
adc
cld
idivb
andb
adc
pop
sbb
in
mov
push
aas
push
lock
cli
mov
inc
dec
insb
or
sbb
mov
out
aas
shll
push
sub
rcll
aaa
call
jb
imul
dec
es
fdivrs
in
pop
nop
stos
and
add
push
mov
int
outsb
lods
push
mov
in
decb
rclb
outsb
mov
cmpsb
aaa
addr16
fwait
mov
adc
and
pop
int
jmp
out
in
repnz
and
sbb
dec
and
mov
xorl
sub
loope
std
xchg
sub
ret
daa
loopne
cmp
dec
push
push
lahf
mov
arpl
push
sub
lret
aaa
pushf
mov
and
jo
mov
sbb
mov
lods
mov
out
sbb
sbb
pop
gs
imul
fisttps
xchg
jb
nop
inc
cwtl
mov
test
push
mov
hlt
outsb
repnz
stos
and
stos
in
inc
sub
out
sub
inc
or
pop
mov
mov
bound
fisttpll
mov
mov
push
jnp
loope
icebp
inc
cli
mov
mov
lret
cmpsl
and
pop
je
aam
jno
mov
cld
pop
dec
pushf
out
inc
jl
mov
loope
add
imul
mov
dec
sti
movsb
push
pop
mov
arpl
rolb
mov
xchg
jp
outsb
inc
push
out
pop
nop
loop
ss
adc
mov
sub
sub
mov
ljmp
sub
and
pop
out
aaa
in
pop
lods
fsts
jb
les
fnsave
stos
daa
xor
inc
cwtl
jb
int
mov
mov
mov
dec
outsb
aaa
cmc
arpl
out
xlat
stos
mov
loope
lods
jg
xchg
outsb
mov
push
out
cmp
sbb
sub
mov
push
cmc
out
imul
test
fwait
outsl
add
loope
mull
call
mov
aad
out
push
out
dec
lods
fistps
movsl
aam
idivl
xor
pop
mov
sub
out
orl
or
and
xor
lahf
push
in
insl
lds
sbb
fidivrs
out
push
sub
or
add
mov
out
mov
jns
sub
xchg
loop
test
push
mov
mov
repz
lock
ret
fmulp
pushf
add
in
cmp
in
or
sbb
loope
xor
test
mov
mov
cmpsb
push
jno
scas
add
outsl
mov
and
faddl
fs
rorb
cltd
and
mov
and
and
sub
jb
loope
mov
repz
sub
jb
repz
movsb
out
mov
sbb
add
push
lock
mov
dec
mov
xchg
pop
in
and
mov
cmp
sbb
ftst
aas
push
cmovno
pop
cmc
call
insl
add
bsr
fs
cmp
das
xchg
mov
pop
lock
or
mov
cwtl
arpl
jno
add
test
mov
xchg
add
sub
rclb
pusha
sub
cmp
xchg
sbb
outsb
xchg
push
or
adc
pop
pop
adc
cmp
xchg
das
fistpll
jbe
nop
stos
xlat
cmpsb
fbstp
aam
stos
imul
inc
jo
das
and
jns
mov
mov
fs
inc
sbb
mov
push
aam
int3
mov
stos
adc
sub
ret
mov
mov
lahf
jno
cli
dec
and
ret
sub
mov
lods
repnz
testl
mov
stos
fnstcw
hlt
and
sti
lock
repnz
mov
mov
lock
mov
push
and
popf
scas
push
adc
mov
fsubp
inc
imul
adc
xchg
mov
testb
jno
out
mov
mov
push
xlat
xor
outsl
sti
int
adc
stos
mov
push
loope
fsubrl
mov
mov
mov
lret
sti
pop
daa
clc
dec
mov
sbb
pusha
and
mov
out
sarl
xchg
scas
mov
mov
dec
cmpsb
data16
out
mov
xchg
lret
xchg
rcrl
or
call
mov
adc
dec
outsb
push
loopne
or
rep
pop
fists
jno
outsb
mov
mov
sub
pop
stos
addr16
push
out
pop
std
hlt
out
jb
lock
pop
and
xor
mov
fistpl
pop
ljmp
jae
jno
jmp
lret
lahf
or
cmp
sbb
mov
fstpt
mov
cmpsb
pop
push
pop
cmp
sub
iret
jl
movsl
scas
push
dec
adc
inc
scas
cs
add
inc
dec
cmp
and
cld
mov
ret
ret
sbb
add
xor
outsb
xor
dec
call
jp
cmpsb
mov
cmp
imul
sbb
seto
mov
in
mov
sub
dec
mov
dec
xor
dec
add
test
and
sub
arpl
mov
adc
push
xlat
mov
not
inc
add
in
inc
repnz
decl
jo
push
push
lock
sub
icebp
push
icebp
jle
stos
test
sub
fmull
sti
insl
jmp
sub
cmpsb
popa
sbb
add
icebp
movsl
and
gs
repnz
rcll
aas
push
ds
test
ja
adc
dec
sub
mov
rorl
mov
ds
cmpsb
popf
lea
push
sub
movsl
push
arpl
push
int3
lret
jl
push
or
add
sub
sub
sbb
dec
aam
rorb
inc
dec
adc
stos
dec
insl
ficoms
mov
cmp
push
popf
inc
insb
adc
cmpsl
hlt
in
fists
and
addr16
aam
xchg
pop
xchg
push
sahf
xlat
xchg
mov
int
xchg
movsl
subl
in
fidivrl
insl
mov
daa
outsl
repnz
ss
ret
lock
push
jno
dec
mov
pusha
mov
std
cmp
adc
mov
jmp
jb
dec
into
mov
sahf
pop
inc
mov
dec
and
jno
xchg
push
xchg
pop
fcomi
sbb
ljmp
and
fs
fstps
inc
stos
mov
mov
jae
data16
pushf
cmc
jg
lret
rcrl
icebp
mulb
and
fs
in
in
insl
mov
push
sbb
ret
push
and
int
shll
pop
inc
adcl
filds
rcr
jae
adc
push
cltd
and
adc
add
scas
notl
add
add
dec
mov
cmp
stos
int3
mov
jno
movsl
dec
jne
cmp
loope
out
loope
stc
ljmp
loope
adc
xlat
lret
adc
pushf
je
pop
aad
push
add
add
sub
repz
inc
test
outsb
add
lahf
leave
cmp
loope
or
dec
sub
test
lahf
repnz
bound
xor
mov
loop
add
add
sub
pop
in
inc
push
test
aam
push
inc
jg
and
add
inc
cmp
fs
sbb
rol
in
sub
sbbb
cmp
mov
jne
and
cmp
mov
roll
icebp
pusha
insb
jecxz
push
add
mov
mov
push
stos
enter
xor
loop
adc
cmpsl
lea
loop
xchg
ss
ss
fisubrl
test
sbb
inc
dec
popf
outsb
cmp
cmp
outsl
ss
pusha
inc
stos
jg
mov
cli
mov
and
test
push
mov
test
sub
popf
and
mov
fstl
xchg
push
mov
mov
js
shlb
aaa
shlb
jns
lock
dec
andb
and
ficoml
and
sub
imul
pop
push
ljmp
and
or
jl
arpl
dec
xchg
mov
dec
in
adc
cld
adc
out
sub
xor
lock
mov
data16
jecxz
inc
notl
pop
sahf
shrb
in
and
cmpsl
xchg
sub
in
xor
popf
inc
mov
dec
add
addr16
and
or
push
adc
lds
outsb
lock
popa
cmp
sti
scas
and
iret
andl
loopne
orl
pop
aas
push
xchg
sub
out
in
movb
sbb
clc
jns
pop
dec
inc
xchg
adc
and
cmp
lahf
bound
xchg
push
stos
sbb
es
jmp
mov
dec
sahf
jae
sbb
mov
mov
std
scas
and
in
jecxz
out
sub
dec
mov
dec
jmp
in
movsl
sbb
pushf
sahf
sahf
xor
jno
pop
sub
xor
mov
pusha
xlat
les
dec
xchg
sqrtps
xchg
sbb
sbb
sbb
rcrl
xchg
push
cmp
pop
out
rcr
mov
fwait
nop
jb
imull
nop
inc
ds
xor
repnz
pop
fs
cwtl
insl
sub
stos
xchg
and
jle
mov
xor
sub
lock
or
mov
xchg
mov
cmp
and
mov
in
test
jno
inc
sti
fldl
call
popf
iret
arpl
sbb
data16
daa
cmp
rol
fiaddl
movsb
mov
or
push
popa
and
add
ud2
mov
fwait
or
xor
movsl
stos
mov
mov
call
fs
pop
ja
fnstcw
xor
jns
movsl
imul
push
stos
popa
mov
dec
lods
cmpsb
sub
sbb
jg
mov
repz
js
ja
or
cmc
and
sbb
loope
jecxz
inc
imul
std
jb
cmp
lds
fbld
add
sti
popf
fildll
mov
fwait
push
imul
repz
sti
jg
mov
lahf
lock
jb
add
pop
icebp
sub
push
or
jbe
hlt
and
mov
cld
and
xlat
test
imul
ljmp
movsl
mov
rcr
push
andb
mov
xlat
js
ficoml
stos
and
cld
mov
jg
and
pop
dec
inc
jo
out
sub
xchg
scas
arpl
push
testl
pop
or
xchg
push
roll
sbb
popf
jb
push
push
sbb
test
xchg
movsb
mov
mov
xor
and
in
mov
add
mov
adc
inc
xchg
pop
gs
stos
xchg
lods
push
and
push
notl
xlat
movsl
push
lods
fsts
sar
xchg
mov
addl
int
push
movsl
xor
pop
jg
dec
addr16
sub
in
movsb
mov
loopne
pop
pop
leave
in
nop
in
and
pop
pop
mov
stos
pop
mov
push
clc
or
and
xchg
cmp
lcall
cmp
xor
lods
jne
mov
adc
icebp
or
testb
arpl
jnp
stc
mov
pop
push
xor
push
push
jae
ja
loopew
mov
clc
movsb
js
movsl
outsb
aaa
int
adc
inc
jo
mov
call
dec
inc
shrb
out
fs
cmpsl
mov
pop
bound
pop
cli
cwtl
sahf
imul
ret
sub
outsb
mov
scas
mov
pusha
lcall
push
sub
stos
stos
inc
imul
rorb
mov
and
std
pop
push
pop
adc
popa
mov
sbb
mov
jmp
gs
jmp
or
pushf
das
insl
jg
push
push
inc
adc
stos
shr
xor
push
mov
out
aad
hlt
mov
mov
mull
je
mov
and
fbld
mov
cmpsl
loop
clc
xchg
call
push
repnz
xchg
mov
dec
or
jo
scas
or
stos
add
mov
inc
loopne
cmp
in
mov
push
outsl
jecxz
mov
mov
aas
in
shrl
mov
jno
mov
leave
inc
gs
leave
inc
arpl
mov
leave
subl
mov
ficoms
cmpsb
dec
leave
dec
push
sbb
lcall
mov
pop
adc
cwtl
sbb
pop
push
andb
jb
popl
xchg
lock
dec
outsl
aaa
mov
adc
push
nop
ss
rcrl
fs
inc
push
push
or
inc
mov
testl
pop
jbe
outsb
iret
cmp
sub
push
ja
test
in
repnz
mov
repz
lods
or
mov
stc
jo
cmp
movsb
mov
pop
pop
ficompl
pop
adc
push
pop
xor
js
pushf
xchg
test
mov
pop
sub
in
outsb
mov
andl
imul
imul
push
test
out
sbbb
and
xchg
xchg
in
outsl
fimuls
leave
pop
adc
in
mov
lods
inc
mov
push
mov
out
jl
mov
mov
mov
inc
aam
and
xor
enter
stos
xor
pop
jge
fcmovu
test
fwait
stc
loopne
or
hlt
sub
and
sub
scas
mov
push
mov
call
cli
adc
jmp
test
xchg
push
jbe
xchg
push
mov
mov
mov
mov
sahf
jmp
push
push
lcall
mov
movsl
inc
sub
lret
push
fists
dec
push
lock
les
dec
xchg
and
xor
sbb
popa
and
sub
mov
test
loop
push
mov
mov
dec
cmp
or
adc
push
fisubs
mov
sbb
repnz
insb
mov
addr16
fwait
icebp
mov
fiadds
sub
or
mov
out
push
test
jnp
rcrl
cmp
leave
and
imul
xor
push
mov
call
push
pop
jno
push
in
call
bound
jge
dec
jl
mov
ret
in
sbb
mov
popf
mov
outsb
push
sbb
ret
aaa
and
mov
test
jb
adc
push
push
ljmp
sub
adcb
add
in
or
imul
push
out
xor
dec
mov
bound
lahf
adc
pop
mov
loope
push
fwait
mov
lret
jo
xlat
out
call
dec
jle
adc
sbb
int3
adc
mov
dec
insl
arpl
xchg
lea
add
mov
daa
stos
dec
mov
andl
lock
adc
lahf
cmp
add
ret
lods
lea
test
push
inc
and
lret
rclb
push
jo
pusha
mov
movsl
or
sbb
mov
fs
repnz
in
mov
loop
pop
push
out
in
push
mov
scas
or
lret
xchg
movsl
clc
cld
and
or
jo
jp
lock
inc
scas
push
out
imul
mov
mov
push
push
mov
mov
rcl
pop
push
xchg
repnz
add
ss
jno
cmp
xchg
and
jge
insb
jnp
mov
icebp
pop
mov
fldt
push
mov
imul
mov
iret
sub
cmp
mov
insb
data16
sbb
add
add
insl
cmp
in
in
sbb
push
sbb
stos
sub
insb
stos
mov
push
or
jbe
pop
outsl
add
jo
in
lods
or
jb
rclb
mov
cs
outsb
pop
sbb
ret
dec
xchg
insl
popa
mov
in
scas
int3
push
imul
adc
inc
or
outsb
in
scas
mov
popf
push
mov
jmp
sbb
nop
dec
pusha
pop
jecxz
outsb
pop
and
pushf
loopne
jge
adc
mov
in
test
jno
jae
jno
lock
jo
int3
mov
xchg
hlt
gs
out
in
stos
test
jo
jns
or
inc
push
arpl
inc
mov
ret
sahf
xchg
pusha
lods
cmp
add
push
rcll
movsl
insl
lock
movsb
mov
cmpsb
push
jo
xchg
adc
sbb
pop
gs
lcall
imul
jmp
clc
in
sub
jg
aad
or
and
push
mov
mov
stos
mov
sub
cmpsl
ror
xor
divb
in
add
jmp
add
pop
mov
in
lock
adc
or
ljmp
sbb
insl
xchg
shr
clc
pop
sub
out
xor
test
inc
imul
sub
aas
sub
mov
add
cmp
jmp
adc
bound
aas
push
outsb
jo
test
cld
jb
dec
icebp
divb
or
lods
adc
add
jb
jmp
cld
aas
js
jge
push
sbb
sbb
dec
mov
aad
shrb
pop
jmp
pop
push
pop
stos
mov
and
jge
add
sbb
stc
ljmp
ljmp
inc
aam
jno
sbb
xor
pop
iret
arpl
test
in
pop
mov
out
imul
pusha
cli
mov
adc
xor
jecxz
inc
sub
dec
pusha
ss
dec
jp
lahf
outsl
or
dec
push
mov
in
mov
mov
inc
and
xor
stos
mov
jg
mov
pop
jo
stos
lcall
std
imul
adc
in
in
cmp
jg
xor
fimuls
lods
repz
push
in
xor
aad
inc
enter
cwtl
and
push
jo
gs
mov
sub
test
gs
call
fists
imul
and
and
and
jno
mov
test
nop
aaa
mov
lahf
push
mov
popf
sbb
lock
incb
push
popf
push
jne
mov
in
pusha
pushf
pop
push
mov
mov
mov
loope
or
sub
push
sbb
data16
push
loopne
lahf
xor
int3
sbb
rclb
out
das
es
sbb
mov
mov
aam
mov
jne
xchg
cmpsb
test
or
mov
dec
jno
cmpsb
mov
adc
pop
push
rcr
ja
shrl
inc
pop
fadds
cmp
dec
jecxz,pn
pop
outsl
sbb
pop
lahf
das
add
cmp
xor
xor
dec
cmc
rcr
sub
pop
cmp
dec
adc
or
popf
sarb
or
mov
enter
outsl
int3
lods
pop
inc
sbb
insl
enter
mov
lock
fdiv
jns
pop
add
fidivl
or
add
movsl
xchg
icebp
xchg
mov
lahf
cld
enter
pop
adc
cli
xlat
dec
mov
sbb
mov
dec
or
jge
or
dec
stc
xchg
push
mov
es
or
ja
popa
cmp
notl
arpl
and
test
mov
jb
cmp
mov
das
mov
mov
xchg
outsb
fists
mov
dec
and
add
push
lock
scas
mov
mov
hlt
pop
sbb
xlat
stos
sub
mov
lods
lods
ljmp
mov
pushf
popl
mov
imulb
sub
cmp
mov
outsb
dec
pop
or
pusha
xchg
add
fwait
mov
les
in
lret
pop
sbb
loop
insl
dec
jle
add
fisubrl
jg
ljmp
inc
icebp
pop
or
sbb
xchg
dec
int3
scas
inc
cwtl
and
stc
jae
and
cmp
mov
mov
cwtl
int
dec
imul
dec
lret
imul
inc
mov
sbb
into
push
aad
xor
lahf
and
sub
aas
loop
insl
and
movsl
sarl
xor
push
adc
lret
sub
xchg
loop
call
jo
xor
icebp
fs
mov
addl
mov
in
mov
imul
imul
pop
bound
and
and
arpl
inc
subl
jb
push
out
imul
scas
adcl
sub
clc
sbb
dec
loop
pushf
ret
mov
adc
mov
add
int3
sub
adc
mov
sbb
ja
ss
lahf
push
inc
pop
xor
pop
sub
stos
outsb
je
gs
mov
jb
idiv
inc
sbb
adc
imul
adc
sub
sub
push
test
in
ja
pushf
loopne
jb
push
xchg
and
push
jl
xor
push
push
jb
adc
mov
aam
popf
movsl
mov
fisubl
jno
adc
ret
add
int3
adc
out
sbb
ja
push
jbe
repnz
pop
push
je
push
jno
dec
fs
fiadds
stos
xor
jno
xor
inc
out
jno
out
loope
testl
xchg
sbb
clc
push
jg
in
mov
lahf
sub
mov
xor
sub
sub
loope
orl
jnp
mov
faddp
gs
mov
mov
push
xchg
fwait
dec
sub
rcrb
mov
sbb
fisttps
push
xchg
xchg
xchg
mov
push
aaa
dec
mov
xchg
loop
push
push
mov
mov
push
in
sahf
cmpsl
rcl
subl
dec
daa
mov
xlat
and
leave
clc
insb
cmpsl
lds
gs
in
inc
out
bound
jb
loopne
xchg
repnz
dec
loop
sub
jbe
enter
pop
mov
jmp
dec
cs
mov
sub
jo
bound
jp
mov
or
pop
shll
adc
pop
js
and
xor
jne
cmp
xor
or
mov
lds
in
fs
int3
jbe
outsb
gs
in
fxch
mov
xor
popa
jmp
icebp
or
xor
negl
icebp
xor
out
xchg
mov
daa
jno
xor
cmp
imul
push
adc
sti
sub
lods
lret
cmp
cmp
mov
mov
enter
out
jns
cltd
xor
aaa
pop
int
jb
sbb
mov
sahf
mov
add
call
dec
jo
stos
lret
jmp
pop
dec
mov
mov
int
in
lret
neg
in
imul
push
js,pt
inc
int3
aam
push
dec
sub
pop
lods
std
sbb
jbe
iret
push
cmp
mov
cli
mov
hlt
push
cld
lds
leave
pop
push
fcomps
clc
mov
cs
movsl
jne
in
out
jmp
aam
push
fnstcw
xchg
pushf
jb
loopne
pop
fsub
outsl
mov
insl
mov
notl
sbb
or
mov
push
stos
push
sbb
sub
inc
adc
or
popa
lock
mov
or
push
js
sbb
out
bound
mov
das
mul
sahf
push
push
out
ret
xchg
mov
inc
sbb
sbb
and
inc
imul
pop
xchg
mov
mov
stos
jb
sub
sub
sbb
xchg
in
push
and
lea
ret
dec
pushf
out
repnz
mov
icebp
sub
push
das
jno
sub
mov
ret
cld
enter
sub
ds
mov
in
cmpl
imul
jb
daa
push
and
pusha
loope
push
cmp
sub
and
aad
push
push
mov
sar
inc
gs
jle
mov
fldt
mov
test
lea
scas
jge
dec
inc
ret
sti
jecxz
jle
push
jo
mov
dec
sub
push
imull
test
cmp
lds
ret
pop
dec
sbb
imul
xor
clc
push
and
jo
adc
and
sbb
dec
sub
pop
adc
dec
adc
cmp
push
adc
and
or
call
or
cmp
lahf
xor
adc
jne
jo
xor
out
pop
hlt
jo
add
sub
mov
mov
or
aaa
popa
in
cmp
mov
imul
mov
mov
imul
je
int3
mov
mov
mov
pushf
fsubp
outsb
adc
outsb
outsl
mov
popf
jmp
shrb
push
nop
das
and
iret
dec
jno
stos
cld
sbb
or
mov
sbb
rcl
xor
xchg
dec
mov
adc
sub
and
mov
pusha
inc
mov
add
fwait
ds
addr16
ror
repz
add
enter
and
cmp
loopne
push
mov
mov
movsb
and
mov
fsts
cwtl
dec
mov
or
fsubrl
and
arpl
int3
push
xlat
jecxz
jp
mov
mov
std
ret
ja
dec
xchg
mov
inc
int3
fldt
sub
aas
popa
fcoms
dec
mov
aad
adc
aas
cmp
fsubl
mov
inc
push
ja
pop
lcall
mov
pop
sti
data16
shr
icebp
aaa
cmp
mov
adc
adc
es
or
push
push
jne
test
mov
fcomps
cmp
jo
sbb
and
mov
fs
push
imul
ret
outsb
not
dec
stos
push
dec
out
pop
mov
jnp
stos
ljmp
aad
dec
int
jno
sbb
jb
or
nop
pop
xchg
cmp
xchg
popa
cmp
lea
lahf
std
outsl
mov
imul
aad
andl
mov
adc
mov
mov
push
mov
pop
mov
xchg
mov
sub
inc
sub
adc
or
popa
movsl
add
in
insl
adc
mov
mov
mov
dec
aaa
push
mov
movsl
imul
jo
das
pop
xchg
inc
push
lahf
push
mov
sub
mov
mov
inc
jo
cmp
push
and
dec
mov
iret
shlb
adc
mulb
sti
jecxz
in
and
xchg
repnz
stos
push
dec
test
scas
adc
and
pusha
gs
loope
mov
and
movsl
ja
mov
nop
lahf
out
mov
cmpsl
sbb
sahf
adc
aam
xchg
std
out
repnz
in
fimull
outsb
mov
aaa
or
mov
fldl
mov
movsl
cmp
dec
jns
loope
ja
push
xor
js
bound
sahf
test
mov
in
lds
mov
in
test
or
fisubrl
dec
mov
xor
out
adc
shlb
or
fiadds
sub
fs
sarl
push
cld
cmp
adc
inc
jo
sbb
loopne
push
pop
lea
sar
cwtl
stc
pop
jecxz
adc
adc
jns
mov
fidivs
lret
adcl
sti
pusha
xchg
adc
and
loope
adc
or
mov
insl
sub
imul
gs
popf
adc
mov
and
adc
clc
inc
sahf
and
gs
pop
fs
cmpsb
dec
popf
dec
les
jb
stos
mov
adc
in
cwtl
inc
repnz
iret
cmp
lcall
loope
imul
adc
sbb
call
or
push
pop
ljmp
fwait
lods
jb
stos
rcr
fs
push
imul
pop
jno
scas
jge
add
repnz
jns
push
sti
jb
cwtl
pop
inc
push
lock
pushf
and
popa
mov
loop
xchg
mov
dec
shrb
call
inc
sbb
negl
aad
dec
sub
aaa
out
repz
push
sarl
pop
and
inc
popa
xchg
dec
popa
jo
mov
out
iret
clc
xor
inc
jmp
das
push
sub
cmpsb
nop
orb
rorl
xor
mov
or
and
out
rcl
jg
mov
dec
in
mov
int3
movsl
insl
xorb
movsl
aad
inc
push
movsb
jbe
js
lcall
test
jno
int3
push
shl
xchg
ror
push
outsb
dec
adc
cmpsb
xchg
aaa
sbb
add
lahf
fsubr
jo
sbb
pop
ret
pushf
outsb
dec
jno
mov
sub
cmp
adc
cmpsb
jecxz
and
add
xor
sub
stos
pop
sbb
dec
mov
cmp
jl
stos
out
je
mov
sbb
and
or
dec
jecxz
xchg
mov
jb
aas
xchg
ficoml
scas
sahf
pop
dec
mov
sahf
div
cld
lcall
ljmpw
mov
or
cmpsl
push
sub
dec
add
cmp
inc
addr16
fdivl
sbb
pop
out
pop
dec
xchg
add
cmp
or
xchg
sbb
push
sbb
or
mov
adc
adc
mov
xchg
ljmp
mov
mov
sti
lods
or
jb
int3
jl
jb
pusha
es
scas
mov
and
xor
xchg
pop
rolb
in
imul
inc
mov
push
xchg
push
and
dec
cmp
jne
rcrb
and
lods
repnz
mov
popf
in
leave
xor
stos
inc
mov
mov
or
mov
in
rolb
inc
xor
or
mov
std
sbb
pop
inc
xchg
ret
out
lahf
outsb
movsb
add
jae
es
fcomps
ss
bnd
pop
sub
xor
daa
or
inc
sub
or
repnz
mov
dec
gs
inc
and
gs
insl
imul
push
push
in
sysexit
out
lods
loopne
push
wrmsr
mov
push
icebp
in
stos
xor
shr
aad
push
outsl
out
es
sbb
dec
insl
sub
jb
gs
adc
inc
push
mov
loope
fidivs
jmp
fwait
div
xor
lock
fldt
or
inc
pop
lcall
sub
pop
mov
stc
add
cltd
mov
sti
mov
loopne
fsts
fistpll
sbb
xchg
outsl
lahf
jge
mov
fmulp
sbb
gs
jno
sub
fs
sbb
sub
sub
sub
cli
mov
leave
jb
or
jbe,pt
insl
mov
mov
ds
aad
aad
shl
popf
outsl
xchg
xlat
pop
mov
sbb
push
in
dec
mov
xorl
out
imul
fwait
jbe
pop
gs
aas
out
fwait
push
cmp
jns
cld
int3
movsb
mov
mov
add
in
fidivrs
lods
scas
push
arpl
add
and
stos
scas
daa
and
pop
out
sub
fbld
ljmp
xchg
pop
jno
sub
xor
mov
sti
xchg
sbb
sbb
push
jge
sbb
push
out
mov
ds
popf
outsl
out
jb
sbb
and
outsb
xchg
dec
shl
jo
jb
mov
push
jns
repnz
pusha
jae
mov
sbb
adc
jo
fs
mov
imul
sub
mov
add
mov
in
test
pushf
sahf
inc
dec
rcl
cmp
push
lcall
push
push
xor
sbb
push
inc
lea
inc
push
mov
icebp
xor
dec
push
popf
shrb
add
sub
lret
jg
inc
in
mov
or
aas
mov
adc
cld
mov
ja
cltd
lahf
mov
scas
adc
and
push
sbb
add
mov
sarb
sahf
rcr
in
cmp
sbb
pop
cld
stc
mov
sbb
loopne
cmpsl
jb
push
mov
arpl
out
mov
jbe
mov
push
lret
pop
ja
mov
movsl
jno
lods
pop
mov
pop
cs
and
cwtl
sbbl
nop
adc
add
xchg
push
mov
loope
icebp
movsl
jl
lods
cmp
xchg
stos
mov
xor
push
and
mov
cltd
ds
xorb
inc
push
push
pushf
sbb
xchg
mov
js
bound
leave
jl
xchg
sbb
lock
sbb
dec
clc
bound
inc
and
xlat
andb
xor
inc
in
sub
gs
incb
sti
int3
cld
xor
lcall
mov
inc
loopne
adcl
mov
xor
lret
aaa
xchg
push
pop
xchg
push
jno
ja
push
aas
movsb
add
mov
sbb
cmpsl
out
jns
mov
xlat
lods
pop
imul
xchg
push
cld
in
pushf
std
cmp
sbb
cmpsb
dec
inc
cld
xorb
jg
loope
cmp
jb
cwtl
push
lds
cwtl
pop
fidivl
adc
mov
test
fisubrs
jns
sbb
mov
jno,pn
arpl
lahf
push
cld
es
lahf
and
mov
dec
mov
into
sbb
mov
int3
push
je
loop
fucomip
jecxz
mov
dec
decb
movsl
adc
sub
add
xor
andl
mov
daa
xchg
jg
fwait
outsl
in
or
cli
lret
das
fisubrs
inc
adc
enter
and
out
or
push
jbe
mov
add
rorb
push
lods
push
adc
lahf
pop
inc
shrl
aas
int
mov
aas
xchg
and
inc
jmp
fistl
dec
xor
push
sbb
data16
sub
addr16
or
popa
lods
shl
jecxz
lahf
sbb
fcoml
xor
hlt
mov
pop
out
adc
insl
in
daa
sbb
push
sbb
lods
icebp
out
xchg
lods
in
adc
in
sbb
mov
repnz
neg
inc
pop
mov
inc
and
das
sub
xchg
int3
jae
nop
cmpsb
sbb
lock
das
cmp
pop
sti
shl
cmc
and
call
mov
cmp
sbb
sub
pop
imul
ficompl
dec
int3
sub
or
fs
cmp
shlb
xchg
fidivl
mov
mov
movsb
push
or
movsb
mov
cltd
hlt
fnsave
push
js
out
stc
repnz
adc
xchg
dec
dec
xor
dec
push
scas
es
icebp
lret
and
mov
sbb
or
inc
xor
loopne
movsl
xor
jle
std
add
jbe
dec
dec
push
outsl
and
sub
lcall
or
mov
adc
push
faddp
sbb
movl
dec
jo
jg
inc
repz
mov
xor
gs
mov
push
jno
adc
sub
sarl
inc
lods
movsb
sbb
dec
xchg
mov
lods
sbb
dec
insl
dec
ja
fistps
push
ds
or
enter
pop
sub
pushf
cmp
pop
stos
jo
sbb
sub
jb
pop
mov
pop
ljmp
sbb
add
ja
sbb
mov
inc
push
popa
cwtl
cwtl
into
xchg
xor
je
mov
fdiv
and
mov
out
mov
pushf
stos
cmpl
mov
cmp
adc
popf
aaa
jne
shrb
cmpsb
push
int
sbb
inc
data16
xor
sbb
jbe
sbb
lahf
icebp
adc
mov
dec
jmp
mov
mov
and
mov
push
mov
inc
xor
xchg
inc
add
movsl
push
xchg
sub
mov
sbb
or
xchg
dec
pushl
xor
es
xor
sbb
out
jnp
pop
adc
sbb
adc
pop
push
insl
xor
pusha
andb
out
lods
add
jp
pop
lcall
jno
fs
pop
lahf
outsb
vdivss
sub
stos
pop
jle
insl
dec
inc
fcompl
les
std
add
clc
out
shll
repnz
inc
and
cmp
jno
add
out
push
xchg
fwait
arpl
xchg
jns
insl
insl
gs
das
jne
mov
add
fdivp
mov
adc
jle
rclb
mov
testl
dec
test
out
pushf
fidivrs
or
push
icebp
push
dec
sub
imul
add
mov
mov
and
lock
mov
sbb
test
lcall
subb
dec
mov
push
cmp
cmp
call
mov
stos
or
or
add
ss
xchg
repnz
mov
sub
cmp
mov
int3
and
movsl
jbe
in
fs
sbb
add
scas
jp
es
sub
add
adc
xchg
shll
cli
outsl
push
nop
in
ljmp
dec
cmp
mov
ficomps
cmp
mov
adc
xor
loopne
and
xchg
xchg
ret
sub
pop
es
leave
sbb
and
dec
mov
cmp
ret
xor
call
popf
loope
fwait
cli
fisubs
out
arpl
pop
cli
mov
add
js
xor
test
inc
mov
add
jo
mov
imul
rcll
pop
rep
mov
mov
nop
mov
popf
cmpsb
lahf
ret
fisubrs
push
iret
dec
inc
pop
push
dec
shlb
gs
frstpm(287
stos
pushf
in
xlat
cmp
sbb
mov
popf
imul
orl
fldl
cmp
xlat
adc
in
push
cmpsb
andb
andl
repnz
leave
cld
sub
cs
lock
push
es
pop
jge
adc
jmp
js
nop
cmp
sub
jge
jno
in
xchg
mov
jbe
and
jae
push
lods
cmp
cmpsb
sbb
jno
and
in
loop
lret
outsb
pop
movsb
into
loopne
mov
and
mov
fstps
aam
sbb
clc
gs
ds
xor
and
addb
mov
popa
sub
sub
rcrl
pop
xlat
mov
and
pop
jno
push
loop
and
bound
adc
ret
insl
xor
inc
gs
lret
and
mov
pop
or
filds
mov
inc
js
inc
pushf
aam
dec
xchg
mov
lods
push
dec
loopne
cmc
lods
scas
outsb
out
adc
rcrl
pop
adc
stos
out
add
fwait
das
pushf
inc
push
push
xchg
in
inc
arpl
rcrb
inc
rcr
es
leave
mov
lock
jae
or
dec
sbb
sahf
push
imul
popa
push
xchg
mov
aas
mov
xlat
mov
pop
imul
sbb
inc
sbb
xchg
lds
lea
xor
inc
shl
loopne
fldenv
iret
pop
or
cmp
pop
push
fiadds
aam
movsl
in
repz
xchg
add
leave
daa
lock
sarl
sbb
je
xchg
mov
push
aad
adc
pop
orb
stos
sbb
ss
jge
jo
ds
jnp
mov
mov
mov
or
pop
or
cmp
adc
dec
dec
adc
dec
lahf
insl
inc
cmp
in
mov
dec
adc
mov
mov
loope
jp
xchg
pop
cs
lods
and
mov
movsl
sub
outsl
popf
add
push
mov
push
and
data16
xchg
cmp
outsl
fwait
cmp
mov
xchg
popf
imul
loope
out
push
ficompl
scas
adc
mov
fcomps
notl
and
push
push
lods
push
pop
mov
pop
pop
push
pop
xor
icebp
dec
fldl
jno
sub
daa
int3
add
ss
lahf
mov
inc
adc
ss
add
test
push
sbb
clc
inc
aaa
andl
js
mov
mov
sbbl
outsl
and
cmp
adcb
push
out
push
mov
adc
and
ret
push
cmp
xchg
or
and
divl
push
das
mov
pop
push
cmp
inc
js
add
or
cmp
jp
dec
jp
lahf
nop
imul
dec
sti
sub
or
jb
mov
bound
fcoml
popf
mov
xrelease
mov
scas
xlat
aad
xchg
xor
call
xchg
push
adc
jns
pop
adc
or
fdiv
fs
mull
sbb
or
test
jo
jae
mov
ljmp
or
call
negl
xlat
lea
sbb
sub
pushf
adc
pop
aaa
sub
leave
jae
sbb
and
sbb
aaa
mov
xchg
adc
push
out
sub
std
mov
imul
test
xchg
sbb
add
xor
ja
sti
pop
sarb
loop
jmp
addb
xchg
cld
cmp
mov
inc
fndisi(8087
xor
ret
ret
daa
fidivl
mov
test
pop
out
ja
cs
mov
dec
popf
jns
and
leave
jle
sbb
jle
mov
int
mov
pop
add
cmp
loop
adc
mov
cmpsb
push
jp
mul
int3
aas
sbb
cmpsb
ja
dec
gs
cltd
and
nop
call
ret
mov
movsb
push
mov
popf
outsb
cwtl
mov
loope
push
mov
femms
and
leave
aas
pop
sbb
push
mov
nop
mov
jp
lods
fsubrl
jl
fbld
fbld
mov
xchg
loope
vmptrst
mov
cmp
roll
mov
jle
sub
cmpsb
lods
sub
xchg
sub
push
pop
aaa
cld
mov
ss
pop
bound
xchg
popa
inc
jmp
xor
fbstp
xchg
cmp
ljmp
mov
ja
in
mov
mov
bound
xor
and
scas
push
sbb
dec
aam
jae
jo
cmpsb
cmpsl
add
push
jne
mov
ret
cld
out
lcall
jae
push
enter
js
mov
pop
inc
lcall
mov
pop
inc
adc
cld
outsl
inc
int3
cmp
rorl
outsb
orb
add
int3
cld
xor
in
or
add
push
xor
notl
mov
cmp
fsubrl
jl
pop
jmp
push
mov
pushf
aas
cli
sarl
aad
div
add
rorb
lods
hlt
imul
mov
sbb
jb
clc
dec
pop
xchg
ljmp
sub
popf
push
call
bound
icebp
inc
mov
sbb
mov
jle
dec
mov
mov
pushf
or
cli
ret
mov
fwait
dec
hlt
dec
inc
addb
cs
sbb
movsl
pusha
mov
and
sub
inc
shl
movb
in
cmpsb
lock
jno
mov
inc
push
pop
mov
cmp
adc
push
addr16
in
xchg
sub
pop
push
pop
lods
aaa
push
sbb
xchg
mov
bound
imul
jne
cmp
fstps
and
jmp
in
pop
fwait
in
or
cli
popf
sbb
mov
shl
cmp
cmp
test
and
push
movsl
bnd
aas
movsb
push
pusha
loopne
cli
push
xlat
in
and
gs
test
cli
shll
loope
daa
icebp
outsb
stos
adc
or
jb
out
paddq
add
mov
pushf
sub
pop
aam
cmpb
icebp
sbbl
bound
jmp
addr16
shrb
or
lret
popa
fprem1
cmp
dec
bound
ficomps
loope
movsl
mov
jae
sub
pop
and
in
repz
pop
jnp
mov
dec
in
jecxz
sbb
cmp
pop
mov
adc
out
pop
lods
in
shll
cli
mov
jp
xor
pop
out
loope
dec
adc
dec
out
xor
stos
mov
call
sub
repnz
shll
shll
jne
sarb
clc
adc
ss
loop
mov
and
movsl
jb
lock
pop
pusha
in
int3
out
pop
pop
mov
stos
sbb
addl
gs
imul
pop
cwtl
cmpsl
loopne
add
push
push
ret
pop
nop
scas
vprotq
bound
or
lahf
push
das
jns
mov
pop
sbb
ss
xchg
in
mov
hlt
clc
dec
mov
sub
sub
mov
in
into
push
and
loopne
fisttps
ds
in
lret
daa
cld
je
sub
sub
jecxz
push
inc
sbb
mov
call
jl
adc
loop
scas
sub
fwait
cmp
cmp
outsl
mov
push
pop
sbb
or
insl
test
add
sti
jge
lds
lock
sbb
or
aad
or
lock
mov
mov
ljmp
adc
jmp
mov
sub
pminub
xchg
ja
dec
outsb
pop
mov
push
cmpsb
push
pop
xchg
pop
dec
mov
popa
xchg
insl
mov
test
mov
pop
repz
je
adc
ljmp
sbb
dec
sub
sbb
adc
jo
or
sub
cmp
push
mov
push
icebp
lock
repnz
jge
add
mov
pop
and
and
insl
push
adc
inc
test
int3
in
imul
pop
fs
sbb
mov
repnz
jl
ljmp
gs
insl
mov
inc
mov
inc
jle
jno
iret
mov
gs
subl
mov
sbb
jb
mov
inc
cmp
pop
fiaddl
pop
xor
test
mov
push
jl
jns
call
mov
jns
pop
cmp
push
lret
out
or
sbb
pop
pop
lods
shll
not
mov
pop
icebp
push
lahf
sahf
mov
mov
pop
lods
cmp
or
push
out
sub
aam
outsl
mov
cwtl
xchg
pop
xchg
hlt
fldenv
imul
inc
cld
sbb
jecxz
js
in
adc
orl
cmp
icebp
outsb
test
sub
push
ja
dec
ret
xor
mov
insl
pop
sbb
in
cwtl
mov
imul
lock
shlb
sbb
insb
mov
or
ja
mov
cmpsb
cmp
pop
jb
ds
cmp
sbb
adc
and
cwtl
inc
shlb
stos
jae
jmp
cmpsl
mov
cli
ja
inc
wbinvd
add
outsb
mov
fwait
ja
sahf
jmp
fstpt
add
adc
and
dec
pop
pop
jg
lret
sub
jns
adc
rolb
dec
arpl
sub
dec
or
jo
in
push
rolb
xlat
xlat
and
adc
int3
adc
rep
cmp
test
adc
imul
inc
sbb
es
cs
dec
insb
imul
push
pop
add
lods
cmp
fbstp
jb
adc
mov
mov
mov
aam
in
fsubrl
shl
add
es
adc
aaa
lock
push
iret
jns
pop
ret
push
pop
jo
dec
push
jne
xchg
sbb
movsb
or
dec
repnz
adc
mov
xor
dec
sub
mov
pop
or
sahf
jg
lcall
jno
test
sbb
add
insl
jne
add
ja
cs
imul
js
dec
test
jb
pop
aam
ja
or
aaa
push
pop
in
ds
or
push
mov
jl
mov
xorl
mov
or
sahf
in
pop
mov
mov
lcall
cmp
stos
or
movsl
or
data16
cld
mov
fcmovu
lcall
dec
in
or
inc
outsb
lods
stos
mov
jo
xor
idivl
loope
sahf
in
int3
push
leave
mov
mov
sbb
or
ret
jle
or
jo
jp
push
data16
pusha
sbb
into
dec
mov
aam
xchg
fisttpl
cmp
lods
mov
sbb
inc
andl
lret
mov
xlat
xchg
out
push
mov
push
cmc
cld
outsl
dec
pop
in
lock
imul
lcall
inc
sbb
jl
mov
ret
fildll
les
or
mov
jno
dec
jbe
xchg
or
movsl
adc
sub
dec
push
inc
mov
push
ret
sub
or
dec
fwait
mov
loope
mov
ds
imulb
repz
stos
cli
sub
mov
pop
cmpsl
or
das
in
clc
cmp
outsl
gs
out
mov
call
scas
mov
xor
dec
testb
outsb
rorl
mov
or
xchg
hlt
and
mov
inc
mov
mov
and
ret
add
dec
xor
inc
imul
add
mov
insb
pop
xchg
sub
decb
movsb
gs
sub
push
sub
jecxz
fists
in
mov
sbb
mov
adc
jbe
addr16
dec
bnd
jbe
push
cmpsl
nop
jp
enter
scas
and
lods
adc
lods
dec
js
xchg
inc
int3
pop
dec
xchg
adc
adc
mov
or
shlb
push
lods
push
lds
insl
cmp
lock
push
sbb
pop
fs
dec
std
adc
push
push
push
push
jno
xor
add
xor
adc
out
adc
push
cmp
es
push
push
sub
fyl2x
and
lods
mov
add
xchg
fs
rcll
jmp
mov
adc
or
fidivl
popf
xchg
jmp
and
test
stos
iret
sahf
jbe
stos
sub
push
mov
movsl
decl
dec
xchg
in
xchg
jmp
jb
insl
aad
shlb
pop
lcall
pusha
dec
arpl
or
movsb
int3
xlat
jo
jno
add
dec
pop
leave
aad
jo
in
mov
shll
fcomps
insl
pop
or
in
dec
fcmove
mov
imul
negl
jae
imul
push
sbb
dec
jb
sub
xor
add
xlat
adc
repz
sbb
bound
mov
sbb
cld
fistps
pop
mov
mov
loopne
or
sbb
jl
sub
pushf
mov
mov
lret
arpl
pop
push
adc
loop
rcll
adc
pushf
and
and
jno
adc
mov
jno
push
les
mov
inc
jo
cli
shl
add
inc
dec
jmp
mov
mov
pusha
loopne
lock
negl
and
loopne
les
xor
cmp
movsb
imulb
daa
lods
test
mov
jns
cmp
ficomps
stc
xchg
mov
popf
or
fimull
and
clc
add
outsb
movsl
outsl
movsb
mov
and
ja
inc
lock
jo
mov
outsl
insl
adc
pop
cmp
mov
ss
test
push
dec
xor
mov
lcall
push
xor
sub
test
icebp
or
inc
mov
xor
jmp
aas
or
sub
es
call
or
pop
popa
cmp
shr
ljmp
lea
xor
outsb
xor
mov
sub
stos
data16
xor
aam
pop
pop
mov
pusha
arpl
out
adc
ret
out
or
ja
popf
imul
jge
popfw
and
movsl
mov
dec
xor
sarl
mov
cmpsl
incl
lcall
pusha
push
lret
dec
in
push
adc
push
adc
ficoms
xchg
jo
mov
add
outsw
or
mov
lret
outsb
les
es
push
inc
test
dec
cwtl
daa
push
outsb
int3
mov
sbbl
lcall
lods
ja
xor
scas
fsub
call
and
xchg
dec
mov
cmp
add
mov
rcll
subb
xor
in
ja
loop
roll
inc
mov
movsl
cmp
lahf
cmp
pop
mov
sub
frstor
cld
imulb
insl
sahf
inc
sbb
xor
dec
sbb
mov
rcll
inc
pop
out
movsb
dec
rcll
fistpll
push
outsl
popa
lods
mov
mov
lods
and
es
xchg
int3
xchg
jo
stos
fs
stos
sub
outsl
insl
or
or
push
or
push
gs
sbb
pop
xor
iret
arpl
add
lock
insl
sub
xchg
inc
popa
pusha
mov
xor
shrb
sbb
or
dec
and
mov
test
adc
mov
int3
jo
bound
es
or
sub
or
imul
int3
add
fs
aas
leave
fwait
or
lret
cmp
and
push
addr16
pop
outsl
and
nop
imul
enter
in
mov
dec
jno
lods
mov
mov
jo
sub
fsubrl
jb
std
mov
sub
cmpsl
jo
imul
mov
pushf
mov
sub
popf
push
sub
lods
sbbb
adc
xor
xor
mov
xor
lock
pop
pop
mov
or
cmp
rcll
sbb
cld
pop
mov
cwtl
loop
les
test
inc
pushf
jp
fisubs
clc
cmp
cmp
push
pushf
cmp
repnz
xor
sbb
push
mov
cltd
add
cmp
in
aad
iret
or
push
cmp
aam
adc
lods
rorl
shrb
cld
mov
push
movsb
out
loopne
sbb
mov
scas
sbb
adc
and
mov
inc
insb
enter
dec
into
ljmp
inc
and
sbb
xor
add
es
stc
loope
adc
fsubs
icebp
mull
pusha
test
dec
mov
icebp
fidivrl
jmp
in
test
xor
and
loope
xchg
xchg
mov
cmp
push
js
or
pusha
repz
or
repnz
pop
sub
je
or
stos
sub
dec
lahf
fcomps
jb
stos
mov
lods
push
popa
push
add
xchg
mov
fwait
mov
fcomps
mov
push
out
cmp
das
push
ror
lcall
aad
test
loopne
pop
and
outsl
add
jne
in
lcall
and
mov
xor
imul
bound
cld
sub
into
mov
push
xorl
cs
pop
jecxz
cmp
jg
and
sbb
push
mov
mov
divb
xor
stos
mov
add
cmp
mov
inc
testb
mov
mov
cmp
xor
stos
icebp
xchg
sub
stc
or
mov
fcmove
movsb
xor
imul
ret
inc
andl
mov
loopne
mov
addr16
mov
or
xor
pusha
ja
jge
pop
daa
mov
cmpb
add
lds
sub
testl
pop
xchg
shl
leave
hlt
jg
inc
or
inc
mov
xchg
mov
imul
sbb
xchg
dec
jnp
outsl
cmpsb
jb
mov
mov
rcll
jb
jns
xchg
mov
call
inc
pusha
stos
in
cmp
sub
flds
ds
jo
mov
das
out
stos
inc
lods
sub
sti
push
dec
mov
push
and
adc
dec
loopne
inc
loop
out
rclb
cmpsb
in
xchg
xchg
cs
lahf
mov
mov
sbb
dec
arpl
ret
cli
sbb
sbb
out
mov
leave
sahf
fs
mov
outsb
scas
rcr
or
or
lock
loope
test
bound
inc
xchg
adc
cmp
dec
jo
push
fwait
repnz
mov
sbb
int3
pusha
bound
and
ja
inc
rcrl
dec
fsubrs
in
push
dec
daa
sbb
std
aas
stc
dec
cwtl
lahf
lods
cs
in
sub
sbb
lea
gs
sbb
jl
xor
adc
jle
loop
lret
shlb
dec
mov
test
cmp
cmpsl
test
jmp
ret
add
icebp
xor
add
mov
mov
into
popl
adc
loope
jo
aaa
push
xlat
icebp
ljmp
sub
jo
jle
cmp
push
scas
stc
push
insb
lods
cmpsl
mov
aaa
push
pop
pop
pushf
movsb
sbb
and
mov
leave
stos
mov
mov
in
pop
xor
pushf
scas
fsubl
xor
ja
dec
es
or
lcall
adc
in
les
sbb
setge
outsb
scas
shrb
call
in
jbe
daa
and
hlt
or
shlb
inc
inc
mov
push
or
icebp
pusha
inc
sub
out
sbb
sbb
jl
and
mov
mov
mov
ljmp
xor
subb
cltd
inc
imul
sub
outsl
test
and
les
sbb
cmc
rcll
dec
xchg
test
movsl
sub
add
pop
call
mov
ds
data16
icebp
lret
cmp
lret
mov
jnp
or
fwait
mov
mov
in
pop
scas
dec
jns
xchg
popf
les
insl
jb
nop
adc
xchg
ljmp
sub
call
adc
int
mov
jp
out
jbe
mov
sub
adc
mov
or
mov
loop
adc
sub
sub
scas
pop
jns
fdivrp
loop
lock
push
outsl
cld
jge
js
loop
mov
xchg
cld
hlt
push
in
stc
lods
lods
jmp
jne
adc
and
dec
or
fiaddl
andb
mov
inc
jg
xor
shrb
xchg
jno
and
bound
nop
out
in
mov
mov
fists
ret
fiadds
sarl
scas
cmp
arpl
mov
scas
mov
fdivrl
and
add
call
push
popa
enter
jns
insb
adc
jb
inc
pop
outsb
mov
lahf
or
mov
mov
repz
dec
push
lods
dec
bound
rorb
mov
xchg
fs
sbb
dec
lea
add
adc
sub
mov
xor
and
sub
and
jmp
repnz
out
mov
pusha
loope
mov
pop
aaa
mov
push
inc
loope
inc
iret
out
imul
adc
rcrl
outsb
inc
mov
clc
sbb
icebp
sti
dec
adc
outsb
loope
xor
mov
or
sbb
jo
test
add
and
cmp
repnz
xorb
les
cmpsl
fs
data16
pop
and
pop
mov
or
pop
sbb
cmpsl
add
adc
jne
lock
push
in
sbb
mov
in
inc
in
cli
in
add
or
lods
xchg
and
int
imul
insl
cld
lods
and
xor
out
outsl
sub
sarb
addb
jle
lcall
out
outsb
xchg
icebp
shrb
imul
dec
in
pushf
mov
push
jl
fs
fimull
gs
jb
into
mov
cs
sbb
outsb
inc
ds
adc
out
jo
in
mov
cld
jbe
sub
push
jg
sub
aas
loop
in
xor
out
lea
int3
ret
sub
sub
lret
je
jecxz
xchg
and
cmp
mov
jge
cmp
mov
imul
mov
sbb
in
bound
push
xchg
int3
and
jno
jo
and
sbb
repnz
adc
xor
stos
dec
mov
sub
jmp
gs
lock
mov
push
mov
fimuls
pop
aaa
xlat
mov
sub
inc
and
ret
dec
sub
icebp
in
adc
loope
mov
mov
xor
call
mov
lea
pop
mov
mov
aaa
inc
push
cmpsb
fdivrs
pop
add
sbb
outsb
stc
out
stos
dec
xor
mov
push
and
jno
loope
shl
loop
in
xchg
cwtl
xchg
and
and
and
lcall
mov
pop
xchg
xlat
push
push
sbb
xchg
cmpsb
pop
fldcw
es
in
ljmp
idiv
mov
pop
push
dec
lea
dec
inc
or
jmp
outsb
jo
movsl
xchg
xchg
movsb
inc
sub
dec
movsb
or
jbe
test
sub
push
push
lcall
dec
push
outsb
mov
sbb
mov
std
lds
lods
mov
dec
pop
xor
outsl
adc
jl
mov
icebp
mov
in
sahf
mov
pop
pop
mov
fs
outsl
dec
arpl
mov
shlb
movsb
test
push
sbb
sbb
loope
test
xchg
loopne
mov
mov
stc
testb
push
sbb
jnp
xchg
jge
add
shll
mov
ljmp
push
cld
cmp
and
mov
mov
dec
pop
add
lret
mov
push
mov
pushf
and
fmulp
mov
xchg
dec
aaa
mov
cmpsl
adc
lods
mov
icebp
jno
mov
stos
cmp
adc
jl
out
cld
sbb
mov
push
les
and
test
mov
pop
sbb
inc
int3
sub
cmpsl
cmp
and
cmpsl
lret
das
les
es
cmc
sub
cltd
and
inc
cmp
out
imul
mov
out
loopne
and
js
mov
mov
loopne
sub
push
icebp
scas
outsb
pop
mov
fwait
pop
mov
scas
xchg
adc
add
cmp
sub
imul
in
mov
mov
mov
cmp
sbb
dec
and
jmp
cmp
mov
inc
jp
or
ja
cmp
into
or
in
push
ljmp
or
mov
jmp
mov
out
mov
and
add
lahf
and
mov
stos
push
and
mov
shlb
mov
mov
in
sbb
shll
mov
lret
or
lea
or
call
xor
outsl
pop
add
mov
push
out
mov
inc
sub
gs
rcll
xchg
insl
pop
dec
dec
les
pushf
lahf
mov
cmp
fldt
adc
shlb
in
call
pop
rcrb
cwtl
push
inc
roll
movsl
pusha
mov
out
mov
jecxz
neg
sbb
push
dec
jb
loop
repnz
cmp
dec
jecxz
mov
lock
shll
push
rcll
xchg
loop
cmpsb
addr16
loope
nop
xor
popf
xor
adc
sub
mov
insl
sub
cmp
mov
out
lret
or
insb
lods
rcrl
gs
mov
pop
jno
in
icebp
mov
stc
lods
jl
cmp
sbb
bound
or
scas
imul
jo
in
mov
sub
gs
jmp
in
lods
lret
out
and
xlat
cmp
call
test
sbb
cwtl
or
cmpsl
add
cmp
dec
gs
push
gs
push
mov
jp
sarb
add
mov
lret
loope
sub
and
pop
ret
cmp
mov
dec
in
mov
or
mov
imul
mov
pop
mov
out
add
addb
mov
mov
data16
js
fisubrs
or
sub
mov
mov
add
mov
mov
pushf
mov
pop
cmp
and
mov
cmp
add
sbb
lret
adc
mov
std
sbb
xor
lock
hlt
jno
out
stos
inc
dec
shl
fs
xor
sbb
xchg
out
add
lods
xchg
out
in
fwait
cld
ret
dec
ret
test
ja
mul
imul
sbb
je
imul
pushfw
push
icebp
sbb
repz
rcrb
pop
outsb
cmp
sub
popa
js
into
out
scas
arpl
mov
lods
stc
cmp
mov
test
push
cwtl
sbb
leave
shll
fistpl
call
imul
popf
cmp
or
js
adc
dec
xor
jbe
mov
std
in
xor
mov
fiadds
push
aas
outsb
outsl
cmp
add
mov
dec
repz
out
cmp
sbb
xchg
sub
pop
inc
push
out
and
jp
jno
push
mov
cltd
ss
cmp
jo
jne
das
mov
mov
cmp
stos
scas
popf
enter
test
mov
cld
stos
push
mov
add
and
xchg
add
xlat
addr16
call
cmp
pusha
rcll
cmp
pop
mov
sbb
xlat
fxch
push
and
cmp
mov
rorl
pop
cltd
dec
xor
xchg
jo
sub
push
lods
jno
lock
add
outsb
push
test
xchg
out
lea
xor
jo
pop
mov
incl
lahf
sahf
mov
sub
pop
outsl
mov
outsb
pusha
pop
sbb
rorl
sub
lahf
rolb
jp
mov
out
hlt
sbb
js
mov
and
outsl
cmp
and
sub
or
lods
int3
imulb
jo
in
es
sub
cmp
enter
adc
loop
lods
dec
sysret
stos
mov
scas
push
nop
fdivl
jno
fs
adc
imul
test
mov
mov
push
mov
mov
xchg
out
inc
or
call
sti
push
fidivl
jl
icebp
rorl
cmp
lea
in
sbb
mov
cmp
jnp
shl
sub
mov
out
shl
or
pop
push
fwait
pop
ljmp
roll
cmp
test
lock
mov
mov
push
dec
lods
gs
xchg
es
mov
iret
cld
das
xchg
bound
pop
sub
cmp
lock
mov
lock
mov
sbbl
pop
pop
ret
xchg
push
clc
shrl
adc
sbb
xchg
adc
mov
push
notb
jle
dec
es
mov
push
cmpsb
pop
movsb
sbb
sbb
call
lds
sub
jb
cmp
addr16
mov
and
scas
pop
ret
shrb
inc
xchg
dec
adc
scas
adc
mov
jg
mov
cmpsl
in
test
mov
sub
mov
sbb
mov
dec
lock
add
sub
sub
mov
xor
lcall
push
sbb
pop
out
cmp
push
mov
dec
imul
or
adcl
popa
data16
fimull
loope
push
ret
jo
mov
gs
or
xchg
outsl
inc
sub
push
xchg
mov
ret
sub
stc
xchg
fmul
mov
gs
cs
push
inc
mov
mov
and
mov
hlt
mov
arpl
xor
push
jns
add
cmpsb
sub
and
xchg
test
movb
inc
aas
and
jecxz
daa
pop
insl
mov
rorl
mov
bound
mov
jle
out
iret
mov
jge
rep
clc
pop
pop
dec
push
xchg
test
or
ljmp
sub
lahf
or
frstor
mov
bound
pop
jno
lods
push
jmp
jecxz
cmp
xlat
stos
mov
xchg
imul
mov
fists
dec
out
imul
jb
mov
call
and
or
fmuls
mov
fcompl
pop
jge
jo
jmp
cld
or
add
and
cmpsb
mov
sahf
test
cmp
adc
fs
xor
scas
pop
bound
arpl
aas
cld
jecxz
jl
cltd
push
mov
mov
out
mov
xor
inc
mov
test
sub
jns
cltd
push
fidivrl
ja
loope
xor
add
shr
gs
add
adc
mov
xchg
cs
cli
pusha
push
out
mov
lcall
aaa
and
xor
sub
pop
jb
sti
mov
popf
insl
shrb
cmp
or
arpl
popf
jo
cld
cmp
sub
sub
adcl
mov
xchg
xor
sub
loope
push
mov
and
mov
enter
test
loope
jo
mov
xchg
mov
arpl
xor
repnz
xor
ljmp
lock
sbb
cwtl
daa
leave
mov
repnz
and
outsb
repnz
inc
cltd
movsb
in
insl
mov
jg
pushf
adc
es
sub
jo
ficomps
lods
ret
sbb
and
and
lahf
imull
nop
jns
cwtl
push
pop
icebp
std
inc
mov
and
mov
jo
daa
scas
xor
jo
jmp
pusha
fwait
iret
popa
or
jb
mov
dec
xchg
and
lock
xchg
je
fiaddl
mov
in
movsb
cmp
inc
mov
push
pop
pop
int3
cli
add
dec
out
xchg
cld
adc
adc
xchg
dec
aad
mov
mov
cli
adc
fsubl
push
iret
jp
shlb
sbb
std
sbb
ret
divb
lock
and
and
xchg
jns
inc
adc
repz
lds
lret
shl
fs
sub
es
dec
jp
sahf
xlat
notb
sub
mov
das
lock
daa
mov
and
adc
mov
clc
push
xchg
cmp
sbb
inc
mov
dec
ret
in
lock
mov
imul
mov
jl
shlb
jmp
sub
pop
mov
xchg
adc
shlb
xor
dec
and
fsts
adc
fcmovbe
mov
testb
push
mov
and
pop
mov
mov
lods
stos
lret
push
add
fcompl
add
and
pushf
mov
xchg
aas
cli
jecxz
movsl
loop
andl
mov
add
add
icebp
in
insl
add
or
loope
pop
push
push
ret
pop
sub
mov
cltd
out
push
xor
sub
push
lods
and
icebp
sbb
push
jle
popa
imul
shlb
nop
fidivrs
add
lods
fidivrl
jb
std
mov
sbb
loope
ss
adc
fcomip
pop
ret
aas
movsb
lods
push
loope
push
pop
push
mov
arpl
jb
or
push
sbb
pop
addr16
mov
mov
repz
dec
push
jmp
fsubrl
dec
jne
pop
lods
dec
pop
sbb
daa
movsl
adc
dec
and
sub
jl
inc
jecxz
pop
rol
aad
leave
nop
xor
and
test
and
pusha
rcrl
jle
es
dec
xchg
pop
lock
mov
adc
dec
bound
stc
fidivs
xchg
in
sub
daa
mov
icebp
push
mov
mov
popf
gs
stos
test
mov
mov
pop
mov
sbb
insb
dec
adc
jp
pushf
xchg
pop
aad
in
inc
mov
mov
imul
add
xchg
ljmp
mov
adc
xchg
xor
xorb
int
lcall
mov
loope
or
pop
xchg
dec
lahf
jle
gs
or
pop
mov
test
in
dec
testb
in
leave
bound
mov
repz
fs
lods
fidivl
insl
add
jl
jnp
in
sahf
sub
lret
dec
lods
sbb
imul
xchg
mov
cmp
xchg
rolb
jno
ret
and
test
fs
adc
test
or
pop
pop
jle
in
aas
out
and
insl
mov
sbb
mov
dec
jb
push
mov
and
cmp
testl
lods
or
andl
fwait
mov
dec
lcall
fists
lock
push
movsb
sbb
mov
cmc
push
pop
mov
icebp
cmpsb
lahf
stos
cmp
outsb
lret
xor
shl
ja
ret
mov
pop
push
push
mov
js
mov
or
fimuls
push
adc
lahf
rcrl
cmpsb
fs
cs
sub
orb
fnstcw
sbb
icebp
dec
mov
and
adc
cmp
adc
and
aaa
mov
cwtl
push
or
adc
sub
pop
insl
ret
idiv
xchg
pop
gs
push
imul
mov
imul
pop
test
adc
bound
xor
lods
dec
fsubs
es
inc
and
cmp
fwait
sbb
pop
adc
and
cmp
fsubrl
lock
jns
or
pop
lret
pop
mov
loop,pt
neg
outsl
xchg
and
push
arpl
push
mov
mov
in
cmpsb
pop
xchg
mov
mov
rcl
and
sti
push
cmp
xchg
adc
test
add
or
push
lods
mov
scas
sbb
pop
idivl
hlt
rcrb
icebp
xlat
lahf
bound
pushf
sbb
jg
inc
adc
and
in
cs
and
xor
roll
cmpsb
sahf
fs
add
mov
pushf
das
in
ds
mov
es
add
jecxz
jge
xchg
xchg
pushf
movsb
jp
loopne
sub
jecxz
ret
jl
xchg
push
push
out
jae
loopne
icebp
test
mov
fsubrl
push
movsb
pop
pop
out
pop
sbb
test
xchg
imul
add
inc
negb
dec
fbstp
mov
rorl
pop
nop
mov
cld
fnstenv
inc
mov
in
mov
outsl
or
xor
jae
ljmp
cmp
lahf
insl
mov
xchg
aaa
stos
in
sub
xchg
int3
cmp
pop
push
mov
xlat
and
fcom
fucomip
xchg
mov
sbb
push
rolb
and
sbb
arpl
lock
mov
cmp
push
push
imul
adc
or
in
shl
arpl
in
in
pop
ficomps
xor
pop
xor
xor
inc
pop
stc
cltd
fxch
jmp
clc
adc
xchg
push
xchg
lods
lock
div
rorl
jb
add
mov
movl
ljmp
mov
sub
ljmp
sub
mov
movsl
lods
shrl
xor
or
fwait
sub
jo
dec
xchg
imul
testb
push
push
in
stc
xchg
orb
xchg
jg
ficomps
int3
adc
imul
cmp
jg
jecxz
dec
rclb
xor
and
dec
loope
inc
pop
lcall
pop
inc
xor
imul
mov
push
push
or
mov
sbb
out
mov
adc
clc
dec
push
lahf
jp
sbb
es
in
loopne
mov
rclb
or
pop
insl
cmp
imul
and
je
stos
out
mov
mov
movsl
sbb
xor
sbb
inc
pop
in
and
jae
fmul
aad
imul
sbb
sbb
jne
movsl
or
cld
mov
push
fsubl
lock
loopne
sbb
stos
cmc
fisubl
jl
and
outsb
lahf
sub
pop
jns
sub
dec
fisubl
insl
adc
xor
xchg
mov
dec
cmp
push
arpl
out
call
imul
icebp
push
sbb
xchg
sub
bound
rorl
scas
es
fsubrp
hlt
out
loope
sahf
mov
xor
cmp
das
sbbl
into
mov
fwait
insb
int3
fs
es
pusha
repnz
mov
shrb
sub
or
int3
ljmp
adc
test
mov
and
pop
mov
mov
jns
mov
test
push
gs
xchg
xchg
insb
loope
pop
inc
and
xor
cmp
adc
mov
popa
push
adc
test
jmp
mov
push
hlt
jl
sub
push
les
in
xchg
jns
mov
aam
les
pop
rcr
mov
xchg
sub
sub
and
or
arpl
cs
xor
int3
dec
pop
xchg
test
mov
dec
testb
mov
adc
and
and
pop
ss
std
jecxz
push
aaa
mov
bound
sub
mov
lret
in
and
xchg
jge
in
dec
mov
push
sbb
popf
or
js
in
jb
lcall
xchg
jns
or
sbb
fstps
sbb
add
add
adc
jae
bnd
loope
sbb
iret
mov
imul
rcl
push
lea
push
cld
pop
das
push
ret
je
cmp
movsl
mul
scas
sub
adc
jb
ret
movsb
jbe
push
dec
out
int3
adc
dec
sahf
aam
mov
push
push
pop
cmpsl
pop
fildll
lods
scas
pusha
sbb
mov
enter
daa
pop
xchg
pop
repz
pop
pop
out
cmpsb
testb
xchg
and
mov
mov
insl
pop
cltd
fwait
imul
rcr
adc
inc
jo
and
into
mov
cmp
clc
fldlg2
pushf
sbb
aaa
or
ror
jno
sarl
outsl
pop
mov
pushf
add
lods
sbb
lret
imul
mov
push
inc
push
push
or
in
test
cs
xor
enter
sbb
push
imul
pop
sti
popf
push
mov
sub
and
gs
dec
sub
cmp
mov
sub
jbe
mov
fwait
vminsd
xor
jbe
jmp
mov
sbb
call
or
int
push
push
or
sbb
mov
mov
push
or
push
lods
and
call
xor
dec
std
aad
cwtl
jnp
mov
aaa
pop
lock
jbe
inc
pop
es
fs
imul
movsb
dec
lea
es
loop
lahf
cld
gs
sub
add
cmc
push
data16
repnz
push
and
push
cltd
push
sarl
bnd
and
cmpsl
xchg
ret
inc
jl
int3
adc
or
cmovo
and
mov
sbb
jb
adc
repnz
inc
sub
hlt
mov
sub
push
jecxz
push
mov
in
ret
jb
sbb
pushf
arpl
es
or
into
cwtl
adc
out
aad
aam
fisubs
call
gs
sbb
pop
in
sbb
lock
lret
pop
cmp
jo
mov
ret
cmp
cmpsb
pop
push
push
cwtl
jge
sti
dec
je
in
cld
add
pop
cs
mov
inc
int3
fiadds
or
aaa
and
shl
or
adc
mov
rorb
scas
sub
in
sbb
popf
fisttpll
lahf
fs
mov
shl
xchg
jo
stos
test
fwait
and
sbb
pop
fiadds
lock
mov
dec
or
in
mov
daa
or
mov
aaa
and
jl
iret
repnz
scas
push
fnstsw
pop
pusha
lock
adc
lods
movsb
jno
pusha
sbb
and
loop
stos
sub
cmpsl
test
test
stc
add
push
pop
fisttps
xchg
movsl
dec
movsb
adc
test
push
and
push
loope
test
rcl
rol
inc
pop
stos
adc
das
sub
aaa
mov
sbb
and
fs
aaa
repnz
dec
xchg
jmp
mov
pop
out
mov
fsts
mov
sti
xchg
in
sub
adc
adc
pop
test
mov
imul
pop
add
rcll
add
in
add
insl
sbb
pop
jne
in
jo
shrl
in
mov
cmp
mov
mov
jns
push
shr
mov
or
adc
mov
jmp
fmull
mov
mov
xchg
jmp
hlt
and
dec
dec
lret
in
call
dec
adc
dec
or
iret
mov
xchg
outsb
and
insl
in
or
data16
out
notb
mov
mov
push
xlat
das
clc
lods
out
adc
xchg
cld
fwait
inc
shl
pushf
add
push
popf
int3
fwait
cld
xor
adc
xchg
loopne
cmpsb
xor
xchg
mov
stos
xchg
cmp
and
adc
in
pop
aaa
out
movsb
ja
dec
loope
xchg
jecxz
sub
adc
test
pop
inc
mov
repz
mov
push
es
sbb
push
jo
lahf
outsb
dec
pop
fldcw
mov
sbb
pop
or
mov
push
icebp
dec
fwait
stos
adc
faddl
icebp
sub
xchg
push
xor
push
jg
pop
push
mov
insb
loope
imul
mov
pop
xchg
cmp
mov
dec
pop
ds
fisubs
sub
lahf
cmp
int3
jbe
xor
sbb
mov
lret
sbb
daa
or
lods
int
outsb
ficoms
sbb
jno
sub
sub
insl
xor
int3
jge
imul
jg
out
and
sahf
rolb
pushf
sbb
icebp
xor
fisubrl
sbb
loopne
jb
and
jmp
sbb
fcoms
test
mov
ja
cmp
adc
loop
adc
or
jg
stos
add
loop
add
cs
std
jle
jmp
jo
mov
adc
adcb
mov
lods
mov
mov
pop
gs
loopne
mov
fisttpl
insl
or
lods
addr16
dec
sub
fistpl
and
dec
repnz
cltd
outsb
push
inc
jb
push
push
shlb
sub
imul
roll
xlat
notl
icebp
repnz
mov
mov
push
gs
movsb
mov
popa
repnz
adc
icebp
popf
add
je
mov
push
cltd
jno
inc
popf
jl
inc
clc
jge
cmp
mov
push
add
jae
insl
clc
mov
fnstenv
pop
in
push
cld
lock
ret
mov
xor
fists
movsl
jns
and
jne
pushf
mov
fs
jo
jo
jne
fistpll
outsl
pusha
leave
adc
mov
sahf
mov
ljmp
or
ljmp
adc
xor
aad
lock
ret
sub
or
mov
xchg
gs
lods
enter
mov
ret
pop
movb
fmul
mov
popa
loope
or
jae
xchg
xchg
mov
xor
in
leave
or
sar
cmp
adc
rcrl
dec
adc
test
je
cmp
mov
add
stos
sti
loop
pop
adc
addb
addr16
sbb
test
dec
cmp
cs
fs
nop
pop
mov
dec
sub
neg
gs
xchg
jge
daa
push
xor
mov
orb
fs
outsb
sbb
test
pop
mov
or
repnz
xchg
push
cmp
and
lcall
lods
clc
out
mov
lods
cli
or
pop
jo
or
movsb
lahf
mov
insl
pop
cmc
or
data16
xchg
pop
icebp
jno
cwtl
or
arpl
test
imul
or
out
in
push
mov
push
adc
sbb
ret
pop
add
xchg
test
xor
std
ja
cmp
dec
sub
pop
and
adcb
aaa
mov
add
gs
pop
jbe
fld
test
sbb
jne
adc
jl
pop
loop
mov
pop
outsb
or
push
int
iret
or
fldcw
sbb
push
test
imul
int3
mov
out
dec
jns
push
adc
or
cmpsl
mov
movsb
cmpb
jbe
test
insb
pop
subl
rcrl
dec
add
sbb
shr
mov
or
enter
jae
lcall
mov
mov
or
rorb
cmpsb
rorl
int3
cld
fs
or
or
call
jbe
lea
push
and
or
cli
nop
inc
xchg
lret
popa
jno
pop
int3
sbb
testb
sub
iret
mov
and
xor
out
push
fwait
sbb
and
fptan
jnp
movsb
scas
lret
mov
in
sbb
popf
call
imul
sbb
in
out
sarl
movsl
repnz
loopne
arpl
movsl
ja
leave
inc
insl
xchg
mov
dec
idivb
test
leave
imul
jb
push
imul
push
fs
mov
adc
imul
cwtl
sub
and
in
lea
repnz
call
pop
enter
mov
rol
test
movsl
popa
ss
mov
lea
xor
movsb
cld
xor
or
add
cmp
lret
pop
movsb
sbb
dec
sub
cmp
xchg
mov
cmp
pushf
pop
mov
jbe
adcb
fsubrl
in
mov
adc
pavgb
xchg
in
cmpsb
jno
lcall
movb
fwait
xor
adc
dec
cmpsb
dec
pop
lcall
ljmp
and
push
mov
cltd
mov
push
jo
loopne
adc
ja
push
stos
cmpsl
sub
pop
test
pop
mov
mov
popa
push
dec
icebp
scas
jbe
iret
sub
lock
mov
dec
mov
int
mov
nop
xchg
fiadds
mov
ljmp
push
xchg
cmp
in
lahf
mov
push
mov
sbb
jnp
inc
mov
mov
push
mov
inc
in
call
insl
xchg
push
in
mov
mov
dec
incb
cmp
mov
ja
mov
dec
jb
cwtl
jp
mov
mov
decb
push
sti
cmp
and
mov
xchg
cmp
movsl
jo
xchg
loop
mov
lahf
push
cmp
stc
in
bound
dec
mov
mov
mov
dec
gs
or
movsl
sbb
and
fs
xor
cmp
jg
addr16
mov
mov
mov
xchg
mov
hlt
fisubs
sahf
outsb
icebp
mov
fcomip
push
mov
pop
dec
mov
clc
mov
pop
insl
in
outsb
insl
jb
cmp
cs
bound
push
dec
pop
push
fistl
lcall
mov
jb
sbb
add
adc
cmp
andl
jbe
mov
jns
jp
sbb
dec
repnz
pop
pop
pop
xchg
test
cltd
inc
js
xor
pop
dec
mov
mov
add
iret
int
inc
aaa
aad
pop
int
pop
fisubl
arpl
jb
xchg
sbb
idivb
jno
xchg
aad
mov
mov
xchg
push
or
xlat
call
add
adc
or
and
jne
mov
dec
cmpsb
sbb
add
jno
in
loope
dec
lea
xchg
dec
rcll
mov
cltd
mov
cmp
jne
pop
mov
mov
cmpsb
fidivl
fistpl
out
jo
stos
in
cmp
scas
scas
shrl
xchg
loope
ja
movl
mov
jne
xchg
cmpsl
les
adc
and
sbb
stos
loopne
fs
paddw
hlt
jle
cmp
dec
loopnew
cmpsl
pop
inc
push
int3
int3
sub
push
xor
pushf
dec
mov
std
mov
test
movsb
push
lock
and
addb
push
sar
sub
jae
mov
stos
data16
dec
mov
stc
leave
std
mov
test
or
rcrl
pop
add
xor
add
lcall
mov
xchg
jnp
ss
cmp
add
cli
dec
mov
adc
leave
push
pop
lds
inc
sbb
push
fdivp
in
ret
jno
data16
mov
imul
ficomps
xor
test
sbb
loope
fs
fs
and
jmp
addb
sub
fwait
outsl
mov
icebp
movsl
cmp
or
xlat
and
cmpsl
sbb
popf
mov
mov
jno
sub
mov
jl
jno
mov
sub
lods
mov
push
sub
add
jle
dec
xchg
loopne
mov
sbb
mov
ja
js
loope
push
and
sahf
inc
fnsave
mov
sub
mov
movsb
cmp
and
mov
jns
negl
inc
mov
push
lds
std
push
dec
call
adc
adc
dec
or
mov
out
jbe
idivl
pminsw
sbb
scas
mov
sbb
lea
seto
icebp
sub
jl
sahf
push
js
notb
jmp
ljmp
fnsave
push
mov
lods
or
test
or
int3
adc
pop
mov
xchg
or
arpl
sbb
loop
xor
stos
dec
data16
add
ret
out
shll
pop
mov
add
test
sub
in
pop
sub
or
in
sbb
add
xchg
imul
sub
stos
sub
push
inc
das
adc
and
xchg
insl
mov
mov
sahf
dec
push
xor
cld
loop
pop
stc
xchg
sub
add
data16
faddl
repnz
popa
push
int3
cmp
sbb
and
adc
xchg
out
xchg
lds
xchg
imull
dec
xchg
outsb
cmp
cmp
sbbb
cmp
aas
and
in
pop
gs
insb
jmp
lea
xor
loope
fidivl
mov
dec
mov
or
mov
inc
cmovns
sbb
and
dec
cmp
sub
sub
out
jnp
loop
dec
sbb
xchg
imul
mov
mov
adc
add
mov
int3
lock
mov
in
cmp
fimuls
push
cmp
loop
xor
adc
lods
dec
rcrl
dec
hlt
jns
sarl
sub
xor
cs
int
mov
add
popf
cmp
mov
push
xchg
sub
lea
push
sbb
cmp
mov
and
mov
insl
and
fdivl
mov
inc
mov
mov
cmc
and
or
mov
and
adc
and
dec
fwait
aam
test
push
imul
fisttpl
push
adc
iret
repnz
mov
dec
out
out
in
fsubr
in
push
aaa
scas
fnstsw
xchg
jmp
fs
mov
push
mov
xchg
inc
fs
or
jmp
sbb
arpl
push
adc
lret
pushf
lods
and
xor
stos
dec
hlt
xchg
mov
cwtl
outsb
lret
or
push
mov
inc
movsb
adc
jb
sti
or
les
mov
imul
imul
out
insl
repnz
outsl
push
mov
aas
movsl
lods
mov
lods
iret
cmpsb
ss
inc
mov
sub
xor
sub
adc
push
ret
rcrb
sub
or
rcrl
push
pop
mov
in
pop
sub
out
lds
popf
jno
fs
ret
ss
cmp
push
sbb
inc
jg
xchg
jne
ss
or
enter
push
push
mov
jnp
mov
pop
jmp
mov
inc
int3
sbb
shrb
gs
cs
mov
and
int3
ja
fldenv
inc
mov
popf
nop
and
cld
cmp
sbb
movsl
int
xor
jno
in
loop
cwtl
sub
sbb
jns
dec
sub
mov
inc
aaa
insb
and
cltd
roll
sub
cli
sub
xchg
dec
pushf
das
mov
or
inc
sub
mov
dec
dec
les
xchg
and
sub
outsl
mov
loope
pop
push
out
xor
andb
les
popa
mov
mov
and
add
mov
mov
sub
push
push
repnz
inc
out
xchg
imul
xchg
imul
out
test
sub
sub
leave
lret
mov
test
out
mov
imul
pop
fldenv
sbb
nop
test
sbb
shlb
roll
pop
cmp
xorb
mov
movsl
sbb
mov
sbb
mov
mov
lea
push
xor
mov
mov
inc
inc
jbe
pusha
int3
xor
loop
outsb
fimuls
les
xchg
in
ret
repnz
push
pop
shll
nop
and
loop
push
outsb
sub
push
push
xor
mov
icebp
mov
pushf
adc
jb
jp
jecxz
sbb
nop
cmp
mov
jno
aad
test
xchg
dec
push
mov
or
gs
and
pop
or
addr16
lcall
or
mov
cwtl
jbe
int3
add
push
mov
xchg
add
sub
pop
arpl
jmp
jae
lods
fs
js
pushf
sub
lds
loop
mov
xchg
mov
insl
dec
adc
loopne
loopne
add
sub
adc
scas
cpuid
mov
test
mov
cld
xor
pop
xor
push
imul
std
sub
lret
xor
enter
aad
in
mov
cmpsb
lods
sbb
sub
movsl
test
stc
and
fmuls
pushf
push
popf
in
insl
mov
test
test
cli
sbb
pop
dec
pop
mov
adcl
sub
stos
or
outsb
imul
out
jp
adc
lcall
add
sbb
out
jno
call
or
sbb
inc
or
mov
cmc
mov
mov
jno
in
mov
shll
dec
enter
push
jl
out
stc
dec
cwtl
pop
lods
mov
or
adc
ljmp
jecxz
je
test
int3
mov
dec
or
mov
mov
in
mov
cmp
or
cwtl
adc
repz
xchg
and
ds
and
pop
mov
mov
mov
mov
jo
push
gs
dec
mov
xchg
ret
call
test
xor
test
jecxz
movsb
jne
inc
mov
inc
loope
jmp
mov
and
imul
outsb
iret
xchg
mov
pop
jo
dec
add
divl
out
sub
call
push
nop
push
add
jae
push
and
gs
inc
movsb
and
scas
fistps
mov
inc
adc
loope
es
add
clc
lock
adc
out
mov
and
in
test
icebp
push
iret
push
insb
lods
arpl
jno
sub
in
pop
pop
push
arpl
push
jo
popf
adc
movsl
shll
shl
mov
jg
scas
sub
int3
and
clc
rolb
jl
imul
inc
jae
shl
in
ss
iret
and
and
cli
cmp
test
out
sub
push
mov
test
jo
jo
inc
xchg
or
repnz
out
dec
mov
in
repnz
stos
xchg
loop
mov
daa
sbb
mov
pop
or
mov
cmp
push
lret
popa
sub
movsl
jno
pop
js
daa
ds
lret
xor
scas
dec
pushf
push
add
jl
jo
sub
or
xor
imul
push
push
add
mov
xchg
ds
imul
sub
repnz
inc
xchg
pop
or
fsubrp
pop
push
mov
mov
popf
pop
lock
cli
inc
repnz
hlt
in
lret
jno
jmp
mov
fsubs
in
pop
enter
js
adc
dec
jb
dec
xor
adc
jnp
mov
jns
xor
mov
cmp
jno
cld
pop
cwtl
pop
push
and
and
pushf
icebp
test
out
fwait
add
testl
arpl
xor
push
test
xchg
int3
mov
add
or
cld
mov
cmp
xchg
call
mov
mov
iret
mov
out
mov
scas
or
icebp
mov
xchg
jo
dec
jl
fidivl
sub
push
fimull
in
sub
pushf
adc
out
push
inc
fwait
adc
xchg
in
and
or
data16
outsl
stos
or
imul
lea
sbb
out
mov
cmp
imul
jmp
out
std
outsl
gs
mov
stos
push
popa
push
roll
inc
cli
jo
push
cmp
int3
fs
dec
xchg
sub
aam
movsl
loopne
popf
mov
sbb
ds
shl
pop
js
or
rclb
sub
cltd
notb
xchg
scas
sbb
mov
stc
dec
mov
das
or
cli
in
imul
bnd
xor
lods
fs
enter
cmp
notb
lret
dec
mov
insb
fs
repz
adc
gs
aas
push
mov
insl
hlt
adc
std
or
xor
stc
je
fbstp
cmc
in
sbb
lock
gs
fwait
or
push
adc
popa
dec
testl
into
mov
rorb
test
outsb
jno
loope
shrl
ss
sub
frstor
gs
push
adc
jno
pop
ret
imul
xchg
xchg
sub
popf
fs
mov
fimuls
imul
test
lcall
or
movsb
jae
lret
mov
cmp
inc
inc
adc
clc
pop
mov
mov
outsb
test
gs
sub
shll
dec
and
shlb
pusha
je
mov
pop
or
and
dec
cmp
pop
imul
ljmp
outsl
shlb
inc
inc
fwait
loop
mov
jge
jns
push
in
mov
mov
jmp
xor
stos
or
push
sahf
dec
cli
imul
lock
int3
stc
xor
sbb
fbstp
imul
ds
sub
imul
frstor
jnp
jmp
dec
into
test
xchg
xchg
fs
push
jns
fsub
gs
push
pushf
add
test
pop
cmp
in
inc
sub
push
adc
jae
scas
jecxz
mov
cmp
or
mov
dec
mov
std
sar
jno
data16
pushf
jno
scas
stos
jno
xor
jo
xor
loope
mov
in
sub
sti
xchg
fstl
es
pop
and
fldt
icebp
fiadds
push
mov
mov
call
push
sub
mov
jbe
cmp
mov
mov
sbb
lahf
in
mov
mov
hlt
out
ficompl
movsl
data16
xchg
or
xor
jns
cmp
das
xchg
mov
cmpsb
icebp
ja
enter
cmp
mov
adc
lahf
mov
mov
aad
in
ret
push
inc
adc
inc
lcall
loope
mov
mov
dec
insl
shr
sbb
add
fimuls
test
das
and
call
mov
xor
cmpsl
ficompl
xchg
pop
mov
and
sub
gs
xchg
push
mov
pop
adc
inc
mov
push
addl
lea
nop
bound
cli
repz
pusha
in
pusha
out
mov
inc
dec
in
xor
cmc
lock
push
pop
mov
test
inc
stc
mov
mov
adc
hlt
mov
insl
cli
push
xchg
fcmovb
in
lods
push
rolb
dec
or
sbb
xchg
fisubrs
stos
call
sub
xor
pop
or
jno
lahf
loope
pop
mov
mov
fiadds
or
loope
int3
les
out
ret
and
int3
nop
push
sub
jne
cmp
dec
rorl
inc
mov
adc
shll
popa
stos
dec
lods
idivb
pop
popf
fimull
leave
lods
sbb
xchg
or
lods
dec
and
add
enter
int3
add
lret
xchg
xor
xchg
mov
mov
cmp
aas
insl
jl
push
test
mov
add
lret
loop
mov
mov
add
lret
in
adc
mov
and
jno
inc
sbb
data16
sub
pop
mov
test
sarl
push
insl
je
iret
or
push
lret
dec
into
stos
add
jmp
les
mov
icebp
bound
cmp
push
sub
lds
test
movsl
fists
lods
fs
xor
push
dec
out
imul
xor
jmp
dec
xchg
pushf
mov
pop
data16
sub
inc
mov
dec
loopne
xchg
in
push
xor
fimuls
mov
jo
stos
jmp
jnp
cld
mov
jbe
cli
fwait
int
pop
es
popf
imul
addb
mov
imul
push
pop
stc
jg
cld
push
scas
adc
movsl
popa
jl
add
movsb
sbb
in
ret
add
imull
mov
mov
cld
push
pop
add
fwait
mov
mov
add
mov
shl
shl
mov
lock
rolb
jno
mov
mov
dec
mov
test
cmp
cli
xchg
push
mov
ljmp
sbb
and
xchg
adc
arpl
call
and
mov
mov
mov
dec
pop
mov
ljmp
push
lods
pop
mov
sbb
test
add
sub
mov
sbb
xchg
adc
dec
stos
sbb
in
sahf
dec
or
test
or
repnz
fisubl
and
and
adc
sbb
pop
mov
mov
sub
jnp
cmp
subl
cmc
cmpsb
into
dec
fs
fucom
sbb
in
subl
pop
sub
in
sub
push
stos
dec
enter
jmp
xchg
xchg
mov
push
xor
lahf
xchg
pop
aas
push
rclb
adc
pop
mov
dec
popa
pop
pop
mov
stos
scas
in
in
mov
mov
or
scas
adc
cmpsb
test
test
ss
xchg
mov
or
pop
mov
arpl
mov
stos
xchg
rcrb
cmp
push
cs
inc
sbb
cli
dec
and
loope
cltd
and
sar
cmp
inc
and
sbb
mov
mov
jp
mov
and
xchg
ljmp
jno
mov
shrb
in
mov
outsb
sti
sbb
cmp
inc
sub
adc
cli
mov
adc
inc
add
xchg
mov
stos
push
fmulp
pop
sub
mov
mov
subl
aaa
mov
jo
jmp
mov
jne
cli
frstor
fidivs
mov
loope
jmp
dec
add
xor
mov
fldt
inc
les
arpl
mov
jo
out
shl
push
jmp
inc
ret
movsl
sub
test
sbb
repz
xchg
fldt
and
mov
mov
call
push
pop
mov
arpl
mov
mov
shl
or
xor
sarb
int3
push
or
and
cmp
loopne
cmpsl
cmp
lods
xchg
fwait
imulb
cmp
shl
scas
add
push
imul
aam
icebp
divps
cmc
push
push
fiadds
lods
in
pushf
mov
test
lret
lds
fs
fnsave
mov
pop
rclb
sub
sub
nop
push
add
fsub
fildl
in
outsb
outsb
xchg
sbb
scas
xchg
or
pop
and
or
cmp
mov
or
ds
dec
dec
pop
in
test
int
fs
jle
jmp
adc
xchg
paddd
sub
enter
pop
adc
test
test
shll
or
push
mov
les
jp
push
pop
inc
subl
jo
pop
jmp
shrb
or
mov
pop
inc
les
mov
addr16
nop
fidivs
movb
scas
aas
adc
inc
and
or
imul
adc
insl
xchg
jnp
mov
es
mov
pop
jno
lahf
xlat
xchg
ljmp
popf
push
xor
xchg
mov
gs
adc
ljmp
mov
mov
fwait
pushf
das
movsb
aad
or
adc
mov
hlt
mov
mov
sub
sbb
add
movsl
jne
lea
lcall
clc
and
mov
inc
daa
lods
jb
fstpt
scas
jb
movsl
add
lret
sbb
movsl
adc
xlat
ret
sbb
jp
loopne
adc
gs
jg
or
mov
es
mov
sub
loop
mov
fcmovne
pop
rcll
mov
mov
cmp
fs
add
push
mov
or
shl
int
lods
movsl
pusha
jb
xchg
dec
pop
testl
fists
pushl
jo
mov
lds
movsl
fisttps
in
testb
push
mov
stos
ljmp
pusha
or
mov
lods
xchg
and
ds
pop
dec
sub
mov
xor
sub
mov
xchg
push
loope
test
rcrb
xchg
lds
pop
in
lock
movsl
push
sub
jno
mov
loope
iret
hlt
adc
xchg
mov
mov
push
sub
xchg
in
push
xor
adc
mov
mov
add
nop
fwait
mov
mov
out
cmp
mov
lahf
into
movsl
outsb
ljmp
dec
addr16
repnz
mov
push
shll
test
movsl
test
aam
or
es
sbb
movsb
mov
or
jo
movsb
or
sub
mov
push
sahf
mov
adc
adc
in
sbb
xchg
imul
movsl
xchg
inc
xchg
loope
out
gs
clc
call
xlat
sbb
adc
push
insl
addr16
shlb
imul
ficomps
xor
popf
xchg
icebp
jno
sbb
mov
adc
orb
call
fs
push
sub
lock
adc
call
sub
add
cmp
shlb
cmp
jmp
ror
sbb
cmp
pop
dec
std
adc
mov
sub
or
pop
pushf
rcll
mov
inc
fiaddl
mov
testl
pop
xor
pop
cmpsb
es
push
pop
bnd
fs
aaa
gs
and
jge
or
lods
aaa
sub
repnz
arpl
movsl
loopne
jo
es
adc
mov
shr
xchg
push
adc
mov
jo
insw
cmp
sbb
dec
fidivrl
mov
mov
aaa
mov
jb
dec
inc
lock
pop
call
jp
fstps
add
cli
and
jne
aas
jae
lret
or
push
inc
lahf
add
scas
notl
sahf
pop
sahf
add
mov
dec
adc
stc
cmp
repnz
jbe
fildll
lea
js
fcmovb
xchg
mov
mov
xchg
sbb
xor
popf
pop
or
lock
bound
and
lock
ljmp
or
mov
mov
push
xchg
cmpsl
iret
sbb
std
dec
inc
xor
push
dec
icebp
push
add
jmp
data16
imul
mov
andl
aaa
sbb
xor
mov
jnp
out
pop
pushf
in
push
ja
jl
jae
adc
sahf
scas
sbb
popa
sub
xor
es
ljmp
cmpsb
icebp
cmp
fs
imul
sub
jb
sbb
pusha
jp
sbb
sub
fstpl
jno
int3
inc
push
sahf
insl
wrmsr
lret
push
repnz
push
inc
mov
jo
add
or
fistps
xchg
pop
dec
push
pop
xchg
dec
push
in
push
fs
xchg
call
arpl
rolb
add
shrb
push
outsb
rcrl
clc
or
inc
les
or
movsb
call
xor
cli
popa
scas
jp
xlat
mov
fimull
adc
aad
push
xchg
leave
mov
mov
repnz
jle
push
cmp
or
pop
iret
mov
xchg
mov
in
loop
cltd
lds
jns
es
jge
in
nop
mov
push
pop
imul
aad
sbb
pop
pop
clc
sahf
mov
add
sub
inc
or
lods
stos
js
xor
movl
repz
adc
inc
popf
mov
mov
test
shl
inc
mov
fstpt
scas
orb
imul
push
dec
orb
aas
pop
add
push
punpcklbw
and
mov
aad
and
pop
push
fsubrl
push
hlt
sub
cwtl
xor
sbbb
or
fisttpl
mov
cli
or
loopne
adc
xchg
mov
sbb
push
sahf
fiadds
mov
arpl
dec
jg
popf
test
and
test
jb
rcl
shrb
xor
ret
xchg
adc
cmp
mov
bound
mov
and
rcl
in
sbb
lea
xor
das
mov
call
sbb
cmp
mov
mov
mov
gs
outsl
fwait
lock
pop
sub
lahf
fstl
in
lods
mov
inc
dec
std
jo
test
cltd
mov
js
xor
inc
mov
ret
cmp
leave
jae
and
stos
sbb
pop
mov
mov
adc
jmp
xlat
pop
gs
xchg
test
pop
in
leave
adc
xchg
imul
lret
movsb
pop
sbb
and
imul
jnp
adc
pushf
test
push
dec
sub
mov
filds
scas
push
imul
notl
push
out
xchg
dec
outsb
movsl
popa
lea
popa
and
add
mov
and
shll
mov
fwait
jno
test
scas
addl
cmpsl
gs
and
or
cmpsb
call
test
and
cmpsl
xchg
pop
test
pop
lcall
gs
sbb
jmp
imul
cltd
stos
push
lcall
int3
ss
mov
sbb
mov
jno
add
daa
sahf
or
push
xchg
and
lods
test
jno
outsb
dec
mov
inc
loope
int3
inc
mov
xor
insl
xor
stos
adc
mov
mov
push
insl
sti
dec
test
mov
or
sub
mov
mov
or
dec
sbb
cld
inc
fimuls
pop
gs
icebp
xchg
push
xchg
jb
loop
rcrb
and
pop
mov
jae
js
psubsw
aaa
in
addr16
mov
and
mov
jnp
mov
adc
lock
mov
sub
adc
xadd
pop
ret
lea
or
push
cmp
mov
dec
xchg
iret
imul
pop
adc
cmp
int3
dec
jp
outsb
cmove
fdiv
jnp
jo
jno
jb
cmp
adc
rolb
sti
icebp
add
dec
inc
xor
shld
bound
sbb
fcmovu
jl
sahf
push
out
sbb
push
jb
or
push
fs
sbb
xchg
stos
xchg
idivl
pop
push
xor
fwait
xchg
lods
mov
xchg
push
xchg
jno
lods
shr
pop
mov
adc
xor
daa
mov
int
add
and
sub
cmp
lcall
xchg
push
enter
lock
mov
sbb
push
fwait
cmp
xchg
sub
lcall
xchg
test
inc
scas
xor
outsb
xor
insl
pop
jne
in
ljmpw
mov
xorl
jp
and
and
loop
test
dec
lret
in
test
loop
in
add
and
xlat
inc
xlat
icebp
leave
push
movsl
inc
dec
inc
cmc
xchg
xor
test
imul
loope
push
int3
das
pop
shl
stos
cmp
aaa
movsb
sahf
mov
push
and
or
xchg
in
and
cmp
push
pop
cwtl
ret
push
or
push
dec
movsb
cs
iret
push
shlb
mov
mov
mov
pop
stos
xchg
ljmp
stos
loop
mov
push
lahf
out
imul
leave
sbb
call
push
mov
jno
stos
jmp
cmp
sub
dec
dec
add
push
mov
push
mov
add
imul
and
cmp
lods
push
js
sbb
mov
lret
outsb
mull
jnp
call
jns
xor
and
xchg
gs
pop
adc
ss
or
and
mov
pop
jg
insb
bound
subb
outsb
or
mov
leave
int3
sbb
mov
push
xchg
in
jl
mov
push
xlat
imul
pop
stos
sbb
mov
shlb
lods
xor
cli
out
test
fistl
notl
out
push
dec
adc
cs
fisttpll
xchg
push
clc
sub
test
adc
outsb
mov
testl
xchg
and
jo
cs
fstpl
and
out
adc
pop
push
test
lods
lret
sbb
sbb
int3
push
push
stos
mov
dec
mov
push
aaa
fists
neg
xchg
test
stos
jo
xchg
mov
test
in
xor
lea
xor
and
jecxz
sub
jge
dec
push
gs
sub
mov
xchg
test
mov
aas
in
dec
xor
mov
mov
dec
mov
xchg
outsb
and
xchg
xor
aas
add
call
jl
pop
icebp
pushf
add
and
sub
pop
push
inc
fs
testl
adc
mov
mov
mov
mov
inc
mov
pop
clc
arpl
pop
add
ficompl
jle
inc
push
cmp
lahf
rorb
ret
jae
xor
pop
mov
popf
ja
inc
xor
popa
mov
pop
insl
mov
or
xchg
jb
and
mov
xor
sbb
lods
test
dec
test
nop
xlat
adc
xchg
pop
sbb
sbb
daa
fcoms
icebp
fiaddl
sbb
mov
or
in
shrb
xchg
add
or
iret
push
mov
out
push
int
lret
cmp
lret
in
pop
inc
adc
ljmp
lea
sub
inc
mov
mov
mov
scas
jo
lock
ret
outsb
scas
test
shr
lcall
in
mov
sbb
movsw
hlt
xchg
lock
call
xchg
je
rorb
andl
add
push
mov
test
test
cld
push
das
popa
int
sub
mov
iret
enter
push
or
dec
int3
daa
dec
lahf
pop
movsl
mov
jno
xchg
fisttps
dec
sub
pop
sub
pop
outsb
cmpsb
rorl
lcall
loopne
jae
fidivl
push
pop
mov
lds
mov
mov
xchg
dec
pop
cltd
adc
pop
inc
movsl
inc
iret
shlb
sub
adc
push
or
in
mov
jg
in
icebp
mov
add
or
ficoms
lea
mulb
pop
mov
inc
xchg
insl
push
ljmp
dec
icebp
gs
or
mov
push
ret
stc
xchg
mov
xchg
mov
mov
outsb
inc
push
adc
loop
adc
or
inc
stos
adc
ret
or
loope
cmp
dec
lcall
pushf
insl
jnp
pop
shlb
and
inc
or
dec
arpl
loope
push
leave
es
lcall
cmp
xor
sahf
xor
in
fucomi
pop
mov
ret
shl
inc
andl
fisubrl
jmp
jecxz
je
jp
fisubrs
sbb
xor
push
push
xchg
xchg
sti
icebp
inc
int
popa
mov
mov
inc
not
mov
lds
and
bound
push
and
inc
jae
or
out
mov
popf
dec
cmp
pop
adcb
popf
inc
sbb
jmp
cmp
pop
lcall
scas
cmp
ds
add
pop
in
xchg
cli
add
subb
lock
out
lea
lahf
xor
fsubs
cmp
mov
aaa
movsl
xlat
mov
fsub
lock
add
incl
movsl
lds
adc
add
inc
loopne
frstor
rclb
stos
js
arpl
pop
bound
popa
mov
fdivrl
xchg
push
icebp
scas
cmc
jne
imul
lds
pop
jb
js
fldt
cmp
mov
dec
xor
xor
pop
movsl
jo
push
jp
sbb
aaa
cltd
xor
bound
cmp
mov
push
in
das
loopne
cmp
shlb
int
and
mov
jno
sbb
ja
gs
aas
xor
cmpsb
fwait
push
outsl
cld
fiaddl
sub
lcall
mov
jae
ss
jecxz
jmp
call
addb
and
jmp
mov
cmp
lods
sub
cld
and
cmp
mov
stos
mov
repnz
mov
sub
push
cmp
aaa
js
pop
repnz
push
lret
insl
je
hlt
and
push
mov
mov
pop
xor
rolb
shlb
lahf
gs
jge
dec
adc
and
repz
int3
mov
and
push
sub
mov
pushf
int3
jmp
lret
mov
adc
dec
sbb
arpl
mov
jo
mov
adc
mov
sti
sub
xor
and
inc
push
pop
push
repnz
mov
mov
mov
and
imul
or
cmp
out
fs
push
sub
stos
mov
mov
xchg
lahf
fwait
pop
inc
jbe
mov
lret
xlat
inc
jbe
movsl
shr
jnp
push
out
mov
add
addb
push
or
push
adc
das
push
gs
mov
sbb
movsl
push
jno
mov
fdivrl
int3
bound
and
sbb
add
adc
out
xchg
into
mov
jae
mov
mov
mov
int3
hlt
insl
or
cmp
clc
inc
stos
dec
lret
mov
arpl
repnz
pop
or
jmp
imul
lods
fstpt
mov
sub
stos
cli
hlt
dec
std
adc
pop
adc
xor
jne
mov
mov
mov
sbb
mov
std
add
push
push
jo
out
sbb
cld
testb
mov
add
icebp
loop
dec
adc
inc
repz
insl
mov
in
and
lcall
sub
jmp
ds
sahf
xor
mov
lds
pusha
imull
mov
or
daa
popf
xchg
or
scas
mul
loopne
mov
fidivs
pop
mov
and
aad
mov
movsb
mov
mov
sub
fbld
dec
mov
call
shl
in
sar
out
jbe
cmpsl
push
pop
add
or
jns
lret
out
imul
sub
mov
shlb
xchg
icebp
andb
push
pavgw
bnd
push
dec
mov
js
mov
and
scas
nop
mov
mov
ret
push
or
mov
sbb
mov
lcall
loope
or
loope
lock
notb
imul
xchg
ds
icebp
int3
aaa
pop
mov
push
xor
movsl
cmp
xor
mov
mov
faddl
mov
lods
dec
cmp
pop
pop
sub
popf
dec
fs
cmpsb
cld
add
mov
sbb
mov
sbb
jo
mov
lea
mov
mov
aam
mov
daa
repnz
and
pop
mov
imul
stc
in
repnz
cmp
sbb
or
lahf
dec
add
push
mov
xchg
push
sbb
out
fcmovb
xor
das
pop
loope
mov
popf
xor
sbb
sub
cmp
fdiv
test
sbb
arpl
lea
dec
and
movsb
pop
adc
inc
mov
push
enter
and
and
mov
jb
ret
dec
inc
int3
lea
add
pop
lea
loopne
shr
in
add
pop
or
clc
mov
stos
push
cmp
xlat
lds
test
jno
jo
pop
outsl
pop
sbb
mov
test
outsb
stos
sbb
mov
fwait
in
lock
in
jb
adc
mov
nop
fwait
cmp
nop
jp
mov
dec
dec
loope
pushf
sub
lahf
cmpsb
cmp
movsb
or
negb
lret
popf
jb
ss
mov
popf
cmp
or
cmp
mov
jne
lret
nop
ret
fiaddl
adc
push
mov
loop
or
xor
push
cmp
dec
push
sbb
and
or
mov
insb
rcl
xor
and
test
dec
add
adc
xchg
popf
dec
sbb
repnz
or
fsubrl
pop
mov
in
sub
mov
daa
pop
sbbb
push
sbb
add
iret
pusha
mov
jb
shll
add
in
addr16
pusha
jns
repz
pop
inc
cmpsb
xor
jo
loopne
dec
mov
in
movsb
push
shll
push
adc
jg
lret
inc
hlt
stos
fstps
es
mov
sbb
lods
push
lret
dec
dec
or
subl
jb
push
push
arpl
cli
xor
adc
pop
lret
jb
cltd
in
mov
in
notl
insb
test
push
jo
lcall
loop
lds
and
std
push
lret
mov
xchg
loopne
pop
mov
in
test
lock
cmp
mov
jb
pusha
scas
push
inc
mov
and
push
xchg
pop
rcrl
jne
and
xchg
xor
push
movsb
mov
mov
mov
push
loopne
stos
js
mov
jb
aam
dec
jp
addl
lods
arpl
xor
mov
mov
je
loopne
xchg
gs
mov
cmp
sbb
mov
jp
sarb
fbstp
mov
fcompl
cmp
mov
and
add
mov
cli
in
push
jno
mov
out
mov
repnz
dec
fnsave
adc
lods
fdiv
and
pop
or
stc
das
xlat
fdivl
or
pusha
inc
jno
pop
cmp
mov
repz
es
add
movsb
mov
xor
stc
pop
out
mov
ret
cwtl
adc
mov
inc
inc
mov
xor
mov
in
in
stos
movsb
xor
inc
add
fldcw
cmpsl
idivb
das
loop
xchg
pop
lea
jbe
ret
mov
xor
movsb
stos
sub
sub
mov
mov
outsl
lods
fidivrl
xor
ja
mov
push
sbb
pop
mov
fldl
mov
jno
movsb
mov
outsb
insl
push
jp
sbb
xlat
xor
imul
mov
mov
xchg
mov
mov
ljmp
fucomp
lock
cmp
xchg
mov
lret
xchg
rclb
test
add
xlat
movsl
daa
inc
jne
stc
cmp
mov
repnz
mov
lret
test
leave
push
or
xor
cmp
in
push
xlat
scas
and
mov
jb
fs
mov
sbb
ljmp
dec
jno
or
aaa
lahf
or
cmc
xchg
lock
ret
scas
dec
jecxz
and
mov
push
mov
push
adc
ja
xchg
xor
mov
mov
xchg
xchg
sub
es
cltd
mov
outsl
push
outsb
xlat
mov
fsubrs
rorb
out
and
dec
jo
hlt
mov
pusha
ret
outsl
in
ss
mov
adc
mov
jmp
inc
mov
sub
mov
mov
mov
jl
data16
dec
daa
push
test
inc
xlat
mov
aad
icebp
mov
pop
jo
test
xchg
in
xor
rorl
lahf
daa
pop
sbb
rol
cli
sub
inc
fmuls
enter
push
dec
dec
imul
xor
push
out
ljmp
inc
xor
cmpsl
icebp
sub
fcomi
repnz
sub
imul
inc
scas
sub
ljmp
fstpt
in
pop
inc
jge
shrb
jge
jecxz
cmp
cmp
stc
and
fbld
jo
sbb
es
jo
jno,pn
sub
out
imul
and
push
push
push
dec
push
pop
rcll
jns
pop
pop
fsubrs
mov
pusha
aaa
sbbb
inc
inc
xchg
lock
ljmp
aad
cmpsb
xchg
rcll
jb
ret
push
sbb
xorb
bound
pushf
xor
daa
mov
xor
xchg
or
scas
jbe
push
fs
addr16
out
sbb
ja
in
loope
sbb
dec
sbb
sar
sub
xor
and
adc
rcrb
test
test
in
sub
or
sbb
aam
fs
add
lret
xorb
adc
movsl
sbb
cmp
pop
inc
rcrl
addb
push
leave
adc
jge
sbb
xor
ss
in
arpl
aad
loope
pop
lods
pop
mov
jmp
mov
stc
add
jmp
sbb
adc
les
fsubr
and
out
scas
adc
out
sbb
sub
jecxz
lahf
xor
mov
add
jbe
dec
xchg
adc
gs
bound
imul
sub
mov
stc
loopne
repnz
push
mov
int3
xchg
aam
or
push
or
sbb
adc
pop
jecxz
push
lods
or
adc
outsl
pushf
sbb
xchg
xchg
sub
pop
call
cld
push
sub
sub
pop
loop
imul
and
js
push
or
and
push
fs
lret
mov
mov
pop
fisubrs
in
adc
or
es
lods
pusha
jb
dec
or
imul
and
jb
in
pop
adc
test
push
jg
lret
push
mov
imul
call
pusha
scas
mov
nop
xor
or
push
sbb
lods
int3
or
and
mov
and
decb
adc
xor
lea
out
mov
les
imul
ljmp
movsb
rclb
cld
rorb
movsb
fisubs
mov
in
add
add
mov
xor
ja
movsb
mov
or
xor
lret
rolb
pop
lock
pop
and
mov
pop
movsb
mov
insl
scas
mov
adcl
popf
jno
fdivrl
add
out
bound
jno
ret
pop
scas
fadd
adc
lock
xor
call
pop
sbb
idivl
mov
cmp
ss
pop
dec
push
shll
loope
std
daa
push
jg
mov
xchg
add
leave
stos
out
adc
idivl
push
fsts
dec
push
or
fs
xor
xor
sarb
adc
dec
mov
stos
and
mov
mov
sub
sbb
fsubl
cmp
jno
jmp
inc
lods
push
fiaddl
ljmp
scas
out
jno
mov
cmc
movb
decl
test
jl
fs
add
jmp
fcoms
sbb
movsl
xchg
imul
xchg
es
stos
push
sub
pop
xor
pusha
loopew
hlt
pop
in
imul
mov
pusha
ret
ret
testb
clc
mov
or
addr16
int
and
xchg
xor
in
loopne
cwtl
scas
xor
dec
xor
or
js
sahf
sbbb
daa
in
pop
popf
dec
sub
dec
imul
fldl2t
inc
jmp
jecxz
mov
sub
pop
fs
xchg
popa
outsl
fsubl
or
jecxz
mov
ffree
lds
clc
pop
mov
scas
push
sub
int3
out
add
daa
jecxz
loopne
fs
mov
and
mov
hlt
dec
jno
call
dec
xchg
repz
iret
xchg
sbb
xchg
push
stos
bound
mov
in
mov
or
pop
mov
movsl
jb
inc
cmpsl
mov
add
mov
mov
in
gs
dec
cli
ret
imul
adc
mov
cld
test
sub
adc
push
sbb
insl
or
mov
jno
sbb
adc
push
and
lock
adc
je
stos
xchg
cmpsl
imul
cmp
dec
scas
imul
push
in
movsl
inc
xor
pop
scas
add
jno
and
popf
add
out
inc
pop
or
fmuls
sbb
lret
jno
fstl
pushf
into
cltd
aam
add
xchg
in
xchg
push
andb
jge
orl
push
push
cmp
lock
js
sbb
sbb
imul
out
sahf
sar
in
sbb
inc
jb
inc
mov
mov
insb
jno
rclb
xchg
sbb
in
mov
sub
cmp
and
sub
scas
lods
ret
fsubs
popf
outsb
push
mov
xchg
sar
adc
hlt
and
and
lods
and
mov
mov
adc
pop
pop
mov
ss
div
xor
cmpsb
test
xchg
mov
addr16
lahf
add
out
mov
mov
mov
daa
mov
lock
int3
mov
stos
adc
divl
lods
jns
xchg
outsl
bound
jbe
es
loop
cmp
lock
cmp
mov
jno
call
imul
les
mull
adc
int
aaa
fsts
fsts
mov
cmc
pop
xor
dec
mov
inc
int
sarb
mov
adc
sbb
lds
mov
dec
std
data16
movsl
or
jl
xchg
sbb
jb
int3
les
ljmp
sbb
in
push
movl
pop
test
jnp
sahf
xlat
or
xor
dec
lds
mov
push
jmp
or
adc
mov
pop
stos
cmpsb
pop
mov
jmp
stos
and
sub
nop
repnz
jl
outsl
jb
sbb
fildl
pop
enter
mull
mov
sbb
scas
xchg
in
xor
repnz
cmp
in
cli
cwtl
lods
cmpsb
lcall
ss
jno
or
add
pop
xchg
push
jbe
in
pop
idivl
push
inc
jb
dec
int3
movsb
movsb
imul
xor
call
jno
mov
add
sbb
and
repnz
imul
in
in
inc
mov
xchg
adc
fsub
xor
sti
iret
es
jecxz
or
adc
testb
mov
mov
imul
xlat
mov
sbb
push
jmp
mov
sub
orb
mov
dec
mov
lahf
pop
repz
and
notb
and
adc
inc
rcrb
dec
fstpl
and
sub
shrd
pop
and
gs
enter
leave
dec
adc
imul
es
fs
and
int3
push
and
testl
gs
or
sarl
sbb
arpl
and
dec
inc
and
rcrl
mov
pusha
xchg
mov
int3
cmp
int3
cld
stos
xor
or
cmc
stos
daa
dec
push
xchg
mov
sub
lcall
in
leave
cmc
mov
cli
or
cmp
ret
js
and
scas
pop
or
repnz
push
mov
out
cmpsl
in
inc
in
pop
sub
or
dec
and
jl
or
lock
mov
repnz
cmp
push
cs
aas
cmp
loope
push
bound
mov
stos
and
negb
pop
xchg
ret
sbb
add
jno
bound
pop
mov
xchg
inc
sub
stc
or
mulb
ja
xor
popa
push
rorb
mov
add
cmp
popa
mov
sahf
adc
cli
sahf
lods
loope
in
data16
popa
add
dec
fcomps
mov
jne
movsl
adc
push
iret
dec
cwtl
mov
cmp
mov
jb
push
jp
xchg
jmp
loope
scas
push
pop
test
nop
lcall
xor
mov
mov
cs
movsl
mov
fimuls
and
test
mov
add
cmp
imul
aad
cmpsl
loopne
clc
mull
cltd
push
push
mov
lods
test
test
mov
mov
loop
ret
mov
dec
movsl
mov
xor
jmp
add
mov
add
push
inc
cmp
repz
lret
pop
lahf
stos
push
mov
scas
cmpsl
lock
and
sub
adc
cmp
sbb
push
pop
jle
or
mov
or
mov
pinsrw
pop
jo
jno
rorl
jbe
shr
in
out
jmp
dec
fsubl
push
test
lcall
xchg
xchg
xchg
fsubl
imul
into
ficompl
add
xor
adc
je
mov
mov
addr16
in
arpl
aaa
sbb
call
jae
xchg
dec
sarl
xor
cmp
push
pop
xlat
xchg
sahf
adc
mov
push
adc
cwtl
sbb
out
or
scas
mov
fisubl
es
pop
xchg
push
pop
mull
mov
sub
or
dec
imul
hlt
in
sub
and
xor
lock
ficoms
loope
lods
in
mov
pushf
add
jb
mov
jp
mov
mov
pop
mov
mov
ret
add
andl
or
data16
in
sub
sahf
xchg
pop
mov
jae
lret
cmp
sub
sbb
out
scas
pop
in
xchg
ss
insb
out
es
pop
cmp
xchg
or
ficomps
insl
fwait
mov
js
or
jg
test
mov
ret
insl
mov
push
ljmp
mov
fwait
les
es
clc
inc
paddq
ds
lock
arpl
jno
int
fstps
out
ljmp
or
movsb
jo
movsb
jnp
lods
jo
insl
lret
in
movsl
lea
sbb
xchg
call
sub
pop
inc
pop
mov
mov
mov
std
es
add
cmp
movsl
jbe
ficoms
xor
testl
loop
cmpsl
and
xchg
push
test
icebp
push
mov
xor
pop
and
cmp
cmp
addl
out
pop
sbb
call
mov
mov
and
movsl
icebp
idivl
sub
loope
dec
fwait
xor
dec
jb
or
ljmp
arpl
pop
lods
sub
mov
xor
jb
jne
daa
lock
cli
lock
cld
in
xor
add
jnp
mov
testl
mov
lock
cld
lret
pusha
shlb
mov
stc
xor
ret
stos
sbb
sbb
scas
cmp
mov
ror
push
popf
int3
lcall
arpl
pop
cmp
pop
pop
es
and
jns
test
lods
lret
xor
and
inc
push
inc
and
add
nop
mov
mov
adc
jno
push
aad
aas
les
push
xchg
loopne
aad
popa
les
hlt
je
xchg
add
addr16
es
mov
jno
mov
lods
inc
xor
jmp
nop
int3
lret
pop
imul
xchg
out
call
fs
aaa
cmc
and
mov
faddl
fsubrl
cltd
push
or
add
andl
test
and
xor
lcall
in
or
fwait
mov
test
pop
or
mov
sub
sahf
pop
sbb
icebp
sub
dec
fwait
cmp
add
cld
xor
daa
jo
lock
sbb
mov
fidivrs
mov
mov
xor
xor
iret
ret
mov
aam
in
mov
mov
int
xor
push
in
push
outsb
mov
movsl
call
jns
sbb
enter
cs
fs
sbb
mov
fbstp
insb
imul
fcomps
sbb
arpl
mov
mov
pop
sub
mov
inc
cmp
or
mov
and
pop
mov
cmp
repnz
scas
sbb
and
aad
in
cmp
add
aas
mov
ror
movb
rcl
test
cs
rcll
add
loope
lahf
scas
inc
rorl
addr16
mov
jmp
rcr
addl
sub
daa
shlb
pop
sub
addr16
bnd
pop
dec
lea
call
mov
andl
sub
mov
cmp
sbb
sbb
jns
outsl
pop
mov
jo
hlt
push
daa
mov
jbe
push
int3
jl
in
stos
pop
adc
dec
ss
dec
aas
mov
movsb
xor
pop
ljmp
dec
push
push
push
push
cmp
xor
dec
fcomps
imul
or
inc
fs
jp
lock
fwait
lods
jle
xor
cs
add
int
repz
dec
in
sahf
cli
fsubr
push
out
pop
sbb
aaa
push
or
cld
or
repz
mov
clc
sub
sbb
stc
out
adc
loope
or
mov
mov
insb
xor
and
jmp
jo
fwait
addr16
inc
sub
shl
dec
jge
push
out
xor
out
scas
add
cmp
lds
cld
cld
and
dec
jns
pop
scas
add
hlt
inc
sbb
mov
push
inc
cli
mov
push
movsl
jns
cmpsb
cld
ljmp
push
cwtl
push
ljmp
sbb
lods
shll
insl
sub
mov
mov
in
dec
cwtl
mov
jmp
aaa
in
lods
and
push
jbe
or
fs
scas
shl
lret
lods
mov
jecxz,pn
bound
inc
aaa
or
nop
lock
cmc
sub
mov
es
and
icebp
mov
xor
in
fsubs
cli
pop
sbb
push
fisubrs
jle
jne
icebp
and
ljmp
loop
and
mov
iret
stos
mov
add
sbb
ss
lret
mov
cmp
pop
fcompl
mulb
shll
xchg
push
mov
out
fs
xor
in
aaa
pop
call
sbb
push
or
lret
add
or
fiadds
lret
lock
and
adc
mov
push
mov
stos
mov
shll
mov
and
dec
in
arpl
lock
xor
pop
mov
ret
push
bound
lahf
or
pushf
out
fistpll
test
shrl
jecxz
mov
fwait
ds
and
inc
sub
lods
addr16
sti
cmc
aaa
testb
dec
in
stos
push
fidivl
cli
and
cmp
sub
loopne
adc
push
or
push
outsb
ret
jo
sub
mov
lret
dec
xchg
pop
test
pop
es
idivb
out
push
mov
stos
lods
dec
bound
mov
and
mov
inc
or
movsl
loope
lcall
repnz
push
xchg
sub
pop
pushf
mov
inc
popa
mov
inc
sbb
mov
je
cmp
loopne
push
stos
hlt
inc
out
add
dec
mov
push
lret
fldcw
and
sbbl
dec
pop
push
and
and
push
aaa
lret
sbb
sbb
sbb
pop
fisttpl
fbld
sub
clc
dec
lock
mov
mov
mov
ja
into
cwtl
sbb
and
sbb
xchg
fs
mov
lret
cmp
push
sub
cmp
sbbb
loopne
int3
out
mov
negb
xlat
iret
repnz
rcll
sbb
lods
push
dec
enter
pop
aad
rcrl
test
dec
sub
add
xchg
mov
ljmp
xchg
test
in
dec
cmp
lods
inc
sbb
pop
in
sub
pusha
frstor
mov
mov
pop
les
sub
sbb
inc
sbb
mov
xchg
pusha
shlb
xchg
pop
and
dec
mov
lahf
and
into
sub
mov
sarb
push
jb
push
int3
inc
std
push
mov
mov
mov
ljmp
bound
es
insb
roll
add
gs
and
push
adc
sub
cmc
int3
push
mov
or
sub
stos
in
outsb
jno
fsubs
mov
insl
fnstenv
out
mov
mov
mov
mov
pop
outsl
add
bound
and
sub
insl
add
pop
ret
lea
mov
pop
ret
loop
mov
stos
push
cltd
stos
outsl
cld
mov
cmp
mov
insl
xchg
imul
inc
sbb
mov
pop
pop
push
mov
jnp
into
mov
push
xchg
inc
mov
and
imul
iret
push
mov
repnz
cld
les
mov
mov
bnd
inc
hlt
sbb
ljmp
stc
mov
inc
dec
jo
repnz
jb
cmpsb
pop
pop
mov
cwtl
dec
cltd
xor
repnz
pop
xorb
push
fwait
sub
mov
sub
cld
or
test
push
inc
jb
xchg
mov
or
outsl
mov
xor
lods
dec
cmc
lods
orl
sub
enter
ljmp
xor
push
push
xor
jecxz
xchg
and
push
repz
and
stos
pop
push
ja
test
fs
lods
loope
xor
xor
cmp
loop
pop
cli
pusha
cmp
test
loope
rclb
push
jns
gs
mov
xlat
outsl
ficoml
and
pop
xchg
xor
pop
int3
jecxz
insl
inc
mov
xor
pop
loope
push
dec
call
cli
loop
and
pop
xor
jmp
inc
in
push
arpl
adc
into
sbb
mov
jns
outsb
mov
es
or
cltd
sub
ljmp
es
in
fwait
daa
sahf
sub
jb
lock
shrb
mov
in
adc
divb
sub
nop
xor
lret
lock
enter
test
or
push
dec
fidivrl
mov
inc
dec
pushf
hlt
jg
pop
shl
cli
in
cmp
mov
xor
out
ja
daa
jge
mov
lcall
rcrl
inc
cmc
cld
orl
sbb
sbb
inc
adc
and
jo
sub
push
cmc
iret
in
dec
mov
sbb
mov
add
push
shrb
repz
xor
mov
fdivrp
imul
jnp
inc
loope
inc
gs
ljmp
lock
imul
ret
cmp
xor
or
scas
mov
jle
jno
jno
ja
pop
data16
sub
hlt
jo
mov
pop
mov
adc
sbb
jo
out
push
imulb
shl
test
mov
lock
dec
or
push
out
lock
fcmovnu
jbe
cmp
mov
stos
call
fbld
and
and
jo
xchg
and
das
xchg
cs
scas
inc
fisttpl
repnz
sahf
xchg
sbb
dec
nop
movsl
aaa
lock
mov
mov
lcall
and
sub
dec
std
pop
sbb
xchg
sbb
lock
enter
rorl
gs
cmp
ret
push
ret
or
movsl
sbb
pop
cmpsl
xchg
in
ljmp
or
mov
xor
dec
cmpb
out
mov
xlat
pop
movsb
gs
cs
pop
xor
test
dec
or
in
cmp
sahf
mov
xor
ljmp
push
js
sbb
ficoml
adc
fstpt
in
cmp
sub
in
loope
mov
mov
pushw
jo
hlt
loop
and
push
adcl
dec
dec
lea
loope
je
out
scas
fimull
xor
lret
ss
push
mov
sbb
clc
and
sbb
iret
mov
cmpsl
icebp
pushf
daa
mov
mov
push
add
pop
nop
mov
xchg
push
dec
or
in
aaa
icebp
or
imul
mov
adc
or
adc
testb
mov
jo
clc
loope
mov
xchg
bound
sahf
and
arpl
pop
mov
inc
rorl
cli
int3
xchg
jp
lcall
or
sbb
test
stc
fwait
stc
dec
cmc
pop
shll
pop
mov
scas
jmp
xchg
pusha
pop
iret
lock
and
das
mov
test
in
enter
das
es
lcall
inc
xor
mov
and
jns
mov
loop
jmp
push
in
daa
in
lock
frstor
inc
lret
mov
mov
lock
outsb
out
movsl
fdiv
pushf
jno
insl
or
outsb
out
dec
insl
push
mov
ficompl
and
pop
push
mov
add
fstps
out
jne
stos
pop
pop
push
je
jo
xchg
jp
jns
mov
inc
and
dec
int3
sahf
clc
scas
jmp
mov
push
and
sbb
adc
call
gs
xor
std
dec
call
movsl
xchg
cmp
cli
imul
xacquire
mov
int3
cmp
jp
gs
bound
data16
in
movsl
mov
aam
mov
rcr
and
pushf
cld
loope
and
imul
pop
stos
int3
xchg
pop
push
rclb
in
jb
push
adc
loopne
movups
sahf
or
or
ds
mov
and
mov
imul
jne
adc
mov
dec
stos
mov
jge
into
fisttpll
mov
icebp
loope
mov
xor
cmp
and
dec
scas
pop
adc
je
pop
orb
adc
stos
movsb
adcl
sbb
push
push
inc
push
push
mov
jecxz
addr16
popf
pushf
ret
dec
and
adc
in
popa
cs
in
mov
jne
and
jecxz
sbb
xchg
test
bound
cmp
nop
xchg
icebp
xor
lahf
add
inc
pop
test
mov
in
xor
ljmp
pop
jmp
xor
sbbl
lea
jecxz
push
pop
add
dec
push
fnsave
fs
pop
xchg
or
sbb
insb
jg
add
ds
shll
jge
and
icebp
mov
call
inc
pusha
lods
aam
fwait
and
sti
movsl
mov
sbb
popf
pushf
jb
sub
mulb
jmp
pop
insl
icebp
jo
outsb
mov
pop
push
lock
or
inc
insb
xor
int3
aaa
mov
fcmovb
pop
lea
filds
push
push
repz
adc
in
mov
lods
xchg
scas
mov
out
stc
inc
ret
inc
and
xchg
jecxz
xchg
cmp
out
push
add
flds
mov
mov
icebp
dec
push
jecxz
popf
add
mov
cltd
daa
push
jg
sub
mov
pop
lret
mov
cltd
push
adcb
mov
sbb
jle
movsl
popf
cmp
aaa
sub
sub
dec
mov
in
rcrb
aaa
inc
sbb
pop
jmp
adc
fistpll
and
xchg
cmp
vmread
ret
push
jge
clc
loop
call
lcall
cmpsb
sub
sahf
and
cwtl
inc
inc
ds
ss
jle
jle
xor
test
cmp
leave
push
xor
fisttps
or
lcall
subb
faddl
data16
jle
addr16
shll
inc
cmpsb
jnp
push
scas
ljmp
shrl
add
insl
cmpb
and
mov
int3
jbe
sbb
dec
ljmp
fwait
xlat
in
bound
xchg
lock
pop
xor
imul
imul
pusha
xchg
pop
xor
dec
sub
xchg
cmc
or
daa
bound
push
call
push
or
dec
sub
outsb
inc
movsl
lret
scas
add
sti
add
mov
and
and
test
int3
out
out
fisubrl
gs
scas
outsb
lods
clc
xor
adc
sub
stos
jb
pop
fcom
sub
push
jecxz
xchg
pop
lcall
fcmove
divb
fsubrl
mov
in
sub
out
sbb
divl
jmp
jl
ret
fstpl
pop
pop
pop
and
scas
out
test
insl
push
cs
xor
or
sbb
ljmp
cmp
cld
rcrl
mov
outsl
jbe
cmp
fwait
push
arpl
pop
mov
cwtl
lods
or
jb
rcr
dec
push
scas
test
or
ljmp
mov
ljmp
push
stos
cmpsb
gs
xlat
loope
lahf
xor
pop
inc
aaa
cli
ds
int
fnstsw
pop
lcall
sbb
rorl
mov
inc
mov
jnp
adc
imul
lock
sub
popa
sbb
fsubs
pop
divb
sub
push
jecxz
push
adc
or
stc
jecxz
jb
adc
add
xchg
outsb
adc
mov
mov
xchg
sub
cmc
xor
dec
mov
push
xor
and
ja
jns
fs
jbe
and
repz
adcl
xor
xor
jne
ss
add
mov
subb
mov
xor
jp
jns
ret
ljmp
scas
pop
stos
bound
adc
stos
test
lcall
fdivrs
mov
data16
pop
mov
imul
push
loope
fwait
shlb
lahf
lcall
sahf
insl
lret
fisttpll
sbb
aam
rorl
arpl
iret
and
roll
sbb
pop
scas
push
jl
adc
decb
or
ficompl
scas
sbb
sbb
outsb
push
pusha
push
sbb
stc
sbb
xlat
cmp
xchg
sbb
mov
mov
mov
cmc
xor
inc
mov
lcall
pop
mov
xchg
enter
gs
icebp
mov
inc
ret
mov
mov
shrl
lods
sub
push
ret
fadd
inc
and
mov
repz
pop
repz
mov
movsl
xlat
lret
add
rcrb
imul
movsl
push
push
imul
mov
or
popa
fsubrs
das
xchg
xchg
mov
mov
mov
mov
pop
mov
or
and
mov
jo
fwait
in
gs
ljmp
or
nop
xchg
scas
cs
sbb
cld
xor
sub
mov
dec
cli
andl
push
pop
fcmovu
fisttpl
mov
in
pop
dec
xchg
outsb
ja
icebp
stos
xchg
sbb
loopne
add
cltd
cltd
mov
jo
stos
mov
out
notl
pop
shl
mov
in
mov
jb
popa
xchg
mov
aad
into
push
and
push
in
sub
mov
les
loopne
dec
jb
icebp
or
hlt
cmp
jb
mov
xchg
jno
lock
fwait
sbb
mov
sub
pusha
push
push
sub
pop
stos
lahf
jge
in
lea
lods
stos
push
leave
xchg
sub
dec
fwait
sbb
pop
pop
adc
sbb
and
test
loope
inc
push
mov
xchg
loope
adc
scas
inc
fnsave
rorb
or
dec
aaa
in
loope
lret
loop
jmp
subb
popa
sti
cmp
cmpsb
in
rcrl
outsb
ljmp
cmp
sub
ljmp
mov
jno
int3
lds
out
cli
mov
pusha
clc
mov
xchg
mov
xchg
addr16
mov
in
and
inc
pop
popf
cs
jmp
inc
xchg
sub
movsl
insl
mov
xchg
lcall
imul
xlat
xchg
loopne
into
aaa
mov
push
pop
shl
in
sbb
cmpsb
lret
pop
cld
sub
test
sub
inc
jo
stos
cs
stos
or
scas
in
in
outsb
jg
cmpsl
nop
cmp
inc
add
icebp
fimuls
pop
in
cmp
fs
sbb
std
mov
sbb
fldenv
not
adc
adc
in
xlat
sub
nop
lahf
xor
imul
mov
adc
jg
sub
adc
loope
pushf
mov
mov
inc
movsl
xchg
imul
clc
lahf
adc
fwait
xor
jmp
jp
loopne
jno
data16
add
pop
mov
mov
loopne
push
mov
into
lods
jno
mov
jb
sub
into
and
rcll
sbb
or
mov
mov
mov
pop
jb,pn
ret
fs
pop
push
and
nop
mov
mov
push
jbe
aaa
insb
jb
xchg
fistps
lret
sub
add
out
adc
lret
add
and
lcall
das
mov
rorb
test
adc
adc
lods
push
push
sbb
shr
call
inc
sub
rclb
aas
movsl
xchg
jno
int3
push
popf
rcpps
push
mov
sub
dec
cmp
inc
in
adc
cs
scas
loopne
adc
xor
dec
aaa
ljmp
aam
push
ret
cmp
or
cmpsl
pushf
add
dec
push
jg
adc
movsb
sahf
outsb
pop
icebp
jo
mov
add
jno
iret
aaa
shll
fistpll
stos
loopne
popf
add
ljmp
or
insl
xor
fs
jo
mov
mov
and
mov
sub
mov
and
test
fs
xor
push
adc
mov
mov
adc
testl
jo
push
adc
adc
dec
xchg
sbb
notl
leave
icebp
in
fnstsw
sbb
mov
lods
insl
stos
dec
out
lea
lods
adc
add
rolb
inc
dec
cwtl
pop
or
int3
push
clc
push
arpl
cltd
es
aaa
dec
fwait
dec
push
outsb
dec
in
in
fcompl
xor
in
add
or
push
inc
mov
push
sbb
inc
mov
pop
xchg
mov
fisttpl
daa
xor
idivl
shrl
cmp
mov
scas
adc
xchg
lods
xchg
dec
test
jae
fcompl
mov
sub
insl
mov
dec
mov
loope
pusha
das
mov
je
and
rclb
stos
inc
cltd
test
and
and
mov
aas
ret
bnd
ljmp
scas
shll
add
and
mov
fistps
adc
mulb
sbb
or
insb
mov
lcall
mov
test
lods
int3
mov
pop
jo
arpl
mov
dec
cmpsb
outsb
rclb
sub
data16
arpl
jns
cmpsb
movsl
in
and
mov
loopne
popf
and
adc
mov
jecxz
mov
xchg
mov
shr
ss
imul
and
aad
push
sbb
pop
pop
jmp
aas
fwait
sarb
push
ljmp
ret
cli
or
aad
adc
mov
subb
jno
push
pop
loope
lret
xor
jae
das
test
cmp
cmp
lahf
mov
jecxz
mov
dec
push
inc
pop
mov
out
pushf
ljmp
enter
push
mov
jb
lret
push
sbb
mov
sti
sbb
xor
movsb
xchg
mov
mov
jns
call
test
pop
rcll
fwait
jb
and
inc
jbe
xchg
dec
repnz
mov
loope
aaa
adc
rcrl
pop
or
pop
popa
inc
inc
lock
ror
dec
mov
std
sub
sbb
jo
add
mov
add
xchg
hlt
lea
cld
sbb
jb
push
ja
lret
ja
push
push
pusha
mov
fldcw
sbb
mov
mov
jo
enter
stos
scas
sbb
add
ja
neg
xor
popa
xlat
dec
fcmove
in
aaa
mov
cmpsl
test
ds
sbb
mov
adc
cmp
push
and
andb
repnz
xor
fiadds
sti
stc
rolb
cwtl
stos
ljmp
mov
mov
testb
jp
imul
xchg
sub
jecxz
adc
in
out
shll
stos
push
insl
dec
inc
inc
or
sbb
inc
push
inc
daa
xor
mov
mov
lods
dec
mov
sbb
fmull
jle
shll
mov
movsb
push
add
and
adc
or
push
aam
dec
and
stos
mov
add
repnz
pop
fdivr
in
arpl
shll
sub
jo
push
pushf
push
cmp
pop
xor
pusha
and
jb
stos
lock
data16
sbb
and
sub
pop
test
pop
scas
sbb
gs
inc
in
mov
mov
xchg
sbb
rcl
cmpsb
scas
push
outsb
movsl
filds
dec
movsl
imul
arpl
dec
ljmp
xor
adcl
mul
pop
and
xor
movsb
cltd
sarb
or
xchg
mov
sahf
imul
sub
push
lahf
popa
jmp
es
bound
or
mov
lock
xor
mov
addr16
divb
incb
lods
mov
loopne
cld
divb
jo
icebp
scas
mov
sbb
or
lods
jmp
jp
cmpsb
out
les
notl
xorb
setno
dec
xchg
outsl
mov
inc
loope
push
mov
push
xor
mov
jns
cmc
and
jb
int
stos
in
jae
sbb
cmpsb
inc
loop
mov
popf
lods
cmp
and
mov
sub
mov
mov
bound
aas
or
in
xlat
cltd
push
sub
bt
mov
pop
dec
cmp
lret
in
jo
int3
es
movsl
push
mov
fimull
add
add
sahf
or
aaa
and
cmp
and
es
xor
das
pop
outsb
or
out
cld
loop
xchg
cmp
inc
xchg
outsb
mov
or
stos
sub
dec
lret
mov
fmuls
jg
subl
jb
cmp
pop
ja
fbld
cltd
adc
sbb
stos
push
adc
dec
imul
in
nop
stos
push
repnz
gs
in
sub
icebp
sbb
xlat
lock
sub
in
insl
sub
adc
lea
scas
push
pop
push
xchg
xlat
insl
das
shrl
and
clc
imul
arpl
push
rcrl
mov
outsl
mov
and
mov
insb
pop
push
jo
and
sbb
out
in
cltd
xchg
cli
int3
xor
jle
imul
mov
xorl
stos
and
aaa
pop
int3
push
cmc
mov
fisubrl
lods
jns
lahf
xor
call
movsl
cmp
stos
mov
mov
jecxz
mov
repnz
loope
cld
lods
mov
sub
sub
pop
cmp
jg
sti
loope
stos
imul
icebp
and
and
insl
inc
adc
mov
cmc
shlb
idiv
inc
mov
xor
ja
mov
adc
gs
arpl
or
nop
sub
mov
ret
push
and
mov
push
xchg
jmp
pushf
lock
bound
insb
std
fsubrl
or
movsl
icebp
daa
sarb
bound
rcl
push
mov
pusha
xchg
push
call
or
filds
test
loope
fisubrs
jne
test
cmpsb
rclb
lods
mov
xchg
pop
mov
fidivl
scas
popa
xchg
mov
cmp
shl
idivb
add
mov
xchg
test
mov
jp
inc
pusha
loope
add
dec
dec
inc
and
popf
lods
std
mov
dec
fnstcw
pop
mov
push
mov
push
repz
sbb
cs
and
mov
int
bound
jg
mov
mov
mov
xor
mov
jecxz
mov
mov
lods
mov
xchg
add
push
cld
push
aas
mov
mov
pop
sbb
mov
fs
in
dec
popa
sbb
std
xchg
sbb
pop
xor
in
es
inc
call
popa
mov
sbb
sbb
mov
jno
mov
add
xchg
push
movsl
dec
fbld
pop
movsl
mov
idivl
fidivs
jmp
pop
es
sub
scas
mov
stos
cmp
stc
negb
jb
movsl
cld
jae
fnstsw
push
cmp
pop
push
pop
jg
fidivrl
jp
out
iret
mov
imul
repnz
cmp
cld
test
xor
inc
adc
test
pusha
sahf
pop
notb
fistpl
xchg
push
inc
out
xor
mov
insl
loope
repz
inc
sub
arpl
push
lret
fstps
dec
sahf
incl
xor
or
test
pop
int3
push
bound
movsl
xor
imul
mov
dec
mov
hlt
cli
add
in
mov
fcoms
sub
repnz
xchg
push
adc
jecxz
lahf
adc
add
sbb
es
loop
imul
sti
leave
aaa
stc
fisubrl
push
test
inc
and
and
cmp
insl
sbb
push
cmp
das
inc
fidivl
shl
dec
jb
pop
mov
jle
jnp
jb
imul
jb
ret
sbb
rcll
je
shlb
cmp
sub
mov
leave
mov
lcall
movsl
stc
rcrb
pop
adc
push
bound
sbb
fstpl
es
jb
inc
jnp
test
mov
dec
jl
psubsb
repz
push
dec
outsb
jno
xchg
insl
push
stos
lret
pop
es
push
mov
scas
dec
xchg
rcr
cmp
cmpsl
lds
xchg
sbb
shlb
es
xlat
jo
fs
gs
jge
lods
lods
outsb
gs
pop
xchg
add
cwtl
sahf
outsl
jo
sub
jb
aaa
fiaddl
aad
insl
and
dec
jo
filds
test
push
fs
repnz
sbb
sarl
inc
into
test
jb
sbb
fidivrs
pop
bound
dec
nop
dec
lahf
pop
xchg
bound
cld
out
sub
decl
or
add
pop
inc
mov
dec
rclb
mov
arpl
ljmp
push
mov
jbe
xchg
mov
adc
mov
inc
outsl
loope
clc
and
mov
mov
lret
inc
mov
cmp
add
dec
scas
ljmp
mov
pushf
out
cmp
adc
adcl
sub
pushw
cs
cs
mov
cmc
inc
in
mov
xor
fmulp
out
cmp
lds
jmp
sarl
mov
xchg
xchg
icebp
sub
or
lods
js
test
jmp
pop
icebp
fiaddl
loope
scas
sbb
cmpsb
xchg
gs
mov
xchg
mov
or
mov
xchg
xor
sar
cmp
decl
xchg
cmp
je
lock
imul
dec
dec
jo
lahf
fwait
ss
fidivs
add
mov
sahf
filds
loopne
stos
es
ss
adc
cmc
sub
cmpl
lds
or
mov
outsb
cld
xor
jnp
mov
xchg
jg
jg
mov
jp
loope
fisttpl
mov
push
mov
xor
test
xchg
movsl
sbb
inc
pop
pop
out
add
stos
xor
dec
add
xchg
fnstsw
mov
pop
mov
dec
push
arpl
push
or
jmp
mov
push
or
js
push
popf
sbb
sub
mov
mov
push
xchg
dec
and
mov
cmp
and
bound
add
clc
or
cmp
lcall
sbb
insl
fwait
push
test
call
cmp
jo
stos
test
es
push
clc
xchg
jg
lods
call
ljmp
fldcw
adc
add
lock
scas
pop
fcompl
pop
mov
mov
push
ss
mov
inc
cmpsb
cmp
dec
push
fcmovb
pushf
sub
popf
xlat
div
mov
aam
shlb
pop
jnp
stos
inc
stos
outsb
and
pop
cmp
inc
fiadds
dec
shlb
loopne
jmp
dec
mov
dec
xchg
adc
xchg
push
push
sbb
outsl
add
mov
add
pop
push
mov
insl
les
aam
push
mov
es
push
or
pop
std
jns
push
imul
std
xor
je
lret
jb
xchg
lahf
mov
sub
out
push
fimull
mov
cld
movsb
dec
sbb
xlat
leave
xchg
jno
mov
xchg
push
mov
leave
ljmp
aad
mov
push
pop
rclb
xlat
mov
lea
shll
pusha
cmpsb
test
outsb
jb
aas
pop
xor
sbb
sub
sbb
and
inc
ds
in
in
in
loope
and
stos
and
adc
mov
and
jb
sub
clc
sub
pop
xor
sbb
add
adc
and
xor
movsl
addr16
inc
fists
mov
cmc
ja
mov
aaa
sbb
stos
sub
ja
jbe
xor
lahf
std
int3
inc
pop
je
sbb
hlt
arpl
daa
mov
sahf
mov
mov
shlb
cmc
fldenv
dec
imul
dec
and
adc
sub
cmpsb
fs
cwtl
mov
dec
popa
and
jns
sbb
mov
stos
pushf
cld
xor
mov
sbb
fldl
cmpsb
push
cmp
xchg
dec
pop
mov
inc
jo
pusha
sarb
enter
mov
out
adc
filds
mov
xor
fidivrs
hlt
mov
xor
lahf
ja
and
lds
ja
lea
add
imul
xchg
sub
cli
xchg
fldcw
mov
mov
adc
add
fwait
outsb
dec
mov
es
and
outsb
lock
rorb
movsb
adc
cmp
insl
stos
in
lret
in
or
lret
inc
gs
mov
adc
aam
add
cmp
mov
mov
leave
and
dec
outsb
and
out
mov
dec
cmp
jmp
push
jbe
mov
rcrl
inc
mov
ss
adc
push
rol
add
cmpsb
pop
xlat
jo
adc
sbb
sbb
add
aaa
mov
sbb
lret
and
repz
shlb
pop
mov
lahf
adc
fisubrs
or
jge
rcrb
mov
outsb
xlat
jb
push
sub
cmpsl
xchg
dec
jbe
sub
mov
sub
icebp
movsl
ret
sub
stos
adc
into
and
test
mov
mov
pop
pushf
xchg
adc
outsl
xchg
mov
mov
xchg
cmp
testb
bound
imul
lods
add
nop
dec
not
je
xchg
push
scas
outsl
lahf
cmpb
xor
lods
outsl
sbb
repnz
fwait
sub
stc
stos
pop
inc
pop
mov
pop
jb
or
sbb
in
ret
ja
outsb
mov
or
mov
fimuls
fs
mov
cmc
cmp
mov
stc
pop
icebp
pop
lock
mov
mov
fimull
and
mov
sbb
pushf
ss
cmp
mov
data16
pop
cmp
stos
mov
mov
cmp
adc
ret
cltd
pop
sub
lret
and
and
mov
lods
out
pusha
push
sbb
jb
push
imul
jo
aaa
les
insb
dec
fsubr
leave
adc
out
xchg
ret
out
ret
xchg
loop
jecxz
movsb
fwait
lods
sbb
data16
dec
mov
inc
ss
sbbl
push
rcll
ficomps
dec
mov
je
iret
adc
push
push
push
mov
cmp
and
insl
out
mov
loope
cmp
es
sbbl
in
pusha
aad
xor
pop
dec
sub
xchg
xchg
mov
cli
mov
aas
mov
bound
dec
dec
gs
sub
push
in
and
lock
ds
mov
jb
dec
fcompl
pusha
iret
sbb
cld
repz
popf
sbb
mov
adc
xor
dec
les
lcall
rorb
cmp
mov
jb
lock
in
mov
xchg
sub
enter
loope
adc
inc
std
mov
inc
orb
and
nop
adc
subb
insb
sahf
xlat
or
test
cmp
or
xor
je
lret
daa
sub
int3
aaa
insl
push
lods
jns
push
and
dec
jno
dec
mov
fsubrl
addr16
int3
shl
mov
std
mov
mov
fisubrl
cltd
mov
sbb
mov
ss
mov
scas
mov
adc
scas
jg
push
pop
cmpsb
in
cwtl
pop
rcr
push
xor
and
lods
mov
sbb
les
push
ss
sbb
sub
lret
movsl
fdivrl
xchg
xor
ja
jge
xor
mov
movsl
mov
lea
dec
jb
xor
mov
push
push
push
fisubl
sbb
xchg
adc
xchg
cmp
sbb
inc
sarb
jb
call
ror
ljmp
bound
sub
pop
jle
and
fsubp
lret
mov
xchg
xchg
bound
in
dec
aad
mov
stos
mov
subb
mov
pop
mov
outsl
xchg
fisubl
test
ja
es
gs
mov
sub
addb
xchg
pushf
jp
cli
push
movsl
aad
xor
rorb
mov
stos
sbb
faddp
popa
jmp
popa
inc
ja
sbb
add
mov
xchg
push
pop
and
pop
adc
lahf
daa
mov
sbb
rcrl
shlb
call
filds
jge
in
lods
loope
fcoms
mov
out
jb
es
out
sbb
cmp
movsb
outsl
fstpl
xor
bound
mov
aas
dec
add
lock
jge
cmpsb
push
fdiv
out
push
jb
or
shll
sub
repz
outsb
fs
jecxz
and
out
rcll
cmp
inc
or
in
push
mov
pop
lods
mov
xlat
adc
arpl
outsb
inc
in
fidivrs
cld
xor
jmp
add
push
or
xchg
mov
mov
sbb
je
mov
cmp
dec
adc
mov
cmc
xor
cmp
sbb
mov
xor
jle
ljmp
mov
bound
ret
call
pop
sub
pushf
sbb
adc
push
gs
test
imul
and
adcb
mov
aaa
and
push
bound
rcrl
ja
add
sahf
cli
test
outsl
xchg
cmp
dec
nop
pop
bsf
ljmp
outsl
and
mov
mov
lahf
push
xor
dec
mov
jno
pop
outsl
fwait
pusha
ds
sbbb
into
and
cmp
or
push
mov
mov
jl
adc
jmp
out
push
insl
dec
and
fistpll
mov
sub
pop
mov
arpl
pop
mov
inc
or
sub
inc
and
fmull
lret
adcb
sbb
inc
xorl
mov
mov
xor
xchg
pop
jo
sbb
in
loopne
outsb
add
std
lock
mov
neg
sbbb
push
pusha
scas
sub
inc
push
faddp
and
xlat
push
inc
dec
loop
je
xchg
and
lret
dec
ja
movsl
add
outsl
mov
in
sahf
mov
in
xor
xor
std
out
sahf
lods
fistl
or
pop
icebp
daa
lock
inc
mov
rcl
int3
pop
jo
fwait
sbb
mov
iret
popa
jmp
ret
fwait
getsec
mov
pop
cmpsb
ja
movq
pop
xor
fistps
data16
cld
pop
pop
insl
xchg
in
in
push
hlt
aaa
push
push
adcl
mov
sub
mov
pop
fstl
jae
fidivrl
jp
fwait
ss
adc
lds
insl
dec
adc
hlt
movsl
push
adc
jne
pushf
ljmp
xchg
jmp
mov
and
or
frstor
and
and
outsl
scas
es
rorb
aaa
sbb
xchg
pop
push
sub
bound
cmp
xor
mov
xchg
mov
jmp
dec
push
adc
shll
push
jmp
imul
mov
pop
popa
sti
cmpsb
push
out
std
das
xchg
add
mov
insl
lcall
cmp
sar
shlb
into
adc
xor
das
fdivs
sbb
cli
and
inc
mov
loope
xor
divl
loopne
cs
adc
mov
jb
xchg
insl
das
ja
cmp
jno
cmpsb
push
daa
xchg
cmc
sbb
sbb
jp
out
mov
dec
jo
jmp
jns
push
stos
jb
pop
imul
cmp
inc
dec
and
jb
push
add
adc
xor
adc
shll
mov
mov
orb
pusha
mov
ret
jb
mov
ss
xor
push
xchg
and
mov
imul
sbb
push
push
or
aas
es
or
leave
pop
rolb
xchg
fildll
rcrl
inc
mov
add
mov
and
jle
icebp
bound
aad
ljmp
add
mov
insl
rorl
es
outsb
xlat
cmc
push
sbb
jmp
lods
test
nop
fdivl
xor
xchg
je
and
aas
push
mov
sub
ss
mov
cmpsl
fwait
std
jae
insl
orl
pop
loopne
call
movsl
scas
cmpsb
loopne
xor
mov
jb
add
xor
stos
jmp
std
sub
dec
sahf
xchg
rep
shl
movsl
mov
fs
out
mov
and
dec
dec
sub
aaa
or
and
pop
mov
cmpsb
pushf
xchg
xchg
test
fwait
jb
mov
frstor
gs
cmp
ljmp
popa
int
push
leave
les
and
repnz
and
loop
add
faddl
cmp
lods
fwait
pop
inc
jbe
out
inc
aam
inc
dec
mov
arpl
std
xchg
push
hlt
dec
loopne
mov
les
orb
aaa
in
jno
or
mov
sbb
cmpsb
pusha
loopne
int3
imul
mov
jns
das
fistpl
and
cltd
leave
dec
lock
push
aaa
mov
arpl
movl
sbb
jnp
mov
je
xor
rolb
imul
aad
enter
in
cltd
fs
mov
cmp
movsl
sub
ret
sbb
xor
mov
cld
std
and
movsl
clc
sbb
aaa
imul
xlat
mov
mov
mov
sbb
xchg
ficompl
xchg
fwait
xchg
cld
pop
jo
test
or
push
es
jmp
xlat
pop
xchg
lock
sbb
pushf
sti
popf
push
jecxz
add
in
mov
jge
shll
sub
mov
ret
addr16
and
lock
mov
sub
imul
clc
out
fnstcw
aad
cmp
jb
mov
inc
mov
gs
out
or
pop
jmp
xor
jns
outsb
mov
in
pushl
mov
nop
xor
jne
cmc
int3
sti
jmp
jge
lods
scas
adc
jb
or
es
les
test
xor
stos
dec
or
cmp
dec
lahf
jno,pt
mov
fs
lods
dec
mov
inc
adc
dec
pop
xlat
add
jae
push
idiv
sbb
faddp
cmpsb
rcrl
lock
sbb
negb
push
stos
mov
sub
adc
cmp
sbb
jns
fidivs
mov
inc
jo
mov
and
pop
jl
sub
xor
pop
mov
push
data16
push
int3
fwait
cmp
sbb
push
cmp
pop
jge
data16
xlat
and
xchg
jmp
mov
mov
jo
mov
adc
adc
push
int3
jne
lahf
in
out
loopne
push
stos
mov
outsb
xchg
iret
dec
push
jecxz
lds
imul
mov
test
loopne
push
push
xor
mov
fisubrl
mov
mov
and
add
jl
icebp
push
adc
cs
inc
lcall
lcall
inc
subl
jo
xor
xorl
mov
lcall
adc
push
movsb
mov
push
scas
movsl
mov
sub
icebp
cmpsb
xchg
xchg
pop
xor
adc
or
fwait
xor
push
repz
cmp
lret
stos
lahf
mov
sbb
and
cmp
add
adc
and
jno
pop
dec
cmp
sbb
fs
dec
push
pop
call
aaa
adc
xchg
pop
int
movsl
push
sbb
xor
movsl
test
call
sub
movsl
and
mov
dec
fnsave
xchg
cltd
pushf
lods
stos
test
cmp
dec
lret
jge
lods
or
push
push
add
mov
out
mov
jns
sub
shl
mov
xor
or
push
cltd
sbb
mov
dec
push
movsb
lds
mov
incb
les
lock
mov
mov
in
inc
mov
adc
mov
jne
shlb
cmp
push
es
mov
jp
pop
pop
dec
es
adc
sub
or
imul
cmp
sub
rcrb
adcl
inc
pop
push
fsubl
mov
jnp
xchg
fists
cmpl
int3
inc
sub
sub
loope
xchg
aas
dec
jns
xchg
out
and
mov
sbb
mov
dec
pushf
xchg
insl
sub
or
lret
decb
fs
sbb
sub
xchg
lret
mov
jge
rcrl
scas
cmp
in
ss
add
insl
lahf
pop
lock
movsb
and
inc
xchg
dec
in
add
dec
outsl
data16
bound
lods
add
cmpsb
cs
mov
mov
je
repnz
scas
and
repz
fsubl
out
repnz
sbb
fnstenv
adc
popf
insl
jmp
aaa
and
lcall
fwait
sub
xlat
gs
mov
dec
addb
fsubs
ret
hlt
cli
pop
loop
std
pusha
and
sbb
inc
push
cmp
sub
mov
inc
loopne
xor
iret
or
xchg
mov
rcrb
mov
ljmp
negb
pop
dec
cmp
add
fwait
mov
push
mov
cmp
stc
xor
add
mov
mov
pop
lock
cmpb
sub
rcrl
ss
fcomps
dec
fwait
sbb
int3
inc
push
inc
ljmp
mov
arpl
ja
cmp
jmp
lds
adc
dec
ljmp
pop
and
jne
jbe
lahf
sbb
out
pop
push
pop
adc
jg
cs
or
push
lock
jne
iret
inc
adc
dec
ret
sub
and
fmuls
sbb
jle
sub
addr16
in
cmp
sbb
or
xchg
adc
and
jo
fsubrp
pushf
in
push
push
into
xchg
data16
inc
gs
jle
aaa
dec
jo
xchg
sub
add
in
sbb
add
cmp
mov
jb
mov
imul
outsl
iret
cld
rcrl
rclb
xchg
dec
adc
mov
sub
dec
mov
leave
xor
stos
and
push
leave
aas
push
sti
sub
mov
loopne
dec
cmp
dec
xchg
jmp
push
pushf
addr16
in
add
mov
push
popf
lahf
mov
dec
mov
daa
test
popa
inc
mov
repz
pop
cmp
aaa
sbbb
mov
pop
sbb
repnz
pop
inc
imul
mov
dec
cmp
cmpsb
add
push
sbb
jl
pop
mov
inc
stos
sbb
push
jno
add
sbb
mov
lds
sbb
pop
mov
cmc
xlat
int3
pusha
ja
xor
imul
mov
mov
jecxz
stos
jbe
scas
and
and
arpl
call
outsl
xchg
xor
leave
es
mov
loope
int
movsl
mov
mov
loopne
xor
lahf
mov
sbb
test
sbb
movsl
leave
sbb
iret
mov
mov
ss
sub
lahf
add
outsl
pop
enter
call
mov
xor
mov
jg
adc
ret
add
jbe
dec
mov
insl
pop
andl
stos
pop
pusha
shl
pop
movsb
inc
add
or
arpl
scas
lods
push
sub
ficoms
lcall
cmove
out
lret
dec
pop
mov
xchg
mull
popa
mov
jmp
sub
ret
scas
ja
add
iret
hlt
nop
nop
js
xchg
mov
movsl
push
or
pop
das
push
je
and
mov
or
testb
cs
push
and
pop
cwtl
data16
dec
andl
add
mov
bound
push
data16
ja
mov
adc
icebp
xchg
in
nop
cli
ljmp
sbb
jge
fwait
xchg
or
mov
jmp
xchg
sbb
and
add
ss
sbb
mov
les
fdivrl
std
sub
sbb
mov
mov
icebp
mov
jge
sahf
dec
fsubrl
xchg
mov
jbe
push
loope
dec
cmpsl
arpl
and
mov
mull
jb
fsubs
mov
xor
imul
or
lret
lret
loopne
lods
add
popf
cmpsl
out
fildl
ljmp
gs
sti
lcall
and
sbb
sbb
push
sbb
push
fistpll
push
repnz
and
mov
bound
xchg
cmp
lods
loop
ret
cmp
fisttpl
xor
pop
mov
scas
mov
cmp
mov
insl
lahf
data16
stos
test
fwait
shl
lods
cld
or
inc
lods
rorl
or
or
lcall
xchg
scas
jae
cmpsb
call
push
dec
shlb
jmp
inc
lods
loopne
int3
movsb
insl
push
add
aaa
sbb
lret
xchg
fmul
dec
jo
push
adc
mov
fstp
test
and
mov
or
mov
les
xchg
mov
and
imul
mov
mov
sub
dec
fnstenv
sub
xchg
sub
fwait
mov
gs
rcrl
jl
decb
and
mov
cltd
jns
cmpsb
ss
popa
popf
or
enter
fidivs
push
and
xchg
xor
adc
out
mov
cwtl
mov
cmp
sbb
jp
call
jg
sbb
loopne
pop
mov
mov
or
mov
in
ja
divb
mov
divl
sbb
out
lock
jno
rcl
and
sbb
sbb
or
imul
sbb
mov
into
xor
push
mov
in
test
cli
xor
movsb
mov
push
push
xchg
cmp
mov
add
dec
mov
in
rcr
movsb
outsb
mov
pop
jno
jbe
lods
or
insl
jae
xchg
add
rolb
lods
mov
xchg
lret
mov
lahf
inc
mov
mov
mov
adcl
xchg
popf
shlb
push
jp
fcomip
xchg
xchg
ret
mov
gs
push
jno
mov
jb
mov
lcall
int
loope
dec
jo
out
mov
lret
pop
in
movsl
push
imul
jo
sub
cld
dec
inc
cmp
mov
jnp
dec
pop
sub
lret
mov
scas
cmpsb
xchg
and
lret
jl
dec
or
adc
bound
in
iret
mov
push
out
out
pop
adc
xlat
xchg
dec
mov
sub
xor
lret
imul
push
adc
es
mov
lea
mov
mov
and
fnsave
pop
adc
dec
xchg
jmp
fcmovbe
mov
xchg
out
sahf
test
push
sbb
and
jmp
out
cmp
test
mov
fdivrl
mov
sub
sti
mov
fdivp
loopne
mov
je
aam
add
dec
repnz
dec
shll
pusha
or
inc
cmpsb
std
and
and
dec
popa
mov
gs
sbb
lret
xor
sbb
mov
xor
pusha
mov
and
lock
mov
out
or
cs
sub
inc
cs
repnz
push
and
loope
cmp
subb
adc
sub
in
sbb
adc
imulb
ficoml
mov
pusha
jnp
jne
mov
mov
popl
mov
leave
pop
arpl
aaa
loope
mov
cli
adc
pop
dec
popf
adc
pop
adc
lock
mov
movl
adc
sbb
nopl
sbb
loope
mov
shl
jle
inc
aas
adc
xchg
push
test
movsl
xor
sbb
call
lock
cmp
mov
jmp
jbe
jecxz
fs
and
pop
dec
lret
je
lahf
mov
add
nop
mov
shlb
loopne
loopne
xchg
or
mov
push
sbb
testb
jbe
data16
mov
repnz
in
mov
push
stos
mov
adc
dec
mov
insl
lock
xor
adc
add
mov
pushf
data16
arpl
mov
out
in
int3
push
aaa
dec
xor
push
or
pop
repz
jno
adc
movsb
xor
stos
sub
mov
dec
stos
or
mov
lcall
scas
lods
pop
icebp
aas
xchg
push
fiaddl
xlat
movsl
sub
xchg
popf
inc
icebp
daa
xchg
add
loopne
sub
pop
xor
sti
lea
int
adc
es
xlat
push
sahf
inc
lcall
fldenv
int3
xor
sbbb
insl
adc
iret
insl
imul
roll
rorl
rcr
jb
add
in
movsb
lods
and
jge
mov
sub
cli
jl
mov
mov
mov
jne
and
outsb
mov
mov
jo
xorl
clc
mov
pop
push
stc
xor
push
xchg
jno
lcall
wrmsr
lea
push
repz
in
push
movsl
inc
xor
sub
insl
xor
lods
js
cmp
mov
addr16
pop
lret
mov
in
cmp
jo
jp
imull
icebp
pop
lahf
imul
jae
adc
mov
sbb
fs
sbb
cld
mov
jno
xchg
sbb
insb
and
out
xchg
jecxz
push
add
lea
or
cmc
sub
cltd
repnz
in
cmp
dec
popa
mov
cmpsl
inc
test
xchg
fdivp
fcoml
fists
mov
add
mov
mov
lcall
add
pop
mov
mov
pop
or
movsb
sbb
lahf
push
mov
repnz
clc
cmpsl
shll
sub
cmp
mov
lock
cld
mov
dec
push
rorb
jb
cmpsb
add
or
out
cli
and
dec
gs
sub
rolb
sub
jo
sub
mov
pusha
xorb
and
adc
cmp
inc
xor
sbb
filds
jns
inc
movsl
inc
fistpl
xor
mov
and
insl
mov
mov
insl
test
inc
jnp
pusha
out
loope
cmp
popf
imul
jne
enter
mov
aaa
and
cmp
add
outsb
imul
pop
inc
mov
mov
sbb
sub
mov
call
aaa
rcr
push
cmpsb
cmpsb
mov
jbe
cmovno
pop
mov
jmp
mov
in
lcall
mov
shrl
pop
ja
dec
sub
or
inc
sarl
push
cmpsl
push
sbb
xchg
sbb
into
mov
mov
movsb
mov
fidivs
fwait
ret
mov
nop
dec
sbb
dec
cmp
mov
mul
pop
shr
mov
nop
mov
inc
loop
popa
dec
shlb
mov
roll
mov
adcl
stos
add
inc
es
lds
push
inc
push
xor
and
xchg
pop
mov
add
jecxz
mov
xor
outsl
pop
repnz
sub
mov
mov
adc
mov
outsb
out
in
push
sub
and
inc
xlat
sbb
xchg
icebp
lret
shll
lods
je
push
pop
imul
pop
cmpsl
jmp
jne
sub
cmpsb
push
xchg
push
sti
in
and
fwait
and
sub
sbb
outsb
adc
jl
bound
jmp
xchg
in
jge
jo
jge
xor
popf
pop
aad
mov
int
mov
xchg
add
or
xchg
adc
std
iret
dec
sub
adc
loope
cmpsl
arpl
cmp
imul
les
dec
stos
lods
sbb
loop
fs
shll
or
faddl
ret
cli
leave
add
not
fbld
pop
test
xchg
push
insl
dec
clc
sbb
ljmp
dec
fst
mov
pop
jmp
cmc
fiaddl
inc
xlat
repz
pop
cmp
adc
sti
xor
in
sbb
sti
or
jno
cmp
test
dec
pop
fs
pop
pusha
or
cmp
sbb
dec
cs
mov
mov
or
jl
sbb
xor
lock
cmp
pop
fcmove
dec
mov
push
lods
mov
adc
mov
mov
push
fwait
pusha
cmp
mov
ja
sub
jp
mov
mov
mov
imulb
fildll
mov
pop
loopne
mov
pop
pslld
inc
lcall
shrb
and
fwait
sbb
outsb
xchg
sub
andb
ljmp
jns
push
pusha
xor
cmp
imul
pop
sub
lcallw
out
add
movsb
mov
stos
daa
fs
pop
sbb
mov
cld
fisttps
xchg
enter
sbb
cli
xor
icebp
mov
mov
nop
arpl
mov
pop
nop
in
fidivl
fists
jo
jge
inc
add
xchg
sub
xor
or
loope
cmpsb
push
bnd
adc
xor
mov
xor
dec
and
fistpll
stos
xchg
mov
cmc
mul
xchg
jbe
cltd
pop
mov
sbb
in
mov
lods
insb
jecxz
cmpsl
cmp
scas
and
xchg
dec
adc
adc
adcb
fs
in
xchg
int3
dec
fldenv
mov
mov
mov
int3
push
sub
pop
mov
or
sbb
mov
pop
push
sbb
dec
push
mov
sbb
push
mov
in
dec
sahf
push
mov
pusha
add
or
rclb
stos
jb
pushl
mov
and
inc
ss
divb
fcoms
pop
lahf
andl
imul
mov
jmp
xchg
or
adc
push
stc
cmpb
mov
mov
loopne
push
sub
pop
push
jnp
mov
or
adc
push
imul
testb
ds
xor
loop
pop
insl
roll
push
pop
mov
and
inc
mov
push
mov
repnz
fldcw
imul
xchg
movsbl
or
cld
push
mov
xorb
test
inc
lcall
ret
lret
sbb
cmp
mov
mov
jmp
push
mov
loope
lss
or
xchg
test
mov
cs
mov
add
push
in
inc
pusha
arpl
add
inc
loope
xchg
test
pushf
mov
lcall
mov
mov
ja
sahf
or
or
imul
shrl
icebp
dec
add
mov
fs
push
adc
rol
push
mov
pop
inc
pop
mov
push
push
fs
cld
sbb
xchg
adc
ret
push
repnz
mov
das
mov
mov
mov
mov
ja
push
xchg
aaa
fisubl
int
or
mov
dec
push
mov
xor
xchg
adc
or
jge
test
repnz
and
inc
stos
shlb
out
xchg
mov
stc
add
inc
xchg
clc
jmp
jmp
mov
rolb
out
push
mov
xchg
mov
push
xor
das
ds
or
movsb
pusha
jns
cmc
pop
icebp
cmp
pop
lcall
add
xchg
mov
sub
test
cmp
jb
push
and
push
rcrl
xchg
shlb
clc
movl
gs
stos
inc
pop
mov
ja
mov
js
loope
sbb
cmpsl
inc
sbb
imul
mov
mov
mov
lods
and
mov
mov
mov
dec
clc
ret
fldl
adc
sub
iret
mov
leave
sbb
es
push
imul
sbb
popa
adc
pop
xor
lret
iret
and
mov
rcrl
jmp
loope
jg
jno
imul
mov
mov
mov
stos
pop
xchg
mov
mov
imul
xchg
sbb
pop
lretw
lea
ljmp
adc
sahf
mov
popa
fstpt
cmp
pop
shlb
adc
test
int3
mov
push
add
outsl
mov
xchg
in
adc
push
fistpl
pusha
insl
repz
icebp
testb
dec
xor
adc
xchg
into
fs
dec
test
xor
cwtl
lods
cmpsb
lods
in
cli
loop
sub
orb
cltd
mov
fs
lea
loopne
jo
gs
dec
lret
mov
outsb
and
or
mov
pop
dec
xor
sarb
adc
lock
mov
cld
pop
mov
hlt
sbb
add
add
scas
mov
lcall
test
sbb
xor
pavgb
pop
rcl
insl
xlat
mov
popf
push
loopne
and
adc
mov
insl
ret
push
mov
notb
xchg
sahf
ja
add
jge
add
xchg
ljmp
or
mov
ficoml
cmp
inc
int3
test
shr
sub
addr16
mov
mov
jl
rcr
or
mov
or
lock
sub
pop
xchg
mov
pop
jns
test
cwtl
sbb
sbb
pusha
popa
xchg
push
pushf
add
loope
bound
jb
mov
jo
mov
pop
mov
mov
inc
lods
test
hlt
subl
testl
jmp
xor
mov
movsb
inc
mov
insl
insl
ljmp
push
mov
sbb
sbb
mov
xor
gs
cmp
pop
mov
in
mov
or
push
aad
repnz
hlt
out
in
movsb
cmp
lret
data16
negl
insl
out
push
hlt
mov
mov
push
inc
mov
add
stos
xor
in
xchg
sub
and
dec
fwait
cld
shrb
cmp
mov
mov
jb
es
cmp
lcall
in
dec
mov
jp
lods
fwait
and
push
pushf
insl
jo
lret
inc
sbb
xlat
dec
cmp
jg
sub
sub
icebp
les
fistpll
xchg
jno
dec
pop
cmpl
mov
and
xor
or
inc
dec
insb
test
nop
movsl
push
repnz
jecxz
push
loop
fcomi
mov
jg
fidivl
andb
mov
mov
std
sbb
inc
clc
icebp
jb
or
jns
push
data16
add
pop
inc
addr16
mov
pop
fxch
jno
lret
mov
lds
mov
sbb
mov
jnp
jno
inc
fidivrl
bound
or
or
rorl
mov
repnz
shll
inc
xchg
lcall
fnclex
inc
fs
dec
sbb
or
loope
sub
lods
xor
mov
jae
push
aaa
xchg
adc
shll
ss
xor
sub
add
aad
jge
cmp
mov
jmp
push
sub
and
mov
aaa
sub
pop
inc
out
dec
inc
push
pop
dec
jg
insl
inc
jp
idiv
pushf
dec
and
adc
test
jl
testl
stc
cmp
cmova
ret
jno
xchg
xor
mov
fs
jne
cmc
data16
stos
shr
lods
mov
repnz
mov
push
nop
jns
xor
pop
out
pop
xchg
js
imul
roll
jp
xchg
negl
sbb
out
xchg
gs
js
dec
push
iret
fsubrl
scas
jb
xor
cmp
or
das
push
repz
push
cmpsb
or
stos
leave
cli
test
xor
push
lock
xchg
mov
dec
push
inc
jecxz
adcb
ss
jno
test
adc
outsb
jno
stos
fwait
mov
cld
cli
xchg
dec
mov
stos
xchg
jo
sbb
out
sahf
gs
cld
mov
fcmovnu
jno
add
pop
push
stos
sub
pushf
movsl
push
je
lea
ja
lahf
popa
std
fidivs
xor
sahf
add
mov
adc
in
mov
and
sbb
dec
insl
adc
divb
imul
adc
lahf
lahf
enter
aaa
and
mov
pushf
cltd
adc
mov
mov
shlb
pop
pop
jmp
xor
lds
stos
sub
jle
xlat
orl
inc
loope
test
fsubrs
stos
jns
jb
push
mov
and
dec
mov
std
loope
fsubl
sbb
and
cmp
xchg
outsb
adc
insl
mov
mov
add
movsl
and
ljmp
popf
imul
popf
fistps
cmpsb
or
and
push
sub
push
and
out
xchg
sbb
data16
insl
xlat
add
jge
in
clc
jb
mov
enter
dec
sbb
arpl
inc
mov
mov
mov
sahf
loope
mov
or
mov
ja
jge
sub
pusha
mov
fidivl
fidivrs
fsubl
xor
icebp
and
pop
pushf
imul
mov
mov
jae
mov
push
insl
sbb
and
movsb
push
inc
lods
xor
movsl
in
imulb
imul
and
fildl
xor
mov
ds
jb
out
adc
ret
fisubs
and
jno
cmp
pop
fstpl
in
jmp
push
xchg
loope
out
mov
jb
or
fwait
test
jp
in
pushf
sarl
pushf
push
gs
sub
inc
jg
fwait
cld
sub
sub
repz
mov
cmpsl
fiaddl
mov
lds
xor
rcll
ucomiss
pop
dec
in
cmp
or
mov
mov
out
mov
mov
inc
stc
dec
pop
loope
cmp
push
inc
arpl
fcoml
add
pop
mov
jno
out
imul
sub
mov
cmc
call
popa
dec
xchg
adc
mov
popa
inc
xchg
test
sub
and
in
mov
mov
in
mov
sub
scas
test
jmp
in
mov
adc
push
mov
fdivrl
ja
xchg
push
aaa
push
mov
inc
and
xor
jnp
xchg
mov
pop
testb
jns
cli
mov
pop
mov
movsl
test
fiaddl
mov
hlt
sub
in
das
pop
xchg
xlat
lahf
movsb
testb
pop
and
mov
enter
adc
jne
pushf
mov
enter
sub
jge
or
xchg
pop
stos
cmp
mov
call
push
xor
lea
icebp
add
dec
jns
lock
addb
dec
cmc
outsl
pop
pusha
setns
ljmp
ret
jge
lock
jmp
inc
mov
mov
addl
pop
jno
push
sbb
outsb
sahf
push
sub
push
xor
mov
adcb
pop
mov
enter
or
pop
cmpsb
cmp
icebp
add
sub
pop
jmp
or
dec
jmp
mov
jno
das
fstpt
cld
packssdw
outsb
ficompl
ja
sub
inc
in
or
xchg
mov
sarl
pop
push
fcmovbe
adc
in
jmp
cmpsl
dec
cmpsb
push
push
out
sbbl
lahf
test
mov
xorl
in
aas
fisttpl
stos
or
aas
pushf
push
sub
or
lret
out
jns
or
jmp
adc
outsb
add
ja
arpl
inc
push
stos
fidivrs
mov
paddq
inc
mov
xchg
add
and
icebp
inc
inc
fwait
sbb
loope
sbb
cld
mov
jmp
loopne
pop
xor
push
cmp
pop
mov
push
mov
shl
xor
outsb
sub
imul
xor
inc
sub
and
pop
jbe
add
and
push
call
add
pop
add
push
and
sbb
adc
or
pop
xor
mov
pop
sub
mov
aas
movsb
sub
xor
jnp
mov
sbb
add
mov
cld
std
mov
push
dec
sub
sub
aas
lahf
daa
xor
and
fsubr
push
repnz
scas
negl
addr16
pop
shlb
cmp
movsb
mov
nop
xchg
jle
dec
movsb
clc
mov
or
movsl
lret
push
inc
mov
arpl
mov
jb
lock
mov
or
lods
in
inc
leave
push
mov
mov
nop
cmp
cld
mov
mov
lcall
in
aaa
and
cs
loope
or
sbb
pop
cmpsl
sbb
enter
bound
setno
scas
mov
jo
push
jo
mov
imul
in
loope
enter
dec
sub
loope
rep
inc
outsl
push
jb
insl
daa
out
out
mov
jno
jo
adc
pop
nop
push
andb
jo
mov
ja
pop
stos
shlb
dec
jbe
xor
jb
sub
sub
out
fdiv
sub
ds
push
mov
dec
lea
pop
hlt
push
cld
dec
ljmp
pop
push
mov
sub
fidivl
pop
ljmp
cmp
imul
sub
jo
sbb
mov
out
xchg
dec
jno
ja
ds
push
insl
subb
insb
dec
cmp
and
shll
rsm
lods
andb
xchg
jae
cmp
repnz
mov
aam
fisubs
stos
push
cmp
test
out
adc
pop
mov
insl
cmp
sbb
clc
mov
pop
ror
loope
ret
cmp
cmp
push
lret
mov
sub
xchg
fbstp
mov
mov
stos
jne
insl
fwait
push
icebp
ss
push
mov
loopne
jno
aaa
in
sbb
imul
mov
in
jge
ss
inc
sbb
mov
cltd
mov
call
or
inc
jb
sbb
hlt
lock
test
push
or
cmp
adc
stc
rcr
lock
popf
insl
mov
addr16
pop
lret
icebp
in
jae
mov
scas
js
push
mov
sbb
pop
push
add
jno
dec
add
pushf
add
fwait
mov
movsb
fnstsw
out
lret
add
cmpsb
pop
jge
sub
mov
xor
fucomi
lock
push
or
aaa
lahf
fbld
test
stc
int3
mov
cmc
decl
dec
xor
sahf
sub
and
jnp
push
cmp
cld
pop
adc
enter
mov
lret
xor
mov
push
repnz
outsl
or
and
icebp
sbb
cmp
dec
lea
pop
ficompl
mov
jmp
sbb
mov
call
dec
xchg
pop
push
popa
stos
xor
or
ja
jmp
aad
stos
mov
xor
sub
cmp
lock
mov
mov
test
pusha
loop
add
add
and
cmp
push
sbb
or
test
adc
adc
adc
xchg
mov
fsubrl
mov
fs
mov
and
je
das
fbstp
in
insl
mov
mov
add
xor
rorl
mov
mov
xchg
outsb
ret
mov
push
xorl
dec
dec
int
in
dec
jmp
lock
leave
sbb
ljmp
icebp
leave
or
fcomps
sahf
into
jns
mov
scas
jo
adc
les
int
xor
insl
jb
loope
mov
xchg
loopne
or
jns
push
call
cld
add
sbb
dec
push
mov
pop
xchg
pop
pop
ret
fnstsw
out
fs
lcall
test
adc
pusha
mov
aaa
iret
and
push
inc
pop
das
xor
fs
inc
scas
jb
aam
sbb
mov
outsl
sub
jg
outsb
pushf
mov
outsl
jno
mov
xchg
sbb
andl
into
pop
shr
aas
sbb
lds
lret
xchg
mov
inc
movsl
jb
push
xor
xchg
and
int3
inc
jns
xor
outsb
loop
les
dec
push
or
xlat
scas
xchg
cmp
cmp
lods
loopne
mov
out
pop
mov
inc
xchg
outsl
jb
jbe
fidivrs
mov
xor
or
mov
cmp
fists
inc
sbb
inc
ficompl
push
and
cwtl
push
fistl
int
pusha
push
sub
mov
out
jno
add
fs
call
ljmp
mov
ret
and
les
and
pop
fisubrl
daa
mov
push
sahf
lods
mov
dec
adc
icebp
mov
cmpsb
xchg
adc
daa
lock
xchg
scas
rolb
mov
icebp
sub
mov
and
shll
jno
insl
jb
cld
stos
lock
sub
sbb
and
push
add
rorl
pop
dec
ljmp
push
sarl
and
out
push
cmp
lahf
aam
lea
xor
jb
mov
lds
jecxz,pt
xchg
and
lds
faddl
gs
sbb
jno
push
mov
dec
xlat
insl
mov
lret
dec
mov
xor
mov
fwait
lret
pop
and
aas
aas
scas
ret
push
scas
fisubs
inc
mov
sbb
or
ljmp
pushf
insl
ss
je
jb
or
stc
pop
xchg
lret
fadds
push
pop
cmp
ljmp
jg
call
out
aas
fbld
inc
adc
stos
stos
loopne
push
cmp
stc
xchg
push
call
sbb
mov
inc
pop
in
lcall
mov
inc
test
xchg
push
add
data16
cmp
inc
lock
leave
add
jo
sbb
sub
pop
inc
test
push
clc
mov
movsl
mov
in
push
cs
test
mov
inc
inc
insl
aam
push
outsb
mov
mov
fwait
adc
and
mov
dec
xchg
inc
mov
xchg
lock
mov
inc
inc
sub
loopne
fwait
mov
jb
sbb
and
inc
test
sahf
jns
shll
jno
clc
and
pop
cmpsl
sub
popa
cmp
stos
mov
dec
mov
mov
jle
jmp
lcallw
loopne
inc
push
push
in
dec
sbb
mov
int3
sbb
std
shrl
sbb
subl
pop
hlt
jecxz
daa
lcall
xchg
daa
call
pusha
adcl
stc
xchg
push
sar
inc
push
lret
popf
lods
cmc
push
mov
imul
loope
cmp
mov
mov
pushf
jae
lea
gs
inc
sbb
and
ljmp
lea
icebp
xor
stos
and
mov
dec
cmp
sbb
pop
cmp
dec
jle
or
loopne
xchg
xchg
cmp
jecxz
sbb
ficomps
mov
pusha
jle
add
rcll
and
dec
dec
jns
mov
cmp
dec
nop
enter
movsl
test
dec
add
or
mov
mov
andb
mov
aas
jle
cmpsb
lahf
sbb
adc
lock
xchg
outsb
fidivl
sbb
mov
test
and
adc
adc
pop
loopne
mov
out
mov
or
add
ja
push
push
in
popf
sbb
sbb
adc
sti
pop
lret
xor
sbb
dec
test
inc
lods
imull
lret
dec
stc
sbb
lcall
cmpsb
das
cli
lock
mov
pop
popf
in
out
or
sbb
sbb
mov
mov
dec
scas
imul
popf
cmp
or
adc
dec
push
ret
or
mov
imul
icebp
inc
cmp
lahf
mov
xor
cli
push
sbb
or
xchg
xor
sbb
stos
roll
lret
stos
mulb
cmc
outsl
sub
movsl
pop
je
iret
lret
popa
mov
fmul
mov
cmp
aad
or
sbb
lcall
mov
out
fisubrl
pop
aam
mov
pop
dec
inc
xchg
add
pusha
stos
and
sbb
jo
sbb
outsl
pop
and
jmp
mov
inc
mov
popa
std
orb
js
adc
or
pop
imul
iret
dec
scas
mov
jg
divl
xor
ss
cmp
inc
fisubrl
movsl
icebp
fmuls
addl
xor
inc
aaa
mov
shl
and
out
movsb
and
idivb
xchg
filds
pop
inc
stos
cmp
mov
mov
push
lahf
in
cmp
fstpl
inc
int
cwtl
lods
xchg
in
ss
push
ljmp
adc
pop
sub
ret
cmp
sub
jo
pop
sbb
repz
dec
bound
fildl
fs
fdivrs
sub
push
or
jns
pop
popf
lods
mov
push
fisttps
stc
out
call
xor
dec
loopne
xor
xor
xchg
pop
xchg
push
adc
mov
jae
push
ds
aaa
inc
cmp
dec
pop
icebp
xlat
sti
ds
aaa
sbb
jb
xor
lret
dec
add
jo
sbb
in
jae
add
mov
mov
xlat
adc
dec
les
adc
mov
pop
orb
jb
sti
punpckhwd
sub
sbb
inc
push
imul
lret
push
insl
push
pop
sbb
sub
mov
add
sub
mov
in
pop
ljmp
sarl
jo
addl
dec
sub
ret
int3
xchg
adc
or
dec
push
and
sbb
pop
ds
xlat
adc
dec
and
andb
mov
push
sti
je
cmp
jle
out
fistps
je
sahf
sub
cmp
push
push
stos
adc
insl
or
test
pop
fcoms
dec
in
mov
ljmp
mov
xchg
adc
je
push
push
jno
lcall
fs
shll
das
cmp
sbb
sbb
mov
testl
in
imul
or
cmc
xchg
lods
sub
sub
or
lcall
cmpsb
jg
loopne
mov
sahf
cmp
sub
mov
jb
lcall
loope
sub
fisubrl
lock
jb
pop
mov
cmpsb
fistl
sarl
cli
stos
insl
and
mov
or
bound
cmp
add
push
sbb
xor
push
mov
jbe
mov
dec
mov
cmp
movsl
pop
outsb
xchg
in
imull
push
movsl
mov
clc
xchg
cmpsb
push
int
lret
and
and
adc
stos
rcrb
sub
mov
mov
mov
mov
mov
xlat
sbb
imul
mov
xchg
cmp
gs
insl
dec
cmpsl
sub
movsl
lahf
in
jns
cmp
xchg
repnz
loop
into
cltd
mov
repnz
sbb
jno
cmpsb
popa
mov
and
add
fdivrs
fcmove
fidivl
push
lahf
ss
xchg
sbb
xor
sub
jg
test
push
fildl
dec
es
mov
sbb
ljmp
pop
inc
add
mov
xor
pop
push
mov
push
and
insl
mov
mov
push
andl
shl
mov
adc
pop
ljmp
mov
repnz
mov
movsl
pusha
cltd
ret
adc
outsb
jp
or
and
mov
rorl
and
or
out
dec
into
or
int3
mov
call
mov
sub
movsb
out
lods
in
xchg
cli
push
adc
mov
add
pop
xor
xchg
push
mov
test
mov
je
adc
repnz
call
add
pop
cmp
andl
call
adc
lock
bound
dec
out
imul
sti
dec
mov
scas
xchg
insl
call
mov
ret
jns
test
test
xlat
inc
dec
nop
inc
or
xorl
imulb
sub
loopne
in
cmc
mov
sbb
push
lret
inc
jg
jg
mov
fistpl
push
pop
vcvtdq2pd
loopne
sbb
or
sbb
mov
mov
bound
xchg
cwtl
aam
mov
loop
test
mov
xor
ljmp
sbb
or
adc
pop
and
xor
stos
imul
leave
es
dec
ss
pop
inc
cmpsl
lcall
xchg
fsts
mov
jns
fsubrs
shrl
dec
and
mov
cld
push
add
push
fs
pusha
fisubs
xor
cmp
nop
mov
out
adc
stos
in
orw
mov
push
cmp
repz
jecxz
mov
ds
xchg
lods
fldenv
out
mov
cwtl
or
mov
cmp
dec
icebp
mov
adc
inc
ja
jecxz
sbb
xor
xor
xlat
test
pop
sub
daa
and
inc
mov
sti
test
xchg
push
or
lret
arpl
ss
call
dec
stc
inc
pop
or
mov
shll
push
pop
add
sahf
lea
faddl
jmp
sub
mov
popa
mov
and
lret
sub
mov
divl
lock
inc
mov
adc
mov
rcll
daa
jle
dec
xchg
pop
push
sub
lods
and
xchg
sub
jnp
inc
pop
in
dec
pop
cmp
mov
jmp
cli
and
fisubrl
jge
cmpsb
pop
lods
push
cmp
adc
ror
ret
mov
lahf
and
loopne
mov
pusha
fwait
and
sbb
test
fnstsw
mov
sbb
sbb
push
inc
dec
movsl
jbe
add
mov
inc
repnz
xor
dec
aaa
mov
sub
add
dec
push
mov
jg
jo
fucomip
stos
pop
pushf
and
adc
jle
jb
mov
mov
into
sub
sub
popf
adc
lea
fmuls
notb
xor
stc
mov
out
push
sbb
xchg
orl
out
mov
lods
dec
adc
sahf
test
lahf
lods
jmp
movsb
daa
sub
inc
popa
jno
push
and
sahf
lods
lret
ret
sbb
dec
or
and
jae
or
pusha
pop
cld
mov
sub
sbb
push
mov
mov
mov
or
xchg
mov
pop
xchg
or
aas
mov
jg
jl
out
add
cmc
imul
ss
pop
into
es
sbb
adc
xor
mov
push
and
fstpt
push
fdivp
pop
add
xchg
test
push
jnp
inc
sbb
mov
pop
adcl
enter
cmpl
stos
fsubs
mov
rorl
add
cld
fldcw
sub
pop
mov
fisubl
testl
jns
xorb
mov
mov
push
repz
adc
ja
pop
sbb
adcb
pop
jns
scas
sbb
daa
sbb
pop
sbb
push
sub
stos
fs
sbb
scas
cmp
pop
in
cmp
mov
into
sbb
xchg
in
mov
push
cld
and
popf
pop
and
in
pop
xor
jo
dec
dec
jno
sub
pusha
adc
out
sbb
shrl
out
dec
lea
leave
lea
xor
jbe
mov
jmp
pop
sbb
frstor
adc
push
add
loop
movsl
push
or
pop
add
frstor
add
in
jo
xor
sbb
lock
xor
popf
sub
xor
xchg
iret
sahf
loope
idivl
mov
cmp
pop
sub
xor
mov
add
clc
stos
push
push
dec
adc
push
es
in
repz
jb
or
add
pop
ja
sbb
mov
iret
push
mov
mov
dec
jno
es
add
fnstcw
and
fisubl
mov
dec
dec
hlt
lock
ljmp
jno
int3
push
outsb
mov
cmp
in
push
in
push
pop
in
and
sbb
stos
shrl
stos
dec
mov
imul
jno
ja
mulb
and
xlat
adc
popf
addr16
mov
rorl
pusha
bound
rcrb
lods
aaa
sub
cmc
sbb
cld
adc
lcall
mov
movsl
cmp
cmp
bound
cli
sbb
push
and
pop
shrl
and
ljmp
or
xchg
pop
cmp
push
div
push
lahf
mov
push
fst
sbb
imul
adc
enter
cmp
pop
jno
pop
push
sbb
jecxz
bound
cmp
sbb
int3
out
mov
int
in
loopne
rorl
rorb
lahf
data16
mov
pop
adc
inc
xor
sbb
shrb
loop
outsb
sub
negl
lods
mov
push
xchg
jns
sahf
std
add
hlt
ljmp
lods
negl
sbb
jmp
jno
outsb
fcoms
mov
sub
jl
pop
outsb
sub
cmp
mov
push
dec
and
and
mov
into
pop
daa
sbb
mov
in
lods
mov
lea
xchg
adc
fbstp
subl
stos
mov
dec
pop
jle
adc
pop
jnp
movsl
adc
ret
add
movb
cli
inc
pop
test
and
in
inc
addb
sbb
and
mulb
lahf
xor
lock
ret
pop
cmp
push
push
cli
adc
lock
ret
sub
cmp
cmp
mov
mov
in
loope
hlt
fidivrs
xor
xchg
outsb
sub
cmpsb
push
insb
sbb
push
adc
pop
lcall
dec
cwtl
cmpsb
dec
sub
sahf
dec
xchg
in
imul
in
bound
xor
sub
pop
test
cmpsb
fwait
sbb
lahf
inc
bnd
mov
stos
push
mov
cmp
sub
pop
jle
push
outsl
or
orb
pop
movsb
out
mov
adc
addr16
in
jne
sub
pop
mov
add
push
add
cmc
mov
xchg
pop
dec
and
popa
stos
mov
jne
sbb
xor
add
push
popf
jg
enter
nop
xchg
and
pushf
jp
sbb
mov
dec
xlat
sub
lcall
cmpsb
mov
icebp
push
inc
int3
shrb
push
sbb
jne
dec
dec
call
push
in
push
in
lods
orb
jo
mov
sub
adc
inc
fidivs
lods
pop
push
mov
push
iret
mov
mov
push
mov
or
adc
fadd
sub
testl
out
jecxz
lret
movsl
imul
sub
push
xor
push
push
stos
sub
jmp
adc
mov
out
add
pop
hlt
adc
mov
cltd
cltd
xor
push
call
adc
stos
data16
aad
cmpsb
scas
sbb
pop
rcrl
cld
mov
scas
xchg
addr16
mov
sbb
cmp
inc
cmp
push
cmp
mov
fs
pop
std
dec
sti
data16
std
lock
in
jmp
fistl
jle
cltd
push
and
sbb
int
xor
jecxz
imul
xchg
dec
outsb
repnz
shrb
cs
imul
ret
sahf
scas
jecxz
inc
daa
lea
in
outsb
iret
jo
mov
jae
cmp
fisttpl
jae
mov
std
jb
addb
mov
sbb
mov
lahf
sub
jbe
gs
inc
fistl
mov
cmp
mov
into
cmp
cmpsb
imul
stos
fisubrl
mov
addr16
mov
xchg
cld
mov
pop
cmc
out
imul
test
pusha
stos
fisubrl
cld
cwtl
dec
xchg
jnp
inc
sahf
xchg
xlat
popa
mov
mov
pop
pmaxsw
stos
add
mov
xchg
sti
cmp
mov
fcoms
outsl
mov
jae
dec
jno
addr16
test
insb
int3
jl
mov
and
mov
xorb
sub
or
repnz
xor
dec
mov
mov
repnz
std
dec
xor
movsl
and
insl
je
movsl
in
mov
add
sbb
lahf
icebp
ljmp
sti
outsl
cmpsb
sahf
insb
jge
jb
nop
pop
in
mov
or
push
test
aas
fldl
rcr
aad
ret
dec
push
pop
mov
insl
insl
loopne
mov
inc
movsl
cmpl
in
jp
jns
mov
cmp
mov
xchg
insl
pop
in
adc
cmp
nop
pop
in
insl
xchg
outsl
negb
loope
rorl
xchg
pop
push
mov
fwait
lock
inc
push
sbb
repz
mov
ja
xchg
mov
add
mov
adc
xchg
or
in
inc
ficomps
in
lret
inc
xlat
sarb
jge
lahf
push
ja
pop
sub
push
inc
je
daa
pop
out
sbbb
dec
dec
daa
mov
cmc
test
daa
in
mov
sbb
push
mov
inc
out
xchg
or
loope
sarl
pop
jb
adc
ret
pop
cwtl
cmpsb
shrl
loopne
arpl
hlt
mov
loop
mov
and
stos
stos
dec
pushf
jb
cmp
gs
incl
sub
int3
addr16
sbb
icebp
in
or
adc
inc
aaa
popa
adc
imull
xchg
out
in
imul
sbb
pop
jmp
sub
pop
pop
push
in
out
mov
dec
cmp
xchg
push
in
int3
loop
sbb
add
push
scas
jge
pusha
and
dec
sbb
add
fiadds
sbb
and
mov
nop
jbe
enter
mov
les
sahf
and
test
gs
jb
js
mov
dec
fcoms
icebp
inc
inc
mov
ss
cmp
js
mov
call
test
adc
xchg
push
lret
xor
push
sti
adc
xchg
arpl
xor
imul
into
dec
in
popf
sbb
adc
jp
push
fwait
addr16
outsb
or
push
xor
xor
cli
mov
call
sub
sub
cmp
or
sub
add
sbb
inc
xchg
fimuls
gs
and
jno
jmp
fsubrs
test
push
test
lods
frstor
or
cmp
lret
leave
pop
das
cmpsl
shll
imul
push
out
loopne
and
sub
movsl
mov
or
or
fcompl
popa
hlt
mov
pusha
stc
xchg
mov
mov
mov
sbb
mov
mov
mov
shll
mov
test
in
pop
push
mov
xor
stos
mov
xchg
shrb
daa
data16
jl
sysret
fldl
mov
adc
or
lret
add
pusha
add
push
out
scas
lcall
xchg
ja
mov
leave
test
pop
xor
and
cmp
adc
and
sbb
sbb
enter
add
daa
fidivrl
mov
and
xlat
sbb
std
shl
push
lcall
gs
pop
cmp
popa
mov
cmp
add
cmc
mov
add
out
ret
in
cld
imul
movsl
or
and
xchg
or
mov
addr16
add
or
rorb
jbe
cmc
mov
push
mov
mov
jle
fcompl
lock
fs
sbb
popa
out
pop
and
sub
adc
adc
add
out
adc
dec
out
in
mov
lods
xchg
xchg
cmp
popf
imul
xchg
push
or
push
in
fistl
mov
pop
ret
lock
mov
or
lahf
les
dec
mov
ficoms
mov
push
cwtl
pop
mov
adc
mov
pop
xor
sbb
or
ret
test
push
imul
das
jo
pop
gs
jge
sarb
ss
jno
bound
add
cmp
adc
pop
gs
add
pop
lds
sarl
sub
sbb
call
xchg
xchg
lcall
mov
mov
push
pusha
mov
or
movsl
and
cmpsl
std
fs
outsb
fwait
das
sub
gs
add
icebp
push
lods
mov
lods
push
repnz
in
mov
test
pushf
jnp
pop
mov
cmpsl
lods
scas
out
lods
outsb
mov
mov
daa
sub
sarl
cmpsb
gs
dec
lods
in
mov
jb
push
push
pop
pop
popf
iret
leave
mov
xchg
push
sbb
sbb
insl
xor
orb
sub
mov
movsl
xchg
addr16
scas
in
sbb
adc
imul
jg
loop
xlat
imul
rclb
cmp
bound
jge
iret
sahf
into
fcompl
ror
mov
popa
addr16
fistpll
test
lret
cli
cmp
sbb
and
mov
cmpsb
insl
fs
dec
cli
inc
mov
stos
add
cwtl
add
xor
stos
pop
or
mov
mov
ret
daa
mov
mov
ret
dec
dec
bound
sarb
lock
cli
sub
xor
fs
cwtl
lods
ss
out
jo
out
xlat
stos
inc
add
mov
pop
mov
mov
lds
cwtl
inc
in
shlb
add
pop
mov
loop
jp
popf
notl
sub
dec
loopne
movsl
dec
sbb
fildll
cli
sub
dec
mov
mov
ret
pop
stc
lock
jne
dec
fldt
inc
mov
addr16
mov
mov
fistpl
out
and
sbb
arpl
inc
adc
pop
insb
sbb
aam
xlat
push
in
ja
fildl
bound
loop
mov
xor
sub
cmp
add
lods
dec
and
xlat
arpl
lret
pop
sbb
bsf
pop
pop
subl
push
sbb
jb
or
scas
icebp
int3
xor
cmp
cmp
movsl
mov
jns
sbb
insl
mov
subl
subb
xchg
pop
stos
test
icebp
stos
add
loopne
gs
pop
push
loopne,pt
fnsave
lock
sti
popa
daa
pop
fwait
cmp
mov
sarb
adc
out
inc
pusha
gs
div
jg
rcrl
movsl
test
sub
shr
jbe
add
sbb
mov
inc
adc
push
incb
hlt
cld
clc
pop
movsb
cs
lcall
into
jl
pop
sar
loop
sbb
push
add
imul
lock
pop
imul
jnp
fprem1
adc
or
push
xchg
jns
add
fdivr
outsl
xchg
in
dec
dec
xchg
data16
dec
dec
xchg
sub
loopne
outsb
jg
pop
push
and
cmp
inc
in
sub
ljmp
cs
jmp
ss
add
mov
adc
cltd
out
pop
mov
xchg
inc
add
cmp
and
in
mov
push
lods
loope
pop
sub
int3
adc
stos
push
inc
cmp
push
and
loopne
gs
pop
cs
insl
les
jmp
mov
imul
popf
pop
fst
arpl
std
xchg
call
xchg
adc
outsb
icebp
sbb
mov
adc
mov
xchg
mov
inc
lret
repnz
shlb
jbe
stos
add
jo
nop
lahf
xor
data16
dec
and
outsb
sbb
pop
add
pusha
jno
push
icebp
dec
icebp
es
stos
inc
inc
and
fwait
pusha
orl
inc
xchg
pop
push
scas
popf
jno
outsl
in
jo
sub
cmpsb
jbe
test
or
bound
bound
and
icebp
adc
jo
call
pop
arpl
push
sub
jo
movsb
insl
jo
gs
shlb
cmp
jae
cmp
sub
int
xchg
mov
sbb
outsb
push
push
popf
outsb
jb
stos
fstpt
lret
cmp
mov
ss
rclb
xor
jmp
out
dec
adc
jp
add
sbb
pop
hlt
mov
leave
jge
push
xchg
xor
lea
dec
popa
adc
dec
lock
js
ret
cmp
add
add
aaa
sub
fsub
dec
imul
sbb
pop
mov
and
xchg
fld
fdivp
or
stos
divb
lds
mul
push
es
call
inc
inc
mov
das
push
mov
repnz
or
or
js
adc
cmp
dec
in
sub
pop
xor
add
sbb
cmp
dec
mov
sbb
sbb
loop
adc
jl
loope
xchg
xor
aad
cwtl
sbb
gs
sbb
out
out
xchg
pop
adc
push
mov
popf
rorl
js
arpl
dec
push
ljmp
dec
daa
adc
sbb
sbb
in
out
nop
dec
ljmp
and
in
mov
lret
cmp
scas
adc
jmp
cltd
call
outsl
es
mov
jno
clc
push
xchg
sahf
xor
mov
out
and
inc
pop
pop
pop
fcompl
sub
test
mov
cmp
mov
ret
mov
rcrl
pop
jno
and
loopne
or
fs
popf
and
ja
cli
loop
mov
xchg
lods
fs
push
fs
cmp
aad
bound
push
int3
cmp
mov
xor
popa
pushf
jp
sbb
icebp
in
mov
call
mov
rcr
outsl
jo
pushf
cmp
mov
mov
cs
xor
cmp
push
push
cmp
rcrl
cs
dec
push
fwait
and
rolb
stos
sub
mov
in
sub
movsl
adc
lea
xchg
fs
cld
test
mov
nop
loopne
aaa
fistpl
es
jp
xor
sbb
hlt
xchg
and
fwait
xchg
fsts
stos
test
cmp
rcrb
lock
gs
idivb
imul
shlb
mov
push
je
jo
cmc
lahf
add
adc
add
mov
pushf
lods
arpl
push
not
stos
loop
xor
and
push
dec
and
lahf
test
lea
movsl
push
cld
shlb
pop
xor
out
bnd
pop
xchg
adc
nop
fwait
xor
mov
sbb
push
jl
inc
aas
or
push
addb
bound
push
cltd
out
inc
imul
sahf
lret
and
rol
xchg
pop
push
adc
mov
or
insb
ret
mov
sub
lahf
dec
movsl
ss
orb
shlb
jge
mov
mov
push
repnz
jecxz
sub
iret
jo
insl
mov
iret
lret
test
sarb
xchg
mov
adc
lock
ss
inc
mov
lods
fstpl
jge
fidivrl
cmp
inc
daa
sbb
frstor
adc
add
loopne
ret
pop
mov
or
in
in
push
lods
stc
lret
es
subb
dec
pop
es
sbb
loope
xlat
fimull
lock
xor
fs
jge
pop
jno
lock
adc
jno
push
dec
cmp
jb
out
sbb
jne
xchg
mov
insl
mov
jle
dec
xor
sub
fsubl
dec
and
imul
pop
inc
adc
xor
loopne
aaa
mov
jle
xchg
dec
inc
in
sbb
mov
in
mov
jns
int3
loopne
sti
xlat
pushf
outsb
inc
cli
inc
shll
mov
xchg
or
test
bound
xchg
adc
int3
mov
fnstenv
pop
sbb
xor
lahf
xchg
adc
bound
imul
out
sub
mull
stos
cmpsb
pop
and
sub
scas
fsubs
cmp
xor
outsl
sbb
loop
popf
mov
adc
adc
or
mov
dec
mov
mov
enter
xor
gs
ja
iret
jb
xchg
loopne
jg
in
loopne
xor
lods
test
add
sbbb
loop
test
mov
push
shrb
inc
imull
xchg
fstl
loopne
xchg
popa
in
adc
scas
jno
loope
lds
lahf
in
rcr
adc
push
and
outsb
sbb
jb
and
pop
push
sahf
pop
sub
loop
test
push
notb
inc
xchg
stc
lock
pushf
jae
leave
mov
pop
dec
add
xchg
stc
pusha
and
test
lods
in
icebp
gs
pusha
xchg
jb
jnp
adc
and
xchg
pop
mov
fidivl
divb
lock
add
push
inc
add
xor
cld
sahf
je
imul
cltd
jo
cld
faddp
inc
in
xlat
jb
and
loop
enter
cwtl
pop
aaa
gs
fldcw
loop
push
sub
jo
xor
mov
imul
pop
add
ret
cltd
push
jl
inc
clc
in
cmp
add
cmp
fs
mov
addr16
and
mov
jno
sbb
mov
lahf
bound
mov
adc
jo
mov
es
pop
lahf
out
add
xchg
or
outsb
sbb
sbb
dec
add
mov
cltd
mov
pop
fwait
mov
scas
nop
pop
jge
sbb
nop
sub
loop
mov
xchg
and
fs
outsb
sub
adc
jle
ficomps
dec
decl
mov
jb
xchg
inc
leave
jbe
shlb
cmp
cli
leave
or
aaa
fsub
mov
xlat
test
ja,pn
xorl
outsl
daa
mov
sbb
dec
out
js
xchg
lock
mov
push
dec
out
jl
ds
mov
imul
rcrl
stc
fcomp
pop
dec
add
jo
mov
sbb
push
aam
subl
fcoml
push
jo
ja
inc
push
gs
and
scas
repnz
adc
jl
push
push
call
lret
sbb
and
out
mov
mov
pop
push
mov
in
lock
mov
icebp
mov
and
mov
and
cmc
outsl
daa
add
stc
sbb
fcoms
ret
mov
push
aaa
mov
push
xchg
pop
xchg
ja
jns
xlat
jno
and
mov
je
and
dec
pop
test
and
push
fsubrs
cmp
sub
shrb
mov
pop
stos
jg
movb
sbb
mov
shrb
jle
mov
and
notl
icebp
lock
ret
sub
negl
jp
in
es
add
mov
jb
add
inc
jnp
cli
mov
js
repnz
cmp
je
mov
fs
ljmp
test
enter
mov
test
fnsave
out
test
pop
sbb
addb
or
inc
push
mov
out
shlb
or
fiadds
xchg
inc
mov
stos
stos
sub
mov
pop
insl
popf
jp,pn
xchg
std
sbb
push
adc
mov
sub
inc
adcb
push
inc
lods
cmpsb
lahf
push
cmp
loope
pusha
gs
push
movsl
and
mov
lret
mov
test
dec
push
or
and
mov
inc
and
sub
hlt
jo
and
fldt
sar
out
lods
test
push
xor
dec
stos
mov
icebp
loop
and
imul
sub
sub
sub
scas
add
jo
jb
lcall
stos
and
sub
add
jne
fs
push
addr16
pop
imul
xchg
repnz
jp
loope
shl
lcall
xchg
in
test
push
cs
push
sbb
mov
fbld
add
mov
aaa
mov
xchg
imul
pop
fwait
jo
pop
jo
in
fs
xchg
lock
xchg
mov
mov
lcall
loopne
push
pusha
xchg
mov
fidivrs
mov
lcall
lods
add
data16
test
push
je
jbe
subl
xchg
sub
in
mov
ss
sbb
cld
dec
icebp
fcomi
xchg
test
es
sbbl
loope
xchg
mov
dec
fwait
mov
mov
lcall
out
pusha
bound
push
mov
push
int3
fwait
pop
fs
iret
sbb
popf
sbb
pop
fs
mov
add
pop
mov
sub
enter
outsl
mov
adc
jb
push
sub
cld
xchg
xlat
sub
sub
or
pop
dec
icebp
mov
js
shlb
incl
lds
pop
dec
or
mov
dec
test
mov
movsl
fs
movsl
shrb
inc
in
in
cmpsl
ficomps
inc
cmpsb
dec
inc
lock
mov
imul
les
jb
mov
ror
sti
pop
add
jno
push
pop
or
sub
and
mov
iret
call
pop
pop
xchg
fildll
das
jno
mov
cld
je
mov
pop
ja
rolb
mov
jns
xor
mov
dec
popf
xchg
stc
push
cmc
test
push
es
loop
fldz
cs
idivl
adc
pop
fmull
iret
mov
jp
popf
lret
insb
pop
or
or
shlb
cmp
ja
mov
lret
or
frstor
pop
and
cmp
lret
adc
in
hlt
xchg
fisubl
incl
in
push
xor
shlb
cld
pusha
leave
xchg
jl
les
push
iret
push
inc
dec
mov
icebp
sarb
or
insb
jp
pop
and
add
gs
out
fnstcw
loopne
pop
pop
jo
jle
mov
cltd
arpl
fcomps
and
sbb
jle
into
testb
lcall
lods
pop
pop
js
sbb
fisubl
pop
push
sub
pop
sub
pop
mov
jecxz
jecxz
xor
sub
jo
insl
dec
pop
subb
and
adc
cmp
and
imul
outsb
mov
adc
cmp
pushf
sbb
jle
add
and
pop
into
mov
ljmp
roll
pop
cltd
sbb
lahf
mov
lea
pop
imul
in
mov
and
cmp
pop
imul
call
int
aam
loope
daa
adc
lret
out
jne
sahf
pop
es
fs
loope
add
sub
loop
inc
or
mov
jg
dec
int3
divl
out
fsubrl
pop
outsl
in
shll
push
xchg
incl
cltd
movsl
add
pop
pop
and
imul
mov
adc
push
mov
xchg
jb
xlat
jno
jb
xchg
outsb
es
jg
bound
jg
mov
xchg
cmp
mov
call
pushf
pop
inc
lahf
bound
outsl
test
dec
jg,pt
mov
inc
pushf
aas
loop
notb
mov
xchg
ficompl
loope
push
xlat
push
popa
xor
lds
or
imul
xor
mov
daa
je
and
dec
fldln2
and
mov
mov
sub
cld
jno
stos
cmpb
loop
sti
pushf
mov
aam
jae
adc
jle
loop
pop
sub
ret
test
lret
xchg
pusha
bound
div
jmp
or
stos
cltd
out
dec
movsb
mov
sbb
and
sub
shll
push
cwtl
lcall
jge
jb
or
xor
dec
add
or
jge
repnz
js
rcrb
adc
test
lock
inc
ja
test
loope
decb
rcrb
xor
jno
mov
mov
or
jae
in
lock
and
enter
or
es
fisubs
loope
sub
jl
mov
push
cmpsb
jl
xlat
fsubl
mov
imul
ja
shll
outsl
jo
xchg
pop
jmp
push
cmp
jb
movsb
outsl
fs
xlat
cmp
into
shlb
mov
jb
xor
cmp
fwait
and
mov
xor
cmp
adc
or
sbb
push
mov
shlb
icebp
clc
or
and
or
jp
in
and
inc
xor
push
xor
mov
mov
sahf
mov
dec
add
jo
cmp
mov
or
lea
fstl
xor
xchg
sbb
xchg
loop
add
sbb
jp
pop
subb
outsl
pop
inc
xchg
push
jbe
addr16
dec
loope
xchg
sahf
and
xlat
xor
mov
jle
adc
jp
daa
jns
and
push
insl
cli
lahf
es
imul
int
xchg
aam
pop
sbb
fcmovbe
mov
jno
xor
mov
fsubl
js
or
sbb
popf
mulb
and
cmp
push
in
enter
adc
mov
pop
fistl
jb
jae
xchg
das
ljmp
in
xor
fcmovne
rcrl
xor
cmp
lds
inc
pop
and
inc
mov
adc
pop
daa
dec
inc
xor
iret
mov
push
mov
sub
mov
scas
imul
mov
mov
aas
pop
pop
dec
sbb
int3
jp
mulb
call
sbb
orb
dec
js
std
push
adc
shll
xchg
pop
fimuls
cltd
push
lcall
cwtl
inc
xchg
or
scas
addb
out
stos
mov
mov
lret
pop
rorl
jp
mov
sub
shlb
lret
mov
mov
ja
xchg
aam
lock
andb
mov
xchg
adc
and
movsb
mov
pop
xchg
pop
push
gs
popf
scas
adc
and
dec
es
rdmsr
sub
lahf
pop
in
out
mov
outsb
icebp
inc
icebp
incl
cltd
dec
faddl
pop
mov
fmull
xchg
cvttps2pi
mov
push
xchg
mov
sbbl
fiaddl
lret
pop
gs
push
nop
pop
mov
lahf
jl
aas
pop
xor
js
and
push
dec
dec
add
push
sub
popf
push
adc
repz
sub
mov
xchg
or
imul
imul
leave
nop
xchg
xchg
push
dec
mov
mov
hlt
adc
imul
bnd
mov
inc
mov
lds
dec
push
ror
inc
dec
xor
mov
and
or
dec
jmp
fwait
bound
insl
xor
jp
fwait
mov
dec
lcall
cmp
pusha
cli
pop
movsl
jb
or
pop
lcall
insl
push
sub
mov
cmpsb
test
cld
call
push
int
cmp
lret
fwait
icebp
cwtl
hlt
or
iret
push
add
fidivrl
xor
insl
push
adcb
dec
mov
lea
jnp
push
and
sub
call
mov
xor
cmp
dec
inc
popa
mov
push
ja
cmp
pusha
push
int3
pop
sub
adc
sahf
orl
test
cmpsl
sbb
std
mov
aaa
movsb
pop
add
mov
dec
and
stos
adc
add
jns
fwait
xor
cmpsb
add
push
into
fistpl
loop
add
sub
lds
fs
or
mov
xchg
add
rorb
and
fstps
mov
inc
mov
dec
rcll
lock
xor
sbb
xor
cmp
lret
js
repnz
sti
fsubs
add
inc
lcall
lret
loopne
das
sahf
xor
xchg
out
mov
mov
mov
jge
and
push
xrelease
and
push
aaa
mov
mov
and
inc
jne
mov
xchg
pop
jecxz
mov
cmpsl
fildll
aaa
pushf
and
std
cmp
jae
mov
insb
fsts
jecxz
mov
lcall
mov
or
adc
jo
callw
push
mov
int3
imul
ret
mov
adc
push
fld1
sub
xor
popa
and
mov
jns
loope
sub
dec
call
sub
mov
sbb
mov
sbb
stos
mov
jbe
mov
sbb
push
fidivl
mov
pop
ljmp
loopne
mov
std
mov
repz
xlat
adc
pop
or
cmp
mov
in
in
inc
mov
dec
sti
push
sbb
ds
mov
ficoml
mov
pop
inc
les
lahf
in
jae
mov
mov
mov
dec
dec
sbb
test
xor
idivb
lret
les
add
or
jmp
fistps
imul
sbb
or
roll
ror
xor
sbb
mov
rclb
sbb
add
int
imul
sbb
imul
mov
lds
aas
repnz
inc
add
push
loope
push
xchg
xor
repnz
int3
inc
sub
xchg
shll
sbb
mov
cmp
add
kmovb
int3
mov
push
sbb
xor
arpl
or
dec
xor
scas
mov
aam
imul
xor
or
ret
xor
sbbl
adc
push
jl
mov
or
lcall
ret
fldln2
fs
sarb
stos
or
jmp
loopne
mov
jg
mov
push
sub
outsb
loope
imul
or
inc
xlat
mov
pop
and
pop
js
in
js
push
mov
lcall
xor
cmp
mov
xorl
ret
sub
mov
pop
fisttps
popa
fwait
ds
cltd
lea
ss
adc
dec
outsl
sbb
je
lods
lret
cli
lock
cli
enter
imul
or
movsl
and
jnp
fwait
out
idivb
subb
sbb
and
pop
rorl
jge
ss
cs
test
add
out
sahf
sarl
pop
test
outsb
adc
dec
stos
ss
mov
cmp
cvtps2pd
cmp
lods
mov
jbe
test
adc
xchg
add
push
mov
aad
test
sub
sbb
sub
nop
repnz
ret
lods
sbb
push
int3
les
mov
in
inc
jp
sti
testb
pop
and
sbb
lret
mov
jmp
shlb
fsubl
push
and
repnz
pop
arpl
sub
sbb
lcall
push
lahf
pushf
pop
jo
ror
push
dec
xor
mov
and
inc
test
loope
arpl
jno
loopne
cmp
pop
in
add
lods
xchg
repnz
adc
cli
repnz
ss
outsb
dec
fldcw
sbb
test
dec
dec
rcl
xor
fiaddl
and
and
lret
push
lds
and
dec
cli
test
into
loop
fnsave
sub
mov
scas
cmp
sbb
and
stos
and
pop
cld
loope
ss
icebp
mov
jp
inc
mov
and
mov
addr16
pusha
lods
mov
push
pop
mov
jl
scas
nop
gs
bound
mov
hlt
stos
clc
pusha
ret
mov
scas
fwait
mov
into
outsb
jl
mov
xor
mov
incb
div
xor
stc
bound
and
sub
sbb
nop
mov
movsb
xor
xchg
adc
or
ja
xor
repnz
inc
sub
adc
aas
daa
cmp
icebp
mov
adc
mov
mov
or
mov
push
bound
les
push
jle
bound
idivb
lock
ss
aam
insl
jnp
xchg
mov
int3
adcl
add
mov
pop
imul
push
imul
stc
cmp
mov
cmp
js
add
shll
test
imul
pop
sub
shll
add
mov
pop
sub
push
mov
pop
mov
cmc
push
push
repnz
mov
fisubl
std
xchg
mov
sbb
lock
jo
pushf
out
or
jmp
jl
mov
stos
inc
in
in
sbb
mov
sub
ss
dec
scas
lret
xchg
jno
push
mov
les
stos
daa
sbb
xor
ja
and
stos
les
nop
imul
cmp
mov
sbb
push
and
call
lods
push
pop
sub
xor
mov
push
hlt
push
sbb
push
dec
cmpsb
push
fstps
in
insl
add
mov
jo
bound
jb
in
fwait
out
jle
mov
out
sbb
mov
cmp
shll
sbb
mov
mov
nop
daa
iret
popa
test
orl
mov
out
shlb
setbe
cmp
pop
clc
cmc
jne
cwtl
leave
pop
out
pop
xor
mov
push
in
mov
ss
movsb
sbb
push
leave
hlt
xchg
lret
or
xchg
out
or
cmp
ss
pop
xchg
loopne
outsl
mov
lret
stos
push
insl
pop
es
push
dec
outsl
sub
pop
sub
cmp
cwtl
loopne
int3
cwtl
xor
add
cmp
adc
in
sbb
xchg
push
icebp
mov
dec
push
js
jne
ljmp
out
push
test
push
add
jecxz
pop
js
cmc
xchg
subl
or
push
test
lock
imul
rolb
pop
inc
jns
mov
xchg
adc
inc
jmp
pop
adc
push
push
fisubs
call
cmc
stos
sahf
test
cmpsl
and
or
cmpsb
mov
stos
iret
pop
lcall
shlb
ss
fistpl
sub
mov
aaa
mov
jae
xor
pop
js
pop
xor
ja
pushf
data16
pushf
jb
lahf
push
icebp
inc
push
xor
ds
ljmp
scas
adc
daa
pop
int3
int3
dec
rolb
pop
mov
xor
lds
push
mov
mov
gs
jno
and
and
mov
dec
or
daa
aaa
bound
adc
mov
insl
sub
sub
inc
xorb
mov
fcmovnb
filds
mov
popa
fcoms
mov
lahf
lods
fs
popa
push
cmp
pop
mov
jo
in
xor
inc
and
mov
dec
fcoms
fcmovnb
mov
and
mov
out
lcall
into
mov
sub
pop
xchg
mov
lock
imul
jae
repz
or
negl
scas
cmpsb
mov
ja
and
addr16
sbb
ss
jp
subl
mov
mov
mov
loop
andb
and
adc
pushf
xor
mov
jge
and
inc
adc
mov
inc
inc
sahf
xchg
cmp
and
push
int3
stos
and
shrl
xchg
jo
stc
daa
mov
or
popf
adc
and
xor
dec
in
neg
nop
orl
sbb
jo
or
aad
inc
adc
xchg
dec
dec
adc
out
push
pop
mov
xor
jp
loopne
fwait
sbb
dec
insl
dec
cli
push
push
pop
out
or
scas
add
dec
mov
and
mov
mov
sub
jle
jmp
inc
mov
insl
sbb
xchg
rclb
pop
or
mov
stos
popa
jb
mov
movsl
fcomps
test
arpl
xchg
sub
cmp
and
sub
ja
or
mov
mov
aam
and
add
mov
push
mov
mov
clc
leave
mov
mov
xchg
jmp
cmp
jmp
cmpsb
in
idivl
jnp
add
jb
rep
fs
imul
out
inc
fstl
sub
fs
xchg
and
popa
ret
xor
pop
dec
jp
or
add
or
cmp
cld
icebp
cmc
xchg
xor
mov
stos
cld
xor
mov
cmp
sbb
repz
push
adc
dec
lea
nop
push
pop
out
xchg
pusha
xchg
fs
push
sub
pop
push
pop
lahf
les
test
and
fcmovb
ret
pusha
jb,pt
fsts
dec
cmp
push
outsb
test
mov
int
pop
jno
addl
and
push
cmpsb
aaa
adc
pop
test
dec
stos
sbb
nop
xor
xchg
insb
pop
jns
cld
xor
adc
stc
add
xchg
jae
cmp
xchg
sbb
push
push
mov
pop
popa
push
push
push
in
sbb
mov
cmp
pop
pushf
jo
nop
imul
lret
cmp
cld
sbb
pop
leave
push
pop
rcrl
test
pop
push
adc
mov
add
int
mov
dec
or
fldl
sub
sbb
gs
and
sbb
mov
mov
popf
gs
rorl
or
out
jo
jnp
jbe
xchg
enter
pop
and
sahf
andl
mov
xchg
shll
cli
add
icebp
lods
push
sub
das
lds
adc
ret
or
lret
sub
sbb
or
push
dec
pop
lods
xor
icebp
cmp
loopne
lock
push
mov
add
push
cmp
push
adcl
lods
js
cmp
movsl
xlat
rclb
jg
dec
add
pop
mov
adc
pop
mull
sub
gs
jno
jno
sub
xchg
add
cmp
xchg
pop
push
push
xchg
das
gs
stos
pop
or
pop
xchg
xchg
push
mov
pop
clc
cwtl
int3
outsb
sbb
xchg
jo
loope
xor
lods
cmpsb
push
int3
xor
lret
es
mov
mov
lock
sub
pop
js
addr16
xor
lcall
dec
adc
mov
jmp
mov
je
sbb
bound
sub
or
mov
add
ss
xlat
lcall
stos
aam
stos
inc
cltd
adc
bound
fisubrl
sub
imul
stos
fstps
test
lods
je
xchg
dec
data16
pop
add
mov
into
jecxz
jo
mov
xor
jb
xor
push
movsb
sub
shll
aaa
js
data16
cmp
test
lcall
push
dec
mov
push
pop
sbb
mov
cmp
adc
fidivl
ficoml
movsl
mov
aaa
sti
repnz
scas
mov
test
call
cwtl
push
push
inc
rclb
sub
out
dec
ss
mov
cmpsl
add
andl
leave
repz
cmpsb
fildl
and
fs
nop
sahf
or
cmpsb
arpl
pop
rcrb
scas
inc
cltd
and
adc
pop
popa
cmc
in
inc
cmp
fmuls
and
add
mov
in
jb
jae
jae
lock
jns
in
jb
dec
and
push
popf
pop
mov
fisubrl
jo
xchg
outsb
add
adc
inc
in
inc
ljmp
sub
stos
out
mov
mov
leave
jmp
add
scas
mov
add
ds
add
ds
in
mov
loop
sahf
lods
xchg
inc
sub
jp
mov
jb
xor
movsl
jo
cs
dec
movsl
cmp
lods
push
mov
insl
aas
test
inc
pop
shrb
mov
jp
mov
insl
xchg
mov
jno
in
dec
pop
jo
pop
push
lret
mov
jno
and
lods
sbb
sbb
outsb
cld
imul
incl
data16
lock
xchg
addr16
addb
bound
mov
dec
or
xchg
inc
fldl
cmp
pop
je
sbb
and
insl
dec
pusha
inc
sbbb
inc
mov
addr16
sub
clc
jge
sbb
and
and
pop
dec
push
xor
and
add
push
lods
out
pop
fidivrs
lcall
inc
hlt
ret
mull
in
and
mov
dec
pop
push
clc
repnz
test
lcall
mov
insl
lahf
and
xchg
lods
dec
lahf
push
and
mov
dec
xchg
mov
scas
pusha
xchg
pop
sub
rcrb
and
icebp
jle
gs
cmpsb
and
ljmp
icebp
sbb
scas
mov
dec
xlat
xor
sbb
fwait
ret
popf
jnp
dec
mov
adc
xor
fwait
inc
sbb
aaa
xor
jb
aaa
cmpsl
cmpsb
mov
sbb
jle
xchg
cld
xor
fmull
pop
push
push
dec
xchg
gs
fstps
jecxz
jb
sti
or
add
jno
dec
fcomps
cmp
or
popa
gs
xchg
sub
ljmp
rolb
testl
outsb
sbb
mov
in
mov
sub
ss
jno
mov
mov
lods
sbb
xchg
xchg
and
dec
fcoml
es
fcomps
cld
cltd
mov
mov
cmp
or
push
mov
test
sbb
dec
pop
adc
subb
add
gs
and
ds
fisttps
jno
out
push
sub
out
in
push
imul
pop
cmp
ss
sbbb
jb
icebp
and
push
pusha
mov
movsb
addb
mov
mov
xchg
cmp
push
sub
push
fcmovnbe
stos
pop
mulb
inc
cmpl
in
mov
push
pusha
mov
int3
outsb
aaa
cwtl
sarb
jno
jb
adc
xor
in
lock
mov
in
pop
ljmp
pop
das
xor
sti
xchg
xchg
or
cli
adc
outsl
dec
test
xchg
lcall
push
int3
idivl
adc
push
push
push
cwtl
mov
mov
cmp
call
test
jecxz
mov
add
sbbl
cmp
mov
xor
movsb
ljmp
mov
mov
mov
add
inc
push
in
add
cmp
or
jne
mov
sbb
xchg
sahf
negb
loop
or
xor
rolb
jae
pop
lods
jo
bound
insl
xor
lahf
lcall
cmp
mov
adc
outsb
and
jb
jb
and
pop
xor
inc
aad
and
in
sbb
and
push
test
mov
inc
movsl
push
jecxz
sbb
sbb
cltd
ficompl
xchg
lods
repz
ljmp
sub
sbb
mov
xchg
call
aad
jl
mov
cmp
fistl
pop
xchg
cmp
fs
loop
push
outsl
push
add
aas
int3
and
loopne
imul
inc
pushf
sub
cmpsb
mov
out
adc
roll
rep
les
mov
jmp
xor
xor
push
fs
pop
sarb
lahf
pop
jo
cltd
pop
sub
jae
loopne
test
mov
jno
fistps
sbb
mov
mov
in
mov
lock
and
insl
jo
pop
cmp
sub
jb
ljmp
das
lcall
cmc
mov
xor
mov
jp
and
fucomip
cs
xor
and
cmpsl
fwait
jno
fs
insl
xchg
shlb
mov
sub
in
xchg
in
rol
nop
and
mov
rorl
jmp
sub
jg
lods
jle
jge
enter
jb
xchg
in
sti
pop
xlat
lods
jns
push
insl
jae
bound
in
repz
add
add
repz
mov
jae
loopne
icebp
mov
mov
and
in
in
fnstenv
ffreep
xor
xor
push
cwtl
popa
gs
adc
dec
movsl
mov
xchg
mov
and
add
movsl
pop
fs
sub
std
insl
sbb
cmpsb
imul
xor
imul
pop
fidivrl
add
sti
inc
adc
ja
pop
jae
fwait
adc
insb
xchg
out
sbb
insb
ss
push
es
cmp
pop
movsl
lods
adc
das
movsb
sbb
fsubl
pop
cmp
pushf
dec
jo
jecxz
loope
dec
jb
je
jmp
push
imul
mov
pop
pop
push
pusha
pop
push
mov
lock
jmp
xor
pop
out
rorb
sbb
div
fsubrs
mov
popf
scas
sahf
lods
divl
pushf
pusha
lea
fbstp
lahf
out
push
mov
push
aam
cld
pop
adc
aaa
and
adc
or
outsb
sbb
push
test
inc
sub
ficompl
loope
and
fwait
lcall
sahf
and
pop
lret
and
cmpsl
add
xchg
xor
mov
lock
sbb
cmp
daa
cmpsb
popf
lret
inc
mov
sbb
ds
pop
sbb
in
and
jnp
jae
clc
inc
in
clc
mov
icebp
pop
sub
jg
jns
xor
or
and
inc
fprem1
imul
sbb
inc
pop
xchg
sbb
mull
sbb
push
fiaddl
ss
and
xor
stos
imul
call
movsl
scas
in
out
in
xlat
cs
in
lahf
es
test
push
cmp
mov
repnz
push
cmp
cwtl
or
push
scas
sub
loop
cmpsb
xor
out
pop
cmpsl
and
fwait
fwait
mov
call
push
xchg
arpl
test
or
das
sbb
dec
mov
and
mov
and
mov
int3
test
mov
mov
push
add
ds
adc
and
inc
lods
test
pop
popf
pop
xor
fcoml
dec
mov
in
add
mov
jo
dec
into
fcmovbe
xor
mov
mov
mov
lods
and
push
pop
lock
cmp
lods
fisttps
mov
cmpsl
scas
loop
ljmp
call
mov
mov
mov
mov
in
mov
insl
icebp
pushf
scas
stos
inc
cmp
sbbl
push
and
xchg
shll
dec
imul
push
adc
es
jp
mov
mov
rorb
or
mov
lods
bnd
test
cmp
push
pop
shl
jbe
nop
sub
aaa
cmp
jmp
dec
xchg
and
sbb
lahf
fisttps
pop
and
rclb
adc
xchg
loop
add
scas
ret
adc
cltd
lods
sub
mov
cwtl
jne
pop
mov
mov
and
ljmp
pop
loopne
or
mov
adc
scas
jg
test
push
out
mov
cli
dec
push
sbbb
sub
cmp
lea
orb
jge
stos
jb
arpl
ror
mov
and
xor
adc
mov
add
push
fsubr
xchg
xchg
adc
sub
adc
in
lret
mov
cmp
pop
scas
xchg
cmp
xchg
sti
filds
or
mov
adc
call
dec
and
push
inc
cmp
lods
push
stc
push
xor
xor
dec
int3
aaa
lods
pusha
aam
mov
popf
mov
mov
mov
stos
jnp
cli
push
in
sahf
jbe
shl
push
loop
loopne
ja
lods
pop
push
sarb
mov
mov
fldt
mov
or
mov
xlat
push
sahf
sbb
repnz
add
popa
mov
jb
and
cmp
mov
std
pop
sbb
mov
mov
cli
mov
movsl
iret
gs
in
jbe
adc
bound
xor
pushf
stc
jno
stos
icebp
or
lds
xchg
outsb
add
adc
adc
loop
pop
test
lods
sub
call
pushf
aaa
cmpsb
xchg
test
negl
movsl
in
insl
cmpsb
cmp
fcmovnbe
subb
push
in
sbb
les
mov
outsb
mov
mov
mov
jno
jle
jne
adc
pop
lock
outsl
jb
stc
cmp
mov
inc
dec
imul
and
push
sub
rolb
out
rcl
sub
jmp
je
jp
mov
in
repnz
ljmp
aas
and
test
mov
popf
fnsave
rcrb
mov
xchg
adc
sahf
stos
and
mov
xchg
sub
lea
mov
sbbb
push
int
mov
jo
loope
pop
rcl
sbb
inc
popf
and
sbb
sub
ja
xchg
outsb
icebp
dec
dec
stc
cli
mov
jle
or
mov
jno
das
xor
mov
pop
lods
sub
insb
adc
ret
lods
mov
jmp
sub
icebp
jns
mov
fmull
les
sub
dec
push
jb
xor
dec
push
lock
fstpl
cmp
mov
mov
mov
pusha
push
fisubrl
out
fisubrs
mov
cmpsl
mov
xor
push
js
push
negl
push
sub
jecxz
push
ja
lea
das
xor
jae
and
xchg
jbe
add
dec
pop
xchg
adc
loop
fildll
aad
jae
pop
mov
lcall
mov
dec
lock
aam
jns
gs
pop
rcr
js
out
cld
or
or
mov
jge
xor
jl
loope
jle
mov
cmp
mov
pop
ds
push
sbb
cmp
stc
push
inc
cli
xorl
xchg
lds
movsb
and
loop
fildl
inc
pop
test
mov
adc
mov
mov
sbb
or
mov
inc
subl
mov
jmp
jno
inc
sub
shlb
sbb
mov
jmp
mov
dec
jle
dec
dec
dec
mov
jecxz
cli
mov
mov
mov
add
push
dec
pop
daa
fs
pop
adc
outsb
in
pop
bnd
pop
dec
imul
stos
push
in
lret
mov
ds
dec
mov
jle
stos
push
sbb
xlat
adc
lock
outsb
ja
mov
clc
pop
mov
pusha
xor
mov
cli
cmpb
in
and
mov
adc
outsb
jmp
rorb
jb
scas
sub
sub
lret
inc
sub
test
cmp
mov
mov
int3
add
pop
jno
pop
cmp
sub
int3
roll
loop
sbb
arpl
inc
cmp
and
sarl
sub
dec
addr16
pop
popf
dec
jge
and
fwait
pop
jne
sbb
mov
xchg
out
lret
jno
xor
lock
mov
imul
add
or
sarl
shrl
insb
push
push
xlat
mov
xchg
lods
push
sbb
outsl
jmp
mov
mov
jecxz
sti
nop
icebp
jno
pop
pop
mov
sub
cmp
ret
clc
icebp
out
jno
mov
push
cmc
xchg
sbb
pop
mov
repnz
aaa
ret
in
mov
sub
ljmp
dec
fmuls
push
inc
in
arpl
sti
pop
insl
inc
xor
xor
jno
cmp
repnz
mov
lods
outsl
or
loop
push
mov
shll
imull
fstp
addr16
or
imul
cli
or
mov
jno
xchg
faddl
sbb
adc
pop
in
call
sbb
and
and
cmc
sub
fcoml
sar
pop
test
dec
inc
sub
cmpsb
imul
vpaddd
imul
fldt
test
scas
sub
cmpsb
mov
lahf
pop
mov
sub
xchg
or
sbb
jne
es
jns
and
push
xchg
sbb
inc
out
aam
cmpsl
loop
sub
stos
jmp
movsl
mov
inc
jno
in
lcall
outsb
clc
dec
test
pop
fs
in
add
mov
test
lods
ja
scas
sbb
ret
jecxz
cmp
adc
dec
adc
ret
mov
fistps
or
adc
int
inc
push
lret
mov
subb
add
and
mov
pusha
dec
mov
push
int3
lods
in
mov
addr16
stos
movsb
sbb
movsl
mov
outsb
xor
add
cwtl
or
push
pop
add
mov
jecxz
lahf
or
lret
outsl
push
add
sbb
inc
jge
icebp
daa
push
cmp
push
or
cmpsl
mov
and
inc
int
rclb
add
imul
inc
outsl
sbb
les
jb
or
xor
push
std
insl
ljmp
adc
lods
repnz
jae
movsb
jo
in
xchg
cmp
hlt
push
ret
fadds
sub
loope
push
push
xchg
dec
pushf
insl
adc
xchg
mov
push
jecxz
mov
or
pop
lods
in
lods
cltd
loope
mov
lock
outsb
mov
add
scas
adc
jge
lret
imul
lret
add
xchg
inc
inc
les
stc
mov
repz
xchg
arpl
jge
movsb
pop
out
fucomip
aad
push
movsl
inc
xchg
pop
cmp
mov
cmc
sub
sub
sbb
mov
icebp
fs
or
xor
xchg
roll
pop
aaa
lods
pop
inc
sub
mov
pop
js
negb
sub
jno
push
xor
iret
cmp
idiv
xor
out
movsl
mov
ret
cmp
dec
cmp
fsubl
pop
adc
inc
fdivp
movb
add
addb
roll
mov
dec
or
in
js
mov
cli
pushf
lods
int3
fwait
lock
repnz
add
sub
movsb
out
in
movsl
xchg
out
aas
push
aad
stos
insl
adc
xchg
lods
mov
ficompl
jns
fwait
out
imul
movsb
sub
loope
push
cmp
loope
adc
in
sub
jns
push
xor
call
fcoms
call
lret
sbb
addr16
fiaddl
insb
ljmp
inc
popa
adc
std
bound
int3
and
popa
lcall
divb
in
and
inc
int3
outsl
mov
sbb
and
adc
mov
jno
out
lods
stc
cmp
movsl
cmp
lock
fs
sti
xlat
out
xor
pop
out
arpl
cmp
jo
xchg
mov
icebp
jmp
sbb
aad
iret
push
dec
dec
fsubs
stos
cld
sbb
jno
or
push
add
mov
and
or
movsb
fists
mov
jb
push
or
inc
cltd
call
adc
sti
add
test
testb
es
or
arpl
leave
mov
mov
jo
mov
lahf
adc
stos
xchg
push
bound
bound
aas
mov
pusha
and
mov
jg
jb
test
mov
repnz
aaa
fisubl
clc
repz
imul
int3
pop
mov
lahf
cmp
mov
lods
add
addl
out
jno
popa
sahf
jbe
adcb
xchg
jge
outsb
in
jg
lock
pop
xor
lds
out
scas
pop
sbb
mov
js
mov
out
dec
cmp
lret
push
in
mov
repz
cmp
fwait
mov
sbb
dec
add
push
lods
cld
pusha
insl
loop
cli
iret
mov
add
jb
test
mov
jbe
insl
lods
loop
int3
in
sbb
gs
jge
in
mov
in
push
outsb
jno
push
punpcklbw
loopne
xchg
iret
add
pop
iret
fisubl
in
push
js
sbb
movsl
or
mov
rcrb
sbb
fistps
repnz
pop
jns
pop
lods
loop
sbb
pop
jb
popf
in
pop
fwait
leave
ljmp
testb
jmp
fsub
loope
sub
ljmp
in
outsb
sub
sub
push
mov
jg
mov
and
cmpsl
dec
xchg
jo
icebp
dec
jg
fpatan
bound
out
pop
jb
loop
je
pop
fwait
mov
fabs
inc
shrb
mov
jnp
int
mov
stc
add
lret
cmc
dec
nop
sbb
ljmp
mov
xchg
jmp
imul
jae
jecxz
cmp
mov
ss
pop
push
xchg
int3
push
pusha
add
iret
fcomip
jl
inc
int3
and
jb
add
pop
cmpl
mov
inc
nop
gs
dec
sub
jge
bound
ret
xchg
mov
imulb
cli
imul
clc
sarl
jno
sbb
add
ja
push
repz
push
mov
pop
cmp
jno
pop
mov
repnz
mov
inc
nop
outsl
add
add
mov
adc
pop
ja
push
and
cmp
inc
or
loop
sub
in
data16
jne
push
inc
pusha
add
divb
shrb
mov
clc
lods
mov
pop
repnz
movsb
test
ja
dec
pop
in
inc
push
jmp
jno
out
in
pop
test
jo
mov
xchg
dec
aaa
xchg
pop
sbb
xchg
mov
stos
sub
scas
mov
mov
aad
movsl
lods
cli
fdivrl
pushf
bound
xor
jno
sahf
dec
xchg
scas
push
push
or
mov
push
popf
and
pop
jecxz
dec
and
out
addr16
lret
add
sub
mov
call
xorl
enter
dec
add
repz
in
and
insl
xor
loope
es
dec
std
xor
pop
pop
dec
test
pop
xlat
je
push
adc
and
fisubl
jns
lock
push
and
mov
pop
lock
cmp
push
addl
jb
popa
bound
dec
outsb
sub
ljmp
shlb
ret
jg
aas
outsb
sub
sbb
push
stc
jnp
stos
sub
stos
lret
jg
in
jb
lods
or
mov
sahf
js
enter
pop
test
bound
bound
xchg
in
fistps
ficoml
enter
dec
jl
and
jo
inc
insl
fs
pop
xchg
addr16
repz
in
aaa
daa
js
enter
and
mov
xchg
outsb
jo
in
rcrl
sbb
cmp
ljmp
out
scas
ficoml
xor
in
dec
in
jno
es
xchg
push
in
and
mov
pusha
in
add
xchg
cmp
std
mov
mov
jg
mov
sub
out
out
pop
jno
push
cli
mov
out
shr
mov
sarb
xor
xchg
stos
push
divb
sub
mov
adc
mov
in
pop
repnz
nop
jge
jle
in
cmp
sub
testb
jb
mov
jo
in
test
rcrl
and
mov
repnz
icebp
cltd
sub
ficompl
mov
xor
xorl
addr16
aaa
mov
pushf
daa
imul
mov
imul
adc
in
mov
push
jl
cwtl
in
loope
ljmp
or
jg
sbb
mov
cltd
dec
lcall
ljmp
xlat
sbb
in
push
loop
cmp
sub
sub
in
dec
scas
and
mov
xchg
lods
adc
ja
jbe
outsb
xchg
adc
movsb
mov
cltd
pop
add
sbb
cmpsl
movsb
xchg
jl
jbe
js
fistpll
sub
push
cs
mov
sahf
jbe
out
out
or
out
and
cwtl
jg
inc
iret
inc
mov
xchg
lret
fiadds
adc
mov
cld
mov
in
mov
insl
push
mov
xchg
aam
dec
fdivrp
stos
push
les
lock
and
in
stc
mov
dec
movsl
imul
lods
xchg
and
cld
lods
or
dec
test
push
or
out
stos
pop
stc
sbb
lods
pusha
popf
loop,pt
aam
pop
loop
cmp
and
outsb
stos
xchg
enter
sub
nop
ss
push
sbb
push
adc
push
test
pop
dec
rcl
sbb
ret
inc
pusha
ds
or
int3
ss
dec
dec
xor
cltd
cmpsl
out
imul
or
or
addr16
pop
in
imul
xchg
jo
jns
jg
xchg
ds
inc
jb
mov
int3
repnz
fiadds
sarb
cmp
cli
lret
and
jge
xchg
cmpsb
lahf
xchg
push
hlt
jnp
adc
lcall
sub
jecxz
fdivl
mov
xchg
dec
sti
cmpsb
stos
mov
call
lock
add
bound
movsl
fdivl
mov
es
lret
imul
cmp
int3
jbe
imul
push
in
test
mov
or
mov
in
and
inc
sub
dec
sbb
jns
fwait
ljmp
inc
xchg
movsb
and
or
out
sar
mov
in
inc
adc
lcall
loope
int3
push
push
fnstenv
sub
es
adc
ss
and
notb
mov
pushf
mov
divb
in
xchg
gs
xchg
inc
adc
sub
add
mov
sub
mov
xchg
popf
adc
lds
insb
or
ljmp
stos
or
fistpll
mov
dec
int
xchg
xor
aad
stos
in
jb
fistpll
pop
lock
adc
mov
fwait
rcrl
negl
andl
out
iret
adc
and
mov
shll
push
push
mov
pop
movsb
shrl
les
jb
mov
sbb
and
f2xm1
cwtl
cli
hlt
sub
sub
add
or
stos
mov
aaa
jb
add
jle
sub
cmp
out
sbb
scas
inc
adc
out
daa
ljmp
outsl
pop
and
orb
scas
mov
mov
fsqrt
push
cmp
mov
sub
jns
inc
leave
jo
dec
sbb
adc
adc
out
push
lods
jg
jo
fdivl
pop
ficomps
repz
out
ficoms
loopne
scas
je
fwait
cmc
insb
jecxz
mov
shll
or
sub
sbbb
and
bound
inc
lcall
pushf
inc
push
dec
insb
jno
cmp
in
dec
lods
aad
in
xchg
xchg
xor
mov
out
mov
fistpl
jl
in
gs
cli
add
xchg
imul
in
dec
icebp
jb
jns
pop
gs
lock
push
xor
lret
clc
call
jbe
cli
jmp
inc
inc
adc
mov
cs
dec
push
fiadds
pop
jnp
dec
movsb
sbb
jbe
mov
xchg
outsb
fistpll
pusha
popf
jno
pop
jmp
fsts
cmp
push
adc
adc
sbb
jg
pop
pusha
dec
xchg
push
jb
jns
jecxz
cmpsb
fstps
sahf
outsl
lods
ss
mov
dec
dec
pusha
or
jno
jecxz
bound
lret
int3
cmp
push
adc
cltd
stos
test
pop
out
jg
push
dec
mulb
dec
add
ss
mov
mov
push
xchg
dec
call
fcoms
out
push
jecxz
sub
outsb
out
push
push
xlat
adc
pop
mov
pop
call
jo
sbb
add
adc
icebp
mov
and
in
out
rcll
jle
int
in
and
fcomps
outsl
push
mov
add
inc
sub
es
cwtl
xor
cmpsb
xor
dec
mov
xchg
pop
adc
scas
das
imul
fdivl
movsb
adc
lods
mov
shll
xchg
ror
push
jecxz
test
dec
leave
sbb
cli
and
xchg
mov
push
mov
add
jns
clc
outsl
imul
sub
mov
in
adc
and
movsl
pushf
sbb
cltd
dec
andl
bound
jecxz
loop
movsl
es
xor
lods
pop
xchg
fisttps
pop
push
mov
imul
pop
jl
xchg
push
ret
cld
int3
mov
mov
aad
inc
xchg
push
insb
sbb
cmpsl
push
rcll
sub
sbb
adc
sub
aas
lcall
sub
mov
and
sub
or
push
aad
fnstsw
jbe
jge
mov
mov
test
cmp
out
loope
outsb
subb
adc
sbb
cmpsb
mov
cld
mov
and
inc
adc
push
pop
ret
pushf
int3
out
icebp
in
clc
sbbl
jle
fidivrl
pop
xor
stos
push
xchg
mov
pusha
dec
mov
lods
ret
or
dec
mov
ja
sbb
icebp
ss
cld
add
popf
ds
pop
inc
inc
gs
xor
dec
mov
mov
addr16
dec
xor
push
sub
mov
mov
or
mov
int3
add
arpl
nop
leave
mov
call
fldenv
cmp
jo
lock
fs
push
dec
and
dec
mov
mov
xor
sbb
and
mov
pusha
fisubs
sub
inc
xchg
arpl
cmp
imul
pop
movsl
int3
gs
sbb
addr16
cmp
cmp
and
sub
mov
xchg
adc
pop
pop
sbb
push
int3
je
lds
stos
jg
scas
pop
in
scas
lret
add
xlat
xor
inc
fsts
mov
pop
fnsave
lret
jae
and
xor
inc
aaa
or
adc
mov
rcrl
les
jle
ret
xchg
cmp
mov
pop
bound
or
dec
stos
mov
xor
and
pop
nop
jne
rclb
push
and
jl
pop
lcall
xchg
inc
ret
dec
mov
lds
push
xchg
lods
adc
sbb
push
pop
dec
imul
imul
testl
sbb
mov
push
test
gs
cli
push
add
adc
mov
and
push
cltd
stc
sbb
rorb
leave
add
in
push
lock
stc
pop
ds
repnz
dec
inc
sahf
mov
into
mov
loope
fldenv
sbb
mov
inc
sbb
fnsave
ret
enter
add
or
sbb
or
dec
aaa
test
inc
insl
inc
in
insl
test
inc
insl
add
push
cwtl
sahf
outsl
mov
int
and
leave
cmp
shlb
mov
push
rclb
xchg
out
jo
imul
inc
ljmp
rol
mov
std
mov
lahf
imul
mov
movsb
sub
add
cs
imul
sbb
mov
das
mov
xor
xchg
mov
inc
imull
scas
or
mov
and
jne
cmp
xchg
call
mov
push
and
lods
movsl
es
pop
movsb
push
or
stc
push
pop
mov
lock
fildl
xchg
push
and
mov
cmp
xor
popa
fidivs
arpl
xchg
pop
imul
cmp
mov
in
push
mov
push
or
sar
sub
mov
imul
jp
insl
dec
inc
push
bound
imul
fyl2x
mov
adc
jno
dec
xor
mov
testl
dec
sbb
jle
popf
ds
adc
cmp
cmpsb
xor
xor
loopne
inc
nop
or
mov
notb
andl
mov
or
adc
int
and
shl
dec
push
mov
pop
imul
push
fnstenv
aaa
inc
sbb
lods
push
push
arpl
jg
ret
std
scas
and
mov
xlat
mov
xor
clc
inc
gs
fcoms
dec
mov
mov
push
xchg
sub
ja
cmp
pop
iret
add
loope
stos
movsl
loope
or
pushf
add
dec
mov
lahf
out
pop
cmpsb
stos
adcl
adc
mov
add
adc
out
test
xor
clc
fs
loope
xor
insl
push
imul
loopne
cmp
insl
jns
xchg
nop
daa
ret
cli
cli
or
sbb
stos
rolb
dec
mov
inc
fsubs
sbb
cli
add
mov
rep
cmp
jl
loop
jmp
fiaddl
add
test
in
dec
test
ljmp
repz
xor
cmpsb
in
sub
fnstsw
inc
sbb
out
cmp
lods
mov
sbb
pop
int3
movsl
insb
movsl
adc
out
sub
aaa
das
push
sbb
mov
push
and
and
push
sub
add
rcll
add
icebp
pusha
les
mov
stos
mov
mov
pop
mov
iret
xchg
lret
xchg
add
mov
xor
mov
scas
jo
pop
inc
popf
movsl
pop
xchg
mov
push
jb
int
or
in
sbbb
adc
rol
mov
inc
mov
fcompl
cmp
movsb
mov
icebp
xchg
imul
pop
or
cmp
in
mov
adc
mov
aaa
pushf
adc
or
jno
add
lahf
mov
jno
adc
xor
dec
lcall
cmp
mov
mov
push
arpl
ret
pop
setb
xchg
push
jno
dec
cmp
lahf
and
fimull
cltd
xchg
icebp
fwait
loopne
gs
mov
js
hlt
mov
and
cmc
fcompl
iret
outsb
pop
jg
and
and
clc
stc
sbb
stos
mov
pusha
pushf
and
or
test
aam
or
ficomps
andb
mov
mov
xor
lcall
sub
xchg
insl
dec
int3
jle
dec
mov
outsb
mov
adc
icebp
lods
das
call
sbb
sub
sub
dec
ljmp
pop
push
icebp
lods
lea
ret
test
scas
ss
fs
sub
movsl
jnp
ret
mov
call
xor
inc
sbb
fwait
out
out
xchg
cltd
fstpl
and
push
xchg
and
cs
cmp
cld
imul
es
int
test
xor
fsubrl
arpl
jno
or
out
orb
int
dec
pop
iret
lods
mov
mov
in
dec
push
pushf
xor
mov
add
fcomip
push
xchg
mov
pop
repz
push
lcall
jmp
call
mov
push
mov
sub
fnsave
pop
arpl
mov
loopne
jge
adc
fisttpl
jecxz
sub
jbe
mov
pushf
and
leave
sub
push
cmp
stos
sarl
test
pop
popa
sahf
and
pop
xchg
cmpb
negl
mov
sbb
xchg
mov
bound
loop
mov
push
pop
iret
and
in
push
pop
test
int
dec
pop
lret
xchg
arpl
or
adc
aad
pop
sub
dec
cmp
sbb
jg
and
fs
sub
rorb
xchg
mov
inc
jge
mov
addl
xchg
loope,pt
pop
out
in
add
add
mov
dec
test
inc
cmpsb
lock
gs
loope
dec
mov
mov
jns
scas
imul
imul
mov
jnp
adc
pop
pop
sbb
shrb
ret
cmpsb
movsl
test
adc
arpl
es
in
inc
lods
adc
inc
xor
cmp
mov
mov
xchg
loope
sub
xchg
addl
fistpl
inc
push
sbbb
rorb
cmp
jp
adc
xor
push
leave
out
stos
jmp
xchg
jno
xchg
push
leave
adc
push
int3
cmpsl
push
jecxz
stos
test
add
pop
leave
mov
adc
xlat
aaa
fcmovb
shll
cmp
xorl
xorb
and
test
mov
hlt
adc
sub
sbb
xor
dec
fsubr
testl
insl
and
andb
lcall
lret
roll
je
jecxz
mov
scas
dec
sub
sub
rcr
dec
pop
fcomps
inc
imul
ja
gs
cmp
test
fadd
neg
insl
pop
shrl
dec
pusha
sub
mov
push
lahf
jmp
pushf
push
inc
mov
jle
adc
test
jge
fwait
inc
jl
es
lock
aas
lret
dec
fsubl
adc
pop
inc
subl
and
divl
aaa
add
mov
mov
int
dec
jno
or
dec
neg
es
pop
loopne
jno
loop
rcrl
cmp
fsubrl
fildll
jno
mov
in
dec
jb
sub
in
sarb
and
leave
pushf
cmp
gs
inc
subb
popf
xor
cmp
jecxz
imul
xor
imul
mov
sbb
pop
outsb
xor
lods
mov
call
adcb
dec
insl
jae
mov
int3
je
or
in
pop
sbb
or
push
pushf
push
add
popa
adc
sbb
push
scas
pop
aad
out
mov
pop
sbb
pusha
cmpsb
lods
pushl
pop
sbb
jmp
dec
and
aaa
in
add
rolb
es
mov
add
mov
adcl
pop
es
outsb
sbb
in
dec
sbb
dec
sbb
mov
and
jge
push
add
pop
dec
cmp
pop
stc
push
push
xor
xchg
inc
nop
mov
divl
jge
inc
in
dec
pop
icebp
lock
popa
jge
popa
loop
into
xor
jnp
mov
imul
sbb
mov
dec
sub
pop
out
cltd
ficoml
jnp
xchg
jecxz
jp
jo
pop
popa
mull
push
or
popf
push
pop
aas
pop
jb
cmpsb
mov
inc
push
decb
cmp
cmpb
xor
inc
push
pop
mov
arpl
dec
minps
mov
push
cli
xlat
jbe
cmpl
xlat
sbb
dec
cs
pop
aaa
lock
sbb
cmp
inc
test
std
in
cmp
jae
mov
test
pusha
insl
mov
mov
ret
lods
imul
movsb
xchg
dec
pop
fbstp
xor
rolb
loope
fcmovnb
nop
popf
add
mov
pop
adc
mov
mov
sbb
movsb
mov
jo
mov
int3
mov
inc
popf
cmp
mov
cmpl
lahf
insl
sbb
fildll
add
inc
inc
pop
shl
jmp
mov
xchg
mov
iret
pop
loope
ja
mov
mov
cmp
jb
add
push
or
pop
cmp
cmp
jbe
imul
lds
add
pusha
or
mov
sub
jno
stos
dec
jb
push
fdivl
insl
or
or
xor
fidivl
sbbl
fistpll
jge
loope
cmp
cmp
loop
inc
cmp
and
call
mov
mov
push
dec
arpl
xchg
mov
sbb
pusha
inc
in
and
negl
mov
add
sub
daa
pop
pop
mov
lahf
loopne
es
xor
pop
pop
popa
in
xchg
je
rcl
fists
mov
pop
repnz
leave
and
inc
sub
inc
jmp
mov
add
push
int3
push
lret
jae
int3
repz
cld
adc
pop
and
mov
jecxz
adc
sbb
leave
mov
push
fsubrl
sub
inc
les
or
imul
push
icebp
pop
test
dec
lret
xor
push
outsl
repz
sbb
and
dec
pop
idiv
int3
sbb
add
and
aad
pop
repnz
sub
cmpsb
fwait
cmp
dec
lahf
mov
mov
add
adcl
pop
xchg
jo
sbb
icebp
pop
lcall
jo
and
jecxz
scas
lods
arpl
add
sahf
xor
mov
lcall
lock
mov
xchg
scas
xchg
jns
imul
jecxz
sbb
call
mov
xchg
push
mov
cltd
xlat
outsb
movsl
xchg
aas
idivl
xor
jb
cmp
aas
cmp
jb
add
inc
sbb
adc
dec
mov
shlb
adc
sbbb
sub
mov
xchg
pop
loope
out
and
mov
movsb
cmp
mov
mov
lods
dec
imull
mov
pop
popf
ret
cld
ljmp
outsl
outsl
cmp
lock
or
popf
outsl
mov
cmpsl
popw
fwait
or
inc
cmp
or
fildl
dec
push
sub
xchg
xchg
xchg
cmc
mov
sbb
clc
and
lcall
ljmp
xchg
mov
mov
cwtl
adc
push
mov
pop
lods
shrl
mov
sarb
xchg
dec
inc
jb
arpl
fdivrp
pop
inc
movsl
ss
mov
jb
repnz
mov
outsb
insb
inc
test
out
dec
cmpsb
jo
stc
cwtl
ja
sub
mov
out
test
push
sarl
stos
test
cmp
test
sbb
inc
repnz
mov
lods
push
iret
cmpsl
pop
movsb
xchg
dec
or
movsb
add
xor
jae
int3
in
inc
push
push
dec
push
fwait
incl
loop
and
imul
movsb
push
aaa
cmp
pusha
call
xor
sub
scas
push
mov
cmpsl
add
xchg
sub
add
pop
in
add
jge
scas
imul
ljmp
xor
mov
cmpsb
add
stos
fisubrs
aaa
sbb
lock
stos
cs
sahf
out
sbb
jb
test
mov
ds
loopne
mov
js
xor
mov
pmulhuw
inc
dec
dec
std
scas
pop
lock
fsubr
or
fwait
scas
sbb
or
xchg
aad
push
mov
hlt
sbb
outsb
sbb
mov
aad
and
jmp
cltd
stos
xor
sbb
mov
push
or
push
xor
repnz
fucomip
jp
mov
jbe
add
insl
repnz
ja
cmp
sub
adc
mov
ljmp
and
sbb
cmp
adcl
push
mov
pop
std
das
lock
push
inc
ljmp
cmp
xchg
add
das
addl
push
adc
push
es
and
loope
addr16
pop
fists
and
outsl
cmp
stc
dec
mov
dec
push
pop
pushf
inc
aas
imul
cmp
iret
cmp
pop
and
scas
mov
movsl
push
jns
jle
sub
mov
inc
jmp
imul
dec
dec
cli
adc
rcll
movsl
dec
ja
xor
cmpsl
mov
idivl
insl
cmpsl
fwait
xchg
pop
push
mov
lock
fnstenv
inc
sub
dec
push
mov
adc
and
mov
mov
call
jo
pop
test
mov
push
fxch
xor
dec
cld
das
imul
xorb
movsb
lea
inc
xor
cwtl
push
mov
mov
fmuls
or
sbb
push
push
pop
sub
adc
push
xchg
dec
sbb
jae
push
outsb
xchg
shll
push
lret
fimull
inc
sbb
mov
lds
jp
mov
pop
imul
dec
ljmp
lock
xchg
lods
or
pop
jno
loopne
out
je
mov
jg
scas
push
push
shll
cmpsb
test
dec
pusha
mov
iret
mov
fildl
jo
ljmp
jno
sub
lock
daa
push
jns
or
dec
jmp
xor
in
xor
jecxz
inc
lock
mov
pushf
push
popf
aam
jge
jmp
popa
cmp
mov
and
xor
cmpsb
push
xor
adc
jo
mov
arpl
fisubl
mov
and
lock
xchg
push
mov
xlat
mov
jo
jg
stos
orl
repz
gs
movsl
mov
stos
mov
xchg
test
adc
insl
notl
movsw
data16
pavgw
xchg
add
adc
ja
sarl
ljmp
xor
dec
and
mov
rcrb
push
sub
popa
sbb
push
insl
ret
lret
dec
test
or
mov
pop
mov
fildll
push
adc
mov
add
jge
adc
pop
gs
jno
sub
dec
jp
cmpsl
cmp
or
mov
scas
push
shrl
adc
and
jmp
test
cmpsb
push
jecxz
xchg
cltd
mov
aaa
dec
lods
loop
xchg
sub
push
and
jns
pusha
push
xlat
xor
test
fsts
mov
cli
inc
filds
adc
out
ret
dec
xor
jb
bound
pop
dec
jg
call
repz
sti
in
outsb
inc
add
pop
mov
fildll
pusha
sub
mov
andb
hlt
popa
push
xor
pop
lock
orb
mov
sti
dec
loop
adc
rcrb
movsb
movsl
fisubs
ret
shll
adc
xor
cmp
add
sub
out
loop
call
sbb
inc
dec
xor
inc
cmp
or
jne
inc
scas
pusha
mov
mov
addr16
pop
sbb
stos
adc
xchg
and
adc
shlb
xchg
xchg
and
or
popf
mul
sbb
sub
scas
xchg
int3
imul
pop
dec
pop
xor
cmpsl
ja
mov
fwait
repnz
or
sarl
mov
jmp
or
idivb
fs
outsl
sub
popf
out
gs
leave
xchg
cmpb
aam
cmp
aas
mov
or
dec
xor
mov
lods
mov
stc
and
push
or
dec
and
test
dec
dec
fisubrl
clc
int3
movsl
shll
mov
mov
sahf
mov
cltd
pop
popf
sbb
popf
out
push
pushl
jg
and
test
in
push
outsl
adc
sub
aas
push
mov
mov
in
jecxz
mov
hlt
mov
mov
mov
sbb
cwtl
and
lods
and
lcall
xchg
xchg
mov
dec
icebp
sub
mov
ljmp
push
jo
jo
sub
pushf
fisttpll
arpl
mov
lea
mov
mov
mov
mov
mov
inc
outsl
push
push
in
in
fcoms
fisubs
insl
shl
mov
stos
mov
jo
xchg
mov
mov
lock
push
aad
push
pop
push
je
push
shrl
out
sbb
jmp
cld
sub
test
stos
popa
sbb
loop
outsl
sub
xchg
mov
test
je
das
or
mov
adc
arpl
sbb
jmp
adc
pusha
cmp
jo
lret
orb
push
scas
cmp
movsl
mov
orb
push
in
lret
std
sub
dec
repz
adc
or
rcrl
das
xchg
mov
in
out
or
scas
outsl
ja
adcb
rcl
mov
in
push
mov
incl
bound
lahf
or
dec
mov
jb
dec
vmovapd
test
data16
adc
xchg
pop
lock
sbb
mov
jmp
or
sub
es
in
mov
jno
and
stos
push
mov
mov
ret
inc
repnz
iret
popf
lret
int
xor
dec
imul
dec
movsl
adcl
sub
lea
jbe
sub
aas
cltd
rclb
movsl
mov
or
in
rclb
stc
insb
or
scas
xlat
lcall
mov
pop
inc
jb
lock
and
xor
and
or
stos
sahf
es
sbb
mov
mov
and
cmp
ret
and
push
mov
dec
mov
divl
jo
into
xor
inc
sub
mov
js
xchg
pop
popf
loopne
dec
jecxz
adc
fiaddl
adc
pop
pop
insb
mov
cld
jae
rcrl
push
push
test
adc
out
xchg
popa
add
adc
ljmp
pop
adc
pop
pop
stc
nop
test
sub
sbb
aad
out
mov
nop
sub
out
loope
cld
or
cmpsb
es
dec
xchg
test
ljmp
pop
loop
mov
fisubl
or
cwtl
jns
pop
dec
into
xor
cwtl
xlat
sti
dec
outsb
xchg
call
xchg
pop
cmp
xor
pop
xor
or
sbb
dec
out
test
es
daa
cmpsl
jo
cli
or
pop
out
xlat
cmp
and
testl
sub
jb
movsl
outsb
cmp
movsl
pushl
movb
xchg
jnp
jns
mov
shrb
adc
fs
movsl
push
push
mov
pop
test
dec
sub
xor
or
in
mov
mov
rcrl
stos
lahf
addb
roll
leave
adc
mov
outsb
push
sbb
mov
adc
mov
je
mov
nop
dec
jg
xor
repz
int
shll
jp
push
adc
mov
pop
lock
sub
bound
cli
xchg
and
dec
dec
call
arpl
fsubrp
push
in
cmp
jl
sub
and
or
icebp
in
and
and
dec
mov
mov
ret
and
jns
xlat
push
lahf
fwait
outsb
mov
push
add
loopne
mov
lcall
push
adc
mov
sbb
mov
add
rcll
adc
lcall
sbb
mov
lock
fildll
inc
or
add
arpl
scas
call
popf
or
xchg
fidivl
dec
inc
das
adc
loope
sbb
jno,pt
mov
adc
jg
insl
sbb
pop
cmp
xor
sub
ret
xchg
sub
orb
or
leave
push
ljmp
in
imul
leave
dec
outsl
divb
dec
fstpl
or
xlat
movsl
or
jg
xor
pop
inc
inc
popf
inc
push
sbb
push
sub
fdivr
inc
sbb
mov
repnz
jecxz
sub
inc
xor
mov
xor
dec
mov
ficompl
push
adc
gs
mov
mov
fmull
enter
add
hlt
mov
xor
inc
and
mov
dec
inc
movsb
cs
sub
or
and
fwait
dec
aas
outsb
aad
nop
mov
mov
mov
pop
mov
fprem1
insl
outsl
imul
and
mov
call
rorb
xchg
push
fistpll
in
test
out
mov
mov
jb
add
out
pop
das
inc
popa
inc
push
dec
cltd
fstps
inc
adc
into
add
and
aas
mov
pop
lret
sbb
fisttpl
stc
lock
int3
jo
sbb
jae
cmc
mov
mov
outsb
pop
pop
in
fsubr
sbb
jo
jae
mov
and
outsl
lds
rclb
loopne
imul
adc
jmp
pop
and
sbb
mov
xchg
dec
ds
fcomip
insb
push
test
insb
in
mov
mov
jle
mov
push
push
fidivrl
imul
and
pop
aaa
mov
test
add
dec
or
and
xor
xor
sar
add
call
xor
movsl
inc
mov
mov
cmpsl
mov
lock
xor
jb
xchg
and
fmul
aas
xor
in
stc
mov
insl
in
xor
cli
lods
sbbl
out
adc
mov
out
shlb
or
mov
xor
pop
mov
adc
mov
mov
pusha
cmp
arpl
imul
lds
cmpsl
lods
pop
or
xchg
pop
push
dec
test
dec
adc
push
shll
cmp
movsb
out
addr16
out
aad
les
fucomip
das
sub
adc
or
ror
inc
fidivs
xchg
loope
ljmp
enter
adc
bound
ljmp
es
mov
fwait
mov
setnp
call
sbb
jl
and
pop
adcl
rolb
cld
xchg
jle
adc
arpl
sub
sub
les
or
lret
cli
jecxz
adc
push
rclb
divb
add
dec
push
inc
jecxz
ds
pushf
movl
jmp
in
sbb
mov
pop
push
fninit
std
pop
add
sbb
mov
ret
test
xchg
jno
jb
jp
mov
pusha
das
rclb
lcall
or
fstps
sub
sub
pop
sbb
add
js
adc
cmp
sub
shll
stc
std
shlb
fmull
mov
inc
add
jecxz
xchg
jo
dec
fisttps
arpl
testb
fiadds
cld
add
push
or
test
xlat
es
addr16
rcrb
mov
cmpsl
pop
pusha
push
lock
xor
dec
int3
jp
cli
je
ds
mov
mov
mov
addr16
mov
cld
jb
sub
lret
lods
test
jge
mov
inc
cmp
jo
push
gs
and
ret
jno
negl
inc
dec
ljmp
inc
ds
add
push
cmp
pop
xchg
test
mov
outsb
and
push
sub
sbb
orl
mov
xchg
test
pop
fidivl
addr16
jmp
gs
jp
pop
bound
bound
cmc
lret
dec
xlat
movsb
mov
repnz
push
xor
in
adc
and
mov
or
cmp
inc
mov
push
ja
imul
lret
ret
pop
jns
in
rorl
and
outsb
dec
xor
outsl
pop
cwtl
cltd
mov
lock
push
add
insl
and
movsb
daa
cmp
jecxz
stc
sbb
fiaddl
add
and
leave
cmp
fnstsw
xlat
push
jo
and
ss
xor
andl
push
or
sbb
and
cltd
jmp
es
push
and
push
cmp
popf
mov
mov
lds
outsb
pop
cs
clc
add
lahf
test
pop
data16
popa
xchg
cli
in
outsb
lock
sbb
add
sub
mov
shlb
testl
mov
inc
mov
ret
lock
loope
add
jbe
xorb
loope
inc
lcall
inc
cltd
arpl
mov
xchg
dec
and
ficomps
sbb
fistpl
rolb
xor
pop
testb
mov
ficompl
sbb
mov
jg
pop
adc
inc
pmaxsw
sub
into
and
adc
pop
push
mov
das
xchg
pushf
jne
dec
lcall
shlb
dec
orl
xchg
or
cmp
xlat
sub
idiv
lea
sarb
xchg
out
fs
sahf
insb
jbe
popf
push
out
int3
ja
in
pop
scas
mov
sbb
push
jmp
adc
xchg
sub
out
int
jnp
ret
and
pop
cmp
popa
pop
jne
dec
push
shlb
sub
mov
pop
cmp
dec
stos
jl
dec
jo
test
bound
orb
mov
jmp
lock
cmp
nop
movsl
pusha
and
jo
jnp
aam
pusha
jns
lea
icebp
push
cmp
push
pop
lods
mov
in
jmp
imul
sbb
or
mov
mov
pop
jae
push
and
mov
xor
das
cld
xor
outsl
mov
push
orb
push
pop
test
lret
sahf
mov
mov
mov
mov
push
rcrl
aaa
popf
push
daa
fwait
jb
daa
sbb
sbb
cmpsb
insl
jnp
adc
fisubl
aaa
sub
call
push
mov
xor
xchg
fs
shlb
dec
or
ss
mov
mov
enter
jp
test
mov
in
shr
cs
stos
das
or
pushf
movsl
aaa
mov
movsl
jo
lock
rcrb
imul
fwait
insl
and
sub
pop
mov
xor
pop
in
mov
inc
mov
loope
sbb
clc
mov
jl
ja
inc
pop
fcoms
inc
pusha
jo
sbb
xor
stos
mov
aaa
mov
push
sub
insb
lahf
mov
cmp
pop
xchg
in
div
addr16
cmp
lds
cmp
xchg
popa
dec
sub
ret
int
and
rclb
in
mov
imul
movsb
mov
sbb
mov
mulb
lods
daa
pop
ss
mov
cs
scas
add
jae
jnp
pop
sub
jno
in
dec
sbb
push
and
pushf
scas
jb
je
or
cmp
mov
icebp
push
mov
xchg
mov
lcall
dec
and
inc
cs
jne
ljmp
fwait
adc
sbb
xor
mov
pop
pop
lahf
clc
xchg
clc
adc
outsb
fs
in
pop
inc
outsl
in
lods
pop
mov
lods
cmc
pushf
cmp
mov
rolb
addr16
pop
push
cmpsl
jle
cwtl
bound
std
pop
mov
push
in
cmpsb
pop
stos
arpl
es
mov
fisubs
push
pusha
add
lock
pop
add
arpl
rcl
repz
andl
pop
xor
pop
sbb
movsb
mov
cmp
fidivl
pop
dec
mov
xor
xor
adc
and
jge
popf
fsubl
sub
mov
rcrl
pop
mov
movntps
jmp
out
push
fwait
pop
push
xchg
in
jle
or
and
dec
cmp
ja
xchg
int3
push
test
and
daa
mov
adc
xchg
sbb
adc
push
sub
fdivrl
jp
scas
outsl
pop
push
es
arpl
pusha
jno
adc
push
xor
arpl
xchg
inc
out
fmul
jg
popf
dec
pop
repnz
in
lods
arpl
out
xor
cmp
insl
and
push
clc
imul
dec
pop
mov
lds
adc
stc
ds
loopne
mov
call
es
jnp
xchg
in
jo
data16
gs
jb
add
ret
dec
jg
sbb
push
inc
or
dec
loopne
cmpsb
xchg
and
ret
insl
xchg
imul
lods
int
inc
inc
cmp
adc
cmp
int
sbbl
lret
loop
pop
ret
fcoml
pusha
xor
push
stc
sbb
mov
push
fstpt
or
add
cmp
jnp
js
and
mov
push
mov
lods
clc
mov
imulb
cmc
sbb
cmpl
jno
out
and
cmpsb
push
inc
sbb
subb
push
enter
or
mov
or
lock
inc
mov
sbb
test
outsl
mov
push
sub
data16
sti
adc
movsl
or
mov
sub
rol
pop
mov
add
add
mov
mov
out
sbb
inc
lret
mov
ljmp
lods
or
mov
add
push
rolb
nop
mov
pop
call
jb
pop
mov
aas
imul
fisubs
loop
sub
addr16
ret
mov
sub
push
sub
bnd
jns
leave
xor
sbb
cs
adc
lcall
jns
dec
xor
mov
mov
xchg
or
roll
and
in
mov
dec
rolb
adc
dec
movsb
pop
jb
in
dec
mov
scas
adc
cmp
sahf
mov
loop
popa
xchg
jb
lret
jmp
dec
lahf
int3
lea
mov
in
mov
out
mov
push
push
adc
dec
int
mov
sub
and
enter
in
mov
cwtl
lock
adc
pop
sbb
out
ljmp
xchg
div
insb
sbb
push
mov
dec
pop
and
cltd
dec
and
sub
push
out
cmc
lahf
mov
push
jb
mov
mov
xor
push
mov
cmp
icebp
daa
mov
test
rcrb
push
lret
fldt
adc
mov
dec
hlt
pavgb
sub
mov
and
push
loop
sarl
out
jg
stos
scas
sbb
mov
jmp
cli
rcrl
mov
jo
sbb
mov
or
iret
or
cld
mov
mov
sbb
into
out
scas
movsl
out
add
fmull
movsb
mov
add
sbb
dec
xor
lahf
adc
in
icebp
sti
cmp
pop
pop
fildl
sub
loopne
scas
push
jno
xchg
jne
lcall
cs
add
and
dec
jmp
cmp
sub
jo
gs
push
or
jbe
sub
test
xchg
pop
dec
mov
push
loop
pop
andl
jno
lahf
ret
enter
mull
repnz
shlb
xchg
mov
mov
lods
mov
pop
cmpsb
popa
shl
add
push
ds
aad
mov
out
jo
and
mov
test
jno
loop
cmp
outsb
push
xchg
jbe
mov
sbb
je
or
jp
fidivl
xchg
push
xchg
sub
scas
push
out
lock
dec
pop
ret
popf
mulb
mov
adc
push
repz
test
dec
andb
leave
and
adc
loop
add
adc
mov
jno
pop
movsb
shl
les
push
outsb
movb
jno
repnz
inc
inc
rolb
push
inc
xor
test
ss
dec
out
xchg
loop
ss
push
lock
push
dec
dec
pop
pop
movsl
adc
loope
mov
adc
mov
ss
pop
dec
fisttpl
je
and
scas
mov
or
or
cmp
iret
lock
js
movsb
out
jno
call
push
push
sub
jae
ret
stos
pop
push
in
jmp
repnz
mov
pop
add
pop
cmpsb
dec
push
jb
add
enter
dec
xchg
cli
mov
add
push
and
testb
lock
cmpsb
sub
imul
xchg
or
jo
or
xor
sub
imul
cmpsb
sbb
lods
bound
and
outsb
rorl
sbb
add
stos
movsl
and
push
cmp
repnz
jno
jmp
aas
and
pop
or
das
aaa
cld
xor
repnz
pusha
cmpsl
in
bound
sbb
pop
and
movsl
adc
push
add
fsub
mov
or
int
sbb
int3
in
mov
push
pusha
add
push
push
pushf
sahf
gs
jg
or
pop
sahf
out
pop
in
jne
test
mov
stos
dec
insl
pusha
repnz
aad
cmp
xchg
stos
stos
xchg
jnp
mov
nop
xor
cmp
and
out
repnz
mov
lea
xchg
lods
jbe
push
xorb
rolb
dec
add
repnz
pusha
adc
pushf
in
lahf
outsl
add
cwtl
pop
repz
pop
inc
outsl
lcall
pushf
sub
in
enter
jno
dec
mov
je
fucomi
mov
repnz
ss
rcrb
push
mov
xchg
pusha
es
xor
xchg
lret
pop
pop
adc
xor
adc
inc
jo
outsb
das
sub
xor
ror
test
loope
or
xor
adc
pushf
and
mov
sbb
out
dec
repnz
das
aam
jo
lods
in
xor
pop
ja
stc
jecxz
mov
sahf
call
adc
adc
pop
lods
cld
lea
aaa
and
lret
dec
popf
jo
ss
repnz
adc
mov
push
mov
mov
pop
and
ret
movsl
stc
icebp
jmp
adcb
lret
dec
fiaddl
pushf
es
add
cmp
cmp
jb
xor
and
and
xchg
xor
add
jno
and
sbb
test
movsb
cld
mov
in
mov
fisubrs
mov
sarl
cmp
cmp
and
push
and
lret
icebp
push
dec
and
stos
aaa
xor
int3
sub
pop
imul
lea
xchg
jno
gs
iret
subl
repnz
xor
loop
push
adc
movsb
jno
jae
or
cltd
popf
mov
sti
mov
or
add
xchg
lock
imul
mov
cmp
insl
inc
out
mov
pop
scas
mov
inc
add
sti
pop
push
outsb
jle
in
cmpsb
repnz
scas
pop
ror
xor
inc
jecxz
inc
movsl
sub
dec
xor
jb
dec
stos
sub
lret
push
mov
imul
or
int3
jbe
xor
lahf
or
dec
inc
popf
push
les
and
pop
push
push
or
ror
pop
loopne
cli
mov
xchg
jno
jge
and
sub
cld
rorl
cmpsb
sbb
pop
sub
sub
and
mov
bound
jnp
loopne
and
mov
arpl
rol
and
jb
push
mov
dec
mov
dec
dec
mov
and
and
mov
dec
sbb
imull
or
sub
jnp
std
xor
xchg
dec
in
inc
scas
sub
mov
pop
call
imul
mov
jno
lcall
insl
outsb
sub
loopne
and
inc
jo
imul
jb
mov
pop
jno
push
jae
call
call
sbb
xchg
shll
mov
dec
push
add
add
gs
jb
adc
and
mov
in
cmc
adc
dec
icebp
popf
test
rcrb
fdivl
and
sub
fbstp
jno
sbbb
lret
mov
or
sbb
scas
repnz
aaa
in
mov
repnz
sub
lds
sbb
xor
aas
mov
imul
mov
testl
pop
pop
lods
add
mov
jns
dec
test
lret
sbb
subl
pop
lcall
and
xor
rcl
rcrl
mov
rcll
sbb
sub
addr16
cmp
mov
dec
xor
adc
adc
lcall
mov
rcll
outsb
fbstp
out
push
test
test
jecxz
adc
pop
inc
fcomps
xor
jp
popa
sub
add
fwait
lock
sub
cli
fwait
xchg
rcl
jb
and
xchg
push
mov
xor
sarl
cmpsl
sahf
inc
es
mov
inc
jno
push
imul
std
and
jno
add
adc
fnstcw
inc
mov
pop
outsl
pop
f2xm1
int3
ja
xor
mov
cmp
shrb
mov
mov
sbb
add
ret
jo
adc
sub
fiaddl
jno
repnz
mov
icebp
or
scas
pop
in
jo
sbb
ja
ret
out
aaa
neg
addl
push
insl
out
sbb
sbb
in
ss
sub
pop
sbb
cmp
faddl
loopne
insl
xlat
pusha
sbb
mov
mov
lcall
rol
xor
xor
pop
sbb
cltd
loop
lds
shlb
add
insb
fsubl
xchg
imul
dec
dec
xor
std
jne
pop
aaa
rcll
test
xchg
lods
loopne
adc
int3
xchg
push
mov
mov
adc
pop
xchg
imul
lret
mov
and
arpl
sbb
subl
push
xchg
sub
push
jge
dec
xchg
sbb
stos
sbb
pushf
push
pop
stc
loop
adc
jecxz
jb
mov
aad
adc
xchg
xchg
ljmp
gs
dec
xor
adc
inc
sub
xor
xor
stos
out
daa
loopne
ja
popa
mov
movsl
inc
fstpl
cwtl
mov
int
bound
inc
mov
dec
jb
shr
pop
xor
movsl
jb
or
sbb
xchg
lahf
inc
js
sarl
rcl
mov
sbb
je
and
jle
cmp
push
adc
imul
mov
xchg
inc
cmp
sbb
jbe
in
sbb
xchg
or
mov
add
inc
or
jo
outsb
in
mov
notl
sti
dec
jae
sbb
inc
push
lds
cmp
lods
insb
cmpsl
jl
dec
add
in
loop
jmp
fsubrl
loop
rcrl
push
push
sub
imul
addr16
ret
dec
lea
out
bound
pop
roll
mov
xchg
loope
repnz
sbb
sub
ror
and
sar
inc
lds
dec
stc
dec
ja
fisttps
jne
pop
pop
andb
push
mov
movsb
jne
fsubp
movsl
xor
mov
fcmovnb
add
leave
movsl
mov
cli
mov
fs
cmp
hlt
movsl
mov
mov
cmp
ds
cmpsb
push
sbb
call
cmp
in
xchg
pusha
or
fwait
xchg
test
push
dec
jo
fistps
and
rcr
test
shlb
mov
scas
cmp
mov
iret
add
pop
xchg
dec
mov
negb
xor
cld
loope
gs
dec
mov
xor
clc
dec
clc
push
fs
pop
sbb
jg,pt
movsl
lock
push
lahf
sub
jmp
sbb
pop
xchg
lock
xor
dec
int3
test
mov
dec
pushf
xor
mov
xchg
nop
mov
jl
xor
pushl
ret
push
jle
test
pop
mov
jno
in
stos
or
mov
popf
xchg
push
fs
mov
movsl
in
xchg
inc
shlb
jns
adc
lock
mov
je
test
int3
aaa
add
jnp
jno
rol
repnz
pop
sbb
jecxz
rcrb
adc
lods
shr
je
arpl
cmc
jge
call
mov
movsb
or
sti
sub
cmpsb
push
mov
inc
adc
sbb
pop
fldcw
jmp
push
iret
iret
sahf
push
push
xlat
loopne
je
shrb
lock
jns
fs
mov
mov
push
sbb
lods
and
mov
outsb
lahf
sub
pop
adc
adc
inc
fs
mov
outsl
repnz
ret
sbb
cs
jae
and
adc
cmp
mov
mov
xor
fstpt
fsubrp
outsl
mov
lods
jns
pop
movsl
mov
cmovne
mov
jno
dec
test
inc
lds
push
mov
jge
pop
lods
add
lea
ficoms
sub
sbb
adc
call
dec
ret
lods
aaa
ljmp
dec
mov
pop
sbb
mov
stos
fwait
lret
mov
sbb
cmpsb
popa
jno
not
lahf
ss
outsl
es
pop
rolb
jge
loop
scas
xchg
shrb
lock
rclb
mov
test
jge
stos
push
mov
or
cmp
or
sub
sub
jbe
sbb
inc
mov
and
fwait
arpl
idivb
out
jp
in
imul
fs
push
push
fs
push
stos
int3
es
sbb
adc
test
mov
dec
je
test
adc
fwait
sbb
cmp
xchg
inc
push
sbb
vxorps
scas
add
jbe
push
mov
xorb
sub
and
xor
daa
imul
stos
cmp
outsl
sbb
in
adc
push
push
gs
rcll
call
pop
mov
rcrl
fnstsw
int3
imul
sbb
sub
push
fldenv
clc
movsb
lea
popf
imul
fimull
test
loope
push
loope
out
mov
test
add
test
push
out
adc
in
fdivrs
adcb
mov
popa
loopne
xchg
or
adc
sbb
pushf
fildl
inc
or
xchg
sub
out
cmp
push
or
pop
pop
jae
insb
int3
imulb
movsl
sbb
dec
icebp
dec
in
jmp
mov
jle
inc
xchg
or
push
test
inc
mov
dec
insl
divl
dec
and
sbb
enter
imul
jb
ljmp
sbb
out
fildl
jo
mov
outsl
push
mov
in
push
insl
jle
enter
mov
mov
mov
in
inc
mov
in
inc
movsb
repnz
ja
out
shlb
dec
addr16
jl
mov
push
and
rcrb
leave
cmp
jb
pop
mov
cltd
cmpsb
loopne
mov
daa
mov
mov
repnz
out
into
lahf
sub
imul
cmp
jno
xchg
jno
in
fs
jo
repnz
and
lods
aas
jno
lret
stos
es
outsl
stos
sub
lret
test
mov
mov
mov
pop
lock
lret
fs
repnz
orl
testl
jecxz
out
arpl
lea
test
jns
mov
mov
cs
push
stos
mov
iret
add
in
neg
push
lods
and
jno
insl
repnz
pushf
ljmp
ljmp
jo
cli
cmp
add
xor
xchg
adc
add
xor
add
aad
imul
out
ja
mov
testl
xchg
xchg
mov
inc
inc
in
inc
push
faddl
in
mov
xor
jbe
pop
ja
push
lcall
and
lret
and
bound
push
pushl
inc
inc
sar
add
loop
cmc
int3
jl
sub
xchg
or
not
push
dec
mov
xchg
and
nop
mov
loopne
push
je
mov
rorb
jecxz
cwtl
push
jo
inc
in
int3
test
loop
es
insl
sbb
cmp
insl
ja
insl
mov
sub
jmp
jae
pushf
shlb
es
dec
pop
xchg
in
js
popf
in
cmp
xchg
mov
pushf
mov
mov
das
xlat
cmc
daa
ljmp
fcomps
mov
dec
lret
mov
sbb
int3
xchg
mov
dec
inc
mov
push
and
stos
or
cs
stos
mov
cmp
clc
mov
mov
pop
addr16
sbb
dec
lret
lcall
push
lahf
cmp
incb
xchg
mov
or
jns
int
dec
into
movsb
repnz
addr16
inc
dec
fstpl
push
jl
sbb
mov
loopne
xor
pop
pop
dec
fs
sub
ficomps
sub
jae
fwait
push
leave
test
pop
push
or
cmpsb
pop
xchg
mov
test
fisubrs
fs
xchg
leave
in
ljmp
rcll
shl
xchg
repnz
xchg
insl
sbb
mov
dec
movsl
popa
ljmp
mov
xorb
shrl
testl
nop
jo
mov
subb
jns
rorb
fsubl
xchg
fwait
lock
xor
add
imul
ret
insl
xchg
loopne
mov
test
xlat
in
xor
aad
cmp
mov
hlt
pusha
and
mov
mov
fdivr
jmp
or
and
movsl
scas
xchg
mov
pop
sub
jmp
xlat
mov
mov
add
out
or
dec
cmpsb
data16
cmp
stos
testl
cs
call
mov
into
fs
mov
and
or
mov
or
in
fwait
mov
add
or
xor
dec
xor
rorb
dec
idivb
lock
lret
dec
mov
mov
xchg
mov
bound
gs
fidivl
es
push
sub
out
pop
cld
scas
mov
pop
inc
loop
fwait
mov
fwait
mov
lret
xchg
imul
in
push
lret
sbb
pop
fidivrl
xchg
ljmp
fisttpl
jmp
movsl
mov
adc
sbb
jae
push
add
cld
jp
mov
out
dec
jmp
jo
mov
push
sub
mov
jmp
pop
cmp
or
movsb
cmp
repnz
xor
inc
lret
adc
call
jo
mov
mov
ss
jl
lcall
pop
lahf
xor
imul
aam
movsl
mov
dec
lahf
xchg
push
mov
in
mov
bound
jo
imul
dec
imul
dec
sbb
jp
andb
adc
and
mov
pop
pushl
es
test
pop
sbb
movsb
pop
push
cmpsb
mov
sub
xchg
data16
test
mov
sub
cltd
insb
sbb
mov
xor
aaa
pop
movsl
jg
xor
fmuls
loope
imul
inc
add
push
sahf
lss
xchg
mov
jb
cmp
sar
and
mov
cmpsl
sub
shrb
push
dec
jnp
loope
push
push
mov
mov
incb
mov
fcomi
mov
cs
insl
xchg
pop
adc
jo
xadd
push
enter
add
lds
popa
ror
lret
pop
pop
and
ljmp
adc
outsb
arpl
jmp
loope
filds
call
inc
jecxz
roll
popa
arpl
push
pushf
out
pop
shl
cmp
inc
adc
cmp
test
cmpsb
mov
pop
stos
icebp
pop
insl
mov
ds
scas
dec
sbb
or
movsb
das
push
push
imul
dec
dec
inc
popa
push
dec
jmp
out
jbe
sbb
ss
xor
aam
mov
in
push
daa
int3
mov
es
testl
ljmp
add
lock
rolb
mov
leave
cmp
jo
cmp
outsl
sbb
hlt
xchg
pop
push
xor
ja
jb
adc
push
pop
mov
fcmove
sti
cwtl
adc
ljmp
out
loopne
xchg
sub
lcall
bound
movsl
enter
icebp
jns
pop
mov
pop
cs
jns
mov
test
pop
jbe
push
cmp
inc
and
dec
not
pop
sbb
or
jb
jb
sub
pop
js
and
jbe
inc
and
or
cmp
sub
scas
mov
lods
mov
cmc
pusha
cmpsb
inc
call
cmp
mov
cs
in
cs
lock
inc
lahf
gs
mov
sub
pop
or
cmp
jno
inc
lock
or
ret
pushf
lock
xchg
test
mov
inc
jns
movsb
in
loop
dec
cmp
rcrl
push
fwait
push
inc
sub
pusha
arpl
mov
cld
sahf
ffreep
arpl
and
mov
pushf
filds
jl
inc
cmp
mov
mov
std
sub
fcompl
and
mov
fsubrl
je
and
sbb
mov
sbb
and
dec
xchg
fnstenv
ja
in
mov
or
and
mov
in
dec
inc
push
repnz
mov
dec
rclb
push
in
and
insb
sbb
gs
movsl
and
adc
outsl
cwtl
fists
adc
lcall
cli
ret
mov
xor
mov
xor
fistpll
xor
pusha
jo
sarl
mov
int3
int3
insl
dec
jge
incl
push
dec
pusha
mov
mov
dec
pop
std
idivl
mov
es
cmp
enter
mov
and
xchg
push
hlt
and
jo
dec
aad
sub
push
pushf
mov
iret
gs
fldl
shr
cmpsl
fwait
mov
dec
inc
pop
js
fs
mov
cltd
iret
popf
mov
outsl
insl
fbstp
std
insl
ss
mov
or
sbbb
jb
push
sbb
imul
leave
push
xor
out
dec
cli
loopne
js
xor
mov
mov
push
adc
out
mov
jbe
loop
lcall
inc
pop
movsl
aad
jne
lds
lahf
inc
jp
cmpsb
aad
mov
test
sbb
movsb
xchg
mov
jbe
enter
daa
xor
movsb
dec
stos
scas
loope
mov
data16
enter
iret
fidivrs
int3
inc
xchg
xor
sti
outsb
int
sub
es
mov
jns
cmp
or
fistpll
adc
and
sbb
mov
sti
mov
out
in
fildl
push
sbb
lods
sahf
push
lcall
mov
mov
jp
push
mov
sbb
jg
pop
aam
dec
notb
scas
stos
mov
popa
and
mov
bound
mov
jno
jns
adc
and
sbb
pop
int
dec
jge
out
jo
repz
movsl
sbb
add
jecxz
sbb
adc
mov
dec
pushf
fildll
push
fsubl
dec
cmp
aaa
cwtl
mov
pusha
mov
sbb
clc
add
cs
insl
jecxz
jns
or
jno
arpl
repnz
cmpb
fwait
xchg
dec
xchg
nop
lods
add
push
push
push
and
mov
pop
jae
or
push
or
mov
adc
mov
cmpsb
movb
xchg
xchg
aaa
xor
or
cmp
enter
movsb
and
and
sub
ds
ja
sbb
pop
lods
adc
in
pushf
add
jae
adcl
pop
lret
sub
or
sbb
add
adc
cwtl
icebp
xor
or
sbb
iret
sub
inc
jb
ljmp
mov
mov
cmp
mov
pop
mov
push
cld
xor
mov
fmulp
or
cmpsb
xchg
mov
clc
lods
rcrl
in
pop
jmp
dec
movsb
out
pop
or
outsb
mov
movsl
subb
fisubl
and
cli
mov
ljmp
push
stc
xchg
gs
add
into
cmp
fs
outsb
sbb
mov
fiaddl
xchg
mov
subl
add
sbb
or
cmp
or
inc
and
push
insl
mov
lods
popa
fidivrl
dec
stc
xlat
cwtl
pop
xchg
fcompl
pop
push
into
in
sub
add
inc
sub
ja
adc
addr16
mov
stc
sbb
jb
stos
cmp
std
leave
lret
xor
mov
call
push
stos
pop
push
or
mov
push
fs
sbb
fs
int3
mov
mov
jno
mov
movl
jo,pt
xor
repz
ret
adc
dec
fldt
cmp
jmp
int3
push
mov
pop
mov
int
mov
lods
rcll
outsb
ret
push
jno
outsl
mov
outsb
lock
mov
dec
and
movsb
out
xchg
gs
jbe
hlt
int3
and
outsb
std
js
sbbb
sub
fiaddl
std
xchg
push
loopne
pop
xor
repnz
mov
in
jle
aas
push
incb
xchg
fs
jmp
shr
jo
sti
pop
icebp
push
mov
test
mov
test
inc
mov
add
sarb
sbb
sbb
sub
add
cmp
aaa
rcll
outsl
push
jno
jp
loope
adc
push
movb
mov
sbb
test
and
mov
dec
jge
cmp
push
mov
or
cwtl
adc
pop
and
or
inc
stos
adc
adc
repz
out
cmpsb
in
lea
push
cmp
notb
xor
movsb
out
ljmp
loopne
loope
mov
cmpsl
movsl
xor
test
ficoml
pop
adc
adc
inc
and
jno
sub
jns
addr16
sbb
push
dec
ljmp
xlat
cmp
loopne
and
mov
mov
sbb
pop
mov
mov
loopne
jo
sti
jno
sub
lock
ret
mov
mov
inc
xor
lock
xchg
and
add
es
or
mov
push
lock
xor
xor
adc
inc
lods
mov
xor
pop
frstor
cmp
mov
mov
xor
sarl
or
movsb
dec
xchg
inc
pop
je
clc
mov
sbb
push
test
mov
xor
fildll
rcl
jo
fidivrs
dec
adc
adc
mov
in
mov
lods
bnd
nop
outsb
dec
negl
pop
cmp
or
imul
out
std
pop
push
jg
sti
insl
aas
mov
test
js
cmp
mov
gs
or
stos
lahf
shll
loopne
jno
jle
cmc
ja
cmc
xchg
mov
jns
or
xor
adc
dec
in
jno
add
sub
movsb
pop
pop
mov
mov
mov
call
int3
jnp
test
lahf
jge
ljmp
jle
pop
or
rcrl
lcall
movsl
xchg
add
adc
push
and
mov
rol
test
in
mov
cmp
jno
bound
mov
sti
orl
dec
jge
scas
sub
and
ret
into
jno
xchg
mov
xchg
push
push
loop
imul
movsl
lea
jmp
call
mov
jbe
sbb
xchg
mov
cbtw
subl
sbb
jb
inc
sub
les
sub
cmp
loope
int3
mov
add
sub
lcall
sbb
mov
xchg
hlt
fwait
cli
lock
ss
xorb
test
xor
or
lcall
ljmp
push
loopne
rorl
inc
lock
out
ljmp
cmp
xchg
inc
daa
imul
pusha
jl
and
call
in
adc
cmpsb
cmpsb
fldcw
ss
cmp
icebp
outsb
ds
out
fcomip
or
mov
jno
popa
repz
jecxz
pop
hlt
jmp
sbbb
sti
stos
and
push
sub
sahf
subb
outsb
or
mov
push
jbe
jo
push
adc
movsl
jb
push
jp
imul
sti
movsl
sbb
dec
pop
in
fsts
mov
shrb
mov
inc
lret
popf
dec
and
loopew
lret
cltd
inc
adc
sti
push
stos
arpl
shll
mov
adc
ja
push
shl
ret
mov
mov
pop
mov
jo
pop
in
sub
mov
popa
lock
out
adc
and
lods
xchg
es
das
jl
add
in
cli
dec
outsl
lock
jno
les
bound
rol
repz
inc
sahf
fnsave
lds
lods
aaa
xchg
lcall
pop
out
xor
pop
push
sbb
jae
inc
push
adc
lret
or
rcl
dec
jl
call
mov
mov
not
dec
push
push
pushf
mov
mov
ficomps
xchg
sub
sti
or
push
lea
mov
fimuls
les
push
lock
fwait
in
mov
das
jp
mov
mov
inc
js
lahf
leave
ljmp
push
test
xchg
adc
lahf
loope
xor
pop
push
pusha
movsl
repnz
fistps
shr
movsb
mov
add
in
insl
stos
jo
dec
mov
xor
test
pop
mov
sub
sbb
cld
mov
scas
cmp
pop
out
xchg
in
xor
stos
mov
cvttps2pi
sbb
outsl
test
imul
in
push
mov
mov
sbb
pop
sbb
mov
mov
loope
sub
add
loop
mov
xorl
jo
or
in
jno
push
addr16
out
sbb
dec
int
mov
adc
arpl
dec
adc
jecxz
sub
push
adc
outsl
popa
loopne
out
imul
inc
push
sub
pop
sbb
or
sbb
jmp
aam
push
jo
aad
mov
sbb
adc
mov
nop
stos
test
or
in
sbb
mov
inc
in
out
imul
adc
lcall
dec
jmp
mov
in
xor
sbb
sbb
lock
gs
sbb
out
in
sbb
xor
mov
add
in
sbb
lock
sbb
push
fs
hlt
mov
inc
in
mov
inc
sbb
sbb
lock
sbb
push
data16
sbb
xor
add
add
mov
xchg
sbb
lock
jecxz
fs
jo
ss
clc
in
rcrb
cmp
sub
test
imul
aas
sbb
push
adc
mov
mov
in
pop
mov
lea
mov
in
sbb
jo
out
lock
out
sbb
in
sbb
lock
sbb
mov
mov
jno
dec
imul
xchg
dec
arpl
or
lock
sbb
and
inc
popa
pop
push
stos
fs
sbb
lock
sbb
or
mov
inc
cmp
mov
test
sbb
jmp
sbb
lock
sbb
push
mov
cwtl
sbb
lock
or
fs
mov
mov
in
sbb
lock
or
jl
mov
call
mov
pop
dec
outsb
test
lock
gs
sbb
in
out
stos
mov
cltd
lcall
lock
jo
mov
mov
test
adc
in
sbb
lock
or
inc
ja
or
sbb
sbb
lock
imul
imul
xor
dec
mov
sbb
push
or
sbb
lock
out
push
lock
cmp
mov
dec
cmp
or
sbb
push
or
mov
jl
dec
aaa
jno
lods
or
sbb
lock
push
mov
mov
test
cmp
imul
mov
sbb
dec
lods
bound
in
or
stos
scas
dec
sub
jo
jno
xor
in
sbb
inc
dec
leave
dec
scas
xchg
cli
sbb
push
xchg
dec
test
insl
in
adc
les
stos
in
in
sbb
jno
daa
and
push
imul
or
mov
in
sbb
mov
mov
add
nop
in
xchg
adc
or
xchg
sbb
jp
outsb
sbb
lock
push
in
sbb
lock
mov
in
jecxz
dec
sbb
push
gs
in
sbb
lock
sbb
sti
in
sbb
lock
gs
sbb
push
nop
in
sbb
lock
mov
outsl
stos
loop
gs
add
sub
lods
pop
xchg
push
sbb
adc
push
sub
cwtl
mov
cmpsl
icebp
loopne
std
jo
xchg
add
add
jb
cmc
push
int3
xchg
cwtl
jg
sbb
xchg
aad
or
sbb
sbb
in
loope
push
adc
and
pop
pop
adc
pop
pushf
push
xchg
push
insb
in
xor
test
xchg
loope
sbb
aaa
rcl
out
call
ffreep
outsl
int3
pop
mov
outsb
lods
mov
cwtl
cltd
sbb
les
int3
loop
into
shrb
adc
push
mov
outsb
mov
cmpsb
outsb
pop
loopne
mov
into
push
mov
pop
mov
loopne
out
pop
push
xchg
jnp
add
cmp
pop
out
lods
push
xor
xor
push
out
mov
jbe
lods
fwait
jmp
mov
xchg
push
pop
stc
or
and
imul
push
mov
cmp
inc
roll
mov
popf
push
adc
sbb
rcrl
mov
and
lock
stc
or
or
cmp
jnp
out
fnstsw
cmp
lcall
lods
arpl
adc
push
push
push
push
xchg
dec
nop
gs
fs
sbb
pushf
inc
cmp
adc
movsb
cmp
cltd
push
sub
icebp
push
fisttpl
test
push
or
adc
xchg
xchg
aas
das
adc
mov
or
pusha
bound
mov
stos
pop
cwtl
subl
rcl
mov
loop
loopne
adc
push
xchg
icebp
cmp
jle
inc
gs
lock
xchg
adc
loope
pop
cmp
imul
add
lods
mov
imul
outsl
xchg
jge
xchg
xchg
jo
repz
loopne
pop
int3
test
or
inc
pop
add
mov
mov
into
addr16
in
loop
jb
in
push
cmc
mov
jnp
rolb
sub
in
and
mov
add
wrmsr
add
inc
and
xor
xor
jmp
fbld
pop
imul
adc
lcall
mov
push
psllw
out
sbb
and
mov
lods
bound
scas
fistps
xor
call
ljmp
adc
pop
imul
lcall
or
jno
not
dec
out
add
pusha
hlt
lcall
repnz
or
push
loop
jmp
add
data16
in
mov
ja
js
mov
fsubrp
loope
bound
adc
hlt
xchg
cmp
mov
scas
in
mov
and
shll
mov
test
xchg
call
mov
in
pop
sbb
pop
and
fildll
xchg
adc
lret
add
pop
jbe
loopne
cmp
fistl
shll
push
out
lock
int3
push
cltd
jno
jmp
dec
add
adc
pop
xor
push
mov
mov
mov
ja
ficoml
in
ljmp
and
sbb
xor
push
or
gs
mov
and
out
sbb
pop
rcrl
add
ficoms
fistl
arpl
pop
test
in
push
ja
xchg
imul
sbb
jle
dec
jmp
push
jne
repnz
daa
push
push
mov
daa
fs
sbb
push
mov
xor
movsl
cmp
push
lea
rclb
pop
push
push
data16
push
aad
aam
push
out
fsts
jo
push
stos
pop
mov
mov
push
arpl
icebp
mov
lods
dec
push
push
movsb
movsl
fldcw
sbb
cmp
push
rcrb
mov
stc
xchg
cmp
shlb
mov
adc
pop
adc
or
pop
xlat
adc
popf
pcmpgtw
test
adc
out
jo
and
fcoml
int3
cli
mov
movsb
add
outsb
fs
sub
scas
pushf
mov
shlb
xor
lcall
xchg
roll
cmp
adc
sbb
mov
fcoml
or
or
pop
repnz
pop
push
pushf
outsb
mov
xor
stc
pop
sti
cld
scas
sub
push
aad
dec
gs
cltd
mov
arpl
or
jne
sbb
adc
pop
sbb
aas
lock
mov
lret
aad
inc
push
dec
xor
enter
sbb
mov
dec
and
pop
in
and
and
adc
pop
lods
imul
ficoml
mov
push
in
stos
fimuls
adcl
cmp
or
mov
xchg
or
dec
iret
mov
cmpsl
lgs
add
add
adc
pop
push
adc
inc
pop
cwtl
movsb
mov
xor
fbld
adc
ficomps
and
mov
pop
pop
rorl
xor
dec
cwtl
andb
lods
mov
fdivrl
out
xorl
ljmp
xchg
pop
pop
xor
and
idivb
dec
mov
push
cld
pop
jbe
dec
or
insl
mov
adc
dec
add
shlb
jno
sub
addr16
ljmp
ljmp
aad
jo
mov
dec
sbb
movswl
and
jmp
lods
repz
mov
movsb
adc
sahf
sbb
sbb
insl
dec
enter
dec
xchg
pop
pop
push
pop
xchg
cld
stc
fidivl
dec
lret
mov
xor
adc
orb
and
js
out
mov
insl
arpl
int3
push
shr
movsb
pushf
pop
sbb
and
clc
fcoml
xchg
cmp
lods
loopne
adc
ret
out
nop
and
adc
mov
or
push
mov
movsb
add
call
lahf
or
bound
sti
mov
stos
sub
or
out
mov
pusha
int3
stos
int3
pushf
xlat
push
test
sbb
and
push
push
call
jb
movsl
lahf
pusha
sub
mov
aam
dec
mov
adc
icebp
mov
adc
adc
ss
mov
std
lcall
cli
sbb
mov
lock
das
mov
rorb
insb
cld
inc
sbb
cli
and
add
sub
inc
fwait
dec
pusha
jge
outsb
lods
loope
mov
ja
cltd
arpl
sahf
out
loope
adc
mov
fs
push
cmp
add
adc
push
cli
icebp
cmp
pop
jne
jb
sub
sub
cmp
fsubp
movsb
and
sub
and
aam
and
add
push
mov
test
jg
out
dec
and
insb
ljmp
sbbl
sbb
xor
shlb
push
imul
test
bound
rcrb
or
lds
xor
mov
mov
int3
adc
xchg
pop
outsb
movsl
jns
les
in
cwtl
pop
xchg
fcmovu
cmp
daa
jae
mov
pop
xor
mov
cmp
pop
dec
xchg
bound
or
fdiv
mov
cmc
pop
adc
xor
clc
mov
mov
cmp
mov
lea
outsl
addr16
sub
movsb
add
in
mov
xor
cmp
lcall
movsl
dec
data16
mov
cld
and
je
outsl
adc
test
mov
add
fstpl
jno
lods
and
pusha
sbb
popf
xchg
aas
mov
sub
xchg
pop
dec
test
call
out
fs
mov
pop
fcom
fsubl
push
nop
jmp
sub
pop
xlat
bound
push
inc
mov
sbb
push
add
int3
mov
xchg
fcomi
test
cmp
fwait
xchg
mov
mov
gs
enter
pop
jns
xchg
scas
sbb
mov
adc
dec
fwait
repnz
fcoml
adc
mov
fisubs
xchg
ljmp
lret
fwait
push
sbb
push
aam
dec
sub
in
lea
mov
sbb
cmp
sbb
fisttpl
test
pushf
mov
adc
jae
pop
add
mov
pop
mov
adc
mov
push
push
dec
mov
jae
movsl
cltd
push
jl
push
cmp
dec
outsl
mov
mov
in
iret
sbb
push
pusha
pop
lock
rcrb
jno
test
or
sbb
lods
cld
mov
repnz
push
mov
pop
push
sbb
dec
cmp
adc
shr
jle
loop
mov
xchg
pop
pop
xor
js
cli
sub
gs
fimull
mov
lcall
adc
xor
mov
adc
dec
adc
fsubl
scas
pusha
cwtl
adc
movsl
mov
stos
cli
mov
pop
mov
movsl
sbb
mov
mov
adc
mov
mov
roll
sub
sbbl
nop
xchg
sbb
aaa
fsubs
push
lods
jp
fdiv
xchg
in
xor
adc
lock
push
fcomi
inc
clc
shll
jge
cmp
inc
jo
shlb
out
xor
loopne
add
adc
pop
inc
mov
push
sbb
cwtl
pop
dec
push
ss
ja
mov
les
pop
sub
xchg
add
cwtl
call
adc
pop
mov
mov
orl
lret
inc
xor
jmp
popf
mov
mov
jno
pushf
divb
pop
mov
adc
xchg
cmp
sbb
pushf
jb
mov
out
les
das
loop
mov
iret
or
xor
test
sub
pop
test
pop
in
in
cli
mov
lret
add
adc
pusha
out
lcall
roll
ljmp
mov
xor
jmp
mov
int3
icebp
lods
sbb
out
sbb
inc
or
fs
push
pushf
dec
fistpl
ja
test
pop
popa
xor
mov
push
or
xorb
adc
cltd
push
imul
cmp
movsl
xchg
xlat
push
mov
stos
push
in
test
sbb
fwait
gs
test
jmp
xchg
into
adc
inc
add
sbb
pop
and
gs
aaa
std
mov
dec
cmpsl
mov
fucomp
mov
push
xor
fwait
sbb
in
flds
out
mov
xchg
inc
push
xor
test
add
pop
fmuls
pop
int
lock
adc
jge
mov
leave
xchg
mov
repnz
sub
mov
mov
sbb
xor
sarl
in
jno
insb
mov
addr16
cmp
adc
imul
shll
push
in
sbb
pusha
pop
add
arpl
aaa
mov
cmp
push
jmp
add
mov
outsl
fs
shr
lret
orl
fucomp
jno
out
outsl
mov
data16
das
dec
or
stos
lods
movsb
imul
adc
inc
stos
data16
push
dec
in
jecxz
mov
sub
sbb
outsl
jno
leave
inc
push
int
sbb
scas
push
adc
sub
test
mov
mov
sbb
ret
inc
adc
xor
mov
lods
lahf
and
out
fmuls
data16
push
mov
outsb
sahf
mov
popf
push
mov
mov
gs
dec
push
pop
adc
sbb
mov
pushf
sahf
mov
insl
popa
pop
push
adc
push
push
or
push
fimuls
std
or
inc
and
push
push
fwait
mov
adc
hlt
mov
pop
jecxz
inc
push
ljmp
iret
inc
push
outsl
pop
mov
mov
shll
mov
pop
push
mov
mov
in
pop
or
mov
mov
mov
repnz
das
stc
dec
and
push
sbb
and
or
push
mov
int
add
leave
inc
push
scas
mov
data16
dec
bound
inc
cmp
add
pop
outsb
mov
inc
cwtl
in
insl
pop
in
sbb
sbb
cmp
push
mov
push
pop
mov
jo
outsl
cwtl
push
push
push
jo
mov
sbb
frstor
or
pop
adc
mov
sbb
fisubl
push
xor
adc
mov
sub
add
push
and
pop
adc
out
data16
cltd
pop
rcrb
outsb
cmp
xchg
add
pop
sub
insb
or
fs
cmp
test
sub
adc
pop
jmp
clc
je
outsb
push
mov
clc
cmp
sbb
or
lods
jo
lods
bound
aam
add
sbb
pop
sbb
out
lahf
lods
lock
jno
sbb
clc
aam
inc
or
or
or
fimull
or
movsb
sub
mov
dec
ret
outsb
push
mov
clc
cmp
sbb
les
cmp
fdecstp
fdivrl
xor
outsb
sub
jmp
bound
dec
imul
scas
xchg
addr16
inc
and
jo
das
hlt
test
outsb
out
addr16
push
mov
ljmp
addr16
add
mov
cs
das
sub
mov
or
and
movsb
sub
and
push
in
adc
and
in
mov
mov
sbb
outsb
xchg
loope
add
shrb
sbb
adc
push
cwtl
inc
bound
push
cmp
test
mov
sbb
test
add
in
or
and
jno
push
sbb
or
and
outsb
test
shrl
sbb
or
push
dec
outsb
outsl
sbb
add
mov
push
push
cwtl
push
inc
mov
mov
mov
cwtl
mov
decb
fstpl
and
push
push
mov
jo
outsb
mov
adc
or
mov
outsl
ja
dec
data16
in
mov
mov
out
ljmp
push
jmp
in
mov
insb
push
std
bound
mov
adc
push
sbb
movsb
sbb
gs
bound
adc
cs
test
xchg
addr16
in
sbb
jno
imul
dec
adc
inc
lods
sbb
adc
sub
jo
mov
and
icebp
outsl
push
sub
pop
mov
add
xor
insb
cmp
mov
cmpsl
xor
adc
jno
cmp
mov
push
xor
out
sahf
out
ret
xchg
adc
lods
xchg
outsb
cld
inc
jo
sub
push
int
or
dec
in
outsl
sbb
and
jo
adc
call
data16
inc
add
lock
jo
pop
dec
test
or
fadds
sti
outsb
or
fdivp
sarl
jbe
bound
mov
or
jne
jo
xchg
scas
movsb
pushf
mulb
imul
adc
and
fistpll
mov
fsubl
lock
sti
popa
mov
mov
push
mov
cmc
or
test
pop
lods
outsb
inc
mov
in
mov
mov
mov
les
out
mov
lods
xchg
or
and
pop
pop
fisttps
push
fwait
bnd
lods
ja
push
mov
bnd
sbb
lods
addb
add
gs
fs
fs
jo
push
dec
lods
fldl2e
mov
mov
xor
jg
test
stos
popa
or
and
push
cltd
push
lcall
push
jae
rclb
into
pop
dec
pop
bound
pop
inc
xchg
andb
cwtl
popa
out
arpl
lods
outsb
lods
in
mov
scas
insl
mov
xchg
mov
mov
sub
int
sarb
repz
push
cli
movsb
sbb
mov
inc
dec
dec
iret
mov
push
movsb
xchg
or
add
cwtl
ds
aad
xor
aaa
push
push
outsl
dec
inc
push
or
cwtl
mov
out
cltd
cmc
push
mov
fimuls
ljmp
stos
ds
lahf
cmp
pop
insl
add
test
sbb
mov
ja
jb
lahf
mov
ljmp
jno
jno
mov
sti
mov
and
scas
mov
and
sbb
out
fs
lods
push
push
xor
xchg
movsb
lods
mov
outsl
aam
fnstcw
ja
mov
inc
test
mov
jne
aam
pop
lea
xchg
stos
push
and
pop
setge
scas
cwtl
movsl
fcoml
adc
lods
pushfw
push
data16
shrb
pushf
pop
push
pop
dec
imul
push
xchg
sbb
stos
roll
sbb
sub
pop
mov
in
mov
push
cltd
cmp
pop
xchg
mov
popf
pop
data16
pop
push
icebp
outsb
in
sbb
lock
push
sbb
test
int
mov
xchg
outsb
dec
add
lods
sbb
imul
xchg
mov
sbb
pop
sbb
data16
mov
mov
enter
cmpsb
adc
outsb
push
sbb
push
mov
loopne
pop
sbb
xchg
push
and
pop
inc
sub
push
push
sbb
push
push
mov
test
outsl
pop
pusha
adc
outsb
cmp
popf
pop
popf
mov
out
xchg
dec
push
nop
scas
fcomps
mov
mov
push
mov
lods
adc
call
sbb
add
inc
in
mov
loopne
xor
pop
mov
aaa
cmc
pop
jo
mov
xchg
mov
lods
sbb
popa
shl
je
pop
sbb
outsb
push
and
call
sbb
inc
sub
stos
out
hlt
cld
fdiv
sbb
mov
in
push
inc
outsb
adc
adc
data16
lock
xchg
push
fadds
lods
push
fwait
jo
insb
cmp
pop
pop
cld
adc
mov
xchg
gs
pop
xchg
notb
push
adc
xchg
or
fistpl
add
adc
sbb
lods
push
inc
test
and
leave
jno
jnp
call
inc
lods
mov
mov
pop
pop
out
stc
repz
and
lods
loope
ffreep
roll
and
mov
fstps
pop
push
dec
in
sbb
push
test
or
adc
push
add
inc
push
fs
aam
push
mov
mov
sbb
cmp
imul
mov
adc
clc
mov
fwait
lods
and
popa
fcoms
jl
xchg
inc
push
jno
fcoms
mov
dec
inc
inc
out
movsb
icebp
dec
sub
mov
outsl
sahf
jno
movsb
push
and
pop
mov
idivb
outsl
mov
mov
sbb
lcall
mov
xchg
cmp
xor
or
jo
pop
mov
sbb
fisubrl
bound
xchg
push
sbb
mov
xor
add
out
push
sub
or
fisubrs
or
add
jno
or
push
aad
push
or
dec
adc
mov
pop
jmp
outsl
xorb
mov
cwtl
fsubp
rcl
mov
push
pop
lcall
push
pop
xchg
sub
inc
sbb
pop
pop
pop
mov
imul
cvtps2pd
data16
cmp
cmp
test
das
out
movsl
icebp
insb
inc
mov
cmp
push
pop
sbb
adc
fs
sbb
mov
adc
test
push
push
lock
xor
pop
mov
push
xor
out
adc
or
adc
add
in
xchg
fs
add
dec
cmpsl
or
mov
fistpl
mov
into
push
mov
and
pop
lcall
xchg
outsb
fwait
cwtl
in
pop
xchg
lock
sub
jb
pop
addr16
ficoml
bound
push
insb
adc
aad
nop
cltd
cwtl
adc
add
pop
mov
or
cli
adc
mov
lret
faddl
or
push
cwtl
push
pop
cltd
xchg
fists
push
mov
shll
into
push
loopne
xchg
sbb
fnstenv
push
xchg
sbb
ret
fs
mov
inc
fcoms
pop
push
sbb
push
in
sti
ret
ret
inc
push
push
and
mov
push
cmp
sbb
negb
imul
add
or
out
jo
das
mov
jp
insl
xor
test
sub
push
mov
call
dec
sbb
xchg
bound
adc
mov
mov
scas
das
scas
add
fs
or
adc
push
push
in
mov
mov
nop
gs
add
shrl
enter
dec
outsb
cltd
push
add
loopne
cltd
fisubl
movsl
outsb
xor
add
shld
and
adc
push
pop
or
add
outsb
stc
pop
sbb
iret
and
ljmp
stos
mov
cld
jo
pop
mov
stos
push
xor
fs
cmp
and
or
sub
gs
mov
and
lods
mov
sbb
add
push
popf
dec
test
and
dec
jmp
shr
rclb
inc
pop
or
mov
outsb
push
lahf
xchg
insb
sbb
mov
lret
and
mov
adc
mov
fsubrs
or
sbb
pushf
adc
jp
mov
outsb
movsl
icebp
xchg
loope
outsb
add
adc
outsb
pop
mov
adcb
adc
dec
add
pop
mov
out
gs
iret
mov
adc
jle
cli
mov
push
inc
pop
jecxz
mov
push
or
outsb
movsl
push
push
push
fs
adc
inc
outsb
push
and
subl
test
sbb
push
sbb
adc
add
xor
outsb
dec
xor
adc
adc
mov
xlat
call
push
insl
push
push
jmp
sbb
mov
sarb
sbb
pop
xchg
sbb
sub
in
pop
push
mov
sbb
js
sbb
subb
lock
jo
jecxz
sbb
scas
outsl
and
sub
loopne
bound
adc
aad
sbb
xor
aad
lea
xorb
subl
sbb
mov
shll
das
pop
push
mov
mov
mov
arpl
push
sub
xor
mov
push
inc
cmp
gs
sbb
pop
sbb
push
imul
lods
dec
pop
adc
jp
rcrl
popf
push
mov
imul
mov
dec
jae
xor
xchg
mov
adc
sub
lds
mov
mov
pop
loopne
sbb
pop
pop
mov
divl
push
std
or
mov
shrb
call
push
mov
xchg
jne
cli
decb
sub
sahf
cmpsb
mov
push
or
popa
jbe
mov
cmp
pop
push
inc
xorb
push
mov
repz
mov
pop
jno
shll
xchg
lds
push
xlat
pushf
jo
outsl
jae
dec
jmp
cmp
outsl
xchg
fucom
xchg
inc
rolw
mov
adc
cli
mov
jo
testb
cltd
mov
ja
in
mov
jno
mov
or
ja
leave
ljmp
arpl
les
cmp
pop
add
sbb
cmpsl
fs
jle
into
sbb
mov
sbb
pop
stos
in
imul
addl
fiadds
adc
sbb
mov
and
inc
mov
lahf
sbb
add
push
scas
pop
mov
mov
push
or
insl
js
adc
push
and
mov
gs
sbb
add
jno
adc
xchg
add
faddl
mov
adc
mov
rolb
pop
xchg
shlb
xor
lods
insl
outsl
mov
lahf
repnz
xor
mov
arpl
pop
jg
mov
adc
pusha
fimuls
outsl
push
bound
and
xorb
shlb
fcoml
lods
mov
mov
cmp
ffree
movsb
mov
fadd
jmp
test
fwait
pop
jbe
cs
pop
push
jns
mov
loopne
test
gs
mov
and
jbe
mov
js
aam
and
jo
and
jecxz
lret
movsl
scas
aam
stos
and
sbb
cltd
outsb
mov
push
push
or
imul
mov
sbb
push
outsb
fiaddl
push
xor
lods
push
scas
mov
push
lahf
and
mov
in
add
insl
adc
gs
or
xchg
sub
push
add
mov
add
mov
pop
inc
pop
ficompl
jnp
dec
bound
dec
outsb
out
adc
jp
adc
je
clc
sbb
sub
add
pop
bound
adc
and
fstp
pmulhuw
dec
aaa
xor
pop
dec
call
mov
mov
test
mov
adc
mov
adc
push
cmp
push
popf
insl
jnp
add
adc
lock
push
xchg
bound
dec
mov
jo
adc
cwtl
jno
or
and
fdivl
mov
jmpw
sbb
or
fs
jo
arpl
and
or
push
andb
push
inc
outsb
and
test
sbb
sbb
sbb
mov
dec
jle
adc
ret
fsubrs
mov
inc
jnp
mov
sbb
in
mov
xor
sub
jmp
outsb
mov
addr16
enter
fbstp
outsl
cmp
sbb
insl
sub
int
stos
jnp
push
in
lods
insl
lret
jo
enter
cmpsb
adc
xchg
imul
add
sub
add
movsl
sbb
outsb
lods
movl
pop
arpl
mov
lock
inc
ffree
mov
dec
lods
shrb
insl
push
add
stos
mov
mov
add
jo
dec
mov
sbb
push
xor
pop
in
pop
pop
sub
adc
mov
sbb
lock
movsl
mov
or
mov
mov
sbb
sbb
bound
insl
xchg
xchg
push
pop
jo
in
sub
jno
sub
fdivrs
xchg
outsl
icebp
into
addr16
sbb
mov
lock
insl
in
outsb
movsb
cmpsb
test
fstp
mov
outsb
cmp
push
loope
adc
dec
pop
adc
outsb
push
shlb
fstpl
or
cmp
mov
fs
cmpsb
or
mov
inc
pop
adc
and
add
cmp
mov
nop
mov
shrl
cwtl
mov
aad
pop
xor
insl
mov
imul
es
sahf
lock
gs
dec
cmpsb
or
mov
fisubrs
fwait
gs
mov
adc
jb
xor
pop
addb
lods
mov
lcall
sbb
in
in
sbb
lods
dec
mov
in
imul
lods
insl
jmp
push
push
jo
push
mov
cwtl
push
and
scas
data16
adc
mov
adc
sbb
popf
call
mov
and
jo
mov
imulb
sbb
mov
push
push
in
sbb
lock
add
push
push
push
in
sbb
lock
enter
add
outsb
mov
gs
jo
sub
xor
or
call
add
imul
stos
sbb
lock
xor
cmp
and
lock
fists
mov
dec
or
push
sbb
mov
ljmp
push
sbb
add
sbb
lock
sbb
lock
sbb
lock
mov
inc
aas
scas
icebp
mov
lock
gs
in
sbb
mov
sub
sbb
push
out
in
sbb
lock
imul
fs
sbb
mov
insb
fisttpl
dec
adc
push
push
xor
or
outsb
in
sbb
lock
cs
push
in
sbb
lock
sbb
push
or
pop
sbb
push
dec
fdiv
inc
gs
sbb
jmp
dec
outsb
mov
sub
push
xchg
push
gs
sbb
lock
push
sub
and
lock
push
adc
and
popa
gs
sbb
sbb
lock
gs
sahf
pshufw
sbb
pop
sbb
push
lahf
in
sbb
lock
push
sbb
push
xchg
in
sbb
xor
push
push
outsb
in
sbb
lock
sbb
push
in
sbb
lock
gs
in
sbb
lock
pop
lock
sbb
ftst
and
xor
sbb
lock
push
xchg
in
fs
fs
fs
sub
sbb
mov
push
gs
push
in
iret
in
add
sbb
sbb
arpl
or
mov
pop
adc
jno
push
outsb
sbb
sbb
lock
push
mov
adc
add
ds
in
fs
sbb
lock
and
in
adc
push
and
or
or
stos
pop
insl
divb
mov
mov
movsb
push
clc
outsb
sub
cmp
das
adc
mov
int
push
daa
movsb
or
push
sub
jns
xchg
fdivrl
mov
push
xor
das
adc
data16
sbb
movsb
push
notb
sub
cmp
das
adc
mov
int
inc
mov
int
mov
movsb
mov
push
int
outsb
daa
movsb
mulb
mov
cmp
das
adc
mov
int
push
daa
movsb
add
push
sub
idivb
fdivl
or
fsubl
data16
adc
mov
int
adc
movsb
push
testb
mov
cmp
das
fdivrl
mov
mov
xor
out
das
jo
mov
int
data16
movsb
sbb
push
sub
cmp
das
adc
mov
int
push
daa
xchg
int
mov
mov
mov
outsb
mulb
mov
cmp
das
adc
mov
int
or
movsb
push
testb
mov
mov
cmp
pop
fsubrl
bound
adc
sbb
mov
daa
movsb
adc
push
sub
cmp
das
adc
divl
das
adc
mov
jo
scas
mov
int
bound
movsb
data16
sub
cmp
das
adc
mov
int
add
movsb
push
jbe
daa
movsb
mov
mov
movsb
push
clc
outsb
sub
cmp
das
adc
mov
int
push
daa
movsb
or
push
sub
jns
xchg
fdivrl
mov
push
das
xor
das
adc
data16
sbb
movsb
push
notb
sub
cmp
das
adc
mov
int
inc
mov
int
mov
movsb
mov
push
int
outsb
daa
in
lock
sub
push
sub
cli
imul
add
mov
lret
push
dec
mov
cmp
mov
ljmp
lret
push
mov
push
clc
mov
sbb
adc
lock
jo
ljmp
jmp
inc
cmp
push
add
jmp
insl
shl
jl
or
ljmp
data16
sbb
push
or
dec
and
mov
pop
mov
les
mov
lret
insl
or
frstor
push
xchg
addr16
mov
out
icebp
fsubrl
xchg
insl
data16
or
mov
sbb
clc
addr16
add
and
sub
jno
mov
cmp
scas
gs
add
mov
xchg
pop
inc
and
fs
or
xchg
dec
mov
push
mov
data16
push
mov
int
and
in
hlt
adc
sahf
adc
inc
mov
mov
adc
clc
mov
or
sbb
dec
mov
mov
sbb
adc
add
or
jno
sbb
fs
xchg
jo
jae
and
or
lds
mov
int
pop
movsb
lahf
je
sbb
xchg
push
or
mov
sbb
sub
sbb
in
jno
jo
or
adc
adc
outsb
pop
in
sbb
and
roll
fs
or
fs
mov
or
cltd
int
fs
pop
xor
fistps
insl
jmp
bound
mov
jmp
shlw
iret
mov
and
jmp
jo
in
adc
mov
sub
je
add
int
adc
out
dec
add
or
arpl
mov
shrb
sub
aam
stos
out
popf
fmull
sbb
push
out
mov
imul
fsubrl
inc
mov
and
sub
test
mov
sbb
add
dec
sbb
loopne
cltd
and
outsl
in
or
add
or
shlb
popf
add
sbb
sbb
cmp
add
or
mov
or
or
aam
mov
outsl
lahf
imul
lahf
adc
or
and
adc
in
add
imul
sbb
sbb
sbb
movsb
lcall
fs
or
push
push
lds
sub
push
cmp
push
cmp
mov
cpuid
aas
add
or
movsb
adc
xor
les
test
adc
add
add
xchg
sub
jo
jo
xchg
lods
hlt
adc
in
mov
sbb
ret
push
push
xor
ljmp
ret
sbb
lret
push
ret
mov
addr16
mov
push
adc
mov
lret
push
adc
adc
lret
push
lret
mov
pop
push
push
xchg
ds
insl
outsl
inc
jbe
cld
pop
arpl
jecxz
shll
out
pushf
push
ljmp
mov
imul
mov
lods
scas
icebp
push
xchg
bound
adc
xor
ret
gs
cltd
pop
imul
dec
xchg
lods
ror
movsb
outsl
xchg
cltd
test
jmp
loopne
cwtl
call
stc
push
aaa
mov
sbb
mov
adc
mov
or
adc
out
push
adc
or
fdivrl
cld
push
lods
scas
loop
push
nop
pop
aam
and
push
imul
test
xchg
and
orl
je
pushf
test
xor
push
mov
or
mov
fiaddl
adc
lock
arpl
pop
shll
cld
mov
mov
or
adc
adc
pop
xchg
cmp
xchg
xchg
into
push
stos
outsb
cwtl
lahf
stos
mov
or
aam
mov
lahf
xor
mov
mov
test
pop
mov
movsl
adc
cwtl
psubsb
xchg
in
das
cmp
cmp
and
and
test
mov
in
mov
inc
and
mov
lcall
pushf
repnz
nop
cmp
mov
push
push
xchg
mov
add
adc
sti
cmp
sbb
push
sub
and
sbb
push
pop
and
dec
mov
sbb
cmc
fsubl
xor
mov
mov
sub
ret
mov
jmp
lock
test
pop
and
addb
mov
pop
jmp
xchg
or
bound
mov
ds
aad
dec
inc
cmpsl
add
je
sbb
fadd
bound
pop
repz
out
or
xchg
cwtl
mov
xor
or
lds
adc
adc
lahf
or
push
push
and
shlb
adc
adc
mov
mov
xor
test
adc
mov
pusha
jecxz
fwait
mov
fmull
pop
xchg
insl
pop
fucom
rcl
mov
scas
mov
pop
add
mov
jp
ds
push
cmp
xchg
nop
fcomps
adc
sahf
test
push
fnstenv
jmp
lock
shll
push
pusha
sbb
fstl
mov
cmp
sbb
inc
and
inc
fwait
repnz
or
stos
insl
pop
subb
call
out
adc
in
sbb
or
sub
xor
sub
ds
jo
stos
ljmp
sbb
fs
sub
popf
fnstcw
push
jo
nop
ja
lods
outsl
insl
imul
xchg
pusha
ja
lods
sbb
dec
sub
mov
xchg
jg
xor
xchg
lods
sub
icebp
pop
insl
xchg
cmp
ja
jno
lcall
inc
pop
mov
hlt
adc
mov
and
jle
pop
lock
bound
loop
adc
push
mov
push
movsb
fadd
xchg
sbb
fs
jecxz
push
mov
scas
imull
sbb
sub
sbb
bound
sbb
nop
dec
cmpsb
lods
test
in
arpl
jle
sub
pushf
cwtl
rorl
arpl
mov
movsb
inc
or
sbb
add
movsl
xchg
into
pop
inc
das
lods
ja
ja
aaa
lods
mov
movsb
cmp
movsb
jns
test
mov
sub
or
sti
movsb
xlat
test
shlb
out
xchg
stos
mov
in
jae
insl
lret
lahf
in
sbb
push
mov
cmp
loop
test
test
push
jg
adc
pop
ljmp
sahf
out
scas
jo
test
inc
cld
insl
jbe
lods
mov
adc
loopne
or
mov
xor
push
in
and
lods
sbb
int
jae
sahf
arpl
lods
pop
ja
push
jnp
jge
cmp
jbe
mov
fs
ljmp
xchg
sahf
add
fs
pop
cwtl
sbb
aam
rorl
sbb
pop
dec
sbb
in
cld
arpl
in
scas
in
dec
adc
add
pop
movsb
bound
xor
fistl
and
bound
sbbb
adc
fdivrl
and
fs
adc
and
fisubrs
ret
arpl
sbb
sbb
add
insl
insl
lods
nop
ljmp
cltd
push
cmp
adc
mov
sub
repz
mov
out
pusha
mov
sbb
call
cli
cmp
or
fs
dec
add
in
mov
out
bound
sbb
jle
in
lret
or
movsb
fwait
adc
or
cmpsb
jp
adc
or
and
mov
fwait
adc
dec
lods
ficoml
xchg
pop
sbb
mov
inc
lahf
in
lcall
add
imul
sbb
mov
jo
pushf
dec
sub
jo
pusha
pop
cmp
push
loop
mov
lods
div
shrl
mov
pop
sahf
loopne
mov
inc
lahf
lahf
enter
out
inc
adc
lret
and
or
daa
shll
jbe
ja
jo
lock
jo
aad
movsb
jo
icebp
jecxz
jo
icebp
sbb
jo
adc
sub
jo
sbb
mov
mov
fnstsw
jne
pop
daa
inc
gs
pop
sbb
hlt
ds
cmpsb
pop
sbb
mov
inc
ss
jle
jae
sbb
jmp
mov
inc
loopne
lods
repz
shrb
xor
das
aad
jo,pt
push
jmp
xchg
adc
int
mov
inc
sbb
dec
mov
mov
cmpsl
mov
cmp
mov
sti
mov
sbb
or
xchg
or
test
in
gs
mov
xlat
pshufw
fneni(8087
dec
cmp
imul
xlat
xor
cmp
adc
mov
xlat
sahf
jo
or
sbb
je
ds
cmp
shrb
imul
adc
pop
in
push
stos
loopne
sbb
push
lods
mov
lret
or
ss
jo
sub
dec
je
ret
sbbb
mov
int
dec
mov
bound
jns
lret
mov
and
andl
mov
xor
leave
add
sub
mov
mov
dec
es
std
xchg
repnz
mov
add
or
push
or
jo
and
jnp
sub
or
fsubl
flds
lods
cmp
rcrl
mov
mov
fldenv
aad
mov
add
sub
cmc
fsts
adc
mov
rcrb
sub
in
adc
or
push
das
sub
jae
loopne
outsb
fmuls
ds
xchg
stos
sbb
mov
sub
push
and
and
mov
jmp
xlat
jnp
xlat
mov
sbb
xor
inc
push
add
aam
push
test
or
jg
mov
inc
in
or
sbb
sub
aas
lahf
jo
ss
jmp
adc
or
push
sbbb
ret
xchg
or
into
sbbl
mov
sbb
clc
push
fs
clc
cmpsl
stos
sub
mov
aas
xor
and
daa
jp
roll
lret
or
je
fisubs
hlt
or
pop
mov
sti
mov
test
sub
mov
call
idivb
push
fwait
popa
out
test
mov
popf
inc
mul
cmpsb
push
ds
xor
movsl
jae
fists
imul
mov
xor
and
cmp
stc
mov
lods
ret
insl
pop
push
scas
mov
mov
loop
testl
mov
push
sub
rorl
sub
jecxz
repz
lods
inc
daa
cwtl
adc
icebp
orl
sbb
dec
popl
in
inc
daa
jo
dec
sbb
adc
and
les
push
or
push
test
loopne
or
cmp
sbb
je
mov
xchg
fisubrl
mov
and
dec
push
sbb
pop
mov
xchg
subb
and
sbb
lods
notb
sub
or
mov
push
pop
lods
cmpb
pop
and
mov
jmp
in
push
add
outsl
popa
pop
sbb
mov
sub
test
lods
jecxz
mov
test
dec
mov
mov
inc
cmp
sbb
addr16
fists
lcall
in
gs
sbb
push
pop
mov
or
mov
call
mov
leave
pop
adc
pop
jbe
insl
mov
imul
ljmp
xchg
push
stos
push
lods
pop
mov
mov
sub
sub
sbb
nop
xlat
sbb
add
cmp
xor
in
cmp
sbb
push
in
mov
cli
icebp
sbb
insl
out
imul
addr16
and
das
inc
insl
pushf
xor
xchg
insb
and
daa
subb
bound
sbb
insl
inc
mov
leave
adc
mov
insl
push
shrl
stos
fwait
mov
fs
imul
inc
adc
sub
push
stos
stos
mov
bound
jecxz
mov
sbb
in
sbb
jo
add
push
pusha
mov
mov
daa
inc
imul
fs
xor
push
sbb
inc
movsb
sbb
insl
js
bound
imul
sbb
lcall
sbb
popf
aaa
movsb
sub
int
in
xor
jbe
in
jle
ds
inc
insl
fimull
xor
lods
adc
mov
xlat
les
jo
and
sub
xor
mov
into
or
movsb
lods
cmp
sbb
push
insl
stos
in
and
stos
sbb
or
iret
stos
lret
and
mov
outsb
icebp
iret
iret
jno
lods
inc
in
push
push
sahf
mov
gs
inc
xchg
mov
inc
cld
xchg
jge
mov
in
add
push
or
js
mov
adc
jmp
push
mov
jmp
into
push
xchg
xor
shrb
sbb
arpl
cmp
sbb
iret
es
outsb
or
sub
sti
dec
insb
pop
lea
in
fs
aam
adc
ffreep
daa
idivl
mov
stc
adc
cmpsl
outsl
sbb
lret
dec
xchg
push
mov
clc
loope
jg
aad
sub
mov
inc
push
pop
sub
stos
ljmp
lds
fs
xchg
arpl
loop
cmp
in
fucomp
add
stc
fsubs
rcrb
aam
push
sbb
push
int
cmp
aas
mov
iret
mov
popa
jo
dec
adc
sub
sbb
pop
ljmp
and
fsubrl
pop
mov
in
adc
sbb
and
mov
jmp
mov
or
adc
mov
jmp
lret
sub
cltd
out
mov
cmpsl
lea
insb
inc
or
sbb
sbb
out
in
int
leave
and
call
or
mov
or
push
push
loop
adcb
jg
lock
aam
xchg
lds
dec
arpl
ss
cmpsb
pop
out
dec
ljmp
movsb
call
nop
outsb
jo
out
into
outsl
scas
adc
cmp
add
or
std
sahf
imul
fbld
mov
add
sbb
orl
dec
in
mov
dec
jmp
pop
out
add
jg
jb
stos
int3
bsr
aaa
stos
dec
pop
in
lahf
icebp
cmp
pop
mov
lea
cmp
arpl
test
icebp
jo
xor
mov
ljmp
sub
popl
into
xchg
xchg
aad
sbb
out
and
push
iret
out
mov
xchg
icebp
and
sub
mov
pushl
pop
popa
add
shlb
sbb
jg
sbb
or
sbbl
dec
pop
dec
sbb
enter
dec
push
sub
cltd
cmpb
imul
mov
mov
inc
and
xorl
xor
test
sbb
adc
sbb
mov
aas
push
add
xor
test
mov
sub
jmp
dec
imul
fidivl
cmp
add
mov
adc
imul
outsb
add
out
jp
cmp
mov
test
fcom
xchg
mov
cltd
int3
gs
outsb
imul
lods
popf
jo
or
cwtl
xchg
mov
dec
mov
and
iret
push
sub
push
ds
mov
or
mov
cwtl
out
xchg
add
adc
mov
mov
in
sub
adc
imul
xchg
cltd
and
sbb
mov
sbb
sbb
int
fwait
adc
adc
in
adc
xchg
add
pusha
nop
mov
adc
js
test
mov
popa
call
test
daa
mov
push
test
xchg
adc
or
pop
sbb
outsb
add
sbb
dec
adc
mov
mov
adc
js
inc
cmp
jae
fsts
scas
sub
fisttps
mov
iret
stos
jno
jmp
fs
sub
mov
sub
jo
push
stos
imul
dec
stos
lea
imul
jo
lret
imul
sub
sub
outsb
sub
sub
dec
out
sti
pop
push
mov
scas
out
into
push
push
stc
fucomi
ljmp
xchg
les
imul
sbb
xchg
inc
adcb
jo
push
cwtl
push
in
inc
add
sbb
shrb
sub
adc
mov
and
enter
mov
hlt
inc
jo
mov
movsb
push
sub
fldt
ljmp
mov
mov
lods
sbb
data16
fwait
and
or
aaa
jno
sub
or
add
sub
cmp
xlat
or
lods
shrb
test
into
outsb
sub
inc
fmuls
push
into
test
imul
sbb
lods
mov
sub
negb
into
push
dec
pop
adc
rclb
and
push
dec
ljmp
mov
sub
mov
mov
dec
add
lock
out
push
cmovo
gs
push
int3
sbb
adc
rolb
icebp
push
nop
xor
scas
sub
stos
inc
xor
dec
xchg
sub
mov
or
in
jecxz
sbb
sbb
fs
xchg
shll
mov
or
xchg
xchg
or
loopne
in
inc
mov
int
add
fs
sbb
frstor
push
mov
and
mov
lock
test
mov
push
mov
gs
imul
sbb
push
mov
push
or
mov
or
mov
and
push
outsb
ljmp
sbb
in
xchg
mov
movsb
adc
adc
xchg
sub
cmp
mov
or
mov
rcr
mov
pop
lock
and
mov
clc
test
das
push
gs
inc
jbe
mov
imul
dec
xchg
add
lret
in
std
jmp
test
in
mov
pop
jecxz
lock
pusha
movaps
prefetch
push
nop
mov
stos
fucom
adc
sbb
cli
imul
in
jecxz
shlb
stos
push
or
lods
sub
test
aaa
jbe
bound
xor
stos
nop
pop
stc
sbb
arpl
bound
jmp
adc
arpl
icebp
stos
sbb
icebp
mov
adc
jmp
arpl
mov
outsl
or
push
test
gs
mulb
pop
xlat
inc
inc
push
add
add
lock
loopne
dec
xor
int3
pop
test
pop
mov
mov
sbb
push
mov
sub
push
movsb
xor
add
and
stos
mov
sub
jne
mov
mov
push
out
cltd
sbb
adc
push
aaa
pop
lcall
imul
cwtl
jmp
jbe
jno
add
adc
daa
out
sbb
cmp
sbb
or
ja
sbb
movsl
shlb
test
push
ss
add
cmp
sbb
gs
pushf
int3
ljmp
bswap
sub
cltd
icebp
mov
in
movsb
mov
jbe
xor
xchg
add
cld
push
fisubrl
push
icebp
xlat
jne
aam
in
mov
insl
xchg
cwtl
xchg
xchg
int3
rcrb
nop
xchg
jo
je
sbb
sbb
lcall
test
mov
mov
or
sbb
adc
and
adc
xor
add
jmp
adc
and
pop
clc
jmp
mov
or
pop
cmp
mov
adc
adc
mov
pop
mov
jl
test
xchg
push
xor
cwtl
mov
or
dec
cmc
insl
push
xchg
sub
add
ljmp
add
in
mov
pop
adc
sbb
ljmp
pop
fdivl
es
jmp
stos
push
jo
mov
jne
mov
push
fistpl
xor
xchg
out
pop
cmp
push
aad
sti
stos
ljmp
add
cmp
icebp
mov
jno
enter
repz
sub
pusha
push
adc
outsb
sbb
jp
bound
inc
repz
bound
pop
push
sbb
sub
pop
ds
fldl
in
outsb
leave
xor
stos
in
jmp
cmp
in
push
inc
insl
jno
push
imul
es
jl
push
mov
jo
fstpl
mov
mov
fucomi
cmp
or
lahf
inc
imul
lea
push
xchg
sub
jbe
mov
in
out
in
push
in
insl
pusha
inc
sub
sbb
pop
call
nop
mov
test
imul
jmp
or
pop
mov
and
xchg
jecxz
adc
xor
inc
push
loop
or
sbb
pushf
out
push
mov
in
sbb
pop
out
jns
and
push
sbb
sbb
test
adc
jge
or
xlat
inc
jmp
shlb
push
add
cld
inc
cmp
pop
test
insl
xlat
sbb
sbb
xchg
jbe
adcl
xor
mov
sbb
test
xchg
adc
mov
cmp
sahf
in
sbb
std
popa
cmpb
insl
push
sbb
mov
pop
nop
fbld
xlat
mov
scas
leave
mov
cmp
inc
mov
mov
sbb
in
stos
sbb
sbb
loopne
add
ja
sub
cmp
shr
sahf
push
imul
adc
inc
jo
sbb
inc
test
add
mov
dec
push
push
bound
add
pusha
lods
mov
or
shr
mov
mov
inc
or
test
xchg
jo
subl
push
sbb
jmp
sbb
iret
out
jns
push
ss
scas
inc
cmp
and
adc
sbb
mov
pushf
in
test
imul
sub
es
sub
push
jns
loop
dec
in
and
in
outsb
pop
in
insl
dec
aad
push
and
call
cmp
in
xchg
jle
sbb
lahf
mov
sbb
dec
pop
mov
jl
in
pushf
sbbl
push
mov
popf
pushf
sub
pop
out
outsl
movsl
fs
stos
adc
outsl
mov
hlt
push
jmp
mov
test
adc
xor
and
jmp
pop
shrb
sub
in
decb
xor
pop
out
cltd
xor
xchg
dec
pop
out
imul
aas
or
mov
ja
dec
jmp
mov
sbb
icebp
jge
repnz
shr
cmc
pop
fnsave
adc
mov
and
and
push
and
xchg
mov
xor
in
push
gs
movb
pop
repnz
sbb
push
daa
not
lock
mov
loop
insl
xor
fcoms
mov
push
icebp
sub
sbb
imul
and
insl
adc
pop
adc
in
sbb
cmp
push
xchg
ljmp
inc
add
inc
push
divb
push
divps
cmp
xchg
movsl
cmp
xor
test
add
sub
add
in
inc
test
inc
xchg
mov
stos
sub
popl
mov
push
xchg
std
jno
push
and
fndisi(8087
cmpsb
insb
scas
mov
orb
dec
xchg
fmull
and
test
pusha
push
mov
arpl
cltd
mov
inc
lods
xchg
fcmovnb
in
push
sbb
inc
pop
call
out
js
or
jmp
fldt
mov
pop
xor
xchg
cmp
mov
clc
dec
mov
cmp
push
add
lea
jbe
lds
add
ljmp
loop
out
jmp
add
insl
pusha
out
ljmp
nop
outsb
cmp
push
push
js
cmc
mov
movsl
jmp
add
mov
cltd
sar
cmp
push
ds
sub
adc
and
imul
cwtl
push
mov
pop
in
mov
lds
push
int
mov
mov
xor
cmp
lret
pop
adc
in
push
cmp
test
icebp
adc
cld
mov
dec
and
jno
ds
cmp
jno
sbb
add
push
push
cmp
push
aas
xor
addr16
sarb
int
cmc
jbe
or
mov
lock
xchg
mov
sbb
jbe
sbb
jno
pop
xor
jno
mov
add
dec
sub
dec
imul
in
cmpsl
test
pusha
rcl
repnz
xchg
ljmp
sbb
or
jno
mov
test
adc
inc
addr16
out
bound
mov
dec
mov
mov
imul
fidivl
mov
lahf
in
jo
push
jno
loop
push
and
shrl
test
popf
adc
sbb
mov
lcall
xchg
jmp
les
and
sahf
mov
cmovo
cmp
and
jmp
popf
daa
imul
or
gs
adc
outsb
out
inc
sub
fucomip
decb
stos
pop
fisubrl
sbb
nopl
in
mov
pop
sbb
out
sbbl
mov
add
popa
mov
and
outsl
pop
add
sti
lds
shrl
jns
and
fs
xchg
sbb
leave
dec
xor
and
fildl
cs
mov
add
xchg
popa
inc
test
imul
popf
scas
add
mov
cmp
mov
push
push
stos
aaa
leave
in
lods
imul
sbb
mov
pop
cmpsb
xor
les
adc
insl
nop
or
gs
in
out
pop
adcb
rolb
jmp
jo
nop
mov
mov
sbb
cmp
scas
out
push
jecxz
adc
push
jmp
repz
push
mov
xor
adc
in
repnz
mov
cmp
xchg
fnsave
outsb
pop
jo
icebp
std
sub
in
in
add
into
and
outsl
mov
or
mov
iret
push
in
pop
in
gs
imul
fimull
inc
in
fwait
mov
and
clc
fucomi
mov
or
out
in
dec
jo
jmp
ljmp
inc
adc
pop
jecxz
jo
orb
and
mov
jmp
rcll
cmc
out
dec
mov
cli
cltd
xor
or
push
pop
in
sbb
popf
cwtl
jmp
mov
cmp
call
inc
fcom
adc
push
in
out
and
orb
adc
jbe
xchg
inc
mov
mov
push
ljmp
xchg
inc
shlb
mov
xchg
nop
push
call
outsl
in
popf
adc
adc
cmp
pop
arpl
call
lock
xchg
jno
push
int
sbb
ljmp
out
jo
xchg
cmpsb
xchg
and
insl
imul
inc
cwtl
minps
jl
fwait
push
movsb
sti
stos
popf
outsb
aam
insl
inc
insl
jae
jb
pop
stos
xchg
mov
sbb
xchg
stc
shrl
data16
cmp
cltd
frstor
sub
sbb
imul
scas
icebp
test
ret
pop
inc
or
mov
pusha
push
mov
mov
lds
cmp
arpl
pop
repnz
jne
mov
xchg
adc
and
mov
xor
ss
inc
sbb
lods
and
lds
pusha
jmp
test
jg
inc
pop
add
cli
adc
fwait
psubb
cli
sbb
sti
sbb
in
push
push
pop
aad
jecxz
out
cmp
inc
fwait
outsl
data16
stc
xor
sbb
lods
fmuls
mov
outsb
rolb
add
pop
push
mov
ljmp
fwait
add
mov
mov
insl
test
loop
test
or
or
mov
cwtl
sub
sub
pop
rcrb
pop
add
aas
scas
lds
imul
xchg
js
dec
sbb
lods
ljmp
adc
adc
and
pop
mov
mov
popa
mov
shll
cwtl
into
loopne
data16
lods
lods
sbb
and
mov
data16
scas
xchg
pop
adc
mov
pop
loopne
hlt
arpl
pusha
mov
fdivrs
sub
xchg
add
nop
das
test
daa
push
mov
sbb
outsl
adc
arpl
adc
mov
jo
fs
or
clc
or
push
sbb
add
adc
push
gs
adc
push
or
mov
in
and
sbb
or
mov
sbb
jmp
sbb
mov
add
insl
jo
adc
adc
mov
lock
mov
or
mov
and
or
mov
pop
sbb
add
imul
sbb
inc
in
outsb
insl
nopl
in
sbb
adc
mov
cs
pop
in
outsl
insl
or
scas
mov
jo
out
in
sbb
add
adc
inc
in
movsb
insl
push
sbb
mov
or
push
or
dec
or
mov
sbb
insl
add
push
mov
add
insl
mov
push
mov
pop
and
sbb
or
das
mov
mov
sub
in
bound
xchg
sbb
jno
inc
mov
fs
mov
or
leave
mov
rol
inc
pop
pushw
inc
pop
int
or
add
dec
sbb
add
mov
int
fs
push
test
dec
or
insl
movl
lods
mov
pop
inc
imul
mov
aaa
test
sub
scas
gs
jo
mov
test
adc
btcl
mov
push
sbb
dec
adc
push
mov
adc
fnsave
fs
add
cmp
push
push
mov
mov
jmp
mov
mov
sbb
mov
adc
adc
adc
adc
push
imulb
mov
push
cld
and
stos
rcll
lock
adc
add
adc
jo
outsb
push
cmp
aad
sub
cmpsl
adc
ljmp
or
pushf
add
push
push
outsl
and
jmp
ljmp
pop
cmp
push
arpl
cld
rol
adc
jno
lods
adc
or
and
adc
push
push
sbb
ret
adc
cli
aad
push
adc
sahf
cwtl
mov
mov
add
sub
aaa
sbb
loop
stos
mov
repnz
lods
inc
or
call
cld
repnz
jmp
mov
adc
mov
mov
in
in
repnz
adc
in
scas
addr16
push
mov
std
mov
mov
adc
mov
loop
lock
adc
lret
or
or
int3
lds
popa
outsl
xor
rdtsc
xor
mov
mov
cld
rolb
imul
cmp
adc
push
mov
fstpt
add
shrb
lds
sti
daa
cmp
push
gs
mov
mov
mov
lahf
sbb
add
loopne
mov
inc
add
adc
call
mov
arpl
cmp
xor
sub
mov
jo
imul
pop
mov
pop
arpl
sbb
push
jno
mov
adc
into
cld
fwait
stos
adc
inc
mov
pop
inc
push
sub
mov
sbb
pop
cld
and
out
or
mov
mov
sub
and
sbb
adc
mov
adc
mov
xchg
push
mov
arpl
icebp
and
data16
cld
lcall
adc
and
mov
shlb
rcll
cmpsb
mov
loop
cmp
insl
add
movsb
sub
aad
lock
lret
mov
enter
sbb
insl
xchg
mov
fsubrl
scas
jo
or
enter
outsb
adc
movsb
rcrb
pop
and
nop
icebp
and
sbb
ljmp
lret
repnz
sbb
mov
movsl
sbb
shl
pop
and
outsb
and
clc
sbb
scas
mov
adc
mov
fs
adc
mov
adc
imul
sbb
xchg
std
nopl
cmc
fs
adc
mov
add
adc
imul
adc
dec
push
add
sbb
adc
mov
mov
jo
push
mov
cs
inc
cwtl
adc
mov
mov
cmp
adc
adc
std
or
outsb
scas
adc
push
repnz
and
and
sbb
sub
push
decb
daa
lcall
pop
adc
pop
or
lock
mov
mov
jo
jmp
fidivl
or
push
push
fildll
insl
std
mov
mov
mov
jecxz
std
or
and
push
idivl
cld
push
fs
and
inc
mov
jno
adc
push
push
mov
clc
or
lea
mov
fimull
inc
cmp
pushf
pop
mov
test
pop
sub
insl
mov
sbb
movsb
mov
cwtl
push
mov
adc
add
jp
sbb
adc
mov
loopne
adc
sar
rolb
sbb
push
and
or
sbb
jmp
mov
int
scas
pop
jo
lods
and
push
adc
imul
sbb
dec
lods
test
push
lods
sbb
adc
jmp
bound
sbb
data16
testb
lods
sbb
in
out
push
sbb
cmpsb
add
jecxz
cmp
mov
mov
mov
mov
pushf
dec
imul
outsb
mov
adc
xchg
dec
xchg
mov
cld
and
lret
mov
push
add
or
fnstsw
sbb
adc
cmpsl
dec
mov
mov
sbb
cltd
or
jo
insl
dec
out
adc
fwait
sub
adc
mov
mov
sbb
add
mulb
mov
mov
xor
mov
lods
add
addb
in
mov
mov
cld
repnz
gs
pop
xor
jp
mov
pop
jo
fistl
mov
sbb
mov
outsl
add
sbb
sbb
fstpt
xchg
and
adc
idivl
and
mov
sub
dec
adc
mov
aam
add
pop
xor
mov
adc
in
scas
imul
lds
popa
outsl
popf
mov
fimull
xor
call
sub
dec
movsb
and
fnstsw
cmp
lock
repnz
adc
add
mov
cld
inc
xlat
adc
inc
test
mov
test
mov
enter
out
mov
dec
adc
adc
data16
xchg
sbb
pushf
add
mov
sbb
adc
sbb
xchg
cld
nop
cmp
pop
dec
or
out
movsl
sbb
cmc
or
sub
push
je
sbb
push
icebp
sbb
dec
fwait
insl
adc
sbb
mov
or
sub
adc
dec
movsb
sbb
fistpl
pop
or
movsl
sub
mov
loop
mov
fistl
mov
mov
or
pop
movsb
adc
pusha
dec
or
sub
push
sub
xor
or
mov
jno
add
mov
or
jo
mov
pushf
mov
loopne
repnz
bound
push
mov
lods
xor
mov
stos
push
mov
mov
mov
cld
repnz
adc
popa
mov
mov
push
add
mov
xor
adc
pop
jo
push
and
push
push
in
repnz
cmp
mov
adc
and
shll
and
mov
fwait
mov
insl
push
fs
pop
mov
push
push
loopne
adc
rcrb
cmp
push
lods
or
rcr
js
dec
mov
sub
cmpsb
mov
xchg
inc
mov
pop
cli
arpl
movsl
add
data16
outsb
mov
lcall
lock
mov
pop
push
pop
cmp
adc
fstp
lret
or
lahf
int3
imul
adc
jge
pop
insl
cli
pop
sbb
fbld
adc
fs
mov
mov
adc
cli
pop
add
stos
sbb
push
sub
mov
cld
sarb
popa
jo
data16
jg
or
stos
std
or
adc
mov
push
mov
mov
jecxz
mov
das
dec
aam
lods
fidivrl
fistl
in
mov
mov
adc
adc
push
inc
inc
adc
mov
in
xor
call
adc
shll
pop
xchg
gs
mov
xor
xor
adc
mov
cli
in
test
mov
mov
inc
jp
js
mov
jno
adc
mov
xchg
loop
adc
lock
mov
mov
mov
mov
sub
dec
mov
and
mov
inc
and
push
or
pop
je
mov
pop
mov
adc
scas
jecxz
negb
mov
pop
add
mov
fs
arpl
or
mov
mov
adc
inc
mov
in
stos
adc
popw
mov
imul
mov
popa
icebp
xchg
ljmp
cmp
adc
sbb
sbb
xor
ljmp
cli
imul
sbb
outsb
push
or
dec
xor
ljmp
mov
cld
repnz
sbb
sbb
dec
addr16
imul
pushf
mov
scas
adc
mov
cld
lds
mov
cwtl
push
sub
push
ljmp
test
out
jo
or
mov
xchg
sbb
push
pop
aad
stos
or
xchg
je
mov
dec
adc
cmp
mov
sbb
adc
jno
lock
mov
dec
mov
pop
xchg
adc
ljmp
int3
pop
imul
inc
adc
push
pop
pop
inc
aaa
mov
shrb
pop
jnp
mov
cmc
xor
pusha
mov
outsb
and
push
enter
or
mov
lods
mov
dec
subb
xchg
arpl
adc
cld
mov
cwtl
cmp
and
in
mov
clc
fs
mov
adc
dec
mov
xor
or
insl
push
push
adc
sbb
test
das
in
jae
std
xchg
and
lods
lods
adc
out
pop
fisubrl
sbb
or
add
push
mov
adc
clc
adc
inc
sbb
push
mov
push
add
xchg
outsb
mov
outsb
sbb
mov
push
push
fisttpll
std
adc
in
dec
out
mov
sbb
xchg
inc
outsb
push
or
hlt
inc
outsb
xchg
and
xor
sub
push
mov
outsl
imul
push
or
xor
lret
or
stos
mov
sarl
jmp
adc
pop
sbb
mov
mov
fs
outsb
push
add
sarb
jo
data16
aad
mov
sbb
sbb
das
cmpsl
push
outsb
adc
add
push
lock
outsb
test
pop
mov
lds
out
or
rclb
outsb
sbb
das
jo
jno
mov
push
or
fs
test
mov
push
bound
lock
sbb
adc
jge
sbb
push
dec
outsb
mov
gs
sbb
and
enter
adc
das
in
sbb
data16
out
mov
push
movhps
leave
lret
push
fs
shrl
add
xor
jo
pop
pushf
out
loop
lds
inc
push
or
outsb
dec
arpl
xor
addb
mov
test
add
push
add
pushf
xor
cs
push
fsubrl
pop
sbb
sbb
mov
pop
out
or
outsb
adc
fldl
or
scas
mov
and
mov
loopne
sbb
pop
outsb
xchg
jno
pop
sbb
adc
mov
mov
mov
das
mov
mov
fwait
xor
sub
add
fldt
adc
push
and
in
dec
pop
mov
imul
adc
outsb
in
sbb
adc
cmp
mov
mov
and
rcrb
mov
or
push
xlat
arpl
xchg
lcall
shrl
adc
dec
push
lock
mov
mov
push
adc
lret
push
mov
and
in
sbb
pop
sbb
and
mov
and
dec
notl
je
and
adc
mov
adc
outsb
enter
sbb
and
add
jo
lods
mov
xor
les
and
insl
adc
dec
call
addr16
push
outsb
dec
push
xchg
mov
xor
push
aam
lret
pop
inc
push
aad
dec
pop
and
call
jb
adc
push
sbb
xchg
outsb
decb
lock
push
loopne
das
popf
lds
in
adc
and
in
sub
inc
add
js
mov
outsb
mov
cmp
shrl
mov
lods
pusha
fcmovbe
in
lods
mov
sub
or
sub
std
mov
adc
mov
imul
mov
imul
sbb
stos
or
inc
jo
add
mov
inc
mov
mov
inc
mov
lret
push
jno
outsb
mov
outsb
jo
pop
mov
sbb
inc
xor
mov
data16
add
xchg
jno
outsl
xchg
sbb
push
out
or
sbb
cmp
addr16
mov
fucom
or
fsubl
mov
or
or
hlt
sbb
out
jo
and
xchg
inc
imul
adc
fucom
or
mov
add
ljmp
clc
aas
les
pushf
lods
test
pop
mov
cmc
sub
mov
mov
arpl
int
imul
out
fsubr
cmp
orps
imul
imul
adc
mov
fdiv
mov
movsb
scas
cmc
out
arpl
cs
imul
cmp
push
sbb
das
cmp
movsb
cmp
sbb
fisubrl
gs
movsl
arpl
int
and
mov
sub
int
and
cmp
imul
cmp
push
movsb
imul
insb
mov
adc
xor
push
adc
push
mov
movsb
fs
fs
out
outsb
sbb
sbb
in
fdivrl
pop
sbb
or
pop
dec
mov
mov
or
jmp
or
scas
fs
or
dec
outsb
movsb
adc
dec
dec
pusha
add
sub
negl
into
mov
incb
and
and
hlt
arpl
pop
dec
cmpsb
push
stc
pop
or
mov
scas
or
adc
fs
testb
pushf
jno
sbb
push
or
or
imul
outsb
pop
sbb
or
push
sbb
pusha
push
outsb
or
jecxz
adc
mov
jo
pusha
or
inc
popf
mov
pusha
mov
adc
dec
mov
or
inc
pop
movsb
or
inc
push
idivb
jno
in
mov
and
adc
adc
cmp
cmp
or
push
scas
adc
or
mov
insl
bound
divb
mov
adc
scas
adc
mov
xor
dec
test
scas
adc
push
stos
jno
cmpsb
add
and
push
pop
loopne
shll
aam
outsb
sbb
out
out
sbb
pop
mov
cmp
pop
or
lds
mov
cwtl
sbb
je
xchg
scas
push
pop
out
fcomps
pop
mov
data16
ret
scas
and
dec
sbb
loopne
adc
push
and
or
xchg
or
mov
movsl
lahf
jg
ja
inc
xchg
movsb
mov
lds
test
inc
add
push
cwtl
call
loope
fs
cwtd
out
iret
imul
mov
pop
and
sbb
aad
fs
or
add
cwtl
push
push
add
cli
repz
out
adc
gs
fucomi
sbb
mov
add
mov
rcrl
pop
or
loop
in
test
cmp
lods
adc
and
pusha
dec
adc
lods
mov
pop
adcl
jmp
popf
dec
pop
cwtl
inc
sbb
or
xor
and
inc
sbbb
in
add
das
cmpsb
fisttpl
lods
add
sbb
es
addr16
in
sbb
push
adc
test
sbb
data16
mov
sbb
mov
xor
jae
out
loope
xor
fldl
cs
outsl
lods
lods
push
pusha
jo
leave
outsb
sbb
sahf
shlb
fistpl
inc
or
insl
ljmp
mov
mov
insb
lods
add
jne
xor
fldl
ror
push
sbb
fists
xchg
mov
mov
add
lock
jo
ret
fwait
mov
jnp
add
ror
bound
clc
mov
or
pop
cmp
mov
jno
sub
mulb
sub
loope,pn
or
or
dec
fdivrs
fs
sbb
sub
xor
jo
push
lods
lock
xor
pop
or
xor
jno
dec
loopne
bound
mov
adc
sbb
jno
int
xor
add
outsb
data16
loope
jo
sbb
xor
notb
sbb
jne
loopne
cmpsl
and
pop
jbe
dec
loop
jne
push
gs
add
adc
sub
lcall
ljmp
loope
mov
imul
dec
push
outsl
in
bound
jnp
outsb
xor
pushw
xorl
dec
roll
cld
sbb
lods
xorl
or
bound
pushf
jne
add
movsb
mov
or
in
adc
mov
jno
cmpxchg
aas
or
add
jno
mov
xor
insb
rcll
in
add
mov
aad
push
fdivrs
pop
mov
pop
mov
jno
movsl
mov
xor
mov
dec
loope
icebp
adc
fmull
mov
mov
sbb
ret
xchg
and
or
add
xor
out
fstpl
sbb
sbb
test
fcomps
pop
sbb
inc
xor
out
loopne
inc
test
shrb
test
sbb
fwait
rcrb
mov
enter
pop
sbb
and
pop
fwait
rcll
mov
mov
lock
popa
bound
mov
sbb
addr16
xor
push
pusha
fidivs
pop
data16
out
gs
xchg
andl
and
push
test
movsl
push
xor
in
dec
and
jno
push
repnz
inc
sub
out
pop
fstl
outsl
fwait
mov
call
mov
fnstenv
cmp
mov
xchg
inc
sar
or
ljmp
popf
bound
iret
pop
stos
lds
aas
sahf
mov
or
xor
bound
rcr
inc
jno
in
mov
pop
adc
or
adc
ds
jmp
int
xor
packsswb
mov
das
bound
popa
clc
sbb
push
pop
dec
addl
lods
stos
bound
mov
add
and
jae
mov
std
push
popf
rclb
jo
scas
or
in
stos
sbb
arpl
shrb
movsb
adc
bound
adc
push
outsl
lods
cmp
push
cmpsb
mov
sbb
push
sbb
in
dec
es
push
inc
or
outsl
cld
imul
fwait
xlat
lcall
imul
out
xor
iret
and
sub
push
mov
stos
nop
or
mov
in
fcompl
push
cmp
movsb
out
push
stc
xchg
xchg
mov
push
push
pop
sub
inc
mov
jecxz
adc
cmp
xchg
loop
adc
push
in
inc
popa
mov
arpl
add
mov
pop
arpl
dec
cltd
mov
push
mov
adc
rolb
loopne
and
sub
and
mov
mov
push
push
dec
pop
loopne
jne
mov
lahf
dec
mov
imul
mov
cmp
mov
call
jnp
ja
cmpsb
sbb
adc
add
enter
push
add
push
fcoms
mov
sarb
xor
bound
mov
push
pop
mov
push
sbb
push
pop
fwait
and
sbb
lock
imul
mov
ljmp
gs
arpl
out
sbb
xchg
or
pop
mov
std
sbb
sub
je
faddl
adc
push
and
inc
sub
icebp
jo
mov
bound
popf
push
dec
cmp
lods
push
popa
cltd
and
gs
in
mov
je
sbb
pop
mov
ljmp
inc
lahf
xor
push
adc
dec
adc
cwtl
loopne
sbb
and
test
sbb
in
bound
inc
mov
jl
pshufw
repz
mov
in
jnp
xchg
sbb
repnz
pop
xor
pushf
aad
fldenvs
xchg
pop
fcomps
mov
outsb
mov
mov
inc
pushf
cmovo
lods
sub
sbb
gs
insl
bound
jmp
lods
jns
pop
adc
sbb
xchg
mov
push
push
repnz
fidivrl
cltd
push
add
xor
jno
dec
aam
xor
jno
sbb
or
lock
fistps
sbb
push
cli
or
dec
add
rolb
or
push
loopne
ljmp
int3
stos
push
mov
and
adc
push
mov
test
imul
out
outsb
outsb
inc
push
sbb
rcr
xorb
mov
fsub
fdivs
jo
into
xor
ljmp
jb
mov
jno
test
cmpsb
pop
insl
stc
push
ljmp
movsb
jno
pop
mov
jns
mov
push
jb
jno
add
es
pop
push
insl
pushf
dec
dec
test
pusha
jno
push
inc
mov
pop
xchg
push
sbb
fstpt
sbb
mov
jmp
jo
dec
dec
insb
scas
test
outsl
push
sub
decl
fcom
sbb
nop
push
test
rcrl
adc
add
jne
fcompl
test
loop
mov
jno
xchg
mov
shr
jo
les
bound
sbb
cmp
xchg
nop
gs
jno
sub
gs
movsb
push
bound
sahf
insb
inc
adc
push
add
inc
dec
sub
arpl
sbb
push
fs
shlb
adc
push
enter
aad
xchg
pop
adc
mov
add
addr16
jmp
pop
inc
in
push
sbb
push
outsb
pop
lods
and
mov
mov
lock
adc
push
test
mov
adc
add
cmpsb
fimull
mov
pop
imull
push
push
sahf
or
or
mov
pop
inc
fistps
jo
lret
in
shrb
xor
jo
lea
pusha
push
inc
sbbb
inc
inc
adc
call
popf
mov
adc
shlb
cli
mov
arpl
sbb
imul
fmull
push
sub
bound
std
sub
sub
stos
sub
mov
in
adc
inc
dec
jno
idivb
test
push
mov
and
pop
pop
movsl
mov
frstors
mov
pop
mov
mov
stos
or
jo
cmpsb
inc
shlb
adc
inc
fs
sub
fdivrl
lock
or
pushf
jl
out
fisttps
pop
push
lcall
sbb
lods
icebp
push
xchg
cltd
push
minps
sub
icebp
pop
int3
jbe
xlat
outsl
add
mov
call
cwtl
push
test
imul
push
loope
cmp
pop
fsubrs
mov
lock
push
or
mov
cli
mov
mov
or
sbb
dec
or
adc
mov
or
xor
or
mov
lcall
adc
ljmp
test
jb
mov
jo
inc
out
and
inc
push
push
push
fs
or
mov
movsl
insl
fst
push
sbb
xor
cmc
je
sbb
cmovs
mov
cmp
fcoms
mov
pop
pushf
aaa
dec
hlt
dec
push
rcr
xchg
ficompl
pusha
lods
gs
sbb
test
mov
dec
pushf
fs
or
sbb
cmpsb
inc
lods
xchg
sbb
stos
add
or
jp
adc
push
mov
adc
pop
mov
sub
push
je
pushf
push
or
sub
fs
cwtl
outsl
mov
in
push
test
adc
mov
repnz
pushf
inc
rcrb
push
dec
push
cmp
dec
pop
out
mov
lods
fcoml
push
pop
hlt
outsl
ficoml
push
outsl
shl
or
push
push
sbb
sbb
imul
dec
and
lea
jne
call
movsb
sbb
mov
rcrb
rclb
je
adc
loop
push
adc
push
pusha
xlat
add
adc
pop
jnp
lret
push
test
int
add
sbb
nop
inc
je
dec
loopne
ret
rcrb
lock
mov
pop
xor
mov
sbb
mov
jo
or
adc
pop
mov
adc
lock
or
test
mov
add
mov
mov
adc
jp
adc
xchg
sbb
fadds
iret
mov
or
mov
outsl
push
xor
push
mov
pusha
mov
mov
and
call
sbb
xchg
test
scas
mov
pop
push
push
dec
out
dec
pushf
dec
stos
mov
dec
push
punpckhwd
fs
call
mov
in
lock
mov
sub
test
adc
aad
cmc
push
insl
stos
and
pop
xchg
lcall
mov
adc
sub
lock
test
sbb
popf
mov
sub
arpl
sub
mov
sbb
cmpsl
push
out
mov
mov
mov
sbb
rclb
sbb
dec
mov
test
or
mov
mov
xor
add
je
outsl
sbb
imul
lret
loopne
adc
movsb
sbb
inc
fwait
outsl
mov
loope
add
inc
lods
adc
jb
mov
fisttpl
or
mov
fndisi(8087
inc
std
sbb
cli
cmp
out
adc
push
push
inc
in
jno
pop
in
xorb
inc
outsb
mov
lret
or
test
xor
popf
mov
insb
and
xor
dec
add
xor
push
mov
and
adc
or
out
sbb
sub
dec
pop
cmp
mov
push
mov
or
adc
movsb
add
mov
and
in
or
in
push
mov
push
sub
or
mov
add
icebp
jo
mov
sbb
lcall
shrb
mov
push
pop
imul
int
into
outsl
inc
adc
or
jns
xchg
push
out
shr
push
leave
imul
scas
push
adc
sahf
in
and
adc
gs
mov
sbb
push
outsb
mov
movsl
pop
pop
mov
adc
adc
out
mov
mov
push
push
icebp
sbb
xchg
sub
sub
pop
stc
fcoml
push
arpl
cmpsb
mov
mov
imul
mov
fcoml
out
nop
pop
push
mov
lahf
add
mov
testl
adc
es
sbb
imul
or
mov
mov
out
add
inc
or
jmp
and
push
sbb
adcl
call
imul
loop
decb
imul
pop
or
out
rclb
fdivrs
insl
xchg
add
jns
push
jmp
pushf
imul
cmp
push
shrb
dec
jmp
jno
clc
insb
pop
shlb
sbb
mov
mov
sbb
lock
sarb
lods
dec
nop
jo,pt
out
mov
sbb
sub
popf
jl
or
lcall
sahf
dec
or
mov
or
cmpsb
daa
dec
sbb
pop
push
fisubrl
or
dec
add
nop
sbb
popa
aas
xor
push
data16
inc
out
add
lods
push
fidivl
mov
sbb
ljmp
dec
and
cmpsb
cs
sub
push
ljmp
mov
adc
push
stos
jg
mov
outsb
pop
sub
mov
xchg
jecxz
push
sub
sbb
mov
push
nop
fsubl
addr16
push
lea
inc
jno
imul
and
mov
icebp
and
pop
fcom
push
cmp
int3
mov
mov
mov
cmp
mov
jo
jo
adc
push
data16
jo
inc
sar
push
bound
xor
mov
push
scas
pushf
push
sbb
xchg
inc
adc
sbb
clc
std
adc
sbb
xchg
insl
call
inc
or
cwtl
jne
push
pop
add
xchg
insb
pop
sahf
mov
mov
and
push
fmuls
jp
adc
push
sbb
data16
jno
push
sbb
pop
pop
test
mov
cltd
loop
gs
call
imul
add
mov
lock
pop
or
pop
stos
add
push
lock
inc
inc
outsl
push
sbb
push
inc
mov
nop
imul
sbb
pop
arpl
scas
call
sbb
or
cmc
or
sbb
add
or
cmpsl
out
jo
and
or
adc
add
cwtl
dec
unpckhps
int3
jno
sub
out
fdivl
mov
gs
mov
or
sbb
lds
xor
icebp
arpl
sub
add
mov
pop
xlat
pop
bound
cmovb
fisttps
outsb
add
sbb
stos
aam
imul
adc
in
jmp
stos
in
adc
sbb
add
or
adc
das
jno
clc
adc
dec
bound
and
jo
xchg
pushf
icebp
sahf
jne
xchg
push
lds
add
sbb
sbb
test
inc
and
pop
mov
xchg
daa
popa
and
test
cltd
mov
in
jno
add
sahf
in
imul
syscall
push
mov
jmp
in
sarl
sbb
bound
std
jle
or
outsl
add
ljmp
xor
icebp
adc
movsb
outsb
cmc
cmpsb
adc
outsb
nop
mov
cmp
or
pop
pop
leave
pushf
sbb
mov
or
mov
xor
pop
jno
xorl
inc
dec
sbb
cmp
jae
adc
and
and
cmp
xchg
sbb
mov
aam
test
adc
shlb
adc
mov
divb
push
imul
cmpsb
cwtl
cld
adc
mov
arpl
mov
movsb
imul
fsubr
mov
shrl
sbb
sbb
loop
ret
or
fs
add
mov
or
scas
sbb
cld
lods
outsb
adc
out
in
test
stos
popf
push
mov
sbb
xchg
pop
or
adc
divb
mov
add
lret
pop
xchg
pop
dec
mov
pop
sbb
or
lcall
push
xchg
test
mov
call
popf
out
adc
push
in
add
lods
xor
push
imul
inc
push
add
les
ret
lea
in
jno,pn
loopne
fildll
dec
push
lret
int
movsb
imul
ja
cmp
adc
or
pop
jo
out
add
push
sub
xchg
lret
push
outsl
or
mov
adc
cmp
mov
imulb
xor
adc
sbb
in
outsl
pop
in
loopne
aaa
and
loope
mov
mov
mov
out
mov
insl
out
popf
push
js
jo
in
cmp
fs
scas
pushf
ret
mov
adc
pop
loopne
dec
movsb
lahf
push
xor
mov
mov
lock
push
ret
pop
adc
and
sbb
and
jo
cli
fbld
faddl
shlb
pop
xchg
and
in
adc
stos
mov
push
in
or
add
push
or
ds
dec
outsb
in
sbb
inc
sbb
mov
adc
lock
lods
or
adc
push
outsl
sub
icebp
lods
mov
icebp
rorl
dec
sbb
movsb
mov
xchg
mov
sbb
mov
or
inc
arpl
ret
sbb
jno
js
movsl
mov
arpl
sbb
dec
xchg
dec
sub
lock
outsl
pushf
ljmp
insl
movsb
mov
popa
and
pop
iret
mov
outsb
outsl
pop
add
jne
push
mov
addr16
add
inc
imul
xchg
push
adc
or
adc
in
push
mov
int3
insl
xchg
fcom
cwtl
push
je
sahf
in
pop
push
mov
dec
scas
inc
jle
add
xor
cmp
sbb
mov
out
mov
inc
bound
pop
mov
mov
adc
adc
in
or
push
push
imul
adc
mov
push
xorl
push
or
dec
sbb
icebp
adc
and
movlps
loope
cmp
test
aas
popf
fcoms
adc
enter
lock
push
sbb
sbb
lods
insl
lahf
loopne
mov
lea
push
push
cmp
adc
scas
inc
outsl
jno
adc
mov
and
lock
push
jge
push
xchg
sbb
push
ja
outsb
sarb
fidivl
mov
adc
and
sub
add
pop
or
in
shll
movsb
out
sub
ja
jno
add
fildl
repnz
mov
gs
sbb
loop
jg
mov
lea
nop
fs
scas
in
jno
mov
push
mov
sub
push
test
scas
xor
stos
push
shl
ds
in
outsl
push
out
mov
sbb
xchg
add
adc
sbb
shll
out
inc
idivb
push
sarl
add
das
push
fs
bound
jno
and
pop
in
inc
xor
and
mov
test
mov
test
int3
jno
mov
inc
daa
repz
push
adc
jno
pushf
jno
lods
cmp
adc
sbb
mov
jno
in
in
lret
push
jg
push
jno
imul
ja
jno
out
jo
pop
dec
fisubl
push
mov
mov
push
sbb
mov
mov
sbb
lock
das
mov
xchg
pop
test
pop
in
arpl
mov
fwait
mov
cli
ds
or
pusha
cmpsb
sub
and
adc
push
xchg
cmp
xchg
movsl
sbb
push
inc
in
mov
lcall
mov
enter
imul
mov
xor
stos
rol
inc
lds
push
mov
gs
xor
mov
nop
push
jo
add
aas
sbb
mov
mov
arpl
mov
int3
and
pop
mov
mov
xchg
and
dec
imul
pop
into
jp
mov
mov
dec
xchg
add
fnstcw
xchg
sbb
adc
fdiv
pushf
scas
inc
imul
add
sbb
fwait
bound
mov
or
sub
cltd
fnstenv
mov
adc
notb
jno
insl
push
and
fsubrs
adc
pushf
xor
loopne
fwait
or
or
push
mov
inc
outsb
and
push
pop
fsubrs
outsl
xor
mov
mull
outsl
pushf
mov
fimull
ljmp
push
mov
sub
adc
push
or
push
outsl
pop
dec
data16
xchg
orb
adc
add
mov
icebp
popa
xchg
sbb
arpl
pop
ret
inc
ljmp
lret
push
mov
loope
jno
arpl
push
mov
in
or
and
xchg
pop
outsb
sbb
fcoml
push
adc
mov
popf
ret
inc
icebp
xor
cmp
pop
or
sub
stos
inc
push
fadd
push
add
mov
data16
mov
sbb
das
mov
pop
les
and
cmp
outsl
out
or
mov
mov
adc
sbb
andb
push
mov
sahf
nop
add
and
out
in
push
in
test
mov
imul
out
stos
movsb
sbb
mov
mov
loopne
inc
pop
imul
mov
in
bound
and
pop
inc
inc
loope
rcrl
outsl
push
and
out
mov
sbb
cmpsl
push
out
test
data16
sbb
int
lahf
es
fmuls
mov
stos
call
mov
push
add
push
jno
sbb
cs
data16
movsl
dec
cmpsl
push
lods
outsl
jno
mov
mov
jmp
rcll
add
mov
mov
out
sbb
add
jo
xchg
jg
popf
pop
movsl
mov
mov
rolb
push
popf
adc
adc
mov
sbbl
push
outsb
inc
mov
stos
icebp
lods
bound
and
in
jmp
cs
or
add
sub
test
dec
add
iret
out
mov
add
dec
mov
lock
or
dec
mov
in
hlt
and
jno
imul
xchg
add
dec
gs
xchg
movsb
ljmp
lock
insl
add
movsb
or
movsb
push
adc
jno
bound
push
and
rcrb
and
cmpsl
jo
adcb
sub
adc
mov
outsl
mov
cmp
adc
sbb
bound
sbb
inc
ret
dec
scas
mov
pusha
mov
and
mov
mov
dec
mov
js
jo
xor
adc
outsl
adc
icebp
movsb
bndldx
mov
jmp
imul
fmuls
loopne
xchg
xchg
xchg
add
movsb
inc
scas
ljmp
imul
shll
movsb
mov
scas
outsl
or
push
add
xlat
sbb
adc
outsb
or
or
mov
ljmp
add
stos
fwait
data16
stc
pop
add
fstps
mov
xchg
mov
mov
add
push
pop
and
add
insl
and
and
mov
add
in
movsl
rclb
dec
pop
push
pop
sbb
mov
sub
in
xor
or
inc
call
scas
cmpl
push
sub
push
inc
pushf
mov
outsl
jo
enter
lcall
out
and
out
fs
arpl
aas
int3
andl
add
sti
jge
sbb
aam
inc
push
int3
int3
negb
pusha
in
mov
movsl
pop
sbb
and
cmp
push
call
mov
icebp
push
or
mov
ljmp
or
cs
pop
or
xchg
pop
fs
fcomps
outsl
add
dec
push
fldt
pop
add
mov
pushf
pop
pop
adc
movsb
jno
icebp
adc
dec
fistl
mov
mov
xchg
hlt
outsb
push
clc
clc
mov
test
push
bound
pop
outsb
mov
lods
sbb
je
outsb
mov
inc
outsb
xor
and
or
cltd
lret
adc
sbb
adc
sub
bnd
outsl
mov
add
outsb
push
lock
ds
pop
mov
lret
fisubl
mov
sbb
mov
or
fcom
pop
pop
adc
mov
pop
mov
push
scas
lret
adc
sbb
sbb
sub
loopne
xor
scas
sub
mov
imul
adc
mov
imul
dec
adc
bound
jmp
dec
popf
sub
es
push
push
xchg
mov
imul
scas
cmpsb
addr16
sbb
ss
sahf
lds
sbb
mov
mov
arpl
sbb
inc
push
push
dec
lods
mov
stos
sbb
frstor
or
push
push
pop
mov
mov
test
or
gs
sbb
mov
sbb
mov
pop
addl
mov
pop
sub
mov
sbb
xchg
inc
fimuls
jb
sbb
sbb
xor
xchg
in
adc
adc
dec
dec
push
movsb
or
arpl
arpl
mov
lock
in
jno
and
pushf
sahf
pusha
sbb
sbb
jl
sbb
scas
lret
ficoms
and
addr16
nop
mov
mov
adc
lahf
lret
mov
ljmp
or
in
test
or
cmpsb
sbb
xor
mov
inc
in
mov
sbb
cmp
out
dec
adc
imul
adc
mov
sbb
add
inc
pop
repnz
jno
cltd
add
and
or
and
pushf
cmp
and
dec
fs
add
dec
imul
push
mov
mov
sub
daa
add
push
dec
and
adc
xor
adc
fs
jecxz
fcoms
push
rorl
and
push
mov
mov
in
xchg
xchg
mov
xor
or
push
shr
test
je
pop
in
push
push
fists
and
sbb
bound
push
lahf
jo
push
push
sahf
sbb
insl
lods
push
sbb
in
aas
aas
push
and
adc
add
adc
lods
outsl
push
out
push
pop
rcll
insl
and
or
xor
fstpl
add
dec
or
outsb
ljmp
lcall
outsl
cmpsb
jmp
nop
mulb
jae
mov
mov
pop
lret
sbbb
add
outsl
stc
pop
jg
outsl
mov
bound
adc
sbb
imul
fs
sbb
fcom
mov
std
push
and
flds
gs
stos
outsb
data16
jno
jl
mov
mov
jo
xchg
lea
adc
outsl
call
nop
push
in
jo
sub
inc
bound
in
adc
jno
add
pop
data16
sbb
and
or
lcall
arpl
outsb
jno
jle
sbb
mov
aad
pop
xor
clc
adc
pop
and
and
gs
jno
sbb
mov
lahf
cmp
pop
ljmp
js
add
lahf
mov
sbb
popa
out
outsb
pop
xchg
pusha
pop
sbb
add
iret
loopne
add
inc
icebp
sbb
push
adc
popa
imul
pop
adc
outsb
ljmp
stos
cmp
test
mov
push
fisubl
out
push
sub
int3
cmp
imul
ret
and
push
inc
cmpsl
add
xchg
movsl
push
dec
xchg
pop
leave
mov
push
out
adc
mov
test
popa
adc
sbb
rorl
out
mov
pop
push
pop
icebp
sub
and
fidivs
inc
inc
mov
test
stos
aam
cmp
mov
stos
push
sahf
adc
add
jno
inc
mov
mov
lds
sbb
mov
xlat
mov
cmpsl
cmpsb
outsb
out
data16
test
mov
out
sub
xchg
mov
jl
orb
fs
or
mov
xchg
or
xchg
dec
aas
arpl
out
sahf
call
push
cmpl
inc
adc
mov
imul
int
aaa
cmpsl
and
add
outsb
mov
leave
out
dec
insl
jno
or
lret
mov
adc
pop
in
adc
push
adc
dec
jno
jecxz
jae
mov
adc
or
mov
push
stos
pushf
sbb
pop
dec
adc
and
fildl
push
ds
sbb
out
jo
push
or
mov
inc
and
pop
rol
je
aad
movsb
sub
push
push
adc
rcll
add
lea
stos
bound
add
xor
stc
in
mov
adc
push
or
out
stc
fsubl
mov
lods
sub
imul
mov
cld
mov
ret
loopne
lock
mov
inc
ds
mov
fs
or
adc
mov
bound
dec
flds
add
add
cmp
loop
leave
aad
adc
aam
stos
iret
cmp
mov
sbb
dec
inc
cmpsl
push
jmp
pushf
pop
gs
mov
imul
out
or
lods
sub
push
sahf
dec
sbb
or
inc
bound
rcll
mov
sbb
push
sbb
test
mov
pop
xor
jo
out
mov
add
mov
sahf
test
push
mov
sub
add
mov
lret
movsl
push
imul
lods
push
lahf
cmp
adc
adc
in
adc
lods
sbb
mov
dec
push
cmpsl
sub
popf
lret
popa
xchg
xor
loopne
sub
les
mov
sbb
int3
inc
mov
push
popa
sbb
lods
jno
movsb
add
xchg
rolb
cmpsl
sbb
or
adc
mov
mov
mov
popa
imul
push
addr16
data16
and
fcoml
or
dec
insb
and
xchg
xchg
mov
inc
inc
mov
out
enter
cli
push
mov
clc
mov
inc
js
popf
inc
push
dec
mov
jns
cmp
mov
push
aad
jecxz
sbb
pusha
gs
sbb
cli
push
mov
inc
out
setb
clc
ljmp
andl
push
in
mov
sub
imul
sbb
pushf
icebp
sahf
in
pusha
add
cmp
iret
pop
roll
ret
add
pop
adcl
es
cmp
sbb
adc
pushf
or
daa
push
xchg
mov
pop
sbb
out
inc
jae
add
sbb
lcall
push
fs
sub
out
ja
leave
scas
push
das
jmp
loopne
pop
mov
fstp
fistpl
leave
dec
push
stos
jo
pop
add
test
data16
adc
outsl
outsl
mov
fstl
fs
loop
icebp
cmp
repnz
scas
outsl
jno
pop
add
xor
test
outsl
sub
jge
movsb
movsb
jge
lods
fcoml
pusha
testb
in
mov
andb
cmp
stc
and
cltd
das
push
iret
aad
and
push
inc
pop
rorl
sbb
ja
jne
stos
mov
xchg
push
fwait
jne
push
jnp
adc
cmp
mov
into
lret
shrb
dec
xchg
setl
adc
pushf
ret
push
xchg
aas
sub
aam
push
inc
adc
fwait
dec
push
add
movsl
inc
in
lcall
and
push
wrmsr
imul
movsb
scas
cmc
out
sub
jns
les
adc
testl
hlt
and
aam
std
xchg
pminub
inc
mov
cmp
pop
rcrl
out
cmpsb
jmp
xor
sbb
adc
movsb
mov
pop
fcoms
jo
sub
arpl
test
xchg
data16
sahf
cmp
shll
comiss
mov
pushl
fisubl
cmpsl
scas
ljmp
outsl
mov
add
push
sbb
xchg
loope
loope
dec
pop
cltd
sbb
nop
mov
in
bound
adc
inc
jno
xor
xchg
ret
mov
jno
or
mov
loop
arpl
cs
adc
jmp
mov
out
pusha
sbb
jmp
push
mov
call
sub
inc
adc
scas
mov
ret
cmp
pushf
xor
dec
loop
nop
or
inc
mov
push
shl
pop
push
filds
cwtl
xor
lcall
lret
gs
aad
jbe
in
pop
out
add
mov
jmp
jp
xchg
push
stc
cmp
and
and
icebp
fnstcw
ficoml
lock
dec
push
push
sbb
dec
out
call
cmp
add
or
xor
mov
inc
jg
incl
pop
sbb
mov
loopne
fwait
gs
imul
data16
fidivrl
pop
imul
add
or
push
push
or
adc
mov
xchg
and
dec
mov
sbb
adc
lcall
hlt
jecxz
xchg
adc
cmp
inc
fisttpl
imul
fildl
push
jo
rcrl
repnz
or
movsl
push
add
sub
imul
xchg
mov
push
push
nop
inc
dec
push
ret
and
ret
test
popa
mov
add
adc
jecxz
loopne
dec
adc
dec
arpl
cltd
dec
push
fwait
jns
loopne
push
pusha
adc
sahf
inc
scas
and
adc
push
mov
imul
adc
clc
jno
mov
push
hlt
les
mov
sbb
repnz
or
dec
sbb
fs
cmp
or
mov
push
scas
lcall
popa
out
test
arpl
call
push
push
add
ds
or
repnz
pop
cmp
int
cmp
add
ficoml
repnz
fmuls
loop
js
adc
unpcklps
dec
std
add
dec
inc
cs
fdiv
mov
imul
push
mov
dec
xor
and
push
icebp
cmp
push
pop
or
in
adc
sbb
mov
pusha
inc
aam
fnstenv
sub
loope
adc
adc
fs
inc
mov
mov
mov
test
inc
xor
mov
jb
test
icebp
cbtw
jecxz
pop
insl
pop
add
pop
dec
popa
call
pop
mov
lcall
cwtl
loopnew
sbb
xor
lret
fs
mov
sahf
cwtl
cmp
sbb
push
pusha
push
xchg
movsl
mov
pop
out
jno
daa
push
rcr
sub
aam
add
mov
pusha
fnstsw
out
aaa
fadd
addr16
subl
je
or
sub
push
fadds
pop
pop
adc
aas
jno
aas
mov
mov
enter
xor
cltd
movsl
sbb
pop
xchg
je
push
sar
daa
or
pushl
outsb
insl
sbb
and
loope
push
mov
pop
lods
shlb
insl
fwait
add
xchg
test
push
mov
mov
mov
clc
aam
or
inc
cmc
ret
adc
cmp
cmp
mov
mov
imulb
xchg
mov
inc
cvtps2pi
or
push
movsl
fs
jp
mov
lahf
push
mov
dec
pop
outsb
jno
pop
fisubl
dec
lock
shlb
fwait
int
push
outsb
dec
fwait
pop
ljmp
outsl
inc
jmp
pop
das
or
push
out
vpmacssdql
pop
std
xlat
movsb
mov
and
adc
movsb
shlb
xchg
out
mov
cltd
std
popf
dec
dec
rcr
fisttpll
pop
sahf
fisttpll
mov
icebp
add
mov
repz
leave
shll
mov
push
sbb
cmpsb
js
out
push
jo
jecxz
ret
dec
and
cmp
std
dec
punpckhdq
cmp
out
and
lock
mov
fsts
add
adc
sbb
aad
push
push
sbb
pop
pop
and
xchg
sbb
into
and
shlb
je
and
push
cmp
adc
adc
mov
sbb
fldt
xchg
inc
rcr
in
dec
ljmp
cmpsb
andl
xchg
mov
inc
lea
jp
and
or
pop
scas
xor
mov
push
push
movsl
arpl
lock
loop
out
not
insl
fcomps
sbb
jmp
jo
jecxz
or
sub
mov
dec
mov
xchg
jbe
nop
gs
test
out
repnz
add
jmp
jmp
xor
jecxz
mov
and
lods
test
pop
ss
sbb
pop
popf
cmp
test
pop
pop
cmpb
xor
inc
lret
cli
popf
cltd
leave
xchg
xchg
ja
add
orb
stos
or
rcll
mov
fsubl
lock
clc
sahf
push
adc
imul
mov
sbb
sbb
push
decl
pop
fsts
test
cmc
aam
pusha
aad
pusha
stos
sub
mov
pop
pop
sti
pop
jecxz
movsb
ficomps
insl
mov
pop
push
fistps
sahf
push
pop
xor
mov
call
loop
adc
shlb
add
push
fisubs
movsb
mov
enter
xchg
mov
stc
dec
lods
mov
adc
adc
jno
addr16
and
aaa
shll
insl
mov
out
dec
xchg
and
adc
sbb
sub
arpl
js
xor
mov
addr16
movsl
push
add
cmpsb
mov
xchg
int3
cmpsb
mov
cmpsl
sub
test
sbb
cmc
lds
aad
xchg
fs
xor
in
dec
add
push
mov
mov
fistps
rorl
cmp
mov
mov
mov
cli
fstpl
fsubrs
inc
and
sti
sti
jecxz
fcoml
rol
pop
push
mov
push
js
fisttpll
adc
xchg
jno
and
movsl
aad
les
shl
fs
inc
lcall
mov
sbb
sbb
lcall
pop
inc
cmpsb
mov
xor
sarl
hlt
mov
lcall
lret
xor
xor
jbe
adc
dec
add
gs
and
fcomp
nop
insb
and
xchg
mov
jle
cmp
push
cmpsb
add
pop
mov
push
outsl
pop
and
inc
push
roll
cmp
push
pop
fxch
sti
ficompl
inc
inc
jbe
and
sbbl
or
xor
fbld
push
push
andb
lea
lea
aas
shr
push
lahf
pusha
cltd
sbb
sbb
cmpsl
rcll
inc
cmp
aad
jp
sub
imul
mov
rorl
ud2
ficoms
in
in
or
test
shll
cltd
fnstenv
cmc
ret
es
dec
mov
outsl
push
inc
cwtl
movsl
cmp
jp
fisubrl
sbb
in
pop
push
dec
and
adc
pop
jno
lock
call
roll
fstl
mov
xchg
int
and
stos
or
stos
adc
jo
lods
push
sbb
mov
sub
imul
ficompl
aad
stos
loope
jo
cmp
into
daa
lcall
rclb
mov
jp
xlat
push
cmpsb
sbb
jp
stc
sbb
lcall
push
aam
in
push
xor
sbb
and
add
and
sbb
rorl
icebp
and
add
in
outsb
mov
and
aad
jecxz
insb
outsb
add
mov
jle
xchg
cli
bound
inc
add
test
or
mov
sbb
test
arpl
bound
add
dec
xchg
mov
inc
adc
loop
loopne
fcomip
push
scas
jmp
dec
fiaddl
dec
and
fbld
inc
mov
mov
fiaddl
std
fnstenv
sub
mov
outsl
sahf
lcall
fisubl
mov
adc
adc
inc
xor
sahf
inc
lret
js,pt
mov
dec
pop
sub
sub
or
popf
jmp
andl
pop
aaa
push
loopne
mov
push
xchg
daa
mov
rcrl
mov
and
jb
inc
pop
pop
xor
cmp
into
mov
adc
stos
add
jecxz
sbb
add
push
and
fs
add
adc
repnz
push
pop
and
xchg
aam
mov
pop
popf
inc
iret
and
dec
and
push
dec
sbb
cli
pusha
and
popa
push
in
cmpsb
sub
test
clc
mov
add
jns
or
sti
shlb
cli
mov
adc
repnz
fcomps
jbe
jecxz
push
shlb
add
sahf
mov
lcall
mov
jns
fcompl
cmc
leave
mov
fcom
mov
add
pop
jnp
aaa
mov
outsb
mov
fcomi
push
sbb
cwtl
out
mov
fidivrl
jno
push
sbb
pop
pop
sti
push
jecxz
xchg
mov
das
adc
and
adc
push
leave
lret
pop
daa
rcl
shl
orb
push
adc
sti
movsb
pop
mov
repz
enter
dec
repnz
and
nop
dec
jo
jo
jbe
cmpsb
jp
pop
fiaddl
lcall
or
lock
xchg
dec
and
xchg
jo
pop
and
push
addr16
xor
or
lret
adc
pop
fwait
loopne
dec
rclb
pushf
repnz
pushf
push
add
ret
pop
pop
and
insb
fnstsw
mov
out
fisttpl
mov
push
je
mov
push
dec
pop
out
loope
aaa
push
loop
fwait
cmc
and
std
xchg
dec
and
add
rcr
add
fdivrs
fs
pop
shll
push
mov
jb
fcomps
shll
xchg
sub
popf
mov
cli
nop
test
mov
ja
loop,pt
test
or
push
mov
loop
pushf
jno
movsl
jno
mov
cli
cltd
cs
mov
push
jecxz
leave
shrl
mov
sub
push
iret
xchg
sarb
push
mov
aas
loop
push
add
arpl
mov
and
inc
push
adc
push
jp
and
jb
push
test
loope
loopne
push
std
pop
idivl
or
lahf
imul
cli
fisttpl
sub
sahf
jmp
loopne
sbb
xchg
movsl
xchg
ja
js
test
repz
sbbb
loopne
or
lock
inc
xchg
cmpsl
cld
mulb
imul
pop
mov
in
nop
add
push
repnz
fistl
xor
lea
out
fisubs
or
push
daa
std
movsl
lcall
mov
bound
lret
xor
lcall
add
add
dec
clc
cmc
std
inc
test
push
out
rorl
xlat
bound
adc
adc
push
inc
sub
popf
xchg
cli
fstpt
push
cmp
int3
lcall
aam
mov
fisubs
ret
imul
inc
rorb
jp
add
pop
jg
aad
lods
sub
xchg
aad
stos
orl
loope
mov
jae
lock
ja
je
pusha
aaa
add
ljmp
cli
aam
or
lahf
bound
sahf
arpl
push
aas
mov
lds
sbb
mov
or
or
sub
insb
dec
pop
scas
or
lcall
scas
sarl
pop
sbb
push
fsubl
sbb
xor
cmpsb
dec
cs
aam
sbb
repz
and
and
mov
jp
loop
mov
loope
push
xor
xor
xlat
nop
cmpsl
andb
loope
das
push
mov
xor
ret
xchg
loope
jecxz
imul
and
sbb
lcall
jae
dec
rcrb
xchg
mov
xor
hlt
leave
pop
xor
outsl
xchg
les
fwait
cmp
adc
and
frstor
fists
sbbl
rolb
imul
push
jnp
lds
js
dec
sub
push
jp
dec
imul
pop
jne
repz
aas
fcmovne
cmp
mov
push
nop
sbb
fcoms
push
arpl
and
fstl
arpl
push
test
pop
ds
pop
jle
fbld
mov
mov
daa
adc
aas
iret
call
add
and
dec
adc
sbb
push
jl
out
out
shll
lock
enter
int
mov
push
lds
xor
mov
jecxz
popf
mov
pop
cltd
rcl
fucompp
or
cwtl
out
fiaddl
or
shl
inc
and
mov
rcrb
call
fiadds
rorl
pop
push
stc
jns
rolb
add
push
repz
xor
iret
rolb
xchg
dec
jbe
xchg
adc
scas
jb
mov
adc
add
xchg
leave
mov
pop
push
frstor
dec
pmaxub
addl
pusha
dec
shlb
inc
mov
mov
inc
mov
mov
xor
or
movsl
xor
inc
jge
sub
push
pop
mov
add
push
sbb
mov
decb
push
lcall
xor
dec
xchg
sub
fwait
nop
push
or
outsl
adc
xor
loop
imul
test
or
cmpsb
addr16
xlat
iret
lds
dec
shl
add
rcr
add
push
loopne
inc
fstl
stc
decb
rcrb
fdivl
arpl
adc
adc
sub
push
mov
jp
sub
push
push
fstenv
leave
push
add
mov
xchg
gs
sbb
scas
test
cmp
loope
add
test
pop
repz
xor
dec
sub
loopne
xor
cmp
sub
adc
jp
push
daa
std
add
pop
adc
scas
das
add
mov
mov
inc
dec
xor
mov
shll
icebp
cmpsb
inc
sbb
shll
or
mov
xor
sarl
lds
lret
sarb
jo
cli
fcoms
push
and
xlat
test
adc
in
mov
push
push
cltd
and
mov
push
cmp
xchg
jno
stos
repnz
jecxz
movsl
jb
xor
jbe
and
dec
rolb
adc
mov
dec
push
nop
jmp
sub
sbb
and
orb
ret
fsub
jle
sbb
mov
shlb
int
jns
jmp
add
leave
mov
psrlw
int3
inc
pop
fbstp
lret
dec
push
lcall
jno
test
fwait
adc
jo
adc
sbb
sub
mov
movsl
call
add
jmp
mov
arpl
sbb
insl
pop
mov
stos
and
pop
lahf
cmp
push
cmp
lock
inc
repnz
xchg
push
lret
jo
inc
ret
imul
ficoml
dec
add
imul
add
cmp
xchg
jmp
add
mov
ss
hlt
fs
jecxz
adc
xor
dec
xchg
mov
cwtl
mov
cmpsb
iret
xchg
cwtl
dec
mov
sub
pop
test
ds
leave
cmpsb
mov
cli
and
sbb
pop
in
cmp
xor
insb
dec
fcomps
daa
mov
sbb
and
xor
adc
adc
leave
movsl
outsl
mov
mov
xor
mov
inc
jno
sub
nop
out
fs
fstps
out
pushf
sbb
lock
jp
fadd
xchg
xchg
imul
outsb
sub
push
fwait
push
push
xchg
stos
mov
out
jno
sbb
rorb
call
jge
movsl
push
sti
gs
out
push
mov
cmc
inc
aam
fiaddl
data16
sbb
ret
push
lock
stos
and
pop
ret
cltd
dec
lahf
xor
mov
sub
jnp
jb
sahf
cltd
arpl
arpl
inc
xchg
out
rcrb
rsqrtps
sub
pop
xor
fidivrs
inc
adc
sahf
pop
add
fcoml
add
mov
shll
xor
and
hlt
add
mov
dec
push
dec
lds
sbb
ficomps
call
xor
mov
mov
mov
mov
sbb
or
mov
nop
ret
push
scas
inc
cmpsl
repnz
je
aaa
movsl
sbb
push
dec
nop
inc
ficoms
decb
or
jmp
mov
mov
pop
mov
cmc
call
sub
mov
push
mov
push
jns
push
xchg
mov
repz
add
push
mov
jl
mov
pop
and
push
mov
jb
aad
out
rorb
adc
or
dec
rclb
adc
or
iret
adc
cmp
rcrb
or
pop
sarb
in
mov
sbb
fadds
adc
dec
cmp
add
add
and
int3
nop
push
fs
fnstcw
dec
roll
cli
pop
push
and
neg
jns
pop
roll
sarb
adc
fists
std
push
les
bound
pop
pop
and
xchg
add
dec
sbb
rol
test
test
imul
ds
inc
push
xchg
jo
adc
fistl
push
xchg
inc
cmpsl
ds
mov
shrb
faddl
cli
mov
adc
pop
addr16
arpl
jecxz
pushf
test
push
imul
cmc
test
inc
fs
insb
ljmp
fldenv
fsubs
std
push
lock
sbb
ja
fcmove
inc
stos
xchg
push
and
jecxz
inc
adc
sbb
bound
andb
and
jne
mov
and
sbb
jecxz
pop
insl
inc
and
std
leave
and
jne
add
add
xchg
sub
adc
imul
lods
je
mov
jno
enter
sbb
jno
cltd
jecxz
shll
ficoms
fcmovb
cmp
lahf
xchg
and
out
sahf
cmpsl
dec
jno
cmpsb
aam
add
outsl
nop
and
lcall
mov
jecxz
shlb
xchg
inc
cli
xchg
outsb
sahf
enter
adc
sahf
mov
push
sbb
fstps
ficomps
sbb
lret
pop
or
scas
inc
or
inc
mov
mov
xchg
arpl
sub
mov
inc
jecxz
lods
cli
sub
add
mov
fsubrl
aaa
pop
scas
andl
add
inc
addb
negl
pop
sub
and
push
cmp
inc
cltd
jp
xor
pop
fidivrs
push
mov
jo
ret
add
inc
addb
arpl
mov
jnp
and
inc
mov
xor
and
test
ret
push
inc
cmp
push
popf
sbb
jecxz
popf
lret
or
mov
lret
mov
and
mov
inc
pop
xchg
pop
xchg
pop
or
imul
add
pushf
mov
and
arpl
adc
and
call
popa
pop
pop
pop
movsl
dec
mov
pop
adc
fnstenv
push
adc
ljmp
call
dec
or
gs
cmp
jecxz
icebp
ret
xlat
std
add
fildl
add
xchg
bound
inc
in
hlt
jecxz
sub
je
add
lods
icebp
andb
int
in
movsl
fcomps
inc
rcll
inc
fwait
sbb
xor
xlat
push
pusha
cltd
movsb
ret
sbbb
faddl
sbb
mov
pop
sahf
out
mov
mov
xchg
mov
js
lds
fistpl
incb
or
dec
inc
repz
mov
fiaddl
mov
cs
cmpsb
rcll
jecxz
and
inc
push
pop
cmc
daa
cli
icebp
jecxz
test
cli
push
mov
insl
inc
xor
shl
lock
mov
add
je
inc
andb
jmp
rorb
inc
fisttps
mov
sub
clc
aaa
rcrl
mov
sbb
fbld
push
xchg
leave
push
fwait
push
and
mov
cmpsl
dec
xchg
lret
dec
adc
stos
push
fiaddl
jmp
pop
sub
jmp
fimull
pusha
fmuls
xchg
add
popa
cmp
fadds
daa
and
mov
xor
push
repz
push
rcll
mov
aad
in
leave
xchg
inc
into
fwait
dec
in
jecxz
sbb
shlb
adc
dec
or
jne
or
jo
inc
scas
adc
mov
sub
call
dec
xchg
fsts
lret
jecxz
xchg
add
push
adc
sbb
rol
mov
mov
call
pop
orl
jecxz
mov
and
xchg
xchg
sub
mov
or
test
jp
push
cwtl
call
rcll
cli
mov
sub
mov
iret
sbb
cmp
or
into
vpunpckhwd
inc
movsl
rol
movsl
and
shr
xor
out
dec
jecxz
aaa
test
and
mov
es
ret
and
push
out
inc
mov
jbe
rcrb
and
cmpsl
push
fcompl
cmp
mov
pop
add
jmp
adc
xchg
movsl
fadds
pop
fwait
pop
arpl
jae
repnz
out
mov
leave
lcall
cwtl
ret
jnp
and
dec
xchg
push
imul
lahf
idiv
test
mov
outsb
push
dec
loope
loopne
mov
mov
shl
cmpsl
cwtl
clc
fisubrs
jle
iret
daa
push
lds
dec
jne
sahf
aaa
sbb
add
outsb
push
push
and
fcomps
ss
push
jecxz
imul
and
xchg
sbb
das
mov
into
inc
clc
sti
std
sbb
ja
int3
mov
mov
mov
shlb
lcall
mov
adc
jns
push
ret
scas
cmp
and
fcomp
mov
mov
inc
dec
dec
or
test
xor
mov
pop
jmp
jecxz
mov
leave
std
test
and
jnp
je
stc
mov
xor
mov
enter
ficomps
testb
addb
shl
mov
das
inc
xchg
fsubs
pusha
lret
mov
and
inc
arpl
daa
out
pop
or
jmp
flds
jb
or
sbb
push
cmpsb
mov
sub
fimuls
pop
pop
rcrl
mov
scas
pop
pop
loop
cmp
adc
xor
dec
bound
es
out
cltd
insl
adc
cwtl
loope
mov
and
rorb
rorb
ljmp
sbb
add
and
imull
dec
sbb
pop
xchg
sbb
insl
outsl
adc
xor
add
push
in
sub
pusha
ss
sbb
inc
test
mov
and
pop
cli
xchg
mov
fcmovbe
mov
add
nop
cmp
or
iret
call
addr16
dec
pop
and
inc
mov
dec
or
es
push
pop
out
xchg
mov
push
mov
arpl
sti
pop
out
push
sahf
xor
push
mov
sbb
cmpsb
cmp
insb
ss
cmp
add
insl
inc
mov
xor
ret
outsl
dec
imul
call
add
inc
pop
mov
and
ret
fcomps
stos
sti
ja
lret
lretw
es
js
cli
iret
add
jmp
mov
mov
sbb
shll
push
dec
mov
inc
aaa
cmp
pusha
push
dec
jecxz
sbb
adc
push
xchg
mov
fisubrs
setno
add
mov
add
jp
mov
orb
rcl
dec
scas
fcoms
cmp
xchg
mov
shlb
mov
add
xor
push
sbb
add
lret
pop
aaa
sub
fildll
push
push
inc
lahf
icebp
mov
lret
and
ret
cmpb
xchg
lock
andl
dec
loope
out
outsl
fwait
mov
rorl
xchg
lret
cli
lahf
adc
in
lret
push
movsl
inc
add
arpl
mov
fwait
or
fsub
jg
pop
inc
cwtl
scas
gs
enter
mov
pop
stos
mov
outsl
and
mov
fidivrl
push
pusha
out
xchg
test
inc
cmp
lahf
xor
inc
mov
pop
mov
enter
mov
rolb
inc
push
cmp
pop
out
mull
mov
pop
ud1
mov
fidivs
push
sahf
clc
mov
mov
ja
inc
outsl
fimuls
xor
dec
push
stos
jb
icebp
call
fistpll
cltd
adc
das
mov
push
test
mov
bnd
sbb
mov
and
dec
cmpsl
test
lret
iret
or
ja
clc
ror
stc
xchg
pop
nopl
imul
jp
nop
pop
add
sbb
xorl
push
sahf
into
add
jae
sbb
xchg
xchg
add
xchg
inc
sbb
outsl
adc
fcoms
and
test
aaa
rorb
clc
rcl
and
adc
fbstp
mov
push
push
mov
mov
cmp
loopne
xchg
mov
nop
mov
stc
cs
mov
into
pop
and
xor
push
inc
sti
push
pop
add
test
mov
xchg
dec
ja
shll
and
push
pusha
nop
sbb
pop
xlat
cmpsl
pop
inc
sub
dec
and
xchg
jne
dec
xchg
mov
adc
push
adc
or
xchg
nop
into
shlb
xor
adc
add
frstor
nop
push
enter
andb
shrb
and
arpl
mov
fs
push
mov
es
add
pop
rcr
cmp
jo
and
pop
push
cwtl
and
adc
pushf
arpl
sub
mov
push
dec
mov
push
sbb
cli
pop
and
jmp
imul
sbb
push
jnp
sub
push
scas
lods
ja
mov
jo
cwtl
outsb
outsb
push
cmc
enter
jge
push
mov
cmpsb
adc
or
sbb
jno
jo
push
push
adc
outsb
scas
cmpsb
sbb
jo
mov
or
test
adc
push
outsb
adc
jo
outsl
push
lea
add
add
jge
mov
or
outsb
push
mov
sub
mov
lods
outsb
mov
push
stos
cmc
inc
push
mov
jge
mov
sbb
bound
jo
popf
sub
mov
addl
push
push
adc
mov
test
sbb
pop
stos
insb
mov
insl
mov
mov
push
or
mov
cmp
mov
push
adc
mov
jo
popf
sub
mov
jmp
sbb
bound
insl
jo
data16
sbb
add
mov
ljmp
sbb
mov
or
add
or
cmc
add
sbb
jo
or
mov
push
mov
dec
outsl
mov
sbb
jo
dec
outsb
sbb
mov
bound
or
data16
cwtl
sbb
and
out
outsb
jo
xor
fstpl
and
adc
cmp
mov
adc
push
call
sbb
mov
push
and
adc
mov
imull
test
stos
lods
data16
je
jo
mov
cld
scas
sbb
pop
insl
insb
inc
bound
dec
jo
outsl
push
test
mov
mov
outsb
mov
jo
cmpsb
adc
test
add
imul
push
jo
mov
std
mov
outsb
mov
and
adc
push
jge
mov
lods
outsb
fs
bound
push
pop
lods
push
or
jbe
sbb
jno
mov
push
outsb
sbb
das
and
adc
push
mov
pop
lods
or
or
or
mov
mov
outsl
mov
cmp
push
and
inc
adc
dec
cmc
push
inc
outsl
sbb
in
sbb
jo
cmp
popf
movsb
mov
fs
and
sbb
or
mov
push
movsb
test
outsl
mov
push
and
outsl
mov
mov
sub
outsb
or
or
outsb
and
or
lods
mov
sbb
or
outsl
and
adc
adc
imulb
push
test
lods
in
outsb
or
or
and
mov
or
push
sub
cmc
mov
mov
fnsave
mov
push
mov
and
pop
adc
mov
adc
outsb
sbb
pop
adc
mov
push
dec
jo
outsl
or
or
push
movsb
outsl
lods
data16
ja
stc
mov
sbb
shrl
add
pop
mov
mov
imul
out
or
les
push
adc
jne
adc
mov
rcrl
imul
xor
adc
sub
or
clc
push
das
and
mov
sub
bound
insl
arpl
xchg
push
push
or
or
jno
add
inc
jae
imul
addr16
sbbl
arpl
push
rcll
push
sbb
lock
sti
or
adc
mov
push
and
lods
call
filds
outsl
stos
shrb
jno
mov
pop
nop
stos
sbb
or
mov
or
push
pop
in
jno
jno
and
adc
cli
addr16
lods
sbb
push
pop
inc
sbb
pushf
or
adc
in
mov
inc
addr16
or
sbb
mov
movsb
imul
sub
sbb
lahf
push
test
shld
push
push
lods
add
lods
addr16
sbb
in
sbb
data16
push
cmp
fidivrs
dec
dec
sbb
add
mov
fwait
add
mov
int3
and
adc
icebp
movl
or
inc
lcall
and
jno
pop
jo
sub
cmpsb
test
add
mov
adc
sbb
mov
sub
loopne
popf
in
jg
sbb
and
and
and
fcoml
popa
adc
mov
imul
add
lea
push
add
adc
mov
pop
adc
cmp
push
xchg
dec
sahf
lock
out
fcompl
in
fdivrl
push
ss
sbb
lea
pop
fs
pop
mov
lahf
adc
lahf
scas
stos
cs
dec
fcomip
and
and
roll
mov
ss
sbb
push
imul
aam
xchg
faddl
cli
xchg
mov
in
sbb
lock
stos
sbb
push
sub
imul
jo
sbb
adc
or
in
sbb
xor
fisubs
and
adc
pop
or
mov
add
in
mov
inc
out
adc
dec
push
stos
mov
mov
push
push
or
mov
xchg
dec
mov
mov
xchg
push
xchg
pop
aad
lock
aad
push
mov
add
adc
mov
insl
jo
sbb
or
sub
sbb
cmp
bound
ljmp
mov
push
insl
test
mov
les
mov
movsb
sbb
sbb
push
test
bound
jno
adc
or
mov
das
push
pop
jo
xor
out
sbb
push
mov
dec
pop
ficompl
xlat
lock
insb
jg
test
xchg
bound
fs
inc
imul
inc
push
js
pushf
add
push
mov
mov
mov
add
push
pop
int3
cld
jno
mov
sbb
or
les
test
bound
mov
sbb
lea
int
test
bound
imul
and
test
arpl
lea
sub
lock
data16
sbb
sbb
stos
sbb
lock
gs
add
sbb
or
xchg
movsb
push
mov
mov
das
add
adc
lret
xor
inc
popf
fs
jbe
adc
mov
mov
inc
inc
mov
mov
inc
add
mov
in
xor
test
bound
stos
adc
fiadds
adc
mov
int3
sbb
movsb
pop
push
xchg
xchg
pusha
repnz
out
fcoml
pop
in
or
xlat
adc
add
imul
mov
dec
mov
stos
mov
jecxz
movsb
mov
jmp
mov
inc
lea
pop
cld
xor
movsb
sti
push
imul
add
stos
xchg
mov
bound
movsb
cmp
inc
pusha
shl
cmp
cs
repnz
faddl
in
mov
les
add
add
jo
cs
mov
bound
adc
mov
adc
lret
mov
dec
push
xor
or
int
xor
in
gs
ss
movsb
sbb
pop
out
shlb
out
lea
sbb
mov
sbb
or
out
or
sbb
add
imul
push
jno
dec
mov
outsl
mov
jecxz
jo
out
xor
scas
scas
cs
lret
adc
imul
push
das
sbb
sub
xchg
mov
in
imul
fs
shlb
and
popf
in
add
shrb
fisubs
jle
call
mov
icebp
push
xor
outsb
sbb
lock
gs
sbb
push
das
in
sbb
dec
lret
mov
les
sbb
in
lcall
push
sbb
push
inc
in
and
gs
in
sbb
mov
icebp
bound
jg
or
loop
cmp
jns
push
inc
in
pop
sbb
divb
adc
or
adc
lds
and
push
data16
push
push
sbb
int
xchg
test
push
cli
xchg
push
data16
shl
or
push
jo
or
in
mov
add
dec
fcoml
mov
push
int
mov
int
sbb
clc
push
lock
pop
add
xor
and
cltd
pusha
clc
f2xm1
pop
xchg
pushf
add
push
gs
push
xchg
push
test
mov
imul
stos
mov
push
push
inc
adc
pop
mov
iret
inc
push
pop
movsb
mov
pop
cmpsl
or
imul
stos
addr16
sbb
into
imul
or
add
and
pop
insl
dec
shll
sbb
mov
lock
mov
adc
push
push
inc
push
sub
addr16
sbb
inc
addr16
push
sbb
sbb
dec
xchg
pusha
mov
call
push
lods
pop
addr16
cmp
in
stos
push
ja
imul
imul
mov
addr16
push
in
addr16
or
push
nop
push
add
imul
adc
pop
jno
and
mov
cmp
mov
or
cmp
icebp
sbb
aas
popf
mov
and
movsb
imul
or
pushf
scas
mov
mov
or
inc
addr16
loope
loopw
push
fsubr
in
and
scas
mov
add
icebp
fsubl
and
mov
call
push
mov
jno
push
cmpsb
pop
push
mov
sub
xor
adc
imul
mov
push
jno
or
adc
mov
cmp
cmp
push
adc
add
stos
jno
lss
push
jno
and
push
xor
xor
push
mov
cmp
push
adc
mov
inc
data16
out
dec
jo
mov
scas
mov
adcb
fcoml
movsb
outsb
push
test
mov
cwtl
sbb
pushf
outsb
mov
addr16
push
or
scas
out
lds
cs
shll
push
dec
cs
outsl
and
push
outsl
lea
adc
scas
or
loop
push
mov
push
push
push
scas
cmp
push
adc
mov
xor
inc
mov
mov
imul
push
push
cld
mov
fwait
mov
loopne
or
arpl
pusha
movsb
sub
sub
imul
nop
ret
push
mov
addr16
adc
nop
add
lock
push
es
cmp
and
in
push
outsb
lods
into
outsl
pop
in
or
mov
addr16
jl
adc
call
jmp
jno
cmp
adc
pop
bound
addr16
push
arpl
addr16
lds
punpckhbw
and
sbb
insl
jno
push
in
jno
pushf
loop
mov
and
push
lock
adc
sub
arpl
jno
mov
sub
bound
insl
outsl
jno
mov
push
arpl
and
cmc
inc
sbb
and
xchg
outsl
dec
adc
mov
adcb
push
push
movsb
test
xlat
mov
movsb
mov
jno
adc
loop
push
mov
push
adc
call
push
sub
or
push
pop
or
mov
pop
mov
call
clc
imul
mov
mov
inc
inc
push
test
push
imul
movsb
jmp
scas
mov
adc
ljmp
or
pop
mov
jmp
into
sbb
scas
int3
push
pusha
mov
or
insl
aaa
mull
pushf
lock
xlat
imulb
or
push
stos
mov
ljmp
mov
addr16
sub
or
pushf
mov
test
lock
push
jno
mov
icebp
sbb
outsb
outsb
adc
xor
scas
test
outsl
adc
fisttpll
and
push
and
mov
mov
adc
jmp
mov
or
out
fstl
in
sbb
outsl
fs
outsl
and
push
or
jns
sub
or
mov
arpl
mov
add
sbb
imul
or
gs
sbb
mov
sbb
mov
and
stc
dec
mov
xlat
add
dec
pop
xor
push
push
add
mov
gs
sbb
lock
jno
je
and
jns
pop
insl
sub
scas
dec
pop
xor
push
stos
sbb
add
push
ss
inc
or
and
mov
jno
mov
push
push
pusha
jno
ret
cmpsb
adc
push
pop
and
sbb
pop
negl
sub
sbb
pop
and
adc
pop
push
addr16
imul
sub
dec
lock
popf
dec
js
mov
sbb
sbb
push
arpl
sbb
insl
lcall
and
scas
mov
mov
arpl
fsubrl
mov
leave
or
add
addr16
sub
adc
mov
adc
out
jno
pushf
push
fs
adc
jnp
insl
adc
fcmovne
jb
sbb
fsubs
imul
adc
inc
add
mov
or
inc
sbb
icebp
loopne
adc
mov
pop
mov
mov
dec
nop
arpl
jno
scas
rclb
sbb
or
mov
push
inc
mov
add
mov
mov
pop
jno
or
imul
scas
in
fdivrl
push
das
jge
lods
stos
arpl
stos
arpl
or
mov
or
add
push
stos
inc
in
sbb
icebp
jge
jmp
psubd
mov
stos
lock
xchg
imul
mov
or
adc
jo
das
in
dec
aas
jno
sbb
inc
mov
lock
pusha
push
mov
push
mov
mov
leave
jo
in
leave
push
mov
das
iret
sarl
addr16
pop
push
mov
and
sbb
iret
dec
mov
add
sbb
cli
inc
or
es
mov
in
push
sbb
or
adc
lods
cmp
or
mov
lods
dec
push
push
ss
adc
mov
insl
in
lea
push
inc
cmp
data16
sub
mov
adc
mov
sbb
and
arpl
mov
and
mov
fnstsw
stos
stos
icebp
push
repnz
pop
imul
sbb
push
and
pop
pop
pop
outsl
or
sbb
mov
or
add
pop
or
inc
inc
pop
lret
and
movb
mov
bound
lods
mov
insl
or
out
hlt
das
in
and
and
jne
aaa
addr16
sahf
das
addr16
dec
adc
xchg
fs
outsl
push
shlb
imul
or
or
pmaxub
outsb
xor
fs
sub
cmp
rclb
clc
and
addr16
mov
sahf
jnp
movsb
sbb
adc
sub
out
and
adc
ljmp
mov
fsubrl
cli
cmp
pop
push
movsb
mov
push
imul
lcall
push
sub
push
jl
sbb
push
jmp
addr16
push
xchg
enter
cwtl
lea
shl
mov
or
inc
out
push
sahf
jnp
sbb
xor
mov
arpl
dec
adc
cmp
addr16
dec
push
jo
mov
scas
mov
cmp
cmp
push
movsb
mov
sbb
jno
addr16
sti
pop
adc
mov
scas
xor
add
mov
jge
push
pushf
sbb
icebp
inc
addr16
pushfw
outsb
mov
or
push
or
fidivrl
cmp
aas
lret
mov
rcrl
lods
cmp
invd
sub
add
mov
mov
fs
adc
mov
imul
or
add
cltd
add
inc
xchg
insb
mov
jmp
enter
or
xchg
rorb
jle
mov
in
sbb
or
in
sbb
lods
dec
sbb
add
pop
mov
cmp
mov
jp
push
mov
jp
out
call
fidivrs
movsl
adc
sti
leave
fnstsw
bound
xchg
lret
mov
or
dec
outsb
in
ljmp
push
fistl
nop
mulb
inc
and
mov
pop
sbb
sbbb
fsubl
add
pop
imul
ja
mov
mov
mov
sub
dec
mov
pop
and
test
mov
pop
pop
fadd
cmp
lcall
mov
cmp
jno
and
inc
mov
xchg
adc
outsl
divb
xor
mov
adc
outsl
ds
arpl
outsl
movsl
push
add
addr16
jno
mov
inc
push
add
push
xchg
mov
sbb
jno
push
es
imul
jecxz
adc
cltd
inc
and
sub
lea
arpl
add
jecxz
movsl
repz
push
loopne
arpl
cmp
test
mov
xor
inc
lods
pop
push
or
loope
add
add
imul
mov
jae
jp
dec
jae
push
and
outsl
cltd
int
cli
and
add
lock
addr16
or
addr16
addr16
rorl
xchg
loope
add
addr16
pop
inc
mov
and
add
inc
loope
add
cmp
jno
cmpsl
jo
rcrl
packssdw
addr16
push
cmp
cmc
add
movsl
movlps
cmpl
cmp
pop
add
mov
and
mov
mov
cmp
ljmp
addr16
push
cmc
add
mov
stc
push
movsb
add
add
push
shl
add
jmp
add
cmp
gs
cmpsl
add
lods
js
mov
push
fs
stos
jno
pop
incl
test
addr16
push
mov
movsb
mov
es
pop
add
and
add
push
jns
gs
adc
mov
loope
mov
jno
and
movsl
push
and
cmpsb
gs
xor
push
outsl
or
or
mov
mov
in
adc
mov
adc
sub
push
mov
xor
icebp
faddl
and
inc
push
or
mov
sub
mov
test
mov
adc
orl
and
movsl
mov
mov
push
xor
les
and
les
mov
out
push
clc
lahf
mov
or
sub
mov
insl
jno
in
icebp
jae
push
ljmp
and
push
in
insb
test
adc
mov
call
push
call
test
pop
outsb
inc
push
shll
add
ret
sbb
xchg
insl
adc
inc
mov
sbb
inc
push
insl
lcall
andl
shrl
push
cmp
mov
pop
mov
insl
jo
xor
and
push
mov
sub
sbb
lahf
adc
pop
fs
loope
outsb
mov
add
mov
mov
mov
loope
arpl
stos
or
add
insl
test
arpl
insl
movsl
pop
fbstp
adc
or
movsl
sbb
push
sbb
call
sbb
sbb
adc
lret
fs
pushf
mov
nop
inc
push
lods
mov
mov
pop
pop
outsb
subb
lods
mul
rcll
fs
adc
imul
adc
lock
push
mov
loope
gs
ja
mov
fmuls
push
mov
push
imul
test
adc
jno
loope
mov
push
mov
dec
adc
jg
stos
mov
stos
cs
icebp
fsubl
ljmp
sub
push
cmp
sbb
insl
or
push
lods
jno
in
lods
pop
insl
mov
mov
call
mov
xchg
jb
mov
push
lds
pushw
adc
jb
imul
in
add
cmpsb
mov
movsl
data16
outsb
sbb
cmpsb
pop
dec
or
inc
addr16
add
add
inc
mulb
lret
or
mov
loop
subb
in
ret
loop
mov
pushf
push
mov
daa
addr16
sbb
adc
lahf
mov
addr16
dec
mov
lock
inc
or
mov
loopne
add
test
xchg
adc
mov
push
data16
int
inc
movsb
cmp
loope
sbb
mov
sbb
imul
imull
addr16
inc
sbb
cmp
xor
sbb
xchg
jecxz
mov
pop
sbb
push
mov
mov
jge
adc
mov
jmp
jp
dec
lcall
sbb
addr16
push
std
sbb
and
dec
aas
lahf
mov
adc
sar
sbb
call
sbb
and
mulb
mov
loop
dec
mov
mov
fidivl
repz
push
sbb
movsl
hlt
push
mov
hlt
jecxz
xchg
push
sbb
sub
push
sbb
movsl
xor
mov
xor
mov
push
sbb
sub
clc
loope
sbb
movsl
je
data16
addr16
clc
xor
add
outsl
or
adc
or
and
addr16
iret
rclb
jge
adc
jo
mov
insl
jno
in
xor
mov
aas
loopne
push
rol
inc
push
movsb
scas
push
xor
xor
mov
push
and
xchg
sarl
imul
jne
bound
movsb
fsubl
inc
outsb
xchg
cmp
mov
addr16
mov
outsb
mov
inc
inc
cmp
data16
iret
inc
jo
dec
shrb
in
or
fs
inc
and
repz
in
push
or
mov
les
mov
or
add
out
mov
data16
inc
out
mov
arpl
notl
sbb
or
pop
add
insl
and
insl
movsl
add
aad
stos
mov
jo
sub
cmp
push
sbb
push
sub
push
sub
movsb
push
sub
int
jp
testb
mov
jmp
add
xor
sub
imul
add
mov
cmp
sub
push
sub
push
sub
dec
jno
push
adc
mov
sbb
jecxz
inc
imul
bound
inc
cmp
mov
mov
jno
pop
and
sub
mov
mov
push
jo
lods
lea
movaps
add
jo
imulb
jo
xor
mov
jb
jo
addr16
adcb
jo
and
test
pusha
imul
sbb
xchg
mov
fstpl
mov
pop
jo
iret
sub
mov
bound
push
divb
das
addr16
pusha
add
pusha
or
cmp
adc
push
cmpsl
jo
addr16
jo
movsb
add
sbb
sub
das
addr16
lds
and
fldenv
mov
bound
insl
cmp
xchg
inc
xchg
pop
ja
pop
arpl
sbb
xor
adc
jb
inc
fisubl
jb
adc
ss
cltd
adc
adc
adc
mov
rcr
or
fs
dec
inc
dec
adc
std
mov
sbb
fs
push
push
adc
mov
inc
insl
fwait
jne
js
and
adc
adc
mov
arpl
notb
xchg
mov
mov
test
mov
and
rcll
and
mov
stos
fld
inc
inc
cmp
mov
cmc
inc
mov
je
or
lock
loopne
repnz
inc
cmp
inc
jne
jmp
dec
clc
test
enter
mov
jecxz
inc
inc
imulb
imul
mov
or
and
mov
or
push
jge
inc
aas
inc
cltd
int
cmp
lds
clc
and
xor
andb
sbb
fs
jbe
mov
gs
mov
addr16
shll
mov
push
out
mov
pop
inc
repz
mov
cmp
insb
sarb
fdivl
xor
test
jno
sbb
xchg
or
jg
das
insl
mov
jo
sbb
xchg
add
test
insl
ret
sbb
ret
cmpsl
pop
and
insl
lcall
loop
inc
rolb
ja
adc
movsl
push
insb
pop
cmp
adc
mov
addr16
adc
sbb
or
push
jns
nop
adc
imul
ret
and
lcall
jne
ds
shll
and
or
call
lods
mov
lods
imul
out
shlb
mov
loop
add
sbb
adc
push
jae
cmp
mov
or
imul
mov
or
push
mov
xor
addr16
adc
aaa
test
push
mov
inc
pop
sbbb
mov
sub
push
ds
add
add
mov
push
pop
inc
fimuls
push
mov
mov
imul
jmp
jno
xor
in
sbb
inc
ret
pop
sbb
inc
in
in
rcrl
jne
jbe
mov
push
in
jmp
inc
pop
mov
dec
rcll
inc
cmp
repnz
sbb
adc
and
or
mov
jo
push
pop
lds
sbb
enter
mov
lcall
sbb
xchg
in
push
mov
stos
mov
aaa
into
mov
push
jle
mov
lock
fsubrl
arpl
ret
add
mov
push
out
pushf
mov
lret
xchg
cmp
int
jmp
arpl
das
loop
push
push
and
fsubrl
mov
add
mov
addr16
daa
in
fcompl
dec
xor
cmp
push
jno
and
data16
mov
test
bound
icebp
adc
leave
divb
ret
adc
ret
sbb
stos
sbb
lock
mov
push
clc
sub
pop
loope
outsb
mov
add
adc
insl
imul
shll
mov
scas
and
adc
push
push
adc
dec
inc
mov
cmp
pusha
adc
jno
or
and
jp
inc
gs
insb
aaa
movsl
cs
and
and
and
mov
insb
sub
pusha
or
in
and
mov
cmp
inc
mov
mov
or
bound
rol
or
addr16
mov
sbb
adc
dec
add
xchg
sbb
adc
push
mov
insb
fsubl
xchg
insb
movsb
and
addr16
jno
add
mov
and
insb
mov
addr16
or
xlat
insb
test
pusha
outsb
es
addr16
mov
and
xlat
cmc
imul
xchg
in
mov
jns
shlb
xchg
sbb
and
xchg
shll
shlb
gs
xchg
insb
xor
lds
sbb
pop
insb
cltd
int
mov
insb
dec
gs
or
or
bound
repnz
insb
cltd
int
jp
or
insb
popa
scas
movsl
pusha
inc
fisubs
sbb
fildll
xchg
sbb
test
into
imul
fidivl
xor
sarb
aaa
rcl
sbb
cltd
imul
addr16
pop
imulb
outsl
and
insl
sbb
or
repz
and
push
mov
leave
add
mov
testl
sbb
lret
add
popf
shlb
insl
addr16
mov
insl
mov
push
lea
or
inc
addr16
clc
xor
add
std
pusha
adc
test
pushf
sbb
cmp
clc
pop
and
lcall
add
sub
arpl
adc
inc
adc
imul
jns
arpl
iret
and
addr16
mov
xchg
rclb
inc
movsb
loop
mov
adc
mov
adc
add
xchg
jecxz
rol
imul
pop
mov
jno
or
adc
or
adc
pop
arpl
push
jle
sub
arpl
ds
movsl
sbb
pop
inc
adc
dec
pop
imul
mov
notb
repnz
std
sbb
jle
or
gs
mov
adc
push
pop
icebp
jle
clc
xor
lahf
jnp
imul
mov
jno
add
mov
addr16
leave
mov
iret
cmc
imul
addr16
bound
mov
addr16
arpl
outsb
or
nop
push
push
aad
cwtl
pop
mov
jle
inc
and
repnz
out
popa
fstpl
ret
xchg
mov
jno
mov
lds
insl
mov
add
mov
insl
rolb
popa
cmp
mov
mov
pop
notl
in
sbb
or
sub
sti
gs
mov
and
cmpsl
std
lret
ja
sbb
daa
scas
adc
ficoms
adc
push
dec
mov
lahf
fildll
adc
dec
inc
push
adc
jno
aaa
adcb
xchg
pop
add
adc
out
fcoml
lahf
jle
or
and
mov
repz
sbb
inc
pop
sahf
mov
push
mov
stc
repz
mov
not
push
adc
rcll
cmp
and
push
mov
inc
bound
loop
test
loop
out
in
mov
mov
or
repnz
push
adc
adc
mov
das
push
jecxz
insl
out
jecxz
sbb
aad
xor
sbb
sbb
add
push
shlb
adc
xchg
fsubrl
sahf
cmp
xchg
fsubrl
cmp
inc
jl
cmp
inc
bound
jmp
sub
fs
adc
pop
stos
mov
jecxz
push
inc
push
adc
cmpsb
lcall
cmp
gs
out
mov
sbb
int
addr16
cmp
cmpsl
push
arpl
add
pop
mov
gs
xchg
movsl
outsl
jmp
mov
icebp
sbb
or
add
movsl
arpl
fidivrs
push
in
inc
addr16
jno
sbb
push
or
addr16
hlt
cmp
push
lcallw
daa
and
sarl
and
arpl
mov
push
push
lds
rsqrtps
or
inc
pop
and
fwait
bound
mov
sbb
sub
or
shll
lods
addr16
mov
mov
sbb
or
imul
addr16
icebp
or
cmp
addr16
jno
insl
in
mov
int
cli
pop
xor
mov
pusha
add
sub
adc
push
mov
out
outsl
push
insl
and
inc
test
cmp
addr16
and
pop
aaa
insl
pop
or
push
insl
or
outsb
leave
rorl
adc
or
addr16
imul
call
mov
push
je
mov
pusha
mov
or
sbb
jno
cmpsl
movntps
add
cmp
mov
frstor
pop
addr16
jno
cmpsb
fistpll
mov
or
addr16
std
sbb
adc
and
sbb
sbb
add
adc
jg
addr16
repz
fsts
add
ret
pusha
or
mov
push
addr16
adc
lcall
jno
insl
inc
pop
leave
scas
cmove
pop
mov
leave
daa
push
and
inc
push
or
inc
cmove
fbld
outsb
add
testb
es
add
add
xchg
adc
fisubrl
jno
add
es
addr16
add
je
xor
jns
adc
push
out
sbb
xchg
sbb
addr16
lahf
mov
adc
or
mov
pop
rorb
push
imul
addr16
pushf
bound
scas
mov
imul
push
insl
mov
jmp
addr16
pop
mov
mov
icebp
pop
mov
aas
and
lods
pop
and
in
dec
or
fisttpl
or
fildl
adc
addr16
pop
mov
cwtl
addr16
and
mov
pushf
sahf
addr16
scas
inc
icebp
adc
mov
pop
sbb
jecxz
pop
inc
push
add
gs
and
push
fwait
arpl
sub
test
fnsave
mov
sub
add
test
jle
sbb
call
or
popf
or
imul
cmc
dec
jae
push
test
cmpsb
imul
addr16
and
mov
lea
sub
lea
adc
les
arpl
int
add
int
mov
and
push
xchg
lods
push
sub
addr16
push
or
out
sbb
or
xor
test
pushf
out
insl
lods
in
leave
les
arpl
fsubl
dec
fisttpll
mov
and
addr16
outsl
push
repnz
inc
and
jno
lret
cmp
sub
repz
imul
xchg
mov
or
jno
and
sbb
adc
int
push
and
rcll
mov
imul
cs
popf
push
sbb
jp
pop
mov
inc
stos
dec
imull
xchg
or
and
or
mov
notb
add
ss
adc
mov
outsl
sbb
pusha
push
addr16
mov
adc
add
mov
inc
lods
dec
xchg
or
and
popf
popf
bound
or
rclw
cmp
addr16
popa
das
lahf
sbb
push
lahf
mov
mov
cmp
sbb
lods
jno
pop
push
sub
add
loopew
jo
push
loope
rcrb
mov
imul
push
out
mov
test
pop
test
movsb
pop
xchg
sahf
test
sahf
rcrb
sahf
jnp
std
fisubrs
fisubrs
mov
sbb
dec
pop
xchg
jp
or
incl
mov
and
imul
dec
xchg
sbb
jp
or
mov
imul
pop
fidivs
imul
pop
adc
jae
push
add
add
sub
addr16
leave
mov
lea
adc
jo
adc
jmp
lock
fcompl
and
add
xor
jle
repnz
adc
jns
outsb
notl
test
fisubs
mov
outsl
fs
sbb
pop
filds
lret
or
inc
sbb
hlt
xchg
cmp
mov
fs
data16
push
dec
push
stos
push
in
fs
lods
lahf
pop
mov
xor
xor
xchg
les
or
xor
invlpg
lahf
lds
mov
pop
fimuls
pop
wrmsr
sub
sbb
aam
pcmpeqw
push
add
dec
jb
add
movsb
bound
popf
call
add
adc
outsl
shrw
dec
arpl
loopne
mov
sbb
sbb
lahf
test
add
test
lret
cmp
jo
out
push
mov
pushf
and
out
sahf
adc
lss
dec
insb
orl
push
cmp
addr16
push
aad
jo
sub
addr16
mov
xchg
mov
imul
xchg
pop
push
sub
jne
adc
iret
pop
gs
push
shlb
adc
into
or
sbb
jle
ds
addr16
inc
das
or
mov
movsl
or
addr16
mov
add
push
icebp
data16
std
data16
and
mov
adc
inc
sub
ds
addr16
lahf
and
mov
mov
int
cmp
inc
and
mov
mov
cmp
mulb
mov
sbb
test
bound
repnz
dec
gs
cmp
stc
iret
gs
enter
arpl
push
movsb
outsl
imul
push
jno
addr16
push
fmulp
gs
push
std
gs
cwtl
pusha
sbb
addr16
adc
dec
jle
push
mov
push
or
pop
stos
ss
fdiv
or
pushf
fcoms
push
outsb
leave
shlb
mov
sbb
fisubs
sbb
lret
decb
xchg
lods
push
out
shll
clc
stc
iret
gs
mov
ficoml
addr16
test
pushf
push
shll
push
mov
inc
push
or
cltd
mov
inc
ret
bound
mov
int
jp
add
push
gs
fldenv
pop
or
push
add
inc
or
cmp
loopne
notb
xlat
jecxz
and
cmc
adc
orb
das
movsl
xorl
jo
mov
repz
or
imul
mov
xchg
or
or
mov
out
pop
or
movsb
mov
call
mov
sbb
adc
les
cmp
sub
mov
sbb
ljmp
mov
push
cmp
addr16
push
pop
or
push
or
pop
pop
push
addr16
jno
clc
movsb
adc
fcmovbe
dec
adc
xchg
push
sarl
shlb
push
pop
addr16
lret
or
cmpsl
sbb
add
out
fcmovb
and
or
mov
dec
push
or
fcmovb
out
fsubl
push
push
xchg
cmpsl
add
add
dec
movsl
mov
addr16
rclb
adc
mov
negb
into
push
sub
scas
or
push
fcomip
imull
mov
fcoms
push
icebp
lock
outsb
outsl
scas
mov
out
in
inc
xchg
mov
inc
call
bound
xchg
and
and
movsb
and
mov
insl
imul
outsb
pop
imulb
mov
jp
mov
aam
push
jo
fcompl
and
push
btcl
adc
mov
mov
test
inc
dec
jo
xchg
aas
push
cwtl
xlat
das
or
ds
push
sub
or
adc
ja
add
leave
xchg
adc
inc
test
or
mov
fisubrl
push
iret
mov
mov
jbe
push
arpl
jmp
jb
xchg
and
inc
or
mov
std
daa
imul
fdivl
jge
jo
inc
bound
jge
cmp
mov
mov
dec
cli
test
fisubl
cli
pop
cmp
test
bound
pop
sbb
or
in
pop
mov
mov
sbb
or
dec
mov
inc
push
pop
sub
or
adc
cmp
dec
adc
mov
arpl
imul
mov
mov
fmull
addr16
jbe
lcall
dec
mov
bound
xchg
lret
adc
add
or
adc
lret
fildl
adc
mov
inc
push
push
jo
data16
xchg
and
add
rcrb
daa
add
adc
in
mov
add
jno
bound
sbb
and
roll
push
dec
bound
mov
mov
mov
and
dec
or
lret
fs
and
and
addr16
iret
aaa
add
mov
jno
push
and
adc
xor
sbb
std
or
mov
pushf
insl
lcall
push
lods
xor
lret
or
hlt
mov
sahf
enter
cmp
ret
mov
mov
data16
ret
fsubl
cmpb
jns
mov
dec
mov
arpl
test
push
iret
out
or
mov
push
pop
popa
scas
sbb
pusha
or
addr16
pop
jmp
cmpsb
lock
and
pop
sbb
and
pop
push
pusha
or
addr16
lock
mov
hlt
cmp
mov
addr16
push
lods
or
cmpsb
iret
pop
or
pop
dec
pop
add
add
jecxz
sbb
add
or
sub
repnz
inc
or
clc
inc
out
adc
inc
cmp
or
pop
or
in
mov
frstor
data16
or
push
and
lcall
mov
push
sbb
lahf
push
lcall
or
mov
inc
loope
mov
add
insl
push
and
inc
mov
loopne
test
adc
outsl
sub
pop
adc
insl
hlt
imul
out
or
mov
pop
pop
or
fs
mov
or
addr16
ret
dec
pop
or
loopew
xchg
jbe
or
lds
or
add
push
jg
or
inc
rep
lds
add
fsub
in
fnsave
lods
fwait
xchg
dec
push
movsl
fisubs
dec
out
or
cmp
sbb
push
insl
jno
pop
outsl
push
or
addr16
mov
push
lcall
add
add
add
or
mov
mov
push
jno
push
add
sbb
ret
adc
cli
popa
repz
not
jle
lcall
ret
add
std
aaa
sub
cmp
loope
mov
push
inc
leave
adc
out
xchg
mov
push
fs
cmp
pop
pop
andl
out
xchg
cmp
ds
xchg
lret
jno
outsb
in
out
mov
pop
outsb
test
inc
ficomps
cmp
fwait
mov
or
sub
mov
cmpsb
pop
adc
mov
jp
lret
pop
and
out
faddp
pop
jp
pop
sbb
sbb
sbb
testb
jecxz
mov
ret
mov
invd
or
inc
out
mov
aad
inc
cmp
orl
popa
adc
adc
cmpsl
mov
jo
sbb
cmpsl
pop
adc
or
bnd
test
jno
imul
dec
scas
daa
sub
outsb
push
or
adc
sbb
or
push
mov
push
mov
in
add
in
push
mov
mov
push
sub
popa
std
push
inc
mov
fmull
bound
or
arpl
pop
lea
cmp
sbb
pop
sub
adc
popf
dec
adc
fstl
push
inc
mov
imul
sbb
pop
fcompl
xchg
and
adc
mov
fcompl
sbb
imul
adc
or
mov
imul
sbb
xchg
fcompl
pop
fnstsw
arpl
adc
cmp
addr16
dec
push
jo
mov
scas
fldt
dec
mov
and
or
pusha
fldt
movsb
push
push
fwait
addr16
out
push
movsb
and
and
mov
loope
sbb
sbb
in
out
arpl
or
and
and
push
pop
insl
pusha
cmpsl
push
adc
loopne
sbb
arpl
adc
in
jno
in
stos
div
add
loopne
adc
push
cmp
fcompl
movsb
mov
repz
cmp
mov
addr16
push
add
or
push
cmp
or
push
mov
stos
or
push
push
push
addr16
push
push
arpl
imul
cmc
xchg
aaa
addr16
sbb
push
sbb
pop
sub
stos
loopne
loopne
scas
mull
mov
mov
popa
addr16
fwait
and
adc
cs
mov
das
out
fucomp
movsb
fs
pop
or
outsb
push
popf
stos
lahf
les
std
mov
pop
pshufw
roll
std
adc
gs
ret
mov
lahf
les
std
or
mov
mov
inc
fisttpll
jb
mov
aaa
mov
inc
pop
xor
stos
pop
jb
mov
mov
roll
jnp
adc
inc
inc
jnp
adc
inc
mov
or
popf
movsb
sbb
fnsave
or
shlb
sahf
inc
ret
sub
arpl
sbb
push
dec
aaa
insb
xchg
mov
sbb
mov
mov
push
adc
inc
or
mov
in
sbb
xor
pop
push
sbb
mov
adc
pop
leave
dec
testb
mov
xchg
sahf
push
push
imul
dec
adc
and
adc
add
sbb
insl
enter
pop
std
sbb
movb
push
lret
rol
push
cltd
lahf
pop
xor
xor
cmpsl
adc
leave
or
adc
sub
sub
xchg
xor
push
fnstenv
mov
dec
ljmp
and
pop
push
cmp
cmp
push
mov
adc
loopne
cltd
pushf
stos
mov
add
or
mov
icebp
imulb
int
jo
movsb
sbb
jo
mov
mov
cltd
lahf
addr16
leave
cld
jl
add
push
mov
xchg
jg
lahf
leave
arpl
jb
mov
addr16
sbb
push
bound
inc
aad
mov
je
nop
mov
cmp
out
mov
xor
adc
dec
mov
pop
stos
lahf
mov
outsl
mov
and
mov
fiadds
mov
sti
lods
xchg
jle
or
mov
push
xor
adc
mov
xor
addr16
cmpsl
mov
add
repz
cmp
cmp
cmpb
lret
add
fnstsw
mov
ret
or
mov
sbb
insb
pushf
arpl
inc
add
push
pop
add
pusha
adc
fnstcw
push
inc
outsl
or
sbbl
or
das
addr16
les
mov
sbb
test
mov
and
or
addr16
shrl
add
jp
ss
add
dec
push
jmp
cmpsl
xor
repnz
clc
outsb
xchg
mov
test
mov
push
inc
fisttpl
sbb
inc
pushf
or
jo
sti
sarl
lret
or
lahf
jo
int
sti
lods
xchg
cmp
add
leave
cmc
mov
bound
roll
or
in
jnp
mov
sub
fiadds
add
mov
inc
call
mov
addr16
inc
xor
or
adc
pop
outsl
orb
loope
mov
cmp
jbe
pop
out
imul
std
push
rol
mov
sub
clc
loope
add
mov
pop
inc
mov
or
pushl
adc
push
aaa
add
stos
subl
icebp
dec
pop
push
ds
movsb
push
mov
pop
cli
clc
cs
jno
or
rcll
test
inc
or
and
movsb
dec
sbb
push
mov
outsl
mov
in
jno
in
sub
jo
add
lahf
stos
mov
pop
mov
dec
pop
mov
das
sub
or
mov
pop
push
mov
jno
cmp
dec
pop
mov
notb
fcmovb
jno
mov
push
mov
out
jno
addr16
and
cmp
add
adc
jg
add
mov
jnp
inc
xorb
adc
pop
scas
jno
cld
pusha
ficoms
mov
adc
sub
xchg
adc
mov
cmp
mov
or
inc
sbb
inc
mov
cmpsl
add
out
insl
mov
movsb
or
jnp
shl
mov
repz
xor
mov
add
mov
jle
jb
xchg
inc
or
xor
push
mov
sbb
fwait
push
xchg
adc
imul
inc
pop
mov
and
movsb
addr16
inc
aaa
fs
and
out
sbb
jle
adc
lret
jo
jae
imul
fbld
inc
movsb
mov
call
push
shlb
mov
and
push
adc
or
pop
push
push
in
and
push
pop
data16
shlb
aaa
mov
or
pop
lcall
dec
imul
xor
xor
add
in
and
fidivrs
stos
adc
ficoms
das
arpl
ret
mov
test
hlt
and
and
adc
addr16
lods
mov
xor
imul
and
and
dec
je
imul
mov
notb
adc
in
pop
addr16
adc
addr16
mov
lock
fdivp
jecxz
and
push
mov
fstl
addr16
push
clc
mov
fbstp
sbb
movsl
fstl
addr16
adcb
add
sub
add
inc
inc
fisttpl
ret
and
cltd
int
sti
clc
xchg
test
mov
dec
ficomps
popf
andl
mov
shrb
inc
out
adc
nop
outsl
or
mov
add
lcall
sbb
js
clc
add
pop
insl
cmpsl
or
incl
lds
mov
and
push
fs
sub
xor
xlat
or
mov
jns
testb
bound
daa
pop
mov
data16
sub
ret
hlt
add
xchg
and
mov
xchg
movsb
inc
sub
sahf
bound
ret
insl
ret
mov
add
add
mulb
ret
call
shlb
add
data16
pusha
mov
xor
add
fidivl
sub
pusha
cmc
lahf
push
addr16
bound
ds
addr16
xchg
pop
maxps
scas
add
pop
add
inc
and
out
lar
shl
push
adc
sbb
push
jo
je
or
addr16
mov
lea
cli
push
jae
lds
inc
mov
arpl
mov
push
dec
pusha
sbb
xchg
add
pop
mov
push
insl
pop
insl
inc
xchg
push
inc
loop
mov
push
pop
sub
out
addr16
push
xchg
or
xchg
faddl
xchg
loope
pop
adc
rorl
pop
cltd
sbb
rcrl
xor
adc
fs
data16
sbb
sub
addr16
or
pop
pop
pop
roll
jno
leave
cltd
push
mov
out
lahf
lock
push
mov
push
mov
int
sti
clc
bound
test
pusha
jo
sahf
addr16
adc
mov
mov
addr16
pop
push
push
fisubs
bound
push
addr16
sbb
mov
bound
testl
inc
mov
mov
je
mov
push
ja
mov
sbb
push
mov
mov
push
mov
nop
cltd
fdivs
out
mov
push
fs
nop
scas
fldenv
fisttps
arpl
add
lods
pop
sbb
mov
mov
mov
icebp
sub
mov
outsb
jecxz
jb
sbb
xor
push
test
cmpsb
mov
outsb
popf
sbb
or
lret
pop
push
shl
outsl
sti
add
inc
adc
cmovg
mov
sbb
dec
cmp
movsl
add
rdmsr
pop
mov
inc
push
mov
adc
adc
movzwl
dec
xchg
cwtl
adc
xchg
jbe
outsl
dec
push
mov
iret
cmpb
imul
push
push
stos
cli
pop
jne
mov
iret
cmpb
fisubl
jecxz
mov
into
mov
or
mov
inc
cli
xlat
stc
cmc
jno
xlat
ss
shl
fsubl
mov
pop
or
lahf
jno
shll
fisubl
sbb
addr16
jns
mov
scas
dec
es
add
push
push
add
and
in
and
sbb
sbb
mov
arpl
ds
pop
jo
add
mov
addr16
xchg
push
cmp
pop
aad
sub
pushf
push
jbe
repnz
sbb
and
or
lods
jno
pop
packsswb
insl
lods
push
and
adc
ss
nop
sub
sbb
add
mov
pop
mov
sbb
aas
sbb
aad
xor
test
sub
push
lods
xchg
bound
sar
mov
xchg
fisubrl
dec
jno
bound
and
push
iret
or
mov
pop
loopne
clc
sbb
in
fs
pop
inc
fs
mov
cmp
fs
inc
sbb
ljmp
pop
das
mov
inc
mov
addr16
std
sub
or
and
testb
setge
mov
push
adc
mov
addr16
clc
mov
and
push
adc
mov
cltd
int
jp
sbb
aam
jmp
adc
mov
rcll
popf
sub
addr16
jno
outsb
insl
xor
pushf
lds
jo
pop
loope
jo
or
jo
push
mov
repz
mov
push
cmp
addr16
mov
adc
das
addr16
in
and
adc
fs
mov
dec
std
inc
loopne
lcall
sub
jnp
sbb
data16
fcmovb
xlat
or
jno
adc
movsb
or
int
sti
lods
mov
mov
jns
mov
fwait
je
mov
mov
mov
test
sbb
movsl
cmp
movsb
fsubl
inc
sub
mov
mov
mov
sahf
aaa
out
movsl
xor
xor
and
jecxz
fdivp
aam
lret
add
fildll
mov
dec
mov
cwtl
das
addr16
lds
pop
insl
cmp
testb
scas
ret
jp
dec
scas
fists
jo
dec
ret
je
adc
and
out
pop
roll
out
ss
fwait
je
or
fiaddl
or
es
fiaddl
mov
dec
ret
cmp
movsl
leave
cmc
inc
lock
cs
jecxz
pop
jno
adc
mov
scas
in
outsl
or
adc
and
mov
pop
scas
push
cmpsb
inc
push
push
data16
out
mov
push
mov
xor
arpl
loop
sahf
mull
jp
iret
adc
cwtl
sub
loope
jp
clc
jno
divl
adc
xchg
ds
pop
xchg
fsubs
add
inc
jno
mov
xchg
and
repz
dec
jne
inc
push
pop
mov
push
adc
dec
out
mov
mov
mov
pushf
and
inc
xlat
pop
add
mov
iret
and
push
mov
sbb
xchg
add
cli
popa
xchg
add
push
cmp
stos
mov
rcrl
mov
pop
insl
lds
sbb
add
mov
push
stos
adc
add
and
or
test
sbb
cmp
test
xor
test
pop
and
test
sbb
dec
mov
ss
dec
cmp
test
imul
shrb
cmpb
movsb
imul
push
push
sbb
pushf
ljmp
sub
imul
imulb
movsb
push
dec
adc
stos
stc
mov
arpl
lahf
jmp
loop
inc
popa
or
sysret
or
test
in
jns
add
sahf
sbb
arpl
imul
pop
jno
mov
inc
cmp
push
mov
xchg
out
in
push
jg
insb
push
stc
imul
int3
jno
lods
xor
mov
xchg
aas
pop
xchg
roll
jns
add
rcrb
clc
or
cmp
inc
bound
pop
dec
scas
mov
add
out
pusha
imul
push
sbb
mov
mov
es
sarl
sbb
addr16
and
fcomp
bound
sbb
sub
mov
ret
call
arpl
jg
fwait
mov
lock
mov
and
mov
push
push
adc
nop
push
dec
sub
pusha
mov
xlat
rcrl
addr16
iret
repz
mov
sahf
xor
xlat
aad
popf
pop
pusha
mov
pusha
push
mov
das
outsl
inc
jno
clc
push
sub
mov
xor
je
inc
popf
movsb
mov
and
mov
insl
adc
pop
push
mov
jae
pop
jno
pop
arpl
adc
loop
repnz
push
xchg
push
aaa
sbb
dec
fdivl
or
inc
sbb
and
shlb
clc
mov
mov
mov
mov
adc
adc
sarb
in
sub
push
pop
ret
mov
xor
mov
mov
in
pop
push
pop
sahf
cmp
mov
neg
mov
lcall
out
addr16
cwtl
push
scas
fdivs
stos
xchg
adc
ret
mov
push
push
sbb
js
cli
mov
push
cwtl
fnsave
sbb
pop
in
mov
cmp
mov
push
pop
imul
inc
mov
jge
lret
pop
adc
fistl
mov
xchg
pop
jecxz
mov
loope
addr16
cmpsl
mov
mov
adc
inc
sbbb
pop
dec
lcall
mov
xor
mov
addr16
mov
movsb
push
sbb
ja
and
fs
bound
scas
sub
push
ljmp
sbb
xor
adc
test
pop
or
pop
scas
adc
inc
add
insl
push
fwait
push
pusha
sbb
fwait
and
jo
imul
addr16
inc
push
adc
dec
fldt
push
std
imul
ret
mov
pop
stos
hlt
cmp
imulb
addr16
and
mov
push
mov
mov
dec
mov
pushf
pusha
and
sbb
push
push
insl
pop
xor
cmp
lock
and
push
mov
insl
adc
pusha
sarb
mov
add
mov
mov
or
sbb
icebp
sbb
gs
adc
repz
enter
fnstenv
inc
adc
adc
inc
push
popa
scas
loopne
adc
insl
scas
ja
int
push
adc
mov
xchg
loop
rol
push
cmpl
xor
mov
lahf
xor
and
mov
repz
iret
arpl
jno
adc
sbb
fisubs
xchg
cmp
roll
addr16
jno
insl
xor
push
addr16
and
ret
cmp
das
imul
into
mov
inc
fadds
movsl
pop
addr16
jnp
fsubl
clc
insl
pop
insl
cmp
push
loope
mov
inc
and
and
mov
insl
pop
pop
sbb
adc
or
push
jno
dec
ja
insl
outsl
pop
insl
and
addr16
pushw
push
xor
in
addr16
ficomps
mov
and
addr16
add
outsb
mov
pop
push
pusha
mov
sarb
push
mov
pop
dec
bound
out
fildll
mov
push
pop
pusha
or
addr16
mov
jne
cmc
jbe
fs
clc
or
pop
cmc
mov
testl
ja
adc
mov
xlat
jge
lds
insl
and
ret
cli
insl
out
mov
cmp
lcall
pop
push
inc
daa
leave
insl
shlb
adc
mov
pop
scas
and
sub
dec
sbb
sbb
popf
scas
out
popf
fists
push
std
or
lds
sub
iret
jno
or
add
in
sbbb
cmp
adc
pop
mov
sub
shrb
adc
mov
shll
xchg
push
aam
mov
push
sbb
movsb
push
sub
adc
sub
adc
sbb
cmp
sbb
push
xchg
pop
arpl
sbb
idivb
mov
sub
and
jo
sub
pop
or
xchg
xchg
mov
enter
pop
xchg
insl
inc
test
jo
mov
mov
mov
or
cmpsl
mov
cmp
inc
sbb
rol
mov
les
mov
out
gs
iret
inc
mov
mov
jns
addr16
in
adc
imul
jo
add
cmp
jmp
lahf
pop
ja
test
daa
mov
dec
mov
or
das
es
cmpsb
jne
sbb
push
pushw
sbb
dec
cmovbe
sub
mov
pushf
adc
sbb
lods
lea
push
adc
xlat
mov
test
mov
mov
repz
mov
jmp
sbb
push
sbb
sbb
adc
sub
cwtl
sbb
sub
xor
lods
dec
mov
lods
jmp
imul
push
in
pop
push
or
add
sub
ds
jo
stos
int
sub
mov
sub
or
into
lods
or
mov
jo
mov
and
or
or
fsts
jns
lret
xor
mov
push
dec
adc
mov
mov
icebp
ss
sub
sbb
and
ljmp
xchg
leave
inc
lock
inc
pop
mov
mov
out
icebp
and
dec
popf
bound
scas
movsb
sub
sbb
out
insl
sub
cmp
sbb
out
imul
insl
and
mov
cmp
push
aad
push
and
mov
addr16
fsubp
bndstx
sbb
adc
mov
mov
int
fildl
cld
sbb
adc
adc
loopne
and
push
xor
dec
jmp
int
jecxz
test
sbb
decb
push
in
add
sbb
pxor
mov
sbb
push
mov
movlps
in
imul
push
imul
inc
cld
arpl
dec
cmc
int
mov
movups
xchg
enter
out
fsubl
movsb
movsl
bnd
fucomp
and
mov
cmpsl
or
pop
mov
aad
shrl
nop
pop
or
mov
arpl
nop
dec
and
mov
xor
shlb
gs
adc
sbb
jno
sbb
mov
popf
aad
push
pop
lods
pop
jmp
bound
and
scas
sbb
adc
or
push
add
out
push
pop
mov
bound
imul
loope
mov
sbb
popf
mov
mov
inc
clc
cmp
or
js
pop
and
dec
xchg
push
sahf
nop
inc
mov
or
mov
int
inc
in
gs
test
inc
and
dec
push
ljmp
addr16
cwtl
imul
data16
xor
ret
call
data16
test
push
add
cmp
cbtw
lods
add
scas
dec
push
adc
fldcw
test
movsb
out
or
mov
push
mov
dec
cli
jl
es
mov
jecxz
mov
add
mov
in
insb
add
adc
cmpsb
push
sbb
sub
movsl
sub
sbb
add
pop
mov
hlt
push
data16
sbb
sub
ficompl
sti
pushf
inc
sub
movsl
pop
nop
mov
mov
sbb
pushaw
movsb
loop
and
mov
dec
and
mov
push
aaa
inc
and
pop
pop
sbb
inc
sti
cmp
pop
or
jo
repnz
adc
and
ss
mov
add
imul
xchg
cmpsl
call
xchg
mov
sbb
scas
xor
adc
mov
mov
mov
dec
mov
jmp
mov
mov
rcrb
and
sub
fsubl
frstors
mov
sbb
in
inc
add
arpl
movzwl
rclb
lret
lret
sbb
popf
sub
cltd
pop
mov
push
adc
inc
or
cmp
fsts
or
mov
push
hlt
push
outsl
fsubrs
int3
dec
mov
pop
pmullw
mov
push
adc
lea
gs
aam
jno
mov
push
push
rcrb
pop
push
xchg
test
jmp
clc
das
imul
rorl
loop
mov
xchg
out
pop
jle
xor
insb
in
and
call
lock
sbb
insl
mov
adc
fmuls
loopne
popa
jecxz
imul
sbb
push
gs
adc
xchg
fisubrl
ljmp
mov
fisubs
roll
popf
mov
fisubl
xchg
out
lods
pop
push
imul
sbb
jmp
faddl
inc
inc
pop
popf
mov
push
xchg
and
mov
popf
pop
stos
push
fs
loope
add
outsl
add
adcl
mov
test
in
pop
and
fs
mov
xchg
add
dec
mov
push
and
aad
xor
subl
or
movsl
out
adc
mov
or
loope
or
xor
fimuls
mov
ret
sbb
mov
sub
shll
xchg
push
add
pop
or
ficompl
gs
push
jecxz
data16
in
nopl
in
push
lea
test
mov
data16
or
cli
and
pushf
cli
push
in
out
fsub
sub
push
mov
pop
fidivl
dec
add
adc
in
pop
sub
ret
arpl
mov
mov
xchg
sub
shlb
cs
cltd
sbb
int
mov
rcrl
and
jmp
and
add
int
mov
mov
mov
jl
inc
rcll
or
fadd
mov
xor
adc
fstpl
inc
or
lcall
push
test
and
add
jo
push
test
push
fistps
movsl
std
mov
bound
cmp
js
and
xor
mov
cli
mov
pushf
sub
mov
shl
pushf
data16
inc
jno
movsl
mov
dec
adc
popf
jnp
cmp
sbb
out
pushf
das
and
adc
pop
lock
iret
or
cmpsb
outsb
fistl
movsl
mov
insl
mov
cld
outsl
jno
and
or
mov
lods
popa
adc
lahf
push
or
out
cmp
and
inc
push
mov
ret
dec
icebp
mov
dec
mov
bound
pop
stos
arpl
clc
call
pop
inc
push
data16
mov
mov
jle
push
jmp
jg
inc
or
rorb
data16
insb
nop
pmaxsw
xchg
outsl
shrb
push
push
sbb
push
pop
jmp
inc
push
mov
jnp
mov
sbb
pop
xchg
fwait
cmpsb
adc
pop
nop
adc
jo
xlat
insl
scas
inc
add
out
fdivl
push
outsl
and
insl
xlat
test
lods
sub
sahf
movsl
xchg
popf
shlb
aad
mov
add
dec
sbb
adcb
stos
xchg
in
in
cltd
lret
sbb
mov
mov
mov
cmp
mov
mov
sti
dec
lea
push
push
jno
sbb
leave
ret
or
mov
pop
sbb
push
push
mov
xor
insb
jecxz
pop
loop
in
arpl
push
or
sbb
insl
mov
and
pop
adc
decl
push
push
out
ljmp
data16
or
fnsave
or
fnsave
in
rclb
push
in
cli
daa
and
pop
notb
adc
adc
pop
pop
adc
cmp
cmc
outsb
mov
xor
fs
xor
pop
fs
pop
jp
scas
cmpsb
mov
sarl
aaa
fimull
adc
adc
in
sbb
adc
sbb
arpl
pop
bnd
add
frstpm(287
cmp
jb
bound
or
pushfw
jecxz
xor
push
js
test
icebp
imul
imul
arpl
in
fildll
sbb
sbb
int
jecxz
test
in
mov
sub
rclw
jno
xor
pushf
movsb
adc
cmpsl
lret
inc
stos
add
adc
sbb
out
cs
fidivl
add
mov
test
faddl
shlb
sbb
and
or
sahf
aas
insb
pop
in
js
and
jne
mov
outsl
jns
imul
or
push
out
icebp
push
in
outsb
fimull
imul
cmp
push
in
or
movsb
push
bnd
dec
or
push
mov
js,pt
mov
sub
cld
aam
cmp
sbb
sahf
jmp
mov
cmpb
add
and
insl
pop
loope
sbb
sbb
fstl
inc
pop
clc
imul
sbb
cmp
sahf
addl
sbb
push
push
push
jno
add
adc
jo
mov
add
cltd
mov
sbb
push
in
mov
push
dec
mov
test
fisubs
les
addr16
add
scas
sub
imul
pop
add
mov
fnstcw
rolb
push
imul
mov
dec
or
aam
fiadds
add
sti
mov
insl
loop
pop
and
in
push
pop
scas
ljmp
and
adc
cmp
sbb
add
int
add
add
test
pop
les
and
test
inc
fisubrs
icebp
aaa
and
push
add
cmp
add
and
mov
inc
xchg
and
dec
mov
out
fidivrs
mov
mov
lods
sub
icebp
and
mov
cmp
popf
mov
jmp
cmp
jns
xchg
ljmp
xchg
push
lods
btc
cmpsb
or
popf
adc
subps
test
add
sbb
pop
add
stos
mov
inc
cli
fs
cmp
jbe
outsl
mov
in
mov
int3
push
mov
inc
clc
mov
paddw
mov
in
imul
in
sbb
mov
adcl
sbb
sbb
sub
pop
ljmp
fisttpl
cwtl
sbb
mov
add
mov
in
sbb
mov
daa
adc
sbb
mov
mov
rcrl
andb
popf
mov
add
loop
adc
movsl
push
adc
add
arpl
daa
adc
pop
adc
add
add
pop
cli
adc
adc
mov
adc
sbb
jno
lret
gs
pop
sbb
fsubl
add
pop
or
inc
shll
stos
ljmp
insl
movsl
mov
inc
and
nop
xor
or
cmp
fs
in
lods
cmp
insb
xorb
cmp
in
or
nop
mov
icebp
mov
inc
and
mov
mov
mov
push
cli
mov
ss
gs
lods
mov
xchg
inc
mov
icebp
mov
lret
lea
out
mov
adc
and
lcall
mov
ret
sbb
scas
loop
icebp
add
mov
pop
arpl
shlb
outsb
fisubl
push
and
gs
push
xchg
xor
ret
mov
aad
push
lods
mov
cmp
and
aam
mov
pop
pop
sub
ja
cltd
sbb
popf
push
or
jnp
push
adc
movsb
out
pop
or
xchg
test
and
sbb
lcall
fucomip
cmp
push
mov
add
ljmp
mov
movsb
push
repnz
insb
notb
jecxz
or
test
lock
mov
paddusb
xchg
test
mov
sbb
in
sub
mov
pop
xchg
ds
jne
test
fsubr
movsb
in
add
jmp
push
push
loope
imul
imul
mov
mov
xor
out
fbstp
lds
mov
inc
dec
sbb
jecxz
sbb
sbb
imul
imul
xor
push
nop
stos
out
outsl
fwait
lret
out
pushf
push
arpl
mov
xchg
daa
ds
lret
adc
jno
popf
out
shl
inc
adc
pop
movl
aad
in
insl
pop
xchg
push
pop
icebp
add
shl
btl
or
mov
bound
xchg
jle
push
sahf
dec
cmp
inc
inc
cmp
popw
lcall
sbb
popa
cmp
push
sahf
or
mov
sbb
push
mov
xchg
jne
insl
aam
and
inc
or
adc
sub
fidivl
fwait
lock
add
mov
dec
push
cvtps2pd
fsubrp
jle
je
sbb
pop
imul
outsl
cwtl
jo
stc
mov
mov
inc
xchg
mov
rcrl
sahf
mov
and
adc
insl
movsl
and
fildl
sahf
loopne
xor
adc
jo
xchg
in
rcll
mov
std
sbb
mov
outsl
or
or
xor
fwait
xchg
xchg
cli
bound
add
sub
adc
cmp
loopne
mov
and
sbb
scas
psubsw
mov
adc
and
imul
lcall
pop
adc
rclb
sbb
icebp
jmp
inc
ds
push
shll
inc
dec
sbb
adc
lds
insl
std
loopne
cmp
dec
call
data16
xor
out
repnz
mov
inc
dec
sbb
push
or
pop
data16
xchg
sbb
or
xchg
sub
lcall
imul
push
sbb
loopne
sbb
adc
and
dec
push
out
imul
sub
cmp
add
xchg
subb
mov
push
sub
xchg
icebp
pushf
dec
xchg
and
or
sbb
test
out
fs
ljmpw
inc
push
movsl
popf
pop
faddl
cmp
push
arpl
and
cmp
inc
loop
ror
inc
stos
adc
lret
imul
in
in
and
rorl
and
push
sahf
jp
imul
push
imul
ja
mov
xchg
push
add
adc
push
and
mov
cmp
data16
insb
xchg
add
nop
and
sarb
ljmp
and
push
xchg
cs
or
mov
xchg
rol
sbb
add
call
subb
pusha
mov
sub
inc
push
iret
adc
lret
jo
or
in
push
xchg
mov
lods
mov
inc
pop
movsl
loop
daa
insl
mov
mov
xor
dec
xor
lock
sub
mov
aas
imull
xchg
push
pop
leave
lods
sub
sbb
mov
push
and
or
jns
dec
mov
adc
popf
in
push
add
lahf
dec
adc
or
andl
andl
lea
xchg
addr16
in
jae
mov
pop
mov
xor
punpckhbw
pop
add
lret
and
push
cmp
shlb
inc
dec
out
mov
outsl
add
push
push
imul
outsb
and
dec
cmp
or
mov
test
fsubs
xor
lea
sbb
or
dec
call
sub
push
inc
xor
cwtl
adc
fstps
jo
lcall
fcompl
cmp
shlb
nop
mov
mov
out
mov
mov
int
fwait
icebp
pop
mov
mov
push
inc
push
adc
fsub
movsb
pop
rcrl
jecxz
popa
gs
mov
sbb
outsl
mov
inc
adc
mov
or
arpl
movsb
push
jo
lock
ss
lods
xor
push
ds
and
adc
mov
cmp
sbb
aas
adc
sahf
cltd
enter
pop
xorb
cmp
sbb
fcoms
ret
xor
dec
mov
in
push
lcall
xchg
jg
popf
fs
mov
xchg
js
mov
gs
imul
jmp
cltd
stc
jno
enter
xchg
inc
dec
xchg
rcll
pop
dec
arpl
cmp
test
and
aad
fbld
mov
data16
aam
xchg
adc
xor
sbb
pop
inc
cmp
rcrb
adcb
pop
movsl
cmp
sbb
dec
mov
xchg
dec
add
pop
loopne
call
fldcw
or
jecxz
sub
mov
fcomps
stc
mov
adc
pusha
mov
xchg
test
icebp
mov
or
fcoms
cmp
ds
out
inc
in
popf
jecxz
cmpsl
push
imul
andl
xchg
arpl
xchg
inc
shlb
xchg
pusha
imul
mov
insl
xor
imul
xor
loope
xchg
outsl
jno
pop
mov
popa
jno
pop
in
cmp
arpl
push
xchg
cmpsl
loope
fisttps
andb
into
aas
push
sbb
xchg
dec
psrlq
push
xchg
push
cwtl
jmp
mov
xchg
addr16
mov
cwtl
popf
popf
bound
and
sbb
pop
call
pop
xchg
jno
cwtl
jno
xchg
int
pop
pop
pop
pop
push
push
xchg
std
push
mov
adc
xchg
mov
pop
insl
fsubrl
out
test
pop
cmp
sbbl
out
xchg
arpl
ret
push
pop
xor
xchg
xchg
loop
xor
inc
cmpsb
cmp
mov
mov
mov
iret
rcrl
xor
in
add
fucomip
mov
and
pop
adc
push
sti
or
push
mov
sahf
fisttpll
xchg
mov
fdivs
pop
xchg
mov
inc
sti
pop
test
xchg
mov
imul
pop
gs
fs
adc
aad
je
vminpd
inc
mov
push
sbb
inc
outsl
sub
mov
inc
push
cmp
xchg
push
movsl
inc
in
cltd
imul
adc
mov
in
jo
fisttpll
cwtl
cmpsb
cmp
pop
xchg
dec
enter
orb
cmpps
out
shlb
fs
mov
mov
jo
ret
adc
loop
xor
bound
pop
mov
push
and
and
xchg
mov
cmp
push
or
fwait
mov
cltd
fwait
lcall
cmp
push
sbb
pop
mov
mov
mov
xor
jp
xchg
out
mov
jmp
xchg
jo
push
aas
inc
sahf
adc
mov
inc
pop
dec
sbb
ljmp
fwait
xchg
push
add
lock
pop
adc
sbb
mov
dec
test
mov
cltd
add
mov
adc
ds
cmp
add
test
mov
add
in
or
test
cmpb
cmpsb
xchg
stos
in
nop
jns
and
push
outsb
shrb
popf
and
push
pop
pop
cmp
sbb
mov
lsl
cltd
mov
push
mov
push
or
icebp
mov
movsl
push
xor
lahf
mov
decb
call
sbb
adc
pop
lock
call
add
push
stos
mov
cmp
inc
cli
cmp
fdivrs
cli
loop
sbb
mov
mov
fadds
adc
enter
lret
xchg
loope
leave
arpl
push
mov
nop
xor
mov
arpl
xchg
jmp
xor
jmp
cmpsl
pop
jmp
gs
in
and
pop
repz
sbb
cmpsb
xchg
xchg
xchg
jmp
fsubs
cwtl
ret
cmp
mov
nop
cmp
fistl
and
push
addr16
mov
and
fwait
mov
pop
or
pop
inc
fcmovnbe
outsl
push
notl
cmp
fwait
jno
sbb
sbb
adc
sbb
lods
mov
add
xchg
shlb
ds
mov
les
fmull
xchg
sbb
out
mov
mov
sbb
jmp
fs
fistps
jno
xchg
inc
sbb
outsl
neg
bound
lahf
xchg
sbb
adc
mov
ss
mov
xchg
cli
adc
fildll
shrl
pmaddwd
fwait
out
mov
and
adc
jne
lahf
cmp
push
addr16
bound
add
sbb
scas
cld
mov
xchg
gs
push
and
xor
mov
sub
cmc
mov
cmpsb
adc
xchg
fwait
into
lahf
frstor
fwait
ds
enter
shl
mov
push
pop
adc
or
xor
movsb
fadds
xor
cmpsl
xchg
cmpsl
push
ror
fwait
dec
outsb
das
mov
jp
pushf
mov
or
add
gs
fbld
fsubr
adc
cli
pop
xchg
push
shll
mov
add
outsl
mov
sbb
mov
xchg
cmp
lret
mov
lahf
mov
sbb
xchg
fldenv
es
stc
and
or
insl
mov
adc
clc
mov
mov
mov
aad
ret
cli
repz
sbb
jecxz
sbb
inc
xchg
mov
mov
aad
and
loop
sbb
pop
jo
sbb
xor
out
add
lds
imul
jp
pushf
xchg
mov
rcrb
in
sbbb
sbb
add
in
xor
mov
pop
mov
cltd
dec
xchg
mov
adc
xchg
push
and
push
shll
xchg
xor
inc
aaa
shlb
cltd
movsb
fsubrl
xor
mov
cmp
mov
cmc
out
addr16
dec
xchg
sbb
xchg
push
out
mov
lret
inc
lcall
popa
inc
xchg
xchg
pmaxsw
aad
push
repnz
sahf
push
mov
inc
cli
loope
addb
bound
fdivs
or
mov
mov
jne
adc
mov
stos
pop
mov
inc
inc
out
lods
and
mov
push
jne
movsb
mov
shrb
pop
shl
addr16
bound
adc
movsl
jecxz
push
nop
mov
cmp
out
cmp
nop
jp
inc
lods
xor
push
push
rclb
xor
sbb
adc
inc
adc
nop
into
lcall
pop
testb
ds
dec
mov
adc
out
movsb
cmp
loop
adc
stos
outsb
pop
push
sbb
cwtl
mov
push
sub
test
inc
jno
push
addr16
lcall
jecxz
shl
adc
adc
dec
add
bound
xchg
iret
mov
and
adc
sbb
lahf
xchg
jne
pop
rorl
mov
mov
pop
cmp
push
or
cmp
push
mov
out
push
out
inc
loop
add
dec
sbb
pop
out
mov
dec
xchg
and
lret
fwait
and
and
inc
mov
xchg
movsl
push
js
lock
pop
add
icebp
in
cmc
and
jecxz
scas
insl
fstl
lcall
cs
inc
pop
xchg
sub
bound
sub
fdivrs
cmp
jmp
mov
jecxz
push
inc
out
mov
and
mov
outsl
cmc
and
mov
dec
mov
add
shld
fnstenv
push
adc
mov
cmpsb
aas
xchg
loop
ds
stc
nopl
xchg
sahf
loope
adc
push
fld
mov
dec
xor
ds
loope
or
xchg
lahf
adc
cmpsl
call
jnp
mov
push
sbb
nop
mov
bnd
rorb
xchg
push
js
lock
cmp
push
rcrb
clc
out
in
nop
jecxz
mov
mov
cwtl
adc
mov
es
xor
cmp
inc
jmp
test
pop
xchg
xchg
mov
imul
cmp
and
mov
mov
sbb
icebp
push
enter
std
mov
sahf
xchg
sahf
jle
fwait
dec
adc
add
mov
cmc
xor
imul
inc
add
xchg
push
pushf
lds
ljmp
mov
jle
fidivrl
cltd
orl
cmp
jecxz
lcall
out
adc
cmc
loop
rclb
ljmp
aaa
in
and
in
mov
mov
rcrb
stos
arpl
shlb
mov
push
xor
mov
xchg
sarl
cmp
mov
lahf
cmpsb
mov
mov
pop
fisttps
sbb
fneni(8087
add
loop
push
loopne
imul
loop
mov
jns
add
and
out
fidivs
insw
loop
jo
push
mov
cmp
shll
test
mov
js
jb
xor
pop
in
out
nop
and
xchg
inc
xchg
adc
rolb
xchg
in
addr16
mov
sbb
popf
inc
shrb
mov
lret
outsb
cmpb
push
call
jmp
outsb
mov
std
jmp
setae
bound
sub
lret
addr16
push
aad
gs
fsubr
mov
dec
roll
adc
mov
pop
bound
xchg
mov
mov
lret
pop
mov
ficoms
repnz
das
cmp
jecxz
fsubs
xchg
mov
stc
jge
jecxz
pop
jecxz
and
and
push
lahf
add
lock
rolb
xchg
mov
sbb
pop
dec
outsb
loopne
mov
mov
mov
shrb
aam
pop
in
mov
inc
rorl
mov
or
lock
mov
xchg
cli
mov
mov
mov
nop
xchg
xor
push
and
mov
and
adc
xchg
sahf
jmp
adc
inc
xchg
or
mov
cltd
and
and
out
aas
pop
iret
repz
sbb
mov
sbb
in
vpunpckhwd
jecxz
push
loopne
mov
popl
and
cmp
out
outsb
out
sahf
mov
dec
xor
sbb
add
outsb
pop
leave
mov
stos
cld
lcall
stos
pop
cmp
adc
mov
outsb
sub
fidivl
nop
les
popf
add
xor
adc
icebp
cltd
loopne
sbb
stc
lret
mov
mov
and
sti
ljmp
jle
mov
sahf
dec
fwait
xor
mov
rcrb
jne
inc
imul
sahf
jge
and
sar
jno
fadds
movsl
outsb
loop
mov
mov
addr16
lcall
jbe
push
les
cmp
jbe
jmp
jno
cmp
and
cmp
addr16
sub
imul
adc
lods
lret
mov
ret
push
fcom
or
imul
popa
decl
fdivr
sbb
mov
mov
mov
lret
xchg
mov
stos
insl
icebp
mov
fcoms
pop
fdivs
cwtl
xchg
into
push
cmpsb
or
cli
fsubl
mov
mov
mov
repz
xlat
cmp
fwait
dec
sbb
daa
mov
cmp
mov
dec
jo
in
sahf
dec
pop
mov
cmp
in
std
xor
out
push
pop
dec
gs
loop
lcall
mov
xor
cli
adc
mov
dec
adc
inc
xor
xchg
pop
cmp
xchg
std
arpl
fwait
xor
and
xchg
push
cmp
lret
sbb
add
mov
xchg
or
popa
sarl
add
pop
shll
test
add
cmp
orb
inc
adc
es
dec
or
out
or
adc
ss
popa
mov
inc
and
add
test
mov
mov
push
and
rorl
stc
mov
mov
add
mov
sbb
or
scas
pop
mov
pop
mov
aam
nop
pop
add
adc
mov
cmc
push
popf
push
in
loop
call
mov
lret
mov
fcoms
mov
fsubs
addr16
ljmp
imul
inc
sbb
push
xchg
or
mov
pop
pushf
adc
cwtl
jge
ret
out
pop
imul
xchg
cwtl
loope
inc
ljmp
inc
jmp
lahf
dec
or
mov
adc
add
orl
outsb
ficoml
popa
test
out
fistpll
mov
ret
sbb
jns
pop
push
sbb
test
test
mov
icebp
xchg
test
imul
xor
jmp
and
inc
fbld
in
hlt
ss
iret
sbb
mov
cmpsl
outsl
popa
adc
mov
jne
aas
and
movntps
aas
es
xchg
je
add
or
or
arpl
aam
adc
dec
in
fdivrs
pop
shll
push
or
xchg
shl
pop
pop
shl
loop
push
test
out
repnz
insb
mov
xchg
adc
xor
pusha
lcall
push
xchg
and
aaa
lcall
leave
decb
icebp
andb
dec
fists
movsb
out
fbstp
lcall
ret
fwait
into
sbb
shl
mov
jae
les
push
inc
lcall
aas
cwtl
fwait
imul
mov
jecxz
pop
aas
sarb
ret
cmp
movsl
fwait
sbb
xchg
mulb
adc
inc
jecxz
insb
cli
xchg
jle
imul
xchg
daa
push
xchg
or
and
and
loope
adc
and
or
cwtl
ret
jno
mov
or
xlat
mov
fimull
cmp
std
cmp
popa
and
loop
lcall
mov
adc
push
xchg
and
mov
push
sub
pop
push
sbb
and
push
mov
mov
xchg
xor
adc
mov
jge
lods
fnsave
dec
mov
inc
aam
mov
out
inc
push
f2xm1
imul
sub
adc
adc
xchg
push
adc
dec
push
adc
cmp
and
push
adc
shlb
push
rcll
ret
repz
inc
pop
push
aad
sarb
movsl
fmuls
rolb
cmp
inc
daa
jg
sahf
test
psubd
mov
xor
mov
aaa
out
popf
mov
jbe
jecxz
xor
adc
arpl
jmp
shlb
mov
sbb
rorl
and
pop
or
loope
adc
pop
mov
fisubl
daa
adc
push
shll
cmp
jns
cwtl
ficoml
mov
and
dec
add
xchg
popf
add
inc
shl
mov
clc
push
data16
inc
mov
xchg
int
inc
xchg
xchg
dec
rol
out
inc
sbb
out
mov
push
ss
pop
jge
and
lds
push
daa
ds
mov
ret
pusha
addr16
out
fwait
scas
js
mov
shr
and
fs
adc
jnp
jb
xchg
xor
sbb
cmp
fisubrl
jb
mov
cmpsl
xchg
jmp
dec
sub
in
pop
rcrb
aaa
sarb
out
inc
shlb
mov
and
ds
xchg
lcall
inc
or
jns
xchg
sbb
out
es
jae
or
ret
lret
pop
and
mov
add
lds
inc
jge
jne
insl
sbb
mov
dec
pop
test
push
test
aaa
and
jecxz
sbb
out
mov
mov
lahf
nop
cmp
dec
call
addb
mov
push
or
loopne
mov
icebp
push
ret
loop
sbb
sbb
mov
imul
cmp
add
mulb
nop
sbb
xor
mov
push
shr
lret
or
and
adc
cmp
mov
mov
and
jecxz
in
stos
fsubrl
imul
les
jo
sub
mov
xchg
test
in
ss
cmp
lahf
pop
jmp
repz
adc
fiadds
sahf
cmp
aad
cmp
xchg
lret
push
cltd
add
in
adc
push
xor
dec
adc
out
sbb
fwait
jns
jp
filds
aas
dec
fwait
ds
add
ds
and
pusha
pop
loopne,pt
push
loope
xchg
inc
xchg
and
movsl
leave
xor
out
pop
adc
mov
lock
adc
loopne
jg
pop
and
mov
push
cmp
scas
in
jne
aaa
hlt
shll
or
jecxz
shll
scas
loope
xchg
push
outsb
mov
push
sahf
cltd
iret
mov
aaa
dec
mov
inc
and
pusha
cmp
popa
out
dec
xor
stc
addr16
push
cwtl
popa
adc
mov
rcrl
sbbl
inc
aaa
cmpsl
add
jp
out
push
mov
pop
imul
out
rcrl
ds
jo
pop
push
rcrl
pop
ss
lahf
xchg
jns
jo
hlt
adc
aaa
sarb
ss
and
xchg
leave
add
repnz
popa
incb
mov
jnp
lcall
and
xor
pop
pop
adc
jb
icebp
sahf
xchg
cmp
fucomip
adc
lcall
imul
mov
jne
inc
fdivp
repnz
icebp
roll
pusha
insl
cwtl
ret
jmp
decl
and
adc
cmp
add
pop
add
andl
pop
pop
sahf
jmp
test
pushf
iret
loop
fidivs
and
ds
mov
js
inc
mov
lcall
fimuls
xor
dec
fcoms
mov
pusha
sbb
popa
push
rsqrtps
ds
shr
sbbb
out
xlat
iret
sbb
xor
mov
and
pusha
mov
fnstenv
leave
cmp
push
cwtl
xor
pop
mov
and
aas
mov
movsl
lahf
adc
movsb
sbb
fildl
inc
add
dec
repnz
jmp
sahf
rorb
jg
fildl
adc
xchg
mov
std
adc
aas
sbb
shlb
adc
lcall
or
xchg
call
cmp
shll
push
push
loop
mov
fsub
mov
jecxz
xchg
cmpsl
arpl
pop
pop
ss
arpl
das
mov
arpl
push
mov
stos
mov
shl
ret
mov
lcall
std
push
pop
push
and
inc
cmp
out
cmp
aaa
jecxz
adc
vdivss
mov
fiaddl
cmp
and
out
add
sbb
and
mulb
jno
popf
and
fdivl
xor
push
mov
push
sbb
cwtl
push
fnstsw
rclb
mov
enter
sbb
dec
outsl
jns
loop
rol
and
cmp
jg
in
sahf
xor
xor
in
and
fwait
push
or
arpl
addr16
xlat
dec
inc
fstps
cmp
adc
ss
jle
repnz
jns
mov
mov
outsb
iret
push
out
setge
out
insl
notb
mov
nop
out
test
xor
mov
ja
cmp
pushf
sahf
divb
daa
sahf
mov
inc
dec
mov
and
adc
push
bound
xchg
insb
adc
and
xor
enter
mov
xor
push
cmp
or
dec
jg
inc
ret
lahf
and
mov
popa
lds
out
push
inc
repnz
push
lds
sbb
xchg
or
ds
mov
sbb
sarl
xor
cmp
fdivr
add
pop
mov
inc
std
cwtl
fnstenv
iret
insb
sahf
mov
lods
loopne
sbbb
mov
data16
rcll
xchg
and
lcall
jp
cli
sarw
jmp
pop
mov
cltd
pop
xor
pop
push
pop
cmc
arpl
loope
test
cmc
mov
xor
jno
test
inc
aaa
lret
hlt
mov
fistps
pop
repnz
mov
sbb
repz
mov
mov
or
ja
mov
imul
iret
bound
loop
and
outsb
dec
pop
push
dec
fimuls
sbb
mov
jno
xor
loopne
and
cwtl
nop
fildl
lret
pop
rol
and
call
mov
scas
dec
bound
das
xchg
cmp
mov
mov
in
dec
mov
loope
out
imulw
roll
xor
ret
jecxz
loop
lahf
pop
xchg
mov
ret
ds
jns
mov
sbb
pop
mov
push
vunpckhps
nop
loopne
ret
out
in
add
fidivl
test
cmp
rolb
stc
aaa
and
lcall
cmp
call
jge
ret
mov
sahf
ss
repz
xchg
xor
rolb
mov
popa
out
lds
push
lcall
mov
pop
iret
lcall
pop
pop
or
add
xchg
repnz
aas
movsl
std
jecxz
icebp
jmp
xchg
push
ljmp
mov
inc
mov
imul
and
add
cmp
std
lock
lds
nop
xchg
popf
xchg
ret
and
sahf
pop
pop
insb
ja
and
pop
jbe
or
arpl
mov
fwait
push
mov
add
push
aaa
sbb
adc
out
arpl
leave
push
xor
xor
mov
inc
and
sbb
xchg
cmp
rclb
cmpsl
rcll
push
dec
sbb
sbb
mov
mov
mov
je
test
pop
add
rclb
pop
sbb
inc
xchg
test
inc
addr16
pushf
fwait
aad
cmpsl
in
sbb
ljmp
mov
inc
lds
shll
test
cmp
mov
or
rcll
out
xchg
jg
and
repnz
adc
add
add
jnp
or
sbbb
xchg
dec
xchg
xor
adc
cmp
pop
xchg
mov
int
ret
pop
jno
fisubs
xlat
inc
inc
aam
dec
icebp
shl
mov
roll
and
xor
test
jbe
and
scas
test
fdivs
or
call
xchg
cltd
aaa
fwait
inc
mov
jecxz
and
cmp
push
loopne
push
incl
pop
sbb
in
icebp
jg
xchg
je
ror
arpl
shlb
xor
jge
ds
or
shr
lcall
incl
addr16
cwtl
cmp
rcrl
push
loopne
mov
push
lahf
mov
push
shlb
insb
adcb
in
in
jb
inc
sahf
sbb
push
es
jno
mov
adc
cli
inc
pop
clc
sbb
test
fidivl
mov
add
loop
outsb
ja
xor
xchg
mov
push
pop
pop
les
adc
lret
call
cmp
sbb
mov
xchg
or
mov
dec
scas
or
mov
xchg
xchg
or
mov
lahf
insb
xlat
adc
add
mov
loop
adc
cli
pop
xlat
pop
sbb
pop
inc
mov
pop
shlb
inc
mov
inc
push
shrl
rorl
inc
ljmp
xchg
rorb
enter
cmp
xor
out
pushf
in
adc
jg
lea
fisttps
mov
add
mov
xchg
out
or
sahf
adc
cltd
bound
pop
pop
mov
pop
sahf
xchg
add
mov
mov
fstpt
push
add
lcall
ljmp
jmp
mov
pop
call
out
jno
insl
lret
test
scas
enter
jecxz
inc
jmp
adc
or
push
rolb
bound
mov
mov
mov
sub
sub
call
inc
xchg
sbb
xchg
in
adc
rcrl
mov
loope
inc
out
xchg
cmp
repz
xchg
loop
fwait
daa
lock
push
rcl
mov
adc
imul
xchg
mov
mul
mov
cmp
aaa
fbld
fs
fwait
sarb
pop
xchg
lret
dec
pushf
and
push
dec
aad
adc
pop
fadds
push
popa
jne
ficompl
inc
fldcw
push
dec
push
mov
ret
mov
and
inc
lret
and
adc
mov
pop
int
in
shl
push
add
adc
cmp
inc
ljmp
xlat
add
xor
push
xchg
fiadds
mov
outsl
inc
bound
xchg
sbb
dec
sbb
sub
cli
lahf
and
jb
popf
ss
push
sahf
push
pusha
adc
jne
sahf
mov
in
inc
xchg
jne
adcb
jo
mov
fiaddl
nop
dec
sbb
bound
outsl
fwait
inc
xor
jmp
mov
rorl
pop
cwtl
push
scas
push
addl
jbe
out
mov
pop
cwtl
mov
mov
inc
pop
jb
push
pop
jecxz
mov
mov
inc
sub
xchg
loope
je
mov
or
push
out
jne
cmpb
push
aaa
loop
jae
mov
sbb
sbb
pop
inc
aad
xchg
push
das
mov
call
nop
aaa
and
pop
ja
fisttpl
sarb
dec
xchg
mov
aaa
les
stc
jbe
sahf
stc
jbe
and
jge
pop
push
sbb
push
out
adc
aaa
mov
ret
aad
mov
lock
addr16
and
sbb
inc
or
add
stc
push
rolb
jmp
lcall
fwait
jnp
test
push
add
and
aaa
jecxz
cmp
inc
nop
cmp
lds
cwtl
fsts
addl
imul
sbb
addb
test
fbstp
xor
or
aaa
mul
and
xchg
mov
add
and
popa
sti
cmp
shll
lahf
fstpl
test
inc
mov
jnp
cmp
mov
pop
cwtl
dec
je
jb
repz
mov
in
sbb
scas
sbb
xlat
test
adc
dec
inc
loop
iret
pop
ret
cli
pop
pop
in
lcall
push
mov
shlb
inc
dec
mov
jo
adc
mov
fmull
mov
sub
dec
pop
ljmp
cmpsb
outsl
movsl
sbb
jb
cmp
daa
adc
inc
sbb
pop
or
mov
repz
in
test
mov
out
jno
in
cli
mov
rcrl
test
and
ja
inc
cmp
xchg
shll
jns
pop
adc
roll
pop
imul
push
gs
push
push
add
lahf
cwtl
jge
test
adc
mov
rclb
sbb
and
sahf
orl
jecxz
pushf
call
add
cmp
cltd
cmpsl
test
xor
mul
mov
arpl
arpl
out
push
add
loope
mov
mov
jecxz
pop
scas
in
add
push
add
push
shl
or
int
fidivl
and
test
push
shlb
mov
imul
enter
fwait
cmp
popf
and
mov
fsubs
cmp
pop
loopne
and
dec
rclb
jecxz
data16
jno
sub
fistps
and
dec
push
xor
or
add
inc
je
and
sbb
scas
add
push
mul
enter
in
je
lret
in
rclb
pop
fcoms
xchg
xchg
cmp
mov
mov
hlt
test
lret
pop
xchg
dec
pusha
sets
xchg
add
push
push
iret
roll
xchg
jnp
filds
push
repz
inc
mov
arpl
mov
dec
push
mov
push
jecxz
adc
arpl
pusha
push
aam
mov
inc
xchg
sahf
call
or
push
mov
fucomip
mov
xchg
std
call
inc
adc
dec
xchg
call
add
xchg
rcrl
clc
mov
mov
jp
push
xor
fdivp
mov
loop
and
movl
leave
and
xchg
lret
cmc
xchg
mov
inc
jmp
xchg
mov
das
push
out
loope
test
arpl
sub
mov
loope
roll
pop
jle
cmc
gs
mov
cmp
dec
add
fwait
jb
pop
xchg
mov
add
mov
push
leave
mov
or
xchg
dec
sahf
loop
sbb
or
push
out
lahf
push
mov
xchg
fistps
xor
inc
jae
or
xor
push
aad
sbb
cwtl
fbstp
push
push
cwtl
mov
jns
out
movsb
cmp
jbe
adc
push
jmp
xchg
fildl
inc
ja
mov
andb
jp
fstps
inc
fldcw
aas
in
js
inc
cmp
nop
adcl
xchg
pop
xor
popa
fwait
fwait
lret
fdivrs
pusha
push
mov
mov
xchg
insb
iret
xchg
cmp
xchg
movsl
or
test
adc
mov
decl
cmp
dec
imul
xor
or
ljmp
adc
call
sbb
les
mov
mov
rcrl
xchg
pop
mov
pop
out
mul
and
xchg
and
push
repz
inc
ds
or
sbb
pop
out
cwtl
jns
push
dec
mov
xorb
push
cmp
pop
cli
adc
pop
fmuls
aas
inc
cmc
out
jg
push
pop
pop
cs
xor
push
xor
jbe
jb
aad
and
xor
cwtl
mov
xlat
cmpsl
pop
pop
repz
imul
loop
inc
xchg
pop
mov
cmp
inc
stc
jge
push
sti
lds
cmc
aam
in
stos
push
fists
loopne
xchg
push
cmpsl
push
pop
cmpsl
cmp
pusha
xchg
notl
mov
fiadds
lahf
aaa
inc
andb
pop
popf
cwtl
xlat
pop
in
pushf
imul
scas
xchg
movsl
fsts
in
inc
ljmp
in
mov
sarl
or
nop
add
cmovns
inc
mov
cmp
mov
js
ret
and
push
add
gs
jne
pop
and
sbb
ficompl
rolb
add
cmp
and
flds
cmp
mov
xorl
ja
imul
xchg
shl
jnp
shll
push
pushf
inc
inc
pop
xor
or
jo
inc
sbb
lea
or
rcrb
pop
mov
and
loop
inc
jbe
adcb
xchg
fstl
mov
dec
push
fwait
insb
in
test
ss
pop
aam
mov
sahf
mov
dec
iret
add
loope
aas
cli
pop
ds
insl
repz
push
fwait
repz
ret
cmp
mov
inc
cmp
mov
mov
arpl
imul
pop
imul
and
jecxz
mov
push
or
rorl
fadds
jo
rolb
test
push
std
or
inc
std
mov
daa
xlat
fimuls
jecxz
xchg
mov
jbe
add
jb
push
add
mov
out
negb
mov
loopne
jne
fistl
xlat
shll
clc
push
test
inc
and
popa
pop
jge
adc
add
fcmovb
adc
mov
inc
jno
sahf
xchg
adcb
dec
clc
sbb
inc
push
xlat
push
add
jne
nop
xchg
ret
add
inc
imul
leave
bound
in
pop
dec
pop
mov
pop
dec
arpl
xchg
inc
add
jo
cmp
dec
pusha
xchg
sub
aas
mov
adc
fwait
xchg
repnz
enter
inc
cwtl
fs
loope
insl
fcmovnbe
andl
lds
push
xchg
push
mov
clc
cmp
adc
loope
xchg
xor
sbb
jmp
mov
cmp
add
dec
std
mov
lret
xchg
and
sbbb
jle
inc
lcall
or
sahf
pop
xchg
fsub
inc
test
mov
imul
ljmp
aaa
shl
sub
xchg
mov
jecxz
cmp
lret
cmp
ds
outsb
xchg
dec
ds
inc
sahf
pop
push
pop
fcmovne
mov
and
fsub
or
xor
sar
xchg
inc
pop
out
std
mov
jg
mov
jg
popa
nop
adc
js
in
es
mov
ds
push
xor
push
mov
mov
cmp
jae
je
mov
roll
iret
cmp
push
jae
pop
ret
pusha
fs
shrb
repz
jbe
arpl
aaa
push
pop
and
bound
das
or
push
faddl
aas
out
xlat
and
out
clc
and
shrl
pusha
mov
fmuls
inc
sahf
mov
pop
inc
pop
popf
pop
mov
cmp
and
jg
inc
sub
jg
pushl
xchg
fstpt
sub
xor
and
daa
shll
cwtl
mov
mov
xchg
sbb
cwtl
pop
outsl
mov
lds
jge
and
mov
dec
xchg
xchg
push
push
daa
lahf
aaa
and
lahf
repnz
xor
jmp
adcl
aad
in
cmp
jle
popf
mov
jg
movsl
cwtl
pusha
xchg
pop
push
jle
mov
fld
fidivs
xchg
add
inc
mov
les
jmp
dec
pop
div
imul
push
test
jecxz
sbb
add
push
popf
mov
imul
jns
fwait
mov
js
pop
xchg
arpl
add
xchg
sbb
ror
jecxz
and
pop
movsl
test
lret
or
mov
add
notl
and
pop
rorl
dec
cwtl
push
insb
cli
sbb
mov
cmp
fs
mov
outsl
sahf
dec
mov
ret
aas
mov
sbb
sbb
pushf
push
xchg
adc
sbb
cmp
pop
and
cli
loope
mov
out
cmp
lods
mov
adc
push
stc
imul
jno
loope
bound
addb
lods
pop
mov
xchg
jmp
add
adc
jno
mov
inc
stc
jne
call
xor
xchg
pop
jmp
adc
and
sarb
ret
mov
int
sub
mov
es
adc
dec
ja
mov
out
mov
fscale
xor
jmp
inc
push
jo
aas
push
dec
mov
out
and
loope
push
les
xchg
push
andb
lret
ss
jns
mov
addl
and
dec
cltd
pop
sub
leave
mov
out
jle
cwtl
test
inc
fimull
insl
and
and
jno
xchg
imul
adc
sarl
sbb
js
in
cmp
in
push
addb
imul
mov
ffreep
xor
mov
mov
rolb
xchg
adc
xchg
pop
nop
fs
mov
lcall
sbb
pop
ja
cmp
in
adc
and
xchg
mov
out
enter
inc
popf
or
imul
mov
imul
aaa
xchg
xchg
pusha
popf
addr16
mov
push
mov
insl
jmp
aad
inc
out
lcall
in
rclb
lods
pusha
imul
pushf
arpl
pop
inc
lahf
mov
fwait
bound
or
in
into
xchg
popf
jmp
lods
mov
rcll
lock
mov
popa
xchg
or
addb
jle
jnp
lods
pop
out
fiaddl
pusha
outsb
pop
sbb
movsl
fdivrs
ds
lock
fwait
xchg
sub
inc
sbb
lods
jo
in
and
cmp
outsl
dec
sub
int
push
and
stos
out
loope
fcomps
xlat
pop
int3
xchg
int
lret
xchg
rclb
iret
xchg
les
ret
xchg
enter
xchg
xchg
jl
jge
jp
jnp
add
jg
je
dec
mov
mov
test
out
jmp
sub
fwait
aam
xlat
jl
data16
cmpsb
aad
test
int
fsubs
rclb
or
cmpsl
gs
mov
repz
sbb
sbb
js
js
js
js
js
js
js
mov
bound
cmpsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
daa
scas
xchg
bnd
inc
std
add
sbb
psrlw
dec
jmp
call
cwtl
cmpl
pop
test
mov
mov
mov
cmpsb
out
out
movsl
addr16
out
daa
test
daa
pop
daa
pop
daa
pop
daa
pop
daa
pusha
daa
popa
daa
pop
daa
pop
daa
push
daa
push
daa
push
daa
push
daa
pop
daa
pop
daa
push
daa
push
daa
dec
daa
dec
daa
dec
daa
dec
daa
push
daa
push
daa
dec
daa
dec
daa
inc
daa
inc
daa
inc
daa
inc
gs
icebp
jmp
or
out
fiaddl
nop
jge
hlt
stos
cmpsl
mov
mov
mov
jp
mov
xchg
push
mov
cmpsb
sub
mov
test
ljmp
mov
sub
fisubs
cmpsl
xor
ja
push
imul
cmpsb
cwtl
in
fstpl
sbb
sbb
or
repnz
mov
and
es
arpl
and
add
call
out
pop
sbb
xchg
inc
fwait
imul
out
add
cmpsl
ja
neg
mov
mov
mov
mov
in
cmpsb
call
mov
cmpsb
sub
es
add
cmpsb
out
es
addr16
cmpsl
mov
mov
mov
mov
outsl
sub
lock
sbb
shlb
lock
scas
lds
and
incb
shll
mov
add
cli
push
push
sbb
andl
xchg
stc
jmp
outsl
addr16
fwait
cmp
adc
sbb
push
jl
add
mov
out
mov
mov
mov
mov
cmp
cli
xchg
inc
xchg
add
mov
daa
ss
daa
push
sub
loop
imul
in
int
outsb
push
sub
lds
loope
lahf
jne
jne
jne
jne
xor
jne
jne
jne
jne
jne
jne
jne
jne
xor
pop
cmp
popf
call
cmp
jge
cmp
shl
sub
dec
or
push
mov
xchg
add
xchg
or
mov
xchg
mov
xchg
mov
xchg
mov
mov
mov
xchg
mov
imul
jno
outsb
xchg
outsl
xchg
fs
gs
bound
shll
in
inc
addr16
mov
mov
mov
mov
aaa
and
adc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mull
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
mov
js
js
js
jns
test
imul
jl
add
outsl
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
mov
cli
jmp
sub
fwait
dec
mov
fmull
rclb
mov
iret
jl
add
je
js
js
js
js
js
mov
inc
mov
push
or
xor
es
sub
pushf
negb
mulb
notb
fincstp
dec
testb
repnz
and
cwtl
loop
test
pop
hlt
sbb
mov
mov
mov
xchg
adc
daa
add
daa
or
or
push
daa
pop
daa
mov
daa
mov
daa
mov
daa
mov
mov
mov
mov
sbb
imul
jno
outsb
daa
outsl
jecxz
xchg
iret
iret
arpl
push
pop
mov
mov
mov
cltd
pop
push
sahf
xchg
dec
pop
cmp
xor
and
sub
lret
jnp
jnp
jnp
sarl
inc
inc
xlat
insl
push
adc
adc
cltd
xchg
sbb
andl
jbe
lods
test
fwait
mov
das
jnp
das
mov
mov
mov
mov
mov
mov
mov
lea
aas
xchg
jb
callw
test
mov
jg
mov
clc
jnp
jl
sub
mov
scas
enter
add
je
js
js
js
js
js
js
js
stc
cmp
push
xchg
hlt
divb
cltd
test
fwait
mov
dec
stos
mov
test
cmpsb
jmp
cmp
movsb
sub
sti
mov
ror
add
out
mov
mov
adc
sbb
sub
iret
or
test
mov
imul
sub
pushf
adc
or
lds
bnd
jne
jne
hlt
stos
sub
xor
arpl
in
out
add
xchg
mov
and
add
mov
mov
cmpsb
imul
into
mov
mov
mov
mov
mov
mov
xchg
js
test
aas
jae
cmp
jbe
sub
mov
aam
or
jne
push
and
outsb
outsw
cli
andb
hlt
arpl
push
sbb
sbb
iret
and
and
cmp
jnp
jnp
jnp
jnp
jnp
jnp
cli
push
pop
xchg
or
notb
notb
testb
psadbw
add
testb
or
push
testb
mov
idivb
idivb
divb
mov
jne
lds
outsl
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
cmc
sbb
push
and
js
js
js
cmp
pusha
sbb
jne
jne
jne
xor
sbb
cltd
outsl
fsubs
pop
dec
scas
les
arpl
scas
fwait
ds
in
mov
inc
xchg
add
inc
js
js
cmp
xchg
jp
rclb
xchg
xor
in
out
dec
out
scas
gs
loop
xor
mov
sub
outsl
add
stos
fwait
or
mov
sub
test
shlb
lahf
mov
mov
dec
call
imul
hlt
jno
outsb
clc
mulb
mulb
push
push
negb
negb
mulb
mulb
negb
negb
notb
adc
sbb
pop
mov
mov
nop
ss
or
in
add
add
add
pop
cmp
testb
idivb
mov
xchg
in
mov
sbb
mov
iret
outsb
das
outsl
shlb
lds
jne
jne
jne
jne
mov
add
sbb
js
cmp
push
addr16
adc
fs
aas
mov
outsl
xor
nop
and
push
mov
inc
js
js
cmp
sbb
stos
test
jle
fldcw
inc
or
mov
mov
test
fisubl
gs
bswap
xchg
nop
push
fisttpl
movsl
es
push
addr16
arpl
out
sbb
mov
negb
daa
lret
daa
daa
cmp
out
adc
out
daa
jae
fiaddl
int3
add
insl
sbb
pop
push
push
or
adc
add
add
or
popf
xchg
push
xchg
pop
xchg
mov
popa
out
xchg
adc
pusha
scas
mov
pop
mov
addr16
movsl
int3
or
or
jmp
rolb
push
mov
adc
out
int
mov
cmp
adc
mov
in
jmp
cmp
iret
test
ret
int
sub
movsb
data16
cmp
in
mov
seta
add
xchg
or
pop
xchg
mov
jo
js
pop
rcrb
fwait
enter
pop
pop
xor
lds
in
pop
xor
gs
pop
or
cld
push
mov
imul
rclb
sub
shrb
adc
out
es
fwait
test
les
enter
add
je
cmpsb
inc
pop
out
es
arpl
jmp
mov
dec
push
imul
jno
outsb
lret
icebp
bound
cmc
push
addr16
sbb
sbb
xchg
and
lahf
into
jnp
cmp
daa
xor
mov
call
and
xchg
push
sub
cli
xchg
xchg
cmpsb
cwtl
xor
js
fucom
cmpb
inc
sbb
mov
test
adc
jae
cmpsb
stos
sub
imul
mov
mov
adc
push
pop
xchg
lea
dec
xchg
xchg
xchg
iret
xchg
lds
in
sbb
mov
mov
int3
out
daa
mov
sub
mov
push
sub
add
aas
cmp
data16
cmp
or
data16
push
roll
nop
mov
push
in
cmpsb
mov
scas
mov
mov
mov
xchg
sbb
int
or
ret
or
mov
mov
mov
shll
xor
std
or
in
xchg
cmp
and
test
fwait
jp
pop
sbb
xor
js
js
js
js
cmp
ds
mov
ror
pop
sbb
jne
jne
cmc
xchg
stos
xchg
sbb
xchg
lds
aaa
mov
leave
mov
sbb
lds
push
test
sbb
das
call
out
sub
pop
jne
jne
mov
or
out
mov
insb
pop
jge
jne
jne
jne
jne
mov
add
insl
sahf
in
in
and
pop
jp
and
jne
cmc
jge
cmp
js
cmp
push
pop
xchg
cmp
test
mov
pushf
xor
push
test
lahf
sub
sub
cli
jno
gs
jecxz
cld
insl
sbb
loopne
fcomip
shlb
or
xchg
jecxz
mov
iret
dec
mov
dec
xor
es
pop
icebp
xchg
cmp
xchg
pop
sbb
and
jne
jne
jne
jne
cmc
rcl
js
ja
stos
cmpsb
icebp
mov
jmp
popf
es
mov
push
mov
in
test
mov
int3
inc
sarl
cmpsb
daa
mov
sbb
add
push
pop
adc
sbb
lahf
jmp
push
jp
fisttpll
pop
arpl
xor
add
mov
lahf
mov
lcall
mov
mov
mov
mov
xor
cmpsl
sbb
sbb
xchg
vhsubpd
jne
hlt
sub
data16
packuswb
jae
outsl
insl
lahf
or
adc
je
cmp
push
mov
cmp
inc
adc
mov
jbe
lods
out
nop
lock
enter
push
imul
add
in
mov
jnp
jnp
jnp
jnp
jp
pop
xor
divb
divb
cli
push
pop
add
lock
adc
cltd
push
sarl
xor
ljmp
pmulhuw
adc
push
iret
bswap
add
add
inc
or
aas
loop
mov
cmp
leave
inc
jmp
in
call
xchg
mov
adc
cli
imul
pushl
jne
hlt
lret
test
cli
inc
inc
lods
call
cltd
xchg
ficompl
dec
push
mov
not
arpl
daa
mov
mov
bound
sbb
jnp
jnp
jp
jne
xor
cmp
or
in
mov
gs
adc
adc
faddl
mov
jmp
imul
xchg
jno
outsb
xchg
outsl
fisubl
bound
jnp
cli
imul
sbb
sbb
and
and
push
notb
adc
negb
imul
or
or
adc
adc
push
iret
bswap
add
add
iret
or
or
push
iret
pop
iret
mov
iret
mov
nop
mov
int
mov
mov
mov
mov
mov
mov
xchg
push
outsb
insb
pop
pop
mov
push
test
fistpl
sbb
and
jne
mov
add
adc
cmc
sbb
xchg
pop
cmp
cwtl
or
or
cltd
adc
add
add
sbb
testb
pop
idivb
inc
sbb
mov
mov
mov
mov
xchg
mov
jo
jno
push
mov
sahf
loop
or
add
mov
lods
xor
cli
aad
sar
inc
mov
cmc
jne
jne
xor
jo
jno
aas
jge
jne
mov
mov
arpl
add
in
ficomps
ss
sbb
xchg
and
push
xchg
pop
xchg
adc
adc
sub
cli
pop
loopne
sbb
mov
cmpsb
cmpsl
nop
jmp
daa
mov
mov
jo
outsb
insl
insb
sub
mov
or
in
daa
lods
test
call
pusha
push
pop
call
sbb
mulb
adc
arpl
xchg
in
push
repnz
push
adc
sub
rcll
sbb
inc
daa
add
idivb
daa
inc
and
mov
inc
mov
iret
mov
outsl
out
dec
push
imul
das
fs
gs
iret
arpl
push
rorl
sub
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
mov
pop
ds
mov
outsb
dec
mov
out
sbb
xchg
and
jmp
push
arpl
in
inc
sub
nop
push
mov
outsl
mov
mov
mov
in
add
mov
mov
shll
jnp
or
outsb
rcrl
mov
and
negb
addr16
daa
pop
daa
or
or
adc
add
add
mov
mov
and
divb
stos
or
mov
icebp
in
daa
insl
pop
mov
jno
outsb
mov
gs
mov
mov
iret
sub
jne
jne
jne
mov
mov
daa
push
daa
pop
daa
adc
adc
sbb
sbb
push
iret
or
or
iret
adc
adc
push
iret
bswap
add
add
or
mov
jne
cmc
mov
and
cmc
mov
mov
mov
mov
inc
outsb
jo
outsb
jno
mov
insl
mov
mov
mov
clc
ss
je
js
js
js
js
cmp
sbb
push
int3
xchg
xchg
sbb
sbb
jl
and
cmp
sbb
adc
sbb
cmp
and
mov
mov
mov
mov
xchg
iret
mov
mov
outsl
test
dec
push
imul
mov
mov
mov
mov
dec
sub
mov
pop
cmp
mulb
negb
negb
out
mov
adc
jnp
jnp
jnp
jnp
jnp
jnp
jnp
cli
adc
add
sbb
js
js
cmp
inc
push
das
mov
iret
mov
iret
mov
iret
mov
mov
mov
mov
pop
sar
neg
jecxz
out
dec
in
xor
int
lret
lds
daa
jp
subb
mov
jmp
test
xor
sub
pop
pop
jge
jp
popf
ds
pop
ds
xchg
jg
push
mov
lret
mov
mov
xchg
mov
pop
xchg
mov
xchg
xchg
es
adc
je
mov
dec
mov
push
out
and
xchg
xor
jmp
push
filds
call
push
lods
jg
sbb
dec
and
mov
in
inc
xchg
adc
pop
mov
fwait
mov
fwait
mov
sarl
jle
fsubp
mov
jno
sbbb
mov
and
mov
xor
jnp
pop
pop
adc
mov
hlt
pop
adc
daa
xlat
daa
lea
dec
push
or
rclb
roll
les
jl
fwait
mov
aaa
xchg
xor
or
call
addr16
daa
hlt
and
pop
cmpsb
mov
cmpsl
xchg
out
daa
or
test
cltd
testb
sub
cmp
pop
rcl
les
jnp
jle
gs
insl
sbb
cltd
dec
push
int
mov
cmp
js
cmp
xchg
add
cmp
out
imul
and
ljmp
leave
jne
jne
jne
mov
mov
repz
mov
inc
sbb
cmpsb
and
mov
lea
subb
aad
adc
cmc
xchg
mov
daa
mov
pushf
cmpsb
call
scas
cmp
out
mov
sub
ficomps
arpl
rcrb
dec
cli
sbb
out
cmp
arpl
iret
jb
cmp
mov
jmp
push
pushf
and
loop
lret
imul
loopne
push
lcall
pop
rolb
pop
add
push
push
mov
testb
mov
xchg
and
push
mov
add
jl
sub
nop
notb
cli
and
lret
int
mov
loop
in
pop
mov
mov
mov
mov
xchg
push
int3
xor
js
cmp
xor
leave
sub
ret
repz
es
les
mov
cmp
add
lret
sarl
lods
addr16
xchg
aad
daa
xchg
popf
fistps
aaa
fidivrs
pop
xor
neg
notb
push
xchg
mov
xor
cmp
sbb
data16
or
shrl
test
mov
cmpsb
call
mov
jecxz
aas
roll
add
in
out
lahf
cltd
fcomps
or
pop
xchg
lock
jnp
jp
lds
jge
cmp
jne
jne
jne
jne
repnz
fucom
push
pop
add
mov
mov
xchg
or
cltd
int
vhsubpd
mov
js
ss
sets
pop
add
mov
in
cmpsb
out
adc
jo
inc
ja
lods
mov
pusha
or
or
push
popa
push
dec
xchg
scas
int3
nop
dec
cmp
lds
ss
scas
mov
sbb
in
aaa
pop
mov
and
and
mov
cmp
sbb
cmp
hlt
and
addr16
jmp
jmp
jmp
loope
rcrl
sbb
pusha
adc
ret
or
jp
xorb
mov
inc
add
cwtl
movsb
cmp
repnz
mov
testb
rcrb
call
jb
aaa
mov
arpl
xor
rclb
js
ljmp
in
sub
es
or
push
loope
mov
dec
or
jmp
sti
mov
fistpll
jl
cmp
mov
xchg
popf
out
rol
les
or
loope
mov
lods
mov
or
lcall
mov
test
dec
sbb
cltd
xor
call
cmpsb
sub
push
xlat
mov
iret
les
inc
xchg
ret
mov
das
rcl
fstpt
ja
insl
and
fildll
mov
lret
bound
xchg
call
push
cld
pop
aad
out
jmp
data16
hlt
lret
mov
cmp
mov
mov
lret
dec
mov
cmc
jnp
cmp
add
fdivp
int
sub
or
mov
or
mov
push
jmp
daa
sub
pop
jl
mov
cld
in
cmp
cmp
loopne
push
sbb
or
shll
adc
jle
outsl
mov
push
add
imul
cmp
outsl
jmp
sub
cmpsb
ret
movsl
pop
mov
sbb
mov
cli
xchg
andb
lret
and
lods
cmpsb
cmpsl
stos
mov
daa
sub
and
and
fiaddl
mov
addr16
and
cmp
cmc
lahf
sarb
sub
pop
dec
sbb
sbb
repnz
sbb
add
insb
in
push
int3
sarb
jl
jns
rclb
mov
xchg
and
shl
cmpb
test
loopne
xchg
movsb
mov
mov
testl
add
xorl
or
adc
xchg
iret
dec
mov
stos
loopne
push
les
or
mov
sbb
ss
shlb
insl
aad
shlb
pop
shlb
mov
mov
ficomps
xor
aad
pusha
cmp
test
and
into
loop
leavew
adc
std
jl
add
cmp
mov
test
jmp
sub
xlat
and
lcall
lcall
xchg
outsl
insl
sub
nop
lock
out
mov
sub
popfw
int
jl
jle
lcall
mov
fs
sbb
outsl
in
addr16
dec
dec
scas
dec
nop
jbe
mov
mov
mov
push
mov
mov
dec
sbb
pop
outsl
cltd
js
cmp
xchg
pop
cwtl
push
je
sbb
insl
jl
fst
fwait
test
cmp
outsl
test
mov
daa
popf
and
mov
push
cli
mov
sub
call
stc
mov
xchg
and
clc
sub
aaa
dec
insl
mov
lcall
jmp
dec
and
rol
test
add
fisubl
push
pop
xchg
fwait
in
mov
fwait
add
into
dec
les
and
jl
inc
enter
out
mov
scas
xchg
popl
add
add
insl
sub
fs
gs
and
and
lahf
notb
negb
js
cmp
das
ret
iret
mov
sbb
pop
out
das
iret
adc
mov
mov
outsl
mov
push
xor
mov
mov
imul
jns
or
mov
addr16
out
sub
mov
dec
adc
pop
insb
fcmovb
lock
mov
aaa
xchg
lret
stos
push
mov
das
jmp
fucomi
adc
dec
sbb
inc
sbb
pushf
inc
add
out
movsl
out
mov
mul
sub
xor
mov
inc
movsl
pushf
sbb
shrl
dec
or
inc
int3
mov
nop
shl
sbb
and
jmp
in
sbb
ficoms
push
push
add
jmp
in
mov
imul
mov
mov
mov
dec
insl
out
sub
or
dec
fldl
add
jmp
dec
fcmove
hlt
add
mov
dec
sub
test
xchg
jno
movsw
push
push
or
add
adc
adc
outsb
in
inc
daa
mov
pop
cmp
xor
ficoms
arpl
sbb
lds
adc
cmp
or
mov
mov
mov
dec
loop
rorb
loop
shlb
movsl
or
dec
test
popa
lock
or
sbb
xor
inc
fs
inc
aas
adc
mov
pop
or
movsl
dec
hlt
aaa
sbb
sti
rorl
insb
repnz
cmp
jns
xor
push
mov
xor
mov
stos
mov
push
mov
add
setno
cmpsb
out
pop
xchg
es
jne
mov
pop
cwtl
daa
fsubs
xchg
movsl
dec
hlt
adc
notb
inc
popf
lahf
xchg
pushf
cmp
fistpll
fmuls
mov
sbb
fcomps
out
test
and
mov
push
cld
icebp
fwait
adc
mov
lods
stos
std
pop
mov
icebp
dec
fisubrl
movsb
in
lret
test
pop
addr16
gs
ret
cmp
jnp
sbb
sbb
xor
lret
push
nop
cltd
cmc
sahf
sub
mov
int
add
mull
xchg
push
fwait
repnz
jecxz
outsl
push
inc
out
xor
push
dec
mov
mov
push
mov
mov
inc
loope
rol
hlt
pop
cmp
jl
rclb
lds
pop
lds
testl
cmp
cmp
imul
pop
xchg
rcrl
lds
bnd
push
jle
ds
adc
xchg
mov
push
jle
ss
adc
jno
sbb
xor
aaa
push
ljmp
fstp
and
add
push
leave
dec
and
xchg
subb
or
lret
push
cmp
ret
iret
or
daa
jmp
jne
mov
fwait
in
call
mov
rclb
sti
cmp
lahf
aaa
xor
add
js
pop
lods
xchg
or
mov
sub
pop
jnp
cli
push
mov
lcall
imul
mov
mov
imul
scas
lcall
shll
loope
mov
fsubrs
nop
sub
sti
imul
movsb
test
sbb
push
add
mov
stos
ljmp
mulb
mov
lock
and
xor
sbb
lock
xchg
xor
das
mov
mov
cmp
or
fwait
xchg
clc
jo
push
aad
je
dec
enter
sarb
jbe
in
sub
and
adc
or
add
cmpsb
scas
out
fwait
cmp
repnz
es
xlat
int
inc
aad
int
inc
faddl
jl
inc
sbb
dec
mov
call
sbb
pusha
push
sahf
pusha
xchg
push
fstl
rcrb
addl
mov
jge
sahf
fdivp
rolb
rolb
sar
push
ja
std
test
outsb
popa
inc
or
outsb
xor
xorl
mov
insb
jo
bound
sbb
add
sub
stos
push
outsb
xchg
add
push
shl
xchg
add
fxch
andl
stc
int
daa
scas
and
adc
mov
cmp
cmp
xor
cmp
jns
mov
xor
out
iret
and
jmp
iret
pusha
nop
fimuls
cmp
mov
leave
lods
push
dec
add
daa
xor
sub
push
movsb
add
movsl
push
sub
cmc
dec
add
xchg
ss
stos
cmp
out
cltd
popf
sahf
pop
sub
fmulp
xchg
jp
sbb
fstl
rolb
cmp
imul
fiadds
xor
cld
push
ja
out
test
outsl
cmp
pushf
mov
fs
push
or
fcomps
lret
fs
repnz
cmp
out
mov
gs
cltd
rorb
xchg
ret
pop
aas
sbb
xchg
xor
or
sbb
push
outsl
sub
xchg
rcrl
movsl
scas
sahf
xchg
add
incl
mov
loop
addr16
les
lahf
test
jno
mov
out
jae
pop
push
mul
mov
lock
push
push
insl
xchg
lcall
mov
pop
cltd
sbbb
lods
sbb
and
jp
pop
xor
inc
shrl
test
iret
fwait
shr
stos
es
stc
insl
mov
ja
jmp
ficoml
xor
add
xor
std
xchg
aaa
dec
pop
cli
iret
xchg
movsl
jge
cltd
shr
mov
inc
xchg
vpunpckhqdq
sbb
mov
notb
push
lods
inc
pop
mov
or
pop
pop
pop
add
testb
inc
or
iret
aaa
dec
icebp
call
enter
pop
sub
xor
add
andb
inc
cld
out
push
gs
inc
push
pop
in
adc
and
fldl
mov
daa
dec
daa
les
in
ret
sarb
dec
popf
hlt
mov
in
xchg
push
inc
sahf
inc
cmp
mov
jl
test
mov
cmp
fs
lock
push
mov
pushf
mov
or
jmp
or
inc
push
cmp
rcrl
sbb
jge
stos
mov
lahf
push
mov
out
and
xchg
mov
gs
sbb
nop
and
test
fidivl
cwtl
call
add
inc
pop
arpl
rorb
mov
stos
hlt
mov
or
stos
negl
xchg
int3
mov
inc
das
out
hlt
mov
cwtl
and
cwtl
cmpsl
pop
pusha
sbb
and
mov
testb
int3
add
test
ljmp
sub
or
or
ja
insl
jecxz
cwtl
pop
sbb
jmp
mov
inc
and
je
xor
sub
jl
fwait
jl
subl
xchg
jb
andb
pushf
pop
dec
mov
lret
adc
shlb
imul
aas
adc
rcl
cltd
pop
in
lret
inc
jp
mov
loopne
sub
sbb
lods
inc
xor
cmpsb
sub
movsw
int
adc
sti
mov
xchg
hlt
sar
or
loope
out
mov
pop
and
dec
xchg
inc
adc
cmp
cli
mov
sbb
fs
cmpsb
test
movsl
stos
lods
push
leave
xchg
cmp
cltd
or
sub
mov
inc
in
mov
cwtl
rcrb
in
cld
sbb
sahf
dec
int
leave
push
dec
addr16
cli
mov
mov
jns
shlb
pop
orb
cld
add
add
sbb
jmp
test
pop
in
aam
or
or
call
push
gs
push
dec
xchg
jmp
shlb
in
outsb
scas
data16
mov
jnp
icebp
out
seto
add
xchg
xchg
dec
repz
repnz
aaa
xor
cli
lahf
mov
int
inc
dec
mov
in
cwtl
movsl
inc
jb
and
leave
lods
cmp
mov
test
sti
lahf
mov
sub
ljmp
sub
pop
faddl
jge
push
je
push
mov
mov
add
mov
lock
out
sbb
pop
movsl
shll
loop
pop
or
cmp
sbb
sub
cwtl
xorb
daa
les
sbb
push
adc
mov
call
in
loope
and
push
sub
cmp
fistpll
outsl
daa
jae
cmp
mov
pop
or
and
imul
out
sahf
mov
imul
push
mov
mov
mov
and
es
faddl
cmpsl
aaa
in
mov
pusha
jl
jae
lods
test
adc
push
fisttpl
jl
jl
jmp
push
lahf
dec
repnz
mov
or
in
mov
div
push
adc
fisubl
mov
daa
xchg
and
out
or
jl
cmpsb
jb
xchg
cli
nop
shrl
or
outsb
es
jecxz
test
sbb
sub
push
mov
cmpsl
fwait
push
pop
icebp
mov
push
dec
outsb
in
nopl
jge
and
xchg
test
xchg
pop
orl
xchg
mov
loopne
imul
stos
lock
add
loop
addr16
push
xchg
push
xor
xchg
jmp
xor
into
sbb
out
xor
adc
xchg
sub
push
pop
dec
and
add
lcall
push
sub
xchg
mov
fimull
push
lods
cmpsb
pop
and
sub
lds
dec
inc
scas
inc
scas
mov
loopw
push
cli
into
arpl
stos
sahf
out
pop
mov
or
in
or
movsl
enter
inc
sbb
adc
icebp
xchg
mov
inc
in
xchg
mov
fucomp
fcmovnbe
popa
cmp
leave
xor
add
test
mov
or
add
jmp
sub
fcompl
lcall
arpl
sub
mov
inc
mov
adc
mov
add
in
jns
or
in
pop
movsb
fildll
adc
and
loop
movsb
jbe
insl
or
mov
mov
mov
pop
out
cmpsb
push
movsl
xlat
cld
jecxz
hlt
mov
in
or
addl
xor
mov
outsl
sub
ljmp
ja
sub
leave
int3
aad
adc
xrelease
pop
push
arpl
xor
int3
out
pop
cmp
push
mov
cmp
push
mov
pop
movl
outsb
aaa
mov
push
dec
or
adc
and
nop
add
ret
nop
ror
or
repz
or
jg
roll
add
pop
ret
ss
push
sub
adc
sub
or
sahf
lock
cwtl
mov
stos
cmp
sub
xchg
sub
dec
and
cmp
test
fscale
pop
fwait
mov
icebp
inc
xor
mov
mov
xchg
es
mov
push
mov
push
and
pop
fcmove
fdivrp
sbb
repnz
or
push
mov
sub
jnp
mov
pop
imul
mov
jmp
fs
andb
sbb
sbb
test
pop
adc
sub
add
and
ja
test
scas
shrb
sub
add
es
movsl
dec
push
add
xor
andl
push
mov
scas
xorb
int3
out
shlb
sbb
or
je
or
push
mov
shrl
fiadds
jmp
push
cmp
enter
dec
mov
inc
pop
adc
movsl
out
lahf
icebp
outsl
mov
push
mov
and
mov
rorb
scas
or
aaa
lock
or
out
jecxz
mov
test
notb
mov
pop
adc
add
push
and
sbb
mov
and
cmp
jecxz
sbb
xchg
mov
add
inc
push
dec
inc
sub
pop
sub
lock
xor
pop
xor
lahf
fnstcw
cmp
push
daa
inc
movsl
jle
pop
bnd
repz
lods
fs
xor
add
rcrb
xchg
xchg
sub
jle
daa
bnd
es
js
cmp
bound
ficomps
pop
add
cs
and
out
cli
push
out
sbb
lock
mov
shlb
mov
adc
or
aad
movsl
inc
mov
lock
subb
add
movsl
pop
lods
mov
mov
test
xor
fimull
fisttpll
mov
xchg
bnd
sbb
mov
sbb
or
and
xor
mov
movsl
clc
lahf
out
lock
cld
sbb
xchg
cmp
xor
mov
xlat
getsec
scas
int3
div
lods
lock
ret
pop
xchg
daa
jmp
imul
test
fs
or
stos
pop
test
cld
push
mov
stc
es
in
shlb
ljmp
cwtl
fidivl
mov
mov
jmp
ss
fcoml
test
xor
push
jbe
sub
mov
dec
cltd
sbb
push
daa
fdivs
push
xchg
dec
jb
mov
jmp
lea
daa
and
popf
addr16
mov
add
cmc
cld
int
notl
add
mov
mov
or
cltd
pushf
sahf
lcall
out
aas
fstpl
in
out
mov
cmp
jl
rcll
out
daa
cmp
jae
mov
pop
in
mov
addr16
mov
push
jmp
dec
push
push
aas
repnz
stos
mov
and
dec
push
push
fs
outsl
sbb
fisttpl
insl
fs
ret
inc
jg
call
dec
jl
jge
sbb
ror
jnp
cli
inc
push
or
cld
fstpt
adc
pop
imul
push
xchg
loop
xchg
bound
cmp
inc
in
fisttpll
dec
sub
ret
fsub
popa
inc
loop
bound
pop
mov
pusha
or
pusha
cli
popa
sbbb
hlt
push
xchg
sub
mov
mov
push
mov
dec
jl
push
cmp
cmp
mov
inc
dec
mov
inc
mov
xchg
cld
int3
ds
js
cmp
sbb
loop
movsl
push
mov
xor
es
fs
andb
push
rorl
call
cwtl
add
lds
or
xchg
arpl
xchg
sbbl
aas
add
in
mov
jl
jnp
stos
data16
aaa
sub
lock
xor
and
fstl
test
sbb
les
out
jl
sbb
adc
sub
xchg
inc
outsl
daa
fsubl
add
cmp
sub
lods
test
sarb
xchg
inc
ss
in
add
pop
leave
lods
outsb
push
mov
nop
xchg
inc
xchg
out
fsubs
push
sub
enter
int3
pushf
movsb
shlb
les
adc
jge
mov
mov
subl
repnz
jae
fucomi
xorb
enter
push
mov
data16
call
pop
fstp
push
clc
imul
lock
insl
icebp
push
data16
xor
sbb
es
cmp
shr
xlat
or
xor
mov
add
xchg
movsl
int
jbe
stos
out
cli
mov
sub
leave
dec
jge
pop
sahf
and
test
insl
mov
imul
aaa
xchg
shll
pop
bound
mov
iret
jp
loopne
mov
dec
cmc
xor
mov
in
adc
xorb
sarb
add
mov
lods
imul
sub
jo
dec
and
into
mov
mov
mov
lods
call
jno
push
movsl
int3
dec
and
push
out
xchg
sbb
mov
sbb
scas
nop
mov
push
sbb
cltd
jecxz
cmp
xor
jg
lock
arpl
shll
imul
cmp
pop
xor
lods
xor
sub
loopne
fs
push
inc
jb
cmp
leave
sub
jmp
test
jmp
enter
in
jl
into
add
data16
jbe
lods
fisubrl
cmp
dec
pop
cmp
out
mov
daa
decb
push
or
pop
cmp
mov
pop
loop
stos
imul
adc
mov
daa
push
bound
jl
gs
jecxz
pop
out
shrb
cmpsb
cmpsb
daa
jecxz
inc
rclb
mov
jge
dec
adc
sub
inc
fwait
aaa
cld
mov
and
cmp
mov
or
mov
dec
cwtl
adc
cmpsl
and
les
dec
lret
out
in
ret
dec
int
ja
sub
jnp
mulb
cmp
dec
lahf
jmp
jle
mov
sbb
lock
sub
and
inc
cli
push
mov
mov
adc
test
mov
rorl
and
pop
and
xchg
xor
or
nop
jo
pushf
scas
repz
mov
inc
sbb
pop
cli
sbb
pop
sub
stos
pop
or
pop
scas
test
popa
cli
push
xchg
sub
lret
sub
adcb
jo
and
ror
pop
cmp
add
push
sub
imul
mov
data16
cmp
jge
cmp
jle
mov
push
sarl
mov
mov
push
imulb
cli
movb
adc
cmpsb
hlt
mov
imul
lret
mov
add
in
data16
jno
adc
or
lock
mov
es
mov
sub
lds
jns
cmp
mov
or
outsl
dec
pop
push
pop
or
dec
popl
insl
pop
test
ret
mov
and
push
and
mov
outsb
mov
arpl
enter
pushf
xchg
mov
es
cmp
dec
xchg
sub
push
push
int3
mov
mov
mov
inc
mov
mov
mov
comiss
test
xchg
repz
or
cld
mov
faddp
xchg
enter
test
aas
addr16
loop
mov
lahf
jmp
int
inc
sub
cld
aaa
ljmp
int
jns
out
cmp
dec
mov
sbb
push
arpl
cmpsl
pop
out
loop
mov
imul
nop
fidivrl
and
out
leave
pop
adc
sub
shll
dec
or
cmp
add
sub
in
add
sbb
loop
in
adc
cld
out
xchg
ljmp
mov
and
rcrl
sub
scas
mov
adc
sub
dec
xor
out
jl
pop
test
pop
int
rol
cmp
mov
int3
aas
xlat
les
cld
mov
or
aad
shll
xor
bound
scas
scas
scas
das
shrl
enter
add
adc
in
sahf
xor
les
test
or
stc
mov
or
cmp
ljmp
lahf
inc
sub
lea
stos
loop
push
loop
decb
arpl
mov
sub
sbb
xchg
xchg
xor
mov
push
lock
mov
out
fidivrs
in
mov
xor
aas
in
or
repnz
cmp
sbbl
rcrl
out
mov
cld
sub
mov
in
push
nop
xchg
xlat
lods
cmp
nop
aaa
pop
and
push
xor
roll
or
lahf
push
sbb
xor
add
shll
sbb
mov
cmc
jl
jne
pop
xchg
or
or
insl
call
fistps
orb
mov
fimull
rcr
sub
gs
movsl
mov
push
int3
in
jmp
xor
hlt
ds
outsb
rorl
iret
xchg
jnp
cmpl
xlat
daa
sub
in
mov
mov
sbb
push
out
and
mov
test
pop
ss
sbb
xor
sub
dec
dec
fwait
pop
add
mov
in
lods
and
pushf
pop
pop
in
or
pop
mov
mul
fwait
or
lods
jmp
push
lret
xor
inc
pop
cmp
lea
out
pop
ljmp
jmp
sar
ret
xor
cmp
xor
imul
cmp
nop
lcall
xchg
cmpsb
daa
dec
gs
pushf
mov
pop
add
pop
call
cmp
decb
sub
nop
outsb
lock
and
xor
ss
in
ds
decb
bswap
sub
cmpsb
bound
push
or
repnz
dec
stc
dec
bnd
ss
out
frstor
in
mov
add
jmp
mov
lcall
inc
movsl
clc
lods
and
fwait
loop
mov
dec
lds
test
test
shrl
xor
xchg
jmp
sub
xchg
xchg
xor
mov
imul
xor
in
xor
sarb
repz
pop
adc
jb
mov
rorb
push
xor
sub
jae
stc
jl
daa
cwtl
nop
xchg
aaa
lcall
clc
bound
mov
pop
xor
call
sahf
cmp
loopne
int
adc
cmp
stos
mov
lcall
icebp
mov
mov
xor
mov
push
inc
fbstp
int3
cld
mov
sub
fistps
and
jecxz
arpl
test
leave
mov
lret
in
shr
add
sbb
addr16
sbb
ds
int
sub
stos
nop
pop
sbb
dec
btr
mov
hlt
push
jae
jbe
in
test
mov
mov
cmc
add
mov
aad
cwtl
out
mov
jno
lahf
aas
mov
add
scas
setns
mov
sbb
adc
int
lds
mov
and
leave
sub
mov
movsl
sub
out
ret
or
sbb
xchg
and
cld
pop
cmp
in
mov
and
shlb
adc
enter
stc
cld
lea
jg
mov
loop
add
sbb
mov
out
jmp
add
lock
icebp
push
in
mov
and
call
push
jmp
pop
es
push
dec
inc
movsl
sahf
jg
stos
mov
sbb
ja
lahf
daa
add
cmp
or
mov
rcr
int3
aas
mov
mov
inc
in
mov
sahf
icebp
mov
inc
nop
icebp
add
fdivp
out
gs
and
icebp
mov
insl
push
add
and
je
test
dec
mov
aad
dec
mov
dec
lods
cmp
decb
xchg
pop
mov
cs
mov
testb
inc
repz
add
xor
mov
cmpsb
mov
xchg
xchg
pop
aad
push
mov
pop
sbb
mov
xor
fadds
andl
pushf
and
fbld
inc
aam
in
or
add
test
or
out
addr16
hlt
add
inc
mov
out
sbb
cmpsb
out
and
mov
nop
sub
mov
repz
push
mov
mov
mov
xchg
icebp
xor
test
push
cli
push
in
xor
jmp
sub
sbb
mov
or
pop
shl
jmp
aaa
jp
cmp
insl
sub
pop
xchg
xor
or
cld
outsb
out
stos
cmp
adc
subl
jo
popf
addr16
add
std
iret
sbb
xor
filds
aad
xchg
das
mov
pop
pop
add
mov
inc
movsl
test
push
xor
mov
add
jnp
insl
outsl
out
pop
xor
hlt
rorb
xchg
iret
lods
lock
jmp
dec
jp
cmp
testl
jo
add
aaa
test
lock
adc
ss
insl
shrb
fcmove
int3
insb
sti
mov
out
imul
dec
sub
push
sbb
xchg
push
adc
xor
mov
fstps
orl
cmp
movsl
sbb
mov
lock
les
popl
stos
jecxz
out
inc
nop
and
test
xor
sbb
and
add
jnp
pop
and
sub
test
or
in
cmpsb
es
out
mov
icebp
pop
out
xchg
out
xchg
in
in
nop
sahf
pop
xor
mov
in
or
pop
movsl
scas
push
add
popf
test
mov
out
pop
mov
jecxz
add
cwtl
sbb
lock
sbb
pop
cmp
xor
test
fiaddl
jl
xor
mov
mov
je
mov
jecxz
or
es
aaa
pop
xchg
xchg
xchg
mov
insl
mov
jmp
sbb
mov
and
add
xor
scas
fsubs
int3
imul
leave
cltd
mov
cmp
add
xchg
out
inc
mov
cmpsb
movsl
out
arpl
outsb
and
or
insl
fstp
push
mov
jns
in
icebp
cmp
je
cmp
sub
loope
push
daa
sub
jp
push
popl
xchg
sub
in
and
fnstenv
ds
adc
add
dec
xchg
mov
call
pushf
push
daa
fidivrl
adc
pop
nop
lea
sub
xor
test
jne
out
push
out
js
addl
mov
xchg
add
shlb
mov
gs
and
xchg
mov
dec
cmp
cld
add
pop
add
adc
adc
repnz
shl
mov
fnstenv
mov
gs
pop
mov
and
or
xlat
imul
or
push
cmpsb
dec
pop
xor
pop
push
aas
bnd
add
mov
cli
mov
mov
loop
pop
push
jmp
icebp
xchg
out
repnz
push
outsl
lock
pop
mov
push
lods
mov
or
adc
xchg
add
xchg
mov
in
sbb
pusha
cmpsb
outsl
xchg
movsl
cmpsl
lods
inc
lods
cmp
movsl
mov
imul
sbb
jmp
cmp
js
mov
add
mov
adc
xchg
sub
mov
push
cld
ror
cmp
cmp
mov
lods
push
movsb
mov
or
mov
daa
cwtl
mov
sbb
sub
rorl
clc
add
xor
add
call
pop
sub
mov
or
push
pop
inc
add
pop
jecxz
and
test
sub
mov
fidivrl
xor
mov
sbb
or
movsb
add
repnz
in
mov
nop
test
fwait
sarb
cmp
pop
lock
not
jmp
dec
ficoml
icebp
jg
fwait
ljmp
test
jle
out
mov
push
sbb
test
out
mov
sub
mov
addb
out
cmp
mov
inc
xchg
filds
ds
inc
insl
mov
orl
fcoml
out
shl
test
pop
jo
inc
nop
dec
pushf
mov
insl
adc
lock
repnz
mov
fsubrl
mov
jp
stos
test
jae
andl
push
push
xor
add
scas
mov
inc
jle
sub
dec
movsl
dec
pop
lcall
ljmp
jb
imul
lahf
xor
outsb
xor
mov
push
icebp
aam
xchg
lret
rcll
in
imul
push
outsl
push
fidivl
push
scas
pop
call
xchg
xchg
mov
pop
sub
rcrb
ficomps
mov
add
mov
sbb
and
mov
lods
mov
call
jns
sub
ds
out
rorl
adc
and
sub
imul
mov
or
pop
leave
or
ljmp
or
insl
mov
lahf
sub
test
mov
mov
es
and
clc
lea
sub
pop
inc
xchg
fmulp
sub
mov
int3
or
cmp
sbb
ret
fisubl
outsb
mov
neg
aam
xlat
mov
aaa
aaa
mov
mov
out
daa
jmp
and
ss
and
aad
and
ss
sti
icebp
out
sub
mov
in
mov
out
es
and
inc
and
popa
sbb
mov
hlt
call
mov
sub
ljmp
push
xchg
gs
sbb
cltd
hlt
mov
sub
loop
mov
sbb
ficomps
int3
mov
xlat
addl
outsb
inc
xchg
icebp
sbb
push
mov
mov
jnp
sub
outsb
dec
outsl
push
insl
mov
mov
mov
mov
adc
das
sbb
shll
pop
test
hlt
push
adc
adc
cli
sbb
sbb
or
or
sub
push
add
mov
movsl
mov
mov
sbb
mov
in
mov
cli
negb
xchg
outsl
sahf
xchg
out
cmp
push
outsb
vpsllw
pop
ss
iret
cmp
js
fnstenv
sarb
xor
inc
cmc
mov
mov
adc
negb
lahf
jns
or
and
and
pop
inc
fwait
xor
mov
xor
add
or
mov
ret
shlb
lcall
repz
lret
jne
dec
jae
xchg
lcall
add
repz
cmp
sbb
repz
jecxz
xchg
shlb
xchg
lock
mov
mov
ret
mov
jnp
mov
ds
jmp
mov
mov
inc
xchg
mov
repz
inc
cltd
mov
mov
dec
push
cltd
mov
or
insl
sbb
iret
jae
paddsw
movsb
pop
aaa
icebp
mov
pop
push
xor
call
cli
and
and
push
fucom
aad
dec
mov
arpl
dec
xchg
nop
mov
push
mulb
add
xor
lods
mov
cmp
sar
push
push
cmpsb
and
cmp
mov
cli
and
mov
pop
popa
insl
mov
mov
cli
test
push
or
sub
or
movsb
mov
xchg
in
insl
shl
push
jo
push
push
mov
cld
xor
test
or
repnz
dec
add
int3
fisubl
push
mov
pop
lock
movsl
ficompl
inc
hlt
xorl
mov
and
push
dec
push
add
movb
mov
in
sub
cmp
or
imul
pop
jne
scas
cmpsb
faddp
mov
subl
inc
add
insl
sbb
lcall
dec
mov
test
or
cli
push
addb
nop
arpl
mov
fwait
or
out
insl
mov
sbb
lcall
push
xor
pop
jmp
test
inc
movsl
mov
mov
lock
or
pop
push
daa
push
cli
roll
shlb
mov
sbb
mov
lcall
push
aas
sub
andb
lds
stos
jo
lds
pushf
cwtd
and
out
xchg
jmp
sti
cli
outsl
aam
mov
sbb
sub
xor
iret
roll
mov
cmp
bnd
jge
fisubl
sahf
int3
fst
aad
dec
and
mov
mov
mov
sbb
add
mov
fisubrl
pop
dec
mov
xchg
outsl
in
test
dec
out
rorb
push
std
ror
mov
adc
cmpsb
pushf
and
adc
cmp
test
mov
mov
mov
or
and
dec
aad
test
mov
push
dec
xchg
fadd
ds
xacquire
mov
lret
adc
xchg
xchg
loop
xchg
inc
aaa
push
leave
cli
mov
lods
cld
pop
movsl
add
push
sbb
pop
iret
cmp
gs
and
and
aaa
mov
shll
sbb
xor
push
push
cmp
jne
mov
push
push
or
and
setns
lock
fwait
lock
pop
bound
sub
shll
mov
add
cmp
repnz
xchg
jmp
pop
ficompl
push
xor
mov
jmp
fisttpll
data16
jmp
mov
jle
in
mov
inc
xchg
pop
mov
daa
cld
sbb
gs
xchg
push
or
and
or
xor
pop
int
fstps
dec
pop
lock
lock
jno
or
sub
add
out
stos
push
bound
out
movsl
js
pushf
or
pop
and
loope
xchg
into
jp
sub
lret
cltd
and
xor
cmpsl
jns
sbb
ret
add
in
pop
push
xor
in
jno
aas
frstor
fistl
imul
popf
dec
add
out
arpl
pop
and
insl
mov
mov
sbb
daa
and
lret
repnz
add
xchg
add
push
outsl
imul
mov
inc
push
pop
push
jecxz
test
outsl
xor
mov
test
push
xchg
fistl
popa
and
in
add
sti
sub
ficompl
xor
aaa
push
cs
pop
hlt
nop
into
imul
out
jecxz
mov
xor
mov
sub
lcall
jecxz
mov
arpl
mov
cli
push
sahf
stc
mov
int3
xchg
xor
lea
pop
test
fcmovnbe
in
xchg
add
test
push
mov
mov
mov
inc
sbbl
movsl
and
out
into
sbb
gs
mov
and
xor
into
inc
add
outsb
data16
les
lods
jecxz
mov
and
xor
test
les
fldenv
and
addr16
push
sub
sbb
xchg
jge
in
jl
xchg
les
mov
lahf
jo
icebp
dec
mov
repnz
xlat
dec
mov
or
imul
mov
les
pop
mov
mov
shr
call
sbb
sbb
arpl
sbb
mov
jmp
inc
out
or
pop
test
pop
xchg
out
xchg
dec
imul
and
clc
inc
and
cltd
pop
fiaddl
jmp
push
test
mov
arpl
aad
inc
sub
jp
lahf
jmp
add
add
fisttps
or
rcrb
pop
mov
movsl
dec
insl
add
xor
mov
mov
mov
out
adc
and
and
repz
cltd
fimull
aaa
pop
push
lahf
mov
add
ljmp
sub
pop
test
push
adc
shlb
dec
int
xor
lods
cmp
mov
es
imul
xchg
xchg
out
dec
shr
add
sbb
fstpl
sub
inc
sbb
add
xor
lcall
jmp
jns
roll
lds
cmp
enter
and
idivb
sub
add
jmp
scas
adc
push
xchg
push
fwait
ret
jl
out
nop
push
jno
sbb
shl
imul
mov
sbb
cmpsl
fdivrl
sbb
mov
aas
sbbb
insl
dec
clts
lock
mov
jne
fs
mov
mov
repz
stc
data16
imul
lods
imul
lret
mov
outsb
fwait
sti
or
jle
imul
rorb
pop
cmp
mov
mov
fldl
ja
jmp
push
jl
mov
in
pop
xchg
sar
or
jae
mov
sbb
add
insl
mov
icebp
insl
out
lock
and
pop
sub
push
in
fildll
and
test
test
call
inc
mov
sub
mov
xchg
xor
xchg
je
fnstsw
out
scas
test
xchg
dec
int
inc
in
jmp
sahf
push
sub
leave
pop
pop
mov
xchg
cmpsl
pop
fdivrl
adc
push
xchg
sub
sbb
std
mov
xorb
hlt
arpl
outsl
mov
bound
cmpsb
lds
cltd
bound
ret
push
div
imul
icebp
cmc
mov
lret
call
cmp
imul
or
push
popf
pop
cmpsb
pop
mov
stc
mov
adc
mov
push
sbb
or
jl
sarb
icebp
or
or
das
push
sub
jb
cmp
adc
pop
movsl
lret
and
cli
mov
fildll
mov
sub
pop
xchg
jae
mov
in
cwtl
scas
pop
dec
xor
cmp
out
fdivrs
cld
nop
jae
in
movsb
mov
sahf
xchg
mov
lock
sbb
aas
lock
ficompl
out
ljmp
pop
adcb
lahf
inc
mov
test
addr16
xor
lock
mov
stos
shrl
fiaddl
push
rclb
cltd
fstpl
xor
movsl
mov
push
adc
add
out
xor
xchg
ja
insl
push
test
into
mov
mov
fwait
xor
sub
aad
dec
push
mov
mov
sub
inc
or
mov
xchg
cmp
rcr
or
insl
xchg
push
mov
addr16
dec
out
inc
adc
add
lahf
sbb
mov
pop
mov
xchg
cmp
adc
sbb
popf
xchg
mov
dec
sub
mov
mov
sbb
fdivrl
dec
dec
nop
orl
push
jo
dec
mov
arpl
jmp
fidivl
out
es
fldt
popa
add
es
movsl
outsl
dec
sbb
add
fwait
mov
insl
xor
out
mov
fidivrl
fwait
bound
mov
aaa
mov
sahf
clc
movsl
cwtl
rcrl
loopne
adc
cmp
jae
or
mov
dec
lods
data16
in
mov
out
gs
pop
xchg
add
icebp
or
int3
stc
dec
jne
repz
sbb
push
jecxz
cmpsb
out
mov
push
push
movsl
inc
lods
pop
outsb
call
roll
mov
jecxz
lcall
xor
mov
push
gs
int3
mov
push
lods
xor
xor
sahf
ficoml
inc
and
filds
adc
push
or
mov
insb
cli
dec
das
inc
cmp
test
and
add
sub
arpl
xchg
xor
leave
or
and
jnp
mov
or
movsl
mov
mov
xor
imul
leavew
pop
sub
add
jmp
or
mov
push
stos
aas
mov
xchg
gs
mov
lahf
inc
or
pop
mov
add
imul
add
push
cmp
xor
xchg
dec
mov
sahf
and
cli
shrb
lock
adc
stos
push
scas
mov
dec
dec
add
sub
loop
out
mov
int
out
ror
out
push
adcb
movsl
cmp
sub
jmp
fisttps
mov
mov
movsl
inc
lods
mov
mov
stos
adc
stos
sahf
mov
push
ror
cli
sub
cmp
jl
sbb
test
lock
pushf
xchg
movq
mov
stos
das
out
mov
sahf
cmpsl
mov
ss
lcall
xchg
add
xchg
test
mov
inc
fidivrs
cmp
icebp
sbb
dec
sub
jbe
icebp
sarb
sbb
fs
push
xlat
cmp
icebp
push
add
out
shrl
add
clc
out
daa
int3
lea
repnz
clc
and
dec
xchg
sbb
sahf
lret
leave
cli
mov
imul
jbe
xchg
lret
cmpb
inc
jp
and
fcomi
or
movsl
push
hlt
mov
int3
repnz
sub
ret
push
add
jbe
jmp
mov
xchg
sbb
push
sub
cli
sbb
xchg
jns
ljmp
pop
mov
cmp
aaa
ds
vhaddps
stos
stos
xor
and
xchg
leave
int
dec
mov
inc
mov
inc
adc
cmp
out
setno
mov
icebp
cmp
jo
or
daa
dec
mov
into
xchg
test
mov
cwtl
lock
out
jecxz
aaa
sub
cli
push
pop
sbb
testb
mov
adc
push
lretw
add
mov
or
fmull
lahf
call
mov
sub
cmp
lret
cmpsl
mov
lcall
fwait
jmp
outsl
and
loop
hlt
jp
jne
out
cmp
aad
int
inc
jns
mov
pop
cli
call
mov
lahf
sahf
subb
push
insb
mov
ss
pushf
int3
loop
or
ret
dec
mov
iret
cmp
inc
mov
xor
mov
mov
adc
das
stc
shll
shll
mov
fists
leave
mov
lret
inc
adc
mov
fimull
push
fiaddl
cmp
aaa
mov
icebp
and
cmp
dec
push
jg
sub
scas
gs
mov
adc
call
rcrl
adc
out
xchg
leave
jl
shlb
mov
mov
data16
push
or
jo
arpl
iret
int
cwtl
vhsubps
cmc
inc
mov
movsl
repz
add
aas
cli
mov
mov
insl
sub
mov
jo
icebp
xchg
or
lods
jbe
sbb
fidivl
and
dec
cmp
insl
test
adc
daa
jmp
es
mov
aas
or
pushf
add
stos
push
aam
stos
mov
lcall
jno
or
jecxz
xor
and
push
bound
jecxz
push
push
mov
mov
jo
test
lds
cmp
stos
mov
and
out
sbb
sbb
lock
cmp
hlt
add
gs
xchg
push
icebp
or
data16
lret
dec
or
mov
mov
sub
or
in
data16
data16
mov
or
mov
movzbl
push
mov
and
dec
xchg
mov
in
insl
xchg
pushf
or
or
daa
push
cltd
fninit
stos
fs
sbb
test
popa
sub
insl
pop
pusha
xchg
loope
xchg
std
insb
jmp
mov
cmp
fidivrs
insl
mov
mull
mov
ja
push
pop
push
mov
sbb
jb
ss
mov
or
test
add
add
test
cmp
stos
dec
ja
call
pop
pushf
nop
or
repnz
div
idivb
sbb
insb
cmp
fwait
in
pop
jnp
stos
push
mov
cmp
fwait
nop
out
mov
cmp
out
add
pop
dec
cld
mov
gs
nop
insl
fisubrl
or
pop
add
xor
add
mov
and
addb
pop
and
lcall
and
mov
sti
push
adc
es
mov
mov
push
inc
icebp
gs
adc
test
and
lea
icebp
ret
add
cmc
inc
dec
call
and
cwtl
xchg
sub
lret
inc
jp
sbb
lock
inc
movl
cmp
and
or
jmp
inc
xchg
hlt
sahf
cs
sbb
mov
cmpb
mov
fcomi
mov
popa
shrl
es
insl
stc
adc
sbb
lahf
mov
push
insl
addl
andb
pop
aas
jmp
and
fisttpl
adc
fcomi
or
xor
and
mov
icebp
sub
push
xchg
adc
mov
adc
mov
fwait
mov
leave
sub
push
ds
push
and
push
and
or
insb
jmp
jae
test
jbe
call
mov
mov
dec
or
ja
sub
or
or
lea
pop
mov
mov
sbb
shl
mov
lea
jbe
fiadds
mov
in
loope
mov
dec
sub
push
adc
es
mov
cltd
mov
in
xchg
out
negb
or
push
sbb
icebp
iret
mov
daa
fimuls
sub
je
or
mov
adc
shr
push
cmp
in
das
imul
pushl
out
fwait
enter
cmp
rorb
mov
sbb
pusha
pop
mov
add
mov
popf
outsl
mov
and
mov
inc
push
xchg
bnd
mov
mov
jns
testl
add
mov
scas
push
in
push
mov
iret
sub
jae
mov
pop
cmp
mov
addb
push
xor
push
mov
lcall
adc
insb
xchg
sbb
cmp
loop
mov
xchg
icebp
pop
dec
cmp
movsl
inc
test
xchg
lcall
sbb
ss
cmp
pusha
cli
cmp
hlt
into
xchg
mov
aaa
sbb
iret
pop
xchg
shl
stos
lock
inc
test
mov
sbb
push
or
and
sbb
iret
pop
mov
cmp
hlt
fcomip
out
scas
xchg
sub
mov
mov
leave
mov
xor
andl
jb
push
cltd
and
jmp
xchg
cld
xchg
or
cld
sar
pop
scas
xchg
jmp
out
push
mov
fstpt
and
ljmp
xchg
jl
push
out
and
sub
sub
push
pop
addr16
fmuls
dec
mov
cmc
push
xchg
push
xchg
lcall
ljmp
cmpsl
jb
cmp
jo
lods
movsl
sub
rcrl
mov
add
adc
mov
imul
push
lods
test
out
xchg
jecxz
jmp
fisubrl
js
sub
mov
inc
sub
mov
mov
dec
sub
mov
mov
out
in
push
mov
and
and
nop
lcall
dec
insl
or
mov
lcall
or
and
mov
daa
ret
daa
jb
scas
mov
movhps
fidivrl
sub
mov
and
ret
sub
insl
sbb
outsb
sbb
fwait
sub
pop
mov
test
lcall
xor
push
mov
mov
inc
notb
icebp
push
add
clc
sbb
lods
cmpsl
lahf
outsb
mov
dec
push
lahf
sbb
xor
push
hlt
adcb
mov
setg
cli
mov
xchg
das
cmp
sbb
lcall
pusha
outsl
push
mov
in
adc
test
cmp
sbb
xor
movsl
dec
cld
jmp
out
mov
mov
lcall
loop
gs
adc
adc
mov
inc
cmp
sub
jmp
add
cld
inc
aaa
lods
bound
out
movsl
out
adc
and
push
mov
xlat
stos
push
mov
jo
shl
test
mov
sbb
mov
in
shrl
and
data16
cmp
sub
adc
shll
arpl
mov
inc
hlt
sbb
adc
jmp
cmpsl
mov
cld
mov
dec
incb
jl
scas
shl
les
rorl
xchg
setg
movsl
movaps
dec
inc
pop
ss
shrl
mov
mov
icebp
jns
add
pop
pop
sub
ds
lahf
cmp
inc
push
cwtl
xchg
jg
sub
xor
mov
fwait
adc
cld
data16
and
jle
add
insl
or
mov
lsl
cmp
cli
bound
inc
cmp
addr16
cmpsl
xchg
out
and
notb
mov
dec
insl
lea
out
push
in
adc
fcomip
add
lret
xchg
pop
pop
add
shll
adcl
cmp
jmp
jmp
mov
inc
lock
cmp
mov
sbb
addr16
push
push
dec
popa
mov
pop
lds
leave
and
shlb
mov
outsl
mov
ljmp
in
mov
and
movsl
pop
pop
mov
mov
or
add
cmp
sub
fdivp
aad
add
imulb
addr16
and
testb
xor
add
je
leave
pop
cmp
lock
cmp
mov
das
dec
push
or
add
adc
pop
sbb
es
sarb
ficoml
cmp
pop
mov
and
mov
rcll
adc
in
cmpsb
cmp
xchg
jbe
sub
jmp
enter
mov
loop
mov
hlt
insl
dec
addb
jecxz
fst
stos
call
jnp
ja
loop
sub
imul
jmp
cmc
out
sub
dec
pop
push
out
jno
inc
mov
pop
hlt
or
div
xchg
in
xchg
sub
mov
mov
out
mov
push
xor
and
ljmp
idivb
mov
dec
lock
jo
mov
orb
test
xchg
sbb
dec
notl
pop
aaa
cwtl
leave
sub
mov
adc
xchg
mov
inc
or
inc
leave
adc
push
mov
imulb
inc
mov
mov
popl
or
rcl
mov
jl
cmp
xchg
popa
sahf
in
fidivrl
outsl
and
mov
mov
enter
and
int3
mov
pop
add
and
adc
push
and
mov
icebp
jns
aas
pushf
and
xor
jae
mov
in
xchg
or
pop
daa
std
mov
call
insl
push
test
cli
je
or
sub
mov
jp
lds
and
pop
mov
es
mov
int
jnp
jmp
pusha
out
gs
or
popf
notl
sarb
mov
dec
pop
data16
hlt
icebp
jp
sub
mov
mov
stos
mov
xor
sbb
inc
jno
and
pop
addr16
dec
xchg
sub
pop
scas
ret
std
xor
sbb
popa
dec
adc
in
or
cli
fbld
stos
mov
bound
push
mov
out
out
inc
daa
inc
test
cli
xchg
inc
imul
push
cltd
int
push
mov
in
out
in
push
mov
push
gs
add
mov
loop
push
lcall
push
dec
ss
pop
jo
out
xchg
xor
push
pop
jo
sbb
pop
jp
hlt
mov
and
or
dec
mov
sbb
pop
out
movsl
repnz
push
scas
ficompl
mov
push
xchg
cmpsl
mov
stos
pusha
sub
arpl
xchg
mov
lock
sub
cmp
mov
pop
jo
dec
mov
icebp
cmc
mov
stos
mov
cli
ss
fs
pushf
ljmp
in
push
call
cmp
pusha
lods
push
push
es
fadds
scas
xor
adc
cmp
mov
pop
dec
addr16
xor
fidivrl
lret
jno
gs
sbb
sarl
and
scas
mov
jno
punpcklbw
cld
loop
imul
std
arpl
nop
adcb
stos
adc
cmp
call
mov
xor
sahf
pop
mov
aaa
aaa
cmp
lock
in
add
test
xor
adc
ljmp
sbb
fwait
pop
cmp
and
inc
lahf
decl
lea
stos
mov
ret
dec
aas
out
nop
stos
mov
insl
fwait
sar
js
sbb
mov
mov
outsb
daa
out
pop
mov
nopl
xor
test
fs
and
pop
popl
adc
stos
xor
mov
mov
aas
insb
xor
sub
mov
sbb
rorb
mov
mov
mov
nop
xor
mov
fidivl
icebp
scas
icebp
btr
insl
add
clc
dec
insl
xchg
sub
lahf
out
sub
nop
xchg
jne
jne
cmc
rolb
adc
mov
fisttps
rorb
pop
lock
mov
and
xor
cmp
bound
mov
cltd
ficoms
test
mov
mov
pop
icebp
push
bound
mov
lcall
push
xchg
inc
fidivrl
sub
and
scas
pusha
nop
adc
or
rcr
mov
push
mov
iret
and
inc
mov
sub
dec
xchg
mov
cmpsl
ror
sbb
or
inc
and
ja
ljmp
in
cmpsl
xchg
and
arpl
push
xor
cmp
push
cli
repnz
pushf
aad
xchg
mov
add
das
cmp
lds
mov
add
sbb
daa
mov
sbb
xchg
arpl
int3
test
in
cmpsb
loop
cmp
test
push
and
sub
test
xchg
fwait
pop
mov
shlb
lods
aaa
push
mov
jmp
dec
and
add
mov
lock
pop
mov
or
daa
mov
mov
xor
in
sbb
sub
or
sahf
daa
sub
test
inc
subb
pop
outsl
add
or
icebp
and
sbb
xchg
sbb
jl
push
mov
popa
insl
mov
and
data16
pop
test
sbb
es
cmp
int
or
inc
pop
mov
mov
insl
mov
pop
icebp
out
adc
daa
into
and
mov
push
fwait
and
pushf
movsl
sbb
adc
mov
xchg
ljmp
mov
outsb
mov
popa
push
adc
test
data16
iret
push
imul
push
inc
pop
adc
add
mov
pop
lods
adc
add
test
loope
cvtps2pd
daa
mulb
mov
popf
xchg
lret
add
and
adc
xchg
jno
xchg
out
and
nop
ja
shr
jge
dec
je
add
lock
hlt
test
sub
pushf
xor
out
loop
push
adc
and
lcall
in
out
sub
mov
test
inc
adc
jo
test
out
or
pop
xorl
hlt
arpl
or
loopne
pop
mov
xor
sub
fcmovnu
stos
adc
cmp
mov
andl
xchg
mov
aam
stc
mov
lcall
xchg
mov
iret
addr16
mov
mov
cmp
dec
push
shr
add
cwtl
stos
sbb
lcall
xor
add
push
push
lret
fs
dec
sub
stos
mov
pop
fcoms
mov
jbe
add
addr16
movsl
leave
dec
jecxz
data16
fbld
mov
add
or
mov
xor
push
lods
adc
es
xchg
or
mov
mov
sub
cltd
or
gs
jmp
daa
mov
adc
mov
jecxz
mov
mov
stos
sbb
lock
sub
cmp
out
mov
mov
in
in
pop
fdivrl
mov
add
push
orl
dec
cmp
add
xor
out
cmpsb
mul
fwait
es
mov
cld
mov
lods
push
cwtl
loop
icebp
imul
adc
fldenv
xlat
mov
or
test
gs
xor
in
push
mov
or
xor
out
xchg
adc
shrl
or
or
xlat
dec
jmp
sub
push
jmp
and
jecxz
addr16
xchg
sbb
shl
or
imul
sbb
push
in
fdivs
pop
call
push
xlat
in
mov
in
outsl
imul
lret
aaa
sbb
cltd
push
push
ss
fidivrl
mov
addl
call
hlt
test
mov
jp
lock
push
pushf
mov
mov
adc
pop
mov
xchg
insl
push
sub
mov
xor
out
and
movsl
cli
dec
xchg
insb
or
xchg
iret
sub
addr16
xchg
es
push
pop
or
je
cmp
nop
loop
aaa
mov
mov
sbb
cmp
cmp
fmulp
cmp
mov
mov
xor
add
xor
fwait
xor
test
and
pop
ss
in
imul
jnp
sub
ljmp
fistpl
xor
xchg
in
cli
popf
push
call
mov
jne
jne
cmc
pop
mov
out
gs
adc
sbb
hlt
lahf
jl
popf
out
in
xchg
dec
xor
and
adc
shll
insl
pushf
inc
or
sbb
mov
cmp
mov
sbb
push
adc
test
sbb
adc
movsl
push
stos
jecxz
sbb
sbb
push
cmc
sbb
adc
nop
leave
push
add
mov
outsl
push
rcll
mov
mov
mov
cmp
gs
pop
xchg
fxch
jecxz
movsl
mov
mov
test
mov
inc
add
jbe
and
pop
xor
add
inc
fldcw
nop
mov
xor
lcall
lock
jl
aad
xchg
and
pop
or
xchg
xorb
sub
cmp
in
mov
outsl
sbb
pop
mov
dec
mov
test
push
mov
nop
icebp
pop
rorl
sbb
xchg
push
push
inc
mov
arpl
pop
mov
add
push
gs
and
or
test
pop
sbb
sbb
jno
push
test
ss
fnstenv
out
mov
mov
mov
mov
addr16
pop
iret
cld
xchg
mov
sub
ss
dec
push
mov
arpl
adc
rcrb
xor
in
sbb
sub
sahf
addr16
xchg
dec
clc
sbb
or
insl
mov
test
daa
sbb
daa
aam
aad
add
ljmp
out
mov
xchg
incb
in
hlt
adc
aas
add
fwait
mov
cltd
inc
test
into
daa
stos
pop
jne
arpl
sub
out
into
out
adc
lods
xor
pop
aaa
out
stos
dec
daa
jg
add
or
loop
mov
or
fists
mov
mov
clc
sub
outsb
fwait
stos
mov
pop
or
addr16
xchg
push
stc
fisttps
and
inc
int
dec
inc
shlb
gs
fidivs
or
leave
pop
cmp
stos
test
mov
cli
sbb
idivb
ljmp
arpl
int3
or
cmp
mov
mov
hlt
xchg
sub
add
xchg
loop
aaa
fisubl
loop
cmp
out
insl
movsb
cmpsl
mov
sbb
call
push
sbb
das
dec
push
into
jecxz
xchg
roll
mov
inc
sub
mov
and
pop
mov
in
pop
mov
push
mov
in
imul
adc
insl
ds
pushf
xchg
xchg
stos
cmp
int
sbb
pop
fwait
sbb
pusha
ror
fwait
adc
inc
xchg
cmpsl
cwtl
jmp
jmp
sub
pop
and
add
dec
invd
push
out
mov
cltd
mov
cwtl
sbb
push
jmp
out
lcall
daa
mov
mov
push
sbb
ficoms
ljmp
adc
sub
leave
lock
jp
xor
lods
mov
sub
sub
stos
xchg
or
out
mov
dec
pop
mov
add
push
ljmp
shl
sub
push
or
pop
jo
or
pushf
mov
mov
popl
mov
mov
pop
inc
xor
add
nop
sub
cltd
lcall
add
and
bound
or
into
push
mov
cmp
sbb
mov
rorl
cmpsb
xchg
adc
popl
gs
lock
rcrl
sahf
mov
pop
or
and
cli
or
adc
mov
xchg
push
xor
fs
cld
mov
adc
xchg
mov
imul
cltd
push
lods
in
fs
out
dec
or
add
sub
imul
out
frstor
sub
sbb
lahf
fisttpl
add
push
addr16
sub
inc
cld
xchg
jl
jmp
aam
dec
mov
and
jnp
xor
and
xchg
inc
cmp
inc
xor
mov
lods
test
add
nop
mov
mov
mov
out
movsl
test
mov
out
and
adc
xchg
cmp
adcb
mov
dec
cld
shll
cmpsb
and
and
shld
xlat
int3
rorb
mov
xor
pop
push
fisttps
loop
mov
ret
jnp
jp
cld
in
xchg
mov
adc
jo
movsl
outsl
inc
add
sbb
bound
cmp
add
imul
cmp
mov
icebp
adc
lret
psubd
add
mov
mov
adc
jmp
mov
idivb
outsb
jp
mov
sub
mov
dec
sbb
inc
or
outsl
fisubl
jmp
sbb
pop
sbb
arpl
outsl
data16
push
mov
adc
inc
pop
mov
push
jo
sbb
lret
adc
adcb
test
cmp
lret
push
sahf
sbb
pop
or
jb
xchg
mov
imul
sbb
adc
insl
adc
lcall
mov
cwtl
mov
push
lret
push
cmp
loop
nop
jnp
jp
rorl
mov
inc
leave
mov
push
cmp
sbb
push
and
sbb
push
cmc
add
mov
xchg
mov
test
cwtl
push
xor
sbb
pop
xchg
mov
adc
fwait
lock
add
add
pop
mov
or
cmp
mov
jecxz
mov
imul
outsl
subb
arpl
mov
sbb
and
adc
clc
or
or
push
loop
jecxz
outsb
nop
xor
xchg
dec
mov
xor
jmp
push
int
add
icebp
jo
add
and
mov
dec
popf
xchg
dec
and
lcall
xchg
sbb
shlb
loop
jmp
dec
addr16
jno
pop
fstpl
and
mov
fs
imul
add
mov
add
mov
mov
adc
xchg
shll
push
push
inc
adc
xorl
xchg
pop
or
lahf
xor
pop
rorb
xor
mov
xor
pop
sbb
hlt
and
fs
lea
sbb
out
adc
or
mov
or
dec
mov
mov
out
jo
jbe
sbb
mov
and
out
add
gs
add
mov
dec
jo
jb
in
sbb
setno
mov
cmpsb
xchg
outsb
adc
imul
pop
call
pop
in
add
pop
lcall
xor
jno
mov
imul
loopne
aad
mov
nop
cmp
sbb
sbb
sbb
jbe
lods
xchg
out
jo
imul
add
fldt
jecxz
xchg
fcmovbe
daa
insb
xor
push
out
cvtpi2ps
push
out
push
stos
loop
sbb
sub
cmpsl
and
test
in
in
push
out
jbe
mov
xchg
aad
ljmp
sub
add
cmpsb
push
aad
je
sub
insb
add
test
data16
loop
in
fcmovnu
ret
rcrl
mov
out
push
insl
jo
pop
rep
in
xchg
repnz
xor
int
mov
divb
pop
in
insl
cltd
movsl
sub
lcall
outsl
inc
jmp
fcomp
mov
mov
ret
adc
test
add
insb
ljmp
loopne
aad
xchg
and
fwait
aaa
int
roll
test
push
movsb
xor
pop
arpl
aam
fldcw
jno
out
fsts
xchg
jg
mov
jecxz
mov
shll
test
push
and
pop
fcomps
jmp
and
sbb
inc
test
or
stos
loop
add
call
push
out
jg
xchg
sub
sub
fcomi
aaa
dec
cld
pop
gs
iret
sbb
adc
sub
dec
sbb
dec
in
jae
or
jecxz
sub
mov
in
mov
insb
sub
mov
loope
loopne
sub
loop
inc
cmp
repnz
sbb
jle
insb
sahf
inc
sti
jne
or
insb
mov
push
jo
lods
xchg
push
jp
mov
cmp
ret
xchg
insl
int
xchg
mov
or
sub
and
jno
or
orb
lcall
mov
adc
rcll
mov
stos
mov
in
add
mov
push
push
insb
popa
jmp
jge
lock
lods
mov
mov
mov
fidivs
push
popl
sub
jae
or
sbb
push
mov
add
and
iret
sbb
mov
xlat
xor
cmc
insb
aam
push
push
sub
push
bound
shrb
cmp
lret
cmp
bound
insb
nop
mov
sbb
push
mov
loopne
cmc
rolb
dec
fisttpl
data16
mov
push
rcr
add
out
js
jo
insb
xchg
push
pop
rcll
neg
hlt
jno
dec
sub
xor
popw
std
pushf
jmp
ljmp
mov
push
insb
push
fsubs
jne
out
aad
sbb
fucom
and
fldlg2
sub
cltd
mov
and
push
gs
outsl
int3
loope
jo
cmpsl
fsubs
xor
aaa
cmp
sbb
sub
dec
test
in
push
or
xchg
push
in
jb
lods
sub
cs
mov
or
leave
mov
add
adc
or
cmp
mov
add
xor
lahf
andb
jge
jmp
dec
add
cmp
ja
insb
fwait
mov
push
aam
mov
outsb
sti
sbb
and
xchg
sbb
xchg
sarl
cmp
jne
insb
dec
outsl
test
sub
inc
sbb
cs
mov
pop
je
out
mov
sarl
push
push
insb
inc
cwtl
inc
mov
sbb
jmp
rcl
fs
cmp
std
dec
adc
cmp
add
jmp
and
aaa
or
add
mov
or
out
jns
sub
cli
loop
jbe
xlat
lahf
out
adc
mov
jae
xor
xchg
add
insb
in
iret
lock
fadds
mov
insl
and
popf
in
insb
sbb
das
and
push
fisubrl
cmpsl
push
mov
fidivrl
dec
push
pop
mov
lcall
inc
iret
jecxz
pop
jb
out
lea
lcall
push
mov
pusha
push
pop
xchg
gs
scas
pop
xor
sub
xor
or
or
mov
push
and
mov
out
movsl
insl
imul
lret
sub
jno
mov
sub
pop
in
cmpl
aam
arpl
lods
stc
sub
pop
aad
dec
cmp
repz
popf
stos
jnp
out
pop
xchg
xchg
fs
outsb
adc
es
in
dec
mov
and
insl
add
ljmp
inc
lods
sub
xchg
inc
mov
and
adc
js
loopne
mov
push
push
sbb
call
insb
jge
addr16
mov
mov
ds
subl
je
pop
ljmp
and
ss
jmp
or
cmp
aam
jg
push
lods
sub
mov
gs
lods
lock
lock
cli
nop
pop
ja
cwtl
rcr
or
in
dec
mov
loope
push
out
test
mov
test
push
outsb
fs
dec
in
push
jnp
push
cli
push
adc
push
sbb
shr
outsl
outsl
add
sub
nop
add
or
cld
sbb
cs
iret
rcll
lahf
push
dec
movsl
fbstp
leave
ret
dec
inc
fs
pusha
or
call
push
xor
insb
cltd
cli
and
cmp
lea
iret
or
insb
xchg
xchg
and
scas
addr16
sub
mov
mov
mov
in
inc
out
mov
cld
sub
jne
out
xchg
mov
bound
int3
pushf
je
sub
adc
add
fstps
repnz
or
adc
jge
gs
lods
inc
jne
and
adc
push
daa
lods
push
or
sub
insb
adc
cmp
pop
scas
enter
out
and
scas
xchg
push
sbb
bound
movsb
insb
loope
adc
sub
insb
sub
jbe
xchg
sub
dec
or
jae
es
icebp
insb
fldcw
cmp
aaa
or
xlat
rol
insb
cwtl
pop
cmp
mov
jmp
in
dec
cli
int3
fnstenv
mov
inc
sbb
inc
cli
in
test
mov
or
fiadds
jae
push
cwtl
and
xchg
jno
sub
inc
cli
cmpsl
mov
cmp
sub
test
mov
sbb
iret
insb
sub
lods
push
or
cli
insb
out
movsb
cmp
dec
add
mov
mov
sahf
inc
jmp
das
push
daa
cli
sbb
aas
lods
pop
ljmp
jo
xchg
aaa
insb
lock
mov
je
sahf
fs
xchg
ret
subb
sub
inc
lock
outsl
insb
mulb
add
call
mov
cmc
aad
stos
pusha
cmp
out
jge
jne
push
or
scas
orl
sub
or
mov
xor
mov
ja
shrl
push
sar
sub
xchg
fs
je
sbb
inc
xchg
daa
cld
shr
mov
pop
lock
inc
hlt
inc
outsl
insl
dec
pop
insb
mov
pop
mov
insb
xchg
leave
ljmp
daa
popf
sti
sbb
test
jle
out
int
pop
iret
sbb
cli
or
dec
or
xchg
sub
mov
lods
inc
mov
xor
jecxz
add
push
rorw
sbb
mov
insl
inc
xor
xor
jbe
xor
ljmp
sbb
xorb
jmp
sub
adc
mov
ljmp
mov
dec
and
movsb
xchg
jge
pmaxsw
adc
add
cmp
idivl
push
jo
mov
mov
insb
push
ja
cs
and
jmp
sub
mov
or
test
imul
mov
insb
sbb
ret
push
icebp
jno
pusha
mov
or
out
insb
dec
cmpsb
fwait
xchg
and
imul
jp
ucomiss
lcall
xchg
xor
pop
cmp
repnz
insb
inc
jnp
test
insb
inc
and
or
pushf
inc
insb
pop
and
rorb
insb
fstpl
or
insb
decl
push
fsubrs
outsb
out
hlt
int
or
cli
pop
mov
fwait
insb
mov
sub
stos
out
insb
rcrl
ror
insb
pop
test
adc
mov
or
add
sbb
shrl
adc
xchg
jge
cs
scas
les
jmp
and
insb
daa
push
adc
mov
sbb
jae
jns
xor
xchg
shl
jmp
lods
push
mov
out
sub
popf
cmc
mov
mov
jmp
cld
or
les
nop
jo
and
inc
aam
mov
imul
mov
mov
insb
mov
sti
sub
insb
pop
push
jns
cmp
jno
stos
imul
in
clc
sub
ljmp
pop
cmpsb
pusha
fucom
jg
cli
mov
int
inc
sub
sti
add
push
xor
mov
dec
sbb
xor
insb
or
xor
out
fadds
inc
fucomip
inc
pop
xchg
cmpsb
pop
push
imulb
mov
mov
data16
pushf
jg
and
sub
leave
shr
jb
mov
insb
dec
pop
jle
push
mov
mov
sbb
or
inc
adc
jle
adc
and
inc
push
lret
cltd
xor
insb
movsl
ja
or
mov
out
mov
xor
mov
insb
push
fisttps
ss
call
and
pop
jg
jmp
push
sbb
pushf
lods
pop
xor
sarb
xchg
addl
and
adc
ja
mov
inc
dec
xchg
xchg
inc
xor
jp
in
mov
repnz
xor
ja
sbb
mov
mov
gs
out
xchg
subb
lahf
jg
push
xchg
xchg
push
lea
cs
and
sub
and
lods
ljmp
lods
imul
aaa
dec
pop
test
mov
jo
xchg
das
xchg
fmul
fucom
fnclex
fisttpll
dec
inc
cmpsb
add
mov
daa
lock
insb
aaa
dec
orb
cmp
out
add
fs
fisubl
pop
insb
lahf
cmp
mov
clc
insb
pop
mov
cmp
jmp
lock
cmp
add
aas
aaa
push
mov
dec
and
insb
js
xchg
cmpsl
lea
push
idivl
addr16
add
cmp
xor
sbb
sub
dec
cmp
sbb
js
insb
nop
fwait
popa
int3
mov
push
loope
dec
sahf
pushf
add
pop
jp
insb
jg
inc
mov
pop
scas
movsl
out
shrb
xchg
fdivrp
cltd
lods
sbb
mov
mov
push
popa
mov
mov
or
xchg
fstps
pop
in
jge
stos
repnz
loope
jl
push
sbb
call
repnz
push
jle
insb
aad
cli
and
je
sub
pusha
pop
lea
addr16
movsl
ffreep
insb
mov
sub
int
adc
jge
xor
xor
and
sbb
lock
add
stc
loope
dec
pop
fsubrs
inc
mov
insb
sarb
or
add
adc
in
mov
int
mov
fs
aam
xor
or
push
stos
inc
sbb
push
mov
das
insl
fsubrl
sub
daa
mov
and
mov
push
sbb
adc
icebp
jo
bound
repz
and
jecxz
loop
jecxz
jg
pop
xor
and
xor
insb
mov
mov
xchg
sub
imull
xchg
jne
sub
loopne
mov
inc
add
jmp
mov
outsl
movsb
inc
jno
lods
jne
sbb
jge
push
adc
cmp
or
cs
or
call
scas
lds
xchg
pop
popa
cltd
cs
push
push
js
insb
dec
jae
sbb
jle
popa
insb
or
sub
jecxz
bound
jge
je
sbb
in
dec
nop
sbb
xchg
insb
std
mov
xchg
dec
repz
insb
pop
int
and
enter
push
push
jp
dec
adc
testl
push
and
stos
ja
cmp
cli
dec
sub
call
mov
scas
and
mov
xor
mov
sub
ss
xlat
xchg
arpl
mov
in
push
xchg
or
xchg
out
insb
pushf
not
pop
test
ljmp
pop
and
xchg
test
iret
aaa
jb
mov
mov
or
and
sbb
testb
sarb
les
dec
cmp
shr
sub
imul
xchg
push
jmp
sub
jo
out
je
cmp
adc
mov
leave
sbb
cmp
es
or
lods
out
inc
push
insb
test
push
call
dec
fdivl
sahf
xchg
pop
adc
stos
inc
in
fs
jge
add
xchg
adc
shl
stos
fs
mov
insb
ror
push
push
push
xor
lods
inc
xchg
mov
xchg
fcomi
aas
insb
or
dec
xor
insb
jle
mov
cmp
shrb
rcll
dec
mov
ret
push
inc
sub
loopne
shlb
mov
add
pop
rcrb
sbb
insb
std
data16
mov
test
cmp
scas
addb
jge
int3
in
subb
xor
pop
adc
add
test
popa
mov
dec
sti
jb
or
xor
and
sub
push
mov
cld
cwtl
pop
fs
hlt
jne
jnp
jl
arpl
fnstenv
and
jmp
insb
mov
push
int
xchg
cmp
fists
insb
xor
loope
insb
ja
xchg
mov
jmp
add
inc
xchg
sbb
cmp
fcmovbe
mov
stos
rorb
jle
enter
scas
insb
mov
cmp
inc
dec
adc
pop
outsl
sbb
dec
pop
pusha
jae
mov
insb
mov
arpl
inc
mov
ficompl
cmp
sbb
test
in
test
rdmsr
add
xchg
mov
stos
cmp
add
test
cwtl
jne
sub
imul
inc
addr16
shlb
insb
adc
cli
lcall
push
and
or
dec
mov
lods
insb
mov
sahf
push
mov
or
sub
jecxz
and
imul
fs
xor
icebp
es
push
insb
cmp
sub
insl
scas
xorl
cmp
dec
insb
pop
jecxz
fstpl
xchg
bound
xchg
std
iret
push
adc
push
push
decl
xchg
push
insb
lds
out
es
mov
and
outsl
test
pop
jae
or
cmp
mov
scas
inc
data16
insb
sub
jo
mov
insb
mov
rcrb
cmpsb
fnstsw
ret
popf
push
repz
insb
mov
dec
imul
insb
ficoml
push
sbb
pop
dec
das
and
cmp
mov
mov
out
sbb
insb
sbb
lods
xor
dec
jecxz
mov
shrb
rcrb
mov
push
dec
push
and
jno
jl
adc
sub
aas
mov
pop
add
push
sub
repz
iret
sbbl
outsl
push
out
push
loopne
ja
or
lea
jne
push
pusha
movl
push
lea
jmp
jmp
call
xchg
movsbw
movzbw
mov
lahf
lea
push
call
mov
jmp
push
push
movl
call
mov
mov
mov
outsb
idivb
xchg
adc
inc
mov
das
sbb
pop
movsl
mov
or
arpl
cmp
arpl
in
jle
loopne
mov
in
mov
jnp
rcr
fmuls
dec
jno
mov
xchg
out
mov
xchg
scas
loope
popf
cmp
or
xor
outsl
add
mov
xchg
aad
shll
sbb
jl
divl
js
xchg
jl
fisubl
call
pushf
or
pushf
pushl
pusha
lea
je
neg
bswap
xadd
add
mov
lea
mov
sub
bts
shr
movzbw
mov
stc
add
shr
not
sar
add
btc
pushf
bt
mov
cmp
push
test
shr
test
clc
call
cmp
lea
push
mov
pushl
ret
sbb
lods
scas
leave
mov
push
movsl
xor
or
enter
fimuls
loope
mov
pop
fstl
hlt
in
dec
inc
jo
mov
mov
mov
inc
into
iret
add
or
aad
subl
sbbb
repnz
arpl
mov
push
aam
call
sub
xchg
aad
addr16
cltd
sbb
nop
aas
nop
insl
les
jmp
and
cli
sub
and
inc
data16
sbb
xchg
loop
push
jns
cmpsb
inc
pop
lret
fstpl
int3
mov
ds
das
rcrl
adc
bound
loop
mov
aas
out
add
pcmpeqd
xchg
dec
push
push
push
mov
sti
sbb
cmp
in
in
mov
lret
pop
cli
dec
push
orb
jge
fstps
cltd
and
adc
sbb
lcall
xchg
shlb
sar
out
lods
adc
es
shlb
push
std
sbb
lret
add
push
mov
lea
pop
jae
lret
adc
rcrl
pop
xor
dec
and
daa
pop
cmc
lcall
inc
jne
sbb
out
in
loopne
add
testl
fistpll
rcll
pop
xor
sarl
out
sub
into
xor
es
add
rcrl
jecxz
inc
adc
popa
dec
pop
cmp
jg
in
int3
fsub
dec
xchg
mov
cmc
sbb
repnz
dec
fisubl
mov
into
cmpb
xchg
pop
mov
jae
nop
mov
dec
add
outsb
mov
xor
mov
dec
xchg
mov
jns
lods
xchg
sub
push
sahf
orb
rcr
cmc
mov
lods
nop
pop
push
mov
push
ja
jbe
in
out
inc
jns
sbb
add
pop
cmp
jle
sub
mov
xchg
movb
jmp
push
jmp
jle
subl
and
outsb
jne
daa
lcall
add
sub
ds
call
mov
mov
rcrb
test
jmp
sti
repnz
imul
pop
xor
jbe
add
pusha
mov
not
bt
mov
stc
movb
rol
push
not
pushf
jmp
mov
sub
shll
ret
sub
add
in
xor
inc
jle
mov
test
jecxz
ss
jl
inc
pop
mov
xor
jbe
pop
mov
sub
mov
cmp
mov
add
jg
and
lahf
and
lcall
xlat
push
push
lock
pushl
dec
pushf
and
fdiv
imul
mov
pop
imul
nop
jnp
sub
das
in
sbb
sub
sbb
mov
sbb
adc
mov
sarl
jne
seta
and
cmp
sub
sbb
dec
xchg
out
cmp
pop
rcr
in
push
cmpsb
insb
into
icebp
ds
push
gs
adc
sub
jle
pop
cs
mov
add
jo,pt
leave
out
pusha
hlt
cmp
xchg
movsb
test
inc
das
ss
cmpsl
mov
loopne
dec
test
ret
fmulp
loope
call
inc
cmp
xor
out
call
dec
shrl
dec
pop
mov
cmp
cli
jge
push
iret
out
movsb
out
in
xchg
ja
ss
hlt
add
loope
jo
movsl
pushf
lcall
out
ljmp
popa
lea
mov
and
sbb
jnp
inc
dec
imul
les
cs
pop
es
call
sbb
aaa
jmp
cmp
or
and
add
dec
movsb
daa
lret
lds
mov
ljmp
and
jne
pushf
pushl
stos
pushl
pushl
pusha
lea
jmp
pushf
jmp
pusha
lea
ja
shl
sub
movsbl
rcl
bswap
shld
add
shrd
add
push
xor
mov
cmp
shl
rcr
mov
cmp
clc
repnz
movb
lea
jne
mov
movsbw
movb
push
movsbw
pop
pushf
mov
not
movsbw
jmp
mov
lea
ja
jmp
pusha
cmc
or
call
call
add
inc
gs
outsl
fs
gs
imul
add
xchg
movsl
fldl2t
pop
xor
add
add
pushf
call
lea
jne
pusha
stos
movw
lea
jmp
aam
and
fdivr
scas
pop
and
push
mov
fiadds
repnz
xor
jl
push
or
js
sub
iret
mov
cmpsb
repz
icebp
outsb
arpl
jl
sbb
sub
and
mov
or
sub
les
jmp
addr16
mov
or
push
cld
lods
int
lret
mov
xor
cli
inc
subb
dec
push
sbb
icebp
dec
push
and
sub
sbb
mov
pop
std
icebp
cmp
in
dec
or
xor
adc
repz
js
fwait
add
rcrb
cmpsb
into
mov
xchg
jbe
outsb
addr16
mov
call
mov
outsl
jbe
push
incl
add
repnz
decl
and
movb
jmp
nop
leave
mov
pusha
mov
in
jb
mov
jmp
testb
inc
mov
push
fidivrs
cmp
or
dec
insl
and
cld
cmc
cmc
outsl
inc
icebp
lea
leave
mov
push
xor
adc
sub
push
mov
shrl
add
cld
pop
popa
leave
sub
mov
xchg
cmp
mov
inc
fcoms
in
jmp
add
adc
daa
js
aam
sbb
std
je
jg
lods
adc
fistl
jecxz
and
and
sub
lea
ja
stc
call
add
mov
add
add
add
add
add
clc
xchg
sbb
xchg
sbb
cld
xchg
sbb
add
add
add
add
pop
in
cmpsb
mov
mov
clc
jae
jbe
add
mov
loope
pop
in
mov
push
push
dec
and
dec
pop
or
jb
pushf
inc
adc
mov
sarl
xchg
inc
test
loopne
cmpsb
xchg
cltd
inc
mov
lds
adc
subl
pop
cmp
out
cmc
jp
in
mov
cmpsb
mov
hlt
xor
sahf
fimull
icebp
jne
inc
mov
test
or
or
xor
insl
mov
xor
push
shll
add
push
in
adc
lods
cmp
inc
mov
ret
lahf
repnz
ds
mov
mov
inc
sbb
fdivrs
push
mov
ss
clc
cmpb
fdivr
movsb
das
movb
aas
arpl
mov
les
xor
xor
lea
in
mov
out
repz
add
movsb
mov
push
mov
push
jns
pushf
dec
cmp
pop
cmp
or
das
movsb
add
dec
xlat
sarb
test
lahf
xchg
ret
push
repz
mov
mov
xor
lods
dec
cmp
xchg
adc
mov
pop
push
insb
loope
andb
or
mov
out
jp
mov
mov
addr16
aam
aas
xchg
mov
gs
inc
ja
adc
xor
in
shll
pop
lea
cld
out
sub
push
fistl
pop
shrl
aam
add
andb
inc
imul
rolb
xor
and
dec
shrb
dec
les
dec
jne
push
xor
out
les
int3
fcmovnb
adc
lret
xor
push
mov
add
fs
adc
cmp
dec
push
push
mov
inc
add
pusha
int
or
cmpl
push
dec
sti
sahf
enter
xor
les
adc
cmpsb
inc
inc
aam
mov
test
xchg
fstl
movsb
lea
cli
dec
insb
sbb
xor
cmp
adc
jbe
xchg
jno
test
test
mov
nopl
pusha
sbb
ds
sbb
hlt
shlb
das
lcall
clc
lcall
outsl
imul
sbb
mov
in
xchg
cmpsb
mov
cmc
out
xchg
sbb
pop
jecxz
xor
movsb
mov
pop
sbb
push
fucomip
inc
dec
in
fists
out
xchg
inc
cmc
or
jle
sbb
jmp
aad
imul
ret
dec
loop
mov
arpl
call
sbb
inc
sbb
or
cltd
jne
xor
inc
fistpll
daa
xor
xchg
outsb
adc
xchg
mov
xchg
pusha
arpl
pop
dec
out
mov
fadd
in
test
dec
xchg
imul
bound
das
fadd
inc
cmpsl
jnp
scas
clc
jecxz
jg
rcll
mov
adc
cmpsl
fs
sbb
and
xchg
or
movsl
add
xchg
push
scas
pop
dec
andb
icebp
pusha
aam
jbe
scas
sbb
pop
cmp
ss
mov
fiaddl
jmp
lods
mov
xor
pop
pop
mov
rol
imul
shrl
xlat
cmpsb
out
mov
cli
pop
or
mov
addl
push
or
pop
push
je
pop
aas
xor
pop
jl
xor
adc
fwait
xchg
mov
aad
inc
sub
sbb
jo
lds
xchg
das
sub
fwait
pop
lahf
mov
sub
nop
mov
push
aaa
sbb
call
rorb
lcall
scas
push
mov
arpl
ja
push
pop
and
push
aam
sub
fimuls
mov
fdivs
mov
into
in
add
subb
jmp
cmp
js
pop
push
jo
pop
bound
push
or
pop
mov
aam
scas
mov
mov
push
cmpsb
fisttps
fstps
mov
sub
pop
into
popf
push
mov
idivl
ss
test
and
icebp
clc
xchg
jnp
aam
in
int3
cmovbe
rcrb
fists
add
cmc
pop
cmp
fstpt
lret
fwait
jmp
dec
push
jp
clc
clc
xchg
call
or
jp
jp
sahf
mov
test
or
addr16
clc
and
xchg
test
mov
pop
sub
lods
mov
shrb
inc
ljmp
std
dec
mov
adc
dec
loope
cmp
cltd
icebp
xchg
in
jecxz
scas
push
idiv
xor
jo
jae
mov
aas
stos
cli
jo
jge
lret
ret
mov
sbb
mov
sub
jg
test
jno
push
mov
fistl
sbb
cli
repnz
mov
push
push
xchg
inc
fucomip
imul
lods
shlb
fsub
test
cmp
lret
nop
jno
imul
outsw
imull
aaa
push
fstpt
push
mov
pusha
and
outsb
and
movsb
loope
mov
pop
jecxz
jne
cmp
sbb
mov
mov
aaa
jbe
mov
cmp
fldcw
and
rcrl
data16
inc
outsb
mov
lds
push
es
ret
xchg
lds
shl
addb
push
bound
mov
movsl
and
jnp
mov
pop
pop
adc
jne
sbb
scas
sbb
cltd
scas
in
pop
je
mov
rorl
rcr
mov
subb
pop
inc
jnp
insl
out
or
mov
bswap
add
test
fnstenv
test
adc
add
jg
sbb
pushw
cmpsb
sahf
xorb
mov
cltd
nop
push
xchg
lret
cmp
lea
lret
ljmp
and
fldl
cmpsb
pop
pop
adcb
add
xor
sub
loop
inc
adc
or
cwtl
scas
lea
push
shlb
push
arpl
test
xor
jge
bound
lea
push
ret
aaa
in
fprem
adc
das
adc
jecxz
stos
repz
fcompl
icebp
mov
outsl
ja
push
xor
xor
push
imul
push
mov
sbb
sti
fisttps
scas
jge
lcall
and
sbb
push
push
dec
xor
and
ja
dec
mov
cmpsb
ss
inc
insb
jecxz
shrb
xchg
mov
in
fsubl
scas
pushf
mov
mov
call
roll
shlb
mov
xor
dec
cs
scas
fs
in
out
cld
pop
push
test
dec
jg
add
mov
js
push
mov
iret
insb
idivb
or
dec
dec
test
fildl
push
and
loope
mov
aas
pop
enter
jb
mov
mov
mov
jb,pn
cmp
cmp
mov
or
mov
insb
jae
lahf
and
pop
in
mov
dec
push
ffree
or
fsub
int3
in
pop
sbb
shrl
test
xchg
jg
pop
rcll
sbb
push
mov
lahf
cmp
mov
sub
push
lods
push
ss
xor
dec
lret
in
or
loopne
push
insl
add
pop
jnp
mov
dec
mov
mov
clc
data16
and
hlt
fnstsw
mov
xchg
rclb
adc
lea
lods
lahf
sbb
test
pop
orb
sbb
fwait
clc
dec
fwait
popa
data16
push
push
xor
loope
fdivl
push
pushf
sbb
pop
dec
call
push
mov
insb
jecxz
idivl
pop
loopne
cmp
fwait
mov
lcall
insl
jge
or
xchg
insl
push
lret
push
sti
gs
mov
test
push
icebp
addr16
push
imul
das
mov
mov
pop
xlat
push
jo
mov
xorl
jecxz
mov
iret
mov
mov
rcrl
xlat
ficoml
adc
mov
call
push
cmpsb
out
das
ret
ja
lea
lods
inc
out
ret
add
mov
test
je
popa
jo
rcl
xor
stos
movsl
sbb
jge
andb
fs
dec
out
sbb
movsl
push
mov
icebp
arpl
sbb
int
adc
fisubrs
cli
or
pusha
mov
jns
pop
mov
out
cmp
mov
push
nop
loope
jecxz
xchg
mov
xlat
push
push
outsl
daa
xchg
ret
xchg
push
push
jno
dec
push
jns
inc
mov
ljmp
es
jnp
mov
scas
subl
mov
insl
push
into
stos
dec
push
jg
lods
lahf
cwtl
or
add
fwait
add
in
cmp
into
jge
aas
and
adc
sub
mov
ficoms
fldenv
adc
pop
mov
dec
movsl
pushf
adc
outsb
pushw
movsl
rorb
insb
push
dec
jne
push
xor
ja
xor
rorl
popf
aaa
and
sub
jns
fisttpl
fldl
popa
sbb
fidivrs
mov
ljmp
push
test
or
xlat
sub
adc
arpl
push
lcall
jge
dec
stos
mov
push
insl
mov
mov
push
lds
jl
cltd
repz
xchg
dec
pop
adcb
mov
loop
loopne
iret
mov
add
sahf
insb
cltd
dec
sbb
mov
aam
mov
enter
repnz
and
mov
cmpsb
loop
inc
mov
loope
inc
cltd
int3
jge
fdivrl
jmp
jno
xchg
call
sbb
push
out
xchg
push
or
insb
cli
lods
mov
movsl
inc
hlt
les
iret
arpl
mov
push
jno
push
or
and
push
test
ficoms
sbbl
add
sbbb
and
adc
test
andb
les
inc
cmpb
inc
faddl
dec
pusha
popa
inc
outsb
out
outsl
shr
mov
in
pop
ret
out
insb
mov
rcrl
cmp
imul
jl
pop
lods
gs
or
loop
loop
pop
inc
jg
and
inc
xorl
sbb
incl
add
cwtl
mov
lret
mov
popa
stos
push
enter
movsb
mov
adc
adc
dec
pop
insl
add
movsl
add
xor
pusha
ja
xor
imul
push
push
inc
sub
sbb
into
add
jo
xchg
sbb
icebp
cli
in
push
int3
je
lahf
xor
xor
inc
and
daa
loop
lods
les
sar
loope
xor
aaa
mov
inc
jle
adc
call
jns
pop
les
xchg
jnp
or
or
jecxz
fs
dec
ja
pop
adc
mov
mov
push
add
add
not
movb
lods
bt
pushf
stc
add
stc
not
bt
rol
pushf
not
call
mov
dec
pushf
leave
mov
adc
in
jg
mov
and
rorl
cmp
pop
enter
jmp
xchg
in
je
or
cmpsb
mov
xor
enter
je
leave
inc
fsts
push
lret
fdiv
fcompl
xchg
jp
test
les
and
jmp
leave
in
xor
sahf
aam
mov
or
mov
rcr
inc
movsl
mov
or
push
pop
mov
mov
push
push
push
xchg
fcomps
rorl
pop
cld
sub
ss
mov
rcll
int3
adc
hlt
into
int
daa
adc
les
and
stos
jl
or
mov
dec
fidivs
negb
out
pusha
ljmp
mov
sbb
add
in
data16
xlat
sahf
stc
pop
shrl
dec
inc
pavgw
pop
mov
xchg
xchg
pop
testl
and
add
cmp
cmpsb
clc
cwtl
push
ja
pushf
test
inc
mov
cmp
mov
test
sub
xchg
pusha
mov
jnp
repz
ds
sbb
xor
lret
pmuludq
faddp
dec
cmpl
lret
loope
lcall
mov
dec
mov
cs
enter
int
jmp
mov
das
push
insb
jae
jns
push
sub
popf
loope
fsubrp
inc
aaa
push
inc
mov
popl
xor
ss
pop
scas
loope
lret
dec
sbb
push
jae
mov
dec
orl
fimuls
mov
cmp
test
fcmovb
fistpl
xor
repz
in
int3
jnp
or
fstpt
imul
cwtl
dec
test
fucomp
adc
xchg
fucomip
push
add
fidivl
out
push
push
jbe
femms
mov
movsl
lea
mov
cmp
out
movsb
out
out
adc
or
cmp
or
jno
adcl
shrl
jo
dec
mov
loopne
xchg
adc
into
and
xlat
add
bound
icebp
adc
adc
inc
mov
cmp
mov
popf
push
xchg
enter
scas
xchg
push
int3
ffreep
pop
inc
mov
aam
cli
xor
dec
mov
dec
test
mov
mov
aam
ret
cwtl
pushl
adc
shll
repz
std
lret
movsb
xor
dec
leave
test
pop
jmp
repnz
mov
popa
dec
sub
dec
xchg
inc
test
pminsw
xor
cli
jg
outsb
cld
arpl
mov
ss
sbb
push
xor
int3
addr16
add
shll
cmp
cmp
andb
pop
jle
xor
jns
stc
daa
mov
daa
push
leave
mov
ret
mov
rorl
movb
adcl
xchg
cmp
mov
xor
repnz
ds
lods
sub
scas
mov
sbb
sbb
push
stos
scas
push
dec
mov
cmp
xchg
lea
repnz
ficoml
call
adc
inc
push
sbbl
fs
inc
lea
mov
pushf
je
jmp
addr16
test
mov
cmp
in
lret
ret
les
jmp
and
movl
push
pushf
lea
jmp
push
push
out
or
aam
es
adc
icebp
cmp
scas
xor
add
sbb
cld
push
mov
insl
insb
data16
or
cmp
mov
mov
jge
jae
fistpl
fstl
dec
mov
aas
and
test
mov
mov
mov
pop
push
leave
imul
add
mov
mov
jne
jmp
addr16
pop
fidivs
push
mov
dec
insl
nop
inc
mov
pop
sbb
inc
ud1
mov
xor
xchg
push
leave
add
mov
in
adc
xchg
leave
mov
aaa
cmpsb
scas
push
dec
gs
sub
dec
add
or
sbb
xchg
out
jno
lahf
sub
adc
mov
xchg
arpl
xchg
push
sub
sbbl
mov
mov
sbbl
loope
or
jno
arpl
imul
pop
mov
add
clc
aam
jae
sbb
jae
sub
jne
pop
jge
push
mov
and
dec
add
mov
cmp
sbb
mov
jo
mov
ficomps
scas
nop
movl
lea
call
pushf
pushf
push
mov
lea
jmp
pusha
push
mov
movb
mov
pushl
ret
jmp
movl
pushf
push
movb
mov
lea
jmp
call
push
clc
pusha
cmc
aas
mov
aad
daa
xor
lea
pusha
movzbw
lea
mov
jmp
xor
leave
mov
cwtl
cmp
mov
cld
jp
cmp
popf
ret
je
inc
sbb
lods
jne
fildl
and
in
mov
int3
mov
lock
hlt
sbb
push
push
mov
cmp
popa
test
dec
int
std
outsb
rcr
mov
fisubrs
or
lea
jae
pusha
cmp
cmp
push
call
shr
movb
cmp
pusha
pusha
lea
je
push
mov
cmp
movw
pushf
lea
je
call
add
add
not
lahf
push
shld
aas
aad
mov
rol
sar
sub
bts
lahf
push
rol
jmp
add
dec
gs
popa
addr16
outsl
js
add
mov
or
adc
adc
shlb
in
xlat
or
jo
ret
in
push
sahf
dec
push
pop
mov
or
out
push
jae
pop
rorb
test
stos
enter
pop
add
rorl
ja
push
int3
daa
push
jns
je
pop
pop
fsts
in
sbb
mov
add
or
mov
jge
out
jne
mov
leave
in
dec
test
repz
aam
ds
test
sub
push
arpl
jno
dec
xor
pop
aas
insb
movl
jmp
pusha
jmp
aas
cld
aas
xchg
leave
mov
mov
adcb
or
mov
jbe
ret
sbb
or
push
shr
pop
jg
push
push
les
clc
bound
lock
jns
xchg
rcll
jne
dec
push
cmp
inc
or
subl
push
jg
ljmp
pop
cwtl
mov
or
adc
out
xchg
leave
mov
pushf
dec
es
mov
cltd
sahf
mov
bound
dec
mov
jmp
jns
xchg
mov
pop
mov
mov
add
mov
loope
xchg
mov
icebp
fisttpll
push
fs
in
dec
das
mov
xor
stc
xchg
data16
lret
leave
in
daa
jle
lock
xlat
sahf
aam
in
and
test
xchg
cmp
sub
dec
pop
mov
mov
outsl
push
pushf
movzwl
lea
jb
movsbw
mov
pushf
lea
jmp
jmp
lea
jns
push
lea
jne
shld
sub
dec
add
lea
aas
mov
or
inc
ror
neg
add
xor
pusha
add
mov
test
jmp
push
pushf
mov
lea
jmp
pushf
movl
push
lea
jmp
test
xchg
leave
mov
into
jne
pop
in
push
sbb
jb
ret
sbb
outsl
fwait
jmp
outsl
dec
lods
xor
adc
add
fwait
jg
stos
shlb
in
pop
pop
pushf
call
jmp
pushf
clc
pushl
cmp
call
movl
pusha
call
stc
pusha
not
pushf
bt
push
cmc
ror
jmp
stc
ror
cmp
cmp
stc
not
pushl
bt
pushf
jmp
movl
movb
jmp
push
lret
push
xchg
leave
mov
mov
fcoms
decl
and
mov
mov
nop
mov
sbb
pop
xor
les
cmp
in
xorl
dec
out
movsb
test
mov
push
in
pop
mov
movsb
adc
push
test
lea
jg
fisubrl
push
push
rsqrtps
mov
sti
sbb
imul
and
jae
dec
pushf
dec
mov
pusha
dec
inc
push
push
mov
mov
push
pushf
pushf
lea
call
pushf
mov
adc
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
lea
jb
bt
call
daa
in
xchg
leave
mov
mov
add
inc
iret
push
das
icebp
outsb
and
inc
into
movsl
out
lret
mov
pop
mov
icebp
mov
xchg
addr16
mov
clc
lret
mov
test
shlb
sub
and
mov
dec
push
inc
fidivrl
add
stos
ret
cld
iret
dec
mov
push
gs
dec
dec
pop
sbb
loopne
mov
fnstenv
nop
add
outsl
dec
jmp
pop
jg
mov
inc
inc
xor
adc
mov
gs
into
lea
in
xor
inc
sub
ja
push
pop
pusha
shr
or
add
and
fiaddl
addr16
test
dec
dec
sbb
mov
fimull
int
imull
cltd
xor
add
pop
daa
in
jle
mov
divb
cmc
jb
dec
mov
sbb
out
push
insl
mov
les
pop
int
ss
jl
pop
sub
lock
mov
jmp
cmp
cmp
push
lea
ja
call
cmp
pushf
lea
jb
push
mov
test
cmc
cmp
movb
lea
jae
shld
pushf
sbb
mov
xchg
cmp
mov
shl
mov
mov
mov
sub
movb
bt
pusha
bt
repnz
jmp
xchg
leave
mov
pop
mov
adc
push
out
cmp
sub
in
shl
stos
push
push
mov
cmpsl
lret
fistl
adc
jle
aam
mov
mov
and
call
aas
lret
and
aam
mov
dec
dec
or
add
and
mov
push
mov
sub
jb
stc
bt
test
call
call
pushf
clc
mov
jmp
clc
mov
pushl
popl
sub
ja
cmp
pusha
call
mov
clc
repnz
jmp
pusha
pusha
pushf
movl
push
pushl
lea
jmp
btr
mov
cmc
jmp
repz
leave
mov
or
xchg
rorb
out
not
xchg
test
shrl
loope
insl
mov
xchg
mov
js
call
stos
pop
jp
push
enter
and
mov
inc
popa
inc
xor
jne
int3
pop
and
loopne
dec
push
push
imulb
cli
push
sub
and
push
mov
test
mov
mov
outsb
nop
push
repnz
cmp
push
dec
lds
call
in
jne
or
daa
dec
xor
sbb
sbb
xchg
add
or
pushf
lea
jnp
push
not
jmp
jmp
cmp
lea
js
push
pushf
pusha
lea
jb
pushf
cmc
jmp
movb
pushf
jmp
jmp
jne
ja
leave
mov
fldlg2
add
inc
test
incb
cmp
sbb
loop
sbb
mov
inc
add
sub
xor
test
mov
sub
inc
je
bound
cltd
mov
xor
and
fldl
xor
cwtl
xor
push
jle
rorb
mov
out
or
push
push
or
push
ret
cmp
mov
out
shll
mov
inc
mov
xor
movsb
or
or
cli
mov
test
push
addr16
push
lahf
sbb
mov
and
and
jne
dec
jg
or
jb
lret
fdivrs
lret
lods
aad
xchg
sub
inc
loope
mov
pop
andl
fs
add
pop
xchg
cmp
add
pop
xor
pushf
cmp
bt
add
jmp
lea
jae
call
pushf
call
pushf
sub
setne
or
stc
lea
add
shr
mov
ror
shl
push
mov
stc
repnz
jmp
jmp
sub
shld
jmp
test
pusha
test
cmp
jmp
pushf
pushl
call
pushl
mov
movl
push
pushf
push
lea
jmp
push
daa
leave
mov
das
sub
in
inc
cltd
testb
scas
adc
les
xchg
cmp
xor
dec
lock
test
scas
popf
jno
mov
jb
sahf
sbbl
imul
mov
adc
sbb
nop
mov
addr16
mov
call
inc
and
dec
ret
mov
pushf
pushl
push
pushf
lea
jmp
jae
pushf
movw
movb
movl
pushf
lea
jmp
lea
jmp
jmp
test
jp
negb
imul
sbb
push
fsubrp
jo
push
aam
out
mov
sub
inc
pusha
dec
adcl
stos
insb
add
sahf
cmp
into
sub
jmp
jge
iret
dec
lcall
cmp
dec
sbb
fnsave
jecxz
xor
movsb
cmp
mov
jbe
xchg
mov
enter
push
sar
out
lods
in
ret
lret
loope
outsl
mov
fisubl
popf
jp
int3
out
adc
xchg
das
jns
xor
cwtl
ds
or
sub
cli
cmp
popa
cmp
push
sub
lahf
rcrb
mov
mov
dec
pushf
fisttps
es
into
pop
xor
loop
inc
and
hlt
inc
icebp
cli
daa
dec
mov
aas
subl
lock
das
dec
push
inc
stos
cmp
sub
pop
stos
add
bound
or
repz
jns
jns
push
mov
imul
test
mov
lds
cmpsl
loope
js
or
xchg
inc
xchg
mov
mov
mov
push
adc
out
loopne
add
loopne
mov
das
dec
add
sbb
push
sub
or
cmp
fs
fsubp
es
sbb
sub
xacquire
adc
pop
mov
popa
cmpsl
inc
mov
sbb
sbb
mov
jae
dec
pop
push
jns
mov
pop
adc
adc
shl
pop
push
test
pop
dec
jbe
orb
shl
roll
push
dec
inc
sub
not
shl
xchg
bsf
mov
stc
mov
pusha
sub
jae
cmp
push
shl
or
cmc
mov
push
stc
sub
push
pushf
pushf
rep
bswap
bswap
pushf
mov
pusha
pushl
lea
jmp
bound
mov
mov
rol
test
pop
subl
mov
mov
iret
xor
lock
mov
lock
cmp
mov
xor
stos
mov
ret
or
jmp
cli
rcrl
mov
roll
inc
mov
xor
lods
lcall
and
movd
adc
dec
xor
rcll
mov
mov
cmp
cli
test
pop
fldenv
addr16
pusha
xor
int
outsl
push
sbb
fsubrl
pop
insl
iret
xchg
cli
cmpsb
movsb
add
mov
sbb
int
jb
arpl
inc
shlb
push
imul
inc
add
lods
jne
inc
jb
les
mov
jb
xor
mov
dec
lods
xchg
push
icebp
enter
mov
mov
pop
and
mov
incb
mov
fisttpl
and
xor
pushf
pushl
ret
bt
movb
not
jmp
mov
pusha
pushf
lea
jmp
bt
stc
imul
cmc
jmp
movzbl
mov
lea
pushf
mov
pushl
bswap
mov
movsbw
pop
movsbw
jmp
lea
je
pushf
clc
mov
sub
pusha
bt
movl
stc
cmp
call
loope
repz
mov
lret
ljmp
xchg
dec
push
mov
push
xchg
push
cmp
out
xchg
adc
adc
sub
mov
outsb
pop
jnp
sbb
fimuls
jns
mov
dec
pop
mov
pop
sbb
fwait
icebp
mov
pop
xor
sahf
pop
sbb
js
stc
xor
sub
mov
jmp
dec
dec
cmp
mov
or
or
xor
shl
mov
pushl
test
cmpsb
std
or
adc
pop
xorl
leave
mov
test
jnp
arpl
notb
jg
pop
loopne
clc
test
mov
push
fs
cmpb
jl
negb
pushf
and
sub
int3
fdivl
pop
dec
pop
cltd
loop
clc
int
popa
hlt
daa
cmpsb
stos
xor
jl
aaa
in
sahf
jae
sub
jno
inc
cmpsb
lea
in
mov
pop
mov
lea
call
jmp
ret
lods
jb
leave
mov
sbb
fs
imul
cmp
jge,pn
mov
cltd
scas
cmpsl
js
ret
das
jb
fwait
outsb
leave
cmp
sahf
je
mov
insl
js
loop
rcll
add
jp
aaa
dec
add
xor
push
es
cltd
jp
lret
mov
ficoml
mov
out
aam
aam
or
dec
dec
bound
xchg
leave
in
sbb
cmp
stos
or
dec
mov
cmp
jl
sahf
fistps
cmp
movzbl
pop
das
mov
stos
add
fadds
sub
bswap
stc
add
bsf
shrd
setae
or
mov
sar
ror
mov
call
cmp
push
pushf
pushl
pushl
lea
jae
pushf
movw
cmc
stc
cmp
movw
pushf
pushf
pusha
lea
ja
not
inc
push
pusha
inc
pusha
inc
dec
inc
call
pushf
pushl
popl
pushf
push
pushf
movl
pushl
ret
lea
call
pusha
pushf
jmp
pushf
xchg
shr
btc
mov
pusha
pusha
test
sub
jmp
mov
movl
pushl
mov
lea
jmp
loope
fs
mov
xlat
adc
adc
adc
cwtl
lret
mov
jecxz
and
or
inc
push
mov
lock
mov
sbb
faddl
arpl
mov
test
int
and
sub
in
mov
aaa
pushf
fidivrl
int3
adc
int3
push
cs
lds
lods
sbb
mov
jl
in
in
xchg
rolb
rol
push
xorl
fcomps
inc
mov
inc
mov
ret
or
test
inc
fwait
sarb
aad
dec
rcrb
mov
sti
mov
fldl
test
mov
sub
mov
fimull
sahf
xchg
jae
sar
push
cmpsl
leave
pop
test
mov
pop
add
jge
mov
pop
arpl
sbbl
push
xor
sub
xor
mov
jnp
lcall
mov
mov
bt
mov
clc
clc
test
push
jmp
pusha
movl
pushf
pushf
mov
lea
jmp
out
repz
mov
mov
rolb
mov
sbb
and
enter
lock
jno
std
mov
fisttps
or
sarl
outsb
icebp
std
pop
andl
sbb
pop
sub
negl
and
jmp
push
push
mov
lea
jbe
sar
rcl
shld
bsf
sub
cmc
mov
btr
mov
or
xor
adc
add
btr
shr
ror
mov
push
shl
add
pop
bswap
mov
push
pusha
mov
not
call
mov
pushf
push
pushf
pushl
pushl
ret
jmp
shr
pusha
pushf
call
lds
push
test
mov
mov
push
fstps
cmp
nop
push
into
dec
cwtl
ret
and
pop
sub
push
mov
cmp
jno
mov
push
cwtl
jns
sbb
xor
mov
aad
movsl
inc
cmp
dec
dec
ss
pop
mov
repnz
xorl
test
jp
faddp
fdiv
js
test
push
or
sti
bound
or
inc
and
pushl
popl
cwtl
mov
movsbw
bswap
mov
movzbw
push
lea
lahf
lahf
lea
jmp
shlb
inc
xchg
push
xchg
or
fnstenv
psubb
imulb
xchg
scas
sub
nop
fimuls
ficompl
sub
jecxz
fdivl
movsl
push
mov
xor
jg
inc
dec
loopne
pop
sbbb
push
bound
or
and
ja
push
mov
pusha
xchg
mov
jmp
push
pop
cvtps2pd
push
pop
rolb
xchg
pusha
and
fldenv
push
lea
jne
sub
mov
shl
sbb
bswap
bsr
sub
or
bts
adc
not
mov
test
sub
pusha
clc
bt
cmc
pushl
popl
push
cmp
jmp
jmp
pushf
mov
pushf
inc
pushf
lea
jmp
movsl
fsubrl
repnz
inc
add
daa
in
ficomps
cld
test
in
cwtl
ret
add
adc
adc
repz
or
out
enter
adc
cmp
imul
pop
lock
sub
lret
lods
adc
sub
addr16
sub
sti
stc
mov
pop
mov
shl
adc
push
add
leave
and
fsubl
inc
jmp
repz
call
call
pusha
movb
stc
xor
cmc
add
jb
push
sub
jmp
lahf
enter
mov
cmp
ficoms
mov
and
mov
cltd
pusha
adc
inc
faddl
xor
movsl
xor
mov
adc
mov
shlb
inc
lea
pop
add
adc
movsb
sub
cmp
jp
dec
push
shrb
ret
jmp
or
arpl
and
jb
or
xor
iret
cmp
pusha
sbb
jg
mov
xlat
sbb
loope
int3
inc
inc
push
shlb
fwait
pop
jno
ret
rclb
imul
hlt
dec
lock
mov
cmp
shr
xlat
xlat
fimuls
push
pop
add
push
ss
jnp
or
repz
fadds
cli
pop
xor
push
test
lea
push
pushf
call
movb
pushl
not
pop
lea
mov
lahf
lea
push
movl
push
mov
pusha
pushf
pusha
pushl
ret
mov
int
leave
mov
and
add
jbe
mov
lods
or
and
xchg
mov
sti
cwtl
cmp
jno
pmaxsw
js
cs
out
shl
repnz
jl
xorb
jbe
xor
cmpsb
inc
inc
lods
jae
adc
cmp
out
mov
cli
and
push
pop
cmp
push
xchg
in
dec
in
or
repnz
call
pushf
movl
mov
movl
mov
pushf
lea
jmp
call
mov
lods
scas
and
loopne
fsin
lds
sahf
lret
hlt
xor
clc
or
sub
jle
int
xor
rcrl
mov
incl
lret
inc
jmp
add
ja
fs
call
pushf
pushf
lea
jne
movsbw
lea
mov
push
push
movb
lea
jmp
rol
push
mov
not
jmp
mov
sbb
leave
mov
pop
add
lock
repz
out
ds
mov
mov
sub
sbb
adc
inc
mov
daa
fdivl
mov
imul
addr16
cmp
cmp
out
outsb
jmp
jnp
sbb
push
push
cli
dec
add
sti
jecxz
stos
or
in
jne
xlat
in
leave
add
jo
xchg
out
push
ljmp
push
fs
or
sbb
dec
pop
shr
dec
xchg
dec
jmp
and
pop
int
dec
push
cld
aad
mov
movzbl
mov
pushf
lea
jmp
pusha
call
int3
popf
pusha
pushf
push
jmp
shrd
sub
pushf
shl
lea
jmp
pushf
mov
pushl
lea
jb
stc
cmc
cmp
cmp
pusha
mov
pushf
lea
ja
rcl
bt
pusha
add
pushf
mov
mov
jmp
xchg
jmp
bt
jmp
mov
inc
pushf
cmp
jmp
lea
lea
jno
push
movl
call
movl
call
mov
bsr
pushl
bts
add
test
bsr
jmp
movl
pushl
jmp
jmp
add
pushl
call
rcl
xor
push
bswap
movzbw
bsf
dec
mov
clc
bts
btc
push
bt
lea
shl
push
adc
push
rcr
stc
push
adc
add
btr
bsf
push
add
mov
inc
bt
mov
cmc
test
mov
pusha
test
pushf
or
pusha
pushf
call
pusha
pushf
lea
jb
push
pushf
pusha
pusha
call
inc
test
pushf
pushl
cmp
cmp
call
pushf
lea
ja
push
pushf
push
lea
jmp
pusha
mov
movb
lea
call
push
push
lea
jmp
call
xor
jl
mov
xor
xchg
add
cli
stc
shll
inc
arpl
and
leave
inc
movsb
mov
sarl
add
push
jl
xchg
outsl
sub
mov
mov
loopne
lret
sub
out
ja
add
lods
xor
and
mov
pop
lcall
ret
mov
cmp
adc
or
scas
sahf
aam
or
mov
in
addr16
xor
xchg
xor
enter
fidivs
int3
je
cmp
xor
adc
and
jne
jmp
push
movb
movl
call
lea
lea
movsbw
movzwl
bswap
lea
jmp
dec
pop
pop
jl
mov
dec
test
sub
push
dec
cld
mov
das
pop
mov
insl
call
xor
call
jp
inc
cmp
or
mov
jp
push
iret
das
lret
cmpsl
in
jnp
cmp
out
addb
shrb
pushf
cmpsb
and
mov
lea
jmp
push
mov
inc
jb
push
add
lock
jp
mov
js
aam
in
mov
cli
shl
cs
push
inc
adc
lcall
push
insl
xor
ljmp
sbb
nop
movsl
lcall
xor
xchg
movsl
mov
push
lea
jmp
cli
imul
adc
movl
dec
pusha
leave
mov
sahf
push
pop
cmp
je
test
pop
scas
lahf
imul
rorb
add
lods
cvtpi2ps
out
scas
dec
mov
sbb
lock
mov
mov
adc
push
cmc
push
pop
mov
lret
pop
adc
pop
test
sahf
in
pop
sbb
js
stos
sub
sub
sar
mov
aam
int
imul
cwtl
mov
jmp
rcrb
jp
mov
cmp
adc
out
jb
push
sub
xchg
pop
sub
jl
rcl
mov
cld
pop
divl
push
cmp
lds
icebp
push
daa
cs
lock
repnz
add
sbb
inc
daa
mov
mov
movlps
adc
cmc
pop
shrb
int
add
scas
sub
insb
cmp
pushl
popl
pushl
pushl
ret
pusha
pushf
lea
je
clc
clc
bt
pusha
sub
pushl
clc
movb
cmp
jmp
lea
je
jmp
mov
mov
dec
xor
push
imul
and
int3
ret
arpl
mov
push
push
pusha
adc
out
and
idiv
imul
xor
pop
push
outsl
fwait
pop
lock
dec
cmpl
shll
dec
loopne
xchg
cli
fstpl
xlat
jle
pop
adc
jp,pt
mov
jbe
loopne
ds
ljmp
loope
out
and
in
movsb
push
out
lret
mov
int3
enter
test
pusha
adc
sbb
in
xor
pop
add
addr16
incb
mov
xor
cli
das
cmp
cltd
inc
stos
int3
xor
aas
xor
fstpl
jecxz
lods
repz
mov
inc
int3
xchg
enter
nop
pop
sahf
xchg
xchg
call
not
pop
bswap
mov
lea
jmp
mov
bswap
add
add
mov
bts
shld
xor
shr
add
bt
movl
ror
bswap
not
mov
bt
jmp
xor
jp
mov
ss
lods
lret
mov
int
mov
push
pop
lea
dec
notl
call
mov
pop
hlt
mov
pop
add
pop
inc
adc
ror
mov
dec
or
in
xchg
sub
adc
loopne
or
inc
into
lea
fs
sarl
outsl
push
xchg
mov
dec
add
lds
push
xor
jl
or
pop
sbb
dec
push
es
pushl
inc
call
jo
pop
js
mov
sub
jle
xor
fdivrs
mov
mov
popf
mov
mov
cmp
pop
mov
pop
mov
xchg
icebp
and
cltd
ret
lcall
mov
xor
inc
sub
push
insb
lret
fmull
cmp
js
scas
add
add
mov
nop
and
lds
and
or
pop
jl
push
pop
xchg
add
cmp
pushf
lret
fs
pushf
push
mov
movl
pushl
movb
pushl
jmp
movb
push
shl
setge
not
push
jmp
cmp
cmp
call
call
pusha
lea
jae
jmp
lea
jne
pusha
movw
mov
pushf
mov
pushf
pusha
lea
je
push
jmp
call
mov
jmp
test
stc
cmp
pusha
call
orl
leave
mov
inc
jo
or
call
mov
popf
aaa
arpl
xchg
fwait
jb
xor
pop
ficoms
add
or
test
test
out
adc
sub
mov
add
adc
mov
adc
cmpw
and
fildl
fcompl
nop
or
jl
lods
xor
lods
and
adc
fstl
ja
fwait
add
jmp
push
push
rcll
adc
ljmp
and
mov
xchg
jno
clc
pop
add
roll
les
inc
cmpl
jl
out
movsb
add
jno
fucomip
push
jecxz
fwait
testb
mov
lahf
adc
jbe
mov
sbb
ja
and
cmp
mov
dec
xchg
sub
int
push
jecxz
fsts
dec
pop
in
jecxz
icebp
push
add
and
sub
xchg
jge
cmp
adcb
stos
pop
cmp
stos
adc
xchg
lret
pop
fwait
pop
ljmp
lahf
xlat
bound
inc
mov
sbb
and
test
adc
inc
cmpsb
movsl
lods
pop
pop
xor
jae
mov
add
and
jne
daa
test
jg
jmp
dec
aas
cmpsb
jge
xor
mov
push
add
mov
lds
ret
pushf
sub
sub
adc
sub
sbbl
dec
call
je
shlb
push
fiaddl
daa
decb
movl
into
jnp
jae
inc
and
or
push
ret
sub
cmp
add
addr16
rcll
pushf
adc
dec
cmc
cs
out
fcoms
xchg
push
mov
push
test
loopne
and
je
sbb
out
sub
repz
push
dec
test
sbb
cmpl
pop
jle
cmp
jg
stc
call
sub
stos
andl
call
pop
add
inc
xlat
addb
dec
adcb
sbb
pop
fsubs
mov
mov
je
mov
pusha
int
pop
call
xchg
cltd
lods
jp
lods
inc
push
movb
popf
je
outsb
or
adc
dec
popf
fdivr
fisubs
fcomps
std
sub
xor
cmpsl
pop
cs
ret
call
add
lea
jae
stc
cmp
mov
bsr
mov
adc
mov
pusha
movw
jmp
lea
je
shrd
rcr
mov
add
pusha
rol
add
or
mov
pusha
pushf
mov
test
call
pushl
pusha
movl
pushf
push
lea
jmp
cmp
cmp
leave
mov
pop
je
jle
mov
inc
inc
cli
aas
xorb
xchg
lret
adc
test
shlb
mov
in
mov
nop
mov
pusha
loope
xorb
add
cmpb
add
arpl
movl
not
lea
push
movl
movb
call
in
jmp
mov
mov
movsb
repz
push
adcl
aaa
mov
ja
mov
mov
pop
fimull
xchg
outsl
sub
sbb
and
sbb
jecxz
or
std
xor
sbb
lods
popa
jns
lret
mov
push
loop
fadd
mov
je
dec
stos
mov
leave
mov
jae
in
push
mov
in
insb
pop
mov
add
sub
idivb
cmp
cli
jmp
xlat
adc
cmpsl
cmp
es
xorl
xor
pop
xchg
lds
fbld
jg
pop
sub
arpl
cmpsb
or
jnp
adc
cld
xor
cltd
mov
push
fisubl
roll
xchg
scas
in
xchg
mov
sbb
cmp
and
sub
xchg
mov
inc
push
jne
xlat
ds
es
ds
cmp
add
sub
call
movsl
mov
rclb
lock
enter
nop
imul
mov
jmp
pushf
lahf
daa
sbb
call
jnp
sbb
mov
jne
xchg
jge
cltd
ja
or
cmp
pop
pslld
or
or
bound
jg
movsb
outsl
cmp
dec
mov
shl
out
icebp
aam
repnz
ret
and
daa
mov
mov
mov
inc
js
lods
jg
jns
mov
es
jno
shl
or
aad
and
lret
push
mov
dec
outsb
jmp
mov
in
out
cmc
fstpl
pop
in
faddp
push
mov
movsbl
movzbw
movw
xchg
mov
movzbw
mov
call
test
mov
gs
cli
xchg
in
mov
xor
sti
inc
dec
rcll
or
add
movb
cli
fnsave
ds
test
push
rorl
call
clc
bt
sub
push
pushf
pushl
pusha
lea
jne
push
pusha
pusha
mov
lea
call
pusha
pushf
pusha
push
lea
jmp
push
lock
std
std
xorl
jo
lea
int
dec
and
loope
mov
pop
push
ss
jp
mov
in
call
jnp
pop
pop
lret
add
out
cs
test
or
jne
jmp
lock
xchg
push
mov
fs
ja
out
or
sbb
push
loopne
jmp
sbb
shlb
mov
mov
inc
push
jmp
les
lahf
out
leave
enter
orb
in
push
mov
pop
or
cmpsl
dec
or
int
sub
or
mov
add
sub
jl
cmp
or
lea
cmc
push
cmp
sub
pushf
stc
cmc
pushl
popl
bt
cmp
push
lea
ja
xor
sub
and
bsf
btc
pushf
lea
add
call
pushf
pushl
popl
pushf
pushl
mov
pushl
ret
popf
ljmp
push
xor
je
ficoms
lret
test
rorl
inc
int
dec
scas
insl
cmp
cmp
pop
cmp
mov
mov
shll
mov
pop
imul
mov
in
xchg
int3
mov
pusha
movsb
fmuls
push
xor
dec
mov
and
sub
rorb
add
add
mov
push
into
jecxz
mov
pushf
pushl
lea
jmp
int
js
leave
mov
and
pop
test
push
push
xor
clc
test
sub
xchg
cmpsb
dec
mov
mov
mov
mov
cmc
or
inc
cmc
movsl
and
and
lahf
outsb
int
lret
or
jmp
xchg
push
decb
adc
cltd
sahf
cmp
push
mov
cmpsl
in
adc
sub
mov
aam
sahf
push
fcmovnbe
or
iret
dec
dec
and
xor
cmp
jne
loope
fs
jne
pusha
mov
mov
push
lea
jmp
loopne
in
leave
mov
pop
dec
popf
pop
mov
js
nop
aad
mov
push
outsb
cmpl
sbb
iret
sbb
pop
xor
pop
negl
mov
sahf
insl
int
arpl
or
das
fidivl
lcall
cltd
mov
std
jne
pop
outsl
shlb
pop
mov
xor
push
push
ja
in
aad
out
pusha
inc
jle
fisubrs
xchg
lea
je
stc
or
je
pushf
lea
je
rcr
or
sub
sub
lea
lea
aaa
mov
rol
cmp
mov
inc
dec
shr
shl
shr
bswap
lea
mov
call
add
jmp
test
mov
xor
mov
pusha
mov
clc
call
ror
shl
pushl
mov
xor
jmp
cmp
jmp
btr
shrd
mov
cmc
pushf
pushf
clc
cmpb
lea
ja
jne
push
movb
pushl
lea
jmp
in
pushf
insb
leave
mov
push
fisttps
insl
xor
sahf
and
dec
stos
and
cmp
out
daa
dec
sarb
pop
cmc
aam
faddp
xor
scas
push
js
inc
outsl
femms
mov
jnp
mov
stos
push
mov
add
dec
xor
pop
mov
dec
or
aaa
cmc
cmp
sbb
add
inc
push
and
cmp
mov
call
in
or
lea
push
test
stc
test
call
lea
jne
push
mov
mov
inc
lea
jbe
push
mov
inc
pusha
movb
lea
jmp
cld
xchg
fsubrs
sbb
pop
push
dec
mov
lods
or
popl
jno
mov
sub
test
mov
inc
stc
jnp
push
add
push
in
push
out
push
scas
xchg
mov
xor
roll
jge
aaa
mov
ds
xchg
hlt
pushf
xchg
fcmovne
and
pop
nop
mov
pop
jmp
dec
add
and
subb
xchg
mov
cmp
pop
lahf
faddl
cmp
dec
jle
pusha
add
mov
pusha
insb
leave
mov
sub
insl
jbe
mov
sbb
jp
push
mov
xchg
inc
cmp
mov
daa
sahf
pop
mov
sbb
xchg
in
sbb
mov
std
sub
mov
das
push
pop
add
mov
jp
sbb
xchg
cld
mov
xchg
xor
or
sub
cli
inc
push
or
adc
popa
mov
sub
arpl
dec
jp
sbb
vmwrite
icebp
lcall
pop
daa
push
jno
push
fs
cltd
lret
mov
repz
popa
push
mov
add
rol
push
or
dec
shlb
faddl
add
imul
add
jne
cwtl
jmp
jmp
fisubl
imul
mov
or
and
int3
sbb
jge
rcl
imul
mov
dec
push
leave
or
out
sub
sub
sub
cs
in
mov
mov
push
mov
shr
ret
sub
add
mov
clc
pushl
movl
test
pushf
push
pusha
pushf
lea
je
add
shr
add
movsbw
mov
pushf
movb
add
call
pusha
pusha
lea
jb
pushf
cmpb
jmp
mov
mov
fnsave
scas
and
cmp
int
nop
push
icebp
leave
lds
inc
loope
and
fiaddl
stc
adc
add
insl
cmp
push
xchg
shl
aaa
jno
mov
and
push
mov
pushl
mov
pusha
mov
call
xchg
pushl
movb
dec
call
mov
adc
mov
lea
jae
pusha
pusha
call
sub
jmp
add
dec
outsl
popa
fs
imul
add
jb
gs
xor
cs
insb
add
lret
call
pusha
jmp
cmp
pusha
mov
jmp
pusha
pusha
pushf
lea
jae
jmp
push
pushl
lea
call
pusha
call
inc
pusha
mov
inc
pusha
pushf
lea
jmp
jmp
call
pusha
lea
call
call
mov
push
not
mov
mov
sub
stc
jmp
aad
lahf
push
inc
add
cmpsb
aas
pop
fs
mov
icebp
cwtl
mov
xor
js
jbe
jo
loop
sahf
mov
jge
jge
xchg
test
ss
sbb
test
adc
out
cwtl
popf
and
or
jcxz
aas
sub
xlat
push
stos
inc
dec
lret
xor
add
mov
push
push
mov
pushf
in
adc
aaa
mov
inc
std
fidivrs
int3
imul
call
cmp
clc
sub
pusha
call
inc
sbb
jl
push
loopne
push
neg
push
jne
outsl
aaa
jns
dec
jns
cwtl
or
ss
cmpsl
pop
fldl
ss
push
out
sub
test
push
inc
push
or
sbb
sub
xchg
jl
inc
test
inc
repnz
and
pop
mov
mov
test
les
repnz
pop
cmp
mov
adc
xor
mov
pushf
shll
sbb
lods
mov
test
cmc
xor
pushf
add
test
clc
neg
call
cmc
add
pushf
pusha
lea
jmp
call
mov
push
leave
mov
xchg
cmpsl
js,pt
mov
mov
and
ret
cmpl
push
fucomi
mov
xor
lret
pop
cmp
mov
xor
or
jns
cld
fbld
mov
sar
or
pop
fisubl
stos
xor
xchg
ret
std
mov
xor
test
mov
mov
stos
push
popf
fidivrl
leave
dec
dec
mov
and
sar
xchg
dec
in
cmp
outsb
pop
fisubl
mov
fsubl
mov
iret
mov
pop
mov
add
or
rol
jge
mov
mov
and
lret
mov
add
pop
data16
adc
fs
push
sbb
cmp
rcrl
js
and
mov
xchg
lods
adc
sub
je
into
pop
inc
add
dec
sbb
insl
insb
push
or
pusha
cmp
jmp
push
lea
call
jmp
stc
and
xor
not
sub
not
cmc
mov
lea
jo
ror
call
test
pusha
add
stc
clc
mov
pusha
jmp
ror
clc
pushw
popfw
jmp
lea
je
push
pushf
lea
jmp
call
sub
test
test
bt
mov
pusha
movl
cmp
add
clc
call
inc
mov
cmc
repnz
movb
mov
lea
jne
jmp
lea
jae
push
pushf
clc
stc
add
push
call
push
movl
lea
jb
jmp
popf
rdtsc
nop
jmp
pop
jge
leavew
mov
cmp
lcall
shrl
inc
out
out
imul
shlb
push
subb
mov
push
push
pop
movq
xchg
inc
scas
sahf
neg
xchg
jg
stos
nop
mov
outsb
pop
mov
pop
jno
xor
js
push
jns
popa
gs
mov
scas
inc
push
xor
shrl
dec
adc
jle
mov
jl
xor
sahf
pusha
pop
jmp
std
xchg
scas
ficoms
icebp
in
lret
mov
add
pop
sub
adc
out
call
pop
test
gs
mov
fwait
lcall
rcrl
lock
cwtl
mov
mov
aad
sbb
aas
adc
mov
push
pop
fistps
cmp
xor
push
push
sti
push
fcoms
sar
scas
push
popa
jo
movsl
out
lretw
hlt
pop
rcr
and
fmul
sbb
sbb
adc
pusha
adc
mov
lea
jne
call
mov
pushl
lea
call
pushf
movw
lea
jae
call
xchg
test
push
sbb
mov
xchg
sub
mov
add
and
rolb
lcall
ret
xor
mov
sub
and
les
sub
xor
jmp
jp
cs
ljmp
dec
inc
pop
mov
into
mov
outsl
fbld
test
stos
mov
or
xchg
pop
data16
inc
adc
pop
cmc
repnz
rorb
push
ret
fistl
jmp
push
pusha
lea
jne
setge
pushfw
rcr
and
mov
pusha
xor
test
add
cmc
clc
movb
neg
call
ds
loope
shll
sbb
jmp
insl
adcb
shrb
mov
test
sbb
stc
movsl
cmpsl
scas
je
clc
pop
cmp
imul
call
ds
ret
aad
adc
dec
adc
aad
jle
movb
mov
lea
push
mov
cwtl
lea
push
call
adc
inc
outsl
mov
out
mov
push
insl
gs
push
dec
pop
insb
jno
adc
jge
cmp
icebp
lds
testl
aam
data16
mov
mov
lea
mov
sub
pop
insb
or
xchg
jns
fld
int3
std
insl
xchg
maxps
cmp
popf
mov
mov
xchg
pop
gs
pop
lods
imul
mov
mov
lock
lods
sub
mov
dec
pop
mov
jg
mov
movsl
mov
or
pop
out
test
mov
inc
or
loopne
push
and
ret
loopne
cld
mov
out
in
cs
int
push
mov
addr16
pushf
stos
dec
gs
roll
cmpsl
dec
dec
popa
les
and
in
stos
enter
leave
scas
fisttpl
fnstenv
push
pop
mov
jmp
jns
out
std
in
mov
pop
test
loope
cmp
push
or
insl
xchg
stos
dec
and
in
iret
adc
sbb
sub
push
insb
inc
push
rclb
fldl
dec
lret
sti
pop
rcrl
icebp
lods
inc
mov
inc
add
imul
stos
or
xchg
xchg
sub
or
arpl
adc
or
and
pop
dec
fistps
sbb
fisttpl
lock
pop
loop
fmull
cmp
sbb
mov
das
cltd
xchg
lods
jmp
adc
fucomi
ljmpw
lea
adc
loopne
imul
repnz
adc
sub
sub
stos
or
loopne
push
sbb
mov
into
gs
mov
sbb
pusha
sub
rclb
push
jnp
shll
sub
push
mov
push
mov
mov
movsb
in
xor
jp
xchg
lcall
push
pop
aaa
jmp
mov
pop
imul
jnp
imul
jge
mov
add
fs
lahf
adc
fisttps
pop
dec
lea
cs
xor
loope
loop
sbb
mov
minps
sbb
mov
cmp
lods
aam
xchg
pop
jno
test
push
push
fsubr
in
mov
fwait
pop
sub
push
sub
push
sbb
and
fdiv
xchg
xchg
cmc
aam
pushf
cmp
jo
mov
arpl
sbb
fdivl
test
jno
sbb
in
adc
outsb
imul
mov
jo
insl
in
setne
test
mov
in
jo
dec
add
jo
push
scas
stos
push
shlb
stos
adc
sbb
pop
adc
cmp
mov
sub
stos
aas
sbb
xor
sbb
outsb
inc
mov
arpl
imul
adc
gs
in
fs
hlt
lock
or
test
call
or
cltd
lock
mov
imul
scas
push
fwait
add
add
insl
mov
insl
insl
push
in
push
lods
inc
cmpsl
sub
mov
out
hlt
xor
inc
pop
sbb
and
insl
push
int
push
fstpl
outsl
and
push
cmpsl
fmuls
push
push
cmp
xchg
in
nop
outsb
cld
outsl
pop
imul
rorl
sbb
outsl
cld
lret
jecxz
mov
pop
sub
xchg
aam
dec
lods
ss
outsb
nop
ljmp
es
bound
mov
jo
icebp
and
cs
push
movsb
sbb
push
fildll
mov
pushfw
or
xor
or
push
mov
leave
jecxz
adc
lock
mov
mov
mov
cmp
jo
je
out
push
pop
or
mov
or
dec
adc
push
stos
or
adc
push
mov
mov
and
pusha
cmpsb
xchg
or
pop
icebp
scas
adc
stos
push
in
sbb
mov
mov
mov
mov
sbb
sbb
inc
sbb
insl
mov
popf
imul
fs
sbb
mov
add
flds
sbb
dec
sbb
pop
gs
or
into
insl
movsb
pop
mov
inc
or
mov
stos
adc
push
in
jo
mov
stos
mov
cmpsl
arpl
push
mov
dec
add
or
sbb
stos
sbb
lock
sbb
push
inc
daa
bound
mov
pop
in
pop
and
call
syscall
mov
jno
dec
mov
stos
jo
movsb
dec
stos
out
mov
scas
and
stos
adc
add
sbb
fmull
push
gs
insl
es
outsl
mov
sbb
aam
adc
insl
push
insl
gs
cs
push
out
or
mov
insl
sbb
imul
or
mov
stos
push
test
sub
pop
pop
sbbl
ljmp
call
mov
out
or
bound
push
test
lock
inc
bound
in
loopne
outsb
sbb
adc
movsb
xchg
adc
cwtl
out
imul
test
adc
mov
bound
outsl
sub
or
std
push
imul
adc
outsb
sbb
add
mov
adc
test
add
bound
pop
and
mov
insl
bound
cwtl
lods
out
fnstsw
fisttpll
movsb
in
xor
gs
pop
outsb
in
bound
cmpsb
sub
insl
pop
add
outsl
jmp
or
movsl
cmp
mov
mov
mov
mov
in
clc
lock
mov
or
bound
jo
mov
mov
in
push
adc
sbb
jno
inc
mov
mov
add
mov
inc
mov
or
mov
cwtl
and
cwtl
mov
mov
shll
movsb
lock
mov
mov
bound
outsl
pop
test
imul
or
mov
mov
push
outsb
add
in
cmp
fsubrl
sbb
push
add
sbb
mov
dec
js
sub
and
fcoml
in
sbb
lock
gs
je
jns
sub
das
sbb
cmpsb
adc
fs
call
outsb
mov
inc
sbb
loopne
or
insl
outsl
adc
mov
fsubl
xchg
lods
and
or
and
insl
jbe
insl
aaa
movsb
pop
mull
adc
pushf
ja
mov
mov
xor
daa
notb
sub
arpl
jo
and
dec
pop
test
adc
xor
out
das
jno
adc
mov
mov
mov
add
adc
push
inc
adc
fdivl
gs
dec
cmp
loop
pop
sbbb
mov
sbb
lods
mov
pop
and
aaa
in
das
mov
xchg
cmpsl
sub
out
fnstcw
arpl
pop
mov
jo
sbb
aam
and
pop
sbb
push
pop
pop
adc
jo
cwtl
mov
jno
dec
adc
movsb
mov
cmp
rorl
inc
imul
adc
ljmp
movsb
mov
sbb
jo
test
pushf
add
ljmp
sbb
mov
aad
movsb
in
xchg
leave
mov
xchg
ljmp
add
or
cmp
and
rsm
jno
sbb
jno
test
dec
push
lock
movsl
jno
sub
or
imul
outsb
push
adcb
notb
imul
lods
fnstcw
adc
out
popf
jmp
push
mov
aas
fwait
add
lahf
pushf
mov
sbb
mov
sbb
adc
cwtl
pop
data16
and
cld
cmp
loopne
and
popa
cld
mov
cld
pop
cld
sahf
cld
push
xchg
jmp
aam
adc
sbb
sbb
sbb
xchg
fcmovnbe
jl
push
int3
xchg
mov
mov
cwtl
lock
icebp
pop
mov
fld
sub
mov
aad
call
mov
roll
mov
lea
imul
aad
insl
mov
cwtl
xchg
push
adc
call
push
loopne
inc
jbe
add
gs
imul
mov
imul
in
ja
adc
mov
and
xlat
mov
dec
pop
fadds
popf
push
xchg
adc
fsts
call
sbb
or
ljmp
dec
dec
mov
stos
fstl
dec
aam
xchg
push
push
aaa
pop
and
pop
mov
adc
mov
cmp
and
cwtl
push
push
pop
and
pop
js
or
and
sbb
push
stos
push
and
sbb
loopne
pop
pusha
test
push
or
mov
and
mov
insl
fcoml
rorl
push
sbb
and
push
adc
mov
int
push
cltd
push
aas
loop
pop
xchg
sbb
loopne
out
xchg
aad
pop
and
push
int
arpl
cs
adc
and
or
out
stos
aam
rcll
sbb
imul
fdivrl
imul
adc
fdiv
or
test
pop
mov
fstpt
adc
inc
data16
bound
pop
sbb
push
stos
xchg
shlb
imul
mov
push
jno
nop
push
flds
push
push
aam
pop
outsl
xchg
pop
aad
pop
in
fs
hlt
ss
jecxz
mov
sbb
out
stos
pop
lods
xchg
loopne
and
push
push
push
insl
jecxz
jo
cmpsb
lock
push
sbb
popf
xchg
pop
aam
mov
outsb
adc
xchg
pop
outsl
push
pop
pop
and
mov
sbb
and
sbb
ss
adc
data16
and
pop
dec
mov
and
push
or
push
fldt
mov
jle
rolb
inc
pop
mov
push
test
sbb
jecxz
arpl
inc
mov
mov
imul
in
lcall
rorb
mov
jo,pn
push
les
addr16
jp
xchg
insb
lahf
into
inc
push
jmp
in
fcomps
add
jns
insb
mov
fwait
xchg
lds
lds
sarb
pop
test
fimull
iret
ret
in
in
iret
push
iret
rcrl
jecxz
sbb
fsub
pop
fwait
and
fs
fmuls
into
aam
inc
or
sbb
mov
push
fsts
or
mov
mov
out
cmpsb
data16
inc
fistpl
inc
fistpll
sub
mov
mov
hlt
adc
nop
inc
mov
push
or
push
mov
and
lcall
mov
sbb
fwait
xor
ret
loopne
fcoms
lods
mov
lahf
sbb
inc
push
stos
lahf
pop
ss
xchg
sbb
out
fs
movsb
cmp
fwait
shrb
sbb
bound
test
dec
push
pop
push
sbb
shrb
cmc
sbb
stos
notb
mov
sub
cmp
inc
push
nop
and
arpl
aad
jno
mov
movsb
test
call
sub
outsb
imul
cwtl
cwtl
push
outsl
jmp
ret
adc
add
or
adc
int
push
push
sub
adc
mov
pop
mov
add
cwtl
call
sbb
sbb
in
sbb
lock
adc
in
sbb
mov
pop
scas
pop
insl
and
loop
adc
sbb
shlb
ljmp
arpl
cmpsb
icebp
lock
insb
mov
xor
jo
popf
icebp
push
and
and
and
mov
mov
lock
and
push
or
cmpsl
icebp
stos
sbb
jmp
pushf
lock
sub
mov
adc
mov
jb
dec
fsts
push
out
or
loope
xchg
in
push
ja
imul
sbb
out
jg
test
mov
mov
xor
xor
in
push
adcl
stos
aad
mov
sbb
lods
ss
or
jp
or
jae
enter
jge
pusha
or
lcall
mov
jecxz
adc
pusha
mov
loopne
fistps
icebp
pop
in
aam
rcrb
inc
lret
sbb
fidivs
mov
adc
mov
ss
cmp
mov
jmp
push
push
adc
push
pushf
clc
fwait
scas
lock
cmp
insb
outsl
adc
outsl
and
cmp
cmp
arpl
out
call
adc
adc
loopne
mov
sub
cwtl
int
adc
jmp
adcl
xchg
pop
pop
rcrl
push
push
imul
add
dec
lret
push
lock
gs
xchg
mov
outsb
shlb
and
mov
or
push
mov
or
frstor
pop
pop
mov
inc
sub
fbld
sub
imul
inc
sbb
or
movsb
aad
lock
fwait
sbb
mov
pop
add
movsb
ds
pusha
xchg
push
scas
dec
filds
sbb
and
add
fs
adc
and
stos
fwait
mov
lods
loop
xchg
push
lret
pop
outsl
mov
add
dec
sarb
fists
push
movsb
push
xchg
or
in
push
aad
push
adc
fucomi
adc
out
pop
rcl
out
push
in
insl
adc
arpl
push
in
jmp
xlat
dec
pop
in
mov
loopne
lea
add
mov
adcb
lea
imul
std
adc
xchg
aam
mov
andl
xor
lcall
out
subl
loopne
mov
imul
movsb
lahf
xor
and
or
lock
jnp
xchg
in
sbb
sub
imul
or
sbb
outsb
imul
xchg
or
in
fnsave
push
and
jbe
outsl
outsl
cmp
xchg
and
lret
push
pusha
and
push
push
inc
sahf
adc
inc
aam
mov
rcrl
pop
lcall
arpl
jno
push
in
dec
xchg
icebp
sbb
sbb
cmp
fs
push
dec
push
outsl
sbb
ljmp
dec
cmp
push
sbb
stos
pop
cmp
mov
fs
jle
in
jmp
xchg
adc
imul
inc
loop
pushf
sub
sbb
jg,pt
adc
push
dec
sub
xchg
popa
lahf
in
add
mov
stos
sti
push
mov
out
das
mov
in
sbb
or
loop
or
jecxz
inc
add
xchg
pop
imul
and
adc
dec
int3
lret
out
pop
or
dec
mov
icebp
data16
in
call
sbb
sub
jmp
outsl
notl
adc
sbb
adc
int3
mov
mov
adc
cwtl
outsl
aam
xchg
mov
mov
pop
inc
push
outsl
shlb
test
push
shlb
jmp
push
push
mov
fcomps
xor
mov
adc
pop
dec
lock
mov
enter
bound
add
mov
xchg
mov
test
pop
bound
sub
das
stos
cmp
inc
daa
xchg
inc
in
adc
lock
jecxz
push
adc
jno
push
xor
cmp
movsl
sbb
mov
fcmovnu
pop
mov
out
dec
adc
pop
or
xchg
loop
xchg
mov
jbe
or
in
lahf
mov
in
mov
fwait
sahf
pop
mov
mov
mov
or
or
fistps
outsl
jge
lret
mov
mov
and
out
jmp
lods
in
decb
add
sub
cmpsb
sbb
cld
shl
adc
ljmp
and
or
mov
cmpsl
add
insl
pusha
or
mov
pop
and
dec
out
or
sbb
and
mov
fs
inc
cwtl
andl
comiss
stos
lock
xchg
out
in
shlb
dec
lret
inc
mov
xchg
push
add
rdtsc
out
push
mov
loop
push
mov
jno
stos
adc
outsl
mov
mov
jmp
in
ljmp
cld
popf
xchg
in
cmc
and
sbb
stos
ficompl
jecxz
mov
and
mov
cmp
daa
or
stos
out
push
mov
orl
mov
and
jecxz
mul
push
inc
xchg
and
cmp
dec
push
xor
scas
lods
sbb
lahf
mov
mov
cs
push
das
outsl
bound
and
jo
cmp
mov
adc
push
test
xchg
movsb
pusha
popf
or
push
xor
push
inc
loop
push
lods
data16
xchg
je
xchg
mov
sbb
mov
je
in
inc
hlt
data16
outsl
outsb
sub
pop
adc
jo
push
repnz
or
outsb
arpl
arpl
in
gs
cmp
cmpsb
fs
cmp
push
movsb
push
push
jge
push
push
jne
gs
addr16
push
xor
ror
mov
outsl
outsb
pop
je
pop
cli
mov
and
mov
push
mov
mov
adc
push
mov
test
fcoms
or
call
test
inc
push
popa
mov
push
xor
decb
adc
cmp
push
mov
in
push
insl
lods
insl
mov
adc
dec
dec
mov
mov
jae
rorb
mov
stos
mov
mov
pop
sbb
sbb
popa
inc
push
push
dec
mov
aad
add
outsb
or
push
movzwl
call
mov
cmp
pop
add
pop
mov
sbb
bound
enter
lret
clc
mov
pop
pop
fstl
or
bnd
push
push
mov
mov
popa
mov
loop
xchg
mov
mov
mov
stos
and
push
jl
dec
jmp
lock
pop
rorl
je
jo
inc
push
aad
in
push
or
sbb
jg
loop
clc
dec
dec
push
arpl
cmpsb
sbb
ljmp
ds
jo
data16
mov
jno
shlb
fs
mov
or
jne
out
outsl
sbb
adc
xor
ret
dec
push
adc
and
dec
and
xchg
pop
aas
scas
cmp
cltd
cmpsb
push
popf
std
mov
cmp
push
std
aas
push
mov
mov
sbb
mov
bound
je
outsl
popa
aas
syscall
push
scas
xor
shl
inc
xchg
push
jo
sub
mov
sbb
pop
clc
sbb
add
adc
adc
add
repnz
sbb
pop
inc
sbb
xchg
or
adc
sbb
test
pop
lea
jno
inc
cld
mov
je
bound
mov
mov
inc
mov
aas
add
add
std
pop
mov
xchg
cmp
jo
mov
push
testb
mov
aad
xchg
mov
sahf
push
push
pop
mov
mov
adc
push
call
sbb
dec
push
sar
dec
dec
fs
sbb
cmp
mov
xor
clc
add
lods
je
daa
mov
mov
sbb
cmp
lock
stos
int
fnsave
sub
push
mov
scas
mov
hlt
das
pop
in
lock
lret
add
jmp
mov
pop
outsl
jbe
int
insl
ret
dec
frstor
mov
fs
push
cmp
mov
movsb
xchg
dec
jle
or
and
stos
and
into
insb
jg
mov
in
fldt
insb
mov
pushf
inc
outsb
out
dec
in
imul
out
add
dec
das
push
outsl
sub
push
les
lods
lret
lods
inc
insl
rorl
jo
lods
pop
xor
or
insl
push
xchg
jmp
std
mov
or
pop
lods
int
lret
dec
xlat
xchg
inc
or
push
dec
mov
dec
adc
ja
fdivrs
ja
scas
pop
mov
lret
xlat
mov
mov
jmp
dec
addl
movsl
sub
insl
les
cltd
outsl
int
call
mov
add
push
dec
xlat
mov
pushf
or
scas
sahf
mov
and
or
lea
outsb
xchg
xor
cmp
mov
ret
sahf
and
sub
xlat
sub
outsl
fsubrl
incl
sbb
shrb
cmp
outsl
std
sub
iret
xor
aam
ret
jno
mov
cmpsl
lods
mov
dec
lds
pop
out
arpl
cmpsb
or
mov
push
or
outsl
add
mov
jecxz
push
push
push
jmp
xor
stos
dec
ljmp
xchg
lcall
fcomp
xchg
dec
cmp
rclb
push
xchg
ljmp
xlat
adc
lods
sub
mov
or
outsl
lret
sub
out
or
xor
mov
jecxz
adc
imul
cltd
lock
stos
in
sub
int
adc
add
xchg
in
rorb
scas
and
add
aas
mov
stos
outsb
and
dec
push
repz
pop
js
imul
mov
js
outsl
xor
add
or
pop
iret
pop
jno
jmp
clc
sub
push
push
xchg
jmp
adc
rcll
in
imul
sbb
sbb
inc
mov
mov
xchg
scas
or
dec
imul
dec
pop
into
cli
mov
pop
insl
fcomps
rcrl
insl
fsincos
movsl
stos
add
sub
fbld
fs
and
lret
scas
push
out
xchg
outsb
in
push
push
sbb
sub
scas
insl
andb
fsubrs
and
sbb
out
mov
adc
and
stos
orl
inc
sbb
lret
mov
es
sahf
push
xor
jmp
pop
mov
imul
cwtl
les
push
inc
scas
dec
lret
push
adc
jecxz
and
sub
xchg
int3
push
and
cs
iret
repz
test
xor
inc
xchg
sub
outsl
in
out
mov
outsl
jbe
imul
mov
pop
ja
aam
xor
pop
or
xor
gs
test
imulb
inc
and
call
and
mov
cld
dec
mov
jle
and
adc
mov
dec
ret
jge
in
addr16
mov
jmp
xor
or
mov
int
add
fdivl
xchg
lock
ds
cmp
cli
pushf
lods
shrb
pop
icebp
aad
stos
pop
into
mov
imul
dec
in
mov
push
dec
repz
out
repnz
mov
stos
scas
std
call
or
mov
enter
dec
lods
stos
xor
push
push
test
addb
lcall
or
clc
lock
sub
fs
in
leave
add
cmp
outsb
lret
jno
sub
xchg
xor
and
xor
cltd
or
pushf
sub
inc
sub
stos
jmp
scas
insl
lds
js
push
je
lret
inc
pop
mov
rorl
dec
or
scas
xor
push
mov
ret
in
imul
aad
sbb
andb
push
or
mov
filds
mov
lret
out
dec
stos
fs
dec
xchg
ljmp
lods
into
mov
xchg
das
jno
xlat
jae
cmp
andl
icebp
mov
gs
arpl
push
lret
add
in
stos
push
and
mov
mov
sub
cltd
dec
pushf
outsb
push
scas
mov
stos
cmc
add
insl
loope
gs
aam
and
outsb
mov
imul
mov
pop
subl
rcrb
or
jb
xor
and
icebp
sub
mov
xor
jmp
xlat
pop
insb
mov
imul
dec
push
pop
hlt
mov
mov
aaa
pop
imul
in
into
int
call
lcall
sub
xchg
aaa
es
das
pop
xchg
out
lret
jmp
xchg
arpl
push
sub
stc
sbb
por
lods
and
stos
aas
or
mov
mov
stos
orl
and
clc
mov
push
notl
mov
dec
aas
mov
outsb
mov
or
cmp
cmp
xlat
xchg
sub
inc
pop
push
cmp
and
ss
lods
mov
pop
scas
cli
mov
or
outsb
sahf
lret
rcrl
mov
lock
loop
or
shl
shlb
dec
lods
es
pop
subl
and
mov
mov
mov
popf
dec
inc
andb
add
pop
lret
insb
cmp
dec
push
aaa
addl
lret
adc
dec
popf
int3
or
or
idivl
imul
lods
or
sub
sub
and
int
xorb
mov
inc
xor
out
ficoml
sub
out
imul
lahf
dec
lock
gs
je
add
lret
mov
dec
mov
mov
adc
int
xchg
lods
dec
pop
inc
pop
outsl
insl
and
push
test
stos
cmp
dec
test
out
lods
pop
cmc
sub
mov
and
and
shr
mov
dec
jnp
stos
jmp
mov
lret
mov
jmp
scas
int
xchg
sbb
mov
lea
xchg
dec
pop
add
mov
jno
out
andl
leave
mov
adc
scas
mov
insl
mov
cmp
sbbl
dec
lret
iret
inc
jl
shlb
cmp
jle
repz
lret
or
mov
pop
adc
sub
es
mov
push
scas
in
fcompl
movsb
out
cld
clc
cmp
in
loope
cltd
jo
shlb
dec
icebp
jl
arpl
test
into
mov
in
cmp
mov
test
mov
bound
enter
imul
in
push
sub
imul
out
mov
jmp
push
cmp
lret
and
add
pop
cmp
lret
add
xor
inc
lock
lcall
orb
out
dec
int
or
cmp
scas
and
mov
lret
dec
in
andb
mov
stos
push
xor
add
scas
mov
outsl
mov
cmp
push
idivb
test
xor
sub
mov
out
and
pushf
insb
sti
test
mov
orl
xor
lahf
movsl
mov
iret
mov
lods
rolb
pop
and
pushf
movsl
sub
pop
jo
icebp
loopne
pop
shlb
je
cmp
pop
lret
lock
mov
adc
gs
cmp
insl
mov
mov
insb
sahf
xor
add
inc
out
loop
pop
popf
popf
or
dec
lcall
add
lret
movsl
and
call
mov
push
scas
call
push
jmp
and
push
shrl
mov
imul
xlat
adc
lcall
push
sti
call
in
imul
sub
aaa
xchg
addr16
js
cli
stos
test
pop
or
pop
test
dec
cmp
xchg
sbb
or
push
push
test
fstp
pop
shll
aam
insl
mov
or
rcll
iret
clc
imulb
outsb
mov
ljmp
ret
adc
adc
cmp
pop
mov
mov
fstpl
mov
mov
fsubr
jge
scas
mov
lods
notl
insb
jb
into
dec
jmp
xlat
stos
lods
jmp
push
lahf
sbb
lock
mov
lods
jmp
cmp
jl
pop
add
sub
scas
pop
cmp
push
int
fsub
cli
dec
add
imul
adcb
inc
add
inc
sbb
in
and
or
rcrb
subl
and
inc
mov
or
in
in
int
lods
daa
scas
jmp
pshufw
adc
into
std
fidivs
lods
and
fs
lea
mov
xchg
add
scas
or
mull
mov
hlt
xlat
out
cmpl
sub
into
jecxz
movsl
stos
mov
or
and
dec
cmp
xor
or
push
mov
pop
lea
bswap
les
mov
jg
pop
adc
pusha
dec
sbb
dec
ficompl
mull
cli
shll
adc
lahf
jecxz
jo
out
sbb
mov
fistpll
mov
mov
push
jb
inc
xchg
lods
stos
mov
xor
movsb
add
shrl
sbb
leave
sub
call
ljmp
dec
jp
sbb
or
imul
sub
dec
std
leave
lret
fcmove
xlat
pushf
ret
push
and
add
stos
add
xor
add
adc
jg
test
in
mov
add
data16
das
insl
outsb
addb
incl
ja
nop
int
sub
add
sbb
dec
add
mov
pop
cmp
mov
insb
add
pop
fs
xor
sub
outsb
dec
scas
hlt
sahf
lods
push
rorl
in
iret
mov
mov
mov
iret
dec
or
mov
push
mov
lret
mov
and
push
push
dec
int3
mov
mov
lods
jb
pop
repnz
jne
cmp
cmpsl
xlat
add
iret
push
add
fcmove
shr
inc
xlat
cmp
xor
std
push
int
repnz
arpl
mov
scas
or
shrl
leave
sub
mov
jmp
mov
dec
daa
or
outsl
dec
and
and
and
es
mov
fisttpll
mov
in
ja
int3
sub
mov
lods
xor
jno
xlat
lret
mov
jo
iret
lret
mov
pop
int
mov
pop
dec
lret
push
mov
fnstsw
dec
mov
jne
push
hlt
clc
jl
push
mov
or
frstor
cmpxchg
mov
mov
lods
je
sub
imul
je
in
sub
inc
jo
mov
imulb
outsb
aaa
mov
xlat
sbb
addr16
lret
je
dec
sub
out
outsl
int3
mov
or
pinsrw
xchg
jge
mov
fistpll
or
mov
sbb
mov
lods
das
mov
push
sub
subb
dec
cmpsb
mov
xchg
std
aaa
movsb
test
sub
test
das
sbb
hlt
loope
ljmp
adc
inc
movsb
add
or
or
mov
in
sub
and
mov
arpl
xor
dec
jnp
lahf
fnsave
xchg
xorb
xchg
mov
pushf
pop
and
mov
filds
dec
jo
xor
nop
cmpsb
insb
inc
fs
daa
std
adc
mov
sbb
cltd
mov
pop
lcall
and
lods
jo
inc
mov
push
push
jo
pop
xchg
fsubrl
mov
aaa
xchg
pop
jo
das
jno
shll
ret
divb
int
dec
inc
jbe
mov
insl
cmp
jo
cld
int
fldcw
mov
jp
cld
aaa
in
iret
shlb
mov
mov
daa
aaa
out
jno
test
mov
xor
pop
mov
clc
inc
in
test
jl
hlt
dec
dec
or
daa
sub
sub
xor
jo
mov
fs
or
sbb
jo
mov
std
cwtl
mov
fs
lcall
sub
jo
mov
mov
mov
scas
fldt
mov
lret
adcl
pop
dec
adc
insl
repz
insl
imul
dec
imul
jo
xlat
in
cmpb
jle
movsb
sbb
pop
jbe
mov
into
sbb
inc
aad
push
test
aaa
out
pop
jo
shll
sbb
and
mov
mov
cs
call
add
cmpsl
in
daa
mov
pushf
in
cld
int
scas
mov
mov
sub
pushf
mov
test
jnp
mov
loopne
jo
pop
insl
sub
mov
mov
push
add
nop
daa
inc
jo
mov
and
mov
xlat
mov
mov
in
sbb
cli
or
sbb
xlat
bound
sbb
pop
stos
shrb
mov
jge
outsb
insl
mov
pop
jo
out
outsl
out
pusha
inc
xchg
cli
cmpsb
adcb
push
das
std
cmp
sub
mov
outsb
scas
je
push
fsubs
mov
out
adc
insl
xchg
sbb
mov
and
data16
jmp
cmp
jecxz
jmp
cmpsb
or
cmp
sbb
xchg
or
lret
sti
inc
stos
or
sbb
sbb
cmp
arpl
cmpl
pop
jno
adc
cli
hlt
sti
xlat
rolb
loop
add
popa
addl
addb
subb
dec
push
test
mov
inc
mov
push
scas
sbb
inc
mov
mov
xor
ret
test
jmp
jmp
shrb
fs
stos
or
and
popf
sbb
movsl
xchg
andl
jo
icebp
jle
dec
mov
cmp
hlt
roll
dec
incb
mov
or
sbbb
stos
jge
inc
inc
and
push
mov
rcrl
movsb
js
push
push
mov
sahf
add
inc
shlb
cwtl
insb
push
test
dec
call
js
mov
insl
sbb
sub
fisttpll
dec
fs
xor
fsubrl
or
sub
stos
test
imul
arpl
mov
test
fcoms
sbb
sub
adc
in
mov
loopne
fs
push
pushf
ret
dec
inc
insl
mov
jne
outsl
mov
imul
sbb
popa
mov
mov
push
mov
mov
push
bound
ljmp
repz
mov
push
push
mov
xchg
inc
popf
jo
cmpsl
push
pop
add
sbb
arpl
movsl
inc
nopl
add
adc
jnp
pop
sbb
and
fwait
je
sbb
aad
sub
int3
inc
mov
or
and
sub
push
inc
or
shlb
insl
sbb
mov
inc
sub
pop
sbb
pusha
xchg
enter
stos
rorb
adc
fs
push
sub
pop
mov
xchg
rcr
sbb
xor
ljmp
sbb
xor
push
xchg
mov
adc
sbb
adc
adc
pop
lahf
filds
adc
leave
xchg
or
mov
jmp
and
push
mov
jo
pushf
and
cmp
jno
add
pop
popf
jecxz
pop
jno
sbb
adc
fisttpl
push
xchg
arpl
mov
pop
mov
xchg
sbb
adc
mov
sub
and
xor
push
pop
popf
repz
arpl
in
lcall
jo
pop
jo
insb
cmp
test
cmpsb
loop
scas
inc
push
pop
mov
test
movsb
scas
test
and
mov
lock
pop
or
xor
mov
jo
in
mov
movsl
in
pop
or
das
shlb
movsb
or
leave
or
mov
in
fs
jmp
adc
inc
lock
rolb
sbb
sub
imul
xchg
sub
sub
lods
mov
lret
mov
inc
movsl
jg
cmpsb
scas
insl
jl
adc
stos
mov
and
addr16
fstpt
aas
das
xor
push
xor
bound
jae
xlat
mov
out
es
pop
mov
dec
hlt
stos
jg
mov
mov
in
jg
cs
xor
enter
add
add
add
cmp
push
sbb
jp
and
and
pop
push
mov
mov
jmp
sub
or
jp
ljmpw
scas
jnp
jno
sbb
outsb
aad
scas
popf
mov
subl
aad
scas
repnz
test
sbb
cli
xor
add
sub
xchg
or
add
mov
insl
mov
lods
push
outsl
in
insl
rcrl
cmpsb
leave
push
jg
stos
adc
dec
pop
mov
xchg
hlt
stos
movsl
cmp
pop
decb
jns
mov
adc
or
mov
sub
aad
lret
push
cwtl
push
inc
or
add
adc
adc
push
mov
push
adc
lret
sub
sbb
test
lock
jno
cmc
mov
adc
xchg
pop
shll
lods
mov
cwtl
jns
jae
out
mov
xchg
pop
and
or
mov
cli
icebp
cmpsb
pop
xor
adc
dec
push
sbb
sub
cmc
insl
sbb
jne
gs
mov
cwtl
xchg
dec
pop
cltd
pop
or
or
inc
pop
outsb
call
out
fisubrl
enterw
adc
ss
xor
mov
push
xchg
jo
push
and
repnz
mov
jbe
jno
xor
adc
cmp
push
psubd
mov
sbb
out
test
sbb
mov
pop
mov
mov
push
mov
inc
or
fldt
cltd
shll
movsb
stos
in
xchg
sub
out
das
and
ljmp
shlb
movsl
sub
xchg
cmp
xchg
sub
and
rclb
in
jmp
rclb
xor
mov
stos
arpl
cld
rorb
iret
insl
jbe
mov
insl
jnp
sbb
xlat
jo
scas
jl
cmpsb
into
adc
test
test
ja
bound
adc
lods
pop
push
inc
push
pop
pop
mov
sbb
das
sub
mov
sub
sbbl
orb
lods
xchg
adc
sub
andb
sub
rolb
lret
lcall
push
or
or
or
jnp
test
cli
pop
push
std
mov
notb
fimull
roll
inc
fwait
mull
sub
mov
and
cmc
inc
adc
xor
pop
repnz
aaa
mov
pop
scas
mov
pop
das
push
into
add
in
xchg
lods
adc
mov
mov
fcoml
or
notl
arpl
mov
xor
fisubrl
add
ja
sti
inc
sbb
or
out
mov
shrl
jo
mov
xchg
adcl
and
push
fwait
sbb
or
jecxz
sub
outsl
push
or
xor
lods
ja
sbb
add
ret
mov
dec
inc
sub
sub
rorb
mov
mov
in
ljmp
data16
add
and
stos
sbb
pop
lods
cmp
jle
mov
jo
add
fmull
ljmp
jle
mov
in
jno
lods
or
loope
call
jnp
push
pop
or
cld
and
daa
sub
imul
mov
adc
mov
in
xor
gs
mov
je
mov
sub
repnz
out
sbb
imul
imul
and
pop
mov
ret
in
fstpt
add
or
daa
imul
pop
sbbl
fwait
testl
sbb
xor
inc
fs
sti
iret
mov
int3
or
xorl
mov
lcall
pop
mov
ljmp
inc
pop
xor
icebp
mov
pop
es
add
movsl
jecxz
sbb
iret
hlt
sbb
loop
bound
stos
mov
jo
lods
xchg
xor
test
sub
loope
adc
mov
fstpt
sub
bound
loop
sbb
add
ja
outsl
repnz
push
xor
mov
push
sbb
arpl
mov
push
aad
aas
sub
mov
dec
insl
outsb
adc
insl
aaa
adc
pmulhuw
icebp
push
sbb
lods
add
int3
outsl
lret
mov
push
and
mov
in
adc
jecxz
addr16
mov
adc
inc
clc
insl
push
dec
sbb
insb
jmp
data16
mov
mov
sarl
sbb
mov
mov
bound
mov
adc
sub
mulb
push
mov
adc
xor
imul
ds
in
sbb
ret
std
cli
cld
add
mov
sbb
bnd
jno
movsb
adc
add
rolb
outsb
push
sbb
xchg
rorl
or
sarb
bound
or
pop
orl
mov
pop
inc
fmull
data16
push
dec
bound
lock
in
lock
outsl
cmp
push
pop
inc
cmp
mov
xorl
push
jecxz
jmp
gs
cld
mov
js
inc
jecxz
jae
sub
ds
inc
dec
adc
xchg
fs
adc
std
xor
push
inc
aas
sbb
inc
fisttpll
data16
push
sbb
leave
dec
and
mov
test
cmc
adc
pop
or
inc
outsb
scas
add
pop
insb
dec
mov
adc
lcall
icebp
adc
in
jp
sbb
adc
mov
push
adc
jp
nop
ja
xorl
mov
inc
dec
jmp
ret
mov
adc
pushf
add
dec
xchg
repnz
sub
aas
in
aad
sbb
lock
mov
mov
test
in
mov
jno
jo
fistpll
xchg
or
xchg
push
lcall
pop
mov
in
cmp
inc
rcrl
inc
pop
mov
lock
pop
int3
push
pop
mov
mov
rcrl
xor
cmc
or
xchg
in
cmp
outsl
andl
das
mov
xchg
mov
and
imul
in
xor
mov
stos
mov
xchg
lahf
dec
mov
push
sub
fsubrl
stos
push
outsl
xor
mov
adc
mov
or
pop
push
outsl
mov
pop
popa
call
xor
inc
mov
lock
cmpsb
add
arpl
mov
rolb
insl
mov
gs
bound
and
subb
rcrb
adc
inc
mov
mov
leave
inc
add
insl
inc
adc
call
lret
imul
in
jmp
rcll
lock
adc
inc
notb
std
fnstcw
in
inc
mov
push
xchg
push
pop
mov
add
add
pop
sub
jecxz
mov
out
mov
push
sbb
jmp
xchg
mov
fsubrp
orl
mov
mov
stos
inc
adc
gs
lods
mov
and
stc
mov
and
mov
pop
inc
or
dec
shlb
xor
push
mov
in
mov
cmp
or
mov
sbbb
les
test
addr16
dec
scas
test
scas
xchg
fidivrl
sarl
movsl
mov
outsl
xchg
xor
shll
mov
add
sahf
push
and
pop
or
jp
cmp
push
adc
lahf
mov
push
and
std
cmp
xchg
in
mov
mov
jnp
cmp
repz
inc
mov
sbb
clc
or
xchg
std
push
insl
gs
mov
inc
or
imul
cmp
or
daa
fisttpll
lods
outsb
cs
adc
gs
sbb
xor
lods
out
lock
xchg
mov
mov
push
in
repnz
sub
mov
adc
pop
cmp
outsl
aaa
lods
xchg
adc
sbb
inc
mov
mov
sbb
or
sub
cltd
pop
mov
cmp
adc
inc
add
cwtl
sbb
mov
lods
xchg
jo
imul
mov
mov
js
ja
push
arpl
into
rcr
aas
out
pop
out
lret
jmp
push
pop
bnd
mov
jo
fs
addr16
inc
add
sub
fs
shrl
in
jbe
jne
jno
pop
mov
sbb
sub
sbb
xchg
or
pop
dec
test
insl
pop
mov
jnp
dec
inc
pop
subb
sub
adc
add
push
xor
lock
cmpsb
push
jno
cmovge
xchg
insl
push
insb
loop
or
pop
push
lcall
ja
data16
add
bound
sub
arpl
cld
and
ds
sbb
push
adc
mov
mov
lods
jp
andb
rolb
sub
inc
jnp
lret
nop
mov
mov
cmc
sub
or
dec
hlt
in
test
adc
sbb
pop
mov
repnz
mov
or
shr
pop
inc
stos
and
dec
inc
or
push
pop
xchg
mov
mov
nop
in
inc
mov
push
inc
xchg
pop
insl
lcall
sarb
push
xchg
adc
pop
mov
test
lods
es
outsb
mov
jl
jb,pt
dec
xor
xchg
mov
call
jp
mov
xor
adc
xchg
cmp
imul
pop
test
push
or
loop
pop
pop
dec
insb
movsl
push
cld
add
ret
stos
bound
rcll
mov
lods
insl
xchg
test
or
mov
or
lahf
mov
cs
data16
shld
in
or
outsl
mov
or
pop
je
cmpsb
adc
adc
insl
arpl
imul
jo
mov
sbb
outsl
subl
into
add
shrb
mov
push
push
push
push
imul
in
test
or
push
sbb
fsts
pop
sarl
repz
andl
fdivrl
sbb
add
xchg
insb
sub
mov
mov
nop
sbb
jl
mov
cli
mov
push
mov
sbb
add
icebp
inc
in
adc
mov
shr
subb
outsl
push
push
gs
lds
sbb
push
push
cmc
push
sbb
xchg
stos
or
in
adc
mov
adc
push
sub
xor
jl
sbb
inc
sbb
stos
mov
inc
add
sti
sbb
xor
mov
jno
mov
inc
xchg
or
pusha
bound
inc
mov
fs
shlb
inc
pop
mov
test
push
add
pop
pop
push
jl
push
adc
cmp
and
pop
push
adc
stos
adc
or
and
sbb
cmp
adc
push
lock
push
mov
mov
outsl
adc
push
inc
jg
arpl
add
mov
sbb
or
pop
sbb
sub
mov
dec
cli
inc
jbe
or
rolb
jmp
mov
loopne
pop
mov
outsb
or
movsl
adc
stos
push
mov
or
jno
outsl
insl
cmp
fnsave
xor
mov
xor
and
movsl
jno
adc
pop
sub
cmp
push
test
xor
rcrl
pop
sbb
lock
push
cltd
in
repnz
gs
lods
mov
lock
cmpsb
out
sub
mov
cmpsl
cmp
xchg
cwtl
mov
repnz
sbb
loope
sub
dec
scas
pop
xor
sbb
mov
pusha
mov
jo
inc
repnz
ds
jo
aaa
or
sbb
arpl
test
push
sbb
adc
xchg
icebp
add
ljmp
popf
jns
lods
adc
addr16
test
outsb
mov
pop
xchg
fistpll
sub
add
rcrb
cli
filds
test
sub
pop
lret
dec
in
dec
pmaddwd
and
lahf
pop
insl
pop
imul
mov
mov
and
packuswb
sbb
repnz
push
mov
gs
add
mov
mov
xchg
repnz
pop
dec
sub
jno
cmp
mov
fs
mov
push
sbb
data16
ret
insl
sbb
mov
jns
mov
call
mov
push
insb
in
data16
movsb
jnp
mov
push
jno
outsb
or
mov
sbb
pop
sbb
addr16
mov
or
adc
ds
fdivl
mov
push
rol
movsb
wrmsr
sbb
mov
rorl
cmp
repz
in
in
xchg
adc
nop
bound
jmp
lods
sbb
rolb
mov
lahf
sbb
or
adc
orl
addr16
jmp
mov
sahf
push
lcall
or
clc
add
lods
data16
push
pop
pop
pop
inc
sbb
data16
add
mov
xor
pop
inc
outsl
xor
fildll
push
orl
dec
in
push
sti
inc
aas
push
fwait
aas
adc
pop
adc
sub
push
mov
rcll
pop
insl
fwait
mov
jno
bound
adc
cmp
in
sbb
adc
shl
push
dec
xchg
in
pop
mov
mov
lods
inc
sbb
jae
push
repz
cs
add
push
outsl
add
push
mov
xor
or
mov
sbb
stos
or
or
sahf
out
fimull
dec
adc
stos
mov
inc
frstor
cs
fs
arpl
fwait
mov
fdivrs
xor
enter
pop
cs
mov
add
mov
mov
pop
push
jmp
ljmp
mov
push
addr16
mov
aas
sbb
pusha
pop
insl
add
pop
push
mov
mov
push
pop
notl
gs
inc
subb
sub
push
pop
mov
jae
mov
or
rolb
mov
push
cmpb
pop
xchg
jmp
jle
xchg
jge
outsb
mov
sub
adcl
outsl
in
cmpsb
push
cmp
mov
mov
lods
jp
add
jo
mov
gs
fs
sub
cmp
mov
sub
pop
bound
movsl
inc
mov
scas
mov
stos
cmp
movsl
or
jmp
adc
pop
gs
add
divb
add
subb
arpl
je
cmc
inc
sysenter
ds
push
nop
adc
stos
add
mov
in
xchg
mov
add
fildll
movsl
data16
nop
bound
insb
inc
into
sub
addr16
add
jo
jp
lahf
sbb
sbb
mov
sub
loopne
cmp
inc
pop
adc
jmp
sbb
sbb
jle
inc
pop
and
roll
roll
sub
sub
sbb
or
cmp
adc
rcrl
xor
ja
mov
inc
or
mov
pop
cmp
dec
mov
adc
icebp
or
sbb
gs
xchg
inc
stos
inc
mov
or
test
inc
lahf
mov
xor
mov
addr16
aas
ljmp
or
pop
inc
rcrl
ss
nop
adc
mov
push
mov
xor
subb
sbb
jle
pop
sbb
fwait
mov
mov
mov
and
cmovns
mov
data16
lods
lds
jbe,pn
xchg
cmpb
sahf
stos
adc
adc
fildll
xchg
test
or
lods
shlb
mov
push
mov
pop
and
mov
fistl
add
lods
mov
xor
arpl
lds
lock
jge
fidivrl
imul
jle
outsb
sarb
jo
xchg
mov
mov
push
sbb
dec
jo
nop
insl
xchg
or
jo
lods
je
dec
mov
adcb
repnz
andb
or
pop
and
inc
lods
loope
lcall
push
or
sub
inc
pop
inc
sbb
mov
gs
stc
or
fisubrl
int
pop
scas
outsb
push
mov
pop
ret
pop
xor
push
jne
fnstsw
cmp
xor
out
outsb
testb
adc
sub
or
pushw
daa
shrl
sarb
aaa
mov
out
jge
jo
pop
roll
adc
negb
hlt
mov
aaa
das
sub
mov
xchg
xchg
aaa
jle
sbb
adc
jl
fcmovnbe
jno
lods
ret
push
jo
xchg
or
mov
or
mov
or
divl
idivb
jbe
out
inc
out
mov
mov
mov
mov
sbb
sub
test
sub
sub
push
xor
adc
sbb
mov
jne
jae
leave
push
push
inc
jbe
lock
mov
inc
adc
mov
mov
nop
stos
popf
inc
add
inc
mov
ror
popa
add
outsl
jnp
ret
mov
stos
sub
shrl
movsl
je
cmc
clc
mov
decl
enter
stos
cld
pop
push
cmpsb
push
inc
mov
push
mov
add
outsl
pop
push
mov
pop
call
sbb
mov
push
inc
pop
mov
dec
dec
push
pop
mov
movlps
and
sbb
sbb
cmp
std
mov
shl
mov
adc
mov
orl
in
mov
push
mov
mov
pop
shrd
mov
mov
dec
addl
insb
mov
push
popa
pop
insb
nop
jnp
add
popl
jo
lock
std
aas
mov
fimull
inc
or
loope
or
xor
pop
shl
add
and
adc
mov
mov
add
push
mov
lods
iret
or
mov
mov
jne
push
cmp
or
lock
mov
mov
mov
mov
sbb
pop
shll
rcrb
mul
sub
sbb
stos
addl
sub
xchg
pop
pop
mov
or
lock
arpl
ds
cmpsl
pushf
sbb
ret
mov
mov
or
mov
sbb
xchg
adc
nop
mov
cmp
push
xchg
adc
stos
sbb
push
mov
or
or
xor
pop
in
push
and
pop
dec
or
add
inc
or
mov
jle
mov
sbb
pop
or
mov
pop
pop
push
xchg
cmp
adc
pop
mov
int
mov
mov
add
into
ss
ret
adcl
add
rcr
push
icebp
jecxz
mov
in
in
sbb
jl
fwait
push
mov
add
mov
int
sub
lahf
adc
xchg
fidivrl
add
mov
and
std
mov
push
push
ja
or
lcall
adc
sbb
mov
sbb
sbb
mov
adc
cmp
loop
push
xor
fstpt
mov
shr
mov
add
rorl
popa
in
orl
cld
mov
and
jle
xlat
out
mov
insl
pop
jo
mov
or
push
push
lcall
in
test
sti
enter
gs
stos
jg
cwtl
or
add
or
lods
jo
insl
imul
sub
loop
push
cmp
lcall
or
mov
mov
pop
inc
mov
pushfw
mov
dec
mov
pop
sub
stos
fnstsw
in
pushf
mov
push
stos
mov
xchg
mov
mov
or
ja
pop
pop
faddl
inc
inc
mov
adc
dec
sub
aad
mov
jnp
push
push
add
and
frstor
and
mov
pop
lahf
nop
insl
std
dec
outsl
incb
in
shrb
sbb
roll
push
jo
push
push
push
adc
mov
arpl
arpl
add
dec
dec
bnd
stos
or
push
mov
push
cmp
mov
push
xchg
pop
hlt
sbb
gs
or
xor
rcrl
shrb
pop
xchg
or
add
adc
nop
and
fs
sbb
iret
rolb
hlt
mov
pusha
stos
add
mov
dec
jge
pusha
std
jmp
pop
mov
push
inc
mov
sbb
out
mov
fidivrs
mov
lcall
add
rcll
or
pop
jp
gs
sbb
sahf
mov
lods
sbb
add
mov
jno
outsl
ret
aad
dec
sub
lea
inc
pop
test
shrb
sahf
xchg
outsb
inc
cmovae
out
stos
and
pop
movsl
gs
in
nop
or
pop
lods
or
sbb
mov
hlt
int3
adc
pop
jmp
inc
or
xor
data16
mov
inc
iret
xor
or
mov
call
cmp
insl
mov
movsl
ss
xorl
in
test
adc
imul
sbb
pop
mov
scas
repz
dec
mov
adcb
sub
pop
test
pop
pop
pop
daa
insb
call
lods
pusha
dec
jl
popf
or
arpl
jp
adc
mov
push
cmpsl
cmpsb
imul
ja
mov
fistps
cmp
sbb
inc
repnz
dec
push
sti
shlb
adc
dec
or
les
push
gs
mov
cmp
inc
outsl
mov
sub
pop
push
adc
mov
inc
pmaxub
ljmp
jno
mov
adc
xchg
test
add
rorb
stos
pop
sbb
or
imul
and
test
inc
adc
jge
test
outsb
cld
stos
movups
pop
and
andl
adc
or
in
lods
imul
add
mov
adc
adc
in
adc
adc
and
xchg
pop
lods
adc
mov
repnz
add
adc
bound
mov
push
push
insl
imul
insb
jge
jp
sbb
push
adcl
lret
mov
dec
push
test
pop
gs
add
mov
mov
mov
insl
in
xchg
xorl
adc
pop
outsb
sub
or
add
push
and
sbb
push
test
push
pop
in
outsl
pop
cli
fs
mov
sarl
popl
in
and
mov
dec
ja
mov
mov
pop
xor
add
stos
adc
push
dec
mov
mov
dec
outsb
call
fidivrl
add
and
pop
shll
push
mov
stos
push
in
into
fs
push
ds
adc
mov
jp
lock
pop
and
push
add
or
addb
inc
mov
pop
mov
sbb
push
push
pcmpgtw
mov
imul
mov
push
lods
mov
xchg
add
movsl
adc
sbb
push
jno
mov
sbb
mov
cmp
mov
jno
fs
add
gs
mov
fs
adc
push
push
xor
inc
push
add
outsb
sarb
push
push
or
and
pop
add
xchg
xchg
xchg
gs
mov
test
gs
stos
addr16
sbb
outsb
nop
xlat
xchg
mov
add
imul
bound
in
outsl
push
imul
mov
sub
out
push
in
adc
test
jo
arpl
push
test
push
insl
or
fdivs
leave
dec
sbb
xor
fidivl
lods
add
cmp
or
mov
movsl
lods
mov
or
fists
xor
pop
jno
and
or
imul
ljmp
dec
sbb
or
mov
xchg
sbb
dec
push
mov
test
shll
mov
aaa
push
pop
repnz
jo
mov
cmpsl
sbb
icebp
sbb
adc
insb
xchg
call
dec
sbb
dec
pop
subb
inc
push
mov
mov
jno
or
cwtl
imul
cmp
mov
in
lcall
pop
mov
pmaxsw
mov
stos
fs
orb
and
push
sbb
cmpb
fcomip
outsl
push
stos
and
stc
jbe
push
inc
ds
fisubrl
arpl
mov
repnz
scas
xchg
pop
inc
stos
in
push
adc
mov
pop
in
dec
mulb
and
inc
push
adc
pop
insb
in
mov
cli
push
adc
mov
pop
add
adc
cmp
iret
jl
cld
mov
cmp
mov
add
out
inc
movsb
jp
adc
mov
xor
mov
inc
sub
inc
lods
push
inc
sbb
adc
sub
shr
rcll
push
outsl
jno
sbbl
fs
adc
rorl
hlt
inc
jmp
fwait
or
and
inc
rorb
mov
xchg
repnz
cmp
sub
hlt
movsl
sbb
pop
test
mov
ljmp
icebp
mov
and
in
mov
outsb
lea
push
icebp
inc
pop
mov
lahf
and
es
inc
insl
cmp
movsl
mov
shlb
mov
jo
fmull
dec
out
or
mov
sbb
mov
add
arpl
sbb
or
out
xacquire
cmpsb
push
out
or
arpl
lcall
les
dec
shlb
pop
pop
sub
cmp
push
pusha
and
jmp
sbb
addb
xchg
dec
enter
hlt
push
cmpb
nop
inc
mov
into
push
sbb
mov
shrl
xor
sub
inc
jmp
or
js
movsb
push
xor
fimull
push
loop
or
adc
add
adc
sbb
or
pop
insb
ret
loop
gs
nop
mov
jno
insl
push
adc
pop
and
imul
xchg
mov
pop
iret
push
gs
mov
mov
sbb
pop
dec
or
imul
mov
movsl
inc
add
inc
inc
mov
subb
inc
mov
sub
adc
sbb
mov
subb
scas
mov
cmp
popa
das
mov
mov
xchg
pop
cmp
add
mov
orb
sbb
pop
jecxz
or
and
lods
adc
lds
sbb
or
les
mov
push
push
sub
or
add
cmp
div
gs
call
aaa
test
cld
aaa
scas
or
push
popf
in
xchg
ja
loop
cmp
pusha
in
insl
sub
lods
or
cld
in
ret
out
in
pushf
clc
sub
in
sub
lods
sbb
pop
sahf
mov
fcoml
mov
bound
push
jmp
sub
or
dec
inc
and
insl
cmp
jge
jne
inc
std
gs
fidivl
mov
arpl
mov
jge
mov
add
dec
and
in
inc
jecxz
fidivrl
out
mov
lods
sub
sub
gs
cmp
pop
mov
or
push
popf
imul
mov
pop
mov
ret
pop
outsb
lahf
lods
jmp
arpl
jl
hlt
in
ljmp
inc
push
sbb
iret
aaa
jno
jbe
in
out
push
addl
out
mov
data16
dec
xor
jno
dec
int
filds
orl
mov
jo
push
adc
and
sbb
fsub
jbe
mov
iret
add
fwait
out
cmpsb
in
test
xor
xor
push
gs
fisttpl
std
sub
imul
in
ss
add
fsubr
iret
and
daa
stc
sbb
pop
mov
imul
std
mov
push
jg
shll
mov
jmp
xor
call
sbb
in
stos
add
out
fnsave
mov
add
addr16
jg
popa
lods
jg
shl
lods
stos
outsl
iret
jmp
jo
fcom
jno
cmpsl
bound
inc
pop
pop
dec
and
mov
lods
in
add
ja
lds
aad
mov
subl
lock
ljmp
push
imul
jle
push
shrb
in
sub
push
mov
movsb
lock
pop
pusha
insb
push
xor
pop
dec
call
inc
dec
pushf
and
mov
insb
cld
xchg
sub
mov
nop
loopne
hlt
clc
aam
fsubrs
in
insb
shlb
adc
jmp
xor
cmp
or
je
popf
and
or
inc
mov
insb
inc
dec
std
xor
cltd
lea
xor
loope
fxch
shrl
jns
push
mov
cmpl
test
lock
add
call
cld
mov
gs
hlt
or
mov
mov
clc
movsl
in
fs
sub
rorb
xor
lods
popa
jmp
int3
mov
adc
popa
sub
lods
mov
mov
mov
shl
divb
sub
cmpsb
out
cmpb
sbb
fcomps
pop
xchg
fiaddl
repz
push
out
mov
insb
inc
cltd
roll
add
into
jmp
mov
cmpsb
ret
aas
or
jns
fistps
loopne
xor
scas
jge
adc
insb
sub
sbb
insb
xchg
repnz
mov
insb
std
inc
add
shrl
cmpsl
fbld
in
inc
insb
lds
pop
mov
lahf
push
add
test
test
mov
jecxz
arpl
mov
jg
or
jp
mov
insb
pop
roll
daa
push
test
and
dec
lret
adc
sub
pop
lods
cmp
inc
push
ss
inc
mov
cmp
mov
cmpb
imul
xlat
cmpsl
xor
js
or
xchg
or
push
stc
hlt
aam
mov
xchg
push
lahf
enter
xor
jp
ds
insb
mov
fimuls
insb
pop
mov
xchg
xor
jg
inc
adc
push
les
mov
cmpsb
outsb
aaa
ret
les
jg
sub
lret
jge
push
mov
cmp
sbb
lret
les
insb
and
add
mov
insb
jl
cltd
pop
pop
pusha
mov
sub
add
xlat
adcb
jg
inc
insb
ret
pusha
pop
inc
sbb
insb
mov
shlb
popf
insb
jne
or
js
mov
insb
cmp
sbb
rcll
lock
push
sbb
push
insb
push
outsb
cmp
adc
test
cmp
scas
fstpt
aam
ss
loope
push
mov
insb
sbb
leave
dec
add
push
jno
divb
outsb
dec
xlat
or
mov
sbb
out
scas
pop
insb
push
cmc
cmp
lcall
xor
mov
mov
push
fcomp
pop
movsl
add
lds
jne
dec
jecxz
sub
cmp
addr16
lods
xchg
xchg
mov
mov
jns
pop
loope
test
fldcw
test
aam
and
ljmp
or
jo
shrl
inc
mov
stc
aas
xchg
aam
das
lcall
xchg
mov
sbb
mull
dec
sub
imul
adc
push
aad
jae
add
outsb
pop
in
cmpsl
mov
in
inc
repnz
dec
cwtl
fs
outsl
and
inc
mov
jle
fwait
push
fldl
daa
rcr
insb
jae
into
xchg
pop
sbb
pop
pop
jns,pt
xor
psllq
cmp
cwtl
insb
inc
cmp
inc
or
insb
aas
dec
xor
sub
mov
pop
mov
sub
pop
inc
mov
xchg
das
rolb
jns
movsl
insb
stc
lret
xor
js
insb
xchg
mov
push
cmp
int3
ret
sbb
sarl
je
mov
lret
adcb
pop
cwtl
mov
sub
arpl
das
and
xchg
je
ror
cmpsb
rcrl
pop
insb
dec
ret
imul
cmpsl
push
jbe
sub
xlat
dec
sbb
incb
inc
mov
or
jecxz
insb
push
into
fnsave
mov
ss
push
dec
inc
xchg
pop
cmpsl
lahf
or
insb
ds
in
std
imul
xchg
call
int
mov
mov
xor
iret
test
stc
out
into
lret
jecxz
lret
pop
sub
push
jae
lahf
push
dec
stos
shl
xor
fiadds
aaa
lods
mov
stos
cli
test
es
inc
into
mov
insb
outsl
sbb
sub
insb
and
and
push
aaa
leave
add
add
fdivl
mov
jns
mov
subl
xchg
push
inc
xchg
insb
aaa
ror
nop
xchg
xor
jmp
mov
or
pop
ss
push
insb
mov
adcl
pushf
cmpb
outsl
jne,pt
mov
push
pusha
xor
pop
aam
insl
out
iret
add
cmp
popf
mov
imull
push
ds
mov
insb
or
cwtl
xor
sbb
pop
lods
mov
mov
out
das
insb
and
inc
js
pop
and
insb
xchg
aam
loope
xchg
int
dec
leave
or
fsubrs
andl
push
inc
je
int3
push
insb
or
xor
mov
repz
xor
cmp
std
lods
pop
daa
out
iret
push
out
sbb
inc
xorps
icebp
xchg
insb
bnd
sub
out
adc
xchg
mov
int3
jle
ret
cmp
test
fwait
sub
rolb
dec
cwtl
mov
int
or
xchg
push
push
stos
aam
sub
pop
sbb
and
or
ret
insb
jecxz
mov
cmp
lcall
insl
repnz
sub
insb
shlb
sahf
das
inc
xchg
cmp
inc
inc
popl
xchg
stos
ret
mov
fcompl
sub
je
insb
push
sbb
sub
add
sbb
stos
subl
aam
in
add
push
and
xchg
jl
fcoml
mov
std
xor
or
daa
add
out
repnz
mov
je
cld
mov
sub
xor
add
aam
loope
push
mov
cmpsb
insb
clc
out
ja
stc
pushf
push
sbb
jl
scas
fdivl
insb
jle
pop
imul
daa
insb
les
sbb
xchg
mov
arpl
xchg
add
insb
cmpsl
pop
sbb
ljmp
clc
jmp
aam
pop
cltd
test
cmp
insb
add
ret
sub
sub
js
xchg
or
cmp
out
outsb
lret
imul
lods
sti
add
sbb
dec
insb
sub
mov
out
insb
mov
sub
fwait
and
sbb
insb
and
js
repnz
add
rcr
mov
jge
xchg
sbb
mov
fdivs
jmp
gs
cmp
addr16
xor
insb
push
pusha
jb
mov
pop
or
loope
sub
sbb
shrl
pop
pop
cs
pop
insb
aaa
add
cmc
inc
add
adc
sbb
pop
bound
or
cmp
mov
sub
sbb
or
jle
pop
sub
add
or
or
insb
test
mov
divl
push
cwtl
mov
notb
fisttpll
mov
cmp
xor
pop
dec
test
je
nop
fcmovne
push
out
mov
daa
stc
add
mov
xchg
fildll
jne
or
sub
popa
ss
mov
pop
jl
mov
mov
sub
cmc
int
and
sbb
jns
jbe
mov
adc
addr16
add
out
popf
pop
mov
xlat
adcl
cmp
sub
stos
push
gs
mov
insb
mov
adc
ret
inc
inc
xlat
rclb
int3
dec
push
aam
inc
mov
outsl
sbb
pop
insb
fldl
jae
cmp
push
add
stc
sar
out
jmp
ret
lret
mov
mov
arpl
sub
push
pop
insl
pop
xchg
std
push
cmc
and
outsl
push
repz
dec
mov
in
fsubr
dec
daa
or
jmp
mov
out
jo
scas
or
dec
data16
sbb
ljmp
adc
push
jno
or
sub
mov
jl
xchg
mov
imul
mov
call
lock
adc
ja
pop
sub
push
outsl
pop
mov
pop
sbb
insl
fsubrl
out
jmp
push
dec
xchg
lods
dec
pop
jne
push
jl
jo
pop
sub
pop
dec
mov
jns
jno
jecxz
push
rcll
lods
stos
xchg
pop
adc
xchg
das
in
xchg
rcl
lds
mov
mov
lds
pushf
xchg
aad
fstpl
push
mov
pushf
jae
push
mov
aad
inc
adc
repz
push
ret
sbb
jo
adc
lods
add
lock
sbb
cwtl
pushf
dec
sbb
cwtl
push
cwtl
aaa
push
inc
cmp
dec
scas
imul
test
stos
push
pop
inc
mov
inc
out
cwtl
mov
adc
sbb
mov
or
pop
push
gs
insb
xor
and
push
rclb
lock
pop
fsubs
adc
testl
lods
push
sbb
sbb
lret
ss
mov
xor
mov
cwtl
xchg
and
push
loop
sub
sub
add
and
cltd
call
mov
sub
pop
popf
mov
pushf
adcb
sbb
int3
mov
mov
cmpsb
out
pop
pop
cmp
daa
cli
pusha
sub
sub
mov
jmp
mov
scas
lods
lods
imul
stos
inc
cmp
inc
cmp
mov
testb
repnz
pop
cli
xor
loopne
inc
gs
sub
and
jbe
out
and
fadds
sbb
popa
push
in
mov
and
pop
in
imul
hlt
jmp
insl
adc
and
out
or
pop
xor
out
sub
sbb
test
push
cmpsl
pop
or
imul
push
adc
pop
push
adc
loopne
fwait
and
aam
shrb
and
push
cwtl
out
push
sbb
adc
jo
or
adc
push
inc
scas
xor
or
push
pop
push
and
push
mov
push
push
cmp
mov
mov
xchg
cwtl
push
scas
rolb
lea
jmp
xchg
out
mov
scas
sbb
jecxz
sbb
push
aad
sub
jge
push
mov
aad
inc
push
pop
adc
loopne
data16
push
push
xchg
scas
jae
push
fs
sbb
and
lock
push
sub
push
lds
test
lds
jecxz
mov
adc
andl
xchg
call
shrb
and
push
cmp
scas
pop
fs
or
pop
fs
sub
negb
lock
cwtl
int3
out
call
sub
imul
push
adc
sbb
mov
out
test
pop
and
popf
sub
pop
sbb
inc
adc
and
imul
dec
sbb
sbb
sub
dec
add
push
inc
lret
ss
jno
out
push
mov
test
jno
fucomip
lea
in
adc
movsl
out
sbb
scas
imul
test
out
mov
adc
and
sub
or
das
outsb
frstor
jmp
jno
popa
rcrl
dec
xor
cmpsl
add
jae
cltd
push
xchg
es
push
lea
mov
lea
or
mov
fwait
mov
data16
divb
cmpsl
pop
rcll
cmpsl
nop
inc
in
fsubl
cmpsl
jl
adc
xchg
outsl
arpl
inc
cmp
hlt
adc
and
arpl
rcrl
lea
inc
outsl
dec
mov
pop
pop
inc
out
sbb
out
pop
mov
aam
aad
bound
push
xchg
dec
pop
inc
xchg
ss
pop
ss
inc
repz
or
vdbpsadbw
fdivr
cwtl
xorl
arpl
xchg
sbb
xchg
adc
ljmp
repz
or
jno
jge
sti
xor
test
dec
lods
mov
xchg
ljmp
jge
leave
stos
or
and
lods
adc
lods
jae
lods
aad
or
push
ss
ljmp
sub
lahf
cli
stos
inc
lcall
jmp
jb
add
rcll
pop
xor
push
dec
mov
test
push
outsl
push
mov
mov
loope
xor
xlat
jbe
out
jae
ret
fdivr
data16
add
pusha
mov
call
rcrl
icebp
xchg
mov
clc
movsl
fsubrl
nop
test
test
insb
enter
adc
xor
in
add
scas
or
or
out
cmp
adc
push
les
lcall
insb
adc
or
add
mov
mov
push
insb
dec
dec
inc
inc
cli
repnz
lcall
addb
mov
mov
push
movsl
push
push
pop
pop
lods
pusha
mov
push
call
jno
ret
insb
and
mov
xchg
cwtl
clc
insb
sub
fmull
test
mov
xor
int3
dec
ljmp
pop
out
and
cmp
add
fs
mov
addr16
outsl
push
or
enter
or
mov
cltd
loop
popa
mov
xchg
cmp
or
outsb
fbstp
pop
or
insb
and
popa
pusha
mov
insb
data16
neg
cli
das
js
push
xchg
pop
insb
out
or
sub
push
push
adc
out
roll
xchg
movsb
or
arpl
imul
adc
push
insb
xorl
mov
mov
repnz
sub
mov
lods
ret
adc
mov
mov
scas
in
insb
movsl
fs
call
insb
lret
cmc
sub
mov
test
push
idivb
mov
shl
je
push
pop
fisubrs
or
mov
ds
push
lds
sub
ss
fld1
das
push
into
sub
cmp
jl
sbb
dec
xchg
jge
mov
cmp
mov
insb
cmpsl
xor
ret
aaa
cwtl
fstpl
cmpsb
mov
sub
add
arpl
jp
pop
sub
pop
or
cmp
mov
fnsave
mov
fisttpl
or
scas
js
pop
sub
les
inc
xor
sub
in
jecxz
mov
insb
push
lret
and
frstor
xor
insl
mov
sbb
cmpsl
push
into
lcall
mov
or
mov
imul
dec
xor
repnz
sub
inc
or
ror
mov
xlat
out
aas
or
xor
mov
pusha
jb
movsb
scas
push
insb
dec
jns
xlat
push
jbe
fisubrl
addr16
jecxz
and
bound
xchg
mov
in
jmp
aad
push
iret
mov
fldcw
xchg
xchg
or
insb
dec
stos
sbb
dec
mov
rorb
int
pop
and
insb
sahf
sub
mov
dec
adc
aas
mov
adc
addl
js
jecxz
pop
xchg
nop
insb
cwtl
mov
or
mov
sub
adc
insl
inc
movsb
insb
shll
mov
add
jnp
cmpsb
xchg
aam
mov
mov
jl
enter
xchg
sahf
sbb
mov
pop
jp
add
mov
cmp
lods
sarb
mov
insb
fnstsw
mov
sub
jle
aad
jmp
stos
mov
int
or
inc
xor
pop
insb
xchg
pop
sbb
adc
test
sbb
mov
inc
inc
pop
adc
cmpsb
mov
insb
mov
adc
dec
mov
fdiv
insb
outsb
inc
jle
dec
in
mov
or
ljmp
cmp
jo
cs
xor
cmpsl
jge
inc
xchg
insb
xchg
inc
adc
pop
dec
iret
adc
imul
clc
std
pushf
sbb
lcall
out
out
xor
xchg
test
jmp
push
xor
xchg
repz
div
insb
lret
test
sbb
loope
mov
ss
cmp
popf
push
cmp
jp
add
jl
lods
sub
adc
mov
adc
ds
cli
inc
inc
dec
and
mov
lret
lock
sub
mov
cmp
pusha
sbb
adc
das
enter
jo
dec
inc
insb
push
aam
push
adc
es
cltd
insb
mov
sti
push
jp
and
sub
inc
insl
aam
in
rorl
imul
xchg
shrb
pusha
mov
mov
es
xor
mov
push
cmp
dec
sub
aam
hlt
insb
add
push
fcoms
xor
ss
sbb
xchg
xchg
and
sti
bound
insb
jo
push
test
and
cmpsb
add
insb
xchg
xchg
mov
gs
mov
pushf
out
sbb
insb
test
pinsrw
cwtl
jmp
xlat
mov
jg
insb
cmp
sub
jmp
sub
stos
jo
lods
inc
mov
inc
mov
jle
cmp
fistpll
pop
mov
outsl
loopne
push
pop
insb
inc
mov
test
negl
daa
push
sub
movsl
sbb
fs
dec
pop
in
pop
lea
inc
jb
and
into
lods
outsb
cli
std
scas
mov
shrl
mov
stos
data16
dec
out
mov
or
addr16
insb
pop
jg
rol
jmp
imul
fsubrp
jp
lret
insb
rorl
fldl
inc
cli
mov
out
or
or
insb
lcall
xchg
mov
lods
mov
insb
rcrb
or
hlt
jp
test
jg
lret
mov
cmp
lret
orb
insl
sub
insb
push
pop
out
sti
lods
cmp
fsubr
mov
or
mov
xor
adc
fdivs
mov
flds
mov
sbb
js
aas
push
mov
ret
insb
lret
popf
daa
sbb
iret
pop
dec
outsl
push
je
sbb
gs
add
xchg
mov
lds
adc
mov
jg
jge
push
insb
ret
test
or
test
stos
insb
dec
lock
mov
sub
xor
jmp
fistpll
sbb
hlt
jae
xor
lahf
mov
sub
insb
mov
jp
pusha
roll
scas
and
jno
insb
fmuls
mov
repnz
inc
mov
in
movsb
push
in
and
test
push
sbb
cltd
insb
bnd
push
out
cmc
xchg
sub
ret
out
mov
ss
inc
and
inc
fsubs
add
mov
sbb
mov
ret
aam
pushf
test
xchg
gs
lods
movsb
loop
fs
push
inc
push
imul
add
inc
frstor
adc
push
cmp
test
in
adc
sub
daa
outsl
int
ret
sbb
jle
and
pop
add
lret
aas
aad
inc
push
pop
movsb
adc
push
call
mov
fnstcw
hlt
inc
lods
push
adc
mov
jp
insb
or
jnp
test
loopne
into
sub
pop
sbb
addr16
mov
sub
sub
adc
jns
mov
push
rcll
insb
imul
scas
test
cmc
or
pop
orb
call
stos
mov
pushf
insb
or
lods
dec
popf
imul
add
push
shl
xor
fwait
mov
into
enter
push
mov
mov
in
pop
int3
insb
xor
pop
mov
pop
hlt
insb
inc
mov
fnstcw
xor
insb
sbb
data16
aas
add
add
loope
stos
add
mov
inc
comiss
pop
sub
mov
jo
and
or
andl
je
insb
and
adc
xlat
das
shl
and
adc
stos
sub
out
mov
in
pop
popf
in
lods
mov
paddd
leave
pop
cmp
das
shll
jmp
xor
aaa
pop
insb
xchg
lods
push
insb
js
incb
mov
lods
or
scas
jo
fiadds
adc
imul
frstor
push
sbb
jo
push
shrb
cmp
fbstp
shll
push
dec
insb
jecxz
imull
insb
add
dec
loope
sbb
adc
fsubrs
xchg
push
ret
xchg
pop
mov
iret
arpl
fadds
fistps
push
sub
mov
or
cltd
xchg
sbb
fdiv
sub
add
std
jl
mov
mov
out
dec
fisubrl
inc
fldcw
push
mov
insb
adc
xchg
mov
dec
mov
mov
add
pop
repnz
inc
pop
insb
push
enter
jno
and
sbb
and
in
test
out
stos
fsts
adc
insb
notl
cmc
je
fdivr
xchg
pop
lods
sbb
mov
stos
insl
mov
gs
mov
xlat
loope
dec
jns
mov
mov
sbb
ljmp
pushf
pop
sar
in
repnz
mov
cs
xlat
sub
mov
cmpxchg8b
enter
call
jns
fildll
leave
mov
insb
sub
push
out
fucomi
leave
shrl
insb
aaa
lahf
xor
lods
stc
dec
sub
test
push
out
out
insb
cmpsb
addl
insl
in
pushf
jae
mov
sbb
or
scas
sbb
es
jnp
jp
cld
inc
cmp
insb
loopne
imul
or
mov
add
insb
xchg
inc
xlat
imul
push
mov
js
mov
jne
test
cmpsl
in
inc
mov
fisubrs
xor
or
lds
das
mov
mov
pop
xchg
xchg
insb
inc
out
jle
fisubs
cmc
mov
scas
movsb
fs
xor
pop
sub
xchg
les
insb
or
call
jle
sahf
lahf
fildll
push
fsubrs
jmp
cmc
imul
push
pushf
cmp
lock
ret
cmpsb
jp
call
outsl
data16
pop
rorb
pop
xchg
pop
sbb
outsb
dec
or
jge
data16
insb
sub
pop
xchg
add
test
cmp
xor
xchg
stos
out
in
cltd
xchg
sbb
insl
mov
jl
mov
insb
popf
fs
push
lods
inc
and
daa
sbb
insb
jle
sti
inc
lcall
mov
mov
lock
push
icebp
or
sub
xchg
xlat
insb
push
mov
or
dec
inc
rorb
push
cmp
rcr
xchg
dec
push
pop
dec
pop
jne
insb
sbb
push
add
sub
sbbb
jne
lahf
insb
shl
je
movsb
out
pop
sbb
and
xor
fisttps
mov
add
insb
js
inc
fs
sub
pop
adc
sub
addr16
scas
sarl
insb
mov
jbe
jns
movsl
sahf
jp
rcll
fcomip
push
or
sbb
mov
das
orl
out
cmpsb
mov
jae
outsb
outsl
sbbb
push
sbb
mov
inc
out
lods
push
loop
or
mov
sbb
lret
movsb
ljmp
xchg
mov
les
sbb
insb
jae
cmp
je
hlt
stc
sub
mov
or
jmp
les
or
sub
inc
and
dec
xchg
jns
js
mov
sub
push
mov
into
insb
jne
cmpsb
ds
or
das
in
push
dec
mov
je
popf
cmc
outsl
mov
mov
bound
fiaddl
sti
mov
shll
mov
rcll
test
mov
push
sub
cli
xchg
test
test
sbb
mov
js,pn
fdivl
loope
mov
insb
subb
pop
lds
push
jmp
mov
insb
lcall
push
lods
ljmp
adc
mov
std
and
scas
cmc
xchg
mov
ret
inc
mov
enter
insb
repz
cmpsl
jmp
lret
arpl
jnp
movsl
mov
inc
push
xchg
xlat
inc
lods
out
and
jl
sbb
push
in
test
mov
cmp
xor
dec
cmc
in
push
mov
xlat
mov
rolb
ret
sub
loop
sbb
xor
shlb
insb
arpl
or
and
enter
lcall
jbe
mov
es
jb
daa
js
ror
jmp
clc
fisubrl
mov
push
das
sarb
push
mov
push
cmp
sub
add
sti
out
jmp
insb
dec
cmc
jb
mov
pop
loop
cmp
inc
xor
mov
mov
push
jo
stos
daa
jp
insb
enter
mov
dec
xor
mov
mov
mov
mov
pop
fdivl
arpl
dec
mov
aad
pop
insb
stos
push
push
insl
aam
xchg
sbb
mov
add
pop
test
mov
push
rclb
push
xchg
cmpsl
insb
push
imul
sbb
test
push
fisubrs
dec
lods
cmc
rcrb
dec
and
inc
mov
fmull
bound
xor
inc
loopne
loop
add
xchg
jb
fucomi
fsubrs
cli
outsl
sbb
insl
imul
add
mov
sub
aad
pop
fs
test
in
jbe
mov
popl
sub
cli
aaa
adc
inc
and
insb
dec
popa
or
adc
fcoms
test
in
jbe
cmc
cmp
xlat
insb
push
testl
addr16
je
loopne
insb
mov
or
jle
push
dec
insb
inc
dec
and
arpl
jb
icebp
xchg
sub
fs
sbb
lret
in
inc
subb
add
insb
sbb
inc
fcmovbe
push
ret
inc
out
rcr
and
insb
lods
mov
push
jge
sub
or
mov
sub
out
inc
cmp
outsl
in
mov
mov
movsl
cmp
inc
mov
call
cmp
aaa
fisubrs
sub
aas
adc
enter
lds
xor
mov
popa
pop
lock
dec
pusha
pop
lea
fwait
insb
ret
xor
data16
mov
sub
aad
mov
scas
repz
cmpsb
addr16
outsb
cmp
in
insb
pop
mov
sub
sti
divb
stos
or
push
sub
das
ret
ficomps
sub
or
es
insb
jno
movsb
inc
xchg
stc
xor
aaa
mov
ss
inc
push
les
push
fs
push
in
das
fdivs
out
cmp
mov
jmp
call
sbb
pcmpgtd
addr16
stc
dec
sub
gs
push
outsb
out
imul
std
cmp
mov
jbe
xor
sbb
mov
in
lods
in
cmc
sar
or
mov
jle
sbb
int3
mov
cmp
in
es
out
or
pop
addr16
gs
jg
sbb
mov
jnp
sarb
mov
mov
and
xchg
jl
mov
adc
fwait
pop
insb
dec
xlat
push
adc
pop
mov
je
out
loope
insb
cmc
cmp
cwtl
mov
jne
jae
mov
xchg
test
dec
sub
sbb
xchg
movsl
fs
cltd
jecxz
push
sub
sarb
outsb
out
leave
loopne
sub
cmpb
insb
repz
movsl
sub
xchg
mov
sahf
fldenv
aad
call
stos
add
addr16
mov
cmpsb
cltd
insb
pop
dec
sbb
pusha
xor
xor
dec
lods
cmp
scas
mov
cmp
jp
sub
hlt
stos
jge
push
dec
insb
fnsave
dec
fsubrs
mov
push
xchg
push
insb
dec
das
push
lock
fdiv
hlt
insl
cmc
ret
leave
std
insb
add
call
mov
das
insb
shl
sbb
je
jns
or
mov
iret
lods
inc
shlb
scas
in
shrl
ret
adc
mov
das
insb
idivb
jg
clc
push
pop
fwait
mov
adc
push
outsl
stc
xchg
push
icebp
insb
hlt
cli
out
adc
add
test
and
jbe
insl
cltd
shll
imul
mov
mov
and
aad
fistpll
xlat
insb
nop
icebp
inc
out
pop
sahf
jb
xor
insb
push
movb
sbb
adc
sbb
pop
jbe
ffree
push
mov
jno
xchg
insb
mov
je
xchg
sbb
cmpb
pushf
pop
rcrb
stos
daa
pop
add
or
jl
sub
movsb
ss
loopne
jecxz
sarl
imulb
sbb
adc
cld
es
push
bound
fs
pop
jbe
xchg
out
and
insl
cmp
je
mov
iret
cmp
shr
mov
push
inc
add
xchg
fcmovne
stc
in
shrl
in
mov
data16
sbb
and
jno
lods
xor
cmp
add
ret
iret
aad
pushf
daa
mov
add
mov
lds
jp
loopne
mov
mov
push
adc
sbb
scas
shl
jo
push
sbb
fisubrs
mov
outsl
ret
xor
inc
incb
gs
bound
mov
push
add
lods
fnstenv
stc
cmpsb
add
mov
shl
push
sbb
inc
ficoms
ljmp
neg
sti
aaa
sub
cmp
les
mov
insb
bound
mov
push
pop
or
dec
aad
insl
dec
xchg
xchg
shrl
adc
add
imul
lret
lahf
in
insb
imul
ret
push
push
lods
test
push
jae
jne
xchg
and
mov
gs
lret
cld
push
insb
xchg
arpl
and
cmpb
jge
movb
fwait
insb
int
stos
sahf
jmp
stos
ljmp
call
cwtl
in
iret
pop
push
insb
sub
js
xchg
movl
iret
push
lea
insb
lods
push
popl
call
sbb
insb
inc
or
lahf
pop
cmp
arpl
xor
insb
cmpsl
cmp
arpl
decl
cwtl
pop
leave
mov
mov
xchg
mov
cmpsb
scas
outsb
lock
in
rol
xchg
es
insb
jmp
bnd
sub
jbe
ret
mov
mov
mov
xchg
xchg
mov
insb
push
lahf
sbb
sub
imul
pop
push
mov
xor
add
jnp
mov
fldt
or
out
scas
subb
sarl
leave
or
sbb
pop
pop
dec
mov
ss
sub
test
sbb
into
cmpsl
fistl
lods
fdivrl
push
jns
mov
xchg
aam
xor
lret
ret
pop
mov
dec
add
mov
push
insl
shrb
addr16
add
sbb
mov
rorl
jp
push
adc
mov
mov
andb
sbb
ja
rcr
jns
sub
in
ljmp
or
and
ja
cmp
das
out
xchg
sub
mov
sti
mov
add
movhps
push
sub
lret
test
out
mov
leave
push
sub
mov
data16
sub
push
sub
and
pop
ds
dec
jo
mov
sub
mov
mov
ds
out
repnz
sbb
inc
sti
out
jo
out
lods
xor
jb
out
xlat
lds
insl
daa
call
mov
mov
mov
push
sub
aaa
xlat
mull
lods
nop
push
mov
popa
pop
pusha
xchg
xor
out
sub
or
sub
stos
stos
scas
in
aaa
in
lods
mov
or
ret
test
aaa
sub
loopne
push
sub
les
insb
xor
pop
scas
ja
scas
pop
stos
sub
in
mov
hlt
fwait
div
cmpsb
dec
das
lock
jmp
sbb
fisubrl
jno
call
hlt
sbb
imul
mov
push
jecxz
stos
in
xor
lods
mov
rorb
mov
cmp
orl
dec
lock
push
or
cmp
xor
and
loope
mov
ljmp
sub
adc
in
adc
pushf
imul
mov
mov
push
mov
rcrl
les
mov
sub
sub
in
stos
sti
mov
pop
imul
nop
in
aam
lods
mov
outsb
jo
push
mov
mov
ds
sbb
outsl
gs
into
mov
sbb
int3
cltd
int
rorl
sbb
cmc
mov
scas
cmp
xor
fstps
dec
sbb
pop
lret
xor
gs
pop
pop
in
cwtl
jge
in
xor
mov
sub
xchg
mov
into
mov
or
dec
lock
test
in
adc
sub
cmp
or
in
int
push
sub
xchg
mov
mov
adc
shrl
adc
inc
das
adc
sub
movsb
adc
sub
movsb
adc
movsl
inc
add
roll
sbbl
mov
sbb
cmpb
std
jo
inc
lret
rolb
cmp
mulb
out
and
mov
insb
dec
je
jns
inc
sti
outsl
mov
mov
nop
insl
aam
loop
lock
sub
in
movsl
xchg
arpl
insb
insl
jp
mov
jno
loop
and
lods
cmp
sub
jl
clc
mov
sbb
mov
pop
pop
adc
lods
xchg
pop
das
sbb
sub
call
pop
jo
lock
insb
pushf
outsb
mov
sbb
mov
loop
adc
adc
push
mov
lods
popa
testb
jno
aad
pop
mov
out
movsb
fsubrl
lock
repz
insl
rcrl
sbb
jno
and
lcall
lea
scas
mov
lock
out
and
mov
sub
in
xor
sahf
insl
add
icebp
shrl
dec
arpl
imul
es
scas
lods
or
sbb
popf
dec
push
sbb
xor
jp
sub
imul
imul
jno
loop
pop
push
mov
mov
lods
mov
daa
lods
add
push
sub
notl
fadd
or
jo
add
frstor
mov
lret
mulb
out
js
cmpsb
out
mov
pop
into
imul
sbb
hlt
xchg
insb
mov
sub
push
xor
in
stos
mov
jle
out
jo
inc
cmp
sbb
adc
ljmp
movsl
popf
adc
lods
and
arpl
dec
ret
add
and
push
flds
pushf
stc
sub
out
mov
in
ljmp
test
outsl
bound
push
xchg
in
cwtl
and
mov
scas
lods
pop
xlat
or
fdivrl
in
adc
pcmpgtb
lods
mov
cli
aaa
sub
fwait
sbb
mov
sbb
arpl
cli
push
mov
outsb
imul
adc
sub
imul
outsb
push
adc
or
in
or
test
in
gs
pop
push
fbstp
andb
out
mov
sbb
sbbl
data16
fs
scas
mov
sbb
jmp
jno
mov
bound
insl
inc
sub
lea
stos
pop
data16
in
lods
fidivrl
push
sbb
imul
fisttpll
dec
xchg
outsb
push
adc
sub
in
popa
mulb
jle
jg
push
sub
sbb
mov
and
xchg
jp
xchg
bound
dec
mov
adc
xchg
pop
adc
or
push
outsl
and
ja
sbb
in
in
adc
dec
paddsw
loop
sbb
lea
sbb
mov
arpl
sahf
call
imul
cwtl
or
xchg
jmp
mov
sub
arpl
add
in
adc
stos
outsl
icebp
negb
cmp
push
pop
mov
dec
fsts
bound
push
lret
mov
and
gs
mov
xlat
movsb
or
xor
cltd
pop
dec
mov
pop
shlb
cmpl
fcoml
into
sbb
out
sbb
call
out
xlat
enter
test
insl
fcoml
mov
insl
incl
inc
jb
pop
dec
inc
stos
insl
adc
adc
lods
aad
cltd
xor
jno
fldt
lret
scas
pushf
mov
and
sbb
pop
imul
pop
and
push
enter
jno
pop
mov
outsl
dec
rcrl
mov
ja
sbb
shll
jo
test
notl
cmp
call
mov
test
xor
mov
sbb
pusha
sbb
nop
adc
mov
pop
cwtl
push
adc
pop
pop
stos
push
dec
and
and
pop
adc
sub
pop
mov
fs
or
jno
loop
jp
xor
shlb
ljmp
aas
and
mov
xor
cli
cmp
mov
mov
movsb
call
lea
inc
out
pop
pop
int
sbb
xchg
pop
fwait
mov
test
push
insl
test
mov
mov
sbb
adc
adc
popa
adc
in
jmp
pop
test
in
jmp
push
cmp
lcall
loope
lea
test
xchg
ss
fcoms
stos
lods
mov
ret
aaa
aam
cmp
dec
mov
gs
imul
rolb
ret
or
in
mov
jo
cld
mov
inc
sbb
mov
loop
rolb
lea
mov
imul
sbb
mov
sbb
int3
xchg
lds
mov
lgs
push
in
insl
insl
sbb
in
out
ss
adc
ja
add
sbb
in
pop
sub
shll
xor
pop
adc
sbb
in
push
and
xor
test
arpl
aaa
mov
sub
adc
out
repz
and
push
jge
fnstsw
stos
mov
jno
out
xor
jge
insl
mov
jns
pop
sbb
sub
ret
cli
mov
mov
xor
jb
mov
daa
dec
mov
jle
cwtl
sbb
shr
fisubrs
arpl
div
mov
notb
push
sbb
dec
xor
les
inc
insb
bound
cmp
iret
in
hlt
xor
adc
or
decl
test
mov
xor
mov
lock
addr16
push
inc
arpl
movsb
data16
mov
imul
fs
jle
jecxz
adc
mov
push
sbb
insl
dec
sbb
adc
jno
movsl
lods
sub
mov
mov
mov
pop
in
sbb
jbe
lock
cwtl
lods
adc
into
dec
roll
test
cltd
sub
pusha
andl
cmpsl
adc
outsb
out
mov
sub
cld
mov
pop
pop
jo
mov
pop
lods
xor
sbb
pop
lods
xor
cmp
popf
pop
xor
or
pop
in
mov
mov
iret
ljmp
inc
ljmp
jmp
and
mov
jge
mov
xchg
sub
lods
jo
or
out
loopne
push
xor
mov
sub
push
sub
std
lret
mov
mov
mov
mov
loop
push
pushf
ljmp
jle
fwait
adc
outsb
ja
mov
or
mov
imul
xchg
gs
cmp
mov
mull
out
cli
rclb
mov
in
inc
adc
add
nopl
hlt
xchg
xor
sbb
adc
jp
fldcw
or
and
add
das
in
push
add
je
pop
jo
outsb
test
jo
sub
and
es
popa
insl
inc
sbb
imul
in
ljmp
inc
mov
lods
jno
pop
dec
sbb
in
xchg
dec
lods
pusha
adc
nop
adc
mov
sub
push
imul
cs
divl
pop
inc
imul
inc
jne
sbb
es
and
and
aas
push
add
scas
sbb
arpl
or
lahf
dec
aaa
pop
mov
jo
or
cmpsl
adc
gs
movsb
push
shrl
and
pop
popf
mov
mull
fs
in
sahf
stos
lock
loop
jmp
pop
test
pop
int
out
and
dec
movsb
sub
jo
mov
sbb
pop
arpl
push
jo
not
and
add
mov
sub
mov
dec
adc
pop
pop
mov
call
xor
push
lds
or
test
adc
jl
mov
imul
xchg
arpl
mov
jmp
sub
sbb
aam
outsl
outsl
xchg
and
mov
lea
aam
cmp
fisubrl
pop
mov
and
adc
ja
adcl
pop
push
jo
pop
cmp
xchg
icebp
mov
outsl
mov
pusha
xchg
inc
jbe
out
hlt
rclb
xchg
loop
arpl
popf
dec
and
lock
rcrl
and
sub
push
add
dec
mov
pusha
imul
mov
call
sub
fwait
stos
mov
dec
jge
outsl
fs
cmpsb
inc
mov
cs
jno
or
stc
push
out
imul
sbb
pop
xor
shlb
and
imul
out
inc
xor
sub
int3
mov
fucomi
jns
icebp
mov
seta
push
sbb
sbb
cwtl
sub
fistl
xor
in
neg
imul
hlt
sub
mov
sub
stos
jp
jge
sub
sub
scas
xor
pop
mov
sbb
adc
bound
mov
jo
jge
adc
repz
mov
scas
fdiv
movsl
test
mov
subb
gs
mov
aaa
sbb
fs
sub
fildll
xor
push
jno
stos
mov
sub
arpl
aaa
pop
push
in
mov
mov
mov
imulb
int
sub
sbb
push
out
mov
adc
decl
iret
lock
insl
les
out
adc
adcb
adc
sub
add
out
lods
outsl
jns
movsb
in
jnp
mov
jno
jb
mov
mov
idivb
push
cmp
test
lds
loopne
ljmp
push
bound
sub
movl
je
push
dec
sbb
adc
repnz
lods
movsl
shrl
ficompl
adc
sub
movsb
ljmp
mov
in
arpl
gs
pop
jno
icebp
call
in
adc
mov
xor
mov
pop
imul
jl
in
nop
adcl
sub
xchg
mov
inc
imul
sbb
nop
loop
push
sbb
sub
lret
xchg
mov
sbb
or
pop
outsb
ja
sub
lock
pushf
xor
and
jmp
cmp
out
push
sbbl
mov
and
inc
sub
sbbl
sub
aaa
mov
mov
test
and
dec
cmp
xchg
fwait
pop
jmp
adc
jne
dec
push
inc
jo
inc
mov
bound
mov
daa
stos
and
in
nop
adc
jmp
lds
push
mov
mov
dec
push
in
das
mov
inc
lcall
in
lock
inc
jno
imul
adc
mov
in
movsb
sub
dec
not
out
mov
cmp
cld
shr
inc
jbe
test
shlb
push
lcall
iret
fwait
lret
xchg
adc
and
xor
mov
push
loop
bound
inc
insl
inc
ljmp
into
in
pusha
push
push
mov
adc
rcll
jno
or
mov
mov
scas
lods
sub
inc
push
add
fimuls
adc
mov
das
cmp
ljmp
mov
push
dec
push
lock
loop
in
pop
enter
jo
adc
and
sahf
pusha
sahf
push
mov
mov
loope
and
mov
or
mov
pop
and
addr16
les
push
jne
or
lcall
dec
sub
xchg
push
sahf
les
sarb
push
fs
cwtl
lock
jno
fldcw
insl
inc
in
pusha
adc
push
movsb
sub
jmp
sub
sub
test
test
mov
adc
movsb
sub
ficoms
data16
adc
out
in
dec
adc
xchg
and
es
push
addr16
cmp
mov
xchg
adc
cmpsl
sbb
sbb
sbb
insl
jno
out
adc
int
daa
or
jo
cmp
or
adc
paddusb
pushf
sbb
cmpsl
mov
push
fs
fs
sbb
adc
xchg
sbb
mov
dec
mov
push
push
lock
inc
dec
out
aam
and
stos
out
arpl
fwait
sbb
adc
pop
jp
popf
test
sbb
jns
mov
adc
mov
ss
pop
mov
jno
dec
push
mov
sbb
cmp
adc
dec
addr16
sbb
shll
cmp
and
rcrb
std
sbb
outsl
test
pop
dec
jno
pop
mov
cmpsb
mov
lock
xchg
jnp
sbb
fs
jne
xor
mov
xchg
cltd
push
shlb
orb
shll
in
out
int
adc
dec
pop
loop
mov
out
sbbl
out
dec
dec
je
jbe
shrb
dec
mov
push
jp
jge
lret
popl
xor
cs
cmp
lods
bound
cmp
push
or
dec
scas
sub
push
jbe
cmp
xor
outsb
adc
fisubl
cld
lcall
adc
push
sbb
bound
or
sub
gs
gs
xchg
es
mov
nopl
xchg
sbb
sbb
test
jb
or
mov
push
pop
or
aaa
test
icebp
pmaxub
iret
loop
adc
out
outsl
out
rcrl
mov
out
mov
addr16
pusha
mov
out
sbb
rcll
push
imul
xchg
pop
shlb
rorl
xchg
sbb
lcall
in
cs
stc
movsb
gs
stc
in
adc
fsubl
scas
sub
pushf
push
jg
clc
cmpsl
in
xchg
lock
jge
sbb
mov
inc
cmp
rorl
pushf
shrb
xchg
adc
test
outsb
dec
sbb
mov
inc
mov
cmp
shll
and
lods
add
cmpsl
ja
fldcw
cmpsl
xchg
loopne
xchg
out
sti
xchg
add
ret
lahf
jbe
dec
xor
push
pop
cld
sbb
sbb
push
arpl
popa
stos
in
pop
inc
add
shll
sbb
mov
add
sbb
sbb
int
imul
xor
ljmp
push
popa
xchg
xor
jno
and
in
sbb
or
cli
fwait
mov
lret
fwait
mov
fwait
mov
mov
repnz
ljmp
fs
lret
sbb
push
in
xchg
inc
gs
inc
test
outsl
rcrl
gs
ljmp
movsb
mov
das
jo
or
outsl
sub
pusha
lods
and
xchg
and
fld
pop
jecxz
dec
and
adc
xchg
mov
or
fs
xor
mov
imul
lcall
outsl
inc
pushf
xor
fistpll
lea
xchg
je
jne
add
fs
sbb
dec
pop
dec
and
xchg
sub
in
lret
fldl
loop
hlt
push
in
sub
in
inc
test
push
lcall
cmp
icebp
jge
mov
scas
inc
das
cmp
pop
cmp
lds
or
mov
sub
mov
inc
or
sub
jge
sub
mov
mov
cmp
enter
popl
lcall
jl
popa
lods
mov
sub
lret
sbb
stos
rcrb
add
add
lahf
push
mov
inc
mov
or
leave
inc
ljmp
cmp
sbb
cli
mov
insl
mov
movsl
or
dec
xchg
xchg
sbb
loop
sub
fmuls
add
push
pushf
outsb
pop
and
xchg
pop
and
adc
out
inc
mov
sbb
insl
push
xorl
movsl
cmp
fcom
or
jo
ljmp
jbe
outsl
in
fs
std
mov
sub
daa
ret
js
mov
divb
lods
dec
das
lahf
lahf
push
push
push
jno
bound
sub
incl
dec
mov
push
and
lfs
int3
and
and
lea
iret
in
cmp
stos
mov
lcall
and
mov
sub
jle
cld
lock
in
push
mov
out
shrl
sub
in
jmp
fucomp
jmp
pop
in
jmp
into
in
jmp
negb
jb
mov
pop
jns
popa
xor
sub
mov
imul
sahf
push
xchg
push
xor
mov
ljmp
fisttpll
enter
xchg
loop
das
icebp
sar
ljmp
adc
mov
das
mov
jne
dec
jl
cmp
scas
adc
es
dec
movsb
jmp
pop
insl
cs
adc
out
mov
sbb
and
sbb
addr16
jle
jg
mov
fdivl
xchg
dec
clc
outsl
sub
jle
pop
xchg
sbb
fs
fstpl
cmp
ljmp
sahf
in
fcoms
pushf
push
stos
push
and
or
popa
inc
and
mov
nop
sub
push
sub
and
js
sub
push
int3
imul
int3
imul
dec
and
imul
pop
lds
sub
repnz
sbb
adc
mov
cmpb
popf
adc
bound
jno
sbb
xor
popa
mov
push
lds
add
stc
mov
jmp
or
mov
jle
push
out
imul
dec
lret
sbb
lods
cmpsb
mov
cmp
mov
lahf
xchg
sub
mov
mov
inc
stos
inc
gs
mov
stos
insl
imulb
lahf
rorb
popa
add
mov
or
mov
psllw
stos
mov
dec
mov
mov
sbb
stos
imul
xor
jmp
push
jo
test
sbb
xchg
fisubl
lods
iret
shlb
jge
and
cmp
push
and
cs
xorb
out
mov
adcl
adc
dec
aaa
and
out
int
cwtl
mov
outsl
adc
aaa
pop
addr16
mov
mov
out
jno
mov
orb
lcall
fs
push
pop
xchg
xchg
lods
stc
add
inc
ljmp
mov
jne
xor
jmp
push
in
sbb
rcl
xor
add
je
fwait
popf
push
jbe
sub
dec
movsb
pop
xchg
sub
mov
popa
test
mov
fwait
dec
clc
lock
jmp
push
push
inc
loope
das
xchg
movsb
sbb
adc
sbb
and
or
sbb
leave
outsl
dec
pushf
jo
arpl
in
out
inc
roll
dec
into
or
jo
mov
mov
mov
lahf
inc
and
lock
fwait
in
and
jo
out
lret
mov
mov
mov
sub
dec
stos
daa
jg
mov
out
sub
adc
subb
cmp
popa
mov
test
nop
lret
add
frstor
dec
mov
push
cmc
loop,pn
adc
jo
outsl
fsubl
mov
add
mov
sbb
jo
cltd
fimuls
movsb
cltd
mov
testl
out
push
popf
js
in
mov
sbb
sbb
jmp
bound
jg
sbb
xchg
ficompl
test
or
sbb
mov
mov
push
or
pop
push
out
sub
and
aad
or
aas
push
mul
mov
jbe
scas
mov
jl
lock
or
push
dec
adc
test
push
lods
sbb
lock
stos
outsb
pop
push
call
sbb
call
push
sub
xor
and
sbb
jmp
xchg
mov
push
xchg
push
lcall
mov
sbb
push
add
sub
icebp
jle
ret
idiv
out
pop
test
dec
bound
fucom
pop
dec
mov
cmp
gs
mov
test
es
mov
cli
sbb
popf
mov
dec
cmp
cmc
cmpsl
dec
inc
jmp
xchg
mov
mov
jmp
push
lods
or
sub
movsb
lods
loope
mov
mov
stos
dec
fists
sub
inc
rcrb
push
inc
dec
dec
popa
mov
xor
or
xchg
sub
movsb
sub
add
out
stos
aad
pop
in
jo
jne
jb
mov
ljmp
pop
dec
push
lcall
loop
sbb
out
shl
cmp
dec
xchg
sub
sub
rcrl
and
cmpsl
inc
xor
xor
das
icebp
cmp
cmpsb
fs
push
movsb
mov
cmpsb
in
movsb
sbb
cs
aaa
pop
lea
lea
in
mov
outsl
and
bound
jo
fcmovnu
bound
and
lock
data16
jno
lock
pop
mov
sub
mov
or
pop
sbb
mov
mov
int
or
or
fnsave
scas
sbb
fnstenv
pusha
in
xor
scas
mov
cmp
sbb
mov
imull
imul
adc
sub
cmp
pop
push
mov
imul
fcoml
jl
mov
sahf
ss
push
test
xchg
pusha
fisubs
or
popa
sti
push
lods
out
test
in
fdivl
lret
dec
popa
mov
or
les
inc
xchg
dec
pusha
and
movsb
sbb
and
sub
mov
push
pop
pop
or
das
push
or
dec
mov
xor
xor
mov
movsb
imul
mov
std
out
or
lcall
in
ss
adc
or
scas
xor
hlt
and
mov
dec
gs
sbb
fidivrl
popf
pop
jmp
mov
mov
mov
jmp
adc
mov
cld
jge
inc
lock
aad
movsb
imulb
test
sbb
stos
pop
movsb
and
es
stos
cs
jecxz
ret
rcrl
jmp
cmpsb
cmp
out
icebp
xor
mov
test
and
das
sbb
in
jle
jo
adc
inc
loopne
leave
andl
jno
sbb
or
notl
dec
jo
scas
xor
xor
in
jo
mov
movsb
pusha
jo
add
lea
mov
imul
sbb
push
jmp
cmpsb
sbb
jo
cmpsl
push
mov
jns
dec
pop
lds
std
mov
in
outsb
dec
and
mov
and
outsl
push
daa
ficomps
push
popa
andl
aad
imul
mov
add
mov
gs
jmp
adc
pop
call
test
sar
jnp
sahf
lea
mov
popf
mov
scas
lcall
jno
inc
mov
shlb
popa
jmp
rclb
test
xchg
mov
jl
dec
cmp
hlt
test
push
pop
mov
loop
les
mov
and
loopne
xchg
stos
pusha
icebp
stc
bound
test
push
ret
xor
push
jno
or
jp
cmp
cmp
or
adc
jl
sbb
fwait
icebp
xchg
mov
sbb
stos
mov
popf
mov
pop
mov
cli
lcall
mov
dec
push
lret
inc
dec
aaa
adc
out
jae
add
add
mov
shrl
test
pop
nop
ret
push
or
and
out
in
adc
outsb
fimuls
enter
idivl
sahf
pop
test
push
loopne
icebp
sbb
ret
jle
lds
shlb
inc
push
xchg
mov
or
fs
add
in
push
push
sbb
imul
gs
outsb
in
mov
jnp
nop
push
ret
mov
lock
gs
sbb
outsb
pusha
pop
push
push
in
sbb
lock
mov
mov
sub
mov
cmp
repz
mov
lods
push
sbb
or
lret
pusha
mov
mov
push
push
stos
sbb
negl
mov
jno
mov
sub
push
pusha
addr16
stos
jge
fists
adc
sti
adc
dec
push
pushf
in
rcll
sarb
sbb
inc
popf
or
out
sbbl
cmpsl
sbb
jo
dec
adc
cmp
jg
in
stos
scas
bound
and
sbb
repnz
pop
bound
aad
bnd
in
cmp
dec
stc
or
inc
jge
or
xor
gs
or
icebp
mov
insl
aad
lods
dec
subb
repnz
mov
pushf
pavgw
lcall
adc
mov
aaa
adc
in
sti
rcl
mov
push
cmovs
sub
inc
pop
jp
adcb
popf
or
ljmp
mov
jno
push
int3
int3
shll
mov
or
inc
mov
jg
add
loopne
cwtl
loope
inc
outsb
rcrl
popa
cmc
mov
ja
or
dec
clc
pushl
lea
jmp
jmp
jmp
pushf
pusha
inc
test
cmp
lahf
cwtl
not
bswap
lea
pushf
mov
call
movl
jmp
pushf
push
movl
pusha
push
lea
jmp
cmp
mov
stos
jle
and
fsubrs
divb
in
jp
or
das
dec
stos
xor
int3
jne
push
jecxz
adc
mov
and
hlt
mov
enter
inc
daa
push
pop
xchg
sub
aad
std
cld
mov
sub
and
int3
call
push
adc
add
rorl
sbbb
rorl
pop
mov
xchg
mov
cwtl
es
push
out
nop
rorb
scas
sub
cld
adc
leave
xlat
data16
xor
divb
cmp
xchg
ror
adc
lret
mov
sub
push
jmp
xor
mov
adcb
xchg
push
mov
sbb
sbb
push
fimull
adc
jne
faddl
or
mov
out
pop
push
std
sub
clc
aas
or
pop
outsl
mov
scas
inc
pop
xchg
incb
je
aas
and
aaa
das
out
movsb
ds
xchg
cmp
jmp
cmpsl
out
push
aaa
sar
or
daa
lcall
add
mov
cmpsb
outsl
adc
adc
jo
into
xchg
cld
jge
nop
adc
div
or
ret
mov
loopne
xor
call
out
inc
sahf
scas
push
ret
fyl2xp1
movsb
cmc
stos
pop
add
push
call
cmc
aam
mov
inc
or
inc
jmp
jge
pop
lahf
sub
in
add
mov
add
jb
sub
jo
out
sbbl
sub
imul
pop
lods
test
xchg
push
adc
shrl
fs
sarb
jle
sub
imul
shll
test
pop
inc
subl
mov
mov
daa
iret
pop
mov
std
pop
pusha
sub
shrl
inc
mov
mov
mov
and
cmpl
cld
push
push
mov
mov
pop
mov
adc
sub
scas
enter
xor
insb
sbb
out
jnp
pop
mov
xor
jmp
clc
gs
enter
popa
xor
cwtl
push
dec
xor
les
inc
lret
sbbl
lcall
jns
xor
out
movsl
fwait
loop
pusha
cmp
sbb
pop
adc
jl
data16
mov
sbb
push
stos
enter
mov
hlt
jmp
lods
int3
xlat
inc
pop
cmp
mov
notl
push
stos
iret
sbb
cld
adc
mov
loope
xor
inc
pop
pop
mov
rep
cli
int
mov
repz
and
inc
insb
cmpsb
sbbl
leave
push
cmpsb
jmp
pusha
lea
jne
sar
mov
cmc
test
pusha
add
movw
bt
cmp
pusha
movzwl
sub
pushf
mov
sub
pusha
call
add
push
add
addb
add
lods
cmpsl
sbb
add
add
in
adc
popa
rcrl
clc
rcrl
add
push
add
xchg
sbb
mov
adc
add
add
add
lret
mov
ret
mov
fildll
fs
pop
sub
pop
addr16
mov
mov
scas
repnz
mov
inc
add
aad
mov
sti
mov
jg
sub
lea
jmp
les
pextrw
mov
shl
fists
cli
mov
popf
mov
pop
mov
cwtl
inc
shlb
test
push
jge
mov
gs
sbb
xchg
fildl
mov
dec
movsl
scas
cmp
mov
ret
inc
nop
lahf
testl
and
cmp
or
inc
loope
push
mov
aaa
and
ror
xchg
pop
addl
pop
jle
fistpl
cli
and
pop
dec
cwtl
fsts
jo
sbb
adc
pushf
pusha
movb
lea
ja
sar
rol
jmp
pusha
cmpb
movb
call
lea
call
call
bt
clc
movb
cmp
jmp
test
cmp
jmp
push
lea
ja
jbe
push
pushf
lea
jb
stc
stc
clc
call
xchg
outsb
sub
push
mov
jmp
push
stc
div
sub
sbb
movsb
xor
pop
jmp
pop
insb
mov
push
xchg
sbb
dec
adc
inc
jmp
adc
pusha
into
ret
push
int3
std
in
xchg
adc
rclb
mov
cld
cmpsb
push
cltd
imul
das
ja
cld
out
cli
adc
rcrb
inc
cmp
repz
push
mov
jg
hlt
imul
in
cld
xlat
push
jae
lods
mov
insb
dec
pop
mov
imul
unpcklps
jmp
loope
add
xor
sbb
lea
fistpll
in
mov
icebp
or
xor
lcall
jmp
jno
dec
xor
mov
mov
fistl
pop
mov
cld
out
insl
iret
pop
or
jns
popf
stos
jne
insb
ja
mov
ret
mov
mov
mov
test
pop
push
cld
xchg
dec
and
mov
inc
jnp
and
sbb
movhlps
outsb
cs
mov
roll
push
roll
inc
inc
insl
mov
xor
sub
adc
sbb
lcall
cvtps2pd
addr16
and
xchg
jno
pop
aad
xchg
push
push
cli
outsb
adc
addr16
daa
out
insl
mov
cmpsl
push
outsb
jge
pop
addr16
shlb
imul
pop
sub
sarb
imul
sub
sub
or
ja,pn
pop
push
stos
cmp
or
cli
lea
jecxz
pop
gs
xchg
inc
push
cltd
popa
bound
or
lods
mov
adc
dec
sbb
or
scas
addr16
push
testl
bnd
enter
and
mov
addr16
pop
pop
sbb
pop
and
mov
pop
popf
adc
in
push
lock
gs
mov
sub
pop
adc
stc
lods
sbb
cmpxchg
repnz
pop
fwait
and
sarb
insl
mov
dec
jo
dec
imul
lock
push
data16
adc
fsubr
cld
fnstenv
and
ljmp
jge
jecxz
cs
outsb
addr16
out
repnz
rclb
sarl
stos
fisubl
lock
in
cmpsb
mov
shlb
and
mov
inc
pop
xor
sbb
sarb
test
sbb
fstpl
pusha
stos
lret
rcrb
xor
xchg
lret
cmp
movb
bnd
inc
sarl
leave
icebp
mov
imul
adc
ja
dec
push
push
mov
ss
subl
and
jo
push
jmp
lret
in
add
and
jmp
shrd
xor
lock
stos
mov
data16
rorb
jno
lock
loopne
or
add
ljmp
xchg
or
outsb
sub
sbb
lret
mov
and
jo
jmp
xchg
jbe
inc
repz
gs
mov
cmp
fmuls
call
je
and
repnz
sbb
and
cmp
mov
lret
sarb
mov
stc
mov
outsb
inc
or
jmp
and
je
aaa
adc
adc
lods
cmpsb
dec
mov
call
sbb
cli
xor
adc
mov
push
mov
inc
cltd
add
mov
gs
pop
imul
call
bnd
mov
mov
push
jne
mov
cltd
push
push
jae
aam
jl
out
cmp
orl
notb
gs
cmp
lret
or
cmp
sub
adc
jp
arpl
fisubl
repnz
mov
arpl
js
pop
sbb
inc
in
push
test
movsl
mul
fs
bnd
fmull
insl
sub
xchg
adc
cs
pop
ljmp
lods
push
and
dec
jo
shlb
bound
mov
mov
inc
dec
sub
bound
inc
lods
dec
packsswb
das
insl
imul
std
les
sarb
in
dec
or
pop
aas
into
mov
sub
in
repnz
mov
fwait
jge
insb
dec
jbe
sub
std
in
mov
test
adc
mov
sub
sbb
loope
std
mov
lods
mov
mov
sbb
repz
sbb
fdivrl
mov
loopne
popa
loopne
sbb
cmp
mov
sub
repnz
inc
jne
dec
push
lods
int3
mov
mov
push
pop
mov
mov
clc
dec
repnz
push
pop
adc
adc
je
adc
sbb
in
jecxz
sub
mov
stos
pop
dec
cltd
mov
inc
mov
out
das
test
pop
sbb
or
popa
jae
mov
es
mov
jne
inc
mov
xor
inc
xorb
sbb
test
popa
jmp
pop
pusha
inc
or
sbb
xchg
sbb
test
insb
xchg
imul
in
int3
andb
outsl
in
push
mov
nop
pop
mov
ss
lock
inc
or
add
mov
lcall
sub
dec
push
or
dec
xchg
arpl
imul
mov
aaa
ja
fs
mov
mov
movsl
or
add
push
dec
xor
nop
sub
add
test
test
loopne
iret
mov
jno
out
lods
lret
and
cli
mov
jg
out
andb
mov
arpl
bound
bound
xor
mov
cmp
aam
adc
pusha
or
add
sarb
cli
and
adc
dec
xor
xchg
popa
insl
lds
dec
jo
inc
pop
mov
loop
or
inc
add
push
popa
inc
sub
cli
dec
je
repz
push
es
clc
in
lcall
mov
sti
adc
jl
mov
repz
inc
nop
sub
adc
mov
movsl
ss
jo
insl
add
mov
pop
push
repnz
add
loop
repnz
orl
shll
xor
movsl
push
insl
pop
add
mov
popa
test
gs
sub
dec
data16
popf
jp
pushf
xor
clc
add
cld
xor
sub
and
jmp
mov
mov
push
lods
dec
lahf
push
sbb
in
jo
ficoml
cld
stc
mov
push
sub
pop
in
idiv
add
lcall
adc
mov
add
push
adc
stos
cmp
cmp
ret
notb
jl
xchg
push
pusha
sbb
cmp
xchg
roll
inc
in
mov
mov
dec
lods
sbb
cli
fs
mov
adc
es
cmpsl
ficomps
mov
ljmp
push
add
pop
push
mov
sar
add
and
insl
pushf
fnsave
push
jl
adc
sahf
data16
mov
inc
push
mov
insb
flds
loopne
mov
adc
mov
pusha
jmp
adc
subl
push
int
ja
xchg
mov
jnp
sub
dec
cld
jecxz
cltd
jo
mov
in
out
sbb
in
sub
filds
dec
addr16
xor
daa
mov
mov
shll
dec
inc
pop
push
in
adc
sub
outsb
imul
dec
out
and
lods
popa
int
repz
call
clc
test
xacquire
not
pushf
andl
arpl
cs
jo
mov
divps
icebp
into
sub
mov
jae
adc
add
test
pop
and
adc
imul
push
insb
inc
push
sbb
jmp
xchg
pop
push
hlt
pop
in
cmp
insl
push
out
call
or
insl
ror
cmpb
pop
int3
fwait
inc
sub
dec
mov
jo
mov
lret
and
adc
or
mov
aad
rol
lret
jmp
lret
mov
xor
aam
fs
xor
lret
xor
popa
cld
dec
push
stos
cmpsl
or
out
lock
imul
push
and
sbb
nop
jno
mov
or
sub
push
mov
rcrl
je
adc
movsb
xor
insb
iret
cld
mov
data16
mov
lahf
add
xor
xor
pop
ljmp
stos
and
xchg
jp
dec
call
subb
mov
sbb
test
sbb
dec
mov
push
xchg
and
popf
sbb
nop
lahf
jge
mov
or
lods
mov
je
pop
imul
mov
fisubs
aad
outsl
dec
lods
adc
add
push
cmpsb
mov
jb
sub
loope
jae
mov
aaa
push
hlt
int
cmpsb
mov
dec
aaa
xor
sbb
xor
dec
rcrl
mov
xchg
ja
cmp
insb
push
loope
testl
dec
sbb
or
ja
pop
jo
or
imul
das
dec
frstor
mov
pop
xchg
push
push
mov
arpl
add
std
cltd
hlt
mov
outsl
rorl
repnz
mov
lcall
dec
push
iret
pop
adc
mov
das
adc
adc
gs
loop
jmp
lods
fcmovbe
fsubl
mov
jne
add
loope
xchg
test
add
mov
jns
adc
test
data16
inc
sbb
test
stos
dec
into
xchg
lods
and
mov
xor
sarb
adc
sub
fwait
outsb
dec
push
adc
or
dec
pop
test
stc
jns
rcrb
cmp
ljmp
call
cmp
sbb
inc
lcall
icebp
lea
popa
data16
push
cmc
push
in
add
mov
xchg
das
pop
jne
movsl
ret
addr16
push
jns
pusha
sbb
mov
push
lods
or
mov
jae
pop
push
lcall
mov
adc
pop
ret
mov
ds
stc
add
stos
outsb
cld
aaa
imul
cmpsl
sub
lods
popa
outsl
lea
and
push
aas
cmp
push
or
aam
lock
rcrb
sbb
lods
stc
ljmp
mov
mov
cmp
mov
adc
xor
mov
mov
shlb
mov
loopne
xor
or
push
outsb
icebp
lods
outsb
rcrb
repnz
xchg
or
mov
popa
shl
push
dec
mov
insl
cltd
sbb
pop
in
adc
popf
jae
cmpsl
push
movsl
aad
and
mov
sarb
pop
outsl
aaa
jge
ret
inc
sub
mov
or
lret
pop
rcrb
dec
mov
mov
adc
lods
dec
jne
enter
js
inc
sub
xchg
int3
mov
or
cmpl
sahf
stc
aad
pop
rcrl
xor
inc
xlat
dec
inc
cmp
jp
cmpsl
scas
or
cmp
dec
shrb
adc
jno
inc
cmp
mov
sub
mov
sbb
in
pop
mov
sbb
popa
xchg
mov
and
inc
push
pusha
lods
repnz
jo
lods
or
movsl
mov
out
push
fs
adc
or
adc
push
adc
outsb
jo
cltd
cmc
lods
jae
jb
dec
popa
mov
lcall
push
lods
mov
les
stc
or
ret
enter
mov
popa
dec
or
sbb
push
lret
sub
movsb
mov
leave
push
xchg
lcall
out
adc
inc
adc
lcall
les
test
testb
cld
in
sbb
ljmp
fs
imul
push
arpl
xor
cmp
ja
mov
lods
insb
add
sub
pop
mov
sub
popf
adcb
fs
mov
out
add
jecxz
ljmp
sub
mov
sbb
in
push
hlt
jge
inc
adc
xor
pop
push
into
push
arpl
lods
clc
ljmp
sbb
ds
or
sbb
lahf
jmp
enter
push
mov
sub
loopne
repnz
or
xchg
push
xchg
xor
in
popf
mov
icebp
adc
movsl
ljmp
repnz
push
call
aas
mov
fwait
psubsw
jbe
sbb
mov
push
imul
int
push
mov
sub
sbb
jge
cli
adc
add
push
or
push
xchg
nop
push
fs
jp
cmc
add
adc
arpl
push
andl
xchg
divb
cmpsb
inc
scas
std
sub
insb
jl
jle
pop
outsb
sbbl
insb
icebp
aas
aam
fisubrs
cld
mov
js
add
repnz
ss
add
movsb
int3
jmp
imul
fstpt
sti
int3
bnd
inc
shll
int
push
stos
xor
lods
xchg
ljmp
jno
popa
jns
sbbb
mov
ret
lds
arpl
mov
or
or
loop
repnz
mov
lahf
fldenv
stos
mov
fwait
cmc
insl
int
pop
jo
dec
imulb
in
cmc
stos
ds
or
add
push
or
sbb
loopne
mov
sub
and
mov
repz
rorl
push
out
add
call
mov
cli
stc
mov
int
mov
adc
arpl
repnz
xor
ficoms
mov
mov
sbb
movsl
es
xchg
bound
cmp
and
cmp
lods
unpckhps
lods
fcompl
dec
test
mov
adc
test
cmp
stc
xorl
jmp
icebp
cmp
mov
repnz
fs
mov
jnp
xor
insl
je
divb
imul
adc
inc
xlat
scas
shrb
push
scas
test
add
dec
int3
xor
repnz
rclb
xchg
pop
xor
mov
mov
pop
sub
adc
fs
push
fisttpl
icebp
jo
gs
jmp
cmp
add
mov
adc
jecxz
testb
std
bound
lods
and
adc
pmulhw
mov
stc
mov
push
jbe
repnz
dec
push
insb
dec
cmp
xchg
or
leave
adc
fwait
mov
out
xchg
sbb
and
lods
or
iret
sbb
jo
add
cli
sub
in
mov
enter
mov
negb
outsb
add
dec
push
sbb
hlt
and
adc
std
push
inc
lods
es
push
lods
sbb
out
xchg
aaa
leave
in
pop
push
sub
dec
dec
arpl
dec
xchg
jo
mov
fdivp
lret
test
imul
add
mov
bound
xor
or
jno
pop
leave
adc
jno
ljmp
adc
sar
bound
dec
gs
lret
and
adc
loop
mov
pop
cmp
mov
push
cmp
cwtl
rol
or
push
shlb
cld
shl
loopne
out
mov
repz
inc
adc
call
icebp
imul
push
repnz
mov
sbb
movsb
push
xor
or
movsb
test
mov
aam
fsub
mov
or
imul
shll
dec
fwait
and
lock
mov
ficoml
ret
mov
adc
jae
clc
fcmovu
pop
mov
les
pop
cmpb
cmp
iret
mov
xchg
in
adc
dec
test
pushf
das
mov
js
stos
in
push
outsb
mov
outsb
xchg
fwait
xchg
rclb
sbb
gs
mov
push
icebp
shl
fstpt
loop
data16
xchg
pop
sbb
sbb
loop
stc
fidivl
ja
xchg
adc
mov
push
adc
push
repnz
rorb
notb
repnz
cmp
push
scas
xchg
mov
add
roll
sar
xchg
or
push
sbb
mov
subl
pop
cmp
int
mov
xor
jecxz
mov
adc
or
jo
scas
jne
cmpsb
jg
xor
or
shll
mov
jge
gs
out
imul
mov
lret
add
mov
gs
dec
or
dec
mov
fdivs
out
insl
ja
fists
out
outsb
repnz
fidivrl
movsl
or
mov
xchg
cmc
fisubl
mov
pop
testl
sbb
lods
ja
adc
mov
inc
roll
or
sbb
arpl
adcl
push
sub
mov
pop
insl
push
adc
in
aaa
mov
xchg
inc
add
dec
push
push
or
mov
out
lock
cmp
sub
mov
mulb
loopne
jno
movl
pop
into
scas
imul
mov
sti
aam
dec
inc
cmpsb
add
mov
in
mov
mov
icebp
pusha
push
mov
adc
jae
and
sbb
stos
cld
rcll
adc
mov
loopne
mov
adc
lcall
std
flds
icebp
or
imul
xor
or
inc
dec
xchg
push
sub
mov
dec
cmp
xor
and
mov
inc
insb
and
adc
add
dec
xchg
repnz
jl
call
lahf
fs
sbb
mov
push
insl
pop
and
mov
mov
in
adc
sbb
cmpsb
ret
adc
lcall
scas
sahf
sbb
int
test
fidivs
ja
or
fs
out
pop
jmp
jb
lret
stc
lods
push
dec
mov
sub
dec
in
test
subl
call
cmp
push
inc
jne
pop
test
xchg
sub
dec
cmp
subb
xor
pop
movb
mov
push
rcr
add
into
xor
ljmp
push
inc
cmpsb
pop
mov
mov
nop
fcom
or
and
xor
movsl
mov
mov
repnz
jecxz
mov
mov
sub
cli
int3
mov
xor
lcall
cmp
fisubrs
push
test
xor
sbb
jno
push
shll
mov
pop
jb
testl
adc
mov
ret
stc
insl
stos
rcrl
adc
subb
movsl
add
xchg
mov
push
push
cmpsl
sub
sub
mov
mov
xchg
cld
sbbb
or
or
pop
ret
push
adc
subl
in
ficoml
and
cmp
xchg
jl
xor
cmp
cmp
movsl
jne
and
arpl
test
imul
push
in
xor
push
dec
lret
and
cmp
add
dec
jb
cmp
adc
mov
mov
into
dec
mov
movsb
or
insl
cli
pop
jge
and
mov
movsl
lret
and
pop
mov
mov
clc
and
scas
fistl
gs
jns
cld
sub
les
and
push
lods
ljmp
shll
mov
leave
dec
sub
aam
or
xchg
adc
inc
mov
inc
dec
lahf
test
imul
rol
mov
inc
test
pop
nop
mov
ljmp
push
addr16
mov
or
cli
sub
or
inc
adc
fld
mov
jge
nop
loopne
int3
mov
movsl
push
lods
xor
sbb
testb
sub
dec
shlb
sub
mov
aam
pop
je,pt
or
adc
icebp
lcall
pop
fs
pop
add
in
fsubl
sahf
out
mov
mov
and
adc
push
out
cmp
xor
fstpl
xor
dec
fcompl
xchg
push
lcall
icebp
sbb
movsl
add
adc
push
adc
pop
insl
adc
daa
and
lods
leave
stc
je,pt
jge
mov
clc
movsb
or
mov
pop
movsl
adc
sub
cld
adc
aad
jbe
stos
lock
lahf
mov
or
pop
arpl
lods
cld
cmp
dec
call
sub
mov
adc
sbb
or
repnz
inc
notb
mov
neg
imul
add
lahf
loopne
push
out
das
in
adc
es
and
jmp
js
jo,pt
mov
add
movsb
dec
movsw
sub
xchg
sub
inc
dec
mov
fstps
cmpl
lock
lock
adc
imul
lods
xchg
shrl
stos
pusha
cwtl
pushf
ss
movhps
bound
jp
push
and
xchg
fwait
lahf
xchg
pop
xchg
cmpsb
mov
mov
daa
data16
fldt
and
cmp
out
adc
in
stc
mov
das
or
push
sbb
js
push
mov
push
fildl
rorb
sbb
mov
cmp
adcl
jl
add
es
push
rcrb
inc
cmp
test
roll
lods
adc
rclb
test
adc
mov
cwtl
pop
fs
insl
adc
dec
fs
pop
xchg
and
in
dec
and
add
cld
xor
sub
dec
sbb
hlt
lcall
pop
cmc
test
movsb
push
fldl
xor
ficoms
in
les
shlb
sbb
cmc
adc
adc
push
testb
xchg
out
mov
in
push
push
push
hlt
lods
inc
or
aaa
cwtl
cs
fs
aaa
sub
cmp
jmp
int
in
fs
add
push
jo
lock
pop
sbb
push
or
rcl
imul
aad
adc
je
mov
xor
xor
xchg
lock
adc
cmpl
pop
mov
ljmp
push
in
pop
and
pop
sbb
shrl
arpl
movsl
test
stos
mov
dec
stos
sbb
adc
xchg
pushf
inc
and
outsl
xor
or
in
mov
in
adc
movsl
cmp
lds
mov
mov
xchg
dec
fsubrl
int
mov
mov
cmp
lcall
ret
mov
cmp
mov
add
push
jo
jno
repnz
int
test
addr16
div
dec
add
mov
adc
adc
sbb
mov
and
adc
test
movsl
stos
lods
in
sbb
mov
jecxz
add
jecxz
insb
sub
pop
fdiv
lret
int3
es
push
scas
jns
and
mov
or
adc
enter
call
xchg
test
or
jge
adc
sbb
popw
dec
daa
cwtl
add
popa
lret
sbb
cmp
pop
adc
iret
aaa
incb
or
add
xor
and
das
inc
mov
outsb
push
pop
add
sbb
cmovne
repz
dec
jmp
jb
and
popf
dec
lock
mov
jne
ret
sbb
fstpl
adc
fmul
stos
mov
stos
adc
lock
mov
lret
and
xor
cs
test
sub
mov
inc
jnp
imul
xchg
or
out
neg
jge
and
mov
sbb
lock
and
lock
sbb
and
aam
mov
push
jg,pn
cld
add
push
std
lret
jecxz
sub
or
cs
xlat
lods
sbb
xchg
outsb
stos
out
ds
roll
pop
js
movsb
dec
inc
packsswb
out
xchg
xor
adc
mov
test
cld
pop
loopne
stos
jo
test
sbb
nop
sbbb
mov
fnsave
lods
adc
cmp
adc
in
outsl
punpcklbw
pop
test
mov
in
shlb
jp
loope
sbb
cmp
and
inc
jle
icebp
fs
and
cmp
lret
mov
stc
mov
int
sahf
push
nop
jecxz
inc
push
outsl
xor
jne
fs
adc
cmove
aaa
insb
or
jns
jl
dec
divb
sbb
sub
loopne
fcompl
sub
sub
sub
and
inc
lds
rcrb
das
mov
mov
repnz
xlat
cli
imulb
lcall
loop
in
daa
test
jmp
sbb
mov
add
sbb
lods
sub
add
lods
jb
nop
jmp
mov
sbb
push
push
sbb
sub
mov
dec
mov
and
sub
mov
fmuls
fimull
notb
shll
pop
push
insb
insl
inc
lcall
mov
jo
ficompl
push
hlt
sub
jecxz
arpl
fwait
lret
fs
pushf
xchg
push
fs
mov
enter
lds
ret
or
mov
repz
jo
sahf
adc
and
call
fistl
movzbl
movsb
int3
lods
add
jnp
bound
shr
daa
repz
inc
sub
and
pop
mov
or
out
lret
mov
lahf
mov
lods
dec
cmp
in
icebp
adc
pushf
jns
popa
in
pusha
pop
add
add
jo
sbb
stos
in
push
jmp
jle
shrl
xchg
mov
lods
push
push
gs
push
mov
sarb
cltd
adc
xchg
sti
mov
test
adc
mov
or
mov
mov
mull
rorb
add
pop
and
ret
imul
xchg
jo
push
pop
and
movsl
cld
xlat
adc
lret
leave
stos
mov
sbb
mov
sahf
xchg
adc
add
mov
push
mov
js
add
xor
test
lret
push
lcall
pushf
sarl
loopne
lock
loop
and
mov
mov
mov
arpl
add
xor
mov
cmpsb
rcll
mov
fisubrs
lea
nop
mov
stos
xchg
loope
ret
stos
shl
stos
add
bound
pop
cltd
jbe
pop
jle
mov
test
daa
cmpsb
mov
mov
sbb
pushf
dec
movsb
or
in
fst
xchg
or
push
orb
sbb
les
loop
cmp
fistpl
repz
jbe
mov
mov
and
mov
gs
cmp
xchg
dec
adc
hlt
addr16
pop
xchg
lock
add
mov
repnz
aas
add
mov
mov
adc
push
insl
jo
repnz
fs
pop
push
inc
movsl
push
push
mov
inc
movsb
enter
pop
sti
ret
nop
fsubrl
sub
repnz
sbb
popl
in
pop
adc
jl
pop
inc
xor
push
adc
adc
dec
and
xchg
das
movsl
notl
in
ret
cmp
mov
or
in
lock
int
dec
inc
mov
inc
mov
mov
enter
jbe
add
jb
dec
fsubs
and
hlt
lret
icebp
popf
fisttpll
js
mov
lock
fs
sbbb
outsl
movsl
imul
sbb
test
sbb
scas
mov
fildl
aas
mov
xor
mov
sarl
xchg
dec
jge
cmp
add
or
pop
stc
push
loope
or
sti
sbb
in
adc
xchg
lods
shll
and
add
rcl
add
jg
jnp
jmp
cli
test
mov
aas
cmp
filds
inc
pop
call
push
pop
int
sub
shll
xor
mov
add
xchg
loopne
lods
adc
nop
push
sub
sbb
lcall
gs
cld
sub
mov
stc
adc
in
idivb
ret
and
popf
test
andb
mov
lock
fdivp
addr16
sahf
cmp
mov
sbb
adc
dec
imul
iret
sub
cmpsb
aaa
negb
cld
push
push
xchg
sbb
mov
lret
xor
stos
shl
int
xor
std
adc
pop
lods
dec
gs
std
fisttpl
cmp
rolb
movsl
push
and
mov
data16
fwait
cmp
adc
pop
scas
and
push
rcrl
push
popf
frstor
or
popf
or
ja
divb
movsl
xchg
in
jecxz
mov
icebp
lods
and
jo
sbbl
add
mov
cmc
xor
push
ljmp
adc
add
mov
lahf
iret
xor
mov
adc
adc
out
sub
mov
mov
jl
pusha
repz
insl
xor
lods
push
mov
dec
cmpsl
in
push
and
adc
xor
mov
pop
mov
shl
fwait
call
or
cmp
inc
cmp
add
push
dec
mull
sbb
pop
aaa
pop
mov
jno
fs
sahf
pop
dec
ret
mov
aam
cli
and
rcll
or
add
jg
xchg
dec
adc
stos
xor
cmp
shlb
bound
cmp
pop
cwtl
xchg
jecxz
fs
inc
sbb
repnz
mov
cmp
mov
addr16
lea
in
call
push
cmp
popa
test
and
jnp
jnp
jmp
loopne
in
in
int3
adc
push
add
mov
cmpsb
pop
mov
mov
imul
cwtl
daa
cltd
and
shll
gs
mov
ljmp
push
and
or
outsb
pop
ret
jo
jnp
mov
ja
cmp
pusha
stc
loope
inc
jo
and
in
adc
jns
cli
sub
dec
jle
test
loope
mov
adc
and
pop
fwait
pop
push
xchg
in
push
imul
ljmp
and
adc
out
xor
fmul
cmp
ja
cld
jp
andb
ljmp
mov
outsb
mov
and
nop
insl
lea
xor
fcoms
in
popa
cld
sub
inc
idivl
in
rcrb
add
push
mov
test
add
add
mov
sbb
stc
in
in
aaa
jnp
int3
popl
pop
mov
pop
jle
mov
jge
dec
cmpsb
mov
dec
fucomip
push
jnp
imul
mov
dec
push
and
lahf
sbb
data16
sti
inc
repz
cmp
pusha
adc
pop
dec
pop
loope
xchg
sbb
es
sbb
push
insl
int3
das
int
cmp
insl
mov
pop
imulb
out
lret
xor
insl
imul
imul
inc
mov
sub
cmp
or
jns
fucomip
sbb
add
imul
stos
jno
or
and
adc
loopne
fcoml
sub
popf
pop
dec
mov
jo
popa
cmp
repnz
punpcklbw
lret
mov
dec
push
or
push
xor
cwtl
sbbb
fstps
adc
xor
fcmove
add
sub
push
inc
nop
pushf
call
adc
pop
cmp
mov
outsb
adc
push
pop
in
fwait
and
test
mov
mov
or
xchg
xchg
mov
adc
push
arpl
and
mov
xchg
xchg
sub
aas
cmpsl
sahf
stos
out
fsubrs
or
call
push
and
push
in
push
inc
movsb
xor
test
outsl
gs
fst
stos
jb
inc
in
dec
dec
jge
xor
sbb
rolb
pop
dec
data16
mov
mov
push
or
sar
xor
dec
jmp
xchg
inc
std
jnp
xor
icebp
rcrb
es
loope
add
imul
mov
rorl
lahf
mov
cwtl
decl
in
or
jo
rcl
mov
inc
jecxz
xchg
in
inc
push
aaa
mov
lods
cmp
cmc
dec
xchg
stos
cmp
xchg
cmp
insl
stc
subl
repnz
jl
or
mov
add
dec
int3
aad
mov
in
stc
clc
inc
dec
decb
push
or
dec
repnz
mov
mov
mov
loopne
ret
popf
mov
and
mov
sbb
bound
sub
sub
fildll
xor
lea
push
xlat
cmp
popa
and
xor
lods
clc
dec
cmp
mov
fidivrs
and
xchg
mov
or
mov
mov
orl
jnp
dec
push
adc
loop
pop
push
aas
dec
sub
sbb
insl
mov
cmp
inc
outsl
xadd
mov
adc
mov
rolb
and
movsb
imul
mov
mov
lea
adc
loop
iret
test
pusha
jecxz
mov
shll
push
cmpsb
mov
iret
incb
lcall
mov
mov
adc
decb
jecxz
lahf
mov
or
clc
lock
stos
cmpsl
mov
and
sahf
movsl
mov
xor
std
outsb
cmp
push
dec
out
movsl
sbb
mov
lods
mov
call
aas
xchg
pop
mov
push
sbb
ljmp
push
mov
enter
xor
js
pop
add
lret
sarl
pop
or
out
xchg
test
fbstp
data16
and
stos
mov
xchg
jecxz
dec
stc
jae
movsb
mov
mov
cmp
loop
inc
xchg
mov
dec
mov
cltd
and
outsb
add
inc
lods
aad
xchg
lock
cmp
pop
imul
xchg
in
or
or
push
in
inc
add
sbb
or
xchg
add
outsl
pop
adc
ds
mov
fidivrs
test
add
inc
jns
shl
repz
call
fwait
fs
bound
pop
test
dec
xchg
adc
jno
mov
sahf
fs
jmp
push
dec
or
idivb
cld
test
mov
bnd
mov
mov
fisttpl
xor
in
rcll
repnz
or
dec
lcall
sub
xchg
xor
xchg
out
repnz
push
pushf
and
adc
mov
dec
lock
loopne
stos
in
popa
xchg
inc
insb
mov
sti
adc
push
in
jne
ljmp
rol
jb
movl
or
mov
pop
mov
jmp
sahf
or
mov
sbb
ret
add
mov
sbb
mov
pop
fcoms
stos
repnz
adc
xor
jnp
pop
or
xor
add
int3
adc
out
xor
call
cld
nop
mov
pop
push
inc
loopne
cld
loop
mov
or
sarl
sub
jg
cmp
popf
leave
jnp
aas
push
xchg
fdivrs
int
push
ret
cmpsb
fldcw
xlat
add
cmpsl
and
sbb
ja
in
dec
stc
sbb
js
or
adc
jne
lcall
xor
test
shlb
lods
stos
xchg
lret
adc
shl
or
jg
ficoms
bswap
out
in
hlt
adc
jge
push
gs
stos
movsl
lods
subl
dec
repnz
xchg
test
adc
test
add
dec
bndldx
or
xchg
inc
add
dec
and
xorb
mov
xlat
dec
stc
in
in
jmp
mov
or
pop
lret
fs
dec
or
xorb
imulb
mov
int3
shl
sub
pop
pop
dec
pop
lods
inc
imul
push
dec
cli
icebp
adc
push
test
sbb
rcr
and
xor
sub
mov
push
cmc
gs
vpsadbw
in
repnz
lods
xchg
or
je
in
adc
out
daa
sbb
fidivl
sub
movsl
add
es
ss
cmp
add
add
add
hlt
repz
jmp
or
divb
popf
add
sbb
mov
pop
lock
mov
or
and
adc
mov
in
cmp
sub
test
jg
imul
es
adc
shrb
xchg
sbb
popf
in
nop
les
adc
movsl
bound
jbe
mov
imul
add
dec
jno
data16
bound
or
in
xchg
in
xorb
shr
loop
ss
in
jecxz
dec
jb
sbb
mov
std
int3
xor
loope
jp
jl
stc
dec
mov
daa
and
clc
mov
mov
gs
push
inc
aas
dec
push
xchg
cli
jno
inc
pusha
icebp
icebp
bound
lea
jg
xor
ss
imul
mov
adc
adc
xor
and
je
repnz
and
pop
inc
xchg
mov
in
mov
hlt
mov
sub
cmpl
stos
lahf
and
repnz
arpl
mov
pushf
sbb
insl
cmpsb
in
add
icebp
xor
cmp
or
mov
inc
cltd
cmp
fdivrl
add
rorl
adc
js
data16
mull
pop
popf
subl
fs
push
inc
out
in
jle
and
jae
ds
in
je
scas
popa
cmp
cmpsb
std
stos
jle
cwtl
adc
fisubs
xlat
nop
rcr
cmp
into
or
adc
dec
lods
repnz
xor
insl
fbstp
pop
daa
pop
pop
mov
scas
enter
lret
lcall
sarl
pop
or
jecxz
mov
push
pop
xchg
iret
in
lgdtl
adc
subb
jno
mov
ret
ljmp
repnz
ficoml
lcall
sbb
fiaddl
aad
mov
arpl
pop
fsubl
nop
fs
in
loope
pusha
testl
or
testb
int
lea
cwtl
test
mov
mov
cmp
jmp
xchg
push
subl
inc
lea
add
rcl
push
scas
mov
pop
and
sub
sbb
lock
xchg
mov
mov
jg
mov
lcall
or
jnp
outsl
arpl
cmp
sbb
and
js
cmp
push
sub
test
and
dec
adc
add
mov
cmp
and
mov
es
adc
enter
out
int
ss
faddl
or
outsb
mov
cmp
mov
jg
stos
or
cld
les
imul
mov
fsubrp
in
mov
xor
movsl
popa
mov
sbb
inc
cmp
mov
dec
jl
mov
scas
adc
sahf
stos
shrb
iret
pop
shlb
mov
cmc
out
mov
loopne
lock
or
test
fdivs
and
adc
lock
push
lahf
in
out
cmp
adc
in
and
push
adc
outsl
stos
inc
aaa
repnz
sbb
sbbl
inc
sub
ret
stc
adc
scas
mov
sahf
mov
cmp
mul
xchg
movsl
nop
pop
and
insl
mov
dec
adc
push
sbb
ds
mov
repnz
sub
push
insl
adc
rcrb
xor
cmp
cmpsl
unpcklps
loopne
test
lcall
cmp
adc
imul
cmc
jns
or
or
clc
popf
es
fsub
nop
fcoms
mov
xor
and
addr16
fisubs
int
inc
mov
jmp
and
les
jle
push
loope
mov
xchg
xor
dec
fidivs
mov
sbb
inc
jbe
mov
fstpt
sub
lret
sbb
sbb
fbstp
inc
mov
out
loop
xor
and
repnz
imul
dec
lret
shlb
fidivrl
stos
xchg
pop
mov
movsb
dec
pop
insb
data16
in
jns
cmpsb
js
cmp
add
dec
lcall
pop
bound
ja
movsl
push
stc
mov
sbb
add
cmpl
inc
sub
lock
and
pop
push
cmc
outsb
repnz
rcll
popa
or
test
insl
mov
mov
and
pop
add
or
xchg
test
jno
jge
bound
xorb
dec
dec
xlat
mov
adc
mov
mov
subl
dec
xor
sub
out
sub
stos
sub
or
cld
cmp
jle
sbb
or
divb
dec
inc
mov
dec
fisubrs
sbb
data16
cmc
insb
pusha
cmp
lods
cwtl
xor
mov
dec
inc
push
repnz
insb
and
dec
nop
and
inc
mov
clc
fwait
jns
sbb
mov
xor
push
add
imul
mov
push
cs
testb
mov
mov
and
outsb
pushf
dec
and
data16
push
inc
shl
jo
je
out
shrb
aas
sub
mov
popa
sarb
mov
je
divl
lods
mov
xchg
inc
sub
pusha
pop
sbb
bound
jo
out
mov
or
mov
sub
add
mov
mov
adc
mov
imulb
sub
data16
ficoms
scas
fildll
fwait
leave
push
imul
and
stos
inc
cmp
in
mov
add
xor
pop
test
jb
sbb
cli
add
push
add
leave
mov
cli
push
addr16
push
xchg
lods
repnz
test
aaa
jo
ss
push
push
adc
pushl
sub
adc
cmpsb
push
ret
push
adc
enter
icebp
jle
xchg
fs
cmp
outsb
add
sbb
stos
inc
nop
mov
lock
xchg
cs
sbb
sub
jnp
dec
jl
lods
test
mov
cli
xchg
in
mov
rclb
lods
outsb
imul
add
mov
pop
xchg
cmp
mov
mov
aad
adc
in
mov
xchg
int3
dec
adc
sbb
xchg
sbb
or
cmp
cmp
push
mov
push
mov
cltd
lret
adc
sbb
sbb
ja
sub
xor
sbb
or
xchg
movsl
jno
sbb
repz
mov
lods
dec
mov
out
or
dec
pop
xor
ret
pop
daa
xchg
hlt
movsl
inc
adc
sbb
jecxz
dec
pushf
xchg
jo
cwtl
subl
adc
data16
push
mov
and
call
xchg
gs
dec
jne
jo
ret
cmp
loop
or
arpl
leave
popf
adc
bound
add
shl
push
mov
inc
imul
fldt
movsb
iret
xchg
pmuludq
ds
rol
in
jl
inc
xor
xchg
xchg
sub
cmp
loopne
lea
imul
int3
jecxz
inc
dec
dec
aaa
test
jl
nop
aaa
cld
pop
jmp
dec
stc
or
cmp
sbb
ret
movsl
in
and
xchg
sbb
mov
cs
cld
sbb
mov
out
pop
loope
jo
test
lret
fisttpl
and
xlat
movsl
mov
jno
sub
and
push
cmp
inc
mov
mov
add
std
psadbw
xor
or
call
and
inc
call
inc
repnz
xchg
aaa
sbb
js
mov
shlb
pop
push
scas
dec
inc
ja
add
cmp
lret
nop
adc
arpl
insl
data16
xor
xor
hlt
mov
add
test
mov
and
in
and
xadd
dec
inc
out
or
loopne
push
xchg
stos
hlt
and
outsb
mov
lods
ss
lods
cmpb
cmp
bound
jecxz
mulb
cld
xor
or
inc
mov
or
gs
push
insl
outsb
pushf
push
in
in
test
mov
xor
insl
insl
fs
imul
fs
xchg
fldcw
es
cmpsl
mov
adc
or
scas
sbb
int
stos
sbb
adc
adc
sbb
movsb
imul
movsb
or
and
insl
pushf
mov
or
and
add
insl
push
sbb
and
fs
shl
add
sbb
lcall
bound
sbb
rcrb
stc
in
bound
push
fbld
add
sbb
mov
ud2
mov
jo
mov
clc
fldt
jno
push
jno
inc
call
mov
push
or
inc
data16
mov
or
addr16
scas
mov
pusha
pop
in
xor
push
mov
cli
icebp
or
push
adc
pushf
sbb
mov
pop
pushf
into
test
and
bound
pushf
push
adc
enter
gs
or
adc
setl
jo
push
adc
sbb
sbb
jo
adc
popf
push
push
push
sub
popf
jo
sbb
outsb
pop
repz
imul
mov
nop
sbb
push
pop
or
xor
lcall
mov
loop
or
pop
add
push
push
push
push
sti
jo
adc
push
popf
adc
fs
out
cmp
xor
cmp
mov
in
nop
sbb
push
mov
adc
xchg
pop
cmp
into
nop
outsb
inc
sub
mov
mov
imul
repnz
fs
dec
dec
mov
mov
push
movsb
push
addr16
jmp
sbb
adc
xchg
test
loop
lods
or
inc
cmp
icebp
and
cs
scas
enter
mov
rolb
mov
dec
mov
insb
jb
idiv
sub
and
mov
pop
inc
leave
dec
or
inc
adc
push
or
cmp
or
mov
pop
insl
mov
in
shl
adc
divl
out
adc
lret
push
inc
or
or
mov
jno
in
into
int3
add
and
js
insl
mulb
add
popa
stc
sub
cmpsl
enter
or
repnz
popa
mov
mov
xchg
sbb
mov
push
int
mov
jb
clc
ficoms
inc
pop
and
outsb
push
setl
push
mov
push
daa
mov
jns
repnz
stc
insb
push
dec
subl
sbb
sub
cld
sub
jl
fisubs
sahf
mov
cmc
pop
cli
xchg
mov
jb
jo
xor
add
cli
mov
stc
nop
in
test
adc
or
pusha
popa
mov
insb
jmp
iretw
sub
leave
add
jl
mov
call
std
pushf
push
insb
stc
mov
adc
std
pop
cmp
fstpt
lods
mul
dec
add
adc
and
dec
leave
outsb
cmp
and
std
lods
xlat
pop
shl
add
rclb
insl
cld
pop
pop
fidivrs
clc
loop
dec
ficompl
cmpsb
std
sub
call
cli
test
and
or
stos
add
imul
repnz
mov
push
imul
jns
bndldx
shl
mov
sub
and
adc
sbb
dec
lods
fstl
out
pop
pop
inc
sbb
mov
adc
lock
fldcw
adcl
pop
jo
mov
dec
jl
xlat
in
repnz
jb
lock
ret
inc
lret
cmpsb
cmp
dec
push
test
insb
sarb
lcall
xor
mov
inc
in
xor
jns
les
inc
aam
imul
jge
stos
lret
inc
push
shlb
add
ds
sbb
pop
pop
sub
insl
je
repnz
icebp
add
or
and
jge
loopne
or
lret
mov
sbb
out
or
push
or
adc
lahf
mov
adc
icebp
mov
popa
pushf
lahf
js
push
cs
push
push
pop
pop
js
mov
sbb
cs
hlt
test
xlat
xor
push
mov
cli
aaa
xchg
pop
rorb
xchg
jmp
xchg
fidivrs
adc
dec
orb
lret
jno
dec
cmp
pop
inc
xchg
inc
adcb
repz
loop
sub
adc
sbb
mov
xchg
and
adc
jo
movsl
loopne
andb
cmp
jp
shl
sbb
jl
cli
fistpl
xor
aam
xchg
nop
repnz
inc
xor
pop
mov
or
std
jbe
ret
sub
imul
hlt
lods
enter
repnz
jnp
xlat
or
mull
nop
xchg
stos
nop
in
mov
add
xchg
loop
movlps
sahf
pop
stc
xlat
mov
sti
stos
xor
dec
lods
adc
cltd
popf
jecxz
inc
mov
pop
sbb
mov
mov
outsl
pop
icebp
pop
not
shr
std
add
pusha
adc
in
or
push
cmp
and
cld
cmp
addr16
fiaddl
pop
cld
inc
in
ljmp
bound
sub
popa
imul
daa
lock
ret
fs
cld
ds
jl
cmp
cmpsl
outsl
popa
lods
adc
cmp
or
dec
lret
push
mov
cltd
lcall
mov
push
add
test
cwtl
add
jae
bound
mov
cmp
jbe
enter
cmp
xor
mov
mov
loop
popa
ja
mov
and
cmp
jge
pop
xor
les
add
mov
std
mov
hlt
cld
inc
lahf
fldl
mov
mov
repnz
inc
inc
jecxz
in
das
inc
or
sbb
xchg
fstpt
xchg
cmp
loopne
sub
repnz
movsb
jecxz
outsl
jge
jmp
jno
aaa
mov
cmp
ljmp
jno
testb
dec
nop
adc
push
iret
adc
in
xorps
xor
or
ss
divps
xor
loope
pop
adc
jno
xchg
add
adc
inc
mov
cld
sub
and
in
lahf
das
xchg
mov
in
test
lock
lods
mov
in
and
adc
mov
mov
dec
or
push
lods
loopne
adc
fs
sub
outsl
push
mov
add
mov
inc
popf
or
bound
jns
cmp
movl
data16
aam
aaa
int
xor
adc
imulb
fs
repnz
adc
data16
jne
add
mov
or
sbb
fs
jp
mov
mov
mov
test
jb
cmp
adc
dec
in
mov
sub
mov
and
cmc
cwtl
add
dec
dec
rclb
pop
jnp
inc
mov
stc
adc
push
sbb
cmp
test
inc
fs
or
mul
adc
mov
mov
int3
cmp
cmpsb
jl
pop
fisubrs
out
xchg
dec
mov
jge
pop
add
outsb
mov
cmp
movsl
inc
mov
leave
int
add
mov
push
xor
dec
xchg
adc
repnz
cmp
icebp
mov
push
mov
push
nop
arpl
lahf
cmp
xor
icebp
mov
mull
int
loopne
ret
xor
iret
stos
imul
mov
and
mov
bound
sbb
mov
pop
inc
cmp
pop
pop
stc
lods
adc
xchg
ss
mov
adc
scas
int
scas
inc
pop
sbb
lods
sub
loope
andb
iret
lret
cmp
mov
fwait
cmpsb
mov
jl
iret
pop
cli
pop
and
mov
pop
rcrb
iret
icebp
cmpsb
jne
jle
icebp
xchg
dec
cmp
jae
inc
out
movsl
int
lods
push
gs
pop
test
jns
daa
mov
insl
gs
jo
mov
mov
jns
insb
adc
mov
iret
cld
pop
cmp
and
xchg
push
stc
insb
adc
pop
sbb
loope
scas
dec
into
add
xchg
or
pop
int3
ljmp
dec
mov
std
or
add
mov
cmp
mov
out
shrl
jmp
in
pop
stos
and
ret
roll
mov
push
xchg
daa
cmp
ret
sbbb
ljmp
je
test
jecxz
xor
shlb
lahf
sbb
push
bnd
fcomps
lods
pop
push
aaa
shrb
pop
or
push
shll
mov
and
add
cmp
dec
mov
dec
mov
lret
or
pop
mov
pop
mov
sbb
sti
addb
ljmp
push
jle
push
dec
adc
aam
or
jae
iret
mov
in
repz
xor
movl
lcall
sbb
push
int
mov
add
or
fdivs
fs
data16
or
add
out
cs
repnz
or
adc
push
sbb
cmc
and
mov
inc
dec
std
nop
inc
out
imul
stos
cmpsb
xor
outsl
ret
cmp
lret
xor
adc
inc
movsl
pop
popf
or
jo
inc
fidivs
fwait
cmc
and
mov
sarb
push
test
pop
adc
popa
stos
or
mov
ror
inc
mov
pusha
push
loope
jne
sbb
loope
or
xor
loop
lock
add
incl
es
enter
xor
fbld
lea
pop
outsb
cli
mov
outsb
mov
sti
sbb
fsubr
xchg
jmp
repnz
xchg
mov
cli
shlb
fstl
hlt
sub
dec
int3
mov
jle
stc
or
cmc
mov
push
dec
lret
fs
flds
repz
test
push
repnz
fs
aaa
cli
or
cmp
mov
xchg
cmp
clc
and
mov
push
sub
jge
mov
movsl
jmp
push
push
mov
jecxz
clc
aad
push
insl
inc
test
rcrl
xchg
int3
arpl
addr16
push
xchg
mov
popf
or
lret
inc
and
fiaddl
adc
jo
or
jecxz
jo
push
stos
or
fimull
out
popa
pop
xor
loope
cmpsl
and
test
jbe
ss
scas
mov
outsl
stos
mov
divb
push
push
sbb
mov
icebp
xor
or
sub
fidivl
cmp
jle
iret
mov
adc
repnz
and
xchg
push
icebp
sub
fs
nop
mov
and
push
mov
cmp
pop
add
push
push
or
mov
pop
sbb
int
data16
dec
adc
es
cli
loopne
call
mov
cwtl
mov
subb
xorb
mov
and
xchg
mov
out
in
lcall
dec
xchg
cmc
dec
hlt
mov
imul
lock
inc
bound
stos
xor
cmp
lock
ljmp
push
icebp
pop
test
and
data16
nop
dec
shrb
or
mov
push
mov
xor
adc
mov
mov
inc
push
test
dec
insl
add
pusha
xchg
fwait
mov
cli
jb
shrb
in
outsb
fcoml
mov
in
mov
sub
or
jnp
pop
das
lods
arpl
arpl
sub
aaa
adc
mov
das
repnz
xchg
repnz
lcall
dec
enter
xor
cmc
out
ret
inc
push
mov
mov
adc
popa
rclb
xchg
xor
int
xor
daa
mov
jno
outsb
out
outsb
dec
push
dec
xor
dec
sbb
repnz
and
lcall
xchg
inc
mov
fs
jno
mov
jns
hlt
inc
out
inc
icebp
mov
adc
mov
inc
movsl
daa
push
jb
jle
lret
mov
scas
ret
int
or
and
sbb
pop
cmpsb
scas
and
push
cs
jge
mov
dec
push
shr
cmpb
dec
repnz
xor
adc
negl
adc
insb
mov
out
adc
jb
add
xchg
stos
jecxz
xchg
gs
mov
or
sbb
fwait
icebp
mov
dec
add
xor
loopne
pop
jl
sti
inc
je
xchg
loope
inc
jl
sarl
adc
nop
adc
sbb
mov
cld
shlb
movsb
je
mov
dec
inc
push
jmp
hlt
or
adc
out
dec
icebp
lret
sbb
clc
fiaddl
pop
cltd
shll
gs
mov
clc
dec
push
dec
ja
mov
and
stos
push
fwait
pop
cwtl
jo
icebp
aaa
pop
popf
adc
adc
je
inc
decl
jl
shrb
add
adc
orw
dec
cmp
adc
and
leave
shl
sub
push
xor
rcrl
mov
lock
dec
popa
cmpsb
jecxz
cmc
adc
adc
inc
or
lods
cmp
inc
or
jbe
clc
lods
mulb
jns
stos
fildl
rolb
ja
icebp
or
fwait
loope
jbe
out
cmp
xchg
cmp
in
sub
xchg
add
ret
lret
inc
or
dec
add
and
pop
push
dec
gs
pop
push
mov
pusha
mov
insl
nop
sbb
or
xlat
and
les
imulb
cmp
jbe
in
mov
test
dec
sbb
int
xchg
push
sbb
adc
cld
cld
inc
adcb
add
ficomps
dec
mov
adc
xorb
jecxz
mov
imul
inc
leave
lods
inc
dec
int
fwait
out
add
test
filds
pop
dec
repnz
push
and
imul
scas
shl
cmp
nop
lock
or
pop
sub
and
aas
and
xchg
mov
cmova
add
fbstp
scas
push
repz
and
lock
imul
insb
xor
movsb
jae
inc
lds
add
out
jo
xchg
pop
movsl
sti
ss
shlb
popa
xchg
push
ja
and
or
adc
arpl
mov
mov
cmc
jmp
lods
call
std
imul
je
out
pop
imul
dec
adc
pop
mov
out
adc
enter
scas
movzbl
out
and
mov
sti
mov
push
sub
orb
and
jb
or
or
lret
mov
sub
loope
mov
pop
dec
fldcw
filds
cmp
ret
imul
arpl
loop
decb
jecxz
mov
shll
sbb
xor
jmp
fimull
or
loopne
stos
fadds
les
push
xchg
popf
pop
mov
inc
push
stc
fildll
fucomp
outsb
repnz
cmpsb
adc
out
faddl
fisubrs
out
push
pop
insl
or
imul
lahf
xor
xor
inc
mov
repz
xor
push
fwait
ljmp
add
call
mov
jns
or
inc
cmpsb
frstor
aad
sbb
push
fwait
and
push
sub
outsl
int
mov
sub
sbb
cmp
loope
leave
ljmp
mov
or
xor
and
clc
out
aad
xor
xchg
sbb
lahf
lock
rcrl
push
inc
clc
and
pop
movsl
push
or
lods
add
cmp
rorb
inc
add
mov
gs
adcl
repnz
lahf
enter
mov
adc
in
adc
fwait
es
sbb
add
pop
mov
sarl
cmp
fwait
mov
stos
cmp
lea
dec
inc
or
jnp
mov
movsl
xchg
xchg
pop
dec
add
cltd
fbld
mov
icebp
add
jge
sbb
and
push
aas
jg
sbb
mov
cmp
pusha
les
add
adc
add
xchg
jl
mov
mov
bsf
pop
jge
rolb
test
pop
iret
xchg
cltd
popa
mov
or
mov
cli
xchg
pushf
mov
dec
and
and
sbb
or
push
addb
pop
add
mov
loope
cmpsb
popa
inc
stc
or
dec
inc
push
push
and
sbb
pop
and
dec
push
outsl
bound
movsl
cmp
int
sub
rcl
divb
es
jb
or
jns
scas
dec
ret
mov
jnp
dec
jp
adc
adc
mov
mov
inc
and
nop
movsb
push
adc
fstpl
shlb
cmp
sbb
sub
ja
push
movsb
adc
das
push
mov
pop
jecxz
test
sbb
lock
ds
xor
or
clc
stos
pushf
popf
mov
aad
jae
push
xor
jae
and
mov
cmp
push
cmpl
sub
fnsave
addr16
test
pop
jle
adc
xor
je
fistl
sbb
or
xor
mov
repnz
mov
inc
mov
lahf
repnz
push
sahf
clc
mov
cmp
int3
mov
punpckhbw
mov
cmp
popf
and
mov
sub
adc
pop
sub
sbb
mov
rorl
push
pop
pop
sbb
mov
xor
shl
in
add
add
ret
mov
bound
adc
inc
jno
aaa
mov
dec
inc
insl
loopne
pop
or
lret
or
mov
int3
shll
sub
lods
jbe
imull
test
sbb
adc
inc
or
lods
mov
cs
mov
stc
pop
scas
jge
repz
or
xchg
in
test
push
cld
mov
mov
data16
dec
mov
mov
ret
loope
shl
imul
inc
jo
insl
adc
dec
imulb
jecxz
push
adc
mov
mov
inc
jmp
inc
jns
mov
cmp
sarb
test
xchg
adc
test
mov
or
arpl
mov
aaa
add
rorb
cmp
mov
cwtl
push
repnz
xchg
or
shl
push
adc
mov
xor
imul
jl
push
ret
fisubl
psrlw
pushf
sub
mov
jp
movsl
add
adc
dec
or
dec
icebp
popa
insl
jne
mov
inc
sbb
xor
inc
scas
cwtl
xchg
shll
mov
cmp
mov
mov
stos
mov
pop
mov
adc
cmp
mov
fwait
cmp
dec
cmp
push
cmp
fcoml
aaa
out
dec
mov
mov
sbb
out
jp
cmp
fwait
pop
add
ja
or
dec
and
sbb
insb
adc
scas
or
add
mov
dec
mov
inc
push
add
imul
imul
ss
mov
jae
pop
push
lret
iret
mov
lret
or
clc
push
dec
mov
push
movsl
mov
xor
clc
out
push
adc
nop
jecxz
push
pop
imul
mov
scas
mov
inc
cmp
jl
icebp
push
mov
int
sbb
xchg
lods
adc
adc
mov
sub
cld
mov
dec
insl
iret
js
mov
or
out
iret
daa
shl
cmpsl
xchg
xor
ror
out
jns
xorl
jmp
dec
push
push
lret
shll
into
dec
ds
loop
lds
sub
insb
mov
psadbw
sbb
rcll
cmc
ds
aas
sbb
into
cld
cmp
add
sahf
jb
jmp
dec
sub
movsl
pop
pop
adc
fwait
pop
sbb
repnz
cmp
inc
test
xchg
jne
stc
cpuid
mov
sub
sub
mov
mov
cmp
fildl
mov
or
mov
mov
das
and
adc
sahf
push
int3
fbstp
inc
inc
dec
dec
popa
mov
imul
shrl
js
jecxz
cmpsl
test
pop
jno
out
loope
outsb
mov
xor
adc
ja
sub
int
fistpll
mov
adc
hlt
xchg
dec
add
in
stos
jae
mov
stos
xchg
jmp
pop
test
and
ss
adcb
dec
xchg
xor
push
adc
call
add
popf
xor
repnz
mov
fimull
dec
outsb
je
rorb
imul
sub
movsb
cld
mov
and
mov
insl
mov
jae
stc
mov
sbb
and
test
cli
addr16
sub
adc
imul
fiaddl
bound
xchg
xor
inc
dec
mov
cmp
dec
sbb
mov
push
inc
pop
sbb
es
cmp
outsb
mov
sub
jmp
sbb
cld
and
lcall
mov
icebp
mov
adc
lret
and
fwait
dec
cli
cmp
mov
mov
mov
pop
repnz
test
dec
cmp
and
cli
icebp
std
add
sar
adc
mov
xor
movsl
jmp
clc
push
and
jmp
mov
aaa
mov
mov
mul
icebp
push
xor
sarb
fildl
jp
data16
xor
xchg
nop
ret
or
adc
loop
add
mov
mov
mov
and
lock
jbe
jg
add
test
imul
pop
ds
cmpsl
je
push
mov
jno
or
push
insb
dec
mov
call
mov
fisubrs
jl
or
push
lods
leave
cwtl
es
imull
in
fildll
xor
adc
test
imul
pop
ss
inc
stos
out
xor
adc
mov
adc
xchg
sbb
and
cmp
stos
int
or
push
push
mov
or
xor
dec
lret
insb
mov
stos
mov
sub
mov
push
fs
mov
rcrl
xor
mov
dec
mov
adc
repz
loope
test
sahf
repnz
xchg
ss
or
or
jns
in
add
mov
jmp
pop
jp
daa
jno
data16
pop
into
popa
sub
mov
push
push
and
push
inc
mov
divb
lea
test
mov
jb
hlt
cli
pusha
cwtl
add
push
inc
icebp
mov
jmp
jp
aam
or
lock
imul
incl
mov
lahf
cmpb
rorl
mov
xor
jecxz
rclb
outsl
xadd
mov
jge
in
jmp
outsb
pop
or
mov
adc
enter
pop
hlt
xor
sahf
dec
js
js
and
add
push
fistps
dec
mov
xchg
push
adc
mov
push
lahf
push
push
repz
inc
outsl
stos
sbb
mov
mov
jno
mov
or
xchg
and
add
xchg
or
adc
mov
fimull
push
imul
push
and
mov
stos
cld
cmp
insl
add
push
repz
cld
adc
xchg
movsb
movsl
sub
mov
or
ljmp
divb
pop
sub
cltd
add
pop
pop
lret
cmp
out
xlat
fists
aas
xor
inc
hlt
mov
push
repnz
imul
adc
stos
insl
mov
lods
in
mov
pop
sarb
sbb
icebp
outsl
mov
cmc
jnp
test
mov
xor
adc
xor
cld
cli
adc
jnp
insl
or
cmp
femms
mov
push
scas
ficompl
jecxz
fisubl
data16
scas
cmp
cli
pop
out
add
xchg
xchg
pop
cli
in
mov
insb
cltd
adc
mov
or
test
inc
pop
inc
ret
and
jge
mov
dec
pop
dec
push
adc
aaa
stos
sbb
int3
cmp
sub
mov
dec
stos
mov
das
data16
sub
arpl
outsl
scas
adc
mov
mov
sbb
push
inc
xor
pop
add
push
xlat
arpl
dec
shlb
jo
repnz
cmp
push
jl
cld
xor
shr
sbb
inc
inc
bound
push
dec
out
jecxz
xchg
adc
dec
subl
jecxz
dec
aam
sarb
pusha
mov
lods
mov
dec
lret
dec
mov
and
dec
daa
loope
jp
bound
mov
adc
sbb
cmp
mov
test
sub
mov
insb
int
cmp
lret
dec
mov
int
sar
mov
cmpsl
inc
xlat
inc
ret
imul
inc
pop
mov
inc
jle
outsb
into
adc
pop
fmull
or
inc
sbb
adc
pop
xor
cmpl
faddl
cmp
sbb
mov
adc
inc
and
ja
sbb
cmpsb
pop
std
lods
cld
sub
dec
mov
repnz
cmpsb
dec
outsl
and
out
mov
xchg
mov
out
ret
pop
pusha
dec
sahf
dec
and
stos
insl
xor
stos
dec
mov
inc
mov
stos
or
pop
cmc
in
xor
lea
lahf
in
pop
pop
dec
orl
test
inc
push
insl
mov
fsubp
push
xchg
fiadds
push
in
repnz
dec
sbb
dec
pop
mov
imul
push
or
jmp
or
cwtl
sarb
lahf
jp
lods
in
repnz
js
inc
call
sub
xchg
ljmp
or
insl
jbe
dec
scas
out
mov
in
xchg
adc
jle
jb
insl
fists
mov
pop
adc
xor
or
or
mov
push
scas
jecxz
lret
inc
adc
aas
or
lods
inc
xchg
iret
xor
andb
or
movsl
idivb
xchg
fucomip
mov
mov
in
ja
sub
mov
into
xchg
vmwrite
daa
sbb
and
stos
bound
test
lods
popa
adc
pop
mov
mov
jns
add
and
xor
in
xor
xor
and
jnp
push
jp
mov
lret
inc
movsl
xchg
jb
pop
adc
and
popa
daa
sub
cmp
and
in
cmpl
pop
in
add
or
or
stc
adc
inc
movsl
imul
shrl
mov
stos
xchg
adc
andl
adc
dec
cli
and
xor
outsl
jg
add
or
les
push
out
dec
mov
pop
scas
cld
lret
inc
xchg
nop
xchg
cli
mov
cld
jecxz
cmpsl
in
adc
dec
movsb
hlt
jae
lods
movsb
bound
daa
mov
outsb
ud0
testl
mov
adc
subb
ljmp
or
add
adc
enter
mov
outsb
into
dec
sbb
mov
ficompl
leave
sub
push
movsb
xor
mov
sub
shl
jbe
fst
clc
inc
outsl
jp
mov
pop
aas
mov
dec
mov
cvtps2pi
insl
fsts
mov
loop
inc
movsb
setno
cltd
icebp
frstor
comiss
mov
or
bound
fs
pop
adc
lods
jns
repnz
mov
cmp
shrb
push
mov
adc
pop
scas
mov
inc
aad
mov
lahf
mov
imul
jo
dec
rorb
fcom
hlt
cmp
xchg
call
xchg
sub
movsl
ja
cld
jl
js
dec
add
mov
stc
repz
scas
and
testl
in
mov
cs
movsl
push
movsl
cli
out
hlt
mov
roll
jns
mov
pop
jbe
daa
and
jg
outsb
push
mov
les
hlt
xchg
xchg
jnp
inc
nop
sbb
dec
xchg
cld
cmp
inc
rcr
repnz
adc
mov
and
test
repnz
shll
and
mov
and
stc
dec
sbb
xchg
mov
adc
inc
outsl
mov
insl
in
stc
xor
out
adc
test
adc
rorl
xor
push
in
xchg
out
mov
push
mov
push
pop
jle
pop
pop
push
pop
lret
fcmovnu
test
fwait
mov
imul
or
cmp
sbb
sbb
adc
adc
insl
pop
or
dec
out
dec
mov
pop
aaa
xchg
rcrb
lds
push
mov
testb
loop
aaa
ds
addr16
xor
rcrl
popf
mov
and
fs
jo
pop
push
paddsw
mov
sub
jo
repnz
pusha
mov
mov
dec
push
fimuls
aas
fs
leave
rorb
dec
out
dec
and
or
enter
ja
xor
mov
push
or
arpl
dec
xchg
hlt
mov
stos
pop
jnp
mov
mov
lods
or
clc
cmpb
mov
sbb
lahf
jmp
lods
movsl
mov
jnp
pop
jbe
loope
push
mov
sahf
mov
es
inc
push
xor
sbb
mov
adc
lods
dec
lcall
dec
xchg
test
xor
mov
data16
mov
dec
xor
pop
xor
fmulp
imulw
sarl
xor
lcall
out
out
fwait
icebp
mov
addb
outsl
movsl
ficomps
fsubrl
aas
ljmp
test
pop
repnz
popa
sbb
stos
mov
jns,pt
mov
jle
pop
out
push
jnp
dec
shrb
add
movsl
sbb
push
lods
mov
cmpb
inc
xor
addl
mov
lds
pop
sbb
lcall
jecxz
xor
sbb
sarb
jl
ljmp
std
dec
or
mov
jl
ss
xor
inc
je
lea
mov
lock
xor
aam
jp
push
lea
xor
jno
icebp
dec
sbb
subl
dec
mov
mov
in
mov
rolb
mov
lods
addr16
mov
dec
mov
loop
or
mov
adc
aad
nop
pop
xor
shrb
lock
mov
mov
or
mov
cmpsb
shll
enter
mov
enter
or
inc
mov
dec
ds
inc
sbb
jmp
sarb
pop
in
push
inc
imulb
call
cmp
divb
xor
bnd
push
push
add
cld
fnstcw
jge
and
jo
mov
stos
adc
pusha
popf
xchg
in
mov
xlat
pop
fwait
loope
cmp
adc
sbb
lret
in
mov
pop
adc
adc
push
aas
sub
clc
adc
shl
ret
call
lahf
push
insl
icebp
stc
wbinvd
lahf
stos
push
inc
adc
lods
icebp
xchg
insb
rolb
push
fsubrl
jl
lock
push
xchg
lret
popa
bound
inc
aam
adc
add
and
aas
sbb
jns
push
daa
sarb
cmp
sbb
jmp
jp
inc
movsl
aas
adc
cltd
push
cmpsb
std
mov
divb
adc
xor
imul
sub
jns
push
jg
sub
push
fs
outsb
inc
push
push
rclb
int3
subb
inc
push
fs
adc
aam
jmp
push
movsl
dec
stos
xor
mov
mov
mov
fnsave
ds
mov
jg
in
dec
lods
div
add
stc
insl
inc
mov
and
fs
pop
std
mov
push
addl
mov
xchg
ja
adc
and
rorl
lods
or
jno
mov
xchg
dec
in
movsl
pop
adc
sarb
cmp
int
mov
sbb
sub
fimull
out
sub
stc
sarl
imul
test
jno
inc
push
sahf
sbb
cmpsl
mov
nop
push
sub
mov
aam
ffreep
lock
mov
divb
sub
cmp
jo
add
pop
or
into
add
mov
cli
add
jp
ud0
pop
ret
in
mov
dec
sub
mov
or
adc
pop
pop
inc
std
in
pusha
mov
mov
and
repnz
repnz
aas
lods
pop
aam
incb
mov
fistpll
dec
cmpsb
and
dec
icebp
imul
jmp
and
jo
shr
adc
test
push
call
cwtl
loop
fs
adc
push
cmpsl
fists
pop
mov
and
push
sbb
repnz
jge
call
pop
std
xor
js
and
cmp
dec
inc
lret
mov
mov
mov
jl
xor
pop
int
ds
xor
data16
addr16
mov
outsl
inc
mov
lock
fwait
lods
jns
icebp
cli
mov
into
enter
cmp
into
out
mov
shrl
lds
in
fs
mov
pop
pop
mov
adc
add
push
mov
or
or
mov
dec
aaa
notl
aaa
aas
mov
push
outsb
cmp
lock
imul
out
call
lods
inc
add
pop
sub
arpl
flds
add
and
lea
mulb
sub
inc
movsl
mov
jbe
inc
call
icebp
sub
sbb
cwtl
jge
cmpsl
jo
mov
mov
mov
insl
rol
jmp
lea
es
mov
pop
enter
movsl
or
inc
xchg
mov
sbb
les
xchg
adc
lea
sti
mov
loope
std
lods
jl
and
and
push
xor
div
repnz
rcrl
push
fnstsw
mov
movsb
sub
mov
int
cmp
sti
pop
inc
push
popf
repnz
aas
pop
xchg
in
imul
jp
repnz
enter
lea
icebp
or
test
ficoml
fdivrl
ja
data16
cwtl
iret
adc
jmp
inc
jnp
and
fmull
pop
mov
jecxz
movsb
and
sub
aaa
jge
lock
and
push
stos
out
adc
push
stos
jge
pop
and
pusha
add
mov
jg,pn
out
mov
inc
mov
pop
mov
aad
repz
sub
fildll
in
push
mov
jg
sahf
or
andl
cs
sub
iret
mov
lret
add
test
mov
mov
outsl
fidivl
loope
test
mov
push
adc
jge
push
pop
push
xchg
jecxz
mov
xlat
adc
pop
ficomps
mov
mov
jecxz
ret
mov
inc
ret
pavgb
cmpsl
jbe
fistps
or
pusha
clc
dec
adc
dec
ffree
inc
mov
xchg
iret
cmpsb
cld
or
adc
xor
popf
sub
sub
inc
sub
inc
adc
and
outsl
adc
mov
rcl
pop
addr16
mov
xor
fwait
leave
xor
mov
xchg
lret
adc
mov
mov
sarl
stos
add
pop
les
mov
xor
push
loop
lds
testl
pushl
add
jno
adcb
mov
or
adc
jp
scas
mov
push
jb
in
stc
cwtl
cmpsb
imul
fildll
jno
subl
jp
inc
aaa
pushf
jp
jle
outsl
cwtl
shlb
leave
adc
std
in
ret
popf
aas
shl
adc
sub
mov
call
loope
movsb
cli
aam
lods
mov
jo
mov
movsb
cmp
inc
push
sbb
aad
sub
cmp
mov
leave
cmp
outsb
cmp
dec
cmp
aaa
xchg
jo
push
inc
push
fadds
adc
ljmp
push
jno
aaa
cmp
fwait
add
bound
or
or
insl
xchg
lock
inc
inc
pop
sbb
in
in
xchg
sbb
pop
pop
push
out
dec
lock
mov
mov
or
inc
fsave
fwait
jmp
push
mov
push
fs
imul
add
mov
leave
popf
ss
std
cmp
cltd
mov
mov
jo
mov
xchg
add
mov
xor
cmpsl
mov
push
ds
adc
mov
loopne
lcall
fs
stos
dec
sbb
mov
cld
sub
enter
in
arpl
inc
xchg
inc
insl
adc
loop
mov
test
sub
mov
xchg
jmp
incl
ja
and
cmpb
jae
push
jle
xchg
jnp
cwtl
mov
jo
adcl
push
mov
iret
lock
mov
and
or
push
mov
pop
add
mov
iret
outsb
mov
sub
dec
popa
movsl
adc
loopne
imul
cmc
sub
push
pop
mov
push
ljmp
iret
out
jp
mov
test
cwtl
test
cli
mov
les
mov
fwait
lods
stc
lods
or
xchg
mov
push
adc
in
sub
int
dec
call
pop
clc
pop
xlat
pusha
cmp
daa
inc
movsb
addb
mov
data16
insl
or
lock
hlt
mov
pop
inc
arpl
movsl
and
push
mov
lahf
out
or
cmc
int3
pop
fwait
in
mov
lods
jecxz
push
lock
jg
cmp
repnz
cltd
xchg
lock
inc
sub
iret
mov
add
mov
dec
lods
and
pop
fsincos
xchg
lcall
pop
outsl
lret
enter
inc
add
push
dec
mov
pop
mov
jbe
mov
xlat
push
lahf
mov
mov
dec
sbb
es
cmc
repz
mov
arpl
mov
icebp
dec
dec
loope
xchg
mov
lock
inc
loop
movsl
xlat
aad
sti
and
mov
in
mov
push
das
iret
xchg
lds
test
mov
cmp
jp
mov
cmp
cld
mov
adc
pop
jnp
sbb
aas
shll
pop
mov
mov
dec
cs
or
das
rcll
pop
mov
addr16
sub
sbb
adc
or
pop
cmp
sbb
inc
outsl
xor
andb
imul
insl
cwtl
inc
cmp
out
lods
pop
repnz
sub
mov
sbb
test
xchg
sbb
sub
cmpsl
xor
push
ret
xchg
push
mov
sti
adc
dec
data16
mov
sarl
insl
adc
loopne
xor
xor
sbb
stc
iret
push
dec
and
sub
inc
jno
jno
lods
dec
cltd
inc
or
aam
mov
push
repnz
jno
dec
add
xchg
and
aad
loope
insl
nop
gs
xor
inc
cli
pop
test
pop
xor
test
cmpsl
xor
cltd
imul
sbb
aaa
push
cwtl
jb
add
stos
movsbl
lret
xor
pop
popf
pushf
sbb
inc
xchg
pop
in
hlt
xchg
test
dec
dec
inc
fildll
push
adc
mov
add
push
ficoml
or
xor
xchg
orb
add
and
push
roll
xor
push
adc
jl
mov
jle
jp
repnz
mov
fadd
out
dec
rclb
sub
mov
xlat
dec
lret
cmp
xchg
popf
pop
dec
or
nop
cmp
popf
sub
repnz
xchg
push
fs
inc
adc
jge
pop
pop
aad
int
mov
fsub
dec
dec
movsl
jo
push
stos
nop
xlat
xor
xor
add
fcoms
fcomip
pop
cmpsb
and
mov
adc
rcrb
cld
sub
test
stos
stos
mov
and
stc
loop
xor
mov
loop
sub
testb
lret
jp
fs
mov
or
mov
dec
outsl
jae
filds
mov
push
hlt
or
loopne
rorl
pushf
psadbw
test
es
clc
push
or
out
mov
xorl
push
push
lods
movsl
add
inc
inc
call
int
lret
inc
dec
mov
cmc
jmp
stos
dec
sahf
pop
imul
lret
and
push
sbb
xchg
popa
dec
xor
and
lods
cmp
push
sub
xchg
loop
push
mov
ljmp
pop
pop
ja
xchg
loope
ror
or
pop
jno
mov
hlt
xor
mov
mov
shl
loope
cmp
dec
sub
sbb
ja
mov
faddl
sub
in
jmp
dec
cli
sbb
pop
push
bnd
rcrl
js
arpl
aaa
inc
sarb
mov
jecxz
lcall
cld
insl
aaa
mov
lods
icebp
xacquire
popf
dec
aaa
lods
movsl
adc
jb
int3
xchg
or
mov
lock
xchg
or
xor
imull
jns
nop
pop
cmp
mov
jae
sti
cmp
dec
sahf
idivb
dec
andl
pop
or
inc
cmp
iret
les
negb
xor
push
adc
andl
repz
mov
or
cmp
mov
stc
adc
sub
pop
into
mov
push
sarb
call
cmp
push
sbb
hlt
adc
sub
fistps
icebp
xor
dec
popa
xchg
push
pop
sub
xor
icebp
sub
dec
inc
xor
add
cmp
lock
pop
xorl
add
dec
sti
hlt
lods
out
in
lcall
push
ret
xor
xchg
fnsave
inc
mov
or
adc
mov
pop
push
or
outsb
sahf
out
lret
push
mov
aam
ds
test
into
outsb
jno
or
add
aas
pop
imul
bound
lods
adc
insl
insl
fs
inc
lods
jp
in
sbb
addr16
in
mov
in
lods
adc
sbb
mov
add
fs
cwtl
xor
repz
data16
jnp
gs
or
outsb
scas
and
xchg
add
adc
fdivl
inc
pop
pop
adc
push
add
dec
sbb
scas
mov
push
add
mov
sbb
sbb
imull
fdivrl
mov
lock
sbb
mov
mov
adc
jp
sub
dec
mov
sub
xor
or
sbb
out
mov
imul
hlt
or
mov
and
mov
jge
or
into
sbb
pop
mov
outsb
or
add
movsl
data16
xchg
pop
push
lods
adc
ds
and
movsb
bound
inc
adc
pushf
pop
pushf
pop
push
pop
cmp
inc
adc
sbb
movsb
pop
mov
call
cmp
mov
or
sbb
adc
add
subl
and
or
inc
sbb
jno
jo
bound
cmove
and
imul
or
pop
jb
push
mov
pop
pop
sbb
pop
addr16
mov
adc
scas
push
pop
arpl
inc
adc
adc
repz
stos
gs
adc
bound
or
lahf
mov
xchg
sbb
outsl
test
mov
add
pop
insl
mov
movsl
gs
adc
and
and
fs
sbb
adc
adc
pop
mov
add
arpl
aas
cmpl
fs
lock
cmp
sub
add
aaa
lock
xor
div
sub
inc
jecxz
cmp
mov
adc
rorl
cmp
inc
push
adc
stos
pop
lret
call
xchg
xor
push
mov
mov
scas
js
mov
mov
lods
sahf
add
pushf
outsl
xor
popa
or
movlps
mov
or
in
repnz
adcb
stc
mov
fnstcw
shr
je
push
add
mov
stos
add
jg
in
mov
xchg
xor
jns
ds
or
lods
adc
xorl
rorb
test
adc
or
jno
lock
outsb
mov
repnz
stc
test
add
movsb
pushf
jmp
or
mov
inc
dec
roll
pop
mov
push
mov
paddsb
popa
push
jno
mov
mov
sub
fdivp
rdpmc
and
gs
mov
and
pop
pusha
shr
jge
dec
mov
add
cmp
mov
mov
jns
xorl
xchg
aad
sti
add
cmp
dec
imul
adc
add
sub
insl
cmc
pminub
jb
push
jl
mov
cmp
rolb
mov
push
sbb
leave
inc
mov
cld
adc
in
inc
adc
cmpsb
lock
pop
mov
sbb
bound
sub
enter
jae
mov
and
jo
and
cmp
nop
stos
clc
mov
push
shrl
xor
outsl
subb
or
dec
cmp
ljmp
xchg
aam
bnd
in
jge
lcall
mov
mov
fisttpl
lods
xchg
pop
repnz
xchg
lock
sub
mov
or
dec
std
test
leave
pop
lea
or
mov
dec
jno
inc
pop
cwtl
xchg
xor
add
ljmp
divb
push
inc
ret
ljmp
dec
push
mov
xchg
cmpsb
mov
mov
sub
insl
imul
cmc
xchg
in
rorl
cmp
lahf
mov
sarb
dec
mov
push
movsl
push
mov
enter
mov
or
aas
jne
dec
test
pop
mov
stos
mov
sarl
push
jmp
add
dec
cmpsb
and
xchg
sbb
adc
or
mov
jns
dec
cmp
mov
sbb
in
nop
test
jb
dec
dec
mov
scas
in
negb
mov
divl
sbb
sbb
add
lea
and
cmp
adc
hlt
adc
fidivrl
mov
inc
inc
shrb
pop
clc
stos
mov
mov
cmp
adc
fwait
xor
lret
adc
mov
ja
inc
pop
lods
jb
push
lods
or
cmp
add
sub
sub
loopne
mov
add
mov
cmp
add
pop
inc
inc
pop
orb
popa
xor
mov
xlat
dec
and
sbb
mov
std
aaa
push
jbe
mov
sub
iret
push
sbb
and
test
fs
xchg
cmp
jae
mov
mov
sbb
or
sbb
je
cmp
sub
and
je
jb
mov
pop
sbb
mov
pop
jmp
outsb
mov
and
pop
divb
pushf
or
add
sbb
data16
jo
cmpsb
sbb
jbe
or
adc
jno
int
sbb
pop
data16
xchg
push
or
addr16
and
cmpsl
sbb
jo
push
call
adc
jo
dec
call
and
paddusb
pop
jo
fistpl
mov
out
mov
push
sarb
dec
mov
shr
sbb
fs
mov
inc
add
movsb
imul
add
cmc
and
lods
jo
arpl
mov
adc
adc
and
pop
out
sbb
sbb
push
jo
arpl
add
test
jo
mov
popf
movsb
push
and
and
iret
jno
sbb
in
arpl
cmpsb
mov
mov
jno
pusha
jo
loopne
popf
adc
or
mov
push
dec
outsb
or
clc
in
cmp
jp
add
or
loop
test
addr16
and
frstor
add
or
nop
mov
mov
subb
xor
mov
test
add
adc
push
jno
loop
pop
ds
enter
jo
or
jmp
push
gs
or
imul
pop
add
test
mov
sbb
push
setge
adcb
mov
adc
adc
shl
inc
arpl
mov
or
adc
andb
and
jmp
mov
les
sbb
add
shr
das
nop
pop
lcall
dec
bound
cmpsb
scas
pop
mov
sub
fiaddl
sbb
sbb
mov
pop
pop
adcb
add
repnz
popa
mov
mov
and
sbb
push
xlat
lret
sub
adc
sub
andb
add
and
xor
sbb
sbb
gs
sbb
pop
shlb
push
int3
mov
jns
inc
insl
jp
imul
fcmove
mov
pop
sarl
mov
mov
and
lret
out
loopne
mov
inc
sub
daa
mov
xor
xor
cmp
int3
cld
shrb
pop
repz
cmp
mov
push
mov
adc
out
inc
sahf
mov
sub
cmp
icebp
dec
in
ss
add
cmp
mov
popa
pop
std
push
sub
and
adc
mov
mull
fisttps
mov
pop
outsl
sub
cli
and
sub
stc
mov
mov
popf
imul
in
data16
repnz
pop
and
pop
jle
sub
xor
enter
mov
mov
push
addr16
mov
int
push
pop
sub
fidivrs
iret
dec
add
push
cli
loop
insl
mov
inc
push
addr16
fildl
lods
dec
jns
notb
and
lret
faddl
pusha
lret
insl
ret
add
adc
adc
jecxz
loope
cmp
jg
enter
sub
mov
std
fwait
sub
testb
in
xor
stos
push
push
add
or
inc
insl
adc
ret
inc
imul
mov
out
inc
push
add
stc
outsb
loop
xchg
push
push
dec
and
int3
xchg
sub
dec
call
scas
stc
inc
jo
imul
pop
cli
mov
dec
and
and
dec
push
insl
sub
insb
adc
stc
adc
cmp
div
outsb
cli
fcmovnu
popf
mov
cmp
repnz
jecxz
pop
inc
popf
mov
xor
hlt
mov
mov
push
repnz
imul
icebp
and
nop
dec
repz
leave
mov
lret
stos
packsswb
pop
mov
add
orb
imul
or
mov
dec
mov
push
test
or
and
out
outsl
int3
mov
and
daa
test
jo
out
in
or
push
mov
test
dec
sbbb
dec
popf
jno
cmp
mov
push
xchg
gs
faddl
or
cmpl
cmp
sbb
shl
dec
iret
xor
bound
movlps
repz
pop
dec
jge
push
mov
pusha
and
inc
ds
sub
cmp
or
sub
mov
call
xchg
cmp
mov
int3
pop
pop
dec
dec
cld
das
repnz
je
std
pop
cmp
mov
shr
in
or
orb
sbb
bound
sbb
loope
inc
pushf
sub
jns
dec
clc
dec
xchg
jge
fadd
mov
inc
push
mov
mov
shl
lods
addr16
mov
les
adc
sub
in
xchg
movl
mov
lret
jecxz
fcoms
mov
jp
popf
stos
stos
cmp
add
lock
push
ret
jmp
mov
push
push
sub
test
jbe
push
bound
cmp
add
xor
loopne
mov
arpl
cmp
jb
xor
sbb
mov
cld
mov
dec
jae
loope
outsb
scas
jl
iret
outsb
orl
and
dec
pusha
mov
and
and
adc
test
mov
mov
push
in
jbe,pn
xor
sbb
in
xchg
icebp
inc
or
sub
lret
in
inc
insl
or
das
test
mov
cmpsb
lcall
cld
mov
jl
lods
repnz
add
loop
xor
sub
inc
add
dec
sub
popa
mov
lds
icebp
sbb
cmp
adc
push
xor
mov
fstps
push
inc
int
push
jno
add
inc
sub
xchg
test
jp
mov
sarb
pop
sbb
mov
gs
sbb
xlat
pusha
stos
icebp
loope
in
nop
lock
push
xlat
lods
lods
in
xchg
mov
orl
rorb
decl
pop
sbb
xchg
fwait
dec
aaa
or
bound
sub
rcrb
lods
adc
sar
icebp
stos
sub
jp
inc
mov
mov
test
jmp
icebp
loopne
sub
into
xor
aaa
pop
pop
lret
call
dec
dec
daa
js
adc
sbbl
loop
in
pop
cmp
std
ljmp
mov
adc
and
xchg
mov
hlt
sub
repnz
jg
shll
pop
ret
dec
pop
repnz
or
pop
subb
movsl
xchg
dec
jno
sti
add
je
outsb
call
pop
iret
nop
ss
stos
repnz
in
and
scas
xor
clc
in
repnz
push
lret
add
pop
fdivl
incb
or
jmp
scas
cmp
pop
nop
or
jne
arpl
jle
aas
mov
or
mov
jo
fs
adc
mov
sahf
push
inc
mov
fisubrs
cmp
cld
lods
mov
dec
dec
xorb
outsb
call
cwtl
xchg
testb
test
sub
lock
pop
push
mov
and
push
mov
cmpsb
sub
arpl
mov
in
mov
imul
lar
dec
dec
push
pop
jnp
popf
repz
sti
rcr
call
loopne
fwait
and
push
and
stc
lret
jno
insl
ret
mov
xchg
pop
mov
mov
jne
nop
mov
xchg
subl
jle
jns
inc
mov
inc
ret
lods
repnz
or
jnp
xor
test
sbbb
dec
mov
and
sbb
dec
aad
ficomps
stos
or
arpl
jbe
pop
pop
movb
in
adc
maskmovq
ret
sbb
pop
filds
call
jmp
ss
xor
pop
and
icebp
in
xor
roll
jns
jb
ret
push
rorl
sub
dec
pop
dec
rorb
xchg
and
int3
xor
pop
cmp
lods
inc
popf
repnz
mov
and
cmp
sub
add
adc
jl
sbb
ja
in
and
mov
push
mov
popa
mov
outsb
push
notb
inc
cmp
cli
outsl
mov
loopne
and
je
rcr
cmp
fwait
repnz
std
nop
lock
lods
push
data16
call
insb
mov
cmpsl
pop
mulb
pop
jnp
add
pop
fcmovb
loopne
xor
es
repnz
xchg
mov
cmpsb
jbe
inc
lret
scas
sub
je
fimuls
push
rclb
sub
fstps
addr16
push
insl
test
sbb
inc
mov
sbb
push
and
or
in
mov
out
insl
cmp
lock
jl
test
insl
repz
out
repnz
lea
push
cmp
ss
adc
dec
push
das
add
icebp
loop
lret
int
cmpsb
std
lahf
pop
xchg
lret
xor
sub
push
shr
stos
test
repnz
xor
cmp
loopne
cmp
repnz
push
arpl
adc
mov
stc
push
add
push
repnz
add
fisubrs
mov
clc
inc
xor
mov
xchg
adc
mov
cmp
rcrb
xor
lods
out
stc
and
ret
push
cmc
mov
popf
dec
call
sbb
jns
rcl
into
sbb
mov
dec
lods
or
popf
std
mov
jmp
mov
aad
inc
adc
xor
sbb
cmpsb
mov
inc
and
pop
cmp
push
mov
pop
xchg
fs
xchg
int3
clc
lds
ss
js
rolb
jno
in
add
cs
or
in
pop
dec
out
outsl
sub
shlb
jb
sub
fs
cld
clc
sub
mov
fwait
adc
adc
out
or
scas
dec
repnz
mov
mov
cld
fstpt
or
and
pusha
repnz
jg
mov
mov
and
dec
push
push
pop
lret
dec
sub
mov
mov
and
cmp
mov
mov
add
test
outsb
sbb
adc
mov
sbbb
insl
repnz
fdivs
mov
hlt
insl
lods
push
mov
nop
mov
and
push
xchg
outsb
fidivs
in
xchg
xorb
imul
js
scas
sbb
adc
sbb
arpl
adc
in
or
cmp
mov
adc
mov
dec
cmp
sub
pop
in
pop
inc
jmp
repz
lods
mov
mov
xchg
insl
in
jbe
cmp
repnz
ret
jno
jae
test
inc
sbb
jno
sbb
in
repnz
push
sbb
sub
dec
inc
or
lret
in
mov
andb
adc
loopne
imul
or
in
adc
out
inc
or
imul
xchg
cmp
mov
cmp
pusha
mov
xor
mov
xor
xor
or
add
ljmp
mov
bound
inc
cmp
pop
cwtl
lods
or
stos
xor
jne
rcrb
inc
ficoms
cs
mov
sbb
dec
stc
xor
lcall
xor
dec
dec
loopne
sti
pop
xchg
int
or
adc
mov
xchg
sub
mov
call
insb
pop
jns
sub
ret
popa
mov
iret
pop
adc
popa
daa
mov
and
insw
icebp
jmp
adc
jnp
mov
in
inc
jge
cmpl
xchg
incb
and
orl
mov
js
test
jno
and
inc
notb
in
into
and
cmp
mov
add
pop
arpl
add
sti
es
mov
fmull
enter
mov
aaa
dec
frstor
mov
mov
xchg
shrl
fsubr
mov
cmp
sbb
dec
sbb
repnz
cmp
dec
ret
jmp
rorl
dec
data16
cli
and
nop
fnstsw
shlb
aam
prefetch
mov
or
mov
icebp
mov
inc
pop
mov
xor
fstps
push
inc
pop
push
xor
pop
hlt
sbb
movsl
xor
lcall
fdivp
or
dec
lcall
push
fcmovu
mov
cmp
push
aas
and
mov
or
jne
iret
mov
popf
sbb
push
imul
pop
cmp
inc
in
xor
cmp
lock
iret
pop
movsl
jno
lret
std
push
or
dec
mov
fidivrl
pop
daa
nop
ret
hlt
or
push
xchg
into
iret
imul
add
adc
loop
xchg
lret
mov
push
sbb
ljmp
xchg
mov
scas
mov
adc
lock
mov
push
imul
push
lret
cmp
dec
in
xchg
mov
movl
mov
sbb
push
sub
push
cmp
aaa
arpl
hlt
fwait
stos
dec
pop
jge
jbe
idivb
mov
in
aaa
loope
icebp
inc
ret
mov
pop
jne
jecxz
xchg
mov
mov
or
jl
push
aad
dec
xchg
inc
out
hlt
xor
push
imul
negb
adc
fwait
data16
mov
mov
enter
push
insl
jl
mov
sub
cli
scas
jecxz
xchg
xchg
push
std
xor
jbe
or
jo
in
mov
cmp
dec
mov
addl
or
jne
mov
fisubrl
shll
mov
push
in
push
push
icebp
stos
jmp
jg
ret
insl
adc
add
cmp
out
jo
inc
fildl
mov
or
sub
bound
imul
mov
jge
rcrl
xchg
jnp
or
lret
xchg
push
mov
mov
push
insb
xor
cld
adc
fadd
jge
xchg
cmpsl
xorb
sbb
fimuls
lock
sub
cmp
ds
adc
fimuls
push
lret
cmp
ret
mov
out
push
cmp
loop
stos
ljmp
jge
xchg
lods
xor
add
repnz
cmp
push
cli
mov
cmovs
outsl
mov
movsl
aaa
sbb
xchg
bound
fwait
notb
add
mov
mov
jl
lods
ja
xchg
stc
sub
mov
es
fs
fidivl
out
sar
add
inc
jo
andb
bound
adc
jo
inc
cwtl
adc
mov
test
push
jns
stos
xor
xchg
jno
adc
pop
jns
in
arpl
notb
xor
or
push
les
and
or
lock
shlb
xchg
inc
rolb
lock
jnp
loop
loop
pop
fwait
xchg
scas
xchg
pusha
mov
xor
xor
popf
popa
xlat
mov
rcrl
daa
hlt
and
sub
repnz
aas
pusha
cmpsl
shll
int3
push
jg
ds
outsb
inc
cmc
xor
dec
and
dec
cmp
xor
rcll
movsl
inc
add
add
mov
sbb
cmp
cmp
xchg
xchg
nop
jmp
mov
mov
add
mov
inc
out
loop
cltd
leave
int3
xchg
xchg
loope
cmc
aaa
cvtps2pd
push
cli
mov
rcll
inc
aam
cli
xchg
pusha
xadd
sbb
mov
mov
outsl
shlb
in
fwait
or
scas
lods
cmpb
xchg
mov
das
mov
das
loope
xlat
stc
dec
test
out
ss
imul
pop
dec
pop
cmp
test
or
mov
ss
sub
es
dec
mov
scas
mov
jle
shl
std
mov
mov
cmp
out
data16
push
jnp
into
outsb
dec
out
cli
loope
sti
sbb
icebp
mov
aas
mov
jp
push
mov
xchg
nop
jg
daa
add
push
or
cltd
jbe
insb
and
or
test
nop
ljmp
mov
int3
outsb
pushf
xchg
cmpsl
outsb
pop
and
filds
xchg
mov
mov
inc
push
iret
add
sub
lds
inc
addl
in
jo
dec
rolb
xchg
add
cli
mov
adc
arpl
and
mov
aad
mov
movsl
push
xchg
fnstenv
scas
fstp
push
cmovnp
mov
sub
lret
adc
or
mov
sbb
pop
dec
lcall
cmp
sbb
sub
rcrb
addl
mov
dec
cld
or
ret
bound
or
push
xchg
dec
stc
fcmovbe
fs
adc
and
push
outsl
push
jmp
imul
test
cmp
scas
repnz
xor
dec
add
cwtl
jae
push
add
mov
repz
mov
pop
fiadds
insb
fiaddl
loopne
fwait
jno
mov
cli
jo
inc
and
out
ret
jp
aas
cli
sbb
push
mov
dec
lods
and
xchg
fnstcw
lods
mov
pop
sbb
or
dec
pop
mov
out
adc
or
inc
xor
lods
in
xor
shl
inc
add
dec
sub
int
inc
mov
add
dec
adc
stos
lret
sub
sub
adc
mov
xchg
sahf
lods
mov
insl
pop
int3
jecxz
outsb
fcmovnu
scas
icebp
add
mov
aaa
pop
sub
jnp
bnd
in
cwtl
adc
cltd
outsb
sarl
mov
mov
sahf
cmp
and
stos
xchg
ljmp
mov
dec
test
mov
inc
xchg
dec
stc
mov
inc
stos
out
or
xor
cli
imul
or
or
jns
push
sub
push
xor
mov
inc
fidivrs
jg
or
or
xor
adc
sbb
idivl
out
xchg
bnd
in
and
mov
dec
sub
push
mov
cmpsb
movsb
add
sbb
mov
lods
dec
mov
push
hlt
adc
add
cmova
or
pusha
sahf
mov
cmc
mov
test
or
inc
sub
inc
movsl
inc
js
loop
add
mov
adc
inc
or
adc
fdivr
inc
sub
xchg
fs
mov
int3
out
mov
cmp
enter
sub
mov
loop
push
pop
imul
or
xlat
test
mov
mov
jns
leave
test
pmaxub
outsb
mov
bound
cmpsl
xchg
mov
and
and
pop
inc
dec
mov
aaa
inc
sbb
fsubp
inc
roll
scas
jb
es
sub
xor
daa
xchg
xor
add
test
and
cwtl
and
sti
or
decb
icebp
or
jae
in
lcall
mov
pop
or
and
cmp
pop
ss
aas
and
clc
outsb
aaa
out
pushf
es
pop
jge
arpl
jae
lock
int
mov
or
cmpsl
lcall
inc
mov
pop
dec
pop
data16
nop
mov
push
call
xor
cmp
mov
jnp
jbe
mov
inc
sbb
sbb
dec
push
inc
fadd
adc
sub
pushf
lret
adc
leave
dec
gs
xor
xor
jns
jecxz
aaa
jb
popa
test
test
and
fists
jg
pushf
movsl
sahf
in
mov
mov
fidivrs
mov
mov
push
or
push
dec
int3
aam
inc
inc
xor
loopne
fisubl
in
dec
dec
and
call
fwait
push
dec
add
dec
adc
cmpsb
sbb
lret
aad
dec
dec
repnz
add
add
or
rclb
mov
adc
cmp
decb
or
in
cmp
cwtl
sub
call
cmp
jns
mov
popf
adc
add
fldl
imul
js
adc
jl
push
inc
stc
out
push
mov
sub
repz
les
cmpsb
add
icebp
lods
mov
sub
dec
decl
bnd
nop
inc
or
sahf
iret
rclb
repnz
int3
xchg
movsl
xchg
dec
aaa
cmp
inc
call
lods
dec
cwtl
xchg
push
jmp
dec
repnz
xor
jb
pop
push
std
sub
inc
daa
sbb
imul
ljmp
shlb
cwtl
sti
outsb
sbb
imul
pop
push
icebp
inc
sub
and
mov
or
cmc
lods
xor
movaps
imul
dec
fs
shrb
push
mov
arpl
das
jnp
jne
ljmp
add
mov
fs
shl
sbb
cmp
or
imul
and
sub
mov
pop
into
scas
inc
insl
push
mov
adc
call
pushf
inc
mov
shlb
test
sahf
mov
imul
adc
adc
and
jno
repnz
cltd
and
cltd
pop
push
movsb
cmp
and
mov
or
arpl
lock
xlat
adcl
adc
adc
xor
cmp
lds
jp
cwtl
or
mov
mov
push
jbe
mov
add
scas
push
mov
dec
push
sub
aad
stos
inc
frstor
rcrb
insb
inc
cmp
cli
xchg
leave
add
add
ljmp
push
add
call
inc
adc
ds
dec
xchg
mov
mov
xchg
xchg
and
addr16
sub
and
out
dec
lret
jmp
xor
mov
ljmp
dec
ficompl
cmp
clc
sbb
fmul
fs
jge
add
lret
dec
xchg
out
lods
sahf
stos
in
and
pop
jl
cli
cmp
test
jmp
jle
jl
rorb
dec
jmp
jno
out
sbb
lret
lret
sub
daa
jnp
dec
insl
in
pushf
repnz
and
sub
je
sub
leave
mov
lods
idivl
sbb
push
hlt
and
ret
ljmp
jns
stos
mov
outsb
jmp
std
mov
xor
leave
ja
test
inc
add
pusha
push
xor
mov
je
push
add
sbb
or
hlt
testl
push
push
pop
jo
or
inc
xchg
out
xorl
and
fcmovnb
roll
insl
stc
jo
sbb
in
cmp
xor
gs
leave
and
fdiv
movsl
or
popa
lret
movsb
test
mov
cmpsl
fwait
neg
scas
stc
movsb
inc
idivb
mov
je
xorb
push
adc
or
jl
cld
mov
popf
leave
cmp
lahf
clc
test
fiadds
lods
sarb
cli
jg
cmp
adc
cmpsl
cmp
rorb
fs
out
mov
scas
mov
jno
je
stos
mov
push
mov
jne
repnz
sbb
adc
mov
fistps
mov
jo
pop
xchg
pop
inc
pop
mov
adc
cmp
sbb
dec
arpl
pop
xchg
cmp
and
enter
cmp
mov
rclb
xor
mov
test
or
adc
cli
xchg
cmp
out
outsb
add
rorb
cmp
int3
xor
into
popa
ret
decb
popf
nop
and
inc
jns
mov
sub
cmp
mov
loop
cmp
es
arpl
fidivs
adc
insl
inc
test
push
out
dec
xchg
stc
adc
pushf
push
or
scas
icebp
enter
aam
adc
mov
iret
lret
xor
xor
mov
shll
adc
or
leave
xor
fwait
das
jp
scas
int
mov
nop
cmp
pop
jge
mov
cli
lock
push
lock
stos
inc
inc
pop
mov
notb
add
dec
mov
pushf
sarb
push
or
mov
mov
sub
icebp
xchg
mov
mov
mov
mov
and
testb
aas
xor
stos
pusha
sbb
dec
jecxz
andb
xchg
popf
add
inc
jno
lods
xor
add
pusha
cmp
scas
fisttpl
lret
popa
xlat
dec
shl
imul
loope
xor
arpl
or
loopne
lret
or
imul
cmp
fisttps
adc
sbb
stc
lahf
test
cmp
fldcw
repnz
jae
dec
mov
pop
clc
sbb
inc
add
fs
js
add
int
aad
test
movsl
aam
out
test
movhlps
mov
data16
dec
ja
xor
xor
adc
lcall
xchg
xor
jno
test
addr16
inc
mov
mov
jb
jbe
mov
ficoms
dec
imul
dec
movl
lds
mov
jge
out
xchg
push
dec
sar
lret
mov
das
sub
push
lods
repnz
xor
lock
jno
enter
adc
insl
scas
rolb
add
iret
add
out
dec
andb
lret
addb
jge
inc
insb
stos
imulb
adc
sub
mov
mov
jecxz
xor
mov
add
mov
rol
shll
imul
fwait
sub
adc
scas
add
jge
push
rep
std
repnz
add
lret
xchg
clc
sbb
add
mov
adc
adc
push
mov
jno
mov
clc
stc
ret
mov
mov
add
imul
cld
clc
inc
xor
dec
hlt
arpl
jne
icebp
dec
pop
lods
arpl
jne
sbb
jno
lea
cmp
cltd
ret
xchg
imul
ljmp
jle
xchg
or
xor
adc
xor
aaa
mov
dec
ja
mov
fcomp
addl
jecxz
dec
push
pop
insl
shlb
add
push
inc
inc
lret
pop
and
pop
movsb
lahf
push
add
dec
arpl
xchg
repnz
lods
stos
sub
cmp
xlat
movsb
repnz
out
mov
punpckhwd
or
dec
mov
iret
add
cmp
sahf
xor
mov
loope
scas
cmp
sbb
int
and
sbb
or
repnz
push
push
stos
mov
adc
lods
idivb
jl
jb
push
test
out
sbb
or
cmp
or
es
test
insb
sbb
cmc
loope
add
jecxz
adc
outsl
sub
das
pop
mov
repnz
mov
loope
mov
and
fbld
gs
mov
xchg
cmp
sarb
xchg
lock
fistpll
or
jne
clc
shlb
mull
xlat
test
or
jge
imul
xchg
ret
fsubr
push
subb
into
or
clc
notb
and
add
or
add
enter
push
rcrb
in
and
lahf
adcl
pop
stc
and
popf
adc
mov
fnsave
adcl
popf
dec
lahf
outsb
inc
pop
inc
xchg
loope
cmp
fs
lock
or
or
stc
dec
xor
arpl
adc
mov
in
push
scas
mov
mov
mov
jnp
ret
cmp
test
dec
jbe
rolb
mov
out
cld
gs
addr16
cmp
cpuid
mov
mov
repnz
pusha
xor
subb
ljmp
mov
movsb
mov
xchg
lock
flds
movsb
test
cli
adcb
int
push
xchg
or
loope
insb
cli
dec
imul
lcall
testl
adc
jp
inc
mov
mov
adcl
dec
mov
outsb
push
fidivrl
enter
loop
cld
iret
and
ljmp
imul
sbbl
add
out
notl
or
sub
or
push
inc
xor
mov
xchg
je
or
fwait
divb
icebp
jno
mov
jle
call
stos
adc
cmp
inc
jo
fcoms
cmpsb
inc
xchg
fstps
cld
idiv
adc
ret
leave
and
stos
int3
repnz
dec
cld
repz
cld
sarb
add
lods
mov
divb
jae
xor
sbb
ljmp
xor
outsl
pop
lods
xchg
inc
stos
repnz
stos
inc
sarb
test
aaa
pop
bound
lods
popa
aam
dec
shlb
insl
arpl
aaa
cmp
lods
mov
jl
aas
cmp
jb
inc
imul
movsl
daa
fildl
pop
lock
add
enter
pop
arpl
mov
movsb
adc
mov
mov
push
adc
in
pushf
push
add
sbb
repnz
and
sub
dec
cld
mov
sbb
call
insl
jns
scas
leave
mov
xor
or
cmp
push
or
adcb
lods
adc
cwtl
insl
fisubs
sub
xchg
pop
faddl
mov
sbb
icebp
test
clc
mov
or
mov
mov
stc
adc
jecxz,pn
mov
sub
xchg
xor
mov
push
jecxz
pop
mov
cli
sar
call
sbb
ret
or
inc
jb
dec
imul
inc
repz
mov
dec
mov
mov
and
cmp
sahf
push
xchg
sahf
iret
xor
lahf
xor
fidivl
mov
jmp
cmp
adc
insl
insl
jne
add
mov
jno
add
sbbl
iret
cltd
xchg
cmp
dec
stc
test
xlat
fldenv
xor
fcomip
mov
dec
fistpll
mov
mov
lods
xor
ds
test
fdivs
nop
fiaddl
lahf
adc
lcall
cmp
movsb
sbb
shlw
cmova
fs
inc
inc
cli
mov
fisttpl
les
test
jp
das
addr16
js
icebp
inc
bound
pop
sub
cld
pop
outsb
push
push
inc
mov
or
sbb
aaa
icebp
push
xor
and
lcall
mov
iret
cmp
out
sub
mov
shlb
xor
stos
push
mov
sub
daa
add
in
push
pop
loopne
subl
repz
loope,pn
add
sbb
iret
test
mov
std
mov
push
pop
mov
pop
arpl
jne
fisubrs
es
hlt
ds
mov
push
mov
xchg
in
mov
insb
adc
jae
mov
mov
gs
push
inc
cmp
sbb
movsb
into
mov
imul
bound
mov
sub
shlb
fs
sbb
nop
inc
and
aaa
mov
sbb
pop
stos
je
loope
jo
mov
push
arpl
mov
fimull
mov
repnz
mov
in
std
imul
dec
cli
int
imul
popa
xor
adc
fisubl
push
jae
xchg
jecxz
imul
add
mov
inc
jl
dec
cmp
and
test
hlt
in
scas
fcmovb
or
or
adc
popf
push
lock
or
test
lret
imul
xor
rcll
and
jbe
xchg
jne
lcall
or
sbb
fdivp
mov
push
incl
mov
xor
jns
mov
decb
cli
and
pop
loopne
cli
jg
and
addr16
ljmp
mov
mov
aas
gs
push
pop
cmp
adc
arpl
ljmp
and
mov
shlb
and
testb
loopne
in
add
dec
sbb
sbb
jl
xchg
xchg
mov
pop
mov
lock
fidivs
push
jge
inc
inc
and
adc
push
jae
adc
cltd
out
fsts
push
or
sar
ret
sbb
iret
dec
test
cmp
repnz
cmp
outsb
cli
insl
loope
mov
dec
fbstp
frstor
mov
push
xor
movsl
test
testl
repnz
roll
test
mov
or
push
jp
pop
data16
dec
pop
scas
or
stos
insl
cmp
jb
stc
sbb
cli
fs
pop
ss
out
addr16
cmpsl
mov
aas
xor
loop
dec
pop
imul
adc
cld
mov
pop
cltd
sahf
sbb
loope
push
push
out
and
out
insb
dec
jno
mov
sbb
xchg
lock
push
inc
pop
add
dec
xchg
notb
ret
cmp
cs
popa
mov
sub
cwtl
pop
fwait
aad
inc
jecxz
out
jb
adc
movsl
xchg
ss
xchg
or
dec
fisttpll
xor
cmc
and
push
xlat
rorb
lods
jl
stos
jge
jmp
decb
out
into
lcall
aam
and
mov
cmp
xor
add
sub
pop
sti
adc
sub
xchg
pop
loop
inc
rcll
test
adc
lcall
push
imul
push
adc
jge
lahf
jp
loopne
test
pop
push
pusha
sbb
cmp
lcall
push
inc
cmp
sbb
loopne
adc
dec
sbb
or
lret
mov
clc
fisubrl
mov
shl
scas
jl
cmp
rcr
inc
cmp
cli
outsl
adc
mov
cmp
cmp
idiv
ss
movsl
aad
inc
add
out
nop
xchg
dec
push
pop
sub
ret
ds
lods
rcr
mov
cmp
mov
or
cmp
push
ljmp
sbb
mov
outsb
mov
cmp
pushf
or
push
lea
inc
xchg
stos
push
xchg
inc
lock
lods
cmp
mov
add
lcall
and
cmp
adc
in
aam
fucom
push
cmp
lret
mov
or
aam
into
arpl
mov
xchg
sbb
sbb
jecxz
sub
mov
push
stos
scas
test
ret
in
popa
push
cld
xor
mov
pop
lds
insl
ret
enter
xchg
add
ja
push
mov
loope
loop
push
dec
dec
xchg
adc
mov
jmp
adc
add
mov
inc
jno
mov
jp
pop
and
xchg
jo
sbb
sbb
testl
arpl
lcall
pop
mov
add
mov
pop
daa
pop
jns
cmpsl
mov
lahf
loopne
sbb
and
ret
aam
jno
dec
je
pushf
add
sarl
sbb
imul
pusha
cli
lods
shll
in
pusha
ja
inc
imul
ret
push
xor
cmp
pop
sub
add
add
xor
bsf
mov
lret
lock
aaa
clc
or
shl
loopne
adc
xor
mov
or
jl
lret
mov
mov
stos
push
sbb
rcrb
js
adc
or
popf
call
or
sti
gs
or
stos
xchg
jne
jo
mov
idivl
mov
mov
pushf
lods
ja
mov
xchg
xor
dec
cmp
outsb
test
sahf
mov
popf
iret
and
adc
fs
mov
orl
push
dec
cmp
mov
filds
int
xorb
call
jle
add
test
dec
xchg
add
es
imul
or
and
adc
push
push
jl
movsl
outsb
xor
repz
outsb
cmp
adc
mov
push
push
or
in
push
insb
dec
cmc
dec
jns
std
mov
inc
js
mov
pop
into
pop
rorl
jne
je
test
sub
dec
jno
ja
in
xchg
jne
add
inc
mov
repnz
in
mov
cmpb
xchg
jb
mov
and
push
mov
cmc
ljmp
and
push
xor
or
cmovne
decl
sub
shll
or
popf
repnz
es
cmpsl
inc
adc
mov
lahf
adc
out
mov
mov
nop
push
jp
adc
clc
adc
add
popf
xor
rcr
jp
insb
adc
fs
mov
sbbb
adc
fwait
arpl
dec
jns
mov
and
ja
idivb
mov
fnstsw
cs
std
fs
test
mov
pop
adc
pop
inc
lret
out
inc
loope
adc
imul
xor
mov
data16
pop
mov
or
cmp
adc
inc
xchg
jb
mov
roll
xchg
or
inc
dec
add
idivb
mov
cmp
lock
cmp
xor
addr16
jbe
call
scas
pushf
jno
push
inc
and
xor
xchg
sbb
push
imul
xor
scas
lods
mov
xlat
insl
imul
movsl
or
lods
testb
xor
xchg
insl
imul
rol
test
rolb
lods
subb
arpl
aas
push
mov
lret
cltd
aad
mov
xor
scas
lahf
sahf
loope
xchg
mov
std
sbb
fcmovnb
xor
add
push
pop
adc
mov
outsb
insb
dec
testl
adc
inc
dec
mov
mov
add
or
and
icebp
pop
clc
jg
pop
xchg
and
imul
jnp
or
xchg
cld
cmp
cmp
inc
push
xor
hlt
cmpsb
shrb
cmp
sub
pop
out
inc
sti
push
loope
test
xor
add
insl
cmp
xor
mov
pop
sahf
nop
or
push
test
repnz
pop
add
dec
mov
dec
fs
adc
aad
or
sbb
movhlps
dec
adc
ljmp
and
ror
dec
push
pushf
mov
pop
xchg
cmp
jns
mov
push
clc
mov
sarl
inc
xchg
loope
xchg
jge
leave
adc
test
in
mov
lea
jmp
incl
js
mov
sarb
inc
sub
mov
dec
loop
inc
xor
sbb
in
ljmp
add
mov
pop
inc
repnz
je
xor
jo
sub
sub
dec
or
int3
loopne
sub
sub
imulb
movsb
xor
or
pop
and
sub
test
testb
xchg
adc
jne
dec
in
xor
lods
jo
stos
xchg
jnp
arpl
shlb
call
mov
dec
mov
notl
cmpsl
test
rorb
mov
sbb
pop
jbe
fdiv
add
pop
adc
mov
cmp
push
sub
adc
push
mov
sarb
pop
vunpckhpd
jmp
test
loope
mov
cs
mov
pop
int
ret
das
cmp
jl
jo
les
push
sbb
rcll
stc
push
jo
jno
xor
push
pop
pop
xchg
mov
jl
mov
jne
push
jae
xor
dec
push
incl
dec
mov
andps
leave
lds
outsb
mov
cmp
push
and
mov
lods
mov
inc
adc
push
in
dec
repnz
fdivrs
je
jmp
test
in
js
and
shll
or
adc
int
jecxz
test
push
jo
scas
scas
add
lock
sti
cld
fldl
idivl
aas
dec
cmc
adc
adc
jo
fs
insl
out
dec
or
bnd
mov
sti
xchg
sub
fimull
xor
imul
adc
cli
cld
dec
imul
dec
push
cmp
xlat
bound
sbb
out
cmpsb
mov
push
or
dec
xor
cmp
jge
mov
mov
cmp
shll
xor
inc
mov
bound
popf
jae
scas
bound
mov
ds
cmp
and
adc
mov
test
xor
rcl
sbb
lret
mov
fdiv
and
lock
jp
xor
mov
inc
lock
mov
inc
xorl
dec
dec
shlb
push
mov
cmp
stos
andl
idivb
int3
fidivl
lods
addr16
daa
or
xor
add
push
imul
sahf
jbe
inc
pop
cmc
xchg
loop
in
xlat
outsb
repz
scas
repnz
stos
arpl
jns
or
cmp
xor
mov
mov
mov
movsl
mov
pop
nop
movsl
sbb
mov
add
subl
xchg
cmp
sub
xchg
in
jo
pop
popa
jo
fs
and
fs
mov
inc
lahf
mov
sbb
ss
xor
add
or
mov
adc
addr16
xlat
movsl
mov
jl
daa
mov
xor
test
mov
inc
xchg
pop
jae
mov
pop
stos
loope
rcrb
adc
and
mov
dec
and
sbb
dec
call
mov
aam
std
std
daa
adc
mov
xor
clc
loop
daa
mov
dec
imul
popf
xor
ljmp
push
iret
mov
fisttps
roll
sub
mov
inc
mov
and
sub
xor
xor
and
rolb
ljmp
jecxz
mov
sti
cwtl
jl
xor
pop
mull
or
push
push
push
jb
div
mov
fs
add
insl
pop
sbb
fxch
scas
shl
mov
imul
sarb
jae
jae
cmp
in
sub
cmp
imul
dec
mov
mov
mov
mov
jae
movsb
pop
adc
xor
aaa
mov
push
pop
or
pop
repz
arpl
and
adc
mov
add
pop
mov
mov
sbb
pop
sub
adc
mov
je
loope
push
sbb
cwtl
repnz
cmp
add
mov
aaa
cmp
inc
in
data16
mov
adc
push
sahf
and
int3
or
or
mov
and
frstor
mov
in
sub
mov
jl
sub
inc
cmpsb
adc
push
lahf
popl
gs
scas
xchg
arpl
jp
hlt
adc
hlt
jp
enter
push
or
movsb
sahf
sarb
fisttps
addr16
push
adc
enter
mov
jnp
jno
mov
dec
repnz
fwait
cltd
sbb
icebp
inc
inc
rcrl
pop
dec
jne
xor
and
jge
or
cmp
xchg
mov
fs
aad
ja
cmp
dec
sub
lea
jo
mov
imulb
mov
cltd
mov
pop
mov
add
push
inc
sbb
mov
sbb
mov
hlt
testb
data16
mov
lret
paddsw
nop
adc
divb
stos
popa
add
or
cmp
movsl
mov
pushf
pop
fsqrt
stos
out
mov
mov
hlt
xchg
cmp
xor
mov
out
mov
loope
lods
pshufw
mov
rcll
lods
xchg
les
fcmove
mov
cmc
inc
out
leave
test
xor
stc
sub
fwait
mov
adc
dec
add
and
sahf
leave
or
adc
fxam
and
pop
adc
pop
or
imul
push
mov
mov
push
mov
sbb
inc
cmp
adc
divb
fwait
test
repnz
popa
stos
aaa
mov
lea
pop
add
sbb
mov
dec
das
lods
mov
test
xchg
lock
insl
sub
lods
adc
data16
jnp
inc
insb
mov
cmp
pop
jle
or
test
jp
push
pop
pop
jbe
outsb
test
sub
leave
jo
push
mov
jge
stos
fidivl
xor
pusha
cmp
push
sub
inc
sub
in
pop
cmp
mov
push
sahf
filds
push
shlb
inc
push
adc
mov
adc
enter
popf
sti
fs
icebp
inc
mov
in
dec
mov
ret
lods
jl
outsl
cli
in
aad
rcl
mov
mov
loope
mov
ja
mov
aas
xchg
repz
mov
or
jns
data16
pop
xchg
and
xchg
xchg
sub
loop
push
pop
testl
xchg
sub
adc
icebp
insl
push
xorb
repz
push
ret
dec
test
mov
fwait
xchg
ja
rcll
daa
movsb
imul
mov
dec
je
or
call
xor
adc
push
ljmp
aas
fdivl
sbb
xor
or
outsb
mov
adc
add
xor
mov
xchg
test
stos
push
inc
dec
lods
adc
repnz
dec
jl
inc
outsl
lahf
lea
stos
or
jge
dec
mov
dec
mov
add
adc
outsb
pop
mov
mov
xchg
cmp
sti
ja
jp
xchg
repnz
divb
lret
adc
jle
sub
jp
iret
jl
mov
mov
cmpsl
xchg
xor
xchg
xchg
push
sbb
xchg
push
into
sbb
sbb
mov
mov
and
call
mov
or
scas
iret
xchg
les
mov
repnz
pop
push
cmpsl
dec
adc
xchg
movsl
jb
push
movsl
or
popf
mov
xor
pop
lret
push
adc
xchg
cmpsl
xor
push
pusha
xor
adc
stc
adc
push
cmp
insl
xlat
repnz
ret
sahf
push
xchg
cli
add
jg
pop
ret
mov
jg
dec
push
xor
enter
scas
sbb
mov
int
pop
in
cs
sbb
filds
arpl
scas
xorb
movsl
stc
xlat
in
xchg
mov
pop
pop
dec
inc
push
dec
repnz
mov
lods
adc
icebp
xchg
in
test
into
ss
mov
ret
cmp
push
sbb
push
test
and
jecxz
push
or
sahf
and
insl
cmpsl
pop
not
mov
cmp
mov
ss
mov
inc
xor
inc
mov
ret
jmp
mov
mov
addr16
daa
dec
pushf
push
add
data16
and
and
call
insb
fisubs
mov
cmp
js
dec
hlt
or
test
stos
mov
pop
outsl
repnz
sbb
scas
sbb
adc
and
push
push
pop
xchg
fdivrl
xchg
and
lock
outsl
sub
mov
fwait
pop
icebp
cld
in
adc
xor
fs
cld
cli
jge
inc
xchg
movsl
bound
sbb
stc
ret
rcrl
dec
std
scas
repnz
xor
mov
mov
std
insb
loopne
cs
popa
hlt
testb
and
cltd
fwait
mov
inc
add
out
aaa
jno
adc
cld
aas
outsl
int
div
cmp
decb
insb
push
cmp
xor
lea
cmp
andl
push
ja
jl
sti
dec
adc
fisttpll
mov
outsl
lods
dec
jne
jbe
mov
mov
xchg
das
leave
nop
shlb
adc
std
cvttps2pi
aaa
push
mov
scas
cmp
mov
addl
std
and
mov
xchg
daa
mov
jl
stc
inc
add
sarl
lods
clc
imull
jecxz
sar
inc
sti
add
or
xchg
lret
dec
cwtl
pushf
adc
jns
adc
insl
movsl
mov
and
mov
in
dec
cltd
pop
sbb
xchg
les
adc
cmp
jp
push
sub
dec
or
pusha
lock
push
nop
ret
fs
mov
mov
iret
dec
adc
mov
mov
popa
mov
dec
cli
dec
mov
xor
testb
lret
xor
fcompl
loopne
and
mov
adc
fcmovnbe
mov
adc
push
stos
dec
mov
lods
xor
ljmp
and
adc
mov
lock
test
loopnew
arpl
mov
lret
sbb
ret
and
sub
jne
loop
xchg
repnz
cmp
xchg
sbb
rcrb
lret
nop
inc
mov
ja
xlat
cli
arpl
mov
xor
and
and
lods
pop
leave
pop
xchg
stos
test
jp
out
push
addb
dec
cmp
cmp
iret
push
pop
and
sub
cmp
lods
sar
cmpsb
sti
cmp
gs
mov
and
mov
lret
lcall
insb
es
adc
gs
xor
push
mov
inc
mov
hlt
mov
cmp
mov
fdivrp
lret
cmc
arpl
nop
fisubl
jle
dec
sub
leave
sbb
clc
cmp
mov
or
push
insb
adc
out
repnz
sub
or
mov
movsb
mov
fildll
sbb
pop
dec
or
repz
jecxz
iret
mov
mov
call
loop
and
push
or
add
or
jg
rcrl
loopne
cmp
nop
loope
cmpl
add
xor
lahf
push
in
aaa
cmp
sarw
pop
sub
inc
fildl
pushl
inc
cmc
shl
mulb
bound
in
sub
jecxz
lea
push
rcr
std
sbb
mov
out
cmp
pop
cmc
pop
inc
mov
sbb
sub
loope
xor
mov
or
dec
xor
subb
push
sub
sub
repnz
push
aaa
test
or
and
data16
lcall
stc
xorb
push
mov
lods
mov
movsb
add
dec
cltd
push
jg
cmc
xor
xchg
insl
incl
rcl
or
xor
adc
dec
mov
pushf
es
push
popf
dec
stos
outsb
adc
or
movsb
ja
insb
stc
adc
bnd
in
lcall
sub
andb
push
mov
cmc
and
cmp
dec
jle
push
dec
lds
push
jns
push
lcall
lock
rcrb
dec
ret
repz
stos
out
repnz
int
adc
or
jb
aaa
push
push
clc
mov
pop
ret
sub
mov
push
clc
xlat
in
lcall
push
ss
sbb
inc
jecxz
int3
xchg
negl
sub
xor
sbb
cmp
sbb
adc
xor
xchg
xchg
out
ret
mov
scas
push
call
xchg
or
mov
inc
emms
jp
std
in
loope
roll
dec
in
mov
inc
insb
popa
int3
xor
frstor
divb
sub
sub
mov
loop
jmp
adc
sbb
and
insb
clc
mov
dec
mov
mov
push
mov
xchg
cmp
iret
imull
stc
xlat
dec
js
aaa
cmp
inc
fbstp
ret
data16
icebp
repnz
mov
in
mov
add
or
dec
imul
mov
popa
in
pop
fistpl
sbb
xchg
repnz
mov
push
loop
arpl
mov
and
nop
icebp
outsl
or
je
mov
int
jge
iret
outsl
sub
pop
lahf
test
shlb
out
scas
arpl
cmp
lods
fs
xor
mov
sub
or
push
push
xchg
mov
imul
js
fnstsw
movsl
sub
xor
mov
insl
stos
adc
cld
jl
jmp
dec
pop
pop
sbb
pop
mov
icebp
mov
insb
or
fildll
shll
sbb
adc
mov
bound
pusha
or
pop
adc
dec
pmuludq
dec
xchg
add
aaa
jmp
push
sub
and
mov
pop
fnsave
xor
insb
xor
dec
int3
adc
xor
stos
mov
pushf
in
xor
push
and
and
lret
push
or
sub
popa
ds
imul
test
inc
test
mov
push
pop
fs
xchg
pop
push
movsb
movsl
jne
rol
jmp
idivl
mov
xchg
nop
movsl
xchg
clc
xchg
or
test
xlat
sbb
divb
add
sub
dec
clc
mov
cmc
imul
and
lods
outsb
jbe
cmpl
push
and
daa
fwait
rorl
push
sbb
add
cld
outsl
aaa
jge
shl
push
bnd
pop
xor
xchg
fcompl
and
cld
sbb
push
das
popa
shlb
jmp
mov
dec
adc
inc
lret
out
fsts
movl
jecxz,pt
cli
shlb
sbb
mov
fmul
mov
cmp
sbb
jbe
iret
roll
mov
mov
pop
jo
mov
dec
test
imul
xor
xor
push
xor
pop
push
in
out
mov
daa
xor
dec
mov
cmp
push
add
mov
sub
and
fidivrl
jb
rolb
xor
sbb
adc
mov
lea
mov
je
xchg
nop
fistps
jle
andnps
das
mov
clc
out
popa
dec
es
pop
mov
je
inc
loopne
out
in
jo
mov
lcall
lret
sbb
xchg
loopne
insl
test
je
sbbl
pop
ja
imul
sbb
les
and
xor
into
rorb
pop
adcb
lret
mov
adc
push
mov
adc
repnz
cltd
enter
dec
mov
and
and
or
adc
hlt
pushf
lcall
loope
jns
aam
adc
daa
hlt
out
clc
mov
push
sbb
sub
stos
fs
repnz
jp
sub
mov
in
negl
adc
stos
inc
mov
pushf
lods
mov
inc
ret
sbbl
outsl
jg
rcrb
xchg
sarb
jl
mov
movsl
pop
push
push
mov
adc
out
loopne
stc
test
sbb
xor
dec
out
pop
sbb
sub
fsubrs
fwait
xchg
push
cli
popf
jmp
sub
cmp
test
test
mov
ja
insl
pop
hlt
loop
mov
dec
jl
add
adc
push
inc
cmp
inc
or
scas
loop
gs
andb
adc
inc
test
call
sbb
jl
sbb
and
dec
test
or
inc
or
jnp
nop
roll
cmp
stos
mov
jl
stos
fildll
push
test
jmp
push
jl
repnz
std
test
jg
sahf
jecxz
in
push
mov
daa
push
jmp
or
jg
xor
notb
nop
and
daa
cmp
or
mov
je
mov
add
push
push
sub
and
loopne
xor
sar
add
mov
xchg
sub
cld
mov
leave
push
lea
adc
jge
stc
mov
cmp
sbb
fwait
adc
call
jp
adc
or
idivb
sub
loope
stos
nop
adc
mov
aad
jmp
mov
mov
adc
pop
and
mov
sbb
test
std
outsb
stos
add
xor
jle
int3
aam
adc
inc
mov
pop
in
jo
mov
lahf
dec
mov
or
dec
cmp
lock
mov
repnz
pop
lock
dec
arpl
out
dec
mov
cmp
rorb
rclb
cmp
jne
cs
movsb
cmpsl
lahf
cld
dec
xor
jl
loopne
jecxz
nop
pop
stc
cwtl
pop
gs
xchg
and
ja
adc
jle
push
pop
mov
loopne
fldt
repnz
pop
test
aam
repnz
negl
sub
stos
jns
shlb
lods
pop
xchg
jae
stc
xchg
xorb
ret
mov
or
add
gs
jne
insl
sbbl
insl
pop
mov
dec
mov
rcl
inc
sbb
lret
mov
popa
mov
in
mov
pop
dec
mov
loope
cmp
push
fdivl
mov
fisttps
inc
mov
popf
ss
cmp
sub
insb
adc
insb
xchg
movsb
adc
push
mov
sarl
xchg
rolb
repz
mov
and
es
jns
cli
cmp
mov
jle
dec
bound
stos
test
inc
and
pop
mov
das
movsb
addl
pop
or
mov
cli
rcll
mov
mov
inc
loopne
in
fs
nop
or
mov
stc
pop
push
ja
out
push
dec
lods
adc
adc
xchg
shll
test
xchg
in
icebp
adc
test
xchg
sbb
rorl
cli
es
dec
iret
lret
push
and
mov
and
push
loop
mov
cwtl
mov
gs
sar
adc
jae
pop
xchg
fs
js
not
mov
inc
xor
mov
inc
test
sti
stc
sub
int
jbe
sub
cwtl
jae
or
lods
test
jge
adc
imul
loopne
leave
faddl
ljmp
lahf
push
mov
dec
sbb
cli
mov
mov
stos
mov
dec
xchg
jo
aas
icebp
push
scas
icebp
loope
dec
push
sbb
adc
sbb
dec
xchg
dec
xchg
out
cmpsl
jp
fildll
push
push
inc
js
imul
int
sbb
lds
lock
pushf
add
movsl
outsl
aas
out
ret
in
outsl
push
dec
inc
mov
dec
xchg
sbb
xchg
jo
adc
pop
mov
ss
sbbl
pop
and
in
push
jecxz
ds
adc
data16
jp
ret
test
jbe
pop
arpl
mov
push
test
and
push
jbe
jae
xlat
mov
lret
mov
inc
test
mov
sub
or
pop
inc
push
pop
xchg
mov
sbb
adc
cmp
int3
repz
inc
pop
adc
dec
sbb
shl
pop
push
or
mov
lcall
das
cmp
jge
inc
aam
div
and
stos
sub
mov
lock
dec
cli
sbbl
mov
insb
stc
dec
jno
pop
mov
sub
dec
push
test
cld
cmpsl
rol
lret
push
mov
dec
push
and
inc
mov
sub
or
jecxz
sbb
xchg
pop
jb
inc
mov
mov
mov
push
sub
pop
mov
xor
pop
xor
push
push
stc
mov
rclb
shll
movsl
pusha
and
mov
ficoml
movsl
arpl
mov
dec
xor
out
push
cmp
repnz
outsl
sub
add
xor
cmp
or
pop
mov
xchg
mov
rorl
push
xor
mov
adc
ficomps
in
mov
sbb
xchg
arpl
scas
xchg
mov
aaa
arpl
std
mov
sbb
ljmp
sub
inc
jg
xchg
repz
cli
stos
mov
and
lods
or
cwtl
shlb
mov
fisubrl
popw
mov
test
add
lods
dec
loope
in
je
adc
in
loopne
lcall
or
insl
xchg
outsl
cmpsl
cmpsb
icebp
xorl
xor
fs
lcall
push
sub
sarb
jge
loope
push
mov
cmpsl
sub
mov
xchg
xchg
inc
lods
lret
das
adc
jp
pop
cwtl
and
call
adc
ds
ljmp
push
mulb
add
aaa
cmpsl
push
pop
movsl
mov
movsb
mov
repz
iret
pusha
in
rolb
lret
push
mov
nop
test
and
aaa
push
fdivl
inc
rorb
aaa
mov
orb
dec
mov
mov
dec
and
insl
in
repnz
inc
mov
jbe
adcb
dec
addr16
cmp
mov
mov
nop
jbe
ret
mov
adc
lods
cmpsb
test
rcll
pop
inc
mov
rorb
repnz
xor
nop
mov
xchg
fadds
pop
leave
shll
les
in
jno
adc
jg
mov
xchg
xor
sub
jecxz
xor
std
xor
push
subl
aam
sahf
subl
punpckldq
lock
mov
aas
sbb
adc
ss
pop
push
fs
push
jbe
push
aaa
adc
jno
sub
sub
mov
mov
sar
adc
hlt
lret
nop
nop
popa
js
push
lret
lods
out
stc
jns
repnz
inc
mov
push
lock
cli
add
pop
inc
push
push
decb
mulb
inc
mov
adc
pop
addr16
movsl
cmp
imul
pop
xchg
enter
inc
mov
jp
xor
or
push
in
jg,pn
out
dec
jo
and
std
imul
jge
and
jb
insb
add
ret
mov
jecxz
xor
xlat
lahf
in
push
mov
mov
mov
jmp
mov
sub
cmpb
or
inc
fistps
sbb
mov
mov
and
push
shll
ret
mov
outsl
fisubl
lahf
adc
fildll
scas
loope
sti
orb
movsb
mov
dec
xchg
xchg
jae
in
push
and
pop
outsb
les
mov
call
fists
add
sub
ja
out
pop
mov
and
ds
pop
adc
mov
insl
pop
cmp
test
adc
cld
xchg
mov
inc
sbb
xchg
mov
xchg
or
leave
ljmp
popf
ljmp
jae
mov
xlat
adc
cmp
cli
adc
popf
lret
inc
mov
adc
or
xor
add
pop
int3
jge
shlb
mov
lea
add
mov
pop
pop
push
shlb
loopne
cmc
sahf
xor
push
xor
dec
jb
mov
sbb
push
loope
jmp
mov
dec
push
jl
in
sub
testb
rcr
aaa
mov
lcall
pop
lahf
ret
mov
movsl
cli
dec
pusha
push
rcrb
push
fs
xchg
cmc
mov
je
adc
fnstsw
fstps
sub
das
test
pop
insb
adc
enter
jo
dec
aaa
cld
ja
scas
inc
cli
xor
test
fisttps
cmp
rolb
mov
mov
adc
scas
mov
adc
sbb
and
fcmove
aaa
push
outsb
cmc
bound
in
fucomi
mov
cmp
fwait
inc
fiadds
mov
lret
in
mov
rorb
lods
ret
cmp
and
cwtl
or
xor
mov
stos
jl
ficomps
mov
inc
xlat
addr16
push
clc
and
sub
lods
push
fs
fbstp
cmp
testl
pop
inc
aaa
outsl
or
or
mov
push
in
adc
pop
fisttpl
jg
inc
fxch
mov
out
repnz
scas
or
ret
outsl
inc
sub
shll
jl
push
gs
adc
and
imul
int3
dec
stc
nop
imul
cld
call
push
adc
adc
or
repnz
mov
mov
lret
test
les
and
sub
repz
cwtl
xor
dec
mov
sbb
and
cmpsl
negb
scas
jecxz
call
dec
xor
imulb
test
mov
adc
or
sbb
in
adc
sub
adc
icebp
cmc
or
dec
stos
jecxz
pop
mov
sbb
sub
into
scas
xor
dec
mov
stos
test
or
mov
clc
fimull
test
inc
repnz
popa
inc
roll
add
and
mov
jge
pop
mov
fwait
mov
sbb
pop
add
jne
in
add
out
adc
shl
movups
add
sub
jecxz
cmp
jno
insl
pusha
and
jg
sbb
pushf
push
and
xor
adc
xchg
mov
pop
add
pop
scas
stos
popf
and
mov
test
jno
in
or
mov
addr16
pop
add
repnz
test
adc
movsb
fldenv
or
mov
cmp
ss
push
fiaddl
inc
pop
push
sarb
xchg
jo
sub
xor
xor
push
dec
xchg
xchg
imul
mov
mov
setae
sub
inc
arpl
dec
lahf
add
shrb
mov
ficomps
mov
add
and
adc
cmpsl
fildl
repz
mov
xchg
insb
adc
out
xchg
filds
bound
xchg
sbb
test
mov
inc
mov
dec
sub
test
sub
int
mov
sbb
data16
dec
inc
dec
pop
into
outsb
xor
sbb
and
outsl
cmpb
insl
add
icebp
das
sarb
dec
cld
insl
mov
inc
xor
leave
xchg
stos
std
popf
and
insb
or
negb
fsubr
cltd
jb
sbb
adc
mov
push
sbb
xchg
movsl
xor
insl
add
adc
or
lahf
sahf
clc
movsb
xchg
arpl
cmp
or
lods
pusha
and
jge
inc
jae
inc
adc
or
adc
mov
out
mov
lock
cli
inc
fldcw
sbb
push
cmp
or
mov
loop
jmp
adc
push
lods
jle
call
inc
xchg
push
sbb
mov
xor
xchg
mov
icebp
les
xchg
leave
scas
add
pop
push
mov
fidivs
xor
lahf
fnsave
imul
mov
dec
cmp
add
imul
sub
ljmp
ss
dec
pop
movsl
fildl
sub
enter
lcall
out
sbb
lea
sbb
mov
and
popa
or
xchg
js
dec
lock
pop
lods
mov
data16
inc
xchg
adc
js
in
mulb
sbb
das
ficompl
mov
shrl
mov
cmp
pop
flds
jl
cmp
in
mov
push
repnz
xchg
sub
popa
mov
vmwrite
mulb
repz
clc
andb
int3
xchg
push
enter
or
enterw
push
insl
mov
aam
bound
iret
push
dec
lods
sub
movlps
leave
je
jecxz
jg
icebp
adc
mov
cld
mov
inc
cld
test
lret
sub
adc
or
clc
mov
jae
aad
leave
fs
pop
add
loope
jno
or
mov
sub
mov
mov
aas
popf
push
out
imul
cmp
mov
mov
repnz
add
dec
mov
adc
in
gs
cmp
fldl
rcrb
test
xor
das
movsb
shlb
cld
mov
sbb
cmp
imul
push
mov
rcrb
adc
repnz
repnz
mov
push
stc
je
test
xor
stos
int
popa
mov
mov
pop
lods
pop
pop
xor
mov
cmp
or
cmp
scas
sub
sub
xlat
pop
gs
pushf
push
adc
lods
popf
rorb
inc
adc
in
mov
ret
mov
ffree
sub
nop
mov
jmp
sti
add
iret
out
sub
adc
fistl
jns
adc
shrl
subl
cmp
loop
sahf
cs
jl
dec
jo
jmp
in
popf
mov
aas
cwtl
jo
lock
and
add
lcall
sbb
sub
or
repnz
rclb
popa
pop
notb
fadds
aad
stc
xchg
iret
mov
pop
shll
mov
dec
adc
add
icebp
fidivrl
lock
push
jmp
sub
cli
divb
mov
fmul
jno
inc
incl
lahf
cmc
jle
add
loopne
ja
inc
jl
sub
lret
outsb
popa
dec
testb
filds
cmp
mov
mov
push
in
cltd
xor
jns
mov
xchg
mov
dec
inc
xlat
cmp
adc
enter
ja
cltd
mov
sbb
cmc
adc
fwait
add
xor
sbb
imul
jno
sbb
ljmp
imul
cmpsl
addr16
adc
sahf
outsl
ss
and
sbb
daa
outsb
push
repz
add
mov
or
orb
mov
cmp
push
fimull
pop
pop
pop
andb
cltd
scas
int
push
or
sbb
fldcw
mov
rclb
sbb
sbb
cmp
and
sbb
push
sbb
pop
bound
adc
jo
mov
shr
bound
or
rcl
out
mov
jno
adc
sbb
leave
in
jo
mov
ljmp
outsb
icebp
lods
lods
add
mov
pop
and
push
mov
outsb
call
rolb
dec
mov
fs
mov
adc
inc
sbb
imul
dec
gs
out
sbb
outsl
pop
sbb
and
mov
or
hlt
mov
jo
and
add
mov
syscall
adc
outsb
addb
daa
aam
adc
sbb
add
jo
pop
adc
mov
pushf
adc
push
and
scas
mov
add
imul
add
data16
push
outsb
cmp
push
mov
popf
adc
adc
sbb
push
imul
enter
and
call
mov
mov
add
adc
push
add
mov
sbb
dec
xor
in
jno
inc
pop
sbb
inc
pop
or
or
xor
and
stc
mov
pop
adc
and
sub
sub
int
mov
pop
and
push
sub
cmc
lret
mov
std
dec
dec
unpcklps
and
out
jl
and
mov
jge
je
popa
sub
sub
incl
addr16
jbe
mov
in
adc
iret
mov
push
lock
mov
in
or
lahf
push
lret
fucom
lock
mov
imul
fisttpl
lahf
pushf
ss
xor
and
push
jb
jmp
call
rclb
dec
dec
fcomps
pop
xchg
sbb
in
jns
aas
fs
in
mov
jns
dec
insb
outsb
adc
lret
xchg
sbb
data16
movsb
cmpsb
sub
mov
dec
add
jne
ss
xchg
xchg
rolb
jp
adc
pop
cmp
jmp
negb
mov
xchg
dec
or
jae
fdivs
lods
iret
gs
outsl
rorb
inc
xchg
outsl
cli
cmpsl
xchg
mov
inc
test
cmp
mov
mov
scas
ret
fisttps
add
fs
daa
insb
mov
dec
pop
test
inc
ret
adc
xchg
mov
fidivrs
push
adc
shrl
rorb
pop
mov
jo
and
int3
sbb
and
pusha
imul
lods
lss
rolb
jnp
push
sbb
cmp
std
pop
jbe
lods
rclb
sbb
testb
mov
mov
push
mov
les
sbb
add
mov
es
sub
and
mov
or
sub
test
movsb
into
test
dec
addr16
movsb
ss
lods
nop
sahf
cmp
das
add
push
imul
cmp
mov
in
shrl
imul
mov
popf
bound
test
cmpsl
or
add
pop
popf
or
mul
rorb
aaa
sti
and
shrb
daa
adc
movb
dec
push
pusha
and
fcoms
adc
lret
js
adc
jae
dec
cltd
jno
out
cltd
push
sbb
adc
and
stc
ja
mov
inc
cmp
adc
repnz
cmc
or
pop
subb
jl
sbb
icebp
js
mov
xchg
stos
push
mov
mov
stos
xchg
xor
xchg
sbb
jmp
mov
or
movl
xchg
popf
dec
ljmp
xchg
and
push
lds
or
or
loope
mov
fbstp
incb
dec
repnz
adc
cltd
mov
adc
pop
pop
mov
movsb
mov
insl
lret
xchg
and
int3
fdivp
testl
push
std
stos
mov
xor
imul
push
mov
ret
stc
mov
adc
incb
in
jmp
shl
leave
inc
or
repnz
enter
icebp
xchg
call
cmp
pop
addr16
arpl
imul
ret
decl
xlat
pop
pop
aaa
jmp
fnstsw
lods
popa
cmp
jge
sbb
dec
sub
pop
testb
sahf
xor
cs
es
fldl
jo
mov
mov
push
popa
pop
mov
insb
mov
dec
testb
and
mov
lahf
repnz
mov
out
pushf
sbb
push
adc
lods
jne
repnz
mov
sti
insl
psraw
int
in
fst
cwtl
stos
and
aas
push
sti
int
mov
cmp
shrl
or
cmp
in
arpl
outsl
dec
outsb
cmpsl
imull
pop
icebp
shrl
ja
fstl
les
insl
pop
jg
insb
cltd
sub
jno
roll
lahf
cmc
out
adc
psubsw
sbb
fdivs
mov
fidivl
push
mov
std
push
and
cli
pop
negl
add
jo
loop
mov
and
sbb
mov
sbb
popa
shll
inc
xor
mov
das
dec
fists
leave
lds
sbb
xchg
sub
jns
mov
mov
xchg
mov
fnstcw
dec
popa
sub
xor
fistpll
push
movsl
mov
repnz
sub
and
fnstcw
dec
stc
or
jmp
xor
pop
lcall
cli
xchg
sbb
adc
push
stos
push
jl
iret
std
bound
lret
inc
js
pop
aas
dec
fnsave
sub
js
stos
out
cmpsl
popa
xor
ret
outsb
jbe
xor
or
or
adc
add
in
jns
pop
mov
xor
mov
mov
mov
dec
testb
mov
inc
cmp
in
mov
xchg
push
fistpll
cmpsb
dec
mov
lahf
outsl
mov
aas
imul
sub
cld
inc
mov
fs
sbb
push
sbb
sbb
xchg
xchg
mov
inc
ss
ja
adc
dec
loop
cmp
mov
mov
push
xor
mov
fldcw
adc
cwtl
leave
push
repnz
and
pushf
mov
push
inc
adc
and
inc
mov
add
int
cli
sub
insl
jno
mov
stc
aam
out
orl
mov
dec
imul
push
insb
mov
shrl
adc
mov
pop
loopne
arpl
mov
push
jo
shrl
loopne
bnd
or
clc
push
push
movsl
dec
jecxz
push
or
and
sbb
cmp
and
xchg
push
jp
or
xchg
enter
and
inc
imul
dec
and
sbb
notb
jo
psubw
test
xor
fstpl
clc
fdivp
data16
xor
sub
sbb
loopne
push
jle
test
mov
aaa
dec
loope
in
arpl
and
ret
mov
imull
sbb
popa
repnz
movsb
sahf
test
and
adc
repnz
js
mov
push
loopne
dec
mov
sbb
fsubrs
add
arpl
mov
or
pusha
dec
sub
and
maxps
lods
inc
out
ja
dec
das
movsb
aad
mov
mov
pop
add
sbb
xorb
fadds
mov
cmp
dec
and
or
sbbl
movsl
xor
or
popf
fs
add
push
sbb
ds
sub
push
stos
in
mov
ljmp
mov
cmp
repnz
mov
hlt
jnp
shlb
std
aas
cld
arpl
cmc
insb
mov
lods
mov
xchg
mov
idiv
sbb
xor
or
push
cmp
sbbl
sub
icebp
lret
pop
mov
push
movsb
into
pop
cltd
pop
in
imul
jbe
xchg
cli
ss
mov
movsl
test
in
in
imul
insl
es
dec
push
lock
mov
mov
cmp
dec
lock
ja
testl
or
pop
mov
leave
pop
test
adc
loop
lock
inc
gs
daa
and
bnd
push
or
cmp
mov
mov
mov
pop
out
add
cli
pop
loope
xchg
pusha
in
pusha
mov
iret
adc
enter
jno
rcrb
sub
add
mov
or
aas
push
js
dec
frstor
pop
lods
rol
gs
inc
fnstsw
mov
lahf
pop
cli
and
jno
in
push
dec
xchg
inc
rclb
cmp
inc
repz
jae
arpl
call
repnz
orl
xor
stc
add
pop
inc
adc
dec
push
ja
jnp
pop
mov
or
adc
inc
sub
jns
jno
or
or
pusha
dec
ret
xor
add
movsb
sar
pusha
addr16
add
cmp
jle
andb
jnp
fcompl
adc
lods
dec
testl
mov
jae
inc
sbb
mov
ret
pop
mov
mov
pop
jecxz
loope
fidivrl
fsubs
in
sub
sbb
adc
mov
sarl
stos
jne
ljmp
sahf
push
and
and
sbb
sahf
addr16
inc
test
out
fildll
add
xlat
mov
push
push
enter
adc
sti
dec
jnp
xchg
sub
int
xorl
push
repnz
notl
imul
repnz
fwait
jae
gs
jb
and
lea
mov
dec
aad
flds
mov
xor
cmp
mov
decl
jb
arpl
sahf
cmpl
mov
fisubrs
jg
sub
repnz
fdivrl
add
test
adc
mov
insb
and
inc
loope
xchg
xchg
mov
stc
add
popa
xor
stos
xor
cmpsl
stc
push
stos
in
dec
notb
mov
mov
lahf
rorb
popa
inc
daa
add
push
adc
hlt
insb
or
xor
add
mov
mov
es
adc
repnz
push
leave
repnz
inc
sub
xor
test
call
jb,pt
sub
mov
xchg
push
dec
xor
rcrb
inc
dec
sbb
test
mov
or
ret
jg
xchg
xor
lock
add
jnp
dec
pusha
cwtl
lods
mov
mov
inc
pushf
add
fistl
and
addl
outsb
dec
stos
xchg
cld
out
aaa
imul
or
jp
mov
dec
cmp
xchg
lret
push
sub
int
loopne
and
mov
push
test
mov
cmp
inc
or
in
mov
les
loop
or
adc
enter
ljmp
mov
out
out
pusha
fistps
adc
cmp
xchg
mov
xchg
mov
ret
mov
imul
cli
mov
loope
loop
jne
or
and
aas
adc
in
sub
adc
in
lods
inc
xchg
lds
stc
adc
sbb
or
fsts
fsubrl
pop
push
popf
jbe
jo
jmp
enter
lret
cmpsb
es
xor
adc
shlb
les
mov
and
loop
dec
adc
and
jne
or
jnp
mov
stos
dec
shrl
mov
jb
and
sbb
xor
aaa
shrl
mov
loopne
mov
outsb
adc
scas
or
mov
xlat
and
stc
lcall
mov
sbb
dec
xor
bound
jmp
stc
cmc
inc
jne
pushf
ljmp
jno
lods
and
movsl
push
dec
testb
jecxz
mov
sbb
in
push
lcall
xchg
cli
mov
mov
cmp
popf
in
daa
mov
data16
cld
inc
stos
cltd
mov
jl
lcall
xor
mov
mov
add
rorl
lcall
fists
lock
jle
xlat
xor
jb
mov
pushf
out
repz
dec
xor
push
addr16
mov
mov
test
icebp
sub
jno
jae
sbbl
jg
push
data16
repnz
adc
dec
dec
cmp
lahf
mov
fistl
xchg
mov
adc
mov
call
loopne
xor
cmpsl
jg
lock
movsb
or
pop
adc
out
push
lret
fsts
gs
push
mov
sbb
lods
mov
bound
adc
push
inc
inc
insl
xchg
nop
sub
negb
je
lock
lods
mov
shr
pushf
cmp
sbb
add
popf
adc
xor
inc
cli
icebp
imul
add
lahf
pop
xlat
or
jns
push
cmpsl
mov
dec
stos
cld
sahf
adc
xchg
mov
movsb
sub
out
add
mov
cltd
fnstcw
push
sub
push
repz
or
cli
stc
sbb
out
lret
rcl
out
mov
push
push
mov
or
xor
xor
js
pop
sbb
mov
in
sbb
sbb
mov
and
xchg
scas
fs
bound
adc
rcrl
imul
pop
out
clc
and
push
inc
xchg
cmc
mov
clc
imul
xor
je
fsubl
sbb
push
popf
mov
je
cmp
rcrb
jno
xchg
push
inc
out
aas
add
repnz
push
cmpsb
jno
sbbb
ss
mov
mov
or
mov
mov
pop
pusha
nop
imul
fdivrl
adc
pop
lcall
popa
and
and
stos
jmp
xor
std
fwait
stos
jle
jg
in
or
fucomi
jae
pop
pop
mov
mov
aad
adc
and
mov
xchg
or
mov
mov
mov
fxch
mov
call
pop
stos
and
sub
sti
mov
mov
lahf
pusha
push
addr16
add
lock
jae
sbb
in
aaa
adc
add
add
mov
sbb
adc
cmpsb
sbb
ds
cmp
jl
adc
repz
in
inc
sbb
pop
mov
mov
mov
push
in
test
cmp
push
xchg
push
mov
test
mov
popa
xadd
lret
dec
pop
mov
push
push
xor
aaa
fidivs
sbbb
test
je
shrb
adc
in
adc
push
push
mov
stc
mov
xor
scas
adc
sbb
mov
inc
seto
fs
test
outsl
loope
push
adc
cli
cltd
mov
jle
or
xor
lret
jbe
dec
in
mov
fscale
insb
cmp
mov
test
or
fisubl
sub
lods
inc
jnp
dec
loop
sub
hlt
jmp
or
pop
inc
add
jnp
inc
imul
cli
mov
shr
inc
sub
dec
inc
pop
push
rcll
inc
and
scas
insl
add
cltd
imul
mov
sub
adc
outsl
cwtl
cmp
ss
push
jne
push
jbe
push
xor
shrb
jnp
jp
adc
mov
mov
jl
popa
or
arpl
sbb
mov
mov
mov
in
push
dec
add
xorb
push
call
aaa
xchg
dec
push
sub
cltd
jp
sbb
mov
dec
inc
popa
std
stos
out
repnz
cli
arpl
adcl
out
inc
imul
call
cmpsl
inc
cli
push
call
xchg
repz
inc
in
out
xor
repnz
repnz
arpl
xchg
jae
and
pop
lods
xchg
jae
dec
aaa
lods
sti
idivb
stos
inc
repnz
jb
adc
pop
dec
mov
adc
mov
pop
fistps
popa
jbe
push
mov
adc
js
bound
jecxz
das
fisttps
mov
in
cmp
sbb
jo
add
daa
pop
pop
das
push
test
mov
adc
add
mov
hlt
xor
popf
cmp
push
dec
popa
cmp
mov
cmp
sbb
or
aaa
cmp
insl
inc
ss
stos
or
cmp
mov
pushf
lock
test
mov
xchg
mov
mov
out
cmp
popf
xchg
pop
fstpt
inc
lret
inc
mov
mov
xchg
daa
jl
push
std
fdivrp
pop
jp,pt
sar
xchg
adc
push
mov
push
cli
jo
pop
and
push
test
inc
cmpsl
sub
sbb
imul
sub
or
cld
fwait
cmp
jmp
and
push
jmp
lcall
iret
pop
add
jmp
or
int
or
data16
xor
push
pop
pop
insl
dec
adc
lods
adc
lods
pop
cmp
iret
daa
mov
xchg
inc
cmpsl
xlat
stc
repz
lret
mov
mov
adc
lock
int
js
movsl
and
mov
sti
ja
jne
adc
stc
inc
add
movsl
sub
inc
pop
and
leave
dec
dec
add
dec
adc
mov
outsb
lahf
sbb
daa
movsl
repnz
pop
adc
cmp
ljmp
mov
jo
divb
cmp
and
aam
lods
ss
sahf
icebp
jno
icebp
iret
pop
inc
jnp
inc
pop
shlb
test
pop
lock
jo
and
push
in
stc
ror
inc
jge
call
popa
insb
adc
xor
mov
xor
lret
in
test
imul
xchg
pcmpgtw
add
shrl
in
pop
lahf
push
push
repnz
pop
insl
mov
inc
jae
dec
insl
mov
sub
mov
adc
rorl
imul
movsl
jo
xchg
mov
add
jp
loop
cwtl
and
push
inc
pop
mov
mov
popa
xchg
iret
dec
adc
adc
scas
xor
fisubrl
gs
imul
sar
negb
lods
dec
fdivrs
jmp
jns
jbe
fistl
mov
sub
jl
xor
fs
or
loopne
or
mov
jne
and
or
es
jae
mov
jns
out
or
imul
cmp
dec
fimull
xchg
mov
repz
xor
test
xchg
xchg
movsb
out
pop
sbb
xchg
pop
mov
push
mov
cld
jns
mov
insb
xchg
adc
rcrl
jge
mov
fcoml
popa
or
ja
dec
pop
pop
inc
lahf
lods
aam
sbb
mov
int3
stos
mov
push
std
movsl
jmp
lahf
enter
inc
cli
mov
mov
incl
adc
mov
cmp
rolb
jg
fs
inc
ljmp
adcl
jmp
cld
mov
mov
mov
popa
cli
call
sbb
or
mov
mov
out
inc
arpl
lock
sub
aaa
mov
or
lret
daa
adc
in
adc
mov
popa
ret
push
push
and
repnz
sarl
mov
inc
push
lea
add
inc
js
ljmp
mov
mov
xchg
xor
dec
mov
adc
jno
mull
adc
xchg
lahf
jecxz
mov
mov
mov
repnz
int
jne
imul
xchg
mov
and
sbb
rcrl
cmp
insl
pop
dec
imul
js
out
dec
cs
xor
mov
pushf
pusha
stc
cmp
add
mov
mov
sub
outsb
call
xchg
sub
mov
cmpl
jmp
cmpsb
std
mov
das
jecxz
mov
jbe
outsl
or
add
sub
xor
repnz
and
pop
jno
mov
push
pusha
add
inc
pop
sbb
fstpt
sbb
std
mov
cmp
or
repnz
push
push
in
pop
push
cli
cmp
and
adc
notb
movsb
pop
pop
push
out
fldcw
sbb
aas
icebp
repnz
js
or
stc
add
lods
mov
movsb
repz
imul
jbe
int
xor
adc
inc
lahf
mulb
mov
popf
push
call
mov
lahf
fs
pop
sti
or
hlt
repz
dec
jno
fucomip
push
jecxz
jae
inc
sub
int
fsub
mov
sub
or
xor
mov
lods
dec
inc
insb
clc
mov
mov
outsb
lahf
push
fdivp
stos
lods
sbb
or
push
lods
outsb
mov
sub
out
or
sub
dec
sar
out
push
popf
or
cmp
jl
shll
sub
mov
push
test
nop
push
insl
adcb
dec
cmp
push
mov
pop
lods
cli
jmp
sbb
push
add
inc
punpckhdq
dec
adc
outsl
outsb
repz
mov
push
push
jl
addr16
mov
outsb
gs
mov
adc
pop
fs
enter
push
pop
inc
stos
adc
dec
or
cli
jmp
sti
inc
outsb
or
pop
adc
fwait
test
mov
fdivrs
inc
mov
insl
adc
rorl
push
sbb
ret
sbb
shlb
push
mov
add
mov
mov
push
or
insb
mov
outsb
fs
loope
add
arpl
orb
mov
mov
fcomps
or
add
and
mov
dec
mov
mov
jo
cmp
in
enter
or
jno
jbe
outsb
or
add
pop
push
lcall
and
or
mov
mov
in
pop
mov
push
mov
push
or
insl
es
imul
pop
sti
mov
pop
adc
and
or
mov
pop
and
pop
pop
sti
push
sbb
sbb
nop
pusha
mov
xchg
test
sub
adc
fs
mov
test
adc
mov
loop
xchg
andb
xchg
cmp
push
nop
lock
mov
ret
jno
mov
int
mov
mov
je
push
cmp
lock
cli
cmp
add
mov
leave
xchg
sub
iret
push
or
adc
mov
bound
arpl
loope
inc
xchg
jbe
dec
inc
jmp
insb
popa
sbb
adc
xchg
shrl
loope
xor
mov
cmp
jmp
adc
and
sub
scas
or
mov
inc
fisubl
stos
int3
rclb
mov
adc
sbb
xor
icebp
mov
adc
fsubr
data16
cmp
cld
shll
push
out
cmp
dec
lods
outsb
rorb
fs
sbb
cmp
adc
lea
mov
es
dec
sahf
xor
cmpb
sbb
leave
out
in
aaa
daa
push
xchg
mov
add
and
adc
jbe
movsb
jns
mov
dec
xor
icebp
cltd
imul
shl
mov
push
aas
mov
jbe
pop
push
stos
aad
lret
cmp
daa
jmp
lret
rorl
imul
int3
mov
leave
sbb
inc
inc
mov
inc
out
lods
sub
mov
dec
sub
bound
jo
rolb
xchg
xorl
scas
mov
push
shlb
loop
bound
fwait
and
out
mov
xor
sbbl
push
sub
movsl
pop
loopne
scas
sbb
repnz
lret
insl
loopne
cmpsb
jmp
or
or
adc
mov
xchg
repz
dec
jg
mov
and
jl
repnz
sub
inc
jle
insb
mov
out
divps
cwtl
loopne
cwtl
and
and
decl
in
aaa
xchg
xchg
testb
fs
adc
lahf
cmp
setnp
jecxz
inc
push
xor
pop
test
outsb
cmp
insl
adc
lret
lods
push
sbb
es
adc
or
pop
sarb
lock
fs
jl
imul
xchg
insb
mov
push
pop
mov
jmp
mov
cmc
xor
sbb
adc
add
movsb
lock
pop
fstpl
push
and
mov
or
lods
clc
xchg
test
mov
add
xchg
adc
xchg
and
movb
popf
jecxz
mov
movsl
cmp
xchg
addr16
xchg
rorb
mov
mov
and
adc
sub
jmp
cmc
ficoms
ret
and
inc
pushf
add
mov
mov
pop
emms
jb
mov
adc
jno
sarl
add
outsb
jo
mov
enter
popa
mov
insb
sub
fmuls
loopne
xchg
lds
int
mov
sti
mov
cmp
sub
jmp
mov
inc
push
sbb
insl
aaa
addr16
cltd
mov
std
call
or
or
fwait
loopne
test
xchg
xor
test
mov
lods
insl
mov
cmc
call
xor
inc
bnd
test
lods
adc
jae
mov
push
in
jo
add
sub
mov
pop
dec
test
adc
push
mov
xchg
data16
mov
mov
sub
cmp
cmp
mov
icebp
sub
cli
sub
imul
inc
loop
and
leave
sub
pop
insl
sbb
jl
sbb
cld
rolb
dec
cmpb
and
mov
aas
insl
repnz
mov
popa
iret
in
pop
adc
push
fldenv
pop
sbb
mov
jo
into
sub
or
xor
pop
adc
dec
sbb
rorl
cli
jecxz
inc
test
cmp
mov
lahf
sub
dec
dec
sbb
lcall
mov
outsl
sti
adc
push
jg
pop
popa
ret
andb
sbb
jne
mov
ja
inc
push
add
imul
iret
mov
push
inc
popa
mov
leave
or
mov
ds
movlps
mov
es
mov
adc
jne
mov
xchg
iret
pop
push
arpl
mov
cmp
mov
jo
cld
jo
std
movsl
jo
leave
jo
mov
xchg
cmp
mov
push
aam
outsb
int3
neg
push
or
shrl
lods
outsl
dec
xchg
lods
cmpsb
or
push
js
repz
xchg
outsb
or
stos
cmp
ljmp
sub
adc
mov
pop
sub
imul
data16
dec
push
xor
out
sti
jmp
push
jl
inc
cmp
ficomps
fisttpll
adc
mov
inc
aas
sbb
decl
inc
xor
inc
jno
ss
int3
jl
jmp
or
jo
shrb
sbb
and
arpl
outsl
pop
shrb
stos
adc
sub
pop
push
inc
or
inc
mov
push
pop
adc
pop
adc
ljmp
adc
sbb
popf
mov
push
sbb
jo
mov
push
imul
pop
ficoml
lock
push
adc
inc
scas
or
imul
pop
mov
pop
push
sbb
pop
sbb
or
sbb
in
push
push
out
push
push
push
adc
imul
and
adc
and
shll
pop
adc
pushf
mov
lcall
push
dec
into
insb
imul
push
or
arpl
push
sbb
gs
push
lock
or
addr16
push
add
enter
add
jo
arpl
sbb
adc
pop
or
push
xchg
or
sbb
or
inc
mov
inc
jno
and
push
or
push
add
or
sbb
mov
mov
sbb
pop
adc
mov
outsb
mov
lock
and
mov
lcall
call
mov
in
push
in
fimull
sahf
jge
or
mov
mov
fsubs
or
iret
mulb
in
lret
subb
push
jge
jbe
lods
jae
ret
mov
push
dec
cld
pop
dec
and
data16
aam
push
sbb
sbb
sbb
movsb
pop
dec
lods
adc
push
imul
das
sbb
out
stos
addr16
push
jno
repz
sub
jle
outsb
or
adc
movsl
in
je
mov
jbe
push
arpl
in
push
or
mov
adc
add
push
scas
sbb
sbb
sub
outsb
lods
push
and
gs
mov
mov
sbb
push
pop
std
pop
sbb
inc
adc
xchg
in
add
adc
adc
sbb
fs
jno
and
mov
adc
popa
ret
adc
adc
adc
adc
or
fs
or
imul
and
fs
test
push
add
and
or
arpl
push
add
test
xor
bound
or
mov
or
les
or
shrb
mov
pop
and
jp
xchg
unpcklps
adc
imul
lock
bound
bound
or
cmp
mov
mov
add
test
xor
mov
adc
fs
outsl
push
bound
push
or
pushf
arpl
imul
sbb
movsb
add
outsl
imul
jo
sub
insl
push
fstpl
mov
lds
jae
insl
rorb
into
inc
and
aaa
push
je
loop
adc
mov
push
int3
pop
mov
rclb
lods
lods
xchg
mov
scas
jno
inc
pop
in
jno
or
jo
push
adc
sbb
xchg
mov
and
leave
cwtl
jns
adc
pop
xor
icebp
lea
pop
sub
and
mov
adc
lods
movsb
fs
mov
cmp
mov
jns
imul
xor
mov
jbe
lahf
push
out
aaa
cmp
adc
stos
sub
cltd
imul
xor
adc
cmpb
stc
in
outsl
dec
cmp
or
cld
std
mov
dec
jl
je
or
xchg
dec
repnz
fadds
roll
mov
dec
cli
lea
mov
or
xchg
movsl
jns
addb
or
popf
jns
cmp
outsb
lods
mulb
imul
mov
outsb
insl
inc
cwtl
mov
jmp
dec
lret
mov
add
mov
sti
jl
add
out
repz
repnz
stos
bound
in
int3
clc
sub
cli
jle
mov
jno
stos
dec
and
repnz
mov
movsl
cwtl
rcrl
frndint
add
pop
cli
bound
jo
sbb
lock
test
and
mov
push
mov
ljmp
mov
call
mov
fmuls
movsl
ss
movsl
and
adc
mov
pop
int3
push
jnp
testl
mov
in
bound
cmp
movb
xor
sbb
call
pop
cmpsl
pushf
push
mov
or
and
popa
arpl
xchg
movsl
divl
xlat
inc
mov
pop
lds
js
dec
cmp
push
rcrl
mov
loopne
ljmp
icebp
mov
popf
subb
sbb
imul
fs
sbb
fsubrs
jno
mov
mov
sub
add
mov
imul
and
and
push
adc
jns
daa
mov
or
cmpsb
mov
pushl
shlb
cmp
fsts
inc
inc
mov
loope
insb
jmp
out
icebp
dec
cmc
test
mov
aad
xchg
lods
repnz
sbb
test
add
push
jge
adc
repz
pop
and
mov
cld
push
aad
insb
mov
dec
push
adc
pop
cmp
dec
rclb
adc
mov
notl
cmp
jne
in
sahf
pop
cmp
outsl
cmp
dec
lcall
sbb
and
aas
out
lcall
push
hlt
in
adc
mov
ja
stc
mov
xor
imul
out
sar
loope
in
sub
cmp
fistl
shrl
test
in
mov
add
repnz
cmp
loopne
jle
insl
repnz
push
xorl
mov
sub
outsb
fisttpl
inc
sbb
popa
data16
dec
rcll
pushf
xchg
pop
xor
rcll
in
or
and
imulb
xor
ljmp
sub
lret
mov
pushf
mov
cmpsb
xorb
push
repz
add
mov
lock
mov
lea
icebp
insl
cmp
scas
sub
scas
out
dec
mov
mov
paddd
pop
icebp
dec
test
xor
xor
fistpll
cmp
xchg
xchg
sub
icebp
add
cld
scas
push
xlat
sbb
jo
fistpl
lods
ja
xor
test
movsl
dec
insl
out
lods
sub
lcall
lds
cmp
imul
daa
sub
and
adcb
icebp
pop
subl
mov
test
adc
jne
adcl
jno
xor
loop
std
fs
fs
hlt
dec
adc
scas
sbb
mov
addb
lret
arpl
lock
xor
movsl
inc
out
sub
inc
nop
mov
dec
jb
xor
xor
pop
jo
mov
cmp
pop
mov
mov
mov
mov
stc
mov
les
dec
jne
add
jl
xor
dec
inc
jne
cld
mov
fiadds
dec
imul
xchg
xlat
pop
dec
xor
mov
and
mov
lods
or
shl
mov
or
and
mov
out
pop
mov
cli
in
je
and
daa
shl
sub
or
ljmp
ficomps
insl
stos
mov
or
mov
mov
push
mov
sub
cmp
and
stos
das
ja
push
emms
inc
dec
inc
pushf
or
insl
pop
std
adc
scas
xor
lret
sbb
test
xchg
dec
mov
ss
cltd
push
pushf
dec
daa
ljmp
add
jb
mov
in
jecxz
es
pop
jne
mov
je
int
in
std
arpl
mov
icebp
aam
and
or
push
adc
or
mov
movhps
sbb
sbb
pop
cmp
test
mov
xchg
sahf
js
sbb
cmpsl
lcall
fwait
lds
pop
push
out
iret
xchg
fs
inc
push
ljmp
xchg
iret
pushf
cmp
ljmp
sbb
push
sub
arpl
mov
aam
sarl
lea
or
or
lret
add
ret
imul
xchg
cs
xchg
scas
popa
popf
ja
test
stos
ret
stos
lret
sbb
pop
dec
mov
xchg
add
jmp
fildl
repnz
ljmp
mov
pushf
shl
mov
leave
in
xchg
xchg
mov
push
inc
or
inc
fistps
xchg
mov
dec
popa
xlat
mov
or
fdivl
jmp
loope
das
pusha
cmc
sub
insl
dec
dec
mov
in
mov
aad
mov
sbb
rclb
idivb
sbb
push
dec
mov
ret
clc
sbb
decl
jns
push
lods
pop
cltd
mov
setns
adc
filds
xorl
ret
shlb
push
sbb
lret
add
popa
inc
mov
adc
out
data16
or
loope
lock
enter
mov
shll
lds
xorl
adc
fnstenv
daa
lcall
es
imul
xchg
add
xor
call
add
pop
jmp
and
push
pop
jp
xchg
push
ljmp
js
sbb
lds
in
addr16
or
nopl
outsl
or
lods
imul
rolb
sbb
or
addr16
dec
test
in
xor
lret
jns
mov
xchg
pop
imul
xchg
xor
mov
cmp
cld
lock
mov
js
cmp
dec
jnp
les
cld
jg
mov
adc
adc
pushl
sub
sbb
pop
pop
push
pop
lahf
dec
filds
adc
int3
das
ljmp
mov
mov
push
xchg
cmp
push
ds
mov
cmc
pop
push
sub
add
mov
push
dec
dec
sbb
popa
ds
mov
push
in
mov
and
cwtl
add
into
push
imul
subl
sub
or
xor
cmp
test
jmp
lock
pop
inc
pusha
jg
int
es
lock
xor
int3
mov
xor
in
or
xchg
push
push
and
mov
xor
out
movsb
inc
adc
pop
lods
mov
lcall
lahf
iret
adc
adc
mov
sarl
mov
subl
or
outsb
adc
addr16
lret
rcl
pop
cmp
sub
sub
decl
es
loop
pop
frstor
ljmp
roll
and
adc
loope
shl
and
jg
divb
adc
mov
insl
or
daa
pop
addr16
inc
adc
push
jo
repnz
movsb
xchg
or
add
mov
insb
in
adc
testl
mov
add
hlt
pop
int3
mov
aad
pusha
pop
mov
pop
push
aas
pusha
mov
clc
bound
push
out
aaa
or
mov
repnz
jp
pop
movsb
cmp
pop
inc
in
xor
and
lods
jg
inc
lods
xor
add
fistps
movsb
mov
and
movsl
popf
and
movsl
mov
add
aam
int3
or
xchg
mov
outsb
mov
sub
inc
add
mov
pop
mov
jno
cmp
jns
gs
dec
xchg
aaa
push
dec
pusha
xchg
dec
jp
adc
jle
xchg
bnd
les
shll
pop
ljmp
jns
mov
mov
mov
pop
popf
data16
and
enter
iret
sbbb
ret
pop
repnz
fnstsw
not
iret
mov
insl
or
imul
push
shll
jo
push
adc
ss
mov
arpl
movsb
outsb
int
mov
sub
mov
inc
or
xlat
stos
xchg
sarb
popa
mov
and
cmovg
sub
and
in
cs
sub
cmp
xlat
pop
cmpsl
xchg
or
push
sbb
insb
cmc
mov
inc
data16
aaa
nop
pop
cvtps2pd
and
mov
cmp
in
aad
mov
adc
push
xor
lret
in
jb
lods
nopl
dec
pushf
out
push
hlt
fstpt
mov
add
aad
jno
data16
cs
inc
inc
jnp
lods
dec
dec
jle
cmp
dec
in
popa
pop
inc
jg
and
cmp
pusha
and
xor
clc
iret
lods
adc
pop
sbb
stc
into
out
mov
add
mov
mov
jae
xor
xor
imul
jmp
adc
cmpb
lret
cld
inc
mov
cmp
sub
adc
push
popa
xchg
and
jno
xor
jae
sbb
cld
movsl
aas
aaa
clc
inc
sub
or
jns
adc
fstpt
xchg
jae
push
les
insl
jl
push
lods
mov
add
inc
jbe
or
js
lcall
ret
fs
pop
lret
stos
mov
les
sarb
std
movsl
mov
addb
or
cmpl
adc
xorb
fildll
and
mov
call
jl
xor
in
lahf
and
jp
mov
and
popf
push
leave
jp
add
call
outsb
imul
sub
xor
lahf
sahf
pusha
arpl
xlat
out
jo
out
dec
fisubrs
sub
leave
shll
add
mov
test
fs
arpl
adc
mov
dec
mov
mov
lock
or
lock
add
mov
psubsw
jae
xchg
push
cmp
dec
xor
xor
pop
pminsw
ss
repnz
rclb
push
sbb
pushf
out
stos
pop
mov
lods
repz
sub
xchg
in
xchg
stos
aas
cmp
xor
fidivl
cmp
loope
subb
adc
out
push
lret
fs
aam
sbb
mov
imul
jl
icebp
mov
lahf
inc
pushf
dec
ret
sti
sub
cmp
std
mov
shlb
xor
sub
push
outsl
mov
repz
sbb
adc
fwait
jne
out
cli
sbb
push
ficompl
lcall
inc
repz
pop
int
ret
mov
bound
adc
mov
and
imul
lods
shlb
aas
lret
int
push
inc
in
out
cmp
mov
repnz
jno
add
dec
xlat
xor
in
std
jo
and
mov
aaa
sub
adc
outsb
imul
push
mul
test
jae
cmpsl
jb
and
sbb
notb
pop
jo
mov
lock
movsb
pop
adc
testb
imul
icebp
xor
mov
xor
repnz
push
ja
daa
ficoml
hlt
loopne
dec
ja
jge
rcll
inc
mov
ljmp
in
imul
mov
rcr
pop
mov
repnz
xchg
inc
inc
aad
mov
int
mov
mov
sbb
popa
outsb
inc
mov
lds
mov
xchg
popf
or
sarb
add
lods
jmp
mov
xor
pop
dec
jl
mov
and
xor
mov
sbb
jecxz
jg
repnz
and
and
ja
push
sub
cmp
pop
arpl
xchg
xor
mov
mov
xchg
in
xor
fidivs
in
or
imul
ds
pop
cmp
nop
mov
and
addb
in
js
mov
fs
repnz
sarb
nop
and
push
or
jnp
cmp
bound
andl
push
dec
out
xchg
cld
cmp
imul
xor
dec
es
repz
aaa
xor
stc
stos
adc
sub
movsl
cltd
add
insl
jns
adc
arpl
out
insl
cmp
mov
mov
hlt
add
xchg
gs
sbbl
push
out
jecxz
test
sbb
outsl
lods
add
jl
inc
test
ss
mov
add
fiadds
outsl
cld
stc
xchg
repnz
push
jl
outsb
fildll
movsl
dec
movsb
pop
out
ud0
fs
daa
sub
mov
xchg
stc
lock
inc
cmpsb
movsb
mov
or
shrl
dec
jl
and
xchg
loopne
mov
lcall
ficompl
fisubs
notb
cmp
mov
stos
out
inc
dec
adc
clc
mov
fstpt
add
push
dec
mov
pusha
cmpb
orl
push
dec
popa
jecxz
fs
sub
cs
jecxz
sbb
pop
or
data16
pop
or
fistps
cmp
xor
aaa
mov
insb
adc
inc
cmp
loope
mov
xchg
lret
add
aas
rcr
add
mov
fs
jg
adc
mov
and
loopne
outsb
sub
mov
scas
jae
clc
fwait
mov
xor
cmp
popa
xchg
out
sarw
notl
mov
jp
mov
test
sbb
xor
jb
insl
iret
mov
loopne
or
jl
push
repnz
scas
movsl
and
mov
ret
test
inc
fs
test
xchg
jg
ficomps
outsb
outsb
mov
inc
jle
xlat
dec
imul
gs
stos
xor
lock
pop
loop
mull
dec
jecxz
mov
add
cmpsb
or
mov
and
dec
in
daa
aaa
dec
shlb
movsb
jle
xor
jnp
jp
pop
lock
add
stos
stc
cmp
jge
int3
stc
fwait
xchg
test
or
ja
jmp
mov
repnz
sbb
popf
sbb
and
cmp
mov
in
push
dec
cmp
stc
xlat
hlt
cld
loope
and
repz
or
sub
pushl
les
and
out
and
push
mov
int3
sbb
imul
pop
adc
sbb
loopne
or
lock
int3
mov
test
pop
sbb
dec
inc
or
xlat
or
test
pop
sub
outsl
into
pop
or
repnz
incl
lods
mov
test
adc
shrl
popa
mov
push
cmp
call
sbb
and
xlat
scas
cmp
cmp
divl
lahf
mov
xchg
jecxz
mov
repz
js
sub
jl
aaa
mov
fwait
mov
rcl
loop
push
lahf
nop
push
pusha
test
in
push
pop
jge
cmp
push
add
push
pushf
jo
mov
sbb
push
test
les
js
ljmp
cmp
mov
mov
xchg
xchg
test
and
inc
dec
add
mov
pusha
mov
and
adc
subb
xor
scas
enter
inc
cld
pop
ret
inc
rcrb
mov
adc
aas
fidivs
add
cli
dec
call
test
and
in
stc
test
mov
inc
stc
stos
test
popf
jae
stos
movsl
sub
adc
lret
xchg
orb
adc
inc
xor
push
adc
test
sub
popa
pushf
sub
xchg
mov
inc
pop
jo
daa
js
insl
sbb
lret
arpl
pop
sarl
cld
arpl
push
out
outsl
mov
mov
out
cmp
or
mov
mov
mov
sbb
mov
mov
sbb
jp
and
jp
cltd
xchg
or
xor
lods
adc
push
mov
pop
call
outsl
xlat
fwait
in
daa
push
loop
cltd
lcall
bound
movsl
xchg
int
insl
mov
ret
fwait
movsb
inc
xchg
es
inc
sbb
jns
int
cmp
lea
bound
stc
sub
repnz
in
cmp
mov
fbstp
testb
push
mov
imul
mov
and
insb
dec
jno
loope
hlt
icebp
lock
cmp
ds
outsb
aaa
push
jns
iret
cmp
sub
das
jne
mov
ja
xor
aam
jb
test
add
mov
fisttpll
push
dec
fwait
subb
push
repz
pusha
ds
push
lcall
mov
stos
mov
or
pslld
into
xchg
shl
mov
in
mov
stos
insl
bound
jp
add
mov
sbb
or
mov
in
stos
dec
shrb
mov
jg
out
cmpsl
xor
dec
std
and
mov
inc
xor
rorb
xor
jmp
ret
cmpsb
test
fs
cmp
mov
lcall
mov
push
outsb
sarb
cmp
sub
mov
repnz
mov
xor
scas
popa
ror
mov
repnz
fwait
mov
pusha
fimuls
jno
cmp
dec
flds
jbe
cmp
cmp
fistpll
pop
test
adc
mov
inc
aas
lods
push
mov
adcb
xlat
push
jmp
sbb
jae
sar
test
insl
out
cmp
mov
sbb
pminub
test
adc
loop
out
and
cmp
fstl
popa
and
pushf
test
xchg
push
push
jb
outsb
icebp
insl
pop
push
stos
pop
fsts
or
ficompl
push
and
stos
mov
dec
xchg
pop
and
cld
loop
ljmp
stos
in
movsl
jo
or
pop
pop
mov
mov
out
fucom
and
loope
dec
dec
aaa
cmp
cwtl
ret
push
in
xchg
leave
cmp
mov
xor
pushf
push
imull
outsl
mov
jg
pop
pop
gs
repnz
mov
sub
sbb
mov
inc
lret
mov
ret
bound
movsl
popa
ret
and
fsubr
xor
stos
insb
aas
negl
bound
sbb
out
popf
jmp
mov
sbbb
mov
xchg
add
push
adc
jnp
insb
imul
sub
dec
cld
lahf
test
repnz
jbe
adcb
lods
pop
mov
call
mov
sub
push
mov
repz
imul
test
imul
sub
lods
cmpsl
pop
mov
sahf
lods
ja
cmp
clc
into
stos
jge
add
clc
jb
pushl
jg
repz
fists
add
sub
jbe
lds
rcrb
les
jecxz
popf
adc
lock
pushf
in
and
hlt
lahf
out
sub
inc
xor
mov
bound
jg
pop
and
stos
int3
dec
push
adc
out
push
out
and
mov
push
jecxz
outsl
cmp
movsl
and
or
adc
test
mov
and
stos
inc
mov
mov
sbb
in
dec
push
add
es
adc
mov
out
mov
shrb
add
mov
or
repnz
sbb
sbb
mov
and
cmc
mov
pop
mov
in
jg
ss
loope
cmp
test
inc
idivb
lahf
das
mov
popf
or
inc
movsb
cmpsb
hlt
jmp
lret
add
push
stos
xchg
xchg
sub
cmp
cmp
lods
sub
push
push
fs
fs
sarb
jg
inc
iret
lahf
inc
arpl
pop
push
xor
jns
popa
iret
icebp
add
sub
in
adc
or
sub
lods
std
pop
lods
and
push
or
push
adc
or
pop
aam
aas
mov
push
xchg
rcrl
lods
mov
out
stos
fwait
lea
mov
push
add
or
jl
movsb
push
fbstp
dec
sbb
or
shl
or
and
stos
and
gs
sub
inc
daa
nop
sbb
sbb
repnz
sbbl
insb
adc
in
jbe
repnz
and
addr16
inc
lock
adc
fidivrl
mov
xorb
push
leave
xor
mov
int3
ds
out
xor
or
arpl
mov
pop
and
xor
inc
and
insl
and
pop
aam
shrl
test
stc
repnz
js
xchg
xor
in
fidivs
xchg
test
sbb
mov
pop
outsb
enter
inc
gs
inc
cmpsl
mov
pop
mov
pop
cmp
or
mov
mov
inc
cmp
xlat
bsr
test
push
push
je
xor
mov
fs
mov
cmp
lods
adc
stos
dec
addr16
iret
cli
and
int
repz
and
leave
sbb
out
or
cmp
scas
mov
xchg
jbe
shll
xchg
adc
add
cmp
add
adc
and
loope
bound
cmpsb
adc
aam
pop
out
pushf
pushf
cmc
xchg
pop
insb
fwait
adc
push
or
xor
jl
lds
jno
or
mov
mov
xor
das
insl
testl
ljmp
mov
std
adc
int
dec
add
pop
jae
outsl
loope
pushf
inc
aas
and
adc
push
or
aas
daa
lea
popf
mov
test
cmp
repnz
mov
jb
and
dec
shll
sub
aas
dec
sub
cld
jp
hlt
ss
mov
xchg
xor
inc
mov
loope
push
dec
hlt
in
fidivs
pop
addr16
mov
decl
nop
aas
rcrl
push
test
ror
and
mov
jle
push
std
mov
mov
outsl
decb
dec
xor
adc
cmp
rclb
in
leave
push
lock
jns
incb
clc
or
sub
stos
adc
mov
rcr
adc
mov
add
inc
jno
jb
test
mov
jb
out
or
fldcw
sub
push
leave
pop
pop
nop
outsb
inc
cs
mov
and
jle
jnp
add
insl
mov
loop
push
adc
orb
or
int
add
sbb
arpl
or
pop
lods
pop
and
fistl
mov
in
inc
ret
xor
nop
or
test
fcomip
insb
cltd
adc
addr16
psubq
jbe
test
push
push
xorl
cmp
sub
mov
mov
stc
sbb
mov
es
testb
jge
call
loopne
loope
das
pusha
popa
icebp
sbb
pop
out
popa
mov
outsb
sub
std
jg
pop
into
repnz
mov
xchg
inc
cmp
mov
test
mov
adc
out
add
ss
sub
pop
lret
aaa
jns
dec
iret
insl
sti
jecxz
lret
mov
pop
insl
jb
adc
mov
jmp
sti
xchg
cltd
out
inc
sbb
repnz
sbb
sub
xchg
outsl
push
es
mov
insb
bound
cmp
jns
dec
or
fisttpll
mov
in
cwtl
scas
xor
dec
mov
shll
xchg
gs
mov
jno
push
xchg
inc
out
mov
sbb
rol
sbb
sub
mov
dec
stos
add
jb
lahf
iret
fwait
adc
lret
jp
mov
xor
imul
mov
fildll
or
jmp
adc
hlt
repnz
fdivl
push
xchg
inc
movb
sar
mov
out
rol
shr
fdivrs
mov
shrb
jmp
fimull
subl
fs
sbb
hlt
sub
cmp
pop
xor
js
fwait
jge
jmp
adc
pop
test
lcall
xchg
sbbl
xlat
das
add
mov
cmp
mov
cmp
add
jbe
loope
incl
jnp
mov
xlat
adc
test
mov
rorb
push
mov
loop
aas
mov
repnz
mov
adc
inc
mov
jb
test
rolb
popf
in
repnz
xlat
lds
push
in
lea
mov
mov
ljmp
icebp
std
xchg
in
fsubr
idiv
adc
or
mov
data16
pop
aam
mov
outsb
mov
xor
js
xor
cmp
negb
stc
mov
mov
jb
jp
xor
mov
pop
and
cwtl
ret
adc
stos
rolb
mov
cmpsl
push
mov
test
hlt
dec
sub
mov
jns
jge
adc
pop
pop
push
sbb
stos
sarl
arpl
incb
mov
pop
cmp
arpl
adc
mov
cmp
jecxz
test
mov
jp
xchg
bound
in
mov
lret
dec
mov
loope
mov
test
in
xchg
int
pop
popa
push
xchg
sub
repz
adc
lea
cmp
inc
insb
cmp
mov
add
sbb
imul
push
and
fisubl
xor
mov
xor
jbe
sub
ja
in
sbb
and
mov
and
jecxz
mov
inc
adc
mov
mov
jl
jge
jo
push
movsb
lds
and
fistl
pop
push
cmp
test
push
xchg
repz
or
punpcklwd
jb
add
push
in
sbb
out
inc
push
dec
mov
pusha
xlat
mov
dec
and
pop
sub
movsb
iret
adc
or
iret
mov
adc
aam
out
pushf
and
sbb
push
pop
sbb
mov
std
shll
mov
cmp
icebp
xchg
jno
add
fstp
bnd
mov
pop
movsl
loope
sbb
iret
sbb
push
push
stos
scas
cmp
push
or
in
sbb
sub
jno
mov
fstps
aaa
cmp
jmp
pop
stc
sbb
adc
mov
push
pop
xor
loope
rcll
test
mov
lahf
cmp
in
sbb
stc
cltd
push
sbb
pop
sbb
sti
mov
and
xor
add
cli
std
dec
movl
push
dec
pop
or
mov
fs
idivb
f2xm1
mov
in
mov
shrb
add
sbb
sub
jnp
stos
in
imul
adc
push
imul
ret
xor
mov
sub
jb
imul
jge
or
insl
movsl
mov
mov
push
pusha
fldt
pop
dec
add
adc
push
shll
jns
repnz
fists
lock
xor
pop
adc
outsb
xchg
add
in
outsb
out
dec
ljmp
outsb
punpckhdq
mov
push
xor
mov
push
loopne
mov
aam
jo
jle
fs
inc
lea
push
or
mov
sub
adc
fs
iret
scas
inc
jecxz
mov
push
pop
mov
or
pop
mov
dec
and
pop
push
mov
or
xor
pop
cmpsb
addr16
jo
adc
jno
push
dec
push
adc
mov
sahf
fs
int
sbb
pop
ljmpw
or
push
or
jno
testb
or
lea
repnz
mov
and
outsb
pop
sbb
les
fs
mov
fs
adc
inc
cmp
testb
or
and
add
leave
mov
mov
imul
popf
and
push
mov
sti
jo
jo
push
lock
outsb
push
sub
or
push
add
and
stos
adc
sbb
sbb
lahf
into
ret
pop
sbb
push
jno
push
adc
or
inc
imul
push
push
adc
les
fs
sbb
pop
adc
outsb
test
mov
adc
daa
pop
test
push
imul
fbstp
push
insl
pop
or
cltd
data16
push
imul
test
or
mov
push
mov
or
sbb
gs
popa
push
mov
inc
push
loop
and
mov
mov
adc
add
add
sbb
inc
add
pop
pop
enter
adc
adc
lock
bound
popf
sbb
orw
loope
and
pop
adc
dec
in
lret
xchg
lahf
adc
sub
jge
aad
cs
mov
xor
insl
inc
and
mov
cwtl
cmp
jo
es
movsl
xor
imul
aas
stos
frstor
pop
cmp
cmp
sahf
xor
les
adc
dec
fstl
loopne
sbb
cmpsb
jo
push
enter
out
xor
popa
rclb
outsb
dec
sbb
mov
pop
outsb
mov
jge
iret
or
shll
sub
outsl
cld
xchg
data16
repz
test
push
loop
lock
dec
movsl
cltd
aaa
adc
mov
insb
push
into
or
mov
mov
in
sub
std
xchg
cs
inc
mov
insb
mov
and
pop
or
stc
pop
imul
lods
mov
mov
out
inc
mov
jns
jp
cmp
sbb
lods
shrl
or
mov
lea
pop
lcall
xor
add
shll
sbb
push
xor
mov
fimuls
cmp
je
repnz
dec
out
sub
sub
xor
arpl
test
lret
push
sbb
push
and
inc
in
push
in
cmp
xor
mov
mov
adc
cwtl
mov
fwait
dec
push
jbe
mov
iret
repnz
add
add
adc
lcall
mov
adc
or
insl
or
mov
and
jl
mov
lds
fmul
xor
jb
jl
push
scas
repnz
pop
aam
jo
dec
out
push
data16
mov
ret
into
add
pop
movsl
loopne
loopne
inc
outsb
cmp
mov
mov
ror
or
xor
mov
repz
data16
out
xchg
or
cmp
mov
sahf
adc
mov
cmpsb
add
inc
xor
pop
pop
icebp
and
lahf
inc
fwait
lret
mov
cld
sarb
test
fucomp
xor
xchg
push
pushf
repnz
pop
movsb
stos
js
mov
rcrl
mov
or
pop
push
cmpsb
andb
mov
xchg
pusha
js
xor
enter
sbb
push
sub
lret
dec
adc
jl
lret
adc
mov
dec
addr16
fistl
pop
fwait
hlt
xchg
sub
fbld
adc
testl
jmp
cltd
inc
jmp
push
cld
cmp
outsb
clc
xchg
cli
shlb
pop
inc
lods
insb
jns
iret
jb
shlb
lods
and
ret
fwait
in
outsl
cmp
or
hlt
lret
sub
dec
lock
add
push
add
pop
push
or
dec
xor
add
in
push
shlb
mov
out
or
adc
xor
pop
cmp
repz
add
or
cmp
mov
gs
or
lock
mov
cli
mov
mov
inc
dec
test
xor
jp
pop
fwait
mov
push
mov
jle
sub
nop
inc
cmp
popf
sbb
and
push
or
in
and
push
or
xchg
popa
xchg
inc
and
aas
jp
int
lods
jge
insl
jb
repz
int
enter
hlt
unpcklps
scas
mov
stos
adc
jno
scas
dec
cmpsl
pop
mov
out
rcrb
lret
mov
push
movsl
xor
lahf
adc
add
sbb
mov
xlat
inc
jb
popf
mov
mov
mov
sbb
jb
pop
lods
inc
pusha
loope
dec
lods
stc
cmpsb
cmp
cmp
test
pop
daa
jo
call
movsl
mov
shl
mov
iret
loopne
push
inc
cmp
mov
lcall
xchg
addl
cld
data16
mov
or
pop
xor
pop
sub
xchg
outsl
ret
add
inc
insl
ss
jecxz
bound
push
sbb
mov
shlb
adc
sbbl
gs
shll
decb
fwait
or
mov
cmp
mov
js
mov
pop
ror
sarb
mov
lock
mov
xchg
add
hlt
enter
pushl
cwtl
mov
pop
mov
or
int
in
pop
imul
xchg
cmp
dec
outsb
adc
mov
mov
or
repnz
popf
push
pop
mov
push
mov
ds
repnz
push
fs
xor
fisubrl
les
ror
mov
pop
test
call
addr16
pushf
hlt
adc
add
jo
test
xor
mov
daa
inc
ljmp
and
sbb
js
jo
call
xchg
cmp
bsr
add
mov
aas
cwtl
mov
mov
mov
nop
xor
rcll
mov
jnp
or
xchg
shl
rorb
pusha
and
pop
das
inc
add
outsl
fwait
or
repnz
fcoms
stos
decb
f2xm1
xor
jns
xchg
mov
push
inc
xorb
aaa
cmp
fwait
mov
xchg
inc
pop
jno
xor
dec
aaa
mov
push
jnp,pn
sbbb
repz
dec
andl
mov
and
mov
out
scas
ficompl
cltd
lret
jo
jne
inc
loop,pt
adc
cmp
mov
negl
dec
jae
add
pop
outsl
inc
cmp
dec
int3
inc
std
mov
in
data16
sub
bound
inc
cmpsb
or
jecxz
jl
inc
test
daa
imul
add
or
stos
adc
mov
insb
stc
out
mov
cld
mov
test
ja
mov
cltd
jl
call
sbb
add
or
ja
out
sub
push
xorps
icebp
sahf
adc
repnz
push
push
out
fldcw
into
mov
rolb
mov
mov
jecxz
testb
jmp
imul
mov
outsb
inc
sub
mov
push
loopne
lret
imulb
and
adc
shlb
loop
rorb
mulb
or
lock
loopne
fisubs
insl
lcall
daa
dec
out
loop
lods
mov
add
jg
imul
sub
inc
fisttpll
bound
in
imul
fisubrl
lcall
aaa
push
outsl
stos
shrb
sbb
fiaddl
or
sbb
or
ret
adc
dec
push
xchg
sbb
ficompl
mov
out
inc
and
jo
imul
cmpsl
insl
sub
mov
jo
push
ljmp
jo
sbb
sbb
mov
xchg
sbb
repz
out
mov
sbb
or
fidivrl
ljmp
enter
mov
in
scas
lcall
inc
pop
or
dec
push
or
sbb
pop
add
cltd
mov
shlb
sbb
ljmp
or
mov
or
or
push
mov
and
mov
and
mov
shrl
in
push
inc
orb
mov
and
add
cmp
movsl
nop
sbb
and
scas
inc
insl
mov
addr16
mov
or
pop
nop
jo
sbb
data16
iret
xor
popf
imulb
insb
mov
les
gs
and
in
mov
adc
fs
add
mov
mov
pop
pop
insl
mov
or
push
mov
movsb
adc
imul
or
enter
adc
imul
outsb
jno
imul
or
sbb
sbb
pop
pushf
sbb
pop
data16
inc
sbb
jno
sti
bound
in
pop
sbb
lds
add
adc
inc
lods
repnz
mov
addb
out
insb
dec
imul
mov
fwait
andb
imul
add
mov
scas
lret
fimull
or
int3
cmp
inc
int
subl
mov
call
sub
jae
mov
fbstp
fiaddl
jl
loopne
and
aaa
inc
push
insl
and
inc
sahf
iret
repz
enter
call
add
pop
jg
xor
lcall
es
push
stos
inc
movsl
repnz
aaa
fcomi
sbb
pop
or
lock
dec
xchg
das
pushf
dec
push
and
fisubrs
dec
loopne
mov
push
xor
and
mov
pusha
mov
and
cmpsl
pop
out
xor
movb
mov
es
dec
xor
hlt
mov
pop
dec
lds
push
clc
rolb
mov
outsb
inc
imul
fwait
cld
ja
inc
shlb
cli
pop
div
xchg
loop
add
and
sub
adc
loopne
mov
adc
stc
andb
js
mov
sub
jge
and
dec
inc
repnz
pop
lahf
cmp
loop
pop
inc
mov
and
mov
shrb
push
xor
ja
call
inc
mov
data16
mov
mov
or
lods
adc
into
jnp
shl
mov
insl
and
enter
mov
fidivrl
pop
pop
stc
cmp
sbb
inc
rolb
mov
loope
cmp
add
stos
jnp
in
gs
xchg
sub
jge
mov
imul
imul
cli
xchg
mov
mov
test
mov
sub
and
shll
inc
add
mov
lods
bound
lock
add
imul
dec
cmc
mov
repnz
out
lret
aam
mov
insb
jns
sbb
add
add
lock
dec
lds
fistpl
call
inc
xor
mov
clc
mov
cli
or
xor
andl
dec
in
repnz
addr16
mov
push
retw
scas
dec
lods
aas
xorl
imul
and
push
imul
and
nop
je
jg
jae
lret
push
lods
mov
cmpb
test
daa
mov
arpl
lock
push
mov
je
mov
lea
and
push
fs
lock
pop
mov
sti
insl
and
push
out
outsb
leave
pop
les
xlat
scas
sbb
pop
pop
sti
mov
push
aas
nop
xor
mov
xor
sbb
lods
imul
xor
or
lret
xor
cmc
push
aaa
sti
testb
xor
xchg
repnz
jno
in
cs
sub
mov
mov
aaa
leave
jle
sbb
inc
outsb
jecxz
cli
xchg
jb
call
fistps
popa
in
test
lcall
jae
insb
ret
push
fucomip
clc
and
sbb
bnd
test
cli
jg
cmp
lods
bound
cmc
cmpsl
stos
lods
dec
clc
push
or
loope
sub
xchg
mov
cli
aaa
mov
lods
out
sbb
sub
and
inc
mov
dec
sahf
inc
mov
jo
and
dec
cmp
and
rcrb
inc
mov
jg
jmp
mov
sub
stc
data16
cmp
mov
aaa
ss
adc
sub
in
xor
ss
jno
in
jmp
test
sub
fnsave
mov
mov
je
stos
repnz
xor
jmp
cmp
aaa
xor
loope
sbb
inc
xor
mov
sbb
stc
sub
mov
sbb
mov
rorb
aaa
push
lcall
ds
dec
push
mov
mov
das
and
ljmp
adc
stos
fildl
imulb
add
xchg
cmp
xor
in
jmp
xor
xor
jae
mulb
dec
pop
aad
adc
inc
pushf
test
pop
xor
xchg
inc
ret
je
call
addr16
adc
add
repnz
push
or
repz
xor
and
out
ss
fbld
test
push
mov
sar
cmpsb
lods
cmp
mov
sub
nop
pusha
push
adc
popa
jno
lret
cs
ja
mov
ret
js
sub
mov
lds
xor
mov
or
add
add
stos
adc
imul
jp
cltd
repnz
mov
call
cmp
mov
mov
fwait
mov
sbb
lods
imul
mov
mov
mov
sahf
mov
pop
or
xor
pusha
jns
nop
xor
pop
filds
pop
xor
js
inc
dec
mov
inc
sbb
mov
push
mov
mov
sahf
sub
cmp
loope
jb
pop
push
jo
cmc
scas
fstpl
in
push
imul
orl
dec
pop
lcall
cmp
enter
mov
jns
ds
xchg
mov
push
rcrb
imul
rclb
xchg
cli
ret
pushf
dec
popf
pop
push
mov
in
mov
mov
lods
rcll
popf
adc
sbb
mov
nop
aaa
pop
rorb
xor
push
ss
cmp
cmpsl
xor
pop
inc
lret
jns
xchg
jne
adc
popf
stc
ror
aad
bound
outsb
and
adc
sbb
sbb
fidivrl
adc
xchg
or
mov
jo
dec
andb
shrl
cmp
subl
aas
lcall
lret
fdivr
rol
jno
cmpsb
sub
pop
cs
and
fsubrs
lods
dec
mov
inc
dec
xlat
sar
enter
pop
scas
lahf
cwtl
mov
icebp
or
mov
cmp
sub
cmp
movsl
mov
stos
insl
lcall
inc
inc
mov
xor
mov
clc
addr16
stos
subl
mov
cmp
xor
cwtl
sti
add
out
pop
mov
jo
iret
adc
sub
mov
jp
add
dec
xor
dec
ds
xor
ret
stc
jns
xor
insl
and
rcll
lock
xor
stos
pop
loope
lret
popf
xchg
pop
mov
or
dec
std
dec
ds
stos
popf
sub
mov
adc
loopne
xor
orb
jne
popf
and
sub
insb
pop
mov
sbb
jno
fs
mov
push
shll
sub
adc
xor
xchg
jae
shll
sub
repnz
and
and
pop
out
mov
sbb
or
mov
cmp
insl
pop
jmp
mov
popf
fidivl
mov
sub
xchg
lcall
mov
shll
icebp
jo
sub
pop
push
das
xchg
mov
loop
xor
add
mov
scas
add
shrb
lcall
pcmpgtd
cmpsb
cmp
pop
in
add
sbbl
push
imul
psubusw
mov
mov
test
dec
push
inc
inc
push
mov
movsl
sbb
sub
iret
mov
in
push
dec
pusha
push
not
int
lock
int
dec
loopne
fists
dec
lea
repnz
cmp
jl
stos
xor
repnz
ja
sub
jg
mov
xchg
dec
sbb
adc
icebp
stos
sbb
jns
aas
lock
add
mov
stos
imul
fstl
pop
pusha
or
je
sarl
test
imul
daa
and
xor
add
inc
das
or
stc
or
mov
gs
shll
sbb
roll
call
add
jb
into
aas
cmc
mov
nop
lock
xor
cmp
and
icebp
popa
test
sbb
and
gs
aaa
mov
mov
rorl
fcomps
mov
add
repz
jne
dec
xor
mov
push
inc
mov
pop
sub
mov
mov
and
mov
psllq
inc
push
repnz
jmp
les
push
test
addl
test
adc
add
inc
sub
mov
or
xor
push
mov
andl
dec
or
fidivl
mov
icebp
mov
adc
sub
je
xor
stos
sbb
adc
sub
fs
ss
in
imul
pop
sbb
mov
mov
mov
lret
jno
scas
inc
add
jnp
div
roll
push
adc
icebp
jae
jbe
sbb
add
xchg
stos
shlb
mov
inc
aad
ficoml
xor
gs
aas
sahf
push
shlb
or
adc
popa
and
and
and
orb
in
aas
push
mov
outsb
sub
push
xchg
mov
loope
push
inc
lea
mov
cmp
cmc
sub
cli
icebp
imul
lods
fistpl
cmp
push
stc
inc
push
sar
je
lods
stc
or
jl
mov
jb
popf
pusha
in
fwait
xchg
stc
adc
mov
adc
pop
mov
inc
out
in
pushf
sbb
jp
mov
adc
repnz
sahf
pusha
leave
mov
repnz
xor
or
fs
movsb
cmp
mov
scas
sub
mov
mov
mov
in
inc
mov
insb
adc
and
add
push
aam
icebp
or
leave
mov
push
gs
loop
pushf
xchg
push
or
mov
jecxz
pusha
and
sub
lods
lods
pusha
loop
dec
jge
mov
mov
push
pop
daa
push
lahf
adc
cmpsl
aaa
mov
and
popa
mov
iret
xor
rcl
or
pop
loope
fwait
adc
leave
cmp
fsubs
sub
sbb
xchg
or
adc
xchg
or
mov
mov
push
inc
ret
xchg
mov
data16
jle
sbb
dec
xchg
movsl
rcrl
and
shl
pop
jb
rcl
or
or
dec
pop
ja
es
add
subl
cmp
jb
fucomp
data16
mov
testl
leave
jno
loop
mov
xor
jb
shll
mov
inc
leave
andb
fildll
and
fsubrs
loop
add
cli
outsl
and
int3
jge
loope
or
fs
push
repnz
mov
not
das
or
lods
test
mov
mov
and
cld
enter
mov
lods
mov
inc
int
pop
je
jne
jbe
mov
or
pop
xlat
popf
fcomps
lahf
inc
movsl
dec
ret
jo
dec
jg
movsl
mov
or
dec
arpl
daa
add
adc
add
movsb
mov
jecxz
ljmp
xor
inc
rorb
fs
mov
stc
dec
js
cmp
or
inc
xor
in
mov
adc
fs
pop
pop
jecxz
mov
and
mov
in
icebp
je
adc
push
dec
mov
xor
adc
mov
push
mov
adc
icebp
and
push
sbb
rorb
fiaddl
add
lods
cmpsl
adc
push
shll
sahf
mov
jns
rorb
add
cmp
xchg
pop
les
int
pop
adc
cwtl
mov
or
add
aaa
cmp
loop
push
pop
and
pop
cli
inc
xchg
push
jp
jl
mov
push
xchg
outsb
add
or
aad
jo
push
mov
mov
lods
jb
lods
pop
and
insl
adc
mov
mov
les
test
imul
jle
out
sbb
in
mov
jle
mov
jmp
jo
das
cmp
push
or
mov
andb
sbb
and
fdivrl
test
lods
push
and
jg
lods
rcrb
pop
adc
subl
mov
mov
or
or
adc
adc
das
gs
outsl
dec
mov
inc
pop
or
mov
mov
data16
pop
outsb
and
test
out
rcrb
jno
test
mov
gs
sbb
repz
sbb
pushf
jo
jp
or
add
popf
subb
or
inc
push
imul
lcall
push
cltd
scas
and
jo
imul
test
mov
adc
outsb
addr16
call
sbb
add
gs
cmpsl
pop
jnp
cmp
mov
bound
fnstenv
movsb
xor
adc
mov
or
sbb
add
or
imul
or
orb
or
xor
add
or
fs
imul
jo
mov
insl
mov
or
pop
jo
mov
and
sub
or
aaa
nop
jo
push
bound
test
test
mov
dec
push
or
jo
popf
cli
sbb
jno
or
aas
fsts
data16
data16
call
outsb
stos
sbb
sbb
adc
bound
and
inc
push
in
loopne
sbb
nop
lock
sbb
or
xchg
mov
jo
mov
dec
popf
push
xlat
sbb
mov
mov
cmp
sub
aad
sub
decl
or
or
jnp
adc
jl
add
pop
movsl
mov
fistps
pop
push
xchg
or
imul
andb
enter
notl
movsb
adc
insl
xor
ret
xchg
pop
jecxz
psrlw
dec
leave
fidivrs
dec
rclb
fsqrt
lret
out
lods
or
pushf
xchg
or
pop
mov
pushf
mov
test
mov
dec
outsb
repnz
jo
xchg
and
or
mov
mov
movzwl
in
dec
mov
jecxz
and
addr16
adc
les
inc
xchg
push
push
dec
ja
lret
ret
xor
stos
nop
fidivs
adc
adc
lock
lods
out
mov
imul
jecxz
xor
sub
aas
dec
iret
pop
sbb
lods
jg
lret
jbe
cmpl
sahf
mov
cmp
cld
std
lods
sbb
sbb
outsb
dec
test
add
sub
push
ret
dec
jge
pop
jl
sub
insb
inc
in
les
pop
std
adc
mov
dec
clc
mov
add
cmp
cld
sahf
jecxz
add
sub
insl
mov
addr16
shrl
mov
verw
sub
jge
pop
push
push
sub
dec
push
inc
cmp
xchg
adc
out
insl
mov
ss
lcall
mov
mov
cmp
mov
mov
adc
mov
andb
mov
mov
fcoml
repnz
xor
inc
nop
push
and
incb
out
and
or
inc
xchg
adc
mov
push
adc
shlb
jbe
or
add
loopne
js
and
cmc
pop
cmp
aas
dec
and
xor
push
add
stos
pusha
pcmpgtd
stc
pop
mov
arpl
mov
addr16
stc
adc
mov
jp
mov
stos
inc
lods
mov
add
ss
pushf
mov
fstpt
mov
test
lds
in
cmp
pop
dec
mov
xor
or
add
cmp
push
mov
and
not
sarl
mov
sarl
dec
mov
mov
push
popa
lcall
sar
push
iret
mov
dec
mov
ret
testl
sbb
xchg
or
leave
adc
push
cmp
mov
or
jne
inc
jbe
inc
shlb
sub
jl
out
add
rcrl
mov
orb
cmp
test
pop
push
xchg
outsl
dec
sarb
mov
mov
test
push
outsl
mov
shrb
push
push
and
aam
pop
stc
push
mov
mov
cmpsb
mov
arpl
divps
cld
inc
sbb
stos
ret
jns
imul
repnz
or
xor
push
xchg
sti
je
fisttps
mov
sub
clc
stc
lret
sbb
rcll
mov
cmpsb
mov
xor
jb
or
subl
lods
adc
or
int
repnz
or
xchg
mov
dec
adc
add
cmp
repnz
hlt
sub
fisubl
fmuls
imul
loope
icebp
xor
xor
or
pop
sar
sti
pop
xchg
push
sahf
nop
in
push
fidivl
sub
call
rcll
push
mov
fldt
test
testb
setp
or
and
and
dec
inc
sub
fldl
mov
jno
js
lea
adc
dec
sahf
lods
movsb
jne
repz
add
xor
push
ljmp
sbb
xchg
sub
cwtl
ja
mov
pop
icebp
mov
adc
mov
mov
push
add
mov
cwtl
pop
xchg
xor
rolb
aaa
lods
mov
ds
mov
jo
testb
jl
stc
dec
test
shrb
jb
xchg
add
push
cmp
pop
adc
cmp
mov
scas
stc
dec
xor
xor
mov
inc
mov
and
test
insl
loopne
mov
call
rorb
lcall
cmp
out
inc
mov
xor
es
dec
orb
into
aaa
movsb
xchg
inc
add
dec
aam
or
pop
lcall
cmp
push
cwtl
mov
pop
loope
jae
ss
xchg
std
and
cli
xchg
mov
dec
jae
int
mov
stos
jbe
add
adcl
sbb
mulb
aam
inc
add
roll
adc
test
lret
lock
popf
imulb
loope
mov
in
dec
sbb
add
in
lods
mov
repnz
movsl
mov
stos
testb
stc
stos
pushf
jg
cmpsl
sbb
adcl
outsl
cwtl
jae
xchg
loop
iret
iret
pop
jmp
out
pop
push
dec
loopne
dec
mov
jl
lods
lods
in
cmp
test
gs
pcmpeqb
movsb
dec
dec
jmp
inc
add
mov
mov
aam
js
and
push
xor
shrb
push
dec
mov
dec
or
adc
or
movsb
inc
cmp
jnp
or
movsb
dec
ret
mov
pop
enter
pop
out
xor
sbb
out
int
in
jo
mov
in
mov
repnz
mov
mov
outsb
or
mov
inc
xor
and
sbb
sub
pop
sbb
cli
out
fcmovnb
or
mov
cli
ss
and
es
testb
sub
xor
cmp
imul
repnz
lcall
sbb
fiaddl
int
test
push
xchg
aam
xor
in
pop
enter
scas
icebp
std
ljmp
stc
insl
dec
stos
out
and
and
mov
sti
push
inc
insl
dec
jmp
aas
and
mov
outsl
cltd
aas
stos
mov
pop
shrl
mov
inc
inc
mov
xchg
pop
mov
mov
cltd
and
cmp
pop
mov
push
xor
filds
aaa
add
xor
in
cmp
dec
icebp
xchg
es
dec
loop
cmp
loop
movsl
movsl
fs
xchg
into
push
mov
lcall
cltd
ds
insl
add
lds
ss
and
adc
add
xchg
cmpsl
vmovsd
dec
fisubrs
xor
cmpxchg
mov
push
jae
add
push
push
jnp
adcl
jns
imull
dec
jae
test
cld
dec
inc
popl
hlt
xchg
dec
mov
out
mov
cmp
es
jge
imull
adc
adc
add
gs
pop
imul
and
xor
stc
and
ret
push
dec
xor
bound
xchg
outsb
aaa
les
repnz
inc
and
adc
push
popf
dec
arpl
mov
cmp
dec
and
xchg
xlat
xor
pop
mov
hlt
jbe
pusha
xor
adc
cld
lds
lahf
out
int3
and
xchg
inc
cmp
pop
std
inc
nop
shlb
fisubrs
aam
insl
mov
push
dec
and
pushf
sbb
ret
repnz
xor
popa
add
push
aas
icebp
neg
and
jb
cmp
or
rcrl
or
insl
mov
push
sbb
xor
xor
rolb
mov
lahf
mov
mov
rclb
mull
in
push
push
dec
add
mov
ds
push
push
aas
xlat
arpl
setno
shl
into
insb
data16
pop
mov
repz
arpl
out
dec
loopne
push
mov
push
hlt
test
test
popa
cltd
dec
cmp
mov
push
loope
xchg
adc
pop
push
and
add
mov
aam
mov
push
push
ficomps
repnz
pop
sub
mov
lret
fistpll
mov
std
mov
mov
fdivs
mov
adc
arpl
fsubr
dec
inc
mov
nop
setl
xor
mov
or
imul
adc
test
fcmovne
push
insl
pop
sub
in
shll
stos
pop
lods
or
int
repnz
cmp
pop
mov
lock
cs
mov
push
adc
aas
mov
lret
inc
or
stos
lods
pop
int
push
call
jg
clc
test
fs
jno
decl
jnp
add
add
ficomps
inc
xor
aaa
sbb
dec
scas
dec
mov
fildll
lret
shlb
sahf
pmaddwd
xor
lock
movsl
inc
sub
fldcw
in
mov
lods
ljmp
lea
jno
insb
in
cltd
add
mov
js
add
ljmp
mov
mov
adc
mov
shrl
out
loope
adc
outsb
lret
mov
lods
inc
xor
mull
adc
gs
add
pop
push
xlat
push
lret
mov
push
addb
sbb
cmp
lahf
sbb
cmpsl
dec
mov
pop
ja
or
sbb
adc
sarb
adc
push
iret
or
xchg
xchg
cltd
sub
test
push
in
fiaddl
mov
or
mov
add
jo
nop
sub
ljmp
ds
jmp
or
and
adc
pop
nop
mov
lret
xchg
test
loop
and
jmp
xchg
adc
push
and
aaa
repnz
xlat
outsb
stc
fs
jno
mov
dec
sub
std
out
insl
mov
fstps
lock
push
mov
outsl
cmp
ljmp
ljmp
mov
cld
mov
sub
xor
cmpsb
jnp
rolb
popf
fisubs
ljmp
sub
xlat
cmp
loopne
stc
roll
add
shll
mov
mov
push
dec
fisubrl
mov
repnz
ret
pop
lret
lcall
mov
in
ljmp
or
stos
insb
sub
mov
pop
movsl
and
cmc
mov
nop
dec
gs
lods
cmp
iret
jo
cmp
popa
insb
mov
popa
adc
pop
aad
cs
sbb
ds
sbbl
push
lahf
pop
andl
cmp
inc
mov
outsl
add
cmp
add
jmp
or
adc
xchg
scas
dec
lcall
or
in
mov
xor
jno
mov
sti
mov
push
mov
push
icebp
imull
test
cmp
bound
outsb
out
jo
mov
mov
ret
cmp
pop
fs
fiaddl
in
ja
ljmp
movsl
pop
inc
aam
popf
xlat
xchg
dec
sbb
add
hlt
lock
popa
inc
mov
jl
pop
fsubrl
dec
insb
adc
mov
leave
out
xlat
sarb
or
cmp
aaa
repz
nop
divb
push
pop
xor
lods
inc
push
mov
mov
call
fwait
cmp
push
in
lret
mov
fldenv
xchg
cmp
lods
jno
call
sahf
adc
insl
and
addr16
jnp
sbb
out
jp
sbb
pop
addl
add
in
cli
fs
imul
aas
into
and
aaa
sarb
imul
test
lods
xchg
pop
xchg
adc
sahf
pop
jbe
or
pushf
aad
into
fidivs
popf
int
xor
cmpl
add
xchg
mov
adc
lea
dec
in
xor
shll
or
adc
sahf
mov
mov
stos
adc
movsb
xor
add
lds
dec
shlb
cmc
mov
mov
inc
repnz
mov
sub
xorl
jb
mov
inc
mov
cli
pop
in
or
inc
ja
sbb
data16
lret
test
popa
adc
cmp
arpl
mov
sbb
cmp
mov
ss
enter
and
shl
or
mov
es
xor
cmp
outsb
push
fs
and
fisubl
adc
popa
push
xchg
je
test
dec
in
les
test
shlb
lret
inc
cmpsl
and
imul
jbe
jp
jge
or
das
xor
push
idivl
mov
or
mov
dec
loop
lods
ljmp
lcall
inc
scas
out
xor
push
mov
repnz
cmp
lods
ret
or
inc
or
das
stc
scas
outsb
lock
cmp
outsb
insb
in
cwtl
outsb
imul
dec
mov
pusha
or
loop
xchg
mov
jno
jnp
insb
cltd
arpl
pop
jne
lcall
repnz
add
subb
ja
sbb
call
sbb
sbb
dec
test
imul
pop
inc
outsb
and
ljmp
insl
movsb
and
insb
xor
mov
dec
lods
insb
cmp
mov
mov
cwtl
insb
fwait
mov
out
outsb
ja
sub
mov
test
sbb
das
adc
push
arpl
pop
repz
mov
test
sarl
insb
xchg
mov
sbb
das
sbb
in
mov
mov
sbb
lret
sbb
out
lods
mov
fnsave
cmpb
mov
xchg
arpl
xor
or
mov
ljmp
sub
mov
mov
fildll
lods
adc
pop
jbe
and
mov
inc
mov
insb
mov
aas
fstpt
movsl
testb
add
sbb
repz
adc
int
mov
inc
jo
add
xchg
arpl
data16
or
mov
insl
push
xor
xor
dec
xorl
and
lret
add
test
arpl
sub
mov
push
push
adc
sbb
lds
in
insl
push
test
gs
fcomi
sub
xor
outsb
daa
pop
insb
cmp
and
push
mov
push
xor
sub
imul
shll
inc
int3
xchg
or
arpl
loop
add
and
push
fwait
test
cmp
xchg
xor
arpl
in
sub
nop
and
roll
je
mov
mov
outsb
mov
fistps
lret
xor
out
pop
mov
and
lock
and
push
test
je
fldcw
loope
orb
sti
adc
cmp
jns
sahf
out
gs
lahf
adc
rorl
fbld
inc
adc
shll
pop
les
nop
sarl
fmul
sbb
jno
sub
repnz
sbb
out
push
fmull
fisubl
in
fcompl
xchg
and
dec
pop
popf
sahf
lcall
sbb
push
sub
pop
repnz
push
cli
sahf
pop
mov
and
in
sub
in
push
sub
xlat
pusha
pop
mov
flds
pop
xchg
push
insl
repnz
lcall
js,pn
cli
push
sbb
dec
movsb
mov
scas
mov
xlat
push
stos
or
stc
xor
xor
out
stos
push
mov
mov
xlat
push
push
loope
loopne
or
jl
repnz
sbbl
movsb
dec
lods
bswap
jno
sbb
fildl
loop
icebp
xor
insl
pop
dec
js
mov
movsl
pop
sti
in
aad
rcr
cmp
movsb
push
popa
gs
xor
andb
loopne
add
pop
push
cmpsl
add
cli
xor
imul
imul
xchg
in
dec
outsl
cltd
outsb
adc
sahf
clc
lret
and
add
stos
daa
jne
xchg
sbb
ss
lock
mov
lcall
mov
xorl
add
mov
repz
pop
mov
add
mov
mov
add
cli
inc
mov
and
adc
inc
out
mov
loope
mov
xchg
pop
adc
add
mov
and
xor
rcrb
push
or
jno
sub
mov
repnz
or
or
or
cmpsb
dec
lods
sbb
mov
stc
adc
fs
insb
adc
sub
mov
aad
cwtl
movsb
cltd
pop
dec
outsb
bound
popa
nop
aam
ret
mov
lcall
daa
loop
dec
stos
add
cmc
xchg
imul
push
ljmp
movsl
orb
data16
pop
mov
cld
sbb
dec
movsb
jno
sahf
push
adc
xchg
adc
clc
fbld
nop
dec
mov
rclb
push
adc
sub
xor
jge
imulb
jns
rolb
and
stc
sbb
pusha
dec
mov
jae
mov
stc
rorl
cmp
mov
and
imul
and
popa
dec
adc
xor
and
fildll
arpl
dec
std
and
inc
inc
add
mov
and
inc
push
call
or
stos
pop
adc
shll
and
aaa
addr16
outsb
sub
pop
jecxz
inc
add
not
pushf
push
cmp
ds
loope
push
and
or
rcrb
and
jp
dec
insl
xor
imul
fstpt
lods
dec
lock
out
cltd
and
sahf
xchg
pop
mov
repnz
mov
adc
sub
jns
push
xchg
popa
push
push
shl
xchg
pop
sub
dec
adc
and
leave
mov
push
imul
add
fs
mov
cli
dec
xor
adc
movsl
cwtl
shrl
dec
mov
arpl
int3
dec
pop
or
repnz
imull
or
scas
push
dec
fs
push
mov
mov
mov
xor
push
insl
mov
fisttps
add
ret
mov
adc
dec
in
pop
clc
js
repnz
orl
icebp
insb
adc
jnp
repnz
outsl
pusha
sahf
int
test
pop
clc
shrb
jl
cmp
into
pop
and
orl
fxam
dec
lds
jo
push
mul
dec
leave
mov
add
andb
mov
bnd
add
jns
adc
dec
lret
stc
inc
mov
ljmp
gs
adc
frstor
lahf
mov
mov
lods
dec
rcll
inc
mov
adc
jbe
mov
clc
inc
mov
mov
int3
movsl
repnz
fwait
lret
fwait
add
insb
sub
cbtw
or
adc
movsb
push
jb
pop
add
adc
out
mov
xor
mov
pop
ret
cli
inc
leave
aad
fs
mov
sbb
repnz
or
testl
iret
xor
inc
mov
stos
sarl
pop
pop
ss
fidivl
inc
jg
mov
dec
add
xor
add
in
mov
popa
adc
mov
cmp
dec
insl
adc
loopne
adc
shll
push
insb
dec
iret
push
push
sub
mov
mov
outsb
fdivl
mov
roll
pop
fisttpl
lods
cmp
xor
into
mov
push
test
popf
xor
xlat
mov
std
push
ret
pop
aam
dec
ljmp
push
dec
repnz
aam
mov
xor
call
pusha
aam
mov
insl
stos
jl
cmp
push
inc
jne
faddp
sbb
mov
jnp
mov
jbe
lretw
push
dec
inc
mov
insb
push
mov
dec
or
or
daa
mov
adcb
dec
xchg
cmpb
aaa
adc
outsb
test
push
mov
ljmp
jg
sti
xchg
stos
cmp
jecxz
sbb
jl
vsubpd
push
movsb
insb
jns
adc
ds
cmpsb
xor
scas
sbb
dec
in
mov
push
dec
sbb
pop
inc
lcall
mov
push
movsl
jno
xchg
push
out
adc
cmp
shlb
xor
jp
push
std
and
stos
lret
xor
lcall
jmp
mov
fsts
mov
in
adc
sbb
jmp
insb
std
daa
jmp
aam
xsaves
xor
jmp
int
imul
repz
fsubrs
fwait
mov
insb
pop
mov
mov
adc
adc
insb
dec
or
adc
out
mov
inc
cmp
outsl
jp
sub
jb
out
xor
add
int
nop
adc
or
imul
bound
shrb
xlat
push
insl
push
insb
inc
cmc
clc
push
fwait
insb
pop
js
icebp
inc
loopne
mov
mov
in
mov
or
push
mov
lods
xchg
sbb
xchg
test
dec
jmp
dec
cmp
stc
mov
add
lret
loope
xchg
fldt
cmp
mov
aad
mov
push
lea
xor
jge
ret
mov
push
add
mov
sub
xchg
gs
inc
sahf
mov
mov
push
nop
shll
shlb
jecxz
sub
cltd
mov
mov
icebp
enter
insb
push
lcall
push
out
xor
add
or
sbb
insb
int3
jns
aad
or
cmp
out
xlat
fadd
lret
fists
in
clc
bound
aad
icebp
lret
imul
inc
insb
lcall
lahf
cli
insb
xor
movsb
mov
rorb
push
adc
push
insb
fwait
cwtl
sub
and
popf
icebp
fldenv
or
or
sbb
cwtl
push
lods
add
adcb
insb
or
cmp
inc
pop
sbb
insb
add
jnp
mull
sub
mov
jo
add
sarb
in
cli
cmc
mov
fcompl
jo
loope
insb
xor
cltd
adc
scas
sub
pop
jl
pusha
xchg
mov
test
and
push
mov
and
mov
inc
mov
xchg
lea
rcrl
insb
sbb
pop
aad
cmp
push
jecxz
push
jo
push
xor
sbb
push
pop
gs
lcall
gs
inc
loope
in
outsb
mov
dec
dec
test
dec
insb
mov
add
popf
lea
inc
mov
mov
cmp
push
call
scas
add
lcall
jmp
pop
mov
lahf
movsb
adc
xchg
adc
xor
fbstp
pop
sub
pushf
or
inc
fdivrp
cmp
and
add
xchg
mov
push
mov
jmp
sub
mov
enter
insb
gs
xor
and
imul
dec
push
adc
or
cmp
jo
pop
push
lods
repz
jge
pop
mov
mov
push
stos
or
arpl
dec
cmc
andb
or
gs
inc
pusha
pop
jl
aas
and
sub
push
insb
pop
addl
xchg
popf
mov
sub
insb
icebp
test
pop
mov
lods
sbb
jp
inc
call
scas
lcall
add
pop
movsl
clc
push
out
fsubrs
jns
repz
mov
add
mov
iret
cmpsb
sub
mov
push
cmp
ret
sbb
fsubs
fstps
call
adc
das
test
adc
sub
adc
in
adc
lahf
scas
es
repz
sar
sub
add
iret
insb
lret
jle
shrl
or
xor
insb
pop
mov
and
lods
mov
test
push
jl
mov
pop
push
pop
mov
pop
xor
or
insb
lock
or
mov
dec
inc
pusha
insb
call
push
movsb
iret
sub
xor
mov
xlat
add
mov
sahf
xlat
push
or
sub
jge
push
int3
fwait
mov
sub
in
dec
inc
fisttpl
popl
add
inc
xor
mov
int3
insb
lods
jb
sbb
insb
icebp
in
outsl
pushf
lcall
ja
repnz
leave
or
aas
loope
gs
sbb
pop
xlat
dec
insb
fiaddl
jne
insb
xor
sub
call
loop
les
xor
insb
scas
sub
repnz
cwtl
in
jmp
add
dec
shrl
xor
movsb
jne
out
fsubrs
jl
adc
mov
pop
aas
insb
push
inc
ret
test
jecxz
insb
popa
iret
stos
repz
sarb
loop
cmpsb
filds
inc
push
insl
rcll
push
jle
mov
insb
cmp
jns
mov
insb
push
mov
add
xchg
mov
inc
test
faddl
push
mov
in
and
dec
faddp
divb
insb
notl
xorl
out
loope
jo
adc
mov
cmp
out
pop
sub
pop
fisubrs
dec
jae,pt
adc
mov
xor
push
orl
lock
xor
iret
movsb
pusha
inc
jl
enter
xor
inc
clc
xor
idivb
imul
enter
idivl
lods
adc
gs
cld
mov
or
pop
jmp
pop
insb
loope
xor
mov
insb
adc
cld
es
insb
je
dec
sub
stos
popf
lock
cwtl
pushf
cmp
push
insb
mov
dec
call
push
fldl
out
aas
js
sarb
in
lock
push
enter
fistpl
mov
mov
arpl
es
loop
dec
loopne
stos
lock
insb
imul
out
sbb
lock
ret
xor
ss
inc
dec
aas
mov
stos
push
pushf
andl
aas
lret
dec
movsb
cmp
div
xor
jne
xchg
xchg
addl
fimull
and
jg
xor
sub
testl
fsubrl
pop
push
in
aam
lock
stos
aas
pop
insb
lock
mov
pop
and
fsubr
adc
pop
xor
insb
and
ret
mov
cmpsb
outsb
sbbb
mov
movsb
repnz
xchg
cmp
mov
sbb
pop
in
push
insb
jge
or
xchg
fnstenv
test
xor
cmpsb
cmp
inc
insb
lods
adc
dec
sub
add
sbb
pop
cwtl
shrb
out
cmpsb
or
pop
fsts
out
icebp
pop
fmuls
cwtl
inc
adc
or
mov
jmp
cld
in
in
pushl
inc
bswap
xor
lahf
or
rorb
push
gs
and
mov
mov
xchg
jb
scas
mov
insb
lock
ss
add
test
insb
sbb
pop
jo
das
xchg
or
push
jb
cmp
mov
pushf
pusha
push
adc
loope
lock
jnp
aaa
lods
and
jle
sbb
adc
xor
sarb
sbb
lea
insb
ret
cmpsl
or
add
push
aaa
or
lods
sbb
push
movsl
pusha
test
xor
jl
inc
cmp
in
jmp
cmp
les
push
xchg
sub
mov
jge
adc
mov
stc
insb
push
mov
or
cld
mov
pop
lods
lds
jmp
fcoms
jb
push
pushf
sbb
lock
jecxz
xchg
lods
mov
arpl
inc
jmp
mov
outsl
out
sbb
gs
fldcw
adc
or
add
in
mov
mov
arpl
mov
jno
insb
fidivs
push
adcl
stos
xchg
or
xor
jb
push
lds
fildl
jecxz
mov
cmpsl
xchg
adc
pusha
add
sub
mov
dec
xlat
mov
divb
shlb
mov
mov
stos
outsl
addr16
das
rorb
insb
mov
mov
mov
aas
push
cmp
mov
pop
call
push
or
ret
adc
das
mov
jmp
sbb
add
data16
pusha
inc
scas
lret
push
sbb
sub
es
xor
mov
fs
jp
imul
sbb
gs
std
repnz
aam
gs
cwtl
mov
popf
insb
pop
mov
pop
and
insb
sbb
sub
xchg
push
iret
fs
popf
pop
jo
cwtl
dec
or
inc
out
push
insb
or
pop
pop
xchg
dec
loope
inc
out
jo
js
adc
sbb
adc
sbb
add
sbb
mov
insb
sbb
mov
jecxz
jge
insb
sarl
push
insb
or
iret
jp
xor
lods
subb
repnz
push
mov
push
jecxz
sarl
add
repz
sbb
and
jl
jb
xchg
dec
sub
jo
rcrl
cmp
jne
push
push
and
push
or
ss
adc
cmpsl
and
xchg
pushf
sub
lods
sub
je
and
mov
sub
cmp
insb
fcompl
in
mov
insb
xchg
mov
lcall
shll
sbb
nop
pop
adc
cwtl
notb
and
aaa
mov
sub
in
in
ret
outsl
and
fs
insb
mov
add
xchg
adc
inc
pop
sbb
shlb
daa
lock
in
xchg
sbb
in
mov
loop
mov
push
dec
or
jle
insb
add
or
ret
stos
and
lock
mov
inc
call
fstl
or
sbb
xchg
sbb
insb
mov
cmp
or
adc
int3
sbb
pushf
daa
and
mov
add
ja
adc
mov
cmpsb
pop
cmc
push
fsubp
dec
test
test
es
jge
sbb
insb
xchg
mov
shll
rcl
je
imul
sub
mov
and
insl
or
mov
sbb
leave
gs
inc
iret
insl
sahf
aam
std
in
mov
jmp
dec
add
jne
mov
data16
in
adc
jg
xor
sub
dec
sub
lods
cwtl
in
cmp
shrb
xchg
test
jnp
nop
das
inc
fmull
ljmp
sbb
ja
aas
cmp
jae
or
test
pop
mov
jnp
and
in
push
xchg
insb
loop
and
cs
or
js
and
mov
cmpsb
xchg
mov
sbbl
xchg
insb
jmp
test
jg
xchg
cmpsb
or
lret
and
and
mov
cmpl
or
jecxz
sbbb
jmp
stc
shll
push
into
cmp
andb
add
or
daa
mov
xor
or
fs
stos
xor
push
lods
lock
imul
sub
ficomps
movsb
lods
inc
cmp
jp
in
imul
movsb
xchg
and
jg
repnz
aam
cld
sub
mov
dec
out
xor
jno
stos
adc
push
sub
cmpsb
std
outsl
addr16
daa
outsl
in
jno
jno
xchg
test
push
cmpsb
imul
cmpsl
insb
push
xor
mov
addr16
bound
mov
imul
es
cmpsb
addr16
jmp
cmpsl
les
lea
test
data16
out
dec
sub
sbb
jmp
jmp
inc
sbb
jmp
es
push
rol
pop
sub
sbb
dec
xor
call
sub
in
pop
and
out
mov
sbb
xor
add
imul
or
data16
insl
mov
call
jno
es
mov
sbb
test
sub
sub
bound
push
fsubs
jns
stos
push
mov
cmpsb
sub
lods
inc
addr16
push
out
mov
or
jo
xchg
mov
in
cmpsb
out
out
dec
sbb
mov
call
sub
fildll
mulb
insl
or
test
call
jmp
das
nop
cli
pop
out
push
add
cmpsb
call
test
jno
jno
call
sub
cmpsb
dec
dec
jno
or
cmp
fs
mov
call
out
daa
cli
ljmp
add
pusha
js
pushf
sbb
and
outsl
shll
xchg
push
popf
and
mov
mov
cmpsb
imul
adc
fs
or
mov
sub
sub
imul
sub
cmpsb
retw
imul
push
mov
sub
cmpsb
cwtl
mov
dec
lret
sbb
jnp
movsl
out
xchg
cwtl
popf
sbb
mov
sub
push
xchg
les
mov
mov
sub
fwait
jmp
out
dec
in
shrl
repnz
leave
pop
test
cmp
sub
out
lods
jae
mov
ret
push
adc
neg
xchg
rol
push
sbb
push
btc
sar
push
bsr
or
movzbw
btc
mov
sete
rol
ror
call
pushf
or
movb
lea
je
pusha
cmp
pushl
push
jmp
bt
stc
sub
cmp
pusha
stc
pushl
popl
cmp
cmp
cmp
pusha
lea
ja
sbb
cmp
sub
btc
rcl
shrd
add
ror
rol
lea
shl
mov
seto
pusha
rcl
mov
cmp
repnz
pusha
lea
jne
sete
movb
jmp
je
pop
iret
mov
jnp
arpl
aad
int
xchg
dec
lods
ficoml
cmp
add
add
jg
add
sbb
pop
lds
loopne
sub
lock
rep
adc
ficoml
xorl
mov
add
inc
call
lea
jne
mov
push
push
pusha
lea
jmp
xchg
push
jae
sub
out
popl
sub
sbb
xchg
cmp
insb
fwait
xor
or
mov
pop
mov
inc
lahf
insb
mov
popa
mov
cmp
xchg
rorl
daa
addr16
fsubrs
call
sub
dec
fs
std
repnz
xchg
sahf
repz
dec
jns
xorl
imul
scas
or
pop
fsub
inc
mov
add
stos
mov
or
test
push
cmc
dec
and
cli
cmpsb
add
xchg
out
mov
xor
pop
pop
js
and
push
sbb
jbe
xchg
fwait
pop
fsub
lret
imul
or
je
xchg
pop
mov
cltd
mov
call
aam
cltd
out
outsl
aad
inc
into
outsb
push
clc
mov
xor
in
out
popf
push
movsl
mov
mov
mov
jo
dec
roll
jns
push
rcrl
inc
add
rsm
xchg
jecxz
xor
push
xor
pop
add
out
aam
scas
jmp
mov
shll
xchg
mov
clc
sub
cmp
mov
mov
jb
cs
xchg
jecxz
xor
insl
xchg
push
leave
nop
mov
xchg
mov
call
outsb
aad
adc
lods
shll
jp
icebp
testb
lret
clc
imull
mov
pop
fwait
imul
outsl
pop
add
in
ret
fwait
movsl
inc
sub
outsb
in
je
sub
enter
add
fcomip
fidivrs
sbb
mov
and
xchg
mov
sti
sbb
mov
pop
mov
rorl
sbb
mov
lock
mov
in
pushf
movaps
push
iret
daa
arpl
pushf
pushf
popf
mov
daa
ret
mov
test
push
push
gs
ds
dec
jecxz
js
pop
jg
js
add
arpl
sbb
fwait
mov
mov
xlat
pop
inc
fstl
add
sbb
mov
rcll
mov
push
pop
push
decb
xor
mov
cmp
push
add
cmp
btr
xadd
mov
ror
movsbl
add
movzbw
cmp
pusha
movl
inc
bswap
bswap
clc
mov
stc
cmp
call
or
xchg
mov
push
in
mov
cli
and
add
xchg
int3
fsubrl
sbb
mov
or
shll
xchg
js
xchg
add
cmp
movsb
aad
shrl
cwtl
lods
loop
mov
in
lret
cli
or
pop
ficompl
hlt
jl
sbb
push
xor
jg
dec
sbb
mov
cmp
push
push
fstpt
pop
fmuls
pop
or
mov
push
out
pop
add
mov
pop
and
and
add
ja
ja
outsl
dec
movb
or
imul
dec
xchg
adc
and
jns
cld
pop
cmpb
insl
adcb
push
push
mov
pusha
dec
push
daa
loop
pop
xor
lahf
mov
scas
enter
test
jmp
fbld
popf
add
push
adc
add
add
add
xchg
sub
ret
call
and
ja
pushf
pushf
pusha
movl
lea
jmp
mov
mov
jns
sub
cmp
cmp
xchg
or
mov
fldl
push
push
sbb
cmp
mov
fadds
cmpsb
outsl
or
fistpll
or
mov
adc
cmp
inc
dec
mov
movsb
push
pop
inc
lds
lret
mov
cli
xchg
mov
je
xchg
mov
lret
cs
inc
cwtl
pop
pop
fwait
push
popa
inc
imul
movsb
xor
mov
in
les
jp
out
xchg
jns
out
ret
pop
adc
xchg
jmp
shlb
ss
add
ss
in
subl
sub
leave
mov
mov
sbb
outsl
out
sub
fistl
mov
jl
pop
pop
add
test
cmp
push
push
in
das
bound
fnsave
adc
dec
sub
jb
inc
test
and
xchg
daa
or
and
push
inc
mov
outsl
fwait
jle
mov
mov
mov
cli
cmp
pop
sub
push
add
adc
add
fs
jne
pusha
pushl
pusha
movw
lea
jmp
rsqrtps
movsl
mov
xor
sub
hlt
push
push
mov
and
jae
stos
lahf
jo
jns
stos
and
cmp
gs
or
rol
cld
push
pop
jo
js
fisubs
fisubrl
sbb
sub
shlb
cmp
lea
jb
call
pushf
call
mov
or
inc
movsb
sbb
sub
int3
out
ret
add
outsb
in
and
adc
mov
clc
and
and
cmpl
xorb
cmp
mov
jg
popa
test
sub
and
push
out
je
insl
add
or
clc
ss
dec
imul
div
mov
test
push
aam
aad
sbb
adc
xchg
xor
mov
mov
push
rcll
loopne
sbb
cmpsb
add
dec
xchg
fdivs
dec
bswap
rcl
push
clc
push
bsf
mov
cmc
bt
push
xor
shr
shr
push
setno
bsr
mov
call
jmp
call
cmpb
call
pushl
movl
push
movb
push
movb
lea
jmp
mov
fisttpl
dec
dec
or
fcmovu
loope
inc
pop
cli
mov
mov
loopne
gs
fs
sub
push
movzbl
adc
jb
loopne
cli
cmpsl
in
and
and
mov
push
jge
loopne
test
divb
mov
or
cli
xor
mov
repz
sahf
inc
ficoms
outsb
divb
push
addl
lret
pop
pop
pop
mov
mov
sub
inc
mov
fcoms
mov
ret
outsl
divb
mov
pushf
scas
data16
not
add
stos
stos
push
dec
push
sub
or
shlb
mov
mov
jecxz
mov
fs
ja
push
lea
jb
clc
pushf
cmpb
pushf
pusha
lea
jne
xor
mov
call
push
call
stos
mov
mov
pushl
pushl
lea
jmp
pushf
jge
mov
or
xchg
mov
fdivr
jo
stos
lahf
pop
hlt
push
add
inc
icebp
aas
mov
scas
push
push
inc
xchg
loop
mov
enter
dec
call
or
dec
mov
xchg
fistl
push
xlat
stos
cmc
sub
call
fcompl
cmp
inc
and
movl
mov
pusha
jmp
jmp
testl
loop
sbb
sahf
gs
mov
mov
pushl
mov
xchg
fisubl
mov
enter
stos
mov
pushf
les
daa
aaa
iret
or
mov
mov
fiaddl
cmpsl
push
cmp
dec
sbb
push
arpl
enter
stc
add
call
add
test
cmp
pop
add
jmp
imul
push
cmc
test
call
lods
call
test
pushf
call
call
push
push
mov
mov
jg
ja
cmpsl
cs
xor
cmp
repz
fmuls
mov
testb
xor
pusha
xchg
insb
or
lock
xchg
cltd
and
lea
lea
shll
or
lcall
fbld
aad
icebp
cs
loop
cmp
sub
cld
inc
stos
jno
xchg
inc
das
push
mov
adc
jl
ss
adc
push
sub
insl
and
fs
sub
mov
jno
xor
scas
dec
add
inc
xchg
push
cmpb
mov
and
sti
xorl
pushf
xchg
push
mov
clc
push
out
arpl
cmc
sub
xor
rcrb
test
adc
push
ror
cmp
cvttps2pi
push
sbb
fstpl
pushf
call
cmpsb
lret
cltd
mov
mov
orl
out
fidivrs
adc
inc
dec
stc
jecxz
mov
lret
mov
xor
xor
jns
xlat
inc
aas
mov
je
rorb
dec
jo
and
cmp
nop
xlat
cmc
into
int
and
data16
lds
movsb
lods
cld
notb
out
xor
imul
test
mov
shrl
xchg
and
imul
retw
sub
out
pop
ds
add
cwtl
and
dec
lret
movsl
ja
xor
xchg
sbb
loope
xor
outsl
dec
scas
and
pushf
jg
mov
jle
imul
rorl
insl
movsl
fdivl
add
dec
mov
pop
sbbb
adcb
mov
xor
stc
mov
sub
or
lret
mov
divb
adc
xchg
lea
jbe
push
fistl
lock
in
les
push
jg
pop
outsb
stos
xchg
lock
xchg
jle
fwait
negb
mov
mov
popa
mov
imul
jp
lret
xor
pop
push
xchg
xor
adc
lea
xor
loopne
in
imul
cmp
jle
lock
fwait
mov
xor
stos
lea
dec
out
inc
xchg
dec
lea
ss
pop
mov
leave
sbb
pushl
sbb
lcall
lock
je
xchg
add
mov
ret
jl
repz
std
imul
repz
push
out
jo
sarb
pop
dec
les
imul
pop
xchg
sub
jae
and
add
int
aaa
jnp
jns
sbb
imul
loopne
or
test
loop
sub
pop
fsubp
mov
mov
call
outsl
mov
mov
lcall
sbb
push
jns
add
xor
gs
mov
sbb
dec
adc
or
mov
jl
loope
xchg
int
cmp
pop
fdivr
dec
sub
or
subl
mov
lret
add
jno
ljmp
bound
mov
mov
mov
shl
cmpsb
push
enter
lds
sbb
and
testb
je
xlat
inc
xchg
cmp
stc
cs
imul
rcr
popa
and
test
enter
and
insl
cld
je
aaa
insb
icebp
stos
jb
icebp
pusha
call
fs
sub
add
mov
fstl
loopne
mov
ja,pn
inc
xor
mov
out
pusha
outsb
ret
push
inc
xlat
notb
mov
ljmp
xchg
inc
xchg
data16
pop
mov
fsubrp
mov
lahf
inc
ret
repnz
cmp
lret
xor
push
adc
xchg
cmpsl
fxch
mov
movsb
sahf
pop
and
and
loop
push
dec
pop
test
mov
xchg
sbb
dec
mov
es
push
pop
xchg
mov
aaa
mov
pop
imul
add
push
push
and
sub
jmp
ror
mov
fisubl
call
cmp
fs
and
mov
adc
sbb
popa
mov
add
sub
mov
xor
int3
int
adc
dec
xchg
stos
mov
push
into
pop
test
xchg
add
out
pop
cmp
cmp
inc
mov
cwtl
loop
mov
fisubl
mov
and
mov
insb
sbb
mov
mov
mov
xlat
cmp
push
imulb
push
mov
adc
push
jp
enter
sarb
dec
jle
pushf
jno
stc
pop
mov
ror
pusha
aam
xor
inc
fidivs
fsubs
lea
mov
sub
xor
lods
and
cwtl
cmpsl
xchg
sub
xchg
stos
ret
cmp
movsb
gs
out
jle
xor
xchg
mov
in
sbb
cmp
inc
test
jmp
xor
mov
xchg
pop
addb
jb
jmp
out
add
jmp
jmp
pushf
pushl
lea
jne
aas
lea
xor
sbb
mov
test
sub
xor
rol
add
bt
mov
push
test
jmp
lea
je
push
pushf
mov
call
jmp
mov
pop
rcrl
push
dec
xor
mov
jo
adc
mov
pop
dec
adc
lods
mov
xor
ret
jb
sub
dec
fisubs
mov
jmp
repnz
mov
cli
aaa
mov
xchg
or
movsl
test
popa
xchg
ficomps
jl
xchg
daa
std
push
loopne
mov
cwtl
inc
add
stos
sar
and
jecxz
xchg
push
push
xor
dec
xor
in
stos
imul
pop
pop
arpl
jne
mov
outsb
cmpl
cmp
out
mov
test
mov
sub
push
add
movsb
lahf
dec
inc
xchg
cmp
scas
mov
adc
xchg
stos
jmp
shlb
rcll
or
cmp
shrb
lret
mov
mov
or
and
shrl
xchg
sbb
js
sub
push
loope
shld
repz
push
inc
int
mov
ljmp
and
inc
sbb
mov
xor
cltd
inc
loop
cltd
std
mov
rclb
dec
push
int
pop
pop
add
pop
mov
push
mov
or
xchg
ror
cmp
dec
mov
inc
pop
cwtl
hlt
sbb
test
sbb
aam
int3
ljmp
popfw
add
rclb
push
sbb
xor
or
and
decb
add
pushf
pusha
push
pushl
lea
jmp
xor
pop
jb
rcll
sub
sarb
cmc
inc
arpl
sub
sti
lock
aas
mov
jns
loope
loopne
out
pop
xor
nop
jne
loopne
or
mov
icebp
das
pop
pop
xor
cmp
fidivrl
push
into
cld
cmp
adc
mov
sbb
dec
push
xchg
add
inc
adc
mov
cmp
cmp
xchg
ja
test
jl
xchg
js
push
rolb
cmpsl
or
adc
rorl
jmp
push
stos
cltd
je
hlt
xchg
jp
add
xor
shl
dec
addr16
mov
cmp
cmp
jmp
pop
xchg
inc
mov
mov
cmp
and
cmc
dec
adc
xor
jns
mov
sbb
pop
sub
test
cmpsl
out
out
fs
pop
loopne
mov
pop
jle
push
cmp
lea
dec
sub
pop
pop
insl
jp
ds
and
andb
insb
mov
adc
push
shlb
jns
loopne
imul
outsb
mov
or
pop
cmp
cmp
jle
lods
call
call
popa
or
dec
mov
jo
adc
mov
icebp
add
mov
js
mov
je
inc
lret
popf
jb
ds
jne
negl
into
bound
out
mov
movsb
loope
cmpsb
sbb
addl
jmp
cli
out
fdivs
es
lcall
adc
ja
or
or
mov
jecxz
pop
mov
test
cmp
push
or
dec
pop
js
or
dec
sub
test
pop
rolb
mov
enter
ret
adc
out
push
xor
xorl
pop
add
mov
jb,pt
icebp
mov
adc
insl
sub
or
sbb
xchg
scas
mov
xchg
mov
jg
pop
sahf
mov
mov
inc
jecxz
pop
adc
adc
divb
push
and
jbe
shll
pop
cltd
add
insb
xor
leave
into
jg
sbb
out
fdivl
in
jo
push
out
and
mov
mull
mov
pusha
push
mov
out
adc
repnz
dec
je
fdivl
dec
or
sub
or
pop
test
sub
jecxz,pn
mov
push
movsl
mov
xor
les
or
cs
xchg
imul
inc
jge
ss
xor
out
inc
xchg
cmp
push
dec
jb
lods
mov
jg
mov
add
xor
push
lods
repz
data16
pop
negl
jo
lea
sub
push
and
test
negl
out
js,pt
daa
jg
imul
insl
movsl
lods
dec
ja
aaa
mov
add
outsl
out
das
cmp
int
jns
loope
mov
add
jg
pop
xlat
cmp
xor
mov
stc
int
push
into
pop
cmp
mulb
sub
xchg
in
js
lret
xor
adc
jl
aad
mov
push
jns
movsl
fisttpll
imul
stos
inc
in
daa
in
ret
xor
cmpsl
faddl
jecxz
adc
call
dec
movsl
outsl
lcall
push
xor
sub
ret
sub
lahf
js
shrb
fnstcw
inc
test
notb
int3
or
mov
outsl
mov
or
call
jns
add
rcrl
mov
mov
sub
mov
or
pop
xchg
adc
fwait
inc
out
xchg
xchg
xlat
iret
inc
xor
leave
hlt
pusha
adc
xor
and
icebp
xor
mov
into
lods
dec
shlb
xor
add
std
fwait
dec
xchg
sbb
cmp
adc
jmp
cmp
push
lea
jae
xor
cmc
mov
bt
push
mov
stc
mov
call
bt
cmp
cmp
pushf
lea
jb
call
lea
jne
call
lea
ja
jmp
call
inc
imul
push
mov
cmp
push
adc
jne
inc
jnp
mov
jae
jne
dec
lds
push
mov
add
repnz
mov
mov
xchg
jbe
cs
adc
shlb
insl
pop
bnd
sub
subl
stc
xor
push
pop
sti
jle
xchg
lcall
dec
insb
inc
jbe
outsl
inc
pop
mov
divl
pop
hlt
push
test
xor
jge
addr16
test
sub
pop
xchg
pop
xchg
fisubl
loop
lcall
pop
dec
rol
or
sbb
xorb
shl
test
popf
scas
inc
stos
in
jno
cmp
dec
mov
fimull
lds
jno
sub
push
push
gs
cmp
inc
add
push
mov
aad
xchg
mov
push
add
push
in
shlb
sbb
push
sbb
ret
adc
shll
clc
fwait
jecxz
cltd
sub
je
mov
sahf
mul
out
cli
mov
lea
jb
add
ds
xchg
test
lds
pop
jo
push
sub
mov
into
mov
bound
int3
pusha
inc
movb
inc
pusha
not
pushf
mov
call
add
add
push
add
push
add
rclb
pop
add
add
add
xchg
pusha
push
mov
push
movl
call
pop
xor
sbb
dec
dec
les
mov
insl
imul
daa
cs
data16
cmp
pop
dec
pop
push
mov
xchg
sti
push
rep
lock
test
sti
pop
mov
xchg
mov
test
jle
sbb
stos
jmp
pop
adc
mov
xlat
ss
jb
hlt
test
std
jge
sub
les
inc
mov
lret
inc
std
pop
aas
mov
lock
ret
or
in
imul
jge
push
sbb
mov
mov
lret
std
mov
xchg
das
cmp
or
push
xor
or
popf
jno
dec
xchg
leave
loopne
pop
push
or
dec
add
mov
jmp
mov
idiv
das
mov
jg
pop
cmpsb
fisubs
add
jg
iret
xchg
xchg
es
inc
call
inc
pop
mov
outsb
pusha
loope
ds
ret
mov
pusha
cmp
cmp
mov
aaa
dec
inc
mov
dec
pop
cmp
mov
outsl
and
insb
add
scas
xor
and
mov
add
sub
lcall
outsl
jae
fs
shl
stc
insl
insb
int
mov
mov
jno
mov
movl
inc
pop
insl
jne
movsl
xor
leave
sub
ret
jge
cmp
mov
mov
test
movb
test
call
mov
call
call
pushl
movl
pushf
pushf
lea
jmp
cmp
pusha
lea
je
pusha
movb
lea
jmp
incl
or
mov
adc
in
fisubs
mov
fsubs
push
inc
cmp
jle
add
xor
subl
daa
pop
rcll
lds
add
mov
mov
lds
cwtl
ret
cmp
mov
fisttpll
mov
shr
sbb
adc
or
mov
xor
mov
sub
arpl
push
add
mov
sub
outsb
lret
sahf
out
jg
pusha
rorl
scas
mov
mov
lahf
loopne
movsb
fcmovnu
mov
xor
mov
lea
and
and
cmp
rclb
dec
jecxz
jmp
mov
pusha
bt
test
add
push
jmp
fsts
fidivrs
mov
out
add
jp
mov
fildl
adc
outsl
jnp
sbb
fcmovbe
pushf
sbb
nop
mov
mov
in
inc
mov
lods
test
push
sbb
cmp
fidivrs
adc
dec
xor
shr
adc
in
test
pop
clc
movsl
mov
sub
test
mov
push
test
cmc
inc
push
imul
mov
add
lcall
loope
js,pt
pop
xor
scas
push
xor
mov
loope
pusha
and
pushf
cmc
cmp
add
mov
lea
jmp
test
cmp
pusha
movw
pushf
lea
jne
pushf
mov
jmp
lods
sbb
mov
or
mov
pop
pusha
sbb
and
std
outsl
mov
or
xor
xor
xorb
sub
or
push
fnstsw
arpl
fs
addr16
lods
adc
xchg
shrb
sub
loop
jecxz
jp
mov
xor
mov
xorl
jno
push
fsubs
push
lea
nop
int
or
pop
ficompl
push
aad
sbb
add
push
add
in
scas
into
fs
xlat
mov
insl
pushf
mov
js
mov
adc
out
adc
pop
xchg
jp
cmp
je
shrl
pusha
jl
xor
loop
mov
mov
push
mov
mov
inc
dec
bnd
mov
mov
xorl
pop
repnz
not
sahf
inc
popf
xlat
popa
lea
fs
loopne
sti
rcrl
sub
std
mov
fisttps
cmp
sub
inc
mov
ret
lods
data16
cld
ss
mov
scas
add
mov
jns
mov
in
fbstp
dec
dec
icebp
mov
or
call
pop
or
jecxz
fildll
sbb
imul
cld
in
pushf
sub
or
jp
mov
icebp
push
lods
ret
ljmp
pop
and
sub
mov
stos
jb
add
xor
adcb
or
add
mov
jae
jb
mov
xchg
add
fdivs
mov
movsb
in
xchg
pop
cvttps2pi
adc
into
scas
sbb
out
subl
icebp
xchg
push
ljmp
imul
jecxz
add
adc
mov
je
in
jae
int3
sub
arpl
push
fldt
or
mov
das
stos
push
adc
cld
dec
scas
push
in
imul
inc
aad
lcall
or
rcr
loop
icebp
mov
dec
repz
mov
xor
or
lock
pop
es
fldenv
out
addb
cmpsb
mov
and
jmp
pop
cmp
xor
jnp
dec
and
cld
cmp
mov
nop
xchg
sub
sahf
and
out
sub
pop
enter
repz
add
jnp
jp
lea
and
and
pop
arpl
lret
ficoms
mov
lea
jne
shr
ror
aaa
sub
test
ror
bt
mov
stc
clc
add
push
ror
mov
cmc
movw
pushf
test
pushl
push
lea
je
cmp
push
push
pusha
sub
cmp
cmp
cmp
jmp
inc
inc
test
inc
enter
inc
mov
test
test
dec
enter
pop
xchg
dec
xor
xor
mov
xor
pop
dec
xor
test
inc
pop
add
dec
test
xor
test
inc
mov
test
xchg
push
xor
enter
xor
imul
add
movzbl
bt
xor
bt
xor
cwtl
ror
mov
push
mov
and
sar
clc
btc
shr
shld
rcl
pop
shr
mov
call
mov
call
pop
bswap
movsbl
lea
pop
movsbw
pusha
jmp
jle
xchg
test
lret
xchg
xor
xor
mov
lea
je
pushf
pusha
adc
pusha
lea
jmp
cmc
call
lea
ja
pushf
cmc
jmp
pusha
movl
pushf
mov
push
mov
lea
jmp
jmp
lea
je
pusha
mov
clc
cmp
call
xchg
lock
testb
aad
and
xchg
jl
lods
es
xchg
mov
jmp
add
cld
mov
dec
jle
push
out
loop
nop
stc
lea
mov
nop
add
iret
inc
jle
ud0
jle
cmp
cltd
shll
adcl
push
xor
pop
adc
pop
pop
out
inc
pop
and
cmpsb
mov
inc
push
inc
or
clc
hlt
outsb
in
loop
cltd
aas
ret
leave
rcll
jns
ljmp
xor
mov
sbb
pop
or
inc
jne
mov
jbe
sti
sarb
sbb
mov
pusha
ds
lods
adc
xorb
and
outsl
push
adc
rolb
stos
fadds
jbe
inc
xor
lea
jbe
jmp
mov
mov
cmp
loop
rcl
js
mov
in
jl
mov
pop
mov
rcll
pusha
aaa
inc
call
add
push
test
cmp
mov
pushf
not
mov
jmp
int
xchg
je
mov
pop
mov
or
shll
inc
jnp
lods
mov
mov
dec
mov
cmc
enter
add
sarl
add
add
xchg
test
mov
push
pop
push
pop
xchg
stos
out
inc
clc
xor
cmpsb
adc
xor
xchg
call
mov
enter
fdivp
aas
and
xchg
pop
fbld
or
mov
andb
bound
outsb
lea
jne
xor
shl
movsbw
mov
stc
call
pusha
movl
movw
jmp
clc
or
pusha
pushl
push
lea
je
pushf
not
pusha
mov
not
mov
call
pushf
lea
jb
call
push
pushf
lea
call
call
pushf
call
movl
push
lea
jmp
pushf
lea
ja
stc
jmp
mov
popa
je
mov
adc
fildl
mov
push
sti
pop
movl
mov
movsb
subl
les
mov
inc
repz
test
std
sbb
gs
cmp
lods
lea
or
es
iret
cmpsl
das
mov
fdivrs
push
clc
mov
inc
jg
mov
sbb
add
idiv
cmp
push
ss
lock
jmp
cltd
popa
pop
xchg
inc
sar
cmp
dec
mov
pop
xor
test
popa
and
and
add
jae
mov
mov
aam
pop
pop
push
outsl
push
scas
or
inc
sub
mov
cmpsb
pop
or
rcr
xchg
mov
mov
push
dec
cmp
or
popf
jl
stc
shl
adc
mov
jbe
add
and
out
xchg
push
jmp
jbe
stc
pop
jb
or
push
filds
out
sub
aam
lock
aam
or
add
dec
outsl
arpl
inc
jb
add
or
jae
mov
xor
xchg
mov
inc
mov
add
inc
aad
xlat
clc
xor
int3
and
jl
mov
mov
sbb
jno
fcompl
outsl
pop
loop
icebp
sbb
add
test
ja
call
mov
xchg
inc
cmpsb
movsl
in
and
ja
stos
lock
stos
jge
out
jns
jno
rcrb
lods
mov
insb
pop
addr16
push
js
mov
jb
mov
jg
inc
scas
jne
push
jp
pop
jne
out
xchg
insl
mov
lock
mov
outsb
out
jge
mov
or
call
fmuls
hlt
cmp
jecxz
imul
xor
xchg
dec
mov
push
fnstsw
stc
push
ret
lret
inc
fcompp
lcall
jmp
or
and
subl
enter
mov
mov
ficompl
mov
pushl
pushl
ret
shrl
aam
mov
movb
call
cmc
lods
std
mov
test
jmp
sbb
cmp
dec
mov
sahf
inc
mov
adc
pushf
pushf
cmp
mov
push
or
mov
pusha
pushf
mov
lea
je
push
lea
setb
movzbw
mov
lea
lea
lea
movb
mov
call
das
pop
fwait
jo
mov
mov
je
cmpsb
pop
lock
loope
mov
and
mov
sbb
pushf
stos
mov
sub
jnp
cmp
outsb
les
enter
add
movsb
jnp
cmp
in
aas
outsb
adc
std
add
in
add
xchg
push
cs
dec
push
movl
lods
inc
add
aad
lods
fistl
mov
xchg
repnz
call
call
lea
jb
jmp
movl
pushl
jmp
inc
lea
push
call
mov
call
sahf
ret
cmp
mov
and
sub
lods
push
aam
ret
addr16
pop
idiv
shrl
cli
mov
xchg
push
fwait
rcl
adc
mov
mov
shll
cmpsb
pusha
pushf
movl
pushf
lea
jg
push
pushl
movl
pushf
pushf
lea
jmp
pushf
pushf
movl
pusha
mov
lea
jmp
mov
mov
not
neg
mov
push
call
scas
jmp
jo
ja
repz
ret
adc
push
icebp
leave
xor
xor
mov
scas
jb
sti
cli
ret
imul
pop
xchg
dec
pop
movsb
fdivs
into
jae
and
inc
int
mov
adc
jno
sub
call
or
fwait
mov
daa
xchg
push
add
push
pop
mov
rorb
jbe
in
test
mov
adcb
pop
out
shl
cmp
cmp
daa
das
xchg
push
add
adcl
roll
sbb
push
mov
inc
pop
ja
adc
sbb
outsl
mov
cli
shll
push
lahf
jbe,pt
lods
ror
hlt
pop
orb
jg
dec
sahf
in
enter
or
ror
leave
shl
pop
call
fwait
sub
loope
push
add
out
imul
dec
mov
xchg
add
pop
xchg
mov
dec
adc
cmp
repz
jbe
fisttpll
xor
mov
add
aas
mov
les
push
push
imul
and
fmull
xchg
xchg
pusha
xchg
insl
jge
push
test
mov
push
pusha
call
or
mov
or
into
jne
test
nop
flds
and
clc
push
repnz
xor
or
mov
pop
sbb
sub
or
mov
adc
cld
and
jae
cmp
add
mov
or
pop
push
mov
icebp
mov
jns
mov
stos
imul
outsb
mov
add
fcmovnb
xchg
dec
out
push
jae
test
cmpsl
lahf
xchg
dec
and
sysenter
xor
and
stc
push
jp
pusha
add
sbb
loopne
int
sbb
int3
in
and
cmp
aam
xchg
mov
in
test
inc
mov
mov
dec
outsb
lahf
lahf
hlt
push
pop
jecxz
or
mov
xor
lods
push
add
clc
nop
add
dec
popa
leave
sbb
fs
ss
fnstcw
lock
test
jp
add
mov
pushf
aam
mov
pushf
lea
jne
sbb
shr
sar
not
mov
call
pusha
clc
xor
lea
pusha
pusha
jmp
mov
lea
ja
rcr
or
bt
rcl
sub
setnp
inc
lea
xor
add
rol
stc
shl
mov
or
sbb
rcl
mov
test
pushf
mov
test
repnz
pushf
lea
jne
cwtl
jmp
sbb
sub
pop
pop
pop
push
mov
jno
test
inc
jae
je
js
roll
and
adc
jae
or
mov
adc
fstpt
xlat
into
test
scas
xchg
dec
mov
hlt
lods
sbb
lods
dec
movsl
inc
out
loopne
mov
scas
sub
outsl
xchg
dec
out
scas
mov
sbb
dec
andl
add
mov
leave
lea
xchg
dec
sub
out
testb
pop
cwtl
daa
xchg
cltd
and
sbb
jg
sub
xchg
mov
push
mov
mov
xchg
repnz
pop
mov
incb
xor
pop
out
int
jo
ss
call
lea
clc
and
xchg
out
sub
cmc
imul
jae
aad
mov
test
aas
mov
sbb
adc
jae
dec
xchg
inc
dec
lods
push
mov
insb
jg
push
es
mov
sub
mov
outsb
ret
fimuls
enter
mov
jne
arpl
jb
test
or
push
mov
js
fisttpl
pushf
icebp
mov
mov
jge
call
ret
pop
loopne
mov
cmp
outsl
test
sub
inc
inc
cmp
lcall
out
gs
stos
jb
sub
jg
es
add
lret
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jle
push
movl
push
jmp
ljmp
loopne
cmpsb
adc
or
fsubrl
cmpsb
shrl
lret
push
push
xchg
mov
jns
mov
repz
or
mov
cmp
subl
mov
cmp
inc
insl
xor
stos
shrb
push
out
mov
lea
jne
pushf
shr
rol
btr
mov
bt
pusha
clc
clc
or
call
sub
push
imul
test
shr
les
jns
lret
inc
sub
sti
mov
movsl
stos
xor
dec
dec
add
scas
in
add
ficoms
scas
lret
pusha
aad
cmc
sub
aam
jmp
cld
mov
insl
sarb
pop
out
addl
shrb
jmp
pusha
pusha
pushl
lods
test
xor
pushf
push
test
add
bt
pushf
neg
call
add
jmp
call
jmp
call
sub
pushf
stc
stc
pusha
cmp
pushf
lea
jae
push
mov
pushf
lea
jmp
pushf
jmp
cmp
xor
pusha
test
sub
movl
call
stc
pusha
mov
movb
jmp
enter
mov
sarb
or
sbb
stos
cmp
loope
pusha
mov
adc
sub
cld
les
outsl
stos
push
mov
and
or
xchg
les
dec
subl
rcrb
fisubs
stos
cltd
sahf
xchg
not
movzbl
push
mov
lea
push
jmp
pushf
cmp
mov
push
push
lea
je
cmc
cmp
cmp
call
jmp
cmpl
icebp
mov
fwait
sbb
outsb
mov
and
imul
outsb
addr16
xor
pop
popf
jno
push
pop
jno
jmp
or
leave
loop
sub
mov
xlat
push
push
inc
adc
les
xor
out
sub
rcrb
add
dec
movb
lea
jne
call
cmc
cmc
cmp
jmp
add
shr
test
sub
mov
mov
or
mov
shr
add
jmp
adc
lea
push
pushf
pushl
ret
push
cmp
xor
stc
cmp
repnz
lea
jb
pusha
push
push
lea
jne
neg
mov
shr
sub
bt
inc
xor
movsbl
mov
bt
jmp
movb
pusha
pushf
movzbl
mov
bswap
bswap
lea
jmp
pop
add
push
push
or
mov
jnp
imul
loope
push
subb
or
push
xchg
xchg
enter
xadd
mov
xor
inc
lahf
push
adc
ja
mov
cs
cs
and
sarl
xchg
out
cmpsb
add
sbb
inc
pop
cmp
aas
pushf
rorl
sbb
dec
ret
mov
andb
aam
lcall
xchg
out
cmpsb
ss
inc
xchg
test
adc
mov
scas
mov
rcr
outsl
sub
andl
inc
adc
jns
ret
enter
xorb
ds
das
mov
jae
mov
cmp
movsl
lret
jb
dec
pop
dec
out
out
imul
or
jp
sbb
mov
shr
movsl
repnz
orl
fstl
mov
test
stc
js
popf
add
xor
sbb
imul
jb
aam
clc
stos
mov
fldcw
cmp
xchg
mov
and
cld
mov
lods
adc
xor
xor
inc
jmp
jns
sbb
inc
sbb
fildll
sti
jbe
jo
push
popf
shr
or
or
scas
pusha
pushf
jmp
call
lea
je
call
push
pusha
pushf
jmp
call
cmc
pusha
test
jmp
call
shlb
data16
mov
lahf
push
mov
mov
clc
test
adc
sahf
xchg
xor
xor
repnz
fs
push
sbb
ficoms
mov
faddl
shlb
fdivs
push
push
scas
pop
cmpsb
nop
daa
outsl
movsl
inc
sub
repz
mov
cli
fldt
data16
mov
into
imul
jecxz
mov
cmpsb
in
pop
mov
inc
sub
pop
xchg
pop
jmp
jns
cmc
test
div
lods
jo
out
ret
sti
mov
cmc
push
mov
xor
sub
cld
inc
lret
repz
mov
dec
and
mov
sub
cli
mov
mov
lods
adc
and
addr16
dec
jne
nop
push
mov
sub
and
add
sahf
in
mov
daa
pop
dec
lcall
ja
cmpsb
mov
stos
cmpsb
mov
daa
push
lds
sbb
dec
jns
pop
pop
fidivrl
lahf
hlt
jne
dec
idivb
jno
sbb
cmpsb
push
cld
cmp
sub
std
enter
inc
fists
push
pop
mov
into
push
xchg
mov
loopne
mov
jge
inc
out
loope
ljmp
ja
jmp
enter
cld
or
jae
leave
rol
jne
pop
rclb
push
fwait
cmpb
fcomip
adc
jne
repnz
inc
repz
jmp
lea
je
stc
stc
test
sub
clc
cmp
pusha
lea
ja
bt
jmp
adc
jo
dec
xor
mov
mov
mov
ljmp
imul
ds
mov
mov
roll
mov
lcall
jge
xor
cltd
dec
jae
xchg
pop
lock
stos
push
cmp
fistl
xor
cmpsb
or
mov
out
inc
push
dec
jecxz
adc
inc
lahf
aam
rolb
jnp
xlat
mov
xorb
pop
pop
or
rolb
and
pushf
movb
movb
pushl
ret
push
lea
jne
shld
movsbw
rcr
mov
stc
add
cmc
movzwl
rol
mov
jmp
xor
mov
sbb
cltd
mov
and
arpl
xchg
push
lods
sub
push
cmp
xchg
lahf
mov
adc
jg
push
ss
in
push
lret
out
movsb
dec
fstpl
cwtl
std
mov
loope
ss
lds
stos
repz
push
data16
mov
lods
xor
sti
and
jl
dec
add
dec
rol
mov
clc
imul
push
cmc
mov
aas
jle
pop
out
daa
push
cli
andps
cli
flds
xor
frstor
xchg
test
dec
outsb
cmp
lock
mov
pop
cmc
scas
hlt
gs
and
shrb
xor
scas
mov
cmp
mov
mov
fsubs
into
jae
lret
mov
or
ret
mov
in
sub
sbb
flds
subb
dec
das
adc
scas
jmp
adc
push
lea
mov
pushf
xchg
inc
mov
dec
insl
outsb
imul
jg
cs
stc
rcr
loope
fiaddl
push
sbb
push
stos
cmp
std
test
fwait
into
fdecstp
fbstp
loope
fcomps
lods
sub
sub
inc
mov
adc
xchg
call
xor
lret
xchg
xchg
jmp
sahf
fldt
sbbl
je
mov
mov
aaa
sti
mov
pop
jl
fidivrs
std
mov
push
cmp
add
iret
leave
mov
xchg
fldenv
mov
push
int3
outsl
in
int3
lea
pop
outsb
push
test
es
jp
outsl
push
mov
push
mov
jns
push
and
cwtl
jl
mov
cli
in
jae
pop
lods
and
popa
mov
cltd
and
sti
popf
rcr
push
cmpsb
cmp
mov
mov
sahf
sub
mov
stos
pop
movsb
andb
lahf
xor
cli
mov
into
pop
lds
xlat
scas
dec
mov
xchg
push
pop
dec
lret
outsl
dec
data16
fnstsw
sahf
push
mov
and
pop
jge
int3
dec
or
cmp
jns
addr16
daa
gs
push
lods
sar
hlt
mov
lcall
xchg
and
cwtl
dec
cwtl
cmp
push
xor
dec
inc
mov
nop
mov
int3
std
mov
mov
pop
or
aaa
inc
jmp
jmp
and
add
fadds
fstpl
and
jp
mov
outsl
rcr
push
jno
insl
cli
test
cmpsb
push
rclb
clc
push
mov
and
fdivs
fwait
fwait
adc
xchg
inc
movsb
stos
add
scas
lods
movsl
nop/reserved
or
ljmp
jg
mov
mov
mov
sbb
lods
add
pop
enter
loopne
bound
jecxz
mov
scas
xor
mov
push
pushf
test
push
lea
je
pushf
cmc
cmp
add
call
pushf
mov
or
call
jmp
mov
xchg
and
cld
repz
mov
and
mov
fsubs
xor
sub
dec
dec
mov
lock
fdivl
dec
mov
mov
xor
aad
mov
and
shrl
es
shrb
fstpl
sahf
in
xchg
lcall
outsb
stc
xchg
push
inc
mov
ret
cmpsl
rcr
movsb
sub
lret
sti
dec
and
loopne
xchg
inc
stos
stc
loope
cmp
inc
mov
outsb
xchg
mov
jno
movsl
sub
pushf
jmp
pushf
mov
pushl
lea
ja
pushf
cmc
mov
add
cmc
pushf
or
mov
lea
je
push
movl
call
mov
pop
pusha
mov
lods
repnz
shrl
sti
repz
mov
cmp
cmovbe
xchg
sub
xor
mov
sbb
lret
pop
xor
ja
shrl
mov
shll
mov
ja
insl
xor
jne
insl
fcompl
push
xor
xchg
adc
pop
cs
pusha
cmc
stc
add
lea
pusha
bt
add
pusha
pushl
push
pushf
dec
jmp
pushf
jmp
call
mov
cmp
outsl
js
shlb
fbld
push
push
call
imul
jle
mov
scas
cmp
cmp
jle
push
lods
xor
insl
repnz
cmp
outsl
das
cmp
cmp
cmp
rolb
aas
iret
imul
mov
pushf
lea
jmp
pushf
rep
bswap
pop
mov
pushf
push
push
lea
jmp
mov
mov
cmp
push
xchg
jnp
cmp
push
scas
std
fistl
popa
imul
je
testl
push
sbb
mov
stos
ret
mov
insl
sbb
pop
imul
mov
shrl
cmpsb
sbb
add
pop
xchg
mov
jle
out
ds
push
dec
das
jg
stos
adc
fs
mov
pop
sbb
hlt
addr16
or
in
add
push
adc
pop
lahf
dec
ds
inc
clc
stc
clc
push
shl
jmp
movl
call
sub
fwait
pop
mov
imul
mov
ss
loop
outsl
mov
fnstcw
int3
sub
cltd
jno
or
mov
jmp
sub
or
bound
cmpsb
mov
adc
movsb
test
add
xlat
push
insl
lret
sarb
pop
enter
mov
lret
mov
push
push
cmpsl
dec
lret
mov
popf
in
jnp
mov
iret
pop
cmp
imul
pop
and
mov
imul
jno
push
mov
pop
mov
ficomps
xchg
xor
lock
jo
xchg
pop
or
dec
test
arpl
xor
xchg
mov
sub
xchg
lods
dec
arpl
mov
adcb
js
loop
sbb
xor
aad
in
xchg
adc
jb
mov
cmp
les
push
adc
inc
or
pop
hlt
jecxz
pop
iret
jmp
mov
jle
add
scas
mov
cs
hlt
pop
fst
ret
and
xchg
push
aad
xor
int3
mov
outsl
mov
sbb
ljmp
pop
mov
jmp
mov
push
xor
push
jns
aad
imull
xchg
cmc
xor
cmpb
adc
or
xchg
sub
bound
xchg
icebp
sub
scas
clc
fwait
int3
out
mov
mov
push
fdivrs
js
sub
in
mov
lea
cmp
addr16
loop
cli
add
fucomip
movsb
or
scas
jo
dec
pop
jg
mov
xchg
mov
movb
subl
push
or
and
lods
imul
xorb
lds
and
int3
or
test
xchg
ljmp
call
sbb
movl
pushf
call
mov
add
push
stc
cmp
movb
lea
jbe
test
add
bt
pusha
sub
pop
ror
pushf
sar
mov
add
neg
bt
rcr
mov
movsbw
pushf
movsbl
or
add
clc
call
movl
call
call
push
movl
pushf
pushf
movb
pushl
popl
pushl
pushl
ret
clc
sub
jmp
test
mov
pop
mov
xlat
mov
push
jg
fwait
push
fdiv
shlb
aam
mov
xchg
sub
ficoms
pop
out
aad
dec
mov
popa
inc
push
adc
sub
mov
pop
add
loop
jne
nop
push
out
sbb
mov
and
ficompl
adc
pop
ja
stos
mov
fisubl
add
pop
movsb
sub
sub
mov
mov
or
mov
sbb
inc
out
jno
inc
fistpl
subb
push
or
add
lea
xor
mov
jg,pn
inc
repz
testl
jnp
insl
es
daa
and
sbb
adc
leave
inc
jo
dec
jmp
pop
or
inc
mov
or
movsl
pop
je
push
push
out
inc
outsl
mov
lret
adc
cwtl
and
hlt
mov
nop
or
jp
cmp
adc
xor
sub
cmp
cmp
adc
mov
mov
shll
icebp
xor
sarb
pop
pop
or
jo
inc
daa
mov
mov
out
or
push
stc
fstl
dec
inc
jp
mov
adc
push
push
call
add
lods
cmpsl
sbb
add
add
in
adc
popa
rcrl
clc
rcrl
add
push
add
xchg
sbb
mov
adc
add
add
test
add
jmp
in
pop
mov
inc
cltd
jle
stos
mov
call
mov
mov
sub
aad
jae
xor
or
bound
jecxz
clc
mov
mov
std
cwtl
fwait
repz
push
push
shll
data16
fwait
nop
pop
sbb
dec
lods
adc
push
ss
mov
dec
pop
or
adc
adc
sub
mov
fmuls
aad
hlt
mov
push
mov
xchg
shll
cmc
add
sbb
enter
mov
int
insl
push
leave
mov
int
sahf
imul
and
push
or
aad
je
inc
dec
pop
shrl
movl
pushl
pushf
pusha
pushl
lea
jmp
cmp
jmp
movw
cmp
sub
jge
xor
call
test
stc
test
movw
mov
lea
je
bt
call
fisubrs
pop
mov
and
pop
jmp
push
xor
jne
sahf
push
or
hlt
sub
std
or
mov
xor
ficoms
xchg
fisubs
fwait
jbe
imul
xchg
call
and
scas
and
pop
ret
inc
mov
stc
sbb
mov
and
pop
pop
mulb
andb
sub
sub
mov
mov
xorb
cmp
test
xchg
jns
jmp
popa
movsl
push
mov
loop
adc
testb
rorb
mov
cmp
mov
sbb
mov
cli
pop
xchg
xchg
dec
cld
or
jns
mov
aas
xchg
xchg
sub
out
cltd
iret
std
fcomps
arpl
mov
pop
lds
std
loopne
cwtl
leave
inc
pop
jg
rol
mov
fdivrs
ficoms
cmp
cmp
mov
inc
push
stos
adc
sarl
fistps
in
frstor
jb
jp
push
mov
pop
pop
push
iret
leave
ficomps
ljmp
sbb
lret
aad
pop
cmp
xchg
ret
fcoml
mov
ja
mov
and
call
inc
test
mov
call
ror
add
add
pusha
sar
mov
pushf
pusha
jmp
jmp
mov
lock
mov
adc
inc
dec
cmp
leave
push
add
sub
jns
or
into
adc
addl
xor
pop
pop
xor
pop
popa
cmp
into
adcl
inc
and
mov
cmp
out
pop
scas
pop
xor
fsubrs
cmp
inc
and
ss
nop
ja
jb
das
push
mov
neg
xor
clc
sbb
inc
pop
push
stc
sbb
cmpb
inc
test
stos
imul
ret
rcl
mov
mov
roll
and
ret
cmp
xchg
cmp
enter
inc
lret
rol
jnp
adc
aaa
jno
mov
and
sbb
rorl
dec
jb
das
push
sub
sbb
inc
cs
cmp
xor
pop
fcoml
iret
sub
mov
out
mov
adc
cwtl
in
aam
push
push
ds
xorl
sub
push
fisttps
and
js
lret
inc
fidivl
ret
vmovsd
aaa
dec
add
cld
cli
or
je
jmp
shr
scas
jae
adc
movhps
shl
icebp
fidivrs
mov
add
rolb
pusha
push
mov
lea
jmp
pushf
movl
jmp
ds
stos
out
jmp
ds
dec
nop
fmull
xchg
mov
fsts
jbe
lret
ret
lcall
popf
mov
xor
mov
sti
or
push
pop
out
sub
sub
pushf
scas
mov
incl
sti
stos
jl
cmpb
pextrw
add
cwtl
dec
test
out
frstor
mov
enter
push
mov
mov
mov
jecxz
mov
rorb
test
xchg
jmp
add
dec
cli
dec
sub
jne
sarb
and
bnd
adc
fsubl
clc
das
adc
push
btr
mov
test
sar
bts
sub
aad
and
push
movzbw
push
shl
pusha
mov
das
rcl
das
mov
shrd
sar
sub
aam
mov
mov
pusha
push
push
test
pushf
movb
movb
jmp
ror
mov
stc
add
stc
stc
pusha
movzwl
btr
shl
mov
jmp
pushf
lea
jne
call
insb
and
push
mov
out
or
or
imul
mov
mov
xchg
data16
inc
stc
mov
inc
jl
imul
inc
dec
sbbb
jp
xor
lahf
and
cmp
sbb
cmpsb
mov
and
mov
out
add
xchg
mov
lret
bound
mov
lcall
sahf
in
add
shrd
movzbw
mov
pusha
and
call
pusha
call
sub
pusha
lea
call
push
mov
push
lea
jae
call
dec
dec
sbb
lods
mov
sbb
sbb
inc
mov
out
outsb
test
sbb
xlat
sub
stos
lock
subl
jle
jmp
cmpsl
and
lds
jae
mov
inc
push
popf
repnz
xor
ljmp
shlb
jge
lea
mov
mov
push
jmp
outsb
in
mov
lods
pop
popf
pop
xor
adc
sahf
fs
xor
dec
test
push
gs
cmc
ljmp
push
fsts
cmp
jecxz
and
clc
or
fchs
in
fwait
repnz
movsb
push
icebp
mov
in
test
fmul
jl
fcomip
pop
pop
add
out
sub
mov
sub
mov
aad
or
adc
cmpl
stos
imul
xor
xchg
insb
mov
jle
add
and
icebp
adc
nop
pop
sbb
dec
dec
ds
lds
and
fcoms
push
mov
ret
jmp
lea
ja
jmp
test
pusha
sub
bt
cmp
jmp
jmp
pusha
lea
jb
pushf
mov
pusha
pusha
pushl
ret
movl
pushf
push
movl
lea
jmp
pushl
lea
je
dec
adc
mov
lea
add
stc
sub
shrd
shr
clc
sbb
movzbw
mov
cmc
add
btr
add
test
shl
inc
rcr
mov
push
jmp
call
pushf
lea
jne
test
btc
sub
jmp
mov
mov
call
imul
test
pusha
test
cmc
add
push
pushf
lea
jmp
push
jmp
in
mov
nop
mov
ja
std
lcall
fwait
xor
aaa
cmp
cltd
mov
lock
sbb
mov
or
movsb
mov
add
stos
addl
popa
push
or
es
mov
sub
push
shr
in
mov
cli
xchg
sahf
sbb
mov
js
and
cmpsb
ljmp
sahf
inc
roll
add
and
cmc
xor
outsb
icebp
fs
outsw
call
and
jo
adc
mov
cwtl
jmp
cmc
mov
and
adc
add
mov
test
neg
mov
pushf
test
movb
call
xchg
add
push
mov
mov
outsl
in
in
fcomps
lret
adc
out
jae
popa
outsl
sbb
js
mov
xor
sti
sbb
mov
popfw
adc
mov
ljmp
std
movsb
jmp
in
dec
inc
dec
or
das
out
popf
jle
push
adc
and
adc
clc
dec
call
pmaxub
add
jmp
pushf
pushf
jmp
lea
call
pusha
mov
lea
jae
cmc
call
lea
movzbw
movsbw
bswap
mov
jmp
daa
push
xchg
dec
mov
jnp
cltd
xchg
jl
popa
or
push
mov
cwtl
cmp
push
testl
inc
lock
fbld
jnp
jmp
call
call
jmp
std
mov
popf
adc
cld
or
cwtl
mov
cmpsl
sbb
push
xchg
fadds
loope
dec
adc
lea
in
aas
std
xor
xor
add
lea
out
repnz
dec
cmp
push
cmp
xor
loop
hlt
test
xor
mov
pushf
jmp
outsb
adc
dec
mov
pop
jp
aam
test
sbb
add
std
sti
dec
cli
push
stos
jno
int
xor
cwtl
ret
imul
mov
or
jg
into
leave
mov
and
mov
dec
dec
pop
out
jg
pushf
imul
cmp
add
movw
pushl
lea
jmp
lea
jne
cmp
mov
mov
bsr
sub
dec
mov
test
jmp
lea
pusha
push
call
mov
xor
mov
adc
xor
leave
cmp
mov
xchg
lret
mov
lret
addr16
clc
pmaxsw
sub
iret
push
mov
js
mov
stc
hlt
test
push
insl
inc
sub
jb
xchg
cs
mov
mov
pop
daa
out
dec
fs
pop
rcrb
xor
rcrl
cltd
adc
mov
pusha
or
ss
aad
mov
mov
lahf
inc
inc
xor
stos
sbb
xor
xchg
cmp
std
cmp
inc
xor
sub
sub
pusha
pushf
pushf
movl
pushl
push
push
pushl
lea
jmp
jmp
mov
mov
mov
pop
inc
dec
and
sahf
das
data16
sti
cmp
push
mov
and
xor
and
xor
inc
ss
mov
fucomip
scas
mov
sub
out
out
into
neg
in
cmc
arpl
push
jno
xor
cmpsl
lahf
fwait
cltd
cmp
jmp
mov
jge
jp
or
stc
inc
cmpsb
push
les
mov
pop
out
pop
cmpsb
jecxz
cld
rorb
rolb
out
sbb
fimuls
faddl
add
mov
call
add
push
ret
xchg
sub
shlb
nop
imul
loop
pushf
inc
pop
mov
mov
outsb
stos
sbb
jno
loop
paddsb
leave
mov
mov
lahf
fdiv
lahf
lcall
or
pop
push
repnz
pop
xor
sbb
std
push
cmp
pusha
movb
lea
ja
rcr
add
ror
mov
push
cmp
cmc
cmp
jmp
test
mov
stc
cmp
cmc
push
cmpb
jmp
jmp
add
add
movl
pushl
push
lea
jmp
pusha
mov
call
pusha
pusha
movl
pushf
call
mov
shr
pusha
or
inc
mov
dec
adc
sbb
xor
lea
pusha
lods
pushl
setns
xor
mov
call
jmp
pusha
jmp
add
scas
dec
mov
push
xchg
sub
inc
arpl
shrl
sbbl
fstpl
mov
mov
aaa
sbb
outsb
sbb
js
js
sub
pop
ja
mov
xor
iret
push
out
mov
sbb
dec
and
add
movsb
decl
aas
in
mov
stos
lret
movsl
roll
or
cmp
pop
dec
ficoms
fadds
div
jb
fs
cs
sub
xor
xchg
dec
lret
out
mov
scas
push
jne
inc
dec
mov
scas
xchg
insb
imul
pavgw
and
lea
je
jno
pusha
sub
cmp
push
bt
mov
cmp
call
pop
push
push
pushl
ret
jmp
pop
mov
lea
mov
xchg
pop
mov
jmp
in
cli
fwait
pop
push
cmp
lods
imul
hlt
dec
push
jp
push
sahf
mov
int
sub
adc
push
cmpsb
sub
ljmp
or
pop
sub
mov
pusha
stc
pushf
cmp
xor
call
inc
add
push
mov
pushf
mov
pusha
push
push
lea
jmp
pushf
movb
xor
call
jmp
jmp
xchg
call
push
xchg
lea
jg
push
push
pusha
movl
call
call
call
pushf
popl
pusha
pushl
popl
movw
lea
jmp
pushf
popl
pusha
jmp
pushf
mov
mov
jmp
mov
jmp
mov
mov
jmp
inc
cmp
shrd
dec
xor
bswap
bts
pushf
stc
rol
bswap
movzbw
inc
dec
movzbw
ror
movzbw
and
xor
movzbw
not
shl
xor
shld
shld
call
jp
pushf
mov
pushf
mov
call
pushf
popl
pusha
push
mov
pushl
popl
pushl
movb
mov
movb
lea
jmp
pushf
mov
call
call
pushl
popl
pusha
mov
pushf
push
lea
jmp
mov
movb
pusha
movb
mov
push
jmp
cmc
mov
jmp
mov
pusha
mov
repz
popl
jmp
bt
stc
rol
pushf
jmp
pushf
pushf
popl
movb
pusha
jmp
pusha
push
movl
pushf
popl
pushf
pushl
popl
push
lea
jmp
cmc
bswap
mov
rcl
call
mov
push
rol
push
push
stc
lea
movsbw
pushl
popl
ror
cmc
bt
push
rcr
xchg
movzbw
movzbw
mov
cmc
not
rol
ror
not
pushf
rcr
bswap
seto
rcl
movzbw
bt
ror
bsf
bswap
lea
inc
sub
cmc
shrd
mov
add
add
lea
shl
mov
pusha
rol
pushf
add
lea
movzbw
rcl
xchg
mov
not
neg
add
bswap
setg
lea
setnp
dec
movzbl
clc
ror
inc
inc
sar
add
pusha
and
add
sar
movzbl
rcr
bsr
shl
adc
mov
pusha
test
push
push
sub
bt
test
movl
add
jmp
pushl
pushl
repz
popl
pushf
push
call
pusha
mov
mov
pushf
cmp
add
movw
mov
push
lea
jmp
jmp
jmp
pushf
jmp
mov
push
call
call
mov
push
mov
mov
pushf
lea
jmp
rcr
xchg
cwtl
push
mov
sar
shld
rcl
mov
clc
add
movb
push
lea
ja
pusha
mov
pusha
push
movb
lea
jmp
mov
push
mov
pushf
mov
pushf
jmp
push
mov
jmp
pusha
jmp
jmp
mov
push
mov
mov
movw
lea
jmp
lea
jl
pushf
inc
pushl
call
seto
not
shrd
movzww
test
cmp
bt
call
mov
call
pushf
popl
lea
lea
push
lea
pushf
lea
mov
pop
movsbl
lea
std
push
movsbw
bswap
call
push
mov
push
pusha
lea
jmp
call
movsbw
rcl
xor
setnp
mov
stc
pusha
bt
add
stc
not
push
lea
push
pushf
ror
bt
clc
stc
bswap
call
neg
rcl
push
call
rcr
shr
clc
pushf
mov
test
clc
clc
clc
add
pusha
lea
jmp
jmp
mov
call
jmp
repz
popl
push
pushf
call
jmp
bt
clc
not
pusha
push
test
pushf
not
sub
jae
bt
pushf
cmp
and
jmp
cmp
neg
clc
xchg
cmc
push
lea
jbe
bt
sub
bt
add
push
bt
cwtl
stc
call
bt
xor
jmp
repz
popl
call
jmp
jmp
add
movw
push
mov
mov
lea
jmp
mov
pusha
mov
cwtl
cwtl
movzbl
mov
pushf
push
call
push
pushl
popl
movb
lea
jmp
mov
push
pushl
popl
pushf
pushf
lea
jmp
pusha
lea
pushf
cmp
call
pushl
popl
movb
mov
mov
lea
jmp
call
pushf
popl
pushf
push
pushf
push
pushl
popl
mov
pushf
mov
push
lea
jmp
push
mov
mov
mov
jmp
mov
call
call
pushf
popl
call
not
mov
cmp
cmc
sub
pusha
bt
jmp
ror
xor
push
push
mov
pushf
sub
jmp
mov
pushf
call
push
pushf
push
mov
mov
pusha
movb
call
sub
push
jmp
mov
movb
mov
mov
mov
mov
pushf
push
lea
jmp
jmp
movb
pushl
popl
pushl
pushf
movw
mov
lea
jmp
dec
lea
jge
clc
bt
pusha
rol
cmp
cmc
pusha
neg
pushf
jmp
clc
stc
lea
shr
xor
btc
or
not
not
mov
clc
pushf
add
pushf
jmp
jmp
call
mov
mov
push
push
pushl
mov
pushf
movb
pushf
lea
jmp
mov
pushl
movb
jmp
lea
pushl
std
pushf
std
mov
call
pushl
pusha
mov
pushf
lea
jmp
not
neg
stc
btc
rol
stc
cmp
xor
add
adc
sub
shrd
and
sar
cmp
mov
pusha
test
add
mov
jmp
mov
shl
push
movb
mov
pusha
mov
pushf
movb
pushf
popl
pushf
jmp
sub
call
jmp
pushf
mov
pushf
mov
mov
pushf
push
pushl
movb
lea
jmp
mov
pushl
mov
pusha
pushf
mov
pushl
push
lea
jmp
mov
mov
movb
mov
pushl
call
mov
push
mov
jmp
pushl
popl
mov
push
lea
jmp
mov
push
mov
pushf
mov
lea
jmp
call
add
pusha
pushf
pushf
lea
jmp
mov
call
pushf
mov
pusha
push
push
pushl
repz
popl
call
movw
mov
pusha
mov
jmp
pusha
call
pushl
clc
test
or
bt
push
test
xor
pushf
call
mov
jmp
neg
pusha
pushf
pushl
movl
inc
stc
xor
push
test
cmc
sub
jmp
jmp
call
movb
repz
popl
jmp
push
jmp
xor
sub
mov
or
and
sar
shl
mov
cmp
push
cmp
push
sub
pushf
clc
shr
pushf
jmp
movb
repz
popl
push
pusha
mov
pushf
jmp
push
mov
mov
push
pushl
mov
lea
jmp
call
daa
daa
cmc
mov
dec
pushf
shr
stc
mov
cmp
bt
cmc
pushf
sub
jmp
mov
call
mov
jmp
jmp
jmp
mov
pushl
mov
pushf
lea
jmp
mov
jmp
pushf
call
push
jmp
jmp
add
pushf
pushf
popl
movb
pushl
popl
pushf
lea
jmp
mov
jmp
mov
jmp
and
movsbw
sar
mov
mov
mov
push
sub
jmp
push
call
pushf
movl
rol
clc
cmc
call
rep
sar
mov
btr
bt
bsf
mov
cmp
bt
cmc
pushl
popf
movw
movb
pusha
lea
jmp
call
xor
jmp
call
pushf
movl
push
mov
pushf
lea
jmp
mov
call
mov
cld
push
pushf
jmp
call
clc
rcr
cmc
movzbl
stc
cmc
cmc
push
xor
jmp
pusha
mov
pusha
jmp
jmp
call
xor
sar
test
mov
stc
call
sub
jbe
add
push
call
pusha
push
mov
mov
jmp
mov
push
push
lea
jmp
mov
push
jmp
jmp
pusha
mov
pushf
mov
push
pushf
pushf
pushf
lea
jmp
call
test
not
call
call
shl
cltd
aad
mov
not
mov
aas
aaa
pop
daa
movzbw
shl
stc
pop
ror
pop
das
pop
and
pop
cwtl
add
movsbw
movzbl
pop
btc
sub
popf
not
bswap
call
dec
pusha
bt
cmc
test
xor
cmc
xor
clc
push
test
test
mov
cmc
call
movb
push
repz
popl
jmp
push
pushl
add
cmc
cmc
pushl
clc
sub
call
push
call
repz
popl
push
pushf
mov
push
jmp
pushf
jmp
mov
pusha
jmp
push
mov
pushf
lea
jmp
jmp
bt
add
push
and
xor
lea
rcl
mov
jmp
movzbw
mov
shl
pusha
call
pushf
mov
push
push
pushf
movb
mov
pushf
jmp
or
dec
test
es
mov
cmpb
or
ss
push
es
or
cmp
sub
test
arpl
enter
jmp
test
fwait
cmp
cmp
fwait
cmp
or
dec
test
sub
test
sub
test
fwait
cmp
out
cmp
test
and
test
fnstsw
test
cmp
test
sub
test
pop
cmp
test
push
cmp
inc
daa
test
test
test
jnp
test
jg
test
or
dec
test
stc
dec
test
sub
test
es
arpl
cli
sub
mov
cmp
test
jnp
test
push
cmp
jnp
test
sbb
test
pop
dec
test
and
test
and
test
pop
es
dec
dec
test
dec
dec
test
out
cmp
test
stc
dec
test
js
test
mov
and
incl
incl
mov
test
lret
cmp
xchg
adc
test
lret
cmp
mov
xchg
cs
incl
pop
cmp
test
xchg
cs
jmp
test
xchg
fwait
cmp
and
test
mov
test
pop
inc
test
lret
cmp
xchg
inc
test
cmp
pop
inc
test
xchg
inc
test
push
es
adc
test
push
cmp
test
js
test
js
test
cli
sub
fwait
cmp
mov
inc
test
push
es
lret
cmp
mov
test
lret
cmp
xchg
cs
lret
cmp
lret
cmp
sub
test
xchg
cs
cmp
push
test
dec
dec
test
arpl
test
enter
incl
cli
sub
mov
inc
test
push
cmp
test
sub
test
push
cmp
test
sbb
push
es
and
push
test
jmp
test
pop
cmp
test
sub
test
es
es
push
es
pop
inc
test
sbb
test
stc
dec
test
cmpb
pop
es
enter
jg
test
lods
inc
test
pop
es
incl
jb
test
mov
test
test
mov
dec
test
fnstsw
test
incl
fnstsw
test
out
cmp
test
cmp
mov
and
pop
es
push
cmp
test
push
es
jg
test
push
cmp
test
jg
test
in
test
cmp
test
icebp
xor
arpl
test
pop
es
xchg
inc
test
sub
test
cmp
cmp
jg
test
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
pusha
sub
cmp
xor
test
or
cmp
test
cmp
daa
test
cmp
cmp
sbb
cmp
sub
push
es
cmp
cmp
test
pop
dec
test
cmp
dec
test
cmp
inc
test
cmp
xor
test
arpl
cmp
dec
test
cmp
mov
push
pushl
ret
pushl
mov
call
pusha
movzbl
pusha
call
jmp
push
jmp
call
lahf
movsbw
mov
lea
not
setb
mov
pushf
divl
pushf
mov
push
pushf
mov
lea
je
pushf
mov
pushf
pushf
call
mov
rdtsc
jmp
mov
push
pushf
lea
jmp
jmp
pusha
push
pusha
inc
pushl
push
mov
pushf
movb
mov
lea
jmp
mov
jmp
repz
popl
jne
push
pushf
mov
mov
push
mov
push
mov
push
mov
mov
pushf
lea
jmp
call
push
pushf
mov
pushf
movb
movw
jmp
pushf
pushf
mov
movb
jmp
not
bswap
mov
push
pushf
lea
pusha
movb
mov
pushf
pushf
push
pushf
lea
jmp
mov
movb
pushf
jmp
jmp
mov
movb
lea
jmp
push
jmp
pushf
call
jmp
push
lea
jne
shl
pusha
btr
bsr
xorb
lea
seta
pop
push
pusha
lea
jmp
call
jmp
movl
movw
pushf
popl
push
call
mov
jmp
pushf
lea
je
bt
bt
cmc
pushf
sub
stc
stc
xchg
test
clc
cmc
call
pusha
push
mov
mov
call
cmc
test
bt
pusha
pushl
popl
cmp
cmc
add
mov
pusha
test
pushl
popf
movw
lea
jmp
jmp
jmp
push
cwtl
jmp
call
call
mov
push
call
mov
call
jmp
add
movw
xor
jmp
add
add
mov
mov
cmp
test
cmp
sub
pushf
jmp
jmp
bsf
movzbw
mov
sbb
call
pushf
mov
call
shl
bts
bsr
jmp
mov
mov
pushf
lea
jmp
jmp
mov
pusha
mov
mov
pushf
pusha
lea
jmp
call
pushl
popl
pushf
movb
lea
jmp
inc
push
pushf
jmp
aam
shld
cmc
and
mov
test
jle
clc
add
jp
push
pusha
pusha
pushf
popl
movb
push
pushf
pushl
popl
pushf
lea
jmp
or
call
cwtl
mov
jmp
mov
mov
pushf
mov
lea
jb
push
mov
push
repz
popl
pushf
call
cmp
sub
call
neg
mov
bt
add
pusha
push
lea
jmp
call
push
mov
call
push
and
movb
movw
pushf
mov
mov
pushf
pushf
popl
pushl
pushl
popl
mov
push
lea
jmp
pushf
popl
call
call
pushf
mov
pushf
pushf
lea
jmp
mov
pushf
mov
jmp
call
mov
mov
jmp
xor
test
neg
stc
pusha
clc
cmp
xchg
test
cmc
bt
mov
add
cmc
test
mov
sub
push
push
mov
add
pushl
jmp
test
pushf
shl
pusha
shr
call
call
pushf
popl
pushf
pushl
popl
movb
pusha
movb
lea
jmp
call
mov
mov
add
call
mov
pushf
lea
jmp
mov
mov
mov
lea
je
push
call
pushl
mov
pusha
mov
jmp
movsbl
mov
pushf
call
lea
jne
cmp
stc
sub
call
jmp
call
mov
pushf
pushl
jmp
mov
push
mov
pushl
mov
pushf
pushl
repz
popl
pushl
jmp
mov
mov
jmp
call
jmp
shr
mov
push
jmp
jmp
cld
push
jmp
mov
mov
movsbw
xchg
xchg
mov
lea
jp
pushf
not
mov
pushf
pushl
ret
call
call
pusha
jmp
xchg
mov
mov
movsbl
call
mov
jmp
sub
movb
lea
jne
mov
push
pushl
lea
jmp
mov
pushl
mov
jmp
push
jmp
call
pushl
popl
pushf
lea
jmp
pusha
movl
mov
pusha
mov
jmp
pushf
mov
jmp
pusha
pushl
pusha
mov
call
mov
call
push
jmp
jmp
jmp
mov
pushf
pusha
pushf
mov
pushf
call
mov
pushf
call
mov
pushf
mov
pushf
pushl
push
movb
lea
jmp
jmp
shr
mov
adc
add
setno
jmp
push
mov
pusha
push
mov
movl
pushf
pushf
lea
jmp
std
bswap
mov
bswap
jmp
push
pushl
pusha
mov
pushf
pushf
pushl
mov
lea
jmp
bt
test
cmp
add
call
movb
add
jmp
mov
mov
mov
movb
mov
mov
jmp
mov
push
pusha
sub
jmp
jmp
jmp
mov
mov
jmp
call
jmp
mov
mov
mov
lea
jmp
call
add
pusha
mov
push
movb
pusha
push
lea
jmp
inc
test
mov
movb
or
jmp
call
call
mov
test
jmp
movzbw
not
aas
mov
adc
call
mov
mov
mov
push
pusha
movb
call
movb
pushl
popl
pushl
lea
jmp
mov
pusha
jmp
call
pushf
popl
jmp
pushf
lea
bsf
mov
pushf
add
movb
lea
jmp
call
movb
jmp
push
not
mov
clc
jmp
pushf
mov
jmp
mov
push
pushf
lea
jmp
pushf
mov
mov
mov
call
lea
cpuid
cmc
sub
jmp
call
sar
pusha
mov
or
shl
jmp
mov
lea
movzbw
pop
push
pusha
pushl
ret
jmp
call
test
pushf
dec
test
mov
bt
xor
push
lea
jae
pusha
rol
mov
inc
jmp
movb
mov
call
lea
bt
mov
bt
bt
test
cmc
add
pushf
mov
pushf
movw
lea
jmp
pushf
mov
push
mov
jmp
dec
bt
rol
jmp
pushf
jmp
mov
movb
pushf
push
pushl
ret
mov
pushf
lea
jmp
mov
push
mov
mov
lea
jmp
mov
pushf
lea
jmp
pusha
jmp
push
pushf
pushf
mov
movw
push
pusha
lea
jmp
lea
not
movzbl
bswap
rcl
xor
inc
dec
pusha
rcl
cmc
pushf
rol
pop
neg
sub
bts
sbb
xor
pop
not
pusha
mov
movzbl
pushf
call
call
movzbw
call
bt
add
pusha
mov
push
lea
jmp
call
pusha
call
inc
pushf
neg
bts
rol
add
not
call
call
jmp
and
jmp
pushf
push
mov
mov
push
movw
pushf
repz
popl
jmp
pusha
movw
push
push
mov
movb
pushf
pushf
lea
jmp
call
pusha
jmp
push
mov
push
pusha
lea
jmp
rep
pushf
bts
mov
bsf
mov
cmp
mov
push
pushl
popf
push
pushf
movb
mov
lea
jmp
neg
mov
adc
and
mov
pusha
pusha
inc
mov
pushf
stc
add
pushl
cmp
pushf
shld
call
sbb
pushf
shld
movzbl
inc
dec
not
xor
pusha
dec
sbb
sar
cmp
not
movsbw
xor
setb
neg
jmp
mov
stc
bt
sub
test
call
mov
movb
mov
mov
mov
mov
mov
lea
jmp
mov
movzbl
call
inc
lea
jo
pusha
pusha
decl
jmp
pushf
sub
pushf
push
sub
jp
pusha
add
bt
stc
jmp
mov
pusha
lea
jmp
sub
stc
call
push
lea
ja
shr
mov
or
shr
or
pusha
lea
mov
sbb
cmp
sub
stc
not
bsr
not
lea
or
and
rol
sub
jnp
sub
lea
mov
mov
movzbw
pushf
mov
pusha
pop
mov
jmp
jmp
lea
jb
push
pushf
jmp
mov
push
pushl
movb
lea
jmp
mov
call
sar
shl
shl
neg
mov
cmc
pusha
cmc
add
pushl
pushf
lea
jmp
mov
jmp
push
and
add
jo
stc
cmp
call
movl
mov
pusha
push
lea
jmp
repz
popl
cmc
rol
cmc
push
clc
rol
mov
btc
push
movsbl
jmp
dec
shr
mov
cmp
mov
pushf
pushf
sub
pusha
jmp
mov
jmp
or
neg
mov
bt
stc
pusha
add
mov
call
pushf
inc
test
xor
clc
sub
call
pushf
repz
popl
mov
push
mov
pushf
jmp
sub
call
mov
pushf
movb
lea
jmp
call
mov
pushl
mov
call
mov
jmp
movzbl
shr
inc
neg
mov
shl
setge
mov
mov
push
add
jbe
push
stc
not
cmp
not
call
movw
mov
lea
jp
push
mov
pushf
mov
mov
je
repz
pusha
pushf
movw
mov
push
call
mov
jmp
pushf
call
test
add
mov
mov
pusha
push
lea
jmp
pushf
pushf
jmp
push
push
mov
mov
pushf
lea
jmp
clc
pusha
cmc
xor
test
pushf
cmc
call
lea
jne
setns
pusha
mov
pusha
jmp
pushf
pusha
call
jmp
mov
call
setne
add
mov
jmp
call
mov
call
mov
mov
mov
mov
pushf
mov
repz
popl
pushf
pushf
mov
mov
jmp
jmp
mov
call
mov
push
mov
call
pushf
mov
mov
mov
call
mov
pusha
mov
mov
pushf
lea
jmp
call
push
mov
movl
pushf
pushf
pusha
mov
mov
pusha
movb
pushf
pushl
ret
shrd
notl
xor
adc
mov
cmc
clc
test
stc
sub
cmp
cmc
and
call
pushf
popl
mov
call
mov
pusha
mov
jmp
lahf
rcr
mov
cmp
test
push
cmp
sub
call
lahf
bt
rcl
adc
mov
pushf
clc
add
call
pusha
pushf
decl
pushf
pushf
mov
mov
lea
jne
pusha
mov
movb
pusha
mov
push
mov
lea
jmp
movb
pushl
pushl
popl
movb
push
lea
jmp
pushf
mov
jmp
pushf
mov
pushl
lea
jmp
mov
call
btr
mov
btr
sar
mov
test
push
cmp
movl
add
mov
push
mov
movl
lea
jmp
shl
mov
sar
mov
cmc
bt
call
pushf
popl
jmp
movw
mov
mov
pushf
jmp
pushf
jmp
shl
mov
mov
jmp
pushf
popl
pushf
mov
pushl
popl
pushf
pushl
pushl
pushf
lea
jmp
pushl
popl
pusha
push
mov
movw
lea
jmp
jmp
call
push
bt
shl
jmp
mov
mov
mov
mov
movb
lea
jmp
inc
bt
clc
neg
pushl
cmc
bt
xor
bt
cbtw
pusha
pushf
cwtl
stc
clc
sub
pushf
lea
jae
push
push
mov
push
lea
jmp
call
mov
mov
lea
jmp
sub
pushl
push
mov
movb
mov
mov
mov
lea
jmp
mov
pusha
movb
lea
jmp
pushf
mov
call
pusha
shl
pushl
shl
mov
push
stc
add
movw
lea
jmp
movb
mov
pusha
call
pusha
call
mov
add
mov
stc
sub
stc
call
call
push
pusha
pushf
mov
movb
mov
movb
mov
pushf
movw
mov
pusha
pushf
call
pushf
popl
call
call
mov
pushf
lea
jmp
call
mov
jmp
test
sub
lea
jp
mov
push
pusha
lea
jmp
bt
mov
cmc
sub
cmp
call
pop
pusha
pushf
lea
jmp
call
jmp
mov
pushf
call
jmp
mov
setb
mov
jmp
mov
pushf
jmp
mov
movl
movw
jmp
mov
jmp
mov
pushf
mov
mov
jmp
shl
mov
neg
rcl
mov
rcr
mov
cmp
add
cmc
bt
shrd
push
call
call
rol
btc
mov
push
add
movb
lea
jmp
mov
movb
lea
jmp
push
jmp
test
add
pusha
test
cmp
call
call
mov
call
movb
call
bt
push
clc
and
lea
je
push
pusha
mov
jmp
pushf
mov
mov
mov
pusha
jmp
add
pusha
test
cmc
call
mov
movw
lea
jmp
movw
movl
mov
movb
mov
mov
lea
jmp
jmp
aam
mov
shl
movzbw
clc
adc
mov
call
mov
call
lea
jne
push
pusha
movb
pushf
mov
push
push
push
movl
lea
jmp
movl
mov
pushf
jmp
pushf
repz
popl
movb
call
shl
cmc
not
mov
rcl
shl
cmc
xor
mov
jmp
mov
pushf
call
mov
movw
push
lea
jmp
jmp
pusha
pushf
pushl
popl
pushl
pushf
pushf
lea
jmp
mov
mov
movb
pushf
popl
push
call
mov
movw
dec
cmp
stc
not
bt
cmc
neg
cmp
test
clc
xor
clc
test
movw
stc
mov
cmp
bt
sub
lea
jae
pusha
inc
movb
mov
mov
pushl
push
push
lea
jmp
repz
popl
mov
pusha
jmp
pushf
pusha
repz
popl
pusha
pushf
pushf
call
push
cmp
pusha
push
lea
jne
shld
xor
xorb
bswap
not
jmp
push
jmp
mov
jmp
mov
mov
push
call
movl
lea
js
push
pushf
popl
push
call
jmp
push
pushl
popl
pushf
pushf
mov
mov
lea
jmp
mov
jmp
call
bt
adc
mov
jmp
pushf
call
call
mov
mov
call
bts
neg
movsbl
bsr
mov
test
bt
jmp
push
repz
popl
pusha
mov
push
pushf
jmp
add
cmp
and
mov
pushf
add
pushf
mov
push
lea
jmp
push
jmp
mov
pushf
call
stc
bt
cmc
sub
pushf
push
call
call
pushf
mov
call
pusha
movb
mov
mov
push
pushf
pushf
lea
jmp
sub
pushf
call
jmp
pusha
pushf
mov
pushf
mov
movb
mov
jmp
mov
pushf
pop
call
mov
mov
pushf
push
pushf
call
jmp
mov
pushf
pushf
lea
jbe
pushf
repz
popl
jmp
jmp
push
call
mov
pushf
pushf
pusha
pushf
pushf
popl
mov
pushf
pushf
pushl
pushl
popl
mov
mov
pushf
pushf
lea
jmp
pushf
cmc
cmpl
pusha
call
call
dec
bt
xor
jmp
mov
pushf
jmp
push
movl
mov
mov
push
push
pushf
lea
jmp
movsbw
bswap
call
movb
call
cwtl
mov
push
mov
mov
mov
pushf
pushf
pushf
lea
jmp
push
movw
pushf
popl
pusha
jmp
jmp
jmp
rol
shrd
mov
btr
mov
push
cmp
test
cmp
add
call
call
movb
pushl
jmp
jmp
mov
call
das
jmp
mov
push
jmp
repz
popl
pushf
pusha
mov
push
pushf
pushf
mov
pushf
pushf
mov
push
jmp
mov
pushf
call
pushl
popl
mov
push
push
lea
jmp
add
pusha
pushl
lea
jmp
mov
pushf
call
movb
mov
call
call
mov
push
lea
jmp
jmp
pusha
call
mov
push
pusha
pushl
lea
jmp
push
push
mov
pushf
pusha
mov
jmp
add
jmp
call
mov
pusha
pushf
movb
pushf
lea
jmp
mov
pushf
call
pushf
popl
mov
jmp
mov
pushl
movb
jmp
lahf
mov
dec
setb
mov
clc
bt
not
call
mov
call
setb
jb
mov
pushf
movb
jmp
mov
pushf
mov
mov
mov
pushf
pushl
push
call
call
pushf
movl
mov
lea
jnp
pusha
mov
pushf
pushl
lea
jmp
jmp
mov
pushl
mov
jmp
push
jmp
call
shr
jmp
