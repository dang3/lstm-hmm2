push
call
ret
ret
adc
and
adc
outsb
and
in
loope
xor
shll
jmp
out
adc
in
inc
lods
push
sbb
imulb
call
push
sbb
pop
test
xor
inc
inc
push
adc
loope
in
fidivs
jge
movsl
nop
pop
push
loop
xchg
inc
push
mov
addr16
jae
in
mov
add
mov
mov
inc
adc
jbe
repnz
mov
mov
jbe
add
lcall
addr16
fwait
call
dec
imul
mov
cltd
jmp
gs
std
lret
scas
or
adc
xor
ss
push
lahf
mov
mov
add
outsb
mov
insb
in
fldt
cmpsb
add
outsl
and
push
sub
loop
pop
push
je
push
mov
or
je
lret
test
cmp
mov
jl
mov
hlt
inc
mov
pusha
shlb
std
outsl
add
ja
rorl
outsl
scas
jb
mov
inc
out
test
mov
inc
sbb
arpl
mov
xor
push
jnp,pt
jmp
and
adc
add
jo
xor
test
jmp
rcrb
cmp
push
push
push
lret
jp
inc
lret
div
inc
xchg
cmc
mov
inc
lds
in
sub
or
data16
dec
int
sub
and
sti
dec
xor
and
inc
lahf
mov
mov
les
sbb
push
inc
insb
dec
pop
je
je
sub
outsl
arpl
iret
push
cld
lock
jg
inc
push
insl
cmp
test
add
add
pop
xchg
lock
cmc
in
es
stos
and
shll
dec
mov
call
fcmovu
mov
inc
dec
inc
push
xchg
xchg
mov
add
jne
xlat
pop
lea
or
sub
inc
cmpsb
iret
and
jecxz
or
mov
sub
decb
fidivl
pop
mov
std
dec
mov
mov
fs
fildl
xlat
cmp
rorl
out
pop
lods
imul
mov
mov
test
pop
add
and
fsubrp
fistpll
mov
cld
inc
outsb
mov
mov
out
xlat
dec
mov
fnstcw
outsl
lcall
jns
mov
mov
popf
push
push
dec
sbbb
push
ljmp
leave
lret
push
insl
push
loop
out
dec
mov
inc
inc
jle
stos
or
or
in
outsb
mov
mov
mov
xchg
fadds
mov
xchg
sub
rol
cmp
push
push
int
add
cs
pushf
movsb
push
inc
cltd
test
jbe
dec
pop
shrl
add
jns
sbbl
jge
inc
mov
mov
sub
and
push
je
inc
cltd
sub
cmp
cmp
imul
add
js
push
out
lret
inc
adc
popa
and
lret
xor
mov
xor
das
adc
gs
jae
inc
lock
pop
pusha
jns
and
pop
add
cmp
out
mov
mov
adc
xchg
mov
xchg
jne
jmp
adc
in
shr
push
rolb
add
inc
cld
push
cli
clc
stos
aaa
pop
inc
jl
stos
jp
push
xchg
dec
in
mov
mov
sub
pop
pop
rorl
enter
mov
fildll
pop
mov
or
or
mov
push
xor
stos
lahf
shlb
cltd
mov
outsb
mov
pop
repnz
and
xchg
cltd
stos
insb
mov
testl
sub
aaa
pop
nop
mov
pop
sti
mov
push
dec
scas
push
jo
jne
fcoml
or
mov
and
lock
dec
mov
inc
xor
scas
jge
outsl
mov
ds
cvtdq2ps
mov
shrb
inc
mov
scas
dec
test
cmpsl
lds
out
in
fidivs
popa
or
mov
xchg
jecxz
push
or
sbb
lds
pusha
sbb
clc
inc
stos
and
ljmp
dec
stos
push
movsl
jne
aad
cmp
test
pop
ss
mov
fistl
repnz
inc
lahf
jmp
and
xchg
mov
mov
cwtl
adc
push
jmp
lcall
mov
mov
pop
mov
mov
iret
movl
sbb
inc
cmp
orb
sbb
push
dec
jbe
call
stos
push
xor
adc
scas
mov
cmp
xchg
push
cmp
mov
lock
roll
xor
sbb
clc
jl
insl
mov
scas
pop
arpl
or
push
movsb
mov
dec
loopne
add
repnz
push
sub
enter
leave
lock
iret
hlt
sarb
fiaddl
movl
pop
es
movups
outsb
jp
popf
nop
and
cmp
mov
cmpsl
mov
jb
pop
xor
sbb
std
add
ljmp
xor
and
pop
lods
cmpsl
je
mov
out
test
outsl
ret
pop
jb
mov
mov
les
pop
mov
and
in
mov
jl
jmp
adc
sub
fisubs
xor
rcl
pop
sti
arpl
mov
iret
or
adcb
push
ret
les
nop
sub
lret
daa
outsb
lods
sbb
push
push
push
add
loop
bswap
and
push
or
xorb
or
fnsave
inc
cwtl
and
frstor
mov
xor
and
and
inc
stos
sub
aam
push
jns
fdivs
dec
xchg
xchg
jb
clc
and
roll
add
jae
pop
sbb
mov
ret
inc
push
loop
jns
or
mov
sbb
int
outsb
sub
mov
aas
orl
jb
je
sub
and
xchg
jge
and
sbb
fistpll
dec
cwtl
sti
sti
mov
and
or
fs
sti
push
sub
cs
lcall
clc
ja
push
js
sub
ja
mov
fcmovne
scas
arpl
xchg
shl
outsl
bound
push
mov
sarb
fnsave
je
add
cltd
test
add
inc
das
loopne
mov
cmpsb
jno
sbb
push
pop
jns
sub
or
scas
mov
in
cltd
xchg
dec
adc
in
jns
push
les
out
jl
idiv
sub
adc
xor
lds
sub
cmp
and
outsl
xor
gs
jne
cs
add
xor
xor
push
sbb
divl
int
fldenv
mov
ret
push
movsb
aam
push
addl
mov
push
imul
push
into
aaa
mov
cld
push
in
or
pop
cmpsl
into
add
pop
add
add
pusha
cmpsl
cmp
inc
outsl
insl
add
or
add
add
pop
add
addb
add
mov
add
add
add
add
add
addb
add
dec
add
add
fmuls
add
add
add
bound
adcb
add
testb
add
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
addb
add
lock
addb
add
add
addb
add
push
add
add
add
add
cmp
add
add
add
add
add
add
mov
popf
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
jl
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
or
add
mov
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
in
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pop
add
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
addb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
test
add
andb
pusha
cmpsl
cmp
inc
outsl
insl
or
add
and
add
pop
add
subb
xchg
add
andb
sbb
add
adc
add
inc
add
subb
cmpb
andb
add
loop
add
push
add
cmpb
add
or
aas
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
add
add
dec
add
add
add
or
aas
add
add
add
add
add
add
add
add
add
cmp
inc
outsl
insl
add
add
add
add
test
add
test
add
pop
add
inc
add
inc
add
push
add
add
add
cmp
add
add
add
add
add
add
mov
test
add
add
add
dec
add
add
add
cmp
add
add
add
add
add
add
lock
add
or
in
add
pop
add
inc
add
dec
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
or
add
push
add
inc
add
inc
add
add
add
add
cmp
add
add
add
add
add
add
pop
add
add
scas
or
rolb
add
add
inc
add
dec
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
nop
add
add
add
add
inc
add
dec
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
ret
add
or
rolb
add
pop
add
inc
add
inc
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cli
add
add
or
rolb
add
add
add
inc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cs
add
mov
add
add
add
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
jo
add
call
add
add
add
add
add
add
add
addb
add
add
add
mov
cmp
add
add
add
loopne
add
js
or
test
add
pusha
cmpsl
cmp
add
add
add
add
or
add
dec
add
push
add
dec
add
dec
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
or
push
add
add
cmp
add
add
add
sbb
jmp
push
add
inc
push
add
push
sldt
nop
push
add
mov
sldt
loopne
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
je
or
in
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pop
push
add
pop
rorl
add
add
add
cmp
add
add
add
add
add
add
addb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
test
add
mov
add
add
cmp
add
add
add
add
add
add
rolb
add
je
or
movsb
add
add
cmp
add
add
add
add
add
add
clc
push
add
sbb
or
insb
add
add
cmp
add
add
add
add
add
add
and
add
test
or
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
pop
add
mov
or
enter
pusha
cmpsl
cmp
add
add
add
add
add
add
jo
add
push
call
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
pop
add
cmp
or
loopne
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
in
or
aam
add
pusha
cmpsl
cmp
add
add
add
add
add
add
call
out
or
faddl
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
enter
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
clc
lock
push
add
add
cmp
add
add
add
add
add
add
pusha
or
add
or
or
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
insb
testl
add
cmp
add
add
add
add
add
add
mov
add
lock
or
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
mov
add
add
cmp
add
add
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
sub
add
lock
in
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
add
add
cmp
add
add
add
add
add
add
js
add
add
or
mov
add
add
cmp
add
add
add
add
add
add
mov
or
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
enter
dec
push
or
les
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
or
add
or
adcb
cmpb
adcb
add
push
add
inc
add
dec
add
inc
add
insl
add
add
add
add
or
add
or
jo
add
or
dec
add
dec
add
dec
add
dec
add
dec
add
inc
add
add
add
cmp
inc
outsl
insl
add
add
add
add
outsb
or
add
add
add
or
pop
add
inc
add
inc
add
push
add
dec
add
dec
add
add
add
cmp
add
add
add
add
add
add
scas
or
add
add
add
add
inc
add
dec
add
dec
add
inc
add
inc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
repnz
add
sbb
add
add
cmp
add
add
add
pop
add
jg
add
add
jb
add
lcall
add
or
cmp
add
ljmp
add
or
cmp
add
cmp
addb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
bound
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
mov
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
enter
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fimull
add
fcompl
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
sbb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
or
add
push
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
orb
xchg
or
cmpb
orb
dec
add
dec
add
dec
add
aas
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lods
or
add
dec
or
adc
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
out
add
inc
push
or
adc
add
pop
mov
inc
inc
outsl
insl
add
add
push
or
add
push
add
inc
add
dec
add
add
add
pop
mov
inc
inc
outsl
insl
add
add
add
add
ss
or
loopne
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
add
add
add
and
sbb
add
add
test
add
add
loopne
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sbb
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
cmp
or
jnp
je
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
sub
xchg
mov
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
inc
add
add
dec
add
add
pop
add
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
test
or
push
dec
or
adc
pop
mov
lea
add
pop
cmp
mov
mov
sub
add
arpl
jmp
push
rcrl
dec
inc
xchg
cmp
add
sub
add
add
mov
xor
mov
add
jns
or
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
outsl
xchg
push
das
cmp
mov
gs
inc
js
mov
fildll
pop
push
dec
xchg
mov
in
dec
mov
push
xor
and
repz
popa
sub
mov
add
int3
jb
js
mov
xchg
in
push
cwtl
push
sbb
inc
or
xlat
mov
xchg
adc
adc
rolb
fisttpl
iret
pop
or
sbb
mov
stos
or
dec
int3
pushf
cmp
cltd
insl
jns
mov
loope
and
lret
mov
repz
push
testb
aaa
pusha
sbb
mov
cmp
xchg
cli
cmp
sub
adc
notb
and
negb
arpl
sub
loopne
imul
cmp
repz
fisttps
and
scas
push
ficoml
fistps
stos
mov
mov
jns
pop
fwait
lock
cs
lahf
sub
sub
xor
ljmp
jle
lea
out
xchg
fst
lcall
sbb
push
push
pop
movsb
and
mov
and
js
leave
ja
mov
cwtl
adcl
lret
lds
jbe
arpl
inc
mov
inc
movsb
dec
test
xchg
or
mov
inc
ffree
mov
enter
testb
stc
dec
xor
iret
mov
pop
in
mov
adc
jno
mov
push
imul
neg
call
stos
pushf
bound
inc
jns
push
ds
ja
sbbl
notb
adc
push
rcl
pop
xor
mull
mov
movsl
pop
xchg
adc
loop
jnp
jl
adc
mov
pop
mov
jmp
add
add
lea
cmp
push
out
test
push
daa
pop
stos
jns
xchg
cld
mov
xchg
push
fldcw
jg
andl
cmc
mov
xchg
jle
xchg
shrb
cwtl
fdivrl
lea
ret
mov
subl
dec
mov
int
push
or
adc
repnz
out
fcmovnbe
shlb
lahf
rolb
and
pop
mov
sbb
mov
jg
push
ss
addr16
push
ljmp
jmp
mov
loope
cmp
in
test
cs
daa
xchg
cli
push
mov
dec
cmp
ret
gs
in
adc
push
xchg
cmp
mov
outsl
jno
or
les
mull
js
push
sub
mov
les
push
add
iret
cmpsb
stos
pop
add
call
cld
add
and
popf
out
push
fnop
bound
cmp
xchg
mov
mov
mov
cltd
cwtl
push
mov
jmp
fwait
imul
test
jg
in
push
jmp
scas
rcrl
jl
rolb
loop
jne
push
jns
sahf
ret
jbe
jmp
or
nop
pusha
jnp
out
cld
push
scas
cwtl
push
dec
mov
sub
sbb
xor
mov
movsl
loop
outsb
pop
movsl
jns
add
orl
in
call
lods
cmp
iret
push
andb
and
loopne
incl
mov
cmp
xchg
pop
fbld
rcll
jge
inc
push
aad
or
jle
lock
icebp
out
clc
mov
xor
mov
jbe
mov
lret
pusha
out
xchg
mov
pop
push
rorb
mov
adc
dec
cmp
xchg
lods
cmc
loope
sti
cmp
and
or
sub
fistl
lret
into
out
xchg
pusha
or
popf
jl
pop
cmp
inc
pop
in
cli
inc
repnz
movlps
mov
pop
inc
sub
aas
repnz
jp
sti
in
enter
xchg
sti
out
adc
mov
int3
add
xor
pop
outsb
push
and
pop
pusha
in
leave
push
cld
inc
je
fcomip
pop
inc
mov
or
test
adc
inc
cmp
mov
pop
loop
mov
fists
fsubrp
movsb
dec
cli
add
pop
jg
mov
lds
lahf
movsl
test
lahf
outsb
insb
cmp
das
repz
xchg
sbb
add
repnz
pop
insl
inc
mov
inc
inc
adc
in
bound
inc
fs
scas
xchg
push
push
arpl
cwtl
data16
aaa
ljmp
dec
xchg
push
scas
movsb
add
and
push
shl
xchg
fdiv
jo
xchg
repnz
lret
shlb
popl
sbb
fwait
lock
adc
repz
sub
pusha
mov
mov
mov
lock
movsl
pop
rcrb
test
or
lcall
mov
sub
cld
sbb
pop
add
or
pop
cmp
in
outsb
rorl
mov
shrb
inc
es
into
xchg
mov
pop
fnstsw
jo
shrl
outsl
add
repnz
flds
out
inc
pop
push
orb
ss
add
sub
push
inc
jmp
cmp
inc
stos
sub
jmp
xchg
mov
daa
dec
pop
call
pop
push
sub
daa
fwait
repz
inc
icebp
cltd
std
call
repnz
adc
mov
xchg
movsl
arpl
adc
mov
rcrl
xchg
or
imul
adc
das
or
dec
int
add
push
xchg
pop
lds
call
push
cmp
push
cwtl
fld
pop
icebp
hlt
push
or
xchg
sub
mov
aaa
das
dec
inc
pop
es
icebp
push
lds
and
jg
dec
jge
ljmp
std
sub
dec
into
fbstp
repnz
lret
sahf
dec
mov
sub
mov
es
mov
or
fmuls
jle
cmp
test
std
push
rolb
xchg
push
xchg
add
inc
imul
pop
or
jne
push
inc
dec
jbe
outsb
lret
test
outsb
insb
jno
xchg
mov
js
cwtl
inc
stos
push
sbb
sub
imul
shrb
mov
pop
cmp
sub
and
test
and
test
sub
mov
dec
cmpsb
cmp
aaa
pop
lret
push
jecxz
cmp
adc
movsl
ss
repnz
xchg
cmp
inc
jle
js
mov
and
and
adc
lahf
rol
icebp
jns
cmp
mov
jae
push
pop
push
xchg
cli
inc
cli
std
aad
or
or
ret
adc
sbb
push
mov
xor
jmp
int
outsl
xorl
andb
sub
insl
jns
icebp
add
out
ss
loopne
imul
push
sub
subb
stos
nop
nop
and
data16
pop
pop
and
rcll
add
mov
aad
sbb
popf
push
push
jae
push
je
outsb
int3
lahf
test
mov
jle
sub
adc
cli
lods
cmp
aam
int
adc
sub
les
ret
leave
aam
or
ja
add
ljmp
mov
das
ljmp
xor
rorb
jl
jae
xchg
loope
pop
lods
push
sub
das
or
dec
xchg
out
lds
hlt
dec
add
out
out
outsl
xorl
jnp
ret
lret
xorb
lcall
inc
dec
jns
adcb
push
out
mov
cmc
fisubrl
pop
or
jmp
xor
leave
mov
adc
ret
in
test
bnd
sub
hlt
imul
push
adc
xchg
sub
cmp
inc
mov
test
andl
pop
aam
jmp
cld
fwait
jnp
in
les
pop
push
popf
mov
mov
dec
or
mov
leave
inc
cmpsl
scas
mov
or
pop
out
or
into
sarl
jg
push
rcl
xchg
mov
call
cmpsb
lea
shr
stos
bound
add
loop
repnz
xchg
adc
cld
leave
test
jecxz
pop
movsl
lods
aaa
xchg
mov
inc
push
push
shll
push
roll
mov
push
push
lods
and
dec
jns
adc
insl
test
jmp
stos
mov
movsb
mov
popa
imul
cwtl
pop
jae
je
les
add
or
pusha
lret
jle
pop
fwait
mov
in
sub
mov
movsb
push
cmp
and
jp
or
jne
push
shrl
mov
pop
sbb
jecxz
xor
cmp
stos
dec
dec
cmpb
adc
inc
xor
data16
in
arpl
in
xchg
shr
jnp
cltd
nop
jno
and
rcrb
xorb
pop
sub
mov
cs
jne
pop
dec
leave
push
stc
sbb
inc
inc
in
cmp
push
and
jcxz
test
and
mov
push
xchg
lret
into
xchg
ljmp
add
icebp
cltd
push
outsb
out
scas
add
xor
aas
jmp
pop
pop
add
add
jae
cwtl
cmpsl
cmp
shl
popf
lahf
shlb
sbb
lea
and
outsb
sub
aas
and
mov
daa
mov
mov
into
mov
and
int
mov
in
or
jo
mov
je
mov
push
clc
fdivl
pop
adc
mov
ret
shll
shr
xchg
inc
insb
arpl
jge
inc
sbb
pop
cmp
pop
sar
fstpt
pop
xchg
or
jl
shlb
or
in
lock
pushf
cld
jg
xchg
ljmp
aam
clc
adc
ret
enter
js
stc
xchg
pop
cmp
aas
sahf
adc
push
push
fwait
or
cmp
cmp
popf
lods
adc
and
mov
jge
adc
mov
leave
sbb
movd
hlt
push
stc
arpl
movsb
cwtl
pop
xchg
mov
lret
sub
sub
push
push
popa
xor
push
or
jae
clc
jo
mov
push
jbe
std
rolb
inc
lea
mov
popa
cmpsb
sub
cmp
gs
pusha
xlat
dec
lcall
mov
je
xor
ljmp
push
sbb
or
mov
clc
aaa
push
pop
adc
jno
rcll
pusha
out
jl
pop
ss
jb
dec
movsb
ret
loop
mov
daa
inc
cmp
scas
jmp
inc
divb
push
xchg
dec
add
mov
adc
jno,pt
lcall
fisubs
jo
into
mov
add
mov
and
xor
testb
sub
rolb
fs
fsubrl
jbe
and
adc
shrl
mov
aad
push
out
fisttps
movsl
mov
ljmp
out
movsl
mov
imulb
ret
in
push
pusha
mulb
repz
jae
aam
cmpsl
pop
aam
ss
xchg
inc
pusha
es
int
jle
jo
fisttps
loope
into
inc
imul
lods
dec
scas
xchg
shll
xchg
cmp
sbb
mov
push
orb
push
cmp
inc
sti
test
in
sbb
shrl
test
sahf
jns
out
dec
psllw
sub
loop
sub
mov
ret
xchg
adc
mov
je
dec
stos
jecxz
and
dec
xor
sbb
mov
je
add
add
sbb
ja
les
cmp
fcmovnu
mov
scas
data16
or
dec
xchg
stc
cmc
outsb
inc
sbb
sbb
dec
mov
add
lcall
test
mov
scas
inc
add
adc
xchg
xchg
xchg
cmp
ret
mov
std
sbb
js
loopne
xorb
push
imul
hlt
xchg
insl
xchg
fldl
inc
cwtl
push
mov
das
loopne
iret
int
ret
pop
sarb
loopne
iret
loopne
mov
imul
ljmp
ret
push
xchg
mov
ljmp
es
scas
test
mov
out
mov
cmp
ljmp
out
rcrb
sti
lods
shl
lods
add
sbb
push
cs
pop
mov
pop
or
mov
adc
pushf
leave
das
fucomi
jmp
jb
stc
daa
jno
xor
js
mov
pusha
xlat
int
rolb
stc
xchg
inc
jo
je
inc
pop
loopne
sub
cmp
mov
jo
sub
sbb
gs
pop
pop
ja
out
push
in
lods
or
lret
enter
repnz
daa
push
in
mov
lret
icebp
mov
jae
into
jns
scas
push
repz
sub
cmpsb
mov
movl
pop
xchg
sub
mov
adc
leave
repnz
adc
mov
fwait
mov
fdivrs
xchg
xchg
fcmovnb
push
addb
imul
aaa
inc
popa
fs
and
in
aas
into
test
jmp
or
lods
aad
sti
or
std
push
jae
xchg
imul
or
gs
mov
add
jnp
ja
mov
fldenv
loopne
in
and
stc
adc
inc
jnp
sub
ret
pop
xchg
fiaddl
dec
inc
lds
in
aad
lea
jg
movsb
nop
fwait
rclb
adc
pop
out
jb
sbb
sub
jmp
xor
lret
and
ljmp
shrb
or
cli
mov
mov
mov
dec
dec
inc
cs
pop
mov
aad
jbe
add
test
roll
rol
push
aas
ret
aaa
mov
xchg
push
inc
mov
jae
or
cmc
mov
insl
xchg
jnp
repz
loop
inc
add
dec
int
push
pop
dec
je
xor
push
sbb
mov
adc
bound
xor
dec
push
jmp
push
sub
xchg
adcl
lds
mov
mov
inc
popa
add
out
push
cltd
cmp
in
cmpsl
mov
outsl
jp
dec
in
and
lock
aaa
sub
push
fdivrp
test
mov
and
loope
sub
jno
test
clc
cwtl
in
cmpsb
dec
pop
insb
push
fwait
mov
fucomp
sbb
sbb
inc
icebp
inc
push
push
testb
cmp
nop
mov
pushf
das
mov
push
jns
mov
and
std
adc
imul
mov
out
fcomps
inc
dec
sbb
sub
fldl
mov
xlat
out
inc
inc
iret
push
cltd
and
call
xor
incb
xor
xchg
mov
adc
cli
inc
xlat
mul
mov
pop
jge
lods
or
shrl
stc
lret
sbb
fwait
cmp
mov
mov
push
adc
fcomip
xchg
adc
jnp
test
andl
pusha
mov
xchg
repz
js
popa
arpl
cmpsl
xchg
add
lods
cmpsb
dec
cmp
jmp
dec
ja
sub
xchg
jo
and
lret
rcr
mov
sub
shll
add
cmp
loop
xchg
inc
dec
dec
andl
inc
cmp
or
in
ret
pop
addr16
and
push
daa
xchg
aad
xor
mov
out
add
jnp
faddp
jbe
lret
inc
cmp
mov
jbe
aaa
sti
xor
mov
add
pop
js
cmp
push
mov
jmp
movsl
mov
and
cmp
inc
push
mov
pusha
sbb
adc
sar
cmpsl
daa
adc
pop
sti
and
jnp
pop
fucomi
jmp
out
and
jp
pop
lcall
and
cwtl
repnz
mov
pushf
xor
add
icebp
ja
xlat
lea
pop
cmp
dec
arpl
mov
sub
pop
ret
movsb
popa
int3
out
sar
repz
mov
jl
cli
pusha
loope
mov
xchg
pop
mov
xorl
clc
jmp
rclb
daa
pop
push
and
hlt
lahf
pop
push
pslld
mov
mov
lock
xchg
push
cwtl
mov
sbb
pushf
negl
and
xchg
mov
out
in
mov
xor
mov
pop
fwait
add
xchg
fdivrs
xchg
and
sbb
outsb
dec
shlb
add
adc
dec
sub
popf
mov
inc
in
adc
inc
ret
add
pop
mov
push
repnz
push
dec
jo
jne
add
mov
sub
mov
cmp
pusha
xor
and
nop
cli
setle
pop
mov
fsubrl
mov
mov
test
leave
inc
ds
sbb
inc
adc
aam
mov
xor
lret
subb
or
repz
icebp
cmp
inc
dec
pop
je
sub
inc
daa
sub
mov
and
popa
sbb
mov
ss
or
dec
outsb
jmp
cmp
not
stc
mov
or
ficoms
adc
mov
sub
mov
xor
push
arpl
or
subb
sar
pop
sbb
push
cld
cmp
add
cmp
test
es
push
fdivrs
jg
jb
aam
scas
in
add
test
fdiv
adc
stc
hlt
xchg
and
lds
add
dec
mov
test
out
add
fwait
mov
sub
mov
jnp
popa
movsb
addr16
pop
pop
imul
xor
cld
ret
dec
mov
and
jae
ffreep
pop
fmull
pusha
stos
inc
dec
es
xor
aaa
out
jle
xchg
in
pop
add
inc
ljmp
decb
mov
jo
jae
add
push
mov
ss
mov
repnz
cmp
add
xor
sub
faddl
push
addr16
cmc
pop
out
push
and
mov
cli
xor
call
aas
inc
sub
jnp
lret
pop
cwtl
insl
mov
sbb
mov
pop
out
fs
and
mov
insl
lea
cmp
cltd
bnd
mov
mov
repnz
clc
dec
jbe
in
and
sub
mov
pop
repnz
sarb
je
push
out
push
adc
imul
inc
imul
lahf
jnp
cmp
or
lret
xor
fwait
in
sar
and
mov
das
ds
enter
inc
jecxz
sbbb
in
xor
icebp
sarl
jno
inc
outsb
ret
fnclex
add
mov
outsb
test
xchg
inc
mov
mov
jle
fldenv
xchg
std
js
repnz
pop
jge
enter
sub
cmp
outsl
inc
dec
arpl
mov
mov
push
pop
cli
mov
test
jmp
push
insl
into
push
lea
and
jne
rcrb
mov
cmp
dec
and
jae
call
cmc
int3
lahf
cmp
mov
rcpps
les
pop
je
and
and
jle
lret
outsb
push
push
cli
lcall
iret
jb
add
call
arpl
jae
outsb
lods
decl
mov
xchg
add
inc
mov
std
mov
repnz
add
sub
cmc
push
mov
repz
mov
xor
rclb
test
movsb
ret
or
pop
bnd
popf
or
out
push
addb
xchg
dec
xchg
rcr
ret
lcall
lds
pop
aas
out
and
cmp
movsl
mov
sti
outsb
sbb
cmp
fcoms
dec
push
clc
push
pop
lret
jno
cmpsl
push
or
mov
mov
in
push
jo
cmp
push
push
pop
xchg
mov
fsubl
xor
push
adc
je
xor
aad
adc
mov
ja
fwait
das
negl
mov
loop
mov
int3
xchg
das
scas
sub
fdivrs
stc
xchg
lret
pop
pop
or
pusha
in
das
sbb
add
dec
into
pop
mov
cld
jecxz
mov
cmpb
mov
lock
stos
ds
inc
cmp
jmp
xchg
sub
cmpsl
cmp
sti
mov
or
mov
cmc
leave
fnsave
mov
or
aas
shll
jg
push
fists
jg
pop
out
sub
inc
mov
fldenv
mov
mov
xor
mov
out
in
mov
jp
mov
jecxz
ja
or
cmp
insb
lods
cmp
les
pop
pop
shr
jp
pop
mov
es
insl
inc
aaa
or
push
mov
ret
add
jmp
cmpl
dec
loope
xchg
call
out
fcomip
xchg
mov
shrl
rorb
xor
mov
sub
cmpl
ror
xor
mov
sbb
push
sbb
rclb
outsb
loopne
data16
inc
cmovnp
inc
dec
push
ret
lods
mov
push
mov
push
cmpsl
aas
aam
cli
jmp
cmp
ja
mov
sbb
out
leave
mov
cs
mov
add
dec
inc
mov
xchg
sub
push
das
fnsave
data16
fstpl
mov
xchg
pushf
xor
or
dec
cmp
xchg
xor
inc
pop
icebp
sbb
push
lcall
adc
dec
dec
adc
dec
dec
dec
mov
mov
xchg
ret
lods
shlb
adc
scas
cld
movsl
push
sahf
ja
mov
jne
mov
fldcw
pop
add
imulw
fisubrs
fisubs
js
xor
xchg
lcall
ss
mov
je
sbb
fistpll
jp
ss
insl
int
mov
shrb
das
das
dec
rolb
out
xchg
shld
mov
xchg
jp
jns
in
movsl
lods
call
xchg
dec
aas
sub
pusha
mov
cmp
push
dec
shll
cmpsb
sub
inc
and
mov
cwtl
lret
pop
ljmp
addr16
das
gs
scas
inc
pop
xor
jp
xchg
adc
movups
out
sub
add
push
shrl
in
xor
and
aad
push
xchg
insl
or
pop
ficompl
sti
xchg
mov
stos
jnp
loop
push
mov
jbe
inc
out
jle
jne
jmp
dec
call
ret
pop
jns
cmp
nop
stos
adc
data16
mov
xor
int
fidivrl
jle
mov
xor
jle
je
lahf
push
sbb
mov
mov
lahf
sbbl
xlat
and
movsb
inc
push
jnp
cmpsl
xor
cmpsb
movsb
adc
sub
into
mov
xchg
in
into
fistl
mov
cmp
pop
rorb
test
and
or
iret
sub
lret
jp
or
dec
test
pop
pop
xchg
sub
adc
insl
cmp
mov
dec
push
mov
push
add
mov
jae
mov
push
mov
aas
lret
dec
cmp
xor
sub
mov
cltd
jne
les
das
fistpl
mov
mov
rol
das
sbb
in
pop
cmp
stc
cmp
cmc
clc
jns
jnp
lods
movsl
sbb
and
pusha
mov
jo
sbb
fs
push
dec
dec
adc
sahf
lahf
lods
cmp
push
testb
mov
je
cld
sbb
adc
test
cmp
fisubrl
mov
js
sbbl
jp
sbb
push
loope
fldcw
fsubrl
fisubrs
adc
scas
repnz
or
aaa
sbb
pop
cmp
pop
xchg
mov
add
jno
loope
cs
test
and
cmc
les
mov
je
mov
stos
push
stos
xor
dec
pop
mov
mov
mov
xchg
aad
inc
dec
push
cmp
fcoms
mov
pop
ds
mov
icebp
dec
pop
jl
dec
fdivs
push
add
stc
dec
sbb
pop
insb
or
test
nop
pop
mov
ret
mov
stc
enter
flds
inc
je
jae
jecxz
inc
call
leave
clc
mov
lods
es
sub
xchg
in
enter
lods
imul
jo
jmp
lock
negb
iret
mov
or
or
adc
js
std
loop
push
fmuls
jnp
xchg
mov
push
push
int3
pop
dec
es
nop
mov
shr
fistpll
clc
sbb
sub
das
jle
js
adc
icebp
pushf
mov
jns
push
loop
mov
cli
pop
jle
adc
jecxz
add
inc
sbb
lea
mov
int
cltd
sub
fsubrs
arpl
xor
lods
aam
icebp
mov
fdiv
xchg
cmc
dec
xor
cmpsl
pop
stos
jmp
cwtl
loopne
dec
pop
test
jno
rorl
lret
xor
jae
addr16
jb
aam
sub
jge
movsl
jge
ljmp
or
xchg
lds
xchg
sbb
cmp
push
jmp
imul
push
and
cmp
out
sbb
sbb
push
mov
negl
cmp
and
fcmovne
mov
gs
sbb
icebp
sahf
nop
out
add
repnz
icebp
rcrl
push
frstor
fdivrl
pop
out
ljmp
sub
addb
ret
sahf
push
xchg
dec
mov
mov
scas
xchg
pop
cltd
popa
pusha
fld
sub
test
or
data16
xchg
cmp
stos
rorb
daa
or
adc
sbbb
sti
test
dec
mov
and
jb
aam
jnp
pop
daa
nop
popf
jecxz
jnp
xchg
repnz
and
cmpsl
xlat
insb
jb
sbb
lods
mov
ret
xor
push
leave
mov
es
mov
fcomps
test
mov
cmp
data16
shll
mov
pop
push
insl
sbb
push
fisubs
pushf
daa
add
sarb
mov
sar
pop
mov
or
daa
and
sub
cld
jo
ret
movsb
push
add
jmp
cli
adc
loop
jno
mov
repz
leave
cmc
sub
cmp
dec
push
pop
and
stos
aaa
lods
adc
push
cs
ret
scas
mov
enter
jae
enter
shlb
movsb
fists
sub
sar
dec
mov
sahf
cmpsb
xchg
arpl
jnp
inc
and
sbb
in
test
push
jp
push
lock
sbb
pop
pop
mov
cmp
jl
lret
mov
add
call
pop
iret
call
flds
in
popa
push
data16
add
xchg
inc
and
inc
popf
dec
cmp
sarl
sbb
add
rclb
outsl
pop
in
lock
movups
mov
adc
loope
mov
pop
fcomp
cli
out
adc
push
adc
jecxz
push
adc
outsb
ret
inc
sub
lods
push
xor
mov
mov
add
dec
adc
cmp
mov
mov
sub
icebp
aaa
pop
lds
fistpll
sbbb
push
stos
ret
rcll
pop
shrl
adcl
xchg
xchg
shll
pop
dec
lcall
xchg
sbb
popa
icebp
jp
xor
jae
arpl
aam
sub
xchg
mov
xor
jp
cmp
in
into
ficoms
and
pop
cmpl
ss
or
pop
aam
out
mov
movsb
jo
rcrb
xor
and
sahf
aas
pop
out
orb
mov
mov
ret
push
iret
enter
add
adc
mov
adc
bound
dec
add
mov
cmp
and
popl
push
gs
gs
add
or
mov
or
pop
out
les
mov
mov
test
mov
in
jge
adc
in
lcall
jne
adc
popf
imul
mov
aas
cmpsl
push
outsb
std
fs
dec
mov
inc
cs
and
push
aaa
fnstsw
daa
jae
test
inc
pushf
daa
sub
jmp
icebp
mov
cwtl
jno
in
pop
loop
scas
enter
lea
inc
xor
int3
push
push
jo
inc
xchg
lret
lret
push
lock
or
or
cs
sbb
sub
mov
push
pop
adc
hlt
int
clc
push
inc
or
mov
lea
repz
cmp
or
sahf
addr16
xor
rorb
out
stos
inc
jp
sub
and
or
fsubrl
inc
dec
std
lahf
push
pushl
dec
imul
xchg
lods
and
cmc
mov
in
pop
ss
das
jl
mov
shll
mov
xchg
jl
mov
mov
xchg
jmp
add
cmpsb
ror
mov
movsl
lahf
jmp
lock
jg
add
mov
sbbl
xchg
pop
pop
dec
and
lcall
lahf
or
in
imul
adc
jno
adc
mov
and
and
jmp
call
sbb
inc
bound
test
pusha
mov
ljmp
rclb
dec
lds
pushf
and
mov
cmp
sbb
daa
in
add
or
mov
sub
push
inc
test
xchg
test
mov
mov
lea
mov
sub
jnp
sub
adc
push
xchg
fstpl
jb
add
addr16
repz
enter
add
pushf
roll
ljmp
cmp
mov
xchg
ljmp
insl
cmovp
jae
xchg
int
scas
dec
ljmp
pop
stos
dec
push
and
stos
test
insl
int
sub
cmc
cmp
scas
xchg
adc
jge
add
fcmovnb
out
lret
imul
mov
call
push
loope
adc
jo
xchg
mov
gs
add
stc
mov
push
xor
aas
xor
icebp
mov
rcrb
jne
pop
test
xchg
or
dec
fistl
dec
data16
jns
pushf
or
xchg
cmp
or
pop
xlat
inc
test
mov
out
test
into
in
push
sbb
stos
jp
mov
in
int
cmp
arpl
pop
pop
mov
mov
cmp
ret
test
sub
and
fistpll
jno
jmp
insl
xchg
sbb
lods
mov
and
and
shl
or
add
stos
clc
cmp
cmp
sbb
cmc
mov
xor
mov
and
inc
fsts
lret
cmp
sbb
das
mov
das
jo
insl
sub
push
mov
inc
leave
cli
lods
fcomip
into
jae
int
out
mov
je
js
sbb
cmp
cmp
test
dec
cli
in
test
push
mov
cmpsl
adcb
into
call
pop
movsl
arpl
mov
es
enter
fwait
je
push
add
adc
adc
ljmp
lock
insl
sbb
xchg
cwtl
stc
shlb
xchg
inc
movb
cmp
sahf
xor
lret
jge
inc
js
pop
jl
mov
xor
inc
dec
fistps
adc
loopne
mov
leave
or
adc
push
push
jmp
arpl
cmp
add
xor
xchg
mov
pop
mov
mov
aam
mov
add
push
mov
stc
mov
movb
into
mov
lahf
adc
pop
nop
dec
sbb
dec
and
test
test
sbb
ficoms
pop
mov
hlt
lods
push
and
nop
mov
lahf
outsl
lahf
arpl
ret
xor
icebp
or
xor
bound
or
movsb
or
mov
cwtl
iret
cmp
bound
aas
pop
pushf
call
sbb
das
xchg
xchg
push
sub
jle
fisubl
xchg
xorl
mov
int3
cmpsl
cmp
das
inc
out
jecxz
das
cld
aad
imul
sbb
mov
into
out
out
std
xor
loope
mov
in
insb
movsl
out
jbe
ret
in
imul
mov
cmpsb
leave
jle
jbe
adc
jno
xchg
pop
insb
push
scas
iret
cmp
shlb
repnz
scas
pop
es
out
cmp
mov
add
ljmp
ret
jb
jle
aas
loopne
sahf
jecxz
pop
mov
mov
jp
push
stc
and
into
testl
adc
push
fcoms
xchg
jo
pop
sbb
xchg
dec
push
xchg
dec
dec
rol
inc
sahf
adc
sbb
jle
pop
or
mov
mov
ret
xchg
rcrl
pop
or
mov
dec
sbb
leave
pop
adc
std
xor
and
mov
call
sbb
sub
mov
push
jo
rorl
dec
pop
cli
mov
and
sbbl
mov
ss
inc
xchg
in
jbe
or
inc
sub
or
add
dec
int
into
mov
push
outsl
jle
jl
popa
dec
xchg
cmpsb
aas
add
nop
mov
or
xchg
xor
mov
rol
mov
icebp
or
push
sarl
or
nop
test
mulb
cwtl
nop
sahf
adc
pop
imul
sub
jge
cmp
out
test
shrb
mov
out
dec
sub
push
sbb
cmpsb
adc
lea
dec
repz
icebp
mov
xchg
push
es
popf
pop
pop
push
xlat
or
test
push
dec
pop
jae
ljmp
in
ret
inc
pop
push
rorl
call
push
mov
push
xor
mov
push
dec
imul
aas
xchg
dec
adc
push
pop
xchg
push
ficoml
xchg
repnz
loop
dec
xchg
adc
or
xor
rol
movsl
cmp
pusha
sub
scas
xor
jnp
aas
jl
xchg
adc
outsl
mov
mov
add
nop
out
mov
loopne
mov
push
addr16
aam
insb
xchg
ret
push
aaa
sub
jmp
stos
fsubs
cmp
shr
stc
sti
or
mov
out
mov
lods
xchg
inc
adc
data16
stc
inc
gs
pop
loope
push
jnp
or
xor
repnz
jne
out
jl
into
lods
pop
add
lldt
test
jp
push
push
mov
in
pop
lods
cmp
stos
mov
pop
jg
cmc
inc
movl
arpl
das
dec
push
mov
pop
sti
or
sbb
fbstp
stc
data16
in
push
pop
ds
xchg
jl
inc
inc
jp
xor
xor
outsb
or
pop
mov
xor
lcall
sbb
mov
sub
pop
lret
push
sbb
push
jns
adc
xchg
push
in
push
jp
inc
push
fucomi
inc
adc
aad
rolb
cmc
jcxz
addr16
mov
sub
xor
loope
xor
add
push
xor
stos
add
shrl
pop
mov
cmp
sbb
les
add
add
loop
lcall
push
rcrl
call
popa
stc
push
aam
iret
neg
imul
ds
loopne
scas
popf
ljmp
hlt
mov
iret
addr16
enter
test
movl
mov
insb
adc
in
insl
pop
fbld
or
sarl
std
aas
fsubrp
pop
in
scas
sbb
incl
mov
call
dec
jmp
shll
xchg
out
cld
lret
cltd
pushf
mov
or
or
and
dec
jns
jnp
cmp
adc
jbe
inc
xchg
mov
ljmp
ficoml
xchg
repnz
push
lea
movsb
inc
in
mov
mov
and
xor
or
and
mov
popa
in
sub
stos
rol
sub
nop
and
or
jle
sbbb
xorb
cmp
mov
imul
scas
subb
fisttpl
xchg
fwait
mov
xchg
xlat
test
loope
mov
into
xchg
lahf
inc
cmpsb
mov
imul
ret
mov
js
inc
test
out
mov
add
inc
mov
inc
dec
ss
in
rcrb
insl
daa
fnstcw
jno
dec
out
adc
dec
out
in
fmuls
inc
ja
xlat
xchg
mov
jo
pop
mov
dec
sbb
jbe
inc
sbb
leave
ret
jge
mov
adc
shl
cmpsb
outsl
push
std
into
sti
mov
or
imul
filds
pop
sub
dec
mov
sbb
and
mov
sbb
or
les
loope
cmpsb
cmp
test
arpl
insb
imull
sub
gs
add
pop
jnp
xchg
sbb
xchg
mov
fcoml
outsb
shlb
nop
arpl
ret
stos
aas
jae
les
xchg
mull
std
cmpsl
data16
adc
fsubs
jae
addr16
push
pushf
adc
or
ret
scas
sub
ret
push
push
ffreep
cwtl
xor
inc
ds
push
clc
push
scas
out
mov
dec
test
dec
loopne
sarb
mov
jg
mov
and
or
mov
cmp
pop
xchg
mov
push
fiadds
cmp
iret
test
sub
lods
inc
cmp
gs
cltd
inc
pavgb
movsl
testb
mov
dec
jp
mov
jo
ja
jnp
sbb
add
jmp
pop
push
divl
sbb
xchg
repnz
stc
push
jb
xor
out
xor
xor
fwait
sub
fs
icebp
jle
int3
nop
mov
fwait
mov
sub
pop
inc
imul
ror
roll
rcrb
cmp
stc
lcall
data16
mov
arpl
jecxz
push
pop
xchg
out
in
xor
icebp
add
push
sbb
xorb
dec
pop
rorb
xor
repz
jg
lret
or
test
popa
lods
jg
pop
pop
pop
jno
lea
mov
out
xchg
adc
lret
stc
lods
outsb
or
push
ret
jge
fs
dec
jo
pop
popf
xchg
push
cltd
dec
test
cmpl
cmp
lcall
inc
aad
test
pop
sbb
mov
arpl
shl
clc
jb
xlat
sarl
aas
sub
cmp
inc
fldenv
mov
fucom
test
add
es
nop
mov
repnz
jmp
sbb
cmpsb
sbb
inc
push
mov
cltd
sub
xor
xor
inc
and
inc
cltd
arpl
xchg
xor
mov
mov
push
jle
sbb
mov
inc
xor
or
sbb
ss
jno
lock
sub
jno
jnp
xor
sbb
aad
popf
jmp
push
in
outsb
push
movsl
sbb
jno
cwtl
repnz
jns
aam
jecxz
fmull
scas
fsubr
jle
mov
out
out
ljmp
sahf
mov
inc
fsts
cmp
add
xchg
or
dec
mov
ljmp
jne
sub
loopne
sbb
movsl
imul
inc
push
cmp
adc
pop
enter
and
addr16
ret
movsb
clc
pop
loop
or
dec
js
mov
xchg
jle
xor
nop
push
fcompl
gs
mov
getsec
push
in
mov
cli
ret
pop
jecxz
mov
add
test
push
outsl
mov
push
xchg
lcall
xchg
test
dec
jmp
add
sub
and
adc
repz
mov
les
lods
mov
outsl
dec
notb
jne
testl
outsb
or
test
jecxz
int3
jo
outsl
stos
cmp
test
xchg
test
fldl
mov
sbb
test
add
mov
out
xchg
ss
add
cmp
hlt
or
lea
jl
pop
adc
mov
mov
popf
out
mov
or
jo
movsl
mov
call
inc
or
cmpsl
call
inc
mov
int3
push
popf
mov
mov
fwait
movsl
push
mov
or
inc
icebp
movsl
inc
fnsave
mov
es
jno
scas
test
mov
testb
dec
jns
cmp
adc
mov
scas
test
sti
ret
ljmp
or
leave
mov
adc
and
sbb
outsl
sub
pop
mov
cmp
add
mov
shrl
adc
xchg
dec
jge
stc
pop
sbb
cmp
push
pop
into
sti
pusha
loopne
push
lret
jg
iret
faddp
add
and
imul
test
add
or
int
jb
fnsave
fs
dec
outsl
rorb
aam
movsl
shrl
cs
movb
push
bound
dec
out
add
mov
sub
inc
scas
pop
lcall
insl
dec
push
jmp
int3
imul
dec
test
daa
pop
push
push
cs
andl
mov
adc
lods
mov
and
mov
adc
loope
cmp
out
bound
add
cmp
call
lcall
push
pop
mov
fbld
sub
jge
cli
jg
or
das
dec
andl
rol
adc
add
pop
lock
loopne
ljmp
pusha
lds
fistl
in
pop
popa
shlb
dec
sbb
lahf
or
fadd
xchg
repnz
nop
or
mov
xchg
fld
std
imul
adc
int
addb
cmp
xor
xor
jo
push
out
adc
bswap
xchg
jle
dec
jp
cwtl
sti
ja
leave
fdivl
push
fadd
push
sbb
ss
mov
repz
mov
cli
inc
pushf
pop
dec
pop
pop
dec
pop
dec
es
cli
mov
stos
fsubl
sbb
inc
ficompl
xor
lods
push
cli
in
add
pop
fs
mov
pop
imul
pop
sub
int3
fldl
es
loop
fstpt
dec
mov
cltd
and
pop
mov
loop
in
std
push
dec
mov
mov
jnp
int
xor
pop
out
mov
mov
test
xorb
pop
sub
aaa
pushf
xchg
aam
cld
push
xchg
std
imul
inc
inc
add
insb
imul
ljmp
jne
pop
xchg
aaa
gs
sbb
mov
scas
jle
pop
pop
data16
test
sarl
lods
push
xor
out
dec
hlt
mov
adcb
xor
int
cmc
push
mov
jmp
push
fstl
out
aam
jmp
mov
mov
mov
dec
int3
sub
xchg
sub
inc
sub
inc
sbb
sbb
sub
lcall
pop
adcl
jnp
out
push
lds
mov
dec
aad
sahf
test
movsb
pop
adc
jns
adcl
mov
push
fwait
cmpsl
push
jb
jmp
test
inc
dec
in
rcl
outsl
dec
int3
popa
xlat
fwait
psrad
ljmp
mov
shlb
cli
add
out
leave
sub
pop
add
push
jg
cmp
movsb
inc
inc
xor
or
cld
sub
addb
int3
fwait
sahf
inc
orb
add
jecxz
dec
dec
fcoms
xchg
jl
or
sub
outsl
mov
add
push
lcall
int
or
insb
shll
push
inc
xor
mov
pop
mov
push
mov
ss
addb
cmp
out
mov
int
xor
notb
dec
mov
int
imul
adc
shl
mov
jecxz
mov
push
mov
mov
mov
add
hlt
push
cld
popa
fwait
outsl
inc
rcrl
or
out
shll
xchg
cli
mov
add
lock
inc
out
push
clc
fmuls
add
int3
cmp
inc
dec
scas
xchg
pop
sbb
xchg
jnp
test
add
rcrl
xchg
negb
adc
push
stos
out
mov
add
fnstenv
pop
lret
mov
dec
test
adc
inc
cld
or
and
arpl
cmp
jo
inc
in
xchg
ds
incl
or
popf
ret
lahf
ss
std
mov
orl
sbb
xchg
mov
stos
rcll
xchg
int
mov
inc
clc
ret
int
fnstcw
dec
sbb
add
mov
testl
arpl
shl
adc
mov
pop
or
outsl
mov
push
sub
fcoml
cltd
pop
dec
aad
insb
or
cmp
push
mov
mov
mov
xor
lret
mov
inc
call
in
jo
inc
jae
mov
mov
jg
sbb
jnp
cmpsb
xor
cld
ds
imul
jbe
arpl
loop
inc
test
ror
out
fbstp
clc
call
jns
fwait
sti
sbb
scas
lcall
ds
stc
cltd
adc
and
pop
sbb
mov
mov
lea
xlat
dec
push
add
or
mov
scas
mov
pop
cmp
dec
mov
popa
dec
push
push
and
sti
cmp
mov
call
mov
int
pop
and
in
aam
sub
inc
push
int3
or
mov
testb
add
nop
stos
xor
push
sti
out
cwtl
sub
inc
adc
jmp
dec
xor
inc
pop
imul
push
loopne
sbb
ljmp
xor
adc
mov
cli
add
lock
ficoms
jno
sahf
fadds
stos
mov
pop
mov
push
mov
push
mov
inc
rcrl
loop
imul
int
jp
add
mov
mov
add
adc
lret
dec
daa
icebp
adc
popf
lock
pusha
and
ret
push
gs
int
jo
loop
fildl
pop
mov
inc
dec
cmc
jae
jg
mov
pop
cmc
fs
bound
lcall
sub
ja
mov
xchg
add
out
nop
sbb
daa
pop
xlat
pop
rclb
out
std
push
das
xor
mov
jg
add
xlat
push
mov
or
add
mov
pop
test
mov
enter
mov
lcall
mov
and
out
scas
add
in
mov
stos
nop
inc
mov
sub
push
xor
out
inc
popf
jb
cmpsl
dec
test
lock
xor
add
inc
nop
clc
add
arpl
xchg
mov
mov
mov
pop
call
mov
dec
lret
adc
scas
stos
jnp
les
or
jmp
pusha
pop
mov
daa
jecxz
test
or
mov
xor
rorb
fcomip
jne
push
movsb
std
cmp
mov
imul
or
and
test
mov
jmp
addb
faddl
lret
mov
jle
mov
cltd
mov
sbb
mov
out
jl
stos
lahf
xchg
jle
jg
bnd
push
testb
stc
xchg
fisubrl
sti
adc
push
inc
mov
js
lods
sti
xchg
in
mov
mov
push
inc
cmpsl
add
enter
sbb
mov
test
mov
mov
lock
push
in
lods
aas
add
ret
outsl
inc
mov
mov
sbb
movsl
mov
lods
in
pop
dec
int
sti
xchg
mov
jmp
xlat
rclb
mov
lods
dec
cmp
push
sub
dec
xor
rorb
sahf
call
sbb
subl
cmp
int
mov
lcall
add
and
cmp
cmp
les
lret
inc
adc
push
aam
pop
rorb
loope
loopne
sbb
testl
in
leave
pop
cmp
adc
jmp
inc
lahf
jae
and
ljmp
clc
inc
dec
filds
xchg
jecxz
adc
lock
xchg
aam
push
mov
dec
jl
psrld
lret
sti
cs
fidivl
icebp
test
enter
outsb
sub
movsb
dec
dec
adc
adc
test
mov
cmp
jne
icebp
shlb
fsts
mov
and
xchg
inc
jnp
xchg
and
test
jmp
pushf
mov
lahf
loop
out
ss
or
loop
outsl
pop
cli
incb
push
lret
sub
sbbb
clc
dec
inc
fstps
jns
aam
fstps
mov
int
dec
hlt
inc
or
xor
cltd
imul
xor
dec
ja
rol
ret
mov
xchg
mov
lods
shlb
sub
adc
leavew
xor
shlb
pop
mov
cmp
scas
inc
bnd
push
sub
andl
and
push
cwtl
icebp
xor
scas
jecxz
fxch
mov
pop
cmp
cmp
xchg
lahf
repz
testb
andb
add
or
and
aas
pushf
cmp
lret
ret
mov
cmpsb
push
sub
mov
jb
mov
sub
mov
test
mov
mov
add
outsl
rorb
mov
and
fidivrl
or
je
fistpl
incl
add
hlt
xchg
in
cmp
sub
iret
stos
sub
pop
pop
push
cmp
imul
ja
repnz
lods
sbb
mov
mov
and
stos
jle
jnp
ss
in
mov
js
imul
mov
jmp
ss
scas
lock
cs
lcall
das
or
outsb
xchg
hlt
inc
cli
xchg
aam
mulb
mov
fists
lds
cmp
imulb
mov
nop
adc
push
call
enter
hlt
movsb
and
clc
mov
jmp
xor
or
xlat
cmpsb
nop
cltd
fcoml
hlt
rolb
xor
mov
inc
out
sbb
comiss
push
mov
fs
leave
xor
mov
and
xchg
sbb
and
or
mov
push
xchg
mov
jecxz
sbb
cs
mov
ss
push
in
adc
or
jo
xor
in
mov
in
push
jp
dec
or
hlt
xchg
in
hlt
mov
orl
leave
je
fmull
shlb
arpl
mov
xor
or
dec
ret
call
dec
adc
jae
aam
inc
xorb
inc
les
addr16
aas
subb
lds
in
test
sub
incb
sbb
cmc
fbstp
pop
insl
rolb
je
test
xchg
or
jecxz
pop
in
adc
jns
arpl
inc
popf
and
test
lcall
jl
cmp
inc
and
jmp
ljmp
std
lods
mov
cltd
in
cmc
dec
arpl
fwait
pop
imul
adc
fmulp
aam
insl
jle
mov
sti
or
mov
adc
pop
in
xlat
loop
fcmovne
xor
xor
test
push
adc
cmpsb
lock
xor
or
sbb
sbb
jae
out
or
sub
jb
cld
mov
adc
leave
outsb
adc
sbb
addr16
out
repz
sub
sbb
andb
leave
xchg
outsl
pop
mov
and
cmp
pushf
inc
sbb
mov
call
frstor
arpl
orl
or
or
cs
push
out
push
popa
jge
sub
cmpsb
sarb
xor
mov
stos
xorl
subl
les
aaa
fsubl
pop
inc
cltd
mov
fadd
call
xchg
sbb
add
movsb
xchg
and
lret
xchg
fwait
mov
xchg
nop
out
xor
mov
pop
and
mov
hlt
inc
out
jge
sbb
fldl
bound
insl
fs
inc
cmpsl
or
cltd
mov
stc
jae
adc
cli
xchg
addr16
enter
adcb
leave
mov
rorb
aad
scas
add
fcomps
jo
push
roll
sti
bnd
inc
push
lock
xchg
sbb
lock
stos
test
jno
ss
sub
inc
or
mov
fs
movsl
cltd
pusha
adc
into
sbb
das
popf
out
in
mov
pusha
dec
in
bound
ljmp
pop
nop
pop
sti
lock
cs
jmp
dec
jmp
lret
jae
movb
stos
push
mov
fildl
or
push
inc
or
mov
or
sbb
jno
jno
sub
cmpsl
ljmp
sahf
pop
sub
xor
dec
or
movsb
mov
mov
das
fsubl
js
xor
out
loope
int
pushf
and
ret
sbbl
add
sub
xor
xchg
icebp
loope
loope
loopne
jl
pop
mov
jmp
jns
faddl
add
push
testl
xor
std
pop
sub
inc
scas
mov
in
icebp
ds
mov
in
in
xchg
scas
pop
inc
imul
push
adc
cmp
les
pop
mov
add
sbb
or
sarl
repnz
adc
adc
inc
sub
fwait
ja
dec
inc
fcmovb
and
mov
insl
xchg
pushf
aam
xor
cs
and
jno
mov
pusha
xlat
fistps
xchg
xchg
out
push
sub
adc
mov
rolb
jnp
xchg
jl
mov
cmp
add
popf
stc
js
mov
xchg
fistpl
add
jb
xchg
shrb
lea
or
adc
loop
leave
add
xchg
xlat
mov
inc
popf
inc
jle
sbb
add
cmp
pop
xchg
and
fimuls
jp
xor
push
fs
mov
dec
cs
addl
jo
scas
push
cmp
mull
push
jl
push
std
repnz
mov
hlt
sti
in
push
cmp
jae
mov
jo
cs
push
scas
loope
mov
cmp
insl
jecxz
stos
mov
xchg
loope
adc
add
inc
dec
outsl
std
rclb
sub
loope
lods
pushf
pusha
mov
call
addr16
xchg
je
or
aas
cmp
pusha
scas
xor
rcrb
dec
scas
cmp
out
cltd
insl
movsb
fs
fcmovnbe
and
inc
adc
push
ret
es
das
lock
cwtl
push
out
push
cltd
mov
mov
sahf
inc
dec
push
xorb
mov
sbb
test
dec
sub
jbe
clc
shrl
sbb
mov
inc
ja
jecxz
repz
jns
pop
mov
sbb
loopne
ja
jge
or
repnz
iret
mov
fdivrs
sbb
and
aad
jnp
or
pop
loopne
sub
pusha
and
inc
loopne
push
inc
push
xor
into
jmp
sbbl
andb
sbb
scas
jae
dec
sub
fbstp
lcall
mov
push
lret
scas
cmpsl
les
lret
jns
movsl
enter
clc
lods
ret
sub
and
mov
dec
int
popf
loope
sub
nop
mov
sub
jg
in
jl
popf
inc
inc
xor
adc
or
mov
mov
dec
cmp
cmpsb
inc
jp
int
dec
dec
movsb
jp
ret
xchg
mov
xor
pushl
mov
adc
and
incb
jl
mov
xor
mov
push
dec
cli
adc
pop
adc
loope
add
or
rcrb
test
cmp
fsub
test
ret
shr
je
mov
into
mov
xor
filds
or
jne
lahf
jl
xchg
xchg
mull
out
stc
inc
add
pop
fwait
loope
mov
push
pop
std
fisttps
and
cmp
xchg
outsb
jae
adc
clc
pop
pop
xlat
jmp
icebp
sahf
aad
fcoms
js
daa
push
mov
jbe
lds
adc
or
add
pusha
cli
lods
dec
fcmovu
fs
out
in
jbe
test
and
stos
jnp
cmp
xchg
xor
xchg
fnstcw
mov
and
pop
stos
xchg
mov
cld
jp
movsb
adc
and
xchg
ljmp
mov
shlb
sub
cltd
pop
cmp
push
lea
adc
loop
pop
das
cmpb
dec
jp
int
popl
outsl
ja
ljmp
les
add
int
push
cs
add
mov
mov
adc
lret
dec
fildl
int
fcomip
stos
mov
lods
adc
push
push
and
cmp
adc
aas
in
dec
fbld
gs
mov
sub
push
mov
jg
sarb
adcl
lret
shll
jp
sub
and
push
sub
test
dec
cmc
out
push
int3
jnp
xchg
inc
adc
cmp
scas
iret
push
movsl
mov
jmp
call
bt
jge
adc
push
test
scas
insl
dec
push
or
jg
sbb
orb
adc
cmpsl
xchg
inc
test
mov
cli
adc
adc
mov
sub
lods
divl
repnz
sahf
mov
in
sarb
sub
shr
adc
mov
test
test
or
mov
inc
xor
stc
and
jns
cmc
leave
or
sbb
lcall
jmp
test
jp
loope
or
push
dec
outsl
push
orb
xchg
adc
mov
fnsave
and
fistl
gs
push
movsl
stos
test
outsl
mov
mov
push
rorb
xor
mov
mov
lods
jecxz
daa
or
fiaddl
push
or
push
jb
ret
xor
arpl
aad
xchg
pop
out
mov
mov
push
jl
xchg
shrl
js,pn
jb
cltd
pop
das
lret
jo
out
int
and
xchg
push
mov
and
imul
dec
xchg
sbb
push
loop
pop
sub
fidivl
int3
scas
aad
mov
aaa
sub
xor
push
or
dec
dec
arpl
sti
fistpll
sbb
or
sub
dec
outsb
rcr
cmp
push
jbe
out
mov
repz
out
loopne
popf
push
je
rolb
mov
or
push
inc
sbb
cld
xchg
cmpsl
jg
adc
hlt
out
ret
pop
sbb
pop
arpl
imul
lcall
or
lods
adc
dec
imul
adc
mov
and
loop
shlb
cltd
std
lea
cld
int
imul
psadbw
cwtl
cltd
pop
lret
mov
gs
in
push
mov
mov
sub
loopne
loopne
jmp
mov
in
mov
cwtl
cmp
ljmp
mov
pop
jb
pushf
fisubs
add
mov
mov
lods
inc
push
stc
mov
mov
push
sub
insb
repz
mov
dec
nop
xor
ret
xchg
push
dec
in
or
xor
sbb
xor
rcrb
lcall
xor
xor
sbb
iret
or
add
std
mov
xchg
jg
int
mov
and
jle
pusha
arpl
lret
aam
lcall
xor
cmp
and
xor
cwtl
insl
lahf
inc
mov
repnz
pop
gs
sti
jae
mov
pusha
sbb
in
stc
imul
dec
push
fdivrl
jns
lds
push
cmpl
fmull
and
pop
loop
mov
sub
test
jg
push
enter
sbb
jbe
mov
leave
jo
dec
mov
test
inc
test
adc
mov
mov
sub
pusha
imul
inc
in
rcrl
pop
mov
mov
fdivrs
das
popf
in
inc
push
mov
clc
fiadds
daa
xchg
push
call
imulb
inc
std
ret
icebp
data16
mov
jl
sbb
popa
lea
fsts
mov
cmp
lods
mov
outsl
rcll
pop
push
ret
popa
adc
jle
mov
leave
adc
inc
addr16
cmpsb
icebp
sbb
jb
push
gs
jb
int3
sbb
testb
pop
sbb
sbb
mov
sarl
mov
loop
jl
jge
daa
cmp
icebp
push
int3
cmp
pop
loop
adc
mov
je
xchg
pop
lret
sub
mov
test
push
add
pop
cmc
outsb
lods
mov
inc
jecxz
adc
leave
jl
mov
xchg
call
xchg
ljmp
aam
out
jmp
scas
imul
call
jl
iret
dec
shll
adc
mov
jg
dec
test
movsb
arpl
sub
icebp
out
les
push
out
in
sub
xchg
add
add
pop
sti
mov
xchg
call
mov
lea
push
dec
add
and
mov
lcall
sub
mov
dec
adc
push
das
lahf
or
xor
popf
pop
cmp
outsb
lret
xor
jb
jbe
dec
mov
out
mov
repnz
jge
and
pop
dec
inc
idivl
scas
xor
sar
mov
mov
lock
jo
ljmp
pushf
popa
lcall
jle
dec
adc
in
cmp
stos
xchg
jae
add
adcl
idivb
mov
sub
in
adc
push
jg
jp
fidivrl
cmp
cmc
movsb
push
mov
mov
jae
fs
xor
mov
jne
lea
lock
pop
imul
jmp
ret
jb
sahf
jbe
sbb
xchg
adc
and
push
add
in
jg
mov
clc
or
aas
cmovne
cmp
es
or
cltd
jno
mov
dec
sbb
push
fnstenv
cmp
pop
fucomp
aad
xor
lods
fs
mov
test
adcl
xchg
add
inc
sub
les
pop
jp
rcll
outsl
mov
rcll
pop
pop
imul
pop
cmc
fs
sub
sbb
pop
mov
or
mov
test
mov
daa
jmp
lds
xor
leave
scas
mov
ds
pusha
loopne
dec
jne
shlb
cmpb
cwtl
sbb
adc
cmp
adc
and
dec
std
push
imul
push
jns
dec
mov
movsl
xor
dec
mov
and
pop
mov
ret
fildll
ljmp
inc
mov
leave
mov
movsb
adc
stc
dec
sub
mov
mov
adc
mov
adc
pop
outsb
mov
xchg
dec
xor
dec
ds
and
jne
inc
fdivr
dec
mov
mov
xor
lods
out
cmp
push
lds
jbe
and
imul
push
andl
dec
adc
hlt
sbb
push
fs
or
andb
iret
or
inc
orb
js
xor
sti
ffree
xor
pop
sub
faddp
jo
fstl
mov
ds
dec
mov
adc
scas
xchg
test
xor
iret
aad
call
jbe
mov
stos
stos
or
decb
pop
fs
icebp
sub
pop
loop
incl
xor
or
add
and
insb
imul
pop
xchg
adc
jp
leave
loopne
cmp
pop
orl
adc
insl
inc
xchg
sbb
xor
jnp
clc
pop
mov
data16
test
mov
jae
lcall
jns
cld
ss
mov
sbb
ret
sub
call
and
xlat
in
test
in
stos
cltd
loopne
inc
push
mov
push
inc
add
scas
jg
ficoml
mov
je
xlat
adc
fstpl
pop
mov
jg
or
movsl
add
das
and
les
bound
and
in
outsl
les
pop
int3
clc
mov
sub
in
add
shll
hlt
mov
js
jae
mov
stos
mov
shl
jp
cmp
pop
lods
xorl
and
int
pop
xadd
jecxz
arpl
ficompl
jl
add
mov
mov
push
sbb
xor
ds
testl
jno
imul
pushf
test
paddw
add
jno
jecxz
mov
mov
jg
decb
mov
mov
jge
dec
lods
in
ljmp
xor
cmp
and
pop
aaa
js
cmp
pushf
sub
fidivrs
jno
imul
subl
jae
enter
repz
in
and
es
movb
mov
and
jbe
mov
cmp
xor
mov
xchg
mov
and
movsl
mov
and
push
push
scas
movsl
mov
daa
sub
xor
cmp
pop
pop
js
jle
mov
cmp
mov
jno
mov
in
ds
xchg
xchg
cmp
xor
inc
mov
addl
adc
fdivrl
xlat
dec
sbb
push
mov
loopne
test
xchg
mov
jmp
inc
mov
add
mov
add
and
jl
xor
dec
dec
push
sbb
xchg
xor
clc
adc
or
mov
icebp
insb
call
mov
xor
add
lahf
mov
aam
fstpt
dec
xor
pop
pop
push
sub
loopne
jl
or
scas
jbe
mov
outsb
leave
adc
jl
push
pusha
add
js
mov
cltd
mov
mov
pop
out
rcll
nop
ret
dec
int
loopne
aad
adc
out
hlt
aam
aas
and
jbe
int3
add
test
pop
jne
adc
mov
aaa
inc
xlat
popa
test
dec
pop
movsb
pop
or
pop
mov
mov
cld
shr
ljmp
pop
je
mov
lds
notb
mov
cmp
ror
inc
ljmp
fucom
jge
cmpsl
mov
xor
popa
popf
inc
int
pop
out
aam
xor
aad
std
or
aam
dec
sbb
fwait
lods
cmp
inc
mov
adcl
lods
pop
jp
roll
jp
lahf
loopne
adc
inc
idivb
loope
add
sub
sub
adc
icebp
cmp
mov
sti
movsl
addr16
bound
pop
jl
lcall
xchg
div
inc
push
sub
cmp
aad
cwtl
fldl
shrb
test
ljmp
mov
xlat
mov
jg
fwait
push
add
pop
add
push
inc
jnp
loopne
fisttps
push
popf
icebp
testb
sbb
call
jns
ljmp
inc
lds
je
cmp
dec
inc
pop
mov
andb
push
inc
dec
xchg
filds
jge
cs
clc
std
xchg
test
adc
mov
and
pop
add
xor
xchg
push
cmp
add
sbb
aam
daa
mov
out
paddb
addr16
push
dec
clc
jle
or
addr16
jl
adc
aas
cmpsb
cmp
cmp
mov
jnp
xchg
pop
je
mov
pop
adc
mov
pop
sub
push
cmp
mov
inc
shrb
jb
adc
pop
loop
mov
pop
out
mov
xchg
add
in
adc
push
mov
fisubl
loop
aad
and
cmpsb
sbb
sub
mov
dec
and
cmp
inc
push
stos
jecxz
mov
lret
repz
test
or
or
movsb
push
mov
push
adc
ds
ret
mov
fucomp
jmp
inc
xlat
ljmp
cwtl
push
sarb
ja
and
stos
scas
cmp
enter
mov
aas
sbb
and
jecxz
pop
int3
ljmp
aam
xor
call
xchg
push
loop
movsl
test
lahf
nop
mov
sbb
in
lods
or
sti
push
mov
out
insb
in
cld
push
mov
mov
insl
in
sbb
push
test
pop
and
adc
xor
ret
jmp
and
in
icebp
cmpsb
out
inc
dec
and
scas
sub
mov
sahf
mov
jge
mov
push
and
je
hlt
bound
xchg
dec
scas
cmp
mov
push
js
lcall
mov
roll
pop
in
cmpsl
idivb
add
adc
fs
int3
fildl
jl
pop
xchg
dec
and
insl
cmp
hlt
push
mov
imul
sbb
or
pop
mov
dec
push
call
mov
mov
mov
sarl
or
mov
test
or
daa
fstp
adc
push
enter
enter
pushf
rorb
xchg
mov
test
adc
cmpsl
in
xchg
pop
jb
aaa
adc
cmp
adc
sub
push
lahf
lret
push
lods
mov
pop
mov
inc
mov
pop
in
jne
aam
xchg
mov
lods
adc
push
lcall
jns
stos
push
mov
jo
mov
jmp
pop
or
push
mov
or
std
mov
jp
jno
outsl
adc
lret
mov
fwait
popf
mov
adc
cltd
out
in
sbb
jge
movsl
push
or
cmpsl
inc
or
push
jle
adc
cld
cmp
lahf
xor
loopne
cmp
aas
add
push
nop
fsub
pop
push
xchg
divl
xchg
ret
and
pop
sub
xor
lret
jge
adc
nop
in
repz
sbb
pop
fildll
stc
stos
int3
std
flds
inc
mov
push
addr16
rcrl
incb
add
into
mov
and
jle
pushf
fcmovne
arpl
je
rorl
push
mov
lcall
push
das
mulb
mov
or
push
pusha
and
js
and
in
xor
inc
addr16
jo
nop
shlb
push
xchg
jb
sub
inc
push
lods
adc
push
int
stc
or
add
push
push
mov
mov
popa
call
sahf
mov
shl
cmpsl
add
cld
stos
das
add
je
loop
cltd
out
jg
call
adc
cmp
rorb
outsb
fildl
faddl
lock
test
sbb
flds
pop
inc
rcr
jno
std
test
sub
lcall
push
movsl
les
or
add
xor
push
sbb
mov
roll
mov
xchg
into
int
jns
push
mov
cmp
mov
int3
add
jp
lods
jmp
jne
iret
enter
int3
fsubrs
sbb
ds
repz
shl
dec
or
lds
mov
ljmp
je
pop
jns
xchg
jg
frstor
jbe
adc
jns
sub
stos
mov
scas
sahf
pop
mov
and
les
mov
mov
test
dec
sbb
loope
les
scas
add
gs
repnz
pusha
mov
test
lcall
mov
js
jl
mov
mov
adc
mov
nop
ss
adc
adc
lock
mov
jecxz
and
jae
rolb
xchg
loopne
adc
jle
iret
shll
xchg
push
pop
loope
ja
push
jns
jecxz
ja
or
scas
mov
rcr
call
bound
pop
imul
adc
inc
fs
cmp
lods
and
mov
jns
lea
hlt
mov
adc
cmp
adc
adcl
and
js
imul
fdivrs
mov
rorl
mov
clc
cld
jmp
jno
mul
sub
xchg
push
fnstenv
push
outsb
fcoml
mov
jno
data16
sub
cmc
jp
or
cwtl
add
int
fsubs
mov
xor
jbe
imul
out
decl
mov
lods
adc
inc
ret
ja
test
call
repz
sbb
pop
inc
adc
cltd
dec
xor
xchg
sub
mov
jnp
es
mov
gs
lds
movsl
es
xchg
js
mov
outsl
push
loopne
mov
aaa
xlat
mov
push
cmpsb
jle
stc
test
mov
ds
sub
add
popa
cmp
inc
xor
xchg
dec
xchg
xor
fcomi
push
movsl
adc
dec
mov
xchg
xorb
ljmp
cwtl
mov
or
bound
and
mov
sub
cmp
int
adc
enter
dec
sahf
xchg
add
fwait
test
cmp
or
cs
movsl
rcrl
test
lods
mov
shll
jmp
mov
mov
insl
inc
cmpsb
mov
cmp
mov
inc
mov
pushl
stos
push
test
inc
jne
js
imul
push
shlb
and
ret
and
out
aam
and
rcrl
stos
dec
data16
outsl
and
add
mov
mov
shrb
jne
repnz
idivl
lods
loop
xchg
cmp
and
test
loop
imul
cmpsb
scas
shr
add
and
mov
ret
dec
mov
imul
cmp
loop
jns
mov
ljmp
xor
into
sbb
pop
or
sub
movsb
repnz
mov
sbb
jecxz
sbb
cmpsb
cmp
in
lds
adc
mov
xchg
loope
push
mov
mov
dec
hlt
push
insl
pop
shlb
mov
cli
and
repnz
fcompl
leave
cmp
lret
cmp
test
adc
push
xor
jecxz
fucompp
insl
xchg
adc
int3
imul
fs
divb
fiaddl
push
push
or
ljmp
scas
imul
in
mov
shl
mov
mov
or
ja
rolb
popf
inc
or
int
add
jb
cmpsb
lcall
add
in
ret
push
aad
int3
sti
inc
into
in
lret
mov
and
shlb
xchg
ret
pusha
imul
mov
push
xchg
ja
sub
pop
negb
mov
shlb
imul
sbb
dec
scas
xchg
and
dec
lods
jno
mov
mov
sarb
pop
std
imul
pop
adc
shrl
loopne
sub
cld
ds
xchg
xor
inc
sbbl
idivl
cmp
lea
xchg
mov
adc
mov
lea
cmc
xlat
adc
popf
mov
dec
push
dec
mov
fs
mov
dec
and
jge
scas
clc
push
dec
push
loop
dec
dec
imul
adc
xchg
pop
adc
dec
sarl
mov
jmp
push
push
sub
xor
jle
scas
ljmp
cmp
mov
out
jg
push
jg
insb
xchg
mov
and
cmpl
test
push
xchg
and
imul
mov
add
or
push
mov
adc
out
cmp
push
test
and
sbb
les
xchg
enter
stos
repz
mov
mov
xlat
lret
stos
pop
dec
and
call
ja
xor
fs
add
cmpsb
dec
inc
and
mov
jno
and
pushf
dec
scas
ret
andb
in
bound
or
icebp
loop
inc
cs
cmc
add
push
push
fistps
mov
lods
xchg
mov
movsl
mov
repz
in
addl
fcompl
lods
dec
pop
fisttpl
jns
xchg
in
in
inc
xchg
cltd
jle
cmpl
and
jbe
cmc
aaa
jg
jge
bound
push
jl
mov
mov
adc
popa
inc
xchg
jbe
xchg
mov
rorl
adc
dec
inc
idivl
lods
cld
and
and
popf
push
out
adc
jp
jge
jno
jbe
fwait
inc
mov
stos
cmp
into
psubusb
mov
out
sub
arpl
mov
imul
pop
push
dec
xchg
mov
js
lahf
fsubrl
or
jp
int3
mov
rclb
cs
out
mov
pushf
fnstenv
movsb
test
mov
xchg
and
cmp
push
out
ja
sub
jae
hlt
test
movsl
mov
pop
mov
scas
lcall
and
xor
sbb
nop
imul
pop
pop
enter
inc
inc
push
push
pop
mov
fisttpll
popf
movsl
lods
sbb
cwtl
xchg
jecxz
bound
push
cwtl
scas
rorb
xchg
stc
or
aas
pop
inc
sarb
test
outsb
lret
movsl
rorb
xchg
xchg
lret
rcl
adc
mov
flds
mov
or
xor
ror
jnp
jno
divl
fwait
pop
inc
shl
ret
xchg
pop
xchg
cmpsl
dec
mov
xchg
inc
out
jge
inc
or
aad
xchg
cmp
or
mov
loopne
pop
in
jo
sub
mov
mov
xor
fisubrl
xchg
popa
xor
jnp
mov
jge
loopne
shlb
pop
lahf
sub
jo,pt
mov
sahf
popf
movsb
leave
xlat
repnz
mov
pop
jb
mov
add
xchg
mov
insb
mov
add
xor
xchg
ds
out
add
xlat
clc
movsl
sbb
repnz
popa
and
cmp
int
test
out
lret
cs
cmpsl
dec
sbb
lret
sti
icebp
and
lret
ja
sbb
dec
icebp
add
dec
push
fisttpll
and
in
or
aas
adc
sub
cmp
sub
pop
push
xchg
bound
lcall
or
out
or
sub
inc
mov
std
xor
sbb
mov
dec
jae
jp
xchg
lcall
in
daa
xchg
cmp
fcmovbe
xchg
fidivrl
addr16
lahf
cmp
dec
adc
xor
fwait
pushf
add
or
fisttps
and
cli
mov
push
and
in
mov
icebp
push
daa
int
shll
aam
ja
mov
jbe
les
int3
dec
mov
jge
lcall
xchg
inc
jg
cmp
cld
mov
sub
jne
add
dec
or
inc
stc
pop
sbb
mov
ja
mov
mov
lret
cs
push
mov
mov
scas
jg
imul
js
mov
jg
lock
je
pop
mov
dec
xchg
push
outsb
mov
cmp
and
stos
in
and
push
jne
pop
pop
stc
xor
mov
cld
jmp
lret
push
mov
lods
inc
test
lret
icebp
or
pmulhuw
jle
mov
push
mov
lds
pop
fwait
loope
insl
outsl
subl
xor
adc
cmp
mov
out
fldenv
sub
ret
insb
or
xchg
and
rclb
clc
mov
and
mov
xlat
xor
push
jo
jo
or
es
add
lcall
inc
ret
adc
xchg
jecxz
fsubs
adc
nop
xor
js
adc
jno
add
ret
or
addr16
addb
jae
jle
jnp
out
daa
pop
cmp
fidivrs
aaa
or
pop
vpavgb
cmp
jne
movsl
in
aas
fidivrl
cmc
mov
inc
cmpsl
movsb
sub
dec
sub
push
adc
push
cmp
cmp
ret
mulb
inc
push
mov
shrl
test
jb
or
mov
cmp
ja
and
cmp
push
iret
sub
mov
in
mov
fistpl
in
jg
sbb
and
jl
pushw
loop
roll
cld
gs
imul
add
pusha
stc
lods
lods
pusha
lods
cmp
xchg
sti
pop
movsb
lcall
and
sub
push
nop
mov
sbb
jo
addr16
clc
cmp
fs
popa
sahf
xor
cltd
cmpsb
and
fs
ret
fimuls
jae
test
movsl
xlat
pop
pop
ret
or
inc
sbb
cmp
push
js
hlt
or
cmpsb
mov
mov
jp
xchg
sar
cmp
mov
ds
jmp
lret
in
push
lds
sbb
mov
pop
sbb
dec
xchg
out
and
lock
out
sahf
shll
loop
hlt
pushf
mov
sub
jle
cs
and
cmc
cmp
fiaddl
int3
add
jecxz
add
out
in
fsubrs
mov
in
push
sti
lock
dec
jp
jnp
and
xchg
rolb
mov
aam
sbb
push
lock
mov
jle
mov
stc
cwtl
popa
pushf
das
jp
inc
mov
pop
std
adc
sbb
movsb
jnp
shlb
cmp
pop
xorb
stos
xchg
fisubs
jge
mov
jnp
rcrb
dec
add
insl
pop
pop
xor
xchg
jno
ja
adc
adc
sub
lret
cmp
adc
xchg
mov
insl
scas
sub
mov
xchg
lcall
inc
nop
stc
jge
xorb
std
lods
out
imul
xchg
das
clc
loopne
rcr
pop
inc
mov
jnp
test
sub
ret
dec
adc
lret
incl
loope
add
xor
das
hlt
and
adc
cmp
insl
sub
popa
mov
mov
pop
xchg
enter
fildll
jl
push
pop
cmc
loopne
test
lea
movsb
push
in
fimull
sbb
sbb
push
inc
cli
adc
jmp
aad
cmpl
xchg
ret
jno
xchg
std
push
iret
aaa
push
aaa
lret
mov
icebp
cmp
cwtl
sbb
jb
sub
xchg
cltd
mov
cmpsl
orb
into
mov
cltd
adc
push
aas
dec
pop
mov
jnp
mov
adc
faddl
mov
add
mov
in
xchg
sub
stc
push
lahf
pop
inc
cmp
cmc
sub
cmp
jle
aad
popa
loope
pop
lock
dec
jp
dec
xchg
lods
xchg
sub
sub
rorl
push
pop
lock
cmp
call
aam
mov
xchg
test
imul
sub
xor
xchg
mov
sbb
jg
sarl
int
movsl
testl
inc
std
xchg
addr16
hlt
sbb
jae
scas
dec
enter
xchg
out
adc
mov
cmp
addr16
jecxz
or
hlt
adcl
mov
lcall
adc
lods
mov
xor
test
ja
lret
mov
outsb
and
lahf
addr16
std
sbb
mov
loop
loope
fwait
sbb
out
dec
enter
faddp
jno
mulb
lds
mov
lret
stos
nop
ds
mov
xor
cltd
je
jecxz
in
imul
xchg
movsl
mov
add
jg
into
or
xor
or
in
sub
push
fcmove
enter
ret
mov
fwait
push
or
les
into
test
ret
lds
mov
out
push
rcl
fwait
and
scas
int
jl
push
bound
inc
ja
shr
jmp
int
lcall
icebp
test
das
push
mov
or
aad
mov
aaa
test
pop
and
test
outsl
jl
test
and
sub
subb
aam
imul
call
in
pop
shll
cmp
in
add
stos
mov
mov
or
adc
add
pop
ret
cmpl
insl
jmp
les
aam
jge
inc
sub
mov
jno
test
jo
sbb
add
cmc
std
scas
loope
ret
push
cmpsb
dec
scas
inc
jns
pop
jno
push
lock
hlt
push
pusha
rcr
xchg
sub
cmp
mov
cltd
loop
test
jle
mov
in
sahf
in
lea
loopne
adc
jns
sbb
mov
orb
loopne
or
divb
aaa
xor
aad
dec
dec
scas
out
add
and
js
cld
lahf
pop
dec
daa
daa
cmp
xchg
mov
jb
xchg
dec
cld
adc
std
pop
imul
scas
adc
mov
addl
rcll
xor
lods
in
cmpb
popf
loope
push
cmp
xchg
pop
jge
ret
push
fldt
jg
lcall
pop
les
loop
je
stos
xchg
ret
xchg
dec
fwait
sti
idiv
lods
push
lea
lock
sbb
pop
adc
clc
mov
mov
lds
mov
adc
enter
xchg
in
js
mov
mov
movb
popa
repnz
call
jne
push
cmp
pandn
xor
loopne
inc
or
xor
dec
push
pop
dec
mov
sub
pop
fxch
andl
lahf
hlt
test
lcall
adc
dec
xchg
test
pop
rcll
xlat
cmpsb
stc
adc
sahf
imull
inc
pop
jecxz
xlat
jp
incb
sub
xlat
sbb
mov
jg
fstl
lcall
xchg
sbb
xor
sbb
cli
mov
inc
jae
lea
outsl
ret
pop
iret
stos
and
sti
and
and
push
add
cmc
mov
add
sbb
fs
sti
jp
mov
jne
adc
jo
jbe
cld
out
lds
mov
xchg
and
mov
popa
inc
inc
into
call
push
push
cmp
add
popa
andl
test
loopne
dec
icebp
pop
pop
sarl
adc
out
fadds
add
ss
mov
std
sarl
fisubs
in
sbb
xchg
push
sub
test
std
int3
or
mov
or
or
lcall
hlt
mov
leave
mov
mov
xor
inc
jae
pop
lock
mov
push
jne
xor
in
mov
dec
adc
repnz
sub
jae
stc
imul
ret
idivb
cmc
mov
aas
mov
pusha
adc
cmp
dec
stc
jb
and
pusha
dec
mov
cmp
ret
testl
inc
and
adc
roll
dec
or
imul
leave
jbe
adc
or
inc
dec
daa
lret
push
cli
nop
jge
lahf
bswap
mov
divb
cmpsl
push
aaa
inc
pop
cmp
enter
pop
xlat
sbb
or
lahf
mov
mov
push
jnp
fadds
mov
lahf
mov
sub
pop
sbb
scas
mov
jl
xor
repnz
pop
bound
call
adc
jno
cmp
mov
aad
faddp
fcmovnbe
sub
push
xchg
lods
sub
adc
push
pop
cmpsb
pop
push
and
jne
cmpl
les
mov
es
and
aad
iret
std
test
out
adc
testl
inc
cld
add
sub
adc
insb
push
push
icebp
popf
cmpb
popf
pop
xchg
stos
mov
dec
cmpsb
int3
add
sub
fisttpl
jo
das
out
popf
insl
mov
out
adc
pop
jmp
mov
sub
add
pushf
out
outsl
push
loopne
pop
xchg
pop
insl
or
or
xchg
jns
dec
das
shrl
out
or
push
std
sub
cld
adc
or
adc
ret
inc
sub
jne
xchg
jecxz
cli
pop
scas
cmp
mov
movsb
jne
and
inc
cmp
jnp
out
push
inc
cld
sahf
push
xor
mov
xchg
pop
push
pop
mov
and
arpl
push
adc
or
std
pop
loopne
test
xchg
outsb
test
mov
xchg
rcrb
lods
nop
es
shrl
inc
cmp
dec
xor
icebp
leave
jae
ds
dec
in
jle
ds
cmc
jl,pn
push
jmp
jl
cwtl
lock
xchg
std
in
sbb
pusha
and
sub
in
pop
pop
mul
jl
rcr
mov
bound
rclb
fst
jne
mov
int
sbb
inc
divb
imul
adc
cwtl
cs
cltd
xchg
jbe
add
bound
pop
js
sub
lods
inc
push
mov
je
int
adc
pop
orb
jp
pop
adc
pusha
mov
xchg
lret
push
mov
and
xchg
inc
dec
iret
ljmp
test
mov
mov
xlat
pop
stos
jge
cmp
push
ds
mov
or
imul
outsl
jge
lds
dec
push
lods
xchg
add
ja
divb
notl
xchg
ds
movd
mov
shrl
adc
pop
inc
stc
cli
mov
mov
sub
mov
jb
sarb
in
out
fcmove
sarb
pop
adc
push
in
push
pusha
sub
sub
push
mov
hlt
movsb
sti
mov
mov
sub
mov
cmpsl
cmp
popf
loop
xchg
jns
cld
fucomip
dec
mov
xchg
psubsb
pop
add
mov
inc
outsl
inc
popf
ffreep
inc
mov
loope
xchg
jmp
push
inc
push
adc
cld
gs
or
cmp
mov
xlat
add
jbe
and
adc
outsl
gs
xor
cltd
insb
and
xchg
xor
cmp
mov
sbb
cmpl
in
imul
adc
pop
lcall
shr
push
into
dec
addr16
stc
mov
or
mov
jmp
add
repnz
lret
pop
cmp
xlat
ds
jmp
ret
ficoms
mov
sbb
sub
push
inc
lcall
inc
int3
fwait
popf
mov
pop
xchg
out
cmc
mov
inc
cmp
mov
or
ds
loop
xchg
mov
pop
lods
push
rcr
sti
jb
pop
xor
jge
xchg
jae
jecxz
outsl
push
shlb
dec
out
cmc
and
out
fisubrl
xor
inc
xor
xlat
mov
gs
call
and
loope
das
int
sarl
ret
add
mov
xorb
or
addr16
jae
mov
mov
lea
rorl
inc
sub
shll
and
sub
ss
test
inc
push
and
nop
xor
ret
enter
lock
sbb
das
inc
xor
pop
lods
and
mov
sub
shl
test
sub
enter
cmpsb
fidivs
mov
mov
jmp
shrb
mov
adc
test
mov
xchg
mov
pushf
aas
rcrb
lds
outsl
pop
lods
push
inc
in
mov
lret
jae
add
xchg
shlb
pop
je
mov
imul
cmp
xor
jle
push
movsb
add
repnz
in
and
jns
and
pop
mov
leave
into
and
out
aaa
jb
mov
addr16
in
shll
jbe
xor
push
inc
bound
fisubl
pop
das
lret
push
add
ja
jns
lahf
mov
or
daa
mov
jns
jg
cwtl
adc
popl
xchg
sbb
andb
sbb
add
bound
pop
push
pop
out
bound
push
rol
sub
cmp
cmc
jecxz
inc
movsl
dec
bound
mov
jae
addr16
mov
les
sub
ja
push
dec
jo
add
mov
dec
mov
dec
loope
cmp
scas
ds
shll
jecxz
psllw
cltd
jp
ds
data16
mov
iret
push
mov
sbb
insb
js
and
lea
daa
into
mov
xchg
je
jge
pop
fisubrl
mov
xor
and
xchg
mov
out
mov
jb
sub
push
out
cmpsb
sbb
ja
mov
outsl
sbb
pop
loopne
aad
push
adc
dec
sbb
dec
adc
mov
popf
dec
mov
insl
dec
sub
pop
or
movsl
push
dec
mov
clc
mov
mov
xorb
sub
aaa
mov
cmp
cmp
jbe
das
jo
adc
insl
pop
es
add
mov
xor
dec
sub
fstpt
pop
outsb
popf
aas
cmp
loop
into
movsl
xor
push
adc
test
add
rclb
fdivs
clc
inc
inc
rcrb
or
dec
mov
mov
mov
cmp
rcr
jne
jnp
shlb
adc
pop
iret
jl
vfnmadd132pd
lahf
dec
ja
bound
sbbl
jne
xor
or
pusha
xchg
jo
or
aaa
mov
xor
repnz
inc
fildl
sbb
mov
scas
mov
dec
aaa
decl
cld
dec
push
and
adc
cld
sbb
iret
pop
sahf
adc
sbb
sti
movsb
cmp
repnz
outsb
jecxz
inc
mov
xcrypt-ctr
cmpsl
ffreep
mov
push
sub
cmp
mov
jp
fnstsw
cs
add
mov
ret
inc
pop
cmpsb
cs
fdivl
and
xor
aas
inc
and
xchg
mov
push
leave
popa
loope
jmp
in
cmp
xchg
cmp
jmp
sbb
mov
mov
mov
push
mov
jge
fs
popf
jmp
xor
or
popf
stos
aam
lret
xchg
adc
xor
inc
xor
stos
imul
cmpsb
sub
aas
mov
test
jle
repnz
push
add
std
adc
stc
adc
cmp
es
andb
adc
add
outsb
cwtl
loopne
dec
es
sub
mov
cmc
dec
rorb
cli
lea
hlt
dec
cltd
fbstp
pushf
push
shl
sbbl
sbb
xchg
sub
jle
test
stc
jle
mov
lret
dec
push
test
call
add
mov
or
stos
lcall
cmc
mov
jle
inc
push
fldt
fmuls
rorl
pop
add
cmp
das
xor
cli
movsb
aaa
dec
adc
xor
cwtl
scas
test
adc
add
test
push
mul
xchg
loop
or
adc
and
and
pushf
sbb
data16
push
mov
cmp
and
mov
leave
icebp
add
jg
cwtl
int3
fmull
mov
and
xchg
inc
aad
mov
scas
mov
cmc
add
enter
rorb
cmp
sub
je
or
or
xchg
enter
inc
test
cmp
shr
sbb
cli
scas
subb
out
movsl
popf
and
and
mov
cmp
psubw
xor
or
or
daa
faddp
pushf
xchg
pop
adc
inc
add
icebp
bound
mov
and
push
aam
adc
ljmp
mov
shr
subb
daa
faddl
nop
cltd
add
mov
xorl
je
sbb
fistpll
push
sahf
jne
push
mov
adc
cs
xchg
inc
aaa
daa
mull
add
xchg
iret
js
lods
mov
mov
repnz
cmp
jl
mov
jp
mov
and
cmp
mov
xchg
shr
rcr
fbld
pop
in
stos
out
add
out
call
popf
or
out
movsb
andnps
scas
movsb
mov
ds
jb
jbe
jmp
sub
repz
out
aam
add
push
lock
xchg
jbe
testl
lret
hlt
inc
ja
movb
gs
dec
mov
shl
cmp
jb
insl
lret
aaa
add
jb
jb
outsl
pushf
pop
inc
xchg
data16
int3
pop
out
out
jbe
inc
cwtl
lock
enter
cwtl
pushf
and
stos
lret
push
sub
push
or
xchg
xorl
adc
mov
xchg
xchg
xor
mov
repz
int
sti
mulb
fucomi
aad
mov
rorl
pushf
sub
je
sbb
cmp
loop
inc
loope
push
sbb
ds
mov
push
jl
jo
pop
test
lahf
and
and
sub
push
sub
pop
outsb
fs
or
jge
pop
addl
xchg
std
mov
push
rcrb
sub
and
lea
movsl
lahf
fistps
xor
lods
daa
sbb
mov
into
push
mov
xchg
rorb
fxch
movsl
je
aad
dec
pop
mov
adc
iret
push
imul
es
jge
cltd
sub
mov
pop
cmp
test
orl
dec
jmp
mov
out
fs
mov
jns
dec
sbb
sbb
xor
adcb
inc
pop
sub
ret
sti
test
mov
mov
fiadds
outsb
cwtl
mov
jnp
aam
and
imul
push
adc
mov
cltd
cwtl
or
and
mov
ret
fistpl
or
addr16
sti
or
jle
jne
out
push
mov
adc
and
or
inc
stc
je
lods
outsb
and
jg
add
or
nop
xor
push
mov
mov
loope
aas
rcr
aaa
fdivrs
xchg
fiaddl
jecxz
ja
movsb
leave
push
cltd
test
aam
lods
cmp
inc
in
add
arpl
ffree
cli
ja
fucomp
xor
mov
jns
fs
iret
dec
jmp
lock
das
imul
pop
mov
shll
xchg
pop
sub
sub
out
jmp
lcall
lock
in
lcall
mov
cli
and
mov
or
out
dec
test
xchg
push
fcoms
or
aad
js
jl
aam
push
shrl
loope
aas
sub
adc
ret
sub
mov
cltd
ficoml
xor
in
in
pop
push
mov
mov
lods
add
jle
outsl
fsubl
adc
sub
pop
fstpl
lock
ficoml
xor
rcr
push
jmp
mov
inc
mov
cmp
jecxz
adc
ljmp
inc
xchg
mov
pusha
dec
scas
scas
cmpb
repz
clc
out
push
sbb
mov
push
enter
xchg
addr16
popa
jo
sbb
xor
pusha
and
pop
call
mov
cmp
push
je
ss
icebp
cmp
jae
sarb
sbb
test
or
and
and
push
mov
xchg
sub
or
sub
dec
cwtl
aas
xchg
dec
xor
jns
movsb
sti
dec
mov
jae
xor
mov
enter
mov
mov
pop
loopne
icebp
lcall
sahf
mov
rcrb
mov
push
add
mov
push
das
mov
xchg
sbb
mov
sub
adc
push
and
push
inc
bound
lods
pop
mov
lret
sbb
pop
sbb
mov
clc
ret
icebp
daa
call
mov
cmp
outsl
sbb
add
mov
in
insl
fidivl
in
pop
clc
mov
jmp
mov
pop
inc
sarb
cld
orl
add
pop
mov
ss
push
mov
addr16
mov
inc
call
dec
clc
fdivr
mov
lock
sbb
jno
cli
adc
sarb
adc
loope
inc
lcall
sub
push
lock
add
mov
mov
mov
clc
mov
mov
movl
loop
ret
xor
out
mov
mov
pop
std
lods
movsl
sbb
sub
add
pop
dec
pop
jae
ficoml
in
mov
sbb
dec
lahf
sub
sbb
outsl
js
mov
int3
dec
test
pop
mov
gs
push
jb
lcall
and
pop
andps
xor
mov
jecxz
or
insb
pop
clc
adc
popf
insb
or
dec
fiadds
pop
xchg
lock
or
lret
testb
xchg
aam
mov
call
ljmp
rolb
fcomi
jecxz
jns
sub
mov
mov
sbb
sbb
xor
sbb
xchg
pop
xor
int
movsl
shll
or
xchg
test
mov
mov
pop
jl
dec
call
jle
cmp
pop
enter
push
xchg
jnp
inc
sbb
xlat
dec
and
pushl
mov
jne
out
xchg
fs
xchg
xchg
jo
sub
outsb
xor
lret
xchg
or
push
and
cmpsb
test
add
gs
adc
fucomip
adcb
cmp
pop
jb
js
mov
jle
aad
out
jbe
imul
imul
adc
lahf
xchg
int
xchg
lock
lock
sub
sbb
lahf
mov
push
fidivrl
shrl
mov
or
pop
leave
je
sbb
scas
jne
push
stc
les
aam
mov
mov
mov
ss
add
loope
mov
outsb
sbb
out
sub
mov
push
pusha
ret
push
jmp
imul
push
add
pop
or
push
clc
or
test
sub
inc
mov
fisubs
pusha
dec
jg
mov
jbe
sbb
fcoml
add
cmp
sahf
cs
xor
pop
xor
leave
push
push
push
xchg
push
add
daa
jne
inc
adc
or
enter
int3
push
jp
adc
add
nop
call
xor
lods
fcmovu
jo
and
pop
dec
je
dec
fwait
pop
push
das
clc
lock
add
or
dec
dec
fisubs
xor
pop
in
leave
pop
pop
imul
xor
test
xor
mov
out
or
add
std
xor
ljmp
xorb
in
call
adc
cmpsb
movl
cmp
pop
insb
repz
mov
mov
aas
jne
pusha
cwtl
test
stos
dec
es
dec
stos
inc
adc
lea
je
int3
or
mov
mov
xor
inc
sbb
ljmp
xor
push
fdivrl
ss
cld
pushl
test
cli
push
xchg
mov
dec
inc
nop
sub
inc
test
mov
sub
inc
fisubl
mov
dec
push
xchg
ss
cmp
es
sbb
push
sbb
pop
mov
cmp
push
cmp
dec
lret
mov
jnp
cmp
outsl
std
scas
loopne
aas
sub
or
xchg
int3
lea
sub
les
addr16
sar
mov
cmp
rol
mov
cmpl
push
repz
mov
ror
fnstsw
xchg
lds
sahf
les
outsb
jns
pop
push
push
push
mov
lret
mov
scas
or
cmp
dec
dec
and
mov
clc
in
mov
push
mov
ljmp
daa
in
fstpl
dec
mov
test
repnz
sbb
mov
push
inc
data16
push
lods
das
sbb
adc
ret
les
addl
frstor
cmpsb
cmpsl
shll
push
xor
sbb
mov
insb
jo
lea
lds
sbb
jmp
movsb
jne
or
sbb
jecxz
lea
push
cs
sbb
jge
jns
arpl
dec
xchg
gs
add
xor
std
cmp
dec
push
sti
roll
pop
ret
sbb
ja
xchg
dec
aad
fidivl
popf
mov
and
das
outsb
push
xlat
lods
jno
and
mov
xchg
test
jae
scas
jne
mov
iret
jbe
push
mov
dec
fnsave
fnstenv
pop
cmp
dec
sti
cltd
testl
orl
push
shrl
adc
into
pop
inc
dec
adc
adc
inc
dec
add
jp
xor
cmp
out
mov
mov
ja
lret
mov
xchg
pop
mov
out
jno
pusha
insb
mov
outsl
jbe
lea
movsb
psllw
or
ret
movsb
lods
test
js
ficoms
xchg
adc
repnz
out
dec
enter
stos
and
shl
pop
add
mov
scas
jne
xor
add
and
js
orl
imul
jo
loop
push
cs
inc
lahf
arpl
mov
jg
xchg
rorb
in
xor
inc
mov
pop
xchg
xchg
mov
and
test
insb
idivl
mov
push
cmp
push
mov
jg
adc
mov
and
lahf
arpl
bnd
aam
mov
cmp
inc
or
stos
in
and
sub
xor
mov
sarb
cmpsb
nop
push
dec
gs
mov
jbe
loopne
dec
pop
sti
sbb
push
sub
insb
lret
fs
pop
dec
dec
push
lds
lahf
cmp
out
hlt
sub
push
sbb
xchg
and
xchg
dec
imul
xchg
jo
test
pop
shrl
add
std
stos
aaa
sub
sbb
pop
outsw
jbe
cmp
xchg
xchg
mov
test
fnstsw
or
jnp
test
iret
inc
pop
incb
loopne
cld
into
in
cmp
add
push
gs
movsb
push
loopne
outsl
aad
add
pop
sub
call
stc
sub
or
pop
outsl
movb
test
xchg
push
add
jb
fiadds
mov
aad
fwait
pop
fcmovu
fnstenv
mov
arpl
inc
push
insl
fwait
pop
fwait
daa
cld
inc
dec
mov
jg
hlt
cmp
add
insb
mov
add
cmp
dec
fdivrp
lods
cmpsb
jge
sbb
mov
aam
in
sub
mov
mov
mov
mov
loop
repnz
cmp
leave
mov
push
and
jge
loop
bound
dec
xchg
imul
mov
mov
cmc
lea
adc
das
mov
mov
push
out
or
jno
sub
lods
cld
scas
std
test
push
mov
jecxz
sub
aaa
iret
lods
ret
mov
xlat
jns
mov
mov
or
stc
fs
inc
std
inc
and
or
ret
jg
rcr
lcall
jmp
or
and
push
ds
dec
fcmovb
mov
lea
mov
insb
lret
lcall
popa
mov
add
and
jle
jae
xor
enter
mov
push
jnp
sub
inc
sbb
mov
lret
lds
and
sub
sarl
nop
idiv
sub
sbb
push
and
les
fs
mov
mov
fstp
inc
dec
sub
mov
mov
push
iret
push
outsl
push
inc
es
fsubr
insb
cmp
ja
cs
fidivs
mov
das
pop
sbb
lods
pop
adc
sti
lret
xlat
add
pop
lret
loopne
mov
ds
popf
mov
repnz
flds
adc
cmp
xor
outsb
adc
pop
loope
mov
fmuls
push
sub
lods
mov
sub
fsts
arpl
and
pop
push
jae
je
jmp
jecxz
xlat
or
scas
lods
shll
ret
jo
cmpsl
sub
sub
bnd
pop
mov
shrb
mov
sti
frstpm(287
cwtl
push
pop
jno
in
dec
stos
pusha
adc
adc
dec
clc
repnz
cltd
int
arpl
xchg
rorl
insl
sub
push
aaa
cmp
dec
mulb
int
loope
pop
sbb
sub
dec
mov
rcrl
sub
xor
in
imul
mov
cmp
pushl
test
int3
notb
jno
cmp
out
rorl
mov
loop
iret
xor
decb
jp
fstl
stc
adc
jle
add
orb
mov
stc
rcl
xor
movsl
adc
int3
pop
adc
lret
mov
xchg
mov
cld
cwtl
movsl
call
cmp
and
adc
shlb
inc
xchg
out
cmc
push
push
enter
or
xchg
add
push
cmp
loop
cmp
dec
dec
out
enter
xorl
xor
xlat
mov
mov
lods
adc
add
lods
enter
push
xor
push
sub
and
cmpsb
fldcw
sahf
leave
jb
and
jo
stc
inc
sti
repz
mov
shlb
mov
mov
xchg
jo,pt
dec
movsl
fsubrs
mov
jp
icebp
in
or
push
xchg
lea
add
xlat
insb
add
fidivs
sarl
xchg
fs
lock
lahf
jecxz
jge
or
call
sbb
in
out
test
decb
sub
mov
or
stc
mov
scas
test
repz
lret
and
fcomi
xchg
mov
je
add
repz
insb
lea
into
out
mov
sbb
cmp
or
mov
jb
dec
xchg
stos
std
addr16
aad
cmp
lret
mov
sub
out
dec
fs
test
stos
inc
and
aaa
or
mov
aas
inc
call
idiv
xchg
mov
mov
adc
mov
rorl
jp
adc
push
in
insb
dec
sub
sahf
push
enter
lods
cli
fnstsw
inc
outsb
mov
adc
and
adc
jle
mov
daa
ret
mov
insl
pop
push
jae
loop
pushf
pop
sub
pushf
out
cmp
jns
shr
fs
mov
jno
jmp
inc
dec
push
inc
push
mov
lret
cltd
jae
push
and
mov
lds
and
pusha
out
jecxz
cmp
push
fcomps
fnstsw
and
pop
loope
sub
or
push
push
dec
pop
adc
xchg
sbb
lods
or
scas
or
sub
cmpsl
cmpl
jge
adc
inc
push
dec
repnz
sbb
stos
xor
loopne
lret
ss
xchg
sbb
aam
cltd
fsubs
shll
dec
dec
mov
xchg
xor
jl
cmpsb
loopne
add
sub
test
mov
jg
sbb
xchg
les
or
rcrb
aam
loop
mov
outsl
je
bswap
push
int
mov
jge
nop
aaa
inc
jmp
movsl
roll
repnz
pop
pop
gs
out
cmp
inc
out
mov
jo
out
push
xchg
sub
cmovge
or
xchg
push
loopne
mov
pusha
cmpsb
cmpsl
mov
movsb
cmpsl
lods
jae
iret
in
ss
aaa
dec
inc
cmc
adc
mov
fwait
xchg
xor
mov
in
pushf
pop
xchg
push
ret
cmp
lock
shll
ja
pop
pop
and
push
mov
cld
ja
and
or
jle
mov
add
mov
and
je
out
stc
sar
xchg
dec
push
or
imul
int3
leave
inc
test
adc
lods
pop
inc
jmp
movsl
xchg
pop
ja
cltd
lahf
push
push
in
stos
aaa
inc
mov
jne
mov
mov
ljmp
xchg
imul
mov
mov
dec
addb
adc
ss
xchg
push
dec
mov
roll
call
or
pop
inc
jmp
push
int3
lret
xchg
jae
int
scas
pushf
in
imul
sub
andb
sbb
out
lcall
cmp
pusha
pop
test
push
cmc
sub
dec
sub
adcl
push
mov
arpl
dec
xchg
in
mov
popf
into
je
adc
xchg
scas
insb
jp
ret
dec
sbb
lds
aad
sbb
cmp
aas
fistpll
cmp
das
dec
mov
fdivs
enter
out
cmp
ret
movsl
sub
rcl
jp
fisubs
sub
sarb
scas
mov
out
cli
leave
cwtl
jns
pop
jp
flds
loope
xchg
hlt
mov
push
jns
scas
imul
int
imul
push
lcall
adc
sub
and
mov
mov
lds
and
pop
cmp
scas
mov
adc
add
repnz
push
cltd
daa
lods
xchg
in
and
mov
out
jg
rclb
fildl
gs
mov
adc
lods
clc
jbe
pusha
mov
xor
adc
sbb
adc
stos
cmp
cltd
sbb
adc
cmp
push
and
xchg
idivl
xchg
inc
fsubl
call
ss
les
scas
out
inc
rorl
int
cwtl
or
out
push
and
pop
nop
insl
push
aad
xor
mov
mov
sub
or
push
test
xchg
lock
cld
fisttpll
and
or
mov
adc
icebp
in
mov
cmp
cmpsl
into
cltd
add
sbb
push
sbb
loopne
add
inc
adc
xchg
stc
add
cwtl
mov
stos
out
popf
jo
mov
and
or
int
aam
fs
and
fidivs
xor
mov
jg
sub
and
jmp
and
mov
pop
and
ror
dec
insl
fldcw
push
aaa
sti
lcall
ret
jo
pop
mov
mov
sbb
js
rcrl
xor
sub
outsb
leave
pop
cmpsb
pop
enter
sahf
out
jge
xlat
fisubrl
jp
daa
sub
in
rol
ja
je
push
fwait
mov
or
aam
loop,pt
sarb
pop
out
sbb
xchg
inc
je
pop
pop
xchg
jns
xchg
xorl
lcall
push
pop
subb
outsl
or
je
sbb
adc
pusha
fwait
pop
je
jle
rolb
push
xor
ss
xchg
cli
lret
or
add
ret
cmpb
mov
cmc
aas
xor
wrmsr
xor
sbb
int
inc
mov
fiadds
out
fistl
ret
testl
push
fisttps
fcoms
push
adc
pusha
mov
xchg
dec
cmp
call
repnz
xor
sbb
scas
shr
mov
sti
fcoms
std
out
mov
xor
xchg
lcall
hlt
lret
sbb
sbbl
push
pop
push
mov
adc
shll
jmp
loopne
mov
jle
pop
cmp
jge
scas
in
xchg
mov
fs
pop
dec
scas
push
sub
push
mov
mov
out
int3
dec
daa
es
not
mov
dec
mov
sub
imul
inc
sbb
mov
inc
xchg
arpl
pop
stc
jae
mov
nop
push
repz
or
and
xchg
dec
push
dec
mov
in
sbb
cmc
mov
jmp
cmp
or
je
in
jno
cmpsl
lea
loop
jp
fisttpll
mov
andb
mov
loope
ficompl
jno
jle
in
shll
or
push
test
dec
push
movsb
dec
xchg
push
fnstcw
test
popa
stc
mov
adc
js
mov
scas
push
push
inc
jb
xor
or
adcl
ljmp
imul
sbb
jnp
and
xchg
sbb
es
push
xor
jae
test
loope
sar
inc
les
call
inc
mov
js
scas
mov
mov
jns
pop
pop
push
sbb
int
xchg
sub
daa
decb
jns
xchg
or
cli
and
loop
rol
sub
dec
fwait
jne
and
sub
jmp
fdivl
iret
jo
adc
push
pop
push
inc
mov
mov
pop
orb
mov
out
fs
push
cmp
jl
popf
xor
cltd
xorb
stos
inc
mov
or
shr
popa
mov
es
inc
insl
mov
lret
mov
mov
mov
fnsave
movsl
stos
shlb
movsb
push
repz
imul
std
std
sub
outsl
pushf
add
pop
xchg
les
hlt
scas
lcall
mov
daa
jno
data16
and
dec
cmpsl
mov
jns
fwait
mov
neg
cmpsb
je
xchg
popa
scas
xor
sbb
mov
fnstenv
push
mov
or
outsl
or
dec
in
adc
push
xlat
or
xchg
cmpsb
repnz
inc
or
rolb
dec
xchg
mov
push
and
test
lret
call
jmp
fcompl
adc
adc
mov
in
dec
mov
in
loopne
pop
dec
sar
icebp
pop
sahf
loop
xchg
inc
test
push
and
push
or
mov
stos
adc
or
aam
jmp
adcl
mov
mov
adc
adc
jno
leave
push
push
dec
pop
sub
mov
or
jb
xchg
sub
cld
outsb
imul
enter
ror
jmp
push
mov
movd
dec
jae
sub
and
pop
es
int3
lds
ss
mov
outsb
pop
lret
xchg
shrl
in
ret
or
push
jmp
xor
xchg
iret
xchg
test
xchg
and
push
inc
mov
dec
jg
lcall
mov
cld
push
loope
pop
cli
decb
jns
jno
xor
push
rorb
or
stc
sarl
mov
lahf
pop
push
std
mov
loopne
inc
jle
add
jnp
add
cwtl
jecxz
inc
scas
cmp
pusha
add
sbb
ret
mov
pop
scas
aaa
pop
je
roll
push
arpl
aad
mov
pusha
inc
xor
sarl
push
dec
inc
mov
dec
mov
data16
adc
mov
fistps
mov
mov
cwtl
idivb
pop
fmuls
inc
in
arpl
and
mov
or
divl
jl
jns
not
xchg
mov
and
adc
jmp
out
or
ret
push
push
mov
sahf
arpl
push
and
imul
les
sbb
cli
inc
xor
push
fdivrl
lea
loopne
mov
insb
adc
inc
xchg
push
adc
sub
fmuls
lahf
into
cltd
adc
dec
xorl
test
sub
pop
push
scas
stos
in
push
decb
dec
add
xchg
add
xchg
mov
adc
nop
mov
aaa
insl
jmp
std
arpl
jb
inc
mov
sub
jns
test
daa
mov
sbb
outsl
xor
inc
cmp
aam
cs
out
push
mov
lret
lods
xchg
sub
xchg
pop
dec
inc
ret
or
mov
clc
jge
pop
andb
and
add
leave
std
out
lahf
jmp
xchg
lods
rcl
nop
fdivp
lcall
pusha
dec
dec
mov
xchg
sbb
xor
mov
or
int3
cmp
movsb
lods
xchg
iret
mov
lahf
or
aaa
dec
and
mov
pop
fisttpll
loope
mov
add
filds
popa
lret
pop
mov
addb
shrl
jo
clc
rcr
pop
div
add
int
out
data16
inc
int3
or
adc
mov
adc
sub
aaa
and
push
push
sub
ja
insl
jno
cmp
scas
decl
stc
and
movsb
sbb
sti
or
mov
mov
xlat
xchg
mov
loopne
fistps
cmp
jno
mov
or
fprem1
xchg
dec
and
or
push
jbe
inc
in
aam
add
xchg
sub
sti
or
pop
sub
ret
insl
sbb
sub
lahf
ljmp
movsl
lock
push
sub
xor
out
inc
and
sub
push
ret
out
cmc
dec
mov
data16
loop
aaa
or
les
fistpl
mov
clc
je
mov
ret
loope
test
push
jmp
sub
into
test
arpl
and
xchg
adc
adc
scas
loopne
or
inc
jle
out
add
push
mov
shlb
lods
and
int
fmuls
add
xor
xchg
inc
mov
test
cli
je
cltd
mov
jae
jmp
lahf
push
ficomps
fs
dec
loope
outsl
xchg
enter
pop
push
xor
dec
andl
fisubrl
jp
fcomi
inc
sbb
decl
rcll
aaa
push
shlb
ds
or
push
sbb
out
push
jp
mov
push
xlat
lret
inc
mov
hlt
in
aam
jg
aam
cmp
icebp
outsl
xchg
mov
pop
movsb
lds
sbb
and
lcall
inc
jns
adc
out
cmp
enter
and
mov
mov
test
lds
xor
adc
inc
aam
add
loopne
sub
push
dec
mov
loope
inc
loope
fsub
xchg
addr16
pop
mov
or
xchg
xor
pop
fstp
adc
push
sbb
inc
int3
imull
in
add
add
ljmp
fucom
subb
mov
xor
lret
in
jnp
sbb
and
mov
ror
pop
jb
in
push
repz
cmp
leave
mov
mov
je
mov
inc
sbb
dec
push
xbegin
or
popf
ds
fidivrs
sbb
push
pop
or
and
xor
enter
jl
int3
mov
movsl
inc
cmp
pop
call
insl
cli
mov
add
scas
sti
mov
push
rol
or
cli
les
lods
dec
push
insb
adc
fistpll
scas
fs
or
push
lds
jle
or
int
xchg
adc
mov
sub
xor
loopne
jnp
xor
xchg
jb
ljmp
cld
out
dec
lods
push
pop
and
add
dec
or
inc
hlt
mov
sti
sub
gs
pop
push
sub
sub
jb
jb
push
and
mov
scas
aad
mov
out
bound
int3
cmp
ja
jmp
xor
jne
sub
rorl
or
addl
adc
jb
inc
pushf
pop
jge
xchg
dec
ja
add
push
cmc
sub
lret
stos
andb
fldl
jbe
subl
xor
jb
cs
neg
add
xchg
cwtl
imul
jae
or
xchg
cltd
test
test
adc
or
jecxz
cmpsl
and
ret
jne
push
push
out
jne
push
nop
push
sbb
lods
sbb
fldl
sub
pop
imul
and
push
sbb
mov
cmp
pop
or
out
dec
push
popa
mov
sbb
push
lahf
rolb
cwtl
cli
mov
push
enter
cmp
mov
or
pop
jge
cmp
rclb
xor
imul
aam
mov
data16
loopne
add
sbb
clc
fbld
adcb
jbe
sbb
out
dec
cmc
addb
and
je
test
cmpsb
pop
xchg
xor
std
insl
pop
push
je
mov
ficoms
mov
out
lcall
es
repz
outsl
mov
clc
imul
imul
fldl
imul
addb
dec
mov
cs
mov
mov
mov
cmp
je
push
push
pop
gs
filds
fsubs
inc
and
jb
xlat
cmp
sbb
imul
xor
xchg
mov
out
xor
jg
test
fcomps
mov
or
inc
inc
or
push
jae
jbe
jmp
iret
pop
flds
out
out
pop
dec
ja
pushf
fwait
mov
mov
mov
sahf
and
insb
in
aad
jnp
mov
into
inc
mull
mov
jecxz
adc
in
int
test
jo
jl
xor
sbb
cmp
ss
mov
fistpl
adc
mov
mov
xor
int
or
scas
aam
enter
inc
or
into
scas
mov
inc
adc
into
outsb
xor
mov
jecxz
dec
je
and
mov
sbb
mov
cwtl
mov
mov
xor
cli
fs
push
mov
sti
adc
dec
cld
add
cmp
aaa
jle
and
sub
xchg
loope
flds
xor
push
test
mov
dec
push
jo
mov
xor
std
and
or
or
nop
es
mov
fisttps
mov
mov
sbb
repz
and
mov
jecxz
out
adc
add
fimuls
push
and
sbb
movsb
out
or
test
ds
cmp
arpl
pop
pop
mov
test
sbb
mov
mov
std
mov
mov
pop
aaa
pop
fldcw
sbbb
sbb
push
pop
jne
inc
stos
ljmp
fstpl
lods
dec
adc
test
sub
imul
inc
mov
or
and
js
sub
fstl
loopne
subl
fbld
xchg
nop
mov
sub
mov
jb
pop
cltd
xchg
sar
or
sarb
sub
xor
xchg
fistl
sub
loop
dec
aad
jbe
push
into
cs
push
mov
imul
out
pusha
out
mov
inc
dec
out
jmp
das
rcl
pop
mov
scas
add
sub
cmpsb
mov
push
push
les
imul
push
mov
sbb
mov
test
mov
rorb
stos
leave
fisttpll
stos
int3
pop
mov
jge
sbb
cli
out
call
popa
out
ret
nop
icebp
mov
jns
stos
scas
sbb
mov
cmp
cwtl
lcall
inc
mov
lock
lods
and
inc
lahf
scas
add
je
cmpsb
sub
xchg
dec
cmp
sahf
cmc
and
iret
adc
pop
movsl
sbb
mov
sbb
jle
sarl
cmp
jno
lods
into
cmp
arpl
mov
leave
nop
or
push
mov
popa
je
repz
push
sbb
pusha
fwait
mov
mov
xchg
add
fimuls
addr16
test
loop
rorl
fbstp
cwtl
imul
mov
popf
sti
loopne
pop
sub
xchg
test
ja
dec
xchg
dec
rol
mov
and
stos
rcrb
mov
jmp
ror
aam
mov
sub
into
and
push
jns
cmc
aaa
fs
rcl
out
jg
pop
sbb
loopne
sbb
out
pop
fwait
rsqrtps
adc
dec
lds
sub
outsb
adc
icebp
cmpsl
out
testl
jge
test
sti
cltd
stc
mov
or
cltd
push
in
leave
bound
fdivs
fwait
test
dec
cmp
mov
daa
andb
mov
jbe
sub
and
mov
repz
push
into
cmp
leave
jmp
mov
sbb
fstl
sub
scas
dec
addr16
mov
aam
outsb
add
mov
mov
jbe
sub
xchg
gs
dec
mov
ret
xlat
cmp
sub
mov
cli
or
pop
pop
add
jp
rorb
cmc
add
xchg
jne
xchg
insb
sbb
adc
mov
jno
clc
push
push
mov
and
jo
je
or
mov
imul
or
subl
push
ljmp
je
mov
adc
push
cmp
insl
jecxz
cli
cs
push
fs
push
cmp
or
sub
pusha
loop
shlb
add
icebp
es
out
jae
loope
idivl
dec
xor
inc
data16
les
pop
push
sub
xlat
sbb
daa
sti
jbe
inc
in
xchg
icebp
test
loopne
sub
mov
fisttps
and
sub
sbb
gs
fldt
imul
pushw
or
out
and
mov
fisttps
or
stos
push
fdivrs
ud0
cmpsl
stc
inc
push
adc
and
dec
stos
mov
outsl
jp
das
sarl
pop
fistps
in
push
js
xor
addl
les
inc
xorb
pop
xchg
xor
fwait
loope
outsl
mov
xchg
popa
sbb
ss
aam
push
xchg
xchg
aas
xchg
lock
aam
fidivl
in
out
jg
sub
repz
cltd
shr
dec
repz
mov
test
outsl
pop
test
in
leave
popf
rcr
in
xorb
xchg
lea
xlat
fistpll
lods
cli
mov
mov
xchg
xor
lds
jmp
scas
cmp
pop
insl
xor
inc
mulb
mov
mov
outsl
sub
cs
sub
cmp
xchg
add
pushf
push
arpl
lahf
cmp
stc
xchg
movsb
sarl
dec
aaa
aam
inc
divb
jmp
sub
adc
and
outsl
push
pop
adc
scas
xor
dec
inc
push
adc
std
cmp
shrb
ret
pop
jecxz
lods
icebp
cltd
popf
test
or
call
inc
inc
mov
and
cs
or
in
or
ret
loopne
pop
lret
cmp
or
hlt
push
cmp
pushf
aas
or
stc
sti
push
and
mov
sub
mov
cli
mov
pop
imul
mov
stos
jp,pt
mov
ss
mov
lods
sub
and
pushf
and
cmpb
sbb
jmp
mov
fs
sahf
movb
cmp
int
popa
lret
cmp
dec
fldl
fistl
jne
scas
xchg
and
rsqrtps
jnp
aad
into
mov
sub
push
fists
call
pop
cmpl
bound
nop
or
sub
and
sub
mov
movsl
aam
repz
jmpw
sub
mov
lea
lds
outsb
in
cmp
lods
dec
mov
lods
sti
lea
pop
ret
xchg
rclb
js
aas
test
out
mull
sbb
jg
ds
stc
cmc
aam
inc
xchg
fcmovb
pop
jnp
jae
mov
lods
fdivs
mov
pop
pop
sub
cmp
out
or
mov
xchg
aas
loopne
out
outsl
iret
enter
xchg
xor
sbb
and
cmp
inc
stc
lcall
es
cmpsl
clc
jmp
inc
push
dec
xor
test
xor
lods
inc
or
pop
dec
add
in
xchg
sub
pushf
pop
popa
mov
push
mov
mov
inc
jmp
mov
adc
jl
test
inc
mov
pop
jecxz
push
ds
add
and
lods
mov
mov
xchg
fbld
sbb
test
ficoml
fsts
dec
lds
add
ds
and
in
mov
shrl
in
mov
xor
aaa
into
rorl
cmpb
jge
sub
push
cmc
addr16
mov
cmpsl
xchg
repnz
sbb
stos
push
sysexit
inc
mov
and
test
pop
fwait
in
inc
xchg
sti
fisubrl
push
dec
push
add
lea
push
cmp
adc
pop
aam
jno
add
jne
jnp
cli
sbb
cmpsl
mov
mov
xchg
in
movlps
xor
sbb
xchg
adc
add
mov
push
js
add
cltd
ja
cmp
into
loop
sarb
and
pop
shrl
dec
cmp
insb
add
std
pop
add
inc
cmpb
mov
fwait
pop
mov
sub
jno
dec
dec
sub
mov
cwtl
ret
cmp
add
jle
cmpsl
and
pop
ret
mov
jo
push
sub
mov
jl
cmp
decb
pop
add
les
inc
inc
es
ss
xchg
mov
mov
mov
popf
inc
lcall
shrl
push
cmp
and
inc
and
ret
adc
jnp
adc
inc
mov
jns
mov
push
repz
push
arpl
addr16
dec
or
outsl
mov
fnstcw
mov
fiaddl
mov
pop
pop
sbb
or
push
cmc
xor
mov
or
idivl
sub
cmp
cld
ljmp
pop
xchg
mov
sub
mov
imul
je
subl
add
xor
movsb
xlat
fs
dec
inc
stos
stos
push
jmp
pop
push
dec
sbb
div
shrl
notl
mov
movsb
dec
test
mov
jg
addr16
or
mov
adc
push
pop
fdivr
repnz
jp
or
dec
in
lods
and
and
pop
jg
scas
jae
nop
cmc
sub
cmpb
pop
inc
pop
into
test
cwtl
loopne
jne
js
fstps
mov
push
xor
ds
add
pop
mov
jl,pt
bound
push
clc
mov
mov
fstpl
repz
insb
popf
push
xchg
jne
adc
jbe
aam
jns
orb
jne
movsb
popa
scas
push
cmp
dec
inc
rorl
sti
or
pop
dec
jns
or
shrb
popa
xor
sbb
neg
mulb
mov
sti
gs
lcall
push
scas
dec
cmp
ret
push
aas
mov
mov
fisubs
bound
sti
arpl
outsl
mov
xor
lods
std
push
or
add
pop
pop
mov
mov
fmuls
push
ret
sbb
and
mov
cmp
inc
in
ss
add
sbb
adc
xchg
add
xchg
loopne
imul
pop
sbb
xchg
scas
les
js
cwtl
lahf
aad
loope
enter
in
mov
pop
cmp
jle
adc
mov
or
dec
and
fcmovbe
mov
jns
scas
mov
inc
add
test
int3
adc
inc
push
mov
fsubs
sahf
iret
add
pop
insl
js
adc
in
sub
mov
push
lcall
orl
jmp
int
or
cmpsl
pusha
mov
adc
int
sub
or
ss
jae
idivb
mov
into
or
mov
pmulhuw
lods
inc
shrl
xchg
fwait
inc
jae
inc
fs
inc
mov
jbe
sub
sub
js
jne
dec
gs
out
mov
push
inc
push
mov
jno
adc
fcompl
les
add
cmp
or
inc
iret
adc
jg
sarb
push
loopne
cwtl
or
pop
out
pop
mov
jbe
fs
sub
shlb
sbb
xlat
out
imull
out
repnz
std
mov
dec
lods
call
sbb
popa
stos
repnz
shll
adc
loop
push
jp
ss
sbb
or
and
push
adc
inc
jno
pop
daa
and
das
sbb
push
ss
push
adc
add
pop
outsb
add
aam
dec
push
mov
call
movsb
push
add
sbb
arpl
xchg
cli
adc
test
sub
dec
sub
xor
pop
mov
pusha
scas
out
ljmp
and
mov
jge
push
cltd
aad
sbb
dec
out
pop
cmc
and
rolb
divps
xchg
outsl
cmovae
xlat
movd
pop
mov
jnp
insl
out
mov
inc
jp
fwait
inc
fwait
sbb
xchg
addr16
push
inc
xchg
push
arpl
test
ror
pop
shrl
or
leave
mov
mov
inc
les
lock
enter
clc
xor
das
ljmp
out
cwtl
cmp
fstpt
popa
adc
pop
cli
loopne
sub
xor
clc
icebp
jo
push
rcr
iret
outsl
mov
jnp
pop
movsb
pop
ds
dec
hlt
mov
lock
xchg
clc
out
inc
sub
xchg
icebp
add
fcomi
movsl
mov
sub
sub
in
jo
push
push
xor
jae
jg
out
dec
aas
fs
and
adc
movsb
mov
pop
inc
xchg
sar
mov
or
pop
sarb
addl
fmull
mov
lock
daa
cmp
dec
sbb
push
stc
mov
mov
push
mov
pop
imull
jge
aaa
mov
loop
dec
and
cmpb
popf
sub
adc
cs
test
sbb
mov
lret
lret
rorl
nop
sub
ljmp
fs
stos
mov
cmp
pop
movsb
out
or
ja
scas
sbb
fucom
jnp
mov
ret
jge
sbb
bound
shl
add
cli
mov
sbb
adc
mov
push
aaa
arpl
push
mov
mov
pop
mov
dec
repz
push
xor
addr16
or
fistl
out
nop
dec
sarl
mov
mov
mov
add
inc
or
mov
scas
cld
sub
jne
pusha
jl
sahf
fdivrs
add
insl
xor
ljmp
jp
out
pop
xchg
pop
jnp
lahf
cmc
jp
adc
cmp
mov
int
xchg
je
or
int3
and
adc
fisubs
loopne
xor
xchg
outsb
data16
and
pop
sbb
js
mov
cld
outsb
clc
out
add
mov
dec
das
sub
sub
enter
xchg
testb
fldt
jbe
cmp
outsb
fwait
xchg
fisubrs
mov
dec
jne
xchg
aad
int3
dec
push
xlat
add
in
lret
sbb
xchg
popa
push
rcll
cmp
mov
out
xchg
call
ror
pop
popa
loopne
stc
xchg
or
inc
jecxz
cmc
es
lods
xorl
fwait
lret
cmp
sahf
daa
xor
jmp
lods
xor
xchg
sbb
pop
sub
insb
xchg
std
adc
arpl
mov
push
pop
push
add
pop
inc
js
xor
xchg
in
jge
in
dec
dec
jnp
push
mov
and
mov
test
shrb
mov
adc
sub
out
sub
and
leave
adc
repz
jb
lods
cltd
insb
addr16
scas
cld
in
mov
cmp
addr16
into
lret
fmull
pop
dec
pop
mov
fnstenv
fwait
xor
xchg
push
sbb
mull
jns
outsl
hlt
jle
inc
dec
out
dec
clc
mov
mov
mov
dec
ja
dec
xor
mov
xor
pop
inc
or
rcll
pop
call
data16
aas
cmp
ja
int
xchg
movsl
pop
scas
out
ss
incl
sub
xchg
mov
loopne
fildl
sub
mov
dec
aaa
dec
mov
repnz
mov
cli
repz
mov
bound
addr16
dec
fptan
xchg
lods
insb
push
jb
fs
mov
mov
sub
pop
int3
cmpsl
lcall
sar
pop
sti
imul
push
push
cmp
rclb
jnp
pop
jmp
inc
mov
sub
jmp
xchg
aas
xor
push
into
dec
out
sbb
mull
xchg
cld
push
pop
adc
test
add
lahf
mov
bnd
push
mov
andl
rcr
adc
arpl
mov
cmp
and
lods
je
cmp
push
jecxz
mov
pop
mov
cmpb
rol
jmp
icebp
mov
push
mov
cmp
jp
mov
or
imul
mov
mov
stos
sub
sbb
call
or
dec
cmp
fcompl
sahf
or
dec
and
mov
out
or
push
rorl
lock
testl
aam
out
bound
js
in
cwtl
ljmp
in
icebp
pop
scas
fcoml
cmp
ja
push
xchg
sub
fdivrs
sbb
movsb
rolb
push
cwtl
imul
das
jae
fwait
dec
arpl
xchg
mov
jl
ja
aad
lds
je
sbb
cld
pop
pop
pusha
ds
jecxz
in
jae
fists
mov
scas
pop
ja
push
dec
jns
xchg
or
fcmovnb
int
sub
cmc
addb
lock
sbb
sub
repnz
jns
cwtl
sbb
mov
pusha
sbb
mov
mov
orb
imul
mov
dec
stos
int3
xchg
in
sbb
outsl
inc
or
dec
xor
sub
test
cld
loop
or
sub
pop
std
std
sbb
jbe
aas
sub
cmp
repnz
adc
xchg
aad
daa
lds
faddl
not
and
adc
push
rol
dec
ds
add
inc
inc
out
fidivl
cmp
es
mov
js
mov
pop
sub
sub
mov
jmp
lods
cwtl
das
pop
movsb
dec
fiadds
lret
inc
adc
lea
test
enter
and
adc
sub
add
sahf
movsb
sub
push
push
push
jb
dec
jge
test
pushf
test
or
cwtl
add
and
cmp
pusha
pminub
jnp
scas
and
push
push
sub
push
cmp
adc
lock
fdivs
sbb
and
ja
lret
insb
dec
jmp
xchg
in
scas
subb
stos
data16
scas
jg
sarl
dec
into
out
adc
add
cld
xlat
xor
mov
cmp
xor
xor
push
fxch
pusha
xchg
xor
pusha
adc
loop
push
add
sbb
mov
pop
pop
mov
addr16
pusha
in
push
xor
mov
test
adc
dec
iret
imul
in
mov
ja
call
inc
out
add
sub
adc
fmuls
ret
shl
addr16
daa
fdivrs
add
pop
jb
fs
xor
mov
aam
andb
jp
repz
sub
rolb
push
popf
fdivs
adc
adc
shlb
jns
fst
xchg
ret
stos
xchg
add
jo
ja
cmp
cmp
dec
daa
popf
imul
sti
sub
in
mov
sti
aad
cmp
mov
pop
xchg
scas
xor
repz
repz
push
jo
xor
push
mov
dec
insl
arpl
fisubrs
daa
ja
pusha
pop
sub
lods
test
mov
loope
cli
xlat
pop
add
and
xor
adc
jne
stos
mov
cmpsb
inc
pop
sbb
insl
xchg
or
push
push
mov
xchg
cmpsl
or
stos
and
fs
mov
lods
addr16
and
sbb
popf
fcmovnb
sub
xchg
ficompl
sub
popa
clc
mov
mov
rorl
cltd
cli
aam
jnp
out
cmp
std
inc
pop
aad
xorps
insl
imul
fcompl
es
pop
mov
jl
push
rolb
jne
adc
push
xchg
insl
mov
cld
cs
jns
test
mov
and
mov
cmp
push
add
pop
push
sub
mov
test
push
or
movsb
daa
sub
xchg
inc
aaa
xor
adc
imul
sbb
or
pusha
xchg
dec
pushf
sbb
clc
add
mov
inc
shll
adc
adc
rolb
cmc
stos
mov
subb
imul
inc
jecxz
pop
push
les
sahf
leave
pop
fcom
xchg
mov
pop
mov
cmpb
adc
jge
cmpsl
push
mov
cli
into
addr16
ret
push
or
mov
leave
xchg
popf
test
cmp
pop
inc
out
inc
sarl
insb
movsl
cmp
rorb
push
fidivs
mov
push
sbb
or
lea
pop
pop
push
fisubs
cmp
lahf
mov
add
ja
cmc
pop
cmp
xor
test
xchg
sti
cld
xchg
stos
push
add
adc
in
push
dec
xchg
sahf
mov
mov
shrb
fmull
xor
mov
int
stos
test
mov
adc
lea
scas
sbb
outsb
ja
mov
mov
out
mov
push
pop
mov
push
inc
jmp
outsl
jle
cmp
jp
adc
inc
mov
sub
inc
dec
int
clc
bswap
cmpl
jl
jbe
lods
addb
mov
mov
daa
dec
xor
jmp
lds
add
mov
pusha
sbb
add
push
outsl
lds
pusha
adcl
jmp
mov
stos
and
mov
inc
fldl2e
icebp
scas
addr16
jno
pop
sbb
mov
imul
xchg
xchg
test
xchg
sbb
xchg
das
adc
ret
scas
sub
rorl
movsl
jae
cltd
mov
or
les
ds
xchg
and
push
pusha
xchg
lock
popf
dec
popa
imul
mov
dec
mov
or
jp
lods
ret
f2xm1
mov
inc
pop
loop
add
mov
xor
add
dec
mulb
outsb
inc
orl
hlt
lods
cmpsl
inc
test
lret
add
fnstsw
stos
cmc
pop
mov
es
rorl
push
into
push
fistl
xchg
fdiv
jnp
xchg
mov
imul
add
scas
sarb
dec
xchg
jnp
adc
pop
xchg
pop
push
insl
movl
cwtl
adc
in
gs
and
push
mov
xor
cwtl
mov
xchg
test
push
lahf
cmp
jmp
add
push
and
xchg
inc
xlat
mov
out
push
movsb
loop
inc
test
test
push
cmpsb
push
fs
jp
test
add
add
mov
cmp
mov
in
jg
cli
adc
fmull
mov
into
mov
rolb
xlat
lds
insl
xchg
xor
call
sub
rcl
aas
mov
pop
mov
jb
inc
xor
sbb
pop
cli
icebp
jns
xor
mov
sbb
jge
mov
push
cmpl
aaa
test
fstpt
xchg
sub
shrl
sete
pop
cwtl
mov
pop
dec
and
call
xor
mov
push
mov
inc
pop
lret
jecxz
repz
jb
jne
aaa
call
mov
add
repnz
test
out
in
mov
and
add
xor
lock
sub
or
cmp
popa
fbld
push
xor
imul
lret
push
shl
pop
das
or
push
mov
fidivrl
pop
jo
jo
lcall
in
inc
pop
xchg
jbe
dec
pushf
mov
aad
sub
fistl
std
cld
xor
push
adc
push
in
cld
cwtl
nop
stc
xchg
mov
cmp
mov
repz
and
loop
lret
sahf
pop
stos
arpl
xor
mov
gs
mov
test
das
mov
hlt
jl
mov
mov
mulb
setb
cmc
iret
pushf
jno
sbbl
cmp
stos
data16
ss
xchg
lcall
inc
mov
ljmp
cwtl
sarb
push
ljmp
cltd
cmp
daa
clc
fwait
push
ja
cmp
es
add
insb
ljmp
jle
clc
std
orl
ss
nop
adc
arpl
test
jp
add
adc
jg
rolb
popa
nop
mov
subb
scas
andl
ret
hlt
sub
adc
mov
mov
les
inc
mov
and
adc
sub
sbb
sbbl
out
mov
aam
jge
adc
mov
xor
lock
loope
pop
jge
imull
cs
ds
addb
or
cwtl
pop
xchg
cmpsb
pop
mov
jmp
jnp
add
subl
loopne
jae
js
xor
xor
mov
test
xchg
jmp
inc
pushf
jmp
adc
adc
mov
jmp
movsb
xorb
inc
cs
sub
push
sub
cmp
imul
ss
mov
mov
push
fidivs
pushf
lret
jb
stc
bound
bound
sub
mov
dec
jae
movsl
xchg
dec
jl
icebp
das
inc
ds
add
iret
stos
cmpsb
dec
pop
xor
pop
jne
sub
push
pop
daa
inc
xor
xchg
daa
ss
cs
mov
or
icebp
jg
stc
add
lods
imul
xchg
add
dec
mov
leave
pop
out
dec
cmpsl
lds
into
les
cmp
xchg
xlat
in
jmp
sarb
int3
ja
inc
mov
cmp
int
aad
int3
cmp
ficoml
inc
repz
push
es
mov
adc
xchg
leave
imul
fdiv
mov
cmp
push
push
iret
cmp
sub
sbb
xchg
jae
lret
loop
dec
enter
mov
ret
xchg
pop
and
xor
leave
imul
pop
push
push
aas
pusha
stc
gs
les
into
aam
sub
in
aad
adcl
xchg
lret
cmp
push
pop
cld
push
xlat
in
sbb
add
repnz
inc
push
inc
sarl
packssdw
mov
pusha
inc
mov
add
mov
add
out
xor
dec
dec
sub
lret
loop
cwtl
inc
lock
nop
out
dec
push
mov
stos
add
add
sbb
ret
xchg
js
movsl
push
jle
mov
push
push
dec
jbe
mov
ljmp
cltd
data16
aad
mov
mov
imul
dec
pushf
jnp
dec
popf
xorl
pop
and
pop
test
mov
movsb
fisubrs
sub
adc
int3
cmp
push
jbe
mov
jmp
pop
inc
or
sbb
out
in
icebp
arpl
xor
lock
pop
les
movsl
rep
mov
pop
push
insb
xchg
jg
adc
sbb
fs
sub
je
pop
mov
lcall
sahf
imul
pop
mov
pop
lock
stos
jno
push
mov
sahf
add
fs
int
cld
dec
push
sub
xor
xchg
mov
test
adc
out
insl
pushf
and
cs
sbb
mov
or
jae
cmpsl
lret
repnz
leave
sbb
jo
jmp
sahf
xchg
mov
imul
mov
xorl
sbb
sbb
push
fmuls
pop
push
pop
pushf
clc
out
pushf
or
sbb
lods
sub
pop
jg
inc
test
and
xor
add
orb
int
jns
inc
cmp
incl
lods
mov
daa
jecxz
cmpsl
jmp
test
xor
xchg
je
loope
aas
out
cmp
decb
mov
cmp
xchg
inc
mov
lock
pop
cmpsb
cmp
or
add
lods
repz
push
fsts
js
mov
cmpsb
cltd
pop
repz
xorl
and
sbb
je
iret
cwtl
cmp
cld
inc
push
insl
fldcw
mov
adc
sbbl
pop
loope
les
jne
mov
mov
sbb
cld
mov
mov
shll
mov
push
pop
outsl
sbb
pop
inc
or
dec
mov
mov
cli
pusha
push
stos
jmp
sub
xchg
cmp
out
inc
bnd
lds
cmp
xchg
jns
add
in
scas
lock
in
adc
jns
cmp
movsl
dec
fstpl
jne
int
stc
push
pop
adc
lcall
xchg
ret
outsb
adc
pop
popa
aas
and
outsb
inc
fcoml
push
shr
sub
dec
xchg
mov
std
xor
sub
cmpsb
xchg
xchg
sub
add
mov
and
fst
jno
add
jg
jnp
jae
sub
cmpsb
jo
nop
cmp
cmpsl
xor
and
pop
outsb
roll
or
dec
adc
pop
add
clc
sub
adc
jl
and
inc
testb
push
xor
loope
cmp
sbb
out
sub
jle
mov
xor
mov
mov
push
jno
loop
lock
adc
inc
adc
sarb
add
push
xchg
xchg
mov
in
movsl
xchg
push
les
mov
adc
or
xchg
xchg
pop
adc
aad
dec
addb
out
leave
adc
xchg
sub
sti
add
xchg
iret
popa
test
pop
in
iret
inc
jp
inc
bound
test
std
popf
sbb
lcall
and
outsl
mov
xchg
mov
cli
or
inc
std
rolb
adc
mov
lock
fs
lret
insl
cs
daa
sbb
in
xchg
xchg
push
add
inc
enter
cld
jmp
clc
inc
cmp
adc
mov
push
cmp
pop
mov
sub
scas
jne
add
test
sbb
rcll
inc
or
cmc
push
ret
add
es
and
fdivrl
js
fists
aaa
outsb
jne
jo
inc
jecxz
lret
sbb
test
imul
or
adc
in
xorl
jl
pop
mov
js
sub
call
out
loopne
or
stos
jl
xchg
stos
repnz
mov
pusha
js
inc
lds
mov
fsubp
fst
lret
aaa
jnp
push
mov
pusha
mov
sarb
stos
push
loopne
pop
cmp
push
add
push
push
jne
jge
jmp
xor
insl
push
lods
add
bound
inc
or
jmp
push
dec
inc
mov
xor
test
clc
jecxz
mov
scas
cmp
movsl
push
dec
fsubl
xchg
and
xor
mulb
mov
shrb
imul
mov
add
xchg
push
test
int3
push
scas
xor
out
std
leave
test
pop
outsl
push
or
fcompl
inc
ss
mov
xchg
jae
xchg
popa
mov
es
xchg
push
lret
popf
iret
in
arpl
daa
and
jo
lahf
dec
mov
and
outsl
cli
jnp
fcoms
jl
dec
js
aas
mov
push
jo
or
int
outsb
int3
sbb
test
fstpl
shrl
mov
and
inc
and
sbb
mov
xchg
xchg
mov
in
adc
jmp
daa
into
rcr
pop
fidivrl
push
dec
and
push
ds
shl
mov
in
pop
cmp
sub
pusha
xchg
pop
and
push
add
aad
insb
cmp
sbb
mov
test
mov
xor
mov
push
add
or
fwait
mov
or
pop
hlt
in
sbb
inc
ljmp
sahf
repnz
and
push
aas
scas
mov
add
int
imul
ja
fwait
es
pop
pop
fs
mov
je
dec
movsb
fidivrs
out
lock
mov
aam
mov
ja
lea
sub
dec
xchg
mov
cmp
in
pop
rcr
cmp
jns
js
in
dec
fldenv
aam
js
cmp
pop
jne
out
pushf
pushf
inc
das
pusha
xor
mov
sahf
pop
lea
adc
cmpsb
test
mov
mov
add
or
xor
mov
mov
jl
push
pop
es
add
fbld
xchg
adc
jp
dec
fwait
and
fdivs
sbb
xchg
out
shlb
xor
fstl
jp
and
mov
sub
ret
mov
popa
imul
sbb
mov
xchg
mov
psllw
jne
das
push
dec
xlat
pop
push
jge
orl
sbb
sbb
into
inc
sahf
mov
std
pop
push
add
adc
call
sbb
jno
push
cmp
mov
js
pop
jg
mov
push
mov
adc
in
aad
mov
pop
push
sbb
cld
stos
rcl
ljmp
mov
cld
repz
test
push
adc
push
cmc
mov
enter
inc
mov
and
negb
inc
jecxz
cltd
nop
fbstp
mov
push
repz
adc
dec
aam
push
stos
cmp
dec
imull
scas
adc
rorl
push
popf
test
mov
mov
in
daa
or
bnd
pop
stos
pop
lds
scas
adc
or
jne
inc
shll
adc
xor
dec
add
stc
loop
mov
dec
imul
aaa
jl
push
jle
outsl
mov
mov
mov
push
scas
mov
jns
add
lea
add
addr16
inc
jae
adc
pop
add
bound
icebp
mov
sar
xchg
ret
imul
fs
loop
sahf
fsts
xlat
jae
lret
lahf
jbe
add
loope
xchg
adc
mov
sbb
dec
out
lret
mov
icebp
sbb
adc
cmp
dec
rcr
or
lock
addr16
jno
insl
push
mov
push
les
adc
fs
sbb
xchg
adc
popa
pop
imul
jne
movsl
scas
sub
and
cmp
or
sub
dec
enter
jecxz
and
xchg
shll
ja
cmp
dec
aaa
add
xor
sub
sbb
movsl
std
loop
addr16
fiadds
fwait
dec
add
sub
sti
sub
dec
xlat
sahf
dec
xor
mov
out
ret
cli
je
test
adc
lcall
fnstsw
push
hlt
loop
aaa
mov
push
repz
or
xchg
cmc
repnz
dec
adc
lret
inc
mov
call
scas
subb
xor
andl
sub
cmp
out
mov
add
sub
das
push
andl
popa
dec
outsl
xchg
daa
arpl
dec
mov
int
and
shrl
push
cmp
mov
and
je
lret
inc
sub
adc
dec
fidivs
sti
imul
lock
sbb
sbb
imul
mov
aaa
clc
int
sbbl
sahf
je
lret
lret
xchg
orl
or
cmc
xchg
jp
insb
add
and
jge
mov
sub
fistpll
je
test
xor
pusha
loopew
or
pop
stc
xor
lret
xor
xchg
mov
jp
outsb
pop
push
in
lods
lea
ja
push
push
sub
xchg
mov
jns
sub
jns
jecxz
sbb
sub
jne
int3
mov
mov
cmp
lock
shll
xchg
sub
mov
cmp
inc
fdivl
rol
ds
push
fs
ja
add
sbb
push
or
insl
aaa
imul
imul
aaa
add
fisttpll
rclb
aaa
cmpsb
mov
adc
in
cmp
xchg
adc
test
pushf
iret
loopne
xchg
adc
jns
mov
test
rclb
cmp
or
or
xor
outsl
out
jb
mov
mov
jno
add
jns
dec
lcall
imul
mov
repnz
sbb
mov
cwtl
loop
lahf
cs
fwait
dec
xchg
aad
and
fdivrs
mov
lods
cli
cmp
in
out
test
jo
xor
mov
test
inc
push
xor
push
jno
sbb
or
push
ja
add
mov
into
or
inc
sub
je
nop
les
mov
mov
jge
sahf
sti
xchg
lret
gs
push
xchg
pop
js
adc
and
cmp
or
inc
negb
pop
adc
and
xchg
test
mov
mov
mov
int
lahf
sub
pop
shll
push
or
jmp
mov
mov
add
popa
sahf
loopne
aas
mov
aaa
mov
pop
dec
ja
hlt
xor
repnz
inc
xchg
daa
pop
pop
outsl
push
mov
sbb
int
int
cmc
push
lock
xchg
mov
xchg
mov
xchg
adc
xchg
ss
cld
cmp
popf
mov
xor
insb
frstor
cmp
repnz
imul
or
ret
ret
out
loop
sahf
mov
lds
mov
xor
adc
subb
lret
in
negl
arpl
add
push
mov
pop
js
stos
mov
sub
pop
pusha
hlt
mov
out
nop
shl
ja
jmp
or
dec
dec
vcmppd
into
dec
sub
pop
daa
lret
mov
lret
sbb
inc
sub
mov
xchg
or
jg
inc
imul
push
popa
mov
test
push
call
ss
adc
or
cmp
pop
add
sti
and
jbe
mov
out
xor
or
lea
or
mov
pop
xchg
js
sub
mov
or
sub
stc
push
and
inc
ljmp
mov
mov
pop
popf
jb
adc
sub
xchg
scas
cld
ds
inc
add
pop
mov
adc
cmpsl
dec
pop
les
data16
jle
dec
xor
mov
push
nop
mov
shrl
leave
cmpsl
popa
fimuls
jmp
jg
sahf
cmp
repnz
daa
inc
movsl
sbb
sbbl
cmp
imul
les
pop
std
mov
ljmp
and
cmp
aad
cmp
and
lock
push
jbe
jbe
repnz
in
add
iret
pop
gs
loop
cmp
or
lods
ds
aas
ret
sub
push
fisttps
lock
gs
mov
inc
int3
xchg
stc
movsl
enter
sar
jbe
dec
fadds
inc
push
jne
push
mov
sahf
or
sbb
jne
and
hlt
push
xor
mov
mov
addr16
leave
jge
cmc
ret
and
sbb
arpl
mov
aas
popa
mov
xchg
cmp
jmp
mov
fsubr
loop
xchg
xchg
insl
jno
adc
cmp
mov
stos
push
int3
add
and
xor
jo
sbb
push
pop
adc
scas
inc
jmp
jne
or
sub
outsl
add
sub
jl
jne
mov
sub
jmp
xor
dec
cmpsb
in
mov
sbb
jl
xchg
inc
in
leave
jg
into
push
mov
adc
dec
mov
xor
les
inc
sub
aam
int3
ljmp
gs
int3
in
and
mov
loop
push
leave
jle
dec
mov
pop
aaa
inc
sarl
push
jp
jecxz
lods
std
movsb
repnz
jo
mov
aam
mov
dec
inc
cmc
fwait
add
aas
adc
faddl
push
dec
add
or
pop
mov
scas
pop
mov
mov
jg
daa
fnstcw
pop
xchg
jbe
pop
jecxz
xchg
xchg
inc
gs
xchg
lds
insl
loope
cld
addl
enter
dec
out
jge
roll
loopne
into
lods
xor
or
mov
push
xlat
stos
mov
xchg
or
std
push
mov
pop
sbb
in
push
psubb
ds
int3
inc
mov
add
and
sbb
subb
mov
add
js
fwait
xor
jne
mov
mov
rclb
fwait
mov
or
nop
push
ljmp
sbb
jb
lret
cwtl
mov
je
inc
sub
sub
mov
jbe
ja
pop
push
pop
mov
jbe
jle
sbb
push
dec
iret
dec
mov
aad
call
ret
imul
cmp
pop
pusha
popf
xchg
push
pop
mov
insl
ljmp
stc
cwtl
adc
je
movsl
movsl
outsb
pop
mov
outsl
jle
aad
clc
les
xchg
cld
inc
bound
xchg
sbb
leave
cmp
push
ljmp
in
sti
dec
ds
push
ss
cmpsb
cld
and
stc
movsl
clc
mov
mov
adc
negb
or
cltd
mov
imul
and
jb
rol
movsl
mov
dec
jno
loopne
mov
icebp
sbb
cmp
std
rorl
push
test
wrmsr
xor
fnstenv
outsb
jecxz
mov
test
adc
pusha
pop
insl
mov
add
mov
aas
xor
ds
xchg
outsb
decl
xor
sub
movsl
xchg
lret
mov
rclb
push
cltd
fucomip
pop
nop
clc
leave
test
scas
or
addr16
stos
subl
mov
popa
mov
loop
and
or
rclb
mov
fdivrp
adc
dec
push
mov
sbb
out
sbb
or
in
insb
scas
and
sahf
insl
lcall
sbb
addr16
and
lods
push
mov
mov
inc
fisttps
xchg
jecxz
inc
and
push
jb
cmp
xchg
xchg
lret
xchg
lods
xchg
and
cwtl
testl
ljmp
scas
mov
or
and
in
cmp
adc
or
sub
push
popf
dec
loop
pop
xchg
sub
dec
push
scas
push
inc
gs
xlat
insb
hlt
adc
lds
insl
cmp
sbb
add
in
or
or
pop
xor
sarb
imul
roll
in
enter
scas
xchg
xor
xchg
ja
jae
add
aas
pop
movsb
test
loopne
add
pop
inc
loop
mov
mov
xlat
mov
add
ja
lods
adc
psubusb
ret
mov
sub
add
and
insb
adc
cwtl
repz
cmp
icebp
xchg
pop
cli
sub
ret
sahf
loope
inc
data16
movl
inc
cltd
push
rcl
inc
push
imulb
lret
xchg
rcl
lock
push
imul
iret
mov
aaa
in
cs
cmp
and
or
lcall
test
pop
jnp
jg
lcall
mov
pop
mov
pop
mov
rcll
and
cltd
or
xor
inc
adcl
shll
adc
push
cmp
mov
mov
dec
xorl
fucom
xor
cmp
mov
sbb
dec
jne
nop
je
jge
lods
mov
rorb
dec
push
popa
das
adc
mov
ror
sub
xor
jnp
scas
mov
inc
mov
stos
ds
cmp
das
cltd
lahf
scas
int3
push
adc
in
fidivrl
and
addb
push
mov
std
insb
sbb
iret
xchg
cmp
jo
adc
cwtl
xchg
add
sbb
push
insb
cs
fptan
xchg
notb
sbbl
push
inc
xchg
adc
sbb
jae
sub
cmp
dec
loopne
das
push
pop
in
aad
mov
dec
jle
roll
mov
mov
jno
xor
sbb
inc
into
cmp
in
cmp
repnz
mov
data16
dec
daa
or
inc
test
or
adc
jbe
cmc
push
mov
lahf
cmp
sarl
test
daa
mov
cmp
lcall
js
mov
push
mov
out
inc
mov
jae
es
leave
sub
adc
jg
dec
addr16
into
and
gs
dec
bound
in
mov
mulb
ljmp
add
pop
call
repnz
jl
fcmovb
loope
rcrb
ja
mov
sbb
test
xchg
adc
inc
cld
in
inc
stc
scas
pop
and
in
testl
insb
aam
mov
push
push
add
jge
ds
inc
push
pop
cwtl
test
lea
xor
imul
nop
cmp
nop
in
fcmovnu
push
mov
mov
loop
sbb
insl
rolb
test
add
fsubl
lcall
cmp
inc
in
dec
push
pop
in
hlt
xor
push
sbb
out
fidivrs
push
insb
out
sub
xchg
fisubrl
jmp
movsb
sub
sub
cld
xchg
and
xchg
mov
sbbb
dec
data16
mov
repz
inc
imul
sti
lret
ds
sbb
inc
imul
frstor
call
pop
lcall
in
mov
inc
or
pop
stos
xor
stc
xor
lea
pop
dec
xchg
loope
aas
in
sbb
popl
pop
pop
mov
add
dec
mov
xchg
shll
or
out
std
sub
lahf
cmp
push
and
or
mov
cmpb
in
aad
cltd
adc
popa
cli
test
xchg
dec
fsubl
xor
in
scas
xor
cmpsb
nop
rol
stc
pop
enter
bound
push
add
sub
outsl
imul
hlt
das
stos
leave
sbb
mov
ds
loope
mov
mov
ss
push
inc
jbe
dec
jge
mov
pop
aas
das
adc
out
and
xchg
lret
aaa
or
movsl
lahf
mov
shlb
jb
jae
aas
ret
cmp
push
lds
sbb
pop
sbb
xor
push
stc
sbb
adc
jle
pop
lahf
or
mov
jge
in
jbe
pop
cmc
repz
push
cli
adc
idivl
pop
inc
fmull
ss
daa
dec
sbb
loope
icebp
push
mov
or
das
push
pop
mov
sub
inc
xlat
pushl
insb
mov
sbb
mov
and
ljmp
jb
sub
xlat
jecxz
jns
paddsw
xor
sahf
dec
jns
data16
sbb
jne
cltd
je
imull
pop
mov
dec
mov
mov
lods
sub
mov
sub
jbe
and
mov
push
pop
pop
lods
clc
add
sahf
testb
in
mov
lods
pop
out
mov
movsb
rolb
int3
sbbb
shrb
push
sbb
add
wbinvd
ljmp
aad
repnz
pop
in
inc
pop
outsl
mov
inc
xor
scas
out
pusha
pop
fidivl
add
sbb
repnz
cwtl
xchg
mov
mov
pop
xchg
hlt
jne
pop
sub
xor
das
into
repnz
pop
pop
cmpsb
repnz
sbb
or
mov
and
sub
ds
xchg
shl
pop
mov
lock
out
sub
data16
jmp
push
add
cli
hlt
mov
mov
aas
adc
pop
in
je
fmuls
imul
or
push
sbb
out
jnp
into
scas
xchg
mov
bound
in
cmp
imul
rolb
cld
pop
sub
incb
mov
cmp
mov
nop
mov
pop
sub
sub
int
xlat
movsb
loope
test
test
push
xchg
loop
in
nop
jecxz
insb
xchg
xor
xchg
or
inc
jp
or
push
nop
stos
clc
mov
fsubr
sbb
sbb
loope
xor
jns
jne
jbe
or
xor
adc
dec
push
push
ss
cli
or
enter
and
pop
adcl
and
push
and
cmc
stos
ss
dec
adc
mov
pop
out
or
stos
shll
orb
mov
pop
push
mov
cmpsl
fisubrl
jns
jl
lea
jmp
cmp
mov
dec
out
hlt
gs
jl
cli
sbb
lret
cmc
xrelease
popa
xor
nop
cmp
jge
movsl
inc
mov
adc
jmp
jge
xchg
inc
xchg
sarl
cmpsb
fiaddl
xor
addr16
icebp
mov
out
gs
push
aas
xor
imul
xor
mov
adc
dec
cltd
int
cmpsb
fs
fdivrs
inc
hlt
jno
sbb
sar
push
sarb
sbb
movsb
dec
mov
fisubrs
xor
or
sbbl
push
fs
sbb
pusha
mov
fiadds
push
repz
jecxz
arpl
adcb
add
add
or
or
push
inc
pop
or
sbb
or
xlat
cwtl
nop
fildl
mov
mov
bnd
out
loop
iret
jle
push
std
and
sub
adc
loopne
cmpsb
cmp
push
test
xchg
push
push
daa
popa
pop
mov
sbb
adc
das
in
xor
fisubl
iret
sahf
addr16
dec
addr16
daa
lea
adc
pop
and
subl
les
ret
mov
pop
push
sub
jle
adc
inc
ljmp
xchg
imulb
popf
and
cmp
in
test
aad
enter
test
sub
sahf
pop
outsb
adc
cwtl
cmpsb
xchg
int
mov
mov
into
stos
cmpsl
clc
outsl
iret
push
pop
pop
xchg
push
xchg
into
jnp
aam
mov
xchg
stos
addr16
call
xchg
inc
push
push
mov
mov
arpl
xchg
jno
xchg
enter
lods
inc
xor
cmp
addr16
jb
pop
ss
lods
inc
outsl
sahf
mov
pop
rcrl
and
pop
xchg
insl
jecxz
cmpsb
inc
repnz
adcl
add
cmp
adc
cwtl
mov
dec
je
jl,pn
popf
out
ficoms
adc
je
out
xchg
test
inc
jecxz
add
jl
popa
push
aad
jae
xor
cmp
push
lods
mov
scas
and
das
stc
or
mov
aad
out
fs
xchg
jmp
ficomps
dec
jle
adc
cmp
dec
fcoml
aam
mov
in
xchg
sub
add
fildll
dec
fadd
aaa
daa
repnz
mov
mov
cmp
cmp
hlt
test
pop
pop
out
test
push
nop
cmp
js
mov
fists
mov
xor
mov
lods
xchg
ds
das
xchg
add
jecxz
stos
ret
mov
jb
mov
imul
repnz
insb
xchg
out
dec
lea
lods
xorb
scas
jecxz
dec
pop
mov
sarl
stc
dec
dec
data16
jae
xchg
rcrb
add
scas
ljmp
nop
stos
repnz
cmc
xadd
push
xor
insb
xchg
ret
cltd
incl
inc
dec
push
push
xor
jbe
rcl
pop
repnz
insl
and
sub
andl
jns
or
xor
icebp
lea
cmp
mov
movsl
lds
adc
ret
mov
dec
test
pop
cmpsb
adc
push
inc
aas
mov
cmpsl
sbb
cmc
fmul
xor
lcall
inc
test
jmp
and
cs
rcrb
jg
cmpsl
fiaddl
adc
cltd
cmc
pop
and
mov
les
pushf
ret
adc
lea
mov
lcall
repnz
gs
xor
add
arpl
fstpt
sub
sbb
int3
xchg
jbe
mov
lcall
ficoms
out
xor
std
adc
add
bound
imul
es
ds
jo
daa
mov
jp
addl
rorl
fsqrt
in
mov
or
push
and
clc
mov
imul
xor
jae
cmp
cli
cmp
pop
jo
and
sub
repz
lret
jmp
xchg
sahf
loop
push
mov
or
push
sub
pop
xor
ja
dec
aam
mov
xchg
mov
cmpsl
dec
sub
dec
ss
enter
and
arpl
notl
sbb
aaa
push
xchg
jnp
aaa
cltd
int3
xchg
push
inc
jne
push
and
loope
popa
mov
cmp
dec
outsl
test
fwait
xchg
das
jne
add
dec
pop
inc
sub
push
dec
mov
xor
bound
fadd
mov
add
dec
or
fs
ljmp
sub
sahf
enter
cmp
out
movsb
or
mov
cmpsl
push
mov
mov
push
je
ljmp
pop
xor
shll
loop
push
inc
jne
and
dec
jno
inc
fistpl
fs
xorl
xchg
leave
adc
xchg
lods
aad
pop
jmp
adc
mov
sub
sahf
and
add
mov
push
adc
push
ret
pop
cltd
movsb
aam
mov
lock
loop
aaa
cmpsl
fsubrl
in
int3
ds
lret
pop
test
fsts
or
enter
stos
or
mov
das
sub
jbe
cmp
inc
pop
sub
orl
dec
ss
push
mov
inc
inc
divb
es
ss
inc
push
cmpsl
aaa
or
int3
mov
movsb
jb
sti
dec
sarl
sbb
sbb
mov
in
jno
mov
sbb
inc
enter
or
outsl
pop
jge
mov
inc
xor
add
cltd
xchg
pop
imul
inc
cmp
jb
push
lret
sarb
mov
aam
adc
pop
repz
xlat
in
ljmp
push
fidivs
dec
cmp
pop
push
jno,pn
scas
sbb
jae
add
push
cmp
ror
pop
add
jno
mulps
push
popa
jecxz
cmp
xchg
mov
fsubl
adc
lds
inc
rorl
jo
divb
xchg
int
fwait
test
gs
iret
add
xchg
mov
xor
xor
das
dec
pop
inc
adc
shrb
icebp
jle
push
add
jmp
and
daa
mov
in
jo
test
lock
cld
in
pop
cmp
push
subl
pop
add
lret
jns
push
sahf
adc
sti
mov
ss
in
mov
inc
or
adc
scas
or
jne
es
mov
mov
mov
mov
add
arpl
js
or
icebp
ss
cmp
testb
adc
and
lret
and
sahf
mov
inc
imul
and
push
roll
nopl
mov
dec
mov
xchg
faddl
adc
lods
jg
push
scas
mov
scas
pop
lock
adc
xchg
ds
or
test
sbb
mov
dec
pop
stos
enter
les
int3
cmp
push
pop
adc
fsts
dec
push
fdivr
lret
cmp
add
adc
adc
or
mov
sbb
pop
add
aaa
ret
es
jmp
fwait
jp
and
arpl
movsb
xlat
or
fsubr
lods
xor
inc
aad
pop
and
insl
cmp
mov
clc
pop
fwait
and
jb
mov
pushf
lret
xor
out
mov
ss
fadds
fsubp
out
or
insl
push
adc
inc
push
add
scas
je
or
cmpsl
inc
shl
cmpsl
mov
push
arpl
outsb
scas
movsl
push
cmp
ret
cmpb
inc
out
xor
roll
idivb
aas
adc
xchg
dec
pop
xor
mov
stc
xlat
xchg
xchg
inc
or
mov
out
mov
add
push
sti
pushf
movsb
cmpsb
fisttps
xchg
pop
xor
jno
xchg
pop
mov
mov
sub
test
sbb
cli
ja
inc
xor
jge
jne
inc
lods
in
repnz
xchg
cmpsl
rclb
cmp
jbe
sub
es
dec
add
mov
adc
jbe
ljmp
jbe
in
cmovae
cmp
pop
sub
mov
insl
loope
loope
xchg
adc
cmp
dec
pop
pop
cmp
fidivrs
das
and
sbb
sbb
ret
call
das
mov
lret
lods
lods
stos
divl
pop
nop
repz
dec
les
test
pop
push
xchg
xor
xchg
notl
xor
mov
fildll
mov
mov
xchg
aas
out
js
jl
cmp
pop
dec
cmp
pop
xchg
repz
jg
xor
xchg
ss
or
ret
adc
lea
xchg
jmp
xchg
jns
addb
rcrl
test
lret
xchg
and
cmp
pop
jmp
ds
jle
add
sbb
fiaddl
mov
xchg
out
std
shl
cmpsb
jnp
add
dec
cmpsb
add
in
lods
sub
shlb
cmc
lods
add
lock
mov
aam
mov
stc
dec
push
dec
stos
repnz
push
xchg
and
inc
pop
inc
and
lret
sub
cld
into
loope
mov
adcl
jno
mov
mov
popf
add
leave
out
pop
rep
lods
fsts
adc
pop
repnz
in
mov
sbb
add
sub
dec
adc
mov
fnstcw
push
inc
mov
jno
test
jno
adc
test
ret
adc
cmp
push
lcall
lret
out
lods
in
ret
std
mov
cwtl
xchg
lods
lods
fs
in
ret
mov
jle
adc
daa
call
add
in
mov
rcr
mov
fildl
lahf
in
enter
dec
pop
xor
insl
dec
pop
lods
push
dec
mov
add
ljmp
rorb
iret
lods
adc
or
aad
fsub
pop
cmp
or
fcmovb
imul
jo
or
xchg
mov
mov
stos
cmp
cmpsl
mov
scas
jecxz
sti
jp
jb
testl
xor
sbb
lahf
push
pop
xor
dec
stc
addr16
aaa
in
jne
dec
jne
xor
pop
outsl
pop
xor
mov
mov
cmpsl
ret
sbb
sbb
cmpsl
fst
out
ds
fdivrl
aaa
jp
xor
repnz
lahf
or
cmpsl
lds
loopne
mov
add
pop
ficoml
sbb
cs
mov
pusha
out
push
sub
add
cltd
xor
fstpl
addr16
std
mov
mov
cmp
adc
mov
sti
dec
or
outsb
and
xchg
lods
fimull
pop
std
fs
shl
xor
call
loopne
ljmp
inc
sub
pop
jb
rorb
es
test
jo
movsl
xor
in
fnstenv
jmp
ja
mov
mov
repnz
loopne
pop
ss
sub
push
dec
fmull
and
inc
inc
mov
loopne
jmp
inc
cltd
ja
pop
jno
add
shll
push
mov
xor
sub
push
push
sub
aas
fsubs
adc
xchg
ret
push
dec
xchg
cld
jg
and
mov
fwait
loope
pop
bound
dec
divb
inc
mov
push
or
enter
mov
mov
insl
jl
fmuls
lods
shr
adc
push
lahf
cld
dec
call
inc
fbld
sbbl
add
inc
fistl
insb
int3
sub
xchg
test
sahf
mov
mov
push
sti
sbb
inc
jmp
shrb
in
sbb
dec
pop
inc
or
xor
or
lods
sahf
sbb
jecxz
cli
push
mov
aam
int
sub
in
xchg
pop
fwait
nop
out
test
popa
jb
mov
aam
lahf
sbb
leave
pop
in
sub
into
sbb
adc
js
lahf
push
lock
daa
cmp
mov
cmp
lcall
pushf
push
cltd
mov
inc
and
ljmp
test
inc
mov
pop
xchg
imul
mov
repnz
and
lods
shll
lods
add
je
inc
jnp
xchg
pop
sub
addb
pushf
adc
and
inc
fisubs
sbb
jecxz
pop
je
mov
in
movsl
cmp
pop
mov
sti
push
scas
dec
adc
sbb
outsl
mov
and
jb
rorl
and
call
in
std
mov
aam
dec
call
out
jne
hlt
push
iret
xor
xchg
mov
sub
lods
push
data16
insb
mov
ja
cmp
int3
aas
fsubrs
gs
pop
aaa
leave
sbb
clc
cmp
or
jnp
ja
xlat
inc
hlt
rcrb
rcll
mov
lock
incb
sub
add
and
add
nop
pop
fldcw
and
jb
imul
dec
pop
dec
xchg
int3
outsb
and
inc
lods
mov
xor
popa
push
dec
or
aaa
xchg
mov
iret
cmp
in
out
push
fstpt
mov
stc
inc
mov
hlt
std
test
mov
mov
push
xor
pop
push
jbe
pop
dec
ljmp
nop
adc
lods
mov
cmp
fcmovu
push
aad
lds
jno
cmp
mov
jae
jae
fidivs
idivb
adc
dec
jl
nop
pop
xor
push
movsl
push
cmp
outsl
add
or
cltd
sbb
and
add
pop
jae
repz
enter
sub
cmpsl
adc
cmp
sub
cmp
or
imul
or
out
cmp
jne
aad
popf
roll
mov
pop
jg
sub
xor
lahf
jno
sbb
les
sub
pop
or
mov
ds
jae
push
push
iret
xor
out
push
testl
es
std
push
notb
scas
pop
cmpsl
loope
in
popa
sub
negb
dec
mov
pop
addr16
bound
push
mov
sbb
das
jmp
test
bound
mov
aas
and
dec
fildl
shrl
stc
in
int
mov
ss
sbb
add
repz
push
fimuls
mov
pop
stc
lret
scas
sub
pushw
mov
aad
xchg
jne
test
shrl
bound
sbb
and
lahf
fisttpll
adc
enter
mov
ret
addr16
hlt
adc
ss
sbb
insl
dec
loop
int
pop
jmp
ret
call
cmpsl
xchg
rcll
sub
jge
stos
xlat
inc
or
loope
mov
sbb
addr16
int
cmp
call
cmc
inc
push
lret
rol
cmp
adc
pop
sub
scas
pop
adc
popa
pusha
mov
int3
fldt
out
xor
mov
or
or
decb
sbbl
data16
add
int
aas
pop
loope
dec
ret
sub
and
push
gs
scas
adc
bound
sbb
lcall
xor
mov
push
pop
mov
ret
aam
jb
pop
loopne
push
nopl
inc
dec
adc
repz
jbe
inc
cmp
fdivrs
fistpll
test
pop
aaa
js
pop
ds
add
cwtl
inc
cs
or
cltd
lret
gs
rorl
fistl
mov
xor
adc
out
sub
mov
push
sbb
lret
clc
lahf
add
mov
push
pusha
test
movb
xlat
push
adc
jmp
mov
mov
adc
in
xchg
mov
dec
add
repz
sbb
in
lret
xchg
sbb
pop
jns
dec
push
loop
dec
mov
repz
push
cmp
pop
es
shl
inc
orb
sahf
js
test
xor
fisubrl
fisubrl
push
subl
js
xor
adc
scas
mov
cld
cmpsl
das
adc
jp
mov
mov
xor
mov
popf
outsb
mov
out
sub
popa
cld
fsubp
shr
or
or
mov
std
rcll
fsubr
jl
jecxz
dec
call
mov
cmpsb
insl
cs
jns
shll
int3
rorl
or
adc
xor
mov
adc
loope
jg
nop
sbb
sbb
inc
mov
sbb
fcoml
ror
shll
mov
mov
rcrb
fcomip
mov
or
cmpsl
add
fld
insl
fwait
xchg
cmpb
xor
jne
add
add
jae
xchg
pop
xlat
and
mov
int3
test
mov
filds
lods
clc
push
vpunpcklwd
mov
int
enter
push
jns
hlt
mov
and
in
jne
mov
sub
push
push
cmp
jno
aaa
hlt
pop
loope
js
push
pop
fadd
stc
pop
jge
dec
ds
push
sbb
std
mov
push
out
shr
pop
xor
test
sub
mov
int
lret
pop
addr16
out
inc
push
and
dec
in
mull
or
cmc
jp
lcall
imul
stos
xorl
mov
add
pop
adc
gs
insb
jl
xlat
ds
sub
fwait
lods
push
pop
aaa
js
jl
or
repz
inc
sub
testb
jne
ljmp
push
or
xchg
push
sub
jae
and
mov
push
lea
lretw
cmc
jmp
arpl
mov
rclb
mov
sub
cmc
xor
std
in
cmpl
scas
lods
xor
movsl
jge
cld
xchg
lcall
loope
push
adc
andb
outsb
lods
xor
inc
mov
or
push
adc
icebp
and
pop
fs
sbb
andb
sbb
xchg
and
es
add
rclb
into
xchg
and
fwait
outsl
pop
mov
dec
dec
ds
outsb
lret
in
adc
call
repnz
cwtl
jmp
es
arpl
dec
sub
cmc
push
or
outsb
fdiv
push
sub
popf
dec
push
xchg
add
out
cltd
pop
movsb
int3
popf
dec
pop
lcall
packsswb
aas
repz
pop
addr16
xchg
inc
out
pushf
sti
mov
test
call
repz
nop
push
and
test
aaa
repz
adc
jge
mov
pop
mov
inc
sub
mov
loopne
sub
lock
inc
and
insl
fstps
jae
addr16
xor
cwtl
push
enter
dec
push
scas
fbstp
fwait
sbb
shll
clc
cmp
roll
jmp
mov
cwtl
add
es
dec
in
jo
sub
gs
xor
adc
lcall
push
dec
and
pop
call
adcb
xor
mov
icebp
imul
add
addl
mov
cs
lret
nop
repz
xor
mov
push
dec
mov
jle
fs
push
xor
jne
icebp
push
js
and
movsb
das
loopne
pop
adc
push
xor
das
jecxz
add
push
or
dec
mov
fadd
sub
icebp
sub
gs
xor
rol
dec
scas
loopne
mov
int3
sub
mov
insl
xchg
lea
movsb
gs
mov
pop
pop
dec
test
mov
lret
push
cld
mov
pop
adc
add
mov
and
rclb
push
out
cmc
sub
in
call
lret
dec
inc
pop
sbb
xor
adc
cmp
mov
xchg
inc
pop
add
mov
pop
fdivr
stos
jmp
cld
nop
dec
inc
popf
test
lods
int
xchg
mov
xchg
mov
inc
sub
lds
out
cld
pop
int
lock
fsubl
leave
ret
sub
in
movsl
gs
mov
mov
sub
movsb
lods
mov
out
xchg
ds
mov
mov
adc
push
jb
mov
addr16
adc
or
sub
loope
dec
mov
iret
push
cmpl
and
mov
push
jg
pop
inc
mov
push
jbe
enter
bound
ret
insl
ss
arpl
mov
sbb
test
sbb
inc
sbb
jecxz
lods
test
xchg
cmp
jmp
push
stc
sbb
jno
xchg
dec
add
js
adc
xchg
mulps
mov
xchg
adc
mov
push
stos
mov
call
pop
push
xchg
popa
mov
cmp
mov
inc
sub
push
jecxz
xchg
mov
xchg
xor
pop
aad
insl
js
pop
fstpl
mov
stos
lret
mov
mov
pop
call
in
sbb
sbb
test
mov
add
daa
inc
mov
into
test
aaa
push
adc
insl
add
aaa
pop
mov
mov
popf
jns
movsb
push
out
lds
sahf
mov
stc
pop
pop
jns
jge
ss
cmp
mov
pop
aam
ds
mov
adcb
test
cltd
pop
cmp
cmc
int3
and
cmp
push
neg
xor
push
mov
and
cmpsb
push
sbb
pushf
mov
jp
lods
fwait
push
mov
xchg
out
xor
inc
mov
fchs
inc
fdivrl
cli
cmpsb
xchg
mov
add
fnsave
mov
mov
jno
sub
adc
xor
test
xor
in
xchg
mov
dec
mov
test
movsl
mov
shrl
rol
sub
dec
inc
sbb
in
mov
add
mov
jg
inc
movsl
call
pop
divb
pusha
push
jb
xor
aaa
int3
shrl
or
mov
imul
sbb
cltd
rclb
call
addb
stos
xchg
int
popa
push
cmpsb
in
aas
ds
out
inc
mov
cmp
inc
pop
cmpsb
jns
cli
in
shl
dec
xor
les
xchg
xor
push
mov
cmpb
xor
push
test
cmp
lods
xor
repnz
sar
fbstp
pop
mov
fdivrs
test
adc
pop
dec
sbb
ds
push
cmc
ja
incl
cmp
lods
add
dec
sbb
bound
in
xchg
xchg
adc
dec
push
inc
fnstenv
pop
adc
xor
fidivrl
shlb
sub
pop
xor
mov
jo
outsb
jo
pop
jns
shl
pop
and
lret
int
cmp
mov
shlb
lods
jl
fists
mov
mov
push
add
mov
mov
iret
into
inc
rorl
xchg
scas
test
mov
icebp
adc
adc
mov
gs
icebp
sub
out
inc
add
sahf
pusha
pop
xchg
inc
pop
xchg
mov
or
and
sub
divl
arpl
pop
hlt
jg
call
push
mov
cs
addr16
and
mov
rorb
add
and
and
popa
push
andl
jg
push
push
sbb
in
lea
pop
inc
sub
pop
int3
or
jmp
xlat
sub
sbb
jle
lds
jge
test
fisubrs
push
inc
dec
xchg
aam
shll
push
sub
push
lret
call
xchg
xchg
sub
xchg
cmc
cmp
pop
push
adc
pop
add
outsb
leave
clc
xor
rolb
das
ja
lret
jp
std
aam
sbb
jbe
loope
mov
xor
push
mov
mov
sub
test
lret
jns
outsb
popa
mov
pushf
in
data16
xor
iret
es
testl
icebp
addr16
sbb
inc
mov
repnz
pop
pop
sub
jb
mov
pusha
push
jecxz
lret
je
loopne
jo
mov
lock
scas
sbb
out
mov
jle
sbb
in
cld
rclb
fadds
sub
das
add
adcb
std
sarb
je
sub
cmp
xor
push
stos
push
sub
dec
jo
fcompl
xchg
in
push
arpl
in
mov
hlt
and
das
or
stc
xchg
mov
cmp
mov
fsub
popf
shrl
test
bound
into
xor
outsl
mov
dec
int
outsl
hlt
mov
mov
gs
cmpsb
rorb
pop
jge
ss
cmp
test
jl
sub
dec
add
in
lods
popf
mov
mov
popa
pusha
push
shll
pop
pop
test
mov
imul
scas
dec
push
cmc
fsubr
test
sub
xchg
push
pop
push
aad
pop
sub
rorb
pushf
push
push
pop
jno
mov
jle
push
imul
jg
dec
sub
and
movsl
pushf
sub
jnp
sbb
pop
aam
test
lods
add
fs
pop
and
dec
scas
adc
mov
sti
ds
fdivrs
adc
add
push
cmpsl
cmc
stos
pop
xor
fnstenv
mov
jmp
adc
jb
sbbl
pop
je
jp
into
push
xor
subb
int
cwtl
js
stos
adc
mov
test
jno
shr
imul
into
int3
lock
push
mov
sbb
outsb
ds
and
gs
int3
scas
ss
mov
roll
fcoml
mov
pushf
ret
fs
sbb
aad
sub
inc
repnz
mov
jg
and
lods
cwtl
jnp
jo
inc
int
mov
push
cmpsb
mov
inc
in
jbe
ss
sub
shrl
inc
push
mov
jg
sbb
sub
mov
adc
cmpsb
sub
test
js
mov
mov
xchg
push
mov
mov
pop
fwait
in
add
cmp
push
pushf
ret
mov
xorl
movnti
or
inc
stc
in
xor
mov
sub
rolb
outsb
loopne
in
cmp
xlat
stos
inc
dec
push
addl
dec
and
jb
fidivs
jbe
ds
or
fistpll
fdivrs
sub
and
in
mov
icebp
ja
mul
cmp
clc
push
enter
push
adc
cmpsl
call
pop
faddp
mov
jo
mov
ret
mov
or
enter
mov
dec
nop
and
mov
mov
pop
leave
lahf
test
cmpsl
insb
jle
pop
dec
add
ds
sbb
outsb
jns
adc
and
cmp
xor
push
mov
outsl
outsb
and
cmpsl
out
jg
mov
popf
cmp
sub
cmpsb
inc
aad
aad
into
sub
jne
sarb
push
test
mov
inc
out
cmpsb
fidivl
ficomps
in
ficoml
or
adc
lahf
andb
lahf
adc
adc
adc
sbb
and
loope
inc
scas
popa
jl
std
lods
fistps
and
fxch
mov
push
flds
push
pop
cmpsl
cmpsl
and
add
addr16
jne
sarl
rorl
xchg
xor
mov
and
imul
mov
pop
das
imul
repz
push
or
fisubl
aad
jl
xor
sahf
pop
mov
cmp
divl
sbb
stos
dec
sahf
xchg
and
out
mov
sub
enter
sahf
fiaddl
push
and
mov
and
pop
jbe
mov
pop
rolb
mov
jp
mov
repnz
push
adc
aad
cmpl
ljmp
fisubrs
shrl
icebp
fcoml
in
ss
mov
xchg
addr16
fistps
repz
xchg
pop
dec
rdmsr
mov
mov
push
pop
iret
fadds
popf
mov
je
mov
mov
ss
stos
push
push
inc
gs
xchg
orb
mov
aam
add
pop
jle
dec
push
scas
pop
leave
or
jns
lds
in
inc
xor
xchg
lcall
jnp
icebp
subb
or
mulps
mov
push
sub
call
xorl
test
adcl
or
sub
scas
aad
imul
mov
push
movsb
add
insl
cmp
mov
jnp
push
xchg
cmp
test
inc
cld
imul
and
mov
mov
loopne
push
cs
jp
or
leave
or
xor
fbstp
adc
ret
lds
mov
gs
sub
pop
cmp
fists
or
imul
test
add
mov
pop
arpl
inc
fwait
aam
or
imul
inc
cmp
rcll
inc
stos
popf
pop
scas
nop
xchg
or
andb
inc
mov
dec
nop
pop
fs
xchg
repz
addr16
loopne
adc
xor
pop
clc
enter
loopne
dec
faddl
pushf
sub
dec
dec
lock
pop
pop
fwait
push
or
push
stos
inc
fwait
and
loope
jg
stos
push
insb
incl
test
mov
add
mov
xchg
shll
stc
sub
cli
or
iret
mov
insb
lock
dec
or
lods
je
faddl
icebp
jb
lods
xchg
push
inc
fwait
pop
dec
data16
mov
lcall
lahf
cmp
push
inc
mov
test
aad
add
ret
adc
data16
jnp
add
jle
mov
test
mov
sahf
jo
adc
add
cmp
loop
xchg
add
xchg
repnz
push
jp
adc
scas
push
movsl
push
std
or
mov
sbb
mov
std
mov
sti
mov
repz
fsubrs
inc
adc
or
ljmp
pop
xchg
mov
sub
mov
push
mulb
xchg
outsl
cmc
lret
scas
inc
xor
imul
repz
mov
push
cmp
nop
cli
sarl
test
mov
idivl
inc
mov
fdiv
test
inc
ljmp
insl
xchg
arpl
and
out
in
out
insb
call
push
cmp
in
mov
stos
sub
ror
inc
xor
lret
jo
cmc
xchg
repnz
jne
ficoms
xor
sbb
xchg
pop
add
inc
pop
gs
rcrl
mov
xchg
xchg
out
push
pop
adc
xchg
pop
jb
sbb
ret
and
mov
jl
push
mov
mov
mov
mov
nop
notb
pop
jae
jmp
out
js
sub
outsl
jb
add
out
jne
or
lock
leave
push
mov
add
bound
or
sahf
in
fwait
sub
mov
push
mov
xchg
jnp
mov
mov
xchg
jl
cmc
rcrb
mov
mov
in
js
sbb
push
xchg
test
ss
xor
add
stc
xchg
and
icebp
in
jg
loope
cbtw
push
test
lcall
fistl
cs
shrb
loopne
fbstp
jl
shl
les
jg
push
xchg
push
bnd
adc
negl
out
sub
add
icebp
pop
hlt
mov
sub
and
xchg
mov
pop
inc
mov
jle
and
jg
xor
sbb
dec
or
jne
xchg
jmp
push
mov
jl
in
xchg
inc
xchg
addr16
out
fabs
es
push
adc
sbb
mov
jl
mov
mov
cmp
mov
cs
in
xchg
test
hlt
imul
pop
popa
xchg
dec
popf
pop
push
add
mov
add
pop
enter
jecxz
or
das
sarl
or
jp
stc
sub
mov
mov
test
cli
addl
popf
lahf
dec
sbbl
ljmp
movsb
or
fiadds
cwtl
push
sbb
mov
imul
pop
cmpsb
rcrb
push
pop
pop
mov
data16
xor
or
push
mov
jno
mov
int3
sbb
cmp
xchg
divb
je
jo
fdivrp
test
add
jmp
push
cmp
adc
fisubrs
lea
stos
pop
scas
shlb
add
xor
hlt
dec
rcr
bound
cmp
ret
cmpsl
jae
mov
cmpsb
mov
lods
and
jge
inc
cmp
add
sub
aaa
movsl
sti
fmuls
fdivrs
pop
icebp
enter
mov
jo
jbe
mov
adc
out
outsl
mov
inc
popf
add
jb
and
add
out
pusha
inc
push
aas
das
jb
cmpsb
and
int
jno
xor
push
shl
fistl
jae
add
pop
dec
push
addb
sbb
aad
push
cmp
jl
lea
sub
jge
sbb
mov
mov
jbe
xor
or
add
inc
jmp
push
loop
dec
cltd
and
mov
add
jg
lret
mov
data16
fldenv
dec
out
mov
push
push
mov
inc
orl
jnp
in
rcrb
pop
or
add
jl
icebp
mov
fistl
fwait
lcall
lret
mov
stos
leave
pop
sbb
xchg
fsubrl
jne
and
jg
pop
jecxz
pop
out
mov
lret
lret
sarl
mov
jbe
ss
mov
sub
arpl
out
xchg
sbb
shrl
pop
cmp
mov
cli
inc
dec
sarl
test
adc
icebp
fmulp
jmp
ret
lods
cmp
out
outsb
mov
xchg
cwtl
add
sbb
sub
nop
jno
cmpl
out
pop
nop
add
repz
mov
push
mov
stc
subl
sbb
push
mov
inc
jae
lret
adc
mov
shl
movb
sub
out
pusha
dec
push
int
add
cmc
mov
js
out
adc
out
sub
push
mov
loop
in
addl
push
mov
push
adc
rcrb
push
pop
jb
sub
fprem
mov
andb
jecxz
push
inc
insl
adc
or
xchg
imul
aam
hlt
inc
aam
adc
push
dec
rcll
popf
xlat
sahf
movsl
cs
add
or
int3
mov
or
inc
outsb
add
push
xor
push
xor
call
scas
outsl
lods
ss
loop
dec
push
imul
mov
icebp
sbb
test
negb
in
or
mov
movsb
test
gs
cmpsl
loop
mov
and
adc
sub
push
mov
adc
xor
lret
or
cmp
movsl
mov
push
add
pop
pop
movzbl
inc
jmp
rorb
jns
in
pushf
push
push
sub
cs
out
and
out
push
cltd
mov
sub
sbb
fsubrl
ret
fildl
inc
push
sbbb
ss
jne
bound
xor
out
mov
mov
hlt
sbb
xlat
jmp
push
insl
fwait
sahf
arpl
loope
sub
xor
push
aam
sahf
rorl
into
call
mov
movsl
push
gs
cmp
jb
sub
cmp
xor
mov
adc
jmp
mov
aaa
test
push
es
inc
jns
pop
jp
add
sub
aad
adc
jb
mov
mov
daa
out
sub
sub
imul
jns
and
dec
fsubs
loopne
and
scas
test
repnz
pop
jns
sbb
and
in
pop
mov
inc
leave
cmp
jno,pt
roll
pop
loope
push
int
jmp
xchg
icebp
xor
shlb
movsl
cmpsl
int3
add
xchg
stc
xchg
cmpsl
aam
xor
in
push
mov
xchg
push
add
repnz
xchg
filds
cltd
jnp
iret
push
push
rorl
pop
or
xor
sahf
rcr
and
sub
mov
ret
xchg
xchg
cld
clc
mov
cmc
cmpsl
idivb
iret
ja
lcall
out
cmpsb
pop
and
dec
jb
ret
mov
fldcw
std
xor
mov
ds
int
decb
call
push
pop
inc
cltd
data16
cmp
out
fs
push
addb
mov
push
jecxz
out
cmp
sti
subl
dec
lcall
jle
shll
jo
sub
aam
int
fsave
movsl
add
and
out
push
mov
sbb
sbb
testl
insb
rcrb
or
clc
mov
cmc
push
fmulp
or
pusha
pushl
adc
pusha
mov
fsubrs
repz
push
jmp
imul
mov
jo
adc
pcmpeqw
lret
cltd
nop
in
in
or
sub
lock
pushf
scas
pop
mov
in
dec
hlt
jecxz
in
ret
mov
jnp
sub
sbb
cmp
cld
js
test
je
adc
adc
ret
mov
push
popf
xor
mov
outsb
stos
fwait
and
imul
call
aas
nop
xchg
roll
in
sub
pop
mov
adc
mov
movsl
push
and
fadds
xchg
insb
push
rcl
add
jne
loopne
cmp
test
pop
add
pop
std
movsb
mov
or
lods
jne
in
push
pop
pop
fldt
mov
jle
repz
or
xchg
out
shr
dec
out
subb
mov
ror
xlat
fsubrp
push
or
sub
and
push
mov
jge
mov
pop
ja
cmp
das
cmp
xor
push
push
xor
cs
ret
push
adc
sub
lcall
dec
push
fisttpll
lret
clc
mov
jmp
ret
aaa
scas
insb
cmpsl
repz
jae
insl
mov
fcoml
mov
aas
adc
dec
xchg
add
or
lcall
pushf
push
mov
sbb
data16
rol
repz
sarb
mov
es
xchg
fdivl
push
pop
sub
insl
jo
mov
cld
sti
aaa
fdivs
cwtl
neg
sub
outsl
pop
ficompl
jb
push
xorb
scas
repz
sub
inc
gs
push
fsubrs
adc
mov
enter
push
iret
fistpll
shrb
cli
imul
pop
leave
jbe
movsb
jnp
inc
sbb
sarb
sbb
jo
mov
add
xor
div
pavgw
pushf
push
xlat
dec
inc
or
sub
push
adc
orb
and
adc
gs
xor
enter
out
inc
or
js
iret
das
xchg
mov
sbb
inc
inc
xchg
inc
subb
cmp
or
loop
lods
fs
pop
pushf
and
xor
out
js
stc
aas
aas
mov
jp
ficoms
and
push
inc
fists
xor
mov
and
sbb
iret
scas
frstor
loope
mov
jno
ss
mov
out
insb
mov
cmovno
imul
sub
xor
pop
push
pushf
dec
pop
push
pop
cwtl
sub
outsl
fdivr
imull
fs
mov
sbb
inc
bndstx
jp
popf
mov
push
ficoms
push
data16
and
fnstcw
lods
mov
mov
or
cld
sbb
into
loope
push
mov
xor
test
pop
ret
dec
jne
xchg
jl
cmp
notl
out
adc
ja
mov
fisttpll
sarb
jo
xor
cmp
push
or
mov
jno
cmp
push
aad
daa
out
push
and
std
repz
pop
mov
inc
sbb
ja
sbbb
inc
ds
stos
aaa
pop
fldl
cwtl
and
and
adc
out
insl
or
shll
mov
sbb
mov
shr
sub
and
loope
xchg
cli
pop
fildll
inc
shlb
jmp
or
cli
fistpll
ss
add
dec
jae
cs
stos
stc
fmuls
fisttpll
pop
dec
adc
rclb
test
pusha
fsubl
jmp
cmp
repnz
jb
cmp
pusha
add
xor
xchg
bound
movsl
sti
roll
sub
stos
movsl
add
in
add
pusha
rorl
jnp
loopne
popf
push
mov
les
add
jo
mov
jno
je
lcall
inc
mov
dec
pop
xchg
push
sbb
hlt
dec
and
lods
jne
scas
das
jbe
jo
sub
jnp
in
pop
inc
mov
fldt
popf
enter
mov
add
stos
enter
loop
out
or
repz
arpl
and
andl
imul
iret
pushf
sbb
push
andl
loope
pop
or
cmp
mov
sbb
adc
cmp
insl
cmp
jg
movsl
loope
add
inc
subl
fs
push
icebp
fcom
das
add
mov
ret
sahf
push
das
dec
sbb
or
test
movhps
push
sbb
insl
push
mov
dec
cwtl
adc
popa
adc
scas
leave
call
jnp
out
dec
les
ljmp
mov
cs
sub
xchg
jge
or
pusha
and
sub
je
inc
icebp
dec
lods
pop
push
int
mov
imul
mov
xchg
mov
test
xor
and
cmp
push
rcrl
test
add
jmp
les
jne
mov
cmp
cld
mov
push
inc
aad
lcall
inc
pop
test
jl
outsl
cmc
imul
jo
jl
xor
mov
sub
fistps
rcll
shr
and
pop
loope
cld
icebp
jle,pt
push
jg
cmp
das
orb
int3
ja
data16
sbb
inc
mov
data16
mov
pop
inc
cwtl
xchg
xchg
movsl
add
out
xchg
mov
repnz
test
jo
cltd
insl
leave
mov
push
jno
push
sbb
popf
push
jg
xor
mov
push
inc
mov
lret
cltd
push
sub
je
inc
inc
inc
add
xchg
fadd
xchg
divl
sbb
test
hlt
or
sub
loop
in
xchg
hlt
mov
sti
adc
in
es
mov
mov
sahf
mov
push
or
pop
inc
sub
sbb
jle
cmp
push
lahf
int
out
xchg
int3
push
inc
jae
out
inc
cmpsb
inc
pop
sbb
flds
push
sbb
xchg
cwtl
in
cmp
adc
pop
jecxz
adc
pop
ljmp
das
pop
and
js
sub
fwait
lahf
sti
inc
cli
jg
test
and
jmp
rcl
jb
sbb
cmp
ret
mov
jecxz
fdivl
das
mov
ror
xchg
js
sbb
imul
dec
insl
pop
es
out
fcoml
cld
push
pop
add
mull
insl
sbb
xor
mov
ljmp
push
inc
add
and
jl
in
xor
aam
jge
jmp
push
add
leave
leave
test
mov
in
in
sub
mov
adc
popf
sti
lods
movsl
mov
dec
or
decb
fdivrs
add
popf
cmp
fs
lea
int3
pop
cmc
movsl
push
mov
gs
and
cmpsb
sbb
les
xchg
sub
rcrl
enter
add
testb
repnz
bound
sub
sbb
shrb
out
clc
inc
aas
test
or
loopne
jno
das
xchg
mov
in
or
ja
add
in
je
jae
hlt
sub
xchg
cmp
ds
in
inc
xor
cmp
lcall
and
add
inc
adc
add
xchg
lods
rep
xor
addr16
jne
mov
dec
mov
sub
stc
in
aam
cmpsb
ljmp
rolb
stos
test
cwtl
add
xor
paddsb
mov
scas
incl
adc
rorb
push
cwtl
test
mov
aad
leave
aam
testb
push
jmp
push
lock
pushf
les
or
data16
daa
cli
sahf
mov
jg
jecxz
cld
mov
lret
clc
clc
in
inc
ljmp
and
int
data16
inc
adc
ja
sbb
and
mov
dec
inc
inc
jecxz
xor
xchg
push
js
adc
repnz
mov
xchg
fsubrp
mov
xchg
into
adc
popa
gs
cmpsl
xor
mov
rorb
fidivs
push
por
sar
mov
dec
sbb
pop
and
lock
es
es
mov
int
es
or
out
mov
pop
sub
outsl
xor
in
pop
lods
mov
mov
vmread
adc
lcall
dec
lret
rorb
pop
arpl
xchg
andl
xor
daa
pop
cmpb
pop
jg
push
cltd
jne
fsts
pop
loop
lock
inc
xchg
xor
mov
push
sahf
cmp
jns
jb
pop
pop
sub
pop
cmp
cmp
lret
sahf
dec
into
xor
xorl
xchg
cmpsl
push
pop
push
xorl
mov
rcrb
push
test
jae
das
xchg
jne
addr16
mov
sbb
ds
and
mov
push
roll
cmpsb
xor
dec
out
out
mov
ret
ret
xchg
cwtl
ds
jl
xchg
sbb
lret
stos
cmp
sbb
jecxz
sahf
add
hlt
or
daa
and
xor
lea
in
mov
pop
lcall
lods
mov
and
inc
lods
cwtl
aaa
push
push
and
push
pop
pop
mov
xchg
adc
ret
xor
call
adc
les
sbb
push
jne
lods
in
add
cwtl
bound
test
push
fisubs
add
repz
lods
push
repnz
jl
xchg
push
sub
mov
push
aaa
mov
sbb
int3
sbb
or
data16
xchg
or
repz
xor
inc
mov
cmp
bound
inc
enter
dec
jge
ja
or
not
test
mov
insb
bound
mov
scas
icebp
fwait
push
inc
fidivl
and
or
cmc
iret
bound
nop
mov
xor
mov
in
mov
into
dec
mov
decb
lods
jbe
rcrb
fsubp
pop
inc
je
inc
pop
lock
xchg
dec
in
decb
insl
jne
leave
sbb
ret
xor
loop
in
xor
leave
xchg
add
andl
sbb
call
push
lock
jb
popa
pop
cmp
fldl
cmovne
pushf
aas
adc
jg
add
sti
add
pusha
jae
mov
xor
xor
shlb
aas
fidivrl
insl
cmp
scas
and
insb
mov
cmc
les
orl
cmp
dec
cwtl
sbb
cmp
jnp
imul
xchg
popa
pop
fbstp
repz
dec
cmp
jns
mov
inc
sbbb
jno
imul
cmp
mov
pop
cmc
sarb
xchg
xor
xchg
leave
mov
loopne
das
rorb
xor
inc
mov
stos
in
jmp
push
sub
imul
jecxz
sub
fmul
mov
sbb
cltd
imul
data16
inc
movsb
adc
jmp
inc
popf
scas
imul
mov
mov
sarl
les
and
mov
xor
jae
icebp
jp
aas
lret
pop
icebp
mov
pop
cwtl
mov
xchg
or
mov
es
ljmp
xchg
xchg
mov
in
mov
frstpm(287
mov
push
and
outsb
or
and
imul
mov
jp
mov
sub
sub
xor
sbb
sub
test
sub
mov
push
pop
mov
jbe
enter
pop
sub
cmp
fcompl
out
ficoms
pusha
and
in
aaa
mov
lea
aaa
mov
xchg
scas
cmp
scas
xchg
lods
and
lods
rep
push
loop
fbld
aam
ret
je
fwait
jecxz
sub
push
xor
inc
mov
sbb
xor
das
popf
shlb
and
in
aad
inc
out
gs
or
lret
pop
mov
lods
movsl
cs
subb
popa
add
mov
dec
xcrypt-cfb
cmpsl
arpl
fistl
xchg
mov
cmp
test
jl
mov
rclb
xchg
in
sub
sub
aad
pop
outsl
add
int
pusha
adc
cli
mov
jae
mov
lret
xchg
sarl
fwait
pop
into
sbb
or
subl
test
mov
inc
add
inc
rorl
cli
and
out
cwtl
or
out
rcll
insl
outsb
jl
cmpsb
inc
jp
adc
mov
mov
or
adc
inc
ror
je
push
jle
testb
mov
dec
rcrb
push
dec
scas
jo
mov
xchg
xor
fwait
xchg
add
js
enter
aaa
dec
adc
sub
daa
xchg
jb
daa
pop
ret
jp
call
xchg
cld
sbbl
fsubrl
aad
sub
sbb
mov
pop
pop
jbe
inc
sbb
jns
test
inc
push
popa
daa
jne
ss
pop
pushf
movsl
out
test
cmpsl
and
sahf
push
imul
iret
cmp
fdivr
xor
out
iret
mov
fmul
cmp
mov
adc
stos
ret
adc
hlt
dec
lahf
jns
pop
push
mov
mov
subb
movsl
rcll
out
and
ljmp
jb
les
adc
mov
aas
mov
punpcklwd
mov
mov
cld
xchg
mov
jp
dec
sub
add
gs
scas
mov
sub
lcall
inc
orb
jecxz
pop
mov
movsb
dec
adcb
fldenv
adc
inc
jecxz
and
fcomip
scas
js
mov
xor
lock
adc
push
pop
movsl
mov
xlat
ljmp
cltd
cld
ret
dec
add
fstpl
pop
cwtl
or
add
mov
add
insb
rcrl
cmp
lds
mov
aaa
adc
and
or
dec
and
xor
lcall
sub
nop
jecxz
mov
aam
je
test
xor
xor
add
js
jno
pop
loop
fnstenv
pop
jne
add
sbb
adc
lds
mov
iret
fldl
popl
cmp
cmp
mov
inc
mov
shll
mov
jp
pop
cs
or
sbb
jne
movsl
lret
xchg
insb
shrl
mov
mov
stos
pushf
sbb
add
frstor
push
lock
xor
cs
or
subl
rorb
lods
sbb
push
pop
rcr
jno
mov
cmp
cmp
movsb
jae
mov
mov
push
inc
lea
sub
int
rolb
popa
xchg
cmpsl
mov
mov
rclb
jp
subl
push
adc
and
sbb
enter
insl
xor
mov
outsb
lock
filds
inc
jnp
mov
push
es
sbb
flds
cld
push
call
push
mov
push
insl
data16
les
adc
lds
jns,pn
cmp
es
fucom
push
sbb
popa
xchg
and
ss
fwait
sub
repz
mov
mov
jmp
repz
pusha
push
mov
movsb
xchg
jno
cmp
and
xor
fs
addb
lds
or
jbe
leave
cwtl
pop
divl
lcall
decb
aam
outsb
mov
mov
ret
fisttps
xchg
loopne
stos
add
mov
jge
inc
pushf
mov
pop
mov
xor
xchg
jo
into
adc
stos
testl
mov
bound
adc
mov
xor
add
push
mov
ret
test
lods
sub
or
pushf
fs
push
xchg
xchg
xor
mov
push
dec
pop
cmp
in
xchg
dec
push
loop
lea
dec
icebp
pop
jge
fidivrl
outsb
cmp
loopne
cmp
mov
sub
push
ret
sbb
sub
mov
lahf
or
movsb
lods
cltd
mov
fucomip
mov
mov
pop
pop
out
mov
dec
pop
pop
inc
icebp
mov
xor
imul
sar
inc
jl
cs
mov
inc
xlat
pop
cmp
xchg
addr16
loop
mov
push
lods
movsb
mov
add
adc
lcall
adc
sarb
pop
mov
mov
int3
xchg
int
cltd
outsl
adc
pusha
sbb
sub
insl
sbb
icebp
mov
and
inc
xor
mov
loope
fcmovnbe
sub
popa
and
nop
cli
scas
cmpsl
push
cmp
aas
xchg
xor
popf
mov
orb
fdivrs
adc
xlat
fmul
lret
dec
or
push
or
jbe
xchg
jno
sti
andl
push
insl
loop
lret
xchg
xchg
mov
cli
mov
jmp
dec
call
test
rcl
sub
push
arpl
cmp
push
hlt
and
xor
ret
mov
fsubrs
cmp
and
aas
daa
daa
lcall
pop
cmp
mov
sub
mov
xor
push
cmpsl
mov
dec
adc
mov
mov
xor
das
lods
adc
add
pop
mov
leave
xchg
ljmp
out
test
mov
or
in
push
cmp
push
inc
addr16
test
call
cs
into
xor
stos
inc
push
lea
xchg
imul
jecxz
add
pop
mov
addr16
xchg
sub
std
mov
movsl
add
xchg
call
mov
xchg
subb
adc
pop
or
jnp
adc
or
pop
pop
sbb
movsb
imul
rclb
push
adc
cmpb
or
fstp
jge
mov
pop
imul
insl
scas
or
lock
loope
cmp
or
insl
xchg
pop
in
jnp
pop
jmp
sub
xchg
rorl
push
in
mov
sub
shll
pop
cmp
outsb
adc
mov
lods
mov
sahf
rclb
aad
xchg
imulb
pushf
dec
fwait
mov
cmp
outsl
addr16
jbe
xlat
or
lods
bound
cmp
mov
jno
addr16
rcrb
call
dec
stc
xor
dec
push
xor
inc
mov
inc
cmpsl
int3
rcrl
divb
mov
sbb
xor
jbe
js
jns
nop
mov
into
shrl
mov
loop
or
out
push
mov
or
aaa
cmp
add
mov
aad
mov
es
cli
lea
pop
into
int
mov
sbb
fadd
out
loope
push
mov
and
xlat
lds
mov
mov
mov
pop
push
xor
ss
fnstsw
pop
dec
add
rcll
cltd
push
push
insl
add
subl
pop
and
push
cmc
fisubrl
lds
mov
sub
xorl
outsb
cmp
popf
mov
adc
or
jnp
mov
cltd
sub
test
pop
add
mov
push
lods
mov
push
xchg
fld
adc
sub
mov
pop
dec
inc
mov
call
orb
jbe
xchg
inc
aam
iret
scas
or
clc
lret
cmpsl
push
jle
fdivs
scas
mov
dec
mov
fstpt
pop
out
jnp
xor
sub
daa
mov
cltd
lds
adc
lds
cli
repnz
pop
loope
cwtl
shl
dec
and
dec
xor
shll
jo
popa
mov
dec
jns
scas
lcall
jno
cmpsb
adc
test
std
jns
test
or
loopne
aaa
pop
iret
push
insl
in
mov
ror
sub
mov
pop
mov
fldt
push
iret
sbb
sub
fsub
shll
jne
mov
insb
data16
mov
scas
pusha
xor
mov
in
cmpsb
loope
adc
dec
push
ss
pop
ds
out
cmc
mov
or
stos
adc
cmpsb
std
std
pop
scas
push
insl
imul
jo
xor
rolb
mov
fidivrl
repnz
mov
sbb
je
in
mov
into
bound
insb
mov
pushf
pop
fldl
mov
rol
jne
fs
pop
mov
insb
adc
dec
push
ror
into
aaa
das
xor
and
in
push
pop
pop
add
scas
pop
and
stos
and
loop
cli
mov
pop
push
loop
inc
hlt
pop
bound
mov
inc
xchg
mov
dec
or
inc
cld
adc
jnp
popf
pop
xchg
ljmp
mov
stos
lret
and
sbb
add
clc
push
fsubrl
mov
dec
shlb
push
ror
subb
movsl
rol
cmc
jnp
nop
mov
cmp
push
mov
insl
mov
xchg
pop
mov
cmp
or
subb
jecxz
and
and
xchg
push
imul
xchg
push
dec
addr16
xchg
dec
jb
and
add
xchg
pop
jo
arpl
into
inc
loope
push
mov
xor
and
in
mov
add
das
lock
sub
cmp
into
jno
sahf
jp
lret
ret
cmp
lea
fwait
jecxz
add
add
aas
cmp
pop
lahf
ljmp
xor
mov
lahf
fiadds
pop
sub
sbb
mov
or
mov
addl
jge
pop
add
fisubrs
mov
cli
sbb
into
lea
add
cmpl
jnp
lcall
jecxz
mov
xchg
nop
les
into
lds
out
mov
adc
notb
dec
jno
incb
inc
jmp
arpl
movsb
lea
mov
mov
xor
sub
loop
and
popa
dec
inc
int
xchg
orb
jle
pusha
movsl
outsl
sub
dec
aaa
cltd
sbb
jecxz
pop
lods
inc
xlat
aad
inc
arpl
push
cmp
iret
insl
scas
push
enter
fiadds
ja
jno
inc
push
pop
sub
iret
cltd
je
cmc
clc
fs
sti
adc
imul
mov
xchg
mov
pop
popf
sahf
pop
mov
push
daa
or
cmp
mov
sbb
adc
scas
lahf
stc
xor
popa
rorb
notb
pop
icebp
push
jno
scas
jo
cld
nop
mov
jne
cmp
push
mov
jl
andl
jns
aaa
cmc
sub
pushf
mov
rorb
es
cli
hlt
es
sbb
inc
sub
adc
leave
xchg
lret
mov
loope
int3
iret
or
cwtl
imul
xorb
sub
mov
xor
cmc
andb
pop
sub
cmpl
pop
rcll
xor
cs
dec
pop
jmp
xchg
xchg
push
fbld
xchg
jbe
adc
adc
int3
into
mov
out
jae
cmp
xor
cmp
into
jg
lods
sete
xchg
fsts
insb
insl
dec
push
cwtl
divl
sbb
add
movsb
xchg
iret
test
imul
scas
sub
jbe
out
loop
repz
sbb
testl
mov
inc
adc
stc
scas
cwtl
adc
jo
push
js
int
jmp
mov
adc
push
mov
test
mov
mov
lret
sub
xchg
xor
mov
mov
mov
mov
mov
mov
or
hlt
xchg
ja
fwait
xor
js
in
popa
stos
mov
bound
mov
dec
cmp
nop
ljmp
mov
rorb
daa
sarl
pop
jle
xchg
add
adc
rdpmc
iret
adc
push
pusha
test
in
xlat
pop
sub
jnp
jbe
pop
in
ljmp
clc
insb
lds
and
fidivrl
out
push
je
mov
icebp
pop
or
jne
adc
out
mov
int3
or
insl
pusha
push
push
inc
sub
cmpsb
loopne
out
fdivs
imul
inc
nop
push
xor
daa
loope
dec
scas
lret
shll
shrl
pusha
in
jbe
jo
pop
xchg
orb
jp
cmp
mov
xchg
lahf
add
sub
sub
mov
adc
lcall
repnz
mov
setnp
mov
xchg
pusha
jle
mov
pop
std
bound
sbb
inc
ljmp
xlat
lock
cmp
mov
push
pop
push
xchg
leave
int
mov
mov
inc
add
int3
gs
das
fmulp
movsl
pop
popaw
push
popf
pop
decl
js
xchg
inc
or
scas
inc
add
daa
lret
or
xchg
cmp
xchg
cmp
add
mov
pop
push
xchg
lods
iret
ss
imul
int
sbb
xchg
add
mov
and
int3
inc
popa
addr16
pop
les
int
popl
add
stos
mov
add
sbb
int3
in
cmc
inc
cmp
ret
sub
push
xchg
mov
loopne
jmp
jno
jne
jg
repnz
dec
lret
inc
fwait
out
add
mov
pushf
sub
xor
mov
jp
add
push
mov
xor
push
sub
push
cwtl
pop
shr
rclb
jmp
add
lret
jne
jle
sub
cld
inc
gs
sbbb
sbb
imul
fsubl
pop
les
shlb
inc
xchg
leave
ret
mov
add
cmpsl
pop
pusha
aas
not
outsb
adc
mov
and
cmc
push
ds
lcall
and
cltd
add
lock
mov
arpl
or
cmp
add
mov
cmp
lock
inc
clc
call
aaa
sub
movsl
insl
scas
push
imul
add
sub
rcl
jnp
jb
cli
xchg
pop
inc
cld
mov
cmc
and
push
push
add
mov
insl
in
xchg
mov
xor
inc
mov
clc
rcrl
call
ret
mov
inc
stos
jmp
movsb
test
mov
and
push
stos
adc
sbb
bound
bound
pop
es
mov
push
jecxz
inc
scas
lds
sub
xor
cmp
gs
xchg
mov
xchg
out
inc
mov
mov
push
cmp
insl
fwait
pop
sub
loopne
ja
pop
xchg
ret
cmp
pop
xchg
loope
push
movsl
pop
lods
or
xchg
add
scas
add
push
dec
fsubrs
fidivrl
bound
inc
add
xor
jmp
sbb
pop
pusha
into
and
cmp
lds
out
je
xchg
dec
fsubrl
add
gs
add
sarb
aas
insb
mov
arpl
xor
fidivrs
adc
scas
out
shll
dec
mov
mov
mov
xor
outsl
jnp
mov
adc
pop
call
subl
stos
add
push
mov
cmpl
xchg
test
daa
sub
inc
mov
sti
push
jbe
mov
inc
mov
punpckhwd
push
fucomip
cmpsl
mov
xlat
dec
arpl
or
xchg
mov
cmp
sub
lods
mov
fisubs
mov
nop
or
aas
push
mov
sbb
xchg
das
rcrl
addr16
mov
fists
or
ficoms
mov
mov
scas
inc
mov
or
sbb
pop
mov
cld
sub
sub
inc
sti
mov
cmpsb
and
dec
aas
dec
fsubrl
arpl
push
cs
stos
mov
test
pop
xor
notb
jp
inc
lea
inc
pop
lcall
xor
mov
incb
add
ds
out
pop
pushf
jp
mov
lcall
pop
aad
loope
mov
repz
pmaddwd
adc
jl
notb
aam
xchg
fdivrs
adc
insb
pop
xchg
in
fmul
sub
sbb
bound
adc
lcall
ds
hlt
mov
sub
jecxz
mov
cmp
loope
roll
sbb
or
push
loope
push
dec
lods
pop
mov
sbb
fists
mov
pop
add
int3
les
inc
andb
data16
and
ljmp
push
outsb
ljmp
xor
jns
sub
xchg
xchg
mov
rorb
push
jno
sti
aaa
or
loop
aas
movsl
ret
xlat
orb
imul
rolb
push
jo
jnp
js
xlat
xchg
imul
cmp
xor
adc
push
out
and
mov
inc
clc
push
xchg
mov
jmp
push
pusha
pop
pop
cwtl
push
push
add
scas
leave
call
std
lahf
mov
or
mov
in
hlt
cmpb
aam
or
popf
dec
dec
cmpsl
cmpsl
or
es
cmp
fistl
enter
aad
cld
fisubl
adc
sub
mov
inc
pop
lret
ja
stos
jno
cmp
or
dec
xor
aam
cwtl
loopne
bound
adc
and
and
cmc
ret
xor
pop
addl
cmp
push
arpl
adc
lock
add
out
sbb
or
lcall
into
hlt
ret
scas
sub
fnstcw
cmc
out
mov
leave
std
pop
jnp
sbb
fisubrl
xor
rorl
fldt
jb
inc
xor
fildl
stos
or
pop
std
sub
fmull
mov
lods
stc
mov
mov
loope
incl
xlat
addr16
adc
enter
mov
mov
jo
pop
out
nop
in
dec
sub
mov
pop
xor
sub
icebp
xchg
jp
lret
js
test
mov
sub
and
sahf
sub
add
mov
dec
fwait
inc
cmp
or
jo
mov
adc
dec
lcall
hlt
cmp
push
mov
stos
xchg
ret
xchg
fdivs
fwait
and
cmp
pushf
out
cmp
aad
fisubrs
xchg
js
xchg
mov
fdiv
mov
hlt
sti
fcompl
test
loopne
push
ficompl
jae
mov
lods
ret
xchg
add
rorb
test
daa
sbb
sarb
inc
sti
sbb
icebp
mov
xchg
pop
mov
mov
sub
pop
dec
mov
xor
jg
dec
xchg
pop
fbld
push
xlat
and
jnp
setnp
and
ja
in
in
aad
push
ret
mov
jo
dec
add
je
bnd
or
les
jge
lds
mov
iret
cmc
test
shrb
mov
stc
or
adc
inc
mov
add
push
out
pushf
stos
out
inc
push
aas
iret
bnd
icebp
repnz
and
sbb
pop
inc
jo
pop
enter
in
push
cmpsb
aad
ljmp
pop
mov
dec
or
adc
ss
fadd
sub
cltd
jbe
push
pop
sbb
mov
pop
push
add
pop
js
loopne
in
xor
mov
scas
lret
xchg
sarl
cmp
add
pop
clc
lds
add
or
aas
lea
in
pop
cld
xor
xchg
iret
mov
mov
lods
push
shl
sub
rolb
test
loopne
mov
std
enter
loop
out
mov
sbb
jbe
cmp
mov
adc
mov
pop
ljmp
stos
mov
jl
mov
inc
xlat
sbb
call
jne
cmc
xchg
jb
stc
jl
test
test
dec
cwtl
adc
in
xor
fidivl
cs
stos
jle
roll
loopne
leave
jmp
pop
in
jge
fcomps
gs
push
in
pop
pushf
jecxz
mov
jnp
sub
jecxz
mov
arpl
pminub
repz
or
lods
sbb
mov
das
test
mov
dec
imul
lret
scas
js
mov
adc
into
jns
sub
stos
jbe
cli
jne
mov
inc
repnz
cmp
scas
mov
inc
test
in
pop
or
pop
fwait
loopne
mov
dec
das
mov
imul
sub
pop
test
ss
aaa
jmp
lods
dec
fcmovnb
adc
xchg
push
loopne
xor
shrl
andb
int
jno
call
mov
mov
out
jbe
sbb
dec
mov
add
inc
aaa
pop
sbb
push
cmp
mov
aad
sbb
sub
fadds
mov
add
jo
jo
cmp
xchg
and
push
inc
xchg
dec
jle
lds
jno
scas
popf
adc
xchg
fwait
scas
pop
xchg
sub
decl
dec
sub
jge
sti
sti
mov
pop
sub
dec
repz
loope
jecxz
add
xchg
cmpb
push
pop
mov
mov
and
mov
cltd
pop
sbb
jbe
xor
sarb
inc
mov
femms
in
data16
mov
and
cmp
jp
loope
repnz
lahf
pop
cli
imul
xchg
mov
ja
mov
jl
aam
outsb
inc
xchg
pushl
xor
test
jecxz
ret
pop
inc
into
bound
ja
stos
push
fimuls
rcrl
xor
clts
cs
jge
mov
adc
pop
data16
adc
gs
aam
loop
push
mov
insl
popl
aaa
aas
icebp
add
icebp
sahf
inc
sbb
xchg
aaa
add
jp
fisttps
mov
and
cmp
clc
scas
fidivl
bound
mov
adc
repnz
fldcw
inc
fsubs
xchg
inc
jg
loopne
loopne
or
call
cmc
pop
cmp
lock
jbe
repnz
adc
stos
cmp
lods
les
cmc
testb
jle
insb
icebp
scas
testl
dec
or
xchg
sahf
jns
aam
push
call
mov
mov
mov
in
outsl
ds
and
cld
pop
les
insb
xor
rol
outsl
and
adc
shlb
jg
cwtl
scas
inc
sbb
daa
out
push
or
cmp
dec
fwait
jne
shll
in
ss
xchg
pop
rcrb
ret
inc
mov
mov
mov
arpl
inc
test
dec
icebp
imul
movsl
outsl
frstpm(287
or
scas
inc
mov
cmpsl
xchg
cmp
shrl
fldt
add
xchg
mov
in
ret
sub
int3
roll
xor
push
outsb
int
stos
xor
outsb
jno
push
addl
mov
in
mov
in
jne
movsb
xchg
aaa
fcmove
lcall
leave
sub
jl
and
inc
int
jge
dec
adc
fcompl
std
cli
xchg
ds
int3
shlb
fstpl
cmc
scas
xchg
dec
sbb
imul
js
xor
lahf
in
ljmp
pop
sub
sub
mov
hlt
les
pop
out
pop
fs
sarl
icebp
mov
arpl
inc
mov
out
enter
outsb
in
mov
mov
mov
pop
dec
addr16
xor
pop
stc
hlt
int3
decb
insl
xor
ja
call
jb
jb
sbb
mov
lods
jae
insl
xor
inc
mov
lahf
adc
aaa
loope
aad
xchg
pop
jne
cmc
enter
adc
lock
sbb
das
jno
push
fidivs
ja
mov
pop
jmp
inc
add
mov
aam
push
jp
mov
test
adc
xchg
iret
push
lock
ljmp
add
pop
add
js
test
sbb
add
aad
mov
and
fwait
push
jb
popa
jns
pop
adc
sarl
movntps
lcall
sbb
push
adc
loopne
mov
xor
pop
dec
cmp
movsl
xchg
shlb
fidivrs
popa
inc
xor
roll
ds
stos
mov
test
inc
jmp
inc
add
test
sub
adc
mov
idivl
pop
mov
or
sub
loopne
sbb
adc
push
fisttpl
sub
inc
push
mov
ljmp
mov
mov
or
push
repz
mov
bound
pop
shlb
enter
push
int3
cmp
sbb
add
sti
inc
push
subb
and
push
loop
push
fsubs
xchg
sbb
cmpsb
add
std
clc
punpckhdq
pop
pop
jle
pop
dec
mov
jecxz
xchg
or
mov
decl
loope
xchg
outsb
push
jmp
xorb
xchg
mov
adc
dec
mov
int
pop
cmpsl
add
push
je
popf
dec
cmovge
loopne
and
ret
mov
cltd
arpl
sar
xchg
in
fwait
nop
outsl
mov
inc
adc
push
aam
jnp
sub
and
mov
and
dec
add
mov
cmpsl
or
push
testl
repnz
and
ss
push
pop
cmc
lret
iret
mov
xchg
lret
mull
imul
int
ja
add
sub
stc
in
test
bound
mov
jl
pop
test
add
mov
jo
out
dec
xchg
icebp
popa
sub
mov
inc
ss
hlt
push
lock
outsl
lea
push
ret
fisttpll
mov
jecxz
popa
pop
jl
fwait
cld
xlat
mov
jo
cmp
push
dec
mov
xchg
ja
push
jne
bound
les
push
jbe
xlat
xchg
push
sub
mov
jecxz
cli
add
cmpsl
pop
orb
xor
fs
lret
and
mov
xchg
jae
in
and
in
push
cmpb
inc
daa
push
or
dec
fwait
jb
subb
push
add
mov
in
ss
dec
pop
hlt
push
adc
push
jmp
and
cmp
test
xchg
xchg
adc
pop
out
ja
je
sub
fucomp
rcr
stos
mov
cltd
int
cltd
test
in
pop
xor
ffreep
nop
xchg
notb
aas
or
add
mov
clc
cwtl
fnclex
data16
dec
inc
movsb
jp
push
aaa
fmulp
out
in
stos
add
adc
sub
mov
sub
scas
ret
xchg
sbb
test
insb
mov
pop
repnz
mov
mov
enter
daa
scas
and
movl
pop
sahf
pusha
dec
subb
loopne
jl
xchg
sub
xchg
inc
mov
mov
int3
fiadds
dec
cmpsl
inc
sub
inc
sbb
fisubrs
cmp
loope
cmp
pop
cmp
scas
cmp
lods
cmp
jg
or
int
mov
scas
pop
jne
adc
xchg
fbstp
jns
cmc
adc
cmp
mov
mov
cmpsb
push
jne
je
push
or
orl
sbb
inc
jl
lds
in
les
popa
sarb
lock
fcoml
mov
and
jae
cwtl
jne
adc
mov
jno
cmp
adc
or
hlt
lods
stc
xchg
mov
mov
in
push
loopne
dec
gs
ficoms
jno
xchg
inc
int
cmp
jg
test
jmp
test
sbb
clc
inc
jno
jb
pushf
mov
add
mov
fisubrs
movsl
je
shl
xchg
les
dec
imul
insb
in
xchg
mov
mov
iret
int
int3
repz
cmc
cmpsl
cmp
lahf
mov
out
add
cmpsb
mov
sbbb
adc
or
in
les
xor
xchg
outsl
xchg
aad
daa
insb
rclb
cwtl
imul
addr16
add
xor
data16
xor
gs
push
xor
dec
push
mov
imul
xlat
lret
loopne
add
fiaddl
cld
mov
es
lahf
cwtl
int3
icebp
pop
mov
lret
call
addr16
fldcw
out
stos
loope
in
inc
or
fisttps
shrl
decb
sbb
xchg
adc
rcl
cmp
dec
jnp
cwtl
mov
pop
cwtl
loopne
or
shll
lods
xchg
outsl
dec
mov
sar
mov
bound
mov
fdivrl
ret
out
or
scas
jp
add
in
sbb
dec
mov
cs
les
jle
sarb
add
and
gs
test
jle
cmc
push
push
ret
lret
and
cmpsb
iret
cmp
cmp
cmp
inc
cld
popa
sub
rcll
sub
out
mov
dec
fs
in
shrb
cwtl
popa
mov
jno
sahf
test
xchg
and
popa
insl
adc
xchg
lahf
repnz
lods
es
mov
lret
ja
insl
adc
mov
repnz
addr16
ljmp
jle
in
jae
fs
shrb
mov
shlb
sbb
mov
pop
xchg
fsubs
ds
repnz
inc
stc
lea
jle
mov
cld
out
andb
inc
icebp
ja
fistpl
mov
xor
mul
cmc
cltd
fistl
or
movsl
enter
data16
push
sti
cmpl
dec
mov
stc
push
out
push
les
mov
lcall
daa
dec
shll
mov
sub
sbb
jo
jne
jno
dec
pop
mov
mov
mov
push
inc
test
sti
pusha
jb
mov
mov
out
aas
and
hlt
cltd
ljmp
inc
pop
into
jo
mov
fisttps
popa
xor
outsl
mov
jg
andl
sbb
insb
mov
push
mov
pop
jg
or
push
adc
shlb
xor
data16
stos
jae
hlt
insl
lahf
jg
mov
add
cmc
test
repnz
les
jne
jmp
mov
xchg
mov
cwtl
pushl
pop
jl
hlt
adc
addb
inc
mov
push
adc
lret
imul
aad
cmp
mov
pushf
adc
hlt
lret
int3
orl
iret
pop
les
jo
push
pop
pop
mov
into
jp,pn
sub
lods
fidivrs
jo
imul
mov
xchg
sbb
mov
lods
outsl
add
jp
mov
pop
iret
add
mov
aad
jp
ljmp
sti
or
mov
cltd
xchg
lahf
lods
pushf
mov
adc
mov
jae
push
push
fbstp
sbb
rorl
xchg
xor
mov
out
dec
fsubl
adc
inc
push
dec
psubd
dec
in
xchg
lods
nop
sbb
test
cmpsl
push
add
mov
mov
xchg
cmc
sbb
mov
iret
mov
je
mov
fsts
inc
push
std
mov
push
adc
aam
pusha
pop
mov
out
mov
lret
fisttpll
xor
addr16
push
inc
das
outsb
mov
pop
xchg
xor
icebp
out
loopne
mov
xor
into
mov
fidivl
pusha
fdivrp
jl
push
outsb
jg
inc
andb
pusha
fs
push
cmpb
and
shll
outsl
rcll
arpl
fwait
shr
fiadds
enter
lcall
fnstcw
jne
fstpl
testl
xchg
or
outsb
xorl
imul
rcrl
andl
gs
pop
push
aas
xchg
gs
aaa
xor
cmp
inc
scas
jne
xchg
adc
adc
jo
lods
pop
inc
divb
enter
push
lcall
inc
ret
mov
mov
pop
div
pop
mov
cltd
inc
js
pop
inc
pop
into
inc
test
popf
das
nop
ss
adc
lret
xor
dec
inc
bound
or
in
pop
js
and
and
adc
enter
adc
mov
push
jns
cmp
jne
loop
mov
mov
mov
mov
and
mov
xchg
fistpll
dec
lcall
lea
cmc
pop
loop
and
aam
sub
insl
xor
xor
mov
rcrl
mov
cmp
out
jnp
out
scas
inc
jo
lds
mov
negb
mov
lods
insb
out
cmp
insl
movsb
repnz
add
push
push
xchg
popl
sub
xorl
jge
cmpsl
inc
push
bound
inc
cld
int3
pop
les
inc
sub
cmpsb
pop
xchg
or
push
sub
jecxz
adc
sbb
mov
dec
jae
mov
fadds
xchg
test
mov
push
mov
cmc
fdivs
clc
in
int
rolb
es
fidivs
stos
mov
mov
aaa
push
xor
pop
pushf
cmpl
mov
dec
dec
xchg
or
jmp
in
xchg
mov
xor
loopne
outsb
mov
mov
pop
mov
inc
jge
es
jo
mov
loopne
sub
mov
mov
inc
lea
out
cmp
lea
out
push
jle
xor
mov
popa
rorl
sub
sarb
lahf
fcmovne
xor
das
in
mov
mov
or
push
cmp
outsb
mov
adc
jmp
xchg
or
adc
inc
add
aam
aaa
sub
adcb
push
jo
lods
lds
test
js
icebp
adc
lcall
cld
sub
enter
jge
jb
jle
lcall
push
mov
bound
xchg
push
sub
fidivs
jl
pop
call
bound
arpl
xchg
pop
pop
jg
js
ss
movsb
xchg
pop
add
pop
or
adc
dec
add
mov
add
ds
js
out
cmp
jns
repz
cmp
mov
pop
insl
or
xor
pusha
mov
jle
fwait
aad
xor
lods
sbb
mov
cmc
js
mov
xchg
pop
daa
scas
pop
out
pop
addr16
or
pop
sub
sub
inc
hlt
pusha
mull
mov
daa
inc
mov
enter
jp
jmp
lret
fidivrs
mov
xor
std
ljmp
pop
pop
push
imulb
cmp
les
pushf
inc
mov
dec
gs
mov
xor
xchg
mov
xor
scas
jne
push
mov
in
ja
mov
lods
cmp
push
out
stos
adc
xor
cmp
in
lock
mov
movsb
or
pushf
gs
in
push
test
js
adc
nop
mov
add
movsb
fcompl
mov
out
imul
lcall
popa
xor
ja
scas
out
mov
cmp
in
and
sbb
into
orb
push
inc
adc
int3
clc
outsl
add
popf
aam
lock
xchg
popf
xor
xchg
subb
mov
rolb
push
nop
xor
pop
mov
aad
rorb
cwtl
das
out
lods
cmp
adc
sub
into
push
add
fs
out
or
insl
dec
hlt
fdivrs
cmpsb
cmpsb
aam
fbstp
cli
push
and
fadd
lret
add
test
sbb
lock
pushf
bound
pop
nop
pop
arpl
sbb
add
adcl
mov
push
xor
push
sbb
dec
in
clc
dec
xor
xchg
or
int3
mov
testb
mov
cltd
mov
pop
in
ffreep
in
out
lret
icebp
pop
in
mov
push
aaa
push
mov
sbb
gs
cli
call
sar
adc
cmp
rorl
jle
enter
inc
jg
iret
dec
mov
add
fst
lahf
adc
loop
outsb
and
stos
cmpsb
test
shr
aas
ja
mov
push
or
imul
pop
ja
mov
repz
int3
bound
scas
sarl
into
sahf
pop
ljmp
push
jae
cli
mov
mov
out
inc
mov
in
testb
ret
mov
loopne
fwait
pusha
xor
lret
mov
mov
shlb
je
test
cwtl
popa
loop
cwtl
pop
cmpsl
outsl
out
inc
or
test
call
adc
aam
repz
sbbl
mov
sbb
jbe,pn
push
sbb
jns
jge
daa
fwait
or
out
push
ds
test
mov
js
xchg
pop
pop
fcoml
mov
lock
xchg
cmc
jecxz
aas
andl
mov
cmpsb
enter
push
xbegin
and
fcmovb
test
ds
addr16
sub
enter
or
lahf
inc
rep
daa
push
or
cli
mov
add
mov
cmpsb
xchg
test
orl
lods
add
pop
jecxz
sbb
cmp
cmp
mov
or
inc
sbb
cmp
inc
cmp
in
lahf
int
shrl
fstps
stos
rolb
insb
jns
sbb
or
cmp
push
mov
loopne
mov
xor
fwait
insb
cmp
cmp
pop
xchg
sub
cmp
add
sbb
pop
inc
xor
aam
lret
mov
xor
xchg
std
sbb
xchg
jnp
mov
rcr
test
jae
incb
idivl
popa
jne
nop
and
inc
jnp
test
das
sbb
mov
in
aaa
sbb
cltd
scas
adc
dec
int3
jne
loopne
aad
inc
mov
arpl
rorl
jmp
push
or
pop
xchg
pop
lods
mov
cmp
add
push
push
bound
sub
ret
loope
flds
jo
sbb
xlat
and
cld
mov
lds
pop
push
outsb
push
sub
mov
pop
and
sub
and
cmp
nop
pop
insb
inc
mov
stos
pop
xorl
cmp
or
add
es
xchg
mov
or
into
xchg
popf
ds
jnp
xchg
inc
inc
push
das
add
imul
xchg
mov
sbb
cmp
ja
mov
pop
pop
sub
or
aaa
xchg
out
rcrl
nop
rclb
je
cmp
test
jge
imul
jmp
sti
cld
add
test
sahf
adc
test
xor
mov
in
movsb
mov
ffreep
stos
popf
push
addr16
jp
inc
cmp
nop
push
imul
pop
shrb
cmp
mov
inc
sub
push
mov
pop
sub
inc
rcr
push
inc
cltd
in
gs
inc
jl
rcr
repz
fistl
sbb
fdecstp
adc
adc
pop
or
push
mov
xor
sbb
xor
pusha
lea
and
xor
icebp
popf
sbbl
sbb
mov
mov
mov
sbb
xchg
cwtl
rcr
and
push
pop
or
sahf
rorl
into
fwait
xor
imul
xor
sub
cmp
adc
jmp
das
out
inc
out
add
xchg
out
repz
and
mov
sbb
jmp
lahf
push
sbb
adc
and
inc
out
adc
xchg
add
test
adc
push
mov
test
pop
cltd
std
push
mov
jg
je
fidivl
outsb
sbbl
mov
lea
les
dec
push
idivb
sub
mov
cmp
inc
enter
pop
cmp
es
cmp
xchg
mov
and
clc
mov
xor
adcl
pop
movsb
in
sti
popf
nop
jnp
cmc
mov
mov
push
movsl
sub
mov
test
lret
cmp
inc
xor
outsb
xorl
test
cmp
test
sub
rclb
xor
int3
in
push
inc
push
loopne
insb
aaa
shll
xorl
imul
cmc
sbb
xchg
and
in
rcll
ror
push
sbb
roll
fcoml
mov
popf
cmpb
out
or
mov
int
lcall
and
aaa
adc
xchg
jns
xor
inc
in
xchg
cmp
push
or
fbld
dec
lret
jmp
jns
dec
in
lahf
insl
mov
or
mov
fisttps
xor
cmc
dec
lahf
cmp
add
and
xchg
arpl
push
in
adc
mov
inc
mov
xor
sarb
ffreep
cmp
mov
adc
fildll
stos
pop
xorl
jb
dec
aas
rcrl
mov
lret
aam
mov
mov
push
mov
and
cmpsb
add
dec
jns
loope
insb
fistl
out
dec
sub
data16
fimuls
and
mov
aaa
dec
jo
jecxz
xchg
pop
mov
xchg
int3
and
inc
adc
es
test
push
fsubrs
mov
fldpi
out
dec
xchg
in
sbb
in
pop
insl
mov
lret
mov
pusha
test
dec
mov
dec
aam
mov
mov
mov
sbb
stc
imul
fsts
punpckldq
xor
ss
fldcw
cltd
stc
test
lret
mov
sbb
pop
daa
jp
mov
shr
notb
inc
insb
xchg
ss
mov
pop
mov
adc
ss
mov
adcl
push
cmp
das
call
pop
fldt
sbb
mov
cmp
subb
cld
pop
and
push
jno
or
test
ret
fstpl
and
sub
call
cs
lcall
popf
cmc
xor
push
movsb
adc
pop
cbtw
adc
dec
add
sbb
sub
pop
adc
and
jae
adc
lahf
xchg
popa
std
bnd
jbe
push
mov
js
shlb
ficoml
inc
popa
test
mov
push
pop
scas
pop
adc
dec
sub
or
jecxz
je
xchg
rclb
push
sub
mov
cmp
cmp
cli
cli
xchg
mov
xchg
xor
push
sbb
dec
je
mov
mov
jb
add
movb
fists
push
dec
xchg
xor
adc
rcrl
mov
xchg
mov
xchg
cli
dec
sbb
lea
sub
fwait
mov
xor
popa
fdivs
lret
andb
mov
mov
mov
ljmp
aad
das
nop
jbe
mov
ja
rclb
mov
mov
cmc
jle
or
jne
or
xor
in
in
popf
sbb
stos
aam
std
pop
mov
jno
ss
xor
cmc
rolb
mov
lds
ljmp
in
pop
ljmp
xlat
xchg
arpl
fsts
jae
fidivs
pop
hlt
loopne
add
inc
jo
roll
out
dec
ds
into
flds
scas
jle
push
pop
mov
sub
push
jge
mov
cs
inc
sub
xchg
pop
nop
and
fnstenv
lahf
fcomp
fsubs
jmp
lahf
stos
mov
sahf
dec
int
fcompl
imul
cmp
xor
into
out
pop
mov
pop
lret
inc
ficomps
int
loopne
adc
push
ljmp
cmp
mov
or
dec
inc
gs
and
push
fldcw
das
inc
adc
stos
sti
mov
mov
sub
arpl
test
push
cmpsl
inc
cmp
jle
ljmp
inc
jae
add
mov
pop
adc
rolb
dec
lahf
sub
lea
and
lods
enter
in
fsts
shrl
incl
sub
lea
push
dec
xchg
shrb
mov
mov
jno
mul
cltd
jmp
push
pop
shrl
sbb
fldenv
mov
imul
mov
imul
mov
sub
dec
dec
outsb
ret
push
cmp
mov
ret
or
or
int
jl
pop
mov
sbb
and
push
inc
pop
mov
pop
mov
xor
cltd
push
jge,pn
scas
dec
loope
lds
jmp
add
or
int3
cmp
test
xor
mov
sarb
scas
adc
xchg
lods
dec
pusha
testl
pop
push
xchg
ljmp
fs
cmc
leave
mov
in
push
pop
repnz
cwtl
lret
test
adc
aad
pushf
test
adc
loop
testb
mov
fucomip
lea
push
push
adc
aam
in
dec
mov
xor
xlat
inc
scas
jo
test
andb
xchg
fiaddl
pop
mov
sub
add
lods
xchg
and
inc
xchg
out
out
adc
int3
xchg
dec
cld
inc
push
lcall
inc
and
or
popa
lods
mov
xor
mov
pushf
inc
out
les
lahf
xor
outsb
cwtl
decl
adc
fs
ds
xchg
cli
test
dec
push
mov
cmp
daa
movsl
push
xchg
pop
add
adc
push
xlat
fdivrp
cld
xchg
xor
mov
xchg
adc
dec
push
pusha
cmpsb
ja
xchg
ret
dec
popa
cmpsl
inc
test
loop
xlat
rcr
lcall
xchg
mov
fnsave
or
xor
push
mov
add
cltd
roll
icebp
rcl
outsb
mov
lret
dec
ror
push
aam
sub
push
bound
fimull
out
test
push
scas
add
push
dec
mov
and
int
aad
sub
push
in
fs
sub
test
out
pop
sti
xchg
gs
mov
fbld
inc
push
mov
test
mov
push
lret
cltd
mov
jae
daa
push
and
adc
fsubl
jnp
pushf
test
js
push
rorl
popf
dec
jns
jle
or
pop
dec
sub
push
les
jg
test
out
mov
scas
negl
filds
insl
insl
scas
pop
mov
fimull
mov
rorl
push
jno
push
dec
sbb
ss
fimuls
cld
lcall
mov
push
gs
dec
dec
ror
outsl
sub
xchg
jp
push
in
add
arpl
mov
push
xor
push
imul
jl
dec
add
xlat
dec
fisubrl
and
mov
pop
aad
dec
cld
sahf
cld
scas
lods
jae
mov
pop
sbb
mov
dec
ljmpw
pop
jmp
es
aad
pop
lea
inc
push
inc
jb
pmullw
adc
adc
sahf
add
incb
adc
adc
xor
mov
fisubrl
mov
aas
pop
inc
lcall
hlt
fmull
and
lcall
add
cwtl
out
cmp
stos
lods
mov
xchg
cwtl
push
and
rorb
leave
addl
xchg
jb
icebp
cs
inc
inc
scas
sbb
cmp
or
arpl
pop
scas
adcl
mov
daa
and
and
dec
mov
std
xorb
adc
test
sbb
daa
xchg
insl
aam
jb
mov
cmc
sbb
stc
test
jecxz
adc
int
jae
test
sbb
enter
mov
in
inc
cmp
cmp
mov
lret
dec
adc
sub
adc
push
pop
dec
arpl
aam
lcall
in
outsl
mov
test
push
xchg
inc
pmaddwd
movsb
mov
in
push
add
cwtl
xor
sbb
mov
cmp
or
aam
nop
and
jg
call
pop
push
insl
mov
scas
mov
fisttps
xor
out
xchg
push
xchg
loope
incl
and
mov
scas
movsl
and
inc
push
or
sub
mov
inc
jns
xor
daa
jo
adc
insb
mov
mov
popf
jno
out
fsubl
fwait
clc
insw
out
hlt
xor
loopne
pop
jno
xorb
pop
jnp
push
lcall
cmp
dec
sahf
push
je
fs
jne
sbb
pushf
aaa
mov
jno
lret
pusha
mov
adc
mov
test
adc
ds
lret
mov
mov
or
lds
scas
sbb
imul
pop
sub
fidivrs
sbb
icebp
int3
xchg
sub
jmp
jno
lea
inc
adc
jle
insb
lods
push
xchg
cmp
or
in
pop
mov
ret
mov
fwait
mov
adc
and
jmp
jno
push
dec
cmc
scas
loop
loopne
outsb
cmc
push
fsts
mov
call
and
enter
repnz
push
fsubrl
adc
or
lea
cmp
sarl
dec
xor
outsl
pop
scas
inc
push
inc
cs
out
es
or
fnstsw
ss
push
mov
pop
ds
adc
bound
pop
cmp
or
add
xchg
cmp
pop
cmp
test
cmp
cs
repz
fstl
arpl
dec
inc
repz
add
lret
mov
jg
jns
cmp
inc
pop
add
lret
data16
rolb
pop
sahf
dec
push
idiv
inc
insl
fstpl
sarb
push
push
jle
mov
fwait
sahf
jb
xor
sahf
jmp
cmp
mov
jmp
jbe
out
dec
dec
pop
xor
dec
cmc
loop
loopne
jle
and
jmp
movsb
das
fnsave
in
rorb
shl
mov
mov
sub
push
popw
push
je
fwait
stos
icebp
xor
mov
adc
inc
imul
nop
movsb
in
inc
aaa
sub
loop
fs
mov
int
push
jns
cs
inc
insb
out
scas
mov
pop
add
dec
pop
add
out
ds
xor
mov
or
fwait
push
xor
sbb
xor
jge
subl
push
sbb
mov
das
ret
pushf
pushf
iret
shlb
jmp
sbb
mov
and
xchg
iret
mov
scas
push
enter
jp
in
ds
shll
jge
ja
inc
sti
stc
cmpb
mov
jle,pt
das
xchg
pop
dec
jg
in
repz
popf
movsl
sub
xorb
sub
jmp
xchg
cmp
xchg
adc
rclb
add
andb
inc
pop
xor
je
adc
addr16
pop
addr16
fdivs
rorl
xor
cmpsb
call
push
fbstp
mov
xor
or
rorl
mov
sub
pop
shll
fcoml
jb
lds
clc
push
mov
jne
pusha
inc
or
sbb
stos
mov
jmp
jmp
cmp
ja
mov
aas
sti
mov
or
and
mov
pusha
les
mov
movsl
pop
xchg
push
jne
xchg
pop
pop
icebp
mov
mov
pop
mov
sbb
pop
mov
test
add
cvtdq2ps
xor
mov
dec
aaa
outsb
shll
push
adc
jne
xchg
cld
in
aas
jns
mov
hlt
push
fcmovu
inc
insl
fisubrs
rcr
aaa
push
xchg
fmuls
sub
or
jg
sbb
in
test
cmpb
dec
pop
out
xchg
movsl
movq
rol
sti
dec
int3
addr16
fisttpll
fld1
or
data16
nop
fiadds
jo
int3
mov
pushf
aad
mov
mov
mov
mov
fimuls
imull
mov
inc
mov
mov
cli
dec
repnz
pop
mov
out
fs
addr16
dec
or
rcll
pop
sbb
adc
pop
fisttpll
adc
iret
adc
lods
sub
xchg
jb
and
mov
out
inc
dec
cmpsb
jl
je
jp
fs
lcall
repnz
xchg
jl
in
stos
shrl
push
arpl
lret
pop
les
add
das
popa
ljmp
imul
push
fs
or
int
fimull
fsubrs
repnz
jo
xor
jp
mov
mov
in
sti
das
sbb
adc
cmpsb
sub
cmp
imul
movsl
ja
mov
dec
cmpsb
cld
leave
roll
cmp
repz
pop
shrl
push
inc
aam
testl
and
fadds
lods
lods
add
aad
xor
push
inc
jno
add
dec
pop
xchg
pop
lcall
add
popa
popa
xor
enter
test
mov
int
cmp
arpl
lods
or
push
popa
dec
mov
mov
dec
insb
clc
outsb
jns
out
cmp
xlat
insb
dec
dec
cs
mov
or
decb
and
js
lea
sbb
jne
sbbl
test
mov
sbb
out
xor
push
sahf
xchg
xor
cli
dec
popf
std
sbb
test
sub
cmpsl
mov
add
cmp
shr
or
lret
pop
hlt
dec
scas
arpl
xchg
mov
hlt
scas
adc
xchg
sahf
jle
and
add
xchg
push
inc
ds
xor
sbb
mov
filds
adc
ja
ljmp
orb
mov
xchg
pop
dec
mov
aas
xchg
jbe
lods
and
lods
and
sub
mov
mov
test
cmp
lods
push
and
and
adc
push
pop
xor
jae
sub
jg
imul
lahf
cltd
mov
mov
int
sahf
ljmp
or
dec
ret
lcall
mov
adc
popa
movsl
mov
push
out
xchg
pushf
shl
or
ret
repz
sub
mov
ret
and
or
mov
in
pop
xor
stc
dec
add
inc
and
cmp
into
xor
or
stos
popf
popf
cld
ljmp
outsl
mull
inc
call
pop
cs
cmpsl
in
sbb
xchg
lea
jae
movsl
cwtl
jmp
imul
add
call
cmpsb
pop
pop
andl
lock
jbe
xorb
and
mov
xorb
stc
and
inc
xchg
lahf
dec
sti
xchg
rolb
lods
bound
scas
adc
cwtl
stos
pop
mov
flds
xchg
pop
push
je
jl
sub
rolb
sub
push
push
push
ret
lret
or
sbb
dec
mov
out
and
subl
mov
jnp
movsb
inc
mov
pop
inc
fcmovu
rcll
xchg
into
testl
sbb
rcrl
push
cmp
jecxz
jge
xchg
imul
sbb
jnp
add
mov
fnsave
jbe
lock
mov
pop
mov
cld
fmuls
and
xchg
nop
test
inc
shlb
dec
mov
bound
jecxz
cmp
xor
ret
stos
push
stc
cmp
loope
pop
xchg
dec
push
fwait
lea
mov
jo
mov
xchg
ss
push
fdivs
fstpt
xor
sbb
lods
adc
imul
aaa
adc
mov
or
lea
mov
mull
xor
jg
push
push
pusha
mov
mov
adc
ret
add
jecxz
imulb
jnp
jmp
xor
pop
outsl
add
js
jnp
inc
mov
js
in
adc
inc
cmc
mov
mov
popf
add
hlt
lret
jbe
and
adcl
mov
cmp
mov
xlat
lret
pop
mov
cmpsb
ljmp
mov
push
lahf
and
push
mov
stc
sub
inc
add
push
subb
pop
cmp
xchg
sub
push
aas
nop
pop
adc
dec
dec
dec
jb
pop
mov
jp
lock
or
adc
pop
movsb
xchg
loope
sub
push
insb
cmp
mov
cmp
dec
cmp
cli
mov
dec
enter
inc
push
repnz
test
ja
xor
push
and
push
mov
pop
pop
push
addb
cld
pop
cld
mov
shrl
mov
stos
loopne
xchg
int3
sbb
loopne
xchg
jp
or
sbb
call
in
sbb
jnp
lcall
inc
movsl
sub
clc
test
aaa
pop
ret
idivl
pop
mov
mov
dec
xor
and
mov
pop
dec
add
mov
ja
lods
dec
fnsave
cltd
fimull
adc
aad
loopne
pop
adc
xor
cli
add
sbb
sti
icebp
pop
pop
fidivs
push
iret
fistpl
fadd
xchg
mov
xor
mov
xor
and
mov
adcl
leave
in
out
lret
out
jp
popa
stos
add
aam
mov
shll
ret
sub
or
dec
loop
jg
xor
or
xchg
dec
push
data16
test
push
pop
pusha
dec
aam
addb
fwait
jmp
add
cmp
cmp
iret
cmc
imul
ficompl
movsl
inc
xchg
scas
in
in
xchg
mov
and
in
mov
jmp
repnz
xor
mov
enter
or
mov
mov
and
out
xchg
adc
and
jne
cmp
or
push
mov
mov
jg
imul
iret
scas
and
dec
jae
rorl
jg
inc
sub
jnp
add
das
inc
popf
mov
sbb
jl
mov
mov
mov
push
nop
mov
scas
push
push
stos
adc
in
mov
clc
repnz
fldt
inc
ret
push
jecxz
add
div
ret
out
adc
xchg
sub
fstl
stos
jg
repz
mov
inc
imul
jo
jo
lret
jg
imul
mov
or
outsl
push
xchg
cmp
mov
xorb
movl
dec
cmp
je
les
into
mov
sahf
ja
cmp
mov
add
mov
fs
jno
push
js
mov
xchg
and
mov
adc
fwait
insb
rcr
in
inc
jb
and
lahf
or
jmp
xchg
ljmp
lret
add
or
lahf
add
lea
pop
adc
jbe
lahf
jmp
cmp
jl
enter
jmp
jl
mov
jge
cmc
daa
fstl
sub
bound
mov
aad
int
jnp
stc
lods
sahf
call
sub
jae
sbbl
lock
lret
repz
inc
fldl
clc
clc
fiadds
xor
push
adc
push
push
clc
jecxz
pop
rcl
loop
bound
clc
pop
jmp
and
imul
pop
cs
movsl
xchg
push
dec
addl
inc
pop
cmp
or
scas
dec
ljmp
clc
test
or
test
dec
into
je
jl
sti
pop
dec
lahf
cmp
push
insb
dec
ret
lcall
sub
pop
clts
sbb
movsb
bound
mov
add
xor
cmp
nop
lock
scas
pop
or
pop
roll
dec
imul
into
ds
sbb
push
dec
aas
pop
jne
push
je
and
jge
mov
cli
jl
pop
adc
mov
inc
dec
rcrl
pop
mov
and
adc
mov
fcomps
mov
sti
fwait
mov
jge
pop
adc
lret
cmpsl
test
mov
dec
fsubl
nop
dec
loopne
xlat
daa
mov
into
xor
cmpsb
dec
push
sbb
pop
arpl
or
imul
cmpsl
mov
mov
sbbl
push
cmp
stos
sub
mov
mov
cld
mov
out
insb
rorb
mov
dec
test
mov
adc
shr
sub
mov
sahf
loop
inc
mov
ret
std
into
ds
jl
hlt
flds
inc
insl
or
pusha
add
push
dec
data16
cli
jne
pushf
rolb
popa
rcrb
pop
xor
cmp
gs
pop
cmc
pop
pop
les
xchg
test
dec
fcmovu
outsb
aas
cmc
enter
cmp
mov
and
lds
or
pusha
jg
adcl
push
xor
mov
sbb
mov
sbb
add
fistpl
scas
icebp
add
sti
jns
dec
stc
imul
ret
clc
sub
xchg
cmp
inc
stc
xchg
orb
sub
ljmp
lods
ret
and
inc
and
aad
inc
shlb
push
arpl
push
pop
out
gs
cmc
dec
cmp
sbb
jmp
mov
mov
outsl
sbb
fldl
mov
xchg
call
cli
pop
or
aas
push
push
adc
orl
scas
aad
movsb
nop
out
jo
out
les
or
adc
cs
xchg
pop
xchg
out
lret
cld
loope
lcall
jle
add
into
sarb
xlat
mov
mov
cli
daa
data16
cwtl
push
push
jp
pop
popf
insb
mov
or
mov
loopne
mov
lods
pop
out
test
add
sub
outsl
shlb
insl
in
frstor
jnp
rol
cltd
into
cmc
push
jg
add
movlps
adc
xchg
shl
jg
mov
xchg
mov
nop
xchg
mov
daa
shll
mov
xlat
adc
addr16
sub
push
jmp
iret
pop
add
ljmp
pop
xchg
xchg
xchg
inc
dec
and
lds
jbe
dec
rcll
in
mov
gs
mov
lods
or
adc
xor
mov
icebp
cltd
add
pop
int
push
movsl
and
lret
iret
sub
pusha
nop
pop
and
adc
pop
ss
inc
and
scas
adc
pop
adc
adc
scas
sbb
mov
out
sbb
add
mov
ja
hlt
mov
repnz
jge
outsl
sub
loope
js
stos
dec
sub
inc
scas
xchg
scas
sbb
add
cmp
pop
inc
adc
push
sub
leave
fs
push
jmp
pop
addr16
pop
leave
lock
pop
cld
inc
in
push
test
dec
test
test
enter
sti
dec
adc
ret
fcmovbe
mov
loop
outsb
pop
dec
daa
adc
or
arpl
sti
cmp
es
into
sub
push
mov
aaa
mov
shlb
jp
sub
dec
out
sarb
bswap
mov
sub
mov
stc
push
mov
sahf
ss
fbstp
scas
gs
sbb
push
imul
cmpsl
inc
fwait
inc
subl
push
leave
das
loopne
mov
scas
imul
pop
subl
out
loope
cmc
add
lock
mov
xchg
iret
int
int
xor
xchg
movsb
add
cmp
scas
or
add
in
in
mov
sti
lea
pop
ret
mov
lcall
sub
popa
test
sbb
mov
push
jae
jecxz
outsb
sti
mov
xchg
je
into
test
rcrl
popf
sub
gs
lock
pop
cli
ror
loop
pop
lahf
add
sub
or
xor
shlb
dec
fmull
lret
fnstcw
in
int3
jo
ds
dec
pop
leave
cmp
adc
xchg
and
xor
popa
adc
push
std
mov
enter
dec
and
addb
pusha
push
out
add
in
mov
dec
cmc
pop
mov
mov
cli
xorl
movb
xlat
xor
push
lods
mov
xchg
mov
adc
mov
push
icebp
outsb
inc
bound
push
add
fimuls
in
and
mov
aaa
jo
pop
dec
fcmovnbe
cmp
cmp
ljmp
daa
adc
jmp
fsubrs
mov
mov
iret
andb
pop
mov
fidivrs
push
add
leave
shrb
insl
pop
mov
jb
int
xchg
std
jge
push
fistpl
cli
mov
or
pop
jecxz
pop
les
cmp
jle
xor
sar
jno
dec
sbb
sbb
jmp
dec
mov
fimull
cli
pop
movlps
push
bound
or
enter
push
repnz
cmpsl
or
inc
inc
add
aaa
vpsubsb
cmp
mov
push
sub
stc
dec
outsb
inc
push
mov
jge
stos
pop
dec
ret
push
arpl
adc
mov
ret
nop
lret
adc
and
sub
dec
std
test
xchg
sbb
or
iret
sarl
jl
ja
xor
imul
mov
xchg
and
sbb
xchg
leave
cli
pusha
sbb
js
xchg
outsl
repz
test
sbb
sub
and
stos
add
aas
jge
xchg
into
adc
outsb
cmp
dec
in
loopne
or
dec
jns
scas
mov
aad
sbb
and
pop
aaa
jp
jmp
ss
cmp
xor
outsl
inc
pop
lret
pop
orb
cmpsb
jecxz
or
cli
nop
lret
mov
pushf
add
icebp
pop
hlt
daa
dec
icebp
nop
lods
mov
lret
add
xor
lahf
push
mov
inc
pop
jecxz
test
sbb
nop
rorl
lods
vpaddd
or
rolb
orb
xchg
or
cmc
aaa
xchg
rcll
aam
call
pop
dec
push
faddl
push
jb
sub
mov
mov
and
cmpsl
mov
in
lds
scas
aaa
fldt
or
lods
fcmovnb
ret
inc
rclb
lahf
jmp
mov
popa
call
adc
les
xor
aam
loopne
mov
pusha
into
ja
out
jbe
sbb
push
jecxz
fldt
xor
leave
add
push
xor
sub
inc
nop
and
or
es
ss
sub
scas
jmp
push
xor
sahf
pop
add
inc
dec
cmp
mov
mov
mul
cmp
xchg
ljmp
insb
push
hlt
int3
into
mov
loope
cmp
je
xchg
mov
js
das
cld
jl
js
jno
mov
pop
data16
push
je
in
mov
xor
scas
xor
inc
cwtl
pop
and
sbbl
mov
ds
mov
pusha
cmp
cld
test
stc
pop
lcall
mov
push
sbb
adc
cmp
xchg
jle
inc
dec
cltd
xlat
sub
sbb
testl
mov
mov
jecxz
int3
sbb
std
out
push
mov
pop
or
adc
testl
fbstp
shlb
fistpl
ss
in
sbb
push
sbb
test
jb
minps
ljmp
jne
sbb
addb
stc
fnsave
ljmp
or
mov
adc
jb
fsubrs
mov
mov
in
call
adc
mov
sahf
mov
hlt
sbb
jle
inc
jbe
jns
push
pusha
idivb
pop
jno
mov
push
jmp
outsl
movsb
dec
mov
jg
fdivrs
mov
aam
jmp
inc
cmp
rorl
sbb
push
loope
mov
outsl
pushf
lea
jg
ret
inc
adc
cmp
xchg
lea
jmp
orb
outsb
jno
inc
mov
mov
out
push
mov
mov
lds
out
rep
or
lret
addr16
je
lret
xor
rol
mov
lcall
popf
ret
and
adc
ja
cmc
or
int
cmp
lcall
or
repnz
in
add
cmp
dec
test
jg
push
je
aaa
or
dec
push
cmc
pop
push
xchg
xor
test
jp
xchg
inc
add
pop
xchg
jg
cmpsl
scas
pop
fldl
or
pop
adc
in
data16
mov
and
lret
cmp
push
xor
mov
mov
fwait
push
lahf
and
xchg
mov
test
jecxz
aaa
pop
test
stos
pop
and
push
cmp
sbb
mov
and
cmp
cmpsb
sar
stos
pushf
xchg
inc
dec
bnd
push
push
lock
push
adc
sub
dec
repnz
push
in
mov
hlt
ss
iret
cmp
testb
fnsave
push
dec
add
mov
jb
cmp
test
sub
fldl
int3
pop
in
cmpsl
cmp
ljmp
sub
sub
dec
push
loopne
sbb
sbb
mov
sub
inc
inc
inc
in
jne
sahf
faddl
sub
mov
jp
jo
mov
add
push
pop
stos
mov
xor
or
aam
pop
and
aas
xor
addr16
jne
jmp
dec
mov
int3
adc
push
cmp
loop
imul
out
test
mov
pop
popf
xchg
test
aad
pop
mov
jge
movsb
fstpl
ficomps
push
hlt
aaa
or
cmp
sbb
sub
or
sbb
push
movsl
mov
js
inc
mov
push
push
or
into
xchg
popf
push
cmpsb
loopne
adc
mov
sub
jb
inc
dec
push
sub
and
mov
push
sbb
stc
cmc
mov
iret
push
push
ja
xor
add
adc
outsb
int
and
mov
sub
rcrl
pop
cmp
mov
mov
push
shld
add
js
rcl
jp
movsl
sbb
pop
stos
sub
iret
cmp
add
push
xchg
rep
cmp
cmp
out
pop
or
int
int3
mov
cwtl
loopne
dec
les
es
xor
mov
add
xlat
and
xchg
dec
movsb
jle
js
bound
or
inc
out
xor
insl
stos
lcall
hlt
std
cmp
mov
inc
mov
fisubrl
inc
arpl
pop
ds
data16
mov
ficomps
xorl
push
xlat
cmpsb
out
sti
arpl
mov
sbb
in
mov
fdivs
push
mov
imul
xor
dec
adc
mov
adc
mov
ret
fcoms
push
cld
jmp
sbb
mov
int3
pop
mov
add
pop
jne
and
push
add
mov
pop
dec
pop
popa
dec
cwtl
pusha
xorb
ljmp
jg
dec
or
pop
lods
mov
xor
adc
jge
shlb
ljmp
inc
ljmp
in
or
lock
imul
ds
ds
mov
stos
sub
int3
shrb
pop
or
xchg
out
scas
rclb
pop
nop
rcrb
stos
cmpsl
mov
push
add
out
out
leave
subb
scas
outsl
add
lds
ja
and
lock
xchg
cmpsb
fstl
dec
hlt
pop
pop
movsl
popa
mov
xor
stos
jl
dec
ret
cmc
add
cltd
sbb
scas
repz
cmpsl
cmp
cs
stos
aad
mov
push
shr
out
add
mov
movl
mov
pushf
pop
sbb
das
jmp
jp
scas
pop
ljmp
sbb
push
jl
dec
mov
jno
cmpsb
jl
fcoms
dec
sub
fnop
dec
or
adc
fsubs
pop
adc
lods
mov
push
pop
aad
out
ds
lret
fcompl
movl
negb
imul
pop
call
or
adc
mov
lret
in
sbb
jmp
xor
dec
scas
dec
inc
push
insl
jp
popa
insl
stos
adc
test
mov
push
pop
iret
push
or
ja
jnp
or
jo
and
inc
popa
cmp
mov
ss
inc
inc
loope
int3
sbb
inc
jo
sbb
ja
pop
ljmp
cmc
fbstp
sbb
push
lcall
push
add
stc
pop
add
push
fsubl
push
pop
inc
xor
test
popa
das
inc
jp
xor
or
sub
or
cli
fldt
cmp
stos
clc
xor
hlt
std
aas
mov
mov
mov
adc
cmp
in
hlt
into
adc
sbb
dec
and
in
add
lods
repnz
enter
clc
imul
out
mov
inc
enter
stc
sbb
stos
scas
js
bound
mov
lahf
lods
adc
sarb
mov
les
and
test
insb
rcrl
fistps
in
sbb
enter
pusha
jne
rclb
lahf
sti
mov
xorb
loope
xchg
cmp
dec
cwtl
mov
xchg
ss
jge
pop
mov
sbb
pop
xor
and
xchg
sub
push
or
push
sub
push
aam
pop
out
out
out
das
aas
mov
xchg
cld
gs
add
xchg
mov
aas
dec
jno
dec
jne
fsubs
sub
insl
scas
rorl
mov
pop
jp
mov
test
dec
jecxz
out
xchg
in
mov
inc
aam
addr16
mov
add
xchg
fildl
mov
mov
movsb
lahf
pop
jge
push
cmp
mov
jae
repz
inc
gs
lods
cwtl
xor
sbb
sub
test
insl
sub
or
add
pushf
mov
mov
mov
cmpsb
repz
xchg
pop
cwtl
sub
mov
xorb
lea
xchg
das
mov
std
cmp
jp
test
dec
dec
test
sbb
or
aas
push
cmp
hlt
or
mov
sarb
loop
sub
add
int3
push
cmc
scas
sub
cmc
lods
ds
imull
lods
mov
imul
pop
aas
in
shll
sub
shlb
pop
jno
sahf
scas
xor
mov
push
popf
or
inc
lahf
inc
adc
cmp
daa
adc
daa
sbb
aad
out
add
cmp
add
test
sub
es
in
sbb
mov
ret
xchg
fidivs
fisttps
fwait
cmp
ret
or
mov
daa
inc
xor
or
sbb
jnp
int
pop
sti
inc
or
loopne
loopne
ds
imul
je
mov
iret
test
in
adc
aaa
fimull
fdivl
pop
je
sub
sbb
cmp
loope
ss
add
cmp
out
cwtl
adc
lea
fwait
std
jne
or
inc
and
cld
or
pop
inc
dec
aaa
loop
and
push
sbb
sbb
sub
cvtps2pi
int3
nop
add
sub
pushf
in
push
sbb
push
fdiv
xor
push
pusha
rcll
add
test
lahf
insb
push
cs
repz
loopne
xchg
cmpsl
out
jp
lret
lahf
jnp
cmc
popa
dec
jge
imul
mov
dec
inc
std
mov
iret
inc
and
mov
xchg
and
ss
notl
jmp
dec
lea
repnz
or
mull
or
rcr
in
or
test
ss
dec
mov
xchg
aas
jge
gs
sarb
sbbb
adc
or
jne
push
pop
mov
or
fistl
inc
loop
dec
cvtdq2ps
xchg
xlat
jnp
jne
sbb
neg
mov
stos
bound
adc
cmpsl
xor
popa
rorl
push
pop
sti
pop
add
dec
idivb
cmc
push
sub
cmp
mov
push
jno
in
lods
aas
adc
in
sub
sub
mov
aad
sub
pop
test
push
pop
jl
mov
or
dec
ret
rcrl
cmp
out
pusha
leave
and
fisubl
mov
sub
out
pop
es
dec
fsubs
rorb
and
lods
mov
dec
ret
ret
sbb
scas
xor
insb
dec
sbb
ds
dec
inc
fnstenv
mov
mov
andl
adc
movsl
repnz
scas
or
jae
pop
lds
add
in
mov
push
lret
fyl2x
movsl
pushf
imul
dec
push
push
push
and
int3
dec
outsb
inc
call
sbb
sbb
call
into
out
xor
mov
notb
aas
xlat
xor
mov
icebp
xchg
out
mov
xchg
sarl
mov
xchg
xchg
adc
sub
jns
loope
cmpsl
or
inc
mov
or
insl
xchg
cmp
mov
xor
or
jge
ljmp
add
jns
push
cmc
mov
or
jnp
or
xchg
push
inc
lret
repnz
xlat
jecxz
leave
aas
mov
cmpsl
aaa
clc
push
xchg
xor
std
push
ds
cld
in
dec
cmp
push
repz
mov
sbb
or
adc
inc
push
jnp
inc
loopne
mov
pop
fwait
xchg
lret
sbb
push
dec
cmp
sbb
pop
push
out
and
jle
rcr
push
or
sbb
jno
jb
in
inc
mov
ljmp
shlb
ss
test
loope
push
sub
rdtsc
cli
lds
push
jecxz
mov
jle
mov
inc
les
dec
test
pop
pop
cmp
popf
inc
add
add
sub
movsl
lock
imul
movsb
rclb
sub
mov
into
popf
push
adc
mov
xchg
pusha
insb
cmpsl
int
ljmp
jg
xchg
and
push
or
mov
mov
sbb
lret
aam
scas
iret
cmp
scas
mov
add
fdivp
adcb
cwtl
fisubs
loop
and
insl
cmpsb
cmp
int3
sub
test
xor
mov
out
mov
into
mov
out
jg
imul
repz
fcmovnbe
icebp
push
das
xor
inc
pushf
pop
xchg
pop
fcoml
dec
push
jle
sbb
sar
mov
inc
push
mov
xor
orl
int
add
dec
xchg
cmpsb
cmp
xchg
stos
push
mov
xchg
cmp
jbe
std
in
ljmp
dec
sub
lods
xchg
jp
cli
lea
push
dec
pop
sbb
out
dec
jne
xlat
pop
dec
imul
aad
jae
sbb
jb
mov
inc
xchg
lret
push
flds
xor
mov
imul
nop
cmp
mov
ret
fdivrs
test
sti
or
fdivl
add
call
insl
gs
mov
push
sbb
mov
shrb
mov
sbb
mov
push
cs
out
pop
ficoml
cli
dec
addr16
mov
inc
pop
adc
dec
out
xor
and
pop
sbb
cmc
jge
test
sub
sbb
cmp
test
subl
add
jmp
ret
pop
adc
sti
fprem
and
insl
scas
push
out
insl
nop
dec
adc
xor
sub
jmp
pop
rcll
cs
mov
clc
mov
rcll
dec
pop
mov
push
push
and
stos
adc
push
ljmp
pop
lea
mov
outsb
repnz
jmp
andl
loopne
pop
mov
divl
pop
dec
add
popf
xlat
aad
pop
push
xor
dec
mov
arpl
mov
leave
cs
call
andb
pop
jns
icebp
rclb
jle
ss
mov
gs
in
movsb
inc
mov
cwtl
cmp
adc
add
cmp
popf
cld
into
xor
sahf
xchg
int3
js
in
fldl
je
in
add
or
std
xchg
fcoms
pusha
adc
stc
stos
pop
cmpsl
sahf
imul
add
cli
xor
shll
pop
and
fdiv
mov
insb
int3
dec
sti
jge
cmp
xchg
xor
shr
mov
or
pop
push
dec
adc
and
popa
mov
pop
inc
lcall
dec
cltd
cmp
push
cmp
xchg
sbb
add
popa
cmp
insb
fdivr
inc
rcrl
shrl
and
iret
div
jns
push
pop
sbb
xlat
push
pusha
sbb
push
inc
cmpsl
std
ss
gs
sti
in
pop
mov
pop
imull
mov
mov
or
mov
adc
xor
nop
and
adc
in
sbb
lret
inc
adc
ret
mov
fwait
add
sbb
dec
arpl
dec
or
mov
out
pop
jno
je
adc
sub
adc
mov
xchg
sub
lods
push
cltd
push
cli
ds
jns
xchg
roll
adc
adc
das
fistpll
cvtps2pi
lcall
clc
mov
mov
into
psubusw
repnz
ds
add
add
lcall
test
enter
js
xchg
or
sub
sbb
adc
jecxz
gs
jge
fists
hlt
sub
dec
jecxz
mov
and
sahf
pop
cmp
and
pop
stos
cmp
in
loop,pn
mov
lods
mov
xchg
mov
std
mov
sarl
jne
mov
aaa
mov
mov
mov
xlat
lock
stos
push
testl
lods
inc
pop
pushf
adc
and
aaa
mov
xor
push
jmp
sub
in
lahf
mov
div
mov
sbb
insl
sti
lods
mov
sub
rorb
and
mov
les
push
lcall
fsubs
fnstcw
xchg
int
cmp
in
dec
and
mov
mov
push
int
repnz
leave
cmp
or
mov
mov
fldt
xorl
fldcw
jbe
xor
mov
push
cmpsl
add
fsubr
ljmp
aaa
pop
nop
dec
xlat
inc
mov
add
mov
insb
enter
popa
xchg
xchg
xor
popa
xor
subb
sbb
mov
pop
lcall
jl
mov
sti
jmp
mov
adc
push
push
mov
sub
cli
pop
std
and
inc
mov
mov
push
mov
push
rcll
test
mov
mov
mov
mov
xchg
inc
and
enter
jno
imul
dec
push
xchg
or
dec
xor
test
sub
jmp
push
iret
or
jno
mov
push
hlt
in
insl
sub
sub
imul
pop
mov
icebp
insb
fst
idivl
cmp
inc
sbb
sub
pop
xchg
sarl
inc
mov
sbb
ret
xchg
xchg
stos
mov
fdivs
sbb
fsubl
mov
fmull
rclb
sbb
add
dec
push
mov
pop
dec
cmp
sbb
shll
daa
push
or
bound
cmpsl
ret
stos
scas
add
mov
dec
xchg
dec
jl
insb
xchg
rcll
mov
or
jmp
mov
sbb
dec
add
repnz
mov
dec
cmp
test
or
jno
test
add
lock
push
xlat
loopne
js
pop
test
add
xor
rcrb
jg
cld
daa
xor
push
adc
push
pop
push
push
aas
xchg
sahf
cli
fmul
add
int
inc
dec
clc
pop
dec
sti
mov
adc
jg
sbb
mov
cmpsb
rol
xchg
pop
idivb
fiaddl
fmull
pop
push
lcall
dec
sbb
push
mov
sub
vpmacsdd
and
inc
ljmp
insb
les
mov
xchg
jne
test
iret
inc
incl
push
iret
inc
adc
jns
xchg
xor
scas
jno
lea
ss
xor
jae
movsb
repz
xchg
ljmp
in
in
outsb
xchg
jecxz
pushf
cmc
mull
mov
fldt
repnz
movsl
scas
aad
sub
inc
call
fidivs
inc
in
mov
xlat
cltd
cmp
inc
push
pushf
cmpb
pop
in
repz
jno
mov
add
das
ret
xor
addr16
push
inc
inc
mov
addl
pop
mov
add
in
sbb
xchg
jb
add
cs
in
aad
nop
pushf
xchg
mov
lock
pop
push
jb
mov
jne
mov
mov
dec
mov
repnz
lea
out
jbe
mov
push
popa
cmc
sub
ds
shrd
out
movsb
fwait
adc
push
inc
jbe
icebp
add
add
ljmp
sub
popa
inc
pop
xchg
mov
pop
cmp
jnp
inc
icebp
shr
xchg
sub
add
mov
inc
ss
lea
push
lahf
jmp
xlat
jo
lret
sub
or
push
dec
push
or
ret
insl
repz
outsl
ja
xor
fsubp
out
rorb
pop
dec
lahf
pop
pop
push
les
sahf
add
inc
jle
mov
sbb
and
mov
arpl
mov
or
shll
xor
xchg
movsl
pop
scas
xor
or
sub
stos
sbb
outsl
stos
fs
imul
cltd
mov
push
int
imul
jbe
jb
push
aas
out
and
mov
adc
imul
cltd
or
or
into
mov
cmc
sub
int
jecxz
cmpsb
or
fmuls
jmp
xor
or
sub
sbb
sarl
inc
icebp
loope
mov
add
mov
push
xor
and
pop
pop
scas
mov
push
in
or
sub
sbb
mov
psllw
pop
shl
loope
fstps
jl
sbb
jl
push
push
je
fld
scas
pop
add
or
mov
call
fs
inc
xchg
xor
mov
jo
mov
push
xchg
outsl
add
mov
or
xor
jge
iret
mov
jne
xchg
inc
pop
and
cmp
mov
cs
loop
mov
into
jle
pop
in
loope
xchg
repnz
mov
scas
insb
push
inc
repz
shlb
int3
scas
nop
xchg
mov
add
add
xchg
and
aam
xchg
repz
mov
xlat
adcb
mov
xor
adc
pop
jns
ss
rolb
mov
loop
mov
cli
lret
jmp
xor
ljmp
sub
sub
add
mov
cwtd
xchg
xlat
jo
mov
sub
push
jbe
out
daa
cmpsb
lret
sbb
jne
cmp
push
push
inc
jl
add
push
test
adc
mov
imul
jge
sbb
jmp
and
pop
mov
xchg
and
pop
inc
adcl
and
stos
dec
mov
lods
lcall
dec
pop
jo
adcl
in
lods
adc
cs
lds
dec
jmp
mov
add
pop
jmp
mov
or
jns
in
stos
mov
ret
or
push
xchg
lret
push
pop
mov
shr
mov
lret
stos
jmp
adc
mov
jno
dec
add
mov
js
xchg
jmp
inc
mov
sbb
xchg
cld
movsl
cwtl
adc
fdivrp
es
mov
add
and
mov
popa
daa
das
xlat
pop
xchg
and
fldcw
popf
sbb
dec
fcomi
sbb
cmp
ja
inc
add
cmp
xchg
mov
jae
sub
xor
sub
arpl
mov
mov
sub
push
and
cmp
dec
out
ss
scas
adc
sahf
sbb
push
xchg
inc
test
push
push
mov
les
les
inc
pop
cld
out
push
call
xor
les
bound
loopne
sub
aas
popf
dec
adc
mov
lret
push
adc
mov
mov
inc
sub
icebp
mov
cmp
call
out
icebp
sub
xor
in
in
push
pop
mov
pop
sbb
adc
mov
cwtl
pop
iret
adc
lcall
or
lret
das
push
mov
in
sbb
scas
xchg
adc
pop
jnp,pt
fwait
arpl
add
cmp
out
hlt
xchg
mov
insb
sub
push
add
pop
sub
movsb
out
xlat
dec
xor
into
pop
mov
test
sub
mov
ljmp
sbb
sub
js
and
imul
add
lods
cld
cmovns
adc
sub
cs
imul
loopne
cmpsl
pop
jnp
lret
cmp
and
subb
xchg
cmp
pop
in
or
notl
xor
and
jb
inc
inc
mov
loopne
and
movsb
xchg
pop
test
push
popf
mov
push
sbb
es
lock
adc
lods
sar
or
xor
sarl
pushf
inc
and
arpl
repnz
pop
andb
into
mov
and
pop
dec
xlat
sbb
inc
test
add
inc
imul
imul
xchg
sbb
adc
cs
fwait
mov
mov
push
sbb
mov
and
cwtl
aam
pop
add
inc
xchg
lods
jl
push
clc
sbb
outsl
test
loopne
popf
pop
insl
sbb
std
fs
dec
mov
int
cs
notl
push
out
jbe
lods
in
xor
push
rcrl
add
ret
movsl
push
jbe
mov
mov
in
adc
dec
inc
fcom
push
mov
ja
insb
dec
icebp
inc
insb
cltd
fidivl
jbe
or
sahf
out
mov
out
fyl2xp1
xchg
push
movb
sahf
popf
push
mov
loopne
inc
gs
add
test
leave
mov
fidivrs
pop
push
fldz
ss
jg
push
loop
xchg
push
add
and
dec
push
lds
mov
fstpl
mov
pushf
cmp
vmovq
xchg
ret
xchg
in
or
adc
loop
jl
adc
pushf
insb
jge
mov
add
or
sbb
jb
shl
mov
ret
jle
cli
dec
clc
fsubrl
mov
cmp
ljmp
mov
push
jns
into
not
mov
dec
ds
push
or
out
mov
jg
jno
mov
in
dec
clc
in
push
sub
xchg
mov
enter
mov
daa
lret
mov
push
add
mov
push
stos
aaa
outsb
icebp
jle
test
and
push
jecxz
and
cli
mov
lahf
sbb
jle
add
pop
mov
lock
mov
decl
hlt
loop
push
insb
ficomps
cmp
sub
mov
mov
test
stos
leave
arpl
add
js
dec
cmp
push
mov
das
pop
shrb
dec
pop
mov
mov
es
inc
test
in
gs
mov
sub
fistl
rcrl
movsb
test
icebp
sbb
fisubrs
sbb
mull
rorb
pop
test
jl
or
jp
aas
lea
mov
enter
daa
fcomip
jne
addr16
sub
push
mov
shll
lock
fsubl
xchg
testl
jae
mov
xchg
fbstp
adc
lret
mov
pop
pusha
and
outsl
inc
mov
fsubp
inc
inc
inc
or
ds
fs
adc
jg
lret
pop
std
or
inc
add
imul
icebp
jg
adc
adc
adc
scas
test
cld
lods
jg
rorl
mov
inc
in
call
sbb
add
and
mov
popf
js
xchg
jbe
das
flds
cs
cs
cmp
enter
loop
or
sub
mov
fwait
outsl
mov
or
rcrb
je
stos
arpl
mov
jl
xor
adc
jle
pop
add
pop
fisubl
mov
and
rorb
push
out
and
sbb
dec
push
fidivl
xchg
int3
mov
sbb
in
cmp
arpl
hlt
fwait
mov
repnz
mov
sbb
sbb
fcomi
aam
sub
das
add
stos
insb
cmpsb
jmp
jnp
mov
cmc
in
xor
pop
js
and
arpl
in
add
mov
and
cmp
pop
and
add
xlat
xchg
or
pop
xor
int
inc
cli
out
aas
sbb
xor
or
cwtl
bound
and
or
mov
in
popa
pop
adc
into
pop
cwtl
int3
dec
cmpsl
iret
stos
add
mov
scas
adc
ds
cmp
jmp
mov
push
push
icebp
out
mov
xor
xchg
icebp
orl
loope
aas
or
cli
sub
jle
and
cmpsl
mov
out
or
jb
pop
lea
call
or
lods
adc
xor
into
shrb
xchg
dec
inc
nop
adc
pop
push
push
sbbb
shll
jge
enter
inc
mov
xor
or
push
mov
lret
xor
sub
sbb
lock
mov
add
dec
add
shll
mov
pop
icebp
pusha
and
xchg
add
push
sub
or
repnz
add
push
shll
adc
test
inc
cmp
adc
pop
cld
fidivl
cmpsl
mov
jmp
stos
pushf
mov
fs
roll
rcll
popf
leave
jmp
rcr
mov
test
lds
inc
xor
movsl
xor
add
mov
rclb
cmc
adc
loope
loope
and
cmpsl
shrl
les
sbb
mov
dec
add
rol
jecxz
inc
jg
movsb
stos
fwait
outsb
jbe
in
mov
xchg
std
int3
sbb
out
loop
cmp
xchg
mov
push
outsb
lret
sub
mov
popa
cwtl
jecxz
rcrb
insb
inc
xor
jge
out
push
dec
xchg
insl
inc
mov
inc
test
sub
add
xor
xchg
adc
lret
mov
cmp
gs
lods
push
jns
outsb
outsl
jl
and
and
repnz
dec
fnstcw
inc
jbe
out
ljmp
or
push
inc
cmp
jno
mov
pop
andb
jo
cwtl
ss
xchg
notb
mov
sti
inc
xchg
gs
sub
and
mov
fidivrl
call
rorb
fisubs
mov
insl
daa
add
cmpl
inc
aam
push
xchg
test
sbb
data16
js
hlt
push
sub
add
cmp
add
cmp
xor
cmp
cmpsb
and
adc
cmp
pop
push
dec
xor
ds
fidivrl
cmpsb
stos
cmc
fstp
shrl
out
push
sub
shl
sbb
sub
mov
fs
mov
inc
and
in
xchg
aaa
fdivrl
xor
sub
xchg
xorl
or
dec
pop
pop
and
and
xor
shld
rcll
and
dec
lcall
or
push
rorb
push
mov
lods
mov
mov
mov
pop
pop
mov
inc
push
hlt
sub
inc
in
xchg
sahf
rcrb
mov
inc
sbb
jnp
inc
xchg
out
pusha
jbe
fldcw
add
jo
scas
iret
hlt
xchg
lcall
rolb
aad
popf
stos
fldt
push
movsb
in
ffree
daa
outsb
lock
fnstsw
xchg
enter
and
xchg
hlt
shr
std
push
lret
sub
scas
stos
push
ss
scas
jle
paddsw
xor
aam
dec
cli
fwait
inc
mov
pop
es
shrl
rolb
pop
push
test
sahf
mov
cmpsb
pop
sbb
aam
aad
in
mov
fldcw
mov
sub
xchg
iret
aad
mov
repnz
xchg
out
cmp
test
xor
sub
stos
add
cmp
jae
repnz
mov
cmp
fs
push
iret
dec
movb
inc
pop
sti
fwait
movl
mov
xor
lret
es
xchg
ja
aam
int3
test
add
popl
and
rcll
push
fwait
push
and
jl
jae
scas
fwait
sub
xlat
adc
mov
dec
fbld
pop
into
add
std
sar
mov
cwtl
mov
rcl
rcrb
ss
xchg
jbe
jle
fimuls
mov
jle
xchg
mov
dec
cmc
repz
sbbl
sti
jl
adc
push
pop
sub
aad
sahf
push
jbe
pop
inc
in
inc
scas
outsl
dec
adc
mov
std
push
push
stos
pop
jb
dec
dec
outsb
mov
pushf
push
xchg
cmp
inc
push
dec
fs
inc
iret
test
pop
lods
rolb
jbe
push
pop
mov
jnp
xchg
or
inc
pop
jmp
movsb
fidivrl
andb
sub
fwait
pop
mov
mov
addl
leave
shll
js
aaa
call
adc
dec
lret
sarl
xlat
push
je
nop
inc
push
lret
outsb
xor
dec
dec
or
lods
pop
inc
in
and
pop
mov
mov
pushf
lret
adc
jb
xor
lea
lds
xchg
mov
or
fs
xor
sbb
pop
cs
testl
jmp
cmp
cwtl
sub
fsubs
int3
cmpsl
jno
pop
adc
mov
push
mov
push
xor
outsb
xlat
xor
call
sub
pop
faddl
mov
jo
pusha
add
sti
js
inc
arpl
mov
aad
insb
mov
jns
mov
cltd
inc
adc
mov
test
mov
push
xchg
sub
mov
in
aaa
mov
popa
push
mov
adc
xchg
out
outsb
push
xor
jne
xlat
xchg
mov
pop
xchg
loope
mov
adc
cmpsl
lods
mov
arpl
push
mov
cmp
ss
mov
cld
inc
push
pop
sbb
xor
pop
add
inc
fisttpl
jno
adc
mov
cmpsb
das
xor
adc
aam
je
mov
loopne
adc
or
loope
loop
mov
xlat
test
aam
xor
fnstcw
cli
sub
xchg
push
jl
mov
push
shlb
add
in
xor
aas
xlat
mov
popf
iret
jno
add
and
ja
mov
mov
in
dec
jnp
xchg
aaa
loopne
jnp
mov
icebp
inc
push
aas
mov
dec
and
ret
mov
pop
push
xor
xchg
cmp
sub
push
fnstenv
leave
popf
call
iret
addr16
mov
mov
mov
mull
sbb
orl
and
mov
ss
ljmp
scas
sbb
or
mov
add
sbb
pop
shl
or
jb
fstps
rolb
add
pusha
add
add
push
push
or
xor
js
jle
shlb
adc
lods
stc
leave
lahf
in
adc
or
repz
shll
scas
xlat
mov
mov
clc
dec
mov
in
xchg
mov
and
imul
lret
push
mov
mov
mov
mov
cmpsl
ret
inc
push
test
xchg
mov
push
sub
pop
push
sbb
dec
xchg
mov
xchg
sub
mov
sub
sarb
pop
outsl
mov
clc
out
lds
aas
out
mov
loope
sub
cmc
cmp
pop
or
cli
aaa
mov
dec
in
fs
outsb
mov
subb
push
adc
and
mov
enter
ljmp
in
lret
jp
mov
add
xor
xrelease
inc
inc
movsl
lods
lods
lret
sti
pop
sub
je
andl
mov
inc
out
pop
pop
fwait
and
js
push
pusha
push
mov
popf
fiaddl
sub
jno
push
sub
das
popa
rol
jle
lock
mov
sub
les
pop
push
jns
ljmp
aad
stos
scas
adc
mov
push
xor
mov
idiv
sbb
pop
test
mov
mov
pop
cmpsb
in
mov
sub
fwait
xor
inc
fstpt
add
enter
and
push
test
cmp
in
ret
cmp
in
add
sub
push
push
or
pop
iret
sbb
jmp
mov
sub
loope
mov
fnstcw
mov
call
push
dec
pop
cmpsl
push
shr
dec
pop
mov
xor
mov
stos
fdivl
or
nop
sub
pop
xchg
pusha
dec
test
sbb
jmp
mov
daa
push
or
fwait
pop
in
mov
pop
mov
leave
push
sub
xor
mov
sbbl
icebp
mov
hlt
mov
call
sarb
pop
cmp
inc
sti
je
jge
test
test
fbld
mov
scas
jo
xor
cmp
jp
fsubrs
pusha
std
ret
sbb
mov
sub
push
mov
lock
mov
jmp
add
sub
adc
scas
int3
add
xchg
sbb
jae
mov
dec
test
xor
fwait
mov
adc
push
jae
in
xlat
fisubrs
push
mov
scas
movsl
lods
lcall
adc
push
insl
push
xchg
jecxz
addr16
jns
jmp
lahf
movsl
jo
pop
std
gs
or
lock
xchg
inc
inc
inc
xchg
fstps
sbb
aaa
into
fucomp
sub
rclb
aas
andl
sbb
inc
mov
sbb
pushf
pop
rcll
sar
add
aaa
dec
sub
fs
jp
adc
mov
jbe
imul
cld
mov
aaa
adc
sub
gs
inc
jo
sub
jo
sub
rcll
dec
mov
inc
scas
in
outsl
push
negb
pop
subb
xorl
ljmp
xchg
sub
std
mov
adc
mov
adc
xchg
and
fs
inc
mov
add
lods
call
outsb
jnp
ljmp
out
subl
leave
push
aas
hlt
mov
push
out
or
cltd
jl
cmp
xchg
push
mov
outsl
dec
xchg
scas
mov
adc
mov
out
sbb
fnsave
pop
or
lcall
jae
pop
scas
xchg
pop
xor
dec
fisubrs
or
in
sti
in
les
iret
das
imul
call
outsb
jecxz
xor
and
push
push
add
push
aam
rcll
mov
xor
mov
test
sbb
jecxz
stos
lcall
ret
movsl
mov
test
mov
fisubs
ljmp
jmp
adc
loope
cwtl
pushf
xlat
das
ja
pop
xchg
fldenv
sbb
xor
sub
and
into
mov
mov
mov
es
mov
adc
shrb
out
fstpl
lahf
subb
imul
xchg
jno
sbb
lcall
cmp
adc
aad
cli
xchg
dec
aaa
sub
shl
scas
stos
stos
out
incb
je
sbb
inc
cltd
scas
jecxz
lret
jns
cld
xchg
xlat
push
stc
adc
insl
clc
pop
in
inc
pop
testb
pop
adc
pop
cmpsb
pusha
cmp
ss
push
imul
enter
add
xor
xchg
inc
out
iret
std
and
imul
stc
nopl
or
outsl
popa
sbb
div
lock
ds
imul
cmpl
scas
in
in
mov
dec
lahf
pop
mov
mov
cmp
mov
loop
ficoms
imul
push
inc
jmp
mov
sub
xor
out
mov
scas
adc
mov
adc
jae
add
hlt
fbstp
jno
les
scas
rol
jo
mov
int3
mov
inc
pushf
push
movsb
push
pop
push
mov
xor
inc
cmp
sbb
pop
cli
je
ja
leave
rcr
ficompl
ret
push
lahf
fisttpll
lods
adc
rcll
in
cmp
jo
dec
test
mov
sub
cmp
loopne
ss
imul
fs
mov
scas
pusha
in
push
out
xor
inc
out
aas
div
mov
xchg
stos
int
sbb
lahf
jge
push
fistl
adc
rcl
je
dec
jne
sbb
ss
pop
mov
or
cld
inc
call
lret
sbb
adc
lahf
ss
sti
cmp
cld
outsl
cmpl
or
jns
addr16
imul
xor
dec
push
stos
lcall
in
inc
gs
test
xor
shlb
sbb
popa
jle
popa
inc
enter
out
xchg
and
push
jmp
sbb
pushf
pusha
lods
xchg
xor
test
dec
jo
nop
push
pop
push
adc
fisubrl
cmp
gs
out
shr
push
mov
lcall
ret
xor
fxch
cmp
xchg
mov
data16
cmpsb
sahf
mov
xchg
adc
sahf
lcall
das
iret
ss
les
idivb
sbb
pop
into
test
adc
inc
fisttps
push
mov
pop
imulb
sub
mov
sub
adc
xchg
push
fldcw
daa
int3
or
int
fildl
jp
or
popa
mov
bound
incl
jo
cmp
aaa
pop
aad
and
mov
stos
pop
adc
push
jecxz
adc
and
push
movsl
pop
fadds
push
fnstsw
lods
in
arpl
in
push
mov
pop
lods
cltd
add
push
xor
ficomps
icebp
adc
sahf
outsb
push
inc
test
inc
push
ret
in
lods
xor
pop
mov
lret
sub
inc
leave
or
cmp
ficoms
mov
xchg
imul
lcall
insb
pop
jg
cmpsb
int
mov
ljmp
and
and
loopne
dec
mov
sbbb
lds
int
push
sbb
shl
and
insb
pop
in
inc
mov
add
mov
jns
xlat
loopne
add
ret
inc
loopne
lahf
scas
xor
sahf
ljmp
fildll
out
xor
mov
scas
stos
orl
pusha
jmp
cmp
xor
and
mov
inc
inc
movsl
addb
push
test
scas
mov
mov
jmp
cmp
xchg
dec
cmc
pop
jnp
ds
jns
jbe
cmp
scas
add
aad
cli
adc
mov
inc
sub
fisubrl
or
jnp
sbb
mov
or
or
repnz
cmp
out
into
push
push
xlat
inc
lea
jle
sub
pop
mov
add
jne
cmpsb
pop
adc
scas
ror
push
gs
ja
xor
int3
pushf
out
call
sbb
popa
dec
enter
mov
xchg
cmp
andb
movsl
xchg
jb
jne
and
or
mov
sub
fldcw
dec
mov
pop
jb
out
imul
jb
fistps
aaa
push
repz
mulb
scas
mov
sbb
dec
loop
call
shlb
and
bound
pop
fdivrp
push
ja
mov
daa
mov
decb
out
test
test
std
stos
sub
cltd
jo
scas
mov
call
sbb
lahf
iret
ror
xchg
and
orl
adc
push
lock
mov
or
push
mov
gs
mov
jp
dec
xchg
pop
or
add
push
repnz
adc
push
mov
xor
out
mov
lcall
in
mov
iret
stc
insl
jno
iret
and
mov
gs
lahf
or
mov
mull
leave
loopne
xchg
mov
pop
or
fcos
movsl
aad
cmp
sarl
out
popa
or
add
icebp
and
xor
push
add
lods
test
sbb
fsubr
jp
push
dec
out
cli
inc
xor
imul
xor
lods
dec
lcall
js
mov
xor
mov
mov
shll
mov
int
push
pop
and
sub
mov
repnz
das
cltd
stos
icebp
movsl
mov
or
sbb
outsl
imul
jnp
cmp
sub
push
cmpb
cmp
adc
jbe
xchg
sub
jns
daa
jae
lods
jecxz
xchg
loop
mov
xor
ja
or
outsl
fidivrs
sti
sbb
jns
push
cmp
cmp
es
inc
pop
xchg
lret
imul
imul
xor
xor
daa
mov
xchg
xchg
add
aam
in
aam
insl
jecxz
sbb
addb
dec
push
dec
aaa
fcoms
push
hlt
fldcw
push
xor
loop
adc
push
jmp
xchg
dec
sbbb
clc
repnz
and
dec
pop
pop
shll
or
jns
add
mov
fs
push
or
insb
pop
adc
ret
jmp
pop
push
adc
lea
test
sbb
xor
jnp
xor
jmp
lcall
ds
and
xor
shrl
stos
sti
adc
sbb
iret
call
sub
pop
xor
jne
iret
or
dec
movsl
inc
test
imul
lcall
mov
add
mov
scas
in
adc
jecxz
imul
xor
dec
shl
movsb
mov
cwtl
mov
and
inc
popf
icebp
sti
add
cmp
aam
repnz
imul
scas
outsl
mov
sti
out
mov
in
or
outsb
adc
push
mul
aad
xchg
sbb
pop
dec
rorl
sub
test
call
mov
lret
cmp
call
stos
dec
mov
mov
orps
mov
or
cltd
js
pop
das
push
mov
enter
and
jecxz
lret
arpl
iret
xchg
lds
jns
sahf
ss
xor
lret
out
mov
or
int
xor
mov
push
xchg
jo
ljmp
and
fs
mov
and
enter
pusha
lods
xor
aas
xlat
cltd
sub
cld
jp
lock
adc
mov
daa
mov
dec
nop
sub
dec
mov
aas
xchg
int
out
sub
int3
out
pop
stos
dec
lods
push
push
jg
fstl
popa
lods
movl
arpl
add
sub
cmp
fs
and
push
dec
loop
push
in
out
in
das
mov
pusha
das
mov
outsl
adc
adc
dec
xchg
mov
push
cwtl
loopne
es
mov
arpl
and
das
jl
ret
pop
pop
jnp
call
iret
in
loop
enter
mov
lret
inc
mov
dec
inc
push
imul
push
mov
sbb
lds
add
cltd
or
mov
aaa
jae
inc
stos
xor
dec
and
add
pop
lcall
test
bound
mov
hlt
pop
push
mov
pushf
lock
cmpsl
addr16
pushf
jle
sbb
iret
mov
movsl
out
dec
cmp
mov
imul
inc
cmpsl
imul
fdiv
mov
mov
jg
jns
xor
xchg
pop
push
push
rcll
jle
scas
mov
jne,pn
mov
ret
pop
mov
adc
xchg
dec
subl
movsl
inc
das
mov
or
sbb
scas
and
mov
enter
and
ficomps
sub
aaa
dec
call
xchg
push
mov
mov
icebp
mov
pusha
jmp
jge
scas
mov
into
stos
sbb
loope
das
mov
pop
scas
loop
insb
inc
mov
mov
sub
icebp
mov
out
jnp
sub
scas
test
hlt
fwait
jo
bound
xchg
add
jmp
mov
pop
nop
cmp
dec
fs
jo
mov
ja
test
sub
fstpt
ret
insb
or
mov
sti
out
mov
and
movsb
mov
cmpsl
mov
cmp
sub
mov
sbb
inc
ret
aad
xor
sbb
addb
xchg
sahf
add
adc
rolb
sub
adc
push
adc
adc
inc
int
cltd
mov
cmp
pop
insb
pop
push
push
ficomps
mov
aad
jae
mov
dec
inc
movsb
adcl
mov
cmp
or
in
and
fidivs
andb
cmpsl
jmp
dec
test
sub
jno
jge
pop
dec
loope
xchg
xor
test
and
pop
jle
pop
fstpt
aas
mov
adc
push
jl
mov
cmp
pop
xchg
mov
imulb
cmc
xor
les
lcall
push
mov
pop
push
cltd
loope
or
jnp,pn
fldt
lcall
mov
lret
or
arpl
loopne
mov
pop
push
mov
push
add
out
xor
pop
gs
sbb
outsl
fwait
in
pop
fistpll
je
jbe
ds
dec
ds
subl
fstpl
cwtl
jecxz
shrl
cmc
dec
cmp
lret
lret
inc
ja
sahf
jnp
inc
sub
and
xchg
iret
outsl
fstpt
pop
loope
mov
xor
xor
cwtl
sbb
mov
or
js
or
imul
cmp
jmp
mov
js
dec
adc
jp
test
mov
mov
jmp
xchg
pop
out
das
cwtl
leave
jb
add
sbb
mov
sub
push
mov
iret
pop
dec
sti
outsl
shll
pushf
nop
dec
jp
cmp
sbb
and
and
dec
popa
ret
mov
ss
out
and
xchg
cmp
lret
repnz
cmpl
xchg
mov
inc
out
jmp
pop
dec
jo
ljmp
ljmp
jl
cmp
add
cltd
mov
xchg
dec
leave
sub
or
push
sahf
push
jb
shl
sbb
jmp
jne
xchg
pushf
sub
scas
mov
mov
xor
sti
xlat
xchg
cld
jecxz
out
jno
sub
mov
popl
inc
out
jp
and
jmp
sbb
cmc
mov
cmp
shll
clc
and
stc
frstor
sahf
int3
cmp
jne
inc
stos
and
mov
add
cmp
insb
jbe
pop
mov
icebp
adc
mov
imul
jne
push
xor
add
lret
mov
cld
and
pop
jns
add
mov
imul
fbstp
inc
cmp
lahf
pop
leave
pop
jmp
ss
sub
dec
lock
xchg
out
in
das
jl
insb
adc
xor
in
or
pop
xorps
out
cmc
rorb
xchg
nop
pushf
daa
xchg
lea
mov
pop
in
stc
mov
dec
jae
cmp
add
or
ljmp
sbb
sub
ret
cmc
and
mov
insb
icebp
cmp
bound
ljmp
cmp
lock
daa
int3
stos
xor
jo
adc
test
or
arpl
aas
imul
lcall
hlt
push
das
push
cmp
xchg
and
or
mov
fst
imul
mov
negb
mov
xchg
dec
xlat
stc
test
ds
mov
adc
adc
popf
xchg
out
lea
adc
pushf
jae
adc
add
movsl
sub
and
into
addr16
repz
out
orl
stc
in
push
xchg
dec
and
mov
fistps
test
into
mov
loopne
outsb
mov
dec
jle
mov
nop
cltd
add
add
and
lret
pop
in
out
push
into
fldl
inc
hlt
out
fcmovbe
mov
mov
or
push
loope
xchg
addr16
cmpsl
lcall
es
sbb
repz
mov
fsubr
jl
add
inc
jmp
cld
outsl
inc
mov
insl
dec
add
or
mov
and
dec
out
imul
popa
adc
ljmp
std
or
int
leave
dec
imul
inc
test
inc
js
inc
mov
popa
in
xor
push
cwtl
mov
sbb
das
js
or
jbe
daa
sbb
cs
xlat
jmp
rol
sarb
dec
xor
push
dec
int
stos
das
and
push
jl
subb
adc
sahf
adc
push
sub
cmpsb
int
loope
cmpsl
sub
or
mov
dec
xor
xor
cmp
jbe
mov
subl
pop
dec
sbb
mov
push
fsubs
dec
test
mov
mov
sub
mov
in
xor
mov
aaa
add
and
out
adc
cmp
xorl
mov
push
pop
rorb
add
lds
call
inc
lock
mov
sub
and
es
fsubrs
push
cmp
cmpsb
lcall
or
fnstcw
lods
sbb
push
pop
push
rclb
pop
in
mov
pop
mov
sarb
and
ja
add
pop
inc
dec
sbb
mov
hlt
mov
popa
push
pop
xchg
and
sub
popl
cmp
stc
mov
loope
add
add
pop
mov
pushf
xor
loopew
test
pushf
cmp
adc
and
jnp
roll
cs
inc
adc
xorb
insb
xchg
je
push
lods
outsb
pop
loop
sbb
shll
inc
sti
clc
das
and
jle
cmp
les
std
sub
and
push
les
outsl
adc
repz
inc
adc
xchg
xchg
mov
test
xchg
int3
xchg
jecxz
shlb
iret
mov
jbe
test
ja
cs
mov
xchg
fs
or
clc
in
cmpsl
push
sub
rep
stos
lock
push
mov
adc
mov
and
test
cmp
sbbb
out
pop
in
mov
aaa
in
cmc
lea
add
pop
js
jb
test
mov
aas
vmovaps
dec
pop
or
dec
fistl
mov
out
mov
jno
mov
cmp
inc
repnz
inc
pop
push
push
repz
push
xchg
adc
nop
sbb
adc
fmuls
shlb
or
fldenv
pop
mov
inc
data16
insb
mov
fnsave
xchg
mov
add
sbb
in
repz
pop
pushf
in
push
mov
xor
lcall
in
movsl
leave
xchg
xor
inc
into
mov
sub
push
xor
mov
aam
cld
inc
fwait
adc
mov
std
sbb
out
jle
jae
xchg
cwtl
xchg
and
sub
jmp
lds
test
aad
jb
out
mull
es
filds
dec
cmp
jp
adc
aad
push
out
pop
xchg
xchg
mov
and
add
loopne
jnp
fidivl
push
inc
xchg
jb
repnz
adcb
lret
mov
cmp
stos
and
xor
aam
dec
icebp
pop
pop
shl
xchg
mov
hlt
ret
pop
das
mov
inc
outsb
push
sti
out
mov
inc
add
int
adc
rol
das
in
mov
mov
or
fwait
or
aaa
pop
bound
pop
add
xchg
cmpb
lods
push
test
js
in
mov
mov
mov
dec
sbb
add
inc
adc
pop
mov
add
add
cld
mov
xchg
movntq
out
push
add
cmc
or
lods
adc
ficoms
jecxz
dec
mov
inc
cmp
es
and
ja
scas
shl
lcall
cmp
push
ljmp
imul
sub
insl
aam
pop
ret
andl
sub
out
lods
mov
inc
push
mov
popa
dec
mov
mov
inc
jnp
nop
inc
sti
push
mov
push
adc
nop
fimuls
sub
subb
push
arpl
sub
lods
arpl
pop
mov
dec
imul
outsl
int
std
aad
push
mov
iret
pop
rorl
pop
add
push
mov
pushf
or
out
push
adcb
add
ljmp
call
subb
push
pushf
xorl
aaa
mov
mov
inc
jp
add
cltd
iret
clc
js
lcall
pop
inc
cmp
imul
cwtl
ljmp
dec
in
mov
mull
cmp
test
lahf
lock
es
adc
mov
icebp
lret
and
mov
cmp
out
loopne
pop
and
in
lahf
xchg
mov
mov
outsl
jbe
jns
xchg
cld
int3
mov
xchg
mov
aas
jp
mov
sub
adc
sti
outsb
ljmp
out
arpl
fistpl
pop
rcll
inc
das
and
push
popa
sub
xor
loopne
xchg
inc
jo
and
mov
push
pop
add
jbe
jae
fsub
inc
andps
cmp
fistpll
mov
jge
mov
ret
xchg
js
sub
lcall
or
xor
mov
jge
cmpsb
dec
push
divl
pushf
mov
icebp
jno
fcomi
sub
pusha
add
mov
cld
mov
into
lods
pop
fmulp
or
jmp
sub
fs
pop
mov
cmp
loop
jnp
imul
sbb
lds
loope
sub
xchg
cmp
add
sub
inc
leave
or
into
cmp
push
test
add
stos
out
pop
sbb
push
int
das
mov
jbe
push
push
repnz
incl
mov
and
int
xor
movsb
aas
xor
lret
sbb
negl
test
fdiv
sarb
scas
inc
add
mov
aaa
stos
mov
dec
lock
int3
mov
xchg
movb
mov
xchg
sub
rorb
pop
cld
cmp
mov
adc
mov
sbb
notl
pop
dec
cmpsb
ds
adc
xor
fwait
cwtl
xchg
sbb
fwait
mov
xchg
das
mov
pop
cwtl
push
cld
xorl
int3
xor
call
cmpsb
idivl
loope
cmpsl
push
test
mov
adc
sub
push
mov
dec
mov
jo
in
daa
pop
pop
mov
pushf
idiv
or
std
out
mov
addb
lods
roll
rolb
lret
xor
sbb
sti
loope
jnp
mov
push
mov
jno
mov
stos
add
xor
lock
inc
dec
fsubs
andb
movsb
stc
add
dec
out
and
jno
add
lods
add
jnp
test
loope
in
loop
mov
pusha
mov
repnz
mov
xlat
sub
scas
pop
leave
sub
xchg
sbb
add
fwait
push
and
add
int3
ret
in
pop
popa
sub
or
fisubl
cmp
mov
jbe
push
cmp
mov
movsl
add
push
mov
imul
and
nop
xor
xchg
dec
lock
mov
mov
cmpsl
lock
sti
aad
sub
sbb
cld
add
fsubp
lret
sbb
mov
jno
mov
xchg
pop
mov
mov
in
stc
outsb
aaa
adc
mov
ret
push
inc
push
sbb
bound
ret
or
fwait
int
pop
inc
jnp
mov
jnp
jbe
mov
inc
pop
cmpps
mov
popf
dec
loope
add
mov
nop
mov
and
jl
sbb
hlt
push
shlb
in
mov
mov
pop
mov
lret
jle
sbbb
fldenv
stos
pop
xchg
ret
jle
push
jecxz
inc
iret
cs
in
fcomps
int
xlat
lea
mov
cs
mov
xchg
int
xchg
cmp
cmpsb
mov
mov
fsubl
mov
mov
push
or
xchg
in
cmc
xor
out
jmp
mov
xchg
repnz
mov
mov
push
sahf
push
int3
test
mov
adc
sub
sbb
int
xlat
out
cmp
sub
pushf
push
mov
das
stos
andl
jle
sahf
inc
arpl
dec
pop
cmp
jae
adc
mov
push
xchg
ret
sub
jbe
push
mov
aad
lock
xchg
dec
aaa
push
mov
xchg
xchg
roll
loope
int
mov
and
mov
mov
xchg
mov
stos
out
pop
pusha
or
je
stc
adc
or
add
ds
push
sub
pusha
jge
adc
mov
imul
or
scas
shrl
xchg
xchg
insb
mov
scas
pop
pop
lea
shlb
mov
jp
ljmpw
or
and
nop
sbb
xor
cld
cld
mov
jb
xchg
rorl
or
fbstp
jb
push
or
mov
loope
out
mov
ret
inc
scas
clc
pop
ret
or
out
jl
in
insb
sbb
int3
lret
in
mov
scas
add
inc
fistl
adc
jmp
xchg
pushf
mov
lock
mov
jle
add
sbb
lods
out
ret
das
ss
adc
cmp
inc
in
stc
out
jae
mov
outsb
jnp
adc
xor
aas
inc
add
pushl
insb
test
xchg
test
jb
daa
jno
cmp
inc
sub
insb
cmc
jno
dec
pop
adc
inc
adc
lret
pushf
test
daa
mov
pushf
pop
test
fs
push
fs
inc
and
push
and
lcall
fucom
fwait
stc
call
xchg
adc
adc
cli
mov
lcall
dec
loop
test
jecxz
add
push
or
cmp
adc
push
cmp
cli
lods
and
pop
out
std
pusha
outsl
push
push
in
xchg
mov
mov
sub
in
fs
or
cmp
pusha
mov
adc
lock
repz
add
inc
repnz
xlat
and
fnstsw
xor
popa
pop
lret
and
leave
push
sub
mov
or
dec
insl
cmp
mov
lret
dec
clc
das
pushf
xchg
icebp
inc
mov
pminsw
add
enter
mov
xor
loopne
sub
sub
ds
mov
mov
adc
sbb
push
cmc
adc
pop
stos
adc
pop
dec
in
mov
adc
fwait
and
scas
bnd
cld
push
lds
sub
stc
insl
stos
mov
push
mov
mov
inc
jg
mov
inc
push
out
inc
add
mov
and
mov
cmc
mov
insl
ss
sub
push
pop
aaa
push
lock
xchg
into
loope
rcrl
movl
arpl
push
es
jge
pop
push
fbstp
jns
sar
les
js
in
inc
addr16
ja
sbb
push
push
fdivs
cltd
jl
outsb
push
dec
fstl
cmp
pop
bound
push
dec
insb
lahf
les
cmp
mov
mov
loop
cmpsl
push
add
test
into
xchg
cmp
sti
mov
ss
cmpsl
mov
push
mov
mov
mov
andb
mov
xchg
and
xchg
inc
jno
xor
mov
dec
mov
mov
jnp
rcl
sub
push
dec
fdivs
idivb
pop
inc
fidivl
ret
popa
shll
mov
jmp
lahf
roll
or
minps
push
push
inc
mov
and
xor
sti
dec
out
xor
ret
push
out
push
adc
jle,pt
pop
fxch
shl
push
aaa
fsts
or
xchg
std
fstpt
fdivl
shrl
jne
push
xor
push
xchg
cmp
pop
outsb
rcr
sti
mov
mov
fdivrs
hlt
lods
add
push
frstor
jnp
sbb
shrl
call
push
fwait
push
cmp
pop
sbb
cmpsb
loop
and
and
lods
sbb
adc
push
lock
sbb
inc
mov
and
ja
int
or
in
jne
dec
lds
cmp
sub
or
or
cmpsl
adc
ja
pop
sbb
jg
les
mov
iret
dec
mov
fbld
mov
push
mov
sbb
ror
or
mov
and
xchg
mov
je
loop
jmp
movsb
movsb
dec
or
insl
loopne
dec
movsb
adc
push
push
and
jo
mov
lret
int3
ret
xchg
mov
xor
push
test
stc
ljmp
jno
es
das
and
fdivl
bound
ds
add
add
popf
adcl
push
ljmp
inc
sub
arpl
adc
sub
jae
insb
mulb
sub
mov
lcall
loop
je
rolb
mov
fdivl
pop
stc
inc
fstl
popa
sbb
or
push
inc
paddusw
repz
cs
pop
inc
adc
adc
fcomps
jg
ja
ds
xchg
rolb
pop
in
push
test
xor
mov
sahf
pushf
insl
xor
and
mov
mov
insl
jg
lods
add
bound
sbb
mov
pop
std
leave
cli
jmp
mov
in
and
rcl
mov
icebp
test
jb
dec
repz
mov
lods
inc
adc
xchg
lcall
ret
pop
notb
call
mov
imul
out
inc
cli
hlt
and
ret
add
js
iret
push
std
std
popf
andl
mov
popl
sbb
shlb
fnstenv
into
inc
add
loop
inc
clc
pop
xor
les
sti
xchg
lods
icebp
inc
divl
jno
movsb
sbb
les
cmc
add
mov
lahf
adc
cmp
or
xor
jge
filds
xor
lret
dec
sbb
repz
push
outsl
adc
adc
mul
rclb
adc
fnstenv
jne
les
xchg
das
pop
movsb
and
jg
inc
xchg
pop
mov
inc
xchg
cmpsb
sbb
cltd
mov
inc
pop
lods
pop
in
out
out
or
mov
inc
dec
xchg
sbb
sbb
mov
or
mov
mov
sub
fisubs
repz
cmpsl
push
fwait
cmp
adc
test
cmpsb
test
jnp
pop
jae
jg
fsubs
adc
and
sbbb
xchg
sbb
test
ljmp
xchg
repz
jbe
pusha
ret
lock
popf
test
add
out
fildl
jmp
push
push
lds
jge
jl
stos
pushf
cmpsl
and
stos
xor
inc
mov
neg
cmp
mov
cmp
jmp
enter
jb
mov
das
sbb
jne
pop
inc
ret
addr16
mov
push
jo
and
cli
mov
add
shrl
mov
push
mov
mov
jmp
and
dec
gs
outsb
sti
movb
nop
call
movsl
dec
jnp
filds
out
sub
push
xchg
jp
lcall
and
jge
pushf
pop
insl
push
insb
mov
and
push
out
or
inc
mov
orb
xchg
jecxz
jne
sti
out
jne
dec
or
das
insb
cmpsl
cltd
cmpsb
fimuls
jle
mov
or
push
insl
mov
std
movsl
fwait
cmp
test
ret
in
mov
ss
pop
sbb
pop
jl
test
mov
inc
xchg
movsl
dec
cmp
sub
push
daa
inc
test
xor
add
rorb
pop
mov
jns
into
adc
or
sub
mov
bound
xchg
sahf
nop
je
sbb
or
mov
jae
dec
dec
ljmp
adc
sub
ss
cmc
xchg
sbb
mov
or
adc
iret
push
outsb
adc
mov
shlb
lods
inc
das
lcall
imul
fsubrl
hlt
cmp
and
pop
imul
std
sbb
fmulp
pop
nop
xor
push
push
lock
mov
repz
cmp
or
aam
mov
pop
or
sbb
imul
testl
out
shlb
sbb
cli
std
stos
out
inc
imul
dec
movsl
and
xor
xlat
push
pushf
xor
imul
dec
sbbb
push
pop
fs
insb
xchg
nop
mov
ss
lahf
mov
loopne
adc
jae
push
sarl
cwtl
adc
fists
out
dec
xlat
test
xchg
out
jnp
add
jae
pop
add
aas
xlat
arpl
sar
mov
add
test
xor
loope
mov
dec
sbb
repnz
in
cltd
cmp
jp
push
aam
jecxz
pop
jne
jle
cld
cmp
fs
or
cmc
jle
incb
add
std
adc
or
adc
sub
dec
mov
add
cmp
mov
sub
xor
aad
pop
sub
sahf
outsl
pop
cmp
sbb
nop
in
jno
xor
fcoml
inc
les
pop
cld
cmp
mov
sbb
out
jp
or
outsl
mov
xchg
or
test
push
icebp
fbld
mov
sahf
inc
fnstsw
mov
daa
dec
xchg
sub
pop
and
incl
jmp
inc
mov
cmc
xchg
pop
jae
hlt
push
gs
lock
sti
adc
popf
jno
xchg
test
jmp
adc
cmc
mov
test
xor
jmp
lcall
cmp
mov
xor
inc
cmc
stos
jo
and
dec
push
push
or
inc
or
lret
or
frstor
sub
adc
cmp
inc
sub
pop
loope
sub
pop
push
pusha
movsb
hlt
fwait
mov
push
mov
andl
sahf
psrad
push
ret
inc
cs
or
out
pusha
dec
xchg
dec
adc
xor
test
mov
idivb
movsl
shlb
insb
dec
dec
dec
mov
test
outsb
mov
out
mov
imul
push
inc
into
leave
cmpsl
test
arpl
rcll
xchg
pusha
add
test
icebp
and
mov
sub
dec
cmp
cwtl
les
sbb
in
sbb
sbb
sub
outsl
inc
mov
mov
sar
insb
xchg
and
push
cmp
jno
hlt
inc
jo
mov
std
or
sub
out
inc
js
or
jge
loop
test
cltd
mov
jmp
es
dec
cld
sbbb
sahf
dec
xor
pop
stos
sbb
nop
cmp
gs
mov
pandn
outsl
mov
push
xchg
iret
mov
flds
jmp
xor
mov
aaa
inc
and
lret
iret
mov
or
faddl
lcall
or
in
test
into
roll
pop
imul
and
fisubs
push
inc
cmc
push
add
rcl
aam
mov
xor
stos
sbb
aaa
lods
xchg
mov
lods
das
mov
call
es
cmp
jmp
mov
das
or
lcall
pop
inc
ret
outsb
fists
jo
inc
loop
enter
cli
sbb
or
cmp
popf
mov
xchg
pop
repnz
idivl
and
push
mov
ljmp
out
adc
adc
mov
mov
dec
mov
push
jl
shlb
jmp
cwtl
fdivs
movsl
popf
mov
mov
mov
mov
dec
and
mov
imul
mov
inc
adc
sarl
add
cmp
shlb
stc
mov
and
sub
arpl
mov
arpl
enter
dec
outsl
mov
sub
das
inc
jne
dec
or
sbb
xor
or
ja
inc
fsubl
xlat
scas
lahf
push
ss
movsl
pop
fisubs
clc
fsubrl
mov
jo
or
xchg
xchg
and
sbb
cmp
mov
aas
adc
sub
dec
jns
xlat
xor
popa
in
lds
jbe
sub
and
xlat
fistpll
pusha
push
cmp
adc
cmp
lods
mov
sub
cwtl
aaa
test
ret
push
repz
inc
fldl
test
jp
or
jmp
mov
xor
aam
nop
jnp
mov
test
dec
or
cli
inc
daa
popf
mov
pop
push
jp
sbb
inc
mov
sbb
pop
imul
leave
jbe
inc
ret
daa
pushl
pop
jns
pop
jg
dec
sub
dec
js
addr16
lea
nop
repz
scas
repz
inc
dec
sub
dec
cwtl
cmpsl
jmp
pushf
jne
xchg
cli
cmp
add
mov
divb
imul
push
imul
mov
daa
pop
cmpsb
ljmp
cmpl
add
lcall
outsl
ja
shrb
sub
pop
push
mov
pop
pop
inc
adc
orb
lahf
cwtl
adc
push
push
movsb
pusha
sbb
inc
mov
pop
adc
mov
test
jnp
ret
adc
and
fiaddl
lods
aaa
ljmp
out
cpuid
xor
fidivl
sbb
sbb
xor
sarb
clc
and
shlb
jg
add
xor
cmp
out
pop
xchg
imul
js
incl
mov
lock
scas
and
xor
imul
and
jns
sub
jne
pop
and
imul
pusha
stos
or
push
push
idivb
xor
xlat
int
cmp
sbb
je
xchg
scas
mov
sub
stos
add
in
icebp
orb
out
mov
lret
xor
outsb
rcll
cmp
mov
add
pop
inc
es
xlat
cmpsl
shlb
mov
adc
add
stc
sub
into
cmp
or
jb
push
rorb
push
mov
jns
shr
and
xor
sbb
rcll
roll
add
je
cmp
and
pop
pop
mov
mov
add
sbb
out
cltd
adc
mov
pop
mov
push
outsb
xchg
rorb
mov
shrb
sbb
push
js
sub
or
sbb
rcll
push
lds
or
jno
push
insl
xor
lea
or
test
out
add
push
cmp
adc
push
inc
xor
mov
loope
xchg
fnsave
ror
jno
cmp
mov
mov
lret
les
add
sub
out
inc
push
push
out
mov
fimull
mov
xor
inc
xchg
push
mov
mov
cltd
aas
arpl
dec
mov
xchg
les
and
sub
jne
cmpsl
jnp
inc
dec
xorl
shlb
aam
push
jle
aad
psubusb
test
daa
cmp
mov
das
arpl
aaa
jp
and
xchg
int
sub
data16
push
mov
jns
sbb
push
adc
mov
out
inc
cltd
sbb
sub
enter
inc
fsubs
push
mov
ret
or
pslld
push
out
roll
inc
push
sub
mov
xor
xchg
pop
mov
jae
cmpsb
cmc
cs
pushl
loop
sti
and
repz
dec
cmp
sbb
xchg
fimuls
imul
sbb
adc
and
dec
or
push
inc
pop
mov
jae
in
xchg
pop
add
test
adc
pop
fdivr
ss
pushf
add
test
shrl
jns
mov
push
inc
xchg
adcl
stc
mov
mov
sbb
jbe
cs
inc
and
lds
popf
jne
rol
jecxz
or
in
push
lods
jl
or
in
adc
xchg
or
inc
hlt
mov
movsl
or
cmp
js
pop
imul
sbb
sub
mov
push
ja
mov
dec
popa
lods
lods
jmp
dec
inc
sub
inc
dec
dec
test
stc
out
cmp
sbb
test
adc
cmp
lods
fldt
ret
imul
sbb
jmp
mov
fists
mov
lods
ret
aas
jge
add
and
addr16
les
mov
jp
bound
push
fistps
hlt
push
fs
push
pop
xor
mov
int
sub
sub
and
arpl
andl
sti
loop
pop
cwtl
pop
adc
cmp
pop
or
fimuls
xchg
jecxz
sub
xchg
test
pop
arpl
enter
add
fsubl
enter
xorl
inc
add
ret
clc
adc
jo
jecxz
mov
cmp
and
sub
mov
push
enter
test
popa
clc
push
push
and
dec
push
xchg
inc
push
push
xor
in
repz
cmpb
stc
pop
scas
ljmp
clc
xor
aas
loopne
cmp
cmp
scas
pop
in
pop
push
adc
and
bound
in
jae
leave
in
mov
add
div
push
insb
xchg
aas
sbb
popf
jae
ja
aad
pop
and
stos
jno
fimull
lea
test
cmp
leave
popf
inc
adc
xor
test
dec
imul
push
inc
adc
test
sahf
divl
insb
push
inc
pop
insl
mov
notl
xor
scas
rcl
jmp
adc
ret
rclb
clc
xchg
ds
pop
imul
leave
inc
jmp
shrb
aad
mov
inc
add
shl
pop
nop
push
and
push
pop
xchg
jo
pop
and
rolb
bound
push
aad
lahf
neg
inc
xor
inc
in
pusha
xor
adc
mov
pop
shlb
pop
or
or
sub
sbb
add
std
push
orl
cwtl
xchg
cs
ror
or
dec
pop
hlt
mov
pop
loope
rorl
rcr
insl
imul
aaa
jae
cmp
int
orl
shlb
xchg
dec
rcll
sub
sahf
add
fcompl
insb
inc
mov
jle
icebp
xchg
test
cmp
call
stos
hlt
mov
lea
cld
mov
stos
sti
push
mov
mov
fcoml
pop
pushf
adc
out
jne
out
mov
addl
push
enter
sti
lret
push
jnp
inc
ja
or
fsubrp
jg
mov
mov
call
jge
jl
sbb
push
mov
cmpsl
sti
sbb
stc
mov
inc
lcall
shlb
cwtl
fisubrl
mov
out
shlb
adc
adc
and
push
mov
movsb
data16
cli
dec
call
mov
and
pop
ja
mov
jg
lock
fwait
dec
push
pop
sbb
addl
jmp
and
aaa
jne
or
sbb
inc
testl
cli
xchg
mov
jnp
pushf
outsl
jecxz
or
not
mov
lods
adc
testl
xor
mov
punpcklwd
stc
xchg
mov
pop
fadd
sub
cmp
scas
dec
jo
aas
cmp
call
ss
test
mov
pop
lds
xchg
out
mov
test
or
iret
hlt
xor
push
or
icebp
clc
mull
cmp
jnp
push
push
ror
xor
inc
sahf
xor
mov
add
int
stos
jne
adc
jnp
scas
jb
test
js
mov
or
sub
xchg
mov
mov
ja
sub
mov
lock
sub
inc
add
test
mov
pop
xchg
sub
jmp
mov
and
mov
and
mov
pop
xchg
or
bsf
sub
push
in
mov
lret
inc
mov
jl
icebp
cmpsl
andb
outsl
lds
xchg
mov
dec
xchg
fldcw
inc
pop
lock
pop
in
xchg
sti
cmpb
movsb
mov
xor
xlat
insl
jmp
lret
cmp
fdivl
or
fsubl
sahf
cwtl
out
pushf
mov
add
or
outsl
cmp
loop
jnp
jns
cmpsl
fildl
xor
sahf
aad
out
push
sub
shrl
mov
inc
lods
repz
repz
mov
mov
decl
sub
or
xchg
push
aas
scas
adc
jnp
aam
or
shl
fstps
and
out
in
cwtl
sbb
rcl
add
cmpsb
lahf
lods
out
and
mov
ret
push
push
pushf
fsubr
jnp
jo
adc
cmc
pop
es
jne
push
ljmp
sbb
dec
cmp
pop
sahf
ss
jmp
mov
testb
pop
sbb
and
stos
ficoml
xor
hlt
mov
sbb
shl
sub
add
push
test
test
bound
push
insl
aas
mov
cmp
xor
sbb
loop
push
dec
add
jae
push
pop
cwtl
xor
pop
or
xor
fwait
popa
jecxz
mov
nop
jbe
mov
aas
pushf
dec
inc
js
lods
sahf
pop
in
inc
out
gs
pop
pop
or
cmpsb
and
cmp
sbb
lds
mov
lahf
pop
dec
xchg
inc
mov
xor
shrd
sbb
xchg
lret
mov
jns
cs
jl
sbb
dec
in
lods
sbb
jecxz
insb
cmp
movsb
mov
sti
push
push
pop
xchg
shll
push
fisttpll
shl
pop
and
rclb
xor
and
loopne
mov
shl
aas
call
or
into
dec
cld
mov
dec
sub
push
or
lds
push
stc
imul
gs
xor
into
inc
loop
xor
mov
repnz
inc
orl
addr16
imul
test
push
cli
shlb
movsl
lahf
mov
inc
mov
aaa
pop
mov
jb
push
sub
sbb
dec
push
andb
push
nop
sub
ret
or
das
adc
lock
ja
cmpsb
jp
push
ret
or
fisttps
fldenv
mov
lock
aas
ss
xor
cmpsb
and
js
clc
mov
mov
dec
imul
push
fadds
mov
mov
xchg
push
and
ret
ljmp
cmp
mov
dec
dec
jge
pop
test
or
out
or
test
push
add
filds
pusha
cmpb
and
mov
push
in
mov
iret
rorb
push
jb
and
jae
push
sbb
jns
mov
and
ja
aaa
out
dec
add
lahf
data16
jecxz
mov
jno
das
and
xchg
push
repz
cmp
iret
pop
pop
decl
fildl
divb
xchg
inc
xchg
jb
adc
insl
sbb
jge
xchg
and
inc
lahf
xchg
jae
sbb
cmpsb
repz
push
pop
push
sub
cmpsb
pop
or
pop
repnz
dec
in
adcb
mov
cmp
mov
lcall
jg
sub
jns
and
inc
cmp
add
loop
sbb
mov
loopne
jns
dec
mov
in
sub
inc
in
int
test
fsubr
mov
dec
xchg
imulb
les
mov
rorl
xor
add
mov
push
and
les
test
outsl
sbb
icebp
in
ja
inc
sbb
cli
mov
jl
xchg
cmp
out
pop
ds
adc
sbb
lds
pop
nop
sbb
sbb
sbb
mov
inc
or
shll
pop
push
dec
add
fistpll
jp
fnstenv
test
mov
roll
mov
mov
decb
xorl
fcomip
jbe
int3
mov
lds
cmp
cmp
jmp
xor
xorl
or
roll
jb
inc
imul
mov
push
mov
adc
push
bound
ljmp
test
xchg
movsb
jns
pop
cmp
mov
sbb
loop
lds
orb
lret
push
test
in
cmpsl
stc
pop
sub
jno
lahf
mulps
xor
roll
mov
cmp
or
xlat
out
pusha
cltd
arpl
das
cli
push
mov
lods
mov
out
inc
inc
aaa
mov
jl
ds
call
xchg
cmpsw
mov
test
sbb
jl
sbb
out
lret
int
push
and
fs
rcr
fstpl
jp
cmp
lcall
pop
push
inc
hlt
xchg
out
aaa
push
sbbb
inc
add
add
lock
loope
aam
jb
and
lods
fistps
and
test
and
cmp
jo
inc
rol
mov
or
mov
aam
imulb
pop
jae
lds
orb
push
and
xchg
xchg
xchg
cs
decl
adc
rcll
and
das
lds
ljmp
jae
ss
xchg
iret
and
aas
addr16
out
sub
out
cli
push
xlat
dec
pop
lods
or
repz
hlt
adc
clc
ret
xchg
push
xlat
jecxz
aas
mov
ror
add
sti
loop
enter
mov
sbb
inc
arpl
mov
xor
adc
jo
xor
xchg
out
out
cmpb
cltd
fs
or
inc
or
pop
ja
lret
mov
add
sub
in
in
rclb
mov
ss
mov
pop
in
js
mov
test
mov
cmp
or
and
dec
pop
sub
data16
into
pop
jns
adc
mov
sub
push
jb
das
sbb
test
pusha
je
movsb
notl
cs
loopne
push
pop
andb
push
inc
aad
mov
cwtl
enter
int
fsts
or
mov
pusha
sbb
mov
sub
popl
jge
jg
or
call
and
in
arpl
and
test
test
aaa
insw
mov
insb
mov
mov
outsl
add
fiaddl
mov
inc
dec
mov
pop
jb
adc
decb
inc
sahf
insl
jnp
jne,pn
add
mov
sbbb
aam
add
aam
das
cmp
mull
andl
add
jne
dec
jg
jb
fdivr
inc
ljmp
inc
mov
das
add
dec
movsl
sti
roll
inc
mov
fsubs
mov
jo
out
leave
mov
adc
lods
cmp
xchg
fs
das
pop
jmp
and
lds
inc
fldt
cli
inc
sbb
pop
push
mov
xchg
lods
lods
int
jns
add
inc
fiadds
aas
xchg
mov
leave
es
mov
mov
sbb
aam
enter
aas
push
jg
cmp
aad
jp
jnp
fwait
mov
mov
pop
cmc
sarb
inc
pop
sbb
cmpsl
xor
inc
add
in
enter
sbb
inc
fs
loopne
dec
mov
inc
xchg
das
popa
push
out
insb
and
inc
push
mov
jb
icebp
ffreep
lret
mov
dec
cwtl
test
lret
xchg
icebp
xchg
ja
jo
test
hlt
push
xchg
inc
out
test
or
fbstp
movsl
addr16
xor
xor
xor
sti
pusha
inc
in
lret
je
adc
popa
loop
loop
add
js
jae
aaa
scas
cmp
inc
leave
cli
cwtl
outsb
enter
sbb
js
push
andl
arpl
shl
in
mov
jno
add
jne
imul
pop
ljmp
stos
dec
adc
mov
fadd
mov
ss
loope
clc
dec
mov
mov
push
push
sbb
lcall
popa
jno
es
cmpsb
xlat
dec
xchg
repnz
das
loop
ljmp
lock
dec
pop
sbb
jmp
fists
mov
jl
pop
lcall
sub
jg
insl
rcr
cltd
cli
mov
mov
mov
shlb
sub
ret
in
rolb
jmp
imul
sbb
pop
cwtl
js
int
inc
jg
push
int
sub
mov
out
sti
in
mov
fidivrl
cmovb
sub
imul
mov
rcll
lahf
adc
add
mov
movsb
xor
add
or
addr16
ret
rcl
fsubs
and
inc
mov
mov
or
ljmp
out
in
jge
out
pop
cmc
xchg
cmp
subb
add
dec
fiadds
push
std
pop
jg
dec
cmpsb
mov
cmp
push
and
push
jne
add
mov
je
pop
jno
mov
and
adc
push
addr16
push
push
inc
jno
mov
hlt
and
dec
and
jae
adc
push
pop
mov
jg
mov
cmpsl
inc
cmpsb
hlt
mov
inc
push
xlat
stc
nop
mov
cmp
add
or
xchg
push
mov
outsb
push
je
mov
xor
push
sub
inc
push
inc
pop
fdiv
fs
orb
cltd
jmp
cmp
sarb
stos
dec
dec
test
cmp
gs
sub
lret
cmpsb
fwait
sbb
ds
push
xor
ret
daa
out
lds
sbb
pop
mov
xchg
dec
pop
sub
mov
in
mov
iret
sub
arpl
mov
push
cltd
dec
pop
inc
jno
and
cmp
stos
pop
cli
je
cmp
push
pop
jl
adc
ret
pop
add
mov
popf
dec
faddp
call
jnp
sbb
arpl
sub
push
lahf
dec
sarb
pop
gs
cmp
aam
in
dec
divl
bound
xlat
jnp
and
mov
sahf
incl
mov
mov
jg
lods
cld
pop
sbb
fdivrl
mov
cmp
jge
mov
ret
sub
jp
push
aaa
cmpsl
sub
sub
aas
fcoml
mov
sbb
repz
dec
mov
bound
mov
test
es
clc
or
repnz
mov
push
das
jbe
xchg
jne
call
mov
mov
dec
dec
add
fldl
or
mov
xchg
xor
push
dec
adc
addr16
mov
popf
pop
cmp
cmpl
pop
add
mov
cmpsb
or
les
lahf
push
cld
push
lock
sbb
gs
mov
mov
jmp
jae
popa
ret
sub
jne
int3
push
add
fidivrs
sub
pop
pop
inc
pop
push
outsl
insl
mov
repz
loop
mov
mov
roll
out
add
fsub
cmp
stos
out
sbb
add
outsl
cmpsb
in
or
adc
jne
sahf
sub
pop
das
jle
mov
outsb
das
jns
int
out
ja
pop
push
fisttpll
ja
enter
push
sbb
mov
adc
fs
in
lahf
jp
std
push
mov
paddusw
sbb
push
pusha
js
loop
adc
lods
and
jae
insb
std
mov
cmpsb
sbb
pop
hlt
jl
repnz
sti
inc
sbb
mov
dec
sbb
faddl
sub
test
adc
inc
pop
sbb
int
das
jns
iret
movsl
sbb
fisttps
sub
pop
jae
and
inc
mov
add
lret
andl
dec
bound
test
lods
hlt
das
add
stos
frstor
and
aam
mov
icebp
into
rcrb
pop
pop
inc
inc
jno
cmp
jae
popa
stos
test
shlb
testl
xor
sbb
int
bound
emms
jnp
adc
mov
pop
fmuls
cwtl
loope
cmp
lcall
sbbb
mov
pcmpeqw
jbe
xchg
jp
xchg
sbb
hlt
mov
xor
mull
daa
jg
adc
lods
outsb
fcoms
arpl
add
adc
sbb
add
xor
fwait
pop
mov
sarb
out
pop
stos
in
push
or
les
or
movsl
push
int
mov
xchg
mov
insb
sub
pop
hlt
adc
bound
add
lcall
cmc
loopne
pop
dec
stos
inc
inc
add
scas
les
mov
out
and
faddl
mull
push
push
fiadds
out
dec
fcomp
insl
xchg
xchg
mov
xlat
scas
cmp
enter
jae
mov
push
sub
lcall
and
jg
cld
movsl
iret
gs
flds
cmc
pop
into
outsl
nop
xchg
xorl
jl
and
mov
iret
sahf
insb
imul
test
jle
aaa
int
sbb
scas
pusha
push
popa
sbb
cmc
in
mov
sti
es
jnp
pop
call
inc
js
inc
mov
mov
es
mov
or
dec
aad
adcl
xlat
fdivp
adc
or
inc
inc
and
adc
pop
inc
or
jmp
lds
or
xchg
mov
rclb
push
loopne
xchg
jb
ja
sysenter
mov
jle
mov
jns
scas
inc
xchg
repnz
dec
ljmp
dec
and
hlt
out
cmp
mov
cli
lds
xor
jge
jmp
std
push
stos
sar
sarb
mov
das
or
sub
add
inc
ffree
fabs
std
popl
adc
out
xor
js
mov
mov
lahf
pop
aas
and
push
aas
pop
or
iret
inc
in
pop
fstpt
push
daa
jbe
dec
iret
xchg
mov
mov
repz
cmp
push
add
mov
cmp
mov
cmp
and
mov
stc
xchg
jge
cmc
int3
pop
call
loopne
fistpll
cmpsl
cmp
cltd
dec
or
mov
cmp
cs
fsts
mov
ss
mov
arpl
sahf
std
dec
dec
decl
push
aam
fists
cmp
int3
in
je
test
sub
mov
stos
sub
fcmovnu
gs
xor
and
clc
stos
pop
adc
lahf
std
out
mov
andl
cmp
cld
jge
aad
dec
stos
inc
or
sbbl
sub
das
adc
fisubrs
push
or
cmp
fcompl
lcall
add
les
sar
sub
inc
insl
in
inc
xchg
and
pop
dec
pop
jmp
xor
cli
cmc
cmc
jno
imull
adc
mov
je
cli
fbld
mov
pop
shll
or
pushf
enter
es
push
pop
dec
mov
fisubrl
test
and
pop
push
call
lahf
stc
movsb
jp
repnz
sbb
xor
xchg
outsl
mov
shrl
mov
jns
jbe
popa
hlt
sbb
rclb
lahf
mov
orb
sbb
ret
mov
mov
mov
add
pop
jl
pop
push
xor
jb
add
xchg
lahf
mov
jns
sbb
lods
lods
adc
and
aas
dec
cmpsl
pop
xchg
pop
xchg
aam
push
mov
pop
xor
add
cmp
jae
pop
xchg
std
fdivrl
cltd
loop
or
xchg
out
mov
icebp
cmp
xchg
sbb
gs
ret
sbb
testb
repz
jbe
pusha
pop
adc
fwait
sbb
nop
test
jo
xor
sti
arpl
mov
pop
jb
shll
push
out
add
in
fisubrl
fldl
out
mov
jns
xor
and
jg
push
hlt
sti
dec
lods
cmpsb
pop
jge
je
pop
pushf
adc
xor
bound
lcall
lods
jnp
mov
add
nop
fdiv
in
jo
lods
mov
fsubrl
mov
pop
ficompl
mov
sbb
jmp
cmpsl
ret
xorl
jl
push
out
movsl
jae
push
push
mov
into
cmp
pop
fidivrl
adc
aaa
xchg
loope
xchg
mov
jecxz
imull
cltd
or
or
inc
jge
pop
daa
push
push
stos
hlt
pop
dec
in
aaa
jge
shlb
mov
and
loopne
adc
sbb
out
sub
sub
cmp
inc
arpl
push
insb
mov
xor
inc
xchg
stc
mov
ljmp
jnp
outsb
shll
xor
mov
mov
mov
in
notl
cwtl
std
mov
les
rclb
sbb
and
pop
or
in
pushaw
mov
add
int
mov
aad
jae
in
push
pop
jo
jns
sub
js
data16
lock
dec
fcomps
in
mov
sbb
in
cli
inc
pop
ret
lock
clc
adc
add
jmp
arpl
stc
rcrl
dec
cmp
mov
data16
decl
inc
mov
cwtl
dec
cld
roll
mov
jecxz
sub
adc
ret
out
test
mov
or
mov
mov
pop
jns
push
mov
push
cli
mov
adc
mov
ror
xchg
fists
es
mov
in
cli
pop
sarb
shl
jle
xchg
ds
mov
lahf
scas
scas
out
add
popf
adc
inc
mov
push
adc
fmull
cmc
fcmovu
loope
push
shll
sub
dec
sbb
stos
push
mov
fldcw
cwtl
mov
outsb
pop
pop
jns
xor
jl
push
das
inc
xchg
negb
dec
inc
inc
and
movsl
cmp
add
mov
in
std
into
cltd
cmp
les
stos
xchg
ss
call
push
pop
mov
cwtl
pop
call
in
repnz
sub
jmp
xchg
sub
fsubp
and
jae
pushf
xchg
test
lret
mov
rcll
jno
ret
cltd
shlb
and
pop
icebp
fimull
jo
sbb
xchg
rcll
js
in
loop
xchg
pusha
in
pushl
mov
mov
fildl
pop
fstps
lea
sarb
mov
xchg
pop
jb
mov
mov
je
daa
pop
add
add
mul
jbe
pop
out
push
dec
and
jne
daa
inc
ss
cltd
lahf
fwait
cwtl
mov
int3
push
add
push
lahf
loopne
sub
adc
sub
pop
push
test
subb
add
mov
jnp
or
mov
iret
mov
cmpsb
testl
nop
mov
mov
inc
insb
mov
or
adc
aam
dec
push
fadds
int3
sti
fisubl
push
lea
test
roll
jmp
jnp
fsts
into
aad
push
lea
leave
cli
shrl
xorl
lea
xchg
cmc
pushl
test
popa
aam
jmp
or
in
incl
and
jbe
int3
fimull
rorb
mov
adc
es
outsl
mov
cs
push
mov
sbb
jae
mov
jmp
lea
test
mov
dec
xor
and
subb
test
shlb
jge
sahf
lds
xchg
jmp
das
int3
mov
les
mov
push
push
jp
push
mov
add
insl
in
push
and
xchg
push
and
orl
cltd
inc
add
fidivs
fistpll
lahf
mov
cmpsl
adc
mov
cs
out
xlat
inc
les
rolb
lods
adcl
aad
pop
ficomps
push
dec
gs
clc
movsl
xor
push
pop
jg
xchg
ja
push
pop
jo
ljmp
lret
xchg
ds
mov
rcll
push
fcomps
pop
add
jecxz
fnstcw
adcb
sbb
nop
pop
mov
mov
pop
outsl
jae
outsl
add
lahf
and
cltd
mov
add
idivl
cmp
xchg
cltd
je,pn
arpl
aam
cltd
lret
and
fisubrl
or
mov
ja
fstl
es
std
xchg
std
mov
push
push
les
dec
fstl
lcall
cmpsl
inc
mov
cmp
inc
stos
sbbl
sub
push
negb
aad
test
push
fidivrs
mov
leave
scas
xchg
inc
sub
adc
lods
mov
xor
mov
shlb
cmp
gs
pop
xchg
aas
dec
dec
std
mov
rclb
add
out
xor
ret
lods
mov
fnstenv
dec
iret
pop
cmc
push
add
pop
adc
es
fimull
xchg
mov
fdivrl
pop
mov
cmp
in
arpl
int
xor
mov
loopne
mov
cwtl
movsl
out
dec
hlt
pushf
fsubrs
andl
jecxz
adcb
push
mov
in
and
mov
fimuls
mov
mov
sbb
pop
or
fmull
and
xlat
and
inc
inc
and
inc
mov
mov
hlt
add
popf
pop
jb
rorl
xchg
mov
filds
fwait
jbe
xchg
pop
mov
xlat
inc
data16
sub
mov
clc
mov
testl
das
cwtl
pop
rol
cmp
stos
pop
cs
xchg
das
xor
aaa
lods
xchg
pop
outsl
adc
lods
pop
sbb
out
xor
mov
cmp
fcoml
ds
mov
push
adc
xchg
divl
aam
inc
outsb
xlat
aaa
ss
dec
push
add
jl
mov
mov
movsw
mov
insl
cmpsb
pop
pop
pop
call
out
lock
iret
int
pop
loop
testb
mov
das
jle
aam
dec
pop
fldt
adc
jecxz
das
popa
in
orl
adc
jp
pop
outsb
std
clc
lcall
aad
movsl
cmp
leave
inc
xchg
mov
jmp
enter
repz
cmovnp
cmp
inc
pushl
jl
mov
das
enter
cltd
dec
cmp
sarb
jl
sbb
pop
fst
lcall
cmp
iret
dec
inc
xor
sbb
mov
sub
lcall
out
nop
or
sbb
lea
inc
sahf
add
xchg
mov
lcall
xor
cmp
jmp
mov
mov
stos
sbb
shll
scas
mul
xor
adc
dec
out
jmp
imull
and
mov
cmpsb
adc
nop
sub
or
xchg
stc
das
les
xchg
xchg
sub
sbb
cmp
imul
pusha
dec
xchg
cmp
rclb
pop
jnp
pop
cmp
mov
in
mov
push
mov
pop
xchg
add
rcl
sbb
hlt
lods
inc
imul
push
push
or
test
jno
mov
add
cld
or
lods
adc
inc
sbb
add
divl
xchg
xor
xor
in
jl
dec
mov
lods
cmc
mov
leave
testl
rcll
cltd
leave
test
arpl
mov
fsubrl
out
inc
outsl
or
ss
call
cs
cltd
pusha
fwait
mov
cmp
add
mov
nop
jb
xchg
popf
mov
xchg
sbb
test
in
aad
repnz
sbb
hlt
jg
std
iret
test
xchg
std
inc
push
stos
dec
out
dec
mov
in
negl
mov
in
aaa
push
xor
hlt
pop
mov
lea
jno
js
dec
cmc
mov
mov
call
mov
test
decl
mov
ljmp
pop
add
jmp
cltd
push
xor
inc
add
mov
cmp
inc
pop
jns
inc
in
outsb
call
fbld
mov
or
in
dec
loope
outsb
int3
mov
jnp
popf
mov
pop
adc
xor
pop
out
inc
sbb
mov
mov
cmovns
push
insb
popa
push
pushf
in
xchg
pop
xor
bound
xor
je
jl
jle
lods
mov
and
pusha
mov
lods
push
mov
inc
inc
daa
push
jne
fwait
lret
jp
in
lds
or
ret
fisttpll
jo
adc
sub
or
repz
adc
out
fdiv
inc
lods
test
aas
fists
loopne
jl
sbb
mov
aas
je
cmp
dec
pop
dec
add
data16
test
insl
movsl
mov
repz
sahf
sbb
jae
lcall
roll
add
fcomps
pop
imul
jp
inc
addr16
or
pushf
adc
out
push
mov
xchg
xchg
pushfw
dec
cmc
jle
adc
lea
fwait
aam
inc
nop
cld
inc
testb
mov
cmpsb
out
arpl
mov
loope
jge
add
sahf
call
cmp
add
dec
pop
imul
roll
pop
pop
movsb
outsb
mov
mov
imul
loopne,pn
das
rclb
stc
leave
jno
mov
fwait
pusha
nop
mov
or
jg
xor
add
jnp,pt
cld
inc
jb
mov
inc
dec
inc
enter
xchg
pop
jnp
xor
js
add
mov
mov
lods
rorb
outsl
sub
xchg
mov
loopne
xchg
mov
lret
icebp
and
jle
fs
arpl
add
sub
adc
jecxz
push
pusha
xor
add
sbb
push
int3
jnp
cld
pop
in
les
push
icebp
mov
jl
push
xor
xlat
xchg
sub
aaa
enter
movsl
mov
sub
mov
adc
xor
mov
mov
mov
iret
decb
es
dec
or
dec
push
test
outsl
adc
push
into
in
xor
sbb
imul
push
push
mov
jns
xor
adc
or
jo
gs
inc
pushf
pop
mov
xchg
shl
cmp
mov
dec
jp
aad
mov
subb
int3
inc
xchg
adc
stos
outsb
loop
cmp
adc
sub
push
xor
mov
xchg
add
xor
or
pop
sbb
rclb
rolb
aam
xchg
cltd
lods
pop
fisubl
outsl
mov
xchg
ds
insl
in
xor
ror
sti
sbb
and
xorl
push
rclb
xor
mov
test
jge
in
cwtl
jge,pt
sbb
rcl
cmp
lods
or
pop
dec
dec
test
and
movsb
and
pop
mov
and
cmpsl
jns
sbb
cmpsl
ret
pop
test
push
push
cmc
das
lret
sub
pusha
mov
and
push
dec
xlat
stos
imul
out
rcr
push
stos
cmpsb
pop
mov
pop
fistps
xchg
sbb
push
jno
aam
xchg
or
mov
push
jno
ret
lahf
enter
call
lret
add
or
xchg
fistpl
push
aam
and
gs
cmp
dec
clc
sbbl
pop
loop
mov
fimuls
lcall
pop
push
inc
inc
push
mov
push
sub
ret
mov
pushf
jbe
dec
pop
mov
lahf
mov
mov
ret
push
repnz
fisubrl
dec
pop
in
mov
cs
inc
mov
popf
into
mov
cmp
jbe
icebp
mov
mov
fs
and
mov
int
divl
ret
jns
shrl
rcr
andl
sub
add
pusha
sbb
pop
pushf
jg
xabort
adc
dec
jb
mov
sbb
adc
divb
std
imul
inc
pushf
add
pop
jnp
out
out
repz
cwtl
dec
pop
mov
lock
loop
sbb
rolb
data16
scas
jno
sub
aaa
or
mov
inc
in
rcll
stos
lahf
mov
inc
add
cmp
xor
mov
dec
jg
shrb
out
test
sbb
mov
and
sbb
push
mov
mov
and
jge
push
pop
push
xor
in
cmp
rcrb
hlt
sub
call
fnstcw
add
lret
mov
data16
dec
movsl
ljmp
xchg
cmpl
xor
ror
in
push
je
mov
push
sub
sbb
sti
cmp
test
or
movsl
adc
and
add
ss
mov
int
and
repz
fwait
cmpsl
mov
inc
sub
xor
fmull
lock
ljmp
pop
mov
xor
shrb
dec
jbe
mov
jge
aam
rorb
stos
mov
jmp
es
jg
pop
in
loop
ja
mov
dec
push
cmpsb
xchg
jne
mov
inc
out
jno
imul
pusha
or
or
inc
and
pop
out
or
xorb
jne
xchg
or
fildl
inc
test
cmpsl
out
jg
stos
push
xchg
and
push
mov
jne
lock
sub
xchg
jbe
push
pop
push
push
dec
pop
dec
daa
in
add
add
jecxz
cmp
aam
push
adc
jnp
cltd
mulb
xor
dec
movl
shlb
mov
lret
fcompl
imul
lock
stos
or
pop
lock
push
ljmp
out
mov
sbb
sbb
pop
fimuls
orb
shrb
scas
inc
repz
jnp
lret
xchg
pop
outsb
stos
out
push
in
adc
add
imul
dec
xor
push
das
inc
inc
or
mov
fwait
jmp
push
fldt
scas
push
loope
jge
xchg
loope
cs
rorb
jp
ret
or
cmc
addr16
push
dec
aad
jl
incl
cmp
sub
cmpsl
out
ret
inc
rcll
sahf
fnstenv
shlb
push
movsb
inc
or
test
shl
rolb
dec
or
pop
lods
xchg
shl
test
jmp
mov
pusha
out
sub
mov
scas
xor
fcoms
adc
in
pop
pushf
shrb
ds
sbb
aam
sbb
cmpsl
mov
stc
iret
xchg
sub
aaa
test
xchg
add
addb
fwait
cltd
push
and
xchg
add
ss
aaa
ss
repnz
xor
outsl
test
int
dec
mov
mov
dec
pop
repnz
das
repnz
pop
lock
pop
daa
es
sbb
adc
out
push
lds
mov
das
adc
push
xor
rol
dec
lea
scas
mov
add
cmp
ja
daa
add
call
mov
sub
dec
imul
cmp
lds
fwait
stos
test
jns
mov
xchg
jo
popa
mov
imul
das
nop
jne
add
push
lods
sbb
int3
xchg
movsl
notb
add
xor
inc
fdivrs
pusha
fs
and
jg
mov
xchg
fwait
outsb
adc
sub
adc
subl
imul
xlat
push
add
imul
add
push
jo
insb
or
add
je,pn
mov
call
lahf
inc
push
inc
arpl
stos
dec
mov
mov
sbb
cmc
cmpsb
or
lock
pop
push
add
leave
mov
jl
cwtl
outsb
add
inc
daa
or
movsl
push
push
mov
xor
sti
in
dec
mov
sub
shrb
nop
loopne
nop
fisubrs
sbb
mov
mov
jae
das
push
mov
jnp
notb
out
lcall
pop
aaa
lahf
add
test
pushf
movsl
xor
add
sub
mov
les
lahf
mov
cmp
sahf
xchg
mov
das
aas
in
jbe,pn
pop
or
popl
in
sbb
lea
pusha
lret
out
or
sti
shl
in
inc
inc
ret
add
jae
ds
shll
repz
in
xor
mull
pop
dec
push
mov
repz
aad
ret
cltd
pop
shll
fisubrl
rcrb
js
sub
jns
mov
movsl
cld
aaa
xchg
xchg
pop
andl
pop
int
jg
mov
and
or
cmp
outsl
pushf
arpl
imul
out
sti
test
xchg
jmp
add
in
mov
lea
aam
mov
test
jns
mov
pop
fdivl
pop
pop
ja
dec
imul
je
dec
mov
das
das
push
add
jbe
push
add
in
sub
bound
inc
add
xchg
jno
push
or
cld
jmp
or
jge
fwait
sbb
cmp
xlat
aad
pop
adc
cmp
xor
adc
fcoms
adc
jo
out
dec
dec
cli
arpl
push
movsl
inc
ja
jnp
inc
cwtl
std
call
and
mov
sbb
out
mov
and
add
push
enter
xlat
push
jge
push
inc
sbb
or
jmp
fdivrp
and
pop
repnz
inc
mov
push
mov
mov
push
mov
or
scas
lods
mov
cmpsb
xor
xor
addr16
mov
cmp
inc
les
ljmp
addl
dec
push
dec
ficoms
cli
jecxz
cmovle
or
add
cs
loopne
int3
scas
cmp
arpl
add
fnstsw
addr16
jns
rcll
mov
je
in
dec
add
xchg
rolb
push
mov
xchg
or
gs
lds
orl
cmp
call
pop
sbb
mov
hlt
das
push
sub
xchg
lds
loop
imull
pop
nop
pop
aaa
repz
adc
cmc
inc
add
dec
jl
cmpb
dec
cmp
cmc
outsb
mov
je
ss
mov
shll
in
fcomps
daa
jno
cmp
pop
rcll
adc
cmp
mov
and
adc
fisubl
adc
push
mov
setg
rcl
jbe
aam
sahf
sbb
rcr
int
xor
divb
pop
fwait
jmp
add
rcll
inc
test
push
jns
jns
adc
fists
dec
push
data16
xchg
xor
test
loope
scas
pusha
push
jl
daa
aaa
scas
add
scas
adc
or
shrl
and
jae
insl
mov
or
jge
popf
int3
push
cltd
fwait
sahf
dec
lds
mov
cmp
mov
or
ss
sbbb
shrl
enter
mov
std
fdivr
out
sbb
cmp
cmp
hlt
push
mov
and
pop
rcrl
dec
mov
push
jb
lea
fneni(8087
and
aaa
cld
inc
icebp
outsb
negb
mov
or
mov
adc
xor
jl
or
lea
cmpsb
mov
dec
push
xchg
sbb
or
or
test
jp
and
loope
sub
sub
inc
mov
add
ja
fcmovu
inc
mov
loop
or
push
xchg
icebp
enter
pop
mov
sub
inc
cld
dec
shl
lods
dec
jne
and
in
mov
int
push
jb
repz
xlat
mov
adc
lcall
adc
mov
sbb
cmpsb
sbb
jg
jb
mov
enter
cwtl
dec
sub
and
dec
imul
push
mov
in
cmovns
jno
cwtl
dec
mov
out
nop
push
aas
sbb
fs
mov
into
dec
dec
jg
jp
inc
mov
cmpsb
loop
xchg
jmp
dec
repz
push
push
aaa
lret
mov
jne
out
mov
inc
gs
add
mov
sbb
out
aam
mov
scas
je
mov
push
or
inc
dec
stos
push
xor
push
push
inc
ja
xchg
stos
dec
adc
mov
aam
push
arpl
in
push
push
xor
out
jge
adc
mov
inc
xorb
fsts
sbb
mov
jmp
inc
xchg
loopne
sub
dec
mov
int3
es
leave
dec
insb
mov
jl
mov
lret
xchg
push
dec
inc
ffree
sbb
imul
and
test
adc
and
sub
jnp
adc
hlt
ret
mov
ss
addb
jp
test
and
fyl2xp1
leave
std
adc
cmp
aas
jmp
xchg
push
push
imul
je
or
fstps
push
movsb
subb
cmp
loopne
push
cmp
mov
jmp
mov
mov
mov
sub
scas
add
add
call
cmp
hlt
mov
into
fsubrs
push
addr16
jl
cmp
out
and
test
sbb
and
sub
cmpsl
mov
push
mov
das
and
lahf
dec
cs
daa
or
cltd
inc
mov
pop
in
or
popf
adc
xchg
xchg
and
in
addr16
data16
push
jae
int3
jecxz
nop
pop
sarl
outsb
push
cwtl
shrl
adc
push
mov
imul
stos
call
enter
cmp
out
xlat
das
add
mov
ret
mov
shrb
leave
cmpl
lods
scas
jnp
ret
cmp
xor
dec
sub
inc
mov
inc
xchg
xchg
imul
dec
lods
andl
xchg
insb
bound
das
jbe
sar
cld
cmc
arpl
inc
jmp
xchg
das
push
mov
icebp
es
repnz
and
lds
xlat
or
jg
sub
pop
hlt
mov
outsb
jo
cld
jo
notb
dec
iret
dec
push
scas
or
in
push
ret
push
js
fidivs
sti
out
sar
xchg
call
dec
fsts
movsl
jmp
sbb
js
dec
enter
out
pop
std
aaa
pop
shrb
pop
or
ds
sbb
xor
push
jle
sub
sbb
push
out
int3
jmp
out
cld
adc
xor
mov
cmc
xchg
mov
ja
xchg
xchg
andb
ja
gs
jge
aas
mov
cmp
shrl
loope
lret
jecxz
sbb
cmp
xchg
loopne
lret
loop
adc
cli
dec
or
sbb
outsl
insl
daa
inc
or
push
roll
es
mov
rolb
dec
mov
fnstsw
mov
lods
push
xchg
mov
add
sbb
shrl
fcompp
and
xchg
lock
stos
ret
out
test
js
inc
arpl
mov
les
pushw
daa
scas
mov
jne
adc
xor
push
inc
xchg
dec
inc
test
or
xor
jne
jge
jae
sbb
out
jp
cli
jmp
jge
cmp
fnsave
mov
add
push
sbb
aas
or
jae
push
mov
mov
push
add
cmp
mov
push
pop
gs
lock
jp
test
mov
call
ja
imul
loope
loopne
xchg
jnp
cmp
fildl
xchg
daa
mov
jbe
push
cmpsb
mov
mov
add
push
push
shrb
pop
lods
imul
push
fisubl
sbb
dec
fdiv
jo
jne
mov
sub
ljmp
xchg
jp
in
fldcw
push
cmc
cmp
adc
mov
adc
xchg
cmp
jo
pop
add
imul
mov
sub
or
test
sbb
mov
dec
mov
stos
cmp
jle
out
jo
xor
push
pop
sbb
or
and
pop
scas
dec
enter
sub
fs
imul
repnz
sbb
pusha
dec
xor
bound
pushf
je
stc
jge
jnp
lahf
mov
or
sub
push
adcb
loope
or
bound
test
jp
lcall
push
stos
sti
dec
xchg
test
mov
jns
xchg
or
dec
cmp
lcall
dec
pop
sub
push
idivb
js
test
add
addr16
adc
sub
lret
lret
in
sub
xchg
ja
int3
cmp
ret
xchg
rolb
mov
lcall
decb
sub
jnp
mov
nop/reserved
xor
ret
xor
mov
insl
cmp
adc
dec
je
rclw
dec
adc
fnstcw
outsl
lods
clc
mov
mov
sbb
cmp
sub
and
push
bnd
mov
outsb
or
push
aas
aad
lds
sbb
mov
or
cmp
mov
inc
jno
into
mov
into
pusha
mov
shrb
pop
sbb
mov
addb
ret
gs
outsl
jnp
imull
xchg
mov
mov
and
or
cmp
movsl
or
fbld
dec
sub
cmpsl
and
stos
js
dec
sbb
jmp
pushf
les
push
int3
rcll
inc
mov
loop
cmp
movl
push
and
dec
fcomip
pop
jae
and
in
sbb
dec
fisubrs
lret
pop
sub
push
mov
xor
mov
xchg
ljmp
iret
mov
sub
cltd
cwtl
repnz
sbb
jg
rolb
xor
cmpsb
xor
mov
mulb
add
ljmp
cmp
mov
push
ret
testb
xor
dec
pop
nop
or
test
testw
imul
inc
movsb
iret
pop
push
xchg
jne
sub
gs
rcr
mov
jmp
lds
xchg
test
push
imul
cld
cs
scas
and
jle
mov
pop
pop
fwait
pop
fdivs
lock
scas
mov
mov
inc
js
addr16
sahf
cmp
and
scas
mov
mov
xor
pop
je
mov
adc
mov
pop
outsb
jle
mov
sti
testl
lret
inc
push
jbe
clc
inc
adc
xchg
ja
jne
pop
outsb
clc
icebp
push
mov
sub
shrl
sub
cld
pusha
pop
int3
add
sbb
pop
mov
sahf
push
and
addb
aas
jle
out
aad
jle
or
arpl
xchg
gs
pop
stc
leave
cmp
sbb
mov
mov
sub
in
and
outsl
xchg
mov
out
in
jg
int
sbb
lds
xchg
mov
hlt
js
push
mov
push
add
sub
push
pusha
and
jl
in
push
xchg
inc
leave
push
xchg
popa
inc
and
adc
adc
add
mov
or
addl
pop
push
and
xchg
pop
call
sbb
sbb
outsl
ljmp
mov
mov
jb
or
mov
mov
xor
xchg
push
jecxz
push
mov
cmp
pop
test
xchg
xchg
loopne
out
cltd
test
adc
pop
dec
cld
mov
pop
in
dec
enter
je
mov
dec
out
dec
out
jae
inc
mov
stos
push
mov
and
mov
mov
mov
jnp
push
xorl
mov
push
cmp
movsl
pushf
daa
jae
pusha
add
adc
out
jno
pop
adc
imul
sbb
pusha
cwtl
mov
test
mov
xor
mov
push
push
sahf
add
jle
mov
mov
fsubrs
adc
xchg
pusha
rsqrtps
push
xorb
int3
push
mov
or
inc
or
test
ss
pop
or
gs
cltd
mov
cmpsb
add
cmpsl
jo
add
in
adc
cld
add
loope
inc
pop
sub
fsubs
cld
push
jmp
or
mov
or
pop
inc
lods
adc
pop
out
mov
fldl
sub
in
in
xchg
jl
xchg
hlt
rcr
or
aad
fimuls
sub
imul
xchg
xchg
push
push
sahf
dec
outsb
add
sub
adc
mov
jno
inc
fdivs
ds
hlt
rolb
pop
aas
push
cmpb
cmp
insl
mov
stos
sbb
test
push
pop
mov
addl
stos
mov
cmp
sbb
xor
ret
pop
push
jmp
js
mov
adc
push
repz
cs
push
std
lods
jecxz
loop
mov
xadd
jns
mov
pop
popf
push
addb
mov
movb
jnp
pop
inc
stos
lea
jp
or
and
idiv
test
fisttps
sbb
out
cmp
mov
stc
push
test
xor
in
mov
xor
orl
icebp
mov
sarl
mov
scas
xorb
cli
shr
add
hlt
dec
xor
stc
mov
push
fimuls
xor
movsb
and
pop
test
push
test
jno
xchg
sbb
pop
hlt
fsts
dec
sbb
xchg
testl
aaa
inc
sub
out
add
jae
neg
and
idivb
lret
add
push
or
cmp
test
jae
adc
sahf
sbb
imul
pop
xor
sti
mov
aaa
xchg
pop
push
dec
and
sbb
pop
jge
test
cmc
push
and
dec
jecxz
in
pop
je
push
sbb
loop
xor
fwait
jns
ljmp
out
rcl
nop
loop
incb
bound
pop
xchg
dec
andl
movq
pop
adc
dec
xchg
cli
cmp
xor
sbb
cwtl
repz
fs
cmc
stos
push
int3
xchg
fstpl
aas
enter
push
or
loop
add
jle
jb
pushf
mov
pop
lret
xor
aad
xor
sub
ss
inc
adc
push
rorl
pop
add
ror
pop
pop
xchg
or
push
lahf
jg
dec
push
push
decb
cmc
or
aas
lock
loope
jge
mov
ret
popf
ret
xor
lahf
inc
lods
dec
adc
repz
data16
fimuls
leave
jno
cmp
sub
test
mov
aad
int
test
mov
scas
loopne
lods
xchg
inc
sbb
inc
sahf
add
leave
ljmp
cmp
jmp
mov
fimuls
mov
nop
nop
or
pop
mov
xchg
dec
mov
fcompl
outsb
popa
mov
test
push
fwait
stos
fidivrs
stos
push
rorb
jnp
js
imul
std
jp
sbb
add
sub
test
movsl
ss
scas
cmpsb
mov
pop
out
lahf
jno
pop
cmp
loop
or
xor
jae
xchg
mov
jnp
inc
leave
cmp
jl
pop
add
xor
inc
add
cmp
div
lcall
out
dec
das
add
jp
int
sub
aad
dec
xchg
mov
add
cli
stos
scas
idiv
sbb
popf
lock
lahf
xor
sub
aad
jecxz
das
mov
leave
inc
xchg
push
mov
push
jo
ret
jge
stos
mov
xorl
inc
xchg
icebp
sub
push
sub
lods
add
mov
in
cmp
adc
mov
mov
mov
es
rcl
push
add
and
dec
adc
cmp
jbe
data16
cmp
and
cld
daa
addr16
cmpsl
ret
mov
push
xor
clc
cmpsl
orb
lea
cmp
subl
push
jb
js
lock
roll
xchg
nop
sub
add
in
jmp
fadds
cmpsl
shll
aaa
inc
dec
pop
in
std
jmp
and
sbb
mov
lea
mov
pop
mov
mov
jg
pusha
imul
push
push
cmp
dec
sub
imul
clc
in
push
imul
inc
lods
jno
mov
jae
inc
jle
push
loopne
inc
add
popf
xlat
lods
sbb
add
xor
sbb
jno
sbbl
clc
push
jnp
jmp
into
cmp
fnsave
cmp
cli
xchg
movsl
arpl
cwtl
jge
inc
popf
add
jo
in
stos
insl
mov
adc
jge
mov
ss
popf
xchg
stos
sub
mov
xchg
adc
pop
adc
inc
fs
lahf
push
jmp
fdivl
mov
dec
addr16
or
pop
xchg
mov
icebp
mov
pop
sti
mov
imul
fs
xchg
jbe
pushf
cs
dec
jnp
push
sti
shll
rol
outsl
aas
jecxz
scas
fdivs
daa
push
dec
mov
outsb
inc
jbe
mov
dec
lds
lds
nop
repnz
ljmp
inc
test
hlt
jne
mov
and
mov
push
lahf
pop
sub
pop
les
lret
adc
cltd
push
int
les
pop
roll
cmp
ds
push
sarb
adc
cwtl
shlb
cmpsl
jns
sbb
push
xor
or
mov
adc
push
inc
mov
xchg
jmp
outsb
mov
imul
loope
inc
repz
adc
sahf
sub
xchg
rcrb
or
clc
lret
cwtl
inc
and
mov
sarb
add
test
sub
sub
adc
xchg
sbb
cs
mov
jle
lret
push
js
inc
lret
lea
pop
data16
or
cs
dec
add
push
cltd
fdivs
es
inc
popf
in
inc
pop
les
std
cmp
dec
mov
mov
fisubl
or
aas
mov
je
aam
loop
loopne
and
icebp
rcrl
cmp
daa
jb
or
xor
jecxz
push
inc
jp
xchg
mov
pop
jns
or
enter
cli
idivl
iret
std
jae
sbb
pop
dec
sub
pop
jp
dec
cli
add
mov
jp
pop
ret
push
fldl
lcall
arpl
mov
lcall
dec
adc
sbb
jbe
jnp
in
cli
push
inc
cli
sub
push
adc
adc
mov
push
push
pop
push
stc
jb
loope
mov
out
push
dec
mov
xorb
pop
mov
ss
lock
stos
push
xor
lret
cmp
mov
fidivrl
idivb
sbbb
inc
inc
mov
cmp
adc
sarl
sub
movsl
lret
sbb
mov
or
imul
and
xor
mov
stc
addr16
mov
xor
cmp
out
jmp
mov
inc
add
test
cltd
outsl
and
push
mov
mov
or
movsl
scas
cltd
jmp
mov
jae
and
xor
movsb
push
mov
mov
and
aad
jns
out
sti
jmp
movsl
into
daa
ret
les
add
ror
cmp
movsl
dec
mov
movsl
push
outsb
or
popa
mov
sbb
jbe
pop
inc
jge
imul
xor
in
call
iret
ficoms
xchg
outsb
adc
adc
xor
and
inc
cwtl
inc
sub
jp
test
adc
or
dec
add
shll
and
or
push
or
fisttpll
mov
pop
sub
mov
hlt
cmp
nop
cwtl
jno
inc
xchg
icebp
cwtl
xchg
mov
nop
or
xchg
fcomps
out
shll
sti
insl
rcrl
gs
inc
movsl
lahf
sbb
std
orl
popf
call
loop
add
pusha
in
lock
cmp
fildl
gs
into
xor
jl
mov
cmpb
xor
lret
and
jns
sbb
or
xor
add
test
jbe
and
pop
test
stc
das
repz
adc
fnstcw
jp
inc
push
call
mov
inc
lods
jae
push
sarb
push
hlt
bound
push
das
jge
lahf
and
jns
fneni(8087
mov
cmp
inc
pop
jecxz
push
test
or
pop
push
notb
imull
out
out
fdivl
test
pop
lahf
call
xchg
push
testb
dec
dec
mov
xchg
shll
add
stos
test
mov
mov
sahf
or
add
and
repz
out
ficoml
lcall
or
jne
mov
icebp
sti
fbld
inc
lea
test
inc
inc
cli
std
insb
lahf
imul
xchg
sub
fwait
push
mov
loope
movsl
sbb
push
jl
inc
aad
lea
shr
mov
lock
movsb
cmp
pusha
pop
mov
or
imul
imul
cmp
pop
clc
loop
push
or
adc
js
fwait
inc
fistpll
mov
pop
or
push
in
rolb
orb
mov
pop
mov
jge
inc
jne
mov
pop
mov
cmp
out
pop
pushf
rclb
gs
int3
ret
shlb
out
or
jbe,pt
xor
jns
xor
shll
lret
push
lea
ror
jecxz
mov
aas
lock
fsubrl
adc
mov
sbb
jl
cld
mov
xor
pop
pushf
daa
cmp
test
mov
pop
ss
int3
in
shrl
mov
xchg
push
push
pop
lods
xor
mov
jp
negb
fsubrp
mov
push
insl
mov
fcomps
xchg
dec
je
cmp
insb
push
xchg
bound
xlat
xchg
dec
jns
push
es
test
leave
popf
jns
or
xchg
idivl
lods
in
and
jae
mov
jbe
icebp
push
in
data16
sbb
fiaddl
fbstp
addl
mov
adc
sbb
decb
inc
fsts
or
sub
xchg
pop
dec
jne
inc
sub
arpl
push
add
pop
data16
sub
in
icebp
nop
fs
imul
pop
sbb
addb
jns
xchg
imul
std
cmpsl
cld
test
mov
fistpl
push
inc
movsb
jo
sbb
data16
jle
or
loope
adc
cmp
lds
aaa
fildll
mov
inc
inc
jno
inc
imul
sub
jae
repz
xor
in
lea
pop
mov
fimull
and
imul
shlb
cltd
push
add
cmp
test
xchg
inc
andb
nop
in
movsl
pop
mov
enter
aaa
fsubrl
pop
inc
push
xor
in
icebp
sar
ficoms
pop
stc
or
loopne
stos
and
bound
nop
roll
pop
mov
out
push
mov
sbb
fimull
dec
inc
or
sub
cmp
ret
mov
data16
mov
xor
jo
int3
push
test
jnp
inc
and
xchg
push
add
scas
int3
mov
decl
or
mov
sbb
mov
jb
imul
sub
xchg
jnp
adcb
push
dec
push
push
ja
stos
or
sub
aam
xor
xor
cmp
jle
jb
adc
inc
jge
dec
push
push
lcall
jbe
mov
dec
push
ljmp
sti
aam
jbe
aad
mov
sbb
and
test
and
mov
in
cld
add
lahf
aad
inc
out
and
xlat
mov
pop
lods
inc
inc
fmuls
movsb
mov
push
clc
push
cmp
pop
cmp
aas
jp
push
lds
mov
repz
repnz
jns
xor
xor
int
pop
int
iret
jmp
out
into
pushl
inc
dec
and
shl
sub
shll
mov
fadd
and
sub
stos
les
xor
cmp
xchg
test
idiv
add
sbb
mov
cmp
sub
pop
adc
shl
clc
cltd
sub
gs
push
jne
divps
sbb
cmp
cwtl
cmp
out
lret
repz
cmp
inc
mov
mov
sbb
dec
pop
push
xchg
pop
sub
je
pushf
jnp
das
and
xchg
mov
push
call
jbe
push
cmpsb
mov
int
mov
cltd
adcb
jmp
xchg
clc
sahf
adc
mov
cmpsl
fiadds
add
in
pop
sub
in
orb
jp
cltd
sbb
lds
and
fwait
add
pop
out
jle
imul
xchg
mov
insl
dec
adc
or
je
std
xchg
fistpl
mov
xchg
push
insb
je
fsubl
mov
cmc
push
push
sub
dec
push
sub
jns
and
dec
add
add
lret
outsl
loop
notl
std
dec
add
inc
cmp
jno
jmp
jle
fwait
test
dec
mov
in
push
pop
jp
sub
std
sarb
xor
xchg
fs
mov
cmc
rol
cmpsb
addr16
pop
jb
cmp
and
push
jmp
cmp
xchg
int
xlat
rorb
push
mov
ror
mov
repnz
in
mov
popa
cmp
push
in
xchg
mov
mov
jo
nop
out
movsl
cltd
jbe
lods
pushf
pusha
adc
push
jmp
movsl
add
mov
sbb
cmp
dec
adc
jno
mov
xchg
cmpsl
pop
pop
mov
xchg
xchg
pop
imulb
mov
xchg
jle
xlat
ret
cltd
pop
mov
lock
das
inc
dec
ret
mov
mov
mov
xlat
mov
into
mov
xor
adc
out
adc
jns
jae
sbb
sahf
push
push
sbb
adc
pop
inc
fs
cmpxchg
xor
scas
sbb
or
ja
loope
cld
lock
mov
in
gs
lret
test
out
imul
jmp
mov
jns
inc
test
push
add
mov
testl
shr
cmp
lcall
clc
mov
pop
fucom
sbb
sbb
push
sbb
xchg
stos
popf
mov
in
cld
sub
sbb
jecxz
jmp
clc
test
lcall
inc
daa
imul
loop
adc
mov
out
jae
jae
and
pop
xchg
xor
dec
lods
fs
addl
mov
repz
push
outsl
fucomi
dec
push
fbld
mov
xchg
cmpsl
cmp
jecxz
and
add
shlb
mov
cmp
daa
and
lahf
insb
fwait
xchg
outsl
dec
stc
mov
cmp
pop
movsl
das
xchg
outsl
fstpt
push
mull
or
adc
push
lea
das
pop
mov
jae
outsl
jo
cmc
ja
aaa
push
or
sbb
xor
jb
or
out
and
sub
es
movsl
das
pop
enter
jmp
in
xchg
xchg
adc
or
addr16
xchg
lret
enter
cmp
mov
popf
and
mov
cmpsb
sbbb
adc
jl
daa
add
jns
sbb
sbb
adc
test
pop
mov
lods
loop
pop
mov
mov
xchg
jnp
cwtl
and
sbb
sub
hlt
mov
popa
fstp
inc
into
mov
add
rorb
xlat
jnp
test
lcall
rorb
das
in
push
push
out
jne
sbb
in
adc
xor
test
stos
xchg
push
ret
mov
mov
ds
inc
jnp
sbb
mov
iret
repnz
je
jecxz
mov
push
cmp
pop
push
aas
push
lea
push
out
dec
mov
stos
add
fwait
mov
js
filds
jae
mov
bound
dec
lcall
lret
in
dec
sarl
pop
dec
xchg
cwtl
mov
movsb
loop
out
jnp
lods
jbe
mov
sbb
add
clc
adc
mov
inc
icebp
out
push
add
sub
out
xchg
ret
ss
mov
pushf
sbb
daa
pop
mov
mov
push
lret
jo
scas
mov
jo
cli
fiaddl
in
jmp
cmp
rcll
es
xchg
fiaddl
insl
mov
add
rol
jnp
jne
push
popl
mov
jae
ja
lods
movsb
hlt
mov
and
jg
pop
cwtl
bswap
mov
pop
cmp
repz
pop
scas
inc
addl
cmp
sub
orl
cmp
pop
and
pop
dec
in
and
mov
mov
xor
sbb
jge
aam
sbb
out
lds
dec
fdivr
add
inc
xchg
sbbb
lea
inc
fildl
add
insl
push
lahf
jns
mov
cmp
xor
inc
ficoms
icebp
or
in
inc
push
pop
sbb
loope
push
in
pop
scas
mov
fsubrp
sbb
loop
cmp
push
add
shll
xchg
sbb
decl
mov
xor
popa
xchg
and
call
bswap
lahf
push
jno
in
fstps
clc
dec
or
dec
mov
sbb
push
sub
cmp
jge
jae
lahf
mov
lea
std
repz
cld
call
cli
mov
pop
inc
test
mov
pop
jb
lcall
cmpsl
adcb
fidivs
icebp
inc
jb
fldl
and
int
mov
mov
popa
loope
test
and
lock
dec
add
lods
nop
aad
pop
data16
or
enter
xor
xchg
push
scas
xor
lock
les
mov
mov
stos
dec
and
stc
inc
sbb
mov
jnp
imul
gs
xchg
cmp
inc
int
mov
insb
hlt
jns
stos
insl
lods
jecxz
xchg
jle
int3
inc
movsb
mov
dec
lock
add
popf
cmp
bound
fistpl
sahf
ret
mov
stos
sub
mov
push
outsb
fbstp
fadd
jo
push
cmp
ret
inc
cltd
pop
ds
add
loope
jmp
xor
in
jno
adc
or
mov
icebp
xor
push
xor
sub
fsubs
or
jnp
push
scas
sbb
mov
ljmp
adc
clc
push
add
lea
push
sub
pop
mov
pop
push
mov
inc
arpl
int
xor
jno
ret
cmp
ja
cmpb
dec
push
scas
fs
push
dec
nop
fnstsw
inc
mov
mov
jns
sub
sbb
aaa
push
cmpsb
xor
shl
mov
and
std
pop
mov
bound
push
fists
out
xor
or
out
mov
mov
lods
mov
pushf
fisttps
lret
xchg
cmpsl
inc
xlat
pushf
loop
shrl
imul
mov
cli
mov
xor
mov
mov
filds
jmp
pop
scas
loop
jbe
flds
and
scas
out
lods
and
xor
xchg
mov
loop
testl
popa
les
xor
in
das
sub
aam
idivb
hlt
mov
push
jmp
ret
in
test
jne
jno
cmpsb
test
loope
repz
cmp
sub
stc
push
jp
mov
rcll
mov
lret
sub
loopne
in
imul
addr16
js
xchg
xor
pop
cmpsb
std
jmp
bnd
mov
pop
or
xor
fistl
scas
add
mov
addr16
out
inc
nop
je
cmp
xchg
push
movsl
xor
xor
aam
imul
loopne
cltd
mov
insl
adc
push
insl
mov
fdivs
fs
outsb
scas
push
xchg
pop
nop
stc
xchg
sbb
lea
lret
inc
jmp
call
adc
jecxz
fs
ss
and
jae
xchg
pop
push
mov
add
sub
pushf
sbb
dec
jp
or
lret
xchg
scas
scas
cmc
sarl
sti
jle
std
xchg
je
pop
insl
cmp
jb
jnp
adc
ja
inc
dec
std
lea
data16
mov
jge
cmc
lds
leave
mov
sbb
ret
cs
pop
in
jmp
mov
push
jl
sbb
std
sbb
mov
stos
insl
mov
mov
test
rorl
mulb
test
dec
fmulp
dec
jg
xchg
fstpl
and
mov
xor
ljmp
sbb
test
mull
out
sub
cmp
lcall
sbb
mov
pop
cmp
xchg
scas
cmp
mov
mov
das
mov
call
adc
les
sbb
fistpl
add
add
lods
jmp
adc
fiaddl
sti
inc
pop
dec
push
cmp
push
repnz
lret
idivl
xchg
cld
cmp
cmpsb
test
cli
fisubrl
test
sbb
outsl
rorb
inc
mov
jae
addr16
adc
sbb
cmp
adcl
adc
add
cmp
das
and
pop
adc
sub
sti
add
std
pop
cwtl
pop
popa
stc
lods
lds
aad
jo
dec
push
sbb
shll
adc
cmpb
pop
sarb
cmp
adcl
mov
mov
jno
call
out
mov
inc
mov
cs
inc
ss
lret
jg
je
xchg
push
sbb
iret
xchg
stos
mov
fucomi
pop
mov
stos
insb
or
stos
rolb
cs
mov
jl
test
js
inc
inc
bt
push
add
lea
lods
dec
pop
inc
or
mov
mov
cmp
adc
dec
sahf
aam
gs
lret
ret
xchg
xchg
rorb
shlb
push
loop
movsb
insl
xchg
pop
inc
cltd
mov
fildll
push
push
add
fwait
test
sti
jle
sub
pop
pop
into
ljmp
add
jns
mov
jg
cmp
sahf
stc
in
and
dec
push
lods
sub
rolb
sbb
shl
ret
ret
pusha
hlt
int3
pushf
mov
fstps
jmp
jp
insl
mov
and
inc
jmp
xchg
arpl
repz
dec
in
dec
out
ljmp
pop
lock
cmp
popa
lret
add
loopne
pop
mov
mov
cmp
dec
fadds
jns
je
stos
sbb
xchg
mov
xchg
push
in
jne
call
repz
add
sbb
jmp
scas
mov
js
xchg
pop
fisubrs
pop
stos
bt
inc
xor
xor
cs
push
repz
loope
mov
push
mov
orl
aas
push
shlb
mov
add
cmpsl
pushf
je
xor
outsb
sbb
lret
cld
jno
andb
int
inc
mov
repnz
xor
sub
pop
jb
scas
pop
xor
popl
fisttpl
sbb
ret
sbbb
rcl
or
lahf
cmpsl
push
xor
sub
inc
mov
fistpl
inc
inc
pushl
jmp
test
std
leave
mov
dec
shlb
xchg
cwtl
cmpsl
stc
dec
adc
into
jmp
and
mov
pop
cmp
or
dec
add
lea
into
add
shlb
jns
push
dec
xchg
dec
pop
out
sbb
mov
xchg
pop
mov
loopne
inc
in
dec
sbb
xchg
mov
or
fnstenv
push
int
sbbl
cmp
test
int3
cli
pop
pusha
pop
fldt
stos
dec
fbld
and
dec
and
je
call
les
aaa
imul
fisubrl
push
dec
dec
aam
inc
pusha
sbb
mov
outsl
add
xchg
push
add
pop
shlb
loop
mov
lret
into
out
pushf
pop
push
jno
push
daa
nop
jb
and
test
xchg
add
mov
mov
test
rcll
icebp
sub
fisttps
stos
mov
outsb
and
loopne
or
inc
sub
sar
fistps
dec
xor
sbb
xchg
rorb
fwait
ja
push
lret
divl
mov
or
add
pushf
mov
popw
xchg
push
incl
xchg
daa
call
dec
add
sbb
jge
test
lods
xor
adc
das
movsb
stos
jmp
inc
jp
cmp
rorb
imul
and
xchg
insl
and
int3
aas
dec
cwtl
jbe
or
inc
push
divl
mov
xchg
xchg
pop
xchg
dec
es
sti
add
testb
sbb
jnp
cmp
add
jns
pusha
add
test
or
jle
ds
add
or
mov
lods
sbb
rorb
adc
push
pop
mov
das
outsl
push
and
xor
insl
pop
pop
lods
or
in
das
and
aas
jmp
jp
inc
loopne
insb
inc
mov
repnz
mov
outsb
repz
sti
ss
cmpb
pop
mov
inc
jecxz
mov
mov
sbb
add
stos
mov
adc
iret
jnp
sbb
and
test
pusha
inc
sahf
pop
xor
jl
pop
mov
xchg
xor
or
or
icebp
xchg
add
jnp
pop
inc
dec
icebp
and
push
and
and
in
xchg
testb
popa
xchg
xor
mov
jecxz
mov
push
fsubrl
call
in
ss
shlb
xchg
scas
mov
sbb
push
cmp
pushl
push
mov
scas
ret
jns
mov
xor
sti
or
out
inc
dec
lret
js
mov
jl
cs
adc
lods
sub
adc
fiaddl
jne
push
rclb
enter
cli
loope
call
xor
jae
jmp
xchg
lock
xchg
jns
in
jbe
pop
or
mov
push
rcrl
shl
mov
xchg
mov
sbb
popa
rcrb
hlt
mov
outsb
mov
xchg
jns
js
add
mov
jle
dec
outsb
enter
or
pop
mov
sahf
lods
imul
in
iret
cmp
inc
addl
and
lahf
dec
cmpsb
gs
ja
push
cmp
fistpl
xor
jle
sbb
adc
movl
in
in
lcall
insb
or
cmc
andb
ss
ljmp
outsb
inc
out
out
pop
test
scas
loopne
sti
add
jae
imul
movsl
jge
sub
into
pop
cli
mov
mov
push
pop
repz
sahf
sbb
mov
or
xorb
fcompl
jle
out
bound
lods
pop
fmul
cmpb
adc
and
mov
adc
push
jne
cmp
cltd
and
loopne
add
cmp
test
sbb
lret
cld
int3
mov
xchg
test
mov
and
test
mov
inc
and
mov
xchg
gs
push
mov
cmp
cmpsb
loop
mov
mov
rclb
adc
and
xor
clc
iret
ja
jp
js
shl
jo
mov
int
std
jl
mov
test
out
ljmp
fbld
dec
push
mov
hlt
lods
cmpl
sbb
jl
fnstsw
out
sub
enter
inc
outsb
xor
push
insl
test
xchg
je
hlt
lods
aaa
and
iret
idivb
add
and
push
sbb
lret
mov
gs
xor
scas
in
loopne
dec
mov
pop
mov
xchg
decl
and
xor
adc
insl
mov
xor
fstpl
daa
add
sbb
sahf
push
inc
jae
mov
hlt
adc
push
lcall
stc
subb
aad
inc
sti
arpl
xchg
and
inc
or
pop
sbb
stos
arpl
xor
ljmp
xor
cmp
enter
mov
call
subb
pop
xchg
aaa
inc
int3
popf
push
jg
cld
fisttps
mov
pusha
pop
je
js
push
aaa
bound
movsb
mov
lock
or
and
testl
xchg
movsl
mov
xor
adc
sub
xorb
fmull
jge
jg
iret
pop
dec
or
adc
mov
test
div
test
lods
xchg
and
push
call
xor
popa
inc
push
or
popa
fdivl
je
imul
fstpl
aad
mov
fstl
dec
lock
or
push
loop
rcrl
div
hlt
adc
dec
jnp
and
out
inc
ficoml
pushl
pop
pop
inc
dec
jbe
sub
popa
sbb
jp
and
xchg
test
and
icebp
call
rorb
cmp
dec
cmp
adc
inc
xor
xchg
mov
push
and
sub
add
add
inc
std
xchg
arpl
push
divl
and
push
xchg
lcall
decb
push
mov
dec
mov
ror
jne
mov
aad
pop
mov
adc
sub
fsubl
pop
ljmp
dec
add
adc
xor
mov
stos
fisttpll
xchg
fisttpll
push
xchg
out
fsubrs
ds
and
cmc
mov
jecxz
addr16
and
gs
sub
subl
sbb
jbe
sbb
add
std
fisttpll
dec
add
ja
dec
enter
xchg
loope
lods
insb
fs
test
xor
jge
pop
incb
xchg
xor
shll
xchg
xchg
xchg
into
dec
push
ficompl
jmp
or
loop
sbb
jle
in
xchg
dec
xchg
xlat
dec
add
xor
cmp
xor
fldenv
mov
cmp
in
negl
rcrb
popf
into
jb
sti
xor
std
in
in
cmp
test
or
dec
sti
repnz
int
inc
sbb
fistpll
jl
setns
fmul
popf
loope
icebp
dec
out
stos
cs
jno
fnstsw
cmp
lret
push
int
mov
js
mov
inc
icebp
fwait
sbb
sub
sahf
bound
loop
popa
xor
mov
mov
add
jo
fcmovu
lods
mov
adc
call
inc
adc
out
cld
dec
mov
push
dec
aas
adc
xchg
adc
loopne
ja
add
pop
aaa
xor
sahf
dec
in
icebp
xor
sub
loopne
ret
das
push
sbb
das
pop
and
pop
in
pop
or
xchg
mov
sbb
hlt
xor
pusha
cmp
push
sahf
jno
ja
inc
adc
rorb
push
sub
scas
pop
push
xor
testl
enter
fadd
data16
adcl
sub
mov
pushf
movsl
dec
clc
and
mov
dec
out
rcll
jp
mov
mov
lods
mov
loop
pop
pop
std
adc
ds
jecxz
xorb
out
pop
mov
dec
sahf
outsl
jecxz
aad
xor
mov
scas
outsb
add
lods
int3
insb
xor
add
cmp
pop
cmp
dec
popa
jnp
add
mov
rorl
xchg
fs
sbb
stos
mov
sbb
jmp
xchg
inc
jp
jp
stc
or
rcll
jne
outsl
mov
movsb
fwait
adc
outsl
dec
stos
jle
mov
clc
inc
xlat
fcmovb
mov
cmpsb
jle
std
add
test
cmp
cmp
add
mov
mov
into
cmpsb
push
in
insl
ret
push
xchg
repz
imul
stos
cwtl
xor
sbb
dec
and
jl
loope
stos
imul
add
jne
pop
dec
push
dec
mov
push
loopne
cltd
and
or
in
cmp
xchg
ret
or
bound
sbb
into
ret
mov
dec
push
and
mov
in
jne
dec
jmp
test
add
adc
int3
dec
mov
mov
jbe
rclb
lods
jnp
subb
bound
leave
out
rcrl
and
dec
scas
nop
and
or
cmp
and
adc
in
stos
add
loopne
rcl
or
adc
mov
scas
and
je
inc
repz
int
lods
jnp
xor
sbb
xchg
push
loopne
adc
lock
xchg
iret
ss
mov
push
js
pop
or
sub
in
out
push
mov
inc
leave
mov
mull
inc
sbb
xor
jl
mov
aaa
add
mov
dec
cltd
push
arpl
xchg
loope
mov
sub
clc
adc
adc
and
and
mov
or
repnz
mov
sbb
add
pop
pop
pushl
jo
movsb
cwtl
ss
jb
xor
adc
dec
test
aaa
xchg
jbe
pushf
jno
shll
incb
and
pop
mov
jbe
mov
or
stos
mov
loope
adc
push
in
lcall
cwtl
jno
jmp
pop
stos
xor
adc
int
fisttpl
xor
cli
in
rcll
cmc
pop
push
repz
push
mov
xchg
push
ss
jns
pop
jae
jb
mov
add
sarb
into
aad
cmpb
fadd
mov
insl
cld
mov
in
mov
dec
std
jp
imul
outsb
mov
in
push
popw
in
push
fs
mov
push
leave
mov
cmp
mov
insb
mov
imul
xor
pusha
aad
push
call
mov
out
or
or
push
sub
mov
xchg
push
popl
sub
popf
mov
and
xor
push
ret
out
pop
mov
push
sbb
pop
lds
fists
icebp
jbe
clc
jb
cmpsb
mov
inc
cmp
inc
cmpsb
mov
lea
push
ljmp
inc
shrb
jmp
cmp
xor
test
and
add
jo
pop
jl
lcall
movsb
push
in
je
arpl
daa
add
addb
xchg
or
dec
hlt
jno
gs
xlat
cli
jbe
mov
sub
repnz
cs
dec
shlb
xchg
add
add
add
xchg
push
std
sbb
push
int
pop
imul
scas
test
iret
jno
cltd
leave
popf
push
pop
cmp
cmp
cmp
adc
in
adc
mov
xchg
jg
in
lcall
adc
xor
mov
xchg
xchg
or
lock
adc
or
xchg
rcr
in
push
out
xorb
and
data16
scas
fistpl
jns
fldt
sbb
sbb
add
mov
xchg
xor
fldt
xchg
mov
pop
adc
scas
sbb
dec
or
gs
icebp
or
daa
ljmp
in
adc
sbb
in
sbb
sbb
push
pop
sub
popa
std
xchg
movsb
sub
mov
stc
adc
pushf
ljmp
jp
int3
mov
mov
in
pop
mov
rcll
scas
and
xor
pause
xchg
mov
pop
adc
aad
std
cmp
mov
xor
lret
ljmp
lods
test
fsincos
sub
mov
movsl
cli
xor
inc
inc
outsl
mov
xchg
pop
stos
shll
push
cmp
popa
mov
stos
dec
lea
jnp
in
sub
out
mov
enter
inc
pop
cwtl
cmpb
loopne
add
dec
add
or
sarl
push
sbb
and
add
xorb
daa
sbb
or
loope
imul
into
loopne
icebp
icebp
ret
inc
repz
sub
subl
jbe
mov
pop
pop
int3
repnz
js
lods
jae
cwtl
lock
insl
dec
fiadds
cmp
pop
cli
jmp
dec
xchg
lea
leave
ds
mov
xor
or
inc
inc
mov
orb
nop
add
pop
std
hlt
cmp
and
insb
out
jmp
fidivl
ja
xor
adc
insl
mov
push
stos
mov
mov
cmp
mov
xor
jae
ljmp
jp,pn
ficompl
fcomps
jno
fisubrl
pusha
stc
push
mov
mov
std
and
rorb
aad
xor
imul
mov
shrl
dec
frstor
sbb
mov
loope
dec
mov
pop
pop
jmp
in
iret
xor
pop
and
repz
push
stos
ljmp
adc
lock
add
jo
add
sbb
movsb
push
dec
jb
add
mov
rorb
outsb
repz
repnz
jbe
test
outsl
pushf
mov
pop
jnp
lods
iret
cmp
notb
cmp
adc
shrl
push
test
pop
dec
addl
adc
xchg
les
fnstsw
fldenv
fldcw
outsl
leave
mov
mov
mov
pop
lcall
jge
and
inc
jae
bndstx
pop
xor
fisubrs
push
sub
cmpsb
adc
test
lock
xchg
sub
sub
jns
pop
push
stos
adc
sub
sahf
xchg
jo
dec
mov
dec
pop
dec
mov
nop
xchg
lods
cli
popw
push
sar
mov
test
pop
mov
test
jge
jb
jge
xchg
xor
in
xchg
sub
add
inc
inc
aad
push
dec
jno
repz
in
fwait
sbb
aam
mov
nop
movsl
mov
mov
fwait
test
and
das
cmpsb
aas
pop
add
sbbb
rcll
aas
lcall
mov
jns
into
inc
xchg
push
add
aas
pop
dec
push
push
stos
lea
cwtl
cmpsb
xchg
jecxz
rclb
ret
mov
ret
das
jl
push
jg
not
add
mov
jmp
dec
adc
sub
mov
adc
enter
inc
add
mov
clc
dec
std
inc
cli
lods
and
ds
adc
lds
cli
in
lds
mov
or
mov
in
sub
pop
mov
jg
or
cmp
stos
push
inc
sbb
xchg
cmp
push
test
cmpsb
adc
mov
mov
jbe
push
jecxz
sub
cltd
mov
cmpsl
push
mov
loope
sbb
fimuls
test
pop
in
jno
rcrl
xchg
and
rcl
cmp
and
mov
lods
mov
fwait
lahf
inc
and
xchg
dec
std
cmpsb
mov
sub
push
cmp
stc
scas
push
dec
pop
ret
add
movsl
loope
mov
mov
mov
cltd
mov
shll
aam
push
jge
int
mov
inc
daa
xor
mov
push
out
cmp
cwtl
call
and
sbb
mov
or
inc
push
pushf
dec
xlat
mov
outsb
xchg
imulb
jmp
mov
mov
fisttpl
outsb
adcl
mov
jg
ret
jns
fwait
out
insb
js
push
cltd
mov
push
jo
loopne
sbb
clc
cs
jne
mov
lock
lods
mov
jmp
cmpsb
cmp
fucomp
insb
fcmove
cmp
xor
push
ret
imul
pop
mov
arpl
scas
cli
adc
xor
das
andb
clc
push
pop
scas
fs
das
mov
sub
rcr
and
pop
addr16
cmpl
cmpsb
pop
jnp
loopne
out
jp
mov
dec
test
test
into
add
adc
in
popf
adc
or
push
loopne
push
or
mov
rorb
jno
stc
jp
shl
mov
add
daa
mov
stos
je
pop
mov
rclb
mov
js
jl
ja
icebp
in
in
movsl
pop
push
inc
out
aas
gs
and
imul
inc
mov
cmp
sbb
push
push
loopne
outsl
or
pop
hlt
sarl
lret
mov
add
inc
outsl
cmp
int
aas
mov
jns
inc
cmpsb
sti
or
cs
adc
fldenv
fisubl
fidivrl
sub
outsl
sub
dec
call
inc
mov
adc
mov
ret
sbb
icebp
mov
out
pushf
in
pop
cmp
pop
cltd
imul
dec
sbb
sbb
sub
pop
mov
push
mov
push
pop
cmp
insb
iret
inc
xor
or
pop
mov
iret
pop
out
adc
push
ss
pop
dec
jmp
jle
js
cld
xor
movsl
loop
insb
popf
movsl
pop
repz
or
mov
pop
pop
gs
adc
lret
pop
xchg
out
arpl
push
push
and
mov
mov
inc
push
sub
fcmovbe
mov
push
cmp
jecxz
fwait
sti
rol
mov
repz
in
jg
jne
or
fadds
cmp
cmp
nop
std
push
mov
sub
or
sub
dec
pop
loope
or
sbb
mov
es
imull
into
adc
push
push
jbe
cmp
test
fsubp
mov
arpl
scas
in
scas
fstl
mov
adc
pushf
cli
xor
push
mov
push
pop
js
and
inc
pop
popa
fdivs
rcll
fisttpl
ljmp
mov
in
push
pop
ds
icebp
push
jns,pn
cmp
pop
push
mov
jns
inc
add
or
or
stos
jns
test
push
gs
stc
push
xor
cmc
int
aad
test
dec
mov
push
loopne
iret
inc
adc
cwtl
test
lods
popa
mov
xor
out
cmpsb
lods
xor
or
jb
sbb
push
inc
out
mov
in
inc
daa
jno
mov
mov
movsl
aas
adc
cmp
xchg
jecxz
mov
add
dec
xchg
cmp
inc
and
icebp
xchg
push
and
adc
arpl
mov
mov
xor
xor
test
cmp
lret
fmuls
mov
pop
test
sbb
cmp
push
push
push
call
xchg
aad
adcl
and
lcall
es
mov
inc
fdivs
xchg
xchg
xor
loop
adc
pop
fs
scas
cmp
cmpsb
cld
inc
adc
sti
push
xchg
xchg
fadd
or
push
stos
or
sub
pop
sti
leave
xor
shr
or
test
fistpll
sbb
push
outsb
xor
test
insb
mov
sbb
lret
mov
cmc
int
insb
loop
in
loopne
xchg
cmp
dec
jmp
in
cmpsb
pop
popa
jnp
cmp
cmpsl
add
sbb
shll
push
inc
iret
inc
aad
shll
push
pop
aad
stos
sarb
cld
xchg
fcoml
rcll
mov
sbb
xchg
dec
mov
push
ficoms
xor
xor
sbb
iret
loope
jno
mov
mov
cmpb
pop
inc
push
das
in
sbb
dec
rcr
mov
in
and
and
pusha
aam
dec
push
loop
mov
add
andl
mov
std
fnstsw
mov
nop
lea
or
xchg
outsl
movsl
scas
bound
loop
jp
test
fcompl
cmpl
xchg
fcmovu
xchg
mov
mov
insl
adc
xrelease
mov
inc
rorb
call
add
and
and
negl
cmp
loopne
testl
stc
aas
daa
out
xor
adc
test
cs
data16
adc
push
jns
jp
dec
rcl
and
hlt
jecxz
das
ja
xor
jns
sub
mov
popa
jp
test
into
sbb
lcall
addl
negl
sub
adcb
add
pop
cli
add
addr16
pop
pop
cwtl
cmp
cmp
outsl
lock
mov
pushf
std
fists
mov
mov
aaa
add
push
clc
inc
fninit
cmpsl
mov
lahf
and
or
fiadds
mov
leave
movsl
pop
cmp
ror
test
mov
and
hlt
fcompl
fwait
push
jecxz
mov
pop
imul
data16
jge
bts
decl
inc
test
inc
or
inc
push
and
sbb
sub
push
jns
push
sub
nop
jnp
mov
stos
xor
add
shlb
xchg
add
cmp
mov
roll
mov
push
das
lods
js
arpl
sub
lods
jae
cwtl
pop
dec
cwtl
sub
mov
mov
std
aas
xchg
or
fwait
sbb
and
pop
and
sub
scas
mov
add
or
gs
mov
jg
popf
dec
mov
aad
inc
adc
and
lods
pop
inc
icebp
dec
lret
repnz
ror
ljmp
loope
xor
mov
call
mov
fldl
insb
sub
lods
ljmp
in
mov
mov
sbb
jo
dec
adcl
cmp
adc
dec
adc
sbb
ret
subb
outsl
and
das
leave
cmp
mov
xchg
cmc
jp
js
push
stos
push
add
movsb
jg
xchg
imul
out
mov
jecxz
mov
icebp
fld1
mov
lcall
or
xchg
push
jmp
incl
and
mov
pop
loop
and
mov
fnsave
call
mov
rcl
or
addr16
stc
lcall
fadds
jnp
movsl
jle
and
fisubrs
jo
js
fwait
push
mov
loop
mov
sti
push
mov
mov
dec
add
add
jo
mov
rorb
shl
mov
and
pop
adc
push
sbb
pop
lea
mov
pop
cmp
aam
mov
mov
push
lret
adc
jns
jae
mov
int
les
fs
mov
mov
loope
cmp
lods
loopne
clc
lods
lea
cmc
scas
dec
shrb
jo
or
test
fcompl
in
lret
or
mov
adc
mov
and
pop
in
sbb
mov
jno
cwtl
push
adc
shlb
mov
in
dec
sbb
popl
cmp
jno
jno
adc
test
enter
jb
mov
fs
add
mov
out
jecxz
in
adc
out
mov
push
mov
imul
mov
fnstsw
hlt
push
and
pop
es
ret
rorl
iret
cmp
or
mov
pop
xchg
arpl
sub
adc
stos
add
stc
pop
xchg
sbb
mov
loope
adc
xchg
xor
sub
movsl
inc
scas
and
lret
mov
shlb
inc
stos
ffreep
hlt
movsl
repz
pushf
daa
lss
aad
fadds
pop
std
je
ja
adc
xchg
xchg
fsubrl
adc
cli
ficompl
dec
ljmp
push
jmp
mov
dec
add
outsb
mov
stos
sbb
add
sub
jecxz
xor
loopne
sbb
mov
int
dec
lret
dec
std
mov
add
int
clc
mov
push
popf
es
push
ds
and
lock
or
rorl
cltd
int
pop
imul
mov
add
sti
imul
pushf
movsb
sub
fidivrs
xor
and
das
movsb
cmp
or
pop
push
push
dec
nop
pop
mov
mov
mov
and
push
daa
push
sub
add
pop
and
sub
push
loope
imulb
jg
in
popf
test
pop
dec
decb
or
push
rcll
out
fcomp
and
je
clc
sbb
inc
mov
lret
jecxz
loop
pop
mov
add
pop
ljmp
inc
or
push
dec
lds
lock
popf
sbb
mov
es
jo
push
bnd
mov
push
cmp
push
xchg
or
jne
fbstp
mov
xchg
out
mov
fcomps
rorb
ja
mov
pop
xchg
jmp
cmpsb
shll
pop
or
mov
sub
cltd
scas
fsubp
out
sub
xchg
cmp
xchg
pop
push
je
aam
cmc
and
sti
mov
xchg
js
push
test
mov
sbb
mov
in
ret
or
mov
adc
sti
and
adc
test
pushf
sets
lods
mov
lret
imul
cmp
test
test
mov
mov
in
out
mov
mov
rclb
sub
push
xchg
mov
data16
out
lret
jo
push
adc
int3
and
in
cld
lahf
scas
mov
pop
fcomip
jns
mov
fwait
xlat
lret
xor
int3
jae
jbe
dec
xchg
bound
pmaxub
dec
inc
int
fstpt
test
lods
lahf
fadd
idivb
or
xchg
cmpsb
sub
inc
pushf
mov
neg
test
loop
or
cmovle
xchg
rcr
mov
repz
jno
negl
xor
outsb
sbb
pop
rcll
sbb
dec
and
gs
jne
lods
daa
xchg
clc
pop
das
or
mov
push
push
popf
mov
push
sbb
pushl
and
scas
cmp
mov
jns
movsb
xchg
jge
adc
cmpsb
imul
push
jmp
and
xorl
dec
add
or
cmp
cmpsb
mov
push
test
incb
call
insl
mov
popa
jnp
adc
les
mov
stos
push
ret
cmp
fists
sub
xor
or
cli
sahf
push
jae
inc
lcall
repnz
or
je
pop
fcmove
pop
mov
cmc
add
and
loopne
icebp
daa
ret
cmpsb
imul
je
inc
xchg
mov
adc
mov
fmuls
xchg
shll
pop
movsb
fildl
mov
ficoms
aam
cmp
lds
fwait
cmp
sub
ret
aaa
sbb
xorb
es
mov
fnstcw
and
ja
fwait
into
adc
and
xor
mov
and
mov
scas
inc
out
dec
inc
and
mov
mov
xchg
jle
push
sahf
mov
push
fistps
sbb
and
lods
movsb
jae
sarb
jns
xlat
jg
js
push
imul
mov
aaa
fnsave
push
in
test
mov
dec
js
imul
mov
movsb
clc
ret
push
insl
jg
fnstcw
ret
lods
mov
mov
sbb
loopne
jne
jb
add
das
sub
mov
mov
add
pop
pusha
mov
xor
outsl
stc
mov
xchg
loopne
bound
fists
xor
add
cmp
leave
inc
jbe
add
xchg
subl
pop
fisttps
push
jp
popf
cld
popa
push
dec
mov
daa
je
sbb
aaa
enter
mov
das
frstor
mov
arpl
sbb
add
jl
cmp
test
xchg
xchg
ss
shr
lock
push
fiaddl
or
mov
pop
fwait
out
shll
dec
iret
mov
aas
insb
js
mov
mov
ljmp
aad
lds
ja
mov
xlat
cld
push
incl
dec
sub
or
lcall
in
pusha
movsl
es
in
push
cmp
data16
inc
cmc
sub
ds
ss
out
push
cld
stos
mov
jg
pushf
ja
mov
lods
hlt
ljmp
jnp
sar
cmp
and
sbb
ds
add
sahf
mov
insb
lods
mov
xchg
sub
mov
inc
cld
das
shll
cs
cmp
push
xchg
dec
pop
push
mov
sub
xchg
adc
int
lods
cmpsl
jb
mov
push
aad
mov
popa
lods
and
xchg
shll
xchg
pop
mull
lea
cmp
xor
mov
addr16
and
add
inc
outsl
and
leave
ret
fnstcw
pop
push
test
les
call
popa
add
jns
sbb
and
sub
xchg
jns
sahf
dec
aas
cmpsl
or
add
imul
adc
jb
xor
testl
movsl
icebp
mov
lds
stos
add
ja
mov
xchg
and
les
std
test
jnp
lcall
repnz
fisttpll
popa
xchg
sub
mov
cmpb
sub
fistps
lar
xchg
rorl
call
les
pop
sahf
pop
ds
sarb
sub
out
cmp
or
mov
lods
test
fcomip
xchg
aad
lcall
aas
pop
filds
xchg
ja
pop
sbb
add
cli
cmp
mov
jb
xchg
or
sbb
xchg
push
mov
mov
mov
in
xchg
push
fsubrl
inc
push
mov
sbbl
fdiv
inc
out
daa
out
fidivrl
pop
sbb
mov
jne
or
xor
lahf
gs
jecxz
and
iret
mov
or
cmc
sbb
or
lahf
popa
cmc
aas
and
xchg
bound
xor
ds
js
fistps
shll
jo
nop
fnstcw
sub
push
cli
inc
mov
jge
out
es
fisttpl
mov
mov
fstp
lock
outsb
or
sub
cmpsl
push
push
xor
in
nop
fistl
push
cmovne
fs
mov
icebp
pushf
mov
testb
adc
cmpsb
cmpl
push
aaa
cltd
ljmp
mov
out
sbb
inc
xchg
cmc
sub
jecxz
jns
shlb
adc
sbb
cmp
loope
mov
or
cmp
xor
fiaddl
or
orl
roll
divb
shl
outsl
inc
rcll
gs
andl
push
push
fistps
clc
mov
mov
fisubrs
cmc
mov
cs
shll
ljmp
int
insb
jno
cmpsb
inc
adc
in
rorl
push
je
xchg
popa
push
iret
popa
or
movsl
popa
mov
test
or
sbb
lea
repnz
mov
adc
iret
jno
push
test
rorl
mov
cmc
pop
push
pop
and
xchg
mov
cltd
xor
gs
popf
pop
loopne,pt
loope
jle
out
iret
flds
sbb
cmp
mov
cmp
rcl
mov
dec
adc
stos
ljmp
push
repz
dec
jg
or
xchg
mov
mov
and
mov
stos
dec
dec
out
out
mov
ret
push
adc
push
shrl
dec
or
hlt
sub
inc
pop
sbb
nop
mov
ret
stc
dec
adc
inc
cltd
push
mov
cltd
or
idivb
out
jge
loopne
pop
stc
addb
out
add
pop
dec
int
sub
das
dec
in
scas
mov
jmp
jg
adc
pop
cmpsl
loopne
inc
mov
dec
xor
push
sbb
mov
call
repz
and
scas
mov
pop
mov
int
movsb
or
ljmp
pop
insb
or
push
inc
pop
movsl
mov
rorl
mov
call
xor
cmp
lds
dec
lea
cmpsb
mov
es
inc
add
mov
mov
sbb
adc
cmp
dec
test
or
rclb
mov
jmp
push
inc
dec
cmp
inc
ret
mov
cld
shrl
aas
test
in
adc
stos
xor
js
mov
lods
stos
dec
adc
stos
lret
or
cwtl
test
push
aam
in
pop
lea
jl
jecxz
bound
ljmp
sbb
cmp
out
js
add
lea
xchg
mov
adc
and
pop
out
daa
mov
xor
pusha
push
andb
out
imul
movsb
xor
xchg
inc
dec
test
cwtl
int3
loopne
ret
jg
scas
lods
add
lods
add
je
faddp
pop
mov
add
and
sbb
test
insb
negb
mov
in
xor
push
decb
cs
sub
fldl
rclb
inc
in
in
dec
jge
ret
into
sub
adc
in
pop
lret
sub
push
in
dec
sbb
push
popa
mov
das
jmp
and
das
mov
into
push
fucomp
dec
daa
stos
or
sub
into
cld
lret
pop
dec
divb
jo
fisubs
jge
test
ja
loope
aam
jb
fwait
mov
or
arpl
add
push
cmpsl
pop
inc
push
sbb
dec
mov
cmp
mov
mov
enter
mov
mov
or
shrb
pop
les
aaa
push
lcall
in
cmpb
push
test
mov
adc
push
fldenv
fcomps
outsb
repz
aaa
jecxz
jle
push
lods
ja
ss
sbb
mov
cmp
cmp
movsl
loop
sbb
daa
sub
fisubrl
in
jae
sbb
iret
dec
stos
arpl
ljmp
add
push
test
sub
test
into
cmpsl
int
pop
in
and
imul
dec
jb
pusha
add
dec
test
imul
iret
pop
xchg
aas
ja
mov
jno
cmpsb
out
fstl
mov
dec
or
int
jge
cmp
mov
daa
add
pushf
dec
int3
cmp
popf
std
in
lcall
xor
or
ja
push
pop
pushf
inc
cli
out
adcb
int3
pop
xchg
mov
pusha
inc
js
jno
pop
pop
jno
lret
mov
je
lret
mov
fildl
sbbb
lds
cltd
movsl
jg
xor
test
adc
jb
rcll
inc
inc
inc
call
xchg
faddl
mov
cmp
aas
add
xchg
int3
out
pop
daa
pop
jo
push
rclb
push
or
cld
daa
sbb
jge
mov
sub
sbb
jg
pop
dec
sub
aam
insb
outsl
shlb
ja
push
adc
out
jmp
test
sbb
nop
scas
stos
aas
jae
hlt
pop
les
mov
and
sub
adc
xchg
push
xchg
mov
mov
or
into
push
dec
in
xor
fstl
jb
test
dec
imul
repz
xchg
movsl
shll
leave
jno
lock
rcl
xor
add
push
mov
cld
cmp
or
xchg
push
loop
insb
dec
mov
loope
sbb
jae
pushf
icebp
out
in
mov
and
sarl
out
push
gs
pushf
mov
aas
bnd
popa
add
xor
ret
sub
pushf
mov
icebp
in
push
inc
inc
adc
mov
mov
ret
enter
fistl
ret
scas
fnstenv
test
mov
stc
sbbl
cmp
mov
lret
mov
jmp
imul
jmp
mov
das
adc
mov
push
mov
cmc
push
inc
imul
sub
sbb
push
cmpl
int3
mov
mov
push
es
inc
pop
mov
int3
sub
cmp
repz
and
enter
mov
pop
adc
add
sti
cmpsb
addr16
hlt
fbld
mov
mov
sti
push
dec
in
sarl
pop
xchg
inc
mov
jns
imul
jbe
inc
loope
xchg
sub
lret
push
das
adc
das
sbb
pop
sbb
xchg
jnp
push
test
imul
mov
outsl
cld
test
jae
adc
sbb
push
add
jno
jne
mov
dec
ljmp
sbbl
aas
pushf
loopne
sar
lcall
or
push
ljmp
outsl
mov
xchg
lock
fistps
insl
push
add
mov
push
inc
add
push
xchg
push
mov
stos
mov
insl
sbb
scas
cmp
ja
popa
in
in
int3
mov
or
fs
dec
sub
fwait
pop
xor
mov
pop
addr16
cmp
ficompl
cld
lcall
gs
or
adc
push
loopne
sbb
insl
lods
mov
insb
xchg
dec
pop
push
pop
das
push
daa
push
lcall
pop
rcrl
xor
inc
negl
cld
sub
jmp
jle
std
mov
cmp
add
jp
lea
lret
fldt
cmp
add
jg
imull
add
add
pop
cmp
push
icebp
fiadds
xlat
pop
or
dec
pusha
adc
dec
sarb
lds
inc
xor
call
mov
shlb
mov
icebp
fs
push
mov
sub
push
mov
dec
andb
ds
imul
imul
lods
add
jne
scas
and
inc
pop
scas
repz
cwtl
inc
dec
fldt
mov
xchg
scas
sbb
ds
push
dec
ret
push
stos
and
pop
and
inc
aad
mov
inc
push
lds
mov
xchg
lds
outsb
mov
push
pop
dec
popf
sbb
stc
adc
loopnew
jae
ds
mov
sub
cwtl
int
adc
mov
fstps
popf
pushl
mov
xlat
insb
pop
sub
movl
add
jmp
into
aas
fwait
aad
adc
lret
inc
xchg
orb
mov
insl
xchg
into
and
and
or
fists
stc
les
jl
bnd
inc
aad
cld
lcall
es
jb
pop
imul
mov
in
mov
cmp
movsb
shll
mov
lret
repnz
and
cli
addr16
test
movsb
imul
ja
bnd
js
mov
sahf
test
loopne
jp
mov
lahf
jp
or
cli
hlt
test
ret
adc
jns
inc
loope
int3
jnp
mov
cmp
push
outsb
mov
fsubr
es
ficompl
lea
pop
lahf
and
push
inc
xchg
icebp
arpl
mov
stos
xchg
pop
xchg
sub
xor
cmp
enter
out
add
ficoml
cmp
pop
xlat
imul
ljmp
inc
fidivs
mov
xor
and
mov
std
cli
and
loope
pusha
xchg
mov
xor
cli
inc
jecxz,pt
adc
sub
rorl
loopne
mov
pop
sbb
dec
jns
das
push
pusha
and
hlt
lret
jo
cmp
sub
mov
into
jae
or
out
lret
mov
mov
xchg
cmp
fldcw
cmp
ret
dec
jno
dec
in
dec
loopne
test
mov
adc
into
xchg
jle
lds
es
mov
cmc
and
pop
and
fcom
mov
fucomi
xor
movsl
aaa
ret
addr16
test
xor
sbb
jo
popa
jle
aaa
xchg
inc
or
ret
pop
mov
fdivr
push
xchg
add
fldt
data16
dec
mov
mov
cltd
call
mov
clc
mov
mov
xorl
movsb
xorl
cmp
movsl
xor
popf
pop
int3
addr16
inc
loopne
inc
mov
scas
mov
scas
sbb
push
jg
xchg
mov
pop
cs
stos
fistl
scas
jne
pushaw
cmpsl
cmpsb
dec
mov
into
push
xlat
mov
in
or
sbb
adcb
lret
into
mov
inc
add
dec
pop
stos
lahf
popl
cmpsb
xor
dec
fldl
dec
leave
aas
insl
xor
mov
lea
test
pushf
in
lcall
outsl
jg
dec
iret
cmp
sub
outsl
mov
add
or
int
imul
mov
mov
lcall
xor
push
fldcw
jb
imulb
bound
or
inc
pop
lea
aad
sbb
mov
mov
mov
and
nop
ds
xlat
sub
movsb
aas
loop
and
jmp
dec
int3
int
out
lock
xchg
inc
daa
cmp
inc
sbb
xchg
test
or
xor
and
mov
mov
notb
aas
xchg
and
sarb
xor
inc
aad
push
int3
mov
outsb
cmpsl
insb
ret
cs
inc
rcrl
mov
outsl
cld
or
mov
and
fmulp
sbb
lods
mov
inc
scas
cmpsb
xchg
push
adc
fdivrl
test
xchg
jbe
mov
scas
icebp
fcomi
push
jg
iret
jbe
dec
pop
push
push
push
mov
in
stos
pop
cs
mov
imul
das
lods
jg
scas
sub
mov
sub
xlat
inc
sbb
movsl
pop
cmpsl
lock
int3
xchg
shl
aad
push
pop
adc
jb
jae
cmp
popa
loop
daa
mov
mov
xchg
pushf
lock
nop
xchg
aaa
pop
sub
stos
xor
mov
repz
xchg
or
xchg
push
push
inc
adc
xchg
or
ss
dec
or
adc
mov
repnz
js
mov
mov
stc
sub
decb
pop
in
push
sbbb
inc
aad
cmp
call
xor
sbb
ljmp
das
mov
aad
lret
or
xchg
and
shlb
push
dec
sub
adc
aaa
pop
nop
sub
testl
sarb
xor
push
cmpsl
jbe
mov
lods
pop
dec
int
addr16
add
or
aad
jle
and
aad
jnp
lods
xchg
aad
and
jle
mov
pop
add
mov
add
jl
lock
mov
jecxz
cmpsl
mov
mov
xor
cwtl
iret
and
push
push
xchg
and
jmp
mov
and
mov
inc
sti
int3
movsl
dec
dec
sbbl
mov
leave
sbb
aaa
dec
xchg
xchg
mov
push
je
test
push
das
aaa
sahf
aaa
and
sub
inc
pop
xlat
test
mov
cmpsb
cmp
js
aas
or
dec
pop
cltd
pop
test
lahf
xor
jbe
dec
lret
in
imul
push
out
shrb
outsl
aad
adc
aas
in
pop
je
mov
mov
jp
jnp
cmp
jle
psubusw
test
enter
loopne
pusha
lds
jecxz
outsb
ss
cltd
in
mov
adc
shlb
mov
dec
bound
xor
jo
int3
scas
jecxz
cltd
inc
icebp
enter
fs
dec
shr
out
sbbl
mov
sbb
mov
pop
lods
ss
sbb
mov
fadds
and
dec
outsb
xchg
jmp
fdivrs
and
pop
cmp
mov
mov
pop
lret
test
sbb
push
dec
sbb
mov
inc
lods
cwtl
mov
fnstenv
rorl
fisubrs
sbbl
pop
xchg
aad
in
push
mov
push
dec
int3
mov
xor
iret
sahf
or
loope
stos
cmp
mov
lcall
inc
imul
jle
shlb
xor
out
pusha
mov
pop
push
sti
dec
dec
out
daa
add
xchg
inc
subb
pop
fs
add
mov
sub
or
sub
mov
pop
mov
cmpb
hlt
in
sbb
mov
add
xor
aas
popa
fs
mov
add
xor
add
mov
push
inc
movsl
jl
or
loop
xchg
out
adc
jg
cmp
out
xchg
int
pusha
ljmp
fcomps
les
mov
inc
jne
sahf
aam
push
cmp
fisubs
cmp
xor
jb
roll
and
fs
bound
lock
inc
adc
ret
dec
es
hlt
fstpl
pusha
inc
cmc
int
mov
xchg
daa
scas
xchg
mov
adc
pop
les
add
stos
rcll
add
pusha
fcmovnb
cmp
addr16
lods
in
xchg
hlt
mov
stc
test
jg
lods
pop
pop
call
data16
cmp
push
and
fiadds
mov
loop
sbb
jp
mov
pop
and
in
xchg
cmp
sbb
popf
pop
shrb
out
repnz
pop
hlt
test
icebp
and
mov
ficomps
cmpsb
sub
or
in
stos
js
fdiv
fimull
lods
dec
jmp
add
sbb
sahf
sahf
lret
addr16
pop
mov
mov
jbe
test
push
add
pushf
sbb
ds
jl
mov
aam
outsl
fsubs
sbb
xchg
scas
mov
jg
imull
adc
lret
cmp
mov
adc
xchg
popa
lcall
xchg
mov
xor
lea
mov
sti
decl
daa
sub
jno
aam
imul
iret
pop
nop
or
lods
mov
pop
fs
js
sub
out
fimull
gs
mov
mov
push
stc
xchg
gs
cs
or
shlb
test
mov
cmp
xchg
ss
pop
and
mov
sbb
pop
mov
test
jecxz
lds
inc
adc
das
inc
out
push
add
push
outsb
jb
jg
popf
adc
js
mov
test
stos
adc
and
xchg
stc
cltd
mov
add
cmp
mov
mov
lods
enter
jp
popw
insl
xor
mull
jl
xchg
mov
dec
xor
outsl
xchg
mov
mov
inc
loopne
pop
mov
mov
dec
in
das
inc
push
call
sbb
psubb
jbe
mov
jmp
test
pop
les
push
aas
xor
mov
popa
mov
outsl
jnp
ljmp
shrl
mov
rolb
and
lock
arpl
jns
sub
imul
sti
mov
popf
sbb
cs
or
lcall
sti
sahf
repz
ljmp
stos
fisttpll
push
negl
xlat
bound
xor
push
loope
pop
mov
in
cmp
add
notl
and
sub
pop
enter
ja
xchg
icebp
lea
mov
pop
push
and
xchg
adc
sub
jmp
arpl
mov
daa
shlb
mov
xchg
fxch
jb
out
or
push
in
out
jns
imul
es
mov
add
or
test
adc
daa
shl
pushl
adc
stos
push
jno
test
mov
pop
div
xchg
repz
mov
and
push
mov
cwtl
pop
in
jle
xor
and
add
pop
inc
pop
les
pop
sub
fsub
jmp
dec
mov
pop
ja
cs
cmc
and
mov
std
lea
loope
not
and
das
cmpsl
pop
into
shlb
test
loopne
jnp
cld
xor
stc
mov
cmpsb
stc
mov
cmp
push
test
jno
mov
jno
push
ss
std
adc
and
push
insl
movsl
and
jne
cmp
cmp
mov
push
out
xchg
jne
adc
js
aaa
cmpsl
inc
mov
cli
sahf
call
mov
fildl
and
dec
shrb
outsl
or
cs
xor
sbb
xchg
xchg
cmp
or
inc
rolb
dec
je
test
shll
stc
lods
bound
sub
es
pop
loop
sub
popf
pop
test
or
push
or
cmpsl
fwait
jge
adc
icebp
jb
fsubrs
and
es
cwtl
xchg
jb
fldl
dec
and
push
jnp
ja
andl
pop
pop
ficoml
mov
cld
fidivl
hlt
fcoml
shlb
pusha
fwait
mov
jg
push
je
xchg
mov
xor
int
es
dec
cld
xlat
aas
enter
push
stc
mov
neg
mov
aad
rcll
je
sub
mov
fwait
mov
lea
sbb
insl
sub
rclb
lcall
notb
push
mov
cwtl
and
out
add
aas
stos
ret
jns
lods
mov
hlt
gs
imul
fldcw
adc
mov
or
stos
sbb
imul
mov
push
sub
or
lahf
jo
cmp
and
mov
jno
inc
mov
inc
fstps
les
pop
sahf
adc
and
repnz
inc
fistpl
jp
inc
push
lods
mov
xchg
ss
xor
test
popf
and
jo
pop
push
xor
loop
and
or
pop
add
iret
sahf
lret
shll
rol
pop
xor
or
push
mov
aaa
fcoml
das
jmp
lahf
jb
xor
mov
test
xchg
or
loop
jl
xor
sbb
jle
xchg
in
or
leave
fwait
or
cmp
stos
call
mov
xchg
shlb
or
je
mov
sbb
or
adc
das
xor
mov
stos
push
les
fsubs
test
pmaxsw
or
int
sbb
repnz
xor
int3
psrlq
ret
mov
pop
jne
xor
bound
outsb
loope
fbld
sbb
sub
mov
or
and
mov
xchg
popa
ljmp
aaa
mov
loopne
pop
cld
fnstsw
sub
adc
cld
xchg
mov
or
out
xchg
shr
inc
jb
pop
sti
rorl
xchg
shr
xchg
ret
jno,pt
das
add
add
adc
and
xlat
mov
hlt
pop
cltd
insb
inc
sub
cmp
pop
jle
jae
pop
addr16
outsl
xor
xor
lret
inc
pop
icebp
jns
data16
gs
and
mov
sub
lahf
lahf
and
push
xor
sbb
fxtract
incb
sbb
lret
and
fsubrl
leave
and
sbb
bsf
insl
dec
inc
xor
sbb
dec
jnp
mov
fsubs
pop
stos
lock
clc
jecxz
inc
test
sbb
lods
lds
push
mull
or
insl
pushf
xchg
dec
fistps
sbb
and
mov
ret
sub
das
inc
cmp
adc
mov
cld
fiaddl
bound
xor
push
mov
xchg
push
cmpsl
sub
adc
dec
lods
std
inc
push
sub
mov
and
sub
movsl
rolb
push
aam
out
pop
or
fdivs
flds
pop
in
test
add
mov
push
cld
and
or
mov
out
mov
sub
test
rorb
xor
xor
sub
sbb
adc
mull
mov
xor
cmp
lcall
pop
pop
push
icebp
scas
dec
mov
xor
push
lods
lret
sbb
gs
xlat
pop
cli
imul
cmp
jns
push
sbb
popa
push
mov
push
faddl
outsl
pop
push
xor
scas
jge
mov
mov
bound
mov
insb
pop
pushf
aam
hlt
aad
inc
push
xchg
ret
test
leave
sub
movsb
aas
jg
sub
mov
into
mov
stos
jp
xchg
cwtl
push
dec
and
iret
xchg
pop
sub
js
test
daa
fadd
adc
sub
push
dec
and
shll
pop
popa
nop
lea
push
leave
or
ss
imul
jbe
sub
push
test
lds
inc
xor
mov
sub
stos
pop
movsl
lods
sbb
dec
mov
pusha
pusha
cmp
mov
cmpsl
roll
mov
xchg
push
xchg
mov
outsl
sub
xlat
mov
jnp
movsl
jb
das
push
into
mov
jmp
jno
ljmp
jg
add
xchg
xor
xchg
xchg
cmp
lahf
imul
mov
add
pop
aaa
xchg
dec
negl
sbb
mov
xlat
mov
cmp
bound
adc
mov
sti
and
cld
mov
adc
movsb
les
ret
mov
call
in
in
jg
daa
xor
fprem
dec
loop
js
jnp
or
mov
popf
stos
pop
xchg
mov
xorl
dec
ret
aad
fcoms
push
pop
push
add
mov
or
clc
mov
add
mov
xor
inc
or
push
cmp
dec
and
cmp
gs
or
pop
aas
adc
adc
inc
xor
or
jbe
das
and
shl
repz
xchg
mov
std
jno
cmp
int
ja
inc
and
es
movsb
add
lahf
cmc
push
mov
xchg
fldenv
push
jge
mov
ds
add
mov
mov
adc
iret
and
or
sbb
xor
xorb
mov
jle
sbb
mov
mov
mov
xchg
inc
pop
pop
mov
pushf
int
cltd
xchg
addr16
arpl
fwait
scas
push
adcl
push
inc
loop
dec
sbb
mov
imul
in
inc
jmp
adc
cmp
add
cmp
dec
push
push
xlat
sub
movb
add
not
test
and
insl
jns
loopne
das
and
and
xchg
iret
adc
mov
aaa
xchg
out
push
sub
pop
xlat
pop
arpl
scas
sub
cltd
mov
mov
in
adc
call
xor
or
pusha
add
stc
imul
pop
ja
xorb
or
mov
pop
icebp
out
add
jge
testb
arpl
mov
push
dec
xchg
pop
jo
adc
push
jbe
inc
push
loop
movsb
bound
movsb
and
in
or
inc
sub
mov
dec
mul
mov
inc
xlat
rcrl
inc
sbb
cmc
adcl
lds
nop
scas
sti
mov
jns
push
sbb
jge
mov
xchg
clc
int
lret
xor
jge
nop
mov
dec
xchg
add
or
push
sbb
jae
dec
dec
jecxz
ss
push
inc
pop
xor
or
aad
push
popa
dec
test
sbb
gs
in
jae
pop
bswap
mov
jmp
mov
cmp
mov
fldenv
lret
stc
sbb
mov
pop
dec
push
adc
mov
xchg
mov
pushf
ficomps
sub
es
sub
repnz
cmp
sbb
sahf
iret
sbb
adc
sbb
sub
xchg
aam
aam
pop
jle
fcompl
mov
ds
push
aam
add
mov
or
cmp
dec
negb
xchg
incl
cmp
movsb
inc
lret
cmp
and
inc
pop
cli
popf
and
pop
or
loope
in
cmpsb
ror
dec
mov
imul
mov
xor
xchg
jo
sbb
mov
movhps
es
out
insb
push
and
inc
lret
pop
mov
adc
aaa
cmp
sub
sub
cltd
xchg
pop
mov
repz
lret
lds
sahf
inc
xchg
xor
mov
cmp
pop
dec
adc
or
in
and
pop
scas
fisttpll
jecxz
push
popf
sub
add
xchg
stos
lret
mov
aaa
mov
pusha
out
dec
adc
add
or
scas
pushf
inc
inc
rorb
xchg
shll
sahf
adc
repnz
out
push
cmpsl
loopne
xor
stc
mov
pop
ja
push
sub
ljmp
test
cmp
dec
hlt
mov
xor
mov
into
adc
lret
int
cmc
stos
xchg
or
pop
push
adc
inc
cmp
sub
pusha
jmp
inc
ja
decl
mov
pop
adc
pop
in
mov
xchg
sub
mov
jbe
sbb
adc
andb
cmp
cmpb
xchg
mov
pusha
mov
shl
xor
aam
nop
inc
mov
in
sti
stc
mov
adc
sub
imul
push
cld
sub
jg
rcrl
fsubr
xchg
testl
fs
dec
mov
movsl
enter
or
xor
dec
adc
bnd
inc
push
loop
movsb
leave
mov
inc
mov
mov
fwait
jo
jns
roll
xchg
push
fsubrs
andl
add
mov
jge
push
mov
out
sub
daa
enter
fs
enter
xchg
bound
mov
mov
push
imul
test
fsts
mov
dec
insb
adc
pushf
xor
lods
push
inc
xlat
jecxz
mov
mov
xor
nop
aaa
loopne
rorb
add
and
inc
xor
mov
jmp
sarl
mov
out
imul
push
daa
dec
push
hlt
insl
sarl
adc
sti
xchg
push
inc
adc
loopne
jle
push
add
mov
mov
xchg
push
dec
in
sub
mov
pop
push
inc
movsl
cmc
cs
popa
push
inc
ret
cltd
inc
mov
fstps
inc
adc
insl
leave
mov
add
scas
loopne
jnp
mov
cli
and
cld
cs
aad
mov
mov
rcr
jne
sub
add
hlt
push
cmp
stos
jecxz
pushf
jl
rcrl
jbe,pn
cltd
aam
jl
arpl
sub
mov
adc
mov
fldt
jo
pop
out
cmpsb
and
push
stos
jne
cwtl
xchg
daa
xor
dec
adc
out
in
jmp
mov
movsb
inc
add
jl
pop
cmp
std
sbb
pusha
or
loopne
into
mov
push
or
scas
loope
xchg
jne
fwait
std
ds
sub
ret
pop
lods
aaa
mov
hlt
sub
adc
sahf
sub
add
cmpsl
or
arpl
das
push
xlat
data16
repz
lcall
push
dec
xchg
xchg
add
sbb
push
add
and
cli
xchg
dec
stc
inc
mov
xchg
pop
jns
mov
sbb
pop
push
stos
pop
sub
inc
fdivrs
out
scas
dec
loope
push
sub
insl
ss
lret
xchg
jl
push
popa
mov
mov
xchg
push
out
shr
shrl
sbb
sbb
fadds
dec
in
dec
lods
jno
popa
inc
stos
push
cmp
xchg
lea
cmp
or
into
mov
jne
outsl
test
popf
add
test
mov
int
hlt
adc
pusha
decl
or
inc
mov
cld
in
or
icebp
aaa
dec
xchg
arpl
sub
mov
test
test
outsb
out
aam
push
lahf
mov
fmuls
mov
pusha
aam
fmul
rcll
pop
ret
repz
ret
mov
fldenv
jb
addr16
pusha
inc
clc
adc
ret
add
jo
lods
add
xchg
and
add
xor
jg
add
pushf
mov
sub
fwait
lret
rol
push
mov
lcall
mov
rcrb
ljmp
pop
mov
jecxz
inc
das
and
fisubrl
cwtl
out
icebp
xor
cmp
shl
sarl
stc
push
jl
loope
pusha
je
aaa
or
movsb
push
add
and
jmp
mov
jnp
push
fst
jo
mov
out
mov
in
sbb
stc
cmp
ret
sti
or
xor
push
into
test
js
jbe
addl
inc
inc
mov
cmpsb
inc
pop
add
dec
mov
adc
push
inc
mov
sbb
xchg
dec
mov
dec
sub
ja
jae
addr16
jmp
out
xchg
loop
lock
mulb
or
xchg
imul
or
xor
sti
ret
lods
push
xchg
xchg
std
clc
cmp
std
pop
pop
enter
stos
jo
test
int3
inc
int3
mov
mov
pop
adc
mov
shl
push
mov
xor
inc
push
jge
test
inc
push
and
loope
inc
jl
fisttps
push
scas
inc
sbb
cmpsl
cmp
pop
fbstp
mov
addr16
pop
lods
pop
out
mov
movsb
sarb
cmpsl
daa
mov
adc
adc
je
test
daa
xor
hlt
shlb
nop
sahf
cmc
sub
fcmovnb
or
lock
pop
xor
fwait
or
inc
inc
jae
cmp
aad
nop/reserved
lods
shlb
sub
jmp
cld
sub
add
test
cwtl
adc
push
adc
arpl
and
xlat
movl
pop
mov
std
mov
aam
imul
es
sub
adc
xchg
add
call
mov
arpl
xchg
insb
push
arpl
shlb
into
sub
dec
jecxz
outsb
gs
push
inc
or
data16
shrb
imul
in
daa
jmp
pop
dec
sub
repz
sbb
and
dec
aad
pusha
sbb
mov
dec
cwtl
cmpsl
mov
inc
cmc
xchg
mov
insb
cwtl
out
jne
dec
jbe
les
es
push
cmp
xchg
push
jne
xchg
roll
xchg
mov
out
dec
fwait
int
popa
adc
xor
and
sar
lods
jp
es
xchg
sub
cmp
xor
fmulp
mul
cmc
xchg
mov
mov
outsb
lcall
lcall
push
jo
ja
xor
lds
sbb
hlt
call
pop
jg
pop
movb
js
sbb
inc
push
adc
mov
push
int3
xor
gs
je
or
loop
xor
mov
mov
and
pop
test
sbb
mov
inc
es
in
mov
sbb
imul
mov
notb
xchg
test
push
fdivrp
fdivrl
pop
pop
insb
in
push
push
xor
jae
lock
in
mov
inc
or
inc
xor
ja
outsl
dec
stc
lods
ficoml
xlat
popf
sarb
xchg
or
push
sub
xor
xor
sub
ret
push
jmp
fdivrs
clc
push
or
dec
not
adcb
add
sbb
pop
and
popf
sbb
ret
or
movsl
test
test
and
fistpl
mov
negb
lea
ljmp
fnop
add
out
loop
xlat
das
xchg
imul
sub
xor
jmp
cmpsb
or
scas
push
push
test
cmp
popf
add
jns
cs
pop
pop
mov
dec
aam
push
adcb
mov
mov
fists
fwait
loopne
cltd
lds
cld
xchg
sub
xorl
xchg
pop
pop
insl
loope
sbb
daa
fwait
sahf
movsb
clc
ret
test
sbb
lea
pop
and
or
dec
mov
sbb
xor
insl
push
mov
mov
mov
pop
pop
aas
cld
xor
cmp
nop
cmp
dec
or
je
out
and
sub
dec
push
call
fnstenv
jge
negb
subl
cli
movsb
mov
ja
lahf
out
pushf
repz
imul
fidivrs
and
dec
xor
xor
xchg
dec
sub
pop
cmp
xchg
arpl
push
pop
repz
xor
aaa
push
lahf
add
cmpsl
push
cmpsb
jle
mov
sbb
lock
adc
movsb
je
add
decb
nop
push
adc
imul
cmp
daa
mov
xadd
fs
arpl
jno
aas
test
sbb
push
test
adc
imul
dec
jmp
cmp
push
movl
fisubs
mov
jge
int3
sbb
es
in
cwtl
push
into
rorb
and
cmp
add
shlb
shlb
mov
lods
pop
scas
inc
aaa
push
add
fcoml
test
iret
jnp
es
adc
movsl
imul
mov
jg
jl
dec
insl
jns
sbb
inc
imul
push
and
dec
cld
cltd
enter
push
imul
test
cmpsl
ror
push
dec
cmc
jg
es
mov
shlb
mov
lret
loop
mov
fmul
jae
mov
pop
add
daa
jle
jmp
cmp
adc
xor
in
cmpsb
pop
pop
loop
mov
inc
in
aas
sarb
cs
cmp
in
sub
push
mov
aas
scas
pop
push
std
sub
mov
imul
xchg
inc
inc
mov
scas
imul
push
and
mov
dec
and
fsubs
loopne
add
cmp
sub
imul
stc
ds
mov
xor
mov
cs
bound
and
mov
stc
jno
in
push
dec
xor
das
dec
sub
ds
fwait
cmp
pushf
jle
jns
cmp
out
lcall
push
ret
icebp
js
push
lods
mov
adc
lods
sub
sbb
call
and
pop
sbbl
inc
in
in
push
cld
loop
mov
mov
imul
stos
xor
or
adc
stos
or
leave
shll
dec
pop
fsubs
repnz
pop
dec
lods
push
shlb
adc
test
es
mov
sbb
pop
into
jns
arpl
in
mov
addr16
push
in
int3
xor
idivl
leave
mov
jl
mov
or
ret
dec
xchg
lea
aas
jle
push
test
jg
clc
or
imul
cmc
pop
mov
loope
iret
jmp
mull
mov
mov
sbb
fisubl
pop
adc
add
cmpsb
or
adc
or
pop
dec
insb
gs
inc
rorb
in
stos
cltd
sbb
or
mov
jg
or
in
sbb
and
push
scas
dec
ljmp
lcall
sbb
andb
orl
pop
lcall
popa
mov
ja
pop
loope
aam
mov
int3
jg
push
lds
jnp
xor
jae
cmp
rcrl
mov
push
in
and
stos
mov
lahf
sarb
adc
or
and
int3
xchg
test
mov
out
jne
jecxz
pop
mov
dec
mov
xlat
xor
and
dec
gs
xchg
scas
fwait
pop
mov
jle
xchg
stc
daa
xor
pop
int3
int
sahf
clc
sti
popf
je
cwtl
adc
jno
arpl
rcl
cmpsb
cmpsb
cli
adc
stos
test
shlb
fwait
sub
rep
int3
iret
cltd
int3
fnstcw
inc
sbb
cmp
mov
lock
cmp
leave
out
cmpsl
cmp
pusha
int3
jg
push
inc
dec
sub
out
roll
ljmp
cli
xchg
mov
lods
add
push
xor
aam
sbb
mov
jno
cmpb
dec
adc
out
sub
xchg
xchg
add
xlat
dec
int
dec
mov
rcll
xor
mov
lcall
adc
loop
xchg
mov
push
loop
add
cmp
or
sub
mov
ret
ret
add
or
cmpsb
add
cmpsb
ljmp
and
jmp
sub
sub
adc
jl
lcall
xor
subl
push
in
mov
popf
lea
roll
or
cmp
out
push
pop
jg
sbbb
or
sbb
imul
scas
lds
and
ja
xor
xchg
mov
mov
pop
xlat
jae
ret
pop
fsubr
push
ret
addr16
lret
pusha
add
in
test
adc
lret
das
sahf
sbb
sahf
push
push
xchg
pop
in
sbb
mov
stos
fnstcw
adc
xor
aam
xor
mov
out
pushl
pop
add
adc
mov
xchg
adc
mov
push
in
push
ja
mov
jg
pusha
pusha
sbb
mov
add
jge
jg
inc
xchg
clc
addl
inc
or
sub
imul
fnstsw
daa
cltd
bound
cld
and
adcl
push
adc
sbb
pushf
mov
test
stc
inc
popf
clc
mov
xor
loope
out
xchg
xchg
adc
inc
pop
push
xchg
xchg
sub
sub
es
in
mov
sub
lcall
sbb
stos
shl
lahf
inc
sbb
jl
push
xchg
lods
mov
cmc
and
aam
test
mov
test
inc
dec
popa
dec
xor
cmpsl
inc
idivb
outsl
sbb
jp
cmp
lahf
mov
push
jle
lret
movsb
mul
aad
iret
or
sbbb
ds
cmpsb
out
lods
inc
cwtl
lcall
repnz
xchg
sbb
adc
jns
aaa
iret
cmp
sub
popa
dec
leave
ss
dec
push
stc
mov
adc
cmp
inc
test
mov
pop
adc
jp
loope
outsl
xchg
notb
lahf
add
scas
aam
adc
or
jnp
lret
das
fisubrs
shrl
pushf
pushf
insb
rclb
sahf
movsb
neg
push
insb
in
hlt
mov
sub
mov
xor
jmp
and
xchg
ja
add
lods
jo
jge
push
clc
or
int
and
inc
mov
das
sub
add
scas
jg
repz
lods
or
xor
adc
pop
jb
dec
mov
lock
mov
mov
jle
aad
scas
xlat
fcoml
cmp
push
dec
aam
out
xchg
test
mov
xchg
aad
or
push
xchg
aaa
mov
cmp
stc
pop
xlat
ss
pushf
mov
and
jbe
repnz
pop
mov
mov
cmp
xor
pop
loopne
add
mov
push
je
shll
cmp
aas
jae
insl
lahf
cmpsb
fcmovnu
inc
shlb
xchg
lret
std
inc
xor
cmp
xor
push
sub
pusha
je
call
jnp
mov
pop
inc
call
imul
push
sub
push
sub
sahf
pop
jb
pop
xchg
xor
mov
xor
mov
inc
fnstsw
nop
gs
leave
testl
fsubrl
daa
sub
jecxz
scas
inc
adc
rclb
dec
popa
shl
out
pop
dec
inc
fcomps
dec
pop
pop
jecxz
mov
sub
sbb
jns
rcll
mov
leave
add
mov
push
dec
jb
mov
into
xor
xorb
mov
or
fisubrl
pushf
jo
insb
pop
and
mov
movsb
stc
pop
pop
inc
lock
mov
rcll
rcl
xchg
shlb
cli
sub
repz
xor
mov
pop
xchg
rclb
dec
rcrb
mov
and
xor
push
sahf
cmc
pop
jg
in
adc
outsb
xchg
mov
and
pop
pop
pop
jno
xchg
std
shl
jbe
test
notl
adc
cmc
cltd
xchg
data16
sbb
sbb
mov
jbe
imul
lods
cmp
shll
mov
dec
sbb
dec
in
outsb
jmp
xor
cwtl
shll
movsl
pusha
inc
sub
cs
idivl
mov
inc
daa
ficompl
mov
add
in
push
int
leave
push
pop
rcll
cltd
sti
dec
es
mov
mov
push
leave
mov
ret
inc
pop
into
or
rolb
imul
stos
cltd
test
cmc
notb
or
mov
and
add
xlat
cmp
inc
or
push
mov
and
arpl
pushf
inc
and
jmp
scas
add
fwait
dec
jns
jle
jecxz
and
jmp
enter
fcompl
dec
pop
adc
aam
aad
movsl
fstps
jecxz
and
nop
add
cmp
enter
loop
and
push
orl
in
bound
mov
mov
shlb
jne,pt
addr16
icebp
test
cmp
xchg
aam
jg
jl
and
dec
cld
inc
cli
mov
jo
jl
jo
jmp
ss
mov
popf
test
mov
dec
jno
xor
in
ljmp
xchg
xor
pop
adc
inc
push
popf
in
into
xor
adc
fisubl
dec
nop
mov
xor
adcb
pop
sti
cmpsl
mov
lahf
xor
addr16
lea
bound
jb
sbbb
inc
cld
or
xchg
je
xor
icebp
xchg
jg
jle
push
mov
sbb
dec
jp
cld
pop
dec
ret
in
aam
pop
in
in
pop
bnd
lcall
mov
loope
arpl
int3
popa
cmp
loopne
and
pop
stos
add
ud1
leave
mov
nop
pop
loope
jge
inc
push
pop
mov
rcrb
scas
mov
rorb
rolb
in
shrb
popf
ss
adc
icebp
test
jb
out
scas
imul
aad
mov
inc
add
or
test
icebp
popf
inc
in
adc
test
rorb
les
out
mov
inc
inc
movsb
adc
jmp
enter
les
inc
sbb
mov
mov
sbb
arpl
mov
rcrl
sahf
sbb
mov
mov
add
shlb
gs
xchg
mov
out
sbb
dec
xlat
arpl
rcll
xor
ret
fcmovu
or
mov
mov
fsubr
stc
imul
pushf
loopne
inc
test
xor
test
cmp
inc
sbb
add
jmp
mov
push
mov
stc
je
lahf
dec
roll
into
fisttpl
lahf
subl
punpckldq
cmp
adc
xor
insb
in
push
leave
rol
mov
mov
loope
adc
or
jl
test
cmpb
xor
add
outsb
mov
kmovw
lods
dec
cs
dec
inc
insb
cli
sub
aam
xchg
mov
out
pop
adc
push
jmp
mov
adc
fimull
call
xorb
pushf
ficomps
imul
cmpsb
ficoms
or
insl
jmp
pusha
adc
mov
outsl
shrb
xor
sbb
sub
mov
testl
stc
xor
push
aam
or
stos
call
or
fcmove
jns
pop
jo
fnsave
in
adc
jbe
stos
pop
cltd
lock
mov
add
loopne
les
je
aam
inc
xchg
mov
pop
xor
insb
pop
repz
fdivrl
imul
inc
mov
dec
pop
xor
xchg
sbb
out
push
enter
cmpsb
stos
out
sub
xchg
and
mov
mov
and
int3
test
adc
mov
pcmpeqd
ret
inc
push
mov
cmp
lods
fmul
shrb
jb
jbe
mov
dec
ret
xchg
outsb
mov
push
xchg
int
and
mov
and
and
jo
jge
nop
ds
jnp
stos
enter
jno
mov
scas
jmp
inc
rcrl
sti
dec
add
int3
xchg
or
sbb
lods
lods
push
xchg
xor
dec
mov
nop
mov
inc
pop
push
adc
sbb
fcoml
jns
shr
rorb
cmpb
push
add
mov
adc
sbb
jb
lods
movsb
inc
stos
inc
idivl
std
ds
xchg
cmp
in
dec
dec
pop
hlt
test
aad
dec
add
push
subl
dec
ret
rcll
inc
pop
std
pop
jg
negb
fsubl
lahf
out
sbb
add
popf
jle
add
aas
jne
mov
inc
jnp
jae
cmp
jae
inc
cmp
push
cmpsl
or
xchg
fwait
cmp
fidivs
loop
test
cmp
add
inc
fldl
ds
lcall
out
mov
mov
push
push
fnstsw
sbb
inc
sub
push
jge
jge
fwait
sub
enter
ficompl
cmp
rorb
push
movb
or
mov
mov
enter
mov
in
jmp
pop
jl
xchg
jl
out
add
imul
out
mov
lds
stos
outsl
xchg
sbb
stos
jbe
enter
push
add
nop
dec
push
rolb
inc
mov
jp
jbe
lahf
mov
pop
push
push
mov
or
sbb
inc
ret
pushf
ret
test
insl
mov
mov
repz
jb
pop
jbe
jbe
loop
mov
in
adc
xchg
sbb
in
insb
add
fisttps
and
nop
mov
xchg
outsb
mov
push
imul
pop
hlt
push
test
or
push
pop
xor
lods
push
push
xorb
push
mov
loop
cmpsl
hlt
fdivs
xchg
sbb
rorb
mov
xor
test
dec
mov
push
dec
push
ret
cli
out
xor
lret
mov
mov
sbb
sub
test
push
daa
sbb
sbb
rcl
add
cwtl
outsb
mov
xchg
imul
outsb
jle
pop
cli
mov
mov
jb
jmp
nop
incl
mov
push
mov
inc
insl
push
sub
add
inc
add
dec
dec
adc
push
inc
fnstenv
addr16
jle
and
mov
mov
mov
mov
addl
out
mov
lock
or
ret
arpl
mov
into
mov
push
addl
fidivrs
push
jl
insb
gs
lods
or
push
idivb
sub
jp
icebp
xchg
rol
sub
jg
call
cwtl
cmp
xor
jne
cmpsl
or
aam
loope
push
push
insb
xor
and
pop
inc
aas
add
xchg
and
rorl
arpl
lds
pop
rcrb
repnz
movsl
add
sbbb
in
adc
and
or
call
lods
cld
and
loope
xlat
pop
xchg
add
enter
pop
jg
lods
bound
sbb
inc
imul
cmpsl
pop
adc
mov
fiaddl
out
cltd
pop
sbb
mov
inc
rcrb
push
or
inc
fsubrl
sbb
std
aad
push
push
fprem1
cmpsl
ret
lcall
test
and
mov
loop
push
dec
xorl
out
lret
mov
lds
and
push
imul
add
andl
ljmp
adc
jmp
cmp
imul
xor
sub
dec
sbb
cmp
test
shll
jle
dec
sbbb
outsb
or
mov
add
insl
jmp
jbe
shlb
pop
mov
or
test
and
sti
mov
daa
scas
lret
mov
clc
out
scas
sub
insb
pop
in
shll
fbstp
push
mov
cmpl
xchg
into
ss
das
cli
mov
add
inc
pop
lcall
dec
mov
dec
sbb
dec
aaa
sub
in
inc
jecxz
pop
je
mov
push
mull
sub
out
hlt
das
mov
dec
ret
in
jno
mov
dec
xchg
movsl
sbbb
ret
sub
adc
adc
sbb
lret
adc
divl
pop
imul
adc
jnp
stos
xor
cli
xchg
imul
iret
sbb
pop
jae
mov
jmp
cld
pop
mov
jmp
les
repz
jecxz
mov
push
xor
ja
div
push
mov
xor
jnp
cmp
lret
sub
jne
mov
ret
lock
adc
fisttpll
xchg
jmp
lods
in
cwtl
out
dec
test
fs
pop
push
shlb
lods
pop
adc
orb
push
stos
ret
push
ds
stos
aad
js
int
popf
add
sub
mov
jp
pop
adc
jbe
xchg
xor
pop
outsb
sbb
jp
cmp
imull
dec
mov
sub
jb
or
test
loopne
mov
notl
hlt
push
add
popf
mov
mov
mov
fnsave
push
mov
mov
daa
insl
lcall
push
xor
mov
sbb
mov
pop
add
cmpl
adc
xchg
insb
cmp
ret
insl
out
cld
aaa
shrb
dec
shll
mov
enter
fnstenv
int
inc
xor
xchg
jmp
cmpl
ror
and
and
fs
daa
sub
inc
adc
cmp
fidivrs
scas
sub
push
fwait
les
jne
scas
jge
dec
test
rcrb
push
pop
out
iret
fisttpl
mov
scas
mov
pop
add
push
push
push
lods
push
mov
out
dec
pop
mulb
sub
lock
in
cwtl
push
and
aaa
add
out
fcomps
mov
pop
push
xchg
adc
dec
dec
mov
addl
fidivrs
mov
adc
sbb
outsl
jb
cmpsb
repnz
gs
and
popa
xor
lcall
lock
mov
into
outsl
jecxz
or
mov
notl
jbe
subl
mov
xor
pop
xchg
ret
adc
in
pop
cmp
aaa
or
scas
std
push
repz
fimuls
sbb
xor
mov
les
mov
repz
adc
movl
es
push
and
pop
cmp
jnp
mov
cmpsb
mov
lock
outsl
xchg
stos
daa
out
stc
push
loop
jle
sub
jbe
insb
sbb
mov
movsl
das
sbb
lock
sub
int3
jmp
mov
inc
mov
lds
pop
ja
or
imul
test
stos
xchg
out
pop
scas
ret
xor
adc
rorb
jo
mov
inc
faddp
std
call
jo
push
xchg
and
cwtl
add
ja
test
push
push
lea
jmp
push
js
cs
in
out
nop
mov
out
icebp
jmp
push
lods
or
ss
mov
xchg
xor
stos
out
in
adc
xchg
in
xchg
js
movsb
inc
xchg
stc
add
dec
xchg
int
and
mov
adc
dec
pop
sub
scas
dec
addb
icebp
lods
stos
jno
stos
notb
sbb
js
pop
sub
jp
fwait
and
inc
jle
and
out
leave
ljmp
int3
lods
xor
or
mov
mov
lret
bound
mov
adc
add
pop
daa
leave
inc
jle
mov
cltd
fnstenv
xchg
insl
inc
sub
mov
mov
cmpsb
mov
ja
inc
xchg
mov
cmp
cmp
rcr
jnp
int
mov
xchg
in
and
addb
loopne
or
jge
cs
cmp
fstpt
scas
push
lret
icebp
in
ret
ret
arpl
jbe
sti
lahf
sbb
into
inc
cmp
push
or
pop
and
mov
push
push
aam
add
pop
and
rcll
jns
cs
jbe
ficoms
movsb
xchg
sub
sbb
cmpsl
faddl
xchg
fs
test
in
jne
cs
dec
call
cmp
into
mov
sub
rorl
sbb
mov
push
data16
sbb
pop
pop
cmp
mov
call
cli
aaa
fisubrs
fwait
sbb
aad
imul
adc
stc
movsb
push
jbe
sahf
popf
mov
and
or
jl
inc
lock
in
rcll
adc
loopne
sbb
sbbl
test
andb
fstpt
popl
mov
cmp
cli
push
push
lock
push
jle
or
cltd
pop
mov
test
cmp
jb
adc
push
arpl
sbb
jl
dec
pop
mov
jnp
test
dec
jg
ret
cmp
cmpb
pushf
inc
arpl
sahf
cmp
jg
xor
pop
sub
mov
out
leave
push
pusha
sar
sub
mov
shll
fwait
pop
pop
xor
cmp
pop
in
mov
ljmp
fimuls
repz
jmp
xor
out
das
xchg
loop
rcrb
pop
lods
mov
adc
mov
pop
cltd
icebp
add
mov
add
lds
shrb
sub
aaa
xchg
sbbb
leave
and
pop
stos
push
mov
jbe
std
cld
lea
sahf
sahf
or
leave
mov
xor
mov
leave
push
mull
adc
mov
mov
mov
push
arpl
lcall
mov
and
lret
jae
push
mov
dec
mov
push
xor
jns
pop
stc
jecxz
je
ret
in
shrb
cltd
mov
out
ret
jo
out
sub
mov
pop
arpl
iret
inc
push
pop
pop
mov
sbb
add
jl
in
sbb
adc
pop
roll
out
jp
test
adc
push
mov
int
fs
xchg
icebp
mov
cmp
fldcw
mov
js
cmp
loop
test
fcomps
out
js
in
stos
lcall
jns
aas
adc
xor
loope
or
mov
pop
testl
mov
push
shrb
and
sbb
pop
dec
and
xor
mov
dec
movsl
push
addl
ja
dec
ja
pop
add
test
stos
sub
and
sahf
mov
data16
sbbb
aas
fnsave
jae
mov
add
cmp
ret
lret
adc
push
jg
sbb
jb
sub
add
scas
add
nop
adc
pop
pushf
dec
nop
loopne
jmp
sbb
pop
sahf
or
mov
lret
pop
sbb
in
cmpsb
xchg
lret
subb
jge
mov
cmp
lea
test
push
jno
xchg
test
xchg
ficompl
xchg
pop
dec
daa
das
pusha
lea
mov
dec
mov
ret
mov
mov
adc
xor
enter
test
pushf
xchg
or
pop
jecxz
and
push
test
or
cmp
push
mov
xorb
xchg
outsl
les
mov
shrb
pop
jg
repz
and
andl
aam
icebp
and
movsl
add
and
and
aam
out
jno
adc
pop
and
sti
cmp
and
js
mov
inc
push
cmpl
add
pop
notl
in
rorb
ljmp
xchg
cmovbe
push
fcmovnb
addr16
pop
fwait
ja
lcall
or
mov
inc
jb
ds
lds
mov
repz
fnstenv
neg
jb
pop
idiv
adcl
push
sbb
arpl
std
push
inc
or
les
popf
leave
xchg
jne
out
mov
test
sbb
ss
cmc
cmp
sti
ror
and
sub
cmp
add
and
cwtl
jo
into
fmuls
jmp
lahf
sbb
setbe
data16
imulb
jb
push
aas
repz
repz
sub
fildll
jo
ret
xchg
xchg
push
xor
stos
mov
cmp
stc
mov
add
jns
inc
cmpsl
mov
sub
rclb
and
lods
call
mov
inc
lcall
mov
call
arpl
sti
aaa
sbbl
cmp
xor
adc
xorl
and
mov
pop
sub
hlt
pushf
ss
jp
push
jae
inc
data16
cmp
repz
into
cmc
mov
pop
inc
sbb
and
xlat
iret
clc
mov
mov
push
ljmp
insb
loope
mov
pop
es
notb
sbb
test
sub
sub
xchg
and
test
push
jg
dec
sub
pop
adc
lock
popa
jae
in
push
push
in
in
sbb
jmp
sub
mov
lahf
test
jae
mov
fwait
repz
adc
pop
push
adc
xchg
mov
sub
xor
mov
scas
aad
das
sti
adc
clc
mov
push
js
mov
std
adc
imul
mov
push
rolb
xor
fisttps
xchg
push
mov
push
lret
imul
jmp
add
pushf
mov
pop
es
out
outsb
in
shll
ja
add
mov
mov
mov
jecxz
mull
and
adc
aad
xchg
daa
inc
dec
je
cwtl
cltd
sub
fsubr
jmp
sahf
stos
inc
in
pop
ret
movsl
pop
ja
enter
pushf
adc
fimuls
fmuls
sbb
clc
pusha
negb
mov
sub
sub
scas
fdivl
lods
add
insl
sbb
dec
dec
test
xchg
adc
mov
cmp
mov
test
sub
mov
pop
pop
mov
pop
je
cld
and
and
popa
mov
loope
push
loopne
and
fistpl
pop
lret
cmp
and
xchg
lock
jb
inc
inc
jne
inc
mov
lret
adc
xchg
inc
mov
mov
cli
scas
repnz
gs
xor
fmuls
aas
mov
xor
xchg
cld
push
push
fldl
push
outsl
jg
and
out
sbb
xor
es
pop
and
fs
xchg
inc
xchg
jg
lds
xor
adc
mov
clc
push
stos
sbb
pop
pop
sub
das
popf
insl
test
call
push
xor
cmp
xchg
int
sbb
push
insl
jb
scas
mov
xor
lret
jp
mov
jp
stc
sbb
lds
sub
xor
or
cltd
pop
xchg
or
sub
mov
movsb
pop
jne
and
mov
cmp
pop
int
aam
xchg
mov
push
bound
jbe
iret
dec
aam
jbe
pop
imul
sbb
pop
push
push
xchg
ret
and
daa
popw
lahf
lcall
jnp
xor
inc
or
inc
add
push
test
inc
xchg
sbb
popf
pop
and
aas
sub
mov
popf
dec
hlt
pop
jp
xlat
mov
and
ja
out
mov
adc
sti
loopne
add
and
pusha
loop
fwait
adc
mov
and
and
and
cmc
pushf
xchg
inc
jecxz
rclb
cmp
mov
sbbl
jo
mov
pop
sbb
add
mov
jbe
add
lds
push
leave
dec
pop
movsb
or
or
mov
arpl
pop
fldenv
fdiv
dec
inc
decl
mov
and
ret
pop
insl
lods
inc
cmpsl
mov
pop
pop
out
sbb
cmp
pop
cmpsb
jg
adc
push
cli
and
xchg
xor
push
packuswb
pushf
mov
push
sti
or
shlb
mov
mov
pop
push
neg
xchg
arpl
xor
adc
and
sbb
addr16
ffreep
mov
ja
lods
es
les
sub
scas
test
xchg
xor
xor
inc
sbbl
cmp
mov
cmp
push
in
mov
je
lock
pop
decl
fs
push
jo
hlt
out
jmp
push
lods
push
cmp
call
loope
icebp
pop
dec
lret
lds
inc
sbb
addr16
mov
mov
cwtl
push
mov
repnz
loopne
fwait
or
dec
dec
cld
into
push
xchg
cmp
jb
mov
dec
pop
or
ja
data16
xchg
pop
jge
cmp
cltd
js
adc
int3
fwait
cmp
dec
cmpsl
setb
pop
bound
sub
pushf
jmp
cmp
dec
jle
pop
test
jg
call
mov
js
or
sub
push
mov
fbld
in
out
cmpsl
mov
adc
pushf
push
xor
mov
dec
jne
out
ljmp
shr
cmp
cmp
and
leave
mov
pop
cmpsl
push
mov
sbb
int3
and
cmp
dec
adc
cmp
pop
ljmp
je
mov
outsb
clc
mov
and
fcomps
mov
fdivrs
sbb
iret
lcall
int3
xor
and
in
int3
sar
lcall
out
cmp
inc
add
inc
aas
pushf
loop
sbb
xor
dec
sbb
mov
push
push
nop
bound
in
idivb
jecxz
mov
in
dec
mov
cmc
mov
mov
xor
cmp
cmp
inc
in
inc
xchg
in
out
cmp
call
sbb
cmc
mov
sbb
mov
and
inc
push
adc
dec
fstpl
mov
scas
shll
mov
cmpsl
sub
xchg
shlb
xchg
inc
mov
mov
or
ficoms
loope
stc
in
mov
sbb
lret
into
jnp
xor
inc
out
sub
push
jae
inc
fisubs
xlat
aaa
jl
int3
lea
and
adc
scas
test
jb
push
pop
rcr
sarl
cmpb
scas
shll
arpl
and
test
and
lahf
sahf
lahf
and
dec
shr
int
pushf
jo
xchg
pusha
ds
push
in
mov
pop
loop
jne
sbb
hlt
pop
mov
lret
bswap
inc
push
push
popa
mov
inc
out
lret
das
movsl
mov
mov
xchg
orb
inc
pop
loopne
mov
dec
push
xchg
negb
in
sbb
dec
ljmp
cmc
pop
push
mov
push
dec
das
and
push
or
out
add
add
orb
ret
lock
cmp
inc
iret
jle
inc
cmp
inc
push
stos
mov
int3
add
adc
stc
in
imul
push
hlt
mov
mov
fcoml
adc
add
outsl
pop
add
jb
mov
jp
std
sub
inc
js
addr16
movsl
out
mov
lods
jnp
std
cs
push
sbb
xorl
lahf
mov
push
xchg
sbb
inc
mov
adc
inc
add
fs
add
orb
cmpsl
test
mov
mov
adc
fdivrl
adc
iret
add
mov
adc
aad
test
aaa
shlb
jge
or
addr16
std
xor
push
pop
xlat
lods
loope
rcl
leave
addr16
mov
jmp
xchg
addl
add
xchg
ss
xchg
jne
pop
ds
rcll
mov
jp
push
push
loopne
ss
xchg
mov
pushf
sub
in
adc
mov
rorl
mov
out
mov
adc
es
mov
cs
cmp
aad
insb
cmovle
mov
and
adc
xor
movsb
dec
sbb
push
stos
addr16
cmpsl
sub
into
adc
rcrb
sbb
jne
mov
adc
stc
stos
jge
xlat
sti
inc
sbb
decb
dec
push
in
popa
pop
aad
xchg
inc
mov
pop
ficompl
xor
outsl
cs
std
je
dec
dec
cmpsb
fmull
mov
and
inc
pop
sub
jg
push
add
cli
enter
les
push
adc
push
int3
sarl
aaa
ror
hlt
not
xchg
nop
sbb
std
inc
je
sahf
lahf
cmp
cmpsb
cs
jmp
out
loope
popa
pop
mov
rcl
jge
cwtl
mov
xorb
or
insb
lret
or
test
push
inc
xchg
xlat
mov
lahf
pop
sub
or
ja
add
cmp
lods
inc
mov
dec
jns
inc
lock
clc
in
push
sub
roll
xchg
arpl
inc
sbb
ja
sbb
pop
fdivrs
mov
push
insb
add
cmp
jmp
pushf
push
add
aad
cmc
xchg
mov
inc
pushf
push
and
inc
mov
jecxz
sub
inc
push
fsts
pop
stos
in
and
cmp
shl
popf
cmpsl
dec
dec
and
shlb
mull
lock
sbb
jecxz
push
or
mov
inc
add
cmp
leave
sub
xchg
je
xchg
bound
xchg
push
mov
jmp
rcl
jle
and
cmc
out
and
xor
lahf
jb
mov
ds
adc
shrl
pop
out
pop
pop
lret
add
mov
adc
jae
mov
jp
sbb
cli
loopne
mov
sbb
jne
adc
lret
lods
jmp
add
lock
push
cld
mov
and
xchg
pop
test
mov
addr16
shl
fldcw
sahf
push
xchg
std
roll
test
xor
js
jmp
shlb
and
add
push
dec
std
xor
dec
push
pushl
push
gs
in
in
mov
xlat
test
mov
rcll
stc
push
or
lret
nop
gs
pop
inc
xlat
in
dec
jno
or
sti
ja
bound
add
into
mov
xlat
inc
dec
mov
pusha
mov
push
mov
aas
sar
push
jbe
xchg
fcoml
jle
inc
jge
xor
lods
xor
cmc
sbb
push
inc
and
rcrl
jbe
dec
jmp
pushf
out
xchg
add
sbb
mov
test
xchg
lods
mov
push
or
jno
jae
inc
fistpll
js
jno
inc
push
ljmp
rcrb
mov
test
push
and
sub
outsl
add
mov
sbb
testl
ljmp
fcomi
cmp
push
ret
and
pusha
or
movl
loop
mov
into
cld
push
dec
lahf
stos
ret
ret
mov
pop
loopne
or
pop
icebp
xchg
cltd
icebp
inc
adc
pop
mov
outsl
cmp
pop
lods
or
adc
mov
stos
xchg
cld
mov
push
mov
test
int
jb
mov
les
jae
mov
shl
mov
cmp
adc
cmpsl
and
adc
shrb
cli
xchg
bound
mov
fdiv
out
xor
subb
xor
jns
fisttps
lods
xlat
xchg
jb
aaa
or
adcb
xchg
repz
push
push
addr16
push
pop
sahf
inc
cmp
ljmp
xor
loop
popa
rorb
imul
push
jbe
aad
mov
sbb
pop
add
out
jmp
xor
jp
jp
insb
das
xor
mov
out
sbb
xchg
and
add
sbb
mov
je
hlt
cwtl
and
dec
cmc
sbb
iret
add
sbbl
imul
into
jno
add
dec
lods
push
inc
adcb
dec
cmpsl
mov
xchg
xor
loope
sub
std
daa
add
pop
push
fnsave
inc
inc
xchg
daa
movsb
sbb
test
sub
jns
scas
cmp
pop
scas
stc
clc
dec
ss
aad
outsl
jg
pop
scas
xor
js
pop
sub
push
push
cmp
dec
stos
jae
push
scas
jno,pn
arpl
or
push
js
popf
and
outsl
inc
cli
idivb
bound
mov
and
add
mov
and
sbb
rclb
xchg
sub
pop
jne
mov
int3
lret
sahf
jmp
popf
cmp
mov
mov
push
adc
andb
xchg
push
inc
push
push
mov
xor
stos
or
sub
insb
sbb
in
sub
fildl
inc
movsb
push
lods
shll
mov
daa
out
mov
test
enter
pop
xlat
icebp
es
or
push
ja
repz
pushf
sbbb
lahf
mov
repz
enter
inc
jo
test
ficompl
fucomp
xor
push
shl
leave
shll
out
dec
inc
inc
cmp
lods
popf
push
mov
sub
mov
push
add
enter
int3
mov
cmp
and
dec
xor
fcoms
jecxz
push
jge
sti
sub
push
pop
inc
pop
es
inc
mov
test
mov
jp
xchg
test
and
pop
push
pop
lods
xor
cltd
mov
sbb
aas
push
pop
out
fdivrp
adc
lods
jmp
or
adcb
inc
dec
out
sub
or
mov
pop
js
adc
and
lahf
mov
shlb
in
adc
sbb
das
std
mov
lahf
xchg
xchg
xlat
cwtl
mov
aam
imul
fstp
sarb
aaa
sbb
sbb
mov
in
jl
fldl2t
mov
std
pop
pop
sbb
adc
nop
xor
mov
popa
clc
inc
sbb
push
mov
rol
ss
sbb
mov
out
cli
mov
arpl
jae
dec
xchg
negb
movsb
hlt
popf
cmp
mov
rolb
sub
xchg
insl
xor
mov
dec
push
insl
xor
popf
in
sub
push
sub
jbe
and
mov
cwtl
or
lods
xor
xor
das
xchg
lcall
popf
jns
andl
jo
pop
lcall
adc
jae
mov
inc
ret
jbe
cwtl
xor
cwtl
add
inc
jo
in
xor
dec
cwtl
pop
aad
sbbb
enter
and
leave
fs
xchg
jmp
push
mov
adc
add
push
mov
dec
xor
xor
sbb
adc
or
mov
sub
scas
je
jecxz
out
loope
mov
int
mov
mov
mov
jp
aaa
xchg
js
fstpl
lcall
push
fsts
fcoms
add
paddb
pop
add
push
insl
pop
lret
inc
sar
daa
add
cmp
adc
lock
cmpsb
js
fs
mov
mov
jmp
repz
in
outsl
ret
inc
repnz
push
std
je
notb
dec
mov
fmulp
xchg
jle
inc
sbb
push
data16
in
aaa
mov
lret
out
dec
les
in
ja
xor
outsb
mov
ljmp
std
inc
inc
cmp
cmpsl
adcb
shrb
cmp
loopne
cwtl
popa
mov
into
dec
aam
dec
decb
call
cmp
in
sbb
test
pushf
jp
repz
mov
inc
test
hlt
bound
fisttps
rol
add
mov
loopne
int
mov
ficoml
xchg
pushl
movl
cmp
jle
test
ret
es
mov
ja
lcall
or
pop
stos
dec
adc
scas
mov
add
pop
insb
and
push
popf
dec
cmp
cmpsb
scas
push
or
pop
xchg
mov
inc
xlat
inc
xor
jecxz
push
js
pop
insb
lahf
xchg
movsl
pop
cmp
cwtl
fcoms
or
xchg
fsubrl
sahf
and
sub
shl
aam
adc
mov
jge
test
ja
rcrb
call
sub
repz
jecxz
sub
mov
dec
push
ficomps
mov
clc
sub
stos
push
cmp
cmp
jo
rcr
mov
iret
inc
lods
movsb
inc
sub
adc
adc
ds
mov
aad
and
push
outsl
daa
xlat
aam
addr16
inc
int3
adc
and
push
outsl
in
lret
add
pop
into
stos
and
mov
push
push
adc
inc
cli
test
popf
das
or
jae
rcr
stc
pop
cld
pop
aam
pushf
xor
or
xchg
inc
sub
divb
out
cmp
and
adc
in
stos
outsb
lock
xchg
popa
lret
pushl
out
pop
dec
or
out
mov
inc
or
cmp
ret
jg
and
gs
into
jnp
test
cltd
in
outsl
stos
int
xlat
fcmove
and
fsts
push
enter
fldln2
adc
or
cwtl
mov
lea
jo
sbbb
pop
push
gs
push
mov
jmp
add
add
mov
jecxz
fs
push
cmp
inc
sub
ret
sbb
sbb
push
mov
dec
sahf
xor
pop
repz
jecxz
and
cmp
sti
nop
or
mov
fcomip
arpl
mov
es
and
cmpsl
jno
jecxz
cmp
pop
lcall
je
xlat
pop
push
mov
dec
push
mov
pop
mov
sub
jle
xor
lret
idivl
cmp
adc
shlb
inc
std
push
sti
sub
bound
hlt
jecxz
jo
jl
inc
inc
pop
mov
mov
xlat
xor
mov
sbb
jno
cmpsl
mov
inc
push
xlat
adc
xchg
lcall
dec
jns
or
pop
fs
repnz
or
pop
push
es
mov
jecxz
inc
xchg
cmp
test
push
inc
and
clc
xchg
lcall
jbe
mov
cmp
mov
sub
insb
mov
xchg
out
jge
jmp
enter
dec
mov
xor
jno
cmp
dec
mov
and
mov
push
push
adc
loope
adc
jge
arpl
pop
mov
jnp
pop
jae
cmp
push
gs
mov
scas
ja
adc
daa
popa
pusha
mov
push
add
nop
and
push
xchg
inc
jle
cmp
jl
pop
pop
mov
fidivs
inc
push
stos
dec
testl
std
rorl
sti
ret
insl
pop
faddl
lahf
fdivl
popa
xchg
out
fiadds
aam
or
jle
popf
pop
push
lret
pusha
inc
ljmp
xor
cmp
ljmp
out
mov
roll
sub
cmpsl
fwait
jno
outsb
sbb
pusha
mov
cmp
and
ficomps
outsb
sbb
fistpll
cld
out
scas
cltd
les
dec
mov
cmp
mov
das
sahf
mov
aad
scas
or
les
and
xlat
pop
test
cmp
addr16
loop
outsl
pop
xchg
es
pop
xchg
mov
js
lds
outsb
jno
inc
pusha
in
aaa
int3
ss
mov
and
int
or
aas
scas
in
mov
push
adc
subl
or
ja
aaa
dec
and
xor
xchg
sbb
jns
push
cs
lret
adc
xor
dec
adc
ret
dec
pop
jmp
xchg
cmpsb
les
push
ljmp
xchg
adc
pushf
cwtl
inc
inc
faddl
pop
popf
inc
mov
daa
sub
out
jle
test
push
arpl
or
pushl
and
lock
fadds
sahf
mov
xchg
mov
fdivs
adcb
std
jmp
xchg
push
lock
notb
or
mov
lods
mov
jno
or
aas
mov
push
add
stc
adc
jno
inc
bound
js
popf
pop
call
fmull
sub
mov
mov
cmpsl
cmp
sub
push
mov
pop
adc
cs
fcmovnu
outsl
fs
lods
pop
fistpll
mov
test
sbb
cld
popf
cmp
aad
lret
in
mov
mov
inc
jg
imul
xchg
pushl
sub
inc
jno
dec
dec
add
mov
jnp
je
jecxz
cmpsl
mov
push
or
hlt
cmp
jg
mov
sub
in
imul
sub
mov
mov
inc
push
mov
pop
jl
int
cli
aas
sti
xlat
es
cmc
lahf
xchg
adc
ret
adc
sar
jnp
xchg
cmc
ficoml
pushf
stc
popf
cld
jmp
sub
xchg
mov
push
jb
mov
xor
lcall
mov
stc
scas
xchg
or
add
arpl
enter
xor
cld
loopne
ficompl
rcl
rcrl
adc
in
jl
fdivr
dec
aas
out
imul
div
jmp
out
lea
and
neg
and
daa
ss
shl
dec
jne
in
push
lock
mov
add
push
sahf
pop
push
lea
xlat
sub
lcall
dec
addb
insl
ret
jl
fisttps
lahf
or
outsl
je
shll
add
xchg
and
adc
shl
inc
shlb
cmp
out
popa
fiaddl
sbb
mov
lods
adc
mov
das
lods
int
loop
outsb
jne
shlb
xchg
sub
int
mov
sub
daa
mov
fimull
add
push
ja
loop
fcoms
sti
pop
shlb
inc
mov
sub
lahf
sub
std
pushf
xlat
or
mov
cmpsl
mov
inc
adc
push
ljmp
out
xchg
push
lahf
inc
fldenv
push
xchg
xchg
add
jmp
leave
lahf
cmovl
mov
cmp
xchg
ljmp
ds
loope
xor
mov
movl
lret
in
popf
mov
dec
jmp
lock
cmp
into
ret
pop
mov
movb
inc
cwtl
push
das
popf
push
mov
add
xchg
lea
or
notl
push
je
xor
push
rclb
or
clc
scas
repnz
cltd
jne
mov
test
inc
xchg
stc
fsubr
mov
push
push
push
enter
pushf
sti
dec
mov
ljmp
jae
inc
xchg
cmp
fs
sub
shrb
jo
cmpsl
ds
in
repz
cld
outsl
sub
popf
adc
int
and
xor
shlb
fildl
sbb
mov
in
call
adc
fstl
inc
sarl
rcll
test
pop
xchg
std
cli
pop
pusha
add
cmpsl
imul
mov
lahf
jb
aas
idivl
adc
loopne
xorb
add
cmp
inc
cmp
fdivrs
dec
sbb
loop
adcl
mull
and
repz
push
gs
mov
fstpl
imul
fucomi
incb
es
pop
sub
lods
mov
cmpsb
call
adc
or
mov
jbe
mov
shll
cmc
push
movsl
sub
ja
movsb
xor
das
pop
fldenv
adc
or
push
out
pop
xlat
or
aad
rolb
cli
adc
cmp
je
inc
jle
xchg
dec
in
and
jle
lret
xor
idivl
sbb
shrb
lock
mov
jmp
jg
ret
ja
or
hlt
cmp
js
ds
sbb
lahf
mov
jmp
aad
jbe
gs
xor
adc
push
add
sub
add
daa
or
aaa
inc
pop
jp
dec
loope
sti
out
clc
repz
sbb
in
pushw
sub
lock
adc
xor
scas
jae
mov
mov
movsl
in
jne
add
jno
lods
stos
in
in
add
pop
lret
pushf
pushf
pushl
sub
mov
in
add
hlt
lret
cmpb
int
pop
es
dec
adc
cmp
mov
xor
push
mul
gs
sbb
mov
out
jo
mov
pop
lods
bswap
mov
jecxz
push
mov
addr16
mov
jl
iret
hlt
sbb
into
roll
add
push
add
cmp
xor
add
lods
call
ljmp
add
dec
mov
or
rcr
dec
cmp
lods
arpl
mov
in
sti
shll
rep
adc
js
sub
subb
pop
push
rcrb
jmp
cmpsb
bound
es
mov
fs
imul
data16
and
pcmpgtb
ficompl
mov
daa
hlt
in
jne
jge
aas
or
adc
jecxz
add
int
mov
push
mov
jno
loopne
dec
dec
ds
lods
cs
loope
inc
sub
lahf
lods
inc
int3
xor
and
dec
or
push
addr16
dec
inc
rorb
mov
addr16
jle
nop
mov
clc
mov
dec
jb
rorl
test
popw
arpl
insb
cmp
mov
or
ss
inc
ss
pop
cmpsl
push
push
ss
cmp
cmpsb
push
gs
pop
jno
fdivs
jnp
pop
scas
subl
fidivs
out
je
test
out
inc
push
imul
hlt
iret
shlb
push
mov
mov
ss
jecxz
bound
les
dec
cmp
sbb
mov
loop
insl
icebp
les
andb
and
iret
mov
mov
aad
adc
pop
cmp
pop
and
or
jae
inc
cli
lods
mov
rcl
stc
cmpl
xchg
cmp
icebp
fsubs
mov
imul
lret
xor
push
lods
in
sbb
fcoml
mov
mov
rorb
or
and
mov
aad
mov
aas
mov
and
test
xor
push
das
mov
testl
imul
mov
loope
mov
xchg
repz
cwtl
mov
adc
lods
or
test
mov
out
xor
push
aad
mov
xchg
pushf
pop
dec
daa
nop
mov
xchg
cmpsl
and
push
inc
pop
push
adc
imul
sub
int
pop
and
loopne
xchg
dec
ret
sbb
mov
sarl
jp
iret
sub
int
dec
ds
mov
add
clc
pop
xchg
mov
adc
or
ficoml
jb
nop
das
aaa
jo
loopne
pop
add
dec
push
lea
fcomps
int3
mov
jno
ja
sub
cmp
xchg
xor
loopne
sti
pusha
cmp
mov
loop
or
aad
adc
leave
xor
sbbl
cmp
cmpsl
jno
push
shrb
mov
sub
push
pop
nop
adc
dec
adc
bound
jge
xchg
jo
mov
and
mov
pop
xor
inc
sbb
mov
fwait
push
in
push
stos
xor
pop
cmp
pop
and
push
scas
test
insl
jns
nop
in
idivl
bound
cwtl
sbb
fs
or
pop
sti
loop
mov
jecxz
adc
push
inc
stc
xchg
jbe
enter
lcall
xchg
std
movsb
jae
jns
into
mov
inc
push
out
dec
jno
roll
ja
xchg
sbb
jnp
test
repz
divb
aam
inc
push
in
mov
jl
lods
cwtl
mov
xor
dec
imul
jle
loope
adc
mov
jg
pusha
adc
repz
mov
xor
inc
movb
mulb
adc
inc
cwtl
sub
ljmp
inc
sbb
jp
ret
mov
test
jp
inc
add
jne
fdivr
and
xchg
and
push
sub
icebp
and
les
insb
hlt
std
ret
inc
inc
iret
push
dec
pushw
push
enter
je
dec
icebp
dec
out
inc
fwait
aam
lcall
test
lret
scas
mov
cmpsl
adc
bound
lcall
pusha
add
test
int3
dec
mov
shrb
out
push
adc
cwtl
fwait
aam
cmp
mov
cmp
push
mov
cmp
out
fisubrs
test
inc
mull
lods
ret
xchg
aad
lcall
jnp
mov
fsts
daa
inc
bound
incl
ja
push
lock
cld
rorl
sbb
outsl
mov
xchg
or
xchg
jnp
push
scas
repz
in
dec
lcall
pop
call
mov
fisttps
stos
sbb
fmuls
cwtl
shl
aad
jge
rcll
jbe
aas
inc
xchg
cmp
adc
sbb
mov
adc
out
inc
fwait
outsl
lahf
fsubrl
mov
push
test
mov
jp
imul
or
mov
mov
ret
cs
dec
sbb
or
jne
es
insl
fisubrs
inc
push
bound
aas
jmp
daa
xlat
adc
pop
cwtl
add
inc
cmp
mov
dec
flds
jmp
aad
invd
lods
inc
gs
xchg
sahf
lods
mov
mov
pop
js
cwtl
call
mov
inc
mov
fists
xor
int3
xchg
or
cmp
cmc
adc
shrb
xchg
std
sbb
inc
inc
insl
or
loope
mov
dec
cmp
mov
dec
jmp
jg
scas
mov
sub
mov
and
push
hlt
scas
scas
cltd
jl
add
rcl
test
mov
mov
ret
jb
xor
jecxz
movsb
xor
and
jb
es
mov
jge
pop
and
inc
test
dec
daa
rcrb
clc
pushf
in
jbe
stos
mov
pusha
cmpsb
push
sub
xchg
dec
dec
fisubrl
test
adc
loopne
data16
push
fwait
jmp
inc
sub
popa
xchg
push
push
data16
add
iret
mov
lret
insb
xchg
mov
mov
mov
and
mov
call
es
mov
jno
mov
jae
out
inc
cmp
cmp
jne
out
sbb
test
inc
dec
repnz
and
lds
xor
cs
jl
pop
dec
popf
push
push
cwtl
shlb
repz
lea
xor
mov
inc
sar
add
jo
imul
cmp
inc
cli
test
cmp
mov
aas
jae
adc
clc
add
sbb
movsl
fildl
xchg
arpl
dec
push
imul
xor
mov
lahf
sti
xor
jo
notl
insl
adc
jg
cld
xor
mov
aaa
rolb
jp
mov
xor
mov
fnstsw
rcrb
sub
jl
aad
lds
and
sbb
stc
mov
sub
mull
adc
fists
inc
and
mov
adc
mov
fmull
push
das
xor
sbb
int3
sub
in
xor
mov
frstor
push
test
push
loop
fwait
cmp
add
insl
inc
ds
add
cmp
ss
xchg
dec
mov
inc
ret
ret
idivl
cmc
mov
pop
out
jmp
cli
shlb
hlt
push
inc
sbbb
dec
xchg
cld
imul
inc
jge
sub
mov
out
out
popa
pop
mov
cld
or
mov
filds
pop
pushf
into
sbb
jge
ret
jae
mov
sti
into
push
aas
mov
jecxz
int
jmp
pop
pop
mov
inc
adc
pushf
aam
push
xor
xchg
and
test
or
cld
int
bound
push
inc
sbb
aas
add
fs
jae
fcmovbe
add
fwait
imul
mov
xchg
or
mov
add
movsl
test
aad
xor
add
es
aas
out
movsb
pushf
xchg
sub
fcmovnbe
mov
add
adc
mov
jp
rcll
scas
or
jle
mov
or
add
aad
jge
inc
ror
mov
xchg
repz
and
dec
and
push
sti
and
pop
int
aas
xor
mov
sbb
pop
dec
pusha
adc
dec
pusha
addr16
mov
fwait
iret
int
push
lock
out
ret
in
dec
mov
in
xor
cwtl
in
inc
mov
adcl
out
lret
xchg
popa
loope
xor
inc
xchg
insb
aaa
lea
xchg
scas
and
sub
outsb
pop
adc
and
jmp
jl
mov
add
inc
mov
or
pop
push
ds
adc
and
test
xchg
mov
add
dec
sub
adc
mov
popf
roll
mov
pop
fcom
inc
xchg
or
loop
mov
stc
lods
mov
sti
imul
ficompl
xchg
insl
pop
sbb
ljmp
push
or
dec
xlat
das
notl
into
dec
leave
fsubs
call
ds
cmpsb
pop
mov
fwait
addb
inc
inc
jmp
sar
pop
dec
decl
dec
pop
inc
xchg
pop
add
imul
xor
dec
mov
mov
push
hlt
mov
sub
push
xor
idivl
out
jne
fsubs
aam
add
testl
insl
enter
insb
pusha
inc
test
push
sbb
xchg
mov
fisttps
cmp
aas
inc
call
aaa
imul
in
fsubs
cmp
test
xorb
cmc
shrl
movsb
sbb
nop
mov
add
popf
setp
adc
sbb
or
mov
sahf
call
int3
lea
mov
test
fists
xchg
cmp
gs
add
inc
imul
sub
dec
cli
cmpb
cwtl
and
pop
icebp
pop
testl
push
push
mov
out
lods
mov
push
or
daa
loopne
rcll
sbb
and
xor
je
push
sahf
push
sbb
and
fbstp
movsb
mov
fsubr
popa
xchg
pop
fwait
inc
add
cmpsl
fwait
in
or
dec
insl
xchg
fwait
lret
mov
inc
inc
xchg
shll
in
cmp
xchg
pop
push
push
add
mov
mov
or
jns
hlt
pop
or
mov
xchg
push
out
dec
cmp
lock
or
das
pop
dec
popf
xchg
lret
mov
outsl
jmp
cmp
lods
test
mov
sbb
jb
rolb
jg
pop
outsl
int
push
ficompl
in
push
mov
pop
div
xor
shll
cld
mov
jmp
inc
mov
xor
hlt
cmp
loop
ficomps
push
lods
rclb
psubd
add
cld
sub
sub
xor
jns
orb
cmp
mov
and
adc
hlt
and
inc
mov
adc
insb
inc
pushf
loopne
push
cmc
sbbl
xchg
mov
dec
jl
ljmp
roll
jae
outsb
mov
add
in
push
pop
cli
scas
xlat
xchg
xchg
lea
jno
mov
inc
and
pop
jnp
mov
xor
cmpl
xor
mov
ds
out
test
sbb
cmp
jge
loopne
xchg
cmpsb
ret
mov
std
rclb
mov
or
dec
iret
adc
push
fsubs
cli
insl
dec
adc
fdivrs
mov
mov
jle
hlt
xchg
cmpsl
aam
mov
adc
or
xchg
rcrl
xor
mov
and
ss
sub
jae
pushf
sub
in
and
xor
lret
shrl
repz
aaa
lret
xor
lcall
insb
mov
mov
lods
loop
xchg
adc
fxam
mov
and
and
into
xchg
and
push
cltd
shl
jg
in
cmpsb
push
cmpsl
push
mov
pop
clc
xchg
cmp
jmp
push
loopne
dec
jge
xchg
repnz
out
pop
xlat
push
push
aad
repz
jo
add
aaa
lahf
aas
or
mov
out
les
xor
xor
pop
sbb
jno
xor
lcall
shrb
fcomps
dec
fcmovne
mov
push
aas
jno
cmp
pop
jle
pop
ja
mov
push
mov
inc
add
test
push
cmpl
loope
mov
inc
push
jmp
push
xor
pop
sub
and
mov
xchg
es
adc
dec
test
ret
xchg
add
es
mov
mov
pop
dec
in
dec
std
ret
xchg
aas
fs
in
xor
movsb
call
out
pop
adc
jns
cmp
inc
sub
loopne
movsb
mov
push
gs
rclb
iret
xchg
inc
adc
arpl
pop
xchg
dec
imul
outsb
js
pop
imul
xchg
jle
lea
pushf
test
lret
or
data16
sbb
and
repz
dec
movsl
pop
arpl
lahf
cs
dec
loop
out
and
mov
cmpsl
xchg
jb
push
ret
sub
clc
or
negb
insb
jg
addr16
lds
sub
aas
lcall
in
out
fmuls
and
sbb
je
xlat
mov
xchg
out
and
dec
mul
ret
mov
pusha
add
fsubrl
or
and
cwtl
adc
leave
or
sbb
clc
mov
or
in
or
cmpsl
xchg
adc
push
adc
xlat
rcrl
xchg
scas
mov
bnd
sub
lea
mov
mov
cld
jle
push
xor
push
fcmovnb
jecxz
movsl
rcl
or
test
jbe
pop
cmc
push
mov
cld
cmc
fdivrp
sub
int
stc
pop
pop
loop
inc
mov
xor
sbb
pop
dec
xchg
push
jl
xchg
jmp
adc
push
mov
pop
xchg
adc
inc
dec
je
mov
repz
repz
xor
cmp
jnp
pop
sbb
leave
call
dec
cs
jp
sub
in
fsubl
jmp
les
loopne
fdivrs
dec
jb
push
push
icebp
push
int3
das
cmc
mov
in
sub
pop
jmp
out
outsb
test
sub
dec
mov
pop
pop
out
and
into
jbe
cmpsb
mov
sub
aam
out
sbb
xor
ret
pop
mov
jp
mov
enter
xor
inc
call
sbb
inc
pushf
fdivl
xchg
imul
dec
mov
lods
mov
add
dec
ds
or
leave
cmp
mov
adcl
mov
adc
sub
inc
or
pop
in
sub
jl
fidivrs
sbb
aaa
fsts
push
push
xor
mov
hlt
pushf
rcrb
sub
stos
enter
les
xchg
mov
fsts
subb
cmp
out
sub
or
aam
out
xchg
ficompl
adc
scas
das
xchg
push
mov
out
leave
and
mov
jbe
mov
ljmp
cli
xchg
das
sbb
pmuludq
and
sti
mov
or
bound
add
inc
orb
loope
int3
pop
sbb
clc
pop
cmc
jne
decb
out
sub
add
mov
in
push
mov
mulb
test
shll
mov
mov
jecxz
cmc
dec
dec
sahf
add
std
xor
sti
cld
fildl
data16
iret
inc
not
xor
adc
aad
orb
adc
inc
adc
ja
jmp
repnz
or
adc
and
add
xlat
xor
sahf
mov
mov
js
inc
fstps
imul
mov
lods
frndint
testb
mov
outsl
xchg
push
hlt
cmp
dec
lock
test
divl
pop
popa
stc
iret
adc
push
fisttps
adc
or
pop
sub
mov
xchg
mov
and
fstl
inc
sub
add
xchg
jne
clc
sbb
nop
cs
sub
cld
out
sbb
outsl
adc
sbb
pushf
push
test
sbb
test
mov
int
dec
or
sub
sbb
mov
bound
xor
pop
test
add
jno
repz
jp
mov
cmpsb
pop
xor
ret
rcll
add
mov
mov
add
out
ljmp
shlb
dec
jmp
dec
out
mov
mov
xor
popa
cld
and
leave
cwtl
jns
lods
je
jmp
hlt
js
cmc
nop
scas
cli
movb
jmp
adc
push
mov
xor
sub
adc
adc
lret
lret
je
outsl
sbb
jb
outsb
loop
cld
pop
out
add
push
adc
mov
push
lods
mov
sub
jmp
cmp
inc
stos
dec
xchg
repz
jl
hlt
int
add
sbb
mov
bound
xchg
and
jmp
add
jmp
imul
lock
repnz
sub
and
insb
mov
push
ljmp
es
jo
push
xor
sbb
pop
subl
leave
jns
arpl
arpl
movsl
mov
sub
xor
sarb
xlat
mov
pop
nop
push
sbb
ret
fsubr
jnp
lret
or
aam
ds
sub
ljmp
add
pop
lock
cld
xor
jp
cmp
loop
and
xor
decl
arpl
out
repnz
adc
repnz
push
xorb
dec
sbbl
cmpsb
cmp
inc
push
cld
popa
shrb
xchg
inc
pop
or
jnp
add
inc
jmp
xchg
pushf
push
mov
idiv
repnz
jb
cmpsl
xor
cmpsb
enter
mov
out
jg
sti
icebp
insb
mov
subb
shl
in
divb
cmpsb
push
daa
std
imul
push
pushf
cmp
fsubl
mov
lahf
lret
lods
mov
dec
das
sbbl
cmp
stos
push
adc
jo
jbe
loopne
jb
into
cmp
scas
mov
sub
mov
stos
mov
or
loop
xchg
dec
xchg
xor
push
xchg
ret
xor
insl
sahf
add
insb
pop
int3
xchg
repnz
into
add
dec
mov
into
mul
sub
lds
fisubs
push
xor
scas
popa
bnd
sbbb
lods
test
fxch
je
lock
dec
cwtl
cs
jne
sub
jge
or
cmpsb
inc
ja
dec
rcr
loopne
dec
cltd
sarl
js
cwtl
xchg
fwait
shlb
adc
mov
sub
pop
and
stc
bnd
fildl
or
mov
icebp
mov
nop
hlt
sti
bswap
ficomps
shr
add
add
push
jae
imul
fs
leave
dec
jnp
pop
pop
test
in
icebp
sbb
hlt
jne
jmp
setge
mov
sub
into
mov
repz
push
lds
sub
jno
jmp
aad
or
push
jg
cs
nop
stos
jb
dec
pop
push
shrb
int
mov
cmp
insb
shll
cld
cs
adc
cmp
enter
mov
cmp
sti
mov
push
cmpsb
xchg
jnp
jb
inc
inc
dec
aam
roll
enter
or
mov
mov
aad
inc
push
lahf
packsswb
xchg
or
cmpl
js
pop
mov
or
sub
repnz
adc
jns
cltd
cltd
movsb
jne
push
nop
add
push
dec
pop
roll
adc
pop
icebp
pop
xor
xchg
out
xchg
dec
fldt
imul
int
mov
mov
push
jmp
inc
lds
lahf
inc
scas
jae
inc
icebp
xchg
or
or
jge
das
bound
les
daa
push
add
cltd
jbe
mov
arpl
sbb
xchg
dec
cli
fistps
vorps
xor
fisttps
push
inc
pop
jp
out
and
push
mov
jb
test
negl
call
sbb
cmp
jne
mov
sbb
fdivrl
or
xor
scas
pop
call
cmc
addr16
fldenv
shrl
mov
je
scas
add
xor
add
mov
orl
shl
repnz
in
xlat
bound
push
cmp
dec
loope,pn
dec
fmuls
sub
mov
adc
sub
xor
or
jge
testl
xor
loopne
mov
push
sbb
imul
leave
bound
sbb
or
and
outsb
int3
scas
cmpsb
dec
or
pop
cli
push
ja
lahf
xchg
mov
into
inc
mov
lods
bound
fs
pop
aaa
and
cmpsb
jl
cmp
in
cmc
xchg
cmc
mov
hlt
nop
cmc
sar
dec
pop
mov
out
shr
shrb
mov
push
push
imul
pusha
repnz
dec
pop
shlb
pop
dec
mov
lahf
nop
mov
push
cmp
sti
out
sub
aas
jnp
sti
jb
sub
mov
sub
rcrb
jns
dec
mov
ss
fcomp
jl
lcall
mov
xchg
mov
adc
fidivs
push
push
dec
fisubl
sbb
addr16
pusha
mov
xor
mov
xorl
and
stos
jge
aas
cmpsl
mov
test
jns
leave
out
rcrb
sub
or
das
cmc
and
inc
cmp
fiadds
dec
lcall
pusha
mov
dec
add
xlat
sub
push
sub
mov
shld
push
jmp
es
faddl
sahf
filds
int
fimull
cmp
add
mov
movsl
sti
cs
or
mov
jl
lcall
mov
bound
jnp
pusha
aad
push
xlat
out
jmp
cmp
or
xchg
inc
mov
cwtl
dec
mov
dec
or
jmp
div
jle
jecxz
jne
mov
inc
dec
push
loopne
icebp
jle
cltd
ss
outsb
mov
or
imul
insb
hlt
add
push
mov
xor
pop
pop
xchg
push
mov
les
sbb
add
cmpsb
fcmovnu
mull
ja
mov
jg
int3
and
xchg
lret
aam
shl
jne
mov
test
add
lds
leave
and
stc
sbb
cmp
xchg
cmc
ficomps
push
std
hlt
jne
jecxz
into
adc
and
mov
sub
xchg
jno
mov
sub
cmp
cs
xor
sub
mov
popa
in
fadds
pop
push
loopne
outsl
lea
dec
dec
adc
repnz
shll
ljmp
sub
cwtl
push
dec
or
adc
out
sbb
popa
loope
in
shlb
add
cmp
leave
popf
or
lods
xor
test
lods
xchg
mov
fmull
stc
mov
les
notl
cwtl
aad
shl
push
dec
ret
inc
mov
mov
jl
insb
rcrl
sub
cmp
insl
cmpsl
cmp
shrl
in
pushaw
movhps
movl
cmp
lea
out
sbb
dec
movsl
push
or
ss
adc
popa
or
rcrl
mov
das
sbb
xchg
jg
push
sti
jle
test
rol
inc
pop
ret
sbb
in
mov
lret
imul
mov
mov
pop
lods
lret
pop
out
jecxz
nop
push
mov
es
mov
adc
mov
mov
xor
addb
test
outsl
add
inc
loope
push
pop
pop
add
cmc
jo
ds
cli
ja
mov
shll
dec
orl
jg
cli
stos
rcll
cmp
pushf
mov
cmp
xchg
cld
cmp
mov
push
scas
mov
sti
rorb
bt
xchg
andl
and
in
mov
add
add
mov
shrb
dec
jge
out
jge
in
mov
cmc
inc
xor
clc
stc
je
cld
test
jae
add
inc
scas
adc
das
movsb
sbb
imul
mov
ficomps
ss
dec
into
pop
jns
inc
out
daa
rcr
loop
jmp
arpl
jle
pop
icebp
fwait
xor
leave
push
int
pop
sub
aas
cmp
jecxz
andl
icebp
and
mov
mov
bnd
mov
sbb
push
jnp
mov
jnp
push
or
pusha
cltd
xchg
loop
adc
cld
orl
clc
mov
test
pop
push
xor
add
ljmp
jne
out
sub
mov
popa
add
and
mov
iret
pusha
lods
daa
xchg
ljmp
out
xchg
dec
in
ret
scas
xor
movsb
inc
jl
mov
fcoms
iret
xchg
faddp
enter
or
jae
mov
bound
je
insb
mov
fdiv
lods
xchg
inc
mov
push
int
push
inc
mov
dec
pop
jb
scas
rcrl
pop
enter
int3
cmp
sti
xchg
push
jb
mov
push
pop
adc
xchg
mov
xchg
cmp
push
dec
xchg
jae
fcomi
iret
inc
stos
leave
pop
pop
sub
addr16
shlb
inc
dec
lret
adc
cltd
adc
nop
sbb
or
cmp
adc
add
sbb
dec
addb
jp
jno
repnz
push
cwtl
xor
pop
int
lods
cmc
inc
adc
dec
mov
fucompp
and
mov
mov
int3
add
insb
sbb
sarb
shrl
rclb
cmp
pushf
inc
int
add
and
xchg
and
fnstenv
out
test
test
or
addl
dec
lods
mov
xchg
incl
or
mov
sbb
jae
sbb
insb
dec
roll
cmp
loopne
push
mov
pushf
jnp
pop
mov
dec
cmp
int3
imul
loop
call
lods
xor
outsl
inc
inc
sub
adc
jg
jmp
sub
inc
mov
idivb
add
sbb
rol
popa
pop
pop
call
movsl
mov
int3
sub
adc
push
loope
fisubrl
jno
pusha
pop
mov
mov
outsb
lret
push
adcb
or
bound
shll
add
out
frndint
xlat
or
sub
popf
lods
jae
xor
push
and
push
sbb
mov
cmp
push
xor
in
das
mov
sbb
test
jne
adc
add
push
xchg
mov
sub
mov
xor
adc
xlat
les
xor
dec
lret
mov
test
sbb
lea
push
mov
lods
sbb
js
movsl
mov
jnp
push
jle
lods
hlt
cmp
jno
mov
pusha
sub
inc
and
movsb
inc
xchg
jl
shr
loopne
and
adc
in
sub
cwtl
sbb
lahf
pop
insb
int
and
or
jg
xlat
jo
jmp
out
iret
mov
inc
cmpsb
pop
fistpl
mov
xchg
aas
insb
arpl
adc
mov
sub
push
dec
xchg
imul
sahf
mov
pop
sbb
out
outsl
add
nop
rcrb
std
jnp
jle
imul
xabort
cmp
mov
and
int3
mov
inc
mov
stc
icebp
into
leave
jge
scas
andl
insl
fstps
add
mov
dec
ja
in
sbbl
push
mov
mov
sub
push
das
mov
mov
pushf
and
adc
mov
ja
push
lods
out
pop
das
mov
movsl
mov
fisubrs
sbbl
xchg
dec
dec
enter
mov
lret
scas
cs
xor
push
xchg
test
xor
mov
fsubrs
testl
mov
enter
or
shll
testl
inc
lods
ds
aam
cltd
pop
imul
sbb
dec
in
outsb
sub
dec
cltd
pushl
push
shll
ljmp
sbbb
or
xchg
inc
add
mov
movlhps
pop
mov
add
mov
test
sub
sub
iret
cmp
pushf
adc
stos
imul
or
pop
sti
push
push
cmp
ja
jp
scas
sub
sti
mov
test
imul
iret
scas
mov
and
xor
mov
dec
mov
das
insb
aas
fidivl
pop
lock
sub
lahf
stos
mov
jg
ljmp
mov
jecxz
fwait
out
das
pop
xor
out
addb
mov
sbb
hlt
fs
negl
adc
bound
sub
fwait
add
inc
adc
shll
or
cmp
ds
add
adc
test
sbb
ja
scas
sbb
sub
fisubrs
push
dec
pop
add
mov
mov
pop
aas
jmp
sub
and
ja
sub
das
xor
fwait
pop
fimull
mov
bound
cmp
test
addr16
jne
mov
add
pop
pop
imul
les
mov
fildll
inc
jecxz
jbe
and
movsb
push
inc
jno
mov
mov
mov
xbegin
xchg
je
insl
sub
daa
aad
mov
inc
ret
repz
ficompl
and
and
sub
pushf
imul
outsl
xchg
inc
fwait
sub
sbb
leave
inc
mov
mov
dec
ds
xchg
iret
out
and
mov
in
daa
xor
ret
cmp
ljmp
push
int3
push
mov
repz
cmp
and
inc
and
inc
pop
std
xchg
mov
sbb
les
lock
test
sub
pop
or
dec
and
add
loop
inc
jns
rol
dec
pop
pop
sub
jge
push
inc
adc
aad
inc
das
test
sbb
cmpsl
in
add
mov
ss
push
mov
push
mov
sar
mov
or
add
sbb
push
scas
insl
cwtl
ljmp
cmpsl
adc
aam
fwait
xchg
loopne
rclb
sbb
loop
lock
jp
sub
mov
pop
push
mov
cli
add
adc
in
jb
xor
mov
fstl
cmpsb
shrl
sti
fnstenv
outsb
fiaddl
adc
push
add
fisttps
cs
mov
xchg
insl
daa
jnp
rorb
mov
and
test
repz
out
cltd
xchg
mov
adc
insb
xchg
imul
mov
int3
shll
outsl
fisubrs
sub
add
mov
pushf
jae
scas
outsl
inc
lret
xor
pop
loopne
pop
stos
xor
xchg
dec
jl
repz
xchg
lret
jecxz
fdivl
imul
mov
je
repnz
repz
cmovl
pop
fcomps
mov
data16
inc
js
mull
daa
cmp
add
lods
test
outsl
pop
sbb
in
or
add
stos
and
xor
and
outsb
dec
pop
shrb
int3
mov
xor
out
lret
adc
xchg
daa
aad
and
mov
xor
and
mov
or
inc
jns
clc
es
dec
jns
mov
lret
fdivrs
adc
mov
dec
push
sub
adc
mov
pop
adc
fcompl
mov
and
cmc
test
daa
enter
into
and
mov
popa
xchg
pop
mov
dec
notl
adc
push
xor
pop
cmp
imul
fcoml
aad
daa
insb
loope
jns
pop
call
cli
ret
inc
aam
cmp
ljmp
add
adc
mov
jmp
fwait
aam
push
stos
sub
movsl
sub
fnstcw
imul
aad
mov
xor
sahf
mov
or
cmp
or
or
sub
mov
ds
adc
adc
cmp
pop
xor
jo
icebp
aam
cld
or
mov
inc
jae
lcall
xchg
or
pop
mov
outsl
mov
lret
test
xchg
mov
adc
inc
xchg
pop
int3
idivl
jne
shufps
cmp
adc
daa
xchg
xor
sub
cmpsl
gs
ja
cli
arpl
xor
xor
and
cmpsb
ds
cwtl
iret
iret
daa
push
ret
push
jg
dec
cmpsl
xor
xchg
lds
push
sbbl
sbb
rorb
stc
and
and
int3
add
push
js
mov
jae
adc
enter
fcoml
mov
pop
mov
lds
sarl
jne
adc
mov
test
in
xor
add
and
xchg
mov
jecxz
mov
frstor
pop
push
pop
inc
xor
push
jmp
mov
pop
loop
and
pop
lret
stc
out
mov
xor
lds
mov
test
repnz
sub
pop
mov
cs
loopne
adc
push
inc
orl
call
mulb
insb
js
jge
aad
sub
mov
shll
jno
mov
test
pop
mov
inc
sub
dec
imul
fnstenv
shlb
nop
outsl
mov
mov
cltd
in
fcoms
lcall
lcall
orl
loopne
pop
leave
push
pop
out
pop
cld
mov
leave
icebp
xchg
bound
leave
fucomip
cmp
out
iret
rolb
int
or
aas
testl
mov
fwait
mov
divl
cmp
mov
out
stos
in
sar
sahf
mov
outsl
xchg
adcl
sbb
addl
sbbl
mov
add
mov
testl
push
fcompl
jg
mov
adc
inc
jno
inc
push
fists
test
sti
sub
std
push
js
js
dec
in
sahf
test
stos
inc
pop
mov
fs
and
int3
xor
stc
sub
dec
adc
clc
test
mov
lret
mov
sbbb
push
aas
aas
fcoms
push
shrl
dec
cwtl
and
add
call
in
push
lock
or
hlt
mov
jmp
xor
jae
ja
push
clc
sbb
daa
mov
daa
mov
pop
adc
into
pop
lds
mov
loope
pop
lahf
jne
sub
js
and
lcall
mov
lea
jecxz
repnz
inc
or
movsb
adc
out
movsl
add
xor
nop
lods
jae
ja
mov
sub
pop
mov
jmp
xchg
popa
pop
xor
mov
out
push
sbb
lods
dec
popa
push
notl
jae
sub
push
inc
fdivs
push
xor
mov
shlb
jnp
outsl
xchg
jne
fwait
mov
movsb
dec
or
idivl
or
mov
fwait
scas
cmp
lods
sub
mov
or
dec
xor
mov
xor
pop
daa
pop
jbe
push
test
fisubl
addr16
add
outsl
dec
in
test
xchg
call
loopne
or
push
aam
jp
push
subb
add
jnp
pop
jp
or
or
out
outsl
push
adc
push
aaa
imul
pop
mov
mov
rolb
jmp
jp
or
cmp
imul
mov
int
dec
jne
xchg
sub
or
xchg
sarl
outsl
pop
dec
add
adc
fisubrs
xchg
sbb
mov
xor
cmp
mov
xchg
fisubs
cli
pop
push
pushf
push
repz
pop
sbb
out
cmp
sub
xchg
fidivrs
mov
inc
popa
jae
andl
cwtl
add
pand
shlb
xchg
mov
mov
ret
fisubrl
cmp
push
fstl
xchg
imul
push
xor
cmc
and
mov
cmp
lcall
mov
add
jecxz,pt
add
add
hlt
xchg
sbb
lods
jge
push
or
jl
jo
lods
hlt
sub
out
xor
daa
xchg
mov
xchg
xlat
xchg
push
popfw
inc
fyl2xp1
lret
pop
idivl
ja
pop
mov
pusha
movsl
jmp
jg
mov
mov
pop
mov
mov
xorl
sub
out
in
dec
popa
push
out
outsb
xchg
arpl
mov
addl
arpl
pushf
push
mov
xor
outsl
mov
outsb
in
dec
not
or
fwait
sbb
push
mov
sbb
cmc
mov
ds
cmp
cli
jae,pn
xchg
cmp
hlt
mov
push
in
xor
ret
pop
cmp
outsb
or
mov
inc
iret
scas
es
xchg
inc
sub
ret
fisubl
data16
pop
xchg
pusha
std
add
sbb
mov
jns
pop
addr16
shrb
in
mov
ds
sbb
ss
bound
adc
or
pop
pop
inc
sbb
mov
ss
mov
dec
aam
inc
lods
xchg
dec
cmp
sub
push
inc
xchg
mov
add
test
xchg
and
mov
imul
pop
xchg
icebp
pusha
inc
add
rorb
add
sbb
in
cltd
test
dec
cmpsl
ja
ds
pop
aad
pop
push
xchg
push
and
mov
push
cmp
dec
in
jbe
mov
gs
pop
insb
adc
fisubl
xor
je
xchg
out
movsb
jg
add
sbb
adc
ret
adc
ds
jle
or
add
cmp
adc
jg
nop
mov
insb
imul
rcr
ficoms
push
or
aam
cmp
push
movsb
jae
mov
test
jg
dec
jbe
mov
inc
repnz
insl
pusha
loopne
cltd
cs
sbb
mov
cmpb
pop
les
or
push
js
jno
cmpsb
mov
dec
fidivl
cmp
xorl
nop
push
daa
dec
push
mov
js
sbb
inc
repnz
aas
or
mov
cli
and
pop
outsb
aaa
push
rorb
fs
pop
xchg
stos
xchg
icebp
shll
mov
rorb
xchg
es
insl
adc
jl
in
rorb
inc
dec
dec
mov
popa
or
scas
mov
cmp
push
imul
rcll
pop
mov
lcall
dec
cltd
xor
jnp
cwtl
xor
jns
xlat
mov
loop
daa
popf
ret
fmul
ja
lea
xchg
stos
fidivrl
shlb
cmp
mov
insl
popa
or
and
and
enter
mov
sub
inc
push
pop
jge
adc
inc
ret
add
xor
sti
shrl
out
jmp
or
test
or
push
xchg
sbb
popf
rcrb
divps
inc
push
and
xchg
xlat
cli
sbb
hlt
xor
mov
loopne
dec
popf
into
push
mov
ret
cmp
mov
and
call
lock
or
lods
sbb
fists
scas
xchg
cmpl
repnz
and
in
into
dec
xchg
popf
loopne
dec
mov
enter
and
imul
lods
imul
add
out
out
mov
enter
jne
stos
aaa
setno
xchg
jb
push
push
scas
bnd
aaa
sbb
ja
mov
test
mov
ret
jbe
mov
adc
popa
mov
pop
push
int
pop
cmpsl
pop
jmp
je
mov
add
js
push
fcmovnbe
loop
fmull
jle
dec
lret
fiadds
or
dec
cmpsl
sahf
push
sbb
add
sbb
xchg
arpl
repnz
lahf
pop
sbb
cmp
xchg
scas
and
jmp
sahf
in
mov
xchg
add
cld
sub
leave
mov
fcompl
push
cmp
iret
pop
fnstsw
ljmp
sbb
cmp
cmp
xchg
mov
and
outsl
je
neg
dec
imull
and
inc
out
imul
sbb
cli
dec
jp
mov
xor
out
mov
aam
arpl
add
and
mov
jb
popa
cld
shll
mov
dec
fldenv
gs
jae
sbb
stos
cmpl
push
addr16
dec
mov
cli
scas
xchg
mov
loop
sub
pop
mov
or
mov
add
inc
divb
inc
out
pushf
andb
decb
jnp
test
cltd
fildl
hlt
pop
mov
test
xchg
push
mov
ror
fadds
call
cli
insb
ret
jno
fstpl
push
jmp
cwtl
cmp
adc
add
xor
push
inc
inc
mov
push
dec
out
jg
hlt
inc
xor
outsl
sub
lahf
out
dec
jmp
sahf
fwait
repnz
or
fnsave
add
pop
popl
mov
push
sub
dec
lret
adc
int
aam
loope
adc
cmpsl
xchg
pop
add
add
shrb
xor
mov
cmp
scas
jmp
aaa
gs
push
dec
rorb
pop
sbb
sub
xor
sbb
cmpsb
outsl
dec
out
mov
movsl
movl
jo
outsb
cmp
lds
icebp
and
les
jb
out
in
cmp
xchg
push
sbb
ja
xor
jmp
jnp
jecxz
lock
mov
dec
out
dec
fnstsw
push
inc
scas
cmc
xlat
loop
mov
push
inc
es
stc
rorb
fcmovu
addl
dec
es
cli
mov
add
aad
push
mov
data16
cmpsl
pop
xchg
add
push
bound
movsl
pop
cmp
adc
add
pop
jnp
mov
xchg
loopne
out
test
mov
scas
gs
pop
ret
xchg
sub
push
lahf
xchg
mov
cmp
mov
das
mov
cmp
stos
leave
in
addr16
aam
inc
or
or
jecxz
popf
xor
lods
ss
dec
and
insb
out
dec
mov
sbbb
add
pushf
ds
addr16
dec
imul
jecxz
xchg
or
ljmp
push
mov
add
test
mov
nop
xor
or
in
dec
cmpl
imul
dec
scas
int3
xor
sbb
cmp
loopne
add
jl
dec
jo
ljmp
bound
mov
push
cmp
outsl
cmc
push
test
in
ljmp
add
loop
outsb
xchg
loope
push
cmp
out
add
sub
in
aad
sbb
mov
outsb
mov
pop
sub
jge
imul
xchg
push
cs
movsl
mov
inc
lea
push
xor
cmp
iret
sub
aaa
mov
inc
fdivrl
adc
cmpsb
pop
sub
xchg
ds
inc
sub
add
jmp
add
push
cltd
push
loopne
arpl
rorb
mov
dec
decb
arpl
dec
cmp
lds
icebp
adc
icebp
mov
stos
stos
popa
gs
lds
push
xchg
inc
xchg
jecxz
push
dec
daa
testl
aam
test
push
mov
lahf
dec
out
shr
pop
daa
xchg
lea
enter
repz
icebp
dec
add
cli
push
jbe
and
daa
test
aaa
sub
mov
das
scas
push
add
inc
sahf
xchg
mov
mov
sub
xchg
inc
gs
nop
mov
adc
push
xchg
jo
call
repz
mov
push
sub
insl
aam
je
xlat
mov
mov
mov
push
roll
pop
xor
clc
or
nop
stc
pop
fwait
pop
xor
pop
shrl
sub
aas
rclb
sbb
loope
xchg
in
mov
loope
sub
test
call
inc
in
pop
mov
lods
int
mov
sub
jns
mov
adc
adc
sub
sbb
lcall
push
pop
and
mov
out
or
repnz
mov
popf
and
xor
pusha
jp
dec
inc
lds
std
stos
das
inc
pop
inc
xlat
push
stos
stos
orb
test
cmp
xor
in
mov
jnp
cmp
or
test
dec
xchg
adc
out
push
cmp
lret
lret
mov
cltd
in
mov
pop
cmp
xor
icebp
ds
iret
adc
jl
inc
aam
aam
xlat
jge
pop
vhsubps
shll
pop
fnstcw
adc
out
repz
and
loope
jbe
jnp
jae
jle
inc
nop
enter
push
sbb
ror
or
mov
or
cmp
stc
iret
arpl
mov
or
repnz
inc
fmull
sub
fs
sub
shrb
pop
pusha
ja
movsl
dec
iret
xchg
sarl
imul
loope
and
insl
scas
xchg
iret
stos
inc
in
sahf
mov
pop
push
repz
mov
jmp
add
imul
jecxz
stos
movsb
pop
lret
fcoml
sbb
jl
out
js
outsb
cmp
cmp
or
and
sub
aam
les
xor
dec
jbe
add
aaa
jmp
negb
jle
push
sub
imul
imul
inc
inc
jno
xchg
xchg
dec
mov
mov
cld
push
ret
cli
dec
cmp
xor
fcomps
repz
stos
ljmp
adc
sbb
cli
dec
repz
add
adc
xor
sub
or
jo
or
mov
jno
sub
xchg
pop
inc
dec
fwait
movsb
mov
scas
icebp
xchg
xor
inc
popa
add
insb
xor
cmp
mov
inc
dec
sbb
aad
mov
mov
loop
clc
inc
sahf
sbb
int3
jmp
stos
in
cmp
mov
push
mov
emms
xor
mov
cvtpi2ps
pop
enter
cmp
hlt
icebp
xor
dec
xchg
jmp
pusha
sub
sbb
xlat
xchg
sub
cmpl
arpl
loop
or
aaa
inc
mov
sub
xchg
mov
inc
lea
insb
xor
xor
mov
push
ss
jae
push
inc
and
lods
lret
jnp,pt
mov
add
lods
xorl
pop
mov
cmpl
fstpt
fidivrs
inc
xchg
loopne
fisttps
bound
shrb
cmc
mov
push
dec
movsb
cmp
xchg
mov
out
sbb
repz
xchg
in
aaa
cmp
imul
mov
leave
repnz
out
push
das
inc
and
push
mov
insb
adc
pop
testl
jmp
xor
scas
push
fs
pop
add
mov
xchg
xchg
mov
dec
lahf
sub
inc
orb
fneni(8087
sbb
popf
cmp
cmpsl
inc
mov
cmpsl
inc
xchg
fs
push
mov
or
dec
push
jnp
shl
int3
pop
xchg
iret
test
push
xor
push
adc
test
inc
cmp
add
add
jmp
imul
stc
xchg
out
out
cmp
xchg
lods
clc
mov
fsubrs
sbb
mov
dec
jno
jp
push
add
xor
repz
pop
pop
mov
mov
dec
mov
fildl
test
mov
xchg
xor
icebp
cmp
call
mov
add
dec
mov
sbb
rolb
lahf
repnz
mov
fadd
in
mov
jg
out
xor
mov
and
push
xor
cmp
and
cwtl
xor
popa
jle
nop
and
dec
std
pushf
stos
out
or
push
and
cmp
mov
mov
mov
sti
push
jbe
or
mov
pop
ss
in
lret
ljmp
push
push
mov
jge
mov
je
cmpb
imul
sarb
frstor
xchg
sarb
mov
dec
or
icebp
pushl
inc
pop
cltd
outsb
out
cs
sti
mov
xchg
and
lret
stos
es
mov
hlt
lds
shrl
insb
loop
mov
shll
add
inc
in
add
or
add
orl
cmpsl
mov
jb
jg
push
xor
and
mov
push
in
in
cvtps2pd
xor
test
arpl
aad
xlat
jb
and
std
dec
push
pop
push
mov
fwait
jp
sub
push
ret
or
popf
sbb
clc
mov
xchg
cmp
test
jecxz
add
mov
mov
mov
icebp
cmp
mov
clc
jl
cmc
mov
dec
jne
jno
cmp
cs
add
dec
decb
pop
cmp
arpl
mov
cltd
lret
push
and
call
push
call
sarl
div
ret
xchg
push
sbb
mov
fcmovb
aam
dec
daa
into
fcomi
xor
ljmp
pop
cmp
in
pop
cs
jno
inc
ja
ja
adc
lock
and
into
xchg
iret
jnp
adc
cmp
push
mov
mov
rcrb
pop
push
call
mov
push
lea
fldenv
cltd
test
cltd
fildl
pop
mov
pusha
mov
sar
jle
das
or
cld
mov
cmp
xchg
dec
sti
xor
push
mov
aad
lods
inc
dec
lahf
pop
test
loop,pt
mov
std
push
mulb
ja
sbb
adc
push
mov
in
adc
ret
dec
sbb
lahf
dec
add
pop
adc
adc
movb
cmc
leave
push
push
adc
movzbl
dec
nop
push
add
sub
dec
adc
adc
insb
mov
push
loop
mov
or
subl
push
insb
cld
xchg
add
xor
jne
adc
add
aas
fcmovb
repz
mov
mov
adc
push
sbb
pop
fcomps
or
mov
jne
sti
xchg
xchg
insl
inc
in
shll
mov
sti
jp
jle
push
or
adc
ret
cmp
push
out
xor
push
stos
dec
jnp
mov
repnz
dec
add
cmp
stos
pusha
es
cmp
mov
sub
mov
pop
pop
popf
scas
scas
aad
inc
pop
fcompl
dec
jle
mov
je
cmp
std
jb
add
mov
mov
xchg
pop
daa
stos
mov
scas
adc
icebp
test
lock
in
cmp
mov
call
push
add
fnop
and
jmp
test
stos
cmp
and
xchg
inc
push
out
divl
lods
in
fstl
jmp
les
mov
inc
je
inc
movsb
xor
out
xor
shlb
cmpsb
outsl
jecxz
test
testl
nop
sub
cmp
dec
push
call
out
dec
rcll
pop
adc
cmp
cmpsl
jle
mov
or
scas
leave
or
int3
inc
lea
out
add
mov
xor
push
arpl
xor
andl
fdiv
pop
inc
xor
mov
cmp
movsl
mov
mul
sub
gs
loope
push
inc
adcb
inc
inc
and
pop
cmc
jp
push
mov
sub
ss
push
pop
xchg
pop
ret
dec
mov
mov
lock
outsb
adc
test
jge
outsb
ja
jo
mov
fbstp
repz
in
daa
xchg
push
cmpsb
insl
call
push
jne
imull
sub
adc
js
jne
inc
sbb
test
inc
stc
push
mov
sub
dec
or
test
bound
inc
lcall
repnz
xchg
xchg
pop
xchg
aad
sub
dec
ror
and
mov
gs
lret
dec
lea
outsl
pop
je
push
test
xor
sbb
aaa
jmp
cmp
fcompl
jno
inc
xchg
and
in
or
inc
or
out
mov
andl
ret
fwait
es
stc
sub
xchg
test
popf
lahf
push
movsl
clc
sbb
fistl
adc
mov
rorl
fldenv
mov
xchg
add
aam
sbb
testl
outsb
hlt
push
add
and
mov
adc
rcrb
leave
inc
and
in
or
sub
pop
xchg
adc
pop
xor
fistpl
fsts
test
std
stos
roll
rorl
es
mov
in
gs
call
jmp
loope
sub
addb
adc
dec
or
push
or
mov
mov
fcoms
or
daa
add
mov
sub
sub
push
adc
xlat
mov
sub
mov
adc
fdivrl
sub
cld
xchg
pop
leave
test
mov
ja
push
fucomp
mov
clc
test
movsl
out
cmp
adc
mov
jl
jns
jl
lods
aas
lahf
inc
out
repz
hlt
cmpsl
xchg
jbe
add
insb
insb
jmp
lret
lods
jecxz
test
iret
scas
cli
cmp
jbe
test
sbb
push
mov
clc
or
cmp
xlat
add
xchg
jb
lahf
and
mov
mov
mov
icebp
je
jbe
shl
and
ffreep
adc
imul
dec
xor
daa
cmp
scas
cmpsl
test
push
enter
ret
fldt
sbb
and
xchg
jo
push
aam
sbb
int3
stos
inc
dec
stc
nop
sarb
xchg
scas
mov
mov
dec
lods
jno
outsb
bound
cwtl
sbb
daa
push
adc
cmp
andb
subb
mov
cmp
mov
xchg
rcrb
lcall
movl
push
inc
mov
nop
sbb
fwait
xlat
adc
lret
cs
adc
xor
cmc
test
xor
lods
dec
mov
pop
cs
push
cmp
clc
jne
push
or
xor
inc
xlat
enter
repz
adc
fstpl
arpl
ror
xor
push
dec
in
xchg
sbb
aas
lea
inc
psubusw
out
insb
ljmp
test
clc
fucomp
xor
adc
sarb
mov
dec
mov
or
in
fisttpl
inc
je
inc
cld
mov
aaa
xlat
or
and
xor
fcoml
xor
bound
lret
xchg
push
les
push
test
mulb
mov
movsb
sub
xor
jmp
mov
out
mov
adc
mov
outsb
repz
sub
and
je
inc
js
push
test
lea
mov
sbb
and
xorl
stos
leave
rcll
push
pop
cltd
pop
lods
repnz
xchg
cld
mov
or
in
sbb
cli
aas
jecxz
dec
adc
add
adc
int
jae
js
js
jp
and
lds
outsb
dec
insl
mov
pop
stos
incb
aas
int
lds
mov
cltd
pop
fistl
jmp
add
icebp
mov
inc
fnsave
insb
adc
xchg
push
pusha
xchg
lea
aas
xor
pushf
pop
out
addr16
pushf
movsb
pop
or
jb
mov
xor
lods
jae
or
pusha
aad
mov
dec
imul
rcrb
mov
int
or
and
and
add
adc
sahf
cltd
cli
sti
fbld
divl
repnz
fsubp
icebp
jb
push
xchg
cli
jmp
es
push
push
stc
shlb
cmp
stos
scas
jae
or
adc
testl
stos
jns
popa
mov
arpl
fwait
cld
jbe
sahf
cmpsl
adcb
stos
xor
pop
insb
jnp
push
lret
jb
adc
pop
pop
gs
xchg
pop
xchg
lock
adcl
mov
mov
gs
jg
sarl
sbb
outsb
inc
std
data16
push
stc
mov
add
or
scas
or
shrl
js
add
add
es
iret
xchg
mov
ss
pop
lock
pop
cmp
dec
movb
ja
mov
test
in
arpl
pop
loop
sarl
sub
push
into
mov
sub
rolb
xor
lea
lret
xor
repnz
mov
sub
or
inc
adc
mov
lods
push
lcall
adc
jne
or
dec
mov
testl
pop
pop
mov
lods
shrl
dec
lea
mov
xchg
outsb
fldl
fstl
jo
add
arpl
jo
and
xrelease
rdtsc
cwtl
jg
adc
jl
xorl
pop
movl
repz
ret
add
fisubs
xor
and
cld
dec
sbb
adc
addb
mov
jge
enter
push
cmpsl
inc
lahf
mov
pop
push
mov
mov
push
enter
and
mov
pop
adc
cmc
lods
xorb
and
xchg
stos
fisttpll
dec
scas
enter
mov
jecxz
loope
hlt
xor
pop
pushl
adc
scas
ss
sub
call
ret
dec
jecxz
mov
enter
xchg
push
inc
das
jecxz
cmp
mull
in
add
pop
movsb
pop
je
sub
hlt
sbb
cmp
fisttps
lods
lcall
cld
cmpsb
outsl
insl
push
fcoms
gs
movb
iret
and
movsb
mov
mov
cmp
jle
adc
dec
push
or
jb
sbb
jp
ds
mov
shlb
lods
dec
push
fcoml
popf
mov
imul
hlt
xor
pop
jmp
iret
add
cwtl
xchg
cmpsb
xchg
notl
sbb
sarl
sahf
cld
push
and
out
scas
rolb
rclb
movsl
aaa
gs
cmpsb
jp
xlat
hlt
pop
cltd
mov
xor
cmp
adc
mov
mov
lea
loop
bound
jo
andb
shrl
inc
xlat
or
mov
ret
lea
jns
add
push
adc
xchg
xor
xor
mov
xchg
push
out
jo
inc
push
mov
cli
lock
pop
or
mov
jo
inc
pop
notb
test
int
push
add
sub
jge
subl
fs
jns
dec
into
inc
or
movsl
cli
loopne
mov
xchg
mov
aam
rcrl
pop
pop
sbb
mov
clc
jb
mov
cmp
cmpsl
jo
add
das
stc
pop
push
sub
in
rcrl
stos
sbb
push
test
pop
outsb
dec
dec
xchg
jg
cmp
cltd
and
add
jo
cmc
mov
out
hlt
cmp
outsb
pop
pop
cmp
out
or
mov
mov
loope
fistps
mov
andb
cli
or
lods
shr
dec
or
in
mov
mov
imul
jae
jmp
loopne
adc
dec
test
push
mov
adc
enter
mov
das
aad
in
stos
sbb
imul
int
fisubrl
xor
out
sub
add
xor
jb
mov
das
in
pushf
lock
or
mov
sbb
loope
push
fstl
or
pushf
pop
mov
mov
sarb
and
sub
rolb
int
sbb
lds
lret
xlat
imul
mov
adc
daa
ret
rorb
sbb
cltd
call
fdivr
adc
inc
ja
imul
push
mov
in
out
enter
mov
add
ljmp
frstor
inc
test
icebp
cli
jge
adc
cmp
adc
jno
in
iret
es
gs
push
aaa
jno
popf
int3
mov
push
jo
in
int3
adc
out
lret
in
cmpsb
scas
push
inc
lea
mov
push
xchg
push
sbb
dec
lret
or
lahf
mov
cmp
push
out
pop
mov
movsl
imul
cmp
or
mov
inc
jp
adc
push
insl
mov
enter
pop
mov
inc
sarl
mov
sub
lahf
push
out
pop
sub
clc
stos
outsb
imul
pop
inc
adc
scas
movsl
adc
movsb
test
popa
jp
mov
ret
push
jne
out
xchg
insl
dec
lret
push
and
push
or
pop
xchg
jecxz
cmp
shlb
jecxz
mov
jl
mov
and
lret
mov
ret
mov
sub
in
inc
cltd
jne
mov
pop
roll
fiaddl
lods
inc
pop
fbstp
or
mov
lods
lcall
in
push
aas
or
jbe
filds
xor
bound
sbb
nop
cmpsl
mov
mov
lods
push
cmp
sub
bound
cmp
ja
test
lock
out
shll
or
mov
cmp
inc
pop
lahf
adc
pop
lods
sbb
mov
inc
pusha
cmpsb
mov
cmp
flds
arpl
lods
outsb
test
cld
push
cmpsl
and
stos
xchg
jmp
sub
pop
loop
push
lcall
insb
lods
pop
mov
xchg
sub
inc
jbe
hlt
dec
movsl
sbb
aad
repnz
fisubrl
adcl
fistl
mov
pop
cmpsl
jge
test
out
stc
movsl
cmp
sahf
enter
cwtl
test
in
or
imul
ljmp
int
fwait
imul
pop
xor
lea
jns
push
ljmp
les
push
call
in
ljmp
insl
jno
in
add
mov
test
negl
sbb
cmc
pop
aas
imul
mov
push
pop
and
mov
xor
dec
test
add
mov
repnz
in
xor
push
sub
cmc
fs
pop
fsubl
movb
shlb
ror
cmpsl
dec
imul
cltd
push
jmp
imul
shrl
pop
or
mov
ret
mov
push
jp
loop
roll
inc
xchg
out
clc
mov
dec
push
pop
xchg
pop
pop
jmp
sub
ja
testl
push
repz
sub
aas
loop
adc
mov
dec
or
call
jo
xor
sti
add
inc
sbb
in
inc
mov
mov
cmc
cmp
sub
dec
mov
ficomps
fiadds
daa
cld
add
or
or
std
jle
shlb
stos
and
jge
mov
or
mov
push
movsl
jae
ret
xlat
iret
push
push
scas
and
faddl
inc
mov
pushf
add
out
sbb
jg
lahf
mov
movzwl
push
inc
cmp
xor
dec
push
sub
js
shll
hlt
xchg
jo
add
cmpl
pop
push
jl
lret
sahf
mov
ja
jns
fwait
mov
into
and
dec
popa
jge
mov
enter
out
inc
jnp
or
repnz
add
loop
cmc
rdtsc
and
scas
div
mov
pusha
enter
adc
fnstenv
loopne
stc
push
pushf
rcrb
xchg
xchg
loopne
rol
sub
sub
flds
and
es
pop
sbb
adc
cli
mov
mov
mov
aad
cmp
push
mov
pop
and
mov
stc
cmp
cmp
jecxz
sbbl
arpl
std
adc
lret
cmc
mov
cmc
fdivp
add
xchg
mov
xchg
sub
sub
add
ret
adc
test
sbb
dec
xchg
scas
and
mov
or
repz
es
stos
ds
xchg
inc
and
add
aas
stos
push
mov
add
bnd
das
test
neg
shlb
xor
daa
pop
enter
jae
mov
pop
xchg
mov
lods
jg
lea
dec
jne
inc
adc
mov
inc
pop
pop
frstor
das
xor
mov
mov
pop
jne
loop
or
sahf
jge
out
mov
add
adc
dec
mov
mov
in
clc
push
rorb
adc
mov
lahf
mov
icebp
stos
daa
xchg
sarb
push
add
int3
xchg
iret
and
fwait
aad
lods
cmp
shl
sub
sub
inc
dec
insl
jae
pushf
cmp
or
out
ljmp
cmc
out
add
pop
aam
jbe
mov
sub
or
cmp
sbb
dec
xchg
mov
mov
dec
xchg
cmpsb
inc
push
or
xchg
rol
in
sarl
jo
pop
jnp
ja
mov
add
adc
inc
sub
add
fdivrl
fsubs
pop
std
push
cmp
fwait
pusha
mov
inc
idivl
popf
scas
sbb
xchg
addb
add
rol
shlb
enter
in
stc
loop
div
jle
js
add
jnp
mov
insl
pop
mov
jp
mov
nop
cmp
fidivrs
nop
je
inc
aam
cmp
movsl
mov
es
lret
push
stos
subl
fwait
aam
push
push
jge
inc
cmp
inc
lods
icebp
dec
lea
stos
test
adc
ret
cmp
add
fdivl
mov
mov
sub
stc
call
jae
xchg
mov
idiv
repz
jbe
lods
pop
lods
xchg
push
add
pop
mov
pop
sub
adc
or
add
sub
cmp
pushf
xor
jmp
sub
dec
add
pop
cmp
cmp
out
or
les
push
lret
cs
test
ja
insl
mov
shlb
loopne
ret
xchg
pop
je
cli
mov
sarb
xchg
outsb
push
jne
in
pop
push
lods
mov
loop
inc
mov
pushf
in
add
outsb
das
inc
mov
into
out
push
les
outsl
sti
pop
daa
inc
in
pop
or
dec
cmp
stc
mov
gs
out
inc
hlt
ret
xchg
ds
xchg
rcrb
incb
stc
ds
dec
jle
pop
or
scas
mov
pop
imul
ret
dec
xchg
lods
push
sub
test
ja
push
dec
mov
mov
movsl
mov
mov
ljmp
mov
jge
mov
outsb
jp
outsb
dec
cli
ss
mov
ficoms
out
imul
sbb
adc
jmp
dec
cmpsl
ja
int3
pop
and
push
lds
std
subl
add
out
lahf
inc
and
or
adc
repnz
stc
repnz
mov
ret
in
cmpsl
movsl
out
mov
stos
outsl
xchg
mov
xor
inc
into
sbb
push
loopne
addr16
push
sbb
sbbl
adc
fidivrl
mov
xor
lcall
push
out
lock
inc
mov
hlt
push
pop
in
je
testl
ficoml
mov
lea
push
scas
push
out
mov
mov
add
cs
and
je
adc
mov
sar
std
mov
xchg
push
lret
mov
xchg
inc
jle
sbb
in
mov
arpl
dec
rcr
and
pop
int3
and
sti
loopne
loop
pop
jnp
clc
push
mov
sbb
add
or
pop
mov
pop
xchg
icebp
sub
mov
aam
enter
fbstp
mov
add
pop
pushf
pop
decb
pusha
mov
cmp
js
test
mov
and
jno
test
dec
inc
imul
aad
cli
jae
sub
jnp
shrb
in
cmpsb
inc
movsb
lcall
jbe
cmc
dec
iret
ss
xor
loope
xchg
inc
insl
or
jbe
fistpl
mov
test
add
movsl
fwait
push
out
daa
ficomps
test
inc
jg
pop
inc
cmpsb
cmp
js
ror
pop
add
lods
nop
mov
jae
push
mov
jno
ror
mov
jne
xchg
xchg
cltd
adc
ret
cmp
loop
pop
out
in
sub
in
cwtl
xchg
inc
or
aaa
push
mov
gs
inc
mov
sbb
push
repz
jecxz
stos
fildl
pop
fsts
cmpsl
xor
dec
out
mov
push
and
cmp
adc
out
loop
xor
add
push
loop
mov
jg
jg
les
xlat
inc
hlt
stos
cmp
out
cld
mov
inc
pop
mov
outsb
bnd
fwait
pop
and
adc
pop
inc
rcrl
lods
sbb
add
sbb
fistpll
pop
push
repz
js
jnp
jge
push
inc
sub
fdivrs
repz
imul
adc
add
mov
mov
iret
mov
jne
pop
adc
test
or
dec
lret
inc
cld
push
movsl
push
adc
mov
fwait
lea
sub
xor
outsl
cwtl
pop
nop
inc
sub
mov
clc
sbb
jl
les
fstpt
push
into
into
data16
xor
jae
in
jl
arpl
cmpb
fistpl
jmp
repnz
jns
out
pop
push
cwtl
jmp
int3
ret
or
mov
jg
xchg
mov
or
xor
insl
sbb
push
or
mov
jns
data16
in
cld
jo
jb
fildll
add
add
lcall
sbb
mov
pusha
lret
mov
test
movsb
xchg
sub
push
xchg
push
call
push
push
mov
jmp
icebp
mov
cmp
cmp
insb
jp
dec
pop
and
call
ljmp
in
and
add
push
inc
leave
sub
aam
inc
negl
sub
jmp
push
aaa
mov
fisubrs
shrb
dec
inc
sbb
dec
sbbb
cmp
add
jge
cmp
and
imul
jbe
pop
mov
or
adc
sbb
adc
daa
cmp
add
push
lahf
leave
outsb
out
pop
into
add
fmull
cmpsl
sbb
or
mov
jg
xchg
cmc
and
xchg
das
ljmp
adc
lret
mov
xchg
xchg
adc
test
cmc
mov
push
xor
lahf
cmp
fstl
vmwrite
call
push
pop
mov
decl
lret
push
js
add
sbb
mov
or
es
mov
mov
out
pop
icebp
adc
cmp
jl
cwtl
pop
push
shrl
add
arpl
out
xor
in
not
and
xchg
fdivrl
mov
fsubrl
cmp
push
faddl
ret
adc
adcl
cltd
mov
mov
xchg
int
in
mov
pop
sbb
push
data16
pop
xchg
jg
pop
outsl
mov
int
mov
dec
xor
repnz
inc
mov
cmpsb
jae
and
mov
mov
leave
test
sarl
insl
mov
fstpl
aaa
xlat
into
mov
cmp
mov
inc
add
or
mov
mov
dec
adc
xchg
sbb
dec
sbb
jns
mov
jle
aaa
fcoms
xchg
int
cli
ja
imul
push
js
xchg
push
pop
jl
imul
aaa
sub
jge
and
outsb
inc
and
or
mov
pushl
dec
adc
mov
fimull
fnstsw
pop
enter
fidivrs
test
inc
bound
mov
adc
add
ja
lea
pop
popf
out
pop
lahf
pop
cld
out
xchg
in
test
push
stc
aam
out
adc
sbb
adc
popf
and
mov
repnz
hlt
adc
adc
mov
out
imul
and
aas
mov
push
notl
sbb
sbb
mov
lock
and
or
mov
shrl
test
jl
pop
xchg
fimuls
movsb
jne
stos
orl
scas
pop
arpl
sbb
ss
xor
mov
scas
addr16
cltd
fimuls
lcall
cmp
loopne
cmpsl
fistpl
lea
sahf
cmpb
cltd
mov
push
sbb
je
adc
into
cs
sub
loopne
push
push
xchg
mov
imul
aaa
es
xchg
pop
or
or
insl
jno
sub
popf
pop
ss
push
sbb
pop
add
cs
and
and
cmp
insb
in
cmc
les
fstps
jne
fcompl
and
test
lods
jb
inc
cli
cld
pop
je
xchg
iret
pop
adc
push
dec
jbe
ds
out
loop
add
jmp
sub
nop
mov
pusha
fidivrs
xchg
cmp
aad
rcrl
jg
adcl
enter
mov
mov
push
out
and
mov
add
xor
or
pop
jbe
push
cmp
insb
cmp
and
push
add
add
sub
dec
or
mov
mov
pop
idivl
iret
dec
test
into
loop
add
clc
push
mov
jle
outsl
rolb
nop
dec
and
push
outsl
fcoms
enter
add
popa
cmp
inc
add
lea
push
pop
cmpsl
fwait
add
lret
xchg
call
or
sub
icebp
pop
stos
mov
or
or
js
mov
into
cli
test
pop
fnsave
fmul
add
xor
jle
pop
cmp
cmp
test
in
mov
xchg
lea
or
push
into
mov
inc
push
and
xor
mov
sbb
rcll
mov
iret
scas
jg
imul
sar
cmp
cltd
mov
popf
cmp
mov
out
out
inc
adc
mov
stc
mov
mov
add
push
test
or
cmp
jb
scas
sub
sbb
pop
jp
out
push
into
aam
test
leave
lods
mov
aad
fs
or
dec
jnp
fisubl
mov
mov
aam
pop
push
mov
out
mov
ret
xor
or
insl
test
and
push
lret
and
push
xor
hlt
test
out
xor
sub
popa
pop
mov
pop
pop
mov
mov
xchg
push
pop
xchg
nop
add
push
mov
pop
shlb
rcrb
add
jle
dec
repz
push
xor
or
mov
aaa
xor
test
mov
dec
nop
pushf
arpl
enter
cmp
push
insb
leave
pop
into
lods
dec
stos
outsl
add
icebp
repnz
mov
ja
mov
fstps
xor
les
mov
add
ucomisd
aam
dec
adc
dec
lods
pusha
push
mov
ficompl
vpor
xchg
mov
int3
fldenv
call
or
jnp
xor
push
mov
push
mov
inc
pop
inc
cli
mov
pop
cmp
int3
incl
pop
push
scas
dec
movsb
mov
pop
push
mov
adcl
cmp
addr16
out
mov
mov
icebp
mov
adc
pop
imul
pop
xchg
ja
jl
cmc
js
ror
pop
shll
repnz
add
dec
hlt
mov
rcr
fistpll
xchg
inc
jo
adc
adc
cmpsl
mov
rcll
xchg
xor
in
into
imul
mov
cmp
add
cltd
leave
sahf
pop
pop
pop
pop
push
pushl
jne
in
xchg
push
xor
or
cmp
cmc
lods
adc
data16
cmpsb
push
and
or
xchg
inc
iret
cmp
fdiv
stc
xor
ss
mov
cs
pop
sbb
addr16
xchg
jmp
lret
xor
aad
xor
sub
push
shll
inc
out
dec
addr16
inc
setno
cmp
test
cmp
adc
clc
mov
addr16
cwtl
mov
outsb
inc
cmp
xchg
daa
push
add
jbe
repnz
aas
lods
push
mov
cmp
lret
push
pop
loopne
mov
xchg
pop
cmpsl
iret
cmp
jnp
xchg
insb
aas
jnp
xchg
add
mov
sbb
les
je
push
pop
test
daa
jp
decb
orl
in
or
cmp
divb
xchg
jg
movsb
fistps
out
push
xchg
aad
push
mov
jno
xchg
xlat
pop
enter
lahf
mov
mov
lcall
pusha
and
subl
inc
into
mov
mov
les
pop
mov
in
and
stos
cli
repnz
mov
mov
leave
fildll
fwait
mov
cmpsl
dec
and
pop
adc
lret
push
sti
cmp
in
cmpsl
push
rorl
fwait
add
sbb
in
ret
cs
push
inc
inc
into
push
sbb
dec
jbe
cmp
mov
cs
sbbl
jp
jecxz
int3
mov
aad
push
repz
insl
lea
push
adcb
mov
pop
jg
mov
icebp
pop
pop
test
test
leave
test
mov
add
mov
mov
dec
jmp
dec
stos
pushf
lahf
jp
lret
jns
dec
outsb
loopne
clc
adc
inc
hlt
add
imul
or
jno
add
js
cmpsl
and
lahf
movsb
sub
jecxz
dec
icebp
xchg
sub
or
xchg
add
adcb
arpl
setg
sbb
or
mov
mov
enter
push
daa
jg
jo
or
and
adc
sbb
xlat
xlat
push
adc
movsb
gs
cwtl
rcrl
xchg
sahf
push
in
jle
xchg
mov
cmp
pop
sbb
nop
aad
inc
lret
xchg
pop
adcb
jno
cmp
out
mov
and
je
jecxz
pop
pushf
xchg
cmp
mov
ficompl
leave
ss
test
pop
fldenv
pause
inc
push
xchg
sbb
add
daa
negl
lret
cmc
dec
sub
ja
jne
push
jno
push
dec
out
rolb
pop
popa
in
sbb
loope
adc
lds
xor
mov
mov
loope
ret
jp
test
xchg
and
out
dec
icebp
lcall
mov
fwait
lods
mov
arpl
outsl
jmp
sbb
outsl
push
add
pusha
out
adc
out
hlt
or
adc
addr16
cmpsb
and
jne
sub
mov
adc
sub
mov
aad
xor
lods
orl
ret
daa
cld
xchg
popa
xlat
dec
outsb
hlt
mov
jae
aaa
psubsw
test
out
or
insb
inc
ds
cmp
orb
nop
stc
mulps
jecxz
pusha
jo
and
cmp
jecxz
jnp
mov
xchg
sub
mov
jns
jae
cmp
xchg
add
cmpsl
shlb
test
inc
and
or
jo
test
mov
or
push
or
push
pop
stc
push
mov
movsb
dec
les
fisubrs
ret
fsubr
stos
jb
lret
mov
add
daa
cmp
icebp
lret
jo
cmp
fwait
negl
into
lods
push
ret
test
inc
jge
mov
adc
dec
pop
rclb
sbb
ficoms
clc
notb
jp
sub
sub
push
dec
pop
in
push
fisubl
into
and
mov
sbb
cmpsl
mov
outsb
cmpsl
leave
scas
or
repz
xor
outsb
insl
fwait
lods
and
hlt
fwait
cltd
cmpsl
pop
xchg
dec
sub
mov
cmpsl
das
ret
dec
les
and
xchg
ret
add
cld
sub
add
inc
leave
xlat
nop
jecxz
lcall
out
mov
or
ret
xchg
pushf
fnstsw
lret
lahf
inc
pop
mov
cmp
mov
lea
sub
push
outsb
inc
iret
xchg
pop
js
xchg
mov
pop
push
scas
push
push
pop
lret
jno
imul
cs
mov
stos
aam
jne
dec
hlt
pop
and
fldt
nop
sbb
dec
inc
mov
add
es
stos
fcompl
es
int
xor
push
out
lret
movl
jmp
lods
popa
sub
subl
je
jno
mov
dec
pop
int3
adc
repnz
dec
sub
xchg
cmc
add
inc
iret
sbb
fiaddl
icebp
out
cs
fcomi
loope
lret
or
xchg
pop
and
cmp
gs
cli
sbb
cwtl
imul
shlb
cmp
mov
ret
scas
das
sti
add
jae
jg
xchg
std
jno
nop
rclb
xchg
aas
cmp
in
popa
ficoms
mov
out
arpl
push
sbb
pop
push
movsl
fsubl
and
jge
jno
cmpb
or
push
lock
cmp
in
mov
lods
cmp
insl
int
mov
mov
xchg
cmp
jmp
pop
cmpsb
arpl
dec
inc
push
sub
mov
pop
mov
sub
clc
sub
repz
xchg
xchg
xchg
cli
push
divb
and
sbb
mov
aaa
or
xor
xchg
mov
add
push
cmp
sub
or
scas
lcall
stos
mov
or
or
adc
sub
mov
mov
mov
fsubrp
sti
push
popa
add
cmpl
mov
pop
lcall
enter
sub
loopne
movsl
imul
fmul
jmp
ffreep
lock
cld
or
dec
adc
mov
dec
mov
out
adc
shlb
decb
out
adc
sub
dec
popf
popa
pusha
jmp
jmp
jns
fisubl
add
es
xlat
xchg
mov
orl
lcall
adc
hlt
mov
dec
jo
movsl
shl
or
fisubrl
push
movsb
push
sub
lcall
bound
pop
inc
clc
les
mov
cmpsl
dec
nop
jo
mov
and
lds
sti
xor
cs
mov
xchg
push
cmp
stc
adcl
jo
jl
jne
dec
outsb
ljmp
std
aaa
mov
js
inc
push
test
loopne
dec
mov
sub
rcrl
add
pop
decb
shrd
pop
repnz
pop
xorb
shll
in
xor
cmp
mov
faddl
cld
xchg
adc
outsl
in
inc
jg
adc
in
push
xchg
pop
pop
dec
lret
mov
nop
aam
xchg
popa
xor
ds
ret
mov
and
sti
aaa
shrl
retw
mov
jb
sub
sub
insl
negl
cmpsb
or
sub
and
push
popa
fwait
stc
push
mov
jbe
ds
pop
mov
out
pop
push
and
mov
mov
ljmp
repz
lea
repz
stos
jnp,pn
adc
fs
jne
push
out
mov
movsl
inc
pushf
pop
mov
xchg
inc
pusha
outsl
repz
in
add
push
arpl
push
mov
movsl
xchg
ds
jle
xor
shl
inc
xor
jmp
rcrl
sub
adc
vpavgb
rcrb
les
cmpsl
fisubrs
and
xchg
xchg
ret
jp
inc
dec
lret
add
test
pop
push
dec
outsl
push
mov
push
pop
jno
inc
add
jge
add
pop
pop
sub
inc
inc
ja
mov
mov
es
fs
add
and
repz
mov
mov
repz
sbb
pop
arpl
dec
rcrl
dec
or
lods
jp
mov
arpl
jmp
outsl
out
mov
and
fcomps
jle
pop
imul
addr16
mov
stos
nop
repz
pushf
scas
inc
shlb
pushf
cwtl
fimull
xchg
test
pop
das
jns
pop
int
adc
xor
cmpsl
jb
cmp
mov
in
jbe
sahf
fistps
mov
push
ljmp
push
pop
aas
lcall
sbb
cmpsl
push
push
push
aas
repnz
or
movsb
call
sbb
movsb
add
subb
sub
sbb
mov
dec
cmp
pusha
test
fdivs
lock
je
lret
add
pop
popa
jmp
subps
bound
call
push
leave
aad
sti
ret
jl
fs
dec
and
jl
ljmp
pop
push
fdivrp
xchg
push
pop
cmp
mov
rcr
cs
adc
push
mov
shrl
fdivrl
mov
push
push
xchg
in
xor
vpsllw
cwtl
cs
mov
lds
pop
pop
push
and
iret
and
out
fcoml
mov
adc
out
sbb
cld
inc
and
insl
or
pop
out
add
filds
int
jmp
push
loop
orb
jae
daa
repz
repnz
add
pop
cmpsb
movsb
inc
jge
sbb
ficoms
xchg
or
addr16
mov
fs
jne
cmp
jmp
pop
sbb
xor
inc
pusha
cmp
flds
pop
pop
sarb
test
jne
outsb
xchg
push
add
xor
insl
pushf
cmp
push
or
stos
lock
int3
out
sbb
lret
les
icebp
or
xchg
and
xlat
ret
inc
sub
adc
fucom
fnstsw
or
or
dec
mov
push
ljmp
outsl
sub
popf
adc
adc
xchg
in
aad
adcl
push
push
xchg
xchg
cwtl
mov
call
xchg
adc
xchg
sbb
imull
mov
enter
fildll
es
xor
push
nop
mov
cmpsl
in
add
add
loopne
lcall
pusha
cmpsl
cmp
hlt
and
mov
adc
push
mov
add
dec
lahf
pop
fildl
in
lea
adc
test
mov
into
mov
cltd
xor
inc
aam
es
pop
mov
push
outsl
and
adc
and
or
jp
sbb
pushf
sub
inc
xchg
mov
push
xlat
in
dec
mov
xor
mov
sub
pop
movsb
adc
lahf
pop
insb
jns
mov
adc
lock
jp
cmp
cwtl
xor
repz
or
orb
das
xor
dec
add
jns
dec
scas
xor
test
and
xchg
hlt
dec
fcoml
loope
sub
scas
inc
arpl
dec
push
or
xchg
out
xor
aad
sbbl
adc
pop
dec
mov
sarl
arpl
sbb
daa
sbb
shl
repnz
lret
js
lcall
push
daa
mov
dec
xchg
lcall
cmp
cmpsl
leave
subb
dec
pusha
push
scas
jmp
push
inc
inc
mov
xor
push
hlt
adc
jnp
lea
lods
into
pop
sbb
xchg
or
scas
fidivl
lret
pushf
add
std
xor
sbb
repz
push
sti
ds
out
add
lods
push
andl
jns
sub
add
jg
mov
fwait
jmp
cmp
xchg
jl
mov
pushf
sar
bound
mov
out
xor
aaa
or
sbb
out
fisttpll
xchg
pop
and
push
cmovae
ds
xor
jne
sbb
dec
out
adc
aad
fisubrl
cmp
xchg
pop
lahf
pop
sub
out
xor
and
or
or
je
mov
jmp
and
dec
cs
movsb
lods
sub
das
or
ficomps
pusha
repz
sbb
sti
jge
or
xchg
filds
xor
insb
jns
hlt
inc
ret
and
jge
aas
mov
pop
arpl
aas
dec
jge
in
mov
movhps
iret
or
ss
add
int3
jmp
sub
loopne
rcrb
jb
outsl
push
add
add
into
jo
sbb
fbld
mov
hlt
mov
add
mov
jo
pop
sbb
rolb
adc
xchg
pusha
int3
cmc
sbb
cs
pushf
pusha
or
pusha
rcrb
rorl
dec
sub
out
push
push
cs
push
pop
call
jg
dec
mov
pop
insb
icebp
xchg
adc
sbb
out
xchg
dec
fldt
push
push
ljmp
sbb
mov
pop
or
sbb
sti
cli
lret
mov
push
in
sub
adc
popa
in
mov
xchg
int3
jnp
scas
pop
sbb
dec
popf
popf
cmp
mov
arpl
rclb
inc
aaa
outsb
push
mov
adc
ret
mov
fistpll
mov
sbb
jnp
es
pop
rolb
push
int3
push
mov
fstps
sub
push
jnp
cmp
aam
xor
or
ret
inc
test
aad
inc
cmpsb
jp
dec
dec
xor
and
cli
cli
fisubl
sarb
gs
dec
out
je
and
push
jl
roll
je
or
addr16
push
pushf
and
ret
lods
sub
cwtl
rcll
cmc
pusha
adc
mov
in
addr16
rorb
rolb
adc
sub
fdivl
xchg
jb
aad
outsb
aad
mov
pop
cmc
cmp
pop
lock
lods
jmp
push
clc
ficomps
popl
inc
mov
test
shlb
push
cmp
push
pop
jo
inc
pop
test
sti
jle
into
inc
decl
jno
cs
in
cmp
mov
xchg
mov
fwait
and
lock
pushf
dec
fscale
iret
dec
mov
andl
out
push
ret
scas
mov
push
sbb
sub
loope
jmp
scas
jnp
sub
push
and
stc
call
maxps
subb
outsb
insb
and
cltd
jnp
cmpsb
fildll
inc
hlt
std
mov
jmp
adc
fistpl
fsubr
lods
mov
pop
fsubrl
enter
rclb
aaa
and
mov
mov
fs
push
rorl
fldl
aas
daa
leave
rol
in
fisttpll
movb
push
pop
push
sub
and
fcmove
dec
lds
push
or
jnp
pop
mov
mov
jno
cmpsb
push
and
push
add
jns
lea
sbb
pop
addl
out
cmc
ltr
aam
lea
imul
pushf
xchg
dec
push
xchg
add
hlt
es
les
mov
mov
outsb
sub
bound
loopne
or
pop
dec
std
pushf
lods
faddl
in
cs
mov
in
idivb
adc
inc
aas
pop
std
shll
outsb
movsb
xor
xor
sar
dec
cmp
push
in
and
fisubl
xlat
movsl
ftst
shl
lcall
push
push
shlb
jg
add
outsl
and
ds
mov
aad
cmp
mov
outsb
ret
data16
sub
outsl
test
test
aad
inc
fldl
pop
aam
or
sub
pushf
fsubrs
and
xchg
jno
pop
insb
aaa
mov
scas
adc
push
lods
sub
push
jle
nop
or
dec
loope
daa
xchg
mov
pop
pusha
movsl
jb
mov
das
lea
mov
jnp
shrl
es
pop
xchg
roll
jl
sbb
push
xchg
cmp
add
and
out
and
aam
dec
pop
cld
sti
or
std
fiadds
add
pop
sub
test
pop
enter
xchg
out
sub
pop
lock
ss
in
ljmp
stc
pop
pop
pop
mull
adc
lock
decb
cmp
or
mov
icebp
sbb
dec
push
bound
repz
add
mov
cwtl
pop
popf
inc
xchg
sti
add
push
lds
sbb
sbb
jl
mov
fisttpll
repnz
fcmovb
ror
inc
mov
xor
fisubl
sbb
int
mov
out
dec
aaa
fwait
cmp
or
jae
loope
cmpb
sub
stc
push
dec
andb
mov
out
js
push
or
and
add
push
push
rcr
sbb
frstor
inc
adc
in
and
int3
and
inc
loope
call
sbb
gs
in
mov
jmp
push
cmp
mov
fimull
pop
scas
inc
ljmp
inc
icebp
bound
stos
jmp
pop
in
test
lods
pop
xor
xchg
push
mov
out
and
push
jns
jmp
out
sub
xor
mov
or
mov
xchg
pop
fimuls
cmpsl
outsl
fsubrs
ss
push
xchg
cmp
push
rolb
add
sbb
cmp
pop
xchg
xchg
mov
rep
inc
dec
scas
lea
cmpsl
in
scas
lods
pop
fisttpll
lcall
sti
sbb
mov
ds
or
xorb
pop
testl
mov
xor
negl
insl
loope
pop
and
outsl
ja
xchg
lret
xchg
mov
shr
lods
aas
mov
sbbl
jbe
int3
inc
pop
cld
repnz
push
int
and
sub
in
negb
cmp
sbb
dec
cld
xorb
fnsave
shlb
ss
ret
jg
lock
adc
lock
mov
fidivrl
jae
lods
and
das
jbe
xchg
adc
test
rcrb
lret
sub
pop
mov
xchg
mov
test
hlt
ljmp
int3
push
test
inc
inc
lock
or
scas
test
add
negb
sub
and
fdivl
test
repnz
scas
pusha
fildl
dec
call
xchg
add
mov
jmp
inc
xchg
daa
xchg
jge
subl
pop
sub
mov
addr16
or
daa
test
cld
repz
jle
out
jg
inc
pop
aas
iret
std
mov
dec
sub
and
shr
push
mov
cmp
jbe
sbb
push
test
and
pop
jns
lret
jb
jle
sahf
push
stc
les
pop
repz
inc
push
sub
jmp
xchg
inc
mov
bound
push
ss
and
mov
lock
je
pop
dec
cmp
cs
sbb
call
insb
push
sub
fcmovnu
pop
imul
jae
nop
and
sub
notl
out
inc
arpl
addr16
mov
jae
xchg
stos
subl
pop
mov
or
fists
mov
sahf
xchg
lea
fs
stos
jae
cmpsb
xor
xchg
aas
pop
not
xor
movsb
adc
arpl
xchg
data16
xor
jecxz
lds
repz
jne
pop
movsb
repz
mov
ret
ja
pop
clc
inc
push
pusha
dec
hlt
les
pop
bound
mov
imul
adc
pusha
in
jle
fsubr
fcoml
mov
idivb
addr16
outsb
jmp
adc
xor
cmp
xchg
movsb
jns
push
test
lret
pop
sub
and
add
or
test
and
add
leave
xor
adc
std
jb
aaa
xor
pop
movsl
lds
int3
jecxz
loopne
sahf
mov
std
hlt
pop
cli
mov
imul
fisubl
enter
sbb
ds
repnz
xchg
mov
ja
inc
dec
sbb
jg
das
mov
mov
mov
aas
pop
lock
insb
shll
jnp
sub
fcomps
and
jecxz
pop
cmp
movzwl
adc
pop
sub
ficoml
out
mov
scas
into
idiv
mov
pop
jb
jbe
repnz
int
and
push
scas
pop
or
push
sbb
bound
push
in
sbb
sub
cmp
add
jge
and
lcall
stc
lahf
test
outsb
push
into
mov
fstpl
in
and
push
dec
mov
jmp
scas
pop
push
mov
lods
jae
inc
push
jmp
imul
push
adc
nop
imul
loopne
rcrl
hlt
sub
or
and
aas
adc
jg
xor
aaa
add
nop
fmull
xor
jb
clc
inc
cmp
xchg
sub
ret
out
in
jmp
loopne
inc
outsl
decb
shrl
cmp
out
cmpsb
xchg
xchg
jp
sarl
pop
fmull
in
loop
sti
lret
xor
sahf
cs
adcl
inc
outsl
lret
mov
leave
je
fxsave
fsubl
push
or
adc
loopne
xchg
clc
pusha
in
jp
iret
jno
adc
fstps
add
xor
fadds
movsb
push
sbb
xchg
cmc
push
clc
cmp
pushf
jns
fs
repnz
mov
mov
push
insl
or
add
mov
fstps
add
push
in
adc
mov
lods
std
fcoms
jb
leave
cmp
aas
out
or
fadd
pop
and
ds
cwtl
daa
hlt
pop
mov
cmpsl
jmp
jnp
loop
les
xor
push
pop
inc
int
das
push
jno
xor
fwait
sbb
std
mov
push
outsb
movsb
mov
mov
loop
or
pop
int
mov
dec
inc
flds
aad
aaa
mov
cli
and
sbb
rclb
push
frstor
fidivl
xor
mov
and
inc
inc
inc
sub
inc
sbb
sbbl
dec
mov
push
and
jo
mov
or
add
test
mov
das
add
mov
sub
inc
mov
in
daa
inc
push
xor
pushf
xchg
inc
jecxz
cmpsb
cmp
and
icebp
inc
jbe
aam
call
sti
push
cwtl
push
mov
aaa
jb
xchg
add
das
je
sbb
xchg
xlat
mov
xor
pop
mov
std
mov
jb
xchg
stc
xchg
stos
or
add
mov
pop
clc
ljmp
mov
mov
lock
mov
pop
inc
and
jne
sbb
ljmp
jnp
push
sbb
jns
and
shlb
cltd
mov
cmc
shlb
lock
mov
js
dec
ss
fldl
jo
sub
scas
jno
mov
mov
jp,pn
jnp
xor
divb
adc
fwait
jp
add
shrb
pop
push
sbb
pop
add
lcall
test
mov
push
js
inc
push
rclb
sbb
mov
mov
push
mov
adc
insb
repnz
dec
inc
aam
int3
xchg
mov
xor
dec
pop
mov
dec
pop
xlat
popa
pop
inc
adc
inc
inc
dec
jnp
jge
mov
jg
mov
push
jmp
adc
or
xchg
orb
mov
cmp
push
aaa
push
inc
je
pop
sbb
fs
mov
push
fdivs
out
mov
test
mov
jl
stos
adc
out
loope
mov
sbb
jmp
pop
inc
mov
or
jg
add
out
cmpsl
gs
pop
add
jb
xchg
xchg
adc
dec
movsb
in
hlt
and
test
jb
push
scas
mov
mov
inc
xor
clc
imul
mov
inc
sbb
andb
mulb
stos
and
push
imul
movsl
sub
fcompl
cs
pop
fldt
ss
movsl
cmp
mov
aas
xchg
clc
ja
rorl
pop
mov
add
sub
insl
mov
fsubrs
sub
pop
test
in
sub
jg
fdivp
xchg
xor
jl
dec
imul
pushf
out
mov
jns
push
test
inc
loope
mov
sub
pop
sub
jb
push
shr
push
cmpsl
mov
mov
pop
xlat
push
xchg
mov
inc
cwtl
lods
rcll
enter
push
lock
repz
test
fimuls
xchg
cmp
add
or
pop
jg
out
sub
pop
popf
push
mov
xchg
push
xlat
inc
ds
push
cmc
push
mov
in
xchg
test
dec
adc
mov
mov
bound
mov
xor
movsl
sub
insl
add
shlb
push
pop
icebp
inc
lcall
out
jbe
mov
repz
mov
pop
cltd
push
insl
idiv
inc
dec
loop
push
or
lret
test
xchg
outsl
int3
xchg
inc
sbb
mov
pop
pop
push
inc
lea
test
inc
dec
push
mov
or
ret
fildl
and
repnz
lcall
pushl
imul
sub
popf
adc
lahf
mov
loop
cs
pushf
lret
inc
out
xchg
loop
testl
adc
repz
test
popa
mov
cmp
orl
ret
cltd
movsl
mov
ret
jecxz
out
xchg
add
lods
iret
cmp
in
mulb
mov
cmp
ds
into
inc
pop
jno
dec
cmpsl
mov
pop
aad
xor
scas
ja
sbb
lea
ljmp
pop
insl
mov
xor
js
mov
lods
insb
loop
pushl
jg
jno
ret
nop
dec
push
stos
pushf
ss
test
mov
xor
ds
pop
mov
inc
jno
mov
outsb
test
lea
xlat
push
fsubrs
stc
popf
lret
or
mov
icebp
lahf
mov
imul
xchg
loope
sahf
push
insb
lcall
clc
in
or
sti
adc
call
lds
xlat
leave
cmpsl
xor
xor
dec
adc
sti
cs
in
and
les
fwait
bound
ja
insl
test
stos
daa
push
push
lret
xchg
sbb
jbe
nop
xchg
fidivs
sbb
and
push
xor
inc
jb
ljmp
pop
imul
adc
xor
push
lods
cmp
scas
aad
xchg
js
cmpsl
push
lret
bound
roll
mov
push
xchg
mov
cmp
adc
repz
pop
mov
sub
in
pop
int
mov
je
xor
nop
mov
out
repnz
push
frstor
in
fidivrs
clc
add
cltd
ljmp
push
sti
inc
push
mov
stos
xchg
enter
mov
xchg
popf
pop
pop
nop
vcomiss
jns
dec
scas
fstpt
fucom
dec
arpl
jno
push
push
pop
sub
or
push
cmp
lahf
in
xor
mov
inc
aas
mov
or
mov
adc
rcl
das
leave
loope
outsb
cltd
and
fs
jns
mov
and
shrb
pop
in
aam
push
mov
xchg
lock
inc
sub
cmp
mov
rorb
inc
cmc
add
dec
mov
xchg
inc
cmp
pop
js
jnp
jb
pop
mov
push
mov
push
and
xchg
stc
push
adc
or
or
cmc
or
ds
decl
push
inc
pop
dec
push
daa
icebp
out
aas
and
loop
nop
leave
sub
sbb
inc
lret
dec
aad
cmp
stos
out
shl
xor
ss
imul
cmpsl
sub
mov
ret
ss
filds
and
or
adc
dec
loop
cld
fsubrl
mov
pop
cmp
add
jmp
xchg
mov
cmpsb
mov
andl
xchg
imul
movsl
mov
insb
sub
fistpl
clc
and
call
pop
imul
inc
outsb
fwait
push
stos
int
out
jp
xchg
mov
and
mov
cmp
or
and
or
sti
out
loopne
dec
fwait
push
outsb
jnp
or
divb
xchg
pop
ss
daa
int3
out
dec
dec
test
into
add
nop
add
imul
insl
je
xchg
lahf
xor
jno
in
insl
out
xor
lods
movsl
nop
and
mov
ret
lods
or
adc
mov
xchg
sub
jo
jmp
das
ja
jns
xchg
push
jmp
je
xchg
js
adc
jo
jmp
dec
std
lods
sub
inc
fisubrs
push
repnz
lahf
add
push
push
cli
or
mov
imul
subb
inc
scas
cwtl
out
je
mov
mov
cmp
dec
rorb
and
ficoms
xchg
icebp
jns
pop
call
mov
or
pushf
cld
pop
insb
jmp
stos
in
scas
cltd
cmp
repz
pop
cmp
dec
in
pop
xchg
repz
pop
sbb
sbb
xchg
ror
mov
or
jo
mov
xor
add
sub
pop
test
inc
lds
lods
aas
cmp
or
jnp
bound
lret
ss
dec
jo
andl
std
inc
pop
fists
xchg
and
roll
fildll
test
or
push
inc
push
mov
dec
pusha
xchg
jne
mov
leave
test
inc
mov
dec
mov
push
ljmp
fistl
mov
mov
sub
jno
lds
lods
mov
add
xchg
into
hlt
add
sbb
repz
out
inc
push
frstor
sarb
imul
cltd
in
mov
mov
or
mov
add
pop
ja
je
popf
out
dec
xor
cli
cmp
mov
pop
aaa
mov
sbb
jo
mov
aam
aaa
addb
ror
sub
out
mov
xor
lcall
sub
or
mov
mov
xor
dec
notb
aaa
enter
fdivrl
add
push
in
or
pop
push
inc
sbb
mov
cmp
fsubl
repz
shll
dec
mov
mov
cltd
jmp
xor
jge
adc
inc
leave
ja
push
push
adc
fwait
icebp
lahf
mov
lods
mov
push
nop
cmp
mov
fcoms
sbb
xchg
roll
jle
imul
out
mov
rorb
mov
into
aaa
cmp
jg
negb
mov
outsl
shr
jp
and
cmp
dec
add
int3
stc
pop
sbb
jle
movsl
test
xchg
mov
and
inc
mov
add
es
add
or
pop
cmp
or
arpl
addr16
jecxz
inc
dec
pop
mov
jp
mov
inc
mov
add
xchg
dec
inc
pop
imul
push
out
mov
adc
jle
ja
mov
mov
mov
pusha
sbb
and
jae
mov
andl
sub
xchg
sbb
ja
push
inc
popa
mov
push
rcrl
cmp
ljmp
lock
jno
jno
test
rorb
test
mov
cltd
xor
jnp
data16
sub
jns
xor
jle
xlat
lret
adc
ret
cmp
push
test
adc
cmp
pop
ret
sbb
sbb
sbb
aas
in
test
mov
cmp
fwait
outsb
add
cwtl
stos
add
scas
jb
mov
inc
xor
sub
insl
test
sub
mov
aam
or
and
xor
or
insl
xchg
inc
mov
add
dec
inc
xchg
mov
mov
xchg
sti
inc
dec
pop
xchg
fwait
ret
gs
push
push
xchg
test
mov
cmpsl
fsubl
popa
jge
dec
or
xchg
pop
dec
xchg
out
cmp
mov
xchg
stc
aam
fs
stos
hlt
shll
shlb
mov
or
rcll
inc
pop
lds
and
test
pop
sbb
bound
insl
cmpl
movsl
push
xlat
xlat
test
and
dec
das
push
mov
insl
pop
fwait
cmc
cmp
lret
add
movsb
jl
push
add
cs
stc
xlat
aas
xlat
jbe
mov
or
and
add
pop
das
push
jp
rcrl
mov
out
xor
outsb
inc
inc
xchg
mov
repz
ret
outsb
pop
addb
mov
xchg
cs
mov
cmpsl
aad
pop
test
add
xchg
add
hlt
push
into
or
inc
les
adc
mov
push
inc
clc
test
or
push
xchg
push
mov
aam
nop
mov
or
cmp
cmp
push
ret
daa
lahf
hlt
mov
std
cltd
fs
test
push
hlt
out
fmuls
movsl
js
sub
pop
fistpl
les
out
jbe
dec
aaa
scas
lds
cmp
pop
mov
stos
inc
ret
int
or
push
xchg
fs
test
popf
fidivrl
jbe
mov
lods
subb
lret
jl
ret
mov
push
scas
xchg
lock
jmp
into
sbb
lcall
xchg
adc
push
arpl
movsb
dec
ja
lock
jnp
insb
aad
rcll
insb
imul
cmp
fsub
lods
pop
hlt
subl
fisubs
insb
cmpb
sarb
pop
dec
hlt
test
mov
arpl
aad
inc
das
sbb
pop
inc
mov
mov
out
mov
sbb
sarb
push
adc
sbb
xchg
jg
add
jle
add
xchg
mov
cmc
or
scas
mov
test
mov
imul
jecxz
pop
fcoms
adc
pop
rol
mov
add
cwtl
cmpsl
dec
lret
lock
mov
mov
cli
das
ja
sbbl
enter
test
stc
call
adc
rcll
xchg
in
sahf
inc
js
xchg
test
je
dec
add
imul
cs
lahf
sbb
lret
das
fisttpl
clc
call
jne
mov
and
pop
dec
ss
fisttps
popf
insl
fcoml
cltd
sbb
rorl
xor
xchg
push
inc
mov
cli
or
lahf
fisubs
out
in
out
xchg
jle
push
sub
repz
shrb
cs
lods
mov
dec
dec
cltd
push
sub
sub
push
jne
add
arpl
xor
or
dec
imul
cmp
jmp
cmp
adc
call
adc
sbb
sub
dec
mov
pop
mov
add
imul
mov
sbb
push
in
sbb
mov
mov
dec
js
mov
lea
aaa
mov
jp
sub
mov
aam
insb
mov
push
pop
pop
sarb
jecxz
jb
mov
sub
add
icebp
fcmovnu
in
jno
je
fiaddl
jne
inc
repnz
jo
xor
aaa
xlat
iret
xchg
and
cmpsl
mull
jne
push
cmp
or
jae
call
xchg
xor
fimuls
js
or
stos
imul
mov
dec
jecxz
jno
jbe
and
cmp
adc
push
out
dec
jecxz
bound
rcr
scas
popa
sbb
dec
js
adc
xchg
jae
int3
cmpsb
xchg
push
adc
mov
lret
nop
out
mov
inc
mov
adc
ds
mov
aas
mov
nop
push
dec
pop
and
xchg
das
jge
or
jecxz
test
rclb
and
js
insl
jg
sub
lea
ret
imul
push
mov
push
inc
jg
jge
lret
lahf
inc
mov
push
inc
mov
sbb
xor
mov
fistpl
test
xor
pop
sub
int
pop
call
pop
and
ficoms
scas
fistps
scas
int
sub
andl
test
xchg
mov
cltd
jb
adc
xchg
rcrl
dec
jno
jbe
dec
roll
pop
push
jle
int3
enter
jae
cmp
repnz
js
xor
push
jns
inc
adc
out
mov
mov
xchg
stos
pop
xchg
ds
pop
das
out
xlat
mov
jl
jmp
sbb
js
jo
pop
cmp
mov
out
fsubrs
push
pop
mov
mov
aad
inc
inc
or
mov
sub
out
mov
pop
add
popa
cmpb
mov
xchg
or
iret
dec
pop
or
in
addr16
cmp
lods
lea
push
mov
xchg
out
das
stc
and
sub
add
cs
out
std
cmp
sub
xor
clc
and
xor
aas
pop
pop
data16
dec
loop
ja
cmp
pop
xor
xchg
lods
push
lods
lods
lret
adc
inc
gs
mov
xchg
lods
aas
xor
inc
lret
hlt
sub
jmp
aaa
mov
mov
daa
insl
dec
push
push
xchg
jl
imul
sub
mov
or
xchg
sbb
xor
pop
adc
das
dec
inc
enter
jmp
psrlw
xchg
pusha
cmp
daa
shll
je
and
and
push
adc
scas
mov
ret
les
clc
daa
mov
cmpsb
cmc
ds
stos
xchg
xchg
dec
cli
cs
in
arpl
sub
jecxz
ja
sbb
cvtdq2ps
inc
inc
fstpt
testl
xchg
adc
rclb
jl
in
movsl
repnz
mov
xchg
cmp
jne
or
jecxz
cmc
or
out
daa
mov
xor
push
int3
cld
jmp
ret
repz
test
mov
cmp
inc
push
rorl
dec
int
cmp
inc
sbb
aad
xchg
mov
xchg
jmp
cmc
divl
push
call
in
jg
xlat
inc
icebp
inc
rorl
xchg
cmp
out
pusha
xchg
loope
mov
lods
mov
fsubrs
mov
mov
inc
sbb
lock
iret
pop
pop
jmp
mov
cwtl
imul
sub
subl
push
xor
pop
jb
inc
pop
pusha
clc
repnz
cwtl
xlat
ret
push
inc
push
mov
mov
leave
adcb
cmp
ljmp
push
cwtl
orb
push
cltd
or
outsl
sub
out
inc
add
imul
scas
adc
sbb
fsts
inc
rorb
mov
flds
test
lret
inc
push
xor
adc
test
xor
je
inc
pop
mov
aam
jmp
jns
sbb
scas
scas
repnz
leave
imul
aaa
mov
aad
lret
inc
mov
push
hlt
xchg
mov
add
xchg
lods
stc
cmp
mov
xor
lock
fwait
pop
inc
mov
mov
mov
insl
push
sahf
mov
mov
sbb
imul
inc
dec
ss
adc
dec
sbb
repnz
jno
icebp
sub
mov
xchg
mov
or
adc
push
jns
inc
nop
nop
imul
notb
dec
and
pop
jp
out
mov
cld
fcmovbe
add
and
sbb
cs
mov
negb
mov
pop
lret
aad
aas
inc
fldcw
sbb
mov
jle
mov
out
je
lret
inc
xor
lock
lods
ljmp
pop
lahf
push
sahf
or
frstor
cmpsb
bswap
dec
mov
jg
xor
loope
adc
add
inc
mov
fdivrl
mov
push
jo
mov
pop
sbb
aaa
dec
stos
xchg
xchg
test
mov
xchg
mov
fldcw
mov
xlat
mov
js
fldt
push
sub
call
inc
jmp
lods
add
mov
xchg
std
lods
iret
adc
leave
dec
outsl
xchg
fdivrp
shr
out
aas
cmpl
inc
imul
ljmp
mov
insl
lahf
mov
or
mov
jp
insb
hlt
jno
lahf
xchg
nop
jp
mov
in
mov
incb
add
repnz
popa
cli
daa
jae
push
pop
dec
pop
mov
mul
mov
jmp
inc
imul
rorl
lods
jno
sub
ret
or
sti
push
icebp
xchg
mov
dec
bound
mov
daa
rorb
mov
adc
js
outsl
popf
jg
aaa
daa
mov
mov
and
out
cli
pop
push
push
inc
mov
loopne
add
in
jg
add
data16
lret
test
call
dec
mov
sbb
ss
cli
cs
lret
cmpb
fstpt
movsl
pop
jg
mov
mov
jmp
mov
and
fdivrl
std
push
popa
cmpsb
fsubrl
push
jle
jmp
popf
or
jnp
jle
ja
lret
add
and
sahf
in
mov
cmc
flds
push
xchg
adc
push
push
inc
mov
stc
shrl
decb
jnp
pop
push
cmp
mov
aas
adc
push
adc
jbe
fucomp
scas
inc
aaa
ljmp
scas
popa
pop
fmul
mov
jnp
lgs
test
dec
in
rolb
mov
vunpckhps
or
mov
inc
stos
mov
pop
push
call
xchg
xchg
adcl
out
or
xchg
cmp
repnz
pushf
ret
push
into
jo
cmpsb
mov
test
or
xor
aam
leave
sbb
mov
int3
rcl
add
jbe
mov
mov
arpl
fld1
mov
jbe
cmc
ss
mov
adc
mov
jns
inc
repz
negl
add
ret
ret
mov
shlb
ja
inc
test
dec
gs
imul
pusha
aad
aad
mov
movsl
jns
push
cmp
movsb
inc
dec
or
push
stc
rorb
inc
daa
in
cmp
pop
in
mov
out
lods
lods
in
int
inc
inc
sbb
and
jb
mov
cmovnp
int3
push
mov
das
push
xor
xchg
movsl
jno
into
and
in
or
frstor
pop
mov
or
nop
sbb
repnz
aam
les
xchg
aam
mov
insl
xlat
mov
add
fldenv
pcmpeqw
cltd
mov
icebp
nop
sub
jns
pop
xchg
enter
mov
shlb
popf
sub
mov
or
push
mov
mov
adc
mov
mov
test
pop
je
add
outsl
mov
mov
ja
les
or
jl
testb
mov
and
pushf
mov
cmp
mov
lret
cli
pop
out
lea
cmp
stos
sbb
dec
pusha
mov
xchg
pop
mov
jbe
ljmp
repz
push
mov
stc
lret
stc
pop
nop
add
inc
mov
pop
add
dec
adc
inc
insb
jecxz
adc
outsb
mulb
pop
aas
sbb
mov
and
pop
push
in
inc
push
ds
pusha
jecxz
aam
mov
mov
xchg
adc
pushf
lods
add
and
aam
or
push
mov
and
call
js
xor
sbb
pusha
mov
inc
cmpsl
aad
sbb
add
in
xchg
cld
pop
cmp
dec
xlat
xor
and
fimull
xchg
test
sub
xchg
pop
dec
test
bound
out
jns
dec
cmpsl
push
mov
adc
stos
lds
cmc
insb
jle
in
jae
int3
ss
in
jne
mov
cmc
mov
sbb
adc
negl
dec
test
mov
push
in
insl
pop
dec
jmp
or
outsb
pushl
addr16
inc
or
pop
fidivrl
mov
cmp
aad
insb
test
adc
inc
outsl
mov
test
jbe
jmp
jne
cmp
jo
loopne
mov
mov
pop
dec
aaa
inc
fwait
aam
or
jl
mov
jp
jae
push
ja
mov
pop
clc
sub
sub
push
aam
ret
shll
orb
rcrb
outsb
out
cmp
sbb
jle
iret
into
jecxz
jns
inc
adc
jo
sub
inc
add
xchg
jbe
addr16
idivb
iret
loopne
into
int3
xchg
mov
inc
adc
insl
sarl
and
and
jmp
and
cwtl
sub
sti
fdivrp
xchg
in
push
cmc
insl
sbb
inc
call
jmp
cmpsl
or
fs
jp
pop
sub
lcall
push
pusha
std
hlt
lcall
xchg
insb
xor
aam
pop
mov
repz
xor
mov
fisubrl
inc
lods
adc
mov
lods
scas
out
lods
fbstp
dec
icebp
mov
loope
fistps
cmp
sbb
push
shll
das
sbb
adc
push
cwtl
mov
adc
pop
jle
or
sbb
popa
fisubs
fidivl
fwait
xor
mov
dec
push
pop
test
das
push
rolb
test
pop
outsb
stos
lea
mov
xlat
das
and
or
scas
mov
das
xchg
dec
mov
xor
cmpsl
sub
fwait
insl
or
cmpsl
mov
loopne
add
sub
push
pop
mov
push
pop
cltd
hlt
cmp
int3
jge
and
sub
mov
cli
push
mov
mov
out
xchg
loope
jne
xor
dec
mov
sub
loope
jle
and
mov
push
sbb
ss
movsb
roll
sbb
cmpsb
and
fcomi
fstpl
ja
add
jae
mov
aad
xor
mov
loopne
nop
fmuls
movsl
jae
fcompl
adc
out
add
xchg
mov
xor
xchg
mov
push
imul
nop
mov
sbb
inc
aad
adc
roll
insb
jnp
loop
push
inc
pop
sbb
into
mov
movsb
outsl
mov
orl
xor
stc
stc
cmp
outsb
mov
sub
push
or
sbb
xchg
in
jnp
cmpb
jne
icebp
ds
pusha
and
adc
mov
mov
pop
popa
inc
pop
mov
imull
mov
icebp
mov
or
scas
fistpl
push
xor
and
sbb
out
arpl
int
sbb
push
dec
orl
orb
and
std
mov
test
cmp
jnp
cmpb
add
insb
rcrb
and
push
out
or
add
imul
pop
lods
loopne
stos
and
testb
adc
out
ret
xchg
and
out
lret
adc
mov
sbb
inc
lock
ss
pop
aam
popa
ljmp
out
out
hlt
in
xchg
scas
xor
cmp
mov
push
pop
push
scas
add
test
int3
push
mov
inc
mov
fdivrp
leave
sbb
adc
xchg
subb
sub
cmp
fwait
bound
mov
aaa
jle
adc
pop
inc
leave
mov
sbb
adc
sub
jecxz
jo
sahf
cmp
hlt
lcall
inc
and
stc
pop
lahf
aaa
adc
xor
pop
or
pusha
faddl
repnz
lea
push
and
adc
cmpsb
and
je
adc
aas
push
out
cld
shl
icebp
movsl
push
sbb
test
adc
in
ret
sbb
inc
iret
inc
xlat
roll
in
lds
imul
xor
bound
mov
in
pop
lret
cmp
test
arpl
mov
xchg
pop
adc
fs
push
adc
mov
hlt
cmc
aas
popf
fs
lret
call
ficomps
lret
mov
jg
sub
mov
cs
out
pop
inc
ficomps
push
imul
lret
sub
std
rcr
fld
inc
call
out
mov
cwtl
lea
hlt
lahf
push
sbb
outsb
ret
push
push
sarl
inc
mov
mov
ficomps
mov
push
mov
jne
xor
std
mov
jne
je
mov
add
lret
mov
jp
jne
cmp
or
sub
mov
fsubs
int
xor
mov
push
into
lret
pop
xchg
mov
jbe
sbb
fistpl
les
jae
jne
push
xor
or
aaa
pop
scas
adc
cwtl
sti
std
add
jge
push
sbb
loop
push
mov
dec
fcmove
push
insb
pop
push
mov
inc
mov
cwtl
fisubs
out
arpl
xchg
adc
fstpl
icebp
jnp
aaa
pop
icebp
aad
in
inc
xchg
insb
outsl
test
pop
adc
sub
lret
mov
push
movsl
push
lea
cmp
cltd
sbb
xlat
hlt
das
pushf
test
or
rolb
dec
das
inc
lods
hlt
movl
adc
lods
add
js
cs
js
fwait
sbb
enter
leave
pushf
dec
adc
jno
fsub
stos
fimuls
and
repz
hlt
xchg
scas
movsb
sbb
je
pop
addr16
test
xor
or
fwait
cmp
mov
fdivrs
idivl
xlat
or
std
pop
not
loopne
andb
imul
xor
sbb
in
js
int
addb
into
push
cmpsb
push
ja
xchg
fsubr
ljmp
add
mov
rolb
lds
inc
adc
lcall
sbb
sub
aam
push
and
movsb
dec
and
xchg
or
jp
pop
jae
mov
sub
test
jns
push
lret
xor
ficompl
xchg
enter
lahf
add
call
jb
lcall
into
cltd
loopne
fs
fdivl
jb
xchg
loop
fnstenv
pop
xchg
sti
jno
mov
shrl
push
cmp
cmpsl
and
pop
mov
xor
cmp
into
mov
xchg
xor
ja
jecxz
movsb
push
mov
xchg
mov
pop
mov
add
pavgb
fmuls
aaa
cmp
cltd
cmp
stc
adc
imul
push
shrl
xor
inc
out
push
sub
jbe
popf
popf
mov
mov
bound
and
fmull
mov
mov
scas
fistpll
sti
sbb
test
jns
or
jge
cmpl
fistl
insb
cmp
icebp
fcoml
hlt
outsl
ss
jb
mov
inc
in
nop
or
lahf
lahf
cmp
roll
push
xchg
pop
sub
rcr
xor
lret
xchg
jg
pop
les
adc
cmp
aaa
scas
jl
pop
popf
ljmp
cmp
scas
test
dec
jecxz
sbb
lsl
or
into
xor
mov
push
shrl
push
pushf
or
in
fldl
outsb
es
aam
jo
dec
lcall
push
jecxz
scas
icebp
inc
nop
call
neg
movsl
xchg
aam
xchg
mov
cmp
data16
aas
mov
mov
subb
xlat
out
sbb
xchg
dec
cmc
sbb
adc
notb
cs
cmpb
cmp
cltd
repnz
push
cwtl
shrb
imul
push
pop
mov
push
mov
dec
sbb
push
xor
sub
stos
jg
fistl
xadd
push
in
mov
add
aam
inc
call
int
jmp
push
jno
sbb
notl
ljmp
adc
cmc
daa
fistpll
les
mov
cltd
mov
inc
movsl
mov
in
ds
dec
out
stos
in
xor
es
popa
shll
jmp
cmp
mov
int
lock
xor
adc
pusha
jbe
loop
rorb
pop
sbb
jge
push
jmp
xlat
add
cmp
je
pop
fs
je
test
aaa
sbb
pop
inc
fsubrl
mov
mov
mov
inc
dec
in
in
cld
dec
dec
popa
sti
add
adc
out
inc
push
push
aaa
sbb
addr16
enter
into
pop
adc
sbb
jmp
sbb
sbb
add
xchg
in
jb
sub
inc
leave
ds
and
mov
pop
testl
sbb
mov
cmpsl
out
dec
fsubl
fs
jb
dec
ret
inc
cmpsb
iret
dec
loope
fsub
aaa
push
xchg
push
lods
fistpl
jle
jge
push
out
stc
jae
sbb
int3
repnz
aaa
test
out
and
adc
sbb
ret
test
scas
cli
add
popa
push
sbb
push
add
sbb
cmp
cs
cmpsl
xchg
cld
repz
push
jns
sti
adcb
daa
shll
andnps
filds
pop
cmp
inc
imul
add
adc
pop
cmp
test
and
pop
jno
nop
iret
or
repnz
js
mov
mov
ljmp
jo
jne
and
in
mov
pop
pop
inc
inc
pop
arpl
mov
fnstcw
int3
movsl
cmc
add
ret
add
popa
add
mov
xchg
xchg
pop
xor
dec
adc
fcmovnu
sub
sbb
sub
pop
xchg
iret
cmp
xor
push
xor
ja
lret
sub
adc
std
jns
clc
inc
and
xchg
jg
inc
cmp
lcall
pop
imull
jge
fsubrl
mov
es
pop
repnz
insl
jmp
mov
sbb
adc
inc
test
xchg
lds
loope
inc
push
repz
std
sbbb
jbe
arpl
cltd
mull
call
lahf
mov
insb
les
cmc
adc
loope
jge
pop
imul
add
lds
insb
call
daa
push
push
inc
shl
ljmp
and
rclb
ficompl
aas
fwait
cmp
subl
jmp
pushf
and
int
lahf
fidivrs
fsubrl
mov
lods
decb
sbb
pop
cltd
out
fs
inc
ds
stc
jns
add
test
cmp
cmp
mov
dec
adc
or
mov
in
cltd
adcb
addr16
jp
mov
push
lahf
mov
clc
cs
push
dec
xlat
ret
inc
adc
fidivrs
into
rcrl
xor
xor
lods
adc
pop
mov
sub
clc
xchg
les
data16
lods
int3
dec
cmp
lret
enter
int
test
add
neg
insl
sbb
fcmovnu
jns
push
jl
ds
ret
xchg
adc
inc
mov
inc
dec
mov
in
stos
sbb
inc
icebp
inc
xor
int
mov
mov
mov
mov
xorb
bnd
out
cmp
lret
add
rorl
xchg
adcl
push
addr16
cltd
icebp
jle
push
jl
sti
imul
cwtl
lret
add
pop
xchg
enter
bound
inc
jno
movsb
cltd
or
mov
daa
mov
mov
ja
push
mov
mov
out
cwtl
jae
jae
sub
pusha
push
and
jno
icebp
push
cmpl
push
push
sub
add
inc
inc
inc
mov
cmpsl
cmp
push
mov
push
dec
aas
inc
adc
ret
mov
add
xchg
iret
ss
dec
inc
das
jecxz
pop
add
in
xor
outsl
lock
pop
mov
rcll
mov
in
dec
in
mov
xchg
lahf
xchg
test
out
jp
rol
jbe
or
aam
xchg
sub
mov
popa
sub
ds
cmp
nop
cmp
xor
xor
and
mov
movsb
dec
out
push
sbbl
cmp
fstp
rcrb
push
sub
xchg
mov
mov
push
cmp
inc
fs
adc
addr16
call
xchg
or
mov
sbb
cmp
xor
sbb
arpl
loope
push
in
test
bound
pop
pop
call
aas
fwait
ja
sbbl
loopne
rcl
lods
and
cld
pop
mov
repz
jge
nop
hlt
pusha
dec
inc
push
xchg
cmpb
adc
mov
clc
or
jns
xchg
pop
push
push
ljmp
popf
xchg
lret
mov
push
mov
insl
loop
addr16
and
adc
imul
aas
mov
push
outsl
jne
int
mov
arpl
pop
xlat
iret
push
sub
stos
outsb
pop
inc
pop
xor
inc
popf
jbe
push
mov
pusha
push
aam
and
outsl
add
stos
add
sub
mov
mov
std
mov
adc
nop
xchg
insb
mov
sti
push
mov
aam
mov
int3
or
negb
sub
add
cli
int
mov
jae
mov
das
mov
bound
xorb
inc
popa
sub
lret
lea
mov
cmc
cwtl
test
clc
or
shlb
ret
fisttpl
fildll
std
cli
addr16
adc
inc
inc
dec
sbb
sahf
cmp
popa
or
inc
cli
sarb
fcom
gs
jmp
arpl
fstl
loopne
bound
iret
mov
sub
add
out
leave
mov
repnz
xor
data16
lods
pop
sti
push
mov
fsts
lret
jbe
insb
or
das
fcoml
cmc
adc
popf
mov
fucom
inc
clc
aaa
bound
push
stc
fisttpl
cmpl
add
adc
sbbl
ljmp
out
xchg
les
ret
data16
jae
cmp
fidivrl
nop
jge
lods
outsb
pop
das
push
frstor
pop
ja
jmp
aas
fidivrs
add
push
jg
popf
push
lret
js,pt
xor
jmp
adc
pusha
lds
imul
rorl
jge
int
cmpsb
pop
rcr
je
test
or
mov
aas
push
sub
mov
add
xchg
mov
idivb
xorb
xchg
xchg
mov
push
sbb
lods
cld
inc
xlat
sbb
mov
ret
adc
icebp
and
mov
add
shr
mov
push
ja
adc
lret
sub
or
or
or
jbe
das
inc
mov
push
lea
and
or
mov
push
icebp
cmp
xchg
mov
pusha
mov
pop
adc
mov
jns
mov
adc
imul
sbb
cltd
or
xchg
repz
adc
mov
mov
sbb
enter
shll
ret
xchg
pop
inc
sbb
aam
jne
mov
stos
iret
xchg
rorb
test
lahf
cmp
xlat
fiadds
lods
or
push
ljmp
jle
cmp
cmpsb
cmpb
call
pusha
dec
mov
pop
test
out
das
adc
xchg
cltd
outsb
insb
ss
mov
mov
insl
ficomps
jmp
out
cmp
dec
inc
pop
test
scas
xchg
mov
jno
and
xchg
and
and
jne
les
adc
in
xor
adc
sub
add
cmp
dec
mov
jp
push
movsl
jo
addr16
std
test
in
adc
shll
xchg
mov
stc
mov
and
mov
xlat
xor
test
shrl
push
loopne
xlat
inc
sarb
mov
inc
pop
iret
out
pop
lcall
sub
dec
inc
test
cmpsl
arpl
xor
and
insb
lahf
scas
in
scas
out
or
pop
xlat
cmp
sbb
data16
lock
shl
test
fnsave
iret
mov
rcl
out
repz
inc
inc
lea
sub
movsl
loop
scas
rcrb
lret
jp
mov
dec
into
ljmp
pop
repnz
push
shll
adc
and
shrl
xor
push
cmpsl
in
movsl
jecxz
sbbb
sbb
insl
or
fadd
sbb
idivb
or
pop
addr16
add
inc
cli
jo
sub
pop
and
xchg
push
sbb
fwait
ds
sub
sub
and
push
mov
jecxz
xchg
js
dec
sub
in
daa
lahf
or
pusha
jnp
jl
or
in
mov
xor
idivb
insb
ja
stos
outsb
mull
sbb
imul
or
aaa
sbb
pop
fmull
or
imul
outsb
jne
mov
mov
sub
xor
push
cmpsb
outsb
in
idivb
lock
dec
jle
stc
loope
or
mov
out
adc
mov
inc
push
aaa
cs
jle
dec
stos
aad
sbbb
loop
sbb
xorb
call
cwtl
lock
push
push
push
push
jbe
add
mulb
leave
mov
int
jl
outsl
into
icebp
mov
cmc
out
add
adc
and
pop
jge
push
push
mov
sub
add
inc
xlat
insb
sbb
add
sub
push
cmc
pop
sub
xchg
pop
or
xor
pushf
or
mov
xor
adc
cs
fwait
mov
mov
add
xchg
push
gs
sbb
std
and
push
lcall
in
scas
push
repz
in
out
pushw
aad
inc
mov
adc
jbe
fmull
scas
mov
cmp
add
sahf
lods
pushf
fidivl
cwtl
rorl
imul
sub
bound
pop
pop
ss
int
inc
int3
push
js
push
das
and
dec
fs
mov
xchg
loopne
in
jno
xchg
push
sbb
mov
cwtl
scas
push
sub
repz
lret
jnp
das
testb
iret
adc
out
insl
xchg
xchg
push
sub
sbb
pusha
aam
mov
jae
cmp
push
sti
xor
fidivs
lea
movb
adc
xlat
arpl
dec
shlb
stos
mov
sti
jae
pop
movsb
or
mov
repnz
xchg
addb
daa
jns
xlat
rcrl
xchg
ja
sbb
test
dec
mov
iret
dec
mov
stc
repnz
push
movsb
sub
mov
xchg
sub
rorb
test
cmp
mov
pop
mov
mulb
fsubr
daa
loop
iret
lea
outsb
lods
mov
push
cli
and
or
pop
popf
mov
fisubl
dec
mov
cltd
push
jns
pop
test
or
inc
aas
jl
ds
loop
scas
mov
icebp
fisttpl
mov
dec
movsb
jecxz
mov
mov
int
sub
outsb
sub
int
mov
sarb
mov
shrb
je
stos
insb
clc
into
mov
inc
stc
fwait
movsl
test
fldcw
pop
inc
push
jle
stc
in
icebp
outsl
sbb
or
mov
mov
fcmovbe
in
out
andb
je
ja
push
xlat
scas
mov
out
imul
fstpl
mov
mov
sbb
jno
push
lret
push
and
mov
cmp
push
xchg
sti
pop
sub
fildl
dec
arpl
inc
repz
clc
sub
cmc
push
mov
adc
test
clc
stos
adc
jne
paddsb
pop
mov
mov
xchg
xor
and
xchg
imul
into
mov
pop
push
je
sub
inc
adc
push
ret
cmp
inc
dec
xor
mov
push
ja
mov
jg
pop
cmp
ret
mov
aas
mov
mov
cmp
mov
add
or
add
imul
mov
and
shl
int3
adc
pop
adc
scas
mov
push
repz
mov
or
adc
arpl
dec
pop
sub
es
cmp
sbb
loopne
inc
test
out
push
xlat
or
pop
mov
lahf
stos
add
sub
pop
sbb
int
in
out
jnp
xor
add
test
scas
sub
cmpsl
aad
sbb
mov
fs
xor
xchg
xor
movl
loope
jns
loopne
shl
lcall
pop
mov
popf
sbbl
insl
inc
daa
sub
mov
mov
arpl
jns
inc
sbb
lret
push
js
pcmpgtd
xor
dec
or
add
nop
pop
test
int3
nop
dec
push
lock
repnz
mov
fisttps
or
mov
dec
sti
and
adc
popf
xor
push
jbe
mov
xchg
xchg
mov
movsb
inc
popa
jo
inc
xchg
push
scas
sub
sahf
mov
jg
idiv
dec
mov
stos
sbb
mov
dec
loop
pop
push
jmp
in
dec
call
xchg
mov
xchg
mov
jge
fs
add
adc
jecxz
dec
and
daa
adc
out
xchg
imul
cmp
jmp
mov
rcl
dec
mov
jmp
sar
dec
push
inc
jnp
mov
nop
push
mov
push
addr16
jmp
daa
cmc
add
subb
cld
repz
inc
or
mov
sbb
mov
test
sbb
and
push
sbb
fsubrs
jge
das
popa
rolb
pop
fidivrl
and
icebp
jns
lahf
stos
js
xor
sbb
addl
inc
push
add
cmp
out
loopne
outsl
push
inc
and
xchg
jecxz
shll
sti
std
mov
add
mov
cltd
and
fsubrl
mov
mov
add
and
pop
es
jp
push
push
dec
inc
rorb
pushf
pop
inc
fcmovbe
xchg
mov
inc
cwtl
sub
pop
push
stc
push
adc
fs
adc
cmpsl
jecxz
aam
scas
push
out
cmp
cmc
xor
pop
mov
sub
imul
jp
mov
notb
mov
jge
insl
out
fs
mov
add
push
pop
rcrb
mov
and
add
addr16
inc
shrb
push
aas
cmp
inc
mov
xchg
bound
mov
xchg
jl
outsl
or
testl
mov
ficoms
into
adc
xchg
shll
imul
inc
pop
pop
or
aad
jmp
adc
adc
jns
aaa
icebp
mov
rclb
mov
test
push
push
add
dec
lock
in
push
shll
pop
sti
sub
push
sti
xor
mov
sbb
les
sub
movsl
in
and
sub
xor
mov
mov
mov
add
xchg
cmpsl
add
push
repz
add
js
stos
popa
rolb
sub
xchg
mov
out
push
int3
xor
pushf
idiv
imul
adc
aam
stos
hlt
mov
rorb
jo
inc
mov
cs
aad
imulb
ret
mov
adc
mov
xchg
or
mov
je
xorb
pop
mov
aas
das
jo
xor
dec
out
push
les
aaa
ficoms
jmp
sub
sub
arpl
fistps
jmp
push
les
nop
add
sbb
out
in
shlb
push
and
push
movsl
test
add
addr16
daa
or
insb
ja
jmp
mov
ljmp
sbb
daa
aam
lock
in
popa
shlb
pop
movsl
sbb
push
inc
lock
dec
sub
adc
lret
add
cwtl
clc
mov
mov
aam
cmp
shll
ja
enter
or
adc
mov
neg
cmpsl
or
sahf
test
xchg
mov
mov
dec
aaa
test
fld
pop
jl
jge
ret
xchg
xor
fistpl
jg
jg
into
mov
test
pop
jl
aad
xchg
lds
jmp
test
dec
das
movsb
sbb
test
mov
hlt
cmp
lcall
xchg
mov
daa
push
arpl
sbbl
inc
imul
nop
popf
mov
dec
or
cmp
and
mov
sahf
movsl
adc
dec
adc
sbbb
sbb
push
inc
scas
xchg
pop
jne
xlat
sbb
rorl
int3
iret
xor
insl
and
lret
rcl
std
xchg
test
xchg
bnd
stos
pop
aaa
inc
fldl
xlat
inc
push
loopne
or
sbb
ja
ds
cmp
pop
adc
mov
adc
pop
shrb
xchg
sub
mov
lret
adc
notb
add
pop
xor
lahf
pusha
and
out
sbb
add
lahf
jle
popa
pop
imul
push
stc
dec
xchg
bound
add
xchg
push
dec
jle
pop
mov
mov
pushf
pop
rorl
ret
andl
cmp
inc
mov
repz
adc
sarl
xchg
ljmp
bound
cmpsb
pusha
adc
icebp
mov
xchg
cltd
add
ja
rcrb
mov
push
hlt
pop
fistpl
cmp
pop
ljmp
call
cmpl
push
clc
mov
pop
push
sub
sbb
add
sub
mov
lret
add
xor
adc
xor
and
mov
lcall
jge
inc
sbbl
adc
cmp
pop
int3
cwtl
inc
pusha
pop
enter
dec
nop
aas
jge
repz
mov
or
mov
sub
sahf
rcrb
fldcw
frstor
int
pushl
pusha
ja
imul
addr16
xor
hlt
mov
mov
mov
fisubl
lahf
push
or
xlat
je
dec
xchg
jg
vpaddusb
rorb
fldl
pop
pop
xor
inc
int3
js
aaa
or
jmp
hlt
xlat
fstpl
lods
lea
push
add
adc
adc
pop
pop
aaa
and
lcall
dec
out
jne
popf
out
or
testl
cmp
out
adc
out
cmp
ret
xchg
fstpl
cs
sub
imul
pop
and
stos
mov
mov
lahf
jnp
push
insl
jle
jnp
in
popa
xchg
pop
inc
test
lret
add
lods
not
mov
insb
outsl
and
sub
push
add
xor
dec
repz
xor
fcmove
std
xchg
das
nop
jl
cmpsb
cld
bound
rclb
sarl
fucom
pop
sub
pop
mov
or
lds
mov
mov
add
push
xchg
or
push
cli
idivl
inc
push
pop
mov
push
sbb
push
inc
enter
mov
push
mov
loope
lods
jecxz
cmpsb
lret
add
test
mov
add
or
cli
sub
imul
imulb
dec
mull
cmp
mov
imul
jbe,pn
sub
in
adc
push
xor
int
adc
cld
std
arpl
sub
in
lea
loop
daa
pop
jbe
xchg
mov
or
jbe
fdivp
shr
mov
push
popa
xchg
inc
pusha
ljmp
cmpsb
adc
xchg
or
lods
sub
or
fsubrl
mov
mov
mov
cltd
lea
ficomps
sbb
pusha
inc
push
adcb
sbbb
and
bound
rcll
in
std
pushf
dec
andb
push
add
xchg
xor
orl
loope
insl
inc
jns
aaa
cmpsb
xor
scas
push
in
imul
lret
inc
mov
icebp
xor
jnp
gs
insl
mov
jle
add
scas
pushf
pushf
push
jb
mov
xor
mov
call
test
shll
test
insb
popf
and
pop
data16
or
push
fnsave
js
adc
daa
movsb
push
add
jne
stos
popa
cs
testb
imul
mov
into
or
add
xchg
jns
mov
std
dec
fcomi
xor
pop
insb
movsb
in
mov
ja
ss
movsb
nop
sub
stos
aam
fcoml
push
xchg
rol
daa
add
das
mov
mov
xchg
lods
sbb
rorb
stos
cli
pushf
movsl
push
in
xchg
mov
xlat
mov
test
inc
fucomi
mov
sahf
repnz
sbb
mov
fstpl
xchg
shl
lret
add
mov
lahf
dec
mov
pop
sbb
inc
imul
negl
lret
mov
and
nop
mov
divl
mov
mov
into
mov
enter
into
mov
cmp
lds
pop
stc
adc
arpl
imul
xlat
or
inc
sahf
or
sub
loope
jae
sbb
in
jmp
pop
stc
add
js
adc
stos
mov
mov
push
mov
add
mov
pop
out
xchg
loopne
inc
std
sbb
cmp
hlt
inc
lock
out
push
jmp
pop
mov
out
cli
sub
xchg
scas
addr16
jbe
mov
lea
into
test
lods
arpl
add
or
rcll
in
push
fbld
cmp
adcl
push
push
es
pop
lcall
push
imul
mov
insl
aaa
lcall
lock
fnsave
lods
sarb
inc
cmp
mov
pop
mov
ja
int
pusha
loope
jmp
pop
in
shr
xor
pop
xor
popf
inc
shlb
cli
adc
sbb
xor
ja
mov
mov
lret
and
xchg
xchg
sarl
sub
inc
test
add
clc
xor
punpckldq
mov
das
adc
push
sub
cmp
fwait
mov
call
adc
push
xchg
inc
mov
cli
sbb
and
xor
mov
lods
int3
mov
aaa
push
mov
jo
add
addl
adcb
jp
dec
and
lcall
mov
ja
cmp
insl
out
lods
mov
popa
fld
das
or
mull
jg,pn
push
push
je
xor
or
xchg
jecxz
pusha
das
mov
sarb
adc
out
sub
xchg
cld
icebp
jl
shlb
jg
stc
inc
stos
cmpsl
xor
xchg
xchg
pop
shlb
sub
mov
rorl
pop
ret
or
xor
stos
xor
jecxz
xor
jmp
scas
or
cli
mov
inc
cmp
inc
cmpl
lcall
mov
mov
pop
enter
dec
lret
push
loopne
inc
inc
cwtl
sub
aaa
or
jg
ret
lods
adc
mov
push
jmp
add
int3
fldt
imul
bound
jp
repz
lea
xor
test
ret
call
in
inc
out
leave
add
xchg
lods
sarb
inc
or
testb
dec
and
aaa
stc
imul
jg
cmp
or
faddl
dec
bound
jl
test
dec
pop
mov
sahf
mov
ret
decl
jmp
js
and
outsb
imul
cltd
ret
adc
adc
imul
mov
dec
aam
pop
and
push
mulb
leave
int
and
mov
enter
push
popa
mov
lcall
daa
fidivrl
cmc
lcall
or
inc
cld
test
jg
outsl
add
outsl
adc
pop
add
jmp
loope
xor
push
fwait
sbb
sub
and
aad
mov
in
inc
out
mov
xor
cltd
stc
test
add
popw
iret
mov
add
sbb
push
xor
adc
in
adc
imul
dec
push
mov
adc
or
mov
lcall
mov
mov
pop
push
pop
pop
jns
push
int3
mov
inc
xor
movsl
push
pusha
shlb
insb
xchg
push
jmp
repnz
ret
stc
movsl
cmp
jnp
mov
out
mov
sub
fimull
pop
xchg
fimuls
inc
shlb
scas
daa
cmp
inc
cld
in
das
and
lret
jp
mov
in
stos
loop
fldl2t
cmp
xor
sbb
ja,pt
mov
push
jbe
loope
xchg
inc
xchg
fbstp
push
xchg
inc
pop
jnp
es
shrl
orb
data16
mov
pop
cmp
in
mov
popf
js
movl
mov
testl
fsubrl
mov
inc
das
push
fistpll
fidivl
adc
test
mov
lds
test
mov
sarb
adcb
in
mov
faddl
adc
leave
sub
jne
dec
mov
push
and
jmp
shll
ljmp
jae
push
rcl
ds
test
sub
icebp
adc
je
cmp
cmpsl
or
or
popf
jae
sbb
outsb
fcomps
cli
out
orl
lcall
xchg
mov
dec
rorl
insl
mov
fadds
shr
jbe
sbb
xchg
pop
mov
jp
xlat
lret
lods
sbb
xchg
add
sbb
jecxz
lds
outsb
pop
icebp
loopne
or
iret
xorb
fimuls
cmpsb
popa
stos
pop
mov
cmc
imul
pop
push
call
dec
js
xlat
repnz
out
cmp
shll
push
test
rorb
lods
pop
popf
mov
jge
or
mov
jo
gs
cmc
adc
xchg
aas
jecxz
test
cmp
or
pushf
cmpsb
inc
aas
cli
dec
test
or
mov
sub
pushf
dec
pop
rorl
xchg
es
loope
jb
out
inc
mov
je
xchg
xchg
hlt
mov
inc
lcall
mov
or
xor
dec
sbb
xchg
in
jbe
insl
in
push
fisubrl
or
mov
stos
jge
scas
inc
push
das
push
mov
and
dec
cmpsb
jge
jo
scas
fsts
aas
sub
pusha
rol
mov
mov
test
jmp
pop
nop
arpl
adc
mov
jb
lods
sbb
xlat
js
pop
or
ret
add
sbb
push
lcall
pop
dec
cwtl
xlat
mov
and
sub
xchg
pop
ret
lock
or
push
jecxz
cmp
and
jne
adc
int
popf
lret
mov
mov
jnp
jmp
pop
pop
js
popa
cwtl
inc
arpl
lock
xchg
or
xchg
out
jp
inc
jp
into
mov
icebp
int3
popf
sbbb
xor
out
mov
sbb
popf
rorl
jmp
rcl
pcmpgtd
inc
lods
pop
fwait
sub
fdivp
xchg
pusha
cmp
lods
iret
add
mov
push
enter
aas
pop
ficoms
mov
adc
mov
pop
test
rcl
jle
testb
repnz
inc
loope
add
loopne
push
mov
push
repz
rclb
stc
aam
mov
cs
fwait
jge
cmpl
inc
push
dec
fidivrs
xchg
jo
jecxz
and
dec
sub
out
or
inc
hlt
jg
ja
jo
xor
push
shrb
push
dec
shl
int3
lock
sahf
xchg
mov
stos
mov
adc
sahf
pop
cmp
xchg
idivb
stc
and
add
sbb
jmp
sbb
and
pop
jns
aas
add
aaa
movsl
movsb
push
sbb
pop
sbb
lcall
cmp
or
outsl
and
and
int3
enter
popa
jmp
and
xchg
loope
cmp
das
xchg
jmp
neg
fdivrp
mov
cmp
cld
lret
in
sbb
xchg
inc
push
adcb
idivl
adc
jmp
xlat
jae
pop
das
inc
push
ja
mov
or
data16
outsl
mov
rolb
cmp
insb
inc
mov
outsb
shrb
mov
xchg
jp
sbb
stos
subl
mov
enter
cld
xor
or
in
adc
mov
dec
xor
fs
test
sbb
std
mov
pusha
test
mov
repz
adc
add
aam
add
push
scas
or
loop
aam
xlat
loop
inc
lods
dec
loopne
mov
push
xor
push
sub
mov
jne
inc
mov
dec
sbb
cmc
mov
mov
test
pop
ss
pop
push
dec
rep
daa
inc
cmp
or
pop
cmpsb
sbb
xor
inc
dec
mov
cmc
rcl
mov
js
insl
clc
imul
pop
lea
nop
mov
cmp
or
paddb
dec
fwait
inc
push
mov
dec
leave
jg
push
xchg
add
jge
pop
push
dec
mov
inc
enter
sub
subb
jp
sbb
xchg
pop
das
stc
fdiv
jge
pop
aam
mov
fists
inc
cmp
ret
ss
jge
popf
stos
ja
pop
scas
inc
icebp
xchg
push
lcall
js
imul
jno
mov
jge
add
aas
jecxz
mov
pop
cmpb
testb
sarl
cmp
sar
adc
ss
dec
into
dec
leave
cmpsb
fs
dec
sbb
adc
das
pop
mov
or
scas
xchg
bnd
nop
sbb
jmp
out
add
jg
les
scas
xchg
mov
jo
add
aam
and
shrd
and
pop
pop
rcll
cmp
outsl
sahf
push
mov
or
xor
inc
and
jg
cli
jmp
cmp
jecxz
jmp
aaa
pop
in
loope
cmp
jmp
push
insb
outsb
dec
in
stos
int
add
std
or
or
subl
mov
jp
xchg
out
pop
jno
adc
inc
pusha
pop
pop
mov
mov
push
ljmp
dec
jo
mov
mov
mov
mov
jns
push
pop
adc
or
pop
imul
mov
jno
pusha
jg
lahf
or
sahf
dec
dec
mov
inc
sti
pop
xchg
lds
into
mov
stos
loope
mov
push
movsb
int
pop
test
sbb
pop
or
lds
fwait
xchg
ljmp
push
pushf
pop
scas
aad
repz
dec
xchg
dec
jo
sbb
rorl
movsl
mov
enter
iret
dec
incb
dec
push
fwait
cli
sbb
out
adc
or
jg
push
jbe
add
adc
es
aam
dec
jo
lods
ror
jge
push
sahf
aad
sub
cmc
mov
add
xor
hlt
icebp
imul
sbb
fsubrl
adc
pop
pop
sbb
add
push
fwait
popf
adcl
cmpsb
in
mov
ljmp
push
xor
dec
ja
sahf
xchg
scas
lods
and
jno
stos
mov
sarl
mov
sub
sub
andb
int3
and
ljmp
testb
jns
pusha
mov
scas
out
in
pop
into
fstpt
and
addl
lcall
inc
xchg
out
fcomps
int3
dec
scas
pushf
mov
pushf
mov
aaa
or
push
pop
jbe
ja
xor
nop
push
stc
dec
or
test
or
jle
xchg
pop
aaa
cmpb
push
sub
xchg
pop
push
int
cmp
cmp
dec
lahf
daa
in
movsb
xchg
shl
lods
adc
add
mov
data16
xchg
or
lret
imul
xor
push
andb
ds
ss
negb
call
cli
les
cmpsb
pop
in
dec
lock
popf
outsb
cmp
fbld
add
movsl
mov
add
mov
pusha
cmp
inc
jnp
xor
pop
rclb
pop
iret
inc
call
and
push
fstp
adc
mov
jp
push
sbb
cmp
insb
movq
xor
imul
or
lods
xchg
xor
jne
jne
imul
aad
xor
cmpsl
mov
sahf
sub
hlt
mov
push
inc
sbb
add
cld
fs
push
jnp
cmp
dec
repz
cmp
loopne
xchg
cmp
inc
jmp
xchg
adc
movsb
and
outsl
sub
fs
loopne
stc
ja
stos
test
sbb
adcb
push
shlb
fcoms
xchg
imul
mov
fdecstp
inc
xchg
arpl
int3
iret
dec
and
inc
fs
adc
rcl
cld
push
pop
fiaddl
rcl
loopne
divl
xlat
mov
scas
mov
subl
jle
mov
sub
add
mov
mov
imul
scas
fnstsw
xchg
test
or
rcrb
movsb
dec
sbb
xchg
lcall
add
mov
and
cmp
test
xchg
jge
daa
dec
fsubrl
scas
or
dec
lds
mov
icebp
inc
or
stos
pop
les
adc
push
pop
pop
sub
push
in
fisttpl
jns
test
mov
push
imul
xchg
test
jb
fisubrs
mov
iret
adc
int3
or
jae
or
jl
rorl
dec
sbb
movsb
aad
ss
and
pop
movsl
dec
add
enter
cmp
in
xchg
sti
sarl
pop
inc
in
js
xchg
aas
mov
pusha
rcrl
xchg
xor
imul
jo
insb
add
jne
xor
jne
push
jge
call
dec
push
sub
xor
je
subl
add
into
fsubl
lcall
jns
js
sbb
sarl
out
push
sub
popf
cmp
insw
pop
push
xor
and
sub
adc
ja
cmp
es
fimull
mov
jne
inc
jmp
adc
cli
mov
inc
scas
icebp
mov
push
lock
push
enter
sbb
int3
xchg
inc
outsl
ret
or
sarl
push
xor
and
fsubrs
loop
push
popa
jo
mov
adc
scas
cwtl
test
dec
dec
cmp
mov
cmp
cltd
cltd
lcall
mov
addb
and
add
dec
pop
cmp
daa
pop
and
jg
xchg
jecxz
pusha
cmp
and
adc
sbb
push
xbegin
or
dec
jl
clc
loopne
mov
sbb
mov
xchg
dec
or
lahf
ss
inc
push
add
call
outsb
cli
xchg
adc
movsb
cmpb
mov
fdivs
push
inc
pop
sub
dec
inc
inc
sub
pop
mov
insl
int3
xor
cmc
jbe
mov
in
jp
xor
iret
icebp
aas
mov
dec
rclb
push
jo
mov
sbb
lcall
cld
mov
xlat
dec
xchg
fsqrt
inc
mov
inc
stos
xchg
inc
unpckhps
push
into
push
xrelease
push
pop
push
mov
sbb
xor
and
or
stc
es
add
cld
lret
pop
stos
lcall
and
mov
add
daa
lock
fidivrl
aam
mov
test
jo
inc
fildll
cmp
mov
add
xor
in
add
push
mov
lret
push
xor
lods
sbb
sti
test
mov
ret
sbb
nopl
and
jns
repnz
dec
xor
test
sbb
repnz
push
in
movsb
jno
pop
imul
inc
mov
aam
decb
inc
cli
pop
add
in
adc
fstl
div
add
fwait
jg
dec
rolb
dec
xor
mov
aad
ret
xchg
imul
sahf
insl
sti
loope
jge
sub
push
xchg
fisubl
mov
scas
sub
imul
daa
movsl
gs
cmp
add
inc
pop
inc
xor
xor
mov
outsl
mov
or
sbb
mov
inc
push
jecxz
lods
fwait
movsl
les
ss
xchg
sub
pop
mov
ret
sahf
mul
cmp
jle
ja
shrl
xchg
add
cmp
iret
jno
out
mov
mov
dec
in
add
ret
out
rcrb
popf
pop
dec
pop
pop
push
jnp
jb
pop
pop
mov
in
fwait
pop
sub
repz
sbb
xchg
mov
add
add
or
movsl
xchg
adcl
repnz
jecxz
ss
fldl
xchg
mov
sbb
cmp
adc
mov
push
in
fcmovu
daa
icebp
inc
lret
xor
mov
pop
sahf
or
mov
xchg
adc
movsl
repnz
pop
adc
dec
and
dec
outsl
shll
mov
das
imul
popf
add
jb
add
add
sub
lcall
stos
dec
lea
shl
mov
iret
jp
dec
sbb
pop
lock
pop
sub
adc
push
cltd
mov
xchg
fisubrs
adcl
out
pusha
xchg
ss
jle
or
hlt
push
xor
jb
test
push
add
scas
clc
push
sub
les
les
jo
mov
fwait
sbb
rcr
pop
push
mov
and
outsl
mov
std
popf
int3
mov
std
fnstsw
decl
aaa
jb
lods
movsl
dec
leave
pop
cmpl
and
out
lock
dec
mov
fcmove
int3
mov
sbb
push
or
cmpsl
mov
mov
dec
push
idiv
clc
push
mov
popf
pop
push
cmp
mov
and
jns
gs
fisubrs
jnp
pop
loope
push
push
arpl
sti
aas
dec
mov
cmp
iret
jb
adc
sbb
das
adc
mov
aas
idiv
ja
mov
leave
jp
xchg
out
jl
gs
and
add
inc
and
jbe
test
test
sbb
jae
daa
jo
lods
loop
lock
stos
shr
cmpsl
mov
dec
add
cmp
sti
int
cwtl
mov
mov
cmp
and
push
stos
lahf
sbb
or
jo
cli
mov
push
fistpl
xor
mov
data16
je
mov
push
nop
int3
adc
ja
mov
repz
sub
xorl
mov
xchg
fmul
daa
out
imul
jmp
and
jb
xchg
out
pop
push
cwtl
lcall
mov
clc
xchg
insl
ret
mov
out
outsb
jbe
jbe
cmpsl
mov
adc
dec
js
shll
lcall
sbb
das
aad
in
gs
mov
rclb
mov
pop
das
sbb
cmp
iret
push
or
enter
cwtl
fwait
imul
out
in
movsl
stc
cmp
add
into
sti
pop
inc
movsb
sub
outsl
xchg
pop
movsl
fwait
mov
jg
fists
out
mov
lds
pop
push
arpl
lods
aad
sub
or
inc
pop
popf
pushf
pop
mov
pop
nop
fisttpl
jge
jo
cmpsl
add
adc
push
ret
movsl
icebp
fsubrs
arpl
hlt
pop
jo
xchg
cmpsl
sub
fiadds
or
push
mov
push
imul
adc
sarl
xchg
inc
cld
adc
adc
pop
adc
fld
dec
aas
cld
mov
rorl
pop
mov
fdivl
jno
mov
or
call
mov
sub
cmp
lods
gs
jle
in
fisttps
dec
pop
push
jb
mov
mov
sti
xchg
cs
mov
dec
fsubs
in
ret
inc
hlt
mov
sub
fsubrl
jle
xor
enter
popa
jge
insl
sbb
ss
stos
and
dec
fwait
pop
xchg
mov
mov
sub
ss
les
mov
inc
mov
mov
lock
insb
das
dec
test
pop
jmp
add
sub
fmull
mov
mov
jl
mov
int
inc
adc
rorl
loop
mov
mov
aad
sahf
cmp
pop
out
or
dec
xorl
dec
mov
mov
loop
test
xor
mov
shrl
sbb
and
mov
cmp
nop
cwtl
dec
out
cwtl
lods
sub
mov
xor
push
dec
push
pop
or
adc
dec
cmp
inc
fadds
popa
pop
in
mov
inc
lcall
xor
adc
push
fiadds
xor
jp
xchg
lcall
cmpb
mov
lea
pop
repnz
mov
add
rclb
fldcw
cmp
cmp
push
inc
mov
add
add
shll
mov
cmp
cmpsl
je
shrb
sbb
cltd
int3
adc
cli
lods
loopne
dec
fists
mov
repnz
out
inc
shrb
mov
cwtl
aas
frstor
clc
push
insl
in
pop
enter
fnstsw
or
aad
js
add
orb
out
leave
push
std
ljmp
fstpl
sbb
and
icebp
jecxz
lahf
jns
les
mov
add
call
dec
and
lahf
shll
cmp
or
cmc
jl
mov
shlb
pop
jb
lods
popf
mov
dec
pop
aam
jl
int3
decl
leave
int3
nop
mov
pop
rcll
jmp
lods
inc
cmp
outsb
into
pop
pop
and
jae
shr
or
cmpsb
push
repz
cli
ljmp
cmp
xchg
and
xor
mov
fstps
popf
xchg
add
and
pop
enter
sbb
aad
push
xchg
push
add
mov
mov
mov
inc
testl
xor
cmp
add
aam
testb
lret
sahf
sahf
add
lods
fbstp
jne
xor
add
adc
in
and
or
xchg
mov
test
and
fisubrs
sub
repnz
mov
ret
fdivr
push
arpl
fs
dec
dec
mov
mov
into
stc
sub
in
xchg
xor
testb
negb
mov
and
mov
mov
or
inc
mov
sub
jbe
dec
aam
mov
inc
arpl
adc
loope
cwtl
jbe
push
pusha
xchg
fstl
add
nop
jae
mov
push
arpl
in
stos
js
aaa
mov
imulb
sub
pop
cmp
inc
add
fsubr
js
mov
jns
mov
iret
jmp
cmp
mov
daa
sbb
call
icebp
fdivrs
loop
pop
test
in
mov
movsl
inc
cmp
sub
adc
push
pop
lahf
das
mov
test
sub
jb
addl
pop
testb
jge
xlat
outsl
mov
psubw
int
mov
push
mov
push
cmp
cltd
dec
mov
inc
fcmovne
fwait
inc
mov
mov
shl
mov
into
inc
int
push
int3
pushf
cmp
in
push
lods
loop
aaa
mov
int
dec
mov
cld
outsb
fwait
scas
and
sbb
outsl
xor
add
cmp
pop
mov
movsl
jge
cmpsb
xchg
and
nop
push
aam
pop
inc
dec
sub
fmul
cltd
sbb
ret
fcomps
xor
lods
fstps
mov
mov
or
sbb
rcl
in
or
call
xor
push
scas
jns
sub
nop
sahf
add
jbe
sub
cli
pop
dec
je
mov
arpl
mov
ljmp
clc
dec
mov
mov
loopne
pop
shlb
ficomps
out
gs
lcall
xorl
popl
mov
pop
mov
mov
orl
std
in
cmp
pop
insb
es
xchg
loop
std
cmc
negb
enter
mov
pop
jp
repz
inc
mov
lret
adc
js
xlat
push
or
scas
dec
adc
popf
icebp
push
xchg
jnp
dec
jecxz
jecxz
stos
mov
or
xor
lahf
and
lret
movsl
jg
cmp
push
mov
gs
andl
adc
in
sarl
push
movsl
popa
or
lea
inc
xor
push
mov
lret
fs
sbb
jecxz
mov
inc
pop
mov
addr16
mov
pusha
adc
insl
pop
xchg
inc
pusha
out
not
sub
push
jge
into
jnp
inc
mov
pop
adc
leave
dec
lods
cwtl
mov
jno
jbe
and
aas
adcl
dec
repz
xchg
shlb
in
jo
aam
ss
jmp
jno
jge
dec
pop
inc
xor
out
mov
mov
enter
add
fcoms
stos
sar
sbbb
mov
push
int3
jo
cwtl
mov
push
fcompl
xor
arpl
mov
jne
in
sbb
inc
out
inc
mov
popa
adcl
and
out
inc
or
mov
xchg
push
test
dec
fildll
loope
push
aam
cmc
or
icebp
fwait
mov
mov
repz
and
repz
push
or
sbb
shlb
add
rolb
inc
leave
andl
add
shlb
hlt
daa
push
insl
leave
xor
dec
sbb
outsl
js
leave
rorb
push
in
pop
pop
mov
rorl
and
into
out
aad
xchg
insb
lds
out
aaa
mov
inc
pusha
add
cltd
jns
rclb
push
sub
nop
popf
rcr
arpl
pusha
pop
jecxz
mov
js
xchg
push
loope
mov
dec
or
sbb
or
or
in
sub
mov
or
xchg
push
lcall
dec
cli
int3
imul
push
cmp
push
std
and
dec
js
fmul
cmp
xor
popa
out
lret
xlat
adc
mov
push
push
loop
lret
mov
orl
insb
nop
movsb
adc
scas
add
adc
xchg
mov
sbb
iret
and
mov
push
pop
adcb
incl
bnd
test
or
aas
jbe
add
mov
jo
lods
add
pop
imul
iret
jge
or
arpl
and
push
adc
jl
pop
cld
enter
inc
repz
sbb
movsb
sbb
dec
fucomip
aas
or
daa
push
cmp
jmp
xchg
xchg
sti
inc
ret
ss
dec
cld
jmp
xchg
push
ds
or
data16
aaa
xchg
jbe
outsl
and
mov
sub
push
cmpsl
sub
and
inc
jge
add
sbb
add
cmp
mov
fiadds
std
out
pop
mov
popa
push
adc
push
cmpsb
insl
sub
or
sbb
jmp
jne
int
out
int3
sahf
popl
in
pusha
lock
arpl
push
mov
lods
addr16
rcrl
cmp
push
mov
sbb
pop
lahf
clc
nopl
pop
cmpsl
cmp
fdivl
rcll
inc
out
xor
adc
pop
push
xchg
scas
popf
xor
mov
aad
mov
or
add
call
jo
xor
inc
lret
enter
ss
fs
fisubl
xor
pop
enter
jns
call
dec
test
cmp
xchg
subl
daa
pop
cmpsb
movlps
loope
push
fcomip
pop
pop
sub
inc
add
out
jle
mov
aas
test
jo
hlt
jo
inc
sbb
fcomi
repnz
mov
xlat
xor
loopne
imull
repz
jno
scas
push
sbb
xchg
jecxz
pop
in
insb
inc
sahf
or
addr16
xor
movsb
push
cwtl
int
inc
cmp
leave
aam
jmp
je
or
lahf
test
fwait
pop
jmp
jecxz
mov
pop
repz
lret
xchg
loop
in
dec
adc
cli
out
enter
cwtl
jmp
fwait
adc
lods
imul
xchg
out
pusha
ss
jb
lods
insb
cmp
sarb
mov
push
xor
nop
pop
adc
dec
mov
repnz
xchg
push
pop
sub
stos
xchg
adc
push
mov
and
sub
enter
aam
ljmp
mov
int3
data16
jmp
call
pop
shrl
xor
ret
aam
test
push
mov
and
clc
in
xchg
inc
dec
mov
insl
xor
clc
jle
shll
loope
add
nop
pusha
jnp
inc
push
mov
pop
hlt
jg
int
test
mov
incb
mov
shl
inc
or
outsl
pop
mov
ljmp
test
adc
shlb
adc
inc
or
iret
dec
out
mov
lods
sub
inc
or
and
pusha
jmp
insl
and
in
enter
stos
jnp
dec
lock
mov
adc
imull
cmp
pop
iret
or
xor
xor
xor
and
or
in
xchg
adc
push
pop
in
mov
popa
and
xor
ss
jb
dec
mov
es
das
add
repnz
shl
shlb
mov
jae
leave
test
jecxz
data16
pop
push
insl
push
lods
nop
mov
push
js
push
cmp
or
jbe
ja
fisubrs
mov
dec
in
hlt
rclb
inc
inc
adc
push
jno
xchg
mov
popf
fcoms
mov
push
adc
dec
mov
mov
es
shl
stos
js
fwait
sub
shll
adc
push
push
cmc
repz
jno
shll
dec
or
insl
xor
daa
jl
arpl
jb
sahf
aas
or
adc
sub
inc
or
inc
add
xchg
adc
xchg
sub
cli
pop
lds
dec
jmp
or
loopne
sbb
cmp
lds
ds
faddl
rorl
int
adc
inc
lcall
in
fcoms
cmp
loop
out
lock
arpl
push
lods
das
push
mov
rclb
sbb
popa
daa
pushf
xor
sbb
sbb
jmp
sub
gs
jne
and
xchg
jnp,pt
xchg
fld
mov
inc
test
imul
xchg
into
mov
push
sub
movsl
lcall
cmpsb
jb
pop
es
in
push
fidivrl
add
dec
jne
and
fldt
mov
jp
repz
sub
ret
sub
xor
js
push
push
add
jle
sub
gs
inc
mov
mov
add
pop
push
arpl
adc
pushf
orl
ret
push
cmp
aaa
aam
mov
aad
pusha
cmpsl
and
clc
push
pop
jne
jge
ljmp
scas
inc
fcompl
js
cmp
pop
test
xorl
xor
les
loop
jg
push
sub
cmp
outsb
or
mov
add
cmp
mov
daa
pop
aaa
ja
lds
lret
les
xor
data16
xchg
ja
mov
xchg
pop
jo
in
mov
iret
jmp
ljmp
jae
loope
pop
pop
cmp
xchg
ret
dec
sbb
add
lahf
imul
lret
imul
mov
mov
in
sbb
stos
pop
add
xchg
cmp
push
inc
cli
push
sbb
in
mov
pop
dec
outsb
and
aas
pop
and
cwtl
cmp
pop
imul
iret
xchg
testb
mov
call
pop
inc
sub
mov
popa
insb
mov
pop
push
cmpsl
add
cmp
jmp
fidivl
into
jns
dec
in
test
adc
out
mov
cltd
repz
ret
fadd
clc
repz
shlb
mov
icebp
dec
mov
jnp
mov
rcl
test
das
xchg
andl
jne
call
mov
imul
and
sbb
dec
fmuls
out
mov
call
inc
mov
movsb
sbbl
inc
push
pop
adcl
jge
push
fwait
push
lcall
testl
mov
push
rcrb
addr16
dec
imul
dec
stos
dec
jge
out
and
and
sub
test
arpl
cld
xchg
cmc
movsb
adc
repz
or
inc
sbb
repnz
fstps
add
add
mov
cmp
push
or
stos
imul
jnp
dec
ret
xchg
cmp
pushl
std
xorl
lcall
sub
or
outsl
sbb
outsl
fisubrl
push
imul
icebp
mov
cwtl
mov
mov
std
sbb
in
lea
cmp
loop
adcb
jnp
jl
mov
pop
sub
or
sahf
andb
imul
xor
adc
or
shlb
cltd
inc
mov
mov
daa
fcomps
fnstenv
xchg
ss
jae
cmp
xchg
push
imul
lret
rcrb
dec
jl
cmp
fldt
adc
and
stos
cmp
movsl
add
jecxz
mov
scas
nop
aaa
push
mov
sub
xlat
add
push
fscale
les
test
pop
scas
mov
fmuls
std
fsubp
pop
sub
add
mov
mov
shrb
insl
adc
dec
add
fimuls
stos
pop
cld
repnz
mov
pop
mov
cmp
pop
aad
aam
and
pop
call
and
es
dec
pusha
scas
jnp
clts
mov
adc
icebp
ja
ss
sub
mov
xlat
jbe
add
fstpl
movsb
mov
mov
mov
sarb
adc
jge
mov
addl
fwait
push
xchg
sub
sbb
sub
dec
mov
mov
div
and
add
and
jmp
mov
test
xchg
stc
lcall
sub
lret
xchg
pop
jge
jns
jne
jge
add
mov
aam
test
pop
stos
arpl
sar
int
cld
in
cmp
push
imul
lcall
aad
xlat
sub
mov
sti
jnp
pop
pop
and
sub
aas
add
mov
lods
dec
ret
loopne
nop
cmp
dec
jno
lahf
in
int
push
push
cltd
and
mov
fisttps
lret
inc
aaa
jnp
and
jne
jno
cs
enter
mov
fwait
sarb
push
lods
pop
xchg
cld
out
mov
cmp
pop
sbb
mov
push
push
movswl
xor
sub
or
ret
js
pop
jae
nop
iret
out
xor
fisttpll
ja
cli
xchg
aaa
testb
sub
jno
loopne
xor
push
mov
fs
fs
push
pop
push
jg
dec
dec
es
xor
or
data16
sahf
mov
data16
imul
mov
or
cltd
addl
jp
sub
sbb
sbb
mov
cmp
int3
push
fsubrs
or
pop
mov
iret
jne
pop
lret
stos
fimull
sub
mov
or
stos
add
clc
fisubl
je
stos
sub
jnp
push
insl
cmc
fdivrp
and
add
dec
loope
jle
add
inc
pushf
inc
cmp
in
mov
pushl
stos
pop
inc
mov
push
cmp
aas
jne
inc
xchg
mov
movsl
inc
loopne
daa
mov
mov
jge
adc
xchg
push
dec
clc
lods
jae
jo
stos
in
cld
out
cltd
push
mov
pusha
xorl
sbb
fidivs
mov
pop
dec
push
hlt
xor
adc
rol
or
sbb
jnp
inc
and
mov
push
xlat
mov
sbb
out
movsb
sbb
cmp
in
imul
inc
js
sbb
aad
out
ljmp
addr16
jmp
sbb
std
mov
xchg
mov
xchg
xlat
and
ret
adc
push
iret
rolb
pop
nop
sub
and
scas
in
sub
movsl
adc
cli
in
jns
ret
movsb
and
and
sbb
hlt
repz
int3
mov
inc
iret
jge
les
pop
imulb
or
int3
pop
mov
adc
mov
dec
pusha
dec
push
lods
push
lds
pop
loopne
jge
mov
lahf
mov
or
xor
ds
mov
jmp
pushf
push
mov
js
imul
adc
mov
out
in
xchg
stos
jnp
in
stc
fstl
fnsave
mov
mov
sbb
inc
repz
inc
mov
mov
cmpsb
add
in
loop
xchg
sbb
xchg
adc
std
cmc
jo
ret
or
lea
mov
aaa
in
adc
pusha
dec
adc
hlt
and
or
mov
movsl
dec
ljmp
hlt
push
xchg
mov
and
out
cmp
cwtl
and
sbbl
mov
push
movsb
sbb
loop
data16
fidivrl
mov
cld
mov
loopne
outsl
dec
push
push
and
lahf
call
adc
out
xor
jne
clc
pop
ret
add
jo
mov
jge
hlt
lods
outsb
push
sbb
inc
adc
push
jb
xchg
fnsave
or
in
mov
mov
fisttpll
fdivl
xor
or
in
imul
cwtl
psrld
and
lret
adc
mov
test
mov
add
out
cs
and
incl
fistpl
movsl
push
jmp
jb
popl
repz
pop
int3
xchg
mov
sti
cwtl
in
leave
pop
hlt
push
lea
les
adc
jecxz
repnz
mov
jmp
adc
adc
adc
pop
push
mov
fildl
xorb
pop
or
add
sub
sbb
mov
jge
leave
adc
add
lret
and
ret
imul
lods
int
sbb
fucomip
sub
sbb
pop
cmp
add
iret
add
xor
add
and
jnp
push
in
cmpsl
mov
push
addl
jl
inc
fstps
xor
or
scas
into
insl
jmp
pop
push
decl
jmp
xor
jne
ja
push
lds
mov
or
or
ss
sbb
xchg
test
rcll
addr16
cs
pusha
scas
loop
jbe
clc
inc
mov
mov
pop
movsb
stos
sti
xor
cmc
and
dec
mov
sub
mov
lcall
inc
imul
push
cwtl
jo
les
sbb
rclb
jmp
add
mov
and
pop
push
mov
aam
xlat
jmp
into
nop
push
mov
pop
lods
scas
dec
pop
call
add
shl
inc
sbbl
cmp
test
dec
cld
dec
sub
cmp
jp
xor
rclb
popf
or
cmp
adc
dec
dec
lahf
jp
xchg
idiv
cmp
pop
lods
mull
iret
cwtl
jns
out
mov
mov
addl
mov
jge
lret
insl
cld
jo
pop
repnz
pop
push
lea
pop
cmp
int
cmpsb
cli
mov
sub
cmp
sbb
sbbb
or
cwtl
dec
or
mov
xor
mov
mov
sbb
movsl
cmpsb
fwait
aas
nop
pushf
daa
int
and
popa
ja
movb
aad
in
inc
add
mov
sbb
mov
cmp
fmul
mov
push
popl
iret
movsb
xchg
mov
inc
shll
jb
mov
in
jecxz
dec
and
mov
pop
lock
lods
mov
cmp
add
or
je
fsubs
in
fst
arpl
xor
stos
push
lret
jbe
ljmp
jmp
mov
mov
into
add
repz
mov
shrl
stc
push
mov
mov
stc
pop
xor
shr
movsl
rorl
inc
pop
fstl
xchg
xchg
stos
push
in
roll
push
addb
cltd
negl
insl
xchg
push
ret
adc
scas
pop
fnsave
add
inc
sub
xchg
xor
mov
mov
xor
test
add
cld
jbe
push
mov
adc
adc
jnp
xor
cmpsb
pop
dec
insl
lods
fidivs
jb
fstpt
rol
sub
ljmp
imul
mov
int3
imul
mov
call
pop
xlat
lock
mov
addr16
jno
ljmp
dec
cmc
push
movntq
out
aam
ficoms
mov
mov
ja
sbb
push
cmpsl
loop
push
sbb
dec
xor
stos
adc
and
mov
lahf
lds
call
gs
out
ret
xlat
or
sub
jnp
fcomi
ljmp
fstpt
cmpsl
lea
jmp
inc
or
pop
cmp
jns
in
fmul
mov
mov
mov
ja
test
add
aaa
sahf
cmc
in
cmpsb
xor
notl
push
addb
mov
cmpsb
imul
stc
movsb
scas
shll
and
scas
pop
pop
sub
jmp
inc
into
bound
aam
js
rcrl
xchg
xchg
xchg
les
dec
inc
movsb
add
or
push
cs
push
out
dec
mov
test
dec
rorl
xchg
imulb
xchg
mov
xor
xor
jno
push
sbb
cmp
fcomi
jo
push
dec
cltd
mov
sbb
adc
dec
mov
xor
and
jg
mov
jnp
or
out
arpl
insb
xchg
adc
dec
jno
negb
cmp
push
and
mov
mov
bound
jo
mov
mov
mov
inc
data16
mov
outsb
pop
fsubl
and
xchg
fisttpll
mov
cmp
mov
pop
cmp
push
mov
adc
loop
xchg
imul
movsb
fadd
lcall
repnz
stc
mov
call
mov
xchg
scas
or
inc
ret
addr16
jnp
dec
test
int3
fdiv
pop
insl
lock
out
jns
sti
dec
movsb
aam
lahf
mov
in
cmc
xlat
xor
xor
mov
loopne
pop
in
xorl
out
lret
aad
popa
sub
xlat
dec
inc
les
push
fbstp
arpl
jnp
addb
dec
lret
sub
icebp
das
cltd
ljmp
imulb
inc
out
mov
add
mov
ret
jle
add
cmp
or
insb
xchg
dec
loopne
cwtl
pop
mov
xchg
mov
iret
push
ja
test
sbb
ficoms
xchg
push
jp
scas
sahf
pop
push
inc
cli
daa
push
add
sarl
ret
pop
xor
sub
sbb
lods
sbb
mov
pop
cwtl
clc
and
and
repnz
mov
sbb
filds
jbe
jle
push
mov
adc
xchg
mulb
out
xchg
or
je
sbb
es
mov
push
sarl
ficoms
push
mov
cmp
mov
das
imul
sub
pushf
jb
push
xchg
push
cmp
test
hlt
bound
mov
cld
push
lods
jmp
adc
in
jg
ss
scas
mov
stos
mov
cmp
cmp
leave
pushl
pop
std
jns
and
adc
jecxz
je
sahf
out
mov
fnstsw
test
mov
mov
pushf
cs
add
das
fcmovne
inc
mov
cld
or
jo
les
les
shrb
aas
sbb
mov
or
mov
inc
push
lcall
xchg
mov
sbb
into
mov
inc
mov
aaa
ret
shll
stos
mov
adc
sub
cmp
mov
fcompl
enter
push
jnp
cmpsb
imul
mov
dec
cmp
out
or
leave
add
cld
xchg
or
sbb
add
push
mov
fldt
lea
iret
ret
mov
and
pop
test
lahf
sbb
cmpsl
sbb
out
pop
fadd
xchg
jnp
sahf
out
pop
push
cmp
jbe
add
sbb
push
std
std
xchg
sub
data16
jge
in
stos
or
pop
in
push
scas
pusha
rolb
dec
pop
daa
cwtl
sbb
cmpsb
popf
into
cmpsb
or
pusha
in
inc
push
mov
xchg
mov
rol
add
xlat
mov
mov
jmp
enter
jl
imul
mov
cmp
jecxz
lods
cmpb
jae
jmp
fsubr
sbb
jmp
je
pop
xchg
lods
in
add
pushf
js
cmc
pop
ret
push
mov
jp
mov
push
lods
adc
cmp
subl
cs
or
movsb
test
push
or
push
sarb
and
testb
jb
cmp
mov
fwait
jno
je
mov
scas
mov
sbb
les
inc
cs
adcl
jno
push
push
jecxz
cmp
ficoml
mov
and
jne
aaa
data16
push
test
lcall
lret
inc
test
push
out
cmp
fsubl
xchg
outsb
mov
mov
repz
andl
jns
xor
sub
jle
push
test
test
rorl
sti
fs
sbb
flds
fstl
outsl
inc
sbb
out
xor
cmpsb
in
add
icebp
push
cld
arpl
push
ljmp
cs
xchg
int
and
insl
aaa
jb
hlt
jno
pop
jbe
jbe
jge
pop
movsl
test
das
arpl
push
dec
jg
jbe
push
fwait
pusha
popa
mov
fsubl
xchg
sbbl
or
jle
pop
lods
push
inc
lock
push
xchg
movsb
fadd
push
xchg
ret
jae
jl
movsl
call
sti
adc
or
daa
ja
or
pop
sahf
mov
loop
popf
stos
in
dec
inc
movsl
std
mov
and
lcall
std
pop
sub
imull
in
fxch
out
xor
mov
sbb
test
mov
cs
pop
sub
cmp
aad
dec
pop
xor
push
sbb
cld
pop
add
xchg
enter
lds
xor
and
dec
aas
inc
sti
cld
stc
sbbb
ss
jecxz
pop
nop
mov
in
adc
in
xchg
std
fwait
ja
cmc
add
loope
sub
push
pop
scas
orl
repnz
sbb
shl
imul
add
loope
fnstcw
aad
out
pop
push
decl
pop
cmp
xchg
clc
ret
addl
ja
ja
gs
addl
push
push
movsl
xchg
xchg
clc
mov
push
stc
adc
shr
out
jae
jae
pop
mov
imul
mov
inc
dec
fisttpll
xchg
int3
dec
inc
push
jb,pn
rol
xchg
out
insb
jmp
mov
popa
dec
xchg
jb
xchg
mov
inc
cmp
push
ficompl
insl
repz
mov
out
cltd
out
mov
adc
mov
sahf
aam
icebp
cmc
pop
and
sbb
jno
xchg
cmpsl
push
stos
cli
daa
popf
add
xchg
pop
mov
or
mov
mov
and
data16
push
add
jle
movsb
xchg
sbb
push
sub
popa
xor
ret
incb
scas
jno
mov
lods
mov
icebp
adcl
push
dec
jbe
and
adc
xor
jecxz
pop
or
shll
int3
fnstenv
jge
cmp
shll
pop
ds
push
bound
fnstsw
cwtl
inc
int3
adc
jl
add
and
dec
lret
sbbb
push
cmp
jbe
sti
int
ret
cmp
jp
sub
push
stc
ret
mov
mov
jmp
ljmp
push
fstl
addr16
movsb
add
sti
dec
xchg
xchg
mov
adc
cmp
xor
divb
lret
mov
xchg
leave
jno
or
dec
dec
mov
mov
les
ret
push
sbb
les
push
fsubrl
mov
fildl
mov
lods
loope
and
jecxz
mov
mov
into
fldenv
outsl
jo
fdivl
dec
jnp
sti
or
not
jns
and
mov
dec
divl
stos
stos
adc
xor
sub
sahf
add
jge
mov
jg
lret
leave
push
mov
mov
divb
fsubrs
jp
fcomps
add
nop
lods
lea
lahf
jno
or
cmpl
inc
fstp
sub
push
push
lahf
rorl
leave
lds
or
movsl
jns
push
dec
mov
mov
sub
inc
pop
addr16
xchg
es
dec
adc
stos
loope
mov
push
aad
stc
xchg
mov
pop
mov
mov
push
mov
cmp
lcall
cmp
int
push
push
xchg
or
pop
cmp
sub
dec
std
mov
mov
jmp
fcoml
int
xchg
sbb
push
jp
inc
add
dec
test
mov
add
rolb
jl
xor
test
cmc
int
lahf
push
es
mov
jge
inc
dec
iret
sbb
push
xchg
mulb
sarb
movsb
cmc
aam
xor
shrb
sarb
xchg
insl
outsb
sub
push
rolb
fimull
fsubrl
sbb
test
inc
xchg
mov
imul
and
jns
test
cmc
in
mov
sbb
cwtl
jb
dec
jae
cmpsl
cltd
pushf
mov
mov
movsb
std
ret
inc
push
rclb
nop
sub
orb
push
popa
icebp
sub
sbb
adc
sub
ret
jge
in
sub
call
sti
push
xor
and
mov
dec
sub
hlt
scas
cwtl
mov
das
call
dec
shll
cmp
cmp
push
adc
movsb
insb
sub
jge
mov
jp
stc
push
sub
add
inc
call
cs
jmp
pushf
or
sub
adc
xchg
jmp
xchg
gs
mov
push
and
mov
dec
js
xchg
icebp
data16
fwait
or
test
das
xchg
jge
sbb
xchg
in
jb
sbb
pop
xor
add
imul
lods
hlt
sbb
iret
mov
insl
push
adc
mov
into
aam
cs
aad
or
daa
cmc
jmp
adc
stos
andl
adc
add
jle
push
mov
in
mov
mov
add
sbb
orl
popf
fistl
xor
scas
push
pop
ds
data16
test
lods
cmp
decb
xchg
or
out
xor
xchg
inc
loop
mov
mov
mov
fcmovne
ss
movsb
mov
mov
repnz
in
xchg
xchg
sbb
mul
and
repz
push
mov
push
clc
stos
enter
lea
xor
cmp
cwtl
in
push
jb
push
pop
xor
pop
sbb
xlat
push
pop
out
jmp
jb
cwtl
cmp
mov
test
test
out
call
jmp
into
mov
dec
xchg
lea
cmp
mov
add
or
popf
mov
push
push
xor
mov
xor
mov
js
dec
xchg
add
std
add
or
outsl
ret
adc
add
push
xlat
pop
dec
out
or
aaa
int
xchg
pop
push
sub
sub
fists
cmpb
mov
in
sbb
lret
movsl
or
imul
fldenv
aaa
lock
call
xor
lret
and
jge
out
out
xlat
jmp
jge
push
test
repz
sub
sbb
sbb
sbb
subb
lods
add
pop
dec
rolb
jmp
pop
cmp
mov
jp
or
xor
data16
xchg
loop
into
stos
ljmp
shrb
jnp,pt
ret
cmp
pop
movsb
and
out
mov
int
mov
push
gs
xchg
lods
push
or
out
imul
jne
shrb
mov
shll
mov
stos
orl
dec
push
imulb
mov
and
lock
xchg
notl
loopne
xchg
lahf
test
cltd
push
mov
out
pop
outsb
lods
aas
mov
or
ja
add
jns
ficompl
jecxz
negb
or
mov
adc
push
imul
dec
cmpl
adcb
push
dec
dec
repnz
ja
int
xor
and
jno
xchg
fwait
pop
sbb
sub
ds
pushf
mov
xor
es
adc
pop
divps
inc
dec
push
and
popa
jbe
sbbl
and
loopne
jae
lret
push
mov
movzbl
cmpsb
movsbl
mov
push
stos
bound
arpl
movsl
mov
dec
gs
lret
mov
xchg
stc
ds
iret
lods
ja
out
arpl
enter
daa
jns
pop
pusha
mov
cs
push
or
jnp
jnp
outsl
fdivr
pop
or
mov
push
lods
mov
fsub
dec
pop
notb
xor
mov
push
out
into
dec
push
adc
sub
sbb
and
dec
iret
xor
ja
xchg
imul
cmp
and
push
js
out
ret
mov
push
insb
inc
clc
pop
aam
icebp
cmp
popl
shlb
mov
in
lods
pop
mov
or
mov
sub
test
or
lock
mov
shrb
and
jecxz
xor
mov
divl
lcall
add
xor
andl
fwait
lea
jle
outsb
sub
jo
out
popf
jo
int3
out
out
push
inc
sbbb
lcall
push
sub
sar
mov
lret
push
push
jbe
dec
rorl
xchg
addr16
movsb
and
sarl
lret
aad
daa
pop
outsb
pop
mov
mov
mov
inc
mov
xchg
mov
sahf
pop
inc
aam
xchg
inc
adc
cmc
cmp
mov
fldln2
inc
dec
jmp
cmp
add
iret
fwait
add
or
push
lahf
movsb
lock
inc
lea
xor
roll
jns
add
push
xlat
aaa
dec
lret
lock
sbb
sbb
dec
ror
mov
insl
dec
loope
in
cltd
arpl
cmpsl
cld
clc
lret
test
inc
adc
mov
insb
mov
call
add
adc
js
lods
jno
mov
pop
inc
adc
jl
add
mov
test
xchg
push
pop
in
sahf
outsb
dec
or
xor
push
inc
mov
and
adc
int3
dec
adc
jl
stos
lea
sub
es
insb
dec
push
and
pushf
int
pop
psrlw
xchg
cltd
push
mov
cmpl
and
sbb
push
pop
cli
cmpsl
dec
pop
repz
gs
shlb
mov
lahf
push
add
or
sub
cmc
rorb
in
inc
aam
add
push
mov
sub
enter
jg
mov
out
pop
ror
gs
or
andl
movl
xchg
test
shrb
repz
or
ja
and
pushl
outsb
or
mov
push
adc
xchg
inc
cwtl
xchg
outsl
push
pop
and
ja
mov
popf
jns
pop
pop
pop
popa
icebp
inc
ss
jp
mov
out
cltd
outsl
aas
or
adc
add
xor
movsb
mov
inc
mov
cmp
dec
nop
je
xchg
push
popl
xchg
ficomps
jne
cmp
cmpsb
scas
stos
les
shlb
in
sub
in
push
out
adc
icebp
add
cmp
or
push
shlb
mov
xor
inc
es
mov
jb
push
xor
and
dec
negb
and
pop
adc
add
or
jae
pop
cli
mov
loop
cwtl
sub
sbb
cmp
pop
sub
lods
or
cmpsb
xchg
push
jo
int
movsb
hlt
push
lret
xor
inc
rclb
idiv
insl
insl
into
cmpsl
notl
int3
lock
adc
call
stc
stos
rcl
add
notl
cmp
js
je
lods
scas
lock
push
sub
xchg
xchg
or
cmp
jae
pop
mov
mov
sub
lods
repnz
inc
and
insb
mov
push
clc
mov
jne
adc
mov
jne
mov
ljmp
jnp
mov
sub
ja
and
jo
ficompl
shr
scas
adc
iret
xchg
mov
mov
incl
stos
and
push
popf
and
jae
xor
cltd
adc
cmc
push
xor
out
push
js
sbb
ja
mov
or
popa
mov
mov
int
pop
popa
dec
ds
inc
leave
and
int3
inc
sbb
test
nop
xchg
cmp
mov
js
aad
mov
in
sbb
daa
sahf
sbb
icebp
nop
addr16
cmp
push
or
imul
arpl
cmp
pop
int3
or
sbb
out
and
cmp
aam
lods
xor
pop
dec
maskmovq
divl
push
mov
xor
add
sub
arpl
or
mov
jnp
arpl
cld
push
or
jnp,pn
in
addr16
push
add
jmp
test
push
mov
jbe
icebp
mov
repz
or
mov
cmp
cmp
divl
ret
iret
js
cwtl
loop
popf
mov
into
push
add
leave
ret
lods
mov
push
inc
int3
out
mov
and
adc
mov
push
sub
scas
pop
adc
test
jae
aam
mov
rorb
sti
fadds
clc
fucomp
daa
or
dec
jle
js
test
aam
aad
add
imul
or
insl
and
inc
push
lock
faddp
popa
push
jg
fistpl
xor
in
shll
cmpsl
sub
loope
sbb
fnsetpm(287
into
test
jno
repz
mov
lcall
aad
test
adc
sbb
fnstenv
fnstcw
les
mov
jne
xlat
js
jno
jmp
cmp
cwtl
inc
sahf
adc
fsubr
add
inc
sbb
adc
mov
das
push
push
movsl
daa
inc
aas
mov
mov
nop
ficoms
mov
push
xchg
sub
cmc
lahf
mov
push
xlat
repnz
mov
insb
dec
mov
fcomi
ja
ror
cli
xor
xor
dec
aam
push
outsl
add
mov
mov
or
pop
je
sub
les
loop
inc
adcb
sbb
ds
pop
pop
jne
test
and
and
sar
xchg
shll
rorl
sub
out
add
sub
mov
insb
and
mov
dec
ret
pop
inc
dec
jo
jp
mov
cmpl
in
inc
pop
pop
or
shr
inc
adc
cld
xlat
movsb
out
jbe
sub
mov
rorl
data16
call
mov
loopne
jae
dec
loopne
insb
imull
in
add
lock
aas
pop
mov
rorl
and
cltd
sbb
out
mov
jmp
push
incb
fsubs
and
test
mov
test
jae
daa
repz
xor
dec
cmp
hlt
fwait
mov
xchg
or
lods
fadds
jnp
repnz
repz
push
cs
adc
aad
dec
nop
xchg
mov
mov
adc
xor
sub
fdivl
lret
jge
pushf
daa
inc
fwait
xchg
and
push
mov
mov
mov
pop
add
je
cmp
cmp
pop
lcall
pop
xor
dec
jno
or
scas
dec
push
mov
lea
or
mov
fnstenv
mov
stos
inc
pop
into
inc
out
fbstp
mov
in
sbb
out
cli
jl
js
aaa
icebp
mov
arpl
pop
sahf
dec
addb
stc
and
mov
popa
pop
inc
daa
cmpsl
outsb
ss
inc
inc
jae
inc
ja
and
jg
push
mov
adc
add
pop
add
mov
ja
sbb
pushl
jns
and
or
imul
lret
fisttpl
divb
lcall
xchg
push
les
jecxz
jecxz
jno
jl
jno
nop
xchg
nop
jmp
jae
jmp
es
out
es
aaa
adc
ret
pop
ss
inc
xor
test
ds
lret
mov
idivb
mov
lods
std
adc
fld
mov
ljmp
jae
out
or
sbb
lea
add
ret
pop
cmc
cmp
jg
shr
in
fnstenv
dec
add
in
xchg
and
ja
xor
fiadds
sub
xchg
xor
out
xor
dec
jae
fsubrl
dec
in
and
push
inc
jge
lea
adc
dec
pop
call
inc
push
mov
mov
aad
loop
imul
outsb
add
or
and
lock
pop
aaa
sbbl
sbbb
push
xor
notl
sub
xor
jp
xor
ljmp
and
mov
add
sti
nop
bound
xchg
lret
mov
mov
add
sub
stos
sbb
stos
jno
fidivs
ds
adc
mov
repnz
push
add
sbb
je
xchg
aad
or
in
sahf
cmp
xchg
nop
aam
std
mov
mov
clc
ds
sub
js
add
lcall
dec
pop
imul
ret
cmp
repnz
adc
fcompl
or
inc
lahf
xor
xor
je
inc
jnp
or
xor
repnz
mov
push
mov
cld
pop
test
stos
pop
cmpsb
ljmp
in
mov
pop
aam
test
rolb
int
inc
dec
push
aad
mov
rsm
dec
iret
test
mov
inc
mov
andb
sti
pop
mov
repz
fdivl
in
inc
mov
fnsave
mov
mov
mov
rcrb
push
and
sub
ret
mov
mov
pushf
add
jp
ret
dec
sbbl
sti
or
or
jmp
pop
bound
inc
push
call
pop
add
jmp
xor
movsb
or
jle
push
bnd
xchg
cmp
int3
imul
and
je,pn
sub
ficompl
sub
fdivrl
sub
outsb
pop
loope
out
call
xor
inc
cmp
mov
lret
sub
mov
out
mov
mov
jnp
push
push
stc
outsb
cmp
es
and
or
into
stos
stos
jg
push
ret
loope
pushf
pop
pop
mov
xor
bound
mov
pop
sub
dec
or
mov
bound
cltd
dec
pop
aas
add
jmp
cwtl
push
xlat
mov
xchg
xlat
out
leave
hlt
arpl
cmp
fisubs
inc
mov
ret
sub
out
inc
testl
and
scas
jbe
sbb
in
mov
cs
mov
imul
pop
arpl
idivl
pushf
mov
or
cmp
int
imul
push
mov
in
loopne
inc
cltd
sub
push
adc
cwtl
mov
pop
rclb
leave
xor
ja
pop
sub
jg
jb
aaa
add
out
repnz
pop
xchg
pusha
movsb
mov
jns
push
les
pop
daa
int
mov
add
cli
sbb
add
cmp
or
cmc
sub
out
mov
xlat
mov
ss
xchg
push
insb
and
call
adc
inc
aad
xchg
shll
jnp
jo
pop
stos
add
jnp
jecxz
adc
push
cmp
pop
inc
pop
out
mov
sbb
mov
mov
popl
das
cmpsb
mov
sarl
imul
xor
xor
and
or
ret
jl
fadds
dec
jns
mov
lock
ficompl
rep
mov
mov
pop
jl
enter
jg
into
mov
fs
popa
sbb
add
loop
and
adcl
and
jns
sahf
gs
pop
cmp
subl
mul
inc
sbb
or
ret
movsl
clc
dec
xchg
repnz
jns
movsl
je
push
mov
aam
out
mov
sbb
cmp
in
aam
cmpsl
add
popf
stos
popf
xor
arpl
aad
out
les
or
mov
in
push
xor
mov
mov
mov
cmpsl
cs
sub
fdivrs
nop
pop
jnp
ror
ficoml
and
mov
scas
push
into
rcll
ficoml
sbb
ret
jge
mov
int3
adc
mov
mov
push
cmp
repnz
push
or
lds
jge
jl,pn
xchg
in
shlb
and
cmp
shll
pop
fidivs
mov
sbb
inc
shlb
dec
sub
mov
rcrl
mov
or
pushf
push
mov
mov
dec
sub
xchg
inc
cmc
xchg
rorl
jb
jle
outsb
mov
push
dec
loop
lcall
mov
xchg
dec
call
push
jp
lds
icebp
daa
subb
dec
out
repz
jbe
add
rcrl
sbb
push
sti
jb
inc
adc
mulb
jge
mov
dec
pop
pop
sub
je
stos
rcrb
fdivr
in
sbb
loopne
mov
sbb
xchg
lock
into
pushf
push
shrb
movsb
pop
add
fidivrs
push
mov
pop
cmp
add
xchg
xchg
popa
xchg
sbb
pop
or
and
jne
push
daa
pop
movsb
adc
xchg
outsl
outsl
sarb
mov
loop
sub
and
jae
adc
xchg
daa
push
sarb
mov
lea
arpl
or
cltd
sbb
ja
lahf
jnp
push
ds
lahf
xchg
jl
lret
pop
fldt
rclb
ret
popa
loopne
jne
nop
in
or
inc
rcl
inc
in
mov
leave
sbb
and
inc
sbbw
lret
ljmp
movsl
js
push
les
dec
js
aam
push
test
lret
and
or
sub
jecxz
xor
insl
rcll
aad
repnz
sub
jmp
mov
pop
xor
adc
jl
lods
loop
js
daa
test
data16
shrb
sbb
shrl
out
clc
xchg
in
popf
sbb
xchg
add
test
das
pusha
xor
decb
add
add
les
mov
sub
notl
out
test
push
xchg
test
push
movsl
adc
pusha
mov
or
cmp
dec
push
outsb
push
jnp
cmp
lock
loop
orl
mov
cli
lods
jno
jmp
in
pop
je
ljmp
fsts
push
stos
or
arpl
ficoml
aam
idiv
enter
stc
mov
sbb
mov
test
jge
mov
or
inc
lock
loope
and
dec
dec
rcr
jmp
lock
mov
adc
dec
popf
cltd
mov
dec
fldenv
pop
cmp
je
pop
add
lods
dec
out
xchg
push
imull
mov
subl
jbe
xor
cltd
andb
xlat
xchg
ljmp
push
inc
loope
add
xor
mov
sbb
test
jo
and
rcrl
inc
push
push
mov
lods
xchg
inc
es
mulb
lds
hlt
xor
mov
xchg
sub
scas
aaa
loop
dec
and
push
mov
fadds
imul
mov
je
sar
sub
inc
aas
lods
outsl
dec
cmp
mov
js
lods
pushf
js
popf
lea
hlt
dec
ja
ljmp
sbb
movsb
jne
ret
add
add
mov
dec
pop
cmpsb
insb
lds
mov
dec
dec
mov
loope
je
out
data16
jo
mov
sub
lds
add
sbb
or
fildl
xor
push
iret
test
loopne
movsb
lcall
je,pt
test
mov
mov
mov
shlb
les
jecxz
push
clc
inc
sbb
xor
dec
insl
repnz
xchg
or
xor
jmp
rcrb
mov
dec
jp
xchg
out
in
arpl
andb
cltd
cmp
es
fcoms
adc
pop
test
in
xchg
sarb
outsl
das
aam
ds
shll
andl
inc
jae
sbb
cmp
mov
in
test
sub
xchg
fstps
inc
stos
cltd
sub
adcb
aaa
push
pop
xor
jb
in
out
mov
std
fsub
cmp
push
or
xor
out
lea
cmp
dec
mov
loopne
fstpl
mov
xorb
sbb
adc
inc
push
outsl
push
adc
sahf
aam
lods
mov
lret
fsub
movsl
lods
cli
xor
dec
jbe
daa
jnp
cs
xchg
fimull
sub
push
inc
enter
xchg
pop
lret
popa
enter
clc
or
test
push
jo
stos
aaa
or
or
out
imul
scas
sub
pop
pop
pop
in
push
lea
hlt
mov
add
sub
and
adc
pop
aam
sarl
and
orl
or
fiaddl
mov
cmp
mov
sbb
rclb
jle
pop
jmp
sub
jno
gs
mov
pop
aaa
scas
and
jl
push
ds
push
xchg
or
lods
ljmp
andb
fstl
mov
pop
adc
lock
xlat
outsb
negb
or
fists
in
ss
xchg
aad
call
and
dec
fnclex
inc
jg
jo
mov
sub
fistps
adc
loope
pop
lea
inc
add
pop
aam
inc
into
cmp
adc
and
das
ficoml
mov
adc
shll
enter
pop
popa
mov
psllw
xchg
and
mov
imul
mov
je
push
jo
cmp
inc
int
cmpl
xor
cmp
idivb
push
or
dec
sub
jo
mov
cs
mov
sahf
in
stos
fiaddl
js
cwtl
or
push
mov
in
lods
push
pushf
addb
adc
push
sbb
pop
add
jle
mov
push
xchg
xchg
lret
jb
mov
mov
jmp
lret
jb
enter
pop
mov
leave
lcall
test
in
cld
lods
rcrl
mov
xchg
xor
cwtl
sub
int3
into
xlat
pop
cmpsb
or
xor
mov
sub
push
add
ja
jns
mov
pop
popw
imul
inc
adc
ljmp
iret
loope
cmpsl
jl
repnz
add
cli
sub
sub
loop
mov
clc
test
icebp
orb
out
push
pusha
scas
cli
ds
mov
and
sbb
fiadds
add
aam
xchg
inc
es
dec
repz
lahf
fwait
mov
xchg
dec
lods
ffreep
leave
imul
and
in
pop
cmp
xor
out
je
or
sub
mov
cmp
pop
cwtl
xchg
shrb
fucomip
inc
sbb
push
push
cmp
scas
jge
push
cld
shrb
pop
jno
adc
mov
inc
xor
pop
add
inc
pop
loopne
popf
daa
push
jnp
gs
push
xchg
inc
enter
lret
pop
and
pop
mov
imul
mov
or
lock
push
push
rol
data16
sbb
mov
fs
sub
ja
out
or
mov
or
test
js
or
pop
inc
jae
mov
out
pop
push
push
pop
mov
cmc
rclb
xor
mov
fstpl
pop
mov
cmc
addl
test
add
sub
inc
nop
lret
addr16
cmp
movsl
jns
xor
mov
jp
shlb
adc
push
hlt
mov
mov
and
ret
icebp
loop
test
bound
orl
dec
int3
cmp
mov
insl
add
fwait
push
jnp
inc
in
push
jecxz
push
aas
out
scas
stos
pop
sub
iret
pushl
pop
fsubs
pusha
incl
push
cmpsl
ret
sbb
ljmp
cmpsb
xchg
lcall
imul
push
fwait
in
sub
cmc
push
lret
mov
and
xor
je
test
mov
dec
data16
sarb
addr16
inc
popf
mov
jg
repnz
sub
dec
cmp
mov
fimull
lock
test
adc
adc
jmp
movsb
dec
xchg
add
or
into
adc
pop
cmp
iret
mov
xchg
ficoms
mov
mov
int3
cmpsb
mov
lock
call
mov
mov
frstor
add
mov
ljmp
loop
ds
lea
dec
sbb
jp
pop
inc
push
inc
icebp
stos
ret
arpl
movsl
mov
lret
xor
mov
xchg
pop
cmp
adc
stc
addr16
out
jl
sbb
rcr
mov
xchg
pop
or
int
pop
push
push
int
in
test
xor
jp
sti
inc
dec
insb
xchg
shrl
sub
stos
bnd
insl
inc
flds
xchg
jbe
push
or
divl
test
popl
sbb
std
adc
leave
out
sbb
xor
mov
jo
inc
push
xor
loopne
inc
mov
rolb
pop
adc
or
clc
pop
mov
add
push
popa
jb
jb
mov
decb
in
ds
adc
cmp
pop
xchg
xlat
js
fsubrs
rorb
sbb
mov
shll
dec
mov
xor
nop
mov
jbe
jo
push
mov
jno
fwait
jl
sub
jb
andb
xor
push
mov
loopne
out
sti
repnz
bound
nop
jge
adc
adc
outsl
jae
adc
pop
pop
pop
mov
lods
das
xchg
into
aam
ficoms
ret
inc
call
std
pop
pop
push
sbb
mov
add
je
jmp
xor
lret
sub
lock
call
pop
mov
xchg
clc
cmp
fwait
loope
jl
sub
or
xchg
movsb
cs
jg
adc
xchg
xchg
outsb
imul
and
loope
shl
out
testb
lods
scas
daa
or
nop
jbe
jae
test
jo,pn
adc
mov
lret
cmp
jae
xor
or
mov
inc
outsb
or
nop
sub
pop
fmull
dec
fistpll
inc
mov
sbb
pminsw
bound
addr16
in
pop
out
bound
stc
pop
pop
mov
pop
mov
testb
dec
inc
repz
test
mov
adc
out
jno
pop
add
sahf
jg
and
js
push
jecxz
loop
mov
or
sub
inc
orb
mov
push
push
xor
cltd
dec
pop
rcll
inc
pop
sbb
subl
mov
and
dec
sub
sbb
xchg
int3
xlat
stos
pop
sbb
sbb
cmp
in
arpl
mov
cs
sbb
push
mov
xchg
call
xor
mov
or
fwait
or
sub
hlt
shlb
sbb
adc
test
inc
loop
mov
in
loope
ja
jo
mov
mov
and
or
repz
xchg
mov
adc
jne
cld
jg
mov
xchg
push
jnp
mov
sbb
xchg
test
into
add
or
mov
mov
pop
pop
xchg
xchg
adc
pop
ja
data16
pop
jle
addb
int
fdivp
pop
insl
mov
xchg
ret
pop
and
push
fucomp
sub
aaa
pushf
addr16
xor
ja
push
ret
pushf
push
push
mov
and
orl
in
fs
repnz
shl
cmp
lret
ja
test
lods
adc
xchg
insb
add
xor
aas
lea
and
out
dec
jno
in
pop
dec
aad
add
pop
mov
jge
pop
add
bound
cmc
pop
mov
test
outsb
xchg
or
lds
sarb
fidivrl
xchg
xor
fstpt
insl
dec
and
cmpsl
gs
addr16
jp
into
test
mov
mov
enter
mov
sahf
dec
test
notb
jmp
push
pop
xor
sub
adc
dec
js
ret
xchg
mov
shrb
out
inc
pop
stc
mov
sbb
xchg
mov
shr
and
pushf
jbe
xchg
and
mov
movsb
das
stc
fdivr
pop
mulb
test
call
loopne
in
sub
fs
mov
rcrl
add
cmp
cmpsb
and
outsb
gs
jb
push
test
int
jo
mov
leave
jae
fsubs
nop
cld
ficoml
lcall
mov
mov
xlat
mov
pop
mov
mov
and
push
mov
add
push
sahf
sbb
cmp
mov
int3
cmp
jecxz
test
clc
xchg
inc
rol
lahf
xor
push
jno
adc
call
jb
sarl
pop
sub
sar
out
sbb
xchg
jle
scas
mov
mov
push
mov
xchg
repz
scas
sbb
std
cltd
dec
push
mov
mov
push
addr16
mov
mov
ja
hlt
xor
jnp
cltd
cmp
scas
mov
bound
scas
cmp
cmp
iret
sbb
ss
sarb
jno
sub
xor
jns
cmp
pop
adc
cltd
mov
mov
das
mov
call
xor
pushf
xchg
mov
lea
inc
or
jmp
adc
cwtl
inc
mov
ret
jle
sub
pop
mov
pop
sub
leave
mov
in
cmp
pop
lods
divps
add
mov
and
sub
mov
sub
sbb
pusha
sti
arpl
aas
jnp
mov
sahf
sbb
cs
add
sahf
lret
out
mov
lds
inc
jmp
pop
jno
test
adc
sarl
sub
addr16
jno
movb
add
pslld
imul
sub
enter
mov
cmp
sub
dec
std
push
and
add
rol
jne
sub
rcrl
xor
inc
add
fsubp
jp
aaa
sub
frstor
sbb
mov
sub
mov
loope
scas
cmpsb
inc
ret
paddsb
sbb
mov
cmpb
clc
mov
adc
xor
out
xchg
dec
pop
cmp
push
cltd
mov
dec
stos
add
orl
out
int3
pcmpeqw
inc
add
jle
fs
xchg
ss
mov
iret
sti
sbb
nop
stc
outsl
mov
sub
ficomps
jae
fstps
mov
sub
rorl
pop
cmpsb
inc
popa
jb
add
sub
dec
rcrb
pop
out
dec
adc
xchg
sahf
push
lock
clc
outsl
inc
addb
les
add
out
add
cltd
jmp
ret
sbbb
dec
arpl
sbb
ret
inc
outsl
stc
sbb
in
xor
divl
push
iret
stos
dec
sbbl
rcrl
add
jo
aaa
sarb
inc
mov
js
pop
or
add
jae
es
pop
into
sti
outsb
movsb
adc
add
popa
mov
cmc
std
fwait
adc
inc
xchg
popa
inc
aas
cli
addl
cmp
dec
insl
data16
mov
fwait
daa
cmc
rorb
outsl
dec
push
lcall
ja
cmp
mov
in
xchg
xor
mov
or
scas
mov
inc
sti
cmp
add
lret
push
cmp
pop
nop
in
scas
adc
jns
xchg
xor
xor
dec
cmpsb
dec
pop
jl
aas
pop
cmp
cltd
sbb
inc
test
push
or
xor
jl
stos
xchg
aam
rcll
sub
push
xor
pop
cltd
aaa
in
int3
push
push
notb
xor
cld
or
push
clc
out
ds
shrl
adc
mov
xor
lea
js
ficoms
jo
xor
xchg
fiadds
movsb
bnd
mov
clc
pop
idivb
xlat
shll
aaa
and
notl
pop
add
lods
in
insl
jp
shll
repnz
adc
adc
jecxz
push
in
jl
adc
sub
pop
xchg
gs
clc
mov
out
mov
clc
and
enter
mov
mov
cwtl
out
push
inc
jno
xor
xchg
and
btcl
stos
leave
cmc
inc
cs
dec
jns
daa
adc
imul
pushf
test
mov
add
push
cmpsl
pop
pop
pop
push
lods
aam
outsb
push
daa
mov
xchg
scas
lea
div
iret
cmpsb
pusha
mov
or
pop
mov
xor
and
sti
mov
jne
add
ljmp
in
hlt
jne
sahf
or
cmp
dec
jo
adc
jp
xor
hlt
cmpsb
int
dec
xor
xchg
cmp
lock
cmpl
sub
lea
add
mov
or
push
dec
in
cmpsb
and
std
xor
jbe
pop
push
and
out
enter
sub
decl
inc
xchg
stos
add
sahf
das
and
push
pop
cmp
shlb
lds
in
movsb
out
outsb
in
push
inc
push
mov
iret
rcl
cmpsl
sub
mov
xor
xor
mov
xchg
int3
insb
cmp
repz
cmp
std
push
xor
mov
push
out
inc
adc
xor
loop
mov
das
enter
pusha
shlb
out
icebp
adc
xchg
pop
mov
sbb
and
lret
out
icebp
jo
fimuls
xor
adc
or
divl
add
jecxz
jmp
mov
adc
ret
push
xor
gs
mov
adc
jg
std
test
and
jnp
clc
push
iret
movsb
ss
cmp
cld
fidivrs
stos
xchg
enter
mov
jg
stos
int
test
pop
inc
idiv
sub
sahf
leave
aad
sbb
ss
adc
sbb
add
out
mov
sub
in
dec
or
cmp
out
cmp
mov
jecxz
dec
lahf
xor
push
cltd
js
jp
lret
lods
dec
rcll
outsl
pop
notb
or
lcall
xor
or
ss
or
pop
jp
paddusw
and
ds
push
jb
out
xchg
mov
mov
xchg
sbb
mov
sub
std
cltd
xor
shlb
pop
lea
push
clc
stc
orb
fwait
rol
rol
sub
mov
and
inc
pop
pop
loopne
iret
mov
jg
test
or
xchg
push
push
jb
into
ret
cmp
sarl
lea
and
jne
xor
outsb
add
add
ljmp
xchg
mov
and
mov
repz
mov
mov
mov
add
pop
push
loope
lret
xor
out
out
dec
cmpsb
adc
aad
in
fdivrl
jae
xor
jecxz
icebp
test
xlat
dec
gs
cld
push
loopne
mov
or
addr16
fstpl
std
lds
xlat
push
push
xor
pop
subl
aad
push
xchg
dec
popf
movsb
push
dec
imul
xchg
mov
jge
mov
cld
sarl
add
push
jne
shll
and
movsl
gs
fld
pop
pop
icebp
shll
jl
sarb
outsl
and
notl
xchg
xchg
movsl
gs
fdivrl
cs
jae
adc
dec
int
in
xor
pop
add
adc
push
or
cmpl
mov
cld
aas
adc
sbb
insl
scas
push
pop
cltd
push
cwtl
mov
in
pop
rclb
xor
pop
ljmp
sbb
leave
sbb
xor
in
pop
lret
imul
xchg
fwait
xor
lock
jl
push
xor
jae
lock
and
sbb
punpcklbw
stc
bound
cmp
je
fcompl
mov
test
sbb
xchg
xchg
aaa
mov
sbb
stc
popa
sub
and
pop
enter
push
icebp
sti
dec
cmpsb
xchg
out
push
aas
mov
loopne
inc
ret
addr16
sahf
inc
hlt
stos
out
add
outsl
test
cmp
sub
clc
pop
mov
push
mov
cli
lret
mov
cld
int3
ret
xor
lods
push
jmp
mov
add
adcb
das
out
cltd
stos
sub
sub
adc
adc
sub
push
bound
sets
pop
outsl
jbe
nop
xchg
sbb
call
pop
jg
mov
xchg
into
hlt
or
cld
inc
ret
adc
cli
and
ret
rclb
jg
mov
sar
cmpsb
in
dec
mov
pusha
outsl
sbbb
ss
sbb
add
cmp
pusha
fcomip
and
insb
imul
jg
xchg
xor
mov
xchg
pop
pop
push
mov
push
rorb
mov
popf
fstpl
testb
jns
push
pop
leave
xor
sbb
fsubrl
mov
dec
lock
jecxz
xor
fiadds
sahf
push
inc
adc
sbb
sti
jnp
sub
data16
notb
cmp
call
cmp
repz
shll
test
popf
jge
lods
inc
js
ret
sub
lods
and
jns
cmp
pop
push
mov
fdivrs
imul
aad
cwtl
out
test
dec
cmp
fcomi
shr
imul
mov
cmpsb
lahf
imul
imul
xor
cld
adc
mov
lods
cmp
mov
pop
lods
mov
iret
or
and
popf
repnz
addr16
shlb
mov
add
xchg
push
sub
pop
adc
test
pushf
roll
insl
jne
add
sub
cmp
sahf
xor
in
imul
enter
sbb
jb
inc
test
fimull
addr16
popa
push
movsl
sub
daa
push
xchg
scas
test
out
clc
icebp
inc
shrb
into
xchg
sub
in
popf
mov
mov
jle
inc
mov
ret
fdivrs
sbb
fnsave
xor
cmp
in
pop
sbb
pop
imul
xor
mov
adc
jnp
xchg
cmp
mov
cltd
xchg
mov
test
inc
loop
in
int
xchg
repz
pop
repnz
nop
test
fwait
scas
ljmp
or
sahf
and
sbb
or
add
mov
sub
out
xchg
inc
inc
jno
jo
jo
rcrb
cmp
fdivrp
outsb
inc
mov
outsl
or
rolb
rorb
shll
mov
out
cmp
adc
loopne
outsl
test
dec
mov
aas
loopne
fbld
movsl
push
adc
and
pop
fistpll
fimull
cmp
xchg
jb
mov
push
aas
sub
mov
jle
mov
icebp
jbe
jbe
inc
add
xor
dec
pop
lret
sbb
int3
add
sub
pop
push
mov
call
cmpsl
mov
decb
dec
push
jb
pop
les
jmp
add
inc
and
lret
mov
push
add
mov
call
fistpl
push
out
lcall
cmpsb
fsubrs
std
push
js
fwait
ret
movl
loope
and
xchg
dec
mov
movsb
mov
lds
nop
mov
addl
adc
scas
dec
dec
mov
jnp
or
jno
jmp
cltd
loop
lods
jbe
lcall
mov
push
adc
mov
inc
xchg
push
jae
add
or
xor
fdiv
mulb
cwtl
ret
int3
in
push
cmp
fbld
push
xor
xor
out
insl
dec
add
cli
pop
adc
out
or
adc
xlat
xchg
lds
pushf
sarl
fcmovnbe
aas
sub
addl
stos
and
xchg
and
mov
fnstcw
in
or
jg
loop
sub
dec
adc
rcrl
and
push
jnp
or
inc
mov
scas
test
mov
xor
mov
lahf
push
xchg
and
stos
lods
es
popa
xor
scas
mov
out
aaa
call
repnz
lods
ja
loope
scas
ss
pop
rorl
mov
lods
or
push
lock
mov
cmp
mov
sbbl
out
lea
jecxz
cli
das
jp
iret
pop
pop
mov
test
aad
outsl
arpl
or
scas
push
ret
loope
andb
cmp
adc
mov
pop
dec
sarl
push
xchg
pop
mov
mul
cld
mov
pop
rorb
sti
pop
mull
cmpsb
jle
std
cmc
sti
in
lret
push
mov
sahf
add
aaa
fwait
cltd
addr16
loope
fs
dec
test
int
hlt
movsl
push
jnp
push
xchg
jl
hlt
mov
popf
cmp
addb
cmpsb
cld
fdivr
fnstsw
push
dec
xchg
lcall
cmpb
les
jnp
sahf
sbb
mov
loop
stos
or
inc
es
add
aam
movsl
mov
push
mov
stc
insb
cmc
mov
incb
sahf
jg
and
cmp
mov
fadd
mov
lds
movsl
jo
loopne
pop
mov
xlat
repnz
jl
sbb
mov
xchg
lahf
je
xor
nop
shrb
pop
sbb
movsb
mov
pusha
inc
jmp
xchg
adc
or
data16
ds
les
bound
xor
jae
pop
adc
hlt
dec
jl
and
les
mov
mov
daa
pusha
andb
adc
mov
push
imul
xchg
mov
mov
adc
mov
push
pushf
jbe
dec
dec
std
add
dec
lret
fwait
ds
mov
ja
sbb
aaa
lret
pop
xchg
shlb
push
mov
shl
adc
push
fwait
call
and
icebp
and
cmpsl
add
scas
adc
push
jmp
mov
mov
pop
jp
xlat
sbb
stos
cmp
pop
out
stos
mov
loop
pop
mov
stos
mov
nop
cmc
xchg
pop
cmp
out
add
add
sbb
testl
imul
jecxz
fcompl
in
aaa
ficoms
sbb
jae
cmp
std
or
mov
inc
loopne
fstpt
pop
cmc
adc
test
aas
sarb
sbb
or
das
mov
pop
sbb
cmp
test
loope
fsubs
mov
mov
jns
call
imul
addb
fistpl
sbb
cltd
xor
xor
and
dec
lret
mov
out
pop
mov
add
or
scas
sub
mov
xor
shlb
hlt
jg
mov
pop
dec
add
frstor
xor
fidivl
adc
pop
jmp
lods
leave
pop
xchg
sbb
daa
stc
fs
enter
stc
data16
jle
cmp
add
add
outsb
add
dec
cwtl
rcrl
dec
sub
jae
loopne
divl
sahf
pop
imul
lock
or
cmp
pop
shlb
rorb
xlat
mov
pop
daa
pop
jb
popf
fildll
xor
xchg
rcl
or
aam
sbb
mov
xchg
sub
push
inc
test
sbb
pop
adc
addl
sti
sbb
mov
jno
mov
lcall
cmpsb
jg
adc
cmc
sbb
cli
mov
insb
cmp
mov
lcall
inc
push
mov
pop
xchg
lock
sub
sub
arpl
in
push
das
int
and
lock
fldcw
cli
out
inc
mov
lret
sbbb
mov
xor
stos
lock
pop
mov
dec
inc
arpl
test
notb
jnp
mov
cld
fsubs
out
addr16
xor
aad
daa
fiaddl
jae
aas
xor
mov
dec
jmp
adc
cmp
mov
lods
std
sbb
into
clc
cmp
testl
pop
mov
inc
in
xchg
xchg
sbb
adc
cmp
mov
push
or
push
rcr
cmp
aaa
pop
xlat
xchg
inc
lods
dec
xor
or
inc
pop
jne
xchg
sti
mov
xchg
xchg
aad
clc
outsb
ja
jb
push
fwait
xlat
je
orb
push
sub
jbe
mov
repz
and
jne
mov
idivb
mov
mov
jo
idiv
daa
pop
mov
scas
popa
lods
cmp
mov
push
or
cmp
stos
insb
mov
inc
lods
icebp
adc
bound
data16
sub
hlt
dec
ret
jns
aad
cmp
int
clc
mov
mov
packsswb
aam
and
stc
or
js
push
push
test
sbb
xchg
ja
dec
cmp
cs
jae
add
hlt
jp
loope
lds
and
jl
fnstcw
sub
outsb
push
cmp
daa
lods
or
repnz
jnp
mov
popa
pushf
orb
ljmp
xchg
add
cmp
jge
xchg
movsb
add
mov
sub
mov
and
pop
jge
or
pop
ret
mov
inc
sbb
and
xor
enter
xor
daa
inc
adc
outsl
scas
jne
cmc
fs
test
xor
and
repz
inc
mov
out
or
sub
fisubl
mov
cmp
cmpsb
mov
aaa
or
push
mov
imul
mov
push
and
and
je
fimull
xor
add
push
mov
inc
jge
mov
push
popa
xor
dec
jg
cwtl
incb
movsb
aaa
push
outsb
mov
sub
push
sahf
lret
shr
pushf
push
aad
push
push
mov
lret
inc
mov
pop
out
xor
pop
mov
push
mov
xor
pop
ss
mov
decb
mov
jb
clc
rorb
stos
and
sbb
imul
pop
js
das
ss
pop
pusha
test
inc
mov
cmp
outsb
push
push
xor
or
xchg
ljmp
jl
mov
inc
sub
push
mov
stos
fdivr
xchg
popl
inc
sbb
cmp
sbb
ja
in
addb
pop
xchg
test
xor
mov
lret
aam
imul
pusha
jno
lcall
jne
das
mov
pop
fistps
jne
daa
cmc
or
sbb
mov
insb
xchg
int
fistl
cwtl
pop
mov
test
dec
mov
sbb
jo
push
xchg
sub
dec
xor
in
mov
popf
test
icebp
loopne
or
mov
or
in
pusha
mov
push
jp
mov
mov
loope
and
pop
jmp
clc
andl
outsb
xchg
xchg
rcrl
xchg
jbe
call
test
inc
popf
stos
mov
fcoml
jge
mov
adc
inc
push
cmp
inc
cltd
and
outsb
mov
movsb
dec
das
cli
xchg
xor
xchg
pop
xchg
jge
scas
lahf
aam
aam
push
in
test
rcll
lods
fldt
push
or
jae
jb
mov
sbb
xor
sub
mov
test
aaa
add
pop
cmpsb
add
aad
sub
icebp
sti
inc
sub
mov
stos
scas
mov
pop
cmp
add
cli
cld
arpl
jae
popf
insl
mov
sub
cmp
dec
add
mov
xchg
in
pop
xor
sbb
dec
scas
in
xor
inc
lret
and
xchg
cmp
call
dec
xchg
pop
mov
out
adc
jnp
imul
std
or
xlat
xor
jle
xor
inc
and
imul
mov
add
enter
roll
pop
sbb
in
or
call
fwait
cmovns
mov
cwtl
fcomip
inc
add
xor
jne
xor
ret
adcl
lock
push
add
lods
sub
sub
iret
xor
jno
add
jmp
movsb
add
setle
pop
enter
mov
fidivrl
idiv
movb
sub
ja
dec
pop
movsl
adc
psubd
lret
daa
mov
mov
xchg
or
sahf
movsl
popf
adc
sahf
sub
dec
mov
push
lea
cmp
sub
cmp
icebp
cmp
mov
dec
jge
sti
push
dec
cltd
mov
add
shlb
imul
jae
js
add
pop
mov
jp
sysexit
and
sbb
add
pusha
cmpsl
fxch
aaa
jp
xchg
sbb
test
mov
adc
and
mov
push
fwait
insb
mov
fs
pop
mov
inc
mov
push
hlt
popf
lock
xchg
out
push
xchg
pop
jg
loopne
cmpb
adc
push
lahf
inc
cmp
dec
mov
add
or
and
mov
or
push
dec
jo
adc
mov
dec
adc
sbb
in
mov
nop
int3
mov
xchg
dec
std
pop
push
pop
loope
insl
movsl
mov
rcrb
das
sbb
push
clc
add
pop
and
mov
ss
test
xchg
sbb
inc
sub
stos
fiaddl
and
jp
xor
jp
ja
sbb
push
jbe
shll
fcoml
or
aad
movsb
in
xchg
dec
lds
add
lahf
ljmp
test
mov
pop
jp
les
xchg
jnp
xor
and
sbb
arpl
inc
aad
xchg
and
adc
stc
lea
pop
dec
ss
arpl
int
lcall
cltd
das
rclb
mov
sub
orb
cmp
adc
stos
movsl
ds
lahf
test
xchg
imul
test
xchg
pop
stos
dec
mov
push
daa
push
jbe
stc
and
inc
jne
pop
or
into
ja
push
daa
xchg
push
je
leave
out
dec
xor
insb
jne
cmp
stos
mov
push
sbb
mov
jbe
or
testb
add
xor
into
and
pop
sbb
mov
xchg
inc
mov
sub
incb
jnp
neg
jns
aas
inc
pop
in
cmp
and
mov
xchg
imul
mov
push
insb
or
pop
nop
notb
cwtl
data16
cld
pop
mov
dec
std
mov
and
daa
sub
into
lahf
push
repz
fcomps
pop
mov
xchg
mov
jmp
bound
mov
mov
pushf
adc
pop
xchg
sub
mov
aaa
sahf
arpl
jge
jmp
push
cmp
inc
pop
xchg
xor
aas
cmp
xchg
into
jbe
jp
push
jbe
inc
lods
pop
pushf
mov
out
inc
scas
jo
push
mov
mov
or
jo
cltd
jnp
cmp
gs
mov
mov
add
sub
fcomi
sarl
scas
clc
aaa
jmp
jnp
sti
cmp
out
add
pop
dec
out
push
pop
and
jae
xchg
cmp
dec
pop
cmpsl
lock
xor
xchg
xchg
fdivrl
push
mov
ror
test
scas
out
push
inc
ret
cmpb
std
jnp
adc
dec
shll
mov
out
and
das
cli
dec
push
decb
pop
pop
xlat
lods
inc
mov
jae
fnstsw
lret
xchg
in
out
lods
mov
test
lock
xor
add
or
test
pop
cmp
sarl
mov
and
lods
push
mov
mov
out
arpl
xor
jmp
xlat
iret
mov
cltd
scas
cmpsb
and
mov
xchg
xor
mov
adc
push
dec
push
sub
incl
xor
mov
jbe
or
pop
lock
or
sub
cwtl
loopne
jecxz
pop
repnz
je
mov
adcl
ret
fldenv
or
push
xor
imul
sbb
xor
push
adc
shrb
mov
test
adc
adc
pusha
icebp
add
adc
or
fidivrs
pop
bound
insb
lret
pop
leave
xchg
into
and
sbb
jecxz
loope
push
jmp
out
pusha
imul
out
or
add
sub
addr16
leave
ds
inc
fs
push
subb
xor
ds
test
jg
inc
imul
jecxz
add
jl
pop
ret
ret
jb
sbb
repz
and
std
dec
mov
and
and
addl
nop
adc
int3
pushf
xchg
push
mov
mov
enter
sbb
xchg
add
push
dec
and
out
cmpsl
adc
fcoms
or
aas
loopne
or
cli
sub
nop
insl
testl
push
xor
addr16
pop
inc
mov
push
or
pusha
dec
xor
sbb
in
ror
pop
xchg
fiadds
push
add
xchg
adc
mov
cmpsl
outsl
lock
pop
cmp
outsl
sbb
insb
hlt
ror
and
mov
je
xor
pop
xorb
aad
lods
jns
or
les
pop
push
adc
pop
add
lock
enter
adc
stc
pop
mov
cli
mov
xchg
addl
lods
ret
inc
xchg
cmp
cmp
dec
and
inc
sbb
data16
push
cmp
imul
clc
push
les
xchg
sub
dec
or
pop
clc
mov
pop
sub
mov
das
lods
sbb
fs
out
enter
cld
ret
xor
mov
stc
sub
mov
xchg
test
stos
jb
cmp
mov
add
push
pop
aas
int
pushf
aam
cs
xchg
popf
shlb
stos
inc
jo
arpl
xchg
cmp
mov
aam
icebp
xchg
sub
cmc
out
outsb
mov
sbb
jecxz
jbe
mov
cli
adc
call
or
fildl
in
cmc
inc
xor
mov
gs
mov
neg
sahf
test
mov
cmp
jne
adcb
push
hlt
jle
pop
add
lcall
pop
xchg
mov
cmpsb
add
movsb
arpl
cmpsb
jmp
aad
add
mov
jno
in
js
setge
and
jp
dec
xor
out
cmpb
pushf
sub
xor
arpl
xor
out
iret
bnd
fs
cli
cmpsb
add
loop
ret
push
sub
fs
jb
push
lret
jp
jecxz
ljmp
es
neg
mov
ljmp
aaa
in
lcall
sbb
cmp
mov
aam
and
and
push
into
pop
mov
int3
fildl
push
fnstcw
mov
mov
jno
add
rcll
ret
cmc
arpl
pop
mov
mov
enter
xchg
decl
jp
and
test
sti
lods
aas
lods
adc
testb
sub
std
inc
addr16
fldcw
fstl
push
fmuls
push
out
ss
cltd
scas
orb
xchg
push
imul
jnp
add
cld
push
and
faddp
leave
xchg
fbld
or
notl
popa
mov
dec
ds
cmp
pop
sub
sbb
hlt
push
loop
cmpsb
adc
fs
xchg
inc
std
lods
popf
sub
inc
cmp
addr16
or
push
dec
inc
rorb
mov
in
and
mov
lock
sub
iret
add
andb
shl
test
mov
dec
sbb
xchg
mov
add
mov
cli
lret
mov
inc
shl
dec
fadds
into
or
adc
dec
push
and
jo
fstpt
icebp
inc
sbb
pop
mov
popa
out
or
testl
sbb
ja
repz
test
cmp
cmpsl
mov
push
psubw
mov
shrb
pop
sbb
daa
imul
insb
ja
push
cli
aaa
xchg
jne
xor
movl
pop
lahf
jp
div
or
mov
fmull
mov
pop
jb
outsl
jge
mov
ret
dec
jle
xorl
loop
rorb
xchg
movsl
scas
sub
cltd
sbb
faddl
jmp
gs
add
jmp
cmp
jmp
xchg
cmp
add
cmpsl
test
jb
aam
test
mov
or
dec
adc
cmp
adc
jne
in
xor
cmp
addr16
mov
outsl
fsub
or
add
ror
fnsave
data16
les
enter
mov
jbe
cli
push
orl
push
lret
jae
sub
loope
repnz
jnp
push
cltd
adc
add
stos
aas
xchg
out
mov
jp
xchg
dec
push
or
dec
push
mov
push
xchg
lret
out
ja
pop
pop
stc
enter
imul
inc
les
daa
or
or
fnstenv
gs
mov
push
scas
mov
fistps
pop
dec
push
cltd
hlt
mov
jb
mov
popa
daa
lds
shrl
cmpsb
fildll
fbstp
xor
nop
sbb
stc
cmp
fsubrl
adc
pop
push
mov
sbb
hlt
leave
lahf
pushf
and
loopne
and
arpl
ja
fxch
mov
inc
sub
inc
pop
jo
out
scas
sbb
mov
inc
pop
rclb
in
test
mov
sbb
std
mov
repz
in
mov
popl
imul
cmp
push
loop
inc
sbbl
lock
sahf
pop
cmc
icebp
jecxz
lods
aas
std
bound
mov
ss
cmp
push
or
mov
cmp
clc
cltd
xor
cmp
cmp
xor
out
out
mov
sbb
ljmp
or
mov
mov
adc
dec
aad
js
jbe
ret
mov
inc
out
jp
mov
add
jbe
jmp
adc
sbb
push
jae
in
pop
inc
outsb
lret
lcall
and
imul
xchg
mov
js
insb
movsl
inc
stos
imul
mov
sbb
xor
loop
bound
call
dec
fdivs
adc
call
lds
mov
subb
mov
xor
xor
jp
dec
js
inc
fcoml
lea
ds
mov
inc
push
movsl
push
jns
push
push
out
iret
sahf
pushf
cmp
popf
push
inc
sub
mov
mov
fwait
ret
xor
rolb
jmp
inc
add
sbb
dec
sub
sub
addr16
mov
sbb
xchg
xor
adc
or
fistps
aas
orl
in
cmp
out
lret
mov
lds
sahf
repnz
cmc
shrb
mov
pop
neg
std
mov
push
xor
pop
in
mov
jb
cli
insb
out
cmp
les
mov
add
mov
push
ret
mov
jnp
jge
xchg
inc
inc
shrl
inc
inc
xor
lods
cld
pop
das
pop
decb
iret
xchg
test
xchg
mov
adc
sub
push
jbe
insb
sub
add
shrl
xchg
pop
pop
je
ljmp
mov
mov
in
in
int3
das
js
frstor
xor
lret
fistl
jns
rolb
out
xor
outsb
shll
out
ret
push
mov
and
sbb
mov
mov
mov
fwait
shll
xor
xchg
xor
xor
decb
lcall
cmp
and
fcompl
pop
int3
sbb
pop
pusha
push
inc
sti
mov
or
cs
sub
scas
xor
out
or
push
es
ss
loope
push
lcall
add
or
dec
mov
dec
xor
adc
jmp
insb
imul
in
jns
add
pushf
push
cmpsl
out
inc
sarb
pop
pop
adc
stos
mov
icebp
les
test
lret
dec
xor
popa
dec
dec
adc
jnp
fidivl
dec
and
mov
out
jnp
push
pop
enter
sqrtps
and
pop
inc
mov
sti
loopne
push
jns
and
mov
les
jne
cld
enter
push
out
ret
test
lods
cmp
out
add
stos
add
mov
loopne
push
test
push
shrl
mov
xchg
adc
cmpsl
xchg
dec
loope
inc
test
aaa
test
jle
sub
sub
dec
adc
test
daa
adc
inc
mov
jbe
cmp
sbb
sbb
fdiv
sub
in
movsb
fimull
xor
subl
rorb
insb
jb
xor
cli
jmp
loopne
sbb
repnz
sbb
push
and
sub
mov
std
push
mov
aam
mov
mov
sub
je
lret
add
add
hlt
stc
scas
cld
adc
pop
mov
adc
pop
mov
aaa
cmp
cmc
les
lods
cmpsl
jmp
jecxz
dec
js
popf
cld
cmp
faddl
mov
cmpsl
lods
and
jecxz
dec
loopne
das
clc
in
jne
sbb
test
xor
mov
dec
pop
mov
and
adc
mov
test
dec
push
popf
insb
inc
or
stos
andb
cmp
mov
cmpsl
xchg
in
push
lea
out
mov
push
rcrl
pop
aas
pop
push
mov
and
xor
sub
jne
pop
cltd
mov
lret
adcb
dec
imul
clc
mov
mov
ds
mov
aam
sbb
rep
repnz
mov
sti
mov
imul
popf
fldenv
sbb
icebp
adc
in
add
adc
dec
mov
dec
lcall
mov
mov
adc
and
mov
xchg
pusha
es
adc
retw
lret
ljmp
cmp
jl
mov
pop
cmp
cld
daa
jl
fbstp
or
dec
cli
lahf
ja
jl
sti
add
lahf
and
mov
xor
and
jnp
mov
mov
add
push
outsb
push
sbb
dec
scas
jno
mov
js
inc
popa
push
loop
js
dec
mov
cwtl
dec
adc
lock
mov
loope
sub
push
xchg
inc
rclb
je
add
ljmp
aad
pop
data16
repnz
jmp
inc
lret
lea
dec
int
jnp
out
inc
inc
rorl
dec
jg
jo
lods
hlt
inc
push
popf
adc
mov
insb
cmp
inc
mov
je
pop
sub
lds
push
mull
xor
jge
add
jne
dec
rcll
add
xchg
gs
mov
xor
push
push
aas
mov
les
shlb
test
xchg
out
aam
and
mov
sbb
jo
sbb
jno
lock
lcall
or
sub
inc
fstpt
lcall
xchg
bnd
cwtl
dec
jns
pop
repnz
aas
and
dec
nop
inc
mov
push
test
push
sar
cli
iret
in
dec
cli
or
adc
mov
sub
mov
or
shl
xchg
repnz
push
push
mov
mov
jae
inc
lcall
fwait
xor
fwait
cmp
lds
fdivs
test
push
xchg
add
sbb
hlt
inc
jbe
xor
inc
addb
jb
sbb
popa
lcall
pusha
lods
test
insb
pushf
js
lret
nop
or
inc
fsubrs
push
adc
mov
cmpsb
daa
dec
and
and
mov
test
daa
cmp
and
hlt
fcomps
in
lret
fildll
loop
xor
stos
dec
sub
mov
xorl
inc
incl
push
loopne
jns
sbb
daa
dec
nop
rolb
push
ss
xor
ljmp
repnz
popa
fst
or
popl
daa
cs
mov
sbb
addl
mov
cs
mov
fdivrs
mov
and
test
mov
popf
pop
dec
into
sbbl
sub
or
out
js
mov
mov
pop
arpl
lds
mov
xor
jbe
pushf
shll
adc
dec
push
repnz
cmp
pop
or
add
mov
cmpb
fimull
jnp
adc
add
pop
mov
into
push
lds
mov
repnz
mov
iret
aaa
jmp
iret
jl
jmp
out
mov
sbb
negl
nop
hlt
aad
mov
mov
hlt
int
in
fidivrl
hlt
inc
adc
add
sub
xchg
pop
js
mov
test
cmp
js
xor
jg
mov
insl
daa
pop
sbb
jge
xor
in
mov
lahf
jg
lock
mov
push
bound
mov
pop
nop
enter
aaa
jmp
icebp
lret
fstps
icebp
jle
ss
mov
sbb
or
mov
mov
insb
or
lret
mov
inc
adc
add
jle
fs
repz
sub
mov
cmpsl
js
divl
cld
cmp
inc
add
sbb
pop
pop
dec
cmp
mov
mov
jb
out
adc
jns
dec
lcall
add
jle
xlat
gs
cmp
fsubrl
cld
enter
fs
cmp
push
mov
pop
movsl
sbb
daa
sbb
mov
jbe
fmuls
xor
cli
dec
xor
in
hlt
push
push
dec
aam
pop
sbb
dec
out
ja
cltd
sahf
add
xor
daa
pop
or
mov
mov
push
mov
or
push
xchg
inc
and
mov
mov
jge
test
scas
pushf
leave
mov
sbb
cmpl
mov
push
pop
ret
aam
into
adc
call
pop
mov
js
aaa
inc
adc
jb
test
sahf
xor
scas
push
xchg
ret
mov
mov
out
lock
dec
aaa
inc
adc
bound
mov
cwtl
fistl
fimull
and
cmp
adcb
sarl
mov
lret
popf
dec
fbld
sub
add
inc
ret
sbb
sbb
fwait
mov
jns
shlb
ljmp
mov
clc
cmpsl
sub
sub
sbb
cmpsb
pop
jecxz
pop
mov
aaa
xchg
cld
andb
xor
popa
int3
cmp
mov
push
pop
push
sub
rcrb
je
pop
lods
or
dec
sbb
test
rcl
mov
jmp
push
and
mov
mov
mov
mov
pextrw
sbb
xor
test
add
aam
add
lods
mov
inc
xor
or
or
fidivrl
fildll
mov
mov
addb
sbb
xor
and
cmp
add
stos
ss
push
cmp
mov
aas
data16
addl
xchg
je
push
pop
dec
fisubrl
in
jmp
test
sub
pop
sub
sub
cld
push
sbb
add
xor
push
orb
inc
fdivrp
and
lahf
rcl
dec
xor
dec
mov
adc
icebp
popa
jecxz
adc
jmp
loopne
sbb
ss
inc
cmp
or
jns
shrb
push
in
mov
mov
or
idiv
sbb
in
popa
mov
inc
fsubs
filds
cmp
xor
pop
loopnew
mov
mov
push
mov
dec
jp
xchg
xor
gs
stc
inc
xlat
mov
jno
push
int3
jmp
sub
outsl
jae
xchg
imul
fcoms
add
scas
xchg
or
mov
cmpsl
cmp
test
sbb
pop
push
loope
mov
addb
jae
xor
loope
mov
pop
cmpb
jge
dec
adc
ret
insl
xchg
add
or
ds
mov
push
push
int3
in
call
cmp
addr16
adc
push
lds
push
mov
fstp
fisubl
cmpb
idiv
sub
sub
xchg
inc
cmp
cmpsl
out
into
sbb
jecxz
orl
cmp
push
inc
mov
xor
mov
adc
fstpl
adc
and
int
sub
jbe
adc
sbb
mov
cmpsb
fildl
inc
aaa
xchg
scas
insb
adc
fsub
loope
lahf
into
insb
mov
imul
pop
not
dec
sbb
push
and
ja
ret
seta
jnp
jle
mov
mov
dec
ja
adc
lods
repnz
dec
fstl
mov
andb
lods
pop
lods
stc
movsb
pop
sbb
fistl
xlat
mov
mov
lods
mov
sbb
loop
and
hlt
mov
jnp
fcmovu
inc
shlb
into
push
fdivs
cmpsb
insb
jle
mov
es
add
out
mov
and
cmp
cmp
inc
mov
lds
and
pop
or
in
lods
cmp
xchg
jecxz
les
push
push
pop
fdivs
pop
mov
jmp
mov
icebp
or
xchg
sub
dec
imul
mov
cs
loope
sub
inc
pop
mov
in
andl
fs
xchg
aaa
lcall
int3
jns
push
inc
mov
sub
jecxz
movsl
jb
les
add
test
ds
popf
cmpb
xchg
pop
popa
push
jmp
adc
shlb
dec
dec
das
in
push
xchg
rol
sub
cmp
sbb
ja
dec
ds
mov
add
loop
mov
pop
fsubrl
inc
int
push
pop
ss
mov
loopne
mov
or
push
pop
popa
xchg
adc
in
repnz
aad
add
mov
aad
xor
inc
movsl
jno
jb
mov
and
jmp
dec
fcompl
faddl
sub
push
andl
mov
inc
je
dec
sbb
mov
cltd
arpl
push
mov
pop
popa
gs
or
xor
xor
mov
jl
add
sub
inc
mov
fcomp
negb
je
inc
mov
or
lods
push
xchg
pop
sub
mov
or
testb
push
in
lock
insl
mov
xlat
xor
jp
or
cmp
adc
push
std
rolb
pop
sbb
xchg
cmp
arpl
sarb
lahf
ds
mov
cmp
lock
fimull
mov
xchg
daa
test
loop
lret
push
mov
cmp
adc
imull
fadds
popa
je
ja
lock
push
cmp
imul
cmp
pop
popf
test
or
inc
inc
roll
or
cmpsb
cmpsl
loopne
mov
sbb
push
addr16
mov
data16
sahf
out
inc
popl
push
sub
ret
add
aad
lods
test
xor
out
jnp
jbe
cmp
sarb
popa
jl
push
test
cmpxchg
stc
cmpb
notl
sbb
pop
push
lods
inc
jns
aam
cmp
ds
sub
xchg
dec
xlat
insl
out
inc
push
iret
lea
lods
jb
test
fsubl
std
mov
sub
dec
stos
ffreep
or
push
pop
or
outsl
xchg
movsl
add
mov
stc
test
dec
push
aaa
arpl
rorl
sub
cli
test
fdivrl
mov
or
lods
pop
jle
adc
pop
sub
test
fldcw
and
xchg
scas
imul
jne
xchg
adc
cmp
into
push
dec
xchg
mov
inc
movsl
or
js
shll
mov
js
call
fldenv
enter
or
mov
sbb
xchg
ret
xor
or
mov
xchg
inc
pop
push
xchg
subl
cmp
pop
sbbl
push
pop
inc
int
lods
pushl
int
mov
or
cmp
and
adcl
repnz
push
add
lahf
jnp
inc
fcompl
cmpsb
inc
lret
popf
and
mov
pop
and
aam
out
int
dec
xor
test
sub
inc
rolb
lcall
subb
cld
pusha
std
clc
push
lea
push
cltd
imul
repnz
push
or
adc
lock
add
dec
mov
ljmp
mov
dec
jb
roll
jg
call
shl
lcall
leave
mov
xchg
ss
dec
aad
gs
out
orl
jo
xor
push
sub
bnd
flds
mov
loop
mov
mov
lods
add
cmc
xor
sbb
push
adc
cmp
repnz
pushf
push
pop
mov
repnz
mov
in
mov
mov
iret
mov
and
jbe
mov
lock
imul
mov
mov
stos
and
pop
test
inc
cwtl
test
in
icebp
jl
cmpsb
loop
and
lods
cmc
in
and
cmp
mov
jl
jg
dec
mov
repz
adc
xchg
clc
fisttpl
push
and
ljmp
insb
dec
mov
cmpsl
ffreep
or
mov
call
repz
negb
sbb
nop
lock
ja
or
pop
insl
scas
adc
imul
out
out
loope
mov
push
inc
and
adcl
ret
mov
lahf
jecxz
cmpsl
std
daa
sbb
xchg
mov
mov
push
nop
negb
repz
and
jle
push
xchg
xor
pop
adc
repnz
inc
lods
ss
repz
pop
fsubs
adc
js
mov
aam
jnp
inc
jns
fcoml
stos
adc
pop
adc
xor
popf
out
push
stos
inc
adc
xor
pop
ret
push
pop
fs
out
imul
fidivrl
outsl
mov
pop
pusha
mov
pop
mov
shll
ljmp
stos
fildll
pusha
icebp
xchg
xchg
xlat
jle
sti
call
and
inc
mov
cmp
or
xor
cmpsl
mov
test
mov
and
pop
das
mov
sub
jns
aas
iret
pop
je
lcall
int
xchg
movsl
pop
cmp
pop
test
sarl
sarl
movsl
outsl
push
xchg
lds
xchg
frstor
popf
fcmovb
lcall
stos
xchg
jb
popf
or
add
add
jge
sbb
in
mov
ja
cmpsb
fs
xchg
repz
xchg
mov
sarb
out
dec
inc
stos
call
sub
jbe
out
add
mov
icebp
inc
pushf
les
and
mov
fdivs
shll
in
aaa
popa
pop
sti
push
xchg
fdivs
stos
sub
jl
xchg
push
xchg
shl
jno
insb
cmp
subb
fbstp
xlat
and
popa
in
add
inc
xchg
jge
aaa
jns
inc
cmp
or
insb
sub
mov
out
and
xchg
lds
and
mov
jp
dec
mov
outsb
xchg
push
pushf
sbb
add
jg
into
repz
mov
cmp
xchg
dec
pop
mov
mov
fwait
push
xor
adc
add
les
push
adc
xor
repz
push
dec
add
xchg
push
mov
xchg
and
xchg
loop
jne
mull
addr16
shrb
mov
cmp
pushw
out
mov
jb
gs
mov
mov
adc
mov
rclb
popa
mov
movsb
push
mov
mov
jae,pn
shrb
insl
cld
mov
jne
sarl
pusha
in
mov
dec
stc
mov
fsin
test
mov
mov
add
sti
mov
arpl
jae
mov
sbb
cmp
sbb
pop
movb
inc
je
popf
daa
idivl
rcrl
int3
les
out
add
xlat
cli
test
fidivrs
mov
fstpt
imul
cmp
push
mov
dec
in
cmpsb
jo
fisubs
fwait
imul
mov
sub
lods
mov
mov
fsubs
aaa
mov
push
cwtl
jp
sbb
push
movsb
icebp
iret
out
stc
rol
movsb
int
pop
loope
stc
add
bound
dec
pushf
add
add
pushf
insb
iret
pop
inc
ds
lret
mov
push
push
inc
sti
and
mov
inc
aas
lret
fs
sub
sub
pop
mov
and
mov
not
call
shll
add
pop
dec
stc
fwait
sahf
xor
mov
adcb
fcoml
ds
pop
inc
pusha
std
jl
cs
int3
fisubs
sub
bound
dec
mov
loope
add
cmp
inc
sbb
fstpl
cmpsb
nop
lret
adc
imul
arpl
sarl
pusha
dec
push
outsb
xchg
inc
lock
push
mov
notb
fnstenv
lret
lea
jmp
lret
push
push
arpl
xor
push
out
popa
fsin
mov
push
cltd
test
incl
sub
jp
inc
pop
fsub
test
es
clts
dec
roll
mov
jp
nop
adc
jl
mov
rcrl
shlb
fs
out
xchg
int3
xlat
push
push
js
pop
cmp
sub
jb
mov
sub
sub
mov
scas
popf
pop
sti
dec
cmp
pusha
jbe
dec
repz
inc
nop
test
or
mov
mov
or
test
sub
add
clc
cmpsl
sub
inc
xchg
cli
aam
movsb
ja
sbb
jb
sti
sub
dec
sub
testb
mov
cwtl
loope
arpl
leave
mov
leave
add
xlat
lahf
cmp
dec
enter
pop
jne
inc
sbb
xchg
pop
mov
inc
scas
xor
iret
adc
xor
pop
and
push
xchg
mov
xchg
inc
mov
outsl
jl
jns
sbb
sub
rorb
or
mov
cmp
push
xor
ret
xchg
cmpsb
outsb
cs
push
push
xor
loop
fsub
aad
mov
inc
js
js
mov
cmc
cmc
scas
add
pushf
pusha
or
fdivp
dec
out
das
push
scas
inc
lcall
mov
shll
btc
push
jno
arpl
jo
pop
loop
inc
enter
mov
sbb
jg
les
adc
add
fwait
mov
insl
mov
addr16
call
fadds
mov
or
push
fwait
xchg
jmp
add
pop
rcll
push
sbb
mov
inc
aad
cmp
mov
jne
mov
dec
xchg
or
std
idivl
popa
mov
jmp
ret
lods
xchg
mov
repz
mov
or
and
loopne,pn
nop
lret
inc
movsl
lret
cwtl
movsb
push
cld
sahf
inc
sbb
sub
fwait
pop
mov
sub
scas
or
adc
xchg
icebp
add
insl
pop
in
mov
aas
pop
mov
lock
cwtl
mov
jns
jnp
sbb
add
add
mov
bound
mov
jmp
adc
mov
jb
addr16
sub
adc
inc
stos
mov
dec
jbe
xchg
add
push
loope
cmp
nop
mov
leave
cmc
scas
fdivr
push
ss
sub
mov
add
push
lock
or
imul
int3
rorb
mov
inc
data16
pop
cwtl
cwtl
push
adc
lock
std
mov
pop
jno
clc
push
xchg
cmp
clc
in
and
add
xchg
mov
mov
pushf
push
int3
movsb
ret
ret
icebp
pop
movsb
fcoml
testb
or
fisttpl
repz
pop
inc
push
mov
inc
test
test
lret
in
dec
in
fldt
rcl
mov
into
bound
call
mov
dec
stos
daa
out
into
test
and
dec
inc
push
xorb
cmp
mov
add
ret
sbb
in
aaa
in
dec
lds
mov
pop
stos
dec
je
lret
push
in
cmp
sbb
push
aas
cvtpi2ps
aaa
sub
loopne
mov
cmc
mov
pushf
xchg
outsb
cmp
adc
int
enter
sbb
dec
in
push
sub
aas
sbb
lods
mov
pop
and
jnp
push
and
xlat
imul
xchg
cwtl
pop
call
loope
ds
cli
mov
lea
repnz
jb
jno
leave
pop
and
inc
in
addr16
insb
imul
stos
ror
sub
dec
loop
dec
push
sub
enter
sbb
xorl
fucomi
test
pop
sbb
xchg
push
rcrl
dec
sub
or
sbb
pusha
fmul
push
adc
enter
sub
outsl
icebp
jmp
movsb
leave
divb
push
dec
cltd
pop
sbb
mov
cli
sti
inc
in
enter
push
jg
mov
cmp
xchg
loop
aam
and
cwtl
pop
pop
fstps
cmpb
pop
cmpsl
cmp
js
popa
and
shrb
sti
cld
jmp
std
repz
xchg
cmpsl
stos
pop
in
ja
rcrl
cmp
repz
daa
push
mov
dec
mov
jno
cltd
sub
jecxz
rclb
loop
data16
cmp
ret
inc
testb
minps
mov
jecxz
and
mov
sbb
push
mov
test
adc
jecxz
aas
imul
jb
add
incl
lods
movsl
pop
test
xchg
out
ss
les
push
lahf
ja
sub
addb
andb
sub
stc
dec
add
fmul
jbe
imul
gs
je
dec
cld
shrl
push
testl
push
inc
add
mov
loopne
sub
mov
cltd
sbb
je
gs
orl
rcr
mov
lock
jg
in
mov
xchg
js
sub
stos
shl
ja
lds
fnsave
shrl
add
mov
push
loop
pop
loopne
fistps
dec
adc
inc
insl
cmpsl
xorl
loope
pop
mov
mov
and
ret
and
add
popf
jg
xchg
jg
stos
push
pusha
mov
cmp
repz
enter
xor
clc
mov
sub
cs
sbb
pop
repz
fidivl
jne
sub
mov
mov
out
insb
jge
xchg
push
cltd
adcl
fmuls
jno
out
add
cmc
xor
cmpsl
shlb
fdivrl
into
push
inc
es
jg
jg
push
popl
and
lahf
popf
or
scas
andb
add
lret
jecxz
push
sub
inc
dec
js
test
sbbl
xor
loopne
lcall
pop
xor
jne
dec
test
fimull
aaa
fwait
dec
push
jo
jecxz
add
mov
es
mov
sub
or
rolb
ljmp
or
dec
lods
imul
ljmp
lcall
dec
fsubrp
pop
and
push
pop
jb
test
in
fisubrs
cmpb
mov
or
lds
and
mulb
stos
aam
sub
leave
scas
sbb
xchg
ss
mov
mov
in
rcrl
push
inc
test
outsl
std
call
test
or
test
dec
lds
mov
mov
loop
bound
mov
inc
mov
and
sahf
xor
mov
rolb
lcall
jnp
std
dec
int
inc
sub
pop
push
mov
scas
mov
pushf
hlt
xchg
xlat
add
clc
push
mov
and
xchg
jbe
inc
hlt
fnstenv
lret
loope
inc
lcall
mov
add
cld
sbb
mov
sahf
cwtl
clc
mov
jne
xchg
loop
and
in
js
orb
arpl
push
sub
imul
mov
mov
add
loopne
inc
pop
int3
rclb
mov
into
int
cmc
inc
inc
adc
mov
stos
stos
loope
lock
and
repnz
test
lods
dec
inc
ret
outsl
ds
lret
mov
in
mov
mov
lahf
xor
leave
shr
push
flds
jae
into
mov
mov
xor
push
fwait
sub
adc
mov
arpl
leave
stc
xchg
xlat
dec
movq
xchg
pop
sbb
add
xor
xchg
pop
in
movsb
mov
test
sbb
cmc
call
out
adc
aas
dec
sub
xchg
mov
push
ret
lret
dec
or
lock
adc
adc
adc
inc
loop
fidivrl
pop
jne
cld
push
or
je
sub
scas
roll
sub
jmp
out
xlat
adc
out
incl
sub
xchg
shl
sub
loop
mov
pop
mov
sbb
sti
pop
mov
or
out
mov
dec
mov
ror
push
div
stos
test
pusha
rcrl
mov
je
test
or
adc
xchg
fldl
movsb
out
mov
sahf
inc
mov
aaa
sbb
cmp
iret
xchg
aas
jge
add
or
inc
shrl
daa
jo
je
push
mov
scas
nop
add
cmc
mov
cs
inc
rorl
cmp
and
push
and
inc
xchg
out
jge
stos
inc
or
pop
movsb
cli
lds
adc
psadbw
push
lock
xlat
mov
mov
and
stc
pop
push
cmp
popl
mov
mov
push
and
out
cmp
js
adc
add
xor
sub
adc
adc
xchg
cmpb
dec
xor
jb
fnstcw
pop
jmp
pop
jae
imul
clc
pop
push
stos
xor
rcr
push
sbb
mov
fcomp
jp
pop
adc
lods
add
or
pop
cmp
fisubl
cmp
in
mov
rolb
mov
fisubs
push
bound
mov
cwtl
decl
scas
xchg
in
sub
rorl
add
pop
add
stos
lcall
cs
cmc
mov
test
out
push
pusha
insl
and
pop
stos
lcall
mov
leave
cmc
jle
push
jmp
lret
insb
sub
jns
or
loope
test
fisubl
test
sbb
pushl
shrl
into
clc
and
inc
les
roll
pop
repnz
mov
and
rorl
jae
andl
mov
cli
call
ja
call
sar
mov
pop
test
push
ds
add
add
jp
lods
xchg
xchg
cltd
mulb
js
and
test
test
insl
out
sub
icebp
inc
into
xchg
push
test
scas
or
dec
mov
pop
loop
mov
inc
daa
sahf
mov
insl
ljmp
xchg
push
popa
js
jp
push
in
movsl
sub
ret
xchg
lods
repnz
imul
test
rcrl
pop
mov
cmp
xchg
movsl
adc
and
cs
jl
mov
and
adc
push
cmp
fwait
dec
test
adc
cmpsb
fildl
pop
outsb
cmp
jbe
cmp
add
sub
cmp
jp
gs
sbb
test
xor
or
sbb
and
sti
into
dec
jae
call
ficoml
test
jecxz
aaa
fstpl
mov
xchg
mov
pop
lds
into
mov
xchg
mov
mov
pop
insb
mov
arpl
ljmp
xorl
shl
sub
out
adc
rorb
xchg
ret
or
inc
daa
add
lea
rcll
pop
mov
ret
bound
mov
add
sahf
outsb
lds
dec
arpl
mov
xchg
or
pop
popa
mov
xchg
divl
inc
adc
and
ds
inc
rorb
lock
stos
sti
mov
jo
enter
cld
in
dec
repz
das
add
leave
inc
ret
push
rolb
or
xor
mov
push
cmp
mov
imul
clc
adc
adc
jne
pop
push
dec
mov
pop
cltd
cmp
mov
push
pop
int
mov
outsl
repz
in
pop
lret
addr16
mov
and
inc
push
or
push
cmp
dec
xor
lock
cltd
mov
in
inc
push
aaa
or
push
mov
push
rolb
jns
inc
or
test
lds
mov
inc
or
loopne
outsb
push
mov
stos
push
enter
cltd
mov
cs
std
jne
and
mov
aad
mov
das
mov
fsts
xchg
xor
xchg
shrl
cmp
sub
dec
mov
je
jnp
push
dec
stc
lea
jns
negb
enter
xchg
mov
mov
jp
shlb
lock
mov
ret
or
ljmp
xchg
mov
lods
std
test
iret
fildl
inc
lods
xor
int3
aad
jmp
cs
push
fiadds
push
adc
mov
xchg
jne
lahf
jle
enter
cld
lods
stc
sti
add
pop
negb
mov
xchg
dec
inc
data16
out
cwtl
mov
jg
addr16
idivb
add
adc
push
mov
cmp
aam
jg
cs
lcall
xchg
aas
mov
pop
mov
js
sub
mull
pusha
xor
aam
mov
cmp
dec
popa
addr16
fstpt
pop
push
ficompl
sbb
mov
testb
xchg
pusha
mov
lret
jns
mov
xor
das
xchg
jmp
or
xor
inc
push
nop
shlb
es
cltd
and
lea
or
repnz
inc
subb
ror
mov
jmp
mov
adc
gs
cmp
cld
lea
add
xor
pop
jnp
mov
lahf
lret
or
div
rcll
and
cli
dec
lret
aaa
fisttpll
shll
fsts
xchg
push
aam
push
sbb
movsl
jecxz
and
jecxz
pop
jp
pop
sub
push
inc
and
pop
xor
out
adc
cmp
mov
pop
jecxz
cmp
imul
pop
sbb
and
jecxz
pop
push
and
xor
icebp
outsb
mov
sub
popf
xor
jle
es
push
out
mov
xchg
and
or
enter
sub
push
xor
push
pop
popa
xor
stos
pop
add
mov
sbb
sub
int
lret
or
stos
movsl
sbb
and
stos
pop
xlat
push
fnstenv
das
ret
fnstsw
sub
xchg
sbb
adc
rorb
inc
pop
sahf
sub
inc
fmuls
fildl
push
mov
or
mov
cmp
jne
data16
repnz
das
push
mov
popa
add
push
fidivs
insb
mov
cli
aad
jle
scas
sbb
lods
push
in
sub
pop
sbb
clc
xor
sbb
fcompl
inc
jl
shrl
rcr
aam
inc
icebp
pushf
inc
push
iret
std
test
add
jmp
aas
arpl
cs
cmp
fisubl
inc
idivl
loop
scas
jecxz
fnstcw
push
xlat
jg
inc
cld
dec
dec
aas
mov
cmp
mov
ret
sub
push
cmp
aas
mov
add
xchg
mov
push
mov
sbb
out
cwtl
cmc
aam
gs
mov
mov
mov
repnz
jle
push
loope
dec
scas
dec
dec
mov
mov
pusha
inc
cmp
dec
xor
pop
lds
cmp
test
mov
mov
dec
adc
inc
fwait
lret
pop
aam
not
jns
fstl
bound
in
adc
xchg
pop
lea
jmp
repz
mov
cmp
pop
fsubp
mov
inc
adc
mov
js
aad
inc
enter
and
pushf
adc
out
push
add
aas
ja
lea
cld
dec
sbb
cmp
mov
push
jnp
mov
cwtl
mov
or
mov
dec
mov
lcall
push
lret
cmpsl
xchg
xorb
aas
push
inc
mov
xchg
cmp
or
sub
dec
inc
into
lret
ja
pop
sub
out
xchg
addr16
sub
testl
sub
add
mov
push
leave
push
or
xor
aad
jp
jae
aad
stos
dec
xlat
sbb
scas
or
and
cmc
mov
xchg
insb
outsl
sarl
jo
fistpl
out
repz
jno
pop
mov
xor
cltd
push
mov
int3
mov
cmp
decb
add
inc
ss
inc
push
add
sub
fsub
xchg
fsubs
jp
pop
jge
test
ret
lods
imul
andl
shlb
aad
test
adc
insl
fistpll
je
add
cmc
rcrb
ss
sbb
aaa
cmp
fwait
stos
int3
adc
push
mov
aad
loope
insb
jp
es
cmpsl
pop
xor
lret
out
lcall
inc
lods
aam
pusha
mov
mov
dec
pushf
mov
cmp
xorl
xchg
test
js
xchg
insl
nop
pop
push
lods
in
lock
push
or
sbb
hlt
and
dec
add
outsl
sub
dec
mov
imul
push
out
call
pop
add
ficomps
xor
pusha
inc
fwait
mov
mov
outsl
jbe
lret
mov
insb
sbb
out
repz
adc
inc
cmpsb
and
out
sbbb
mov
enter
pop
sub
push
mov
arpl
push
or
mull
out
out
mov
outsb
fsubrs
out
andb
popf
and
aad
loope
pop
push
jne
or
mov
aas
lret
repnz
lahf
dec
dec
jne
in
sbb
test
das
dec
fsubrs
xor
aam
aas
popa
mov
inc
lods
andb
mov
movsl
sbb
jae
pop
pusha
int3
in
outsl
push
add
cmp
arpl
pop
add
xchg
pushf
sbb
push
xlat
iret
inc
xchg
pop
sub
imul
add
shll
sbb
jbe
cmp
jnp,pt
movsl
aas
scas
call
push
cwtl
push
aam
je
jmp
stos
cmp
push
pop
test
xchg
and
mov
cmpsl
pop
lcall
cmp
mov
and
xchg
lret
fnstcw
scas
ret
out
jo
inc
mov
xchg
testl
and
mov
gs
jne
xchg
enter
cli
mov
mov
outsl
popf
dec
arpl
jns
sbb
xchg
in
daa
mov
fwait
mov
ds
into
add
dec
xchg
mov
hlt
mov
pop
shrb
xchg
and
lock
movaps
and
out
or
mov
push
icebp
andb
jmp
pop
mov
jbe
or
xchg
addr16
loopne
call
scas
jecxz
jge
testb
xchg
adc
jge
iret
push
jno
sahf
ds
push
mov
mov
add
int
lret
fdivs
fsubrp
cmp
cmp
mov
and
inc
lods
mov
repnz
adc
dec
iret
jp
sarb
andb
icebp
or
hlt
push
pop
fucom
mov
fnstcw
mov
or
dec
xchg
les
add
mov
pusha
xchg
inc
or
dec
push
sar
testb
pop
jb
in
add
mov
lock
bound
les
sbbb
and
stc
jg
mov
call
and
xor
ljmp
jnp
jle
mov
dec
and
loope
and
lret
lock
daa
fldl
cmp
jae
cs
pusha
in
mov
add
xor
scas
lahf
ds
mov
pop
add
adc
xchg
jae
aaa
adc
pop
insl
mov
inc
xchg
ljmp
add
mov
cmp
out
or
shlb
out
push
jge
jl
xor
ret
daa
jmp
cli
outsl
push
adc
es
loope
inc
ljmp
pop
xor
jp
enter
or
aam
int
or
ds
add
daa
scas
sbb
iret
lcall
xor
lret
push
popf
mov
adc
pop
lret
push
xorl
std
jne
cmp
arpl
push
or
addb
mov
int3
rol
cwtl
dec
lds
clc
testb
and
adc
leave
rcll
and
das
loope
xchg
jecxz
arpl
roll
or
cmp
inc
or
push
jp
sahf
jae
loope
ds
xchg
xor
in
adc
addr16
jno
mov
stos
jg
in
into
ljmp
xchg
adc
repnz
mov
out
mov
pop
test
pop
fldcw
ds
xchg
mov
or
xchg
mov
xchg
cli
rorb
cltd
fmul
xchg
and
dec
add
enter
test
jne
mov
gs
ret
es
scas
mov
cmp
cli
adc
adc
inc
fcmovnu
dec
jle
push
xchg
out
xchg
mov
data16
imul
mov
jbe
jno
shr
lea
loope
pusha
mov
nop
ljmp
jmp
inc
and
mov
sub
shl
cltd
lods
loope
push
pop
push
and
xor
int
sarl
cmp
clc
rorb
push
jmp
andb
inc
popa
stos
xchg
cmpsb
popa
out
inc
insb
les
xor
adc
das
push
mov
xchg
xchg
fstps
xor
mov
sub
shr
nop
sbbl
jle
outsl
and
rcl
cmp
lret
cld
fsts
mov
ror
shlb
sbb
arpl
mov
pop
pop
cmp
pop
aam
push
xchg
push
shlb
popa
mov
fidivs
cli
jmp
inc
push
into
rorl
inc
pop
pop
aad
xchg
imul
push
subl
pop
jnp
push
stc
push
add
and
mov
int
jo
jle
xlat
mov
sbb
and
enter
popa
add
lea
test
decl
jno
ss
sbb
sub
and
pop
inc
xor
push
sub
xchg
xor
in
pop
imul
push
cmp
jmp
sub
aaa
es
adc
push
lret
sub
or
jb
sbb
outsb
sbb
jge
mov
dec
push
push
das
cmp
jecxz
dec
jecxz
push
jo
jg
cmp
add
into
int
pop
fisubrl
jb
lock
jg
sbb
pop
push
test
pop
jno
jmp
hlt
cltd
insl
or
std
ret
dec
mov
xor
aad
xchg
cld
push
in
mov
ss
and
cld
xchg
or
sbb
mov
inc
int
outsb
hlt
mov
inc
scas
fadd
mov
or
cs
xor
aad
mov
int3
cwtl
icebp
dec
lret
in
fdivs
sbb
xchg
arpl
and
xchg
xchg
shlb
cmp
cld
cmp
ret
fbstp
push
mov
jmp
lcall
or
push
in
and
stos
and
sarb
aam
cmp
nop
nop
clc
xchg
jne
inc
xchg
cmp
jmp
shll
aaa
cmp
clc
mov
ja
dec
sub
ss
cld
mov
cmc
inc
and
pop
popf
jns
mov
pop
fstpl
scas
mov
shlb
scas
mov
js
jae
xchg
or
mov
mov
fs
andb
dec
lret
ljmp
cmp
pop
mov
test
test
mov
mull
fisttps
lret
loop
je
xchg
and
ds
pop
in
dec
mov
loop
mov
push
adc
dec
add
outsb
dec
pop
fcmovnbe
outsb
sub
and
insl
popl
dec
mov
jo
mov
gs
fmul
jae
mov
xchg
into
sub
adc
mov
sbb
cltd
out
ficomps
mov
mov
jno
jle
sbb
cmp
push
aas
fnstsw
mov
popa
int
lock
ss
shll
adc
movsb
inc
xchg
xchg
sbb
int
sub
cltd
decl
fldenv
cmp
push
jge
xor
push
sbb
dec
jg
fs
negl
stc
and
push
ljmp
in
loop
xchg
mov
push
cwtl
add
into
mov
scas
into
pop
fiadds
xor
and
lahf
mov
dec
std
pop
adc
cmp
sbb
pop
pop
push
fnstenv
fidivrl
xor
sbb
pushf
add
repnz
jmp
add
das
divl
add
sub
push
out
ret
push
idivl
loope
adc
push
xor
js
jo
xchg
xchg
push
test
mov
add
dec
clc
leave
scas
sub
dec
bnd
mov
pop
push
jbe
repnz
mov
stos
pop
lods
das
jge
stos
jb
outsl
lock
lods
or
and
shrl
test
pusha
into
add
popf
lcall
shll
jnp
mov
outsb
lods
add
insl
out
xchg
mov
sub
movsb
sahf
xchg
adc
popa
pop
mov
fsub
dec
insl
xchg
mov
xchg
mov
stos
or
add
sbb
jns
dec
mov
and
adc
adc
mov
jae
bound
in
adc
or
lods
mov
jge
xchg
xchg
adc
pop
xchg
rolb
mov
pop
loop
fs
push
jnp
scas
or
daa
subl
insb
mov
sub
shrb
les
sub
into
adc
mov
xor
add
mov
pushf
xchg
daa
es
cmp
push
testl
pushf
sbb
pop
push
in
addl
cli
clc
adc
push
xor
mov
loopne
mov
or
popf
lahf
lret
shll
adc
inc
fneni(8087
add
aam
xchg
jecxz
pop
mov
xor
mull
and
mov
inc
sarl
sub
scas
push
mov
dec
inc
mov
dec
fwait
loopne
pop
pop
daa
jg
mov
ss
mov
jmp
test
pushf
pop
out
dec
popa
push
or
sbb
insl
or
in
or
or
loop
jne
mov
jne
addb
push
xchg
gs
cmp
stos
popf
jg
adc
pop
xlat
ret
aaa
repz
cmp
dec
je
test
flds
xchg
mov
nop
or
and
out
imul
in
sub
std
mov
xchg
iret
mov
dec
stos
int3
movsb
jno
pop
je
dec
aas
push
pusha
sub
lcall
pop
and
mov
test
jge
mov
sub
cmp
cmpsb
add
jo
push
or
mov
push
insl
cmpsl
shlb
sub
jo
and
icebp
ret
test
cltd
sub
and
or
dec
push
dec
divl
hlt
pop
ret
hlt
inc
add
ret
cld
mov
or
or
mov
jne
mov
repnz
sahf
ficoml
imul
add
push
lret
rcr
mov
and
scas
add
popf
sbb
add
sub
sbb
inc
cmp
add
pop
test
inc
data16
out
stos
mov
dec
inc
xor
cld
push
xor
mov
hlt
mov
shlb
mov
or
pop
lods
sahf
cmp
aaa
mov
inc
jg
lock
sbb
mov
incb
jg
push
imulb
sub
fsubs
mov
dec
scas
cmpsb
cmp
jecxz
push
xchg
and
stc
mov
cmp
sub
leave
sub
adc
pop
lcall
mov
pop
pop
mov
mov
popa
mov
es
cmc
inc
push
xor
xchg
fbld
into
push
pop
cmp
xchg
rolb
mov
pop
adc
jmp
push
jle
jb
inc
fmul
jmp
repz
cmp
xor
ss
push
dec
sub
ret
iret
call
sbb
stos
repz
pop
ja
ret
and
leave
pop
lods
push
mov
sti
sub
fstpt
adc
jge
cmp
push
and
bound
test
cmp
pop
test
out
inc
mov
mov
pusha
dec
inc
popa
ret
es
mov
imul
mov
sahf
lods
mov
loopne
mov
fwait
mov
test
sbb
ret
inc
cmpsb
subb
mov
sub
mov
jnp
inc
lods
mov
push
enter
or
mov
lds
inc
add
pop
movsb
das
jecxz
push
dec
das
dec
xchg
push
adc
dec
call
leave
pop
sub
jbe
loopne
lret
cli
cld
pushf
int3
into
cmp
sub
dec
ja
lret
test
stos
in
subl
adc
in
mov
test
sti
mull
push
imul
sbb
mov
in
ret
sub
fisubrs
mov
ror
out
je
sub
adc
xlat
jmp
xchg
mov
and
bound
lcall
out
lods
dec
mov
push
rdtsc
xlat
andl
adc
jmp
lret
jmp
pop
lea
pushf
pop
jle
shll
mov
cmp
je
jnp
sub
xor
inc
pop
mov
mov
fcompl
loope,pt
je
jnp
shll
lea
mov
fisubs
aad
pop
xchg
out
sub
dec
xchg
sahf
push
popa
popf
lea
add
imul
daa
lods
pop
popa
in
cmp
pop
popf
ljmp
shrl
popl
jne
shrl
fistl
pop
in
pop
pop
or
push
test
xchg
pop
cld
xchg
sub
mov
add
sub
mov
pop
or
inc
lret
xor
imul
mov
cmpsl
sub
xlat
hlt
push
insl
cli
xor
jge
sbb
sti
gs
call
xor
aas
jg
dec
push
ja
pop
repz
loop
fiadds
faddl
scas
mov
das
clc
mov
ljmp
int
clc
in
std
mov
bound
ret
xchg
fldl
pop
shrl
or
fisubl
mov
scas
jl
xor
pop
xchg
inc
fnsave
leave
aas
fstp
mov
add
push
mov
ss
insb
addr16
mov
fnstcw
inc
xchg
in
jns
sti
lahf
lods
int3
int
out
mov
lods
ficompl
push
xor
mov
lods
fldcw
jle
pop
xchg
loopne
jecxz
sbb
ret
adc
mov
push
or
push
mov
pusha
mov
add
test
sahf
fldl
fstpl
mov
in
cwtl
fucomi
push
mov
jo
fucomp
insb
ret
data16
addl
xchg
xchg
cmp
insb
pusha
fmuls
ljmp
push
fmul
sarl
stc
sbb
ss
pushf
dec
push
inc
orb
lahf
mov
dec
pushf
cmp
adc
lods
loope
cmp
jmp
mov
mov
sub
jb
fmuls
orb
xchg
sbb
fisubrl
cmp
icebp
push
ret
mov
add
adc
out
pop
roll
out
addr16
mov
inc
inc
fcom
in
test
lahf
and
push
push
icebp
fs
mov
pop
jmp
lret
inc
rolb
mov
pop
stos
aaa
pop
adc
inc
mov
mov
xchg
andb
push
mov
cld
lret
jno
push
dec
sub
mov
fwait
popf
out
jo
cwtl
test
jo
lret
rcrb
xlat
pop
inc
dec
mov
pop
pop
rclb
flds
cli
mull
sbb
adc
lock
leave
divl
insb
mov
scas
inc
test
push
loopne
mov
jo
mov
jnp
das
dec
pop
inc
pop
mov
adc
inc
outsb
cmp
movsl
or
pop
addl
ds
filds
aam
sbb
loope
xchg
out
jae
sbb
add
imul
enter
sarl
jl
rorb
arpl
imul
adc
enter
push
testl
jno
and
fcoms
mov
jl
mov
push
pop
aad
adc
xor
and
sbb
std
fistps
movsb
dec
call
cltd
xchg
lret
inc
xchg
sub
and
shll
leave
frstpm(287
push
enter
cmp
mov
btc
mov
push
adc
cli
fsubrl
xchg
xchg
push
sub
orl
mov
sub
inc
and
aaa
repnz
in
add
cmp
add
xchg
xchg
xor
push
negl
inc
mov
mov
jmp
add
fmul
jbe
mov
mov
lods
fistpll
leave
sbb
cmc
add
pop
dec
adc
sub
sbb
into
cmpsb
test
loop
mov
pop
mov
into
sub
hlt
xchg
nop
aad
loope
cld
push
ds
mov
movsb
loopne
jle
xor
xchg
jl
jge
rol
sub
cli
mov
pop
rcll
vaddsd
adc
adc
fsub
call
adc
stos
iret
fwait
adc
xor
lret
jle
sub
enter
pop
rolb
jge
inc
xlat
pop
or
test
jmp
pusha
sub
lea
test
dec
mov
int3
lret
mov
lds
xor
pop
lods
pop
inc
pop
mov
out
pop
or
adc
pusha
das
ljmp
mov
jecxz
js
jecxz
jp
popf
arpl
push
dec
mov
or
aaa
push
and
xchg
sub
pop
rcrl
xchg
out
fwait
inc
aam
sub
sub
cmpsl
jo
xchg
rolb
adc
data16
mov
enter
cmpsb
mov
out
dec
sbb
push
push
loop
movsb
push
mov
es
sub
repz
inc
pop
test
mov
or
sbb
pop
shll
shlb
out
loope
mov
and
inc
push
out
nopl
and
mov
cmp
pop
lods
mov
fimuls
imul
xchg
pop
imul
addr16
jl
lds
jae
xchg
adc
jmp
add
mov
int
mov
sub
lods
pop
jbe
jg
sbb
add
inc
imul
in
push
loope
and
out
xchg
mov
jp
fwait
pop
and
sbb
outsb
orl
jmp
mov
out
das
xor
fldz
lret
pushf
lds
push
mov
mov
les
sub
jmp
pop
push
pop
sahf
lds
movl
roll
mov
push
mov
gs
out
inc
jmp
je
sbb
fisubrl
mov
fisubl
call
mov
jle
push
sbb
cwtl
or
push
aad
jno
sahf
icebp
add
dec
sbb
pop
inc
notb
cltd
sbb
dec
and
adcl
add
sub
mov
aas
adc
scas
subl
mov
scas
movsb
andb
push
xor
pop
xchg
adc
jnp
cwtl
or
mov
lret
shll
stos
mov
jb
popa
popf
aam
mov
and
ret
js
xchg
ljmp
jp
mov
idivl
mov
or
inc
or
movsb
mov
cmp
and
pop
dec
jmp
inc
lock
psraw
sbb
in
sub
mov
das
lods
jbe
xrelease
pusha
insb
flds
imul
mov
les
repnz
push
or
or
jbe
rcll
outsl
inc
mov
ja
clc
scas
out
and
icebp
aad
sahf
ret
ds
cmpsl
jecxz
sbb
cmp
fcmovnbe
in
push
mov
add
insl
gs
in
out
ja
lds
loopne
inc
push
dec
push
fnstenv
arpl
gs
shrl
xchg
leave
mov
or
cmp
cmpsl
mov
push
scas
rolb
xor
sahf
aaa
cvtdq2ps
adc
sub
cmc
xor
icebp
and
mov
cmp
or
sbb
mov
pop
icebp
add
adc
xor
mov
xlat
jb
in
aas
enter
aam
fdivrs
mov
arpl
xlat
popa
in
lret
pop
and
dec
fs
movsl
lock
mov
arpl
push
push
mov
outsb
xchg
xchg
es
jg
dec
cmp
jns
sbb
pop
or
popf
test
inc
pop
pop
das
xchg
rcll
popf
xor
push
dec
mov
jl
xchg
imul
pusha
mov
icebp
lds
mov
add
pop
mov
and
dec
out
inc
jmp
ffree
xchg
add
std
and
sub
add
add
fldt
scas
add
xor
clc
popf
aad
outsb
insl
adc
dec
jnp
cmp
inc
adc
loop
pop
push
cmp
out
jae
or
inc
or
cmp
mov
in
mov
cltd
lods
sub
insb
sahf
mov
cmp
cli
ja
out
sub
or
push
jns
ja
pop
rcl
mov
lods
push
mov
cs
pop
hlt
pop
fisubrl
add
sahf
sbb
dec
jns
popf
dec
xor
fadd
arpl
fxam
cmpb
xlat
pop
sbb
push
call
fbstp
in
loope
std
scas
add
sahf
nop
fldenv
mov
and
test
stc
push
mov
xchg
push
into
addb
fimull
push
mov
stos
sub
repz
adc
mul
jno
sbb
idivb
inc
mov
data16
xchg
push
cmp
cmpsl
sbb
bound
rolb
fadds
cmc
sbb
jge
xor
inc
sbb
mov
jg
repz
leave
loop
les
ja
xchg
outsl
addr16
lods
jnp
pop
ljmp
xor
and
data16
rolb
ret
jne
rep
cmp
cmp
test
adc
pusha
add
sbb
in
dec
cmp
sub
test
je
test
cmpsb
out
or
pop
inc
arpl
divl
je
shlb
data16
sbb
rol
jle
sbb
mov
hlt
or
test
sarl
push
and
hlt
pop
in
mov
xor
push
fldenv
shrb
mov
imul
and
int3
test
outsb
and
sub
in
sbb
ljmp
and
addr16
cmp
mov
mov
dec
clc
dec
out
mov
imul
enter
sbb
gs
in
pop
mov
jne
or
shrb
nop
popa
mov
scas
mov
mov
inc
repz
in
pop
repnz
hlt
lcall
lods
dec
dec
cld
adc
sub
scas
push
push
out
pop
sbb
mov
sbb
jecxz
aam
add
mov
dec
xlat
and
dec
or
aad
cmp
sti
mov
aas
fcoml
popa
push
scas
insb
pop
test
lea
imul
mov
mov
push
xor
cli
push
clc
pop
fcmovne
out
and
cmp
lcall
sub
mov
loopne
adc
pop
dec
das
rolb
sar
dec
out
push
mov
and
scas
or
scas
push
enter
jb
adc
les
pop
bswap
je
sub
orb
push
jg
aam
or
pop
xchg
aad
aad
cmc
out
sahf
sahf
pop
push
imul
add
jns
mov
lret
je
testl
jb
mov
jne
je
jmp
or
cltd
std
lea
lret
fwait
sahf
mov
ret
popf
inc
push
xchg
adc
cmp
in
xor
xchg
cmpsl
lret
jp
imul
popf
mov
loopne
out
push
sub
push
ds
adc
imul
stc
dec
lock
addr16
lods
icebp
push
sub
popa
inc
and
in
int
out
test
ss
or
add
jb
add
repnz
int3
aaa
inc
mov
sti
dec
push
add
scas
push
sbb
cmp
lret
and
cs
cmpsl
jle
lret
test
pop
imul
cmp
push
std
xchg
repz
and
push
gs
movsl
add
cmp
arpl
or
daa
mov
in
inc
sahf
lcall
and
mov
jbe
xchg
adcb
push
cmc
pop
push
pop
fdivl
cmpsb
sbb
xchg
out
xor
and
add
push
cmp
sbb
mov
mov
push
lods
xchg
call
insl
sti
insl
xchg
popf
mov
dec
inc
mov
cli
adc
ret
push
dec
testb
mov
inc
addr16
pusha
mov
mov
xor
adc
xchg
fidivs
mov
or
xchg
adc
fucomip
xchg
lock
inc
call
fnsave
dec
xchg
push
xchg
sbb
lcall
loopne
lcall
and
loopne
dec
ss
int3
ja
sbb
out
js
xorl
add
jne
mov
cmp
movsl
mov
jp
ficompl
stc
inc
cmp
xor
pop
add
cltd
ljmp
mov
faddp
add
popf
mov
cli
enter
repnz
or
mov
push
call
sub
adcl
adc
es
scas
call
push
mov
cmp
pop
loopne
fisttpl
sti
sub
mov
inc
cmp
mov
fwait
dec
rcll
cld
aaa
jnp
xor
mov
xchg
ret
ljmpw
clc
nop
sub
dec
mov
lahf
pop
pop
imul
jmp
xor
or
pop
mov
push
scas
push
fmul
insl
push
jnp
dec
fstpl
sbb
mov
and
or
pop
inc
in
dec
jg
lock
sbb
cmpsb
jl
mov
mov
push
in
and
or
enter
jmp
mov
cmp
push
inc
movhps
aam
rcrb
pop
xchg
dec
push
xor
pop
in
add
jecxz
or
hlt
out
or
mov
pushf
push
sub
cwtl
repz
sahf
inc
lcall
out
lds
and
pop
icebp
fcom
lahf
xchg
inc
fwait
das
sub
mov
dec
xor
mov
xchg
mov
jmp
xchg
ret
jb
dec
push
ret
je
loope
repnz
push
mov
notb
mov
jmp
insb
daa
mov
inc
add
pop
pop
sti
pop
mov
push
or
or
repz
jp
in
leave
test
sub
pop
mov
rol
push
ret
or
add
lock
shlb
jg
lret
lea
mov
push
aaa
push
fsubs
add
inc
movb
out
mov
jmp
push
in
xchg
nop
sbb
xor
int3
fsub
cltd
push
std
mov
push
icebp
aam
outsb
adc
push
sbb
shll
lods
mov
nop
add
inc
pop
dec
int3
dec
lret
gs
fs
mov
lods
sbb
xchg
adc
sahf
outsl
add
call
dec
sarb
push
pop
idivl
xor
cmpsb
inc
popa
mov
stc
fcmovbe
lret
pop
jecxz
fsubr
add
sahf
andl
hlt
out
cmp
das
adc
scas
test
jns
lods
xchg
out
adc
or
pop
hlt
jecxz
xchg
push
rorl
out
cs
movsb
push
rcrb
cli
mov
in
sub
lock
in
fwait
lea
mov
mov
adc
lcall
ja
sti
ss
imulb
push
jo
hlt
sub
push
add
repz
jg
fcomi
les
push
pop
sti
cmp
and
pop
outsb
pop
addr16
add
fcmove
mov
movsb
loopne
xchg
fsubl
push
lods
mov
mov
xlat
pop
test
and
addr16
mov
dec
test
outsl
test
mov
fistps
inc
adc
sahf
mov
xchg
lret
lcall
pop
std
arpl
cmp
ret
xor
push
mov
mov
add
pop
add
mov
inc
add
sarl
add
add
mov
push
sbb
push
dec
jmp
mov
mov
and
pop
pop
mov
ljmp
adc
pop
adc
outsl
lret
and
in
cmp
mov
jbe
lea
xor
push
sbb
adc
sub
mov
sbb
shll
or
shll
pop
aas
mov
enter
and
cmpsl
outsb
sub
mull
mov
push
dec
data16
and
pop
pushf
lods
lcall
out
je
push
and
mov
pop
inc
sbb
lret
dec
cmpsl
inc
sbb
imul
lcall
scas
sub
sbb
adc
xor
arpl
fwait
jg
cmp
mov
dec
mov
loope
mov
dec
and
stc
mov
pop
xlat
adc
fistl
sbb
filds
adc
fisubrs
lret
pop
xchg
mov
insl
popa
mov
pop
push
popa
cs
fs
mul
push
lods
sub
lahf
xor
andl
mov
sub
stos
push
sbb
faddl
jo
fisubrs
hlt
dec
push
mov
adc
cmpsl
xchg
jle
lods
and
int
xchg
adc
xchg
enter
mov
stos
cmp
fwait
xchg
push
cmp
xor
mov
call
cmpsb
adc
rclb
lds
pop
dec
mov
mov
cmpsl
or
sti
pop
add
dec
outsb
mov
cmpl
push
jge
lahf
enter
xor
adc
stos
sbb
inc
sbb
dec
clc
sbb
ror
call
ffree
cmp
out
loopne
and
mov
cli
lds
xor
pushf
xchg
push
ljmp
dec
movsl
and
cmp
cmp
push
cmp
jae
inc
pop
rorl
iret
and
and
sbb
jecxz
sub
jl
mov
lahf
cmp
pop
outsl
jns
xchg
aam
fsubs
xchg
ret
fildl
pop
dec
xchg
stos
in
jae
jne
adc
fdivrs
test
popf
pusha
jmp
adc
and
fwait
or
mov
es
xor
cmp
pushf
mov
pop
cmp
loop
daa
fwait
inc
fbld
jge
test
dec
pushf
mov
lock
imul
in
push
xor
ja
es
sbbb
fwait
pop
xchg
popf
mov
or
and
sbb
pushl
pop
sahf
ret
inc
xchg
fiadds
xorl
in
div
cmp
stos
lcall
jb
pop
cmp
stos
inc
push
fs
data16
les
lret
int3
xor
ret
or
into
inc
cltd
fistps
lods
adc
cld
xchg
mov
add
mov
cli
pop
push
adc
mov
push
lock
push
insb
pop
fnstcw
push
sbb
push
insb
dec
push
mov
and
shrl
insl
jl
pop
es
push
daa
inc
data16
call
fsubrp
jbe
push
shll
mov
xchg
fisttpll
cmp
aam
loopne
cmpsb
stc
xchg
lods
cmpsl
mov
rcrl
jbe
adc
sbb
clc
add
jae
out
lods
stos
push
xor
cmp
pushf
inc
push
test
ljmp
fwait
lahf
adc
and
jmp
enter
outsl
fwait
pushf
sbb
imul
cmc
ljmp
cltd
and
scas
sahf
cs
xor
enter
adc
sub
divl
sbb
iret
ss
loope
out
orb
in
push
cmp
clc
loopne
iret
dec
rcll
loopne
dec
mov
insl
pop
out
inc
push
ss
or
shll
repz
jbe
jmp
mov
stc
iret
xorl
cmp
scas
es
outsb
je
hlt
pop
xchg
sti
loop
jle
dec
test
xchg
jp
rcr
cld
mov
in
int3
int3
dec
mov
pop
sahf
cmp
fs
nop
rorb
sbb
jae
sub
in
test
jmpw
push
adc
popa
mov
xlat
cmp
out
add
into
cmp
add
inc
aad
iret
jo
mov
jle
leave
das
inc
push
jo
fsubl
mov
mov
cmp
frstor
xor
jle
add
xor
dec
int3
icebp
pop
lea
pop
pop
xchg
xor
shrl
sbb
xor
sbb
push
scas
rcrb
xchg
jae
inc
push
jb
sub
pusha
jae
pop
test
daa
adc
popa
push
divb
andl
lcall
pop
sub
push
mov
or
mov
or
int3
das
jns
pop
sbb
lret
loop
mov
adc
rol
mov
mov
mov
xchg
lock
mov
inc
sub
not
shl
mov
js
dec
push
gs
inc
lcall
mov
stos
sub
test
lods
push
xor
cmp
xor
call
cmpb
movsl
mull
add
sub
sbb
pop
and
mov
sub
xchg
pop
cwtl
int3
mov
int
dec
fdivr
in
cmp
jnp
loop
xchg
mov
mov
dec
repz
or
xor
popa
and
pop
outsl
out
push
sub
push
out
jg
testb
stos
cltd
data16
xchg
hlt
or
ret
sub
std
adc
push
inc
popa
leave
fdivrs
out
cmp
dec
sahf
jle
xor
enter
loopne
and
sbb
int
push
aaa
jno
mov
dec
lea
out
jmp
mov
and
fildll
mov
orl
fdivs
out
lock
pop
shrb
push
cmp
fimull
fwait
mov
negb
imul
xor
mov
sbb
rorl
jp
clc
data16
cs
mov
decl
dec
ss
dec
xchg
dec
fs
mov
stos
popf
cs
xlat
push
or
sub
mov
test
jbe
pop
sbb
in
mov
iret
test
stos
pop
push
jb
lock
popa
aas
pop
xchg
mov
bound
inc
inc
jb
loop
mov
ds
call
sub
cmpb
mov
or
xor
stc
ja
jle
mov
and
shlb
mov
test
cmp
ficoml
push
mov
orb
xchg
dec
ret
mov
cmp
mov
adc
imul
dec
iret
imul
xchg
push
xchg
dec
inc
and
sbb
cs
xor
incl
daa
sbb
dec
dec
shl
out
lret
adc
pop
mov
outsl
fst
sbb
and
dec
cmpsb
lods
or
or
inc
pusha
push
in
dec
push
test
sub
xchg
jns
dec
gs
xlat
ja
jecxz
std
inc
inc
mov
cmp
dec
and
adc
ss
dec
sbb
jp
or
adc
pop
push
and
jle
xor
inc
movsb
add
xor
pop
bound
mov
rorb
xor
fstpl
addr16
dec
repz
xchg
mov
daa
fsin
jl
imul
loope
cwtl
fdivrs
fs
sbb
pop
not
out
int
or
xchg
iret
das
inc
and
ret
jle
or
loopne
outsl
xchg
jbe
aad
adc
and
sub
sti
xchg
lcall
inc
cmp
add
jg
loop
and
in
xchg
out
das
cwtl
outsb
jg
push
roll
sub
imul
lcall
xchg
or
mov
cli
out
add
mov
sti
mov
mov
inc
inc
lcall
xchg
jle
popf
cmp
scas
push
pop
into
xchg
ds
es
push
xchg
pop
nop
push
in
xor
lahf
stos
test
daa
movsb
or
mov
xor
hlt
pusha
push
pop
dec
or
xchg
rorb
pop
iret
mov
popf
outsl
xchg
dec
enter
and
push
jp
cmp
jo
add
add
ja
jmp
and
cmpsb
cmpsb
pop
jmp
sbb
pop
jbe
cmp
sub
loope
sbb
cmp
stc
xor
pop
mov
mov
dec
sbb
mov
shr
inc
xor
or
ljmp
rorl
add
cmc
or
fistpl
lods
jge
mov
orb
cwtl
pop
ljmp
jl
test
dec
mov
rep
out
gs
xchg
sub
subl
imul
sub
xchg
add
xchg
mov
or
mov
popa
mov
or
adc
push
cwtl
stos
shrl
or
lds
sub
loop
imul
add
adc
xchg
sub
xchg
sbb
jmp
mov
cmc
or
and
add
pop
aam
mov
push
incb
xchg
pop
int3
adcl
cmp
pop
lea
mov
push
xor
add
in
add
add
imul
and
std
out
mov
div
and
scas
out
add
in
mov
xchg
sub
pop
jecxz
aad
and
int
rorl
mov
outsb
inc
pusha
test
icebp
mov
add
rcrb
push
das
ds
int3
sub
mov
xchg
mov
in
es
ret
push
cli
cli
mov
or
mov
xchg
cmp
in
jle
popa
vmread
xor
stos
inc
loopne
sbb
cltd
xor
fmuls
pop
mov
ss
pop
out
pop
mov
call
fidivrs
lea
jnp
subb
lret
jb
cmc
inc
lock
or
add
dec
sub
insb
aas
xor
stos
adc
sub
cmp
jl
fiadds
and
push
sub
scas
loope
bnd
lods
cmp
add
outsl
loopne
inc
or
mov
pop
add
iret
fildll
lods
shl
int3
movsl
sbbl
sub
stos
and
jnp
and
fisubrs
les
adc
in
mov
mov
jg
aas
push
add
iret
jmp
mov
push
mov
outsb
xchg
out
pop
push
fdivrs
int
ss
rolb
xorb
and
lret
or
loop
int
repnz
pop
dec
mov
fdivl
adc
cmp
jno
push
ja
aad
lahf
loope
pushf
imul
push
xor
loop
js
adc
rcrl
sub
pop
icebp
in
int
stc
or
cwtl
das
aas
jb
scas
les
mov
or
mov
adc
movsb
mov
mov
push
stc
aad
add
pop
xor
mov
dec
scas
imul
in
cmpsb
cmp
push
call
dec
lahf
adc
pop
inc
addr16
test
sti
popf
and
pop
dec
xor
and
loopne
mov
sbb
add
out
scas
ret
mov
mov
mov
cltd
bswap
test
xchg
les
xchg
jle
movsb
cmp
mov
pushf
mov
call
sub
imul
arpl
inc
xchg
dec
insl
xchg
inc
aad
adc
andnps
mov
pop
jmp
or
stc
loopne
jbe
pop
loope
in
cmpsl
in
xor
sar
popa
fimull
mov
mov
les
mov
nop
sub
js
scas
or
into
leave
push
lret
mov
sbb
pusha
xchg
jle
mov
add
ljmp
pop
cmp
test
mov
mov
add
xchg
mov
or
std
sub
in
mov
rorb
ds
stos
sub
push
sbb
lret
adc
data16
mov
adcl
ret
push
cmp
mov
cmp
sub
aam
fbstp
cmpsb
addb
xchg
cmp
fidivl
sub
add
je
push
iret
bound
xchg
ljmp
or
subl
xlat
sbb
jp
aaa
lret
or
jne
fimuls
fcmove
icebp
or
flds
aas
stc
addb
shll
sbb
rcrl
pop
jne
xchg
ss
fsubr
je
xor
cmp
std
push
arpl
fstl
sbb
xor
les
or
xor
sbb
xor
dec
adc
jae
inc
jbe
sti
imul
mov
mov
xchg
jmp
push
add
pop
inc
addr16
dec
add
cmp
es
lods
in
gs
mov
mov
cmpsb
imul
or
jbe
add
mov
push
dec
cmp
pop
pop
and
jecxz
sub
ljmp
addr16
loop
ffreep
fst
or
cmc
push
pop
fimuls
xor
ljmp
shrl
or
fcompl
sub
inc
and
inc
les
shll
bound
repnz
jmp
cmp
inc
jns
mov
dec
into
xor
jbe
fdivs
test
arpl
adc
lock
vmovsd
add
arpl
in
ljmp
and
cmp
mov
xor
pop
int3
inc
fcoms
xor
push
int
mov
pushf
adc
jo
cmp
out
iret
int
fld
pop
inc
sub
fistpll
sbb
imul
cmpsl
popa
icebp
push
cmp
add
xor
adc
repz
or
sahf
gs
cltd
or
mov
ret
into
cmp
pushf
lret
iret
jno
pop
xchg
mov
push
push
ret
inc
les
lds
push
xchg
out
push
push
jp
test
aas
addb
lret
sarl
mov
xor
sub
test
inc
js
push
movl
test
notl
dec
sub
add
xchg
test
inc
int
bound
inc
or
xor
outsl
leave
xor
ret
stc
imul
test
pop
jecxz
loop
or
in
js
out
mov
gs
pop
dec
or
inc
pop
dec
mov
mov
pushl
pusha
add
out
fiadds
enter
xor
jb
daa
addl
cmp
push
aam
fisubs
sbb
js
xor
fs
clc
lds
ret
adc
push
loop
adc
mov
dec
add
mov
leave
sub
out
jg
fistps
fcomps
hlt
fnstcw
xchg
mov
mov
pop
nop
cmp
arpl
mov
pop
fisubl
iret
sub
pop
pop
or
dec
sub
sbb
fsub
mov
in
mov
in
cmp
jbe
add
pop
mov
mov
or
sbbb
mov
incb
or
sti
ret
stos
int3
push
and
push
push
pop
sub
jecxz
mov
sbb
dec
enter
push
sbb
cltd
gs
mov
stos
add
lea
int
dec
pop
das
cmp
fs
inc
or
jo
sti
push
das
or
ss
jne
jnp
push
jecxz
jl
cmp
out
popf
dec
clc
js
sub
xchg
mov
mov
popf
xchg
jae
mov
xchg
push
test
out
fsubrs
rorl
jb
jno
inc
or
frstor
cmp
leave
ljmp
ret
cmc
cld
and
sub
pop
xchg
in
cmpl
xchg
inc
and
push
rcrb
out
imul
notl
fldcw
sbb
fnstcw
iret
shrb
subb
shlb
in
sub
data16
leave
mov
jl
push
fisttpl
or
jbe
jo
add
jns
loope
or
dec
rcrl
adc
push
push
roll
leave
incb
push
leave
add
insb
add
aad
sub
mov
xor
out
jge
scas
mov
imul
push
or
rcrb
xor
jge
pop
dec
lret
add
lcall
and
add
iret
and
jmp
lcall
in
mov
sbb
xchg
enterw
jge
mov
mov
mov
sub
ljmp
jo
sub
repnz
and
mov
popf
insl
pushf
mov
sbb
cmp
sub
sbb
sbb
cmp
popa
xlat
scas
push
jno
cmp
sbb
flds
aad
sbb
xchg
lea
jne
lods
std
rolb
mov
mov
stc
pop
lods
shl
loopne
push
les
or
and
push
adc
push
cmpl
mov
adc
addr16
push
mov
push
inc
nop
out
sahf
pop
inc
out
nop
mov
outsb
and
mov
call
int3
push
iret
mov
int3
mov
lcall
sub
sbb
xchg
mov
iret
ficoms
into
pop
mov
xlat
shll
mov
test
ja
sub
jmp
or
repnz
pushf
cmp
cmpsb
fistpll
negb
das
shlb
xor
jl
fs
fwait
rorb
imul
arpl
popf
scas
hlt
jl
mov
cmpsl
cmpsb
popf
cmp
mov
es
shll
hlt
addl
in
stc
call
push
lock
cld
in
icebp
sub
push
sahf
stos
xlat
inc
mov
xor
rcrb
aaa
sub
and
cmp
xchg
leave
inc
popf
fiadds
adc
jnp
aad
loop
and
mov
shll
mov
sbb
popf
repz
xchg
cmp
and
dec
jnp
out
aad
in
sti
sub
cmc
push
push
aad
insl
add
push
es
push
or
dec
stc
aad
and
pushf
mov
arpl
fcmovu
fwait
shl
push
jg
sbb
pusha
cmc
push
adc
lcall
push
xchg
pop
ljmp
hlt
push
imul
xchg
fs
dec
repz
ds
jbe
pop
iret
aas
add
shrl
lods
ss
out
add
int3
loop
adc
out
mov
inc
out
xchg
pop
in
in
iret
push
add
or
jo
mov
push
or
jge
sarb
inc
pop
loop
push
mov
jns
xchg
inc
mulb
mov
lret
divb
aad
icebp
mov
dec
popf
jmp
scas
sub
ja
repz
pop
scas
das
popf
pop
cmpsb
mov
stos
sub
insb
mov
xchg
or
xchg
mov
cmp
outsl
sbb
xchg
iret
cmp
popf
adc
mov
insl
push
jge
sub
scas
shl
out
mov
scas
dec
int3
mov
push
push
fsubrl
mov
lret
out
insb
jp
fs
dec
sub
gs
cmp
sub
jmp
clc
ror
test
out
cmp
xchg
jg
in
jo
mov
ds
push
jmp
pop
cmc
push
xchg
xor
xchg
pop
mov
sub
insl
pop
xchg
je
sub
in
fs
mov
sbb
loop
pop
outsl
push
xchg
pop
push
and
nop
test
movsb
test
mov
push
mov
xorl
push
jne
jg
or
nop
lcall
mov
pushw
jnp
cmp
pop
das
aas
sub
int3
ljmp
sub
lret
mov
clc
ror
adc
xor
shrb
or
jns
push
or
in
test
jmp
sarl
push
rolb
fcmovne
sub
xchg
aam
rorl
icebp
ljmp
fdivl
add
mov
push
xor
or
inc
orl
or
out
mov
cmp
fiadds
addr16
ret
cmpsb
push
icebp
lahf
xchg
add
psubusw
ret
jnp
cltd
ss
and
js
or
nop
mov
pop
iret
and
sub
inc
lock
cld
nop
inc
ja
mov
sarl
aam
mov
sbb
fcompl
in
or
sbb
shlb
cltd
jg
jne
jns
out
fildl
imul
aaa
imul
jg
jbe
dec
sub
shlb
mov
cmc
in
adc
outsl
das
sub
fdivrl
pop
lret
mov
scas
xlat
xchg
mov
enter
jmp
sarb
and
sbb
xchg
sbb
or
cmpsb
add
mov
aaa
mov
xor
push
mov
add
jno
xchg
push
lea
xchg
imul
inc
push
mov
sbb
daa
mov
mov
and
mov
push
lea
fwait
add
into
clc
dec
pop
out
push
xlat
sbb
mov
inc
in
popf
pop
call
push
sbb
stc
call
jo
sub
int
jo
fidivrs
dec
pop
adc
mov
ficoms
push
leave
push
cwtl
loop
or
push
loop
jno
cmp
add
mov
dec
pop
test
fwait
mov
jecxz
sbb
insl
popa
insb
mov
or
mov
push
insb
pusha
pop
out
pop
lods
rol
adc
ljmp
xor
sub
ja
mov
aam
fmull
sarb
stos
stc
aaa
icebp
in
cmp
pop
jo
mov
mov
mov
dec
mov
mov
test
pop
test
push
ss
fiadds
rorl
sub
cmpsb
ja
js
loopne
sub
mov
aad
stos
data16
mov
js
les
push
cmp
insl
dec
stc
cltd
mov
add
cmpsb
inc
adc
add
push
fcomi
aam
jo
xchg
scas
push
xor
outsb
push
mov
iret
in
daa
jmp
adc
cmp
int
js
ret
nop
lods
xchg
addr16
inc
aam
aas
imul
lahf
jle
iret
addr16
shll
out
sub
inc
adc
in
daa
icebp
arpl
inc
std
pop
insl
add
in
jbe
push
push
mov
add
push
fs
cmpsb
mov
in
stos
std
or
and
loop
jo
and
int3
mov
pop
mov
pop
push
pop
pushf
mov
loop
pop
pushl
add
out
push
mov
out
jg
jp
call
enter
mov
push
jo
movsb
xchg
in
ret
adc
or
rcrb
jb
cld
xchg
js
mov
jno
jbe
outsb
dec
jne
out
enter
mov
clc
rcll
enter
ss
push
dec
clc
mov
xor
cli
push
mov
jmp
sbb
jle
mov
cld
pop
in
fiaddl
adc
add
pop
call
hlt
xchg
loop
xchg
dec
dec
gs
nop
mov
fwait
sbb
rcll
data16
mov
sbb
inc
scas
mov
sbb
xchg
ja
sbb
push
pop
adc
cld
dec
sbb
dec
lea
iret
repz
mov
sub
sbb
es
shr
adc
stc
jle
cld
push
js
outsb
push
lods
addb
or
call
insl
ret
cmp
xor
mov
add
jne
sub
pavgw
loope
mov
mov
fistps
mov
dec
sbb
add
push
xor
add
xor
and
mov
jae
icebp
cmpl
aam
push
mov
sub
mov
cmpsb
lcall
and
repz
jae
xor
aaa
cmc
call
popa
dec
add
sbb
je
insb
popa
insb
sub
outsl
lret
fimuls
lds
xor
adc
xchg
or
sub
jg
xor
nop
xchg
mov
push
ja
loope
xrelease
mov
into
in
fidivrl
push
sub
or
test
pusha
aas
insb
xchg
mov
dec
rcrb
pushf
cmp
fstl
or
pop
iret
sbb
test
xor
test
or
int3
lret
add
cmpsl
cltd
lods
push
addb
repz
fiaddl
sbb
fimuls
xor
dec
add
les
les
fisubrs
add
cmp
mov
lea
jl
mov
ds
mov
xlat
mov
or
insb
add
xchg
mov
adc
push
inc
adc
fptan
aaa
or
dec
mov
jg
xchg
inc
movsb
xor
arpl
push
lahf
add
mov
data16
cmp
insb
xor
adc
lods
pop
bound
movsl
push
negb
sub
xchg
jmp
mov
andb
sub
add
popf
in
jl
jge
mov
imul
adc
xchg
cmp
cmp
popa
cltd
inc
and
push
ret
xchg
ret
test
mov
repnz
dec
dec
push
jne
jnp
adc
imulb
sub
or
loope
lea
jl
xor
repnz
lahf
das
add
dec
or
pusha
dec
inc
ja
xor
xchg
cmpsb
stos
xor
fildl
xor
and
test
into
decl
mov
fwait
inc
test
cmp
pusha
add
test
cmpsl
jno
imul
add
sub
jbe
jl
dec
sbb
cld
pop
cmc
pop
jnp
std
xor
orl
sbb
test
fwait
iret
jmp
sbb
sbb
cmp
xchg
jno
push
jg
imul
enter
jmp
addps
int3
movsl
xchg
ret
or
mov
pushf
pop
add
test
inc
dec
sbb
or
cmc
into
loope
dec
sub
dec
mov
push
sub
or
subb
xchg
out
jp
int
jg
sbb
sar
clc
ret
mov
sub
addb
outsl
faddl
and
xor
adc
mov
lcall
mov
out
cltd
adc
bnd
sbb
popa
mov
pusha
rcrb
add
xchg
pop
cmpsb
mov
xchg
push
push
jmp
add
bnd
jge
in
hlt
repnz
addr16
xor
xchg
jge
mov
mov
mov
fwait
add
test
shlb
mov
dec
mov
xor
je
rcll
in
out
and
ret
or
xchg
sbb
stos
loope
and
xchg
test
adc
or
mov
push
dec
mov
adc
pop
xchg
rcll
inc
ret
movsl
std
cmp
mov
lods
lcall
fcoms
cwtl
and
xchg
pop
xor
mov
add
cmp
push
ret
out
xchg
cmpsl
sbb
pop
push
adc
bound
push
je
dec
xor
rorb
sub
scas
sbb
lods
cmp
jp
and
pop
pushf
sub
faddl
test
cmp
jo
xchg
and
sarb
ds
sub
xchg
lahf
mov
push
mov
mov
dec
mov
popa
out
pop
jg
rol
shl
test
dec
les
xchg
xor
cld
mov
insb
cs
cmp
int3
into
inc
xor
aas
arpl
sbb
mov
sti
jne
sbb
jg
mov
jnp
jmp
cli
clc
shrl
inc
dec
dec
and
fnstenv
inc
loope
je
rolb
push
inc
loopne
cmpb
out
lcall
stc
sbb
adc
nop
dec
lahf
addr16
jb
mov
cli
inc
pop
rol
daa
and
cmp
push
mov
xchg
cmp
addl
xor
and
es
mov
xchg
in
andb
sbbl
xchg
pop
mov
xchg
xor
jp
test
mov
ss
jb
add
fdivrl
add
mov
ja
jo
icebp
repz
sub
fldl2t
fcmovb
jne
cmp
scas
stc
divb
and
sbb
lods
pop
pop
pop
sbb
pop
and
push
sarb
push
movsbl
gs
dec
push
cmpsb
je
insb
stos
pop
pop
ficomps
add
daa
loopne
out
mov
dec
adc
inc
xchg
repnz
inc
repz
cmp
xor
sub
movsb
mov
adc
fwait
dec
dec
adc
sub
jno
pusha
cltd
mov
jb
movsb
push
xor
xchg
push
lret
dec
push
and
mov
popf
outsl
out
mov
cmp
aad
aas
icebp
incb
imul
sahf
enter
jmp
lds
andl
inc
enter
mov
je
lret
push
mov
stos
add
les
xor
cltd
push
lods
popl
insl
scas
hlt
cmp
inc
repnz
and
mov
int
loop
out
cmp
add
decl
pop
mov
shl
dec
call
dec
ja
cmp
ds
mov
in
dec
fdivrl
shrb
xchg
clc
scas
loopne
push
cmpsl
adc
enter
dec
aas
pushf
mov
sbb
jno
test
inc
or
ret
and
mov
mov
mov
xor
mov
push
out
loopne
movups
cltd
movsl
and
call
pop
sub
push
das
jno
xor
pop
or
pop
dec
push
inc
popw
aad
ficomps
jae
in
fidivl
push
xor
add
stos
mov
clc
jl
hlt
stc
rcll
sub
sti
in
ds
push
add
icebp
inc
fdivl
ss
sbb
jle
push
call
fs
fs
sbb
sbb
sub
mov
xor
sub
jnp
ds
jmp
js
dec
movsl
cmpsb
out
bound
test
mov
pop
mov
cmp
add
xor
leave
dec
arpl
mov
mov
jge
lods
adc
dec
fidivrl
je
ljmp
dec
in
dec
andb
movsl
pop
fcoml
out
xchg
adc
stos
mov
dec
pop
mov
push
and
out
loope
pop
addr16
or
mov
rcrb
outsb
movsb
xchg
xchg
mov
sarb
shl
scas
adc
in
inc
inc
mov
mov
jne
mov
movl
out
sbb
xchg
loope
adc
mov
loop
cli
xchg
out
cltd
jo
mov
popa
cmpsb
inc
fmuls
mov
or
into
xor
fstpl
or
cmp
add
std
pushf
dec
lods
sbb
inc
repz
xor
lea
repz
scas
inc
lret
dec
mov
notl
and
repnz
xor
push
rcll
mov
push
sahf
clc
dec
mov
fs
repnz
pop
xchg
fdivrp
xchg
test
adc
mov
mov
add
mov
repz
rcrb
scas
out
inc
inc
mov
rolb
mov
sbb
je
fidivrs
sbb
mov
pop
pop
mov
dec
and
or
push
cmp
or
and
and
int3
aaa
add
mov
sub
cmp
in
scas
lds
adc
cmp
push
rorl
cmp
cld
push
xchg
or
and
or
sarb
jecxz
cs
adc
adc
jecxz
pop
aas
dec
loopne
inc
movsb
iret
ja
rcl
pop
add
iret
xorb
or
gs
imul
lret
shrl
push
std
scas
mov
mov
dec
pop
add
fiadds
daa
into
or
test
mov
test
rcl
sub
and
cmc
fnstsw
jge
pop
imul
dec
in
dec
inc
mov
jno
scas
lcall
insb
into
add
ljmp
and
nop
push
jb
xor
xchg
enterw
subb
cmp
ljmp
cwtl
sub
pop
xor
push
cmp
xchg
sbb
cmpsb
scas
ss
or
repnz
mov
sub
cmpsb
std
mov
es
in
inc
outsb
fiaddl
aam
and
cs
test
sbb
inc
pop
scas
push
test
sarb
adc
mov
nop
inc
add
mov
jmpw
lahf
pop
push
pusha
mov
xchg
negb
mov
popa
cmp
divl
mov
dec
sahf
std
loope
mov
add
pop
jae
out
das
push
add
popa
push
lods
cmpsl
mov
mov
outsb
sti
cmc
pop
and
iret
or
sbb
lods
enter
rcrl
subb
push
ret
dec
movsb
pop
mov
sbb
mov
adc
jae
in
adc
ret
push
or
and
push
pop
adc
xor
loope
sub
push
push
test
jecxz
jmp
and
inc
sub
js
and
push
or
add
sarb
repnz
mov
cmpsl
test
dec
add
jmp
shll
ja
inc
roll
adc
call
jl
dec
mov
xlat
into
lods
sub
negb
pop
cmp
loopne
lcall
rclb
test
jg
outsb
mov
cwtl
mov
or
push
push
aam
dec
mov
sub
inc
mov
push
pop
mov
scas
dec
aas
negl
push
cwtl
xchg
je
movsl
mov
mov
or
pop
or
incb
dec
scas
push
cs
lods
sbb
js
inc
int3
test
insl
jb
push
lock
lock
jae
inc
icebp
dec
sub
test
inc
fs
fdivrs
lock
arpl
jb
jne
iret
sub
and
push
dec
pop
ljmp
into
aam
mov
push
popa
add
add
xchg
mov
popa
cmp
ror
jno
mov
or
cmp
and
in
jb
xchg
rcrb
xchg
fsubr
outsl
repnz
test
stc
or
test
incb
movsl
leave
pop
sbb
or
xchg
leave
fdivs
iret
scas
sub
mov
sub
stc
cmpsl
lahf
push
fimuls
mov
sub
xchg
inc
out
xchg
pushf
push
cmpsl
scas
and
mov
out
cmc
mov
stos
jae
cmpsl
and
ret
out
out
xchg
mov
xchg
sti
cmp
stos
scas
adc
lods
sbb
xor
or
enter
mov
fucom
into
pop
xchg
enter
in
scas
cmpsl
xor
es
in
test
fs
mov
popf
aas
out
mov
loop
fldt
push
insl
push
das
daa
push
das
adc
sbb
mov
ja
sbb
ss
cmp
push
cmp
sar
dec
stos
cwtl
insl
lea
pushf
dec
lock
pop
mov
iret
xor
shlb
xchg
and
jb
add
or
xchg
loop
loope
mov
xlat
jo
pop
mov
inc
ficompl
pop
icebp
fiadds
mov
pop
loop
fisubrs
in
and
and
out
mov
sbb
loopne
mov
push
push
mov
lret
jb
push
mov
push
sub
jmp
lcall
dec
mov
push
daa
jno
mov
das
dec
xlat
push
adc
loop
jg
and
into
jp
inc
add
push
add
dec
add
dec
add
xor
adc
dec
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
mov
test
cmpsw
push
std
repnz
call
lahf
in
mov
mov
test
xor
imul
mov
pop
pop
push
mov
pop
add
and
mov
jmp
push
dec
dec
outsl
jl
pop
mov
mov
add
add
cmpb
push
dec
sbb
inc
push
js
cmc
xor
movswl
mov
push
jmp
jecxz
cltd
pop
aas
or
pop
sub
dec
dec
dec
mov
dec
jne
push
mov
pop
jmp
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jmp
pop
xor
shlb
int3
adc
fidivs
inc
push
fnstcw
ljmp
cmp
and
xor
xchg
outsb
fisttpl
fists
arpl
xor
mov
mov
pop
inc
jmp
or
sbb
cmp
mov
je
dec
int3
hlt
mov
int
push
push
xchg
lods
xchg
je
xor
outsb
jns
lods
mov
or
js
mov
xchg
fldenv
jbe
add
fidivrs
add
dec
push
ss
and
rcrl
es
loop
mov
or
aas
fstps
setle
aad
rcrl
int3
test
mov
sub
shl
adc
jmp
xlat
push
shll
cld
jbe
fwait
int3
std
mov
fwait
out
rcrl
jo
ret
and
insl
scas
jl
clc
stc
mov
out
rcrl
int3
std
in
push
lock
std
push
rcll
out
rcl
addr16
adc
stc
imul
aam
iret
sbb
jle
or
call
push
data16
and
movsb
sarb
sub
dec
jl
stc
push
jecxz
or
sbb
dec
cmp
sar
rorl
iret
lods
arpl
fcoml
es
dec
test
dec
jecxz
out
and
and
pop
out
mov
push
cld
xchg
mov
mov
push
cmp
cmpb
pop
mov
mov
add
jg
pushf
and
int3
aad
mov
pop
stos
mov
fsubr
dec
scas
xchg
ret
and
mov
mov
xchg
lods
xchg
loope
xchg
inc
adc
jp
mov
pop
into
enter
repnz
add
ret
xchg
jnp
jmp
dec
mov
jge
into
enter
ret
dec
imul
mov
sub
mov
add
loope
scas
add
cld
aam
adc
mov
enter
mov
fcomp
test
cmp
mov
insl
xor
inc
jmp
adc
mov
jl
and
out
dec
xchg
mov
push
adc
divb
push
sahf
fldenv
cli
sbb
lret
icebp
ss
int
shlb
mov
cli
sbb
add
ljmp
dec
aam
into
fmul
rsm
push
fmulp
out
lahf
xor
mov
repnz
negl
pusha
adc
lds
jno
xor
xor
pusha
sbb
sbb
sbb
inc
sub
or
sbb
cli
sbb
cli
inc
lret
outsl
cmp
cli
jle
cwtl
push
or
popa
cld
mov
sbbb
sbb
pusha
xor
sub
xchg
fbstp
cmc
pusha
nop
adc
out
lret
or
cli
imul
sbb
sbb
insb
sbb
or
negb
pusha
and
shrb
cli
sbb
scas
add
mov
cli
aam
xchg
negb
pusha
lcall
pusha
pop
je
fs
cli
jb
mov
sbb
jecxz
cli
sbb
and
mov
pusha
pop
mov
xchg
negb
pusha
pop
lret
cmc
rcll
pop
cli
jnp
stc
jecxz
test
push
inc
jns
shlb
cli
jb
pusha
out
sbb
pop
cmc
sbb
jns
pop
stc
xchg
pop
mov
divl
out
dec
enter
pusha
adc
rorl
enter
popa
ljmp
jle
xchg
cli
sbb
jge
adc
je
xchg
cli
jb
jns
shlb
cli
jb
nop
out
mov
push
bound
imul
mov
cli
sbb
and
cmc
sbb
lret
or
pusha
nop
das
data16
cli
imul
mov
leave
out
jp
pusha
lcall
pusha
nop
add
pusha
nop
cli
enter
sbb
cli
sbb
jge
inc
cli
jge
repz
pop
aam
outsl
repz
stos
adc
dec
outsl
mov
aaa
jbe
orl
test
mov
iret
fsubs
in
fisubs
jbe
fbld
jbe
cmc
mov
mov
stos
jle
and
xor
mov
aaa
jbe
mov
arpl
xor
push
xchg
pusha
xchg
cwtl
pop
push
xor
mov
aaa
jbe
nop
mov
in
dec
xchg
cli
sbb
cwtl
pop
push
xor
mov
aaa
jbe
nop
and
xchg
jo
rorl
rcrl
mov
mov
pusha
nop
mov
stos
jle
sbb
jp
xor
out
or
push
pusha
xchg
cli
sbb
fmul
and
pop
shl
xchg
jo
rorl
aam
push
minps
push
cli
jge
add
xchg
xchg
aam
js
xor
pusha
test
xchg
ja
out
stc
jge
add
sbb
pop
pop
or
shrb
sbb
shrl
cli
sbb
jno
es
nop
mov
lret
inc
testl
out
fisubs
xor
insl
pop
or
fnsave
xchg
cli
sbb
dec
mov
sbb
inc
jns
pusha
nop
addb
nop
cli
and
testb
rcrl
popa
push
ficomps
pusha
jns
add
sub
subb
nop
cli
xchg
sbb
call
xlat
out
jmp
test
frstor
shlb
adc
fildll
repz
call
pop
cmp
sbb
jge
mov
stos
push
nop
pop
arpl
jns
pop
dec
fidivrl
clc
rorb
rorl
and
test
out
orl
fs
cli
sbb
cli
sbb
cli
sbb
cli
sbb
cli
sbb
cli
sbb
cli
sbb
negb
mov
push
mov
pusha
push
cmc
sbb
cli
sbb
cli
pop
mov
cli
sbb
cli
sbb
cli
sbb
mov
pusha
nop
cli
sbb
cli
sbb
cli
sbb
cli
sbb
mov
je
arpl
repnz
test
push
loope
out
in
loope
test
cmc
cltd
fbld
nop
lock
pop
lods
mul
outsl
dec
jb
push
fisttpl
test
and
push
out
ja
mov
out
xchg
jns
pop
jg
mov
push
repnz
jp
cmp
loop
js
lea
incb
aam
ja
cld
inc
xor
test
mov
pop
pop
mov
xor
loope
sbb
add
jp
in
sysret
mov
xchg
pop
xorb
mov
aam
dec
hlt
fs
imul
bnd
insl
inc
dec
push
shlb
out
cmp
and
xchg
add
jne
xchg
ss
in
mov
roll
xor
cmp
dec
and
js
mov
jo
lock
mov
insb
xor
mov
out
daa
mov
fs
es
xor
loopne
flds
lret
or
cwtl
lods
leave
dec
aaa
mov
xchg
dec
xchg
stc
jno
dec
pop
xchg
mov
movsl
jb
movsb
cmp
sbb
mov
cli
and
popl
into
pop
stc
mov
loop
loope
xlat
xor
or
jb
js
and
pushf
loop
jns
push
lea
out
daa
stc
dec
out
jg
repz
jg
jmp
stos
dec
dec
xor
les
shll
outsl
aas
scas
test
in
pusha
mov
stc
clc
cmpsl
ja
mov
sbb
test
xor
fisttpll
cld
shll
leave
or
ret
mov
test
mov
mov
xlat
cmc
popf
inc
mov
dec
inc
inc
repz
data16
fiadds
lret
dec
je
mov
cmpsb
push
out
lret
nop
hlt
sbb
aas
add
xor
shr
pop
cld
sbb
loopne
xor
data16
lcall
rcrl
icebp
out
dec
jnp
insb
sbb
fsubl
jne
movsb
xor
js
ljmp
dec
cltd
addr16
sub
or
adc
jp
in
sub
ss
negb
dec
loope
xchg
or
mov
mov
jg
mov
push
xchg
push
iret
cwtl
xor
cmp
xadd
add
pop
and
cmp
lods
jnp
xchg
or
jp
and
mov
lock
aaa
leave
push
xchg
pop
dec
jl
rcrl
adc
faddl
cmp
xor
add
testb
sti
lret
jne
out
push
leave
add
add
add
or
add
add
dec
add
dec
add
xor
adc
dec
add
insb
adc
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
insb
adc
hlt
imul
cwtl
insb
adc
mov
adc
movsl
insb
adc
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
insb
adc
add
add
fsubrs
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
add
mov
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
out
je
fbld
cmp
cmp
mov
movsb
pop
pushf
and
dec
into
cmpsb
mov
cmp
jge
cmp
push
mov
or
add
pop
mov
jg
or
dec
mov
jecxz
js
aad
mov
in
cmp
sub
jge
movsb
lds
mov
jno
cs
hlt
movsl
cli
mov
sub
cmpsl
gs
xor
xchg
sahf
push
mov
pop
push
rcrb
loop
jno,pt
dec
push
mov
adc
pushf
stos
rcll
pop
js
cli
mov
sbb
jecxz
sahf
and
mov
add
int
lea
aad
lret
pop
outsl
cltd
lcall
inc
movsl
sahf
add
cltd
sbb
loop
or
cmp
pop
jmp
and
xchg
leave
and
and
loop
jbe
dec
call
ljmp
pop
test
sub
unpcklps
and
test
xchg
push
push
sub
movl
push
lock
mov
fcmovnu
iret
adc
int
lods
mov
subb
fcoml
pop
cmpsb
nop
sub
xor
divb
xor
and
iret
rcl
push
or
fisubrl
jo
notb
xor
cld
aaa
addr16
lahf
and
mov
xor
mov
push
cs
pop
jnp
jns
xor
add
icebp
pusha
add
pop
mov
jno
sar
pop
nop
sbb
cwtl
rolb
bnd
clc
sub
xchg
ret
or
mov
mov
adc
aad
sti
cmc
andb
or
mov
pop
or
negb
lcall
dec
xor
outsl
pop
insl
ss
hlt
leave
xor
push
sub
jne
je
clc
dec
cmp
enter
jmp
pop
mov
xchg
mov
subb
sbb
cmp
mov
xor
movsl
push
pop
push
jnp
dec
aaa
out
jecxz
arpl
pop
add
mov
fistl
sbb
inc
adcb
cld
jns
stos
mov
pop
xchg
adc
xchg
sub
aas
pop
dec
gs
mov
sbb
fsubrl
or
aam
ljmp
hlt
or
xchg
lea
jmp
lock
sbb
lods
mov
jo
pop
push
mov
and
mov
and
fadd
repz
iret
fmuls
pop
push
mov
sarl
cmc
inc
push
in
repnz
adc
inc
pop
cmp
shrl
xor
outsl
js
mov
arpl
jle
mov
or
lods
movsl
fisubrs
aaa
ljmp
cmp
xlat
ret
and
push
push
orb
test
cmc
sub
dec
xor
testb
roll
aas
pushf
push
dec
sub
ret
inc
sub
inc
repz
sahf
idivb
dec
push
xchg
cli
fdivs
shl
out
dec
push
in
cmp
jmp
sub
pop
push
movsb
inc
push
popa
sti
insb
in
loope
xchg
test
int3
pop
xchg
mov
mov
movsl
dec
cld
jne
iret
pop
test
push
cmp
lea
hlt
sub
sarb
mov
sub
gs
jae
or
jecxz
pop
cmp
mov
jg
push
push
insl
frstor
inc
stos
lahf
test
nop
mov
ljmp
imull
repz
dec
movsl
fildl
or
pop
or
addl
inc
xchg
leave
lcall
test
inc
push
fildll
jle
or
xchg
pop
arpl
xlat
cmp
ja
mov
lods
rorb
jbe
mov
pop
repnz
sub
aam
xchg
pop
in
xor
push
mov
cmc
cmpsl
shl
clc
sahf
fcmovu
xor
cmpb
xchg
sbb
in
mov
xor
inc
mov
pop
jno
pop
mov
push
and
pop
aam
push
movsl
sbb
testb
idivl
daa
pop
pushf
mov
adc
dec
push
aas
pop
xor
jmp
dec
cltd
pop
push
push
sub
jmp
dec
lahf
adcb
xor
cltd
ja
addr16
mov
repz
sub
out
and
adc
inc
and
out
xor
push
push
mov
fsubs
xorl
icebp
out
scas
push
cmc
adc
mov
pop
pop
psllw
mov
inc
les
lahf
mov
stc
dec
xchg
stc
xchg
je
mov
jp
pushf
ss
ffree
jecxz
je
push
push
aam
jp
adc
sub
mov
lret
fisttps
push
sub
addr16
mov
iret
jmp
ret
jb
sub
outsl
vpxor
stos
push
inc
vpmacsww
lds
and
insl
inc
fistl
aad
out
pushf
cmpsl
lahf
clc
mov
popa
push
ret
xchg
xchg
push
mov
cmp
aaa
lahf
cmp
arpl
push
xchg
xchg
arpl
repnz
daa
ret
fimull
fs
les
and
fistpll
lods
enter
and
dec
stos
xor
pop
mov
pop
and
out
cmp
das
icebp
dec
add
std
or
dec
out
pop
sub
test
or
lcall
fdivrs
loope
add
test
cmc
mov
mov
aaa
movsb
mov
cld
pop
inc
mov
gs
int3
shrb
mov
jl
nop
or
test
inc
push
rolb
cmp
lcall
negb
pop
xor
bnd
negl
std
jg
call
movsb
cwtl
mov
loop
xchg
test
inc
mov
iret
lock
inc
hlt
adc
cmp
adc
dec
hlt
push
lods
xor
mov
outsl
cld
cwtl
stc
cmp
mov
divl
or
mov
push
sub
dec
lret
sub
gs
push
inc
cmp
push
jge
sub
push
popa
aam
sub
std
daa
xor
mov
pop
pusha
pop
fdiv
xor
sub
ja
movsb
ss
add
nop
nop
cmp
stos
inc
dec
pop
jbe
pusha
insl
mov
in
cmp
jmp
inc
mov
adc
sbb
add
inc
xchg
adc
imul
adc
loop
jecxz
mov
lcall
in
and
call
or
dec
pop
mov
pop
xchg
stos
gs
inc
pop
push
pop
jmp
xchg
and
js
sbb
push
gs
pop
dec
int3
push
push
push
jp
enter
call
lods
xlat
bswap
je
ljmp
sbb
ret
ficoms
jb
xor
lcall
pop
cmp
xchg
das
mov
lods
stos
cli
push
jmp
inc
pop
test
jae
sahf
push
or
dec
push
xor
outsl
sub
add
mov
mov
movsb
sub
in
sub
loope
mov
js
adc
xchg
xor
out
cltd
inc
leave
movsl
jp
lock
lods
inc
cmp
mov
cli
shr
mov
ja
pushf
push
mov
out
inc
stos
test
adc
xchg
les
mov
scas
xor
sahf
mov
xchg
data16
mov
jle
hlt
adc
dec
mov
cwtl
scas
outsb
dec
jge
jl
fstpt
out
lret
scas
fucom
xchg
dec
jbe
scas
addr16
add
mov
cwtl
hlt
adc
xchg
jl
add
mov
mov
add
add
subl
and
pop
sbb
mov
mov
daa
inc
pop
mov
and
lcall
mov
jle
ficoms
jmp
jns
fcomps
inc
inc
mov
and
ret
sbb
or
sub
pop
loope
dec
faddl
int
shlb
mov
and
cmpsb
push
xchg
mov
cwtl
cmp
sbb
insb
push
or
mov
add
dec
clc
jge
and
xorb
rorl
add
das
xor
shlb
fdivl
mov
or
ret
push
lret
add
jmp
lods
mov
push
mov
and
or
mov
push
lock
loop
mov
xor
xor
add
pop
add
mov
xor
xchg
ldmxcsr
pop
dec
push
std
lock
fs
jns
mov
lods
push
and
jl
mov
xchg
popf
cmpsb
pop
repz
push
sahf
xor
lea
add
pop
test
stos
iret
lret
push
in
xchg
jl
and
mov
out
mov
mul
in
sbbb
sbb
pop
fstl
pop
cltd
scas
push
pop
inc
andl
jns
rorb
lods
mov
imul
mov
sbb
cmp
dec
xor
rorb
cmc
cmp
test
push
push
and
int
dec
jg
push
js
xchg
fcoml
push
into
popaw
push
pop
iret
jge
lret
mov
mov
cmp
add
jne
cs
xchg
cmp
jp
mov
int
push
mov
add
jmp
repz
xor
stos
fldcw
ficompl
pop
mov
or
xor
mov
pop
nop
mov
out
and
sub
mov
add
int
xor
mov
dec
sbb
adc
mov
cmp
xor
std
decb
inc
inc
xchg
xor
nop
push
fisubl
pusha
sbb
loopne
mov
gs
.byte
