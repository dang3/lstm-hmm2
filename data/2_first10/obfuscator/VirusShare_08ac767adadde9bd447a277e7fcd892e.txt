cmp
sbb
sbb
or
push
and
aam
xor
aaa
pushf
jnp
imul
mov
sub
outsl
jle
mov
jb
jmp
pop
shrl
fists
dec
pusha
dec
jne
inc
pop
ja
data16
push
dec
lds
loope
sbb
lfs
xchg
inc
lea
bound
mov
notb
es
adc
sbb
pop
aas
pop
loop
xor
test
pop
out
mov
mov
mov
sub
or
aad
push
xor
loope
ss
sahf
mov
fcomp
movb
inc
stos
outsl
inc
scas
test
mov
xor
dec
adc
aaa
add
mov
pop
xchg
leave
xor
push
xchg
cs
mov
sub
rolb
sbbl
insb
mov
jle
leave
les
push
xor
ret
mov
pushf
in
repz
cmp
mov
jns
jmp
mov
dec
push
sub
push
mov
imul
dec
push
lret
inc
cwtl
dec
outsl
pop
adc
adc
sbb
repnz
pop
jmp
xor
movsb
test
imul
or
addr16
add
scas
fldt
mov
loope
lock
mov
xchg
daa
push
shlb
dec
outsb
pushw
adc
clc
mov
push
push
das
jo
pop
xchg
mov
mov
unpcklps
add
push
je
push
adc
sub
xchg
mov
sub
out
mov
jb
shr
xchg
jnp
cmpsl
andb
xor
int
mov
cmpsl
mov
roll
mov
mov
sbb
mov
add
in
shlb
ss
lods
jl
mov
into
sarb
out
xor
enter
pop
push
mov
ljmp
jo
push
test
pop
xchg
or
mov
push
dec
je
jo
ret
outsb
out
leave
out
out
imul
jb
scas
push
inc
loopne
fcomi
fcoml
xlat
sar
and
out
test
daa
loopne
icebp
xor
sub
data16
js
daa
sub
fs
ret
mov
aad
repnz
jl
shrb
dec
fisubs
jb
dec
and
outsb
ror
mov
mov
or
aaa
mov
stc
andl
in
xor
adc
xchg
sbb
cmp
jl
lret
add
pusha
test
cs
or
je,pn
mov
stos
dec
mov
inc
dec
mov
cmp
pop
dec
andl
out
sub
mov
lret
js
shlb
lret
ljmp
faddl
xchg
push
cld
stc
arpl
fidivs
outsl
fwait
mov
push
ret
fs
xor
xor
jmp
push
std
shll
popa
mov
dec
pop
scas
pop
push
jmp
movsb
test
nop
jmp
push
stos
jle
mov
fsubl
into
adc
lret
mov
mov
aas
mov
add
fdiv
ljmp
jle
nop
sbbl
out
ss
jl
js
add
push
xor
cmp
hlt
dec
popf
popa
dec
pop
loop
sub
push
fwait
mov
sysenter
xor
sub
xchg
imul
cmp
fiadds
cmpsl
pop
daa
pusha
subb
outsl
cmp
pop
cmp
popf
in
enter
xchg
push
cmp
xchg
or
inc
sbb
out
xchg
xor
xor
sbb
or
mov
mov
xor
and
aas
rcrl
pop
out
sbb
lock
mov
js
xor
mov
xor
scas
jle
rcrb
daa
xor
dec
js
fnstsw
insw
mov
dec
jae
jp
adc
xchg
scas
add
push
mov
lcall
mov
mov
push
mov
jnp
outsb
mov
out
lock
roll
out
sbb
fwait
pop
data16
adc
inc
imul
mov
inc
sub
mov
add
stos
out
and
add
fstl
arpl
adc
mov
jo
ja
movsl
ss
adc
sahf
in
adc
imul
xchg
pusha
adc
mov
jp
lret
in
in
sbb
add
pushf
lret
fcmovb
rclb
xchg
cmp
insl
cld
add
pop
jnp
pop
addr16
mov
dec
sub
sahf
mov
outsl
and
push
sti
dec
test
jo
inc
and
cwtl
insl
sbb
mov
popa
hlt
push
mov
pop
jb
lcall
ds
scas
adc
rorl
repnz
outsb
cmp
dec
inc
xchg
insb
je
mov
das
push
mov
call
mov
das
lahf
sbb
jb
cmp
jbe
jle
lret
cmp
sarb
pusha
addr16
cmp
inc
mov
jl
or
mov
std
sahf
outsl
fdivs
cmc
jns
push
mov
cltd
movsb
fwait
stc
cmp
dec
pop
sar
mov
sub
xchg
fcom
inc
xor
loop
pop
pop
jns
lret
bound
cmpps
into
clc
fcmovne
test
adc
sbb
mov
sub
push
cmpsb
sbb
mov
dec
cli
sti
mov
and
insl
es
sub
pop
pop
push
push
and
pop
pop
push
push
add
pop
push
jp
test
pop
nop
or
or
lea
pusha
mov
cld
mov
xchg
jmp
scas
imul
sub
cmpsb
addr16
jecxz
lahf
pusha
in
mov
pop
pop
adc
push
sti
mov
sub
push
imul
stos
imul
lcall
add
add
test
ja
xchg
jno
jl
cmp
jns
push
shl
pop
sub
test
cmc
nop
shl
or
push
push
jl
test
pop
pop
cld
rol
jg
test
jne
sub
jmp
jmp
call
jmp
std
adc
out
cmp
test
and
mov
fbld
mov
xchg
aas
loopne
sbb
addr16
fnsave
inc
pop
lods
out
mov
or
inc
inc
inc
inc
jns
and
nop
inc
dec
add
test
lea
jmp
add
into
inc
int3
or
jp
mov
int3
sub
mov
mov
mov
insl
cmpsb
mov
sub
hlt
xchg
fdivrs
mov
push
add
pop
cmp
jno
jp
jb
push
test
pop
push
push
push
mov
pop
pop
pop
test
pushl
pop
or
push
jl
push
mov
pop
pop
jno
jnp
sar
xchg
push
jo
jo
push
inc
pop
pop
jl
cmp
clc
testl
jne
jmp
jno
jg
push
inc
dec
pop
nop
test
nop
push
mov
add
pop
push
pop
push
movzbl
shl
push
pop
xor
jno
push
inc
pop
jno
test
sub
jne
push
or
pop
add
ror
jg
jnp
shl
push
add
pop
ja
js
add
loop
pop
push
js
jb
sub
pop
cmp
push
pushl
xor
pop
pop
jmp
xor
jae
iret
push
cmc
scas
add
or
out
repz
mov
mov
dec
mov
js
inc
fiadds
ljmp
mov
lcall
add
subb
filds
into
push
addr16
jae
mov
jnp
arpl
repz
inc
mov
rcrb
cmpsl
xchg
inc
mov
push
shlb
mov
outsb
mov
mov
inc
inc
inc
inc
cld
stc
sub
cld
inc
loop
jecxz
xchg
scas
gs
dec
rcrl
ficompl
sub
mov
or
push
loopne
fsts
or
dec
jne
jmp
dec
popf
aaa
adc
dec
shrl
cmp
fcomp
pop
jg
push
sahf
and
movsl
push
xor
das
stos
xchg
fwait
jecxz
xchg
inc
xor
loopne
mov
test
popa
lcall
stos
pop
rep
sub
test
in
mov
adc
cmp
je
pop
testl
popf
xchg
pop
mov
in
repnz
sub
in
lret
call
out
xchg
push
sub
inc
mov
jl
ds
pop
pop
les
add
pop
out
xchg
sbbb
hlt
sub
jg
loop
in
aaa
lcall
mov
xor
cmc
jb
cmp
sub
sbb
pop
inc
aas
pop
dec
push
sbb
ja
pop
movb
jecxz
test
push
mov
pop
cmpsb
fs
pushf
pushf
pop
mov
call
aam
or
and
or
inc
push
call
xor
mov
mov
scas
dec
push
call
insb
pop
or
pop
dec
imul
mov
xchg
jnp
push
inc
add
stc
xchg
out
test
adc
inc
jecxz
sub
pop
sbb
sbb
cli
test
mov
fimuls
mov
outsb
jecxz
inc
ds
lock
dec
out
push
loope
dec
cmpxchg
insl
notb
push
jle
sahf
adc
xorl
loope
das
fildl
mov
dec
cmp
mov
add
pop
xor
je
or
test
lea
mov
lock
jne
push
jbe
ljmp
mov
adc
mov
adc
dec
push
lahf
mov
in
mov
cmp
and
inc
sub
jle
dec
idivb
in
push
scas
jno
outsb
mov
jno
push
xchg
mov
cs
sub
loop
repz
outsb
or
js
mov
lods
xor
push
and
mov
dec
sar
aaa
test
push
shll
push
imulb
into
mov
leave
jbe
xchg
sub
jne
stos
inc
jne
lret
cmp
cld
xchg
inc
orl
cmp
enter
sbbl
xor
add
cmp
out
loopne
mov
fisttpll
dec
and
jae
or
pop
testb
inc
push
test
jge
xor
xorb
xchg
test
xchg
cs
fdivrs
inc
faddl
sbb
icebp
xchg
cmp
mov
push
cmpsl
inc
xor
adc
and
lcall
shrb
mov
dec
cltd
mov
cmp
xchg
stos
xchg
arpl
xor
sarb
mov
cmc
jb
cmpl
pop
inc
jp
imul
mov
out
shlb
pushf
aaa
cmc
bound
ss
sub
out
fistpll
sbb
popa
divl
mov
xchg
loope
add
scas
mov
inc
mov
xchg
push
jbe
rcrl
pop
cmp
in
pop
das
mov
mov
and
pop
ret
rorb
ljmp
xor
ja
jno
push
out
mov
faddl
sub
cmpsl
or
flds
dec
fcompl
out
adc
xor
sar
jo
inc
jp
nop
test
push
mov
adc
cld
and
shll
fadd
jno
test
mov
aad
fs
negb
movsb
mov
sbb
jecxz
shrb
mov
inc
cmpsl
jo
cmp
jmp
xor
movsb
sbb
sbb
outsl
and
cmpsb
cwtl
push
adc
push
push
mov
test
xor
add
sahf
ds
jg
sbb
push
push
ja
and
or
pop
or
sti
mov
push
roll
into
xlat
imul
mov
cld
scas
jno
lods
stos
mov
jge
sbb
dec
cmpsl
mov
inc
data16
cmp
mov
icebp
cmc
xchg
mov
mov
lahf
fbstp
xchg
insb
fnstsw
mov
mov
fsts
dec
fmull
in
rcrl
and
insl
rcll
fs
addb
mov
shr
imul
inc
pop
int
test
into
jl
jbe
cmp
clc
iret
mov
or
js
mov
pop
or
frndint
pushf
jecxz
sub
push
leave
mov
fstpt
movsl
das
mov
aam
fdivs
ficoml
lods
popa
or
xor
out
xor
mov
shlb
shll
xchg
pushf
js
popf
mov
daa
fstpt
add
sub
clc
rclb
lock
imul
mov
cmp
inc
and
or
mov
inc
xor
fisubrl
rorb
ja
rcrl
mov
jmp
dec
dec
lods
loope
or
mov
push
cli
mov
in
or
push
jno
ja
mov
in
push
xchg
mov
and
push
fistpl
mov
xchg
xchg
push
stos
popf
test
dec
cld
sbb
js
mov
lret
fldl
jge
jecxz
cmp
add
mov
je
lahf
lock
notb
inc
popf
testb
mov
pop
jns
stc
int3
jmp
das
push
nop
pop
pop
or
jmp
repz
cld
sbb
sbb
adc
shlb
out
pushf
xchg
dec
leave
xchg
mov
add
and
dec
out
inc
aaa
ds
adc
out
pop
outsb
inc
shl
lods
mov
push
xchg
arpl
push
stos
out
xor
mov
cs
sub
mov
addl
mov
popf
add
sub
fidivrl
sbb
sub
jne
jno
fcmovb
icebp
add
dec
das
insb
out
aam
lods
mov
or
inc
sub
mov
jmp
mov
jno
lret
xchg
push
leave
in
loopne
and
ds
pusha
pushf
dec
aad
sub
mov
mov
sub
pop
and
mov
adc
popa
add
xchg
fists
fcomps
push
movsb
cs
int
xchg
push
sbb
sub
inc
dec
into
in
sbb
pop
mov
push
out
and
mov
scas
in
xor
inc
jecxz
je
out
adc
clc
rcl
inc
mov
stos
dec
nop
adc
fnsave
nop
sub
fimull
sub
pusha
or
and
hlt
jno
xchg
pusha
lock
jbe
ss
fsubs
mov
aad
out
sbb
ja
testl
push
loop
push
fistpl
jne
mov
ffreep
aaa
inc
hlt
ds
or
lcall
out
or
idiv
popf
adc
negl
enter
jp
adc
pop
push
popf
or
push
icebp
push
je
or
sub
imul
out
push
aam
mov
fadd
inc
or
pop
int
cld
cmpsb
xorl
loopne
sbbl
out
xor
xchg
pop
and
lock
mov
dec
lcall
in
pop
xchg
sub
push
pop
pop
repnz
lods
es
jns
ret
loop
sbbl
popf
pop
sarb
mov
loop
push
rorb
shll
push
xchg
cltd
sub
lcall
in
pop
inc
ss
fsubrl
std
pop
je
ficoml
movsl
ja
andl
inc
push
inc
or
mov
js
in
dec
mov
cmp
subl
push
pop
lahf
lret
rcr
inc
xor
mov
cli
out
cmpsb
inc
sub
lods
loope
pop
insl
aaa
jecxz
out
jnp
arpl
ja
sub
add
rcpps
push
aam
jecxz
sbb
adc
ljmp
xchg
dec
cmp
lock
imul
adc
mov
insl
mov
pop
adc
scas
cmp
insl
fsts
sub
pop
into
jecxz
ljmp
xchg
stos
sub
or
cmp
push
insb
pop
ljmp
mov
jo
inc
sub
pop
dec
cmp
fucom
push
imulb
push
push
popa
cld
fnstsw
pop
dec
fs
jns
cmpsb
or
pop
clc
or
xor
lret
das
aaa
pop
jmp
and
pop
push
mov
push
in
in
push
insl
int
inc
outsb
xchg
in
or
cmpsl
pusha
cltd
jbe
or
sbb
push
test
jecxz
arpl
loope
fimuls
in
sub
dec
lret
fmuls
scas
jecxz
ss
mov
in
lds
ljmp
cmp
scas
mov
xchg
and
mov
mov
push
jne
cmp
jecxz
push
pop
pmulhuw
sbb
addr16
push
addl
sti
arpl
nop
xlat
cltd
in
pop
rcrb
mov
fs
pusha
push
push
mov
nop
jbe
and
sub
data16
int
repnz
subl
jle
sub
imul
mov
in
sbb
jbe
lods
call
icebp
inc
cmpsb
jb
sti
jns
mov
jmp
dec
pop
inc
std
jno
imul
repnz
pop
inc
movsl
out
repnz
cmpsb
lds
mov
add
je
aas
out
mov
xchg
fwait
aad
mov
add
jmp
cmp
cwtl
dec
sahf
mov
jnp
mov
or
outsl
adc
inc
fstpl
fnstcw
test
mov
jecxz
decb
pop
daa
rcl
out
cmp
push
je
push
daa
push
jo
xor
test
dec
aaa
xchg
pusha
push
jp
pop
pop
jb
out
jp
mov
add
adc
adc
pop
ret
sbb
dec
sarl
fs
shlb
adc
adc
mov
ret
jle
push
jbe
cwtl
sahf
sbb
and
pop
fistpll
scas
shrl
mov
pusha
add
add
repnz
shr
cmp
out
jge
decl
gs
mov
push
jecxz
pop
das
aad
aad
int3
push
das
fs
fwait
adc
xchg
loop
sarb
jo
inc
cwtl
lret
in
xor
lods
int
jmp
leave
cmp
jns
jl
and
push
sbb
gs
mov
inc
sub
cmc
cmp
inc
mov
sub
addr16
xchg
and
ret
outsb
adc
mov
dec
les
xor
loop
and
and
in
xchg
jecxz
fiaddl
xchg
mov
sahf
inc
ret
aas
push
inc
mov
lds
dec
xchg
repz
rorb
mov
xlat
dec
jb
sahf
in
imul
cli
xor
incl
inc
int
inc
add
lahf
mov
fstpt
add
hlt
in
dec
popa
pushf
adc
das
shr
cli
mov
iret
cs
imul
mov
cmovae
lret
sub
xchg
andb
shll
jl
push
dec
inc
outsb
ror
scas
adc
adc
jb
cmc
sti
pop
fs
shll
pop
jae
dec
xchg
dec
cltd
xchg
loope
or
movsb
mov
dec
or
add
or
pop
dec
lods
movl
mov
sub
mov
push
pushf
cli
dec
pusha
jnp
inc
into
rorl
dec
loope
jg
inc
cld
mul
nop
push
sahf
aam
out
push
pop
mov
rsm
dec
inc
out
push
aaa
and
mov
les
cmp
lret
sarl
mov
nop
repz
fldt
xchg
push
negb
repnz
inc
add
pushf
outsl
je
xor
pop
insb
fidivl
adc
inc
loop
arpl
scas
jns
mov
faddp
mov
aaa
dec
stos
movsl
xchg
mov
pop
insl
sti
xchg
fldl
mull
jp
dec
int3
cmp
std
sbbl
jb
notb
popf
xchg
xchg
mov
and
iret
mov
imull
and
sub
dec
inc
pop
push
and
jmp
xchg
sti
dec
in
jp
in
pop
jge
daa
pop
pop
cs
or
or
mov
mov
xchg
push
stos
xchg
push
mov
push
stc
xadd
sub
scas
jbe
jge
pop
jmp
std
mov
and
shr
push
push
adc
aaa
loopne
aad
mov
daa
pop
push
ds
sub
cmp
movsl
add
fcoms
stos
repnz
mov
jmp
test
sub
lds
fcoml
ja
outsb
andl
jg
movsl
jne
daa
xor
dec
inc
mov
cld
mov
ljmp
adc
adc
pop
fbstp
cwtl
pop
mov
mov
fwait
push
mov
jbe
ss
test
sub
loop
mov
pop
insl
outsb
push
mov
inc
arpl
dec
push
mov
xchg
sub
and
test
push
xor
lcall
xor
xchg
mov
rolb
pusha
mov
sub
jg
push
rolb
into
ja
adc
xchg
int3
bound
push
outsb
mov
gs
loop
mov
inc
out
and
cmp
or
repz
fsubrl
in
cs
or
inc
je
sub
add
shll
xchg
push
xor
or
inc
mov
jg
bnd
cwtl
frstor
cmp
mov
mov
ret
mov
stos
pusha
scas
mov
sarl
sar
hlt
out
sub
sarb
shrl
xor
or
xchg
int3
mov
pop
cmp
pop
mov
cmpsl
in
les
scas
cli
sbb
mov
test
adc
xor
cwtl
fwait
sbb
xchg
inc
aam
inc
xchg
ljmp
jp
ret
mov
push
je
push
lds
popa
loop
cld
mov
lods
and
or
addr16
les
add
sti
vpsadbw
les
cmpsl
xlat
lock
shr
adc
inc
enter
xchg
xchg
imul
and
dec
in
enter
andb
sbb
ror
add
jg
sub
inc
push
popf
add
orb
cmp
jbe
addb
inc
xchg
and
pop
fstl
insl
popa
sbb
pusha
sti
andb
mov
mov
in
or
and
jns
cmpsb
rcrl
movsb
or
leave
mov
xchg
adcb
sbb
cli
inc
pop
pop
mov
dec
ljmp
cmp
sbb
dec
xor
std
into
sbb
mov
les
add
cmp
mov
and
out
cltd
jne
pop
push
sub
cmp
sbb
mov
ffree
sub
mov
push
in
mov
pushl
mov
out
jbe
pop
xor
es
and
stos
pop
mov
stc
mov
xchg
call
test
dec
icebp
addr16
push
dec
sub
push
test
flds
push
dec
js
pop
out
adc
rcrb
fcmovbe
into
out
mov
sub
adc
or
adc
into
mov
xor
loope
mov
incl
mov
cwtl
cmp
mov
dec
xor
dec
and
and
stc
out
dec
cmpsl
cmpl
aam
scas
inc
call
out
cli
test
les
xor
movsl
pcmpeqw
adc
xchg
xorb
inc
in
add
jle
jno
daa
cmpsb
stos
add
adc
test
bound
jl
bswap
pop
or
das
cmpsb
adc
adc
jne
pop
cmc
loope
pop
pusha
fs
xor
mov
xchg
hlt
xchg
push
mov
mov
jp
das
inc
stos
push
dec
cmp
dec
push
test
lock
cs
shll
ja
rcll
int
inc
jle
cmp
iret
insb
push
addr16
xchg
pop
iret
mov
nop
fsubrs
lock
cmpsl
outsl
or
insl
jo
scas
ret
or
fsubr
rcrb
loopne
xchg
jbe
inc
jnp
inc
pop
iret
addr16
sub
mov
imul
dec
push
das
in
xchg
push
mov
cmp
cmpsl
fs
xchg
das
cli
pop
jbe
cmp
in
adc
dec
imul
or
push
mov
loop
dec
je
sar
adc
gs
xorl
fstp
xor
gs
sbb
pop
out
push
push
inc
pushf
jns
dec
mov
cs
aad
cmp
bound
mov
or
pop
hlt
xor
cs
mov
mov
xchg
sub
std
mov
sti
pop
lret
imul
cmp
pop
sub
xor
lret
lret
dec
mov
arpl
cmpsl
push
int3
ror
mov
inc
push
add
movl
xchg
addr16
leave
xchg
stc
xorb
xchg
pop
test
inc
sub
mov
test
add
fwait
inc
repz
sahf
push
ds
loope
scas
cmc
mov
push
mov
aas
movl
jno
adc
outsl
fadd
data16
outsb
pop
out
and
jne
xor
xchg
dec
fistpl
pushf
repz
and
arpl
sbb
int
aas
pusha
fbld
sbb
adc
cs
push
pop
aad
mov
xlat
xor
loopne
fcompl
pop
jbe
mov
or
and
mov
pop
jmp
fisubl
add
sbb
lea
dec
int3
add
jmp
adc
mov
adc
dec
daa
es
dec
mov
jns
not
and
subb
insl
pusha
xor
ss
cmp
mov
jmp
pop
push
cltd
push
mov
icebp
jbe
jmp
aaa
scas
movsb
outsl
adc
dec
pop
mov
dec
lods
mov
push
mov
pop
or
lds
ss
in
ds
call
lcall
cld
ret
std
push
add
fs
mov
adc
mov
xchg
mov
pop
dec
push
jp
aas
shll
pop
or
in
lret
pushf
xor
fsts
mov
sub
fs
mov
push
es
or
lods
sbbl
or
out
sbb
sub
pop
or
rcrl
or
fcmovnb
lret
mov
rcrl
pop
and
popa
sbb
mov
dec
sub
inc
enter
fwait
inc
push
lea
fstpl
xchg
daa
movsl
sbb
cwtl
lods
aas
dec
mov
mov
ret
adc
and
xchg
in
jg
cmp
inc
lock
cmp
mov
push
and
sbb
imul
dec
clc
cs
push
jl
and
pusha
cmp
stc
mov
push
icebp
xlat
cltd
cmp
out
shrb
ljmp
test
pop
sub
and
adc
mov
data16
pop
xchg
scas
ja
mov
fmul
sbb
xlat
jg
xor
pop
xor
les
inc
out
ja
outsl
jae
sbb
cmp
loop
hlt
decl
cmpsl
mov
cs
scas
mov
and
jge
outsb
cmp
stc
sahf
jo
lahf
push
js
pop
aam
pop
inc
pop
leave
jp
xor
dec
cli
inc
inc
xor
mov
push
outsl
bound
ret
or
mov
xor
stos
jg
xor
mov
or
adc
mov
je
mov
out
cmpsb
sbb
pop
pusha
into
adc
aam
or
lock
cld
shl
xlat
jbe,pt
push
fwait
sub
mov
fistpll
jmp
adc
inc
popa
sub
shrb
mov
add
les
cmc
mov
dec
fimull
add
adc
lcall
mov
aad
add
ret
or
push
pop
int3
aas
mov
rorb
pop
fidivl
jge
cmp
dec
adc
inc
out
jle
out
xchg
clc
stos
lods
mov
or
inc
test
sub
or
inc
sub
jnp
dec
sub
pop
mov
ja
mov
mov
jo
jbe
jecxz
cmp
xchg
mov
sub
mov
cmp
add
lock
sti
movsl
ret
cmp
mov
xlat
jge
lds
pop
outsb
sub
cmc
sbb
cmp
pushf
inc
stos
xchg
mov
xchg
inc
lock
cmp
jmp
lods
or
cmp
push
push
mov
fisttpl
adc
push
lea
xor
cmp
xchg
cmpsl
arpl
lea
addr16
scas
adc
cli
popa
adc
loop
pop
cmp
sub
sub
divb
inc
loope
add
insb
mov
ljmp
and
dec
pop
aam
dec
jnp
ja
outsl
mov
inc
lds
test
jmp
iret
sbb
and
jle
pop
iret
sbbl
test
sti
xlat
pusha
jle
lock
add
or
inc
mov
push
clc
mov
les
xlat
fadd
mov
sbb
jecxz
adc
mov
xor
add
sahf
add
fists
cmp
jnp
inc
push
outsl
repz
call
push
sub
mov
inc
sbb
push
lock
das
out
adc
aas
jno
jl
inc
jb
xor
jae
sbb
pop
ffreep
dec
in
rolb
addr16
cmpsl
cmp
pop
mov
pop
jle
fstpt
adc
push
xchg
insl
xor
bound
mov
fcoms
dec
stos
pop
int3
in
into
je
xchg
rcll
lock
notb
das
cmpb
insb
sti
jg
daa
push
aas
loopne
mov
loop
inc
addr16
out
test
xchg
ljmp
xor
push
pop
lea
cmp
mov
sahf
jmp
mov
insb
xchg
sbb
ret
mov
push
hlt
sbb
push
pop
mov
test
cmp
mov
inc
xchg
pusha
rol
lock
push
and
cmp
adc
shlb
push
cs
popa
dec
testl
jecxz
lret
bound
das
cmpsb
pop
icebp
iret
fisttpl
int
notb
mov
insl
insb
push
jb
lret
push
pusha
addl
imul
mov
push
stc
xor
dec
test
mov
test
movsl
lods
je
jae
push
pop
xor
aad
mov
nop
popa
cwtd
pushf
arpl
insl
call
cmp
shl
loopne
scas
adc
stos
addr16
push
fldcw
pop
int
ret
mov
fisubrl
negl
insl
push
lret
leave
je
in
loope
and
xchg
arpl
add
jnp
adc
leave
cmp
outsb
mov
push
roll
adc
and
lea
mov
add
or
or
cli
mov
lods
inc
enter
aas
xchg
or
ret
xchg
add
sahf
lods
sub
mov
fwait
movsb
jg
dec
push
adcl
jecxz
push
jb
data16
cwtl
xchg
inc
adc
hlt
push
jno
insl
mov
lea
test
add
xchg
cmp
push
test
leave
jp
movsl
popa
rol
ret
jne
pop
mov
hlt
mov
mov
lahf
mov
shrl
or
lret
jnp
dec
sar
adc
mov
push
call
inc
cli
adc
jae
fsubs
inc
jo
insb
cmp
cli
sti
sti
mov
jns
outsl
js
mov
cltd
xchg
pop
pop
xor
xchg
adc
pusha
cs
cmpsl
sub
les
dec
stos
and
call
pop
fwait
xchg
lods
ljmp
sub
mov
mov
pop
shrl
fnstcw
subb
inc
ljmp
sub
or
test
adc
iretw
aad
jl
insb
outsl
pop
pop
mov
mov
or
mov
xchg
aaa
cld
jge
cmc
xchg
imul
push
lods
pushf
jns
icebp
cmp
xchg
inc
call
push
xchg
jae
jb
int
fisubl
faddl
lret
mov
jge
pop
xchg
outsb
xchg
jb
mov
cmpb
filds
push
mov
mov
rolb
popf
or
cmpsb
cwtl
inc
jae
sbb
xchg
mov
shrl
jg
mov
out
les
sub
and
addr16
idivb
lcall
pushf
lds
cmpsl
cwtl
mov
mov
std
sbb
mov
adc
or
inc
fsubrl
xchg
stos
stc
jecxz
imul
into
arpl
push
jns
cwtl
ljmp
inc
loopne
popf
pusha
mov
jbe
lock
adc
xor
popa
jno
out
aas
jae
sti
xchg
ja
daa
pop
sub
jnp
jns
mov
push
out
push
jo
and
mov
mov
cmp
mov
lods
pop
das
movsb
xchg
add
aam
mov
xchg
mov
pop
adc
insb
inc
pop
push
ljmp
divb
and
jge
inc
add
sub
stos
xor
les
cwtl
outsl
inc
rcrl
les
mov
rcrb
inc
shlb
stos
mov
popf
aaa
xor
loopne
lgs
outsb
sahf
sbb
xor
add
mov
pop
test
and
ds
inc
rorb
jecxz
sub
mov
iret
xchg
jne
ds
aas
lahf
xor
or
push
dec
das
testb
push
mov
cmp
mov
popf
rorl
pusha
mov
adc
bound
scas
and
jno
loope
xchg
imul
addl
pop
mov
push
test
add
pop
sti
dec
repnz
pop
fwait
ss
xchg
dec
jg
les
xchg
sub
gs
mov
in
sbb
aad
mov
inc
fidivl
cmpsb
xor
xchg
xchg
incl
push
mov
pop
sub
call
cli
in
aaa
mov
in
in
aas
repnz
and
lret
stc
jns
push
adc
jo
repz
xchg
pop
aam
negl
shlb
clc
testb
outsb
pop
loopne
repnz
push
inc
xchg
cld
jle
lahf
pop
mov
push
sub
mov
xorb
loopne
and
jnp
loope
fwait
adc
out
adc
in
add
jmp
pop
idivl
pop
mov
cmp
ljmp
mov
mov
scas
in
xor
push
sahf
int3
and
dec
into
pop
mov
ljmp
ja
into
daa
xor
int
push
dec
ljmp
jmp
mov
or
cmp
popl
jp
and
dec
popa
mov
push
mov
adc
movsb
loopne
push
mov
cltd
jp
shrl
dec
add
dec
cmp
inc
push
aaa
fstpt
jp
push
cmp
imul
push
xorl
stos
xchg
aam
xor
icebp
sbb
add
dec
push
icebp
jmp
jne
das
jb
jnp
leave
xchg
pop
inc
jecxz
fldt
je
or
nop
sbb
sar
xor
jnp
dec
sbb
mov
cmpsl
test
lret
sti
js
cmp
xor
add
js
jp
push
jl
sahf
sar
cmp
and
xor
sub
mov
insb
or
jmp
scas
xor
imul
sub
dec
stos
js
sub
or
jmp
sub
sub
sub
inc
and
test
xor
cmp
adc
dec
adc
push
xchg
cld
out
and
mov
lods
ss
jmp
add
enter
sti
pop
mov
cmp
popa
rcrl
xchg
cmp
xchg
fistps
mov
push
or
adc
mov
adc
movhps
or
repz
testl
dec
int
int
test
adc
test
ret
push
jecxz
lea
lea
sahf
sbb
xchg
push
popf
jns
push
es
push
notb
push
and
data16
cmp
and
sahf
push
jl
enter
xor
xor
add
push
lcall
jno
jg
and
lea
fscale
mov
inc
pop
dec
inc
inc
data16
push
sbb
mov
cmp
mov
and
aas
cli
mov
jl
pop
sub
lea
add
pop
mov
fdivp
sub
inc
mov
push
mov
das
repnz
inc
ss
push
repnz
jl
test
jno
ljmp
sti
adc
mov
leave
cmc
push
insl
mov
les
aam
ds
inc
or
mov
cmp
fbld
and
xor
ret
cmp
test
aam
push
out
mov
in
dec
dec
mov
int3
jl
or
js
pop
sbb
cmpsl
pop
or
adc
lock
outsb
or
idiv
push
cmp
int
andl
mov
jecxz
inc
shrb
xor
push
add
fwait
cmp
xor
push
xchg
aaa
inc
pop
hlt
cmp
or
lods
jmp
xlat
in
cli
push
mov
lahf
jl
das
cmc
jle
mov
out
rol
mov
and
sub
jns
sbb
xchg
push
out
decb
lret
mov
les
scas
gs
xor
mov
push
sbb
jnp
fcmovne
shll
and
subl
adc
mov
cmp
lods
in
push
insb
rcr
jmp
xchg
shll
cwtl
and
fadds
dec
adc
jmp
iret
xor
mov
movsl
xor
mov
incb
inc
ljmp
test
push
je
out
icebp
outsl
popf
clc
mov
lret
add
xchg
push
add
shl
mov
inc
das
cmp
mov
mov
mov
cmpsb
fwait
loopne
or
jb
cmpl
pushf
cmp
dec
push
sub
hlt
add
fistpll
jo
cmp
mov
xchg
test
sbb
sub
ret
xor
xlat
test
repz
cmpsl
imul
xlat
push
cmc
js
fisubrl
movb
xchg
jbe
sub
js
and
dec
pop
fisttpll
sbb
sbb
fbld
daa
inc
mov
fxch
mov
rol
sbbl
outsl
roll
divb
cmp
cmp
pause
mov
xchg
out
and
lahf
xchg
in
loop
mov
loop
adc
mov
hlt
mov
mov
push
xor
movl
jecxz
outsb
mov
sub
push
adc
mov
int
sbb
adc
xchg
dec
xchg
mov
inc
popf
add
jmp
mov
call
mov
add
jne
xor
push
push
out
mov
adc
int3
es
pop
loopne
lret
ja
dec
gs
pop
popl
xlat
pop
add
loop
mov
orl
mov
and
cli
lahf
andb
sahf
int
out
arpl
push
fisttpll
push
test
pop
adc
rcl
loop
or
mov
jnp
sbb
ret
dec
repz
loope
addr16
push
mov
mov
popf
mov
cmpsb
adc
adc
push
cli
push
fildll
mov
cmp
sbb
rcl
jmp
mov
mov
add
adc
ret
inc
cmp
sub
pop
inc
inc
push
or
add
xor
fcmovnb
and
and
lock
xchg
sar
xchg
jno
fldcw
sbb
mov
or
inc
cli
inc
xchg
int
test
sbb
mov
lahf
int
jmp
cli
fcmovb
add
dec
xchg
xchg
sbb
ja
pop
jns
adcl
dec
cmp
fdivrl
jb
lock
je
rolb
pop
aas
add
cmc
pop
mov
mov
fcoml
das
push
sbb
testb
mov
cld
jge
adc
mov
sbb
sbb
mov
out
pop
outsl
dec
ret
rcrb
cwtl
icebp
cmp
repz
orb
jnp
jge
xor
lods
aad
fwait
or
xchg
jl
xchg
push
das
mov
in
mov
shlb
xchg
fs
sbb
into
sbb
jbe
pop
add
shll
push
add
push
cmp
inc
cwtl
mov
fimull
fisttpll
xchg
xchg
js
sub
inc
sub
sbb
mov
jb
cmp
push
mov
pop
inc
add
sbb
push
mov
das
outsl
xchg
mov
mov
repz
cwtl
jmp
lret
mov
cltd
or
movsl
cli
int
cmc
push
movb
push
addb
jnp
push
add
jae
out
setae
jmp
or
jae
inc
ja
jl
xchg
mov
add
xchg
dec
push
call
xor
cld
iret
mov
aam
movsb
xchg
fsubl
and
mov
pop
sub
adc
and
xchg
shll
mov
arpl
push
inc
nop
cs
dec
or
aaa
test
pop
fnstenv
idivl
mov
ret
jne
leave
jle
mov
clc
mov
pop
cli
leave
mov
jmp
inc
lea
mov
mov
mov
popf
mov
jns
rcll
mov
stc
mov
cs
pop
ds
push
loope
and
test
add
xchg
fnstcw
clc
push
jne
sbb
sub
ds
scas
or
push
popf
loopne
xchg
mov
mov
subb
cmp
sub
test
fs
sarl
cmp
jne
jmp
rcl
mov
stc
cmp
fsts
inc
cmp
jb
add
js
aas
xchg
js
lea
daa
leave
push
stc
ljmp
lea
or
pop
add
jge
gs
adc
adc
les
test
cld
aaa
push
ja
lcall
adc
mov
ljmp
dec
lods
jnp
mov
fstl
pop
jae
stc
aas
mov
std
xchg
shl
les
hlt
rclb
cmp
lret
filds
repz
outsb
dec
stc
out
xor
adc
sub
xor
aam
pushw
aas
das
xchg
int3
xlat
cmp
mov
std
lcall
xlat
popf
in
shrb
inc
mov
into
pop
aas
pop
lret
out
stos
cld
pop
mov
fnstenv
popf
dec
dec
jne
mov
mov
repz
sbb
jae
dec
adc
jp
scas
aas
ss
and
jne
hlt
dec
push
cli
scas
or
mov
add
sti
xchg
xor
pusha
loope
dec
push
out
adc
dec
mov
icebp
mov
cwtl
cmc
push
popl
sahf
mov
cmc
ja
pop
or
adcb
push
adc
or
mov
cmp
hlt
in
xchg
pop
ljmp
jno
lahf
mov
add
inc
shll
mov
mov
xchg
adc
ja
lret
shr
dec
lods
cmp
push
mov
fwait
shr
adc
and
cmp
jl
mov
fsubr
jae
xchg
stos
mov
outsb
sbb
add
sbb
mov
sub
jl
loop,pt
scas
add
sbb
or
pop
cltd
jmp
xchg
fwait
in
arpl
in
ds
scas
fcoml
mov
jo
dec
cmp
and
jle
cmp
fs
daa
stc
push
mov
xchg
xor
outsl
or
cltd
mov
xor
cmp
lret
and
clc
xor
out
stc
pop
mov
jbe
call
inc
jnp
inc
call
push
inc
xchg
stc
inc
lock
dec
sbb
loop
test
mov
adc
call
mov
nop
mov
ljmp
xchg
mov
xor
cmp
into
add
cmp
cwtl
xchg
xchg
mov
cmc
stos
flds
sbb
lcall
jmp
repz
in
out
cwtl
loop
insl
inc
xchg
add
inc
jg
aas
outsl
add
jo
loopne
mov
jno
xchg
add
or
sbb
cs
mov
fisubrs
mov
mov
je
jne
cwtl
leave
xchg
adc
mov
pop
lods
shll
int
adc
icebp
or
mov
xor
andb
mov
popf
lds
or
sti
inc
pop
dec
test
ret
jo
loope
addr16
mov
lcall
outsb
sahf
sahf
rclb
inc
xchg
loop
add
rcl
dec
mov
insl
cmp
and
lahf
push
sub
mov
cmc
pop
jl
or
std
cwtl
add
test
xor
out
hlt
xlat
mov
cmp
cmpl
popa
movsb
aam
push
dec
jo
fcmovnb
jno
sub
hlt
and
adc
aam
push
sub
mov
lods
sub
fldcw
testl
add
mov
mov
ljmp
add
push
insb
inc
jecxz
sbb
push
aam
inc
sbb
sub
lock
scas
xor
subl
pop
and
imull
xorl
das
aas
sub
in
inc
mov
les
xchg
mov
js
pop
or
imul
rolb
push
test
or
or
lret
add
mov
rdtsc
das
sbb
xchg
dec
arpl
mov
add
setg
js
daa
or
sub
pop
dec
xchg
cmpsl
jbe
jb
cmp
outsb
jmp
test
dec
dec
inc
sub
cmp
addr16
shll
pop
test
xor
push
test
not
fistpl
test
popa
dec
mov
sub
fimuls
pop
outsl
dec
loope
xchg
xchg
fstl
lea
lret
sub
jne
rcrb
cmp
sub
dec
dec
popf
xor
and
mov
adc
cmp
mov
jge
mov
pop
lods
sub
iret
outsl
xor
icebp
mov
adc
mov
and
loope
outsl
cmp
mov
insb
push
rclb
enter
fists
jp
jmp
bsf
and
cmp
push
pop
cmc
jmp
aaa
je
pop
xor
stos
sub
pop
mov
add
jecxz
or
ret
jnp
inc
xchg
data16
movsb
inc
xor
mov
imul
cmpsb
xchg
scas
sbbb
movsb
subl
sbb
lret
cmp
daa
inc
test
stos
push
pop
shrl
add
sti
push
inc
sarl
and
js
clc
imul
cwtl
and
push
xchg
inc
out
fadds
imul
pop
inc
push
pusha
lock
rorb
repnz
stos
inc
int3
mov
xchg
outsl
fdivl
sub
jnp
int3
xor
es
xchg
rorb
push
inc
mov
bound
mov
stos
fsubr
imul
imul
lret
lahf
lret
xor
mov
cld
insb
rcrl
test
lret
xchg
and
jb
cli
in
xor
jge
dec
push
scas
les
mov
rcll
jbe
jecxz
shll
cmc
xchg
fiaddl
mov
movswl
mov
pop
mov
sub
jnp
and
fstpt
add
sbb
daa
jns
adc
or
adc
jmp
sbbb
jmp
imul
xchg
lret
adc
lret
fnstenv
xchg
fbld
adc
dec
push
add
jns
ljmp
sbb
scas
mov
mov
fildl
and
stos
sbb
in
lahf
cmp
mov
pop
adc
cld
mov
or
arpl
jne
xchg
dec
xchg
mov
jns
dec
addl
fmuls
mov
push
push
jge
inc
rorb
aaa
cmp
jp
mov
inc
mov
lods
pop
mov
nop
incl
icebp
add
dec
out
inc
into
cmp
or
bound
sbb
adc
lea
aad
adc
enter
pusha
cmp
push
in
mov
add
out
inc
ds
aas
nop
cmpsl
filds
mov
push
std
fidivl
sbb
das
cmp
into
push
loope
mov
test
xor
roll
mov
fsubl
jle
popf
xchg
pop
pop
mov
mov
sub
mov
mov
cltd
cmpsb
cmp
push
test
pushf
iret
fstp
outsb
outsb
and
mov
cmp
mov
out
iret
in
ljmp
jns
aad
fwait
imul
jmp
jnp
mov
xchg
jae
fcomp
pop
sar
mov
call
inc
pop
fistpll
jae
test
outsb
xor
mov
cmp
fstps
addb
add
xchg
adc
jp
pop
and
mov
dec
pop
push
sub
sub
fnstcw
cmpb
lea
sub
test
sti
shr
idiv
jo
push
xor
xor
mov
xchg
test
pop
push
jne
adc
inc
bound
jbe
pop
ficoml
xchg
fs
test
sub
pop
test
aas
scas
gs
test
mov
loopne
lds
popf
dec
loopne
addr16
pop
jns
push
inc
cmpsl
mov
ficoms
sbb
mov
mov
or
jno
jnp
in
inc
arpl
pop
sub
ret
ljmp
loopne
out
cmc
lea
or
mov
cld
mov
xchg
cmp
inc
xchg
test
mov
mov
push
orb
xor
xor
lahf
xor
xor
shr
dec
and
nop
inc
sub
xor
or
ljmp
push
push
lea
or
lea
jmp
hlt
je
jge
xlat
loope
inc
aad
int3
test
mov
add
and
inc
out
mov
and
mov
cmp
adc
inc
std
xor
inc
in
add
push
pop
lahf
push
ljmp
adc
repnz
mov
test
cltd
ja
out
or
jmp
push
xor
rclb
sbb
stc
icebp
inc
xor
or
pop
push
add
stos
insb
cwtl
inc
mov
stc
mov
xor
in
stos
jb
in
aad
lds
dec
mov
negl
movsb
cwtl
sub
and
ss
repnz
jecxz
loop
inc
mov
scas
add
stos
bound
mov
cmp
sti
ret
imul
pop
sub
mov
das
or
mov
sub
sbb
sub
sbb
nop
insb
pusha
rcrb
pusha
mov
cli
and
ljmp
xbegin
dec
mov
hlt
sub
xor
test
jg
inc
lds
loop
inc
sbb
dec
outsb
scas
loopne
fs
adc
movsl
rorl
push
mov
push
or
shlb
push
jbe
mov
ss
inc
jns
and
imul
test
pop
sub
inc
fsubr
or
mov
in
subl
pop
xchg
into
sub
jle
testl
adc
popa
jmp
aaa
cmpsb
mov
in
cmpsl
jae
inc
into
daa
inc
push
xor
cmpsb
sbb
push
test
cwtl
aaa
mov
mov
popf
cmpsl
dec
movsl
mov
pop
icebp
mov
cmp
int
jb
pop
shll
arpl
arpl
lret
cmp
shl
int3
or
xchg
add
loopne
daa
cld
ret
addr16
int3
xchg
movsl
roll
inc
mov
adc
xor
subb
cmc
cmp
cli
push
std
xor
dec
add
cli
sub
adc
ljmp
in
dec
arpl
adc
push
outsl
das
xchg
jnp
lret
pop
pop
ret
dec
das
loop
insb
xor
or
jbe
imul
cmp
mov
jbe
arpl
iret
and
xchg
test
cs
mov
xor
cltd
and
sbb
fisubl
sub
jno
push
sbb
aaa
mov
xor
fisubs
pop
sub
scas
mov
into
pop
or
aas
xchg
or
cmpsb
test
test
inc
ds
fisubrs
sbb
cmp
pop
ret
dec
test
push
mov
in
dec
cmpsl
je
push
add
repz
or
dec
cmp
cmpsl
pop
add
loope
jo
sbb
std
jmp
sarl
stos
test
xchg
push
jl
push
inc
sbb
xor
fdivrl
daa
lods
pop
pop
pop
xchg
sbb
adc
jb
xchg
mov
pop
sub
xchg
in
dec
jns
pop
arpl
insl
or
lock
jle
mov
inc
mov
pop
push
pop
push
lods
rolb
cltd
jle
int3
push
rcrl
fildl
inc
clc
cmp
lret
mov
sub
mov
lret
sbb
pop
or
push
jo
xor
mov
inc
in
xorb
insb
cmp
push
mov
cwtl
inc
hlt
lods
decl
push
xchg
adc
in
mov
addr16
hlt
iret
ficoms
and
inc
rorl
push
mov
cli
mov
lock
inc
pop
lods
mov
dec
sbb
pop
test
add
int
mov
pop
add
jle
xchg
jno
sbb
hlt
test
adc
imul
and
xchg
mulb
jbe
inc
jae
mov
push
pusha
mov
and
xchg
xlat
fstps
or
mov
insl
push
adc
outsb
ljmp
ret
popf
das
sti
jne
xchg
mov
popa
push
aaa
in
cmp
out
mov
les
push
mov
jecxz
pop
mov
lcall
ljmp
dec
push
pop
cmp
or
ss
cmp
adc
sbb
xchg
and
sti
mov
lret
pusha
pop
jmp
nop
mov
adc
jns
pop
push
or
push
mov
ss
sub
xor
test
cmp
or
fnstcw
mov
mov
pop
and
push
or
call
stos
je
push
push
mov
xor
jle
das
mov
pop
sbb
push
inc
push
xlat
jmp
shrb
leave
in
pop
add
es
ficomps
and
cmpsl
lods
je
outsl
jns
rcll
xor
cltd
aaa
mov
aam
add
dec
pop
xor
ljmp
dec
or
loopne
jg
je
jnp
xchg
sub
cmp
and
jbe
rolb
inc
pusha
aam
jmp
mov
mov
mov
push
int
lods
lods
test
jmp
rclb
rcrl
negb
push
push
sub
or
cwtl
sub
orl
mov
sub
cmp
mov
vunpckhps
jne
mov
pop
mov
lret
frstpm(287
mov
adcb
and
movsb
add
nop
ljmp
aaa
sub
jo
pop
clc
sbb
adc
nop
pop
mov
pop
xorl
xchg
adc
scas
std
xor
call
sub
mov
adc
inc
mov
xchg
movl
or
sarb
call
push
outsb
xchg
sbbb
stos
ret
cs
jb
and
mov
shrb
gs
lds
mov
and
ret
imul
aaa
out
in
ds
push
rolb
inc
xchg
je
ret
xor
xor
mov
push
outsl
popf
cwtl
in
aam
mov
mov
testb
pop
bound
jmp
mov
repz
roll
aad
cmp
mov
push
mov
add
dec
add
push
adc
fcompl
test
sbb
jle
sub
insl
rolb
jns
insl
aad
fistpll
cld
dec
cmc
outsl
jmp
leave
and
mov
push
jns
mov
mov
pop
jne
in
daa
test
aaa
ds
aas
test
das
scas
cmc
xchg
xor
test
jmp
add
jno
cmpsl
jle
fldcw
pop
jle
xlat
outsl
add
pop
xchg
pop
popl
call
inc
push
jae
sbb
xor
sahf
mov
iret
mov
pop
mov
insb
in
pop
sbb
dec
out
mov
lea
mov
dec
xor
out
add
nop
enter
movq
out
cli
icebp
das
lds
stos
shrl
dec
aam
xchg
sarb
jle
and
shlb
xor
lods
jno
push
xchg
xchg
push
popl
mov
jg
out
js
mov
cld
or
icebp
lea
adc
adc
sarb
sti
ds
mov
ljmp
mov
fldt
adc
outsl
test
mov
and
add
inc
cmp
in
fnstenv
sbb
loop
push
and
aaa
or
nop
pop
add
pop
fwait
test
inc
mov
repnz
out
addr16
lods
xor
and
bound
xor
cmpl
loope
jns
into
jg
cwtl
mov
hlt
jnp
fdecstp
or
xchg
dec
sub
inc
fs
shll
mov
loope
xchg
mov
out
mov
das
or
clc
fdivrl
inc
rorb
dec
fmul
xor
xchg
movsl
push
and
xchg
in
mov
das
adc
mov
insl
lret
ret
adc
mov
xlat
add
push
dec
push
pusha
mov
test
push
aas
xorl
lea
and
lcall
mov
int3
insl
imul
push
and
stos
sbb
jp
fwait
jg
sub
pop
pushf
inc
xchg
jbe
mov
adc
jnp
jo
cmp
js
insl
pop
je
xor
push
or
sbb
ret
xorb
std
xor
cli
clc
xchg
jg
xchg
cwtl
jp
sbb
outsb
mov
add
dec
push
dec
test
xor
jmp
cld
popf
sub
les
les
and
cmp
add
mov
test
mov
movsl
imul
mov
mov
adc
mov
insb
jbe
inc
adc
jle
add
sub
xchg
shrl
ljmp
ficoml
addr16
pop
xor
idivb
mov
pop
cmp
outsl
dec
pop
ret
add
mov
adc
ja
add
lods
ss
adc
loop
jne
out
fistps
lods
inc
out
jae
cwtl
add
or
mov
jb
fcmovu
aaa
push
jo
or
bound
ss
les
inc
xorl
lods
pop
jle
cmc
outsb
sub
push
out
fsub
jecxz
test
out
popa
jb
lea
xchg
pop
push
pop
inc
insb
nop
jnp
aas
icebp
cwtl
fdivl
imul
repnz
push
adc
sbb
shrb
adc
mov
fdivrl
or
mov
mov
cmp
add
ljmp
int3
cmp
and
push
lods
push
insl
jbe
or
cmpsl
cs
stos
xchg
data16
sbb
es
sarb
xor
dec
icebp
lock
adc
mov
shrl
and
adc
test
fisubs
xor
sbb
inc
mov
xlat
xchg
testb
jbe
adc
cltd
dec
pop
dec
lods
es
mov
mov
popa
cmp
lods
ficoms
ret
mov
adc
sub
frstor
sub
jno
iret
add
and
bound
push
jecxz
lcall
mov
ret
and
stos
jbe
fsave
mov
and
out
fwait
xchg
inc
inc
cmp
iret
popl
int
mov
inc
pop
xlat
sahf
xor
shl
push
pop
jge
out
fwait
pop
push
out
adc
mov
push
lahf
addl
jp
mov
jne
mov
fdivs
xlat
push
imul
xor
and
pop
sbb
mov
imul
ror
cmovp
dec
mov
out
jnp
out
add
in
ljmp
std
dec
dec
repz
dec
cltd
data16
mov
lods
cmp
bound
mov
subb
xchg
jg
scas
sti
imul
dec
push
lret
mov
sbb
test
cmp
int3
fucomp
sti
mov
cmp
mov
sbb
sbb
inc
dec
dec
enter
cmp
adc
sar
add
cmpsb
lods
dec
push
adc
jns
sbb
add
mov
jecxz
adc
les
and
xchg
test
jmp
add
xor
jnp
push
loopne
inc
push
sbb
loope
push
ror
cli
xor
lahf
push
xor
stc
cmc
ret
jge
js,pt
sbb
sbb
outsl
push
nop
xchg
add
or
lock
lock
ja
mov
jmp
lret
push
aad
faddp
push
pop
test
fs
shrl
push
cmp
add
or
xor
cmp
jge
mov
dec
dec
adc
fcomi
jg
jle
je
lahf
add
pop
mov
aam
jbe
repnz
jae
push
ss
imul
sahf
fs
subl
or
xchg
movsl
xchg
push
aad
imul
ds
sbb
cwtl
add
out
cmpsb
insl
enter
cmp
int
dec
je
cmp
ret
cmp
cmpsl
aam
inc
inc
xor
inc
loope
sub
sub
jo
loope
cmc
push
jp
push
mov
mov
pop
lret
add
push
and
pusha
mov
shr
pop
das
jns
mov
push
or
xor
sahf
dec
es
dec
push
jae
ljmp
lret
adc
shll
fcmovne
jmp
movsl
cld
pop
push
inc
test
fdivrl
and
add
daa
int3
jnp
repnz
pop
inc
pop
lret
aad
mov
aaa
jae
add
push
lods
fdivr
out
out
lods
je
dec
mov
filds
cmp
data16
pop
imul
add
je
or
add
mov
out
outsb
sub
aam
and
je
mov
mov
jo
or
xchg
sbb
or
fildl
xlat
mov
pop
enter
shrl
cmc
loope
inc
test
lods
push
xchg
test
cld
cmp
fisttpl
cli
sarl
daa
popa
jnp
xchg
push
jl
out
jae
call
fldcw
repz
mov
inc
sub
jle
ret
aad
dec
cmc
movsb
lret
inc
fisubl
sahf
enter
sub
int
test
ret
cmpsl
sbbb
xchg
out
jns
push
jp
cmpsb
jno
mov
pop
test
lds
xor
inc
arpl
mov
stc
mov
add
sub
call
cmp
mov
enter
jp
mov
pop
pop
sbb
xchg
sbb
lret
adc
dec
xchg
outsb
dec
iret
lods
mov
mov
mov
out
mov
cli
cltd
fcmovnu
cmc
add
adc
jg
ljmp
mov
push
or
aam
popf
add
push
pusha
test
add
aam
sub
cli
mov
sbb
push
xlat
sub
in
push
repnz
mov
rcrb
mov
or
pop
push
adc
idivl
jmp
cld
pop
xchg
imulb
push
dec
sbb
in
lahf
bound
mov
inc
rcll
aam
push
sbb
stos
pop
or
repz
scas
xor
pop
insb
fcom
dec
aad
mov
xchg
or
adc
dec
out
sbb
push
dec
or
push
ret
xor
mov
inc
push
pop
out
xchg
cmp
aas
cmp
lret
test
pop
xchg
sbb
sub
pop
das
subl
ret
xchg
xor
jnp
jno
jg
es
mov
fcoms
pop
cmp
adc
frstor
mov
scas
jle
push
push
xor
andb
sbb
jno
add
xor
imul
adc
xor
push
xchg
sbb
xor
popa
jno
inc
cs
xor
divl
push
scas
inc
mov
scas
sbb
mov
mov
sub
sahf
fisubs
mov
imul
push
dec
jb
dec
xchg
mov
les
loop
add
dec
insl
cs
out
cmp
mov
insb
lock
arpl
push
add
add
sub
fld
cltd
jne
inc
sub
loop
pop
xor
out
fucomip
push
cmc
mov
bound
add
aam
sub
scas
dec
sub
bound
movl
mov
ret
jle
repnz
cmp
inc
pop
sti
push
adc
inc
cmp
lcall
repz
mov
jle
adc
shr
jns
push
adc
std
adc
add
cmpsl
call
stos
pop
jae
outsb
ds
push
mov
add
ficoml
fsubl
xor
hlt
jo
iret
call
shll
jg
mov
int
dec
out
mov
mov
repnz
lcall
insl
inc
pop
push
xchg
mov
inc
inc
sbb
lret
push
sub
insl
jmp
adc
adc
add
outsl
addb
outsl
setbe
imul
imul
je
or
popa
fcmovb
add
push
pop
movsb
lods
xor
int
mov
gs
xor
sti
cmpsb
dec
xlat
xchg
dec
mov
pushf
mov
loope
add
shl
adc
adc
jns
mov
clc
pop
xor
pop
aaa
sbb
adc
cmp
dec
fcmovu
mov
test
stos
test
push
pop
scas
sub
addb
and
test
out
push
mov
test
in
or
mov
out
sub
mov
cmpb
pop
push
jle
shlb
xor
in
subl
push
push
in
sub
mov
sahf
pop
jle
push
xchg
lret
ss
sub
xor
cmp
or
jl
repnz
pusha
gs
in
fucomp
pop
pop
sti
mov
lods
mov
add
xor
adc
sub
xchg
test
lcall
nop
jle
pop
in
cmp
jnp
gs
divb
and
adc
dec
fisubrs
and
stos
xor
xor
int3
xor
xor
push
pop
lock
je
sub
sub
fistps
popf
fs
cmp
mov
sbb
cmp
subl
push
push
icebp
mov
ljmp
in
mov
cmpsb
add
shrl
or
pop
scas
mov
int3
daa
xchg
cmp
jp
push
jae
push
aam
outsl
push
fyl2x
pop
xchg
or
sbb
inc
das
sub
stos
push
shr
movsl
mov
mov
and
pop
addr16
add
lret
pop
add
pop
mov
fs
aaa
cmp
mov
repz
cmpb
cmc
aas
mov
jg
dec
mov
pop
xor
ret
cmpb
jecxz
stos
loope
jb
icebp
lret
shl
pop
mov
push
pop
addr16
dec
fbld
js
pop
fwait
cmpsl
aaa
aam
jge
cltd
or
add
or
inc
pop
push
sub
cld
in
xor
jbe
and
add
sub
test
adc
inc
mov
xchg
push
stos
push
int
pop
xor
adc
sbb
lea
out
dec
jmp
pop
push
imul
mov
xchg
enter
mov
mov
test
arpl
push
xorl
mov
pop
scas
ret
sbb
mov
cmp
inc
pushl
or
ret
sbb
pop
pop
mov
jp
sti
sbb
inc
divl
pop
mov
jae
call
leave
fisubrl
aas
mov
xor
mov
fcomp
cmc
and
xor
dec
je
cltd
hlt
jecxz
inc
leave
mov
cmc
loope
xor
mov
loop
scas
sub
sub
xchg
stc
or
stos
sbb
test
rorl
arpl
and
cmp
fildl
jno
xchg
xchg
outsb
pop
xchg
push
xchg
and
pop
icebp
out
pushf
jl
test
pop
call
loope
pop
test
sub
jno
test
pusha
mov
and
in
jmp
jno
repz
scas
leavew
negl
push
sbb
and
push
mov
cmp
mov
and
jp
gs
pop
movsl
aad
push
pop
divl
sub
test
popa
stos
dec
je
inc
inc
add
push
ljmp
outsl
stos
mov
pop
sbb
outsb
shrl
xlat
xchg
and
lods
push
int3
inc
icebp
xchg
inc
add
push
lods
dec
hlt
push
or
fwait
mov
ffree
cmp
rcl
mov
daa
push
push
jge
xchg
push
cmc
pop
fnstenv
aad
xchg
dec
movb
daa
jno
dec
push
adc
cmp
mov
in
push
mov
pusha
xchg
inc
mov
inc
aad
test
mov
xlat
ss
xor
cld
shll
cmp
repnz
cli
fwait
in
addl
rcr
fmuls
test
cmp
fisubl
sbb
mov
sbb
mov
xchg
dec
sbb
insl
and
jg
lahf
or
incl
cld
in
scas
xor
out
sbb
mov
sbb
mov
jns
loop
and
push
push
scas
mov
push
hlt
cli
xchg
xor
pushf
xchg
inc
test
inc
jb
das
adc
test
testl
or
clc
cmpsl
movsl
divl
push
sbb
pop
mov
and
sbbl
in
mov
data16
pushf
iret
mov
pop
push
cltd
and
push
push
outsl
pop
pusha
fbld
jae
imul
stos
cmpsb
rorl
xchg
jge
jg
mov
stos
icebp
aad
jno
or
or
sbb
or
div
sub
push
sub
int3
mov
fimull
dec
ja
add
mov
adc
je
shl
xor
test
pop
popf
inc
xchg
or
fsts
jge
pop
or
mov
xchg
pop
outsl
stos
xchg
shll
jle
jne
icebp
jge
fsubrs
xchg
mov
mov
pushf
test
arpl
enter
fstl
shlb
mov
mov
push
lea
into
push
fs
in
int3
insb
xlat
xchg
in
inc
mov
les
test
into
jg
lret
popf
rolb
imul
pop
cmp
lahf
adcl
jle
dec
fimull
push
dec
ret
mov
lods
xchg
les
mov
pop
mov
mov
ret
aad
into
dec
sahf
mov
lret
rcr
jle
inc
or
mov
lcall
pop
dec
dec
mov
adc
inc
jno
mov
popa
lods
adc
loopne
sahf
mov
pop
add
lret
mov
repnz
inc
jae
rol
push
je
xor
pop
bound
or
mov
les
ret
sub
push
ljmp
xor
andl
int
adc
xor
cltd
pop
and
js
mov
lods
push
dec
aas
jnp
dec
jns
fdiv
push
pop
pop
aam
sbb
aam
adc
cmpsb
push
lock
lods
int3
mov
or
and
mov
cld
dec
imul
insl
adc
dec
or
jbe
sbb
adc
xchg
jae
mov
mov
xor
stc
popa
mov
fdivrs
add
xchg
push
fwait
lret
xor
adcb
sbb
pop
mov
scas
add
cmpsb
repz
loopne
xchg
shl
imul
call
popf
jns
mov
loope
jno
sbb
adc
gs
rcrl
aad
adcl
pop
imul
dec
insl
in
mov
inc
cmpb
adc
jl
jne
into
aam
xor
inc
or
or
cmc
mov
or
arpl
mov
pushf
mov
or
fistpl
movsb
xchg
mov
xor
outsl
fadd
push
add
sbb
xlat
push
push
mov
adc
cmp
lret
fisubrs
add
andb
jecxz
xchg
dec
lods
in
jb
and
mov
arpl
mov
jge
and
and
hlt
xchg
inc
data16
and
movsl
sbb
pop
insl
jmp
jns
insl
fcmovbe
mov
shlb
or
mov
sbb
lds
mov
push
sub
cmc
fs
add
aam
jae
bound
pusha
or
push
inc
mov
mov
ds
cmp
in
ret
stc
mov
pop
and
enter
ja
insl
add
mov
cmpsl
sbb
inc
sbb
mov
pusha
data16
xchg
insb
outsb
filds
rcll
pop
push
shl
pop
or
adc
add
add
mov
notl
pop
inc
fildl
mov
insb
adc
sbb
loopne
adc
xchg
jne
lret
sub
fcomp
rolb
xchg
jl
test
push
lret
inc
jg
push
mov
in
shl
add
leave
test
add
scas
call
insb
cld
xchg
or
push
cmp
in
cmp
in
fwait
add
inc
sti
ljmp
cmp
or
jecxz
jnp
fisubrl
jnp
or
test
or
les
addr16
lock
enter
mov
fdivl
mov
jae
in
mov
pusha
inc
mov
imul
out
inc
test
std
mov
jle
cmpsb
jmp
lret
lret
push
pop
pop
push
fistpl
push
push
mov
pop
loopne
adc
and
cltd
xchg
ss
daa
or
xchg
aaa
ficomps
imul
les
inc
faddl
loopne
dec
xor
mov
stos
dec
jns
aad
movlps
pop
sub
jnp
int3
stos
popa
sbb
movsl
mov
movb
fwait
push
repnz
or
ljmp
aam
int3
xchg
mov
mov
mov
push
fmuls
push
xchg
jo
es
daa
add
imulb
mov
lret
das
xlat
xchg
pop
incl
adc
jo
xchg
sbb
xor
or
dec
sbb
push
xchg
int3
mov
mov
inc
pop
loopne
stos
pop
jecxz
fs
and
xor
inc
lret
fcomps
push
sub
pop
ja
xchg
mov
aas
aas
lret
cmp
jl
dec
je
xor
mov
inc
dec
addps
dec
clc
pushf
or
mov
pop
fstl
cli
xchg
test
inc
je
inc
insb
pop
addl
jbe
test
add
ret
dec
cmpsl
adc
cmp
inc
inc
xlat
leave
aaa
fisttpl
dec
inc
mov
xchg
mov
data16
pusha
sub
daa
aas
and
mov
leave
xchg
pop
push
cmc
insb
daa
enter
std
adc
xchg
inc
hlt
sbb
jne
or
cmp
pop
mov
mov
fsts
int
movsl
ss
sbb
cmpsl
andb
arpl
loopne
sub
int3
icebp
fimuls
fistl
out
je
jle
inc
pop
jb
test
cltd
jne
xchg
out
jbe
rclb
sbb
data16
sub
sbb
test
push
push
sbb
adc
cmp
pop
mov
xor
pop
mov
and
xchg
std
je
pop
lock
js
lods
push
xor
xchg
ds
xchg
mov
cmp
xor
push
lock
frstor
ljmp
test
push
push
iret
mov
adcb
mov
cmpsl
bound
aas
lods
cwtl
insb
cwtl
sbb
iret
add
das
push
xor
push
inc
cmp
mov
mov
push
clc
aam
xor
jo
insl
or
mov
and
imull
push
inc
mov
insb
imulb
and
mov
jb
xor
xchg
daa
dec
test
xchg
jg
icebp
pop
push
push
jg
daa
lods
dec
lods
scas
movq
adc
adc
xor
mov
adc
inc
out
push
addb
out
test
and
iret
aaa
jnp
inc
sbb
cmp
xor
test
push
sub
sub
inc
pop
mov
or
data16
dec
pop
xchg
clc
les
fisubs
enter
clc
icebp
jle
aad
push
mov
mov
les
clc
std
aaa
mov
push
lret
sub
dec
int
or
push
pop
xor
pop
orb
frstor
repnz
push
lock
mov
add
loope
rorb
cmp
xchg
inc
mov
leave
mov
mulb
adc
and
sbb
fisttps
push
add
pop
mov
jne
cmp
dec
push
xlat
push
fimuls
jl
cwtl
xor
xor
mov
sbb
aam
popf
jbe
mov
pushf
lret
sbb
or
les
aaa
fs
in
es
imul
mov
testb
icebp
pop
jecxz
push
stos
shr
mov
lods
insl
les
dec
mov
sarb
adc
clc
mov
sbb
aaa
cmp
sub
jo
inc
out
and
push
xchg
xchg
mov
cmp
fcomps
mov
fidivrl
lahf
nop
stos
dec
clc
addl
cli
cli
cmp
mov
pop
pushl
jo
jo
into
lods
jle
mov
and
movsl
fidivl
add
jnp
and
outsb
ja
pop
aad
inc
push
jnp
leave
aam
xchg
rorl
pushf
rclb
insl
mov
mov
xor
xor
lret
dec
or
lock
icebp
sub
pop
test
adc
push
mov
mov
imul
out
out
jg
icebp
pop
cmp
mov
leave
stos
jmp
test
aad
jp
daa
pusha
push
jl
addb
push
inc
cwtl
sbb
pusha
pop
nop
das
movsl
lahf
or
int
div
push
lock
mov
xchg
xchg
test
and
sub
mov
cmp
loop
jbe,pn
xchg
aad
adc
push
adc
fwait
push
stc
pop
pop
and
ret
lret
mov
mov
mov
lds
dec
and
push
jo
dec
sbb
rcrb
rcl
cmpb
jns
mov
add
jb
scas
loopne
xorb
fsts
mov
jp
ljmp
push
dec
lods
andb
push
jle
push
popa
jmp
and
lds
pop
adc
es
je
cmp
movsl
gs
lret
mov
mov
outsb
push
je
inc
inc
int
mov
aaa
ficoml
push
sub
bound
sub
and
daa
outsl
mov
cmc
rclb
data16
outsb
outsl
into
or
push
mov
xchg
cmp
push
or
mov
inc
xor
mov
dec
or
pop
mov
les
push
int3
repz
adc
xor
js
sub
loop
loope
jb
orb
sar
mov
leave
out
loop
xlat
outsb
lret
xchg
icebp
add
mov
js
outsb
mov
jno
cld
mov
insl
outsl
dec
test
mov
filds
imul
iret
movsl
imul
mov
pushf
loop
adc
cmp
jl
pusha
inc
mov
mov
xchg
test
sbb
popf
fisubs
mov
or
mov
das
push
cld
mov
push
add
out
arpl
dec
dec
xor
jbe
push
jge
jmp
add
sbb
push
dec
mov
ja
sbb
imul
mov
lods
mov
sbb
xor
xor
mov
or
pusha
xorl
add
popa
lock
mov
aaa
adc
push
dec
lds
adc
ret
push
or
jle
sub
dec
mov
xlat
and
repz
repnz
inc
pop
push
pop
jo
popf
and
data16
iret
mov
lahf
lock
inc
adc
sbb
mov
cmp
inc
mov
es
gs
push
out
fisttpl
jns
in
pop
js
rol
pop
sbb
out
test
and
inc
imul
test
push
jmp
shrb
sub
rorb
jne
cmp
mov
mov
fldcw
sbb
test
loopne
lret
outsl
adc
jmp
das
shll
test
leave
popf
mov
sub
dec
xor
call
dec
js
cs
roll
bound
sbb
aas
xor
sbb
loope
ret
stos
adc
and
xor
lret
std
add
sbb
testb
std
jb
xor
pop
dec
and
mov
std
add
mov
fprem1
sti
pop
icebp
mov
mov
mov
imul
xchg
inc
cld
lret
and
and
or
mov
sti
leave
sbb
int3
xchg
xor
adc
in
dec
test
lret
add
cmpsl
sbb
pop
mov
or
sub
stos
xchg
adc
lods
loop
out
adc
imul
mov
xchg
push
and
adc
outsb
inc
pop
enter
int3
scas
cmpsl
mov
mov
roll
pop
cmc
sbb
enter
outsl
add
enter
aaa
stos
pusha
push
insb
add
jg
mov
adc
add
cs
add
cwtl
mull
mov
aam
mov
loop
cwtl
mov
and
scas
movsb
mov
cld
popa
sbb
mov
in
xchg
mov
adc
xchg
xchg
les
cmp
cmp
mov
xor
outsb
and
xor
enter
and
xchg
test
xchg
fsubrl
jae
sub
lcall
or
in
mov
xchg
rorl
mov
xchg
in
mov
xchg
hlt
jl
cmpps
or
mov
push
sbb
pop
std
xlat
xchg
mov
dec
jp
cmp
add
mov
sub
pop
loope
xorb
sbb
sbb
rolb
in
ret
movsb
xor
or
inc
popf
pushf
push
popa
out
fldcw
push
sbb
pop
fadd
les
repz
std
pop
dec
cmp
mov
add
pop
gs
in
xor
es
add
jg
ds
call
pop
adc
mov
cs
hlt
lds
adc
mov
leave
fldenv
stc
xorb
fcomps
xchg
sbb
lock
mov
rcll
cmp
jg
scas
js
fcomps
inc
inc
xchg
add
add
shlb
rol
and
cmp
cltd
inc
stos
mov
out
sbb
mov
cmp
or
pop
arpl
int
out
cmp
sub
mov
or
dec
mov
mulss
pop
jl
push
loopne
test
xorl
or
pushf
lret
and
sbb
adc
lds
inc
mov
xchg
or
movsl
std
cmp
xor
arpl
test
xchg
jl
cmp
and
lods
ds
dec
xchg
data16
jg
push
stos
sahf
push
pop
xor
leave
adc
ja
xchg
mov
sahf
popa
push
inc
popa
sub
test
mov
cld
aam
ja,pn
jle
mov
in
sbb
sub
adc
out
pushf
sbb
adc
pop
sahf
xor
xor
std
dec
lahf
sbb
sar
jge
xor
jg
sbb
xor
loope
jecxz
sub
adc
scas
pusha
sbb
xor
or
cwtl
xor
lods
xor
testb
fdivl
sahf
cmp
mov
add
push
enter
or
add
lods
and
push
sub
scas
notl
xor
mov
xchg
enter
mov
outsl
test
or
call
lock
fldt
dec
mov
add
cmp
sub
inc
packsswb
daa
inc
dec
mov
movsl
push
repnz
lock
fsts
add
xchg
sbb
aas
mov
in
jmp
and
sub
int
lahf
sub
test
aas
cld
add
jmp
xor
scas
mov
sub
dec
xor
dec
add
dec
in
pop
popa
mov
testl
subl
sarl
rcrb
xchg
adc
mov
out
cltd
mov
fldcw
pop
sbb
pop
pop
idivb
stos
dec
xor
adc
xlat
cld
pusha
pop
and
loopne
cld
jno
sbb
scas
push
jno
arpl
out
or
pop
in
out
cmpsl
bound
cmp
inc
lcallw
rcrb
adc
pop
shll
jp
jnp
loope
in
aas
mov
jb
inc
fisttpl
jb
rol
out
adc
movsb
les
xor
jo
inc
in
scas
aaa
pop
ret
lock
ficoms
imul
cmpsb
lea
sbb
or
std
sbb
ret
mov
mov
andb
xor
pop
cmp
jno
jle
push
in
shll
xchg
jl
lods
mov
aam
in
insb
push
xor
pop
cwtl
jae
lahf
mov
dec
xor
sub
in
pop
xor
or
pop
pop
lcall
cmp
lcall
out
dec
and
xchg
or
jg
jge
xchg
cmpsl
das
jle
and
push
lret
and
dec
cwtl
ljmp
movsb
ss
es
into
jb
mov
stc
mov
jle
push
int3
dec
in
dec
and
inc
mov
bound
push
test
xchg
cmc
mov
sub
mov
inc
xchg
sub
lcall
adc
sbb
jns
test
mov
jle
xchg
mov
cld
fildll
xchg
add
jo
pop
in
aad
dec
leave
outsb
pop
lea
mov
adc
enter
push
nop
fwait
sub
icebp
adc
pushf
ret
fimull
fsubs
dec
ja
and
mov
pop
fdivrl
sub
pushf
cmp
roll
out
xchg
inc
lds
and
pop
stos
mov
divl
dec
rorl
cltd
pop
mov
movsb
std
ds
int3
pop
mov
imul
jmp
or
mov
movsb
in
push
add
dec
add
inc
sub
mov
mov
and
adc
aad
push
push
pop
mov
inc
xchg
out
jb
pop
ficompl
jnp
sbb
inc
push
cmp
ja
cmp
fimull
mov
inc
sar
push
mov
xor
xchg
jecxz
les
lds
sbb
dec
in
cmpsl
or
fbstp
mov
lret
adc
cmp
fiaddl
lahf
loope
ds
lock
leave
popf
cmc
aam
cmc
and
lods
pop
loopne
fildl
enter
mov
mov
sbb
pop
jge
ret
cmp
jbe
fwait
jmp
or
call
nop
out
pop
fistpl
outsb
xchg
sub
inc
bswap
loop
inc
fdivrs
push
push
inc
add
dec
stos
andb
cmp
gs
mov
je
rcll
xor
je
sbb
imul
or
pop
push
push
fidivrs
bound
xor
sub
addb
jb
test
and
arpl
xrelease
fs
daa
pop
aam
outsl
cs
adc
mov
mov
mov
enter
push
repnz
push
mov
push
hlt
fistps
pop
mov
mov
fcomp
adc
adc
test
sahf
in
sub
push
xor
scas
sbb
cmp
cltd
mov
dec
xor
nop
pop
std
fstpt
adc
sti
mov
sub
mov
mov
fwait
cmc
push
js
sbb
sarb
dec
push
bound
dec
inc
add
inc
cmp
xlat
jb
loope
bound
loope
mov
sub
outsl
cs
or
jo
pop
test
cmc
in
shr
arpl
mov
mov
popa
dec
loop
adc
xor
sbb
and
sub
sbb
insb
and
cmp
aas
fidivl
andb
and
xor
stos
and
push
ret
je
dec
ja
jae
sbbb
xchg
cmpsb
mov
fisubrs
or
loop
adc
push
adc
outsb
scas
lcall
ds
call
mov
aad
jo
jl
lods
dec
ljmp
add
shl
jno
out
add
dec
fldt
imul
in
xchg
adc
nop
push
inc
shrb
mov
popa
xor
dec
push
aaa
out
leave
addr16
fsubl
repnz
xchg
pop
adc
add
bound
mov
mov
fstps
fsubs
xchg
cmp
movsb
push
inc
mov
sub
pusha
int
lds
lds
cmp
ficomps
inc
movsb
jg
dec
test
xor
decl
and
mov
jl
scas
fnstsw
dec
fdivrp
lods
dec
es
sti
dec
cmpsb
es
jb
lret
mov
inc
xor
mov
jge
mov
pop
sbb
add
sbb
dec
loop
addl
lahf
xchg
scas
loop
stos
dec
cmp
mov
and
adc
into
push
shll
xor
pop
add
cmc
mov
mov
insb
imul
pusha
aam
gs
addb
mov
jecxz
int
xor
cmc
std
ret
xor
jnp
bound
adc
shrb
inc
pop
jl
or
xor
push
jge
pop
out
aaa
mov
xchg
pop
das
adc
pop
cld
xchg
push
mov
ret
test
or
mov
jl
mov
mov
pop
push
pop
test
ret
sbb
int3
call
add
mov
test
ljmp
scas
shll
out
xchg
sbb
stos
popa
leave
add
push
data16
jae
cmp
or
sti
lahf
fisttpll
mov
dec
aas
push
shll
sbb
negl
or
imul
add
or
out
push
jge
lcall
add
arpl
add
cmpsb
mov
jnp
in
adc
leave
hlt
xor
mov
push
sbb
idivl
ret
pop
das
jno
push
xchg
pop
adc
lods
cmp
mov
ror
xchg
lahf
pop
insb
inc
push
push
ret
cltd
and
push
push
sbb
ret
dec
in
mov
es
mov
pop
sbb
add
in
xor
push
mov
sub
cli
in
inc
int3
sbb
sub
repnz
inc
xchg
jl
iret
push
mov
mov
cmc
cmp
shl
sarb
sbb
call
mov
ss
push
dec
lcall
push
push
sub
inc
scas
lcall
es
clc
jle
andb
pop
sarb
scas
mov
cli
ret
jg
add
mov
push
jmp
xor
fcmovbe
pop
xchg
repz
jl
push
mov
pop
add
repnz
divb
dec
fcomi
sub
in
scas
das
es
insl
mov
fs
or
test
movsl
push
jmp
movsb
mov
or
stos
mov
in
lcall
js
xor
sti
mov
pop
adc
fwait
sub
rcr
int3
sub
jp
dec
enter
outsb
push
push
scas
add
mov
add
xchg
jge
cs
cli
cmp
cwtl
push
cli
rorb
dec
lahf
loope
sbb
sub
sbb
pushf
inc
jno
jg
xor
adc
pop
mov
in
mov
mov
add
or
inc
repnz
mov
add
sbb
push
push
pop
sbb
dec
jae
fbld
stos
idiv
out
or
and
repnz
sub
ja
add
lds
fsts
mov
daa
cmc
pushf
mov
loope
jae
mov
mov
mov
dec
adc
fiaddl
das
mov
sbb
xor
or
outsb
in
pop
cs
xor
xchg
xchg
push
mov
rol
add
dec
mov
jecxz
dec
aas
fsubrp
push
inc
lahf
pop
xlat
ror
mov
fldenv
pushf
test
push
xchg
pop
jnp
popf
and
mov
lods
dec
cli
fnsave
cmp
subl
mov
test
out
pop
add
test
mov
movsb
pop
pop
xchg
enter
mov
cmp
loop
cmpsl
lahf
dec
and
cmp
cmc
call
and
pop
lock
stc
xor
int3
inc
xlat
je
push
movb
notb
add
fidivrs
pop
popa
and
jl
cwtl
je
cmp
push
in
mov
data16
jge
jle
pop
push
out
ret
jmp
jge
add
jne
nop
imul
js
data16
sub
xchg
pop
and
jno
movsl
int3
out
inc
mov
sub
xor
es
or
nop
adc
fstpt
sub
aam
fs
jmp
sbb
test
outsl
push
mov
sahf
aad
sub
dec
and
push
mov
or
cmp
dec
dec
pushf
mov
scas
adc
mov
sub
repz
adc
add
push
sbb
fwait
ljmp
dec
dec
dec
adc
pop
lea
cmp
outsb
jge
push
mov
and
ljmp
cmp
pop
bound
dec
fdivr
std
pusha
or
movups
add
ds
in
out
sbb
mov
inc
stos
test
inc
push
mov
cld
in
mov
inc
icebp
loopne
cmp
pop
push
imul
adcb
or
sbb
or
hlt
nop
imul
mov
rcll
dec
cltd
pop
movsl
sti
pop
je
fbld
and
add
push
nop
int3
adc
imul
fbld
cmpl
ss
insl
mov
and
fmuls
sarl
shll
out
mov
mov
xchg
shlb
jmp
es
in
jb
jmp
sub
gs
lods
out
xchg
ja
pop
arpl
aad
pop
jg
mov
and
shrl
les
sub
aam
xor
add
jmp
loopne
daa
rcr
in
cmp
test
pushf
jbe
adc
outsb
jb
fwait
daa
in
sbb
nop
push
aaa
fists
movsb
pop
stos
sbb
gs
xor
scas
and
mov
movups
inc
adc
xchg
and
popf
shll
lods
inc
pop
jecxz
sub
leave
mov
push
push
pop
dec
les
sbbl
and
add
xor
mov
cwtl
add
dec
pop
arpl
mov
push
mov
cmovno
xchg
in
inc
fwait
pop
push
pop
aam
sahf
sbb
int
pop
ret
pop
jo
icebp
repnz
dec
bnd
add
pop
sar
jp
aas
negb
aaa
adcl
pop
mov
shrb
adc
iret
stos
jmp
cmp
test
fs
inc
jne
xchg
loop
lock
mov
mov
scas
sub
aas
sahf
std
and
dec
outsb
adc
ja
mov
sbb
xchg
mov
mov
lahf
cmp
lods
movsl
mov
sub
arpl
or
and
add
scas
je
sahf
mov
add
or
movsl
xchg
out
push
in
leave
pop
jo
jl
aad
shrb
sbb
dec
cmpl
fidivs
push
push
cmpsb
pop
fldenv
mov
sbb
mov
mov
or
shll
mov
lods
and
sarl
xchg
jo
mov
outsb
mov
lods
loop
cli
lret
fiaddl
je
dec
jg
pushf
iret
popa
cmp
xorb
andb
sbb
stos
mov
push
lods
pop
jg
test
fs
pusha
lcall
pop
test
xchg
inc
aas
xchg
fdivl
adc
stos
int3
in
bound
mov
sti
sbb
movsb
fwait
cmp
push
fidivl
mov
ss
mov
loop
xor
mov
mov
mov
in
enter
addb
rorb
push
adc
outsb
and
test
pop
call
or
mov
lods
sbb
lds
jno
jl
add
dec
mov
lods
stos
out
ja
pop
leave
sub
xor
mov
pop
loop
mov
adc
push
out
cmp
xchg
mov
xor
xchg
and
cmc
dec
out
cld
push
out
mov
in
mov
mulb
or
fcompl
pop
mov
pop
mov
jnp
stos
fildl
pop
and
outsb
xor
jmp
je
movl
pop
push
pop
xor
cmp
repz
dec
rorl
jle
pop
dec
lods
mov
mov
xor
mov
push
push
out
int
ret
movsl
push
and
jae
sub
jle
inc
nop
enter
sub
in
dec
inc
inc
pusha
jnp
push
sbb
sub
push
pusha
pop
inc
into
xchg
leave
fcompl
cmc
lods
cmp
lock
test
jbe
out
xor
push
pop
shll
jg
xor
sbb
es
bound
cmp
int
repnz
mov
pop
push
fists
repnz
fnstenv
mov
mov
push
or
std
ja
cmpl
inc
and
mov
pop
mov
fiaddl
subl
pop
push
es
xchg
sub
push
outsb
push
imul
xchg
in
pop
xchg
sbb
jmp
test
cli
xor
es
dec
jno
jecxz
aam
sbb
mov
scas
nop
jno
ror
inc
clc
xchg
add
imul
in
aaa
inc
sub
popa
jecxz
sub
mov
nop
sti
cld
fnstcw
movsl
test
mov
ljmp
inc
nop
mov
aaa
loop
lret
cltd
xchg
aam
ficompl
or
xor
xchg
and
push
stos
aam
push
daa
ja
jmp
popa
dec
fs
test
fbld
ret
je
ds
icebp
mov
dec
lret
imul
les
and
pop
fdivrl
push
jo
pushf
data16
mov
test
xlat
lret
test
cmpsl
aas
jb
lcall
mov
int
mov
add
inc
jo
pushf
dec
jmp
into
jl
xchg
mov
cli
jb
je
dec
mov
clc
jo
push
outsb
testl
push
mov
clc
inc
add
mov
ret
iret
lods
xor
arpl
or
jge
push
sub
hlt
cli
xchg
cwtl
aas
jmp
out
pop
popf
push
xor
or
adc
xor
jmp
xor
mov
adc
lret
jno
push
jbe
xchg
mov
pop
rcll
xchg
insl
fistpll
repz
cmp
int3
mull
push
mov
xchg
test
jle
mov
cmp
rep
in
xchg
stos
jo
xor
mov
in
movsl
xchg
int
xchg
fs
cmp
cs
add
and
mov
int3
call
cmp
in
sub
mov
mov
or
loope
in
mov
pop
push
dec
mov
ds
mov
and
leave
andl
lock
or
mov
clc
dec
xchg
mov
sbb
or
xchg
jmp
jne
push
lahf
mov
sub
or
jle
and
sahf
jmp
mov
jnp
inc
push
pushf
test
pusha
cmpsb
xchg
xchg
into
sbb
int3
xor
cwtl
lods
dec
push
push
das
xor
xlat
popa
add
cli
dec
push
push
pop
push
sbb
dec
mov
mov
mov
mov
fsubrl
cmpsb
inc
push
cmpsl
sbb
jo
jnp
mov
movsl
loope
add
push
outsb
ja
sbb
xchg
or
mov
pop
aam
pop
outsb
rolb
dec
mov
and
push
incb
mov
inc
aas
ss
inc
imul
movsl
adc
mov
mov
aam
mov
out
jp
mov
push
or
scas
loopne
iret
addr16
dec
add
xor
mov
sub
and
xchg
add
fadd
cmp
lea
out
pop
add
dec
scas
call
dec
and
dec
ret
mov
lods
sbb
rorl
stos
push
gs
adc
pop
rclb
mov
pop
decb
adc
stos
lcall
pop
fadds
stos
ret
push
out
rcl
leave
imul
and
jp
stc
mov
and
adc
pop
mov
hlt
xor
shll
add
fidivrs
sti
and
out
out
js
in
jns
je
pop
into
inc
pop
xlat
dec
cld
lretw
inc
xor
push
inc
mov
adcb
mov
rcrl
int3
xor
frstor
or
aad
xor
sbb
pop
sbb
icebp
repnz
stc
cmp
nop
inc
cld
scas
inc
into
sbb
daa
adc
push
fdivs
rcll
ds
mull
xor
fwait
nop
es
sahf
leave
jnp
movsl
and
je
stos
outsb
clc
mov
scas
mov
enter
push
sub
sbb
dec
add
lahf
ret
sti
sub
popa
clc
daa
inc
and
pop
dec
stos
push
adc
mov
adc
adc
call
frstor
xor
xor
fbstp
mov
out
push
push
inc
pop
jae
ret
cmp
sub
push
out
pop
ret
mov
lcall
jp
dec
scas
loopne
cmp
xchg
leave
ficompl
fcmovnb
fs
orb
andl
stos
fwait
int3
mov
xor
sarb
shr
pop
mov
sahf
movsb
jo
cmc
data16
and
sbb
dec
mov
xchg
cmc
push
stos
repz
out
aad
lock
dec
fsubrl
test
fstpt
aam
jl
xchg
xchg
inc
cwtl
in
and
femms
or
inc
jbe
cmpsl
mov
and
ror
cmpsb
jno
jnp
sub
xchg
cmp
cmp
test
pushf
or
mov
cmovb
inc
sbb
ja
loopne
push
adc
out
imul
insb
sbb
and
or
ja
adc
cmp
sti
lods
fwait
int3
mov
sahf
lret
jl
das
lret
negl
mov
push
push
and
sub
das
jecxz
mov
mov
dec
stc
fcmovu
enter
pop
mov
xchg
or
shll
stos
mov
lret
cmp
pop
dec
rcll
sbbl
inc
xchg
adc
pop
bound
push
out
pop
data16
cwtl
rcrl
ja
dec
fmuls
sbb
pop
sbb
jle
mov
and
addr16
push
jmp
arpl
int3
mov
or
adc
icebp
icebp
xlat
clc
fldt
sarb
cmp
xor
xchg
add
xor
pop
out
sbb
sub
pop
pop
cmp
cmp
fsts
adc
in
xchg
mov
ret
je
push
scas
push
inc
xchg
cmc
push
hlt
and
cmp
stos
fists
in
in
fwait
push
stos
cmp
push
cli
fs
mov
mov
mov
mov
movsl
push
jmp
imull
or
jnp
lahf
and
scas
mov
mov
xchg
dec
leave
dec
jg
es
pop
cmp
lret
mov
dec
stos
aad
dec
test
dec
jl
xchg
fwait
shrb
ret
popf
jno
mov
test
into
dec
jnp
and
add
jo
les
sub
mov
mov
push
jbe
movsb
jp
xor
test
push
jecxz
insb
or
test
cmc
and
push
xchg
xor
lods
add
outsl
push
xchg
mov
push
adc
add
jnp
jmp
dec
or
int
dec
and
jmp
in
mov
mov
imul
fs
jle
cli
xorb
pop
adc
gs
daa
notl
mov
mov
sti
std
popf
and
sahf
inc
movsl
xlat
pop
mov
in
push
xchg
xchg
out
adc
and
add
add
es
adc
pop
add
hlt
mov
sub
push
pop
cmpsl
pop
xchg
dec
inc
mov
mov
xchg
cmp
adc
in
int3
leave
cmpl
cmp
imul
icebp
hlt
mov
sbb
pop
mov
lds
shlb
cli
pop
push
xchg
pop
inc
hlt
dec
cld
pop
lret
into
ret
stos
xor
dec
mov
push
fmul
or
xor
into
cld
cld
int
inc
jno
mov
jmp
pop
fs
mov
fnstenv
cmpsb
stos
loopne
inc
push
or
inc
pop
in
xor
roll
rcll
dec
int
lret
insb
or
aas
or
cmpsb
jno
cmp
jno
sub
lods
xchg
lds
and
lret
pop
mov
sbb
mov
ret
jae
xchg
and
push
repz
dec
mov
mov
jnp
aas
sub
inc
sbb
pop
iret
adc
or
adc
mov
ret
add
xor
cli
movsl
outsb
mov
push
jo
add
stos
sub
fisubl
jge
jae
out
cmpsb
add
xor
rolb
adc
jg
xor
shlb
pop
adc
jno
pop
rolb
sub
mov
mov
shlb
xor
mov
mov
dec
pop
in
add
push
insl
dec
mov
subl
add
push
pop
data16
dec
and
js
stc
imul
and
pop
in
fwait
in
adc
mov
and
or
stos
shrl
cmpb
cmp
inc
mov
mov
mov
push
xor
mov
mov
lds
loop
jge
dec
cmc
sbb
mov
dec
push
das
scas
cmpl
and
jmp
mov
daa
scas
sub
cmp
inc
hlt
data16
daa
jl
jo
test
and
les
mov
into
pop
dec
cli
mov
test
jmp
inc
insb
fwait
pop
addr16
adc
adc
test
sbb
cli
popa
jnp
jle
mov
xor
into
cmp
into
loope
xchg
cmpsl
cmp
and
out
xor
popf
insb
outsl
pusha
roll
add
sub
or
dec
aas
cld
push
imul
outsb
loop
ljmp
push
xchg
pusha
rcll
xor
sbb
xor
inc
rcrb
xchg
out
and
inc
dec
push
mov
jae
pop
pop
popf
cwtl
mov
pop
and
lret
jecxz
xchg
push
jmp
xchg
dec
movntq
out
sub
lea
xchg
pop
add
bound
pop
mov
jle
push
scas
pop
aam
push
test
test
inc
mov
icebp
dec
fldcw
je
add
cli
imul
mov
jbe
mov
fiaddl
popa
push
mov
lret
cs
jmp
and
pop
daa
scas
jg
idivl
out
xchg
lret
push
push
shrl
or
mov
in
mov
dec
out
out
scas
cmp
add
ss
mov
out
into
adc
insb
shlb
sbb
movsb
jns
mov
popa
popa
iret
ljmp
repnz
mov
xor
out
mov
in
jae
lods
sbb
add
insl
aaa
mov
subb
lds
add
scas
pop
push
mov
and
in
cli
pop
ret
shll
cld
xchg
mov
int3
std
jmp
repnz
cmp
jb
xchg
in
imulb
cs
fmul
insl
insl
dec
loope
add
fs
pop
aam
push
rorl
add
outsl
movl
mov
pusha
test
cld
psraw
pop
test
dec
nop
js
xor
or
sub
mov
jmp
xchg
or
or
stos
cmp
out
popa
xchg
and
cltd
add
mov
sbb
in
dec
adc
ss
sbb
jp
aas
rclb
icebp
xchg
and
loop
inc
fnstsw
or
cmp
adc
movsb
addr16
add
sub
pop
jl
pop
dec
push
jmp
int
pushf
lcall
and
mov
mov
or
mov
out
and
aaa
jle
outsb
jnp
add
icebp
mov
mov
sarl
mov
push
xor
scas
pushf
sbb
push
in
mov
jg
aaa
xchg
cli
push
cmp
or
lods
push
xchg
push
and
cwtl
in
scas
fadds
lahf
out
ja
add
mov
lea
push
fistpl
mov
pop
xor
dec
fcmovnb
cmpl
icebp
sarb
cmp
cmpsl
push
repz
pop
xor
into
xchg
sub
loop
imul
inc
popa
mov
jmp
pop
and
dec
jecxz
into
fwait
lcall
mov
mov
dec
xor
or
out
sti
or
cmpsl
jne
out
ret
roll
jnp
adc
cs
mov
or
lahf
js
stos
cmpsb
aaa
idivb
cltd
shr
or
imul
or
mov
out
sub
dec
lret
lcall
fsubrs
lahf
mov
inc
outsl
or
stos
xor
push
out
subl
and
arpl
lcall
pushf
jl
mov
push
mov
inc
and
pop
mov
push
xchg
cmp
jns
jmp
adc
aaa
fadds
push
xchg
cmp
pop
mov
mov
in
into
cmp
pop
xchg
adc
test
mov
inc
xchg
into
in
out
adc
push
push
lods
iret
and
pop
repz
loopne
inc
cmc
cs
xor
or
in
add
mov
mov
mov
fs
sbb
jns
notb
iret
mov
mov
addr16
ret
imul
int
neg
sahf
movups
cmpb
mov
mov
mov
adc
fcoml
mov
mov
lcall
adc
push
jecxz
mov
mov
mov
cwtl
popf
dec
mov
hlt
cs
adc
outsb
or
pop
imul
jge
mov
push
les
mov
xor
insb
cmp
int3
icebp
scas
mov
dec
xchg
bound
cmp
adc
dec
dec
jp
sarl
cwtl
xor
mov
hlt
bound
iret
test
mov
cmp
int3
outsb
in
and
inc
cmpsl
xchg
cltd
in
sbb
leave
shrl
outsb
imul
xor
sbb
lahf
ljmp
mov
enter
out
insl
xor
subl
bound
mov
dec
lods
lret
dec
jo
scas
add
mov
or
decb
mov
or
mov
sti
fstpl
and
pop
sbb
jae
loopne
test
lret
sahf
or
fwait
stos
leave
clc
jbe
pop
dec
test
ja
and
xchg
daa
fisubs
cmp
jl
lcall
imul
lods
sub
sub
and
xchg
pop
ds
pushf
icebp
pop
mov
jb
pop
cmp
lods
dec
pop
dec
lcall
xor
repnz
push
sbb
mov
jae
inc
aas
push
sbb
dec
mov
mov
xor
mov
daa
xor
out
cmpsl
sub
xor
xor
daa
cs
ret
mov
jnp
call
outsb
xor
push
aas
mulb
js
jmp
mov
lods
je
fdivs
in
int3
mov
lock
test
sub
dec
testb
mov
pop
pop
mov
jbe
dec
cmp
fdiv
sub
movsb
and
add
cmpsl
loop
sub
pop
stos
sbb
inc
pop
rcr
adc
cwtl
sub
xor
js
movsb
popfw
arpl
lea
xchg
push
out
xchg
stc
pusha
dec
adc
push
jl
push
mov
stos
inc
sbb
mov
jmp
dec
test
orb
sub
adc
js
add
adc
inc
dec
nop
fdivr
mull
in
aas
in
xchg
insl
push
negl
pop
pop
cmp
mov
jns
dec
lret
xor
sub
jp
cltd
or
jbe
cwtl
aaa
fidivl
gs
pop
shlb
pop
or
incb
mov
les
dec
push
add
insl
pop
dec
add
mov
bound
push
cmp
sub
aaa
jmp
js
mov
xchg
jo
cwtl
pop
jo
jo
ss
jne
std
and
rcrb
leave
jge
neg
mov
cmp
fsubp
cmp
cld
ja
and
sar
sub
dec
decb
pop
dec
loope
int
dec
stc
pop
jbe
xchg
daa
xor
pop
pop
test
jne
out
cmpsb
xchg
lret
jl
dec
jbe
stos
in
sbbl
pushf
nop
xchg
jo
inc
popa
xchg
xchg
jne
jb
mov
cmpsl
or
jge
mov
sub
mov
xchg
mov
push
cmpsb
adc
inc
arpl
call
das
or
cmp
jge
pop
loope
dec
aam
jge
push
or
popf
pushf
sti
and
sub
or
xchg
mov
cmp
icebp
xlat
icebp
jno
pusha
push
mov
pop
enter
out
mov
aad
rcrb
mov
mov
xor
divb
xor
pop
add
pop
cltd
loop
or
stc
sarl
cmp
cmp
mov
rorl
push
or
pusha
xor
adc
orb
and
dec
rol
aas
lcall
aad
aaa
fwait
enter
mov
or
jecxz
xchg
loope
out
mov
mov
imul
call
push
adc
cmp
adc
mov
out
sbb
enter
mov
fldcw
test
inc
mov
rolb
scas
add
repnz
pop
or
push
pusha
inc
in
in
sahf
jecxz
and
inc
mov
inc
ret
mov
pushf
dec
mov
outsb
dec
pop
push
out
cli
xchg
fidivl
adc
xor
cli
push
cmp
fdivr
les
ret
inc
mov
xor
add
in
ja
imul
mov
ret
or
fwait
icebp
daa
fcompl
data16
dec
xchg
lahf
mov
mov
arpl
aas
mov
sbb
pop
inc
xchg
sahf
or
loopne
idiv
push
ret
popa
mov
and
xor
and
sbb
test
xchg
mov
fcmovne
cli
sbb
loopne
sub
lahf
fucomi
push
js
and
cs
push
pop
inc
mov
jb
fiaddl
add
popa
sbb
cmp
mov
gs
rorl
hlt
daa
inc
lock
mov
inc
mov
mov
bound
mov
fcoms
dec
daa
and
add
sti
or
push
jns
jb
ret
idivb
pop
xor
aaa
sub
sahf
push
cmp
pop
inc
outsb
rcll
popa
lahf
in
adc
mov
sbb
out
xor
sbb
and
sbbb
add
cmp
cld
lea
inc
negb
sbb
and
fcoml
inc
push
imul
in
push
xchg
test
adc
xor
cmp
rolb
jg
push
ja
push
mov
stos
xor
xor
xchg
dec
adc
roll
in
fcomi
or
pop
cs
aad
push
pop
enter
xor
push
fnstsw
and
pop
mov
xor
pop
insl
add
test
jns
frstor
mov
xchg
adc
sbb
cld
sub
jne
push
fwait
jle
mov
test
dec
push
aaa
push
lods
shlb
aas
push
jle
rclb
cmp
dec
add
cli
dec
call
push
xchg
std
das
imul
cmpsl
sub
sarl
sti
mov
enter
pop
fwait
daa
mov
push
jnp
mov
aas
and
push
cs
xlat
cltd
bound
jb
gs
cmp
addb
push
mov
scas
orb
loop
and
sub
dec
xchg
fdivp
insb
insl
cmp
xchg
xchg
mov
repnz
mov
test
iret
inc
push
ljmp
cmp
dec
pop
std
test
ret
aam
lret
rolb
jl
xchg
pop
mov
cmpsl
fnstcw
dec
dec
pop
inc
mov
movsl
addl
sbbl
lret
adcl
push
mov
out
pop
xchg
inc
xchg
aas
xchg
jmp
xchg
loop
test
ss
out
scas
mov
xchg
mov
cmove
dec
xchg
loopne
adc
adc
not
out
add
xchg
mov
jmp
xor
imul
dec
xchg
push
adc
and
push
loope
das
out
lds
push
mov
jmp
imul
movsb
or
stos
sbb
aaa
int
ror
cmp
cmp
lcall
ja
fcomp
ds
negl
jbe
push
fisttpl
sbb
out
xchg
push
leave
mov
inc
ja
push
mov
lods
test
xchg
icebp
mov
dec
and
add
push
mov
jecxz
iret
repz
rcrl
gs
outsl
and
aas
ljmp
out
xchg
xchg
jnp
pop
lock
inc
dec
and
fcompl
js
rcrl
dec
and
leave
sub
aas
and
gs
mov
mov
out
arpl
jnp
lahf
sahf
jbe
out
inc
fwait
add
shlb
lea
cld
popf
cmp
fmuls
jbe
sbb
les
mov
cmp
leave
int
cmp
movsb
lahf
aaa
add
xchg
push
jns
leave
dec
fisubl
ret
jnp
push
cmpsl
xchg
xchg
fbstp
jle
fadds
imul
xlat
lods
mov
pop
jns
cmp
roll
insb
pushf
std
pop
sar
xlat
xchg
or
mov
or
pop
fwait
in
test
xrelease
jmp
call
push
lods
add
sbb
and
in
mov
nop
sub
and
pop
orl
js
cmpl
movsb
jne
and
push
int3
inc
loopne
lock
mov
hlt
adc
mov
dec
in
js
sbbb
push
aad
add
sahf
or
push
insb
dec
cmp
pop
fwait
fs
jae
dec
mov
enter
test
mov
mov
mov
int3
xchg
add
cmp
test
stos
adc
cmp
xlat
and
scas
ljmp
xchg
mov
cmpsl
loope
pop
jns
loop
lret
test
fwait
insl
test
sahf
ret
mov
movsl
jnp
xor
push
add
dec
mov
mov
xchg
jne
test
test
icebp
dec
xchg
add
cmc
or
xchg
aad
cmp
jbe
and
int3
xchg
insl
aad
inc
add
cltd
xchg
push
sub
ret
es
insl
sbb
sbb
jp
cmp
sarb
fnstenv
shrb
pop
xchg
mov
xchg
test
ja
mov
pop
and
lcall
jnp
lahf
test
push
cmp
mov
movsb
shll
sub
cli
mov
dec
mov
mov
mov
hlt
or
sbb
test
andl
orl
movsb
shlb
or
dec
or
jl
jo
jecxz
mov
pusha
push
inc
cmp
jae
push
or
jge
lret
mov
push
mov
dec
jbe
mov
mov
inc
and
dec
iret
mov
inc
dec
sbb
lret
sbbb
fadds
inc
out
push
xchg
lret
push
repz
testl
pop
dec
adc
or
orl
jge
pop
fbld
jg
inc
dec
arpl
mov
push
jo
pop
jae
rolb
jl
mov
adc
ret
lock
and
loopne
loop
dec
int3
stc
out
mov
xor
or
push
lahf
nop
outsb
jmp
xchg
es
jge
out
gs
jns
cmp
popf
test
je
mov
aaa
das
mulb
int
ljmp
xor
sbb
push
pop
je
sbb
mov
pop
sbb
cmc
pop
imul
mov
sahf
leave
jne
adc
cltd
stos
scas
sbb
faddl
std
mov
shlb
outsl
repnz
je
or
jnp
out
pop
adc
cs
cmp
xor
scas
sub
out
mov
add
sbb
jecxz
ljmp
loope
es
mov
dec
lcall
xor
fs
jecxz
lock
sti
mov
pop
mov
out
inc
mov
mov
mov
jns
adc
arpl
sti
push
inc
xor
loopne
frstor
mov
inc
or
sarb
lods
adc
jno
rcll
mul
jl
decb
pushf
test
sahf
push
scas
xchg
cmpsl
mov
sbb
sub
cld
sti
jnp
outsb
push
pop
pusha
mov
jnp
enter
movsb
hlt
mov
sbb
jecxz
daa
movsb
fisttpl
mov
into
xor
dec
ficomps
dec
jae
jle
ret
jno
jns
adc
icebp
xorb
mov
xchg
ret
mov
cmp
pop
mov
add
rcrl
loope
mov
enter
daa
cs
or
xchg
sub
push
popa
push
test
sub
sti
sub
xchg
lahf
push
pop
mov
pop
xchg
dec
jecxz
pusha
mov
adc
sti
lods
xchg
xor
adc
aad
in
sub
xchg
inc
repz
mov
in
pushf
and
movsl
inc
cli
mov
mov
sub
add
pop
mov
nop
enterw
xor
xor
stos
jg
jecxz
add
sbb
pop
jg
lcall
sbb
adc
in
jae
cltd
fsubs
dec
and
mov
dec
lahf
pop
inc
jl
addr16
mov
cli
pop
mov
xchg
push
xor
lds
cmpl
pop
xchg
ja
aas
xchg
dec
pop
pop
mov
sarb
inc
jmp
hlt
daa
xchg
mov
inc
xchg
pop
in
sbb
in
fldl
lock
pop
mov
mov
push
xchg
push
adc
jmp
sarl
push
movsb
dec
out
sub
dec
out
scas
mov
push
mov
out
insb
jmp
fsubrs
sbb
jb
dec
outsl
rorb
cld
ss
iret
outsb
imulb
add
fwait
mov
mov
or
sahf
push
and
adc
iret
rcll
fildl
test
dec
sahf
adc
sbb
add
hlt
jne
push
add
cs
push
sbb
mov
mov
xor
cmp
stos
jnp
pop
dec
mov
imul
stos
addr16
dec
pop
cs
cltd
fldln2
or
aad
xchg
into
shl
aad
and
imul
mov
insl
push
inc
add
ret
aam
mov
push
jb
nop
mov
out
rcrb
jno
push
push
mov
orb
rcrl
dec
mov
inc
cmp
repz
sarb
mov
fs
test
jle
test
sbb
jl
int
pop
cmpsl
mov
sub
icebp
repz
inc
cwtl
das
rorb
movsl
je
ret
call
call
adc
inc
aaa
dec
loopne
sti
inc
xor
mov
cwtl
in
inc
jg
mov
inc
push
test
les
mov
jns
hlt
jo
inc
xor
inc
mov
pop
gs
inc
in
les
xchg
in
int
push
mov
je
adc
loope
out
idivb
out
ss
ljmp
sbb
xor
lods
add
aad
push
scas
fwait
mov
push
idivl
xlat
inc
loopne
mov
cmp
adc
xor
xor
out
inc
pop
popa
testl
add
mov
inc
cmp
icebp
out
add
nop
cs
inc
cmp
mov
and
stc
call
int3
andb
stos
jle
call
loope
and
imul
sti
inc
and
adc
test
leave
bound
dec
cmp
test
leave
xor
hlt
popf
push
add
lds
cltd
mov
push
in
mov
sub
xor
ds
inc
sahf
lods
xchg
and
jb
scas
adc
jns
pop
hlt
les
cld
add
dec
or
push
movsl
pop
xor
mov
inc
and
stos
xor
sbb
ret
dec
aam
inc
mov
sbb
xchg
cmp
push
jle
push
push
cmpsb
xor
jo
push
jecxz
mov
pop
ss
gs
fisubl
pop
inc
icebp
mov
dec
popa
cwtl
mov
popf
pop
xor
sub
fisubs
andb
lret
and
and
ss
scas
push
ss
test
mov
lods
and
enter
push
fbstp
sarl
mov
sahf
outsb
push
mov
push
loopne
xchg
repnz
jnp
sbb
mov
shl
cmp
fmull
inc
mov
cmp
jp
pop
or
mov
les
inc
lods
cwtl
cwtl
ja
xlat
mov
das
inc
stos
push
pop
mov
clc
adc
add
jl
jg
lahf
xchg
push
jns
pop
lahf
int3
scas
and
xchg
or
popa
lahf
xor
lret
cmpl
and
lcall
lret
add
std
imul
ja
loop
sbb
xlat
dec
pusha
dec
jne
xor
aam
adc
or
inc
push
pushf
push
popa
arpl
add
rol
pop
adc
insb
mov
stos
jb
mov
xchg
mov
mov
rcrb
aas
push
fiaddl
mov
xchg
jge
mov
js
mov
cmp
push
out
inc
stos
dec
push
push
adc
mov
fnstenv
sbb
int3
notl
or
cmp
cmp
pop
out
repz
out
fisubs
xchg
inc
andb
aaa
int
push
call
or
xchg
push
loop
outsb
arpl
or
jo
fisubs
mov
cltd
jo
loop
xorl
adc
repnz
outsb
adcb
cmp
adc
mov
and
jns
xor
in
pop
sub
mov
push
mov
mov
mov
and
insl
sub
les
out
pushf
dec
push
inc
out
mov
fsubp
mov
xor
repnz
or
mov
test
rorl
out
enter
jl
adc
jbe
adc
ret
xor
cmpsl
dec
scas
arpl
push
add
outsl
xor
jb
xor
dec
sbb
and
cli
stos
push
pusha
mov
repz
rcrl
repnz
mov
adc
jge
sub
lret
sbb
mov
jae
xchg
icebp
into
mov
or
and
int
bound
loope
or
push
and
dec
sahf
push
fs
or
cmpsl
cmpsb
jl
insb
mov
or
xchg
jbe
mov
in
mov
dec
mov
adc
loop
inc
mov
lret
mov
inc
pop
xchg
jo
push
sub
sbb
dec
add
fwait
inc
mov
fcmovne
jo
cli
dec
or
jnp
lcall
sbb
xlat
sub
xchg
aam
pop
inc
sub
mov
adc
dec
lret
mov
aam
cmp
lods
in
adc
pusha
mov
mov
push
jnp
lods
mov
dec
idiv
mov
std
xor
xor
pushf
btr
call
in
lock
sbb
sub
scas
cli
cmp
jmp
ds
incb
mov
push
mov
push
and
in
mov
mov
xor
aaa
es
aad
mov
imul
pop
sbb
dec
xor
scas
shll
fistps
addr16
mov
gs
xor
pop
ds
call
xorb
pop
sbb
and
push
dec
ret
pusha
aam
mov
icebp
cltd
add
movb
pop
mov
scas
mov
add
jo
gs
inc
jae
inc
cmp
movsl
add
xchg
fwait
pop
call
and
jp
lds
out
xor
mov
loop
dec
mov
push
pop
or
sub
mov
arpl
push
scas
mov
fsubs
adc
mov
addr16
loope
das
aaa
inc
ljmp
or
push
push
sub
mov
cmp
loopne
xchg
inc
pop
pop
loopne
ljmp
or
add
popa
push
sub
rclb
ret
mov
movsb
es
in
cmpsl
and
shrb
xchg
pshufw
aaa
lahf
pop
mov
pop
arpl
mov
adc
and
cmp
lods
jns
and
aaa
daa
test
aas
mov
stos
cwtl
push
lea
movsb
sub
mov
das
jbe
sbb
dec
aad
lret
and
pop
jne
enter
xchg
jne
mov
cmp
fcomps
mov
push
int
mov
jae
lahf
adc
hlt
bound
cmc
pop
add
mov
inc
adc
insl
sub
adc
arpl
loop
adc
inc
mov
dec
adc
push
pushf
jle
outsb
sbb
sub
xchg
mov
and
jae
xchg
xchg
pop
loopne
jno
xor
push
cmpsl
into
movsb
push
out
jg
aaa
pop
and
into
pop
xchg
push
and
lods
roll
stc
mov
movl
rcr
xor
add
xor
adc
loop
mov
jnp
mov
lcall
lret
fiadds
jg
xor
outsb
pop
inc
int3
ror
scas
cmp
dec
push
stos
dec
shll
push
cmpl
lret
xor
addb
mov
ljmp
and
lock
adc
fstps
sub
shll
sbb
les
or
test
jmp
imul
sub
dec
lret
push
xor
xchg
and
inc
lods
xchg
pushf
jb
lret
test
inc
sub
mov
enter
dec
jmp
into
hlt
jmp
pop
push
lret
gs
mov
fwait
pushl
xlat
lds
ds
mov
xchg
mov
lods
jae
lret
adc
in
je
adc
inc
call
stos
hlt
or
and
lahf
xchg
stos
loop
js
cmp
jmp
and
xor
shrl
aad
pushf
sbb
jno
and
leave
pop
cmp
pop
inc
movsl
clc
sti
call
cmpsl
out
aaa
sub
repnz
xchg
movsl
push
imul
decb
mov
xchg
cld
dec
pop
and
into
cmp
sbb
fisttpll
lods
cli
fiaddl
xor
mov
pop
xor
inc
xchg
cwtl
jecxz
hlt
and
cmp
enter
sti
or
in
repz
push
sub
test
stc
int3
dec
subb
sbb
mov
mov
cltd
dec
gs
mov
jae
push
inc
arpl
sbb
xchg
cmp
pop
lret
sub
jne
sahf
xchg
cmpsb
mov
andb
mov
bound
loop
in
out
fucomip
cmp
lret
lods
sbb
dec
jmp
jge
adc
out
test
pop
jnp
dec
push
and
les
test
jge
xlat
mov
inc
std
cli
sbb
je
iret
ret
and
not
adc
jp
xlat
rolb
pushl
out
lods
or
inc
inc
jmp
dec
rclb
push
mov
mov
xchg
jp
xor
jg
fnstenv
icebp
lcall
pop
iret
sbb
aaa
mov
jmp
dec
mov
sbb
les
testb
and
dec
out
xchg
xchg
outsb
flds
into
adc
rcrb
subl
push
dec
test
rorb
jl
aas
xor
addr16
fidivs
add
jg
pop
scas
mov
dec
das
sub
sbb
adc
cmp
pop
cld
pop
xor
fxch
and
aaa
fisttpll
shlb
aas
adc
lret
arpl
pop
jecxz
lock
mov
lds
mov
test
push
shl
leave
xor
xchg
and
jnp
lock
outsb
das
or
mov
aaa
or
imul
ja
das
fstl
in
daa
adc
pop
out
movsl
pop
pop
inc
stc
les
push
dec
push
fcmovnbe
jecxz
or
mov
out
jge
jae
pop
cmp
sub
cltd
sbbl
pop
mov
dec
sbb
inc
jge
je
stc
aas
mov
and
outsl
mov
mov
lret
rorb
out
mov
outsl
mov
test
js
xchg
mov
lret
sub
mov
leave
arpl
ret
sti
jo
outsb
ds
mov
lods
ret
outsb
stc
dec
or
xchg
push
sbbb
inc
test
xor
add
test
jae
ljmp
jns
inc
nop
adc
iret
push
or
jmp
jno
aam
scas
test
dec
cmp
jbe
imul
jns
testb
dec
cmp
test
inc
loop
pop
out
in
int3
inc
add
flds
xor
mov
stc
inc
out
push
pop
or
addr16
or
insl
iret
pop
cmpsb
xchg
jnp
xchg
scas
test
xchg
pop
data16
adc
cmp
xor
jb
mov
mov
ret
jp
xchg
pusha
inc
aad
jge
fistpl
inc
and
jl
xor
out
jg
cmp
ficoml
jle
das
lods
xor
aaa
cmpb
mov
cmp
adc
pop
inc
aaa
push
subl
mov
sub
jns
movsl
sahf
icebp
cmp
dec
or
xchg
inc
fsubs
pop
mov
scas
pop
stc
popa
push
les
and
push
xchg
mov
push
inc
xor
les
jle,pn
lahf
jo
insl
imul
mov
pushf
mov
sub
mov
inc
sub
pop
mov
push
push
sahf
test
sahf
sbb
mov
jge
pop
dec
jp
mov
mov
jl
xor
add
pusha
jo
out
mov
sub
mov
xchg
push
mov
in
mov
fcoml
cltd
mov
pusha
fsubrl
dec
jo
mov
or
sahf
jge
sub
in
and
out
adc
sbb
shll
std
mov
or
ss
lods
inc
inc
jge
adc
sub
xchg
sub
test
mov
cli
das
push
aaa
pop
mov
lock
pushl
imul
stos
adc
hlt
mov
xor
fnstsw
mov
and
std
scas
sub
cwtl
outsl
fcompl
jge
cwtl
xor
ljmp
mov
fdivl
cmp
cmpsb
sti
bound
scas
cmp
rorl
xchg
pop
sub
pushf
xorb
test
add
sbb
inc
pop
gs
inc
jg
or
movsb
add
pop
add
in
testl
ss
cmp
in
inc
or
pop
and
pushl
push
daa
mov
call
loopne
enter
test
jp
rcrl
push
out
pop
mov
add
mov
lds
lds
daa
sbbb
sub
cmp
ret
adc
scas
xchg
sub
xor
into
inc
lock
adc
loope,pn
mov
mov
inc
sbb
in
cmp
in
inc
or
add
nop
cmpsl
mov
mov
and
jo
dec
and
push
fisttps
pop
rcrl
push
jns
sub
lods
pop
daa
insl
inc
scas
xchg
jl
mov
cmpsb
mov
fisubrl
cmp
clc
or
fdivl
mov
mov
xchg
inc
push
enter
fdivr
addr16
mov
sub
test
mov
jns
fidivrs
mov
sub
jp
and
fmulp
in
push
ja
test
arpl
call
mov
lock
jno
out
xor
sti
bound
add
lds
aaa
jno
pop
xchg
pop
pop
push
xor
sbb
jle
scas
pop
xchg
add
sbb
icebp
pop
popf
xor
lea
push
and
out
into
gs
cmp
jmp
jnp
les
mov
sbb
mov
xchg
ljmp
in
xchg
push
int3
lret
shr
mov
loop
mov
fstpl
divl
aad
xor
scas
pop
cmp
in
shl
jo
sahf
inc
sbb
testl
je
lret
cmp
cmp
rorl
les
pushf
mov
or
pop
ja
and
pop
das
lea
or
enter
xor
cltd
jo
cmp
mov
push
iret
mov
xchg
loopne
dec
and
inc
or
inc
jno
add
in
in
psubusb
imul
subb
lds
adc
insl
push
jmp
adc
repz
adcb
les
mov
ror
neg
cmp
push
imul
gs
mov
mov
je
and
stos
aad
xor
pop
jb
pusha
sahf
push
mov
loope
and
jge
pop
push
lahf
xchg
fdiv
add
outsl
jbe
lds
mov
test
pop
addr16
in
xchg
adc
add
mov
test
popaw
mov
mov
jp
ror
add
xchg
sti
repnz
test
pop
xlat
fildll
sub
inc
fistpll
sub
adc
xchg
je
xor
xor
repnz
xchg
sarl
imul
jecxz
xchg
add
add
das
or
stc
push
lahf
daa
sahf
xchg
inc
rcl
push
jbe
imul
inc
call
mov
sbb
outsl
dec
or
test
pop
push
mov
jmp
or
js
push
pop
and
loope
sahf
fsubrs
fimull
jle
dec
jnp
adc
mov
fcmovnb
dec
notl
out
arpl
imul
lock
ret
jg
addl
cmp
scas
insl
adc
jbe
xor
mov
sub
mov
call
ss
jns
sub
js
cmp
in
arpl
sub
inc
cmp
xor
popf
ficomps
cmp
or
mov
js
mov
cmpsb
jae
outsl
insl
jmp
aad
mov
dec
xor
mov
stos
pop
inc
imul
pop
lahf
leave
inc
sbb
call
mov
add
or
jl
or
dec
adc
push
mov
fs
sti
pop
sub
and
mov
dec
fisttpl
bound
arpl
push
or
inc
out
xor
scas
pushf
cmp
ret
popa
jb
not
cmp
movsl
in
or
xchg
outsb
jp
incb
int3
add
mov
aaa
das
inc
repz
mov
push
out
dec
sbb
mov
mov
icebp
fdivrl
xorb
xorb
fisubs
xchg
dec
lock
push
pop
jno
cmp
xor
movsb
xchg
dec
shrb
lea
xor
jle
loope
or
arpl
cmc
cmp
cwtl
in
push
pop
push
popa
and
cmp
pushf
mov
mov
cmp
or
jecxz
adc
inc
add
ss
sbb
je
js
sarb
mov
add
arpl
lock
mov
mov
mov
mov
stc
int3
repz
lods
mov
loop
push
xorl
xchg
sarb
dec
adc
cmpsl
out
inc
adc
jo
inc
mov
xchg
data16
outsl
fwait
cs
fsts
mov
xchg
fstl
fdivr
aad
sbb
lea
int
jbe
pop
test
in
insb
xchg
js
cmpsl
mov
push
in
mov
sub
and
lret
stc
fldl
aam
sbb
sbb
dec
test
roll
cli
js
inc
dec
add
or
mov
lahf
dec
push
pop
xchg
shl
adc
scas
adc
shrl
ljmp
outsl
int3
adc
insb
pop
loopne
sub
dec
xchg
loopne
ds
jl
imull
test
imul
call
adc
pop
and
dec
dec
sbb
into
lahf
lock
add
leave
and
jns
cltd
mov
in
ja
adc
lods
mov
pop
out
sub
adc
and
lahf
imul
xor
dec
cs
cmp
ljmp
test
repnz
dec
jl
call
out
in
mov
add
push
sahf
mov
mov
push
jb
iret
lret
arpl
std
xchg
icebp
outsl
pop
pop
pop
sbb
sub
adc
in
add
insb
clc
add
mov
pusha
jecxz
mov
pop
icebp
mov
aas
cmp
in
cmpsb
add
cmpsl
shlb
hlt
push
adc
jo
or
jnp
push
cmp
sbb
mov
dec
push
sub
adc
popf
cwtl
and
cwtl
push
insl
loop
int
add
push
xorb
js
dec
subl
in
lods
xor
push
or
xor
test
mov
test
cmp
sar
push
lcall
sarl
and
pop
fistps
sbb
outsl
xchg
es
xor
dec
mov
repz
jno
rcrl
xor
mov
jge
push
adc
hlt
shr
rorl
mov
xchg
mov
push
scas
bound
push
mov
ja
les
dec
jp
xchg
adc
movd
lea
pop
adc
adc
sbb
xchg
and
dec
mov
sub
jge
jge
ljmp
add
cwtl
mov
mov
mov
rcl
sub
insl
in
xrelease
mov
insb
sub
mov
jae
sti
pop
clc
lock
ret
arpl
movsb
dec
roll
popw
jge
call
call
xchg
or
call
shl
cltd
clc
loopne
inc
mov
pop
add
ss
cmp
mulb
cs
decb
mov
cmp
lods
jno
test
lcall
and
xor
sbb
lcall
aas
sbb
movsb
shl
jno
fldcw
push
std
xchg
fisttpl
pop
and
lea
jmp
loope
testb
mov
imulb
cmpb
inc
push
outsb
stc
jecxz
mov
insb
fcomps
das
jmp
sbb
jp
daa
dec
inc
mov
ss
sbb
sub
ss
sub
sbb
sahf
xor
std
cmc
inc
and
push
inc
daa
jb
sbb
cmpsb
pushf
test
iret
nop
fcomip
mov
insb
repnz
cli
and
popf
mov
inc
mov
ds
cmp
dec
scas
jo
movsl
adc
dec
inc
cs
push
lds
push
out
scas
test
pusha
hlt
stc
cld
fstl
dec
pop
push
cmp
jp
dec
outsl
mov
push
or
stos
ja
pop
out
pop
and
add
adc
lcall
lret
jb
int3
xchg
mov
cmp
sub
clc
cmpsl
outsb
inc
pop
fisubs
xchg
sub
dec
into
or
clc
cli
lock
pop
and
outsb
out
aaa
mov
lea
jmp
dec
push
xchg
push
aas
in
imul
ss
jl
mov
dec
xchg
mov
outsl
add
xor
or
repz
stos
call
fcmovnbe
xchg
dec
xchg
aam
mov
sti
sbb
ljmp
cmp
inc
call
add
mov
scas
test
pop
movsb
repz
lods
cmpsl
push
jg
inc
lret
sti
and
jno
cmc
lds
div
rcll
repz
mov
out
movsb
lock
lods
aaa
loop
ljmp
mov
popf
enter
into
mov
push
lock
cmp
loopne
mov
mov
rcrl
jle
jb
mov
hlt
fildl
xchg
stos
lret
dec
mov
popf
in
imul
icebp
cmp
aas
test
aaa
mov
xchg
mov
dec
pop
push
inc
adc
adc
mov
sub
or
negb
sub
push
movq
adc
or
mov
fistpl
mov
ss
cmpsl
cmp
cwtl
mov
add
xchg
out
mov
or
fwait
out
fcompl
mov
add
pop
data16
and
pop
fisttps
in
lock
mov
adc
xchg
dec
insb
nop
fistps
andb
stos
mov
mov
loopne
inc
mov
adc
push
adc
push
jbe
xor
xchg
adc
aas
fldt
inc
adc
mov
lcall
repnz
dec
pop
pusha
xlat
jmp
mov
jg
lret
es
ss
subb
leave
inc
aad
xor
out
mov
xor
adc
loope
rorl
mov
fisttpll
out
cs
insb
add
mov
fildll
out
andl
mov
mov
insl
data16
in
nop
testb
fcmovnu
outsl
out
jbe
fldl
jecxz
mov
jmp
push
subb
andl
aas
mov
cmpsb
test
imul
mov
sbb
inc
jno
xor
test
push
cmc
lret
sti
movl
xchg
movsb
fbstp
xor
and
add
and
pushf
add
cltd
aad
roll
cli
xchg
mov
lods
xor
lahf
xchg
aam
shlb
add
jbe
lock
clc
jb
call
pop
and
inc
js
pop
push
add
ss
iret
dec
jae
in
add
addr16
pop
xchg
mov
repz
icebp
scas
mov
cmpl
push
and
lret
xor
stos
lds
mov
movsb
jg
pop
fstps
testl
cmpsl
lea
cmpsb
mov
popa
loopne
mov
out
loop
pop
loopne
sarl
arpl
aas
cmpsb
cmp
in
js
ja
movsl
sub
icebp
mov
clc
push
repnz
push
and
add
sub
mov
pop
xor
sbb
jecxz
jae
std
test
cmp
gs
mov
and
ja
pop
mov
sahf
movsb
xchg
and
cli
xchg
call
pop
sub
dec
pop
int3
ja
inc
addr16
hlt
leave
cmpl
nop
jecxz
loopne
cmp
push
jbe
mov
test
mov
hlt
leave
inc
mov
or
leave
mov
xchg
in
dec
outsl
lahf
and
lea
lock
cmp
jle
cmp
daa
add
loopne
sub
lods
mov
xchg
sti
es
sub
loop
mov
fdivs
dec
insb
les
fnstsw
inc
adc
orb
cwtl
mov
cmpsb
pop
lods
jns
bound
inc
or
push
es
mov
imul
pusha
in
sub
sahf
push
and
ret
mov
or
sbb
sbb
lcall
orb
mov
lret
fwait
sahf
stc
in
mov
pop
ret
or
mov
dec
movsb
outsl
add
shlb
cs
push
ja
outsl
outsb
scas
js
call
pop
adc
inc
push
and
mulb
sbb
leave
mov
jle
and
dec
bnd
and
dec
into
jno
push
mov
pop
repnz
sbb
mov
imul
fidivrl
sub
push
dec
mov
test
negb
adc
sbb
shll
out
jns
das
cli
outsb
cmpsl
sbbb
sahf
test
cmp
jmp
pop
sub
pop
subl
jne
daa
stc
iret
inc
or
inc
popa
roll
push
pop
out
mov
push
or
jo
jp
mov
outsl
xor
lret
mov
xchg
sbbb
add
clc
mov
std
inc
sbb
test
arpl
inc
fsubl
or
pop
and
fcoms
test
int3
xchg
int3
mov
jmp
mov
sbb
mov
mov
dec
and
jge
mulb
out
push
ret
xchg
insl
std
popa
cmp
add
push
jnp
mov
or
test
mov
sub
jge
scas
adc
mov
mov
scas
clc
mov
xchg
push
das
cld
test
int3
cli
cld
outsb
mov
pusha
popf
loop
test
adc
mov
movsb
cmp
push
sti
add
mov
cmp
xchg
jne
je
pop
enter
push
sahf
outsl
add
stos
hlt
fnsave
sbb
push
movsb
ret
and
add
mov
aam
sbb
roll
fwait
and
repz
pand
mov
mov
test
jae,pt
movsl
outsb
out
and
repnz
fsubr
jmp
xchg
cmp
cmpsl
and
inc
push
xchg
enter
and
xor
aam
pop
into
inc
insl
adc
adc
xor
and
cltd
ds
and
dec
adc
inc
das
and
icebp
gs
pushf
cmp
add
test
stos
lcall
les
jns
mov
dec
orl
push
out
pop
pushf
dec
inc
lahf
das
std
arpl
movsl
enter
jo
and
call
std
jge
inc
insl
mov
push
sbb
rcll
fmuls
aaa
mov
xchg
add
sbb
scas
dec
ja
and
gs
fldt
xchg
movsb
push
pushf
sti
cmp
mov
call
data16
andl
mov
mov
xchg
xor
out
out
xchg
int
fisubrs
into
xchg
out
repz
dec
pop
dec
add
call
shlb
divb
mov
out
icebp
pop
push
data16
xchg
cwtl
add
clc
stos
call
shr
ret
sub
sub
push
jle
and
daa
aad
cmp
ret
imul
repnz
sbb
insb
scas
adc
xchg
mov
jg
out
in
mov
and
jecxz
icebp
cwtl
adc
int
orl
ja
insb
push
sti
cltd
mov
push
addr16
xchg
lds
data16
mov
and
add
mov
push
sub
or
and
test
mov
lds
sbb
je
in
inc
mov
lods
sahf
jle
negb
xor
repnz
pusha
push
add
xor
dec
stos
adc
and
pop
test
mov
sub
sahf
mov
inc
jno
sbb
adc
sub
loop
cmp
nop
xchg
and
inc
jp
mov
xorb
stos
cmpsb
imul
mov
xchg
sarb
test
lahf
jne
subl
je
jp
addr16
inc
loop
push
adc
and
ret
cwtl
test
test
cmp
push
mov
mov
fstpt
cmpsb
ret
lds
pop
xor
and
mov
test
and
mov
shlb
imul
leave
adc
mull
mov
in
lcall
or
mov
xchg
push
out
loope
andb
push
or
ljmp
dec
cwtl
insl
jbe
pop
dec
test
pop
xchg
in
sub
sbb
fsubrs
adc
cltd
notb
inc
push
mov
cs
out
scas
sarl
hlt
and
sbb
sub
jnp
in
inc
rcrb
inc
or
xchg
pop
shll
mov
adc
iret
in
or
cltd
pop
mov
sti
lret
pop
cmp
lods
scas
inc
mov
cmc
jo
clc
or
mov
sub
sbb
xchg
cs
adc
pop
jns
jns
arpl
cmpsl
jge
mov
arpl
dec
aas
inc
fisttpl
mov
iret
or
mov
mov
adc
out
push
insl
inc
fdiv
cmp
arpl
mov
repnz
pop
ret
pop
nop
push
jle
loop
leave
pusha
xchg
imul
mov
sbb
jo
in
shl
adc
in
call
stc
mov
push
orl
or
ja
mov
sub
imul
push
xchg
addr16
out
cld
adc
push
and
addr16
mov
out
xchg
rol
adc
int3
test
mov
adc
sub
xor
sub
adc
sbb
inc
daa
jmp
jmp
clc
insb
lahf
sub
pop
sbb
test
jne
mov
sub
and
mov
jge
shll
sub
pushf
dec
gs
mov
jne
lods
pusha
cwtl
cmpsb
mov
ret
daa
sub
adc
adc
xchg
lahf
ljmp
adc
mov
dec
push
shll
xchg
or
bound
arpl
push
iret
in
push
dec
sub
pusha
inc
mulb
in
jmp
mov
push
lret
add
push
mov
arpl
adc
xor
xor
add
imul
int3
outsb
stc
ret
adc
aaa
mov
or
xor
aaa
push
push
gs
int3
pop
mov
div
loop
mov
push
jo
arpl
adc
and
fidivl
mov
and
pop
mov
pop
and
je
sbb
cmp
xchg
mov
adc
lahf
add
ja
sahf
pop
jl
fldl
push
inc
or
xchg
xchg
or
stos
mov
mov
lahf
and
stc
jecxz
bound
push
mov
stc
fidivl
loope
add
adc
cmovle
xchg
stos
xchg
push
add
mov
mov
and
push
sub
jmp
mov
shll
sahf
push
jl
sub
inc
loope
inc
mov
and
gs
push
push
fiaddl
jg
push
xor
mov
pop
lret
lods
rol
jb
ljmp
push
roll
mov
cmp
jl
cmp
inc
sti
mov
out
inc
out
rolb
push
and
mov
or
into
pop
inc
push
jp
lret
cmc
push
jle
and
fisttps
ficoml
cmpsl
or
ja
xchg
imulb
adc
adc
xchg
add
orb
stc
push
push
jmp
addr16
xchg
dec
or
push
push
xchg
mov
inc
sarl
nop
jmp
pop
daa
int
add
popa
out
xchg
push
adc
insl
stos
out
stos
sbb
sti
repz
repnz
outsl
mov
jmp
daa
xchg
xchg
faddl
ljmp
jae
push
inc
stos
imul
sbb
in
adc
ret
out
leave
movsl
xchg
jns
mov
pop
xchg
cmpsb
adc
fstps
mov
lock
pop
iret
testb
js
cmp
loopne
push
lret
sarb
stc
and
inc
lods
lret
sub
out
sbb
std
orl
mov
mov
xlat
out
stos
pusha
mov
lret
fsts
fst
pop
fcmovnu
push
into
push
in
sbb
adc
pop
arpl
in
xor
jecxz
and
outsb
sbb
pop
mov
mov
aad
mov
jnp
jl
ffreep
jge
xchg
loopne
ss
add
ja
mov
aam
xchg
dec
inc
lcall
ret
loope
add
repz
or
jns
int
dec
inc
loope
repz
outsl
lds
jle
cmp
or
in
pushfw
push
cmp
dec
aam
mov
mov
add
push
mov
sbb
scas
cmovp
sub
clc
mov
pop
mov
dec
add
xlat
lods
dec
popl
mov
and
fsts
xchg
gs
jle
inc
add
enter
rol
mov
insl
std
xchg
cmp
jb
jae
mov
pop
out
sub
imul
jmp
scas
addr16
xchg
xchg
shl
cmp
dec
out
jecxz
mov
xacquire
inc
sbbl
mov
shlb
loop
or
xor
adc
je
push
sub
mov
jmp
push
jle
loope
insb
xchg
lahf
dec
lahf
mov
shrb
and
and
lods
in
cltd
cmp
int3
sbb
mov
jo
leave
fxch
xchg
mov
test
fwait
mov
in
fwait
pop
iret
or
arpl
pop
movsl
mov
outsb
and
cmp
cmp
xor
push
lret
jmp
cmp
cmp
rclb
in
add
daa
lods
loop
add
outsb
jne
pop
dec
adc
pop
mov
mov
dec
mov
sub
adc
hlt
lock
rcll
push
dec
fstpt
fldenv
pop
call
cs
sbb
lret
pop
pop
adc
leave
push
jae
lods
cli
lret
jg
mov
jp
jno
add
xor
sub
add
jge
int
add
jbe
gs
inc
rolb
xchg
xor
cmp
ficoms
pop
jb
mov
ficoml
fcos
gs
cmp
daa
cwtl
js
repnz
pop
mov
mov
jae
rorl
or
arpl
cmp
cmp
repz
ss
hlt
inc
int
xchg
sbb
add
inc
int3
lods
xchg
scas
lods
xchg
mov
pop
push
cmp
mov
aaa
adcl
jge
dec
enter
mov
subb
in
cmp
movsb
jo
in
inc
inc
cmp
hlt
add
push
xchg
jecxz
into
frstor
out
xor
jnp
test
fnstenv
rol
mov
and
arpl
scas
inc
mov
jge
es
fidivl
dec
cmp
daa
hlt
ret
cmp
mov
pop
addr16
xchg
jb
xor
push
aad
xor
insb
sbb
inc
cltd
cld
pop
jne
jo
lods
cmp
in
xlat
cmp
push
shll
adc
clc
rorl
iret
loope
test
mov
fildll
stos
test
out
es
test
mov
push
push
out
push
hlt
jmp
fs
stos
push
flds
mov
stos
xchg
adc
shlb
or
sub
stc
xor
into
popf
dec
aam
xlat
pop
imul
inc
mov
push
push
dec
cmp
jle
das
push
stos
inc
mov
push
or
rclb
and
punpcklwd
or
cmp
fiaddl
or
lock
jg
rclb
out
mov
divl
add
icebp
hlt
in
push
mov
mov
cmp
pop
sub
xchg
negb
adc
inc
cmp
xorb
dec
mov
fcmovnu
dec
js
scas
mov
aas
mov
gs
add
jnp
xor
mov
pop
popa
insl
loopne
jne
mov
dec
xchg
fsubrl
push
xchg
hlt
jns
mov
push
shll
shl
xchg
mov
sub
test
subb
popf
mov
sub
cmp
testb
add
push
jmp
mov
bound
loopne
movsl
into
add
mov
outsb
mov
xor
add
lret
xchg
in
and
xor
fmulp
test
pop
addr16
test
xor
pop
jns
test
aas
push
insb
lahf
sbb
in
pop
lods
js
outsl
orb
xor
cmpsl
and
pushf
inc
or
xchg
mov
mov
adc
mov
dec
mov
fidivrs
push
inc
sahf
lret
lea
stc
cld
xchg
pop
xor
shll
mov
xchg
mov
nop
sbb
jg
lcall
pop
mov
nop
push
mov
adcb
xchg
pop
cmp
iret
mov
in
jne
mov
cmp
cli
int3
adcb
jmp
sub
pop
pop
cld
sbb
shl
mov
mov
cmp
mov
test
iret
adc
xchg
push
pop
or
jb
xchg
xor
jno
xchg
cmp
out
adc
jge
sti
aaa
lock
or
roll
fwait
xor
insl
and
jge
push
icebp
jae
sti
jmp
and
cli
mov
repz
xchg
fld
ret
jecxz
and
pop
data16
lret
les
jo
push
pop
cmc
dec
lds
dec
cmpsl
imul
scas
test
sub
cltd
aas
rclb
pop
arpl
jg,pt
hlt
jl
dec
call
xchg
mov
and
mov
mov
dec
inc
dec
pop
lret
adc
push
sub
cmp
sub
cmp
jle
pushf
jle
adc
arpl
ljmp
pop
add
xchg
gs
addr16
sub
adc
clc
cmpb
pop
mov
insb
test
pop
fsubrp
push
mov
cmp
inc
test
stc
xchg
push
xor
fs
inc
mov
mov
loop
lock
aaa
jge
sbb
nop
out
or
popa
add
xchg
lods
or
or
mov
decb
inc
sti
and
mov
scas
movhps
rcrl
aas
xchg
jne
pop
push
or
xchg
out
or
sub
in
mov
in
aas
pop
xlat
cmpsb
cmpsb
daa
mov
mov
inc
stos
or
cmp
enter
shrb
pushf
int
cld
push
mov
andb
sbb
test
dec
jne
roll
push
xchg
push
in
cld
adc
dec
cwtl
aam
lret
in
and
mov
outsb
xchg
jmp
sarb
push
mov
subb
loope
dec
gs
cwtl
jl
push
scas
stos
iret
roll
lock
xor
inc
mov
orl
hlt
push
movsb
push
ret
outsl
jo
movsb
dec
sbb
aas
sbb
ror
pop
popf
das
cwtl
jno
lods
pop
nop
xchg
push
mov
std
xor
scas
add
sahf
leave
cmpsl
loop
pop
fmuls
pop
loop
call
arpl
out
pop
and
ds
pop
xchg
les
jp
inc
add
sti
les
int
xchg
add
gs
pop
leave
icebp
sub
xchg
jno
hlt
mov
lods
inc
stos
shrl
adc
std
ret
bound
sbb
lahf
aad
push
jecxz
notl
jo
jnp
adc
fcompl
in
iret
cmpsl
and
cltd
loopne
enter
stos
dec
pop
xchg
mov
outsl
aaa
ficoms
mov
daa
pusha
lock
jae
adc
divl
add
dec
inc
fs
dec
out
cmp
sub
pushf
cmp
push
push
fwait
inc
cwtl
jbe
add
dec
pop
mov
mov
cmp
mov
cli
xchg
lods
cmpsl
add
mov
jne
fiaddl
dec
push
fdivrs
pop
insl
lret
xor
ffree
sahf
js
es
imul
and
ds
mov
insl
jg
mov
mov
sub
dec
lock
add
sarl
aad
jecxz
repnz
sub
cwtl
xchg
dec
xchg
cltd
arpl
pop
repz
adc
cmp
test
popf
cmp
pop
stos
jne
or
cmc
daa
ja
and
ljmp
sbb
inc
pop
jnp
dec
pop
inc
js
mov
mov
lret
loope
xor
mov
mulb
ret
shl
pushf
jne
lds
push
dec
lret
sub
cli
and
xor
or
movsb
fld
test
jmp
mov
sbb
lea
jecxz
adc
sub
repz
or
in
subl
xor
fstpl
or
pushf
mov
mov
sahf
adc
mov
inc
mov
adc
xchg
inc
repnz
add
in
pop
mov
fadd
lahf
xor
call
ret
nop
sub
sbb
cmp
xlat
loope
rcrl
je
dec
vandps
sub
popf
scas
jbe
jne
xor
addl
or
push
outsl
mov
cltd
inc
in
xor
xchg
sub
adc
sbb
push
push
inc
push
inc
sbb
jg
ret
jp
push
fsubrs
test
aas
mov
mov
pop
into
mov
insl
cmc
pusha
in
cmp
mov
mov
shlb
sub
negb
xlat
cltd
mov
xchg
fdivrs
pop
ret
mov
rcrl
sahf
adc
data16
out
stc
and
xchg
hlt
mov
mov
adc
leave
cmp
mov
push
fcmovb
test
xor
pop
ret
call
pop
popa
mov
movsl
cwtl
hlt
sub
aad
pop
aas
das
jl
push
ja
or
push
rorb
cmp
enter
mov
jge
sbb
xor
das
rcrb
adc
testb
xchg
in
mov
add
mov
push
and
repz
mov
inc
push
inc
pop
lcall
out
sarl
addr16
mov
daa
pop
jg
fdivl
daa
addr16
sub
mov
sti
pop
dec
add
sbb
and
test
xchg
xchg
pop
dec
push
jbe
mov
cmp
or
testl
je
xchg
test
sub
cmpsl
jae
inc
pop
repnz
test
das
mov
jnp
and
divb
hlt
mov
dec
subl
mov
and
xchg
addr16
arpl
mov
mov
mov
add
les
mov
sbb
movsb
inc
movsl
sbb
xchg
inc
and
push
jne
inc
js
push
scas
inc
sub
xchg
pop
gs
pop
sub
xor
inc
repz
sub
pusha
insl
push
push
mov
adc
aaa
mull
call
mov
pop
out
aam
aaa
mov
aam
push
in
sbb
test
rol
cld
or
mov
adc
mov
push
jl
scas
xchg
test
add
imul
mov
test
subb
or
and
dec
or
stc
xchg
test
adc
add
dec
or
dec
jmp
repz
into
push
jne
jge
mull
push
outsb
mov
subb
or
mov
adc
stc
xor
cmp
xchg
inc
xor
pop
push
lret
icebp
lock
push
mov
cld
int3
and
cmc
stos
jo
adc
add
outsl
sub
pop
lock
xchg
popa
out
mov
fisttpl
cmp
in
popfw
clc
jmp
mov
sub
aaa
sub
mov
or
daa
lods
mov
add
ret
addr16
test
dec
testl
subb
inc
bound
pop
aad
ja
unpcklps
mov
ds
aas
leave
xor
and
adc
cmp
pop
sti
popf
outsb
xor
lret
pusha
jbe
add
leave
jmp
in
jae
out
repnz
lret
nop
lock
adc
or
lcall
pop
xor
jb
imul
jle
test
jb
in
insl
or
rclb
xchg
idivb
loope
pop
cmc
fisttpl
fwait
jmp
xchg
sbb
pop
popa
scas
rolb
inc
scas
out
jne
imul
sti
in
call
ds
pop
cmp
mov
mov
mov
enter
notl
pop
push
out
add
movsb
pop
ret
fcomps
out
inc
jo
adc
xlat
cwtl
mov
xchg
in
sbb
jmp
add
int3
lret
lret
out
cmp
or
push
stos
or
orb
test
push
lods
decl
nop
add
fcoms
xchg
pop
xchg
sub
int3
mov
sub
ss
ss
fildl
jns
cmpsb
pop
bound
out
aaa
test
xchg
pop
lock
daa
or
andb
cmp
pop
mov
xor
xchg
jne
adcl
lods
mov
jae
lock
xor
in
and
in
les
je
fs
call
test
push
pop
and
inc
aaa
inc
outsb
push
jnp
leave
out
jge
rcll
in
call
mov
aam
mov
les
bound
pop
jle
add
lds
cmpsl
sarl
mov
jle
ljmp
jae
arpl
movsl
lahf
negl
idivl
cmp
aad
lcall
out
sub
retw
pop
shl
aam
push
stos
push
mov
xchg
les
bound
add
lods
cmp
mov
shll
pop
lea
or
pop
cmp
addl
push
or
addb
gs
jbe
jge
mov
inc
mov
or
and
sbb
ffree
adc
leave
xor
pushf
mov
sbb
inc
adc
adc
add
adc
lock
scas
mov
cmp
pop
pusha
lret
popf
xchg
sahf
rcrb
lret
fisttps
test
movsl
jns
push
loope
notl
cs
cmpsl
adc
jnp
scas
lret
out
jne
stos
stos
add
sarb
lret
pop
add
ss
les
jnp
jmp
mov
dec
adc
mov
out
adc
and
xchg
aas
cmc
inc
sbb
push
cs
bound
mov
movsl
inc
mov
pop
fisttpll
imul
lret
loop
out
adc
inc
stos
pop
rcll
fcmovnu
cmpsb
add
mov
cmpsl
pusha
sub
imull
mov
mov
dec
sub
mov
cmc
les
push
cli
fsts
in
int3
push
imul
and
pop
adc
mov
xchg
ja
push
jl
sbb
mov
and
sub
push
mov
jae
je
and
add
xor
andb
pop
mov
cmpsb
sub
xor
int3
out
sbb
fnstsw
dec
and
mov
or
outsb
sub
inc
scas
aas
lods
xchg
int3
xor
sbb
inc
leave
lods
fs
add
sub
pop
cli
lahf
push
add
cmp
fdiv
mov
mov
lods
mov
shrl
iret
lahf
jno
mov
xchg
mov
cs
inc
jle
repnz
pop
dec
and
cmp
push
shlb
cs
jmp
out
rclb
mov
sahf
test
adcl
cmp
shrl
or
jae
sahf
mov
xor
int3
push
and
jbe
mov
lcall
mov
and
mov
fadds
minps
sti
movsb
pop
cld
data16
inc
repnz
hlt
or
adc
jecxz
mov
rcrb
pop
ret
pop
push
sub
xor
push
pop
or
cli
mov
jge
js
fs
mov
pushf
inc
pop
loop,pt
mov
cld
roll
jno
icebp
push
jge
aad
mov
and
sbb
jbe
jl
in
aam
in
jmp
jl
movsb
movsl
test
scas
mov
sbb
adc
aam
lods
insl
jge
add
cmp
adc
ja
jnp
xor
insl
lret
cmpsb
inc
inc
mov
sbb
fsubs
ljmp
pop
cmp
jnp
inc
adc
sub
sub
push
je
pop
jmp
std
mov
dec
adc
and
add
int
jle
mov
push
in
pusha
mov
mov
lahf
sub
mov
jns
or
es
mov
pop
lods
or
add
cmpsl
cld
push
popl
ljmp
fstps
cmpsl
aas
adc
movsl
push
out
mov
jno
popf
hlt
sub
subb
xchg
push
leave
cmp
inc
fadds
mov
pop
sar
daa
mov
imul
stos
cs
ror
daa
sbbb
inc
lea
push
and
fnstsw
insl
call
pop
outsl
test
loop
mov
jo
loop
pop
mov
stos
jnp
jle
and
dec
insb
cmpb
and
arpl
dec
std
int
jecxz
or
push
cmp
dec
int
fisubrs
inc
lahf
inc
aas
mov
or
shlb
iret
jle
jbe
mov
or
repz
in
scas
push
pop
popa
mov
push
adc
push
lods
xlat
fnstcw
lods
xor
jns
outsl
mov
cltd
stos
stos
int
mov
xor
xbegin
xor
jg
cmp
adc
jg
inc
xor
cs
sbb
mov
mov
sub
dec
mov
mov
xchg
push
scas
mov
sub
sbb
lret
jae
pop
mov
jne
lock
jl
pushf
and
add
orb
shr
test
push
jo
xchg
gs
jmp
mov
pop
outsl
xor
mov
mov
push
movsb
imul
sarl
cmp
std
jbe
insl
jb
pop
enter
push
dec
cmpsb
iret
mov
or
mov
push
in
aaa
sarb
rolb
xlat
pop
push
icebp
xor
add
xchg
icebp
and
mov
hlt
push
repnz
jbe
in
sub
cmp
push
in
sbb
jno
hlt
lea
add
out
in
inc
xor
addr16
jno
mov
ret
cld
add
cmpsb
inc
sahf
das
push
inc
xchg
jle
sub
leave
in
lds
cmp
inc
jge
pop
pop
stos
shl
es
ss
cmp
popf
outsb
imul
push
movsl
mov
bound
push
xchg
dec
div
lret
lea
cmc
or
jge
mov
cltd
push
pop
dec
jp
rcr
ret
lea
out
dec
jno
pusha
sub
lods
out
sti
ret
in
pop
push
mov
and
sahf
mov
rcr
cmp
pop
scas
xchg
mov
pusha
ror
movsb
cld
rep
and
sub
fisubrs
lret
lea
js
arpl
cmp
add
movsl
adc
sbb
fyl2xp1
mov
mov
inc
push
fistpl
push
xchg
je
jp
xchg
lods
pop
flds
or
mov
out
je
outsb
xchg
xor
stos
xlat
lret
xchg
xchg
and
cmp
movsb
and
sub
push
out
out
mov
movsb
test
imul
in
ja
jno
pop
lahf
cmp
cld
lret
lea
repz
es
orl
das
fdivl
imul
movsb
cmpsb
loope
push
mov
shrb
mov
clc
mov
arpl
sbb
dec
ss
pop
jp
aad
sub
mov
insl
shl
inc
xchg
test
inc
mov
xchg
sbb
pop
imul
js
jae
cmp
out
mov
cmp
test
xchg
push
pop
aaa
xchg
add
xor
push
and
pusha
xor
in
mov
lret
mov
xor
loopne
mov
mov
pop
fnsave
call
jp
daa
hlt
adc
lods
bound
pop
xchg
sub
mov
rcll
iret
cmp
ss
enter
fs
push
das
das
push
lcall
pushf
test
imulb
jae
in
fmuls
lods
aam
roll
push
lods
dec
jp
inc
push
shr
aaa
lock
mov
mov
mov
or
gs
adc
add
pop
sbb
push
add
shlb
fistl
lcall
mov
addb
mov
add
cmpsl
pop
mov
insb
dec
inc
ja
or
cld
hlt
cmp
push
xchg
mov
add
push
pop
mov
dec
mov
sbbb
fcmovbe
cltd
std
jl
mov
xor
or
out
xor
push
decl
mov
xchg
adc
push
fisttpll
dec
je
bnd
jg
jnp
imul
das
ljmp
jb
mov
mov
pop
push
pop
mov
push
aad
pop
pop
orl
cltd
push
jge
jmp
inc
cmp
enter
mov
xor
push
or
ljmp
repz
std
sbb
mov
ja
lock
pop
mov
sbb
mov
jecxz
rclb
pop
mov
sbb
rep
in
pop
push
or
jge
arpl
loopne
repnz
enter
subl
jb
or
mov
cs
push
inc
leave
sub
jno
xor
sbb
lea
sub
incl
adc
mov
mov
outsl
pushf
dec
cmp
add
sub
adc
ljmp
imul
test
mov
scas
jno
sub
inc
pushf
dec
inc
int3
inc
sbb
xchg
jecxz
cltd
out
dec
xchg
lahf
inc
push
and
loop
jnp
shrb
insl
inc
sub
jo
sbb
leave
shr
das
mov
mov
insl
xchg
pusha
and
aad
adc
js
call
mov
jno
mov
inc
scas
cmpsb
jno
add
bound
cwtl
mov
mov
jl
mov
mov
sbb
lahf
dec
mul
adc
xchg
or
les
lods
sbb
jb
dec
mov
jae
dec
and
arpl
div
cmp
pop
add
cld
cmpsb
jnp
mov
clc
inc
js
addb
lods
ret
pop
mov
and
outsl
aad
pop
xchg
lods
fldcw
cltd
lock
mov
mov
pop
stc
dec
cmp
xor
arpl
daa
out
mov
cmp
lds
outsl
cmp
mov
in
jns
and
or
mov
inc
nop
std
icebp
loop
dec
cmp
outsl
popa
outsb
or
mov
ss
push
adc
xchg
sub
pop
scas
inc
rorl
lahf
rclb
cli
mov
test
popa
mov
int3
cmp
stc
in
cld
fs
mov
cmp
xor
addr16
loop
je
jnp
mov
xchg
jle
add
pop
mov
data16
and
popa
mov
imul
mov
sbb
adc
mov
ficompl
fidivl
jbe
insl
push
cs
sbb
insl
mov
shlb
mov
jnp
dec
mov
pop
inc
enter
sbb
sbb
mov
fadds
sub
jae
dec
inc
daa
mov
mov
add
mov
mov
xor
fsubrs
paddusb
cli
pop
xchg
add
cmpsl
mov
mov
out
mov
imul
aas
cmp
lock
aad
adc
loopne
mov
mov
clc
pop
aad
int3
test
aas
jmp
imul
mov
enter
arpl
aaa
int
out
cmp
sbb
sub
inc
xor
test
nop
enter
aad
fists
fmull
mov
mov
sub
je
inc
xchg
aaa
ret
lret
loope
inc
and
mov
rclb
xchg
inc
mov
and
mov
jle
sub
dec
add
jns
out
pushf
sti
and
push
cmp
and
mov
push
push
idivl
aaa
cmp
sub
jne
shrb
push
lea
test
fisttpl
mov
mov
call
scas
push
decb
std
pop
outsb
inc
stos
mov
xor
pop
fdivl
xor
jb
mov
loopne
cmp
inc
lods
nop
sub
orb
sbb
and
lock
gs
pusha
xor
push
vdivps
popa
out
xchg
popa
or
push
clc
jp
adc
test
jle
jl
rorb
stos
fcoms
and
cwtl
xchg
into
cmp
shll
int3
mov
sahf
popa
data16
or
xor
aad
sbb
fstpt
les
push
daa
pop
push
mov
xchg
out
xor
mov
test
loopne
mov
mov
movsb
mov
push
mov
sbb
and
inc
out
sub
out
cmp
jle
scas
ds
sub
test
gs
cld
aaa
xor
or
icebp
push
scas
lods
dec
and
ja
inc
inc
sbb
scas
sahf
add
loopne
test
or
dec
ds
cmp
or
rol
jmp
inc
jp
mov
mov
inc
sbb
cmpsl
out
jp
mov
inc
push
lds
jo
cmp
mov
adc
gs
fs
jle
or
sbb
fdivr
add
mov
fcoms
and
or
aad
or
mov
sub
pop
cmp
mov
fidivs
xchg
cmp
sbb
mov
ds
push
jae
outsb
or
cmp
xchg
loop
pushf
imul
pop
xchg
aam
xor
mov
cwtl
xchg
jge
sbb
jno
fimuls
mov
mov
mov
xor
mov
and
test
and
xchg
xor
push
jae
in
jecxz
mov
mov
cli
push
test
arpl
inc
add
dec
divl
iret
inc
xor
cmp
lret
rolb
ret
adc
pop
cld
mov
in
lret
mov
orb
or
imul
in
inc
cs
xor
xchg
loopne
xlat
pop
cwtl
data16
mov
cmpsl
fdivrl
push
lods
mov
bound
pop
push
adc
sbb
stc
sbb
and
fimuls
adc
aaa
mov
jno
stc
ret
popa
loope
adc
jp
and
mov
xor
in
mov
pop
pop
lret
cmpsl
gs
push
aaa
push
imul
sub
rcrb
jb
xor
xchg
ljmp
inc
jle
sahf
cmp
stos
xor
mov
cmp
push
imul
hlt
aas
add
xchg
pop
aam
push
cmc
aam
stos
mov
xchg
inc
inc
sub
fs
movsl
pop
cmpsl
dec
push
jmp
push
inc
mov
pop
outsl
mov
movsl
scas
pop
outsb
imul
inc
mov
test
lds
dec
or
dec
loop
adc
mov
imul
xor
adc
aam
mov
stos
jle
push
mov
pusha
lret
jnp
sbb
or
inc
test
mov
sahf
call
lods
call
call
test
orb
rcrb
cmpl
adc
push
in
lds
addb
adc
push
insl
imul
push
xlat
sahf
xchg
sbb
inc
mov
push
mov
out
xor
or
or
mov
in
jecxz
bound
nop
xor
add
cmpsl
mov
push
cmpsl
add
imul
dec
insb
outsb
and
lahf
pop
jle
divl
out
jns
adc
dec
and
test
mov
pop
pop
enter
lods
sub
xor
das
adc
insl
xchg
cmp
dec
cs
adc
xor
push
sbb
add
gs
mov
mov
ja
add
daa
data16
push
mov
dec
hlt
ljmp
mov
cmp
push
adc
xchg
mov
js
insb
xor
and
je
test
pop
adc
lock
mov
mov
jmp
mov
cmp
push
xchg
sub
fsubrs
sahf
test
adcb
xor
lret
leave
or
mov
inc
inc
adc
push
xor
outsb
mov
xor
call
addr16
icebp
mov
xchg
scas
std
mov
sub
shll
push
pushf
cmc
inc
sti
xchg
jb
cmc
cmpsb
xchg
insl
pop
jno
jecxz
out
mov
mov
jg
xor
jp
mov
push
enter
aam
add
mov
inc
push
ljmp
push
incl
cmpsl
sub
jnp
xor
mov
xor
sbb
mov
inc
icebp
mov
les
cmpsb
adc
add
adc
and
xchg
mov
sub
sbb
sub
filds
stos
out
mov
idivb
inc
cld
mov
out
sbb
inc
pop
sub
addr16
nop
into
movl
or
sbb
cmp
outsb
insl
xchg
xchg
and
lret
add
test
mov
mov
add
inc
inc
ljmp
cmp
xchg
cmp
andb
jnp
add
loopne
add
or
fwait
adc
testl
cli
outsb
adc
jo
test
inc
insb
insb
data16
mov
icebp
out
sub
or
ret
das
or
sbb
dec
inc
lahf
xor
xchg
ffreep
in
jbe
mov
cld
in
outsb
push
xchg
and
mov
sahf
sub
insl
insb
jmp
add
fldz
loop
dec
add
lret
aam
test
xchg
fwait
test
jle
lea
mov
and
insl
cmp
xorl
les
icebp
push
stos
daa
dec
pusha
movsl
pop
rcrb
fsub
add
mov
rcrb
jne
fcoms
subl
es
mov
out
or
gs
pop
or
mov
and
out
mov
sub
xchg
and
std
push
sbb
popf
ret
xchg
xchg
and
xor
out
shll
jp
lcall
shrb
xchg
loop,pt
and
jno
arpl
clc
sbb
push
pusha
push
inc
imull
adcl
jl
stc
add
mov
push
xor
push
into
insb
push
dec
lret
enter
lcall
push
dec
clc
mov
popa
repnz
fstps
pop
addl
pop
and
adc
adc
test
sub
push
lods
pop
aam
aaa
sahf
loope
sub
add
dec
hlt
or
das
or
mov
pop
fildl
mov
sarl
cmp
jl
inc
and
sbb
sub
inc
dec
pop
repnz
xor
pop
xor
imul
iret
imul
mov
xchg
pop
cltd
inc
adc
bound
ficomps
leave
dec
loope
lds
sahf
cwtl
aas
out
fwait
pop
fdivrl
mov
and
mov
sub
pop
push
test
lods
mov
and
fiadds
shll
pop
loope
sbb
xchg
fwait
bnd
rcrl
or
and
adc
sbb
aas
js
data16
cmpsb
ljmp
cld
movsl
lds
dec
imul
addr16
pop
add
ja
div
daa
mov
sbb
ds
pop
and
pop
cmp
sub
dec
jmp
mull
ja
ds
xchg
pop
movsb
mov
dec
outsl
lock
mov
mov
test
mov
jo
out
jnp
in
in
dec
inc
pop
cltd
inc
xchg
xchg
xor
xchg
js
repnz
mov
sub
push
xchg
jmp
pop
in
push
add
lcall
imul
psubsb
fxsave
into
and
es
setge
je
mov
fidivs
sar
mov
or
mov
leave
repz
xor
outsb
add
pop
sahf
sahf
jb
dec
push
inc
sub
clc
jmp
mov
push
mov
cltd
pop
sbb
dec
mov
cmpsb
adc
test
idivl
scas
pop
pusha
inc
add
mov
xchg
mov
rcrb
les
out
sub
das
mov
inc
loope
jmp
leave
out
fs
lret
popl
enter
dec
jecxz
int3
adc
jnp
ficompl
cmp
dec
cmp
mov
push
mov
add
imul
dec
push
push
outsl
inc
and
rolb
lahf
jns
mov
or
jnp
insl
stc
inc
lahf
cmp
inc
lret
movsb
adc
adc
lahf
movsb
cli
cmpsl
sbb
shll
and
dec
pop
je
jle
pslld
push
and
sub
or
mov
sub
lods
int
imul
scas
mov
xor
dec
or
inc
push
adc
push
iret
push
fsubs
into
pushf
subb
movsl
mov
out
aas
lock
fwait
or
inc
push
push
pop
pusha
test
dec
sbb
stos
push
insb
jae
xorb
pusha
cwtl
sub
push
int3
pop
daa
ds
cs
adc
jmp
aas
fs
add
xchg
out
jae
mov
cmp
jmp
repz
xchg
js
cmp
inc
std
les
lahf
inc
mov
mov
mov
mov
pop
lahf
popa
es
push
push
push
xchg
mov
mov
push
test
pop
push
sbb
sbb
lcall
sbb
repnz
cmc
leave
call
push
push
es
add
aaa
xchg
mov
leave
pop
inc
lods
xor
ss
push
xchg
fldpi
loopne
push
add
pop
pop
push
sbb
lds
jle
cmp
adc
mov
mov
dec
cltd
mov
cmpsl
in
pop
push
loopne
xchg
int
repz
int
int
into
cwtl
xchg
incl
insl
xor
adc
pop
fwait
movsb
or
mov
and
pop
cwtl
orb
imul
jo
xor
incl
add
inc
add
cmc
fsubl
insb
dec
push
leave
cmpb
aaa
je
jg
jb
push
cs
or
pop
xor
xor
push
inc
lret
inc
fwait
add
push
dec
cli
test
shlb
leave
pop
mov
xchg
sbb
jl
lods
mov
imul
jg
sub
sbb
ret
imul
sub
mov
add
mov
push
inc
xor
les
adc
or
in
sbb
sub
mov
jge
pop
xor
cmpb
out
push
mov
ss
or
push
xorl
mov
sbb
stc
lods
and
sub
stos
leave
dec
decl
sub
pop
dec
inc
mov
push
aad
iret
xchg
jno
sbb
mov
loop
mov
sub
lds
xchg
sbb
dec
fimuls
add
inc
jns
lcall
sahf
daa
lds
push
adc
ja
fsub
xor
in
jle
mov
pop
push
adc
int3
xchg
stos
adc
cs
sahf
pop
mov
xorb
xlat
jns
sysexit
pop
dec
xlat
dec
mov
imull
cmp
cli
daa
xor
in
and
sbb
or
outsl
add
ss
lock
jp
mov
mov
ja
addr16
push
es
and
mov
inc
and
mov
out
stos
adc
jbe
sbb
adc
xlat
call
inc
icebp
sub
push
pusha
cmp
sub
pop
int3
mov
sub
popf
inc
std
mov
cmc
cmpsl
scas
push
in
and
enter
mov
add
fistl
jg
mov
aas
pop
nop
cmp
pop
enter
push
dec
mov
fwait
mov
repnz
push
outsl
aas
inc
xor
js
and
sub
lcall
xchg
nop
out
fstp
sub
add
inc
sbb
xchg
xchg
loope
addr16
xchg
add
and
repz
sub
cld
xchg
imul
add
shr
jmp
cmpsb
push
xchg
sar
loopne
xor
stos
jmp
rolb
mov
mov
stc
in
push
mov
push
scas
push
mov
cmp
xor
jno
lret
xchg
ret
imul
pop
ljmp
sub
xor
mov
scas
push
dec
jmp
mov
stos
fwait
xor
iret
lcall
mov
and
mov
push
in
pop
or
cmc
and
into
inc
pop
push
mov
jmp
outsl
push
imul
jl
jae
outsl
arpl
mov
sub
push
inc
loop
inc
dec
in
inc
ret
lea
in
std
sbb
push
std
scas
inc
jl
sub
jae
je
or
adc
pop
loop
dec
aad
jl
xor
shl
inc
cmp
inc
or
ret
sub
or
sub
int3
shlb
mov
out
in
jae
outsb
cmpsb
inc
push
or
shl
iret
adc
mov
xchg
or
hlt
lret
or
xchg
xchg
bound
imul
jge
pop
push
mov
mov
std
inc
fistps
push
jmp
sarb
mov
and
loopne
dec
jo
or
jmp
cmp
mov
xor
sbb
jmp
lcall
pmaxsw
xor
and
icebp
test
mov
in
cmc
sbb
out
mov
push
adc
inc
rcll
xchg
daa
mov
push
sub
scas
js
pop
inc
shll
sbb
test
arpl
push
cmp
out
adc
or
mov
inc
andl
clc
scas
push
or
in
cld
scas
scas
cltd
adc
arpl
fdivrl
sub
cmp
loop
in
mov
sbb
mov
mov
outsl
ret
and
stos
and
lahf
mov
push
fcomi
or
sbb
mov
jbe
ret
xor
push
lret
ljmp
xchg
mov
fstps
dec
xor
mov
ljmp
mov
lea
nop
xchg
cmp
imul
mov
push
inc
or
mov
sbb
mov
xchg
icebp
pop
enter
lods
jmp
fdivrl
sbb
dec
pop
dec
mov
xchg
xor
pop
mov
xchg
lret
mov
mov
aam
cmp
leave
xlat
notb
xchg
jnp
repz
xor
leave
xlat
ljmp
jmp
out
cmp
sbb
cwtl
and
push
mov
into
inc
movsl
cmp
divb
xchg
sub
xor
jno
mov
jmp
fistpll
mov
mov
mov
add
sbb
popa
fwait
aas
pop
or
jecxz
jl
test
or
cmp
or
lods
lret
loop
in
or
cmp
jnp
fcomi
xchg
sub
mov
rcrl
or
shll
adc
mov
push
call
mov
out
push
fidivrs
adc
jle
lock
push
fs
cmp
repnz
sti
or
fs
xor
repz
cmpl
mov
mov
sbb
inc
sbb
jge
cmpsb
push
mov
into
faddl
cmpsb
jl
adc
push
popa
mov
ljmp
add
test
xchg
push
ficoms
sti
cld
cmp
xor
xchg
push
inc
sbb
ffree
jo
pop
jns
lods
cmp
js
sub
or
cmovne
ret
xlat
test
loopne
rcll
movsl
sub
addl
mov
xor
pop
lcall
cld
movsl
add
test
out
dec
mov
enter
and
push
sti
cmp
pop
fs
mov
cwtl
jmp
xor
insl
sti
movsl
inc
xor
or
shlb
add
jge
out
lods
pusha
ret
dec
aad
pop
test
dec
push
xor
addr16
push
xchg
jmp
xchg
aad
push
filds
cmp
dec
cmpsl
sbbb
out
test
cmpb
pop
jae
add
popa
pushf
xchg
arpl
insb
loop
repnz
into
adc
mov
mov
mov
inc
vfrczss
jp
and
jno
scas
pop
cli
nop
in
inc
imul
test
inc
cmp
sbb
hlt
int3
inc
lods
push
pushf
and
mov
add
scas
dec
jle
adc
lahf
mov
mov
testb
jb
shr
lret
fldl
add
mov
sbb
fimull
jmp
cmpsb
inc
sbb
stos
sub
ds
lea
int
xchg
sti
xchg
pop
xor
iret
or
shrl
fs
movsb
aad
imul
rorl
cwtl
repz
lock
xchg
ret
out
out
push
push
xchg
mov
lock
test
adc
mov
xor
mov
loope
rcl
stos
fisubrl
adc
xor
inc
shll
repz
push
xchg
mov
inc
stc
in
ret
lahf
scas
jg
xchg
push
pop
cmc
hlt
sub
std
xchg
imul
leave
ficoml
iret
xor
add
mov
jne
cmp
and
jne
adc
rcr
shl
mov
daa
pop
hlt
push
adc
sub
pop
push
add
les
xor
popa
test
jo
mov
test
mov
lea
sub
jnp
mov
loop
mov
fsubl
pushl
rorb
pop
stos
add
lret
pop
xchg
and
sub
cmp
enter
stos
sbb
in
push
cmp
mov
push
std
stos
cli
cmpsb
push
inc
mov
call
mov
fwait
lods
adc
cltd
xor
xor
gs
mov
int
add
imul
jne
cmp
jbe
inc
mov
cli
add
mov
xchg
fisubs
mov
xor
shll
push
inc
dec
and
out
inc
push
mov
ret
sti
push
enter
in
pop
stc
lock
outsb
inc
inc
lret
fs
sub
and
lea
dec
lods
movsb
pop
cmp
pop
xchg
ret
sub
inc
fisubrl
arpl
fbstp
icebp
adc
hlt
lods
sbb
test
xor
lock
cmp
adc
lock
rcl
mov
pop
add
fbstp
aas
push
xchg
mov
inc
pop
xor
subb
and
bound
orb
mov
xor
xchg
xor
les
ret
xchg
rcrl
or
insb
cmp
pop
jp
shrb
andb
mov
mov
xchg
inc
in
js
mov
js
push
xchg
out
adc
push
dec
call
mov
nop
ss
mov
mov
fdivr
inc
mov
das
mov
out
dec
aad
jle
loop
dec
scas
or
clc
fiadds
sbbb
cli
roll
mov
and
sub
pop
lret
ds
int
cltd
add
stos
add
shlb
add
or
fnstcw
add
or
push
in
xchg
dec
sbb
xchg
popa
adc
dec
out
insl
lret
sbb
sbb
inc
adc
pop
shll
ret
lods
push
test
movsl
xchg
or
adc
test
jno
adc
pop
dec
bound
adc
push
lea
sub
sub
cmovns
xor
inc
inc
iret
dec
fyl2x
insb
and
mov
sti
jae
cmp
fidivl
frstor
lcall
xlat
rolb
jmp
mov
imul
mov
popf
inc
popf
and
les
pop
ds
mov
mov
sub
xchg
vpshuflw
mov
inc
ds
push
inc
cwtl
icebp
shll
leave
dec
divl
cmp
cmpsl
stc
push
mov
fcmove
test
adc
mov
dec
icebp
inc
ficoml
inc
sub
pushf
sarl
mov
ret
cmp
testl
adc
ds
mov
sbb
xchg
repz
lcall
xor
out
std
test
fsubrs
jbe
pushl
enter
xor
jecxz
and
push
or
std
rcrl
xchg
insb
lods
mov
data16
jno
mov
aad
test
insl
xchg
adc
inc
inc
jp
cmc
mov
mov
inc
or
pop
dec
sbb
mov
fwait
pusha
ss
dec
mov
enter
push
mov
loopne
xchg
lock
push
in
mov
test
int
mov
popa
push
sub
lods
cmc
icebp
js
dec
and
jmp
js
and
shl
xlat
sub
insl
out
sub
subl
pop
movsb
stos
or
jge
add
ret
mov
pop
fwait
cmp
cs
jbe
mov
cmp
daa
cld
pop
and
jbe
add
xor
psrad
xchg
cmp
jo
adc
ficoms
xor
adc
dec
jmp
or
daa
in
jp
add
add
test
and
std
pop
sub
dec
cmp
hlt
or
dec
bound
test
test
mov
or
xchg
movsl
ljmp
popf
lret
sub
out
mov
fcmovu
sub
mov
enter
lcall
std
pop
mov
lods
add
cmp
lahf
push
push
lods
add
repz
mov
iret
lds
fucomi
sbb
or
jne
jnp
mov
in
mov
dec
sbb
jmp
cltd
inc
inc
popa
adc
xchg
jo
and
pop
mov
pop
inc
jg
out
imul
stc
fmul
sbb
cmp
mov
popa
add
ds
sarl
outsb
or
jmp
int3
xchg
popf
outsb
pop
mov
ror
pusha
cbtw
mov
cmp
dec
jge
or
lcall
mov
pop
in
adc
inc
cmp
nop
cmp
pop
sahf
xchg
sbb
xchg
stc
inc
sub
dec
call
xchg
shrb
sbb
hlt
shrb
or
cmpsb
or
mov
leave
sub
xchg
jo
loope
enter
push
call
fildll
bound
ficoms
sbb
test
jnp
pop
pop
addl
pusha
or
dec
xchg
xor
ffreep
insl
push
sbb
inc
push
pop
lods
jecxz
loope
sub
lods
or
pushf
jo
fwait
pop
xchg
xor
pop
testl
jnp
dec
lret
adc
xchg
int
jo
fstps
test
jg
mov
daa
cmp
pop
or
test
inc
sbb
test
cld
sarl
loopne
xor
xor
sbb
insl
in
lahf
enter
int
inc
mov
mov
fmull
push
data16
pop
mov
fisttpl
pop
lds
stos
in
loopne
xchg
push
push
fld
jmp
mov
and
lret
add
out
lds
mov
and
cli
jmp
adc
aas
pop
mov
frstor
push
pushf
lods
dec
and
xor
push
addr16
sbb
bound
das
nop
lahf
jle
sub
cmp
ss
jp
insb
cvtps2pd
clc
dec
jae
in
sub
fsubr
adc
mov
inc
or
push
clc
out
orl
scas
stos
mov
sub
cmp
idivl
cmpl
loope
sbb
mov
mov
push
pop
outsl
out
popf
xrelease
fbstp
mov
ds
lret
in
jnp
xor
stc
popa
arpl
int
std
mov
and
xchg
adc
dec
push
rcll
cltd
cmp
ret
cmpsl
ficoml
push
mov
jo
dec
call
outsl
pushl
and
shr
aas
mov
in
or
shll
fisubl
orl
pop
jmp
inc
repz
andb
daa
mov
jp
sub
popa
mov
inc
push
add
cmp
loopne,pn
out
inc
fcoml
jnp
cmp
in
dec
daa
ljmp
imul
pusha
movsl
jo
loopne
pop
rcrb
repz
push
or
jecxz
int
add
leave
jp
stos
jge
cmp
xlat
push
lret
fsubrp
imul
idivb
cmp
dec
jp
std
loop
das
es
pushf
or
add
test
xchg
mov
dec
push
inc
pop
repnz
adc
icebp
pusha
sahf
pushf
inc
dec
mov
pusha
fimuls
sbb
push
cmpb
sub
xchg
bnd
cmc
jns
jmp
in
lcall
mov
div
inc
mov
cmp
in
jb
popa
ds
mov
adc
mov
add
mov
xor
cmp
jno
jno
xchg
in
pop
sbb
sbb
jns
repz
mov
and
inc
ds
xor
inc
push
in
in
pushf
xchg
movl
mov
ljmp
jle
sbb
inc
add
push
mov
dec
dec
das
sbb
lods
mov
mov
lahf
jp
ds
sbb
or
cmpsl
xor
outsl
mov
and
les
cltd
mov
ret
clc
mov
jo
popa
lahf
sbb
inc
out
shll
test
aam
jg
jb
cmpsl
pop
push
sub
aaa
lret
mov
xlat
push
xchg
mov
xchg
in
fimuls
cmpsb
rol
int
cmp
or
into
cli
ljmp
mov
movsb
mov
jecxz
add
jle
mov
les
push
outsl
orl
ljmpw
inc
test
sub
test
jecxz
dec
mov
fs
jo
mov
leave
fsubl
rorb
int3
fs
jecxz
add
mov
add
sbb
add
adc
lret
bound
jb
fidivrl
daa
stc
je
roll
iret
lods
push
ja
loop
or
gs
sub
nop
mov
mov
pushl
mov
xor
movzwl
and
sub
aaa
test
jne
xchg
mull
inc
pop
mov
andb
and
out
jge
mov
xchg
popa
or
into
mov
pause
imul
xchg
outsl
mov
jns
inc
lea
mov
outsl
and
call
ds
out
jb
clc
sub
pop
pop
std
mov
in
adc
addl
mov
jl
sub
filds
jo
cmp
movsb
adc
pop
add
mov
ret
mov
out
add
ljmp
out
in
leave
inc
std
sbb
pop
mov
int
aas
das
stos
xor
fwait
dec
enter
jae
adc
aas
mov
rcr
bound
ss
ret
mov
and
jge
stos
sbb
add
icebp
sahf
xchg
mov
cmp
mov
dec
gs
push
sub
imul
mov
jmp
fimuls
into
pop
and
cs
pop
push
xchg
dec
nop
mulb
ljmp
sti
xor
inc
jne
mov
mov
mov
cmp
xchg
xor
ds
rcll
faddl
push
adc
insl
dec
adc
fcomip
call
iret
aam
xor
jne
repnz
sbb
push
pop
into
outsl
repz
test
and
add
ja
dec
repz
loop
pop
fmul
jbe
mov
addr16
insl
ja
dec
mov
sub
sbb
lea
xchg
pushf
std
xchg
aam
and
fsub
mov
inc
lea
add
mov
mov
push
sbb
lea
stos
movsb
addb
jns
test
dec
into
incl
shll
pop
lahf
and
or
xor
scas
addr16
jns
cmp
inc
movsl
mov
stos
pop
mov
popf
mov
inc
xchg
pop
push
int3
fiadds
mov
aas
or
inc
inc
bnd
rclb
inc
outsl
mov
mov
add
enter
ds
aaa
aas
pop
jbe
mov
pop
mov
rorb
sbb
stos
inc
imul
xchg
xchg
push
in
add
setge
adc
push
push
or
adc
dec
pop
jmp
fstpt
fmull
rcll
sbb
cmp
cmp
cli
jp,pt
cmp
outsb
and
or
sub
movsl
lods
xchg
pop
mov
les
add
outsl
std
and
inc
rcrb
or
push
mov
cmpsl
addr16
es
adc
iret
mov
insb
stos
outsb
daa
jbe
mov
mov
xchg
add
jne
jg
sub
cmp
adc
mov
mov
insb
xchg
test
insl
iret
push
lret
icebp
into
mov
aas
inc
movsl
pusha
shrl
sub
xchg
cld
mov
push
scas
or
sbbl
mov
push
push
inc
lods
je
outsl
add
mov
fsubp
dec
div
jno
sbb
shrl
pop
mov
adc
es
or
fs
or
add
imul
ror
inc
sbb
lea
out
cltd
outsb
jb
cld
movsb
fsts
mov
in
popa
insl
inc
xchg
cmp
add
in
push
pusha
repnz
adc
jae
icebp
mov
ficoml
cmp
icebp
gs
movsb
xchg
imul
aam
dec
je
cltd
cmp
sbb
outsl
roll
push
or
cmp
cmp
jge
ret
pop
add
test
sar
or
mov
leave
cli
or
and
mov
xor
ds
and
roll
pop
out
jns
cmpsl
in
andb
sbb
or
sub
outsl
imul
pushf
stos
ss
jmp
lods
adc
jae
std
rorl
aas
jo
test
fcmovnbe
lds
mov
enter
mov
sbb
sbb
sbb
xor
push
mov
cs
jb
pushf
mov
push
jg
imull
cmp
inc
and
js
ret
sub
sub
cmc
fistl
cmpsb
or
es
pop
sbb
mov
ss
xchg
int3
jg
in
movsb
fists
out
sub
insl
mov
cmp
bound
push
int
iret
push
xor
addl
or
push
push
mov
mov
push
xor
lods
or
lds
mov
cmc
push
xchg
mov
inc
push
gs
jge
cmp
jae
ret
cmp
cmp
sbb
dec
lahf
dec
or
mov
addps
jg
movsb
xchg
shl
xchg
jo
add
xor
pop
call
subl
push
pop
mov
aas
inc
shr
sahf
inc
fldcw
push
test
xchg
orl
xchg
mov
das
xchg
mov
mov
push
lret
out
cmpsb
push
lahf
mov
loop
int
fwait
es
push
xor
ds
ljmp
sub
inc
mov
ja
and
jle
inc
jno
leave
cld
out
addr16
stc
mov
pop
bound
in
push
jns
inc
sbb
loope
push
pushw
pop
dec
xchg
and
je
clc
adc
jg
dec
inc
mov
inc
shll
or
add
cvtps2pi
xchg
rol
sbbb
movsb
data16
push
in
insl
sbb
rcrl
cwtl
xchg
xor
testb
sub
adc
lcall
jg
lods
jno
shrb
mov
or
in
repz
sub
xor
test
jno
push
push
or
pop
dec
stos
leave
data16
sahf
neg
dec
es
int
ret
lret
out
aam
ret
push
rolb
add
jne
iret
xchg
stos
sub
jo
out
xor
mov
jb
mov
std
dec
fmul
push
push
loope
sub
pop
mov
mov
jae
sub
ret
cmp
cmp
gs
jl
push
pop
mov
xchg
cmp
std
push
mov
out
in
xchg
data16
movsb
mov
sbb
stos
cmp
jns
popa
xchg
jecxz
adc
insl
mov
inc
and
std
xchg
and
or
aam
cmp
sub
sub
dec
out
call
dec
mov
mov
add
add
outsb
mov
enter
lahf
inc
lret
cld
pop
inc
cmp
add
fmul
cmpsl
in
add
add
popa
adc
xchg
lock
sbb
lods
lods
pusha
push
shll
pop
xor
movsb
mov
dec
enter
repz
adc
cltd
jb
xchg
rolb
mov
int3
inc
inc
push
cmp
data16
push
xor
sbb
lock
fcomi
add
and
repnz
bnd
negb
or
cmp
pusha
or
movsb
pop
inc
out
and
or
int
pushl
daa
push
lahf
outsb
data16
inc
mov
leave
mov
cmpsb
push
pop
cld
bound
push
into
adc
jo
popf
mov
add
or
add
imulb
and
lret
nop
dec
cmpsl
cmp
in
lds
pop
iret
push
adc
int
jecxz
std
mov
sahf
xchg
pop
in
inc
and
mov
mov
out
cltd
inc
fcmovne
push
adc
push
pop
lods
cmpsb
pop
sbb
rcrb
sahf
test
pushf
jg
lret
push
fcompl
loope
int3
sub
imul
addr16
rcrl
out
fcomps
sti
or
in
xor
loope
adc
mov
jmp
addb
stos
pop
imul
stos
adc
dec
jae
cmp
dec
pop
fnstenv
lock
into
aas
dec
hlt
and
and
add
mov
push
cmp
mov
rcll
fisubl
cmp
xor
cmp
imul
aas
out
in
addr16
push
dec
push
or
cmp
jmp
lods
in
jge
push
jle
dec
icebp
mov
sbb
xchg
test
lods
ret
int
jp
pop
mov
push
or
pushl
stc
mov
lock
adc
and
imul
mov
ljmp
jg
and
sarb
and
mov
nop
loopne
inc
dec
pusha
lock
xorl
xor
push
stc
orb
in
icebp
add
jmp
cmp
test
push
jmp
out
cltd
mov
test
fs
lds
out
lahf
lret
movsl
insb
fisttpll
sub
and
adc
xchg
clc
adc
nop
mov
ret
mov
dec
mov
into
adc
or
push
sub
xor
add
lahf
int3
dec
xchg
mov
je
jle
jnp
mov
stos
fsubl
jnp
lea
sub
xor
imul
je
scas
test
lcall
xor
adc
sbb
mov
rorl
mov
push
repz
push
push
es
or
xor
cwtl
push
pop
mov
es
or
out
je
sub
cs
mov
shll
mov
add
mov
or
or
lret
movsb
and
inc
dec
mov
aad
cwtl
jae
in
imulb
int
pushf
rclb
dec
xor
fnstcw
mov
clc
mov
sahf
imul
rcrb
mov
pop
shrb
or
push
push
adc
mov
aam
stos
pop
rcll
clc
mov
repz
or
or
filds
bound
call
scas
sti
sbb
push
nop
dec
mov
push
cmp
std
cmp
mov
fisttpll
push
and
adc
out
inc
fldenv
bswap
in
lahf
sub
jle
pop
push
lea
push
in
push
sbb
dec
outsl
lret
mov
js
xchg
pop
lea
mov
cltd
jns
and
push
scas
scas
adc
rolb
dec
arpl
add
ret
or
jo
outsl
mov
xchg
adc
jae
xchg
fdivrs
cmpsl
xchg
ret
add
fcomps
pop
xor
xchg
jb
sbb
andl
js
sbb
dec
push
jae
decb
and
cmp
cmp
test
mov
push
dec
mov
and
loope
fnstsw
repnz
shr
sbb
mov
mov
and
clc
lds
fidivrl
adc
or
es
fisttpl
xor
xorl
mov
mov
and
fldenv
jg
mov
lahf
push
inc
cmp
dec
cmp
fidivrl
push
mov
call
lret
push
pop
in
sub
xchg
test
outsl
bound
jns
fcoml
addps
mov
shlb
fnsetpm(287
and
jmp
xor
test
adc
mov
pop
inc
pop
mov
std
scas
cmp
sub
jecxz
stos
cmp
clc
je
cmp
xchg
ror
cmp
subb
ret
and
jle
cmp
cmp
clc
mov
lret
jne
sbb
fistpl
pop
inc
repnz
je
cmp
lret
rcll
xlat
and
mov
inc
adcb
push
jb
jecxz
out
orb
mov
or
or
jnp
clc
scas
mov
add
add
cmp
insl
in
test
ljmp
loope
push
pop
das
scas
cmp
push
cmc
jo
inc
add
mov
das
test
cmp
imul
les
xchg
lret
pop
lods
mov
movsb
ret
pop
or
sub
jle
into
lods
push
ds
sbb
testl
clc
dec
mov
mov
sub
push
inc
or
pop
cli
shrl
and
in
add
xchg
in
mov
daa
fadds
xchg
pop
andl
call
sbb
xchg
cwtl
mov
repz
add
xor
sbb
add
pushf
sarl
cmpl
loopne
stos
stc
sub
ret
mov
aad
mov
shll
xchg
xlat
jne
xor
dec
jge
out
mov
sub
add
lods
arpl
sbb
pop
fbstp
leave
and
xchg
mov
fidivl
addl
lret
int3
incl
imul
push
dec
rol
or
xchg
cmpsb
stos
or
xchg
lods
cltd
sahf
scas
ljmp
sti
enter
in
wbinvd
stos
in
and
sbb
cmp
cmp
xor
sub
add
arpl
into
dec
aad
loopne
mov
mov
mov
inc
pop
mov
inc
out
jb
insb
cmpsb
cltd
lret
inc
cli
cmp
jmp
pop
xor
test
jg
stc
push
sub
mov
dec
sub
cmpsl
pop
loopne
cltd
mov
les
popa
or
ss
adc
sarb
mov
xchg
dec
loope
pusha
cltd
dec
dec
rolb
aad
test
mov
shlb
lea
dec
out
aaa
xchg
je
mov
aas
in
mov
xor
pop
add
cwtl
in
sub
fisttpll
lahf
call
mov
mov
jecxz
int
mov
add
mov
sub
sub
outsl
xor
dec
xor
aaa
sbb
imul
pop
mov
push
cmpb
inc
ss
dec
fsubrl
aam
sbb
and
xlat
clc
push
push
jl
or
add
loope
dec
xor
sub
iret
add
int
sbb
lret
mov
movsl
daa
jnp
cmp
dec
jg
push
fiadds
cmp
push
popf
jl
mov
dec
dec
push
fisubl
fsubrs
daa
mov
push
and
mov
mov
cmpsb
ljmp
shrl
roll
daa
cli
movsb
dec
pop
jmp
cmp
sub
xor
mov
loope
aam
sbb
js
jb
test
fdivp
xchg
mov
xchg
insb
adc
jmp
push
xorl
mov
sbb
es
push
in
movsb
sbb
push
or
jns
adc
je
mov
arpl
pushf
inc
fst
mov
push
inc
jns
and
out
jbe
dec
or
xchg
mov
imul
es
or
xor
out
mov
sub
in
mov
iret
push
mov
inc
ret
icebp
minps
mov
xchg
push
cltd
insb
cwtl
hlt
mov
sub
aaa
test
jle
mov
mov
pop
jp
mov
add
mov
xor
iret
cmpb
inc
jns
aas
adc
call
mov
sub
cmp
test
jecxz
movsb
je
out
pop
pop
xchg
mov
clc
or
int
divb
add
les
xchg
hlt
mov
mov
sub
les
je
or
adc
daa
into
sbb
cmc
and
jge
add
mov
xor
nop
in
into
pop
nop
push
sbb
xchg
jmp
jmp
or
jp
dec
jl
adc
jp
and
decb
sub
xchg
xor
adc
push
cmp
movsl
mov
pushf
adc
xorb
fmuls
pop
js
mov
cwtl
xor
bound
fld
dec
sbb
addr16
cltd
lods
add
das
imul
call
movsb
stos
je
daa
cltd
jmp
repz
mov
leave
mov
mov
repnz
cmp
push
add
xchg
inc
stc
cmp
sti
sti
fs
xor
mov
jo
mov
fucomi
sti
inc
mov
xchg
mov
mov
sahf
mov
test
lods
popf
cmp
jl
and
subb
inc
shlb
fs
push
iret
push
or
cmp
dec
mov
mov
xor
mov
loope
shrl
mov
add
cmp
fsubrl
cmp
xlat
sbb
mov
insb
xchg
sarl
inc
inc
add
dec
js
les
inc
addl
ja
mul
mov
jne
xor
nop
movsb
or
mov
mov
mov
push
xor
cmp
dec
xchg
test
cmp
mov
stos
dec
pop
xchg
adc
inc
pop
cld
push
pavgb
inc
jge
pusha
test
mov
mov
stos
ror
adc
mov
pop
test
cmp
cmpsb
mov
dec
bound
lahf
jnp
out
cmp
jno
cltd
xchg
pushl
jge
inc
fidivl
push
cmp
or
or
sbb
fdivrl
or
imulb
fnstcw
mov
or
and
jno
jge
mov
jbe
stos
sbb
push
mov
sub
xchg
lock
dec
pop
imul
sarl
pop
and
mov
outsb
sub
call
or
push
loope
inc
and
xchg
mov
ret
add
rclb
lret
sbb
outsl
or
mov
xchg
std
js
fbstp
mov
repnz
cmp
test
dec
fnstsw
lahf
insb
popf
add
fmull
xor
fisttpll
daa
sbb
cs
cs
in
mov
xchg
adc
sub
push
xor
add
and
and
stc
imul
mov
imul
pop
dec
pop
sub
and
popf
stos
std
pop
test
test
jle
and
lret
mov
xor
cmp
mov
test
inc
fdivs
scas
cmc
fdivrl
sbb
fs
outsl
xor
pop
inc
fisubl
mov
popa
out
cmp
mov
or
sub
jb
mov
and
add
add
repnz
xchg
push
push
popf
cmp
mov
xchg
add
push
lcall
push
or
mov
xchg
imul
js
sahf
pusha
xor
in
sarl
and
fsubl
xchg
adc
fbld
add
or
fimull
cmp
inc
pop
jb,pt
mov
lea
test
stos
jg,pn
mov
daa
dec
or
das
fldt
ret
ja
imul
dec
stos
push
pop
mov
sahf
fidivrs
jb
xchg
gs
pop
mov
not
lea
dec
in
mov
icebp
mov
stc
or
fcoml
fisubrs
lret
push
cmovl
std
or
test
ja
sarl
push
sub
shll
and
inc
sub
jae
into
das
faddl
jne
ret
loope
push
jg
mov
enter
jo
mov
inc
mov
daa
cld
dec
aas
jo
hlt
add
and
sbb
mov
ret
or
and
jbe
outsl
les
sub
sbb
dec
adc
fiaddl
mov
adcl
push
jno
icebp
lcall
xor
ficoml
cli
mov
sub
lcall
aaa
dec
shr
mov
js
xchg
pop
jo
popa
jle
in
add
es
lcall
aas
or
fldl
gs
mov
pop
jl
inc
pop
push
popf
stos
aas
mov
xor
dec
sbbb
repnz
mov
aam
sub
adc
mov
cli
hlt
or
das
fstpt
xchg
cmp
lahf
jmp
push
setns
sbb
nop
dec
addl
aas
inc
xlat
or
daa
cmp
and
lea
push
jle
push
push
push
bound
ja
adc
sub
cld
mov
addl
jmp
adc
inc
cmpsl
or
inc
mov
into
cmp
test
sub
outsb
jl
cmp
testl
and
ftst
mov
mov
dec
pop
cmp
xor
push
jb
jp
push
pop
lods
adc
push
inc
sbb
xchg
pop
and
mov
pushf
cmp
and
in
inc
mov
push
into
in
pop
orl
pop
and
xor
xchg
lods
insl
mov
sahf
insb
inc
push
ret
shlb
mov
iret
icebp
sbb
aad
mov
jae
stc
push
fcoml
dec
dec
into
lock
addr16
and
aas
and
xchg
es
jmp
and
mov
inc
out
lods
daa
ret
in
dec
int
add
xor
popf
stos
stc
and
ror
jecxz
cld
mov
aaa
aad
inc
or
inc
xor
jg
loopne
mov
sbb
pop
lods
loope
imul
cmp
mov
lods
jle
adcl
push
imul
mov
add
push
es
mov
aas
movl
ja
and
stc
jne
mov
cmpsl
cltd
mov
decb
sub
cmp
mov
into
outsl
mov
dec
inc
mov
icebp
pushl
push
xorb
cmp
and
sti
adc
fucomip
not
cli
mov
repz
test
xor
jg
dec
fisubl
rcrb
dec
adc
subl
mov
shrl
inc
test
push
mull
fs
jg
or
adc
jnp
lret
rolb
lahf
adc
dec
mov
xor
addr16
loopne
adc
cmp
rcrl
loope
lock
mov
cli
inc
mov
pop
rol
pop
icebp
cwtl
xchg
dec
cltd
ret
inc
lea
les
call
jecxz
hlt
mov
in
and
cld
cmp
scas
xchg
jbe
or
mov
sahf
mov
jno
in
push
cmpsb
jle
inc
mov
outsl
scas
shl
rclb
and
arpl
cmpsb
push
shll
pop
dec
push
and
mov
pusha
sbb
popa
lea
sub
add
mov
or
testl
push
iret
push
insl
cmpsl
push
jnp
mov
xlat
movl
shll
fadds
out
pop
mov
popl
sahf
lahf
pop
outsl
jno
sbb
mov
stc
push
mov
int
sahf
popa
ja
inc
jnp
push
sub
mov
push
push
mov
xchg
push
int
gs
push
dec
add
dec
int
jb
jmp
clc
shlb
orl
adc
int
mov
in
test
xor
pop
push
cltd
mov
jno
add
pop
mov
fistl
mov
andb
cwtl
repz
cmc
fmuls
push
jae
jnp
mov
push
sbb
cmp
mov
push
into
pop
and
repz
jmp
call
lock
dec
icebp
aaa
sti
and
xor
push
mov
ret
sbb
add
dec
pop
repz
sahf
jecxz
test
push
cmpsl
push
xchg
outsb
int
sbb
jno
lret
popf
add
inc
fists
inc
inc
repz
sub
repz
out
xor
inc
cs
icebp
je
repnz
fwait
arpl
add
arpl
jl
xchg
loopne
or
mov
imul
test
or
and
xor
cltd
out
les
adc
jl
mov
daa
repnz
sbb
pop
push
cmp
or
sahf
dec
pop
mov
jbe
mov
arpl
jge
and
aaa
in
mov
adc
fmull
inc
jno
not
mov
mov
dec
xchg
or
mov
xor
xor
pop
clc
lret
sbb
xchg
add
out
jp
adc
stc
cmp
mov
push
lret
aad
movsl
out
dec
adc
test
fldl
leave
pop
popa
ja
jl
lahf
xchg
sti
outsl
jle
pusha
fs
test
fistpll
pop
nop
sbb
es
push
mov
dec
add
mov
roll
sub
inc
sub
push
fsubr
pop
rcrb
adc
xor
rol
adc
test
data16
and
push
add
clc
jmp
jno
sbb
outsb
jno
fnstsw
jg
add
in
push
leave
add
aaa
xlat
push
mov
mov
or
and
pop
daa
cld
adc
les
mov
adc
mov
movsl
sub
inc
sub
cmp
js
mov
das
xlat
das
push
pop
outsl
mov
js
test
inc
imul
out
sub
sub
aaa
mov
scas
pop
loopne
jmp
shlb
jmp
leave
cmp
push
push
xchg
push
adc
adc
pop
and
adc
in
sbb
and
cltd
or
add
mov
sub
xor
stc
adc
cmp
out
adc
int
jp
add
sbb
jns
insb
data16
and
fiadds
pop
pop
out
in
sar
xor
jmp
jmp
add
sbb
jmp
rcl
push
stos
fsubs
mov
sbb
or
dec
xchg
jnp
jno
lcall
and
into
sti
cwtl
add
or
outsb
ds
filds
jl
int
sahf
push
cmpsl
popf
jo
inc
test
jg
repz
or
sub
mov
cmpsb
and
les
sarl
loopne
push
mov
pop
fidivrs
push
or
lods
nop
add
iret
out
xchg
cmpsb
cmp
ficomps
jnp
add
inc
adc
hlt
imul
fnstcw
push
adc
inc
fsubrp
clc
lahf
cmovns
inc
lods
mov
pop
into
pop
cs
and
and
xor
pop
pop
hlt
inc
or
cmc
and
pop
and
lret
int3
outsb
cltd
cmp
mov
in
lods
cmp
sti
adc
inc
jmp
fsub
daa
dec
inc
cmpsb
inc
inc
cmp
gs
add
inc
out
mov
ret
sub
ret
jge
imul
mov
jg
cmp
gs
cltd
dec
fstps
ds
jl
and
daa
xor
or
out
movsb
dec
std
mov
inc
lods
addr16
push
xchg
pop
arpl
jge
out
mov
mov
das
stos
xchg
jg
rolb
add
cmp
leave
jo
xchg
jp
cmp
xor
int
or
idivl
je
cmp
orl
sbb
loopnew
repz
repz
sub
adc
xchg
sbb
aad
test
ljmp
imul
fdivs
iret
add
inc
sti
call
cli
arpl
maskmovq
notl
shl
jmp
mov
pop
mov
mov
sahf
add
aad
leave
int3
and
pop
in
fdivr
cli
pop
add
xlat
movsb
inc
sbb
out
dec
cltd
data16
sub
repz
mov
inc
mov
dec
lea
dec
gs
mov
adc
push
mov
flds
pop
mov
int
imul
mov
sbb
lahf
push
stos
ja
add
sahf
repnz
cld
rcll
das
pop
mov
xchg
std
cmp
repnz
cmp
fwait
arpl
icebp
sub
pushaw
mov
iret
push
mov
xor
cmpsl
movsl
mov
test
ljmp
mull
nop
sub
lcall
jmp
jecxz
in
mov
jne
pop
movsb
test
or
xchg
ret
mov
sub
loop
shl
push
jle
sbb
jp
dec
leave
mov
push
xor
xlat
mov
mov
jmp
cs
lds
push
or
int
fisubs
adc
xchg
pushf
push
cmp
lds
pusha
fld
jae,pn
push
test
xchg
clc
fwait
aam
pop
dec
mov
repz
sarl
pop
add
sub
rsqrtps
dec
cld
pusha
or
test
nop
push
nop
add
inc
fidivrl
sbb
lea
in
filds
rcl
cli
and
in
xchg
add
scas
les
xor
mov
stos
mov
aam
push
cli
push
mov
imul
loop
inc
pop
add
stc
mov
lock
scas
addl
push
fucomp
repnz
imul
shll
pushf
fistpll
lahf
xchg
repnz
push
mov
sbb
add
sti
cmpsb
fwait
ret
ror
sbb
popf
cli
into
mov
gs
sbb
and
push
pop
int3
ret
add
fcmovb
sahf
and
xor
push
inc
test
pop
dec
cli
test
cli
pop
push
mov
out
pop
loop
das
div
push
mov
adc
outsb
push
inc
rcrb
mov
es
xor
daa
mov
sti
xor
fdiv
jecxz
stc
fsub
or
testb
lahf
sub
inc
cwtl
xor
cwtl
sahf
and
in
mov
xor
aad
xchg
cwtl
cmp
lds
cltd
xor
mov
and
cmp
xchg
loop
das
in
jo
gs
fnstenv
mov
and
ja
arpl
sbb
cmp
or
test
sbb
mov
push
in
cmc
mov
bound
or
pop
int3
mov
incl
sahf
mov
sbb
push
mov
fldenv
jmp
mov
imul
inc
and
inc
inc
jmp
and
test
sub
jbe
movsb
mov
nop
or
push
dec
fmul
xor
mov
xor
arpl
jecxz
daa
pop
cmc
add
mov
xchg
bound
sbb
cwtl
push
insl
cltd
aaa
push
clc
inc
das
cmpsl
push
js
sub
mov
mov
push
nop
jbe
mov
mov
dec
or
mov
ljmp
icebp
add
push
sti
pop
aas
les
out
test
xor
jle
mov
pop
lods
jnp
xor
addl
xor
sub
mov
scas
out
stos
mov
sbbb
xor
xchg
sub
push
movl
inc
outsl
jbe
ret
pop
mov
test
movsb
int3
add
xchg
loop
sub
dec
test
dec
or
fs
jmp
fs
out
fdivrs
pop
push
inc
mov
xor
xchg
imulb
adc
mov
dec
inc
jnp
push
ret
sti
xchg
dec
mov
jl
mov
test
outsb
lret
cld
imul
or
arpl
addr16
int3
dec
add
add
jle
xor
push
inc
popf
push
inc
stos
rolb
fwait
es
mov
dec
dec
fnstsw
jecxz
call
mov
mov
imul
ds
leave
xchg
push
inc
je
xlat
push
shl
clc
adc
fnsave
imul
xor
xchg
lds
xor
sub
xchg
cmp
cmp
dec
push
stos
or
lret
lcall
cmpsl
add
adc
and
rcll
mov
popf
stos
push
cmp
cltd
ret
pop
out
jmp
and
insl
pop
cmp
mov
shl
mov
mov
and
and
aam
insb
mov
outsb
mov
add
orl
push
notb
xchg
cmp
adc
xchg
dec
jbe
sub
add
sub
mov
gs
pop
push
jae
gs
sbb
cli
sbb
ret
sub
push
push
arpl
dec
mov
add
mov
jb
loopne
mov
dec
xchg
sti
dec
lock
cmp
jl
cld
lahf
add
and
cmpsl
pop
fidivs
lret
lock
xchg
int
mov
jecxz
mov
and
ret
jl
jge
fidivrl
push
loope
jne
jb
xor
mov
test
rcrl
test
xchg
mov
ja
cli
pusha
clc
and
daa
pop
sub
push
ds
rol
mov
push
fisubs
xor
sbb
ljmp
fisubl
dec
shrl
sub
lcall
notl
jecxz
ja
push
mov
fldt
cmp
pop
pop
test
std
fistpll
mov
and
das
pop
mov
shlb
out
cmp
xor
mov
in
pop
xor
out
dec
push
rclb
fidivl
les
loope
jb
adc
jbe
xchg
push
js
lods
ja
test
call
mov
arpl
push
fsincos
loop
int
pop
mov
jnp
neg
scas
mov
sub
xchg
and
sub
call
lds
sub
add
jne
rolb
rcrl
cld
push
mov
jmp
jmp
cmp
add
mov
aad
out
cs
repnz
nop
or
dec
sub
hlt
push
jnp
cs
insl
adc
and
jle
bound
sub
mov
in
out
pop
es
rcrb
push
jne
mov
adc
repz
mov
cli
xor
inc
pop
push
dec
lods
pop
adc
xchg
int
repnz
bound
xchg
push
cs
rol
jae
dec
inc
fs
dec
ds
mov
dec
adc
orb
dec
jmp
xchg
jge
lods
sahf
sysenter
pop
jns
and
fbld
sbb
enter
scas
push
repz
cmp
movsl
inc
dec
sbb
in
sub
mov
mov
imul
mov
mov
sub
jno
mov
inc
push
daa
icebp
repnz
fsubs
cmp
inc
aam
imul
jbe
xchg
pop
pop
or
sbb
and
leave
sbb
xchg
dec
xacquire
rcrl
lods
cs
mov
or
rclb
xorb
outsb
jp
stc
cmp
leave
lcall
mov
sti
outsb
scas
nop
mov
out
inc
pushf
testl
mov
pop
push
push
aam
fistl
xchg
lods
jnp
push
loop
lea
loope
out
xchg
push
mov
push
loopne
ret
lods
daa
xor
and
mov
pop
push
jb
cmp
sub
or
push
xchg
sub
xchg
arpl
jns
add
inc
mov
gs
cmp
movsl
push
addr16
mov
pop
aad
xchg
mov
outsl
pop
push
jne
mov
popf
xchg
inc
outsl
into
mov
ljmp
dec
and
cmp
enter
jmp
and
jbe
push
popf
pop
xchg
lret
cmp
loopne
popf
in
in
rcrl
daa
movsb
fbld
xchg
std
mov
incl
push
push
adc
add
lods
jb
or
fimuls
xor
mov
mov
jno
adcb
xchg
fistpll
mov
ret
push
insb
fdivrs
cld
out
and
fiaddl
fldcw
dec
call
lock
icebp
pushf
push
icebp
aad
mov
cmc
jg
in
outsl
pop
out
fs
or
ljmp
sbb
xchg
or
or
rcrl
or
inc
add
cmpsl
in
aaa
loope
fildl
mov
mulb
inc
or
add
addl
inc
sub
pop
fimuls
push
mov
ds
xchg
or
jge
pushw
fbstp
push
into
mov
outsb
icebp
lods
dec
adc
andb
push
push
jb
fwait
push
pop
xor
ss
xchg
add
das
les
lcall
and
jae,pt
jp
aad
add
lret
jle
sahf
push
roll
in
mov
lahf
and
adc
arpl
jb
jnp
push
ljmp
add
add
pop
fwait
mov
cs
mov
or
push
push
sbb
cmpsl
mov
je
test
repnz
push
loopne
imull
aaa
push
addr16
pop
sbb
add
sbb
into
or
cmp
icebp
lahf
and
mov
jnp
and
iret
outsb
add
jns
xchg
inc
jae
cmp
stos
jnp
fwait
cmpsb
leave
jp
pushl
js
andb
loop
mov
sbb
les
pop
pop
mov
and
aam
push
sub
xchg
dec
rolb
faddl
jbe
mov
dec
sbb
or
xchg
cmp
push
xor
sahf
sub
movsb
mov
arpl
scas
xor
xchg
je
adc
fwait
and
push
xchg
test
or
lret
xchg
aam
sahf
add
mov
sbb
les
cs
testb
jle
jp
enter
jmp
mov
cwtl
pusha
push
dec
call
sbb
adc
hlt
jo
sahf
pop
or
ds
stos
or
or
hlt
add
xchg
fcoms
dec
movsl
mulb
shlb
xchg
and
dec
lahf
jg
add
stc
cld
push
in
push
dec
pop
and
add
adc
mov
es
jnp
push
mov
imul
cmp
push
aaa
shrb
jle
pop
adc
push
shrb
mov
xchg
lahf
mov
adc
les
mov
shlb
dec
jns
xor
into
jbe
push
push
adc
cmc
test
mov
outsl
adc
sub
inc
pop
dec
adc
outsl
cld
call
movsl
hlt
das
cmp
or
dec
xchg
bound
fsts
mov
sbb
mov
int3
test
push
in
scas
and
and
push
push
rclb
jmp
mov
fnsave
call
mov
js
push
lahf
leave
xchg
push
mov
xchg
add
mov
loopne
int
jb
jo
xchg
shlb
ret
dec
dec
in
pop
aas
cmp
sub
jae
in
scas
sbbl
scas
bound
xor
ret
std
pop
sbb
nop
arpl
imulb
in
enter
sub
xchg
mov
add
outsb
dec
jae
loopne
add
out
xchg
or
mov
ds
fldcw
out
mov
jmp
and
idivl
mov
jg
pop
popf
xor
pop
mov
mov
xchg
mov
cwtl
cmp
cmp
mov
push
pusha
int3
leave
dec
test
sub
push
clc
fadds
pop
xor
sub
dec
add
gs
gs
hlt
push
jbe
test
push
push
enter
add
xor
xor
add
movsb
shlb
nop
adc
mov
or
into
xchg
push
fmull
jbe
cmpsl
in
add
fs
sub
mov
pop
push
jge
xor
sub
push
cmp
mov
enter
push
fcoms
xchg
cmpsb
pop
and
sti
sub
data16
in
xor
mov
dec
cld
clc
xor
call
iret
dec
sub
or
cmp
stos
xchg
cmp
das
add
pop
pop
orl
in
ficompl
xorl
ja
popl
sub
ret
lret
lds
add
in
sbb
in
mov
sti
and
iret
sarl
add
mov
es
mov
and
shll
sbb
mov
mov
test
into
lds
xor
xchg
test
scas
dec
jnp
xchg
imul
lods
movsl
std
xchg
push
dec
mov
add
dec
inc
add
imulb
nop
lret
fiaddl
xor
das
ror
sub
mov
test
loopne
pusha
mov
lahf
out
cltd
les
je
and
dec
and
mov
or
leave
adc
notl
dec
and
cmp
adc
les
pusha
lcall
aad
cwtl
icebp
test
je
int
cmpsl
adcb
repnz
pop
jmp
or
sub
fistl
cmp
sub
out
add
adc
loope
sub
ss
ret
inc
mov
mov
iret
repz
and
jo
nop
or
sub
xchg
call
cmc
mov
dec
dec
pop
cmp
jecxz
adc
cmpl
and
filds
in
add
and
stos
loopne
inc
out
ja
pushf
pushf
sbb
lds
fs
clc
dec
mov
test
sub
mov
jns
sbb
push
mov
add
cli
arpl
mov
std
test
stos
test
dec
jmp
pop
xchg
mov
mov
test
icebp
xor
sub
mov
scas
mov
lea
decl
or
jmp
test
leave
or
fbld
push
je
sub
sahf
dec
subl
leave
fidivrl
adcl
shll
jne
nop
inc
test
scas
jb
pop
les
xorl
jo
loop
jnp
xchg
adc
orb
cwtl
dec
lock
cmp
adc
aad
out
or
les
int3
or
ret
adc
sbb
sarb
mov
push
insl
mov
ja
pop
xor
mov
inc
or
jmp
and
cmc
or
pslld
cltd
sbb
mov
andl
xor
rcll
push
out
lahf
or
call
add
mov
test
jnp
popf
leave
ljmp
movsb
pop
mov
bound
cmp
aam
jae
adc
cmpsl
sbbb
scas
inc
jmp
mulb
sub
push
jmp
mov
bound
ss
add
out
enter
stos
jb
or
and
mov
adc
je
add
aad
or
push
adc
mov
adc
mov
pop
or
loop
adc
jae
mov
xor
in
mov
jno
int3
in
repz
push
andnps
call
rcll
or
cwtl
cmp
lret
mov
std
jg
mov
or
adcb
mov
sub
frstor
jb
xor
arpl
ljmp
pop
dec
addl
dec
cmc
in
addr16
push
push
xchg
fs
jg
lods
push
stos
enter
adc
lds
pushf
mov
mov
sub
jns
sahf
test
adc
and
iret
sub
and
sub
inc
pop
ja
orl
arpl
xor
jb
or
scas
addr16
sub
lock
add
fmul
leave
sbb
mov
sub
into
fstps
push
icebp
sub
cmp
add
stc
sub
mov
inc
adc
adc
addr16
xor
imul
push
ficompl
mov
xchg
outsb
outsl
dec
shl
int
loopne
jmp
mov
mov
add
mov
loopne
pop
add
mov
aas
mull
enter
lock
cwtl
nop
xchg
mov
lahf
lods
inc
out
sahf
sbb
lret
jns
frstor
aam
inc
xchg
push
add
cmp
sub
mov
mov
in
push
sub
insl
mov
fistps
in
hlt
cmc
sub
mov
rcrl
lahf
add
lods
inc
lea
insl
add
sbb
movsl
mov
sbb
arpl
repnz
les
inc
loopne
ds
and
scas
push
loope
and
cmpsb
push
add
xor
push
lods
insb
pop
movsb
pop
hlt
call
daa
lock
xor
ret
fdivr
adc
test
addr16
push
or
mulb
in
scas
aam
jge
or
xor
pusha
pcmpeqb
jae
ror
cmp
push
xchg
dec
fistps
arpl
mov
nop
lret
mov
enter
push
sarb
adc
pop
sbb
cs
or
push
push
fadd
testb
xchg
dec
in
pop
push
sbb
mov
popa
xchg
mov
dec
sub
test
inc
sub
fisubrs
lods
sbb
xchg
mov
pop
push
in
xor
aaa
div
dec
adc
test
sub
jge
dec
fsubs
xchg
xor
and
int
sbb
out
add
push
hlt
jle
adc
jmp
stos
xchg
mov
testl
push
xchg
lret
add
jle
sub
cmc
adc
mov
xor
mov
std
sub
pop
jl
mov
sbb
fs
outsl
int3
pop
stos
dec
daa
loop
jp
xchg
push
call
mov
lcall
xlat
sarb
aad
pop
lret
cs
ss
mull
shr
sbb
in
inc
dec
xor
jle
or
outsl
test
jp
bound
mov
cmp
pop
sbb
out
mov
nop
in
ja
xchg
pop
js
pusha
stos
aaa
cmp
call
dec
push
shl
bound
sbb
ret
pop
lds
cld
dec
addb
jl
ss
and
fadds
sbb
mov
push
xchg
lea
idivl
mov
jp
jg
xchg
ret
loop
scas
lds
sti
mov
or
loop
sbb
inc
pop
xchg
popf
lcall
xchg
popf
mov
test
sub
mov
dec
test
lods
xchg
jne
jl
lret
mov
pusha
jge
push
addr16
adc
push
shll
int3
test
xor
dec
cmp
out
sbb
iret
xor
lret
loop
pop
xchg
or
jg
in
xor
push
pop
or
add
push
mov
orl
movsb
daa
push
cltd
iret
loop
sbb
and
insl
mov
sub
sub
out
lods
nop
jbe
test
pop
cmp
or
das
sub
imul
movsl
fbstp
std
mov
aad
in
mov
fidivl
repz
out
repz
jne
xchg
jae
xchg
jge
cmp
movsb
jecxz
push
add
cmp
out
jl
scas
ljmp
dec
push
enter
pop
mov
lods
and
lea
jecxz
xor
push
xor
inc
ficoms
xchg
sahf
daa
in
sbb
sub
push
addr16
in
ret
inc
js
mov
jmp
sub
cmp
xchg
arpl
fidivs
pop
cmp
cmp
push
dec
ficomps
jae
int3
test
and
loope,pt
mov
js
mov
out
xchg
mov
pop
add
jecxz
inc
sbbb
dec
mov
push
xor
mov
push
mov
fistpl
xchg
lock
jmp
data16
ret
xor
mov
xlat
rorb
int
push
xor
mov
dec
outsb
lret
lcall
popa
push
out
or
pop
mov
jb
jmp
sub
aam
inc
pop
das
lret
adc
pop
popf
jnp
fists
insb
adc
dec
ret
mov
out
jle
or
jns
mov
je
xchg
xlat
dec
out
cld
dec
adc
push
push
cmp
in
inc
and
mov
or
popf
out
dec
stos
mov
sbb
jmp
xor
jo
mov
mov
sbb
adc
stos
shl
iret
xchg
or
popa
lea
pop
jmp
push
stos
sbb
iret
xchg
adc
shl
outsb
out
fs
sbb
out
add
out
mov
fmull
jp
add
jge
scas
sti
sub
and
iret
xchg
out
psllw
jmp
imul
xor
mov
imul
lret
inc
and
sbb
jg
stos
aaa
adc
sahf
push
leave
adc
xchg
cld
jg
inc
jne
das
repz
jae
stc
mov
stos
and
cmp
or
add
xlat
outsl
in
xor
sbb
mov
cld
arpl
xor
lods
in
pushf
into
out
mov
std
mov
mov
pop
push
lret
faddl
movsl
adc
shl
adc
lds
adc
jns
ds
jl
push
mov
int3
and
mov
cmp
in
cli
in
sbb
and
rep
or
mov
dec
mov
jae
roll
sahf
or
cmpb
std
cmp
sbb
ja
jp
aam
imull
jecxz
mov
xchg
sbb
mov
cmp
add
jl
movsb
add
adc
mov
lods
cmpsb
xor
jmp
jnp
push
fisttpl
sub
inc
scas
push
add
in
sbb
sbb
loopne
clc
ret
in
sahf
stc
ret
add
and
movsl
add
dec
cmp
sub
mov
out
addr16
in
icebp
jns
sbb
data16
sbb
icebp
cs
std
mov
aad
insb
in
xor
mov
popa
xchg
nop
pop
add
mov
jp
cmp
adc
sbbl
in
stos
loope
mov
bound
mov
inc
mov
cmpsl
mov
jb
pop
mov
das
daa
pop
xchg
out
push
enter
mov
fistps
and
fnsave
loop
fwait
add
loope
int3
xchg
fldt
sbb
mov
repnz
xor
adc
xchg
lods
sub
mov
xor
mov
inc
cmp
cmp
lcall
dec
add
mov
lret
nop
pop
mov
pop
test
data16
sub
fidivrs
scas
insl
fcmovnbe
out
lods
sbb
ljmp
add
sub
adc
repz
inc
and
jle
inc
adc
push
dec
scas
jmp
mov
in
inc
pop
rcll
and
fstps
pushf
fldl2t
test
lcall
xchg
push
inc
inc
xor
dec
aad
mov
fucom
in
popa
mov
sub
pop
call
mov
out
push
addr16
fcmovb
pop
xchg
pop
push
pop
test
cmp
sbb
cmp
das
lret
mov
jmp
sbb
push
test
cltd
imul
mov
loop
lods
and
ss
mov
cs
xchg
lcall
cmp
out
outsb
in
lock
add
pop
adc
test
mov
mov
sbb
mov
lahf
cmpb
loop
lods
and
int3
add
js
fucom
lahf
js
bound
and
mov
roll
ljmp
scas
cwtl
fidivrs
out
sub
shrb
push
imul
scas
pop
adcl
ja
dec
punpckldq
int
das
adc
in
mov
add
mov
sub
pop
mov
mulb
mov
pop
jg
imull
dec
pop
mov
in
jne
adc
adc
push
push
popf
xchg
ss
lds
xchg
xchg
int3
dec
mov
stos
mov
jae
cwtl
mov
fsubrp
add
xchg
xchg
mov
jb
out
sahf
xlat
push
sbb
push
mov
mov
xchg
lock
fcompl
sbbb
fwait
or
faddl
ret
mov
es
leave
cli
fmuls
jp
push
icebp
xorb
jp
test
and
jecxz
jbe
fstpt
shrb
cwtl
inc
aam
cmp
sub
mov
mov
xchg
adc
xchg
jne
sub
cltd
jecxz
xor
mov
in
loope
jle
mov
sub
outsb
popf
push
dec
sbb
fs
pop
shrl
aad
in
pop
mov
rcrb
sbb
inc
lock
or
lods
lea
sub
mov
add
or
and
pop
inc
xor
add
dec
fimuls
pop
popa
movsb
incl
pop
lcall
and
fwait
cwtl
jns
pop
sub
dec
lods
mov
lret
rorl
push
push
xor
push
xor
mov
xchg
push
mov
pop
loop
mov
jle
es
cmc
dec
call
movsl
xor
jno
dec
mov
cltd
or
lret
or
cwtl
dec
push
cmpsl
pop
icebp
jg
jbe
adc
or
jg
jg
add
iret
shll
les
inc
push
repz
pop
hlt
adc
push
inc
mov
cmp
scas
and
and
cmpsb
fstl
cmp
fisubrl
ljmp
sub
inc
cmp
adc
insb
mov
pusha
jmp
add
push
inc
and
xor
fsubrl
push
pop
out
jmp
mov
dec
lods
adc
inc
je
iret
or
xlat
ljmp
pop
or
andb
roll
mov
pop
aam
jmp
pop
call
js
lahf
cwtl
and
mov
push
lret
subl
jno
dec
jbe
inc
sbb
sub
mov
int3
add
out
cmp
das
add
leave
out
dec
shl
shrb
xchg
inc
xchg
push
lds
in
add
bound
add
shl
xchg
prefetch
xchg
test
mov
jns
jge
jge
mov
fwait
cmp
cmc
cld
in
jno
scas
call
jnp
mov
in
sbb
lret
ret
hlt
push
jle
cmp
xor
pop
dec
in
mov
sbb
loopne
pop
inc
in
mov
fdivl
ja
out
jb
pop
sub
dec
mov
and
scas
fld
loope
cmc
inc
sarb
add
lds
clc
mov
cmp
cmp
and
test
out
popa
scas
mov
aaa
iret
dec
and
mov
mov
in
cwtl
mov
mov
cmp
or
inc
stc
pop
or
push
adc
sub
sub
mov
cmp
aad
fimull
cmc
or
lcall
or
decb
daa
xchg
xchg
inc
stos
or
xchg
and
cmpsb
adc
xor
xchg
cwtl
xchg
mov
movsb
std
adc
mov
mov
pop
fsubs
jae
loopne
mov
jne
enter
icebp
sarl
xor
jno
xchg
lods
xchg
inc
xchg
fmuls
lods
out
popa
jo
pop
jle
lds
sbb
mov
mov
xchg
lods
rclb
push
aam
push
out
hlt
shlb
cmp
mov
cmp
add
lret
lock
mov
and
outsb
jno
add
cmpsl
aad
mov
es
outsl
cmp
jno
imul
inc
in
cmp
inc
dec
je
pop
adcl
lods
ss
mov
subl
loopne
mov
add
aas
mov
cmp
cmp
and
xor
ror
movb
jo
nop
xchg
addr16
cmpl
lret
fmull
nop
addr16
into
fnstenv
sub
fldenv
xlat
push
lods
movsl
loopne
mov
fdivl
jl
jmp
std
cld
outsb
mov
push
mov
shl
jle
cmpsb
xchg
sub
or
mov
and
fistps
test
adc
push
mov
mov
xlat
dec
xchg
dec
mov
jne
fidivs
cmpsb
fildl
adc
adc
xor
adc
test
outsb
mov
pop
icebp
sub
daa
hlt
and
xchg
mov
xchg
sbb
mov
inc
xor
xchg
and
add
frstor
push
js
jecxz
stos
hlt
jae
jno
fmull
stos
aas
inc
sti
fists
jb
ljmp
sbb
cmpsl
push
int
arpl
mov
adc
sbb
mov
mov
mov
rcrb
imul
mov
dec
pushf
or
insb
dec
adc
push
and
stos
pop
test
call
xchg
jb
faddl
pop
xor
cmp
std
mov
add
xor
test
mov
adcb
pop
enter
ret
mov
inc
xchg
jl
mov
rcl
mov
xchg
sahf
ret
mov
cmp
loopne
adcb
dec
out
pop
pop
mov
cwtl
imul
push
dec
xchg
xor
mov
int3
test
out
add
mov
imul
adc
fcoms
or
push
add
jp
cmp
inc
push
mov
mov
negb
jne
adc
sbb
out
cmp
sub
fdivrs
aad
pop
push
cli
jns
pop
pop
inc
adc
testl
int3
cmp
inc
ss
and
inc
mov
cmc
fcoml
push
lods
sti
lahf
int3
sahf
xchg
cmp
loop
mov
push
lea
rorb
out
clc
add
or
jnp
int3
mov
jge
mov
aad
in
jmp
rorl
sti
pop
stos
popa
jno
cmpsl
push
add
jmp
xchg
push
lods
lods
lret
jnp
aas
mov
jo
bound
adc
xchg
push
in
pop
pop
scas
out
cs
jp
and
xor
mov
repz
faddp
dec
sbb
push
movsl
xchg
sbb
xor
xchg
mov
cmp
push
lods
imul
jmp
mul
out
cs
pop
or
and
adc
mov
cltd
das
call
sub
leave
fcoms
je
das
lahf
jae
out
mov
ret
icebp
fcoms
mov
outsl
sbb
mov
cmp
outsb
insl
mov
pop
cld
mov
jmp
xor
and
lock
pop
flds
sub
aad
or
mov
mov
inc
pop
mov
jl
mov
jae
das
xor
std
fs
pop
hlt
push
fwait
sub
fs
into
cmp
lea
lcall
repnz
xorl
push
loop
inc
ss
xchg
jae
jecxz
rorl
jne
push
jecxz
sub
in
lock
mov
dec
sbb
sub
shl
ss
or
sti
pop
pop
rorl
jmp
sahf
js
rcr
fmuls
int
idivl
insl
fidivrl
pusha
push
mov
inc
and
cmp
popa
mov
hlt
lret
adc
sub
icebp
jecxz
rol
add
adc
xor
dec
jecxz
lods
iret
and
mov
outsl
scas
repnz
ret
lcall
je
icebp
repnz
loop
cld
mov
mov
cltd
adc
lret
pusha
add
popa
out
pop
pop
xor
ljmp
das
js
add
cli
jge
loop
sbb
fistps
scas
je
cltd
pop
xor
ret
mov
aaa
bound
mov
fstl
add
imul
loop
cmc
sub
mov
pop
push
xor
aas
push
xor
pop
sti
repz
rcrl
jecxz
pop
shll
js
inc
pop
aaa
aas
jecxz
int
lret
adc
lods
pop
faddp
push
dec
fldenv
or
lret
lds
push
inc
mov
enter
orb
addl
inc
jo
scas
and
cmpsb
sbb
pop
jmp
das
cli
inc
out
inc
mov
stos
mov
fildll
in
add
jp
inc
shrw
leave
nop
jp
ljmp
mov
mov
imul
or
mov
inc
addr16
cli
mov
cmpsb
and
fnsetpm(287
cmc
lret
fldenv
mov
push
inc
sub
sahf
das
lret
mov
jne
divb
in
hlt
jle
pop
pop
in
jns
push
sbb
push
push
dec
jne
stos
and
cmpl
aad
fcmovu
fcmovb
mov
jnp
cmp
push
push
adc
sbb
or
imul
mov
in
sbb
rolb
cmc
adc
ss
roll
xchg
repnz
fwait
test
push
js
xor
xchg
je
inc
and
cmp
out
cmp
lret
sbb
xchg
inc
ljmp
inc
add
ror
sbb
adc
pop
lds
lea
mulb
leave
test
sbb
ljmp
adc
or
add
add
jmp
lahf
xchg
sbb
fiadds
je
int3
sub
int3
pop
int
cmpsb
shlb
dec
std
adc
mov
sbb
pop
jo
into
add
inc
mov
stc
mov
aam
fiaddl
adc
mov
fsts
and
popa
in
rcrl
flds
jae
cmp
xchg
ret
xchg
decl
lock
fs
sub
xor
nop
mov
daa
push
incl
sahf
dec
int3
hlt
inc
in
mov
fs
push
stc
xchg
pop
add
repz
out
xchg
fisubrl
out
mov
inc
xor
mov
mov
iret
sahf
pusha
mov
inc
push
xlat
es
test
push
sub
sbb
icebp
lcall
cmp
outsb
or
enter
mov
mov
lcall
fmull
insl
or
mov
pop
jecxz
repnz
hlt
ljmp
cltd
jne
ficoml
fs
int3
scas
rclb
mov
fidivrs
rolb
cmc
sbb
inc
dec
es
sub
push
negb
xor
test
mov
add
mov
ret
xor
mov
jmp
inc
mov
in
jbe
out
jge
pop
add
in
movl
pop
aad
pop
dec
xchg
je
cmpsb
insl
rcrb
enter
scas
lret
outsl
dec
imul
lahf
pushf
fwait
inc
xlat
jae
cli
cmpsl
mov
mov
repnz
je,pt
push
add
push
mov
mov
fdivrp
jmp
inc
test
filds
lahf
inc
mov
ret
xchg
mov
aam
jbe
je
mov
cmpsb
insb
xlat
cmp
sbb
test
mov
inc
cs
into
ss
lret
sbb
mov
jns
hlt
lock
jne
xor
call
aad
xor
mov
inc
sahf
sbb
inc
rol
push
pop
cmp
into
iret
lods
fisubrl
std
dec
and
clc
fcmovne
mul
and
fidivl
add
xchg
scas
fincstp
test
add
push
insl
popf
dec
loopne
jae
inc
pop
mov
les
outsb
fsubrl
movsl
and
test
outsl
cli
insl
nop
iret
dec
pushf
sar
lds
fldt
pop
push
add
jb
mov
sub
inc
jns,pt
hlt
sub
xchg
xor
popw
push
mov
hlt
jle
aaa
pusha
jno
andb
sub
push
in
aas
loopne
xlat
mov
sub
iret
mov
popa
dec
or
int3
push
clc
pusha
lahf
lret
scas
mov
test
fcmovnb
pop
adc
ss
cmpsl
leave
adc
arpl
inc
pop
aad
ret
test
pop
mov
add
add
mov
scas
test
cwtl
decb
movsl
inc
inc
push
in
hlt
cmp
outsb
pop
bound
loop
pop
xor
or
lods
sti
movups
xor
pop
mov
lds
or
stos
test
test
pushf
shrl
and
outsl
imul
bound
or
jecxz
lcall
repnz
cmp
stos
mov
sbb
out
cmpsl
pop
mov
or
das
mov
add
and
sarl
mov
js
lahf
popl
mov
or
pop
ret
jae
jle
and
adc
int
jne
stos
xchg
cmpb
aam
popa
and
loopne
cmpsl
filds
dec
mov
dec
cltd
cld
hlt
push
into
push
cmp
shll
ret
add
cmc
into
push
xor
inc
or
jbe
jb
add
dec
xor
and
sub
inc
sbb
pop
xor
add
lcall
leave
je
or
int
jmp
sbb
mov
jnp
pusha
push
pop
adc
mov
mov
add
call
adc
mov
push
mov
fcompl
mov
mov
movb
roll
and
and
repz
dec
lcall
movsb
aam
pusha
fistpll
cwtl
mov
push
dec
test
dec
popl
call
xorl
cmp
jecxz
into
dec
movsl
es
jnp
add
xchg
pusha
sub
notl
cmpb
bound
mov
mov
mov
jnp
test
mov
pop
mov
xor
xor
clc
pop
pop
mov
stos
lahf
aad
leave
mov
adc
xor
cltd
mov
push
rorb
test
repnz
mulb
dec
bound
add
inc
push
sub
mov
repnz
in
pop
mov
mov
sub
sbb
mov
pop
andl
ret
movsb
cmp
movsb
insl
fcomi
and
or
lahf
aam
cld
dec
inc
jns
pop
mov
push
out
pop
clc
sbb
repnz
jo
pop
fucomp
popf
cmp
lahf
jbe
out
aas
cmp
sub
sbb
and
ds
insl
mov
xchg
stos
mov
jg
lods
cmp
addr16
or
imul
inc
gs
lea
pop
in
adc
leave
push
ffree
mov
mov
mov
mov
pop
popa
push
cwtl
movsb
push
sbb
imulb
js
cmp
adc
rol
in
ret
sbb
out
cmp
and
and
movsl
loop
mov
sub
loopne
mov
lds
xor
cltd
iret
call
cltd
or
lods
into
loop
jb
sbb
lock
push
sarb
mov
or
push
jg
cmp
xlat
and
push
push
int3
in
insl
push
or
icebp
fs
add
addb
sbb
stc
sub
icebp
movsl
out
xchg
popf
imul
jl
outsl
xor
push
cmp
fmull
inc
insl
pop
xchg
pop
pop
pop
mov
into
pop
scas
sub
or
jmp
push
jmp
push
clc
inc
sbb
out
mov
sbb
mov
mov
sub
ljmp
mov
or
sbb
icebp
or
adc
dec
int3
jne
pop
cmpl
das
ffreep
fs
sbb
xor
jecxz
xor
shll
and
cmp
test
push
or
or
jo
stos
xchg
shll
jns
push
xlat
adc
rcrb
push
xchg
into
mov
loope
pushf
cld
cmp
jle
leave
out
int3
aas
cmp
xorb
mov
loopne
ror
lock
push
bound
out
jl
out
lods
push
test
pop
inc
stc
out
bound
js
mov
insb
daa
sub
cmp
leave
divb
or
lods
cli
push
mov
loop
imul
negl
cmp
fimuls
or
xor
lret
and
dec
movl
in
mov
arpl
xlat
shll
pop
movsb
xchg
std
add
or
stos
lods
adc
fwait
lcall
cs
cltd
pop
pop
outsl
adc
xor
jae
notb
xor
mov
mov
shl
mov
fldcw
jbe
in
mov
dec
loop
push
add
fcompl
xchg
das
adcb
pusha
sub
stos
lret
outsb
movaps
stc
cmp
add
mov
cmp
push
xor
sub
xor
in
add
test
rcll
mov
adc
mov
dec
adc
roll
lea
jg
lcall
pop
push
add
stos
mov
inc
cmp
out
or
insb
or
cltd
adc
popf
mov
inc
inc
inc
jge
outsb
leave
stos
cmp
sbb
std
push
pusha
and
divb
xchg
dec
fldl
leave
jge
xchg
inc
fisubl
cmpsb
push
cmpsl
cmp
pop
ret
inc
cmp
fs
adc
outsl
outsb
add
and
rorl
dec
push
js
jle
aaa
dec
inc
enter
mov
in
jbe
mov
jle
inc
xor
adc
jp
mov
roll
lret
mov
stos
lods
stos
in
sbb
mov
cmp
mov
test
mov
xchg
aam
xor
mov
outsb
jno
jg
mov
pushf
add
ss
enter
pop
push
mov
daa
pusha
out
cltd
sbb
test
pop
cmpb
es
xor
aad
ds
test
bound
fwait
xchg
scas
shll
push
mov
mov
ds
cmp
stos
std
jno
outsl
push
sub
push
adc
scas
iret
sbb
ss
and
std
mov
test
push
jmp
xor
mov
sarb
xor
popa
sbb
out
add
sub
pusha
fmull
cld
mov
or
jno
xor
sub
bnd
sbb
pusha
inc
fcmove
stc
add
scas
mov
dec
mov
add
xlat
cmc
cmp
movsb
mov
rcll
hlt
sbb
and
orb
insb
in
dec
punpckhwd
popf
sar
inc
bound
daa
add
and
popl
in
outsb
mov
cld
mov
movsb
adc
fcmovbe
cs
pop
pop
jmp
push
sbb
cmp
inc
add
fbstp
mov
push
cli
in
addr16
mov
sarb
ret
test
and
jmp
adc
sub
clc
pop
jp
jecxz
fwait
add
pop
stc
cmp
leave
rclb
scas
xlat
test
int
push
pushf
dec
adc
jno
dec
push
push
or
stos
cmp
test
mov
hlt
ror
jne
fistl
mov
lret
dec
fs
xlat
inc
loope
adc
adc
cmpsb
dec
sbb
cmp
mov
roll
or
inc
fistl
sub
sbb
pop
ret
out
or
push
sbb
fs
pop
xor
jo
mov
xchg
test
into
cmp
scas
hlt
enter
gs
hlt
rolb
outsl
divb
loope
sub
xchg
inc
mov
push
cmpsb
ffree
pop
push
inc
icebp
mov
dec
bound
lret
xor
xlat
push
jb
out
push
push
push
jmp
mov
mov
mov
aaa
movsb
movzwl
enter
scas
jns
sahf
lret
and
push
aaa
into
movsl
adc
and
stc
fcompl
xchg
mov
push
jae
mov
dec
mov
fcmove
or
push
inc
aaa
arpl
cwtl
cmp
add
mov
pop
out
test
fistps
add
xchg
xor
dec
pop
pushf
outsb
or
fnsave
sub
cmpsb
push
pop
sahf
push
cld
inc
push
frstor
dec
cmc
lds
test
xchg
lods
popf
adc
lods
movsb
cwtl
add
cmp
push
adc
std
lret
cmp
mov
dec
xchg
jp
cmp
and
xchg
push
and
xchg
add
dec
inc
push
pop
pop
jb
aaa
lea
loop
cwtl
shll
shr
and
adc
aaa
mov
sbb
bound
jbe
sbb
stc
sarb
cmpsb
push
pop
mov
mov
sbb
sbb
pop
imul
or
jg
xor
subl
dec
pop
cmp
sbb
and
pop
xor
inc
and
or
xchg
adc
icebp
filds
xchg
outsl
sub
sbb
test
sbb
sbb
lea
xor
inc
lock
jge
jecxz
lret
add
sub
or
in
leave
cmp
outsl
mov
sbbb
pop
mov
test
notb
int3
cmpsl
fisttpl
sarb
xchg
xchg
and
pop
les
push
push
pop
inc
xor
xchg
mov
sbbl
sub
repnz
cmpsl
adc
cmpsb
mov
sarl
inc
mov
sbb
shr
xchg
cmp
fwait
notl
push
cld
mov
sub
test
push
or
shll
stos
pusha
std
fs
cs
jno
ret
jge
mov
dec
popf
push
lcall
push
cld
push
sbb
adc
mov
fiadds
clc
mov
gs
movsl
adc
pop
or
mov
pusha
xchg
fwait
and
jg
dec
sbb
mov
aas
mov
adc
ja
cmp
sub
lcall
popf
dec
jmp
jb
popl
push
or
lds
xor
jp
and
sbb
lds
test
mov
push
dec
push
push
call
mov
mov
int
inc
fdivs
out
test
mov
cli
cmc
cwtl
lret
pusha
jmp
jp
xor
sbb
inc
xchg
cld
mov
and
insl
in
mov
mov
test
cmp
imul
adc
xor
push
dec
and
clc
fmul
and
shl
mov
cld
lods
std
sub
inc
adc
hlt
mov
pop
cmp
push
sub
or
sarl
dec
jb
ret
adc
data16
sti
test
mov
js
mov
adc
sub
xchg
test
and
add
orl
lds
call
mov
xor
mov
mov
mov
subl
pop
aas
scas
push
daa
cli
mov
adc
mov
cmpsb
sub
jb
mov
mov
mov
and
mull
js
std
test
jae
add
pop
adc
inc
cli
movsl
sub
add
enter
aam
minps
fsubs
mov
fsts
shr
dec
sbb
jno
out
loopne
ljmp
lea
stos
or
mov
mov
push
test
mov
push
into
inc
xchg
dec
add
add
push
jae
jmp
jbe
push
mov
or
test
cmpsl
inc
pop
sbbb
jecxz
aam
and
mov
ds
aaa
adc
xchg
jnp
jecxz
ss
adc
dec
test
lds
ds
addr16
ss
lahf
cmp
andb
mov
cmpsl
lea
gs
dec
xchg
cli
push
push
andl
pop
test
push
out
js
pop
xchg
or
divb
xor
in
out
out
xchg
sbb
rolb
daa
push
cmp
jbe
repz
hlt
dec
cmp
and
test
and
add
xor
stc
or
mov
ds
sti
add
mov
sbb
jae
pop
rcr
int3
dec
pusha
jo
mov
call
mov
ret
cmp
mov
subl
loope
out
mov
sub
jl
les
add
test
xchg
aam
aad
dec
mov
daa
cmc
fdivrs
insl
ds
out
push
out
mov
repz
cltd
push
add
in
add
movsl
and
xlat
or
pop
xlat
fs
notl
popa
sub
dec
leave
pop
adc
xchg
insb
push
push
arpl
aam
jb
leave
mov
adc
imul
scas
fsubl
mov
push
in
mov
push
sbb
fidivrs
mov
mov
jno
push
ljmp
int3
mov
es
jl
add
adc
cmpxchg
or
xor
push
jae,pt
push
in
sbb
cltd
test
ficoms
inc
push
repnz
lea
jo
sahf
push
enter
imul
adc
mov
std
pusha
push
lds
push
or
sbb
fs
mov
or
faddl
inc
adcl
fstpt
pop
adcl
lahf
lods
repnz
fadds
orb
callw
push
into
or
sbb
into
out
mov
jl
sbb
adc
les
aam
push
or
inc
pop
mov
adc
dec
inc
fadds
fcmove
ret
and
adc
rolb
pop
xchg
push
jge
daa
push
adc
xorl
test
fdivrs
aaa
dec
movsl
iret
or
aam
in
aad
xlat
and
ja
out
cmp
jae
sbb
imul
xchg
mov
imul
adc
icebp
adc
sbb
scas
ret
or
sar
outsb
cmp
iret
fs
in
sub
std
loop
sbb
mov
mov
jecxz
scas
pop
aam
mov
sahf
mov
add
or
lcall
adc
mov
lret
adc
push
or
mov
cwtl
xor
adc
push
mov
xorl
jo
jmp
inc
sbb
repnz
lock
pop
stos
gs
mov
test
call
adc
push
insb
int3
pop
cmp
xchg
jo
dec
cs
inc
xor
mov
or
inc
push
js
test
loope
mov
cmpl
mov
jge
out
nop
inc
sub
ss
mov
out
xchg
fdivs
loope
sbb
adc
mov
and
leave
push
sahf
cmp
add
leave
lret
imul
or
pop
push
outsl
jle
leave
ffree
adc
mov
int3
mov
pop
or
out
and
cwtl
repnz
cmp
jmp
mov
mov
ret
imul
mov
test
dec
cmp
dec
xlat
lea
out
pop
cmc
mov
js
sti
sbb
das
leave
icebp
mov
sub
push
adc
cld
push
mov
dec
sahf
pop
iret
push
xchg
mov
inc
push
in
xor
push
inc
inc
push
int3
rorl
mull
pop
dec
or
fildl
pusha
sahf
push
and
dec
adc
aad
mov
cli
dec
jle
aaa
mov
mov
test
shrl
cmpsb
inc
imul
jle
mov
push
add
xlat
std
push
xlat
sub
or
cwtl
lock
xor
add
jnp
in
stos
fcmovbe
fdivr
or
cs
push
fildl
and
bound
shlb
rolb
pop
daa
lret
push
xchg
out
add
add
popa
pop
mov
pushf
xchg
lock
sub
mov
push
cmp
and
xor
jnp
mov
lods
add
sub
pop
add
insb
rolb
push
test
fisubrs
mov
sbb
ss
rclb
ret
inc
out
pop
mov
das
in
scas
pusha
sahf
xor
lods
aaa
in
divl
icebp
pop
xchg
repnz
dec
testl
aaa
push
or
xchg
xchg
scas
xchg
popf
bound
inc
loopne
xchg
ja
ficomps
mov
and
shlb
and
rol
leave
lret
xor
mov
xchg
and
test
and
xchg
enter
and
push
ja
pop
call
jmp
sub
inc
and
add
scas
in
lods
mov
push
scas
xor
into
push
movsb
outsl
mov
and
push
pusha
add
outsb
ror
xor
pop
test
das
rorl
dec
mov
mov
cmp
nopl
adc
inc
add
ja
lds
into
xchg
mov
xor
inc
daa
fs
addr16
pusha
and
loope
insb
mov
int
jno
scas
pop
inc
icebp
call
fists
test
xchg
sbb
sbb
mul
ss
jmp
dec
pop
jno
or
xlat
push
xchg
jns
mull
xor
leave
jecxz
lcall
push
and
int
cld
mov
mov
icebp
push
jl
cmp
call
lcall
popf
add
adc
dec
stc
lret
sub
ljmp
lcall
cmp
inc
mov
mov
sbb
cli
repnz
mov
imul
mov
inc
fmull
roll
mov
mov
in
dec
cld
or
push
cmp
xor
mov
fiadds
ficomps
out
hlt
inc
divb
mov
das
mov
sub
push
mov
jbe
pusha
orl
insl
lcall
cld
fs
jne
xlat
arpl
pop
shl
out
push
fsubl
scas
lret
neg
std
lahf
imul
filds
and
aad
dec
mov
scas
pop
frstor
outsb
cld
icebp
or
pop
dec
jmp
out
push
jne
jae
jae
movsl
ficoml
dec
mov
shlb
pop
cmp
add
adc
dec
xchg
in
push
fwait
push
adc
sub
out
inc
pop
in
stc
and
pop
mov
jp
dec
inc
xchg
lods
scas
push
pop
ljmp
dec
mov
in
aas
mov
jns
ds
sub
insb
adc
xor
pop
or
nop
mov
sub
dec
adc
cmp
int
inc
mov
cmp
sbb
ljmp
je
lahf
push
movsl
dec
sub
or
xlat
push
fistpl
test
cs
dec
cmp
dec
pop
rcrb
pop
cmpl
xchg
imul
insb
jno
je
call
pushf
xor
rolb
scas
cli
xchg
lock
pop
std
mov
jl
call
pop
or
into
jno
xor
sub
cmp
jecxz
pop
dec
mov
frstor
push
push
leave
ret
inc
and
cs
dec
xor
pop
lds
cmpsl
rcrb
and
adc
sub
mov
pusha
imull
imul
mov
add
jl
push
lahf
xchg
mov
lds
xor
call
lahf
int3
or
cmp
pop
mov
es
push
arpl
jg
sub
adc
push
or
fwait
and
int3
sbb
aam
inc
arpl
sub
mov
xor
outsb
jmp
xor
jnp
pop
mov
dec
pop
popf
or
in
dec
or
and
and
push
cmp
xchg
and
cmpsb
aam
pop
cld
mov
mov
push
in
sub
inc
dec
mov
push
ljmp
push
sub
aad
push
pop
dec
jp
lret
aaa
rorb
daa
inc
mov
fucomi
outsb
filds
insb
sbb
pop
in
jecxz
cmp
jo
cmp
pop
or
test
dec
push
jno
fists
loop
inc
xchg
jl
subb
and
arpl
mov
daa
sub
in
idivl
std
push
nop
xchg
mov
mov
aaa
aam
into
mov
xchg
arpl
cmp
or
sbb
add
jo
arpl
rcrb
mov
lahf
fwait
test
test
dec
sahf
xor
xchg
data16
adc
fcomps
mov
inc
stos
mov
pop
outsl
aam
call
inc
and
push
sarl
or
jg
jg
mov
sti
mov
mov
leave
push
jecxz
and
dec
jp
call
imul
scas
lahf
loop
insl
jg
imul
mov
jp
xchg
mov
push
test
add
mov
adc
aaa
mov
dec
shr
leave
mov
dec
sbb
jge
sbb
push
cmc
pusha
sub
mov
xor
ror
xor
ds
jb
ficoml
je
cmpsb
ds
lret
das
int3
ret
std
aaa
movsl
bound
cli
inc
shlb
fxch
adc
pop
fildl
ja
sub
jae
int
push
or
mov
into
outsb
loopne
cs
stos
fsubrl
cmp
shrb
loopne
cmpsl
pop
push
xor
and
dec
test
lods
jns
jmp
mov
jae
pop
jmp
jmp
scas
imul
lret
lock
add
xchg
testl
stos
out
cmp
out
mov
fsubr
push
ja
or
leave
xchg
inc
sub
repz
cs
mov
imul
dec
ret
outsb
mov
sub
lds
or
loopne
shrl
into
sub
adc
jae
pop
movsb
out
jle
cmp
in
das
lret
sti
cwtl
cmc
repnz
jns
mov
shlb
test
push
sbb
adc
data16
push
int3
inc
xor
dec
dec
mov
icebp
cld
lahf
or
lods
ret
xchg
dec
and
jbe
or
into
dec
bound
cld
aaa
sbb
inc
cmp
xchg
jp
les
add
scas
ljmp
add
jae
adc
inc
adc
xor
and
mov
mov
cs
jae
das
mov
dec
sbb
in
sub
sub
dec
popa
shll
hlt
arpl
pushf
mov
gs
imul
or
nop
loop
pop
push
or
pop
lea
mov
sub
pop
daa
pop
sub
and
call
inc
jecxz
mov
rorb
stos
mov
repz
push
ja
xchg
add
xchg
je,pn
scas
dec
rcr
xor
std
push
pop
imul
jl
in
icebp
repnz
fdivs
pop
daa
shll
lcall
jnp
popf
stc
adc
insb
jo
decl
and
jns
fs
and
mov
pop
xchg
fsubs
loopne
inc
adc
jl
xor
sub
sbbb
xchg
sbbl
cs
std
xchg
xor
xchg
enter
adc
scas
je
push
lret
sti
fwait
xorl
fidivrs
push
rcr
push
aam
pop
rcll
popf
mov
add
test
aaa
cltd
sub
xor
test
sbb
jo
mov
mov
aad
xchg
jbe
sti
mov
dec
and
shr
jl
mov
adc
in
add
jg
in
adc
dec
subl
test
sbb
loope
icebp
or
addr16
mov
mov
pop
or
ret
jnp
outsb
loop
or
inc
test
or
jbe
ja
popa
ljmp
repz
dec
movsb
movsb
into
fists
push
sub
cmp
dec
lret
imul
xor
inc
mov
stc
loopne
fmull
jg
lock
lods
outsb
adc
shll
mov
mov
sbb
cmp
push
pusha
push
xchg
jl
jo
dec
cmp
lcall
cmpb
decb
mov
and
popl
out
cwtl
test
cmc
dec
add
mov
stos
fadd
mov
shlb
scas
adc
push
cmp
xlat
aam
xchg
sti
and
xlat
jnp
mov
xor
ror
jge
and
push
loop
jb
mov
mov
ss
or
mov
scas
popf
je
mov
sbb
stc
call
cmp
iret
das
enter
cmpl
out
cld
jne
rcr
sub
jge
xchg
stos
les
cwtl
inc
cmp
or
jge
fbstp
fwait
mov
enter
pop
adc
dec
pop
call
or
test
push
xchg
lods
aad
mov
idivl
cmpsb
addr16
sub
push
mov
idivl
iret
mov
sub
hlt
push
sbb
adc
mov
mov
and
add
cmp
lea
jmp
jecxz
mov
xor
sbb
lods
divb
fldl
adc
das
inc
into
bound
je,pt
lods
and
imul
rorl
push
jo
sub
push
outsl
call
enter
xlat
or
jno
inc
and
dec
data16
je
lcall
mov
push
xor
sarb
rcr
icebp
test
jo
push
mov
pusha
cmp
mov
inc
cmpl
in
xor
lahf
test
lea
in
mov
imull
mov
cltd
bound
and
adc
leave
test
or
jb
js
int
xor
mov
call
pop
dec
daa
aad
arpl
xchg
dec
dec
fiaddl
mov
iret
pushl
sbbl
mov
movsl
sbb
and
fwait
jmp
cmp
cmpsb
cmpsb
jo
and
dec
out
and
rcl
in
pop
pop
leave
jge
dec
mov
les
stos
sub
push
pop
ds
fld
rcl
movsb
or
mov
or
jecxz
jno
xlat
js
jp
pop
push
bndstx
mov
test
sbb
lret
int3
pop
hlt
leave
mov
xor
mov
and
fildll
push
aad
jge
clc
pop
rcrb
imul
dec
mov
pop
sbb
push
aas
sbb
xor
xchg
in
dec
icebp
jmp
sub
cwtl
mov
push
xchg
in
add
add
jno
mov
sub
push
mov
pop
in
mov
clc
test
mov
hlt
push
xchg
repz
pop
ljmp
dec
mov
xor
dec
push
cmp
mov
inc
inc
inc
mov
xchg
sarl
pop
push
shrl
orb
popa
jae
jmp
out
and
shr
lret
mov
push
insl
pop
mov
pop
dec
test
mov
and
xlat
and
push
fildl
mov
rclb
int
daa
clc
sbb
xchg
jno
je
std
ret
sub
xorl
dec
popa
push
and
imul
fidivs
insl
shr
xor
push
dec
add
adc
decb
pop
cwtl
aam
mov
decb
leave
sub
cmpsl
inc
sub
test
or
lea
imul
and
subl
mov
cmp
outsl
bound
sbb
or
sub
fs
inc
adc
fcoml
pop
pushf
mov
jb
mov
stos
rclb
xchg
cmpb
vsqrtpd
push
ss
lahf
iret
call
push
ds
sbb
cmpsb
data16
xlat
sbb
aas
dec
arpl
push
test
pop
xor
jmp
sbb
icebp
mov
out
mov
jne
mov
inc
mov
jae
push
add
sbb
push
xor
lcall
test
jmp
or
js
push
addr16
negb
jae
cmp
mov
pop
or
adc
stos
lret
aaa
bound
and
xlat
xor
les
push
repz
cmp
add
and
cmp
xor
lret
jmp
mov
pop
mov
or
push
cwtl
pop
pushf
cwtl
pop
pop
insl
jae
setns
fstl
aad
jp
inc
cli
sub
xor
pop
test
imull
and
sar
inc
inc
jne
jnp
jmp
scas
mov
jp
mov
mov
pusha
inc
aad
idivb
dec
adc
xchg
mov
stos
aas
jmp
fistl
das
and
addr16
xchg
ja
mov
jo
clc
cmp
rcll
sbb
xor
sub
pop
jmp
mov
xchg
pop
pop
adc
aam
add
cmp
and
popf
adc
xlat
mov
pop
sbb
stos
aam
mov
and
pop
stos
pop
test
cmp
mov
sahf
mov
repnz
mov
dec
imul
lret
lret
push
shrb
in
ficoml
dec
inc
xchg
pop
ret
push
push
jl
iret
xchg
dec
jns
cmp
xor
std
jmp
dec
pop
inc
pusha
and
push
inc
sub
and
push
stos
xor
jl
jne
pusha
jno
push
add
adc
mov
sub
fnstcw
jae
or
and
fwait
rorl
inc
lahf
adc
mov
lock
lcall
test
cwtl
inc
and
inc
adc
sub
sbbl
fucomp
lahf
sbb
lods
push
xor
ficoms
popa
inc
ffreep
push
pop
pop
sub
lahf
fsubs
mov
jae
aas
clc
jp
sahf
es
push
iret
nop
push
inc
arpl
push
into
fsubrp
test
inc
sub
xchg
pushf
cmp
cmp
fldcw
loopne
dec
cwtl
dec
or
push
push
add
fdivrs
sbb
or
mov
daa
dec
outsb
jg
jno
das
dec
sub
inc
pop
and
loopne
into
cmp
push
lahf
xchg
stos
lcall
xor
jmp
rorb
xchg
dec
jne
add
inc
pop
fwait
mov
in
mov
lock
notb
or
out
lock
cwtl
adcl
std
sub
mov
adc
and
in
push
adc
sti
xchg
imul
andb
cs
dec
mov
insl
loopne
out
and
add
das
push
mov
jae
pop
and
xor
ljmp
adc
or
and
sbb
je
aaa
loop
mov
icebp
cmp
add
cmp
stos
jae
push
ja
loopne
xchg
arpl
and
not
push
and
dec
jg
push
es
push
push
push
mov
pop
inc
mov
mov
rorl
sbb
add
adc
xchg
mov
pop
push
jnp
mov
pop
inc
lret
push
scas
push
sub
inc
xchg
outsb
mov
fs
jg
jmp
leave
xchg
testl
stc
add
fcmove
cmpsb
and
jno
jecxz
pop
fsubrl
scas
jmp
jge
mov
insb
mov
or
pmaxub
ret
ljmp
adc
movsb
scas
sbb
out
xor
in
pop
add
in
lds
dec
mov
call
mov
lcall
cmpsl
xor
inc
sub
mov
push
pop
mov
out
in
dec
dec
rcrl
add
push
vshufps
mov
jmp
jns
sbb
in
pop
and
out
xchg
dec
xor
jne
mull
lock
std
sbb
or
jns
and
ret
xchg
ds
insb
iret
inc
cs
es
js
pop
aad
dec
push
loopne
adc
nop
adc
loop
cld
mov
or
repnz
xchg
pop
jl
mov
aaa
mov
add
mov
push
icebp
cli
mov
cld
testl
jle
mov
cmp
sbb
fnstsw
inc
inc
negl
jp
jne
in
mov
fwait
xchg
mov
aam
lods
cmp
push
adc
ljmp
mov
lcall
das
push
in
push
xor
cmp
insl
out
xor
push
lods
xchg
fstps
pop
test
push
xorb
push
xchg
xchg
gs
inc
sbb
fsts
ret
insl
mov
test
fs
mov
fwait
or
imul
cmp
pop
sti
jns
out
clc
push
jg
test
xor
sub
and
mov
cmp
jae
lods
mov
insl
xchg
dec
stc
icebp
repz
xchg
insl
mov
inc
imulb
xor
jb
scas
inc
das
aam
imul
aaa
ret
mov
dec
sti
lcall
inc
out
xchg
das
mov
mov
pushf
and
and
mov
pop
stos
cmp
pop
out
sbb
sbb
or
cltd
xchg
add
xchg
or
xor
xchg
out
mov
cmp
repnz
pop
int3
sbb
add
call
sbbb
mov
sub
mov
jecxz
ficomps
je
mov
sbb
add
dec
inc
shrb
sbb
pusha
gs
sub
xchg
lods
add
imul
mov
jnp
mov
imul
sahf
es
fldenv
mov
mov
push
test
andl
jmp
ja
ret
dec
pop
dec
inc
mov
test
and
int
hlt
enter
add
fucomp
mov
sbb
push
xor
outsl
daa
ss
xchg
pop
mov
pop
mov
nop
cld
inc
jecxz
sbb
jno
mov
sbb
inc
jne
in
loop
inc
fnstsw
and
sub
shll
xchg
cmp
lods
jnp
aad
sub
insl
mov
nop
push
sbb
jl
push
sti
pop
gs
mov
jle
mov
xor
daa
push
loop
scas
das
add
aam
adcl
enter
push
les
mov
pushf
clc
loop
inc
test
sbb
dec
mov
int3
das
in
dec
push
inc
mov
mov
and
mov
loope
sbb
mov
inc
out
dec
adc
out
xchg
cmp
scas
ss
dec
mov
cld
lods
stc
lahf
push
sub
pop
jbe
leave
pop
dec
inc
xor
popf
divb
pop
add
xchg
push
dec
push
push
test
scas
pop
mov
and
movsl
adc
les
and
push
xor
shll
inc
xchg
je
aas
mov
fdivr
xor
dec
scas
scas
sub
add
xor
bound
scas
or
jmp
aam
roll
pop
test
lcall
sub
sbbb
inc
pop
cltd
dec
mov
mov
lahf
adc
loope
stos
stos
jg
sti
shll
mov
leave
sub
dec
mov
xchg
inc
movsb
inc
icebp
leave
pushf
adc
push
push
sbbb
xorb
enter
sub
mov
jbe
dec
pop
iret
jge
sahf
mov
sub
pop
in
mov
pusha
lods
xor
cmp
pop
pop
xor
push
jne
std
mov
cmpsb
les
pop
xor
cmpsl
add
pop
or
xor
fdivr
sbb
mov
mov
pop
adc
push
push
inc
jno
jae
xchg
mov
ss
push
je
adc
push
aaa
enter
xchg
mov
jge
jecxz
sbb
jne
popf
cld
push
cmpsl
leave
or
cmpsb
scas
lods
repz
iret
adc
adc
and
xor
and
nop
dec
ja
idivl
push
icebp
in
add
or
repnz
insl
out
cmpsl
insb
pop
jmp
loop
leave
fmull
mov
or
mov
out
or
aad
cmp
mov
sub
repnz
imul
fistpl
pop
out
push
popf
push
adc
lret
push
push
sub
inc
insb
test
dec
mov
dec
and
cltd
and
mov
lock
aam
decb
popa
mov
lret
xor
xor
sub
out
jns
fdivrs
repnz
cmp
and
and
or
in
mov
push
xlat
push
adc
mov
and
pop
mov
cmp
cmpsl
pushf
and
movsb
mov
cmp
shrb
out
dec
jnp
mov
dec
and
gs
or
repz
xchg
jl
cmp
mov
in
sbb
or
lods
xchg
push
enter
lods
nop
adc
cmp
ljmp
xchg
dec
icebp
cmp
ror
push
mov
mov
shlb
mov
mov
cmp
shr
fisttpl
stos
es
mov
cmp
push
stos
xor
out
data16
aam
cld
jns
in
and
repz
push
movsb
mov
fwait
mov
sbb
mov
dec
in
in
jp
mov
rcl
mov
xlat
cwtl
inc
mov
or
mov
test
daa
xchg
mov
jno
lret
and
sarl
pushf
dec
int
jnp
xchg
push
ljmp
pop
mov
mov
dec
das
push
xor
cs
icebp
hlt
or
ljmp
mov
pusha
es
ljmp
scas
mov
out
call
shlb
scas
cld
sub
sub
or
jmp
or
sub
xchg
popf
cmp
cmp
fdivs
mov
icebp
nop
sub
sub
lods
push
std
dec
cli
bound
dec
pusha
hlt
jmp
ret
cmp
addr16
imul
jno
or
dec
mov
jnp
add
xchg
movsl
andb
add
xchg
cwtl
push
call
sahf
popf
pop
xor
out
mov
cld
mov
add
jno
shrb
cs
lods
cli
jnp
xchg
push
dec
or
repz
fsubrs
jg
icebp
outsl
push
test
sbb
xor
call
sbb
adc
jmp
adc
movsl
xchg
in
xchg
pop
enter
stc
lods
fistl
mov
jmp
jno,pn
insl
mov
add
xchg
lret
mov
jmp
out
or
mov
mov
into
mov
repnz
inc
add
lret
mov
jmp
sub
mov
je
inc
and
xlat
sahf
outsb
movsb
pop
adcb
lcall
sbb
pop
enter
inc
mov
push
or
xchg
imul
push
sahf
in
scas
adcb
push
xor
inc
arpl
fistl
ljmp
add
mov
cmp
and
incb
call
mov
lret
hlt
or
inc
loope
xchg
inc
hlt
xchg
cltd
jg
jl
xchg
sub
lods
not
rorb
and
mov
js
test
sub
rcrl
pop
test
loop
inc
clc
fs
ss
test
mov
cmp
adc
add
jno
push
stos
dec
test
xchg
jbe
out
sbbb
popf
dec
or
pcmpeqw
push
push
push
lods
jmp
dec
nop
mov
popf
add
push
inc
jp
out
sub
aad
xchg
lret
jbe
jge
jns
adc
shll
ud2
pop
loop
imul
or
test
push
sub
pop
sti
enter
scas
pop
push
cmp
loop
push
pushf
ficoml
into
xor
lret
add
lea
inc
cmp
mov
add
xchg
out
scas
xor
jae
or
icebp
adc
cmp
pop
dec
fidivrs
repnz
xor
pop
cli
or
jb
push
js
sub
mov
lretw
jmp
jno
shrl
mov
dec
in
icebp
inc
jb
push
pop
ds
dec
pop
mov
aad
and
xor
adc
xchg
fadds
ficoml
stos
test
rcl
mov
lods
jp
and
jno
mov
ficompl
imull
xor
mov
jp,pt
pop
fs
fcoms
xchg
outsl
inc
mov
adc
test
inc
call
push
xor
test
popf
das
int
sbb
push
xchg
aad
stc
jo
test
jecxz
mov
xchg
jo
cmp
adc
jb
das
je
and
gs
sahf
mov
cmp
mov
add
das
pusha
push
and
test
jbe
or
je,pn
fs
in
xchg
dec
dec
or
gs
aam
mov
sbb
mov
stos
mov
jmp
test
xchg
pop
cmpsw
outsl
or
xor
jg
out
add
cmp
mov
jg
xor
adc
and
add
sub
push
cmpsl
cmp
inc
rcl
in
sahf
out
call
cmpb
aaa
push
cmp
cmp
icebp
push
xor
orb
sub
xor
cltd
popa
das
dec
xor
pop
adc
cmp
inc
mov
sbb
mov
dec
int
pusha
cs
dec
repz
pushf
sbb
cmc
sbb
inc
or
sbb
ds
mov
loope
lock
cmp
fs
cmp
xchg
addr16
divl
inc
push
movsl
cltd
addr16
ds
adc
mov
mov
push
ds
rolb
mov
mov
and
stos
mov
std
test
cmp
mov
ja
into
sbb
mov
subb
int3
inc
jo
repz
mov
sub
and
lods
sbb
add
loopne
mov
nop
push
add
lahf
rcrl
loop
cmp
lods
cmpsl
mov
mov
push
jb
cmp
xor
and
sub
pop
jl
mov
sahf
in
xor
push
pop
add
xor
xor
xor
jb
pop
popl
pushf
fstl
movsl
gs
test
mov
inc
fs
stc
scas
mov
aas
and
pop
dec
xor
mov
comiss
inc
xor
mov
stos
sbb
imul
in
icebp
ljmp
mov
mov
shlb
out
sbb
call
inc
lods
jae
pop
xchg
xor
dec
loope
inc
xor
mov
sub
int3
mov
sub
mov
pop
mov
jb
insb
xchg
lea
jmp
sub
imul
push
sbb
movl
sbb
pusha
jl
in
lret
in
bound
inc
mov
ljmp
or
jb
fwait
sub
fmulp
stos
insb
mov
subl
or
xor
inc
ror
mov
mov
push
addr16
pop
pop
lds
dec
lret
dec
dec
cli
jp
popf
adc
int
cmpsb
test
in
add
aam
or
sub
jge
inc
push
insl
and
in
pop
push
scas
push
cli
mov
cmp
addr16
or
loop
sti
call
scas
xor
mov
scas
stos
cmpsl
lea
inc
out
mov
jmp
xchg
jbe
fsubs
dec
cmp
fcmovb
or
lcall
ds
popl
xchg
icebp
cli
ja
push
pushl
and
in
fstps
jmp
repz
cli
imul
sub
in
insl
jmp
sbb
fstl
rcll
dec
push
cmp
cmpsb
std
ret
outsl
or
mov
daa
lea
pop
cmp
sbb
mov
push
bound
mov
or
adc
roll
popa
sbb
mov
mov
stc
fcmovnbe
or
test
testl
aad
stos
shll
nop
sbb
cwtl
insb
arpl
pop
mov
pop
xor
jmp
bound
cmp
dec
or
test
jb
dec
out
jge
pop
testb
cltd
add
xlat
aas
jge
sub
dec
mov
pop
sub
ss
add
adc
pusha
push
and
jnp
fstps
xchg
xchg
adc
lahf
inc
xor
fmuls
mov
out
sbb
dec
hlt
ds
adc
adc
shrl
leave
lret
inc
mov
cld
fmull
cmp
cmp
int3
jmp
fdivp
addr16
repz
fimull
fstl
push
mov
add
pop
shlb
dec
test
mov
lret
mov
mov
adcb
das
push
fcompl
push
pop
sub
push
push
sbbb
sbb
pop
mov
lds
ljmp
notl
mov
test
lock
dec
push
xor
push
inc
and
mov
cmp
push
pop
lds
pop
cmp
into
add
xchg
push
adc
das
popa
shrb
inc
fwait
dec
pop
shl
push
mov
push
in
dec
mov
lret
pop
sub
push
mov
jnp
jecxz
sbb
pusha
imul
inc
mov
mov
xchg
sub
cli
test
aad
pushf
mov
inc
push
add
inc
pop
mov
xchg
dec
stc
mov
jp
ljmp
dec
cs
ljmp
out
pusha
iret
arpl
sahf
ja
fldcw
push
jae
mov
push
rclb
inc
cmp
push
cwtl
jp
xchg
xor
fsts
test
addr16
dec
outsb
aas
out
lret
dec
inc
out
or
lcall
pop
pop
mov
shrl
scas
xchg
cmc
inc
in
inc
or
out
add
and
mov
add
or
loopne
push
insb
mov
imul
mov
jecxz
mov
repz
dec
out
dec
outsl
aam
or
shll
sti
test
ja
pop
test
loop
mov
loopne
xor
mov
mov
scas
into
mov
jge
dec
clc
sub
mov
mov
idivl
dec
mov
inc
sbb
shll
jnp
cmp
leave
rcll
fbld
fmuls
ret
adc
pop
stc
fwait
fs
mov
in
stos
addr16
sub
mov
and
into
adc
and
mov
push
mov
out
fbld
push
test
inc
xor
int3
cmp
jmp
repz
push
sbb
js
stos
or
xor
dec
mov
dec
jmp
cmpsl
fcmovb
xor
arpl
dec
adc
lret
mov
jge
push
cmp
popa
cmp
adc
out
adc
jno
popa
daa
jne
and
ficompl
cmpsl
jge
sbb
fistpll
sub
xchg
and
pop
mov
stos
sbb
sub
mov
xor
push
or
sbb
cmp
push
pop
in
divb
or
das
lds
repz
dec
dec
mov
and
push
or
insb
inc
jne
nop
jae
mov
ss
xchg
jne
xchg
cmc
out
sbb
js
inc
mov
dec
xchg
pop
cmp
cmp
idivb
aaa
xchg
movsb
inc
cmpsl
jns
lcall
into
movzwl
xlat
arpl
inc
dec
or
cmc
mov
popa
adc
stos
mov
add
stc
jns
mov
adc
xor
mov
movsb
std
gs
inc
jle
outsl
cmp
and
inc
sbb
cmc
cli
ret
mov
mov
lods
imul
cmp
leave
cld
cmpsl
cmp
mov
dec
push
pop
pop
idivl
cmp
xor
xor
jne
mov
sahf
in
popa
sbb
push
stos
mov
ljmp
rcr
and
jno
dec
es
jno
mov
jno
push
into
scas
dec
ret
xchg
out
cmp
adc
or
cld
adc
jb
scas
aad
mov
mov
movsb
outsl
mov
scas
test
and
pushf
lods
icebp
xor
lcall
notl
clc
mov
insb
mov
icebp
ds
inc
das
repnz
out
or
sub
ss
in
mov
andl
pop
cli
sar
aam
sbb
rcrb
leave
mov
nop
inc
es
imul
adc
pop
mov
out
xchg
aad
int3
fwait
jo
lock
xchg
sbb
xchg
out
pop
jno
xor
jb
mov
cmp
mov
inc
pop
sbb
pushl
rclb
xor
cmpsl
push
bnd
push
js
jecxz
loopne
sahf
mov
aad
mov
cwtl
ljmp
lret
stc
test
das
pop
fcom
jge
outsb
jl
pop
and
test
add
mov
cmp
jge
jge
xchg
sbb
jmp
dec
dec
add
jns
sub
ja
xlat
std
fwait
cltd
cwtl
sbb
or
loope
pop
sub
add
jmp
cld
mov
imul
enter
pop
in
mov
lret
fmul
jmp
fdivrl
sbb
sbb
jns
aam
repnz
mov
add
mov
or
ljmp
pop
sub
jge
inc
cltd
mov
dec
mov
sub
cmp
decb
pusha
lds
mov
fwait
adc
dec
popf
adc
dec
sbbb
jo
cli
push
scas
sbb
or
cmp
mov
cmp
outsl
dec
push
icebp
cmc
fnstcw
pop
xchg
and
aaa
inc
xor
mov
dec
xchg
inc
push
pop
dec
adc
movsb
in
ja
iret
cmp
enter
add
sub
push
push
pop
pop
imul
add
jb
sub
push
divl
call
xchg
push
sub
orb
call
adc
mov
and
and
out
xchg
ret
mov
ret
lret
fcmovnbe
lret
ret
dec
stos
mov
dec
mov
bnd
in
jle
jne
rorl
push
xchg
pop
aad
loop
push
lret
cmc
mov
arpl
inc
btr
enter
mov
fcomps
std
add
adc
ret
insb
dec
mov
push
cmp
or
xorl
ljmp
les
cwtl
mov
add
jnp
insl
mov
pusha
cmp
cmp
cmp
dec
pop
nop
hlt
pop
stos
cmp
repnz
inc
or
insl
ss
icebp
out
inc
jns
js
sti
xchg
shl
sbb
xchg
xor
sub
jo
cmp
mov
movsl
int
loop
xchg
mov
adc
fs
gs
aad
sahf
sub
dec
mov
xor
loopne
in
mov
inc
sbb
xchg
icebp
mov
cmp
pop
cwtl
push
cmpl
add
loop
rclb
sbb
and
mov
push
jmp
or
add
cmp
stos
add
mov
ret
out
or
mov
rclb
loop
call
xor
in
inc
xlat
mov
sub
sbb
ss
mov
mov
cli
movsl
rol
dec
or
cwtl
mov
in
sub
pusha
movsb
jl
addb
pusha
mov
xor
jbe
xor
add
sbb
pop
push
adc
test
and
mov
adc
push
mov
mov
add
xchg
dec
scas
jge
iret
js
mov
push
stos
xchg
or
cmp
sbb
sbb
dec
cmp
xor
xor
adcb
cmp
sbb
cmp
and
out
repz
push
stc
inc
into
add
sahf
rolb
xchg
shlb
popf
mov
push
mov
adc
stos
lea
xor
cmpsl
ds
bound
mov
fcomi
jp
es
add
insl
mov
inc
sbb
lcall
pop
xchg
pop
jmp
sahf
out
push
aaa
cmp
add
jns
mov
jl
mov
adc
fs
fidivl
jae
cmp
ficoms
mov
jbe
push
mov
ss
out
lods
fsubp
and
fwait
xchg
roll
imul
push
stos
push
outsl
jb
xchg
aaa
mov
sbb
add
fimull
scas
jnp
pusha
outsb
jg
mov
inc
dec
mov
in
pop
mov
xor
push
mov
dec
xchg
mov
xor
adc
into
mov
push
and
shlb
push
out
fwait
push
gs
cmc
mov
sub
fmull
push
or
adc
je
or
ja
pop
xchg
sub
xchg
pop
rorb
dec
push
ret
scas
pop
sti
push
popa
dec
push
popa
push
adc
mov
xchg
mov
scas
and
add
xchg
mov
loopne
icebp
pop
pop
jge
into
adc
xchg
hlt
add
xor
repz
andb
lock
xchg
jno
pop
clc
pop
mov
js
ds
adc
pop
inc
sbb
icebp
cmpsl
scas
imul
dec
insb
mov
and
imul
into
mov
pop
orl
cmp
sub
adcl
push
or
pushf
or
lock
pop
mov
cmpsb
shll
fs
cmp
out
jnp
adc
ret
je
outsl
lods
roll
jge
hlt
add
pop
out
mov
shl
lcall
xor
jle
movsl
xor
fcomps
mov
je
push
iret
add
jne
hlt
jno
cli
add
xchg
cmpsl
aad
in
lahf
ret
sub
pop
push
pop
std
cmp
jns
cli
mov
into
mov
lret
in
test
cmpsb
jbe
fldt
test
in
lds
movl
clc
inc
push
inc
mov
test
pusha
adc
aad
add
ret
mov
cmc
mov
push
ss
xchg
xchg
clc
aaa
cwtl
xlat
sbb
in
xchg
and
mov
inc
mov
dec
dec
imul
popf
cltd
inc
cwtl
xor
inc
loop
pop
or
xor
cmp
loopne
cmpb
cwtl
stos
mov
cwtl
cmc
cmc
jle
ds
jle
test
mov
clc
rorl
jle
and
pop
cmc
jnp
push
or
inc
and
ret
das
dec
pusha
sbb
mov
sbbb
mov
push
rolb
or
pushf
test
fsubr
out
add
adc
add
sub
je
out
sub
xor
out
data16
jnp
mov
ljmp
mov
jne
imul
in
push
add
mov
cmpsb
push
inc
imul
inc
or
or
lock
aas
mulb
lods
pusha
in
and
lret
jl
cs
ja
imul
movsb
mov
mov
repnz
pop
ret
shll
push
scas
mov
loope
add
aas
sbb
pop
adc
das
iret
pop
jle
pop
cs
cmpsb
stc
jns
pop
movsb
sub
push
or
cmc
lock
jmp
sbb
jp
test
inc
and
mov
dec
in
mov
lret
leave
mov
sub
loopne
lret
movsl
xor
adc
dec
call
push
xchg
fistl
insl
and
les
xlat
and
or
cmp
pop
popf
loop
push
stc
or
out
pop
stos
fldenv
addr16
insl
out
mov
mov
xchg
and
sbb
repnz
int3
addb
xchg
or
lcall
jmp
fs
jbe
or
fistps
push
mov
mov
adc
pushf
add
pop
add
xchg
mov
es
xor
movsb
jle
mov
neg
pop
jo
pop
ficoms
mov
bound
addb
test
pop
mov
mov
daa
adc
pusha
insl
pop
push
xchg
testb
popf
lods
cld
iret
pop
mov
sbb
dec
xor
mov
add
sbb
add
ljmp
pop
in
or
out
imul
xchg
pushf
cmpsb
sbb
je
jmp
cmp
push
sbb
mov
dec
push
adc
dec
xchg
insl
dec
test
xchg
cwtl
mov
or
jae
out
sub
mov
in
pushf
pop
add
push
into
sbb
push
adc
ja
loop
ljmp
mov
mov
push
stc
je
sub
inc
adc
mov
cmp
aas
lods
out
dec
and
das
push
push
fcompl
xor
movsl
cmpsb
roll
and
dec
insl
addr16
lods
in
out
adc
js
xlat
lret
adc
push
jecxz
lods
lret
cmp
or
and
dec
push
loop
lret
push
leave
inc
fsubl
shrl
les
sbb
or
add
pusha
aam
mov
jnp
push
lahf
inc
pop
rorb
shll
int3
inc
outsl
popf
lret
xchg
pop
add
mov
loope
test
push
hlt
sbb
cmp
sbbb
arpl
mov
dec
gs
lret
mov
cmpsl
sbb
or
subb
jne
leave
mov
fstpt
push
and
sbb
addr16
andb
bound
mov
es
fs
jne
lret
sbb
mov
cmp
mov
cmp
inc
in
cmp
push
test
or
ret
xor
repnz
cmp
test
mov
incb
fs
sbb
push
int
xlat
push
nop
shll
mov
dec
pop
lea
sbb
test
pop
fildll
mov
and
mov
jp
or
pop
adc
imul
stos
add
lds
notb
mov
sbb
cwtl
dec
pop
jp
mov
pop
aaa
repnz
sahf
cwtl
vcvtss2sd
sub
cmp
push
cmc
mov
inc
adc
mov
mov
scas
mov
xchg
in
les
mov
xchg
add
lea
fwait
dec
inc
mov
shll
popw
mov
inc
pop
rorl
mov
stos
pop
aas
mov
cli
iret
loopne
or
cmpsb
mov
jae
loop
mov
popf
push
lret
jno
das
inc
aas
popa
out
push
imul
shll
or
and
sub
add
sarb
adc
call
jge
lock
lods
and
lahf
inc
pop
ret
into
addl
lds
adc
in
xchg
dec
cltd
ret
arpl
stc
dec
xchg
xor
jae
cli
mov
fsubs
lcall
ficoml
jno
mov
mov
call
je
fiaddl
insb
cli
mov
test
test
lahf
jge,pt
push
adc
movsl
cmp
sub
rcrl
xorl
inc
push
cs
scas
repz
mov
in
loope
test
xor
jbe
mov
add
mov
testb
pop
fcoml
mov
mov
and
sub
cmp
push
sub
dec
or
jge
test
xor
repnz
ds
sahf
mov
ja
iret
cmp
scas
pushf
popf
jg
lock
mov
repz
fsub
loop
shrl
pushf
lea
sub
adc
mov
fimuls
inc
aad
movsl
bound
cmp
and
lea
jnp
mov
mov
fists
or
loope
insl
fiadds
out
mov
dec
mov
ret
testl
cmc
xchg
mov
xor
mov
sbb
inc
imulb
jo
mov
xor
scas
and
outsb
js
mov
stos
sbb
sub
das
mov
mov
xor
pushf
add
sti
jmp
cmp
add
test
mov
ss
aaa
inc
fsubrs
lret
mov
xchg
sbb
lcall
add
adc
mov
dec
xchg
cmp
cmp
add
enter
xchg
ja
pop
sahf
cltd
push
lods
aas
sub
repnz
repz
mov
jns
loop
repz
mov
xor
pushf
sti
insl
out
and
mov
xchg
push
scas
jecxz
in
lods
mov
sbb
mov
cmp
mov
das
sbb
lock
scas
mov
icebp
pop
add
out
mov
sbb
incl
lahf
iret
call
and
mov
sub
push
ljmp
popf
dec
std
rorb
ljmp
fidivrl
into
inc
add
iret
fistpll
jl
inc
xor
mov
xchg
adc
int
cmp
lea
pop
jle
lahf
imul
add
imulb
adc
adcb
inc
sub
div
imul
test
outsl
push
inc
aaa
repnz
push
xchg
mov
out
cmpsb
inc
jg
lret
sub
adc
pop
mov
xlat
pop
test
jbe
xor
mov
gs
cmp
nop
add
or
pop
movsb
loopne
das
cmpsb
adc
or
xor
je
and
pusha
jbe
xor
loope
fisttpll
fwait
sbb
mov
jecxz
fldl
mov
push
cmp
push
fidivl
or
std
sarb
gs
xchg
ret
dec
outsl
icebp
fwait
push
mov
push
and
in
mov
xlat
jns
add
sub
adc
sbb
mov
add
dec
mov
push
in
rcll
pushf
lock
cmp
fcomip
xor
jo
add
stc
lcall
lods
dec
push
mov
fnop
out
shll
cmp
imul
sbb
imul
out
fistpll
pop
fsts
push
and
out
jo
rorl
xchg
imul
push
pop
popa
cmp
test
adc
xchg
push
push
mov
push
and
jns
mov
cmp
movsl
and
fcmovnb
sahf
icebp
mov
lahf
outsb
adc
mov
rcr
push
ljmp
push
xor
mov
movsl
pop
dec
cmp
push
nop
xor
xchg
mov
cmpsb
mov
sbb
dec
mov
jmp
mov
repnz
push
adc
iret
inc
inc
fadd
popa
fists
dec
lahf
popa
shl
in
cmpsb
push
jecxz
outsl
sub
or
repnz
jmp
jb
inc
mov
sarl
gs
sub
or
sub
push
mov
adc
mov
in
push
push
ret
mov
mov
sbb
sub
xor
mov
xor
movb
lret
cmp
add
lret
test
and
hlt
hlt
lock
outsl
fwait
jb
adc
sub
sub
inc
lds
out
clc
jmp
in
das
fcmovbe
jle
fidivs
mov
jae
pop
pop
pop
cld
popa
daa
mov
repnz
push
inc
push
scas
cmp
cmp
mov
sbb
cmp
or
out
push
in
mov
xor
pop
push
or
xchg
insl
mov
lcall
cld
aas
dec
inc
cmp
stos
movsl
pop
loope
dec
insl
movsb
ljmp
xchg
xchg
mov
mov
sub
lahf
jmp
hlt
cmp
decb
mov
xchg
push
or
xchg
sti
lds
add
cli
sbb
cmp
mov
mov
xor
cmp
add
mov
cmp
adc
movsl
cli
mov
cmpsb
movl
in
mov
xchg
cmp
xchg
mov
mov
push
mov
mov
rcrb
xlat
inc
and
sub
lods
cli
adcb
xor
faddl
hlt
adc
xchg
test
repz
adc
dec
popa
dec
mov
push
sbb
in
or
jl
das
test
decl
or
dec
roll
mov
pop
push
out
mov
lret
mov
movb
or
ljmp
xor
push
mov
sbb
mov
outsl
fdivs
cmpsl
mov
aam
inc
stc
into
add
out
xchg
daa
xchg
sub
loopne
xchg
push
fmuls
or
in
je
push
enter
mov
sti
imul
pop
pop
xchg
push
push
cmp
clc
test
jne
push
ljmp
dec
test
outsl
or
pusha
or
and
lods
push
data16
inc
jae
and
pusha
sti
lahf
bound
mov
push
mov
sarb
adc
test
hlt
mov
mov
fisttps
stos
aas
cmp
imul
jp
or
test
push
sar
hlt
push
pop
test
out
fnstsw
add
or
dec
test
dec
dec
and
fwait
insl
mov
std
sahf
test
sarb
in
push
mov
cmp
sbb
jnp
jbe
insb
mov
scas
xchg
repnz
outsl
jg
loop
js
and
mov
and
cmp
sbb
mov
push
bound
popa
psubw
pop
loope
pop
out
repnz
push
jb
pop
popa
insb
fnsave
mov
inc
push
dec
add
jae
fisttps
adcb
mov
cld
arpl
movsl
stos
pop
sbb
mov
pusha
push
jno
sbb
fstl
movsb
sub
cmp
enter
mov
rcr
rolb
dec
and
je
sbb
xor
loope
pop
mov
scas
imul
pop
jno
sub
jo
xor
lret
aas
xchg
mov
and
jge
mov
sub
es
loopne
ret
in
popa
pop
loope
in
push
lods
stos
push
pop
cmpsl
out
jp
stc
call
inc
xor
jns
lods
xchg
testb
sbb
int
jno
insl
cmp
mov
cli
fstl
test
and
stos
fs
pop
push
sahf
mov
add
push
jmp
pushf
add
clc
and
inc
testl
lcall
cli
inc
mov
add
mov
push
dec
stos
xchg
pop
pop
push
popa
sbbl
shr
sahf
ret
sbb
movsl
repz
es
shrb
xchg
mov
adc
pop
scas
mov
nop
in
push
mov
mov
outsl
mov
adc
xchg
ud1
fwait
lret
in
xchg
pop
and
es
sbb
fldcw
data16
mov
lcall
sub
add
mov
xchg
sbb
sti
jns
in
inc
out
mov
mov
xor
add
fistpll
test
aaa
test
xorb
lea
xchg
imul
test
xchg
mov
hlt
neg
mov
sub
push
outsl
stc
mov
xchg
addr16
scas
test
inc
add
roll
ja
cmp
fisubrs
adc
and
jbe
pop
adc
andl
add
ret
es
adc
adc
xchg
jno
mov
xchg
push
or
out
int3
jne
lods
mov
cmp
and
sub
pop
lds
popa
and
push
movsb
mov
jmp
je
and
jo
fs
fsub
ficompl
outsl
cmp
das
inc
dec
mov
pop
mov
jp
adc
or
arpl
out
pop
scas
add
pop
xor
pop
es
and
add
add
mull
test
fsub
fidivrl
jmp
mov
push
fnsave
insb
sahf
sbb
sub
out
add
xor
arpl
mov
fnstsw
lea
and
test
pusha
xchg
push
insl
dec
or
cmp
out
rcr
push
jmp
cmpsl
js
or
lcall
out
jmp
and
cwtl
push
lods
add
and
mov
inc
fidivrl
mov
daa
lock
cmc
jp
jne
stos
movsb
in
hlt
xchg
lods
mov
ror
sbb
add
lods
sbb
out
repz
mov
repz
out
add
dec
lret
mov
sahf
mov
sub
mov
mov
sbb
push
loope
cwtl
outsb
mov
mov
adc
add
sahf
xor
mov
in
sbb
or
aas
idiv
cli
cmpsb
pop
iret
sar
iret
xchg
and
jle
push
or
sub
vpcmpeqb
push
pop
add
push
mov
push
je
jb
int3
jnp
mov
loope
int
mov
mov
sbb
addr16
addr16
jns
test
inc
xchg
inc
mov
nop
sbb
mov
or
sbb
incb
movsb
lds
push
jmp
mov
jle
andl
fsubr
cmc
push
pop
mov
loopne
ret
xchg
sub
scas
or
repz
push
sub
and
cmp
and
add
js
pushfw
mov
mov
gs
pop
push
mov
inc
cld
sahf
inc
mov
push
enter
jmp
mov
sbb
jns
mov
sub
pop
shlb
mov
dec
pop
xor
dec
fucomi
xor
mov
sub
fistpll
sub
call
out
sti
cltd
adc
gs
jnp
sti
hlt
out
mov
jo
sub
rorb
jl
add
nop
scas
mov
outsb
xor
mov
outsb
mov
mov
aaa
mov
jmp
mov
ret
lods
xchg
sahf
dec
inc
or
fsubl
ljmp
or
cli
jp
lods
out
mov
fldcw
loope
and
lea
sub
xor
fmuls
inc
and
adc
mov
loopne
push
test
shlb
stos
adc
ret
push
mov
std
dec
dec
mov
cmp
mov
xchg
cmpsb
movsb
or
pop
adc
bound
adc
xor
pop
test
mov
cwtl
xor
push
inc
negb
mov
int
es
xor
dec
jo
cmpsl
xor
xchg
mov
ret
test
mov
nop
push
add
push
iret
and
rcll
xchg
lods
lret
xlat
lods
xor
sti
mov
push
pop
mov
mov
cmp
fnstcw
into
add
or
sub
mov
sbb
mov
shlb
push
aam
rorb
test
mov
jp
lcall
dec
insl
dec
jg
fs
fists
add
push
dec
jl
xor
shrb
int3
pop
je
movsb
mov
js
mov
add
aaa
aaa
insl
jmp
shlb
test
mov
int3
mov
push
jg,pn
mov
lcall
sub
xor
lret
fildll
imul
scas
pop
imul
xchg
push
shlb
in
push
cmpsb
jg
add
fdivs
test
pop
arpl
clc
mov
jo
lock
dec
fistpl
mov
sbb
jno
inc
xlat
and
gs
rcr
mov
sbb
test
scas
mov
popa
pop
push
neg
adcb
sbb
push
mov
in
scas
adcb
int3
repz
stc
xor
hlt
xchg
lahf
cmp
sub
mov
es
daa
adc
jae
in
mov
mov
xchg
jl
cmp
xchg
mov
shrb
pop
sti
ljmp
fistpl
rcll
and
mov
pop
xor
push
cmpsl
test
add
js
lret
and
jbe
inc
pop
imul
lds
push
mov
adc
push
adc
test
popf
pop
jns
das
pop
jbe
push
cmpb
dec
jge
cmp
addr16
stos
xchg
stc
pop
cs
jg
sub
loope
hlt
mov
push
iret
enter
xlat
sub
adc
aam
jmp
scas
and
outsb
fcomi
cmp
xor
lret
fdivrs
out
aaa
xorps
test
arpl
push
ljmp
lret
stos
loope
xchg
xor
pop
cld
fldt
test
jle
je
jmp
xor
push
or
pushf
les
leave
test
cmp
test
ja
lods
sbb
lret
insl
add
push
add
cmp
mov
sbb
add
adc
xor
jne
xchg
push
jge
es
mov
sti
icebp
inc
shlb
fwait
jmp
jmp
cmp
pop
sbb
xchg
std
add
cmp
mov
orb
inc
and
rcrl
fldt
add
sbb
daa
addr16
mov
fucomp
xlat
cmpl
std
dec
test
lea
mov
lret
mov
mov
lods
data16
fbstp
faddl
arpl
fcomp
lock
cmpsl
inc
xchg
test
rorb
fimuls
mov
shlb
push
mov
sub
dec
mov
pop
jae
add
inc
mov
lock
scas
nop
adc
int3
or
pusha
push
sbb
xlat
arpl
leave
mov
pop
bsf
repnz
sbb
mov
push
push
add
ss
and
outsl
push
inc
iret
cli
imul
repz
push
xor
loope
repz
sbb
sub
mov
insb
xor
shlb
clc
xlat
xchg
das
fcomp
and
xor
or
push
push
xor
ret
push
imul
push
jns
divl
xor
mov
mov
ficompl
in
out
and
lods
ret
imul
xchg
sti
lea
jg
mov
cld
sub
add
jecxz
popa
inc
cwtl
nop
cld
sbb
sar
daa
cmp
orl
aas
arpl
pop
sub
add
xor
scas
jle
jb
lods
js
dec
aas
xor
daa
xlat
adc
sbb
mov
inc
clc
bound
mov
or
idivb
mov
pop
ficoms
jo
adc
xchg
push
xchg
ret
in
clc
jmp
xchg
aam
aas
mov
fimull
inc
std
out
shll
mov
adcb
aad
inc
lods
xorl
fnstsw
leave
pop
dec
outsb
add
mov
loopne
in
rcrb
bound
inc
pop
aam
popf
and
sbb
jge
jle
std
mov
cli
cld
or
aas
and
adc
jl
mov
adc
jnp
mov
inc
lret
push
pop
out
outsl
data16
aaa
mov
idivl
pop
scas
inc
fisttps
loopne
adc
inc
jns
adc
rorl
jno
iret
ret
test
and
loopne
scas
shlb
hlt
insl
fwait
push
loopne
fbld
lock
iret
adc
inc
and
and
dec
xchg
sti
xor
xor
enter
pusha
flds
int3
cmp
add
jl
mov
xchg
cwtl
inc
jno
xor
sub
popf
jbe
push
lods
mov
cmp
xor
loopne
lods
out
inc
stc
xor
sbb
pop
cmp
mov
xchg
and
pop
xchg
outsb
sti
cmp
pop
insb
ja
push
push
mov
push
sub
dec
push
push
lds
mov
les
dec
cwtl
cmpsb
cmp
dec
inc
in
fdivs
test
scas
lods
sub
fcoml
mov
add
cmp
xor
in
sbb
movsl
lcall
shl
fsubrs
or
lcall
inc
and
lods
ds
mov
jge
mov
arpl
push
out
and
jle
jns
xchg
outsl
inc
xchg
and
adc
movb
in
inc
in
adc
push
push
sbb
cli
loopne
xor
mull
leave
ss
mov
leave
mov
xor
inc
out
addr16
in
cmpb
vpopcntd
mov
fidivrl
xchg
stos
stos
pop
mov
push
mov
jp
add
aaa
and
out
inc
push
inc
cwtl
lcall
xchg
jno
pop
mov
lock
in
in
pop
cmp
cmpsl
xlat
sahf
cmpsl
add
cmpsl
ret
mov
stc
loop
pop
mov
rcl
add
xchg
adc
mov
sub
xchg
adc
int3
inc
lahf
imul
enter
xchg
xchg
dec
cld
inc
pusha
sbb
loop
adc
imul
fdivl
or
xor
and
cmpsl
jb
inc
test
clc
sbb
xchg
jp
rcll
add
push
and
sub
lock
pop
push
xchg
dec
test
pop
or
imul
xor
adc
repnz
or
arpl
xor
vpcmov
sub
repz
jg
cmpsb
lds
push
push
imul
mov
aaa
adc
mov
out
loop
jo
icebp
cmpsl
cmp
outsb
mov
mov
xchg
fsub
fsts
mov
dec
mov
mov
pushf
xorb
pop
out
cmp
mov
mov
lret
jmp
test
jmp
lock
pop
pop
or
mov
scas
pop
push
lret
xor
dec
adc
test
add
inc
and
cwtl
push
inc
jle
sbb
enter
xchg
add
jp
lock
rorl
int
or
fs
cmpl
movsl
xchg
inc
test
iret
test
cmp
sub
aam
lods
pop
inc
ror
test
subb
mov
pop
lret
aad
repnz
jno
lea
std
fldt
cmp
out
xor
add
aam
mov
popl
mov
mov
jae
adc
push
arpl
lret
jge
mov
test
idivl
mov
insl
inc
mov
push
cmpsl
jmp
mov
mov
dec
xlat
adc
jae
fstpl
mov
mov
stc
pop
popf
int
sarl
xor
cltd
dec
mov
lods
movsl
mov
add
xor
mov
push
lret
lret
push
inc
fsubl
cltd
cmc
mov
adc
test
push
in
mov
cli
scas
mov
push
das
aaa
lea
int
aad
andl
cmp
push
fcomps
mov
mov
xchg
inc
add
add
and
cli
dec
stos
hlt
add
or
cmc
xlat
and
add
inc
dec
dec
mov
pop
ficompl
inc
stos
sub
mov
rol
xchg
or
inc
loop
and
scas
mov
fidivl
ds
push
mov
cli
adc
pop
or
cmp
sbb
cmp
pusha
insl
roll
loop
inc
push
gs
sub
imull
loopne
adc
je
xchg
bound
xchg
mov
testb
mov
lahf
push
das
sbb
sbb
in
aad
repnz
jbe
shrb
mov
ja
out
inc
es
outsl
std
shrl
sub
cmp
fildll
aas
mov
push
mov
into
sub
xchg
push
add
sub
push
or
add
cmpsl
fisubrl
fists
aaa
or
sub
div
xor
arpl
in
rcr
sbb
add
cmp
rcrb
mov
sub
xchg
rorl
jno
and
int
ret
sub
mov
shr
icebp
sub
in
mov
lahf
and
dec
push
and
inc
sub
rcrb
iret
fistps
sbb
push
in
and
mov
jb
popa
cwtl
xchg
fiaddl
dec
xor
lret
test
pop
adc
sbb
push
mov
repnz
push
jns
cmp
or
add
pusha
je
int3
jg
daa
cmpsl
aad
pop
outsb
fsubrs
push
push
sbbl
sahf
dec
xchg
mov
or
je
mov
adc
pop
fs
out
sub
aaa
pop
imul
cmp
sub
rcrl
mov
loope
test
daa
into
outsl
mov
loopne
daa
mov
lds
pop
iret
lret
aas
xchg
test
daa
dec
or
add
pop
test
and
cmpsl
lds
cmc
cmp
fdivrp
enter
and
lcall
push
cmpsl
pop
les
mov
xor
push
imul
leave
mov
dec
push
loop
push
xchg
lock
cmp
movsl
add
push
cmp
jecxz
fldl
jnp
jp
xorl
rorb
outsb
mov
je
cmp
xchg
push
ret
xor
loopne
fstpt
fistpll
adc
push
outsb
inc
cmpsl
fmull
pop
jnp
test
adc
popa
sahf
jae
mov
lret
pop
cmpsb
cmp
rol
adc
inc
mov
call
and
xchg
mov
lock
cmc
ljmp
inc
add
cli
je
gs
lret
jbe
mov
imul
jo
pushf
rol
or
mov
add
subb
lods
les
movsb
and
stc
call
jp
mov
jb
mov
mulb
maxps
cmpsl
jmp
push
cmpsl
sahf
push
scas
lahf
ja
or
xchg
bound
sbb
add
inc
pop
xchg
mov
cmp
jge
add
push
pop
hlt
mov
or
push
sbb
mov
inc
in
mov
pop
add
dec
fwait
inc
xchg
mov
dec
adc
jno
inc
or
mov
fs
dec
loop
mov
jg
popa
sub
jae
push
adc
add
mov
test
test
sbb
cs
outsl
movsl
lret
jp
iret
push
daa
shlb
int
les
clc
mov
jmp
pop
lahf
add
ffreep
jl
inc
popa
mov
ret
aas
inc
test
shlb
pusha
sub
and
and
nop
sbb
pop
and
dec
mov
mov
add
mov
aad
mov
icebp
cmpsb
fwait
ds
fwait
ror
jb
jns
lds
push
inc
sbb
repz
imul
push
out
and
push
or
mov
fistps
mov
fimull
sub
arpl
enter
mov
test
mov
inc
in
popa
cmpsb
xchg
shrb
dec
ret
push
cmpsl
insl
mov
loope
push
shll
push
pop
negl
push
xor
test
daa
repz
inc
xor
bound
cmp
dec
add
clc
movsl
sub
pop
cs
das
fs
pop
imul
or
iret
not
divl
std
mov
cmp
push
stos
mov
insl
outsb
cmpsb
sbbl
repz
mov
sbb
add
mov
lcall
stc
jg
adc
or
jl
jbe
sbb
fs
mov
daa
mov
adc
jne
mov
xor
add
rol
inc
in
mov
mov
in
pop
fildl
add
adc
cwtl
inc
cs
fsub
push
jp
adc
out
pushf
mov
sbbb
sub
cmpsl
call
cmp
and
shrl
adc
sub
xchg
xor
xor
adc
lret
mov
mov
test
sbb
loop
loopne
mov
dec
sbb
cmc
sub
mov
push
jge
mov
jo
xchg
fld
sbb
movsl
ljmp
lahf
popa
lods
sub
lahf
stc
sbb
leave
pop
sub
mov
mov
cmp
inc
and
sti
fdivs
in
jbe
sar
dec
adc
int3
sbb
adc
xchg
sbb
pop
enter
xchg
mov
xchg
stc
mov
jno
clc
repnz
gs
mov
pop
insb
jbe
mov
sub
jo
push
gs
cli
add
push
mov
sub
mov
mov
les
cltd
js
lea
lods
in
push
lahf
mov
mov
repz
push
sbb
gs
dec
sbb
add
pop
repnz
leave
imul
mov
pop
jne
imul
ja
and
dec
dec
mov
mov
inc
cltd
sub
inc
fnsetpm(287
adc
cld
dec
dec
mov
or
adc
aas
push
dec
inc
push
out
iret
lahf
xchg
xchg
xorb
xchg
es
int3
jecxz
in
fsubs
mov
rolb
mov
inc
xor
frstor
lods
test
push
scas
mov
pop
testb
lahf
pop
in
sbb
dec
adc
gs
scas
dec
imul
aaa
mov
jle
pop
shlb
adc
adc
out
mov
push
andl
loop
dec
test
push
outsb
movsb
shlb
dec
jecxz
xor
cld
push
roll
mov
ficoms
rolb
mov
xchg
cmp
scas
push
cli
std
push
sub
aad
pop
pop
fcomps
mov
push
pop
mov
xchg
stc
cmp
push
mov
cwtl
jnp
outsl
shr
jecxz
and
les
adc
sub
js
je
jb
inc
movsb
popf
pop
sbb
pop
divb
daa
cli
popa
aas
repz
lret
into
cld
push
roll
add
inc
push
and
das
dec
fdivrl
mov
insb
insb
mov
out
and
testb
mov
mov
sub
add
mov
and
mov
xlat
jbe
cmp
in
xor
cmp
sub
push
stc
xor
jge
or
out
emms
cwtl
cmpsl
lret
loopne
inc
add
mov
and
hlt
sbb
sarl
mov
loopne
sbb
jb
push
adc
inc
test
dec
mov
xchg
sub
popa
and
cmc
adc
aad
or
movb
pop
xor
lea
addr16
movsl
mov
jae
cmpsl
push
shlb
scas
inc
dec
pop
xchg
xchg
push
jecxz
orb
aas
xor
sbb
jns
idiv
jno
insl
mov
int3
mov
adc
add
cmp
out
adc
and
xchg
repnz
pop
inc
nop
outsb
mov
push
dec
in
pop
sbb
push
or
mov
dec
dec
push
push
mov
add
test
cltd
jge
in
hlt
outsb
mov
sahf
jbe
pop
pop
addr16
movsb
jmp
add
loope
pop
inc
repnz
iret
inc
outsb
inc
orl
sbb
inc
movb
aas
lock
or
sbb
into
dec
lea
push
sbb
add
sbb
sti
cwtl
inc
mov
mov
adc
sub
cmpsl
out
dec
unpcklps
mov
sub
inc
sbb
push
neg
lods
dec
jno
add
inc
js
test
dec
stos
adc
cmpsb
xchg
test
ret
dec
lcall
inc
push
pop
push
adc
test
les
xor
int3
pop
scas
jae
push
and
aaa
stos
pop
cmpsl
xor
jns
pop
jg
xor
test
xor
xchg
decb
cltd
lock
insb
dec
push
es
dec
pop
push
movsb
or
mov
mov
pusha
mov
inc
addb
in
lods
ss
dec
cmc
ds
push
pop
jge
jg
push
daa
pop
movsb
inc
mov
jae
cltd
cmpsb
out
pop
jge
xchg
stos
mov
inc
mov
loopne
inc
push
xchg
arpl
mov
sub
decb
pop
cmpsl
add
add
sub
into
icebp
mov
imul
stos
sub
test
lret
adc
push
pop
cmpsl
icebp
fnsave
mov
dec
jnp
push
pop
mov
sub
sbb
and
mov
mov
add
notb
lods
jns
add
add
mov
jns
pop
pop
dec
fsubs
xor
push
incb
mov
and
push
outsl
or
loop
in
rclb
sub
test
mov
sub
sbb
pop
shrl
jno
xchg
popl
out
pop
fdivs
inc
leave
ror
pop
rorb
dec
dec
adc
xor
and
in
cwtl
mov
lahf
add
xor
push
jg
sbb
adc
adc
out
cmc
mov
shr
jp
rclb
mov
pop
xor
sub
adc
test
pushf
adc
imul
bound
push
mov
test
xchg
int3
lock
inc
shll
imul
jle
dec
or
mov
andl
pushf
data16
mov
and
inc
mov
popa
dec
mov
js
leave
mov
cmp
inc
daa
add
mulb
pushf
push
push
sub
aam
pavgb
call
hlt
daa
pop
mov
push
ret
out
jae
xchg
inc
lods
subb
inc
mov
mov
jbe
xor
nop
inc
pop
jle
out
mov
loopne
lods
aad
rcll
lret
or
push
jecxz
mov
in
mov
mov
xor
cmp
in
fcompl
es
mov
add
mov
add
mov
jl
aaa
pop
cmp
fmull
cmp
fisttps
or
sti
dec
xor
mov
js
sbb
sub
fwait
stc
fcomps
rclb
dec
push
dec
jae
daa
lds
inc
jbe
sub
pop
jg
loopne
fsts
aas
xchg
mov
pop
xchg
out
hlt
jbe
mov
test
into
fnstcw
fiadds
mov
cltd
mov
and
and
sub
dec
adc
sub
push
loopne
lock
ss
mov
in
vpandn
push
rol
add
jmp
lock
or
int3
out
dec
pop
xchg
out
push
movsb
mov
pop
in
popa
xor
scas
sub
subl
fiaddl
push
fsin
xchg
and
cmc
sti
sbb
and
call
test
sub
das
mov
push
stos
leave
loop
gs
and
cmpsl
cltd
clc
iret
pop
jo
dec
nop
lods
adc
insl
and
leave
in
cmp
scas
ja
dec
pop
dec
mov
test
sbbb
jno
repnz
mov
mov
divb
push
lods
rol
and
and
stos
pop
gs
imul
in
rorl
ss
insb
sbbb
jecxz
adc
adc
movsb
xor
cwtl
out
sbb
pop
push
mov
push
jecxz
repnz
lea
xchg
in
sub
xchg
aad
mov
push
xchg
mov
fcompl
push
add
insl
add
sbb
test
lock
sub
leave
lret
fsqrt
insb
addr16
scas
mov
or
arpl
lods
call
or
ljmp
inc
test
jbe,pt
in
and
mov
adc
outsl
or
jmp
xchg
inc
mov
push
sbb
cwtl
imul
out
out
mov
add
cmpsl
and
adcl
xorb
and
aam
popf
xchg
das
inc
insl
pop
push
pop
push
cmp
jle
enter
insl
aaa
mov
xchg
iret
push
shrb
aad
loope
mov
sub
mov
jmp
jbe
enter
add
jae
mov
lds
les
push
lods
sub
dec
cs
pushf
or
sub
ret
pusha
xchg
imul
xor
sti
orl
rorl
mov
in
scas
inc
fisttps
mov
and
jl
scas
inc
xor
mov
movsl
cld
lret
pop
in
cmp
jp
scas
stc
pop
push
jns
clc
cli
pop
testb
push
cmp
adc
sbb
mov
pop
pop
sbb
sbb
jl
lds
cltd
outsb
fidivs
and
orl
or
lock
cmp
aas
push
xchg
les
pop
pop
cltd
mov
ja
jg
push
push
mov
cmp
jge
push
mov
out
add
subb
push
jecxz
mov
rcr
push
xchg
popf
xor
nop
in
ja
hlt
mov
jbe
lea
insb
xchg
xchg
scas
xchg
jbe
jnp
setl
or
lcall
mov
mov
loop
or
add
jae
test
mov
mov
test
pop
call
fwait
sbbl
mov
clc
mov
popa
in
mov
cmpsb
xor
cmp
dec
pop
js
gs
dec
xorl
sub
sbb
jmp
mov
rol
inc
ds
cs
add
sub
popl
push
fldenv
shll
sbb
pop
and
enter
or
sahf
into
jecxz
jge
shrb
faddl
inc
insl
cmp
shll
dec
xchg
lods
dec
fisttpll
dec
pushf
push
dec
push
aaa
fdivl
addr16
popf
add
sbb
pushf
jae
inc
xchg
dec
fisttpl
and
xor
jae
push
arpl
jno
stos
divb
or
pop
jg
fisubl
cmp
lock
push
cmp
lods
bound
movsb
das
rclb
cmp
fisttpll
ljmp
bound
pop
lret
sub
xchg
inc
add
and
or
pop
inc
mov
pop
mov
jge
lahf
xor
out
test
add
dec
sbb
mov
inc
int3
or
js,pt
fcmovnbe
cmp
or
xorb
test
fcmovne
mov
clc
daa
pop
cli
push
lahf
aas
ljmp
jl
inc
inc
stos
cltd
cli
sbb
out
addb
add
sub
mov
dec
cmpsb
adc
rclb
mov
les
nopl
sub
daa
jg
arpl
out
xchg
rcll
ret
imul
sub
pop
in
mov
cli
out
cmpsl
popa
jnp
inc
pop
or
ret
mov
daa
add
push
in
pop
xor
mov
and
popa
stc
les
inc
jno
rcl
mov
lods
ret
stc
sti
xchg
mov
std
jp
lds
fildl
sahf
dec
cmp
cmpsb
test
sub
roll
mov
jecxz
and
iret
xorb
adc
fmuls
ror
dec
dec
mov
les
ds
test
rcrb
mov
addl
aas
sub
pop
xchg
xchg
dec
and
in
in
fldl
in
repz
hlt
mov
add
pop
les
adc
push
outsb
addr16
popa
mov
in
dec
adc
leave
movsl
jge
test
push
or
mov
aas
or
push
mov
cmc
pop
ds
ja
cmc
lds
ja
test
xor
fstps
cmp
daa
pop
mov
sub
cs
data16
xchg
ds
mov
jg
outsb
pop
out
in
inc
add
stos
hlt
roll
scas
fnstenv
lahf
mov
xor
cmc
ja
and
fistps
lea
cmp
loopne
insl
add
sub
push
and
cltd
loopne
add
pop
ljmp
push
mov
fs
cwtl
dec
test
aaa
loop
fwait
fwait
stc
push
pop
in
mov
loope
or
jmp
rcrb
mov
inc
aas
lods
punpcklbw
push
imul
mov
sub
xchg
sub
pop
pop
and
lds
out
pop
mov
push
ja
cmp
loope
pop
pop
ljmp
test
jmp
imull
jns
mov
popa
and
adc
dec
std
pop
inc
and
loop
push
sarb
xor
roll
hlt
in
jo
ljmp
mov
or
add
pop
add
mov
fdiv
fsubrs
call
or
sub
dec
jl
mov
cmc
inc
sarl
jne
dec
dec
sub
ja
ljmp
jg
insl
fnstsw
jo
xlat
fwait
jecxz
mov
sbb
repnz
add
pusha
inc
ret
daa
xchg
pop
cmp
ds
xchg
cs
dec
xchg
push
fwait
out
test
xchg
js
es
xchg
mov
aas
push
cmpsb
das
in
aam
mov
adc
jl
push
jno
add
fwait
jae
into
pop
in
sbb
enter
and
sahf
fwait
pop
add
lcall
in
or
jne
mov
mov
pop
or
push
cltd
loopne
loop
mov
jmp
xor
in
pop
adcb
pop
movsb
fcoms
into
add
andb
add
cmp
ret
inc
mov
iret
and
dec
sahf
leave
pop
cwtl
sub
test
mov
sub
cld
loopne
test
mov
pop
pop
push
lahf
or
xchg
hlt
mov
in
lret
cwtl
mov
sub
in
not
ficomps
adc
xchg
out
mov
inc
add
cmp
mov
and
xor
mov
rcll
xchg
js
imul
inc
sub
pop
lea
add
scas
xor
test
jp
aam
jne
mov
ljmp
outsl
dec
adc
xlat
push
push
xchg
mov
js
ja
ss
sub
mov
cmpsb
movsl
push
sub
or
fdivs
shll
lods
push
sub
inc
ret
sub
lret
add
xchg
lods
mov
inc
mov
adc
xchg
mov
xchg
adc
mov
push
test
xchg
inc
pop
sub
iretw
add
test
sub
bound
popa
cltd
dec
jl
pop
mov
icebp
faddl
mov
cmp
imul
js
inc
addl
mov
pop
dec
lock
cmp
insb
sub
bound
xor
fsts
jne
dec
mov
add
pop
push
cli
xchg
or
cmpsl
in
mov
jne
mov
mov
filds
shrd
xchg
in
js
push
adc
or
xchg
sbb
jns
cmpsl
jns
cmp
fimull
add
mov
pop
or
jae
or
mov
push
pop
add
dec
clc
fistpll
cmp
inc
xor
mov
cmp
xchg
push
jae
or
imul
sahf
jbe
or
loopne
adc
mov
lea
push
cmpsb
jle
js
jmp
xchg
dec
dec
pop
mov
lret
jge
fidivl
pop
and
outsl
mov
jmp
fs
test
dec
lret
xchg
data16
imul
stos
lock
mov
aaa
xchg
push
xor
jb
xlat
mov
mov
mov
repnz
std
pop
xor
fists
sbb
insb
and
js
and
mov
xchg
rcrl
adc
or
and
inc
leave
jnp
push
jp
mov
rcl
lods
clc
fnstcw
xor
out
andb
mov
insl
sub
enter
dec
rcrl
arpl
dec
inc
enter
add
inc
leave
mov
mov
mov
xor
pop
mov
cwtl
pusha
aas
stos
faddl
xchg
sarl
push
xor
push
rclb
inc
xchg
stos
int3
lods
inc
sahf
aam
mov
lea
mov
lods
addr16
test
cmp
inc
divl
inc
push
mov
mov
sub
push
fs
test
pop
xchg
jae
xor
arpl
sbb
cli
inc
inc
aad
push
jecxz
cmpl
jp
and
shlb
xchg
jns
mov
or
inc
mov
inc
std
loopne
lds
mov
in
into
inc
mov
pop
cmc
icebp
stos
outsl
rclb
loope
int3
jmp
orb
and
in
xchg
enter
mov
pop
mov
and
es
jae
in
in
jno
out
aas
les
push
mov
dec
sbb
add
pop
xchg
adc
jnp
push
dec
wbinvd
mov
pop
dec
jo
sbb
mov
scas
sti
push
adc
add
fisubl
test
in
pusha
in
aaa
fnstsw
adc
mov
xchg
sbb
ds
and
mov
jp
pushl
dec
pop
mov
stc
xor
push
in
or
mov
mov
or
xor
mov
popf
inc
pop
xor
loope
mov
and
fstpl
jo
cmc
fnsetpm(287
xchg
ss
mov
cmp
xchg
jecxz
pop
adc
movsb
dec
loope
fstpt
test
add
loope
sub
and
mov
cli
data16
mov
jnp
lock
mov
mov
data16
nop
dec
dec
insl
ret
ret
jecxz
or
inc
add
int3
cmp
inc
jmp
dec
icebp
mov
jno
sbb
mov
cmp
imul
cmpsl
or
cmp
jmp
shl
in
mov
sub
gs
int
movsb
inc
fidivrl
jns
jae
cld
mov
fcoml
pop
dec
jbe
pop
fstpt
xchg
push
addr16
imul
or
sahf
xchg
scas
push
mov
add
or
inc
jo
je
rcr
fs
mov
add
out
aas
adc
mov
in
jne
ret
or
movsl
hlt
mov
push
adc
pop
stos
insb
pop
je
dec
outsl
stc
ficoms
inc
xchg
push
cs
cmp
or
cmpsl
mov
nop
aas
pop
sub
dec
mov
out
jg
jb
outsl
shll
and
icebp
jecxz
pop
xor
arpl
js
test
or
pop
cwtl
push
or
dec
ljmp
push
loopne
test
js
pop
test
cli
leave
push
pshufw
aaa
xchg
mov
mov
jp
sbb
sbb
ljmp
jbe
lock
sub
mov
and
les
mov
xchg
adc
dec
mov
cltd
push
notl
out
je,pt
xchg
insb
dec
jle
loope
outsl
jo
sbb
jo
fmulp
pop
rcrl
negb
cmp
jge
dec
rcr
add
mov
and
push
push
loop
sub
enter
lock
mov
add
scas
cwtl
sbb
or
call
pusha
loope
cmp
inc
mov
jae
cmp
sbb
mov
ret
roll
cmp
pop
sahf
mov
scas
jns
js
adc
push
mov
hlt
aam
je
inc
daa
jl
sahf
es
out
mov
mov
inc
mov
int3
mov
pop
and
jb
dec
sbb
and
lret
lret
jmp
cmp
inc
lds
add
movsb
dec
lret
jp
leave
ljmp
popa
idivl
pop
andnps
insb
push
mov
fdivs
gs
mov
data16
sbb
sti
pop
mov
aas
mov
ljmp
leave
sbb
aaa
cmp
push
add
out
loopne
or
out
push
and
loop
xor
lret
cltd
ss
or
adc
cli
pusha
jge
jge
lret
sar
in
mov
movsb
jmp
lea
test
dec
stos
fsubrs
mov
mov
incl
xchg
jbe
lods
jae
aad
cltd
sub
ss
ljmp
leave
push
mov
and
bound
xchg
add
inc
mov
and
sbbl
fsub
movsl
dec
imul
in
daa
or
aam
test
sbb
jae
and
sbb
and
sbb
rcll
je
cmc
jmp
jns
cmpsb
ljmp
or
or
add
or
xchg
es
or
adc
pusha
pop
mov
push
repnz
add
js
lods
mov
shrb
mov
test
jb
mov
jns
enter
js
xchg
fbstp
aas
adc
ja
xlat
pop
loope
insl
lret
jo
bound
sub
cmp
pop
std
ret
mov
in
add
bound
cmc
push
ljmp
mov
sub
sub
lods
fucom
mov
and
push
push
cmc
mov
je
push
stc
cmp
loopne
cmp
cmp
push
and
out
mov
fcompp
inc
insl
ss
test
inc
adc
cmp
frstor
arpl
in
outsl
xchg
or
call
mov
jb
mov
cmc
inc
popaw
pushf
fdivs
lds
popf
and
lahf
in
cmp
xchg
shlb
and
in
adc
xchg
sti
sbb
push
fiadds
lods
movsb
cmp
mov
lods
xchg
xor
scas
aas
lods
loope
popf
std
loope
addr16
loop
popa
xlat
enter
cwtl
mov
lock
in
sub
sbb
cs
mov
xchg
or
inc
jns
jmp
subl
lea
jl
cmc
pop
aad
outsb
dec
jae
sbb
mov
subl
dec
enter
icebp
scas
dec
xchg
dec
push
adc
ret
nop
jl
in
mov
jge
fldcw
push
mov
xchg
xor
and
push
enter
mov
mov
pop
dec
into
aas
test
inc
cmp
enter
xchg
jmp
cmp
sub
stc
sub
stos
or
cmp
ds
adc
aad
adc
add
pusha
inc
sbb
aaa
std
mov
xchg
je
dec
adc
test
mov
dec
aam
sbb
sub
cwtl
mov
fs
rorl
sub
repz
mov
cmp
jns
xchg
xlat
out
mov
daa
mov
jns
dec
xor
adc
mov
mov
jecxz
movsl
leave
daa
sbb
cmpsb
orb
add
push
xor
cmp
movsb
aad
ret
jl
pop
and
dec
jg
dec
or
jb
jmp
push
outsl
push
mov
xchg
lods
es
pop
lret
repz
adc
lret
imull
adc
jnp
jle
mov
jbe
cli
lods
outsl
js
jnp
cld
mov
inc
lods
sub
and
stos
xchg
sub
in
push
mov
mov
jbe
std
arpl
mov
pop
aad
pushf
cmp
mov
push
out
cmpsb
aas
cmc
jo
dec
int3
mov
push
inc
ret
push
stc
mov
iret
test
addb
inc
mov
and
sub
scas
idiv
jns
stos
lods
sbb
cltd
push
hlt
fsts
add
aam
cmp
push
lods
dec
adc
mov
lds
out
sbb
inc
sub
adc
xchg
xor
outsb
fisttpll
cvtpi2ps
fisttps
imul
sub
pop
inc
and
sbb
inc
cmp
and
jbe
cmpsl
push
jne
sbb
lcall
push
mov
ja
test
lret
xchg
xor
mov
ror
cli
sahf
sub
mov
sub
ds
stos
les
rcr
lea
ret
cld
ja
adc
sahf
pop
loope
add
jns
xchg
icebp
jmp
test
int
mov
inc
cmp
popa
repnz
repz
pusha
fistpl
ja
outsb
dec
and
lds
test
je
jle
xchg
mov
push
nop
mov
test
outsl
and
cli
jb
cmp
adc
sbb
int3
adc
push
or
int
mov
and
push
outsl
test
sub
iret
fs
pusha
pop
hlt
fdivrs
mov
dec
rol
jns
xchg
sub
rcll
or
dec
ja
jae
sbb
notl
and
test
jnp
jns
jg
out
mov
sahf
lods
sbb
arpl
jne
test
cld
int3
xor
fcomp
push
and
xor
mov
add
js
mov
jle
sub
lds
mov
xchg
jmp
jmp
xchg
sub
loope
add
xor
movsl
fisubrs
xchg
xchg
mov
adcb
ret
fmulp
inc
ja
pusha
and
pop
add
cltd
sub
sar
dec
add
in
push
jns
repnz
rorl
inc
gs
loopne
je
jg
fwait
xor
push
and
mov
inc
mov
icebp
jg
mov
xor
lea
cmp
rol
push
pop
cli
xchg
stos
dec
stos
mov
cmp
cmp
ja
loop
sbb
and
xor
push
mov
popf
fildl
mov
emms
mov
stos
loope
jp
scas
jmp
cltd
ja
lcall
xchg
les
inc
dec
rclb
sub
div
push
and
pop
or
addb
or
adc
and
sub
mov
pop
scas
xabort
mov
xor
ficompl
xchg
mov
push
es
fmuls
fidivrl
jge
bound
push
dec
xchg
and
pop
int3
into
mov
jg
jmp
and
jns
cmp
int
xor
jecxz
in
in
push
mov
dec
jl
cmpsb
lods
dec
inc
push
add
stos
dec
cmp
scas
jns
stc
hlt
sub
add
ds
pop
dec
push
inc
sbb
mov
lds
jp
mov
mov
mov
ss
repnz
xor
fldenv
sub
sub
or
filds
mov
sub
pop
and
mov
repz
movl
dec
sbb
movsb
adc
jae
jge
add
xor
xor
mov
shrb
xor
mov
hlt
xlat
imul
ja
jmp
mov
jae
add
in
loopne
stc
inc
cmp
fcoml
ljmp
dec
insb
adc
xor
cmpsl
sbb
popf
nop
cltd
and
mov
les
inc
stos
mov
push
or
stc
insb
xchg
jmp
mov
sbb
push
cltd
out
jg
xchg
jb
add
fistpl
pop
jp
mov
imul
dec
popa
mov
sbb
call
inc
dec
sbb
push
mov
jbe
add
in
sti
jns
xlat
cmp
cli
das
mov
xor
repnz
mov
insl
cmpsb
shll
add
sub
arpl
xor
pop
xchg
jle
xor
pop
stc
aas
push
cmpsl
dec
sbb
dec
test
rclb
loope
dec
je
jp
lock
sbb
cmp
addr16
scas
ss
cmp
jg
in
jmp
jae
fists
inc
mov
push
mov
rclb
xchg
sbb
outsl
ror
xchg
inc
data16
sbb
test
mov
pop
lret
insb
cwtl
adc
es
pop
push
lea
jp
push
push
jl,pn
mov
lret
popf
daa
mov
jg
xor
mov
jb
aaa
aas
out
jmp
xor
dec
cmp
negb
outsb
or
xchg
gs
fabs
xchg
jp
inc
push
adc
jp
bound
sub
jne
dec
cmp
xchg
xor
sub
adc
movsb
dec
inc
das
push
sub
inc
xchg
sub
lock
aaa
jb
repz
mov
xchg
movsb
jge
scas
dec
pushf
out
stos
ss
dec
push
pop
cmc
jb
bound
iret
cltd
sub
and
in
int3
inc
inc
sarb
clc
icebp
sbb
and
out
and
inc
inc
add
cs
out
push
call
ficoms
shl
aad
les
cmc
mov
outsb
sahf
dec
mov
sbb
test
sbbb
xor
mov
inc
push
scas
shrb
loope
add
cld
mov
cmp
mov
lock
add
divb
push
movsb
jmp
cmp
out
mov
int
cld
dec
jno
cmp
pop
sbb
and
mov
lds
lods
cmp
enter
cmc
xchg
outsb
or
bound
mov
mull
int
or
mov
rcrl
xchg
es
movsl
push
stc
push
aaa
xchg
and
cmp
fst
add
loope
ret
pop
and
shrl
popf
jb
lcall
mov
pop
movsl
mov
aas
dec
sub
jl
dec
xchg
clc
cmp
inc
sub
inc
inc
lret
cmp
inc
arpl
into
fadds
gs
xchg
and
popa
stos
mov
sub
mov
mov
inc
bound
push
dec
aad
lods
xchg
dec
pop
mov
aaa
push
inc
mov
mov
xlat
out
or
ds
lahf
or
jecxz
xchg
and
jg
xchg
shrb
push
pop
clc
das
sbb
insl
fldcw
mov
inc
bound
jecxz
notb
xchg
and
mov
int3
jne
xchg
addl
and
jae
mov
cmp
pop
test
mov
xlat
push
dec
mov
xchg
mull
or
mov
cmp
rclb
dec
fistpll
jle
jne
test
pop
add
lcall
pop
in
mov
cmp
lds
xchg
dec
mov
mov
or
xchg
insl
inc
in
notb
es
aad
pushf
mov
adc
add
fists
xorl
mov
lock
xchg
cmp
je
push
lods
jno
adc
pop
push
inc
ret
jae
stc
xor
jecxz
or
push
mov
int3
imull
mov
data16
addr16
or
cld
sub
jno
mov
xchg
cmp
or
shlb
sbb
push
adc
stc
sub
fcoms
xchg
cmc
sahf
fildll
push
jns
cwtl
xor
ret
jmp
fcos
pop
pusha
xchg
and
inc
sbb
and
stos
mov
sub
fbstp
mov
push
pop
mov
cld
sub
dec
adc
mov
jae
movsb
in
dec
push
nop
sbb
mov
adc
mov
pop
sub
pop
cmp
inc
pop
jo
in
inc
mov
pop
lods
lahf
push
out
dec
mov
les
outsl
push
dec
insl
pop
lock
rcrb
flds
mov
mov
pushaw
xor
mov
jne
sbb
cmp
clc
sbb
or
dec
mov
push
mov
push
sub
pop
sub
rcll
jmp
out
sbb
jmp
iret
ret
arpl
ret
call
push
cmpsl
lahf
pop
sub
mov
jnp
int3
pop
sub
pop
test
test
or
loop
and
mov
lock
pop
addl
outsb
and
mov
xor
add
mov
js
cmp
loopne
xlat
xchg
icebp
jbe
push
sbb
mov
idiv
fimuls
clc
int3
les
jns
out
jae
push
insb
add
pop
push
mov
mov
xor
aaa
call
test
add
popf
or
push
dec
xlat
out
aaa
out
iret
arpl
std
mov
mov
sub
mov
push
dec
push
cmp
mov
fiaddl
ljmp
pop
xchg
jg
repz
cmpsb
sub
cld
lahf
lods
loopne
xchg
in
dec
dec
pop
sub
std
or
xor
pop
sub
push
cld
aad
fstl
jge
xlat
movsl
xor
mov
sub
scas
rol
daa
jle
roll
lea
popa
push
pop
add
xlat
fisubs
sbb
ror
pusha
daa
pushf
aaa
in
push
add
sub
scas
lock
mov
into
adc
dec
sbb
aad
aad
mov
cmc
pop
popa
xor
mov
dec
int
ret
jle
pop
mov
aad
mov
xchg
ret
push
pop
lcall
js
pop
and
imul
pop
cs
inc
add
or
jnp
xor
cmp
movsb
sub
imul
stos
or
inc
sbb
sbb
and
addb
in
inc
popa
mov
test
xlat
push
pop
dec
fwait
imul
pusha
mov
stc
js
sbb
out
sub
mov
pop
inc
xchg
push
mov
or
cmp
jge
jbe
ds
or
dec
arpl
or
cmpsl
in
push
pop
or
sbb
test
cmpsl
adc
push
repnz
jl
push
add
push
int
fnstenv
ret
mov
xor
popl
and
mov
or
shlb
xor
sbb
loopne
in
xor
data16
jp
sbb
jmp
mov
nop
mov
fcmovne
aaa
pop
test
and
or
xor
aas
sub
jg
loopne
dec
sbb
ret
mov
inc
mov
xlat
mov
sub
das
scas
xchg
push
jno
daa
xchg
mov
rorl
mov
test
stc
cmc
clc
cmp
imul
inc
hlt
sbb
movsb
add
pop
jnp
icebp
sbb
jns
pusha
sbbl
mov
cs
mov
mov
add
and
cli
dec
inc
or
and
mov
cli
jns
mov
pop
or
xchg
add
mov
in
jle
dec
jge
repnz
dec
sub
fdiv
ljmp
dec
rcl
roll
les
xor
jb
int3
out
or
mov
push
gs
negl
adc
mov
rcrb
enter
adc
lcall
mov
dec
ja
mov
imul
je
sub
cld
or
mov
cli
movsl
add
add
or
pop
mov
pusha
insb
sti
ret
js
xchg
lea
mov
aas
ret
pop
adc
testb
fcom
or
clc
lret
insb
cmc
outsb
or
jg
sahf
mov
adc
scas
jge
dec
xor
out
mov
int
fldl
sub
push
hlt
inc
sub
call
cmp
div
lock
fmuls
neg
mov
dec
cltd
jmp
pusha
xchg
fidivs
mov
bound
inc
ja
clc
por
icebp
pop
test
in
jecxz
and
jle
es
gs
or
cmpsl
xchg
cmp
add
divb
aad
repnz
mov
adc
mov
sub
sbb
add
xor
rcr
push
add
push
movsl
jno
push
pop
push
inc
mov
in
lods
sbb
out
pop
jmp
dec
jbe
cwtl
jmp
psrlw
mov
ret
js
inc
lret
and
rolb
rorb
inc
pop
jge
sub
std
push
cmp
test
add
inc
push
movsl
test
dec
leave
sarl
popf
jne,pt
mov
fs
add
sub
sbb
shrl
jg
mov
mov
lea
jl
lret
cmpsl
mov
or
or
mov
js
xor
in
xlat
icebp
out
ficompl
movl
lea
sbb
xchg
enter
ret
jg
push
mov
xchg
mov
nop
xor
cmpsb
sbb
roll
or
test
cmp
jl
mov
sub
cwtl
inc
je
repz
add
jmp
dec
mov
enter
xlat
sub
cltd
inc
loopne
aaa
jecxz
aaa
test
js
cmpsl
test
int3
imul
sbb
adc
inc
pop
shrl
pop
xchg
lds
xor
jecxz
mov
fisubs
jbe
mov
dec
int
mov
adc
fwait
cmp
mov
out
xchg
pop
pop
mov
xchg
rcrb
inc
insb
jnp
adc
pop
fsubrs
mov
cmpsb
mov
jne
push
adc
inc
in
dec
outsl
shll
fsub
cs
sub
sbb
mov
and
xorb
push
push
mov
ret
repnz
outsb
dec
movsb
cmp
jmp
dec
into
and
pop
xor
fisubs
scas
xor
mov
movsb
in
cmp
pop
ljmp
sbbl
xchg
add
popf
jae
pop
and
cmc
lds
js
loope
and
jne
mov
into
fisttpll
dec
enter
in
or
xchg
shl
mov
sub
in
add
mov
ror
nop
fnstenv
movl
loope
mov
iret
insl
testb
add
mov
or
lret
add
sbb
sbb
bound
lods
pushf
shl
jp
jge
test
outsl
int3
pop
ficoml
sbb
inc
shrl
and
sahf
push
cwtl
lea
xor
add
mov
mov
adc
push
xchg
mov
push
pop
jg
mov
inc
mov
int
adc
imul
call
adc
inc
or
or
and
and
fstpl
in
mov
or
push
adc
push
fwait
xor
pop
dec
pushl
les
subb
adc
push
xchg
sub
mov
xor
loopne
jbe
sub
sbb
stc
loopne
or
ljmp
out
loop
stos
or
add
ljmp
lcall
and
pop
mov
adc
ljmp
ds
mov
outsl
sub
ret
add
xor
mov
push
fbstp
cmc
xchg
jge
xchg
mov
adc
push
or
movsl
sub
jge
ja
xchg
inc
add
xor
cmp
xchg
lods
gs
cmp
les
sub
jns
out
mov
ljmp
push
mov
out
push
sti
jo
pop
sub
ret
inc
push
pop
mov
pop
in
xor
out
xorb
and
stos
sub
stc
fcmovnu
mov
in
jne
sbb
mov
pop
movsl
insb
loope
mov
add
aad
cwtl
dec
push
fsubrl
test
and
mov
mov
nop
push
dec
mov
xor
out
imul
xor
xchg
dec
out
ljmp
addr16
mov
sub
in
mov
or
iret
jb
dec
add
test
push
testb
pop
mov
sbb
mov
mov
jnp
lea
leave
insb
in
jbe
mov
pop
push
mov
mov
jp
add
jp
psubb
enter
sarb
add
dec
ret
jmp
cld
gs
xchg
fcmovbe
ds
sbb
pop
addr16
and
inc
and
cmp
push
cli
sbbl
sbb
inc
enter
faddp
jge
jb
push
sbb
add
in
sbb
mov
sub
mov
inc
mov
pop
pop
or
xor
les
xchg
and
or
inc
mov
cmpsb
lods
lods
inc
sar
adc
and
push
pop
and
fimuls
sbb
or
and
in
test
fdivl
add
xchg
cmp
addr16
xlat
push
aad
dec
push
push
sar
cmp
cwtl
imul
inc
fimuls
mov
imul
cmp
adc
push
jbe
ficomps
mov
dec
and
push
popa
sti
imul
inc
test
out
mov
pop
and
test
lods
mov
fsubs
out
andl
sub
and
inc
lods
pop
mov
jmp
cmpsl
ds
or
jo
shll
into
cmpsl
xor
jne
aam
fbstp
xor
fistl
adc
mov
mov
mov
stos
test
sbb
fsubrp
imul
mov
into
out
jmp
repnz
lret
outsl
add
mov
ret
lds
ljmp
cwtl
in
sub
adc
ret
push
aaa
call
push
inc
push
jmp
mov
loop
fwait
mov
addb
mov
cli
dec
adc
aam
push
mov
lret
sbb
push
dec
addr16
cmp
pop
jmp
adc
es
shrb
xchg
ret
or
add
icebp
mov
ror
push
nop
lret
or
sti
mov
pop
sbb
push
or
div
mov
into
nop
push
mov
or
pop
lret
push
mov
ja
sahf
and
js,pt
pop
xchg
into
pop
xor
mov
shrb
scas
xchg
gs
pusha
out
adc
punpcklwd
clc
mov
mov
sbb
jecxz
and
addr16
mov
and
enter
mov
fisubs
shlb
sub
or
push
pop
fwait
pop
loope
test
jle
adc
jns
xor
leave
imul
lds
add
lock
repz
fmul
and
mov
dec
mov
insl
xrelease
mov
sarb
dec
ljmp
hlt
jno
xchg
sbb
pop
cmp
mov
fs
scas
lods
inc
nop
out
or
clc
daa
arpl
pop
aas
add
or
imul
iret
loope
mov
or
mov
jmp
gs
pop
mov
fcomps
sbb
xchg
dec
std
test
mov
insb
out
cmpsl
jge
loop
and
dec
rcrb
inc
jmp
test
jno
ret
repz
dec
test
add
adc
jl
das
cmpsb
pop
xor
inc
mov
mov
cmp
cmp
fcomp
scas
shll
push
adc
insb
repnz
insl
jb
in
ret
inc
pop
out
push
rcrl
xchg
xchg
pop
mov
mov
cmp
dec
int
or
push
add
lock
sub
xor
mov
gs
sti
cld
andb
cmc
aad
jnp
xlat
lods
sbb
mov
or
mov
testb
fnstsw
roll
mov
mov
lret
sub
jecxz
insb
ja
and
jne
nop
inc
movsl
inc
push
sbb
cli
enter
pop
je
mov
std
and
shlb
pop
icebp
push
cmpsl
ficoms
pop
mov
imul
cmc
repz
xchg
mov
push
ret
adc
pop
outsl
sub
mov
cmp
push
sbb
sbb
and
push
ss
shlb
push
sub
repz
adc
ret
add
out
into
push
in
sbb
dec
and
lret
sahf
and
test
pop
test
xor
popf
add
xor
push
xchg
les
mov
jle
jecxz
cld
fisubs
push
aam
out
fmull
mov
jp
lret
push
jmp
subb
jae
lret
and
inc
cmp
jecxz
fildll
lods
jg
or
fisubrs
add
lds
test
cmovle
push
or
or
jge
mov
jmp
xchg
cmpsb
push
leave
testb
ja
xor
test
div
dec
int3
aad
inc
sarl
cltd
daa
cmp
dec
jbe
jl
dec
pop
mov
cmp
jg
shll
fadds
adc
mov
inc
lea
out
mov
sti
xchg
xor
shlb
pop
test
shll
out
fs
in
mov
fwait
repz
cmpsb
call
fistpll
lcall
mov
orl
movsl
rclb
popf
iret
imul
popf
cmpsb
jnp
rcll
add
lock
push
adc
call
xor
xchg
imul
xchg
push
shrb
inc
les
pop
icebp
es
mov
lods
leave
repnz
xchg
inc
xchg
pop
int
xor
and
call
push
lds
dec
jecxz
dec
xchg
mov
pop
bnd
cltd
ja
mov
and
dec
loop
dec
jp
inc
or
adc
mov
js
ret
xchg
or
pop
or
or
out
add
imulb
add
rolb
dec
das
pusha
sbb
jbe
ficoms
sahf
inc
xor
lods
mov
test
lods
mov
mov
es
cmpsb
mov
jecxz
loop
push
pop
lea
dec
lcall
jo
sbb
in
pusha
les
cmpsb
enter
or
inc
shll
lea
or
ljmp
xchg
ret
and
sbbb
jl
pop
shlb
mov
in
dec
mov
lock
insb
or
mov
pop
fadds
jp
je
xorb
pushf
hlt
pop
mov
jbe
inc
decl
xchg
scas
in
fwait
jae
sbb
cmp
cwtl
enter
inc
js
jle
rorb
mov
mov
fildll
je
pop
mov
leave
mov
lds
jnp
pop
fisubs
jno
sub
mov
xchg
mov
es
sbb
or
or
rcrl
sub
into
pop
pop
in
mov
loopne
push
pop
adc
cmp
pop
jnp
rorl
add
push
pop
push
aad
jno
push
and
pop
xchg
sbbb
cmpsl
outsl
loop
shrl
sahf
mov
iret
movsl
stos
cmp
fs
lahf
and
into
inc
xchg
ja
pop
mov
sbb
cld
jns
dec
adc
push
out
push
push
mov
lods
mov
cld
lret
adc
dec
call
dec
mov
adc
sbbl
cltd
gs
or
inc
dec
xorl
add
in
outsb
insb
jg
xchg
je
pop
mov
ljmp
xchg
lret
pop
lahf
push
call
xchg
cmp
xchg
cli
dec
push
stos
xor
test
adc
dec
dec
mov
dec
xchg
and
nop
mov
inc
dec
cld
sub
divb
and
sbb
mov
iret
xchg
test
pop
jecxz
inc
jbe
insl
das
cli
add
and
and
push
fldenv
jp
jae
xchg
daa
add
sub
mov
ret
icebp
int
aas
in
cmp
xor
sub
jbe
jle
push
mov
mov
xchg
iret
xchg
jbe
push
adc
stc
mov
mov
pop
lods
add
push
cwtl
je
xchg
push
fcmovnb
xlat
enter
popf
mov
cli
push
add
sarb
cld
dec
cmp
and
leave
cmp
aaa
xchg
popa
xchg
sbb
mov
cmp
mov
xlat
push
shll
pop
loop
lods
mov
add
mov
lods
mov
in
cmc
or
dec
je
in
sbbl
cwtl
jnp
sub
pop
pop
and
das
lret
cmp
mov
xlat
or
and
mov
aas
push
sub
ds
pop
insl
clc
outsb
inc
or
jmp
mov
and
push
scas
xor
stos
mov
scas
cmpsb
xchg
int
outsb
add
sub
jp
mov
js
into
adc
cli
sub
stos
sub
xchg
jae
mov
mov
shrl
and
inc
xor
ret
fcmovne
ja
pop
aaa
pusha
insl
jbe
mov
lret
sar
inc
call
jg
mov
jmp
jae
stos
xor
imul
mov
pop
mov
jo
mov
or
das
xchg
sub
lret
fdivl
jmp
mov
std
repz
xor
push
pop
js
test
xor
mov
rcrl
mov
jl
cmc
dec
outsb
xor
jp
mov
scas
push
pop
push
cmp
stos
cli
stos
out
cwtl
ret
popf
ljmp
jns
sbb
mov
or
stos
addr16
clc
enter
lods
cmp
ret
in
xchg
push
mov
data16
jo
jno
test
fs
loopne
push
rolb
cmp
jnp
inc
imul
cmp
pop
test
out
fildl
adc
dec
pop
mov
aam
sbb
cwtl
addb
mov
push
xor
fcomp
fisttpll
xor
cmp
xor
sarb
mov
cmpsl
adc
mov
lock
das
rcr
in
int3
inc
sbb
mov
fldenv
mov
add
dec
into
cmp
test
aas
mov
inc
dec
mov
mov
mov
pop
lock
pop
inc
cmpsb
sub
push
movsb
or
loop
xlat
sub
inc
std
int3
add
mov
vxorps
xor
mov
add
icebp
mov
cwtl
cmpsb
fstpl
push
xor
sarb
or
pop
mov
popf
cld
inc
adc
xor
mov
xchg
cltd
pop
jo
insb
ret
and
push
mov
inc
mov
je
jmp
jns
loop
icebp
scas
es
push
cmp
mov
mov
xchg
arpl
xchg
pusha
dec
mov
sub
dec
sahf
test
inc
in
push
jl
int3
xchg
sub
loop
jns
lods
add
sub
xchg
sbb
es
sbb
aaa
rorb
sbb
ss
lods
jmp
iret
inc
aaa
inc
inc
pop
or
xchg
stos
cmp
or
cmp
out
fmull
loope
adc
mov
outsw
push
call
xor
les
dec
outsl
pop
jb
add
cmc
ja
xchg
lret
fwait
out
in
dec
cmp
movsb
stos
adc
mov
sub
das
xchg
pop
inc
cmp
fwait
imul
imul
les
call
xchg
sub
pop
fwait
cld
pop
mov
sbb
cmp
pop
test
outsb
mov
pop
es
xchg
shlb
mov
jne
push
xorb
push
push
xor
inc
call
xor
inc
pushf
shl
pop
pop
mov
adc
je
std
mov
std
push
ljmp
rclb
inc
xchg
xor
push
cmpsl
xchg
push
mov
mov
in
xor
mov
loop
dec
inc
fmull
repnz
daa
mov
fldcw
test
cmp
fisttps
sbb
pop
mov
xlat
push
xlat
dec
aas
jo
add
inc
mov
sbb
mov
into
lods
and
jo
enter
inc
inc
mov
and
cltd
testb
mov
add
xchg
nop
xlat
jp
mov
ja
sbb
stos
test
cmp
inc
ret
mov
xchg
jae
sub
pop
jb
lea
ja
lcall
push
sbb
mov
push
inc
adc
lahf
jo
ds
jns
and
mov
gs
mov
test
xor
xchg
stos
sbb
fdivrs
jno
lods
in
jae
mov
stos
xchg
xchg
mov
cmpb
xchg
push
pop
push
inc
enter
bound
dec
les
into
test
or
xor
int3
cmp
fdivrs
mov
dec
data16
mov
inc
cmp
leave
xchg
adcl
add
popf
int
sbb
push
mov
loop
inc
inc
push
cli
mov
dec
psubsb
movb
shlb
jg
mov
rcrb
test
call
pop
mov
ret
je
mov
xchg
aam
mov
push
inc
addr16
lret
andl
inc
dec
mov
pusha
mov
pop
push
cli
cmp
mov
pusha
nop
arpl
add
pop
ss
mov
cli
in
xchg
pop
mov
xorl
les
pushf
test
adcl
xlat
ret
mov
cmp
adc
mov
inc
adc
stos
or
xor
push
mov
or
pop
push
inc
and
jle
mov
cmp
into
jns
mov
das
sbb
jecxz
pop
cmp
dec
fistps
xor
xor
lock
aaa
push
sbb
push
hlt
jl
xchg
dec
pop
out
jle
push
push
stc
mov
and
jnp
mov
pop
gs
notl
sbb
push
mov
cmc
push
xchg
scas
int3
sbbb
cli
jo
rol
aas
pop
mov
or
ss
and
xor
mov
ja
in
pop
pushf
add
popa
rcrl
or
movsl
imul
pop
inc
lea
xchg
inc
fstpt
adc
out
out
pusha
ds
mov
jnp
mov
cmp
bound
dec
mov
pop
and
sub
or
pop
adc
add
lret
or
push
push
xor
jne
repz
pop
push
inc
dec
sub
cs
jnp
xchg
jae
add
adc
loope
fwait
mul
in
mov
cmp
adc
fisttpl
jns
sbb
add
jle
sbb
jmp
cmc
repz
adcb
adc
shll
lret
and
sti
mov
cs
xchg
xor
xchg
push
dec
xlat
mov
cltd
pop
test
and
push
push
inc
adc
mov
jecxz
cmp
push
sbb
leave
sti
add
in
fld
inc
mov
inc
jge
push
add
orb
fs
incl
dec
inc
xchg
addr16
sbb
stc
popa
aam
pop
cmpsb
and
jp
jnp
pop
cwtl
jecxz
sub
repz
lret
div
xchg
or
push
jecxz
xchg
shrl
movsb
xchg
cwtl
xchg
cmp
xor
xor
mov
dec
insl
dec
jbe
mov
lahf
mov
cmp
push
icebp
out
dec
dec
sub
cli
jle
rcll
push
negl
es
inc
jl
insl
int3
lods
cs
push
into
add
dec
sbb
mov
test
stc
adc
hlt
jle
jns
inc
fsubr
xor
push
cmp
fists
cs
sbb
mov
test
sbb
add
cmp
cmpsl
inc
ss
add
pop
xor
fcoml
xor
dec
lea
sti
or
fidivl
and
dec
sbbb
sbb
mov
push
pop
stc
mov
push
jg
out
dec
iret
mov
push
js
out
xchg
xchg
loope
dec
js
out
and
mov
in
inc
inc
pushf
cs
jl
adc
xor
scas
adc
xchg
xor
lcall
dec
clc
aam
pop
repnz
lret
ret
push
mov
and
shlb
out
push
jecxz
sbb
and
mov
das
fdivrs
ror
std
sub
xchg
sbb
js
adc
dec
inc
fsubrl
mov
loopne
outsl
les
lcall
sub
mul
inc
cmp
loop
loopne
sub
popf
jge
push
adc
inc
outsb
nop
rorb
cmp
push
push
scas
testb
rcl
pop
cli
mov
xor
mov
pop
jg
jo
mov
pop
out
fsubrl
or
sbb
and
push
in
jmp
jne
loop
mov
mov
mov
xchg
ret
xor
mov
mov
insb
scas
mov
lcall
xor
push
sbb
mov
add
dec
sub
and
jae
mov
pop
std
scas
shr
push
jecxz
idivl
sbb
out
cld
pop
xor
xchg
xchg
sbb
jp
addr16
outsb
mov
push
jae
adc
xor
lahf
rorl
iret
mov
sub
pushf
adcl
mov
dec
xor
fyl2x
dec
xor
outsl
and
test
bndldx
add
sti
fistl
mov
ror
inc
fs
push
test
jmp
fisttpl
push
rcl
inc
jae
ss
and
in
pop
movsb
adc
push
sub
hlt
mov
mov
jle
mov
dec
mov
jb
out
movsl
mov
cmc
sub
ret
and
push
dec
xchg
sub
adc
insl
sub
fists
mov
adc
mov
push
loop
add
xor
enter
fildll
inc
cmc
mov
aad
clc
fwait
add
mov
jp
dec
fmulp
xchg
dec
sbb
shl
add
std
bound
cmp
fiadds
clc
mov
xchg
pop
mov
mov
or
dec
push
sub
jae
stos
pop
lret
jne
jne
roll
rcl
stc
push
shr
fidivl
xchg
xorb
sub
out
ret
leave
in
mov
or
sbb
pop
pop
dec
and
push
es
jnp
js
cmc
mov
and
mov
or
repnz
add
leave
lret
mov
jb
outsl
ljmp
cmpsl
fistpl
lods
aas
add
or
in
nop
fsubrs
sub
nop
adc
dec
rcl
scas
xor
mov
cmpsb
fs
sub
sar
ja
jae
inc
mov
loope
inc
and
mov
mov
inc
jmp
stos
inc
gs
flds
or
inc
sub
stc
push
iret
orb
sbb
test
push
iret
fistps
jbe
cmp
cmpl
cmp
push
push
adc
cmp
stos
mov
pop
sub
aad
roll
aam
dec
adc
rcrb
or
push
das
test
fisubrs
cmc
fcompl
scas
das
push
jnp
or
cs
sbb
sub
and
xorl
les
cltd
xchg
push
lock
es
and
push
pop
mov
ljmp
pusha
xchg
popa
jno
sub
mov
das
mov
fidivrs
scas
mov
out
inc
fistps
ljmp
mov
cmp
scas
xor
jne
sbb
xor
add
out
mov
pop
push
icebp
cmp
inc
out
xorb
out
mov
cmp
imul
cmc
cmpb
cmp
fcmovnu
fs
fisubrl
mov
fwait
jg
dec
cmp
das
lcall
mov
inc
outsb
roll
mov
test
iret
lret
add
cmp
add
xchg
idivl
cmp
jl
ja
sbb
mov
movsl
outsb
add
dec
cmp
sub
dec
sub
movsb
scas
pusha
sub
xchg
cmp
aad
loopne
mov
repz
cmp
push
inc
cmp
std
dec
pop
push
stc
dec
mov
je
jns
ja
sbb
add
les
mov
into
adc
push
xor
lods
push
movsl
cmp
lock
mov
lret
arpl
jl
mov
jbe
pushf
cmpsb
aas
mov
rolb
jmp
adc
movsl
fisttpll
xor
mov
icebp
push
outsl
int
jp
cmp
push
sbb
push
cwtl
mov
sub
call
or
jo
iret
add
gs
mov
imul
movl
mov
sbb
jecxz
sub
jl
or
es
cmp
repz
loopne
les
xchg
outsb
adc
shlb
iret
push
inc
fistpl
les
loopne
adc
pop
gs
sub
sub
aad
mov
iret
lods
adc
icebp
jle
mov
mov
sub
xchg
sbb
dec
scas
sahf
lods
adc
jmp
repnz
sub
pushf
int
or
jbe
mov
pusha
aad
bound
shlb
scas
pop
iret
pop
mov
fstpl
jno
inc
add
dec
mov
shrl
push
push
subl
out
sub
call
xor
aad
call
mov
shll
jmp
push
jns
std
test
pushf
mov
mov
test
jl
jecxz
mov
sbb
xor
cmpsl
cmp
inc
loop
sbb
movsl
stos
jno
int3
xor
sahf
and
ss
mov
jp
xlat
dec
jne
xor
andb
cltd
cmpxchg
dec
mov
out
outsl
push
xchg
push
or
xchg
or
popf
inc
cld
adc
xor
mov
cld
pusha
and
cmp
je
pop
rcrb
arpl
scas
into
xor
aas
or
movsl
sahf
sub
loop
adc
cwtl
in
mov
lods
loope
xor
das
add
imulb
out
pop
xor
outsb
out
outsl
push
insl
mov
mov
popa
lahf
nop
cld
jmp
lcall
dec
push
push
and
movsl
decl
mov
cmpsl
shll
xor
fmull
ficompl
cmpsl
mov
fidivl
add
jp
xchg
push
mov
jo
rclb
jae
mov
add
sbb
pop
jle
mov
sub
fwait
aaa
cmpsl
lcall
sub
jbe
lds
jo
push
xchg
sbb
lret
daa
bound
adc
aad
arpl
fildll
mov
xchg
sti
ficomps
add
pushf
add
dec
loopne
es
xchg
int3
sahf
out
sbb
xchg
loope
push
jle
nop
mov
ds
inc
std
sahf
bound
aaa
mov
lods
outsb
out
push
test
cmp
out
xchg
adc
rclb
or
mov
stc
ss
inc
sub
lret
imul
imul
push
xchg
xchg
mov
adc
mov
and
in
fdivrp
push
push
jge
jb
and
addb
aad
out
xchg
lcall
adc
cmp
cmp
push
mov
gs
cmp
loopne
orb
fwait
ds
out
mov
jle
insl
lds
into
ficomps
xor
pop
sti
imul
and
call
pop
dec
nop
pop
add
stc
scas
pop
jg
aaa
pop
enter
jle
mov
cld
call
adcb
inc
into
xchg
and
pop
imul
mov
stos
jnp
jne
dec
out
sub
inc
add
xchg
jle
adc
push
test
mov
cmp
jns
fiaddl
pop
inc
or
dec
adc
test
lea
mov
xchg
push
xor
testl
stos
rolb
and
mulb
fmulp
roll
repnz
mov
pop
mov
sub
mov
aam
xor
push
sub
or
popf
add
push
push
push
xchg
hlt
shll
nopl
fistpl
in
xorl
outsl
lcall
leave
test
lock
adc
or
push
add
decb
lock
cs
push
push
jne
addr16
sub
inc
adcl
or
js
jmp
fiaddl
jns
xchg
pop
sbb
js
aam
xorb
sahf
dec
lret
jmp
stos
repnz
adc
mov
cmp
mov
aaa
call
dec
in
cmp
dec
inc
mov
test
shl
rcrl
imul
std
mov
fdivrl
lahf
mov
mov
in
and
testl
outsb
xchg
mov
popa
push
sbb
sbb
in
fldcw
mov
mov
pop
and
cmp
push
and
ljmp
fisubrs
inc
xchg
fsubrp
movsl
xchg
pop
lods
or
inc
sub
sbb
adc
pop
pop
inc
into
lcall
test
xor
and
xor
push
add
imul
cld
pop
icebp
push
insl
push
pusha
push
shlb
ds
add
pushf
dec
cmp
push
push
fs
sub
cs
push
mov
sub
adc
in
sbb
push
xchg
xor
fsubr
pop
pop
ficompl
ffreep
sti
int
imul
sub
push
cmp
mov
push
aam
outsb
cmpsb
xchg
nop
pop
subl
push
xchg
fxtract
or
int
add
testb
outsb
pusha
xlat
push
adc
and
in
push
outsl
fnstsw
ds
lods
and
xchg
dec
in
adc
sbb
mov
mov
xchg
add
sub
out
cld
push
test
in
cmp
mov
sbb
add
mov
popf
test
add
ljmp
sub
test
fdivl
fists
or
adc
aas
test
xor
call
in
imul
add
xor
rorb
mov
imulb
cs
ds
jbe
xor
and
cmpb
nop
les
jecxz
jle
mov
lods
adc
sahf
daa
or
scas
mov
sub
inc
into
pop
je
pop
mov
pop
es
push
repz
mov
mov
pop
dec
sub
mov
ret
pop
add
mov
lds
daa
int
xchg
cmp
dec
in
cmpsb
add
imul
rclb
jl
xchg
adc
mov
idiv
sbb
addr16
dec
dec
ret
xchg
adc
sbb
test
gs
in
in
or
into
jb
fsubs
jne
cld
ds
mov
cli
orl
fcompl
dec
mov
sbb
in
jge
and
int3
imul
or
cmpsl
pop
xchg
imul
inc
sub
sbb
ret
xor
in
mov
inc
jno
aaa
push
imul
mov
mov
je
adc
cmp
clc
push
inc
vmwrite
movsl
pop
sbb
inc
or
insb
icebp
cmp
pop
xchg
jge
and
inc
repnz
mov
push
jmp
mov
lret
xchg
sbb
add
adc
out
xchg
clc
add
fucomi
jnp
mov
and
pushf
iret
adc
pop
mov
push
mov
insb
arpl
sbb
repnz
cmpsb
in
mov
or
fcomip
adc
mov
push
repz
out
mov
sub
push
insb
pminsw
loop
out
mov
pop
inc
icebp
scas
xor
add
stos
lcall
xchg
pop
lret
mov
xchg
sub
inc
and
adc
stos
insb
or
stc
xorb
cld
xchg
and
scas
xor
cmp
lret
dec
xlat
adc
pop
or
fildll
ljmp
adc
daa
or
into
inc
in
mov
and
mov
xor
sbb
data16
mov
out
pushf
push
shl
pop
mov
out
add
xchg
sbb
mov
mov
jl
inc
repz
shlb
push
bsr
cs
test
imul
movaps
sti
mov
cmpsb
adc
xor
imul
repnz
jno
fmuls
or
xchg
or
inc
fadds
mov
testl
cmpsl
inc
jns
mov
dec
mov
sbb
sbb
inc
mov
ja
add
sub
mov
adc
testl
lea
pop
fbstp
scas
pop
incl
mov
xchg
xor
loopne
cltd
mov
inc
push
jl
mov
inc
jns
es
and
push
cmp
push
and
stos
inc
popf
xchg
lcall
test
iret
loopne
or
flds
jb
or
filds
jb
int3
pop
out
imul
mov
adc
sub
in
icebp
add
pop
ss
inc
add
repnz
cmp
gs
mov
jmp
sbb
sbb
mov
negl
xchg
mov
fldcw
into
adc
adc
jno
xor
mov
out
cwtd
lea
imul
fwait
std
xchg
and
adc
adc
roll
mov
lock
sti
aaa
mov
pop
add
and
mov
roll
mov
mov
and
lret
and
sub
int
stos
ja
mov
pop
sbb
push
outsl
iret
incl
cmc
cmp
repnz
cmp
out
mov
fs
or
sub
stc
mov
and
addl
popa
adc
dec
push
into
adcl
inc
ret
leave
imul
lds
nopl
sub
mov
inc
sub
mov
lea
ret
inc
pop
add
adc
cmp
imul
mov
test
test
push
repnz
pop
adc
cmp
push
xchg
loop
dec
jbe
xchg
or
in
xchg
arpl
inc
mov
pop
sub
xchg
jo
iret
mov
rorl
inc
xchg
iret
xor
les
or
add
sahf
or
pop
push
out
jle
hlt
int3
mov
fldln2
sub
jecxz
add
stc
arpl
out
jge
outsl
dec
inc
subps
xlat
daa
stc
push
mov
sub
cmp
mov
cltd
negl
in
xor
sub
punpckhwd
mov
pop
test
cwtl
les
or
stos
outsl
or
hlt
loop
fidivs
xor
cmp
push
dec
pop
imul
adc
enter
test
cli
sbb
scas
jbe
fcompl
sbb
or
mov
out
bound
dec
xor
lods
stc
mov
adc
sahf
mov
sbb
jne
mov
push
mov
mov
clc
sub
inc
push
sub
test
sub
mov
cmp
jno
outsl
clc
rcr
insb
aas
pop
inc
sbb
fisubs
mov
repnz
mov
push
testb
iret
lds
aam
icebp
push
add
nop
aad
xchg
in
test
int3
sbb
flds
leave
mov
inc
mov
mov
inc
enter
or
into
mov
mov
adc
push
push
jg
add
in
cmp
sub
mov
scas
mov
push
ret
xor
inc
cli
sbb
mov
push
xchg
imul
mov
push
dec
nopl
sbb
push
cwtl
gs
mov
je
subl
pop
insb
sbb
repnz
push
fs
es
jne
push
dec
jne
jl
jne
sbb
or
pushf
mov
bound
mov
testb
outsl
enter
mov
xor
cli
iret
jle
push
inc
lret
inc
adc
shrl
rorl
dec
shlb
imul
sbb
mov
mov
mov
loope
aad
mov
test
mov
mov
add
add
fcmovnb
popf
adc
int
adc
mov
roll
xor
out
cmp
lods
pusha
and
push
loop
cmp
aam
push
xchg
push
sbb
pop
jo
sti
sub
aas
test
data16
fwait
xchg
or
push
repz
aas
mov
jecxz
mov
jb
sbb
dec
ret
les
popf
pop
sub
stc
xor
out
shll
imul
imul
ficoms
mov
push
test
mov
mov
mov
pop
push
xchg
pop
push
fs
into
iret
and
notb
push
sub
imul
mov
mov
add
mov
xchg
ficoml
andl
push
data16
push
inc
sub
ret
movsl
out
jmp
push
les
jns
aad
stc
jae
cmp
jnp
xchg
fildll
lahf
adc
and
jno
clc
into
out
push
mov
ja
testl
sbb
or
jecxz
je
neg
adc
push
cmp
mov
inc
aad
xor
cmp
lret
push
xor
repz
add
sbb
and
iret
sbb
shll
jge
pop
divl
inc
fstpt
fldenv
shl
jecxz
mov
and
jnp,pt
sbb
cli
stos
data16
shr
aaa
mov
mov
add
insl
xchg
rorb
sub
push
xchg
add
mov
arpl
push
lahf
imul
fimuls
in
aas
and
jmp
mov
dec
icebp
clc
das
test
or
push
push
cmp
add
cld
push
out
jmp
in
jbe
in
lock
mov
or
or
inc
sub
xor
pop
jl
xor
xor
xchg
sub
lds
mov
xor
addr16
pop
push
mov
cli
jp
cli
mov
jecxz
popa
mov
mov
xchg
push
mov
in
daa
jecxz
rorl
mov
in
in
loop
cli
cmpsl
xchg
stc
xchg
sub
aam
xchg
jle
ds
push
pop
dec
scas
jo
jo
sbb
mov
mov
inc
cmp
jns
add
test
xchg
mov
scas
inc
jge
mov
mov
mov
mov
pop
int3
fsubrp
fists
dec
shlb
push
aaa
or
push
push
sbb
push
arpl
cwtl
xchg
lds
push
sbb
cld
call
imul
push
outsb
addl
fldenv
sub
test
shr
cmc
mov
ret
stos
arpl
jg
cld
loop
or
cmc
jne
lret
add
sub
push
rcll
mov
addl
and
sbb
jp
cmpsb
cs
xor
cwtl
pop
mov
xor
mov
push
aaa
mov
lods
push
push
out
dec
cmp
sub
jnp
aad
pop
xor
push
hlt
test
add
pop
adc
stos
iret
cmp
mov
sub
or
outsb
arpl
add
out
sahf
addb
xor
jge
push
insl
imul
movsb
jo
imul
cmp
imul
xor
xchg
stos
outsb
sub
xorl
jge
cwtl
movsb
jb
push
out
cmp
imul
jg
call
mov
mov
sub
mov
or
aad
pop
stos
test
mov
mov
pop
cwtl
pop
sbb
sbb
mov
shll
jno
movsb
and
dec
out
test
icebp
mov
inc
xor
mov
push
out
sub
fldcw
add
imul
mov
popf
mov
lea
insl
push
call
aad
cmp
dec
imul
jo
cmc
nop
cwtl
cmp
jae
mov
jp
dec
add
cmp
mov
xor
push
inc
sarb
pop
mov
inc
das
dec
nop
xlat
sarb
push
cmp
aas
les
add
mov
sub
dec
ds
push
enter
adc
sbb
test
push
out
add
scas
lret
mov
call
mov
fisttpl
imul
sbbl
shrb
test
rcr
mov
mov
rclb
rorl
inc
sbb
mov
inc
xor
pop
xchg
movsl
adc
fimull
cmp
negl
dec
in
jg
int3
das
ja
sub
in
pop
lods
call
adcl
jg
ja
adc
xor
lods
fstpt
dec
rcr
adc
imul
add
sarl
flds
sarb
stc
fnstenv
fnstsw
sbb
ds
outsb
push
mov
xchg
popa
repz
fcomps
dec
out
sarb
xchg
scas
push
arpl
ret
sar
adc
push
arpl
mov
pop
out
inc
or
mov
pop
push
outsl
pop
cltd
dec
adc
add
push
xchg
pop
subl
ja
xchg
stc
fld
add
add
dec
add
sub
xchg
pop
and
push
cli
jae
sub
das
in
dec
aas
loopne
dec
sub
mov
fidivrs
ljmp
sub
mov
or
mov
add
adcb
pushf
sti
mov
out
imul
sbbl
mov
push
mov
test
pop
add
cmp
shrb
mov
ret
mov
or
dec
pop
lahf
sti
in
int
cmp
jg
repnz
mov
and
jo
fs
sub
cmp
pop
sbb
push
jle
dec
js
xor
and
jecxz
xor
shlb
jo
divl
and
incl
jae
mov
adc
ficomps
sbb
xchg
iret
jl
xchg
inc
pushf
rclb
movb
or
outsb
adc
cli
arpl
pop
and
lcall
jmp
mov
sbb
div
cli
push
jecxz
cmc
call
loope
outsl
jne
fidivl
mov
xor
fistpll
push
inc
dec
fistpll
mov
dec
subb
xchg
mov
fadd
inc
add
shrb
sub
icebp
scas
xor
lods
aam
lock
ds
sub
mov
int3
xor
xor
push
adc
adc
std
xchg
adc
pop
jno
aad
in
push
fldenv
push
sahf
jb
cmpsl
jmp
add
pop
and
hlt
cmp
pop
test
dec
outsl
cmc
in
jecxz
xchg
es
es
and
es
adc
sbbb
loopne
mov
lock
in
lock
sbb
push
dec
mov
icebp
push
arpl
jb
push
jnp
lret
jecxz
jmp
sub
int
pushf
pop
call
repz
adc
jne
shlb
mov
jb
jl
aas
add
pop
xchg
ss
sub
imul
mov
xor
dec
jns
aaa
scas
and
int
or
test
fwait
and
js
lods
in
movsb
mov
jbe
mov
jle
sub
and
mov
out
sbb
test
cmpsl
inc
mov
jo
mov
aas
pop
inc
out
mov
mov
pop
mov
rorb
mov
cltd
add
jno
js
out
add
mov
xor
xor
push
subl
sub
add
push
sub
jl
xchg
or
add
cmp
movsl
enter
mov
and
test
call
inc
dec
cld
test
lods
cmpsb
add
or
and
into
adc
insl
dec
push
inc
add
or
inc
pop
enter
push
mov
iret
rorb
rcrl
clc
in
sbb
dec
mov
addr16
std
jb
mov
cmpsb
or
or
xlat
cmp
repnz
or
or
xor
jge
aam
or
jecxz
sbb
std
lahf
arpl
clc
push
fnstcw
mov
daa
test
fnstenv
stc
jns
aad
mov
jg
insb
sub
sarb
sbb
rorb
inc
out
leave
mov
mov
mov
jno
sahf
pop
xchg
in
xchg
xchg
pop
jnp
add
add
adc
mov
fwait
or
xor
mov
aaa
int
mov
enter
fwait
inc
adcl
add
mov
aas
add
xor
inc
dec
mov
inc
int
pop
cld
in
lahf
mov
add
dec
adc
jb
lock
sahf
push
insl
daa
fistps
fsubrl
out
mov
cmpsl
aad
push
pop
je
insb
xlat
test
inc
sbb
sub
cmp
fxch
jp
mov
sub
push
andb
jecxz
jmp
stos
mov
sub
movsb
jb
push
jns
fisttps
push
int
aas
sbb
lcall
das
pop
icebp
jp
sbb
lret
sub
imul
add
sbb
test
mov
mov
cld
test
adc
sbb
es
inc
cmpl
ds
sub
xor
sbb
ja
cmp
test
daa
push
scas
movsb
mov
push
xchg
xor
flds
inc
lea
ficompl
jle
fsubrl
subb
aam
mov
mov
ljmp
push
mov
adc
xadd
push
sbb
cwtl
dec
les
testb
pop
js
add
lret
mov
pop
out
sub
out
gs
lods
pusha
bound
mov
in
jg
push
out
push
push
pushw
mov
and
les
imull
loop
jmp
mov
jne
xchg
jmp
cmp
push
pop
xchg
sub
push
jl
pushf
aas
enter
lret
push
stos
stc
cmc
mov
jbe
push
fidivs
pushf
frstor
rcrb
rcrb
pop
int3
lock
mov
bound
js
xorb
inc
cld
fucomi
xor
popf
xchg
inc
jge
pop
sbb
shll
test
mov
int3
ds
es
bound
lock
arpl
scas
pop
fldt
jl
and
xlat
mov
mov
mov
test
jns
das
or
or
cmpb
and
sbb
aas
test
jno
push
push
cmp
lahf
iret
sbb
lock
int
aas
or
jge
outsb
mov
retw
inc
ffreep
mov
pushf
iret
call
mov
aas
mov
sbb
sti
mov
dec
mov
rcll
xor
sub
loope
push
sub
pop
not
mov
and
insl
andl
sub
in
int
add
cmpsl
stos
mov
dec
outsl
add
test
push
push
push
jnp
sahf
out
mov
sub
dec
or
cmp
mov
lds
test
push
inc
push
add
fsts
sub
xchg
xchg
xchg
xchg
lods
xor
imul
lds
lock
in
and
jns
sub
cld
sarb
xchg
inc
popf
pop
fwait
add
iret
sbb
and
popa
bound
aaa
inc
repnz
cwtl
push
ret
negb
sub
seto
movsl
xor
fnstsw
add
pop
fs
pop
push
cmp
push
ja
jno
xor
fistpl
rcll
push
add
add
imul
dec
aam
out
subl
mov
or
out
test
ljmp
xchg
xlat
pop
call
xor
and
xor
fildl
xor
mov
into
movsb
fwait
jbe
ss
icebp
mov
dec
stos
push
or
out
push
dec
cmp
popa
sahf
mov
mov
xor
insb
je
addr16
cmpsl
mov
roll
lods
shrl
daa
jle
pop
frstor
push
mov
arpl
push
push
fs
loop
mov
gs
push
cmp
ss
fnstenv
into
pop
xchg
subl
adc
insl
push
jns
rcrl
xor
test
dec
int3
push
ss
push
add
add
sbb
repz
pushf
xchg
dec
mov
or
ror
fcomp
gs
jl
fisttps
xlat
sbb
dec
stos
push
mov
mov
ret
mov
and
push
mov
sti
jno
and
loop
or
push
pop
or
rcll
loop
xchg
cltd
flds
pop
inc
int
bound
roll
cli
mov
pop
fsubrl
sub
out
add
cmp
dec
fdiv
sub
ja
sbb
cmpsb
sbb
sbb
inc
xor
test
test
add
jg
repnz
cmp
mov
lea
pop
leave
test
mov
nop
or
sbb
paddsb
sarb
xchg
inc
aas
sub
in
das
mov
hlt
jno
inc
idiv
ja
das
mov
jno
in
les
test
inc
mov
je
adc
iret
mov
test
into
das
pop
sbb
push
gs
pop
or
pop
insl
add
mov
loopne
loop
mov
stc
sahf
lods
lods
push
jnp
out
and
inc
jo
je
jmp
jbe
fwait
or
xlat
adc
xchg
daa
arpl
data16
mov
loope
xor
cmp
push
into
js
mov
dec
jbe
xlat
fwait
cmp
shrl
clc
loope
pop
in
shlb
sbb
flds
pop
loop
cs
fnstcw
xor
outsb
mov
popf
popa
cmp
aas
outsl
pop
jmp
testb
xchg
int
pop
fcoms
or
sub
stos
dec
stc
mov
icebp
push
adc
pop
sub
xchg
push
add
or
bound
lock
mov
popa
or
jmp
jg
mov
test
fisubrs
jmp
cld
scas
and
rcr
xor
inc
mov
mov
subb
icebp
mov
out
dec
fcmovne
push
rorb
inc
out
xchg
xor
cmp
mov
mov
mov
aad
pop
and
mov
sbb
fbstp
loopne
and
popf
pop
and
push
ljmp
dec
shlb
gs
pop
js
sti
in
movsl
jmp
xor
sub
xor
mov
roll
dec
jns
stos
divl
sbb
dec
std
jecxz
in
gs
movsb
cmp
cmp
sahf
cwtl
jmp
sbb
daa
loopne
fldenv
jbe
cwtl
sub
movsl
addr16
add
add
sbb
popf
dec
fdivp
cmpsl
mov
xchg
jp
mov
jno
jl
in
sub
test
add
subb
call
mov
push
xchg
test
pop
jnp
je
mov
and
cld
lods
ficoms
inc
popf
adc
xchg
mov
ljmp
add
hlt
movsl
leave
sbb
xor
fisttps
pusha
xchg
sub
cmpb
fstps
jg
mov
loopne
dec
jl
push
cmp
sub
push
mov
loope
scas
orb
loop
sbbl
popf
imul
add
sub
pushf
cmpsl
add
bound
sub
fisttpl
icebp
pop
je
movl
cltd
adc
jae
or
mov
pop
pop
dec
inc
fs
and
jg
fmuls
rcr
fisttpl
idiv
sub
cmp
sbb
push
in
and
fdivrl
lods
js
pop
repnz
int
add
sub
loop
in
mov
movsl
mov
sub
mov
lret
scas
rolb
jb
adc
shlb
jl
cmpl
aaa
lods
and
incb
mov
roll
pop
sub
add
xchg
jno
inc
or
scas
into
xchg
push
push
hlt
add
sub
xor
bnd
mov
cmpsl
fimull
push
xor
scas
aad
call
or
xchg
cmp
xchg
in
push
mov
sarb
pop
rorl
cmp
stos
adc
sti
push
add
mov
lahf
movsl
js
pop
faddl
inc
gs
xchg
xchg
iret
add
test
adc
push
jno
mov
shll
test
loope
add
cld
incl
dec
les
xchg
cmpsb
cmpsl
stos
push
shr
popa
jne
insb
push
shl
js
ja
lret
insl
pop
dec
or
outsb
push
fs
xchg
dec
rol
or
mov
idivb
sbb
scas
fwait
cmp
js
xchg
jne
repnz
cli
mov
aas
lahf
inc
mov
sahf
bound
insl
sub
adc
cmp
mov
dec
into
imul
shlb
cmpsb
test
push
or
pushf
pop
push
mov
arpl
mov
mov
fidivrl
cmp
ficompl
rolb
jmp
sahf
xlat
xor
bound
in
xchg
mov
in
mov
fdivs
xchg
or
mov
sbb
into
int
adc
cmp
cmp
xor
mov
sahf
scas
jbe
not
adc
mov
ficomps
stos
fistps
lcall
inc
push
hlt
jl
cli
pop
out
ret
dec
daa
fcmovb
call
sub
add
xlat
dec
pop
push
js
xchg
call
cmp
loope
dec
imul
out
out
lds
mov
data16
xchg
sbb
aas
mov
out
sub
adc
jb
and
push
fchs
xchg
aas
rcl
stc
dec
cmp
lret
inc
icebp
xor
das
jnp
dec
inc
xchg
pop
jp
iret
insb
pop
es
cmp
in
xchg
ret
test
add
or
xlat
fadds
daa
dec
imulb
inc
mov
add
cltd
lahf
mov
jmp
push
push
cmp
hlt
fld
add
add
and
xor
add
jno
jae
sub
scas
xor
test
sbb
imul
shl
jbe
clc
adc
inc
mov
out
icebp
jmp
or
or
add
push
fcompl
jmp
aas
xor
test
xchg
lea
push
mov
daa
test
mov
daa
xor
stc
cmc
inc
cmpsl
mov
add
dec
xor
repnz
inc
lock
movsl
aaa
fwait
cmpsl
jbe
xlat
std
xchg
rolb
jns
lcall
scas
mov
push
pop
xor
stc
push
lea
in
test
push
pop
cmp
add
dec
cmp
add
inc
imul
lods
jo
cmp
inc
cmc
lcall
pop
fisttps
jl
jecxz
andl
mov
xchg
popf
dec
add
inc
push
out
pop
test
push
xor
out
pop
lods
lea
push
jo
rorb
xchg
xlat
aaa
push
cmp
cmp
dec
cmp
popa
and
ret
dec
repnz
or
xor
loop
inc
cmpb
mov
jno
vpunpcklqdq
jnp
adc
inc
xor
cmp
out
add
addb
and
jl
cmp
inc
inc
inc
into
pop
mov
out
cmp
sub
or
dec
out
es
imul
inc
int3
adc
shll
adc
adc
int
in
scas
push
cmpl
add
fsubr
andl
add
push
xchg
jbe
hlt
out
dec
jne
jl
mov
adc
xor
dec
ljmp
lretw
push
repnz
repnz
sbb
aam
fcoms
out
jae
shll
pop
popf
push
pop
lea
dec
jmp
pop
inc
xchg
xlat
aam
and
push
mov
mov
ja
repnz
mov
shl
add
in
sbb
or
icebp
inc
fisttps
mov
daa
hlt
jmp
and
cmp
sub
inc
addr16
xor
cwtl
mov
push
sbb
mov
sahf
and
inc
in
fpatan
adcb
mov
mov
fs
xor
push
xchg
fistps
frstor
outsb
outsl
les
pop
out
ret
cwtl
mov
xor
movsb
push
call
xlat
jno
fdivl
test
pushf
xor
lahf
idivl
dec
rolb
stos
movsl
iret
dec
movsl
in
or
mov
push
dec
andb
xchg
inc
loopne
popa
aad
loope,pt
xchg
sub
sbb
sub
das
sub
sbb
push
or
rcll
rcll
lret
das
xor
fwait
div
sbb
in
adc
cmp
mov
pop
push
mov
lret
jg
or
push
aaa
and
fsubp
dec
scas
jno
adc
jl
push
gs
imul
pop
pop
or
out
jne
push
outsb
std
das
je
enter
gs
push
rorl
adc
pop
dec
inc
adc
add
enter
sbb
out
lret
mov
sti
xchg
sub
stos
mov
js
push
cmp
sbb
adc
push
cmpps
inc
cmpsl
icebp
rolb
iret
adc
shll
cmp
out
bound
and
je
addr16
or
cmp
insb
ss
xor
xchg
sbb
adc
ss
cmp
push
jb
xor
jns
inc
in
adc
aad
aad
mov
mov
jp
mov
imul
test
std
mov
xchg
jp
mov
mov
and
fmuls
pop
mov
xor
sbb
insb
mov
cltd
loope
into
or
divb
add
ja
adc
adc
and
mov
sub
shlb
fsts
pop
mov
pop
shll
jmp
lock
andb
popf
jns
cmp
outsb
add
dec
aaa
test
cld
sub
or
pushf
repnz
and
mov
lret
push
lcall
lods
movsb
mov
movsb
mov
dec
test
outsb
pop
ljmp
data16
aas
xchg
adc
mov
mov
rcll
add
cmp
sub
cmc
sahf
movsl
pop
fstl
xchg
push
cmp
push
sub
cwtl
push
and
scas
add
or
mov
adc
xor
xchg
jno
add
das
pushf
fstps
outsb
test
lcall
pop
fsubr
pushf
mov
inc
addb
push
dec
mov
pop
iret
mov
inc
jae
insl
ss
push
sbb
repz
xchg
das
int3
inc
xchg
pop
imulb
mov
hlt
cmp
fstps
sbb
aam
lds
pop
pop
mov
rcrb
cmp
xor
mov
pop
inc
jnp
pop
push
cmp
daa
fcmove
xor
inc
in
sub
sbb
testl
dec
jg
sbbl
mov
cmp
pop
cmp
push
insb
movsl
dec
sbb
out
sbb
mov
cmpsl
dec
mov
dec
mov
dec
test
or
pop
aam
ret
jl
ljmp
adc
jecxz
scas
js
das
dec
into
push
sahf
bound
sbb
lea
inc
loope
mov
std
inc
pushf
mov
mov
cwtl
loop
es
lcall
lahf
scas
mov
dec
stos
add
xor
scas
insl
pop
xchg
inc
movsb
xor
jmp
adc
leave
popf
mov
sbb
movsb
and
je
divl
fpatan
les
cmc
out
pop
and
xor
aam
clc
rorl
cmp
add
shrl
mov
icebp
rorb
cmc
push
subb
bnd
stos
insl
fildll
andb
fimuls
es
sub
dec
jb
popa
jb
lds
idivb
mulb
push
dec
leave
sbb
add
js
into
lret
mov
loopne
int3
lods
pop
fldenv
in
dec
imul
and
ret
pop
mov
lds
loope
sbb
mov
cltd
cmpsb
shl
jbe
fbld
xor
inc
data16
and
push
out
sub
sbb
lret
das
cmc
test
add
mov
dec
fnsave
repnz
jge
xor
das
inc
mov
pop
fdivrs
rorl
add
aas
cld
test
mov
test
aas
cmc
add
or
inc
pop
xor
mov
mov
arpl
inc
nop
push
or
xor
and
adc
push
push
popa
mov
adc
filds
iret
inc
scas
pusha
pop
rcll
mov
xchg
push
and
mov
jno
sbb
xor
movsl
stos
out
push
inc
adc
push
pop
xor
in
icebp
mov
ljmp
repz
sbb
xor
push
jecxz
sbb
ds
addr16
push
ja
andl
pop
push
pop
icebp
sbb
in
stos
fnstsw
stos
push
xchg
mov
and
cmp
push
inc
cli
repz
popf
jae
xchg
jmp
sbb
mov
xor
in
push
jp
adc
mov
xor
clc
xchg
or
push
scas
mov
testl
bound
inc
divb
pusha
inc
xor
add
mov
dec
jae
cltd
adc
pop
cld
jp,pn
push
add
int
push
dec
xor
lahf
insb
inc
dec
mov
aas
dec
in
pop
mov
xchg
fcmovb
jmp
adc
xor
sub
jae
cmc
nop
aaa
xchg
xor
jns
lret
push
adc
jp
jno
out
popf
bound
inc
and
add
imul
ljmp
adc
pop
fadds
test
repz
loopne
outsl
int
jns
sti
inc
lds
and
cmp
xor
cwtl
sub
push
and
lods
shlb
cwtl
xor
push
das
mov
hlt
orb
mov
lods
mov
pop
aaa
add
fidivrs
enter
push
sahf
aad
inc
cmpsl
push
jmp
lret
stos
shlb
sub
mov
push
aam
add
dec
aaa
mov
or
xlat
orl
or
jmp
sub
aad
lea
outsl
test
cmp
sub
xor
push
mov
scas
aam
adc
sbb
mov
rcll
jno
sarl
or
mov
sub
bound
mov
mov
pop
mov
push
and
out
xor
push
xchg
mov
push
adc
cld
pop
sbb
mov
inc
ja
jae
leave
cmp
ja
arpl
add
xchg
pop
in
imul
rorl
mov
fstl
cmp
lea
inc
rolb
clc
sahf
dec
les
dec
mov
std
sub
inc
sbb
insl
inc
and
dec
or
repz
lret
mov
mov
lods
std
out
xlat
cmp
inc
pop
xchg
lcall
cld
repnz
and
jp
cmp
loopne
pop
pop
pop
jecxz
pcmpeqd
hlt
sub
and
dec
xorl
test
imul
push
jecxz
in
adc
add
mov
notl
mov
adc
imul
dec
js
or
cwtl
andps
mov
nop
scas
jmp
scas
or
and
jmp
mov
mov
les
aam
and
addr16
dec
mov
pop
lcall
mov
movsb
xor
add
pop
pop
or
inc
fdivrl
mov
and
aaa
scas
pop
dec
push
andl
sbb
mov
xor
or
push
sub
sbb
mov
push
jae
and
pop
and
dec
out
jecxz
xchg
lahf
push
inc
fiadds
repz
inc
in
pusha
shr
jae
push
push
ret
lret
out
mov
dec
fisubl
and
pop
addr16
andl
in
add
mov
test
jg
dec
pushl
pop
pop
mov
aas
mul
xchg
sti
dec
mov
popf
xchg
push
jo
push
inc
add
push
pop
pop
pushl
inc
loop
pop
icebp
inc
lods
and
addr16
fstl
add
xchg
mov
int3
cld
mov
loope
pop
push
movsb
rorb
out
sbb
xchg
or
pop
das
out
dec
loope
push
cmp
jno
repz
in
jno
sarb
lock
dec
or
mov
rclb
add
adc
xchg
repz
inc
dec
pop
xchg
bound
jg
xor
daa
iret
push
pop
and
xor
loop
out
jmp
jmp
pop
ret
rep
fcmove
insb
sbb
or
add
frstor
sarb
add
pop
pop
jns
inc
xchg
and
push
out
stc
sbb
xor
andl
xchg
and
xor
les
jb
sahf
out
popa
sti
loopne
add
cltd
cmp
or
add
jge
or
xor
lcall
mov
lahf
or
and
mov
mov
mov
out
or
jbe
pop
lods
hlt
nop
jge
push
jl
ret
jbe
ljmp
cltd
sub
push
jns
push
call
or
cmpsl
jge
inc
out
xor
xchg
jno
lds
notl
orl
mov
pop
outsb
jb
shll
sub
add
xchg
pop
cwtl
jns
mov
pusha
in
mov
add
cmp
es
in
mov
add
and
xchg
jg
ja
fwait
stos
xchg
hlt
pushf
mov
addr16
sub
mov
sub
add
inc
mov
cmp
xchg
int
cmc
xor
daa
mov
mov
adc
inc
cmp
data16
clc
pop
mov
in
sub
ljmp
and
pop
dec
mov
mov
mov
arpl
jno
or
xchg
jg
cli
or
loopne
cmp
pop
inc
ds
test
push
sahf
push
push
hlt
fcmovu
aas
or
mov
ja
adc
bound
jg
xor
sub
es
shr
cwtl
sbb
rcrl
dec
add
mov
cmpsb
xor
mov
iret
in
leave
lds
ret
adc
je
sbb
jbe
xchg
push
aaa
loopne
sub
sub
enter
mov
mov
add
push
ss
sub
ljmp
repz
arpl
cmp
sub
jle
pop
pusha
xchg
and
lods
shr
repz
repnz
aad
ret
out
ret
pop
mov
and
popa
in
cld
movsb
dec
and
add
mov
sbb
jno
mov
fisubs
adc
cmp
in
popf
lds
add
xchg
test
add
rorb
cmp
lds
dec
leave
rcr
or
sub
push
mov
pop
xchg
cli
hlt
mov
enter
adc
push
sub
mov
xchg
sub
add
and
adc
lcall
add
fcom
dec
sbb
or
gs
gs
ljmp
fs
ret
xchg
push
push
and
inc
mov
rcrb
insl
dec
sub
shlb
imul
jae
cmp
dec
and
inc
jne
jmp
out
mov
rolb
xlat
pop
pop
jecxz
aam
dec
cmp
and
cmpsb
push
xchg
stc
mov
ss
xlat
add
or
ss
shll
sbb
push
mov
cmp
inc
xchg
add
push
push
adc
imulb
arpl
lods
jmp
inc
sar
pushf
ja
xchg
stos
rclb
lods
pop
add
dec
test
incb
je
dec
lret
inc
add
mov
sub
enter
rorl
add
out
lahf
das
inc
sti
mov
jns
mov
iret
pusha
xor
xlat
vmovaps
add
jns
add
add
adc
fnsave
cmp
out
imul
mov
insb
enter
adc
cwtl
pushf
push
in
adc
mov
sbb
or
stos
or
push
sarl
mov
roll
xchg
dec
sahf
push
aad
adc
les
xchg
test
stc
aam
out
adc
loope
fs
push
pop
ds
pop
cltd
cmpsb
push
mov
xchg
insb
imul
lret
aaa
sbb
lcall
and
sub
ja
scas
inc
or
sub
ljmp
cld
jbe
and
aaa
jecxz
pop
jmp
inc
sbb
xchg
push
ret
pop
fwait
or
aaa
fstpl
cmp
dec
fmulp
push
push
pop
dec
shll
in
test
xor
add
imulb
mov
into
mov
adc
test
sub
cmpsb
sbb
push
mov
inc
cli
arpl
cltd
inc
mov
flds
cmp
inc
repz
mov
cmp
aad
adc
enter
inc
mov
cmp
add
in
lock
daa
loopew
out
int
sbb
rcl
xchg
push
xchg
movsl
flds
inc
and
jecxz
inc
mov
mov
insl
fcmovnb
inc
enter
mov
jne
inc
std
push
add
add
fcomi
or
cwtl
jecxz
xchg
sti
test
clc
jmp
adc
call
pop
gs
rclb
and
lds
push
mull
fnstcw
xchg
xchg
pop
dec
xor
out
in
inc
and
add
fistpl
sbb
decl
push
and
ror
jae
or
clc
lods
dec
pop
imul
pop
scas
mov
cmpsl
sub
fstps
ljmp
dec
cmp
inc
decl
loopne
ljmp
push
cli
add
test
iret
cs
cmpsl
lcall
aas
lret
mov
sub
xchg
ja
adc
pop
fidivrl
fwait
mov
and
sti
je
push
lods
push
aaa
jecxz
lods
xor
push
xchg
mov
imul
jp
cmp
cltd
loop,pn
mov
jne
add
ret
jbe
das
lret
das
shll
dec
mov
pop
cmp
jno
inc
and
dec
fs
ficoml
lods
popf
cmp
jb
mov
sub
pop
lods
mov
push
jecxz
xor
das
lea
dec
cmp
shlb
ja
negl
dec
shlb
mov
pop
idiv
sarb
cltd
cmp
aam
mov
push
call
mov
fdivl
fwait
pop
add
or
test
out
inc
add
add
aam
adc
xchg
scas
sti
mov
test
mov
out
mov
dec
fnclex
roll
dec
sahf
adc
pusha
sub
ja
repz
cmp
xor
cmp
ljmp
hlt
call
call
notb
fldl
cltd
jno
dec
les
inc
push
fwait
out
cmp
cltd
sub
mov
xlat
out
scas
xchg
xor
xchg
push
popa
rcrl
xchg
mov
push
lret
clc
xor
out
push
inc
sub
and
popa
out
imul
xchg
daa
mov
pop
add
cwtl
and
stc
or
or
aaa
push
mov
sbb
inc
out
push
push
scas
xor
loop
outsl
inc
iret
popf
cmp
rcl
std
pop
fst
fs
or
add
gs
std
jg
out
clc
in
aad
bound
push
push
jae
das
stos
and
jmp
fnstenv
add
test
bound
inc
and
lret
sbb
lcall
out
insl
subl
adc
push
sub
sub
jg
inc
xchg
rcrl
in
popf
popf
jno
jnp
rol
lods
rclb
adc
push
dec
dec
fisubrs
mov
xor
push
or
icebp
xor
jmp
inc
fstl
inc
push
sub
mov
movsb
fcomi
inc
popf
jmp
je
sti
pmullw
loope
sub
into
aam
repnz
or
mov
adc
aaa
bswap
mov
xchg
push
pop
pop
lds
loope
insl
ret
push
pop
adcb
and
jge
jg
dec
xor
sbb
mov
fisubl
push
adc
inc
jp
rcrb
and
jle
inc
add
xlat
out
cltd
pop
das
jae
enter
data16
incb
ret
into
lods
std
push
cmpsl
into
push
jl
arpl
ds
lods
xchg
sub
pop
sub
adcb
xor
scas
add
les
push
cmpsw
test
pusha
movsl
jbe
mov
cmpsl
dec
iret
dec
mov
mov
sub
fwait
push
insl
jno
ss
pushl
cs
xchg
rcl
mov
movzwl
jno
adc
fiaddl
dec
xor
fldt
push
jmp
addb
repz
xor
cs
push
and
xor
dec
sub
rcl
push
out
mov
icebp
int
in
outsb
ds
rorl
cmp
pop
dec
jbe
mov
xchg
xchg
sbb
aad
xchg
fidivl
jl
mov
repz
mov
in
aas
cmp
dec
push
fdivrl
filds
xor
imul
fs
sbb
and
test
jp
into
adc
xor
push
fadds
add
out
sbb
cmp
jo
ret
data16
jo
sub
push
and
loopne
inc
pop
pop
aad
push
shl
and
stc
or
or
or
xchg
aaa
mov
test
ret
ja
inc
mov
xchg
notl
bound
sub
xor
out
imul
mov
push
adc
adc
cld
mov
cmc
fdivr
or
movsl
pop
xlat
cld
int3
mov
out
mov
jmp
or
mov
popa
les
les
xor
jae
jp
jmp
add
insl
push
aam
insb
je
mov
adc
popf
push
mov
pop
pop
mov
lahf
cmp
dec
push
sahf
xor
jnp
or
test
sbbl
in
negb
push
lods
outsb
inc
repz
push
movsl
sbb
adc
and
mov
mov
shll
xor
and
sub
mov
shlb
sbb
mov
pop
cli
xor
cmpsl
jnp
xchg
sbb
adc
fnstcw
addr16
cmp
adc
rcll
and
cmp
cld
mov
in
adc
adc
mov
out
jo
scas
sub
mov
ss
sbb
ror
fs
xchg
mov
mov
or
pop
mov
pop
xchg
rcl
popa
sahf
iret
popf
pusha
mov
sbb
cmpsl
mov
fldenv
mov
call
out
adc
hlt
cmp
or
sbb
dec
lret
adc
mov
lods
inc
sub
lcall
push
shlb
fcoms
stos
add
notb
xor
jl
push
test
dec
lock
jo
jnp
cmpsb
and
stos
mov
inc
outsb
and
or
sarl
cmp
xor
lahf
addr16
dec
mov
inc
xchg
mov
adc
clc
lahf
mov
sub
fildl
fs
mov
icebp
pusha
cmpsl
sbb
sbb
jl
aad
pop
inc
dec
std
cmp
jnp
pop
ret
cli
ss
out
fwait
sbb
outsl
jl
iret
pop
dec
mov
sarb
fstpl
loopne
fcoms
aas
pop
cmp
fucomi
out
inc
mov
adc
fmull
cmovo
dec
jle
movsb
push
mov
mov
pop
mov
xchg
jnp
mov
repnz
cltd
cmp
les
add
outsb
mov
mov
sub
pop
aas
iret
pop
jae
inc
sbb
or
repnz
incl
cld
pop
es
sub
push
das
jbe
jp
mov
sub
sub
ljmp
fstpl
dec
test
adc
std
cwtl
push
jbe
pop
add
xchg
stos
push
cld
fmull
sbbb
call
mov
mov
test
clc
fiaddl
sbb
nop
lahf
cmpsb
sub
scas
or
outsb
ja
loope
enter
out
mov
or
int
lret
sub
repnz
stos
xchg
sub
push
add
add
insb
jmp
hlt
flds
sar
sub
inc
jo
imul
fcoml
decl
add
shlb
out
add
lahf
icebp
idivl
fbstp
test
lea
sbb
jg
popf
lea
enter
fidivrl
in
mov
cltd
outsb
lods
rcll
lods
dec
adc
push
and
pop
adc
add
ds
xlat
cltd
jge
les
pop
fs
rol
in
bound
and
mov
pop
jmp
adc
shlb
sbb
imul
lret
push
push
adc
popf
pop
xor
push
and
loope
in
add
and
popf
sbb
pop
ret
subb
call
adc
ja
test
inc
jns
sub
bound
call
add
or
call
cmpsl
ret
lret
jl
shl
mov
test
int3
lds
add
sub
mov
xor
mov
js
lock
out
pop
dec
rcrb
arpl
lret
pop
jb
jns
push
outsb
jl
not
in
das
dec
or
inc
jnp
push
popf
mov
or
dec
jo
ret
pop
test
adc
int3
mov
cmpsl
add
fistps
ds
in
jl
cmpsl
outsl
out
stc
sahf
repnz
into
inc
sub
dec
xchg
inc
and
call
sarb
jp
adc
in
fwait
sbb
aam
push
add
addb
ss
mov
pop
cmpsb
pop
mov
out
cwtl
outsb
stos
mov
dec
sbb
jp
in
sub
ljmp
sbb
idivl
lods
stos
pop
iret
scas
inc
inc
loop
jno
dec
cld
jae
bound
out
stc
jmp
mov
push
adc
cmp
pop
adc
xchg
push
sub
lret
sub
and
flds
fs
in
xchg
pop
loope
mov
dec
sub
jns
loop
and
xchg
leave
jns
jno
data16
sahf
sbb
ficoms
fnstenv
add
xor
inc
xor
or
fs
sub
frstor
addr16
pop
jp
lret
cmp
and
cmp
or
xchg
test
add
cli
jbe
mov
inc
aad
test
mov
rolb
cmp
mov
loop
sub
push
mov
ljmp
push
xchg
lea
cld
pop
xor
mov
adc
in
dec
push
cwtl
xor
lret
jo
movsb
scas
outsl
popf
cs
push
jns
rcrb
add
xchg
mov
out
jo
push
cmp
dec
mov
inc
mov
adc
cmpsb
lods
cmp
ds
pop
int
out
les
out
cmpsb
pushf
mov
mov
lods
jle,pt
or
dec
xchg
mov
mov
imull
movsl
data16
stc
insb
adc
cs
or
dec
pop
fmuls
pop
out
push
test
ds
sub
addr16
dec
xchg
push
nop
in
sub
out
mov
push
gs
test
adc
pop
and
adc
sbb
dec
dec
lds
les
and
dec
loope
out
add
outsl
loope
jl
sahf
push
xchg
cli
out
push
daa
mov
imul
jno
fs
jne
mov
xchg
mov
jge,pn
loopne
sbb
sub
pop
cmp
je
lock
das
fsubrl
or
popa
ds
push
inc
movsb
xor
pop
repz
imul
leave
mov
iret
nop
imul
sub
ja
in
sub
in
dec
les
hlt
lds
dec
push
maskmovq
negl
xor
push
pusha
mov
push
decb
out
add
arpl
adc
test
pop
and
mov
sbb
mov
jnp
push
cmc
in
sub
sub
ret
aam
jg
xchg
push
inc
mov
push
push
mov
test
notb
push
pop
mov
fs
lcallw
jl
fsubs
xchg
testl
push
fdivr
push
incb
xor
push
out
pop
sbb
push
sbb
push
les
dec
xlat
inc
adc
fstps
orl
and
test
clc
test
inc
pusha
outsb
dec
sub
mov
nop
xchg
iret
jl
ds
lds
into
mov
aad
pushf
into
mov
movsl
hlt
sti
cltd
fstp
cld
mov
push
fisttpll
cmp
pop
sbb
je
xchg
orl
push
mov
jl
push
shlb
les
mov
stc
rolb
aam
lds
in
sub
and
fldt
test
xor
or
inc
add
or
lock
je
or
xchg
ljmp
inc
sub
add
jmp
stos
inc
mov
vpunpcklbw
lea
hlt
std
flds
std
cmpsl
inc
ja
xor
adc
cmpb
jmp
cmp
int3
or
cmp
push
ja
push
js
pop
jle
mov
jo
add
fnstenv
out
adc
add
xor
mov
push
jb
cmp
data16
jmp
mov
sbb
pop
testl
xchg
lea
outsb
push
inc
push
add
and
dec
mov
xchg
jnp
jmp
repz
std
cmpsb
maskmovq
negl
jecxz
inc
and
lds
xor
out
lahf
add
and
out
adc
dec
filds
icebp
and
in
aam
jge
cmp
daa
fsubrl
fisubrl
dec
add
lods
inc
mov
je
aam
xor
push
inc
outsb
test
int3
je
mov
xor
int3
in
push
mov
sbb
cmp
mov
inc
test
into
data16
xor
sahf
mov
add
adc
mov
test
dec
out
add
xor
fidivrs
xor
push
fs
ja
mov
sbb
jbe
inc
or
inc
jo
mov
loope
insl
push
enter
repnz
and
dec
mov
push
jp
rcr
rol
sti
mov
sub
sbb
icebp
adc
dec
repz
mov
or
fisttps
loope
loopne
lcall
andl
clc
push
sbb
test
fsubs
inc
mov
scas
xor
lcall
or
cmp
or
push
nop
loop
clc
andb
push
pop
mov
bound
push
stos
out
xchg
inc
fmull
and
ficoms
add
mov
into
jbe
mov
cmpb
jecxz
aam
pop
ficoml
mov
add
mov
mov
xor
add
or
xor
adc
xor
int3
push
orb
shlb
push
adc
jmp
outsl
gs
inc
or
popf
jns
xor
sahf
jb
in
scas
cmp
adc
movsb
and
loope
outsb
mov
call
imul
mov
insb
pop
adc
out
push
mov
xchg
sbb
and
cmc
insb
sbb
cli
jne
clc
fildll
sbb
jge
jno
dec
ljmp
nop
cmpsb
or
ljmp
hlt
add
sahf
push
inc
mov
xchg
sbb
adc
aas
pop
push
out
movsl
and
test
loope
cmp
adc
test
adc
adc
jo
test
test
jbe
inc
fisubs
adc
scas
mov
sarb
das
push
mov
imul
cli
lahf
imul
popf
pop
aaa
aaa
mov
ja
cld
xor
sub
sub
iret
imul
sub
cmp
push
mov
mov
inc
fisubrs
pop
sar
mov
lds
jg
mov
sbb
scas
inc
mov
jo
dec
sbb
clc
cmp
not
push
push
jns
sahf
cli
ret
push
ljmp
jb
lods
inc
lods
stos
xor
repz
imul
adc
push
xchg
mov
rcll
jmp
pop
xchg
xchg
shlb
jae
mov
jl
jns
imul
and
dec
insb
js
inc
lret
bound
fdivs
and
aaa
xchg
imul
insb
call
test
or
shrb
dec
adc
sbb
pushf
sbb
and
es
sbb
lret
mov
push
mov
cmpsb
sub
loopne
cmp
ljmp
lret
fcmovne
cli
mov
xorl
icebp
call
jmp
push
mov
sbb
and
aam
mov
jmp
iret
cli
xchg
xchg
jnp
xchg
pop
dec
xchg
call
testl
andl
subb
sbb
ljmp
pop
repz
inc
in
ret
mov
pop
lds
mov
cmc
je
out
jo
xor
cwtl
mov
rorl
imul
repz
jge
push
aaa
ret
std
loope
sbb
inc
js
mov
mov
sbb
std
push
dec
cltd
stos
jmp
fcompl
xchg
std
mov
insb
mov
xchg
imul
int
xchg
sub
pop
popl
leave
sbb
push
rorl
xlat
daa
loop
sub
pop
int
leave
sbb
ror
inc
jmp
sub
mov
pop
loopne
push
mov
rcr
xchg
mov
add
mov
push
jge
inc
repz
add
push
fildl
les
jo
pusha
xchg
adc
mov
adc
mov
out
into
push
push
popa
pop
inc
fs
xor
mov
das
sbb
cmp
scas
addb
scas
pop
push
fucom
sbb
mov
lahf
mov
pop
lcall
lret
xchg
jp
in
push
imul
scas
xchg
push
mov
dec
dec
xlat
rclb
add
scas
mov
inc
pop
popa
jne
jns
pop
pusha
mov
xor
cmp
outsl
lods
int
mov
ds
xor
imul
pop
push
mov
rorb
add
repnz
pop
mov
cmp
outsb
mov
add
mov
xor
push
adcl
daa
dec
in
xlat
jb
push
imul
sahf
xchg
loopne
jmp
shll
in
popa
ret
add
outsb
js
movsb
cmc
mov
imul
inc
leave
and
mov
fdivs
shrl
mov
adc
shlb
push
cmp
lock
push
in
cmpl
xlat
scas
mov
mov
add
dec
jp
add
mov
call
dec
and
pop
dec
aad
sbb
mov
mov
mov
in
mov
rorb
test
push
sub
in
mov
test
sub
test
popf
pusha
sub
lcall
cmpsb
mov
adc
pushf
adc
pop
xchg
mov
inc
int
jecxz
mov
jmp
cs
sahf
cmp
mov
lcall
push
xchg
fisubrl
fstl
mov
or
add
call
cli
cld
sbb
mov
inc
fisubs
xchg
movsb
mov
pop
xor
xchg
outsl
aas
out
lcall
fwait
cmp
orb
xor
out
sbb
pop
xor
ja
aaa
scas
je
je
and
pop
lods
mov
or
push
repz
jne
pop
xlat
shl
test
xchg
nop
adc
jmp
rolb
fisubl
xor
out
add
iret
imul
fcmovu
sub
mov
push
stos
stos
or
or
push
lahf
jne
movsl
jae
mov
jg
xchg
sbb
jmp
cmp
fstpl
test
inc
insl
cmp
clc
pop
mov
adc
adc
lods
sub
mov
ficomps
std
cmpsb
aas
fisubrl
iret
das
adc
xchg
ljmp
repz
or
test
lret
add
or
push
add
jae
add
iret
or
jnp
out
xorb
pop
ljmp
push
sbb
adcl
sbb
test
and
inc
lock
pusha
cli
test
xor
aad
sub
leave
in
inc
pop
xchg
cld
xor
add
icebp
sub
adc
mov
cld
movb
les
loope
inc
cmp
andl
out
insb
push
cmpl
out
cld
mov
xor
aam
fdivrl
or
shlb
out
cmp
lods
das
xor
pusha
cmp
outsl
add
fucomi
int
cmp
add
orb
mov
cmp
test
xor
rcll
jmp
shll
and
xor
js
inc
out
pop
jmp
mov
test
mov
and
test
mov
sub
mov
test
ja
sbb
icebp
mov
int
jns
cmp
xor
test
cmp
in
stos
push
in
pop
in
pop
push
push
mov
mov
mov
sbb
pop
mov
jae
ret
dec
sbb
adc
jge
pop
out
dec
pop
out
mov
shl
mov
cld
or
push
ja
data16
into
mov
movsl
and
bound
mov
xor
rol
test
lret
xor
adc
jnp
sti
and
aad
ret
addr16
dec
enter
aaa
ret
enter
loopne
lods
movl
arpl
shll
mov
test
icebp
fcomps
or
jmp
fdivrs
dec
xor
mov
pop
jge
les
cmp
dec
mov
mov
and
xorl
es
lret
cwtl
pushf
jge
icebp
test
pusha
mov
xchg
mov
jne
push
cmc
or
repnz
mov
out
cmpsl
mov
rorl
jge
inc
jmp
faddl
xor
mov
lods
mov
add
popl
mov
out
repz
lahf
mov
test
and
ljmp
rorl
inc
data16
enter
repnz
std
in
fisttpll
jmp
or
adc
sub
aas
sub
and
mov
jmp
in
jne
rorb
inc
push
in
inc
insl
xchg
inc
aad
sub
jge
lret
enter
jecxz
mov
xchg
mov
adc
pop
dec
cld
cmp
popa
gs
test
pusha
in
fildll
leave
gs
fs
push
aad
scas
push
lods
push
lcall
icebp
lret
repz
cs
mov
or
lcall
cmp
cwtl
imul
fldenv
pop
clc
sbb
aaa
jmp
call
dec
aaa
cmp
js
fdivs
cs
stos
add
xor
xor
or
inc
jno
mov
inc
cltd
mov
jne
ds
cmp
or
popl
or
stos
sub
mulps
fwait
mov
scas
lcall
int3
mov
sub
lea
cwtl
std
mov
jne
insl
imul
outsl
inc
rolb
negl
repnz
repnz
jp
dec
add
inc
dec
fisttpll
xchg
jno
add
in
divl
jb
sub
or
test
out
cmp
call
int
into
das
fstl
clc
sbbl
xor
push
rolb
hlt
adc
loopne
dec
loope
cld
dec
fs
scas
pop
hlt
push
gs
sub
pop
pop
in
inc
rclb
cmp
cmp
hlt
jg
mov
sbb
jb
mov
rcrb
das
ret
shll
out
repz
xor
and
das
push
scas
dec
sub
add
xor
push
mov
xlat
stos
pop
add
pusha
popf
mov
es
mov
add
push
jecxz
cli
mov
pop
sub
or
mov
or
pop
repz
sbb
cmp
test
loop
push
xchg
rcll
add
in
and
test
cmp
dec
push
xchg
out
pusha
cmp
cltd
jp
mov
cmp
xchg
sbb
fwait
ret
pop
sub
negl
add
and
roll
xor
push
mov
dec
and
jecxz
shll
lock
fidivl
and
adc
dec
sbb
and
pop
mov
mov
jbe
out
stos
add
ss
sub
out
jge
filds
add
je
lods
orl
clc
out
jecxz
ss
adc
push
enter
ffree
xchg
cmpsb
fcmovbe
and
sbb
out
adc
stos
popf
ljmp
add
ljmp
les
xor
in
lret
push
mov
push
mov
inc
mov
stos
gs
mov
into
xchg
pop
rorl
push
add
cli
lret
rcr
mov
xchg
insl
xchg
lea
lods
imul
aam
outsl
sub
fldt
cmc
fcmovnb
mov
ret
and
pop
adc
daa
jbe
xlat
stc
fsubrs
mov
sti
sbbl
push
dec
mov
and
cmpsl
push
fcmovbe
rclb
cld
sub
or
loopne
sahf
adc
and
xchg
xchg
cmp
ss
jb
push
fcom
dec
es
mov
dec
outsb
adcb
int
pop
hlt
mov
push
fdiv
sub
shrl
ja
mov
xchg
dec
xor
ret
xor
sub
xor
cmpsb
mov
pop
inc
inc
es
cld
test
xor
xchg
lcall
mov
or
mov
mov
mov
and
pop
out
xorb
jmp
pop
mov
xchg
mov
scas
out
sbb
push
sub
cmc
mov
test
aad
jno
and
mov
cmc
push
out
xor
mov
shrb
or
testb
push
loope
sahf
cmpl
xchg
pop
mov
jle
pop
fildll
int3
mov
sub
pushf
stc
cwtl
and
nop
shrl
push
or
sub
aam
je
int
fidivs
sbb
push
std
mov
inc
inc
and
and
adc
lret
xchg
push
sbb
mov
test
scas
pop
ret
aas
pop
xor
lock
addb
nop
sahf
jnp
cmp
add
sbb
push
into
jbe
fisubrs
imulb
cli
push
xor
push
shl
outsb
and
ss
loopne
mov
xchg
les
and
ljmp
ret
pop
inc
mov
insb
and
xor
pop
push
or
jmp
push
mov
loope
xor
pop
ja
xor
jo
jg
lret
in
jae
imul
fstpt
push
sub
jae
add
fs
push
dec
lahf
cmp
mov
or
gs
xchg
mov
jo
adc
insb
mov
adc
mov
xor
xchg
rolb
sub
xor
daa
dec
xor
jae
stos
push
sub
addr16
jp
jo
cmp
adc
sbb
aam
push
addr16
enter
ljmp
jle
xchg
es
in
popa
stos
mov
push
test
arpl
xor
xchg
push
std
pop
gs
repnz
hlt
add
scas
sbb
in
add
loope
pop
cli
stos
lods
stos
lahf
test
iret
test
mov
mov
dec
daa
icebp
push
dec
js
ljmp
adc
in
pop
scas
and
ret
insb
lods
add
adc
pop
mov
dec
mov
and
imul
inc
jl
divl
lahf
adc
xlat
ret
jbe
not
aam
movsb
cltd
jns
inc
aaa
movsl
pop
test
xchg
jge
orb
push
das
les
xor
xchg
sub
mov
push
inc
add
cmp
add
mov
adc
scas
cmpsl
movsl
addr16
mov
inc
jl
rep
jbe
movsb
shrl
or
in
aad
loop
test
vpackuswb
sbb
notl
sub
xchg
dec
dec
pop
cmp
out
mov
movsl
cmp
adc
xchg
and
sbb
pop
mov
jge
sub
scas
filds
cld
or
mov
jnp
aas
cmovg
scas
inc
ss
mov
and
push
daa
adc
or
mov
mov
jno
jl
adc
and
xchg
mov
push
and
std
and
xor
and
fmull
mov
es
push
and
loope
inc
add
xchg
ja
aas
scas
sbb
ret
mov
dec
inc
popf
mov
imul
std
pop
push
stc
daa
out
loope
mov
mov
mov
fbstp
jmp
push
pop
lods
cmp
out
pushf
loope
mov
sbb
jp
imul
fsubrl
push
push
mov
dec
fadds
cmp
mov
js
cmp
aad
les
sub
or
cmp
lods
mov
push
in
ja
pop
mov
ja
cmp
lret
addb
cmpsl
add
adc
jb
out
in
stos
out
call
inc
sbb
leave
push
adc
pop
test
out
out
push
stos
test
push
sbb
dec
sbbl
gs
addl
adc
push
gs
scas
stc
jb
mov
sarb
or
ret
jae
jno
add
icebp
scas
dec
mov
cmc
or
sbb
imul
mov
jne
sqrtps
mov
std
pop
inc
mov
fistps
xchg
mov
xor
fdivs
sub
pushf
adc
cli
cmc
lea
inc
sti
popa
inc
cmpsl
ds
in
mov
call
stos
pop
jae
jle
and
cs
xor
jae
int3
push
push
adc
mov
push
xor
xchg
xchg
icebp
pop
lods
loope
fsubrl
pop
add
jbe
jg
pop
cmp
xchg
xchg
addr16
hlt
cs
aam
jmp
adc
popf
adc
cmp
lahf
jne
xor
push
jnp
and
xchg
outsl
push
rcrb
xchg
sub
cmp
adc
sahf
out
mov
sarb
stos
add
push
fs
xchg
inc
mov
ljmp
cli
push
cmp
sbb
inc
or
push
cmp
leave
cmp
shrb
ja
fwait
add
lret
sbb
lods
xchg
xor
pop
scas
out
int
mov
movsl
mov
push
fcompl
pop
fnstcw
inc
test
ja
ret
aam
push
cmp
imul
test
test
jmp
rol
outsl
notl
cmp
sbb
imul
insl
adc
xor
jg
xchg
leave
insl
xor
ja
mov
push
ds
out
xor
fstpl
loope
push
cmpsl
inc
inc
popf
adc
dec
jge
pop
sbb
add
sti
daa
repz
jle
lcall
das
jle
cmc
mov
mov
push
int
xchg
in
fnstenv
addr16
outsb
cmc
in
icebp
pop
frstor
decl
xchg
push
jecxz
fwait
sbb
out
pop
loope
xchg
push
subb
test
xlat
les
push
pop
add
dec
movsl
adc
outsl
popa
and
and
mov
ss
adc
push
or
xchg
sub
xchg
out
loop
out
pop
jle
out
bound
mov
adc
ljmp
xor
insb
add
stos
lret
cmp
loopne
mov
sbb
lret
lea
data16
sbb
push
imull
fldenv
dec
push
inc
mov
insl
test
mov
lret
test
lock
jbe
dec
adc
in
fildl
pop
fidivrs
ss
mov
insb
in
cmc
insl
sbb
bound
aam
jl
fistl
push
xchg
movsb
add
idivb
or
pop
sarb
jnp
shll
adc
lods
pop
repz
test
push
inc
cmc
addb
sub
pop
in
addb
xchg
rcrb
test
mov
roll
sub
rclb
shlb
outsb
aad
mov
sub
inc
and
push
pop
gs
arpl
mov
arpl
xor
test
push
sti
xor
adc
scas
test
es
mov
jne
mov
pusha
call
std
add
sbb
add
mov
fistps
jbe
xchg
push
repnz
loop
xchg
jmp
rcll
lret
sub
cmp
aam
cmp
adc
movsl
fsubl
add
push
mov
ror
jne
fstps
mov
insb
shll
lds
gs
jbe
pop
pop
loope
cltd
out
dec
mov
mov
je
cli
out
stc
mov
adc
and
outsl
mov
ret
test
cmp
push
outsl
jo
and
hlt
push
push
cli
cmp
gs
mov
repnz
nop
mov
jle
ja
clc
cmp
icebp
incl
repz
sbb
xchg
call
sbb
sbb
data16
hlt
orl
pop
add
scas
aad
movsl
imul
and
mov
repz
mov
or
mov
ja
jae
mov
loope
adc
fldcw
stc
sarl
mov
aas
xchg
xor
xor
push
inc
lahf
mov
inc
mov
scas
inc
das
mov
in
addr16
cwtl
in
jg
dec
scas
jg
faddl
and
mov
mov
jle
mov
das
popa
pop
push
rcl
inc
rcrl
jae
and
das
sub
mov
scas
cs
hlt
or
iret
jle
and
js
lock
loopne
repnz
xor
in
push
into
sti
js
jns
mov
aad
jg
movsl
and
leave
inc
aas
mov
mov
add
jno
iret
test
lret
add
popf
addr16
and
daa
sbb
adc
hlt
cld
jb
jge
jmp
insl
sahf
jae
or
and
icebp
adc
cmc
mov
inc
loop
pop
iret
hlt
mov
sti
loope
mov
jg
push
mov
sub
adc
xchg
pop
ret
inc
dec
pop
lock
nop
xchg
pop
out
imul
shl
aaa
pop
cli
push
jp
cli
push
mov
test
stos
enter
and
xchg
enter
rcll
xchg
leave
and
pop
sti
pop
or
das
fnsave
cmp
xor
sub
cltd
les
xchg
les
mov
outsb
jns
or
dec
xchg
addb
sbb
sbb
xchg
xchg
dec
pop
inc
or
mov
test
shlb
test
pop
out
push
repnz
inc
pusha
sbb
sub
or
adc
cs
imul
sbb
mov
cmp
ret
push
cmpsl
shrl
jle
dec
pushf
dec
jmp
xchg
adc
mov
cmp
or
orb
divl
jne
js
push
bound
xchg
fistps
xor
or
movsb
mov
xor
push
fsin
les
and
adc
ret
and
stos
push
pushf
aad
out
mov
cld
xchg
or
push
pop
aas
aas
dec
in
add
fnstcw
cmp
hlt
mov
fwait
leave
scas
and
push
xor
add
pop
mov
adc
dec
dec
mov
fdivp
jmp
push
cli
inc
adc
sub
fwait
lods
mov
pop
push
mov
iret
stc
in
sbb
pause
mov
in
and
test
and
enter
popa
inc
fwait
xchg
popa
cmpsb
gs
jge
push
mov
or
pop
or
mov
imul
inc
mov
aas
xchg
rcrb
or
xor
mov
mov
shr
mov
add
out
mov
dec
dec
daa
push
iret
outsl
mov
rcrb
aam
insb
push
rcrb
cmp
xchg
bound
mov
mov
test
ljmp
add
int3
inc
xor
jmp
imul
hlt
cmp
push
xchg
xchg
xor
outsb
mov
inc
mov
outsb
add
mov
jge
cmp
push
shl
js
cs
das
movsb
repnz
out
xchg
pop
adc
pop
data16
push
xor
xor
or
dec
cmc
sbb
xor
fs
and
push
mov
mov
mov
fmuls
push
lods
imul
imul
mov
test
push
es
sbb
data16
pop
lods
fs
push
xor
les
cmp
inc
cwtl
fiaddl
arpl
cwtl
cmp
dec
addl
inc
push
mov
pop
fs
mov
cmp
fadds
out
cmp
fs
out
xchg
xchg
outsb
xchg
testl
data16
lds
jg
jl
xchg
or
or
sbb
or
outsb
lahf
mov
xchg
push
or
jns
inc
dec
int
shlb
sub
out
dec
cld
xchg
ljmp
jmp
loopnew
in
movl
mov
mov
dec
cmp
jnp
dec
or
outsl
fldcw
fnsave
icebp
lcall
jne
and
pop
mov
jo
outsb
pop
nop
push
xchg
into
inc
mov
jb
push
aam
add
mov
xor
enter
push
adc
outsb
fldl
fsubl
cmpb
cmp
lock
leave
outsl
pushl
pop
cmp
jle
jo
push
push
mulb
inc
push
aaa
sbb
sbb
sbb
loope
adc
push
dec
sub
cli
sub
cli
sbb
or
push
sahf
enter
or
lods
jg
mov
pop
xlat
mov
ja
push
mov
add
nop
test
mov
or
mov
jl
mov
push
js
xlat
test
cmp
stos
sahf
pop
addb
repnz
ja
ret
dec
mov
dec
cwtl
sub
pop
xchg
in
sub
mov
pop
int3
jle
arpl
mov
mov
dec
mov
mov
in
arpl
jmp
rcrl
add
je
push
dec
xchg
jnp
lcall
mov
cs
push
in
inc
pop
push
jg
adc
imul
xchg
jne
pop
mov
sbb
lret
call
movsl
xchg
cmp
push
insl
pop
mov
sbb
and
sub
pop
test
fdivl
mov
jnp
je
ds
mov
dec
push
imul
sub
mov
mov
aaa
cltd
add
push
adcl
jnp
mov
fisubs
inc
clc
fs
mov
lret
xor
jmp
xchg
xchg
mov
nop
nop
cmp
push
or
mov
sbb
jns
mov
fisubrl
js
dec
lcall
jg
xor
cmp
imul
insl
cmpb
xlat
push
push
movsb
rcrb
mov
lds
and
inc
je
pushf
cld
cmp
insl
lods
push
xchg
jp
rcrl
insl
fcompl
mov
data16
shlb
cmc
das
data16
add
mov
data16
pop
add
loope
or
pop
pop
in
mov
sbb
stos
mov
pop
jb
add
inc
sub
cwtl
inc
shll
add
push
repz
adc
es
cmc
cmp
popa
enter
push
sub
mov
or
movsl
add
cwtl
fs
inc
outsl
lds
outsl
ljmp
rcl
push
sbb
or
pop
mov
add
bound
xor
repz
xor
fbstp
shrb
push
or
jg
jmp
dec
add
mov
gs
dec
popa
pop
cmpsl
fnstcw
shlb
jno
ss
jne
mov
mov
adc
cmpsb
adc
pop
stc
mov
outsl
xchg
dec
cld
jno
shlb
xor
divl
out
movsl
mov
cmp
jae
out
xchg
clc
mulb
stos
notl
loope
jbe
shll
loop
and
and
push
cltd
pop
or
cs
push
adc
subl
cmp
adc
shrl
cmp
jae
enter
popf
lahf
in
pusha
insb
add
xor
lret
add
mov
repz
sub
or
imul
lret
call
sub
ret
jmp
xchg
sti
dec
xchg
aaa
int
lds
adc
sbb
insl
lods
aam
push
cmp
repz
std
mov
xchg
dec
xor
imul
shlb
push
cltd
adcl
mov
xlat
jg
mov
inc
mov
xor
shll
jg
xchg
and
sbb
push
mov
pushf
pop
movsb
fcoms
pusha
sahf
mov
call
in
add
mov
mov
cs
cmp
pop
pop
repnz
cmp
fisubrl
test
add
jo
scas
loop
adc
mov
test
inc
stos
aaa
and
bound
repz
nop
push
cmp
mov
push
imul
adc
mov
or
lahf
push
cli
test
pop
pop
insb
je
lret
sub
pusha
inc
inc
push
outsl
enter
fisttps
xchg
or
or
mov
inc
ret
cwtl
in
inc
mov
cmp
jmp
outsl
dec
repz
fnstenv
iret
inc
test
aad
jp
into
push
rorb
iret
test
sbb
mov
mov
jbe
daa
orps
xchg
and
jmp
adc
call
mov
enter
adc
arpl
frstor
loop
sti
iret
sub
jne
imul
xor
mov
sti
jmp
aas
sub
daa
pushf
add
shll
jbe
call
ficoml
mov
adc
cld
jle
xchg
mov
push
int3
xor
lret
push
in
mov
sub
cltd
aad
mov
xchg
or
cs
pop
ret
lods
insb
adc
std
or
xor
adc
rorb
int3
mov
add
fs
orl
inc
and
fnstcw
sbb
mov
mov
sbb
fistpll
inc
dec
ds
push
fstl
cltd
out
jmp
pop
sub
adc
das
inc
aad
jns
pop
xor
xor
leave
pop
inc
test
int
pusha
fwait
push
int3
adc
imul
mov
imul
shrb
aaa
xchg
mov
daa
inc
leave
sahf
add
and
out
sub
push
das
and
insb
leave
in
jg
jno
rorb
out
mov
arpl
data16
dec
jno
inc
mov
lret
dec
add
movsl
lds
cmp
pop
popf
je
pop
imul
jmp
cmpsl
inc
jecxz
in
cmp
jecxz
nop
push
popa
dec
or
dec
popa
aam
sysenter
nop
and
sub
dec
rcl
mov
sbbb
mov
outsb
inc
js
sub
stc
scas
jns
repnz
inc
mov
mov
mov
mov
fcomps
fistpll
jp
sti
fldenv
pop
sbbb
push
fnstcw
pusha
out
lods
push
out
add
mov
mov
xorl
push
push
xchg
mov
push
push
xor
imul
push
fs
jno
mov
mov
lock
jo
xchg
test
inc
in
mov
fildll
out
inc
sub
aam
ret
and
pop
inc
addr16
fnstenv
push
lea
pop
mov
outsb
adc
cmpsb
dec
mov
test
ffreep
and
pop
in
mov
and
cmovo
jno
gs
jne
push
push
pop
lahf
repz
lea
xchg
rcrl
std
mov
lcall
out
outsb
js
jl
push
scas
imul
sarl
push
jne
ffree
jmp
adc
inc
sub
and
xor
mov
addr16
mov
stos
xor
jne
push
in
ffreep
push
cmp
ret
test
cs
pop
pop
cmpsb
ret
pop
std
fldcw
inc
and
dec
push
scas
std
stc
push
lea
mov
loop
jo
loope
sub
xor
subl
cmp
jl
xor
and
lahf
push
in
test
mov
xchg
bound
lods
and
jne
ret
xor
or
or
jl
jge
std
or
lret
hlt
enter
aad
inc
jnp
stc
xchg
out
insl
jecxz
sub
push
jle
push
arpl
mov
mov
ljmp
mull
add
hlt
pop
dec
mov
pop
dec
cmp
ds
push
fstpt
test
mov
pop
js
pop
jle
and
mov
add
pop
and
lcall
adc
rcr
jecxz
rol
mov
stos
dec
mov
mov
rcr
enter
addb
aam
pushf
inc
je
int3
adcb
pop
mov
jns
pop
sub
cmp
sarb
xchg
enter
push
faddl
adc
insl
jl
addl
mov
inc
mov
mov
ret
cwtl
fadds
and
jns
pop
sub
jno
jge
cmpsb
fcomip
addr16
ret
hlt
shrl
ja
cli
push
icebp
mov
xchg
lods
repz
cltd
hlt
xor
ja
push
mov
push
sbb
inc
rolb
pop
push
outsl
ficompl
in
flds
adc
mov
inc
pushf
in
ss
sbb
cmp
scas
aad
push
aad
shll
mov
push
mov
loopne
iret
xchg
pop
sub
test
mov
test
popa
xchg
or
lea
sub
sub
jns
mov
xor
push
or
lret
outsb
sub
mov
push
push
adc
ja
lret
js
fwait
lods
sub
aaa
jo
scas
rorl
or
ret
aaa
push
push
movsb
or
out
sti
pop
sub
jne
pop
cld
pop
mov
bound
push
bound
cld
cmc
adc
clc
lods
mov
orb
call
pop
push
jb
push
sti
insb
insl
je
aas
pusha
push
loop
stc
inc
inc
adc
sti
dec
sbb
clc
pop
xchg
sub
in
inc
cmpsl
xlat
dec
sbb
mov
outsb
jmp
mov
xchg
in
fsub
icebp
push
sar
stos
mov
divl
sub
subl
mov
sbb
and
in
xor
inc
xchg
ret
mov
mov
mov
lahf
sti
in
push
andl
push
loope
jno
push
mov
xor
outsb
int
sahf
ss
shr
lcall
jbe
pop
incb
and
mov
mov
mov
cmp
add
xor
adc
cmp
insb
call
pop
add
pop
clc
lods
inc
jo
cld
repnz
psubw
fidivrs
ret
in
mov
adc
imul
mov
adc
rol
fildll
pop
arpl
mov
mov
in
mov
dec
xlat
mov
decl
shlb
and
fisubrl
jne
mov
sbb
xor
mov
push
mov
xchg
icebp
icebp
inc
inc
jbe
scas
lcall
jo
out
out
dec
int3
add
in
fildl
mov
cmpsb
push
dec
cli
ret
inc
jbe
leave
dec
adc
ja
and
es
xor
popa
test
or
les
add
cmp
out
js
xorb
mov
sbb
pop
pop
xor
add
mov
ftst
xrelease
dec
cs
outsb
jmp
push
jnp
sbb
fdivrp
jns
fs
call
mov
daa
shr
fbstp
and
scas
mov
loop
movsl
adc
add
js
jg
int
mov
ficoms
and
aad
test
xchg
xor
jae
subb
mov
push
mov
dec
dec
jg
pusha
stc
xchg
scas
xor
iret
aaa
sub
or
mov
xchg
icebp
sbb
test
loopne
stos
in
and
popa
add
pop
xchg
xor
xlat
push
push
and
xchg
pop
aad
hlt
arpl
jb
sarb
sbb
loop
orb
out
inc
shll
pop
pop
xchg
mov
mov
repnz
mov
inc
in
mov
xor
xchg
test
mov
jbe
das
mov
dec
xor
fnstsw
outsl
ret
adc
mov
test
mov
pop
jnp
or
jns
or
jo
mov
xchg
cmpsl
mov
into
add
adc
outsl
fsubs
inc
test
pop
pop
in
push
xchg
jmp
out
sbb
call
std
test
insl
add
mov
or
bound
mov
inc
push
adc
call
stos
icebp
and
or
inc
add
xor
cmp
pushf
stc
std
cli
fimull
stos
xchg
jo
loopne
push
xor
loope
lahf
inc
fisubrs
out
nop
sub
test
jg
sub
or
decb
aad
jb
aam
movsl
xchg
jbe
lods
inc
cltd
pop
popa
popa
cmp
cmp
or
movsb
jmp
adc
jnp
adc
es
mov
ret
in
rclb
lock
add
enter
xchg
jo
jecxz
add
out
pop
cmp
das
mov
mov
mov
jmp
mov
mov
sbb
lahf
add
push
or
add
lahf
sbb
pop
arpl
enter
jmp
xchg
rcl
mov
mov
pop
ja
pop
cmp
repnz
inc
int3
jl
inc
inc
push
push
jb
inc
jl
jecxz
sub
pop
pop
je
xor
mov
lcall
in
cmp
cmp
add
jecxz
cs
inc
fisubs
mov
mov
mov
stos
divl
dec
out
jae
adc
xchg
test
cwtl
iret
xchg
jns
pop
and
pop
test
arpl
cmpsl
mov
testb
test
imul
mov
stc
adc
pop
push
sub
jp
mov
outsl
mov
insl
imul
aam
jp
cwtl
xchg
in
scas
inc
aas
cmc
frstor
repnz
fsubrs
xchg
inc
rolb
or
insl
mov
xor
aas
test
nop
xor
jne
out
mov
hlt
movsb
mov
sbb
nop
inc
xchg
lcall
sbb
fmulp
dec
push
pushf
xor
cmp
stos
xchg
mov
xor
cltd
fisttpl
cs
jno
out
rolb
push
int
sti
xor
imul
jl
lret
mov
lret
stc
mov
xchg
xor
stos
and
fwait
jb
insb
jo
popf
cmpsb
cwtl
popf
stos
sahf
les
xchg
mov
cmp
ret
leave
imul
out
je
loopne
es
dec
fwait
xlat
push
sbb
dec
sub
dec
jmp
lret
mov
lcall
jnp
pop
push
lods
movsl
xchg
data16
mov
mov
sti
int
lret
repz
rorl
ss
pushl
sub
fiaddl
and
iret
int
es
aam
lret
xchg
out
roll
lds
xchg
adc
rcrb
cli
dec
out
loop
icebp
movsb
repnz
scas
cmp
mov
jns
pop
pop
cmp
inc
and
stos
aas
call
nop
stos
out
aad
pop
popl
fcompl
mov
into
add
das
jae
xor
mov
sub
pop
dec
jns
dec
jg
sarl
and
imul
cmp
pop
notl
adc
outsb
jl
cmpsb
mov
jle
int3
out
lock
pop
test
inc
push
mov
ret
cmp
imul
sbb
repnz
stos
neg
mov
outsl
adc
rclb
xor
out
leave
dec
frstor
inc
js
mov
mov
cmp
inc
divb
inc
mov
mov
shrl
lds
in
aad
or
fimuls
push
push
jmp
mov
mov
jo
fistps
sub
movsb
xchg
and
pop
cmp
movsl
inc
pusha
aad
inc
inc
cld
inc
mov
sbb
xlat
cmp
or
mov
adc
lock
inc
je
les
push
sub
inc
xchg
fmulp
add
movsl
lret
cltd
mov
js
das
push
cmp
xchg
xchg
sub
jle
test
xor
mov
sub
mov
icebp
dec
adc
iret
and
xchg
roll
dec
dec
inc
or
cmp
cld
xor
sub
cltd
adcl
push
sbb
movsb
sbb
lahf
in
pop
mov
lods
aam
and
mov
jo
mov
fidivl
dec
xchg
cmpsb
loope
inc
movups
jo
pop
stos
sarb
push
push
test
jl
mov
stc
pop
iret
dec
dec
idivl
repz
fsubrs
fsub
add
pop
jle
and
sbb
fisttpl
rcll
je
xchg
adc
mov
inc
lock
std
into
pusha
mov
and
es
mov
sbb
sbb
out
inc
cwtl
call
xchg
orb
out
je
clc
add
mov
mov
lret
push
out
and
ljmp
icebp
xor
mov
out
and
fcomi
sub
in
inc
arpl
pop
and
adc
ljmp
mov
mov
sbb
add
mov
arpl
mov
ja
mov
jne
dec
out
fidivl
fldt
jno
lret
mov
cs
out
dec
add
hlt
lea
push
xchg
push
jecxz
push
stc
adc
add
xchg
mov
jecxz
pop
or
mov
xlat
cmp
cmc
insl
adc
aaa
add
xor
jmp
fcom
jne
sbb
mov
inc
insb
or
mov
cmp
adc
cwtl
inc
popf
xor
xor
add
fcomps
test
mov
adc
pop
sbb
lret
scas
je
dec
out
xchg
jle
mov
dec
adc
cmpsb
push
int3
add
lods
add
pop
and
add
fcomps
lret
fcomps
cs
int3
and
cmpsb
and
out
lcall
bnd
adc
push
lret
dec
pop
in
ss
or
out
loopne
mov
xchg
aas
jl
and
fs
ja
jecxz
mov
add
repz
inc
popf
dec
test
insb
mov
in
or
and
es
jge
push
dec
sti
xchg
test
push
pop
mov
std
xchg
nop
xor
xor
sbb
cwtl
pop
push
or
mov
aad
jle
or
pop
add
stc
fbld
cld
aad
leave
mov
jge
sbb
or
repnz
mov
add
cmp
outsl
sub
inc
mov
mov
jae
test
cmp
mov
mov
pop
pop
outsl
mov
lret
std
cltd
mov
inc
dec
mov
inc
scas
outsl
or
cmp
mov
jecxz
mov
mov
test
clc
sub
sub
mov
xchg
int
cmp
cmpsl
add
pop
orb
mov
pop
fs
pushf
cld
inc
sub
adcl
outsl
dec
fs
dec
add
mov
jo
or
sbb
test
fmul
sub
inc
testb
xor
jne
sub
push
jg
out
lahf
mov
ficomps
cmp
adc
sbb
pop
decb
frstor
adc
fdivr
sbb
jo
lret
sub
adcl
fbstp
daa
inc
cmp
pushf
mov
mov
or
mov
jle
push
dec
xor
popa
add
js
xor
ret
cmpsl
mov
push
sub
in
jle
sahf
mov
mov
decl
pop
sub
nop
sarb
dec
add
repnz
cmp
test
mov
out
repz
dec
cli
xor
mov
push
ljmp
jle
inc
mov
mov
mov
fwait
jbe
pop
int
jo
jno
mov
divb
pop
xor
push
push
mov
cmpsl
sbb
push
jns
sub
xchg
and
pop
and
popf
lret
int3
push
and
stc
xor
cli
xor
fs
faddp
insl
or
jo
insl
add
or
mov
test
or
sub
xor
add
sub
sbb
int3
loopne
popf
in
mov
push
insb
mov
pop
out
xor
cmp
add
or
in
cld
lcall
pushf
test
mov
cmp
mov
out
jmp
repnz
mov
ja
push
dec
xchg
hlt
push
pop
push
adc
sbb
xchg
sub
dec
xor
sahf
cmc
mov
jo
pop
icebp
xchg
lea
xor
ja
popa
jbe
pcmpeqw
fisttpll
arpl
jns
dec
push
jecxz
je
mov
ficompl
mov
xorb
hlt
push
jbe
mov
pop
push
cmpl
fwait
clc
pop
enter
movswl
inc
sub
inc
clc
int
insb
ss
sarl
aaa
pop
gs
push
mov
sub
loopne
sub
lods
sbb
xlat
loope
aaa
lret
ss
or
cmp
fcomps
xchg
sub
inc
sbb
insl
fucom
and
incl
sti
lea
roll
divl
cmp
jne
testl
cltd
aad
mul
push
mov
ljmp
jle
sub
popf
ret
mov
mov
jmp
sbb
adc
jo
or
pusha
or
pop
cmp
jl
mov
pop
mov
inc
nop
jmp
cmp
faddl
sub
sbb
lock
cmpsb
mov
pop
stos
iret
ret
shll
iret
ds
sbb
ficomps
jmp
dec
jns
out
lds
or
mov
jge
cmc
pop
push
xor
xchg
loope
xchg
and
fisttpll
rep
ret
shrb
mov
rorl
adc
lret
lret
or
cs
add
mov
lods
sbb
mov
cmpsb
and
into
adc
into
push
aad
fistpll
ficoml
cmp
lret
or
stos
insl
in
lock
xlat
addl
sbb
cltd
dec
inc
std
insb
cmp
inc
push
jae
mov
insl
inc
add
aam
aaa
jo
jmp
enter
mov
movsl
jecxz
sub
push
enter
pop
ja
inc
mov
jnp
adcb
ss
mov
roll
cmpsb
outsb
mov
jg
or
inc
out
addr16
sub
test
ret
mov
push
je
loopne
sbb
dec
xor
pop
lds
push
fwait
movsb
es
jo
fucomip
stc
stc
mov
stos
push
lods
adc
or
cmp
repz
or
int
cli
test
stos
mov
jmp
je
movsl
rcrl
subl
mov
cli
or
adc
fldt
jno
leave
xchg
mov
adc
icebp
repz
jnp
or
icebp
and
pusha
mov
xor
inc
mov
or
or
jp
ret
outsb
arpl
outsb
lods
fldenv
dec
pop
enter
push
or
test
dec
mov
adc
inc
xchg
pop
sbb
es
sbb
xchg
fildl
ljmp
cmp
insl
adc
cmpsl
insb
push
cmp
loop
or
and
inc
data16
push
adc
mov
shrb
mov
rorl
push
add
inc
lret
in
insl
and
mov
lret
out
out
test
mov
loop
pusha
fnstsw
mov
sbb
push
lret
mov
ljmp
jbe
push
icebp
push
push
imul
cmp
mov
hlt
scas
sbb
ret
dec
fucomp
inc
push
pop
mov
dec
cld
pushf
jl
adc
lods
mov
js
call
loop
sarb
add
cmp
adc
cwtl
pop
sbb
jbe
xchg
fisubl
xor
popf
cmp
sahf
xchg
mov
lcall
pop
inc
jno
ja
mov
test
xchg
icebp
dec
cltd
and
sarl
mov
sahf
xor
jmp
mov
xchg
adc
int3
dec
setl
js
imul
jo
fldl
scas
mov
sbb
jg
rcll
xchg
daa
nop
mov
push
shl
mov
add
dec
inc
pop
fisubrl
cmpl
cmp
lcall
pop
or
mov
pop
xchg
in
in
pop
fwait
test
orb
div
xchg
cwtl
mov
mov
lods
stc
mov
arpl
cmp
sbb
fisttpl
pop
jo
sarl
frstor
mov
test
dec
outsb
out
fldt
cmp
push
and
xor
mov
cli
pop
push
pushf
mov
jo
data16
or
or
fistl
mov
add
das
repnz
push
push
push
dec
pop
popa
pop
mov
sub
push
notb
sbb
mov
outsl
inc
jno
test
fnstcw
int3
cmp
jne
call
mov
test
fnstsw
in
dec
mov
ret
xor
push
sahf
test
pusha
pop
enter
dec
stos
test
loop
xor
cmp
mov
outsl
mov
adc
lea
jg
lods
sbb
lock
dec
ss
cli
push
mov
pop
mov
add
mov
adc
test
test
popa
ljmp
pop
pop
insl
sub
cmpsl
rcr
stc
jmp
jae
lea
movsb
test
mov
push
fs
inc
lock
outsb
sbb
stos
nop
add
dec
push
adc
and
in
les
aas
mov
jno
inc
push
dec
push
in
pusha
add
push
xor
lods
xor
xor
dec
lea
sub
xor
enter
dec
lods
jle
orb
repz
xchg
imul
adc
mov
cmc
jae
in
popa
frstor
and
and
lock
mov
lret
inc
mov
jb
push
aam
testl
adc
test
jmp
sub
mov
stc
popf
jnp
xor
call
mov
imul
in
jns
or
inc
sub
loopne
shlb
xchg
fwait
adc
sbb
aas
dec
adc
shll
mov
jns
push
push
sub
mov
xchg
and
xor
mov
dec
in
lahf
sahf
add
fnstenv
xor
cli
sub
mov
pop
xor
fbld
cmp
fwait
pusha
outsb
int
aam
push
fnstenv
jno
pop
mov
lods
sbb
mov
addr16
cmpsb
aam
pop
les
outsb
test
xor
add
mov
pop
cs
insb
das
dec
fsubr
mov
mov
cld
mov
shll
mov
mov
pop
xchg
cmp
cmp
arpl
pop
test
sub
test
pop
pop
push
mov
imul
in
or
enter
mov
or
jg
daa
adc
push
mov
out
stos
rolb
push
fcmove
test
jns
jp
cmpsb
xchg
xchg
xor
popa
int3
push
mov
cmpb
data16
sub
inc
adc
fwait
bound
lcall
out
inc
mov
sbb
insl
sub
leave
mov
push
dec
mov
ss
testb
inc
les
mov
js
insb
xlat
mov
xlat
mov
push
inc
xor
sbb
imul
test
xor
xchg
cwtl
stos
mov
sub
xchg
inc
std
mov
loop
std
data16
andl
mov
fcoms
movsb
pushf
cmpsb
gs
popa
test
iret
xor
movsb
movntq
cmp
int
jns
xchg
inc
fwait
mov
jb
stc
xor
pop
out
push
cs
pop
and
xor
sub
dec
push
insb
xchg
imul
ja
push
adc
mov
aas
dec
pop
test
addr16
scas
sub
inc
gs
cmpsb
sub
cmp
push
int
cs
test
cld
cmp
sbb
andb
test
ss
jne,pn
mov
jmp
lds
sub
adc
jle
inc
push
leave
jge
repz
lcall
xchg
and
test
lods
jp
rol
jbe
imul
sbb
test
ret
add
cmp
mov
in
pop
cmpsl
dec
repnz
loop
sbb
cli
imul
mov
fmuls
jo
pop
outsl
imul
cmp
repz
iret
stc
fs
gs
fdivrs
mov
mov
int3
jns
mov
jnp
cmpsb
mov
ds
mov
daa
rcr
leave
pop
sub
pop
mov
call
push
push
xchg
popf
enter
push
lret
adc
out
jg
add
sub
mov
adc
xchg
mov
cmp
sub
mov
pushl
popf
out
add
cmpsb
push
int
dec
stos
jg
cmp
jecxz
jmp
push
mov
jae,pt
popa
mov
sbb
test
xchg
notb
lret
and
dec
jp
mov
daa
pop
pop
or
mov
scas
jae
mov
push
sbb
mov
xor
push
loope
xlat
std
icebp
daa
push
call
std
mov
test
clc
movhps
cmp
mov
fisubl
shrl
inc
lea
cmc
ss
sbb
xchg
sub
mov
sbbb
daa
insb
ja
lcall
ret
xchg
cmp
mov
add
xor
sbb
adc
lret
cmp
xchg
in
mov
sahf
ror
xorb
lock
and
mov
jge
out
inc
xor
sahf
xchg
subl
cld
ret
cmp
in
sbb
xor
mov
je
pusha
das
insl
mov
lahf
jl
sti
aaa
xchg
out
testb
pop
out
into
sub
push
jb
and
pop
ja
prefetch
in
inc
xlat
imul
inc
stos
inc
mov
xchg
das
xor
outsl
xor
adc
orb
adc
dec
dec
shll
dec
test
ret
cmp
mov
push
ss
das
sbb
cmp
cmp
xchg
scas
xchg
mov
adc
and
movsb
push
mov
daa
mov
jb
xor
and
inc
lods
call
and
out
test
mov
and
cmpsb
loope
pop
iret
popa
mov
or
pop
out
jne
jbe
dec
add
push
sbb
in
mov
sub
data16
and
mov
or
xor
xchg
push
mov
outsb
imul
pop
or
idiv
and
sbbb
sub
jns
in
aas
lods
lcall
mov
and
sub
xor
outsl
and
jne
test
scas
inc
pushf
cld
adc
push
mov
fisubrl
mov
in
fdivp
pop
xor
or
das
lods
in
push
mov
inc
pop
mov
lcall
std
and
adc
jbe
xchg
xchg
lock
jecxz
dec
pop
xor
aas
push
xchg
std
xchg
adc
xor
inc
dec
mov
or
adc
xor
aas
mov
pop
fdiv
je
mov
fistl
mov
bound
cli
inc
cwtl
cwtl
stc
adc
jns
dec
or
clc
test
aas
pushf
dec
mov
ds
repnz
mov
push
inc
mov
xor
in
bound
stos
fidivrs
repnz
aaa
cmp
fadd
imul
fs
sbb
rcrl
xor
lea
pop
ret
fwait
subb
xor
mov
mov
int3
mov
jnp
fsub
ret
mov
std
and
fwait
sub
mov
mov
aas
dec
roll
xchg
push
je
cmp
test
mov
shl
fiaddl
popl
fadds
inc
pop
incl
sbbl
and
inc
dec
movsl
stc
push
xchg
jne
and
lea
jmp
sahf
sahf
jge
push
jb
stos
lods
dec
adc
push
push
sub
stc
sarb
test
int3
inc
or
dec
mov
pushf
xchg
push
dec
xlat
in
pop
in
inc
xchg
pop
leave
mov
dec
jns
pusha
pop
jne
mov
jmp
xor
dec
es
mov
xchg
mov
addr16
lret
mov
xor
int3
outsl
add
insb
cmp
hlt
xor
call
fistl
sub
shrb
addr16
mov
lahf
fpatan
insb
daa
iret
mov
cmpsb
xchg
ljmp
sbb
or
orb
mov
lods
test
sbb
nop
lret
mov
notl
xor
test
mov
dec
push
push
xchg
jns
lahf
int
loope
xorl
pop
nop
daa
jne
int3
and
sub
mov
addl
pop
sbb
adc
add
scas
loopne
aaa
std
jae
and
mov
push
push
subl
mov
call
mov
push
and
imul
test
test
cmp
imul
cwtl
inc
arpl
add
sub
mulb
jb
es
ds
andl
mov
fwait
push
or
jno
xor
push
sub
fbld
or
jge
subl
push
jl
movsb
addb
iret
or
outsb
in
test
sub
xor
jmp
pushf
inc
push
push
pusha
rclb
fsubs
das
inc
jg
fstps
mov
mov
stos
insl
shrl
cmp
xchg
adc
push
mov
out
mov
mov
cmp
xchg
mov
inc
dec
les
push
test
hlt
dec
xor
push
mov
xchg
pusha
xchg
adcb
push
xor
adc
insl
sbb
cmp
add
dec
das
add
sbb
arpl
push
inc
test
sub
test
aam
icebp
lods
ret
ror
aaa
push
scas
scas
stc
out
and
scas
int
aam
out
aad
enter
movsl
sbb
jmp
movsl
mov
out
hlt
data16
cmp
dec
cmp
dec
aam
in
xchg
addr16
pushl
cs
and
cmp
pop
rolb
movsl
arpl
and
std
add
xorl
adc
loopne
loop
push
pop
jle
and
popa
cmp
lcall
pop
cmp
das
push
pusha
xchg
jns
scas
daa
icebp
dec
inc
sbb
cmp
add
es
test
or
xchg
sahf
call
xchg
jl
pop
xchg
dec
or
out
std
xlat
xchg
add
loopne
insb
add
xor
std
and
in
pushf
arpl
cwtl
push
jg
jmp
cli
lahf
xor
or
sub
mov
shll
pop
xchg
inc
and
jecxz
adc
aaa
bswap
cmp
fcmove
xchg
cmp
xor
mov
and
adc
sahf
push
cmpsl
addr16
and
push
ret
dec
sbb
sub
dec
xchg
dec
pop
dec
xor
xorl
scas
jecxz
faddp
cmp
subb
stc
std
adc
sub
test
jmp
cmp
and
test
ss
or
pop
lock
add
sti
aas
das
inc
pop
lods
sub
lock
hlt
scas
sbb
and
mov
fbstp
jge
jle
roll
sub
xchg
sbb
rcr
dec
lret
push
pop
aam
xchg
mov
mov
outsl
xchg
cwtl
fcmovbe
test
mov
cmp
cmp
pop
mov
lea
pop
cmp
int3
mov
add
mov
mov
aad
sbb
fsubrl
mov
xor
movsl
pop
aas
add
mov
mov
xchg
fidivrs
adc
xchg
shrb
ljmp
adc
popa
and
lods
fdivrs
and
mov
nop
xchg
loopne
xchg
test
sbb
inc
fwait
loope
inc
xor
andb
popf
pop
and
adc
movsb
jb
mov
ret
orl
adcl
mov
inc
je
rcrb
xchg
insb
pop
pushf
inc
xlat
sbb
xchg
stos
add
sub
inc
adc
int
push
pop
insb
sahf
pop
out
mov
mov
outsb
ret
mov
jmp
mov
sub
mov
daa
mov
mov
aas
cmpsl
shrb
cmp
ljmp
adcb
mov
and
xor
inc
xchg
daa
inc
cmp
je
cwtl
loope
push
subb
push
lods
aaa
hlt
pop
sahf
push
sub
cmp
jne
add
mov
daa
shlb
loope
sbb
rcrl
add
fsubr
je
cmp
adc
push
shlb
mov
pop
cli
mov
scas
push
xor
xchg
popf
outsl
gs
leave
pop
ss
dec
mov
or
jle
rcr
icebp
xchg
les
out
inc
xlat
cmp
and
jne
cmc
repz
fidivrl
mov
out
sti
cmp
insl
lcall
es
jg
sub
jecxz
inc
cld
scas
inc
push
fbstp
fnstsw
add
cmpsl
inc
mov
out
inc
mov
ss
aam
outsb
fcmovbe
dec
cld
sbb
lcall
popf
stc
cmp
es
rcl
adc
sub
and
in
loop
cld
stc
inc
stos
out
lods
inc
fsts
ljmp
mov
ljmp
sahf
daa
xor
inc
fnsave
cld
xor
sub
addr16
enter
lock
mov
and
nop
mov
lods
push
jnp
arpl
xor
xor
sahf
pop
js
or
bound
loopne
cs
pop
lcall
leave
and
cmp
dec
idivb
mov
and
or
jmp
add
outsl
lea
movb
push
pop
mov
fdivrs
xlat
cmp
pushf
test
mov
or
cmpsb
sti
xchg
cmp
roll
aaa
fcomps
call
mov
imul
mov
adc
or
lods
pusha
inc
addb
movsb
jne
outsl
jmp
add
pusha
add
cld
es
xor
int
xchg
push
ds
call
mov
cmp
lods
xchg
pop
mov
xchg
cmp
pop
sahf
testl
cmpsl
dec
inc
jnp
mov
lcall
inc
imul
dec
les
or
mov
out
ret
test
adc
lock
inc
jno
in
fbstp
sbb
and
mov
mov
cmovg
fs
out
mov
mov
pop
mov
cmp
mov
dec
jno
stc
sbb
insl
cmp
cwtl
and
lahf
aaa
sub
test
push
mov
cltd
xchg
jecxz
xchg
inc
jmp
in
and
ja
pushf
xlat
ja
popf
aas
lea
adc
ss
out
movsl
repz
add
pop
ret
fxch
xchg
pop
loopne
in
jns
inc
jecxz
adc
jle
test
xchg
bound
fadd
shll
xchg
and
aaa
xlat
jp
hlt
sub
nop
pop
sbb
sbb
mov
fs
mov
jge
repnz
sbb
dec
jbe
loope
push
pop
dec
outsl
and
and
xor
sub
mov
fxam
fidivl
es
jb
jecxz
mov
xorl
add
ljmp
std
std
cld
dec
push
push
push
xor
pop
xor
push
add
pushf
pushf
imul
jbe
cmp
bnd
inc
sub
js
sub
sub
shlb
cltd
les
iret
jo
pop
and
lds
and
and
outsb
sbb
xchg
fstl
lea
cli
lcall
inc
out
mov
pop
jno
repz
rcr
push
movsl
push
xorl
out
lcall
imul
cwtl
fmul
jno
mov
outsb
mov
add
adc
loope
into
aam
sahf
ds
scas
lock
fisubl
shll
fldt
fistl
in
mov
push
cli
xor
adc
ds
sbb
sbb
mov
mov
lods
subl
loop
mov
pop
leave
fidivrl
fsubr
stos
and
mov
cmp
aad
push
call
xchg
test
out
test
jae
pop
mov
repnz
mov
les
hlt
mov
scas
adc
jge
jnp
test
and
jne
inc
js
cmp
adc
popf
xlat
pop
add
pop
sub
adc
repnz
mov
mov
push
test
or
pop
rcrb
pop
cli
mov
push
ds
unpcklps
and
push
popa
je
pop
xchg
cmc
hlt
sub
sbb
push
ds
mulb
pcmpeqb
jbe
inc
adc
sbb
hlt
pop
fs
adc
sub
sub
xchg
lods
pop
into
push
pop
dec
inc
push
ret
sbb
push
and
mov
adc
fistpl
test
cmp
push
fdivs
insb
icebp
mov
mov
mov
sub
insl
and
pop
icebp
lds
pop
out
and
aaa
push
lods
int3
push
sbb
mov
outsb
or
sbb
jb
xor
ljmp
hlt
mov
and
xor
xchg
cmpsl
fsubs
cmp
clc
dec
adc
stos
cmpsl
pop
fsubp
inc
fwait
cmpsb
mov
lret
inc
sub
subb
push
sub
roll
fcomp
rcll
std
and
clc
xor
stos
xchg
mov
and
push
adc
ror
imul
movl
ljmp
hlt
dec
cld
jl
data16
popf
xchg
adc
or
in
rcrl
sub
push
mov
xor
lret
add
fisubs
add
insl
push
addr16
cli
cltd
xor
insl
pop
push
bound
into
loopne
nop
xor
imul
xchg
jb
sar
imul
mov
stos
hlt
push
adc
shr
int3
subb
out
sbb
test
adc
lcall
imulb
sub
mov
jge
in
pop
fsubs
add
lahf
iret
add
pop
mov
mov
call
dec
rclb
sub
mov
fst
test
sar
andb
jbe
lods
jo
xchg
mov
imul
cmp
lock
push
cmpsl
xor
adc
out
inc
adc
lods
pop
dec
push
push
out
fs
mov
adc
dec
inc
ds
adc
pminub
mov
cmpsb
jmp
sbb
or
lods
fwait
cmp
pop
mov
fadds
add
cmp
outsl
cmp
add
mov
push
neg
aaa
mov
sub
mov
das
jl
mov
cli
faddl
aas
ljmp
es
adc
jle
pop
mov
or
rorl
inc
jge
je
adc
push
push
insl
cmp
test
shll
and
fcompl
inc
dec
jg
pushf
rcrl
addr16
call
pop
pop
out
cwtl
dec
cmp
sti
sbb
std
xor
aas
cmpb
cwtl
es
into
adc
gs
sub
clc
rcrl
and
sub
ficomps
adc
lahf
jbe
jae
mov
iret
pop
sbb
insb
enter
mov
pop
dec
repz
clc
adc
push
decl
add
imul
sub
fisttpll
adc
stos
aaa
lock
adc
hlt
dec
test
or
jmp
push
lds
and
inc
js
jmp
fiadds
lock
notl
es
mov
sbb
cltd
or
mov
mov
in
mov
xor
movsb
mov
xchg
sub
js
add
lret
ret
jno
jb
xchg
shl
jne
jecxz
and
push
negb
xchg
std
das
popa
jle
gs
loope
inc
cwtl
jle
xchg
push
mov
mov
or
cmp
jns
cmpsl
mov
cli
mov
or
xor
adc
cmp
popa
mov
pop
into
push
into
mov
dec
data16
in
popf
ja
movsl
jmp
gs
fnstsw
insl
sub
xchg
imul
fldl2e
into
pop
sbb
mov
adc
test
sub
test
int
cmp
mov
cmc
pop
cmpsl
mov
push
xchg
or
cli
pop
inc
pop
push
cmp
inc
push
aam
cmp
jl
or
hlt
adc
repnz
out
mov
pop
sbb
je
fwait
adc
cmp
push
fisubl
ljmp
stos
test
mov
insb
faddp
mov
or
jne
insl
icebp
data16
arpl
out
movsb
arpl
cmc
insl
sbb
mov
pop
mov
xchg
sub
ljmp
popl
add
mov
shl
cmp
dec
fwait
dec
aaa
mov
inc
out
cmp
cmc
in
push
mov
lret
dec
fldcw
jmp
cmpsl
clc
call
sub
push
adc
dec
scas
mov
mov
cmp
push
fwait
xor
aas
add
xchg
lea
js
out
fbstp
pop
and
or
scas
mov
inc
jae
dec
int3
dec
mov
cmp
xor
jno
loope
ds
mov
cmc
mov
jno
stos
jge
mov
mul
test
push
stos
mov
out
pop
sbb
mov
cwtl
inc
mov
hlt
mov
stos
xchg
xor
add
into
dec
xor
insl
rep
into
adc
mov
hlt
cmc
push
or
sbb
or
or
or
pop
jl
mov
ret
into
mov
mov
add
xchg
shrl
jb
ret
pop
dec
cmp
gs
aad
inc
insl
cmpsl
out
cmc
into
lock
insl
pusha
mov
fildl
das
dec
pop
mov
and
inc
pushl
dec
lods
popf
jp
lds
cwtl
xlat
xor
jmp
cmc
mov
aad
mov
mov
in
popw
mov
push
or
adc
push
call
out
daa
add
push
fidivrs
lret
jbe
push
or
jb
mov
mov
or
les
xchg
das
or
sbb
fnstenv
pop
cmp
jle
jg
cld
pushf
mov
or
cmp
and
jp
xchg
mov
mov
xchg
adc
adc
das
movl
adc
xlat
or
and
xchg
bnd
adc
pop
fwait
insb
pushl
mov
mov
test
cwtl
lcall
jp
inc
in
sub
mov
icebp
push
push
mov
xor
and
out
nop
cld
call
dec
xor
iret
lcall
incb
xchg
jbe
sub
xchg
test
cltd
and
aaa
xchg
add
push
jne
das
inc
push
jnp
fistpll
mov
inc
fistps
jne
pop
cmc
mov
les
je
dec
out
pusha
std
movsb
adc
xchg
insl
mov
pop
out
sub
insl
jmp
dec
xor
pop
lds
movsb
mov
jl
xor
fistpll
or
mov
in
xor
mov
sub
adc
nopl
mov
xchg
jmp
pop
xchg
jecxz
aaa
mov
sbb
mov
data16
push
adc
xor
sahf
mov
mov
sbb
ret
daa
imul
negl
jne
dec
clc
jnp
push
pop
pop
or
mov
inc
jg
test
into
pop
sbb
mull
sti
xor
mov
inc
mov
cld
and
test
in
test
leave
sbb
push
icebp
addr16
pop
hlt
icebp
cld
jle
mov
iret
lcall
call
arpl
int
xchg
jmp
in
jns
dec
push
aam
jge
stos
xchg
icebp
movl
mov
in
je
push
sub
sbb
fdivrp
mov
xchg
adc
mov
ficomps
addl
inc
xchg
rclb
pop
nop
mov
sub
mov
test
scas
xor
negb
add
popa
dec
ficoml
lods
push
mov
mov
jo
and
xchg
dec
fldenv
cmp
xor
sub
in
movsb
xchg
mov
and
jno
jb
mull
cmp
mov
pop
int
divb
hlt
mov
add
lret
mov
ficoml
pusha
dec
xchg
or
xchg
jne
insb
mov
dec
lahf
loop
mull
push
push
fwait
mov
sub
xor
mov
push
clc
jo
sarl
xor
or
std
sbb
or
mov
and
jne
and
sub
and
rcrb
rcrb
out
and
push
ss
xor
xor
test
ds
aad
repz
popf
lds
bnd
addps
rcrb
data16
and
out
cmp
or
mov
add
daa
sbb
repz
hlt
pusha
sub
ja
lcall
pop
jne
jae
dec
iret
push
aad
test
addr16
push
fistl
mov
jbe
push
jp
clc
cmp
ja
insb
push
jmp
mov
test
popa
mov
or
dec
xchg
xorl
xchg
inc
push
enter
push
mov
ss
incl
adc
sbb
jle
xor
mov
scas
mov
inc
out
mov
push
add
es
lods
rclb
jl,pn
sbb
test
insl
movsl
stos
mov
fldenv
bound
out
test
push
rolb
or
test
xlat
outsl
test
pop
rol
cmc
insb
icebp
scas
cs
mov
cmp
and
adc
mov
fstpl
cmpsl
out
inc
pop
sbb
push
jle
adc
adc
cmc
xchg
lcall
mov
push
adc
mov
xor
or
popl
es
dec
add
lds
mov
adc
sbb
cmp
test
cmp
inc
lret
sbb
dec
xchg
into
int
repnz
adc
sub
xchg
push
xorl
hlt
adc
mov
sbb
mov
outsb
repz
outsb
mov
imul
adc
ljmp
es
push
xor
push
sti
sub
int
jb
adc
xor
sub
mov
mov
jae
ffree
push
sbb
xor
cli
pop
data16
sbb
pop
jg
fwait
pop
loopne
cltd
jno
ficoml
mov
stc
sbb
or
das
and
push
xor
enter
mov
dec
push
cmp
push
neg
mov
cwtl
pop
in
ss
in
subb
mov
jl
das
je
repz
cmp
in
mov
gs
gs
sub
clc
jnp
leave
arpl
insl
inc
pop
rol
cmp
pop
xchg
movsl
test
out
subb
jb
data16
mov
hlt
sbb
lea
movsb
negl
mov
or
gs
roll
loop
andl
lock
in
test
or
shl
sub
or
lea
sub
pop
stos
mov
dec
mov
hlt
scas
outsl
insb
out
test
adc
add
inc
sbb
insl
dec
incb
arpl
or
psrad
cli
mov
inc
sbb
decb
mov
sbb
lea
enter
stos
popf
xchg
xchg
inc
aam
out
jbe
dec
mov
aas
push
test
pop
stc
add
or
and
lds
je
pop
rcl
inc
idiv
popf
cmc
call
sahf
int3
scas
push
mov
push
pop
imul
fldt
cli
jne
mov
pop
pop
popa
rcll
je
mov
xor
std
repnz
rcll
mov
stos
and
outsb
cmp
out
pop
jo
push
adc
sbb
lahf
and
jnp
inc
pop
pop
xchg
inc
or
adc
iretw
cltd
jne
cmp
mov
mov
inc
inc
popf
cmpb
sub
aaa
insl
aam
mov
pop
inc
fwait
fwait
push
jg
or
iret
sbb
outsb
or
rolb
mov
or
xchg
mov
sahf
mov
xchg
xchg
and
iret
fsqrt
and
cmc
xor
imul
pop
mov
sbb
lea
cld
push
mov
adc
test
jo
shlb
hlt
mov
add
mov
inc
inc
mov
xor
mov
push
mov
mov
test
adc
cmp
pop
pop
mov
jecxz
nop
mov
mov
push
pop
je
and
inc
xor
pop
pop
jp
sbb
pop
imul
adc
mov
insl
mov
int
lods
sub
cmpsl
and
or
adc
cwtl
cmpsl
test
jae
xchg
push
lahf
jno
sub
out
mov
movsb
sub
jb
and
xor
addr16
xchg
movsl
ja
jl
fs
pop
and
cmc
stos
adc
bound
sub
notb
loop
push
adc
jmp
inc
adc
mov
lods
pushf
repz
and
mov
mov
mov
xchg
and
test
jb
dec
aad
mov
mov
popf
rcll
mov
cmp
mov
cmpsb
aas
cmp
push
sbb
add
inc
scas
aad
fistps
push
out
pop
push
inc
fwait
pop
iret
gs
lock
mov
xchg
pop
jl
push
pop
sahf
jle
jns
cmc
mov
inc
dec
push
mov
call
pop
push
ret
mov
jg
pop
pop
addr16
mov
add
dec
push
fldt
sbb
mov
mov
xor
adc
rcl
and
sahf
ja
jo
mov
bound
xchg
inc
mov
ljmp
mov
pushf
push
fisubl
lret
and
jo
cmp
cli
sbb
pop
fcmovu
ret
jecxz
push
xchg
data16
int
or
popa
ds
push
pop
leave
mov
push
jnp
mov
cmp
in
roll
mov
jmp
imul
cmp
jg
jge
jo
pop
fsubs
mov
cmp
insb
shrl
roll
outsb
pop
ficompl
call
in
outsl
rcl
mov
orb
ret
mov
insb
outsb
imul
push
stos
pop
les
jae
scas
pop
inc
je
sahf
and
shlb
mov
leave
pop
lods
mov
ficompl
xlat
lcall
pop
xchg
inc
fidivrl
jmp
sub
add
je
inc
xor
dec
and
push
std
or
movsb
outsb
inc
cs
cmp
in
enter
xchg
sbb
movsb
push
mov
pop
mov
scas
vpmacssww
jmp
pop
mov
das
imul
xchg
in
sub
insl
test
push
or
xor
cmp
inc
push
mov
in
or
xor
mov
orl
out
xor
test
iret
pop
and
aas
iret
sub
popf
sarb
adc
out
lds
cmp
jns
xlat
jmp
fstpl
sbb
cmp
xchg
pop
xchg
xor
mov
jno
fsub
pop
mov
ja
push
int3
pop
xchg
add
nop
jb
sub
pop
cmp
into
out
imul
hlt
inc
pop
mov
sbb
add
push
mov
inc
cltd
scas
adc
pop
rcll
out
outsl
jno
adc
je
in
ja
aam
js
push
sti
jecxz
ds
jne
ss
push
sahf
xor
inc
icebp
cmc
adc
or
fildll
enter
cmpsb
test
data16
push
or
mov
mov
insl
adc
inc
lock
xchg
or
jo
roll
sub
add
mov
adc
mov
imulb
stc
mov
je
mov
mov
cmpsl
aaa
ja
jbe
or
lods
inc
dec
and
shl
in
cwtl
iret
sub
jge
and
sahf
ret
jns
js
mov
cltd
insb
movsb
lods
outsl
rolb
test
fldenv
cmp
rcll
adc
cmp
decl
sub
mov
pushf
lds
negb
inc
cmp
pop
hlt
sub
leave
xor
pop
in
mov
sbb
out
gs
sbb
add
sub
pushf
test
jae
jne
mov
mov
je
hlt
in
jle
in
xor
les
mov
hlt
int
xchg
test
push
mov
cmp
negb
add
mov
sbb
icebp
xor
mov
mov
cltd
arpl
mov
aam
and
lea
pop
aam
pop
xor
pop
push
nop
out
test
mov
testl
inc
test
dec
xchg
jmp
pop
xchg
xor
push
cld
pop
outsb
mov
xor
int
pop
pop
xor
sub
mov
dec
mov
and
xchg
or
push
inc
fsub
cltd
mov
xor
inc
hlt
je
add
mov
pop
insl
xchg
in
and
cmp
stc
inc
clc
stos
and
dec
mov
scas
leave
imul
push
mov
sbb
imul
mov
xchg
sbb
jmp
ja
push
inc
xchg
ret
outsl
adc
ret
negl
and
mov
mov
mov
or
dec
aam
sub
or
push
push
sahf
int
jns
or
mov
rol
mov
enter
pop
jp
jne
mov
repz
or
outsl
mov
subb
clc
add
jno
pop
jnp
pop
dec
lds
xchg
fsubrs
pop
test
adc
jbe
and
pop
mov
or
pop
inc
adc
sub
fsubr
test
push
adc
inc
test
dec
enter
arpl
jb
sub
dec
xchg
cltd
xchg
sub
mov
mov
idivl
dec
ror
add
clc
adc
dec
loop
outsl
xchg
adc
cmp
es
rcl
xchg
sbb
enter
in
sub
adc
js
xor
in
fadds
inc
xchg
fisubs
adcl
add
xchg
outsl
sbb
pusha
lea
cmp
outsb
jno
ds
aam
pop
add
into
and
sbb
sbb
arpl
inc
lds
enter
jg
std
push
sub
pop
push
ret
mov
xchg
out
mov
imulb
jnp
push
rcrb
mov
mov
in
bound
sbb
aam
push
push
pop
fstpl
xchg
ljmp
jle
mov
push
xchg
in
jle
das
xor
call
out
xor
out
loope
xchg
xchg
aam
or
mov
jnp
push
cltd
jno
data16
adc
dec
aam
jge,pn
mov
ret
addr16
movsb
and
sbb
cmpsb
push
mov
js
aaa
jg
das
cmp
adc
push
lret
xchg
cmp
dec
out
pop
and
iret
stos
into
xor
sub
je
xchg
cmp
sub
xor
sbb
fadd
dec
cmpsl
loope
mov
inc
mov
xchg
cld
add
adc
test
mov
sbb
pop
ret
adc
sbb
outsl
add
sbb
mov
sub
pop
sub
std
mov
repz
ja
pop
mov
mov
test
xchg
outsb
pop
popl
dec
push
push
xchg
pop
mov
dec
les
mov
pop
pusha
mov
dec
jns
out
push
mov
dec
inc
rcr
loopne
dec
andb
push
inc
or
mov
push
mov
pop
int
xor
dec
out
loopne
pop
jge
pop
dec
fists
arpl
or
cmp
pop
adc
xor
cmpsb
imul
push
mov
pop
dec
sub
push
mov
scas
loop
loop
xlat
lock
popa
cmp
aaa
xchg
dec
out
jne
dec
dec
out
leave
ret
mov
ds
sub
in
lods
and
fwait
int3
sahf
imul
cmp
sarb
ss
rol
testb
sub
sbb
fbld
xchg
mov
or
gs
jge
cli
cmc
add
pop
adc
adc
sbb
js
imul
cmp
loope
pop
and
jmp
cmc
mov
mov
add
outsb
lods
aas
or
in
push
hlt
push
cld
mov
outsb
push
or
loope
in
dec
mov
hlt
js
pushf
xor
cmpl
lret
les
mov
popf
aad
or
addr16
aas
lods
jle
push
ja
dec
and
dec
mov
in
int
inc
out
adc
lods
mov
fisubl
arpl
mov
xchg
mov
dec
out
and
das
mov
mov
lahf
xchg
xlat
dec
cwtl
jb
adc
subl
or
jnp
test
cmpsl
or
mov
aaa
mov
jns
push
jecxz
ljmp
xor
and
inc
xchg
jge
cmp
inc
add
mov
enter
mov
lcall
dec
vhaddps
mov
aaa
inc
scas
daa
call
lret
jp
iret
sti
inc
push
push
xor
mov
push
inc
push
insb
pop
pop
jo
sahf
stos
sbb
cmp
fwait
push
jno
subb
sahf
aaa
adc
adc
cmp
sub
inc
fildll
mov
push
jno
or
sub
mov
popa
pop
and
pop
xor
out
cmp
sbb
clc
out
or
mov
sbb
rcll
xchg
popl
adc
in
jae
pusha
lea
fdivr
loope
or
insb
mov
push
jl
jecxz
out
push
ret
shr
or
incb
xchg
lods
mov
ljmp
into
sbbb
test
int
push
imul
movsb
insl
sub
xchg
lock
xchg
sub
negb
rclb
mov
dec
inc
add
dec
cmpsb
aad
adc
data16
ret
cmc
mov
test
cmpb
pop
pop
loopne
imul
jnp
xlat
scas
iret
out
adc
aam
aad
mov
xor
dec
mov
inc
cmp
mov
mov
xor
cs
mov
enter
stc
xchg
adc
mov
ja
cmp
xchg
ret
cmp
fs
push
cmpl
lods
out
fs
mov
addr16
loopne
cmpsb
in
rolb
add
push
or
addl
dec
add
mov
adc
xor
jno
xchg
ret
inc
std
inc
and
negl
sbbl
cltd
xchg
adc
push
xchg
mov
push
daa
in
mov
daa
jno
es
push
lret
in
repnz
shl
leave
lcall
arpl
mov
mov
dec
mov
leave
call
mov
in
cmpsb
je
lods
out
cmc
sysret
push
xchg
xchg
and
dec
or
aas
xor
jg
addl
xor
arpl
ljmp
loope
mov
dec
idiv
loopne
adc
xor
loop
or
lock
lea
push
xor
or
push
xchg
sarl
shl
les
add
ja
inc
mov
pop
fcmovnu
jns
out
les
inc
divl
xor
jnp
data16
mov
inc
lret
aaa
pop
mov
lret
mov
cld
inc
xchg
fcomps
out
int
cmp
outsl
sbb
xchg
push
mov
sub
adc
scas
adc
push
mov
adc
testb
mov
sub
lods
jle
in
adc
lahf
jg
hlt
xor
lds
dec
sub
xor
leave
and
jmp
test
lea
fs
mov
push
hlt
cmpsb
outsl
inc
decl
rol
sbb
push
pop
iret
cs
mov
fmul
scas
scas
mov
xor
mov
jae
mov
pushf
fisttps
pop
push
out
mov
fnstcw
inc
iret
idivl
jnp
xor
enter
cs
sub
call
js
push
or
fdivs
nop
jge
or
lock
or
xchg
mov
jl
pop
mov
or
or
fstpt
mov
call
xor
or
ror
test
mov
dec
sub
lods
hlt
nop
adc
dec
out
pop
inc
push
xchg
les
and
jno
cs
loopne
scas
sub
cmc
push
scas
cmp
ret
dec
bound
or
xchg
cmpsl
adc
into
push
cmp
xlat
sub
aaa
cs
and
mov
mov
pop
shl
inc
repnz
mov
sbb
cmp
add
mov
jno
outsl
loope,pt
jg
jns
mov
std
jbe
aaa
in
out
pop
inc
dec
mov
int
mov
push
pop
imul
xlat
sub
in
mov
lcall
in
je
enter
sub
xchg
xor
daa
out
mov
pop
adc
lret
and
and
push
rcl
pop
mov
ret
sub
aas
push
ja
ds
add
jnp
mov
mov
or
sub
test
or
outsb
cmp
and
mov
cmp
sbb
and
pshufw
jae
or
repnz
dec
pop
jbe
dec
lods
mov
mov
xor
mov
jecxz
out
insl
ja
pop
xchg
mov
push
sbb
xchg
js
imull
and
xchg
add
gs
enter
les
inc
js
fmuls
dec
sar
mov
or
bound
bound
pop
divl
push
xor
push
fstpl
lock
mov
xor
popf
out
test
lock
inc
add
jne
lahf
lods
sti
les
pop
js
cli
inc
loope
inc
and
add
outsl
inc
inc
lea
mov
call
fbld
xor
sub
fldl
mov
pop
jno
jge
xchg
xchg
outsb
loop,pt
loop
movsb
sbb
mov
lock
or
in
jb
out
sbb
and
lods
add
repz
xor
mov
loope
clc
lods
xchg
or
sarl
push
pop
sahf
cmp
sbb
mov
push
mov
inc
ljmp
push
aad
jle
add
ret
xchg
fwait
dec
cmp
jns
cmp
gs
lahf
cmpsb
inc
pop
repnz
out
iret
inc
push
repnz
imul
add
std
insl
mov
add
ss
aas
imul
push
nop
mov
leave
daa
es
or
mov
inc
rclb
adc
ja
icebp
into
bound
xor
sub
mov
sbb
inc
inc
cmpsl
repnz
popf
pop
in
fisubl
ss
mov
push
test
sahf
xchg
mov
stos
xor
add
cmp
leave
decb
and
mov
lods
or
push
jne
lret
addr16
je
mov
sub
push
inc
push
int3
test
in
mov
mov
sti
sbb
pop
loopne
jno
xor
mov
rcl
repz
mov
out
sub
or
xchg
xlat
push
jb
nop
jo
xchg
xlat
pop
arpl
int
in
add
dec
outsl
daa
daa
cmp
jnp
inc
and
xchg
inc
hlt
ljmp
mov
sbb
jne
jle
mov
push
push
ret
addr16
lods
movsb
jmp
scas
sub
adc
lea
clc
xlat
cmpsl
ljmp
cmc
mov
jne
mov
inc
movsl
xor
cmpsl
popa
cltd
xchg
pop
fwait
and
xor
xor
daa
sbb
movsb
dec
loope
test
jns
mov
pop
hlt
sub
add
lahf
and
repnz
push
imul
mov
dec
repz
inc
ret
ljmp
scas
mov
faddp
je
rcrl
ljmp
or
mov
mov
ds
lret
cmp
sub
je
not
leave
xor
or
sbb
adc
or
dec
mov
sbb
or
lret
mov
xor
push
dec
fwait
pop
push
inc
inc
sub
test
loop
fbstp
test
sub
out
mov
push
xor
fists
fdivrp
adc
jno
out
pusha
mov
ret
out
xor
popf
sub
sbbb
icebp
out
ror
jmp
pop
into
gs
xor
enter
ss
fcoml
pop
lock
sub
pop
sub
cmp
dec
mov
jo
hlt
dec
jg
pop
push
add
mov
js
jnp
stos
lock
int3
dec
insl
into
addb
dec
ret
adc
jbe
jo
push
roll
mov
sbb
pop
call
in
xorb
push
adc
in
std
lock
lods
outsl
pop
lea
or
clc
and
dec
loopne
ds
inc
ret
mov
sub
cmpsb
dec
sbb
in
and
add
fs
shrb
mov
popf
aas
jno
jne
and
cmp
mov
or
pop
mov
call
fisubrl
mov
sub
popf
mov
cmc
sbb
cmpsl
in
xchg
icebp
pop
inc
xor
xor
pop
ja
mov
cwtl
pop
stc
ss
mov
jo
xlat
rorl
mov
stos
add
push
test
loopne
fsts
out
clc
loopne
lret
insl
or
inc
call
jo
dec
stos
aaa
jb
pop
xchg
daa
stos
sbb
sahf
xorl
sbb
icebp
mov
mov
stos
xor
pop
imul
add
into
ficoml
inc
das
sub
insl
adc
aas
add
cmc
mov
rorl
scas
xchg
xchg
outsb
xor
or
push
pop
pxor
mov
mov
jle
dec
push
sarl
cwtl
push
mov
mov
popa
insb
dec
adc
aaa
or
leave
xor
arpl
sbb
xor
jmp
add
mov
fstl
mov
aad
aam
int3
outsl
inc
mov
sbb
mov
loope
adc
in
lock
not
fistpll
sub
jg
repnz
cmp
nop
pusha
pop
lahf
popl
out
in
les
sbb
pop
out
mov
fdivrl
lock
add
mov
mov
inc
fisubs
lock
jge
mov
push
je
out
fcmovbe
xchg
xchg
lds
ds
ja
push
jne
add
push
popf
repz
daa
add
icebp
jge
push
jb
or
and
out
cmc
adc
xchg
pcmpgtw
xor
add
cli
and
xchg
mov
cltd
sbb
push
icebp
loop
xchg
and
mov
das
mov
mov
loopne
pop
push
arpl
sbb
lods
pop
mov
add
mov
cmpsl
push
push
inc
jbe
add
cltd
lods
push
and
movsl
or
push
cmp
insl
ficoml
stc
test
cld
push
shl
ss
or
testl
dec
push
mov
cs
pop
xchg
stc
sbb
pop
rcrl
inc
sbb
lods
lods
loope
mov
xchg
xchg
pop
add
pop
daa
jmp
sti
cmpsb
jp
pop
jmp
aaa
cmp
adc
jecxz
scas
jmp
das
js
pop
dec
fdivrl
jp
jp
out
push
pop
fists
mov
imul
daa
xor
lds
jmp
jns
pop
es
jnp
jge
mov
pop
or
or
mulb
and
xchg
jns
sbbl
in
mov
sub
divb
pop
js
insl
xchg
mul
mov
fmull
push
dec
mov
or
insl
roll
pop
jl
fsubl
mov
and
xchg
push
pop
push
pop
xchg
dec
lea
aam
sub
into
cmc
xor
mov
in
frstor
scas
sbb
mov
mov
and
loope
scas
jl
xor
dec
fs
stos
push
sti
xchg
jmp
outsl
fwait
dec
xchg
call
adc
out
dec
adc
lds
sbb
cmpsl
pop
inc
mov
rcll
mov
mov
clc
xorb
ret
sbb
dec
popa
xor
pushf
cmpsb
dec
rclb
cmp
movsl
out
in
fdivrs
pop
sub
and
mov
adc
jge
push
ret
xchg
xor
dec
sub
xchg
inc
jg
push
xor
pop
sub
add
jmp
ja
fists
push
jo
jb
and
shll
dec
loop
jp
sub
inc
adc
and
leave
mov
and
mov
fidivl
mov
pop
pushf
add
movsb
or
push
fstps
push
mov
pop
push
fisubrs
insl
or
ficomps
and
adcb
mov
fistps
rcrb
pop
insl
pushf
mov
insl
rcll
mov
movsb
repnz
int3
das
in
xor
leave
xor
clc
xchg
popa
dec
shrl
sub
mov
xchg
imul
lea
inc
dec
or
cli
iret
inc
out
inc
out
cmc
push
cmp
jae
movsb
jnp
movsb
movsl
mov
or
ret
lods
add
ds
sub
dec
xchg
lea
jno
scas
mov
fidivs
adc
insl
ja
jp
pop
pop
sti
xor
jnp
sbb
adc
pusha
inc
pop
fisubs
fs
enter
push
pop
fs
mov
jmp
leave
in
jg
mov
testb
lds
sub
dec
mov
ja
out
aaa
enter
popf
adcb
and
repz
nop
aad
out
scas
dec
sbb
das
and
shlb
sub
arpl
hlt
xor
sbb
xlat
push
mov
shrb
add
stos
mov
call
xchg
in
mov
fildll
fs
jmp
in
mov
mov
scas
cmp
pop
lods
or
push
adc
sarb
jl
pop
sahf
scas
js
mov
pop
mov
inc
xchg
or
aam
jl
and
push
mov
hlt
sti
jge
push
inc
mov
pusha
mov
push
jecxz
jb
mov
stos
mov
cs
int
in
mov
lret
cmp
add
lcall
js
sbb
dec
imul
lahf
imul
inc
lock
sbb
jns
jp
push
adc
mov
cmpsl
jo
ret
and
sub
mov
repz
sub
dec
fistps
imul
enter
xlat
inc
aas
scas
ss
popf
adc
cmpsb
inc
mov
mov
and
lock
test
mov
sbb
push
sbb
loop
fdivl
loop,pn
fsubs
das
cmp
push
insl
jmp
sbb
fwait
lods
xor
cmp
push
decb
sub
lods
pop
cmp
xor
out
xor
cmp
packuswb
fcoml
pop
inc
adc
cld
cmp
sub
shll
sub
fs
push
testb
scas
test
das
aaa
sub
aaa
jg
mov
mov
push
jmp
js
gs
dec
mov
jne
jle
movb
push
and
jmp
test
cs
cmp
xor
or
push
dec
pop
fistps
sahf
mov
jecxz
lret
ret
lea
or
xchg
xor
lret
pusha
mov
ss
mov
push
pop
mov
pop
pop
sarl
movsb
inc
lock
stos
test
sbb
or
jmp
dec
push
popf
cld
or
jg
xchg
push
mov
scas
sarl
push
jl
jno
je
loope
pop
sbb
out
fldz
or
pop
dec
aas
inc
les
xchg
xor
in
jle
adc
imul
loop
imul
jns
aam
int3
push
xchg
add
mov
into
mov
loope
cmp
jmp
data16
cmp
sbb
jnp
add
dec
enter
out
pop
pop
xchg
pop
pop
xor
mov
xor
adc
mov
jmp
xchg
dec
pop
fs
stc
ja
gs
jb
jp
mov
mov
xchg
daa
loopne
push
adc
lds
push
xchg
inc
push
mov
sbb
imul
lock
jle
sbb
lock
mov
call
sbb
push
call
cmp
xchg
xchg
adc
push
mov
aam
mov
testl
ret
adc
sub
jl
sub
or
mov
rcll
addr16
xor
mov
leave
pop
pop
les
inc
inc
push
sub
xor
movsl
out
inc
dec
xchg
push
rol
shll
aas
jnp
xchg
cmp
stos
in
stc
cmp
test
orb
xchg
push
mov
push
jb
and
or
dec
ja
sub
pop
push
push
std
fwait
sbb
out
cmc
mov
adc
dec
repnz
adc
mov
xchg
adcl
pop
add
ds
push
pop
and
cmp
mov
cmp
rorb
mov
fldl
mov
add
int3
sbb
pop
insl
iret
pop
pop
out
and
hlt
cmp
arpl
jbe
inc
cmp
jnp
jb
lods
sbb
jo
ds
dec
sbb
popa
ret
xorb
inc
dec
ret
jp
mull
mov
xor
and
lock
jle
mov
or
cmc
addr16
call
dec
add
mov
lahf
dec
or
test
adc
movsl
adc
loope
out
loop
and
aas
lahf
loopne
cmp
iret
inc
aaa
jo
push
or
sbb
cmpps
pushf
cmp
pop
add
ljmp
push
pop
loop
mov
push
push
sub
adc
pop
lcall
imul
cmpsb
pushf
jae
cmpl
aam
add
dec
and
xchg
stc
mov
mov
add
mov
in
inc
js
pop
ja
mov
pop
ja
fistl
mov
adc
adc
xchg
mov
ret
aaa
xor
pushf
adc
sub
mov
repz
mov
or
xchg
xchg
add
fs
mov
and
jg
lock
in
fidivrs
inc
adc
push
test
jl
loop
call
arpl
movb
jae
jae
out
push
ja
je
arpl
pop
dec
jnp
add
xchg
fxch
jge
cmp
cli
ss
xor
insb
bound
bound
jbe
pop
arpl
subl
int
sub
in
sbb
cltd
ror
adc
imul
fs
outsb
mov
cmp
adc
xchg
movsb
cmp
shrb
jb
jmp
sub
scas
mov
mov
mov
adc
and
mov
aad
add
rcr
and
ljmp
sub
mov
push
lcall
pop
je
dec
xor
and
sbb
hlt
add
xchg
shl
push
insb
mov
sub
inc
iret
dec
mov
ljmp
fstpt
lock
xor
mov
pushf
jle
cmp
arpl
push
fwait
das
mov
inc
adcb
orl
fistl
orl
jns
xor
adc
and
into
jbe
in
and
push
mov
adc
fnsave
out
add
fcoms
or
inc
fstpl
jns
push
je
pop
pusha
test
pop
rolb
fiaddl
xchg
jl
mov
sbb
cmp
out
out
ror
add
dec
stos
xor
pop
shll
or
mov
jns
push
jecxz
and
lods
lods
gs
lcall
xchg
inc
xchg
adc
fmul
cld
sbb
int
cld
mov
ret
and
clc
leave
aaa
mov
fadd
rcll
les
xchg
fldenv
pushf
pop
movsb
sub
inc
ficoms
inc
push
nop
xor
sub
mov
in
pop
mov
pop
add
pop
dec
lahf
sub
sbb
mov
jo
out
cs
sub
hlt
add
and
out
dec
pop
jmp
xchg
cmp
loop
nop
enter
arpl
mov
jnp
and
adc
fstl
jecxz
xchg
pop
shlb
adc
lret
cmpl
xchg
ror
mov
and
sbb
imul
push
cld
cld
xchg
test
adc
push
scas
lcall
xor
rolb
call
or
inc
jecxz
or
or
popf
cmp
push
lods
rclb
addr16
mov
out
xchg
push
cld
xchg
inc
daa
ss
leave
pop
and
or
js
leave
push
inc
xchg
test
push
ja
enter
enter
add
rolb
adc
cmp
test
sbb
mov
mov
je
and
nop
pop
lret
outsb
jle
pop
xchg
ljmp
scas
in
xchg
shll
cmc
test
fcompl
cwtl
js
cld
shll
inc
xor
fs
jmp
push
jo
jno
xor
test
hlt
push
jns
ret
je
jmp
mov
adc
jb
or
insb
inc
dec
jp
int
xor
mov
call
mov
stos
and
add
insb
sarl
inc
imul
fst
adc
lahf
mov
sub
cpuid
add
mov
jle
aaa
hlt
ljmp
xor
ss
imul
mov
jb
shrl
shll
inc
inc
or
data16
jl
lea
daa
push
mov
daa
dec
mov
loop
pop
mov
test
add
in
outsl
and
ja
imul
xchg
or
dec
sbb
aam
pop
push
fiadds
pop
pop
movsb
xor
mulb
pop
dec
dec
sbb
in
sbb
jle
fistpll
pop
xlat
dec
and
cmp
jne
xchg
ds
push
ja
xchg
rolb
std
push
dec
push
out
xchg
mov
jmp
clc
insl
dec
aam
jnp
sub
push
nop
pushf
pop
shll
xchg
insb
call
inc
push
dec
fisubs
movsl
mov
testl
out
sbb
xchg
aad
iret
loop
sbb
popf
cltd
and
mov
push
xchg
xor
loop
std
mov
das
or
add
adc
jl
or
shll
jmp
push
cmp
adcb
mov
sub
jge
or
jg
mov
mov
mov
xchg
push
add
repnz
mov
in
shll
daa
pop
mov
push
push
inc
roll
inc
dec
mov
aaa
cmpsl
sbb
sbb
ja
shlb
mov
int
mov
cmpsb
cmp
inc
outsl
jnp
dec
jbe
shr
inc
cmp
imul
cmpsl
xor
push
dec
inc
mov
std
outsb
lds
mov
xor
sbb
jmp
inc
fadd
and
insb
pusha
pop
pop
xchg
sahf
jl
jnp
je
ljmp
fstl
pop
adc
mov
mov
cs
push
popf
nop
ja
fdivrs
push
out
test
mov
jno
mov
testl
into
push
icebp
icebp
loope
fs
mov
pop
notb
mov
add
enter
out
int3
data16
scas
jo
mov
dec
adc
push
cs
xchg
xor
jecxz
inc
or
call
cli
mov
and
push
int3
xor
inc
sbb
and
push
loop
inc
lcall
mov
or
jns
insl
jnp
pop
cmpsl
scas
jg
mov
and
bound
and
sub
add
pop
lods
hlt
ja
in
adc
cmp
mov
mov
test
xor
hlt
int
out
sbbb
and
jmp
xchg
ja
in
test
fldcw
ret
ret
test
jae
cmpsb
aad
lret
outsl
jb
test
push
mov
je
xchg
xor
fldcw
dec
loopne
adc
shl
in
inc
and
mov
and
xchg
addr16
dec
or
and
int3
mov
sub
inc
mov
cmp
xlat
cmc
clc
push
sub
xchg
mov
dec
cs
add
imul
mov
iret
ljmp
xchg
dec
scas
xor
pop
scas
test
adc
sbb
adc
loopne
pop
outsb
sbb
shlb
and
lret
cmp
andl
dec
imul
xor
loop
je
insb
xchg
jb
mov
outsb
fcmove
fimuls
scas
stos
push
jle
inc
outsl
xchg
mov
and
xlat
lcall
int
xchg
cmpsl
mov
sbb
dec
js
push
je
ret
jbe
and
push
in
jmp
xchg
and
xchg
mov
xchg
jge
add
jg
icebp
sub
mov
out
sarl
mov
or
fs
sbb
inc
cmp
iret
popa
das
addr16
xchg
add
movsb
lcall
lds
mov
rcl
or
jae
jb
mov
jp
inc
mov
and
lcall
inc
mov
mov
push
inc
pushf
nop
jg
mov
rclb
sbb
insb
sahf
call
mov
jne
arpl
mov
push
adc
stos
mov
xor
leave
data16
xchg
ss
lea
insb
xchg
fimuls
adc
and
jb
cmp
jle
mov
jecxz
clc
sub
inc
mov
push
int
sbb
inc
push
xchg
inc
cltd
lret
push
push
add
loop
and
ljmp
jmp
adc
and
mov
popl
es
jne
xchg
ljmp
xlat
mov
push
cltd
xor
mov
or
popf
in
adc
in
rol
ljmp
xchg
and
mov
sub
cmp
add
mov
push
xor
adc
in
sti
xchg
in
and
shrb
negb
mov
popa
repz
mov
mov
xchg
enter
sub
outsb
jmp
sti
test
mov
iret
sahf
xchg
fsubrl
mov
aad
pop
mov
xchg
push
pushf
inc
adc
out
xor
cmp
sahf
or
adc
jae
andl
fnsave
insl
add
mov
mov
loopne
dec
lret
dec
dec
sbb
lahf
dec
cld
daa
dec
cmp
repz
ds
adc
jmp
add
call
mov
sahf
adcb
shll
in
dec
inc
sbb
mov
out
mov
adc
or
aad
adc
lcall
iret
mov
adc
sub
xchg
dec
outsl
in
sbbb
mov
jo
push
jl
xchg
std
jns
xchg
in
bnd
sub
and
mov
push
xor
lcall
orl
dec
lods
lret
cmp
ja
fsubrs
call
cmp
jb
or
dec
jecxz
iret
dec
jne
pop
mov
shlb
jbe
cmp
mov
dec
jmp
sarb
in
packssdw
aad
insl
cmp
stos
ss
stc
jno
mov
test
imul
cld
mov
dec
insb
stos
jb
mov
pop
push
inc
cmp
clc
or
test
push
pop
mov
jge
and
xchg
lret
pusha
adc
aam
shrb
nop
push
mov
pop
push
es
aas
js
xchg
jae
stos
sbb
movsb
push
inc
mov
sbb
test
ret
cmp
xorb
out
popf
iret
mov
lret
scas
clc
ret
jmp
pusha
push
mov
mov
mov
jl
and
loop
mov
out
cmc
popf
shrl
scas
fisubs
out
movsb
ret
aas
je
scas
add
dec
repz
sub
or
inc
lahf
stc
loope
cmp
xchg
es
cwtl
test
stc
rep
mov
sarb
pop
inc
lock
fldt
cltd
sub
out
sub
les
aad
test
popa
sti
je
out
loope
movsl
xchg
mov
cwtl
sub
lock
fsubrs
xor
into
push
ret
jb
fmulp
jno
xchg
pop
movsl
icebp
cmpsb
cwtl
mov
cs
call
cmc
stc
xor
es
fildll
int
mov
ficoms
imull
or
ror
mov
jo
push
jns
pop
jo
rclb
xchg
push
pop
aam
and
mov
hlt
cmpsb
out
test
rclb
mov
xchg
leave
rorl
jne
sbb
sarl
enter
es
pop
pop
mov
dec
fnstsw
mov
add
inc
lea
lods
mov
pop
or
xor
pop
xor
fcomps
gs
pop
jge
inc
sets
movsb
mov
outsb
lods
pop
and
stos
pop
mov
mov
cmp
mov
pop
adc
push
push
scas
mov
push
xchg
orb
lahf
inc
mov
sbb
push
cmpsl
test
push
dec
cmp
push
leave
repz
and
sbb
jecxz
sbbb
bound
dec
inc
and
shlb
lock
jl
xor
ds
ljmp
adc
fsubrs
pop
daa
repnz
mov
cmp
mov
jp
add
test
int
push
arpl
pop
data16
cmp
fdivs
lret
jge
mov
loope
clc
leave
addr16
insl
push
loopne
scas
test
or
outsb
mov
mov
mov
sbb
or
clc
mov
out
sbb
mov
jg
repz
testb
aas
lcall
into
mov
aam
mov
push
and
pusha
fdiv
ret
jecxz
xchg
pop
ss
lds
dec
lods
cmp
fistpl
fmul
xor
dec
jne
xlat
out
lcall
dec
mov
mov
test
inc
ss
enter
xor
add
cli
stos
dec
inc
sub
or
and
mov
xchg
sarb
dec
mov
orl
and
sbbl
mov
push
add
sbb
jp
sub
jmp
popf
cmp
jmp
pop
dec
gs
push
in
push
push
jmp
xchg
inc
out
jo
xchg
es
dec
push
xor
clc
sub
insb
rol
inc
lret
or
or
stos
inc
insb
cmpsb
insl
lods
stc
pop
out
and
xlat
test
mov
or
sub
les
test
cwtl
ljmp
or
adc
int3
aaa
push
jae
push
ljmp
outsb
dec
stos
pop
cmc
mov
push
out
mov
mov
ret
cmp
sub
add
jno
push
icebp
sub
lods
inc
and
lahf
mov
addr16
popa
fistps
inc
daa
fsub
xchg
gs
push
ja
push
enter
scas
loope
out
pop
xor
notb
cmc
xchg
mov
gs
pop
pop
rep
mov
sbb
cmp
push
sub
mov
xor
jle
es
movsl
ja
fadd
in
add
sub
or
push
pop
ss
push
lcall
push
or
jmp
push
jo
ret
cmp
pop
loope
and
shlb
dec
aad
adc
adcb
xor
push
and
inc
stc
popf
shll
dec
jae
fisubs
adcl
je
stc
add
jne
shr
gs
push
adc
clc
mov
inc
pop
mov
fldenv
inc
aas
cmp
ja
in
pop
dec
out
sahf
sbb
jns
in
aad
jmp
xchg
mov
out
out
xor
outsb
mov
fsts
sbb
fcoms
insb
sbb
pop
jbe
popa
dec
mov
adc
cmp
adc
sub
aad
fstps
xor
out
mov
pop
jmp
cmp
std
sub
pop
xchg
stc
sub
out
es
mov
outsb
sub
cmp
jae
mov
sbb
testb
insb
iret
and
imul
ja
xor
xchg
and
pop
cmp
mov
outsl
fidivrl
aam
insb
cmp
and
adc
mov
dec
dec
mov
popf
xchg
pop
and
ret
out
shrb
mov
std
mov
mov
mov
adc
mov
push
jle
ds
sbb
stos
mov
sub
stos
cwtl
pop
xlat
xchg
or
setns
addr16
dec
hlt
xor
jb
cmpsl
sbb
add
jbe
cwtl
popf
daa
ret
cmp
jnp
xchg
mov
push
pop
or
insb
xor
jmp
pop
pop
out
test
pop
inc
scas
ret
cmp
aaa
ljmp
repnz
jmp
call
xchg
mov
mov
movsb
lods
add
das
sbb
mov
jno
or
and
cltd
inc
shlb
add
and
adc
mov
in
add
mov
sbb
cmp
add
mov
mov
rclb
daa
mov
in
dec
addl
fcomi
cld
dec
je
out
xchg
ret
int3
enter
mov
mov
ss
aaa
out
push
cmp
dec
push
jne
mov
cmp
and
push
outsl
pop
lea
xlat
mov
xchg
gs
pop
sub
pushf
jmp
xor
sub
sub
std
daa
aam
adc
mov
inc
jle
test
xorl
add
ficoms
fisttps
stos
int
outsb
into
into
mov
adc
hlt
notl
sbb
lea
das
add
push
sti
lock
fucomip
mov
jmp
xacquire
mov
cmp
ljmp
inc
jp
lods
sbb
les
inc
inc
dec
mov
notl
lock
shlb
mov
jno
adc
push
inc
cmpsb
mov
or
test
ds
out
mov
lret
sti
fcmove
ljmp
or
sbb
lea
xchg
stos
les
mov
cld
push
gs
repnz
daa
cld
or
or
popf
jle
sbb
xchg
divl
push
sahf
stc
mov
and
out
movsb
aas
shl
jo
dec
mov
movsb
add
nop
cmpsb
int3
scas
adc
mov
mov
push
xchg
push
out
popa
push
mov
sti
out
int
sbb
dec
fwait
mov
sbb
xor
push
xor
in
iret
inc
mov
pop
jmp
mov
stos
nop
mov
shl
mov
test
push
mov
popf
loope
lds
adc
push
push
mov
mov
fbld
imul
lock
jno
push
mov
cmp
sub
jae
rcr
cmp
fdivl
sub
test
mov
jg
push
fs
push
inc
pop
push
push
scas
pushf
dec
mov
xchg
inc
mov
mov
jl
aam
lods
rolb
pop
aas
nop
xchg
sahf
xor
mov
movsb
xor
xchg
push
adc
outsl
inc
fsubrp
dec
es
mov
mov
sub
xor
push
fisubrs
jle
js
mul
jnp
mov
std
mov
arpl
pop
pop
jae
rcrl
dec
mov
outsb
push
cmp
test
jg
scas
sbb
adc
mov
push
xchg
xchg
cmpsl
xchg
push
aam
xchg
push
xchg
dec
fsubp
dec
mov
xchg
scas
mov
sub
dec
shrb
gs
xor
dec
mov
test
and
sahf
sahf
push
cmp
test
lock
fstl
ss
or
jecxz
jne
push
inc
xchg
mov
nop
mov
jnp
jo
int3
es
out
pop
and
jno
aad
inc
xchg
outsl
pusha
jp
test
cmp
pop
sbb
mov
repz
mov
push
fstl
mov
inc
inc
arpl
insl
fisubrs
and
add
sbb
push
jne
mov
inc
iret
lcall
sub
adc
or
push
int3
int
in
mov
or
dec
test
push
inc
test
fadds
loope
sbb
js
push
lcall
mov
xor
mov
mov
jmp
sti
es
push
cmp
or
jge
fs
jb
movsl
insl
xchg
inc
cltd
in
scas
fsubr
in
lea
and
outsb
jno
xchg
lret
sahf
and
loopne
jl
mov
and
mov
mov
es
ds
dec
mov
sarl
out
filds
gs
lods
mov
iret
add
incl
fistps
out
inc
jbe
test
cmp
mov
jno
inc
push
xchg
repnz
xchg
dec
add
arpl
or
pop
test
fistl
test
sti
pop
loop
push
aaa
sbb
mov
adc
mov
je
cmc
in
adc
in
inc
cli
cld
sti
sbb
jns
dec
lock
sbb
cmp
movswl
and
outsl
cmc
enter
or
fucom
stos
lds
out
sti
stos
loope
inc
mov
test
es
jmp
cmpsl
cmp
inc
call
mov
movsb
into
ja
daa
mov
jle
xchg
jbe
xchg
add
cmp
push
add
mov
cmp
smsw
rcll
pop
xchg
and
mov
into
pop
loop
mov
dec
aas
pop
jbe
or
inc
nop
push
fbld
xchg
pop
lds
pushf
mov
or
enter
lea
jle
jo
add
inc
mov
ss
dec
dec
repz
mov
fstps
xlat
rcl
xor
lods
subb
aad
ds
in
es
mov
cli
mov
insl
rclb
mov
xchg
rclb
fcmovnb
bnd
cmp
fcomps
std
mov
cmp
int3
nop
lahf
arpl
cmpl
in
mov
pop
jns
cmp
out
std
jb
rcrb
adc
inc
pop
int
negb
std
push
xchg
scas
sarl
int
sub
push
test
icebp
sub
mov
pop
stos
pop
pop
mov
mov
hlt
mov
sbb
sti
enter
pop
gs
xlat
jmp
pop
push
mov
mov
imul
mov
jmp
fadds
xchg
mov
hlt
push
andps
mov
jno
sub
shlb
xor
and
xor
jbe
dec
add
in
rclb
test
out
pop
add
aam
inc
or
sbb
pop
outsb
xor
cs
and
in
xor
addb
testb
mov
jno
pop
cmp
add
pop
outsb
outsl
inc
mov
aas
fnstsw
jge
sbbl
popf
sarl
out
lods
cld
jb
xchg
dec
sbb
mov
inc
sahf
jle
mov
orb
jp
cs
dec
rcr
push
xchg
mov
lcall
inc
in
and
frstor
test
push
aad
mov
add
or
neg
and
sti
jnp
out
and
xchg
push
adc
sub
mov
lock
push
xchg
cmpsl
xor
add
jae
xlat
inc
stos
mov
mov
xchg
dec
int
xor
fxch
jae
ds
rol
clc
out
lods
ret
jae
bswap
push
cmp
roll
jl
inc
adc
data16
pop
or
outsb
cli
mov
jb
mul
push
jae
mov
xor
mov
stos
aas
rclb
mov
imul
mov
pop
push
jae
in
lods
adc
popf
icebp
idivl
repnz
sbb
insb
pop
jp
imul
sbb
sti
pusha
das
imul
ds
loope
pop
adc
sub
mov
imul
xchg
jb
and
adc
cmpb
ss
es
add
inc
hlt
push
push
mov
or
push
mov
outsb
aad
push
dec
lahf
subb
mov
testb
mov
pop
dec
pop
jecxz
mov
xchg
daa
xlat
or
cmpsl
xchg
push
fistl
fadds
mov
or
sbb
mov
out
aam
or
xchg
movsl
mov
push
rcrb
arpl
lcall
flds
shll
pop
mov
fiaddl
push
or
jnp
fcos
lret
pop
out
lods
xchg
adc
xchg
mov
sbb
fldenv
adc
jmp
lret
pop
mov
and
icebp
sbb
shlb
clc
test
add
pop
scas
into
mov
lahf
lods
loopne
shll
cmp
nop
adc
fdivrs
lret
xchg
lods
or
push
xor
notl
inc
push
push
test
adc
movsl
mov
mov
xor
lret
or
out
xlat
jne
xchg
jne
js
les
dec
int
jae
and
cmp
js
or
cmp
icebp
or
xor
ds
pop
mov
push
xor
int3
pushf
cmc
insb
xor
in
mov
push
xchg
lret
loope
lret
push
xchg
iret
mov
adc
mov
cltd
lret
shlb
decb
cs
adc
daa
mov
mov
inc
int
int
add
rcr
jecxz
lcall
aaa
mov
sub
lods
les
mov
notb
cltd
sub
insl
add
cmc
lods
pop
jge
inc
inc
das
aam
pop
push
mov
das
sub
aas
imul
jbe
je
int3
test
mov
and
subl
pusha
bound
lods
jp
inc
xchg
mov
pop
rorb
andl
mov
add
fwait
lods
xor
fidivs
sub
mov
mov
leave
jp
push
cli
and
sbb
jns
dec
out
and
pop
pop
jecxz
sub
inc
movsb
mov
jmp
mov
jg
loope
mov
aad
and
cmpsl
fistpl
movsb
xlat
hlt
aas
nop
mov
dec
inc
adc
scas
mov
adc
dec
loope
xchg
add
rolb
sub
jge
xchg
rcl
scas
insl
jns
jecxz
rorb
sbbl
aad
push
adc
sti
push
dec
push
dec
loopne
cmp
and
rcr
into
push
mov
sub
sbb
cmp
pop
sbb
jl
and
call
lods
les
icebp
jbe
sarl
add
add
js
cmp
sbbb
cmp
sub
xchg
test
out
hlt
or
mov
add
ljmp
rorb
icebp
mov
stc
add
mov
loopne
mov
cmp
xchg
cmp
ret
paddusw
mov
lea
pusha
dec
dec
aaa
cld
int3
xor
or
jae
clc
pop
xchg
push
popa
movzwl
movsl
flds
add
stos
inc
call
xor
jcxz
mov
jne
pop
mov
rcr
pop
jle
ret
xor
repnz
in
fs
ffree
frstor
and
mov
adc
mov
push
fildll
cld
lahf
insb
adc
xor
scas
pop
sbb
pushf
sub
jle
int
sub
xchg
lahf
stos
cmc
push
sarl
dec
cs
fadds
mov
mov
pop
ss
jnp
adc
insl
gs
jbe
fwait
pop
push
ret
nop
and
stc
or
out
push
mov
es
push
pop
out
jns
mov
sahf
es
jb
mov
popa
bound
mov
push
push
repz
lods
fst
xor
add
dec
loop
fiadds
fstl
or
in
inc
push
lret
cmc
sti
jle
cwtl
gs
sahf
hlt
std
xor
jae
xchg
xor
imul
ret
mov
shrl
xchg
or
xor
movsb
and
push
cmp
xlat
cltd
imul
jp
imul
sbb
sub
mov
sbb
cmp
popa
mov
cmp
mov
pushf
pop
ds
mov
int3
mov
stos
dec
jnp
test
addl
popa
imul
leave
cmc
ret
jl
mov
or
add
divb
jp
and
clc
hlt
lea
aaa
and
jno
pop
out
cmp
pop
inc
sbb
lret
in
hlt
shrb
das
xchg
mov
pop
cmp
push
mov
dec
sub
ror
sbb
pop
sbb
ret
sbb
test
push
lds
out
xlat
mov
jecxz
inc
test
add
sbb
xor
ja
sbb
add
inc
jmp
fs
jo
insb
call
cmpl
jle
repz
sahf
and
inc
pop
adc
loopne
xlat
push
bound
jno
add
pusha
dec
cld
shl
jns
add
std
mov
and
sub
not
inc
cmp
fmull
push
sub
mov
lret
mov
addr16
lret
fsubs
dec
mov
jno
flds
rcrb
push
mov
daa
lcall
or
iret
das
pusha
sti
outsb
test
ds
dec
add
sbb
dec
js
sbb
ss
adcb
jns
and
stos
sbb
push
out
enter
ja
test
pop
daa
outsl
jbe
aad
pop
nop
xchg
pop
ficoms
and
push
xchg
icebp
arpl
je
and
inc
in
mov
loopne
aas
fstpt
cmp
outsb
jbe
andb
out
push
adc
aaa
cmpsl
sbb
mov
mov
cwtl
mov
or
push
inc
mov
adc
jns
jl
sbb
mov
mov
stos
clc
mov
jl
jge
shr
arpl
cmp
testl
adc
and
stos
add
push
xor
fsubl
add
ret
xchg
xor
push
add
mov
push
cmp
mov
out
clc
std
dec
mov
lods
test
pop
adc
pop
int3
frstor
sub
mov
popa
addr16
mov
add
nop
mov
cmovno
repnz
and
es
divl
int
scas
js
jl
enter
aas
and
xchg
mov
jl
mov
outsb
xor
mov
bound
or
rol
xor
adc
hlt
sub
sahf
xchg
jmp
test
pop
cs
xchg
jg
push
out
lods
or
fs
popa
jo
test
imul
and
ss
sub
hlt
outsb
cs
mov
popl
push
push
frstor
or
lea
xchg
push
jae
xor
jg
je
push
jecxz
xchg
fstpl
push
fmul
lods
fwait
inc
fistpll
cs
adc
ficoms
cmp
pop
ret
pop
add
dec
mov
push
mov
jnp
mov
mov
or
je
call
sub
daa
push
loop
cmpb
pop
dec
stc
into
pusha
jle
mov
sub
adc
pop
cmpsb
jb
ret
shr
test
cmp
addr16
add
add
push
jb
es
cmpsl
push
cmc
mov
and
frstor
out
mov
jmp
xchg
addb
jg
adcb
mov
movsb
add
or
insl
mov
pop
lods
incb
out
add
mov
mov
fidivrs
dec
jmp
lock
outsl
adc
out
adc
sbb
sarl
sti
mov
into
stos
xchg
inc
loop
std
cmp
rcr
popa
lock
sub
push
lock
adc
sbb
add
mov
test
sarl
scas
sahf
or
pop
xor
test
inc
and
movsl
jno
out
in
pmulhw
stos
in
mov
xor
stos
jbe
xchg
pop
xchg
or
jp
int
xor
ss
fldcw
pop
mov
cmp
cli
iret
cmc
scas
stos
jg
and
jmp
mov
cmpsb
mov
mov
push
mov
dec
ror
lea
xchg
dec
shrl
mov
mov
shrl
daa
or
pop
and
rcr
out
cld
repnz
orb
int3
sahf
inc
hlt
les
leave
jl
jne
jno
cmc
mov
clc
dec
dec
xor
xor
mov
push
mov
scas
outsb
cmpsb
sahf
sbb
aaa
clc
jne
pop
mov
xchg
int3
jg
iret
sahf
aam
test
sub
sbb
jp
and
sbb
push
dec
jns
sbb
in
adc
stos
add
vmread
pushf
adc
inc
xor
test
xor
aas
pop
std
loop
sbb
xor
lds
pop
dec
imul
ds
enter
xlat
lahf
data16
add
stos
fistpl
sbb
jnp
xlat
in
lock
jge
push
jle
das
or
pushl
dec
sub
xchg
adc
das
lea
mov
out
cmp
cmp
and
jmp
add
pop
sub
jle
ss
push
sbb
adc
imul
mov
push
cmp
mov
adc
mov
insl
and
xor
sbb
adc
fldcw
add
or
add
jns
ljmp
jno
mov
nop
cmp
scas
xchg
mov
andb
movsw
adc
jmp
dec
xor
fs
xorl
pop
leave
imul
jecxz
insb
pusha
cmp
ljmp
outsb
dec
or
bound
dec
or
inc
cmpsl
je
ds
pop
cmpsb
jmp
add
xchg
lds
mov
ja
aad
rclb
pop
or
xchg
mov
fsubrs
cmc
cli
sub
mov
fdivr
cmp
clc
mov
in
mov
mov
mov
imul
out
xchg
loopne
pop
movsl
icebp
jge
outsl
and
jns
pop
mov
adc
mov
and
ljmp
insl
xchg
in
jbe
verr
lods
cmp
sub
mov
mov
jecxz
add
sbb
rcr
cmp
add
pop
push
imul
push
cmpsl
repz
ret
sbb
sub
xchg
and
pushf
adc
push
and
test
inc
bound
popa
outsb
out
out
cmpsb
mov
nop
cmp
or
fcoml
jae
mov
push
dec
pushw
push
sub
repz
sahf
idiv
movsl
bound
sbb
mov
xchg
mov
call
inc
loopne
xor
pop
xchg
cmpsl
xchg
fidivl
mov
cltd
inc
shrl
push
es
ljmp
mov
add
clc
filds
xlat
jns
lods
jns
or
dec
xorb
mov
repnz
and
xlat
dec
xor
inc
sbb
inc
shlb
or
dec
xor
rcr
sbb
scas
clc
add
test
stc
jbe
lahf
cmp
xchg
sbb
loop
mov
enter
xchg
sbb
orl
dec
iret
sbbb
cmpsb
sarb
fsts
aad
fwait
dec
shrl
mov
push
adc
popf
mov
je
aad
popf
pop
mov
sbb
mov
test
and
dec
xchg
xorl
fcomps
push
inc
ljmp
push
adc
jle
dec
insb
clc
xor
aaa
es
push
adc
subl
pop
mov
xor
gs
or
dec
push
mov
ficomps
testb
sub
jnp
das
adc
lahf
movsb
pop
arpl
sub
das
sub
popa
push
ja
std
outsb
or
scas
push
ret
xor
std
adc
and
hlt
sbb
cmpsl
mov
int
pop
test
jmp
lahf
loope
clc
fidivs
xor
jg
loop
push
loopne
push
push
push
lret
pushf
inc
mov
push
dec
cmpsl
pop
cmpl
mov
cmp
and
jne
xor
iret
push
testb
stos
pop
add
fistl
ja
out
les
mov
cmc
adc
sbb
lcall
sub
repnz
adc
fmuls
movsb
adc
jp
mov
inc
cltd
cld
ficoms
daa
add
jl
adc
sbb
mov
or
cld
pop
cltd
aad
mov
pop
xchg
cli
dec
cmpsl
out
in
or
xchg
and
imul
int
jl
adc
cmp
sbb
addr16
loop
mov
add
lods
mov
aad
push
stos
xchg
cltd
sub
loop
dec
and
jns
xor
ret
lea
mov
daa
fidivs
and
cmp
aas
mov
in
push
ljmp
outsl
jg
xchg
dec
lock
mov
mov
jecxz
int3
in
ret
xchg
lods
add
xor
xchg
mov
inc
shlb
incl
out
je
aaa
aas
loopne
bound
add
sbb
inc
mov
pop
ss
out
sub
mov
hlt
inc
sbb
ljmp
leave
mov
enter
mov
pop
pushf
push
dec
dec
sbbl
mov
aad
fs
outsl
push
xchg
sbb
mov
insb
test
data16
pushf
mov
roll
insb
arpl
mov
push
push
cmpsl
dec
popa
in
out
daa
out
pop
aam
inc
jecxz
sub
cmp
outsl
popa
sub
jbe
repz
arpl
js
cli
xchg
and
jnp
mov
stc
and
jmp
push
cmpsb
mov
int3
push
cmpsb
pop
repz
loope
cmp
imul
adc
inc
xchg
lds
pop
jne
call
fucomi
jl
add
mov
loope
dec
mov
out
xchg
lret
inc
sub
cmp
out
sub
in
sbb
sahf
in
fistps
cmp
lds
jb
data16
imul
orl
jbe
lahf
mov
xor
aad
jecxz
cmp
sub
xor
dec
inc
in
pop
js
call
in
pop
cmp
lods
push
jno
arpl
psraw
pop
or
cwtl
push
adc
stc
arpl
dec
sbb
xchg
insl
mov
movsb
xchg
xor
popa
int
pusha
xor
fisubrl
inc
mov
popf
dec
and
pop
or
mov
sbb
mov
and
insb
lods
js
pusha
and
or
loop
into
fstl
jecxz
ret
push
aam
cmp
mov
nop
xor
cmp
add
cmc
movsb
inc
push
pop
imul
inc
call
inc
dec
cmp
testb
mov
rorb
jnp
jg
dec
xor
pop
test
int
or
cmp
mov
iret
mov
orb
inc
inc
ss
push
lods
fs
movsb
jns
xchg
out
sub
xor
je
pop
fistpll
xchg
jae
and
inc
or
mov
aas
cli
mov
mov
sbb
cmp
stos
insl
fstpt
mov
mov
sbb
popa
sub
data16
push
daa
lret
cmp
sti
xchg
mov
xor
mov
jbe
lret
push
icebp
mov
int
popa
fdivrl
mov
dec
or
add
lcall
nop
out
jmp
sub
sbb
xor
cmp
arpl
jl
xchg
cltd
sbbl
add
push
jnp
mov
loop
sbb
mov
cmp
jns
jne
inc
nop
cs
inc
lret
cmpsb
stos
into
jmp
or
scas
sbb
xchg
ja
xchg
inc
out
in
mov
cmp
fsubl
and
cwtl
sub
ljmp
push
std
adc
out
pop
sbb
aaa
push
insb
xor
jecxz
push
push
aas
fstps
push
cmp
sbb
sbbl
xlat
add
loop
or
add
ret
int3
cmp
clc
dec
dec
sahf
mov
pop
dec
pop
icebp
fisubrl
addr16
in
popa
cs
jg
in
sbb
and
or
or
test
xchg
xchg
rcl
or
cld
add
pop
sbb
lcall
push
push
add
sbb
inc
outsl
cmp
out
cmp
cmp
mov
pop
sbb
or
fisubrl
push
lcall
insb
push
adc
inc
push
sub
pushf
test
test
jl
cmpsl
xchg
adc
mov
aaa
xchg
and
stos
sub
orl
adc
or
jl
inc
dec
jg
imulb
cmp
sub
incl
stos
cs
out
dec
add
ljmp
cmpsb
mov
or
lds
mov
leave
mov
add
xchg
mov
mov
ja
jle
sti
push
cmp
jle
out
mov
imul
repz
stos
jecxz
pop
lret
dec
das
sub
and
or
or
inc
adc
shlb
scas
push
push
rorl
iret
aas
movsl
in
and
cmp
fsubr
adc
outsl
mov
mov
scas
fistl
mov
insb
jns
out
out
push
push
mov
out
mov
ljmp
inc
add
ljmp
dec
xchg
xchg
mov
sub
scas
dec
sbb
and
loope
out
sub
in
adcl
test
or
push
jae
dec
scas
movsb
dec
push
aad
push
add
add
adc
xchg
dec
xchg
inc
or
push
and
and
int
inc
fst
jmp
aas
adc
jmp
sbb
mov
mov
push
push
sbb
daa
xor
push
jns
cmp
movsb
mov
aaa
lods
pop
push
add
ds
shr
call
fndisi(8087
jmp
rorl
lea
cltd
jge
xchg
sub
scas
mov
jg
mov
or
enter
fs
data16
xchg
mov
mov
sub
int3
mov
repz
inc
mov
xchg
xrelease
mov
mov
inc
mov
jge
rcl
cmp
and
mov
push
inc
in
push
and
idiv
mov
ret
sub
call
jecxz
push
cmpsb
add
xchg
sbb
seto
roll
add
loop
xchg
out
cmpsb
ficoml
mov
mov
cli
cmpsb
inc
mov
mov
je
testl
jmp
dec
ja
inc
clc
mov
cmc
lea
xchg
pop
sub
adc
jbe
inc
mov
out
push
xlat
xor
xlat
ljmp
pop
outsb
sbb
cwtl
imul
popa
cmp
cld
adc
aam
sub
fldcw
sub
cmp
movsb
cmp
mov
das
aaa
add
sar
sbb
int3
es
ror
sub
lcall
arpl
loop
mov
mov
sbb
cld
xor
mov
je
sub
mov
push
shll
sbb
outsl
mov
adc
push
pop
mov
sub
jge
and
cmp
mov
lahf
or
ja
inc
jbe
int
inc
mov
mov
gs
scas
jge
ss
and
xor
and
mov
fidivrs
push
loope
lret
mov
pop
xchg
and
stos
mov
xor
hlt
push
push
loopne
das
rclb
push
data16
add
aaa
push
adc
insb
cmp
into
scas
divb
cs
mov
cmp
mov
pop
in
outsl
xchg
mov
shl
push
inc
mov
inc
sub
xchg
pop
lds
jno
sub
insb
lret
fsubs
add
aaa
rcrb
in
sub
mov
lods
icebp
rcr
repz
mov
xor
jno
inc
push
pop
and
imul
push
lcall
jl
and
les
push
push
loope
mov
scas
sahf
sub
mov
shll
cli
and
adc
sbb
mov
stos
cmp
push
xor
and
dec
xchg
imul
lods
mov
or
mov
xchg
adc
jae
lret
jge
sbb
ljmp
mov
push
addr16
stc
mov
lcall
push
pop
ds
int
jo
pop
inc
cmp
scas
push
pop
dec
addl
aas
sub
test
notl
adc
pop
sbb
mov
xchg
rcrb
into
lcall
fimuls
scas
pop
inc
movsb
jbe
adc
jl
push
ds
movsb
adcl
insb
je
inc
in
and
jae,pt
jae
push
outsb
inc
mov
ficompl
daa
pop
leave
mov
mov
test
mov
jp
or
jno
aas
pop
lcall
xlat
jg
mov
pusha
in
push
add
dec
add
jbe
mov
mov
mov
dec
lods
dec
sbb
ror
adc
mov
sahf
cs
stos
mov
dec
fwait
mov
adc
xor
jle
outsb
inc
stos
sub
sbb
leave
xor
pop
mov
mov
ret
sbb
ss
mov
bnd
mov
pop
dec
push
sbb
cs
jmp
and
shl
imul
dec
jl
or
mov
insb
ret
push
lods
lret
mov
cmp
add
je
shlb
mov
sub
mov
mov
xchg
pop
xchg
jmp
mov
sbb
mov
sbbb
testb
das
and
xchg
pushf
adc
jno
cmp
xor
jmp
aaa
inc
lock
out
adcl
fnstenv
insl
xor
hlt
test
jle
sub
or
mov
test
mov
xor
bound
jne
fdivr
push
add
jle
jle
mov
mov
xchg
mov
pop
sahf
js
sarl
int
stc
sahf
scas
cli
lds
lea
xor
sub
popf
gs
xchg
stos
fcoml
dec
jg
outsl
sbbb
rol
xorl
sbb
gs
jae
xlat
pop
and
call
push
sub
repnz
mov
ficoms
mov
push
xor
popa
mov
aam
mov
imul
sti
push
sub
cmp
and
leave
pusha
outsl
cmp
cmpsb
push
jmp
mov
lds
dec
jne
xlat
mov
dec
mov
scas
test
aas
loope
rcl
mov
push
xchg
xchg
sbb
sbb
pop
jnp
pop
ss
cmp
pop
mov
xlat
mov
fsubrl
in
jns
or
inc
nop
js
mov
adc
out
push
push
fcmovnu
sbb
lods
mov
push
mov
mov
sub
stos
jg
mov
mov
xchg
cmc
loope
popf
ja
mov
xor
std
adc
mov
pushf
jnp
add
add
dec
mov
pop
xchg
lock
xchg
insb
pop
push
negl
sbb
fdivr
daa
loopne
fistpll
pop
test
adc
mov
add
jb
pop
dec
or
xchg
add
inc
mov
pop
pop
mov
fwait
dec
jg
adcl
test
mov
mov
dec
in
xchg
push
daa
mov
or
xchg
out
or
movl
xchg
shl
jo
mov
sbb
cmp
jo
and
mov
in
xchg
lods
dec
dec
jmp
movnti
loope
or
lods
push
lcall
repnz
pop
scas
dec
xchg
lcall
dec
inc
fucomp
data16
jae
repz
mov
xor
inc
mov
mov
gs
jge
xchg
faddl
in
test
sbb
cmp
push
ljmp
ja
hlt
xorl
js
cmpl
lahf
shrl
xor
mov
xchg
mov
fcompl
cmp
out
and
les
movsl
or
and
popf
in
movb
sbb
lret
mov
repz
sub
push
rcrb
dec
les
cmpsl
call
dec
scas
mov
adc
cmp
call
mov
push
pop
out
negb
fdivrs
add
jne
mov
sub
rolb
out
fucom
push
mov
fs
loop
pop
add
aaa
cmpsb
fisttps
jl,pn
mov
xchg
mov
cltd
addr16
pop
lds
stos
push
les
sub
cmpsb
out
adc
and
xorb
rorw
pop
dec
sub
insl
jno
ja
clc
add
icebp
add
xchg
testl
xor
pop
pop
dec
xchg
outsb
pop
lea
int
xchg
cmp
bound
jb
lods
mov
inc
or
mov
aam
pop
push
sbb
arpl
pusha
pop
ret
cwtl
cmp
push
mov
mov
cmp
addl
adc
cmp
dec
out
sbb
pop
cmc
adc
test
mov
ds
out
subl
cmpsl
ficoml
loope
arpl
xor
pop
loopne
jmp
pop
scas
adc
xchg
xor
mov
in
ljmp
testl
xchg
inc
pushf
call
cwtl
stc
fisubs
jb
xor
mov
pop
enter
xchg
mov
push
mov
pop
push
outsb
test
lret
inc
inc
sub
dec
mov
mov
jp
add
int
dec
lods
lock
pushf
lret
lock
dec
or
sub
mov
cmpsl
inc
mov
inc
ja
dec
jb
out
clc
test
sub
lods
inc
mov
pop
cwtl
jle
cmp
inc
lahf
and
and
jno
push
es
inc
insb
mov
sbb
gs
add
adc
cmpsl
cmp
nop
cmc
js
mov
rcrb
shrb
add
movsb
cmp
pop
fnstsw
adcb
jl
mov
jns
sbb
adc
dec
stos
adc
xor
sbb
and
jecxz
daa
sbb
add
inc
shr
push
mov
test
jg
fwait
imul
jo
cmpsl
mov
das
repnz
xor
das
das
shrb
nop
sti
enter
fstpt
pusha
inc
push
xchg
cmpsb
sub
pop
add
outsb
orl
dec
pop
fucomi
orb
push
imul
push
fcmovb
adc
push
lods
stos
and
dec
jp
xchg
notb
js
cmp
xor
lret
mov
mov
enter
inc
outsb
sub
adc
test
xchg
inc
mov
lds
sbb
push
mov
sbb
mov
mov
sub
sbbl
or
popf
sub
pop
bound
mov
add
xlat
cwtl
add
fwait
fwait
mov
in
pop
mov
neg
vpavgb
lret
dec
shlb
pop
notl
dec
pop
mov
mov
pop
sub
and
jae
lahf
dec
dec
lods
sub
jbe
outsl
pop
out
mov
aaa
fst
test
lahf
mov
or
or
mov
ljmp
fldln2
dec
in
sub
sub
movsl
fs
cmpsl
push
jecxz
cmpsb
or
fstps
push
test
cld
mov
xchg
push
pop
jg
mov
iret
sahf
add
aaa
in
addb
jl
out
sarb
in
lock
cmpb
mov
mov
add
pop
ljmp
sbb
imul
mov
stc
push
push
ljmp
lds
ja
pusha
push
in
xor
hlt
add
or
mov
out
aam
pop
xor
sub
and
fucomip
int3
xchg
enter
popl
inc
and
cmpsl
stos
test
lahf
pop
out
ja
sbbl
and
mov
inc
daa
stos
rcrb
sbb
and
pop
and
push
xchg
pop
in
cltd
or
stos
lods
fwait
cmovle
addr16
shr
inc
adc
insb
push
and
jp
xchg
fimuls
mov
sub
pusha
mul
xchg
call
jmp
sahf
incl
jl
and
jecxz
mov
mov
dec
pop
mov
ss
and
das
push
pop
sbbb
pop
or
ja
shr
dec
in
mov
sub
imul
jbe
enter
push
in
pop
mov
inc
jnp
jmp
push
dec
pushf
and
xor
fwait
shl
and
jecxz
pop
sbb
ret
cmp
mov
xchg
xchg
jg
lods
mov
xchg
dec
sbb
das
push
jl
jne
fsubr
and
rolb
adc
fidivrs
pop
scas
and
out
stos
or
push
subb
aam
mov
loope
enter
imul
lahf
mov
sti
repz
push
push
loope
push
imul
jge
fisubs
mov
movb
shr
and
add
shlb
mov
outsl
mov
in
xorb
dec
shlb
fldcw
arpl
pop
rcrl
mov
lods
jo
adc
sarb
mov
add
mov
outsl
int3
stc
sbb
out
arpl
out
popf
ficoml
push
pop
mov
imul
push
xchg
cli
ret
dec
lds
push
dec
sub
or
icebp
das
cmp
movsb
cmp
mov
rclb
push
popa
or
dec
imul
cmp
jbe
hlt
push
or
or
outsl
jnp
data16
aad
je
jb
out
and
in
repz
fsubr
lds
pusha
xlat
cmpsl
mov
testb
cwtl
mov
je
imul
leave
xchg
sbb
mov
or
mov
aad
add
xchg
pop
push
cmp
int
sbb
push
xor
out
mov
test
ds
mov
fdivl
push
xchg
testl
arpl
popaw
mov
jnp
xchg
push
sti
fwait
movsl
test
push
jmp
pusha
xor
pop
xchg
scas
arpl
dec
ret
call
pop
popa
repz
in
add
into
mov
inc
push
add
jnp
mov
call
int
xor
jnp
movsb
dec
stos
scas
iret
movsb
cmp
movl
int
movsb
pop
nop
enter
sysenter
inc
out
lods
mov
aas
and
inc
jne
pushf
xchg
std
pop
loop
sbb
jle
hlt
mov
inc
imul
jge
into
das
dec
cmp
adc
lds
pop
xchg
rcrl
or
mov
push
dec
jmp
pop
push
adc
push
mov
lahf
sarb
inc
es
add
jae
jge
jns
sbb
push
or
pop
repnz
dec
sbb
mov
mov
xor
xchg
ja
cmpsl
testl
mov
or
add
jb
inc
enter
leave
jl
arpl
enter
repnz
inc
jo
jb
and
inc
and
add
sahf
repz
mov
mov
sub
clc
xchg
outsl
repz
arpl
adc
stos
and
xchg
or
test
gs
insl
push
push
adc
jmp
mov
fs
in
fstl
push
hlt
fsubrl
ror
inc
repz
push
lret
add
ljmp
es
dec
mov
cmp
mov
sbb
cmc
pop
insb
scas
popa
in
push
xchg
mov
sbb
ss
sarb
pop
sub
jne
mov
sub
fs
outsl
fs
or
ror
in
sbb
add
popa
lahf
sbb
jbe
adc
jmp
int
orb
add
rcr
mov
mov
stos
mov
prefetcht0
imul
sub
nop
pop
popa
add
jnp
adc
mov
push
pusha
mov
jns
nop
fwait
out
cmp
mov
daa
pushf
sarb
add
xorl
loop
sarb
mov
push
ja
int3
adc
jbe
push
sbb
stos
popa
leave
enter
cltd
push
and
aas
and
pop
aam
nop
sub
jecxz
mov
scas
xorl
aad
pop
mov
dec
jmp
outsb
gs
lahf
xor
cmp
inc
pushf
insl
testb
cltd
or
sti
push
stos
dec
pop
outsb
cwtl
clc
ss
inc
mov
pop
aad
pop
mov
in
je
or
cli
dec
pop
js
rclb
xor
mov
inc
insb
aad
outsb
shr
xchg
rclb
xchg
jl
sbb
fsts
notl
mull
mov
xor
je
and
das
outsl
leave
pushf
rcrl
aaa
aad
inc
pop
aad
sbb
adc
lret
jl
pop
jg
jl
cmp
rcrb
cmp
shl
cmpl
ret
mov
pop
and
lods
xor
xlat
vcvtdq2pd
faddp
ret
clc
sbb
aam
sbb
push
pop
imul
xchg
fadds
mov
sub
insb
cmpsb
scas
cmpsl
rcrl
mov
scas
mov
dec
shrb
jecxz
dec
movb
xor
push
pop
dec
push
mov
cwtl
addr16
adc
test
pop
push
mov
sbb
inc
div
das
mov
movsl
push
ljmp
movsl
add
dec
lods
addps
fimuls
aaa
dec
popf
in
sub
cmpsb
mov
jl
mov
inc
add
sbb
cli
fnstcw
loop
add
pop
dec
fldcw
mov
aam
push
xlat
lods
push
cmp
sub
adc
rolb
jg
movb
daa
jmp
fcmovnbe
jb
into
roll
dec
and
mov
xlat
or
repnz
cmp
xchg
dec
shlb
push
adc
dec
cmc
xchg
loope
inc
xchg
data16
and
testl
repz
loop
mov
xor
cmc
aaa
push
test
in
fildl
out
xchg
sbb
pop
jbe
push
outsl
and
cmp
xchg
xor
sub
inc
leave
pop
mov
xchg
push
mov
add
testb
aas
das
jmp
mov
cmc
fcoml
inc
xor
mov
mov
xchg
test
xor
jne
fidivrs
and
lds
or
mov
jnp
dec
loope
in
push
adc
fs
in
push
sbb
daa
aad
jae
addr16
popf
sbb
call
movsl
mov
mov
or
aaa
mov
and
xlat
dec
clc
test
pop
push
and
out
aas
subl
test
push
lods
adc
mov
jl
and
jmp
sub
inc
jne
shrb
pop
xchg
aam
nop
loopne
xor
xorb
cltd
mov
lcall
mov
mov
out
pushf
xor
lret
pop
idivl
fmull
jle
test
cmp
in
sbb
mov
mov
mov
ljmp
pop
fsubrl
mov
les
inc
adc
cli
xchg
sti
or
pop
out
fstpl
dec
adc
push
nop
mov
add
or
lock
add
in
xor
or
test
int3
or
lods
sub
sar
mov
pop
fiaddl
out
jge
mov
dec
push
data16
pop
mov
lods
out
lretw
jae
add
pushf
mov
xor
rcrl
mov
and
dec
test
inc
cmp
shll
ss
leave
cmp
cmp
push
into
cmp
data16
mov
xor
repnz
pop
pop
mov
test
popa
sub
in
and
mov
aas
out
aam
mov
icebp
enter
jg
mov
cwtl
lds
and
lret
and
insb
dec
jb
scas
ss
les
and
pushf
inc
jnp
pusha
imul
es
jle
xor
mov
push
cmova
and
mov
sub
jg
jnp
daa
fdivrs
out
inc
sarb
stc
pop
mov
scas
js
add
lret
jg
and
aam
lret
inc
and
enter
lret
mov
imul
cmpsl
inc
push
ret
pop
dec
and
cli
das
mov
sti
mov
sub
lret
dec
movsb
jb
cmc
test
lahf
jg
movsl
push
ficoml
or
sbb
hlt
mov
xor
mov
sarb
sub
and
ss
decl
adc
pop
loopne
decl
cmp
aas
divb
push
pop
outsl
lret
jle
fwait
add
idivb
mov
cmp
in
scas
movsl
mov
test
enter
addr16
xlat
insb
xchg
roll
xor
jb
jmp
jb
mov
sub
cmp
sbb
jg
sbb
xchg
xchg
inc
pop
test
jl
jne
dec
and
or
fisubs
loop
xchg
cmp
dec
mov
jle
pop
sbb
int3
mov
dec
mov
xchg
shr
repnz
je
jb
test
frstor
xorb
icebp
xchg
ret
in
inc
cs
mov
pop
movsl
leave
xor
cmp
jge
lret
aaa
imul
daa
adcb
pop
inc
les
mov
sub
test
popa
lea
cmpsb
and
mov
je
in
insl
shr
push
push
or
and
in
lahf
lcall
loop
icebp
or
adc
and
or
add
popf
sbb
add
rorl
icebp
add
fsubl
mov
xor
push
jmp
mov
jbe
nop
fdivrl
pop
add
inc
pushf
inc
clc
test
lcall
lea
pusha
fsts
std
xchg
mov
mov
mov
fistl
rcl
scas
pop
sbb
ret
lds
popa
push
mov
fwait
mov
pop
mov
sub
out
pushf
push
das
fmuls
jge
pop
adc
icebp
rorl
pop
mov
jmp
aad
fsub
fldl
cwtl
and
into
sbb
lods
out
pusha
pusha
push
adc
aam
or
or
mov
les
mov
stc
push
cltd
insb
jns
je
cmp
mov
arpl
or
push
dec
jmp
adc
and
inc
shll
lds
mov
les
xor
sarb
repz
xor
testl
std
sub
sarl
mov
jae
push
ja
xor
push
lock
aas
mov
sbb
cmc
in
dec
call
mov
xor
cwtl
push
jg
int3
push
xor
push
inc
and
push
mov
mov
adc
or
mov
sahf
out
mov
mov
mov
or
lret
mov
cmovl
inc
outsl
stos
sub
jge
shll
add
scas
ror
mov
fld1
dec
stc
je
jmp
int
pop
mov
test
push
shlb
xchg
dec
cmc
ret
in
out
movsb
xor
hlt
scas
push
iret
inc
mov
stos
repnz
pop
inc
add
jp
xor
aaa
mov
sti
adc
dec
es
mov
mov
jmp
jmp
mov
shr
and
push
inc
or
scas
cmp
into
test
mov
cltd
fidivrl
lcall
in
inc
loopne
imul
sub
testb
ss
std
sahf
out
push
jmp
lea
ret
stc
mov
jg
lock
push
jne
push
clc
push
mov
xchg
mov
fwait
cmp
scas
icebp
cs
icebp
dec
ret
inc
inc
out
and
cs
cmp
loope
movsl
and
js
inc
or
aam
adc
sub
ret
or
pushl
std
xor
in
test
xor
outsb
dec
mov
jg
mov
pop
shr
and
push
ficoml
es
mov
pop
jmp
fdivr
mov
mov
mov
push
push
xlat
xchg
ljmp
mov
sub
jbe
fstps
idiv
and
imul
clc
push
xchg
es
sub
xor
fnstcw
inc
jo
jbe
outsw
data16
iret
mov
sbb
jmp
aaa
sarb
fidivs
sub
sub
fadds
push
mov
sub
test
adc
push
js
fldt
test
pop
stc
sbb
pop
bound
dec
adc
ret
xchg
mov
sbb
xchg
outsb
jae
sbb
cmp
movsl
xor
int3
stos
cmpsl
adc
push
cmp
repz
cmp
into
add
data16
imul
jle
pushf
lods
push
fsub
push
es
pusha
jno
jo
push
pop
pop
icebp
jne
dec
and
sbb
lods
push
push
pop
stos
nop
mov
mov
outsl
and
push
mov
inc
sbb
movsl
add
int3
and
mov
pusha
call
vpsubd
cli
add
cmc
push
mov
aas
pop
xchg
lods
dec
lods
xchg
inc
and
xchg
mov
es
adc
push
xor
fstl
or
nop
mov
xlat
fwait
xchg
outsb
jns
mov
xor
mov
dec
jo
or
test
sub
les
ja
clc
scas
ja
jae
dec
sti
mov
xchg
push
push
and
dec
dec
bound
test
int3
stos
jb
pop
dec
xor
insl
cmp
jo
sbb
inc
pop
out
adc
xchg
lods
daa
jg
into
loope
mov
ficoms
bound
dec
sub
xor
je
jnp
mov
loope
in
xor
push
les
sub
adcl
pop
int
int
and
rcrl
push
movsb
xchg
sub
dec
dec
popf
enter
jl
jno
and
movsl
pop
sbb
and
movsb
add
gs
xchg
add
dec
jmp
pushf
jno
cmp
movsb
xchg
pop
mov
dec
lods
std
cmp
and
jl
outsl
hlt
xor
jg
mov
mov
or
jle
movsb
out
jge
int3
mov
loopne,pn
das
cmc
clc
inc
out
push
call
sbb
add
add
sti
mov
push
sbb
clc
push
inc
les
daa
pop
les
jge
jae
mov
stos
or
fsubrl
mov
xchg
mov
push
imul
xor
imul
adc
and
stc
fwait
mov
mov
fnstsw
dec
push
fcmovbe
push
adc
addr16
outsl
sti
jno
pop
mov
mov
jl
ss
sbb
mov
out
movsl
call
xchg
insb
lret
jmp
or
loop
and
adc
cmp
pop
cmc
test
jb
push
fidivrl
dec
and
outsb
orb
jl
shll
push
mov
jmp
cld
lret
dec
loop
jo
test
psubd
loop
out
fstpt
jge
neg
push
pop
popf
lds
xlat
mov
std
mov
daa
mov
shl
push
jbe
and
cmp
adc
in
push
cwtl
add
mov
insl
testl
dec
jne
outsb
in
mov
dec
xor
lcall
mov
and
ret
loopne
aas
inc
pop
dec
stos
cwtl
sub
adcl
ljmp
xor
aas
out
addr16
xor
aad
push
out
cmp
movsl
popf
inc
mov
sbbb
mov
push
mov
fisttps
sub
sbb
add
jmp
dec
test
dec
jle
mov
ljmp
xor
dec
in
jne
jae
mov
jle
scas
pop
xchg
pop
lret
pop
xchg
add
or
pop
test
sub
fwait
ret
mov
dec
dec
aad
arpl
sbb
outsl
cmp
push
leave
inc
mov
pop
pop
arpl
pop
inc
std
movsb
xchg
clc
test
or
xorl
dec
imul
push
cmp
aad
jmp
jl
repz
or
inc
jns
outsb
xchg
mov
cmp
xorl
ljmp
xor
push
insl
push
imul
fwait
xor
mov
and
push
scas
out
sub
sub
cld
imul
imul
adc
push
rcll
mov
sti
ljmp
cmp
data16
into
mov
ja
lds
inc
cmp
jg
stc
add
jns
jl
call
jnp
push
sti
out
inc
pop
fstl
hlt
dec
jge
fcmovnu
add
add
or
or
jo
jo
pop
nop
loopne
icebp
cmpsl
sbb
fcompl
dec
sub
and
push
push
mov
xchg
inc
test
es
pop
jmp
inc
or
scas
sbb
and
shrb
push
add
dec
mov
jns
cs
mov
dec
jb
out
mov
test
push
jo
jbe
inc
jnp
push
ss
cmp
das
pusha
rorb
xor
jbe
clc
sbb
mov
je
lock
xor
mov
inc
sarb
pop
and
pop
push
jno
xor
push
mov
das
inc
imulb
gs
mov
mov
xor
pusha
jae
push
mov
insb
mov
or
xchg
cmp
mov
test
inc
nop
mov
cwtl
lds
lock
xchg
in
xor
inc
pusha
jp
in
add
sbb
add
bound
into
dec
iret
movsl
dec
subb
cmp
cmp
or
pop
jnp
sub
mov
data16
mov
mov
mov
dec
inc
mov
mov
and
arpl
nop
dec
lret
inc
dec
xchg
aaa
and
and
mov
xchg
inc
fists
push
xchg
faddl
and
stos
dec
or
xor
dec
dec
push
in
mov
lods
ds
out
std
cmpsb
dec
pop
push
xlat
xchg
adc
int3
les
repnz
jb
into
sti
lret
enter
cmp
aas
inc
jg
stos
testl
and
stc
outsl
lret
clc
add
add
out
daa
push
popa
xchg
adc
std
jnp
repnz
sub
cmc
cld
repz
mov
pop
ljmp
mov
sub
xchg
or
incb
inc
rcll
nop
sti
pushl
jp
push
stos
int
repz
push
mov
outsb
add
das
in
inc
jge
fldenv
ss
in
xor
dec
pop
test
jg
add
xchg
xor
orw
add
mov
iret
dec
xchg
adc
xchg
out
xchg
sub
pop
push
je
test
call
test
and
cmp
mov
sub
xchg
outsb
cmp
call
add
das
dec
hlt
aas
jge
adc
hlt
xchg
cmp
mov
and
pop
sbb
and
inc
in
loop
dec
pop
out
incb
in
dec
mov
mov
in
or
cltd
daa
dec
cwtl
mov
jns
loopne
add
or
daa
add
jp
stos
bound
movsb
daa
orl
inc
add
daa
fisttpl
mov
mov
jmp
dec
sbb
jg
mov
push
cmp
popf
orb
addl
ficomps
xchg
ljmp
lahf
add
mov
fimull
xchg
pop
dec
pushw
ret
je
lods
mov
xlat
cwtl
arpl
mov
xor
and
push
stos
fiaddl
jnp
sbb
jbe
outsl
sub
jno
cmp
fcoms
into
push
or
push
insb
loopne
mov
jg
popa
mov
lock
test
fsts
cmp
out
repz
bound
inc
pop
subl
icebp
or
inc
dec
or
mov
inc
pop
mov
lods
xor
pop
mov
push
sbb
enter
arpl
fs
ror
add
jbe
call
mov
lods
xchg
roll
test
jecxz
xor
mov
xor
aas
sbb
movsb
dec
data16
lcall
sub
pop
lret
fsts
sub
in
xchg
loop
hlt
xor
push
addr16
shl
into
jnp
js
mov
in
sbbl
mov
repnz
add
mov
test
inc
inc
xlat
cli
insb
movsb
rcr
cmc
ret
push
lea
lcall
push
mov
loope
fs
cmp
adc
jns
pop
sbb
pop
mov
loope
int
andl
lods
gs
push
sbb
push
or
shlb
and
out
dec
push
rcrb
shrl
lods
in
imul
cs
jb
or
pop
lret
shll
or
fdivp
shr
add
add
ror
cwtl
xor
and
mov
mov
jecxz
int3
add
mov
int3
clc
insl
push
orb
cmpsl
sub
aas
ljmp
sahf
push
ja
adc
aaa
adc
inc
push
sbb
cmpsl
adc
lds
in
mov
cmp
popa
stos
push
in
jmp
jle
push
push
lods
cmp
fistpl
movsl
shrl
dec
es
lahf
daa
clc
sub
push
stos
enter
lock
xchg
inc
push
push
lock
inc
sbb
icebp
loope
mov
inc
es
fsubrl
fdiv
pushf
arpl
xor
shl
movsb
xlat
scas
movsl
jg
lea
cwtl
jae
mov
fwait
sbb
lds
push
dec
xchg
and
repnz
in
cmp
lret
dec
xchg
lcall
sarl
addr16
ficomps
mov
bound
shlb
ror
jl
test
jl
xor
mov
mov
cli
inc
mov
xchg
stos
pop
sbb
pop
out
orl
adc
mov
in
sbb
das
add
push
push
fists
adc
lcall
pop
punpckhdq
cmp
out
pop
stos
movsl
push
mov
out
clc
arpl
inc
jmp
lahf
call
cmc
add
push
fs
push
fucomi
mov
or
popa
push
popf
jmp
loop
or
movl
outsb
jb
add
jnp
test
sbb
lods
lods
cmp
xchg
push
push
jmp
sub
jecxz
test
adc
pushl
lods
faddl
movsb
and
js
mov
sbb
pusha
sub
adc
fucomip
cmp
aad
mov
sbb
outsl
in
les
sbb
subl
add
sar
nop
inc
ret
outsb
mov
inc
pop
mov
mov
jno
fidivrs
sub
inc
push
sti
sbb
inc
pop
sub
loopne
rcrl
inc
ret
popf
ret
shll
push
and
mov
addr16
lahf
jns
inc
lds
mov
push
push
aad
sbb
movsl
xor
dec
jmp
rorl
lret
lahf
mov
xchg
std
xor
pop
mov
jns
mov
mov
or
sub
pop
cmp
mov
mov
stc
cld
or
sub
lss
xorb
insb
jecxz
xor
movzwl
xchg
in
pop
ljmp
movsb
mov
mov
adc
gs
ficomps
jnp
xor
jecxz
mov
gs
gs
mov
pop
je
add
iret
hlt
out
notb
jl
loop
div
xlat
jl
xor
jo
in
sbb
leave
cmp
mov
test
push
out
sub
fists
inc
inc
sub
dec
mov
lods
pop
cli
mov
inc
jnp
sbb
jae
call
popf
xchg
sub
lahf
xor
pushf
int
xchg
or
mov
fisubrl
sub
andl
mov
xor
iret
xchg
xor
or
jbe
mov
loop
je
add
insb
test
push
and
cltd
mov
push
aad
adc
mov
lcall
outsl
gs
jae
add
jl
inc
cmp
add
fwait
cmp
and
pop
fcoml
mov
add
and
jmp
rorl
jp
jecxz
mov
dec
lods
pop
or
push
loopne
stos
sahf
movsl
push
pop
lea
push
jmp
out
shlb
lcall
lcall
std
and
insl
pop
pop
cmc
insb
insl
out
inc
push
cmp
dec
fcompl
xchg
pop
movsb
in
repz
and
sbb
add
jg
stos
sub
aaa
lods
xor
pop
cld
add
pop
mov
int3
bswap
and
push
mov
cmpl
stos
imul
lcall
push
or
dec
stc
fldl
xorb
add
mov
lds
std
mov
or
mov
lds
cmpsb
mov
mov
popf
les
cmp
push
mov
fsubs
mov
jle
std
jl
push
lea
mov
xor
in
xchg
test
mov
lods
push
mov
mov
lahf
aad
mov
inc
std
sahf
sub
mov
and
fwait
jb
fdivrs
insl
push
aam
lods
sub
je
in
xor
inc
xor
and
cltd
xlat
fcmovnbe
ds
filds
addr16
pop
lcall
jne
mov
pop
lods
ret
and
fwait
inc
imul
push
sti
xchg
stos
fucomp
psubusw
hlt
sbb
sub
inc
dec
outsb
int
loop
mov
jecxz
mov
rdpmc
loop
out
jl
ret
lret
div
xlat
out
jnp
pop
adc
cmp
daa
sub
xor
mov
test
stos
pop
jnp
cmp
test
adc
cmp
gs
fcoms
adc
fists
or
fs
mov
xor
jnp
xchg
sub
mov
pop
mov
fs
lahf
imul
and
pop
mov
iret
inc
or
mov
adc
inc
out
rep
adc
mov
cmp
cmp
adc
mov
loopne
mull
out
xor
or
negb
into
scas
or
ja
test
inc
std
mov
mov
rcl
cmp
out
or
les
addb
cmpsl
inc
and
mov
in
aaa
popa
ss
addb
popf
pop
popf
shll
sbb
adc
mov
pop
adc
ja
stos
xchg
int3
cmp
and
push
dec
fstl
push
mov
cmpsl
push
mov
scas
cmpsb
sub
inc
pop
fiadds
push
jae
scas
adc
pop
movsb
rorb
inc
fs
add
out
bound
pop
add
loope
lock
aaa
sub
mov
xor
push
orl
inc
or
pop
sbb
and
xor
cwtl
jle
mov
mov
cmp
outsb
ret
mov
jae
loope
jns
dec
fiaddl
movsl
and
jb
pop
jle
add
or
mov
adc
pushl
sub
aad
pop
or
xorl
popf
push
pushf
xor
in
lods
or
test
stc
dec
mov
sbb
xchg
ds
fcompl
xchg
sbb
push
and
mov
lret
mov
mov
test
or
dec
int3
adcb
mov
or
pop
xor
xchg
add
dec
cmpsl
cmp
jae
mov
cmp
or
es
fisubs
mov
out
dec
into
test
fmuls
test
cmp
cmp
adc
lahf
fisttps
xchg
pop
adc
mov
lcall
xor
mov
mov
aas
sbb
mov
dec
or
mov
sbb
sbb
jle
sub
mov
or
xor
jp
add
sbb
hlt
or
test
or
mov
jae
fdivp
jecxz
jmp
xor
dec
jno
push
lds
testb
lret
mov
test
sti
push
push
imul
pop
pop
xor
movsl
lock
fs
addr16
imul
scas
movsl
imul
outsl
or
or
rcr
mov
and
imul
jg
adc
or
mov
jbe
fidivrs
ss
mov
push
mull
and
pop
rcr
int3
pop
sub
int3
jl
and
rcll
pusha
lret
es
sub
and
lret
es
dec
mov
mov
mov
or
sbb
xor
push
and
dec
lea
negb
add
cmp
rclb
in
lock
push
ret
rcrb
and
dec
stc
mov
out
cmpsb
jecxz
push
or
inc
pop
call
adc
aad
pop
and
or
dec
sbb
fxch
daa
inc
dec
mov
test
pop
jne
lcall
fdivl
dec
fidivrl
repnz
sub
fildll
jl
cmp
xchg
push
sbb
mov
aaa
fwait
push
or
outsb
mov
jmp
testb
adc
outsb
xchg
jo
pop
icebp
jnp
xlat
jge
mov
mov
jp
test
arpl
mov
int3
jl
test
pop
mov
cmp
call
mov
lcall
dec
dec
pusha
jbe
sbb
push
push
pop
insb
sbb
loopne
xchg
inc
les
sbb
test
jge
mov
je
push
pusha
pop
mov
rcl
xchg
test
cmp
fcompl
xor
ljmp
aas
lcall
lcall
xchg
insl
adc
loop
bound
push
xor
cmp
cmpsb
sbb
mov
movl
testl
lods
mov
rcrb
stos
xchg
xchg
std
sbb
clc
in
test
mov
or
lods
add
mov
cli
xchg
push
test
jo
dec
dec
in
sahf
repz
lods
dec
mov
add
mov
cmp
push
pop
mov
or
popa
xor
out
iret
std
in
add
add
or
mov
int
ret
inc
test
stos
push
in
dec
mov
jno
pop
stc
dec
das
mov
iret
sbb
int
inc
ret
mov
sti
daa
xchg
mull
and
aam
movsb
cmp
test
fs
fisubs
dec
xchg
les
add
add
sbb
xor
lret
fwait
xchg
or
sub
adc
rcrl
das
icebp
push
mov
lret
std
mov
dec
adc
cmp
dec
xchg
jb
push
jle
fiadds
xor
in
jge
pop
sti
xchg
aad
and
arpl
mov
out
icebp
sbb
or
mov
and
jb
cld
rol
lret
xchg
stc
movsl
adc
mov
in
fdivp
fwait
cmp
sub
pop
mov
xor
mov
mov
lds
sub
pop
cwtl
out
sbb
sbb
fldt
cmpsl
add
sub
aas
addl
in
stos
sahf
ret
jbe
cmpxchg
mov
cmp
sbb
pop
ret
jae
pcmpgtd
mov
sahf
or
xor
mov
outsb
mov
addb
push
add
mov
fnstenv
testl
mov
loop
shl
pop
lds
cmc
mov
jmp
jne
icebp
mulb
inc
xchg
push
inc
insb
movsl
loopne
push
push
jge
stc
push
mulb
pusha
pushf
lahf
jne
sub
subb
dec
imul
lret
inc
xchg
mov
clc
add
iret
test
fstps
repz
push
lahf
and
es
ss
sub
pop
cwtl
imul
loope,pn
cmp
enter
fidivs
jmp
adc
out
mov
xchg
mov
cmp
or
xchg
icebp
out
jecxz
mov
jae
mov
in
out
inc
mov
dec
fcoms
repz
mov
pop
aad
xor
cltd
jno
leave
outsl
popa
pop
fisttps
mull
push
mov
mov
pushf
push
int
add
gs
ret
lds
arpl
pop
pop
fidivs
rolb
out
adc
jo
dec
cwtl
mov
outsb
mov
mov
in
xchg
outsl
loop
adc
and
push
ja
out
jp
addl
xor
and
daa
push
inc
cltd
mov
test
or
gs
cltd
loope
mov
test
sbb
aam
lds
stos
daa
or
fcmovne
and
sbb
ja
sbb
pop
adc
xchg
jecxz
lds
add
inc
xchg
or
mov
iret
jae
aad
std
lcall
repnz
xchg
out
mov
test
push
je
jae
lcall
aad
and
adc
jb
jge
test
jecxz
adc
cmpb
mov
arpl
add
out
in
xor
xor
or
adc
jmp
pop
dec
repnz
or
bound
idiv
loop
mov
inc
push
stos
jge
sbbl
pop
pop
mov
cmovge
int3
jne
inc
out
xor
mov
mov
pusha
nop
or
sub
fisubrs
cmp
pop
mov
push
xchg
punpckhdq
aad
ljmp
adc
fldcw
ljmp
imul
fiaddl
mov
jbe
xchg
cmpl
pop
in
int3
jno
push
iret
mov
bound
lret
mov
mov
adc
repnz
xor
mov
adc
xchg
jge
mov
shlb
inc
add
pop
lret
in
mov
fisubrl
or
sbbb
jg
dec
dec
lret
lds
dec
shl
je
add
lret
mov
data16
pushf
adc
call
cwtl
push
shrl
leave
or
push
imul
mov
movsl
stc
inc
in
sahf
xor
xor
lock
fisttpll
jo
lret
pusha
jno
jecxz
dec
dec
mov
add
hlt
pop
mov
xor
jle
adc
sub
or
dec
ror
ljmp
sub
cli
xchg
push
sbb
xor
add
popf
inc
ret
pusha
stos
cltd
lods
out
mov
dec
lret
xchg
lods
stos
inc
sarl
push
add
xchg
repnz
push
clc
rcll
imulb
mov
inc
fcmovu
mov
movsb
ret
sbb
cld
jns
mov
push
cmp
ja
add
jmp
addr16
fisubrs
call
mov
xlat
dec
xchg
xor
int3
int3
push
pop
mov
add
mov
sbb
add
and
mov
es
sbb
xchg
clc
add
push
mov
mov
cmp
enter
movsl
loop
cs
cmpsl
out
xor
dec
push
test
jl
xor
sbb
or
vaddsubpd
adc
test
adc
push
lcall
shrl
iret
jnp
add
and
push
jp
mov
loop
lods
mov
mov
adc
push
xchg
jmp
pusha
stc
xorb
dec
sti
xor
pop
mov
jno
jb
push
icebp
xchg
push
je
fstpl
push
push
loopne
out
je
mov
lods
mov
push
ja
and
icebp
cmp
dec
movsb
pop
stos
pop
and
push
loopne
inc
pop
mov
adc
pop
sbb
push
fucomip
nop
lods
xchg
test
xor
out
cmovp
pop
std
call
ret
clc
pop
add
stos
shr
lods
adc
mov
lds
mov
or
adc
or
xchg
and
sti
fidivrl
dec
push
sahf
adc
jp
pop
xor
cltd
sti
jno
cwtl
jae
imul
mov
and
mov
popa
scas
dec
sbb
dec
mov
mov
jb
test
shrb
sbbb
rolb
and
lock
xor
scas
push
aas
aam
cmp
mov
sbb
pop
stos
mov
arpl
ja
ror
aas
and
mov
loop
and
lret
lods
dec
pushf
mov
xor
push
dec
fs
sub
cld
xchg
popf
dec
fs
jmp
fildll
pop
pop
sub
lock
mov
or
push
and
or
cmpsb
inc
xchg
add
fmul
stos
add
movsb
inc
in
test
in
gs
outsb
push
jno
inc
adc
out
ljmp
mov
mov
cmp
add
dec
notb
aaa
sar
push
orl
je
pop
or
xchg
insl
std
dec
jmp
negb
pop
lds
jne
hlt
cwtl
notl
iret
mov
lea
dec
test
shl
movsl
xlat
add
cmc
or
inc
fldcw
and
sbb
fisttpl
and
sbb
scas
cltd
dec
int3
and
sbb
or
pop
fistpl
xchg
add
dec
sbb
lcall
mov
sbb
stos
shrb
les
fwait
xchg
lods
or
lock
xchg
mov
dec
and
mov
std
jge
push
lret
jecxz
xchg
pusha
add
jmp
xor
push
xor
lea
inc
mov
mov
mov
inc
cmpsl
loop
gs
push
pop
sbb
sub
icebp
pop
addr16
pop
xor
and
ljmp
inc
push
push
push
sbb
pushf
cmp
inc
xchg
ss
xorl
jg
out
or
xchg
xor
push
mov
pop
mov
mov
xor
cmp
jl
stos
dec
je
movsb
xchg
mov
cmp
cltd
ss
repz
clc
jp
pop
enter
int3
mov
nop
cmp
ret
leave
mov
xor
mov
or
or
and
add
mov
test
push
pop
xchg
gs
insb
xlat
inc
xchg
mov
push
dec
mov
xchg
push
sub
add
jl
lods
mov
pusha
mov
inc
stos
jl
pop
xor
aad
dec
jmp
push
inc
cld
xchg
insl
aam
mul
jbe
cmp
aad
adc
lea
mov
outsb
xchg
inc
aaa
pop
push
push
out
fcomip
notl
outsl
cld
mov
sub
xor
pusha
pop
mov
rcll
or
or
cmp
add
mov
scas
jg
push
cmc
arpl
outsl
push
jo
test
mov
nop
daa
mov
xchg
push
mov
jne
inc
pop
jns
movsb
std
or
pushf
or
mov
bound
repnz
push
mov
ljmp
or
lret
loope
inc
mov
and
stc
or
cmc
cli
xchg
mov
pop
and
dec
out
pop
xor
xchg
pusha
jmp
and
jl
filds
and
aas
add
push
push
xor
in
mov
in
sbb
cmp
jp
xor
out
push
and
aas
fcmovb
jp
pop
enter
xchg
cli
push
push
adc
mov
int3
popa
add
out
out
xor
push
sub
add
and
xchg
fmuls
leave
and
repnz
jbe
add
push
adc
xor
dec
daa
push
lods
cmc
fnstenv
cli
push
or
inc
clc
xchg
aaa
dec
pop
dec
rcll
cmp
jnp
dec
sub
pop
lret
shrb
aaa
mov
push
imul
nop
xchg
nop
mov
xchg
fs
popf
addb
xor
lret
mov
mov
mov
xchg
mov
roll
insl
inc
cmp
inc
or
lcall
xor
sub
xchg
aas
dec
cld
dec
pop
adc
lret
cmp
popf
outsb
xor
adcb
mov
sbb
or
adc
ret
add
insb
xchg
xchg
stos
adc
xchg
popl
cli
ja
leave
fistpl
dec
lahf
ret
out
jbe
dec
pop
cmp
pushf
adc
arpl
xchg
cmp
mov
aaa
xorl
push
inc
mov
clc
push
push
ss
lcall
xchg
inc
scas
jl
mov
sub
ret
fucomip
jl
push
sub
mov
pop
adc
jnp
xchg
in
mov
lods
xor
lds
pushf
sarl
fdivrl
mov
fucomp
dec
decb
jnp
sub
stc
fwait
dec
sahf
mov
push
scas
push
mov
mov
out
into
sbb
mov
dec
cmp
imul
push
pop
sbb
xchg
lret
stc
daa
mov
popa
push
adc
jns
inc
dec
push
inc
mov
rorb
dec
mov
and
iret
sahf
adc
je
ja
push
push
clc
cmp
roll
je
popf
xlat
add
dec
jo
adc
loope
inc
in
shll
mov
add
sti
clc
int
sub
pop
or
lret
in
les
jle
adc
out
aam
loope
cmc
xor
fstps
add
inc
cmp
loopne
push
imul
out
mov
jo
aam
enter
mov
lods
sub
sbb
sub
sbb
pop
push
mov
jnp
cld
daa
mov
ret
and
adc
test
lods
and
lock
push
jne
and
mov
movsb
xor
and
fwait
sbb
and
fsubrl
repz
jne
mov
lock
jne
mov
push
in
pop
sarl
xchg
dec
sbb
xor
test
lret
pushf
int
mov
inc
jmp
pop
xchg
mov
lcall
jae
xchg
pop
movsb
outsl
insl
fidivl
push
or
inc
mov
pop
outsl
cmp
mov
and
pop
cmp
decb
pop
dec
daa
test
roll
push
loope
mov
lret
xor
push
movsb
adc
fmulp
push
inc
sub
sub
jns
js
sbb
sub
and
scas
xchg
sbb
rorb
test
pusha
pop
mov
xor
es
stos
in
jnp
xor
dec
pusha
sub
push
jecxz
fistl
bound
add
dec
int3
mov
push
jae
jbe
sub
push
adc
pop
out
sub
fildll
popa
sbb
add
mov
jns
xchg
sub
pop
dec
push
lea
je
movsb
xchg
mov
push
mov
mov
jno
ds
pop
add
jnp
and
mov
fmulp
movsl
cmpsl
aam
mov
mov
mov
std
dec
lahf
or
fs
xchg
mov
adc
inc
pushw
aam
bound
xchg
xchg
enter
fcoms
stos
inc
imul
ret
rcll
fwait
inc
push
test
ljmp
std
dec
lock
fwait
inc
negl
push
int3
into
cs
insb
mov
js
sahf
ja
mov
xchg
add
or
pop
cmp
test
cmp
test
mov
inc
sbb
xchg
in
ja
icebp
jo
dec
test
mov
outsb
xor
or
das
mov
aas
in
pop
divl
jb
sbb
test
sub
xor
sub
dec
stos
and
cmp
adc
ss
dec
mov
sti
data16
or
fdivl
inc
push
je
cmpsl
repz
fs
sub
and
out
stos
in
pop
pop
add
xor
fsubrl
cmp
insl
rcrb
lds
int3
leave
lret
push
insb
sahf
adc
ret
dec
pop
imul
sbb
js
pop
test
add
sbb
inc
sub
stos
fidivrl
xchg
pop
mov
xor
sub
xor
push
subb
rcll
out
or
cmp
xor
sbb
add
push
jge
or
sahf
fwait
out
push
loope
pushf
mov
pop
mov
jb
jle
ja
inc
mov
test
call
je
in
jmp
or
and
lret
cmp
pop
loop
sub
out
je
xchg
lret
movsb
frstor
enter
shl
movsl
inc
test
nop
push
adc
jle
call
std
dec
pushf
xchg
xchg
inc
dec
mov
ds
inc
add
sti
mov
push
call
shlb
test
adc
pop
xchg
ftst
ret
ljmp
or
inc
rcll
mov
xorb
in
jb
cmp
imul
leave
mov
xor
insb
jl
subb
push
jns
lock
cmpsb
jge
in
lcall
xchg
lcall
std
fs
test
pop
hlt
movsb
sub
mov
jnp
adc
ficoml
push
adc
mov
sub
cld
xor
sbb
out
sub
arpl
std
mov
adc
xor
testl
fwait
into
lea
mov
out
sahf
lds
es
ss
ja
les
jl
out
popf
rcrb
roll
not
es
mov
or
mov
sbb
hlt
orl
pop
loope
out
lret
push
adc
loope
jae
ljmp
push
stos
pop
enter
jno
cwtl
mov
imull
pop
xchg
dec
insb
mov
add
call
iret
into
orb
adc
es
in
pop
pusha
stos
and
sub
and
cmp
shrb
xor
mov
mov
repnz
mov
movsb
add
iret
fiaddl
pop
inc
jb
ret
std
adc
aaa
and
mov
and
xor
loopne
iret
push
aaa
jmp
jae
and
cmp
sahf
decb
push
pop
dec
or
mov
movsb
stos
out
movl
sbb
jne
pop
jnp
cmp
fdivp
push
mov
sub
hlt
cmp
je
hlt
and
adc
xor
test
add
sub
int
sub
mov
movsb
mov
outsl
xchg
rorb
inc
rclb
scas
fsts
jge
pusha
lods
test
cwtl
push
jle
xchg
in
mov
bound
mov
fwait
or
jecxz
lods
aad
add
pop
mov
inc
push
in
mov
jecxz
fsub
dec
loope,pt
add
insl
sub
mov
jl
repnz
push
jo
xchg
enter
dec
pop
frstor
jp
jge
aaa
int3
add
pusha
addr16
push
loop
push
inc
mov
lds
sbb
xlat
pop
data16
push
mov
add
dec
mov
push
xchg
mov
cmc
pusha
outsl
rolb
or
inc
rorb
inc
push
lods
mov
xchg
mov
xor
xchg
jne
inc
xor
rcrl
push
je
std
lret
popa
inc
in
jb
ljmp
dec
and
push
adc
add
mov
push
test
mov
add
ljmp
xlat
cltd
jle
lret
jae
lods
inc
es
push
loope
sti
cld
test
lret
pop
pop
adc
sub
cwtl
sub
mov
movsl
inc
jns
or
mov
cmp
push
push
jge
test
loope
ljmp
mov
adc
add
dec
cmp
data16
jg
lcall
fisubs
andb
cmp
or
ret
mov
sahf
and
iret
insb
rcrb
fisubrl
fmulp
ljmp
cs
lret
mov
push
pop
mov
outsl
shr
push
test
sbb
cld
shr
xor
or
cmp
mov
ret
into
stos
push
sub
add
ss
sahf
sbb
fwait
and
cld
pop
std
jbe
mov
aas
mov
sbb
bound
movsl
and
ficoms
dec
jle
mov
jp
ja
inc
es
stc
push
sbb
outsb
sbb
mov
jo
mov
into
mov
imull
clc
imul
or
les
mov
push
jne
fildl
pop
outsl
mov
sub
into
ds
dec
cmpsl
hlt
pop
push
outsl
insl
jecxz
inc
and
xchg
xor
addl
rolb
cmpsl
jl
lds
pop
sub
testl
mov
dec
jb
jg
xchg
repz
repnz
jecxz
arpl
movsl
shrb
sbb
ljmp
mov
sbb
adc
and
or
aad
enter
xchg
sbb
clc
pop
mov
aaa
ret
pop
mov
add
jnp
sub
mov
mov
loopne
push
movsb
js
lock
std
push
adc
je
push
cwtl
aaa
xchg
jp
cmp
mov
sbb
push
dec
or
mov
fsubrl
outsl
mov
lods
fprem
dec
cld
cmp
push
test
pop
xor
mov
mov
mov
int3
mov
ds
iret
inc
and
ret
push
fmull
adc
xchg
xchg
jns
xor
adc
mov
pop
pop
insl
inc
lods
lcall
xor
enter
push
push
decl
lahf
xor
add
sbb
xor
jge
inc
cmp
in
inc
test
fnstenv
sbb
movsl
and
sti
idivb
and
ljmp
jp
ja
jle
adcb
cltd
jecxz
sahf
mov
push
xor
inc
sbb
int
and
or
inc
loopne
stc
cmp
addr16
jmp
add
aad
sub
ret
movsb
cmp
mov
push
scas
lret
add
jne
push
ja
lods
repz
push
sbbb
jl
and
sbb
aas
add
jno
jns
icebp
shr
or
push
inc
xor
lods
ffreep
jecxz
sbb
mov
call
dec
fiadds
pop
test
pop
xor
ds
pop
or
fdiv
pop
out
cld
xor
into
xchg
xor
hlt
pop
data16
jl
xor
cmp
mov
push
int
mov
stc
lods
js
ljmp
sbb
stos
or
lods
movsl
dec
jp
and
mov
mov
adc
dec
fmull
insl
sub
or
stos
sti
stc
enter
mov
mov
inc
push
dec
jp
stos
mov
adc
mov
push
cmp
and
movq
js
xor
add
push
inc
std
jne
jmp
in
sahf
push
nop
fidivs
lahf
cmpsb
ficomps
jge
xchg
adc
cld
dec
add
rcrb
notb
fcmovbe
and
das
add
jnp
imul
mov
idivl
jns
mov
mov
dec
push
jmp
sub
cmpsb
pop
in
fiadds
int3
push
inc
mov
clc
or
dec
fcmovnbe
repz
cmp
jge
popl
mov
in
movsl
xor
mov
and
and
sahf
repnz
stos
call
push
lret
mov
xor
add
dec
inc
in
inc
fsts
sti
add
cli
cwtl
push
mov
repz
mov
addr16
dec
gs
cld
mov
pop
sub
mov
mov
xchg
cmpsb
mov
fadd
test
je
push
xchg
fs
test
imul
pop
fists
push
iret
stc
jmp
aad
add
jbe
mov
sbb
adc
mov
mov
mov
mov
inc
jle
pop
es
sahf
pop
rol
pop
aaa
push
aam
xorb
dec
shlb
dec
jnp
std
adc
sbb
sarl
sbb
xor
mov
pop
xor
push
jne
jp
xlat
push
movsl
inc
cmp
jle
or
rcrl
xlat
lods
iret
in
pop
scas
sub
out
sub
aam
dec
jge
repnz
sub
fs
push
mov
xchg
add
pop
mov
es
pop
icebp
add
jo
mov
xor
adc
mov
add
xlat
and
mov
lods
and
test
shl
xchg
mov
jecxz
inc
ss
in
cli
jmp
xchg
adc
sub
adc
shrb
mov
pop
aam
repnz
xchg
pop
push
gs
or
sbb
cmpsb
gs
nop
push
hlt
movhps
xor
dec
sbb
lock
jle
lret
jne
mov
aas
adc
stc
or
idiv
das
loop
clc
xorb
outsl
out
inc
jbe
xchg
mov
pop
enter
test
in
and
data16
negl
jne
aam
dec
mov
adc
mov
mov
mov
into
ljmp
xor
cmpb
cmp
call
xor
cwtl
mov
push
pop
and
add
bound
std
loope
and
mov
clc
push
cs
pop
std
push
xor
mov
xchg
mov
xchg
mov
nop
mov
or
loopne
insb
clc
xor
aas
dec
scas
or
arpl
jg
push
jns
adc
mov
or
dec
xchg
and
sub
xor
lcall
jmp
imul
insl
mov
lret
repz
and
lea
pop
test
insl
add
sbb
cmp
or
inc
testl
divl
pusha
les
lret
dec
lahf
push
dec
nop
iret
repz
mov
push
in
sarl
dec
mov
mov
fidivl
fadd
cwtl
pop
sbb
adc
rdtsc
cmp
or
mov
test
call
pop
adc
lcall
push
mov
sub
pusha
dec
xchg
cmpsl
mov
movsb
xchg
stos
fldl
lret
or
cli
mov
sahf
clc
add
cmc
jmp
mov
xchg
fstl
xchg
mov
push
lods
pop
insb
rolb
rolb
arpl
pushf
dec
bound
mov
sbb
xchg
and
cmpl
popf
fdivl
sub
andb
inc
push
loopne
and
or
lock
cmpl
mov
inc
push
mov
mov
fbld
and
inc
aam
mov
push
pop
push
dec
jne
sti
or
mov
shr
jb
fidivs
mov
dec
leave
test
ret
fistl
cmp
mov
sub
test
pop
xchg
test
xchg
inc
or
pop
xor
inc
mov
in
aas
push
xor
push
sub
ds
inc
roll
pushf
push
cmc
cmp
ret
fwait
testl
sarl
loop
xchg
lahf
fwait
rcll
mov
ljmp
mov
xchg
xor
ja
test
cmpxchg
scas
gs
pop
rcr
push
sbbl
clc
xor
add
ljmp
scas
lods
or
push
xchg
xor
dec
outsb
and
repnz
aad
cmpb
hlt
and
dec
mov
hlt
cmpsb
adc
jno
fs
or
lret
test
and
mov
mov
test
push
push
push
stc
jbe
testl
rcr
shll
sbb
addb
cmp
xchg
cli
sbb
dec
gs
cmp
xchg
mov
shr
rcr
cmc
ror
leave
push
leave
aaa
lcall
jns
xchg
ret
xorl
push
mov
ljmp
push
fs
aad
ja
mov
inc
stc
mov
test
sbb
or
jg
clc
pop
xor
pop
cld
push
jno
xor
roll
dec
and
outsl
ljmp
repnz
and
loope
push
push
ss
pop
fdivp
push
mov
push
stc
into
xor
pop
out
mov
jecxz
xchg
cld
and
adc
or
dec
fwait
sbb
xchg
mov
dec
dec
fnstenv
push
pop
xor
or
jmp
dec
sub
fsubrl
mov
xchg
mov
inc
andb
or
cmpsl
xchg
pop
pop
or
or
mov
jb
repnz
fisubs
orb
popa
inc
dec
jnp
jge
fimuls
loopne
stos
enter
mov
add
mov
out
add
jecxz
xchg
enter
adc
sbb
push
dec
xor
and
outsb
lret
dec
movsb
mov
cmc
aad
popaw
outsl
das
adc
ret
and
mov
lods
add
jns
push
mov
popl
push
xor
addl
addr16
out
int
repz
xchg
fcompl
pop
push
mov
dec
lods
jg
les
jp
out
stos
jmp
cmp
stc
ja
push
mov
or
in
in
cmp
pop
cwtl
lods
repz
mov
rcrl
ja
or
pop
xchg
xor
pop
pop
test
dec
nop/reserved
ja
sbb
mov
mulb
fsubp
imul
mov
or
mov
pop
popl
lret
idivb
and
mov
movsl
xchg
movsl
pop
sti
outsl
adc
jge
push
in
daa
mov
test
cltd
sbb
inc
outsb
popa
arpl
cpuid
xchg
add
int3
pop
ljmp
cmp
stc
mov
pop
stc
aaa
and
popa
mov
jp
lods
test
rorb
pop
pand
inc
mov
aam
inc
mov
popa
inc
add
loop
xlat
shrl
or
in
lret
dec
add
in
test
jbe
repnz
push
test
xchg
adc
jo
mov
adc
push
dec
cmp
lahf
xchg
push
pop
mov
mov
mov
xchg
lahf
enter
mov
rcrb
ret
iret
pop
test
shll
test
data16
fbstp
iret
cmc
mov
scas
mov
data16
mov
and
sub
in
inc
leave
add
push
cmp
cltd
or
mov
lea
scas
mov
mov
or
mov
adc
int
pop
lret
cmp
push
cmpsl
dec
dec
cmpsb
dec
fcmovnbe
vmovq
pop
es
push
aad
mov
fidivrs
sbb
mov
cli
mov
or
std
out
pop
ja,pt
daa
cld
dec
jbe
mov
mov
xorb
and
popf
sarb
inc
mov
adc
jmp
fwait
xchg
cli
mov
pop
into
pop
mov
loop
pop
std
popa
or
sbb
mov
push
mov
movsl
adc
sarb
push
fs
icebp
jge
imul
outsb
or
cmp
out
jg
aas
add
idivb
and
cmp
cld
das
insb
xor
testb
dec
test
mov
aam
inc
jo
stos
aad
mov
repz
push
bound
jl
sub
insb
lods
sahf
mov
scas
cmpsl
xor
pop
and
mov
sahf
pop
cwtl
xchg
add
sbb
and
cwtl
scas
adc
imul
icebp
push
or
add
cmpsb
shll
jcxz
add
jge
pop
cmp
out
cmpsl
inc
lock
push
iret
les
repnz
xor
mov
cmpsl
stc
jg
pop
movsb
int3
sbb
push
outsb
adc
dec
pop
stos
jb
pushf
stc
pop
sub
and
jo
mov
adc
pop
xor
mov
in
cmp
fbld
sbb
enter
push
adc
mov
jp
mov
cld
sub
inc
push
mov
aas
sti
lock
push
adc
test
mov
sarb
lock
push
xor
inc
mov
sub
jo
imul
cmp
xor
adc
aam
and
fs
jns
push
mov
mov
and
outsb
and
mov
ret
mov
add
add
loope
dec
inc
insb
mov
sub
xor
or
sub
add
adc
outsl
and
ret
stos
rol
fdivl
add
jae
fildl
xchg
and
stc
divps
and
xchg
cmpsl
cs
movsb
adc
filds
das
sub
jno
dec
divl
add
outsl
push
sahf
pop
sub
or
sub
lods
jne
out
scas
cld
dec
dec
push
jb
test
sti
rolb
les
aas
ficoml
inc
sub
jo
insb
push
xchg
mov
jo
cmc
arpl
cmpsl
push
outsl
inc
push
xchg
dec
rep
inc
jnp
divb
je
push
lds
shlb
adc
mov
adc
mov
and
mov
adc
test
mov
adc
sub
scas
and
jo
add
mov
xchg
ja
dec
or
fldt
pop
mov
cmp
shlb
cmc
and
jb
mov
jp
or
xchg
xlat
movsb
add
mov
lret
negl
and
in
push
mov
lret
pop
mov
les
pop
push
or
push
in
xchg
pop
sbb
lea
mov
loope
add
and
push
pop
mov
adc
pop
ret
jmp
mulb
lcall
dec
aaa
inc
pandn
jae
or
call
outsb
adcb
fcmovbe
test
enter
stc
jle
mov
push
adc
adc
sbb
xor
push
test
insl
sbb
aas
push
dec
fisttpl
push
inc
shlb
and
stos
idivb
int3
fadds
sub
xchg
push
push
dec
xor
in
aad
sbb
push
dec
push
addl
fdiv
sub
fbstp
repnz
adc
test
xchg
scas
js
push
push
sbb
push
sbb
fiadds
sbb
cmp
jns
mov
xor
jae
mov
inc
ljmp
push
jp
add
pop
gs
sub
enter
mov
sti
mov
sti
or
fidivrs
inc
mov
les
fiadds
loope
xchg
mov
or
xchg
jo
push
jbe
pop
push
shrl
sub
pop
and
pop
das
ss
jge
xchg
das
subl
ret
mov
sub
inc
jae
cmp
orb
in
jae
mov
inc
or
sbb
fs
test
dec
gs
mov
pop
stos
testl
inc
adc
outsb
sti
loopne
pop
insl
test
mov
push
adc
push
jnp
inc
fidivs
mov
mov
jb
adc
xor
nop
hlt
ja
fsubrl
sub
enter
inc
jle
test
and
jg
xor
aad
call
mov
sahf
add
and
popa
jle
inc
loope
lock
mov
dec
cmp
int3
dec
add
add
sbbl
push
xor
out
aas
mov
push
rclb
dec
adc
in
aas
ret
clc
adcl
idiv
push
cmp
stos
dec
xlat
cwtl
adc
add
dec
mov
xor
xor
mov
xor
aad
or
xchg
sub
in
icebp
cmpsb
sub
and
mov
stos
div
std
mov
pop
lods
add
sub
int
push
xor
js
int
or
mov
pop
xchg
jg
adc
dec
mov
insw
mov
push
fisttpll
sbb
add
xchg
push
xchg
insl
push
out
mov
dec
add
enter
mov
pop
or
jge
mov
jno
int3
js
xlat
dec
push
int
mov
jle
test
mov
scas
outsb
pop
push
push
in
aam
and
mov
cmp
rclb
bound
gs
repnz
push
aas
rcl
test
inc
xor
dec
lcall
aam
pop
pop
in
adc
aam
mov
push
xor
hlt
imul
jge
dec
xor
lcall
sbb
pop
pop
or
ret
mov
mov
sbb
mov
lret
xlat
add
scas
test
push
ret
cmp
mov
xchg
popa
and
pop
fdivrl
negl
mov
inc
mov
xchg
mov
jge
test
mov
mov
aad
ret
jle
repnz
sub
nop
outsb
sub
mov
mov
sub
repnz
movl
inc
fbstp
test
ja
lds
ljmp
shlb
jo
loope
mov
sarl
mov
lods
jp
jge
jb
inc
js
mov
jnp
bound
sbb
dec
pop
out
push
jnp
fisttps
mov
lock
push
hlt
xchg
inc
shlb
lcall
sub
and
es
testl
das
or
mov
dec
cli
roll
xor
icebp
nop
push
in
jecxz
pop
pop
inc
leave
lahf
adc
xor
rolb
inc
push
sbb
pop
in
or
jge
push
fistps
xor
xchg
cmp
or
sbb
fisubl
notb
iret
ljmp
jp
call
push
movsl
adc
xor
mov
das
cld
pop
out
mov
jns
scas
or
fisubrl
push
movsl
ret
sbb
xchg
ja
jecxz
ret
mov
jge
mov
out
sub
shr
gs
dec
testb
repz
xchg
scas
insl
xor
pushf
fs
in
outsb
clc
lods
or
mov
add
push
inc
rorb
insl
rcrb
fildll
push
cmp
pop
mov
xchg
jnp
addb
push
leave
add
out
std
and
cmpsl
lcall
fmuls
push
lahf
sbb
cmp
ljmp
sti
push
das
jnp,pt
push
adc
repz
out
inc
and
or
mov
inc
cltd
ds
rcrl
jl
sub
and
cmp
enter
test
mov
xchg
outsb
mov
dec
out
shrl
cmp
xlat
xchg
mov
cld
cwtl
mov
mov
lds
test
jo
vmread
push
add
or
jecxz
rorb
rclb
mov
dec
je
int3
xchg
cmpsb
jb
sub
jne
add
push
pop
push
pop
or
push
stos
adc
cld
lret
dec
lret
mov
dec
sbb
or
mov
insl
stc
ficoms
pop
dec
adc
lods
xor
mov
ss
jnp
icebp
popa
sub
xchg
fistl
pop
or
add
in
jp
in
cmc
dec
mov
stos
cli
xor
mov
add
sarl
push
jmp
mov
imul
daa
adc
jmp
push
add
jle
push
xor
sbb
jmp
xchg
mov
pop
test
ljmp
dec
push
negb
mov
dec
xchg
dec
xchg
aas
push
test
int
addb
xor
sbb
sbb
lods
fidivl
int3
push
mov
hlt
pushf
popa
stos
cmp
mov
pop
xor
movsb
and
lods
cs
xchg
shll
mov
mov
les
mov
jae
stos
jae
add
xchg
inc
popa
add
mov
jecxz
jne
sarb
adc
ret
sub
or
jae
xchg
cltd
and
fwait
sarl
test
lds
jb
or
xor
jno
push
test
or
cmpsb
jae
pop
ror
dec
push
hlt
loopne
mov
scas
test
scas
push
js
mov
clc
mov
imull
imul
jae
pop
push
mov
in
pop
cmpsl
mov
lea
sbb
icebp
push
inc
cmpsb
popf
mov
cmp
ficoml
sbb
xor
popf
push
jmp
or
out
add
loope
icebp
outsb
insb
cmpsl
dec
add
inc
ret
mov
mov
sti
mov
pop
rorl
shrb
mov
repnz
out
jge
leave
or
cmpb
jno
fsubl
pop
outsb
sub
dec
add
push
xchg
xchg
sbb
adc
xchg
or
mov
scas
enter
jecxz
pop
cmp
sysexit
adc
fs
addb
sti
mov
rorl
cmp
xchg
and
dec
adc
pusha
push
test
jbe
mov
ret
sub
cmpsl
pop
dec
pop
popa
pop
jle
pop
xchg
mov
jnp
push
test
lret
lea
cmp
iret
scas
outsb
sti
xor
mov
out
dec
push
sbb
cmp
pop
ljmp
int
jecxz
mov
mov
fs
in
data16
xor
rorb
jmp
notl
add
in
dec
inc
insb
jb
pop
mov
push
out
mov
push
pop
vmwrite
xor
lret
sbb
les
rcrb
iret
sbb
and
xorb
test
stc
fbstp
and
inc
adc
call
mov
sarl
loopne
int
push
leave
mov
jge
mov
jb
inc
sbb
cmp
movsb
xor
mov
addr16
lock
xchg
push
fwait
outsl
xchg
shll
fwait
xor
add
cmp
notb
rolb
xor
pminub
shlb
popa
jns
ljmp
cmpsl
test
adc
jne
mov
mov
xor
lea
dec
jns
mov
sub
and
sub
pop
add
stc
lcall
std
test
aad
ja
sbb
adc
mov
inc
addr16
mov
mov
mov
xlat
cmp
js
movsl
dec
jno
xchg
or
add
test
stos
xor
cltd
leave
inc
push
in
mov
aad
je
push
cmp
cmp
jge
data16
push
mov
dec
loope
ja
add
push
sti
cmp
shrb
es
gs
adc
jge
pop
mov
dec
dec
cmc
ja
insl
loopne
and
mov
sub
fsubrp
and
mov
cmpxchg
inc
fisttpll
outsb
icebp
push
dec
xchg
add
pop
lock
daa
and
push
add
ret
call
mov
leave
push
lret
js
xchg
aam
inc
rol
pop
lock
mov
adcb
hlt
add
sar
xor
cli
mov
loop
sub
pop
inc
cltd
pcmpeqw
jl
adc
xor
mov
pop
mov
xor
mov
push
adc
repnz
lcall
lods
jne
mov
pop
pop
outsl
clc
xor
shrl
or
scas
jns
sbb
cmp
add
repnz
jp
repnz
jbe
mov
adc
es
out
fdivrs
mov
sarb
lretw
loopne
xor
jp
out
sbb
sbb
fs
push
sbb
adc
sbb
cmp
punpcklwd
jle
fcompl
push
push
add
push
cmp
mov
icebp
and
popf
in
cmpl
xor
test
mov
xor
sbb
in
sbb
test
sbb
and
sub
adc
push
xchg
popf
repnz
cmp
mov
call
into
adc
push
and
pop
jb
pop
ret
out
adc
ljmp
out
jae
mov
and
xchg
in
cmp
push
data16
cmpsl
and
or
enter
and
stos
lcall
scas
cmpsl
mov
mov
popa
pop
jmp
pop
ficoml
cmp
mov
ret
sti
fst
lds
and
sbb
ljmp
jp
mov
lret
mov
fisubs
js
push
aas
es
xchg
pop
mov
daa
dec
gs
and
bound
sub
lds
insl
sbb
dec
fisttpl
into
sub
lock
cmp
test
mov
nop
adc
inc
out
ja
mov
bound
or
and
xchg
xchg
cld
ja
xchg
lahf
out
cs
in
fstpl
or
fwait
pusha
cmc
or
inc
pop
sbb
mov
cltd
xchg
sahf
dec
xorb
push
je
xor
in
cwtl
scas
sub
cld
add
mov
inc
stos
fcomps
xor
test
pushf
and
jg
jnp
jns
iret
dec
iret
inc
sub
not
lret
movsb
sub
cmp
sbb
sbb
sub
outsl
into
mov
fs
dec
repnz
jmp
mov
sbb
cmp
mov
mov
mov
cmp
and
imul
and
pushf
or
lods
cmp
xchg
push
imul
and
and
insb
sub
or
stc
pop
dec
sbb
xchg
cmp
pop
xor
ja
popf
mov
sbb
in
mov
push
xchg
xchg
push
fdivs
psadbw
push
dec
stc
mov
addr16
adc
pop
popa
in
aad
lds
add
xchg
cld
pop
pop
mov
xor
jmp
les
mov
push
pop
jmp
xchg
dec
cmpsl
push
sbb
hlt
rol
in
jl
add
ljmp
iret
test
cmpsl
inc
push
cmpsb
ja
fnstenv
stc
adc
or
xor
lea
cmc
sbb
mov
mov
xor
test
inc
sub
push
jg
pop
in
or
fisubs
aad
inc
xor
rcrl
cmpxchg
and
dec
xorb
sub
sub
cmp
rcll
cmp
push
xchg
mov
scas
add
aam
scas
outsb
dec
jbe
push
jmp
test
dec
push
out
jno
js
fnsetpm(287
imul
test
data16
mov
add
xor
pop
leave
jae
cwtl
inc
leave
lcall
inc
sbb
fnstenv
mov
xor
adc
pop
cs
mov
or
adc
test
xor
fwait
ss
hlt
xchg
test
dec
std
inc
sbb
enter
mov
je
xchg
pushw
pop
mov
dec
push
ror
rolb
shrb
xchg
das
xor
insl
dec
mov
lcall
sub
mov
pop
arpl
mov
mov
das
insb
mov
mov
xor
push
mov
sar
sub
mov
into
jge
dec
sub
mov
fadds
mov
sbb
dec
ss
fnstenv
in
mov
mov
test
stos
inc
fisttpl
es
test
lret
dec
inc
lret
dec
cmp
push
add
push
rorb
push
mov
cmpsl
in
out
mov
sbbl
call
mov
icebp
fcomps
sub
sub
xorl
popa
cmp
ss
iret
pop
mov
int
sbb
push
divb
jbe
xor
ret
xchg
push
jae
insl
es
filds
les
movups
jo
jae
js
je
mov
dec
test
test
mov
jecxz
fisubrl
je
xchg
das
hlt
ret
jne
les
out
lods
sub
lahf
je
push
js
push
bound
lods
push
ret
loop
and
or
int
icebp
sub
or
rorb
lret
ficoml
or
dec
dec
out
mov
scas
push
adc
in
imul
jbe
std
lret
enter
mov
popa
or
roll
jecxz
insb
and
mov
cmp
cmp
push
in
movsl
jae
loop
push
cmp
fwait
lods
mov
loopne
pop
mov
out
add
sahf
xchg
sbb
fwait
mov
ret
jle
fdivrp
push
xchg
lcall
cmpsl
in
xor
add
adc
xor
stc
mov
jbe
xlat
and
adc
push
test
jae
dec
push
cwtl
jns
jb
sbb
dec
fwait
loop
and
push
sahf
push
rcrl
mov
sbb
in
jnp
fisubs
xchg
rcrl
sub
scas
mov
dec
lahf
aam
mov
in
xor
fnstenv
push
andb
xor
popa
xor
mov
cmpl
into
imul
dec
push
add
xchg
ljmp
sub
sub
lea
push
adc
movsl
insb
or
xchg
inc
data16
inc
cmc
ds
push
cmp
mov
cmp
inc
les
stc
dec
adc
mov
dec
dec
fstpl
mov
cmp
decb
adc
fwait
shlb
jge
fstps
faddl
cmp
adcb
outsb
in
int
mov
movsb
fildll
or
xchg
mov
sub
mov
add
pop
ficoms
in
and
mov
nop
xchg
daa
push
testb
aam
lock
ljmp
fs
dec
mov
adc
push
lahf
dec
mov
fs
mov
sub
icebp
mov
ret
lds
jne
ss
icebp
repz
jle
lock
rcrb
xor
mov
add
inc
test
in
add
lret
sub
mov
scas
sbb
xlat
mov
cmp
scas
ror
pusha
xchg
test
mov
in
ret
jmp
add
fisubl
inc
movb
jl
ffreep
jnp
ret
jae
leave
mov
adc
ret
sahf
aad
jno
sbb
lret
sub
pop
sti
int3
xchg
jmp
loop
inc
stc
std
cli
out
test
adc
mov
pop
test
ret
cwtl
mov
dec
int3
xor
out
jecxz
mov
push
call
dec
test
jnp
divb
jae
sbb
xchg
ja
and
hlt
push
not
push
xchg
and
sti
adc
lret
daa
add
pop
cwtl
das
addr16
xchg
fists
stos
stos
js
adc
push
fisttpll
roll
rorb
decb
sbb
dec
and
cmpsl
push
test
adc
enter
sub
cmp
inc
or
push
daa
pop
inc
adc
and
inc
pop
cmpsl
dec
mov
push
stos
xchg
jge
jmp
dec
je
sub
orl
es
int
dec
mov
adc
sbb
xor
mov
imul
inc
lds
dec
gs
pop
cmp
imull
out
mov
inc
and
lahf
cli
adc
lcall
outsb
adc
pushf
mov
jl
add
int3
nop
mov
mov
push
fsts
sub
mov
lahf
stos
inc
shrl
add
jnp
xor
sti
jne
mov
mov
icebp
sub
iret
mov
xlat
lret
pop
insl
pop
sar
sub
jne
sub
iret
imulb
mov
lret
mov
lea
rcll
dec
call
insb
stos
jo
mov
mov
xchg
int
dec
hlt
xor
mov
xchg
mov
pop
psubsb
cmp
xlat
or
push
jle
daa
mov
fisttpll
xchg
mov
lods
sahf
and
push
mov
mov
jb
arpl
loop
jbe
mov
cmp
cs
mov
int
aas
sbb
andl
je
cmp
cld
leave
inc
and
and
jbe
insb
mov
pop
dec
jno
mov
mov
jmp
sti
sbbl
and
data16
pop
lret
pop
xchg
dec
or
inc
cltd
shrl
aam
and
mov
push
rcrl
fcmove
sbb
lahf
movsb
daa
inc
sahf
push
mov
or
call
adc
add
enter
adc
imul
in
sub
jp
push
dec
iret
je
stos
ljmpw
clc
ret
hlt
rcr
mov
jno
and
inc
and
stos
xchg
adc
sbb
ret
mov
mov
sbb
push
or
sub
sbb
std
and
jmp
sub
add
loop
and
sub
mov
mov
or
xor
rcr
fisttpl
add
push
dec
insl
and
mov
mov
stos
mov
adc
xchg
jns
aad
out
movsl
addr16
add
inc
divb
mov
mov
push
scas
pop
pusha
cwtl
or
arpl
clc
movsb
jae
or
pop
cwtl
jl
push
xchg
dec
loop
shlb
es
cmc
xchg
jmp
dec
pop
adc
sbb
xchg
das
shll
notl
adc
cs
dec
push
jae
std
sub
ja
sub
dec
pop
shll
xor
test
mov
or
adc
lcall
popa
xchg
adc
sbb
add
pop
sbb
faddl
sbb
jbe
mov
fmuls
sub
xor
or
fisttps
popf
cmp
xor
mov
fimull
push
mov
or
ret
cmp
jecxz
xchg
xlat
les
ljmp
outsl
inc
adc
js
or
jns
das
adc
hlt
jae
dec
out
stc
pop
push
dec
jmp
mov
pop
mov
adc
xor
and
or
jb
cmpsb
push
out
sti
fisttps
xchg
rcl
mov
or
xor
and
repnz
out
cmp
fistpl
outsl
jne
sub
and
inc
jl
dec
movsl
xor
in
sub
adc
sbb
xchg
dec
and
pop
xchg
xor
or
cmp
jnp
outsl
pop
mov
lcall
push
sbb
jmp
sbb
mov
shlb
cmc
jno
daa
call
mov
aas
cmp
movsb
pusha
mov
and
insb
aad
jecxz
sub
mov
fnsave
lret
movsl
mov
fcoms
nop
fimuls
xor
push
sbb
mov
into
gs
or
outsb
punpckldq
and
pop
jecxz
fbstp
push
mov
in
xor
cmpsb
cmpl
js
mov
dec
lret
fimull
mov
in
cld
adc
ss
pop
mov
dec
cmp
cmp
imul
dec
cs
sub
and
out
xor
push
imul
mov
cmpsl
lcall
sbb
enter
sahf
jl
movsb
call
mov
jae
xchg
add
ljmp
iret
movsl
push
lahf
std
mov
outsl
jns
dec
scas
pop
mov
in
adc
mov
sti
stos
add
loope
js
ljmp
shrl
adc
dec
cmpxchg
xchg
cmp
sbb
cmp
sub
inc
rdmsr
fildl
push
ror
test
lock
fisubs
ljmp
and
shl
arpl
outsl
jp
clc
out
gs
and
out
sar
or
dec
sub
cmp
pusha
adc
xor
pop
mov
add
mov
inc
inc
sub
out
push
in
cmc
in
pop
sbb
in
lret
dec
notl
les
cmpsl
aas
lahf
push
ljmp
or
mov
enter
lods
push
dec
mov
jbe
lods
and
enter
or
push
add
fidivl
xor
mov
inc
cli
mov
repnz
add
rorl
xor
jb
lds
rcrb
add
fsub
pop
mov
mov
xchg
sub
sarl
inc
mov
inc
adc
xchg
pop
adc
hlt
adc
movsb
sahf
add
call
jecxz
mov
fstpt
sarl
mov
mov
fisttpll
mov
cld
lea
sbb
add
xor
dec
sti
movsl
sbb
sahf
cwtl
cmp
stos
mov
adc
lds
xor
fstps
ret
pushf
push
repnz
nop
mov
js
popf
jp
push
in
and
adc
pop
and
sbb
mov
xchg
add
xchg
or
cs
push
mov
paddsw
aaa
mov
jl
and
jp
dec
mov
mov
mov
xorl
dec
xor
push
divb
jae
mov
xchg
cmp
fs
aas
aad
mov
sub
popl
fisttps
sub
clc
test
lea
int
and
jb
pop
inc
ret
iret
fmulp
xchg
icebp
xchg
addr16
mov
xchg
dec
xchg
shr
clc
inc
xlat
xor
testl
dec
dec
jae
sbb
mov
add
mov
cmp
lods
icebp
addr16
push
push
loop
sbb
aam
mov
add
ss
jnp
cmp
mov
loope
hlt
xchg
test
pop
adc
and
jo
pusha
and
movsl
fiadds
shlb
pop
jecxz
xor
aaa
xchg
jno
jne
movsb
rcl
iret
ljmp
adc
sbb
insl
aas
pop
insb
jnp
push
loop
scas
pop
cmp
std
sahf
lock
lahf
xor
and
inc
and
mov
ljmp
pop
sbb
cmp
mov
icebp
push
or
std
or
inc
jg
cmc
mov
pop
arpl
push
pop
pushf
xor
sub
adc
enter
xlat
dec
sub
insb
scas
rcrl
cld
or
repnz
mov
pusha
imul
test
mov
out
ja
or
fs
pop
cld
push
out
test
sub
icebp
out
pusha
int
sbb
cltd
ret
fsubrs
out
dec
dec
cmpsb
cmpb
mov
cmp
hlt
ret
push
inc
push
xchg
pushf
icebp
fisubrs
add
xor
fnstenv
sarl
push
test
outsl
adc
xchg
xchg
pop
lods
insb
push
fucomi
mov
and
loopne
dec
sub
jne
inc
add
xchg
push
lcall
clc
pop
divb
out
dec
mov
mov
add
xor
dec
jno
sub
leave
les
cli
add
xchg
notl
ss
xchg
rcr
mov
lock
psubw
xchg
dec
inc
scas
in
lock
xchg
arpl
cs
xor
test
out
push
push
cwtl
out
sahf
into
sbb
mov
icebp
mov
lds
sub
adc
fadds
aas
mov
pop
in
push
adc
fdivs
jo
add
ftst
cmp
pop
ja
les
dec
pop
aam
cltd
clc
push
les
pop
mov
shr
xor
test
scas
inc
iret
dec
aas
fucomi
lcall
push
dec
xchg
jge
add
jle
dec
movsl
idivl
ja
fisubrs
mov
scas
inc
dec
push
mov
adc
aad
pusha
inc
mov
dec
popa
cmp
and
jb
in
xor
xchg
inc
pop
lods
popf
pop
pusha
jnp
or
inc
rcrb
cmpsb
andb
xchg
xchg
xchg
push
cwtl
push
pop
mov
pop
int3
test
xchg
stc
mov
pop
xchg
fsubl
inc
add
rcrl
adc
nop
pusha
js
cmpsb
daa
dec
mov
jbe
and
jbe
push
or
jns
push
mov
xchg
mov
mov
mov
popa
ljmp
or
push
push
shlb
ficoml
insl
ljmp
pusha
mov
and
dec
sub
or
loop
addl
call
fadd
lret
mov
ds
sub
adc
idiv
in
aaa
push
xchg
adc
arpl
add
sbb
push
add
fistl
bound
js
cld
pop
lods
or
add
sub
ds
aad
cmc
jne
fcoms
repnz
daa
addl
mov
sbb
into
ficoml
popa
add
dec
or
adc
sbb
mov
sahf
test
add
std
push
dec
mov
sbb
add
jp
jg
addb
daa
test
push
pop
stos
dec
xlat
pushf
mov
pushf
ljmp
rcr
jg
add
pcmpeqw
and
cmc
mov
push
les
test
sbb
test
pop
sub
rolb
fadds
xchg
movsb
out
lods
sub
mov
hlt
fildl
add
mov
and
movsl
testl
pusha
adc
pusha
inc
out
je
sub
jg
call
sbb
push
shr
icebp
cmp
jl
push
pop
aas
lahf
fcmovb
in
or
xchg
mov
aaa
mov
out
and
daa
scas
gs
push
ret
and
cli
movsw
inc
ret
insb
lea
add
xchg
adc
add
cli
test
or
push
mov
mov
aas
fmuls
push
xor
cld
xor
mov
push
loop
mov
mov
cltd
fnstsw
sbb
clc
ret
jae
std
xchg
mov
addl
adc
and
add
std
sub
xchg
add
pop
shl
xchg
outsl
mov
out
adc
xor
cmp
xor
mov
popf
imulb
repz
in
out
in
insl
rcll
cmp
loope
test
xor
lahf
xchg
or
and
cmp
mov
fistpl
mov
shll
ficoms
push
mov
inc
mov
jp
or
sub
lcall
xchg
inc
push
aas
iret
fs
addr16
pop
fcmovbe
xor
mov
insl
fldenv
shlb
sub
and
sbb
roll
ja
xor
cmp
loopne
frstor
pop
cs
pop
cmp
mov
cltd
test
jle
sub
subl
adc
enter
pusha
les
test
nop
adc
sub
mov
lea
ficompl
sub
scas
inc
andl
mov
loope
mov
into
jmp
and
and
arpl
shrb
jmp
cmpsb
add
addr16
jg
jae
jge
jle
ret
outsl
popf
inc
in
lret
leave
inc
je
xchg
lea
lods
stc
pop
lret
test
popf
jo
jecxz
dec
pop
fwait
push
xlat
js
out
dec
adc
mov
leave
push
inc
pusha
xchg
dec
leave
sbb
cltd
or
or
xor
popf
jne
ljmp
xor
mov
dec
ljmp
jecxz
mov
mov
sbb
inc
cmp
or
scas
fnsave
rcll
test
xchg
push
push
sbb
ss
push
fmuls
mov
dec
xor
ficompl
or
or
or
cmp
ss
mov
sub
testb
int3
loopne
xchg
std
nop
repnz
jbe
imul
inc
xchg
push
mov
mov
cld
adc
xor
test
cmp
mov
test
call
aaa
and
je
lcall
insb
lret
shlb
es
push
movsl
xchg
pcmpeqb
add
rcrb
cmp
jno
jb
pop
inc
or
jnp
sub
xchg
loop
adcl
cmc
and
imul
sbb
scas
dec
mov
sahf
sbb
mov
mov
add
mov
cli
mov
jg
mov
pop
nop
sub
aaa
mov
loope
lahf
pop
out
scas
jmp
test
loop
jo
jmp
jmp
les
sarb
or
pushf
das
jne
sub
add
cmp
jmp
dec
inc
cld
cs
mov
sub
pusha
push
jmp
pop
or
jle
adc
dec
or
popf
aad
pop
mov
ds
scas
cmp
pushf
sbb
ret
pop
arpl
ret
mov
cmp
test
cwtl
lods
mov
aas
sti
repnz
jle
cmp
lea
decl
dec
mov
ret
mov
mov
push
fwait
mov
push
xchg
pop
data16
pop
mov
dec
adc
dec
nop
das
loop
xchg
sbb
and
das
cmpsl
add
cltd
mov
sbb
dec
cmpsb
adc
push
sahf
xchg
push
jle
int3
dec
stos
push
and
pushf
jl
push
add
cmpsb
push
add
xor
dec
lret
mov
lods
pop
dec
cmp
jecxz
aam
je
or
dec
or
sti
sbbl
and
jbe
test
sub
lock
repz
pop
call
sub
test
fnstenv
push
aaa
jns
jb
test
repnz
sub
jle
mov
xchg
dec
xchg
test
cmp
adc
or
jbe
mov
cmp
mov
sbb
and
call
adc
les
mov
lods
mov
mov
add
dec
into
pop
shlb
repz
jecxz
lods
pop
std
jo
mov
mov
xor
mov
xchg
mov
iret
daa
adc
mov
dec
jecxz
or
daa
and
mov
add
in
xor
and
mov
iret
mov
dec
push
std
mov
push
notb
frstpm(287
gs
lea
popf
push
stos
xor
ja
sub
mov
push
insb
mov
js
jae
or
push
lods
mov
lods
sbb
movsb
adcb
mull
adc
rcrb
pop
movsl
xchg
cmpsl
add
cld
leave
scas
inc
jnp
stos
push
in
inc
out
sbb
enter
push
iret
and
push
and
in
stos
push
loop
mov
arpl
stos
or
push
mov
rcll
pop
dec
loope
aam
test
inc
add
xor
mov
jae
sub
xchg
arpl
clc
bound
insl
das
out
fwait
stc
mov
icebp
fmuls
or
jmp
add
xchg
push
imul
mov
hlt
xchg
stos
jb
shlb
dec
mov
push
jno
loope
cli
test
ljmp
push
pusha
lret
xchg
outsb
pop
scas
push
xchg
mov
fldln2
dec
fucomip
std
cwtl
pop
ljmp
jbe
fucomi
jle
push
mov
jbe
out
xchg
adc
in
mov
jns
pop
inc
xor
push
mov
jp
cwtl
mov
pop
popa
push
add
jge
push
dec
ret
ss
shll
ss
icebp
mov
aas
xor
adc
std
out
outsl
mov
mov
mov
mov
sbb
xchg
nopl
mov
add
jne
mov
dec
fmuls
or
inc
inc
scas
into
push
out
jns
repz
push
orb
shll
pop
push
dec
mov
adc
mov
stos
pop
daa
cmc
xchg
test
mov
fs
xchg
lods
xchg
adc
push
shll
or
lcall
rcrl
xchg
sahf
aas
and
mov
xchg
jo
nop
jbe
jl
jb
in
sbb
aam
in
mov
divb
push
sbb
add
jl
lock
sbb
sub
sbb
in
mov
push
and
mov
push
hlt
test
xchg
push
in
outsl
cmp
mov
fadd
inc
in
inc
lcall
push
test
js
adc
aad
test
inc
sub
popa
and
popa
cmp
mov
hlt
adc
flds
sbb
xor
je
cmpsb
jge
jmp
mov
xchg
xlat
and
jmp
and
fsub
sub
sbb
mov
int3
cmp
movsl
sbb
lcall
mov
sub
add
dec
aad
aad
xacquire
push
leave
mov
push
or
push
mov
mov
add
jne
inc
jecxz
pop
rclb
fcomps
out
lret
or
cwtl
xchg
jmp
popa
dec
cmpsb
and
jmp
jno
jl,pt
mov
test
std
mov
pop
les
jp
pop
pop
push
ja
icebp
loopne
xchg
in
mov
inc
xchg
push
jae
in
jl
sarb
xor
push
push
adc
push
dec
inc
insl
add
push
push
inc
and
fldenv
push
insl
jne
movsb
popf
mov
mov
pop
int
inc
add
mov
cmpsb
outsb
sbb
mov
in
sub
pop
out
fs
nop
stos
or
clc
and
lock
cmp
pop
or
cmc
sbb
sti
xchg
arpl
fadds
jbe
imul
mov
outsb
mov
stos
cmp
mov
jno
and
mov
arpl
xchg
nop
dec
in
stos
dec
call
sahf
and
inc
cmp
mov
iret
mov
adc
or
and
cmp
sbb
adc
fdivp
out
xchg
push
push
orl
or
adc
decb
aam
mov
repz
lea
inc
out
add
imul
mov
add
dec
rolb
xchg
stos
xor
stos
fsubl
push
cmpl
jl
ja
sbb
pusha
inc
int
addr16
push
arpl
mov
adc
mov
xchg
add
aaa
daa
jl
lea
adc
pushf
pop
push
adc
inc
data16
pop
push
aam
and
fwait
imul
clc
lret
loopne
in
jmp
xchg
lock
sti
sbb
jg
pop
lods
jl
sbb
insl
ss
jns
sub
stos
xchg
movsb
daa
imul
xorb
out
xchg
movsl
dec
mov
mov
sub
fldcw
cmp
dec
cs
out
iret
cmp
cmp
mov
push
es
push
pop
xlat
pop
mov
jbe
mov
hlt
add
push
fisttpl
jecxz
out
push
and
mov
sub
jg
or
and
fwait
pop
cmpsb
roll
mov
adc
mov
push
cld
movsb
aaa
popf
dec
mov
dec
or
adc
dec
xorl
add
fnstsw
cmp
aas
sub
and
dec
or
lret
push
ficompl
xchg
sbb
mov
or
push
jg
and
or
std
repz
mov
jns
jp
push
lcall
inc
and
inc
add
addl
shlb
stos
pop
lcall
mov
inc
or
les
das
push
jmp
dec
mov
mov
mov
imul
pop
rcl
imul
inc
dec
rcrw
pusha
cmp
add
cmp
in
scas
cmpb
add
ljmp
xchg
divl
sbb
testl
xor
mov
ret
cmp
test
mov
cwtl
fwait
mov
adc
adc
push
mov
mov
xor
mov
imul
cmpb
shrb
jmp
iret
lods
movsl
out
push
les
mov
mov
int3
jns
es
rcrl
and
adc
push
add
push
fadds
icebp
xor
cmp
jno
or
aas
bound
sbbb
sbb
cmpb
sub
daa
shlb
inc
jecxz
inc
inc
xchg
push
xor
dec
lret
aam
push
inc
sbb
aad
jmp
adc
dec
mov
jl
inc
jo
adc
loope
pop
popa
cmp
sbb
add
icebp
js
dec
call
sbb
or
cld
mov
mov
lahf
mov
or
lea
jno
xchg
rorl
insl
pop
cwtl
pop
outsl
dec
push
fucom
fcoms
xor
ja
pop
xor
shl
add
int
lret
cmp
insl
add
or
sub
scas
fistl
ljmp
jne
xor
repz
mov
loopne
rcrb
call
xchg
jecxz
jp
mov
retw
mov
sti
sbb
mov
int
scas
mov
push
jbe
or
push
fsubl
push
clc
adc
pushf
dec
daa
imul
fildl
pop
je
iret
and
shl
gs
call
in
cmp
jno
inc
mov
mov
hlt
mov
mov
ljmp
pop
jbe
fsubs
int3
rcr
movsb
jp
xor
and
adc
int
adc
mov
or
jge
rorl
sbb
xchg
stos
loop
push
stc
in
mov
popa
inc
cmpl
nop
enter
sti
stos
or
xor
pop
fs
outsl
bound
jns
js
insb
push
xor
int3
jno
cmp
popf
dec
push
mov
add
inc
cli
mov
das
mov
cld
cmpl
pop
add
loopne
add
xchg
lods
pop
add
push
and
inc
out
or
cmpsb
nop
or
lods
fistpll
push
dec
mov
mov
xor
sbb
outsb
add
dec
lcall
imul
loopne
dec
mov
push
stos
sub
sub
cmpsb
ljmp
fdivs
in
int3
mov
push
daa
mov
mov
or
mov
out
jo
out
subb
mov
cmp
aas
mov
sbb
push
in
cmpsl
dec
and
std
in
jne
mov
mov
pop
and
mov
fwait
xor
popa
sbb
sub
inc
dec
xor
pop
add
movsb
in
mov
sbb
mov
sbb
or
ljmp
xorl
popa
in
out
nop
push
std
cmpsb
iret
inc
hlt
add
mov
pusha
stc
and
pop
pusha
push
push
pop
pop
aam
cmp
imul
lret
inc
pop
aam
push
jecxz
mov
jp
out
jge
ret
xor
and
cld
cli
push
ja
sub
sub
lahf
sbb
arpl
add
out
sbb
cmp
stos
fildl
inc
mov
bound
mov
mov
push
cmovno
mov
mov
movzwl
call
out
pop
cli
push
fldlg2
aad
inc
lock
es
xorl
mov
push
mov
sbb
push
fcompl
std
dec
dec
add
movsb
add
adc
hlt
cmpsb
dec
pop
outsb
xchg
fcompl
adc
je
adc
xchg
in
jb
pop
pop
decl
mov
jmp
in
and
adc
xchg
ljmp
adc
xlat
iret
es
xchg
movsl
push
loop
pushf
repnz
insb
adc
lock
xor
sub
mov
jbe
jl
xchg
or
push
xor
inc
mov
xor
outsl
cld
pop
xchg
lds
pop
add
divb
test
repz
pop
mov
dec
and
push
incl
cmp
mov
inc
shll
adcl
pop
mov
jb
loope
push
pop
sbb
arpl
push
or
nop
bnd
faddl
out
mov
push
cmp
out
mov
fldcw
mov
ds
in
mov
scas
repz
xor
clc
jne
hlt
cltd
lcall
and
sub
fcomi
xor
pop
out
xchg
cmp
add
fmuls
push
mov
stc
setno
mov
in
in
mov
fisubl
enter
jle
add
push
push
or
adc
not
adc
rcrb
inc
ljmp
imul
mov
stos
iret
xchg
lahf
test
lcall
sahf
sub
lahf
lods
cmp
sbb
scas
cltd
ret
ds
cmp
sub
jg
xor
xchg
test
pop
popf
int
mov
out
in
sub
sbb
mov
jmp
ljmp
sub
dec
jae
cmpsb
mov
arpl
push
inc
mov
stos
adc
or
mov
push
cld
push
xchg
sub
sbb
stos
inc
push
test
jp
out
cmp
fstps
jnp
andl
inc
sahf
mov
mov
add
push
movsl
cltd
inc
jmp
jl
cmpl
xchg
jmp
pop
jl
and
sub
gs
and
stc
add
sahf
jno
mov
sbb
or
movb
xchg
pop
dec
or
and
or
pop
sub
insl
aad
hlt
loop
xchg
fstl
in
push
or
mov
pop
bound
cmp
leave
pop
mov
push
mov
enter
out
insl
pop
std
xor
rdpmc
cwtl
jl
in
mov
sti
scas
jp
adc
mov
out
adc
adc
sub
cmp
nop
scas
inc
insb
faddl
push
dec
cwtl
inc
jmp
lret
mov
push
ret
mov
ss
dec
and
jl
mov
sbb
loope
xorl
xchg
in
cmpsb
mov
jge
mov
mov
cltd
insb
mov
shll
and
repnz
insb
aas
adc
push
les
cmp
je
jge
aaa
push
out
lods
xor
fdivrs
stos
sub
push
mov
int
jg
imul
mov
out
push
rol
adc
push
xor
dec
in
cmp
popf
xor
negl
lds
pop
dec
dec
xchg
stc
inc
jl
mov
stc
sbb
ret
inc
int
mov
add
add
adc
lods
mov
jge
cmp
and
push
dec
xor
jmp
enter
xchg
jae
xor
in
fisubrl
shrb
push
fidivrs
std
mov
mov
add
aam
push
shrl
nop
movsb
sub
outsl
shlb
sub
scas
test
aad
jp
xchg
insl
pop
mov
jb
out
cld
js
aad
pop
aas
inc
push
cs
out
lret
popf
inc
faddl
mov
sbb
jns
cmp
adc
loop
push
jns
or
inc
jno
testb
xchg
sbb
xor
and
add
xor
lahf
jne
subb
lds
stos
dec
ljmp
cmpsb
fnstenv
mov
insb
dec
push
dec
fnstsw
lods
ror
outsb
inc
popa
andl
sbb
jle
inc
mov
pop
test
cmp
and
adc
jp
divb
inc
std
fdivrp
mov
jno
iret
sub
mov
xchg
test
test
into
in
push
enter
pop
mov
gs
mov
sbb
xor
or
jno
inc
jle
add
outsb
dec
ds
mov
cwtl
idivl
jae
gs
dec
idivl
and
add
sti
inc
mov
lods
in
imulb
mov
dec
mov
fidivrs
arpl
xchg
mov
and
push
insb
sahf
xchg
pop
push
bound
subl
jecxz
dec
or
cltd
mov
xchg
jae
cmpsl
sub
es
rcl
sbbl
mov
andb
test
jge
popa
push
xchg
xor
jb
repnz
jo
add
xchg
mov
lret
mov
lds
inc
push
or
fstpt
nop
clc
jge
add
sbb
mov
pop
xchg
fstpt
test
inc
mov
mov
bound
xchg
ss
jmp
ficomps
lcall
clc
push
jl
jecxz
leave
mov
jge
dec
sub
push
adc
cmpsl
pop
cltd
push
fstpt
xchg
xchg
cmp
or
cmp
fbstp
xchg
test
fwait
inc
leave
dec
int3
xchg
xor
loope
repnz
mov
or
bound
ja
addr16
sbb
loope
and
aaa
ja
scas
js
adc
bound
ds
xchg
rep
icebp
and
test
push
inc
aas
mov
dec
arpl
add
jge
lods
xchg
jns
and
aad
mov
sarl
xchg
push
lock
test
stos
mov
std
in
cltd
jle
std
loop
shrb
adc
loop
mov
xchg
dec
fcompl
sbb
inc
pop
stos
je
push
jl
negb
adc
pop
jecxz
loope
pop
push
out
or
lcall
pop
dec
push
out
mov
popf
push
fstl
adc
outsb
lahf
cmp
jp
fwait
jbe
jbe
cmp
jmp
dec
into
das
dec
xchg
stc
mov
add
xchg
iret
cs
mov
and
adcl
push
jns
lcall
pop
jmp
mov
mov
dec
fimull
jb
fcomps
shlb
cmp
mov
mov
stc
fsubrl
call
xchg
mov
mov
xchg
rolb
inc
jecxz
in
lea
daa
xorb
loopne
dec
xlat
inc
ret
sysexit
iret
rcrl
push
cmp
imul
add
inc
lods
aad
idivl
movsb
and
lret
jmp
adcl
pop
jb
dec
push
xor
cmp
push
pusha
fstpt
fxch
mov
push
sub
mov
nop
sub
jl
dec
adc
test
lds
inc
ret
push
test
fidivs
sub
push
push
pushf
fdiv
aas
add
adcb
pusha
pop
sub
repz
or
aaa
adc
fisttpl
adc
bound
push
dec
lret
mov
ss
dec
jmp
imul
dec
xor
sub
or
dec
xchg
jae
mov
outsb
sbb
push
and
bound
lret
inc
ret
les
and
in
xchg
jmp
fcompl
mov
imul
shlb
das
scas
jecxz
int
outsl
sub
sbb
push
sbbl
lods
jmp
adc
cmc
fmull
inc
jl
xchg
cmp
or
mov
clc
negl
enter
ret
js
dec
scas
mov
mov
adc
scas
out
jmp
lds
jns
push
pop
dec
dec
and
and
out
insl
mov
in
or
out
cmp
jp
mov
dec
and
xor
pop
push
jno
jp
out
out
lahf
mov
cmp
push
mov
sahf
int3
imul
pop
mov
aad
sbb
jb
sahf
mov
jnp
xchg
xor
sti
mov
in
in
shrl
loope
cltd
mov
mov
mov
inc
jmp
test
in
xchg
and
pushf
rcl
mov
pop
mull
scas
xchg
pusha
or
add
fimull
out
and
jbe
jecxz
push
ds
repnz
dec
mov
mov
mov
and
adc
sub
les
jl
ss
mov
scas
testl
xchg
mov
aam
ss
push
mov
rol
cmpsl
push
shlb
cli
incl
into
aad
pop
outsb
mov
decl
andl
jmp
push
mov
xchg
je
sbb
cwtl
add
cmpl
xchg
scas
clc
jae
out
cmp
scas
push
and
std
loop
inc
push
xor
dec
sub
mov
je
shrb
mov
dec
mov
aad
pop
sub
push
nop
xchg
ds
sub
cmpsb
scas
pop
inc
mov
je
js
add
mov
push
push
ret
sub
add
jmp
out
add
push
cmp
mov
bswap
gs
mov
jle
mov
sti
jle
mov
dec
sar
and
jae
and
scas
lea
out
pushf
cmc
and
mov
mov
ljmp
or
fdivs
int3
fdivr
mov
and
test
lds
xor
ds
std
jae
or
popf
repz
bound
into
mov
push
leave
stc
push
jp
xor
std
leave
repz
mov
inc
in
cmp
cmp
shrb
inc
ja
or
movsb
leave
push
mov
or
out
xor
fistpll
or
rcrb
lcall
ja
lods
stc
in
cltd
add
mov
xor
sub
xchg
lock
jp
pusha
fs
inc
xor
dec
push
clc
push
mov
mov
push
pop
inc
xchg
adc
enter
pop
ja
pop
int3
sbb
fdivl
xor
pusha
xor
xchg
out
and
shll
xchg
add
adc
addl
push
pushf
ljmp
pop
ljmp
test
imul
or
insb
daa
and
ret
jmp
push
adc
or
xchg
int3
pop
cmp
leave
cmpsb
loop
daa
jl
add
sbb
cmpsb
dec
xchg
jne
out
dec
push
mov
lea
sbb
nop
cmp
cmpsb
sarb
ds
adc
mov
pop
push
lds
inc
xchg
leave
push
adc
cmc
pop
mov
sahf
repz
mov
pop
fildl
mov
mov
xchg
xor
imul
bound
mov
out
inc
mov
jmp
pop
dec
ds
push
jecxz
fldt
testl
mov
pop
mov
xor
sub
and
loopne
mov
es
scas
xchg
push
jnp
ds
aas
mov
movsl
sub
das
inc
call
push
sbb
and
cmpsl
push
scas
jae
data16
push
xchg
mov
imul
xor
dec
xchg
in
adc
std
or
mov
jb
in
dec
dec
xor
push
fimull
pop
pushf
loopne
or
mov
jl
je
or
mov
clc
sub
stos
mov
rolb
cmc
and
lock
mov
jb
shrl
ja
push
mov
subb
fcompp
movsb
aas
and
mov
push
cmpl
shll
push
icebp
in
ret
sbb
cmp
ds
cmp
sarl
push
cmp
jno
mov
shl
mov
int3
shlb
mov
mov
mov
out
pushf
lcall
pop
dec
loop
arpl
daa
mov
adc
jnp
lods
cmpb
imul
jle
dec
cmp
ja
and
int
and
aam
sahf
hlt
add
pop
roll
sbb
arpl
cmp
mov
imul
ja
cmp
xchg
ud1
scas
push
out
sub
inc
inc
dec
clc
cltd
inc
std
mov
push
mov
jmp
popf
add
int3
dec
push
movsl
daa
xchg
cmp
mov
push
pop
dec
cmp
nop
les
int3
jg
aam
fcmovnbe
push
xchg
and
lods
inc
push
dec
or
or
jecxz
cmp
pop
pop
push
push
jno,pt
dec
stos
inc
fsts
and
push
and
xchg
mov
mov
push
out
mov
loopne
icebp
insb
push
and
pop
js
test
add
jbe
pushf
dec
sub
pop
fcoml
inc
insl
jmp
dec
mov
pop
mov
daa
clc
andl
movsb
or
push
mulb
call
mov
push
mov
add
sub
data16
jge
cmp
mov
test
mov
cmp
out
sbb
mov
xlat
mov
xchg
lea
mov
and
cli
xlat
pushf
pop
mov
xor
jne
jl
mov
lahf
adc
inc
popf
out
jns
sub
movsb
jecxz
nop
add
in
xor
lret
dec
mov
int3
out
outsb
stc
sbb
mov
xor
cs
pop
enter
fisttpl
jno
sbb
xchg
mov
or
es
mov
dec
pop
fisubs
fcmovu
jecxz
mov
je
cld
push
add
push
je
enter
push
add
push
test
adc
jg
xchg
or
dec
in
add
mov
xchg
xchg
push
inc
push
xchg
mov
or
xchg
pop
xchg
xor
mov
inc
call
sbb
xlat
add
orl
repz
mov
dec
cmp
dec
mov
lret
mov
aam
sub
aad
inc
mov
sbb
out
int
addr16
rcrb
ss
js
xor
outsl
push
popa
mov
inc
jns
in
add
add
cmpsl
xchg
push
inc
dec
iret
xorb
adc
insb
je
call
shl
push
imull
jl,pn
jns
dec
push
aas
sbb
and
in
mov
and
mov
js
mov
iret
lahf
into
or
sbb
push
mov
sub
inc
push
xor
mov
inc
mov
xchg
xor
and
es
movsl
cli
cs
stos
mov
cmpsb
ljmp
addr16
cltd
icebp
xlat
mov
lahf
call
and
add
lea
pop
cmpsl
or
xchg
pop
lods
in
test
in
dec
fsubr
mov
mov
or
loope
pop
pop
lods
xchg
outsb
and
jg
stc
loop
insb
push
insb
add
push
int3
out
jmp
mov
add
lret
sti
cmp
imul
push
roll
loope
xchg
lret
inc
out
sbb
lock
insb
out
or
lret
add
dec
ja
add
cmp
cmp
mov
imul
push
inc
add
mov
nop
mov
xchg
push
loope
test
pop
dec
lcall
fwait
xlat
testl
les
pop
mov
lcall
addl
cli
lret
sub
into
pushf
mov
repnz
das
mov
pop
movsl
add
and
adcl
mov
les
and
data16
imul
gs
push
popf
lock
lds
es
rcrb
cmpsb
xor
mov
cmpsb
in
pushf
mov
or
adc
jne
xlat
mov
gs
insb
dec
xor
cmp
adc
lret
iret
cmp
mov
aaa
fsubl
xor
test
push
xchg
lcall
mulb
loope
add
mov
bound
jmp
lcall
and
orb
add
je
adc
cmovnp
insl
push
lock
gs
sbb
xlat
ss
pushf
jnp
rorb
inc
sbb
loopne
into
and
push
mov
add
fidivrl
shl
jmp
enter
data16
cmc
int3
es
fwait
scas
mov
lret
or
movsl
lock
pop
add
pop
add
arpl
jge
pop
add
mov
pop
fnstsw
inc
adc
xchg
fwait
cmp
dec
sbb
adc
pop
out
std
out
xor
push
insl
addr16
push
in
lds
or
mov
and
pop
leave
icebp
lret
dec
cmp
divb
js
gs
pop
jg
push
xchg
push
sub
cmpsl
clc
es
rcrl
shrb
sti
cmp
int
ret
and
cmpl
cld
packuswb
scas
andl
dec
aaa
adc
out
push
inc
push
push
fisttpl
or
leave
shrl
std
jecxz
icebp
jno
cltd
lods
ret
scas
jp
xchg
dec
jb
jae
xacquire
lret
xchg
ret
dec
or
fst
xchg
sbb
and
cs
fadds
pop
push
add
mov
in
jnp
icebp
push
cltd
xchg
adc
outsb
pop
inc
or
sbbl
dec
rolb
mov
dec
cmc
imul
inc
outsb
pop
aas
sbb
xchg
pop
shl
or
in
aas
or
les
das
and
lods
cmc
cwtl
outsl
mov
out
lods
pop
sub
bound
cmp
roll
and
sub
lcall
fldcw
rclb
mov
inc
das
lret
sbb
sahf
cmp
inc
dec
dec
add
push
add
or
pop
mov
fistl
adc
lcall
sbb
push
jbe
stos
loopne
cmpsl
or
aad
jecxz
cmp
sbb
mov
das
in
mov
cmp
addr16
push
les
aam
loope
incb
test
and
sub
aam
mov
jl
mov
sub
rclb
pop
gs
xorl
xor
pop
outsl
stos
test
test
jle
jae
dec
xlat
lret
and
xor
push
xor
mov
test
aad
push
sub
push
aad
mov
adc
pop
mov
jae
mov
jge
mov
mov
inc
and
push
mov
or
add
jg
jecxz
xchg
loopne
gs
or
mov
popa
imul
test
out
cmp
jmp
mov
stc
sub
adc
outsb
lahf
es
mov
xchg
mov
push
dec
xlat
xchg
pusha
push
and
adc
dec
flds
jnp
pop
ret
std
xor
test
dec
fidivrl
cmp
ret
pop
loopne
in
pop
call
dec
or
popl
ljmp
dec
imul
mov
jle
jae
sbb
mov
lock
aam
add
insb
and
test
inc
insl
sti
add
cmp
ret
mov
or
inc
mov
int
xchg
push
pop
scas
bnd
jle
popa
lods
mov
add
cmp
xchg
aad
push
xor
adc
jge
ja
lcall
cmp
notb
cmc
dec
pop
outsl
sub
xor
js
test
lds
dec
xchg
nop
sbb
pop
mov
jns
cmp
mov
test
push
xchg
cmp
mov
in
inc
fdivs
shlb
mov
inc
sbb
mov
out
and
mov
dec
popf
adc
jnp
fs
movsl
insb
sub
mov
jno
xchg
ja
clc
inc
jb
jne
arpl
and
sbb
scas
sbb
rclb
and
loope
xchg
dec
sbb
out
cmp
cli
pop
pusha
cmp
pop
xor
and
fprem
shrb
xor
jge
cmpb
xchg
lahf
inc
pop
fiaddl
cmp
out
sbbl
adc
aas
mov
xchg
fwait
pop
xor
mov
pop
lods
sub
mov
sub
out
dec
fldl
push
xchg
pushf
mov
sub
out
dec
jge
or
sbb
push
xlat
pop
inc
ror
dec
xor
scas
test
lcall
loop
ljmp
lods
mov
xchg
sar
and
test
lods
cmp
inc
lock
mov
hlt
in
test
xchg
xor
mov
xor
fwait
pop
cmpsl
int
jmp
cli
lods
lods
push
push
push
jle
or
jge
aad
sbb
call
xor
aas
mov
adc
fsubl
fmulp
jmp
lea
idivl
test
popaw
cmpsl
movsb
xchg
fcompl
sbb
pushf
or
mov
dec
jg
cmp
jg
dec
int3
push
sub
test
lds
ret
jb
mov
test
ljmp
pop
xchg
jbe
inc
inc
mov
shrb
loopne
call
jns
xchg
push
jp
scas
inc
push
lret
scas
or
push
sbb
ja
pop
lds
fnstcw
out
xor
es
in
mov
repnz
or
outsl
psadbw
leave
push
push
xor
pop
test
mov
or
cli
das
mov
push
jbe
aad
aam
nop
lock
inc
test
pop
test
leave
add
aaa
cmp
and
icebp
mov
jno
filds
test
lock
or
add
and
sbb
xchg
xchg
jo
lods
aaa
mov
icebp
adc
mov
lods
rorb
scas
mov
sub
loope
push
addr16
sub
int
divb
test
sbb
fists
mov
xor
nop
jae
fs
test
je
stos
into
mov
inc
or
dec
test
cmpsl
cwtl
fistl
mov
push
scas
cltd
sub
daa
push
pop
xor
cli
rclb
mov
pop
adc
and
testb
subl
cmp
push
clc
out
loopne
pop
sbb
pushf
dec
add
xlat
rorl
push
sahf
lret
adc
push
pop
addr16
jle
in
mov
call
ret
cwtl
int
popf
xchg
mov
add
dec
add
adcb
daa
hlt
add
pop
jmp
add
outsb
sbb
mov
lcall
int3
mov
adc
jne
jns
movsb
sbb
lock
mov
rclb
int3
sbb
addr16
insl
adc
mov
jns
adc
sbb
les
out
jmp
adc
xor
jnp
adc
addb
insb
xor
lcall
cld
fisubs
sahf
xchg
ljmp
pop
fs
fcmovnu
lret
jne
gs
cmc
loopne
pop
fisttps
add
movsb
mov
jl
or
ja
ficomps
out
lahf
mov
xlat
lock
das
pop
cmp
dec
mov
incl
jg
mov
nop
cli
mov
mov
pop
insb
mov
mov
adcb
pop
loop
xchg
push
es
dec
iret
int3
cmpb
in
dec
sti
pop
cmp
mov
fcomps
mov
lahf
sub
fdivrp
push
js
in
nop
imul
sarb
sub
mov
xchg
rorb
sbb
aam
or
repnz
mov
fisttpll
mov
jmp
lods
xchg
ds
mov
xlat
test
sub
or
popf
xor
fcompl
adc
out
insb
lock
mov
sbb
cmp
jg
stc
mov
xchg
pop
xchg
push
push
add
pop
or
adc
imul
std
mov
stos
outsb
mov
or
or
cmp
sub
fidivrl
fsts
arpl
lahf
lcall
roll
mov
scas
add
into
mov
cld
sbb
mov
int
mov
xor
hlt
arpl
popf
xor
pushf
int
dec
notl
jmp
cmc
iret
mov
call
inc
cs
lods
lahf
cmp
xchg
pop
fs
imul
hlt
sbb
out
loope
cmp
mov
filds
jo
movsl
stc
outsb
mov
and
push
xor
ljmp
les
stc
sbb
nop
pop
sahf
pop
cmp
or
push
fistpl
xchg
aas
dec
sti
push
push
rcll
decb
mov
movsl
mov
jge
into
jno
bound
sub
inc
pop
sti
std
push
outsb
sub
add
and
orb
out
and
sub
in
push
or
in
jb
insb
cwtl
outsb
ss
aaa
mov
push
popa
xchg
daa
xchg
rol
push
cs
aas
in
leave
xchg
scas
insl
test
dec
insb
jno
dec
and
mov
mov
cltd
shrb
inc
jp
mov
lcall
ficompl
ds
test
inc
out
jg
call
inc
into
mov
repz
lods
cld
and
mov
iret
cmp
cli
stc
fs
mov
sub
sub
inc
pop
lahf
push
add
aas
jnp
cltd
mov
sbb
ret
movsb
and
repz
ja
and
jmp
in
out
and
loopne
mov
inc
sti
or
int
cmc
mov
jb
sub
dec
cwtl
fs
test
or
mov
shll
shrb
fs
xchg
lods
push
mov
jp
pop
mov
int3
lret
inc
pop
sarl
test
adc
xor
enter
and
jae
lret
adc
ds
rorb
adc
addr16
add
mov
loope
inc
mov
das
push
and
das
shll
ds
stos
aam
jne
xor
sub
cli
inc
jl
imul
adc
sub
pushw
mov
mov
xchg
movsb
andb
dec
inc
imul
sub
pop
divb
xchg
push
xor
nop
jns
movsl
sbb
pushf
ja
lcall
ljmp
sbb
add
daa
scas
test
mov
sbb
psubusb
sub
ret
cmp
push
clc
add
cwtl
call
jecxz
lock
mov
inc
mov
cld
or
pop
and
inc
mov
pop
stos
out
test
sarl
std
or
xchg
in
mov
mov
or
lods
mov
movsb
das
addr16
test
mov
sub
out
mov
dec
mov
pop
sub
ja
mov
pop
xchg
and
imul
pusha
inc
aas
xchg
mov
or
cwtl
push
sub
mov
pop
pop
mov
push
test
xor
jnp
adc
test
xchg
xchg
sub
push
lcall
fldz
lea
movsl
pushf
clc
pusha
or
add
add
pop
mov
xchg
nop
adc
fs
fs
ljmp
popf
int3
jo
sbb
xchg
out
jo
pop
sub
jmp
inc
jne
icebp
add
add
adc
adc
inc
inc
scas
jmp
mov
mov
aaa
push
fcmovnu
mov
ror
cmpsl
xchg
cwtl
mov
jmp
ds
test
cmp
int
push
xor
lods
out
cmp
adc
or
divl
sub
shll
add
or
xor
cs
ljmp
roll
xchg
es
pop
or
shlb
std
loope
in
jmp
ds
leave
xor
inc
push
mov
inc
pop
test
jnp
pop
inc
mov
test
push
jae
pop
lahf
and
push
addr16
sbb
add
fwait
dec
push
sbb
xor
leave
inc
cmc
add
sub
and
dec
mov
push
loop
inc
xor
aam
xor
ljmp
cmp
outsb
jle
xchg
jmp
xor
fldt
rorb
aas
scas
jmp
sbb
into
xor
mov
sbb
adc
loopne
add
jp
divl
imul
jae
add
jns
xchg
dec
cs
mov
mov
add
scas
int3
out
andl
iret
xchg
or
sub
cld
fcompl
mov
fsubrs
or
idivl
mov
xor
not
push
add
popf
into
int
outsl
or
test
stos
mov
add
mov
fstps
jo
pushf
inc
mov
mov
xchg
or
mov
mov
xor
shrl
fbstp
filds
pop
lods
sahf
je
insl
jbe
add
dec
or
dec
cmp
stc
xchg
bound
aaa
cltd
popf
das
xchg
test
ja
sbb
jp
xor
xchg
es
adc
lock
ds
inc
pop
out
dec
insb
mov
pop
shll
mov
xor
in
lods
pop
nop
mov
dec
rorl
push
incb
cld
mov
stc
push
aas
popf
ficoml
add
fdivrp
mov
dec
dec
divl
or
mov
in
jl
pop
ss
imul
mov
push
mov
push
fwait
xchg
jl
cltd
sub
scas
dec
xor
and
inc
lahf
push
inc
sub
inc
cmpsl
inc
xchg
inc
aas
cltd
push
adc
clc
repnz
mov
rorb
cltd
enter
scas
ret
sbb
pop
or
jno
imul
bound
shll
jle
xchg
cmp
mov
fs
mov
and
jmp
fmull
fistpl
inc
test
push
leave
adc
jmp
cwtl
add
loope
lret
mov
cmc
and
xchg
nop
ret
lods
popa
test
xor
jne
test
push
jmp
and
push
or
lods
lods
jne
iret
inc
orb
add
xor
mov
xchg
inc
xchg
nop
outsl
scas
aad
mov
scas
ret
pop
adc
scas
jmp
pushf
mov
or
cmp
lods
ret
add
das
or
ret
mov
and
bound
mov
jmp
call
jge
jp
mov
mov
test
push
pop
int
icebp
ss
pusha
pop
pop
ret
in
fstps
cmp
sarl
cltd
inc
sub
and
lahf
outsb
and
jae
inc
hlt
jmp
cmp
push
gs
in
sub
cld
inc
fldenv
pop
test
incl
inc
push
dec
mov
jmp
jns
cs
mov
insb
and
fwait
test
in
jp
xchg
cld
mov
cld
mov
sahf
xchg
rol
stc
es
dec
arpl
fnstcw
pop
in
andb
mov
pop
stos
mov
cmp
sahf
ljmp
xor
adc
push
rcrb
mov
lret
je
js
int
cli
aad
pusha
and
inc
jmp
test
push
pop
fisubs
push
push
push
test
add
test
inc
xor
lret
adc
xchg
and
shl
and
cmc
cmp
test
pop
cmpsl
and
nop
test
inc
addr16
imul
sub
dec
sub
mov
adc
mov
popf
ds
fldenv
shr
or
xor
out
dec
xchg
sub
pusha
or
or
loope
sub
je
sbbl
cmp
bound
mov
pop
and
and
push
mov
mov
pop
mov
xchg
pop
divl
out
inc
jle
xor
repnz
xchg
dec
adc
and
adc
inc
and
sahf
lcall
xchg
or
and
cmp
inc
mov
jg
ljmp
jge
out
xor
scas
jecxz
mov
fstl
test
mov
adc
pop
adc
jecxz
je
jae
scas
dec
dec
mov
add
ficompl
sbb
push
out
inc
sahf
orl
and
dec
cmc
std
adc
and
sar
fdivl
nop
arpl
idiv
gs
incb
sarl
mov
xor
dec
out
lds
sarl
sub
sbbl
mov
mov
adc
adc
icebp
mov
mov
mov
fists
xchg
sub
push
cmp
xor
lods
mov
mov
frstor
mov
pop
rorb
mov
fsubs
mov
xchg
adc
push
and
pop
jb
inc
sub
into
adc
and
xor
adc
mov
outsb
in
sub
inc
cmpsb
jae
frstor
lcall
cmp
int
dec
mov
sub
scas
out
shrb
enter
and
fsubrs
or
repz
xchg
lods
and
sbb
pusha
add
hlt
xchg
dec
mov
les
sub
std
push
cld
pusha
or
outsb
mov
sub
jge
jno
les
aas
imul
mov
mov
xchg
in
iret
jns
or
xchg
sahf
adc
imul
jnp
sahf
mov
sbb
push
mov
jbe
push
mov
xor
push
jecxz
imul
inc
adc
ss
mov
adc
cmpsb
add
add
mov
mov
mov
push
hlt
ffreep
ficoms
mov
cmp
leave
in
xor
daa
xchg
out
push
xchg
inc
mov
enter
rcll
dec
repz
mov
stos
mov
jp
push
cmc
clc
or
mov
andl
aam
fimull
dec
movsl
and
xor
test
xor
mov
sbb
lods
mov
push
push
test
subb
push
aaa
fs
jecxz
ja
and
xchg
lret
in
cmp
aam
push
imull
xchg
incl
add
sbb
roll
nop
negb
lods
cmp
icebp
lea
mov
data16
scas
dec
cmp
orl
pusha
ret
stos
lds
mov
out
lcall
or
push
cwtl
test
xchg
mov
movl
in
and
mov
icebp
in
lret
sbb
jp
and
and
mov
mov
cmp
or
ret
int
xlat
into
leave
sub
stos
inc
jns
div
jmp
cmp
cld
inc
inc
das
xchg
mov
sub
dec
or
cwtl
xchg
leave
xor
mov
scas
cmp
out
mov
arpl
mov
dec
lret
add
push
roll
int
pop
loopne
add
xchg
sub
pop
movsl
or
xchg
mov
inc
mov
dec
cmpsl
mov
out
int3
add
lods
repnz
and
adcl
pop
cmp
in
jb
aas
inc
arpl
xor
mov
xor
mov
ds
xlat
fstpl
aas
or
mov
cmp
popf
int3
inc
and
rcll
push
test
test
into
outsl
fildll
xchg
mov
pop
xor
lods
scas
dec
or
mov
in
dec
add
and
push
into
sahf
and
bnd
or
aas
jl
jg
and
das
mov
or
push
ficompl
arpl
sub
inc
ret
jp
fistl
sti
xor
add
xor
outsl
xor
mov
push
mov
xor
and
mov
ret
push
sbb
stos
popa
and
pop
leave
jae
incl
dec
jp
dec
fxch
push
xchg
pop
fcoms
push
gs
add
pop
cmc
lock
stc
shr
mov
aas
ret
mov
xor
call
fildll
dec
dec
mov
je
sub
xchg
stos
fsubrl
cmp
fwait
xor
lock
ja
jp
pop
adc
push
imul
push
in
bound
mov
lcall
cmpsb
das
jmp
mov
add
or
pop
dec
jae
and
fdivrl
mov
fbld
mov
jle
or
and
stc
jmp
outsb
or
or
cmpsl
dec
pop
data16
loop
jno
in
sbb
inc
push
push
cltd
dec
pop
in
sub
jns
inc
push
addb
adc
mov
cmp
in
mov
push
sbb
out
xchg
add
mov
mov
and
into
cmp
iret
cwtl
test
repz
imul
add
mov
ss
fucomp
or
pop
adc
push
mov
out
lea
xor
push
mov
and
insl
mov
adc
xchg
mov
push
lret
lea
stos
fstl
adc
movsb
sub
mov
push
arpl
push
cwtl
and
out
imul
push
imul
dec
inc
loopne
push
mov
sub
outsb
icebp
and
movsl
test
test
outsl
lea
mov
jecxz
xchg
xor
xor
pop
adc
add
add
dec
adc
ret
in
cmc
icebp
jle
cld
mov
push
test
xor
or
js
mov
sbb
loopne
jl
lgs
bound
into
xchg
shll
or
pop
hlt
fistl
mov
dec
mov
jne
sbb
mov
nop
addr16
aaa
fnsave
test
mov
lock
in
and
push
pop
clc
jnp
jl
daa
push
in
popa
sub
jge
cmpsb
cltd
xor
jb
push
xor
pop
into
push
leave
push
push
jne
cmp
fldcw
js
inc
das
mov
jecxz
enter
mov
int
stos
es
or
mov
lahf
test
mov
out
ror
cmp
cli
sub
pushf
cmp
clc
sbb
enter
mov
scas
daa
cli
add
push
cmp
xor
pop
xchg
andb
test
leave
push
mov
mov
pop
mov
xlat
test
cmp
jle
mov
inc
cli
mov
mov
stos
mov
xor
fidivrs
dec
aam
out
cmp
test
idivb
add
ds
andl
arpl
dec
xorb
sbb
in
or
inc
jbe
popl
hlt
pop
adc
es
int
popa
or
inc
xor
orb
cmpsb
lahf
mov
jnp
lret
dec
enter
popa
push
jo
movsb
scas
enter
adc
test
mov
stos
xor
ficompl
cs
pop
mov
or
in
stos
jbe
jns
inc
xor
loop
in
jge
test
add
cltd
adc
xor
mov
popa
mov
loopne
and
lea
lea
jbe
pop
aas
mov
ss
pop
cmp
or
fstps
bound
jg
push
lret
popa
and
test
lock
cmc
pop
clc
or
jecxz
and
sub
pop
stos
dec
cwtl
movsl
jge
add
test
loopne
lret
jmp
xor
sub
loopne
int3
call
cmpsb
mov
pop
ret
inc
mul
add
stc
mov
sbb
jno
xor
les
lock
jp
jmp
mov
jg
loopne
int
gs
inc
cmp
ret
mov
jnp
push
mov
or
movsl
jle
inc
xchg
inc
iret
add
jge
mov
lods
mov
cmp
adc
popa
xchg
insl
cmpsb
push
sbb
jp
jns
enter
add
lds
jg
jmp
add
inc
sub
ret
pop
cltd
cmc
xchg
enter
aad
xchg
sub
stc
xchg
push
cmp
fildll
lock
xor
clc
iret
mov
xchg
xor
mov
sti
inc
jb
sbb
stos
mov
mov
insl
mov
jmp
dec
mov
xor
into
std
mov
xor
movsl
sbb
ss
scas
int3
mov
fidivrl
fldenv
mov
test
enter
std
mov
or
cmp
xlat
push
jle
mov
push
clc
lea
fdivl
popf
mov
aam
sbb
ss
mov
lods
push
js
dec
imul
in
lods
cltd
and
cmp
xlat
mov
add
adc
adc
lock
fxch
arpl
sub
and
jo
mov
jge
mov
fiadds
scas
ss
dec
pop
lods
repz
mov
aad
push
cwtl
adc
dec
sbb
test
mov
pop
stc
leave
jae
push
call
lret
inc
dec
loopne
idiv
xchg
xchg
js
mov
arpl
mov
push
in
pop
pop
cmpsb
mov
incl
and
cmp
sbbl
lret
mov
mov
movsl
sbb
outsb
cmp
adc
sbb
js
and
and
xor
cmp
cmc
ficomps
mov
dec
dec
mov
sbb
adc
movsl
push
fidivrl
xchg
mov
rol
mov
push
push
jne
pop
pop
add
cmp
mov
fstps
dec
std
mov
lcall
popf
int3
mov
in
add
or
lea
movlps
add
stos
or
cmp
pop
jecxz
es
out
dec
fldt
hlt
and
pop
jecxz
aad
fwait
nop
push
mov
adc
mov
fidivrl
or
pusha
push
jle
mulb
sarl
adc
es
inc
or
lock
xor
mov
sbb
loopne
sub
mov
pop
cmpsl
cwtl
and
jb
testl
dec
lods
loopne
mov
inc
subb
jle
sarb
or
or
cmp
int3
fwait
push
mov
aaa
outsb
sbb
inc
xchg
pop
lea
lea
xor
mov
addr16
ljmp
cmpsl
dec
lods
or
loope
cld
pop
iret
fdivrl
cmp
dec
or
inc
sub
repz
repnz
fdiv
sub
fsub
shlb
xchg
aaa
push
lds
mov
hlt
add
sbb
lcall
xor
cli
jecxz
test
mov
sahf
andb
gs
sub
inc
pop
pop
inc
pop
sarb
mov
inc
pop
cmc
xor
cmp
xchg
test
jno
pop
mov
daa
mov
adcb
sbb
lret
orl
mov
ja
cmp
sti
mov
aas
cmp
rcl
ror
popf
ds
nop
push
mov
mov
inc
sbb
or
sbb
xor
call
ret
jnp
scas
int
mov
sbb
in
pop
fimuls
pop
popa
lahf
fwait
cwtl
pop
test
into
sbb
sbb
mov
lods
ret
mov
pop
jecxz
push
clc
cltd
add
aad
test
rcll
mov
movsl
cltd
dec
popa
push
cmc
out
decb
adc
sub
or
sub
inc
pop
push
popa
ds
cmp
mov
xchg
adc
popa
testb
rol
es
fidivrl
dec
mov
mov
xorb
pop
jle
jle
or
or
jmp
insl
xchg
ja
in
fdiv
movsb
mov
pop
sub
cmc
sbb
mov
xchg
inc
icebp
cmpsl
adc
pop
cmpl
add
cltd
mov
adc
mov
or
ds
mov
adc
jb
mov
cld
in
mov
or
pop
or
gs
lret
repz
lret
adc
sbb
call
imul
xor
movups
mov
sbb
stos
mov
test
in
je
push
pop
mov
mov
repz
cli
mov
mov
stos
adc
sar
push
je
test
iret
ret
inc
push
sbb
decb
in
ror
ss
or
lock
sbb
xchg
fdivs
rcl
cmp
mov
testb
lcall
add
pop
and
add
xor
out
ss
pop
mov
lea
bound
jae
fnsave
lds
xchg
int
movsb
push
daa
sbb
push
test
out
adc
adc
sub
rol
ss
push
xchg
testl
std
loopne
mov
xor
sbb
lock
or
and
push
xor
jnp
and
cwtl
xchg
inc
and
dec
rcpps
add
jge
cmp
test
mov
and
inc
in
fs
jae
cmp
sbb
xlat
cmp
daa
xorb
push
data16
repnz
and
int3
sub
jge
rol
aaa
and
pop
mov
out
ror
pop
inc
pushf
sbbb
adc
cmp
jmp
jbe
ja
or
js
mov
and
sarl
test
cmp
and
icebp
movsb
push
insb
push
cmp
sub
test
pop
rcll
test
and
jg
dec
fdivrs
sub
mov
cld
push
or
cmp
xchg
adc
push
nop
addr16
movntps
jl
xchg
je
and
sbbl
sbb
push
loope
cmpsl
add
mov
repnz
push
lcall
movsl
in
sbb
loopne
sbb
outsl
xchg
fiaddl
push
stos
cmp
jmp
dec
leave
or
fisubrl
inc
add
xchg
ds
mov
or
adc
pop
push
testb
xor
push
cmc
pop
gs
cmp
adc
jo
add
lcall
cmp
dec
push
pop
bound
jo
sub
sbbl
hlt
inc
cmpsl
add
push
xor
insb
dec
pop
mov
in
mov
lret
xlat
jbe
push
in
movsl
or
jno
into
outsb
and
lret
mov
xchg
adc
lcall
xchg
xor
pusha
lea
fimull
scas
push
in
pop
stos
push
iret
loope
cmp
sbb
in
pop
hlt
test
mov
add
push
insl
mov
insb
dec
out
xchg
hlt
pop
inc
add
or
cmpb
jp
inc
and
mov
add
js
inc
arpl
dec
xchg
into
loope
mov
mov
mov
imull
repnz
fidivl
mov
xchg
lret
adc
sbb
mov
mov
mov
ret
out
iret
pop
les
jecxz
rorl
and
and
cmp
daa
out
jl
mov
mov
inc
inc
xor
jmp
push
shlb
mov
push
jno
or
rorl
sti
movsb
outsb
lods
in
push
out
lds
mov
lcall
out
jle
sbb
orb
inc
jp
lds
mov
jno
mov
adc
add
mov
jl
iret
das
inc
xchg
cmpsl
cmp
rcrl
push
repnz
sbb
or
pop
subb
sub
sbb
outsb
lea
cmp
mov
adc
push
or
xchg
sub
mov
icebp
popf
and
imul
pop
das
push
cmc
aas
push
pop
push
jbe
aas
dec
dec
xor
mov
xor
jbe
xcrypt-ofb
cmpsl
jmp
dec
mov
insl
push
cmpsl
das
aas
pop
lcall
pop
jecxz
xor
push
jmp
shl
mov
cwtl
cmp
out
stos
mov
bnd
aam
mov
dec
fdivrs
mov
mov
enter
and
adc
ss
out
in
scas
leave
lds
hlt
repnz
out
cmp
or
push
sbb
mov
nop
mov
mov
ja
pop
and
test
ja
popa
lcall
push
jp
daa
loop
lret
xchg
jp
cmp
and
out
add
jmp
push
fisubrl
cwtl
dec
fadds
and
call
pop
test
loop
inc
loope
push
sbb
and
inc
xchg
xchg
sbb
stos
frstor
adc
add
mov
cmp
loop
xchg
mov
dec
test
dec
addr16
push
xor
cld
ret
xchg
in
mov
or
xor
clc
push
ret
jp
and
and
cmpsl
loopne
pop
arpl
ret
jmp
cmp
in
rorl
jo
jl
cli
and
sub
andb
sbb
dec
aam
and
mov
ja
or
xchg
dec
lahf
pop
imul
mov
mov
xchg
lret
push
push
dec
jb
mov
dec
xchg
mov
and
sbb
jne
adc
fistl
sbb
cmpl
xor
jge
rol
jns
ss
scas
xchg
mov
in
loope
inc
mov
xchg
daa
pop
in
mov
lahf
add
xor
enter
test
cmp
iret
stos
mov
mov
add
jns
inc
stos
or
fwait
jmp
pusha
or
mov
pusha
push
and
insl
stc
pop
xchg
mov
out
adc
jmp
repnz
jmp
mov
sbb
push
and
fwait
ret
sbb
test
pop
repz
xor
idiv
xchg
or
mov
rorb
cmp
insb
push
int3
popf
out
cwtl
jl
sub
loope
pushf
dec
test
adc
jb
shr
and
js
xchg
ljmp
aaa
pop
xchg
imul
pop
pop
rol
and
flds
xchg
repz
imul
xor
jno
sbb
subb
sub
pusha
rcrb
in
dec
jmp
mov
je
sbb
test
pop
pop
mov
inc
mov
lods
mov
aam
pop
out
pop
and
jb
and
mov
es
ret
imulb
faddl
add
lods
adc
mov
cld
ja
ljmp
cmpsb
jp
cmp
shll
mov
or
jae
dec
dec
xchg
int
repnz
cmc
jne
aas
mov
push
in
pop
xor
je
ds
imul
adc
mov
cmc
xchg
mov
push
mov
adc
push
popf
repnz
sub
in
add
inc
mov
and
out
push
ret
imul
dec
aas
cltd
inc
enter
repz
ss
iret
sbb
out
dec
and
or
lahf
mov
insb
add
xchg
inc
push
cltd
sbb
cmp
mov
mov
popa
clc
aam
inc
movsb
mov
mov
loopne
scas
js
ss
les
xchg
in
loop
mov
sub
int
clc
pcmpgtb
or
mov
inc
mov
ret
repnz
fwait
and
add
jge
or
xor
jp
jae
fwait
mov
int
mov
or
lret
pop
dec
jne
cld
xchg
cmp
dec
inc
dec
cmpsb
cmp
in
repz
and
xor
xor
lock
sub
mov
xor
adc
adc
fdivrp
push
cltd
cmpb
rcrb
es
fs
loop
cmp
adc
cmp
bound
addr16
xchg
in
push
lds
mov
pop
int
dec
xor
cli
cltd
dec
jno
mov
pop
xor
mov
dec
and
std
pop
mov
aas
inc
scas
jge
sahf
dec
xchg
lcall
rorb
ret
andl
scas
mov
iret
fbstp
out
scas
and
and
jno
cmpsl
into
fists
mov
xor
push
iret
push
imul
xor
and
sahf
ja
in
cmp
mov
in
stos
jnp
popf
popf
and
les
into
push
jg
scas
add
out
lock
add
mov
dec
and
cmpsb
imul
xchg
xor
call
or
mov
push
loopne
mov
or
push
mov
hlt
xor
je
sarl
dec
xchg
or
pop
adc
xchg
std
xchg
sbb
inc
in
filds
lahf
or
ficoml
into
xchg
pop
sbb
jbe
mov
xchg
insl
ljmp
mov
mov
add
jb
pop
pop
mov
ja
push
scas
push
int
add
outsl
sbb
fdivs
cmp
push
orb
mov
cmp
iret
leave
cwtl
nop
inc
fdivrp
jo
xor
or
add
pop
mov
push
jle
cltd
adc
pop
pop
and
mov
fldt
cmc
into
test
pop
aad
or
fsubrs
pushf
xchg
mov
inc
jae
adc
fcompl
in
jge
mov
pop
add
push
rorl
loop
shrb
ret
mov
cs
out
adc
stos
jmp
dec
jns
jae
jle
mov
and
sbb
adc
dec
test
test
inc
arpl
js
pop
js
loop
xchg
push
fidivl
loope
push
pmuludq
dec
xorl
adc
sub
jp
cmp
cmpsl
add
adc
data16
out
jbe
out
leave
cmp
mov
pop
scas
push
popf
mov
imul
aad
dec
out
mov
pop
mov
movsb
es
jle,pt
mov
mov
dec
and
dec
pop
sub
int
dec
lret
movsb
stos
iret
pop
fs
xchg
pop
testl
jne
imul
and
pop
pop
lock
pop
push
mov
aaa
cmp
aam
cmp
sub
and
sub
out
jge
in
int
jecxz
sub
mov
out
sbb
je
sahf
jno,pn
js
xor
lahf
cltd
sbb
mov
push
push
icebp
jno
push
dec
adc
mov
test
adc
fnstcw
sub
mov
cmpl
sahf
hlt
sub
fstpt
cs
ja
push
jns
sbb
stc
sbb
jno
inc
jmp
inc
cmp
test
pop
jecxz
loopne
hlt
outsb
outsb
push
mulb
push
fucomip
dec
or
mov
pop
mov
sub
xor
sbb
scas
ds
mov
stos
mov
rcr
fwait
jo
xchg
xor
cli
mov
inc
iret
sbb
addb
enter
or
xchg
sub
nop
mov
adc
cli
mov
jle
pop
ret
notb
lcall
outsl
inc
dec
sub
iret
cld
mov
int3
add
xlat
arpl
mov
xchg
jnp
jno
xor
push
add
dec
in
adc
push
fsubs
and
pusha
pop
sub
aad
xchg
jnp
mov
mov
jl
scas
inc
adc
xor
in
sahf
pop
mov
fs
out
push
dec
jae
jnp
adc
out
test
dec
mov
xor
or
and
push
mov
or
pop
mov
add
rcrb
mov
cmp
mov
ficomps
jmp
dec
jns
mov
inc
jae
inc
fs
fistpll
hlt
mov
mov
imul
add
mov
icebp
pushf
xor
add
sbb
xchg
inc
jbe
std
out
ds
or
test
mov
sbb
add
xchg
pop
mov
mul
cmp
cs
pop
stos
dec
dec
jle
pop
daa
fs
scas
lock
push
popf
pop
mov
or
scas
inc
lahf
jecxz
data16
popf
dec
jbe
ret
nop
in
inc
insl
cmp
jle
lods
icebp
sti
loope
imulb
daa
popf
adc
mov
lret
shlb
sub
js
mov
xchg
jno
stc
mov
in
fsub
jnp
or
jae
and
cs
iret
jne
xorl
push
cld
pop
aas
dec
push
pop
cmpsb
mov
mov
jo
leave
cs
imul
ss
shr
cmc
jmp
fwait
pop
and
stos
aaa
xor
jae
ret
sbb
in
jmp
and
pop
mov
add
mov
imul
loop
sub
mov
cmp
xchg
cmpsb
imul
popf
adc
sub
lcall
mov
aam
add
insw
push
outsl
hlt
sti
adc
cmpsl
clc
std
push
mov
mov
cwtl
adc
sub
rcrb
jno
push
fstl
out
enter
jmp
or
mov
mov
or
lods
or
sahf
out
pop
inc
mov
adc
adc
cmp
pop
add
lcall
in
mov
lds
push
insb
ret
pop
mov
test
dec
jne
adc
cmpsb
mov
mov
mov
imul
sub
das
dec
sbb
jl
adc
jg
insb
in
lret
movsl
sub
ret
pop
testl
fidivrl
sbb
pop
sbb
adc
cmp
divl
mov
lret
sub
ja
lcall
and
fsts
push
xchg
mov
sbb
inc
test
ljmp
shl
dec
push
fsubrs
fsubrl
mov
test
push
int3
jne
loopne
inc
jns
sbb
push
mov
mov
call
sbb
cmpsl
cwtl
aas
fcomip
add
push
cmp
mov
pushf
add
cmpsl
lret
sbb
aaa
pop
insb
adc
adc
inc
cltd
add
jb
aam
mov
cmp
ljmp
dec
aam
adc
fildl
fmuls
shll
aaa
push
int3
pop
insb
mov
mov
jg
xor
or
add
push
testl
loop
scas
sahf
inc
ljmp
enter
push
add
pop
data16
daa
cmp
cmp
sti
add
xchg
mov
jl
dec
clc
xchg
mov
loop
push
jne
into
out
test
pop
or
mov
mov
pop
popf
pushf
bound
int3
loop
decl
push
mov
dec
or
lahf
lock
ret
iret
std
sub
pop
push
imul
jecxz
jge
ja
mov
imul
scas
stos
cmpl
mov
lcall
adcb
lahf
jnp
push
mov
dec
dec
enter
test
adc
ja
roll
sub
jl
fcmovnu
or
cmp
outsb
ret
in
push
push
push
adc
lds
push
or
repnz
jge
or
loop
rol
push
mov
mov
imul
sbb
inc
imul
divb
jno
mov
decb
insb
sti
sbb
xor
es
or
sub
lock
iret
dec
outsb
andl
sub
xor
xor
jns
pop
lods
pop
aam
adc
and
mov
mov
push
cmpsl
lcall
fwait
xchg
mov
mov
jl
out
aam
and
into
outsb
mov
dec
jge
push
popf
push
jae
leave
push
adc
cmp
mov
pusha
insb
dec
orl
sbb
cmpl
mov
push
sbb
dec
lahf
push
push
or
inc
aad
aam
xor
dec
pop
stc
mov
pop
insb
mov
jmp
loop
fdivrl
cmpsl
movsl
aas
add
cmpb
xor
subl
in
and
loope
adc
in
pushf
cmp
stos
faddl
leave
fmuls
mov
sbb
lret
cmp
loop
stos
in
xlat
push
xchg
xchg
aaa
jg
aad
add
inc
das
sbb
xchg
aaa
aaa
and
xor
out
jmp
mov
dec
ljmp
push
cmp
out
ljmp
cmp
jne
pop
jl
dec
xchg
jae
pop
ss
mov
or
pop
cld
cmpl
imul
dec
lcall
gs
mov
push
cli
inc
ret
xchg
imul
lret
mov
sbb
icebp
mov
incl
fisubrs
cmp
scas
mov
in
out
enter
andb
cmp
lret
iret
out
push
mov
inc
faddl
scas
adc
pop
jo
fwait
and
mov
test
mov
shrb
mov
cmp
fdivr
call
outsl
jecxz
fistl
add
jmp
jmp
dec
pusha
dec
test
int
ljmp
aam
ss
mov
sub
xchg
xor
das
std
xchg
mov
mov
outsl
cmp
roll
inc
imul
mov
cltd
xor
ljmp
sub
lock
push
mov
adc
dec
cmp
int
pop
and
xor
ss
xadd
fsubr
fsts
push
insb
pop
test
sub
xor
fldpi
insl
fucomp
pop
sub
test
sub
pop
jb
sahf
lods
sub
jp
enter
xor
js
xchg
hlt
push
xor
pop
cmp
push
addr16
push
leave
fyl2x
pop
lret
aas
sbb
inc
adc
pop
mov
dec
in
xor
mov
sub
lcall
mov
pop
push
push
inc
dec
shrb
sti
mov
xchg
aas
mov
sub
ret
mov
xor
outsb
xchg
xchg
sbbl
dec
iret
xor
dec
pushf
xor
sub
jno
pop
aad
push
mov
nop
push
jb
test
mov
cmpsb
iret
sub
cmpsl
mov
je
es
jno
adc
out
adc
std
inc
rcrb
in
call
add
inc
xchg
test
add
in
mov
pop
int3
adc
scas
test
adc
jl
lret
mov
aad
mov
pop
dec
add
dec
xchg
loopne
inc
dec
dec
dec
stc
xor
into
or
test
xor
and
xchg
cmp
xor
es
xchg
sahf
mov
mov
mov
xchg
loop
ljmp
leave
ret
pop
push
inc
sarb
mov
and
ss
into
add
dec
xchg
jecxz
push
dec
add
lods
and
inc
xor
or
loop
jge
fisttps
rolb
cmp
data16
aas
jg
jecxz
xchg
xor
cmp
aam
insl
mov
movsb
add
clc
lds
add
adc
ja
mov
dec
cmp
jle
sbb
icebp
mov
or
mull
mov
mov
add
imul
pop
les
sub
aaa
jno
cli
push
out
nop
lret
leave
cld
push
lahf
out
xor
mov
notb
call
movsb
fwait
cmp
or
xchg
push
roll
rclb
sub
fistpll
cs
jae
pop
push
adc
cmp
imul
vcvttpd2dqy
mov
test
bound
fistl
sbb
incb
add
add
pop
xchg
xchg
rcr
frndint
loopne
xchg
jne
push
cmovle
imul
push
testl
xchg
mov
add
inc
ds
xchg
mov
pusha
sub
dec
jbe
jns
pushf
stc
ja
lods
xor
pop
mov
pop
arpl
mov
jle
add
lcall
xchg
xor
cmp
dec
jnp
mov
in
shll
adc
inc
jns
add
mov
mov
test
adc
cwtl
ds
xor
xlat
mov
jp
fiadds
push
mov
or
push
shl
jl
inc
pop
lds
subb
pop
xchg
je
imul
inc
sbb
push
xlat
sbb
push
cmpsl
sbb
ljmp
je
sub
mov
push
sub
ret
and
aas
pop
xchg
add
adcb
stc
xchg
xor
bound
cld
push
nop
push
iret
mov
sbb
inc
into
push
mov
lcall
aam
lret
jecxz
mov
test
cltd
popa
inc
and
push
mov
mov
imul
popl
inc
and
xchg
xchg
scas
ja
xchg
insb
imul
adc
sub
insb
jb
and
cs
sub
or
loop
jp
popa
pop
gs
into
inc
lock
rcrl
adc
add
aaa
int
inc
adc
nop
call
pop
xchg
std
mov
lods
lods
xchg
sbb
loop
mov
hlt
and
out
add
ljmp
xor
and
scas
lods
imul
mov
add
and
loop
jne
sbb
lret
xor
out
lods
fidivrl
das
fcomip
sub
adc
sbb
in
sbb
adc
xor
aaa
mov
cmp
dec
mov
lret
test
aas
lods
dec
iret
push
and
hlt
into
arpl
cs
leave
sub
inc
cmp
adc
stc
pop
cmpsl
jmp
pop
cmp
jp
mov
jmp
les
scas
andb
mov
es
lock
loop
dec
jbe
adc
push
stos
push
cs
dec
popf
mov
mov
mov
test
or
add
xchg
xor
xchg
sub
jge
ds
mov
sub
popf
pop
add
pop
sub
xchg
push
sbb
inc
je
sbb
mov
stc
inc
sbb
js
lea
jle
insl
cmp
ret
daa
cmc
xor
mov
das
jmp
or
and
or
xchg
add
mov
ret
repz
lcall
cmp
add
xchg
sbb
jmp
aaa
or
ja
dec
ret
sub
pop
inc
cs
inc
nop
mov
and
movsl
insl
adc
mov
sbb
push
into
inc
clc
push
sbb
daa
addr16
test
in
pop
fwait
mov
sti
mov
lcall
mov
dec
mov
stos
cld
jae
add
aad
shrb
cwtl
lret
movsb
xchg
inc
rorb
sbb
stos
mov
xchg
shll
cwtl
mov
pop
movsl
mov
lods
pusha
iret
fidivrl
xchg
inc
in
iret
inc
or
stos
sbb
and
loope
loopne
mov
sub
pop
shrl
inc
sub
mov
ljmp
test
shr
and
cmp
dec
mov
insl
jo
cs
mov
enter
jbe
jg
femms
cmp
mov
aas
mov
pop
inc
stos
filds
fwait
out
xor
inc
daa
out
je
mov
push
mov
mov
and
fstl
push
sbb
cmp
hlt
sbb
add
dec
or
pop
push
enter
mov
push
maxps
lds
or
les
sbb
btr
push
out
aas
enter
in
stc
rclb
add
std
test
jb
inc
stos
pop
nop
jle
je
pop
jno
hlt
hlt
cmp
mov
jno
lods
sub
and
sub
das
aam
jb
cs
sbb
sub
sub
adc
mov
bound
call
loop
push
fcoms
inc
gs
aas
adc
push
sub
shrl
imul
js
idiv
sbb
testl
sahf
sbb
xor
lret
into
int
inc
fisttps
adc
int3
add
sti
lea
mov
xor
cltd
testl
mov
inc
sbb
xchg
movb
push
jl
pop
into
xchg
xor
push
mov
test
mov
push
inc
jmp
sub
rcrb
je
push
push
test
je
and
push
xor
loope
in
jbe
pop
jle
fcomi
jl
inc
movb
mov
pop
call
dec
lods
gs
or
cs
mov
iret
je
jns
adc
dec
jns
mov
daa
pop
mov
adc
lods
pushf
aas
cs
inc
aad
call
jns
jecxz
adc
xchg
imull
shl
sbb
mov
lahf
and
push
push
aaa
mov
sub
add
pop
addr16
mov
jge
sbb
mov
movl
pop
sbb
add
cmc
push
pop
filds
adcl
adc
push
rclb
push
push
sub
fists
mov
dec
push
ret
xor
insl
mov
sbb
out
sub
sub
outsl
cmc
shrl
push
cli
in
mov
jmp
push
data16
out
xchg
mov
cmp
xor
sarl
out
xchg
inc
ds
fsts
jnp
push
push
mov
aad
hlt
jae
and
roll
xlat
inc
and
rorl
mov
push
in
xor
sub
push
clc
cmpsb
adc
xor
gs
push
pop
add
mov
xor
addr16
dec
xorl
lret
add
test
push
dec
push
jmp
jle
imul
xor
mov
jnp
pop
repnz
repz
cld
clc
mov
adc
adc
sub
outsl
daa
jecxz
adc
or
in
scas
or
iret
xchg
xor
filds
call
or
mov
inc
js
adc
into
lcall
cltd
icebp
push
inc
cmp
pop
jno
scas
mov
jne
adc
pop
es
aas
iret
or
pop
mov
call
in
sbb
xchg
sub
mov
in
sbb
out
mov
adcl
sbb
test
mov
sbb
gs
inc
jae
insl
ret
cmc
pop
pop
daa
xchg
out
dec
sti
pop
push
xor
adc
adc
xchg
add
fwait
daa
in
aam
xor
je
and
lret
inc
imul
test
cmp
out
push
enter
or
push
cmp
or
and
daa
fldt
jl
shll
push
xor
test
push
add
stos
cmp
sub
sub
cli
inc
cwtl
aad
add
cmp
pop
and
fildl
js
pop
cmc
push
subb
inc
in
test
lret
aaa
cs
xchg
jmp
movsb
ror
outsl
insb
adc
divl
jge
rorl
and
pop
sti
mov
fs
imul
sbb
and
jp
sbb
mov
scas
jb
test
sbb
sahf
lahf
fwait
stc
jmp
pusha
outsb
xor
xchg
jbe
jo
sub
cli
insb
loope
imul
fsubrl
sahf
pop
daa
repz
or
les
jle
je
pop
fistpl
inc
lods
shrl
inc
sub
cmp
add
addr16
inc
and
mov
call
popa
stos
mov
sbbb
mov
addr16
and
xchg
mov
pop
int
mov
lock
inc
mov
sbb
dec
add
inc
lcall
add
push
pop
pushf
and
and
xor
pop
mov
aam
or
lret
add
popa
test
mov
inc
testb
adc
or
xchg
mov
xchg
lret
cli
std
cmc
push
sbb
mov
lods
add
adc
imul
inc
xor
xor
lds
push
pushf
mov
insl
dec
mov
xchg
push
jl
aaa
scas
cmp
and
jbe
cmp
xchg
sbb
cmc
or
mov
dec
in
gs
jg
xor
out
cli
lahf
xor
add
out
sub
sarb
int
mov
and
sahf
add
xor
xor
out
jmp
push
mov
pop
addl
add
dec
jo
lock
sub
cmp
in
xor
push
movsl
test
push
cld
enter
cltd
or
lret
pop
inc
pop
or
movsl
arpl
outsl
dec
out
dec
iret
ljmp
push
ja,pn
popf
mov
dec
and
jl
xor
pop
daa
int3
lods
jg
lea
jg
scas
mov
pop
sub
pushf
push
mov
sbb
push
insb
into
jge
outsl
ffreep
int3
push
lahf
andb
mov
adc
pop
test
lock
mov
cli
lods
mov
and
cltd
push
xchg
push
jns
jmp
mov
inc
lods
sarl
xchg
push
into
inc
dec
test
test
or
xchg
int3
cmp
or
jns
inc
hlt
xchg
movsl
div
pop
leave
lods
mov
adc
call
xor
cmp
sub
sub
call
mov
pop
mov
mov
cwtl
jnp
or
pop
xor
dec
in
jg
out
sub
loopne
bnd
adc
shl
imul
fcmovnb
adc
xchg
cmp
and
lsl
das
test
out
or
in
orl
jbe
mov
sahf
mov
sub
lcall
test
xor
xchg
in
int3
outsb
lahf
mov
in
and
call
cmc
dec
sub
sub
test
stos
dec
or
xchg
popf
fdivs
ret
lock
adc
sub
jmp
popa
cli
loop
jecxz
sti
jmp
rcrl
lds
mov
mov
iret
test
test
in
lods
mov
leave
xchg
scas
sbb
mov
insl
jg
xorl
mov
js
cld
mov
dec
mov
dec
outsb
int3
fimull
stos
mov
adc
and
test
addr16
or
fildl
xchg
imul
push
add
clc
inc
mov
xchg
cmp
fisttps
out
mul
cmp
jg
jecxz
jle
pop
push
inc
cltd
js
adc
test
mov
stos
jle
or
or
into
adc
xchg
mov
fwait
sti
int
mov
sbb
sahf
out
daa
jno
sbb
test
push
pusha
insb
push
imul
fiadds
roll
and
int
clc
sbb
lret
cmp
jp
pop
and
addr16
xchg
fwait
test
ljmp
insb
push
or
cmpsb
adc
jb
leave
jecxz
cmp
into
movsl
xchg
inc
arpl
das
xchg
mov
repnz
cmpsl
lret
incl
cmpsl
xchg
mov
mov
imul
stos
aam
push
mov
iret
mov
fucomi
adc
and
inc
fistl
pop
inc
xor
and
inc
enter
fxch
adc
icebp
push
xor
sbb
insl
out
mov
xchg
cmp
cmp
mov
stos
pop
nop
xchg
push
xor
or
inc
stos
and
popa
pop
push
int
in
int3
rcll
out
cmp
xor
sub
adc
jp
sub
mov
xor
pop
addl
and
mov
sbb
lds
fs
arpl
aaa
cmp
mov
decb
dec
lods
xor
dec
mov
jbe
mov
or
clc
jns
ja
push
sbb
mov
in
rcr
xlat
sti
push
xchg
test
mov
push
iret
and
lds
dec
ds
cmpsb
xchg
push
sub
pop
mov
aaa
adc
inc
mov
fistl
fistpl
pop
hlt
fnstcw
push
test
and
in
rcrb
push
jl
mov
or
add
sbb
outsb
adc
fnsave
or
insb
jge
fldln2
push
mov
cltd
push
jae
ljmp
int
sbb
xor
inc
mov
pop
cld
js
loopne
jl
inc
data16
jl
lea
mov
les
aas
xor
push
or
pop
fdivrl
in
inc
xchg
lds
inc
rcpps
xor
roll
pop
les
adc
cld
in
inc
bound
mov
xchg
xor
lock
stos
mov
in
lods
paddq
lret
fwait
cmp
push
fidivl
in
and
pop
push
adc
push
fcomi
int3
ja
xchg
pop
sub
hlt
mov
imul
icebp
adc
pop
inc
mov
fs
popl
mov
test
add
mov
and
aad
inc
xchg
jnp
or
jno
mov
in
cmc
mov
lahf
orl
outsl
jmp
xchg
arpl
inc
rol
out
mov
jno
add
add
je
sbb
dec
inc
loop
dec
push
cmp
dec
test
push
cmp
mov
imul
dec
xchg
mov
xor
add
and
inc
jmp
addl
les
sti
outsl
jle
jb
nop
int
int
adc
push
mov
outsl
xor
lods
lock
push
out
add
adc
mov
das
adc
inc
pop
imul
insb
iret
cmp
pushf
mov
inc
adc
mov
in
cs
ds
or
add
sbb
mov
insl
stos
jns
das
sub
mov
lahf
mov
cmp
les
xchg
fists
push
stos
lods
cs
xchg
mov
js
lock
sub
jnp
das
sarl
mov
dec
xchg
iret
cmp
mov
loope
mov
xchg
data16
mov
jo
lea
out
jb
icebp
ja
cmpsb
and
ja
mov
cmp
sti
or
jbe
shrb
mov
in
push
lret
mov
sbb
std
call
mov
fisubs
jle
sahf
pop
lret
out
lahf
mov
sbb
outsb
daa
stos
mov
inc
sti
mov
xor
test
add
push
push
dec
test
xchg
pop
fdivl
dec
push
lock
mov
jne
lahf
sbb
lds
push
es
mov
js
pop
dec
fstps
popa
ret
enter
scas
jbe
push
insl
or
sbb
xchg
in
std
and
js
mov
and
mov
push
fsubrp
popa
jno
mov
sub
sub
or
jge
pop
aaa
mov
add
push
popa
leave
lea
int3
dec
cmp
sbb
sbb
sbb
adc
push
push
xchg
or
outsl
movsb
mov
xchg
icebp
pushf
cmpsb
int3
add
push
ror
adc
pop
cmp
fs
pop
mov
mov
mov
pop
adc
sub
pusha
and
fscale
sarb
pop
jne
shll
movsl
ud1
std
or
mov
ss
jo
popa
pop
in
sbb
mov
fmuls
cmc
hlt
xchg
adc
lcall
push
cmc
enter
lock
roll
push
loop
jae
scas
pop
dec
and
mov
fistl
iret
inc
pop
jle
mov
xchg
cmp
cli
inc
shrb
cmpsb
fists
cltd
pushf
lret
xor
lret
popa
out
pop
inc
jne
inc
imul
adc
xchg
mov
push
lret
sbb
or
dec
push
cs
sub
hlt
jbe
mov
jno
and
pop
fidivs
jns
and
push
xchg
out
xchg
inc
mov
faddl
push
adc
mov
sti
dec
cmova
adc
ljmp
jno
xchg
cs
dec
jle
mov
pushf
mov
adc
fisttpl
sbb
jp
es
push
shl
xchg
nop
pop
aad
add
jae
sbb
repnz
inc
stos
push
push
inc
into
data16
add
mov
xchg
nop
lcall
dec
les
stos
fsubrs
loop
cmp
ficomps
out
cmp
test
and
push
xor
add
mov
sub
mov
xchg
dec
aam
out
add
cmpsb
je
add
xchg
outsl
repnz
lret
xchg
jg
popf
mov
jg
rcrl
mov
jno
stc
arpl
push
insl
mov
adc
xchg
lret
fwait
inc
pusha
dec
pop
adc
clc
jb
frstor
or
into
loope
cwtl
and
iret
dec
mov
out
cli
pop
testl
pop
mov
pop
fldenv
and
movsb
incl
push
jae
jb
cltd
dec
xor
repnz
inc
sbb
fsubl
into
pop
rcr
outsb
pop
imul
sbb
insb
out
sbb
xchg
bound
jg
out
fdivrs
les
sub
inc
sbb
iret
xlat
or
mov
cmpsb
jae
push
adcb
dec
cmp
push
cltd
mov
xor
into
stc
push
push
push
mov
mov
clc
push
lret
xchg
or
mov
inc
xor
mov
aaa
sub
mov
dec
bound
sbb
in
rcrb
shr
mov
push
and
outsl
pushf
clc
mov
add
mov
stos
add
fsubrp
loope
nop
mov
mull
ret
xor
scas
repnz
call
mov
mov
ficompl
mov
fildl
fs
cmp
pop
call
pop
pop
imul
add
out
pusha
loopne
into
rorb
shl
nop
shr
xchg
pop
lea
gs
xchg
mov
test
stc
aad
sub
inc
jae
sub
test
xor
cld
xlat
cmc
outsl
into
bound
xor
push
mov
lret
icebp
adc
nop
pop
nop
imul
cltd
inc
arpl
pop
sbb
dec
pop
add
mov
xchg
sbb
popa
sarb
pop
mov
adc
and
cmp
fisttps
shrl
pop
sbbl
sub
loope
cmp
lock
scas
xor
jle
sbb
mov
pop
mov
pop
jbe
rcll
scas
xchg
push
dec
aas
repz
ret
test
mov
aam
int
add
pop
pop
pop
mov
sbb
hlt
add
jp
out
repz
cmc
mov
pop
fstps
add
std
mov
ds
jae
cmp
loopne
cmp
mov
mov
popa
and
inc
lret
xchg
shr
movsb
mov
dec
lret
repnz
fxch
pusha
bswap
in
pop
xchg
push
mov
sbb
repz
add
fstps
xchg
mov
rcrl
pop
je
aaa
sub
int3
movsl
adc
mov
fisubl
xchg
push
mov
mov
jbe
push
jecxz
or
test
popa
xchg
cmp
or
inc
inc
stos
pushf
xchg
je
icebp
xorl
pop
dec
fiadds
xchg
divb
mov
mov
sbb
jmp
and
outsl
cltd
adc
push
mov
test
jmp
fstl
pop
add
cmpb
pop
xor
and
aaa
in
movsb
lea
push
pop
int3
adc
jb
stc
xor
mov
push
fimull
and
or
sbb
jg
lea
push
jb
addr16
stos
in
aaa
arpl
add
mov
sub
into
sti
xor
ret
mov
jge
jp
inc
xchg
lret
pop
xchg
dec
test
lret
cltd
mov
aam
outsb
js
imul
dec
mov
and
arpl
sbb
sahf
mov
mov
mov
pusha
and
lahf
mov
jns
repnz
mov
and
cmpl
jne
push
pop
adc
xchg
in
in
aaa
mov
stos
ret
repnz
push
cmp
mov
test
pop
pop
pushf
arpl
je
xchg
lcall
rorl
jecxz
push
ret
imul
xor
xor
insb
mov
sbb
add
mov
lret
test
add
data16
pop
mov
dec
push
lcall
push
lret
sub
jl
push
xchg
out
mov
scas
or
mov
jns
fidivl
add
jge
sbb
mov
aad
test
call
dec
out
xor
fcomps
jno
cli
jb
or
je
push
lds
scas
loopne
adc
inc
das
xchg
fsub
and
sub
adc
xor
sti
sbb
mov
ds
xchg
movsl
xchg
stos
jecxz
push
repnz
in
pusha
mov
mov
sub
adc
daa
adc
insb
lds
dec
cmp
shlb
mov
push
movsl
lods
sub
cmp
insb
cld
idivl
jmp
cs
pop
push
inc
add
roll
pop
pop
add
inc
mov
mov
fnstcw
pop
popf
mov
xchg
inc
jle
dec
mov
xchg
mov
test
bound
loopne
lock
repz
ljmp
cmp
outsb
inc
pusha
jl
xchg
stos
in
or
test
loop
pop
cltd
push
adc
mov
dec
push
jl
je
sub
jnp
sbb
cmp
jl
imul
xchg
stc
push
add
adc
les
test
jo
inc
ret
movsl
mov
addr16
mov
ljmp
push
adc
xlat
sbb
jmp
js
xchg
movsl
sahf
xor
lahf
jns
inc
dec
test
sbb
and
xchg
pop
push
cmp
ss
jo
or
lds
push
xchg
enter
andb
xor
mov
adcb
ret
cltd
xor
out
popa
jl
xor
sbb
dec
stos
push
push
ror
ljmp
mov
mov
cwtl
lcall
lods
dec
jg
imul
and
inc
pop
xor
pop
xor
mov
out
sahf
sbb
inc
lods
out
in
xor
mov
push
jl
ss
ret
push
jg
or
mov
sbb
adc
adc
inc
xor
sti
xchg
and
cmp
dec
or
pusha
pop
rcrl
cmp
lahf
js
sub
jl
divb
int
push
les
ret
stos
xlat
test
daa
mov
test
sub
add
stc
pop
into
add
jg
mov
and
jle
inc
and
cmp
cld
fisttps
xchg
jmp
push
sbbb
jge
pop
mov
sbb
add
enter
xchg
jo
stos
decb
sub
addr16
not
hlt
lods
icebp
jmp
cmp
rorl
push
test
stos
and
shrb
push
pop
lea
pop
push
xor
add
cs
inc
lods
push
and
fsts
lret
sahf
cmp
mov
adc
mov
mov
jno
push
inc
iret
mov
dec
jmp
or
push
scas
in
ds
jge
popa
cli
pop
push
mov
mov
out
xor
add
inc
arpl
push
xchg
in
scas
sbb
imul
inc
lea
testl
inc
pop
xor
out
xor
mov
jle
jae
sbb
mov
ret
scas
pushf
ja
stos
cmp
and
and
xor
aas
xor
xchg
and
inc
in
aad
push
jecxz
push
fsubrs
sub
pop
rcpps
sbb
arpl
or
data16
jl
stos
jmp
cmc
lea
mov
test
push
mov
repz
jmp
fidivrl
std
in
pop
imul
jno
cli
stos
mov
fstps
jl
jo
pushf
lret
jmp
cmc
mov
cmpl
jae
pop
cld
mov
popa
xchg
in
jle
negl
adc
dec
jnp
xchg
stc
jge
cli
or
mov
fldenv
shr
les
dec
mov
das
cmp
pop
and
cmp
cwtl
shrl
mov
rcrl
cmpsl
add
sbb
test
or
cltd
jl
xchg
je
add
fs
xchg
scas
cmp
dec
ljmp
adc
iret
or
xlat
mov
mov
jl
xor
push
xor
inc
data16
mov
dec
call
mov
imul
shlb
adc
or
iret
cmp
ds
mov
inc
test
push
add
adc
pminub
scas
int3
cmp
mov
cmp
decl
into
arpl
iret
add
cmp
add
dec
adc
push
inc
lret
xor
pop
outsl
and
fisubrl
imul
mov
ret
std
mov
stc
repnz
mov
jnp
and
adc
xchg
popl
icebp
rcrb
mov
jl
clc
xor
test
addr16
sub
pop
aas
mov
scas
sbbb
xchg
mov
jg
push
push
jno
pushf
imul
std
in
xchg
jb
aad
or
xor
mov
xor
int
leave
addr16
mov
jnp
xor
fcoms
hlt
jle
divl
add
dec
or
cli
dec
mov
int3
in
mov
mov
inc
popa
xor
pop
inc
out
outsb
mov
jmp
xor
mov
clc
nop
popf
fistps
call
fwait
sti
pop
inc
mov
jno
in
xor
in
adc
test
lds
mov
scas
sbb
loop
repz
mov
cmp
xlat
inc
pop
das
sbbb
cmp
cmpsl
test
sbbb
arpl
pop
in
mov
fidivs
xor
lock
jo
xlat
outsl
icebp
test
insb
sti
mov
adc
inc
pop
add
arpl
inc
lret
xchg
out
lret
dec
arpl
adc
xchg
xorl
rclb
xor
and
div
xchg
or
ljmp
and
sbbl
out
pop
xor
pusha
add
movsl
sbb
imul
adc
lcall
inc
mov
or
inc
add
or
dec
add
fwait
movsl
mov
mov
lret
fidivs
jb
jp
pop
push
mov
xor
xor
xchg
in
aaa
mov
mov
add
outsl
sub
mov
loop
push
pushf
mov
out
cmp
lret
je
jmp
das
imul
loop
mov
pop
arpl
sbb
push
dec
shrb
cld
cmp
imul
pop
xor
mov
sbb
mov
cmp
sbb
mov
nop
fwait
test
aas
push
clc
pop
scas
lods
jb
mov
fbstp
xchg
arpl
cmp
es
std
dec
mov
or
dec
popa
xor
cmp
outsb
push
pop
mov
enter
rcll
pushl
cmp
rcl
xchg
fs
jne
lea
into
orb
iret
mov
daa
gs
xchg
mov
pop
fsubrp
mov
jnp
mov
xor
jo
jge
imul
and
dec
sbbl
fidivrl
stos
and
call
mov
ja
lods
cmp
lds
ss
jmp
jecxz
push
jecxz
xor
in
dec
add
aaa
sbbb
test
daa
sbb
into
cmp
scas
sbb
mov
negb
pop
roll
pop
sub
or
ret
dec
repnz
xchg
mov
int
mov
cltd
es
icebp
mov
mov
push
enter
loopne
add
xchg
pop
cld
sarb
pushf
sbb
leave
mov
sbb
mov
sbb
xchg
in
cmp
pop
jb
shlb
int
test
gs
xchg
mov
jecxz
ljmp
mov
sarb
cmp
dec
fstps
int3
sbb
sbb
aas
pop
sbb
inc
or
int
nop
xlat
in
mov
mov
arpl
test
push
push
xchg
das
xchg
dec
lea
rcrl
jnp
je
repz
mov
sbb
out
sar
in
and
pop
dec
pop
sub
je
cli
loopne
and
nop
mov
gs
dec
xor
sub
jge
adc
rcr
inc
cmpsl
fwait
and
cltd
lret
scas
or
enter
sub
jecxz
dec
dec
setl
xor
insl
push
jo
les
std
test
outsb
ret
lret
aaa
loopne
loope
repnz
cmpsl
daa
lret
jp
dec
adc
hlt
cmp
addr16
bound
mov
lea
pop
jle
xchg
jns
test
inc
out
outsl
jecxz
movsl
daa
push
or
add
jnp
ja
jns
popa
mul
xor
xchg
cmp
sub
decl
rorl
imulb
sbb
mov
push
jge
cmpsb
mov
fdiv
repz
sub
jb
mov
inc
cld
push
data16
inc
pushf
inc
leave
ror
test
push
imulb
push
out
or
sbb
bound
bound
push
hlt
cwtl
sub
adc
sub
inc
xchg
lret
or
pop
xchg
add
pop
mov
jmp
jne
jp
lcall
leave
mov
mov
daa
cli
popf
jo
mov
fs
stos
sbb
hlt
dec
jnp
push
test
or
sti
lret
fld
fdivrs
push
icebp
jmp
mov
sbb
cwtl
cld
and
stos
cwtl
mov
xor
ror
test
dec
inc
std
sub
arpl
add
das
push
and
jns
adc
scas
in
mov
inc
push
test
sbb
cmp
jo
and
sbb
jp
cmpsl
sub
adc
popf
aam
push
nop
or
test
lods
mov
lock
inc
cs
dec
inc
cmp
jo
push
movl
shlb
mov
cmp
xchg
int3
shl
loope
iret
cli
cmp
mov
mov
cmpb
gs
lret
push
push
adc
repnz
cmp
dec
inc
imul
or
addr16
or
lret
scas
dec
and
orb
inc
jmp
cld
inc
push
leave
mov
sbb
cmp
aam
jno
and
inc
pop
sbbl
out
sbb
js
scas
push
js
call
pop
push
or
test
sar
fxch
mov
loop
les
insl
inc
xor
or
clc
xor
and
loopne
xor
jmp
popf
mov
shlb
sbbb
jle
sub
jp
jmp
test
pop
fnstsw
push
cmpsl
adc
jno
push
and
fcom
pop
mov
cmpsb
loop
arpl
sbb
lret
nop
mov
push
dec
imulb
jae
jnp
xchg
mov
push
mov
insl
sub
xchg
mov
lock
arpl
xor
mov
std
or
xchg
sub
mov
pushf
addr16
clc
push
dec
je
lret
pop
mov
xchg
jp
ss
add
add
sub
bnd
fistpl
test
ret
inc
test
arpl
call
notb
jle
pop
shlb
mov
mov
or
shr
sbb
clc
sbb
lock
inc
push
jge
test
push
jmp
xor
aaa
jg
out
aam
inc
mov
arpl
xchg
inc
test
and
add
int
jno
sub
cli
in
mov
and
int
adc
xor
movsb
scas
mov
in
mov
sti
std
and
out
cld
stos
mov
pop
push
dec
int
loop
jp
fs
and
out
mov
icebp
pop
and
pop
into
icebp
out
cmpsb
mov
xorb
push
data16
add
jmp
mov
and
sbb
stos
sbb
sbbb
cmp
sbb
ret
pop
rcll
cmp
aad
pusha
fcomps
imul
daa
xchg
dec
adc
xor
fcmovnbe
xor
push
mov
xchg
mov
mov
mov
shrl
lods
daa
lock
dec
jno
mov
int3
mov
inc
mov
xor
in
mov
daa
repz
test
outsl
pop
pusha
sbb
or
hlt
sub
scas
pop
es
imul
jge
rcl
mov
add
xor
ret
mov
jecxz
xchg
ret
nop
ret
fsubrs
mov
mov
lcall
out
mov
ret
shlb
mov
iret
mov
push
cmp
js
loope
inc
mov
insb
lcall
add
test
pop
push
jl
adc
xchg
mov
popf
insb
push
in
fcmove
jne
push
push
push
gs
jns
lea
mov
push
jge
inc
xor
adc
mov
jb
add
fcomip
into
inc
inc
mov
into
addr16
cltd
pop
in
pushf
lods
mov
mov
popf
lcall
cli
xor
mov
icebp
shll
push
push
pop
scas
ljmp
ds
lret
xchg
mov
movsb
jl
mov
and
lock
cmp
cmp
dec
fdivl
inc
adc
call
mov
cmp
leave
stos
and
movsb
rorl
inc
add
mov
outsl
push
repz
and
sub
push
and
mov
cwtl
fs
mov
push
cmc
sbb
jb
mov
mov
sti
pusha
imul
xor
aam
sub
sbb
push
xchg
aam
sub
mov
or
fwait
jne
popl
das
sbb
fstpl
ds
clc
ljmp
mov
mov
call
sahf
sub
movsl
dec
cld
test
mov
ss
mov
adc
xchg
sbb
push
jg
mov
imul
mov
ficoms
mov
aam
jle
inc
int
pop
mov
pop
mov
in
cmpsb
addr16
add
popf
inc
jp
fwait
popa
add
scas
outsb
jg
sbb
loop
sbb
scas
jl
jno
sarb
add
pop
and
aaa
jnp
dec
adc
in
popa
add
sub
lods
mov
dec
pop
in
sarb
imul
cli
cmp
xorl
lock
aad
add
dec
pop
mov
xchg
xor
dec
dec
add
ret
jne
dec
adc
in
cmpxchg
in
ds
stos
aam
ret
or
sub
jnp
cmp
fcompl
push
mov
dec
fistps
add
mov
mov
dec
mov
mov
pop
dec
or
push
sub
mov
mov
adc
xchg
xor
mov
cli
inc
cmp
mov
lds
pop
insl
addr16
pop
ficompl
ret
cltd
jge
mov
mov
fisubl
std
aad
sbb
bnd
push
dec
or
test
xor
ficomps
sar
imul
rorb
push
sbb
push
cmpsb
ds
lcall
jle
pop
push
pop
cmpl
aas
inc
add
mov
imul
imul
iret
cmovp
add
mov
stos
out
jge
sub
cmpsl
out
push
mov
sti
mov
call
orb
inc
daa
stos
ss
rep
push
pushf
jb
push
sbb
jnp
clc
cmp
mov
lret
jno
repz
jg
enter
lods
xchg
push
rorb
in
cld
arpl
cltd
mov
push
mov
fcom
sub
cld
xlat
jge
dec
sbb
subl
cmpl
mov
insl
push
fldl
push
iret
inc
imul
ja
mov
xchg
sub
lret
lock
push
and
sbb
insb
lods
xchg
and
push
lods
dec
jb
pop
pushf
cmp
push
iret
aam
call
add
lret
pop
test
je
mov
xchg
test
js
movsl
pusha
orl
repz
push
adc
inc
cld
mov
jns
pop
jns
cltd
jno
arpl
mov
int3
aad
mov
pusha
fstpl
adc
std
test
negb
mov
jno
pop
xor
push
fbstp
inc
or
imul
repnz
push
cmp
xor
pop
xchg
jecxz
lds
jl
push
lods
sub
jne
cmp
xchg
sub
xchg
xor
ja
cmp
dec
inc
mov
je
sub
pusha
and
mov
adc
fcomp
fwait
call
inc
xorb
pop
cld
aad
cwtl
in
jl
dec
outsl
scas
xor
imul
dec
lods
jno
push
call
inc
nop
inc
dec
sbb
xlat
mov
inc
shll
lds
arpl
mov
jne
aas
pop
decb
mov
add
push
add
add
pop
mov
mov
ret
loopne
out
loopne
jnp
insb
mov
call
cld
lds
dec
push
lea
xchg
sti
cmp
je
jmp
and
push
aas
arpl
push
or
or
aad
xchg
cmp
xchg
dec
les
mov
insb
adc
addb
or
xor
cmpl
and
loop
push
dec
subb
push
add
repnz
add
cmp
daa
or
inc
mov
xor
cli
cli
in
cmp
inc
enter
lods
int
xor
stc
in
cmpsl
add
cmpb
sub
sub
ss
rcl
xchg
cmc
pop
sbb
pop
adc
mov
pushf
movsl
pop
or
ss
pop
dec
pushf
sub
je
aam
mov
or
xor
sbb
es
pop
pop
pushf
pop
jp
ret
dec
out
iret
xor
mov
pop
mov
out
arpl
and
pop
jo
sti
cmp
mov
test
jnp
lods
sar
test
or
mov
out
xor
dec
adc
inc
xchg
xor
inc
cld
or
inc
dec
push
aam
cli
pushf
mov
pop
jno
or
cmpsl
cmpsl
rcrl
icebp
or
mov
xchg
in
adc
mov
insb
or
out
out
inc
sbb
insl
fsubrs
ja
dec
enter
stos
adc
xchg
ljmp
cmp
sarl
stos
adc
lock
sbb
and
or
stos
fisttpll
js
mov
mov
cmp
stos
mov
mov
fimuls
or
incb
imull
pop
sbb
dec
dec
sub
pop
and
lret
push
push
sub
sahf
mov
push
pop
push
cmc
push
nop
addr16
repnz
cmp
and
push
js
dec
and
push
scas
outsl
ds
movsb
fs
cmpsb
das
ret
lea
ret
into
dec
and
jge
ljmp
fwait
pop
mov
sub
sub
es
mov
jp
add
mov
mov
push
cmc
mov
arpl
dec
clc
popf
push
movb
pop
jge
xor
ja
mov
adc
outsb
sub
scas
mov
mov
or
adc
pop
inc
mov
fimull
jne
inc
negl
jns
pop
mov
mov
jmp
jecxz
cwtl
fs
mov
cld
cmpsb
inc
mov
mov
mov
in
jo
jle
or
mov
fisubl
or
subl
jae
jae
add
pop
insl
pop
repnz
pop
ss
xlat
arpl
mov
inc
fs
das
daa
pop
lods
lahf
mov
mov
loopne
fidivl
fidivs
test
push
dec
cmp
daa
test
icebp
gs
xor
in
push
into
orb
pop
cld
ret
pop
stc
pop
mov
mov
mov
inc
les
fsubs
call
aam
into
xor
jb
arpl
pop
lods
ja
outsb
inc
test
popa
sub
lods
mov
mov
pop
sub
enter
jns
cmpsb
dec
mov
ljmp
in
lret
ds
pop
aas
jp
mov
mov
pusha
das
enter
in
cmc
add
cmp
loop
hlt
and
push
mov
imul
cmp
ret
add
ret
cmp
mov
in
inc
pop
mov
or
jbe
push
pop
cmp
pop
and
push
lea
push
mov
das
in
out
loope
xchg
mov
lahf
and
pop
inc
clc
repnz
or
dec
mov
mov
mov
and
aas
loop
sbb
mov
inc
push
or
cs
fs
sti
inc
jno
or
lds
les
jno
xchg
sbb
adc
fsubrs
jno
mov
mov
add
and
pop
or
xor
add
sub
into
movsl
and
cmp
aad
dec
nop
fnstcw
mov
mov
jmp
pop
dec
rcrl
iret
lods
xchg
pop
xchg
repz
push
cld
lods
mov
in
in
filds
mov
add
cmp
cwtl
addb
mov
mov
mov
sti
pop
outsl
fldenv
sub
push
lods
popf
xor
stc
stos
xor
sub
sub
xlat
aaa
mov
lret
in
out
mov
mov
cmpsb
mov
jne
stos
inc
std
sti
test
clc
mov
es
out
icebp
aam
rcrl
xor
push
jno
repnz
jo
jmp
jb
push
lret
mov
cmp
int3
xchg
jns
dec
adc
jae
and
adcl
sbb
fsubs
aaa
data16
leave
mov
inc
mov
jbe
xor
pop
stos
inc
sub
jecxz
inc
jo
sub
stos
int3
jne
xchg
es
rcll
rclb
mov
loopne
loopne
xchg
push
sbb
pop
clc
fistpll
xor
je
pop
jge
dec
xchg
addr16
imul
inc
call
pop
add
jo
pop
adc
ret
pop
sbb
es
sti
jnp
fnstenv
sti
xorb
and
insb
jge
mov
gs
pushf
mov
pop
int3
scas
fmuls
les
arpl
push
lahf
add
lret
jne
movsl
push
cli
xor
into
call
imul
sbb
cwtl
inc
push
bound
aad
sub
imul
bound
cmp
movsl
jb
ds
repnz
mov
shll
add
mov
nop
aas
ja
add
ljmp
pop
pushf
scas
dec
add
icebp
mov
sbb
adc
mov
sub
std
or
mov
inc
outsl
push
outsl
mov
or
lret
mov
xchg
fistl
adc
xchg
mov
shrl
and
mov
sub
sub
clc
jecxz
dec
notb
mov
in
addl
and
mov
cmp
pop
add
cli
xor
in
out
pop
jg
aas
fwait
push
mov
sbb
pop
es
lock
adc
pop
push
add
ljmpw
outsl
add
loopne
mov
mov
push
inc
push
jne
add
lcall
mov
jns
sub
ds
xchg
sub
push
mov
outsl
sbb
or
lds
inc
movsl
fdivl
mov
loope
dec
out
adc
or
lock
cmp
mov
cmp
push
push
ret
lods
push
and
or
outsb
or
and
mov
jae
sub
jnp
dec
pop
je
enter
and
push
aam
add
pop
jne
cmp
bound
mov
imul
cmp
clc
adc
mov
mov
mov
std
xor
aaa
testb
in
push
add
jge
ret
aas
adc
imul
cmp
xor
movl
outsb
push
or
pop
sbb
mov
aas
xchg
dec
daa
push
dec
sub
loopne
in
addr16
inc
leave
sbb
ss
xlat
test
jb
imul
add
pusha
aad
and
ret
pop
sbb
hlt
push
and
push
mov
loopne
cmp
repz
add
mov
pop
jbe
je
xchg
aad
mov
dec
shl
call
cmc
jp
adc
adc
pop
xlat
enter
mov
and
mov
mov
or
inc
push
jp
mov
push
dec
movq
adc
test
jle
push
int3
jmp
push
scas
aaa
shr
xchg
cmp
and
pop
enter
cmp
sbb
jge
jmp
lea
stos
and
push
push
adc
push
jbe
arpl
xor
jo
jns
outsl
lods
mov
push
imull
adc
lock
add
sbb
sbbb
scas
aam
mov
cs
xchg
adcl
jbe
jle
shr
cld
push
cmp
push
xchg
jo
mov
decb
popa
dec
push
sbb
sbb
mov
aas
sbb
stos
and
xchg
push
jmp
jmp
push
add
bound
push
mov
mov
ds
loopne
adc
inc
insb
xor
cmpsb
nop
call
loopne
cmp
mov
into
mov
mov
lock
jb
sbb
push
daa
xor
insb
cmpsl
mov
xlat
jle
mov
sbb
xchg
cmpsb
hlt
xorb
cmpsb
inc
pop
cltd
sub
push
clc
xchg
enter
cmc
and
jb
sub
jae
mov
inc
cld
ret
push
dec
cs
push
xchg
push
cmpsb
pop
mov
jnp
mov
iret
mov
xorb
hlt
loopne
cmp
rcrb
ja
imul
dec
orb
popa
and
add
int3
out
or
mov
xchg
add
xchg
and
inc
test
pop
stos
sbb
int
xor
xor
mov
cmpsl
imul
adcb
mov
notl
adc
gs
in
adc
mov
aam
push
in
jae
mov
cmp
dec
lret
pop
out
out
pop
fwait
mov
mov
fldcw
pop
adc
leave
lcall
in
mov
push
call
pop
insb
pop
mov
pusha
int
scas
decl
rol
test
fwait
jecxz
xorb
or
cmp
cmp
sub
sbb
mov
pop
mov
mov
fs
adc
jne
jg
dec
mov
mov
inc
mov
and
hlt
imull
mov
sub
xor
pop
outsl
pushf
xchg
stos
test
shlb
int3
jl
xchg
test
mov
mov
dec
adc
push
mulb
imul
sub
xor
movsb
inc
xor
js
std
jb
cld
iret
imul
cmp
or
dec
in
das
xchg
jbe
sbb
lret
dec
add
jg
inc
jae
inc
mov
sub
in
sub
stc
mov
hlt
test
frstor
push
jmp
mov
cmpsl
nop
out
xor
sub
push
adc
test
push
jne
jg
sub
in
bound
inc
popf
mov
iret
mov
arpl
cmpsl
xchg
fisubs
in
xor
cmp
push
cwtl
adc
push
push
ret
mov
xchg
mov
jp
jecxz
jmp
add
enterw
mov
popf
sbbl
inc
pop
or
or
xchg
sub
push
mov
cmp
dec
mov
xchg
fbstp
imul
stc
inc
dec
mov
mov
pop
clc
pop
fwait
cmc
adc
sub
xor
sbb
and
dec
mov
shrl
fbld
xchg
notb
push
les
or
fcomi
sahf
mov
sbb
dec
add
pop
jmp
es
mov
imul
sub
insl
popa
jae
sub
add
mov
ja
adc
icebp
mov
mov
or
cltd
outsb
push
adcl
and
hlt
sti
mov
or
rorb
cmpsb
repnz
xor
jnp
inc
test
mov
and
pop
adc
xor
adc
int
cmp
dec
shlb
ret
mov
push
outsb
jae
mov
aam
dec
hlt
add
outsb
lcall
enter
jp
leave
aas
sbb
jl
adc
or
xchg
pushf
ja
dec
and
dec
pop
lds
mov
ss
in
lea
repnz
lods
cli
test
add
dec
filds
sbb
jl
stos
and
xor
inc
pmaxub
cwtl
lods
add
aaa
lcall
les
mov
mov
mov
andb
xchg
push
add
loop
mov
adc
fcomp
dec
ljmp
dec
in
pop
insb
xchg
out
push
out
cmp
mov
add
xor
sti
ret
xchg
xchg
cmp
sbbb
mov
mov
sub
ss
fwait
cmp
scas
aam
scas
hlt
xor
push
sarl
in
aad
mov
jae
inc
add
mov
mov
scas
sbb
xchg
fs
mov
in
dec
mov
add
xchg
xchg
shlb
out
cs
test
xlat
addr16
or
xchg
popa
outsl
frstor
jae
loopne
or
xchg
mov
pop
mov
xor
jl
addr16
mov
cld
adcb
mov
das
pop
shrl
stc
fdivs
mov
and
push
sarb
xor
cmp
lea
and
imul
jecxz
lcall
test
pop
outsb
mov
mulb
cli
adc
loope
repnz
or
pop
inc
aaa
xor
test
movsl
mov
xchg
aas
sbbl
xchg
fimull
sbb
sbb
mov
xlat
push
movsb
sarl
lret
pop
ja
mov
lret
cmp
and
je
xorl
fimuls
je
xor
xor
sbb
stc
and
xor
xchg
aam
out
inc
sub
dec
sbb
out
mov
push
clc
les
xchg
pop
stos
iret
mov
arpl
aaa
iret
minps
and
dec
movsl
imul
out
xchg
mov
dec
mov
sbb
or
pop
dec
sbb
jns
pslld
js
sbb
pop
fs
push
push
push
hlt
mov
test
jo
ret
das
in
rcrl
pusha
xor
push
add
das
mov
leave
push
sub
push
pop
not
ret
xor
dec
cli
movsl
imul
dec
or
lds
jbe
pop
push
insl
mov
sub
movsb
iret
sub
rolb
dec
jb
test
fidivl
jg
cmp
dec
fwait
out
jge
xor
add
jmp
mulb
pop
pushl
sub
lcall
lcall
or
pop
mov
sbb
add
push
jb
pop
aaa
pop
sbb
sbb
or
mov
sbb
mov
cmp
dec
jge
in
or
and
int3
mov
xlat
rorl
lret
jmp
test
or
adc
jo
dec
or
je
jp
push
cmp
mov
insb
jle
movb
test
stos
call
sbb
aas
pusha
fbld
sub
fdivrl
loop
cmpsb
cmpsb
loop
lock
pop
scas
je
inc
sub
mov
sahf
scas
xchg
mov
xchg
rorb
stc
nop
adc
std
test
or
stos
repz
cwtl
jns
adc
pop
xchg
mov
fildl
ljmp
mov
inc
jmp
iret
and
pop
enter
incb
jle
mov
mul
cmp
pop
stc
cmpl
and
loop
into
push
add
cwtl
ds
or
insl
and
dec
add
push
and
mov
pop
sahf
pop
ljmp
rolb
enter
jne
inc
enter
outsl
mov
fidivl
mov
pusha
lock
push
insl
mov
jns
pop
popf
mov
sub
pop
movsl
shll
aas
cltd
repz
outsl
mov
mulb
inc
lret
jg
inc
jae
or
push
dec
scas
adc
push
shrb
add
add
xor
jmp
jbe
pop
mov
bound
push
loope
imul
cltd
mov
ret
cmp
test
ja
les
mov
dec
adcl
jmp
xchg
jp
mov
jecxz
and
jge
adc
and
xchg
mov
add
popf
leave
in
bound
arpl
push
bound
xchg
andl
sub
rol
cltd
jb
jne
adc
dec
jns
jl
xor
cmpsl
inc
dec
je
lods
mov
lock
orl
and
and
push
sarl
jl
call
push
mov
in
subl
push
stos
xor
data16
mov
xchg
mov
xchg
repz
arpl
xchg
pop
xchg
lds
mov
cltd
inc
adc
xchg
mov
adc
loopne
xchg
out
repz
xor
shlb
cli
out
or
cld
xor
push
cmpsl
add
dec
mov
inc
into
dec
adc
dec
push
jmp
inc
inc
hlt
fwait
or
imul
imul
sub
cmpsb
mov
gs
idivl
lahf
cltd
mov
xchg
mov
xchg
jnp
stos
add
into
jae
and
pop
mov
aad
out
jae
rorl
xchg
les
scas
xchg
out
push
xchg
div
scas
jae
fwait
fwait
jmp
jo
or
outsb
pop
mov
lret
push
in
pop
push
adc
divps
xor
cmp
sbb
adc
dec
sub
scas
xor
ret
mov
cld
int3
add
lret
pop
notb
push
movsb
push
cmpsl
mov
je
mov
or
int
daa
mov
xchg
jmp
outsb
mov
arpl
xchg
data16
rcrb
xor
mulb
jno
int3
pop
rol
leave
sub
add
pushf
dec
mov
jnp
outsl
scas
cs
clc
or
int
dec
push
pusha
jbe
stos
cmp
fmull
sbb
push
cmp
and
xor
in
sub
repnz
popl
sbb
popf
repnz
xor
cmp
dec
push
jne
pop
test
movsb
sub
fimull
cld
lea
rcrl
in
inc
into
cmp
jae
xor
in
in
stos
and
outsl
adcl
std
jle
pusha
ret
test
lret
pushf
aam
sbb
mov
aad
push
hlt
imul
jbe
aam
dec
cmpsl
mov
outsb
pop
mov
pop
inc
xchg
sbb
mov
movsl
mov
inc
or
sub
add
or
mov
jmp
sbb
div
adc
or
pushf
add
int3
jb
xchg
jns
lods
lcall
mov
xor
out
ss
pop
cmp
ljmp
jno
inc
inc
mov
daa
fildll
mov
jno
repnz
mov
and
lock
mov
nop
mov
cltd
out
cwtl
cmp
arpl
movsb
or
cli
adc
ljmp
ds
or
mov
inc
lods
add
fucomip
dec
popa
cmp
pop
outsb
and
pop
imull
or
jl
and
cs
sbb
into
mov
daa
les
cmp
cmp
test
imul
into
mov
push
iret
mov
push
mov
mov
push
jbe
mov
xor
sahf
aam
pop
mov
xor
xchg
lds
in
jg
dec
aaa
mov
cmp
push
adc
shrl
out
inc
mov
xchg
ret
xor
mov
pop
cmpsb
fcomps
mov
cwtl
outsl
or
cmp
jle
test
or
inc
shrb
insb
movsb
outsb
iret
xor
test
jno
inc
lds
add
lahf
lahf
cltd
jle
ss
cli
push
xchg
xor
jo
hlt
test
xchg
fistps
jp
xor
int
jo
pusha
leave
inc
adc
mov
xor
sub
pop
lahf
clc
out
inc
xchg
dec
pop
add
pop
imul
movsb
cmpsb
pop
cmpsl
xchg
pushf
rclb
jg
lds
cmc
sub
or
push
mov
cmp
mov
lods
inc
dec
into
mov
push
mov
sub
pop
mov
add
es
inc
rcr
scas
in
add
mov
mov
mov
mov
push
jl
es
and
jg
pusha
dec
mov
xchg
mov
pop
or
je
xor
mov
mov
ret
push
bnd
or
mov
popa
jae
cmpsl
or
push
inc
sub
imul
mov
sub
jbe,pn
fnsave
mov
xchg
call
mov
into
mov
pop
and
insb
dec
push
lcall
popf
mov
sti
xchg
test
pop
mov
xor
mov
add
mov
js
or
lret
adc
data16
jo
cmp
clc
xchg
mov
pop
mov
mov
jae
or
sub
jp
iret
sahf
xor
jns
add
jl
fcoms
mov
xchg
cmp
pop
sbb
call
and
ja
push
dec
push
fdivs
shlb
mov
lcall
out
shrl
mov
jb
jns
push
pop
mov
dec
add
ret
jecxz
mov
ret
sub
arpl
insb
mov
or
mov
popa
mov
and
int
dec
push
mov
fisubrl
and
ret
pusha
loopne
lds
fwait
call
dec
les
out
fdiv
adc
call
jbe
jno
xorb
fwait
enter
nop
xchg
insl
add
nop
cmc
adcb
lea
movb
mov
lock
jl
icebp
cmp
orb
pop
adc
and
stos
in
push
inc
mov
cmc
or
mov
cltd
dec
adc
mov
xorb
mov
pop
test
push
sub
mov
fnstsw
roll
jnp
lea
and
mov
aad
jl
push
loopne
out
mov
sub
fmuls
xor
jmp
mov
pop
lods
jnp
lahf
fwait
pushf
cmp
mov
shl
adc
inc
xlat
mov
into
add
lahf
pusha
xlat
sbb
jo
sbb
arpl
and
sub
add
push
xchg
pop
xadd
leave
mov
jge
sbb
fmull
xchg
ljmp
rcrl
add
xor
clc
add
cmp
jo
popf
in
repnz
fcomps
repnz
xor
cli
call
sbb
int
xor
ljmp
pop
mov
imul
cli
jl
les
std
push
push
orb
or
xor
div
add
pop
repz
shll
mov
js
lcall
sbb
rcl
sbb
das
scas
mov
dec
mov
push
push
and
cmp
scas
jge
push
mov
arpl
out
cltd
mov
push
xchg
dec
jg
jg
popf
xchg
cmpsb
mov
add
leave
push
out
dec
jns
add
sub
dec
adcb
and
shl
movsb
cmp
insl
idivl
xorb
popa
sbbb
dec
outsb
cmp
cmpsb
sub
sbb
sti
jl
in
and
aas
and
sbb
bnd
sbb
or
xor
popa
sub
sub
sbb
daa
inc
arpl
test
lret
fistpll
ret
mov
or
inc
sub
sarb
push
sub
cmp
bnd
xchg
sbbl
fnstenv
adc
arpl
xorb
std
mov
aas
or
into
rorl
lret
nop
sub
std
mov
loope
jmp
pushf
inc
cmp
inc
dec
int
ljmp
insb
jl
add
cli
pop
cmp
ret
pop
ss
cmpsb
out
aas
repnz
insl
loopne
outsl
and
leave
jb
and
insb
adc
test
add
inc
sub
push
or
dec
insl
xchg
stos
mov
push
cmc
xor
andl
add
aam
movsb
mov
das
add
fiaddl
mov
pop
mov
mov
sahf
xchg
nop
idiv
or
cld
fdivl
or
rclb
jbe
rcrl
cmp
xchg
pop
jp
jns
adc
addr16
sahf
mov
mov
dec
imul
imul
sbb
icebp
test
test
push
xchg
mov
mov
pop
pop
push
sub
leave
test
push
movsl
push
mov
js
stos
xchg
push
adc
jo
iret
sub
shrb
lods
xor
cmp
in
movsl
dec
push
add
aas
cmp
dec
add
test
pusha
test
dec
cs
mov
mov
cmp
push
loope
mov
icebp
push
sbb
xchg
pop
ja
inc
bound
adc
cmpsl
in
xchg
pop
lret
test
aas
outsb
rorb
dec
aad
mov
mov
in
inc
and
leave
int
lea
sub
sbb
mov
pop
lock
test
add
push
pop
hlt
jmp
loop
lea
leave
aas
xor
add
leave
sbb
enter
adc
push
lret
mov
shrl
faddl
xor
lcall
insb
jl
push
mov
adc
mov
dec
cmp
sti
xchg
subl
mov
sub
stos
xor
ja
shll
jecxz
ja
rcrl
fstps
popl
jne
adc
adc
shrl
sahf
in
clc
sarb
fmuls
decb
ljmp
mov
stc
pushf
cltd
fadds
dec
cmpb
mov
cmp
arpl
pushf
adc
dec
mov
rcl
stc
xor
mov
jo
mov
sub
into
mov
test
pop
mov
sub
subl
and
mov
lcall
xchg
mov
jmp
ficoml
addl
popf
mul
push
xchg
dec
into
rcrl
sub
sbbl
ret
fnstsw
add
push
test
push
lock
je
sub
loop
xor
adc
jmp
xor
je
jae
loopne
out
push
dec
bound
push
mov
xor
rclb
xchg
or
xor
je
inc
pop
cmp
shll
sbb
sbb
dec
xchg
jnp
jns
sbb
or
push
das
pop
mov
jbe
mov
push
aas
fildl
xchg
sub
mov
gs
adcl
inc
sub
dec
inc
mov
sub
pop
movsl
sbbl
ret
push
jl
in
imul
mov
add
add
je
sbb
dec
lock
mov
ret
pop
in
fmul
repz
pop
pop
loopne
adc
lock
push
xor
inc
mov
jae
andl
mov
xlat
subl
cld
shrl
push
sub
loopne
or
icebp
and
repz
push
sbb
pusha
ljmp
xchg
fsubl
arpl
fidivrl
mov
xchg
cmp
adc
les
or
leave
push
pop
enter
push
adc
jne
lods
outsl
jle
aam
lds
inc
sub
imul
xor
xchg
pop
xchg
add
adc
push
push
je
test
loope
cli
loop
xchg
add
aas
je
or
imul
or
jmp
mov
daa
insl
inc
dec
fnstcw
das
loope
in
pop
fistpll
jg
push
call
das
fs
negb
sub
xor
xor
inc
xor
jg
rcrb
dec
lcall
jb
mov
es
cmp
out
and
sbb
out
lret
loope
loopne
bnd
inc
fnstsw
jae
pop
mov
add
ja
popf
sbb
xchg
adc
into
or
mov
add
jp
xchg
cmp
add
dec
cmpsb
jle
dec
dec
lods
pop
jo
outsb
loop
xchg
mov
pop
subb
or
jnp
lods
inc
adc
adc
cmc
pop
addr16
lcall
and
ret
xchg
and
sub
or
jnp
test
jnp
test
or
xchg
int3
push
mov
out
pop
push
scas
data16
mov
sub
repnz
mov
cmc
cmc
loop
and
add
push
sub
xchg
xchg
sahf
lahf
fdivs
fsubs
cltd
or
xor
push
cmpsl
dec
mov
dec
cltd
mov
or
fmuls
test
fs
and
mov
pop
add
add
jae
iret
dec
lahf
nop
xor
das
out
mov
dec
movsl
cmp
addb
cmc
int
fsubrs
ret
fbld
or
xchg
aad
mov
push
pop
jne
mov
fldenv
xchg
and
sbb
lret
mov
and
jl
pop
sbb
subl
dec
mov
adc
ret
cltd
dec
pusha
mov
adc
xor
inc
test
pop
shr
mov
subl
ja
xchg
or
lods
mov
outsl
fiaddl
mov
cld
xor
mov
pushf
jo
jp
imul
pop
bound
and
inc
pop
rcrl
add
and
inc
in
clc
inc
mov
and
jge
rol
shlb
dec
sub
pop
dec
enter
jle
pop
mov
repz
jno
je
inc
push
fistl
out
rcrl
xor
and
fdivrl
mov
jb
icebp
orl
addr16
jl,pt
push
ljmp
fistpl
ret
pop
cmp
aaa
test
inc
adc
ret
sbb
sahf
imul
addb
stos
mov
mov
cli
cmp
mov
movsl
hlt
adc
scas
push
adc
jmp
mov
mov
icebp
push
mov
push
sub
les
push
add
lock
lret
mov
mov
adc
sbb
cmp
xchg
outsl
push
wrmsr
out
arpl
cmp
pop
pop
jnp
test
jae
cli
jno
fistl
mov
mov
xor
lret
cli
fisttpl
rcrb
cli
jge
or
fwait
lock
adc
mov
cmp
int3
xor
loope
icebp
lock
lea
jne
dec
sahf
or
imul
adc
xchg
pop
dec
mov
incl
mov
cmc
aas
int
fistps
dec
ss
test
ficoms
cmp
mov
or
daa
and
sub
adc
iret
jl
adc
outsl
es
ds
mov
mov
xchg
adc
arpl
dec
mov
jo
vpunpcklwd
rcrb
mov
mov
mov
inc
sub
data16
add
ljmp
xor
mov
jge
pop
pushf
adc
or
sbb
dec
aaa
fsubs
ds
fxch
shr
insl
pop
jle
push
shl
jle
das
lret
ja
pop
inc
xchg
sbb
xor
ss
jle
rcll
and
jae
insb
mov
xor
setne
sbb
adc
sub
loop
sbb
iret
xchg
lret
xor
dec
sbb
xchg
jnp
mov
and
pop
or
int3
pop
or
cmpsl
shlb
mov
mov
sbbb
aas
jle
jb
push
xor
jnp
fdivrl
mov
faddl
aaa
aam
cmp
bound
xchg
adc
pop
push
insb
jnp
stos
rorb
rorb
fisttpl
pcmpgtw
xchg
jb
inc
in
mov
mov
ret
xlat
push
ja
jne
lods
pop
mov
cmpsl
push
enter
cmp
lods
xchg
out
xor
pop
add
xor
scas
fiaddl
xor
pop
mov
push
push
dec
and
cli
testb
subb
addr16
scas
pop
lods
sti
test
pop
sbb
imulb
xchg
pop
call
icebp
sbb
addr16
mov
mov
sub
push
xchg
gs
mov
fxch
fdivrl
data16
xchg
icebp
adc
loope
and
je
insb
xor
or
xchg
sub
mov
lret
inc
inc
lcall
jmp
pop
sbb
xor
jb
jbe
inc
mov
push
jge
mov
mov
pop
arpl
js
pop
xlat
clc
cwtl
lret
pop
out
mov
dec
xchg
jmp
mov
ret
fcoml
cltd
das
aam
stos
cmp
pop
addl
jge
inc
mov
fsts
scas
xchg
jmp
aaa
dec
in
sub
hlt
add
pop
fistpll
fstl
ljmp
rorb
mov
mov
popa
cmpl
mulb
das
cmp
push
and
mov
mov
imul
hlt
cmp
adc
in
mov
jb
sbbl
xchg
xor
test
mov
pop
ret
sub
mov
inc
adc
jl
xchg
test
adc
fwait
jge
in
mov
push
add
ret
mov
add
pusha
stos
mov
fstps
rcll
mov
pop
js
xchg
in
pop
lcall
fsts
jp
enter
pop
or
or
and
cmp
lahf
mov
push
mov
loopne
pop
fcmovb
mov
xor
arpl
repnz
decb
add
ss
movsl
lods
scas
loop
ljmp
xor
cmp
loopne
xorl
ret
jb
lds
repz
dec
jle
dec
and
mov
mov
lret
test
dec
sbb
testl
cmpsb
sub
cmc
pop
dec
mov
sar
ss
dec
push
addr16
pop
std
sub
imul
add
jbe
push
adc
bound
mov
orl
addr16
rolb
sbb
mov
hlt
test
loope
mov
xor
or
sahf
test
adc
ljmp
mov
je
mov
lret
mov
mov
enter
imul
push
sub
lods
mov
mov
test
repz
fmull
jle
ljmp
out
repnz
mov
dec
adc
fdivr
inc
pop
ret
aad
add
je
inc
push
jmp
add
les
xchg
dec
inc
out
rolb
adc
dec
pop
aam
push
jl
jp
jb
xor
jmp
out
sub
xchg
test
rcr
es
mov
inc
pop
inc
lds
and
mov
lcall
push
adc
mov
sarb
fdivr
pop
out
mov
mov
subb
inc
jg
aam
pop
jp
push
xor
lret
fs
or
sub
pop
loop
adc
add
xchg
outsb
mov
mov
xor
nop
dec
dec
aas
pop
fnstenv
mov
iret
inc
iret
addl
inc
test
sarb
and
cli
xchg
mov
jp
inc
inc
pop
cmp
call
inc
call
adc
push
or
jmp
mov
negb
movsl
orb
cmp
mov
std
adc
pop
data16
fisttpl
or
or
jcxz
je
jo
mov
out
dec
rorb
cltd
int3
pop
and
push
mov
dec
push
in
test
dec
outsl
stos
xchg
xchg
into
lock
mov
es
inc
or
aad
mov
popa
or
ljmp
dec
jno
sbb
push
data16
xor
fwait
es
xor
fwait
imul
xchg
daa
sub
test
add
pop
push
cwtl
fldenv
aas
sbb
aas
push
stc
pushf
lods
pop
mov
xchg
lods
iret
jno
jp
lcall
pop
movsb
adc
fsub
dec
mov
fcoml
fcmovb
cltd
adc
test
call
stos
inc
out
push
adc
inc
pop
in
xor
dec
repnz
jne
in
stos
dec
jns
mov
or
adc
adc
inc
inc
cmp
pop
dec
pop
dec
mov
lret
adc
cmp
xchg
inc
jno
popf
mov
jne
test
push
adc
jne
dec
iret
add
loope
sbb
repnz
lret
jle
test
sbb
add
and
xchg
test
shrb
xor
addb
sti
fmull
in
insb
mov
xor
pop
scas
aaa
mov
movsl
iret
movsb
cs
test
test
scas
jmp
jecxz
mov
scas
or
test
sbb
mov
rcll
data16
dec
mov
hlt
adc
sub
sti
jbe
ds
or
pushf
push
jle
into
cmpsb
ljmp
aas
xchg
hlt
daa
jnp
sbb
clc
repnz
jne
clc
flds
push
lret
aad
jno
cli
mov
in
sub
pop
adc
into
fcoml
addr16
jns,pt
cmc
pop
mov
leave
pop
dec
jbe
lods
push
cmpb
sysret
nop
dec
inc
sbb
lea
lock
fwait
inc
jmp
shr
pop
mov
aaa
dec
lcall
cmp
sahf
cmpsl
cmp
inc
inc
sbb
and
scas
test
pusha
mov
stos
daa
cmpsb
xchg
xchg
xor
sub
fdivr
mov
push
out
out
push
out
pusha
aas
outsb
rcl
or
in
repnz
jecxz
cmp
aam
adc
loop
shlb
gs
or
xor
mov
mov
pop
mov
sahf
out
xchg
lods
sub
outsb
insb
xor
arpl
push
mov
jmp
rcrb
adc
insb
fidivs
shlb
xor
sahf
jmp
lcall
repz
call
repz
ficoms
ljmp
lea
sbb
stos
in
and
or
adc
inc
ss
pop
or
mov
testb
inc
jge
push
jmp
les
or
inc
mov
sbb
adc
int3
lods
or
js
mov
jno
lea
sub
inc
scas
pop
imul
sbb
sbb
mov
scas
sbb
outsb
clc
sbb
je
cmp
fdivp
in
fiaddl
mov
push
or
adc
mov
inc
push
and
mov
sub
xchg
in
stc
mov
xchg
add
bound
cmp
dec
das
sub
sbb
mov
or
sub
mov
dec
pusha
jo
dec
dec
mov
xchg
sub
mov
push
movsb
repnz
mov
cmp
in
mov
outsl
mov
push
in
das
push
inc
dec
mov
daa
fisttpll
loop
inc
fcmovu
out
cmp
or
mov
sub
cmp
cs
xor
aad
out
dec
sbb
mov
aam
xchg
pop
and
stos
push
pop
das
rclb
pushf
cmp
popa
fimull
enter
cmp
pusha
and
mov
testb
xor
mov
or
test
xchg
movsb
inc
dec
std
jae
mov
ds
notl
pop
inc
js
pop
movsb
mov
mov
mov
jo
cmp
or
mov
adc
xor
mov
movl
jb
ljmp
clc
add
xor
sahf
repnz
cltd
bnd
cwtl
pop
incb
sbb
cltd
push
sbb
jg
popa
dec
cmp
outsl
ljmp
xchg
dec
dec
add
push
mov
mov
nop
xchg
cmc
pop
and
daa
es
xor
fwait
jo
xchg
movsl
je
or
sub
lea
sub
mov
jnp
enter
xchg
push
xor
std
sbb
lahf
test
sub
test
sbb
xchg
jne
repnz
pop
scas
sub
fistpl
push
repz
sub
js
sbb
mov
fld
aas
in
cmp
iret
insb
decl
xchg
ja
jg
inc
imul
inc
loop
stc
jmp
or
js
sub
lahf
dec
or
leave
mov
sarb
inc
sub
insl
cmpsb
fs
cmpb
inc
sbb
sbb
mov
in
jnp
add
jne
lods
jnp
mov
jo
lods
cmp
mov
xchg
shl
push
and
jg
add
sub
gs
or
mov
add
jmp
dec
jae
bound
sub
sub
pop
and
sbb
test
subl
push
xchg
cmp
fstps
pop
repz
out
pop
cmpsb
dec
dec
mov
inc
push
arpl
xchg
inc
jle
jle
mov
pop
adc
popa
dec
dec
sbbb
lcall
push
testl
and
inc
shr
arpl
iret
pop
pop
mov
xor
sti
shll
mov
fnstcw
dec
push
gs
cmpl
jno
imul
mov
popf
outsl
mov
ret
and
pop
lods
and
inc
js
je
sbb
mov
mov
jp
sbb
stc
popf
and
xlat
jb
xchg
xor
loop
mov
mov
stos
mov
xlat
pop
outsl
inc
inc
stos
or
mov
pop
ss
pop
inc
addr16
in
push
pop
pushf
sub
addr16
lds
sbb
roll
enter
std
cmc
mov
push
mov
jne
repnz
mov
cmp
insl
mov
jp
add
test
push
lea
rcll
cmpsb
cltd
ficoms
cmpsl
xor
cmp
xchg
scas
cmp
shl
lds
and
aas
jno
mov
pop
or
add
xchg
and
add
jae
mov
cwtl
fsubrs
pop
iret
fdiv
lahf
adc
lds
hlt
jae
sbb
cmpb
or
aam
dec
cs
icebp
arpl
xchg
loop
jle
adc
mov
ss
push
jp
test
flds
jo
scas
adc
cwtl
es
stos
stc
xor
rcrl
std
shll
cwtl
sub
in
rcrl
push
pop
in
iret
lods
loope
jg
mov
outsl
fsubp
inc
push
cmp
loope
jne
mov
xor
xchg
call
clc
out
jno
sbb
in
mov
xor
pop
outsl
fstpt
aam
sbb
mov
and
jmp
not
cmpsb
dec
js
leave
sub
jl
inc
hlt
shrl
dec
pop
push
out
mov
in
enter
out
mov
notl
bswap
mov
out
bound
movsl
jo
mov
push
ret
xchg
pop
push
dec
leavew
mov
xor
mov
sbb
aas
push
imul
mov
xchg
dec
sbb
lcall
push
jg
push
imul
xor
inc
xchg
or
push
mov
fwait
xchg
fdivl
push
sbb
adc
pop
mov
test
cmp
cmp
fnstcw
movsb
aad
test
mov
xchg
pushf
aad
jl
fwait
outsb
loope
mov
xlat
ljmp
mov
sbb
lcall
and
mov
clc
enter
mov
clc
mov
ret
rorl
addl
sbbl
in
xchg
testl
inc
jecxz
lods
jle
pop
cmp
add
fidivrl
sub
sbb
cmc
repnz
orb
ret
enter
add
push
pushl
mov
out
xchg
add
lcall
or
or
add
add
push
popa
dec
jbe
sar
sbb
cmpl
lcall
or
jae
and
rcll
xchg
push
mov
mov
cmp
add
sub
inc
adc
das
int
pop
mov
ret
mov
sbb
cld
invd
mov
stc
dec
dec
or
push
sbb
pop
dec
jnp
mov
pop
fisubrs
xchg
xchg
ss
add
lahf
xor
insb
aad
pop
iret
xchg
mov
add
movsl
pop
add
sahf
cld
sbb
jmp
int
loopne
pushf
sbb
jmp
xor
popa
loope
cmpsb
dec
cmp
fstp
popl
adc
add
aad
aaa
mov
push
jo
xchg
push
xor
ljmp
pop
mov
lods
pop
fdivl
sub
cmp
comiss
aam
add
das
jae
push
jne
inc
insb
movb
and
loop
lcall
rclb
cmc
into
aas
aaa
mov
xor
jecxz
out
mov
loope
lret
scas
sbb
fists
call
jno
sbb
sbb
dec
bound
movsb
pop
dec
mov
in
popf
sarb
mov
incl
jmp
dec
mov
pop
stos
fnstcw
jge
or
sub
jl
adc
xlat
xchg
and
push
and
lcall
insl
mov
pop
es
test
push
bound
adc
sarl
shll
jp
sub
paddusb
adc
xor
in
test
mov
mov
pop
push
js
in
xor
test
jns
xchg
jb
aas
test
push
scas
in
cld
jmp
or
mov
mov
push
adc
roll
jbe
jnp
mov
sub
dec
push
iret
push
add
cmp
mov
pop
sbb
pop
sub
testb
rolb
dec
pop
inc
shll
fildl
sahf
sar
and
xor
test
scas
das
xlat
mov
in
mov
jle
mov
and
sbb
xchg
and
mov
or
into
arpl
jmp
cli
pushf
xor
push
and
xor
pop
adc
pop
loop
lea
fdivs
inc
icebp
test
sub
in
mov
mov
pushf
and
fists
lock
cmp
push
cmp
pop
sbb
jmp
lds
sub
adc
pop
lods
cmp
enter
repz
lahf
ret
xchg
or
xchg
add
dec
mov
cmp
jg
fimull
pushf
push
lahf
lret
orl
jne
xor
sub
xchg
xchg
mov
pop
jle
mov
jg
cmp
out
dec
popa
imul
xchg
sti
jl
mov
or
out
imul
mov
int
xor
cmp
cwtl
xor
push
fs
ret
jbe
pop
out
movsb
and
xchg
dec
push
xor
sub
hlt
pop
addr16
xchg
scas
lahf
mov
lea
shll
pushf
cmp
mov
and
enter
dec
iret
push
add
or
inc
addr16
inc
mov
cmc
out
cmp
adc
and
adc
incb
popa
cwtl
lods
fists
sub
xchg
addb
mov
or
jo
inc
xchg
sbb
push
aad
add
mov
lods
and
lds
fcmovne
rorb
inc
xor
adc
lea
call
dec
sbb
cmp
add
sbb
fldt
mov
fwait
out
fstps
add
add
fisubs
push
test
xor
cwtl
sbb
pop
dec
stos
insl
mov
outsl
test
sbb
dec
sbb
dec
mov
jge
pusha
bound
mov
popf
ror
inc
mov
js
mov
pop
inc
call
dec
dec
mov
movsl
les
add
aas
pop
fwait
arpl
ljmp
data16
aas
mov
in
pop
ds
orl
mov
cs
lods
bound
pop
insl
adcb
and
ds
js
pmulhw
jge
ret
fnstcw
clc
jg
icebp
pop
aad
jae
inc
jne
in
icebp
sub
mov
mov
jecxz
cmp
jbe
addb
xor
es
imull
aad
in
in
mov
and
add
aad
mov
adc
inc
divb
cmpsb
in
add
jmp
jbe
fs
int
xor
inc
cmp
and
sub
jb
loope
repnz
sbb
out
aam
jmp
inc
fwait
pop
dec
push
lods
and
ds
jmp
cli
fldz
imulb
push
sti
leave
mov
outsl
jnp
fnsave
inc
pop
push
and
ds
jecxz
mov
pop
hlt
cmpsl
popa
inc
pop
gs
dec
mov
negl
shlb
fcmovnbe
dec
rclb
and
xchg
adc
lret
addb
out
stos
daa
jb
push
cmp
inc
adc
sahf
lods
nop
out
push
out
push
shlb
add
lret
add
cs
xchg
adc
push
xchg
jmp
das
xchg
pushf
xor
sub
fwait
pop
adc
cwtl
fldcw
lahf
in
push
enter
and
imul
cld
mov
fiadds
adc
shl
mov
push
sti
push
cmp
mov
stc
jmp
rcll
sub
leave
icebp
pop
scas
push
shrb
lods
cwtl
push
dec
and
jae
rclb
xor
pop
or
dec
ja
ss
dec
in
push
jbe
cs
or
aam
pop
call
iret
jbe
enter
cld
int3
sbb
push
jl
dec
rcrl
rcrl
in
xor
adc
mov
xor
mov
aaa
popa
adc
jl
movsl
mov
add
imulb
js
xchg
jle
pop
cld
jae
repnz
test
cmc
movsl
lcall
leave
mov
push
lret
xor
clc
int
aam
pop
popa
ja
or
mov
idivb
sti
xlat
push
push
adc
mov
xor
scas
push
xchg
sbb
ljmp
and
push
iret
pop
lods
mov
gs
sub
or
xchg
mov
cmp
seta
mov
push
cmpsl
outsl
fwait
and
sub
aas
or
add
pop
cmpsb
jnp
sbb
mov
add
pushf
push
aaa
jns
fdivs
aas
cmpsl
pop
pop
mov
sbb
in
pmaxub
sub
mov
or
fsubrp
cmp
outsl
clc
mov
lahf
int3
jl
fisubrl
pop
cmp
cmpsb
fwait
xor
addb
imull
sbb
push
or
cs
outsb
daa
xchg
lahf
pop
sbb
adc
add
adc
dec
mov
xchg
dec
addr16
test
and
lahf
pushf
mov
fcompp
out
sbb
add
pop
and
sbb
dec
pop
add
cmp
mov
jno
icebp
test
mov
dec
adc
dec
mov
sbb
push
mov
lcall
xchg
orb
pop
fists
int3
loopne
out
cltd
das
mov
shrl
cmp
adc
or
xor
mov
insb
ljmp
stos
jne
jbe
ror
adc
lcall
sbbl
pop
adc
mov
push
push
jns
aaa
xchg
mov
adc
daa
mov
mov
lea
jle
ds
adc
out
subl
ret
pop
cmp
insb
adc
pop
scas
xor
push
sub
cmp
and
imul
pushl
shrb
scas
mov
push
int3
and
mov
rclb
cmp
test
cltd
push
ficomps
out
sarb
xchg
mov
mov
rcrb
xor
iret
mov
lahf
ret
arpl
cltd
lret
rol
and
shr
pusha
bound
add
movsb
ljmp
icebp
pop
jae
aad
hlt
mov
mov
andl
stos
mov
pop
aad
jl
ret
rorb
jno
push
sub
cmp
jp
push
pop
sub
cwtl
or
ds
bound
lret
lahf
adc
mov
ret
rcr
loop
lods
std
or
inc
insl
dec
fstl
or
mov
xchg
fcoms
dec
xor
stc
pop
mov
mov
inc
popf
mov
cmpsl
scas
cmp
push
inc
rcrb
out
push
cwtl
add
mov
jl
or
mov
out
aaa
in
lods
out
cmp
mov
xor
mov
fisubl
push
faddp
inc
in
xchg
cmp
push
in
cmpsl
and
push
adc
xor
xlat
cwtd
cmp
cltd
mov
clc
hlt
ljmp
pop
pushf
shrl
jecxz
lret
and
jb
add
addr16
jecxz
cwtl
mov
mov
inc
cmp
leave
scas
mov
adcl
leave
fcmovu
arpl
sub
inc
hlt
fcom
sub
add
out
icebp
pop
arpl
fnstenv
nop
jmp
sub
mov
scas
sub
test
arpl
add
mov
jo
jg
ret
scas
cli
cmp
sub
mov
enter
or
scas
call
rolb
loopne
das
in
sahf
cltd
jno
cwtl
sub
push
dec
aam
mov
xor
ds
shl
mov
sub
pop
sub
fwait
cmpsl
xlat
es
push
repz
pushf
jno
js
int3
jg
jecxz
push
shrb
lcall
clc
lea
push
das
lahf
loopne
ds
clc
inc
test
out
jecxz
lcall
aas
and
std
pusha
fisubs
dec
and
and
daa
inc
hlt
lcall
iret
mov
rclb
nop
leave
fwait
inc
sbb
aas
outsb
mov
int3
mov
adc
jae
sbb
mov
insl
cwtl
xor
in
adc
lret
dec
push
cmp
mov
pop
loope
push
push
cmp
ficoml
cmp
lret
roll
call
xor
dec
mov
cltd
shl
aaa
pop
shlb
mov
sti
outsb
mov
fwait
cs
rcrb
jge
fwait
out
xchg
jge
push
cld
lods
ljmp
and
xchg
sbb
dec
dec
inc
pop
push
pop
inc
dec
inc
arpl
movsb
dec
cmp
insl
mov
int
leave
dec
aam
jno
dec
push
repz
push
dec
jecxz
cmp
or
inc
movsl
adcl
mov
add
aad
out
mov
std
push
mov
jle
push
ret
popl
mov
xchg
jp
adc
stc
sub
in
add
in
xchg
bound
clc
repz
fwait
rclb
add
and
sub
pop
push
mov
loop
mov
in
xchg
rorb
ss
and
ficompl
test
jb
lret
mov
mov
test
and
jle
into
xchg
pop
add
negl
jns
fimull
sub
popa
xchg
gs
andl
cld
lcall
sub
mov
je
cmp
int3
rorb
xor
popa
xchg
and
loop
daa
mov
icebp
arpl
mov
popa
les
push
or
mov
ret
cs
aaa
cwtl
stc
stos
insl
ficoml
imul
sub
ret
cmc
jmp
lahf
in
popa
lds
shlb
sti
lds
loope
cs
push
pop
out
sub
out
and
mov
sbb
pop
and
or
xchg
jmp
jmp
sti
lcall
pop
dec
mov
ja
test
xchg
mov
aad
stos
ret
shl
lret
and
out
mov
xchg
popf
sbb
sub
movsb
stos
jg
xchg
test
cli
in
ret
xchg
jnp
addr16
jmp
or
xor
xor
test
xchg
xor
mov
pop
leave
jae
and
cmp
leave
mov
or
add
ljmp
cmp
mov
sub
into
ret
dec
cmp
cmpsb
mov
pop
nop
in
in
jnp
pusha
push
inc
mov
repnz
clc
jno
pop
iret
out
imul
add
in
or
inc
adc
inc
push
inc
pop
stos
js
test
xor
or
lds
push
adc
iret
lds
stc
adc
js
mov
stos
lcall
mov
jle
inc
ljmp
sub
sahf
jae
notb
movsb
lods
and
out
pop
test
push
pusha
or
movsb
lods
mov
adc
sbb
cmp
jbe
add
cmp
mov
imulb
in
jp
lds
ja
adc
outsl
xchg
mov
movsl
pop
xor
sub
xchg
pop
xchg
mov
mov
pop
sbb
mov
inc
sbb
sub
sbb
popf
pusha
mov
scas
rorl
mov
daa
xchg
fisubs
inc
orl
stos
test
mov
or
lock
push
cmc
into
sbb
adc
cmpsb
mov
push
ds
fcmovb
imul
adc
push
aas
repz
adc
imul
jp
lret
es
shlb
push
aaa
jge
loop
jp
in
sbb
insl
sub
jns
popl
stos
and
mov
adc
pop
in
sti
int
mov
bound
mov
lahf
out
xor
pop
dec
nop
arpl
jb
lea
xor
xchg
sbb
push
lcall
lods
jo
pop
jo
jmp
enter
fimuls
dec
push
je
negl
adc
jmp
add
in
lods
test
add
sub
inc
dec
popa
repz
jns
rcrb
movsl
or
jmp
push
sbb
jne
dec
scas
movlhps
jmp
push
add
sbb
and
jne
cld
pushf
mov
sbb
add
movsl
or
cmp
pop
adc
popa
fwait
push
les
sub
sbb
pop
xlat
test
jp
or
dec
int
and
faddl
ret
shll
ret
mov
sbb
and
sti
pop
lea
sbb
test
cmp
push
repz
popa
jle
es
jae
mov
pusha
orl
pop
add
jle
addr16
andl
xchg
in
lods
mov
jge
iret
sti
sub
dec
push
and
push
mov
and
scas
push
sahf
push
ret
mov
dec
int
les
inc
test
mov
xchg
outsb
std
das
jbe
inc
push
jp
cmp
aad
and
pop
pop
roll
sbb
and
xor
roll
cmpsb
aam
add
hlt
cmp
loop
hlt
cmc
fcmovnbe
xchg
call
pop
inc
inc
push
outsl
aad
repnz
lahf
fildl
or
pop
clc
in
push
jne,pn
sub
cltd
pop
jmp
sbb
pop
dec
mov
push
inc
imull
outsl
push
adc
sbb
test
inc
xchg
add
mov
les
addr16
lea
outsb
repz
mov
dec
movsb
cwtl
hlt
mov
nop
xor
add
lods
mov
push
jnp
push
les
jmp
lea
lret
cltd
out
jmp
and
into
jo
ficoms
add
ret
cli
movb
shr
addr16
lods
in
jae
dec
popf
mov
aam
xchg
into
out
mov
lea
cmp
mov
push
sahf
dec
push
inc
mov
aam
into
flds
movsw
mov
jecxz
lret
dec
jno
push
cmp
pushw
out
fcompl
jbe
add
aas
jb
adc
stos
jo
mov
jo
stc
enter
xchg
out
and
ret
mov
push
aaa
stc
xlat
test
sti
mov
pop
sahf
gs
frndint
jb
sub
bound
add
xchg
movsb
test
jo
out
push
and
mov
push
xor
mov
cmpsl
push
xchg
pop
push
hlt
pop
fld
push
sbb
mov
stc
int3
and
add
mulb
inc
iret
jle
pop
aas
repnz
push
mulb
push
cltd
sbb
dec
cmp
je
ljmp
adc
cmp
sbb
imul
cltd
shl
jo
lods
lret
xor
inc
xchg
faddl
dec
out
in
daa
addr16
xchg
mov
mov
jmp
sbb
xchg
xchg
mov
and
mov
xchg
jmp
and
loopne
clc
mov
inc
mov
xchg
in
mov
mov
movsb
sub
pop
mov
and
leave
cltd
lahf
jmp
sarl
mov
xchg
lods
js
mov
fisubs
sbb
mov
gs
pop
mov
outsl
jg
int3
jb
xchg
push
xchg
sub
flds
inc
adc
das
cli
xor
icebp
imul
cmp
cmp
jbe
mov
inc
sbb
jg
pop
xor
lret
mov
add
sbb
pop
cmp
sub
popa
add
add
push
push
outsl
mov
push
sbb
jo
dec
push
ja
adc
in
cmpsl
dec
and
and
mov
outsb
jae
mov
pop
call
push
pop
popa
addr16
cmpsl
jns
inc
xor
inc
scas
in
dec
jle
push
xchg
dec
cmp
icebp
cli
out
fisttps
or
data16
sbb
dec
fcmove
ds
or
into
xor
mov
jo
or
mov
xchg
or
sti
into
imul
pop
test
and
imul
xchg
stc
adc
add
jns
fidivs
xchg
jo
loope
adc
out
jnp
dec
lahf
insl
jmp
push
pusha
cmp
and
cli
mov
jnp
add
int3
mov
cltd
stos
add
sub
out
std
jge
leave
and
xor
xchg
mov
mov
fldt
pop
int
and
into
and
sbb
ret
jmp
aam
cmp
pop
pusha
pop
outsb
mov
inc
or
add
idivl
or
cltd
xchg
das
leave
out
repnz
fistpll
jo
int
lods
ljmp
in
mov
add
stc
cmc
or
lock
in
iret
mov
jp
push
imul
into
dec
sub
loopne
mov
movsb
cmp
stc
fwait
xchg
sbb
push
mov
lret
pop
dec
jp
sub
add
and
sahf
and
mov
mov
cmpsb
xchg
in
push
xchg
jge
lods
jno
pop
int
lcall
repz
jno
outsl
inc
es
das
jne
add
cld
jmp
inc
mov
out
mov
ret
fisttpl
adc
ds
and
adc
xor
cmc
ficoms
hlt
rorl
push
in
cmp
test
nop
fisttpl
cs
sbb
adc
rcll
adc
jle
test
cltd
cwtl
xor
xchg
mov
and
cmp
inc
cmc
push
xchg
fmul
in
aad
movsb
pop
cmp
notb
jge
jbe
push
imul
cmp
roll
or
jbe
jns
lods
mov
add
jp
jo
stos
sbb
and
mov
jns
push
nop
xchg
jnp
pusha
sbb
cmp
pop
fistl
out
pop
push
arpl
mov
fwait
out
outsb
enter
cmp
push
mov
in
push
cld
fwait
jns,pn
scas
stos
insl
cld
add
test
jnp
xorb
and
test
pop
mov
leave
mov
fiaddl
stc
mov
and
stos
and
push
xor
pop
xchg
cmc
lret
pop
xchg
or
mov
mov
sub
packuswb
mov
cmp
adc
cmpsl
cmc
mov
dec
jbe
mov
xor
xchg
jnp
icebp
shrl
aaa
dec
shrb
and
ss
cmc
loopne
mov
ret
mov
fsubrl
cmp
out
stos
ds
cmp
or
and
daa
or
pop
arpl
mov
xlat
xor
xchg
stc
leave
xorb
and
int3
dec
push
push
arpl
ffreep
pop
and
sti
fs
mov
pushf
mov
dec
adc
out
icebp
pop
dec
jg
out
jbe
push
call
sub
jmp
sub
out
ss
daa
mov
inc
clc
jno
cwtl
inc
xchg
arpl
xchg
cmp
lods
mov
outsb
fsubrs
sbb
inc
aaa
push
pop
rclb
adc
sbb
loope
fwait
sub
daa
inc
rcrl
arpl
cmp
adc
push
xchg
dec
shrb
test
fwait
outsb
pop
loopne
push
es
jbe
push
ret
add
movsb
add
jo
fwait
clc
loope
adc
int
pop
sbb
jle
push
xor
repnz
nop
xorb
in
loope
mov
xor
pop
rep
push
icebp
adc
mull
xchg
sub
inc
insb
pop
std
jbe
jl
dec
inc
leave
ret
dec
or
arpl
gs
dec
and
sub
shll
cmovg
adc
arpl
in
into
int
std
les
mov
test
int
inc
fdivr
cwtl
popf
lret
add
leave
push
fs
repnz
mov
sub
repnz
scas
enter
adc
jge
aas
sar
xchg
pop
inc
lods
xchg
insb
out
scas
sbb
ficoms
xchg
pop
hlt
scas
imul
ss
dec
mov
stos
or
or
stos
repnz
clc
mov
dec
jbe
clc
mov
into
pop
sbb
stos
lock
mov
into
outsl
cltd
fmull
out
jecxz
fildll
mov
js
pusha
or
insl
adc
jbe
test
ds
iret
lret
in
dec
sub
or
insl
fwait
nop
fistl
call
lods
ljmp
or
lock
cmpsl
dec
fsubrp
add
mov
push
inc
mov
movsl
les
inc
scas
xchg
cwtl
mov
sub
fildll
loopne
in
imul
adc
jb
pop
mov
in
mov
sub
cmp
loope
pop
fiaddl
aas
push
adc
or
adc
add
cmp
lock
and
in
pushf
loope
in
addr16
jp
jbe
imul
jno
cmc
dec
inc
mov
out
mov
xor
fwait
shll
daa
sbb
and
add
xchg
test
scas
iret
ja
push
cld
and
mov
xchg
lahf
add
dec
and
sub
push
test
jle
or
pop
dec
inc
jnp
out
or
je
lds
inc
adc
sbb
inc
idiv
xor
xlat
push
mov
imul
pop
fstpt
pop
fcomps
add
sub
enter
lods
loop
xchg
nop
lahf
fdivl
pop
dec
sbb
outsb
xchg
in
inc
or
mov
cmp
pop
test
dec
dec
out
stc
mov
in
stc
push
sbb
xor
xchg
scas
out
pand
idivb
sbb
cmc
loop
es
stc
inc
cmp
iret
inc
push
cld
inc
mov
aas
sbb
and
mov
dec
or
inc
imul
ret
lock
xor
add
cli
cmp
cwtl
lea
or
mov
mov
scas
inc
arpl
sti
ret
mov
dec
or
dec
mov
mov
inc
int3
ss
jmp
ret
mov
shlb
pop
cmp
stos
divb
xor
shl
add
adc
lea
shrl
dec
lret
pop
mov
repz
hlt
cs
aad
sub
dec
inc
out
fwait
nop
and
popf
insl
adc
rcr
push
mov
insl
repz
mov
jne
test
or
push
sbb
xchg
push
cmp
cwtl
dec
insl
jecxz
paddusw
jae
dec
jg
cli
push
int3
sti
aas
sbb
jge
test
imul
push
cli
mov
mov
xchg
pop
mov
inc
arpl
lods
cmp
jp
mov
sbb
out
cld
mov
subb
xchg
mov
sbb
adc
cwtl
sub
inc
sarb
repnz
clc
sub
xchg
out
je
arpl
fistps
sub
pop
lret
add
mov
testb
cmp
dec
daa
jbe
sbb
scas
ljmp
sbb
cmp
imulb
dec
arpl
cmp
dec
int3
sub
xchg
add
dec
pop
hlt
inc
insl
ret
stos
lods
xchg
into
dec
fidivs
icebp
or
mov
sbb
mov
push
add
stos
inc
outsb
arpl
add
xchg
xor
sub
stos
jnp
pop
fimull
insb
insb
clc
dec
outsb
cmp
xchg
cmp
es
jmp
and
cltd
int3
leave
mov
push
shl
ret
movsb
jge
ljmp
aaa
rcll
repnz
je
sub
push
test
fdivs
jnp
push
out
mov
ret
cmp
lret
loope
push
mov
xlat
pop
mov
subb
pop
sub
push
daa
rorb
jle
xchg
inc
jmp
mov
mov
hlt
cmp
test
push
mov
lret
cmpsl
fcoms
mov
decb
add
mov
jns
xchg
in
pop
jb
add
sbb
xchg
jbe
insb
jo
test
mov
or
push
je
cmp
xchg
in
repz
mov
ljmp
adc
insl
add
add
insl
and
lods
mov
xchg
cmp
mov
in
nop
shlb
sbb
hlt
enter
push
outsb
testl
dec
inc
aaa
dec
out
loop
mov
push
lret
lea
js
orl
mov
jmp
insb
mov
mov
or
mov
sbb
push
fdivr
hlt
mov
push
jle
and
or
inc
hlt
pop
inc
sti
movsbl
adc
or
dec
sub
jns
mov
mov
fldenv
mov
dec
cmpsl
lea
dec
xchg
mov
ss
pop
lods
or
shrb
pop
or
sub
push
jmp
ret
mov
fs
loopne
jmp
cltd
add
cld
enter
push
pop
ficompl
xor
mov
sbb
mov
inc
pop
or
sahf
fstpl
test
mov
xlat
add
ret
mov
sub
punpckhbw
cmp
jle
push
aad
dec
pop
sub
addr16
add
adc
stos
cmp
inc
dec
xor
clc
cli
mov
pop
inc
push
dec
cmpsb
mov
mov
sub
ljmp
shrl
dec
dec
ljmp
push
inc
adc
test
sbb
add
les
ret
out
into
leave
loop
jnp
out
lret
sub
pop
fistl
push
inc
ret
pop
pop
ja
outsl
xchg
cmpsl
insb
jnp
cmpsb
mov
imul
sub
subl
push
jmp
xchg
or
jmp
cmp
or
mov
adc
test
and
loope
cs
ljmp
cld
jnp
sarb
subb
fwait
movb
pop
dec
aaa
outsl
inc
mov
xchg
test
cmp
push
sub
or
cmpsl
clc
and
pop
xor
adc
daa
push
lods
mov
jecxz
adc
push
out
and
dec
adc
adcl
fistps
fisttps
call
call
xor
test
fnstenv
in
pop
lock
mov
push
addr16
ds
dec
cmovns
push
xchg
nop
lret
ret
push
sbb
stos
dec
and
push
dec
and
push
inc
lahf
sti
faddl
fildl
sub
mov
sbb
cs
adc
sbb
inc
cld
pop
test
movsb
sbb
xchg
sub
loop
imul
subb
and
in
iret
je
addr16
dec
test
inc
lea
imul
mull
mov
mov
test
push
mov
push
xchg
icebp
cltd
scas
loopne
and
push
outsb
add
sub
jnp
rcrl
mov
clc
arpl
pop
push
lods
mov
jle
icebp
iret
std
das
mov
fcomi
in
xor
repz
movsb
sahf
dec
inc
test
add
std
push
mov
xchg
pop
sar
subl
jl
cmpsb
push
mov
icebp
rcll
inc
sahf
and
inc
cmp
inc
mov
in
mov
pop
pop
pop
adc
insb
mov
dec
cmc
add
dec
repz
js
jbe
repnz
addl
js
negb
jg
sbb
cmp
daa
mov
jne
sti
out
fwait
and
cs
lret
xor
push
in
xchg
push
inc
xor
mov
mov
pushf
sub
repz
push
aas
lcall
pop
orb
movlps
sti
inc
shl
add
aam
in
aam
mov
add
andb
out
lock
sbb
dec
jecxz
enter
push
shl
movsb
xchg
sub
cmp
arpl
je
pop
or
mov
pop
insb
cmp
lods
cmp
inc
int
int
insb
add
push
mov
in
mov
mov
jbe
fsts
jae
es
mov
sbb
enter
sub
fidivl
pushf
fadds
repz
int
adc
push
movsl
arpl
xchg
mov
xchg
xor
push
mov
xchg
jbe
sub
push
and
test
and
daa
and
jae
push
shll
mov
andl
jae
inc
push
mov
mov
lods
xchg
pop
lcall
shrb
outsb
ds
sub
pop
shlb
in
push
jmp
les
int3
lea
leave
loop
fdivs
in
xchg
inc
xor
push
jo
pop
mov
mov
std
sbbb
arpl
cmpb
outsl
add
push
jo
fsubl
pop
dec
jo
mov
lcall
jno
jnp
mov
sbb
sti
std
pop
or
jnp
add
xchg
ds
iret
adc
sub
sahf
fldl
dec
dec
push
lods
in
xchg
adc
xlat
adc
xchg
mov
jg
mov
mov
cmp
mov
cmc
aad
xorb
nop
icebp
rcrb
stos
jle
call
push
adc
nop
jnp
inc
int
popf
mov
jecxz
jnp
outsb
xchg
mov
aas
pop
jns
lock
jb
adc
out
mov
xchg
lds
or
sub
subb
xlat
add
mov
jbe
dec
pop
cmp
pop
mov
sbb
testb
jb
push
dec
push
out
insl
dec
ffree
or
into
adc
out
cmc
pushf
call
shrb
fcoms
pusha
es
loop
fwait
les
xlat
pop
mov
push
cmc
aas
or
shrb
cmc
dec
pop
mov
insb
cmp
push
xor
dec
mov
pop
xchg
mov
jecxz
lods
pop
out
pop
mov
push
cmp
pusha
out
jb
jmp
mov
inc
jp
and
jecxz
mov
cltd
inc
mov
jo
push
mov
sub
push
aas
ja
pusha
mov
lret
sub
cld
cmp
xchg
inc
or
add
imull
ja
pop
decl
dec
out
js
xchg
add
out
loopne
mov
and
dec
xorl
inc
std
cwtl
lret
pop
in
push
movsb
mov
roll
push
mov
mov
sbb
popf
aad
inc
xchg
or
mov
mov
movsl
sahf
mov
in
xor
inc
xchg
test
lret
add
mov
xchg
cmc
push
clc
jecxz
inc
mov
sub
gs
mov
lods
cli
pop
out
xor
inc
inc
mov
iret
aad
add
fnsave
sbb
sbb
ret
fdivrs
repnz
fldcw
jmp
aaa
sub
int
dec
pop
jl
sub
add
push
es
xchg
dec
pop
cmpsl
sub
popf
add
push
or
fs
add
push
fsubs
sbb
and
sub
shrl
mov
push
ds
mov
arpl
rcr
test
mull
cltd
sub
out
dec
mov
imul
sub
jo
mov
pop
fldl
enter
out
inc
jge
jnp
cs
pop
and
xchg
scas
adc
jne
push
xor
test
fstps
sbb
iret
add
loop
xchg
adc
mov
fsqrt
mov
std
aam
jg
test
call
or
dec
pop
mov
push
leave
fsubp
and
push
xor
insl
add
stos
shl
loopne
mov
jecxz
nop
pop
dec
push
aad
xchg
scas
into
in
mov
mov
add
int
cwtl
add
in
add
sarb
inc
sbb
pop
movsb
rorb
cmp
insl
fs
outsl
lock
push
push
or
pusha
adc
adcb
and
mov
push
dec
mov
mov
pop
add
sub
dec
sti
inc
sbb
inc
mov
mov
and
and
jmp
xchg
out
mov
adc
xorl
cmp
cmp
mov
mov
add
mov
mov
adc
ret
xchg
inc
xchg
mov
iret
cli
add
jl
pop
test
loop
cld
cmp
aam
xor
insb
ror
and
shrb
cmpsl
pop
cmp
xor
test
dec
dec
pop
je
mov
inc
jg
sub
lcall
test
mov
lds
divl
rclb
lock
pop
pop
jecxz
std
test
sbb
jns
ss
add
int3
fcoml
jo
jmp
mov
jl
jl
and
fs
out
xchg
mov
xchg
mov
sub
aad
mov
sub
xchg
push
xchg
lods
xchg
sbb
into
das
mov
cmpl
cwtl
cmp
cmc
xchg
call
xchg
mov
in
lret
fnstsw
mov
cld
ds
dec
sbb
jle
xchg
or
hlt
jne
and
sbb
arpl
jge
mov
inc
sbb
push
fadds
or
adc
xchg
rcrb
pop
div
hlt
rorl
push
out
and
fmulp
dec
push
dec
sub
mov
sbb
pusha
inc
jecxz
shll
repz
scas
dec
xchg
mov
add
sub
dec
data16
loopne
mov
sub
ds
xlat
cmp
mov
outsb
add
rcr
aas
push
add
jmp
mov
jmp
xchg
add
sub
out
cmp
add
sahf
mov
push
icebp
jmp
lock
push
cmp
dec
mov
add
cld
add
cmpsl
jl
mov
xchg
dec
fmuls
dec
shl
lods
lock
loop
jg
psllq
testl
std
xor
ret
scas
jle
xlat
inc
push
push
add
mov
adc
bound
mov
jmp
xor
sbb
cmp
fwait
add
jns
cltd
lea
lahf
mov
adc
xor
lea
into
jae
pop
adc
dec
dec
rcrl
sahf
dec
push
insb
sbb
jbe
or
push
mov
ljmp
stos
mov
cmp
and
dec
aam
aas
je
xor
hlt
sbb
test
push
mov
mov
pusha
sbb
pop
xor
rorl
decl
shlb
xor
stc
jno
xchg
mov
lods
dec
fs
and
cmp
cs
mov
or
jl
repnz
fistpll
adc
ret
pop
jle
mov
dec
xchg
jle
mov
or
xchg
into
lahf
movsb
pop
clc
cmpsb
cmp
hlt
shlb
fildl
popf
mov
adc
mov
cld
xchg
fistps
dec
icebp
stos
mov
clc
xchg
call
rcll
xchg
sahf
add
jb
push
mov
mov
add
shll
jl
xorb
adc
int
insl
loop
push
cmc
push
push
push
or
pop
sahf
cmp
mov
cmpsl
out
pop
int3
pop
jbe
nop
pushf
movsl
fcmove
loope
movsl
push
int3
in
daa
adc
push
xchg
push
leave
xor
fucom
push
mov
inc
jmp
sbb
pop
and
xor
adc
adc
loope
data16
adc
aad
iret
cwtl
insb
jne
pusha
xchg
mov
test
jo
lcall
stc
pop
cmpsl
push
js
idivl
mov
ds
dec
adc
jle
hlt
push
in
shll
out
in
adc
xor
lock
subl
filds
sub
adc
pop
gs
mov
jbe
jl
out
or
sub
sbb
dec
pop
sbb
cmp
scas
in
mov
mov
nop
inc
mov
adc
inc
insb
inc
cmc
adcb
stos
dec
push
pop
cltd
aam
cwtl
mov
jge
cmp
nop
fstpt
mov
sbb
or
jecxz
out
pushf
nop
sub
mov
mov
xchg
mov
sbb
mov
call
push
pop
lret
lret
mov
loop
add
bound
jl
repz
icebp
mov
lahf
xor
jnp
out
mov
cmpsl
pop
out
imul
movsb
xor
ljmp
mov
out
ret
in
mov
in
dec
adc
andb
dec
jg
insb
push
push
mov
add
cwtl
sahf
cmp
cwtl
jae
ja
lock
fnstsw
lret
fildl
sbb
out
push
scas
fldcw
hlt
mov
jl
xchg
xor
mov
xor
mov
inc
push
in
xchg
sahf
pop
popa
loope
ja
adc
pop
in
push
push
shll
cs
call
popf
mov
pop
and
adc
push
dec
mov
pop
jle
stc
sub
push
ds
test
dec
sbb
scas
sarl
ret
popa
and
aas
jg
pushf
movsb
or
jg
cmpsb
add
cs
cld
mov
pusha
std
icebp
inc
and
mov
xor
pop
dec
subl
cwtl
rcrl
pop
js
sbb
ds
clc
movsb
incb
lods
rorb
add
sbb
sub
pop
testl
push
repnz
push
xchg
jp
ss
sti
mov
dec
leave
cmp
xchg
sub
jno
shlb
rorb
add
das
and
jnp
das
push
adc
iret
jb
test
ret
inc
ret
mov
addr16
mov
push
add
loopne
cld
adc
push
lcall
pop
dec
add
movsb
fwait
inc
shr
cmp
cmp
pop
adc
xchg
jg
fistpl
jp
mov
jb
jns
dec
sbb
xor
sbbl
test
insl
jns
scas
push
sbb
inc
xchg
inc
fs
mov
js
cmp
or
lret
mov
lods
dec
mov
push
jl
xchg
or
dec
test
cmc
and
movsb
sub
inc
mov
dec
sbb
or
sbb
clc
lcall
lahf
dec
dec
scas
stos
gs
mov
movsl
std
insl
dec
pop
outsl
gs
inc
movsb
cli
rol
outsl
jbe
dec
call
add
inc
xchg
call
cmp
xor
movsl
or
int
mov
int3
pop
loope
aaa
arpl
sti
mov
push
in
sub
pop
cwtl
inc
push
lock
xchg
mov
jge
adc
call
xchg
jecxz
popf
xor
push
and
fadds
test
adc
aaa
pop
xor
mov
or
outsl
push
sbb
pop
data16
sub
inc
and
adc
out
fstpl
sahf
outsl
pop
sub
add
fstpl
mov
ljmp
push
mov
pushf
adc
adc
icebp
dec
cmp
sub
lock
loopne
icebp
fildll
pop
dec
lods
jnp
and
dec
mov
pop
mov
cmc
lret
pop
mov
lea
pop
lods
pop
and
in
lret
sub
lea
mov
cmp
lahf
ljmp
pop
mov
test
rcl
mov
in
leave
pop
cwtl
push
inc
xor
pusha
pushw
cmp
xchg
shrl
xor
xlat
or
xor
lods
out
dec
or
pop
push
jg
cmp
cmp
cmp
fdiv
add
push
mov
add
mov
mov
push
jl
aaa
pop
pushf
sbb
dec
aam
movsl
push
adc
stc
cli
shrl
imul
rorl
push
ss
sub
out
xor
in
outsb
inc
xor
jecxz
mov
rolb
fdiv
push
dec
sbb
xchg
jns
mov
xchg
es
call
dec
pop
mov
mov
notl
cmpl
inc
dec
clc
adc
cmp
or
aad
testb
into
xor
jae
xchg
loope
scas
test
js
mov
lret
push
mov
hlt
rcl
pushf
daa
inc
in
jno
mov
mov
push
pop
mov
enter
jl
dec
mov
mov
cmp
inc
inc
cmp
incb
xor
xchg
jge
adc
dec
mov
fnstsw
xor
xor
pop
pop
cld
cmp
cwtl
out
pop
xchg
and
pop
or
xchg
arpl
mov
push
mov
sub
fsubr
sbb
mov
leave
ss
or
fsts
pusha
push
loop
test
das
sbb
push
sub
sub
insl
in
sub
fxtract
and
into
movsl
jecxz
sbb
jl
xchg
scas
inc
xchg
and
mov
fwait
insb
or
int
enter
push
mov
dec
rclb
movsl
dec
orb
ret
dec
call
icebp
and
out
mov
sub
sub
mov
pop
dec
cmpsb
out
add
int3
fnstsw
mov
mov
and
jb
add
or
inc
add
sahf
flds
xor
sbb
das
and
mov
shll
test
adc
push
test
aad
imul
test
dec
shll
int
lret
jno
push
mov
insb
fld
repnz
insl
cmp
cmpsb
mov
mov
test
or
pmaddwd
cmp
iret
push
enter
mov
jmp
jg
in
stos
mov
movsl
leave
loope
es
xor
sbb
jge
cmp
pop
insb
pop
pop
rcrb
cs
aam
repnz
outsl
mov
xor
xor
inc
scas
pop
xchg
inc
roll
fstpl
nop
cld
cwtl
sti
and
mov
push
sub
lret
sbb
test
jbe
dec
adc
inc
out
outsl
lods
jecxz
js
subb
push
jnp
ljmp
addl
mov
clc
rclb
sbb
sub
push
out
sbb
scas
inc
pop
test
ret
inc
or
pop
xchg
pop
pop
fdivl
out
pop
pushf
shll
jno
gs
les
push
mov
push
adcl
inc
pop
shll
cld
xchg
inc
or
test
pop
aam
sbb
outsb
bound
add
shll
loop
out
ficoms
mov
addr16
ds
mov
xor
lret
jl
popa
cmp
into
dec
in
sub
or
sbb
add
test
push
jnp
push
xor
sti
in
jnp
mulb
push
or
add
cld
pop
dec
idivl
out
mov
test
sub
test
test
cs
xlat
lea
sub
mov
jo
mov
in
cmp
dec
sbb
popf
fcmovnbe
and
les
xorb
sbb
and
add
sti
jns
mov
test
ficomps
pop
mov
rcr
addr16
fbld
in
adc
jge
sbb
nop
roll
jg
mov
cmp
js
push
jbe
int3
xor
xor
fimuls
cmp
movsl
pop
jno
cs
jne
and
xchg
jns
mov
xchg
andb
xlat
push
les
fs
adc
outsb
aam
jmp
xor
outsl
mov
xor
pop
cmp
xchg
xchg
pop
mov
jg
ds
add
loopne
out
stos
je
cwtl
add
scas
lcall
push
stc
jl
out
ds
cmp
cs
test
icebp
faddl
aas
mov
lods
or
mov
or
test
stos
pusha
scas
mov
sub
cmpsb
or
xchg
fmul
sub
test
xchg
and
mov
add
adc
test
mov
mov
enter
dec
pop
mov
pop
mov
inc
and
jmp
adc
or
dec
mov
or
dec
test
jl
jns
pop
rorl
inc
xchg
add
mov
test
mov
je
sbb
push
xchg
aaa
cmp
push
inc
mov
mov
push
jmp
pop
and
jae
fistpl
aaa
xor
mov
mov
pusha
jnp
mov
cli
outsl
push
in
mov
nop
gs
mov
pop
movsb
mov
adc
stos
filds
adc
jb
fmul
pop
enter
cmpsb
mov
jle
sbb
dec
test
adc
xor
icebp
or
sbb
mov
adc
jb
movb
imul
adc
pop
adc
push
shrl
les
out
jns
cmp
lret
mov
push
addr16
mov
push
das
ret
mov
js
jp
test
pop
cmpsb
push
mov
cld
enter
and
fbld
sub
push
cli
mov
inc
scas
insl
pop
cmp
xchg
mov
xchg
cs
push
das
faddl
cmpsb
mov
sub
imul
je
popa
push
in
pop
lret
inc
inc
and
nop
add
push
sbb
cltd
xchg
jecxz
pop
cmc
add
jne
jl
gs
fbld
shll
inc
fdivs
push
mov
repnz
rcl
cmc
dec
jns
stos
inc
pop
adc
adc
imul
mov
psubusb
adc
int
xor
loop
jmp
call
out
xorb
mov
sahf
and
adc
clc
rolb
out
pop
cmp
sahf
jnp
mov
fidivrl
imul
xlat
lock
sbb
add
cs
jmp
fistpl
stos
cltd
xchg
dec
movsl
push
test
in
fmuls
xchg
in
push
test
enter
in
lock
jmp
inc
jnp
or
icebp
mov
rcll
xchg
les
add
xlat
mov
mov
sub
js
testb
pop
pop
mov
stos
hlt
cmp
movsl
dec
shll
idiv
in
fadd
xchg
mov
das
or
mov
or
mov
cmp
jecxz
mov
mov
mov
and
lcall
test
mov
inc
jg
jg
in
pop
inc
cmpsb
xchg
cmp
or
enter
add
test
add
fcoml
dec
inc
rcr
andl
sub
add
xor
cwtl
sub
push
aaa
mov
ljmp
pop
rep
pop
nop
jge
ret
jp
pop
sbb
cltd
sbb
dec
fsub
mov
adcb
shll
imul
into
lret
fucomi
stc
inc
mov
sub
in
dec
and
divl
jae
daa
loope
icebp
sbb
adc
idiv
mov
in
ljmp
jae
mov
pop
pop
cmc
inc
push
pop
inc
ss
repz
mov
out
xor
mov
outsb
ret
loope
sub
jo
sar
and
xchg
adc
out
cmp
jne
push
pop
add
pop
lret
jp
std
xchg
aas
dec
loope
mov
loopne
mov
test
repz
cmpsl
out
mov
aaa
jns
adc
mov
mov
xchg
push
dec
stc
lods
dec
dec
std
sbb
dec
jle
push
inc
mov
adc
mov
inc
mov
cmp
test
js
icebp
cltd
add
pop
cmpsl
mov
inc
push
mov
fisttpl
repz
add
aad
dec
push
inc
xor
and
and
pop
push
into
enter
nop
jbe
imul
pop
in
add
sbb
std
stos
push
add
push
jl
sub
pop
jl
adc
sbb
subb
pusha
or
cmp
lahf
and
lods
pop
insl
fs
jnp
cmp
in
mov
sbb
in
mov
rol
push
sarl
mov
or
sbb
xchg
cmpsb
push
mov
adc
ret
xchg
sbb
in
push
roll
push
arpl
stc
sti
bound
or
push
pop
push
lcall
add
lret
fucom
mov
sbb
jne
jns
pop
jnp
enter
mov
in
mov
and
mov
dec
ljmp
loopne
test
inc
outsl
and
cmpl
cld
mov
push
push
repz
pop
cmc
in
add
sub
push
push
push
das
fwait
add
test
push
jp
arpl
mov
sbb
add
and
push
sti
pop
sub
stos
add
pop
and
push
stos
jne
or
arpl
inc
int3
out
fstpl
outsb
push
jmp
jmp
nop
orb
sub
stos
fstpl
sub
scas
mov
in
push
lods
xchg
cs
loope
pop
add
mov
mov
movsb
ficomps
xchg
pop
div
xor
dec
lret
mov
cmp
inc
lods
inc
push
mov
push
add
lods
mov
mov
push
add
xchg
xor
in
xor
nop
repz
push
sbb
cli
and
out
test
and
lcall
and
divb
push
icebp
jne
ja
push
push
inc
jl
call
xor
or
jae
sbb
test
or
and
adc
adc
shl
je
lahf
je
jmp
mov
int
pop
mul
mov
scas
loope
xrelease
pop
cmp
cltd
xchg
fadd
or
mov
pop
push
or
inc
sbb
and
adc
xchg
mov
dec
mov
jmp
pusha
mov
in
inc
aad
push
into
inc
pop
mov
mov
push
jmp
repnz
sub
xchg
cltd
jp
call
lcall
push
sbb
push
mov
sbb
or
jbe
gs
push
dec
and
inc
in
xor
jno
jne
ret
push
test
add
ret
mov
sbb
jnp
fwait
push
pop
xchg
or
sahf
in
into
mov
pusha
repz
xchg
jmp
popf
add
mov
adc
in
lcall
lock
call
ljmp
sub
pop
or
inc
and
adc
repz
xchg
stc
mov
cltd
add
icebp
or
mov
mov
std
mov
repnz
iret
sbb
neg
repz
scas
bound
cs
mov
inc
push
fnstcw
pop
cmpb
and
adc
jge
pop
add
mov
inc
aas
iret
or
test
js
push
fadd
cmp
cli
xchg
mov
mov
daa
jmp
jo
jmp
cld
pop
mov
mov
repnz
jae
lahf
test
inc
add
cwtl
neg
push
outsl
nop
inc
sub
sub
pop
nop
add
sub
lods
lods
push
xchg
sbb
repz
je
dec
rcl
add
jnp
outsl
mov
jns
mov
lret
std
mov
das
ja
cmp
jge
cmp
iret
adc
mov
ss
in
inc
pop
jge
add
mov
btr
testb
in
jbe
incb
sbb
cmpsb
stc
movsb
xchg
fistpl
lret
mov
fmul
add
imul
and
xor
pop
fistpl
sbbl
xchg
stos
mov
mov
sbb
xor
lret
jne
ffreep
jp
jno
bound
push
mov
test
pop
aaa
push
add
pop
insl
int
mov
int
inc
xchg
push
mov
in
push
fst
xorb
sbb
jge
sahf
dec
jge
stos
mov
jnp
stos
int
push
imulb
pop
movsl
cmp
int3
cltd
and
add
fcoml
pop
add
sbb
pop
pop
rcrl
test
js
mov
loopne
das
movb
and
imul
jp
adc
xor
pop
sahf
rorl
je
mov
es
cmovle
test
add
cld
cmp
in
jno,pn
inc
push
jns
push
mov
mov
and
or
push
aam
call
dec
xchg
in
adc
sub
mov
clc
rcll
xor
push
mov
push
dec
or
xchg
gs
dec
jo
insl
cmc
lahf
adc
xor
enter
and
pop
dec
popf
loopne
sub
popa
and
mov
add
imul
lcall
repz
incb
mov
mov
mov
sarb
sti
cli
imul
jae
in
jae
test
jl
xchg
xchg
dec
call
cmp
mov
xor
cltd
xor
nop
rclb
xchg
rolb
out
push
xorb
stos
pusha
jp
mov
xor
jno
sub
loope
cmpsb
push
pusha
adc
int
mov
lods
out
jmp
adc
int
lods
mov
xchg
push
mov
aaa
lods
enter
xchg
rclb
pop
scas
jbe
xchg
xchg
and
cwtl
mov
in
lea
nop
or
pop
lahf
jle
push
adcb
mov
insl
out
gs
popa
sbb
sahf
inc
mov
pop
lock
mov
in
pop
shlb
jno
fwait
lods
pop
jo
and
mov
mov
adc
mov
xchg
in
std
lods
jne
out
cwtl
dec
or
sti
cmc
lret
adc
repz
movsl
popf
in
mov
push
pop
popf
sti
std
repnz
xor
dec
mov
out
mov
ja
lcall
lea
test
insl
js
sbb
imul
fnstenv
adc
xor
and
add
and
inc
pop
sub
dec
cmp
pop
pushf
mov
imul
outsl
pop
inc
add
out
xor
inc
lret
ficomps
popf
adc
je
js
add
xor
sahf
pop
and
push
mov
iret
push
clc
sub
push
cmp
out
out
daa
imul
cmp
fildll
fidivs
stos
lock
sub
aam
inc
cld
mov
ret
lds
lods
jmp
test
jns
aad
lcall
lock
and
push
cmpsl
xchg
shl
aad
add
pop
into
push
or
cmpsb
xchg
dec
push
test
cmp
cmp
jo
fistpl
sub
hlt
cmpsb
xchg
scas
or
sti
xchg
cmc
cmp
iret
mov
dec
cli
dec
shlb
mov
addl
popa
hlt
pand
cmp
pop
adc
fs
add
es
enter
jmp
push
sub
jno
cmp
lods
pop
testb
insb
push
xchg
idivl
ljmp
ja
test
leave
aam
xor
dec
andl
loopne
lods
cmp
mov
xlat
jp
mov
xor
cmp
int3
pop
jbe
xchg
add
rorl
dec
push
mov
flds
inc
sbbl
mov
mov
nop
xchg
and
mov
ficoms
xor
mov
pop
xor
lods
xor
sub
call
das
lods
pop
int
loopne
js
dec
ss
or
into
add
scas
andl
sub
xorl
cmp
daa
scas
cmp
sti
push
adc
jl
dec
std
sahf
daa
cmp
ret
mov
and
outsl
test
mov
adc
push
add
inc
adc
inc
movsb
sub
lods
out
in
jns
dec
add
cmpsb
xchg
xchg
aam
out
pushf
sub
out
out
mov
dec
es
xchg
aam
xchg
aad
xor
scas
cmp
lock
in
and
push
cmp
call
mov
push
fdivr
add
xor
cmp
pop
xor
adc
aas
daa
shll
stos
or
push
xchg
enter
popf
lahf
sub
lahf
push
popa
lcall
call
dec
mov
rcll
mov
inc
push
adc
add
adc
and
mov
and
dec
push
cwtl
inc
inc
cmp
push
dec
pushf
and
or
pop
xchg
mov
mov
sub
mov
xlat
sub
push
sbb
adc
cmp
mov
and
inc
aaa
int3
inc
adc
inc
lds
test
sub
rcrl
push
inc
fwait
dec
ret
sub
xchg
cmpsb
add
mov
enter
jnp
mov
add
xor
mov
clc
ret
mov
add
push
imul
add
pop
aaa
mov
fcomip
leave
lret
aam
xlat
stos
xchg
fnstenv
xchg
cmc
and
jo
cmp
and
insl
pop
fs
and
leave
sarb
scas
sbb
cmp
addr16
aaa
xchg
test
insb
sbb
in
sub
fisubs
xchg
mov
xchg
aam
icebp
rorl
stos
sahf
rolb
xor
movsb
push
shll
xor
adc
mov
cmp
add
dec
and
cwtl
push
nop
loop
xor
in
dec
mov
imulb
inc
movsl
jp
sti
cmp
inc
call
cwtl
test
sar
inc
subl
inc
ret
decb
aad
adc
incb
idivb
adc
dec
mov
movsb
pop
stc
xor
and
inc
leave
inc
loopne
jbe
and
jl
xor
scas
clc
idiv
lds
xchg
call
pop
sub
or
mov
test
movsl
xchg
bnd
jle
push
or
and
cmpsb
push
pop
mov
mov
fidivrs
add
xlat
stc
pop
inc
ss
push
dec
sub
mov
out
ljmp
in
inc
mov
xchg
mov
sbb
push
fldcw
hlt
daa
mov
mov
mov
dec
out
fimull
mov
ficoms
and
adc
cmp
mov
mov
jns
into
fs
out
cwtl
ljmp
add
dec
mov
cmp
mov
push
mov
addr16
mov
fdivs
push
jae
sbb
pop
add
and
js
xor
sub
xor
outsb
shll
iret
cmpl
in
and
inc
xlat
js
inc
inc
or
rorl
inc
mov
push
data16
fldz
mov
xor
outsl
daa
adc
lahf
xchg
ds
imul
gs
clc
fisubl
mov
iret
add
in
mov
iret
jecxz
lahf
mov
add
mov
jno
cltd
shll
or
into
roll
in
out
sbb
dec
mov
addr16
sub
pop
psraw
sub
imul
mov
mov
inc
lret
sub
or
lds
cmp
cli
movsl
fs
cmc
fsubrl
mov
lcall
popa
scas
in
ljmp
mov
faddl
subb
push
pop
jne
mov
jno
xor
leave
add
orl
inc
loope
dec
cltd
mov
repz
sti
inc
fs
lock
and
and
or
jmp
insb
mov
pop
cmpsl
mov
xchg
fsincos
cmc
ror
mov
enter
sarb
cmc
jb
push
xchg
stos
loope
in
mov
mov
jge
test
mov
xchg
pop
stos
mov
jecxz
lock
in
jno
or
sub
mov
pop
mov
outsb
aam
cwtl
adc
rcr
cmpl
fsubl
repz
mov
xchg
insl
push
inc
fst
lock
mov
scas
cmp
mov
push
popa
lret
push
push
inc
mov
cmp
aas
xchg
ss
mov
sub
mov
outsl
out
out
cmp
lods
push
int3
cmp
push
arpl
mov
xor
adc
cltd
cmp
movsb
andl
push
div
add
push
loopne
lods
outsl
popf
pop
movsl
dec
movsb
jb
stos
test
xor
mov
xchg
pop
xor
or
mov
sbb
fwait
xchg
aam
jnp
push
test
xchg
mov
or
cli
mov
add
or
dec
sbb
xorb
xlat
or
out
mov
and
mov
jmp
icebp
pop
out
arpl
mov
push
das
pusha
xchg
loope
pop
pushl
ds
fstp
lret
jmp
mov
daa
mov
loop
pop
sahf
cwtl
pop
cmp
les
mov
jno
xchg
fbld
adc
enter
dec
mov
mov
mov
test
inc
das
cmpsb
pop
sbbb
sbb
push
repnz
xchg
stos
sahf
ljmp
lds
or
aaa
sbbb
testb
icebp
mov
pop
pop
outsl
jg
loope
enter
es
or
push
pop
jg
xchg
push
cmpsb
pop
rcl
sbb
or
xchg
and
mov
fwait
ret
add
sbb
jle
lock
mov
leave
lret
sub
cwtl
and
loop
dec
std
lcall
push
sti
fsub
inc
icebp
sub
mov
push
or
push
repz
xchg
dec
fists
or
mov
jle
iret
mov
jnp
push
sub
or
ret
cmp
fwait
jns
or
mov
jbe
dec
shl
out
mov
rorb
ret
mov
cmp
pop
cmpsl
mov
sub
push
cwtl
stos
pop
jle
fwait
ret
cmp
out
push
xor
clc
into
in
in
loopne
add
cmc
cwtl
ret
fwait
cld
jo
in
shlb
adc
nop
fistps
add
sub
cs
rcrb
add
dec
sbb
xchg
cwtl
jb
pop
xchg
adc
add
in
pop
or
aam
pop
pop
insl
cmp
ljmp
adc
dec
cmpsb
lock
mov
jmp
cld
jae
jg
jo
push
fiadds
cmp
sbb
mov
mov
mov
scas
or
stos
xchg
mov
jnp
ds
imul
mov
push
mov
fsubr
xchg
dec
pop
scas
inc
mov
jo
jmp
xchg
rorl
pop
xor
test
out
pop
jb
push
pop
fwait
mov
sub
mov
insl
icebp
push
loopne
mov
ficoml
sub
gs
faddl
stos
scas
adc
outsb
jno
leave
dec
push
mov
xor
test
sub
js
or
mov
xor
lcall
cmpsb
fs
or
in
inc
loope
xchg
xchg
mov
into
in
test
hlt
mov
or
pop
jns
ljmp
jge
mov
sub
adc
lcall
test
inc
in
jno
pop
into
adc
xchg
cld
jb
sbb
adc
outsl
push
pop
push
out
pusha
push
mov
or
movb
sbb
stos
pop
pop
mov
mov
inc
addr16
call
or
outsl
cmp
rcrb
inc
aad
loope
adc
rcrl
jb
push
cltd
outsl
jnp
shlb
jns
in
testl
int
jl
sbb
jns
loopne
sbb
cmp
mov
push
fisubl
sub
rcl
aas
pusha
dec
mov
ror
ficompl
mov
enter
inc
adc
mov
xor
xchg
fildll
add
xor
mov
fldenv
lret
adc
sub
gs
lock
cmpsb
inc
into
jo
cmp
out
in
test
cmp
mov
js
adc
lods
sti
xchg
add
add
sti
test
cmp
adc
dec
sub
pushf
inc
mov
mov
add
xor
aas
nop
pop
sbb
mov
insl
rcr
rorl
lret
mov
push
data16
imul
xor
in
xchg
bound
mov
in
pop
inc
scas
xchg
iret
mov
xchg
push
jmp
incl
pop
outsl
pop
xor
ljmp
push
jnp
outsb
or
add
mov
les
push
inc
jmp
lahf
mov
add
xchg
outsl
sbb
jle
lods
fs
sbb
out
inc
in
inc
ss
add
mov
and
adc
cld
cmc
aaa
movsb
insl
nop
pop
test
jne
outsl
mov
jns
test
add
setae
sbb
ss
jns
inc
out
in
mov
mov
arpl
xchg
pop
ljmp
repz
mov
add
push
shlb
das
fldl
insl
idiv
bound
lea
cmpl
add
cmp
fildll
loope
mov
jnp
out
stc
mov
or
cmpsb
fxch
cld
push
and
pusha
dec
loope
dec
jp
stos
in
inc
mov
nop
or
int3
inc
fwait
cmc
jg
popf
and
jbe
add
pop
mov
push
sbb
into
dec
inc
push
testb
mov
in
out
add
fbld
js
pop
rclb
icebp
and
popf
dec
cmp
ret
aad
add
ss
mov
aam
ficompl
or
shrb
lods
shlb
inc
mov
lock
jmp
pusha
repz
dec
pop
mov
out
fwait
lods
sub
mov
out
nop
and
and
sbb
ficomps
dec
mov
stc
sub
inc
test
mov
imul
loope
sbb
dec
loopne
and
mov
iret
lock
pop
cltd
jae
push
lds
dec
fsubl
arpl
ficoms
es
xchg
lods
ds
or
mov
int3
dec
ret
in
aas
sahf
cltd
pop
sarl
or
inc
cmp
mov
fcompl
and
gs
lods
loop
dec
adc
mov
add
hlt
xchg
test
jmp
dec
mov
jp
mov
shl
es
pop
ss
lods
and
fnstsw
mov
cld
jb
jo
mov
outsl
sub
mov
cmp
push
enter
int
pop
cmpsl
movsl
daa
fstps
mov
test
ljmp
jno
insb
cmp
xor
xor
sbb
adc
subl
sub
rcrb
ja
sbb
imul
shlb
mov
movsb
or
sbb
add
orb
sbb
mov
and
das
cmpsl
add
adc
dec
pop
pop
sahf
xor
mov
aam
js
dec
icebp
mov
and
xor
add
out
pop
sbb
jp
or
cwtl
xchg
scas
std
cltd
sarb
out
cld
insb
mov
imulb
adc
mov
push
cmp
or
test
dec
test
cmp
enter
shll
pop
add
push
repz
fidivrl
in
mov
jbe
test
fwait
or
jo
loope
inc
cmp
cmp
xor
cwtl
loop
lret
sbb
jle
sub
jbe
aaa
and
outsl
mov
fiadds
mov
xor
inc
sbb
outsl
push
fisubl
stos
mov
and
cmc
in
pop
dec
add
inc
nop
xlat
test
dec
je
dec
cmovno
and
dec
outsl
popf
push
imul
add
jo
cmp
andb
mov
sbb
mov
add
mov
movsl
xlat
sub
lahf
movsl
pop
imull
sbb
pop
xlat
add
mov
int3
xchg
and
js
cltd
or
loop
mov
push
jge
test
fnstcw
imul
es
iret
js
sbb
mov
div
icebp
out
pop
mov
pop
adc
shlb
mov
mov
ja
dec
cwtl
add
int3
cmpsl
lock
fistps
jmp
pop
nop
jnp
int
or
xlat
pop
xchg
sbb
and
and
cmp
rcll
leave
push
aam
insl
arpl
notb
hlt
inc
mov
mov
pushf
repz
cwtl
add
push
inc
add
loopne
std
add
or
not
aas
dec
out
xchg
aas
sub
xchg
fwait
xor
mov
jecxz
jnp
push
and
cli
push
jmp
push
sub
jp
rorb
push
aam
pop
add
inc
fnstcw
in
or
lcall
mov
add
aad
hlt
gs
xchg
aaa
xor
mov
or
enter
mov
sub
jg
adc
daa
jno
hlt
xor
sub
pop
aas
fwait
jnp
js
cmp
sub
hlt
orb
in
cmc
push
ss
and
jbe
sub
and
out
mov
gs
push
dec
mov
repnz
ds
ljmp
jg
xchg
lret
mov
push
fstpl
cmpsl
jns
rcrb
cs
int3
cmp
mov
out
popf
aaa
pushw
scas
outsl
fldenv
push
push
push
ds
dec
cmp
add
push
icebp
imul
icebp
in
xor
bound
icebp
cwtl
into
mov
push
push
pop
in
iret
sub
pop
fsubr
int
fisttpll
les
mov
mov
cmpsb
es
mov
jg
popl
popf
cmp
hlt
pop
inc
fistps
clc
push
fdivrs
push
data16
lcall
dec
adc
push
mov
pop
mov
xor
xchg
mov
pop
jp
mov
in
cmp
jmp
jp
mov
pop
xchg
test
pop
movsb
cwtl
or
adc
xor
or
in
loop
test
lds
mov
les
ss
nop
mov
xchg
mov
inc
movsl
sub
mov
lods
out
int3
fs
and
xchg
in
mov
mov
push
dec
pop
sub
and
leave
xor
add
sahf
imul
or
fisttpl
aas
hlt
scas
and
test
push
jo
mov
mov
movzbl
pop
jo
mov
bsr
pushf
in
lods
push
and
fidivrs
into
jg
xchg
push
lods
test
mov
xor
fs
pop
ret
dec
addl
jle
out
mov
mov
rorb
notb
sub
sbb
mov
jmp
dec
shrl
cmp
jge
cmc
mov
fdivp
xchg
jle
cmpl
je
jg
or
mov
jne
imulb
mov
out
push
xor
inc
aad
mov
lret
jo
mov
addr16
push
or
std
insb
ja
les
and
push
sub
sub
fidivrl
push
loop
or
les
pushf
cld
or
popf
xor
push
sti
push
fldenv
mov
dec
mov
push
jle
jae
call
mov
shlb
add
mov
add
ljmp
mov
ljmp
sbb
pop
sbb
xor
fcoml
jb
mov
test
in
out
push
fsubrl
out
or
call
bound
in
xchg
push
cltd
fildll
and
dec
ja
repnz
inc
dec
fidivs
xchg
pushf
out
out
into
mov
sti
pop
mov
inc
mov
out
pusha
inc
adc
dec
xor
fldl
into
mov
mov
cmpsb
ret
mov
out
imul
lahf
inc
cld
sub
cmp
imul
in
pushl
cltd
xchg
adc
xor
ss
sub
iret
aas
dec
push
push
bound
nop
movsb
rcll
lret
or
adc
cs
xor
in
inc
jns
dec
mov
js
stc
inc
scas
hlt
mov
ljmp
movl
rclb
and
data16
aaa
shr
push
ror
out
int
mov
and
aas
adc
cs
lret
sbb
enter
jnp
pop
xchg
clc
shll
in
lock
sub
sub
gs
mov
jnp
add
pusha
inc
jge
push
out
adc
repz
add
dec
test
add
pop
popf
gs
dec
xchg
in
xchg
push
jp
dec
mov
cs
lahf
lock
sbb
adc
cmc
and
rclb
ret
mov
xor
cmp
lret
mov
testl
xor
mov
inc
decl
stos
dec
cmp
pusha
add
cmc
push
psllw
push
jno
pushf
mov
sahf
jmp
loopne
jmp
ljmp
sbb
out
movsl
addr16
cmp
clc
out
aad
stos
imul
mov
leave
inc
mov
mov
sub
lahf
adc
pop
inc
inc
mov
jl
lods
aam
inc
xchg
jnp
and
fcmovne
and
adc
leave
xor
movsb
mov
push
cmp
cmc
sbb
dec
cwtl
pop
sub
daa
add
xor
add
roll
and
xlat
push
sub
push
cmc
sub
out
mov
inc
jo
pop
mov
mov
pop
lcall
mov
cltd
pop
fs
xchg
mov
inc
dec
aam
adc
cmp
adc
jl
sbb
jbe
and
repnz
push
adc
into
mov
jo
adc
daa
cwtl
and
loop
repz
add
add
cmp
mov
ljmp
pop
jmp
pop
xorl
movsl
inc
inc
inc
lahf
push
fldl
dec
movsb
jno
pcmpeqb
mov
shll
jns
mov
mov
inc
or
jne
icebp
pop
and
mov
int
push
out
mov
mov
dec
sbb
stos
icebp
and
add
xor
or
sbb
sti
or
mov
add
xor
push
out
mov
mov
fisubs
mov
push
mov
loopne
push
jp
sub
jmp
pop
pop
les
int
xor
and
push
xchg
xor
and
mov
lret
or
ja
pop
sbb
pmulhuw
call
ret
mov
sbb
cmc
cmpsb
ficoms
test
fwait
sub
jle
cmp
scas
in
jb
das
pusha
in
jb
xor
mov
sti
inc
push
in
and
jnp
adc
or
jecxz
mov
mov
sarl
std
das
pop
sbb
lret
fildll
pop
mov
aas
repz
ret
sbb
inc
test
leave
push
test
jnp
xchg
fisttps
cmp
cmp
sbb
cmpsb
daa
rolb
mov
sub
clc
inc
fprem1
mov
cmpsl
popf
leave
shrl
add
fadd
push
dec
xchg
nop
and
mov
push
mov
notb
lret
fwait
or
cmp
jecxz
stos
push
jp
cmc
je
adc
pop
mov
push
mov
sbb
stos
xlat
in
mov
cmp
sbb
out
sub
mov
jne
sahf
nop
pop
lods
mov
dec
jecxz
lcall
int
jl
scas
sub
sbb
loopne
push
sbb
push
idivl
fldt
and
mov
adc
popa
cmp
xor
and
and
repz
popf
jae
ret
pop
cmp
add
add
pop
iret
mov
jge
sbb
stc
sbbb
popa
dec
and
mov
pop
imulb
or
or
inc
in
movsb
das
mov
out
lea
clc
out
lds
fwait
xor
movsb
scas
dec
inc
mov
lret
cltd
das
out
test
pushf
fisubl
jg
mov
pop
mov
jecxz
ficompl
push
jae
push
or
jle
nop
pop
sbb
fcoms
movsl
testl
xchg
fwait
mulb
jl
lret
sub
fldenv
or
cmp
push
call
mov
and
sub
jmp
mov
mul
push
imul
pop
and
pop
sbb
aam
pop
mov
pop
xchg
fwait
inc
pop
xlat
xor
mulb
scas
test
ret
sbb
xor
sbb
push
and
pop
out
addb
pop
sub
mov
cmp
fldcw
mov
xchg
fldcw
mov
dec
mov
bound
jno
aam
sbb
and
test
cld
leave
sub
mov
dec
rcr
lret
inc
push
xchg
shrb
int3
nop
repnz
cmpsb
mov
in
jbe
mov
mov
dec
sbb
mov
fsts
mov
push
add
dec
push
jnp
mov
xchg
add
fisubrl
out
xchg
adc
adc
mov
xchg
dec
ret
out
ret
or
mov
sub
in
adc
shr
loopne
aaa
mov
call
pop
mov
sahf
das
cmp
int3
ds
rolb
pop
call
in
sub
add
push
mov
jo
or
movsb
icebp
inc
lretw
lea
push
xor
push
ja
and
inc
subl
popa
std
mov
lock
mov
xchg
sti
xchg
stos
jne
cmp
push
add
sti
or
push
mov
lock
cld
push
popf
ret
mov
lret
imul
in
inc
mov
jp
xchg
aam
xor
incl
cli
jb
xchg
pop
out
mov
mov
daa
sub
xchg
imul
adc
lret
das
add
loope
fsubp
out
mov
mov
mov
xor
adc
adc
arpl
sub
jo
test
leave
test
cmp
xchg
insb
push
jecxz
insl
imul
add
mov
sub
pop
js
mov
mov
pop
dec
cs
enter
aaa
add
out
jecxz
mov
test
lock
std
push
mov
addr16
popa
cli
mov
sbb
orb
xchg
mov
pop
and
pop
lea
sti
aas
clc
inc
in
test
ret
add
add
pop
cmp
xor
cmp
adc
fildll
jae
cmp
xchg
xorl
inc
repnz
jo
shll
test
dec
hlt
sarl
push
mov
mov
js
cs
into
in
iret
push
out
cltd
push
cwtl
xor
in
hlt
sbb
sub
jge
mov
xor
in
gs
mov
xor
cmc
addl
jecxz,pn
sahf
cli
lea
mov
or
xchg
jge
test
cmpsl
decb
cltd
dec
push
push
loope
mulb
stos
dec
cmp
inc
enter
jle
and
xchg
outsb
out
fwait
mov
jne,pn
mov
adc
mov
sbb
sbb
cmc
jbe
in
push
mov
test
add
into
jno
mov
mov
pop
jno
outsl
adc
mov
lahf
fstl
popa
test
or
imul
aaa
js,pt
je
loopne
add
addr16
test
push
and
addr16
adc
xchg
add
mov
mov
inc
mov
inc
ljmp
dec
or
sub
in
lret
outsb
in
xchg
xchg
int3
adc
lcall
cltd
mov
mov
jmp
lea
dec
js
sti
push
mov
fstpt
and
adcb
gs
add
push
mov
addr16
fwait
clc
insb
loopne
sbb
rclb
cmpsl
xor
ret
xor
xor
ret
lea
lret
in
push
mov
fdivl
mov
or
cltd
sub
test
bound
dec
in
xor
lcall
mov
push
lds
insb
dec
rcrl
enter
cmp
cmc
or
and
adc
cli
pop
inc
and
inc
jae
pop
imul
repz
push
mov
sbb
jg
std
mov
mov
push
mov
ljmp
jg
push
jo,pn
jle
xchg
lods
test
dec
mov
aas
xor
lcall
idivb
push
jecxz
notl
and
dec
cli
fidivs
aam
repnz
jg
jg
movsb
repnz
cmpsl
lahf
lods
mov
sub
ja
xor
jmp
xchg
sub
aaa
test
sbb
or
and
pop
outsl
ret
scas
mov
push
imul
dec
and
ret
add
xchg
fisttpl
inc
outsl
imull
xor
jns
pop
add
call
xor
jecxz
jno
icebp
loope
mov
loop
or
push
dec
xchg
mov
dec
or
rcr
iret
stc
lds
cmpb
loope
push
mov
add
fs
cli
in
ljmp
rcll
scas
por
bound
mov
pop
cmp
addr16
and
std
aaa
add
dec
and
mov
adc
enter
pop
loopne
jmp
pop
inc
pop
loop
sbb
mov
jb
push
cmpl
lock
lret
sub
xchg
fs
push
out
cli
daa
std
jp
lahf
adc
icebp
pushl
jle
mov
sarb
jmp
hlt
push
addl
mov
or
pusha
repnz
add
mov
ds
es
mov
popa
jnp
lods
jmp
jge
push
ffreep
lret
mov
lahf
dec
loop
inc
dec
arpl
pop
push
xchg
lock
sbb
push
cmc
mov
sbb
sahf
lods
push
sub
or
mov
xor
dec
sub
jno
push
rcr
jg
and
ja
pop
ret
adc
iret
xchg
scas
addr16
add
shl
aaa
int
inc
movsb
or
mov
leave
shll
cli
push
xchg
mov
notb
cmp
pushf
imul
call
xchg
aam
inc
lret
add
dec
arpl
aam
mov
sub
inc
mov
push
fistpl
adc
leave
into
inc
cmpsb
adc
std
mov
scas
ss
decb
int
jbe
push
bound
sbb
insb
cltd
bound
je
pop
in
cs
mov
idivb
loopne
scas
imul
mov
xchg
icebp
adc
push
iret
int
fisubrs
mov
loope
cmc
arpl
inc
js
inc
popa
aad
add
shl
lock
insb
in
les
scas
rorl
xor
pop
push
sbb
stc
in
movsb
xor
pop
mov
scas
mov
mov
clc
xchg
mov
adc
sbb
xchg
xor
add
mov
mov
jl
pusha
cmp
jb
adc
mov
aas
mov
xchg
ja
jbe
sbb
add
jno
sub
icebp
hlt
mov
jbe
push
lret
fidivrl
pop
cwtl
rclb
in
mov
add
add
test
xor
lret
fisttpl
sbb
out
and
ja
jb
xlat
push
sub
or
nop
push
adc
mov
nop
push
dec
mov
push
push
lods
movsl
test
enter
mov
mov
pushf
xchg
dec
movb
inc
testl
ja
lcall
push
sbb
lock
out
pop
outsl
push
cmp
jmp
lcall
je
push
mull
aad
test
ja
inc
dec
or
ret
jnp
and
shll
imul
mov
xcrypt-cfb
cmpsl
bound
xor
add
fwait
jecxz
xchg
mov
xchg
cmpsl
bound
push
ja
adc
jge
inc
cli
sub
lods
in
pop
push
inc
jns
jecxz
pop
in
ficomps
fcomps
daa
ss
push
mov
aam
les
imul
insl
or
mov
push
lahf
jp
add
jl
mov
xchg
stc
out
je
jns
mov
or
lcall
sub
lcall
xor
jle
fsubrs
dec
test
xor
inc
mov
fcoml
jge
out
imul
loop
mov
pop
popa
jp
xor
call
pop
popf
loope
push
call
jge
jb
imul
stc
cmp
sahf
mov
cmc
addl
ds
aaa
repnz
dec
adc
cmpsl
or
test
dec
aam
data16
sub
shl
lcall
jno
and
lahf
out
stos
repnz
dec
out
pop
mov
jl
int3
lods
xor
jmp
push
and
jnp
jb
sti
out
mov
dec
psubusw
mov
add
jns
push
cmpsl
enter
mov
sbb
mov
xchg
fcmove
pusha
arpl
sbb
sbbl
and
pop
movsb
lods
or
lret
in
add
fimuls
pop
outsl
flds
scas
mov
test
fidivl
loopne
pop
lcall
pop
push
cmp
mov
ja
fwait
mov
push
fcompl
sub
dec
in
inc
xchg
pop
loopne
gs
xor
aaa
scas
mov
lock
popf
dec
ficoml
pushf
loop
out
sub
mov
xchg
xchg
adc
pop
movl
mov
aas
mov
repz
adc
ss
inc
pop
enter
jge
mov
cmp
xlat
inc
sbb
loope
daa
inc
mov
mov
add
sbb
jle
mov
mov
xlat
push
sbb
cltd
xchg
ss
int
jmp
jmp
push
sub
arpl
mov
cli
push
push
sbb
xchg
and
mov
add
push
aaa
and
stos
xchg
sub
rclb
mov
mov
push
adc
es
outsl
jb
and
dec
xchg
pop
cli
push
fdivrs
dec
pop
cmpsb
lahf
fwait
push
dec
aam
jp
cmc
ja
or
scas
ss
imul
nop
adc
push
into
icebp
xchg
test
push
xchg
pop
or
fisubs
pop
stos
out
cmpsb
xlat
incb
jo
and
push
and
xchg
imul
xlat
daa
repnz
mov
fdivrs
push
inc
out
jns
lret
pop
lds
out
hlt
mov
push
out
push
sti
daa
je
mov
jp
pop
and
cmpsl
cmp
insb
mov
inc
pop
push
cmp
mov
iret
cmp
push
sbb
inc
cli
lods
daa
xchg
lahf
adc
aad
jge
push
pop
ret
js
jmp
xor
scas
add
ss
dec
in
push
jnp
mov
mov
jmp
cmc
cmp
jb
xchg
mov
pop
jae
les
xchg
aas
dec
ret
pop
out
shlb
cmp
cmp
cs
subb
pop
xorl
andb
imul
dec
xor
cmp
jg
cmp
xor
imul
ja
mov
ret
imul
cltd
cld
mul
fs
mov
xchg
mov
jle
pop
lods
inc
jmp
ret
lds
sub
andl
xor
ljmp
push
mov
xchg
mov
push
push
sbb
fstpl
inc
mov
mov
js
mov
mov
test
jl
rol
mov
cli
testb
cmp
test
push
xchg
push
aad
mov
test
xchg
or
cmp
aam
and
adc
mov
adc
add
mov
lahf
xchg
add
xchg
in
data16
xchg
bound
pop
jb
adc
adc
sbbb
mov
push
cltd
in
push
out
icebp
pop
inc
jb
out
out
dec
dec
inc
sbb
lods
lahf
idivb
xchg
or
sbb
stos
add
inc
inc
mov
or
add
xchg
pop
add
aad
in
mov
add
cmpsl
in
sbb
lea
push
dec
hlt
xor
aad
je
jbe
add
shrl
mov
enter
jecxz
jbe
add
push
das
or
mov
pop
add
jae
or
sub
movsb
pop
call
addr16
mov
cli
jge
ljmp
int3
xor
gs
fcmovb
mov
sbb
xchg
stos
cmp
aas
mov
fadd
fxch
fmul
mov
or
push
cmp
xor
cmp
add
jge
sub
or
shlb
lods
ds
fldt
inc
cmp
mov
pop
sbb
scas
add
fisttpll
xor
xor
arpl
je
mov
mov
cmpsb
push
cld
fisubs
sub
test
inc
repnz
hlt
addr16
cmp
adc
or
or
hlt
or
jle
lret
inc
fildll
adc
mov
xor
in
pop
out
jle
xchg
movsl
cmp
dec
fsubrs
lcall
xor
mov
add
mov
dec
fwait
sbb
mov
mov
scas
mov
lods
jl,pt
in
xor
ja
insb
push
jl
sub
aam
inc
pop
sub
clc
aaa
mul
cmp
inc
sbb
xchg
les
add
in
cmp
xchg
out
ljmp
cmp
push
xor
outsb
mov
add
in
sub
dec
sub
sbb
sti
arpl
scas
sbb
push
or
flds
in
and
das
mov
cmp
fs
and
push
vpslld
stos
sub
adc
outsb
ljmp
mov
mov
and
stos
cmp
mov
insl
repz
mov
cmpb
loop
movsl
hlt
ret
jecxz
mov
pop
add
lods
in
jl
les
icebp
ja
hlt
jg
xor
mov
mov
loop
pop
aad
sub
jl
ss
sub
xorb
mov
xchg
mov
fisubl
je
rcl
mov
sub
dec
push
lret
and
les
nop
clc
loopne
push
call
js
repnz
xchg
shlb
test
pushf
mov
pop
jecxz
popl
jo
imul
dec
dec
mov
and
sahf
fstl
mov
sbb
stos
loopne
xor
insb
add
rorb
mov
movsl
add
shl
cmc
cmp
je
test
int3
mov
out
mov
push
in
sti
cmpsl
cmp
push
xchg
mov
ja
imulb
inc
insb
cmp
push
out
int
bound
ss
pop
or
sub
push
or
ljmp
or
dec
movsl
lds
or
cmp
das
scas
sahf
add
sub
cmp
call
pcmpgtb
leave
test
jns
mov
inc
pop
rorb
inc
mov
inc
dec
adc
pop
sub
push
dec
pop
js
inc
stos
testl
js
or
sbb
xor
test
cmpl
mov
xchg
dec
lcall
ljmp
int3
es
das
sub
mov
mov
pop
pop
mov
inc
aaa
std
iret
sub
out
inc
stos
mov
xchg
jl
shrb
add
fwait
scas
imul
out
dec
xchg
pop
mov
popa
popf
rorl
es
or
cmp
mov
rorl
dec
js
mov
and
push
fcmovnbe
scas
xor
add
jnp
gs
and
mov
dec
jae
pop
and
sub
cld
xor
inc
mov
push
or
pop
add
ret
jmp
fsincos
aaa
push
lea
mov
stc
add
lds
movsl
cmp
pop
xchg
mov
addr16
inc
pusha
push
mov
sub
dec
push
sbb
sbb
jo
jnp
push
ds
in
and
icebp
xor
add
sbb
mov
imul
pop
xchg
cmp
imul
fidivrs
push
inc
mov
mov
jmp
push
bound
push
or
test
stos
jmp
add
sub
or
outsl
nop
cmpsb
push
out
les
into
popa
out
mov
mov
es
dec
js
dec
xchg
and
and
xor
nop
aam
inc
bound
popf
or
cmp
imul
jecxz
mov
jge
stc
inc
xchg
and
je
adc
aad
enter
mov
push
push
iret
addr16
lock
les
xchg
cs
adc
pop
pop
sub
test
push
bnd
popa
fisttpll
outsl
mov
adc
xor
mov
jg
mull
xor
xchg
sbb
test
jb
stos
test
inc
dec
cmp
test
cld
cmpl
dec
mov
lds
out
sbbb
cs
xchg
jno
test
rcrl
testl
xchg
mov
sub
cwtl
std
ret
jns
inc
cmpsl
push
incl
mov
and
mov
or
xchg
iret
divl
insb
or
cld
jbe
pop
jb
out
test
pop
adc
scas
in
dec
jge
icebp
jl
das
ljmp
lret
addl
sbb
bsf
aad
jno
inc
shlb
negl
sbb
and
push
fs
push
fisubrl
jbe
lds
imul
and
icebp
inc
xchg
adc
add
adcb
jne
int3
stos
fimull
sbb
mulb
pop
cmpb
xchg
inc
mov
mov
dec
dec
stos
push
scas
mov
push
xchg
jge
movsb
leave
xor
lret
jae
or
pop
jle
cmpsl
mov
mov
and
push
mov
aaa
jmp
fistl
xor
test
adc
adc
add
cmp
stc
int
imul
leave
call
mov
ljmp
ret
rorl
jns
or
pusha
das
xchg
xchg
mov
out
pop
mov
sub
jns
test
cmpsl
push
ret
into
sbb
scas
cmpsb
cmc
in
pop
mov
fistpl
dec
lock
and
cltd
mov
push
mov
loop
fyl2xp1
cmp
stos
rcrb
sub
cmpl
stc
mov
pop
add
pop
cs
adc
out
mov
rcrl
fists
lods
repnz
mov
jge
cltd
loop
mov
cli
or
mov
insl
pop
mov
sub
xor
stc
cmp
shr
scas
sarl
fidivs
inc
adc
je
mov
pushf
lods
gs
test
addr16
orl
jns
iret
insb
fidivs
out
ds
mov
dec
mov
mov
scas
cs
loopne
push
jnp
cld
fmuls
pop
xchg
add
jecxz
push
mov
cmp
shl
cmpb
pop
push
cli
jmp
pushf
rcrb
mov
cli
test
sbb
lret
mov
lret
sbb
sbb
mov
mov
pushf
in
mov
in
ret
imul
jle
stos
arpl
mov
sbb
inc
push
push
pop
push
lret
add
mov
pusha
jbe
lea
lahf
xchg
sub
push
outsl
jno
mov
hlt
pushf
jge
inc
or
add
mov
jnp
gs
addr16
aad
inc
mov
fcomps
cli
scas
in
out
lds
add
test
pusha
sub
sahf
xchg
mov
lds
jp
xor
movsl
adc
cmp
iret
pop
dec
xor
mov
push
sbb
sahf
popl
or
push
mov
dec
cmp
popa
lret
cmp
pop
jno
lcall
ljmp
daa
icebp
adc
bound
jae
ja
mov
sbb
out
inc
arpl
imul
ret
in
jp
jl
push
pop
mov
stos
fstpl
gs
cmpsl
inc
lcall
and
loopne
mov
cs
shll
xchg
pop
xchg
cld
notb
stos
sub
jmp
inc
les
or
and
xchg
push
jecxz
mov
pop
jecxz
add
stos
int
pop
hlt
adc
push
test
inc
std
inc
pop
lahf
push
push
xor
sbb
mov
inc
sbb
aaa
popa
mov
ret
mov
pop
sbbb
mov
and
hlt
cwtl
push
sbb
enter
inc
pop
xlat
jo
or
loop
cmpsl
pop
lea
cmp
data16
loopne
and
pop
lret
sub
cmp
out
fistl
adc
pop
pop
data16
scas
xor
push
out
xchg
out
xchg
sbbb
pop
xor
xor
sub
test
adc
add
imul
mov
insl
xchg
loop
lock
jecxz
mov
inc
pushf
mov
in
sbb
cmp
icebp
divl
shl
mov
aad
pop
clc
pop
sbb
out
mov
and
xchg
add
scas
adc
xchg
out
popf
cmp
loope
dec
fcmovbe
jmp
xchg
fwait
repz
mov
daa
jg
fnstenv
adc
iret
or
push
mov
fldl
cmpb
into
jbe
cmp
mov
psrld
sbb
jno
mov
or
mov
jle
dec
dec
js
lds
aaa
mov
mov
add
lds
jno
xor
push
lods
imul
xchg
mov
mov
aad
movsb
mov
arpl
push
mov
loop
cmpsb
bound
lods
iret
sbb
pop
and
dec
inc
and
fwait
mov
es
jae
jno
das
sub
std
mov
pop
push
sbb
mov
clc
mov
sahf
cmc
sbb
arpl
inc
jecxz
jecxz
pop
xchg
inc
lods
mov
repz
arpl
cltd
lret
jnp
lsl
cmpsl
sarl
add
jge
cmpsl
fst
cmp
mov
arpl
cmp
imull
out
jmp
xchg
test
cmpsl
shr
iret
repnz
inc
fistpl
mov
jb
pop
fnsave
cs
inc
xor
arpl
adc
aad
and
xlat
int3
sub
and
lods
ss
loop
xchg
sub
mov
paddusw
lods
cmp
mull
xchg
pusha
adc
pop
pop
mov
and
sbb
adc
mov
and
adc
inc
or
dec
pop
sbb
jae
out
pusha
movsb
fnsave
ja
mov
dec
pop
jae
xor
js
bound
into
sbb
lea
cli
lea
sub
movsl
pop
iret
mov
cmp
test
push
pop
incb
test
outsb
cs
in
or
inc
mov
aam
jp
mov
jmp
add
mov
lahf
xorb
enter
pop
arpl
out
push
or
pusha
shl
popf
fnstenv
inc
jno
push
std
enter
cld
rolb
sbbl
jg
cld
pop
rolb
push
pop
scas
push
pop
cmpsb
pop
scas
imul
cld
in
fsubl
stc
and
pop
lds
and
cmp
xchg
lds
or
cmp
jbe
add
xchg
jg
cltd
gs
or
xchg
push
enter
cmc
popf
fidivrl
xorb
test
enter
leave
movsl
dec
orb
xor
cld
in
pusha
xor
std
adc
push
fbld
or
push
popf
aam
pushw
xor
dec
out
dec
std
sbb
jmp
adc
mov
add
testl
pop
dec
mov
dec
cmp
mov
jmp
add
mov
cmp
gs
inc
adc
inc
mov
mov
pushf
movl
xchg
mov
dec
sub
inc
jg
push
std
jl
addr16
pop
or
dec
test
bound
aas
mov
lea
outsb
ljmp
in
mov
or
clc
mov
push
add
sub
loopne
stos
int
push
push
mov
mov
lahf
ficompl
adc
out
dec
insb
xor
dec
cmpsb
in
dec
repnz
rcr
in
xchg
lret
xor
cmc
fsubrp
idiv
xchg
cmp
bound
push
dec
push
out
enter
mov
lds
and
xchg
xor
push
ja
mov
push
mov
dec
out
subl
ds
insl
cmp
pop
xchg
stos
sub
mov
shrl
dec
xchg
mov
push
ret
ds
pop
inc
xchg
daa
inc
repz
mov
daa
dec
stc
fsubs
mov
mov
or
in
xor
push
inc
cwtl
aas
mov
mov
adc
cmp
rorb
mov
bound
jge
sbb
iret
cmp
test
inc
sbb
js
icebp
pop
sub
mov
bound
iret
push
sahf
mov
pop
inc
out
and
lods
addr16
xchg
lea
stos
shrl
xor
mov
mov
ja
imul
ret
or
jl
int3
test
dec
leave
call
jns
and
or
xorb
or
mov
adc
dec
push
lock
insl
lods
mov
inc
dec
scas
lods
shlb
ffree
xor
mov
in
cmp
loop
sbb
repz
fidivl
push
imulb
cmp
pop
and
scas
into
inc
mov
pop
js
nop
mov
add
mov
mov
adc
lahf
inc
inc
aaa
push
mov
and
inc
int3
pushf
add
mov
mov
and
leave
out
xchg
fisubrs
stc
lods
cmp
mov
and
mov
push
mov
test
xchg
lahf
cmp
movsl
sbb
movsl
pop
test
add
cmc
cmc
adc
add
mov
in
pop
xchg
sub
lcall
xor
dec
pop
out
push
adcb
push
int3
lock
or
js
mov
mov
pop
and
divb
and
aam
jecxz
addr16
sbb
push
push
es
lods
adc
xchg
aas
inc
cmp
dec
xor
push
pop
mov
xchg
scas
repz
inc
popa
xchg
das
sbb
shrl
inc
in
xchg
cmpxchg
and
mulb
adc
imul
sbb
lahf
push
int3
push
data16
mov
shrl
ja
cltd
or
lock
xor
out
pop
imul
mov
adc
ret
adc
jle
mov
cmp
inc
pop
xchg
push
lock
push
sub
and
lahf
xchg
mov
push
scas
repnz
addb
dec
push
sbb
sub
cmpsb
jmp
popa
xchg
stos
fucomi
repz
shrb
out
cli
dec
pop
jno
scas
adc
sbb
xchg
jl
js
aaa
sbb
and
mov
cltd
fs
movsl
cmp
hlt
mov
mov
push
cmp
jmp
dec
sar
xchg
aam
adc
jmp
jecxz
adc
sbb
cmp
mov
sahf
lcall
xor
lahf
push
leave
popf
dec
xor
fs
inc
pop
xor
add
sub
xor
sub
into
rcll
fldl2t
out
adc
push
adc
jne
jmp
fnstsw
es
leave
push
outsl
into
add
mov
lods
mov
jge
lock
stos
add
arpl
jae
bound
xchg
inc
out
push
or
aam
cmpl
sbb
adc
dec
cltd
dec
loope
sbb
jns
std
aad
shl
add
sbb
inc
jmp
mov
and
adc
adc
add
adc
and
arpl
hlt
shlb
dec
xor
stos
icebp
cmc
xor
and
cmp
jbe
adc
mov
inc
pop
dec
in
push
inc
mov
jb
fucomip
adc
fs
pop
jns
incb
or
mov
call
mov
add
es
dec
mov
xor
mov
jne
and
lods
loopne
add
dec
xchg
add
stos
xor
dec
jo
pop
sbb
rcrl
out
cmp
cli
inc
dec
orb
xchg
ret
sub
push
xchg
xchg
lea
js
adc
xor
mov
or
lret
inc
cmp
sub
jge
fs
mov
lret
mov
push
jae
push
in
stos
cmp
mov
in
loopne
out
mov
jnp
stc
and
cmp
push
clc
xor
sub
push
sub
push
xor
add
mov
icebp
and
jns
xlat
pop
pop
cmp
inc
sub
mov
mov
gs
lods
adc
das
pop
and
call
lea
xor
jnp
dec
jge
dec
lcall
jo
pop
std
out
lret
mov
pop
ret
bound
sbb
cmc
mov
or
mov
sbb
in
stos
fdivs
sahf
iret
sti
pop
sbb
push
push
iret
dec
out
in
add
or
stos
xor
and
cmpsb
mov
aas
scas
mov
imul
push
pusha
dec
int3
nop
jge
push
inc
leave
add
int3
jne
mov
leave
mov
sub
pusha
inc
cmp
je
jge
jmp
mov
ret
xchg
cmp
pop
arpl
jg
inc
out
js
pusha
imul
xchg
fcmovnu
xchg
test
shll
mov
and
mov
xor
and
rcrl
push
mov
pop
test
imul
pop
push
setl
repnz
shll
aaa
cli
insb
es
push
insl
mov
decb
sarb
mov
adc
cmpsb
lret
pop
xchg
ret
rorb
lods
jg
call
pop
pop
mov
fstps
imull
mov
jno
add
out
imul
fisubrl
stos
popf
fs
inc
sarb
mov
lahf
data16
sti
pop
fdivr
cwtl
mov
dec
pushf
bound
add
jge
mov
lods
xchg
shll
pushf
shr
pop
fldcw
int
sbb
pop
adc
add
sub
mov
xlat
aas
inc
xchg
cs
pop
pop
repz
pop
jle
outsl
push
out
mov
inc
pusha
shll
out
push
dec
repz
popf
cmp
ljmp
loope
cmp
jbe
dec
or
nop
addb
sbb
mov
fldt
loope
popf
test
jmp
jp
mov
xchg
lea
out
call
push
lcall
xchg
inc
push
subb
and
pop
and
cmp
pop
outsl
push
pop
movsb
add
pop
data16
stc
mov
sbb
cmp
mov
jp
sub
es
into
and
enter
fwait
ret
lods
mov
sub
cltd
scas
or
popf
fidivs
sbb
and
ss
add
fs
arpl
push
push
out
jle
call
xchg
fsubrl
and
lea
lret
pop
add
test
lods
fsubs
aam
mov
dec
jg
int
add
cmp
mov
push
xchg
xor
pop
addl
add
lret
mov
mov
add
aaa
out
int3
push
pop
add
and
push
add
jno
xchg
lahf
mov
prefetchwt1
inc
mov
cltd
nop
xchg
stos
in
int3
sbb
and
add
pop
jno
outsl
stos
in
scas
repz
cmp
dec
push
inc
jns
push
sub
xchg
addl
ljmp
fs
cld
sbb
or
dec
movsb
mov
jbe,pt
ds
fs
pop
xor
xor
imul
pushf
dec
sub
cmp
mov
stos
out
jle
mov
xchg
std
icebp
lahf
lcall
roll
mov
fwait
ret
dec
ds
std
sub
sti
push
mov
cwtl
mov
mov
in
ds
dec
test
push
pushf
pop
pushf
in
cli
push
mov
dec
add
lcall
push
cmp
mov
call
add
mov
ret
rorb
xchg
popf
clc
ds
and
sub
test
xlat
loopne
bound
call
js
pusha
mov
mov
cmp
je
mov
xlat
pop
dec
lods
and
rcrb
xchg
mov
sub
xchg
push
lods
mov
sahf
add
addl
fcomps
pop
cmp
jb
lds
sub
popa
imul
pop
repnz
addr16
xor
loop
test
jne
cli
and
push
push
cmp
dec
jae
call
mov
mov
hlt
or
adc
jbe
fdivs
mov
dec
or
fcmovu
inc
mov
dec
or
xor
in
out
xchg
inc
std
in
adc
bound
push
add
pusha
push
pop
add
call
add
sub
jmp
push
out
or
jb
xchg
repnz
jle
xchg
fldenv
jb
lcall
cmpsb
inc
cld
push
mov
mov
ss
xlat
in
fbld
adc
mov
aaa
mov
xchg
pop
out
push
mov
mov
in
dec
int3
or
daa
xor
hlt
mov
ret
stc
cwtl
shlb
pusha
add
inc
sub
xor
xchg
je
sbb
sbb
add
mov
cs
idiv
sub
and
mov
test
xchg
frstor
lea
add
in
loopne
jo
daa
imul
mov
push
mov
jo
sub
and
mov
add
fldcw
push
out
fsubs
jecxz
inc
xor
mov
and
pop
ds
pop
xchg
sahf
pop
cmp
pop
inc
fstp
mov
inc
mov
bound
push
jle
daa
mov
stos
ljmp
lock
into
and
mov
out
pop
and
popa
or
mov
ss
and
lret
call
shll
repz
jge
daa
xchg
and
push
xchg
jl
daa
nop
shll
ja
shrl
flds
out
mov
dec
pushf
pop
pop
jmp
push
je
mov
aam
mov
sahf
stos
fdivl
rorl
mov
mov
jb
xchg
lock
pop
xor
js
sti
push
sub
xlat
fyl2x
gs
xchg
jnp
sbb
out
xchg
cmpl
mov
mov
stos
cmc
insb
pop
ror
lahf
mov
clc
push
leave
outsb
ljmp
mov
testl
loopne
adc
dec
sub
mov
sahf
and
or
jg
push
mov
and
lods
mov
scas
mov
sub
sbb
xchg
popa
inc
jg
sub
add
fcom
mov
dec
mov
outsb
mov
xchg
xchg
pop
cmp
fists
icebp
jae
stos
adc
push
mov
and
ret
mov
lahf
test
lret
jmp
cld
mov
cmovs
lahf
aaa
fcomps
fs
int
or
jp
imul
xor
les
push
xchg
mov
pop
push
repnz
jp
or
int
loop
pop
or
test
sub
sub
adc
rol
mov
ret
push
and
pop
push
sub
adc
xor
xor
adc
addl
sbb
rcr
mov
cmc
xchg
icebp
or
ffreep
frstor
lret
push
add
ljmp
add
les
adc
pop
push
notl
ss
mov
push
jle
or
and
push
or
mov
ret
mov
mull
sub
xchg
repz
push
inc
pop
adcb
frstor
fisttps
ror
sub
dec
lret
imul
jmp
daa
imul
add
mov
scas
jp
roll
xor
fists
aad
xchg
jno
daa
sub
test
cs
fs
icebp
mov
push
out
insl
test
test
sbbl
adc
leave
rorb
hlt
call
dec
pop
std
fnstcw
iret
movsb
pop
push
fmull
call
jle
mov
pop
fildl
sub
sarl
fucomi
inc
xchg
pop
add
psubw
shl
call
ret
add
dec
xor
inc
sbb
shr
pop
cmp
jne
call
mov
ljmp
stc
pushf
add
sahf
jg
xor
andb
aad
aaa
ja
cmpsb
push
dec
sbb
dec
scas
mov
xor
mov
arpl
lret
loop
mov
xchg
push
xchg
or
notb
push
mov
and
or
aad
incl
pop
jb
and
cmp
mov
inc
fs
cmpsl
js
ret
flds
paddsb
stc
cmp
in
mov
jle
or
inc
ljmp
aad
pushf
push
inc
dec
andb
cmp
and
dec
enter
add
imul
jb
mov
lcall
gs
mov
add
cmp
nop
push
insb
xchg
and
mov
mov
test
jno
aas
pusha
adc
dec
and
ret
and
inc
add
xchg
mov
push
fidivs
outsl
daa
leave
dec
clc
sub
loop
push
gs
xchg
dec
mov
sub
xor
xorl
push
or
adc
std
jp
sub
push
inc
lret
bound
jns
push
scas
sub
pop
inc
xor
push
je
push
sub
push
call
dec
cmpsl
das
mov
or
sub
or
pop
std
nop
sbb
in
lock
mov
sarb
pop
loopne
movsl
adc
sbbb
push
adc
inc
xor
movsl
paddw
add
mov
fbstp
jnp
inc
fildll
or
xor
dec
adc
imul
sbb
mov
jp
add
cmpsb
pop
sbb
mov
cmp
push
mov
out
testb
pop
jb
adc
or
dec
std
mov
mov
popa
out
fildl
ljmp
or
fidivrl
push
mov
inc
popa
push
lcall
scas
sahf
out
jg
cmp
and
icebp
lods
mov
imul
fcomps
ljmp
jae
and
or
push
dec
xchg
push
adc
mov
movsb
push
test
addr16
out
jecxz
andb
fnsave
roll
popa
cwtl
cld
nop
mov
sbb
xlat
ss
jbe
pop
not
addb
scas
or
jne
imul
push
cli
shrl
jge
or
cmp
lods
add
jo
arpl
fcomps
es
inc
xlat
mov
mov
xor
pop
bnd
js
ficoml
ljmp
addr16
pop
sarl
push
xchg
or
sbb
addr16
jbe
std
push
rcrb
js
add
add
rcll
pop
movsb
ja
mov
push
fdivrl
enter
dec
push
lret
push
jp
ret
ss
mov
loope
sar
push
std
mov
mov
stc
aad
sbb
cmp
dec
out
xor
imul
icebp
in
imul
hlt
sahf
add
cld
jl
mov
cmpsb
fstl
pop
inc
mov
push
stc
and
dec
and
push
adc
addr16
sbb
fcompl
sub
arpl
ds
insb
sbb
mov
pusha
adc
jecxz
sti
push
xlat
iret
sbb
jns
sub
sbb
call
add
mov
jne
icebp
pop
inc
enter
add
push
arpl
leave
cli
lock
inc
mov
mov
push
movsl
test
inc
testb
fbld
jge
shlb
jbe
rorb
push
or
add
ret
pmulhw
aas
sbb
sbb
xor
jp
lods
dec
lods
dec
mov
cmc
aad
push
es
mov
jno
mov
test
das
or
out
and
lahf
jecxz
in
pop
outsb
push
pop
mov
in
cmp
mov
adcb
in
ss
fidivl
dec
scas
in
fidivs
or
cmp
adc
pop
mov
inc
push
pop
xor
push
mov
sub
fisubrs
fadd
dec
pop
rcl
fisttpll
sub
mov
add
sub
push
sbb
jmp
sti
jae
imul
xor
mov
sti
dec
sub
nop
scas
repnz
je
jp
push
nop
dec
pop
push
pusha
ljmp
mov
cmp
sbb
xchg
ljmp
aam
or
icebp
push
test
mov
lea
rorb
cwtl
and
jns
jle
cmp
add
xchg
jno
adc
enter
int
push
jle
sbb
scas
push
xor
sub
mov
pop
cmpsl
jo
loope
lret
hlt
popa
les
sbb
cmpsb
loop
call
cmp
add
pop
xor
cs
xchg
and
aas
xchg
or
sub
lea
rclb
dec
ljmp
out
sub
decl
jp
sub
dec
adc
repnz
jno
sub
adc
mov
out
mov
lods
add
mov
xor
js
pushf
or
mov
or
sahf
jp
fmul
fcomps
imul
inc
lea
xchg
dec
test
decb
sbb
mov
or
xchg
ret
je
fisttpl
mov
loop
lcall
adc
xchg
and
xor
loopne
dec
cmp
mov
pop
mov
dec
jmp
loope
in
aas
xor
icebp
outsl
xor
adc
dec
jecxz
leave
mov
inc
push
add
cmp
cli
mov
lret
scas
push
xchg
cmp
pop
push
mov
daa
add
out
nop
mov
bound
out
and
jae
mov
icebp
mov
es
mov
mov
fcmove
or
clc
mov
inc
popa
stos
mov
push
sahf
and
push
dec
fistps
leave
decb
nop
cmp
imul
sub
shrl
lock
add
lods
pop
into
xor
mov
fsubr
cmp
outsl
jb
flds
or
lods
ret
ret
mov
fwait
sbb
and
pusha
sub
setl
out
jg
mov
mov
insl
and
enter
lds
cmp
ret
popf
adc
stos
and
inc
pop
and
jge
xchg
push
add
ficoml
sti
or
aam
pop
ja
push
ljmp
inc
fdivp
test
subb
in
and
jae
ljmp
and
add
cmp
xor
jmp
sub
dec
addr16
sub
and
add
pop
push
popa
or
sub
sti
cmp
and
push
jo
repz
xchg
lock
cmpsb
xchg
cwtl
or
push
inc
adc
bound
les
pop
adc
gs
adc
test
rcr
sbb
xchg
xlat
mov
scas
frstor
hlt
pop
push
mov
jne
mov
sbb
xchg
test
push
inc
inc
jl
les
push
sbb
outsl
in
shl
xor
jmp
lret
js
sbb
daa
icebp
dec
jo
jg
test
movsb
xlat
sub
cmc
or
add
inc
mov
or
in
jmp
sub
je
or
ja
aas
in
nopl
mov
imul
mov
cltd
data16
outsb
add
jle
dec
xchg
pushf
pop
cmp
mov
xor
push
and
cmp
jg
rclb
not
jnp
push
mov
sub
jbe
or
jl
sbb
adc
stc
popf
mov
aam
adc
lods
mov
xchg
add
std
jb
mov
addr16
dec
std
pop
inc
mov
mov
jecxz
outsb
sarb
popa
addr16
push
push
jnp
into
outsb
pushf
std
mov
pusha
sbb
popf
insb
out
cwtl
jl
jbe
icebp
aad
jl
add
dec
lea
lock
xor
sbb
scas
repnz
and
cwtl
or
cmp
mov
stos
sbbl
int
mov
cmc
nop
sub
loope
in
clc
lods
adc
in
add
or
insl
das
scas
les
mov
mov
leave
ret
fucom
cmpsb
ret
dec
je
lods
mov
push
adc
xchg
push
mov
pushf
ret
push
rolb
rcrb
clc
add
mov
jno,pn
aas
jbe
loop
int3
repnz
nopl
rclb
loope
xor
mov
aas
adc
dec
xchg
and
cmp
out
or
in
loopne
gs
push
and
std
std
pop
cwtl
cmp
packuswb
mov
sahf
pop
stos
int
orl
test
movsb
mov
stos
and
xor
dec
jp
imul
adc
sub
fidivs
loope
mov
add
push
mov
pop
std
mov
les
in
mov
jne
lret
ror
xor
in
add
std
push
cmp
cmpsb
and
push
dec
mov
jbe
push
test
pusha
andl
incl
or
scas
cs
es
jge
cmp
mov
push
fs
insl
cld
ret
pop
cltd
fsub
jbe
xchg
pop
leave
jl
test
adc
shll
adc
mov
xchg
cld
aas
out
aad
sub
fadd
adc
pop
pusha
cmc
divb
test
and
or
test
mov
add
mov
leave
or
std
mov
aad
stos
lock
xchg
lret
mov
jns,pn
dec
fs
int3
sbb
add
in
xchg
lret
clc
outsl
jge
das
pop
mov
cmp
push
push
cld
push
mov
cmp
dec
and
jae
fsts
lea
mov
cltd
adc
cmpsb
insb
hlt
xor
in
popa
and
ror
xchg
mov
cmp
pop
add
adc
call
inc
push
addr16
xorl
cwtl
cmp
pop
test
sbb
std
popf
xlat
adc
nop
std
sub
xor
mov
xchg
pop
sti
and
and
and
mov
push
sbb
mov
mov
push
aam
lret
xchg
fisttpll
sub
dec
test
mov
ret
mov
sub
movsl
cs
int
dec
pusha
stos
out
pop
call
jo
int3
xchg
xchg
leave
pop
cmp
mov
mov
stos
mov
add
stc
push
pop
mov
cmp
ja
inc
outsl
flds
jmp
mov
sub
scas
jb
out
out
inc
sbb
loop
dec
mov
outsb
add
xorb
iret
pop
testl
mov
cmp
popf
mov
ficoms
test
bound
icebp
sarb
mov
jns
and
int3
push
cmc
jns
fsubrp
xor
pop
push
sub
xchg
xchg
or
mov
ja
iret
mov
mov
lock
scas
out
fdivr
adc
xchg
test
cltd
shll
scas
xor
iret
adc
pushf
mov
dec
mov
pop
cmp
lods
in
xchg
xchg
jl
rcrb
xor
xlat
bound
and
dec
imul
xchg
out
push
sub
or
pop
aad
jecxz
cmp
sbb
xchg
mov
xchg
test
cli
dec
add
jp
inc
stc
je
jbe
xor
or
and
mov
and
mov
or
daa
cmp
leave
push
pusha
sbb
cwtl
mov
bound
and
inc
or
bound
pop
cmp
fdivrl
leave
and
lock
mov
xchg
nop
imul
push
mov
lods
mov
push
stos
popa
push
fisttps
cmp
std
ss
pop
data16
cli
pop
es
repz
mov
mov
outsl
xor
xor
mov
sahf
aaa
cmpsl
xor
lret
inc
fidivs
inc
xchg
fwait
cmpsl
adc
out
test
or
inc
sub
aaa
nop
cmp
out
push
dec
es
orl
enter
mov
mov
push
sarl
mov
push
push
inc
andb
dec
jno
pop
sbb
mov
ds
arpl
imul
popa
dec
shlb
cli
add
fs
and
inc
sub
push
or
jecxz
fcompl
nop
inc
xor
xchg
out
push
lock
xor
loope
sbbb
mov
mov
rclb
test
mov
lahf
cmpsb
dec
scas
add
pop
rclb
inc
decb
mov
and
fdivrs
stc
or
and
popa
les
in
fwait
and
test
sbb
adc
cmp
jge
in
outsb
clc
dec
pop
dec
cmpsl
dec
jge
push
pop
dec
lcall
hlt
cmc
popa
push
je
pop
stos
pop
push
dec
lahf
jge
loope
adc
cmp
leave
sbb
push
test
dec
push
stc
arpl
clc
jl
lds
ret
in
daa
cmp
dec
scas
repz
icebp
pop
cmpsb
shlb
xchg
in
xchg
decl
ds
jl
mov
and
cmpsl
clc
inc
loop
jmp
mov
out
cmpsb
call
mov
mov
mov
push
in
lods
jg
roll
fistl
jno
insb
xor
in
mov
jb
fwait
cmpsl
inc
push
pop
hlt
push
data16
xchg
test
iret
ja
xor
mov
repnz
fistps
setg
sbb
fldlg2
mov
jne
imulb
inc
cwtl
sub
and
cmpsb
btr
push
sub
jge
movsl
mov
test
sbb
push
popf
cld
movsb
addr16
pop
pop
divl
inc
cmp
mov
adc
pop
lods
daa
mov
insb
push
push
mov
jbe
add
dec
fcoms
lcall
push
jae
sbb
mov
cmp
add
in
fmuls
lock
loop
ret
mov
inc
out
sub
rclb
xchg
outsl
inc
lods
lds
inc
stos
mov
lods
and
outsb
sbb
pop
mov
sub
adc
sbb
mov
lea
cmc
cmp
push
mov
shll
das
insb
insb
daa
into
xor
jmp
test
test
insb
mov
xor
mov
fimull
sbb
hlt
xor
cwtl
nop
mov
pop
adc
js
test
xchg
test
or
and
lods
int
push
fwait
arpl
arpl
xchg
and
icebp
push
mov
stos
mov
cli
out
pop
add
adc
les
adc
adc
hlt
iret
and
mov
add
sbb
insl
jns
add
shll
popa
jae
mov
into
test
popf
sar
sbb
mov
dec
xchg
sub
lds
add
adc
pop
incl
dec
pop
mov
scas
jmp
adc
popa
and
pop
rcl
sbb
mov
loopne
sbb
cld
or
jp
inc
pop
mov
push
mov
aaa
push
xchg
adc
xchg
jae
xchg
out
nop
imul
inc
pop
xor
jl
mov
fwait
cmpsb
lock
cltd
xlat
pop
and
outsb
cwtl
pop
mov
popa
int3
jb
out
popa
mov
xchg
inc
lock
mov
mov
movsl
sbb
adcb
mov
cmpsb
gs
mov
punpcklbw
ret
into
xor
sbb
push
jmp
inc
sbb
pop
repnz
xchg
pop
fstps
gs
inc
inc
mov
inc
inc
jmp
mov
in
lods
xlat
mov
lret
fimuls
cltd
ret
movsb
mov
jmp
fbstp
out
cmpsl
lock
push
mov
insl
sar
iret
inc
push
jo
pop
jo
inc
popf
ret
aam
test
push
stos
sub
or
imul
inc
xor
jno
vcvtdq2ps
cld
adc
dec
cltd
and
js
lahf
in
fisttpll
shll
cld
mov
jbe
sbb
sub
pop
rcrb
insb
sub
jp
add
movsb
das
out
inc
addr16
xchg
rcrl
push
sbb
or
push
pop
nop
fs
or
push
shlb
loope
mov
loop
lea
test
xchg
rcll
pop
aaa
mov
push
pop
es
stc
inc
cwtl
and
out
pop
shrl
stc
mov
cmp
push
jl
or
mov
cmp
repz
push
ffree
sti
push
mov
je
adc
sbb
adc
xchg
xchg
xchg
fadds
xor
hlt
fdivr
add
sub
xlat
hlt
adc
mov
push
dec
mov
test
cwtl
and
je
adc
cli
stos
mov
mov
or
mov
fcompl
jne
lcall
shll
cmp
leave
insb
add
lea
mov
int
test
fbstp
icebp
lret
js
mov
ret
mov
cmp
icebp
and
xlat
fdivl
push
dec
enter
mov
popa
add
inc
test
add
and
movsl
push
mov
cmp
or
fildll
add
cmp
add
arpl
or
mov
jnp
push
pop
dec
and
movl
cwtl
adc
pusha
jnp
enter
ss
aaa
adc
lock
inc
mov
icebp
mov
xchg
push
and
dec
or
sub
test
popa
xchg
popa
sbb
in
repnz
pop
imul
xor
rcrl
pop
movsl
in
push
dec
sub
push
dec
movsb
shll
bound
cmp
xor
and
dec
ficomps
mov
dec
rcrb
fnstenv
fisubrs
and
ja
or
cmp
mov
orb
jmp
mov
das
test
fcoms
lahf
and
jecxz
jb
cmp
mov
iret
in
das
or
add
bound
stc
sbb
dec
stos
inc
aas
dec
push
repnz
ss
sbb
xchg
testl
mov
mov
sub
or
dec
mov
jmp
fcoml
hlt
fdivs
addr16
mov
or
xchg
xchg
aad
pop
in
inc
jp
cmp
flds
pushf
ror
shlb
ret
xchg
test
adc
inc
out
fwait
cltd
xlat
aam
mov
imul
xchg
popf
fstpl
lds
fdivrl
mov
jl
pop
push
xchg
inc
and
es
lret
hlt
mov
cmp
mov
inc
cmp
dec
sbb
in
cmp
jo
or
rol
cmp
sub
stos
dec
jae
out
mov
and
movsl
adc
jae
mov
xlat
mov
leave
sbb
push
push
and
or
pop
mov
adc
imul
out
mov
fsubrp
fwait
and
test
mov
std
ss
pusha
push
adc
push
mov
orps
inc
pop
or
pop
mov
mov
mov
loop
mov
mov
sub
adc
and
pop
mov
pop
xor
cltd
and
xchg
sbb
lock
enter
pop
jecxz
jns
or
sarb
lea
xchg
pop
iret
out
mulb
out
es
push
out
popa
insl
adc
sbb
push
pop
push
xchg
inc
add
inc
jge
cmc
ja
mov
inc
cwtl
jle
outsb
cmp
and
dec
pop
push
adc
jmp
cmp
inc
mov
sbb
shrb
xor
mov
jecxz
addl
jecxz
mov
add
enter
pop
negl
sbb
cmp
mov
push
sti
xor
push
mov
mov
xlat
nop
sub
sub
inc
or
inc
inc
and
sbb
push
outsb
in
mov
or
repz
mov
or
xchg
dec
pop
mov
rolb
sub
leave
ljmp
jns
outsb
mov
insb
inc
shlb
fnclex
inc
orb
push
cli
shrb
mov
cli
cwtl
mov
jns
sub
adc
cmp
inc
jno
cld
mov
cmp
ss
inc
loop
fs
sub
sbbl
jmp
ss
mov
pop
shll
arpl
icebp
clc
jle
scas
mov
loop
push
nop
xchg
pop
mov
inc
push
push
jecxz
das
bound
or
jg
sbb
xchg
mov
pop
test
notb
sub
or
sbbb
scas
mov
sbb
mov
dec
lock
loopne
jns
xor
mov
imul
aam
lret
movsl
js
mov
pop
jle
adc
and
out
in
jmp
jo
scas
push
movsl
jecxz
loopne
out
push
popf
dec
cmp
xor
rcl
sbb
js
jne
dec
push
lahf
or
jb
orb
mov
sbb
mov
les
cld
lods
pop
add
sbb
sbb
xchg
rorl
clc
add
out
or
sbb
mov
dec
sub
mov
in
inc
int
jmp
xor
jns
lea
sub
ja
popf
dec
and
mov
lods
add
mov
mov
test
pop
cmp
push
jle,pn
or
pop
je
js
fwait
push
add
or
xlat
inc
sub
repnz
fwait
insl
icebp
sub
ja
lahf
xchg
insl
inc
ja
push
jmp
xorl
js
mov
les
int3
lods
mov
inc
jae
sub
add
xor
dec
push
cwtl
or
outsb
jl
clc
test
sub
inc
jae
iret
cltd
push
mov
insl
jg
in
cltd
xchg
jge
jg
xor
push
notl
frstor
mov
nop
inc
cmp
aas
mov
pop
adcl
adc
test
test
pop
enter
out
pop
fdivr
iret
icebp
in
js
sub
mov
sub
sub
aas
data16
or
bts
sub
sub
pusha
inc
push
sub
frstor
jnp
in
repnz
arpl
nop
inc
sbb
push
sahf
dec
push
fcomip
fldenv
push
test
xchg
repz
pop
and
jnp
ss
fcom
xchg
mov
push
enter
cmp
mov
push
dec
cmp
cmp
cmp
or
xor
jb
adc
mov
jecxz
mov
pop
frstor
inc
shll
cmp
cs
and
lods
mov
and
fcompl
pop
xorb
into
mov
mov
stos
ljmp
adc
insl
cmpsl
enter
loopne
pop
pop
in
add
sub
in
and
aas
shll
jb
adc
cmpsl
mov
movsb
js
push
imul
inc
ret
aad
mov
add
jp
scas
andb
xlat
negb
rcrl
dec
add
ds
stos
sbb
lahf
sarb
cltd
cmpsb
add
lret
mov
push
out
fldenv
xchg
test
jae
dec
push
cmp
stc
fistpl
mov
addr16
dec
push
xchg
clc
xchg
test
fwait
xlat
jp
sar
test
gs
xchg
cmp
cmp
adc
jmp
xor
mov
push
push
popf
mov
pop
popa
inc
stos
xchg
faddl
and
in
inc
mov
shl
lds
leave
shlb
adc
popa
jp
mov
jne
cld
xchg
add
addr16
push
aam
jmp
or
ja
loopne
cmp
jge
fcomps
popa
pop
inc
jae
pusha
sub
pop
mov
jno
mov
jp
lahf
shrl
and
ret
ficomps
stos
pop
scas
mov
ja
xchg
fwait
shlb
dec
add
inc
imul
mov
mov
out
jae
cmp
testl
lahf
xchg
pop
inc
iret
adc
lahf
fmull
pop
loope
repnz
adc
roll
sub
mov
negb
mov
add
cld
addb
mov
lret
pop
jg
in
pop
adc
out
popf
rorb
test
gs
outsb
cs
xor
movsl
sbb
ja
fnstenv
sub
xor
cli
in
dec
xchg
sub
dec
call
xor
lods
jns
cmc
cmpsb
jmp
int
aad
shlb
and
jne
xchg
sti
adc
and
lds
sbb
cmp
mov
sub
jae
mov
ja
scas
lcall
pop
lret
in
cltd
out
or
jl
jmp
stos
adc
adc
push
mov
and
push
push
scas
mov
inc
repz
sub
sbb
xchg
loope
mov
mov
jno
and
and
insb
insl
push
pop
jne
jmp
xchg
fdivrl
cmpb
push
mov
inc
mov
add
push
gs
add
mov
pop
pop
push
cmp
adc
jl
out
lcall
cmp
jg
pop
pop
test
xor
cmpsl
cmp
push
sbb
orl
mov
stc
pushl
mov
out
mov
inc
fistpll
lret
lahf
mov
nop
mov
js
incb
inc
cmovbe
mov
xor
xor
lcall
dec
out
mov
dec
sbb
dec
cmp
mov
in
mov
or
pop
and
fistps
ret
mov
mov
jle
pop
clc
adc
cmp
ss
and
add
xchg
dec
pop
and
push
cmc
pusha
mov
stc
xor
lock
adc
mov
or
ret
js
mov
cmp
xchg
xor
jae
adc
sbb
fdivs
outsl
sbb
mov
push
leave
stos
and
in
lods
cld
pop
and
mov
stos
dec
bound
mov
push
cli
pushf
add
jp
gs
and
aas
cmp
or
out
jp
lret
push
inc
es
movups
jns
push
xchg
fsts
test
fdivrs
sub
mov
sahf
inc
sbb
arpl
jp
mov
mov
rol
filds
sub
ljmp
push
cld
push
icebp
repz
dec
loope
shlb
rcr
dec
test
xorl
ss
je
push
or
dec
pusha
sub
jne
stos
scas
jnp
imul
sub
js
dec
in
mov
push
mov
out
cld
lret
imul
and
dec
push
and
dec
imul
aad
jnp
mov
fsubrl
sub
stos
cmp
mov
decb
std
mov
repz
test
xor
pop
dec
push
xchg
fsubs
lods
sbb
mov
push
imul
lahf
mov
stos
out
mov
insl
jl
lds
adc
inc
cmp
and
mov
cld
je
pusha
sbb
mov
mov
js
xchg
xchg
pusha
jo
mov
sub
hlt
jae
mov
lret
shlb
xchg
pop
cmp
jg
fldenv
push
push
jle
mov
stos
cmp
jp
repz
test
jg
cld
sbb
lret
test
push
je
sbb
nop
test
shl
sub
push
pusha
or
xchg
jo
xchg
or
inc
xchg
mov
mov
mov
xlat
fiadds
push
insb
push
mov
jmp
hlt
in
and
sub
pop
or
mov
mov
or
pop
cld
fwait
push
xchg
dec
lds
sub
sbb
mov
push
pop
pushf
mov
arpl
cmpsb
mov
push
int3
sahf
shll
fs
add
aad
sti
js
add
adc
aad
rolb
mov
adcl
mov
bnd
jge
sbbl
mov
ss
and
out
test
jp
inc
jl
jno
push
cld
int3
xchg
cmp
insb
clc
xchg
jl
gs
aaa
sub
clc
or
adc
push
lret
je
mov
jge
test
loopne
les
in
mov
inc
xchg
stos
mov
pop
sbb
in
cmp
dec
clc
jo
adc
xchg
cmp
addr16
xor
jo
mov
push
jae
rorb
lds
mov
lods
outsb
mov
aaa
mov
out
push
dec
imul
jecxz
cmp
loope
cld
sti
cmp
inc
lret
fstpt
inc
cmp
dec
push
fidivrs
xchg
cld
imul
mov
pusha
in
std
ret
popf
aaa
das
and
cmp
dec
clc
adc
aam
pop
rcll
enter
mov
das
scas
rcll
scas
add
add
add
inc
cltd
adc
cs
mov
mov
jno
les
pop
adc
push
xor
jbe
rcll
or
cltd
popa
push
lds
movsb
cmpsl
and
add
pop
ret
popa
and
aam
movsl
push
xlat
pop
mov
mov
jnp
ds
xchg
xor
call
cmpb
and
push
fcomps
jne
cmpsl
sahf
into
sbb
lock
stos
lods
and
cmp
jb
adc
fiadds
mov
pop
cmp
fsubrl
mov
cmp
mov
arpl
pop
scas
adc
mov
xor
jecxz
xor
cmp
mov
cmp
adc
xchg
add
xor
divl
arpl
stos
lret
xor
rclb
sbb
test
pusha
repz
pop
fisubrl
or
clc
shll
lret
or
pop
shr
jmp
adc
cmp
pop
jns
inc
dec
push
repz
cld
sub
stos
fwait
sub
repnz
jo
ret
mov
outsb
popf
ficoml
xchg
add
xchg
push
insl
clc
xchg
cmpsl
pop
add
fisubl
and
jg
popa
cmpsb
insl
enter
jp
dec
movsb
dec
dec
cmp
sub
push
pop
ficoml
andl
rorb
push
mov
jns
jno
shr
push
lret
leave
cmpb
popf
mov
shr
cmp
add
fadds
add
mov
dec
cmpl
insl
ret
ss
test
pop
es
sbbb
test
adc
repz
test
inc
inc
inc
shll
in
aas
push
mov
jmp
fwait
or
pop
arpl
addr16
pusha
jmp
and
mov
push
xor
into
jmp
fimuls
fldt
lret
and
mov
adcl
jno
push
push
out
and
jns
movsb
hlt
cs
push
cmp
out
mov
xor
std
pop
shrb
aas
lret
sahf
rorl
repnz
mov
cmp
ret
pushf
and
in
mov
fldcw
mov
aam
mov
out
in
push
sub
xchg
out
xchg
idivb
xchg
mov
cmc
outsb
jo
pop
mov
add
movntq
out
cmc
push
mov
or
cmp
movsb
mov
into
aaa
xchg
out
jl
nop
in
into
add
jmp
mov
sub
ret
subb
xchg
lock
xor
aam
inc
mov
and
pop
sub
cmpsb
cli
xchg
js
sub
adc
aas
ret
imul
fimuls
ffreep
sub
cmovl
hlt
sbb
fwait
jne
adc
ja
fwait
hlt
and
pop
pop
call
lds
shr
into
xchg
ret
mov
movsb
cmp
inc
ret
mov
movsl
jge
movsl
icebp
adc
in
fiadds
imul
xchg
push
aam
jge
or
repnz
in
std
mov
adc
inc
sbb
mov
loop
or
push
mov
insl
call
aaa
xchg
insl
add
aaa
iret
dec
cmpsl
fidivl
xorb
cmp
pop
cld
jne
std
fadds
mov
cmp
cmc
mov
add
mov
test
add
decb
lods
insl
cmp
mov
cmp
adc
xor
and
push
pop
sub
popf
jo
addr16
and
iret
jnp
sahf
std
es
pop
or
shlb
les
sbb
pop
outsb
fidivl
mov
shll
sarl
add
pop
xor
loop
movsb
mov
icebp
push
pop
add
sub
rorl
les
pop
mov
mov
sub
movsl
xchg
push
fidivrl
dec
inc
test
addr16
imul
ja
dec
iret
jge
xor
mov
pop
add
cmp
loopne
cmp
fsts
and
pop
stos
repz
mov
fisubrs
lcall
cs
sbb
lds
cmc
testb
imul
repz
shl
push
mov
xor
loopne
or
adc
shll
push
push
sbb
mov
add
cmp
sarb
adc
push
mov
inc
lret
test
mov
sbb
jnp
xor
jge
jp
or
leave
stos
stos
lcall
stc
adc
lock
mov
fs
movsl
lods
xchg
negl
jns
sbb
mov
out
cmp
int
ret
mov
pop
iret
jns
mov
cwtl
inc
xlat
adc
pop
in
push
inc
pushf
cli
mov
add
or
cmp
and
mov
dec
push
outsl
inc
stos
add
movsb
fucomip
btc
cs
jmp
mov
in
jbe
cmp
fucom
stc
jns
push
rolb
roll
iret
cwtl
adc
inc
imul
mov
shlb
pop
stc
scas
jbe
lock
arpl
add
adc
in
ds
inc
sub
std
and
rcll
push
daa
mov
inc
cli
je
in
sbb
mov
lods
pop
sbb
pop
addr16
in
jmp
in
sar
int3
push
orb
mov
mov
xchg
jo
aam
pop
hlt
sbb
cmpsl
xchg
push
cli
inc
enter
cmp
jmp
aaa
or
lret
decl
dec
pop
popf
jb
lea
popf
xlat
cwtl
push
push
pop
cmp
bound
pop
inc
pop
mov
ljmp
cmp
inc
rolb
popa
repz
sub
out
cmp
rcrb
lcall
fmul
daa
roll
aad
xchg
push
lahf
jg
pop
inc
sti
push
and
pop
jecxz
adc
inc
sbb
out
out
cld
lods
inc
fwait
add
sbb
fcoml
movsl
pushf
dec
jno
aam
pop
or
inc
or
lea
adc
daa
mov
test
and
dec
gs
mov
adc
push
repnz
out
gs
stc
sbb
dec
mov
pop
or
dec
insb
sbb
push
cs
push
push
fcom
cmp
mov
push
push
daa
push
nop
push
fildll
sti
push
adc
ds
movsl
clc
xor
iret
cld
addr16
or
add
fdivl
test
pop
ljmp
and
or
sub
add
push
shlb
adc
les
lcall
inc
cmc
jge
push
lock
movl
out
lds
es
enter
test
inc
addr16
mov
adc
or
xchg
xchg
lret
ljmp
fs
fistl
mov
iret
mov
and
test
jp
fcoml
jbe
in
ret
rcrl
pop
or
hlt
inc
mov
adc
mov
or
sbbb
inc
xchg
xchg
icebp
or
fdivl
stos
and
daa
rcl
int3
push
out
out
jle
mov
int3
mov
out
je
hlt
jbe
cld
inc
ds
js
cltd
dec
lods
xchg
fadds
add
pop
out
cmpb
inc
mov
xchg
adc
xor
nop
lret
dec
shll
fidivl
out
lods
sub
xchg
mov
icebp
adc
push
in
jmp
in
test
inc
sbb
in
xchg
dec
cmp
cmc
into
adc
imul
xor
pop
enter
xchg
pop
popf
les
mov
inc
inc
fsts
push
jge
or
cld
test
fnstenv
cmpsl
mov
lahf
add
adc
fiaddl
fnsave
cmp
mov
add
or
cmpsb
and
loop
jbe
push
mov
aad
mov
inc
xor
push
aas
popa
cwtl
adc
test
inc
cmp
adcb
lret
mov
pop
cmp
daa
add
mov
enter
repz
sbb
mov
sbb
dec
or
int3
add
cmpsl
xchg
pop
dec
outsl
inc
outsb
push
lods
int
xor
int
push
mov
dec
sbb
stos
cmp
pop
insl
in
adc
mov
xchg
mov
data16
sub
shl
aam
mov
pusha
xor
push
negb
jg
jns
testl
add
fstps
mov
xchg
scas
sbb
dec
and
mov
sbb
push
setle
or
es
test
mov
jge
pop
shlb
adc
xchg
adc
push
adc
pop
push
outsl
fidivl
push
and
aad
bound
mov
in
sub
sti
sbb
and
dec
enter
shl
stc
ljmp
pop
cmp
test
int
push
lock
sbbl
add
mov
mov
in
sbb
and
lea
xchg
lods
push
test
xor
scas
dec
sahf
hlt
sbb
ret
lds
into
outsl
inc
mov
ja
lcall
fidivrl
jecxz
movsb
in
pop
xchg
loopne
adc
fld
imul
xor
shlb
and
jecxz
fucomi
subl
mov
cmpsl
mov
mov
dec
lret
ffree
jmp
das
push
mov
mov
sahf
mov
dec
ficoml
xchg
pop
dec
or
cmp
mov
rcrb
out
cmpsb
scas
jb
leave
add
sub
sti
leave
cmc
out
sbb
sbb
jg
push
jns
shlb
das
in
cmp
out
cs
jns
cmp
sbb
mov
xor
add
lea
loope
dec
shrl
enter
pop
dec
mov
jae
add
pop
int3
push
cld
dec
cmpsb
xchg
cmc
add
push
popa
sbb
jae
add
pop
mov
test
repnz
test
xchg
cmpb
adc
addr16
xlat
mov
jge
sub
xchg
sahf
jno
sub
dec
data16
mov
cmpl
lds
in
pop
gs
gs
scas
xchg
dec
pusha
repz
les
sub
test
push
mov
fs
fidivrs
sahf
push
mov
cmpsl
jo
sbb
sub
rol
push
ljmp
cmpsl
mov
xchg
push
push
and
and
or
ljmp
dec
add
movb
mov
and
dec
jl,pn
lds
sbb
pop
and
cli
in
xorl
dec
pushl
faddl
dec
push
enter
jmp
inc
fdivl
and
or
sbb
dec
cmp
push
scas
and
lret
ljmp
and
or
jnp
arpl
in
inc
add
lods
mov
xor
fdivrl
cld
adc
enter
mov
cmp
push
movsb
aaa
sub
movsb
adc
xchg
mov
inc
push
add
loop
cmp
pushl
aam
das
jp
scas
adc
sub
outsb
imulb
cld
xchg
push
or
cmp
jp
inc
push
mov
sub
fidivl
cmp
imul
scas
sbb
mov
dec
jg
dec
xchg
jne
test
fcmovnb
mov
out
popf
adc
dec
push
loopne
scas
push
lret
pop
sahf
mov
xorl
shlb
jmp
jmp
jge
lret
xor
and
dec
or
int
pop
outsb
cmp
dec
sub
and
jno
and
inc
imul
mov
mov
movsl
loope
pop
stos
fwait
pusha
pop
shlb
add
or
fidivl
dec
push
cltd
pusha
insl
mov
xchg
insl
ret
rorl
inc
adc
inc
vmovaps
data16
add
inc
mov
or
pushf
out
cld
pop
pop
push
xchg
loop
add
xor
pop
lods
iret
adc
fldt
incb
leave
sbbb
jo
mov
push
ja
jle
mov
aas
jle
stos
dec
jno
mov
mov
faddl
aas
rol
cli
data16
movsl
fisubs
add
cmp
aad
sub
xor
lea
les
xor
jmp
sahf
sarl
xchg
fists
xchg
adc
lret
cmp
push
scas
pop
pop
add
test
push
mov
adc
inc
push
xchg
xor
ljmp
push
iret
xor
mov
sub
mov
aam
sbb
push
fwait
jge
jmp
mov
insl
clc
mov
call
xchg
sub
negb
aaa
rorl
dec
jo
adc
lods
xchg
ljmp
loope
dec
outsb
sbb
add
lea
mov
lret
adc
pop
cs
mov
arpl
mov
jmp
sti
ret
and
pop
fldenv
lods
movsl
loop
xor
stos
lock
xlat
sarb
jmp
inc
fisttpll
push
nop
cmp
insb
inc
and
test
pop
jae
pusha
or
lods
inc
bound
push
mov
xchg
fidivrl
sbb
push
lahf
and
in
out
ret
xchg
pop
cmp
xchg
call
and
adc
cmp
push
xchg
xchg
push
or
push
mov
movsb
orl
fldenv
cmp
cli
idivb
in
test
mull
inc
pop
lock
ret
cld
cmp
mov
xor
xor
and
cmp
mulb
ret
add
cmp
adc
mulb
push
mov
in
pop
jo
jmp
data16
jp
outsb
or
mov
filds
mov
mov
and
jge
scas
dec
into
or
es
rorb
sub
adc
jb
outsl
mov
cmp
sbb
jp
sbb
nop
insl
or
rclb
shlb
gs
loop
mov
ds
jb
scas
popa
in
lds
outsl
pop
fdivl
imul
cmp
enter
xor
cltd
fisubl
mov
clc
and
sbb
adc
mov
subl
std
pop
movsl
pop
jne
popa
adc
push
orb
stos
sub
sbb
in
fisubrl
lods
scas
loop
jmp
pop
and
shlb
cmc
dec
repz
lea
cmp
cmp
shll
mov
vmwrite
mov
call
pop
cmpsb
rorb
pushf
or
shrl
jb
dec
mov
cltd
inc
pop
data16
test
ds
push
cltd
inc
in
out
insb
addl
jae
pop
jno
je
inc
dec
inc
jecxz
mov
out
addr16
inc
pushf
xchg
sbb
jl
push
aam
sarl
sub
mov
insl
ret
xchg
ja
cmp
push
pop
outsb
and
cltd
jecxz
jle
adc
or
fmulp
pop
pusha
add
mov
jns
cmp
popf
xchg
nopl
div
add
or
xchg
jne
xor
addr16
mov
sysret
aad
mov
sub
test
inc
aas
mov
inc
pop
nop
mov
and
inc
rclb
xchg
xchg
and
sbb
push
fidivs
mov
dec
xor
and
notb
cwtl
mov
ficoml
dec
pop
fbld
lods
fs
pushf
test
fstp
or
or
push
sbb
ret
ds
gs
adc
pop
xor
push
dec
mov
fadds
inc
nop
pushl
pop
scas
inc
addb
xor
arpl
jae
xchg
scas
jbe
push
push
or
jae
pop
and
mov
dec
dec
fsubr
cs
and
fwait
idivl
inc
stc
repnz
mov
mov
sbb
xchg
xchg
jne
int
dec
into
hlt
adc
sub
and
pop
xor
or
pushf
mov
push
mov
loop
inc
mov
cltd
lea
aaa
scas
mov
xchg
mov
insb
aam
sti
outsb
adc
jb
popa
pop
jecxz
stc
loopne
and
rorl
mov
stos
mov
imul
jl
rcrb
cmp
mov
cltd
pop
xchg
int
inc
imull
stos
movsb
out
inc
ds
lret
stos
jle
mov
mov
stos
lods
add
cld
inc
mov
inc
inc
loope
jns
jl
aam
cli
mov
loopne
fidivl
cmp
nop
or
sbb
sub
jae
add
push
mov
or
fwait
sbb
in
pop
pushf
xor
ret
adc
xchg
mov
sbb
sbb
sbb
xchg
add
or
xor
sahf
in
fwait
lret
xchg
std
gs
cld
push
mov
mov
mov
xor
or
sarl
sbb
push
out
adc
push
fcomps
adc
xchg
divl
pop
scas
int
into
iret
loopne
mov
sbb
imul
jae
and
cmc
aam
shlb
sub
or
and
sub
push
dec
aad
std
dec
push
and
mov
aaa
xchg
jbe
dec
mov
push
add
pop
or
mov
sub
out
jp
mov
pop
xor
pop
mov
jmp
mov
roll
fwait
adcb
jo
or
out
push
dec
inc
hlt
cmp
ret
sub
pop
out
push
std
fcoms
arpl
repz
adc
cmpsl
sbb
sbb
pusha
pop
les
xor
mov
mov
movsb
rcrb
neg
rorl
lock
mov
add
jecxz
mov
mov
jmp
adc
mov
xlat
sbb
mov
lret
xor
adc
xchg
jae
iret
stc
rclb
nop
adc
push
push
cwtl
mov
or
cmc
nop
in
fistps
adc
test
or
stos
push
sub
lods
jl
or
push
stc
scas
test
dec
mov
icebp
adc
into
pop
mov
push
push
mov
cmpsb
mov
inc
xchg
add
divl
xchg
mov
push
outsl
push
push
daa
mov
movsl
xor
cmc
cmp
dec
mov
xor
adc
mov
iret
adc
pop
mov
xor
pop
sahf
sbb
stos
in
je
adc
jns
das
fndisi(8087
jnp
jle
fsub
push
leave
data16
das
cmp
ss
sbb
sbb
fsubrl
mov
pop
sub
sbb
shlb
lods
icebp
pop
and
out
jne
inc
xchg
mov
pop
ud2
xor
push
sub
fnsave
shll
mov
mov
test
lock
ss
inc
dec
jbe
loopne
andl
or
xor
sbb
cmpsb
fwait
lret
adc
inc
mov
movsl
dec
push
sbbb
cmp
jl
xor
popf
leave
inc
sbb
inc
ror
push
fistps
rcrl
inc
mulps
movsb
popf
inc
pop
inc
popa
fiadds
call
jae
mov
or
pop
out
test
repnz
sub
dec
cmp
repnz
je
pop
push
xchg
mov
jb
sbb
test
imul
out
mov
pushf
lds
sub
push
pop
mov
xchg
cmpsb
xchg
or
pop
fistpl
or
hlt
sbb
loopne
cwtl
inc
push
sbb
inc
xor
out
repnz
fcomps
jmp
or
push
outsl
or
inc
sbb
sahf
sbb
sub
xor
cmpsl
cmp
pop
add
mov
in
insb
lods
lds
ret
sub
shr
mov
arpl
nop
pushl
pop
es
mov
aam
jbe
into
loopne
shlb
cmp
or
mov
out
lea
inc
or
and
popf
loope
or
bound
inc
push
push
pop
mov
mov
repz
scas
xchg
notb
mov
addr16
out
repz
jns
dec
int
push
jg
add
pop
xchg
adc
loopne
add
jg
jg
add
mov
sbb
pop
je
jmp
pop
hlt
stos
xor
pop
int3
in
fistpl
xor
push
addr16
cwtl
xchg
push
mov
orl
push
and
movsl
outsl
xchg
push
dec
lea
inc
loope
in
sarb
xor
cmp
xchg
adc
negl
loopne
pusha
and
cmc
xchg
inc
lcall
or
loope
dec
mov
pop
mov
mov
sbb
adc
sub
out
idivl
aaa
pop
jb
pushf
mov
sbb
rcrl
mov
mov
scas
pop
pop
movsl
or
inc
xchg
outsb
xor
test
cmp
and
xor
rol
and
mov
mov
add
in
test
dec
outsb
xor
adcl
pop
orl
jne
xchg
pushf
xchg
ja
cmpsb
pop
stos
int
hlt
js,pn
shrl
add
push
lcall
loop
mov
mov
lahf
stos
add
mov
addl
xor
test
dec
addr16
inc
mov
mov
ds
ret
push
icebp
dec
sub
adc
and
xor
fcomps
loopne
call
sbb
sbb
cli
jne
or
adcl
push
movb
mov
ficoms
incb
jo
rcrl
add
rolb
test
iret
int
movsb
dec
out
lahf
ljmp
dec
mov
fwait
in
jno
and
sti
pushf
xor
sahf
or
movsl
add
mov
lcall
fisttps
jno
pop
adc
cli
hlt
scas
mov
sbb
push
fstpt
inc
fwait
out
xor
push
jle
fwait
mov
push
insb
push
mov
add
cmpsl
rorb
jb
and
fldl
mov
mov
stos
popa
fdivr
sbb
mov
pop
bound
outsb
dec
jg
je
mov
ja
pop
popf
and
mov
pop
push
ja
push
mov
pop
lods
pop
mov
xor
inc
ret
sahf
filds
or
dec
add
adc
aad
pop
jne
hlt
xor
int
cmp
test
test
mov
imul
pusha
jge
imul
popa
sbb
das
in
push
out
jae
push
popf
push
mov
shr
adc
cmpsl
insb
pushf
pop
pop
jo
mov
mov
mov
or
xchg
cmp
sbb
xchg
jno
pop
js
and
push
adc
push
push
pop
cmc
dec
sub
jmp
and
dec
arpl
pop
adc
mov
movsb
cli
ret
stc
aaa
loopne
inc
cmpsb
je
int
pop
popf
mov
movsl
xor
clc
pop
fwait
ret
inc
dec
test
es
sub
cmpsb
xor
idivb
mov
fsubrp
mov
cmp
push
cmp
aaa
shll
les
mov
outsl
inc
push
mov
push
or
mov
icebp
cmpsb
cwtl
movsb
push
dec
dec
mov
fadd
xor
frstor
jae
loope
pop
jns
subb
daa
cmp
xchg
fwait
pop
dec
cmp
xchg
int3
mov
xor
sbb
lahf
lods
or
jmp
adc
add
sub
push
pop
jl
adc
dec
lock
sub
scas
ljmp
add
and
out
les
jns
and
lahf
enter
adc
scas
popf
ret
popa
cmpsl
push
mov
shld
shrb
push
das
clc
mov
stc
sti
mov
cmp
cmpl
mov
dec
imul
js
loope
dec
fistpll
inc
sti
stos
sub
fs
lods
mov
adc
movsl
push
cltd
inc
loope
sbb
sbb
mov
adcb
push
andb
cmc
jne
lcall
pusha
sub
cs
cmpsl
pop
mov
pop
test
inc
push
mov
mov
xor
xchg
sub
or
daa
and
dec
enter
insb
and
pop
cmpsb
in
test
les
jns
shl
jno
repnz
cltd
mov
inc
sub
in
push
popa
jnp
loope
mov
pop
pop
pop
scas
add
sbb
fwait
mov
test
stos
pop
mov
mov
test
mov
lahf
cmp
ds
sub
mov
cmpl
adc
and
adc
out
inc
lahf
mov
cwtl
xchg
test
ja
push
mov
fisubrs
pushf
iret
rolb
addr16
ja
mov
shll
je
sarb
jno,pt
and
faddp
push
cltd
pop
jne
imul
push
sub
test
dec
add
bound
repz
mov
enter
lods
push
adcl
es
ja
repz
jg
sub
shrl
mov
xchg
xchg
sbb
lods
mov
out
shll
inc
mov
arpl
adc
les
shrb
jb
or
mov
adc
movsb
inc
icebp
pop
jmp
imul
adc
dec
int
fwait
clc
inc
xor
mov
or
dec
sahf
inc
rcrl
jmp
inc
mov
xchg
mov
in
popf
mov
push
in
xchg
sbb
cltd
jge
jmp
sub
mov
push
dec
cwtl
test
inc
mov
inc
in
mov
repz
pop
mov
jg
jo
lods
jo
std
mov
and
push
jns
inc
xchg
cltd
setno
push
popf
loope
popf
call
adc
push
iret
jmp
mov
xor
daa
fstps
cmpsl
repnz
inc
jns
push
in
cmp
out
add
mov
andb
pop
cmp
andb
in
dec
xchg
nop
lret
jge
int3
push
push
popf
jnp
and
inc
xor
mov
hlt
imul
ss
test
jmp
gs
push
les
cmp
fbstp
outsb
cmp
fisubl
and
ja
pop
dec
sub
push
xor
pop
adc
dec
arpl
jo
pop
and
jp
add
roll
push
lds
pop
clc
shll
mov
push
dec
arpl
fucom
popf
les
leave
call
js
jb
outsb
test
push
jl
xor
inc
inc
mov
outsb
out
bound
add
cmc
or
stc
and
inc
mov
leave
push
aam
imul
dec
test
lock
inc
fisubl
test
fwait
xor
addr16
lea
add
iret
sbb
movsl
cwtl
and
fstp
gs
adc
mov
pop
push
loop
jb
lds
xchg
dec
and
outsl
dec
cwtl
adc
dec
push
loop
test
or
cmpsl
cli
sti
shll
addr16
cmp
int
and
and
xchg
dec
xor
adc
xchg
movsb
inc
ja
ja
div
stc
adc
jmp
xlat
xor
lret
cmpsb
lret
mov
aad
les
jnp
xor
bound
ror
or
or
push
ret
dec
loope
movsl
ds
push
lahf
mov
dec
jg
jle
fs
mov
fwait
push
jmp
rcrb
cmc
jl
cmp
ss
notl
fs
xor
les
sti
sub
fcompl
std
lret
jp
xor
sarb
mov
add
ds
clc
mov
sahf
fyl2x
jae
sti
into
xor
jbe
rcll
lock
xchg
cwtl
mov
inc
insl
jmp
cli
call
movsl
out
xor
ret
inc
xchg
fmull
mov
dec
sub
dec
fiadds
pusha
lret
sub
xchg
lea
leave
fimull
xor
mov
mov
pusha
mov
sbb
xchg
repz
jb
jb
pop
out
jne
and
test
adc
jl
ss
enter
ljmp
xchg
clc
inc
add
paddq
es
inc
and
push
push
out
lcall
fisttpll
loop
aad
fisubl
fcoml
imulb
fwait
in
nop
mov
xor
inc
cli
jmp
xchg
mov
mov
adc
xor
lret
push
shlb
fisubl
ficoml
sbb
pop
test
shll
ret
in
mulb
push
pop
loopne
and
mov
test
in
ret
push
cmp
add
inc
pop
lret
inc
arpl
xor
inc
dec
add
xchg
jo
in
mov
loopne
mov
out
leave
in
incl
stos
fstl
fnstenv
jle
dec
dec
adc
pop
or
push
push
push
fists
inc
dec
xchg
sbb
add
add
mov
lret
std
mull
adc
fbld
sbb
jge
cld
cld
fldpi
in
cmp
cmpsb
data16
mov
push
mov
leave
mov
dec
int
add
ds
sub
popf
out
ljmp
aad
xor
mov
in
or
dec
shr
xor
add
push
int3
sbb
aaa
inc
fcmovne
loopne
shrb
out
ficoml
stos
stos
mov
mov
js
mov
orb
cmp
testb
mov
add
sub
sbb
loop
mov
fldcw
xlat
cmp
ljmp
fs
sbb
fbld
mov
xor
test
sub
outsl
xchg
insb
mov
popa
lret
jbe
xlat
cmp
sarl
fdivs
xchg
fisttps
sub
pop
daa
lea
fcmovb
and
lods
sub
sub
mov
pop
xchg
mov
decb
jge
out
movsb
fs
ljmp
sub
iret
cmp
mov
enter
aaa
xlat
jnp
test
dec
je
or
ss
sti
jns
jl
cli
imul
sbb
enter
cmp
iret
in
inc
flds
lcall
jmp
inc
push
mov
testl
inc
mov
cmpsl
andb
xchg
cmc
cmp
push
jnp
pop
xchg
aas
out
mov
xor
stc
sahf
and
testb
mov
aam
shl
xchg
loope
cmp
jo
adc
mov
push
dec
and
pop
stc
xchg
push
push
and
jae
lods
sbb
push
aas
xchg
sub
adc
or
push
push
rcll
enter
test
cmc
pop
mov
in
pop
mov
ljmp
sub
lods
and
pop
dec
xchg
jae
or
push
fsubl
cltd
icebp
add
pushf
cltd
mov
mov
iret
shlb
lret
or
out
mov
push
add
in
loopne
jne
push
cmpsb
cmpsl
or
in
push
int
fstps
adc
lret
xor
jmp
mov
mov
and
andl
xor
cmp
mov
pop
das
mov
iret
mov
push
adc
push
sub
push
arpl
xor
xor
in
into
cmp
repnz
mov
lea
jl
mov
dec
cld
and
pop
stos
in
ds
jns
or
pop
int3
and
xor
xor
ret
clc
xchg
mov
mov
jne
cmp
cs
add
dec
pop
jecxz
imull
mov
fsts
clc
lret
push
sub
push
sub
clc
pop
push
add
inc
inc
mov
lcall
jle
js
pop
out
dec
icebp
jnp
dec
clc
sub
fs
cltd
jno
mov
jb
enter
jno
adc
stc
sbb
sub
push
xor
enter
repz
fists
sbb
inc
xor
ss
add
jle
sub
inc
jns
mov
sahf
das
ror
shlb
imul
in
sbb
jne
dec
fbstp
adc
sbb
push
mov
fnstsw
clc
jb
loop
push
sti
cld
inc
repnz
xchg
adc
add
inc
dec
jmp
loop
and
sub
daa
into
mov
ljmp
insb
data16
pusha
cmp
into
push
ficompl
iret
je
call
ja
jbe
aas
and
or
mov
jp
and
xor
xchg
cmpsl
int
das
sub
cmp
mov
xlat
jae
hlt
out
adc
repnz
mov
ds
decb
cmp
shll
rclb
ss
sub
add
popa
mov
pop
or
je
sbb
shl
jae
push
into
adc
push
jmp
sub
add
divb
adc
mov
cmp
jle
xor
mov
bound
xchg
es
adc
popl
or
pusha
adc
stos
insl
push
mov
dec
dec
fldl
dec
mov
or
mov
daa
jne
je
imul
gs
sub
lcall
xchg
mov
xchg
jb
inc
xor
loop
xchg
gs
sub
dec
sahf
add
push
scas
cmpsb
imul
cmp
jo
inc
xchg
popl
fsub
arpl
call
inc
jge
int
stc
jbe
scas
rorb
xchg
xchg
cmp
testl
cmp
jo
inc
inc
repz
cmp
cmpb
out
mov
int
adc
add
inc
xchg
cld
movsl
stos
loop
dec
xchg
pop
jle
dec
rorl
mov
movsl
jle
or
jge
stos
cmpl
lahf
scas
pusha
insl
inc
fwait
popa
les
or
shr
test
jp
xchg
jl
movsb
outsl
cmp
insb
pop
jae
xchg
hlt
sar
push
and
cmp
pusha
stos
out
daa
out
cltd
cld
lret
push
dec
xor
je
fdivrs
dec
mov
lock
repz
flds
cmp
xchg
mov
int
jb
repnz
push
fstl
and
push
jbe
stc
mov
pop
dec
xchg
dec
cmpsb
insb
outsl
std
sub
mov
cli
faddl
in
inc
arpl
push
adc
iret
sbb
or
xchg
xchg
sub
jbe
pop
push
cmp
sub
mov
mov
idiv
movsb
pushf
sub
int3
and
inc
inc
pop
repnz
push
cli
mov
adc
xor
pop
lods
mov
cld
or
inc
xor
mov
mov
xchg
adc
daa
inc
aad
mov
lock
call
add
sbb
xor
pushf
sbb
adc
mov
jmp
xchg
je
divl
jge
ja
cwtl
test
iret
movsb
dec
in
and
fadds
push
repz
push
fiadds
sub
inc
push
or
adcl
dec
std
cwtl
dec
cmpsb
lcall
inc
dec
icebp
mov
push
push
sub
inc
fsin
in
scas
ja
jmp
mov
mov
adc
imull
aaa
repz
jo
loop
sbb
cwtl
inc
adc
fucomp
mov
call
push
pop
pop
fdivrl
adc
cmp
lcall
jne
sub
jae
push
cmp
shrb
aas
mov
or
mov
je
jg
pusha
les
cltd
imulb
test
add
fisubs
mov
lret
mov
aad
sub
lret
outsl
jmp
aad
jmp
cmc
push
inc
mov
xor
add
shll
mov
adc
inc
cld
repz
xchg
cmp
fistpll
faddl
push
test
je
int3
out
xor
xchg
mov
and
lret
push
push
fsubr
clc
stos
pop
adc
or
aam
adc
stos
inc
pop
mov
jae
in
jl
popa
out
jae
inc
dec
and
dec
notb
movsl
in
push
pusha
std
stos
dec
mov
inc
jns
ds
jne
adc
filds
into
pop
idivb
mov
xchg
mov
xor
mov
int
rcr
ljmp
push
lret
scas
mov
xor
fistpll
jbe
jne
sahf
das
push
lret
jecxz
fldenvs
out
or
cmp
and
loopne
lret
add
mov
xchg
mov
adc
in
std
test
inc
sbb
or
xor
push
sbb
jno
iret
int
lret
aam
rcrl
jno
lods
mov
mov
or
shl
add
in
stc
pop
minps
push
addr16
lds
idivb
push
fidivs
pushl
mov
outsl
pop
xchg
inc
js
cmp
stc
aaa
add
jno
lds
add
mov
fdivl
adc
insl
sbb
pop
fcmovnb
enter
fidivs
scas
addr16
mov
dec
push
das
dec
fdivrl
insl
push
test
dec
sti
hlt
jmp
xchg
scas
aad
inc
jl
nop
arpl
mov
movl
jecxz
pusha
mov
dec
out
push
leave
adc
jmp
xor
jmp
xchg
xor
mov
mov
cmp
dec
xor
mov
add
push
ja
nop
cmc
mov
andb
xor
jle
ret
inc
mov
pop
xchg
xchg
in
lods
fwait
sbb
sub
lock
push
into
call
ja
pop
ficomps
push
shll
inc
lret
pop
add
decb
add
shrb
mov
hlt
test
dec
out
data16
jmp
insl
or
rcrl
pop
leave
insl
xor
mov
dec
inc
xor
cwtl
add
add
pop
xor
loopne
insb
add
cltd
jg
je
mov
push
xor
lds
pop
pop
and
or
rcrl
adc
addl
ljmp
xlat
pop
sub
hlt
add
jae
xchg
test
or
iret
mov
jnp
outsl
jmp
mov
dec
add
push
jecxz
fstl
movsl
iret
jl
pop
ja
mov
dec
fnstcw
pusha
xchg
sbb
inc
es
jo
mov
push
jns
push
jge
aaa
pop
pop
add
mov
pop
test
stos
mov
xchg
sbb
je
sarl
pop
mov
test
cld
push
inc
mov
inc
inc
test
jle
pop
mov
sbb
ds
cmp
sub
push
mov
cmp
lds
push
jae
cld
dec
pop
sbb
sbb
sbb
fcoml
js
xor
cmp
inc
in
es
adc
movsl
sahf
shl
dec
add
and
shll
int3
xchg
cltd
sbb
xor
add
shll
sbb
mov
in
jbe
inc
loope
cmpsl
das
aam
xor
imul
outsb
mov
sub
pusha
in
cli
or
adc
jns
add
dec
lods
rcrb
test
mov
mov
xlat
das
gs
into
inc
mov
out
jp
mov
outsb
cmp
push
mov
jno
repz
leave
icebp
fs
in
ja
xchg
xor
push
mov
fisubl
loop
jbe
outsb
adc
int
and
mov
add
scas
push
lods
jnp
int
mov
shrl
loopne
loop
popf
aad
add
insb
push
push
cmpsl
push
xor
ret
std
sbb
xor
fdiv
daa
fiadds
loope
inc
loop
insb
loop
leave
sub
jne
aaa
fsubrl
jmp
mov
xor
pop
sti
mov
add
inc
jecxz
adc
push
adc
ret
jns
std
dec
test
dec
pop
mov
pop
adc
xor
pop
push
pushf
push
add
xchg
lea
stos
xchg
mov
outsb
in
fucomi
add
stos
adc
adc
ret
dec
daa
mov
jb
pushf
stos
xchg
js
sub
shl
ret
imul
xchg
pop
cli
test
pop
mov
xchg
add
les
test
pop
fs
jge
xchg
pop
xchg
nop
negl
and
dec
jne
xchg
or
mov
cs
xchg
dec
push
inc
scas
lds
dec
and
mov
and
xor
jl
mulb
cmp
stos
scas
and
xchg
stc
or
lock
insl
dec
sub
aaa
lods
in
sti
pop
test
int
jecxz
rcrl
cmc
mov
out
aad
pop
push
cmp
xchg
aad
sahf
js
pop
insb
xchg
daa
imull
inc
xor
je
out
iret
push
mov
sub
test
dec
lods
shl
in
aam
je
fnstsw
mov
lea
jecxz
icebp
faddl
lds
mov
add
popa
xchg
out
jp
jle
inc
out
adc
jns
test
adc
add
jo
xor
in
notl
sbb
mul
pop
pop
ret
cs
mov
xlat
pop
es
cli
lds
pushf
aaa
lods
les
aaa
and
or
int
sub
pop
push
and
insl
mov
mov
xchg
sahf
stos
leave
pop
add
dec
add
xchg
in
mov
jecxz
int
ss
push
test
and
xchg
sbb
movsl
ja
out
out
fstpl
mov
addr16
test
insb
cmpsl
dec
mov
ljmp
mov
adc
sbb
add
sub
cmp
jnp
fisubrl
stc
push
xchg
adc
cmp
cmp
push
xor
popa
ljmp
scas
cmp
pop
into
or
nop
lock
adc
out
clc
in
xor
cmp
cld
sti
xchg
sub
inc
pop
xor
addr16
sbb
leave
push
cli
insl
outsb
jb
leave
mov
jns
into
adc
push
xchg
push
popl
mov
push
jecxz
adc
and
aad
or
mov
cmp
or
ja
mov
xchg
scas
jbe
ret
les
add
cmp
add
jo
dec
pop
jecxz
dec
les
rolb
xor
inc
loope
rcr
adc
popf
xchg
rolb
inc
mov
fidivl
mov
push
and
loope
cld
and
add
push
adc
stos
jp
cltd
xorb
les
lock
jnp
pop
cmpsl
into
loope
and
loope
mov
xchg
mov
sub
sbb
xchg
scas
mov
lret
cmp
rorl
in
and
sarl
fs
mov
cmp
adc
dec
xor
inc
jmp
lock
out
mov
add
jmp
inc
in
inc
mov
cli
push
mov
test
inc
fiaddl
xchg
xchg
mov
mov
mov
ja
aam
xchg
mov
fsts
xorb
cmp
add
mov
out
lods
je
sub
add
mov
xchg
sbb
dec
popa
cmp
lret
push
sub
repnz
fidivs
jne
movsl
xor
repz
xchg
xlat
in
pop
cmp
shufps
lods
shrb
jl
mov
or
dec
loope
int
dec
adc
pop
loopne
jl
mov
mov
pop
push
sub
mov
je
jge
xchg
sub
mov
shlb
push
adc
cmp
into
popa
mov
fdivs
inc
jecxz
xor
addl
cli
mov
adc
push
idivb
icebp
jnp
xchg
aam
aad
adc
jp
sbb
xor
pop
popf
add
sub
test
loop
repz
out
int3
jns
xor
scas
aas
push
lret
lock
mov
mov
scas
daa
and
dec
cli
push
ljmp
xor
scas
stc
scas
dec
pop
sti
dec
push
dec
mov
aas
shr
test
cmp
outsl
xor
sti
xchg
pop
mov
repnz
xchg
test
pop
jnp
lret
xor
and
shll
jl
fldenv
inc
inc
shrl
push
ja
and
jg
and
sub
mov
mov
cmp
pop
shrl
fbld
sbb
dec
pop
mov
cltd
cmp
bound
rcll
test
inc
out
arpl
daa
sbb
adc
push
add
sarb
aad
mov
push
dec
pop
push
adc
imul
cmp
cmp
pop
pop
xor
mov
into
pop
rcrb
add
bound
cmp
cmpsb
inc
pop
mov
fistps
adcl
xor
jnp
inc
xchg
dec
xchg
aaa
adc
adc
int3
push
movsb
push
push
cmp
sub
scas
enter
insb
adc
mov
cmpsb
add
lods
push
sahf
das
pop
jb
mov
push
dec
aad
scas
add
jnp
ja
xlat
mov
je
xchg
push
stos
mov
inc
pop
push
mov
push
aad
icebp
mov
mov
sub
add
fmuls
into
sbb
test
xchg
jns
mov
ficomps
xor
sub
pushf
es
dec
popf
inc
test
out
mov
mov
mov
mov
scas
sub
arpl
fcomps
inc
jae
leave
xor
xor
push
fstpt
pop
add
xor
pop
movsl
add
add
push
adc
test
in
pop
pop
sub
cmp
sub
push
enter
fwait
in
inc
push
sub
mov
mov
sbb
shlb
sbb
dec
cmp
dec
sbb
cmpsb
mov
lret
jl
pop
inc
sub
sahf
dec
dec
add
adc
es
xor
test
jns
push
mov
outsb
addb
mov
je
adc
add
sbb
loope
insb
psubb
mov
sahf
add
xchg
sub
push
sbb
cmp
hlt
pop
leave
out
repnz
and
cmp
fnstenv
or
enter
cmp
cmp
lods
sbb
mov
insl
mov
push
lea
xor
pop
repz
inc
push
scas
call
or
lcall
lock
inc
or
mov
jmp
jg
and
pop
pop
push
xchg
push
or
mull
ret
idiv
arpl
pop
dec
mov
popa
and
xor
stos
shrl
divb
lahf
pop
adc
cmp
jecxz
xor
in
add
pop
dec
xchg
dec
mov
ret
cs
rol
jle
cmpsb
mov
mov
push
insb
push
loope
jns
int
mov
pop
pop
sbb
and
popa
push
or
pop
jae
popa
fsub
inc
sbb
mov
xchg
cmc
sbb
push
test
sbb
mov
pop
sbb
cmp
andb
sub
ret
out
jp
mov
icebp
mov
cld
adc
pop
pushf
repz
in
pushf
imul
adc
sbb
inc
jecxz
int
inc
or
pop
mov
jns
add
mov
push
xchg
rcl
xchg
aaa
adc
and
and
in
bound
pop
cltd
out
mov
sub
ljmp
xchg
xor
inc
xor
xchg
iret
mov
sub
mov
dec
adc
ret
loop
hlt
and
mov
lcall
adc
stc
xchg
and
sub
jb
pop
or
psllq
orb
inc
fimull
xchg
lret
cwtl
jnp
mov
lock
rol
sbb
int3
sbb
out
cmp
pop
lods
pop
outsb
out
lock
dec
cltd
negb
into
fidivs
insl
inc
xlat
xchg
not
dec
cli
hlt
popf
mov
pop
aam
int3
jecxz
jl
or
push
add
shrl
into
fmulp
inc
pop
scas
and
dec
and
xchg
repnz
push
jb
mov
jnp
mov
into
add
movsb
pushf
stc
std
scas
arpl
lea
subb
out
cmp
pop
je
movsl
pop
or
jns
push
cwtl
and
mov
sub
cmpsl
mov
imul
les
gs
test
mov
sti
jmp
outsl
jae
lahf
cmpl
lahf
sub
add
sub
lods
xor
insl
loopne
and
stos
inc
test
or
call
push
out
pop
or
popf
adcl
cwtl
out
jl
mov
subb
mov
dec
mov
sub
fwait
push
xchg
jno
or
push
mov
popa
out
pop
or
lret
jbe
add
daa
sub
jae
inc
jecxz
test
sub
cwtl
inc
lock
jb
cmp
cmp
fwait
test
out
add
sub
out
dec
or
adc
sti
scas
enter
into
and
pop
cmp
mov
sub
outsb
add
pop
sub
push
inc
jl
fisubrl
jb
cmp
xchg
sub
xchg
xor
pop
dec
xchg
sbb
sbb
sub
and
bound
or
sub
rorl
push
mov
adc
add
lret
xchg
daa
stos
sbb
push
jne
icebp
lods
xchg
stc
and
jge
int3
pop
repnz
mov
mov
in
cmp
ret
jmp
sbb
and
cmp
gs
fdivs
aam
addl
cwtl
cmpsb
and
xchg
dec
or
lret
cmp
dec
js
push
aas
test
jmp
jo
cmpsb
dec
imul
mov
test
mov
fsubrs
pop
lock
pusha
pop
sub
nop
push
shlb
pop
cmpsl
xchg
pop
les
lods
jbe
adc
jae
ret
dec
shl
fldenv
into
jo
xor
adc
and
test
cmp
xor
mov
lahf
cmp
mov
fistpll
mov
mov
mov
push
adc
aas
daa
sub
hlt
aam
sbb
mov
sbb
or
sti
jp
hlt
inc
sbb
loop
aas
out
int3
fs
ss
jecxz
dec
pushf
push
sbb
push
jge
pop
lods
xorb
add
mov
fwait
mov
jecxz
inc
xor
rol
pop
dec
sbb
sbb
add
test
lahf
mov
pop
pop
arpl
imul
jmp
pop
ljmp
jae
sub
movsb
adc
mov
js
xlat
fsts
adc
div
dec
push
test
pop
cmc
sub
fistl
scas
cmp
je
test
clc
mov
imul
stos
push
inc
or
mov
push
pop
pop
add
jg
stos
lahf
add
data16
jecxz
and
and
cmc
into
and
push
cmp
mov
xor
push
sbb
push
rclb
popw
out
addr16
out
scas
push
mov
sub
fxtract
arpl
ficoms
xorb
repnz
adc
cmp
and
sbb
jg
pop
mov
insb
cmp
xchg
test
ret
inc
pushf
add
insl
sub
cmp
push
rclb
xchg
jle
cmpl
daa
and
mov
movsl
sub
pop
insb
ds
push
test
pop
mov
xorl
push
in
ds
insb
sub
arpl
jno
lods
xchg
sbb
jnp
xchg
adc
cli
test
rol
gs
or
sub
mov
or
xlat
rcrl
das
test
pop
mov
ja
add
out
xor
add
test
mov
fwait
pushf
or
dec
mov
xchg
dec
add
inc
jge
aam
jecxz
fidivrl
ja
pop
nop
arpl
out
pop
jae
fistl
dec
jbe
movsb
and
outsb
sub
jp
push
std
pop
daa
out
sti
sub
pop
push
cmp
pop
sbb
mov
xor
sar
fucom
jo
xor
bound
icebp
lcall
cmp
fisubl
cmc
cmp
jnp
lods
sub
and
in
fsts
lahf
cmp
mov
movsl
sti
test
mov
loop
les
int
inc
xor
jp
das
outsb
lcall
cld
outsb
xlat
fsubs
cmp
mov
dec
daa
inc
cmp
inc
mov
into
test
mov
pop
pusha
cmp
sarb
pusha
jge
sbbl
add
stos
adc
dec
pop
hlt
in
cmp
adc
or
scas
cmp
out
rclb
imul
hlt
push
addr16
fadds
test
adc
xlat
adc
sub
lods
pop
mov
jns
sbb
jns
jge
fiaddl
movsb
and
push
cmc
cltd
fs
call
jmp
mov
xchg
jns
mov
and
cmp
jecxz
sbb
adc
sbb
movb
sub
popa
mov
xlat
rcrl
addr16
add
idiv
add
xor
dec
adc
cmp
repnz
ds
push
jo
lret
mov
jb
sysenter
or
subl
mov
jge
sbb
int
scas
popf
icebp
popa
cmp
cmp
xorb
lods
cmp
sbb
dec
cld
adc
jl
sbb
psubusb
push
ss
add
jp
and
cmpsb
pop
xor
cmp
dec
fstps
into
or
fistpll
pusha
mov
pop
iret
xchg
push
dec
jl
or
inc
push
es
addb
fstl
mov
scas
cs
shlb
out
adc
cmp
sub
mov
jne
dec
sbb
stos
cwtl
cmp
sub
je
mov
inc
push
fwait
pop
sbb
push
mov
dec
cmp
stc
adc
lods
xlat
sbb
lret
xor
add
dec
clc
lock
faddp
inc
in
loop
faddl
push
or
pop
sbb
mov
jg
pop
inc
insl
cmpsb
mov
sbb
pop
xor
push
dec
sbb
ljmp
sub
push
mov
lea
add
or
js
jne
mov
fwait
lcall
movsl
ret
xchg
ds
xchg
inc
cmpsl
push
cmc
call
es
pop
cli
pop
div
dec
popa
dec
roll
mov
mov
dec
nop
in
push
ret
int
push
pop
mov
dec
add
cli
testl
mov
imul
adc
or
lret
std
out
in
mov
dec
insl
inc
jle
sbb
inc
push
and
mov
adc
mov
cmp
cmp
xchg
jo
adc
fsts
roll
pop
inc
rclb
call
jns
push
jb
pushf
mov
stos
les
popa
imul
insb
adc
pop
in
sarb
cld
test
jg
adc
pushf
sub
xchg
xchg
cltd
popa
ret
pop
sbb
sub
dec
mov
mov
fisttps
pop
scas
sub
mov
sbb
arpl
push
fcoms
and
jns
jae,pn
daa
call
addr16
mov
dec
imul
loopne
mov
mov
loopne
aaa
cltd
testb
mov
lcall
stos
ret
xchg
mov
frstor
adc
mov
sub
push
dec
or
xor
jmp
inc
mov
mov
int
xor
daa
mov
rolb
mov
lret
test
inc
les
shl
mov
ss
xchg
jl
mov
cmc
arpl
pop
xchg
xor
push
sbb
mov
insl
add
js
arpl
xchg
push
movsb
fistpl
xchg
fwait
and
loopne
sti
cmp
das
gs
bound
dec
mov
in
push
push
jle
scas
aad
imul
call
packssdw
adcb
cmp
xchg
inc
je
das
orps
or
dec
pop
jo
lret
add
popa
bnd
addr16
int3
jns
fisubrl
inc
mov
divb
enter
inc
ror
nop
pop
fbld
mov
pop
and
push
or
jmp
cmc
push
sahf
push
inc
bound
repz
dec
add
xor
push
ds
or
insl
push
add
cmp
insl
adc
arpl
cmpsl
mov
js
cmp
loopne
add
add
addl
in
adc
jp
inc
mov
pop
push
mov
xor
aam
xor
jp
push
sbb
xchg
mov
aaa
ss
lds
inc
dec
into
mov
push
repz
outsl
xlat
push
mov
emms
lea
out
pop
stc
push
inc
es
adc
sbb
test
pop
pop
pop
std
repz
cmp
repz
cs
xchg
pusha
mov
and
rclb
cmpsb
fs
pop
cwtl
fwait
cmp
lds
adcl
jno
shlb
adc
push
push
sub
dec
mov
cmp
xchg
cmp
nop
push
enter
leave
daa
nop
ror
lret
lret
enter
aad
inc
jecxz
inc
out
hlt
shlb
xor
pop
popf
push
sub
dec
negl
cwtl
mov
pop
jnp
inc
rorl
dec
outsl
int3
out
div
and
dec
rcrl
xchg
pop
push
mov
movsb
clc
push
cmp
xlat
fsubrl
and
inc
add
or
xorb
stc
sahf
mov
xor
jge
pop
add
and
fdivrs
incl
push
xchg
inc
test
push
idivb
cld
ljmp
mov
scas
scas
pop
pop
ds
pop
mov
sbb
sub
addr16
out
jno
or
out
int
adc
in
mov
cmp
mov
push
std
cmp
jae
push
push
rorb
inc
mov
inc
call
dec
push
xor
mov
cltd
enter
xchg
adc
aaa
sti
loop
shr
xchg
inc
sbb
push
repnz
dec
push
loope,pt
sub
leave
cmpsb
jmp
lea
pushf
les
enter
nop
sarb
mov
mov
cmp
pop
add
jg
inc
scas
shll
jp
icebp
mov
scas
inc
fsubrp
cmpsl
cmp
or
xchg
pop
sbbb
mov
push
fcmovnbe
xor
movsb
dec
mov
or
sub
out
cltd
js
dec
xor
in
adcb
lcall
ret
pop
inc
shl
mov
popa
mov
lea
dec
sbb
mov
jno
jecxz
push
cmp
outsl
je
clc
enter
sub
lahf
pop
mov
sub
nop
add
repnz
fistps
repz
xchg
pop
inc
pop
rorb
mov
js
pop
cmp
dec
jmp
ja
shll
cmp
push
adc
dec
sbb
and
fdivr
mov
pop
adc
mov
sti
jae
cmp
loop
and
pushf
repnz
in
hlt
jmp
ja
xlat
xchg
xchg
xchg
dec
xchg
dec
mov
in
adc
int3
add
imul
cwtl
mov
inc
les
lods
orb
pop
insl
js
das
hlt
call
icebp
lcall
xor
daa
and
iret
aas
cmc
imul
mov
gs
add
jno
mov
mull
adc
xor
push
sub
inc
aas
fstpl
sub
jmp
std
cmp
mov
cmpsl
jge
inc
pop
std
push
lea
jb
std
mov
mov
dec
jmp
ljmp
in
jmp
shrl
add
inc
mov
mov
mov
inc
jecxz
pop
call
push
mov
and
inc
imull
cmp
loop
inc
dec
xchg
rclb
test
xor
mov
fistps
out
inc
jmp
popa
fldt
aas
xchg
cmp
cld
enter
or
in
fsubrl
lods
in
repnz
pop
dec
jle
aam
dec
jbe
jbe
lods
rorb
enter
mov
ljmp
jns
icebp
xrelease
mov
jnp
js
push
jmp
fnstsw
dec
stos
in
mov
out
push
mov
xchg
dec
jbe
mov
ja
push
dec
sbb
loope
lcall
mov
nop
sti
movsl
inc
sub
xchg
xor
outsl
lods
loope
jae
push
mov
les
or
repnz
sarb
push
push
andl
out
ja
jns
jb
mov
stos
test
bound
ljmp
xchg
ret
ja
adc
push
cmc
jg
sbb
in
push
aam
lock
pushf
jp
cmc
test
and
sbb
push
add
cmp
push
and
movsl
mov
fisttpl
imul
fstl
dec
lcall
mov
dec
jo
jns
movsl
aaa
fimuls
sahf
xchg
js
movb
inc
es
and
cli
fstpl
comiss
das
lea
sbb
add
push
les
sub
jl
pop
cmp
mov
sbb
hlt
jo
cs
pushf
mov
push
clc
out
and
shr
xlat
xchg
inc
ljmp
scas
sbb
pop
movsb
sbb
cltd
idivl
stos
lds
sbb
xor
and
or
mov
dec
je
mov
cmp
dec
dec
pop
jle
sub
cld
pop
sub
dec
mov
subb
mov
sbb
scas
xchg
sub
jnp
test
adc
lea
lea
and
sub
enter
pop
bound
xor
scas
inc
mov
daa
cmp
lods
aam
and
mov
insl
inc
nop
mov
aam
incl
loop
mov
lds
rolb
cmp
movb
sbb
adc
lret
sbb
mov
pop
xchg
mov
push
push
je
xchg
ss
sbb
xchg
aas
mov
test
addr16
ljmp
jg
or
jge
push
lahf
or
cmp
int3
into
cltd
scas
popf
sbb
fidivs
inc
test
add
mov
inc
cmp
push
pop
stos
cmpsl
push
adc
cmpsl
shl
xchg
fisttpll
ja
xor
jge
std
test
sti
cli
dec
xchg
jbe
xchg
xor
in
add
dec
mov
mov
repnz
clc
addl
xchg
jle
outsb
add
cld
push
mov
mov
sti
adc
fists
inc
pop
and
movsb
sbb
int3
into
jbe
sub
sbb
jge
or
or
cmc
mov
adc
test
cmpsb
dec
mov
mov
and
stos
pop
jecxz
inc
dec
int3
sub
mov
imul
jp
lds
mov
sub
mov
data16
in
call
mov
mov
stos
cli
and
scas
cli
mov
xor
mov
jmp
mov
loop
mov
mov
mov
stos
stc
movsl
jno
test
je
std
fs
rorl
pop
xchg
lcall
fstpt
dec
sub
fsubl
jo
out
frstors
cmpsb
andb
pop
call
jmp
fcomi
out
lods
mov
aaa
in
nop
insb
add
push
sub
cmp
hlt
mov
insl
loop
mov
add
sbb
sub
add
int3
xchg
roll
imul
cmp
and
sub
jmp
adc
sub
cmc
jmp
clc
xchg
sbb
hlt
adc
frstor
mov
sti
andb
in
mov
shl
cmp
shlb
fneni(8087
js
lods
inc
add
cmpsb
clc
mov
ficoml
imul
pop
ss
mov
adc
mov
fs
pop
and
add
jl
push
das
movsl
push
stos
addr16
inc
mov
lahf
or
inc
and
push
dec
xor
js
cmp
imul
push
sub
fistpl
outsb
pop
pop
dec
stc
ret
out
andb
add
repz
test
push
loope
fs
or
mov
rcrl
inc
push
adc
and
int
dec
xchg
mov
in
or
cmp
pop
sub
mov
negb
xchg
outsb
dec
int
inc
insb
adc
flds
lods
scas
jbe
push
cltd
jp
enter
scas
adc
pop
sub
enter
inc
popf
add
jle
bound
ret
test
enter
mov
mov
mov
sarb
bound
out
or
lcall
sbb
and
or
pusha
sub
rol
fidivl
bound
in
inc
mov
mov
hlt
ja
mov
push
or
aaa
mov
dec
cltd
xchg
call
jns
jne
aas
dec
xchg
lock
and
scas
pop
jbe
dec
fisttpll
add
mov
loop
stc
dec
push
inc
jne
das
jp
lret
mov
sub
ljmp
lret
mov
sub
sub
decl
sub
cmpsl
mov
sub
mov
movsb
add
daa
push
mov
fimull
mov
shll
cld
push
stos
mov
adc
sqrtps
mov
outsl
fstp
add
mov
add
fistps
add
sahf
mov
cwtl
fcom
call
stos
jae
iret
rolb
dec
loope
push
lds
xchg
or
mov
and
adc
rolb
bound
sbb
mov
inc
ret
movsl
mov
or
xchg
test
push
add
popa
or
pop
sub
dec
jo
hlt
pop
in
daa
sbb
inc
int3
sub
loop
cmpsb
or
lcall
ss
cmp
stos
cmp
pop
lods
mov
sub
int
je
addr16
dec
test
test
arpl
or
not
jo
mov
inc
outsl
jle
sbb
jno
push
repnz
fxch
xlat
xchg
fiaddl
cmpsl
and
push
push
imul
sub
das
dec
inc
mov
jo
push
mov
mov
call
scas
fwait
loopne
mov
xor
aad
imul
jp
mov
adcl
stos
fldt
repz
push
pop
xchg
adc
push
mull
sub
loop
psrlw
jl
push
dec
dec
lahf
es
fisubrl
nop
les
mov
pop
mov
xchg
rorb
mov
pushf
in
mov
int
orb
mov
xchg
or
sub
jns
mov
mov
movsb
out
or
mov
addr16
and
ja
lds
xchg
or
ja
push
jb
movd
lahf
push
xor
sbb
lods
add
mov
hlt
push
pop
cmpsl
mov
aad
lcall
or
bnd
pop
adc
jnp
fiaddl
pusha
cmpsl
add
mov
popa
mov
sub
dec
push
mov
mov
and
ja
daa
inc
jmp
cmp
jge
cli
int
repnz
js
mov
pop
cmp
mov
lret
mov
sub
les
into
mov
aas
enter
mul
mov
mov
mov
push
std
aad
loope
and
inc
push
out
dec
cwtl
stc
xchg
aas
nop
rcr
inc
lock
pop
int3
mov
popf
add
jo
leave
cli
and
mov
push
nop
jmp
les
and
cld
mov
xlat
push
imul
add
les
pop
sub
xchg
and
ljmp
pop
jge
repz
in
inc
jbe
movsl
fwait
lock
je
lret
cmp
sbb
pushf
xchg
inc
cmpsb
xor
dec
test
fildll
sub
push
test
jp
jns
mov
clc
loop
xor
push
outsl
lods
inc
mov
dec
gs
nop
aad
test
mov
add
sbb
dec
loop
je
sahf
sbb
xchg
add
aad
dec
sub
testl
leave
mov
sub
mov
push
push
dec
jle
arpl
outsb
mov
inc
sbb
and
push
adc
movsb
bswap
jo
scas
scas
mov
xor
jmp
or
popf
sub
aas
rcrb
inc
dec
mov
movsl
mov
into
inc
and
mov
iret
push
pop
pusha
popf
aad
dec
lods
jae
push
inc
add
faddp
xorl
andl
sub
add
xchg
jecxz
mov
sbb
lcall
out
add
pop
pop
scas
in
push
ja
and
aaa
mov
ljmp
das
sbb
jge
push
jle
test
rcll
cmpsl
inc
dec
jge
jb
lcall
xor
mov
xchg
push
sub
pusha
sub
stc
scas
imul
xchg
mov
mov
in
push
ret
int3
mov
add
fdiv
scas
push
add
cmp
subl
mov
addb
cmpl
repnz
or
inc
sbb
adc
out
pusha
cli
or
inc
jo
mov
aaa
mov
push
or
jmp
clc
mov
cmp
mov
stos
into
out
test
mov
push
jmp
dec
lcall
sbb
jmp
imul
hlt
ds
in
pop
sbb
dec
push
repnz
inc
jns
adc
repnz
xchg
push
cld
popa
inc
add
dec
fiaddl
das
pushf
and
iret
mov
xchg
mov
jne
mov
outsl
popf
loope
divb
in
lfs
sub
cmp
fidivs
aas
xor
jl
push
adc
mov
dec
lcall
mov
movsl
sub
adc
sub
cmpb
mov
mov
mov
loop
mov
xchg
sbb
or
dec
jbe
dec
test
xchg
arpl
pop
cmp
fdivrs
xlat
pop
jmp
stc
loope
dec
and
aaa
orl
xchg
aaa
push
sub
hlt
adc
psrld
cmp
xor
jo
pop
int
mov
cli
pushf
rcrl
movsl
pushf
fsts
add
inc
inc
cwtl
imul
fdiv
psrld
mov
popa
arpl
mov
and
popa
mov
imul
fucomp
adc
leave
hlt
dec
test
mov
adc
and
lds
xchg
mov
shrl
mov
mov
jmp
mov
ds
imul
pop
dec
xchg
sbb
jb
jnp
sub
pop
pop
xor
adc
lock
pop
popa
rorl
jmp
inc
inc
inc
lods
xchg
test
test
shlb
sbb
mov
jno
sahf
mov
mov
dec
mov
pop
lds
push
mov
jl
scas
repz
push
cmp
loope
into
popf
push
add
loopne
pop
je
adc
mov
movsl
xchg
mov
insb
pop
mov
rclb
jns
mov
cmp
dec
stos
stos
cltd
jne
imul
or
aam
pop
cmc
ja
push
mov
pushf
fcoms
sub
mov
pop
mov
adc
sub
xor
nop
push
daa
mov
dec
xor
push
jl
les
or
dec
and
push
aaa
or
add
lahf
inc
sub
inc
ret
inc
outsl
dec
ret
das
pop
cmp
iret
inc
add
imulb
aam
loopew
jge
inc
jns
and
inc
xchg
sbb
sbb
pop
clc
or
test
sub
int
mov
movsl
lahf
cld
pop
mulb
push
jae
dec
dec
inc
repnz
sbb
sbb
xor
leave
sbb
mov
ds
push
xchg
addr16
dec
cmp
cltd
fwait
lods
adc
mov
xor
fmull
xchg
xchg
popf
sub
cwtl
test
insb
mov
bound
in
fsqrt
cmc
jns
cmp
cmc
xchg
dec
out
jns
lods
insb
js
mov
xor
cmp
test
push
push
mov
fcmovnbe
push
leave
test
inc
ficoml
or
inc
push
inc
loop
mov
jne
sbb
pusha
mov
mov
std
lret
and
or
push
rcrl
xor
mov
xchg
jb
adc
into
lahf
dec
adc
gs
aaa
fwait
nop
push
pop
xchg
pop
jge
cld
dec
xchg
mov
jp
sbb
shrb
aad
mov
pop
inc
push
movsb
lea
cmp
jmp
mov
jnp
inc
mov
aad
xor
sub
loop
ret
std
cmpsl
mov
jl
fdivp
insl
bound
sbb
push
fwait
aaa
jnp
jns
stc
add
or
pop
cltd
mov
sbb
lcall
test
xor
dec
jbe
cmp
imul
lock
jo
leave
fiadds
or
xchg
push
pop
jg
js
sbb
in
pop
out
add
nop
shl
mov
cli
bound
ds
lahf
add
add
lods
bound
jle
dec
sbb
fcoms
pushf
in
roll
cmp
xchg
xchg
std
imul
adc
icebp
std
in
push
repz
mov
mov
jmp
xlat
sub
subb
aam
lret
mov
out
std
movsl
and
push
inc
mov
pusha
idivb
xor
mov
stos
test
mov
gs
adc
iret
or
loop
jns
cmp
lret
mov
popa
adc
mov
ja
jb
orl
insb
fucom
mov
dec
cmp
dec
xor
jnp
sbb
mov
daa
dec
outsl
dec
hlt
arpl
repz
movsb
cmp
pop
aaa
stos
dec
clc
mov
jns
mov
sahf
ret
inc
pop
icebp
jl
pop
adc
inc
dec
testb
les
sub
adc
xor
dec
xchg
cmp
xor
jmp
decb
adc
mov
adc
sub
and
mov
pop
shrl
sbb
mov
cmpsb
andl
loope
jmp
aad
pop
mov
sahf
cmp
pop
setp
push
sub
dec
stos
fincstp
imul
inc
or
jbe
out
int3
push
into
loop
aad
push
push
out
push
or
pop
int3
nop
mov
adc
mov
scas
call
mov
xchg
mov
push
mov
mov
push
outsl
cld
pop
or
cmpb
cmp
mov
mov
sub
addr16
push
sub
jmp
lock
jg
jo
mov
movsb
scas
cmc
jmp
mov
jbe
cltd
ficoms
sbb
adcb
xor
mov
jmp
add
xchg
fwait
arpl
add
or
xchg
push
push
cmc
or
idivl
xor
push
fsubs
test
inc
mov
fwait
mov
daa
pop
sub
ljmp
dec
shrb
std
ret
imul
jg
test
xor
inc
pop
xlat
adc
pop
adc
pop
mov
mov
leave
pusha
std
sbb
lock
es
sbb
clc
jle
mov
outsl
pop
mov
cld
cmc
cmp
mov
mov
cmc
and
mov
xchg
je
mov
adc
cwtl
lcall
and
xor
jmp
push
insb
xor
in
jl
mov
insb
mov
popf
cmpsl
sbb
loopne
or
cmpb
push
adc
ror
cmp
push
out
push
xchg
movsl
cmp
inc
or
push
gs
bswap
and
fcmovnb
mov
cs
push
aad
mov
pop
lcall
ret
les
mov
xchg
or
mov
adc
scas
push
call
mov
or
sub
movsb
mov
pop
mov
cmp
jb
push
ss
lcall
in
outsl
fisttpll
scas
mov
pop
jge
fstpt
orb
mov
imul
cmc
push
clc
add
cld
lock
movsb
adc
negl
add
lret
movsl
jo
sub
add
pop
jecxz
mov
mov
arpl
lret
xchg
cmp
test
insb
adc
add
insb
xchg
jle
iret
mov
std
cmc
inc
int3
jbe
add
sbbb
popa
test
rcrl
lcall
fs
mov
or
movlps
movsl
inc
pushf
push
or
jne
lods
cmpsl
mov
pop
test
inc
xlat
xchg
mov
mov
pusha
xchg
or
and
mov
dec
push
jl
rcrl
test
sarb
lea
mov
leave
test
mov
in
les
fs
pushf
testl
in
xor
inc
cmpsl
sub
insb
mov
ret
bound
mov
inc
lcall
lea
mov
jbe
mov
pop
jl
stc
sub
push
inc
repnz
rolb
adc
stc
std
mov
dec
sub
stc
fs
stos
jno
mov
push
adc
test
jns
sub
dec
fsubrp
imul
dec
pusha
call
push
imul
call
gs
sbb
mov
rol
dec
roll
pop
jg
mov
loope
in
addr16
enter
daa
push
sti
cmp
xor
aas
xor
pusha
out
ja
sub
adc
pushf
imull
mov
fstpl
ss
test
dec
scas
mov
call
dec
enter
int3
repnz
adc
cwtl
or
out
out
add
mov
jae
mov
pop
in
leave
sbb
scas
mov
and
aaa
xor
sub
nop
xchg
inc
sub
fldt
jb
inc
jg
add
cs
sti
popf
mov
cmp
mov
fisttpl
xchg
lahf
rcll
sub
lret
jecxz
inc
fsubs
hlt
mov
adc
sahf
outsl
shrl
push
lret
fwait
mov
cwtl
mov
xchg
ljmp
add
mov
lahf
fldl
dec
adc
mov
xor
mov
inc
lcall
lcall
fistps
inc
into
jae
sbb
mov
xor
mov
pushf
stos
dec
jecxz
xor
jo
mov
mov
xor
adc
jecxz
sbb
mov
nop
in
sbb
jmp
jg
add
jl
outsb
push
jae
scas
lods
fistps
das
pop
jmp
dec
xor
sub
std
imul
xor
add
inc
scas
ror
or
mov
dec
sub
jp
test
in
mov
mov
sar
icebp
sti
add
xchg
inc
dec
fnsave
jbe
negl
scas
pop
cmp
xor
insl
pop
addr16
inc
fwait
inc
push
nop
testb
dec
xlat
sbb
cmp
cmc
jge
je
fs
xchg
xchg
adc
jne
enter
mov
mov
daa
daa
arpl
daa
jnp
mov
loop
push
popf
fs
hlt
push
and
in
repnz
leave
sbb
cmp
insl
in
inc
les
test
xor
mov
xor
cmp
ret
sub
adc
roll
xchg
arpl
xchg
mov
in
cs
or
push
adc
or
dec
sti
mov
fsts
stos
or
pop
add
rclb
sub
in
sarb
sti
sub
inc
jg
es
or
lock
ja
aaa
popf
jno
xchg
ret
dec
pop
cmpsl
xchg
mov
cmp
dec
ljmp
outsb
stos
push
inc
mov
aaa
pop
adc
cmp
inc
cmp
add
pushf
das
cmp
mov
mov
fs
mov
jecxz
and
sbb
in
into
dec
stc
test
cmpsb
test
mov
push
pop
add
push
in
sbb
jb
cmpsl
mov
mov
mov
pop
mov
fwait
adc
jge
ds
dec
sub
sbb
mov
pop
jbe
pop
jp
jae
mov
sti
push
or
xchg
out
or
pop
ss
xor
cld
push
dec
add
mov
pop
mov
sub
xor
lea
in
jns
adc
mov
adc
stos
lcall
inc
jb
push
dec
les
or
icebp
mov
adc
ljmp
and
std
in
sub
in
mulb
out
mov
imul
aam
add
mov
in
dec
gs
adc
cmpsb
or
loope
into
loope
imul
push
xchg
test
jmp
cmpl
and
fdiv
add
cmpsl
mov
out
es
jge
das
jge
add
xchg
mov
fs
mov
adc
test
stos
push
dec
jl
xchg
inc
push
ret
imul
jmp
popa
orb
pop
out
insb
fwait
jne
call
or
mov
xchg
pop
test
into
sbb
in
int
sub
fldl
jns
lods
mov
cmp
fwait
push
insl
lahf
jno
in
icebp
mov
jbe
scas
lods
inc
cmp
push
call
push
xor
in
mov
mov
daa
xor
jne
stos
and
xlat
lea
pop
stc
enter
daa
xchg
shrb
mov
inc
xor
ds
xchg
inc
inc
ftst
pop
or
mov
xchg
inc
loop
imul
cmp
inc
fwait
lea
int3
les
jle
inc
jmp
movsl
pusha
or
out
add
add
and
sub
arpl
mov
cmp
addb
mov
xchg
loopne
add
inc
aas
into
and
mov
xor
ret
daa
mov
and
mov
xor
jp
sub
pop
pop
push
aaa
sbb
pop
in
pop
repz
push
cmp
in
cmp
repnz
test
push
lock
aaa
mov
dec
mov
insb
sbbl
repz
adc
lahf
lea
mov
insl
lahf
cmp
cltd
aas
iret
mov
ljmp
push
scas
or
cmp
mov
jp
insb
loop
cmp
xlat
test
jmp
add
xor
ficoml
shll
jns
fwait
movsl
dec
in
test
adc
push
or
aad
test
mov
add
push
into
ds
scas
std
leave
cmc
in
mov
mov
adc
dec
inc
xchg
add
ja
inc
add
xchg
pop
cli
les
scas
rcrl
cmp
jge,pt
lcall
inc
xchg
adc
in
rorl
jo
add
mov
cmp
cmp
mov
jnp
xor
lds
int
inc
fidivs
jae
push
sbb
xor
roll
add
in
pop
xor
inc
lahf
adc
mov
mov
movsbl
inc
test
xchg
mov
or
movsb
call
add
lods
pop
movsl
inc
jae
cmpsb
iret
or
push
sbb
dec
stos
push
cltd
sub
sbb
neg
jb
outsb
sub
sub
test
hlt
jle
add
pop
mov
loope
cltd
aas
sbb
mov
or
popf
pop
mov
popf
jmp
pop
sub
mov
jno
xchg
rclb
jp
push
out
cmp
xchg
popf
lcall
shl
loopne
aas
ficoms
sbb
fldenv
mov
xchg
xor
adc
mov
popf
sbb
inc
pop
mov
pop
fs
int3
xor
mov
outsb
add
mov
fisubl
and
les
pop
hlt
repz
mov
rcrb
addb
nop
add
dec
jb
dec
or
xchg
insb
dec
jb
sub
pop
les
aam
cmpl
mov
mov
dec
pusha
add
inc
xor
and
push
les
lret
push
mov
push
sbbb
and
repz
inc
cmpb
lods
xlat
cmp
xor
shl
or
lahf
aad
xor
mov
jno
movsb
das
mov
sbb
dec
mov
ja
or
pop
inc
pop
push
not
negl
sar
out
mov
repz
jnp
push
in
dec
pusha
fldl
loope
lods
shlb
cmpsl
or
push
jnp
push
mov
jecxz
fbld
jge
inc
out
rep
cmp
pop
sub
sahf
sub
div
insb
inc
fisubrl
dec
ret
je
jg
lret
dec
mov
in
int
inc
lret
push
in
enter
jo
sub
scas
sbb
pop
mov
aaa
subb
cmpsl
xchg
xchg
ret
dec
mov
sub
or
xchg
inc
movsb
shrl
push
jo
ljmp
test
cld
pop
out
or
or
cli
rclb
or
out
loope
and
push
mov
cli
movsl
or
imul
mov
imulb
and
mov
and
mov
js
mov
lea
fs
dec
test
inc
mov
dec
aaa
lock
cmp
sub
mov
cmp
mov
test
inc
aaa
insb
add
sti
ret
mov
adc
dec
cmpl
xchg
je
add
test
cmp
dec
pop
xchg
mov
rol
xor
sahf
and
mov
je
push
mov
into
cmpb
inc
xchg
orl
fdivs
jo
or
lret
fwait
lret
fisttps
sbb
xor
mov
std
mov
daa
xor
into
mov
push
dec
loop
jp
push
mov
inc
imul
in
ss
adc
cwtl
daa
cmp
cli
daa
cmp
xor
inc
ss
pop
push
andb
sbb
and
mov
leave
std
int3
lret
or
sbb
in
dec
aam
mov
jmp
lods
mov
mov
and
ret
rorb
push
pop
jae
pop
jecxz
dec
js
bnd
or
gs
lods
ret
in
ljmp
lea
pop
js
jl
pop
fwait
jp
inc
idivl
addr16
xor
out
adc
push
mov
das
or
outsl
loope
and
les
movsl
xchg
setae
mov
and
mov
adc
imull
xor
pop
sar
mov
imul
sbb
mov
out
push
rcrb
cmc
mov
dec
adc
or
push
test
clc
lods
adc
loope
xchg
mov
jo
xchg
adc
out
jle
lods
mov
in
pop
jne
sub
push
xor
xchg
dec
sahf
in
icebp
jge
add
sbb
or
lock
jmp
xchg
mov
mov
inc
mov
cmp
insb
xchg
dec
cmp
jp
adc
daa
adc
popf
pop
xchg
ret
call
addl
lret
xchg
mov
xchg
or
adc
mov
stos
loop
adc
clc
xor
cmp
sarl
push
stos
cmp
add
aaa
negb
cmc
pop
jge
out
mov
cmp
xchg
pop
jg
xchg
jmp
inc
inc
mov
mull
test
dec
stc
das
shll
repnz
nop
xor
insb
mov
icebp
mov
add
adc
stos
lahf
cmp
pusha
fdivp
sub
mov
lcallw
adc
cmp
decb
fadds
pop
sub
out
add
mov
inc
ja
and
ss
movsb
dec
dec
insb
push
adc
shlb
push
hlt
sbb
sbb
lahf
dec
je
movsl
xchg
adc
xchg
sub
xlat
jo
add
xor
test
cmp
push
add
repz
jg
imul
int
insl
and
test
xchg
lret
xor
in
push
adc
jno
dec
mov
sub
mov
xlat
sbb
push
pop
inc
cmp
out
add
into
adc
cmp
pop
call
fisubs
push
js
cmp
inc
xchg
fnstcw
stos
rol
mov
add
push
or
jmp
popf
cli
adc
dec
fimull
lcall
inc
pusha
mov
je
imul
outsl
pop
adc
je
mov
aam
cmp
lret
aad
mov
and
add
div
pop
mov
jg
cwtl
fs
add
xor
push
or
js
gs
mov
mov
jo
js
popf
xchg
dec
pop
js
xchg
mov
pop
cwtl
scas
or
fstl
inc
mov
shrl
mov
call
movsl
fidivrl
add
xchg
sbbl
fbstp
jnp
or
fimull
cmp
stos
notb
push
fbstp
adc
daa
xor
pop
fptan
fsubl
aaa
inc
mov
addr16
fidivrl
es
xchg
mov
pushf
add
jmp
out
adc
hlt
and
xchg
push
rcrl
inc
imull
call
mov
xchg
divb
enter
iret
mov
es
jo
out
push
mov
inc
push
mov
add
aaa
loop
dec
xchg
xor
stos
mov
hlt
sbb
outsb
test
add
int
adc
in
icebp
int3
movsb
int
mov
loopne
push
mov
add
sbb
repz
movsb
aam
push
adc
xchg
sbb
mov
push
scas
inc
jnp
hlt
stos
clc
cmp
test
movsl
rcll
fidivrl
xchg
xchg
push
cmp
push
cmp
pop
push
jae
or
sub
mov
pop
lock
loopne
daa
mov
add
push
jbe
push
mov
mov
push
lret
out
push
rolb
pop
or
xorl
clc
jne
or
sub
pop
xchg
pop
in
xchg
fnstsw
jge
pop
flds
aas
sub
xor
xchg
and
fdivrs
xor
mov
mov
ds
inc
push
mov
mov
add
shrl
mov
cmp
out
mov
push
dec
and
mov
jo
insl
push
movb
shll
clc
inc
inc
inc
dec
movsl
jno
pushf
inc
xchg
push
inc
shrb
dec
mov
inc
add
and
adc
inc
push
inc
sahf
std
mov
jo
jg
or
mov
lahf
adc
xchg
loopne
sbb
repz
lods
leave
sbb
sub
and
imul
xchg
or
fldt
mov
leave
scas
insl
push
xchg
mov
aas
dec
test
cltd
cmp
inc
das
jmp
and
mov
std
push
sarl
outsb
pop
scas
add
or
lahf
roll
cmpsb
daa
sub
fisubrs
lock
lret
into
lods
pusha
std
div
cmp
aad
jo
sbb
stos
and
push
es
fiaddl
inc
les
mov
push
mov
out
stos
std
xor
pop
mov
lahf
cmp
js
call
nop
inc
push
data16
cmp
ja
dec
mov
addl
cmp
bound
jno
and
enter
dec
mov
das
dec
leave
jl
mov
out
add
repz
data16
rcrl
negl
cmpsb
aad
and
js
cmp
pop
or
icebp
mov
inc
cltd
mov
cwtl
mov
push
push
xchg
repz
loope
or
pop
mov
leave
push
rol
inc
rcrl
leave
adc
xchg
out
daa
sbb
mov
jo
fildl
dec
sub
adc
dec
bound
pusha
mov
roll
mov
lahf
aad
addr16
sub
mov
xchg
or
adc
arpl
daa
test
insl
mov
xchg
cmp
sbb
sbb
mov
mov
xchg
stc
loopne
test
push
sub
sub
inc
mov
sub
test
movsb
pusha
idiv
int3
or
inc
es
call
mov
cli
jne
and
jl
pusha
loopne
outsb
rclb
dec
rcrb
mov
inc
hlt
push
ss
push
pop
or
mov
cli
fnstsw
push
in
sbb
nop
dec
adc
stos
popf
mov
aaa
ret
fisubrs
push
xchg
cmp
push
or
pusha
push
inc
jle
mov
clc
test
popa
pop
pop
xlat
cmpsb
lods
sub
jne
jg
mov
test
xor
xchg
push
dec
cmpsl
add
pop
pop
xchg
sbb
adc
sarl
cmp
jge
int3
cmp
adc
sbb
sbb
out
ret
cli
out
mov
xchg
repnz
in
mov
xchg
popa
xchg
or
sbbb
and
and
inc
ljmp
fbstp
xor
clc
scas
push
jg
imul
insb
js
add
decb
aam
out
mov
or
adc
xchg
adc
clts
aam
insb
ret
sub
rclb
fidivrl
jg
fs
shr
inc
sub
xor
jne
int3
loop
inc
scas
sahf
clc
sbb
jns
sbb
jmp
inc
scas
jecxz
ret
cld
xchg
xor
pop
ret
bound
xchg
addr16
fdivrl
xor
lret
adc
ds
mov
pop
cmp
pop
pusha
in
stos
into
pushf
sahf
fisttpl
test
ljmp
dec
sub
sbb
and
jmp
add
arpl
and
outsb
lcall
lock
mov
pop
mov
jne
mov
cmpsl
stos
out
aad
out
dec
in
inc
pop
push
lds
push
popf
xchg
in
ja
jo
nop
or
push
lret
ljmp
push
sub
loopne
into
pop
sub
int3
pusha
inc
fcmovnu
cmp
leave
in
pop
mov
clc
pop
addr16
pop
sub
nop
stc
cmp
dec
sahf
mov
lcall
lods
xor
xchg
mov
sbbl
cmp
out
sub
adc
push
inc
push
dec
iret
fwait
inc
int3
xchg
cmp
int3
rcll
push
cld
mov
or
and
adc
stos
mov
cwtl
mov
mov
cmpsl
mov
add
mov
in
push
inc
movsl
pusha
orb
xchg
jnp
adc
mov
pop
test
and
mov
je
std
cli
stc
fcomp
jecxz
push
push
xchg
jnp
add
pop
rolb
je,pn
xchg
or
push
xchg
mov
lods
inc
out
mov
sbb
cmp
dec
fmul
and
js
loopne
cmp
jmpw
int
jg
test
icebp
mov
addb
push
pop
cmp
dec
and
and
adc
jmp
sbb
xchg
test
lahf
ds
sahf
sub
dec
pop
mov
cs
lret
adc
jmp
adc
int3
inc
arpl
and
mov
shll
fmull
dec
mov
mov
pop
gs
cmpsb
lods
jmp
xor
cld
sbb
lahf
ljmp
sub
push
imulb
fidivs
sarb
test
sti
pop
loope
scas
imul
iret
fwait
outsl
cs
dec
ret
cmp
cs
push
pushl
add
dec
cs
or
mov
push
add
xorb
dec
dec
testl
fmull
adc
cmp
aam
aam
jns
inc
movl
ss
xchg
shl
sub
sbb
xor
add
cmp
and
jmp
gs
sbb
ja
push
add
xchg
add
sub
bound
jge
out
jb
inc
cmp
mov
xor
sbb
aam
pusha
mov
out
mov
cmpsb
jns
lea
jnp
sub
or
push
movsl
bound
sbbb
test
pop
inc
sbb
mov
dec
add
pop
movsb
push
insb
xor
cmp
inc
stc
push
mov
repz
pop
xchg
jmp
push
stos
call
out
test
cmp
fcom
xor
adc
pop
or
jnp
je
mov
lods
dec
inc
or
add
xorl
add
cli
pop
mov
mov
add
sbb
test
cmp
lock
stos
mov
fs
imul
sub
stc
int
lcall
jle
or
sbb
std
dec
adc
mov
add
jmp
adc
push
movsb
adc
fsts
cli
pop
ret
or
movsl
pop
mov
dec
or
pop
sub
cwtl
push
lds
mov
inc
outsl
lods
popa
mov
int3
cmp
retw
nop
lret
sbb
ret
scas
aas
jl
sub
push
icebp
imulb
or
push
inc
inc
pushf
inc
nop
pop
ret
orb
jg
insl
mov
dec
mov
lret
sbb
imul
jg
rolb
ror
lret
outsb
adc
ljmp
cmpsb
cmp
xchg
popf
fcmovbe
mov
xor
and
andb
ljmp
arpl
in
mov
add
cmc
mov
sbb
inc
mov
lret
adc
out
push
push
push
add
mov
pslld
sbb
pop
cmc
cmp
inc
add
enter
pushf
lcall
lcall
jmp
sbb
stc
addl
mov
mov
insl
xor
sbb
pop
xchg
jb
cs
mov
ja
ret
jg
or
jns
sbb
incl
cmp
out
xchg
sbb
xchg
inc
in
stc
xor
jo
in
jecxz
int3
repz
add
dec
mov
lods
push
fsubs
pop
loope
gs
jecxz
idivl
test
push
aaa
push
stos
cmp
div
pop
sub
inc
aam
jns
iret
ja
std
jno
fldl
jge
xor
sub
xlat
pop
add
and
cmp
bound
shll
cmp
faddl
mov
cwtl
addr16
ret
mov
add
imulb
icebp
lods
dec
cmp
les
fwait
or
es
pop
icebp
mov
pusha
in
inc
mov
cmp
mov
pushf
and
insl
gs
in
cmp
or
push
lret
cmp
mov
xor
mov
enter
divl
inc
or
fstp
pop
scas
add
sbb
add
cmpsb
push
pop
add
mov
decb
mov
push
add
orl
mov
adc
push
jne
roll
or
subl
loope
pop
and
inc
leave
sub
xchg
lods
push
adc
cli
mov
enter
pushf
adc
mov
add
subb
pop
jns
int3
adc
arpl
int3
dec
and
stc
loop
adc
mov
daa
lea
call
and
add
clc
out
out
pop
int3
call
orl
movsl
ja
sub
pop
jmp
mov
js
test
and
rcl
add
out
mov
dec
loopne
dec
sbb
ja
movsl
jo
movsl
pop
mov
sbb
rorb
lds
adc
jl
data16
repnz
or
and
add
pushf
sti
lock
cli
scas
sti
cmpb
and
or
mov
adc
into
fistps
jbe
dec
rorb
xor
sbbl
mov
rorb
fcoml
int
cs
out
mov
test
sub
in
jmp
imul
lcall
dec
dec
cmp
nop
sbb
mov
mov
dec
mov
xor
adc
icebp
adc
out
push
cmpsb
adc
add
incl
test
adc
lock
sbb
mov
je
adc
incl
addl
xor
gs
shrl
fists
jmp
fwait
mov
xchg
sarb
xor
jno
inc
enter
int3
pop
in
mov
push
repnz
pusha
lret
movsl
imul
jo
loope
add
ret
sub
push
lods
jne
lods
mov
imull
popa
jo
add
xchg
insl
fwait
add
cmp
popa
test
mov
clc
fwait
into
jne
test
subl
mov
jge
test
pop
push
or
std
cmp
dec
xchg
loope
subl
jno
inc
xchg
inc
or
cmpsb
dec
inc
adc
and
test
out
adc
adc
push
pop
adc
rclb
push
test
sbb
mov
xlat
fsubr
outsb
cmp
cltd
xchg
test
xor
xor
lcall
push
rcl
jne
stos
inc
out
stos
mov
mov
jne
scas
test
inc
push
cmpsb
and
push
lret
loope
icebp
jecxz
pop
xchg
adc
jmp
push
test
add
cmp
mov
inc
dec
inc
int
mov
loope
mov
xlat
inc
mov
xchg
or
mov
mov
imul
clc
sub
movsl
fwait
jnp
push
call
fs
imul
loopne
aaa
out
in
dec
rcll
xor
pop
orb
pushf
dec
pop
jmp
ss
test
enter
lods
inc
adcb
cmp
mov
xlat
mov
xchg
insl
retw
insl
sahf
call
adc
xchg
jecxz
in
popf
adc
dec
mov
bound
push
mov
push
mull
fstl
jmp
sar
sub
mov
test
dec
repz
xchg
mov
mov
mov
notl
push
adc
or
idivl
leave
pop
fabs
cld
les
movsw
push
popf
mov
into
push
mov
ret
in
pop
mov
movsl
sub
imul
fists
jb
lock
sub
in
sbb
iretw
and
jnp
mov
adc
push
pop
scas
js
sub
test
sbb
dec
je
stos
mov
mov
pusha
or
mov
lods
sub
xor
out
add
adc
cs
adc
pop
and
jne
outsb
in
or
icebp
dec
add
sbb
test
xchg
aaa
ja
sbb
call
repz
push
int3
push
fwait
add
add
mov
jge
adc
xor
leave
dec
imul
fldt
aaa
push
cmp
sarb
fbstp
add
sahf
push
mov
imull
ss
cmp
inc
mov
test
ja
sub
cltd
movsl
lea
jmp
mov
faddl
lahf
movsl
lock
out
lret
scas
scas
fnsetpm(287
sti
mov
addr16
fdivs
cs
cmpsb
push
jg
outsl
outsb
and
mov
daa
dec
fcoms
rorb
jmp
push
adc
push
outsl
pusha
inc
jno
in
jmp
jecxz
aam
push
sbb
pop
pop
fwait
and
rorb
leave
arpl
lods
lds
mull
lods
lret
scas
xor
lods
pop
push
mov
or
inc
mov
adc
sarl
scas
mov
push
or
xorb
push
movsb
pop
xor
addps
scas
sahf
aaa
dec
out
inc
jne
testb
js
shll
data16
imul
jnp
push
sub
loop
or
jmp
cmp
mov
mov
test
icebp
xchg
shll
addr16
mov
fisubs
mov
test
fwait
loopne
in
sbb
dec
and
cmp
inc
shll
test
and
mov
test
inc
daa
cmc
lea
aas
orb
hlt
cs
nop
jl
xchg
stc
cmpsb
adc
fnstsw
mov
mov
pop
inc
inc
in
pop
fnstcw
loopne
insb
inc
inc
sti
jp
cmp
repz
stc
adc
or
jecxz
insb
fs
lea
add
and
inc
mov
mov
mov
or
imul
push
test
xchg
test
push
fcmove
test
or
out
mov
sub
xor
pop
lods
pop
mov
pop
inc
fdivl
call
push
mov
mov
fwait
mov
cmp
fistpl
rcl
fimuls
outsl
cmp
cs
xchg
jno
xor
or
push
pushf
push
insb
imul
sbb
enter
sub
imul
int
popf
sub
fsubrs
mov
xchg
push
xor
jae
stos
push
pop
jg
push
xchg
cmp
inc
sub
rcrb
cmp
cld
ret
jo
out
push
mov
sti
jb,pn
icebp
outsl
std
loope
inc
je
xlat
jg
insb
popf
clc
lcall
add
xchg
negl
xor
in
add
inc
lret
test
sub
fs
xchg
add
inc
ljmp
aaa
into
or
xor
lret
cs
pushl
daa
sbb
push
jmp
iret
int
pop
int3
mov
and
aam
in
mov
or
xor
jae
mov
push
int3
leave
mov
sbb
jmp
mov
ds
and
test
popa
stos
pop
ds
adc
mov
mov
loop
or
pop
xchg
sub
repnz
push
insl
fildl
mov
fldenv
lret
push
sarl
dec
test
add
mov
retw
in
shll
inc
jle
test
push
out
lcall
out
mov
popf
scas
pop
add
or
mov
test
out
push
mov
mov
pop
cmp
pop
aam
fs
jge
out
out
js
mov
dec
xchg
test
mov
pushf
dec
cmp
mov
inc
xor
lods
js
add
out
mov
jno
xor
push
aad
test
jl
xchg
stos
arpl
enter
mov
outsb
fcomp
inc
add
mov
lea
pop
xchg
mov
cmc
addl
lods
xchg
repnz
inc
in
push
sbb
lods
testb
icebp
add
mov
test
das
es
jb
mov
fidivrs
mov
movsl
push
shll
dec
cmpsl
aad
call
shlb
mov
lret
cltd
add
push
jg
sub
mov
or
adc
inc
jns
enter
das
push
shlb
pop
sti
sbb
mov
aad
popl
mov
mov
pop
sbb
lods
leave
mov
mov
fidivs
popf
xchg
sarl
pop
sbb
and
adc
cld
adcb
pop
xchg
call
mov
push
out
mov
mov
pop
mov
bound
lods
adc
loope
mov
ret
and
shll
mov
sbb
sti
shrl
or
add
movups
sub
pop
shl
pop
ljmp
test
mov
adc
outsb
and
mov
stc
jae
call
outsl
xor
inc
loopne
mov
and
add
mov
fadds
cld
iret
sbb
aaa
aas
and
fcmove
and
mov
adc
ficompl
lds
addr16
mov
sbb
dec
sub
sub
clc
int
cmp
dec
out
lods
or
mov
test
dec
adc
fs
adc
aad
popa
dec
push
cld
cli
sbb
outsl
inc
enter
stos
inc
nop
test
loop
scas
sub
lods
sbb
mov
mov
cmp
dec
cltd
in
cmpsl
hlt
or
jmp
loope
and
int3
xchg
rorb
outsb
jo
ds
inc
popl
pop
xor
divl
sub
sub
jmp
aas
xchg
jo
fs
mov
push
test
cmp
mov
push
les
inc
repnz
xlat
inc
dec
scas
lods
sub
shlb
orl
aad
pop
inc
testb
cltd
nop
mov
xor
adc
jb
jb
adcl
mov
push
dec
mov
movsl
bound
push
out
and
pop
in
addw
out
cmp
lods
dec
mov
sbb
sub
movsl
sarb
inc
mov
mov
push
xchg
inc
xchg
jae
add
adc
sti
push
out
cld
clc
mov
dec
jne
pusha
scas
int3
lods
sbb
mov
scas
pop
repz
orb
dec
loopne
pushf
or
sbb
inc
mov
test
xorb
je
pop
or
mov
add
stos
not
cltd
pavgw
jle
mov
jno
insl
mov
aad
push
jmp
jecxz
fistps
push
xor
mov
and
inc
outsl
adc
mov
clc
sbb
mov
sarb
pop
lods
loope
hlt
testl
dec
inc
aas
loope
out
jecxz
shr
clc
iret
mov
ja
jp
jl
pop
es
fiadds
inc
mov
lods
push
pop
jg
js
or
jbe
shl
lret
xor
test
ss
cmp
les
pusha
aam
icebp
in
sub
in
fistps
sbb
into
out
jnp
daa
dec
xchg
in
mov
clc
push
in
out
cmp
push
xor
popf
mov
pop
fiadds
bound
mov
jno
add
inc
or
xlat
xchg
ljmp
xlat
mov
cmpsl
inc
notl
sahf
cwtl
stos
push
inc
cld
scas
popl
dec
ljmp
ret
iret
mov
sub
add
mov
and
in
out
mov
into
imul
mov
popf
sbb
fcoml
lds
mov
js
in
fs
pop
and
pop
jne
push
mov
pusha
push
outsl
xchg
insl
fdivrs
push
shll
pop
pushf
je
xchg
lcall
std
lahf
rclb
ja
lock
inc
arpl
inc
repnz
xchg
movsl
xchg
dec
or
lock
es
imul
movsb
bound
in
push
pushw
push
lcall
push
pushf
lahf
outsb
xor
sub
or
mov
inc
nop
adc
dec
mov
das
xchg
loope
mov
dec
lods
js
stos
inc
xor
aam
and
jns
adc
in
jmp
jns
outsb
cmpsl
xor
sbb
mov
std
pop
loopne
jecxz
inc
add
or
lds
shlb
jp
pop
or
arpl
cld
sub
or
fsubrs
lea
icebp
and
sub
sub
aas
int3
jp
pop
pop
xor
push
dec
std
out
inc
or
aad
or
aaa
ds
lock
sbb
leave
dec
push
and
pushf
movsb
jl
or
xchg
stos
jnp
sbb
mov
insl
jb
xchg
lcall
pop
adc
adc
mov
int
jmp
lea
arpl
mov
in
pop
jno
or
fisubrs
je
jecxz
jmp
push
outsb
mov
faddp
cmp
aas
stos
ss
in
bound
daa
ja
pushf
aas
je
fsubrp
adcb
mov
mov
cltd
cwtl
leave
xlat
jg
out
mov
push
call
cmp
test
ret
js
ljmp
inc
test
xchg
sub
dec
in
xchg
mov
scas
pop
sti
jno
fidivrs
pop
xor
out
scas
push
dec
jbe
or
cmp
cmpb
mov
stos
inc
dec
sub
stc
cli
dec
cmc
outsl
and
mov
pop
sahf
or
ror
loope
mov
outsl
rolb
mov
mov
pop
mov
sbb
movsl
cmpsl
sar
cmpsb
inc
cltd
ljmp
fnstcw
cmp
inc
lock
mov
push
sub
test
ficompl
and
sub
pop
push
cmp
jmp
fcoml
cmp
movsl
scas
adc
add
fwait
mov
and
testb
inc
lds
inc
out
leave
rcr
mov
mov
fbld
roll
insb
stc
into
jmp
mov
addr16
xorb
pop
out
jecxz
cli
adc
xor
pop
subl
jmp
inc
mov
ret
mov
sti
popa
cmpsl
scas
pop
xorb
adc
jnp
insl
fwait
pop
imul
cli
push
mov
shl
mov
cltd
pusha
dec
push
rcrl
cmp
mov
add
jns
mov
mov
mulb
jb
movsl
and
lret
xor
nop
ja
inc
subb
inc
jne
aas
rcl
mov
shrl
ss
mov
push
xor
insl
cmpsl
push
sub
xor
mov
jno
xchg
sub
sti
inc
flds
push
cmc
sub
popa
pushf
sub
stc
push
ret
push
fcoms
add
xchg
push
and
int
fdivl
sub
xchg
mov
xor
jnp
sti
or
pop
stos
cmp
pop
mov
mov
push
xchg
adc
lret
les
inc
cltd
scas
fldl2e
repnz
add
insb
push
movsl
inc
int
nop
std
jne
mov
sti
mov
and
lret
xchg
dec
lods
mov
mov
adc
lahf
ret
out
mov
add
jl
rcrb
mov
lds
sub
jp
jp
mov
loope
mov
push
mov
jbe
int
addb
lahf
aam
mov
hlt
push
ja
cmpsl
fadd
rorl
pusha
roll
mov
int
mov
mov
js
mov
adcl
stos
push
adc
add
mov
xchg
mov
cli
mov
popa
stos
jns
add
ret
out
fsubl
pop
je
lea
fwait
push
sub
cmpsb
push
jecxz
pop
stos
nop
sahf
push
insb
mov
push
mov
inc
xor
mov
loop
inc
mov
sub
sbb
xchg
pop
xchg
mov
pop
out
out
cmpb
outsb
jl
inc
mov
stos
xor
call
sub
lea
mov
cmp
add
ss
sbb
jbe
sub
jbe
lods
shll
outsb
aam
jmp
das
fcmovne
lcall
imul
pop
repnz
pushf
ret
mov
sahf
jne
insl
fisttps
xor
jg
fists
test
imul
loope
xchg
cmpl
loopne
sbb
into
sbb
repz
add
pusha
lret
bound
xor
and
lea
call
sub
adc
push
mov
call
xor
int3
xorb
roll
or
rcrb
pop
btc
andb
repnz
jb
mov
push
push
mov
int3
mov
or
fimull
or
inc
adc
js
fucompp
fimull
jl
pop
lahf
jnp
xchg
cmp
aaa
mov
or
mov
ljmp
imul
enter
repz
xchg
insb
dec
push
dec
adc
adc
into
mov
je
xor
dec
inc
notb
divl
mov
jmp
mov
mov
pushf
mov
outsb
dec
mov
fsubrl
xchg
dec
cmp
dec
inc
ljmp
fnsave
jne
push
pop
cmc
in
dec
jl
push
lods
js
daa
mov
arpl
mov
add
mov
sbb
cld
sub
popa
insl
mov
add
mov
int
repz
mov
and
mov
dec
in
out
cmp
pop
in
adcb
push
popf
ficoml
aad
jle
and
jo
or
sbb
and
jge
and
movsl
lret
aaa
aam
mov
mov
loop
push
sub
jne
and
adc
xor
add
lret
xchg
sbb
lods
jns
lds
lods
and
add
add
jnp
push
sbb
in
mov
mov
sbb
ret
xor
cmpsb
pop
sbb
clc
js
cmp
sub
pop
cmp
daa
adc
pusha
jno
lahf
xlat
xor
lret
pushl
pop
shrb
imul
push
pop
or
jo
dec
push
mov
lds
jmp
fidivrl
fidivs
xchg
mov
aas
and
shrl
xor
js
addr16
sub
xor
test
or
sbb
notb
jno
enter
fmulp
cmp
imul
rolb
repnz
xor
xchg
lea
popa
repz
dec
pop
sbb
cmp
iret
push
sbb
dec
sbb
add
or
jecxz
cmp
mov
divb
push
and
repnz
rclb
fnstsw
xchg
aad
daa
adcb
rcr
loop
test
shrl
cltd
add
or
int3
mov
psraw
imul
dec
ljmp
test
scas
adc
jp
pusha
cmc
fnsave
sub
dec
jge
ret
and
sub
inc
test
sti
pop
sbb
sbb
loop
stos
cltd
popf
out
dec
mov
jp
sub
xor
mov
sub
fmull
lods
add
jp
cmp
sbb
popf
dec
push
push
das
popf
pusha
fs
push
jecxz
int
ljmp
xlat
and
jle
fld1
insb
pop
cmc
rcll
mov
and
add
dec
int3
jo
out
cmpsb
fsubrs
pop
insb
sbb
xchg
out
push
push
jle
pushf
mov
fdivrs
movb
push
push
add
or
inc
clc
imul
pushl
xor
sti
cmpsl
decl
subb
popf
fiaddl
mov
mov
mov
jae
jl
clc
inc
leave
jl
cmc
xor
jbe
push
addb
andl
lock
pop
insl
adc
jne
push
mov
jbe
lea
lret
jp
js
fsubs
pop
loope
js
test
push
or
mov
jno
rcrb
dec
adc
aaa
int3
sbb
sar
test
fsubrl
pop
sar
mov
add
enter
fstp
lods
adc
stos
in
adc
lds
shlb
or
mov
mov
sbb
popa
bound
xchg
imul
dec
push
and
mov
adc
jbe
inc
adc
add
jge
push
mov
mov
lret
cli
push
jne
out
mov
mov
addb
push
faddp
cmp
cltd
mov
adc
shlb
idiv
leave
mov
pushf
mov
cmc
inc
jge
jns
sub
sub
mov
cli
lea
dec
mov
outsb
and
loopne
lret
call
add
out
and
inc
sub
pop
xchg
xor
sarb
dec
nop
sub
inc
inc
jbe
push
popf
out
sbb
shll
pop
push
xchg
jmp
out
push
popf
in
mov
jbe
sub
clc
outsb
rcrl
push
push
mov
insl
daa
cmp
int3
mov
push
dec
jo
xchg
pop
or
xor
in
mov
repz
sub
cmpsb
bswap
mov
stc
dec
repnz
add
js
adc
and
sbb
icebp
pop
cli
ret
out
push
adc
loop
cmovno
xchg
sbb
mov
adc
jmp
add
andb
aad
fstl
enter
adc
hlt
push
stos
repnz
push
adc
and
shlb
jne
movb
mov
movsl
mov
addl
push
repz
loop
rcll
lds
aam
repnz
push
enter
pusha
inc
leave
dec
push
dec
sbb
movsl
mov
xchg
mov
out
adc
dec
outsl
mov
loopne
xchg
imul
cltd
xor
push
popa
or
arpl
jle
cmp
sbb
jo
outsl
jmp
lcall
and
rcrb
xor
inc
insb
jp
lock
in
aaa
mov
mov
fidivrl
test
pop
push
stc
movsl
lret
sbbb
jb
incb
mov
repz
outsb
stc
pop
dec
or
dec
or
fldlg2
movsl
cltd
sbb
sarl
cmp
inc
popf
xor
dec
outsb
loop
js
sbb
and
inc
scas
push
insb
rcll
xlat
inc
add
nop
in
cltd
xchg
mov
nop
lods
dec
repz
adc
xor
xchg
std
pop
sub
inc
call
mov
pusha
mov
add
cmp
cmp
xor
popa
addl
dec
lret
testl
jnp
push
testb
adc
add
out
mov
xor
cmp
mov
sub
inc
pop
dec
push
repz
test
loopne
fcmovnb
aas
pushf
add
dec
movsl
mov
push
iret
pop
je
ds
js
xchg
dec
int3
or
dec
sbb
sub
aad
mov
mov
addr16
pop
scas
inc
pop
test
test
lea
push
jo
mov
jne
and
mov
or
shrl
jl
or
mov
adc
cmp
xor
clc
or
mov
pop
dec
jbe
out
lods
jmp
dec
xchg
and
sbb
dec
stc
mulb
scas
outsb
loop
jae
pop
jne
ds
push
mov
pop
leave
ljmp
pop
inc
inc
sbb
fwait
sub
jnp
jbe
cwtl
ret
jnp
fdivrs
sbb
cmp
adc
add
mov
fwait
dec
lock
out
aas
stos
adcb
add
xor
push
jb
and
pop
and
insl
fldenv
pushl
mov
push
outsl
pushf
shlb
adcb
cwtl
sahf
lods
or
loopne
push
call
shrl
mov
test
jmp
pusha
sbb
sub
leave
popf
add
jmp
js
daa
pushf
mov
inc
mov
pushf
lods
popa
xor
xchg
jecxz
je
sub
hlt
jbe
sti
pop
push
dec
repnz
cmp
outsl
inc
push
stos
scas
mov
sub
movsb
fistps
dec
pop
adc
fwait
mov
sbb
xor
je
mov
cmp
popf
mov
loop
decb
popa
xor
jle
adc
xor
jne
mov
xor
mov
mov
int3
mov
xchg
std
jne
and
or
xchg
and
int
pop
and
add
in
pop
wbinvd
cwtl
fldt
movsb
imul
popa
fildl
arpl
jle
mov
je
jno
es
not
out
cmc
xor
inc
dec
or
jmp
cltd
xlat
dec
das
mov
imulb
gs
icebp
or
flds
sbb
cwtl
push
mov
addl
sub
pop
loope
sbb
push
lods
xchg
dec
adc
int3
xchg
and
popa
mov
ret
lcall
popf
aam
out
sar
cmp
mov
pop
mov
lret
add
pop
adc
push
scas
stos
imulb
fldcw
imul
sbbb
mov
adc
loope
inc
dec
jns
or
repnz
ja
xchg
pop
lret
repnz
icebp
jns
fsubs
ds
jge
sbb
add
stc
push
adc
pop
jecxz
roll
mov
xor
es
data16
clc
adc
lea
jbe
aam
cmpsb
sub
lods
mov
aaa
jae
push
xchg
icebp
jne
scas
fldenv
scas
push
push
sub
jne
fstps
xchg
scas
sub
scas
andl
subl
mov
pusha
inc
test
lods
sbb
in
fiaddl
rorl
leave
out
ss
push
imul
adc
push
push
xchg
pop
fucompp
movsl
or
bound
inc
scas
fwait
and
loop
clc
sahf
xor
sub
cmc
orl
cmp
xchg
loope
flds
and
fnstcw
lret
sahf
or
sbb
sub
adc
xchg
xor
xor
xchg
jbe
jno
sub
inc
inc
mov
or
or
pop
loop
bound
test
aad
mov
in
lret
movsb
outsl
ja
mov
cltd
in
clc
lea
xchg
adc
ljmp
add
jno
push
in
daa
pushf
jl
dec
dec
xor
les
sbb
lret
repnz
scas
ss
sbb
or
cs
fs
fwait
push
inc
dec
adc
xor
out
add
mov
movl
test
clc
je
pop
rolb
jne
inc
les
icebp
dec
jb
and
pusha
mov
mov
cmp
int3
daa
pop
jle
aam
mov
shlb
mov
jmp
mov
mov
push
ret
dec
xchg
pop
outsb
pop
push
fs
xlat
mov
insb
mov
adc
popf
rorb
mov
aaa
loope
jae
addl
repnz
ja
dec
sub
fwait
jecxz
leave
mov
js
xor
call
ss
dec
mov
or
int3
push
push
and
mov
xlat
loopne
repz
psubw
xchg
sbb
call
insb
sbb
dec
xchg
xchg
mov
inc
in
push
jg
mov
test
and
xchg
lcall
mov
jg
sbb
push
mov
fldcw
push
gs
dec
gs
icebp
icebp
jnp
push
push
push
daa
roll
inc
dec
or
aas
out
mov
pop
mov
pusha
das
cmp
xchg
sub
sub
lea
lea
imul
mov
iret
and
sub
ret
lock
push
mov
imul
mov
into
sarb
push
out
pop
out
outsb
pop
xchg
inc
sahf
loopne
clc
and
icebp
and
lods
xchg
in
adc
jnp
test
daa
stos
mov
xchg
inc
add
ja
push
or
lods
or
aaa
push
jecxz
lahf
nop
inc
sbb
imul
aam
filds
mov
xlat
or
mov
ss
jno
lcall
hlt
mov
or
or
aaa
xchg
mul
daa
push
popf
or
push
dec
xchg
lahf
dec
fidivrs
pop
jne
dec
mov
jae
inc
sub
sub
mov
mov
lds
or
pop
pop
jo
push
cwtl
stc
dec
movsb
cltd
out
ret
fisttpl
dec
orb
cmc
adc
cmc
out
fwait
inc
imul
shrb
push
loope
out
cmp
inc
fs
push
scas
mov
fldenv
mov
out
xorl
adc
dec
movsl
inc
cltd
xchg
orps
in
xchg
lret
add
or
fisttpll
push
push
dec
idivb
mov
popa
push
lahf
xor
xor
aas
mov
mov
pushf
push
mov
jnp
fidivl
xor
mov
mov
cwtl
jnp
cltd
jle
mov
movsl
mul
lahf
cmpsl
je
adc
rol
dec
adc
pop
pop
repnz
jp
and
xor
mov
and
insb
lds
add
push
jbe
scas
data16
lock
lret
xchg
dec
lahf
negb
sbb
cld
aas
cmc
xor
bts
dec
cmp
and
dec
test
icebp
push
jmp
std
add
sub
nop
jnp
dec
iret
xchg
jp,pt
push
bound
fcomp
push
scas
jle
outsl
call
mov
adc
lds
outsl
ficoml
sub
jle
pop
movsb
cmpsb
sub
mov
bound
jnp
hlt
sub
push
push
rorb
cmp
mov
pusha
xorl
ja
fneni(8087
add
jbe
shr
lcall
mov
xchg
cmp
xchg
cmp
push
xor
sub
cmpsb
sub
inc
dec
xchg
sbbb
aad
dec
inc
sbb
xor
jno
jns
mov
std
fdivl
cmp
out
test
jmp
mov
add
sbb
sarb
pushf
lret
mov
pusha
xchg
dec
sti
inc
sub
pop
andl
xchg
lds
dec
cwtl
xchg
lds
jbe
cld
sub
sub
je
inc
lahf
jbe
pop
mov
mov
dec
sbb
loopne
push
cmpsl
int3
add
push
scas
or
xor
cmpl
lea
int3
fdiv
add
mov
or
pop
pop
fdiv
popa
cli
push
in
int
clc
das
fcmovbe
mov
jae,pt
or
cltd
or
jmp
mov
shlb
aam
pop
mov
incb
stos
aas
pop
inc
loopne
mov
adc
cs
lcall
sub
shll
fidivs
daa
xorb
lods
in
and
jl
inc
lcall
testb
fidivrl
je
lods
enter
pop
in
stc
testl
mov
mov
sti
add
add
mov
cli
push
jle
push
enter
adc
cli
dec
es
ret
repz
pusha
mov
jne
fdivrs
imul
imul
add
xchg
shll
lret
lock
sbb
push
pop
in
adc
mov
xor
cmp
or
jb
push
sahf
pop
pop
add
xchg
jno
arpl
pop
push
addr16
stos
or
and
icebp
mov
add
sub
mov
pusha
rcrl
in
mov
mov
rcrb
mov
outsb
aas
cli
and
mov
or
jecxz
js
adcl
mov
mov
rcrb
sbb
add
bound
push
jmp
or
push
or
mov
cltd
cmpb
pop
sbb
jb
cmc
adc
jle
out
inc
pop
push
sbb
pop
xchg
adc
xor
loope
cli
scas
js
push
nop
add
addr16
cmpb
add
mov
jg
sbb
js
fst
leave
inc
mov
push
inc
dec
lcall
mov
cmpsl
lcall
jl
inc
out
cltd
push
mov
inc
adc
or
adc
je
out
ja
and
stos
pop
bts
inc
mov
lods
jb
xor
cmp
shlb
mov
fwait
pop
lahf
out
xor
jle
leave
xor
mov
mov
adc
rcrb
mov
fcompl
fprem1
lahf
add
pop
int
aas
xor
movsl
jbe
mov
sbb
dec
bound
add
roll
shrb
insb
inc
mov
test
jg
sub
not
dec
mov
push
sti
push
jb
and
outsl
js
shlb
popa
dec
popa
mov
dec
outsl
loope
subl
xchg
and
mov
dec
jns
push
ljmp
cmp
dec
movsl
adc
int3
mov
cmpsl
lock
pop
fsubp
cmp
int
dec
sbb
jl
mov
add
ljmp
xchg
jne
pushw
push
stc
imul
pop
xor
mov
int3
jno
mov
mov
mov
lds
icebp
fsubrl
ret
outsl
sbb
out
mov
andb
loopne
pop
push
stc
cli
cmpsb
inc
cmp
cwtl
insb
loopne
ret
jnp
dec
idivl
movb
push
inc
pop
inc
into
sub
push
jnp
sbb
insl
adc
clc
aas
and
outsb
inc
das
movsl
push
or
into
out
js
mov
or
test
imul
das
push
fwait
shrl
cmp
aas
push
out
js
data16
stc
loop
mov
cmc
stos
cld
pop
shr
push
inc
gs
aas
jg
or
int
not
mov
sbb
leave
imul
dec
mov
out
add
loope
outsb
jp
shr
jbe
mov
fsts
adc
add
sub
pop
in
push
cmp
imul
outsb
xchg
cld
in
pop
inc
clc
insl
xchg
sbb
cmp
cltd
aaa
ret
jmp
fwait
int3
dec
scas
add
loop
insl
push
xchg
addr16
pop
cmp
add
fisubs
mov
lods
aaa
xchg
xorb
push
xchg
jp
dec
mov
lds
outsb
lret
add
scas
es
addr16
repnz
stos
pop
fstpl
lahf
stos
or
ret
incb
mov
loope
int
das
inc
inc
int
shl
inc
les
int3
mov
xor
cmp
jae
add
xlat
jae
xor
js
lock
cli
gs
negl
lea
icebp
shlb
imul
fisubs
xor
js
mov
cmp
enter
xchg
scas
adc
int3
or
sub
add
loop
mov
leave
rorl
mov
repnz
jns
clc
jae
data16
testb
push
or
or
addr16
xor
or
xchg
push
adc
xchg
sbb
mov
pop
or
popf
loop
fiadds
mov
jl
pop
into
jo
and
stc
stc
je
xchg
mov
mov
outsl
push
or
mov
in
sub
sub
adc
shlb
inc
out
jb
add
orl
pop
fimull
sbb
jb
dec
hlt
push
bnd
insb
xchg
xor
pop
lcall
sbbb
mov
jp
nop
or
cmp
push
or
fsub
dec
popf
pop
push
sub
pop
lret
icebp
aaa
into
xchg
ret
inc
pop
adc
and
inc
xchg
push
xor
xor
lahf
sbb
or
push
xchg
push
cmp
orl
and
cmpsl
jecxz
sub
add
jl
mov
jb
cmpsl
fcmovne
in
rclb
outsl
jp
xchg
imul
dec
cli
fdivrp
sub
filds
out
adc
push
add
xor
fisttpll
xchg
fs
add
lret
andl
or
lods
negb
jmp
pop
out
and
push
push
push
repnz
mov
ss
aas
sub
dec
enter
ret
cmpsl
in
dec
dec
imul
pusha
mov
jae
cmc
push
sub
xchg
push
fs
lods
sub
mov
pop
cld
lahf
cmc
xchg
andl
jnp
aaa
xor
repz
pop
dec
push
test
hlt
inc
call
jbe
dec
sub
pop
push
icebp
xor
or
dec
lahf
dec
cmp
mov
ret
cmp
jbe
je
ljmp
decb
movsb
mov
push
fcomp
xchg
push
test
or
ss
sbb
sbb
mov
jp
jno
xor
or
cmp
fst
push
popf
jbe
sahf
mov
test
je
and
popf
xchg
and
dec
and
jo
addl
subl
data16
xchg
je
gs
push
mov
dec
jns
fnsave
fsts
cmpps
nop
insl
int3
sub
test
jl
nop
lods
mov
fdivr
jb
cmpsb
mov
adc
adc
paddsb
insb
lods
sub
mov
mov
test
cmp
mov
rcll
and
repnz
test
scas
sbb
and
mov
or
stos
jne
test
popa
ds
iret
ja
mov
mov
stos
orb
pop
add
sbb
loop
jge
cld
subb
lea
mov
and
adc
bound
xor
mov
push
mov
adc
pop
fmuls
pop
aam
mov
pop
or
ljmp
clc
loop
ret
jl
mov
js
fdivp
push
or
fcomps
xchg
jl
in
or
xchg
mov
stos
push
divl
adc
mov
cli
das
jb
mov
fiadds
and
cmp
xorl
aad
enter
mov
mov
mov
lea
sub
push
xor
xor
fnstenv
sbb
aaa
dec
dec
add
push
shl
lods
fnstcw
pop
mov
cwtl
mov
jmp
lret
sbb
call
sbb
push
mov
add
sub
ja
cmp
pop
xchg
and
push
int
sub
nop
pop
and
sub
adc
cmp
xchg
sub
out
data16
pusha
test
scas
iret
lret
mov
mov
rcll
sbb
lret
xor
xchg
loop
inc
das
scas
sub
out
les
push
pushf
sbb
loop
push
leave
sub
testl
jg
not
insb
add
inc
inc
lret
fwait
pop
call
std
popf
mov
rcr
xor
fsubrl
in
jge
mov
sarb
and
mov
add
fidivs
rorl
inc
sbb
mov
sarl
xor
es
int3
insl
ret
dec
in
mov
mov
xchg
and
jae
mov
mov
les
add
call
dec
xchg
xchg
loope
in
int3
adc
jl
inc
movsb
es
inc
mov
jl
xor
imul
push
shrb
xor
sub
in
dec
fldln2
fidivl
mov
cmp
inc
jg
in
pop
mov
and
lods
arpl
sbb
into
jne
mov
int3
sbb
jb
cli
or
lods
out
leave
cwtl
int
xor
xor
add
sub
mov
in
add
popa
cmp
ja
mov
xchg
pop
pop
int3
lea
dec
icebp
push
movb
lcall
cmpsb
loop
cmpb
imul
jbe
mov
sbb
inc
leave
out
aaa
ja
lahf
mov
push
add
fistpll
jb
ljmp
push
jecxz
pop
roll
mov
mov
jge
push
xchg
stos
popf
add
js
jnp
mov
sbb
testl
ficomps
dec
xchg
std
jmp
in
js
mov
gs
xchg
jb
movsb
xchg
out
data16
or
inc
pop
test
inc
sub
dec
xchg
fnsave
cmc
test
fists
scas
fdivrp
mov
inc
into
push
cs
std
sub
jg
rorl
xchg
mov
jp
jmp
call
or
mov
popf
cmpsb
jae
add
mov
xorb
test
push
rorb
repnz
stos
ljmp
aaa
fs
cld
and
popa
add
or
fildll
sbb
cmp
outsb
push
xor
inc
lods
inc
and
out
fidivs
lret
in
fwait
mov
arpl
fdivs
xor
pushf
dec
iret
roll
mov
in
xchg
and
lods
push
ljmp
inc
and
js
lret
adc
push
data16
push
in
jg
xchg
in
repz
cmp
adc
mov
push
cmp
dec
mov
je
or
push
or
sahf
jge
push
sub
sub
icebp
repz
push
hlt
ret
cld
mov
add
clc
imul
stos
cmpsb
inc
fidivrs
dec
out
fwait
stc
sbb
mov
mov
jecxz
test
loopne
lds
mov
cs
insb
aas
push
mov
or
lds
andl
xor
mov
cmp
mov
mov
xor
mov
lret
and
arpl
ds
pop
cmpsb
lret
push
sub
ficoml
push
mov
enter
push
or
or
cmp
stos
test
mov
inc
outsl
lret
es
enter
push
mov
les
inc
dec
push
pop
aam
push
inc
add
adc
ss
popa
cmpsb
addb
xor
rcrl
jge
out
and
inc
cmp
into
subl
xchg
ds
mov
inc
mov
sub
adc
ja
outsl
leave
fisubl
or
hlt
cld
push
pop
test
push
and
ret
daa
xchg
loop
jb
xorb
dec
push
xchg
ret
jl
mov
out
lea
sahf
mov
in
dec
loope
push
or
sbb
lret
push
mov
sbbw
and
dec
lahf
leave
dec
outsl
out
pop
add
push
sbb
add
jne
mov
fldln2
mov
mov
loope
cmp
mov
lods
mov
sub
jo
ds
add
push
pop
and
iret
mov
clc
nop
cmc
gs
mov
test
aaa
scas
je
cmp
pop
adc
pusha
rorl
mov
vucomiss
dec
loop
adc
imul
clc
push
push
mov
inc
pop
les
in
test
dec
in
push
rcrl
cwtl
pop
sub
push
xchg
pop
or
mov
popa
frstpm(287
xor
incl
cltd
push
mov
cmp
jb
jo
jae
lret
xlat
data16
divb
push
mov
xlat
lcall
xor
into
ja
int
lods
xchg
repnz
fsubl
pushl
repz
lea
leave
shlb
lds
dec
shlb
je
lret
mov
pop
mov
lock
hlt
push
enter
mov
dec
int
and
stos
add
cmp
xor
call
mov
into
sbb
add
jge
mov
add
call
xchg
test
push
gs
testb
movl
adc
inc
adc
gs
cwtl
adc
rorb
inc
mov
les
daa
sub
lock
andb
mov
push
fsubrs
sub
mov
outsl
test
out
cmp
movsl
mov
dec
inc
arpl
sub
test
push
xchg
pop
dec
cmc
adc
cs
movsl
dec
inc
jl
daa
std
lea
adc
push
repz
sbb
jecxz
push
xchg
inc
ja
lods
mov
pop
lahf
cmp
orl
shrl
fs
jecxz
jae
xorb
test
popa
mov
jg
imul
repnz
sbb
sbb
adc
pop
outsb
inc
lock
fbstp
roll
loope
inc
stos
mov
adcl
outsl
je
inc
mov
cmpsb
cmp
xor
les
movsl
inc
pop
sub
cmp
negb
hlt
mov
out
mov
cmpl
ljmp
sbb
addr16
pushf
gs
adc
jge
aad
sub
pop
ja
push
nop
dec
or
xor
push
and
repnz
stc
pusha
and
lods
scas
sysenter
pop
mov
push
lcall
in
push
nop
push
fistpl
dec
ret
incl
in
mov
cs
test
push
mov
hlt
cwtl
sub
aas
repz
loop
jg
lahf
je
xchg
xchg
push
mov
scas
mov
mov
jle
or
test
popf
loop
lahf
or
movsl
clc
mov
cmp
lods
loopne
mov
mov
xlat
push
fisttps
jb
rcl
ret
adc
nop
sub
int3
insl
inc
xchg
push
pop
loopne
push
fimuls
jb
pop
lahf
add
push
imul
sub
push
sbb
out
clc
inc
sahf
das
lret
out
sub
shlb
mov
data16
mov
iret
jb
das
adc
push
or
fxch
aas
push
sarl
push
pop
test
in
push
xor
pop
nop
lds
scas
call
push
idivl
mov
inc
aas
push
cmp
push
or
inc
sti
pop
or
xor
mov
sub
sbb
add
inc
xor
icebp
dec
xchg
jnp
pop
or
pop
push
stos
mov
arpl
sarb
mov
xchg
mov
imul
bound
ret
jnp
mov
xchg
mov
or
push
ss
mov
pop
push
jne
nop
pop
fistps
pop
sub
cmp
push
mov
pop
adc
sbbb
orl
xchg
repnz
push
push
aaa
pop
and
pushf
icebp
jle
out
add
sub
ror
outsl
aas
in
leave
lret
xor
adc
push
and
cltd
push
mov
scas
mov
jb
enter
popf
mov
mov
inc
sub
cmp
sarb
das
xor
stc
inc
push
loop
mov
imulb
in
in
and
xchg
dec
jl
pop
xchg
movsl
mov
push
shl
out
sbb
jl
mov
mov
sbb
cwtl
stos
jg
lods
int3
mov
lock
fimull
ds
out
cmp
aas
push
scas
xchg
cmp
add
test
int3
or
js
iret
popa
push
mov
popa
movsl
xchg
roll
mov
pop
fwait
mov
sbbl
insl
xchg
xchg
nop
dec
xchg
out
jbe
subb
adc
pop
mov
je
push
loope
pop
add
jl
mov
and
inc
and
pop
test
nop
imul
inc
or
jmp
in
push
ret
arpl
mov
xor
into
xchg
aas
pop
sbb
jecxz
scas
fisttpll
add
test
sahf
aas
and
add
cmpsb
notb
cmpsl
in
inc
out
sti
aas
in
lea
and
aaa
sub
shrb
xor
frstor
xor
mov
lds
out
sbb
and
lret
cli
and
popl
js
bound
insl
hlt
insl
in
loopne
fists
inc
enter
or
das
sbb
dec
inc
aad
jecxz
lds
pop
jbe
xor
sbb
leave
xchg
out
ficoml
inc
sbb
push
jp
xchg
inc
push
and
mov
negb
add
mov
push
or
dec
enter
xchg
dec
gs
push
cmp
sub
jg
mov
mov
pusha
pop
or
jbe
addr16
inc
pop
jl
cmpsb
jo
sbb
lea
sti
mov
cmp
push
sbb
shlb
orb
cmp
dec
popa
cld
mov
shrb
in
push
and
xor
stc
movsl
in
and
mov
cmp
xchg
mov
aas
mov
stc
inc
xor
pop
mov
jl
jecxz
pop
xchg
push
aam
add
shrb
cmc
mov
shr
rorb
out
cld
xchg
lods
xchg
add
sbb
lds
and
xchg
push
hlt
ret
das
mov
inc
out
sub
movhps
sbb
xchg
sbb
rorb
and
ja
inc
leave
inc
outsl
movsl
js
lock
xor
add
sar
mov
push
arpl
int3
mov
lods
cwtl
jp
daa
lret
sarl
pusha
xchg
mov
in
movsb
pop
xchg
in
and
mov
lcall
popa
data16
push
idivb
xchg
pusha
out
pop
pop
mov
xor
sbb
xchg
lahf
and
or
lock
mov
daa
mov
lock
dec
jns
in
inc
mov
and
mov
lods
stc
sbb
sub
xor
mov
bound
out
insb
add
xor
and
xor
cmp
je
inc
add
out
xor
aaa
adc
stc
jmp
mov
xchg
mov
xchg
rorb
sub
lock
lods
and
lret
popa
mov
aam
cmp
imul
fisubl
push
shl
ss
ss
dec
je
sti
lret
rcrl
dec
fisubrs
mov
aas
or
add
insb
mov
mov
jp
and
dec
mov
mov
dec
scas
inc
sub
mov
iret
mov
or
push
enter
pop
cmpsb
lea
call
mov
or
inc
pop
dec
ljmp
pop
xchg
inc
jae
jmp
call
es
push
xchg
or
xchg
lret
stos
cmc
sbb
dec
arpl
xchg
or
jl
push
cmp
repnz
add
pop
int
jae
push
fldt
subb
repz
int3
add
mov
movsl
mov
insl
mov
repnz
jnp
xlat
cmp
jl
ja
cmpsl
pop
repnz
sbbl
pop
inc
fdivrl
add
lahf
inc
cmp
das
xlat
stos
xchg
fstpt
cltd
jmp
xor
loopne
jle
push
scas
dec
push
sbb
jae
das
fcom
in
loopne
cmp
nop
sahf
mov
cmp
push
addr16
jecxz
les
inc
sbb
and
push
lods
in
dec
shlb
xor
mov
ja
cmp
lods
xor
fsub
aam
xor
push
cmc
pop
enter
pop
dec
push
ret
imul
loopne
mov
sbb
xlat
mov
mov
test
inc
js
sti
inc
jb
or
aaa
sub
jl
sahf
loopne
call
xchg
outsl
data16
test
orl
fwait
roll
cmp
mov
loopne
sahf
cmp
push
inc
in
inc
loope
cmc
push
fildl
stc
add
std
xor
push
fcomps
adc
inc
test
movsb
xchg
pop
aam
testl
add
adc
xor
or
shl
and
dec
cs
orb
shll
rcrb
jo
pop
add
adc
xor
ss
es
jl
insl
in
pushf
imul
imul
mov
dec
xchg
fists
jecxz
cmpsl
rcrl
test
sub
cmpsb
cmp
mov
push
ja
add
add
stc
jle
jecxz
rclb
mov
pop
push
adc
popa
out
in
decb
cli
sarl
sbb
xor
andb
jp
addl
fmull
mov
inc
pop
je
ret
adc
sbb
das
lret
hlt
push
cli
sbb
xor
aam
ret
in
bound
mov
add
jge
xchg
mov
xchg
int3
add
pop
push
add
add
inc
jp
adc
psllw
aad
clc
or
das
test
fcmovnb
out
fucomp
or
out
jbe
cmp
pushf
outsb
jns
hlt
jmp
fbstp
repz
mov
mov
push
hlt
imull
jbe
jno
xchg
fs
mov
jnp
mov
mov
mov
mov
movsb
sbb
pop
and
ficoml
mov
jb
imul
push
jmp
inc
or
mov
fwait
les
mov
inc
pusha
mov
xor
cltd
inc
mov
test
je
pop
call
sahf
xorl
ret
lret
sub
sbb
mov
add
inc
push
std
test
andl
cmp
loopne
and
mov
lds
and
mov
jb
push
in
add
lcall
jl
sbb
mov
popa
test
xchg
pop
jno
xchg
leave
pop
insb
insl
cli
adc
mov
sub
push
add
lods
xor
imul
cmpsb
inc
cmp
call
int3
lods
dec
mov
dec
dec
jnp
jae
ss
mov
rol
adc
in
test
pop
jle
bound
mov
movsb
fisttps
mov
popf
roll
add
xchg
ss
inc
hlt
dec
sub
inc
lcall
cmp
sti
ficomps
xlat
pop
je
jl
imulb
push
mov
xchg
sub
dec
add
scas
lds
dec
add
test
loopne
pop
lcall
scas
and
lea
out
inc
or
fwait
test
lea
call
roll
mov
sbb
push
fiadds
lahf
or
xor
into
jecxz
loop
pop
dec
sub
jg
ljmp
ficomps
and
jge
repnz
mov
jmp
sbb
rorb
sbb
adc
add
sbb
arpl
fistpll
js
xchg
adc
rcrb
dec
test
sbb
sbb
nop
mov
movsb
nop
test
push
sub
test
adc
stos
inc
dec
push
sub
sub
mov
mov
aas
popa
div
push
out
xchg
cld
push
aam
add
jge
dec
outsb
mov
mov
inc
inc
dec
icebp
das
push
js
andb
insb
pop
mov
xchg
xchg
push
shrb
or
cmp
sti
pop
sti
js
sahf
add
push
aas
int3
xchg
das
mov
pop
lret
or
out
arpl
lods
add
lds
ret
sbb
adc
test
sarb
inc
xchg
or
and
mov
stos
mov
lock
push
sub
insb
gs
sarb
js
mov
insb
mov
xor
insl
ret
dec
sub
or
cmp
add
cmc
push
int
mov
xchg
jge
sub
aam
push
cmp
mov
mov
xchg
imul
dec
mul
lods
jmp
and
sahf
mov
or
mov
mov
mov
ljmp
jno
push
sbb
iret
mov
dec
add
ds
repz
rol
imul
dec
adc
mov
stc
popf
cmp
inc
pop
pop
inc
in
mov
pusha
daa
mov
mov
test
fistps
les
jno
jl
out
lcall
pop
sub
jb
push
in
repnz
stc
ss
mov
mov
lock
inc
das
pop
or
push
mov
xchg
pop
ret
cld
pop
test
cwtl
push
test
mov
lods
inc
movsl
jns
mov
jo
outsb
test
lahf
lods
test
jno
test
bound
xor
loope
pop
negl
and
shl
int3
add
xchg
or
lds
adc
test
aam
je
push
mov
lods
push
hlt
ljmp
scas
int3
mov
lds
adc
outsb
adc
pop
push
mov
rol
repz
cmp
mov
lds
dec
jmp
insl
roll
bound
mov
cmc
xchg
mov
shr
out
lea
mov
jecxz
lods
imul
sub
sbb
out
jbe
inc
ficompl
pop
and
cmp
and
pusha
inc
push
fwait
lret
repz
dec
jle
das
insb
xlat
mov
sbb
cmpsl
iret
xchg
jecxz
pop
pusha
nop
or
dec
addr16
mov
pop
popa
imul
dec
mov
addr16
fimuls
xor
lcall
aad
pop
jmp
pop
lods
lcall
or
nop
jecxz
iret
xchg
fisttpl
sub
xchg
repnz
push
xlat
inc
cli
call
testl
pop
es
pop
ficompl
rclb
mov
pusha
dec
call
lret
sbb
in
jge
push
aad
scas
in
outsl
sub
mov
in
push
aas
sbb
out
xor
pop
mov
push
or
out
xchg
bound
ss
fstpl
jmp
mov
and
ja
sbbb
movsb
fs
dec
arpl
push
xchg
xchg
in
xor
push
sahf
sahf
aas
sbb
int3
imul
xchg
mov
jo
mov
ds
outsb
aam
mov
je
push
in
test
add
sbb
mov
lock
mov
aam
or
rorb
pop
cmp
and
filds
xor
mov
sar
mov
sub
xchg
arpl
insb
add
inc
and
pushf
loopne
cmp
jb
push
inc
daa
inc
jo
sbb
dec
int
xor
gs
imul
aas
and
or
data16
push
jp
dec
cmp
inc
int3
in
cmp
sbb
test
ret
mov
call
pop
xchg
xchg
sarl
test
mulb
inc
sub
pop
and
inc
sbb
int
and
int
add
iret
out
push
lods
fcmovne
pop
cmp
int
push
bound
out
jl
aaa
mov
push
pop
std
cmp
jg
inc
insl
or
xchg
or
movsl
mov
pop
in
sub
pop
sub
xchg
push
scas
out
push
mov
push
neg
xor
das
dec
mov
inc
mov
dec
lahf
hlt
stos
scas
pop
repnz
outsl
mov
pop
push
frstor
mov
lahf
pop
xor
mull
mov
add
pop
xchg
ds
pushf
ja
cli
pop
fdivrl
sub
jg
inc
ret
dec
xchg
mov
sub
das
cs
call
sub
cmp
aas
cmp
aas
push
imul
movsb
fwait
jb
ror
js
push
sub
sub
dec
cmp
sbb
push
jae
aad
add
ret
jg
push
dec
xchg
push
out
rol
sahf
sbb
mov
stos
jl
movsl
pushf
shrb
ret
adc
fisubrl
sub
sub
test
shl
push
iret
sub
mov
pop
das
sbb
mov
sbb
xor
cmpsb
lods
pop
and
inc
test
jmp
sub
xchg
mov
cmp
cltd
outsl
mov
clc
in
push
mov
icebp
pop
rorl
lock
cmpsl
sub
int
mov
and
jle
js
sub
fdivrs
out
sub
push
add
pop
sbb
into
pop
add
arpl
mov
ljmp
mov
je
repz
in
xchg
inc
xchg
cld
int
das
test
shll
and
addr16
popf
jo
in
pop
in
pop
ret
and
pop
jne
cmp
je
ljmp
pop
sbb
call
and
adcl
jne
leave
cmp
xchg
test
lcall
stc
mov
dec
add
mov
push
daa
dec
fdivr
mov
adc
sbb
popf
mov
sbb
push
sarl
movsl
repz
jb
sbb
out
icebp
and
cmp
sub
mov
jmp
cs
idivl
aad
cld
test
mov
mov
fcoms
movsl
out
inc
rcrb
jge
aas
mov
clc
aas
ret
cmpl
or
in
pop
adc
insl
je
inc
adc
push
rcrl
cmp
fadds
in
sub
add
aad
jmp
test
jecxz
mov
add
jae
xchg
cmp
js
mov
push
fiaddl
int
pop
add
mov
cmp
testl
xchg
fiaddl
stc
xchg
out
xchg
push
pop
mov
ficompl
pop
adc
arpl
clc
dec
andl
bound
idivl
xor
dec
adc
cld
mov
ljmp
inc
dec
out
dec
faddl
test
imul
icebp
cmpsb
adcl
adc
pop
push
sub
mov
sbb
xorb
mov
fldl
daa
repnz
lock
mov
pop
aaa
or
fildll
xchg
adc
xor
popl
add
inc
icebp
pusha
pop
mov
rcrb
cmp
cwtl
icebp
mov
cmc
dec
mov
mov
insb
mov
ret
daa
and
mov
dec
xchg
sti
mov
fidivs
es
jne
test
push
sbb
and
sub
cmp
iret
inc
hlt
js
or
stos
xor
ja
xor
lock
out
inc
das
loopne
bound
ret
and
add
cli
adc
mov
sub
popf
les
pop
adc
xor
lock
das
leave
scas
stos
aam
ficompl
pop
cmp
push
xchg
add
mov
mov
aaa
sub
inc
mov
mov
js
and
sub
sub
mov
jnp
inc
sti
test
jb
mov
dec
adc
mov
lds
xchg
mov
inc
mov
inc
push
xchg
scas
push
or
push
das
andl
pushf
inc
clc
mov
push
femms
sub
jmp
stos
dec
xchg
popa
add
push
dec
stos
insl
sub
das
cld
imul
xchg
push
shlb
add
lret
jbe
inc
inc
ret
pop
dec
stc
and
clc
imul
push
pop
addr16
lret
div
inc
sub
mov
mov
outsb
jl
mov
adc
fists
mov
cmpsl
mov
faddp
into
and
jae
or
pop
cmp
jbe
mov
fbld
inc
mov
ss
pop
pop
hlt
daa
jp
inc
sub
insl
xchg
lods
jg
pop
or
cmp
mov
push
inc
stc
cmpsb
push
or
fildll
mov
inc
fbstp
aaa
ljmp
repz
iret
xor
mov
mov
sub
adc
clc
pop
ljmp
into
inc
aaa
cmc
cmp
repz
sbb
push
das
in
mov
outsl
pop
and
push
dec
test
xor
movsl
cld
inc
push
adc
ds
xor
sbb
fstpt
ret
mov
cmp
jnp
cmpsl
clc
movsb
sbb
mov
gs
test
push
mov
mov
sub
sbb
scas
sahf
sbb
shrb
xor
and
xchg
dec
imul
in
imul
mov
jae
lods
push
mov
sbbl
mov
sti
mov
test
out
adc
test
jecxz
jle
sti
xchg
mov
ret
shrb
decb
into
inc
xchg
and
inc
xor
mov
imul
es
xchg
pop
pop
jecxz
dec
in
mov
stos
push
push
fst
mov
popl
or
ja
gs
push
cmp
xor
fnstenv
out
data16
aas
add
and
aam
in
lods
and
rorb
test
test
scas
cs
pop
das
cmc
lcall
add
adc
test
ds
sub
dec
and
xchg
int
das
mov
bound
mull
mov
mov
shlb
pop
mov
mov
int3
pop
fsubrl
lods
cltd
movsb
into
lods
loop
out
shl
xor
stos
xchg
mov
sub
cli
repnz
std
idivl
popa
iret
mov
mov
dec
insl
mov
mov
pusha
lcall
outsb
xor
test
mov
stos
pop
xchg
test
and
lds
fbld
bound
xchg
mov
or
sub
std
push
or
jbe
lret
gs
mov
loope
or
icebp
test
sbb
jne
call
dec
cmp
shlb
ss
lds
test
push
xor
inc
pop
mov
inc
dec
xor
fucomi
pop
out
jp
dec
iret
xor
les
sbb
int3
xor
or
out
ds
fisubrs
ret
pop
int
lock
cmpsl
xor
push
sbb
cmp
xchg
clc
nop
mov
rorl
cmp
repnz
int3
inc
pusha
pop
cld
lock
adc
cmp
imul
jl
and
gs
jo
scas
lock
sub
mov
je
mov
xor
jnp
adc
daa
ljmp
aad
in
push
add
xor
xchg
adc
xor
inc
ficoml
xor
and
ds
call
pop
testl
fwait
js
lret
pop
mov
or
sbb
xor
xchg
jne
dec
stos
xchg
xchg
cmp
rcll
cmpsl
insb
xchg
repz
adc
jp
and
lret
jno
xor
adc
imul
addl
mov
mov
jnp
jbe
fiaddl
lods
xor
mov
jl
lea
lret
cmp
shl
xchg
enter
pop
daa
mov
pushf
test
nop
imul
cld
into
scas
leave
mov
or
lds
inc
push
pop
mov
adc
xchg
leave
pop
push
clc
into
jmp
mov
xchg
mov
icebp
mov
fstps
xchg
push
stc
es
and
lock
sahf
ss
mov
in
push
or
pop
pusha
ljmp
cli
inc
inc
cmpsl
int
adc
out
sarb
mov
add
imul
cmp
or
iret
mov
into
xchg
nop
mov
xchg
ret
mov
inc
dec
movsb
cmp
fldt
movsb
cltd
push
push
repz
xbegin
ffree
scas
arpl
inc
inc
jbe
mov
dec
dec
clc
or
test
dec
subb
sub
stos
insl
mov
mov
xor
push
mov
inc
cmp
mov
movsl
repz
pushf
mov
lret
rorb
or
push
mov
jmp
mov
je
xor
add
adc
fs
adc
push
mov
xchg
pop
int3
gs
xor
push
stos
mov
dec
adc
inc
cmp
mov
pushf
jecxz
lahf
mov
lods
mov
and
sbbl
mov
mov
xchg
sahf
outsl
dec
mov
or
negl
push
loop
cmpsb
loopne
and
cwtl
dec
scas
dec
out
dec
jo
aam
cmp
bnd
ja
fcomip
xchg
stc
pushf
ss
mov
shll
mov
mov
sub
fld
xor
ljmp
iret
shll
jae
and
mov
cmovns
push
dec
mov
mov
out
outsb
imul
movsl
in
cmp
xchg
xor
xchg
dec
jmp
inc
jecxz
repz
ret
jno
in
xchg
cmp
outsl
push
push
data16
cmp
jb
ret
pushf
sub
and
and
dec
repnz
inc
jl
push
movsb
pop
adc
sub
jmp
cld
sub
inc
or
enter
xor
adc
imul
xor
int3
outsl
scas
add
inc
les
or
je
push
pop
push
cwtl
ret
insl
cmp
xchg
jl
push
push
lock
jae
xchg
scas
mov
shlb
xchg
mov
popa
std
adc
movl
call
outsb
idiv
fwait
test
mov
insl
add
cmc
rolb
pop
icebp
cmp
xchg
xchg
mov
mov
repnz
mov
cmp
pop
je
mov
in
xchg
imul
xor
jl
jb
mov
add
cmp
stos
mov
push
or
mov
jne
sbb
push
mov
push
add
add
out
ja
sub
movsl
loopne
dec
lea
popa
and
pop
pop
test
push
je
movsb
sbb
mov
push
push
fldenv
mov
out
xorl
xor
je
stos
adc
addb
movsb
inc
in
xchg
es
add
dec
cmpsb
ss
or
sbb
cmp
push
shlb
aam
pop
lahf
xchg
fsubl
mov
fistl
mov
or
out
lea
mov
xor
in
out
stos
push
lret
sbb
insb
adc
aam
lods
mov
out
shl
hlt
push
cwtl
scas
clc
decl
subb
cmp
mov
and
and
xor
mov
sbb
imul
pop
xlat
gs
incl
push
in
in
and
fs
test
xor
into
js
mov
xor
sahf
out
lods
out
gs
loop
mov
add
push
sub
push
aam
xor
add
orl
dec
mov
xchg
movsl
xorb
ficomps
or
ljmp
sub
add
push
rcl
mov
pop
sbb
mov
xor
lds
gs
aas
cmc
loope
inc
mov
loop
fs
or
xor
dec
and
cmc
out
int3
dec
mov
sahf
sbb
lret
lods
mov
or
je
adc
cld
loope
ss
fisubs
pop
js
cmp
mov
sahf
and
popa
das
jle
jl
dec
and
mov
inc
or
xchg
pushf
aas
ljmp
pop
popf
sub
mov
out
pop
lea
cmpsl
dec
andl
sbb
xorl
mov
int3
pop
stos
push
mov
movb
mov
popa
jl
jb
pop
aam
adc
mov
and
jne
aas
inc
ljmp
jge
int3
add
cmpsb
mov
imul
test
mov
dec
cmp
andb
repz
xor
scas
fidivl
xor
insb
inc
cli
cltd
aad
aad
jg
fwait
pop
fdivr
pop
pushfw
xchg
nop
add
fxch
and
mov
xchg
xor
cli
jb
cltd
aaa
cli
imul
and
ljmp
inc
jnp
xor
sarl
or
inc
lret
pop
pop
mov
shr
and
mov
dec
cmp
mov
xchg
mov
fwait
clc
adc
out
mov
add
scas
cwtl
hlt
inc
or
addr16
or
push
ret
addb
fildl
cmp
inc
loop
lcall
mov
fwait
iret
daa
and
jnp
jp
lcall
inc
push
pop
xor
mov
rcll
into
ss
sbb
xchg
test
iret
pop
xchg
in
test
xchg
jae
cwtl
and
xchg
or
dec
cs
xchg
cmp
or
bndldx
add
inc
jo
loop
pop
adc
push
cmpsb
xorl
xchg
scas
js
mov
xchg
mov
jecxz
sub
js
xchg
sub
ret
cltd
pop
xor
je
int3
shll
das
xchg
test
enter
mov
sahf
xchg
cwtl
insl
js
fldcw
and
pop
xchg
inc
aaa
dec
shl
mov
out
xchg
pop
ds
push
push
push
lock
movsb
leave
lds
push
outsl
cwtl
dec
xchg
and
rolb
pop
shrl
sub
aad
xchg
or
inc
clc
sub
lods
int3
lcall
sub
lret
lea
lods
icebp
fldenv
test
gs
xor
mov
test
ljmp
jbe
cmc
xchg
adc
push
cmp
inc
sbb
xchg
inc
popfw
and
and
lea
push
xchg
sub
mov
lret
pop
rorb
push
addr16
stos
push
clc
insb
pop
ret
cmpl
aas
push
add
js
dec
mov
test
lcall
in
stos
xchg
outsl
stos
sbb
cmc
popa
call
cmc
inc
push
in
insb
push
inc
jae
xchg
repnz
xchg
add
adc
dec
iret
ds
dec
sub
nop
sbb
out
int3
bound
jecxz,pt
fldcw
insb
adc
loop
cmp
cs
cmpsl
push
scas
js
or
sbb
push
test
adc
jp
pop
pusha
repnz
sbb
xorb
cmp
mov
mov
add
mov
adc
rol
es
push
adc
sub
jnp
addr16
sbb
shlb
call
repz
dec
sub
enter
fs
cmc
push
je
ja
dec
popa
xchg
or
mov
rorb
mov
jge
mov
ficomps
aaa
into
int
pop
xchg
mov
dec
out
jmp
addb
mov
dec
inc
xchg
mov
mov
pusha
outsb
sarb
push
xor
xchg
xchg
test
mov
ljmp
dec
xlat
stos
jg
loope
sub
bound
inc
inc
fstps
sub
pushf
xorb
xchg
test
andb
adc
and
and
mov
loop
rorb
inc
fldcw
stos
adc
mov
jo
push
imul
mov
movsl
pop
test
cwtl
jo
jno
ljmp
int3
pop
aas
lret
xchg
fsubrs
std
lods
movsl
inc
pop
jg
adcb
mov
xor
outsb
nop
inc
lds
sbb
nop
mov
adc
imul
mov
add
dec
inc
in
ret
cltd
repz
sub
jmp
popa
xchg
cmp
xor
or
mov
cmp
push
fisubs
push
sbb
and
dec
sbb
push
inc
cmp
imul
adc
push
cmp
ljmp
jle
sbb
into
mov
fdivrl
mov
sbb
sbb
faddl
aam
rolb
sub
xor
pop
mov
stos
cltd
stos
ret
mov
js
paddq
dec
jbe
xor
icebp
add
or
pop
int
sub
pop
cmp
stc
push
mov
adc
inc
std
paddb
mov
xchg
ficomps
cmp
push
outsl
sub
jbe
mov
es
mov
fisttpll
popa
jbe
mov
rcrb
clc
pushw
and
mov
pusha
push
inc
movsb
push
dec
in
cmpsl
mov
jecxz
mov
fistpl
pusha
lea
rcrl
addr16
pop
jg
push
inc
insb
aaa
xor
mov
fdivl
out
test
aas
mov
and
in
insb
decb
jge
outsl
push
test
jo
push
sub
push
adc
iret
jecxz
sub
mov
mov
add
in
cli
pop
cmp
bnd
lahf
enter
inc
cwtl
stos
shrb
not
iret
testl
rol
jp
dec
jmp
pop
push
movl
and
loopne
shll
xor
xchg
mull
xchg
dec
lcall
jmp
loopne
ja
pop
fs
cmp
mov
movl
int3
sub
add
lea
push
ret
cmp
popf
and
mov
mov
scas
push
and
mov
and
xor
iret
pop
pop
scas
adc
insb
aad
aas
xchg
sbb
leave
inc
into
pop
ret
adc
xchg
out
push
adcb
rorb
test
orl
adc
insb
fwait
xchg
cmp
xchg
scas
lret
pop
loope
in
mov
mov
pop
jbe
pop
inc
fstpt
das
push
jecxz
cmp
lods
add
cmp
dec
fcoml
dec
sub
cmp
cmp
cmpsl
cmp
nop
inc
mov
sub
leave
insb
cmp
int
insl
add
mov
adc
mov
into
push
test
xchg
cmc
push
pusha
mov
lods
jmp
inc
nop
pop
test
and
dec
or
jp
pop
gs
pop
cmp
push
sub
iret
lcall
in
into
jnp
cmp
shlb
mov
push
loopne
in
sahf
jo
leave
sub
sub
push
push
push
jnp
or
jge
add
sbb
ljmp
pop
icebp
rcll
fsts
jne
pusha
outsl
xor
repz
test
movsl
repz
rol
cmp
stc
ret
inc
xor
clc
cli
mov
lea
jbe
mov
pusha
cwtl
push
sahf
cld
call
push
int3
daa
mov
in
mov
dec
mov
lret
movsl
out
cmp
push
sbb
les
inc
mov
adcb
push
ljmp
jp
sub
scas
jns
xor
cmp
call
sub
popf
lock
push
ret
inc
fistps
mov
and
inc
mov
mov
fdiv
movsl
cmpsb
push
and
movsb
push
mov
movsb
cs
or
jge
mov
fwait
dec
aaa
jb
cs
rcrl
outsl
dec
sbb
iret
je
pusha
mov
cmpsb
add
shl
push
xchg
dec
sbb
cmp
pop
repz
enter
loopne
aam
jnp
movsb
sti
lods
aam
ja
inc
in
cltd
insl
cs
insl
jne
adc
js
testb
cmp
jge
fcmovb
movsb
out
push
jp
das
aas
or
mov
mov
mov
cmp
cmpsl
loope
shlb
ljmp
mov
popa
add
inc
push
or
incl
mov
mov
lods
pop
or
stos
dec
or
fdivr
lds
add
adc
add
mov
test
out
xchg
lea
pop
or
jb
sti
cmp
xor
bnd
add
push
pop
push
cmp
push
push
mov
in
das
icebp
xlat
xor
add
inc
movsb
ds
or
call
iret
and
cmp
jbe
loope
lods
andl
xor
xchg
mov
jmp
add
and
mov
pop
push
dec
jl
push
and
jmp
int
mov
dec
xchg
push
addr16
add
outsl
push
add
add
inc
out
cmp
mov
addr16
lods
inc
enter
adc
mov
sub
shl
and
mov
and
mov
push
fstpl
stos
sub
or
or
pop
dec
mov
adc
jnp
jmp
sarl
pop
xlat
test
scas
scas
mov
rcll
pop
lret
aaa
mov
jo
xor
mov
ja
sbb
pusha
loop
add
rcll
les
push
shl
mov
mov
mov
mul
out
aas
in
cmp
sub
sbb
int3
jnp
sbb
sbb
cwtl
stos
push
rclb
jl
out
mov
and
mov
les
xor
scas
in
call
add
cwtl
mov
dec
imul
xchg
mulb
inc
or
adc
rolb
sahf
jmp
xchg
jns
sub
aam
xlat
or
inc
mov
add
pop
mov
dec
cltd
ds
imul
imul
jp
popf
repz
dec
es
inc
xchg
push
add
push
stos
outsl
je
ja
mov
push
je
sbb
adc
sbb
das
iret
in
out
jns
mov
mov
xor
scas
pop
push
sub
cmp
ret
lods
push
mov
cmpsl
xchg
out
jl
out
out
sub
movaps
test
mov
mov
sbbl
inc
cmp
mov
jb
das
cmp
pop
jecxz
in
xor
es
clc
and
xchg
jle
jecxz
mov
sub
inc
jno
dec
rcrl
add
cli
fisttps
jecxz
scas
inc
add
hlt
push
outsl
jl
add
pop
jne
inc
sbb
dec
mov
push
cmp
jno
aas
stos
out
hlt
bound
pop
mov
push
or
sbb
aam
or
jge
add
imul
dec
push
sbb
dec
adc
repnz
pop
mov
popa
aaa
mov
xor
fwait
pusha
mov
mov
movsl
and
rorl
subl
add
rcll
ljmp
add
sbb
aad
loope
mov
aaa
lds
jo
cmp
xor
fidivrl
dec
xor
pop
push
stos
or
or
lret
sbb
out
mov
ja
add
or
adc
in
movsl
jge
xor
or
mov
inc
iret
in
mov
jecxz
daa
sahf
lods
add
mov
std
insb
outsb
aam
cmp
scas
notl
adc
push
push
inc
sbb
daa
out
mov
jb
cmp
aad
jo
sbb
nop
daa
and
mov
hlt
and
arpl
and
push
xchg
and
fidivrs
loop
pop
inc
sub
mov
xor
mov
rol
daa
ds
xchg
das
add
mov
sbb
in
sahf
cmpsb
pusha
cmp
pop
pop
sbb
arpl
divb
fisttpll
fwait
sbb
lea
push
je
mov
hlt
shll
push
sub
shlb
mov
daa
shlb
add
mov
inc
ficoml
xchg
sbbb
push
aaa
lahf
in
sub
mov
push
outsb
fdecstp
notb
fs
cmpsl
cld
push
shrb
insb
push
fildl
sub
xchg
mov
xchg
add
dec
shl
cmp
in
push
scas
mov
xlat
pop
pop
adc
testl
shll
xchg
lcall
xor
xlat
xchg
add
xlat
scas
lods
pusha
push
daa
gs
popf
arpl
arpl
cs
sarb
fcoml
out
push
int
xchg
int
or
test
dec
mov
sti
fdivl
jbe
push
loope
fsubs
mov
dec
sbb
cs
roll
sbb
pop
mov
push
sbb
xchg
cwtl
and
fisttpl
push
jg
xchg
iret
loop
xchg
cmp
xor
add
test
addb
adc
pop
out
lretw
aad
adc
pop
jns
or
imul
xor
pop
mov
aam
sahf
cmp
out
leave
out
js
or
jo
push
leave
call
pop
loope
xor
cld
push
dec
lods
stc
and
mov
cli
pop
push
pop
div
push
cmp
lahf
pop
cld
popa
sub
mov
mov
fcoml
mov
mov
addb
or
cmp
in
xchg
sub
sub
cld
push
or
enter
or
ficoml
mov
dec
push
movsb
jae
cmc
sub
fcoms
mov
push
inc
stos
sbb
roll
mov
mov
sub
fs
inc
adc
or
sub
decl
or
fdivl
mov
or
add
jno
fstpt
iret
add
pushf
xchg
add
insl
jmp
cmpb
cmp
push
fldenv
pop
jp
popa
fmull
sahf
pusha
iret
dec
sbb
in
sti
add
ds
push
test
jb
push
xchg
cmp
mov
xchg
and
mov
cmp
out
mov
pop
insb
popa
or
push
adc
pmaxsw
or
es
fisttpl
xchg
add
mov
std
insl
xchg
dec
dec
jle
add
popf
inc
xchg
inc
sahf
stos
sbbl
add
hlt
clc
inc
orl
jecxz
pop
insl
inc
shll
jge
test
cli
lds
dec
mov
andl
outsb
movsb
repz
imul
inc
sbb
cmpb
int
aaa
andl
fidivrl
mov
xor
mov
jg
jecxz
cld
cmp
pop
dec
and
fists
sub
xor
xchg
fimull
mov
nop
inc
push
xor
js
mov
pop
xchg
dec
adc
aas
adc
test
xor
stos
enter
cmp
push
lock
aaa
std
xlat
aam
sub
movsl
leave
jae
aas
testb
mov
rcrl
mov
ret
jle
inc
ret
lcall
test
push
in
mov
mov
sarb
push
dec
fldt
loop
and
insl
add
fsub
mov
inc
outsb
and
dec
pop
int
sahf
xchg
push
mov
and
jle
sub
jg
jnp
test
scas
xchg
inc
in
in
popf
cmp
xor
jnp
or
jg
test
iret
ja
and
and
dec
rolb
ds
cs
dec
ljmp
cli
sahf
sub
mov
jg
mov
movsb
xchg
jno
iret
mov
sub
adc
sub
or
xor
fldt
add
ja
cs
test
iret
jnp
enter
movb
jg
out
jne
dec
jnp
in
jmp
xchg
or
add
lret
sub
scas
sub
jnp
lods
jg
push
mov
mov
lret
fdivrl
pusha
mov
dec
xor
dec
pop
pop
out
pop
std
pop
les
test
mov
xorl
push
jge
mov
clc
lret
sti
cmp
je
pop
addl
xchg
adc
adc
xchg
jge
mov
adc
pop
aad
push
mov
lock
pop
fstl
mov
sub
cmp
call
dec
sbb
ret
mov
adc
enter
push
dec
fwait
into
and
push
jo
roll
addr16
push
sbb
sbb
push
loopne
es
lcall
and
int
lret
daa
std
or
xchg
or
mov
jnp
mov
xchg
inc
xchg
imul
pop
xchg
add
sar
or
mov
outsb
repz
add
add
leave
xorb
mov
out
or
es
pop
cmp
in
jne
cwtl
out
mov
mov
jno
sub
mov
inc
imul
lds
add
xor
movsb
and
or
pushf
mov
fisttpl
push
inc
in
or
test
sbb
loopne
xchg
sub
testb
or
adc
mov
sub
mov
clc
mov
dec
pop
and
mov
repnz
sbb
lcall
jmp
push
sbb
jno
or
jl
sbb
pop
mov
adc
mov
dec
daa
cmp
push
push
mov
test
mov
mov
or
stos
mov
test
cmp
inc
add
out
inc
or
push
mov
add
cmp
sbb
or
lea
fbstp
pop
popa
mov
fistpl
iret
xor
xchg
push
pop
ret
mov
jmp
rcr
jmp
xor
jb,pt
inc
inc
int3
addl
mov
push
jbe
pusha
xlat
and
mov
fcomip
and
fisubrl
mov
iret
cmp
and
or
xchg
sbb
call
adc
aas
sahf
sahf
stos
ds
dec
stos
movsl
dec
clc
ds
repz
les
cmp
push
and
mov
sti
mov
sub
add
jmp
jae
mov
jle
sahf
aam
and
sub
out
pop
inc
mov
xchg
xchg
loopne
adc
xor
sti
arpl
add
xchg
popa
mov
pop
mov
pushf
stos
ficoml
iret
loopne
mov
outsl
stos
imul
leave
xor
pop
cmp
lret
jnp
add
fmul
xchg
push
add
fs
arpl
lcall
fs
push
xor
test
icebp
data16
cmp
loopne
rcrl
sbb
cmp
in
or
mov
ss
jae
jo
sahf
lahf
push
pop
into
xchg
mov
and
mov
add
nop
pop
xchg
arpl
jp
cmpsl
pop
push
pop
test
and
out
subl
dec
imul
adc
fwait
cmp
sub
test
jl
fcmovnu
and
shrb
ljmp
lahf
ss
pop
sahf
push
and
out
gs
dec
mov
push
mov
ljmp
jmp
mov
add
mov
fst
jle
mov
and
xor
call
cmp
mov
add
mov
test
mov
sbb
lcall
ret
out
scas
sbb
std
jne
or
mov
jne
dec
jge
pushf
mov
add
cmpsl
inc
xchg
add
mov
cltd
xchg
or
cmp
lock
fimuls
call
sbb
pusha
cmp
and
inc
xchg
adc
outsb
cli
cld
clc
add
mov
mov
in
popa
out
cs
jl
add
sbb
mov
add
andb
in
adc
push
nop
daa
xlat
inc
sbb
push
shll
fwait
push
pop
mov
or
jbe
cmp
fildl
lods
lcall
and
mov
pop
sbb
add
xchg
push
mov
test
cwtl
idivl
fists
sbb
aam
mov
repnz
mov
xchg
test
push
mov
outsb
daa
xchg
hlt
ss
fdivr
daa
shll
jp
imul
fsincos
das
mov
test
pop
outsl
adc
sti
testl
cmp
icebp
pop
xor
pop
mov
jo
sbb
cli
or
fildll
inc
ss
int3
insb
stos
lds
orb
cmp
xor
cltd
outsb
out
jmp
pop
hlt
xor
mov
mov
pop
or
push
shl
popf
clc
jo
aaa
out
in
sub
pop
xlat
jnp
testl
aaa
mov
cmpsl
or
in
sub
ja
push
call
inc
cmp
dec
or
popf
pusha
dec
mov
lret
xchg
mov
fsubrl
or
repnz
stos
in
mov
mov
sub
mov
cld
jl
shll
arpl
mov
fbstp
in
mov
mov
es
mov
popfw
push
push
arpl
mov
push
je
jbe
inc
mov
scas
sbb
adc
dec
push
insb
and
dec
mov
scas
sti
pop
xchg
mov
cmp
xchg
imul
sti
sub
shrb
mov
cmp
mov
rorb
xor
push
fs
mov
pop
xor
dec
sbb
adc
push
ret
inc
leave
into
sti
jbe
or
lock
sub
enter
xor
data16
fwait
pop
es
pop
pop
cmp
ss
mov
jg
jmp
mov
rorb
scas
push
mov
mov
push
add
lock
fildl
arpl
sub
arpl
mov
dec
sbb
out
cmp
mov
pushl
andl
dec
aad
addl
pop
scas
mov
push
mov
test
les
iret
fisubrl
pop
dec
stos
int
xchg
pushf
xchg
lret
loop
lods
add
sbb
int
jle
insl
es
xchg
mov
push
sbb
jp
das
mov
xor
xor
arpl
add
hlt
pop
jnp
xchg
orb
adc
lea
frndint
loope
dec
mov
movsl
dec
sbb
mov
or
hlt
and
xchg
and
xor
inc
mov
inc
mov
cmpsl
out
pushf
jae
pop
pop
mov
loopne
scas
mov
incl
clc
adc
cltd
sub
icebp
jns
push
mov
lds
fcompl
pop
arpl
fistps
in
je
hlt
ja
pop
dec
mov
pop
sbb
mov
dec
or
je
lahf
in
in
shll
xchg
ja
xchg
push
cmp
cmp
push
loop
es
insl
push
and
out
iret
inc
loop
inc
xchg
mov
je
sbb
js
xor
outsb
pop
adc
in
inc
lea
mov
xchg
mov
jecxz
sub
hlt
mov
xor
pop
or
rorl
ja
and
inc
mov
out
cwtl
jg
cli
push
mov
mov
mov
scas
sbb
sub
cmpsb
or
lea
dec
lret
pop
jp
cmp
enter
icebp
sti
dec
cld
jle
movsl
pop
cltd
popa
popl
sbb
hlt
jp
and
out
or
jb
or
lds
cmp
or
dec
sahf
ret
jne
mov
rcll
mov
je
dec
lahf
std
loop
cmp
push
push
mov
mov
mov
outsb
push
sub
xor
addr16
out
mov
and
pop
or
ja
jge
pop
add
jle
push
mov
xlat
sbb
jge
add
inc
or
mov
shlb
sahf
push
cmpsl
in
rol
mov
cmpsb
mov
push
jno
pushf
mov
mov
sub
stos
cmp
inc
test
push
scas
pop
movsl
jge
shll
rcll
adc
ljmp
aas
pop
xchg
data16
neg
jno
inc
es
jp
dec
rclb
sub
mov
loope
jo
jl
insb
out
pop
icebp
add
push
sbb
lret
mov
pop
pushf
xor
loope
dec
add
mov
mov
and
push
mov
scas
mov
rcrl
out
xchg
push
fcompl
and
or
movb
ror
shlb
in
add
lcall
leave
test
mov
ret
push
int
sub
aad
lea
cmpsl
inc
push
adc
cmp
pop
fidivs
pop
loop
cmpsb
movsl
jp
movq
testl
stc
arpl
sahf
out
rolb
or
cmp
dec
jecxz
push
clc
inc
fidivrl
gs
or
pushf
enter
push
inc
sti
jno
callw
cmc
sbb
repnz
mov
xchg
andl
fwait
mov
loop
fsubr
sbb
rorb
fdivs
std
daa
sbb
rcrl
pop
fsub
add
pusha
repnz
stos
aam
popa
and
adc
in
xor
add
pop
inc
shlb
fdivrs
enter
and
sub
test
mov
test
fidivs
push
or
mov
xlat
jmp
dec
adc
add
loop
push
insb
andb
in
pop
fnstcw
fnstsw
ror
sbb
xorl
jge
sbb
xor
bswap
push
jbe
jmp
fs
pop
mov
add
ds
mov
stos
pop
cli
popa
in
shr
sti
pushf
xor
pop
fcomp
pop
data16
push
sti
cmpb
cmp
dec
xchg
xchg
add
gs
pop
js
add
xchg
jmp
push
jns
mov
push
mov
ja
pop
pusha
xor
cmpsl
push
add
rol
inc
inc
in
pop
out
sbb
mov
rclb
jl
mov
arpl
pop
or
fs
test
shlb
lods
shlb
cmp
scas
popf
inc
out
cli
cmpb
jbe
xor
inc
ds
aam
inc
lret
insl
xchg
push
cmp
or
mov
ja
and
scas
xchg
jae
sbb
mov
out
push
addl
je
iret
sti
xchg
pop
sub
push
nop
cmp
mov
cmpsb
sub
in
mov
mov
pop
mov
inc
aam
or
movsb
sbb
jl
push
mulb
jae
dec
adc
dec
and
sub
sub
das
in
pusha
cmp
jecxz
xchg
add
fsubr
dec
lods
add
test
mov
push
shll
scas
into
stos
lea
and
pop
fs
test
or
cmpsb
test
jmp
or
add
gs
leave
je
pop
or
clc
jo
or
mov
jne
bound
test
aas
subl
adc
fldcw
or
pop
fstpt
cmp
sbb
hlt
les
mov
pop
orb
mov
or
or
mov
jmp
in
mov
ljmp
fisttps
lret
jle
sbb
dec
clc
xchg
aad
lret
in
lods
aam
mov
out
stos
mov
stos
pop
sbb
jns
data16
daa
repnz
hlt
jge
dec
imul
shll
mov
xchg
push
lcall
cmpsl
lds
addr16
mov
das
push
xchg
adc
push
jb
stos
xor
or
mov
fldenv
push
dec
pushw
dec
mov
xorl
rcr
aas
push
xor
icebp
icebp
add
lahf
jmp
in
pop
push
mov
in
int3
jo
int
mov
push
repnz
push
push
mov
adc
sub
mov
rcl
sbb
mov
lods
adc
push
push
xchg
aad
sub
mov
lds
gs
jle
lret
cwtl
xor
shrb
dec
xchg
aas
mov
sub
pop
xor
dec
mov
xchg
xor
nop
inc
sbb
mov
cld
mov
sbb
jo
mov
push
fimuls
pop
pop
arpl
sub
or
repnz
scas
rcrb
or
filds
sbb
push
inc
cmp
fsubrs
aaa
leave
mov
shlb
call
movsb
mov
dec
xor
cmpsl
mov
test
and
xchg
cmp
xchg
add
jmp
add
jne
in
lcall
test
mov
xchg
les
mov
mov
mov
popl
mov
mov
mov
rcrl
lock
sbb
test
jae
and
stos
inc
and
repz
mov
mov
mov
mov
push
mov
pop
cmp
and
andb
sbb
fnstenv
mov
data16
jbe
shrl
imul
imul
jmp
cmp
clc
xchg
mov
mov
lock
test
xchg
add
pop
inc
ljmp
std
repz
add
addr16
mov
and
cmc
or
sbb
in
adc
scas
sbb
inc
ret
andb
inc
mov
imul
pop
negl
xchg
shll
scas
lea
inc
in
sbb
clc
push
iret
mov
adc
jg
xchg
pop
fistpll
jno
or
idiv
ja
aam
cwtl
inc
sub
cltd
mov
rorb
outsl
sbb
mov
aaa
adc
pusha
mov
loopne
aad
xor
dec
mov
int
mov
cmp
xadd
or
or
mov
iret
push
inc
dec
out
in
sub
xor
lock
imul
pop
ds
cmp
mov
sub
fbld
mov
sbb
jae
cmp
adc
data16
pop
call
mov
push
rcr
sbb
sbbb
aad
or
jb
addr16
xchg
jns
mov
loopne
sahf
lcall
or
in
jmp
orb
or
int3
jp
bound
mov
fcmovnb
clc
mov
inc
out
loopne
sub
or
data16
cli
cmp
mov
sbb
aam
rorl
push
sub
sbb
iret
loopne
add
loope
ficompl
add
mov
cwtl
out
or
fwait
addr16
mov
aaa
jnp
cmp
xchg
ret
xlat
xchg
push
dec
jp
push
push
clc
push
sahf
or
or
rolb
mov
or
mov
and
mov
addb
ss
aad
lock
and
mov
mov
jno
sub
das
cmp
mov
inc
jae
cwtl
test
clc
mov
out
adc
and
dec
lods
dec
fildl
mov
test
mov
mov
push
in
xor
inc
imul
xchg
dec
xor
mov
pop
hlt
jge
add
popa
mov
inc
jge
mov
cmp
aas
in
dec
dec
ret
lret
mov
ljmp
add
loope
in
es
loopne
xchg
mov
in
dec
daa
mov
and
lds
sbb
jno
pop
inc
push
pop
cltd
inc
add
xor
and
in
lcall
xor
loopne
adc
jno
out
arpl
jno
sub
out
push
mov
dec
ja
pop
dec
push
push
push
fmuls
push
mov
aam
loope
add
pop
fwait
movsl
push
out
in
in
jbe
jmp
int3
popa
sbb
aaa
add
loop
cmp
and
sbb
mov
mov
fistl
jbe
icebp
push
pushf
mov
pop
jb
in
scas
add
xor
jp
mov
mov
mov
repnz
fwait
pop
lods
and
shlb
pop
out
fistpl
stos
push
mov
lahf
cs
ja
sbb
loop
les
stos
ljmp
push
flds
xchg
adc
lea
aas
adc
cs
xchg
adc
addr16
cltd
ljmp
ljmp
nop
lds
push
fcomip
icebp
ja
inc
push
sti
sti
inc
loop
jecxz
push
cmp
push
loop
out
sbb
jecxz
outsl
mov
dec
mov
xlat
cmp
mov
fdivrl
arpl
and
pop
ljmp
shlb
aam
add
imul
scas
lds
jl
add
sbb
adc
sti
mov
jbe
cmp
repz
outsb
in
mov
push
push
push
ds
jbe
add
cmp
mov
pop
fdiv
ficomps
dec
mov
push
fadd
mov
xor
ret
verw
jb
mov
pusha
pop
negb
icebp
cmp
inc
mov
add
xor
jecxz
lret
pop
fwait
subb
fnstcw
mov
loopne
outsb
jmp
cmp
fwait
xor
mov
mov
inc
sub
mov
push
sub
ret
or
cmpsl
lds
insl
call
fs
inc
cld
rcll
pop
xlat
ret
cmp
imul
insb
fadd
leave
stos
stos
sub
inc
jecxz
inc
jl
pop
movsb
arpl
fisttpl
aas
movsl
nop
sbb
stc
dec
sub
inc
insl
and
cwtl
call
out
add
sbb
sub
in
inc
popa
cmp
leave
xor
movb
icebp
adc
pushf
mov
aas
sub
jp
arpl
adc
jne
push
pop
cmp
inc
push
gs
das
xlat
add
lods
mov
xchg
outsb
dec
iret
cmp
or
push
das
sahf
loop
icebp
mov
in
int3
hlt
daa
push
lods
imulb
dec
mov
out
fadd
push
mov
cwtl
or
je
inc
fcompl
imul
subl
fstl
adc
scas
push
loopne
loop
or
push
xchg
cmp
sub
jns
stos
sbb
mov
iret
popa
pop
testb
xor
xor
ret
inc
or
jbe
or
jmp
dec
lock
jp
jle
mov
movsb
sbbb
movsl
jg
dec
nop
push
js
rcrl
les
shl
mov
test
jne
mov
jnp
jb
arpl
push
jnp
sbb
ss
mov
jl
lea
adc
xor
pushf
jns
fisttps
dec
dec
in
adc
aaa
repz
cltd
jmp
inc
sub
sbb
mov
cmpl
mov
dec
daa
xchg
add
sbb
loop
mov
stos
cld
xchg
jp
pop
sub
mov
ljmp
and
loope
out
stos
pushf
jnp
pop
leave
sub
iret
cmc
sbb
mov
aam
fidivs
je
adc
lcall
jno
ret
adc
jge
sti
rcll
inc
adc
in
inc
push
arpl
pop
cwtl
addl
fcmovnb
lock
adc
mov
jle
in
push
mov
fisttps
addr16
pop
inc
or
jmp
dec
xchg
sahf
mov
mov
fsubrs
add
lret
adc
mov
dec
rcr
ja
cmp
daa
lret
mov
xchg
sub
nop
ja
jmp
xor
imul
ds
mov
xor
push
jecxz
jl
mov
leave
popa
rcrb
cmpsb
outsb
cmc
pop
bound
dec
xlat
setns
inc
push
mov
in
xchg
pop
je
mov
pushf
cwtl
das
fstpt
mov
or
push
pushf
lods
andl
push
cmpsl
repz
mov
lds
adc
aas
mov
mov
add
imul
lods
insl
xlat
roll
addr16
mov
dec
push
push
sub
push
ljmp
jno
cmp
mov
mov
mov
and
mov
push
rcrl
xchg
cmpsb
add
or
xlat
adc
pop
dec
adc
mov
scas
adc
loope
xchg
or
sbb
ret
pop
das
loope
jo
iret
lcall
sbb
leave
xchg
sub
adc
pop
lret
jmp
das
xchg
sti
ror
in
and
aad
xchg
daa
pop
jecxz
sub
adc
cmc
pop
inc
fmuls
mov
js
stos
aas
bound
mov
or
add
andb
outsb
mov
test
xchg
fadds
insb
scas
popf
in
enter
jbe
adc
subb
loope
fcmove
stc
add
inc
dec
push
cmp
inc
scas
pop
pop
cmp
push
add
aas
je
push
cmp
shrl
call
fistpl
aam
dec
into
mov
mov
ret
push
add
movsb
lods
into
repnz
inc
inc
test
push
popa
or
jo
fwait
xor
in
mov
in
jp
out
mov
xorl
rolb
cld
xor
lock
imulb
dec
push
jp
xor
xchg
mov
jbe
mov
xchg
jo
lahf
xor
std
pop
in
push
pop
fs
sub
inc
adc
in
movsl
mov
xchg
add
test
aaa
in
jle
or
and
ret
sub
mov
jmp
mov
push
insb
or
mov
jg
and
nop
cltd
jmp
scas
mov
dec
dec
jae
xchg
mov
in
repnz
sub
cmpsl
flds
mov
lods
xor
fucomi
pop
mov
xorb
add
loope
mov
js
mov
cld
scas
mov
xor
xchg
dec
cs
insl
cmc
cmp
outsl
jg
repz
pop
int3
push
test
sub
dec
cwtl
hlt
jecxz
push
call
loop
push
aas
test
test
pusha
mov
mov
fsubrl
xchg
call
scas
push
cmp
jle
jae
lods
adc
adc
xor
mov
jbe
int
cmp
out
sub
sbb
jmp
fst
dec
lea
loope
sub
stc
jns
incl
ljmp
and
adc
out
xchg
into
popa
cmp
cmp
repnz
mov
add
cmpsb
pop
push
push
stos
or
test
mov
popa
cmp
cmp
xor
mov
js
out
lods
and
mov
sub
pushf
das
cmp
jnp
movsl
or
fsubl
stos
sub
mov
jle
das
rcrb
arpl
jbe
dec
sarl
mov
je
and
pusha
push
push
subb
ret
adc
mov
jge
and
lret
cmpsl
je
divb
inc
dec
ja
dec
rol
xor
jmp
mov
dec
cmp
cmp
andb
mov
les
enter
xchg
cmp
imul
add
cmpl
mov
loopne
hlt
pop
enter
pusha
gs
dec
movsl
outsl
rcll
addr16
stos
gs
jne
mov
mov
and
adc
ret
mov
dec
push
imul
inc
jge
mov
mov
stos
ficompl
add
jb
jg
repz
or
in
ds
outsb
fsubl
gs
out
push
mov
sahf
ret
fiadds
repz
incl
test
mov
sbbl
jle
or
jl
inc
das
aaa
sbb
and
int3
jns
aas
sbb
mov
xchg
xor
mov
jmp
aaa
cmp
cmp
in
and
mov
arpl
sarb
fldl
sahf
jb
dec
mov
jp
dec
int
jno
arpl
in
mov
mov
cmp
fmulp
fwait
pop
lahf
ficompl
jle
sub
leave
pushf
jecxz
cld
cltd
dec
fcmovnb
aas
fisttps
jns
push
ljmp
or
adc
push
pop
jl
or
negl
adc
mov
stos
mov
cmp
insl
mov
mov
pop
mov
xor
idiv
pop
scas
push
jmp
rcrl
mov
or
jp
mov
fcoml
pop
clc
dec
xor
mov
mov
mov
pop
addr16
fdivrl
movsb
dec
add
sar
das
das
or
loop
mov
inc
and
xor
mov
mov
ds
pop
adc
test
je
jle
adc
les
ds
jne
arpl
mov
sbb
inc
and
push
push
mov
add
clc
jb
cld
nop
scas
iret
xor
cmpsb
mov
push
lahf
mov
loopne
out
xchg
cmp
notb
push
jb
mov
pop
fadd
adcb
rcll
ljmp
hlt
xchg
pop
and
pop
add
lock
nopl
pop
ja
ret
dec
sbb
add
std
or
daa
cltd
gs
xor
fmuls
pop
mov
fnstcw
aaa
mov
mov
or
inc
dec
dec
icebp
sub
int
sbb
jecxz
out
cwtl
aas
sbb
xchg
jg
in
dec
rol
das
sti
add
fcompl
or
and
dec
mov
inc
addr16
stos
push
popa
stos
sub
xchg
stc
mov
or
jns
jmp
cmp
add
outsb
mov
lcall
imul
cltd
repz
pop
pop
call
pop
push
pop
add
mov
cmp
and
sub
inc
pop
popa
inc
cmpsb
mov
fcmovnb
jae
cmc
ret
mov
push
call
mov
out
popa
xlat
and
aam
push
stc
clc
dec
out
dec
jne
repz
add
fmull
shl
jne
icebp
pushf
rol
cmp
jb
add
pop
lret
push
mov
jecxz
dec
jns
push
leave
std
push
mov
xchg
dec
sub
rol
mov
pop
mov
ret
les
and
dec
mov
or
fldenv
jns
ja
in
cmc
jecxz,pn
cmc
add
lcall
movsb
jge
pop
jnp
lret
push
jo
shrl
mov
jns
sahf
sbb
outsl
jb
fldt
jmp
jno
int3
inc
jg
adc
int3
push
jp
aas
pop
xchg
or
mov
out
subb
push
mov
lcall
andl
sub
and
arpl
ljmp
jle
fwait
sahf
aaa
aam
pop
push
xor
rclb
and
dec
icebp
out
gs
lret
xchg
imul
out
arpl
outsb
jnp
cltd
jge
and
je
movsl
dec
mov
stos
mov
ror
xor
cwtl
mov
xor
sub
lock
sub
cmp
pop
push
or
jg
daa
pop
gs
mov
std
imul
addr16
outsb
and
fstl
cltd
mov
fistpll
and
add
mov
or
inc
xor
mul
cmp
xor
jg
loope
sbb
int3
subl
outsl
loope
sahf
pop
mov
ja
js
sarl
ds
jmp
stos
pop
adc
dec
mov
inc
dec
cmp
cmpsb
add
cmp
nop
js
aaa
ret
ret
jg
mov
push
outsb
jbe
xchg
mov
popf
or
mov
pop
sub
cli
out
test
sub
cmpsb
in
ficoml
fcomip
add
and
das
xchg
jge
and
cmp
pusha
dec
hlt
add
fsubl
data16
gs
sbb
fs
testl
jp
lahf
xor
out
adc
sub
ret
lahf
aad
fldenv
sbb
lods
jne
lock
add
or
pop
jp
rol
inc
xchg
pop
les
adc
add
inc
mov
jecxz
adc
and
and
arpl
push
into
addr16
rcrl
movsl
rcl
popf
or
sub
out
xor
sti
loopne
sarb
pop
or
xchg
adc
mov
xchg
push
stos
jmp
cmp
pop
shll
inc
xlat
je
mov
lds
cli
pop
lea
icebp
sbb
xor
sub
nop
fidivrl
sub
push
andb
loop
stos
cmp
ljmp
mov
aad
out
int
outsl
cs
mov
ret
nop
imul
dec
mov
pop
lock
dec
arpl
mov
sub
mov
movsl
jb
fwait
cmpl
inc
jl
xchg
mov
add
gs
das
das
dec
addb
out
stos
pushf
fidivl
ss
and
mov
jnp
jbe
mov
push
pop
push
idivb
push
xor
data16
lods
pusha
imul
cmp
movsl
in
push
push
push
jb
ret
lods
pop
cwtl
xor
xor
loop
in
cmp
xchg
in
mov
pop
jo
popf
pop
jge
iret
ret
mov
push
out
rcr
jb
xor
nop
divb
jl
stc
lods
mov
jns
xchg
push
mov
xchg
xchg
cwtl
pop
jmp
xlat
xchg
mov
cld
mov
sub
stos
pop
mov
cli
push
and
out
stos
cmp
jle
adc
shll
jns
out
insl
adc
jne
lods
sbb
cltd
mov
rcrb
lret
jns
sar
iret
pusha
cmp
mov
mov
jg
jecxz
call
push
pop
mov
lock
push
inc
lea
cmpsl
or
xor
and
mov
xchg
or
hlt
fmuls
loope
clc
dec
lret
cmp
mov
cmp
xor
jp
push
lds
loop
add
sub
test
test
das
jge
inc
or
jle
cmp
inc
xchg
movsb
sarb
stc
fnsave
lods
add
iret
ret
and
jmp
cmpsl
outsb
push
les
add
dec
out
mov
sbb
pusha
ficoml
jo
xlat
jp
xchg
mov
stos
or
popf
in
ret
lods
mov
adc
sub
movsb
or
repnz
jno
jnp
jae
imul
loop
xchg
in
dec
jae
cmpsb
int3
push
icebp
push
adc
push
shll
idivb
pop
sbb
decb
mulb
and
adc
ds
sbb
sbb
push
xor
cmp
sub
in
leave
movsl
cmp
xlat
cmpsb
fwait
test
add
pop
ja
fsubs
call
mov
lods
mov
add
loop
test
fcomps
dec
xchg
mov
scas
pop
ret
mov
in
lahf
push
and
mov
imul
je
jb
mov
xor
inc
cltd
filds
mov
push
popf
out
movsl
mov
jp
xchg
loope
sub
dec
shl
pop
jg
inc
int3
mov
test
out
icebp
push
popa
xchg
sub
pop
not
xchg
and
gs
std
cmp
xor
jg
out
or
sub
in
pop
lods
fildl
bt
std
push
icebp
mov
nop
pusha
insl
in
repnz
lret
mov
inc
cli
push
mov
xchg
mov
and
cmc
lret
pop
dec
out
jb
popa
int3
mov
mov
adc
push
icebp
mov
clc
inc
ljmp
pop
call
mov
lret
pop
mov
mov
cmp
cmpl
jle
sub
push
cmpsb
js
add
push
jno
push
popf
in
cmp
popa
arpl
dec
int
cmp
xchg
or
dec
sbb
arpl
push
or
mov
cmp
add
scas
pop
jno
mov
mov
push
scas
rorb
cmp
mov
jg,pt
cwtl
cwtl
in
stc
aad
fcoml
push
inc
imul
and
sbb
jnp
repnz
decl
cs
cmp
out
arpl
outsl
mov
inc
stos
lret
mov
fldl
or
dec
andb
or
std
add
sub
in
or
and
mov
pop
mov
xlat
inc
adc
xchg
mov
cmp
mov
fs
adc
fcoms
repnz
jnp
pop
loope
jne
data16
add
repz
loope
int
fsts
outsl
and
aas
xchg
xor
sub
sbb
push
cmp
sub
jo
mov
je
js
and
mov
sub
fwait
outsl
mov
into
cmp
jne
xlat
out
rcr
inc
push
mov
out
jmp
fistpll
shlb
jmp
insb
rol
inc
mov
outsb
jb
mov
and
sub
adc
call
cwtl
scas
xchg
testl
test
xchg
mov
sub
cs
paddb
cmc
xchg
and
imul
cli
aaa
ret
iret
insl
adc
arpl
sbb
call
ljmp
int3
xchg
scas
cld
lret
inc
mov
pop
jo
fstl
rcrb
sbb
jb
imul
addl
pop
js
clc
div
cmp
mov
icebp
mov
push
les
enter
mov
stos
sub
mov
add
push
scas
int3
push
push
cld
ljmp
add
add
data16
hlt
push
sti
test
push
jmp
popa
popf
sti
popa
imul
icebp
jbe
and
cs
cli
mov
stos
sarb
xor
hlt
loope
and
cmpsl
sub
mov
xchg
or
enter
mov
cld
bound
in
in
loope
jb
test
add
mov
xor
lods
or
xlat
xchg
cmp
push
stos
or
jl
jmp
fs
adc
adc
or
lret
cld
add
mov
mov
loopne
fldenv
gs
xchg
push
add
mov
ja
incl
pop
repnz
or
ja
push
aaa
inc
xchg
mov
lods
mov
lods
mov
loop
lods
mov
ret
mov
jno
adc
sub
pop
aaa
popf
jo
icebp
insb
jne
mov
leave
push
pop
add
in
shlb
inc
test
add
sbb
sbb
pop
pop
adc
mov
fsubl
outsl
push
dec
pop
subl
inc
cli
lods
jle
sub
outsb
mov
ret
push
fadd
pop
rorb
sub
xchg
push
sub
jbe
adc
int3
mov
sarl
cmpsl
cld
add
nop
outsb
sub
outsb
xor
pusha
xchg
les
loop
leave
iret
andl
das
call
xor
xor
add
mov
jae
push
push
fimull
xorb
inc
outsl
xor
add
test
test
push
pop
jg
es
fwait
xor
pop
aas
jbe
mov
scas
inc
clc
ret
add
mov
cld
push
pop
les
jg
xchg
mov
mov
and
pop
dec
cmp
sbbb
cld
std
stos
xlat
and
stos
test
cmp
lret
xchg
test
mov
js
dec
cmp
sbb
and
icebp
repz
xchg
lret
sbb
cld
mov
lea
shll
outsl
push
cmc
mov
mov
adc
outsl
fldcw
adc
and
std
cmp
ret
jp
push
pop
icebp
mov
cmpb
dec
sbb
imul
out
mov
inc
push
adc
fcmovu
mov
sti
mov
push
mov
movsb
jle
push
cmp
jl
lock
into
ret
dec
xchg
jb
and
popf
pop
pop
insb
sbb
mov
popa
lea
les
iret
sub
fcoml
cmp
sub
test
insb
pop
mov
sarb
daa
cmp
xor
popf
jne
test
into
rcr
lea
dec
loope
scas
xor
add
and
push
xor
fwait
xchg
lret
inc
xchg
sub
pop
in
jecxz
push
add
push
sbb
inc
stos
repz
add
lods
jne,pn
gs
inc
test
xor
shll
xor
insl
adc
fdivr
iret
push
push
dec
inc
in
sub
in
adc
inc
mov
dec
or
and
mov
xchg
lea
push
insb
push
daa
in
stos
xor
jmp
push
icebp
jnp
into
jo
ljmp
stc
fidivs
sub
mov
outsl
dec
mov
std
fcmovne
jg
lock
sub
mov
cmp
out
loop
popf
lods
and
cmp
xchg
jnp
dec
lret
fsub
sbb
pop
xlat
gs
scas
std
xor
add
cwtl
and
popf
daa
fnstsw
push
sarl
adcb
js
sbbl
cmc
clc
es
ljmp
and
out
or
ds
popf
cwtl
mov
inc
sub
cmp
inc
cmp
add
dec
inc
pop
das
dec
push
or
fwait
sub
sbb
xor
repnz
fsubrs
xchg
mov
cli
adc
iret
loope
adc
dec
aam
and
pop
mov
repz
cs
cwtl
pop
mov
pop
sub
and
dec
mov
outsl
pusha
dec
fs
dec
lcall
ds
lock
orb
cmpsl
pop
iret
sub
loopne
ret
mov
frstpm(287
dec
push
sub
push
aad
dec
rorb
loopne
pop
popf
push
push
jb
stos
mov
push
in
jmp
cwtl
xchg
test
shll
push
inc
cltd
fiaddl
dec
std
sbb
sbb
sti
inc
dec
roll
and
in
jge
imul
xchg
mov
xchg
in
sub
inc
pop
xchg
mov
adc
loope
cmpsl
jbe
xchg
mov
test
in
bound
push
jl
lret
ret
jns
std
popf
or
jmp
push
pop
adc
pushw
pop
ljmp
in
adc
test
mull
xor
mov
lods
xchg
in
mov
jmp
jno
cmpsl
je
xchg
fwait
push
jbe
jle
push
sbb
pushf
movsl
loopne
inc
icebp
movsl
jnp
and
pop
enter
sbb
sbb
or
pop
mov
popf
or
sbb
je
push
pusha
sub
jno
sbb
stos
hlt
or
subl
test
push
imul
lahf
imul
out
inc
push
out
hlt
sbb
fcmovnbe
lahf
push
jno
mov
test
mov
mov
negb
push
ss
iret
test
call
adc
outsb
sub
jb
mov
sub
out
fnsave
popf
aas
mov
arpl
xor
mov
gs
jbe
mov
mov
jmp
pop
lods
mov
or
mov
daa
sbb
insl
cmp
push
test
pop
xchg
mov
movsb
insb
iret
daa
push
out
mov
cmp
movsb
jo
es
add
inc
mov
lods
lcall
and
popf
inc
mov
xor
sbb
outsb
andb
mov
js
es
dec
roll
aam
xchg
or
les
cmp
movsb
push
stos
inc
nop
jb
mov
fsubs
cmp
les
imul
cmp
push
sbb
int3
xchg
mov
pushf
xor
mov
loop
testb
push
std
pusha
scas
sub
mov
inc
test
fistps
push
scas
xchg
cmp
xor
and
lods
out
mov
sbb
stos
adc
arpl
pop
scas
mov
movsb
and
int3
stc
insl
adc
and
enter
dec
and
mov
dec
idivl
insl
and
orl
pop
xchg
lret
das
adc
add
mov
loope
pop
insl
loop
lock
fildll
scas
adcl
sub
insl
lods
add
arpl
mov
int3
jmp
hlt
psubusb
adc
loop
sbb
push
fwait
bnd
repz
fsubr
cmp
sub
xchg
arpl
popf
or
mov
or
push
lods
mov
cwtl
and
push
xor
adc
in
flds
das
jo
xlat
in
sahf
sbb
xor
jae
xor
inc
xchg
fcoms
andnps
shl
mov
test
aas
mov
pop
cwtl
popa
cltd
mov
into
mov
daa
add
arpl
sub
jmp
xchg
loopne,pn
jge
notl
mov
push
and
cmp
test
testl
push
movsl
mov
hlt
mov
push
mov
in
jecxz
enter
ret
cmp
loop
icebp
int3
repz
jne
adc
sbb
lcall
addr16
or
jne
sbb
pop
repz
jl
or
fdiv
inc
mov
push
sbb
mov
dec
cmc
mov
and
lret
push
inc
in
outsb
cmp
mov
out
test
xor
dec
mov
inc
jecxz
cmp
mov
mov
ret
imul
xchg
cmp
int
inc
push
sub
icebp
xchg
mov
fisttps
data16
mov
cmp
push
fidivrl
cmpsl
std
das
mov
or
call
repnz
aas
nop
enter
push
in
dec
lods
add
loop
test
cmp
inc
test
xchg
mov
mov
pop
jecxz
arpl
loope
aam
out
cmpsb
sbb
xor
adc
or
aas
jp
dec
scas
enter
mov
or
push
fbstp
stc
in
movb
fsubr
mov
into
data16
mov
adc
mov
fnop
fstpl
cmp
dec
call
out
and
pushf
mov
int3
jno
xor
test
pop
out
sbb
les
stos
mov
pop
cmp
jnp
andl
push
aad
scas
adc
fmuls
stc
fnsave
aad
adc
jbe
xchg
and
push
fiaddl
lret
gs
insl
mov
jle
push
pop
leave
ffreep
test
in
xor
fsubp
xchg
mov
in
inc
or
pop
sbb
and
call
stc
inc
ret
push
test
dec
loope
cmpsl
lcall
pop
xchg
mov
outsb
xor
push
jp
xor
add
stc
jecxz
xchg
fldcw
adc
cmp
bound
mov
pop
divl
jo
inc
aad
mov
jg
lret
sbb
daa
sub
idiv
scas
addr16
arpl
sbb
insl
aas
cmp
scas
lret
aad
sub
pop
mov
fs
mov
icebp
inc
mov
mov
dec
das
xchg
adc
adc
jg
fldcw
mov
into
clc
jbe
mov
repnz
pop
idivl
mov
stos
dec
fimuls
iret
subb
clc
xchg
arpl
cmpl
inc
and
jbe
cmp
inc
xlat
xor
js
in
jnp
fs
or
and
lods
adc
sub
sub
negl
push
inc
fwait
aad
cmp
push
outsl
int
lock
iret
mov
cmovnp
pop
adc
jno
mov
fldcw
jp
lds
scas
aad
xchg
xchg
adcb
iret
shrl
xlat
outsb
push
sub
sbb
xchg
dec
adc
jge
jo
js
out
jmp
inc
sahf
pusha
mov
movsl
cmpsb
scas
ror
mov
movb
mov
fwait
adc
inc
sub
cs
hlt
sahf
or
imul
push
and
jne
and
loopne
imul
iret
xchg
sbb
ljmp
gs
mov
ljmp
pop
sbbb
pop
pop
jge
inc
sub
dec
add
push
mov
inc
outsl
mov
js
cmp
subb
pop
mov
xchg
ljmp
inc
sahf
adcb
mov
and
mov
pop
push
mov
xor
push
xchg
out
cli
cmp
xchg
pop
inc
xchg
jo
rcr
xchg
lret
dec
enter
push
ljmp
cmp
add
jno
cmpsb
ss
mov
lds
adc
jl
imul
jg
mov
or
mov
pop
inc
xchg
add
rclb
lret
sti
mov
ss
lcall
cs
sub
rclb
push
cwtl
pop
test
mov
xchg
lea
ficompl
sbb
inc
data16
jo
sbb
cld
sub
out
stc
leave
enter
gs
push
ljmp
or
fbld
sbbb
ds
jle
lds
imul
push
std
in
fmull
xor
xor
fisubl
ret
daa
pop
jne
ret
push
push
repnz
mov
sahf
ljmp
sti
repnz
repz
into
sahf
cmp
cli
adc
mov
out
jg
orl
fsubp
mov
repnz
nop
inc
xor
pop
addb
jp
cltd
shll
xchg
push
arpl
dec
mov
inc
shl
in
mov
outsb
subl
in
pop
sbb
cmp
ja
lods
or
pop
mov
sub
lods
popf
dec
mov
cmc
fwait
push
mov
xchg
jo
out
int3
pushf
imul
ja
inc
cmp
adc
lcall
sub
fwait
ljmp
dec
inc
pushf
lea
adc
ret
mov
push
xor
lret
push
movsl
lret
add
mov
pop
sti
int3
jne
sub
jb
pop
aad
incb
adc
pop
or
pop
xchg
mov
bound
sbb
imul
sahf
sub
mov
popf
rcrl
cmpsl
sbb
rcpps
movsl
add
out
add
bound
xchg
mov
jecxz
movsb
push
cmp
mov
mov
mov
stos
outsl
popa
cmp
xchg
mov
shrb
fstp
push
jp
push
xchg
and
repnz
lret
xchg
xchg
push
call
push
sbb
test
add
mov
shll
orb
push
inc
or
xchg
insl
mov
mov
sub
lea
outsb
mov
cmp
mov
repnz
lret
sbbl
or
mov
daa
scas
hlt
mov
adc
and
mov
mov
pop
aad
xchg
adc
xor
repnz
and
mov
test
jle
insb
or
scas
jne
and
cmpsw
movsb
push
sbb
movsl
add
sbb
out
cmpxchg
jnp
mov
add
push
mov
lcall
dec
insb
or
lock
aad
sbb
mov
xor
inc
xchg
jle
mov
js
jl
ljmp
and
js
or
jmp
mov
sbb
dec
jbe
fimull
mov
push
dec
mov
jp
jae
arpl
xor
popa
dec
sbb
cwtl
dec
repnz
push
out
dec
les
inc
andl
xchg
mov
movsb
sarb
mov
xor
addl
ss
aas
sub
or
leave
ja
mov
push
ror
scas
push
loop
adc
dec
pop
sub
or
inc
cmpsb
fistl
nop
ret
rclb
or
loop
push
inc
idiv
fcmovne
imulb
and
inc
pop
arpl
xchg
add
fs
lods
xor
and
int
cmp
or
dec
inc
test
sub
sbb
sbb
scas
pop
gs
xor
int3
sub
adc
mov
xchg
iret
pop
and
aaa
test
out
lret
add
js
add
sti
fwait
jle
sti
or
mov
xchg
sbb
ret
or
or
sbb
daa
xchg
push
outsb
out
mov
scas
mov
xor
dec
jno
in
mov
jb
sub
adc
imul
inc
and
stos
stos
mov
scas
gs
add
xchg
in
ret
sbb
and
mov
daa
popf
fstps
ret
pop
stc
arpl
or
sti
pop
jnp
sbb
jbe
stos
pop
push
notl
mov
sahf
push
xchg
stos
fsubl
lods
je
loop
push
aas
repz
add
loope
mov
flds
idivb
sub
ja
push
sbb
mov
outsb
aad
xlat
test
stos
iret
jmp
xor
xchg
sbb
add
xchg
iret
adc
fdivrl
data16
and
mov
adc
outsb
add
outsb
sbbb
incl
mov
bound
stos
inc
adc
in
pop
pop
pushf
inc
dec
and
ret
pop
xor
inc
xchg
in
mov
and
or
in
ret
adc
cli
bound
xor
inc
cmp
ret
cmp
mov
push
and
push
and
pop
imul
fldl
pop
add
test
sahf
rcrb
mov
xchg
test
test
pop
pop
sub
subb
cmpsb
je
loope
push
push
or
mov
int
push
xchg
in
adc
mov
int3
scas
ret
das
movsb
in
sbb
rorb
pop
sub
adc
sbb
and
leave
incb
sbb
or
iret
mov
or
insl
aaa
push
adc
mov
dec
lcall
jae
mov
sbb
pop
mov
dec
push
dec
xor
repnz
lods
je
cmp
out
mov
ljmp
fcompl
imul
les
icebp
mov
xchg
aaa
inc
out
lahf
pop
add
je
jl
xchg
out
in
xor
sbbb
negb
mov
xchg
inc
sbb
shrb
sub
idiv
add
fcmovu
rcll
in
mov
pop
lock
sbb
cmp
sub
test
mov
push
xchg
jmp
push
xchg
sbb
and
mov
jnp
out
les
outsl
into
jbe
xchg
sub
jnp
out
dec
clc
mov
inc
jp
add
xchg
push
out
dec
pop
int
xchg
test
mov
pop
push
cmp
aaa
aad
movsb
aad
dec
jns
loopne
or
jg
xchg
mov
xor
lcall
xlat
mov
jae
jb
add
or
out
cmc
push
pop
loop
push
dec
or
test
adc
les
dec
inc
xor
fstl
dec
scas
adc
inc
adc
inc
test
aas
fwait
icebp
mov
and
sub
loop
xchg
mov
or
rorb
test
inc
or
enter
jnp
mov
fwait
cmp
mov
scas
daa
xor
jecxz
cld
sub
inc
out
fdiv
push
sub
push
out
xor
leave
sbb
sbb
lock
mov
cmp
xchg
xor
fisttpl
jae
fldt
popa
or
jp
in
out
mov
xchg
push
leave
jg
and
add
adcl
pop
or
mov
mov
rorb
cmp
cmp
outsb
shl
jle
mov
adc
sbb
fcoms
cmp
inc
lea
push
std
pop
in
lods
sub
xchg
adc
cmpsb
daa
sub
inc
les
cmp
lds
lea
adc
es
fs
or
insl
sub
xchg
mov
fcompl
lea
mov
xchg
jg
add
lea
mov
xchg
rclb
rcl
push
mov
adc
jl
in
popf
xchg
in
push
push
dec
aam
ljmp
data16
dec
rcrl
les
cli
mov
pusha
frstpm(287
lcall
rcrb
mov
clc
push
jg
popf
test
hlt
xchg
pop
sbb
sbb
sub
dec
out
fs
fadds
sahf
insb
jns
rolb
mov
test
mov
lods
xchg
mov
mov
mov
and
push
pop
pop
or
mov
dec
mov
nop
jl
fs
cmp
push
xchg
mov
repz
cmp
push
loopne
inc
repnz
push
mov
dec
sub
adc
xor
jb
fmuls
xor
and
aam
xor
icebp
lahf
xor
jbe
mov
add
popa
cmc
inc
aaa
mov
or
scas
xchg
or
insl
jl
movsl
iret
movsb
pop
cld
sub
dec
icebp
lock
xor
outsb
js
test
repz
pusha
int
cwtl
decl
loopne
push
pop
sbb
xor
jle
dec
setno
dec
mov
sbb
sbb
xchg
loopne
jno
outsb
in
mov
inc
das
dec
repz
lods
into
pop
clc
pop
push
lret
addr16
jg
sub
inc
popf
inc
sub
jge
push
jb
mov
push
dec
push
insl
pop
leave
push
adcl
repz
push
frstor
jae
add
jl
sbb
xchg
mov
xor
mov
xchg
dec
andl
outsl
in
push
aas
call
fstpl
movsb
adc
sbb
imul
dec
cmp
paddb
je
mov
mov
repnz
shlb
jg
aaa
in
ja
mov
mov
or
je
xor
hlt
js
fs
rclb
sbb
jecxz
test
mov
rolb
sti
mov
mov
repnz
loop
add
cmpsl
xchg
jp
test
insl
ret
mov
scas
call
ja
sbb
inc
and
mov
or
cmp
mov
fst
test
pop
fld1
mov
xor
inc
pop
fmuls
iret
sub
out
jno
data16
mov
lods
ss
iret
outsb
in
insb
rolb
mov
jo
jo
push
imul
in
out
ret
push
cltd
fbld
mov
das
mov
sbb
sbb
add
out
xchg
dec
notl
lds
std
add
mov
in
shlb
loopne
outsb
cld
lret
add
inc
cmp
jnp
movsl
jne
xor
pusha
mov
lcall
imul
in
mov
enter
test
mov
daa
xchg
mov
adc
fsin
imul
mov
roll
cmp
pop
dec
add
push
jle
jecxz
pop
icebp
jmp
xor
jecxz
rcrl
out
ret
cmp
gs
addr16
jge
fdivrl
test
sub
mov
shl
imul
mov
lods
pop
lods
mov
fists
push
out
lret
addl
mov
lods
add
dec
addb
hlt
cs
adc
fnstcw
imul
mov
mov
sub
dec
cs
mov
fidivrl
orl
inc
push
sub
sbb
pop
mov
xchg
rol
pop
fistpll
aam
out
shlb
adc
cmpsb
movsb
sub
out
mov
adc
sbb
in
das
mov
daa
jb
rclb
imull
mov
out
sub
divl
cmp
por
popa
lds
push
in
cmc
mov
insb
jo
mov
push
stos
loop
test
sahf
jge
xorb
or
push
sub
xor
call
push
or
test
lods
lret
stos
dec
push
mov
push
fimull
daa
nop
xor
mov
add
xchg
jo
enter
lock
call
sbb
mov
das
jb
or
fisttpl
push
mov
addr16
pop
sbb
xor
fildll
push
sub
adcl
lods
lods
stc
sub
nop
gs
add
adcb
push
hlt
and
mov
jge
fs
pop
repnz
lods
bound
pusha
or
sbb
xchg
aad
out
shl
inc
pop
repz
jae
and
leave
add
cmpsl
ret
cmpsb
mov
cmp
push
fs
jecxz
adc
mov
xchg
xchg
ret
mov
xchg
inc
stc
mov
inc
jae
push
shll
mov
cmpsb
lock
inc
iret
xchg
push
mov
dec
fsub
mov
pop
push
dec
inc
insb
pop
mov
pop
std
push
orb
cmp
mov
mov
fldt
xor
mull
sub
sub
subb
sysexit
and
mov
cmp
mov
in
dec
cmp
js
imul
pop
cld
mov
psubusw
and
nop
shlb
cltd
sub
sbbb
in
jge
xor
mov
test
xor
arpl
repnz
mov
sbb
mov
out
iret
sbb
ficomps
inc
jg
movsb
jno,pn
iret
cli
fs
lahf
xchg
push
test
insl
ljmp
lods
int
cmp
addr16
gs
iret
mov
or
loope
jne
cmp
push
jg
and
push
adc
xor
inc
jg
mov
les
push
repz
out
mov
addr16
bound
adc
or
aaa
aas
mov
cmp
xchg
adc
gs
xchg
daa
or
add
jmp
addb
jno
dec
dec
mov
cmp
imul
push
es
aaa
cs
fcomps
sub
sbb
sarb
fisubrs
dec
insl
imul
mov
push
push
movsb
test
cli
push
jns
fwait
insb
fisttpl
mov
cli
fidivrs
andl
imul
inc
push
testb
mov
mov
jle
test
lds
sbb
jp
rclb
int3
mov
xor
int3
stc
xchg
pop
add
pop
aaa
add
fisttps
mov
dec
lods
pop
loopne
jge
cmp
fiaddl
and
push
cwtl
push
into
pop
cmpsl
inc
js
lcall
cli
pop
lcall
or
les
xchg
inc
rorb
cmp
xor
std
mov
jge
iret
and
pop
call
repnz
ret
loopne
mov
add
mov
mov
ja
jo
jo
es
shrb
and
arpl
arpl
shll
mov
je
rcll
add
addr16
sbb
lds
insb
inc
adc
orl
inc
movsl
mov
adc
push
and
call
mov
pop
sbb
mov
mov
fisubs
sbb
push
inc
cltd
add
mov
stos
and
lea
scas
movl
sub
mov
das
and
cmp
mov
add
pop
adc
das
mov
or
push
sub
aad
enter
addl
xchg
not
jb
fsts
add
iret
mov
andb
lds
cmp
in
je
jmp
adc
jp
sbb
sahf
pop
sarb
das
stos
repnz
ret
xor
inc
fidivrs
clc
adc
mov
push
push
jnp
cmc
fs
pop
or
pop
ss
ror
decw
sub
lahf
nop
pop
xor
mov
xchg
xchg
movsl
jbe
inc
andl
xchg
sti
arpl
movsb
fdivp
shlb
lahf
lods
mov
jp
mov
dec
aaa
inc
mov
mov
pushf
imul
test
sahf
cwtl
lcall
mov
gs
xchg
push
sub
loope
jnp
fdivl
push
shlb
divb
rorb
inc
scas
adc
or
bound
inc
pop
lds
jl
push
fisttps
stc
daa
adc
dec
dec
les
jle
dec
mov
lret
pop
fcompl
shl
popa
and
cmp
cmp
inc
jmp
repz
jnp
loop
cmp
fcoms
je
adc
xchg
dec
or
sbb
cli
and
leave
shl
push
lds
scas
aas
jp
xor
int
pop
mov
cmp
ds
js
inc
aaa
inc
pusha
lods
lret
adc
add
je
pop
sahf
or
dec
jbe
push
pop
rorb
xchg
cmpsl
adc
xchg
sub
sub
scas
push
pop
jmp
sti
xchg
fcoms
dec
ss
ljmp
jp
add
movsl
ds
mov
xor
ds
clc
out
cmp
mov
int3
mov
dec
cmpsl
or
jne
ret
mov
nop/reserved
inc
gs
or
jns
dec
push
mov
jecxz
cli
jl
push
push
xchg
mov
lds
mov
and
es
xchg
ja
add
popa
hlt
mov
shrl
addr16
rcl
xor
dec
add
mul
and
push
push
fsubrl
add
inc
mov
fcoml
mov
inc
repnz
sbb
cmpb
test
lock
clc
inc
loop
cltd
jge
aad
mov
outsb
and
ss
dec
es
out
shlb
push
fs
sub
pop
outsb
push
adc
mov
cs
and
cmp
sub
arpl
add
xchg
mov
fwait
out
data16
aaa
pop
div
outsb
sbb
or
jbe
dec
mov
sarb
cli
stc
pop
inc
scas
xchg
jle
test
lret
mov
ljmp
test
inc
lds
adc
aad
in
inc
mov
mov
push
mov
xchg
add
insb
xchg
test
mov
xchg
xchg
cmp
or
mov
mov
insl
subb
icebp
ret
inc
push
cld
popa
mov
out
mov
cmpsl
mov
pop
and
jle
pop
mov
cld
add
dec
data16
test
push
jbe
adc
add
cmp
test
mov
add
xchg
int3
inc
push
ror
adc
xchg
adc
and
das
mov
insb
sub
sbb
fisubrs
fldcw
xchg
jmp
mov
out
mov
cmc
cmp
in
hlt
pop
ja
mov
mov
test
ret
scas
mov
sbb
lods
es
jbe
jmp
testl
fisttpll
fs
xor
mov
jle
out
sub
dec
sbb
fdivl
ss
movsl
loope
in
xor
or
adc
push
fdivl
jae
push
dec
daa
ljmp
je
and
mov
insb
sbb
mov
cli
lods
mov
insb
and
daa
call
addb
pop
push
pop
lods
pop
pop
stos
jns
cmc
inc
mov
jge
sub
lods
push
sbb
fisttpll
push
rcrl
lret
mov
jp
push
jp
xchg
jno
xor
mov
cli
idiv
in
adc
gs
or
sub
dec
mov
mov
je
push
dec
insl
jnp
mov
inc
sbb
insl
int3
stos
or
sbb
inc
push
adc
pop
mov
pop
jle
rorl
adc
pushl
aam
js
dec
or
push
add
mov
insl
mov
repnz
rcrb
int
inc
arpl
xlat
xchg
dec
int3
sub
cmp
and
push
out
in
enter
flds
jl
mov
loope
das
sbb
clc
rol
flds
mov
mov
add
fildll
sub
popf
imul
push
adcb
mov
and
jae
rep
out
or
std
movsl
pushf
sbb
jecxz
cmp
lods
mov
mov
out
jns
push
out
and
lock
fbstp
cs
jmp
aad
sbb
testl
ja
adc
mov
fisttpll
dec
mov
cmc
pusha
and
jmp
in
lahf
jnp
xchg
mov
out
cmp
mov
into
mov
pop
iret
pop
lds
jo
scas
or
fdivs
or
xlat
fisttpl
pop
mov
data16
sbb
leave
into
mov
rol
jno
repz
stos
sub
sub
gs
and
iret
or
test
mov
and
iret
shrb
mov
mull
adc
sub
cwtl
dec
push
sbb
movsl
add
int3
lret
inc
xorl
dec
fwait
cmp
aas
bound
add
push
in
xchg
pop
test
outsl
push
divl
inc
xchg
or
xor
adc
adc
cld
cmp
das
sahf
in
nop
add
and
jo
cltd
sbb
push
loope
xor
mov
pop
clc
inc
cmp
mov
inc
out
ret
mov
xorb
xor
jns
out
mov
fcoms
xchg
je
jecxz
mov
clc
pop
push
jp
pop
scas
in
in
jo
or
mov
mov
mov
test
push
push
nop
adc
faddl
xchg
sbb
rorl
sbb
filds
out
xrelease
mov
pop
nop
sarl
icebp
mov
dec
bound
scas
push
iret
jp
xchg
push
sub
and
mov
repz
cmp
icebp
sbb
dec
jo
mov
int
adc
data16
adcl
mov
adc
inc
subl
lock
pop
repz
movsl
lret
cmc
push
dec
mov
pop
mov
fs
adc
push
sbb
test
push
dec
mov
ds
out
imulb
mov
push
pop
out
inc
sub
push
pop
cmc
mov
pusha
cmpb
inc
lods
cmp
cmpsb
aaa
pop
xchg
cli
mov
in
or
int
push
xor
xor
jns
in
subl
arpl
inc
and
insl
pop
jb
jp
cmp
jge
aaa
xchg
sub
dec
test
out
xchg
mov
inc
cmp
pop
in
push
xchg
jns
paddsb
xor
daa
pop
cltd
pop
cs
inc
movsl
mov
and
sub
sbb
leave
push
pop
fmuls
xchg
notl
jne
lods
dec
clc
arpl
inc
pop
fucomp
cltd
into
pop
test
xor
cltd
out
mov
addr16
inc
call
cmovge
dec
sbb
jae
daa
inc
push
sub
movsb
dec
mov
int3
ds
hlt
mov
fstpl
xchg
adc
icebp
push
shrl
adc
mov
ficomps
jns
jg
jle
push
sub
mov
mov
pop
adc
push
dec
cmp
xchg
dec
push
pop
into
inc
mov
adc
gs
inc
stc
push
cmp
incl
inc
daa
mov
dec
xchg
cli
sbb
test
scas
insb
scas
cwtl
insb
test
jecxz
lods
and
xchg
inc
mov
movsl
mov
lods
lods
shl
daa
lock
xchg
arpl
leave
test
ss
or
and
sahf
or
stos
or
add
inc
enter
cs
push
pop
jne
in
or
xchg
imulb
loopne
push
ret
fstpl
mov
push
lahf
outsl
lcall
fnsave
and
jb
lahf
add
inc
enter
aad
push
push
cmp
jp
adcb
rcr
outsl
inc
and
ret
into
sti
inc
cmp
call
jmp
bound
icebp
ret
outsb
icebp
vzeroall
into
test
dec
xchg
mov
adc
mov
fucomi
push
mov
shlb
stos
aaa
cs
pop
pushf
sub
xchg
sub
cs
ljmp
clc
orl
mov
xchg
das
test
push
lcall
gs
push
cmp
xchg
mov
sub
sub
lcall
pop
inc
loop
cwtl
pop
popa
cmc
int3
leave
cmp
in
loopne
pop
sbb
mov
pusha
mov
mov
sbb
jns
popf
nop
push
clc
mov
lret
fs
fildl
pop
push
fst
adc
xor
mov
mov
bound
jle
sub
pop
push
or
pop
cbtw
push
aad
leave
push
enter
imul
xchg
xorl
push
mov
xchg
nop
or
mov
imul
fcomps
mov
push
pop
cli
decb
add
sub
inc
push
mov
shl
sub
mov
das
notb
mov
cmp
ja
test
icebp
in
sub
je
js
and
stos
xchg
lds
fsts
cmp
sub
rcl
ret
mov
out
cmp
xchg
pop
mov
sub
jae
jg
xor
scas
mov
push
es
shrb
dec
rcll
cld
lods
arpl
std
or
jo
pop
add
mov
push
dec
pop
leave
cmpsb
adc
lods
in
popf
arpl
mov
push
pop
jb
fs
pop
xlat
clc
cli
stc
sahf
sti
pop
inc
xchg
mov
test
fstps
mov
stos
gs
dec
mov
clc
add
popa
jo
mov
cmp
mov
lods
push
xor
mov
inc
pop
ret
dec
mov
xor
mov
mov
repz
xor
scas
xchg
in
mov
xchg
dec
fwait
outsb
xor
out
sbb
inc
loope
aad
xor
sbb
out
and
dec
xor
cld
add
in
cmp
lea
repnz
or
lds
dec
and
jecxz
mov
sahf
jmp
fsub
stos
jle
xor
andl
or
xor
ss
push
jo
inc
mov
rcrb
add
dec
and
jle
mov
sbb
ss
jnp
inc
xor
pop
in
movsl
scas
push
les
pop
cmc
ljmp
shlb
js
out
jmp
popa
repz
andl
pop
test
mov
mov
aad
pop
fnstcw
sahf
pmulhuw
lea
adc
add
ljmp
rcrl
dec
jne
maskmovq
testl
push
outsl
int3
std
stos
int3
and
jecxz
ja
or
movsb
cwtl
inc
sbb
xchg
mulb
test
fsubs
enter
sub
adc
mov
xchg
cmp
pop
sbbl
xor
sar
clc
les
mov
test
or
icebp
adc
js
dec
pop
lods
frstor
flds
iret
mov
mov
hlt
add
aaa
push
xchg
mov
mov
mov
push
in
push
scas
dec
sbb
std
ja
cltd
es
nop
out
pushf
inc
push
adc
pop
and
sbb
xor
add
add
inc
jmp
fisubrl
pop
inc
ljmp
imul
sbb
stc
in
jne
cld
lret
cmpl
and
xor
jno
les
ret
jno
sub
cmp
push
mov
cltd
adc
test
sub
sub
mov
cmp
sahf
adc
sub
imul
stos
sbb
and
pop
cmpl
mov
je
cwtl
inc
test
fnstsw
adc
mov
cmpsb
jecxz
mov
fbstp
adc
pop
cli
fnsave
jae
int
add
enter
sub
xchg
data16
clc
or
mov
ret
mov
xchg
pop
cmp
pop
aad
push
aad
dec
aaa
call
mov
aas
mov
add
sahf
sbb
mov
insb
inc
lahf
inc
int
push
or
inc
fnstcw
jge
mov
outsb
call
xchg
mov
cld
pop
andl
mov
mov
pop
cld
cmp
jecxz
jae
xchg
and
sbb
sahf
xchg
sub
push
cmc
push
or
es
adc
fs
loop
jg
daa
loop
dec
cmpsl
pushf
jl
pop
gs
pop
insb
ja
fadd
pop
xchg
mov
mov
add
fiadds
jmp
movsl
adc
iret
push
imul
jb
jecxz
mov
int3
mov
pop
sahf
mov
lods
roll
pushf
idivb
mov
xchg
mov
jb
sbb
lcall
lock
daa
pop
repz
orb
lods
xchg
call
cmp
dec
out
movsb
adc
pop
imul
jbe
loopne
ja
scas
adc
add
into
sbb
popf
dec
sti
xchg
adc
and
lods
mov
push
iret
sbb
or
pop
mov
cmp
or
int3
loope
lret
pop
cmc
shlb
or
cmp
cmp
pushf
idivb
and
lea
inc
jbe
les
or
int3
lret
mov
push
jb
xor
dec
mov
in
loopne
roll
mov
xor
adc
gs
xchg
inc
aas
add
je
jl,pt
mov
lods
cmp
jle
cmc
icebp
jl
jno
pop
cwtl
loopne
scas
ficompl
cmp
xor
xchg
cmp
adc
movsb
in
xchg
add
movsb
in
mov
lahf
cltd
jbe
mov
sti
in
xchg
cmpsl
dec
xor
stc
xor
xchg
and
fucomi
mov
fwait
inc
jo
xor
js
test
push
mov
pusha
out
sti
mull
xor
dec
mov
loop
ret
or
dec
std
scas
fdiv
ret
inc
dec
aad
jae
lods
imul
mov
lret
mov
dec
jg
pop
mov
sbb
sub
test
sub
add
scas
and
incb
push
push
fildl
roll
dec
xchg
int3
aad
imul
mov
jo
add
inc
rolb
mov
repnz
sbb
jnp
push
in
into
loopne,pt
mov
xchg
sbb
insl
add
in
test
int3
enter
fsub
sub
mov
jge
adc
mov
inc
cmp
cmp
push
dec
enter
iret
out
lock
pop
push
push
popa
adcl
call
adc
shr
or
xchg
test
cmpsb
mov
pop
loope
xlat
jo
mov
sti
sbb
pop
cmp
and
xchg
decl
mov
aas
clc
scas
inc
inc
ss
call
sbb
fidivs
divb
adc
cmc
cvtps2pi
sbb
fildl
fstl
outsb
xlat
or
mov
outsb
and
cmp
and
add
xchg
jmp
out
data16
pop
xchg
xlat
sub
sti
hlt
mov
inc
loop
call
out
stc
sub
inc
dec
and
loopne
mov
inc
push
xor
sti
ds
andl
outsb
mov
fsubrs
enter
hlt
push
jb
negb
inc
inc
adc
or
std
shrl
and
hlt
push
mov
mov
xchg
loop
sub
test
pop
rcl
or
out
out
outsb
pop
scas
push
jmp
ret
std
xchg
add
int
xchg
negb
ja
sbb
xchg
and
push
xchg
xchg
ja
or
xlat
test
lds
ds
push
sub
aad
loop
cmp
mov
fsts
dec
cmp
add
add
nop
sub
pop
or
sub
mov
fisubrs
mov
mov
add
xchg
sub
movsb
fs
fstp
scas
mov
xor
xor
es
xor
cs
push
dec
pop
mov
inc
lret
pop
push
add
pop
sbb
imul
inc
in
dec
ss
fistps
sbb
dec
imul
xor
add
mov
das
mov
test
mov
icebp
repnz
sub
sbbl
dec
pop
mov
or
sbb
push
push
in
cmc
enter
cmp
stos
fdivs
jp
mov
mov
and
xor
inc
daa
aam
sbb
jmp
mov
mov
in
jno
cmc
pop
and
mov
icebp
lcall
pop
sbb
sarb
mov
sbb
dec
or
mov
push
arpl
push
outsb
cmp
dec
mov
xchg
rcrb
leave
mov
notl
push
je
fwait
movsb
push
cmp
negb
incb
inc
mov
xchg
add
push
dec
push
xorl
popa
outsl
nop
push
enter
jl
inc
xor
dec
xchg
inc
stc
sub
cmp
cltd
dec
leave
mov
jp
cmp
fisttpl
or
enter
push
mov
ja
ret
pushf
mov
pop
xchg
mov
dec
int3
rolb
and
xor
xchg
insb
test
lahf
lds
je
inc
gs
push
rorb
push
mov
outsl
dec
xchg
les
add
mov
add
xor
repz
xchg
xor
std
lret
cltd
fildll
jp
std
fisubrs
dec
arpl
shr
jnp
into
dec
iret
sahf
stos
repz
in
in
andl
lds
nop
scas
jp
insb
or
and
adc
inc
xchg
xor
or
mov
repz
or
push
push
or
and
mov
ja
push
sub
addr16
lret
push
adc
push
loope
mov
adc
test
ret
add
int3
jb
sarl
ljmp
das
icebp
mov
mov
dec
pusha
adc
pop
sbbb
lods
xchg
dec
xor
fadd
xlat
and
bound
sub
xorb
inc
repz
xor
pop
mov
mov
ja
imul
jg
mov
and
subb
push
cltd
pushl
arpl
cmpsb
sub
nop
leave
and
sbb
xor
or
shrb
xchg
jp
jb
pusha
mov
xchg
out
sub
pop
push
and
adc
pop
es
xor
stos
lods
pop
addr16
data16
adc
pop
leave
and
test
fucomp
dec
xchg
add
cmc
lock
inc
pop
adc
imul
inc
mov
cmpsb
xor
adc
add
sub
test
scas
je
rolb
mov
mov
loop
push
faddl
insl
dec
daa
testl
and
cmp
push
jmp
aad
pop
jg
ficoms
loop
call
sub
push
dec
cld
insl
loopne
lds
lret
sub
xchg
sti
aad
push
xlat
aad
aam
xchg
mov
jge
pop
clc
outsl
jno
scas
xchg
jae
xchg
mov
fidivs
mov
jnp
adc
cmp
jae
xchg
push
outsl
out
mov
aam
stos
add
fnstenv
icebp
lock
push
jb
sbb
lret
lret
push
pop
add
mov
daa
pop
inc
cmp
lahf
addr16
inc
pop
ret
test
adc
lret
dec
mov
xlat
in
jge
aaa
fcmove
inc
lock
mov
inc
das
adc
pop
dec
cmp
into
insb
ret
adc
add
xorl
xchg
sbb
xchg
sub
mov
jl
or
cmp
push
adc
or
pop
std
sbb
repnz
sbb
dec
loope
xorb
push
pop
in
mov
jg
test
fucomp
mov
movsb
pop
mov
add
dec
inc
aas
lds
mov
dec
cmpsl
dec
jno
fmuls
imul
cmpsl
mov
ret
fisubl
lods
pop
adc
inc
push
fnsave
adc
adc
decb
lret
sar
dec
imul
jmp
xor
into
aaa
fistl
daa
divb
pop
insl
aaa
sub
or
sar
and
jnp
cmc
mov
mov
jae
es
cmpsb
xor
popa
cmp
fstpt
xchg
add
add
cmp
call
outsl
loop
shll
out
imul
dec
test
fnsave
lods
clc
adc
gs
mov
pop
mov
sub
fdivrs
int
inc
pop
pop
sub
and
cmp
add
or
xor
inc
jnp
lea
and
push
inc
arpl
repz
or
and
adc
push
outsb
clc
inc
sti
jl
pop
mov
push
xor
xor
insl
arpl
mov
sbb
add
mov
or
divl
fs
lahf
cld
stos
stos
hlt
std
andl
inc
inc
aad
scas
xchg
lahf
push
sub
in
in
je
hlt
push
imul
shll
les
inc
les
adc
adc
sub
hlt
jbe
pop
xor
xor
or
inc
xchg
dec
sub
cmp
xor
xchg
push
ja
xor
bound
mov
pop
adcb
cli
popa
or
imul
inc
out
fldl
pop
shll
call
hlt
jecxz
pop
or
test
add
and
icebp
lret
mov
orb
jnp
data16
or
negb
les
jne
int
or
mov
cli
clc
fcmovnu
or
dec
push
dec
cltd
aas
icebp
dec
movsb
adc
jl
je
aam
ret
inc
pushf
xor
inc
lds
jae
repnz
cmp
stos
fcom
fbstp
in
nop
push
pop
ret
fistpll
aaa
dec
mov
shrl
fistpll
push
aam
push
negb
sub
and
rolb
sbb
jnp
jno
push
scas
cmpsb
pusha
cmp
inc
xchg
lahf
push
inc
cmp
jecxz
aaa
push
jnp
pusha
movsb
pushf
add
inc
icebp
arpl
in
push
out
mov
fimuls
jp
or
test
cli
dec
test
movsb
ds
rolb
inc
enter
scas
les
adc
cmp
into
jb
mov
mov
dec
dec
mov
repnz
bound
adc
addr16
scas
mov
cltd
movsb
sbb
cmc
or
push
repz
pop
clc
mov
call
add
sti
fisttpl
jnp
cmp
push
jo
jmp
inc
mov
ss
jl
ljmp
xchg
imul
jp
jmp
stos
call
lahf
in
jmp
or
hlt
jb
test
fstl
add
push
xchg
mov
mov
hlt
and
sti
dec
imul
int
sti
push
pop
mov
push
cmp
mov
push
lret
dec
movsb
icebp
jno
aam
push
mov
inc
mov
lds
push
mov
mov
scas
lds
fnsave
lret
in
das
in
lret
dec
sbb
movsb
sbb
pusha
popf
or
int3
add
jge,pn
cmp
add
adc
xchg
pop
xchg
in
pop
mov
or
xor
hlt
xorl
cmp
jmp
nop
mov
mov
sub
push
fdivl
gs
sbb
in
push
cwtl
xchg
jno
fs
jp
add
mov
pop
iret
popf
xchg
jno
iret
mov
repnz
lods
enter
dec
ret
mov
add
xchg
cmpsb
sbb
movsb
dec
enter
cli
std
push
cwtl
xchg
xchg
jmp
in
jb
inc
xor
icebp
xlat
dec
repz
xchg
xor
aas
xchg
dec
dec
push
inc
mov
xchg
push
sti
ror
fisttpl
cmp
adcl
repnz
nop
cmp
fwait
in
pusha
push
in
hlt
scas
dec
inc
lea
data16
loope
inc
aas
rorl
xchg
mov
int
push
xorb
arpl
test
mov
out
popf
jae
push
pop
mov
sbb
ret
scas
jl
out
dec
iret
add
mov
push
mov
xor
xchg
lahf
and
pop
or
jne
jbe
push
push
mov
adc
push
stc
add
out
stos
movsl
jl
and
fucomip
pop
hlt
aad
icebp
cmpsb
repz
mov
imul
ret
fwait
inc
jmp
xchg
or
or
pop
sbb
inc
lods
cltd
cltd
jb
add
sub
jp
into
adc
fs
out
push
xor
inc
movb
andb
lock
aam
insl
mov
pushl
in
pop
mov
pop
les
addr16
aam
jecxz
cmp
push
xlat
dec
pushf
test
xchg
push
test
outsl
mov
je
lea
ds
jp
push
mov
cmpsb
push
xchg
lret
sub
push
pop
mov
mov
out
fstpt
cwtl
stc
insb
aaa
aas
mov
xlat
stos
jno
or
scas
push
addr16
in
ret
sahf
pop
sub
sub
xchg
sahf
pushf
shlb
pop
sarl
out
add
xchg
adc
cmp
std
pushf
pop
pop
mov
sarb
test
sahf
mov
vmovss
pop
scas
inc
pop
imul
outsl
sbb
idivb
imul
adc
sbb
outsl
js
xor
inc
mov
adc
xchg
arpl
shll
dec
push
pop
jmp
add
nop
in
fcmovnbe
insb
rcll
fs
cli
cmp
jge
cmc
test
push
jge
or
fs
jns
adc
mulb
loope
rolb
jecxz
and
pop
les
jl
push
out
sti
sbb
gs
inc
stc
test
dec
nop
call
inc
push
lcall
pop
popf
adc
jle,pn
das
in
jbe
xchg
mov
ds
neg
inc
decl
and
xchg
add
push
ficomps
mov
or
imul
sub
pop
sbb
xchg
insl
rep
jbe
sub
mov
dec
sti
call
mov
lds
dec
xor
xchg
add
add
ljmp
andl
mov
xchg
fnstcw
inc
xchg
sbb
adc
inc
jbe
ja
pop
lahf
push
repnz
xor
in
push
popa
ret
leave
xlat
push
xchg
inc
mov
sti
mov
and
les
ret
pop
sti
arpl
loop
fwait
arpl
adc
out
add
ss
loop
lods
call
or
or
inc
loope
pop
loop
adc
aaa
insl
pop
out
mov
mov
lahf
add
jbe
sbb
cmpsb
xchg
mov
rol
outsb
lea
inc
aaa
pop
fsubp
outsl
push
adc
mov
or
cmp
shlb
mov
test
jl
cmp
mov
dec
cmp
push
repz
jbe
cmp
ds
cmp
pop
or
xlat
jo
imul
inc
mov
push
mov
jg
dec
push
jge
loope
scas
rolb
loop
mov
cmpb
add
add
push
sub
mov
inc
add
cmc
and
push
mov
addr16
stc
mov
pop
pop
jno
pop
push
rorl
jae
movsb
stos
repz
cwtl
sub
adc
push
cmpsl
sub
test
cmpsl
xor
and
stos
cmp
fidivs
push
jb
mov
cmp
mov
mov
push
shl
out
mov
dec
dec
xchg
mov
push
pop
jg
test
js
push
mov
xchg
mov
add
out
inc
or
add
dec
das
ret
sub
pop
or
lcall
inc
fdivp
add
fcoms
xchg
xor
inc
add
ror
lea
and
fcomps
nop
push
in
mov
ror
sbb
push
sahf
jnp
inc
mov
and
mov
pop
mov
xchg
jecxz,pn
std
int
pop
or
cmp
iret
sub
lea
sahf
ret
fs
test
repz
aas
ss
or
mov
push
mov
out
lods
test
imul
out
mov
test
iret
or
test
je
out
fpatan
out
leave
arpl
xchg
dec
and
inc
orl
imul
clc
mov
leave
insl
inc
test
cli
pop
adc
add
mov
fwait
outsb
jb
dec
add
loopne
or
cmp
movsl
jp
insb
xchg
ror
pop
jae
test
mov
in
ds
out
and
gs
mov
mov
pop
lock
lds
xor
xor
xchg
cld
in
dec
mov
aas
cli
jnp
in
popa
inc
push
hlt
push
shl
jp
movsl
cmp
enter
jbe
out
rclb
adc
add
aam
stc
dec
adc
iret
push
imul
xchg
test
mov
popa
adc
xor
mov
mov
and
imul
cmp
lods
cld
outsl
mov
dec
mov
and
int
push
or
cs
add
lret
mov
inc
out
scas
lods
jno
bnd
xor
mov
xor
inc
or
fucomi
inc
xor
mov
inc
push
rcrb
cmp
test
loopne
repz
aam
movsb
adc
mov
inc
stos
jle
inc
imul
imul
push
jne
cmp
aam
adc
sbb
aad
icebp
ret
mov
fadds
push
mov
sub
jo
stc
je
faddl
js
mov
dec
pop
shr
pop
mov
xchg
wrmsr
hlt
mov
fidivrs
mov
pop
dec
cmp
popa
movsl
xor
movsl
sbb
dec
adc
cwtl
aad
jmp
pop
dec
out
jb
mov
sti
je
cli
lret
ja
and
dec
mov
hlt
mov
dec
pop
in
and
sysret
lret
add
xor
insl
sbb
inc
mov
jp
jo
dec
mov
inc
sbb
push
mov
cmp
mov
jae
push
push
sbb
insb
add
dec
fwait
test
data16
mov
mov
in
pop
hlt
stos
adcb
sti
es
out
jge
push
xchg
leave
or
jle
sti
sahf
sbb
fnstsw
mov
int
mov
push
xor
xchg
sub
pushf
xor
pushf
push
das
out
mov
sbb
leave
inc
mov
rcrl
sbb
mov
in
adc
xchg
pop
push
pop
pusha
ss
ret
jnp
aaa
push
adc
outsl
imul
sahf
xor
arpl
pusha
inc
push
adc
and
imul
mov
xchg
scas
xor
jno
adc
inc
dec
fisttpl
std
adc
daa
push
or
push
jnp
inc
jl
js
push
sub
mov
cld
stos
ds
or
jecxz
cwtl
jns
mov
adc
cltd
add
cmc
enter
out
mov
jnp
mov
ret
pop
shll
jns
movsl
pop
int3
sbb
sbb
mov
aad
rorl
and
nop
xchg
rcll
adc
xchg
sub
cld
popa
cmpsl
adc
cmp
stos
ret
and
mov
mulb
jns
les
roll
mov
adc
in
mov
xlat
jmp
rcl
daa
push
lds
call
jb
in
shlb
pop
push
adc
ficomps
mov
push
insb
cwtl
sbb
loope
jl
lret
sub
pop
das
lahf
aam
xor
inc
or
test
adc
mov
jmp
lret
and
out
icebp
call
jl
cmp
mov
adc
out
cmp
and
push
jo
push
and
test
pop
addr16
mov
sahf
in
repnz
cli
test
mov
or
push
lcall
in
call
cmp
pop
nopl
std
jmp
pop
fwait
out
mov
push
lret
sbb
add
push
adc
sti
lret
cmp
out
dec
aas
jle
popf
cli
lock
jmp
inc
dec
addr16
shlb
in
xor
add
mov
lds
nop
sub
fptan
movsl
subl
jg
mov
pop
adc
jb
sub
sbb
hlt
mov
jle
fistpl
repz
dec
mov
pop
pushf
pop
inc
dec
insl
mov
mov
sbb
sub
push
push
test
and
addb
add
lods
sti
cmp
jle
or
lods
in
push
cmp
cvtdq2ps
popl
mov
dec
push
fdivl
scas
dec
xor
mov
dec
dec
pop
les
divb
jp
jp
shrb
out
mov
js
sahf
ss
jge
mov
ljmp
sub
rcrl
or
mov
in
xor
je
lret
in
pop
push
pusha
inc
loope
in
lock
popa
daa
mov
push
ja
dec
cmp
mov
and
das
ret
adc
jecxz
out
mov
popa
dec
mov
lahf
mov
fmul
inc
xchg
fdivs
adcb
pop
ljmp
in
lcall
dec
add
jb
and
xlat
movsb
inc
cmp
jns
sub
lods
rorb
mov
or
xchg
jbe
insl
js
push
mov
icebp
or
ret
push
dec
jmp
loop
push
cmp
adc
sar
jae
jno
push
cli
lock
aad
outsb
dec
cmpsb
mov
loopne
loop
cltd
add
sti
pop
fstpt
clc
sub
aad
ds
dec
and
mov
xor
movsl
jle
sbb
in
inc
mov
push
lret
rclb
stc
xor
adc
sbb
adc
fisttpl
mulb
sub
fldenv
jns
adc
das
fimuls
stos
ljmp
xor
mov
loopne
sbb
xlat
ja
jle
subps
iret
cmc
pop
mov
adc
outsl
bnd
call
mov
insb
ljmp
jg
lea
cmp
mov
sub
jbe
sbb
sbb
dec
push
jmp
push
lcall
ss
inc
and
loop
call
adc
lret
flds
mov
mov
repnz
cmp
cwtl
mov
loope
xchg
ja
shrd
stc
sbb
jne
ret
push
jae
leave
aad
xor
stos
sahf
aad
pop
cli
scas
fnstcw
jae
xchg
movsl
pop
add
push
stos
cmp
dec
lods
fmuls
and
ljmp
mov
scas
add
lcall
je
push
mov
ss
sbbl
idivl
jmp
cltd
divb
jl
push
cld
cmp
loopne
push
adc
push
into
iret
lods
in
andl
jns
lcall
push
or
cmp
test
adc
sub
xchg
cmp
in
push
mov
in
and
in
push
and
jl
mov
inc
sub
sub
push
jmp
add
dec
mov
mov
sbb
repz
and
push
pop
nop
xor
mov
ficomps
out
jge
incb
jge
xchg
stos
sub
mov
mov
mov
xchg
xchg
pushf
jns
cli
fnsave
pop
stos
cmp
inc
adc
sti
cmp
push
das
sahf
push
mov
cmc
scas
mov
sbb
aad
mov
inc
xchg
jne
popf
xchg
fstpl
sti
sahf
cmp
adc
outsb
out
mov
adc
sub
mov
cmc
dec
jmp
dec
sahf
dec
lock
push
testb
out
sahf
fsubrl
mov
lahf
sub
adc
decb
testb
fs
popf
stos
imul
xor
imul
add
dec
and
jnp
sahf
and
shlb
jnp
xchg
push
sub
push
out
sub
xchg
enter
lea
out
push
sub
in
push
dec
xor
xor
jmp
pop
mov
les
dec
mov
and
mov
out
push
add
lds
xchg
imul
push
xchg
mov
push
and
xchg
xor
push
rclb
dec
sub
pop
pop
out
mov
in
movsl
shll
push
mov
mov
in
loope
xlat
daa
pop
add
cmp
in
mov
sub
inc
push
daa
int
js
xlat
dec
adc
stos
lret
adc
in
xchg
scas
ja
or
push
stos
ss
cmpsl
std
lods
addr16
in
stos
das
test
add
dec
out
pop
cmp
cmp
xchg
jae
dec
cwtl
xor
fstpt
idiv
cmpsb
arpl
jl
sbb
adc
lock
pop
jae
sbb
mov
xchg
ss
imul
pushl
mov
in
cwtd
or
lock
push
jmp
scas
push
xor
xchg
xor
out
add
jecxz
into
cmp
ret
dec
push
sub
and
dec
es
enter
ds
mov
mov
movsb
scas
aaa
and
xor
mov
lret
push
movsl
add
std
psubusb
mov
dec
push
sub
js
add
adc
mov
jp
rsqrtps
push
sbb
and
adc
lea
inc
fisubs
xor
mov
sub
stc
aad
cmp
pop
pushf
lds
adc
jae
and
add
sub
lods
jecxz
jp
imul
cmp
mov
outsl
into
mov
sbb
sub
mov
insb
mov
cmp
adc
cwtl
cmpsl
aaa
inc
mov
mov
ficoml
gs
mov
mov
push
scas
imul
inc
lret
cmpsb
jecxz
xchg
enter
sbb
xchg
nop
test
in
mull
hlt
mov
pop
daa
xor
je
int3
das
add
test
pusha
aas
mov
mov
loope
test
add
dec
in
mov
ss
or
aaa
push
xor
mov
sbb
and
cmpsl
ss
testb
dec
neg
testl
pushf
mov
sbb
clc
mov
jne
repz
sub
push
sub
xor
ljmp
dec
pusha
or
sub
inc
cld
je
mov
in
xchg
ret
cs
cld
push
add
int3
subb
pop
inc
ds
jl
fwait
or
adc
jnp
inc
sub
pop
or
and
pop
mov
jne
push
out
mov
cmp
sti
lods
aad
inc
sbb
ljmp
push
ja
add
cmc
cld
cmpsb
pop
ficoms
pop
and
insb
push
fadd
jecxz
mov
ja
fmull
fmuls
xor
movb
jnp
cmpsl
pop
clc
cs
popa
add
cmp
imul
pop
push
dec
mov
mov
pop
ss
jl
out
dec
jnp
inc
imul
inc
fcomps
sbb
lods
or
mov
sbb
mov
pusha
stc
inc
sub
mov
xchg
test
inc
fildll
insb
fdivl
add
in
cmp
push
in
hlt
out
fwait
mov
sbbb
adc
mov
mov
popa
repnz
sbb
mov
push
xchg
sub
cwtl
lods
fdivl
test
add
test
push
mov
pop
js
aad
adc
rorl
xchg
je
sbb
lods
int
shlb
mov
mov
pop
imulb
and
rolb
movsl
sbb
popa
inc
jno
adc
xchg
jg
jecxz
and
addr16
arpl
ficomps
fdivrl
dec
in
add
mov
lret
or
and
addl
pop
lret
cs
dec
and
pop
leave
cmpsb
push
jo
mov
nop
inc
andb
mov
icebp
orb
pusha
aam
pop
aad
fst
push
imul
stos
xor
out
add
push
addr16
in
cmpsb
jae
and
inc
pop
sub
pop
loopne
inc
jns
adcb
adc
outsl
xchg
fwait
mov
enter
mov
cwtl
aad
out
or
dec
xchg
cmp
mov
movsl
cli
xor
or
jns
gs
pop
outsb
inc
call
dec
jp
outsl
test
in
out
fcmovnu
jg
add
push
andl
jo
outsb
fnstsw
scas
fmul
pop
or
leave
pop
aam
sti
mov
cmp
fisubrl
cs
cmp
sbb
gs
mov
sti
xchg
push
icebp
mov
jb
inc
add
mov
mov
pop
pshufw
push
ds
dec
fs
daa
jo
in
mov
adc
adc
push
loopne
lea
pop
mov
mov
dec
int
repnz
inc
scas
std
ljmp
ds
jbe
loopne
in
push
test
inc
jg
adc
aad
pop
lea
add
and
es
mov
arpl
push
or
mov
adc
pushf
add
cltd
das
inc
add
or
mov
push
popf
inc
int
out
xlat
inc
push
add
int3
or
test
stc
mov
jns
mov
andb
push
lret
stos
cwtl
sbb
fmuls
and
xor
add
out
mov
mov
mov
mov
mov
decl
aas
in
fmull
mov
sarb
push
loopne
and
cmc
jmp
xor
rclb
jo
mov
pop
test
scas
bound
aas
inc
xor
sbb
add
mov
jne
arpl
xlat
push
dec
mov
stos
or
adc
jge
adc
push
mov
fadd
or
pop
xchg
and
les
or
test
hlt
mov
xchg
mov
mul
and
sub
mov
flds
imul
or
je
mov
xor
aas
sub
scas
int3
mov
xlat
mov
in
ja
push
outsb
inc
push
je
xchg
sub
xchg
loop
cmp
jge
jecxz
loop
hlt
call
jge
mov
sbbb
les
push
in
idiv
test
lods
insb
les
int
mov
shrl
xchg
adc
sbb
fbstp
orl
lods
pop
inc
sti
or
mov
insl
in
mov
cltd
mov
push
cmp
xor
pop
dec
ljmp
js
jp
sbb
inc
push
add
adc
int
push
cmp
sti
mov
sti
mov
inc
fs
mov
and
std
jge
sbb
scas
push
repnz
sub
hlt
mov
dec
gs
enter
mov
scas
in
jno
sub
les
outsb
imul
cmp
add
rep
push
lock
or
fistps
pop
pop
mov
push
pop
mov
js
push
pop
or
in
pop
das
lock
pop
xchg
lahf
push
cmc
jl
push
sub
aas
mov
gs
jmp
mov
inc
lods
popf
mov
je
mov
pop
and
cmpsl
sub
imul
popa
imul
xor
inc
or
xor
imul
lods
decb
repnz
cs
movsb
push
lods
andl
push
xchg
out
pop
mov
fdivs
xor
stos
scas
sub
adc
into
insl
ret
pushf
pusha
fdivrl
lcall
mov
lods
hlt
mov
jp
lahf
enter
add
dec
sbb
ret
int
aaa
ret
test
inc
adc
or
or
les
pop
shrb
mov
insl
and
std
iret
jnp
xchg
aad
div
mov
pop
and
jne
mov
in
pop
mov
mov
mov
jmp
mov
push
mov
xor
sub
enter
ret
xchg
int3
repnz
xchg
mov
imull
xchg
and
mov
and
enter
aad
notl
lret
xchg
es
or
fmull
mov
and
ljmp
mov
aad
out
test
mov
push
je
out
call
mov
add
xor
loope
xor
in
jle
in
xchg
int3
daa
cmpsb
push
cmp
inc
inc
inc
fistpl
lods
sub
lcall
aad
and
sub
pop
loopne
jp
add
fwait
pushf
in
or
push
xorb
in
stos
pop
mov
pop
or
stc
shlb
mov
push
push
lcall
lcall
xchg
pop
lods
sub
pop
out
adc
push
sahf
ljmp
in
ss
or
push
jne
shl
inc
insl
mov
es
dec
add
cmp
cs
cs
out
push
test
outsb
ljmp
jl
pop
mov
lds
cmp
mov
mov
mov
cmp
and
mov
je
sub
push
xor
int
cmp
out
shlb
fldt
ss
psadbw
ljmp
sahf
pushf
jns
outsw
out
popa
xchg
aam
or
xchg
jmp
call
sti
jp
jle
int
outsl
loope
push
mov
fs
popa
inc
repnz
mov
sub
jo
dec
mov
and
sub
xchg
es
sbb
mov
sbb
in
mov
loope
xchg
xchg
lret
fs
sarl
cli
das
mov
sub
movsb
fdivrp
mov
les
pushf
out
dec
and
daa
mov
pop
add
mov
idivl
lret
jle
icebp
pop
imull
push
lcall
test
clc
jge
cwtl
loope
dec
adc
push
popf
dec
aam
movsl
fs
or
icebp
jge
stos
loop
aam
pop
cmp
testb
fcomps
cmp
mov
imul
lock
test
je
push
js
push
jae
pop
xchg
lea
pop
movsl
aad
mov
and
pop
mov
mov
inc
mov
mov
add
add
push
mov
outsb
pop
add
jmp
xchg
add
dec
cmpsl
stos
out
xchg
adc
punpckhwd
xor
scas
xchg
mov
jbe
sbb
dec
inc
aad
outsl
les
std
fldcw
mov
es
pop
aas
jmpw
pop
out
out
push
mov
cmpsb
lods
das
fcompl
stos
call
lcall
enter
or
and
int
or
movsb
push
cli
mov
mov
scas
outsb
inc
cmp
dec
cs
lods
pop
jmp
mov
in
divb
mov
popf
ja
insb
aad
mov
in
dec
xlat
test
push
movsb
cmc
das
lea
mov
inc
es
sub
or
jmp
or
mov
ss
and
mov
add
sub
mov
mov
mov
mov
jg
test
stos
cltd
aam
push
push
sub
js
mov
xorl
das
push
mov
scas
push
mov
es
out
sub
or
mov
adc
ljmp
and
push
cmp
lahf
push
inc
push
inc
or
cmp
iret
and
or
dec
enter
sub
lret
and
mov
mov
daa
jl
out
jo
sbb
adc
and
cmpsb
call
dec
push
xchg
sub
xchg
xchg
dec
push
push
push
movsb
repz
lcall
test
lock
xchg
iret
ret
cmpsb
dec
jecxz
xor
lea
cmp
jp
out
fdivs
int3
adc
mov
lock
popf
cmp
or
inc
cmp
loope
pushf
mov
jbe
mov
fmull
jnp
les
inc
shlb
js
add
mov
dec
cmpsb
fidivrl
mov
push
adc
shll
sbb
repnz
popa
xor
mov
xchg
and
push
xor
pop
flds
and
pop
inc
fisttps
inc
pushf
push
jg
into
mov
xchg
pop
lock
in
fs
sbb
hlt
mov
or
xchg
or
mov
mov
sub
fstps
adc
out
add
lock
and
sahf
add
ret
push
inc
jb
pop
xor
mov
and
sbb
pop
pusha
or
inc
je
fs
xchg
add
cmp
cmp
mov
cmp
mov
sbb
testb
push
mov
pop
add
mov
lahf
cmc
shlb
jle
xchg
xchg
nop
mov
adc
mov
xchg
imul
test
xor
jle
xchg
fcmovb
add
inc
cmpsl
ljmp
out
popl
inc
mov
mov
icebp
loopw
xchg
and
lods
es
sub
inc
fwait
cmp
push
and
dec
les
push
pop
mov
push
mov
mov
pop
pop
fcmovnu
loopne
inc
cltd
ja
fstpt
adc
or
add
pusha
cli
and
inc
lods
pop
movsb
test
inc
inc
cs
and
mov
jge
mov
lcall
inc
stos
mov
xchg
loop
and
in
xchg
inc
jb
out
xor
pop
adc
rcr
dec
and
jae
add
cli
sub
mov
fld
leave
jmp
hlt
jge
stos
mov
xor
add
or
add
xor
jmp
loope
add
mov
mov
les
mov
inc
or
adc
mov
push
mov
testl
jge,pt
out
pop
push
adc
je
sbb
mov
xlat
test
mov
sbb
aaa
pushf
mov
xor
xor
jmp
mov
movsb
or
inc
push
fcoms
xor
adc
jb
decb
mov
sub
mov
cwtl
xor
lods
adc
loopne
push
mov
aam
jne
enter
imul
neg
test
lds
in
mov
js
test
mov
jg
icebp
and
enter
enter
jp
outsl
call
test
sub
popa
loope
pop
iret
inc
cli
aas
mov
std
mov
jno
lcall
test
ds
sbb
jae
movsl
stc
mov
push
enter
idivb
or
and
lods
stos
clc
push
mov
sub
jns
dec
xchg
cmp
pop
je
xchg
cltd
aad
ss
hlt
xchg
cltd
and
cmpsl
enter
rorl
inc
sub
movl
aad
mov
cli
push
dec
dec
jbe
or
add
test
xor
rorl
in
jbe
arpl
jb
adc
cmp
jl
adc
outsl
stos
outsl
mov
push
mov
sbb
jae
cmpsl
inc
dec
call
arpl
sub
xchg
pop
jg
mov
mov
cltd
inc
cmp
cmp
dec
sbb
jb
subl
mov
xchg
or
xchg
push
pusha
das
mov
out
jne
jecxz
xor
xor
popa
loopne
pop
jmp
jno
push
mov
xor
jns
pop
xchg
push
mov
aam
jb
fwait
les
stos
ss
out
sbb
out
jmp
sub
jno
arpl
jecxz
lahf
adc
jo
jb
std
mov
fs
adc
xor
pop
les
push
or
loope
sti
arpl
mov
jge
shll
pop
add
gs
insb
int3
and
sub
rolb
or
subb
mov
rcrb
pop
sbb
std
adc
lods
das
clc
sbb
aam
mov
leave
out
mov
mov
fsub
cmpb
xor
int3
add
sbb
jmp
xchg
pop
push
test
lods
popf
les
xor
jmp
popa
xchg
fwait
mulb
push
push
xchg
pushf
xorl
push
mov
mov
mov
dec
adc
insb
xchg
mov
mov
push
das
add
and
mov
sbb
xchg
and
push
cmpsl
and
daa
std
push
dec
rcll
add
push
shlb
cwtl
sub
mov
pushf
pop
aam
ret
fstpt
sti
fmuls
push
sbb
in
cmp
shl
adc
push
dec
je
cli
inc
xchg
cs
push
cmp
push
fwait
lcall
stos
movb
imul
ror
mov
flds
repz
mov
arpl
pop
sub
xlat
add
fldenv
mov
pop
sbb
dec
and
mov
push
jb
sbb
dec
cmc
sbb
mov
hlt
or
fldl
mov
cmc
ret
inc
sbbl
sub
xor
cs
inc
fisttpl
mov
xchg
xchg
sub
add
into
out
int
xchg
fldcw
into
or
add
pop
sub
mov
in
sbb
cli
xlat
addr16
xchg
aam
and
jecxz
daa
rorb
imul
sub
ljmp
test
sub
inc
stc
xor
jl
dec
insb
sbb
mov
jnp,pn
jmp
enter
pop
outsb
jmp
test
pop
cmp
xchg
test
stos
push
jp
and
clc
sbb
push
dec
into
rorb
and
cmp
fucompp
adc
inc
repnz
lcall
and
adc
push
push
cmp
test
mov
mov
add
jle
movsb
lret
sub
repz
xor
xlat
xchg
sarb
inc
pop
mov
arpl
dec
mov
inc
lahf
loopne
cmpsb
sub
gs
popf
xor
rclb
lock
cmp
mov
std
pushf
push
sub
ljmp
and
outsb
or
int3
or
add
pop
movsl
adc
sbb
xchg
cwtl
std
xor
sub
dec
daa
lret
pushf
push
sbb
jg
imul
repz
dec
jle
xchg
je
or
adc
cmp
xchg
popf
cmp
xchg
sahf
testb
and
test
add
lds
cwtl
in
popa
shrb
push
xchg
push
pop
add
xchg
xor
mov
inc
jl
mov
aaa
cld
cmpsl
mov
push
pop
pop
jg
hlt
ficompl
ds
cmp
insl
inc
icebp
push
aam
lahf
mov
push
adc
ja
incl
inc
in
pop
nop
mov
nop
shll
iret
leave
aam
pop
decl
jnp
push
addb
jg
mov
loop,pt
aaa
rol
das
or
lret
xchg
sub
jg
stos
in
pop
push
insb
pop
push
call
loop
adc
imul
inc
cli
and
inc
popa
mov
xchg
outsb
pop
mov
loop
mov
daa
sbb
pop
loop
movsb
hlt
mov
stc
jns
push
add
push
es
or
popa
repnz
mov
mov
or
cli
or
or
sar
out
shll
out
dec
sbb
stos
das
mov
fisubrl
and
fsubrp
js
std
movd
mov
lea
fldcw
xchg
sub
push
lcall
jno
mov
pushf
jnp
sub
sbb
fs
clc
das
fsubrs
clc
inc
test
imul
add
adc
loop
add
jns
cmp
cli
into
imul
sti
push
out
je
xchg
outsb
push
mov
and
lock
jns
dec
mov
ficomps
sub
adc
test
loope
mov
push
jns
xor
fbld
inc
dec
xchg
push
ffreep
mov
inc
push
xor
add
add
jns
sbb
imul
and
jg
push
outsb
cmp
or
xchg
out
xor
sbbb
mov
mov
xchg
or
inc
xchg
arpl
sub
xchg
or
dec
mov
jmp
cmpsl
inc
and
jno
jge,pn
lds
idivl
clc
sub
out
das
cmp
ds
pop
test
or
pop
mov
roll
mov
cli
scas
imul
sbb
dec
xlat
dec
decb
nop
rclb
fsubl
adc
pop
insl
ret
rclb
xchg
sub
shll
mov
ret
cmpb
push
push
setb
stc
and
test
or
movsb
leave
xor
pop
lea
or
les
nop
es
xor
out
out
stos
jnp
push
daa
insl
and
int3
dec
sahf
and
pop
stos
dec
pop
int3
mov
xchg
inc
add
xchg
in
jg
mov
and
mov
int
push
dec
and
rolb
sbb
data16
popa
cmp
ljmp
jl
repnz
or
fcom
and
or
inc
lock
rcr
je
rcrb
push
pop
aaa
loopne
aam
idivb
lods
out
scas
fwait
das
sbb
fildl
fstps
adc
mov
sbb
jg
dec
sub
xchg
adcb
and
das
sbb
jne
cmp
mov
mov
imul
aad
lods
out
mov
dec
push
mov
pop
call
aas
loopne
lods
and
shll
sub
repz
testb
sub
pop
fcomp
mov
jns,pt
scas
loopne
mov
pop
mov
jo
insl
mul
movl
sub
dec
mov
sub
je
push
ss
jb
push
repz
mov
jbe
mov
arpl
pop
in
out
cmp
mov
inc
sub
xchg
jp
lds
vmovdqu
adc
sub
dec
sbb
pop
push
pop
sbb
mov
or
bound
test
iret
scas
mov
mov
out
fildl
mov
or
pop
adc
adc
int3
lahf
adc
mov
xor
or
cmp
sbb
test
dec
pop
je
pop
add
in
ds
mov
ficompl
fdivl
insl
imul
pushf
popf
sahf
xorb
adc
jg
cli
dec
dec
outsl
mov
inc
addr16
adc
sub
push
faddp
hlt
cmc
sbb
iret
mov
int3
xchg
mov
mov
test
xlat
cmp
shrl
pop
mov
fcomps
sbb
enter
jmp
or
mov
jns
dec
jl
xor
add
push
push
pushf
movsb
sti
or
add
enter
mov
sub
das
mov
mov
jnp
decl
test
push
fidivs
inc
js
in
lock
xor
mov
xor
pop
jne
add
adc
enter
ror
sub
stc
mov
jl
mov
repz
outsl
xchg
jne
ds
jb
rorl
mov
mov
or
xlat
xlat
cmp
sti
pop
dec
inc
and
ret
mov
test
leave
jnp
or
mov
rclb
lods
push
add
mov
ret
ss
sbb
mov
movsl
sub
repz
add
fdivrs
sub
das
test
xor
sbb
inc
jl
jbe
das
mov
mov
jae
dec
jmp
es
mov
jle
adc
sub
push
shlb
cs
dec
leave
pop
jb
dec
sbb
in
addl
and
mov
lret
inc
shlb
dec
mov
mov
sti
sub
push
push
mov
pop
sbb
dec
fwait
xchg
movsl
rcrl
cltd
jge
sbb
or
xchg
fisubs
pop
fs
inc
sub
xlat
pop
fwait
iret
stos
dec
cs
pop
xchg
out
push
dec
mov
jl
adc
and
stos
push
xchg
or
lret
popa
pop
cmp
add
jge
hlt
ret
push
xor
xchg
ds
popf
pop
cmp
out
cli
jg
divl
push
bnd
aad
xchg
add
adc
xor
push
jmp
add
xor
aaa
sub
or
and
in
mov
hlt
lret
test
push
lahf
jp
scas
push
loope
fistpll
sbbl
loopne
add
cmpsb
mov
andl
sbb
cmpsl
daa
ss
add
aam
popa
popa
movsb
sbb
pop
std
ret
das
jne
jb
mov
and
lahf
mov
push
and
scas
lock
mov
adc
mov
ja
cwtl
mov
adc
repnz
push
loopne
mov
mov
jnp
shrb
loopne
dec
lds
popf
sbb
add
popl
and
ret
jne
das
jnp
mov
inc
int
push
inc
sarl
xchg
cmc
xor
cmp
xchg
es
jbe
lock
jmp
push
sbb
mov
sub
sbb
insl
sbb
dec
xor
push
cmp
sub
sbb
add
push
add
cmc
imul
jp
int3
addl
test
xchg
stos
jns
fwait
repz
adcl
jbe
orl
fdivl
fcmovu
mov
pop
subl
je
sbb
out
and
in
rclb
aad
or
push
call
daa
fwait
pop
int
inc
icebp
and
ss
inc
fstl
and
jae
sbb
adcb
popf
pop
repz
sbb
pop
pop
adc
in
mov
jnp
cmc
imul
xor
into
int3
loopne
mov
mov
pop
push
or
outsb
xlat
fucomip
pop
xorl
cmp
push
sub
and
aas
mov
inc
push
loopne
jmp
aad
cmp
ror
pusha
and
mov
imull
frstor
adc
test
jbe
sbbb
push
clc
test
sub
jg
jno
je
pop
shr
fnstcw
and
aad
ljmp
sti
and
push
shll
jne
cmc
addl
xchg
sbb
cmp
push
mov
popf
mov
push
push
in
sbb
bound
jne
or
sti
ja
jbe
push
loop
in
xor
sbb
daa
pop
cs
cmp
inc
cli
mov
or
push
dec
push
leave
imul
xchg
rclb
repnz
int3
call
mov
mov
arpl
sbb
mov
pop
xor
mov
dec
and
or
stos
fcmovbe
push
cs
cli
mov
fldl
fwait
loop
or
cli
fs
push
mov
mov
mov
bound
inc
stos
loopne
aad
dec
jne
mov
xor
inc
hlt
and
push
addr16
xor
daa
dec
rcr
test
call
add
not
adc
cmc
jmp
cli
jne
pushf
shr
sti
aad
mov
cmp
lret
inc
dec
test
jp
adc
ss
sub
pusha
dec
nop
pusha
sub
jb
xor
daa
mov
outsl
xchg
cmpsl
push
scas
subb
mov
fnstenv
or
xor
cmpsb
mov
xchg
cmp
int
pop
insl
sbb
mov
cltd
add
inc
mov
inc
addb
popa
cmc
iret
sahf
lret
pop
pop
push
jp
rorb
arpl
mov
sbb
fisubrl
dec
jb
adc
in
in
bound
inc
push
add
ss
dec
sub
in
sub
int3
ljmp
xlat
pop
andl
push
push
xchg
push
scas
jl
and
repz
adc
aam
push
int3
or
push
sub
ror
pop
dec
dec
mov
ja
filds
inc
sbb
pop
decb
dec
cltd
cmp
and
inc
inc
push
movsb
cmpsb
jg
cmpsb
rcll
les
or
sbb
inc
not
jne
mov
adc
imul
rclb
dec
int3
imull
dec
cmp
inc
xor
adc
mov
mov
fisubrl
sub
xor
push
out
popa
cmpsl
push
push
add
rclb
mov
cwtl
loop
nop
call
sbb
and
fistl
jmp
or
scas
and
cmp
loope
lret
xchg
lods
sub
inc
bound
or
xor
stos
adc
lock
adc
sbb
das
in
pusha
addr16
rcll
cld
in
out
push
out
in
jae
imul
and
mov
lods
cmp
mov
adc
adc
mov
inc
dec
bound
lcall
das
add
je
sbb
ja
test
out
xor
ds
mov
push
icebp
cmpb
push
outsl
push
ficompl
and
nop
cwtl
out
adc
xchg
pop
cmp
dec
sbb
notl
cld
mov
rcr
push
leave
sarl
fildll
add
push
xor
inc
jo
icebp
push
push
scas
dec
add
and
mov
nop
push
hlt
rclb
inc
ss
repz
adc
mov
lods
mov
jmp
loopne
inc
xchg
aas
popf
or
jo
testl
in
mov
mov
add
andb
push
inc
loop
jns
fiadds
and
repnz
mov
js
and
stc
pop
mov
inc
fsts
imul
scas
fcmovne
push
mul
push
xchg
repz
loope
xor
dec
add
loope
push
nop
add
stos
imulb
xlat
lret
pop
es
shlb
jbe
pop
insb
push
dec
iret
lea
fs
xlat
pop
repz
and
loope
pushf
sti
cmc
push
icebp
inc
xchg
outsl
jb
and
push
pop
scas
xchg
adc
gs
movsb
test
repz
or
jb
hlt
daa
lods
sub
xor
push
stos
leave
sub
adc
out
sbb
bound
addb
mov
je
mov
imul
ds
push
jo
xor
xor
nop
xor
sub
sbb
lock
xor
and
shlb
dec
mov
movsl
arpl
rcr
cld
inc
shlb
andl
jbe
jmp
adc
ljmp
cmp
outsl
or
cmp
into
and
inc
cmpsl
ficoms
xor
lret
in
fcompl
mov
cmpsb
dec
mov
and
test
hlt
lret
adc
pop
mov
cld
mov
call
es
cmp
inc
mov
mov
mov
mov
xor
mov
add
dec
sbb
aaa
sbb
pop
add
dec
jg
or
pop
xor
or
or
orb
addl
icebp
insb
xchg
es
aas
cs
aam
js
jp
add
ja
stc
test
xchg
pusha
mov
xchg
push
inc
cmp
loope
insb
jne
stos
cmpsb
xchg
mov
sahf
cmpb
cli
fisubs
cmp
popf
rorb
lret
das
or
mov
xchg
push
scas
or
jns
jmp
inc
dec
push
loopne
addr16
push
and
lea
cmpsb
mov
sub
sub
sbb
int
mov
adc
or
jbe
bound
fdivrl
xor
cltd
js
jne
push
aaa
js
xchg
movsb
in
lret
out
sti
jo
sbb
adc
add
and
inc
out
ret
sub
sbb
sub
mov
push
lods
jp
shrb
insl
in
cmp
fisttps
gs
fimuls
mov
je
mov
das
sub
insl
xor
jge
jbe
inc
movsb
xorb
push
lcall
sbb
mov
jecxz
jnp
stos
popa
and
push
sbb
sub
pusha
inc
pushf
pop
hlt
sahf
pushf
lcall
mov
fwait
bnd
xchg
repz
mov
pushf
lret
insl
popf
sub
aad
mov
out
jb
or
cmp
in
jae
cmpsl
jmp
lods
mov
sub
push
movsl
sub
scas
jne
insb
cmp
pop
dec
mov
shll
jl
sbb
das
sbb
movsb
lret
jmp
jmp
dec
inc
stc
or
call
mov
adc
sub
or
in
inc
dec
inc
fidivl
xchg
push
mov
jae
xchg
enter
cltd
idivl
mov
pand
inc
loopne
and
pop
dec
insl
jbe
push
jg,pt
sub
mov
xchg
dec
pop
cmp
pop
inc
push
aam
cmp
aam
dec
adc
lret
push
add
cmp
add
test
cs
dec
xor
dec
int
pop
popa
popa
mov
or
sti
pop
push
das
cli
iret
pop
push
mov
in
rcrb
lods
pop
cwtl
pop
test
jle
xlat
adc
lods
lcall
outsl
je
fdivs
cmc
loop
in
push
inc
dec
push
mov
cmp
pusha
jae
add
mov
push
lahf
mov
jae
mov
or
test
inc
push
ljmp
out
pop
test
xchg
popa
cmp
aas
add
adc
aas
stos
pop
jg
sti
mov
cli
pushf
insl
mov
ds
loop
pop
add
xchg
jns
pushf
xor
cmp
scas
idiv
fimuls
les
and
mov
pop
xor
repnz
jnp
dec
test
mov
ja
enter
loop
arpl
test
and
rorl
pop
push
xchg
or
xlat
jge
dec
les
jmp
and
dec
sbb
adc
xor
pop
mov
sbb
rcrl
inc
mov
dec
aaa
in
loop
jns
pop
jp
inc
rorb
aam
imul
stos
mov
mov
dec
ja
mov
out
cltd
xor
mov
loope
popa
or
inc
mov
cmp
cltd
mov
test
pop
xorl
mov
sub
sub
pop
divb
inc
mov
push
jbe
mov
jecxz
add
loop
mov
popl
mov
sbb
push
shl
cmpsb
lret
mov
add
inc
push
mov
enter
xchg
mov
jg
aaa
pop
cmpl
andl
cltd
stos
push
xor
hlt
loop
or
xor
in
lret
xor
clc
mov
add
and
stos
inc
js
mov
cli
aam
insl
sar
inc
jge
cli
push
push
test
out
fcompl
xor
lods
mov
lahf
popa
sub
xchg
jno
jb
and
int3
bound
pop
roll
leave
fsubrs
add
lock
mov
jb
int
add
sub
add
jnp
outsl
dec
push
xor
ss
mov
push
testl
sub
inc
xlat
lea
lods
ds
ljmp
add
pop
mov
lret
mov
sbb
scas
push
mov
xchg
jo
cld
sarb
jecxz
mov
adc
or
subb
mov
xlat
mov
ret
movsbl
cvttps2pi
and
jbe
inc
pushf
inc
out
out
inc
dec
jnp
aaa
or
lods
sbb
mov
mov
sub
or
cmpsl
shll
aad
movsb
mov
mov
in
popf
inc
ret
add
clc
js
xchg
sub
sub
lret
stos
stos
movsb
push
pop
pop
lock
add
sub
test
dec
sarb
out
xor
iret
ljmp
pop
jnp
out
int
fldenv
dec
adc
or
movsb
mov
inc
inc
or
in
push
xchg
or
sub
add
into
pushf
fldcw
loop
add
test
sbb
imul
xor
xor
aam
xor
sti
sti
push
adc
xor
sub
fs
rolb
fwait
pop
gs
xchg
sar
sahf
aaa
pop
sub
scas
mov
jnp
sub
add
jnp
cmpl
push
jge
inc
lea
into
and
fdivrl
sbb
adcl
mov
sub
adc
cld
add
xchg
xor
inc
mov
add
inc
clc
xchg
jle
and
inc
and
jae
jle
inc
clc
cmp
adc
sub
cltd
or
aam
lret
jns
dec
test
cs
xchg
cmc
and
add
call
cli
mov
xor
jo
cmc
test
dec
lret
mov
lcall
fldenv
sub
ret
mov
sbb
addr16
jl
icebp
rol
xchg
dec
cltd
jle
fnstenv
xor
xlat
sub
cmp
sub
pop
ja
add
mov
push
mov
mov
xchg
cltd
in
ffree
mov
movsb
xchg
push
xchg
ljmp
in
lock
push
adc
or
call
push
dec
out
push
sbb
xlat
xchg
nop
mov
sub
jecxz
or
xchg
pop
add
jnp
xchg
pusha
call
cmp
movsl
sub
aas
test
iret
punpckldq
xor
pop
leave
decl
fwait
outsb
ret
sti
jge
mov
mov
popf
push
push
in
xchg
dec
pop
adc
adc
or
stos
sub
dec
lcall
into
jns
dec
and
loope
sub
pop
pop
rorb
test
jecxz
add
data16
cmp
imul
or
jb
fs
jp
xor
mov
or
cmp
sbb
pop
mov
mov
inc
pusha
lock
popa
mov
inc
mov
scas
mov
add
or
pop
sub
pop
dec
repz
jl
lret
mov
mov
in
push
pop
pop
sti
addl
je
fidivs
jno
xchg
pop
mov
repz
fnstcw
jecxz
in
test
cltd
out
clc
add
cmp
mov
mov
daa
aaa
les
movsb
pop
and
push
in
outsb
lahf
and
mov
popf
cld
lds
sub
cmp
shlb
mov
es
add
leave
out
pusha
insb
test
cmp
aad
sti
push
jp
mov
add
pop
dec
or
movsb
lock
jp
je
or
sub
shll
lock
mov
in
sbb
hlt
int3
fldenv
mov
mov
or
mov
shlb
cmpsl
out
rcrb
in
test
lea
btr
mov
nop
inc
xor
mov
popf
push
mov
and
push
or
mov
sbb
in
loopne
and
cmp
shll
stos
inc
notl
ret
insl
ficoml
pop
xor
pusha
cmp
in
cmc
out
cmp
in
sbb
xchg
stc
cmp
pop
dec
lret
mov
ljmp
mov
adc
and
and
or
xchg
cmp
or
push
mov
ret
push
imul
out
dec
add
and
sub
push
inc
ficoms
dec
mov
popf
push
pushf
push
addl
add
sbb
xchg
outsl
mov
mov
in
push
lret
test
xrelease
lcall
xchg
sub
lea
addr16
repnz
push
jge
jns
aaa
dec
sub
inc
out
lds
add
hlt
push
and
popa
unpcklps
iret
push
or
dec
pop
jg
push
dec
in
jmp
pop
xor
push
enter
int
mov
sbb
mov
sahf
in
and
jmp
pop
test
cmpl
enter
xchg
movsl
add
cmp
enter
test
cld
arpl
xor
lret
mov
fprem1
data16
imul
imul
in
pop
mov
inc
sbb
iret
pop
pop
outsl
pop
out
xor
sbb
sbb
sbb
scas
push
add
incb
cli
jae
hlt
scas
push
fidivrs
or
aam
lods
sbb
jae
inc
push
lret
idivl
enter
dec
push
push
sub
pop
xchg
fnstenv
iret
xor
adc
loop
pcmpgtb
aam
pop
cmc
cli
mov
mov
insb
inc
jae
hlt
xlat
dec
or
ljmp
sbb
nop
sti
repnz
push
sbb
arpl
jmp
loope
cs
je
cmpsb
ds
jecxz
push
jge
push
iret
and
mov
test
xchg
sbbb
ljmp
pop
adc
icebp
test
dec
mov
push
jno
rcrb
or
loopne
int3
cmpsl
popa
adc
test
arpl
pop
fwait
orb
and
cltd
cwtl
adc
insb
data16
sbb
xchg
sub
cli
sbb
mov
pop
adc
ss
ss
dec
xorl
push
in
sbb
icebp
mov
inc
pop
jmp
enter
xchg
add
cltd
cmp
in
outsb
shll
fucomi
out
adc
lret
add
cmova
fs
mov
inc
and
xor
sub
pusha
inc
ss
add
lds
jns
popa
lds
sahf
dec
vpaddw
jmp
or
addr16
sahf
cmp
dec
inc
cmovo
pop
mov
enter
mov
pop
movsl
jo
leave
mov
fldt
xlat
cmp
fidivrs
jbe
jb
shl
lods
pushf
shrb
mov
subl
addr16
mov
fsubrs
pop
adc
cli
lea
out
add
imul
xchg
ret
popf
adc
xor
jl
sbb
movsl
mov
mov
dec
cmp
pop
test
cltd
push
add
out
mov
sbb
adc
jb
xor
pusha
aaa
mov
pushl
add
lods
adc
mov
xchg
popf
xor
push
lods
stos
sub
in
push
clc
adc
es
shl
adc
lea
adc
scas
dec
stos
add
push
sti
pop
loope
aaa
jnp
cmp
inc
imulb
js
ror
outsb
cmp
out
in
push
jge
fstps
dec
popa
xor
cltd
out
sub
cmp
es
mov
xchg
sub
xchg
and
inc
mov
xor
testl
jmp
xorb
lea
aad
test
outsb
sub
lock
or
negb
adc
sbb
xor
dec
fstpl
mov
les
pop
mov
mov
mov
push
add
push
ficoml
insb
pop
lea
sub
test
xor
jp
xchg
fiaddl
push
int3
in
dec
addl
or
push
stos
lahf
cwtl
dec
sub
repnz
lds
hlt
ret
xor
dec
je
pusha
inc
mov
dec
jge
ss
lods
adc
stos
jmp
lcall
js
push
xor
clc
stc
pop
rclb
sbb
and
cwtl
addps
push
dec
xchg
jge
sub
in
jbe
ficomps
insl
inc
mov
and
inc
or
into
sbb
in
xlat
jo
pop
sub
jbe
mov
in
inc
cmpl
cmp
dec
lods
dec
aad
jl
scas
sar
and
mov
stos
lret
cs
call
rorl
jns
adc
movsl
arpl
aam
test
out
or
mov
mul
fdivp
mov
dec
cmp
jne
fcomi
mov
xchg
mov
inc
jbe
scas
jp
sub
pop
pop
cltd
out
sarl
divl
or
jp
or
pop
sbbb
sub
fistl
push
adc
adc
mov
clc
mov
cmp
and
js
aas
sar
ja
in
scas
inc
mov
idivb
rorl
push
testb
dec
pop
push
sub
jns
ljmp
stos
mov
ja
mov
inc
mov
cmp
inc
nop
mov
hlt
adc
xchg
repnz
sub
cwtl
add
push
es
mov
fnsave
sbb
jb
negb
jmp
pop
and
jno
in
jp
jmp
fistps
mov
mov
mov
cli
jae
imul
and
loop
ficoms
in
mov
std
shlb
inc
mov
mov
sbb
pop
cmp
cltd
ja
adc
in
mov
mov
mov
loop
pop
jp
mov
dec
pop
fstl
lods
cld
adcb
xor
gs
xchg
mov
scas
mov
jmp
mov
add
and
inc
daa
pop
repz
add
xchg
ljmp
outsl
cmpl
sbb
push
mov
jge
pop
jo
icebp
sbb
cmp
xor
lea
sbb
xrelease
fsts
daa
and
mov
std
rorl
xchg
je
imul
sbb
notl
loopne
inc
mov
mov
lret
sbb
sbb
jl
shl
adc
inc
call
cli
xor
ss
mov
ja
div
nop
stc
into
or
adc
inc
pop
mov
inc
pop
mov
jns
inc
jg
popf
cmpsb
push
gs
test
sub
mov
lods
pusha
shrl
mov
adc
mov
jns
fsub
in
cmpsb
test
mov
mov
sbb
fsubrl
xchg
imull
mov
daa
mov
inc
mulb
sbb
inc
cld
jb
enter
adc
mov
mov
or
xor
dec
mov
std
cmp
shll
rcrb
sub
mov
and
insl
inc
jns
cmc
and
cltd
ja
xor
jae
clc
call
add
pop
scas
inc
push
push
push
imul
jmp
int3
jmp
cmp
push
hlt
lock
sbb
sub
xor
mov
dec
addl
lret
push
dec
dec
push
ret
xor
push
aaa
in
adc
in
or
or
fisttps
xor
push
jmp
daa
mov
cmp
xchg
mov
or
test
xchg
daa
cmpsb
xor
in
push
add
fdivrs
repnz
jg
push
jecxz
sbb
mov
or
mov
jl
mov
aad
sbb
dec
xchg
add
adc
dec
cmp
dec
sbb
sbb
insb
sub
push
jecxz
cmp
adc
inc
jge
xchg
or
dec
pop
popa
pop
loop
pop
push
addl
adcb
into
jo
mov
in
adc
js
xchg
fldt
scas
push
out
xchg
dec
mov
arpl
bound
mov
int3
jbe
pop
stc
jo
dec
jbe
adc
xadd
ljmp
arpl
mov
cmpsl
add
cmpsb
mov
mov
jg
sti
cmp
and
jbe
pop
and
xor
sub
pop
mov
imul
inc
mov
inc
xor
lahf
ja
xchg
xchg
xchg
push
addr16
jb
daa
xchg
rolb
add
sbb
or
push
je
cmp
or
jbe
pushf
notb
mov
jb
popf
jb
adc
icebp
imul
in
mov
adc
subb
lock
jl
jecxz
cmp
push
addr16
sbb
mov
or
icebp
xor
xor
lcall
mov
ret
or
jns
mov
adc
jl
cmp
mov
xor
pop
cmp
out
add
adc
ja
adc
loop
push
es
imul
out
push
jmp
pusha
xlat
or
fcomp
mov
outsl
fsubrl
loop
fsubrl
test
int3
jge
and
nop
push
jo
sbb
popa
lods
adc
add
cmpb
fwait
pop
imul
xchg
ret
mov
sarl
xchg
lods
jbe
test
xchg
arpl
jge
mov
call
in
push
sbb
push
out
pop
push
repnz
sahf
mov
push
mov
inc
es
inc
es
ret
stos
aad
cmp
jb
out
mov
lods
xor
xor
lcall
mov
dec
fisttpll
loope
xor
pushl
xor
pop
adc
xchg
adc
mov
aad
push
ret
mov
adc
jge
mov
das
add
fmuls
test
cmp
jno
cmp
push
add
xchg
sbb
mov
ffree
inc
xor
ret
or
aas
cltd
push
mov
addr16
insb
cmc
loop
repz
mov
push
fldl2t
dec
xor
jg
jmp
jg
fdivrs
pop
mov
fmull
add
sbb
sub
mov
sbb
sub
sbb
mov
ret
mov
add
fnsave
lret
outsl
movsb
jno
add
aaa
mov
rolb
mov
pop
out
adc
cltd
cmp
add
in
sub
lcall
js
aad
mov
in
repnz
mov
mov
mov
pop
ljmp
leave
jmp
mov
in
mov
mov
dec
pop
ss
fstpt
int3
test
sbb
setb
faddp
adc
imul
jno
out
popf
movsb
xchg
lret
aad
inc
int3
icebp
in
pop
arpl
in
rcl
mov
in
and
sub
or
dec
nop
push
orl
push
fiaddl
jo
xor
iret
jecxz
ret
xchg
test
pop
inc
push
dec
out
ror
imul
add
fmull
xchg
stos
clc
movsl
xchg
push
push
pop
sub
ficoml
js
sub
jg
pop
mov
pop
cs
inc
jle
js
jecxz
mov
push
shrb
imul
sbb
xor
sub
sti
cmp
pop
jp
adc
mov
pop
inc
pop
sub
fstps
outsb
adc
jne
push
push
mov
int
leave
in
std
in
hlt
push
xor
stc
rclb
out
out
jb
lds
adc
add
ret
imul
lock
dec
jnp
sub
jno
or
ret
loop
lods
jbe
pushf
addr16
mov
movsb
push
iret
mov
fmuls
xchg
lret
rcll
fdivrs
cld
popf
xor
cld
ficomps
jne
jo
jno
aad
push
adc
adc
daa
rcl
adc
mov
popf
cmpsl
leave
pop
les
cmp
xchg
ds
mov
cld
andl
pop
push
mov
pop
in
in
loope
mov
add
sub
shrl
arpl
and
inc
lods
fs
fwait
add
sbb
or
jne
push
in
adcl
add
idiv
jnp
xchg
add
adc
pop
sub
inc
sbb
lret
cmp
xchg
or
test
inc
jno
in
cmp
movsl
addl
arpl
jle
jp
insb
or
xchg
fs
ss
inc
cmp
dec
shlb
pushf
cmp
fstpl
jle
sti
mov
push
mov
mov
add
cmp
mov
inc
mov
add
mov
out
pop
fists
imul
xor
adc
adc
xchg
and
in
pushf
scas
lcall
out
jnp
imul
push
adc
adc
scas
xchg
fnstcw
dec
in
stos
xchg
push
pop
pushf
pop
inc
push
dec
cld
ljmp
mov
clc
lods
mov
mov
push
adc
hlt
adc
scas
out
and
loopne
leave
fwait
add
repz
addr16
mov
mov
ret
xchg
ja
fiadds
cld
sub
inc
adc
movsl
jno
or
lret
frstor
mov
aaa
cld
jo
mov
leave
call
dec
push
add
jo
mov
push
ljmp
sub
cs
fistpll
loop,pn
add
push
out
or
xchg
xchg
pop
dec
sbbl
ja
push
fcmovnu
xchg
insb
inc
adc
pusha
mov
int
lahf
icebp
mov
xor
or
mov
nop
sbb
js
repz
fisubl
movsl
lahf
mov
lods
jbe
add
pushf
bound
mov
jp
fcmovne
mov
or
cmp
stos
icebp
ret
adc
in
sbb
mov
push
push
inc
repnz
popa
jbe
popf
xchg
cmp
lcall
mov
in
sti
inc
adc
and
fadd
outsb
movsl
ret
mov
cmp
sbb
mov
ret
scas
out
lret
or
fsubs
lods
mov
mov
cmp
pop
cmp
dec
sti
stos
mov
push
and
lcall
mov
adc
imul
cmp
je
add
cld
push
pusha
xchg
daa
xchg
mov
fdivrp
mov
mov
sub
in
mov
lret
ja
bound
test
mov
push
leave
xor
js
lcall
in
sub
add
shll
je
jmp
cmp
arpl
ror
rorl
add
jg
in
sub
inc
mov
call
and
cmpsb
xchg
aas
aam
pop
imul
cmp
fmuls
shll
dec
lret
out
xchg
xchg
cmp
jae
adc
push
adc
push
mov
sbb
lea
mov
out
push
cmpb
add
mov
mov
int
push
mov
pushf
stos
jne
fistpl
push
or
jg
rcrb
gs
stc
push
shlb
xchg
outsb
aas
fwait
lcall
mov
add
cmc
sahf
fwait
xor
jge
mov
adc
xor
aaa
enter
lods
dec
sbb
cmpl
cmpsb
mov
xorb
mov
nop
dec
adc
inc
imul
jl
jp
mov
test
jae
xlat
add
test
jl,pt
pushf
popf
add
mov
sbb
out
jmp
jno
movsb
sbb
mov
movsl
and
mov
ret
out
dec
jnp
nop
in
inc
fld
leave
js
mov
inc
jb
jmp
rolb
push
fisubrs
dec
rcrl
fsubl
jnp
sahf
adc
fildll
sar
leave
addr16
push
lret
imul
loop
hlt
les
xor
jge
scas
dec
lds
push
xchg
xchg
mov
outsb
popa
jecxz
fwait
aas
and
std
cmp
rcrb
cli
cltd
scas
stc
cmp
jbe
xacquire
lods
sahf
and
add
jb
dec
fcoml
push
in
adc
adc
or
in
fcomps
popa
pop
clc
push
test
push
cmp
and
ss
daa
lret
lahf
inc
fisttps
cmp
or
sub
mov
int3
imul
fidivl
add
mov
divl
je
jl
aas
lahf
cmp
sub
ficomps
dec
stos
adc
out
dec
rclb
inc
loop
xchg
sub
mov
push
sbb
cmpsb
inc
aam
mov
out
and
lret
jecxz
fdivrs
sub
mov
or
mov
mov
cld
outsb
shll
dec
sti
jmp
xor
push
adc
sub
pop
dec
add
test
pop
add
aad
mov
cmpsl
inc
call
aad
cmp
mov
dec
jb
push
shll
nop
or
mov
jmp
insl
xchg
jp
fs
mulb
mov
mov
xchg
pop
es
and
fsub
mov
into
dec
inc
lds
adc
into
jl
int3
gs
test
dec
push
pop
xor
pop
mov
jae
inc
packuswb
mov
pusha
cmc
jno
jecxz
xchg
sahf
cmpsl
lahf
fs
pop
adc
jecxz
add
cmp
pop
and
leave
jne
scas
mov
inc
jmp
jb
add
test
jecxz
cmc
dec
xchg
ds
add
or
pop
mov
cmp
bound
subss
push
push
test
addl
mov
enter
loop
test
mov
adc
scas
inc
mov
lods
ret
test
cmc
jo
pop
push
mov
cmp
lds
dec
jge
xlat
rorl
es
cltd
scas
icebp
dec
pop
ljmp
fnstenv
jno
mov
cmp
int3
mov
push
cli
and
or
movsl
mov
lods
lahf
dec
xor
xor
aam
cltd
add
mov
jecxz
xor
lods
lods
adc
mov
inc
sbb
dec
sbb
std
repz
fisubrs
jns
push
clc
push
xchg
mov
pop
xor
std
mov
inc
test
movsb
loopne
out
jno
iret
inc
repz
and
repnz
dec
mov
cmp
pop
push
cli
fdivs
mov
jl
dec
add
pop
addl
cmpsl
in
jmp
mov
sub
add
or
mov
loope
mov
and
mov
sub
adc
pushf
cmp
mov
jmp
adc
test
xchg
das
cmp
flds
and
pusha
xchg
repnz
or
fbld
fucomp
arpl
in
mov
nop
or
sbb
aaa
add
bound
cmp
addr16
ret
mov
js
pushf
stos
loopne
fwait
jl
mov
mov
sub
mov
popf
mov
push
jbe
lock
adc
subl
push
push
jecxz
cmp
dec
repnz
popf
sub
dec
sbb
dec
cmpl
scas
sbb
jle
insl
add
push
sub
imul
rol
imul
pop
addr16
xchg
or
fnstsw
scas
mov
xlat
subl
fiaddl
adc
pop
shlb
cwtl
mov
inc
xchg
cld
jb
pop
outsb
mov
adc
xchg
das
xchg
cmp
imul
int
fcoms
dec
sti
aad
push
repz
aam
sbb
hlt
jae
insb
dec
jne
cmp
std
dec
shll
loope
xchg
leave
ljmp
sub
out
pop
fstps
hlt
push
lea
sbb
jmp
clc
and
xor
out
push
inc
cs
ja
test
sti
test
sbb
pop
mov
negl
pop
jbe
push
mov
and
mov
jne
and
mov
add
push
call
ret
jle
pop
jl
and
inc
jns
nop
test
and
orl
cmpsb
sarl
cmc
jmp
arpl
jb
sub
mov
scas
outsb
pop
push
dec
add
lock
mov
or
sub
sub
mov
pop
xchg
imul
es
adc
pop
fs
cs
sti
xchg
or
sbb
mov
jle
jnp
aad
dec
push
pop
pop
or
lret
push
inc
fisttpll
push
jnp
jle
insb
or
inc
mov
cmp
sbb
dec
xchg
or
js
aam
int3
inc
push
sub
sbb
mov
fstps
repnz
jge
mulb
test
cmp
imul
mov
mov
sbb
jecxz
loop
lar
jl
xor
popa
mov
test
mov
bound
cmp
cmp
inc
dec
fbstp
fwait
jb
movsl
lds
rcrl
or
mov
xlat
or
push
pusha
cmp
sbb
outsl
test
xchg
jp
jge
daa
pop
repz
and
rclb
popf
xchg
jns
sub
out
xor
or
sti
jg
cmp
in
movsl
pushf
imul
sbb
or
sarl
inc
sub
out
mov
xchg
xchg
in
mov
mov
inc
in
out
call
sub
dec
pop
push
jp
mov
mov
fucomip
push
popf
cld
loope
pop
or
mov
shrb
adc
xchg
in
sbb
mov
jmp
ss
xchg
sub
js
loope
stos
mov
or
pop
cmp
adcb
repnz
and
sbb
hlt
std
jg
roll
shlb
js
mov
xchg
imul
and
cmp
jecxz
in
movsb
clc
add
dec
cmp
and
add
cld
sarb
js
or
pop
xchg
pop
or
pop
cmpb
pop
ljmp
lods
xchg
xchg
mov
mov
xchg
cwtl
add
add
loopne
stos
xchg
out
ficompl
ds
fwait
xchg
lcall
push
bound
inc
adc
jp
xchg
inc
push
and
ss
pop
mov
sti
mov
out
jb
loop
mov
inc
cmc
and
fwait
push
or
sarl
push
imul
ljmp
xchg
mov
les
sub
xor
pop
loope
mov
incb
xchg
testb
pop
js
movd
inc
add
and
push
fnsave
fstpl
nop
jl
push
mov
aam
iret
push
add
cmp
adc
fiadds
xor
mov
push
lock
gs
stos
hlt
stc
and
icebp
push
imul
out
pushf
and
pop
pop
lds
aaa
inc
mov
and
pop
hlt
push
jp
push
mov
aaa
lods
jecxz
push
add
testl
mov
insl
popa
das
fcomip
mov
jmp
aaa
out
mov
adc
dec
mov
xchg
loopne
jecxz
mov
movl
xchg
dec
inc
xchg
pop
out
into
ljmp
stos
sahf
outsl
mov
xor
mov
mov
push
shlb
inc
fmuls
fs
dec
imul
inc
push
ror
insb
dec
lret
and
mov
in
bound
or
cmp
fwait
sub
call
fwait
and
or
inc
cld
aaa
jp
repz
push
add
andb
add
mov
xor
jmp
imul
jg
cmp
cli
std
mov
sub
out
dec
lret
dec
divl
fdivr
and
mov
in
inc
jge
push
jmp
mov
sti
jbe
dec
loopne
movl
loope
push
lds
inc
mov
xchg
sti
hlt
in
ljmp
push
sbb
pop
xlat
shrb
into
mov
mov
push
loope
stos
ret
divl
mov
mov
push
iret
lds
mov
pop
dec
fucomp
mov
stc
cld
or
push
divb
psubb
and
enter
jbe
pop
xor
inc
ds
stos
inc
push
sbb
cmp
xchg
jae
mov
out
and
jns
and
cmp
xor
imul
test
xchg
cmp
popa
cmp
adc
mov
sbb
fmulp
outsb
cs
and
and
enter
mov
incb
aaa
js
mov
std
sbb
mov
lahf
test
sarl
imul
scas
fidivrl
inc
xchg
cwtl
pushf
cmc
and
stos
scas
add
in
lock
push
ja
arpl
push
add
xchg
push
pop
pop
cmp
cmpsb
scas
jne
xchg
jno
cltd
rorl
lea
add
mov
mov
adc
mov
insl
std
adc
jbe
ljmp
mov
add
cmp
jae
ss
es
mov
lcall
xchg
pusha
mov
mov
fsts
add
outsb
popl
xchg
and
mov
ljmp
adc
jne
daa
adc
mov
inc
push
inc
outsl
mov
cltd
lods
mov
out
movsb
cld
fsubl
in
aam
push
shlb
push
xlat
and
cmpsl
push
pop
into
cmp
adc
aaa
mov
adc
jbe
ret
pop
movsl
sbbb
sahf
test
aaa
dec
loope
loope
test
pop
jns
or
pop
add
aam
push
test
adc
cmp
data16
shl
mov
cwtl
sbb
pop
inc
loope
cmp
xchg
loop
cmp
fisttps
sti
mov
cmpsl
out
movsl
jbe
mov
inc
jg
inc
movsb
and
xlat
in
mov
fmuls
loop
js
dec
add
and
pop
push
pushf
in
mov
mov
in
xchg
sub
adc
jecxz
lahf
shll
les
fisttpll
out
scas
je
mov
les
fbstp
dec
xor
mov
push
fldcw
lea
loope
cmp
dec
push
lds
stc
cmpsl
mov
mov
and
aaa
enter
pop
aaa
test
loop
sbb
lcall
test
rcrb
loope
outsb
in
jl
mov
shrb
loop
jno
int3
push
mov
fs
in
insb
sub
aas
push
and
pop
mov
ja
push
push
pop
or
mov
sub
jmp
mov
loopne
pop
inc
out
xor
dec
cmpsb
ret
lds
test
inc
sub
mov
push
popa
fs
cmpsl
and
test
or
mov
pop
inc
add
pop
test
sub
iret
ret
dec
push
adc
lods
dec
leave
sub
sbb
sbb
push
fmulp
movsb
out
rclb
dec
cltd
add
xor
ljmp
lods
sbb
shlb
push
mov
dec
mov
lret
add
xchg
pushf
pop
pop
dec
int3
add
adc
cmpsb
sbb
pop
push
mov
and
mov
mov
popa
pop
mov
test
mov
out
shrb
ftst
rorb
ljmp
dec
add
push
sbb
pop
mov
and
pop
clc
loope
push
push
repz
sgdtl
inc
lock
push
cmp
rorb
out
imul
cld
repnz
dec
decb
add
cmpsl
jmp
cmp
addl
lods
push
lahf
das
fwait
cmp
arpl
int
fimuls
cmp
jl
dec
out
pop
adc
sub
push
push
mov
cmp
shll
fwait
push
adc
mov
out
sahf
pop
shr
enter
mov
aam
cmp
jno
addr16
jnp
or
mov
aaa
mov
sbbb
cmp
mov
push
add
xlat
fidivl
inc
ja
js
pop
js
insl
mov
jnp
mov
outsl
mov
push
xlat
and
inc
insl
aas
xlat
or
scas
int
test
push
jno
jns
adc
je
dec
repz
or
and
popf
jl
jp
lcall
inc
int
push
xchg
xchg
cmp
mov
jl
or
cmp
push
inc
lahf
fldt
mov
cs
call
mov
setno
aas
jo
push
in
adc
jl
cld
xchg
xchg
cld
cld
sahf
push
sahf
dec
inc
mov
cld
adc
sbb
inc
cmp
sbb
mov
dec
in
adc
push
lret
or
jae
pop
jmp
pop
aad
ret
push
cmp
cbtw
lret
xchg
ret
hlt
lds
es
push
pop
and
sub
jb
insb
mov
fistl
mov
sub
jbe
fimull
xor
sbb
fists
mov
call
add
inc
or
dec
and
mov
fidivrl
sarb
mov
or
and
nop
test
ret
jge
add
jbe
loop
std
enter
sbb
cmc
dec
ljmp
scas
add
cmpsb
and
add
cltd
mov
test
jmp
adc
pop
popa
pop
ja
mov
sbb
mov
pop
cmp
in
js
decl
inc
scas
pop
pop
ret
adc
cs
xchg
mov
jne
fidivrs
std
push
popa
fcomi
test
popf
or
lods
xchg
mov
out
imul
fs
mov
xchg
push
xchg
pop
adc
mov
roll
jg
fnsave
in
repnz
xchg
jbe
lods
fs
pop
pop
cmp
mov
mov
xor
mov
mov
int
enter
add
adc
or
enter
or
imul
imulb
lahf
inc
out
adcl
sbb
iret
jmp
es
pop
or
adc
pop
out
test
andb
mov
jbe
sub
sti
fldt
js
rorb
xor
int
lret
std
add
mov
leave
or
mov
sub
xchg
lea
mov
lcall
pop
popa
push
jno
fdivrl
ja
adc
mov
daa
fs
push
xor
insl
test
pop
aas
mov
jbe
mov
pop
push
xlat
rcr
add
mov
dec
in
cmpsl
icebp
in
lahf
stc
mov
cmc
divl
mov
cmp
xlat
pop
cltd
dec
test
sbb
in
ljmp
cmpsl
rol
enter
adc
pushf
pop
adc
cmpsl
stc
dec
ljmp
in
lcall
mov
stos
aaa
sbb
adc
inc
in
aam
sub
shrb
imul
inc
lcall
inc
push
mov
into
emms
or
std
test
in
mov
inc
inc
mov
cmp
push
lods
sbb
add
adc
jg
dec
mov
cmp
adc
sbb
xchg
jmp
stc
or
jb
loope
mov
js
and
data16
push
pop
push
sti
pop
jmp
jnp
xchg
push
and
in
inc
cmp
les
xchg
pop
mov
dec
es
inc
xchg
ret
outsb
mov
insb
push
sub
nop
push
xchg
insl
mov
sarb
ss
mov
dec
sbb
sub
daa
adc
es
popf
mov
dec
mov
xchg
popa
fimull
sub
sub
sbb
mov
movsl
push
call
adc
in
mov
daa
xlat
lcall
cmp
xchg
pop
push
ljmp
mov
insb
in
rol
imul
jo
lds
xchg
out
pusha
fstl
ljmp
xchg
jb
push
sbb
jecxz
xor
sub
in
mov
imul
cmp
pop
add
fnsave
je
addr16
clc
fs
dec
test
xchg
out
lret
push
pop
sub
sbb
jmp
popl
xchg
lock
daa
mov
dec
mov
jae
or
fwait
or
lcall
cmp
das
add
gs
les
xor
mov
jne
adc
scas
add
test
pop
fsubs
pop
jbe
lds
js
pop
add
cmp
jg
fiadds
inc
cli
xchg
adc
jmp
mov
and
movsl
xor
jno
fwait
js
mov
mov
inc
mov
imul
pusha
ficomps
insl
jno
push
sub
test
add
in
xor
cmpsl
jle
ficoml
mov
cli
add
insl
std
fdivr
sti
in
aaa
sti
and
arpl
dec
mov
cld
sbb
mov
xor
jae
push
push
dec
jne
imul
or
mov
cld
xor
dec
xchg
push
hlt
push
push
je
repnz
test
mov
sbb
jns
push
and
or
or
mov
dec
maskmovq
cmp
or
shl
mov
mov
cwtl
adcl
into
xchg
loop
movsb
cmp
das
or
push
shl
ret
adc
sub
or
pop
push
jns
fcomp
inc
sub
xchg
mov
xchg
rcrl
pop
lret
stc
dec
xor
ss
dec
sub
fwait
mov
in
enter
scas
fs
sub
mov
add
push
add
xor
mov
jle
dec
test
cmpsb
pop
lds
sahf
pop
leave
int
and
mov
xchg
cmp
loope
mov
out
movsb
popa
jb,pt
ror
pop
cwtl
inc
adc
inc
sub
push
xchg
mov
popa
dec
repz
into
fld
and
xchg
int
out
push
pop
and
xchg
insb
cwtl
mov
add
mov
mov
jmp
sub
call
leave
rorl
cltd
out
int3
pop
fisttpll
sub
mov
push
add
loope
leave
shlb
stc
fsubrp
xor
int
insl
inc
and
xchg
jns
fs
jmp
sub
or
push
daa
repz
mov
lret
or
aaa
ret
sbbb
sub
pop
add
sub
mov
and
loop
es
push
and
insb
push
mov
insl
push
mov
inc
adc
pop
addr16
lods
push
xor
inc
adc
rcrb
cwtl
xchg
out
adc
loopne
sub
int3
les
shl
aad
aas
shll
xchg
adcl
sub
in
iret
ret
add
add
mov
clc
fildl
out
scas
std
adc
fisubl
cmpb
bound
mov
pop
aam
aaa
and
or
dec
mov
mov
les
mov
or
and
mov
test
mov
lods
sub
outsl
push
lahf
xor
insl
dec
push
fdivs
jns
jmp
pop
cmpsl
and
xchg
stos
add
xchg
dec
icebp
mov
stc
movsl
repz
or
repz
movsl
fwait
or
loop
mov
jbe
pop
push
sub
sub
mov
loope
mov
in
stc
in
repnz
outsb
adcb
mov
jbe
out
pop
rorb
incl
dec
scas
inc
push
shll
pop
fs
fwait
mov
inc
insb
dec
movsl
sub
rcrl
daa
pop
cmpsl
mov
into
das
sub
push
or
push
mov
xchg
fstl
hlt
pusha
add
adc
cmp
jbe
mov
arpl
cli
xor
imul
mov
mov
pop
inc
enter
cmp
mov
cmpsb
jae
xor
arpl
mov
add
sti
pop
mov
mov
and
push
mov
imul
fimull
mov
add
mov
dec
subb
xlat
jp
xchg
push
xchg
mov
loop
test
dec
test
fistpll
cld
xor
pusha
sbb
and
or
inc
repnz
lret
pop
popf
sub
pop
dec
or
inc
mov
inc
cmp
jle
and
lahf
add
pop
adc
inc
jg
dec
cwtl
or
in
movsb
cltd
ds
mov
mov
out
addr16
lock
repnz
lock
xchg
push
pop
adc
aam
repz
jecxz
xor
mov
mov
lahf
fimuls
push
mov
add
mov
dec
push
addr16
insb
out
icebp
jne
aad
inc
sahf
and
jo
scas
sbb
jmp
add
adc
int
jo
lret
cmp
pusha
xchg
add
or
pop
jg
xlat
in
pop
std
test
mov
cmp
test
inc
movl
mov
insb
push
xchg
mov
jle
mov
aam
addr16
dec
sbb
shlb
cltd
mov
xor
jne
outsb
leave
adc
rolb
cltd
inc
adc
call
dec
sarb
or
mov
cmp
ja
sub
enter
ret
add
dec
cmpsl
and
add
cmp
movsl
scas
and
fildl
dec
shrb
test
pusha
popa
lahf
mov
xchg
xchg
adc
inc
xchg
jns
fnstsw
add
adc
shrb
push
cmc
jg
mov
clc
int3
mov
adc
scas
enter
mov
test
mov
and
std
std
adc
repz
lock
xor
aad
cmp
rcrl
or
mov
add
mov
and
std
xchg
sbbl
fistpl
scas
stos
pop
push
mov
popa
jle
inc
test
repz
movsl
lret
fwait
pop
negl
push
sub
and
enter
xor
or
and
inc
jge
push
es
ret
push
mov
idiv
mov
out
xchg
cmp
xor
adc
testl
insb
mov
repnz
adc
sbb
mov
pop
sub
das
cli
xor
mov
fidivl
lock
mov
sbb
mov
enter
les
dec
aad
xchg
loope
sub
lahf
jb
call
test
mov
dec
fwait
dec
jnp
imul
sbb
call
add
enter
mov
inc
push
pusha
pusha
jnp
and
jmp
out
sbb
addb
add
lret
cmpl
dec
out
pop
push
testl
loop
inc
pushf
andl
aaa
jnp
fwait
pushf
fcoms
fidivrs
add
psubusb
xchg
aad
xchg
add
mov
mov
push
mov
mov
je
inc
mov
insb
xor
in
mov
fadd
decb
inc
bound
jnp
mov
stos
in
jmp
gs
xor
dec
xor
xor
push
iret
xchg
cwtl
out
pop
shrl
mov
je
mov
cmp
inc
ljmp
pop
mov
sbb
jmp
js
dec
cltd
xchg
push
jmp
out
cmp
das
jp
insb
xchg
lods
lods
insb
sub
in
aad
xchg
jp
ljmp
test
ret
push
jmp
xchg
jne
ficompl
mov
and
pop
cmpsl
sbb
push
jl
mov
inc
jge
lahf
cmc
cwtl
xor
add
mov
fcoml
inc
inc
xchg
imul
inc
lods
mov
sbb
mov
mov
loope
das
test
lds
lods
lcall
ror
inc
jns
bound
imul
fwait
cmp
xor
or
jge
pushf
cltd
das
repnz
add
sahf
mov
pop
outsl
xchg
mov
or
or
push
dec
add
xchg
jbe
pop
lods
sub
out
out
popa
sub
sub
jmp
hlt
aaa
repnz
lret
mov
and
sbb
add
jg
out
movsl
and
stos
jo
ret
mov
shr
ja
imul
icebp
mov
movsb
mov
mov
jle
sbb
nop
movsb
push
ror
rorl
push
fisubrl
aas
fdiv
les
adc
push
or
add
jo
int3
jl
out
mov
cmp
push
mov
data16
push
popf
jnp
push
jno
and
js
push
dec
push
test
aaa
mov
in
ret
andb
cltd
adc
stos
cmp
pop
lds
mov
test
xor
mov
mov
dec
loop
jae
cmp
stos
xchg
adcb
in
inc
loopne
ds
lods
sarb
xor
dec
xor
lcall
out
in
mov
xchg
test
mov
push
fsubr
mov
aas
jl
shlb
push
test
scas
gs
je
out
dec
xchg
mov
gs
xor
and
and
push
divb
xor
jae
cmp
inc
and
sub
mov
sbb
cmpsl
leave
out
cmp
fs
int3
xor
mov
xchg
aas
jnp
shll
sub
cmp
mov
mov
pop
pop
rcr
push
sub
scas
jns
mov
decl
push
push
cld
in
cmp
pop
arpl
loop
xor
pop
enter
mov
push
mov
push
inc
cmc
xor
nop
xchg
pop
push
sbb
loopne
push
dec
in
popl
adc
int3
ret
push
out
push
lcall
mov
stc
les
sub
xchg
jge
xor
cmp
movsb
adc
mov
movsb
dec
aas
xchg
fldenv
stos
std
cli
test
push
sti
jge
aad
add
testl
clc
aam
aam
pop
sbbl
sbb
cmc
sub
xlat
in
jns
sti
push
adc
push
frstor
in
cmp
scas
xchg
and
int
mov
or
das
inc
or
pop
dec
std
test
es
pop
dec
js
xchg
insl
mov
imul
jae
fldt
jmp
dec
and
enter
cli
and
cli
enter
cmpsl
sarl
push
add
pusha
xor
outsb
pop
pop
inc
jecxz
ret
loope
cmpsl
xor
ljmp
loope
jno
adc
push
mov
pusha
jnp
stc
fs
sub
push
xor
aas
rcrl
mov
xchg
jp
sub
loop
dec
xor
addr16
sbb
push
jno
das
add
dec
cmp
cmp
mov
push
inc
repnz
scas
js
in
fwait
push
adc
inc
mov
jbe
ret
mov
lods
pop
jecxz
sub
mov
push
push
pop
out
lods
out
sub
add
shl
std
in
sbb
mov
sbb
push
arpl
jno
add
jecxz
in
mov
dec
arpl
data16
push
xor
daa
inc
cmp
dec
bound
bound
xor
sub
xchg
cmp
or
dec
lret
jbe
fiadds
in
pop
xor
mov
cli
jne
pop
or
stc
jecxz
inc
sub
or
fdivs
shll
sti
mov
add
push
jo
das
shlb
aas
add
daa
or
jmp
in
push
cmp
scas
ss
stc
and
fistpl
add
xchg
cmpsb
imul
ret
jbe
stos
jb
pop
pop
mov
jmp
sub
scas
jp
dec
not
push
push
xchg
lret
stos
call
adcl
setae
pop
adc
jge
add
iret
push
inc
fsubl
sub
out
mov
cltd
fldt
xchg
fisubs
pop
in
cmp
xchg
mov
jae
pop
xor
jne
jae
xchg
mov
xor
outsl
and
add
rorl
sub
and
mov
mov
push
fs
js
adc
mov
or
or
movsl
xchg
and
dec
iret
xchg
mov
mul
in
mov
inc
les
push
popf
adc
shrb
mov
xchg
clc
mov
rcll
lods
lods
or
subb
jno
loop
mov
jbe
xor
test
je
mov
add
adc
push
jbe
mov
sti
cmp
scas
jb
insb
loope
cld
stc
fucomp
pushf
loopne
mov
sbb
sbb
sbb
add
push
sbb
jb
xchg
dec
mov
shlb
sbb
jge
imul
popa
repnz
push
adc
inc
cmp
ret
xor
lock
xchg
outsl
scas
cltd
cmp
int
imul
pop
sub
icebp
jnp
cmp
pop
mov
sub
sub
call
cmpsb
lcall
cmc
fisubs
adc
loopne
aad
rol
inc
test
and
orb
loop
mov
mov
icebp
sbb
mov
into
and
add
mov
sbb
les
xor
arpl
into
mov
jl
adc
loop
push
inc
cmc
stos
push
cmp
aaa
ss
int3
sti
jo
and
or
push
loopne
lret
xchg
aas
out
jmp
call
cs
ljmp
in
add
jbe
clc
and
sub
jo
das
xor
pop
hlt
inc
je
mov
cmp
pusha
push
push
inc
and
mov
jo
lods
aaa
std
in
test
cmp
mov
sub
jnp
jo
dec
jl
push
sbb
and
sub
sub
mov
icebp
test
test
sub
inc
pop
punpckldq
cmpsl
mov
pop
sbb
insb
cwtl
ja
pop
sti
fsubrl
stos
jle
aas
repz
adc
test
cmp
icebp
inc
xchg
es
lcall
stos
jg
mov
jmp
test
icebp
pop
mov
lock
jge
sbb
adc
mov
rcrb
jl
sub
out
xor
lods
push
icebp
cmc
xor
leave
stc
add
adc
idivb
lods
daa
sub
imul
add
push
pop
in
and
and
cmpsb
lods
mov
cmp
adcb
push
xor
push
push
int
insl
gs
and
imul
mov
sbb
sbb
cmp
add
aam
sbb
jno
xchg
inc
out
xor
jbe
lds
outsl
fwait
dec
pop
adc
xor
fcomps
pusha
in
test
jno
cmp
mov
sbb
lcall
movsl
test
or
bound
test
sti
xor
add
xor
xchg
sub
dec
addb
jp
push
mov
cs
pop
dec
lahf
jmp
insb
call
sahf
push
imul
iret
stc
dec
loopne
cmp
inc
mov
pop
mov
jo
das
sub
ja
pop
mov
sbb
xor
push
mov
pop
aam
jg
in
daa
adc
mov
mov
cmp
jmp
call
ret
mov
mov
jg
aam
movsb
push
push
cli
mov
or
or
pop
push
mov
test
sub
in
gs
daa
adc
pushl
popf
pop
xchg
adc
in
test
add
int3
mov
dec
mov
leave
and
mov
leave
sub
ret
addb
mov
scas
adc
sub
or
imul
jae
cmc
arpl
mov
and
push
in
push
mov
pop
arpl
sub
jg
push
stos
bound
dec
mov
ds
repnz
pop
loop
fcomps
inc
add
nop
enter
fnstsw
jns
inc
inc
sub
outsb
rcl
int3
mov
sarl
sbb
mov
dec
push
arpl
clc
lret
test
in
jg
xchg
lret
test
shrb
xchg
data16
movsb
adc
in
add
mov
jmp
push
mov
fdivrs
push
jnp
jns
mov
jp
pop
jmp
sub
outsb
popf
xchg
add
and
into
jne
inc
lods
cmp
clc
insb
sub
xchg
jecxz
xorb
xlat
mov
test
dec
int3
push
sbb
push
rorb
add
push
iret
hlt
mov
mov
lods
sub
pusha
add
sahf
pop
mov
inc
test
out
out
jb
sub
cmp
les
js
stos
adc
outsl
mov
in
fs
insb
xchg
push
jge
fsts
mov
xchg
push
test
cmpsb
fnstcw
pop
push
dec
mov
iret
inc
int3
push
push
imul
and
fnstcw
lea
cwtl
mov
or
sbb
rcrl
test
in
roll
dec
fisubrs
fldenv
jg
cmpsl
jae
xchg
mov
cwtl
in
dec
outsb
icebp
inc
sbb
dec
push
push
jno
fldt
sbb
test
fdivs
mov
fbld
popf
dec
test
leave
jns
jle
jecxz
insb
mov
xchg
push
inc
cmpsb
lahf
shr
cltd
lea
fisubl
mov
xor
jbe
aam
xchg
mov
sti
lret
xchg
jmp
adc
xchg
daa
add
and
call
cmp
push
int
xlat
iret
mov
enter
in
aas
mov
jno
or
leave
sub
shlb
add
sahf
mov
sbb
aam
adc
fisubrl
rcl
adc
out
cmp
sbb
cltd
mov
xchg
push
sbb
outsl
test
xchg
pusha
inc
mov
call
sahf
inc
outsb
add
pop
add
test
shll
lock
inc
pop
icebp
xor
dec
fnsave
cmp
cmp
cmc
mov
in
jnp
add
hlt
icebp
cmpsl
mov
sub
xor
dec
repnz
cmp
out
data16
fbstp
sub
mov
sub
loope
and
pushf
mov
ret
lahf
or
lods
out
lcall
repnz
lcall
push
cmpl
jb
push
inc
repz
lods
nop
inc
dec
xchg
lea
xchg
mov
dec
or
js
sbb
bnd
mov
or
sbb
adc
push
std
xchg
mov
stos
push
idivb
arpl
fadd
lret
sub
xchg
xchg
mov
dec
xchg
add
lea
jle
dec
scas
xchg
popf
cmp
push
jp
aas
push
sbb
push
add
daa
movsb
leave
lret
and
mov
hlt
jbe
pop
in
imul
insb
inc
sub
jo
lret
push
cmp
mov
dec
in
cmp
jo
jecxz
subl
insb
bound
orb
push
lea
sub
out
test
pop
ret
cmp
fadds
add
int
mov
push
pushf
iret
mov
xchg
sahf
loopne
pop
in
sub
cwtl
pop
sbbb
sbb
fmull
mov
insl
jae
aas
dec
call
lret
fs
jno
outsl
ljmp
popf
adc
cs
add
push
ds
mov
xor
sarl
cmp
inc
inc
js
or
jp
lea
inc
std
pushf
cmp
cmp
or
adc
int3
sbb
dec
dec
scas
mov
sub
add
xor
jmp
sub
push
insb
insl
mov
sbb
fxch
mov
sahf
add
shll
xchg
inc
jl
and
bound
mov
sub
sub
call
out
in
inc
mov
mull
mov
xchg
es
ljmp
shrd
dec
test
bswap
lahf
push
sbb
pop
fisubl
adc
cmp
dec
ret
mov
pushf
pop
fnsave
leave
hlt
cld
ret
push
out
repz
pop
movsl
add
adc
adc
push
sahf
inc
sub
add
enter
push
hlt
fisubl
das
in
add
push
inc
fwait
mov
loop
xor
sub
xor
xor
scas
je
or
xchg
lret
idiv
js
sbb
mov
andb
aas
sbb
cmp
loopne
fistpll
adc
inc
pop
ss
mov
scas
pop
test
fcmove
popa
mov
inc
imul
mov
mov
add
shl
sub
cltd
sub
xor
dec
sbb
jmp
jle
lock
xor
loop
pop
es
daa
sbb
stos
mov
dec
std
mulb
mov
add
daa
mov
mov
adc
and
mov
aaa
ss
or
sti
pop
push
stos
sub
push
xor
add
sbb
repnz
jb
pop
mov
pop
into
adc
jl
fadds
pop
ja
sbb
dec
inc
hlt
jns
ficoms
fadd
mov
add
xor
xchg
ss
mov
inc
inc
add
add
pusha
data16
cmp
push
hlt
ror
mov
jno
lods
sub
repz
jle
dec
outsl
adc
jle
scas
add
clc
cmpl
jbe
rcr
inc
movb
jns
cmc
xor
fmulp
push
out
ja
adc
neg
hlt
in
sahf
push
icebp
cmpsl
int3
fcmovb
popf
dec
xchg
jnp
push
shll
add
imul
popf
test
add
mulb
lret
lea
inc
and
adc
out
adc
insl
out
lret
mov
push
imul
cmc
bt
push
cltd
jecxz
xor
adc
and
ljmp
pop
push
xchg
push
ret
lret
cld
or
fstpt
add
imul
and
xchg
std
adc
je
cmp
leave
add
xor
xchg
mov
add
roll
xchg
mov
ror
out
ljmp
mov
mov
gs
mov
cmp
or
mov
inc
inc
popf
frndint
sarb
cmpl
inc
add
mov
lods
lea
mov
mov
in
dec
out
pushf
push
sub
and
jecxz
aad
cmp
push
dec
adc
push
icebp
adc
jb
inc
in
cmp
mov
mov
jb
mov
or
dec
push
setnp
call
pop
jb
dec
scas
es
push
and
xor
notl
int3
inc
xchg
lock
mov
in
jp
rorl
shrb
je
ret
stos
int
insl
xchg
test
jg
js
and
dec
cmp
int3
flds
test
xchg
shll
jne
sbbb
jae
add
idivb
xchg
ret
adc
or
push
mov
leave
sbb
sbb
xor
fucomip
adc
mov
je
shrl
jne
and
jg
fldenv
nop
add
sbb
lea
leave
imul
mov
push
sub
mov
xchg
mov
test
push
mov
nop
imul
std
or
test
xchg
mov
jle
xchg
int
clts
scas
pop
or
add
dec
sub
xchg
rorl
xor
pop
jno
jg
push
xchg
mov
or
leave
pusha
xor
mov
pop
lea
rsm
in
sbb
push
sbb
aad
xchg
pcmpgtb
jns
push
insl
cmp
xchg
stc
push
dec
imul
imul
out
xchg
xchg
int
ret
inc
sbbb
repnz
mov
xchg
fnsave
aad
adc
cwtl
sar
jle
shrb
push
xchg
or
and
sti
sub
mov
mov
sbb
pushf
jnp
lods
lret
xchg
sar
shll
cmp
inc
sub
ljmp
leave
mov
mov
or
mov
sub
shr
add
scas
mov
addr16
outsb
mov
jmp
add
or
in
rol
addr16
lock
push
xchg
lea
add
sub
negb
push
out
pushf
out
jmp
dec
dec
push
loop
push
das
inc
cld
adc
push
sti
add
mov
push
outsb
sti
adc
jp
ss
mov
sbb
dec
outsb
xchg
jns
lds
out
jbe
call
jg
mov
addr16
mov
neg
fsubr
mov
dec
shl
aad
ret
repz
shlb
push
jns
mov
lods
jno
push
xorb
pop
movsl
scas
or
fidivrl
pop
push
and
dec
or
sti
fucomip
xchg
mov
push
hlt
gs
adc
roll
shrl
cmp
int3
lds
gs
and
pop
pop
xlat
adc
pop
mov
jle
leave
std
xchg
push
pop
dec
in
in
cmpsl
xchg
loopne
mov
xor
pop
adc
movsb
add
ljmp
in
dec
jp
lods
push
mov
fstpl
and
xchg
lods
adcb
and
pop
insb
xor
mov
jecxz
mov
add
jb
cs
out
aad
xor
mov
mov
icebp
xchg
imul
iret
mov
dec
sub
es
fndisi(8087
repnz
les
aam
xor
je
push
xchg
lret
or
ss
mov
clc
push
and
jge
mov
inc
jno
xchg
scas
xchg
jg
adc
call
inc
inc
jbe
dec
dec
test
dec
addr16
dec
in
jne
add
push
and
adc
loope
sbb
sahf
mov
push
mov
lds
adc
lock
and
fsubs
pop
fmull
adc
or
xor
out
add
sbb
call
adc
ret
mov
jns
fwait
push
sub
adc
cmpsl
adc
mov
pop
in
sub
xor
je
sub
inc
cmc
pop
stc
add
mov
pop
inc
or
mov
jnp
push
adc
jl
fcmovb
sub
cmp
jnp
dec
xchg
es
cwtl
pop
xchg
xor
rorl
adc
pop
test
clc
inc
mov
fisubl
vpcmpgtd
in
and
rcrl
cmp
test
fcoml
stc
mov
rcr
rcrl
mov
jge
bound
dec
sub
push
sbb
pusha
jge
loopne
mov
pop
jl
adc
xchg
jns
jp
iret
mov
dec
mov
inc
jp
mov
orl
mov
pushl
arpl
dec
push
push
pusha
push
test
adc
pop
inc
sbb
inc
inc
in
jae
hlt
mov
inc
jae
pop
dec
dec
lret
xchg
cmp
insl
or
lret
cwtl
aad
pop
fld
fdivs
ljmp
fisubrl
push
inc
xor
dec
dec
cmp
loopne
stos
dec
cli
inc
sbb
mov
out
push
movsb
xor
xor
stc
push
sbb
lods
xchg
mov
dec
call
stos
mov
push
dec
and
aam
popf
or
negb
cmp
ja
das
sbb
mov
rorl
loope
pop
xor
or
in
jecxz
dec
insl
push
mov
cwtl
in
jae
fucom
dec
jp
lock
pop
test
and
ja
xor
iret
hlt
lods
into
pop
popl
cmp
push
es
cld
xchg
movsb
into
inc
stos
mov
cmp
sahf
into
or
outsl
out
enter
dec
xor
sbb
or
adc
sub
loopne
loopne
jbe
push
in
sbb
rcrl
xchg
or
popf
sbb
ret
mov
xchg
dec
xchg
test
sbbl
shlb
stos
pop
in
xchg
adc
loopne
lret
jns
xor
pop
outsb
xor
xchg
daa
mov
xor
sub
fwait
imul
lahf
dec
pop
popf
inc
pop
imul
push
mov
lea
or
lock
jmp
cmp
notl
sahf
test
hlt
xor
adc
fnclex
bound
cmp
dec
jb
popf
icebp
in
adc
test
xchg
fiadds
dec
push
call
insb
out
jb
mov
shl
push
in
or
xchg
outsb
movl
imul
loope
in
pop
push
mov
sub
inc
jb
outsb
xchg
je
or
xorb
and
inc
adc
mov
test
shll
addr16
push
jp
js,pn
cltd
lcall
xchg
imul
jmp
xor
mov
push
in
sti
push
pop
pushf
std
in
inc
mov
fldl
or
pop
dec
pop
jp
scas
sbb
daa
dec
test
out
xchg
repz
sub
test
rolb
jo
test
sahf
jno
xlat
sbb
popa
fadds
es
or
xor
clc
push
dec
das
pop
dec
cmp
repz
xchg
dec
add
adc
adc
inc
rcl
inc
mov
mov
pop
xorl
imul
inc
scas
fisubs
jle
push
push
pop
ret
mov
in
fmul
and
push
leave
popf
pop
xchg
or
imul
js
xor
outsb
mov
imul
adc
je
xchg
cli
fs
pop
inc
bound
ret
test
xor
out
frstor
xchg
inc
in
cmp
sub
sbb
inc
xchg
dec
fstpt
add
std
push
jo
cmc
jmp
mov
adc
imul
jecxz
popa
js
cld
pop
add
cmp
loopne
mov
leave
jno
inc
add
popa
jae
sub
lret
fistpll
and
xchg
add
into
push
or
stc
stc
out
ret
subl
daa
push
insl
push
push
mov
popf
in
xchg
out
push
scas
sbb
and
push
dec
cmc
stc
xchg
add
out
push
jae
dec
jge
stc
pop
cmpsl
mov
cmp
out
fadds
cmp
xor
inc
enter
loopne
xchg
out
imul
jae
cmp
mov
sarl
aad
sub
inc
out
mov
jo
xlat
outsl
stos
loopne
mov
sbb
and
add
xchg
sbb
sbb
pusha
jecxz
jecxz
movsl
cmp
sub
and
cmpsb
mov
pop
pusha
faddp
inc
and
rorb
mov
mov
in
pop
mov
push
cmp
jns
aaa
and
bound
sbbb
sub
shrl
lret
jb
outsb
fwait
and
sarb
dec
rcrl
and
ss
push
mov
fs
cmp
bsf
enter
leave
xchg
and
popa
xor
das
jg
pop
jge
jl
jg
data16
push
cmpsb
cvtps2pd
repz
into
enter
mov
sti
mov
add
in
mov
jge
sub
loopne
ss
pandn
test
cmc
insb
jnp
scas
push
jae
mov
int3
icebp
stos
das
cmp
inc
pop
rolb
cli
xchg
nopl
push
fstl
xor
jecxz
ret
arpl
bound
dec
cmp
sarb
xor
xchg
cmpsb
andl
or
popa
cmp
cmp
aas
je
push
adc
add
cld
xchg
add
nop
flds
mov
mov
push
push
cmp
xor
mov
cmpsb
subl
gs
sub
add
pop
push
xchg
lret
inc
sbb
jb
mov
fs
sbb
iret
mov
xchg
inc
lods
fldenv
lahf
inc
lea
mov
inc
adc
std
and
into
dec
add
jmp
arpl
xchg
cs
mov
les
adc
mov
in
mov
insl
jo
cwtl
in
cli
out
fwait
push
fiadds
dec
pop
push
jmp
dec
and
mov
incl
push
push
test
xor
mov
xchg
add
xchg
movl
je
in
or
movsb
fcmovb
dec
pop
cs
jecxz
xchg
imul
pop
jns
popf
jle
nop
and
cld
mov
sbb
xorl
pop
adc
loop
mov
loopne
lods
iret
xchg
addr16
sub
outsb
xchg
inc
dec
mov
ret
dec
in
or
sbb
jnp
pop
mov
nop
movsb
sub
cmpsb
sbb
push
sbbl
jp
mov
xchg
jp
xchg
add
mov
cli
loopne
js
sub
ds
aas
jnp
mov
push
addr16
mov
and
xchg
aas
sbb
sbb
movsb
mov
shll
shrb
fistpll
mov
loopne
in
or
stc
adc
pop
fdivl
jns
adc
ret
dec
mov
add
ret
push
shrb
dec
fcoms
push
lahf
leave
xchg
mov
pop
cmpsb
push
test
neg
into
mov
repnz
addl
in
movsb
cmpsl
pop
pop
jae
pop
push
inc
in
mov
aad
std
adc
jmp
mov
push
bound
outsb
ret
out
imull
mov
push
push
mov
sahf
insb
fs
xor
xor
pop
xor
aam
jle
and
imul
shr
sarb
lods
jo
mov
adc
ret
xor
popa
add
jnp
test
pushf
sbb
sbbl
pop
adc
adc
sub
es
je
lret
rcll
add
and
rol
rcll
mov
push
mov
dec
push
xor
jo
cmp
sahf
clc
xchg
mov
addr16
xor
fsub
sbb
xchg
cmp
in
stos
xor
mov
xor
shll
das
mov
stos
cmp
pop
xorl
mov
test
ret
sub
mov
adc
loop
ret
inc
fisttpll
xor
and
add
mov
push
or
shll
mov
xchg
xchg
ret
popf
mov
insb
out
sbb
inc
mov
xchg
add
pop
lods
leave
jbe
sbb
into
inc
xor
cmp
sahf
jmp
and
out
mov
cmpsl
xchg
inc
jns
data16
mov
iret
cmpb
add
fcoml
aam
cmp
mov
pop
dec
mov
push
imul
aaa
adc
mov
bound
fdivr
js
sbb
arpl
push
jne
repz
inc
adc
loopne
sbb
mov
add
cmpsb
add
daa
push
mov
inc
push
and
mov
in
aam
mov
xchg
jo
mov
mov
mov
xor
xchg
push
sbb
ja
mov
cwtl
out
cmpsl
repz
sbb
sbb
in
fsubs
push
gs
pop
pushf
cli
xor
int
add
ja
sbb
jmp
movsb
sbb
adc
mov
subb
ja
inc
mov
aaa
push
push
push
out
or
fnstenv
rcll
lret
inc
cld
xor
sub
stos
jg
out
test
in
mov
push
data16
fistpl
jp
sub
fistpll
xor
jns
popa
pop
lret
push
pusha
dec
pop
add
add
addr16
das
insb
mov
test
sub
aad
push
enter
popf
cmpsl
push
push
jns
adc
xor
xchg
gs
jbe
loopne
adc
or
push
mov
es
pop
push
pop
outsl
mov
mov
sub
dec
adc
fistpl
sub
push
popa
mov
jns
mov
mov
mov
pop
mov
aas
jo
xor
imul
mov
push
aad
lea
dec
xor
std
in
adc
aad
adc
cmp
mov
mov
add
iret
mov
cmc
dec
ret
xor
stos
mov
dec
hlt
movsb
cmp
cltd
inc
cmc
mov
das
push
mov
in
cmp
jb
inc
push
push
pop
repnz
cmp
xlat
jl
sbb
xchg
jnp
and
iret
out
rcrl
pop
fwait
xor
add
sub
ffreep
sub
mov
push
xchg
ffree
cwtl
loopne
jbe
int
ds
aas
mulb
test
jl
ficoml
and
cltd
cs
pop
ja
test
sub
xchg
jns
jp
pop
repz
sbb
divl
xlat
popf
fprem
xor
push
jge
add
dec
push
inc
enter
push
xchg
cli
ss
jle
dec
sub
imul
push
mov
js
rcrb
adc
scas
sbb
test
sbb
jo
bnd
imul
call
jg
mov
mov
or
daa
inc
scas
out
add
nop
xor
call
gs
add
fidivrs
mov
mov
je
popa
lahf
inc
mov
sub
and
fists
into
cmpsb
movsb
xor
scas
pop
aaa
xchg
fucomi
jne
popa
insb
add
aaa
or
mov
jmp
push
fsubr
mov
dec
dec
push
aam
cld
rclb
xor
jb
cmp
xchg
inc
and
ljmp
fsubl
jmp
leave
lods
insl
js
inc
and
lret
xor
mov
xchg
stc
jb
enter
inc
pop
sub
xchg
pushf
popf
xchg
mov
sbbb
sarb
lods
adc
aam
ret
sub
mov
aam
cwtl
mov
les
and
xor
push
gs
sub
mov
or
adc
jge
fstpt
xchg
dec
aas
xor
xchg
sti
addr16
ljmp
sbb
adc
test
popf
jne
jb
daa
fldenv
xchg
bound
xchg
sbb
aad
repnz
push
in
xchg
mov
and
popa
xchg
jg
xchg
dec
lret
ja
fnstcw
adc
xchg
push
out
dec
dec
or
jl
add
cmp
push
push
jno
mov
arpl
fdivrl
imul
ljmp
cmpsb
outsl
mov
rcl
jmp
jge
xor
jns
push
dec
and
push
jle
cmc
mov
and
jg
pop
lcall
mov
lds
mov
dec
xchg
addr16
and
mov
test
cs
fs
pushf
adc
jno
adc
pop
lcall
frstor
and
jmp
pop
ss
imul
inc
addr16
test
mov
or
scas
jge
xchg
stos
jmp
mov
hlt
sbb
pop
or
sti
xchg
cmpsl
loope
sub
dec
sbb
jmp
add
add
out
int3
pop
adc
stos
stos
pushf
jl
adcb
dec
ret
xchg
sub
gs
jae
stc
pop
xchg
fsubrp
xchg
jg
jno
shlb
adc
and
outsb
daa
add
and
inc
xor
sub
repnz
mov
imulb
cwtl
icebp
jge
enter
ss
push
lcall
movsl
ja
push
aam
adc
mov
ret
push
fnstcw
xchg
sub
jo
xchg
xorb
cli
cmpsl
scas
mov
xor
stos
int
mov
push
sub
adc
xchg
popf
mov
shll
cmp
aaa
and
int
jnp
lahf
jl
sbb
sti
ret
push
cwtl
push
sub
inc
shrl
dec
sbb
sbb
es
dec
add
sahf
out
xor
stc
mov
cmp
xchg
push
sbb
dec
addr16
push
sub
leave
mov
pop
sub
sub
xchg
sti
stc
sub
xchg
mov
dec
dec
mov
sub
inc
and
scas
js
xor
inc
sbb
inc
sub
mov
out
ret
sti
fmuls
push
pop
std
lods
cltd
inc
std
fsts
hlt
decb
xor
arpl
jle
xchg
loop
shr
adc
mov
xchg
sbbb
xchg
aas
mov
xor
sahf
in
scas
in
cmp
xchg
dec
sbb
adc
mov
jg
popf
xor
sbb
in
subl
orl
int
dec
iret
pop
sbb
xchg
mov
cmp
cmp
lcall
push
mov
push
push
sbb
popf
in
loopne
lods
lods
stos
sub
test
cmp
es
cmp
sar
and
inc
sar
push
sub
or
mov
jnp
or
jb
popa
lea
push
cmc
int3
adc
jecxz
xor
cli
xchg
mov
cmp
and
ja
sub
mov
into
jmp
fisttpl
lods
cmp
vcmpsd
iret
nop
ret
xchg
push
out
mov
inc
fs
ret
pop
jmp
into
jo
lcall
jmp
inc
and
pusha
sbb
mov
loop
xor
les
xchg
sbb
push
inc
in
push
insb
push
mov
cld
or
cwtl
repnz
fsubr
movb
test
dec
imul
das
divl
lahf
movsb
in
mov
jbe
cltd
sbb
addr16
insb
adc
ret
in
stc
pop
inc
and
aas
lcall
dec
test
mov
push
daa
xlat
cmp
pop
fs
scas
sti
lds
adc
xchg
xchg
addr16
popf
cltd
js
xchg
pop
mov
add
js
outsb
out
sbb
jno
push
and
push
dec
sbb
addr16
jne
dec
add
cmpsb
jecxz
dec
or
scas
lods
push
sbb
xor
sbb
sub
and
cmpsb
add
pop
adc
lea
mov
mov
mov
mov
xor
push
dec
in
pop
push
loop
sub
jnp
xlat
jl
in
cld
xorb
adc
add
sar
or
subb
mov
adc
sbb
ret
mov
dec
gs
repnz
xlat
push
push
jmp
jle
mov
jmp
pop
loopne
cmp
inc
jns
bound
ss
fs
scas
in
popa
jp
add
loopne
faddl
jne
mov
push
push
call
jmp
and
scas
shrl
jg
push
xchg
es
mov
sub
and
lret
es
fidivrs
out
inc
xorb
xor
inc
aaa
xchg
xchg
add
and
pop
mov
inc
dec
push
xchg
lods
sub
sti
ss
sub
pop
cs
lahf
mov
push
inc
add
leave
adcl
add
pop
mov
rcr
dec
sbb
leave
or
js
shr
ror
iret
push
inc
rclb
clc
fsubrs
fs
enter
mov
and
mov
inc
or
cmpsl
pop
js
fwait
dec
pop
cmc
ret
dec
outsl
imul
cltd
stc
xor
adc
fildl
daa
ret
mov
mov
cmp
pop
or
xlat
test
add
fildll
jle
mov
dec
inc
into
mov
cli
ss
pusha
jo
in
sbb
mov
idivb
mov
jle
leave
pop
xchg
lret
aad
mov
inc
cmpsl
and
xchg
fadds
int
loop
xor
cmp
lds
add
xor
das
push
shl
test
sbb
pop
mov
mov
jo
fistpll
rcrb
adc
inc
mov
outsl
das
ds
push
fstps
jle
sbb
mov
push
jbe
inc
inc
popf
cli
xor
or
loope
in
sub
daa
ficomps
fwait
and
in
fistl
mov
test
pushl
roll
inc
mov
movsl
inc
cmp
adc
sti
add
insl
outsb
pusha
mov
insb
frstor
cli
sbb
push
and
lds
xor
mov
ja
jbe
aas
cli
movsb
cmp
and
push
cmpsl
test
adc
or
roll
push
je
mov
scas
insl
xchg
dec
lahf
mov
cmp
push
xlat
lods
insl
js
inc
add
mov
jns
enter
scas
in
aam
enter
push
scas
inc
cmp
int3
cmp
jg
push
popf
test
xor
adc
fs
addr16
push
cmpsb
lret
mov
lret
push
adc
cwtl
repnz
aaa
inc
sub
inc
imul
lret
and
loop
xor
idivb
dec
add
movsl
outsl
repz
push
push
lods
sbb
lds
inc
xchg
movsl
add
inc
sbb
mov
jl
push
ljmp
inc
xchg
cltd
and
iret
andl
movsb
pop
and
xchg
out
jnp
out
push
xor
push
ljmp
ss
inc
pop
inc
mov
mov
sbb
ror
push
addl
fisttpl
push
out
mov
push
mov
imul
dec
bound
es
out
mov
mov
sub
sti
fmul
movsb
imul
xor
pusha
fcmove
jne
mov
push
hlt
push
ss
test
inc
sub
sahf
rclb
or
popa
sub
imul
and
mov
lods
ds
add
or
sub
ss
adc
jp
sub
dec
jb
xchg
sahf
int
arpl
neg
das
push
cmp
movaps
xor
push
aam
shll
lds
cli
lcall
push
inc
add
in
in
mov
push
adc
daa
outsl
jp
imul
xchg
dec
dec
fadds
adc
xchg
inc
xor
cmp
pop
addr16
push
fcoml
nop
and
mov
adc
mov
sbbl
push
call
push
frstor
cltd
aaa
sarl
xor
mov
cmp
nop
jno
movsl
xor
cs
out
loope
test
mov
iret
xor
in
cld
jg
pushf
test
mov
outsb
inc
fidivl
or
xor
mov
call
rcrl
data16
dec
add
inc
test
loop
or
shrl
lret
mov
sbb
outsl
xor
sbb
sbb
idivb
outsl
rcl
xor
mov
pusha
or
pop
mov
mov
movsl
jle
push
mov
jbe
sbb
push
pop
lods
jae
jbe
or
movsb
in
ret
bnd
inc
sub
mov
and
push
stos
pop
adc
aas
ja
push
sub
movsl
popa
xchg
pop
test
fdivrp
mov
mov
out
aad
xor
mov
fidivrl
inc
gs
xlat
shll
pushl
cmp
and
rcrl
jle
and
or
movsl
mov
out
jp
bound
arpl
and
subb
leave
repz
int3
xchg
push
sysexit
pusha
int
ret
in
add
cmp
xor
push
idivb
adc
outsb
inc
and
das
sbb
fs
mov
adc
stc
or
inc
movsb
lods
xor
dec
xchg
orl
ljmp
pop
test
jae
mov
in
sbb
daa
les
jp
lahf
sbb
pop
push
lret
and
mov
mov
adc
out
shll
cltd
push
xor
xchg
mov
push
in
pop
sub
cld
jge
mov
xchg
push
daa
xchg
cmp
ss
ret
sub
into
fmul
loop
in
add
add
push
sub
push
insl
jle
xor
push
and
sub
scas
fadds
int3
icebp
dec
loopne
enter
cld
pop
xchg
jnp
daa
sbb
sub
pop
aad
fs
xchg
imul
repz
adc
cmp
xchg
into
ficoml
jo
mov
loop
int
dec
je
add
out
sbb
push
mov
push
pop
jno
add
push
dec
clc
xchg
push
stos
enter
xor
fs
in
push
jp
pop
fs
mov
jmp
hlt
pop
jbe
lods
or
jl
mov
popf
mov
dec
and
cmp
mov
int
jge
push
iret
clc
adc
inc
sub
dec
xlat
cld
mov
gs
cmp
mov
dec
inc
jne
adc
icebp
pop
lcall
xor
inc
add
je
fnsave
mov
dec
dec
xor
sbb
inc
lret
pop
bound
inc
add
fiaddl
pop
adc
inc
cmpsl
scas
cltd
and
push
mov
mov
insb
stc
mov
xchg
jg
scas
jp
int
pop
jl
add
push
jle
mov
clc
mov
ret
push
lcall
add
fwait
adc
out
sbb
add
fsubl
mov
fdivr
push
inc
pusha
je
mov
clc
mov
enter
stos
nop
sbb
sub
fisttpl
out
sti
je
xor
fdivl
push
sbb
ficoms
scas
mov
mov
ret
call
sbb
xor
add
xlat
popa
lahf
cli
int3
add
stos
mov
xchg
xchg
xchg
clc
daa
aad
out
sbb
imul
mov
cmpl
out
ss
test
daa
lock
adc
push
pop
push
xor
or
sbb
push
sub
clc
lcall
je
lock
and
ficompl
sbb
stc
bound
loopne
jbe
pop
inc
pop
test
pop
lret
popa
cmp
out
mov
mov
adc
ret
out
jne
add
sub
out
sahf
es
cmp
mov
aad
out
test
pop
das
xor
pop
mov
pop
mov
hlt
xchg
lods
mov
or
mov
lret
inc
add
dec
fdivr
mov
lods
add
push
loopne
cwtl
dec
int
inc
cld
jmp
push
inc
outsb
dec
stos
in
ret
pop
fmul
sbb
adc
dec
dec
xchg
adc
jg
mov
pop
add
adc
insb
push
push
aam
test
icebp
test
mov
jae
lds
hlt
cmp
and
adc
shll
movb
loop
cwtl
lods
add
push
data16
mov
push
into
cmp
sub
xor
push
xchg
add
adc
popf
movsb
mov
mov
and
cs
mov
fs
push
popf
loopne
cmp
or
xlat
and
push
adc
or
adc
dec
lds
xchg
dec
sarb
imul
jge
sub
loop
sub
pop
jns
mov
dec
mov
mov
mov
xchg
cld
sub
std
push
decl
sub
add
out
nop
ret
pop
fstpt
lds
pop
mov
sbb
out
adcl
lahf
mov
push
jae
inc
rcr
test
movsl
xchg
xchg
aaa
and
daa
jns
push
loope
jg
int3
mov
xor
or
imul
lds
incb
stc
jecxz
adc
or
rcrl
das
jo
adc
das
sub
test
int3
dec
push
rcl
cmp
stc
stos
xchg
in
in
ja
cmp
loope
jnp
bound
dec
mov
jo
fnstcw
inc
lea
cld
aam
dec
roll
insl
push
out
inc
mov
jmp
adc
add
out
xchg
dec
cli
fs
shll
and
pop
add
lret
xchg
in
movsl
mov
jb
pop
mov
sbb
jmp
cmpsb
ror
ss
sarl
lret
pushl
jmp
lret
sub
movsl
xchg
push
push
mov
jne
shlb
push
adc
insl
push
cmp
pop
push
fwait
pusha
arpl
fcompl
je
in
jge
push
mov
orl
test
pop
adc
rep
ljmp
xor
xchg
decl
imul
ss
lret
out
icebp
stc
inc
jl
movsb
test
dec
xor
jecxz
pop
jmp
push
sbb
push
or
push
add
pop
es
sbb
test
insl
int
pop
jmp
push
movsl
lea
addb
lods
add
cmp
pop
nop
sar
fwait
ds
mov
imul
out
aad
cltd
dec
fwait
dec
jbe
inc
movsb
inc
xor
push
leave
std
sbb
and
mov
push
jle
xor
into
imul
and
ss
nop
sahf
inc
test
push
cmp
sbb
loop
fnstsw
mov
repz
std
movsl
dec
ljmp
in
pop
inc
sub
xor
sub
int3
sub
cwtl
or
or
outsl
leave
cmp
lea
cwtl
pop
dec
or
mov
ret
arpl
sbb
xor
je
ljmp
jae
int3
mov
xchg
lret
cltd
mov
fsubrs
jg
outsb
cmp
cmp
mov
xchg
ljmp
test
mov
shll
mov
dec
sbb
daa
dec
lea
sarb
pop
ret
out
push
dec
shll
mov
ret
sbb
cmpsl
fucomp
call
sub
pushf
les
xlat
into
mov
sbb
mov
leave
xchg
les
push
mov
or
and
mov
xchg
int3
pop
ret
xor
adc
add
scas
enter
out
test
xor
outsb
xchg
iret
cmp
jl
lock
std
aad
adc
data16
xchg
xor
pop
rclb
xorb
jecxz
daa
mov
xchg
scas
insl
stos
push
cltd
and
inc
aaa
push
dec
cli
jl
enter
aad
gs
cmp
fwait
scas
test
jo
pop
and
scas
repz
aas
shl
mov
orb
outsb
dec
out
imul
or
shl
mov
jl
jo
popf
jmp
mov
push
test
sub
lock
bound
push
jno
dec
testl
loop
adc
dec
push
scas
xchg
scas
add
pop
fucomip
sbb
sbb
rcll
sub
aaa
lds
mov
pop
lock
push
push
mov
add
cli
dec
sub
sarl
mov
and
mov
shl
pop
or
jo
mov
mov
xor
inc
mov
mov
ss
pop
or
jle
stos
push
je
cld
pop
push
dec
jg
ficomps
and
or
push
mov
pushf
fcmove
aad
jl
push
clc
or
add
ss
mov
jecxz
add
fistps
jecxz
pop
loopne
inc
test
insb
lea
rorl
bnd
inc
xor
lock
sub
sub
ja
add
mov
fidivrl
loopne
icebp
cwtl
mov
aad
jp
mov
and
imul
add
aaa
ds
mov
ret
add
xlat
xchg
das
clc
push
out
xor
xor
pop
sbb
cmp
inc
rcl
orb
rcrl
aas
std
call
push
movsl
add
and
dec
inc
lret
sub
das
sbb
ret
ret
jno
jns
decl
pop
and
je
push
mov
or
sbb
mov
icebp
push
adc
add
inc
popa
imul
test
test
pop
shrb
mov
jno
sbb
mov
les
mov
jl
cmp
out
loope
addr16
mov
shrl
sbb
sar
jae
gs
ret
mov
lods
insb
mov
cmp
popf
ret
cwtl
cwtl
in
hlt
pop
xor
je
lahf
xchg
sbb
loopne
loop
hlt
and
arpl
fnsave
jp
fwait
stos
adc
jnp
sbb
repz
mov
shlb
test
mov
or
adc
lds
xchg
lods
and
push
aad
mov
xchg
and
mov
es
cmc
cld
xchg
sbb
testl
lods
out
xlat
dec
mov
popa
ljmp
add
out
insl
inc
and
jmp
pop
ss
sub
push
popf
scas
lea
aad
and
push
mov
sub
mov
inc
pop
stos
mov
or
stc
or
push
rcrb
xor
push
cmp
add
mov
imul
push
ja
inc
loope
sbb
mov
jno
push
aaa
cltd
jno
add
jno
pop
fnclex
filds
mov
pop
negl
mov
mov
inc
dec
push
xchg
adc
popf
mov
lods
xchg
mov
mov
xor
fcomps
pop
test
aaa
bound
pop
ret
sbb
int
faddl
mov
call
fwait
mov
dec
jae
push
mov
sbb
inc
inc
enter
mov
jne
popf
jl
xor
in
mov
or
sbb
cmpsb
adc
ss
or
dec
testl
int3
repnz
cmpsb
std
in
divps
add
es
fwait
pop
enter
mov
inc
jl
movsb
inc
xor
ror
sub
adc
cmp
nop
sbb
or
or
or
dec
cmp
push
in
outsl
jae
mov
out
aaa
add
xchg
sbb
mov
call
mov
and
lods
jmp
push
scas
in
aaa
mov
cmp
ffree
adc
mov
jo
cmp
lret
and
out
jbe
lock
mov
divb
adc
pusha
loop
sub
fdivs
sbbl
ljmp
enter
lcall
jg
inc
pop
sbb
aam
pop
gs
mov
imul
sub
gs
cmp
orl
pushf
gs
popf
out
enter
add
jae
cld
pop
xchg
jae
into
sub
fwait
cs
mov
push
inc
pextrw
pop
stc
scas
orb
out
jmp
scas
mov
add
fwait
or
cs
sahf
mov
push
mov
in
inc
push
ret
mov
pop
sub
call
test
add
imul
add
xor
adc
scas
daa
fisubrs
out
sbb
dec
leave
push
cmc
pop
inc
mov
jno
adc
inc
fistps
pop
imul
lcall
jno
xchg
inc
jle
adc
lock
add
cltd
je
stc
addr16
shrl
lret
jb
cli
push
jb
mov
sti
cli
xor
dec
mov
mov
stc
arpl
inc
in
sub
cmp
arpl
or
dec
and
jge
orb
dec
push
push
push
int3
rcll
xor
outsb
out
enter
xor
sbb
mov
cmp
das
jmp
ss
xchg
push
andl
out
mov
in
push
push
div
sbb
ficoms
pop
dec
xchg
lret
xlat
or
jmp
sub
idivb
cmp
ljmp
mov
hlt
mov
push
dec
mov
lods
mov
insb
push
add
imul
les
push
pop
adc
notl
fcompl
mov
xchg
jge
aaa
dec
jnp
mov
mov
loopne
or
push
sbb
outsb
mov
cmp
mov
mov
pushf
or
out
popf
repz
ds
cltd
adc
inc
lea
std
fldt
inc
mov
ljmp
inc
add
addb
repz
pusha
sbb
scas
add
repz
outsl
aaa
sbb
lret
je
fcmovu
fsubs
addr16
loop
adc
sbb
and
cmc
es
nop
ror
jnp
pop
pop
pushf
mov
push
das
mov
sbb
ss
ret
pusha
popa
jo
xchg
cmpsl
mov
psrlw
ljmp
testb
sarb
cmp
mov
jmp
scas
movsl
pop
ljmp
cmp
inc
mov
bound
in
dec
jg
jg
push
or
into
xchg
cmpsb
insb
sub
inc
rorl
and
and
mov
sti
popf
mov
test
inc
cld
bndstx
dec
enter
leave
stos
or
mov
lret
out
cmp
pusha
cmp
jnp
add
dec
data16
jno
test
push
push
mov
rolb
repnz
sub
test
in
mov
push
fwait
cltd
int
or
pop
add
cld
iret
sti
lahf
pop
int3
mov
mov
ja
sbb
jnp
test
jmp
push
jb
mov
lods
movsl
mov
mov
xchg
call
mov
pop
inc
pop
mov
pop
pop
stc
bnd
pop
pop
movq
push
inc
rol
mov
add
std
sarb
mov
adc
xchg
lods
dec
cmp
sahf
aaa
pop
sub
cwtl
adc
int3
jnp
clc
dec
and
sbb
cwtl
xor
xor
xchg
jge
lahf
mov
xor
cmp
inc
arpl
jnp
outsl
je
dec
cmp
jmp
xchg
lret
cmp
iret
sbb
iret
sub
or
pop
mov
and
shrb
lahf
adc
push
cltd
in
pop
pop
or
push
mov
xchg
in
lock
ja
mov
hlt
arpl
mov
adc
lods
push
inc
adc
ds
movsl
mov
sbb
fsubl
repnz
hlt
cmp
cmpb
icebp
stc
mov
pop
jmp
sub
out
mov
int3
shll
and
add
xchg
insb
loope
cmovae
sub
xor
xor
imul
daa
sub
pushf
ljmp
jle
push
pop
mov
xchg
add
scas
negl
jb
fiadds
jbe
mov
and
dec
push
xchg
popf
stos
loop
ja
and
insb
sub
mov
mov
sub
xchg
inc
rcl
test
and
or
xchg
imul
sbb
pop
cmp
popf
sub
call
out
mov
ljmp
shl
sub
lea
loopne
mov
xchg
loopne
loop
mov
push
cltd
popf
aad
dec
mov
adc
push
pop
jno
in
repz
mov
shlb
sub
jge
scas
jne
in
xor
movsb
fadds
mov
dec
mov
loope
adc
in
hlt
outsb
aaa
dec
out
in
ret
adc
in
mov
stos
mov
test
mov
mov
jl
dec
les
cmp
cmc
out
addr16
jo
stos
mov
std
fs
fsubrs
sbb
mov
shll
stc
dec
loope
cmpsb
test
or
arpl
push
jmp
mov
dec
stos
dec
stc
call
popf
jnp
outsl
mov
repz
xchg
mov
jb
inc
cltd
mov
mov
loop
sarb
sahf
jle
lcall
push
dec
add
push
stc
iret
cmp
shrl
or
pop
mov
aaa
aad
inc
push
push
insb
jae
mov
xchg
incb
xchg
cli
or
insl
xchg
in
jmp
outsl
mov
pop
cmpsb
xor
add
into
pop
sbb
add
iret
xchg
inc
incl
leave
sti
sub
sbb
fisttpl
adc
cmp
or
push
lods
iret
das
push
pop
jle
out
mov
mov
add
mov
jbe
and
sbb
push
push
hlt
pop
xor
cmpsl
icebp
imul
lret
sub
push
jmp
jbe
popa
shrl
int
cmpb
out
popf
cmp
loope
jmp
add
bound
cli
ret
sti
and
fidivrs
cld
xchg
insl
subl
fcomp
lahf
mov
mov
rsm
pop
scas
repz
mov
into
leave
mov
jmp
fwait
repnz
ljmp
cmc
mov
cwtl
ror
or
dec
lret
repnz
pop
dec
jae
idivb
adc
jecxz
sub
inc
imul
dec
movsb
dec
cld
sbb
scas
int
test
dec
das
nop
adc
dec
jb
pop
jmp
push
xor
enter
sub
fbld
popa
pop
stos
inc
xchg
adc
add
xchg
adc
leave
stc
mov
push
xchg
push
addl
xor
out
cmpsb
popa
je
jle
and
cmp
pop
repnz
ja
lods
mov
nop
bound
std
push
loopne
in
daa
xchg
xchg
bswap
adc
inc
fdivs
lret
mov
mov
xor
lods
enter
pop
or
pop
adc
pop
mov
fbstp
xchg
loopne
stc
sahf
in
jecxz
sbbl
sub
in
cmpsl
inc
adc
push
push
mov
xchg
pushf
test
jle
jp
xor
push
adc
lahf
sbbb
in
imul
std
jbe
enter
inc
jbe
push
fidivs
jecxz
shlb
loope
dec
pop
ror
cmp
lds
sub
out
mov
adc
jge
clc
mov
jns
pop
cmp
jle
stos
test
sbb
dec
jp
sub
or
mov
test
sub
sub
mov
mov
dec
loope
fidivrs
in
sti
outsb
stos
hlt
out
cmp
out
popf
or
adc
sbb
mov
mov
popf
inc
pushf
mov
xchg
add
das
push
xchg
ja
jecxz
in
cmpsl
adc
jle
dec
sbb
mov
xor
les
push
aaa
adc
xchg
cmpsl
testb
ljmp
mov
cmp
test
or
popa
adc
fcmovnbe
push
jnp
push
push
loop
test
mov
cmpsb
push
ficoml
adc
pop
sub
insl
aam
pop
pop
sahf
cmpl
add
mov
scas
test
pop
mov
push
adc
lods
sahf
leave
mov
ja
fsub
xor
test
jno
cmp
aas
sub
aas
cmp
loop
ds
inc
jne
ret
or
adc
xchg
jg
sub
int3
jne
in
xor
int
nop
jbe
jae
je
cmp
out
mov
sub
lret
or
cmpsb
or
daa
les
add
push
inc
and
mov
xchg
fs
or
mov
cmc
mov
pop
and
push
dec
jl
hlt
sub
xchg
hlt
mov
movsl
sub
xlat
mov
push
mov
rcrl
int
dec
fdivrs
fnstenv
loopne
xlat
subb
lret
push
inc
push
imul
cld
cmp
add
inc
add
xchg
adc
nop
xchg
test
adc
ljmp
test
sbb
sar
sahf
lea
mov
adc
adc
lock
jne
sbb
aas
mov
nop
sti
shll
dec
outsl
adc
sbb
xchg
inc
loop
jns
sbb
dec
adc
sub
mov
movsl
pop
std
add
aaa
sbb
push
xor
jbe
dec
je
popf
gs
cmc
aad
imull
in
jns
or
add
adc
jg
xchg
jle
mov
inc
imul
adc
notl
out
push
scas
dec
pop
outsl
rorl
xchg
addl
inc
in
dec
add
fwait
push
jne
test
cmp
and
insb
mov
mov
sbb
nop
sbb
dec
sbb
rclb
mov
shll
mov
sbb
xchg
in
or
inc
jecxz
stos
test
aad
fbld
aad
xor
mov
jle
and
in
pop
call
test
call
sbb
mov
leave
std
stc
aam
jo
iret
dec
insl
xchg
and
std
fidivrs
jmp
insl
push
xchg
inc
lods
clc
mov
loop
jmp
sub
jge
or
mov
in
stos
lea
push
arpl
jnp
and
icebp
sbb
inc
insl
std
push
sti
or
cld
ja
gs
mov
int
fdiv
sub
xor
stc
test
cmp
ss
push
imul
inc
push
inc
repz
adc
movsl
fs
aaa
xchg
cmp
inc
cmp
pop
and
mov
mov
outsb
or
push
arpl
jle
leave
lahf
dec
and
repz
xchg
xor
mov
lds
jnp
cmpsb
sbb
aaa
mov
sbb
sub
fldenv
mov
cltd
ja
mov
cmp
lods
out
cli
jg
ret
inc
ss
test
cmpb
out
ja
adcl
jns
cmpsl
or
orb
loopne
imul
mov
fldl
sub
mov
in
mov
xor
lds
pop
inc
and
in
dec
mov
or
mov
sub
orb
mov
jg
movsb
and
mov
insb
jmp
jg
adc
or
push
dec
iret
into
or
bound
inc
dec
sub
xor
ja
filds
std
add
xchg
push
or
xchg
sub
popf
sub
inc
addr16
mov
mov
xorl
mov
pop
adc
fdivs
pop
push
popa
jno
daa
mov
int
cld
loopne
int
and
into
iret
sbb
ds
dec
mov
fwait
cmp
fisubs
xor
stos
movsb
fidivs
mov
es
stc
daa
stc
orl
pop
mov
pop
les
ret
sub
pop
cmp
scas
jmp
sub
rcl
pop
add
cli
ss
cmp
xchg
jb
call
lcall
dec
sub
inc
mov
add
push
hlt
and
ja
leave
pop
adc
push
xchg
pextrw
push
lock
add
test
xchg
push
lret
test
push
inc
mov
add
or
pop
cmc
xor
lahf
or
and
cmp
gs
stos
and
mov
dec
dec
jl
cld
mov
mov
xchg
jge
loope
mov
xchg
jmp
adc
in
mov
insb
mov
inc
in
sbbl
incl
ss
sahf
or
or
aad
bound
inc
jnp
roll
sbbb
aaa
push
mov
ficompl
rcl
sbb
lea
add
xchg
sub
clc
jmp
aam
sbb
jle
or
out
jnp
mov
push
inc
filds
in
fs
test
stos
push
add
xor
sti
dec
mov
mov
mov
dec
inc
mull
int
lcall
xchg
mov
ret
push
pop
cmovo
jle
std
jmp
cmpsl
jno
push
and
lret
dec
call
in
jb
lret
fbstp
fldcw
mov
les
jo
push
imul
loop
mov
movsb
cli
rclb
imul
jnp
xchg
push
sub
inc
mov
in
xchg
inc
push
jge
push
lahf
cmpb
cmpsb
ror
mov
mov
ja
call
scas
rorb
sbb
loope
add
push
sahf
mov
pop
adc
test
pop
push
test
xor
jne
fisttps
inc
sub
repnz
jle
inc
add
cmp
iret
jae
dec
push
fs
adc
es
jo
xorb
adc
mov
xchg
mov
arpl
jnp
gs
or
in
popf
cld
xchg
loope
mov
adc
shl
pop
adc
movsb
cmp
jo
and
dec
and
stos
jno
push
aam
mov
mov
cmp
mov
xchg
sub
cwtl
call
xlat
bound
xchg
add
ljmp
lret
sbb
popa
mov
xor
or
test
mov
push
mov
fldl
push
add
dec
jl
pop
cmp
pop
imul
sub
jo
imul
cltd
xchg
and
enter
inc
cmovnp
jnp
mov
fisubs
xchg
mov
cs
out
arpl
pop
sbb
sub
or
jl
and
inc
adc
xor
sbb
daa
icebp
push
cli
js
xchg
int
push
mov
sbbl
or
and
push
and
mov
cmp
es
push
out
xor
push
mov
pop
add
xor
lahf
sbb
push
add
lcall
add
subl
and
mov
gs
push
jae
fldl
add
test
lret
mov
mov
popa
sbb
dec
mov
dec
cmpl
cmp
dec
jne
stos
adc
and
sbbl
cmp
add
sub
popa
nop
sbb
int
inc
pop
adc
loopne
adc
sbb
push
jns
mov
and
mov
adc
dec
test
ror
pusha
js
jmp
test
test
cmc
aam
sbb
stos
fsubrs
fs
jmp
dec
fidivl
je
inc
movsb
bound
pop
or
dec
pop
int3
ds
or
aaa
lahf
dec
jno
mov
mov
push
xchg
lret
jg
ret
loope
xor
bound
add
imul
add
push
test
mov
stc
dec
mov
ja
xor
mov
hlt
jge
jbe
or
arpl
inc
mov
es
inc
jnp
sbb
mov
or
fnsave
push
mov
mov
dec
xchg
popf
cmp
les
push
ret
jl
imul
or
sbb
xor
out
mov
xchg
dec
add
xchg
mov
gs
mov
inc
in
push
out
imul
jb
repnz
push
loop
jle
mov
pop
pushf
jmp
daa
dec
jle
repz
lock
pop
or
icebp
lock
scas
dec
push
mov
push
lods
cmp
jns
cmpsl
lods
ljmp
fwait
mov
sub
int3
jle
add
xchg
jmp
adc
and
pop
cs
lods
jbe
js
add
adc
inc
outsl
dec
cmc
stos
into
cmp
repz
lea
out
sbb
push
scas
or
sahf
cmc
pushl
loop
test
xor
int3
pushf
lock
cli
outsl
jp
xor
jmp
sahf
aas
std
dec
shrb
pop
dec
add
inc
in
mov
pop
sub
lock
notl
outsb
fistpll
push
jne
stos
and
mov
jp
dec
cld
shrl
repz
add
or
sub
push
int3
xlat
ret
xchg
sub
repz
push
in
cld
leave
sub
pusha
jns
mov
jge
push
fwait
mov
push
test
int
xchg
adc
push
mov
lods
xorb
sbb
test
mov
dec
sar
adc
pusha
xchg
and
or
mov
daa
mov
test
mov
xchg
add
pushf
jp
mov
xor
decb
xor
cmp
addr16
mov
push
jne
enter
fdivrl
inc
sbb
ror
push
inc
lods
repz
pop
hlt
add
pusha
jl
jnp
adc
inc
or
inc
shrl
dec
and
arpl
cmp
pop
sbb
cmc
mov
jmp
or
decl
cmpsl
dec
dec
add
inc
add
cli
jb
leave
cmp
sbbb
mov
aam
ljmp
add
and
cmp
sti
sub
mov
lods
int
fwait
adc
inc
icebp
es
lods
dec
and
xor
jecxz
sbb
movsl
mov
out
das
cltd
cmp
ds
jl
jmp
mov
cmpsb
sbb
imul
xor
lods
mov
aam
cwtl
pop
movsl
movsl
push
orb
inc
and
push
test
pop
enter
enter
mov
imul
sti
xchg
insl
pusha
mov
rorb
pop
push
or
dec
dec
jge
sbb
je
cmp
das
push
add
cwtl
leave
push
loopne
test
or
add
pop
mov
add
push
daa
jl
ja
repz
push
test
xchg
xor
dec
cmpsl
pop
mov
cmp
shlb
mov
fwait
fs
ds
lret
push
dec
fwait
sub
int3
sti
ds
dec
lret
cs
sub
stc
or
rol
loop
add
aaa
data16
dec
outsb
ss
cmc
sub
inc
jne
sub
cs
outsb
push
addr16
xor
stos
jne
stos
jb
nop
xor
lahf
int
out
fistl
pop
jb
or
cmpb
jnp
stos
mov
add
test
add
jge
or
or
jae
mov
aaa
lahf
lahf
inc
and
test
pop
add
xchg
xor
sbb
rcr
rcrb
aad
sub
cmovno
and
mov
aas
sbb
push
inc
or
sub
ja
sub
into
pushf
mov
inc
loope
or
cwtl
leave
lods
pop
ljmp
mov
jmp
lods
mov
dec
push
or
test
xchg
negw
sbb
nop
scas
idiv
icebp
dec
idiv
outsb
sarl
stc
mov
les
cs
hlt
mov
mov
cmp
shll
jnp
cmp
jns
mov
cli
and
mov
xor
popf
and
in
cs
andl
inc
clc
push
inc
das
mov
jl
xchg
fwait
scas
xchg
mov
mov
in
xchg
lahf
and
jb
dec
cmp
pop
mov
mov
push
gs
inc
mov
out
in
mov
adc
xchg
shrb
sub
sbb
setp
jno
leave
inc
jmp
aas
xchg
rcrb
stos
jae
add
cmc
push
fnstsw
push
fstps
ret
int
mov
rcrl
xchg
lds
xor
inc
mov
dec
adc
punpckhbw
call
mov
mov
and
clc
je
cli
repz
aaa
and
cmp
roll
mov
push
jno
mov
flds
into
js
scas
jp
inc
outsb
push
test
addr16
xor
iret
jecxz
sub
or
xchg
or
dec
dec
data16
ljmp
enter
jge
cmp
push
pop
ja
scas
xchg
pop
shr
xor
add
rol
fildll
in
or
push
or
pop
icebp
push
jecxz
fld
cmp
orb
inc
mov
sahf
xchg
mov
mov
daa
cmc
insb
pop
pop
mov
in
insb
jae
cmp
sbb
inc
push
out
push
out
mov
addr16
lret
inc
in
ds
dec
mov
add
mov
test
mov
xchg
test
jno
imul
popa
cli
adc
popf
cmp
repnz
pop
je
jle
jo
lret
push
sbb
stos
mov
in
or
mov
int3
push
mov
out
testl
pop
jg
pop
xor
and
je
iret
and
mov
jmp
gs
fcoms
push
ret
pushf
aam
add
or
loope
ret
xchg
sahf
subb
adc
sbb
sub
or
add
jge
cmp
fistpll
mov
nop
in
fiadds
jo
pop
inc
insl
dec
hlt
dec
mov
jmp
push
jmp
mov
ljmp
mov
orb
pop
test
cs
ret
cli
jo
add
mov
jbe
pusha
xchg
movsb
mov
mov
fdivp
inc
mov
sbb
pop
jns
sub
cmp
in
sub
xor
xlat
jecxz
decb
add
ja
adc
cltd
aam
icebp
cmc
lret
out
repnz
cwtl
sub
jge
aaa
mov
inc
jl
in
sbb
or
aaa
mov
mov
out
inc
mov
decb
or
fstpl
enter
andb
mov
and
lahf
dec
aas
pause
cmpsb
jno
dec
fisttpll
pop
and
xor
repz
cmp
fdivl
sbb
clc
sti
xor
out
adc
mov
data16
inc
sti
cmp
push
mov
add
call
mov
push
pop
loope
and
sbb
repz
jo
iret
sti
out
dec
push
pusha
jae
ss
dec
xchg
dec
int3
pop
mov
addl
adc
roll
test
and
fbstp
sbb
sar
not
movmskps
jp
or
and
lock
imul
sbb
mov
inc
sbb
mov
push
mov
pop
dec
ljmp
stos
xor
xor
out
adc
cmp
rcrb
imul
xor
sub
lea
movsl
dec
adc
les
xor
mov
out
sbb
jl
push
adc
fsts
mov
inc
dec
daa
mov
lahf
xchg
ror
add
jbe
aad
xor
ss
daa
adc
xor
mov
xor
jbe
fistpll
xchg
jecxz
xlat
push
mov
rcrl
mov
repnz
popa
clc
les
fs
jge
add
scas
or
and
ss
mov
push
mov
dec
loopne
test
ljmp
lods
in
xchg
mov
jp
inc
push
sbb
or
mov
mov
out
pop
gs
xchg
mov
jecxz
xor
push
pop
xorl
push
inc
jne
shl
int3
pushw
push
xor
gs
dec
jb
xor
push
ss
outsl
fsubrl
mov
jns
xchg
xchg
add
cmpsb
js
jge
inc
push
mov
movsb
xchg
and
xor
fiadds
int3
or
inc
xchg
std
pop
imulb
jg
mov
and
mov
fiaddl
jnp
mov
ljmp
gs
movsb
add
jg
jmp
mov
sub
push
sub
subb
sahf
cwtl
loop
push
jmp
jns
outsb
adc
sub
or
cmp
leave
cmp
insb
inc
shll
fldt
sbb
cmpl
push
adc
inc
scas
pop
inc
clc
add
or
mov
mov
jle
pop
push
imul
adcl
into
stos
mov
mov
clc
sub
or
arpl
jns
add
sub
pop
mov
les
mov
or
insl
or
daa
cld
minps
add
icebp
cmpsb
jne
dec
leave
mov
dec
insb
inc
sbb
cmpsl
mov
pop
xchg
cmc
divl
test
arpl
mov
setno
in
fistps
pusha
mov
adc
dec
int
push
orl
popf
mov
imul
fbstp
sub
push
or
pop
pop
fldt
push
jp
inc
imul
insb
and
vpcomub
incl
iret
xchg
and
mov
insb
cld
fwait
pop
sbb
insb
ds
popa
aas
jb
inc
std
or
push
push
je
insl
in
push
mov
push
icebp
pusha
mov
or
mov
adc
dec
add
and
aad
stc
pop
movsb
sahf
aaa
das
cmp
mov
push
mov
adc
subl
mov
dec
rclb
aaa
add
nop
mov
lcall
fildll
scas
test
insl
mov
incb
add
mov
or
add
jecxz
add
jnp
movsl
inc
xchg
cmpsl
aad
fcmovnb
adc
int
in
inc
or
or
int3
in
sbbl
or
sub
mov
push
rorb
dec
push
aam
data16
pop
ss
gs
jns
xchg
and
lcall
cmp
adc
sbb
imul
jecxz
sbb
or
dec
pop
xchg
jge
ficompl
nop
icebp
orl
icebp
xor
pop
mov
mov
dec
lret
pushf
in
es
lock
sub
test
cli
nop
rcrb
jo
mov
add
pop
jecxz
mov
stos
roll
dec
mov
pop
jle
or
jge
rolb
or
sbb
scas
inc
adc
int
lods
mov
adc
add
cmovge
mov
sar
movsl
sub
push
pop
mov
or
sub
cmpsl
push
jae
nop
mov
fsts
push
push
mov
sbb
xchg
lock
jbe
sbb
loop
ljmp
mov
cmp
mov
push
cmc
cwtl
sub
negl
cmp
fstpt
jno
push
inc
sahf
or
cwtl
je
lea
push
dec
fildll
loopne
and
lods
jbe
pop
cmp
sbb
mov
xchg
lea
lahf
std
adc
fisubl
or
cmpsl
pop
cmp
push
lods
and
dec
mov
and
divl
out
cmpsl
dec
adc
mov
sub
dec
sub
mov
out
xor
fdivl
shll
dec
push
push
xor
std
xchg
loop
add
ljmp
cmp
xchg
out
cmp
pop
lds
jmp
xor
test
in
sbb
pop
mov
mov
mov
jno
loop
jns
mov
fwait
repnz
fmuls
bound
mov
aad
into
iret
sbb
push
cmpb
cmc
sub
cs
out
sti
push
call
and
xor
fistl
insb
adc
jnp
mov
cltd
pop
add
cmp
xchg
or
mov
push
inc
jnp
push
or
fdivrs
jle
adc
sti
mov
jne
inc
mov
stc
into
inc
or
ja
divl
rclb
cld
dec
mov
adc
dec
test
and
adc
mov
ret
mov
and
leave
xorps
lret
les
dec
add
hlt
pop
sub
sub
or
dec
sub
mov
mov
bound
enter
and
cld
push
xchg
push
jbe
cmc
adcb
cmpl
and
mov
inc
pop
hlt
mov
imul
jnp
in
fwait
ljmp
stos
je
jg
pushf
sub
xor
js
push
xchg
mov
cs
xchg
jnp
enterw
cltd
in
pop
in
movsl
push
nop
test
add
mov
xchg
adc
hlt
cmp
mov
call
movb
xor
jge
mov
sbb
pushf
fisttps
lods
fwait
cli
movsb
and
xor
xor
jecxz
fisubl
inc
fdivrl
dec
ja
jo
cmp
push
dec
adc
ds
js
xchg
out
push
test
lds
mov
roll
bnd
push
xorb
mov
das
insl
xor
pop
dec
pusha
pop
shll
jns
mov
cmp
fldcw
divb
or
jg
push
mov
mov
push
out
rorb
pop
sbb
cmp
push
les
outsl
insb
lea
mov
dec
mov
or
aam
rolb
mov
fcompp
or
mov
or
add
incl
sub
test
sub
movsb
mov
or
or
stc
inc
xchg
pop
test
shrl
inc
pop
mov
iret
add
jg
or
add
fmuls
cmp
test
cmpsb
sub
repz
lret
xchg
pop
jno
jp
insl
lea
xor
cmp
mov
test
push
int
data16
sub
sub
mov
inc
sbb
and
jb
pop
push
sub
cmp
adc
cmpsl
jecxz
mov
xchg
pop
in
push
dec
fisttpll
ss
lock
lock
pop
aad
movsl
lret
std
xchg
divb
add
add
mov
rcrl
popf
sbb
mov
dec
repnz
ja
push
lret
outsb
jnp
pop
inc
enter
mov
icebp
fs
pushf
mov
inc
dec
call
mov
adcl
jecxz
pop
cmp
dec
and
stc
call
pop
out
pop
ret
imul
je
sub
popf
fisubs
adc
into
adc
test
lret
testb
xchg
mov
add
subb
sub
imul
lock
arpl
movsl
imul
inc
inc
jae
ja,pt
add
in
test
mulb
mov
loope
jbe
xor
out
and
filds
in
xchg
xchg
mov
rcrl
jns
fs
xchg
mov
cmpsb
mov
sub
cmp
ljmp
adc
sahf
sub
out
inc
jbe
mov
rcrl
stos
scas
pop
adc
stos
or
rcll
inc
mov
adc
out
pop
int
adc
mov
lret
xchg
pop
divl
or
xor
cmp
mov
or
mov
ss
push
mov
lret
push
enter
xor
adc
push
repnz
in
loop
insb
dec
in
push
in
std
sbb
bnd
push
mov
ffree
lods
cmp
add
jne
in
xor
pop
xchg
movsl
cmp
xlat
rorl
xchg
push
fstl
nop
cmp
aad
repz
push
mov
push
scas
out
in
daa
hlt
jmp
mov
mov
call
imul
inc
les
js
iret
fsubrp
ja
cmpsl
sub
xor
sub
int3
lahf
es
lds
xlat
pop
push
clc
cmpsl
gs
in
cmp
inc
inc
push
ss
rcll
movsb
daa
pop
test
leave
lods
xchg
jge
in
lcall
inc
loopne
xor
push
fsubl
push
jno
scas
jb
movntq
jp
clc
pop
repnz
ds
leave
xor
dec
push
aad
arpl
mov
les
cmp
lea
xor
in
test
jnp
icebp
mov
cmp
loopne
insl
out
jb
iret
out
mov
aam
fnsetpm(287
mov
pop
fcomps
cmc
gs
sbb
fstpt
loop
xchg
loop
push
fsub
pushf
std
nop
mov
nop
add
mov
clc
inc
repz
push
mov
xchg
xchg
outsl
aas
ds
lods
push
idiv
leave
cmpsl
fwait
int
test
mov
mov
test
int
dec
lods
jl
stos
cwtl
xor
dec
scas
inc
sbb
cmp
rorl
dec
adc
popf
call
push
mov
inc
mov
aas
pop
push
in
rclb
jle
cmp
pop
and
dec
jg
cmp
cmp
sahf
xchg
lret
sub
addr16
loope
les
mov
sbb
add
fucomp
and
xchg
xchg
mov
dec
jno
je
push
sarl
mov
jmp
insl
fldenv
fsubs
xor
out
mov
mov
mov
pop
pop
cmp
pushf
adc
adc
cmpsb
mov
test
jno
mov
mov
test
jns
and
xor
stos
add
pcmpgtd
xchg
mov
aaa
xor
push
xchg
pop
jle
pop
add
mov
xor
add
jbe
outsl
add
xor
push
orb
or
out
cli
pop
loop
pop
mov
sub
cmp
insb
jecxz
and
out
add
xor
push
es
adc
movsl
lret
or
push
iret
movsl
jno
iret
adc
dec
or
shlb
xor
cld
mov
shrb
mov
andl
push
dec
out
or
icebp
inc
mov
xor
fchs
jge
data16
mov
xor
sbb
jno
jbe
aad
pusha
je
mov
ret
cli
testb
push
push
int3
pushf
clc
mov
sbb
clc
inc
mov
inc
in
out
or
pop
rcl
sub
rcrb
inc
jmp
shlb
pop
lods
bound
xchg
or
insl
fsubr
cmp
push
mov
adc
jecxz
push
cmpsb
adc
jl
lods
shll
sub
iret
nop
movsl
ja
jg
cs
push
int3
jno
mov
enter
xchg
mov
imul
dec
bound
pmulhuw
out
aaa
mov
cmp
inc
push
cmp
add
xor
cmp
lahf
sbb
fwait
test
jno
push
stos
test
sub
lds
outsl
sub
rclb
lahf
lea
pop
ljmp
loop
inc
mov
inc
out
and
mov
and
stos
mov
sub
sbb
add
subl
sbb
xchg
icebp
dec
pop
shlb
ja
mov
sti
imulb
jp
scas
pop
stc
jg
push
pop
and
ret
push
sahf
stc
and
jb
sbb
add
arpl
stc
cltd
push
pop
rcr
cmpsb
lds
test
or
fdivrs
jno
xchg
in
mov
les
and
lds
mov
stos
cmc
je
sub
push
xchg
pop
cld
cli
xor
into
mov
pop
divl
xchg
cmp
cmp
ds
mov
aad
adc
push
shlb
arpl
cld
and
xchg
push
dec
push
stc
xor
and
popf
and
aaa
cmpsl
xchg
dec
xor
shlb
loope
inc
jg
inc
ljmp
jns
adc
xchg
fcoml
arpl
push
cs
xchg
inc
ljmp
push
push
or
push
jnp
jge
lahf
xor
outsb
jne
lahf
cld
sub
es
dec
sbb
rolb
inc
push
loopne
outsb
scas
test
mov
fs
jae
fs
mov
cmpl
mov
sbb
pop
flds
xchg
fwait
and
add
push
shlb
pusha
jb
movsl
or
sarl
adc
sub
insl
xor
in
mov
mov
inc
dec
pop
movsl
sub
adc
jle
jb
mov
sbb
js
call
aaa
pop
mov
cmp
outsb
jge
insb
pop
aas
push
push
sti
adc
xchg
xchg
push
add
or
adc
test
mov
mov
pop
repz
out
ja
fildll
jge
push
sub
cs
stc
cli
dec
push
adc
jp
add
aad
jno,pn
testl
xor
daa
pop
add
in
addr16
fiaddl
ret
cmp
gs
or
cmp
flds
fsubp
pop
in
push
lods
movsb
aad
xor
repz
xlat
pop
pop
and
mov
adc
inc
jns
push
nop
in
sbb
ret
popa
out
enter
nop
xchg
pusha
sbb
mov
xchg
add
out
test
das
jecxz
dec
adc
sub
adc
repz
icebp
and
pop
leave
or
inc
jo
repnz
ds
pop
lds
ss
stos
loopne
fidivrl
in
movsb
push
enter
in
push
lcall
int
cmp
dec
jle
cltd
or
mov
pop
mov
lods
and
fs
push
popf
lods
orl
pop
insl
cli
mov
jecxz
mov
add
xor
jno
push
push
stc
inc
sbb
pop
xor
inc
lods
lret
mov
adc
sbb
mov
lea
fldl
xchg
mov
into
sub
enter
into
and
sbb
mov
fiaddl
test
push
std
mov
xor
push
out
push
jmp
cmp
mov
in
push
lret
insb
adc
sbb
jne
pop
jno
test
or
es
or
mov
fsubr
lahf
pop
add
lods
push
mov
into
lcall
in
jns
adc
orl
dec
mov
xchg
and
mov
jmp
pop
in
push
cmp
push
mov
dec
pushf
xlat
and
mov
cli
popf
sbb
xchg
fsubrs
lods
mov
jbe
mov
sbb
jno
xchg
mov
mov
inc
and
es
pop
push
jle
mov
stc
mov
lods
leave
leave
adc
ljmp
mov
stc
push
lret
imul
movsb
sbb
pop
or
mov
bound
ljmp
ret
cmp
sti
inc
mov
sub
movsl
and
and
arpl
pop
test
xor
xor
fs
in
addr16
fidivrl
fadds
jmp
into
jb
xchg
pop
inc
aad
stc
sub
jl
adc
xchg
ficoml
cmc
sti
adc
pop
xchg
xchg
into
mov
cmp
cltd
xor
inc
cmp
fsubrl
leave
adc
rcr
and
pop
fnstenv
and
ja
and
mov
lahf
add
daa
mov
add
scas
gs
push
push
pop
pushf
int3
lods
and
and
in
lret
fldl
mov
adc
insb
or
outsb
xor
xchg
and
push
and
adc
dec
or
sub
cli
rolb
ror
adc
scas
pop
push
fimuls
mov
mov
inc
loope
stos
pop
scas
ljmp
xchg
scas
in
test
cmp
or
loope
sbb
std
pop
hlt
add
cmpsl
clc
stos
movsb
jbe
push
cmp
cwtl
hlt
aas
cmp
adc
xchg
ss
adc
stc
inc
mov
and
jns
jecxz
adcb
dec
lcall
ja
daa
aad
pushf
shufps
jmp
xlat
mov
mov
loop
lahf
push
ja
xchg
adc
call
loope
lea
jge
ds
mov
push
adc
shr
je,pt
into
push
ret
adc
xor
fs
xor
fcmovnbe
lcall
jp
mov
andb
inc
xchg
xchg
scas
divb
push
pop
xor
xchg
dec
nop
aad
popf
mov
adc
aad
mov
repz
push
fisubs
inc
push
sahf
cmc
pop
dec
xor
fstpt
or
popf
adc
mov
pusha
enter
sub
push
push
repnz
xor
mov
imul
hlt
dec
icebp
dec
out
icebp
sub
lahf
test
out
addr16
cld
mov
mov
inc
fs
push
jg
repz
rcrb
ficoml
test
test
enter
pop
mov
sbb
mul
inc
loopne
lods
adc
and
mulb
xchg
push
mov
test
inc
iret
ficoml
pop
stos
sub
or
mov
out
inc
sahf
pop
xchg
loopne
adc
stc
leave
sub
shl
cmc
mov
lret
inc
nop
cmp
hlt
add
daa
into
iret
inc
mov
xor
push
daa
push
ss
ss
enter
in
test
mov
int
mov
std
mov
jg
jno
cmp
repnz
push
inc
js
and
xchg
inc
int
mov
cmp
inc
out
mov
ret
lcall
shr
and
dec
jns
dec
fs
adc
sbb
and
push
shll
js
lret
cmpl
and
and
jo
clc
xor
jge
push
jge
fildll
add
ror
lret
dec
pusha
and
lret
clc
mov
dec
inc
push
icebp
in
xor
pop
decb
call
sub
push
cltd
mov
cmpsl
aaa
push
in
shl
mov
rclb
loope
xor
xchg
bound
adc
mov
into
les
inc
fsubrl
in
mov
sub
ja
mov
sahf
mov
xchg
add
adc
and
cmp
sub
das
fistps
pop
cmc
fisubl
addr16
xchg
fnstcw
in
daa
fcom
xchg
test
and
iret
lock
push
adc
add
adc
jns
jno
mov
push
je
inc
mov
repnz
xchg
dec
or
fistpl
push
rolb
jnp
push
arpl
inc
lods
cmpl
cmp
and
cmpsb
fiadds
sub
loop
xor
insb
mov
nop
or
xchg
sub
xchg
push
push
xchg
jnp
xchg
adc
testl
jg
cltd
aad
add
in
repz
lock
xchg
mov
sbb
scas
push
test
jmp
xchg
xchg
add
jmp
push
inc
pop
in
mov
dec
xor
pop
and
adc
int3
sti
add
out
push
fs
push
ljmp
pop
push
insb
or
sub
jnp
scas
lds
sahf
push
fmul
jns
icebp
cld
inc
ja
addr16
fnstcw
into
rcll
int3
scas
xor
xchg
add
les
ds
and
dec
jno
gs
std
fldcw
adc
jnp
mov
lret
mov
mov
cmp
prefetchw
jbe
cmp
add
jno
shrb
mov
aaa
scas
sub
adc
dec
loope
sub
push
test
fucom
outsb
pushf
imul
cmp
cmp
mov
dec
call
sbb
mov
adc
cld
jae
pushf
gs
int
je
adc
fdivrl
movsb
insb
fwait
sbb
or
push
mov
scas
out
cmc
add
lea
imul
mov
leave
sub
sarb
fdivr
test
daa
pop
jns
push
test
and
push
xlat
psadbw
aas
add
cmpsb
jno
mov
xor
xchg
add
rol
jno
fldcw
sti
int3
pop
sub
mov
push
and
adc
and
mov
cwtl
lret
jmp
gs
push
add
xor
sti
int3
pop
enter
loopne
popf
popa
sbb
and
sbb
or
icebp
dec
in
leave
mov
cmp
mov
imul
add
aas
pop
add
outsb
sbb
ljmp
lods
les
aad
fistpll
cld
das
fst
add
mov
in
add
sub
cmpsl
outsl
jo
repnz
cmp
popf
and
outsl
jp
mov
inc
ljmp
xchg
and
lret
sub
mov
and
fisubrl
insb
xor
ret
sub
pop
xchg
sbbb
call
sbb
add
ret
sbb
loope
jae
daa
cmpsl
adc
mov
adc
mov
loope
daa
out
cmp
push
fnstenv
faddl
push
mov
in
call
ret
out
imul
sbb
cmp
push
shr
fcoml
pop
push
or
fadd
push
jl
xor
pop
divb
inc
xchg
mov
and
sub
mov
sbbl
sarb
pop
mov
adc
js
sub
sahf
push
mov
add
cmp
add
cmc
arpl
push
mov
lock
adc
cmpsb
es
test
pop
out
pusha
jp
or
add
lods
add
adc
imul
dec
shr
jg
std
xor
mov
mov
sub
pop
inc
cmp
sbbl
adc
push
je
pop
inc
in
arpl
out
pop
sbb
mov
xchg
dec
mov
hlt
call
aad
scas
notl
hlt
xlat
pop
fst
inc
and
lods
xlat
leave
test
xor
inc
pop
fwait
stos
test
mov
lahf
test
cmp
push
out
dec
call
ret
fwait
add
movl
inc
inc
loope
popa
push
popf
mov
mov
xorb
adc
test
and
stos
dec
and
rclb
inc
imull
lds
xchg
popa
mov
sub
cmpsb
jmp
xlat
cmp
out
nop
pop
testb
mov
sbb
inc
jne
mov
add
in
or
mov
les
xchg
mov
push
sbb
jae
and
cs
sub
and
es
dec
lret
push
insb
pop
adc
mov
inc
jg
test
fidivs
dec
push
cmp
or
dec
push
push
dec
push
dec
ret
pop
adc
dec
roll
or
aaa
aad
mov
mov
jae
dec
pusha
lea
lods
loopne
sbb
and
sub
fidivrs
incl
xchg
lret
clc
sub
mov
cwtl
or
xor
lods
sti
out
sbb
andl
in
addr16
scas
jg
or
std
add
jno
aam
mov
cmp
fs
orl
in
mov
in
and
fbld
push
outsl
and
loope
scas
push
mov
leave
jmp
mov
out
pop
in
arpl
mov
mov
inc
pop
push
arpl
sub
xchg
cli
jns
mov
sub
cmp
inc
adc
lret
add
mov
aad
mov
ljmp
pusha
mov
xchg
sub
sub
leave
mov
add
adc
or
mov
jg
movsl
arpl
inc
sbb
xchg
or
cwtl
xchg
das
aas
xor
or
sbb
push
lea
xchg
mov
push
cld
add
pop
xchg
add
xchg
sub
cmpb
lock
xchg
sbb
movsl
pop
lds
mov
lahf
cmp
cwtl
jp
insl
outsl
jae
sub
push
jns
mov
aas
test
loope
xchg
aad
ret
sarb
into
mov
test
mov
mov
fwait
pop
mov
add
imul
sbb
enter
out
cwtl
cld
popa
push
sub
insl
sbb
or
xor
mov
xchg
popf
xchg
mov
pop
roll
pop
sbb
push
pop
leave
xchg
mov
popa
add
and
nop
test
cwtl
shlb
xor
fldl
sbb
out
mov
test
imul
push
lea
lret
inc
insl
jge,pt
in
test
dec
push
pop
imul
or
pop
xor
xor
imul
mov
lahf
imul
jp
mov
popf
pop
jns
icebp
or
movsl
nop
xor
push
test
mov
fsubs
aas
scas
cs
sbb
mov
mov
pop
sar
lahf
cmp
xchg
add
xchg
push
scas
cmp
mov
sub
fidivs
test
dec
test
movsl
cmp
cmp
xchg
imul
mov
sysexit
adc
sti
cmp
jge
lock
je
aas
cmpsl
es
callw
repz
dec
mov
aam
adc
dec
adc
lods
stos
lret
shl
test
pusha
jmp
jmp
in
adc
pop
jnp
fsubrl
in
gs
cmpsb
mov
lret
push
fwait
jl
call
adc
mov
dec
out
fisttps
dec
jne
mov
bound
mov
rcr
ljmp
xchg
imulb
xchg
mov
sub
cmp
fwait
imul
bound
push
decb
repnz
add
stos
push
jp
sub
jne
repz
mov
test
push
xchg
jns
and
out
and
addr16
mov
sub
jge
lcall
std
jp
add
xchg
lahf
nopl
and
mov
lcall
mov
dec
mov
in
adc
ds
sub
mov
hlt
out
sub
sbb
iret
pop
lods
loope
icebp
movsl
testb
out
fdivrl
pop
pop
cmpsl
popf
sbb
xchg
cmp
repnz
fdivs
scas
sub
sbb
ss
js
idivb
mov
mov
add
xor
add
sub
daa
cmp
lods
arpl
js
sar
sub
xchg
or
lds
outsl
push
mov
cli
insl
nop
clc
insb
and
sahf
mov
popa
sbb
add
xchg
adc
dec
outsl
in
pop
mov
lcall
sub
jne
xchg
pop
cmp
fwait
jnp
push
dec
faddl
or
movsb
idivl
xchg
ja
sbb
sbb
inc
cmp
ficompl
inc
jle
ss
jmp
pop
in
shr
aam
sub
dec
adc
mov
ja
mov
std
xor
mov
pop
push
jnp
lcall
dec
test
iret
or
clc
movsl
stc
mov
adc
loopne
jo
repz
sbb
sbb
mov
add
push
push
inc
jnp
pusha
int
or
inc
mov
loop
push
and
push
lret
mov
inc
inc
dec
dec
rcl
pop
scas
sarb
push
aaa
and
arpl
js
xchg
mov
sub
jle
mov
cwtl
in
test
cltd
jp
in
add
dec
rorl
push
in
mov
push
inc
xchg
push
jbe
xchg
push
dec
test
mov
jp
cmpsl
data16
stos
sbb
jo
or
pop
daa
cmp
lahf
adc
or
dec
xorb
or
inc
mov
xchg
enter
xchg
dec
xchg
inc
in
push
jge
fs
sub
cmp
mov
sarl
xchg
scas
roll
rcrl
mov
jecxz
push
lret
xchg
and
in
shll
ljmp
inc
or
call
inc
jg
scas
mov
xor
fistl
adc
fstl
imul
jecxz
lret
cmp
sysenter
movsb
inc
xor
sub
pop
dec
or
adc
add
rorl
dec
jmp
xchg
xchg
cmpsl
pop
jae
mov
xor
movsb
ds
and
repnz
out
pop
jl
jo
mov
leave
mov
and
inc
aam
adc
xor
ljmp
mov
fmul
mov
mov
int3
inc
cltd
pop
xchg
mov
loope
jnp
jp
mov
out
jne
cs
sub
xchg
add
nop
adc
or
jg
adc
mov
lods
mov
mov
inc
inc
icebp
push
clc
jle
ret
imul
cld
fstpl
out
pop
notl
movsl
sub
fwait
negb
mov
mov
or
stos
push
xchg
mov
rcrb
inc
add
cmp
stc
movsb
mov
in
jecxz
cwtl
pop
cmp
adc
leave
jb
push
divb
test
shrl
push
jle
scas
xchg
out
shll
gs
popf
push
sbb
mov
sub
adc
jb
inc
cmpsb
and
fsubrl
in
cmp
inc
pop
imul
movsl
mov
inc
xchg
test
mov
cmpsl
jg
mov
xchg
or
pop
inc
shlb
leave
xchg
mov
lcall
shlb
movsl
into
jle
es
cmp
jge
cmpl
adc
ja
and
loopne
cmp
mov
mov
sub
pushf
arpl
repz
mov
cmp
arpl
sbb
sar
inc
xchg
ss
mov
andl
into
out
push
sbb
dec
das
xchg
adc
jbe
mov
into
push
stos
rorb
xchg
pusha
pop
sbbb
jle
pushf
cmp
push
fistps
sub
sub
jne
sbb
adc
fs
aas
jne
and
xchg
pop
cltd
jae
mov
stos
sbb
add
stos
inc
pushf
push
mov
add
shll
jno
pushw
and
xchg
push
add
enter
pop
roll
cwtl
je
mov
jl
sub
insb
push
or
nop
and
in
push
daa
mov
into
cmp
adc
aas
clc
loope
inc
cmp
lods
xor
lock
push
imul
addb
in
aaa
lret
push
sarb
aas
mov
cld
mov
pop
dec
lcall
testb
ljmp
aam
jmp
jp
mov
sbb
jle
ljmp
add
rcr
divb
and
adc
sbb
pop
fwait
das
pop
cli
pushf
sarl
icebp
pop
and
cltd
ljmp
sub
mov
jne
mov
insl
jle
in
and
or
jl
mov
cmp
cld
adcl
mov
imul
mov
pop
jle
jo
rcll
or
and
fs
int
movsb
xchg
in
adc
mov
test
arpl
test
incb
pop
add
jno
ret
sub
xor
out
leave
dec
jns
push
daa
adc
push
xor
or
push
ror
sbb
addl
add
mov
and
data16
in
or
lret
xor
push
outsl
shlb
and
xchg
xchg
add
jae
test
andb
jmp
dec
mov
repz
pusha
shll
ss
inc
out
aaa
push
ds
jb
popf
sub
aas
cmp
test
xchg
test
inc
and
pop
sub
jg
cmpsb
scas
mov
mov
shlb
mov
test
cld
les
lock
ret
jbe
mov
mov
stos
stos
jnp
jecxz
sbb
fcmove
push
incl
adcl
inc
ret
jns
scas
test
xchg
cmc
adc
das
lods
or
and
cmpb
mov
pop
addr16
ret
out
cmc
and
xchg
add
lods
add
push
je
fs
mov
lahf
dec
sub
push
popf
ljmp
jecxz
sub
sub
rclb
mov
in
dec
fwait
ret
out
sub
cmp
outsl
jp
pusha
out
stos
js
and
or
nop
movsb
jle
or
iret
xchg
mov
and
cli
jl
leave
notl
mov
push
cmp
mov
loopne
sub
inc
pop
lock
es
xor
push
jecxz
mov
shl
inc
fsts
in
stos
or
mov
cmp
push
and
cmc
out
es
rcll
push
mov
mov
pop
or
je
movsb
orl
repz
inc
pusha
adc
repnz
test
dec
loope
sub
daa
roll
jae
ficompl
fs
sub
mov
iret
in
inc
xor
sub
push
ret
mov
insb
pop
or
adc
lods
clc
push
outsb
imul
pop
inc
loope
push
in
fsubl
loopne
inc
stos
add
pop
call
xchg
jmp
push
pop
dec
hlt
loope
mov
in
fstpl
mov
jnp
inc
paddb
mov
adc
sbb
sbb
add
inc
pop
fists
sbb
and
and
clc
cmp
and
out
scas
aas
out
pop
mov
repz
pop
mov
popl
sbb
push
jge
mov
mov
in
stos
mov
mov
xchg
out
inc
mov
inc
into
mov
push
pop
stos
fstl
arpl
add
xorb
fsubs
imull
pop
sub
mov
decb
inc
fisttps
xchg
xor
and
xor
dec
adc
sti
fmuls
sub
loope
int
sbb
leave
arpl
mov
dec
cmp
popa
push
les
std
jo
in
aaa
push
or
and
mov
or
push
pop
push
ljmp
insl
int3
sub
jmp
in
or
adc
xchg
mov
mov
cvtpi2ps
push
pop
out
xor
std
xor
sub
mov
mov
sub
scas
jnp
fstl
insl
aam
test
popf
cmpsb
ds
jae
sbb
xchg
dec
jne
bound
sahf
lea
mov
xchg
sub
add
fxch
jge
popl
addb
addl
shrb
push
inc
aaa
loop
pop
int
mov
cmp
sahf
or
negl
in
mov
aaa
xor
es
or
frstor
xchg
cmp
mov
gs
xchg
leave
fmuls
sub
scas
pop
mov
lock
mov
adc
or
orl
popa
push
ss
mov
icebp
xor
mov
cmp
and
xchg
xor
cld
popa
sbb
adc
sbb
bnd
sub
aaa
xchg
push
push
ljmp
sbb
test
shlb
mov
testl
ja
or
sti
cmp
cmp
mov
inc
les
jp
or
stos
lea
jno
add
es
or
out
cmp
loopne
push
jle
daa
adc
stos
adc
dec
clc
inc
call
fs
jmp
popl
fstps
movl
stos
iret
cmpsb
push
sub
jecxz
mov
cmp
fistl
or
fs
sbb
jbe
inc
sub
add
je
dec
jl
adc
mov
xor
xchg
xchg
inc
jmp
sub
inc
jo
lret
mov
adc
scas
mov
xchg
adc
icebp
mov
jl
arpl
cmp
bound
scas
daa
jno
aam
loope
inc
push
lods
dec
insb
xchg
lcall
jmp
fisubrl
cmp
notl
or
jne
xchg
mov
aad
and
mov
out
leave
or
call
add
into
cli
mov
xchg
and
subb
pop
inc
in
movsb
dec
nop
out
and
in
sub
pop
shr
inc
adc
sub
aam
cmp
adc
call
or
pushf
lahf
pop
daa
pop
xor
faddl
jp
and
mov
das
pop
ret
pop
lods
rcrl
and
imul
mov
mov
lcall
scas
mov
or
insl
aad
adc
sub
outsb
popa
adc
ficoml
lds
push
call
jb
xor
mov
jo
cld
and
pop
aas
dec
into
gs
cmp
xchg
cld
xor
jge
sub
out
lret
jae
cmp
jp
outsb
ljmp
push
lea
cmp
in
and
test
ret
xchg
mov
cmpsl
insb
roll
pop
ss
mov
lea
sbbl
push
mov
pop
int
cmp
iret
test
outsb
mov
cmpsb
dec
lods
mov
lcall
sbb
scas
mov
repnz
adc
imul
adc
in
add
test
xor
shl
jl
aam
stc
cmp
mov
or
mov
add
cmp
push
in
xchg
xchg
xchg
cltd
aam
or
push
sbb
out
xchg
ret
fs
aaa
push
cwtl
xchg
add
add
jae
es
mov
clc
aad
bndldx
push
stos
or
and
mov
movsl
add
iret
aas
jmp
out
mov
xor
push
bound
xchg
cld
addl
scas
jo
int
mov
jbe
sbb
test
aas
loop
dec
loope
xor
and
mov
xchg
lods
mov
loop
bound
rclb
mov
sub
loope
lret
mov
test
cmpsb
ret
in
lcall
sbb
jle
or
idiv
and
stos
fcompl
rclb
pop
lods
sub
ret
sbb
inc
dec
push
mov
lds
sar
pcmpeqb
add
xor
xchg
mov
pop
shr
jne
jge
movsl
hlt
test
cltd
or
jle
xchg
ljmp
fistpl
lret
jb
or
sbb
jg
loope
cmp
jmp
mov
inc
jnp
mov
test
push
mov
pop
lea
int
dec
into
mov
bound
sub
add
and
inc
and
sbb
mov
xor
push
xchg
test
js
dec
loop
mov
mov
test
sub
cmp
push
push
int
cwtl
or
loop
push
mov
inc
push
xor
test
ljmp
int
cld
xchg
and
xor
sub
add
mov
lea
ret
sub
sbb
insb
mov
adc
pushf
pop
and
fisubrs
xchg
repnz
leave
orl
ss
xchg
dec
int
jae
pop
pusha
inc
xchg
out
outsl
cmp
call
cmp
and
mov
test
aam
idivb
xor
rcll
inc
cmpsl
sub
fistpl
push
pop
pop
ljmp
jmp
daa
rcr
test
pop
lret
sbb
and
push
repnz
loopne
cli
pop
mov
cmp
jg
or
addr16
jecxz
pop
xchg
pop
loop
xchg
adc
sti
xor
das
lea
test
pop
jb
fdivp
pop
cld
and
pushl
cmp
sub
or
lods
dec
incl
mov
stc
lret
adc
dec
jecxz
stc
popf
popa
imul
lods
outsb
jno
push
cmp
pop
mov
and
xchg
jb
add
stos
popa
mov
and
call
or
cli
roll
stos
pop
mov
mov
data16
insl
loop
imull
mov
insb
push
stc
xchg
pop
in
sub
aam
mov
pushf
jne
lods
cld
jns
add
mov
rcrb
popf
rolb
shl
dec
push
mov
inc
mov
jmp
cmp
lods
iret
mov
pop
mov
adc
aam
iret
data16
or
inc
fstl
les
xor
pop
test
pop
and
push
scas
and
loop
xchg
cmpsb
sbb
adc
std
push
cltd
dec
das
xchg
out
and
fbstp
or
call
mov
movsb
ds
add
xchg
rolb
cltd
loopne
pop
ret
xchg
xchg
jnp
push
mov
in
pop
lcall
mov
cmp
pop
inc
xchg
sbb
sbb
adc
ljmp
dec
loope
fbstp
xchg
lret
dec
sub
cmp
inc
adc
std
xchg
test
nopl
rclb
arpl
pop
ljmp
scas
je
jne
pop
mov
int3
mov
pmulhuw
pop
sub
inc
cmp
push
add
inc
inc
notl
xchg
cmp
pop
push
and
dec
lock
stc
adc
das
out
dec
mul
mov
pop
mov
add
int
cld
les
sti
mov
xchg
scas
test
xchg
jnp
push
add
mov
rcl
lcall
lcall
push
mov
xor
or
nop
aam
adcb
sbb
imul
inc
scas
insb
pusha
outsl
movsb
add
push
loop
xchg
test
ss
pop
sbb
xor
lcall
mov
dec
cmp
je
sbb
lods
popa
add
push
rcrb
lods
inc
inc
mov
push
and
orb
je
and
mov
imul
fsubs
push
jno
sub
das
popa
jae
jecxz
aad
mov
fsubrl
mov
aam
lret
in
cmp
mov
jg
mov
xchg
mov
push
or
and
insl
push
das
popl
arpl
xchg
push
mov
ds
lods
mov
mov
or
add
lcall
popf
mov
cvtpi2ps
xchg
lret
out
or
fimuls
scas
pop
sbb
test
out
dec
cmc
cmpsb
cmp
loope
lds
mov
cs
dec
pop
imul
notb
push
and
push
push
xor
dec
xchg
sub
push
mov
rol
xchg
xor
nop
cmp
icebp
decb
cmp
call
pusha
adc
and
jle
xor
jns
push
xchg
adc
xchg
pop
cmp
push
ret
test
out
dec
js
adc
sbb
sti
mov
mov
sub
xchg
rcl
xor
imul
dec
jae
icebp
movl
test
lret
fwait
push
push
aaa
xchg
pop
adc
fidivrs
mov
or
inc
enter
xchg
in
mov
loopne
mov
js
jmp
ja
xor
shlb
call
fwait
lods
pop
lahf
in
sahf
mov
sbb
push
aam
mov
adc
dec
jno
nop
mov
mov
sub
pop
add
jp
stos
int
movsb
icebp
out
adc
nop
insb
push
cmp
outsl
dec
jne
dec
cmovno
mov
mov
push
jmp
dec
adc
lds
pop
jmp
cmpsl
cld
xchg
lods
loope
push
mov
add
test
sbb
add
addl
mov
xor
mov
rcl
mov
insb
inc
dec
xchg
mov
pop
add
push
dec
adc
in
and
xchg
jns
xchg
std
cs
xchg
cmp
mov
add
jle
andl
push
lret
shlb
insb
fisubrs
jb
push
mov
setg
xchg
push
jge
or
fsub
sbbl
push
nop
shll
inc
insl
inc
stos
push
sbb
add
xor
xchg
cmp
clc
dec
mov
loopne
cmpsl
pop
push
jne
dec
mov
cmp
xor
lret
push
adc
jle
sarl
lods
pop
xor
insb
loopne
and
es
jnp
push
sub
adc
fdivl
das
out
cli
push
pop
xor
hlt
icebp
push
in
in
insb
pop
insb
jp
ljmp
ret
in
daa
scas
mov
dec
inc
jae
stos
sahf
push
sub
js
lret
mov
enter
and
dec
xor
jl
xchg
jmp
push
lret
pop
aam
and
ljmp
dec
inc
mov
ret
sbb
jb
rcll
arpl
in
jb
xchg
mov
pop
fnstenv
loope
dec
mov
addr16
dec
cs
enter
add
out
ficoms
loopne
inc
pop
fisttps
xchg
adc
jb
jae
or
pop
lcall
jmp
les
mov
cmpl
mov
cltd
inc
cwtl
xchg
outsl
xor
fsubrs
es
nop
mov
add
push
out
adc
lds
ficoml
lcall
pop
mov
mov
jnp
cmp
gs
jne
xor
out
ljmp
jp
insb
and
movsb
ss
adcl
cmpl
out
mov
push
mov
pop
aam
sbbl
mov
outsb
jge
push
pop
dec
jns
inc
fstpt
or
dec
ss
sti
pop
mov
push
repnz
xor
arpl
push
inc
mov
das
jae
lcall
adc
jmp
leave
rclb
adc
xlat
lock
cmc
inc
jae
popf
movl
add
imul
xchg
aam
mov
or
add
dec
pop
jns
test
dec
mov
xchg
data16
xchg
movsl
leave
scas
xor
into
notb
xlat
pop
std
and
mov
push
push
adc
sub
in
cltd
ret
or
push
mov
int
sub
dec
nop
jp
pop
mov
jbe
adc
jno
addr16
jmp
fdivp
arpl
cmp
das
std
fists
loop
sbb
add
mov
adc
jle
divb
cs
jnp
fsubrl
mov
inc
or
arpl
pop
daa
inc
imul
in
cmp
adc
loopne
push
fstpt
shlb
xchg
mov
aas
fs
push
or
ret
in
lret
push
pop
jl
cs
or
dec
cltd
xor
movsl
mov
inc
lahf
or
js
xchg
jo
xchg
dec
fs
sti
bound
pop
int3
inc
inc
imul
js
dec
pop
dec
push
shll
mov
enter
shlb
and
dec
lahf
dec
pop
push
insl
xor
and
pop
add
daa
movsl
adc
mov
cmp
add
xchg
pop
sbb
insl
and
add
pop
out
hlt
xchg
jp
jbe
and
mov
cmpsb
add
cld
lret
sbbl
dec
push
ljmp
loopne
jo
in
adc
sub
in
mov
jne
dec
cld
cmpsb
push
sub
imul
int3
xlat
pop
xchg
fs
rorb
dec
mov
fisubrs
inc
cmp
jnp
je
sub
sub
push
popf
dec
push
les
push
sub
out
lret
push
test
insl
sbb
sub
pop
sub
test
sbb
movsl
es
inc
and
cmc
xor
xlat
pop
push
test
push
arpl
mov
test
pusha
mov
std
sti
adc
es
int
xchg
adc
xlat
mov
or
mov
jle
rcrl
call
jns
out
in
sarl
xor
cmp
cmp
xchg
mov
or
out
push
mov
ret
add
push
mov
and
add
mov
sbb
xchg
repz
insb
push
in
sub
add
aam
mov
and
pop
xchg
fists
cld
sbb
jge
stos
sub
pop
sbb
mov
adc
push
enter
pop
loop
orb
sub
bound
adc
add
cmp
fsts
cmp
pop
movsl
or
xor
pop
popa
sub
out
sbb
out
jmp
cli
hlt
ret
jns
dec
xchg
inc
movsb
mov
enter
icebp
stc
xchg
jg
fdivs
repz
push
push
push
js
xor
dec
imul
les
je
aaa
dec
movsl
popf
mov
aas
hlt
push
mov
cmp
dec
sub
mov
inc
ds
lahf
hlt
and
imul
mov
dec
imul
jne
mov
lret
xchg
pusha
jmp
xorl
push
pop
pusha
cmp
xorl
adc
popf
nop
cltd
pop
gs
pop
div
mov
xchg
and
xchg
call
cmc
fcoml
mov
xchg
jge
and
lret
add
jge
push
push
inc
lret
outsl
inc
mov
dec
or
push
insb
cmp
shrb
and
movsl
mov
test
rol
or
mov
dec
mov
fbstp
pusha
arpl
mov
xor
filds
imul
jp
stos
popa
and
mov
cmp
mov
outsb
cmp
jle
xlat
testb
and
xlat
cmp
iret
daa
insl
jge
lcall
and
mov
inc
sbb
add
out
nop
jecxz
fxch
fbld
xchg
aam
pop
out
out
lock
xor
or
scas
jle
bound
std
icebp
cli
sub
push
and
cmp
add
out
test
dec
cmpl
sbb
notb
mov
out
xchg
jbe
bound
sbb
mov
andb
fdivrs
inc
stc
mov
shrl
pop
loopne
sbb
dec
subb
or
push
pusha
mov
stos
fnstsw
or
inc
xchg
inc
ss
mov
pop
mov
test
fwait
and
jne
pop
mov
bnd
push
ja
das
sbb
mov
push
inc
cmp
in
fdivp
call
sub
les
ficoms
jns
rcll
jbe
dec
xor
movsl
push
fcoml
test
cmpl
push
arpl
in
je
dec
stos
jns
test
shl
ror
lods
and
insl
xchg
lods
cmp
push
or
mov
cli
clc
add
dec
scas
in
xlat
leave
adc
in
push
test
add
sbb
xchg
insb
cmp
into
je
jp
or
mov
mov
mov
leave
dec
mov
adc
push
sub
insb
mov
in
and
push
lods
jecxz
sti
xorl
lock
ret
mov
mov
dec
mov
rcr
jmp
mov
inc
inc
adc
xchg
shr
test
shll
inc
pop
mov
pop
pop
and
sub
cmp
mov
cmpl
les
insl
or
jns
or
fcmovb
push
adc
mov
out
jne
jecxz
mov
and
pop
mov
mov
and
push
jl
xor
ds
jno
cltd
sarl
xchg
jge
clc
sbbb
lret
inc
jo
or
arpl
repnz
les
mov
sub
dec
orl
inc
xchg
push
xchg
mov
pop
cmp
dec
pop
clc
mov
sbb
sub
or
cld
pmuludq
add
js
test
mov
jo
push
rorl
test
lds
push
sbb
xor
stos
push
scas
ljmp
jle
mov
imul
ss
mov
cwtl
mov
imul
bound
or
cltd
into
mov
in
push
stos
jb
pushf
cld
testl
mov
inc
pop
gs
insl
iret
inc
lea
or
shll
bound
mov
cs
pmaxsw
imul
jno
ss
xchg
sbb
scas
dec
xor
or
ja
mov
xchg
stc
push
mov
xor
sub
negb
mov
cld
and
inc
mov
ja
js
lods
fiadds
cwtl
shll
lock
and
xchg
sbb
rorb
fsts
pop
negl
xchg
call
sub
jmp
test
pop
fcmovne
icebp
jne
hlt
cmp
adc
movsl
hlt
mov
inc
xchg
aaa
dec
negb
lock
out
fldcw
pop
notl
add
mov
xchg
sub
retw
dec
fidivrl
mov
or
jo
pop
push
rcll
and
and
xchg
out
sub
pop
idiv
sub
cmp
jl
mov
loop
enter
aad
mov
cmp
push
mov
add
add
sbb
ds
scas
cwtl
push
pop
adc
ss
sti
iret
outsl
or
daa
jmp
iret
jns
rep
dec
xchg
sti
dec
fidivs
out
inc
int3
add
cmpsl
and
dec
add
popf
add
jbe
jno
lret
mov
mov
lock
and
divb
ds
dec
cmc
adc
inc
in
mov
jno
cmp
sub
mov
sub
icebp
loop
in
adc
adc
ret
mov
fsubp
push
imul
push
es
mov
mov
dec
cmp
push
mov
mov
jb
push
std
mov
shll
push
ja
pop
fwait
mov
push
mov
or
and
cwtl
pop
and
mov
loope
ds
jno
mov
jle
divb
popa
iret
pushf
push
arpl
adc
xchg
pop
xor
or
add
mov
mov
inc
cltd
cmpsl
shlb
shll
pop
dec
iret
inc
xchg
lods
aas
ds
adc
aaa
shl
xchg
into
lret
adc
xor
push
mov
jmp
jle
cmp
inc
and
sub
pop
and
outsl
dec
xor
adc
imul
sbb
inc
outsl
test
sbb
inc
rcll
in
fs
pop
sbb
inc
in
int3
jp
inc
adc
jae
push
psraw
lahf
int3
jge
neg
addr16
daa
das
adc
sti
pop
pop
mov
lahf
fwait
sbb
hlt
push
ds
pop
aam
andl
ss
in
or
shl
out
or
cmp
bound
punpckhbw
arpl
sub
mov
inc
out
and
addr16
or
pop
sub
arpl
out
ja
mov
jmp
int
sub
xor
dec
pop
arpl
or
jg
jle
or
adc
jp
loopne
cmp
adc
jbe
cli
jae
repnz
push
clc
pop
movsl
pop
cmp
pusha
pop
packuswb
loope
mov
mov
jno
sub
lock
inc
dec
sub
pop
cmp
mov
int
jnp
mov
push
inc
incb
loope
divb
call
adc
and
mov
aam
fwait
add
pusha
mov
ret
sub
lret
add
fmuls
jecxz
lcall
dec
cmp
add
sub
shrb
dec
imul
shll
ss
lahf
adc
adc
cmc
or
adc
push
adc
orb
ljmp
fmull
das
stc
mov
or
xchg
pushf
push
cmp
mov
retw
inc
mov
push
stos
adc
daa
test
scas
loope
sti
das
pop
sti
add
mov
mov
movsb
adc
dec
out
icebp
add
js
add
add
cmp
loop,pn
rcll
mov
pop
aaa
push
cmpsl
cmp
loop
imul
xor
test
inc
adcl
arpl
lods
mov
adc
test
dec
cmp
loopne
cltd
rcll
mov
mov
sarb
push
arpl
insl
mov
add
mov
enter
dec
xor
ds
je
addr16
test
gs
add
inc
flds
leave
testl
fisubrs
xor
cmc
fisttpll
jl
xchg
push
jl
clc
nop
scas
xchg
data16
sub
orb
in
imul
std
sbb
leave
push
in
mov
jge,pt
pop
jmp
cltd
mov
pop
xchg
jae
ffreep
xlat
pop
stc
enter
inc
pop
shll
clc
adc
cmp
jle
repz
adc
add
jnp
xorb
xor
jmp
call
adc
pop
mov
pop
inc
adc
xchg
xor
or
repnz
or
dec
into
pop
jg
movsl
inc
movsb
lds
out
out
pop
jnp
pop
or
sub
and
and
dec
or
cmpsl
cmc
sub
hlt
repnz
pop
push
jns
push
adc
jbe
mov
jle
mov
dec
jae
insb
roll
cmp
push
cmp
lods
add
in
sbb
push
aam
loopne
mov
xchg
test
or
stc
loop
stos
dec
mov
jge
push
rolb
lahf
idivl
stos
aam
mov
pop
xor
mov
push
ja
bound
out
pop
in
or
pop
addb
mov
arpl
lods
stos
mov
add
ljmp
mov
pushf
push
and
iret
imul
aam
and
clc
lea
out
xchg
pop
insl
mov
ficompl
adc
lret
sub
push
adc
mov
inc
out
pop
imul
sub
adc
mov
insl
dec
les
clc
addr16
lods
cmpsl
add
stos
aaa
push
loopne
cmp
mov
cmp
push
or
call
jb
arpl
xchg
call
inc
push
in
add
fidivl
shl
cmp
stos
push
lds
stos
cmpl
test
adc
add
sub
mov
mov
push
cld
mov
cmp
or
and
aam
loop
inc
popf
fsubr
ret
adc
cmp
pop
and
rorb
sbb
xor
mov
in
test
push
or
addb
mov
out
pusha
ss
in
mov
mov
sahf
rclb
imul
cwtl
lcall
mov
pop
dec
sbb
imul
and
lret
popf
out
push
in
mov
dec
and
sub
push
ljmp
in
pop
jnp
loopne
sub
in
mov
loope
xlat
inc
repnz
outsb
aam
lods
scas
das
and
jns
or
push
xchg
pop
mov
ret
mov
sbb
pop
fildl
push
repz
pop
leave
xchg
movsb
sti
aad
ficoml
pop
inc
pop
mov
sbb
mov
push
or
xchg
clc
enter
push
insb
and
sahf
xor
jb
adc
mov
xor
mov
es
xchg
mov
and
into
lcall
xchg
repnz
push
adcl
push
push
lcall
addr16
shll
add
mov
xchg
push
pushf
lds
mov
inc
or
or
pop
addr16
popf
imul
mov
xchg
ds
cmpsl
mov
pop
xlat
cli
cwtl
pop
xor
jg
mov
add
cmc
and
jnp
and
dec
dec
test
push
add
jecxz
mov
insb
mov
push
mov
dec
jle
jno
xchg
jge
pop
inc
pop
in
add
lods
and
pushf
mov
sbbb
je
lret
test
cli
xchg
shlb
adc
xchg
inc
xchg
cmp
hlt
sbb
ss
mov
jno
push
xor
mov
lods
jle
pushf
jmp
sbb
jnp
pushl
scas
roll
jecxz
sub
jae
mov
fdivrp
fldl
inc
fsub
pop
out
js
bound
mov
fiadds
sbb
xor
mov
push
orl
movsb
int3
xchg
push
test
mov
cmp
pushf
out
xchg
pop
cmp
xor
ret
orl
or
push
scas
sbb
aaa
add
inc
rcll
cli
push
xor
pusha
or
inc
mov
add
popa
sbb
mov
enter
mov
lods
push
dec
or
push
or
clc
insb
add
and
into
movsb
sub
inc
dec
adc
jae
lahf
sub
add
inc
add
loop
push
out
out
in
adc
ja
scas
cs
cwtl
xchg
subl
add
jmp
xchg
adc
test
push
stos
add
push
loopne
lock
in
inc
adc
cmpsl
push
lcall
btc
jl
orb
mov
jmp
adc
fiaddl
pop
les
divb
not
jne
hlt
mov
push
fsubp
fnstcw
idivl
fcoms
aam
sbb
cmp
pop
add
in
iret
pop
mov
xchg
dec
push
data16
pop
call
ret
stos
dec
push
jb
mov
lea
mov
push
das
xchg
lahf
mov
dec
in
mov
xchg
and
push
push
add
loop
mov
loop
and
pop
push
test
sahf
add
push
push
jp
mov
aad
sub
in
pop
mov
sbb
cmp
shll
aaa
dec
cmp
aaa
dec
mov
cmp
mov
pop
xorb
in
cltd
icebp
inc
adc
mov
cs
mov
ljmp
push
xor
lahf
test
or
xor
int
push
leave
push
lea
mov
fdivr
sbb
push
sarb
jo
push
stos
cltd
xchg
data16
mov
bound
into
les
or
data16
sub
xlat
hlt
jo
stos
mov
and
xchg
pop
dec
jle
and
cmpsb
std
lret
jecxz
xchg
mov
xor
es
inc
cmp
aas
cwtl
insl
in
rcrb
or
pop
or
jecxz
aad
push
dec
stos
sbb
mov
jecxz
pop
ja
fcoms
jno
mov
not
out
fcmovbe
shl
lret
iret
jp
add
sub
hlt
push
cwtl
mov
xchg
push
add
test
das
je
out
xchg
stos
pop
daa
xor
add
xchg
inc
push
cmpsb
pop
ret
jb
and
shrl
js
or
cld
dec
mov
bound
cmp
insb
jp
inc
xchg
cs
mov
push
shrl
jnp
mov
hlt
dec
cmp
test
inc
lods
jecxz
inc
push
pop
andl
in
xchg
stc
or
push
test
fstps
xor
cmp
pop
pop
cltd
cmp
scas
ret
cwtl
push
in
out
push
jge
sub
ret
add
mov
loopne
pop
ret
and
fsts
pop
rep
and
mov
fidivs
xchg
cmp
mov
in
daa
adc
sub
data16
lcall
adc
ljmp
pushf
xorb
test
ja
push
inc
pop
mov
sub
aam
clc
xor
sbb
mov
jl
insl
inc
cwtl
mov
das
adc
rcrb
xchg
je
push
mov
cmc
in
into
and
arpl
or
pop
in
mov
cld
push
out
loop
call
mov
cltd
int
int
sbb
pop
and
jl
jle
jmp
pop
mov
int3
das
jle
scas
sbb
stos
lods
dec
out
sub
test
jne
mov
test
mov
cmp
cmp
stos
mov
cmc
es
dec
dec
subl
mov
adc
fsts
add
adc
push
bound
adc
dec
decl
push
cmpsl
subl
je
pop
mov
cmp
mov
rcr
add
jp
adc
and
jmp
gs
push
bound
push
cli
inc
mov
insb
mov
mov
hlt
and
pop
outsb
mov
test
bound
divl
lret
push
inc
mov
sub
jmp
lods
jmp
and
and
aaa
sbb
test
aad
xor
movl
cmp
popa
or
cmp
xor
in
shl
mov
jmp
jbe
icebp
pushf
inc
or
pop
adc
and
and
sub
fmuls
cs
push
add
dec
dec
rorl
les
das
inc
and
popf
int
int3
mov
add
add
mul
outsb
loope
adc
cmp
aaa
inc
icebp
gs
xchg
xor
xchg
idivl
cld
nop
mov
push
dec
cld
inc
jp
fwait
add
cld
adc
sarl
insb
pop
test
lcall
mov
mov
dec
push
shll
or
call
push
scas
popa
out
lret
add
jmp
mov
mov
pop
pusha
pop
out
xchg
les
scas
adc
shrl
repnz
loope
sahf
fsubl
cltd
ror
arpl
jmp
out
ss
outsb
dec
or
push
pop
cld
pushf
push
xchg
mov
mov
pop
jnp
aaa
adc
sub
in
adc
sub
and
lods
adc
in
outsl
rcl
jg
dec
ja
push
out
aad
insl
stos
or
enter
stc
xor
push
les
imul
jnp
add
xchg
mov
jg
test
in
xor
sub
sbb
in
jns
stos
inc
jge
sub
movsb
xor
pop
push
insb
jmp
shl
test
jno
enter
xchg
mov
add
and
jnp
pop
mov
popf
xor
out
int
in
pop
subb
mov
mov
pop
movsl
mov
cltd
cltd
hlt
ljmp
pop
inc
es
jg
xor
pop
dec
lret
stc
stc
mov
mov
in
in
addb
cmp
test
mov
mov
lods
push
jp
outsl
fldcw
movl
flds
cmp
push
xchg
pushfw
jge
data16
mov
test
popf
push
orb
inc
mov
lcall
in
cmp
xlat
push
cmp
xchg
dec
lret
dec
xor
or
add
out
push
mov
fbstp
push
scas
and
mov
pop
mov
andl
sub
add
dec
jae
shlb
lds
xor
sarl
mov
loopne
cmp
xor
les
inc
lock
into
lcall
dec
push
adc
mov
imul
mov
insb
icebp
lds
mov
lea
mov
js
sbb
mov
push
jbe
ljmp
jge
iret
mov
addr16
inc
jbe
xchg
xchg
cmpsl
push
add
in
inc
xchg
add
and
repz
cli
jns
xchg
inc
ja
dec
xchg
ret
outsl
inc
push
stc
aas
push
mov
mulb
imul
jge
dec
mov
fiadds
mov
movsb
cs
jnp
call
adc
mov
jecxz
int3
mov
jae
sub
lock
cmp
in
insb
fwait
cmp
add
xchg
rol
adc
aam
mov
sar
shrb
out
add
cmpsb
cmp
xor
mov
adc
cmp
sub
das
xchg
add
sub
pop
lret
in
cs
sub
mov
add
roll
xchg
or
push
jae
lret
and
mov
cld
xchg
inc
and
aas
dec
xchg
cmpsl
mov
cmc
dec
test
pop
xor
arpl
shlb
popf
cltd
or
sarb
push
popf
fs
push
fcompl
jae
mov
mov
scas
ds
pushf
or
popa
insb
add
bound
movsb
aas
cmp
sub
vmread
xlat
in
push
arpl
jg
mov
ljmp
fisubl
arpl
cmpsl
imul
jmp
pop
es
loopne
xlat
inc
dec
js
ds
mov
jo
pop
mov
shl
jae
enter
mov
das
in
mov
push
mov
sub
push
rclb
loope
sbb
cmp
out
fimull
xor
lods
ljmp
sub
xchg
jno
fimull
in
lods
jp
adc
sub
inc
push
mov
aam
and
mov
jmp
inc
in
xor
test
loopne
outsl
xorb
jae
call
gs
cmp
aaa
push
mov
mov
gs
inc
mov
jle
cwtl
movsl
jmp
aaa
inc
pop
ds
sbb
cmp
sbb
push
push
ds
xchg
lahf
adc
mov
mov
ss
in
jbe
in
sub
lret
adc
push
scas
pop
lret
enter
push
and
in
dec
push
inc
and
sbb
push
lret
dec
cmpl
and
pushf
iret
lods
inc
ljmp
jecxz
popa
bswap
rorb
sub
mov
sub
mov
sbb
bound
fs
sub
filds
and
nop
lret
scas
cltd
andb
int
in
sarb
and
and
pop
cmp
sub
adc
jmp
aaa
psubq
push
xlat
into
gs
sarb
mov
or
and
fsub
sub
mov
inc
fsubr
mov
cmp
insb
jg
fsub
jge
imul
push
mov
movsl
inc
lea
mov
jns
dec
xchg
dec
add
in
lds
idiv
mov
cmp
mov
add
rclb
mov
pop
hlt
insb
aaa
adc
lock
shll
adc
add
add
jmp
and
fists
out
outsl
jmp
clc
mov
inc
mov
mov
jno
cmpsb
jbe
sub
fidivrs
fnsave
lock
push
pushf
lds
push
icebp
ja
add
rcrl
fwait
cmp
sub
mov
sub
test
repz
add
cs
stos
jle
icebp
xchg
mov
lods
lcall
sbb
xor
lds
inc
int
mov
cmp
sbb
data16
pop
sub
cld
sti
pop
jns
adc
dec
adc
lds
icebp
inc
sub
nop
cmpsl
push
push
insl
fidivrs
insb
daa
mov
stc
fs
mov
dec
scas
jae
loopne
or
repz
hlt
jge
ss
sti
or
rcll
test
enter
jno
xchg
add
stc
popa
jbe
pop
sbb
je
cmp
mov
loope
dec
or
pop
mov
cmp
repnz
fucomi
stc
jmp
cmp
inc
push
popf
push
add
or
popf
negb
push
pop
mov
jge
andb
andl
push
sbb
cmp
xchg
inc
push
sti
adc
inc
cltd
in
push
stos
clc
daa
es
mov
dec
pop
push
aad
push
cmp
lret
aam
adc
adcb
push
je
scas
mov
jno
push
cmp
insl
not
test
pop
jae
mov
mov
and
cmp
adc
xchg
mov
loop
xchg
gs
in
mov
out
xor
ret
xor
cmpsl
inc
mov
or
dec
decl
movsb
add
cmp
mov
jp
push
mov
stos
mov
and
or
sti
pop
repnz
es
inc
jo
xchg
jge
fmul
jnp
inc
jnp
mov
pop
xor
movsb
mov
mov
ret
cmp
ror
jo
add
arpl
pop
pusha
push
inc
pop
mov
lcall
adcl
and
adc
out
imul
hlt
cld
jo
lcall
enter
add
and
jns
pop
lock
add
shrb
add
cli
fadd
aam
xchg
mov
push
ret
push
nop
mov
sti
adc
gs
dec
add
icebp
cmpsl
ja
xor
add
pop
xchg
adc
out
es
stos
addr16
test
jp
icebp
imul
adc
roll
push
int3
loope
mov
pop
ja
dec
xchg
sarl
das
ss
arpl
adc
js
lds
pop
mov
push
jb
jnp
sbbb
icebp
or
inc
mov
test
inc
cmp
jbe
pusha
call
aam
sbb
cmp
sub
push
jmp
ss
jp
andb
dec
xor
xor
xchg
mov
cmp
xchg
aam
aaa
in
fcmovb
ja
cmp
mov
rolb
js
ds
pusha
cmp
addb
cmp
les
sbb
or
aad
jbe
ljmp
sub
xor
jmp
mov
mov
sub
pop
lds
lock
mov
sbbb
stc
cmp
stos
inc
sbb
lods
in
loope
aas
jne
jno
aas
jae
mov
cmp
out
add
out
call
inc
and
and
add
dec
fs
cmp
xlat
stos
and
cs
mov
xor
jnp
mov
jle
pop
or
shr
sub
add
pop
lcall
cmp
pop
bound
jb
sbb
into
or
iret
add
xchg
cld
xchg
lods
out
fsubrl
sti
pop
cmc
loopne
rorl
mov
adc
pop
cmc
loop
cmp
mov
js
dec
cmp
push
test
insl
sarl
push
fucomp
shll
mull
jl,pn
xchg
or
sub
ss
decl
sbb
mov
pop
stos
rcrl
enter
insl
sbb
das
xor
xor
sub
ret
clc
xor
pop
loopne
shlb
outsb
lods
imul
push
xor
je
divl
pop
xchg
mov
fs
les
push
ret
jl
and
mov
lock
push
add
mov
insb
aaa
adcl
cmc
jg
stc
loop
test
outsl
dec
mov
adc
sbb
add
sub
or
jne
adc
adc
into
sbb
or
int3
sub
sbb
aad
pop
repz
popa
sub
xchg
sbb
jecxz
ss
es
testl
sub
push
ret
push
mov
add
dec
pop
subl
add
outsb
jne
push
add
loope
mov
lahf
popa
add
jl
test
leave
fs
pop
popa
adc
or
fildll
lcall
data16
mov
jae
push
mov
insb
negb
movsl
jl
mov
int3
nop
xchg
inc
rcrb
and
and
leave
push
movsl
xchg
dec
xor
lret
cwtl
or
xchg
cmp
xor
jl
inc
sub
pop
fstps
fnstcw
outsl
xchg
mov
jge
hlt
mov
pusha
dec
cmpsl
push
sti
adc
aad
mov
in
lds
cmpsb
jle
dec
push
je
jl
in
outsl
xchg
jmp
es
dec
js
aam
or
pop
jle
pop
dec
gs
out
std
int
mov
push
int
add
pop
sbb
or
sahf
inc
call
mov
mov
in
mov
sahf
sub
insb
push
jp
jmp
jp
int
and
cmp
lods
xchg
clc
leave
loop
xchg
int
mov
andb
cmp
push
pop
dec
cmp
add
mov
leave
pop
dec
mov
xchg
daa
cmpsl
fstpt
fucomip
cmp
sub
test
std
adc
pop
push
mov
push
mov
pop
add
test
adc
loop
and
cltd
xchg
in
mov
cmpsb
push
pop
jp
add
mov
cmc
stos
xchg
das
fwait
leavew
jge
fcomp
lds
pop
bound
addr16
inc
push
fidivl
sti
fidivrl
add
mov
jle
aad
xor
cld
sbb
xchg
ljmp
pop
lret
loopne
xchg
pop
test
mov
out
mov
loope
pop
scas
inc
cwtl
xchg
sub
sbb
jne
adc
cmp
mov
lea
pop
jl
xchg
aas
les
push
add
fwait
push
dec
jp
mov
add
pop
mov
fisttps
jecxz
add
mov
idiv
les
pusha
xchg
inc
icebp
inc
cmp
sub
dec
add
pop
es
xor
mov
add
pop
sub
jae
and
inc
add
aad
test
fadd
dec
sbb
dec
icebp
fnstcw
pop
insb
data16
mov
rorb
xchg
cmpsl
pop
and
test
in
xor
lret
aas
out
lahf
pop
les
pusha
dec
inc
movsb
sub
push
adc
imul
or
jge
jmp
adc
and
sbb
push
dec
ja
negb
fadds
les
cwtl
push
aad
fiaddl
jns
adc
dec
movsl
adc
mov
sbb
mov
mov
shl
fdivs
pushf
jns
and
jbe
dec
fnstcw
inc
sub
es
mov
ret
sub
loop
mov
imul
sti
jge
dec
and
popf
sbb
testb
bound
test
shrb
lret
mov
test
add
sar
mov
mov
in
adcb
jmp
filds
cmp
outsb
rcll
pop
cwtl
test
mov
enter
inc
mov
stos
and
subb
xchg
jmp
jae
ret
cmpsb
mov
ss
outsl
inc
push
out
mov
imul
push
or
jg
sub
rclb
hlt
or
xchg
sub
lods
adc
cmp
mov
or
pushf
mov
iret
adc
xchg
jns
jb
ret
add
push
sub
stos
adc
imul
lret
mov
push
scas
mov
xor
cltd
jle
adc
stc
push
add
jge
int3
movsb
insb
xchg
or
xchg
xor
inc
addb
mov
call
inc
and
cs
sbb
lods
pop
xchg
cmp
mov
fisubl
and
loop
mov
movsb
and
and
popa
imul
cmpsl
jge
ljmp
push
sub
dec
pushl
inc
xchg
mov
jbe
jecxz,pt
inc
insb
sarb
add
int
add
jo
mov
or
in
sti
mov
and
jmp
xchg
mov
mov
sbb
pop
int
xor
mov
js
scas
push
lret
inc
xor
push
mov
inc
push
lds
das
push
cmpb
rcll
sbb
icebp
cltd
ret
cmpsb
cmc
add
test
push
lcall
cmc
mov
inc
cmc
mov
sub
mov
jbe
inc
push
inc
push
int
add
fcoms
sbb
adc
inc
mov
mov
pop
lret
adc
fstpl
cmpsb
movsl
clc
push
clc
mov
mov
sub
les
jl
stc
bound
popf
xchg
cli
scas
loopne
stos
mov
shll
test
out
jno
adc
lods
mov
repz
out
stos
movsb
dec
jbe
push
mov
jnp
dec
jp
test
jb
cmp
mov
inc
lahf
sbb
loopne
inc
pop
pop
cmp
xchg
push
rcl
fstpt
pusha
pop
in
das
or
sub
leave
mov
inc
mov
push
mov
add
xlat
sub
idivb
adc
pop
lods
rcl
adc
sub
sbb
pushf
stos
sbb
sbb
inc
or
xor
pop
daa
clc
pop
lock
shlb
mov
adc
and
call
aaa
sub
sub
sbb
das
scas
push
and
lahf
pushf
add
lahf
xor
adc
jns
pushf
or
call
mov
inc
je
jo
mov
movsb
adc
cli
dec
clc
mov
mov
add
lds
fisttpl
push
or
scas
adc
jae
test
aas
test
jmp
push
mov
out
fdivrs
mov
hlt
xchg
outsl
stc
xlat
das
mov
out
and
cmp
incl
imul
cmp
pop
mov
push
addr16
and
sub
cwtl
test
sub
mov
rorl
stos
mov
mov
xchg
inc
out
add
icebp
push
sbb
pushf
dec
push
mov
xchg
ret
inc
xor
pop
stos
mov
mov
xchg
arpl
push
mov
pusha
mov
in
es
mul
lock
repz
int3
in
dec
xor
inc
jne
sbb
ss
sti
jmp
out
push
add
sahf
cmp
icebp
mov
lds
xchg
adc
sar
pop
lds
insl
loop
mov
xchg
push
jmp
inc
scas
lods
loope
out
mov
sub
out
xchg
fwait
adc
xor
test
pop
aas
fsubp
mov
aaa
data16
leave
fsubrs
insl
mov
push
iret
leave
shll
movsb
dec
mov
mov
or
cmovle
jle
lret
leave
xor
adc
add
ret
push
pop
sbb
cs
loope
dec
out
outsl
test
lret
cmp
jge
dec
lret
mov
dec
mov
jns
jno
cs
enter
jle
outsl
pop
out
pushf
mov
fwait
aad
push
jnp
hlt
into
sub
add
inc
sbb
cmp
adc
jnp
cmpsb
pop
mov
fs
push
addl
dec
test
lods
jmp
lret
iret
fisubrs
fldt
testl
and
ret
pop
push
mov
push
or
mov
mov
scas
cs
movsl
cmp
inc
cmp
stc
xlat
mov
mov
mov
push
dec
addb
add
add
push
push
daa
push
xchg
in
push
arpl
sahf
mov
loop
mov
lods
sub
insl
jp
push
pop
add
or
jne
pop
mov
scas
mov
inc
mov
sbb
xor
cmp
inc
or
aam
mull
push
mov
or
out
jecxz
mov
in
arpl
dec
out
in
jle
fcmovnb
pushf
call
mov
xorb
test
addr16
decb
cld
and
pop
cld
hlt
pop
std
mov
fsubp
rorb
dec
or
dec
out
js
pop
mov
or
into
lods
cwtl
pop
shlb
inc
jne
ret
jmp
cmp
sub
subl
out
ja
pop
xor
je
clc
js
inc
mov
aam
out
adc
leave
sahf
push
xor
cwtl
jp
mov
jl
sarl
daa
sbb
sbb
mov
pop
cwtl
fs
inc
or
mov
insb
ret
push
jb
imul
jl
cs
stos
scas
bound
mov
add
xchg
cmc
pop
xchg
rcl
mov
clc
fsubrp
jmp
movl
popa
and
jecxz
push
outsb
mov
fwait
mov
aam
or
xor
mov
cvtpi2ps
add
mov
mov
mov
mov
adc
adc
push
and
pop
ret
dec
jp
lret
mov
cmpsb
mov
aaa
ss
ja
cmp
adc
pop
shl
divl
ds
push
movsb
je
adc
fisubs
aas
mov
repnz
dec
mov
adc
add
add
ret
xor
and
sbb
and
dec
cmp
cmp
bound
pop
xor
and
sbb
mov
clc
or
fcomi
rclb
out
gs
add
lahf
and
les
cmp
outsb
add
mov
es
pop
xchg
jecxz
lcall
cmp
movsl
cwtl
movsb
sub
scas
xchg
add
xchg
inc
cld
sub
push
insb
in
xor
outsl
or
and
and
pushw
scas
rorb
jns
or
shl
push
xchg
bound
inc
pop
fcompl
push
and
clc
xor
pusha
push
jmp
outsl
mov
fs
pop
jp
push
pop
std
lock
ret
cli
hlt
push
sbb
dec
xchg
mov
test
sbb
mov
dec
or
mov
aad
cld
stos
add
inc
xor
daa
in
popf
pushf
adcl
pusha
pop
cmc
pop
faddl
aam
jmp
fldpi
jg
push
outsl
jns
int
sub
push
push
mov
bound
jg
pop
or
push
mov
icebp
xor
sub
fbld
mov
in
aas
lds
rcl
out
faddl
xchg
stos
fidivrs
ljmp
or
outsl
mov
inc
xchg
aas
xchg
jno
imul
cs
ret
cmp
fldt
data16
insb
in
and
stos
outsl
bound
pop
sti
subl
arpl
imull
add
or
push
xorb
or
or
mov
inc
xchg
inc
jno
push
inc
int3
xlat
icebp
in
call
xchg
cltd
and
aam
call
xor
xor
mov
aaa
in
imulb
jecxz
mov
sbb
stos
js
lret
pop
popf
cmp
xorb
cli
xor
insl
mov
ret
mov
push
mov
lds
sbbl
xor
rcll
pop
fsubrs
mov
mov
and
xor
jbe
stc
lods
std
ljmp
scas
enter
mov
dec
xchg
add
sbb
jecxz
jp
xor
insb
pop
mov
test
lret
rcrl
push
bound
pusha
inc
pusha
fwait
mov
cli
sub
cld
and
popa
movsl
lock
out
ret
negb
dec
jns
into
sti
stos
int
shl
mov
mov
out
mov
mov
mov
mov
pop
cmp
or
push
and
aas
cld
jmp
pop
cmp
rcrl
enter
mov
inc
dec
int
jnp
pop
scas
int3
inc
xor
lods
into
jmp
xchg
js
mov
jne
push
pushf
xlat
aas
push
mov
mov
pop
stos
shl
sbb
in
pop
ss
repnz
pop
pop
ds
clc
cmp
xchg
fnstcw
dec
test
lds
sti
pop
add
and
pushf
push
sti
loope
aaa
cld
mov
gs
pop
sbb
sarl
cmpsb
sarl
mov
loopne
xchg
pop
out
add
inc
inc
xor
mov
mov
jmp
push
dec
repz
lahf
adc
jno
movsl
mov
dec
push
mov
ds
repnz
lahf
movsb
push
adc
inc
jns
idivb
mov
push
mov
inc
sar
pushf
test
loop
jne
cmc
notl
push
test
outsb
push
insl
dec
scas
call
cmc
stos
mov
cmp
imul
sahf
cmc
dec
mov
adc
in
add
xchg
jg
sbb
mov
adc
mov
xor
mov
aad
sub
loop
mov
stos
in
test
in
xchg
in
sbb
incb
nop
jno
lcall
add
arpl
lds
jo
scas
es
dec
lcall
pop
jbe
jae
mov
mov
adc
pop
add
enter
jae
dec
fs
jl
lcall
pop
lods
in
add
xor
or
mov
incl
adc
enter
xor
nop
and
into
pop
shlb
dec
das
out
add
adc
repnz
lock
fisubs
outsb
push
cwtl
je
leave
xchg
std
repnz
mov
add
mov
test
movsl
sub
mov
lahf
inc
add
xor
jp
rcrl
inc
mov
push
jg
add
pop
jne
cs
rorl
mov
xor
dec
test
gs
outsb
out
cli
and
cwtl
xchg
sahf
or
jb
sbb
xor
cmove
daa
push
jmp
iret
adc
scas
or
mov
mov
inc
push
fucom
fsubl
fdiv
push
jl
jne
out
das
mov
lret
cmp
mov
call
push
test
inc
mov
sbb
cmp
mov
lock
sub
push
xchg
insl
sbb
stos
lret
sub
mov
fiaddl
popf
add
cmp
push
stc
mov
ret
pop
jg
stos
add
and
aaa
mov
push
outsl
mov
pop
aam
sub
jns
mov
shrl
mov
mov
dec
jmp
adc
push
inc
xchg
mov
xchg
jmp
or
xchg
icebp
mov
insb
out
out
gs
inc
cmp
push
lcall
mov
pop
and
push
insb
or
sbb
insl
mov
xchg
cmp
fs
push
mov
shlb
sub
mov
into
fsubs
push
pop
push
fucomip
lods
xor
loop
mov
jbe
fs
enter
inc
loop
mov
mov
jp
stos
mov
or
adc
je
arpl
and
lds
add
push
pop
mov
cld
std
mov
inc
mov
out
push
mov
cs
movsb
cmp
loop
adc
aad
iret
add
iret
xchg
lea
xor
mov
data16
insb
ret
shr
ss
pusha
cmp
filds
ss
in
dec
mov
lock
pop
movsl
ljmp
dec
filds
adc
je
sbb
mov
aaa
mulps
aas
and
mov
sub
sahf
cmp
mov
je
adc
jp
push
je
sbb
mov
xchg
shl
jg
add
pop
data16
cmc
sar
pop
les
call
in
subl
sbb
adc
xchg
and
mov
mov
push
call
jge
sub
xchg
push
mov
add
fs
push
out
test
and
aaa
int3
xchg
mov
repz
loop
push
jmp
faddl
test
sbb
or
out
mov
test
sub
bound
cs
jmp
cmpsl
shll
mov
jg
mov
fbld
cmp
sbb
dec
or
cmpsb
pop
add
addr16
pop
insb
sbb
loop
fstpl
imul
mov
in
shl
fldenv
adc
mov
add
jl
push
cmp
jmp
pushf
jg
orl
push
icebp
add
mov
ret
jb
out
fnsave
mov
lcall
jp
int
jbe
daa
cmc
jg
fdivrl
add
fimull
fsts
loope
mov
push
cld
loop
pop
aad
adc
and
dec
cs
dec
jg
sbb
mov
nop
mov
icebp
sbb
xor
sbb
jmp
lock
cmpsl
in
add
add
xor
icebp
repz
pop
stos
fcoml
adcl
dec
std
leave
cld
int
adc
pop
scas
push
adc
adc
outsb
sarl
push
sub
and
cltd
inc
in
cs
mov
mull
pop
into
insb
push
mov
movsb
adc
iret
xor
jmp
movsb
xor
aaa
push
icebp
and
jnp
int3
fisubrs
adc
sar
lret
jb
and
loop
aad
in
mov
outsl
mov
lahf
mov
inc
mov
jb
iret
shr
fsubs
and
sub
mov
sub
cmp
adc
int3
cmp
mov
clc
xchg
jns
scas
shrl
xor
inc
lahf
jle
in
mov
pop
int3
cmp
push
cmpsl
mov
mov
sbb
faddp
ljmp
fcoml
insl
out
adc
cld
mov
ds
aad
mov
sub
fistl
in
imul
jmp
xchg
lahf
arpl
push
loop
imul
cltd
jnp
pushf
cmpsl
jns
push
mov
lock
adc
pusha
or
sbb
xchg
cmp
test
sbbb
loopne
jmp
cmpb
pop
out
and
jge
int3
or
mov
shll
clc
xor
test
dec
mov
sbb
xchg
imul
cmp
inc
fs
aas
push
into
jecxz
and
hlt
push
push
sub
jb
push
sub
mov
sbb
lahf
stos
pusha
in
xor
sub
xor
fists
jo
inc
stc
push
jnp
push
outsb
ja
pop
xor
or
cmp
add
insl
jnp,pt
sub
pop
mov
movsb
and
mov
mulb
pop
sbb
stos
adcl
lds
fdivrs
inc
jb
add
loope
in
xchg
cmp
fidivl
xchg
xlat
lods
dec
inc
xchg
and
add
arpl
pushf
bound
push
and
pop
fsts
in
lea
mov
mov
pop
in
or
pop
pusha
fists
jo
mov
and
or
data16
mov
stc
add
sbb
push
inc
inc
mov
les
and
pop
sbb
adc
es
pushf
mov
cmpsl
jae
push
call
enter
push
pop
or
xchg
pop
mov
sub
shrb
clc
in
divb
mov
les
mov
mov
icebp
or
add
js
and
pop
leave
in
cmp
cwtl
mov
add
sub
pop
cmp
scas
je
pop
push
int3
push
rorb
and
aas
popf
jb
cwtl
sub
ljmp
sub
mov
inc
cmp
sbb
mov
fidivl
orb
lea
mov
sbb
lret
test
mov
out
lds
mov
popf
and
adcb
push
sbb
and
jne
pushf
les
stos
xlat
adc
cmp
aas
mov
in
mov
jle
in
cmp
frstor
cmp
es
mov
popa
pop
mov
or
dec
mov
sbb
popa
jmp
push
lcall
jbe
jno
mov
cmc
jle
dec
repz
lock
imul
push
es
outsl
ljmp
add
les
mov
pop
xor
aas
push
aaa
outsl
mov
add
in
iret
push
push
lahf
std
into
stc
and
dec
xchg
push
cwtl
icebp
repnz
test
sub
sub
add
and
mov
flds
jle
outsl
jo
mov
aad
mov
aaa
inc
in
xor
and
adc
dec
or
cld
ss
mov
push
cld
mov
scas
mov
jp
adc
clc
xorb
inc
in
jae
nop
test
into
loope
fdivrl
cs
enter
bound
and
cmovo
les
sbb
sbb
jns
push
cwtl
aaa
es
or
aaa
add
bound
cmpl
mov
push
stos
or
mov
sub
sbb
nop
in
ja
pop
jecxz
push
pop
push
mov
push
mov
mov
in
push
ret
adc
popa
test
jmp
inc
decl
test
leave
push
pop
cli
xchg
out
out
xor
jo
jno
fisttps
mov
pop
xchg
daa
in
add
repnz
mov
sub
jecxz
not
sahf
nop
lahf
fmull
iret
cmp
andb
inc
inc
inc
cltd
jbe
into
cmp
cmp
das
lods
mov
jle
xor
xchg
inc
mov
scas
stos
jle
in
cmp
lret
stc
insb
lcall
xor
or
xor
and
lret
pop
sub
enter
xchg
orl
cs
mov
cmp
sub
sahf
pop
dec
jmp
cmp
cwtl
dec
iret
out
dec
int
jl
sarb
mov
leave
ljmp
xor
ss
mov
xchg
pop
and
outsb
out
loope
clc
lods
mov
stos
mov
cmp
leave
jl
jnp
shlb
frstor
mov
mov
in
mov
fistpl
in
lds
movsl
jo
pusha
mov
xchg
insb
and
and
inc
jb
das
fwait
cmp
clc
inc
shlb
jnp
adc
add
dec
mov
add
mov
push
sahf
mov
add
jl
out
div
sub
insl
aaa
les
cmp
lds
xchg
mov
fstl
pusha
push
sahf
bound
sub
or
fldenv
in
popf
push
outsb
mov
jno
xor
lods
ja
jae
add
loop
push
push
fildl
mov
scas
jle
test
sar
jl
fidivrl
xchg
mov
je
fst
inc
adc
inc
dec
in
push
lock
jp
fisttpll
scas
push
int3
inc
sbb
or
mov
or
dec
mov
dec
sti
js
lods
adc
mov
push
jmp
test
sub
fcoml
jno
les
dec
or
sbb
out
test
fstpl
xor
jmp
pop
sub
fmuls
jns
sbb
ljmp
adc
fdivs
sbb
dec
xchg
enter
mov
pop
add
stos
mov
jb
insl
dec
iret
sub
mov
push
xchg
and
push
stos
mov
setbe
mov
and
dec
mov
pusha
push
inc
xchg
cmp
cli
mov
scas
imul
cli
add
mov
ja
mull
insl
daa
jns
int3
jno
dec
mov
in
jo
push
push
or
data16
xchg
xchg
jne
jle
shrb
and
mov
das
stc
and
jl
ljmp
adc
inc
pop
sub
leave
lahf
pop
add
test
testb
out
and
dec
out
sub
cmp
outsl
and
push
cmp
xorb
das
dec
and
cmpsb
popf
gs
loop
lock
dec
mov
cmp
jge
and
sahf
pusha
pusha
push
xchg
dec
popa
ficoms
mov
fiadds
add
pop
and
clc
imul
jp
cmp
shrl
pop
aas
sub
push
leave
push
aam
ficoms
hlt
pop
lret
dec
pop
adc
mov
scas
xchg
fisttps
push
push
mov
inc
xor
xchg
mov
jecxz
test
mov
fidivrl
xor
mov
cli
pop
cmp
jecxz
mov
ss
sbb
stos
fstpt
pop
lret
adc
jge
mov
add
sub
jge
cmc
popf
xchg
cmp
das
push
mov
fists
out
pop
fsubrl
fisttps
jb
cmp
sti
orb
push
out
xchg
push
and
std
lods
xlat
inc
orb
add
pop
lods
sarl
push
xor
and
push
mov
sbb
push
add
jne
arpl
mov
xchg
das
mov
sbb
mov
cmp
fisubl
hlt
mov
pop
das
loopne
ret
and
fs
fildll
repz
lods
shll
call
lcall
pushf
push
adc
jecxz
test
daa
out
stos
mov
sub
jge
inc
sahf
lea
mov
test
out
sbb
jo
jbe
and
mov
xor
pop
js
ret
push
add
scas
xchg
xchg
add
leave
sbb
pop
pop
or
inc
mov
xlat
clc
inc
inc
sub
std
xor
in
repnz
lods
and
mov
lret
mov
sbb
popa
sahf
cmp
pop
inc
dec
push
push
cmp
fwait
xchg
xor
push
fneni(8087
jg
es
add
leave
jecxz
shr
aas
adc
push
cli
pusha
adc
outsl
mov
mov
adc
mulb
insb
sahf
js
jbe
and
xor
push
inc
add
push
mov
xor
push
hlt
cmp
mov
inc
sub
clc
mov
xchg
es
lea
cmp
lret
outsb
gs
add
jne
ret
bound
cmp
cwtl
sti
bound
jbe
push
divl
mov
jg
decl
dec
cwtl
fwait
dec
in
push
cmp
fsubl
lahf
pop
pop
cmpl
ret
cltd
and
bound
inc
stc
popf
add
outsb
ror
adcb
dec
push
inc
in
push
jp
in
mov
sub
jle
leave
mov
push
lea
push
xor
mov
out
ja
or
xchg
mov
int
int
adc
lcall
mov
lret
cmp
inc
xchg
jg
ffreep
mov
int3
movb
push
pop
out
cmpl
test
jl
stos
push
cs
inc
shlb
add
mov
rcrb
pop
adc
pushf
jp
ret
adc
sub
pop
push
push
sub
mov
dec
jae
ret
js
jo
addr16
add
mov
or
xchg
test
pop
in
sahf
out
sub
in
imul
sbb
sbb
mov
fwait
push
out
roll
sub
xchg
pop
popf
mov
sub
inc
jns
fisttpl
push
ja
cwtl
in
mov
shll
mov
and
adc
fisttpll
ljmp
jb
jecxz
jb
int
xor
dec
ret
ret
ror
pop
fisttpll
push
std
dec
xchg
dec
std
or
jecxz
loope
adc
push
sub
pushfw
xchg
xchg
xor
in
inc
xchg
imul
aaa
stos
adc
in
loopne
cmp
and
sub
push
add
lret
mov
ss
je,pn
mov
push
cmc
ljmp
inc
add
gs
push
dec
aad
mov
mov
mov
and
aas
add
fcomp
mov
mov
dec
stos
out
sbb
add
add
mov
cli
push
mov
mov
mov
aam
jbe
and
int
cmp
clc
popf
add
and
sahf
xlat
test
push
sbb
sub
lret
rcrb
pop
fmull
add
jmp
xchg
xchg
dec
ss
xor
mov
repz
push
push
pop
xor
into
add
sti
and
mov
jge
push
mov
ja
mov
cmp
mov
cmp
aaa
pop
lea
out
cmp
cmpsl
ljmp
shrl
out
mov
cmc
pop
mov
push
jb
cltd
stc
adc
and
dec
in
aam
stos
mov
popf
mov
xor
cmp
addl
outsb
call
lret
mov
mov
outsb
sub
nop
adc
leave
sti
jmp
and
in
cwtl
inc
mov
sbb
jae
inc
nop
xchg
cmc
dec
adc
and
ret
lds
fistl
jp
pop
cli
test
cld
leave
pusha
inc
jo
xchg
push
mov
divb
movsl
nop
mov
das
aas
sbb
adcb
lret
xor
mov
iret
jae
mov
adc
popa
std
and
or
test
int
sub
pop
incb
jl
add
add
xchg
test
jge
xor
leave
xchg
jno
mov
sbb
test
cwtl
pushf
push
sbb
pop
dec
or
adc
dec
sub
pushf
out
in
iret
mov
scas
scas
aas
and
mov
stos
pop
loope
mov
aam
and
fwait
lret
cmp
xor
mov
sbbl
ret
sbb
out
mov
pop
cld
pusha
adc
pop
cmpsl
pop
callw
in
into
pop
jns
test
mov
sbb
or
outsl
sub
add
pop
mulb
fwait
out
int
gs
jb
aaa
sbb
in
or
push
adc
mov
cmpsl
xor
cmp
mov
out
jmp
mov
sbb
push
stc
orb
gs
add
sub
cmc
mov
shll
lds
fsub
lea
xchg
add
out
pop
imul
inc
push
into
xor
pop
xchg
out
invd
sub
sbb
mov
xchg
xchg
outsl
cmp
mov
mov
dec
stc
xchg
lret
gs
adc
sahf
and
incl
in
pop
jmp
pop
cmp
into
xor
inc
test
mov
mov
adc
out
out
pop
push
mov
clc
mov
js
mov
ss
hlt
adc
pushf
sbb
and
pop
and
jmp
insl
pop
add
adc
mov
pop
push
sbb
inc
in
dec
negb
outsb
scas
stc
rcr
jae
mov
repnz
addr16
aad
and
sub
mov
es
aaa
dec
fldt
add
enter
imul
jmp
addr16
mov
push
pop
xor
fadds
jno
popf
in
negl
cld
aam
dec
mov
dec
pushf
jns
mov
jecxz
push
cmp
jg
sub
cmpsb
dec
dec
orb
cwtl
fs
jmp
jno
mov
jmp
jl
fcoms
mov
mov
into
or
jecxz
jbe
and
push
aam
adc
enter
fidivl
test
out
mov
rcrb
ljmp
push
sbb
popf
push
jle
dec
xor
jne
push
push
add
cltd
mov
aaa
adc
cmp
repz
push
jno
ds
cmp
pop
scas
out
loopne
pushf
negb
push
xchg
add
lret
rorb
loopne
xchg
sub
test
xchg
pop
push
test
xor
dec
aas
fstps
or
adc
cmpl
mov
jb
mov
or
sub
xchg
cmp
es
adc
ja
dec
lea
jp
pop
sub
std
xor
mov
out
mov
sbb
dec
gs
insb
cmpsb
inc
popa
mov
pop
adc
scas
mov
aaa
out
inc
pop
ja
lods
shll
aas
orb
cmp
inc
js
fisttpll
mov
cld
xchg
cmp
mov
and
int
cmp
sarb
mov
lret
dec
jle
int3
push
loope
outsl
mov
shrb
sub
mov
clc
lods
test
pop
lods
adcl
cld
cmp
dec
out
dec
dec
fnstsw
cs
stc
xchg
push
xor
mov
wrmsr
or
ror
cmp
pop
aaa
push
rclb
in
ret
jg
call
cli
les
add
int
cmpl
sub
and
mov
lcall
xchg
pop
sub
in
test
push
pusha
arpl
cmp
sub
jno
test
jl
data16
insl
jae
sbb
addr16
push
cmp
dec
lret
pop
jge
out
imul
jl
adc
dec
xor
scas
repnz
xchg
push
fs
ret
cmp
and
loopne
xor
pop
mov
mov
test
adc
lahf
rcrl
shlb
mov
dec
rcl
in
int
mov
xchg
cmpsb
lret
cmp
lds
sar
mov
inc
mov
cmpb
lcall
pop
jp
add
imul
in
mov
scas
adc
jo
dec
lcall
fsts
lret
xchg
cmpsb
rcll
push
out
jbe
pop
cmp
mov
sub
adc
enter
or
push
pop
cmp
xchg
mov
xor
ds
mov
inc
sbb
das
mov
std
push
je
inc
push
inc
xor
cmp
out
push
mov
testl
daa
inc
dec
pop
dec
dec
and
push
imul
sub
mov
fbstp
pop
add
sbb
iret
adc
mov
and
pop
push
loopne
xchg
mov
mov
sub
shll
xor
push
cld
mov
mov
pop
fsubs
jg
cmp
pushf
sub
dec
sub
sub
push
dec
inc
mov
bswap
lret
es
jo
push
xchg
lods
aas
sbb
outsl
sbb
push
lahf
xor
jp
ja
int3
push
xchg
ss
mov
lret
loopne
gs
les
sar
cmp
xchg
insl
les
in
or
mov
dec
jbe
shl
loopne
shlb
add
or
dec
test
mov
xchg
test
das
mov
sub
fldcw
push
bound
dec
inc
jne
jp
xchg
cwtl
cli
or
aam
jmp
ljmp
ret
leave
add
icebp
int3
cmp
mov
inc
insb
jbe
imul
mov
xchg
sbb
jge
icebp
xorb
mov
pop
mov
jle
sbb
std
xor
cld
jns
in
push
mov
xor
or
js
mov
int
and
push
add
scas
mov
lcall
int
xchg
std
add
outsb
inc
fcomps
imul
pop
test
mov
mov
sub
call
ret
lret
icebp
ficomps
sub
inc
out
and
cmp
dec
mov
pop
push
fsubl
aam
add
das
je
sub
pop
cld
cmp
ds
arpl
adc
repnz
enter
loopne
and
das
dec
in
dec
movsl
jg
stos
adc
je
imul
out
daa
xor
aam
mov
mov
lds
in
inc
and
stc
fs
xor
xchg
pop
sub
fcmovbe
lcall
mov
pop
xchg
ficoms
sti
adc
sarl
loope
push
mov
push
dec
test
iret
xchg
sbb
out
iret
sbb
roll
add
push
sub
lahf
jp
add
mov
xchg
pop
dec
vandps
ret
icebp
xchg
addr16
push
outsb
and
pop
adc
pushf
xchg
cmp
mov
dec
iret
ds
mov
xchg
nop
in
push
xor
mov
add
movsb
in
gs
dec
sar
xor
sahf
mov
rorb
ret
xchg
out
cmp
and
cmc
stos
cmp
cmp
dec
push
arpl
and
sub
jae
jp
inc
es
or
sarl
xor
lds
jp
imul
xchg
jl
movsb
loopne
bound
and
cmpl
sbb
ss
test
mov
hlt
lods
lret
dec
in
fisttpll
mov
adc
dec
shrb
lock
xor
fadds
outsb
jp
sbb
sahf
pop
adc
es
rcr
and
jno
cli
push
lods
shll
scas
ja
orl
nop
leave
rolb
sbb
aaa
divl
fistl
adc
jle
and
fxch
or
ljmp
add
into
imul
jb
loope
pop
aam
std
in
fisubl
mov
xchg
mov
jl
ja
fs
jmp
addr16
jae
xlat
in
and
and
jbe
fnsetpm(287
jbe
sbb
mov
ret
scas
push
mov
add
les
pop
xchg
arpl
xchg
aad
addb
pop
dec
outsl
loopne
mov
repnz
add
movsl
aam
leave
sbb
cwtl
fldenv
or
add
pop
jo
cli
mov
mov
xor
sub
ljmp
pop
mov
mov
out
in
outsb
imul
jmp
push
cmp
gs
sbb
sbb
jno
sub
shll
cltd
imul
adc
mov
pop
dec
hlt
xchg
jae
cmp
scas
pop
cmp
movsb
lahf
popf
pop
repz
outsb
push
pop
mov
mov
aaa
out
pop
or
stos
pop
pop
mov
pop
das
push
xor
adc
xchg
mov
jmp
cmc
mov
mov
int
mov
repz
mov
pop
sub
sub
add
ficompl
mov
mov
cmp
data16
xor
addr16
dec
or
add
pop
ret
push
cwtl
bnd
xchg
in
pop
outsl
xor
add
xor
scas
pusha
sbb
sub
cmp
push
fstps
or
dec
jg
test
in
jp
test
push
sahf
jecxz
cmp
sub
into
inc
insl
sub
xchg
and
push
mov
rcr
push
push
sbb
les
inc
stos
stc
xchg
jnp
mov
mov
test
jmp
sbb
repnz
lcall
lock
enter
out
ja
out
rclb
iret
push
das
in
rolb
test
pop
int
sbb
and
adc
and
ret
cltd
je
mov
popa
xor
pusha
cmpb
dec
pushf
sbb
mov
fwait
jl
add
nop
pop
cmp
fwait
ljmp
fneni(8087
sbb
xchg
adc
inc
test
ficompl
or
push
jmp
loop
sahf
das
ds
push
popa
pop
mov
push
test
aas
cltd
cltd
xor
repz
call
inc
xchg
push
add
sub
mov
mov
mov
js
cld
iret
test
sarl
out
xchg
insl
mov
test
jne
ja
sarb
push
repz
sbb
out
fstp
xor
pusha
adc
jo
and
ret
lahf
push
dec
call
inc
call
jecxz
cmpsl
xorb
inc
imul
inc
dec
test
ljmp
aaa
or
jo
push
fwait
inc
cmp
dec
cmp
add
mov
fisubs
or
loop
pop
inc
cmc
movsb
fnsave
leave
cmp
cltd
jle
mov
jno
leave
sar
stc
ret
ljmp
mov
and
test
cs
dec
adc
ljmp
sub
sbb
adc
adc
mov
pop
sar
or
mov
add
xor
sub
push
outsb
inc
push
pop
mov
jg
push
call
leave
int
aas
sbb
mov
sbb
push
cmpsb
sti
and
dec
pop
das
mov
sbb
addr16
xor
mov
push
lahf
inc
test
dec
xor
js
sbb
test
pop
movsl
lock
cmp
cld
and
mov
in
jbe
mov
jecxz
das
test
mov
sub
pop
sub
mov
in
lcall
and
dec
sub
pop
pusha
mov
mov
ret
and
push
xchg
and
jae
jmp
hlt
shr
mov
sub
mov
or
mov
test
fadds
ja
mov
lret
mov
cmp
adcb
movsl
das
divb
jo
cmp
dec
fwait
dec
adc
popa
fbld
rolb
in
pop
inc
sbb
xor
sub
mov
push
shll
mov
mov
mov
adc
xor
nop
daa
inc
xchg
push
popf
fs
adc
stos
push
xor
jb
test
push
adc
lcall
rcll
jne
mov
mov
nop
xchg
cmp
movsb
cmp
imul
fistpl
and
pushf
xor
mov
mov
dec
mov
mov
push
jb
push
jae
xor
mov
cmp
ljmp
in
pusha
inc
in
push
fidivrs
aaa
sbb
pop
std
mov
loop
lds
xchg
pop
adc
cmp
roll
xchg
int3
push
cmp
addl
and
mov
cltd
add
mov
push
aas
mov
push
in
arpl
push
insl
std
mov
add
mov
jmp
les
int
xor
pop
cs
arpl
scas
add
push
imul
in
jne
pop
mov
out
rorl
add
xor
xor
lods
adc
pop
cmpsl
test
into
stos
push
scas
movntq
jg
mov
and
popf
testl
scas
mov
outsl
jecxz
adc
push
push
negb
mov
jge
xor
add
decb
aad
or
cli
push
mov
fcmovnb
or
loop
mov
jp
hlt
push
push
insl
pop
add
lds
cmp
cmp
push
repnz
cs
xchg
bound
lret
popa
mov
dec
div
jo
sbb
int3
out
push
ficoms
shlb
ja
movsb
or
or
pop
movsb
insl
dec
add
inc
call
mov
jp
paddusb
je
cmp
jp
dec
int
pop
xlat
xchg
rclb
adc
sub
mov
mov
mov
and
jb
call
mov
nop
cld
push
popa
leave
dec
dec
mov
adc
mov
fidivrl
ss
push
mov
push
cmp
std
in
outsl
jmp
stc
xchg
xor
dec
enter
ret
addb
cmpl
add
inc
add
or
xlat
pusha
repnz
rolb
inc
lods
mov
imul
jb
sbb
jno
push
int3
adc
gs
in
sahf
lock
icebp
leave
mov
mov
fwait
sbb
gs
orb
test
jb
mov
push
cmc
jp
fnstsw
lahf
inc
mov
sbb
std
xor
fiadds
adc
outsl
mov
push
scas
loope
pusha
in
fildll
mov
icebp
lret
out
mov
add
mov
roll
jns
mov
scas
in
sahf
push
dec
scas
pusha
jo
and
ret
xchg
iret
ljmp
cwtl
or
aam
adc
scas
pop
inc
add
pop
xchg
in
flds
inc
test
xor
jge
rorl
stc
sbbl
push
xor
push
cltd
imull
sub
cli
popf
xor
sub
and
das
mov
ja
aam
pop
or
cmpsb
neg
fcoms
sbb
data16
outsl
fs
inc
movsl
sub
rclb
popa
clc
les
xor
push
imul
jnp
aaa
dec
mov
or
std
push
ficoms
insl
cmp
inc
sbb
insb
push
sahf
movsl
sbb
gs
add
cmpsl
rolb
mov
clc
cmp
jb
xchg
sbb
add
sahf
cmp
jo
xchg
negb
fsubs
movsb
cli
ds
rcrl
in
fisttps
orl
int3
jbe
out
pop
iret
push
mov
inc
mov
pop
lcall
mov
xchg
jecxz
cs
cltd
lock
movswl
add
add
testl
frndint
sub
inc
sbb
or
mov
jns
je
imul
clc
adc
or
out
das
sbb
cltd
pushl
ja
pminub
sub
adcl
or
or
imul
es
and
fcomps
jno
push
push
push
pop
mov
arpl
xchg
push
jo
in
jnp
into
push
es
pop
jnp
add
out
jg
sahf
push
in
cmpsl
cmp
mov
cmc
lods
dec
mov
cmp
sub
je
cmp
mov
xchg
cmp
cli
ret
roll
push
int3
aaa
andb
test
xchg
add
xor
mov
add
or
js
sbb
cmp
xor
add
fisubs
call
jno
push
vunpcklpd
iret
adc
jg
jnp
loope
outsb
mov
xor
pop
xorb
stos
mov
pop
stos
add
jae
dec
adc
aam
repz
dec
push
loop
lods
iret
xor
mov
xchg
mov
mov
sbb
push
dec
mov
stos
mov
inc
repz
jb
test
stos
lods
ret
enter
xchg
inc
pop
mov
sub
stos
test
jmp
push
mov
mov
dec
pop
adc
xor
daa
lcall
fsubr
rcr
and
insl
jae
adc
add
inc
jmp
rcrl
lds
sahf
dec
ret
jecxz
add
push
mov
jl
add
sub
lock
xchg
loopne
lock
call
jae
jge
mov
cmpl
jecxz
daa
fwait
inc
pop
fildll
das
pop
je
int3
test
inc
jg
insl
filds
fbld
xchg
ljmp
add
sbb
jae
sub
xchg
cs
sbb
and
and
cmc
mov
lods
mov
imul
pop
sbb
mov
sti
and
jnp
repnz
rclb
popl
fdivrl
inc
push
pop
mov
ret
mov
sub
push
xchg
lods
in
cwtl
push
cmpsl
mov
inc
add
out
or
mov
lds
les
aaa
inc
mov
or
test
push
xor
inc
dec
pop
or
or
dec
mov
mov
mov
loope
icebp
xchg
mov
rorl
jb
int3
sbb
dec
sbb
fimull
lahf
xchg
jmp
xor
xchg
ret
imul
dec
mov
cmpsb
inc
gs
push
push
aas
mull
lea
mov
dec
sbb
loope
xchg
inc
mov
xor
rol
testb
jns
adc
cmpb
jmp
inc
scas
cmpsl
fistpl
pushf
cmp
pop
mov
bound
inc
test
in
pop
adc
and
iret
cli
test
fnstenv
jne
dec
jbe
add
mov
fmull
cmp
out
sahf
push
repz
push
shl
out
lahf
pop
and
jg
mov
cmp
xor
aad
rcll
inc
pop
data16
test
dec
inc
popl
adc
lods
fisubrs
jecxz
fstpt
cli
dec
divl
aas
data16
jp
push
xchg
inc
inc
mov
std
xchg
mov
cmp
and
dec
ja
mov
jecxz
jno
fbld
imul
rolb
je
lcall
xchg
test
subl
daa
cld
hlt
mov
mov
sub
lods
sbb
push
test
adc
mov
repnz
mov
mov
or
mov
clc
enter
xchg
js
outsb
int3
sub
push
xchg
pop
xor
or
sbb
dec
imull
std
shl
repz
pop
cmp
jne
pop
outsb
sub
fldenv
movsl
imul
aam
inc
xlat
mov
orl
aad
adc
xchg
in
ret
sub
sbb
bound
xor
push
lret
scas
pushl
dec
arpl
js
icebp
jo
cmpsb
jge
mov
adc
dec
dec
xor
rcrb
rcll
add
sbb
mov
mov
shl
xlat
and
dec
hlt
adc
int3
jge
mov
movsl
xor
test
push
cld
js
pop
popa
out
pop
cmp
mov
mov
test
mov
lods
xor
sarb
fbld
les
push
pop
rclb
lret
dec
mov
out
cmp
incl
lret
jl
pop
sbb
push
mov
divb
icebp
mov
es
out
pop
test
xor
ret
inc
xchg
rorb
xchg
ret
jbe
push
pop
push
repz
call
in
jp
dec
and
loope
push
jp
in
int
lret
dec
sub
sar
inc
or
cmp
pop
divl
dec
popf
ss
js
shrb
cli
pop
xor
fs
movsl
push
mov
lods
push
rcll
mov
push
cmpsl
icebp
jae
add
aas
iret
pop
aam
mov
pusha
jnp
int3
imul
xchg
inc
cltd
lret
jle
push
adc
sub
or
popl
data16
xorl
js
js
pop
mov
xor
or
pop
push
xor
sub
adc
fnsave
loop
inc
adc
out
ds
pop
or
pushf
pop
jp
jl
loop
mov
sub
jb
xor
aam
xor
lret
int
mov
insb
push
faddl
sub
shlb
test
aad
lret
dec
icebp
xchg
or
jo
adc
popa
clc
ret
mov
aas
inc
inc
jnp
dec
xchg
mov
in
fisttps
jecxz
incl
push
rorl
mov
mov
push
jbe
xchg
inc
int3
add
test
dec
mov
jge
inc
add
sub
mov
mov
bound
xor
das
mov
rol
imul
push
adc
lods
mov
aas
sbb
fsubrs
mov
sub
cmc
icebp
int3
lock
and
lods
xorb
cmpsl
fadds
adc
out
mov
out
hlt
or
mov
scas
aad
scas
pop
shll
cmp
dec
repz
leave
adc
push
pop
mov
fwait
inc
xchg
sbb
xchg
pop
outsl
push
sti
inc
mov
push
repz
pop
mov
and
xor
inc
int3
das
jns
add
xor
cwtl
icebp
outsb
jg
cltd
arpl
add
xor
mov
xchg
dec
fabs
test
cs
xchg
test
jle
sub
add
in
cld
mov
and
lcall
add
add
nop
mov
jmp
insl
xor
mov
addr16
or
fst
inc
mov
leave
jns
jns
dec
cmp
push
mov
add
fwait
sub
jno
ljmp
aas
mov
cmpsl
jns
lods
ret
jge
mov
or
inc
std
js
dec
lret
sbb
cmp
adc
insb
cli
rcrb
test
mov
loopne
xchg
mov
or
sub
adc
jno
jo
ljmp
push
mov
in
out
or
mov
pop
xor
popf
sub
incl
xor
ret
adc
movsl
ss
sbb
test
xchg
aas
imul
pop
dec
rorl
sbb
mov
xchg
cltd
fld
add
pop
sbb
jbe
cs
jecxz
movsb
lret
sahf
call
out
loope
xor
test
add
mov
cwtl
add
inc
cs
jp
inc
int
or
loopne
stc
lds
cmp
mov
jnp
inc
testl
call
inc
hlt
dec
lret
or
in
out
xchg
outsl
test
out
mov
adc
fcmovne
mov
or
cmp
mov
mov
mov
add
shl
adcl
ficoml
or
mov
xchg
jmp
int
into
adc
js
aam
imul
cld
xor
sub
lret
push
fdivrs
adc
mov
add
fstpl
xor
lods
xchg
mov
xchg
jo
es
das
jecxz
xchg
jo
mov
mov
xchg
push
stos
lods
into
or
cs
or
pop
aaa
stc
push
sbb
mov
inc
in
insb
in
jne
adc
js
enter
and
jmp
add
xchg
adc
and
fst
add
and
or
pushf
xchg
in
outsl
push
testl
jae
mov
xchg
movb
adc
aas
shlb
xor
ja
inc
xor
call
rorb
mov
pop
es
mov
ja
push
arpl
pop
jno
xchg
pop
outsb
mov
xchg
cmpsb
pop
lret
scas
ret
xchg
pop
fsubrl
sar
mov
outsb
cmp
lcall
jmp
mov
cs
add
fdivs
loopne
fwait
push
sbb
das
loope
fwait
lods
outsb
and
or
ret
push
shr
mov
int
mov
lcall
lret
imul
mov
xchg
or
cmp
dec
xchg
sub
mov
push
sub
push
lock
dec
lret
mov
mov
push
sub
push
shrb
lea
adc
aas
or
xlat
cmp
mov
test
in
jne
xchg
jbe
adc
pushf
cmp
sbbb
jmp
outsl
adc
mov
ja
pop
les
sbb
push
dec
push
sub
mov
add
loope
das
mov
cmc
cwtl
jmp
dec
popf
int
in
mov
jp
scas
cmp
dec
icebp
cli
dec
shrb
xchg
das
mov
lcall
pop
or
insb
mov
hlt
or
adc
ss
push
add
int
inc
xor
in
push
fisttps
lcall
scas
imul
adc
notb
or
cmp
pop
jnp
mov
orl
add
push
jnp
clc
cmpsb
mov
add
mov
add
and
out
mov
xchg
jg
out
ss
cwtl
repnz
mov
rcr
out
add
sub
pop
outsb
ret
or
sub
cmp
aad
out
decb
test
scas
mov
fsub
xor
sub
shlb
push
lds
test
jge
popa
sub
xchg
or
es
mov
repz
popa
popa
mov
cwtl
or
in
jge
jb
lret
mov
stos
mov
cld
add
faddl
scas
ljmp
dec
push
idivb
push
adc
sbb
cmp
pop
test
mov
out
aam
sbb
xor
popa
xchg
add
jbe
inc
out
dec
add
repz
add
xchg
es
mov
jo
dec
dec
clc
sbb
xor
mov
js
adc
cltd
fldl
call
and
pop
mov
add
fsubrl
pop
adc
or
inc
mov
mov
dec
cmovbe
mov
mov
cltd
push
mov
jl
gs
lock
cmp
enter
cmp
scas
cmp
mov
dec
in
push
cmp
push
push
push
or
xchg
xchg
pusha
faddl
dec
inc
xchg
xor
cmp
fnsave
pop
xchg
loop
jae
aad
in
mov
into
lea
jbe
ss
mov
mov
sbb
iret
adc
adc
or
ss
jno
stos
inc
cld
test
enter
test
outsl
js
cmc
repnz
idivb
mov
xchg
jbe
cld
aaa
dec
addb
leave
and
mov
popa
inc
cltd
lods
xor
gs
std
pop
jne
pop
mov
push
xlat
mov
xchg
test
loop
out
sub
outsb
and
lods
fcmovu
insl
addr16
fistpl
aam
test
xchg
arpl
enter
mov
loope
fisubl
ret
cmpsb
sub
cld
dec
push
push
pop
cmp
dec
stos
dec
cmpsl
int3
lods
inc
cmpsl
test
mov
mov
mov
xor
insb
jp
lock
popa
fucomp
adc
test
mov
adc
pop
cltd
call
in
sub
popa
mov
xor
xor
jl
loopne
mov
fstl
push
mov
mov
pop
dec
push
das
fs
mov
lods
add
cmpsl
iret
push
jae
xchg
stos
add
or
dec
mov
mov
into
stc
sbb
lret
mov
xchg
sti
ds
lods
mov
or
push
jp
pop
xor
insl
or
lcall
cmp
notl
das
sbb
lcall
xchg
nop
das
int3
xor
inc
jo
insl
push
out
sub
cmp
xlat
adc
je
push
imul
sub
cwtl
pop
cmpl
pop
dec
mov
mov
pop
lcall
add
or
enter
repz
push
out
push
lcall
pushf
imul
mov
out
and
rcrl
adc
pop
lcall
cmp
xchg
pop
fidivrl
movsb
scas
bnd
int
pusha
int
cmpsb
sbb
dec
cmpsb
shll
insb
notb
leave
in
stc
jg
daa
stos
and
pusha
rep
jo
inc
pop
push
data16
sub
addr16
rclb
sarb
adc
std
lret
pop
sub
fldenv
mov
les
mov
pause
out
add
jne
aaa
clc
test
scas
inc
fildl
adc
pop
leave
iret
aad
sbb
push
inc
adc
icebp
jno
push
push
add
mulb
pop
and
jbe
nopl
mov
mov
dec
nop
xor
inc
pop
xchg
cmp
inc
outsb
stos
insl
sbb
out
cwtl
addr16
es
sbbl
cmovp
mov
inc
ret
js
xor
xor
cmpb
lcall
cltd
xchg
lcall
or
testl
lea
push
xchg
and
mov
std
int
leave
je
pop
inc
in
loopne
in
cmp
out
mov
fcoms
add
or
dec
xor
mov
movsb
fiaddl
push
add
cli
clc
pop
sbb
in
sbb
sub
mov
aas
pop
and
jno
sbb
dec
or
loopne
imul
xchg
jae
mov
push
clc
movsl
dec
icebp
dec
test
fstpl
shll
in
orl
lds
inc
pushf
call
loopne
push
jmp
fdivr
sbb
dec
out
cmp
ud0
subb
psubw
mov
std
dec
jae
sti
mov
mov
fbld
lods
js
adc
andl
fwait
ror
movsb
push
mov
pop
pop
aam
xor
outsl
aas
leave
push
fdiv
outsl
sub
aam
xor
popl
jne
daa
filds
sub
aad
nop
shrb
add
xchg
test
shll
inc
int
fidivrs
sahf
enter
cmp
cli
sbb
jl
jnp
mov
pop
adc
sti
mov
jecxz
mov
cs
cwtl
add
dec
mov
dec
bound
cmp
jge
adc
fisubs
lret
cmpsb
out
enter
cmp
out
cmp
ja
pop
sub
mov
mov
jbe
roll
mov
sbb
push
mov
testl
mov
insl
push
pop
shr
pop
xor
and
jae
insb
lods
repz
aam
jle
mov
lods
orb
mov
test
cli
pop
popf
btr
mov
add
add
or
and
out
push
xchg
xchg
jae
dec
clc
test
jae
sti
dec
push
mov
shlb
jle
mov
mov
test
mov
mov
mov
xchg
repz
test
adc
or
das
cli
xor
push
fadds
es
mov
mov
aaa
fwait
sbbl
ret
ljmp
dec
inc
outsl
addr16
adc
dec
fldl
outsb
xor
outsl
adc
popl
adc
jmp
jb
sbb
ret
mov
sub
push
adc
std
rcrl
inc
out
xor
incb
outsb
mov
or
mov
insl
mov
pop
sub
mov
adc
mov
cmp
loopne
ds
fidivrl
jb
mov
repnz
adc
adc
arpl
inc
ja
iret
fs
mov
dec
lods
movsl
aam
sub
hlt
jge
ja
pusha
test
cmp
test
es
adc
mov
dec
dec
pop
cwtl
mov
lods
jmp
xchg
fcoms
or
cmp
js
pushf
ret
and
dec
push
and
mov
mov
xchg
and
jo
imul
mov
in
sti
add
xchg
xchg
pop
out
dec
out
dec
jp
out
adc
lcall
inc
xor
iret
mov
addb
ret
lret
ds
adc
sbb
xchg
rolb
mov
cmp
jge
and
sub
push
cmpsb
inc
dec
or
and
lock
sahf
inc
inc
sub
jecxz
mov
xchg
xchg
dec
cmp
xchg
jne
mov
andb
out
push
push
jnp
add
jne
cltd
fcomps
mov
lock
adc
jnp
inc
mov
mov
xor
sahf
ss
mov
cmpl
or
inc
lret
xchg
mov
out
imul
xor
orb
sub
enter
ja
mov
add
stos
jmp
ss
mov
repnz
bound
sbbl
mov
jno
aas
mov
push
fsubrs
leave
jb
xor
loopne
inc
clc
inc
inc
jecxz
pop
test
jmp
scas
and
mov
out
mov
aas
dec
jl
add
mov
pop
or
fidivrl
and
mov
mov
nop
movsb
aas
shl
stc
ja
mov
or
sbb
in
or
flds
js
mov
fsubp
bnd
cli
pop
rorb
mov
mov
das
fwait
xchg
jecxz
lahf
sbb
cmp
mulb
and
sbb
repz
sbb
addr16
push
adc
cli
adc
shlb
and
out
ret
jg
imul
mov
mov
scas
push
lods
shll
jne
xchg
lahf
push
jno
fidivs
xchg
mov
push
lock
das
ds
popa
jp
out
lock
pop
mov
add
pop
inc
add
jae
ljmp
xor
fidivrs
or
testb
lods
and
bnd
lcall
xchg
dec
pusha
loop
cwtl
cwtl
push
insb
stos
dec
xchg
inc
mov
inc
out
jge
push
stos
fdiv
or
hlt
addl
dec
and
enter
and
stc
lret
push
jmp
ror
add
mov
adc
cmp
inc
mov
mov
sub
pop
sub
xorl
div
pop
popa
out
sub
movsb
pop
loop
pop
ljmp
push
fucomp
out
stos
cmp
dec
sahf
jge
arpl
mov
push
lea
loope
in
inc
push
and
jbe
mov
mov
fwait
add
imulb
jne
push
mov
jg
outsl
insl
or
loopne
lret
inc
mov
xchg
cli
push
dec
pop
xchg
inc
cwtl
hlt
mov
xor
hlt
shll
mov
jns
or
insb
jmp
xor
xchg
add
push
sbb
dec
mov
sbb
sbb
out
movsl
cmp
adc
jo
adc
in
mov
imul
jle
data16
loop
fdivr
fmull
sub
fcoms
mov
xor
mov
fstpt
insl
adc
rcl
popl
in
dec
sub
mov
sub
int3
fwait
insl
sbb
pop
or
mov
xor
mov
adc
hlt
xlat
loope
adc
cmp
fiadds
pushf
push
test
addr16
in
xor
mov
push
xchg
sti
mov
cmc
les
fsubrl
inc
xor
outsl
lods
inc
mov
and
mov
or
mov
insb
inc
das
popa
and
imul
sub
jg
lret
push
jecxz
gs
mov
lods
pop
xchg
ret
pop
sbb
lret
lods
jne
in
loopne
push
pop
cmp
loopne
arpl
stc
das
mov
enter
test
mov
push
mov
in
insb
push
mov
push
nop
push
scas
test
sbb
add
or
push
enter
mov
add
sahf
add
fimuls
mov
pop
jbe
sarl
add
mov
xor
enter
adc
sbb
ret
arpl
stos
pop
test
xor
mov
or
jge
andl
xchg
cld
jns
test
cmpsl
inc
push
sbb
aam
mov
xchg
imul
jg
iret
test
xor
or
push
or
dec
lea
xlat
je
mov
xor
jne
sub
xor
sbbl
sbb
or
mov
cmpsb
pop
adc
jmp
scas
cmpsl
je
jecxz
push
arpl
sti
pop
cmc
inc
inc
mov
aas
jo
add
and
ja
sti
aas
jne
loopne
cmp
in
xor
jb
ficompl
dec
dec
mov
mov
filds
sbb
lret
sahf
dec
mov
std
jb
sbb
pop
imul
lods
ss
sbb
pop
adc
pop
push
push
mov
pop
loopne
repnz
sbb
push
sbb
push
jecxz
call
add
rcrl
cmp
pop
roll
insb
aas
pop
push
mov
lods
cmp
fwait
rcrb
adc
arpl
stos
gs
test
jge
xor
mov
xchg
fs
pop
testb
pop
shlb
in
ja
cmp
andb
add
addr16
jb
ret
mov
sub
ret
jge
xor
stos
loopne
jnp
rorl
sub
fcoml
dec
imul
pop
push
pop
jge
outsl
ds
arpl
cmp
loop
call
push
mov
icebp
in
imul
xchg
xor
add
pushf
sbb
fs
lock
inc
sub
divb
outsb
jae
in
or
mov
cld
fsubr
ljmp
test
cmp
out
loop
fwait
jbe
cmp
iret
mov
pop
push
fsubr
imul
dec
xchg
cmp
sbb
stos
fbld
and
jne
adcl
clc
cmp
xor
mov
dec
adc
xchg
mov
int3
out
jge
cmpsl
je
cmp
push
mov
negl
cmp
mov
loop
mov
and
pushf
adc
inc
inc
lret
dec
mov
jno
insb
mov
loopne
lods
mov
mov
sbb
das
and
jbe
cli
jl
dec
popf
jb
push
mov
xor
pop
adc
inc
out
dec
add
sar
insb
adc
inc
and
lea
insl
xchg
orb
repz
insl
pop
in
cwtl
testb
and
divb
pop
jae
movsb
out
lods
nop
jo
and
or
mov
push
xrstors
lcall
sahf
mov
pop
loop
decb
loopne
ficoml
xor
inc
sub
add
sub
cmpsb
and
jge
in
dec
aas
jb
sbb
test
inc
and
out
cltd
mov
fldcw
fmull
leave
adc
mov
push
ds
cmp
popf
test
lahf
xchg
pop
cmp
bnd
jl
and
add
loope
shl
test
outsb
fsts
cmp
in
xchg
mov
shll
clc
pop
pop
out
sbb
lcall
aad
rcrl
clc
std
les
insw
sub
out
pop
gs
fdivs
and
push
push
cwtl
insb
jp
icebp
xlat
mov
jns
jae
mov
cwtl
roll
fstps
mov
sbb
dec
and
push
loop
cltd
pop
and
cwtl
std
jo
inc
out
test
in
subb
pop
call
scas
xor
ljmp
mov
jb
jecxz
test
lret
mov
pop
in
jb
das
jg
pop
push
inc
cmc
xor
xchg
jmp
mov
stos
mov
push
adc
adc
mov
mov
jne
adc
clc
fldt
js
jbe
cwtl
jae
fldl
sbb
cmpsb
mov
jmp
push
or
mov
out
or
pop
rcll
data16
jnp
shlb
lock
jecxz
imul
cmpl
push
xchg
inc
or
sbb
imul
and
and
mov
sub
mov
ja
and
or
xchg
clc
fimuls
loop
jp
jg
pusha
push
sbb
adc
es
arpl
mov
mov
repnz
mov
push
orb
sub
pusha
pop
inc
jle
sub
in
xchg
andb
mov
xchg
inc
cwtl
shll
xchg
cmp
xchg
mov
push
add
repz
or
cmc
pop
mov
rcrb
imul
cmc
inc
push
dec
lods
add
inc
sbb
or
mov
xor
jecxz
fwait
stos
jno
jl
sub
in
fisttps
add
lret
cs
cmp
testl
inc
int
or
mov
sub
xor
bound
pop
adc
lea
jg
sub
add
enter
mov
sbbb
std
pop
mov
fbstp
pop
push
gs
or
cmp
or
les
aam
push
sbb
jmp
cld
outsl
icebp
cmp
mov
arpl
jecxz
jge
shll
test
xchg
xor
xor
pop
iret
push
cmp
sub
clc
push
rol
addb
outsl
cmpsb
fldt
xorl
imul
clc
xchg
inc
push
jge
arpl
pop
mov
jbe
es
inc
ja,pt
inc
insl
or
and
idivb
lretw
movaps
mov
and
pushf
mov
sbb
mov
sbb
pusha
or
mov
jecxz
out
xchg
xlat
adc
sub
inc
add
and
sbb
mov
aad
test
jge
dec
xchg
lods
lret
push
cmp
add
testb
add
call
jp
mov
mov
and
stc
pop
lret
je
sbb
scas
push
hlt
sub
sbb
dec
and
fwait
add
and
inc
fstl
sbb
xchg
xor
mov
fincstp
pop
adc
mov
dec
jb
pop
shll
jnp
fsubrl
call
inc
insl
nop
push
les
aad
xchg
add
pushf
xchg
sbb
sbb
outsl
xor
popa
call
pop
cmpsb
imul
jae
lock
push
leave
bound
divl
pushf
js
movb
and
xor
bound
sbb
cs
fs
or
sub
xor
fwait
dec
mov
jle
sbb
int3
mov
cmp
sbb
lods
imul
aaa
pop
xlat
ja
add
hlt
push
arpl
sbb
xchg
mov
jae
cmp
in
loop
test
cmp
ret
push
repnz
xchg
sbb
rorb
ds
jnp
out
and
mov
mov
jnp
mov
stos
push
enter
jbe
adc
jl
aad
les
daa
aad
jne
mov
push
ror
xchg
leave
ljmp
push
push
cmpsb
xchg
dec
or
cmpsl
fcoms
jne
daa
cli
or
xor
pushw
ror
in
int3
das
inc
jecxz
xlat
mov
adc
movsb
pop
loop
adc
cli
lods
jp
xchg
push
mov
adc
and
andb
movsl
test
mov
das
fstpl
movsb
mov
rcr
push
jecxz
push
inc
loopne
in
shrb
mov
jbe
inc
jl
shlb
mov
or
inc
xchg
mov
xor
dec
mov
or
xor
fmulp
jmp
into
pop
cmp
test
adc
lret
imul
pop
mov
cmpsl
push
test
mov
adc
ljmp
mov
pushf
push
and
out
aam
dec
in
mov
fsts
iret
imul
inc
jecxz,pt
add
stc
fcomps
movsb
mov
inc
aam
mov
nop
inc
xor
aas
push
add
inc
cmp
adc
xor
nop
inc
in
mov
leave
cmp
mov
sub
cmpsb
sub
mov
push
cmp
or
stos
and
push
scas
pop
nop
lcall
jnp
sub
cmp
xor
ja
jae
pop
and
mov
cmp
lret
repz
ds
jb
cld
mov
mov
sbb
test
xlat
bound
lea
cwtl
and
lea
test
mov
aas
sub
jle
jae
fstps
addb
movsb
push
jne
arpl
fucomp
outsb
call
mov
inc
std
sub
add
xor
push
mov
adc
jp
mov
incl
xor
out
adc
rcrb
jne
test
lds
inc
flds
adc
push
imul
pop
int3
mov
add
xchg
or
adc
xor
fldenv
ret
sub
fwait
shl
loop
mov
imul
cmp
ret
adc
es
pop
rolb
dec
inc
iret
hlt
mov
lock
jno
push
cwtl
mov
ret
cmp
arpl
insl
xchg
add
adc
push
pop
xchg
int3
xor
add
stos
xchg
sbb
das
wrmsr
stos
jno
push
jbe
or
gs
popa
adcb
mov
test
mov
mov
sbb
dec
scas
push
add
outsl
cmp
inc
aas
mov
inc
sub
xchg
insl
dec
push
xchg
dec
sub
xchg
inc
mov
mov
jbe
in
inc
stos
nop
dec
clc
pop
testb
cmp
lcall
iret
add
or
and
mov
cltd
xlat
push
mov
mov
sbb
shl
lret
call
in
lds
lods
push
mov
sub
mov
sbb
adc
call
je
stos
pop
push
jp
mov
jae
push
mov
lcall
pushf
inc
cmp
test
cwtl
shrb
push
and
xchg
dec
adc
cmpsb
mov
dec
mov
adc
out
jbe
mov
push
pop
cltd
jo
xlat
xor
jle
dec
mov
mov
push
in
out
pushf
movsl
aas
in
mov
dec
mov
sbb
sub
adc
sub
cmp
jmp
cmp
xchg
jg
cmp
jb
rclb
inc
mov
adc
mov
mov
xchg
pop
cmp
in
dec
outsb
xorb
mov
in
push
lahf
mov
popf
das
mov
cld
adc
movsl
push
add
loop
pusha
mov
stos
andl
push
cmp
or
fldenv
insl
dec
sahf
stos
aad
pop
rorb
stos
es
arpl
pop
xor
adc
shr
cmc
cmp
daa
ror
int3
sub
jbe
inc
das
and
xchg
fdiv
in
lods
jecxz
sbb
dec
int
popf
xchg
mov
scas
imul
mov
lods
or
jge
ljmp
cli
adc
sbb
fcmovnu
jl
arpl
pop
test
roll
pop
leave
push
pushf
jle
inc
imul
sub
addr16
lcall
and
push
sti
sbb
fidivs
scas
scas
xor
loop
aad
mov
imul
das
lock
lcall
lea
mov
fisttpl
mov
jp
or
cmp
gs
mov
xchg
pop
mov
inc
movsl
shr
in
stos
pop
mov
xchg
ljmp
push
andl
cmc
xchg
loope
out
pop
pop
push
bswap
fdivr
xchg
ret
test
lahf
dec
adc
popf
pop
movsl
sbb
icebp
dec
jns
cmpsb
lds
fs
cmp
mov
inc
jl
test
iret
inc
sbb
inc
mov
iret
jl
outsl
jl
repz
std
test
repnz
dec
xor
rcrb
lds
in
xor
cmp
pushf
popa
testl
sbb
stos
ficompl
jb
jno
ja
adc
adc
add
or
sub
mov
jge
push
fcoml
xchg
cmpsb
aam
inc
mov
dec
mov
adc
insb
push
divb
adc
ljmp
or
insb
and
dec
cmp
repnz
sbb
imull
sbb
fimull
pop
sbb
fcmovnu
adc
or
loopne
ja
push
stos
lret
add
xor
jg
aad
mov
fbld
push
fidivs
sahf
mov
cmpsl
fisttps
inc
mov
shrb
cmp
xchg
pop
popf
mov
sbb
shll
mov
popa
into
test
std
iret
add
or
ds
jl
lret
add
rclb
mov
pop
push
mov
dec
inc
repnz
jmp
pushf
int3
mov
fwait
jns
scas
lcall
test
test
adc
scas
jo
gs
cmp
std
jecxz
in
pop
lret
mov
loope
mov
gs
cmp
bound
adc
dec
ja
pop
sti
xchg
nop
lahf
cwtl
int3
fidivs
icebp
js
or
pop
fwait
xlat
push
dec
aaa
xchg
and
subl
add
loop
nop
out
mov
lret
xchg
daa
jbe
in
mov
mul
aas
das
andb
in
int
jg
push
cmp
dec
add
pusha
call
lret
and
stos
add
dec
negb
outsb
out
pop
js
cmp
fs
inc
inc
pop
movsl
cli
aam
outsb
inc
pop
repnz
mov
rcrl
adc
lcall
xor
dec
in
sub
mov
outsl
aad
mov
sbb
repnz
mov
decb
icebp
xor
in
dec
test
mov
jge
jecxz
add
inc
adc
jbe
shlb
loop
push
in
mov
dec
adc
out
push
movsl
repz
and
fnstsw
jns
mov
adc
mov
loope
je
ja
lea
es
fists
jl
call
xchg
gs
jns
out
jb
dec
jecxz
jnp
sbb
xor
wrmsr
stos
test
add
les
mov
pop
pop
lods
leave
adc
insl
cmp
lret
jg
mov
shl
xchg
mov
xor
xor
loopne
mov
daa
fstps
shrl
xchg
cmp
scas
jne
mov
xchg
leave
cmp
xchg
in
out
jp
xchg
rolb
dec
dec
adc
dec
loope
in
icebp
inc
mov
mov
sub
xor
cld
mov
xchg
or
sti
dec
ret
xor
adc
pop
pop
jmp
pop
push
jbe
stos
jp
jbe
in
nop
out
sub
dec
jae
lcall
andb
lods
lret
adc
movsb
std
and
inc
adc
pop
popf
cltd
mov
pop
scas
stc
lea
cmpb
add
pop
lret
dec
dec
xor
push
ficomps
shll
pop
mov
popf
jl
stc
sbb
aam
pop
jp
enter
es
fbld
pop
jecxz
mov
sub
mov
popa
popf
lret
lret
fmull
loope
jg
dec
xchg
in
das
cmp
addr16
xchg
and
mov
inc
jns
and
jge
stos
es
sbb
sbb
aad
and
sahf
ret
or
ret
cmp
leave
cmp
sbb
sub
cmp
pop
stos
and
in
ljmp
jns
pop
jecxz
dec
inc
cmpsl
xor
adc
icebp
scas
imulb
jecxz
add
or
ljmp
push
push
cli
jge
push
cmp
mov
xor
je
jg
clc
cmp
inc
inc
pop
sub
test
shlb
xchg
jae
stc
cmp
dec
push
xchg
mov
jmp
jp
mov
rol
js
pop
subl
xchg
and
adc
jb
cld
cmp
lods
aad
mov
dec
push
xor
pop
lods
divb
jl
xor
lahf
pusha
mov
pop
movl
mov
adc
mov
xchg
cmp
push
mull
cmc
cmc
add
jmp
and
mov
out
add
je
mov
xlat
daa
fs
xor
hlt
mov
jp
mov
iret
fwait
hlt
incl
sti
sbb
xchg
and
pop
out
sub
fcoml
in
out
mov
js
repz
std
xchg
mov
push
sub
jno
mov
pop
push
insl
mov
testb
fildll
cmp
in
sub
xchg
mov
enter
pop
es
and
dec
stc
bound
je
or
int
inc
push
loop
aad
ljmp
cs
jns
fistps
mov
mov
inc
jnp
sbb
and
lea
dec
fdivl
or
mov
sbb
mov
daa
mov
jp
xchg
movsb
mov
add
call
sbb
mov
jl
sahf
lock
mov
gs
xlat
adc
in
cltd
pop
lds
aam
push
inc
cltd
dec
xchg
mov
arpl
sti
xor
sub
adc
and
es
xchg
lea
jb
push
cmpsl
leave
inc
dec
push
fidivs
int3
psubb
lods
push
test
es
in
sub
pop
and
es
add
add
out
and
ficomps
lds
sarb
int
add
inc
sbb
fildl
ffree
add
pop
add
pop
int
mov
mov
cmpsb
outsl
jp
loop
sbb
mov
pop
fimuls
and
loope
pop
out
push
lods
jbe
jg
xlat
lods
sti
sub
dec
out
adc
push
aaa
lcall
xor
ja
or
sub
mov
mov
ljmp
jns
push
pop
in
xchg
xor
inc
pop
rolb
out
int
push
lcall
mov
cmp
jbe
or
cmp
scas
sbb
imul
push
movsl
cmp
repz
inc
lahf
jg
cltd
adc
test
scas
push
jns
pop
mov
mov
add
mov
aas
sbb
scas
push
popf
out
push
cli
test
cmp
or
dec
fistl
and
out
pop
test
das
fcomps
scas
pushf
pop
pop
test
scas
mov
outsl
push
lods
sti
xorl
arpl
fcomps
push
in
sub
dec
pop
push
lds
imul
fs
mov
push
cmp
arpl
xchg
cmpsl
es
pop
es
push
js
mov
ljmp
xor
sahf
cmp
sbb
out
mov
jg
jmp
sbb
hlt
addr16
mov
in
sub
sub
movsl
ret
mov
adc
push
mov
insl
inc
xchg
out
add
and
test
test
rcr
and
push
lea
adc
into
iret
push
lock
insb
mov
iret
ficomps
push
mov
pop
setl
mov
lahf
cltd
scas
cmp
mov
jle
repnz
ljmp
xchg
outsb
jmp
jns
pop
jmp
into
hlt
mov
aas
loopne
xchg
push
cwtl
dec
paddusw
test
jns
xchg
fwait
sbb
leave
sub
xor
out
inc
or
movsb
pop
and
sub
ljmp
out
je
mov
inc
lds
jp
push
inc
or
enter
xchg
out
roll
vmread
cmp
ret
jmp
cmp
test
xor
jmp
popa
jae
push
in
cmp
push
cmp
xchg
pop
push
inc
scas
mov
loope
fmull
ljmp
xlat
adc
pop
sbb
fmull
mov
push
fldt
pop
fcomip
jg
jns
dec
stos
mov
add
add
sbb
mov
mov
xchg
int
aaa
shld
aam
fsubrs
push
sbb
push
gs
cmc
out
inc
push
mov
jp
push
push
aam
pop
jno
jmp
mov
sub
fsubs
aas
push
ds
not
xchg
cmp
push
imul
je
orl
ljmp
jns
pop
xlat
nop
and
cmp
push
sti
adc
es
and
cmc
adc
cmpsl
shlb
mov
das
mov
ss
pop
dec
pop
popl
in
into
push
popa
inc
mov
enter
shl
rolb
xchg
scas
mov
sti
fldenv
mov
and
jns
in
test
mov
fldl
xchg
pop
add
ret
es
mov
lds
mov
mov
lods
push
mov
or
and
add
aaa
pusha
add
mov
loopne
jl
xchg
pop
inc
add
sub
cmc
xor
aaa
lahf
fs
mov
in
inc
add
lcall
mov
popa
imul
lds
dec
pop
adc
dec
adc
pop
mov
jbe
int
out
or
faddl
ja
push
imul
or
pop
pop
enter
hlt
xor
pop
sbb
xchg
push
mov
sub
cld
xor
mov
mov
cli
jge
jns
loope
sbb
jns
inc
add
js
mov
stc
pusha
or
xchg
lcall
nop
addr16
sbb
inc
xor
mov
pop
xchg
ja
stos
cmp
ljmp
insl
data16
sti
jne
pop
push
pop
or
loope
dec
lds
push
stos
call
xchg
xor
push
call
cwtl
push
or
ds
cmp
aam
adcb
sub
leave
shll
lds
clc
insb
pop
sub
inc
mov
movsb
jle
mov
incl
cmp
ret
pop
mov
mov
rcl
and
outsl
jbe
sbb
outsb
mov
lret
leave
repz
addr16
push
sbb
dec
add
lahf
sbb
push
and
je
loop
inc
mov
cmp
and
sbb
cmp
icebp
push
sub
jle
or
repnz
imulb
out
mov
lea
xor
add
push
popa
out
and
mov
cmp
idivb
inc
cli
loop
lcall
adc
pop
cmc
xchg
out
out
add
push
xchg
gs
xor
pop
pop
lret
repnz
jb
xchg
mov
push
cmp
hlt
cmpb
scas
inc
cwtl
mov
or
mov
and
push
ficoms
call
mov
fwait
pop
js
xchg
add
mov
sbb
xchg
push
sbb
fcmovne
and
rorl
insb
xor
jb
dec
int
fcoms
orb
mov
incl
cmpsb
push
or
mov
push
mov
sbb
jne
mov
lret
pop
pop
iret
loope
mov
ss
inc
inc
adc
lods
xchg
mov
popf
xchg
dec
cmp
xor
cltd
cli
mov
adc
out
mov
mov
mov
cmpsb
movsb
adc
mov
xor
xchg
cmp
adc
jle
mov
mov
pop
not
out
adc
idivb
sub
xchg
in
xchg
hlt
xchg
aam
dec
sub
mov
ds
adc
insb
enter
push
pop
int3
sub
cmp
sti
mov
fdivp
lds
adc
adc
mov
push
mov
mov
jns
jne
pop
gs
mov
test
push
push
push
xchg
in
in
mov
cmpsb
aaa
mov
rorl
lods
xor
negl
pop
fst
mov
mov
sub
add
repnz
mov
imul
ds
or
push
jle
jns
mov
into
cmpsb
mov
push
pop
mov
dec
adcb
lea
mov
sub
mov
ds
jl
les
notl
push
mov
mov
stc
add
test
popa
int3
cmp
jmp
jl
jmp
insb
add
popa
jmp
xor
xchg
decb
mov
xchg
jl
or
and
lahf
jbe
pop
jecxz
mov
dec
hlt
lods
loopne
insl
lcall
mov
test
mov
fwait
lds
push
fmull
out
inc
inc
mov
push
out
call
jle
call
jo
or
push
or
jnp
pop
scas
ss
jg
sbb
mov
mov
scas
es
mov
out
add
xchg
stos
fisubl
shlb
dec
rcrl
push
pop
sbb
iret
cmp
test
cltd
ficomps
lcall
pop
sbbb
mov
mull
inc
xor
dec
sbbb
movsl
testb
and
inc
inc
popl
adc
sahf
inc
dec
cmpsb
lret
lret
leave
ret
mov
mov
icebp
rcrl
jmp
rclb
ror
push
push
and
lahf
hlt
mov
test
out
or
mov
outsl
mov
adc
lcall
repz
ja
sahf
inc
rcl
les
daa
sbb
mul
les
inc
aaa
jae
nop
xor
pop
xchg
repnz
mov
fwait
nop
push
sub
outsb
adc
push
mov
mov
jmp
test
inc
imull
jp
cmpsl
icebp
and
push
pop
sarl
shrb
dec
mov
add
dec
scas
in
sub
out
xchg
dec
fdivl
fimuls
enter
mov
inc
jl
or
daa
push
inc
jge
js
push
fdivl
mov
loope
shr
pop
xchg
aam
sub
mov
add
mov
div
call
dec
cmp
push
dec
xchg
fdiv
leave
sub
jmp
or
cmp
mov
mov
xor
pop
enter
mov
in
push
jno
enter
jmp
cmp
outsl
lods
daa
lods
fwait
repz
in
push
cmp
test
loopne
push
je
das
jae
lea
inc
in
mov
stc
mov
loop
xchg
lcall
je
mov
push
aad
adc
lea
aam
inc
xchg
lret
cmp
jle
xchg
ss
xchg
sub
mov
ror
fsubl
cs
sbb
mov
push
neg
pop
xor
bound
push
int
sub
das
mov
popa
cmpsl
insb
and
jae
cmp
filds
jecxz
adc
xchg
rclb
lret
xchg
jne
add
push
pop
jne
bound
sahf
fsubrl
xchg
sbb
push
pop
in
ljmp
mov
dec
aas
and
daa
idivb
pop
lcall
stc
rolb
enter
sbb
mov
mov
ret
and
push
and
push
dec
xlat
jmp
mov
xor
cmpsl
jge
aas
add
jmp
mov
and
lret
mov
pop
lods
and
loope
lahf
lods
aaa
xor
sbb
inc
insl
cmp
cmp
adc
mov
roll
sbb
mov
add
or
fdiv
pushf
push
dec
cmc
loope
dec
mov
mov
ret
pop
adc
in
mov
xchg
in
or
push
movsb
jo
pop
int
xchg
ret
lods
ret
mov
scas
insl
xor
enter
flds
push
aam
lcall
rolb
push
sub
push
ret
mov
cltd
ret
adc
add
dec
rcr
sahf
mov
in
fstpl
hlt
push
js
scas
add
pop
mov
enter
inc
imul
in
inc
and
in
mov
dec
jmp
cs
pop
or
test
pop
int3
jnp
bound
push
dec
mov
mov
push
das
sbb
rclb
aad
xchg
push
mov
xchg
or
fcmovnbe
bound
rolb
insl
push
or
inc
mov
imulb
push
test
or
subb
mov
xlat
pusha
jns
xor
jo
add
out
gs
mov
mov
and
or
dec
in
adc
dec
jmp
cmc
call
sub
mov
or
test
ds
adc
or
mov
sbb
mov
pop
push
int3
aam
push
movsb
add
push
xchg
cli
shl
fs
add
lret
xor
xchg
push
sbb
addl
mov
cmp
stos
cwtl
add
aas
jbe
mov
inc
inc
cwtl
add
movsb
pop
and
roll
outsl
lar
add
sbb
sub
notb
sbb
ffreep
xchg
and
sbb
lea
xor
fstl
mov
out
enter
or
or
dec
mov
pop
fwait
xchg
push
ret
js
push
ret
int3
rcrl
fdivrp
cmp
cmp
in
push
lds
mov
std
test
fmulp
cs
scas
mov
xor
clc
stc
add
std
mov
xchg
orb
in
pop
negl
loopne
cmp
inc
les
mov
and
pop
sarl
xchg
cmpl
xor
cmp
testb
das
sbb
stos
mov
inc
xchg
push
lcall
lea
sub
in
push
repz
aad
dec
out
lret
xor
or
sub
out
int
imul
je
daa
rcl
cwtl
je
sbb
jle
mov
push
gs
addr16
je
mov
je
std
and
ret
push
mov
jmp
or
addr16
inc
fdivrs
push
stc
jbe
addr16
test
cmp
es
adc
xor
sbb
xchg
cltd
call
or
insb
fisttpll
loopne
jl
mov
cld
insl
jo
push
mov
pop
popf
dec
mov
fucomp
mov
mov
es
jl
dec
jmp
shl
or
popa
mov
xorb
imul
jg
adc
movsl
rcr
push
and
xlat
and
pop
fs
clc
mov
adc
sbb
ja
dec
cmp
ja
push
lahf
dec
adc
dec
sbb
int3
sub
push
lods
mov
mov
jne
fcmovu
mov
dec
push
cld
into
sbbl
pop
ss
popf
out
xor
bound
and
lmsw
decb
or
icebp
jae
or
xchg
and
dec
repnz
pusha
sahf
mov
inc
rorb
mov
jb
ljmp
mov
push
bound
pusha
ja
add
push
pop
imul
adc
or
mov
cwtl
cmp
dec
ljmp
xorl
adc
mov
pop
sub
mov
sbb
jno
mov
or
push
cli
mov
roll
sbb
cmpsb
xor
jno
jmp
cmp
fisttps
push
jg
lea
pop
pop
stos
mov
dec
sbb
jno
mov
jnp
push
sbb
stc
pop
xchg
push
sub
jb
ljmp
and
out
push
cmp
xchg
loope
lea
add
xor
mov
xchg
adc
and
inc
stos
negb
pushf
jp
lock
cld
xchg
pop
cltd
push
dec
cltd
push
test
cltd
inc
movsl
push
xchg
sub
jg
adc
xor
mov
sahf
add
xchg
push
sbb
shlb
cli
cmp
orb
xor
push
lods
lods
jo
push
sub
aas
lcall
inc
les
push
add
pop
fdivs
es
int
mov
movsb
adc
imul
andb
nop
xor
jae
dec
out
jns
dec
lcall
push
idivb
dec
inc
test
pop
psubusb
enter
add
jns
push
jle
loope
xchg
loop
subb
subb
scas
pop
adc
sbb
sub
pop
push
fidivrl
rcll
icebp
xor
mov
inc
test
jmp
mov
outsl
mov
dec
addr16
shl
pop
andb
fdivs
bnd
or
adc
leave
dec
adc
jmp
inc
mov
add
fsubrl
jae,pt
ja
mov
subl
pop
mov
mov
cmp
sbb
pusha
icebp
and
popa
pop
in
inc
dec
pop
lahf
hlt
inc
mov
mov
stc
and
fxch
loop
out
push
lods
adc
pop
int3
fcmovu
lods
push
fnstcw
cmp
repz
jg
sbb
fists
cmp
push
adc
and
movsl
push
adc
cmpl
lea
xchg
jle
daa
mov
icebp
dec
enter
mov
sbb
adc
sbb
pop
enter
xor
cmp
xlat
xor
in
sub
outsl
mov
mov
adc
sub
dec
testb
push
adc
cmp
push
lret
ficoms
jne
imul
xor
test
inc
mov
rorb
xor
cmp
int
adcl
or
mov
std
rclb
shll
adc
mov
mov
mov
out
lds
dec
mov
unpcklps
sub
out
test
pop
pusha
inc
cmpsl
xor
cmpb
push
dec
popa
or
sub
xor
jecxz,pt
leave
jno
cmp
mov
lea
push
jge
xor
xchg
jecxz
js
js
fnstsw
jle
icebp
leave
mov
addr16
repz
mov
adc
in
xlat
mov
mov
add
sub
and
adc
fldcw
lcall
sbb
lahf
or
insl
fdivs
sub
lret
stos
jmp
lds
imul
dec
inc
test
jne
insl
cmp
jne
push
push
xor
insb
xchg
in
data16
aam
inc
insl
sub
mov
sub
js
clc
dec
movsb
daa
sbb
mov
repz
fadds
and
mov
inc
arpl
lahf
jne
jnp
sub
pushf
lods
push
lahf
jae
shll
testl
gs
jae
jle
mov
push
dec
xchg
adc
test
mov
scas
xorb
sub
jne
xchg
movsb
mov
sarl
gs
aad
push
fcmove
lret
lret
and
or
adc
pop
pushf
sub
and
inc
loope
pushf
pop
stos
call
dec
ss
rcrb
lods
sbb
mov
jmp
mov
cld
pop
out
shrb
xor
lods
jl
adc
adc
pop
aad
jns
sub
mov
add
mov
aas
negl
sbb
sbb
cmpsl
mov
loop
fidivrl
add
aas
adc
or
mov
adc
jecxz
outsl
lods
mov
pushf
jp
addr16
mov
cmp
dec
push
mov
lds
insl
push
adc
jbe
adc
out
cmpb
or
inc
movsb
inc
xor
cmp
sbb
mov
and
in
sahf
xchg
ja
sbb
and
cmp
cmp
mov
add
add
jne
pop
push
les
fldt
insb
enter
in
add
jl
repz
cwtl
fwait
shrl
pop
call
sbb
aas
lahf
mov
mov
repnz
daa
in
xorb
loope
je
ds
pop
pop
pop
dec
sbb
cmp
add
push
xchg
cli
roll
pop
stc
jl
aad
repnz
cmp
pop
nop
sbb
sbb
push
dec
add
mov
jno
sub
scas
mov
ret
cltd
inc
xchg
jne
and
xorl
mov
sub
sbb
outsb
les
in
jl
cmp
jo
jp
bound
cmc
sub
out
outsb
fwait
or
popf
insl
dec
and
add
std
cli
push
int3
ja
xchg
repz
pop
pop
lea
mov
mov
add
push
push
inc
xlat
repz
mov
push
int3
js
sbb
push
sub
clc
xor
es
ja
sbb
jmp
clc
push
pop
pop
cmp
out
shl
cmpsl
jne
xor
pop
and
cmp
stos
cmc
cmp
cli
ret
nop
sbb
xor
inc
dec
jp
andb
pop
jae
inc
adc
scas
mov
pop
mov
adc
lds
js
pop
ljmp
pop
lea
jb
test
adc
dec
cmpsb
jle
pop
cmpl
fistpl
notl
jmp
or
fwait
inc
mov
mov
fdivp
adc
sbb
inc
xorl
or
arpl
cmp
test
shll
rorl
loop
sub
and
adc
xchg
jl
stos
mov
sbb
lods
mov
scas
out
lock
sbb
xor
or
movsb
jb
cmpsb
imul
lods
jne
mov
std
mov
jne
mov
ret
lds
xor
rcr
sub
pop
test
iret
nop
js
mov
out
and
sub
push
add
enter
jle
sbb
jns
xchg
mov
lods
mov
aam
enter
lahf
in
sub
push
negl
in
xchg
repnz
or
in
cmp
mov
mov
stc
es
mov
push
cmp
xor
dec
pop
bnd
mov
out
mov
stos
js
jnp
jg
cld
sarl
xor
fwait
lds
fldcw
jne
mov
stos
jns
inc
mov
sbb
xor
pop
mov
push
inc
sbb
pop
stc
stc
in
pop
sub
cmc
mov
sbb
mov
xchg
int
dec
inc
jb
jmp
negl
cltd
inc
dec
mov
loopne
pop
mov
cmp
enter
js
mov
xchg
add
xor
in
movsl
adc
cmp
fiadds
inc
out
xchg
testl
repnz
lock
fst
jmp
ret
gs
and
mov
orb
sub
aad
mov
sti
ret
scas
mulb
gs
jmp
add
mov
jne
inc
jge
mov
sti
sbb
jbe
hlt
outsb
fldt
or
lods
mov
faddl
pop
ja
mov
jns
cwtl
das
addr16
stc
cmpsl
lahf
clc
mov
rorb
jno
add
xchg
std
outsb
fisttps
cli
sbb
pop
filds
pop
fldcw
cmp
mov
push
aad
dec
dec
fwait
inc
int
dec
or
inc
xchg
add
mov
scas
or
cmp
dec
lcall
add
pop
xchg
aad
icebp
ss
inc
jmp
inc
cmp
pop
pop
ds
xchg
addr16
jg
jo
push
clc
movsl
cmp
sti
arpl
insb
shrl
ss
lea
inc
cmpsb
jns
rorb
cmp
sbb
pop
mov
adc
jg
dec
xchg
in
mov
popf
pop
jl
pop
add
mov
aaa
mov
adc
psubd
aaa
pop
jb
push
add
mov
adc
pop
clc
loopne
mov
adc
popa
xchg
rcrl
testl
test
lds
xchg
xchg
in
mov
mov
sub
jecxz
mov
pop
dec
or
mov
in
push
push
mov
jg
fsts
fsts
xchg
xchg
jecxz
xor
mov
sbb
lea
loop
ret
mov
and
and
jle
rorb
cmp
pop
push
lret
dec
mov
mov
fcoml
xchg
jno
fsubs
push
mov
push
mov
out
push
adc
fildl
test
int3
sbb
mov
aam
cltd
mov
out
cwtl
clc
rclb
push
xor
fcoms
mov
xor
cmp
test
je
outsl
ja
and
cs
cmpsl
fstl
or
xchg
movsb
int
mov
aam
sbb
shrl
cmp
inc
mov
mov
scas
pop
sti
dec
and
xor
jo
jle
cmpsl
jg
cmp
push
incl
sahf
insb
sahf
aaa
shrl
adc
push
ficoms
test
push
jle
jae
sub
mov
ljmp
push
or
nop
psubq
pop
adc
mov
xchg
adc
arpl
mov
mov
push
cmp
or
xchg
sbb
ds
xor
lret
sbb
hlt
inc
xor
pop
sbb
shll
jecxz
sub
jp
rolb
lcall
shlb
add
mov
sbb
mov
aam
jl
push
push
mov
leave
push
pop
mov
cwtl
aas
or
cmp
adc
das
jp
fnstsw
lret
pop
gs
loope
jle
call
popf
sub
mov
pop
int3
and
insb
je
dec
pop
insl
enter
xchg
sub
movsl
fldlg2
inc
mov
jg
ja
test
into
inc
and
push
inc
xor
sub
pop
lcall
jnp
enter
fs
je
stc
scas
cmp
jno
mov
popf
in
notb
cmp
adcl
adc
fwait
sbb
test
cvtps2pi
insl
push
cmp
push
pop
jnp
pop
pop
xchg
fidivrl
hlt
pushf
dec
movsl
xorb
outsb
les
and
rorl
sub
or
aas
xchg
xor
cli
and
adc
xchg
popf
lods
mov
ljmp
cmpsl
jle
movsl
push
sub
mov
or
sbb
pop
inc
dec
scas
cmpsb
in
jo
out
or
cwtl
inc
adcb
shrl
adc
mov
outsl
mov
pushf
test
mov
js
imul
cmc
push
dec
lock
mov
add
pop
mov
data16
orl
out
dec
mov
inc
dec
jo
sub
lds
xchg
sbb
lods
jae
sbb
mov
xor
lret
movsl
add
out
test
aaa
stos
sbb
jecxz
push
or
lea
jns
mov
add
inc
mov
ja
insb
mov
pop
add
add
ret
lds
movsl
or
add
outsl
inc
rcrb
in
lahf
mov
fcomp
mov
xchg
mov
xor
dec
movsb
int
push
lods
stos
jb
js
mov
cmp
sub
ss
mov
jl
das
inc
jmp
adc
sub
mov
int
ja
orb
lea
testb
mov
mov
mov
daa
fcmovb
adc
mov
push
mov
movsl
int
test
push
add
and
sti
scas
cmp
data16
jmp
aam
jbe
cwtl
jbe
and
jae
in
mov
cmc
inc
cmp
sbb
lret
xor
cmp
pop
cmp
icebp
test
sahf
cmp
pop
jmp
in
mov
lods
es
jbe
shrb
arpl
dec
scas
inc
xchg
cld
test
cmc
pop
or
iret
adc
lds
cs
mov
sbb
and
popl
mov
ret
sbb
daa
rcrl
fstps
or
add
outsl
mov
ret
cmpsl
xor
outsl
xchg
daa
push
fimuls
dec
rorl
xchg
in
jecxz
jl
mov
inc
push
mov
insl
in
dec
insl
out
inc
stc
sub
pop
add
imul
or
aad
or
das
xor
popf
mov
adc
mov
fwait
movsb
lret
fdiv
andl
xor
mov
sub
sbb
push
or
out
frstor
xor
lock
or
ficoms
or
inc
sbb
inc
pop
out
xchg
out
pusha
inc
mov
sarb
adc
sbb
repz
cs
dec
insl
dec
ret
aaa
and
push
imul
and
mov
stos
out
das
je
shll
ret
adc
lods
repz
test
ljmp
pop
inc
mov
dec
imul
je
adc
lock
pushf
test
test
or
pop
and
popf
inc
xchg
dec
xchg
jl
jmp
iret
out
pop
and
inc
dec
popf
inc
fdivrl
stc
pop
outsl
sub
xchg
lret
xchg
adc
adc
push
shll
ja
mov
xlat
leave
mov
adc
test
adc
jbe
pop
aad
aaa
movsl
push
std
pop
pushl
mov
xor
test
notl
cmp
out
ss
or
lock
cmpsl
mov
stos
arpl
iret
and
es
cwtd
loop
cltd
sub
jmp
push
cmp
add
fnstsw
adc
scas
xchg
add
cwtl
lret
dec
cmp
xor
andb
lods
push
mov
add
sbb
lret
jle
mov
mov
push
and
xor
neg
push
in
enter
mov
or
cmp
push
nop
mov
and
xchg
int
ljmp
mov
push
sbb
add
sub
fnstenv
inc
pop
mov
ds
sbb
cmpsb
jb
xchg
add
pushf
test
mov
dec
test
push
jb
adc
insb
mov
pop
loope
call
jg
xchg
cltd
push
push
sbb
push
fcomps
pop
in
out
ss
test
xchg
bound
xchg
dec
and
fists
mov
adc
lea
fs
clc
mov
dec
pop
add
mov
sti
mov
lret
mov
imul
cmpsb
mov
xchg
sarb
cmpsl
aam
js,pt
xchg
filds
mov
or
dec
xor
pop
add
in
mov
leave
lds
mov
in
sub
lods
dec
dec
stos
xor
sbb
mov
add
or
loop
and
cli
imul
or
xor
sti
jae
mov
cmpsl
pop
sub
out
pop
out
shlb
cmpsl
ds
popf
int
add
aas
inc
insl
mov
lods
cmp
iret
imul
sub
hlt
or
add
sbb
or
jp
xchg
jle
xor
xor
add
insl
jnp
loopne
daa
fwait
imul
mov
nop
negb
aam
push
into
les
cltd
mov
out
pop
add
ljmp
or
fwait
lock
dec
sti
ss
xchg
xchg
add
cmp
int
insb
cmovle
out
push
xor
jle
mov
mov
jns
add
stos
loopne
cmp
addl
movsl
scas
jl
fisttpl
inc
add
loopne
mov
push
out
andl
jle
fucomi
mov
lods
insl
pop
aad
mov
sbb
jp
xlat
lods
jb
fbld
loopne
sbb
pop
or
sar
lock
dec
mov
mov
shlb
lods
jge
sub
popa
jmp
and
inc
and
fdivs
inc
mov
inc
lea
xchg
clc
mov
iret
fcmovu
cltd
mov
stos
jl
xchg
lret
jl
movsl
mov
cmpsl
push
mov
xor
nop
mov
sub
out
mov
jg
fs
out
mov
bnd
mov
sub
cmp
rcrl
jl
pop
iret
subb
out
xor
movsb
jne
push
std
jnp
lcall
and
jge
arpl
aas
and
nop
fs
xchg
mov
sub
mov
push
in
pop
filds
jno
sbb
fsubl
fcmovne
mov
sub
sahf
xchg
pop
push
xor
cmp
mov
inc
into
push
in
sbb
adc
in
dec
negb
mov
cmp
scas
jecxz
mov
jg
sbb
clc
ss
out
jp
xor
movsl
push
les
pop
stos
add
mov
adcb
mov
dec
push
sarl
push
and
nop
add
imul
cmp
fldcw
dec
andl
pop
test
sbb
lret
adc
ficomps
jne
cwtl
fisttpll
jbe
push
cli
dec
sahf
or
xchg
add
push
jmp
scas
setp
pop
psraw
mov
cld
fiaddl
jg
and
xchg
js
ss
lods
mov
iret
xor
gs
mov
add
iret
out
mov
pop
jg
cmp
cmp
xchg
push
daa
pushf
jecxz
fbstp
xlat
movsl
sti
je
out
mov
sub
fisubl
jle
xchg
lods
dec
rolb
cmp
sub
or
iret
sbb
push
xchg
jmp
xlat
cmp
out
mov
orl
mov
adc
xchg
xor
daa
fneni(8087
sti
jmp
lock
xorl
sahf
outsl
movsb
jmp
sbbb
fmul
les
xchg
aas
and
mov
inc
jo
or
add
fistl
sbb
mov
inc
pop
dec
popa
cmpsb
adc
cmp
pushf
shrb
pop
jno
xor
sub
cli
cmp
xor
add
xchg
ljmp
dec
inc
push
inc
ffreep
sub
mov
add
popa
dec
dec
cmp
lods
loop
xchg
pop
outsl
repnz
in
fs
test
push
push
shlb
xchg
imul
push
xchg
popa
jne
cwtl
movsl
jle
lea
test
in
rcll
mov
xchg
sarl
jnp
insb
icebp
or
cmp
add
fwait
inc
sub
xchg
cld
mov
fwait
adc
add
adcb
lods
or
iret
stos
lret
sub
sbb
lock
jae
pushf
push
push
and
rcrb
pushf
push
xor
fwait
mov
xor
adc
test
lret
xor
fstl
fisttpll
pop
cmpsb
push
pop
js
mov
sub
ds
in
mov
sub
cmp
ret
xchg
inc
push
rorl
mov
addb
and
dec
and
iret
imul
xor
les
bound
sub
aas
cmp
fisubrs
add
test
mov
popf
shrl
xchg
xor
sub
inc
mov
test
or
aam
mov
into
into
mov
push
lahf
adc
imul
shll
xlat
mov
ffreep
out
add
xor
movsb
or
pop
mov
mov
subl
push
out
jge
inc
or
ja
hlt
outsb
fiadds
xchg
sti
dec
dec
add
sub
popf
dec
mov
adc
pop
fidivs
repnz
jp
xchg
jge
jb
leave
pop
adc
pop
repnz
sti
into
cmp
xchg
mov
ds
add
mov
xor
pop
adc
xor
push
jno
pop
scas
xor
adc
xor
test
jo
jle
std
dec
les
inc
daa
xchg
xor
sti
or
stc
xchg
jl
sbb
mov
fbld
fcompl
xorb
jbe
cld
sbbl
cmp
es
outsb
leave
dec
rcll
fsubrl
pop
scas
xor
mov
out
pop
pop
adc
out
push
adc
andb
test
inc
add
cmp
adc
fidivrs
mov
idivl
movsb
and
pop
mov
lock
outsl
scas
subb
stos
adc
les
fldt
cmp
out
in
pop
xor
dec
adc
test
and
out
jp
add
ret
inc
or
sahf
stos
mov
cli
sub
push
repz
pop
sbb
sarl
mov
jb
lods
sbb
or
out
adc
testl
dec
stos
ja
sbb
lock
inc
dec
nop
mulb
cmpsl
movsb
stos
mov
fadds
adc
mov
test
in
pop
and
enter
dec
mov
jmp
in
adc
inc
fists
stc
arpl
out
mov
ljmp
decb
adc
in
mulb
imul
fcmovu
aam
shrb
nop
lret
gs
leave
or
popf
loopne
inc
out
movsl
mov
leave
imul
cli
mov
jp
pop
inc
jno
add
arpl
mov
mov
xchg
dec
lea
push
repnz
std
dec
sarl
add
push
test
stos
gs
cmpsb
or
in
sbb
shlb
movsb
sub
dec
stos
rolb
subb
out
mov
jmp
inc
xchg
mov
test
lock
jne
shlb
and
js
enter
movsb
fldt
push
mov
sub
lods
lret
ud0
cmp
mov
fbld
mov
pushl
xchg
loopne
mov
fwait
cmpsb
scas
std
js
adc
lock
daa
xor
dec
push
dec
push
in
push
pop
adc
mov
xlat
adc
outsl
add
popa
outsl
inc
adc
pop
lahf
popl
push
clc
mov
sub
xchg
fdivs
add
adc
lds
aam
xor
lods
repnz
xor
repz
xchg
imul
je
popf
stos
pop
negb
and
xchg
in
dec
loop
ret
pusha
repz
and
movsl
imul
stos
cmp
lods
icebp
add
into
scas
xor
inc
loope
push
lds
sti
jns
ds
cmp
icebp
loope
ja
cmp
lretw
mov
ds
hlt
cmp
mov
inc
and
and
dec
xor
mov
test
adc
jmp
rorl
negb
xor
aad
sub
rcll
adcb
push
sub
push
outsb
sbb
in
movsb
roll
push
push
cwtl
icebp
dec
cmp
and
mov
sbb
inc
cmc
xchg
dec
xor
test
mov
std
xor
jmp
scas
or
loope
or
scas
xchg
repz
shlb
xor
xor
ja
inc
jge
lods
mov
fs
leave
ljmp
rcrb
mov
xchg
adc
and
lds
aam
test
rep
das
int3
mov
xchg
xor
cwtl
outsb
movsb
lret
pop
jns
jns
ds
or
xlat
adc
loopne
mov
out
lock
pushf
cmp
pextrw
mov
add
jmp
cmp
mov
xchg
fdivrl
xor
shll
xchg
std
mov
iret
icebp
shll
loopne
push
xor
frstor
mov
lods
mov
jo
cmp
mov
in
mov
call
pop
mov
orb
dec
xor
or
sbb
sbb
adc
xchg
subb
and
rclb
cs
out
mov
cltd
loop
test
dec
cmpsl
lret
fwait
mov
jmp
out
lds
scas
add
push
mov
loop
arpl
mul
jns
xchg
mov
mov
lea
cmpsl
in
pop
push
push
or
notb
jbe
mov
sbbb
inc
dec
add
fnsave
leave
pop
fldl
mov
pop
push
arpl
or
test
mov
lret
mov
dec
in
mov
cltd
cmc
aad
shl
push
test
sbb
sahf
mov
cld
jg
xchg
js
mov
fiaddl
js
push
scas
pop
mov
inc
xor
lcall
or
jne
in
in
add
cmpl
xchg
and
xchg
mov
fsubrs
add
and
sbb
and
loope
jbe
or
ss
push
jle
ret
fwait
shrl
xchg
dec
add
out
fisttps
or
ja
mov
jno
and
pop
out
cmp
int3
cmp
mov
cltd
fidivrs
cmp
xor
xchg
add
mov
adc
rolb
std
clc
jns
jb
inc
sbb
add
mov
cs
stos
ds
pusha
lcall
adc
stos
xchg
push
test
cs
das
pop
jmp
pop
jle
clc
stc
pop
sbb
fnstenv
imul
inc
xchg
cld
sub
mov
lcall
out
out
pop
ret
fwait
sub
dec
lock
xlat
daa
jns
sbb
pop
daa
gs
iret
adc
lock
jne
int
hlt
mov
bswap
xchg
fstpl
adc
out
sub
shlb
pop
mov
in
cmp
pushf
movsb
aas
fisubl
mov
dec
mov
jae
fsts
dec
push
mov
lods
jp
loop
stos
ja
sbb
insb
mov
popf
mov
inc
movsl
jp
out
jne,pn
and
mov
jbe
inc
aam
out
push
mov
or
and
jl
popa
imul
and
js
lahf
push
lret
data16
movsl
adc
lret
or
lret
xchg
divps
add
pop
aad
out
adc
inc
cmp
mov
aas
cmp
sbb
jp
jnp
sbb
inc
adc
mov
movsl
adc
imul
lds
subl
stc
xchg
jne
enter
sti
int3
pop
jle
cmp
push
dec
pop
insb
dec
and
in
addr16
inc
xchg
pop
loopne
stc
and
js
adc
movsl
std
stos
filds
jl
loopne,pn
ds
inc
imul
jae
ret
mov
movsb
push
mov
adc
pusha
sub
and
sub
xchg
adc
adc
jno
loop
ret
in
jge
cmp
add
push
insl
sub
leave
aam
cli
sti
pop
in
jb
add
lcall
call
pop
jnp
or
inc
cli
lods
push
mov
push
test
cli
pop
cmp
les
dec
jbe
mov
push
lret
sbb
and
loopne
dec
into
push
popa
adc
int
mull
push
mov
sbb
inc
jno
movsb
cli
mov
push
fadds
xor
push
mov
jecxz
stos
xor
sbb
cli
xor
sahf
inc
or
out
outsb
cmp
jns
and
push
ret
mov
and
xchg
push
mov
es
mov
mov
es
sub
in
ret
pop
sub
xor
jecxz
ret
add
imul
punpckhwd
fsubl
aas
xlat
cs
and
mov
lahf
jmp
imul
lcall
push
lods
ds
or
arpl
lret
sub
pop
out
or
jo
xchg
popa
xchg
imul
sub
adc
inc
test
fistl
cmpsl
add
int
bound
aad
fidivl
popf
and
adc
cwtl
fs
jecxz
mov
inc
lcall
loopne
leave
int3
mov
fidivrs
cmp
fldcw
and
cmc
cmpb
mov
add
cmpsl
mov
or
mov
fdivrl
cmpsl
es
jmp
push
push
movsb
adc
mov
sbb
mov
insl
inc
jno
int3
mov
and
test
popa
addb
sti
insl
inc
popw
pop
bound
fcompl
adc
pusha
shl
and
pusha
ljmp
sub
lret
scas
push
rorl
xlat
adc
ljmp
jno
aad
inc
icebp
leave
clc
cmpsb
stos
add
addr16
ds
int
call
cmp
add
sar
mov
mov
or
lds
fistps
cmp
iret
outsb
pop
iret
scas
jmp
sahf
stos
imulb
mov
dec
cmc
jle
cld
mov
mov
push
inc
mov
mov
and
inc
xchg
sub
xchg
jbe
pop
cmpsl
and
xlat
and
cli
scas
aaa
addr16
sbb
test
pop
push
dec
lret
stc
int3
add
or
and
pusha
mov
and
or
popa
mov
cwtl
mov
add
pushf
stos
cmp
mov
xchg
adc
xchg
in
fcmovb
jmp
push
and
nop
and
dec
outsb
iret
pop
xchg
ja
xchg
aas
clc
push
in
jns
aam
cs
pshufw
gs
shl
lret
inc
sbb
icebp
cmp
add
jmp
fnstsw
or
call
mov
fildll
shl
data16
mov
lcall
imul
add
push
jne
lcall
xor
mov
sub
dec
hlt
orl
jl
add
cmp
or
cmpl
jno
or
add
or
cmc
pushf
in
pop
pusha
ret
popf
aaa
in
fsubrs
inc
pushw
cs
fs
shrb
sub
popa
pop
orb
inc
je
sbb
or
inc
jo
mov
cli
dec
das
push
sbb
mov
inc
xor
lea
cmpsb
gs
lea
jge
icebp
cmc
add
adc
movsb
out
popa
dec
test
or
mov
cmpsl
cmp
cmp
leave
mov
inc
push
inc
stos
jns
dec
pop
push
mov
jge
clc
mov
sbb
cmp
and
sbb
xorl
int3
sub
popa
pop
dec
ljmp
cmp
aam
push
fs
jns
in
fstps
psadbw
lret
ret
fistps
clc
out
fidivrs
xchg
lahf
mov
sub
push
or
in
lds
add
int3
dec
test
cli
add
fistpl
std
mov
int
pop
lret
dec
or
into
icebp
dec
mov
insb
insl
aaa
ss
xchg
push
lods
mov
lods
push
adc
nop
mov
cmp
mov
ljmp
ret
fildll
sahf
sbb
ret
inc
ret
jb
roll
and
xor
movl
or
jl
adc
or
ret
sti
pop
imul
xor
mov
mov
fildll
clc
out
and
xchg
imul
sti
pop
sbb
or
das
cwtl
mov
jmp
imul
outsb
dec
int
popf
les
andl
enter
pop
xlat
sub
add
hlt
push
pop
fsubs
or
inc
insl
lret
daa
add
lea
mov
sub
pop
cli
test
je
mov
push
lods
cmp
arpl
aas
rcrb
mov
push
outsb
mov
stos
pop
cmpsl
sub
jle
test
adc
pop
repnz
lret
popa
inc
inc
inc
sbbb
out
dec
jb
lods
mov
daa
in
xchg
aaa
jl
jmp
fldenv
inc
fwait
sbb
sbb
adc
adc
mov
loope
mov
xchg
loope
adc
mov
jns
sti
sahf
and
push
and
fsub
sub
sti
pushf
in
jbe
jg
popa
mov
jb
jecxz
orb
mov
sbb
in
mov
mov
int
add
cs
jne
test
aam
leave
shll
insw
pop
push
call
jmp
lahf
mov
lret
xchg
filds
pop
movl
jle
push
std
ds
cli
jp
outsb
int3
rcrl
dec
out
outsb
rcrl
xchg
jno
sub
xchg
dec
sbb
stc
dec
push
aas
lds
xlat
cmp
xor
adc
or
and
inc
push
fs
or
xor
inc
lods
push
xchg
mov
inc
push
push
popa
xor
sbb
pop
aad
addr16
xor
sti
jge
or
inc
mov
xor
sbb
mov
mov
inc
and
fsubs
dec
cli
add
pop
xlat
ds
push
or
pop
data16
iret
cmpsl
mov
jp
push
out
icebp
pop
push
inc
hlt
inc
std
lods
pop
push
cltd
push
inc
arpl
or
mov
fists
fwait
mov
stc
sbb
inc
pop
mov
xchg
cmovle
fistps
sbb
cli
addl
int
stos
mov
imul
adc
mov
fwait
std
setbe
movsb
mov
mov
or
inc
mov
addr16
test
sahf
adc
in
stc
insl
push
mov
insl
decl
call
adc
out
stc
out
adc
imul
jg
test
inc
mov
test
xor
bound
pop
pop
int
and
stc
or
fists
mov
dec
push
iret
add
cmp
xlat
mov
jne
jmp
loope
xchg
xlat
jo
iret
lea
imul
ss
xor
sbb
mov
sub
inc
dec
leave
enter
outsb
ret
add
shr
mov
or
imull
loopne
sahf
sti
aaa
jge
cmpsb
nop
cmp
aaa
push
cmp
shrb
jp
hlt
push
mov
xchg
mov
jae
lret
jb
mov
mov
test
loop
insb
jbe
add
push
cmp
in
xchg
adc
cmp
loopne
fiaddl
pop
dec
bound
rol
clts
sahf
cmp
and
cmc
fucomi
pop
or
sti
fs
add
ss
gs
push
mov
mov
push
xor
add
gs
mov
mov
push
xor
pop
mov
nop
mov
rcr
nop
cld
and
sarl
mov
testb
sub
fucomp
mov
cmp
mov
hlt
sub
test
xchg
test
mov
dec
imul
dec
xchg
rorb
jmp
mov
mov
xorl
icebp
cmp
adc
insb
int
sahf
lea
popa
jo
inc
in
jecxz
xchg
outsb
rcr
xchg
sarl
fninit
and
cld
xor
mov
add
pusha
xor
flds
repz
add
jg
and
mov
cmpsb
dec
popa
inc
push
out
mov
gs
or
or
cmp
jae
in
push
sbb
lea
shrb
movsb
jecxz
cmc
mov
das
xor
pop
xchg
mov
mov
hlt
adc
out
xchg
roll
adc
xor
out
movsl
jmp
mov
sti
mov
or
sbb
sbb
gs
popf
inc
dec
pop
hlt
popa
mov
stc
mov
imul
js
mov
test
insb
adc
add
mov
out
icebp
lock
jno
icebp
adc
push
fcompl
ret
add
fldl
cmp
push
mov
xchg
shlb
pop
addl
mov
stc
movsb
adc
fs
xchg
hlt
popw
lret
int
popf
xchg
or
sbb
into
nop
call
adc
xchg
fcomps
cmp
or
mov
push
mov
dec
sbb
inc
jmp
jp
dec
mov
inc
push
xor
dec
popf
add
out
jnp
shlb
enter
jne
rclb
push
inc
or
cmc
pop
sub
mov
inc
pop
pop
ja
adc
mov
sub
and
sbb
or
cmp
adc
out
adc
jnp
pop
stos
push
lock
popf
out
aad
mov
int
xchg
das
mov
les
sub
mov
jb
push
jl
ds
push
mov
push
div
ja
repnz
sti
and
test
ficoms
fwait
sub
sub
push
and
sub
push
outsb
hlt
and
mov
cmp
jge
inc
ja
pop
insb
divl
fwait
stos
jge
dec
inc
cmpsl
mov
sub
add
rcrb
push
push
repz
andl
xor
inc
sbb
addr16
stos
dec
xlat
loopne
inc
or
pop
inc
stos
pushf
inc
pop
adc
shl
push
cmp
cmp
insl
std
pop
mov
jo
je
and
loop
mov
sbb
sarb
pop
cli
sbb
gs
sub
mov
icebp
push
or
addr16
cmpsl
dec
fisubrs
sbb
xchg
movsl
or
sub
jecxz
sbb
jno
fs
adc
sbb
fmull
ret
sub
cltd
or
or
cmp
pop
mov
scas
or
leave
and
xchg
add
hlt
sarb
in
mov
aaa
adc
inc
xor
scas
jns
jmp
inc
sub
mov
in
or
roll
push
or
dec
test
out
lods
adcb
adc
mov
sbb
add
imul
adc
insl
adc
jae
xchg
sti
inc
outsl
sub
jo
cmp
orb
jne
mov
mov
inc
out
negl
lret
out
jae
rorl
sub
andl
mov
imul
pop
aas
xlat
sbb
lods
aam
sbb
faddl
addl
xor
popa
lods
sub
xchg
enter
xchg
outsb
mov
xchg
xchg
push
lock
incl
lahf
ljmp
push
aam
mov
mov
sbb
ret
aaa
fisubl
andb
testb
fstpl
xchg
add
fwait
ja
push
aam
inc
inc
rol
stos
cmp
or
xchg
imull
sbb
fistps
mov
cmp
or
ret
and
inc
ss
xor
lret
movsl
mov
cli
sub
inc
adc
cmp
roll
jl
mov
mov
cmp
std
cld
xchg
lret
shrb
shll
scas
mov
add
pop
arpl
sbb
roll
into
sub
cmpsl
loopne
incl
jnp
cmpsl
cmc
mov
xchg
iret
cmp
js
inc
in
into
jnp
scas
or
fcoms
scas
sahf
loope
std
or
call
jecxz
mov
jp
imul
in
es
movsl
mov
mov
in
das
jle
xor
ficoml
dec
arpl
hlt
jmp
jle
inc
cs
xor
test
fnstsw
ljmp
aam
mov
jg
adc
xchg
ljmp
mov
pop
testl
shr
dec
jmp
dec
xor
dec
mov
das
cmpl
mov
in
pop
repz
loopne
add
ljmp
jo
cs
cld
das
out
jno
fdivl
test
jns
push
lock
cmp
repz
cmpsb
dec
nop
pop
mov
sub
jbe
inc
mov
mov
out
jbe
adc
gs
pop
or
add
mov
add
xchg
lods
lret
popf
fstpt
int
enter
cmp
fnstenv
lods
sub
pop
xchg
sub
sub
popf
shll
add
ret
cmp
orl
jmp
aad
mov
or
iret
jae
xchg
xor
xchg
in
xchg
movsl
rcll
leave
mov
xchg
push
rcrb
and
sbbb
and
push
or
jge
out
mov
je
pop
popf
sbb
addr16
or
xchg
cmp
jne
sub
xchg
jmp
icebp
aas
je
adc
fldcw
repnz
mov
pop
lret
je
mov
add
xor
test
inc
enter
icebp
enter
push
lock
shr
or
sbb
cli
inc
inc
lret
cmpsl
mov
push
inc
test
pop
test
aam
negl
aad
jae
mov
or
add
adc
mov
scas
imul
aaa
xlat
outsb
stos
pusha
and
xor
and
jo
mov
cltd
sub
insb
cli
test
dec
jbe
mov
dec
pop
stos
cmp
and
sub
hlt
cmpsl
lret
cmp
popa
call
pop
imul
lods
and
ret
fsubl
pop
fcmovb
inc
inc
mov
cmp
cs
fimuls
lea
mov
imul
and
stc
dec
xchg
sub
mov
cmpsl
cli
adcb
jns
lods
out
lock
mov
adcl
or
pop
sahf
mov
clc
xchg
pop
lds
sti
into
sbb
decl
arpl
and
xchg
xor
ret
xchg
stos
xchg
xor
lret
xchg
ret
popf
jbe
cmp
mov
jbe
xchg
cmpsl
mov
xor
ret
cmc
cmp
dec
cmp
fstl
dec
orl
inc
dec
inc
adc
js
es
call
icebp
and
popaw
test
lock
nop
fwait
leave
mov
dec
mov
xchg
inc
cmpsl
movsb
movl
sbb
sub
jmp
ss
ficoms
dec
mov
fstl
cld
cwtl
sarb
xchg
daa
jmp
dec
cwtl
movsb
dec
ja
arpl
add
mov
test
call
xchg
jns
test
inc
into
cli
dec
add
lret
adc
adc
jg
lret
jp
mov
ss
sub
dec
std
cmp
adc
aas
pop
mov
pop
sub
out
and
mov
xor
test
sti
jl
adc
dec
and
adc
fmull
xor
or
jnp
movsl
fbld
or
loopne
pushf
rcrb
sbb
mov
aaa
data16
jno
rolb
pop
jae
loop,pt
ret
fiaddl
pusha
mov
and
daa
sbb
mov
or
test
jmp
xor
fs
jno
lods
add
out
bound
xchg
fisubl
cmp
push
inc
rclb
sbb
mov
cmpsb
push
out
dec
xchg
xor
loopne
mov
xchg
inc
lcall
dec
xor
xchg
fbld
in
sbb
push
adc
fidivrs
dec
cmp
push
xor
cld
pop
outsl
mov
sub
movsb
enter
dec
mov
stos
adc
inc
pop
pop
jge
sub
mov
enter
bound
lcall
xchg
insl
in
xchg
out
test
in
loopne
xchg
out
in
imul
dec
inc
enter
enter
in
mov
inc
and
test
fimuls
shrl
sub
dec
shl
xchg
jbe
pop
xchg
fisttps
jno
or
jecxz
xor
jle
data16
pop
mov
in
or
add
xorb
lods
pop
push
stos
imul
lock
dec
push
insl
xor
push
nop
xchg
lods
or
outsl
adc
iret
sbb
ficoms
mov
packssdw
mov
jae
push
enter
pop
mov
jp
adc
stos
test
pop
sbb
popa
xchg
adc
out
xchg
and
fwait
xchg
xchg
mov
dec
cli
pop
stos
cmpb
sti
shll
mov
jl
mov
add
cmpsb
enter
in
test
xor
int
int
sarl
ljmp
roll
ja
out
cs
push
lcall
add
mov
sbb
mov
cmpsl
lea
and
mov
push
mov
mov
xchg
fs
and
xor
addr16
into
out
or
push
std
mov
mov
daa
dec
mov
mov
fdivrs
sub
out
push
inc
push
xor
lahf
inc
test
movsl
push
and
inc
mov
mov
stos
pop
pop
fstpt
enter
jg
imul
cmp
jp
cli
leave
imul
jbe
mov
dec
inc
scas
jo
add
or
sub
xchg
mov
sbb
fidivl
test
mov
aas
mov
clc
stos
jmp
lret
dec
mov
xchg
cmc
data16
sahf
loop
add
sbb
cmp
pop
cwtl
stos
into
adc
adc
and
lds
pop
repnz
jbe
fistpl
insb
inc
dec
cmp
mov
add
add
mov
hlt
pop
or
lcall
fmulp
jmp
fnstcw
dec
fcoms
gs
inc
xchg
add
scas
in
cmc
arpl
and
pop
lock
cli
mov
inc
and
aad
in
filds
lcall
mov
aas
stos
mov
pusha
adc
fstpt
jne
das
fsubrl
sarl
pop
in
sbbb
shr
jecxz
push
cmp
mov
dec
insb
lock
dec
shll
outsl
std
or
inc
loopne
ss
xor
in
xor
leave
or
leave
inc
dec
clc
jno
scas
andl
data16
popf
jmp
cmc
mov
cmp
jge
cwtl
pop
call
outsl
fwait
testl
mov
mov
stos
or
test
das
jno
pop
jge
ljmp
jl
popf
sbb
mov
xchg
lea
daa
lret
and
mov
dec
int3
xor
sbb
adc
ficompl
mov
insb
test
je
mov
cmp
pop
mov
test
xlat
lahf
enter
test
andl
add
cwtl
out
adc
mov
xor
pusha
ficoml
fstl
inc
xchg
or
jns
cmp
nop
addr16
jns
sbb
lea
aas
cli
mov
test
nop
and
cltd
push
pushf
push
mov
adc
out
das
xorb
imul
fadd
ret
inc
into
xchg
hlt
cmpsl
xlat
call
dec
inc
lea
dec
hlt
push
in
push
lret
mov
inc
repz
lret
or
xchg
test
mov
cmp
sbb
nop
mov
movsl
movsb
inc
jno
je
pushf
adc
xor
adc
xchg
dec
pop
pop
imul
jb
adc
pop
imul
push
mov
lcall
and
xorb
cli
pop
and
in
push
loop
mov
or
mov
cmp
sub
mov
cmp
imulb
sbb
addr16
xchg
jg
stos
adc
mov
adc
inc
scas
sahf
lret
test
nop
jecxz
movsb
outsb
pop
lahf
pop
scas
pop
fstps
inc
mov
pop
xlat
add
fisttpll
mov
daa
mov
insl
lds
cmpsl
out
leave
mov
inc
jno
in
je
mov
aas
add
test
and
stos
adc
js
inc
lcall
and
mov
push
enter
rcl
sbb
pop
push
xchg
out
stc
dec
int3
ret
imul
and
das
and
cltd
std
fcom
lods
fmul
and
xchg
mov
sbbb
loope
lret
push
xchg
or
cmpsl
hlt
inc
mov
sbb
mov
jp
aad
dec
fmulp
push
arpl
lock
lods
mov
sub
pop
repnz
mov
jmp
xlat
mov
adc
testl
xchg
dec
scas
test
sbb
sub
cs
in
pop
and
cltd
cmpsb
cmp
dec
test
dec
cmp
jb
fists
imul
dec
cmpsb
aad
jb
out
stos
loop
sub
cmp
sbb
pusha
je
std
es
or
and
pop
insb
jg
push
mov
out
jp
fmull
scas
mov
pop
add
daa
cld
dec
push
xor
push
and
sub
mov
xor
xor
mov
stc
flds
pop
fbstp
lock
loope
and
gs
cli
xlat
xchg
in
cmp
xchg
push
adc
dec
stos
mov
cmp
push
into
dec
pop
push
sub
movsl
xchg
mov
mov
lcall
je
and
lods
mov
mov
addr16
cmp
test
jb
repz
mov
out
jecxz
jae
sahf
test
lds
add
mov
into
popf
mov
xchg
cwtl
jge
cmp
and
rorb
xchg
jecxz
jmp
pusha
add
mov
cs
xchg
inc
cli
enter
out
mov
inc
gs
sbb
nop
negb
ss
mov
add
push
shufps
iret
or
enter
and
cli
inc
jmp
jns
clc
inc
bound
repnz
loopne
mov
sahf
icebp
int
decl
cwtl
mov
mov
clc
dec
jle
int
push
push
xchg
std
mov
in
add
pop
cmc
mov
push
xlat
enter
push
jge
into
mov
cmpsl
cltd
repnz
adc
rorl
xchg
mov
inc
out
sub
pop
aaa
cmp
ljmp
orb
aam
cld
ja
insl
call
loopne
xchg
and
imul
and
xor
scas
into
je
push
dec
stos
loopne
je
or
pop
inc
push
adcb
hlt
das
jg
inc
push
push
jmp
in
push
xor
mov
mov
adc
add
or
dec
pop
or
mov
jne
das
and
mov
iret
ja
movq
dec
cmp
mov
fwait
es
loope
xchg
xor
das
jmp
pushl
sbb
inc
lods
ss
mov
jle
out
popf
cld
push
adc
sub
dec
jmp
rolb
mov
mov
mov
cmpsb
fdiv
dec
dec
inc
mov
pop
cmp
test
fisubrs
mov
fldt
adc
xchg
sbb
dec
and
sbb
push
or
sub
or
jg
lods
ja
jnp
rorl
lahf
cmp
cli
adc
or
mov
dec
or
mov
ret
in
movsb
fcoml
cld
and
xchg
inc
sub
sub
pop
fs
sub
sub
rorl
aad
sbb
mov
mov
jne
sbb
bnd
pop
adc
add
cmp
inc
ret
arpl
push
dec
and
lock
add
inc
adc
lods
mov
jle
and
scas
fnstenv
xor
mov
push
dec
je
inc
and
enter
xchg
mov
xchg
mov
sub
int3
cs
push
push
mov
je
lods
sti
sub
push
pop
hlt
pop
fdivl
cmpsb
sbb
popa
inc
pop
pop
sarb
leave
dec
cmp
lret
addr16
popa
cld
sti
add
imul
or
or
add
cmc
add
in
jne
popa
jmp
inc
rorb
in
dec
fcompl
push
fdivs
pop
dec
and
sbb
sti
sbb
shlb
xor
shrb
jb
mov
cmp
push
inc
push
into
dec
and
sbb
inc
jl
and
cmpl
xchg
adc
call
dec
pop
and
cmc
xchg
xchg
jg
jecxz
int3
inc
dec
loop
cld
dec
notb
xor
mov
cltd
lcall
addr16
daa
cmc
inc
lods
icebp
mov
ror
ds
aaa
test
fnstcw
mov
push
xchg
ljmp
lock
test
popa
ja
or
cmp
dec
iret
fiadds
jne
sub
mov
popf
add
push
ja
inc
add
jl
adc
fldcw
mov
call
mov
jns
ja
fldenv
shll
xor
call
dec
addb
sbb
aad
add
or
data16
ret
popf
iret
out
xor
hlt
sahf
popf
cmpsb
pusha
xchg
dec
and
aaa
jae
xchg
jnp
lahf
add
add
dec
rcll
cld
xor
iret
fidivl
jp
adc
or
pop
movb
dec
int3
test
pop
dec
loope
out
pop
cli
or
pcmpgtd
aam
cmpsl
inc
pop
imull
fdivrl
mov
sahf
mov
push
ljmp
ret
incl
mov
arpl
nop
loopne
push
cmc
push
ds
mov
and
sti
movsb
jge
push
adc
repnz
cmc
jb
mov
xchg
mov
ljmp
pop
pop
or
adc
nop
roll
scas
inc
mov
inc
dec
mov
inc
neg
dec
push
call
lret
clc
fucomp
ljmp
in
or
out
jecxz
shlb
cmp
xorl
pop
cmpsb
daa
push
mov
fimuls
mov
mov
ret
xor
or
xchg
popa
jb
lds
cmp
mov
in
cmpb
aaa
dec
xchg
je
jmp
jmp
loopne
js
mov
loope
cltd
fs
rorl
jle
mull
mov
dec
mov
ds
cmp
scas
lds
repz
xchg
das
mov
jb
dec
xchg
rcrb
xorl
xor
sti
jns
leave
ss
lea
outsb
loop
push
js
add
sbb
jmp
ficomps
push
hlt
cmp
or
and
inc
jg
loop
inc
ss
dec
jne
fisubrl
xchg
pop
repz
repz
pop
push
repz
rcll
in
and
out
sahf
jb
test
scas
cwtl
lret
lret
or
and
xchg
jle
je
jp
and
lods
rorb
call
pop
cwtl
inc
pop
out
ss
orb
inc
lods
loope
std
imul
adc
add
mov
popf
pop
add
dec
pop
clc
mov
lret
mov
push
sub
sahf
dec
int
clc
lret
and
dec
lods
mov
rorb
mov
or
andl
inc
outsb
daa
mov
push
int
mov
dec
inc
and
out
cltd
scas
inc
xchg
pop
je
and
mov
iret
addr16
iret
out
and
cmp
adc
xchg
push
sbb
dec
testb
outsb
xor
out
xchg
ret
test
arpl
adc
push
mov
fdivrs
adc
mov
xor
scas
sti
into
dec
pop
rcl
in
xor
add
mov
imul
mov
add
movsb
adc
out
clc
inc
jl
jle
int
lea
add
push
inc
pop
test
jecxz
xchg
lods
scas
jge
push
pop
mov
fcmovnu
imul
movb
mov
mov
lds
shlb
ss
mov
cmpb
test
sbb
mov
inc
add
xchg
testl
jmp
js
and
or
fiaddl
cltd
decb
mov
dec
ss
xchg
test
inc
int
lret
push
jmp
lret
jmp
outsb
jl
sbb
pop
into
or
inc
pop
push
and
pop
and
gs
fldl
adcb
mov
aaa
dec
fists
imul
das
xor
fidivrl
shl
pop
sub
movsl
or
dec
xor
out
xchg
cmp
adc
test
aaa
gs
sub
sub
mov
arpl
daa
fmulp
mov
adc
sbb
inc
int3
mov
jb
sahf
movsb
loope
dec
mov
int
rcrb
out
and
ljmp
jae
push
ss
in
push
out
push
xor
push
cltd
jl,pt
in
and
dec
ja
xor
in
je
insl
jb
test
leave
pop
in
out
jne
lret
jg
adc
adc
fdivrp
cmp
inc
pop
xor
sub
hlt
pop
jnp
aad
out
es
sbb
imul
loope
xchg
idiv
sub
adc
pushf
stos
push
add
mov
cmp
mov
sub
mov
fimull
xor
repz
fcmovnbe
xchg
out
ljmp
cmc
add
add
stos
jecxz
scas
push
loop
repz
enter
out
jecxz
aaa
push
mov
jle
add
sbb
inc
in
dec
cld
sub
ret
sarl
out
mov
bound
popf
test
lret
mulb
mov
xchg
nop
das
lret
mov
xchg
push
mov
mov
push
js
in
mov
jb
adcl
xor
rclb
mov
sub
add
cltd
adc
rcr
popa
mov
sti
add
fwait
add
cmp
mov
inc
int3
xchg
mov
xchg
cmp
movsl
add
fisubl
inc
inc
mov
sti
lea
dec
mov
cmc
sarb
add
cmpsb
xor
andl
hlt
in
repnz
es
inc
adc
pushf
data16
mov
loopne
mov
sbb
adc
cli
add
sbb
mov
push
push
dec
lea
cmpsb
test
or
repnz
fs
fs
jecxz
cltd
rcrl
xchg
push
xchg
movsb
sbb
icebp
call
iret
jge
shlb
pop
lods
adc
mov
mov
dec
stos
dec
imul
mov
fadd
das
jl
das
mov
pop
out
push
pusha
mov
movsb
jge
or
pop
mov
sub
mov
test
inc
rcrb
je
int3
pop
jns
push
test
daa
and
shlb
fsub
lea
mov
pop
sbb
cmc
adc
insb
add
in
push
out
mov
sbb
xchg
pop
nop
mov
jle
adc
cmpsb
js
ror
popa
addr16
add
cmp
rcrl
loope
mov
and
sbb
dec
mov
cmp
lock
in
sbb
in
push
inc
loope
ja
idivb
mov
xlat
cwtl
mov
mov
loop
push
mov
mov
fstps
add
push
pop
cli
jo
bound
fistpl
outsb
dec
lea
jo
je
les
sahf
ds
cli
int3
adc
data16
mov
bnd
sub
add
mov
mov
inc
jns
cmc
in
pop
add
aad
in
mov
pop
test
push
xchg
in
pop
dec
mov
das
mov
sub
sbb
jae
dec
cmpsl
inc
repz
jne
pop
mov
xchg
mov
jmp
lds
cmc
fmul
cmp
shll
or
push
xchg
xor
mov
pop
cmp
dec
lcall
cmp
mov
outsb
jmp
xchg
or
push
lar
sbb
mov
sub
adc
pop
in
loop
adc
mov
aam
jbe
cwtl
lods
push
rcr
dec
jg
jle
sub
pop
repnz
pop
fmull
jne
rol
pop
jle
jno
lock
out
xor
mov
inc
imulb
sbb
jbe
push
insl
flds
dec
dec
xor
scas
in
adc
jo
xor
cld
imul
lock
in
adc
fdivrl
adc
or
out
aaa
inc
push
gs
int
push
add
adc
inc
xor
mov
pusha
movsb
add
fcompl
cltd
xor
add
jae
dec
pushf
mov
push
stc
adc
jae
loop
lods
jae
lcall
andb
gs
cmpsl
imul
adc
lss
int
push
arpl
mov
daa
jl
mov
out
and
mov
sub
push
push
movsb
xor
cs
cmp
imul
or
xchg
pop
lods
les
cmpsb
jnp
das
inc
pusha
jne
and
or
pop
push
xlat
mov
sub
ficoml
pop
out
mov
mov
mov
fstpt
sahf
imul
popf
xchg
mov
ror
mov
xor
negb
lock
or
les
bound
mov
outsb
sbb
cld
xchg
inc
xor
int3
and
aas
fsubs
mov
adc
add
inc
adc
add
xchg
sub
lock
lods
push
imul
ljmp
loopne
and
sbb
push
pop
adc
dec
sub
mov
push
dec
lea
pop
push
mov
push
inc
lea
xchg
jecxz
pop
jo
xor
repz
lret
int3
jl
sub
cwtl
shll
sbb
gs
dec
movb
xor
loop
sbb
adc
jp
ftst
push
mov
jo
ret
imul
push
mov
mov
inc
aad
scas
mov
in
dec
lods
xchg
mov
cmp
push
add
mov
jb
xlat
inc
xchg
sub
pop
aaa
rcll
mov
repnz
mov
ljmp
es
pop
sahf
push
stos
xchg
jae
mov
insb
xorl
push
add
mov
movsl
inc
jle
jns
daa
pop
das
nop
mov
call
in
mov
cltd
adc
repz
mov
push
notb
fldl
imul
js
mov
or
or
cmp
push
mov
push
ds
repnz
pop
jg
aas
dec
push
mov
cmp
xchg
lahf
mov
mov
jo
repz
jne
jmp
adc
out
dec
fsubl
inc
sub
mov
mov
dec
xchg
sub
lahf
out
xor
aam
test
xchg
ret
ficomps
add
pop
push
xlat
inc
dec
xchg
outsb
and
add
add
xchg
pop
or
mov
jb
les
pop
test
into
enter
cmp
pusha
mov
pop
sbb
jnp
out
inc
filds
inc
inc
jge
std
out
outsl
jne
jl
push
lcall
nop
loop
adc
inc
sbb
adc
cmpsb
ja
cmp
xchg
fcoms
insl
mov
jecxz
ss
mov
popa
dec
mov
mov
fwait
imul
add
mov
push
ret
jge
call
dec
pop
inc
enter
push
mov
fisubrs
push
std
push
enter
dec
sbb
jno
cmc
ja
add
sub
xor
and
les
test
jg
pop
add
addr16
xchg
pop
test
enter
lea
mov
stc
push
mov
cmp
out
pop
pop
xchg
rcll
sub
adc
ljmp
sub
cmpsb
xchg
je
xor
inc
inc
and
movsl
pop
lock
jb
idiv
ljmp
cmp
fistl
jb
fldl
jle
loopne
stos
xor
push
in
shrl
int3
jge
push
xlat
cmovo
movsl
repnz
push
sub
lret
pop
ljmp
jmp
filds
les
arpl
pop
daa
cmp
enter
outsl
inc
xor
jg
test
enter
inc
lods
cmp
pop
inc
dec
mov
push
repz
iret
hlt
mov
enter
sub
das
or
push
pushf
into
in
jo
add
in
mov
cltd
fldenv
fisubs
mov
aad
ret
mov
leave
inc
add
and
sbb
xlat
imul
sbb
mov
aaa
xor
push
inc
cmp
lds
mov
icebp
bound
rolb
mov
enter
xchg
test
or
jb
jo
loope
cmp
sub
jl
and
loope
adc
and
out
sbb
lea
int
stos
int3
test
pop
pop
inc
int3
cmp
mov
mov
stos
popf
push
sarl
dec
mov
pop
mov
js
mov
adc
fcomi
mov
cmpsb
aam
lods
fidivrl
adc
xchg
stc
xchg
ja
movsb
push
push
xchg
pop
add
repnz
push
or
push
mov
xchg
out
dec
dec
into
xor
mov
pop
xor
mov
or
adc
mov
daa
mov
xchg
aas
arpl
lret
aad
mov
sub
int
mov
xchg
push
jl
sbb
loopne
fnstcw
xchg
int
push
testb
mov
testb
aas
inc
mov
in
jb
sbb
jb
jne
popf
pop
inc
sbbl
sbb
inc
xchg
out
pop
call
jno
iret
frstor
std
push
push
pop
cmp
and
enter
inc
fstpl
rcll
sbb
cmp
repz
icebp
call
test
shrb
add
xor
sahf
pop
daa
jmp
cltd
or
push
push
cmp
mov
bound
vunpckhps
xchg
xchg
es
repnz
int
repz
mov
mov
lret
hlt
dec
sub
mov
add
lock
mov
imul
inc
je
push
push
mov
cltd
xor
sub
notb
std
mov
push
dec
call
mov
das
or
scas
jmp
sub
sub
jnp
pop
lret
add
ret
or
int
cmp
pop
fwait
repz
xchg
xchg
mov
add
pop
arpl
popf
data16
out
mov
iret
inc
inc
or
imul
jmp
fimuls
arpl
mov
cltd
fprem1
data16
inc
mov
push
jecxz
scas
jle
pop
lods
jno
rorb
insb
inc
mov
test
cmp
push
and
mov
in
pop
enter
jge
add
test
jb
arpl
dec
mov
shlb
pop
xor
mov
test
jne
andb
cmp
and
xor
cltd
sub
xchg
imul
filds
inc
sbb
lahf
dec
xchg
popf
imul
aam
fwait
shl
inc
adc
out
gs
imul
push
pop
leave
sarl
cld
push
mull
lret
add
and
add
pop
pop
jmp
inc
aam
mov
std
adc
mov
repz
mov
movsb
and
out
lahf
xor
push
cmc
stos
pop
adc
jbe
sahf
mov
sahf
fbstp
sub
xchg
cltd
dec
jecxz
shlb
and
or
test
shl
aaa
cmp
mov
in
stos
movl
inc
lcall
mov
push
in
and
xchg
xor
scas
dec
cltd
addr16
add
ja
pmaddwd
das
out
cld
insl
loopne
jl
or
shrb
loopne
cli
mov
lds
sbb
addl
sbb
icebp
stos
pop
test
flds
sbb
mov
lods
mov
das
icebp
fwait
inc
pop
xchg
xor
popf
fcompl
pop
mov
das
dec
mov
inc
xchg
int3
xor
shrl
aaa
lods
push
test
mov
xchg
cmp
arpl
lahf
movsl
push
push
test
pop
mov
push
mov
idivl
roll
add
and
and
push
decl
aad
dec
repnz
lock
xor
je
es
fcoms
fnstsw
ljmp
sbb
jg
adc
lret
inc
out
ret
int3
fs
sub
or
and
pop
pop
pop
inc
sub
movsb
dec
sub
popf
push
mov
fucomp
push
lret
addr16
xchg
jge
mov
int
sub
xor
mov
enter
es
dec
jge
fldl
hlt
mov
sbb
std
outsl
pop
pop
jle
mov
stos
add
scas
shlb
std
xchg
inc
push
pop
in
or
xor
jle
lods
repnz
push
int
ficoms
jg
mov
or
inc
shll
idiv
cmp
loopne
adc
enter
test
pop
dec
int3
fidivl
fmull
shlb
popf
jns
mov
mov
cmp
cmp
ja
popf
inc
enter
cld
mov
cmp
jg
sbb
out
cwtl
rolw
adcb
cs
mov
bound
and
iret
xor
aas
sbb
xor
imul
and
xchg
mov
jge
or
sub
mov
push
cmp
or
inc
jae
mov
push
adc
sub
pushf
inc
and
fnsave
xchg
ret
dec
sbb
xchg
loop
inc
dec
xor
lret
mov
iret
mov
movsl
cs
leave
lea
loope
ja,pt
pushl
addr16
mov
shrb
xchg
inc
ret
leave
popf
xlat
jp
push
iret
mov
frstor
ss
pop
insb
inc
movl
loopne
xlat
test
jno
aaa
repz
lods
sbb
imul
jl
dec
jae
inc
mov
outsb
cltd
bound
lret
jo
push
mov
movsb
or
dec
movsb
inc
xchg
adc
cld
cwtl
sbb
out
js
imul
push
clc
push
pusha
pop
nop
or
mov
jecxz
inc
ja
adc
jle
jb
aam
inc
aam
sub
cmpsl
xchg
or
or
stc
mov
jns
adc
sub
adc
pop
in
ret
cmp
dec
jns
icebp
ret
push
outsl
xchg
xchg
mov
clc
sub
mov
clc
xor
xchg
stc
jg
fcmovnu
xor
cmp
popa
sbb
dec
cli
shll
scas
mov
leave
sub
fstl
pusha
cltd
cltd
ss
int
std
push
bound
repz
mov
sbb
xor
iret
jno
xchg
mov
sti
lret
sahf
and
pop
idivb
push
pushf
ss
daa
outsl
cmp
jl
fs
and
jp
and
and
jae
imulb
xor
mov
add
cld
mov
jp
out
push
xlat
sbb
mov
cmp
and
mov
add
outsl
jp
in
or
mov
pop
popf
mov
out
mov
cs
cmp
and
mov
mov
jns
sbb
gs
imul
xchg
bound
pop
xor
iret
cld
pop
int3
push
dec
mov
add
mov
stos
in
test
cli
mov
fwait
cmp
dec
dec
push
xor
arpl
add
gs
cltd
popa
sub
mov
imull
mov
xchg
mov
xor
out
pushf
sbb
pop
fiadds
in
sub
out
aas
xchg
inc
sub
ljmp
jnp
push
inc
dec
daa
testb
ss
sub
es
mov
cwtl
jge
inc
adc
push
push
jo
mov
movsl
sahf
movsb
fldcw
incl
inc
mov
fs
pop
and
cltd
lret
push
fs
test
repz
fistl
pop
cs
popa
mov
or
outsb
xchg
in
jo
es
jno
pushf
addr16
jbe
movsl
ds
push
push
hlt
mov
dec
test
aam
adc
ret
sub
adc
bound
iret
cmp
add
out
cmpsl
and
jno
bound
pop
sub
rol
and
cmpsl
xor
push
push
pop
push
js
pop
into
fistps
ret
add
sub
inc
lock
adc
ljmp
sbb
mov
jmp
mov
pop
cmp
leave
repz
pop
cmp
adc
or
lahf
cmpps
fisubrs
and
xor
and
stos
out
mov
mov
int
out
movsl
push
push
sub
xchg
cmp
push
mov
hlt
sbb
xchg
ja
pop
or
pop
mov
dec
sub
jnp
sbb
sub
jecxz
iret
lea
mov
mov
jg
cmpsl
mov
push
mov
aaa
cmp
cmp
cs
call
stc
add
jmp
movsb
cmp
test
setns
pop
cmp
ds
imul
add
jnp
cmp
aaa
aam
test
in
xchg
sub
cmp
clc
int
out
insb
jg
mov
dec
mov
aad
lea
mov
push
aam
sarb
insl
mov
repnz
and
xor
mov
fsubrs
cld
cltd
dec
mov
xchg
mov
pop
or
push
pop
cmp
stos
fiadds
dec
movsb
pop
jne
mov
jne
mov
shrb
rorb
cmp
fstl
cwtl
inc
cmp
mov
and
sub
dec
scas
movsb
icebp
cmp
jbe
lds
push
lds
mov
cltd
mov
imul
ret
dec
add
and
pop
in
mov
cmp
xchg
jmp
dec
xchg
xorb
xor
pop
roll
sub
sbb
loope
fcompl
mov
insl
sub
mov
fsubrl
leave
aad
div
or
mov
mov
enter
adc
dec
xchg
jle
cmp
dec
sahf
movsl
dec
dec
mov
jg
inc
lret
lock
and
mov
push
test
sub
stc
or
pop
pop
inc
mov
shll
jge
push
icebp
or
stc
pop
adc
sbb
push
sub
adc
fwait
or
sahf
lock
in
nop
loop
nop
or
call
pop
xchg
test
cmp
in
and
sub
push
dec
xor
pushw
loopne
or
aad
lds
adc
shrb
cld
test
pop
mov
bound
and
rolb
mov
mov
inc
jae
insl
or
jo
push
shll
andb
mov
sub
ss
inc
jle
mov
or
shll
mov
push
and
in
int
dec
push
mov
sub
jg
repz
push
jne
or
cs
cs
xchg
inc
pop
push
mov
push
inc
shr
mov
inc
lcall
arpl
movsb
and
in
add
jae
jl
push
pop
cli
int3
dec
add
aaa
nop
nop
sub
push
mov
push
fsts
or
mov
adc
imul
mov
mov
mov
clc
stc
cmp
mov
sbb
ret
pop
xchg
jp
cmp
adc
add
loop
sbb
movsb
inc
ljmp
lret
clc
movsb
mov
je
sarl
stc
arpl
mov
push
subl
cld
inc
mov
gs
lahf
cmp
jnp
lea
push
sbb
loop
stos
jl
sub
in
mov
cmp
pcmpgtw
dec
cmpsb
or
inc
es
add
jns
or
pop
inc
scas
dec
lret
les
cmp
ss
xchg
je
pop
aas
and
cmp
js
test
mov
leave
sbb
or
cmpsl
addr16
imul
gs
or
jb
add
negb
scas
int3
push
ret
in
jo
add
fs
add
push
mov
ljmp
jns
testb
and
out
and
cld
xchg
cmpl
add
aas
push
pop
ds
mov
insl
paddw
fisubl
fnsave
ret
jb
repz
ret
ljmp
or
stos
mov
xor
ja
add
movsl
in
or
inc
lret
inc
nop
jae
mov
mov
cmp
cmp
mov
fcomps
pop
or
add
loope
ficomps
pusha
in
pusha
ja
add
adc
leave
sbb
sub
rorl
adc
mov
inc
out
sbb
cmp
xlat
pop
xlat
sub
out
mov
notb
mov
push
popf
add
add
xchg
loope
mov
movsl
movsl
pmovmskb
xchg
sbb
inc
lock
jb
jl
push
mov
pop
addr16
daa
xchg
jb
push
dec
cmp
clc
shl
fs
push
push
cs
pop
aas
jae
test
mov
loopne
aas
dec
mov
aas
mov
xchg
dec
mov
dec
mov
push
xchg
dec
aad
ficomps
sbb
inc
sahf
popa
addb
pop
mov
sarl
adc
mov
ficompl
adc
fwait
loope
arpl
lahf
push
mov
daa
sbb
or
xor
gs
movsl
pusha
push
cmpsb
insb
scas
jge
or
fcmovnb
insb
shl
mov
jmp
filds
jae
add
sbb
adc
loope
inc
hlt
xchg
cmp
push
jno
sub
cmp
push
dec
lds
inc
daa
paddsb
andb
std
cli
fidivrl
repz
lret
mov
lods
rorl
xchg
inc
hlt
syscall
test
aaa
fsub
cld
jb
mov
leave
shl
repnz
mov
sahf
push
xchg
iret
cwtl
aam
outsl
imul
pop
push
outsb
jno
cmpsb
and
pop
divb
negl
jg
jo
sti
out
test
sar
push
lret
cmp
insb
pop
js
add
cmp
outsl
push
push
sub
adc
lods
popa
call
jo
and
pop
jl
rcl
pop
push
movsb
mov
sub
cld
adc
jns
pop
sbb
push
dec
jg
xchg
fisttps
sub
cmpsb
int
or
mov
cmp
jne
inc
jg
aaa
push
xor
inc
xor
lahf
pop
clc
jmp
adc
pop
mov
mov
lret
sbb
divl
insb
jl
push
std
jge
xor
dec
push
test
arpl
js
loope
stc
ja,pt
dec
mov
repnz
add
fisttpll
cwtl
and
and
mov
sbb
arpl
pop
push
frstor
insl
lods
push
mov
dec
xchg
sub
repnz
mov
decl
iret
lcall
lcall
or
mov
inc
sub
ss
xor
lods
add
sbb
lods
xchg
jg
das
addl
outsb
push
cltd
pop
imul
int
and
mov
sub
stc
mov
cmc
arpl
mov
push
push
lods
out
adc
daa
sub
cmp
or
add
pop
ljmpw
jg
and
aad
inc
movsl
xchg
sub
mov
cmp
cmp
inc
xlat
loope
push
push
fmull
jne
mov
xchg
gs
rorb
fmuls
out
test
test
mov
and
push
pop
sbb
aam
aaa
mov
mov
retw
cmc
scas
stos
mov
bound
lods
adc
push
inc
pop
sbb
int
ja
mov
inc
sub
mov
sub
data16
lret
dec
adc
test
int
int
push
xchg
sbb
popa
dec
call
out
mov
add
inc
mov
xor
dec
mov
daa
or
cli
out
sahf
mov
mov
inc
sbb
pop
xchg
push
mov
sahf
jg
mov
adc
int3
push
mov
fcompl
std
xorl
jne
addr16
mov
adc
test
fldenv
jg
data16
int
inc
pop
in
pop
ljmp
jae
sbb
mov
int3
popl
rorb
dec
xchg
ja
xor
inc
sub
xchg
mov
adc
insb
jg
lock
mov
push
inc
orb
jmp
ret
mov
stos
popa
movsb
int
nop
and
sbbl
test
scas
in
shr
test
in
pop
mov
sub
aam
pop
jb
aad
stos
sbb
ficoms
scas
push
addr16
fsub
in
or
outsb
inc
push
cmpsb
xchg
stc
popf
nop
mov
test
xor
cltd
imul
cmp
xchg
push
sti
xorl
jno
mov
repnz
outsb
pop
cld
inc
dec
call
jp
scas
jns
add
addr16
pop
jge
fs
cmpsl
ds
or
clc
fcomip
push
icebp
pushf
jae
add
outsl
imull
xchg
push
ficomps
sub
sbb
pop
sbb
pop
imul
sub
rolb
add
test
jmp
test
pusha
dec
mov
cs
jbe
xor
push
lock
add
cmp
xchg
aam
dec
sbb
adc
adc
mov
mov
imul
mov
adc
cmc
jns
sbb
xchg
cmp
popa
arpl
cmpsl
add
push
roll
mov
xor
pop
cs
cmpsb
xor
sub
nop
jne
stos
outsl
pop
sub
push
sub
cld
daa
pushf
jge
mov
xchg
hlt
cmpsb
mov
mov
lahf
dec
lock
xor
xlat
aam
inc
dec
push
xadd
push
std
xchg
mov
stos
ret
fldl
jne
xchg
shll
sbb
jmp
jne
lahf
lock
stos
int3
pop
xchg
or
repz
mov
or
imul
mov
in
adc
mov
mov
jae
push
popa
mov
sbbb
cltd
inc
pop
stc
lods
scas
jg
xorl
push
mov
out
loop
cmp
inc
sub
inc
pop
add
cmp
jne
xchg
adc
dec
mov
and
stos
insl
adc
jno
cmp
bound
lea
iret
aad
mov
mov
test
mov
ret
sbbb
test
dec
dec
mov
jbe
mov
adc
shll
adc
stc
jg
adc
imul
push
mov
js
les
call
pop
mov
xor
movsl
sahf
jp
mov
mov
cltd
cmc
lret
lea
adc
in
adc
cmp
xchg
mov
lock
cli
ret
fucomp
testl
fcom
cld
outsb
mov
shll
jnp
outsl
lret
pushf
decl
pop
scas
ds
popa
fs
fdivl
add
add
sti
mov
outsb
sbbb
xchg
int3
mov
jb
jecxz
xor
or
out
sahf
in
vmovups
enter
test
ret
addr16
mov
push
cmp
clc
cmp
inc
jne
cmp
dec
nop
pop
dec
nop
jmp
xor
xchg
pop
in
fwait
push
lahf
loopne
pop
insb
jecxz
scas
push
fnstcw
fs
dec
andb
outsb
pop
stc
fwait
add
aaa
dec
xor
aad
das
and
int3
pop
pop
fwait
les
sbb
sub
jmp
es
out
xor
outsb
xchg
or
inc
xor
and
xchg
outsl
das
std
aam
pusha
lea
ljmp
mov
mov
xlat
inc
mov
push
sbb
inc
mov
lods
xchg
orl
aaa
adc
push
pop
fisubrl
mov
nop
rorb
xor
rolb
lret
cmp
repnz
push
into
adc
mov
sbb
add
cmp
inc
mov
out
stc
push
mov
jecxz
mulb
and
movsl
mov
cmp
ljmp
mov
lahf
and
out
mov
in
pusha
jp
and
add
dec
stos
frstor
lds
jmp
pop
adc
adc
mov
inc
imul
orl
aam
test
lods
sahf
clc
lcall
inc
dec
cmpsl
lea
int3
xchg
ja
pop
pushf
shlb
ficompl
jg
divl
das
loope
fbld
test
mov
fsubr
adc
adc
in
push
mov
cmp
in
jno
mov
add
xchg
imulb
int3
lahf
aas
test
push
and
sbb
out
or
sbb
in
push
ljmp
iret
leave
sbb
ljmp
inc
or
cmp
mov
es
cmpsl
bound
sub
std
lea
das
stos
loop
loopne
add
or
or
mov
inc
push
fisubrs
outsb
add
int
mov
and
xchg
adc
jo
out
imull
fildl
or
xchg
jl
adc
mov
scas
popf
jmp
je
xchg
cmp
iret
or
mov
xchg
push
push
sbb
lcall
mov
loop
fisubrs
pop
aas
push
pop
shr
movsb
mov
pop
mov
in
push
pushf
cli
sahf
fcoms
xchg
dec
orl
adcl
sbb
mov
jne
and
mov
leave
repnz
sbb
sbb
gs
push
adcb
xchg
pop
ds
out
pop
adc
out
loop
sbbb
sbb
movsb
inc
cltd
fstl
inc
inc
inc
sub
mov
lret
and
sub
fstpt
adc
daa
mov
inc
lock
mov
mov
outsl
dec
pop
or
cmp
jae
sub
testb
icebp
sbb
or
push
xor
clc
push
jge
out
clc
push
sbb
imul
pusha
and
push
dec
popf
js
push
out
sub
push
call
scas
imul
flds
lret
mov
inc
or
or
inc
adc
mov
imul
push
data16
mov
mov
xor
sbb
sbb
insb
pop
pop
shl
rep
sbb
pop
cltd
mov
mov
push
xchg
and
and
mov
fiaddl
adc
inc
fbstp
repnz
add
mov
aas
test
mov
cmc
iret
imul
pop
outsb
adc
jecxz
jb
lcall
add
xchg
jnp
repnz
ds
push
aas
imul
xor
add
out
sub
bound
movsl
out
jno
pop
imul
fs
mov
and
lret
lea
cmpsl
rcr
imul
cld
xchg
xchg
jne
sub
adc
cli
fdivrl
bound
scas
add
rcr
or
lods
lds
cmp
cmpb
jnp
aad
test
icebp
lcall
clc
push
test
cmp
cmc
cmp
stos
stc
xlat
fdivp
leave
mov
or
lea
push
mov
push
js
stos
jnp
pop
out
sbb
xor
lahf
sarb
aam
std
xor
mov
mov
out
popl
sub
jg
ljmp
xor
mov
mov
adc
out
push
sbb
or
in
loope
in
fstps
push
push
decb
pop
pop
mov
and
loope
xchg
jo
add
pop
pop
lcall
xchg
aad
stos
out
loop
sti
cmp
add
mov
insb
rolb
aas
pop
jnp
inc
sub
mov
jno
sbb
push
aam
push
sub
lcall
gs
aas
fs
repz
sub
lods
push
pop
out
jae
mov
or
or
sbb
cs
jbe
mov
pushf
add
sub
jno
or
dec
lcallw
xchg
dec
rorb
je
adc
or
sbbl
mov
aaa
iret
cltd
push
push
push
shll
shl
dec
mov
dec
les
push
xor
es
sar
add
sub
xor
les
or
mov
fcmove
in
unpckhps
mov
jl
pushf
xor
inc
rcl
je
clc
bound
popa
out
shl
ret
push
les
std
das
xor
jmp
sub
push
pop
icebp
sub
adc
xlat
xor
shl
push
aad
sti
loop
and
out
test
mov
or
push
adc
cmpsb
hlt
stc
out
ds
frstor
push
fdiv
sbb
lret
xor
xchg
cmp
inc
adc
mov
outsl
das
rcrb
subl
fmull
aad
push
xorl
or
jne
fsubrl
adc
shll
cmp
push
add
aaa
jnp
and
cmp
xchg
and
in
xchg
adc
mov
aas
sahf
outsl
pop
xor
xchg
cld
push
sub
add
sub
pop
adc
subl
xchg
idivb
push
pop
aam
add
inc
data16
mov
stc
xchg
addr16
mov
mov
pop
in
or
mov
lods
aaa
mov
xor
icebp
or
xchg
insb
inc
mulb
push
dec
xchg
gs
adc
xchg
dec
jae
jg
sbb
push
jge
stos
mov
or
into
punpckhdq
arpl
rorb
mov
inc
xchg
jne
daa
aad
mov
adc
lahf
popa
outsb
add
cmpsl
lahf
push
sbb
hlt
inc
loop
outsl
mull
scas
push
sub
xchg
daa
scas
cmp
repz
stc
sbb
aas
pop
fs
rep
or
sbb
cld
push
fistl
cmp
adc
shr
add
leave
add
or
fdivs
int
lock
pop
clc
inc
sub
mov
mov
mov
add
or
jns
shr
push
stc
int3
rcr
jg
call
jmp
mov
movsl
xor
fisttpll
lds
es
nop
or
into
adc
data16
mov
fwait
sbb
inc
jge
push
push
xchg
rcll
and
inc
data16
daa
xor
pop
xchg
lret
jge
xor
cli
test
aam
rcll
or
inc
inc
mov
cmc
jb
ret
cmpsl
gs
mov
mov
movsb
loopne
cmp
scas
adc
jns
je
sub
les
es
xchg
enter
mov
mov
dec
ja
stos
inc
lahf
jno
loopne
mov
mulb
aas
xor
mov
mov
push
bound
cmp
test
pusha
push
mov
icebp
idivb
addr16
pop
sub
add
sbb
sub
out
xor
sbb
call
inc
jp
xlat
shrb
in
jb
orb
outsb
pop
sub
test
insl
mov
imul
ret
lock
jl
cltd
and
repz
jp
and
pop
sahf
push
mov
fwait
and
mov
orl
int
sahf
pop
ret
push
ljmp
xor
add
mov
daa
cmpsl
pop
mov
lods
cmpsb
imul
bound
scas
pop
insl
in
decl
push
loope
sbb
xchg
outsl
sbb
jne
repz
adc
jae
cmpsl
rolb
mov
jp
imul
cmpsl
lea
adc
xlat
xchg
jle
les
call
push
dec
xor
into
lock
push
sub
adc
std
or
imull
sbb
sub
out
jg
mov
dec
out
nop
mov
xor
cmp
into
mov
test
cmp
out
loope
mov
lea
imulb
mov
fnstsw
add
int3
push
fdivr
lds
add
cmp
insl
in
pushf
push
xor
dec
push
test
jnp
ja
inc
sub
cmpsl
xchg
subb
mov
scas
repnz
arpl
std
jb
out
mov
shr
shrl
jge
pop
inc
cli
mov
inc
inc
and
or
dec
mov
into
dec
not
lock
jb
inc
add
or
pop
movsl
xchg
inc
xor
in
sub
xlat
rolb
or
pop
aas
push
outsl
ja
shlb
imul
cmpsb
sbb
out
pop
push
addl
adc
out
mov
push
sarb
jnp
adc
out
xchg
pushf
jb
bound
pop
insb
fiaddl
and
daa
scas
mov
inc
adc
lods
iret
xchg
test
jbe
fadd
in
fstps
shl
push
fldcw
xchg
sti
cmovge
test
mov
add
shll
lea
pop
push
pop
rcrl
inc
int3
mov
sbb
adc
adc
push
push
mov
sbb
pusha
loopne
cld
out
cltd
jmp
cmp
mov
xor
in
das
push
cmp
imul
ja
addb
js
inc
pop
pop
subb
arpl
es
add
or
mov
jae
jge
add
xchg
push
pop
dec
sub
push
xchg
mov
test
mov
sub
mov
sub
or
fdivrs
pushf
dec
call
mov
xchg
pop
sub
push
leave
inc
shll
pushl
in
xchg
adc
adc
sub
mov
mov
pop
add
aam
xchg
js
mov
pop
dec
fcmovbe
into
fsubrs
sub
leave
loope
adc
outsb
faddl
jg
push
add
and
cltd
xchg
xor
xchg
addr16
and
add
jo
stc
ror
jae
dec
xor
mov
sahf
mov
sub
test
xchg
xor
imul
aaa
inc
adc
mov
pop
push
lock
pop
popl
and
mov
ljmp
xchg
mul
cmpsl
xchg
fwait
movsb
or
push
in
clc
cmp
push
mov
loopne
cwtl
into
dec
cmc
pop
icebp
movsl
mov
pop
xchg
pop
sub
in
mov
frstor
lods
imul
sub
inc
lods
jbe
insl
stc
fwait
ret
das
and
pop
jl
lret
xchg
cmp
loopne
add
test
js
fldenv
movsb
popf
xor
inc
adc
jbe
out
mov
cmp
mov
cmc
jecxz
and
push
out
repnz
mov
fisubrl
pop
and
cmpl
and
sub
les
cmp
xchg
xchg
adc
mov
addr16
pop
jp
out
scas
leave
int3
mov
inc
aaa
jle
stc
mov
stc
repz
lock
dec
jbe
cmc
out
fmull
mov
movl
pop
jp
and
inc
test
scas
dec
arpl
push
and
or
mov
stc
pop
imul
and
sub
dec
lcall
lret
inc
or
and
lcall
and
mov
or
mov
test
pop
jg
es
inc
push
cld
lock
add
pop
cmp
push
into
xchg
mov
add
push
call
inc
add
lahf
pop
sub
sbb
mov
testl
subl
pop
push
imul
and
push
fs
lea
xchg
adc
cmp
loope
xor
enter
scas
pop
push
cmp
pop
int
iret
in
dec
loope
xor
inc
mov
shl
cmp
lods
fldl
sahf
jmp
nop
xchg
sbb
mov
pop
push
cli
scas
rorl
jb
sahf
adc
daa
jl
cmp
int
lret
leave
mov
test
mov
pusha
adc
adc
push
addr16
pushf
es
int3
sbb
in
adc
adc
xor
ljmp
aam
je
adc
jmp
push
mov
push
lea
mov
jle
outsb
or
pop
fnsave
mov
mov
add
push
add
lcall
or
mov
xchg
imul
test
jg
jge
pop
adc
xchg
inc
movsl
xchg
pop
sahf
lahf
iret
fstp
dec
pop
cwtl
xor
loopne
rcrl
imul
xchg
cmc
sahf
xor
or
movl
ret
cmpsb
jne
mov
and
push
and
cltd
insl
xor
sub
mov
adc
pop
jb
or
bound
in
fnstsw
repnz
xchg
jns
push
sbb
int3
jl
pop
add
mov
mov
inc
push
dec
cmpsl
sbb
sub
mov
mov
ja
hlt
xor
cld
pop
push
mov
loop
and
cwtl
dec
repnz
stc
jbe
out
mov
inc
lret
jb
testb
cmp
outsl
add
dec
scas
dec
mov
and
cmc
sarl
jge
inc
jmp
mov
loope
adc
movsb
cmp
je
jb
mov
or
add
push
lds
pop
mov
fldcw
mov
sbb
outsl
pop
ds
cs
insl
imul
sub
xor
adc
movsb
loopne
cmp
les
push
mov
lds
mov
mov
fwait
pop
push
dec
cli
inc
xchg
mov
iret
les
nop
stc
fld
mov
pop
adc
and
sbb
leave
dec
jne
dec
popa
mov
aas
inc
and
and
mov
mov
fs
mov
sti
clc
cmp
loop
xorl
lcall
add
jne
push
xchg
mov
movlps
lret
arpl
addr16
jne
aad
pop
into
xchg
testl
out
adc
pop
jle
loop
imul
imul
addr16
xor
in
xchg
jae
jnp
stc
inc
imul
sub
inc
adc
push
push
subl
lock
xchg
pushf
pusha
lret
bound
inc
push
int
xlat
jmp
mov
gs
sub
mov
and
push
jp
imul
mov
pushf
mov
adc
sbb
sbb
inc
aad
sahf
stc
sar
test
fidivrs
push
decl
push
mov
pop
xchg
loopne
dec
jnp,pt
jbe
fstps
push
insl
mov
xchg
in
lret
xor
pop
lcall
pop
inc
daa
int
outsl
mov
sarb
and
cmp
pop
lret
mov
lret
mov
or
pop
dec
push
mov
sub
jge
mov
imul
mov
sub
mov
lcall
rcr
les
sub
cs
mov
push
aam
fdivl
mov
cmp
mov
push
sbb
add
repz
das
ja
cwtl
mov
sub
dec
sub
lcall
or
pop
rorb
icebp
loop
and
js
jne
fadds
mov
xchg
out
mov
lcall
lds
mov
clc
icebp
pop
jecxz
add
inc
popf
adc
cld
imul
fsubrs
jae
push
dec
jnp
movb
test
in
mov
enter
mov
imul
inc
and
filds
fcomps
push
push
or
test
push
mov
insb
loopne
add
lahf
jmp
in
mov
push
es
xchg
xchg
mov
fsubrs
insb
mov
fs
jp
test
pop
mov
push
push
mov
data16
stos
xchg
cmpsb
cmp
mov
pop
pop
add
adc
adcb
pop
leave
xor
pop
out
pop
mov
loopne
dec
pop
dec
jecxz
sbb
xchg
sbb
out
daa
jp
push
fimull
sbb
es
fdivs
jp
out
je
add
push
mull
sub
xor
loope
sbb
pop
mov
adc
fcoms
les
cmp
push
adc
add
mov
jbe
sub
xor
inc
int3
pop
cs
out
mov
pop
lock
dec
xor
adc
stos
ret
jecxz
cmpsb
in
mov
andl
xchg
mov
rcll
out
rolb
xor
call
test
jbe
push
test
in
lock
mov
xchg
cmp
cmp
pop
xorb
stc
xchg
jmp
xchg
jge
fs
std
dec
daa
je
pop
jge
mov
adc
aaa
adc
test
pop
adc
sbb
mov
sub
enter
fcoml
int3
aam
les
scas
mov
mov
pop
jo
loopne
aad
outsb
push
pusha
add
in
rcrb
jg
push
jo
jno
insb
mov
mov
mov
jecxz
xchg
cmpb
sub
outsb
fldcw
or
popf
lock
out
andl
pop
loopne
fs
jae
cmp
inc
loopne
loope
pop
sub
scas
jae
loopne
and
lcall
push
rorl
mov
jae
ja
adc
mov
outsl
mov
mov
sbb
rcr
mov
push
fwait
xchg
xchg
movsl
or
imul
roll
test
jb
ret
mov
dec
mov
cmp
pop
jno
pop
fidivs
pop
xlat
rorb
std
daa
pusha
and
mov
jmp
or
fstl
es
cld
loope
inc
push
mov
subl
dec
push
inc
add
sbb
gs
aas
sbb
push
rolb
and
add
add
adcl
or
insl
adc
inc
scas
or
jb
int
inc
lods
lods
inc
icebp
lret
mov
dec
mov
xchg
or
mov
add
push
push
mov
dec
adc
call
cmp
inc
movsb
daa
xor
pop
or
dec
mov
ret
mov
mov
lcall
shl
stos
or
addr16
outsb
pushw
test
jne
nop
cmpsb
mov
push
push
cli
jecxz
xchg
mov
shrl
dec
out
mov
enter
ret
test
dec
aas
adc
push
jne
aam
adc
and
lahf
add
repnz
inc
push
and
loope
pop
ss
adc
sbb
and
or
and
push
mov
aam
incl
sbb
scas
pusha
sub
xchg
mov
divb
mov
pop
popf
cmp
pop
aaa
xchg
cltd
test
push
bound
xchg
or
sbb
mov
lods
cmpsl
mov
out
xchg
in
call
dec
out
call
pop
jp
sahf
test
lret
push
insl
xchg
pop
psubsb
push
lcall
stc
std
call
pop
mov
insl
xlat
dec
pop
or
rcll
dec
adc
push
fchs
stos
sbb
inc
add
js
cmp
inc
xor
jae
mov
sti
push
insb
popf
push
add
mov
add
sub
insb
dec
jl
jo
sbb
sub
adc
dec
cmc
inc
fs
mov
and
pop
inc
cli
pop
jmp
and
push
sub
xchg
mov
lahf
call
xlat
sub
mov
jecxz
pop
mov
xlat
jns
inc
sbb
sub
mov
mov
and
cmp
fsubl
mov
lock
push
loopne
pop
movsb
and
stos
popf
jbe
fwait
jecxz
or
nop
push
je
rcll
movsb
imul
out
add
inc
ret
cmp
add
cmp
mov
nop
notl
mov
xor
jp
cmp
rolb
mov
xor
push
call
dec
or
repnz
jge
decl
ds
pop
pop
fsubr
repz
dec
rcrl
xor
movsl
dec
lcall
cmpsl
xchg
mov
sbb
daa
or
push
addl
test
lock
pusha
inc
test
pop
js
outsl
ja
fisttps
sarl
xchg
lds
shrb
into
push
jbe
cmp
sbb
out
ds
inc
lds
pop
int
jl
sub
bnd
btsl
fcomip
mov
xchg
add
call
cmp
mov
push
ljmp
cs
inc
pop
jb
frstor
ds
or
daa
jbe
inc
xchg
cmp
push
aad
cmc
or
imul
dec
push
lods
or
les
adc
push
mov
out
jl
lret
add
push
idivl
mov
mov
mov
push
leave
data16
mov
mov
cmpsl
out
dec
loope
add
repz
sbb
inc
repz
sar
add
mov
ret
jmp
fstpl
jbe
outsl
and
dec
xlat
or
loope
dec
cmp
add
das
je
xor
mov
xor
sub
pop
vucomisd
std
add
mov
hlt
and
push
jbe
lods
mov
inc
mov
jne
xchg
shl
push
insl
movsb
movb
dec
scas
mov
stc
cmp
ss
sti
push
sarl
sti
sbb
loope
mull
inc
imull
add
push
adc
rorl
mov
or
mov
xchg
pop
in
add
xchg
pop
dec
lcall
jp
out
cmp
xchg
mov
int
jle
ss
inc
and
and
jge
aam
sbb
stos
rcll
jbe
lret
xor
ja
js
dec
loop
push
outsb
sbb
repz
xchg
lock
push
push
imull
jo
pop
scas
cld
jp
bound
pop
imul
call
mov
fcomi
icebp
inc
lret
jmp
ljmp
adc
push
into
jle
mov
push
mov
ret
inc
mov
push
pop
pop
mov
mov
inc
add
mov
cmc
negl
cwtl
insl
cltd
jne
sbb
mov
les
jmp
add
push
clc
add
push
aam
push
mov
es
cwtl
testl
sbb
mov
jbe
inc
push
insb
subl
or
mov
dec
fwait
inc
cmp
jp
push
add
or
sysret
aas
sbbb
jl
sub
sbb
flds
loopne
std
aaa
rcr
out
xor
jno
ja
mov
out
xor
sarl
into
pop
call
push
leave
mov
ljmp
mov
mov
shlb
adc
sbb
sbb
xchg
mov
push
je
mov
iret
aaa
sbb
sub
pusha
std
mov
pusha
jno
push
mov
lds
add
addr16
movsl
mov
cwtl
data16
idivl
repnz
sar
bound
into
xlat
aam
push
cmp
adc
dec
in
popf
mov
out
mov
mov
mov
sub
inc
stc
les
jne
xchg
pusha
jecxz
push
mov
int
mov
or
icebp
cmpsl
mov
sub
push
lods
aam
imul
fisubrs
mov
cld
push
les
pop
jo
cmp
data16
shlb
pusha
push
xor
sbb
out
mov
and
cmc
hlt
jae
scas
insl
pop
fidivl
push
outsb
dec
pusha
add
and
int
jo
cmp
lea
xchg
sub
jg
inc
push
aaa
sbb
fnsave
dec
mov
lock
jecxz
sub
dec
push
divl
into
xlat
add
mulb
data16
int
fisubrl
dec
aad
jb
dec
or
pop
mov
mov
stos
mov
or
push
push
xor
push
out
lds
adc
jp
inc
add
pop
clc
shlb
nop
mov
divb
pushl
inc
pusha
cmpsb
lcall
daa
pusha
repnz
mov
sbb
dec
dec
xor
jle
pusha
mov
fnsave
cmp
insb
icebp
repz
mov
test
xchg
xlat
lret
bound
mov
clc
das
dec
inc
lods
test
or
rcll
stc
cmp
lds
dec
ja
inc
adc
mov
jae
mov
push
xchg
pop
std
jecxz
imul
and
add
iret
xor
out
icebp
or
mov
sahf
push
pusha
int3
shrl
movsl
pop
add
pusha
mov
lret
push
inc
repnz
sub
xor
dec
sub
push
lahf
or
scas
push
pop
xchg
or
mov
jae
mov
push
xor
mov
dec
rcll
xor
inc
rorb
icebp
xlat
xlat
fsub
push
add
shll
lcall
lock
dec
inc
jb
inc
or
test
mov
pushf
xor
xlat
stos
mov
out
pushl
out
adc
pop
dec
fidivrs
inc
ss
or
inc
pop
push
cs
dec
out
pop
insl
or
cmp
outsb
and
insl
pop
lods
push
mov
scas
cmpsb
cltd
adc
aas
in
mov
adc
sbb
in
cmpb
scas
js
sbb
mov
sub
loop
insb
cmp
ret
gs
dec
mov
cmp
loope
je
sub
dec
mov
out
pop
in
inc
adc
inc
fiaddl
add
mov
cld
jp
add
cmp
icebp
pop
testl
sti
cld
incl
xchg
jbe
cltd
sahf
shll
jno
incl
xlat
xor
aaa
sbb
sub
imul
jmp
pusha
or
mov
xor
inc
and
xchg
bound
ret
ljmp
and
test
sub
sbb
jp
sub
sub
movsb
pop
mov
cmpsl
stc
movsl
lret
vpextrw
lds
lret
jbe
pop
ds
pop
push
into
mov
cli
mov
inc
ret
nop
std
adcl
mov
jg
or
or
lret
fisttps
daa
test
insb
pop
jmp
mov
das
mov
pop
pop
cmp
xor
stos
std
loop
mov
mov
sti
rclb
addr16
int
jle
cmp
cltd
stos
push
and
push
call
xchg
xor
mov
and
hlt
sub
outsl
faddl
add
icebp
bound
push
ljmp
or
jno
mov
fisttps
into
sbb
insb
test
test
cmp
clc
lret
xchg
xor
insb
and
pop
ss
arpl
push
mov
and
add
outsb
pop
xchg
std
scas
dec
xor
js
enter
call
fs
shlb
mov
ret
dec
mov
mov
sbb
fucomp
inc
loop
add
jb
fs
cltd
test
test
sub
fdivl
push
fwait
jmp
jmp
cwtl
movsl
jns
dec
xchg
jg
repz
push
insl
je
inc
test
cbtw
ljmp
jne
loopne
loope
fwait
das
xchg
loope
xchg
mov
test
mov
arpl
insb
addr16
xlat
imulb
nop
repnz
adc
sub
fucom
xchg
pshufw
inc
into
mov
fsubs
pop
jecxz
xchg
ret
fcmovne
xchg
dec
aas
loop
jmp
and
xchg
shrl
cmp
pusha
das
jl
test
or
cmpsl
xchg
pop
xchg
cwtl
mov
and
sbb
lahf
jmp
or
jne
jnp
fisubrl
jno
cwtl
xchg
pop
or
jmp
cmpsb
xor
and
pop
xchg
pop
std
dec
icebp
insl
xchg
xchg
mov
in
jne
leave
pop
push
and
lcall
movsb
jl
mov
lret
xchg
or
xlat
or
dec
test
pop
jno
or
icebp
test
jno
negb
or
dec
sbb
call
push
out
jecxz
add
lock
shrl
bound
mov
xorb
dec
mov
sub
popf
sub
jle
mov
andl
out
pop
iret
jo
lahf
dec
and
inc
or
fs
out
cltd
shrb
pop
cmp
iret
xor
push
andb
push
rcr
lea
test
push
popa
hlt
adc
push
fisubrs
adc
mov
fs
sahf
cmpsb
test
cs
mov
xlat
lahf
jnp
es
pop
insb
push
xchg
sbb
mov
xchg
mov
cmp
fmull
mov
inc
push
jp
popf
push
and
mov
stc
push
loopne
or
popa
sbb
add
xor
mov
loope
lcall
aam
adc
mov
inc
fsts
add
fdivrp
push
clc
inc
sub
in
movsl
jno
mov
xchg
sbb
sbb
cmc
cltd
cmp
cmpsl
push
push
insb
fisttpll
rol
add
in
dec
jmp
fistpl
sbb
ret
call
adc
jl
inc
or
fadd
cltd
xchg
mov
add
arpl
and
push
dec
pop
xlat
push
mov
add
adc
movsl
rcrl
pop
add
add
lock
into
xchg
imul
sti
inc
fstpt
push
xchg
or
xor
pop
movsl
sbb
addb
cmpsb
jg
fcmovbe
pop
loopne
mov
shll
movsb
and
or
cmpsl
jmp
out
sub
push
mov
cmpsb
inc
loopne
jne
mov
cs
sar
gs
mov
cmp
adc
push
ret
mov
arpl
rcrb
aad
mov
movsl
nop
xor
ljmp
lret
mov
nop
and
add
sarb
pop
popf
insl
loopne
lods
int3
lock
push
pop
mov
and
shll
ja
in
out
mov
or
orl
mov
xor
mov
dec
jmp
jne
fwait
inc
out
dec
fs
mov
test
es
add
dec
std
ret
jmp
loopne,pt
or
repz
nop
push
aaa
mov
sub
sahf
inc
andl
pop
add
sub
xor
mov
fnstenv
pop
scas
movsb
pop
add
sub
cmp
add
sbb
pop
call
loop
mov
fs
pop
loopne
lds
adc
dec
push
dec
mov
pop
int3
dec
mov
fwait
cmp
imul
or
stc
jne
push
test
sub
ss
sbb
and
xchg
test
pop
pop
lods
or
pop
lods
push
inc
ss
cmp
dec
and
fs
clc
int3
mov
push
sti
mov
shll
inc
jns
or
dec
xor
mov
sahf
mov
in
and
jne
lods
fisubrs
and
test
dec
sbb
pop
or
xchg
in
mov
scas
sarl
and
pop
xor
shll
fiaddl
jle
pop
add
xchg
lret
mov
test
sarl
aaa
xor
stos
xchg
xchg
call
xlat
ss
int3
loope
imul
xor
push
sub
xchg
cmpb
lds
cmp
pop
pop
int3
xchg
sub
xorl
call
xor
pushf
and
lea
mov
shl
les
in
and
out
shll
sahf
je
int3
xchg
out
imul
jmp
add
jmp
in
scas
and
jle
mov
icebp
jle
shll
ljmp
cmpsl
rclb
iret
or
repnz
movb
pop
and
add
dec
pop
into
cmpsl
std
dec
ficoml
add
fnstenv
sbb
aaa
jns
mov
jb
addr16
cmp
bswap
pop
jnp
fistps
cld
fcompl
mov
fucomip
ficomps
cmpsl
lret
cmpsb
lret
out
push
outsl
sub
daa
push
push
rorb
iret
pop
pop
push
inc
pop
jns
pusha
sarb
gs
sbb
push
out
ret
clc
xchg
js
sub
pushf
pop
inc
iret
dec
jmp
pushf
xlat
add
push
lahf
scas
lret
xor
cltd
dec
push
jp
sub
add
push
add
pop
inc
leave
repnz
adc
or
mov
orl
fistpll
sub
push
shlb
adc
rcrb
xor
movsb
cs
out
dec
iret
push
inc
inc
std
or
fcmovnbe
insb
or
pop
cmpsb
and
push
movsb
mov
jne
or
mov
arpl
push
std
sbb
mov
and
push
mov
jecxz
push
xor
inc
hlt
inc
out
nop
and
lret
hlt
scas
loopne
dec
repz
test
cmp
mov
out
mov
shrl
mov
cli
leave
icebp
xchg
dec
sbb
pushf
enter
jp
adc
out
out
xchg
push
lods
dec
xor
test
mov
rcll
and
adc
mov
lock
jbe
adcl
mov
data16
fidivrs
divb
popf
flds
jo
rcll
cmp
cmpsl
scas
clc
adc
push
mov
in
ficoml
pop
in
push
sub
cmp
rcll
xchg
sub
push
rcr
es
xchg
and
cmpsb
xor
cwtl
js
addb
mov
popa
xor
test
sahf
arpl
cltd
pop
subps
sbb
push
cmp
cmc
pop
movsb
call
mov
cld
cmp
pop
mov
hlt
xchg
aam
inc
adc
xor
pushf
je
adc
dec
idivb
das
mov
inc
dec
xchg
adc
stc
jb
mov
add
mov
mov
sbb
into
jp
and
push
jl
jo
dec
mov
add
xchg
mov
sub
fldenv
xor
xchg
movsb
mov
out
jae
add
iret
clc
mov
aam
ret
sbb
push
xchg
sarl
sbb
sub
jecxz
dec
imul
call
add
or
jecxz
cli
call
mov
dec
dec
jae
fimuls
push
push
jp
xchg
pop
lret
cmp
dec
push
rcr
mov
je
dec
jo
adc
add
adc
rclb
mov
subb
dec
jmp
jno
imul
iret
hlt
mov
dec
inc
outsb
dec
pop
mov
je
mov
pop
mov
fwait
in
inc
daa
sub
es
mov
cmp
addr16
xchg
out
mov
arpl
int3
inc
inc
dec
jae
and
jge
xorl
out
dec
pop
sbb
or
or
jne
dec
xor
in
movsl
lods
jns
jp
or
cwtl
stos
jae
lea
sti
test
loope
loop
push
mov
sti
xor
enter
jo
adc
lret
outsl
out
adc
sub
xor
out
ret
lea
xor
sub
mov
imul
mov
loop
stos
scas
dec
in
add
add
push
sbb
add
rol
movsb
or
movsb
in
scas
adc
dec
es
mov
push
mov
not
int3
mov
je
imull
add
pop
pop
jl
loopne
fs
ss
xor
pushf
aad
mov
adc
mov
scas
arpl
cltd
jecxz
xlat
mov
mov
sub
sbb
ss
sub
inc
dec
rcl
out
xor
xchg
sub
adc
mov
rclb
cmpsl
pop
test
or
inc
in
jge
pop
in
or
std
scas
sbb
mov
add
rorb
shl
or
push
adc
and
rol
es
mov
popf
dec
popl
in
push
leave
mov
adc
movsb
jg
dec
dec
cmp
pop
jmp
dec
inc
xchg
bound
mov
sbb
add
dec
sbb
jg
loope
fcoml
xchg
fwait
jnp
inc
es
fcompl
push
adc
xor
daa
adc
inc
je
and
iret
test
adc
loop
mov
in
mov
aad
mov
scas
cmpsl
js
mulb
jb
ret
das
data16
mov
fwait
mov
popa
loop
push
mov
cmp
cld
and
ja
xor
lds
mul
je
or
leave
mov
test
fldenv
sahf
push
sbbb
stos
mov
outsb
xor
inc
pusha
fbld
cwtl
sbb
data16
and
fcoml
pushl
loope
add
stos
lds
mov
or
call
adc
int
lahf
lea
mov
dec
sbb
clc
or
and
xchg
ret
int
js
aas
js
rolb
sbb
inc
fidivl
jae
push
sti
sti
lcall
pop
fwait
add
fwait
addr16
lea
lahf
leave
xchg
inc
sti
pop
xor
adc
adc
dec
add
sub
fstpl
shll
pop
xor
sahf
cmovnp
jecxz
jp
push
fcoms
test
repz
mov
ret
inc
test
enter
pop
sbb
push
mov
imul
in
ficomps
mov
insb
inc
jae
dec
outsl
push
and
or
xorb
ror
xchg
dec
dec
js
loop
push
cmc
dec
sti
cli
stos
jp
push
js
enter
in
xchg
comiss
cmp
add
dec
mov
mov
xchg
or
adc
push
xor
pop
stc
and
mov
sarl
adc
frstor
movsl
push
mov
orl
lcall
clc
dec
inc
inc
dec
sbb
xor
js
mov
inc
dec
frstor
adc
xchg
cmc
sub
inc
jl
push
inc
fdivl
pop
xor
aad
fisubl
xadd
sub
outsl
dec
test
pop
cmp
les
addl
cmpsl
push
testb
repz
rcrl
fdivs
sub
jl
pusha
push
movsl
inc
add
push
add
sbb
pop
sub
dec
push
in
in
stos
sub
cltd
push
enter
mov
mov
lds
sub
fisubrl
and
add
mov
pushf
lret
adc
test
mov
add
mov
jge
stos
mov
popl
push
fcomp
ficompl
cltd
popa
in
fnsave
xor
pop
jno
dec
xchg
lock
popa
fimull
adc
inc
cmove
sbb
and
sbb
sub
imulb
inc
mov
mov
rcll
sahf
xchg
icebp
enter
lea
cltd
push
xchg
cmpsb
pushw
and
je
scas
into
dec
or
lock
sbb
data16
outsb
xor
jp
jne
xlat
jnp
or
xor
in
cmp
adc
xor
outsb
out
shlb
jnp
frstor
int
in
pop
push
aaa
xor
pop
or
or
dec
outsl
cmp
mov
sar
outsb
inc
dec
sbb
inc
bound
dec
lods
fildll
movsl
ljmp
divl
cmp
pop
int3
sbb
cmp
push
and
arpl
mov
in
jb
rcll
fstpt
cmp
add
xlat
mov
push
rcl
jecxz
cmc
les
add
subl
cli
ficompl
out
add
fsubs
ret
jns
test
nop
xchg
mov
sbb
adc
ja
mov
jo
sbb
subb
ret
pop
sahf
loop
cmpl
inc
push
add
and
lds
mov
push
bnd
in
jnp
daa
cmp
xchg
sbb
or
cmp
ds
pop
test
out
idivl
cmpsb
jbe
and
xorb
adc
mov
test
cld
xchg
xor
xor
adc
pop
adcl
std
pusha
pop
push
cmp
dec
int
adc
mov
inc
xchg
clc
data16
cmp
jbe
sbb
sbb
pop
xchg
mov
and
jae
push
cmp
add
ss
mov
clc
sub
cmpsb
mov
or
push
pop
dec
cmp
push
sbb
mov
sbb
cwtl
fadd
cmp
adc
mov
mov
out
in
sti
movsb
lcall
mov
push
aas
push
stos
adc
push
insb
lea
int
call
pop
jp
mov
nop
adc
stos
mov
jb
cmp
and
mov
in
jl
add
ret
mov
sub
arpl
pop
push
cli
add
push
push
sub
mov
stc
push
add
add
je
cmp
out
arpl
fiaddl
mov
add
out
sub
in
fstpt
pop
mov
jge,pt
rcrb
lods
jne
mov
xlat
jb
pop
outsl
test
aas
imulb
mov
test
nop
adc
pminub
das
out
fs
push
mov
sarl
mov
faddl
or
or
xchg
push
mov
fisttpl
hlt
into
pop
mov
inc
adc
jmp
xchg
add
fs
sbb
push
negb
add
popa
mov
test
inc
cmpl
bound
scas
inc
mov
je
test
sbb
clc
xor
or
fisttpl
sbb
mov
fdivrp
mov
movsl
test
xcrypt-ecb
cmpsl
dec
je
jp
ficoms
or
xor
mov
xchg
cld
mulb
add
fadds
sbb
aam
es
jg
push
dec
xor
lods
lret
cmpsb
and
rolb
push
stos
fiaddl
ud1
dec
pop
inc
mov
rcrb
idivb
sub
rorl
fistpll
in
add
lods
cmpsb
or
popa
shrl
and
je
adc
lock
mov
cmp
sbbl
lea
push
xor
out
xchg
les
out
mov
cs
popf
ds
cmpsl
adc
rclb
dec
sarb
aad
pop
sub
jmp
pop
divb
divb
lahf
lret
mov
sbb
mov
mov
xlat
je
add
mov
vphadddq
or
mov
adc
cld
aad
pushf
mov
xchg
rcrl
out
xor
fstpl
int3
sub
subl
jnp
add
jl
jg
ljmp
inc
sbb
aad
xchg
inc
pop
mov
push
jmp
aas
sub
stos
cmpsb
addr16
int
and
out
test
mov
mov
and
popf
imul
sarb
mov
push
stos
xchg
and
test
mov
sub
xchg
movsl
addr16
jo
outsl
jge
fs
jnp
xchg
mov
aad
pop
pop
push
popa
xor
sbbb
test
xchg
push
xchg
inc
negb
outsb
fstl
cltd
loopne
into
loope
insb
pop
call
adc
int3
arpl
push
daa
fwait
xor
xor
add
fcmovnb
jbe
lahf
xor
inc
pushf
shl
dec
and
mov
mov
sbb
cltd
push
mov
xchg
ficoml
cmp
mov
dec
data16
mov
sbbl
outsb
out
inc
mov
lds
jns
stos
cmp
xlat
xchg
out
dec
push
mov
push
mov
or
imul
loopne
das
cmp
pop
sub
aaa
jo
dec
and
xchg
xchg
xor
loopne
cltd
mov
xchg
mov
jbe
jecxz
data16
pop
mov
jmp
mov
sbb
hlt
jmp
lcall
jecxz
inc
and
cmpsl
pop
inc
cwtl
dec
jae
xchg
or
sar
call
pop
xor
test
sub
dec
outsb
mov
mov
int3
stc
out
insb
push
pop
cmp
jns
sbb
in
aam
jecxz
and
xor
xor
sbb
pcmpgtd
cmp
orb
xchg
or
lcall
test
push
push
push
add
xchg
test
movsb
cs
or
dec
loope
sbb
je
fdivp
insb
add
hlt
and
xchg
insl
mov
adcb
cmp
test
lret
ficoml
repz
in
pop
jge
jecxz
pop
movsb
jge
into
int
das
add
lret
mov
call
jnp
add
add
dec
mov
insb
lcall
or
stc
inc
data16
sbb
loopne
iret
push
xchg
jle
jo
gs
push
add
cmc
xchg
or
sub
mov
push
pop
jl
out
sub
inc
mov
push
sbb
cmp
ljmp
les
xchg
cmp
mov
jge
pusha
pop
add
inc
dec
pop
push
call
imul
sub
xor
inc
xchg
das
subb
icebp
jecxz
dec
icebp
subl
push
movsl
push
fsubr
and
sub
push
movsl
inc
jbe
stos
dec
mov
push
cltd
stc
push
mov
ret
jo
push
fwait
xlat
mov
faddl
fiaddl
pop
sub
xchg
lods
add
loope
out
int3
xor
shl
adc
pusha
mov
xchg
push
repz
stos
adcb
imul
mov
xchg
sahf
int
jae
std
push
jecxz
inc
xchg
sub
ret
ret
in
movsb
mov
addr16
dec
lret
out
clc
sbb
cmp
scas
xchg
jae
loop
jmp
stos
add
sub
mov
jo
popa
data16
outsb
cmp
cmp
jmp
add
mov
push
sbb
jge
test
sahf
cld
pop
mov
or
insl
imul
in
and
test
in
outsl
incb
jge
insb
test
cwtl
popa
xchg
lods
insb
icebp
jno
mov
mov
fwait
push
fadd
or
jbe
pop
stc
xchg
cli
cmp
inc
dec
or
adc
mov
sub
and
dec
add
and
jge
fistps
dec
arpl
shll
das
or
push
inc
pop
daa
iret
mov
jne
out
insl
xorb
cmp
xchg
push
mov
jecxz
mov
lds
xorb
ds
es
mov
jg
push
sub
call
ja
shlb
add
add
pushf
cmp
mov
cwtl
or
pop
jp
jg
dec
in
inc
and
fldcw
mov
outsb
outsl
push
cmp
adc
inc
fwait
push
push
shll
jns
jmp
xor
and
inc
int
push
push
subb
mov
aaa
adc
mov
jae
leave
rcrl
dec
jb
andb
jmp
out
mov
adc
gs
xchg
mov
mov
add
cmpsb
xchg
sahf
arpl
int3
jl
decb
shlb
mov
pusha
inc
filds
sbb
lcall
imul
pushf
fists
je
pop
aas
repz
sbb
out
arpl
xor
sbb
push
aaa
cwtl
dec
fs
cltd
cmp
iret
rolb
test
test
syscall
sahf
leave
add
sahf
mov
jle
and
dec
iret
jecxz
cwtl
popf
pop
or
mov
js
scas
sbb
fxch
rcrl
mov
push
das
test
jno
in
hlt
dec
in
push
lret
arpl
fsubrl
pusha
inc
dec
inc
ja
cmp
iret
cmp
mov
xor
fisttpll
addl
and
lds
inc
and
ss
add
test
outsb
cmp
mov
inc
or
inc
pop
ret
pop
in
sbb
inc
pushl
or
iret
lds
rcrl
dec
shlb
in
and
jl
xchg
add
data16
addb
pop
jne
xor
lcall
out
ficomps
nop
push
sahf
std
xchg
les
repz
push
xchg
out
out
fdivr
adc
push
dec
jno
dec
and
dec
push
ljmp
inc
xor
lods
or
mov
xchg
jbe
stos
lret
sub
push
insl
push
lods
xchg
inc
cmp
mov
cltd
mov
adc
sarb
mov
push
sbb
cmp
popf
adc
dec
inc
cld
jp
push
sub
imul
mov
sahf
das
push
xor
fstps
mov
adc
stos
js
insb
dec
pop
popf
pop
lods
inc
add
inc
fiadds
jmp
loopne
daa
ret
cmp
dec
scas
mov
cs
mov
or
mov
mov
jae
mov
jb
addl
xor
jnp
mov
jnp
arpl
xchg
outsb
cmp
jecxz
or
daa
stc
xlat
inc
or
push
imul
fsubrl
icebp
pop
push
push
clc
inc
sub
mov
mov
xchg
jmp
insb
jns
jl
mov
jo
sub
sbb
add
jmp
or
push
add
imul
cmpl
mov
push
lods
sbb
mov
adc
add
out
push
lret
in
int3
mov
mov
leave
inc
sbb
faddl
test
repz
lea
add
jns
push
ds
cwtl
shll
cwtl
rcrl
or
cwtl
mov
scas
test
pop
aam
xchg
adc
cmp
mov
jb
inc
lea
pop
or
push
test
sbb
orl
insl
jb
lods
fwait
cltd
xchg
jne
lods
adc
mov
cli
out
fs
cmpb
mov
mov
ss
jbe
inc
push
pop
pusha
lds
es
push
jecxz
mov
mov
mov
iret
and
pop
fists
aad
je
fidivs
jbe
inc
movsl
mov
cld
arpl
cmpsl
or
scas
push
inc
imul
bound
pop
push
outsl
xor
pop
mov
repz
sbbl
dec
scas
addr16
mov
out
cwtl
xlat
loopne
imul
or
or
mov
popf
push
insl
fldenv
test
ljmp
xchg
push
and
jno
fs
out
icebp
add
aam
push
lahf
jge
inc
xlat
push
push
mov
mov
es
and
sbb
sub
jb
shr
cli
daa
test
fsts
or
sub
adc
jo
push
movsb
and
nop
iret
dec
dec
leave
aam
pop
jl
jge
inc
push
dec
arpl
mov
xchg
mov
and
fidivl
push
setg
xor
mov
sbb
lcall
rcll
shll
iret
mov
xlat
loop
mov
fcmovnu
or
shlb
les
repz
pop
popa
or
and
mov
outsl
xchg
mov
xchg
mov
jnp
sub
mov
push
mov
fs
movsb
or
mov
mov
jbe
fisubl
sarb
push
adc
push
or
outsl
mov
fucomip
cmp
lock
jl
inc
push
push
aaa
sbb
mov
mov
repz
adcl
push
mov
leave
scas
sahf
mov
cmp
mov
adc
and
adc
icebp
in
jb
xchg
aad
xor
pop
mov
jno
xchg
adc
dec
cmpsb
mov
mov
xchg
xchg
inc
or
bound
mov
inc
xchg
arpl
add
fisubl
pop
inc
cmp
add
xor
push
adc
push
or
mov
xor
push
mov
jne
dec
lds
outsb
xchg
js
inc
fwait
inc
mov
sbb
xor
mov
jp
in
ja
cwtl
lcall
add
outsb
pop
add
inc
xor
fs
jbe
push
int
insb
mov
imul
sub
pop
movsl
xor
mov
mov
into
ss
lea
scas
xlat
sbb
add
neg
int3
nop
push
jb
cmc
dec
fisubrs
js
add
sbb
mov
sti
fwait
xlat
scas
movsb
jmp
out
sub
dec
shrb
sbb
insl
mov
cli
xchg
adc
add
fldt
inc
insb
test
push
push
nop
and
in
push
mov
imulb
mov
dec
mov
mov
lret
inc
xchg
xlat
mov
or
jmp
sarl
or
test
popa
cwtl
testb
dec
mov
repz
rcl
fisubrs
insl
mov
lods
ja
xchg
cmpb
push
jbe
cmp
jmp
cld
dec
gs
or
sub
add
or
xchg
stos
push
scas
das
daa
pop
test
daa
dec
shll
js
pushf
add
push
lcall
loopne
adc
fs
sub
cld
leave
and
addr16
xchg
mov
inc
ljmp
adc
aaa
mov
sbb
mov
mov
mov
jb
inc
cltd
sbb
push
mov
mov
jnp
std
lock
aad
int3
jle
out
jns
in
jnp
cmp
jo
test
sub
jmp
xchg
push
cmc
outsl
mov
cmp
test
scas
inc
and
fistpll
je
sbb
jns
mov
jae
jns
mov
xchg
pop
outsb
mov
fcmovu
mov
int3
pushf
aam
inc
js
sbb
adc
xchg
fucomi
aas
jne
into
sbb
lahf
push
std
mov
inc
push
inc
stos
pop
rorb
iret
xchg
in
xrelease
popa
sti
adc
and
jmp
frstor
loope
call
aam
int3
mov
mov
sub
int
push
xchg
enter
mov
scas
mov
ret
lods
jl
sahf
ret
xchg
cld
gs
sbb
add
or
lahf
imul
pop
loope
push
pop
or
xchg
test
movsb
lahf
and
fsubr
inc
pop
shrb
jecxz
psadbw
rcl
mov
push
xlat
cmp
lds
daa
mov
dec
push
mov
fadds
or
arpl
arpl
pop
cmp
aad
adc
adc
sbb
mov
mov
test
popl
test
pop
inc
mov
fcmovu
stos
cli
stos
je
add
mov
ljmp
std
jle
jns
stos
push
mov
sub
sub
incl
mov
jns
adc
or
cmp
lds
xor
sarl
dec
ret
mov
xor
mov
dec
dec
cmc
add
push
xor
xlat
stos
rclb
pop
repnz
or
push
mov
es
jmp
mov
mov
cs
pop
sbb
inc
xchg
shlb
lea
test
push
mov
mov
or
outsl
out
adcl
bound
mov
fistpll
xor
movsb
ja
aam
nop
mov
adc
cmpsl
push
fwait
pop
aad
add
ret
cmp
push
jecxz
cmp
movsb
xchg
in
jb
mov
cmpsl
jnp
push
int
lock
je
lods
sti
pop
cmp
jo
lea
push
movsl
sub
jmp
sbb
rorl
pop
int
js
leave
adc
adc
fs
ja
and
jbe
jnp
dec
add
outsb
in
jge
shlb
xchg
sub
sub
xchg
imul
jo
fcoms
sub
push
lods
push
pop
gs
xor
mov
insl
and
cwtl
or
mov
das
popa
dec
dec
ljmp
in
in
cmp
fs
mov
cwtl
sbb
lods
aaa
push
adc
xchg
lock
jbe
in
mov
loopne
inc
lcall
xor
sahf
ds
iret
bound
into
leave
pop
push
mov
jo
xor
jae
cld
jecxz
push
or
movsb
enter
adc
aad
scas
or
jg
xchg
movsl
inc
pop
ds
lret
jmp
loopne,pt
cmp
loope
inc
mov
pop
mov
rorb
loop
or
or
mov
mov
push
xchg
cmp
push
nop
into
xchg
pop
es
push
jl
push
lods
mov
jns
sbb
adc
pop
jns
int
jge
mov
clc
cli
inc
adc
fwait
or
fidivrl
adc
cmp
clc
mov
mov
fsubr
mov
push
mov
daa
sbb
out
mov
xor
sbb
sub
cmc
sbb
inc
jl
mov
xor
mov
in
mov
and
mov
lock
adc
adc
jmp
fdivl
pop
popf
scas
cld
js
repnz
sti
lods
xchg
scas
shlb
lock
dec
data16
jb
xor
pop
pop
dec
ss
out
jle
xchg
and
addr16
xor
lods
mov
jb
es
or
xor
add
test
fdiv
mov
add
jecxz
sub
mov
lret
pop
data16
xor
les
push
jg
jmp
daa
loop
ror
shlb
dec
hlt
ficoms
jg
aad
mov
loope
mov
adc
or
dec
scas
and
mov
add
cmp
ret
jb
stc
xchg
mov
adc
jb
ficomps
clc
pop
arpl
sti
sub
mov
hlt
inc
dec
jmp
setp
mov
es
push
or
imul
jge
lock
rcr
adc
rorl
jmp
cmpsl
mov
push
or
push
cmp
push
stos
popa
push
and
xchg
stos
and
addr16
mov
sub
nop
adc
je
psubusw
xor
in
orb
cs
push
js
jl
mov
adcl
mov
inc
iret
pop
into
shll
popf
sub
pushf
shrl
mov
fimull
lahf
and
es
outsl
cwtl
or
jae
adc
lret
pop
iret
mov
sub
movsb
pop
and
stos
bound
xlat
add
clc
inc
lock
ljmp
pop
stos
add
gs
sub
push
ret
xor
pop
xchg
sbb
xor
movsl
jmp
add
iret
mov
xor
lret
xchg
cmpsb
or
aas
xor
sub
gs
out
sub
lods
xor
dec
pushf
ljmp
out
les
sub
adc
sub
ss
push
fdivl
add
fstpl
mov
inc
sub
xor
jl
jmp
dec
mov
mov
inc
stc
dec
es
orl
ret
sub
mov
test
in
test
pop
mov
ficoml
adc
sahf
mov
push
and
push
sbb
mov
cwtl
dec
xchg
jecxz
mov
aam
pop
cs
rcrl
js
mov
or
loopne
outsl
addr16
or
sub
incb
out
push
cmp
pop
and
push
jle
xchg
je
mov
out
pop
and
cmp
cltd
clc
cli
push
adc
dec
xchg
iret
push
insb
cs
lods
xchg
in
cmp
shrl
lods
jle
jno
clc
mov
and
lret
lds
sarb
mov
out
in
fucomp
xorb
ss
and
push
dec
or
dec
insb
sarb
push
setnp
mov
test
aaa
mov
lret
cltd
lds
enter
test
sbb
push
push
xlat
adcb
push
add
jnp
scas
mov
pop
mov
js
cmpb
lods
mull
push
insl
stos
movsl
jg
add
mov
pop
push
add
and
ud1
inc
es
jnp
sub
jmp
aam
aam
push
rcll
inc
push
je
rorb
ret
dec
and
scas
stos
xor
pop
lods
outsl
and
add
rorb
and
mov
dec
add
je
loopne
aad
std
pop
in
aas
cmp
gs
mov
fiadds
subl
loopne
shrl
push
lea
cld
inc
int3
lods
or
icebp
test
cmp
jmp
ljmp
jmp
or
stos
push
pop
mov
or
ret
sahf
lret
mov
icebp
loopne
push
push
jmp
xchg
in
cmpl
es
std
sub
pusha
or
pop
pop
sbb
insb
sub
mov
je
cltd
lea
sub
mov
aam
je
or
leave
mov
shlb
aaa
pusha
dec
ja
insl
psrld
adcl
sbb
lret
insl
xchg
mov
inc
jae
xor
in
sbb
mov
dec
add
pop
adc
and
adc
adc
pusha
add
jns
rcl
adc
mov
aad
inc
xchg
inc
cltd
in
sub
loop
sbb
cli
mov
out
fwait
sahf
stos
imul
movsb
mov
pop
add
and
cmp
pop
lods
jb
sbb
sub
sti
dec
mov
ljmp
insl
outsb
inc
mov
sarl
js
add
inc
inc
insb
add
mov
sub
sbb
mov
mov
sub
ss
and
mov
xor
sub
repz
mov
adcl
push
cli
fdivp
jp
cmp
xchg
adc
test
cmp
loopne
lret
rorl
pop
fmulp
les
fstpl
mov
xchg
push
adc
ret
pop
add
ret
lock
call
xchg
xlat
sbb
dec
into
pushf
sti
inc
fidivrs
push
inc
dec
clc
int3
push
mov
cld
xor
dec
xor
jg
insb
push
negb
mov
cs
pop
mov
pop
out
mov
enter
inc
adc
flds
mov
repz
mov
cmpsl
dec
fdivrl
mulps
push
lahf
jg
ss
jae
add
decl
and
cmp
cmp
mov
test
or
sarl
mov
daa
loop
pop
dec
ja
outsb
out
dec
fwait
mov
popf
das
nop
mov
mov
daa
outsb
dec
inc
jb
movsb
or
push
and
loope
xchg
mov
push
gs
das
pop
mov
hlt
hlt
xor
cmpsl
mov
loop
lret
xor
mov
dec
xor
int3
shll
jb
fcoms
inc
adc
pushf
or
enter
inc
clc
into
lea
pop
fisubs
loop
cli
and
popf
loop
orb
gs
jg
and
loopne
push
xor
pop
pop
sub
mov
pushf
sbb
icebp
cli
addr16
jbe,pt
test
sbbl
les
push
pop
xchg
fwait
push
jo
into
in
fwait
mov
clc
xchg
push
push
or
add
shr
mov
shlb
enter
cmp
mov
loopne
movsl
scas
lcall
test
xor
fiadds
inc
mov
sub
xchg
fwait
jae
xor
iret
cmp
dec
mov
pop
xchg
xor
adc
in
mov
outsb
stc
push
cmp
sbb
push
sbb
ret
xor
dec
push
pop
xchg
jbe
fwait
das
cs
outsb
fimuls
and
pop
testb
xlat
mov
adc
and
lahf
popf
loope
pop
ljmp
pushf
cmpsl
pop
push
outsb
sbb
test
icebp
in
fsts
sub
out
mov
cmp
mov
out
aas
mov
or
movsb
adc
xchg
jb
je
mov
andl
dec
call
lcall
insb
aas
ret
stc
adc
lret
out
inc
loope
lods
fdivrs
out
test
mov
push
add
sub
cmp
mov
sbb
insb
popf
mov
cmp
out
mov
mov
repnz
adc
lcall
inc
xor
dec
push
cmp
push
pop
pop
lea
int3
pushl
mov
fldl
shl
movsb
push
loope
jmp
fwait
jo
outsb
xchg
fbld
andl
subps
gs
int
mov
out
imul
jl
sub
pop
popf
rcrl
cmpsb
jnp
aaa
out
es
pop
hlt
scas
icebp
jno
mov
and
sub
pop
shl
and
cli
mov
mov
push
xchg
ret
loop
arpl
sub
ret
and
sarl
or
and
enter
adc
xor
mov
fcmovnbe
mov
mov
mov
jno
bound
mov
cli
mov
fidivl
loope
in
call
test
jb
xor
lahf
or
dec
fisubrs
stos
jg
cs
mov
dec
and
in
popa
adc
pop
xor
or
sarb
pop
and
xchg
push
leave
rcll
inc
or
dec
enter
shlb
pop
gs
push
fstps
loopne
jp
push
adc
jg
cmpsb
fs
cmpsb
out
sbb
mov
scas
fwait
cld
mov
fsubl
adc
mov
lret
mov
add
jl
icebp
dec
xor
outsl
mov
mov
je
pop
jno
outsl
addr16
fwait
outsb
pop
fidivrl
mov
std
mov
push
pushf
test
repnz
sub
or
push
insl
or
adc
test
mov
inc
sbb
jle
cmpl
sbb
add
push
sbb
js
stos
xlat
pop
sti
cmp
enter
es
pop
jp
and
divb
xor
inc
jb
out
or
enter
push
pop
fnstenv
xchg
adcb
jl
inc
pop
movsb
and
test
push
in
fisubrs
add
mov
inc
popa
iret
mov
ja
outsb
mov
cli
movsl
inc
xchg
adc
xchg
mov
fwait
cmp
imul
shl
ret
dec
out
jo
mov
test
insl
xchg
popa
push
fwait
xorl
call
mov
inc
jecxz
xchg
pushf
int
iret
sbb
aaa
and
insb
xchg
pusha
cwtl
jb
lods
or
lret
data16
xor
pop
stos
inc
cli
xchg
dec
inc
inc
mov
addr16
shlb
rol
sub
cld
push
lea
inc
sbb
mov
movsl
pop
test
jns
out
nop
sbb
inc
mov
and
mov
mov
aas
jnp
data16
dec
adc
out
mov
ljmp
decb
mov
imul
xchg
mov
mov
call
cld
fadds
push
mov
xor
dec
sbb
jl
mov
loope
pop
mov
mov
js
mov
out
into
add
inc
arpl
xchg
incl
icebp
movsb
in
pop
dec
into
push
sbb
out
cmp
cmc
imul
cs
cmp
dec
arpl
data16
push
dec
lret
pop
gs
mov
das
push
xor
push
xor
push
pop
leave
inc
dec
and
mull
mov
mov
ja
pop
je
xor
sub
popa
xchg
add
add
sbb
xchg
testb
jl
or
lock
shrl
pushf
scas
pop
fistps
mov
xor
insl
testl
imul
cmp
int
out
push
xchg
ret
push
mov
ds
int
jge
sbb
out
popa
jge
xor
jne
inc
inc
adc
rdmsr
pushf
leave
xchg
pop
mov
push
jne
lods
xchg
daa
popa
fsts
xchg
data16
frstor
outsb
mov
cmpsl
mov
loopne
mov
adcl
pop
ja
cld
pop
lods
out
or
push
mov
sbb
mov
mov
leave
push
pop
shl
jb
in
mov
dec
lods
iret
jmp
add
push
data16
addr16
aas
in
xchg
sbb
xchg
jge
cmp
call
cld
cmp
cmpsl
clc
adc
fists
push
pop
insl
jno
scas
rcrl
pusha
testl
add
addl
daa
mov
cld
sub
insb
ret
shrb
xor
xchg
lods
add
adc
mov
ret
dec
shll
mov
or
inc
push
cmp
jle
mov
mov
stos
imul
lds
leave
cmc
imul
sbb
add
or
lods
arpl
adc
hlt
mov
insl
lods
add
nop
jecxz
xchg
les
popf
bound
in
adc
in
icebp
push
mov
xor
xchg
iret
out
daa
dec
push
jne
jmp
jl
xchg
jmp
cld
and
mov
add
sub
jae
lret
pop
cli
sbbb
push
adcl
sbb
jmp
xchg
sti
pop
jg
fsubs
and
and
mov
in
xchg
fsts
fiadds
push
push
hlt
push
aad
push
hlt
les
adcb
pop
or
stc
repz
jbe
je
push
aaa
adc
pop
dec
sahf
sbb
mov
jg
bound
fidivs
imul
int3
inc
inc
lret
pop
or
jns
push
cli
mov
pop
pop
popa
adc
jno
std
fwait
push
jno
cmp
and
and
ss
scas
sbb
dec
sbb
add
add
add
or
push
adc
cltd
dec
jmp
sti
stos
xor
cld
addr16
or
pusha
insl
adc
jmp
cmpb
cmp
mov
sbb
xlat
fmull
add
loope
mov
adc
imul
cmpb
sbb
jo
inc
fs
sbb
jns
xchg
and
mov
pushf
mov
sub
inc
mov
and
shll
mov
and
push
popl
adc
out
leave
lea
cli
dec
mov
pop
cltd
sub
cmp
sub
cmpsl
adc
das
das
scas
and
popf
push
mov
out
sub
subb
xchg
mov
addr16
fisttps
jnp
push
and
test
adc
sbb
add
loope
mov
loopne
mov
sub
jle
sub
outsb
jmp
xor
cmp
jno
fstl
jmp
jg
mov
cmp
mov
fs
lret
push
outsb
jge
dec
dec
lret
jle
negb
js
sub
testb
xchg
repnz
mov
scas
sub
gs
xchg
mov
div
jmp
cmp
ljmp
pop
shlb
cmpsl
inc
je
sub
imul
dec
pop
mov
and
jne
or
enter
lds
pop
cmp
xchg
xor
sub
inc
or
or
push
clc
faddl
pop
mov
xchg
cmp
fs
lods
imul
fldt
or
test
mov
das
test
jle
sbb
push
outsl
mov
and
mov
jge
stos
pop
stos
or
xor
insb
leave
inc
popa
insb
or
adc
daa
rcrb
mov
loope
stos
arpl
test
cmp
adc
icebp
xor
imul
push
jno
push
into
sbb
ret
stc
lods
inc
add
je
jne
rorb
call
scas
push
mov
sbb
shll
push
frstor
sarb
notl
add
roll
shrl
aas
sti
or
mov
cld
ss
lock
and
cmpsl
sarw
aam
dec
jb
mov
jg
jp
cmp
jle
push
mov
pop
or
and
repz
xchg
and
into
int3
dec
aaa
mov
cmc
popf
mov
add
sbb
call
ret
rcrb
and
cmp
adcb
mov
lahf
mov
push
lock
stc
test
arpl
call
xor
dec
push
andb
mov
xlat
and
loopne
jle
xchg
ss
les
jno
dec
jle
rcll
pop
mov
inc
add
mov
in
pop
popa
mov
loope
fs
shl
sub
les
loope
es
push
repz
push
sub
fsubl
sub
stc
pop
mov
out
adc
sar
adc
mov
jecxz
test
pushf
sbb
pop
out
dec
mov
jg
cmp
lret
test
cmpsl
and
cwtl
mov
mov
stos
mov
outsb
dec
pop
mov
ss
mov
jo
mov
adc
pop
jo
jp
mov
scas
loopne
out
pop
sub
cltd
inc
arpl
jecxz
mov
arpl
dec
lods
pop
inc
pop
push
das
add
aas
xchg
lret
repz
lods
mov
fwait
scas
adc
iret
popa
int3
fldcw
mov
push
test
dec
mov
outsl
lods
cmp
insb
inc
scas
cmp
jno
cmp
cld
jne
adc
push
jb
faddp
pop
shrd
cmp
and
lds
dec
js,pn
mov
adc
shll
cwtl
out
and
push
rep
xchg
and
js
les
mov
push
js
outsb
mov
jno
xor
pop
pop
cld
jo
jbe
adc
cmpsb
cs
mov
fwait
mov
scas
inc
mov
inc
pop
adc
jno
cmpsl
mov
outsl
cmp
sub
sti
jne
loopne
stc
loope
stc
mov
sti
or
inc
push
mov
push
into
out
inc
sub
dec
push
dec
in
xlat
scas
jl
icebp
je
push
jnp
pop
pop
sub
mov
mov
and
xor
ret
scas
jle
icebp
orl
or
mov
or
test
jecxz
sti
or
sbb
in
mov
test
orb
fiaddl
sub
and
sbb
adc
and
cmp
arpl
push
daa
lcall
mov
loop
add
loope
xchg
decb
popa
pusha
mov
xchg
int3
lret
or
in
mov
mov
push
gs
fs
out
filds
fldl
ljmp
xchg
sbb
mov
in
aaa
sub
xchg
and
scas
sbb
int
pop
aam
add
outsl
fistpl
mov
loop
fdivs
insb
cmpsb
push
cmp
inc
fnstcw
out
cmpsb
mov
psllw
sub
push
inc
xchg
inc
cmp
popf
fs
mov
stos
ds
adc
subl
decl
dec
push
std
inc
sub
pop
pop
mov
scas
clc
push
mov
push
inc
cmp
add
hlt
neg
mov
cld
stos
test
xorl
and
jmp
xchg
movsb
pop
fwait
js
push
pop
xor
or
mov
out
negb
aad
or
xchg
or
jnp
je
inc
mov
imul
lcall
pop
dec
fdivrs
fimuls
scas
sub
push
les
sarb
mov
jmp
lock
jae
mov
int3
arpl
xchg
dec
jmp
pusha
outsl
cmp
jge
int
add
movsl
jmp
sbb
lods
dec
mov
cwtl
or
sbb
hlt
xchg
mov
lds
test
lds
push
stos
mov
imul
ljmp
movsl
dec
in
sub
cwtl
js
arpl
fisubrl
cmp
punpckhwd
or
movsl
sahf
mov
imul
loop
push
push
jge
inc
mov
sahf
adc
cmp
test
clc
push
enter
cmpsl
jns
bound
ret
cli
xlat
daa
xor
or
mov
xor
inc
mov
out
jge
mov
aas
mov
pop
push
lods
pop
outsb
pop
dec
das
sub
mov
sarl
jns
add
dec
sub
shll
fistps
cld
mov
popa
jge
cltd
jmp
icebp
add
jb
insb
mov
mov
clc
and
cvtdq2ps
pop
cld
push
inc
clc
pop
cmpl
mov
push
lock
ljmp
jnp
add
jnp
arpl
inc
roll
lret
leave
or
mov
sbb
lahf
cs
jmp
lea
cs
pop
xor
nop
sahf
xchg
lods
jo
add
insl
enter
imul
mov
bnd
inc
shrb
sub
imul
sarb
insl
xchg
les
sbb
push
push
das
ret
or
mov
mov
jp
mov
and
loopne,pt
adc
push
mov
cmp
sbb
js
movsl
or
arpl
cmp
mov
sub
int3
xor
dec
movb
cmpsl
cmpl
out
xor
cmp
aas
arpl
insl
sbb
outsb
pusha
lods
sbb
in
int3
in
in
mov
mov
mov
jmp
in
cmpsb
movsl
cmpb
jl
shlb
pop
pop
xchg
cwtl
push
jbe
pop
int3
push
cmp
dec
cmpps
out
and
out
fimull
mov
mov
call
adc
ja
adc
xchg
pushf
inc
frstor
insb
lds
repz
pop
mov
mov
mov
test
shll
mov
xor
loopne
cmp
xchg
sub
cmc
adc
push
jbe
or
sti
sub
ljmp
sub
test
notb
pop
cwtl
popf
cs
out
dec
pop
adc
sbb
mov
test
test
jmp
mov
mov
mov
inc
pop
lods
fnstenv
lods
jl
inc
mov
sbb
xor
dec
dec
les
or
jmp
xchg
sub
leave
pop
jne
sub
push
push
outsl
and
jo
sbb
rcrb
pop
and
scas
or
nop
mov
outsl
imul
add
inc
testl
jae
icebp
add
hlt
loop
xchg
int
gs
xchg
divb
cmpsb
cwtl
mov
icebp
sub
ret
test
xchg
inc
les
cmp
sbb
pushf
fildll
js
jecxz
fiadds
lods
inc
cli
aam
in
pop
xor
sahf
aaa
div
mov
dec
ds
cld
dec
inc
imul
ret
fs
xor
ljmp
repnz
dec
rolb
rolb
and
out
cmp
pop
test
mov
enter
jp
jo
dec
int3
enter
insl
xor
jbe
cmp
inc
pop
inc
pop
test
mov
mov
cmpsb
jmp
inc
and
test
ja
xor
sub
push
jg
stc
fsubr
push
icebp
into
inc
xor
or
xor
outsl
scas
in
cmpsb
movsl
inc
out
loop
pop
in
fists
data16
clc
jecxz
sub
jge
movsl
mov
mov
mov
mov
xchg
test
push
clc
jns
sarb
lret
aad
mov
fldt
loopne
pop
cld
xchg
adc
subl
rclb
xchg
dec
mov
insl
enter
out
mov
scas
jae
push
or
pop
popa
mov
mov
nop
xchg
ds
outsb
push
dec
incb
int
lods
jl
mov
push
pop
roll
pop
add
fildl
mov
fcomip
adc
inc
or
repz
flds
movsl
and
push
clc
push
cmp
rolb
jmp
insl
cmp
dec
push
inc
ljmp
scas
jle
lds
mov
adc
movsb
adc
dec
dec
jno
ja
movd
aas
or
test
fistl
pop
std
dec
sti
sub
cltd
fs
mov
jne
fs
lret
mov
nop
dec
cmpsl
lds
mov
xor
aad
int3
add
sti
sarl
ljmp
sbb
mov
inc
adc
dec
add
outsb
mov
leave
lds
mov
bound
cmpsl
jno
dec
dec
testb
mov
and
in
sub
rcl
xchg
and
xchg
sbb
repz
jecxz
fucom
test
cmpsl
nop
shll
pop
adc
push
add
fmull
mov
add
ficomps
push
adc
push
push
jge
add
outsl
or
adc
push
push
cmp
add
sbb
and
sbb
jg
xlat
and
xor
mov
stc
or
clc
ficompl
test
and
lock
or
loopne
cmp
sub
negl
jb
xchg
sarb
mov
mov
and
std
ret
mov
scas
push
push
push
int
loop
mov
scas
adc
addr16
xchg
inc
lock
clc
dec
xchg
xchg
popf
loopne
lods
xchg
not
enter
mov
add
enter
pop
cmp
jnp
stc
xor
cmpsl
xchg
clc
imul
dec
ret
aam
sbb
sub
jo
cmp
sub
popa
pop
mov
push
add
outsb
repnz
es
xchg
movb
pop
pushf
xor
out
sbb
and
sbb
test
mov
mov
mov
lds
adc
adc
call
lods
mov
stos
pushf
sahf
fwait
sub
cmc
testb
out
ds
shlb
push
test
cmp
ljmp
mov
out
call
aas
push
sbb
fisttps
lahf
ljmp
cmp
sti
in
add
mov
js
xchg
out
xchg
fstl
cld
sti
std
sub
shlb
aaa
orl
dec
and
sbb
sub
jmp
stos
inc
inc
adc
cwtl
jmp
cltd
pop
jbe
adc
mulb
cmp
iret
insb
in
dec
enter
sti
shrl
inc
push
in
arpl
fstpt
movsb
fwait
test
push
nop
aas
ja
pusha
mov
or
inc
insb
inc
outsl
push
push
iret
aas
pop
sarb
mov
jno
in
fstpt
es
cwtl
add
scas
testb
movsl
imul
and
daa
roll
and
push
inc
xchg
imulb
repz
in
sbb
xchg
pop
pop
and
mov
and
add
pop
push
imul
adc
fisubs
in
cmp
rcr
aam
mov
xor
add
test
push
fildl
je
pop
cld
dec
fnsave
enter
es
dec
out
dec
mov
mov
mov
stos
xchg
test
mov
pop
jg
jmp
sub
xor
pop
push
xor
fcmovnu
add
mov
imul
lcall
mov
add
lods
pushf
loopne
pminsw
and
aaa
jbe
pop
enter
lcall
sbb
repnz
add
inc
stos
sub
xchg
mov
push
inc
pushf
inc
cwtl
call
ret
mov
mov
mov
or
rorl
mov
sbb
lret
push
sbb
xor
push
iret
xlat
jmp
ret
mov
xchg
push
shlb
in
jns
inc
ret
cmp
mov
imul
cmc
arpl
jg
ret
or
lock
pop
test
jmp
adc
outsl
push
cmpsb
jno
movl
es
daa
and
daa
adc
cltd
enter
aad
pusha
in
stos
inc
jnp
xchg
jmp
lahf
jns,pt
jl
cmp
lcall
aaa
pop
fistpl
and
jle
in
cmp
push
outsb
test
sub
mov
insb
push
aad
stc
push
or
and
js
mov
call
aam
dec
test
sub
jns
inc
or
dec
push
mov
repz
stos
repnz
mov
gs
pop
loopne
inc
sbb
inc
and
jl
mov
inc
ljmp
test
imul
repz
add
iret
sub
shll
ficoms
addr16
outsl
inc
pop
jnp
ljmp
lret
dec
or
pop
mov
sub
repz
in
rorb
inc
cmp
mov
mov
or
jl
aas
cmpsl
iret
adc
push
dec
lret
inc
mov
cmpsb
jns
scas
fs
xchg
dec
mov
xchg
mov
sub
outsl
sbb
imul
sub
movsl
sbb
sub
mov
pop
pop
mov
or
pop
in
dec
sti
stos
cmpsb
jg
out
stc
outsb
mov
or
add
add
mov
push
and
add
test
test
mov
jno
movsb
ja
inc
jmp
loope
mov
das
mov
push
imul
mov
cs
pusha
int
popa
push
jge
test
mov
or
cmp
mov
add
fstps
push
fwait
dec
mov
ret
icebp
cmpb
mov
push
mov
out
js
xor
pop
in
add
lods
in
shrb
push
pop
pop
cs
test
mov
mov
pop
cmp
imul
outsb
sub
test
addr16
in
sbb
stos
addb
inc
out
adc
mov
es
dec
inc
pop
adc
and
call
sbb
xchg
or
mov
push
xchg
cmp
xchg
in
jae
test
insl
mov
in
stc
repnz
les
clc
repnz
xor
push
jo
mov
cmpsb
mov
movsb
or
aaa
repz
pop
les
mov
fs
push
icebp
inc
stos
xor
dec
rcrl
sbb
jno
pop
adc
lock
outsb
test
ret
push
loop
icebp
mov
pop
fprem1
popf
mov
testl
arpl
je
cwtl
mov
aas
loopne
mov
mov
movsl
shlb
fmuls
cltd
ljmp
push
iret
insl
jp
xor
and
inc
je
add
mov
adc
cmpsl
daa
dec
or
stos
xchg
cmp
mov
or
mov
cli
push
ljmp
xor
aad
xor
cld
jns
add
test
cmc
test
jae
out
pop
dec
inc
call
push
imul
lds
mov
push
cmp
jns
pusha
jno
and
icebp
pop
test
pushf
in
daa
std
sub
mov
jl
stos
outsl
arpl
cwtl
inc
incb
cltd
lea
mov
pop
fyl2xp1
xorl
adc
decl
test
hlt
sub
cltd
pop
mov
push
dec
inc
inc
and
lret
outsl
cmp
cwtl
xlat
pop
mov
fisubrl
in
xchg
jne
cmp
cli
leave
cmp
xchg
and
jge
add
cltd
cmpsb
lods
push
shlb
xchg
stos
push
cltd
lahf
inc
pushl
push
std
lods
into
and
les
mov
push
hlt
xor
jb
mov
gs
sahf
mov
jmp
push
or
ds
mov
iret
xchg
dec
xor
ljmp
xchg
es
cld
jbe
aas
stc
daa
mov
repnz
jmp
and
cmp
faddl
daa
dec
repnz
sbb
incl
lcall
push
sbbb
mov
shll
add
mov
pop
int
mov
push
mov
jnp
dec
aad
xor
scas
inc
inc
cli
dec
inc
and
je
sub
int
add
test
pop
jne
stos
push
dec
mov
sti
pop
push
xchg
jg
jae
push
in
push
mov
push
push
jno
cmp
push
out
aam
mov
aam
enter
imul
pop
jbe
filds
xchg
outsb
imul
mov
cmp
fldt
or
es
imul
ret
pop
shrb
aad
jmp
outsl
aaa
xor
js
mov
xchg
cmc
or
push
adc
sub
mov
testl
mov
dec
lcall
push
adc
inc
sub
movl
jecxz
clc
mov
sub
pop
dec
ret
lock
mov
enter
pop
add
fbld
sahf
dec
jg
push
test
xchg
mov
mov
cmpsl
nop
popa
sbb
xchg
inc
scas
mov
cmp
pusha
fs
mov
mov
out
movsl
andb
lock
jb
add
xchg
jp
loope
dec
inc
push
sti
int3
ret
outsb
push
lahf
sbb
arpl
insl
fisttpl
int
sub
jnp
adc
ret
mov
data16
push
arpl
or
loop
addr16
sub
popa
push
dec
mov
dec
in
lock
push
add
push
sub
push
popf
adc
pop
xor
xor
xchg
sbb
inc
lds
movsl
cmp
sbb
sbb
stos
jge
cmp
cld
incl
enter
sub
clc
inc
test
sti
xchg
call
int
xchg
enter
dec
inc
icebp
icebp
das
fwait
mov
xor
scas
call
xchg
fidivrs
ja
inc
insb
jne
clc
mov
ljmp
gs
negb
out
jnp
pop
jae
stos
xlat
or
push
pop
pop
fisubrl
fldt
les
repz
bnd
lock
and
es
arpl
hlt
mov
aam
fiadds
xchg
mov
rcll
stos
sub
in
pop
pop
rcl
int
lods
icebp
pop
mov
loop
and
adc
stos
jo
in
fldcw
adc
sub
aaa
mov
push
mov
xchg
jge
push
lret
enter
push
pop
movsl
movsl
and
test
dec
or
inc
lret
shrl
push
pop
arpl
imulb
push
xor
pushf
xor
popa
into
jmp
jnp
cmp
xchg
dec
fistl
jb
dec
xchg
fisubs
scas
dec
pop
inc
pop
and
push
dec
mov
mov
pushf
xor
rolb
in
xor
fcomps
hlt
mov
rcll
mov
data16
lods
jno
shlb
fisubs
mov
sub
repnz
pop
mov
mov
cmpsl
push
sbb
pop
mov
in
jb
xlat
scas
subl
push
iret
pop
insl
dec
iret
pop
dec
mov
stos
hlt
pop
adc
jns
dec
faddl
not
in
jae
cmp
lods
aas
hlt
push
adc
push
movb
aad
stc
jecxz
push
mov
sbb
lret
adc
loopne
xchg
test
rol
inc
sbb
push
cmp
arpl
stos
fisubs
frstor
pop
push
xor
inc
int3
das
mov
jp
inc
cmp
and
push
or
push
or
jbe
mov
push
stos
fxch
jecxz
std
andl
push
cli
mov
pop
inc
pop
hlt
cmp
cmc
fs
fsubr
or
cmp
cmpsl
cmpsb
or
push
xchg
mov
icebp
into
adc
sbb
sub
int3
std
jno
insl
das
mov
lea
push
hlt
adc
fisttps
lock
or
imull
sahf
popf
jb
mov
pop
inc
leave
fwait
xchg
xchg
fisubrl
and
jo
enter
orb
sbb
pop
and
xor
and
enter
movsb
loope
xchg
cmp
or
xor
lods
xchg
adc
mov
and
dec
out
pop
and
rolb
jno
and
sub
mov
sahf
mov
shrl
sbb
filds
rcrb
lods
inc
xchg
adc
sbb
sub
nop
pop
sbb
repz
movsb
movsb
jp
push
outsb
jcxz
sub
jg
adc
pop
xchg
ja
mov
xor
mull
repz
outsl
inc
xor
enter
sbb
outsb
bound
dec
out
dec
subb
js
loop
inc
cltd
ds
outsl
mov
push
or
xor
fwait
mov
pop
pop
mov
into
mov
je
mov
jp
sub
cmp
jle
or
cld
lods
cmpsb
std
and
hlt
pop
insb
cmp
sbb
movsb
adc
add
adc
arpl
mov
leave
mov
dec
dec
inc
jb
mov
insb
and
jbe
fistl
add
inc
cmp
jle
cmp
cwtl
imulb
pop
das
and
add
aad
add
sub
shll
in
imul
sarl
data16
sbb
add
cmc
mov
clc
out
sub
into
in
jno
jae
mov
mov
rcl
cmp
out
or
jecxz
push
pop
or
push
hlt
loop
xor
cld
lret
xchg
mov
sub
push
sbb
mov
ud2
jecxz
fld
stos
sti
pop
push
pcmpgtb
call
js
popf
sub
jnp
adc
in
sub
fadds
jle
add
ljmp
stc
sbb
loope
dec
pop
add
sbb
pop
mov
cmp
mov
dec
inc
adc
sub
xchg
sbb
inc
jns
fmuls
jb
jo
add
fsts
jle
mov
stos
sbb
cmpsb
sub
adc
cwtl
pop
int3
or
cmp
ret
test
pop
loopne
xchg
je
ss
clc
das
mulb
pop
or
in
sbb
or
sti
inc
out
jmp
xor
mov
mov
call
xchg
or
or
mov
pop
sbb
sbb
addb
insl
sbb
loope
adc
shrl
push
cli
cmp
in
or
jnp
or
mov
ret
ffreep
lock
arpl
lahf
hlt
jp
sub
cmp
pop
dec
pop
dec
fwait
pop
mov
repz
pop
rcr
cmp
cmp
mov
and
jns
pop
jae
ss
call
popa
xor
data16
sbb
jnp
cmp
negl
movsl
mov
fiadds
push
scas
mov
dec
ljmp
cmp
movsb
inc
test
pop
and
ss
ljmp
rcll
in
xchg
add
add
or
sti
sbbl
jp
pop
jo
cmc
mov
pop
nop
mov
orl
jle
fstps
lods
setns
add
imul
popa
mov
adc
pop
mov
ret
sub
cmpsb
cmp
add
fs
andl
inc
cli
push
aaa
andl
shlb
xor
cld
mov
imul
xor
dec
in
js
xchg
xor
mov
sub
jge
xchg
push
comiss
jb
push
jnp
call
mov
push
add
mov
pop
adc
jge
insb
add
add
and
adc
jmp
call
call
je
add
xor
stc
je
ljmp
adc
add
pop
mov
and
cld
nop
push
shl
mov
call
pop
cmp
or
sub
cmpl
xchg
ret
xchg
xchg
hlt
add
stc
or
sti
idiv
cli
in
mov
add
push
std
das
flds
pop
lcall
jns
mov
mov
outsl
cmp
add
inc
push
scas
mov
mov
mov
pop
mov
test
jb
mov
mov
aad
push
mov
call
mov
sbb
loop
xlat
pushl
sbb
cld
mov
pop
insb
mov
sub
mov
insb
aaa
mov
fsubr
jae
fwait
pop
sbb
sbb
jbe
enter
popf
push
add
testb
addb
dec
fsubrl
xorl
mov
cli
or
mov
bound
fmul
hlt
and
mov
dec
mov
outsb
and
sarb
jecxz
mov
inc
je
inc
and
dec
mov
xchg
adc
pop
adc
fadds
jg
dec
pop
test
jae
mov
sub
pushf
pop
cld
icebp
pop
xchg
les
mov
adc
scas
lods
testl
xlat
xchg
outsl
into
cmp
add
iret
incl
sub
mov
mov
ds
xor
mov
push
loopne
xor
dec
bound
jns
fiadds
je
xor
sahf
fstpt
lret
and
or
hlt
cmp
lods
lcall
fnsave
mov
stos
and
mov
outsb
pop
xorl
add
sbb
cmp
inc
clc
pushf
push
pop
inc
fldenv
mov
push
cmpsb
ss
adc
sbb
arpl
mov
insl
jno
sbb
cmc
lahf
pop
aaa
nop
fnstenv
lds
sbb
fdivp
push
aas
mov
insb
mov
cmpsb
out
add
xor
scas
mov
mov
dec
sub
jae
inc
popf
push
adc
scas
mov
push
int3
jg
into
push
jecxz
jg
out
cmpsl
inc
test
scas
call
adcl
jmp
xor
movsb
gs
ja
mov
mov
jle
test
leave
xor
ret
push
and
xor
int
sub
adc
cli
cmpsl
mov
jle
cli
fwait
jbe
into
dec
gs
mov
ss
test
mov
xchg
sub
cld
xlat
xchg
mov
mov
repnz
lock
in
popa
daa
loop
fnstsw
cld
fsubrl
aaa
mov
xchg
test
lods
adc
mov
nop
ret
inc
push
push
aam
push
jnp
xchg
xchg
ret
mov
push
push
repnz
shll
js
jl
cmc
pop
sub
sarl
inc
std
data16
and
jl
xor
les
stos
les
xor
push
mov
adc
cmp
xchg
mov
mov
sbb
mov
mov
adc
je
and
orb
std
add
aad
aam
jb
call
inc
out
repz
push
adc
or
ret
cmp
in
push
add
popf
scas
sbb
test
sub
sarb
mov
out
aaa
lret
test
or
lods
inc
aam
and
and
test
stos
fisubrl
popf
mov
in
gs
sbb
sbb
in
pop
jne
pop
mov
imull
mov
popf
sub
dec
imul
sbb
fmuls
jae
mov
or
sub
out
jo
pop
cld
lret
pop
pop
jmp
roll
and
rorl
push
scas
in
ret
jl
pushf
push
or
repnz
adc
fs
and
xor
dec
cmp
jg
inc
cmp
sbb
repz
sub
in
xchg
pushl
fwait
ds
and
push
test
fmul
lahf
push
enter
dec
sbb
outsl
adc
andl
insb
in
popa
out
lret
push
mov
lahf
sti
mov
mov
and
and
fcoml
fistpl
nop
rcl
mov
notl
push
imul
mov
das
push
mov
mov
push
test
loop
and
mov
rol
cmp
xor
sub
cmc
pop
imul
subb
cmc
stc
sub
xor
mov
jns
pop
add
lahf
adc
fcoml
cwtl
lods
arpl
pop
stc
dec
xchg
jmp
mov
lcall
sub
mov
jns
aad
xor
fadds
xor
repnz
xchg
ss
not
movsl
repz
add
mov
andb
in
fldenv
mov
bound
sahf
out
icebp
and
fsubl
sbb
or
inc
or
dec
add
cmp
ss
mov
test
mov
aaa
mov
mov
jne
push
aas
pop
lds
push
inc
cmp
sbb
and
push
pop
nop
xchg
inc
fwait
jg
push
fiadds
push
lods
clc
pusha
xchg
fs
xchg
popa
pop
cltd
fnstenv
cmp
push
pop
inc
add
out
aaa
and
ret
insl
sbb
or
rol
mov
popf
rcll
mov
scas
adc
je
lds
push
mov
or
jg
cmp
dec
cmc
jge
inc
in
pop
xor
ret
jns
mov
or
xchg
pop
insb
sub
ss
pop
mov
push
add
push
fiadds
dec
punpckhdq
push
imul
push
mov
cmpsl
in
xchg
push
inc
adc
mov
cmp
sbb
cmp
mov
pop
lahf
daa
pop
pop
pop
das
in
repnz
jbe
xor
xchg
pop
and
sub
adc
mov
aas
daa
movsl
mov
lcall
sub
int
insl
pop
int3
fmuls
cmp
insb
add
adcb
jns
mov
icebp
aas
call
repnz
push
shlb
sub
dec
jns
sahf
or
mov
xorb
into
push
xlat
push
data16
mov
fsts
aam
mov
and
aaa
or
dec
or
sub
insb
mulb
je
popf
ds
insb
jns
pusha
out
adcl
std
and
insl
repz
pop
push
inc
inc
aad
out
dec
jne
js
pop
icebp
add
outsl
add
test
lcall
push
jns
add
mov
dec
pop
pop
jmp
xchg
mov
jecxz
das
aas
xor
mov
hlt
jns
mov
rcll
stos
enter
xor
pop
mov
testl
mov
jbe
std
cmp
rorl
xor
cmp
dec
stc
cmp
fisttps
xchg
push
int3
lahf
add
jno
dec
icebp
stc
xor
inc
adc
xor
mov
lods
lock
dec
subb
insb
nop
imulb
push
xchg
mov
dec
and
test
push
push
inc
push
sbb
iret
test
dec
outsb
cmp
pop
rclb
add
sti
xlat
xor
inc
mov
mulb
lahf
subb
stos
arpl
mov
nop
inc
mov
push
jo
xchg
inc
mov
sub
mov
or
in
icebp
clc
insl
sahf
inc
test
or
imul
jp
push
or
sub
and
pop
mov
nop
mov
pop
rep
mul
inc
mov
cmpsb
jno
mov
xchg
rcll
and
xor
lods
fisttpll
out
pop
inc
mov
dec
les
add
dec
jno
shrb
test
mov
pop
fbstp
mov
aaa
icebp
inc
cs
sbb
or
xor
pop
or
push
sbb
sar
xchg
pop
sahf
fiadds
add
movsl
xor
popa
out
jo
and
enter
sbb
mov
and
arpl
mov
lea
dec
inc
sub
call
mov
movsb
int
xchg
jb
xor
hlt
xor
daa
aas
lret
pop
repnz
out
sti
push
and
add
sub
popf
xor
andl
mov
ljmp
or
fstl
imul
pop
addr16
aam
push
lret
popa
jne
fnop
in
adc
add
mov
and
push
mov
sub
sub
jb
lahf
adc
or
loopne
sti
in
pop
inc
jl
les
cwtl
ret
lret
pop
loop
sbb
xor
js
pop
mov
inc
mov
scas
cli
aad
adc
rclb
mov
dec
inc
fsub
loop
shrb
imul
mov
bound
adc
addr16
rcrb
jge,pn
in
cmp
jg
adc
xlat
lock
mov
and
mov
and
test
fidivrl
cmp
sub
adc
pop
mov
cmc
xchg
add
aaa
mov
dec
pushf
sahf
mov
out
clc
mov
in
sub
lfs
pushf
roll
xchg
cmp
xor
mov
mov
mov
mov
lock
lcall
les
jns
ret
das
push
repz
dec
lahf
filds
adc
dec
mov
adc
or
fldenv
cmpsl
dec
jb
jns
movsl
xor
pusha
stc
xchg
nop
lea
pop
ljmp
fstl
jns
push
xor
dec
cli
mov
fldl
lods
popa
std
ljmp
add
psubd
int
jns
or
push
mov
xchg
inc
adc
orl
js
xchg
pop
imul
xor
mov
xor
ficompl
mov
adc
loope
lods
int3
ja
adc
std
push
cmpsb
adc
shl
std
xchg
jge
xor
adc
jl
cmp
dec
push
stc
xor
imul
mov
cmp
sub
hlt
mov
sbb
icebp
push
cmp
shlb
bound
lods
in
out
in
mov
fidivrl
inc
adc
mov
test
cmp
push
popa
loopne
aaa
decl
cmc
aad
lret
fld
aam
adc
push
ss
push
mov
clc
inc
and
loope
aam
sub
adc
movsl
xchg
scas
fstpl
idivb
loop
sbb
pop
mov
jl
out
push
mov
jno
sub
lea
ljmp
out
mov
mov
movsb
jb
jl
pop
lahf
stos
in
xchg
dec
pop
and
and
inc
lret
stos
dec
sub
int
je
pop
int3
rolb
sub
into
lret
mov
jo
push
in
xor
sub
outsb
mov
dec
call
fnstsw
leave
bound
das
lahf
ljmp
int3
arpl
and
cld
dec
in
jne
inc
cmp
shrb
stos
sub
and
xorb
mov
adc
clc
push
xlat
and
ficoml
gs
test
jb
inc
xchg
dec
and
fs
mov
jl
testb
cmpb
or
shll
adc
fs
in
push
sub
and
in
xchg
xchg
dec
mov
lea
inc
dec
int3
sbb
xor
push
mov
push
imul
sti
sub
dec
scas
sti
ret
arpl
ljmp
jbe
movl
imul
pop
jae
pop
or
clc
push
pushf
and
es
sbb
push
cmp
aam
stos
loope
mov
sbb
iret
xor
cmp
outsb
xchg
fldenv
mov
nop
test
xor
je
movsl
xor
jmp
int
or
or
push
inc
pop
outsb
inc
pop
and
add
xchg
cld
mov
push
std
add
add
sub
ds
lds
and
movsl
aad
sbb
inc
dec
xor
pop
cmp
jno
roll
pop
sahf
sub
add
gs
hlt
nop
movsl
ret
addr16
rcll
rcl
cmpb
push
nop
lds
imull
clc
mov
call
xchg
je
xchg
xchg
int3
cs
xor
mov
and
inc
adc
add
bound
mov
movsb
sbb
movsb
enter
jl
adc
dec
aam
adc
pusha
in
stos
mov
pop
lods
popf
xchg
push
inc
imul
sbb
fwait
push
out
and
ja
clc
cmp
pop
enter
mov
fisttpl
or
addr16
mov
int
xchg
lret
mov
add
jo
adc
mov
addb
pop
into
daa
les
jnp
cwtl
mov
jmp
shll
sbb
test
push
je
out
test
cmp
xchg
inc
fnstsw
fs
mov
sahf
mov
sbb
push
sarb
shll
adc
mov
and
add
in
fnsave
lcall
mov
jno
cltd
scas
daa
jno
into
pop
pop
adc
addr16
js
jno
cmp
or
inc
jae
pushf
arpl
pop
cld
add
add
lods
xchg
imul
jl
hlt
pop
fwait
jle
cld
xor
inc
xor
roll
xchg
mov
push
test
int3
lds
push
icebp
lret
sub
inc
decb
imul
xor
push
jae
std
inc
idiv
icebp
icebp
mov
push
stc
pop
cmp
xchg
mov
ret
call
lahf
jno
ror
mov
int3
call
loop
add
sti
stc
imul
repnz
sub
scas
mov
ljmp
pop
sbb
repz
sbb
fisubs
sub
xchg
mov
scas
pop
sarb
es
lret
adc
sub
flds
ret
sub
push
add
mov
cmp
loopne
push
pop
ret
fidivl
lret
push
push
stos
aad
test
xchg
stos
xchg
pop
xchg
fwait
cmp
packsswb
mov
dec
bound
shrl
add
push
or
sub
sub
shrb
xorl
loope
mov
scas
xchg
sbb
xor
jmp
in
and
sub
lds
jne
jns
mov
mov
push
test
jae
inc
xor
sub
int3
arpl
shll
pop
adc
push
adc
adc
ja
xor
sub
fmuls
into
movsl
sub
lds
mov
dec
xchg
loop
insl
push
stos
shlb
imul
add
xlat
push
adc
scas
aad
mov
int
stos
fmull
fdivrl
dec
and
and
jl
enter
sub
and
jns
gs
mov
pop
xor
daa
cwtl
ficompl
cmpsl
aad
or
sbb
in
jg
pop
push
dec
scas
lods
jbe
fsts
or
mov
mov
or
and
sub
mov
in
add
ds
push
lret
pop
xchg
cmpsb
add
addr16
shlb
push
cmp
in
inc
pop
fisubs
jecxz
fadds
adc
aad
daa
lds
and
flds
cli
mov
sub
xor
fiaddl
es
loopne
mov
leave
fists
and
out
faddp
push
xor
rorl
test
add
fprem
mov
ljmp
aas
xchg
aaa
inc
out
fisttpl
call
jle
jbe
mov
aaa
dec
test
cmpb
jb
mov
ss
mov
push
add
sub
push
sub
mov
in
fildl
xlat
push
adc
adc
inc
pop
int3
mov
aam
or
mov
push
pop
xor
sub
xor
lods
inc
movsb
jb
mov
or
aaa
aam
orb
mov
mov
lcall
fimuls
add
subb
mov
arpl
clc
data16
iret
and
aas
cld
dec
movsl
int
dec
fcmovne
leave
xchg
ret
inc
fstl
mov
faddp
xor
pop
aam
dec
mov
outsl
loopne
test
insl
cs
outsl
dec
in
nop
jae
sbb
dec
pop
inc
xor
sub
pushf
pop
addr16
mov
les
and
inc
dec
mov
test
xchg
pushf
mov
mov
out
pop
pop
fsubrp
addb
pop
inc
jmp
fisubs
jae
pushf
pusha
aas
jg
inc
push
pop
mov
call
fisttpl
pop
in
adc
std
idiv
push
fimuls
jno
add
loope
jmp
stos
shlb
mov
dec
jb
pop
dec
cmp
mov
js
lcall
mov
lock
mov
cmp
pop
pusha
mov
flds
mov
mov
test
or
stc
aam
jb
sub
in
cli
pop
jno
jne
cltd
fidivrs
jbe
imul
outsl
outsl
xor
outsl
iret
es
fmull
test
out
mov
mov
adc
jmp
ret
sarb
lock
in
aad
xlat
test
adc
jno
or
mov
xor
inc
adc
icebp
jo
dec
ret
push
in
sbb
std
ss
cltd
fidivrl
cmpsb
push
cmp
sub
sbb
jbe
jmp
dec
repnz
loop
stos
mov
je
in
mov
gs
cmp
inc
mov
push
call
pop
in
outsl
sbb
pop
or
cmp
and
or
sarb
adc
xor
mov
in
movsb
std
ljmp
push
loop
sahf
pop
orl
mov
mov
ss
cmpsb
mov
sub
sti
incl
out
mov
fwait
xchg
push
out
xchg
jle
daa
adc
sti
jmp
push
ljmp
inc
sbb
mov
movl
stos
ljmp
mov
push
imul
xor
pop
mov
lahf
pushf
cld
adc
mov
or
ljmp
cwtl
call
add
lods
jb
scas
fldl2t
jp
mov
sbb
or
ja
jno
xchg
ret
insl
mov
insl
push
add
push
mov
fbld
xchg
mov
sub
push
sti
push
movb
mov
les
scas
mov
scas
call
imul
pop
lahf
mov
cmp
cmp
mov
xchg
repnz
int
scas
sbb
add
jns
movlps
cltd
call
add
xchg
add
dec
les
or
xchg
xchg
sbb
xchg
dec
dec
sti
les
mov
loop
aaa
adc
mov
movsl
lret
cmp
sub
adc
mov
cmc
cmp
es
iret
xchg
in
aam
sub
popa
sub
push
cltd
push
out
push
cmp
jge
mov
ret
cmpsb
rcl
fcomi
aam
ret
push
pop
dec
adc
shufps
dec
jecxz
rcrl
dec
jl
add
mov
pop
stos
in
xchg
pop
je
mov
sbb
addr16
xor
rep
push
test
dec
or
pushf
xchg
cmp
pusha
leave
lods
push
pop
mov
dec
push
dec
cld
cmp
jge
and
das
aas
popa
xchg
jg
adc
popa
jmp
add
rclb
fisubrl
decb
nop
sbb
mov
arpl
bound
data16
bound
cmc
scas
fdivrs
pop
in
lods
cld
adc
push
or
cld
jae
jns
repnz
decl
shlb
add
sbb
ja
jns
dec
fnstsw
sbb
lahf
or
jb
shl
pop
and
fwait
repnz
test
adc
aaa
jmp
mov
mov
xchg
repz
xor
or
sbb
mov
repz
repz
cltd
jo
xchg
sub
pop
ret
je
loope
and
mov
dec
mov
arpl
loopne
loop
xchg
push
push
iret
sub
fwait
add
inc
scas
mov
xadd
movsb
xor
or
jo
stc
sahf
in
and
inc
loopne
push
not
jl
mov
outsl
call
and
sbbb
jae
icebp
adc
xchg
sub
pop
mov
push
mov
loop
fisttps
roll
cmp
pop
mov
leave
cmp
repnz
pop
xchg
imul
out
lret
dec
mov
lds
sbb
shll
fsubs
pop
mov
mov
stc
jg
or
pop
sbb
rorl
inc
outsl
inc
cmp
dec
cmc
and
ret
inc
cmp
inc
xchg
pop
fnstsw
and
mov
dec
lcall
jge
jp
je
rcrb
adc
enter
sbb
sbb
int
enter
adc
pop
cmpsb
ljmp
sub
in
es
xorb
cmp
out
out
into
push
cmpb
mov
mulb
rcll
stos
lds
jne
lea
sbb
mov
sti
push
les
mov
jmp
adc
repnz
mov
and
inc
fldenv
jl
ljmp
add
adc
cmp
adc
imul
adc
cmp
mov
lds
or
xor
add
add
fmull
cmp
jne
in
lds
lea
ljmp
mov
iret
xor
jnp
mov
jge
dec
movsb
cmp
pop
sub
ljmp
mov
xchg
outsb
jne
jnp
call
push
jl
cli
adc
call
mov
fwait
jbe
add
loopne
sub
call
and
fcomi
push
mov
in
in
out
ret
cmp
xchg
adc
push
jp
sub
idiv
inc
cld
push
add
cmp
cltd
push
insb
bound
sub
pop
aad
mov
fmul
pop
mov
sbb
into
in
sbb
xor
jo
cmpsl
cmpsl
nop
inc
ficomps
movsb
dec
push
inc
sbb
sub
mov
xor
gs
aad
out
movsb
and
push
cld
icebp
push
clc
xor
in
mov
loopne
test
in
out
pusha
inc
hlt
push
repz
dec
cmp
ret
xchg
mov
jnp
mov
dec
cwtl
add
flds
outsb
xor
sub
cwtl
outsb
test
add
sub
and
gs
push
pop
lahf
and
push
movsl
nop
sti
xor
mov
pop
mov
mov
je
and
imul
xchg
cli
mov
push
mov
mov
insb
je
data16
sbb
mov
pop
jg
jl
insb
adc
mov
cli
push
cmp
test
pop
inc
or
lea
sbb
test
push
lods
and
jbe
xchg
ljmp
xor
aaa
rcrb
fisubl
rcl
or
and
push
mov
sbb
cs
sub
add
mov
sbb
test
dec
fstpt
sub
adc
mov
jnp
adc
jmp
push
in
ljmp
cltd
sub
mov
xchg
lret
sbb
nop
repz
ss
cmp
adc
cmpl
cmp
fnstsw
mov
movsl
xor
xchg
sbb
aas
sub
lcall
ljmp
pop
std
add
pop
scas
fadd
iret
push
dec
pop
mov
repnz
or
mov
aad
push
push
inc
enter
xchg
ss
lods
std
js
add
mov
scas
aam
or
mov
popf
cmp
pop
mov
pop
outsb
stc
aaa
test
popf
ljmp
into
push
push
mov
sub
pop
out
mov
mov
out
sub
inc
lret
and
ds
sub
stc
fdivs
mov
test
mov
pop
and
dec
lcall
lea
xchg
push
or
dec
cmpsl
cwtl
xchg
shll
xor
fiadds
adc
pop
ja
sub
popa
jae
jnp
lock
cmc
or
lahf
sti
lea
mov
adc
mov
sub
and
mov
inc
xchg
xor
jp
mov
push
jp
xchg
mov
jg
je
ret
dec
sbb
test
mov
loop
jge
inc
shlb
cwtl
loop
push
filds
shlb
test
mov
sbb
mov
mov
xchg
or
shr
into
push
loope
hlt
jb
jp
loope
into
gs
popf
fadds
leave
xchg
sub
adc
push
orb
pop
daa
daa
or
xlat
xchg
pop
push
pop
mov
arpl
jbe
fisttpll
xchg
adc
sahf
ds
sub
jb
in
pop
pop
push
xchg
mov
imul
adc
jo
mull
mov
cmp
mov
gs
mov
sub
iret
pop
or
mov
outsl
mov
and
sbb
cmp
and
jae
add
cmp
cmpsl
inc
js
pusha
shlb
test
push
mov
repz
xchg
add
or
cmp
cmp
and
les
sar
push
xlat
rcr
std
mov
jmp
stc
xchg
mov
sub
add
jo
nop
cmp
out
sbb
insb
add
sbb
adc
mov
leave
rolb
mov
push
pop
repnz
popa
fisubl
scas
bound
mov
adc
mov
fcompp
xor
out
jg
inc
ret
sub
into
push
mov
sbb
das
xlat
ja
scas
xchg
enter
ret
js
adc
adcl
mov
repz
adc
push
and
add
pop
cmc
push
out
repnz
mov
xchg
je
iret
cmc
and
jle
push
inc
addr16
ljmp
lock
test
gs
sub
jge
cmp
jp
outsl
fisttpll
xchg
mov
mov
sahf
jne
mov
xchg
call
sub
das
arpl
mov
lea
test
lret
mov
mov
sbb
call
push
pop
mov
mov
cwtl
mov
test
add
xor
sub
subb
shlb
mov
rdrand
push
inc
out
xor
outsb
mov
fs
in
mov
jg
cs
cmpb
and
pop
push
ret
pop
mov
aaa
ret
xlat
xchg
ret
fsubl
mov
pop
sbb
jg
arpl
fsubrs
mov
fwait
andl
mov
jbe
mov
jb
lcall
or
or
jae
or
out
adc
enter
dec
and
in
dec
cmp
rcrb
dec
stos
sbb
add
and
inc
inc
ljmp
dec
push
mov
int3
insb
jge
test
addr16
les
lahf
jae
popa
sbb
aaa
stos
dec
mov
xchg
sub
inc
jbe
hlt
fdiv
in
fcomi
cmc
fistpl
ljmp
imul
pop
sbb
ret
jo
sub
stc
push
pop
or
cwtl
popa
pop
movsb
popa
test
jp
sub
fistpl
fimuls
cld
dec
out
cmp
bound
rolb
pop
in
and
sti
xchg
sahf
repz
les
xor
push
cld
inc
sysenter
stos
fs
mov
leave
adc
mov
adc
cmp
dec
xor
sbb
es
jo
push
and
mov
mov
xchg
jle
leave
fstps
out
aaa
xchg
and
mov
xchg
addr16
mov
mov
cmp
ds
dec
inc
cmp
dec
outsb
sti
in
adc
es
dec
or
iret
jae
mov
xchg
enter
fldt
adc
icebp
stos
movsb
pusha
ljmp
push
fiaddl
adc
push
and
mov
ret
pop
lea
inc
push
lret
filds
mov
sbb
add
xorl
xlat
pop
scas
repnz
lods
mov
mov
jp
in
or
andb
push
pusha
das
fcmovu
jmp
inc
loope
mov
mov
pop
dec
jp
and
dec
and
xor
mov
pop
pop
inc
mov
lods
sarl
ljmp
popa
int
mov
or
jo
rcl
insl
sbb
and
sub
fcom
and
flds
fisttps
jg
outsl
fwait
and
mov
mov
fisttpll
xor
xor
push
xor
inc
fcmovbe
hlt
fwait
mov
mov
btr
sahf
pop
aaa
dec
adc
mov
dec
hlt
inc
sub
bswap
xor
push
icebp
or
and
insl
aad
sbb
les
inc
push
dec
outsb
adc
dec
push
or
sub
add
pop
and
jnp
in
push
lods
ja
mov
sti
adc
xchg
cmpb
fs
xor
cmp
mov
jecxz
adc
or
or
dec
or
adc
pop
fsts
bound
testb
cld
jno
mov
fsubr
mov
gs
inc
push
cmp
and
imul
mov
inc
bound
pusha
fldl
lods
mov
jne
cmp
jnp
push
stc
mov
cwtl
lea
stc
sahf
mov
sub
adc
lock
cld
in
loope
mov
jbe
inc
rolb
xchg
ds
outsl
adc
pop
arpl
add
mov
cmp
cmc
sarl
mov
mov
in
shll
push
push
cli
sbb
bound
jp
or
loop
daa
in
in
mov
movsl
mov
out
mov
mov
das
and
cmp
xor
ficoms
dec
and
pop
xchg
lds
sub
mov
jne
into
jnp
mov
mov
jg
adc
lea
add
mov
sbb
cltd
add
cwtl
in
lahf
jp
cmp
cmp
gs
cmp
cmp
jo
fldt
dec
clc
bnd
fmull
inc
test
pop
push
fistps
pop
pop
push
xor
sbb
pusha
daa
jnp
cmp
pushf
dec
ret
pop
dec
pop
inc
add
jo
scas
movsl
call
scas
shll
mov
inc
ljmp
or
fsubr
cmp
mov
jae
sbb
mov
xor
pop
in
rclb
mov
mov
xchg
push
xchg
mov
daa
fsts
sub
push
or
out
cmp
cmp
jecxz
cmpsl
paddw
inc
ret
pusha
mov
jge
imul
lcall
dec
mov
pop
xchg
push
in
mov
dec
or
fbld
cmp
pop
dec
test
int
cmpsl
mov
pop
add
push
cmpsb
stos
aam
stc
inc
pop
lahf
fwait
mov
add
movb
pop
cld
popa
and
popa
adc
pop
inc
jbe
mov
sub
xchg
outsl
jb
jmp
rclb
pop
cmp
fimuls
and
cmpsl
jae
sbb
loope
out
jne
adc
push
andl
push
inc
movsb
dec
xlat
mov
xchg
mov
pop
pop
aam
filds
lods
adc
mov
dec
call
daa
jbe
sbb
jns
cmp
dec
jecxz
pop
adc
cld
sub
mov
adc
repz
sub
xchg
mov
shll
aam
push
scas
shll
sub
lret
mov
cmp
jmp
or
movsl
cli
pop
jns
push
xor
pop
sbb
cmp
clc
lods
js
dec
not
clc
out
mov
dec
lret
push
jne
xchg
ja
xor
xchg
loopne
std
std
test
in
fwait
cld
arpl
adc
add
pushf
cmpsb
lret
dec
cli
pop
add
enter
push
sbb
sbb
jl
ljmp
mov
decb
sahf
push
lods
rorl
lret
insl
fsubl
cmp
popl
std
ffree
xor
mov
cmp
or
sub
pop
pop
jl
mov
cmp
aam
popf
push
xlat
inc
adc
mov
push
cld
dec
sub
data16
ljmp
sbb
xor
lods
xor
jae
or
mov
jae
cmp
xchg
sub
cli
mov
inc
mov
mov
push
cmp
testb
mov
xchg
pop
cmc
mov
mov
push
jg
inc
adcl
cs
jo
mov
lcall
dec
call
dec
pop
fwait
inc
cli
stos
int3
push
mov
mov
icebp
xor
dec
incb
or
push
xor
or
xchg
and
push
push
mov
shr
jl
cmp
aas
xchg
mov
mov
dec
push
pushf
lret
loopne
fnsave
sub
enter
cmp
int3
mov
jg
lcall
pop
mov
xor
push
sbbb
loopne
fidivl
insl
cltd
xor
pop
mov
cmpsl
xchg
stos
into
addr16
inc
fcmovnbe
mov
das
jge
pop
add
mov
jge
inc
push
mov
ljmp
jne
gs
bswap
into
cmp
xchg
jle
iret
pushf
jp
popf
inc
fdivrs
loopne
in
sub
lret
lods
pop
andl
sbb
lahf
push
imul
lds
cld
xchg
xchg
push
or
jb
mov
loope
xor
lret
pusha
mov
dec
mov
insl
sub
xor
push
int
add
jne
inc
lret
fcoml
cld
pushf
clc
or
inc
out
lcall
and
jle
jne
jp
faddl
cwtl
jnp
repnz
adc
pop
out
aas
pop
inc
ljmp
mov
bound
pop
ljmp
outsb
push
inc
das
stos
push
jle
mov
and
jo
mov
gs
movsl
adc
xchg
jno
and
mov
cmc
popf
pop
int3
into
mov
scas
repnz
dec
xchg
mov
movsb
xchg
notb
mov
xlat
mov
mov
aaa
cmp
addr16
test
data16
fwait
mov
and
addr16
xchg
mov
push
add
xchg
adc
and
fnstenv
push
sar
icebp
sbb
inc
daa
xor
dec
push
mov
int
dec
mov
scas
pop
xchg
jnp
add
lahf
cmpsb
arpl
mov
test
mov
leave
mov
aad
mov
addr16
push
push
sbb
sbb
jo
sbb
fisttpl
clc
jmp
sarl
dec
aad
mov
popf
stc
mov
adc
inc
cltd
push
cmp
roll
lods
cmp
out
cmpsl
ds
out
add
daa
jmp
inc
mul
shrl
mov
out
repz
stos
pop
push
xchg
sbb
adc
addl
dec
mov
ret
jbe
mov
cs
xchg
mov
mov
inc
pop
dec
das
movsb
or
inc
dec
addps
mov
inc
mov
les
pop
xchg
xor
adcb
xlat
ds
in
push
test
in
cmpsb
insl
xchg
mov
sbb
inc
test
in
sbb
test
fadd
or
sbb
popf
inc
lods
pop
int3
add
scas
xorb
ja
movsb
insl
mov
jnp
xor
mov
js
dec
rcrb
loopne
lods
bound
xchg
dec
xor
pop
popf
stos
orps
icebp
ficoms
mov
cmp
inc
dec
test
xor
cld
ja
cmp
dec
shlb
mov
jns
sub
inc
cs
xor
inc
test
in
jo
xorl
rolb
lods
aaa
jp
adc
jl
mov
mov
xor
adc
inc
jbe
adcl
out
aaa
cmp
inc
out
addr16
push
fistpl
pop
inc
jae
inc
outsb
xor
lods
rclb
pop
xchg
ja
xchg
jge
dec
jb
or
loopne
cmc
inc
jp
cmc
mov
jecxz
jg
stc
shrb
lret
mov
mov
push
lock
mov
cmp
add
jb
mov
sahf
cmpsl
lret
and
les
pop
jp
push
int
mov
sbb
jae
jp
dec
mov
lcall
addr16
daa
sbb
and
movsb
add
jbe
xor
mov
cmp
out
sbb
jmp
into
inc
mov
pop
fdivr
jecxz
pop
popa
loope
mov
jne
cmp
mov
pop
inc
arpl
pop
into
lret
jmp
pop
jns
sub
xchg
mov
pop
push
xor
cmp
mov
and
sub
add
add
pop
outsb
aaa
mov
jg
imul
mov
dec
mov
xchg
push
xor
cmovs
cmpsl
and
sub
stos
push
enter
mov
push
adc
rcrl
cmp
xchg
xchg
or
mov
mov
xor
insl
xchg
rcrl
jg
test
and
rorl
mov
xchg
addr16
stos
inc
xchg
pop
test
js
aad
arpl
add
and
jle
jb
adcb
jnp
fbld
and
pop
je
or
lret
shll
inc
mov
or
rcl
out
mov
jmp
mov
push
sub
sub
xor
aas
out
popf
out
in
stos
dec
mov
lret
inc
insb
mov
mov
cwtl
sub
adc
bnd
or
push
sub
bound
int3
xchg
inc
and
mov
jnp
cmpsb
sarb
lock
int3
adc
mov
mov
mov
ljmp
cmp
adc
sub
inc
insb
xor
dec
stos
fdiv
add
popa
ljmp
movb
sub
nop
mov
or
push
loopne
imul
cmc
mov
sbb
sbb
mov
sub
push
mov
mov
xchg
test
mov
mov
in
repnz
iret
into
cmpsl
rcll
inc
shll
test
shlb
xor
inc
fiaddl
je
leave
roll
xor
mov
xchg
push
adc
mov
xchg
mov
mov
add
fstpt
fwait
shl
lret
and
mov
push
xchg
sub
shr
xchg
fincstp
mov
sub
dec
push
mov
fsubl
scas
scas
sti
and
mov
arpl
aam
insl
inc
stos
scas
xor
test
js
outsb
enter
jl
in
pushf
loop
jbe
es
aaa
and
add
daa
jae
push
mov
pop
psllw
and
push
push
mov
sbb
fwait
or
movsb
or
mov
fidivl
pop
stos
scas
test
aam
enter
adc
popf
fstps
das
das
ret
adc
cmpsl
sub
pushf
mov
lret
loope
xchg
or
pop
add
dec
inc
or
push
cmp
mov
or
inc
idivl
ficoml
and
xchg
repnz
and
int3
out
mov
fdivr
mov
dec
scas
jmp
bnd
cmc
mov
popf
inc
js
js
cltd
out
divl
sub
lret
adc
mov
and
out
pop
xor
and
les
test
or
lea
and
adc
mov
xchg
cmp
xchg
mov
js
lret
jns
negb
or
cli
movsb
mov
shll
mov
mov
dec
xchg
je
inc
add
out
fists
repz
imul
arpl
cpuid
adc
push
mov
jo
call
or
mov
cmc
addb
insb
xchg
sub
pop
sbb
jge
inc
dec
xchg
jb
cmp
imul
loopne
mov
mov
jo
mov
inc
fists
flds
xchg
aad
mov
mov
xor
mov
pop
xchg
mov
pop
add
scas
imul
or
outsl
repnz
dec
movsb
lods
or
inc
push
insb
shrl
cmp
shl
xlat
lea
or
ss
test
movsl
out
popa
mov
jne
in
inc
and
fidivl
dec
mov
nop
push
adc
lret
push
xor
pop
mov
insl
pushf
lahf
imul
gs
xchg
mov
dec
dec
mov
pop
push
mov
sub
lret
jp
pop
ss
enter
push
rorb
jnp
pop
add
xor
into
lds
sbb
adcl
adc
xor
int3
xchg
adc
test
jmp
jecxz
pushf
fwait
jg
dec
jae
push
js
and
inc
lods
movsb
push
mov
xchg
hlt
and
outsl
mov
push
cwtl
es
jmp
add
jbe
pushl
pop
sbb
xor
fwait
sbb
adc
fistpl
and
push
faddl
jecxz
adc
jbe
stc
insl
ret
mov
pop
cmpsb
adc
orb
rolb
mov
ss
test
ja
jb
add
pop
inc
aam
add
xor
push
dec
scas
rcl
lods
sub
ss
or
mov
imul
shl
or
sub
hlt
stc
insb
imul
push
push
add
hlt
xor
out
int
call
int3
add
and
jae
daa
scas
orl
ja
lods
inc
add
sti
and
xchg
bound
mov
cmp
int
mov
orl
mov
outsl
cli
repz
or
stos
scas
notl
dec
movsb
std
and
sub
hlt
xor
js
shlb
jmp
stc
aad
mov
in
push
mov
add
sbb
lods
jnp
mov
sarb
jmp
shlb
aas
movsb
gs
into
push
js
adc
inc
mov
fisttpl
cmp
test
inc
pop
clc
ss
imul
fisubl
sbb
dec
mov
cwtl
iret
out
add
ds
aam
pop
aam
gs
push
xchg
xor
mov
pop
cmpsl
adc
mov
mov
aaa
inc
mov
dec
jg
iret
sti
push
mov
fidivl
xor
sub
aaa
aas
dec
dec
loop
insb
lcall
push
and
popf
mov
shrb
pop
mov
lock
adcb
cmc
mov
xchg
xor
push
push
mov
xchg
mov
stc
shrb
jp
pop
jecxz
and
cmp
jg
push
xchg
mov
lahf
stos
or
in
jns
inc
out
jnp
push
arpl
push
leave
outsl
mov
pop
push
xchg
sbb
cli
loop
pop
in
sahf
sub
rolb
shl
fimull
adc
inc
shl
shlb
lods
adc
int
ret
out
in
int3
and
sub
cli
push
test
aam
or
cmpsb
popf
lret
push
mov
inc
inc
inc
clc
repnz
jp
stc
loopne
jmp
test
jbe
sbbl
loop
mov
outsl
cmp
jmp
push
daa
jmp
jg
andl
cmpl
xchg
movsb
lcall
sbb
data16
fs
fistl
push
and
js
pop
int
pop
mov
dec
rcrb
pop
mov
jnp
sub
repnz
add
adc
ss
xor
sbb
push
leave
push
xor
adc
imul
cmpsl
jl
xchg
jb
repz
mov
push
aaa
mov
stc
movsb
and
dec
xor
orl
pusha
cmp
push
fistpl
pop
ss
out
shrl
and
in
js
xchg
ret
sti
aaa
sbb
adc
xor
adc
inc
jb
addr16
cs
test
sub
push
xlat
pop
sahf
lcall
jle
add
mov
dec
cmp
mov
aad
push
cmc
mov
sahf
std
cmpsb
lods
int3
pop
cltd
xor
out
subb
mov
out
shrb
jno
xchg
mov
jae
mov
or
cltd
das
js
jmp
ljmp
lret
dec
cwtl
mov
jge
jne
add
push
imul
shrl
out
sbb
sbb
push
xor
sbb
cmpsl
nop
lods
lcall
dec
js
clc
dec
imul
fwait
addr16
pop
cld
es
push
inc
popf
dec
sub
xlat
pop
into
lcall
mov
pop
mov
inc
pushf
sub
repz
lret
push
cmp
xchg
inc
jb
cmpl
rolb
push
nop
jmp
inc
pusha
test
dec
lods
loopne
lcall
adc
mov
adc
inc
dec
outsl
dec
add
inc
add
in
test
and
xchg
dec
pop
hlt
jg
lret
loopne
mov
push
jmp
push
push
clc
stos
mov
scas
test
leave
cld
cld
fmull
cmpsb
push
dec
add
pop
mov
adc
shlb
fimull
or
testb
adc
sbb
neg
or
inc
add
pop
mov
orb
jbe
xor
xchg
cmp
scas
push
or
dec
xchg
dec
and
orl
jno
sub
dec
popa
loopne
push
cs
dec
out
inc
cld
fwait
movsl
fcomps
push
sbb
push
add
add
pushf
insb
push
cwtl
stos
lods
mov
mov
inc
or
cmp
push
push
data16
jae
leave
pop
rcrl
scas
scas
mov
cmp
push
out
out
imull
je
and
aad
pop
xor
inc
popa
lds
nop
mov
mov
leave
pop
add
mov
jbe
xor
fisttps
pusha
ja
nop
fcoms
pop
bound
sbb
push
jae
cmp
mov
cs
mov
inc
lds
loopne
sahf
mov
bound
add
je
mov
mov
cmc
lret
daa
mov
fisubs
test
pop
xchg
inc
jmp
les
xchg
icebp
leave
xor
mov
addr16
pop
fdivs
das
scas
lods
sbb
add
stc
dec
adcl
push
or
cmp
and
arpl
in
idivb
cs
mov
pop
imul
cmp
mov
fwait
dec
stos
jb
test
aad
xchg
cmpsl
jne
lret
mov
pop
insb
faddp
je
mov
sahf
adc
mov
cmc
in
into
adc
or
mov
jo
xor
dec
jl
dec
mov
xchg
decb
enter
pop
jo
inc
stos
mov
or
sub
xchg
sahf
cmp
roll
mov
jecxz
sahf
mov
leave
mov
sbb
inc
dec
mulb
int3
aaa
imul
and
insl
test
push
or
mov
lock
test
sbb
std
repz
xor
gs
int
aad
ss
fsubrs
dec
pop
fidivrs
cli
inc
add
sub
dec
hlt
xchg
pop
mov
jae
add
xchg
mov
loopne
dec
adc
mov
gs
sbb
rcrb
add
sahf
sbbl
fildll
xor
orl
cmp
mov
cld
addr16
pop
subb
cli
in
shll
repz
cmc
pop
outsb
fstpl
fs
mov
fdivl
cmpsl
aaa
inc
lcall
adc
test
jns
dec
pop
dec
jge
leave
imul
in
sbb
adc
ret
lret
loopne
dec
out
push
push
sti
dec
jno
imul
je
dec
pop
cmp
in
test
test
inc
insl
lods
jb
jmp
sub
push
insl
sub
add
xor
push
sub
mov
ret
push
cmc
xlat
jno
xor
fprem1
rcl
sbb
xchg
xchg
shl
out
jne
rorb
daa
int
jne
negb
push
adc
mov
ljmp
push
aaa
cmpsl
nop
add
mov
pop
jae
pop
xchg
and
pop
stos
and
daa
xor
stos
or
push
lock
jecxz
or
out
ret
mov
and
and
pop
jl
iret
pop
lahf
fnsave
outsl
call
cld
icebp
into
lret
and
sbb
inc
es
push
mov
dec
lahf
sbb
inc
xor
ja
mov
cmp
add
dec
arpl
insb
xchg
and
xor
push
enter
shrb
pop
pusha
jmp
shlb
mov
outsl
cmpsl
shlb
addr16
popa
mov
dec
ds
xor
jae
xchg
jbe
je
push
subb
mov
mov
arpl
xchg
shrl
add
dec
mov
sub
jmp
fwait
pop
inc
in
jecxz
pusha
pop
frstor
adc
add
pop
dec
imul
xor
xor
or
and
es
movsl
insb
fsts
faddl
mov
pushf
fbstp
imul
mov
insl
pop
mov
das
repnz
ja
in
fimuls
ror
or
fistl
lcall
std
stos
jae
and
incl
scas
sub
push
jo
stos
decl
xchg
test
mov
gs
inc
xchg
mov
mov
sub
jns
mov
or
push
xor
xchg
stos
in
or
aam
loopne
or
add
mov
and
aad
xchg
call
jbe
xor
fsin
cmp
jmp
inc
sub
rcrl
aaa
sbb
mov
push
add
pop
pop
test
ja
std
push
scas
push
imul
cmc
adcb
aas
stos
adc
sub
iret
ja
bound
int3
roll
je
sbbl
pop
daa
hlt
gs
loop
mov
pop
addr16
in
imul
icebp
into
cmp
mov
sbb
add
call
sarb
jbe
daa
insb
ss
fldl
mov
das
out
testb
add
out
cmp
xchg
xchg
fcomps
jo
pop
or
jge
dec
int
imulb
loop
test
repz
inc
in
mov
aam
gs
xchg
ret
mov
mov
sub
mov
addr16
lret
pop
and
loop
and
push
scas
leave
enter
add
cwtl
aas
pop
push
push
push
lods
sub
and
fisubs
aas
lea
push
adc
jbe
imul
jno
sahf
nop
out
rcl
pushf
cli
cmovp
leave
call
mov
add
out
dec
mov
cmc
pop
jecxz
arpl
mov
or
cmp
cmp
sti
out
cmp
add
xor
jo
std
sub
int
sbb
sbb
lea
xchg
or
mov
outsl
mov
dec
pop
or
inc
mov
mov
jge
movsl
jae
push
xor
pusha
push
xchg
adcb
sub
xchg
mov
popf
js
and
mov
insb
fildl
rolb
sub
sbb
mov
in
arpl
inc
mov
clc
cmp
add
dec
nop
scas
push
stos
leave
fldenv
dec
dec
fsubrs
sub
push
jb
xadd
popf
fiadds
xchg
sbb
mov
fwait
push
push
outsl
in
jno
mov
push
mov
jle
or
int
or
pop
pop
xchg
mov
cmpb
pop
jl
push
xchg
inc
jl
inc
popf
mov
lret
std
or
mov
repnz
dec
xor
inc
adc
pushf
pop
inc
add
data16
jl
leave
jbe
insl
mov
sbb
icebp
outsb
in
aaa
in
cmp
jbe
ret
push
lcall
dec
xor
and
xchg
xor
divl
adc
mov
push
sbb
sti
mov
or
pushf
dec
mov
scas
push
je
mov
cltd
in
jecxz
jo
arpl
fistl
std
les
cmp
mov
push
xor
and
sbb
mov
cmp
push
pop
pop
jp
das
fimull
sub
lahf
mov
and
rcr
lret
mov
arpl
and
pusha
iret
sbb
insb
dec
out
popf
fdivrl
or
inc
dec
push
inc
push
adc
fildll
cmp
xchg
lar
cwtl
fnstcw
bound
adc
push
jbe
movsb
rclb
pop
jge
fnstsw
xchg
sub
cs
ret
adc
inc
pop
jmp
stc
out
std
jo
jne
mov
sub
nop
pop
mov
das
pop
xchg
ficomps
xchg
sbb
in
jns
xor
cmp
jb
lahf
add
hlt
cmpsl
adc
adc
xlat
mov
hlt
sbb
push
sub
pushf
int3
add
pop
mov
ds
xchg
sub
cli
mov
pop
imul
jae
pop
push
cmc
fcomps
push
loop
fisubrl
mov
outsl
out
pop
adc
andb
push
loop
sbb
scas
inc
int
mov
push
mov
fdivrl
sar
hlt
hlt
fistpl
lods
aas
shll
hlt
push
mov
xor
or
aad
and
inc
jl
and
fldt
imul
jg
sti
add
sbb
or
mov
dec
push
frstor
inc
int
cmp
or
xchg
outsb
jnp
push
sub
shrl
jns
xchg
scas
roll
inc
jge
pop
outsb
pop
and
js
cmc
stos
xchg
add
mov
jecxz
mov
dec
xchg
nop
lret
mov
sar
fs
mov
push
adc
adc
push
notrack
fwait
es
xchg
mov
in
in
sbb
xchg
rcll
das
xchg
mov
cltd
push
scas
mov
jl
push
in
repnz
xor
mov
push
jp
fucomp
aaa
lods
cld
data16
lret
lret
pop
sbb
imul
sbb
subb
int
fstpl
nop
dec
adc
int
sbb
cmp
test
cwtl
sbb
jge
inc
push
je
xchg
aaa
mov
dec
or
lock
mov
xchg
cltd
inc
jge
paddd
and
scas
sbb
cmpl
nop
push
jae
pop
sbb
pop
sbb
pop
out
mov
das
std
mov
jecxz
cmpl
repnz
mov
fisttpl
mov
int
jge
js
sbb
into
movl
or
sar
push
das
push
rclb
mov
mov
xlat
mov
xor
ror
in
jno
shrl
fadd
outsb
xchg
push
es
loope
adc
cmp
lock
into
loop
outsl
in
adc
mov
and
int
xor
xchg
cmp
pop
adc
mov
iret
and
lea
cmp
mov
jns
pop
mov
js
add
fcmovnb
add
pop
shlb
pop
sub
pop
aaa
shl
push
test
call
pop
sub
popa
jo
inc
push
xor
xchg
in
stos
mov
aad
jmp
add
inc
out
imul
cmpsb
xchg
xor
mov
bound
xchg
lret
lcall
movsl
rolb
adc
sub
sub
and
jno
loopne
mov
dec
mov
mov
out
add
lods
shll
cmpsl
or
imul
cltd
out
jae
pop
push
add
push
mov
pop
ljmp
mov
insb
dec
loopne
or
mov
push
fwait
pop
test
in
mov
jae
sti
not
movsl
jle
scas
cmpl
scas
pop
push
jle
adc
inc
xchg
mov
adc
in
jns
aaa
lahf
decl
jb
dec
mov
sbbl
dec
mov
data16
shl
int
ror
shll
iret
pop
or
jg
mov
sub
cli
adc
dec
imul
and
mov
cld
addr16
sub
mov
scas
or
fsubl
mov
xchg
push
insb
or
mov
xchg
js
js
mov
hlt
sub
ret
pop
testl
jns
roll
dec
mov
xor
lock
xchg
ja
add
mov
xchg
xor
cld
cmp
int3
cltd
jns
or
movsl
push
lret
aad
sub
add
jo
adc
add
int3
and
sub
adc
push
push
and
inc
das
mov
shrb
jl
add
pop
int3
sbb
cmp
movsb
in
or
and
pop
adcb
or
jge
xchg
cli
aam
icebp
lcall
sub
jnp
jno
iret
ja
or
outsl
adc
aaa
loop
xor
inc
cmp
int
xlat
rclb
pop
loopne
mov
jl
xor
jg
or
mov
xor
lret
mov
sti
cmp
add
enter
test
sub
test
fs
movsl
test
sbb
or
or
cwtl
and
mov
test
xor
or
xor
xchg
and
je
cmp
in
mov
mov
dec
shr
mov
jecxz
add
pop
repz
test
je
gs
xchg
jo
pop
pop
gs
aas
or
aas
lea
icebp
jge
int
cltd
jge
push
in
jmp
ss
ja
mov
cmp
js
mov
jo
btr
pop
ret
jae
mov
ljmp
fimuls
repnz
push
or
pop
xlat
adc
aam
adc
pop
mov
sti
adc
xor
push
inc
int
sub
jb
jb
pusha
dec
hlt
jl
movsb
mov
and
movsl
push
arpl
sub
xchg
fidivs
cmp
lods
sub
add
insb
mov
je
mov
jecxz
jge
aad
insl
fldcw
out
mov
rclb
pop
lods
or
enter
adc
mov
test
cmp
loope
xchg
pop
cli
jne
mov
xor
xchg
xor
sub
fs
jbe
enter
in
dec
sbb
dec
test
nop
xchg
adc
sub
aas
inc
int
jmp
movsl
add
sub
lcall
int
jle
push
addr16
xor
sarb
mov
xor
pop
mov
cmpl
popf
mov
mov
mov
jnp
mov
jns
lock
jbe
jle
ret
addb
faddp
out
xorb
leave
fs
filds
pop
push
add
jae
add
dec
mov
cwtl
bound
subl
mov
inc
js
nop
shl
addr16
push
adc
nop
cmp
jo
jl
dec
mov
fdivr
sub
push
aad
cmpsl
xor
ss
rcr
xor
lret
xchg
mov
lods
jp
push
in
jmp
pop
hlt
das
insb
lea
arpl
cmpl
jge
daa
and
repnz
or
je
push
outsb
mov
leave
pop
adc
scas
mov
std
enter
mov
and
lods
cmp
jg
mov
mov
mov
int3
scas
inc
shl
sub
movsb
mov
mov
inc
xchg
sub
add
bnd
leave
cld
inc
xor
fcoml
movsl
dec
addr16
ds
inc
ret
pushf
jns
cmpsb
jno
sub
sbb
or
adc
push
nop
daa
sarl
mov
jle
ffree
pop
jno
mov
hlt
aam
jle
es
pushf
and
push
sahf
inc
add
in
outsl
movsl
cmpsl
in
jge
or
popf
popf
inc
ja
and
mov
divl
lret
and
test
push
sub
cld
das
mov
hlt
inc
sub
fiadds
jo
inc
pusha
sbbl
aas
sbb
mov
nop
jns
adc
hlt
fsubr
fcomps
sahf
ffreep
inc
inc
xor
push
sbb
and
mov
out
mov
inc
clc
int3
inc
movsb
add
and
hlt
in
dec
and
inc
cmp
cmc
int
lahf
jl
es
es
and
orb
or
int
sub
aas
mov
or
addr16
dec
cmp
xchg
push
fadds
divl
cmp
pop
mov
insb
or
push
clc
repz
in
inc
cmp
sahf
add
movsl
push
xor
ja
int
push
data16
jne
testb
cmp
and
fsubrs
in
or
mov
mov
sub
flds
cmp
jle
lret
mov
icebp
test
popf
xchg
xchg
outsb
jmp
mov
movsb
mov
sbb
sti
cmpsb
sbb
cmp
mov
pop
lret
nop
pop
repz
das
out
add
lea
in
mov
imul
xchg
stos
and
ljmp
dec
rclb
fs
dec
sbb
iret
sub
pusha
pop
push
sar
scas
jmp
shll
mov
call
es
adc
dec
lret
in
in
nop
push
push
pop
pop
inc
push
jb
fstps
es
or
mov
adc
fidivrl
in
inc
lcall
cltd
cld
dec
push
mov
mov
sub
sub
jl
sbb
or
cmp
pop
mov
es
cmp
nop
sbb
inc
push
repz
sub
fsubrp
jecxz
rorl
add
xchg
out
sub
cmp
incb
xchg
insb
loop
xchg
xor
adc
add
mov
scas
cs
xchg
daa
inc
xchg
pusha
cs
jl
imul
lock
jp
dec
aaa
sahf
sub
sbb
pop
imul
mov
sbb
push
mov
pusha
mov
jne
push
ret
loop
test
mov
cli
push
shl
stos
popa
or
or
stc
lods
jns
add
jmp
cmp
sub
scas
pop
sbb
xlat
sub
js
inc
fnsave
mov
xchg
clc
repz
inc
push
mov
or
xor
sub
fimull
adc
repnz
cli
xor
cmp
lods
insl
jg
jge
cmpsl
in
mov
jb
cmc
scas
sbb
pop
ret
mov
lock
dec
sbbb
cmpsl
out
pop
repnz
inc
stos
out
movsl
push
outsl
dec
cmpsl
fnop
pop
add
aas
sti
push
or
in
or
push
repnz
or
push
inc
push
push
in
and
outsl
add
lcall
add
es
popa
insl
mov
notl
in
sbb
aad
out
pusha
popa
sahf
shr
int3
mov
cmpsl
stc
pop
jnp
das
sbb
mov
pop
cmp
add
mov
add
lahf
gs
jmp
pop
fucomp
xchg
jnp
std
sub
mov
scas
dec
sbb
shll
lahf
fadds
loopne
insl
mov
addb
es
inc
pop
popa
loopne
jo
push
fbstp
jle
inc
pop
or
inc
push
push
sub
xor
repz
data16
sbb
mov
add
stos
lahf
jb
cwtl
mov
mov
and
fptan
cmc
js
inc
adc
mov
fimuls
sub
shrb
lds
pop
call
sbb
mov
or
notl
clc
out
popf
dec
add
leave
jg
sub
test
sbb
adc
fisubs
and
xor
pushf
pop
xchg
pop
push
inc
xor
jp
sub
and
and
lahf
mov
mov
mov
adc
xchg
mov
into
pop
xchg
insb
mov
jge
jl
cmpsl
aam
negb
loop
outsl
mov
je
or
push
jge
and
aaa
test
loopne
test
outsl
inc
ret
shl
shrb
mov
pop
cwtl
lds
jnp
mov
popf
ja
iret
and
xchg
xchg
push
mov
pop
jmp
and
jns
fwait
push
popf
hlt
or
in
repnz
jmp
jge
inc
test
pop
sub
and
xchg
cmp
add
push
adcb
test
cmc
out
pushf
jg
fistpl
and
ja
sti
mov
and
aas
adc
dec
addr16
mov
adc
or
jo
gs
adc
movb
pop
repnz
mov
and
mov
test
daa
jno
les
push
pop
mov
jne
xor
pop
les
dec
push
dec
jp
test
ds
repz
pop
dec
insb
sahf
in
daa
orl
test
and
sbb
or
fcomps
test
aad
sbb
je
add
jl
aas
ret
aam
pop
in
add
repnz
jg
iret
rclb
xor
or
xchg
sub
test
xor
mov
inc
jecxz
test
add
insb
lock
into
divb
in
cmpsl
int3
ds
call
inc
push
test
inc
cmpsb
insl
out
and
pop
sbb
push
or
mov
dec
jo
stc
shufps
jno
mov
xor
test
shrl
mov
jo
push
xchg
aas
bound
jmp
ficoml
cli
stos
jbe
adc
pop
roll
sub
adc
jp
gs
mov
cmc
and
pop
sar
sub
push
ret
sub
inc
xor
mov
addr16
xlat
adc
push
stos
xor
jge
jp
or
lock
mov
outsb
or
adc
jecxz
xchg
mov
xchg
mov
lret
push
iret
popf
and
adc
cmpsl
ret
popa
and
cmpsl
pop
hlt
dec
sbb
inc
mov
cs
gs
adc
add
sbb
mov
cs
sub
ss
dec
das
frstor
inc
pop
stos
or
inc
sub
jae
test
outsb
insl
scas
fisttpl
mov
sarb
pop
mov
mov
jmp
jl
ja
cmp
out
xor
jnp
sub
sub
push
jne
shrl
out
js
sbb
es
cmpb
rorb
pop
mov
adc
sbb
test
incb
in
fisttpll
cmp
cs
add
mov
fcomip
mulb
and
iret
xor
mov
into
sbb
jmp
and
mov
out
and
cs
sub
mov
push
dec
and
fimull
mov
cmpsl
inc
addr16
andb
add
xor
stos
ret
xchg
mov
scas
xor
loop
test
leave
and
sub
sub
movsb
dec
fildll
ss
imul
push
popf
pop
jmp
ror
ja
ds
lea
pushw
mov
jnp
push
mov
push
inc
mov
sbb
call
sbb
subb
xchg
sbb
dec
xchg
sbb
mov
lods
insb
stos
cmp
mov
js
add
add
mov
cmpsl
fst
iret
sub
popa
inc
aad
out
addr16
popfw
cs
and
sti
cmp
insl
mov
jmp
int3
and
add
add
jp
movsl
sbb
loopne
repz
lock
cmp
in
int3
add
add
cmp
sub
stos
pop
jmp
push
adc
mov
xor
sub
pop
xorl
jne
cmp
add
lcall
inc
stc
leave
mov
dec
in
mov
dec
jae
sub
stc
push
test
mov
pop
cmp
jmp
fisubl
or
cs
mov
sbb
ss
add
add
repz
sti
mov
or
fistps
pusha
mov
adc
clc
mov
lret
je
mov
ret
icebp
in
xchg
arpl
inc
lahf
iret
lods
cmp
push
xlat
or
sbb
call
test
and
insb
jne
push
sbb
loopne
loopne
pusha
cs
mov
adc
rcrl
lods
lret
mov
sbb
add
pop
es
daa
jmp
xchg
dec
mov
int
mov
or
push
leave
xchg
popa
lret
lret
cmc
sub
adc
cld
push
shll
pop
stos
xchg
inc
lds
ljmp
push
clc
sub
adcb
fisttps
imul
mov
int
mov
imul
testb
jne
cmp
cmp
push
jg
pop
scas
sbb
and
orl
mov
jnp
jno
mov
push
arpl
mov
mov
test
and
cwtl
fldcw
inc
mov
pop
pop
lret
add
mov
add
arpl
jnp
stos
loop
test
push
mov
push
movsb
leave
push
iret
push
jge
neg
inc
inc
sbb
ja
push
rcll
cmc
dec
adc
lods
or
mov
adc
jno
daa
xchg
fcomip
insb
rcll
idivb
outsb
leave
jne
xlat
sahf
stc
mov
mov
jp
push
das
pop
mov
ret
jg
lods
clc
xchg
sbb
mov
sbb
push
jno
ja
push
aas
imul
dec
mov
call
int
cli
pop
mov
and
cli
sub
aaa
mov
jmp
jecxz
push
fistl
aaa
xchg
repnz
lods
push
sti
clc
xor
pop
ja
jp
sbb
fistps
pop
cmpsl
gs
std
and
push
out
js
jo
cli
int3
fimull
sub
movl
sub
stc
adc
std
add
stos
out
jbe
mov
jge
popl
inc
mov
push
cwtl
add
ja
cmpsb
push
pop
push
dec
and
arpl
clc
sbb
sbb
fmuls
lret
mov
in
or
lret
inc
test
in
mov
pushf
mov
pop
stos
mov
inc
mov
mov
in
dec
add
cmp
and
mov
lcall
test
xor
inc
jno
popa
or
insl
inc
je
arpl
jp
int3
push
aad
mov
lcall
inc
dec
push
in
cmpsb
shlb
mov
sbb
mov
das
scas
rcrb
push
fwait
inc
pop
ljmp
sbb
js
mov
mov
sub
shrl
xor
sahf
xchg
mov
sbb
icebp
dec
xorb
rol
push
mov
imul
adc
lock
popf
push
jmp
mov
push
lcall
cmp
fdivs
add
lea
ja
cmp
out
and
fstpt
xchg
shll
cmp
subl
sbb
push
lds
dec
into
or
mov
push
sub
scas
out
push
cmp
outsl
or
frstor
xor
push
or
jge
idivl
arpl
lods
fnstsw
fnsetpm(287
sbb
fsts
add
xlat
adc
nop
imull
add
call
fstpt
das
out
xor
dec
xchg
push
dec
mov
loope
mov
mov
pushl
add
push
pop
and
aad
rcrb
mov
push
jp
test
test
mov
mov
js
repz
dec
sbb
fdivs
jb
rolb
sti
mov
add
or
stos
je
cmp
sbb
jne
insb
cmpl
sarl
add
subl
gs
leave
xchg
mov
pop
repz
xchg
pop
push
xor
out
ss
je
jno
pop
sahf
dec
sarb
jl
call
xchg
cld
scas
sub
mov
subb
jle
xor
sbb
push
lods
push
cmp
jns
pop
xchg
add
scas
ret
imull
unpckhps
add
dec
stos
mov
cmpsb
add
cli
decl
cmp
jns
jp
cwtl
dec
sbb
fcomps
mov
ljmp
loopne
lea
insl
mov
sub
hlt
lods
int3
mov
push
dec
cmp
popa
mul
jmp
mov
loop
dec
in
and
sbb
jecxz
sti
jl
mov
dec
xor
push
dec
mov
aad
sahf
jecxz
insb
test
and
dec
xchg
cmpb
jae
jg
cmpsb
movsb
jge
stc
mov
movsl
cmp
fwait
sub
fnstenv
jg
fld
push
sub
daa
mov
cld
xor
dec
lahf
jae
xchg
popa
test
and
pushl
sub
xorb
mov
cmc
sub
aas
mov
popa
fs
rcl
enter
mov
dec
pop
sub
cli
add
and
cld
inc
aas
push
ds
ret
cs
gs
stc
mov
hlt
insl
sub
mov
xor
adc
or
mov
ja
cmp
jle
or
sbb
sbb
xchg
pop
insl
addr16
clc
rorb
test
popf
add
shr
mov
lcall
and
ret
xchg
jecxz
add
push
pop
mov
adcl
movsb
cli
pop
stc
insl
push
imul
and
inc
fwait
test
pop
test
push
dec
mov
sub
mov
ds
jmp
outsl
push
fidivrs
xor
pushf
nop
sbb
repnz
outsb
mov
mov
stos
repz
lcall
enter
lds
inc
cmp
sarb
es
pop
imull
push
jecxz
and
mov
hlt
les
popf
push
or
adc
pop
xor
pop
add
pushf
mov
cmp
shll
inc
jle
hlt
dec
push
imul
push
push
movl
negb
mov
scas
dec
sti
inc
iret
fdivl
movsb
inc
adc
js
mov
add
mov
push
jbe
push
xchg
scas
repnz
xor
test
cltd
iret
sub
sub
ret
mov
test
lahf
cmp
test
jnp
addps
xor
notb
xchg
adc
jecxz
sbb
repz
mov
push
mov
xchg
cmp
dec
inc
pop
mov
sbb
inc
in
cmc
loop
into
jnp
icebp
add
mov
inc
into
adc
and
jecxz
insb
aam
push
jle
lahf
push
sub
xchg
inc
hlt
mov
cmc
push
dec
subl
out
mov
inc
test
decb
mov
cmpsl
roll
repz
pop
adc
cli
scas
and
ficomps
rorb
mov
pop
xlat
sbb
mov
aad
mov
mov
rcl
sahf
std
mov
rol
xchg
cmp
push
mov
pmulhw
enter
dec
or
mov
fistpl
imul
dec
mull
jae
adc
cli
mov
or
mov
and
flds
ficompl
inc
and
mov
lret
lock
flds
or
mov
rorl
pop
push
sub
sub
hlt
pushf
loop
insb
iret
xchg
test
push
test
jnp
mov
imul
adc
out
imul
pusha
dec
aaa
mov
daa
imul
inc
push
sbb
stos
call
jp
push
es
das
push
stc
mov
shlb
fdivrl
movsb
aam
es
les
jmp
push
lea
mov
sti
push
std
and
push
stos
cltd
sbb
mov
scas
clc
sbb
call
adc
jnp
test
mov
and
lret
mov
fstl
or
pusha
pop
dec
or
or
outsb
ljmp
outsb
enter
inc
mov
xchg
mov
mov
or
pusha
daa
out
xchg
rclb
stos
out
jo
loopne
cmp
mov
out
int
aam
dec
mov
sub
adc
ja
xchg
lds
ljmp
cltd
shlb
push
das
fsubl
xchg
in
imul
int
pop
jecxz
sbb
sbb
repz
call
jp
daa
cltd
mov
addr16
test
test
cmpsl
jbe
shll
fists
push
repnz
sbb
call
lret
mov
jge
sbb
add
sub
xor
clc
data16
jl
xchg
popf
dec
outsl
xor
fisttpll
mov
sub
inc
out
and
dec
jmp
jmp
ret
jle
cld
add
and
push
adc
bnd
xor
or
xchg
inc
lahf
add
dec
scas
ljmp
sbb
in
repz
jecxz
mov
lds
jle
add
mov
dec
leave
cmp
lea
and
xchg
and
xchg
cmpsl
filds
dec
cwtl
jecxz
jbe
popf
loopne
shrb
sahf
outsl
cwtl
daa
push
sti
movsl
xchg
mov
pop
stos
push
repnz
mov
out
pop
enter
loope
faddl
scas
push
push
mov
or
subb
iret
push
inc
pop
movsb
jmp
jecxz
pop
or
cmp
pop
lret
adc
pop
outsl
mov
adc
lds
cmpl
fldenv
shlb
out
add
icebp
retw
xchg
and
imul
syscall
mov
out
add
xchg
cmp
lock
mov
adcl
rclb
mov
dec
les
xor
loopne
pop
mov
arpl
js
and
or
sarl
sti
cmp
cmp
fisttpl
push
mov
mov
mov
xchg
pop
add
pop
jg
in
pop
fbstp
pop
cltd
pusha
out
and
cmp
mov
cmp
jno
inc
push
test
adc
rorl
rorl
inc
and
and
and
scas
and
in
sub
push
xchg
das
loope
mov
pushf
sbb
lahf
mov
shll
pushf
inc
ljmp
dec
inc
into
repz
push
gs
mov
ds
xor
jb
jae
push
mulb
enter
sub
bound
push
das
jge
mov
jb
push
ljmp
out
into
or
xchg
or
pop
push
enter
mull
inc
ss
sub
ljmp
sub
fistps
popf
pusha
lods
inc
add
idivl
push
pop
loop
scas
cltd
scas
jbe
sbb
or
das
mov
mov
mov
mov
xor
jae
xor
pop
mov
and
cmp
imul
mov
scas
pushf
ljmp
js
jns
sti
mov
push
movsl
in
push
sub
imul
xor
pop
sub
inc
enter
sbb
jmp
mov
int3
lcall
outsl
jnp
int3
icebp
stos
cwtl
mov
mov
mov
arpl
push
aas
outsb
jb
sbb
pop
jp
and
mov
xchg
mov
xchg
mov
in
push
jae
stos
ss
mov
dec
lret
scas
pop
push
sub
popa
jge
lods
add
pop
dec
cmp
sub
pop
xor
imul
push
enter
aad
add
jmp
sub
lods
divl
mov
jg
push
fwait
movl
ffree
push
sub
enter
cmc
push
xor
inc
stc
inc
les
xor
cmp
mov
sub
fisubrl
sub
xor
std
add
mov
addb
push
int3
outsl
iret
inc
jg
cltd
pop
push
lea
push
cmp
cmp
xchg
rcll
pop
mov
gs
pop
jae
push
and
icebp
cmp
jge
pop
ret
adcl
icebp
and
insb
cmp
jns
leave
scas
loope
cmp
push
sbb
addr16
sub
dec
dec
movsl
jge
mov
xlat
clc
push
fnstenv
add
cmp
test
pop
cmpl
gs
and
inc
or
or
lods
pushf
jno
mov
push
loopne
clc
mov
repnz
xor
imul
stos
xor
pop
mov
mov
fs
mov
push
mov
aas
push
popa
je
sar
in
loop
sahf
mov
in
jo
mov
in
cld
fiadds
jne
mov
adc
jmp
dec
jo,pt
adc
testl
test
call
add
dec
push
lock
test
jnp
gs
rcl
mov
out
xor
cmc
psubsw
xchg
inc
stos
xor
fs
jl
mov
pushf
cli
lret
ja
popf
cmp
push
xchg
lods
roll
inc
fisttps
out
push
mov
gs
fmul
xchg
arpl
pop
and
sahf
mov
dec
inc
lods
push
mov
mov
xor
inc
pop
cmpsl
in
scas
enter
push
mov
xor
mov
xchg
outsb
es
sub
lock
cld
adc
movsb
test
xorl
cmpsl
movsb
adc
lea
add
inc
loop
mov
mov
mov
push
mov
jmp
repnz
or
jg
out
add
sbb
mov
cltd
loopne
addr16
in
rclb
jle
pop
stc
sbb
cmp
scas
xor
xchg
addr16
aad
sbb
jne
andl
lret
in
inc
adc
movsb
jg
insb
icebp
data16
lcall
hlt
sti
fistpll
inc
sahf
stc
fiadds
fbld
push
iret
mov
jne
add
int
movsb
je
frndint
push
test
adc
mov
mov
mov
dec
mov
pop
adc
mov
sbb
adc
xchg
loope
mov
dec
adc
push
sbb
cmpsl
jge
in
dec
das
mov
mov
push
rcrb
and
sbb
sub
insl
inc
aad
sar
outsl
aam
or
aad
pop
add
pop
adc
sbb
ret
sbb
pop
jg
adc
pop
pop
mov
jmp
fldcw
push
mov
sbb
cmp
lret
cmp
stos
js
pop
paddb
cltd
cmp
mov
jge
ss
je
add
mov
xchg
inc
jns
lahf
addl
jnp
lds
lds
sub
cmpsl
push
fidivrl
stc
adc
addr16
test
xor
insb
stos
cli
aas
ret
mov
sbb
mov
movsb
sbb
ja
add
repnz
fs
jns
aas
mov
rorl
lods
push
test
lock
cld
sbb
mov
push
daa
int
aad
inc
xchg
adc
add
jne
repnz
ficoms
or
cs
test
push
and
popf
push
out
pop
xchg
lods
sbb
add
cld
lret
cmp
push
mov
test
fidivrs
addb
push
xchg
lea
lock
mov
push
push
pop
rclb
mov
mov
call
inc
cmp
incb
pop
mov
push
sti
out
fisttpll
lcall
mov
andl
push
pop
enter
sub
mov
repz
pop
aas
cmp
adc
mov
push
call
aaa
es
jb,pt
cmp
pop
fiadds
mov
cmp
jmp
mov
aaa
jbe
push
sbb
pop
jb
xorb
sub
fnclex
shl
mov
xchg
out
loop
pop
dec
sub
js
pop
loope
xorb
divl
mov
subl
sub
push
fnstcw
in
mov
dec
loope
push
or
sti
or
out
aad
cmp
les
fdivs
push
idivb
imul
inc
sub
and
sub
bound
dec
push
xor
mov
jne
lahf
add
inc
xchg
inc
ret
xchg
iret
scas
dec
jl
pop
imull
sub
and
inc
xor
jg
mov
jle
std
mov
jns
test
pop
dec
mov
aaa
inc
cmpsb
maxps
lcall
sub
scas
test
and
sarb
in
adc
cwtl
imul
sbb
nop
cld
xchg
loop
jge
mov
jle
adc
test
scas
mov
and
ficoms
outsl
out
ds
cltd
dec
loopne
in
and
mov
aam
push
cld
enter
xor
std
add
and
aaa
orb
nop
cmp
imul
int3
push
fldl
roll
inc
nop
cmp
test
pop
inc
and
xor
jno
adc
pusha
adc
fs
in
mov
mov
mov
shrb
sub
add
loope
gs
fnstsw
std
setb
loopne
jne
jp
insl
int
sbb
sbb
test
mov
jg
push
movsl
add
sbb
push
call
dec
and
ret
inc
mov
sbb
std
pusha
enter
mov
pop
inc
dec
pusha
mov
xchg
dec
inc
cltd
clc
bound
lret
dec
ljmp
lret
cmp
jp
insb
repz
adc
shlb
sbb
out
push
jg
mov
inc
mov
ret
movsb
or
test
dec
jmp
aaa
js
in
pop
mov
leave
jae
stos
mov
mov
aas
stos
xchg
push
hlt
hlt
jge
adc
stos
push
push
mov
mov
pop
xor
jno
lods
stos
dec
mov
ret
test
cli
mov
mov
aam
inc
addl
mov
adc
jle
inc
lret
ljmp
out
pop
xor
shrl
vmwrite
pop
or
iret
push
sub
xchg
hlt
rorb
jmp
and
push
jg
xor
jmp
jns
das
call
jbe
insb
jne
mov
popa
push
jae
cmp
inc
xor
shl
rcll
jmp
lods
jge
pushf
sub
inc
pop
lock
jecxz
stos
cs
imul
jmp
sarb
notl
sub
iret
fiadds
adc
jnp
ds
push
shr
push
lock
bound
cmp
mov
add
aas
jle
popf
inc
test
lea
adc
mov
std
sbb
int
popl
jns
adc
cs
mov
pop
sbb
fwait
push
stos
fsubrl
jp
rcrl
pop
mov
pushf
out
xor
inc
and
int
popf
lods
outsb
and
cmpsb
mov
cmp
jmp
mov
mov
lret
mov
lahf
xchg
mov
sahf
mov
rcr
push
xchg
iret
sbb
add
push
inc
dec
push
ret
jle
mov
or
or
es
pop
add
jne
sub
or
repz
mov
sbb
hlt
test
rolb
mov
dec
jo
cli
mov
inc
std
dec
push
test
mov
mov
sbbl
loopne
inc
pop
ret
fildll
and
nop
imul
fs
lgs
ror
movsl
adc
ds
mov
es
lea
imul
mov
jl
or
adc
adc
sarl
std
dec
xchg
lds
mov
xchg
dec
in
pusha
mov
xchg
orl
test
lahf
movsb
sub
sub
lea
sub
cwtl
inc
adc
mov
outsb
cltd
cmp
clc
sbb
mov
sbb
jl
imul
js
loopne
jb
fisubrl
inc
add
in
loope
push
lods
and
cmp
test
test
addr16
mov
sub
sub
xchg
inc
jb
daa
adc
mov
sub
sahf
dec
fstps
mov
cmp
pop
and
rcrb
lret
cwtl
sub
jae
xor
out
dec
sbb
jbe
dec
sub
xchg
dec
or
popa
rolb
mov
fidivs
fwait
mov
dec
push
push
fs
mov
out
mov
xchg
pop
inc
mov
xchg
daa
push
add
sbb
daa
inc
loop
mov
out
adc
or
mov
rcrl
dec
fst
add
mov
xlat
mov
push
cmpsl
xor
mov
rclb
mov
push
insb
call
jb
jb
mov
dec
daa
push
pop
stos
fnstcw
mov
sbb
xchg
ja
test
enter
leave
add
jbe
or
inc
mov
outsb
mov
call
push
jbe
ret
xchg
inc
jg
pusha
cwtl
dec
call
rolb
mov
pop
pushf
into
dec
cmp
leave
pop
int3
call
inc
sbb
mov
push
and
mov
test
pop
stc
mov
xchg
sbb
test
adc
push
aad
jmp
les
xchg
lea
sub
xor
pop
mov
jno
jmp
lea
cmp
and
push
xor
cmp
mov
mov
or
adc
ds
cmpsl
dec
push
cmp
rorl
mov
push
in
mov
sub
add
out
rclb
dec
sub
pop
and
pop
imull
xor
rcr
mov
shr
movsl
mov
push
xlat
xchg
loope
or
negb
ljmp
mov
hlt
fmuls
push
adc
test
mov
and
jbe
adc
sbb
jg
xchg
pop
mov
nop
daa
js
fwait
lds
insl
movsl
cmp
shrb
xchg
cmp
fnstsw
push
fs
jle
pop
pop
adc
jg
jne
add
pop
jnp
and
jnp
jmp
aad
lods
and
mov
lea
ss
inc
cltd
in
xchg
mov
add
mov
mov
and
daa
out
add
cld
sub
testl
into
leave
loop
inc
mov
in
arpl
dec
rcrb
and
and
ljmp
xlat
rorl
pop
aaa
jns
or
and
in
mov
insb
mov
xor
inc
lock
mov
xor
add
out
iret
pop
push
and
and
push
inc
loope
rclb
cmpsl
into
mov
mov
ret
jle
das
sub
jmp
sub
test
xlat
hlt
mov
loopne
imul
add
push
add
cltd
mov
cwtl
fadds
pop
bound
inc
mov
add
addr16
subl
fadds
sub
mov
aas
pop
jno
aas
and
mov
stos
ret
movsl
out
xchg
mov
arpl
mov
aas
mov
jb
and
add
inc
cmc
stos
push
cltd
orb
test
pop
pop
scas
mov
dec
insl
outsb
inc
lcall
mov
sarb
aas
and
ret
rol
jge
jae
call
cli
push
inc
inc
iret
sbb
lds
xchg
cwtl
int3
aad
jo
mov
pusha
fsubrs
push
fdecstp
sarb
sub
fidivl
adcb
sahf
stos
aaa
and
test
movsl
fstl
cwtl
lcall
inc
leave
cmp
imul
repnz
mov
fwait
lods
in
push
or
repz
push
push
sub
clc
fwait
mov
pop
das
in
fst
sbb
push
into
int3
std
das
repz
xchg
inc
rcrb
rcr
sbb
or
fwait
loop
pusha
pop
ss
mov
sahf
push
push
arpl
mov
data16
mov
adc
nop
xor
test
sahf
hlt
test
dec
std
mov
adc
cmp
cmp
adc
insl
and
bound
shl
xchg
mov
cmpl
out
push
pop
fbstp
pop
lock
push
xor
push
jl
jnp
arpl
and
fsubp
ja
or
mov
pop
xchg
jmp
xor
insb
daa
outsl
pop
or
ss
aad
adc
andl
inc
fadds
test
ret
mov
xlat
or
jecxz
pop
ljmp
sbb
dec
xchg
mov
leave
outsb
mov
jne
mov
fs
xor
or
andb
stc
lret
imul
outsl
inc
mov
pop
mov
mov
pop
mov
popa
push
ret
push
ret
mov
rorb
add
mov
mov
in
out
inc
or
xchg
or
mov
ss
mov
mov
push
out
add
popa
nop
xchg
nop
adc
popf
mov
rorb
pop
into
cmpsb
in
mov
push
add
sbb
rorl
pop
mov
sbb
popf
fldl
mov
scas
inc
dec
rol
cmpsb
addr16
lahf
sub
mov
cmpsl
mov
inc
out
outsb
je
mov
out
pop
add
clc
xchg
pusha
mov
sbbl
fisttps
mov
stos
lret
es
mov
mov
inc
pop
andl
pusha
dec
rcrl
mov
sbb
pop
jns
in
popf
aas
push
and
cld
imul
pop
or
mov
xor
mulb
pop
cli
daa
sti
hlt
repnz
and
jne
std
inc
mov
sub
jmp
fidivs
add
movsl
cmp
gs
or
cmpsb
mov
cmp
jae
arpl
ss
je
pop
mov
xor
movsb
xchg
sub
xor
mov
pop
call
push
cli
bound
mov
arpl
adc
mov
popf
sub
ficomps
sub
fsts
jmp
xchg
jae
pop
dec
int
push
fmull
add
insb
jg
push
inc
mov
push
inc
popf
fsubs
pop
pop
rcrl
mov
push
and
subl
mov
inc
nop
test
inc
push
mov
jp
xchg
das
jno
push
stos
xor
jnp
jo
dec
sbb
sub
add
cmp
cmc
inc
xor
inc
in
adc
xorb
fcmovbe
mov
xchg
roll
in
repz
pop
push
lcall
cmp
test
test
dec
das
sbb
xchg
pop
jle
add
push
insb
xchg
lcall
xor
frndint
sbb
cmp
mov
push
jg
fcompl
sbb
sbb
scas
fisttps
popf
and
and
gs
jge
xor
sbb
test
cmp
mov
decb
inc
jnp
mov
dec
sbb
mov
and
dec
clc
jmp
xor
adc
mov
adc
stc
push
test
cmp
ss
cli
mov
in
fidivrs
js
aaa
jo
cmp
mov
cmpl
add
mov
mov
xchg
movsl
sbb
call
mov
sub
inc
xchg
mov
xorb
mov
jno
xchg
cli
pop
or
inc
movsl
dec
outsb
aas
xor
shll
xchg
das
pop
inc
push
adc
int
mov
leave
out
mov
xlat
arpl
pop
xchg
sub
mov
loope
cwtl
cmpsb
sub
or
lods
mov
xchg
das
xchg
xabort
xor
lods
push
int
push
adc
lods
xchg
cmpsl
mov
sbb
rcl
ret
ficoms
push
shl
sbbb
jns
rorl
add
int3
pop
mov
sub
add
jge
jmp
imul
mov
pop
mov
popa
outsl
inc
cmp
lds
stc
push
inc
mov
loopne
mov
xlat
aam
das
lret
jnp
cmp
in
mov
cmp
int
mov
pop
imul
daa
inc
sub
rorl
ds
push
xor
addr16
ljmp
sbb
push
notl
test
bound
push
call
adc
in
scas
jg
dec
pop
push
bound
ss
rol
lods
mov
out
xchg
push
call
arpl
sarl
dec
in
xor
push
cld
aas
pop
inc
sahf
sub
xchg
sbb
in
popl
popa
mov
mov
mov
xchg
mov
jo
mov
cli
fists
sbb
push
pop
insl
sbb
mov
lea
inc
adc
enter
or
adc
or
and
jnp
popl
xchg
dec
in
or
insl
sub
hlt
and
call
bound
out
movsl
cmp
insb
xchg
and
enter
negb
cli
divl
fs
or
push
stos
mov
ds
jle
xchg
ja
mov
movb
hlt
jecxz
or
inc
dec
in
jno
fimuls
mov
mov
xor
mov
cmpsl
mov
adc
mov
cmp
and
pop
test
or
or
mov
insb
arpl
or
lods
adc
in
mov
sbb
into
dec
out
das
mov
aaa
nop
jbe
jle
dec
mov
aad
inc
cwtl
cmpl
xchg
mov
cmp
fucom
lahf
push
push
test
in
jmp
js
jo
imulb
inc
in
imul
dec
mov
mov
xlat
dec
lods
cltd
mov
inc
sub
cmpsb
jnp
mov
jnp
fwait
dec
int
fcomps
lea
xchg
loopne
lock
cltd
push
in
lret
pop
xchg
cld
mov
repz
shl
fimull
add
ja
jb
call
pop
shll
jne
jg
jmp
repnz
mov
int
int3
lds
outsb
in
and
clc
sbb
mov
mov
int
xor
mov
in
in
arpl
dec
add
iret
fwait
adc
jae
mov
mov
xchg
ljmp
xor
mov
lock
or
xor
ret
lret
stc
inc
roll
fisttps
push
repnz
sbb
cmpsb
xchg
jp
outsw
fs
sbb
lahf
lock
ret
je
adcl
mov
popf
imul
rcl
aaa
cld
and
mov
fs
mov
mov
outsb
mov
mov
ret
rcr
call
orl
ds
mov
dec
sarl
arpl
dec
insb
xchg
add
cmpsl
cmpsb
loope
push
in
ret
xchg
inc
cmpb
jge
pop
inc
bound
jp
mov
enter
add
xchg
add
lahf
shlb
adc
roll
cmc
sbb
mov
mov
or
pop
in
and
sbb
imul
jb
in
enter
fstp
sub
gs
cmpsl
cld
int3
lret
outsl
xor
push
mov
mov
clc
cli
adc
imul
cmp
mov
es
jl
sub
mov
add
mov
cld
push
icebp
inc
in
dec
loop
mov
stc
xchg
mov
inc
pop
es
stos
and
ret
test
push
dec
jo
aaa
inc
scas
push
pop
xchg
out
nop
loop
aam
mov
js
ja
or
cwtl
mov
pop
aam
mov
rcll
and
jp
aam
mov
adc
dec
sub
add
mov
push
inc
cli
jge
jns
cmpsl
aam
pop
stos
pop
xchg
outsl
gs
inc
push
xchg
mov
pop
sbb
scas
cmp
insl
sbb
out
fisttpl
les
clc
lret
xorb
xor
mov
scas
loop
lahf
addr16
xor
inc
cmp
out
out
aas
test
shrl
sbb
out
xor
test
enter
jnp
cmp
push
test
mov
testl
paddsb
addl
mov
outsl
out
sub
aaa
gs
jge
pop
push
dec
mov
push
or
test
inc
clc
lret
add
lret
mov
adc
fadds
inc
mov
adc
pop
in
xchg
mov
les
sahf
pop
mov
inc
sbb
fs
jb
test
jne
enter
sahf
xchg
inc
xlat
jecxz
sahf
push
aaa
inc
dec
xchg
push
mov
and
ja
leave
repnz
cs
roll
jge
sbb
add
pop
sbb
es
dec
jne
add
scas
push
aaa
mov
sbb
leave
cmpl
fs
addr16
jns
xor
sbb
inc
insl
mov
or
sbb
and
pushf
dec
repz
mov
hlt
mov
movsb
cmpsb
push
sub
icebp
xlat
loope
mov
inc
xchg
sub
add
push
ficoms
pushf
daa
adc
lret
mov
hlt
adc
mov
dec
or
jae
mov
aaa
testb
test
xchg
lods
int
cltd
inc
mov
or
mov
rcrb
jb
cmp
xchg
mov
sbb
fadd
data16
push
je
cmp
movsl
fucom
sbb
inc
sub
dec
xchg
inc
bound
pop
frstor
dec
hlt
inc
fldl
out
push
sahf
dec
cmp
jmp
mov
or
push
popf
ja
fcmovu
jmp
cs
push
inc
add
neg
xor
xchg
call
repz
push
jbe
cmp
sub
xor
ja
repz
imul
arpl
mov
mov
dec
pop
sbb
mov
mov
test
dec
jge
test
nop
fs
data16
out
or
add
scas
add
push
sbb
sub
mov
lret
xchg
rolb
and
cmpsb
adc
aad
sub
xor
mov
pop
sub
dec
cs
mov
mov
add
mov
mov
dec
rclb
jge
or
loope
mov
push
pop
stc
call
rorl
dec
add
movsl
test
js
addr16
daa
mov
mov
jge
arpl
shlb
fldcw
jmp
lds
aaa
dec
push
lock
push
xchg
ds
repnz
fidivrs
mov
and
aas
incb
enter
test
in
adc
inc
adc
sbb
enter
add
scas
leave
scas
cmp
push
lods
in
iret
orl
cld
inc
push
pop
jge
mov
cli
xlat
in
mov
dec
in
jecxz
adc
imul
pop
and
out
cmp
mov
mov
push
fmul
push
xchg
in
jbe
or
cmpsb
cmp
push
jg
es
lahf
out
push
rorb
faddl
add
sbb
mov
add
cmp
push
cmp
popf
mov
jo
icebp
fcmovbe
and
mov
pop
dec
and
out
or
movsb
jne
add
movsl
push
pop
repz
stc
xchg
and
push
ja
sbb
add
and
in
out
cmpsb
std
mov
out
test
push
lods
outsl
and
mov
test
xchg
add
insl
out
dec
mov
xchg
std
cltd
mov
inc
cmp
mov
push
orb
icebp
out
mov
lds
or
sub
adc
jmp
mov
insl
in
or
aad
dec
cltd
inc
ja
adc
addr16
jo
inc
dec
add
addb
inc
pop
repnz
push
lods
rolb
add
cmp
jb
enter
dec
xchg
mov
jno
add
aam
cli
jno
ret
mov
fsubrl
mov
inc
arpl
adc
loopne
inc
lea
nop
fisttpl
inc
mov
inc
cwtl
ret
mov
pusha
es
xchg
leave
in
arpl
pop
rcrb
imul
ror
aaa
jp
popa
sar
fimuls
mov
cmp
les
mov
in
data16
pop
lds
cs
xor
jbe
outsb
push
jo
insb
cmp
stc
js
add
cli
jno
addps
fmul
mov
push
in
xor
out
pop
inc
xor
sub
dec
mov
xchg
outsl
insl
xor
jge
cmpb
push
adc
hlt
adc
shll
or
sbb
jo
leave
fs
or
xor
imul
cmp
inc
inc
loopne
mov
mov
mov
and
jne
ja
sub
or
jmp
test
daa
jmp
lret
cmp
repnz
mov
fwait
adc
pop
enter
push
call
rorb
outsl
push
inc
movsl
cmc
add
lret
dec
inc
in
fsubrl
out
insb
xchg
ret
cltd
cli
push
ja
or
add
and
and
mov
punpckldq
dec
push
loop
repnz
in
popl
mov
sub
mov
divl
mov
push
inc
xor
fimull
push
loope
and
dec
mov
pop
adc
fmull
ret
lcall
mov
mov
lods
pop
movsb
jne
imul
jl
addr16
rorb
data16
push
insb
or
ffree
jecxz
loope
dec
mov
jae
lret
sti
aad
and
sub
push
push
mov
or
out
xchg
jmp
test
out
sahf
cmp
and
subb
daa
rorl
sahf
pop
icebp
repnz
outsl
fbld
iret
pop
cs
aas
repz
movsl
jno
andl
add
jecxz
pop
dec
scas
cmp
icebp
mov
rcl
pusha
fwait
test
lahf
test
lock
and
ret
or
xor
fimull
xchg
jmp
pop
mov
stos
xor
push
adc
lds
push
fsubs
cltd
inc
cmpsl
cli
dec
or
sub
xor
aaa
out
or
adc
mov
or
sbb
cmp
sbb
sbb
aam
sbb
jnp
aad
in
in
mov
scas
out
outsb
testl
enter
jg
xchg
into
cmp
lahf
pop
mov
jns
repnz
mov
push
gs
daa
xchg
jmp
jne,pt
js
mov
incb
icebp
imul
sub
addl
and
dec
and
push
mov
mov
mov
repz
mov
shrb
call
mov
movsl
inc
sub
mov
out
outsb
xor
mov
xor
mov
scas
inc
and
movsl
push
stos
mov
push
insb
sbb
test
mov
in
add
lret
push
in
xorl
aas
xchg
xchg
inc
ret
cmpsb
inc
sub
jns
adc
push
mov
adc
pop
mov
fnstsw
scas
add
sarb
test
rcrl
push
rolb
pop
out
lock
imul
lods
fstpt
clc
clc
pushf
cs
jae
imul
mov
pop
and
inc
xor
scas
lds
push
in
push
into
mov
cmp
cli
xlat
push
sub
sub
aad
ret
add
imul
les
out
imul
cli
xchg
jb
push
and
add
dec
sbb
pop
mov
cmpsl
mov
and
shrl
jge
and
lods
cmp
mov
adc
les
xchg
sbb
xor
jecxz
cli
mov
lret
sahf
push
push
sub
mov
int
jae
xor
fsubrl
js
je
jae
sub
mov
in
jo
nop
mov
bnd
es
into
adc
xchg
push
into
add
aam
mov
jg
mov
aaa
jle
cmp
mov
ljmp
xchg
pop
xchg
das
pop
imul
or
stos
cmp
mov
inc
cltd
movsl
in
add
fs
pop
add
scas
mov
out
mov
loope
shrl
popl
jl
shrb
adc
xchg
ret
xchg
int3
in
jl
out
movsl
push
ja
in
dec
push
push
mov
aam
out
jmp
pusha
push
repnz
out
mov
ljmp
xor
mov
push
sub
outsb
fldt
push
outsb
sti
xchg
sbb
repnz
shll
mov
pop
bound
add
scas
stc
insl
cmp
notl
test
mov
addr16
mov
stos
pop
fiadds
inc
jbe
jmp
aad
das
cmp
jb
push
aam
pop
movsl
mov
lcall
into
iret
subb
lcall
and
xchg
sbb
mov
dec
pop
sub
rclb
xor
ficompl
adc
fwait
and
movsb
dec
cmp
jb
out
add
mov
aaa
scas
mov
fildl
cmc
pushf
movsl
inc
sar
push
insb
push
push
vpcomuq
fadd
adc
or
mov
jnp
push
mov
add
or
int
movsb
sarb
pop
jns
fs
je
jns
test
dec
sub
test
xchg
or
decl
ja
pop
add
add
aaa
addr16
and
shlb
in
int
push
mov
out
sub
push
push
imul
xlat
jge
loope
out
movsl
mov
scas
cmp
mulb
icebp
push
movsl
jl
data16
mov
adc
fnsave
addr16
loop
xchg
xchg
xchg
add
test
test
fists
ficoms
js
sub
test
rcrb
js
and
mov
mov
inc
pop
std
xchg
out
jns
fsubs
pop
icebp
js
repz
shll
push
and
in
and
subb
mov
in
mov
fistl
lcall
mov
mov
pop
push
mov
adcb
fidivrl
call
cmp
and
lock
cmp
mov
addr16
out
cmpl
testl
imul
out
in
mov
adc
lcall
adc
or
pop
das
jnp
aas
test
mov
pop
sub
fs
mov
dec
dec
es
and
jg
mov
mov
pop
sub
jecxz
add
test
mov
or
popa
mov
es
inc
orl
jnp
jno
xor
jmp
or
daa
insb
xchg
dec
enter
lods
rcr
adc
jae
mov
subb
js
shrl
xchg
mov
jne
inc
testb
data16
pushf
xchg
jo
cmpsb
dec
in
jbe
mov
cmp
dec
shlb
call
inc
push
mov
jmp
jne
and
call
test
sbb
jmp
xchg
mov
add
shll
repz
jecxz
pop
jmp
xchg
or
fcomps
ljmp
outsl
mov
adc
jl
movsl
dec
fisubs
fidivs
daa
jecxz
mov
mov
dec
pop
and
adc
stos
test
int3
mov
mov
sbb
push
sub
mov
jmp
inc
mov
ja
inc
cmp
add
stc
cmp
pop
ds
pop
dec
and
cmc
ror
add
cmc
shl
mov
shll
inc
pop
sar
mov
fimuls
leave
push
sbb
ja
xchg
pop
jp
jg
push
mov
jmp
push
inc
push
in
and
jo
add
mov
pop
pop
lret
iret
push
mov
es
sarb
cwtl
jno
dec
push
dec
dec
mov
or
lock
outsl
sub
push
cmpsl
popa
add
mov
lods
pop
and
or
inc
rolb
lcall
je
mov
mov
pop
fcoml
sti
push
inc
js
pop
dec
cmpsb
xor
ja
mov
cmpsb
clc
push
adc
subl
and
inc
mov
cmp
outsb
xchg
das
stc
and
xor
lds
xchg
cld
push
push
xor
push
dec
xchg
fsts
mov
mov
cmpb
cmpsb
and
inc
fiaddl
lods
mov
mov
outsl
mov
rcll
aam
push
mov
fmul
adc
sti
icebp
pop
fisubrl
or
addb
into
and
xor
mov
aam
cmp
push
xor
loope
xor
or
imul
outsb
cltd
je
xchg
mov
jle
jno
ds
nop
push
in
mov
jae
mov
xlat
mov
lret
pop
sbb
lea
or
jl
sbb
dec
adc
into
xchg
iret
push
lcall
sti
dec
repz
imul
jg
add
push
movsb
cmp
loope
int
outsl
or
and
xchg
xchg
jl
scas
jg
imul
jmp
mov
shrb
fdivr
fdivrl
cmp
lret
and
add
jno
mov
lret
add
cmc
or
loop
xchg
mov
ljmp
sbb
or
xchg
xor
pusha
lahf
shrb
loop
xor
and
mov
push
fiadds
mov
mov
mov
jns
pusha
mov
xchg
rcrb
push
dec
sub
or
icebp
shlb
dec
mov
xorb
and
fistl
mov
aad
mov
pop
xor
jmp
lds
sub
xor
dec
push
lahf
mov
in
stos
mull
in
and
ja
aad
mov
add
cmc
stos
out
lods
xor
es
clc
mov
xor
je
mov
cmp
mov
lock
push
push
shr
push
aaa
out
cmc
int3
jp
in
sub
and
adc
sbb
mov
ret
rclb
loop
mov
test
mov
lock
nop
dec
out
mov
es
mov
sbb
dec
mov
les
lods
call
adc
cmp
fldt
int3
jno
stos
lods
adc
mov
pop
cmpsl
gs
xchg
scas
out
test
out
jecxz
insb
dec
dec
and
inc
mov
les
sub
push
xlat
push
lds
inc
loop
jnp
nop
mov
sbb
das
shlb
pop
fs
or
inc
stos
es
rcr
aas
jno
jge
cmp
xor
fdecstp
ret
sub
out
inc
jg
sbb
pushf
icebp
cmp
icebp
jns
iret
mov
jp
xchg
jp
jle
mov
lcall
test
rcl
arpl
ret
or
inc
stos
rcrl
pop
fldt
imul
inc
dec
adc
stc
gs
fldenv
push
pop
jmp
xchg
sub
ret
push
stos
pop
mov
imull
cmp
frstor
loope,pt
lods
lods
cmp
in
roll
fstp
or
bound
xchg
ljmp
xor
mov
sti
pop
sbb
inc
cld
and
fwait
mov
mov
fldl
popa
mov
or
push
ja
pushl
loope
cmpsb
ficoms
add
std
mov
sahf
sti
mov
lret
dec
mov
xchg
pop
fcoms
outsb
push
test
fcomi
arpl
push
test
cmp
cltd
mov
lock
daa
jge
cmpsl
xchg
std
pop
push
pop
outsl
fisttps
imulb
call
adc
movsl
cmovb
std
ds
ljmp
cmp
sub
sbb
mov
jae
ret
fcomps
call
inc
daa
dec
cmp
xchg
clc
test
add
gs
lea
mov
mov
mov
mov
or
je
fimull
inc
and
push
xchg
sub
mov
popl
jae
mov
xor
fwait
jae
fldl
jb
nop
rcrl
sub
inc
or
cmp
adc
shl
into
xchg
ret
ret
dec
cmpb
nop
cmp
mov
mov
cmc
push
pop
into
lds
pop
fwait
mov
dec
gs
pop
lahf
mov
jle
aas
push
enter
insb
adc
lcall
data16
inc
xchg
popf
rorb
stos
adc
cmp
jae
loop
sub
sub
and
jns
add
push
mov
imul
nop
sahf
icebp
ljmp
or
push
pop
xchg
shll
sub
cmp
shrb
andb
pop
cmpsl
push
shlb
daa
mov
pop
cli
lcall
in
ret
sub
jg
jge
or
shll
andb
clc
icebp
cmp
adc
mov
push
insl
or
aas
movsb
pop
sti
mulb
jle
adc
leave
mov
in
js
pop
mov
mov
out
je
mov
lods
inc
dec
lret
insb
xor
cmpsl
std
lahf
xor
nop
xlat
mov
xor
push
pop
lahf
mov
nop
int3
testb
icebp
sbb
aad
xchg
cmp
test
dec
pusha
insl
loopne
lock
dec
adc
mov
jae
adc
jge
add
sbb
inc
call
stos
jle
jnp
lods
mov
in
dec
sbb
sti
sbb
jne
push
scas
cld
sub
rclb
push
ljmp
dec
and
stc
jnp
les
xor
sbb
stc
inc
in
sub
movsb
movsl
ljmp
fiadds
push
lods
aaa
popa
cmp
mov
jg
mov
sahf
dec
roll
cmp
cmpsl
pop
jnp
xor
xor
je
ds
pop
adc
cmp
pop
subl
pop
pop
mov
pop
mov
cmc
mov
nop
jmp
jg
test
adc
xor
maxps
sub
mov
mov
cmp
das
xor
mov
stos
xchg
xchg
add
adc
adc
dec
inc
pop
mov
bound
xor
orl
mov
inc
xchg
clc
xchg
push
in
int
je
aaa
std
xor
enter
ss
shll
in
mov
call
sbb
and
test
dec
push
sub
pop
int3
ds
movsb
dec
inc
ret
mov
add
push
lea
arpl
shrl
in
push
imul
cwtl
out
xor
stc
scas
mov
testb
repz
pop
sbb
add
mov
ret
mov
mov
enter
inc
out
pusha
add
lods
repnz
dec
dec
les
sbb
daa
sub
outsl
sub
dec
jmp
cmp
or
push
loop
push
loope
jmp
jge
and
cwtl
mov
inc
lea
jno
leave
push
call
orb
xchg
aas
jb
nop
and
push
and
add
mov
pop
pop
jl
fstps
mov
dec
xchg
stos
add
sbb
sub
mov
mov
sub
mov
out
call
movsl
xchg
repnz
in
xchg
jae
inc
movsl
and
mov
icebp
or
jbe
in
daa
std
pop
pop
insb
mov
mov
mov
cmp
mov
mov
jbe
pop
xchg
xchg
push
cli
jo
repnz
push
repnz
cmc
movsl
lcall
sub
insb
xor
mov
mov
jns
xor
sti
cwtl
and
movsl
imul
mov
lods
cmp
fldcw
imul
sub
dec
adc
adc
mov
aam
insl
ljmp
scas
pop
pop
pop
push
sbb
mov
mov
cmp
mov
aam
outsb
sub
mov
xchg
insb
mov
aad
test
cmp
stc
ljmp
xchg
out
inc
cli
xchg
jg
xchg
xchg
add
das
or
xor
jecxz
mov
push
cmc
popa
je
xchg
mov
mov
and
test
fldt
pop
jbe
inc
lcall
test
fisubrl
adc
imul
xchg
mull
test
cmp
movsl
ss
popf
and
pop
in
scas
insl
cs
and
std
mov
ds
out
ljmp
push
sbb
add
sbb
push
out
mov
add
daa
adc
cld
push
xchg
adc
loopne
xor
sub
adc
mov
pop
fsubrl
mov
sarb
inc
in
nop
incb
rcl
sbb
outsl
andl
push
jae
sub
dec
mov
xchg
cwtl
adc
mov
sub
shrl
push
mov
in
add
adc
pop
fidivs
in
xor
imul
out
out
mov
mov
jns
scas
and
mov
dec
popa
insb
push
xor
add
mov
push
inc
adc
and
push
xchg
loopne
fs
pop
jne
enter
cmp
negb
pushf
les
sub
inc
movsb
cmpsl
pop
lock
pop
lahf
mov
mov
out
adc
sub
shlb
sbb
xor
mov
subl
inc
das
pop
cs
jmp
xchg
cmp
loopne
push
jp
stos
in
mov
fisubrl
and
xchg
inc
cmpsl
daa
pxor
jo
in
xchg
out
mov
mov
xor
cmc
cmc
daa
inc
xchg
sbb
xor
rolb
fs
pop
bound
jmp
inc
adc
adc
fsubrp
pop
mov
sbb
out
jg
es
push
pop
les
in
push
ljmp
sbb
out
movsb
mov
sbb
shll
mov
xchg
ficoml
shll
in
inc
mov
mov
orb
dec
in
out
push
push
in
nop
fs
repz
pop
lcall
xor
std
sbb
mov
bound
in
dec
lret
enter
les
sarb
push
loopne
mov
mov
outsl
fimuls
imul
jae
lret
jecxz
or
push
aad
xchg
and
jmp
add
inc
xlat
insb
mov
inc
sbb
mov
push
add
push
xor
jns
int
xchg
lret
bound
xchg
incb
jnp
push
loopne
xor
cmc
sbb
adc
mov
movsl
mov
jp
xchg
inc
push
aaa
pusha
aad
push
gs
xor
sbb
std
nop
mov
push
nop
cltd
icebp
inc
mov
and
dec
movsl
aas
mov
push
cs
push
testb
mov
or
mov
scas
dec
lret
pop
xor
pop
aad
test
jo
test
lcall
imul
jge
push
cli
aaa
or
sbb
loope
nop
ss
dec
pop
inc
mov
add
dec
cmp
pop
cld
or
faddl
sarl
add
fisubrl
pop
lcall
sub
das
pop
xorl
pop
pusha
leave
sub
push
or
nop
das
inc
ja
lock
jne
sti
sbb
push
adc
pop
lahf
push
dec
mov
sub
sub
jecxz
test
sahf
xchg
mov
mov
cwtl
cmp
cmc
sbb
xor
jns
shrl
mov
fbld
xchg
mov
outsl
xor
mov
shll
cmp
jle
jns
repz
mov
xchg
add
aad
test
lods
mov
lea
jae
decl
out
pop
insl
push
xchg
pop
data16
daa
scas
push
xchg
sub
lret
scas
ret
cmp
and
mov
in
outsl
or
dec
fildl
lahf
cs
gs
jl
int
add
pop
movsb
lods
xor
add
dec
xlat
xchg
cli
ds
xchg
pop
add
push
icebp
mov
cmp
or
fistpll
xor
push
adc
xchg
and
fs
popf
sbb
pop
inc
pop
mov
sahf
pop
sub
adc
xor
rcrb
out
add
push
or
mov
pop
or
dec
into
inc
pop
ret
push
lea
jp
icebp
andl
sbb
bnd
bt
push
xchg
inc
or
ljmp
inc
dec
mov
xor
scas
shl
mov
inc
leave
outsb
inc
pop
loopne
ds
add
push
xor
mov
mov
xor
xchg
cmpsl
rcrb
xor
mov
test
dec
sbb
js
inc
cltd
dec
sub
jbe
dec
or
mov
je
xchg
and
mov
adc
push
sahf
dec
and
pop
mov
cmc
mov
fwait
ds
int
dec
cs
int3
xchg
adc
orb
imul
fdivrl
adc
roll
in
hlt
daa
sbb
and
sub
dec
or
push
cmpsb
js
movsb
enter
shufps
jb
sahf
mov
cmp
cmc
dec
push
pop
sub
lret
loope
mov
jge
daa
jge
aaa
xchg
lock
clc
lods
popf
cmp
out
int3
lahf
jb
hlt
adc
in
mov
dec
arpl
cmpsl
fstl
subb
sbb
jb
out
mov
call
xor
clc
gs
lcall
hlt
sub
ljmp
cmp
dec
cmc
and
or
adc
test
jmp
into
imul
mov
test
mov
xchg
pushf
and
jp
insl
xchg
jge
rorl
repnz
mov
loopne
push
bound
xor
lock
imul
enter
push
cld
movsb
push
sub
lret
mov
jbe
adc
jnp
xor
xor
repnz
xchg
jg
mov
cmp
xchg
mov
jg
movsl
out
lret
dec
bound
and
lcall
jbe
and
int3
or
add
lds
out
into
dec
push
or
orl
push
mov
pop
cmp
fs
jge
leave
das
sbb
idivb
mov
dec
and
dec
int3
stc
sahf
jge
jne
jnp
sti
cmp
stos
es
dec
jbe
rolb
aad
in
out
ret
shr
cmp
sub
fdivrs
inc
or
jge
inc
push
or
shl
mov
mov
sahf
push
loope
cmp
jmp
xchg
fs
add
or
mov
jbe
dec
cmp
mov
insb
cmp
repz
ja
jns
sub
or
lods
fwait
insb
pop
push
cld
in
pop
imul
std
addr16
pop
sbb
nop
push
or
popa
ljmp
xchg
arpl
leave
dec
or
sub
adc
test
dec
dec
dec
int3
and
movsl
int
xchg
notb
dec
adc
fwait
sub
int3
iret
test
lods
rcrb
inc
cmpsb
xchg
outsl
inc
bound
pop
fstpl
or
push
or
xor
cmp
cmp
imul
xchg
pop
pop
mov
adc
mov
pushf
inc
lcall
adc
scas
mov
sbb
mov
cmp
movsb
push
shlb
mov
push
adc
imul
sub
or
sbb
pop
pop
add
sahf
inc
stos
adc
push
and
test
repz
add
adc
jp
sub
lret
dec
mov
addr16
leave
push
int
nop
jle
add
adc
subb
or
push
lea
int3
mov
cmp
cwtl
out
das
jno
xor
adc
jnp
out
enter
push
pop
lock
cld
pop
shll
mov
lcall
adc
xor
loope
adc
stos
movsb
mull
rcll
outsl
gs
arpl
add
stc
adc
adc
add
sahf
or
ljmp
or
push
leave
sub
insl
jge
inc
in
jp
icebp
popf
xchg
adc
jne
pop
js
lret
daa
ror
mov
std
inc
ret
jo
rorb
cld
cmc
lea
call
scas
lock
leave
into
and
jo
sbb
jge
subl
dec
pop
xor
mov
pop
inc
cmp
mov
xchg
and
push
pop
xchg
pop
or
test
cmpsl
dec
nop
rcr
sub
cli
or
xchg
ret
add
jnp
push
in
into
stos
lret
mov
add
int
sbb
lret
inc
loopne
jne
inc
mov
mov
scas
jecxz
jp
push
int
dec
mov
rcrl
inc
xchg
jnp
and
push
mov
push
push
push
jl
loope
push
cmp
xchg
fs
push
ret
push
insb
and
mov
push
jl
daa
and
idivl
pop
jl
cmpsl
ret
inc
mov
loop
daa
sbbb
fwait
jg
outsb
sub
sub
fdivrs
inc
dec
jmp
jge
lcall
pop
jl
movsl
int
test
daa
sti
mov
jbe
xchg
sti
lahf
dec
xchg
aas
jl
repz
bswap
sub
and
lods
push
mov
sub
pop
mov
ret
cltd
fcompl
add
icebp
mov
test
mov
scas
jbe
test
sub
jne
cld
fsubrs
jle
dec
mov
loope
and
fistps
addr16
addl
scas
imul
js
and
sub
mov
mov
arpl
inc
imul
xchg
outsl
adc
dec
out
aam
xchg
repnz
mov
mov
cwtl
js
cmp
or
mov
test
push
mov
inc
in
lahf
in
add
push
fcoms
or
xchg
xchg
mov
call
lret
xchg
clc
and
sar
fcomps
lds
fsts
sub
mov
in
mov
mov
mov
push
test
rcrb
xlat
ret
testb
lahf
jmp
js
popa
arpl
xchg
clc
pop
xor
xor
addr16
out
mov
fs
pop
ja
outsb
call
cmpsl
lahf
fwait
mov
pop
cmpsl
sbb
cmpb
sbb
xchg
xchg
aas
mov
loopne
enter
lret
int3
adc
cwtl
cmpsb
jbe
ja
stos
xchg
stc
pop
dec
dec
stos
scas
rcrl
sub
dec
roll
mov
pop
out
dec
out
sbb
and
push
fildll
jle
cmpsb
and
sbb
out
inc
fwait
ja
testl
movsl
mov
in
scas
mov
sub
xchg
cld
sub
push
rorl
push
or
add
xor
mov
out
mov
cmpsl
insl
ret
das
fcoms
ds
mov
pusha
pop
adc
mov
inc
cltd
cmp
and
sbb
psllq
and
out
insl
sbb
call
cld
sbb
sub
cltd
lret
je,pn
pop
mov
iret
push
add
push
sbb
xchg
xchg
mov
adc
push
popa
sub
xor
cmc
in
pop
dec
pop
lods
add
mov
push
pusha
adc
add
imulb
inc
in
mov
inc
mov
or
xchg
negb
stos
scas
mov
or
lods
mov
dec
enter
jno
mov
sbb
mov
sub
push
cltd
mov
xor
mov
lock
xchg
push
inc
loope
into
dec
ret
out
push
ffree
and
insl
mov
ss
popf
mov
sbb
xor
popf
cmp
fcmovbe
mov
mov
out
arpl
cld
movb
decb
cmp
push
and
pop
fdivrl
jp
jae
imul
lret
adc
stc
adc
sbb
popa
bnd
aam
jnp
iret
sbb
jae
fs
mov
inc
mov
aas
cwtl
in
iret
lods
pop
sbbl
inc
jae
popf
movsl
sbb
in
jl
push
inc
inc
in
and
loope
shrl
jle
leave
int
shrl
mov
mov
adc
dec
fistpll
sbb
leave
rcll
cli
sbb
cmc
mov
mov
aad
mov
mov
inc
cmp
mov
and
in
push
into
pop
loope
push
bnd
push
gs
out
xchg
add
adc
sbb
aad
inc
in
bts
test
mov
icebp
pop
cli
cmp
mov
nop
sub
push
xor
iret
lret
dec
jnp
inc
es
and
push
cwtl
dec
mov
test
mov
or
jae
sahf
test
inc
and
popa
mov
orb
leave
popf
cltd
push
mov
adcl
cmp
push
sti
aas
mov
mov
in
pop
cltd
lret
iret
lret
sub
sbb
cmp
or
ljmp
add
imul
imul
and
jp
cld
xchg
push
dec
idivl
mov
addb
sahf
xchg
lock
adc
push
pop
out
lea
ljmp
pop
orb
adc
out
hlt
jg
out
adc
sub
cmp
xorb
mov
lods
jbe
push
mov
inc
je
lahf
sar
stc
lret
cmpsl
xchg
or
jbe
sub
sub
jle
out
mov
mov
popf
ds
sub
pop
fbld
testl
jecxz
sub
mov
push
fwait
xlat
adc
lods
mov
notb
pop
or
fdivrs
shr
mov
push
jo
xor
push
mov
outsl
sbb
and
add
or
lods
push
cmpsl
or
sub
or
push
je
sbb
xchg
sti
add
fwait
rcrl
inc
lock
lcall
in
jns
in
stc
and
mov
and
loopne
pop
cwtl
test
fwait
outsl
data16
ljmp
mov
cmp
fcompl
enter
push
xchg
stos
xor
mov
leave
push
movsl
cmp
mov
insb
shl
add
push
test
jecxz
fidivrs
in
mov
mov
int
in
mov
out
xchg
fwait
loopne
fadds
cld
mov
data16
push
stos
repz
mov
sbb
lods
jecxz
les
faddl
adc
sbb
dec
stos
out
adc
inc
sbb
aas
icebp
subl
test
jns
pop
lods
pop
fdivrs
dec
test
jmp
int
mov
test
repnz
pop
push
lret
lock
xor
mov
adcl
push
jne
xor
fistl
cmp
lea
jno
in
test
rcrl
mov
or
mov
mov
out
mov
jmp
jb
xor
pop
or
cmp
cmc
and
int3
jns
sbb
mov
mov
fildll
jle
or
and
adc
lods
jae
es
addr16
lods
or
pop
cltd
push
xchg
push
adc
xchg
mov
xchg
jmp
ja
push
lcall
pop
pop
rol
add
aas
jg
cmp
call
lock
sbb
or
lret
cmp
fdiv
sbb
xor
int3
lods
mov
cmc
jns
mov
or
cmp
movsb
xor
mov
fwait
lret
insb
fwait
push
cmp
roll
xorb
test
gs
sub
outsb
cmp
lret
int
mov
std
jo
mov
pop
test
rorl
cmp
shrl
dec
inc
data16
cmp
dec
test
rolb
aad
into
and
loope
int3
jo
jp
fwait
cmp
stos
jg
nop
add
push
push
mov
in
push
push
fs
mov
adc
jbe
out
aad
push
mov
scas
pop
iret
int3
jl
dec
aaa
mov
mov
push
pushf
imul
dec
push
jmp
mov
sub
inc
xor
jno
popa
push
cmc
jg
call
ljmp
loopne
fidivrs
add
in
add
fwait
mov
fcomps
mov
or
pop
fldt
sbb
add
clc
arpl
jle
hlt
mov
repnz
sub
and
loopne
outsl
imul
das
add
mov
mov
adc
push
aaa
push
mov
cmp
scas
jle
out
dec
fwait
into
pop
sub
jb
inc
cmpsb
or
cmp
inc
shlb
or
bound
in
loopne
ja
dec
hlt
iret
mov
outsb
and
mov
hlt
sub
pop
insb
aaa
xchg
xchg
jnp
stc
sahf
xor
call
and
adc
neg
sub
sbb
fcoms
lcall
clc
sahf
test
xor
pop
mov
shr
add
scas
scas
pop
rcrl
aam
push
iret
jmp
adc
inc
jle
xchg
mov
lcall
je
insl
dec
cmpsl
push
mov
jg
jg
mov
xchg
dec
testb
pusha
sbb
mov
inc
cmpsb
sar
xchg
lcall
xor
imul
mov
test
or
dec
cli
out
addr16
xchg
aam
pop
mov
ret
xor
mov
test
pop
and
dec
cltd
out
mov
jge
jle
dec
ret
push
fdivr
xchg
jb
movl
js
daa
cs
incl
testb
mov
sbb
sbb
imul
incl
push
cmp
dec
outsl
push
insl
inc
xlat
push
insl
push
jmp
in
jge
inc
mov
sbb
out
sahf
hlt
imul
aaa
sbb
mov
fstps
adc
out
stc
lahf
sbb
mov
enter
push
lea
movsb
fwait
or
jae
adc
jbe
scas
sti
ja
jnp
fwait
addr16
out
dec
test
lods
aad
cmp
movsb
fld
inc
pop
stos
inc
xlat
das
mov
arpl
mov
int
xor
fcomp
cltd
es
sarl
fs
dec
xchg
push
jb
out
mov
mov
xor
add
movsl
lods
jp
sub
enter
lods
jne
insb
or
jmp
inc
popf
stos
negl
sub
int
addr16
add
cwtl
dec
dec
and
dec
hlt
push
add
cmp
fldl
icebp
sub
ret
pusha
loope
mov
sub
push
jle
push
xchg
and
xchg
cmp
sbb
cmpsb
add
sbb
fsub
aas
adc
loope
sbb
je
sub
push
adc
cmp
pop
pushf
scas
cmp
sub
test
pop
cwtl
icebp
repnz
sti
xor
movsl
leave
push
les
das
xchg
jp
cmp
dec
es
lcall
mov
sub
sbb
repnz
lea
mov
jmp
mov
aad
xchg
and
stc
xor
sub
adc
push
into
mov
sahf
sub
add
mov
sub
shlb
pop
mov
sti
dec
inc
cld
add
imul
or
pop
mov
ds
ret
xchg
xor
hlt
push
or
pop
adc
pop
data16
jp
je
aad
int3
rcrl
add
inc
mov
rorl
xchg
fdivr
sahf
xor
leave
push
cmc
incb
fmull
and
pop
fsubrl
out
and
pop
fwait
out
jne
popa
mov
and
inc
mov
out
mov
push
pop
sbb
rorl
cmpsb
pop
mov
xor
fmul
retw
pop
pop
pop
xor
mov
mov
test
and
or
ret
mov
sub
dec
jmp
mov
pop
xchg
ret
jae
mov
mov
and
pop
out
pop
adc
popa
out
movsb
xor
or
enter
ret
and
arpl
mulb
aaa
inc
and
ds
push
cli
cmp
and
rcl
loopne
xchg
sbb
and
int3
lea
add
adc
and
int
fcmove
mov
std
iret
adc
paddq
aam
dec
jge
idivl
jmp
cli
xor
popl
lds
orb
xchg
out
xchg
pop
pop
xor
js
inc
movl
jp
cmp
or
sbb
pop
jbe
inc
insb
xchg
int3
pop
mov
cmp
mov
in
cltd
or
push
add
push
pushf
into
and
push
call
mov
lcall
xor
mov
pushf
sub
push
jp
xor
mov
rcll
dec
dec
cmp
inc
jo
stc
es
jmp
ficomps
gs
jae
push
push
mov
mov
scas
and
or
aaa
xabort
addr16
fidivrs
sbb
call
pop
dec
outsl
stos
call
sbbb
lcall
dec
es
adc
adc
js
mov
xlat
pop
jo
imull
jp
push
adc
cli
jmp
mov
jno
sub
pop
sub
push
lcall
inc
mov
jnp
add
inc
pop
int
jns
test
xor
xor
dec
jl
pop
adc
ret
mov
inc
jmp
jns
push
xor
bound
repnz
pop
lods
imul
into
mov
fildl
dec
adc
mov
mov
arpl
cmp
inc
stos
fcmovne
inc
outsb
jno
inc
lret
jmp
jae
mov
mov
mov
test
sbb
sub
xor
cli
lret
aam
ds
mov
std
ja
aaa
stos
xchg
mov
or
ja
aad
stos
jne
push
out
push
jle
push
int
inc
adc
pop
cmpsl
push
adc
shlb
fsubr
sbb
pop
adc
jg
mov
aam
xchg
mov
xchg
adc
movsb
mov
in
jae
aad
stc
mov
into
xor
mov
jecxz
rol
cmp
popa
setp
lods
mov
or
jge
rclb
push
lret
nop
adc
cmp
cs
repnz
push
cmp
or
inc
jb
imul
arpl
xchg
fmuls
mov
leave
gs
or
xlat
outsb
rclb
jne
dec
push
jecxz
xor
push
xlat
scas
shl
movsb
add
or
fadds
sub
push
mov
xchg
lods
adc
aaa
inc
out
mov
jae
and
xchg
ror
in
fsub
or
movsb
and
xchg
add
xchg
aam
cli
jae
push
imulb
loopne
enter
sbb
insb
xchg
orb
mov
cmpsl
sbb
ret
test
xor
pop
cmpsb
push
mov
jecxz
adc
mov
mov
loopne
movsb
xlat
sub
xchg
fstpl
das
jns
cli
nop
mov
pushf
fldl
and
ret
fxam
dec
cmpsl
scas
dec
dec
push
cld
jge
cmp
push
popa
cmp
in
cmp
lods
std
lahf
stos
testl
inc
inc
push
pop
push
cltd
mov
addl
push
lret
sbb
pop
xor
cmp
sbb
add
mov
push
dec
pop
das
outsb
or
pop
stos
jb
pop
movsl
xchg
xor
cmc
sbb
inc
test
xlat
insb
inc
and
stc
mov
orb
inc
lahf
mulb
lods
jo
sub
out
sbb
push
mov
xchg
xor
cmp
bound
and
fimuls
dec
xchg
icebp
int
push
sbb
sub
inc
sbb
jae
jae
test
loopne
divl
dec
imul
das
push
fisttps
inc
mov
jne
xchg
pop
xor
sbb
mov
repz
rcll
jmp
cwtl
insb
inc
outsl
jbe
fcmove
mov
inc
seta
sub
xchg
loop
mov
mov
fsubrs
mov
xor
out
add
push
add
sbbb
fsubr
mov
xchg
push
sbb
insl
cli
ret
dec
push
mov
dec
call
push
push
mov
insb
dec
nop
xchg
pop
mov
xor
xor
dec
xor
and
loopne
mov
mov
or
xchg
stos
mov
aad
xchg
mov
bound
mov
sbb
popa
sti
or
lcall
push
insb
pop
bound
popa
mov
push
pop
iret
dec
lock
imul
stos
fimuls
mov
push
mov
xchg
arpl
xor
fbstp
xchg
mov
fcmovu
push
cmpsb
push
cmc
mov
push
push
popa
mov
push
cmp
xchg
daa
xchg
andb
mov
test
std
adc
xchg
jle
rcl
xchg
mov
sahf
lds
shl
or
adc
pop
shll
ljmp
fsubrl
sub
fcomp
int
pop
stos
aam
xor
pop
in
js
sub
xor
inc
jb
dec
jbe
cmp
or
lods
arpl
dec
outsb
sub
insb
xor
dec
arpl
ror
je
pop
test
ss
pop
mov
cmp
cmp
cmpsl
jg
push
and
jnp
scas
pop
push
js
push
lds
inc
push
jne
and
xor
cwtl
and
jo
pop
dec
jecxz
pop
and
lahf
cli
add
popf
dec
das
jnp
or
push
in
mov
add
cli
pop
aad
ljmp
xchg
insb
aaa
neg
jno
in
leave
fcmovu
dec
cmc
in
inc
mov
pop
mov
push
pop
pop
movsl
mov
gs
cli
into
mov
push
xor
fisubs
loopne
and
lret
mov
and
xchg
mov
xor
dec
jmp
push
es
lret
jbe
push
cmpsb
lcall
mov
in
pop
add
and
jecxz
into
lret
push
cmp
push
xchg
data16
jae
jecxz
inc
mov
mov
mov
jge
xorl
outsl
mov
jl
sbb
mov
push
mov
mov
clc
push
add
mov
jmp
sahf
daa
adc
leave
cmp
mov
sbb
pop
add
decb
out
test
xor
cmpsb
test
cltd
lods
jle
loopne
test
out
rolb
pop
adcl
std
stos
push
cmp
mov
mov
sbb
lcall
ficoml
xor
lret
adc
packsswb
in
in
fisttpl
jp
lds
out
mov
aas
hlt
and
sarl
movsb
lods
clc
mov
adc
pop
ljmp
xchg
clc
cltd
int3
jmp
lahf
mov
add
fwait
out
mov
xchg
sub
jno
xor
stc
jp
sub
ficoms
sbb
or
mov
fildll
add
sbb
idivl
xchg
aam
mov
std
mov
push
cmp
stos
mov
or
push
xchg
pop
ja
xor
xchg
mov
mov
inc
outsb
mov
movsb
sub
nop
xchg
shrl
scas
xor
or
cs
adc
loopne
cwtl
xor
xlat
jbe
xor
test
dec
push
pop
pop
xor
into
cld
in
dec
sub
aam
jne
imull
mov
mov
enter
dec
test
dec
add
add
push
or
lds
and
fildll
stos
push
add
in
clc
ljmp
inc
cld
xor
repnz
xchg
test
mov
sbb
jae
or
xchg
cli
inc
xor
outsb
push
xchg
xchg
or
adcb
in
xchg
mov
sbbl
xchg
cmp
jbe
xchg
xchg
and
push
pop
stos
lcall
xchg
mov
mov
or
xor
mov
ret
add
pushf
add
pop
mov
sarl
dec
scas
mov
call
ret
shll
test
jl
das
dec
cmpsb
mov
xorl
cmpsl
out
cmp
lret
lods
push
adc
and
cwtl
cmp
and
sahf
pop
add
push
std
jbe
push
shr
mov
ret
in
dec
jbe
or
imul
iret
xchg
js
daa
jb
adc
inc
popf
add
test
addr16
rclb
sbb
in
leave
rcrb
repnz
jae
rolb
popf
mov
scas
aas
mov
ljmp
loop
pop
jl
aaa
test
dec
or
in
pop
stos
out
sbb
out
jp
lods
adc
push
mov
in
pop
in
cmp
mov
sub
adc
in
dec
dec
sbb
lods
bound
aam
pop
xchg
cmpb
lret
xor
cmp
mov
hlt
xor
add
jo
pop
and
adc
out
call
out
push
pop
idivb
out
fidivs
mov
iret
popf
sbb
mov
inc
insl
lods
dec
jge
loope
leave
clc
or
push
stc
test
push
das
or
cmp
decl
out
mov
daa
and
add
push
xchg
mov
je
push
iret
sbb
sub
pop
test
outsl
iret
push
dec
pop
lcall
xor
dec
in
leave
aaa
jno
push
into
dec
rolb
int
in
scas
mov
scas
in
push
outsl
leave
js
pop
jbe
pop
xlat
add
jno
insb
add
and
dec
cs
xor
jle
aam
sti
fcmovne
push
fmulp
jg
test
faddl
scas
les
lret
jge
in
ss
es
mov
xchg
pushf
rcl
mov
or
sahf
mov
xor
and
fucomi
jecxz
or
sbb
mov
shrb
rcr
addr16
and
xchg
adc
into
dec
jmp
aas
sbb
insl
jb
xchg
outsl
test
inc
and
cltd
pushf
mov
mov
mov
adc
jge
push
daa
and
cwtl
outsb
jnp
rcrl
push
out
mov
pop
ret
mov
jecxz
mov
or
adc
fdivs
cli
mov
shlb
ffreep
xchg
mov
clc
add
enter
adc
shrl
setnp
adc
sub
inc
or
lret
lahf
sub
xchg
shlb
ret
sub
roll
inc
cmp
addr16
inc
dec
leave
fidivs
ljmp
xor
cld
sub
cmp
jle
inc
daa
movsl
sbb
imul
dec
jle
xchg
inc
cwtl
cmp
and
fcoml
mov
cmpsl
fstpt
and
loope
fs
sub
mov
pop
pop
shr
test
cltd
nop
push
inc
enter
push
push
cltd
sbb
xchg
jg
jl
cmpb
in
lods
cmpsl
or
adc
dec
mov
outsl
out
push
in
xchg
sub
lret
mov
aam
xchg
rcrb
rclb
movsb
sti
fnstcw
xchg
push
jecxz
inc
leave
adc
dec
xchg
mov
jno
lret
add
outsb
pop
add
mov
mov
es
je,pt
sub
jno
idivb
aas
daa
jecxz
cmp
jo
mov
mov
loope
repnz
sbb
enter
cmpsb
mov
popf
or
jnp
jmp
mov
jnp
push
xchg
add
iret
cmp
int
pop
mov
ret
xor
out
movsb
xchg
pop
mov
push
mov
jns
sub
sub
imul
clc
out
push
mov
adc
nop
test
stos
and
imul
pop
or
loop
lret
mov
mov
lods
subl
inc
shlb
xor
cld
pop
bnd
addr16
pop
mov
mov
push
pop
xchg
inc
cmp
or
mov
adc
and
cmp
pusha
sub
fistpll
out
push
adc
icebp
mov
das
repz
pop
push
and
sbbl
adc
sub
push
loopne
fstpt
xchg
sti
xchg
fwait
sti
jb
arpl
jne
mov
cmp
cmp
and
add
or
sahf
xchg
ja
push
jmp
dec
mov
jnp,pt
icebp
aaa
lret
cmp
loopne
sbb
daa
add
xchg
inc
iret
stos
movq
xor
lods
cmp
xchg
ljmp
dec
pop
dec
insl
pusha
jl
sbb
push
mov
in
cmp
ja
in
push
sbb
dec
cmpsl
cli
test
push
mov
jmp
mov
push
test
mov
stos
jne
add
xchg
pop
dec
cwtl
xchg
mov
test
jns
xor
cmpsb
add
scas
test
sbbb
stos
xchg
and
int3
push
adcb
xchg
clc
arpl
mov
in
out
sbbl
sbb
fisttpll
mov
add
xorb
jno
fldt
cli
mov
repz
inc
mov
ret
sbb
loope
push
insl
xor
mov
xor
orl
arpl
xchg
adc
inc
andb
pop
lods
xchg
fucompp
stos
divl
jmp
xchg
dec
aas
and
imul
ja
cs
pop
mov
or
mov
fsubs
xor
push
xor
mov
dec
jns
repz
xchg
xchg
mov
push
lcall
testb
adc
les
in
mov
fimuls
push
shr
dec
pop
fistpl
int
adc
faddl
mov
and
adc
cmp
sub
fdivrl
jecxz
mov
sahf
out
das
iret
add
fdivs
out
mov
addr16
insl
dec
testb
fsubrs
xchg
movsl
lcall
pop
out
push
pop
add
xchg
loope
loop
add
dec
movsl
pop
jp
dec
add
mov
cli
cmpsl
sbb
int
add
pop
lea
push
ljmp
es
xor
inc
leave
das
push
dec
aas
arpl
insb
cmp
pop
xlat
addr16
push
dec
daa
xchg
or
jge
sub
adc
call
pop
pop
add
outsl
jmp
cmp
push
mov
aad
int
xlat
movsl
cmp
sbb
sahf
aam
and
cli
xlat
xor
cmp
ficoml
mov
clc
sbb
aaa
js
nop
loop
add
pop
iret
outsb
dec
into
leave
xor
fsubl
test
dec
sti
nop
std
cli
adc
pop
out
pop
sub
dec
test
mov
push
add
or
adc
or
sub
and
hlt
bound
mov
jecxz
pop
pop
or
nop
stos
lds
cmp
cmp
mov
andl
mov
cmpsl
xchg
add
bound
sub
inc
pop
dec
fstpt
out
mov
push
popa
and
dec
jmp
popa
push
mov
lods
mov
fsubrp
fwait
xchg
adc
hlt
rcrl
push
dec
jge
push
xchg
out
inc
xor
movsb
xchg
push
hlt
push
pop
in
sub
mov
mov
xchg
lret
int3
popf
fldt
fmul
jp
in
mov
int
movsb
in
jno
and
sbb
insb
adc
xor
sbb
jecxz
scas
dec
xor
fnstsw
jl
lods
cmpsl
xchg
jae
lods
fsubrl
int
pusha
adc
ljmp
pop
sbb
int
fidivrl
push
push
add
or
or
push
mov
lea
stc
xchg
shll
repnz
fabs
mov
xlat
in
xchg
in
add
fnsave
push
xchg
fidivs
movsb
add
jge
mov
imul
add
jae
std
movsb
mov
test
sbb
or
and
mov
cs
mov
pop
pop
pop
sub
test
mov
add
or
dec
dec
in
jae
jae
mov
sbb
loopne
loopne
inc
inc
mov
fdivrl
add
dec
jo
xorb
sbb
bsr
pop
mov
fsubs
and
mov
or
scas
mov
pop
rcrb
lods
je
push
and
xor
movsb
negl
jle
rolb
out
xor
outsl
inc
dec
sahf
push
dec
jp
std
lock
nop
lock
sub
notb
adc
sub
sub
mov
cmp
out
inc
mov
mov
ss
rcr
mov
pop
jmp
xor
lock
pop
adc
push
xchg
jne
loope
js
sub
lret
push
popf
mov
mov
les
pop
add
xchg
aaa
xlat
xchg
repz
and
iret
flds
or
ds
fidivl
jmp
aaa
in
adc
jbe
sub
push
shrb
insb
inc
xchg
pop
sub
enter
sub
add
bound
push
cli
sub
xchg
pusha
jno
jmp
mov
sti
or
test
add
test
mov
cmp
and
les
mov
ja
cmp
push
js
sti
orb
jmp
inc
xor
stos
mov
adc
and
rclb
ret
in
test
mov
or
mov
in
in
push
jo
sub
cmpsb
inc
sub
out
or
ds
adc
xchg
dec
mov
push
nop
dec
add
rolb
sbb
fidivs
xor
fwait
lret
and
cmp
cmp
push
mov
dec
xchg
inc
add
inc
mov
stos
cld
mov
js
gs
xchg
cmc
xor
mov
imul
adc
and
stc
rol
pop
push
mov
imul
push
sahf
dec
sahf
negb
dec
xor
inc
mov
lods
fldl
add
pop
xchg
ljmp
and
sbb
sti
pop
sbb
je
daa
insb
in
xor
sbb
vcvtdq2ps
ljmp
xor
icebp
xchg
cli
push
mov
and
mov
out
test
or
xchg
push
stos
enter
fimuls
mov
orb
mov
add
out
or
repnz
stc
out
sub
adc
sbb
fldenv
hlt
push
icebp
dec
mov
cmp
dec
xor
ds
add
jg
test
pop
mov
cwtl
test
popa
sbb
mov
in
mov
jns
in
push
mov
cmpsl
and
sbb
clc
mov
sbb
jge
xor
loop
aad
and
or
lret
out
sub
cmp
sub
rcrb
clc
aas
jp
ret
mov
xchg
inc
sub
cs
push
sub
popa
imul
push
loope
aaa
stc
jg
aaa
scas
lock
xchg
shr
shrb
out
popf
push
push
inc
pop
add
dec
nop
jne
into
pusha
adc
movsl
sahf
test
jo
fimuls
dec
pop
push
jb
pop
cmp
dec
clc
cli
inc
loope
mov
sbb
jns
add
leave
les
lcall
xchg
mov
sbb
iret
sbb
mov
mov
inc
pop
fiadds
and
jbe
fdivl
jmp
xor
iret
or
or
repnz
push
mov
outsb
fisubl
and
divl
xor
sbb
sahf
out
jne
and
jnp
or
out
mov
inc
frstor
add
pop
or
repnz
daa
loope
cmp
jns
popa
dec
icebp
divl
lahf
ss
aaa
add
mov
pop
sbb
sub
add
jne
lea
jb
push
loop
inc
push
xchg
sbb
sub
or
push
ret
and
push
jge
dec
out
setns
jge
fdivrl
mov
push
inc
std
mov
mov
cwtl
lock
add
das
int3
adc
test
add
or
xor
cli
dec
stos
fbstp
lock
cmp
pushf
sub
cli
mov
push
cmp
push
dec
xor
xchg
int3
dec
jge
fidivs
lods
fucom
jae
fnstcw
shll
push
cmp
pop
mov
das
cwtl
jmp
out
adc
ret
gs
jb
sbb
and
out
sbbl
push
test
fnstenv
iret
stos
lods
iret
stos
xchg
inc
lods
mov
notl
jecxz
lock
and
movsb
adc
insb
push
or
repz
add
xchg
inc
test
scas
and
psubusb
fists
push
loope
adc
mov
out
arpl
push
enter
sub
rclb
sub
adc
aam
mov
mov
or
decl
add
jmp
cli
cli
ljmp
repnz
shll
jmp
int3
ss
push
iret
add
xchg
jae
hlt
test
push
mov
inc
shl
xor
icebp
cmp
cmpl
cmp
mov
mov
cmp
dec
dec
adc
movsl
inc
xor
sub
cmp
mov
out
fidivrs
cmp
out
xchg
shrb
in
shr
out
lock
iret
xchg
stc
cmp
ljmp
repnz
test
and
scas
push
int3
aas
cmp
jle
jge
adc
fildll
fwait
sbb
cmp
outsl
inc
ss
pop
test
xlat
cltd
sbb
aam
mov
push
addr16
add
adc
mov
in
call
mov
pop
pop
mov
out
popf
arpl
insl
xor
push
and
call
jp
rclb
sub
and
fs
xchg
pusha
cwtl
pop
arpl
push
in
packssdw
dec
and
inc
jecxz
sbb
das
out
jae
inc
add
dec
daa
pop
inc
push
fwait
adc
ficompl
mov
in
push
sub
jmp
lret
adc
push
mul
fildll
call
mov
fs
pop
adc
pmovmskb
outsl
loop
aam
fimuls
roll
js
pop
stos
pop
dec
jae
mov
sbb
fldcw
shll
lds
enter
sub
xor
js
fisubs
popa
icebp
xor
loopne
sub
roll
aam
jecxz
mov
xchg
xchg
xchg
cmp
pop
lods
loope
xchg
cmc
out
cmp
cmp
sbb
rclb
mov
cs
mov
lcall
and
cld
outsb
pop
sub
cmp
daa
scas
sbb
mov
ret
les
cmp
xchg
adc
fcomps
lahf
sub
sub
jecxz
les
insb
stos
xchg
loop
cmp
push
mov
and
out
ret
lds
mov
roll
xor
aad
sub
in
jg
jb
lock
les
mov
add
mov
or
jno
bound
mov
and
or
mov
dec
cmp
inc
jl
inc
scas
popa
xchg
xchg
push
cmpsl
daa
mov
jno
je
xchg
repz
add
mov
imul
ds
stos
inc
xchg
arpl
stos
sbb
fldenv
sbb
sbb
sbb
adc
add
xor
jp
inc
sti
and
shlb
test
ret
and
mov
imul
test
aaa
daa
pop
call
das
add
cltd
adc
push
mov
cmp
incl
xchg
stos
and
loop
cmp
aam
mov
mov
out
pop
mov
rcrb
gs
popa
jg
sarb
jp
cli
sub
repz
push
test
mov
and
sub
sti
insl
mov
jmp
call
jo
and
xor
or
sbb
or
and
das
je
stos
mov
push
stos
scas
cwtl
aad
xchg
push
xchg
fdiv
fs
push
add
gs
lds
outsl
push
out
popa
int
movsl
test
pop
insb
mov
out
ret
inc
xchg
inc
xchg
in
pusha
mov
mov
mov
pop
pop
es
jge
fcoml
enter
stos
xor
fwait
sub
jnp
dec
imul
outsl
loop
lds
lds
popf
jno
cmp
cmp
and
adc
dec
movq
jl
lods
arpl
mov
pop
test
xchg
jg
mov
jns
dec
imul
jb
push
jae
sbb
insl
je
cmp
or
mov
inc
cmp
push
dec
test
cmp
push
rcll
pop
ss
imul
xchg
xchg
fdivrp
daa
mov
mov
jle
pop
mov
fnstsw
push
sub
cmp
jae
xchg
fs
lret
pusha
jg
call
jge
push
fisubs
inc
xchg
sbbb
fildl
fildl
mov
pop
inc
push
in
ja
jnp
pop
in
rclb
popa
call
movsl
stos
aad
cmp
sub
iret
push
jo
jnp
fstpl
push
outsb
fwait
stos
mov
add
cs
jg
mov
jne
ljmp
das
rolb
mov
xchg
mov
scas
ljmp
pop
sbb
dec
ret
mov
aam
es
cld
stos
ljmp
aaa
lock
dec
adc
add
cmc
outsl
inc
imul
mov
xor
xor
sbb
addr16
mov
gs
and
loope
xchg
mov
fidivl
aas
inc
cli
stos
int
xchg
lcall
fists
jae
insl
add
inc
pushf
jbe
ret
cltd
mov
sbb
ret
sbb
les
inc
jbe
int3
ficoms
cmpsl
pushf
dec
insl
insb
mov
sbb
push
lods
mov
dec
lahf
movsl
jecxz
pop
xor
add
and
jg
pop
and
lods
das
ljmp
jb
rcr
mov
ss
pop
xor
and
ja
sbb
sbb
in
xchg
push
add
sub
sub
and
ljmp
dec
movsb
test
stos
mov
jge
test
gs
adcb
mov
xorl
and
mov
sbb
sbb
bound
scas
mov
add
cltd
cwtl
jns
add
pop
xor
xchg
in
add
mov
jg
aaa
lock
in
movsl
mov
sbb
icebp
mov
jne
loope
dec
cli
jnp
outsl
sub
mov
in
jmp
les
fbld
push
pop
cmp
jbe
cs
jne
adcl
sbb
add
xor
test
incl
cmp
mov
push
enter
lahf
dec
adc
push
lret
fcmovne
movsb
test
lahf
jmp
push
cmp
pushf
jno
or
push
movsl
jecxz
xchg
cld
jbe
push
cmpb
repz
sub
sub
je
sbb
xor
push
stos
mov
mov
xor
push
xchg
push
loopne
xor
aad
add
and
mov
aam
mov
fbld
icebp
cmp
mov
outsb
loop
add
pop
dec
dec
iret
pop
je
mov
fsubl
or
mov
and
mov
cmp
dec
xchg
mov
push
push
dec
outsb
daa
in
daa
mov
push
pop
mov
sub
ja
and
call
push
or
movsl
leave
and
push
adc
xor
pop
jne
scas
cmp
stos
pop
jle
adc
aaa
loopne
leave
adc
pop
mov
dec
mov
jg
orb
inc
sbb
ret
sbb
and
adc
sarl
daa
lret
rcll
push
orb
outsb
pushf
sub
jb
push
mov
lahf
sarl
loope
mov
pop
inc
cmp
xor
dec
cld
sub
add
jecxz
pop
dec
push
imulb
out
fs
pop
pop
mov
and
hlt
cmc
add
mov
jnp
push
ds
fs
loope
sbb
mov
loope
dec
cmp
repz
fwait
dec
sbb
mov
jp
dec
inc
xchg
es
out
mov
xchg
arpl
or
aaa
xor
sbb
aaa
repz
lret
adc
add
push
cwtl
insb
xor
pop
sub
mov
xchg
aam
inc
push
pop
inc
insb
movsl
mov
aaa
test
stos
aam
and
push
jl
xor
pop
or
mov
jo
pusha
cmp
add
jle
jnp
out
mov
mov
jle
xchg
fdiv
mov
push
movsl
push
mov
jbe
lret
sub
dec
in
mov
out
ret
fcoml
xor
lcall
jmp
js
pop
inc
dec
pop
cltd
xorb
fisubs
xor
dec
cmp
dec
and
lock
imul
in
outsb
mov
add
cmpsb
sahf
add
js
or
xor
ss
out
mov
or
cmpsl
jecxz
repz
ret
stos
ret
rol
lret
xchg
or
cmp
int
iret
jne
ss
jne
sbb
lock
bswap
push
shl
jo
mov
mov
sbb
xlat
xchg
pop
test
arpl
loopne
cmpsb
xchg
push
push
lods
scas
call
mov
test
pop
xchg
test
ror
int3
ds
mov
sbb
ljmp
aad
push
sub
rolb
addb
std
lods
push
pushf
outsl
adc
rorl
loope
sub
xor
test
add
scas
pop
xchg
pop
cmp
push
jge
or
xlat
inc
into
mov
in
jge
popa
js
jae
mov
shr
xchg
push
sub
iret
sub
jmp
jns
sbb
rcll
push
bound
jne
repnz
xor
mov
int
inc
idiv
lea
nop
iret
lods
jnp
sbbl
arpl
dec
xchg
xchg
loop
xchg
jmp
fnstsw
jnp
xchg
push
add
mov
push
lcall
jp
aas
fcmovne
idivb
xor
adc
jbe
dec
lret
xchg
test
repz
jmp
sbb
push
addl
in
dec
pushf
cmpsb
enter
pusha
or
ss
mov
lods
hlt
fsub
pop
pop
stos
sub
or
add
mov
lret
outsb
aaa
in
and
pop
push
cs
cmp
pop
rcl
imul
jnp
stc
ret
pop
loopne
mov
dec
push
jo
push
ret
int3
hlt
cmp
pop
xor
add
in
adc
ljmp
dec
pop
and
movsl
inc
ret
out
jmp
test
push
mov
push
push
rorl
or
sbb
mov
lret
lahf
adc
aam
xchg
fnstcw
xchg
stos
bndstx
jne
xor
cli
in
repnz
jmp
add
fdivs
pop
mov
rolb
inc
adc
inc
jnp
push
iret
sbb
mov
add
xor
sub
mov
adc
in
cld
pop
xor
jmp
mov
sbb
std
sbb
inc
fs
repz
pop
stos
inc
hlt
inc
movsl
xchg
shll
push
lods
add
insl
ret
add
dec
out
iret
cmpsb
cmc
push
pop
movsb
jmp
jg
jnp
inc
shl
xchg
outsl
sub
rcrl
mov
stos
aaa
push
xor
scas
inc
test
out
jns
jge
insl
lret
es
adc
or
jae
or
imul
es
sub
cmp
test
xor
push
outsb
popa
adc
adc
ficoms
push
test
fwait
sbb
dec
mov
dec
frstor
mov
ljmp
jge
scas
jno
inc
test
js
push
mov
xor
mov
loop
add
dec
push
lcall
aaa
and
test
mov
mov
dec
shrl
xchg
ja
outsb
or
test
bound
enter
jle,pt
pushf
cmpsb
xor
dec
jmp
lock
cld
rcll
dec
ss
jno
jmp
push
mov
test
pop
arpl
stos
jp
mov
insl
sbb
js
mov
nop
push
mov
mov
shll
stos
and
jecxz
inc
clc
adc
xchg
dec
push
sub
mov
icebp
inc
aaa
push
nop
cmp
xor
mov
out
jb
inc
mov
test
dec
mov
xchg
cld
dec
and
in
jns
dec
and
icebp
cmp
scas
js
fcompl
rolb
loope
or
jno
sub
push
xor
xchg
lcall
sbb
inc
push
ljmp
test
lahf
movsl
les
push
into
int
mov
add
lahf
add
rcrb
cmc
xor
jns
enter
adc
or
cmp
mov
stos
subl
mov
loope
mov
dec
push
loop
mov
jle
lock
and
fadd
pushf
pop
jg
inc
fldl
call
leave
inc
and
mov
repnz
inc
add
inc
pop
jl
sub
push
loopne
pop
pusha
int
pop
in
scas
outsl
push
clc
sub
jmp
xchg
jge
lods
push
xchg
test
lock
push
pop
jle
xchg
jnp
outsb
xor
mov
cli
pop
xor
xchg
inc
adc
or
jo
mov
mov
jnp
test
pusha
clc
lds
cmpl
les
inc
sahf
adc
jns
loop
enter
jp
jbe
rol
dec
aaa
mov
dec
and
pop
out
movsl
or
mov
nop
cmp
into
xor
cmp
cmpsb
cmc
btr
add
fdivl
insb
pusha
test
dec
leave
outsl
mov
push
mov
cmp
lds
add
jnp
pop
mov
addl
popf
div
aam
jo
cmp
inc
mov
test
adc
adc
push
cmp
sub
out
call
test
dec
xchg
pop
jl
fcmovnbe
cmp
shrb
add
cmp
adcb
mov
push
jl
testl
mov
pop
mov
mov
fistpl
xchg
int3
mov
out
xor
jnp
test
loope
aad
xchg
dec
movsb
add
dec
repnz
push
sbb
outsl
loope
mov
dec
mov
mov
lret
outsl
add
das
scas
xor
mov
jo
cwtl
flds
bnd
mov
xor
jp
gs
sub
cmp
adc
or
test
lock
jecxz
sti
in
cmp
jecxz
test
pop
add
test
mov
xor
lds
push
adc
sbbl
adc
into
push
add
arpl
in
sbb
cmp
jecxz
int3
int
fdivrl
dec
cld
insl
stc
push
in
pusha
outsb
jecxz
movsb
je
lret
pusha
mov
or
jbe
cld
ror
jns
cld
dec
loope
jae
push
and
sti
inc
inc
add
inc
dec
xchg
sti
mov
iret
aam
push
dec
je
mov
int3
or
mov
adc
sub
xchg
jmp
jnp
mov
add
fsubrs
cmp
push
pushf
lea
push
testb
lret
in
je
lea
inc
mov
add
flds
xor
mov
frstor
dec
push
es
scas
popf
test
aas
out
xchg
or
sub
jno
mov
das
mov
movsl
cwtl
daa
cmc
sarb
sub
pop
mov
nop
in
fs
jg
cwtl
addr16
mov
cmpsl
enter
nop
jmp
mov
icebp
xchg
sub
inc
sub
lret
xor
push
std
js
sbb
icebp
mov
and
cli
int
cmp
adc
inc
in
xorl
test
scas
lds
mov
int
inc
imul
loop
arpl
sti
shlb
fisubrl
outsl
sbb
lret
data16
ds
test
push
fsts
and
mov
or
lea
or
cmpsl
xchg
push
xor
out
pop
mov
popa
mov
out
fisttps
jecxz
push
dec
leave
shl
inc
adc
cwtl
pop
inc
repnz
insl
roll
pop
icebp
lds
xchg
daa
js
xchg
and
inc
mov
or
rorb
jo
sbb
outsl
sbb
insl
add
clc
add
std
or
cmp
xchg
stos
imul
jo
cmp
lock
cltd
xor
inc
add
push
and
jmp
xchg
mov
mov
xchg
xor
cwtl
out
push
jbe
arpl
and
punpckhdq
cli
push
rcrl
cli
mov
jmp
scas
jb
repz
add
stos
push
mov
stos
mov
dec
test
ljmp
mov
es
adc
xlat
jle
loopne
pop
fs
xchg
les
push
add
sub
dec
sub
fildll
xchg
iret
fld
pushf
imul
mov
popa
cmp
iret
cmpb
shl
outsb
test
and
scas
mov
push
xor
cmp
dec
mov
cmp
sahf
scas
xlat
mov
cmc
xor
dec
cltd
in
jle
insl
mov
daa
add
cmc
inc
movb
into
xor
jge
dec
mov
pop
movsl
sbb
imul
xchg
adcl
push
repz
pop
es
add
in
inc
cmp
negb
fcompl
mov
add
cmp
iret
in
fwait
sahf
and
xchg
and
aas
and
shufps
mov
imul
aas
in
push
xchg
sub
mov
sar
js
imul
xor
or
xchg
and
out
jmp
jle
test
cltd
xchg
add
enter
les
test
test
mov
fistl
xchg
insb
adc
out
xor
xor
lahf
sub
mov
push
pop
icebp
pop
in
xchg
and
cmp
lock
xchg
sub
stos
pop
lahf
and
mov
adc
imul
sahf
jnp
hlt
jp
jp
sarb
dec
in
xchg
mov
jne
lds
frstor
das
ljmp
ljmp
shl
lea
loopne
sbb
inc
popf
repnz
and
hlt
clc
rclb
cmpsl
call
push
sbb
fucomi
sub
or
addr16
pop
pop
fimuls
scas
int3
out
addr16
or
xlat
push
test
rcll
out
scas
cmp
mov
dec
fiaddl
xchg
dec
cmp
cwtl
inc
push
push
out
sbb
sbbl
push
dec
mov
lea
lea
lahf
or
and
xchg
xchg
mov
sbb
mov
leave
xchg
or
add
repnz
xchg
sbb
sub
mov
repz
adc
push
xor
in
jbe
std
mov
subl
into
mov
sbb
jmp
nop
mov
jl
dec
fiaddl
imul
insl
pop
mov
rcrl
lret
dec
push
aad
in
inc
xor
inc
sbb
pop
int
sbb
add
aas
enter
outsl
push
sub
flds
xor
lahf
dec
sub
bound
pop
adc
aaa
sbb
imul
dec
add
xchg
test
and
movl
clc
leave
push
inc
pop
fs
daa
lss
aaa
sub
adc
lret
stos
sbb
testl
and
mov
sbb
push
pop
inc
jno
mov
mov
jo
hlt
jge
inc
js
dec
inc
aam
or
rcr
addl
std
or
arpl
sti
lret
cli
dec
or
and
scas
mov
cmpsl
dec
mov
cmc
inc
hlt
in
outsl
xor
jae
adcb
xchg
pop
mov
mov
mov
jp
cs
xor
fwait
sti
inc
outsb
test
mulb
cmc
aaa
push
add
loop
rorb
and
pushl
idivl
lret
negb
and
mov
ret
adc
aaa
call
inc
jno
sbb
jns
cmp
popf
mov
push
push
jns
mov
jnp
mov
stc
pushf
jns
scas
xchg
test
mov
xor
adc
jg
ljmp
push
jge
jbe
xchg
or
jno
dec
icebp
jg
xor
dec
sbb
testb
and
jl,pt
mov
movsl
push
fidivrs
adc
push
outsl
ret
cmp
push
and
mov
scas
and
stos
lods
loope
inc
jne
outsb
fs
sbb
mov
add
mov
sbb
jl
movsb
jae
leave
ljmp
sub
jbe
scas
sub
mov
sahf
push
lods
xchg
jge
cmpsb
jb
push
mov
aad
aad
and
add
sub
std
cmpsb
inc
xchg
cmc
mov
int
ret
gs
nop
sbb
or
add
les
loop
cltd
daa
cmp
sub
scas
fadds
sahf
mov
shrb
ljmp
xchg
lret
stos
mov
mov
ljmp
pop
sub
cmp
pop
mov
test
xchg
sub
idivl
sbb
subb
add
int
out
jl
lahf
out
xor
pop
inc
mov
cli
pushf
sub
cs
cmpsl
sarb
enter
dec
imul
xchg
fsubrp
lea
inc
xor
addr16
sahf
xchg
int
xchg
cmp
enter
adc
inc
inc
pop
push
pop
adc
mov
mov
cltd
cmp
pop
xchg
out
xchg
jne
fisttpll
and
subl
add
loop
movsb
shr
ljmp
scas
popa
pop
add
push
sarl
lret
pushl
leave
sahf
sub
rclb
cs
decl
push
loope
mov
pop
in
cmp
mov
ja
cmp
outsl
mov
dec
fldcw
pop
pusha
fsubs
cld
das
int3
jb
mov
leave
cmpsb
cmp
lret
mov
movsb
insl
xchg
inc
movsl
or
mov
inc
jbe
sub
add
sub
cs
and
aaa
lea
mov
xor
stc
movsb
and
xor
push
pop
out
xchg
in
mov
fwait
pop
sbb
jne
hlt
or
into
xchg
add
add
jg
xchg
lret
lock
or
push
clc
jmp
sbb
sub
rclb
cmpsl
hlt
fbld
cmp
leave
mov
push
jnp
jno
std
sbb
stos
jns
cmp
sbb
mov
mov
aaa
pop
or
push
jns
bound
or
sbb
in
xchg
repz
sbb
js
shlb
dec
jg
mov
loope
rcr
lds
push
stc
ja
psubb
mov
outsl
xchg
lcall
insb
es
xchg
dec
dec
and
out
out
mov
pop
and
outsb
test
sbb
fildll
in
fisubrs
test
and
enter
aaa
cld
inc
lret
mov
mov
lods
lret
push
jnp
cwtl
mov
xchg
in
dec
sub
cli
aad
lods
data16
mov
jmp
sbb
lret
pop
push
test
addr16
bound
jno
outsl
xchg
mov
mov
orl
dec
insb
jbe
hlt
fisubl
mov
dec
mov
fdivs
pop
imul
xchg
mov
inc
sub
pop
push
or
aad
pop
pop
add
adc
ret
xchg
xchg
add
fbstp
mov
jp
mov
imul
pusha
insb
pop
mov
rorl
lods
out
push
xlat
sbb
add
faddl
lea
test
add
jns
sti
inc
inc
xorl
lret
roll
inc
push
loop
insl
dec
clc
and
nop
cmp
sub
jo
dec
shlb
cmp
ret
mov
nop
sub
xchg
decl
fdivs
push
leave
add
cmp
sub
idivb
pop
sbb
jle
testb
fcoml
leave
std
pop
xchg
ret
int
ljmp
out
add
lret
jge
mov
inc
xor
jne
and
mov
insb
lahf
adc
fcoms
fisttpl
pusha
mov
dec
push
or
push
add
mov
loop,pn
add
xchg
sti
jl
sub
cltd
add
das
xchg
pop
or
mov
pop
sbb
mov
xor
xorb
pop
imul
scas
mov
or
js
mov
dec
xor
cmc
add
inc
mov
imul
loop
and
add
and
arpl
add
into
add
sbb
cs
inc
psubusb
fs
mov
andb
es
pop
push
scas
mov
mov
adc
adc
lcall
adc
add
cmpsl
mov
adc
push
jp
rcrb
ljmp
loop
test
dec
and
add
mov
stos
mov
fstpl
dec
mov
pop
fsubs
popl
pushf
add
cmpsb
cmp
lahf
mov
fimuls
pop
pusha
lods
lea
outsl
setl
pop
sub
jo
mov
imul
rclb
rcrl
addl
add
and
lea
mov
push
testb
lahf
movsl
loope
les
stc
dec
ljmp
loopne
xor
lds
cld
adc
or
popa
sub
sbb
sub
xchg
inc
mov
mov
pop
pusha
mov
cmp
in
push
mov
pushf
mov
cmp
imul
arpl
xchg
and
xor
call
push
adc
dec
mov
insb
mov
es
andb
cld
add
lahf
inc
addr16
adc
pop
inc
frstor
lahf
in
shlb
cmp
cld
add
push
cmp
cmp
sti
adc
sbb
and
loop
mov
xor
cmpsb
add
add
inc
pop
cmp
lods
sahf
add
xchg
lahf
push
jp
mov
cld
clc
dec
sbb
imul
mov
pop
icebp
inc
movsb
mov
imul
cs
mov
out
ds
and
xor
sbb
stc
pop
test
add
lret
jp
sti
adc
das
adc
dec
cmp
mov
sbb
fwait
jo
das
call
push
mov
xor
mov
jmp
xlat
push
sub
jl
sbb
fildl
jbe
mov
mov
mov
cltd
test
dec
stos
aas
and
mov
dec
lock
fwait
ret
and
cmp
outsb
fnstsw
push
add
es
fcompl
jg
inc
loop
jge
arpl
or
sbb
adc
sbb
adc
fistps
pop
jae
inc
add
sbbb
out
sub
jmp
mov
dec
int
pop
push
iret
add
movsl
ja
push
je
mov
in
cmp
xchg
jg
outsl
xchg
rorl
fwait
xor
imul
out
mov
dec
shrl
lods
and
jl
sahf
roll
enter
in
loop
scas
and
orb
in
shrl
push
adc
or
xor
xchg
stos
jp
sti
movsl
and
out
mov
sbb
js
mov
mov
call
mov
pop
mov
rclb
iret
fwait
pushf
pop
stc
cmp
mov
aaa
negl
incl
add
inc
cmp
fwait
pop
scas
fnstenv
and
mov
sub
mov
test
inc
add
mov
rorb
in
ss
pop
int
popf
sbb
or
jp
push
sbb
addb
mov
push
adc
mov
loope
mov
mov
icebp
pushf
stos
loop
or
icebp
outsl
push
dec
out
pop
aad
jbe
push
popa
call
or
loope
ja
jmp
mov
sub
andl
push
adc
xchg
stc
push
mov
mov
jp
mov
cmp
dec
cld
loope
sub
lret
sbbl
push
mov
add
jae,pt
push
pop
dec
clc
jbe
add
icebp
repnz
jmp
jmp
fs
loope
adc
jg
push
mov
jle
jne
push
rclb
fs
in
cmp
fldt
or
shl
in
xchg
lods
pop
enter
push
sub
sub
enter
jmp
ja
adc
or
call
and
cltd
pop
cltd
and
sti
mov
dec
add
pushf
xchg
or
movsl
out
orl
push
fadd
cmp
loope
mov
fwait
mov
or
cld
es
sub
jecxz
fcompl
test
mov
imul
stc
and
lods
pop
mov
push
shll
fucomi
jne
loope
dec
into
leave
push
hlt
cmp
jle
and
rcr
inc
or
pop
and
ljmp
add
loop
cmp
rcrb
push
and
popf
adc
cmp
pushl
imulb
push
mov
in
cld
jp
mov
shll
das
sub
int
adc
mov
pop
cmp
dec
aaa
push
loopne
mov
in
ret
out
aas
xchg
pop
lahf
adc
sbb
dec
std
movsl
lods
mov
aam
mov
and
jne
call
int
out
arpl
sub
jbe
aaa
shlb
mov
iret
pop
bound
mov
jg
test
lods
stos
fcom
mov
cmp
adc
push
out
mov
inc
xchg
jg
ljmp
xchg
push
bnd
fisubrl
or
add
std
mov
xchg
xor
cwtl
out
ret
push
xor
subl
hlt
arpl
fidivrs
pop
pop
lods
std
mov
add
inc
xor
out
or
xchg
and
repz
mov
aaa
outsl
xor
mov
pop
xchg
imul
sbb
mov
jecxz
ret
aaa
psadbw
xor
out
test
jo
push
jecxz
xchg
cmp
mov
mov
push
cmp
push
add
bound
jp
test
and
out
cmc
negb
les
dec
in
xchg
push
push
loope
xchg
addr16
push
or
sub
fidivrs
and
fadd
sbb
jp
lret
imul
cmc
int
lods
dec
in
data16
and
dec
stos
mov
mov
cs
sub
mov
add
pusha
sahf
sub
out
fucomp
insl
mov
jb
and
out
jg
in
cmp
pop
addr16
fidivrs
fisttpl
adc
fdiv
and
or
sar
jae
mov
adc
std
mov
add
mov
mov
mov
jecxz
fstp
fs
inc
inc
push
aaa
out
sub
or
mov
xchg
adc
inc
rorb
or
sbb
mov
gs
nop
sub
push
dec
pop
cmp
lcall
mov
dec
xchg
pop
cmpsb
test
in
ret
cli
sarw
dec
lods
cmp
fsts
push
lcall
adc
jno
outsb
jnp
sbb
cmpsl
jno
jge
push
cmpsb
aaa
jo
cli
sub
rorb
and
or
jbe
ret
add
mov
into
jle
inc
repnz
xchg
mov
cli
leave
outsl
imul
stc
dec
jbe
mov
ss
sub
inc
xchg
pop
xchg
imul
neg
pop
lret
sbb
gs
fwait
jecxz
push
loopne
or
pop
add
hlt
popa
lock
push
jge
jp
push
add
cltd
int3
mull
mov
inc
out
jnp
dec
xchg
mov
inc
ret
jl
sbb
aas
and
iret
je
fnsave
mov
cltd
cmp
int
lcall
mov
mov
inc
jge
cltd
ret
lds
inc
pushf
lock
and
cmpsb
aad
lods
mov
sub
add
loop
test
pop
cli
loopne
cmp
pushl
sub
mov
lods
xor
pusha
je
adc
mov
jo
xor
xchg
add
bound
mov
fwait
jmp
out
in
bound
mov
push
ja
mov
pop
std
mov
dec
xor
mov
jbe
inc
hlt
adc
add
lahf
jne
push
ds
lods
xor
jmp
fwait
imul
pop
and
adc
sbb
in
or
aaa
or
shrl
movsl
dec
fsubs
ljmp
insl
jb
pop
jno
pop
dec
mov
out
fs
sete
xchg
add
sub
mov
xchg
sub
push
mov
aad
jmp
jae
cs
or
je
mov
movsb
mov
inc
mov
jo
test
cld
cmp
sbb
inc
hlt
mov
cmpsl
xchg
insb
ds
mov
xchg
dec
outsl
lds
hlt
push
mov
push
int3
out
popf
mov
fldl
mov
popa
or
arpl
jbe
outsb
in
sbb
adc
repnz
xchg
stos
pusha
jle
les
push
lock
lret
lea
pop
mov
sub
push
and
push
ljmp
clc
leave
pop
ja
ss
adc
xchg
rorl
int
sub
mov
inc
mov
or
pop
jne
inc
addr16
sar
inc
push
pop
jge
sti
inc
cmp
inc
adc
scas
dec
testb
out
ret
clc
adc
arpl
xchg
lock
mov
and
lock
test
xor
mov
ret
fdivrs
rcrb
enter
ds
jo
pop
das
int
cmpsl
cmc
popf
insl
pop
scas
outsl
mov
mov
pop
inc
arpl
sbbl
mov
imul
cmp
add
pop
mov
popf
mov
cld
int
popf
clc
mov
sub
test
insl
sbb
mov
shrl
jno
dec
lods
notl
in
shll
xor
inc
icebp
leave
test
jg
cli
lahf
mov
mov
scas
add
loope
pop
aam
mov
daa
cmp
out
xor
cs
push
lcall
loopne
adc
mov
fildll
sub
jnp
loope
lahf
test
addr16
jns
shrl
xchg
cli
out
pop
loope
call
xchg
xchg
mov
jno
pop
sbb
aam
stc
cmp
inc
adc
adc
inc
and
pminub
in
xchg
scas
xchg
mov
movmskps
or
pop
fwait
push
dec
or
test
test
enter
loopne
and
pop
adc
push
data16
xchg
cwtl
cli
into
nop
les
cld
insb
and
xchg
push
mov
push
jae
and
ficoml
sbb
dec
gs
scas
adc
sar
pop
pusha
mov
mov
mov
sarb
pop
insl
lods
fxch
out
sub
gs
add
js
push
sub
lret
pushf
jp
dec
lahf
clc
mov
sahf
enter
test
rorb
and
jmp
adc
xor
imul
addl
xor
call
in
cmpl
call
sbb
cld
push
leave
xchg
xlat
xor
mov
push
cmpsl
cmp
mov
daa
das
lahf
push
shrb
loop
jbe
lods
clc
insb
std
ds
xchg
rorl
sbb
inc
sub
sub
xchg
jnp
ret
mov
push
std
fsubrs
sub
fcoms
jbe
jne
adcl
aaa
cmp
testl
jo
orb
fildl
cmpsl
inc
mov
dec
inc
call
and
push
sub
sbb
push
fisubrs
lret
and
cmovo
xchg
movsb
adc
fadds
sbb
add
pop
movsb
mov
aam
ss
ss
cmp
sub
scas
outsl
movsb
pop
lahf
cs
fbstp
fisttpl
cwtl
ficompl
dec
popa
notb
fisttps
lahf
mov
dec
sub
sbb
cmp
jno
pop
in
and
aad
lods
fadds
dec
icebp
add
notb
cmp
test
repz
inc
cmp
mov
movsl
sub
loopne
fisttpll
adc
lcall
data16
cli
je
adc
int
pusha
daa
jmp
push
cmp
mov
mov
mov
ja
fnstcw
mov
rclb
dec
dec
stc
mov
lea
cmc
mov
mov
sbb
iret
inc
ret
out
int
mov
test
lods
je
add
in
clc
mov
push
cmp
xor
mov
sub
mov
mov
dec
jne
mov
cmpsb
or
aas
xor
movsl
leave
inc
jmp
push
mov
setge
stos
jmp
inc
loop
inc
adc
test
dec
aad
sbb
mov
repz
or
xchg
pusha
fistl
or
mov
sbb
mov
xchg
sahf
xchg
outsl
jnp
inc
rcrl
fwait
je
jae
leave
push
push
iret
fldlg2
insb
loopne
add
popl
mov
in
fdivs
inc
pop
popf
push
add
and
ljmp
lock
test
mov
cmp
ds
mov
inc
mov
es
push
scas
inc
imul
fldt
mov
lahf
jp
pop
or
cs
mov
jne
dec
xchg
mov
fmul
push
adc
cmpsb
or
lret
dec
cmpsl
mov
inc
inc
jb
push
pushf
imul
push
inc
jmp
xchg
pop
test
cli
in
sub
adc
sub
xchg
mov
cmp
xor
ja
js
shlb
into
adc
cmp
dec
push
fldt
or
add
test
pop
rorl
mov
mov
add
mov
clc
and
pop
in
shl
pushf
mov
test
sub
pop
and
push
inc
mov
inc
jb
jg
subl
mov
fidivrs
repnz
jno
mov
jg
insl
out
fwait
popf
jnp
sub
mov
fadds
nop
int3
lcall
xchg
jg
fistps
xor
fcomps
cli
ja
stc
mov
inc
fistpl
jmp
dec
adc
das
jl,pt
mov
popf
mov
popa
in
xchg
movsb
stos
es
lret
test
call
inc
pop
mov
mov
and
test
sub
bound
mov
push
negb
nop
push
sbb
sbb
ficoms
xchg
push
push
inc
int
adc
pop
dec
add
xchg
rep
or
mov
notb
add
push
clc
xchg
bswap
shrl
pop
lcall
or
in
mov
mov
adc
jno
push
sbb
out
mov
xchg
test
sbb
adcl
test
push
ds
rcr
jb,pn
insb
ret
mov
stc
cmc
pop
cld
scas
or
cmp
loope
push
sub
ret
dec
int
xor
mov
fwait
nop
popa
add
add
xchg
scas
lcall
mov
inc
jmp
jmp
mov
xor
loop
in
callw
call
jne
jmp
push
mov
lret
das
inc
pop
pop
lret
lea
lahf
fstpt
cmpsb
in
sahf
xor
adc
dec
jg
std
lods
ds
sub
pop
cwtl
pop
xchg
aam
ljmp
pop
stos
sbb
pop
and
push
cmc
fistps
jae
mov
sbb
jl
scas
test
mov
js
xchg
xorl
neg
push
xchg
sbb
out
push
xlat
imul
xchg
divb
outsb
int
aaa
subl
inc
fs
mov
mov
mov
push
xchg
mov
mov
je
lahf
inc
fistpl
inc
inc
xchg
add
push
into
jge
hlt
test
push
cmp
rcr
dec
jae
inc
and
hlt
js
pop
and
gs
sub
pusha
push
sub
int3
dec
dec
pop
mov
lcall
inc
cmpsb
jl
sahf
or
sti
push
jne
mov
outsb
out
and
sub
inc
mov
push
mov
dec
mov
test
scas
push
cmp
cmp
cmp
clc
adc
pop
pop
aam
mov
add
sbb
xlat
enter
sbb
movsl
out
jp
mov
xor
jecxz
pushf
ds
pop
test
inc
std
mov
mov
incb
pop
xchg
adcl
hlt
jns
lcall
addr16
adc
sub
das
sub
sbb
lds
push
ret
fs
inc
clc
sbb
push
fisubl
pop
and
mov
xchg
push
mov
xor
fdivrp
test
sahf
lods
fcompl
icebp
dec
xor
daa
adc
mov
inc
cmp
push
orb
fs
xchg
repz
jg
imul
sarb
stos
aam
xor
dec
xor
add
adc
pop
cld
shl
daa
inc
idivl
dec
pop
enter
out
loop
sub
push
cmp
adc
sub
sbb
sbb
jmp
ret
jecxz
testl
dec
les
cs
call
icebp
mov
sub
test
sub
and
cmpl
cmovae
jmp
mov
insb
and
xchg
xchg
icebp
in
jg
std
mov
aam
mov
and
jb
cwtl
ljmp
test
pop
xor
bswap
aaa
fdivl
leave
inc
sub
cmp
test
push
repnz
inc
iret
and
cmp
ud2
and
out
add
sub
jg
xor
daa
push
test
bound
xchg
stc
and
outsl
jl
xchg
sbb
and
xor
in
sub
lahf
rclb
data16
or
adc
xor
mov
test
lret
dec
imul
mov
loopne
sbb
xlat
les
jo
jb
test
fs
inc
insb
xchg
mov
xchg
push
push
and
dec
sub
cli
xchg
inc
jnp
mov
adc
jb
popf
mov
std
or
push
jbe
and
outsl
inc
lock
mov
xchg
xor
fdivrs
xor
aad
mov
sbb
dec
dec
ljmp
xchg
fildll
push
icebp
imul
adc
dec
scas
xor
push
fisttpll
outsb
cwtl
sub
pop
sub
jle
push
in
push
filds
xor
mov
push
outsl
jecxz
jl
into
rorl
fs
jmp
pop
ret
std
in
mull
aam
dec
out
int
add
stc
movsl
sub
jbe,pn
mov
cmp
push
shrb
rcrl
in
jnp
dec
std
lock
andb
push
clc
cli
shll
cwtl
xor
xorb
xor
jp
sub
jb
stos
cmp
jecxz
iret
loope
mov
sbb
shll
cwtl
cmp
cmp
ljmp
xchg
repnz
jbe
dec
jae
fmuls
outsb
push
stos
cmp
ds
fnsave
jge
inc
fstps
pop
or
loopne
int
xchg
popf
testb
or
mov
mov
inc
bound
sbb
pop
lods
fcoms
sti
cmp
jae
push
sub
int
cmp
cmp
pop
and
sub
test
sub
sarb
add
adc
lds
popf
dec
iret
push
ds
xor
cmp
push
xchg
jle
test
int
or
pop
xchg
push
push
imul
or
mov
and
outsb
test
push
sbb
inc
xchg
jno
push
lods
add
xor
push
pushw
dec
pusha
pushf
mov
and
xchg
shrl
iret
jae
jnp
pop
fwait
dec
je
test
call
into
adc
shr
stos
pop
mov
jb
addr16
into
inc
lock
or
pop
gs
or
xlat
and
mov
movsb
mov
mov
adc
push
test
scas
fcmovnu
ret
dec
movsl
cmp
insl
into
into
mov
cmpsb
sub
mov
cmpb
adc
mov
shr
dec
in
stos
add
xor
inc
bsf
call
push
sti
rcrl
addr16
popf
int
add
jl
sub
mov
push
test
dec
cmc
inc
add
test
dec
sub
add
addr16
cwtl
jecxz
jp
dec
add
lcall
leave
xchg
jecxz
sub
rorl
mov
push
pop
push
pop
dec
jecxz
lret
js
pushf
stos
in
loopne
mov
shr
cmp
dec
lea
daa
xor
mov
pop
inc
add
jns
lcall
sub
mov
fcompl
mov
and
sub
cmp
shll
repz
lds
cs
out
sahf
add
stos
inc
popl
or
in
fisubrs
pop
shlb
stos
sub
adc
jl
fstpt
sbb
icebp
sbb
into
daa
outsl
icebp
sbb
xchg
fidivs
xlat
insb
rcrb
mov
mov
loopne
add
imul
pop
clc
divb
subl
std
pusha
scas
add
stos
pop
pop
mov
ss
push
rcrb
pushf
push
jmp
imul
bound
mov
mov
insb
scas
aam
sbb
jb
push
daa
jae
fdivs
push
inc
inc
in
sti
ficoml
roll
cmpsl
cmp
ret
jb
sub
jle
fnsave
push
push
shll
shlb
jb
mov
test
mov
pushf
dec
dec
pop
add
push
add
and
adc
xor
std
mov
pop
sti
hlt
xchg
shr
mov
jecxz
imul
or
lret
cmp
test
jnp
adc
imul
jmp
and
or
in
out
pop
add
les
pop
inc
pusha
ja
jo
loopw
cld
push
xchg
inc
or
sub
data16
sbb
jle
jne
leave
and
mov
cmovs
sub
leave
push
outsl
cmp
mov
sbb
jge
xchg
cmp
cmp
xor
ljmp
ss
sbb
jecxz
lcall
add
lret
xor
mov
mov
imul
insb
das
inc
lds
int
jmp
xchg
ret
pop
or
xchg
jp
mov
addr16
out
lods
nop
jp
xchg
pop
stos
cld
ds
push
and
lret
inc
out
shl
cmp
or
fstpl
xorb
aaa
dec
imul
imul
xlat
or
xchg
call
inc
int3
sbb
incb
pop
mov
sbb
movsl
push
int
sub
shl
das
or
int3
notb
ljmp
ret
push
xchg
aaa
cwtl
push
or
mov
stos
les
push
sub
dec
mov
lea
push
iret
cmpsl
loop
mov
push
adc
int
mov
rcr
dec
ss
popa
ret
insl
jbe
test
xchg
jbe
popl
mov
xchg
mov
and
and
xchg
icebp
loop
and
stos
sbb
add
pop
push
xor
mull
sub
push
xor
sub
mov
in
jle
jne
mov
mov
scas
jp
add
fucomi
push
ficoms
xlat
mov
sti
lcall
and
add
adc
in
mov
dec
stos
in
xchg
or
out
scas
dec
jnp
flds
cmpsl
lock
es
push
ja
pushf
shlb
pop
push
ss
xchg
jb
push
popf
jecxz
outsb
stos
aad
or
int
and
mov
push
mov
and
les
jecxz
fistl
fldcw
inc
fdivl
aam
shr
inc
scas
push
pop
lret
jl
lahf
in
push
lahf
andb
mov
or
daa
push
xor
out
pop
aad
loopne
fistps
pop
dec
jno
popa
outsb
sub
or
and
push
mov
std
jnp
test
jmp
lods
mov
gs
sysexit
std
les
and
lcall
lret
xchg
xor
ljmp
mov
sbb
lods
enter
scas
aam
lds
adc
mov
je
lret
jmp
sbb
push
mov
adc
lods
add
mov
pusha
mov
in
stos
negb
mov
enter
sub
leave
mov
push
xor
lahf
test
push
sahf
mull
ss
es
mov
push
stc
xchg
mov
fbstp
fwait
xor
push
push
lds
insb
xchg
jecxz
js
daa
xorb
mov
add
fidivrl
lret
inc
sbb
sub
mov
push
or
jno
repz
push
jns
fsubrs
nop
xchg
dec
pop
sbb
push
xchg
cwtl
cltd
ret
andl
pop
aad
faddl
xchg
add
pop
lcall
xrelease
cmp
sti
push
push
sbb
iret
popa
sub
xor
rorb
and
or
cmpsb
loopne
iret
movsb
repnz
inc
iret
mov
xchg
repz
idivl
fwait
add
mov
xlat
popa
cltd
xchg
mov
inc
cmpsb
cmpsl
jmp
idivl
add
add
aam
mov
lods
cmp
cmp
in
in
dec
insb
lcall
int
mov
cmpsb
cli
inc
leave
or
in
rorb
cmp
dec
insl
jp
ds
rol
arpl
cmc
push
adc
xorl
ret
ljmp
xchg
xlat
xor
adc
pop
bound
ljmp
decl
in
imul
popf
rclb
push
xchg
inc
pop
imul
xlat
pop
lret
pop
ss
xchg
fwait
xor
cld
pop
fbld
shll
push
call
add
mov
adc
push
lcall
and
cmp
repnz
sub
enter
ret
xchg
fcmove
dec
orb
popa
mov
xchg
mov
add
pop
ss
jecxz,pt
fcoms
mov
fcom
pushf
pop
test
pop
in
or
into
mov
aas
xchg
gs
push
mov
popf
cmp
popf
push
ret
fstps
mulb
pop
loopne
mov
sub
mov
mov
imul
test
sub
decl
push
clc
adcb
push
fmulp
jbe
adc
gs
xchg
pop
pushf
leave
out
ret
lods
addb
ljmp
and
ja
mov
enter
add
push
cmp
sti
mov
outsl
mulps
in
cmpsl
push
mov
xchg
xor
xor
xor
sub
ret
or
lcall
jge
cmp
and
pop
mov
and
fcomps
imul
xchg
xchg
mov
outsb
mov
cmp
icebp
push
fisttpll
es
lea
imull
cld
jg
in
dec
jle
int
pop
push
xor
es
scas
aam
outsb
addb
or
mov
or
frstor
enter
icebp
xchg
loope
sub
into
add
repz
cmp
out
dec
aas
dec
xchg
jle
scas
jo
fcmovbe
mov
jg
neg
lods
sub
cmp
mov
les
shrl
sbb
out
xchg
popf
fildll
jmp
shll
or
scas
add
adc
arpl
out
sub
lea
inc
hlt
push
jle
mov
cmp
ja
imul
fs
movsb
imul
pop
mov
pop
fiadds
add
daa
in
add
lahf
inc
pop
add
xor
loop
sbb
and
inc
repz
in
cld
push
pusha
mov
inc
cwtl
das
xor
mov
xchg
xor
stos
jle
sub
adc
mov
scas
add
push
nop
data16
lret
sub
mov
leave
into
cmc
cmp
or
jmp
subb
sbb
dec
xchg
mov
or
push
adc
rol
push
inc
and
sbb
into
mov
sub
adc
enter
stos
in
jae
mov
mov
mov
push
lahf
push
stos
stos
cmp
out
xchg
div
jecxz
test
pop
sub
jl
xchg
lock
mov
mov
jecxz
pop
mov
jecxz
push
in
xlat
adc
pop
xchg
add
addb
xor
in
cli
mov
pop
and
push
sub
loope
pushf
lcall
jl
out
dec
dec
push
xor
or
icebp
test
push
popf
pop
push
or
mov
mov
addb
pop
jno
add
call
sub
xor
cs
shlb
test
fiaddl
mov
adc
lcall
mov
pop
icebp
sbb
jecxz
push
xchg
stos
roll
inc
mov
cmc
outsb
cmc
clc
lods
sub
jg
fistpl
mov
fnop
ss
inc
push
rcll
sub
dec
in
popf
pop
nop
lock
sbb
mov
aam
inc
xchg
jl
xchg
cmp
mov
cmc
lea
adc
imul
pop
jns
xor
push
sbb
pop
mov
arpl
aad
fldl
adc
nop
js
ror
pop
movsl
xchg
and
lods
cld
mov
mov
subl
push
imul
movb
lock
out
sub
and
icebp
push
cld
xchg
subb
xchg
popa
mov
test
icebp
sbb
push
test
mov
cld
pop
sbb
sbb
and
aaa
addr16
and
fs
sub
sahf
mov
dec
inc
cmp
test
arpl
fiaddl
shll
scas
jno
inc
sbb
push
out
push
mov
jno
pop
bound
lcall
jmp
test
fucomi
insb
ja
xchg
pop
sbb
daa
arpl
inc
inc
mov
fcmovb
pop
dec
cmp
lods
dec
pop
pop
push
out
ds
xor
fwait
aam
lret
pop
pushf
mov
test
mov
cmpsl
adc
loopne
cmp
mov
inc
adc
push
jp
sbb
jo
or
sbb
adc
mov
out
inc
stc
xchg
iret
in
nop
clc
dec
sub
or
cld
xchg
push
movsb
push
sbb
and
pop
or
imul
ds
mov
shll
int3
adcl
cmp
je
mov
sub
mov
test
ss
or
leave
mov
call
sbb
xchg
pop
dec
je
or
inc
mov
and
cs
sbb
dec
push
adc
sbb
pusha
pop
jge
addr16
cmp
ljmp
lcall
pop
jecxz
dec
stos
inc
enter
leave
cmp
push
xor
jge
test
je
xchg
add
pushf
shll
push
outsb
and
lock
insb
mov
sub
stos
movsl
push
pop
xchg
push
in
xchg
sub
shl
xchg
xor
in
sahf
or
add
push
jno
push
xlat
inc
int
insl
fldt
xchg
jecxz
ljmp
pop
xchg
mov
iret
push
inc
iret
aaa
fs
sbb
mov
mov
mov
lret
sarl
push
lods
or
jmp
mov
push
inc
mov
sub
imul
mov
cmc
cmp
mov
xchg
or
and
sub
add
incb
dec
or
popf
xchg
xchg
mull
stos
inc
fsubl
out
cld
pop
xor
push
div
in
iret
add
mov
cmp
push
jo
ds
push
jecxz
inc
xchg
mov
das
pop
dec
jne
lret
aas
loop
sub
push
inc
fnstenv
or
call
xchg
div
aam
int3
mov
pop
and
adc
push
cmpsl
or
mov
inc
jg
and
sbb
adc
pop
in
cmp
mov
cs
dec
outsl
outsl
cmpsl
loope
fdivrl
push
push
ficoms
push
sbb
jne
cltd
inc
push
mov
xor
cmp
and
inc
lods
aas
pusha
test
fisttpl
adc
sub
add
in
ret
and
std
lahf
or
out
outsb
in
jl
mov
loope
outsb
cmp
inc
bswap
shlb
arpl
inc
sub
push
jp
std
push
pop
call
sub
cli
jae
adc
pop
punpckldq
sub
jb
ret
push
mov
mov
fisubl
iret
in
loopne
fists
inc
cmp
lret
pop
mov
mov
insb
retw
arpl
insb
xor
imul
les
dec
sub
mov
mov
jl
out
loopne
or
mov
xchg
call
pop
adc
out
popf
and
sahf
fistl
jnp
cmp
and
sbb
inc
leave
in
stos
sbb
test
or
sbb
incl
mov
js
push
hlt
mov
sti
into
jp
arpl
xorb
cmpsl
lcall
sbb
ret
insb
dec
and
xchg
xchg
sbb
loope
push
cmpsl
mov
popa
subl
sub
aam
pop
fadd
stc
mov
mov
daa
push
pushf
pusha
rcrb
into
sub
push
das
mov
hlt
cs
fdivr
decb
fwait
jmp
cwtl
int
out
pop
pop
and
cmp
pop
test
xor
movsb
gs
lret
dec
mov
inc
je
dec
sub
lcall
xchg
fs
jo
push
test
jmp
mov
roll
or
mov
aad
xor
in
call
cmp
dec
add
ss
data16
rcll
test
imul
pop
jmp
idivl
aad
fdivrl
inc
xor
cmp
iret
mov
or
dec
mov
lock
sbb
mov
adcb
in
data16
adc
mov
stos
out
dec
jge
dec
aad
adc
jecxz
sbb
or
xor
scas
sar
lcall
filds
loope
dec
adc
jae
ret
add
cli
jl
cmpb
adc
imulb
pusha
in
cmp
cmpsl
ror
sti
fcoml
popa
repnz
int
mov
or
mov
or
and
pop
sub
sub
xor
in
xchg
movsl
xchg
popf
pop
test
addr16
outsl
test
ja
adc
sbb
call
mov
push
pop
je
movsb
in
pop
hlt
pop
jne
movsb
iret
loop
in
fidivrl
lret
add
js
add
shlb
mov
dec
push
je
jne
xchg
add
rorl
mov
cmp
or
mov
in
sti
scas
cmp
and
xchg
sbbb
stos
jo
in
fwait
jp
pop
filds
dec
pop
lret
test
push
ret
clc
call
jecxz
aas
outsl
jge
repz
sti
xchg
pop
pop
sub
adc
mov
daa
jg
sti
shlb
repnz
pop
cmpsl
or
aas
ret
mov
int3
jecxz
loop
mov
mov
lret
push
sub
mov
mov
ja
push
mov
sub
mov
outsl
mov
adc
ja
decl
mov
and
cmp
xor
arpl
cmpsb
stos
push
mov
iret
pause
jp
sbb
arpl
mov
dec
enter
dec
dec
mov
movsb
insl
xchg
add
push
dec
inc
sarl
in
std
jle
xor
jge
sbb
or
mov
stos
jb
pop
rolb
add
fidivrl
mov
pop
pop
push
stos
pop
int
les
push
ljmp
inc
sahf
ret
xlat
jp
cmp
jbe
fldenv
dec
rcr
and
scas
add
inc
data16
sbb
push
mov
shl
sub
shlb
push
jp
adc
mov
shlb
sub
xor
mov
jecxz
arpl
jmp
or
cmc
fists
roll
rclb
adc
repnz
mov
std
push
outsb
jb
mov
cmp
mov
in
lods
xor
pop
push
fsubr
add
jl
lahf
movsl
xchg
jb
aad
xchg
scas
cmc
sub
jmp
jl
cld
lret
in
sub
lods
outsl
sub
pop
jbe
xor
sbb
sub
into
mov
cmp
mov
xchg
or
mov
pop
inc
push
push
aaa
fildl
adc
fidivrs
adcl
scas
fnstsw
mov
pop
or
jnp
cmp
pop
mov
pop
clc
mov
mov
cltd
addl
ficompl
sti
and
push
sbb
push
mov
sti
push
addb
jne
cmp
bound
ret
int3
std
mov
enter
movswl
out
iret
dec
or
aam
enter
scas
xor
out
sub
cmp
repnz
sub
lea
in
mov
loopne
dec
pop
inc
nop
repnz
mov
in
dec
enter
lret
adc
add
jno
lahf
dec
inc
xor
push
subb
mov
das
lahf
mov
cmc
addr16
mov
or
sub
mov
stos
cld
xorl
in
pop
aas
xor
mov
inc
inc
jns
or
bound
test
test
lods
mov
sbb
ret
test
or
add
rclb
adc
push
out
adcl
add
aad
mov
rcrb
lods
push
es
jb
pop
adc
cmc
dec
popf
jo
sub
mov
lret
loopne
push
mov
faddl
and
in
fwait
dec
sub
cwtl
push
movsb
scas
rcl
test
jne
dec
cmp
cwtl
out
aad
fstps
out
jne
rcrl
test
mov
mov
and
push
js
inc
inc
and
xchg
adc
adc
adc
push
out
gs
insl
clc
punpckhbw
divb
mov
imulb
ret
fidivs
sub
sub
mov
in
jmp
sub
addr16
inc
test
movaps
stos
add
mov
inc
in
divb
fs
call
jne
pop
scas
push
mov
mov
scas
xchg
iret
or
ja
std
mov
aad
pop
xor
cpuid
inc
pop
cmpsl
mov
in
sbb
repnz
cmp
xor
jbe
sub
inc
clc
iret
or
in
bound
les
sbbb
scas
cmp
call
mov
xor
sub
xchg
mov
iret
es
das
xchg
mov
in
push
fxch
fptan
insb
js
pop
sbb
int
mov
inc
rclb
mov
dec
jb
leave
sub
and
pop
aas
lret
mov
lods
out
jecxz,pn
xchg
or
inc
sbb
hlt
test
ss
jbe
stos
push
inc
adc
hlt
dec
pop
mov
mov
add
sbb
adc
lahf
mov
cmpsb
es
xor
jnp
test
test
add
fs
ficoms
fdiv
pop
sbb
call
test
insb
jae
hlt
dec
data16
sub
cwtl
push
cwtl
movsb
cmp
ljmp
scas
ljmp
jb
fsubrs
imul
negl
dec
xorb
in
mov
rcrl
push
inc
push
mov
push
movb
mov
sbb
jbe
js
aam
in
push
mov
push
inc
adc
inc
push
fbstp
outsl
es
int3
dec
xchg
push
push
sti
leave
xor
sbb
jp
idivl
mov
xor
cli
sti
mov
int3
pop
scas
into
aam
mov
mov
cltd
add
push
stos
in
dec
ret
xlat
xor
lahf
in
mov
scas
cmpsb
push
leave
mov
sub
mov
pop
add
lcall
jns
sbb
cmpsb
nop
mov
push
add
sahf
sbb
adc
repnz
mov
hlt
mov
xorb
sti
add
lret
cmc
in
mov
sti
xlat
sahf
int
adc
xor
dec
mov
movsb
adc
iret
pop
cmp
fmuls
imul
lea
pop
xor
inc
pop
mov
insl
test
mov
lret
adc
inc
mov
pop
mov
jbe
imul
je
xchg
sub
dec
sbb
or
cli
xchg
cld
ljmp
push
lods
pavgb
loop
lods
mov
dec
in
bound
mov
bound
dec
rcr
pop
or
fistpll
jp
int
dec
in
gs
mov
outsb
fcomps
les
test
mov
mov
aad
mov
pop
cmpb
imul
dec
pop
mov
fildll
add
mov
inc
and
loopne
dec
cwtl
out
cs
outsl
mov
pop
negb
or
cs
jecxz
push
scas
andl
fstl
xchg
and
popl
mov
push
repnz
jbe
test
popa
imul
in
repz
sbb
int
aad
shlw
dec
adc
ret
inc
pop
push
dec
icebp
fidivl
int
repz
xchg
add
shll
push
cmp
sub
lahf
scas
jne
sahf
inc
mov
cmp
pop
mov
mov
push
aaa
sub
xor
sbb
rol
inc
fildl
ja
jle
mov
mov
fcmovbe
sbb
sbb
cmp
repnz
fs
lret
mov
jnp
jnp
sbb
in
push
sbb
xor
dec
jle
xorb
ror
cmc
sbb
int
stc
push
cmovp
insb
popa
add
and
dec
imul
divl
push
or
dec
lahf
xor
lds
mov
mov
movsb
lahf
cs
mov
fisttpl
cmp
icebp
xchg
mov
pop
mov
fs
cld
in
in
ret
aam
add
ds
scas
ja
push
push
into
inc
xor
sbb
arpl
stc
lods
pop
sub
and
dec
xorl
xchg
lcall
popf
scas
mov
sub
lea
cmp
push
xchg
rorb
mov
xchg
mull
jne
bound
movb
ss
and
ror
dec
add
mov
movsl
xor
inc
lea
bound
xchg
and
test
lock
out
jg
fistps
push
add
aam
mov
fs
xorb
dec
xchg
lods
sbb
jno
xor
push
test
lret
push
popf
mov
mov
in
ljmpw
sub
add
jbe
or
pop
inc
sbb
sub
push
xchg
mov
inc
aam
mov
call
aam
xchg
leave
sbb
lea
dec
iret
cmp
iret
into
push
mov
jmp
cli
add
test
pop
sti
pop
xchg
xchg
sub
push
ret
test
push
in
or
fcomps
sub
mov
and
add
invd
pop
pop
aad
push
into
inc
dec
test
in
add
test
outsl
mov
gs
mov
loopne
icebp
loop
lods
leave
popw
icebp
adc
and
fwait
push
sub
aam
rcll
mov
call
or
scas
adc
pusha
xchg
xchg
mov
sub
fidivl
scas
mov
mov
pop
lcall
cltd
mov
cmp
lds
push
loop
mov
in
xor
pusha
shr
pop
in
lods
addb
sbb
pop
sbb
xor
jle
pop
bound
and
cltd
stos
leave
inc
out
es
clc
popa
dec
mov
lret
pushf
dec
adc
pop
out
test
das
jb
push
dec
rorl
xlat
fwait
mov
jns
ljmp
fists
jnp
adcb
loope
mov
xchg
dec
daa
int
fldcw
add
pushf
mov
pop
not
sub
push
mov
xchg
push
mov
imul
mov
fistpl
inc
push
jno
leave
push
sbb
or
pop
movb
inc
out
push
xor
pop
shrb
shrl
aad
lahf
sub
inc
jno
jp
jns
xlat
mov
adc
cmp
add
and
lods
and
out
mov
mov
push
icebp
fnstsw
cld
jge
and
add
stc
notl
gs
in
leave
adc
cmp
xor
lret
adc
out
les
mov
mov
cmp
push
pusha
sbb
sbb
jb
jle
dec
mov
outsb
stos
je
or
outsb
adc
mov
jo
dec
pusha
movsb
sub
adc
push
mov
jle
stc
sahf
sub
clc
ljmp
dec
roll
add
ret
out
inc
pop
cmp
add
sarl
mov
rorb
test
fisubs
cmp
pushf
lahf
test
or
pop
cmp
imul
dec
loopne
jg
mov
lods
mov
xchg
inc
or
fnstcw
test
jns
and
mov
or
into
mov
stos
popa
clc
mov
fidivl
mov
inc
adc
inc
dec
xchg
ret
pop
pop
dec
test
sbb
stc
ret
adc
fcmove
cmp
and
jb
push
jnp
je
cli
std
pop
movsb
add
jne
lahf
sub
push
fwait
psraw
in
movsb
aam
add
lea
pop
mov
jne
lods
js
lea
pushf
mov
sub
pop
pop
sub
and
leave
or
test
loop
xchg
pop
loop
jmp
sbbl
push
mov
pop
sbb
xlat
int
aad
imul
cmp
repnz
imul
pushaw
pusha
test
jl
xchg
push
xchg
pushf
pop
add
fbld
xchg
sub
sub
add
in
out
add
lahf
fcoms
mov
stos
imul
invd
adc
mov
sahf
push
xor
and
jmp
imul
xlat
xlat
add
xorl
push
pop
jbe
dec
jns
dec
sub
mov
fistl
nop
jl
out
decl
mov
xchg
je
or
xchg
sub
or
leave
pop
arpl
hlt
cmc
les
mov
push
mov
jb
or
cmp
test
loop
dec
xchg
sbb
sarb
in
xor
inc
push
fcoml
or
xchg
jle
xchg
cmp
call
push
mov
cmpb
pop
lcall
outsl
loop
test
lds
ja
call
xor
jne
adc
and
shll
mov
push
xor
mul
in
and
push
and
call
and
or
pusha
inc
es
add
sbb
in
fwait
in
movsb
stos
or
in
fidivrl
stos
jbe
jg
sub
int3
cvttps2pi
add
popf
xchg
lds
push
jb
popa
cmpsl
fwait
inc
iret
enter
push
push
pop
xor
hlt
pop
mov
in
xchg
mov
pop
inc
inc
gs
nop
js
jo
cwtl
push
pop
out
sub
rclb
or
xchg
jl
cmp
or
cmp
gs
imul
jl
cmpsb
cmp
inc
scas
mov
pop
pushf
mov
cltd
sub
in
fistl
in
inc
mov
push
dec
cmp
mov
push
lret
lds
push
add
aad
cmpsb
lock
ja
fimull
es
mov
lods
push
jle
sti
add
cmp
sti
jle
mov
sub
gs
in
dec
popf
mov
cmpsl
pop
dec
pop
dec
xor
dec
dec
mov
xchg
lea
iret
mov
or
lea
aam
mov
mov
or
mov
movsl
clc
sbb
rorl
mov
imul
adc
adc
add
fsubl
add
pop
sub
sahf
and
rcl
in
jg
in
cmp
leave
mov
sbb
jecxz
mov
jmp
lds
imul
xchg
lea
mov
sbb
cmp
jo
aam
fisubl
fbld
inc
pop
lea
dec
mov
or
sbb
adc
incl
xchg
sub
push
add
rorl
sbb
pop
push
dec
xchg
sahf
mov
mov
testb
popf
xor
adc
jmp
mull
loop
mov
xorl
and
stos
dec
sub
push
fwait
add
adc
push
cmp
inc
aas
ficompl
cltd
in
or
xor
je
int3
insl
or
sub
mov
test
repnz
fisttps
xlat
push
mov
push
lahf
sub
push
andb
outsl
orl
dec
sahf
adc
jns
and
add
iret
js
xchg
fldcw
mov
mov
pusha
xor
pop
das
push
mov
addr16
push
ljmp
out
or
sbb
sbb
hlt
fsubr
nop
das
xor
scas
inc
cwtl
mov
hlt
push
fcmovb
push
jae
or
insl
and
or
ljmp
popf
and
rorl
ror
push
dec
icebp
push
pop
inc
ret
insb
lods
sarl
lods
xchg
mov
inc
xchg
out
loopne
imul
cmp
push
sbb
stc
ljmp
push
mov
and
jbe
mov
dec
inc
pop
xchg
sbb
mov
xchg
mov
jg
add
pop
sub
sbb
mov
pop
push
mov
push
and
pusha
jmp
cmc
aam
xchg
push
in
inc
pushf
dec
pop
and
or
ss
std
stc
jmp
ds
push
shlb
xor
or
aas
pop
or
lret
test
xor
rclb
sub
push
lods
es
inc
cli
insl
jecxz
or
scas
mov
push
stos
lods
imul
stos
cmp
cmpps
cmp
mov
divb
aaa
sarb
mov
sbb
xchg
call
cmp
dec
and
in
cmp
fisttpl
fwait
mov
mov
lret
mov
cmpsl
cmp
fxch
mov
aam
mov
xor
pop
mov
cld
aad
hlt
imul
cmp
das
push
mov
out
sbb
jecxz
pop
fldl
lock
mov
add
pop
push
mov
nop
mov
mov
movsb
xchg
ficompl
les
xchg
adc
cltd
mov
aam
fldenv
xchg
shll
adc
pushl
enter
fidivl
je
iret
and
jb
shrd
pop
iret
sub
ds
sbb
in
xor
bnd
ds
push
popa
in
cmp
mov
mov
fsubs
pusha
cmp
mov
test
jb
outsl
cmp
les
sar
es
ret
jle
mov
jb
cwtl
popa
pop
dec
lock
dec
cmc
sbb
sbb
fiaddl
lods
adc
xor
jg
lcall
notb
pusha
mov
test
lret
std
test
scas
push
push
aam
jmp
cmpsl
inc
jmp
test
fwait
add
cmpl
daa
ja
cli
rclb
push
and
xor
fsubrl
push
add
xlat
pop
lahf
aad
cmp
fs
ss
imul
mov
sub
clc
rcrb
jp
add
xor
push
inc
fcmovnb
mov
mov
xor
ficompl
pop
mov
pop
movb
pop
pushf
adc
and
rclb
hlt
repnz
jbe
lcall
xchg
insb
ds
dec
leave
sbb
adcb
inc
mov
or
jbe
jmp
js
push
cmp
int3
enter
fisubl
mov
mov
ret
lret
push
jecxz
sbb
lods
pop
sub
inc
pop
dec
lods
cmp
int
nop
out
cmp
fsub
dec
or
xlat
icebp
popf
pop
cltd
xlat
xchg
test
jno
xchg
dec
sbb
in
pop
lahf
jl
aam
pop
mov
add
es
pop
scas
push
and
pop
dec
test
jns
jecxz
mov
dec
xchg
mov
incb
rorb
pushf
pusha
sub
in
sbb
jnp
call
popa
inc
add
sub
inc
xchg
cli
cmpsl
int
iret
xchg
psubsb
push
jl
xor
jge
push
cmp
stos
test
mov
jle
insb
dec
xchg
jge
jp
mov
and
fbld
sti
incl
ror
and
push
xchg
pop
movsb
je
mov
sub
push
pop
stos
push
pop
std
inc
pop
xchg
jl
scas
xchg
mov
out
call
movsbl
adc
lock
mov
jp
add
loope
sub
fsubrs
das
arpl
sub
push
cmp
xchg
xchg
cwtl
fbld
pop
ror
fistps
repnz
outsb
daa
lds
aad
cld
push
xor
jg
mov
push
mov
pop
push
add
adc
xchg
clc
sbb
mov
popf
std
mov
mov
repnz
sub
imul
dec
jl
xchg
pop
sti
mov
sbb
mov
sahf
cmpsl
outsl
mov
xchg
call
inc
xor
dec
sbb
inc
jmp
insl
clc
cmp
add
jbe
and
imul
mov
push
fisttpl
sub
push
cmp
jo
lahf
pop
adc
stc
int3
adc
outsb
dec
mov
add
xor
sub
mov
mov
mov
push
dec
pop
xlat
div
mov
popl
xchg
fidivs
cmp
mov
out
notl
or
std
xchg
xlat
cmp
xor
inc
int3
lods
push
sbb
into
cmc
cmp
or
push
decb
mov
cmp
movsb
cmp
sbbl
add
les
gs
or
lods
out
pop
mov
aas
movsb
push
aad
pusha
loopne
fwait
jbe
ljmp
les
push
jg
ja
jb
jb
in
shll
jle
and
shrl
mov
pop
and
rolb
pop
cmp
lahf
jl
pusha
movsb
outsl
popa
data16
xchg
mov
pop
faddp
in
cltd
daa
and
xchg
sbb
popf
and
xchg
adcl
aas
lcall
lret
mov
jne
stos
jno
xlat
dec
aad
aas
jg
add
lea
not
in
bound
clc
inc
movsb
mov
sub
xor
fimuls
push
insl
daa
xor
sarl
test
add
lret
call
add
mov
mov
adc
cmpsl
sbb
outsb
ret
adc
mov
inc
push
aad
add
push
xor
scas
xchg
lods
lea
mov
xorb
inc
das
fildl
lock
or
or
mov
pushf
mov
adc
mov
sbb
xor
cmp
xor
jl
lahf
loop
xor
and
subb
lock
add
fwait
inc
cltd
ret
mov
je
lret
jl
jno
push
cmp
in
pop
mov
inc
jno
icebp
lods
call
dec
loop
cmp
sbbl
stos
jmp
in
js
add
jnp
shl
and
sbb
lcall
ret
xchg
or
mov
ljmp
cli
push
outsb
push
dec
insb
jmp
stc
xor
mov
sbb
cmp
sbb
mov
dec
icebp
add
int
popa
out
movsl
andb
outsb
movsl
pop
mov
mov
mov
outsl
sarl
mov
sub
sbb
ror
cs
pop
jge
das
xchg
push
pop
mov
pop
test
xlat
clflush
les
shl
int3
jmp
rol
mov
dec
push
adc
adc
jecxz
in
je
shll
out
push
push
arpl
or
fsubrl
sbb
cmp
rcpps
xorb
fidivs
mov
ja
push
aad
cltd
mov
popa
shl
outsl
movsl
test
xchg
fcmovne
or
fldcw
adc
sbb
jecxz
js
push
in
mov
outsb
jecxz
sbb
mov
hlt
rorb
jb
js
ljmp
jge
aam
xchg
or
push
sti
stc
pop
ja
mov
mov
sbb
inc
mov
lcall
in
xchg
lcall
hlt
inc
mov
cmp
idiv
jecxz
lds
or
ljmp
pop
add
out
rcrl
std
sbb
dec
jb
int3
push
or
into
push
mov
js
adc
xlat
ljmp
test
into
mov
and
xchg
loop
je
shl
push
xor
es
stos
insb
push
or
movsb
xor
sbb
xor
adc
or
sahf
jo
popf
dec
inc
call
mov
test
out
in
ret
out
insl
addl
les
push
mov
sub
mov
sbb
dec
cs
enter
or
add
shl
mov
pop
in
cmp
sub
push
repz
inc
xchg
inc
add
and
sbb
imul
outsl
dec
push
frstor
rcl
push
mov
pusha
push
jl
dec
and
subl
inc
cmp
aad
into
mov
leave
inc
pop
pop
aam
or
das
rcrl
xchg
shl
mov
aas
mov
fisttpll
lret
inc
imul
cmp
sub
in
add
sarl
movsl
jbe
sbb
lods
mov
adc
js
jne
mov
push
push
iret
hlt
xlat
cli
and
test
cwtl
fimull
xchg
jae
aad
pop
and
push
jecxz
lea
mov
sbb
sbb
cli
stos
bound
enter
xor
jne
push
sub
adc
jle
sub
push
push
in
dec
mov
pop
loopne
loopne
mov
adc
and
aaa
rclb
leave
repz
loope
xor
imul
xor
out
push
jle
mov
mov
xchg
pusha
ret
push
dec
dec
sti
jnp
mov
and
or
enter
rcrb
subl
push
sbb
test
sub
fcmovb
adcl
sub
jmp
ja
fiadds
test
mov
aas
mov
loop
in
inc
mov
subb
rcll
dec
rcr
dec
mov
xor
adc
push
jmp
lods
fnstsw
or
mov
addr16
or
loopne
and
mov
jno
lahf
js
nop
pop
mov
push
ds
arpl
imul
cmc
fildl
addr16
xchg
pop
rcl
fidivrl
mov
fsubp
push
jne
insb
sub
loope
sub
push
js
cmc
jp
aas
outsb
inc
pop
outsl
cli
clc
roll
and
mov
jge
int
cld
adc
jae
adc
jnp
push
xchg
and
adc
jno
loopne
ss
sub
inc
sbb
xchg
sbb
ljmp
repz
sbb
adc
call
dec
cld
add
lret
mov
dec
pop
and
mov
jle
inc
je
dec
subl
sahf
stc
mov
mov
pop
ss
out
sbb
aas
inc
mov
xchg
xor
insb
out
aam
loope
lea
ffreep
pop
add
loop
cmp
lahf
xchg
outsb
and
into
pop
inc
push
cmpsl
and
jnp
and
jmp
mov
es
stos
cwtl
outsl
mov
pop
cmp
cmp
pop
mov
test
mov
ret
mov
xchg
shlb
faddl
add
add
and
sbb
jnp
test
call
arpl
ja
lahf
neg
inc
lock
pop
test
lahf
or
jecxz
sub
sbb
mov
push
inc
dec
dec
int3
add
mov
dec
sahf
jge
sbb
rcrl
sub
int
mov
js
adc
add
cmc
in
pop
xchg
mov
mov
sub
aaa
jmp
xchg
jo
xor
insb
out
push
ficoms
or
jo
jp
arpl
and
pcmpeqw
fstpl
js
inc
xor
popa
call
fcom
add
sbb
push
sub
mov
sub
addb
add
pop
in
mov
jmp
ja
lahf
xlat
xchg
inc
cltd
das
cwtl
pop
xor
scas
jmp
loope
xchg
pop
out
pop
push
sub
leave
sahf
sbb
movsb
rclb
ficompl
xchg
inc
xorb
in
shrl
xor
sub
jl
scas
push
or
xchg
xor
jo
mov
cs
sub
ljmp
stc
aaa
movsl
icebp
loopne
cmp
fcoms
mov
into
jo
mov
std
out
imul
xchg
mov
cld
outsb
jnp
mov
jmp
sbb
cli
jp
sete
push
jo
js
xor
adc
cmc
jle
lahf
ja
out
int
sub
xchg
fnstsw
sbb
push
repz
scas
xchg
mov
daa
lods
cs
inc
pusha
ffree
pop
sub
out
fdivr
inc
mov
scas
sub
fcmovnbe
cmpsl
je
loope
mov
pop
repz
ds
fisttpll
xchg
push
js
mov
movsb
testb
add
rol
jg
jo
mov
outsb
and
jle
inc
loop
sbb
jne
xchg
mov
std
in
mov
push
stc
mov
mov
dec
cmp
mov
popa
push
adc
pop
and
sub
cltd
loop
std
fnstsw
rolb
inc
pop
mov
repz
and
in
push
dec
out
lret
sbb
sbb
repnz
push
xor
insl
inc
repnz
pop
mov
dec
vpsubq
inc
or
sbb
addr16
adc
dec
stos
scas
adc
sar
pop
inc
sbb
inc
stos
es
xchg
lods
xchg
cld
mov
jno
or
pop
mov
push
test
ds
jnp
push
das
arpl
loopne
jb
push
into
pop
movsb
pusha
adc
jecxz
fcoml
inc
jp
sbb
loopne
mov
div
mov
sahf
test
adc
jae
xchg
jnp
jno
dec
add
jbe
popa
xchg
pop
push
lods
std
xchg
or
inc
rcll
adc
pushf
jae
xchg
nop
pop
test
pusha
add
test
push
in
addl
pop
push
dec
or
int3
push
jno
xchg
hlt
lahf
ss
sbb
enter
cli
ja
loopne
mov
lods
sbb
cmp
je
stos
fcomp
fldln2
jge
aaa
push
in
xchg
enter
aam
and
data16
faddl
movsl
push
fidivrs
outsl
push
repnz
je
lea
fidivl
xor
outsl
popa
pusha
pop
jmp
fadds
mov
dec
inc
sub
ds
jle
push
adc
mov
mov
jb
ljmp
and
push
call
add
or
addl
inc
push
add
add
mov
fidivl
rclb
mov
repz
xchg
std
loope
push
call
in
push
pop
or
dec
mov
test
movsb
cmc
std
ret
idiv
or
cmp
int3
addr16
js
and
popf
movsl
jo
fsubr
jl
lcallw
xchg
loop
pop
les
push
sbb
lahf
int3
dec
sub
jle
mov
mov
mov
aaa
dec
lahf
adc
ds
loopne
pop
sti
test
sbb
sahf
inc
sti
rol
cmp
in
insb
arpl
rsm
xchg
aad
imul
sub
out
xchg
mov
arpl
mov
push
stc
or
pop
aam
lock
ret
popa
or
jb
adc
push
dec
xchg
inc
shrl
rolb
repnz
in
inc
out
addr16
pop
add
pop
lcall
rcrl
fsin
adcl
pop
test
cmp
jecxz
cmp
in
pop
mov
orb
xor
xor
in
adc
aaa
jp
mov
lea
outsl
sub
ret
pop
dec
fs
xchg
outsl
maskmovq
testl
dec
mov
stos
adc
mov
sub
loope
gs
outsb
push
sbb
xor
imul
cmpsl
xchg
fwait
sub
and
out
xor
mov
mov
mov
sub
cwtl
dec
fcmovb
adc
add
mov
xchg
jmp
lock
or
mov
pop
add
shr
aad
pop
imulb
pop
pop
jge
mov
out
inc
xchg
js
lock
sbb
or
cli
jg
fs
sbb
inc
stos
pop
dec
ret
add
mov
sbb
adc
fcoms
das
mov
and
dec
push
mov
pop
fcomps
mov
icebp
sbb
div
es
jmp
or
xlat
lret
cmc
dec
aam
push
fs
out
sub
loopne
xchg
leave
and
scas
flds
sahf
aam
dec
dec
dec
mov
jne
mov
pushf
fsubr
lcall
add
inc
das
pop
push
shlb
test
rcrb
sub
xchg
mulb
inc
in
dec
dec
dec
pop
sub
lcall
hlt
bound
jmp
rorl
ljmp
in
sbb
dec
imul
cmc
sub
add
sbb
fidivrs
xor
shl
push
fmull
push
insl
sarl
jae
jb
adc
lods
xchg
js
push
flds
push
shll
mov
lcall
loop
idiv
xchg
les
fistl
dec
aam
pop
pop
pop
nop
add
jecxz
bswap
dec
sub
sub
fmul
outsb
mov
push
mov
fcomps
out
jle
xchg
aam
repz
sbb
sub
in
push
stos
push
xchg
jge
insl
lret
stc
shl
fxam
and
mov
addr16
test
or
loop
test
lret
xchg
sub
sbb
fidivrl
lcall
pop
push
dec
insl
enter
ss
frstor
jae
fistpl
mov
inc
pop
iret
ds
aaa
cmp
jecxz
shrl
cwtl
xchg
adc
scas
loop
add
sbb
jne
fs
cmpsl
sbb
rorb
out
push
imul
lock
jmp
int3
jg
shlb
mov
pop
adc
dec
adc
adc
and
out
push
sub
loope
fimuls
push
sub
shll
je
icebp
dec
jge
xorl
in
icebp
mov
adc
emms
notb
int
pop
mul
sbb
push
jb
xchg
in
pop
or
cwtl
xor
mov
jns
cmc
pop
out
cmpb
mov
adc
dec
sub
mov
in
inc
cmp
sahf
jge
xchg
xor
sub
test
and
fdivrl
jnp
js
or
mov
xor
xor
stos
xor
or
bnd
mov
cmp
in
rol
imul
adc
and
xor
je
or
insl
hlt
inc
ljmp
jl
xor
or
push
xchg
lock
jmp
mov
pop
fdivrp
leave
cmp
sbb
inc
fs
pop
push
fsubrl
fimuls
mov
enter
ret
rol
mov
lcall
or
or
adc
dec
dec
xchg
shrb
mov
stos
mov
add
fsubl
cmpsb
adc
je
cmp
aaa
lods
sub
shll
adc
imul
sbb
pop
iret
ret
inc
jecxz
daa
push
mov
pop
push
mov
adcl
cmp
xor
leave
cmpl
je
mov
jno
push
nop
pop
fcmovb
fwait
pop
jns
je
test
lods
fcmovbe
leave
mov
pop
xchg
ret
cmp
dec
ret
js
and
dec
pushf
jne
das
push
fistpl
add
xor
setae
mov
adc
addr16
mov
mov
or
sub
adc
je
ss
std
inc
fstl
cmp
lds
mov
mov
andl
push
add
jo
enter
jo
and
dec
adc
outsb
jb
push
nop
xchg
push
push
test
test
xchg
sub
adc
shll
inc
test
dec
fcmovne
lods
cmp
jb
dec
mov
js
fsubrl
das
stos
andl
mov
cwtl
xor
fcompl
adcl
pop
xor
test
les
add
repnz
pop
xchg
fwait
ret
xor
jmp
xor
and
sub
mov
testl
add
pop
sub
movsb
mov
mov
jecxz
and
aas
push
stc
adc
and
dec
outsb
stc
sub
mov
mov
int3
xchg
dec
sub
jnp
cmp
out
mov
adc
fisubl
sbb
push
and
fistpll
nop
inc
push
sub
add
xorb
fdivs
or
xor
ds
pushf
xor
movsl
repz
pop
adc
cld
xchg
enter
mov
sbb
adc
and
mov
out
inc
push
imul
inc
xor
adc
test
xchg
sti
xchg
xchg
mov
ds
xor
jecxz
push
fcompl
sub
adc
loope
test
stc
lcall
adc
mov
lea
jecxz
movsl
xchg
add
mov
fisttpl
add
xchg
les
mov
outsl
pop
xor
mov
dec
gs
and
add
hlt
sar
stc
outsb
adc
pusha
shlb
push
add
mov
pop
outsb
mov
xor
aaa
cmpl
and
daa
jbe
pop
or
mov
daa
pop
stos
in
scas
iret
mov
data16
divl
fildll
pop
jo
iret
repz
fcoms
mov
add
jp
mov
in
mov
sbb
and
pop
add
cmp
push
push
cltd
cmp
data16
pop
rol
add
adc
shrb
xor
lods
or
incl
adc
pop
sahf
je
pop
jbe
sbb
xor
and
loop
loop
sbb
je
mov
test
repz
loopne
test
xor
mov
add
xor
sahf
xlat
lods
adc
jge
and
xchg
dec
out
shrd
sub
lods
pop
xor
sub
mov
sar
fstpl
sub
arpl
fistpl
loop
sub
pop
or
sub
fimull
push
js
call
dec
sbb
pop
sbb
insl
add
inc
add
xchg
sub
sbb
inc
push
cmpsb
out
dec
cmp
xchg
xor
inc
stos
cli
in
sbb
xor
mov
jae
push
xchg
fldl
or
imul
into
mov
mov
scas
in
jmp
cwtl
int3
out
xlat
aaa
jp
mov
scas
mov
ljmp
jl
sub
mov
xchg
or
sbb
das
bound
outsb
mov
or
sbb
jns
mov
mov
dec
inc
cmp
add
dec
jne
adc
pushf
movsb
pop
mov
jmp
xor
cmp
mov
inc
stc
fsubrs
xor
les
sub
stc
loope
xorb
sbb
pop
outsl
cmpsl
mov
and
nop
int3
xlat
pop
iret
inc
sbb
outsb
push
jno
stos
pop
loop
dec
es
out
in
mov
mov
or
add
popf
in
mov
xchg
push
stos
sub
add
ds
push
jo
mov
mov
xchg
push
mov
adc
ss
lahf
pushf
jp
imul
in
push
push
mov
cmp
andb
ficomps
adc
cs
pop
lds
push
pop
test
xchg
gs
jmp
xchg
pop
lods
cmp
icebp
pop
cmp
jo
rcl
aas
enter
imul
les
adcb
les
push
ret
ret
in
inc
imul
pop
inc
adc
inc
adcl
popa
outsb
repnz
mov
into
push
jae
cmp
xchg
add
inc
xlat
enter
xor
test
mov
stos
nop
inc
addr16
shld
xor
call
mov
fcomip
add
insb
inc
ret
push
insb
pop
add
aam
adc
xlat
ljmp
dec
std
jge
cmp
pop
enter
add
mov
mov
aam
xchg
sub
or
out
or
in
mov
add
sbb
sub
out
mov
fistps
insl
test
jp
mov
jg
std
xor
cli
add
mov
arpl
out
in
push
outsl
fwait
das
rol
pop
cmp
aad
pop
stos
call
in
inc
hlt
insl
int3
cld
mov
jae
sti
mov
gs
imul
xchg
mov
add
lret
inc
sub
data16
pushf
mov
inc
mov
fmuls
das
sub
stos
lock
scas
lret
sbb
mov
movsl
xor
add
call
ret
mov
int
mov
cs
and
jno
dec
sub
xchg
pop
insb
add
push
mov
lret
xchg
rcll
xchg
ret
xorl
mov
inc
call
jl
or
mov
xchg
dec
or
enter
mov
pop
xor
ret
dec
hlt
ss
hlt
fbld
add
arpl
lret
je
jbe
in
mov
jmp
sub
sbb
imul
mov
insl
mov
dec
dec
adc
hlt
ret
xchg
jmp
jl
or
sahf
rcrl
pop
mov
adc
fdivrs
cmp
lods
fistpll
in
fs
aad
or
mov
sub
mov
cs
dec
xlat
ds
dec
mov
aaa
adc
lret
in
add
out
clc
inc
daa
stos
idiv
cmp
adc
cwtl
mov
push
push
in
scas
jmp
sub
aas
cld
sub
scas
push
mov
xor
dec
dec
dec
cmc
js
outsl
pop
sbb
xchg
push
sub
xchg
and
add
push
jne
lock
mov
mov
inc
data16
hlt
push
imul
sbb
cltd
inc
rcrb
aas
nop
cmc
lcall
shll
mov
aas
test
scas
incl
cmpsb
xchg
jno
rorl
lods
jp
js
cmp
pop
or
xchg
xor
push
ja
mov
pxor
bnd
pop
mov
jnp
push
cmpsl
mov
sbb
lock
loopne
xchg
pop
dec
flds
or
aam
clc
cmpsb
or
inc
pop
pop
shrb
jmp
in
jecxz
pop
leave
xchg
aam
xchg
pavgw
lahf
out
push
jo
ja
sbb
mov
loop
shrl
lahf
das
or
test
testb
push
xchg
cmp
mov
or
dec
xchg
pop
push
mov
push
jnp
dec
icebp
shl
aam
das
mov
pop
loope
ret
mov
mov
pop
cmp
push
jno
push
xor
adc
pop
sub
adc
add
pop
mov
pop
loopne
mov
and
orl
imul
outsl
mov
or
fisubrl
or
xchg
jnp
mov
leave
ficoms
out
fisubrs
pop
mov
fidivrs
test
add
pop
cmp
sub
xchg
sub
loopne
movsl
cli
inc
lock
sub
lods
psrad
inc
pop
inc
out
pop
test
ds
sub
pop
out
adc
or
push
je
pop
sbb
rcr
xchg
fidivrl
push
cmpsl
push
rclb
xchg
dec
sub
xor
inc
lods
lcall
test
cmp
ja
mov
pop
insb
gs
cmp
and
inc
xor
xchg
in
push
rcrl
ljmp
mov
jp
pop
inc
xchg
addr16
inc
movsb
imul
pop
rolb
sub
mov
loop
shll
push
lcall
mov
mov
cmp
push
nop
in
jle
add
lock
ror
movsl
push
mov
lds
lcall
jbe
mov
adcl
fwait
pop
cmp
pusha
addb
icebp
sub
notl
fnsave
aaa
ret
or
mov
mov
dec
repz
push
fidivs
fcompl
push
fxch
xchg
push
push
popf
je
test
sub
test
mov
imul
sub
jmp
outsl
xor
cmp
aaa
nop
test
push
js
fldl
insb
sbb
es
outsl
in
imul
test
sbb
and
aad
fimull
pushl
cmp
mov
pop
jb
push
sub
out
cmp
adc
ljmp
loope
jge
test
and
mov
mov
test
mov
or
movsl
mov
cmp
in
es
sub
ljmp
pop
test
pop
pop
adcl
out
mov
ljmp
stc
push
xor
sti
fcomip
mov
add
push
cmp
ljmp
adc
das
or
cmp
call
push
push
fiaddl
lret
or
add
das
inc
xor
lods
jg
inc
insl
push
jg
movsb
xor
lret
sub
mov
daa
dec
stos
mov
push
ss
mov
inc
xchg
mov
and
sub
aaa
cmp
mov
shlb
mov
sub
cmc
push
jae
mov
cs
fwait
int
decl
adc
lcall
jo
notb
fldenv
aam
sbb
bound
mov
xchg
inc
mov
and
in
cld
push
cmovge
adc
stc
outsl
je
inc
xor
subb
inc
setno
cmp
adc
mov
shl
jmp
jge
movsl
imul
ss
sbb
add
add
ficoml
sbb
ret
dec
dec
das
movsl
mov
pop
dec
nop
mov
cltd
int
xchg
fwait
pop
scas
inc
adc
push
vcomiss
lock
add
inc
int
mov
adc
xchg
test
xchg
or
jp
cmp
neg
adc
jmp
mov
nop
sbb
mov
mov
loop
or
lods
sub
xor
mov
jge
sarl
cli
jbe
rcrl
sti
push
dec
ds
fsubrp
push
push
cmpsl
dec
push
out
inc
push
adc
and
sti
enter
push
add
lock
xor
shl
push
cltd
popa
add
or
and
lret
and
cmc
data16
cs
cld
mov
mov
jg
jno
sbb
mov
cmp
stc
dec
bound
adc
fbld
aas
imul
in
out
repnz
pop
xchg
insb
int
ret
mov
nop
gs
or
inc
xlat
aaa
lock
sub
filds
pop
movsb
clc
xchg
daa
pop
or
sbb
arpl
or
aaa
mov
jp
mov
imul
ret
fwait
and
out
xchg
pop
adc
sti
cmp
lods
jmp
adc
jp
adc
sbb
push
cmpsb
xchg
or
and
adc
jmp
data16
jge
jle
arpl
jno
xchg
jae
and
aad
adc
mov
rcll
push
movsl
lret
stc
jno
test
mov
mov
mov
shll
mov
lock
fdivrp
sub
pop
mov
fs
leave
sbb
fstl
notb
sti
pusha
movsb
decb
push
mov
daa
repz
xlat
mov
mov
mov
in
cmp
inc
cltd
xchg
inc
insb
fstpl
hlt
bnd
inc
mov
add
je
push
subl
xor
xchg
push
jle
mov
mov
mov
out
add
ja
jmp
mov
pop
insl
jne
mov
js,pn
pop
leave
lret
mov
icebp
push
rclb
cld
push
addr16
in
push
bound
and
push
sub
or
arpl
mov
movsb
jp
sbb
add
sub
popf
insw
lea
insl
rcrb
pusha
mov
cmpsb
adc
sbb
sbb
or
sbb
int3
in
cmp
jge
xlat
test
mov
les
cmp
repz
or
aas
dec
scas
cmpsl
outsb
pop
pusha
push
mov
xchg
leave
roll
dec
fistpll
js
pop
xchg
cltd
out
decb
or
movsl
adc
lret
mov
xor
popf
push
mov
inc
stc
push
test
jmp
mov
out
movsl
jne
adc
int
mov
pushf
sbb
aad
cmp
fisubrs
pop
out
mov
jne
jnp
push
repz
or
lock
into
inc
nop
sar
jne
dec
inc
adc
loope
pop
stos
test
inc
dec
dec
movsb
dec
loope
lcall
aaa
mov
std
pop
cmp
lret
lds
jecxz
aam
mov
es
xor
pop
and
cmpsb
push
je
mov
push
cmp
movsb
fwait
pop
je
out
es
sub
dec
pop
xchg
movsb
loope
push
or
xor
sub
inc
mov
repnz
enter
adc
hlt
adc
fists
data16
jne
mov
cmp
and
sarb
lea
jecxz
mov
stos
add
add
cmp
test
aaa
ds
jmp
or
cmp
mov
pop
push
sbb
stc
inc
push
mov
pop
jb
daa
xchg
cld
icebp
or
or
mov
jbe
mov
inc
pop
mov
insl
in
adc
sub
cmc
clc
call
mov
int3
pop
dec
sub
push
sub
das
pop
or
jb
jns
imul
xor
cmpsb
cmpb
sbb
cmp
or
mov
dec
insb
ret
test
dec
push
mov
clc
paddsb
add
inc
sbb
mov
fistpll
push
leave
cltd
clc
xchg
pusha
and
hlt
push
pop
mov
popa
arpl
cltd
lea
lock
cmp
movsl
mov
adc
xor
les
insb
fmull
pop
xchg
ret
cmp
xlat
aam
jbe
push
outsl
enter
sbb
iret
mov
jmp
fs
and
data16
jmp
sbb
int3
mov
out
lods
imull
mov
bound
clc
xchg
pushf
dec
and
in
repz
movsb
sub
adc
fcompp
pop
sbb
push
ret
sbb
addr16
lods
dec
pop
nop
lods
mov
mov
sub
mov
pop
ss
stos
les
mov
out
xor
test
push
add
cmp
shlb
lea
add
sti
mov
cmp
pop
pop
js
es
mov
mov
mov
enter
cmp
add
dec
lods
cmp
pop
mov
xlat
orl
jns
sarl
fstl
sub
shrb
xchg
fsubl
mov
out
repnz
aam
or
pop
mov
lahf
lret
or
stc
ljmp
pop
shlb
push
mov
mov
pusha
in
popa
movsl
adc
in
icebp
jno
inc
repnz
addr16
mov
call
jp
xor
sbb
pop
inc
add
jae
mov
xchg
negb
cmp
or
shr
rclb
loop
jae
inc
aad
xor
or
outsl
mov
repnz
call
test
cmc
cs
xchg
sbb
ss
pop
pop
mov
lret
mov
ficoml
test
dec
add
ljmp
xchg
push
insb
push
inc
stos
sub
popa
popa
fiadds
mov
pusha
clc
out
or
stos
sbb
js
jmp
cmp
mov
addl
mov
outsb
xorb
inc
pop
jp
push
jmp
jmp
testl
insl
in
push
in
xchg
pop
ja
je,pn
cli
mov
loopne
outsb
pushf
cmpsb
xorl
cmpl
into
ret
push
push
loopne
scas
mov
push
lcall
xchg
dec
cld
out
add
sbb
dec
rcr
xchg
fstpl
inc
inc
inc
mov
push
jecxz
fs
xchg
or
rorb
sbb
mov
pop
and
rep
cmp
cmc
pop
adc
ror
xor
out
jb
or
stc
pop
daa
push
pop
movsl
fwait
pop
iret
aaa
scas
add
cwtl
xchg
movsb
frstor
jge
fstpt
popf
lods
mov
sbb
xor
and
xchg
fdiv
xchg
mov
scas
or
mov
or
cli
sbb
cli
xchg
inc
xchg
jno
fs
mov
mov
push
push
rcll
push
sti
add
jl
outsb
lahf
aaa
cs
jae
dec
and
or
js
ss
inc
cmp
or
inc
loop
hlt
sub
xchg
pop
mov
dec
lcall
in
push
ret
inc
mov
fcoml
notb
sbb
inc
adc
add
movsl
out
test
jo
aad
cmp
leave
cld
and
push
pop
add
testl
add
cmpsb
push
sbb
pop
xor
stos
lods
mov
inc
mov
dec
push
pop
cmpsl
xlat
insl
mov
fidivs
cmp
mov
cltd
ljmp
gs
stc
mov
mov
sti
mov
rcll
jns
or
and
dec
adcl
clc
mov
jl
loop
xchg
cld
cli
je
dec
jns
cltd
fcmovbe
pop
lret
sar
stc
mov
sbb
sbb
mov
sarl
mov
aas
cmp
mov
jmp
imul
lret
shr
jge
add
nop
xchg
dec
dec
mov
jbe
or
les
shlb
and
ja
sbb
sub
sub
lods
jo
clc
scas
in
mov
xchg
sbb
pop
dec
das
test
push
int3
aas
dec
mov
push
mov
push
sbb
cli
test
cmpsl
push
imulb
xchg
lret
xchg
pushl
mov
sbb
or
jnp
mov
hlt
iret
clc
addr16
push
loope
leave
mov
xor
loope
cmpsl
dec
scas
fwait
mov
jmp
lret
cmp
add
sbb
mov
mov
dec
fbld
xchg
pop
or
mov
jp
mov
fisubs
mov
push
data16
or
shrb
mov
jl
mov
out
xor
xchg
stc
inc
push
mov
dec
pop
dec
mull
sahf
mov
pop
mov
stc
xchg
lret
cs
xchg
add
aam
fstpt
imul
xchg
out
inc
arpl
pop
bound
popa
je
outsl
repz
add
push
std
and
sub
jmp
dec
cmc
repz
scas
aas
mov
mov
xchg
rcrb
nop
les
fisubs
xchg
pop
in
popf
add
fidivrs
imul
pop
dec
ret
push
xor
out
jb
flds
jo
aad
vmread
mov
mov
shll
in
jp
xchg
testb
or
add
pop
out
movsb
dec
subb
sub
icebp
and
adc
in
push
out
push
xor
je
and
pop
mov
jbe
mov
add
loopne
fstpl
jp
xchg
lods
loop
xchg
sbbl
jo
nop
add
sahf
pop
pop
std
es
in
mov
jno
sbb
sbb
cwtl
inc
cs
gs
pop
mov
mov
push
cltd
aas
sbb
lretw
hlt
and
pushf
imul
pop
inc
out
loopne
stc
movsb
fisttpll
jl
fadd
xchg
bound
mov
icebp
lret
mov
rclb
addr16
mov
aaa
jmp
add
out
inc
mov
jecxz
mov
pushf
sbb
das
mov
lock
inc
mov
sahf
sti
into
pop
insl
pop
mov
jo
push
dec
aaa
out
mov
fsubrl
out
mov
inc
mov
jmp
sbb
je
fs
sbb
push
leave
and
negl
push
std
pop
fs
pop
int
sti
push
lods
rcr
add
xor
stc
es
xchg
push
pop
jle
jl
outsl
rolb
mov
lcall
push
ret
data16
repnz
push
mov
in
ljmp
sbb
cli
push
jne
cmpsl
xor
test
push
daa
test
cmpsb
std
hlt
cli
mov
js
add
sub
es
and
jb
lcall
xchg
sub
shll
fisubrl
or
das
jmp
mov
shr
cmp
in
sahf
sbb
imul
insb
pop
adc
jl
loop
in
add
push
in
adc
aas
ficoml
sub
xlat
in
out
insb
mov
les
aaa
xchg
xchg
fisubrl
ds
xchg
push
sbb
dec
fucomp
cltd
fiaddl
cmp
fs
out
outsl
ss
nop
shr
jae
call
xchg
xchg
mov
jecxz
ljmp
and
loop
mov
mov
shlb
push
push
gs
rorb
push
pushf
push
into
iret
or
mov
rcll
xor
or
cmc
rcr
mov
fisttpll
ret
push
pop
jo
inc
loop
cltd
out
cmp
ja
push
sti
dec
scas
pop
jne
xchg
xor
hlt
movsl
mov
mov
mov
jg
das
pop
jl
sarl
adc
cmc
mov
push
daa
add
xor
cmp
add
mov
call
xor
push
jo
add
jmp
xchg
sbb
sbb
outsl
mov
xlat
divl
push
cmp
xor
imul
out
sti
mov
loopne
and
cmc
and
add
push
andb
and
pop
ret
inc
mov
sbb
jne
push
add
jbe
je
gs
pop
dec
daa
pusha
adc
aam
mov
push
mov
jno
test
push
repz
dec
pop
mov
lcall
push
cmp
mov
push
xchg
hlt
add
insl
mov
pop
sub
xor
dec
and
xor
cmp
repz
sbb
dec
rcl
nop
rcl
cld
data16
sbb
mov
xchg
or
add
cmp
dec
dec
je
fwait
push
insb
and
arpl
push
jecxz
or
into
outsl
js
mov
dec
mov
scas
xchg
ret
out
test
cmp
popa
loope
loopne
mov
repz
movsb
mov
xchg
in
lahf
clc
add
inc
mov
testl
into
lds
pop
sbb
loopne
loope
sbb
xchg
push
cld
in
mov
lret
cmp
mov
popf
daa
pop
ljmp
dec
leave
add
js
cwtl
push
push
mov
fldcw
mov
cmp
loop
lds
sbb
jne
cmpsl
jns
sbb
mov
repnz
inc
add
lods
ds
mov
cmpsl
sub
je
sub
jmp
cli
jo
jle
cmp
call
adc
imul
adc
sub
inc
push
jecxz
mov
pop
adc
out
mov
mov
adc
jno
mov
jl
xchg
stos
iret
sub
mov
push
movsl
cwtl
xchg
call
pop
fimuls
roll
pop
push
mov
cld
cs
jae
jmp
xchg
inc
fstl
insb
or
mov
out
mov
cli
arpl
add
pop
es
ss
cmp
push
ret
orl
filds
inc
and
lock
jge
mov
dec
mov
pop
lret
out
lock
inc
mov
and
or
aaa
cmpsb
pop
mov
xchg
clc
outsb
xor
cmp
mov
xchg
jmp
add
es
mov
jecxz
pop
jmp
inc
stc
leave
add
pop
mov
in
mov
cmp
or
or
xor
fs
push
nop
rcr
adc
loopne
cmpsl
mov
cli
mov
fiadds
pusha
adc
xlat
cmp
mov
and
lock
out
and
jge
dec
sub
lcall
popf
cmp
lods
fs
sarl
jns
sbb
xor
mov
movsl
scas
out
or
mov
stos
ffreep
lahf
jae
push
dec
sbb
cmc
dec
loopne
stc
in
xchg
cltd
push
clc
or
shl
repnz
daa
push
xchg
cmp
inc
loopne
jl
lcall
lods
and
sbb
mov
sub
mov
out
dec
out
imul
fistps
insl
lock
lcall
aas
imul
xorl
andb
mov
push
pop
inc
sbb
inc
or
mov
lahf
mov
jp
shl
xchg
jmp
push
jle
add
and
push
notl
fxch
test
mov
dec
and
aad
adc
scas
mov
add
pop
in
fs
mov
jns
es
push
push
adc
imul
jle
addr16
js
adc
sbb
fwait
shlb
cmp
and
mov
cmp
mov
or
cmp
push
xchg
into
lds
sbb
ja
sbb
xchg
push
loope
xchg
outsl
push
aaa
jecxz
ljmp
sbb
sbb
and
xor
pop
jle
fdivrl
xor
inc
xchg
mov
and
pop
int3
imul
movsl
shr
xor
jg
jl
arpl
sub
sbb
rorl
insb
push
inc
cmp
out
pusha
jge
add
inc
cli
neg
scas
cmpsb
xor
cmp
and
fnstcw
push
into
push
fsubrp
nop
xchg
pushl
or
jne
dec
xchg
pop
sbb
addl
push
sbb
outsl
loopne
add
jmp
stc
cmp
stc
pop
inc
shll
xlat
in
adc
inc
sbb
cmp
cmp
fldl
pop
out
pop
fdiv
fisubrs
fbld
imul
repz
sub
mov
push
aas
repnz
hlt
decl
lock
pop
mov
sub
jecxz
xchg
out
xor
pop
adc
mov
xlat
leave
loope
adc
mov
js
loop
add
lods
das
arpl
gs
in
inc
jl
pop
loopne
xchg
mov
jns
ds
mov
inc
call
push
pop
enter
add
or
mov
xchg
push
adc
out
xor
negl
cwtl
stos
mov
ret
jb
xchg
fcomps
andl
pop
into
jecxz
mov
das
lret
pushw
lret
imul
outsb
mov
outsl
test
push
popf
imul
adc
clc
scas
pop
pop
cmp
dec
pop
jbe
into
icebp
icebp
in
addr16
iret
mov
sub
pop
int3
push
xor
dec
sbb
call
dec
xchg
mov
jbe
test
fcmovb
cmc
rcll
lds
pop
es
ss
imull
gs
les
adc
jne
xor
push
rcll
jl
or
xor
cmp
cmc
loope
mov
push
scas
int
outsl
mov
xchg
dec
lret
sub
add
mov
mov
sbb
rolb
inc
movsl
bound
xchg
jae
hlt
sbb
adcl
or
push
or
adc
push
xor
mov
inc
dec
add
fs
xlat
shll
cmp
imul
xchg
mov
pop
push
jbe
adc
sub
pop
pop
add
test
insl
jbe
aam
or
addl
cmc
mov
xchg
cmp
jg
test
or
int
imul
int3
inc
imul
rcrl
pusha
push
cwtl
cs
and
shr
or
mov
std
cli
lea
les
sbb
jle
insb
jmp
jno
in
jl
cs
fcmovb
jg
jbe
adc
nop
jbe
addb
sub
jmp
scas
inc
imul
pop
cmp
inc
rcll
repnz
push
mov
stos
jnp
xchg
iret
rcr
xlat
sbb
add
repnz
cmc
xor
mov
or
push
jl
sub
inc
ja
xchg
pop
leave
flds
in
sub
jp
or
xor
dec
jns
push
loopew
dec
das
and
inc
je
in
sbb
jle
jg
add
daa
mov
mov
aam
mov
dec
lock
mov
pop
push
lea
in
ds
push
scas
lock
pop
ljmp
dec
imul
push
out
sbb
sbb
popf
jns
lret
outsl
or
loopne
adc
and
mov
mov
lahf
lcall
aaa
cmp
movsl
dec
jnp
push
ja
aad
in
addr16
or
shll
sub
sbb
fwait
and
call
jg
repnz
mov
xor
rcrb
cmp
cltd
xchg
adc
iret
pop
lret
outsl
das
jbe
pushf
test
lcall
out
and
in
stos
scas
fdivrl
push
mov
mov
lds
pushf
lea
and
in
mov
pop
xchg
out
ret
out
jle
push
lock
mov
out
push
pop
arpl
dec
icebp
ljmp
or
hlt
imul
js
and
add
xor
in
cli
leave
jmp
mov
push
jne
jo
xchg
adc
pop
das
shrb
andl
cmpsl
sub
out
push
push
xor
sub
cmp
jp
add
inc
daa
add
js
push
push
jno
daa
mov
sbb
inc
sbb
inc
ja
icebp
inc
adc
shll
jne
push
dec
comiss
push
jle
add
xchg
mov
inc
xlat
ss
rol
mov
push
xchg
inc
ret
rorb
in
push
in
loopne
filds
lea
push
ja
fldcw
test
cmp
decb
push
xor
fisubs
xchg
shrl
sbb
inc
add
repnz
mov
add
inc
add
imul
xchg
xor
mov
bound
aam
inc
not
movsl
subb
xchg
xchg
cmp
lock
mov
das
lcall
pop
xchg
cld
or
dec
fimull
fwait
js
inc
xchg
and
push
lahf
je
sahf
push
daa
inc
sbb
cmpsl
sub
ret
push
sti
xorb
and
pop
movsb
out
push
add
mov
xchg
nop
outsl
icebp
test
push
cmc
mov
cld
ljmp
push
push
mov
mov
or
xchg
add
adc
dec
pop
dec
add
sarb
jbe
incb
out
nop
ret
xchg
push
mov
mov
lcall
hlt
sub
outsl
add
lahf
or
jp
sahf
mov
push
and
mov
fcom
jae
mov
cmc
mov
bound
mov
push
pop
js
std
cmp
mov
dec
or
dec
mov
inc
mov
mov
in
push
gs
mov
mov
lods
mov
sub
jl
out
push
mov
sbb
and
insb
add
les
pop
pop
jb
xor
sbb
push
stos
call
bound
outsb
jg
ja
les
inc
mov
jle
mov
leave
mov
in
mov
mov
xor
dec
movsl
xor
adc
lret
outsb
push
or
pop
adc
loope
jmp
test
popf
cmpsl
jp
or
test
clc
loop
add
and
sub
ljmp
in
jmp
sbb
mov
shl
fisubs
clc
sbb
xchg
sub
lock
ljmp
test
mov
jg
mov
mov
imul
jne
and
sbb
jb
popa
dec
add
mov
ljmp
pop
pop
subb
movsl
movsb
mov
sub
cmp
ja
pop
fwait
pop
sbb
jl
sysexit
add
dec
ja
jmp
cmpsl
inc
lahf
loope
cmp
push
mov
jecxz
pop
lock
dec
ljmp
mov
cwtl
push
add
out
xchg
lds
out
mov
lcall
push
jecxz
or
ret
inc
adc
fs
push
mov
out
push
in
and
pop
cmc
jns
push
pop
ss
sbb
push
ljmp
dec
lret
push
add
xchg
mov
jns
push
lret
testb
popf
sub
or
test
mov
aad
hlt
pop
mov
cwtl
xor
add
cmpsb
int3
cmp
repnz
cmp
xchg
pop
cwtd
mov
mov
jecxz
push
lds
jge
xor
jnp
jg
mov
inc
test
sub
insb
scas
push
rol
enter
jae
or
lea
push
decl
leave
inc
sub
add
stos
aam
inc
int
lret
add
and
fcmovnb
fmuls
rep
push
inc
dec
sbb
dec
mov
jmp
jmp
popa
pop
aas
sbb
inc
repz
scas
jmp
or
mov
dec
push
dec
inc
dec
push
push
push
xor
fsub
dec
push
lods
inc
sti
sahf
movl
inc
int3
lcall
add
pop
outsb
nop
stc
jne
test
inc
test
inc
addr16
lods
inc
aaa
out
lahf
mov
xchg
clc
jno
dec
cmp
pusha
cmp
inc
push
add
xorl
xor
outsb
mov
add
je
jne
cld
mov
ffree
xchg
and
and
clc
xchg
fisttps
inc
test
cmpsb
inc
icebp
clc
pop
data16
stos
jle
sahf
in
lock
sahf
jno
ret
lcall
push
xor
data16
rol
mov
vpmulhw
outsb
fstl
mov
in
adc
jg
test
push
sub
test
push
sub
out
inc
lret
mov
cli
pop
repz
jl
rcrl
push
pop
lahf
sbb
cmpsb
lea
push
mov
sub
and
aaa
xor
adc
inc
loop
push
mov
repz
fmulp
inc
or
xchg
push
ret
enter
inc
dec
addb
iret
movsl
mov
fimuls
mov
mov
jnp
lock
or
adc
pop
sbb
or
adc
ficoml
test
lea
xor
push
jge
and
enter
idivb
cwtl
sbb
mov
fildl
and
imul
mov
and
gs
test
mov
ret
rcrb
cmpsl
xorb
inc
adcb
lcall
inc
xor
pushf
jp
mov
mov
lret
adc
outsb
addr16
dec
xor
cmpsb
jge
es
jne
xchg
in
pop
dec
mov
fidivs
mov
cmp
insb
inc
push
in
mov
mov
outsb
loopne
mov
jmp
ficomps
pop
xor
addl
mov
imul
fdivrl
pop
rep
js
mov
lods
data16
test
adc
adc
out
mov
mov
dec
loope
mov
movsb
int
out
mov
push
adc
adc
fldenv
mov
xchg
movsb
jbe
inc
lret
mov
es
sbb
test
daa
sbb
addb
dec
or
xchg
fsubl
mov
cmp
sub
lcall
mov
ljmp
or
mov
mov
jo
jb
adc
xorl
or
mov
gs
push
cmpl
inc
shll
in
pop
push
rcrb
push
shrb
push
mov
cmp
mov
sbb
adc
dec
pushf
mov
in
fistps
sub
jg
out
rol
lods
xor
sbbl
mov
dec
jb
and
mov
jmp
mov
pushf
mov
sbb
sub
jge
pop
lods
je
and
pop
push
pop
scas
popa
clc
pop
xorb
jmp
xchg
mov
ds
and
dec
mov
jg
fabs
popa
xchg
lds
mov
stc
xchg
cmp
addr16
into
test
stos
call
bound
inc
daa
mov
js
pop
cmc
ljmp
je
pusha
in
in
pop
mov
dec
and
repnz
cmp
das
lods
clc
and
push
arpl
push
jae
leave
jno
xor
in
adc
jge
dec
sahf
cmc
xor
mov
xchg
jg
jl
mov
xchg
clc
and
lea
xor
rorb
incb
mov
test
movsb
xor
xlat
fs
insb
xchg
loop
pop
in
hlt
je
xor
mov
out
or
scas
mov
fucomp
clc
or
bound
sbbl
cmp
sub
fidivrs
test
xchg
xchg
mov
xor
or
jb
out
insl
mov
mov
leave
sti
mov
lret
fcomps
fucom
fstl
or
imul
shrb
cmp
daa
scas
call
mov
adc
out
sbb
fildll
xchg
inc
or
inc
push
xchg
pop
jns
mov
add
fbstp
xor
push
dec
pop
push
sbb
adc
dec
jne
adc
scas
je
and
ljmp
mov
mov
stc
test
fists
call
pop
pop
fstpt
cmp
int
repnz
push
fsts
and
fsub
mov
xor
jae
lock
or
dec
repnz
rcr
push
gs
or
rcll
fmull
bound
clc
cmp
mov
cmp
pop
in
fcomi
enter
and
scas
mov
mov
lods
aam
push
imul
in
xchg
repnz
loopne
cmp
pshufw
jnp
repz
pop
xchg
inc
sbb
mov
adc
mov
jno
fcmovne
xchg
arpl
popa
cwtl
or
scas
stos
inc
or
mov
sbb
mov
out
add
ljmp
iret
xchg
mov
inc
repz
adcb
pop
dec
ss
pusha
dec
ljmp
in
cmp
mov
cmp
inc
imul
in
leave
roll
fdiv
jle
jae
rcll
sbb
dec
icebp
push
and
push
mov
shll
ljmp
mov
fisttps
mov
push
dec
or
and
lea
adc
ss
out
xor
popl
pop
lahf
push
imul
push
jl
fsubp
xor
movsl
lds
test
mov
and
dec
fsubrs
cmp
mov
rcll
lcall
mov
jp
idivl
inc
shlb
cmp
mov
adc
sbb
sub
cld
mov
loop
movsl
out
shrl
and
jno
popf
xlat
bnd
cmc
push
xor
sbb
jns
fs
test
jp
xor
pop
cmp
sti
inc
push
fsincos
repz
xchg
icebp
roll
lea
mov
cmc
push
out
or
mov
jecxz
sahf
cmp
pop
push
cmc
jb
mov
dec
fucomip
clc
mov
add
sub
jne
mov
push
push
mov
int3
dec
add
stos
cwtl
push
cmp
or
sub
lods
sbb
lahf
movsl
out
pop
rol
lcall
lds
xor
in
fdivrs
int
mov
mov
call
mov
js
or
rorb
pop
loope
lret
mov
ret
add
mov
pop
repz
fwait
popa
dec
out
sbb
and
push
je
lods
imull
pop
push
and
sub
stc
jmp
into
into
or
push
xor
cmp
pop
pop
cld
pop
adc
xchg
xor
xchg
xlat
pop
mul
iret
push
xchg
xor
push
hlt
mov
repnz
cwtl
loopne
pop
xchg
and
mov
and
js
aaa
imul
ljmp
mov
or
pop
stos
lahf
inc
lret
push
add
enter
jns
xchg
dec
cltd
cltd
and
jmp
dec
dec
xchg
ret
ret
jns
or
dec
and
fisubrs
sub
mov
arpl
fbld
push
int
outsb
bound
aam
mov
decb
aaa
and
jmp
mov
jo
loop
test
and
inc
mov
into
repnz
loope
mov
movsl
xchg
mov
in
cmpsl
int3
shll
loopne
jnp
add
loop
ss
xchg
stos
pop
jp
jo
push
lods
push
inc
clc
fidivs
pop
ret
xchg
dec
rcrl
dec
pusha
jae
sbb
pushf
rorb
cltd
fnstenv
mov
hlt
dec
in
call
dec
rcll
call
dec
jle
adc
xchg
fst
or
faddl
and
or
dec
in
xor
xchg
push
bnd
loopne
xchg
cmpsb
adc
jp
pop
mov
sbb
clc
arpl
add
cmp
bound
in
mov
xchg
rorb
in
xlat
dec
pusha
das
jns
inc
faddl
les
addr16
jno
nop
sbb
sarw
xor
push
sbb
pop
cmp
lea
push
mov
push
dec
and
sbb
mov
iret
xchg
dec
lds
add
dec
fwait
shlb
movsl
loope
stc
push
dec
xor
cli
enter
out
pop
push
sarb
pushf
movsb
cmpsb
jbe
and
pop
ds
decb
fstps
popl
jbe
adc
pop
outsl
jl
int
inc
aaa
fcomip
mull
or
into
popf
add
fwait
sub
push
fsubs
fistpl
or
cmp
add
cmp
sti
pop
sub
mov
test
xchg
xchg
sbb
icebp
xchg
iret
andl
xlat
pop
cmpsl
js
sub
stos
and
jl
push
jecxz
inc
in
rcl
xor
push
cmp
stos
mov
dec
xor
stos
repz
and
test
sahf
sti
add
and
loope
xchg
xor
push
imul
mov
hlt
fidivs
scas
clc
arpl
pop
push
ret
aad
pop
lcall
fimull
sub
add
std
pop
sub
jnp
jge
xchg
movsb
int3
repnz
std
dec
sbb
and
mov
mov
mov
into
cmpsb
shlb
fistps
ss
pop
loopne
sbb
mov
pusha
add
add
clc
pop
xchg
pop
pop
insb
sbb
or
sub
xor
xchg
out
cmp
dec
mov
dec
out
pushf
or
gs
cli
xor
sahf
pop
mov
rcrb
jns
pop
sbb
sbb
inc
in
jns
clc
movsb
xchg
push
jae
cld
push
mov
mov
stc
icebp
dec
cld
and
lret
push
and
mov
xor
outsb
repnz
daa
add
je
dec
mov
add
xchg
xchg
xor
mov
cmp
push
icebp
insb
mov
repz
xchg
hlt
call
les
es
daa
stos
and
aam
aam
sbb
aaa
push
cmpsl
mov
inc
movsb
dec
sub
xchg
pop
inc
loop
push
insl
popa
jmp
mov
repnz
pop
jbe
loope
mov
loopne
fiadds
popf
nop
enter
aad
clc
sbb
mov
jne
inc
jns
sub
pop
or
bound
cmc
xlat
mov
cwtl
imul
scas
push
jno
jbe
and
jnp
ret
mov
fs
xlat
cmc
add
xor
lret
mov
push
cmpsl
lods
xor
cmp
and
jg
push
xor
pop
jle
mov
sarb
insb
and
inc
sub
lods
call
lods
xchg
lret
mov
cmp
pop
add
jae
pop
test
sti
mov
dec
std
sbb
fs
ss
std
or
aad
cmp
mov
ja
mov
push
nop
pop
add
add
aam
push
mov
int
add
sub
bound
mov
add
scas
xor
sub
sub
scas
rcll
call
pop
cltd
scas
je
stos
or
stos
imul
add
jns
push
popa
or
cmp
data16
xor
es
rolb
or
sbb
sub
push
push
lock
cltd
repnz
or
lds
lret
scas
jne
xchg
xor
dec
mov
add
jnp
xchg
mov
shlb
sub
xlat
int3
push
cld
shrb
inc
sub
lods
data16
and
mov
sbb
mov
or
js
jns
push
push
jnp
loop
adc
pop
xchg
rcrl
jmp
sbb
in
mov
jb
loopne
out
dec
rcr
aad
in
xlat
push
imul
add
inc
clc
mov
jle
jge
jle
rclb
lock
sub
repz
lret
pushf
rcrl
jl
mov
jne
in
xchg
stos
mov
push
push
enter
fsubrs
adc
fcmovnu
add
xor
sbb
add
fisubs
inc
inc
test
push
dec
adc
xchg
inc
aad
mov
stos
jb
mov
pop
jl
repz
ss
dec
jo
xlat
out
lds
cmpsl
cmp
cwtl
mov
adc
dec
loop
or
cwtl
lock
and
fs
xchg
repz
loop
xchg
cmp
jp
inc
ret
movsl
xchg
adc
lods
aam
jecxz
rcll
adc
ret
xor
sbbl
cld
pop
mov
xlat
push
xchg
inc
mov
call
test
mov
cmp
ja
daa
and
mov
pusha
cltd
xchg
cli
fisubrl
sub
subb
jg
cli
gs
push
sub
dec
and
dec
jb
mov
aad
mov
lret
ss
int3
mov
rol
fisubs
sub
pop
sub
jnp
or
aam
and
popf
mov
mov
mov
addw
lock
mov
xor
xor
jmp
imul
xlat
ljmp
pop
sub
mov
outsb
stc
test
and
aaa
mov
cli
inc
xor
fistpl
and
gs
push
bound
xchg
rorb
push
negl
mov
xor
cmc
fmull
imull
xor
lcall
jecxz
arpl
stc
push
cmc
ret
fdivr
cmc
in
cli
dec
xor
xor
in
or
mov
movsl
mov
mov
dec
lcall
mov
mov
xchg
jbe
test
lods
dec
fs
cli
stos
xchg
shll
jns
and
cmp
in
imul
sub
fs
lods
jl
test
repz
cmpsl
mov
les
les
les
jbe
outsb
xchg
stos
aad
mov
mov
mov
pop
out
ja
sahf
fwait
loope
in
dec
sub
ds
inc
dec
cmp
and
xchg
push
test
mov
pop
ds
je
mov
and
pop
sbb
mov
addr16
cs
sbb
out
cs
jge
pop
or
aas
pop
xor
xchg
sahf
add
jle
icebp
test
ja
mov
inc
inc
bound
or
cmp
idivl
mov
xor
sbb
repnz
cmpb
xchg
lea
inc
notb
mov
and
and
cmpsb
inc
dec
out
lock
cli
fwait
sbb
stos
adc
sbb
jnp
jl
ja
mov
enter
push
in
loop
mov
imul
jmp
mov
cmpsb
cmc
jbe
sti
pop
das
add
dec
aas
or
fsubrl
fwait
shrb
idiv
adc
ficompl
lods
jle
lds
sub
mov
jp
cmp
mov
push
pop
xor
leave
bsr
mov
inc
push
out
out
lock
lahf
cmp
and
bswap
xchg
imul
cmc
inc
imul
insl
pop
orb
outsb
dec
xor
sub
outsl
xchg
or
mov
adc
adc
ret
push
pushf
xchg
mov
in
fidivrl
nop
mov
mov
and
dec
pop
sbb
pop
test
cmp
lret
xchg
mov
loopne
aam
shr
xchg
scas
rorl
push
push
sub
dec
imul
test
test
mov
lcall
and
pop
push
shlb
cmp
pusha
push
loopne
cmp
shl
dec
mov
roll
ja
xchg
adc
sub
pop
sub
clc
jg
add
mov
jnp
add
or
cwtl
jmp
xchg
rcrb
daa
lahf
mov
fwait
call
iret
rolb
les
leave
cmp
xorb
and
mov
mov
jnp
out
fcoml
fisttpl
mov
sbb
sub
jae
xchg
mov
cmp
inc
call
sbbb
mov
xor
or
push
mov
rorb
xchg
int
mov
stc
xchg
mov
inc
pop
stc
imul
testl
add
es
popa
push
mov
jle
fcomps
xor
or
mov
push
in
fdivs
mov
sbb
ja
or
pop
cmp
xchg
div
jg
imul
call
inc
pop
fs
out
jge
xchg
or
pop
stos
pushf
aaa
fwait
pop
mov
popf
adc
sbb
adc
sbb
or
jbe
pushf
call
cs
sbb
dec
fs
mov
in
sbb
or
mov
mov
daa
sbb
inc
lret
adc
pusha
jbe
xor
sub
mov
enter
inc
mov
xor
sbb
cmp
pusha
fmulp
ds
lahf
cmp
jne
lcall
add
or
cs
pop
inc
and
mov
sub
hlt
out
xchg
sarl
mov
pushw
sbb
dec
jge
push
adc
stc
cmp
aad
xchg
sbb
jmp
stos
mov
stos
mov
mov
loop
test
dec
nop
in
pop
cmp
cmp
fs
sbb
or
xchg
or
mov
mov
hlt
les
dec
xchg
xchg
xchg
shrl
xchg
popf
mov
aad
gs
js
cwtl
xor
insl
mov
jg
ljmp
imul
mov
int
cmc
ds
xorb
pusha
lahf
inc
pop
out
repz
in
fnstcw
inc
add
jae
jnp
test
push
out
in
daa
dec
and
lret
out
sbb
cmp
fldenv
pusha
sub
mov
xchg
push
std
test
sbbb
sbb
cmp
push
repnz
or
dec
loope
cmpsl
mov
sbb
out
mov
or
pushf
pop
fists
sbb
enter
lahf
mov
inc
pop
push
mov
mov
sbbl
mov
push
add
das
inc
jnp
stos
loop
add
fists
and
lcall
hlt
andb
jns
addr16
push
out
es
lcall
cmpsl
addl
aad
jg
out
ds
fisubs
pop
lahf
fmuls
fisubrs
sbb
mov
rorl
jg
add
lahf
jge
jmp
mov
std
jno
pop
or
fdivr
cld
adcl
xor
cltd
icebp
mov
jp
add
xchg
cmpl
mov
xchg
mov
aas
mull
out
loop
jecxz
adc
add
sub
test
push
pusha
stos
int
lds
imul
lock
cmpsl
out
jbe
int
xchg
jge
rcrl
or
mov
xor
push
test
xor
cmp
mov
mov
sub
add
add
cmpsb
adc
adcl
cmp
out
xlat
sbb
mov
test
or
mov
adc
cmp
sub
and
rcrb
push
xor
jmp
in
inc
and
mov
pop
add
mov
inc
and
and
fsts
sahf
stc
xchg
arpl
sub
sbb
or
cmpsl
clc
loop
pop
dec
or
idivl
xchg
lods
inc
loop
test
adc
mov
inc
out
pop
das
into
jae
cld
and
sbb
and
mov
loopne
pop
in
aad
jbe
hlt
jb
push
push
jmp
insl
jmp
mov
sbb
cmp
sbb
add
mov
lds
jle
cwtl
pop
sbb
dec
xlat
or
in
lods
fmuls
scas
cmp
dec
add
hlt
dec
mov
stc
daa
push
xorb
out
jo
xchg
ficompl
mov
cmpsb
out
ret
and
leave
notl
jo
cmp
xchg
or
ljmp
sbb
scas
mov
and
inc
sub
xor
add
push
fisubrs
repnz
xchg
imul
mov
mov
nop
loop
movsl
fcomp
mov
push
aad
in
loope
xor
aam
fisttps
loopne
mov
and
mov
out
outsl
aaa
into
aas
push
cmp
fwait
mov
cwtl
mov
outsb
mov
fs
cs
lock
mov
test
leave
or
loopne
pop
test
test
and
pop
cmp
jnp
minps
dec
push
lds
pop
mov
lcall
out
mov
rcll
mov
sbb
inc
xchg
in
movsl
mov
cltd
push
xor
sub
popf
jecxz
test
xor
sbb
xchg
ss
sub
mov
push
sub
fists
push
nop
mov
push
hlt
fcoms
lret
outsl
cmp
sbb
scas
rorl
inc
jb
mov
aaa
out
pop
pop
cltd
mov
jp
bound
push
jae
mov
mov
pop
lret
loop
xor
sub
pop
or
stos
pop
mov
or
pop
dec
mov
fadds
push
push
mov
insl
dec
mov
sub
test
cmp
jb
mov
faddp
test
cmc
xor
test
scas
aad
inc
jg
sbb
ficomps
jnp
mov
inc
cmp
sbb
rcl
jg
es
ss
jp
das
fldenv
fs
pushf
mov
push
adc
mov
cmc
insl
xor
jmp
xchg
dec
or
mov
sub
movl
jnp
cltd
xchg
orl
jl
cmpl
ja
sbb
arpl
int3
test
sbbl
ss
dec
ljmp
pop
mov
fistps
popa
lock
mov
fimuls
ret
mov
movsb
into
shll
test
mov
mov
int
out
mov
idivb
push
pop
push
pop
fcoml
and
test
cli
cld
adc
cmp
xchg
mov
pop
mov
ficoml
or
jne
sub
test
lods
stos
nop
jge
call
mov
xorl
outsl
inc
adc
pop
or
push
repz
adc
iret
nop
push
rcrl
dec
repnz
pop
sarl
jp
ror
nop/reserved
loopne
jbe
push
fistpll
mov
cmp
push
popf
push
pop
repnz
lods
rcll
adc
inc
mov
loopne
adc
es
cmp
aam
jno
mov
inc
mov
fiadds
add
cmc
mov
cmp
adc
aaa
dec
mov
and
out
lret
test
es
add
dec
sarl
cmp
adc
addr16
mov
xor
leave
xor
pop
fidivl
push
or
shlb
xor
jg
cmp
inc
cmp
inc
sbb
mov
fwait
daa
or
pop
cmc
sbb
xor
in
rcr
sar
cmp
and
jle
cs
xchg
lahf
daa
in
push
mov
push
and
fldcw
push
out
aaa
cmp
mov
jge
mov
sbb
jmp
dec
push
sub
sub
cmpsb
pop
inc
push
ljmp
rolb
xlat
jl
mov
shlb
cmp
or
andl
enter
movsb
addr16
pusha
sbb
sahf
idivb
mov
lds
movsl
cmc
iret
leave
inc
sti
imul
jge
and
out
lret
mov
xor
pop
jo
es
pop
jne
xchg
add
fidivl
add
dec
inc
stc
std
cmp
xor
sub
inc
pushl
bound
adc
sub
inc
int
mov
dec
dec
out
inc
push
inc
pusha
lcall
daa
daa
xchg
jno
push
insl
xor
cs
mov
mov
fmuls
into
sub
adcb
jge
or
mov
or
int
jo
mov
iret
mov
sbb
lcall
out
ljmp
fidivs
push
push
and
inc
adc
sub
jg
out
or
mov
mov
dec
xor
push
xorl
dec
test
mov
test
xchg
or
rclb
sbb
sub
or
cmp
pop
test
imull
xchg
sub
mov
or
negl
outsb
pop
cli
dec
push
inc
jle
mov
add
cmpsb
jmp
mov
nop
sti
jmp
jg
pop
xchg
jno
paddsw
mov
fstl
jle
push
in
ficomps
les
test
dec
sbb
or
mov
cmp
dec
jl
mov
fs
lock
adc
sub
lea
lds
pushf
mov
test
insl
loopne
xchg
pop
icebp
lret
cs
mov
cmpsb
mov
scas
add
dec
mov
loop
mov
cltd
sub
pop
sub
mov
clc
stos
arpl
loop
pop
mov
repz
cmp
pushf
gs
int3
sahf
shl
bound
call
adc
sbb
rorb
mov
push
jbe
pop
shl
mov
pop
out
sub
pop
insb
jp
sbb
ret
and
daa
or
popf
sbb
dec
inc
mov
je
aam
xchg
rcr
push
addr16
xchg
neg
xchg
dec
sub
adc
je
cmp
lret
dec
fdivs
data16
mov
mov
add
pop
je
jmp
cmc
in
mov
sub
xor
shll
pop
mov
cli
addr16
xor
inc
stc
int
and
mov
pushf
les
sub
adc
fucom
in
mov
jns
lds
or
negl
mov
pop
xchg
rcl
xchg
fwait
insb
fcomps
mov
addr16
xchg
ret
outsb
add
sub
jg
adc
jns
jge
dec
lods
xchg
jnp
inc
lds
leave
ret
bound
jecxz
lods
out
fidivrl
push
inc
and
mov
je
jae
add
mov
xlat
push
cmpb
jb
arpl
mov
mov
ja
push
clc
subb
sbb
lds
pop
jl
fidivrl
sbbb
mov
fnstsw
add
lret
jl
xchg
pop
stos
sub
mov
mov
mov
mov
out
test
call
pop
add
jl
test
xor
loope
jle
int3
out
xchg
and
mov
sbb
mov
cmp
cmc
aas
ja
push
insl
inc
daa
dec
push
arpl
cmp
fcmovnu
pop
push
repnz
jp
jg
rclb
stos
insl
cmp
jno
in
imul
fimuls
rcrl
ret
test
std
mov
iret
aaa
mov
cwtl
lret
push
pop
lods
ss
aas
jae
into
dec
std
push
xor
mov
movaps
or
add
mov
xchg
negb
outsb
push
xorl
cs
or
mov
xor
pop
into
dec
loope
or
xlat
and
mov
movsb
pop
adc
scas
mov
adc
cmp
jno
cltd
jae
push
jmp
pop
xchg
lcall
pop
inc
loop
lods
jecxz
pop
pop
scas
movsl
icebp
cmp
int
mov
xchg
aam
dec
loop
mov
movsb
jmp
nop
nop
add
and
cmp
mov
push
divl
sbb
pusha
xchg
ja
pop
seto
sub
les
push
pop
aam
insl
ret
mov
inc
repz
out
xor
sbb
aad
mov
jg
xor
jge
push
sub
push
cltd
icebp
jp
pop
addr16
xor
rcll
mov
scas
loopne
sub
nop
xchg
push
insl
je
cmp
mov
cli
std
mov
sub
inc
mov
add
je
mov
jo
xchg
xor
gs
stos
inc
leave
mov
sbb
push
out
clc
out
push
jae
pop
in
cltd
cli
inc
push
pop
lret
bound
loop
dec
mov
fiaddl
notl
movsl
std
ja
push
push
xchg
or
fidivrs
aaa
mov
push
jle
imul
data16
movsl
jecxz
pop
addb
in
sub
int
add
pop
repnz
cmp
jmp
out
cmc
push
into
leave
push
call
repnz
cmp
je
lock
lret
add
and
lock
sbb
iret
cmpsl
icebp
movsl
xor
inc
int
sbb
ja
repz
in
cwtl
lods
and
pop
pop
or
int
xor
push
cli
mov
iret
in
jp
sub
dec
adc
pop
fldl
loop
jl
xlat
loop
push
mov
cmp
mov
insb
cltd
in
push
xchg
icebp
loopne
jg
mov
inc
inc
cs
bndstx
cmp
in
stos
add
iret
xor
xchg
je
cmp
stos
mov
mov
bswap
cmpsl
adc
mov
xor
xchg
decb
loope
jae
shrb
cltd
fwait
xchg
leave
nop
pop
stos
mov
adcl
xchg
movsb
mov
jo
aas
lcall
daa
into
sub
mov
jno
sbb
popf
push
aas
int3
push
into
adc
mov
xchg
inc
gs
gs
pop
adcl
lock
daa
idiv
push
in
mov
adc
enter
je
or
dec
in
jne
test
sbb
mov
push
mov
push
out
sbb
pop
in
cltd
mov
inc
imul
je
add
dec
and
lock
mov
mov
cmp
xchg
fdivl
enter
rolb
out
jo
jle
scas
xor
mov
xor
repnz
enter
imul
shlb
lock
les
xorb
loopne
fstps
lcall
xchg
add
movsb
xchg
push
ret
dec
gs
dec
popa
nop
push
pop
test
add
dec
bound
jp
cmp
add
mov
std
add
jnp
loop
rorl
fisubrs
cmp
shrb
cmpsl
mov
stos
aad
cmp
jmp
popa
push
push
test
push
and
jbe
pop
lods
gs
das
fs
jb
sub
subb
inc
daa
jb
mov
adc
scas
mov
enter
movsl
inc
push
or
jbe
aad
dec
sti
dec
adc
inc
jb
dec
dec
out
outsb
movsl
xchg
jmp
iret
add
push
dec
sub
dec
lahf
add
dec
cwtl
inc
sbb
outsl
mov
pop
xor
xchg
mov
stc
push
gs
movsb
in
rclb
aad
in
xchg
mov
fistpll
and
lock
jno
sub
adc
jbe
or
xor
xchg
rorl
loope
cltd
gs
rol
add
pop
adc
jns
add
xchg
add
sarb
pop
addr16
idivb
hlt
gs
clc
pop
cmpsl
enter
imul
xchg
mov
rcr
xor
jno
jns
push
sub
lret
popa
inc
idivb
and
data16
inc
jmp
mov
and
sub
movsb
jae
mov
pushf
test
dec
bound
adc
orb
mov
xor
imul
aaa
pop
pop
cwtl
mov
addb
leave
lret
movsb
jmp
inc
fadds
cmc
sub
loope
mov
push
mov
push
shlb
gs
ss
xchg
dec
fsubs
mov
in
and
and
jmp
pop
hlt
push
adc
adc
sub
mov
mov
ss
inc
leave
adc
ret
outsb
jbe
popa
stos
stos
clc
xchg
xchg
or
add
daa
xchg
jns
aam
pop
rorb
mov
adc
gs
pop
adc
test
imul
mov
clc
cmp
xchg
adc
dec
xchg
adcl
imul
pusha
lods
dec
sti
push
int3
stc
pop
mov
xor
sarb
add
pop
jp
and
sti
cmc
push
cld
pop
and
xchg
cmpsl
fs
push
dec
call
sti
outsl
xchg
ret
mov
fdivr
bound
sbb
sub
mov
out
dec
push
arpl
pop
push
sub
push
nop
mov
loop
push
xor
adc
push
push
jecxz
mov
repnz
xchg
pop
ljmp
and
and
xchg
fisubl
inc
pop
insb
jge
or
inc
call
mov
jmp
and
xchg
cmp
sub
pop
stos
adc
ss
insl
sahf
xchg
cmp
or
push
inc
pusha
adc
cmp
fstpt
mov
cmp
jmp
out
test
add
push
jno
push
enter
fsub
lcall
mov
icebp
mov
mov
fwait
jnp
mov
test
data16
lret
and
push
cld
stos
sub
mov
sub
jae
shrb
ret
out
ds
cli
enter
inc
mov
insb
fs
repnz
or
jno
dec
push
pop
gs
and
mov
outsl
ja
sarl
pop
or
movhps
cmp
test
cs
iret
loope
sbb
cmp
adc
xchg
notb
popa
cmc
sub
in
add
dec
push
push
fs
daa
mov
repz
imull
fyl2x
aam
rcll
testb
fidivs
cwtl
mov
and
mov
add
dec
test
jb
inc
jne
test
call
add
sbb
add
andl
pop
arpl
and
pop
add
into
daa
movsb
xchg
in
imul
inc
pop
xor
xchg
adc
aam
lea
imul
xor
aam
into
out
push
adc
xchg
adc
sbb
inc
fwait
adc
inc
push
add
shrl
and
mov
cmp
or
jb
fs
or
inc
mov
mov
jle
fldcw
push
mov
mov
or
mov
movsb
jns
gs
push
outsb
push
mov
jb
test
dec
lock
mov
xchg
mov
imul
push
retw
mov
aaa
das
in
cmp
cmp
adc
or
hlt
push
ret
mov
or
push
xor
aaa
xchg
test
fdivl
scas
lea
mov
push
test
scas
arpl
xchg
mov
mov
adc
aaa
pop
inc
cmp
cld
add
addr16
jge
nop
mov
int
cmpsl
push
je
outsl
mov
out
lret
add
orl
mov
mov
xor
insb
pop
cmpsl
pop
in
popf
imul
sub
dec
stos
add
std
lea
mov
pop
or
leave
cmc
jno
xor
pop
and
inc
decl
test
in
dec
call
scas
repnz
sbb
pop
dec
loope
cli
push
enter
or
mov
cmp
push
scas
ret
in
idivb
cwtl
cli
inc
enter
icebp
shlb
adc
mov
or
and
adc
mov
inc
dec
cwtl
rorl
sbb
pop
sub
mov
xor
fcompl
popl
cmc
jl
xchg
sub
and
xchg
ret
xchg
jecxz
add
addr16
pushf
mov
sbb
out
jnp
ds
lock
inc
jne
pop
std
mov
test
fxam
mov
icebp
fbstp
inc
push
fdivl
cld
mov
mov
scas
sti
inc
lods
ljmp
xchg
or
call
and
aad
cmp
push
push
mov
int3
sti
xchg
jge
les
cmp
cmp
enter
add
xor
addr16
in
or
and
inc
inc
fwait
imul
jae
das
and
enter
lret
pop
sbb
test
pop
jecxz
mov
int3
xor
das
int3
xchg
fdivs
push
lock
test
loop
jnp
mov
rorl
pop
jecxz
pop
push
cmp
jp
and
jb
daa
mov
js
sbb
push
out
pop
fildl
icebp
mov
in
mov
sub
enter
mov
push
xor
push
std
daa
xchg
push
ja
ror
repnz
test
jp
adc
pop
pop
psadbw
push
mov
rcll
rcrb
mov
cvtps2pi
fistps
sbb
add
rolb
cmp
or
mov
ret
cmp
stos
pop
in
adc
mov
out
push
xchg
and
repnz
jno
and
enter
pop
jl
jnp
pusha
cmpsl
xor
lcall
cmp
imul
inc
mov
negb
pusha
adc
or
push
push
jae
std
push
jp
pop
ds
sub
and
mov
repnz
pop
dec
mov
lds
push
inc
cs
push
mov
inc
mov
fwait
in
mov
dec
pop
sbb
sub
pushf
pop
stos
test
ficoms
fwait
stos
cmp
jo
inc
lock
aas
dec
mov
pop
jecxz
cmp
es
test
pop
fprem1
mov
xor
xchg
xor
addb
cmp
xor
xchg
push
mov
cmp
scas
pop
and
dec
mov
call
stos
cmpsl
out
mov
mov
mov
ret
xchg
push
insb
dec
rcll
lock
in
mov
sub
aad
pushf
sbb
movsb
mov
sar
cmp
lods
scas
cmp
push
pop
sbb
xchg
pop
jbe
pop
cmp
in
rorl
push
dec
leave
xchg
sahf
mov
push
addl
fcompl
iret
dec
pop
mov
js
movsl
out
mov
inc
testl
cmp
mov
fildl
mov
or
pop
fidivs
dec
sbb
imul
dec
mov
pop
ss
push
push
jae
xchg
lds
mov
cmp
inc
jmp
or
andl
test
mov
mov
cltd
cmp
movsb
or
shrb
or
ret
in
xor
lods
xchg
add
add
push
out
pop
mov
push
stc
repnz
push
add
jmp
sbb
sub
mov
lahf
dec
adc
mov
sbb
or
jne
sbb
mov
stos
add
xchg
pop
jno
dec
push
fldl
stos
popf
xlat
lods
shl
insb
stos
inc
cmp
mov
jp
test
or
ss
sbb
mov
sahf
add
pop
lahf
mov
jmp
les
lods
push
pop
pop
rorb
xchg
add
xchg
add
fs
mov
jge
mov
aam
sbb
add
jmp
fs
jmp
mov
test
sti
inc
outsb
xchg
jle
sbb
add
xchg
xor
fs
mov
mov
shl
loopne
testl
add
inc
movsl
rorb
arpl
jno
sub
dec
jb
test
mov
push
jecxz
dec
popf
sub
stos
xor
push
cmp
shlb
push
push
jae
imul
xchg
jle
lret
fcomp
pop
and
sbb
popa
mov
lret
jl
movsl
inc
mov
je
xchg
mov
and
xchg
mov
jmp
test
in
dec
fstl
sub
mov
cltd
in
xor
lret
shlb
fcomps
adc
pop
dec
pop
movsl
fildll
cmp
ljmp
fcoml
add
arpl
movsl
push
or
cmp
inc
test
popa
jmp
lcall
cmp
rcr
loope
cwtl
mov
lahf
or
popa
test
dec
popf
mov
sbb
andl
add
push
and
test
loope
push
add
jge
xchg
adc
lods
dec
inc
stos
test
sbb
xchg
ret
or
dec
cltd
loope
lods
pop
lcall
ror
xlat
adc
jp
js
mov
insl
add
jbe
fmul
mov
ja
jo
jno
mov
cld
ficoml
in
or
xchg
punpckhbw
int
inc
xchg
pusha
fcmovu
push
out
ja
adc
ljmp
jns
in
scas
rcl
or
mov
dec
xor
jmp
lds
fs
dec
pushf
lretw
and
in
pop
push
push
test
xor
scas
clc
pop
int3
mov
sbb
mov
pop
cmp
xchg
out
adc
cmpsb
pusha
aaa
jp
cld
fistl
nop
gs
and
mov
jbe
push
or
or
adc
mov
mov
inc
fcmove
movsl
jge
ja
mov
test
sub
cmp
sbb
jecxz
jbe
stos
cli
sarl
pop
sti
mov
out
add
outsl
and
adc
popa
sub
jge
add
jle
sbb
inc
push
and
xor
add
lcall
out
aaa
cmp
insb
mov
inc
jge
int3
repz
pop
xor
rcrl
dec
ljmp
nop
ja
add
jns
adc
imul
jnp
and
ret
pop
jmp
sub
incl
xchg
daa
mov
les
fnstenv
jae
sbb
pop
aam
fldcw
jbe
add
pop
fsubp
mov
push
mov
test
adc
or
pop
insb
je
add
push
mov
enter
cwtl
sbb
iret
adc
or
cld
movsb
xchg
out
cwtl
mov
popf
out
lahf
out
mov
cmp
and
sbb
push
inc
mov
cmp
ss
cmp
js
push
jmp
into
mov
push
sti
into
push
imull
cmp
iret
aaa
test
int
adc
clc
clc
adc
stos
out
lret
fsubr
cmp
aaa
push
test
ret
adc
jbe
cmp
jne
mov
dec
push
sbb
or
fldcw
push
gs
jb
dec
inc
cltd
adc
ja
cmp
mov
push
and
fdiv
aam
mov
or
lret
or
sub
cmpb
sbb
jo
dec
or
xor
iret
sbb
dec
xchg
pmullw
imul
mov
mov
insl
jbe
es
mov
sahf
adc
nop
fnstenv
mov
pop
inc
cmp
mov
cmpl
sub
cmp
push
loop
enter
out
push
scas
push
inc
fcoms
jmp
sbb
aad
cmp
lea
sbb
js
pop
into
lret
xchg
out
dec
and
in
movsl
mov
into
fwait
cmp
pop
xor
cld
leave
push
imul
xorl
sahf
stc
sub
nop
jp
inc
fldt
les
sub
dec
mov
pop
or
add
sbb
mov
xchg
sub
sub
sub
sbb
push
xor
or
inc
mov
mov
xchg
inc
pop
mov
xor
cmp
sub
js
sti
fs
xor
xor
cwtl
nop
mov
data16
adc
and
nop
add
sbb
push
loope
sbb
sbb
mov
push
fldl
repz
ljmp
fcomps
mov
cli
adc
repnz
inc
cmp
ret
lret
cmp
cmp
movsl
cmp
xchg
mov
adc
rorl
xbegin
aas
imul
xor
das
aaa
scas
fwait
stos
mov
in
cwtl
pop
push
fs
in
test
and
jo
xchg
mov
add
cmp
sub
fcmovu
fwait
jnp
adc
js
in
out
pop
fwait
inc
dec
push
push
push
push
jae
nop
test
pop
xchg
icebp
cmp
in
scas
xor
add
adc
cs
loop
xchg
jae
push
fidivs
pop
insb
pop
dec
adc
sub
je
outsl
sarl
in
xor
adc
cmpb
mov
leave
sbb
dec
out
roll
pop
sbbb
rorl
mov
pop
xorps
ret
sub
insl
pop
dec
push
aad
clc
jg
cmp
fsubs
dec
ss
adcb
cmpsb
outsl
addr16
iret
into
aaa
outsl
xchg
and
fs
mov
pusha
cmp
mov
fmull
xchg
or
aaa
imul
addl
ret
mov
jp
loope
and
mov
xchg
xlat
insl
shll
rorb
jo
cmpsl
loop
xor
dec
int3
lret
push
jbe
mov
nop
xor
cmc
pop
out
aas
cmpsl
inc
insb
js
lea
jbe
repz
fsubrs
sub
jg
mov
ret
les
cmpsl
lods
push
push
stos
shlb
mov
pop
mov
jae
popf
xchg
lret
or
or
insb
jecxz
pop
mov
cwtl
adc
lcall
lret
push
cmpsl
cmp
imul
pop
jae
pop
adc
or
jb
cs
mov
ljmp
jmp
fwait
gs
fstps
test
add
ja
lods
push
xor
aad
mov
mov
fbld
pop
push
pop
sbb
and
xor
inc
push
out
mov
aam
rolb
pushf
clc
push
xchg
and
pop
cmpb
lods
lcall
inc
es
lahf
pop
ja
pop
ret
mov
add
sub
imul
jae
ficoml
dec
test
inc
std
mov
inc
add
mov
xchg
daa
adc
mov
mov
push
jbe
mov
in
fcompl
mov
push
fisubrs
iret
inc
mov
pop
ror
push
out
xor
rcr
dec
lahf
cltd
pop
ljmp
bound
inc
std
sbb
stc
adc
lods
aaa
pop
in
mulb
mov
xchg
push
jmp
sub
cmp
imul
inc
fs
adc
out
jp
adc
jl
cli
js
scas
add
out
inc
lds
pop
xor
les
cld
mov
clc
push
dec
jbe
repz
pop
jge
mov
xor
inc
clc
fwait
nop
add
mov
mov
cmp
or
push
jge
call
arpl
in
addl
insb
adc
lret
mov
xor
sahf
cs
sbb
or
dec
icebp
stos
adc
or
mov
jge
repz
mov
pop
aaa
sbb
das
call
dec
cmp
loopne
add
mov
pusha
mov
or
adc
push
add
imul
cmc
cmp
xor
add
mov
pushf
nop
fwait
cmp
arpl
sahf
cli
add
insl
popa
push
outsl
jge
pop
ss
int
add
hlt
dec
pop
rcr
in
xchg
in
add
lcall
pop
mov
push
int3
cld
call
xor
inc
push
jae
adc
in
inc
es
cmc
ljmp
sti
jle
fildl
mov
jae
mov
sub
mov
inc
cmc
dec
aas
and
sbbl
jns
pop
mov
jne
xor
aad
rcll
xor
sbb
jns,pt
cmp
movb
mov
lds
fistpl
outsl
and
loop
mull
push
aam
adc
xor
mov
in
and
out
push
mov
stc
lea
fildll
mov
jmp
out
jno
gs
ret
sbb
lahf
movsl
lds
stos
dec
adc
int3
aad
push
data16
mov
xor
cli
sub
out
stos
stos
xchg
pop
mov
or
aad
pop
jmp
mov
xchg
xor
ds
lahf
inc
outsb
mov
pop
je
rolb
pop
ja
pusha
and
xchg
rol
aas
add
ds
sbb
in
mov
sbb
sarb
in
and
jp
jnp
sarb
inc
jmp
or
xlat
xchg
dec
out
out
test
mov
shll
jg
mov
inc
jo
lcall
jmp
or
cli
or
push
shlb
xchg
movsl
and
cwtl
dec
iret
loopne
lock
cmpsb
iret
jecxz
das
jecxz
pop
push
cmc
mov
mov
add
rcll
int3
adc
cmp
insl
sbbb
mov
fiadds
loop
cmc
repz
xchg
sub
lea
lods
arpl
repz
or
arpl
hlt
add
testl
cmp
jbe
data16
inc
lret
lea
push
add
in
jno
cmpsb
in
aam
jno
call
setnp
adc
xor
mov
xor
bound
lret
subl
sub
ss
push
cli
jecxz
sti
sbb
dec
andl
push
jge
mov
cmp
das
xor
push
push
push
push
jns
jle
lock
lret
pusha
fs
sbb
inc
xchg
ds
mov
mov
jle
cmp
push
das
rcrb
inc
sbb
cmpsb
sbb
test
pop
xchg
mov
xor
cwtl
fldcw
cmp
cmp
push
sbb
mov
push
stc
scas
scas
in
jae
mov
and
frstor
cmp
jnp
xchg
xor
daa
mov
scas
jl
cmp
lods
mov
jmp
sbb
es
add
pusha
jmp
jp
and
es
adc
push
imul
mov
pop
into
mov
dec
adc
loopne
fadd
mov
stc
dec
and
lds
jb
push
pop
iret
add
cmp
and
cmpl
sub
fsubrs
xor
lret
std
adc
ret
jp
sti
cltd
fdivrs
push
or
mov
push
mov
fyl2xp1
movsl
jge
xchg
mul
inc
sti
or
sub
jb
inc
iret
push
xchg
call
xchg
lds
xchg
sarl
sub
paddb
addr16
dec
or
jae
nop
adc
dec
sub
ret
out
addl
mov
aad
addr16
in
adc
mov
sub
pop
inc
scas
sbb
shrb
mov
std
scas
cs
or
pop
jae
negb
and
sub
adc
inc
out
xchg
sbb
jns
int
dec
insl
pop
sub
and
mov
mov
sbb
and
jo
ret
add
pop
pop
push
sbb
or
pop
addr16
push
sbb
mov
ret
fxtract
add
inc
adc
adc
mov
test
mov
lods
mov
mov
inc
mov
sbb
in
imul
icebp
adc
or
jle
cmpb
and
cmp
sahf
aad
jle
arpl
call
mov
test
in
cmpsb
push
flds
std
adc
sbb
xlat
xchg
sahf
cs
filds
pop
cli
aam
mov
mov
xchg
mov
outsl
bound
sti
movb
mov
repz
dec
or
fwait
jp
xor
into
loop
mov
push
or
loope
sub
mov
jbe
push
test
mov
push
movsb
in
and
jle
into
xchg
sbb
pop
and
mov
inc
sbb
cmp
popf
cmpsl
sub
jmp
sbb
cmp
aaa
xchg
scas
stc
cmc
mov
xchg
lds
adc
pop
xor
test
xor
push
pop
dec
lock
mov
ds
loopne
adc
jne
lods
mov
adcl
mov
inc
xor
or
add
sbbb
dec
sahf
dec
dec
mov
jo
out
loop
jns
dec
xor
xchg
add
sarl
cmp
in
je
cmp
push
fistpll
pop
lods
mov
test
iret
cmp
and
adc
mov
adc
pop
sti
push
mov
pop
xchg
loope
sarl
dec
lea
jne
mov
sbb
mov
cmpsb
in
xchg
fcmovb
inc
fst
jo
mov
js
mov
aad
loop
std
sbb
es
std
loop
inc
sbb
xor
adc
xlat
jns
je
sahf
dec
clc
dec
fwait
cli
add
out
xlat
outsb
mov
adc
lret
rep
xor
cwtl
dec
sub
sub
pop
test
push
mov
mov
add
ss
js
mov
test
mov
aas
mov
pop
mov
addr16
nop
inc
fstpl
push
mov
rorb
rcrl
push
xor
iret
shrb
jno
push
sti
cmpsb
mov
add
jbe
decl
xor
out
aaa
mov
mov
sub
adcb
push
sub
loop
and
mov
test
addl
sbb
clc
adc
sub
in
fists
imul
mov
rorb
xor
add
stos
adc
pop
lea
je
mov
out
shlb
xor
cmc
arpl
cld
scas
pop
rolb
xchg
sub
clc
and
mov
out
add
dec
xchg
clc
jae
int
push
push
cmpsb
and
stos
addr16
cmpsb
mov
fisubrl
jns
hlt
xchg
sbb
add
int
xchg
dec
inc
xchg
mov
mov
push
rolb
fidivs
xor
cltd
sub
or
rcrb
imul
sarl
notb
pop
add
inc
jae
shrl
cmp
lcall
aam
pop
bound
fs
mov
adc
mov
lea
stc
mov
push
or
and
pop
ret
add
mov
rcr
pop
icebp
lock
movsb
adc
jp
cmp
ror
aad
sahf
cmp
icebp
les
or
ret
cmp
dec
in
rorb
push
lret
into
repnz
pushf
mov
addr16
pop
lds
jge
int3
mov
pusha
out
and
push
out
lret
aaa
jl
add
out
sub
lahf
mov
xchg
movsl
outsb
xchg
push
iret
mov
adc
push
mov
in
test
ja
and
mov
ss
call
add
mov
push
into
push
and
fwait
sbb
mov
push
jp
cmp
jbe
mov
mov
rorb
jge
enter
jg
lods
fmuls
inc
xchg
dec
fs
jb
pop
repz
xchg
add
cmpl
ljmp
je
gs
test
cmp
orb
or
adc
mov
xchg
xchg
cmpb
cmp
sbb
adc
je
jb
adc
shlb
jne
sti
jns
fwait
cmp
jnp
and
sbb
mov
fimuls
sarb
mov
push
inc
pop
add
jnp
xchg
clc
emms
into
nop
jge
push
fs
aad
cmc
stc
xchg
mov
cld
andl
ja
cmp
sub
inc
sti
mov
popl
and
sub
mov
fbstp
inc
jle
jg
lock
pop
pop
lock
rcrb
iret
cwtl
lret
mov
jae
pop
pop
pushf
call
sub
or
into
mov
out
push
lcall
dec
idivb
shlb
rcrb
jp
xor
push
loop
ret
mov
mov
xchg
add
xor
pop
jno
inc
movsb
in
lock
sahf
or
cmpsb
mov
stos
mov
cmpsb
js
stos
sub
jnp
push
adc
stos
fldenv
dec
repnz
test
pop
mov
sahf
and
aam
jnp
mov
nop
and
and
notb
sbb
and
out
xchg
cmc
mull
outsb
int3
cltd
js
mov
int
mov
push
and
xchg
pop
adc
repnz
push
into
xlat
js
sub
ret
sbb
mov
out
lods
inc
sahf
xchg
jge
in
pop
btr
pop
dec
mov
mov
in
jmp
std
repz
cmp
inc
testl
or
adc
les
pop
add
int
out
clc
bound
inc
mov
jno
inc
insl
idiv
outsb
xchg
cmp
xchg
ret
nop
outsl
add
sarl
std
push
loope
test
mov
pusha
sbb
stos
ret
inc
xchg
mov
jae
cs
lods
add
aaa
sub
leave
sahf
not
or
into
lret
cwtl
jo
in
inc
adc
mov
jae
inc
and
mov
daa
insl
sbb
sub
cmp
es
pop
paddd
stos
or
dec
cmp
in
jg
adc
ss
and
fs
je
adc
stc
adc
dec
fnsave
popa
popa
xchg
xchg
sub
movsl
bound
in
clc
adc
xlat
sub
dec
xorb
adc
insb
fwait
pop
lods
mov
mov
add
fldl
dec
fistpll
sub
das
in
int3
cwtl
cmp
mov
in
mov
lock
lahf
xchg
jno
dec
test
xchg
ret
xor
stc
xchg
fcoms
xchg
es
int
aaa
pop
shl
adc
push
int3
sti
mov
leave
aad
ja
jmp
pop
xor
adc
pop
cltd
cmc
aad
into
jne
sub
cs
mov
inc
mov
sbb
imul
adc
js
jne
outsb
jno
je
popa
fists
jbe
icebp
outsl
pop
into
add
cld
cmp
test
mov
das
fcoml
push
js
lahf
imul
cmp
cmp
inc
xchg
loop
decb
pop
out
idivb
push
jge
push
loopne
movb
mov
aas
popa
andb
xor
movsl
pop
test
add
mov
jae
xchg
lea
mov
jno
jmp
jp
pop
dec
mov
xchg
js
jmp
sahf
dec
in
movsb
inc
xlat
andb
lea
or
xor
cmp
mov
and
cmp
mov
or
mov
xlat
stc
and
and
and
push
and
mov
or
loope
enter
sbb
add
movsb
scas
adc
sbb
pop
shrb
pushf
das
xor
int3
xor
inc
xchg
mov
push
sub
adc
lods
clc
imul
mov
shl
adc
add
movsl
pop
pop
subl
data16
add
adcb
rcl
inc
imul
lods
push
je
mov
push
mov
push
mov
lods
cmpsb
mov
ss
test
and
add
scas
mov
addb
dec
dec
mov
fs
sbb
xor
xor
shlb
xchg
std
mov
rorb
stos
int3
insl
add
fs
out
cld
jecxz
into
lods
dec
lahf
inc
enter
cmpsl
les
jp
jg
lock
and
jge
adc
testl
out
dec
mov
aas
mov
or
sti
test
out
ja
mov
inc
xchg
shll
test
push
and
das
nop
push
cmp
insb
xor
inc
adc
fdivp
sbb
add
dec
inc
hlt
fucomp
outsb
lcall
daa
mov
test
cld
ds
es
adc
and
dec
int3
cmp
add
xchg
gs
add
mov
imul
add
mov
sub
push
push
outsl
sbb
pop
call
ret
mov
in
jbe
or
pop
lahf
loope
test
pop
push
and
and
pop
int3
and
xor
aaa
inc
push
outsb
or
pop
sub
js
cmpsb
xchg
add
cmp
fyl2xp1
mov
cld
jne
pop
pop
fnstsw
cmpsl
xchg
mulb
imul
lods
lret
jmp
cwtl
in
adc
aam
sub
hlt
fcomi
cmp
xor
mov
sti
sub
sbb
js
icebp
adc
sub
in
adc
mov
dec
fstl
mov
pop
popa
dec
shl
add
lods
cmpsl
ret
adc
or
cld
cmp
jecxz
idiv
mov
rcrl
inc
fisttpll
int3
sbb
jmp
std
pop
shll
push
dec
repnz
pop
mov
test
sub
pop
or
pop
lret
push
out
stos
cmpsl
addl
aam
add
in
test
lret
dec
aad
inc
dec
mov
loop
dec
loop
cmc
sub
out
jg
inc
pushf
sbb
xchg
dec
adc
cmp
mov
mov
loopne,pn
jg
push
sbb
mov
sbb
or
sub
jge
sbbl
lea
out
imul
repnz
dec
insl
cli
pop
addr16
jl
jle
ficoml
cwtl
add
pop
loope
mov
or
mov
shl
jle
cmpsl
lods
adc
mov
or
rorl
insb
push
mov
js
aas
insb
stos
repnz
push
out
les
roll
push
loop
fwait
add
xsave
xor
lds
shlb
pop
fcomps
mov
jecxz
pop
fdivrs
fidivrs
in
lods
lds
mov
leave
movlps
mov
mov
xorb
aad
fidivrl
sbb
test
stc
insb
mov
rolb
xchg
subl
add
iret
ret
cmpsb
and
mov
sbb
pop
jecxz
mov
loope
dec
mov
sub
std
fiaddl
lods
push
xchg
xchg
aaa
out
call
insb
out
push
mov
into
loopne
mov
test
into
fisubrl
pop
out
push
cmp
ds
xor
inc
insl
out
xor
push
in
and
pop
xor
xor
dec
sub
sbb
pop
sbb
fisubl
sahf
push
mov
or
pop
loope
repz
fwait
xchg
icebp
cs
pop
loopne
inc
stos
mov
out
pop
loopne
stc
inc
fcompl
mov
outsb
mov
or
repnz
jmp
adc
adc
and
or
and
rcrb
ja
adc
lock
bound
int3
or
jmp
jmp
scas
repz
xchg
push
jo
ljmp
stos
in
jg
push
jge
insb
mov
arpl
xchg
mov
mov
pop
and
ss
push
loop
dec
nop
fnstcw
push
pop
inc
aam
pop
cmp
inc
shll
ret
pop
push
lea
ja
inc
cld
adc
sub
mov
xchg
mov
mov
test
ds
ret
add
xor
mov
out
push
fdivr
jl
jae
stos
lahf
popf
outsl
inc
cmp
xor
hlt
iret
lds
mov
outsl
in
jge
js
jp
or
jl,pn
and
sbb
mov
and
aam
pushf
cmp
mov
fists
jmp
push
dec
in
out
jl
ja
push
mov
mov
icebp
and
lret
ret
cmpsb
sub
hlt
mov
outsl
jnp
or
lock
popa
rcll
sarl
jp
pop
loop
dec
cwtl
pop
je
sbb
xor
sqrtps
ret
leave
mov
mov
in
mov
sub
repnz
jp
push
jl
jne
popf
repnz
fisubrl
and
inc
mov
or
jl
mov
imulb
fcmovb
std
fidivrl
xor
push
out
repz
add
lret
xor
dec
aas
fwait
cli
ret
sarl
repnz
movsb
mov
ja
stos
pushf
sbb
lock
aas
jp
in
add
les
jge
clc
cli
int
or
in
xchg
iret
outsl
mov
fldcw
lret
and
sbb
pop
cmp
aas
call
fadds
xchg
rclb
scas
lcall
outsb
fidivl
cmpsb
sub
lahf
frstor
mov
fdivrs
jno
mov
sub
loopew
and
shl
or
xlat
xorl
hlt
fbstp
xor
and
adc
gs
and
pop
mov
repnz
or
cwtl
inc
xor
into
ja
loopne
int
sbb
pop
shlb
xchg
je
push
lret
or
iret
hlt
out
popf
xchg
fsubr
push
push
andl
mov
gs
pop
pop
pop
mov
jmp
shlb
inc
jecxz
mov
leave
mov
inc
xchg
loopne
test
pop
and
jle
es
dec
xor
pusha
into
cmpsb
imul
fimuls
loope
pop
test
pop
es
ljmp
cmp
roll
mov
call
adc
mov
lods
dec
inc
ljmp
or
in
xor
push
sub
cmp
enter
pop
std
xchg
loopne
adc
repnz
xchg
out
test
popa
cmp
jns
inc
adc
pop
mov
jae
push
bound
lcall
rorl
sub
inc
out
push
mov
popf
jg
adc
xor
cmpsl
loopne
push
push
popf
fsubs
sbb
popf
mov
movb
dec
mov
call
aaa
sbb
mov
cmpsb
push
out
out
sub
in
mov
and
pop
inc
add
ds
jl
pop
dec
js
movsl
test
lods
xor
mov
out
mov
mov
jo
sbb
in
rorb
popf
dec
sbb
out
jp
cmp
push
insb
adc
mov
cmpb
mov
mov
pop
sub
add
and
outsb
dec
imul
sahf
xor
out
mov
shll
add
or
xchg
lock
adc
or
pusha
data16
in
add
cli
out
push
loope
in
jg
mov
sbb
pushf
cwtl
cmp
mov
push
test
sti
or
cwtl
pop
int
mov
fldcw
sbb
xorl
jo
cwtl
adc
jecxz
lds
out
sbb
pop
cmp
pop
pop
jg
cld
mov
lret
pop
pop
jge
push
fucomi
popw
int
pop
add
push
fcmovnbe
test
mov
xchg
movsb
pop
js
addr16
or
xchg
dec
mov
gs
pop
data16
cwtl
add
out
enter
push
ss
sahf
fnstenv
loop
nop
mov
out
lret
mov
scas
in
pop
sahf
push
pop
in
lock
add
push
sub
cld
addb
lds
ja
mov
sub
negl
ret
std
jae
mov
cwtl
mov
inc
cmp
rcr
cs
add
arpl
pusha
cmpb
pop
dec
andb
xchg
mov
jp
mov
daa
stc
mov
xchg
movsl
xor
shrl
pop
push
andl
insl
xchg
insb
lods
jne
ds
sbb
add
mov
inc
add
aaa
lock
mov
dec
es
mov
cwtl
cmp
inc
mov
mov
les
adc
shlb
cmpsl
test
cltd
sub
divb
push
idivb
sub
fwait
out
insb
and
test
lahf
or
insb
pop
pop
scas
rclb
stos
push
test
aad
and
sub
daa
lret
inc
cmp
sbb
adc
push
pushf
loop
insl
lods
xchg
call
xchg
mov
movsl
leave
les
mov
cli
aad
aas
daa
mov
push
outsb
mov
push
pop
out
scas
add
xchg
jno
or
iret
jns
mov
or
sbb
lods
test
adc
jg
inc
lds
popa
mov
sbb
ss
addr16
arpl
mov
sub
fdivr
adc
into
mulb
pop
ds
sub
pop
cmpsl
and
pop
data16
mov
cmp
lahf
aad
clc
leave
cs
call
mov
push
rorl
cltd
sbb
cmpl
jbe
and
fwait
in
add
psrlw
in
cmp
mov
inc
inc
insl
call
test
ss
xor
pop
sub
pop
adc
sti
or
sbb
pop
adc
and
push
or
jle
lock
sbb
inc
and
xchg
cmpsb
jo
icebp
jp
ljmp
xchg
push
pop
das
cltd
sbb
lods
jecxz
jns
xchg
lods
pop
pop
or
negl
jns
mov
popf
shll
cmpsb
mov
rcrb
cmp
fisubs
sbbb
fists
mov
push
pop
das
repz
test
lret
mov
in
cmp
jmp
or
mulb
movl
cwtl
lea
lcall
shll
subb
hlt
rorb
jb
insb
and
imul
arpl
xor
data16
mov
fs
jno
jge,pt
ret
dec
inc
xchg
jmp
mov
lahf
cmpsb
jns
jo
push
dec
mov
std
sub
mov
push
adcl
fdivrl
xchg
xchg
out
test
inc
outsl
lret
ficoms
ss
adc
sbb
pop
ja
nop
inc
stc
icebp
loope
push
sub
mov
int3
pop
mov
jg
jae
rclb
or
imulb
insb
negl
int
pushl
add
loop
jo
mov
sbb
lds
jmp
cmp
xor
dec
xchg
fdiv
mov
sbb
and
repz
repz
movsb
ficompl
lret
test
mulb
push
inc
pusha
out
ret
incl
dec
clc
mov
lahf
sub
and
pop
out
sbb
cmpsb
cmp
push
push
les
emms
test
and
icebp
pop
icebp
adc
lahf
into
aam
dec
fdivrp
cmp
jecxz
daa
aas
jl
sbb
cs
punpcklbw
xchg
sbb
inc
ss
and
mov
jno
mov
outsb
xor
lahf
test
in
lcall
aad
xchg
repz
add
orl
out
fimuls
leave
sub
mov
lahf
xchg
movsb
das
pop
dec
add
fwait
loopne
mov
push
lret
sub
repnz
mov
push
inc
sub
push
mov
mov
movsl
int3
subb
mov
and
ljmp
insl
push
push
rcrb
mov
andl
and
push
push
lock
icebp
pop
cmp
pushf
push
jns
sbb
push
dec
icebp
adc
call
adc
outsl
movsl
xor
ret
out
mov
test
mov
clc
ret
fldcw
push
add
push
push
int
into
sub
pop
mov
mov
daa
pusha
in
mull
movb
xor
push
lcall
inc
iret
xor
pop
ljmp
das
push
insb
hlt
hlt
and
fsts
push
pop
stos
jge
mov
or
cwtl
pushf
mov
cld
mov
ds
dec
and
shrb
dec
mov
lds
add
dec
mov
jecxz
lods
adc
jecxz
mov
mov
pop
fstpt
adc
js
divb
aad
addb
sahf
in
push
stc
or
cmp
in
int3
add
jmp
xchg
arpl
orb
xchg
cmp
popf
jp
xor
dec
jge
adc
mov
insb
sub
fisttps
cmpsb
pop
cmc
in
mov
popf
cld
fistpl
leave
inc
gs
jmp
xchg
mov
and
push
mov
setne
test
jbe
cmpsl
pop
sbb
and
xchg
leave
jp
mov
imul
inc
sahf
cmpb
test
and
fistpll
inc
data16
cmp
leavew
out
adc
mov
stos
gs
lods
add
pop
into
gs
add
daa
xchg
mov
dec
addr16
pop
or
aaa
aad
fsub
mov
and
jns
add
sarb
mov
scas
mov
pusha
lret
xchg
dec
scas
mov
mov
test
cld
dec
ja
push
sub
mov
cli
jmp
icebp
push
out
stos
adc
sub
sbb
inc
inc
in
ss
dec
cmpsl
dec
and
out
add
out
leave
mov
mov
xor
adc
cmpsl
insb
daa
cmp
mov
sbb
mov
lret
pop
js
jns
mov
movsb
add
cmpsl
int3
cmp
test
mov
movsl
mov
mov
lcall
xor
mov
daa
or
jne
or
aas
push
orb
repz
or
adcl
or
sbb
movsl
test
sbb
xor
dec
das
cmpsl
and
inc
xchg
mov
xor
loop
dec
push
pop
pop
insb
xor
cmp
inc
pop
xchg
and
aas
andb
popa
cmp
pushf
pop
iret
cmp
and
push
push
fstl
inc
and
jecxz
mov
and
loop
in
add
pop
xchg
arpl
shll
dec
jge
inc
push
stc
in
pop
ss
movsl
jmp
gs
cmpsl
pop
sti
je
push
in
jo
call
fwait
icebp
dec
fdivrs
mov
fistpl
repz
and
test
mov
fdivrp
lcall
pusha
mov
in
mov
fbld
js
mov
imul
push
ret
fbld
mov
add
mov
pop
sti
jb
lea
popa
jecxz
cmc
nop
jne
xor
or
outsl
inc
popa
cmp
inc
clc
lds
add
out
repz
inc
mov
sub
ljmp
loop
loope
and
rcr
dec
insb
xchg
sub
inc
repz
add
icebp
push
jnp
or
xlat
insl
outsl
cmp
xchg
mov
cmp
mov
sub
int
pop
addr16
adc
es
outsl
clc
push
adc
pop
cmp
jp
ret
loop
movsb
mov
mov
fiaddl
arpl
inc
ja
mov
nop
pop
mov
out
es
adc
adc
mov
rorl
and
push
pusha
cld
inc
pop
add
mov
fnstenv
mov
cmpl
cmpsl
xor
hlt
and
cli
insb
jmp
nop
out
jg
sbb
mov
xor
in
daa
roll
fists
lret
mov
sahf
dec
fidivrl
clc
cmp
hlt
push
outsb
sbb
xor
inc
sahf
jb
mov
lcall
mov
dec
mov
cld
iretw
dec
addr16
jmp
int
movsl
pop
push
and
mov
lock
je
inc
jmp
xchg
push
mov
repz
jne
mov
loopne
popa
pop
fldt
sub
ja
sub
mov
fsts
sbb
je
jne
adc
jl
dec
ljmp
push
mov
lsl
push
sub
lcall
test
push
jp
jno
adc
aad
outsl
xor
scas
inc
cltd
scas
dec
or
jmp
push
addl
leave
inc
outsb
push
pop
and
xor
adc
xor
call
cltd
push
mov
sbb
dec
mov
xchg
into
cmp
add
jnp
pusha
mov
sub
lcall
pop
dec
loopne
out
add
shl
das
rorl
mov
std
ud2
jnp
test
repnz
dec
mov
jp
rcll
cmp
lea
nop
fmul
fs
jecxz
pushf
xchg
jno
mov
jae
cmp
shlb
lea
mov
jge
dec
or
test
sub
jle
movsb
int3
push
leave
sub
movsl
movl
cmp
sub
xchg
xlat
mov
sahf
aad
lcall
dec
dec
add
inc
repnz
hlt
inc
outsb
mov
jle
and
push
mov
jns
jg
imul
fsubrs
lret
sahf
mov
les
js
fwait
dec
outsl
jae
sarl
xchg
push
test
push
shr
push
fdivr
testl
jecxz
repnz
js
outsb
stc
andl
cmpb
cmpsb
adc
movsl
adc
movsb
xchg
adc
sti
testl
nop
add
inc
test
push
sub
nop
sbb
mov
mov
mov
cwtl
push
pop
js
je
mov
mov
aad
fisubs
aam
repz
xor
adc
repnz
out
imul
pop
push
cmp
add
out
mov
sbb
fimull
push
mov
xor
mov
mov
imul
xchg
push
adc
fiaddl
sbb
inc
movsl
addr16
int
testb
jbe
jge
or
cwtl
icebp
daa
sbb
dec
push
es
inc
cmp
cli
mov
int
stos
jo
aad
lcall
icebp
adc
lahf
es
fcomp
outsl
scas
fisttpl
mov
lahf
in
mov
in
xor
outsl
mov
mov
cmpsb
mov
pop
fstpt
mov
loop
cmp
filds
std
lea
pop
inc
aam
ret
sbb
xchg
pop
lea
lods
imul
out
cmp
lcall
stos
pop
rolb
repz
jo
out
imul
sbb
xchg
rcrl
inc
and
xor
mov
lcall
stos
jge
xchg
int3
dec
inc
jns
popf
lcall
std
cmp
pushf
push
daa
dec
push
and
dec
jmp
cmp
mov
icebp
cmp
sti
fs
push
enter
addb
seto
or
out
sarl
xor
sub
jl
bound
clc
and
ret
rorl
dec
add
pop
scas
pop
out
jle
out
xchg
xchg
adc
cmp
pop
xchg
into
cwtl
push
pop
arpl
out
scas
imul
jae
fsubrs
sub
insl
push
xchg
fwait
jnp
push
push
mov
in
mov
xor
push
rorl
xchg
popa
lods
cmp
push
cs
dec
push
push
rcll
fs
sbb
add
jbe
pop
pop
jb
mov
movsl
push
aaa
rol
cmp
cld
and
lahf
push
xchg
pop
out
into
dec
jne
inc
push
into
sbb
ret
mov
xchg
lea
jno
inc
pop
loop
les
icebp
inc
mov
dec
std
or
mov
rorb
pop
repz
inc
mov
push
pop
cltd
mov
rcr
lods
cmp
ret
into
rcrb
mov
xchg
clc
rolb
test
push
test
sub
fisttps
push
xor
aam
into
cmp
jns
stos
xor
sti
jmp
jno
or
in
bound
pop
loopne
aam
lock
mov
ret
sti
pushf
xchg
test
out
cmpb
sub
mov
mov
popf
xchg
xlat
pop
xchg
cld
repnz
pop
and
jae
cs
fwait
pop
pop
xchg
fnstsw
cmpsl
popa
adc
stos
pop
cltd
clc
gs
ret
or
add
mov
outsl
cmpsb
push
add
pop
pop
mov
jb
pop
jle
push
insb
xchg
ljmp
inc
mov
aam
ss
lret
mov
and
jmp
bound
int
ds
adc
cld
mov
jg
hlt
es
adc
test
pop
jge
ds
bound
sbb
adc
aam
pop
sub
jl
fwait
dec
orb
jg
xor
loop
sub
test
divb
fidivl
adc
insb
outsb
fsubs
pop
xchg
xchg
insl
pop
xor
jnp
adc
jno
repnz
sbb
jnp
pop
xchg
scas
loope
pop
das
pop
cmp
mov
sbb
ret
les
mov
dec
jo
push
leave
mov
insb
sti
jmp
jbe
cmc
push
sbb
pop
cltd
sbb
xchg
pop
cmp
lods
call
jb
push
rorl
test
mov
adc
pop
jno
lods
stc
xor
mov
jp
shll
in
jo
mov
xor
inc
pop
adc
std
and
das
pop
pop
nop
xchg
rorl
movsl
pop
test
add
pop
pop
xorb
ret
or
inc
or
push
roll
push
mov
outsb
xchg
in
xor
les
aam
adc
push
lea
add
test
jnp
mov
out
lcall
dec
inc
push
stos
stos
jg
rolb
inc
cmp
scas
mov
mov
cmc
fcmovbe
add
int3
test
or
insb
jmp
enter
inc
aas
dec
and
cmc
xor
mov
test
mov
push
jle
sub
cwtl
xchg
mov
cld
das
adc
xchg
outsl
gs
mov
mov
daa
jno
push
mov
inc
cld
push
xchg
pop
outsl
dec
repnz
loop
pop
xchg
add
fldl
xchg
in
arpl
and
subl
das
push
out
out
adc
insl
aam
out
cld
in
push
stos
adc
test
add
mov
adc
mov
in
xor
lods
movsb
xchg
or
or
icebp
xor
mov
sbb
test
sbb
mov
mov
ror
inc
and
sbb
stos
mov
sub
insl
es
xchg
fsubrl
jno
mov
mov
popl
movsb
mov
das
movsl
loop
push
or
shlb
xchg
xchg
je
xlat
clc
and
shll
into
push
fisttpll
and
daa
int3
push
sub
ja
jg
sbb
mov
fs
mov
fs
in
jne
icebp
cmpsl
repz
push
xor
add
fstps
jno
cs
jns
xchg
cmpsl
push
les
dec
xchg
pop
dec
addr16
sbb
sub
das
sub
mov
aas
jno
adc
inc
mov
js
leave
push
in
adc
test
fsubs
stos
xchg
mov
sbb
ss
fisttps
cmp
inc
test
test
dec
push
mov
jl
pop
rcrb
ret
sub
out
push
mov
in
jp
pop
xlat
or
iret
ja
das
inc
nop
xor
xchg
and
xlat
push
xor
and
mov
mov
adc
xchg
adc
sbb
icebp
push
or
in
pop
in
sbb
addr16
lret
ret
cli
data16
fnstsw
enter
jl
xchg
fdivrl
imul
dec
dec
aaa
loope
insb
mov
dec
push
push
stc
into
push
mov
sahf
repz
imul
push
imul
jne
repz
or
jecxz
and
scas
sub
xor
xchg
xchg
aaa
loope
sub
cmp
sub
repnz
push
fsubrl
scas
lahf
push
lcall
sbb
and
sbb
sbb
cld
in
add
fdivs
adc
mov
sbb
jae
sbb
es
xchg
gs
and
sub
stos
mov
add
arpl
push
mov
fldt
int
fnstenv
adc
movl
cmc
xor
fimull
jns
imul
inc
push
test
movl
out
xor
lahf
inc
enter
xchg
andb
inc
mov
vpshlw
jl
repz
insb
into
insb
lods
pop
xchg
mov
bswap
lods
std
js
shl
pop
out
fnsetpm(287
js
adc
mov
mov
pop
jb
add
push
jg
mov
and
lret
inc
lcall
push
int3
lds
icebp
cmp
adc
rorb
inc
push
or
push
and
aaa
mov
nop
xor
out
enter
test
adc
jle
dec
push
mov
hlt
fwait
inc
iret
push
push
mov
xor
fsubrp
or
sub
jmp
jbe
dec
xor
or
hlt
sub
xor
insl
adc
scas
jge
push
push
adcl
pop
jl
push
mov
push
push
int3
push
lock
xchg
sbb
sbb
pop
or
dec
adc
pop
sti
xor
jno
dec
or
inc
mov
mov
leave
cld
cmp
shlb
stos
imul
pop
push
out
out
shl
xor
out
call
pop
les
das
cmp
inc
ret
xor
mov
aas
loopne
jge
addr16
fldl2t
cmp
in
cs
daa
lahf
and
sbb
cltd
test
mov
mov
lret
push
loope
ljmp
sbb
adc
inc
aas
xor
and
adc
xchg
call
and
cmpsl
sbb
popa
pop
lahf
inc
shll
ret
andb
dec
js
jnp
pop
xchg
jmp
ss
repz
inc
clc
fdivrl
jmp
cmp
add
mov
xor
andl
or
xchg
sub
loop
xchg
push
mov
lods
dec
cld
cmp
and
mov
test
stos
movsb
dec
insb
mov
xchg
dec
or
lods
fmuls
pop
dec
dec
out
xor
sbb
jae
les
pop
mov
lds
mov
testb
cmp
jae
stos
ja
test
idivl
jmp
inc
dec
or
push
and
in
mov
movsl
xchg
xchg
xchg
divb
ljmp
cmp
adc
scas
sbb
push
jnp
xchg
mov
sub
sbb
pop
call
jno
mov
dec
mov
stos
xor
mov
pushf
sub
in
pushf
fpatan
sub
adc
inc
or
dec
and
movsb
iret
mov
jo
sub
das
lahf
jns
add
pop
stos
push
mov
sahf
dec
jns
jmp
pcmpeqw
jne
push
add
je
clc
dec
mov
xchg
add
or
xchg
push
inc
or
pop
enter
xchg
pop
fs
clc
cmp
sub
scas
int
fiaddl
xchg
push
addb
mov
jne
into
pop
loopne
int
jge
mov
push
mov
mov
push
adc
mov
push
test
and
push
je
aad
div
cmpsb
pop
in
addl
and
mov
into
fwait
jne
jb
lcall
repnz
aaa
sub
ret
dec
jge
cltd
sbb
cs
jbe
sub
aas
jmp
cmpsb
out
inc
fsubrl
icebp
push
in
xchg
push
cwtl
cmpsb
or
jecxz
mov
push
sti
jge
clc
sbb
jno
outsb
inc
in
movsl
dec
or
lds
dec
dec
push
ds
xor
movsl
sub
ret
adc
xchg
mov
inc
lods
mov
iret
gs
insl
or
rcr
movsb
aas
inc
sti
les
mov
dec
sti
jecxz
adc
adc
fmuls
sbb
int3
repz
enter
test
imul
cmp
cmp
mov
adc
rolb
lret
jbe
mov
mov
xchg
mov
and
sub
sti
mov
inc
imul
sub
cmp
xchg
adc
inc
scas
xor
std
push
mov
int
jb
subb
mov
and
insb
mov
xor
xor
cmpsl
xchg
mov
out
inc
mov
pop
jo
in
rcrl
adc
cs
jnp
sub
cmp
add
arpl
jnp
or
dec
add
pop
push
lahf
and
jl
adc
xchg
sub
inc
cs
lea
mov
mov
leave
imul
fwait
cmc
and
shl
or
sub
push
jo
scas
mov
aam
xchg
sbb
inc
pusha
pop
cmp
mov
test
lret
int3
imul
dec
cmp
bound
lods
mov
inc
jl
int
add
stos
push
inc
sbb
lods
mov
insl
pop
cwtl
fisttps
dec
sub
push
out
sti
insw
xor
mov
les
mov
aad
jae
popa
or
lods
add
andb
dec
jno
jecxz
xor
xchg
fs
inc
insl
cmp
lret
scas
push
add
arpl
sbb
ror
jne
and
add
fistpl
push
dec
call
fwait
or
pop
adc
movsl
sbb
push
test
cs
add
rcrb
xor
adc
xchg
push
mov
inc
mov
cltd
jecxz
in
xlat
call
xchg
stos
dec
fsts
adc
idivb
sbb
fstps
dec
repz
shlb
arpl
sbb
mov
hlt
ljmp
iret
adc
sub
lret
fildl
icebp
cld
outsb
fdivrl
mov
and
or
pop
xchg
mov
idivl
loopne
pop
inc
xlat
in
mov
lret
incl
xor
pushf
jecxz
push
daa
call
test
xor
mov
cltd
fcomip
out
adc
das
sbb
xor
out
push
dec
imul
xlat
in
push
and
insb
cwtl
lds
push
int
mov
stos
pop
push
ret
lea
add
mov
xchg
sub
mov
fisttpl
bound
lahf
out
stos
xchg
es
mov
or
jl
push
mov
js
testb
fisttpl
ret
cwtl
lret
mov
mov
ja
cmpsb
sbb
add
ja
jmp
pushl
sub
push
ret
and
in
pop
xlat
inc
ret
loope
xchg
jnp
out
jg
leave
rclb
inc
mov
imul
scas
jmp
fistpl
stc
es
pushf
add
mov
idivb
jbe
fsubrs
nop
mov
mov
test
jl,pn
jnp
sbb
pop
addl
pop
ds
or
loop
ret
fistl
scas
ja
push
insb
in
xchg
xchg
scas
out
cmp
js
iret
movsb
out
fdivl
mov
xchg
imul
cmpsb
cs
gs
dec
imul
mov
fbstp
or
fsubl
out
rol
push
aam
jmp
cmp
push
imul
loopne
lock
jl
pop
loope
lret
push
adc
shr
sub
lret
cmp
in
jno
aas
out
jnp
mov
xor
xor
and
outsb
cmc
in
imul
out
std
sarb
das
jno
cltd
sar
fwait
add
scas
aaa
arpl
mov
cltd
mov
add
and
insb
or
mov
je
fistps
int3
and
lds
cwtl
mov
shrl
cvtdq2ps
inc
or
sub
mov
ljmp
dec
pop
mov
mov
dec
mov
cmpsl
xor
rolb
cmp
push
dec
lock
shrl
mov
mov
les
movsb
or
adc
xlat
cmc
inc
jl
add
arpl
notb
push
or
out
mov
fistl
stc
out
sbb
mov
pop
fisubrs
xchg
push
xchg
push
adc
pop
dec
add
xchg
fsubrs
cmp
mov
or
cltd
xchg
daa
mov
sbb
mov
lock
fsub
mov
aaa
aaa
enter
cld
xor
icebp
fs
rclb
cmp
mov
and
push
inc
push
jmp
fcom
jno
sbb
pusha
rcrl
in
fldt
ss
rcrl
pop
sbbl
rorl
sbb
in
lds
add
xlat
aad
mov
pop
and
add
popa
nop
inc
or
and
jge
jl
icebp
pop
push
imul
and
andl
or
adc
leave
pusha
cmp
mov
data16
pop
icebp
pop
jne
insb
xchg
sbb
movsl
pop
sub
js
fimull
clc
mov
sub
fisttps
lret
cmp
ficoms
pop
movsb
int
fucomi
shlb
sub
adc
imul
lret
push
data16
insb
mov
loope
xchg
stc
and
scas
inc
stos
scas
cmc
js
aad
enter
daa
adc
test
test
cmc
out
mov
nop
or
xchg
xchg
sti
test
shll
xchg
cmpsl
cs
jb
out
leave
mov
iret
dec
sahf
push
sbb
cmp
lcall
insl
lods
and
mov
xchg
mov
shlb
pop
bound
jo
dec
iret
stc
mov
jnp
xor
xor
in
rcrb
daa
jge
icebp
rcll
sbb
xor
lods
popl
sbb
pop
stc
push
lods
adc
add
add
mov
adcb
stos
xchg
ret
add
xchg
push
iret
sub
lods
inc
mov
push
jb
mov
enter
push
les
push
sahf
arpl
sti
push
jmp
sahf
ja
mov
aaa
add
push
rcl
loop
fdivl
subb
add
mov
push
sti
dec
dec
cmp
cmp
shrb
xorps
gs
iret
movsb
stos
rclb
dec
enter
or
pop
xchg
mov
out
mov
leave
icebp
sbb
pop
mov
das
add
mov
sub
movsl
outsl
mov
mov
hlt
aaa
les
nop
lcall
sbb
xchg
adc
pop
sar
ret
xchg
mov
test
insb
clc
jle
xor
repnz
xor
pusha
movsl
push
nop
out
dec
xchg
rcrb
jle
lods
scas
cwtl
ljmp
push
shlb
lret
dec
sbb
out
pop
push
andl
roll
in
xchg
mov
imul
sbb
mov
push
fwait
int3
push
dec
repnz
cld
sbb
popf
push
pop
stos
test
xlat
inc
jno
dec
mov
xor
mov
xchg
mov
pop
mov
imul
fsub
sbb
lock
cmpb
and
push
cmc
lcall
idivb
inc
scas
adc
push
jnp
leave
or
ljmp
aaa
outsl
and
fwait
mov
clc
pop
mov
test
fisubl
ja
mov
inc
push
inc
mov
adc
cmpsl
bound
mov
repz
in
cli
gs
sbb
push
pop
std
std
lret
xor
fidivs
mov
xor
jns
into
dec
jg
jno
imul
test
and
ja
sub
outsb
inc
push
mov
xchg
add
iret
aaa
insl
xchg
in
lods
mov
iret
data16
in
jg
mov
mov
sub
adc
cmp
or
pop
sbb
mov
jmp
aaa
push
in
ret
xchg
mov
mov
imul
xchg
rolb
div
dec
xchg
cmc
dec
js
incl
test
sarb
lock
cmpsb
lcall
stos
fists
or
sbb
push
jecxz
dec
leave
ss
fsubrl
test
js
lock
subb
jb
in
in
popf
xor
into
aas
xor
add
cwtl
rorb
insl
fadd
in
sbb
or
mov
pop
xchg
push
imul
jbe
sbb
and
jbe
mov
insl
mov
and
xchg
mov
jne
xchg
xchg
into
mov
loop
mov
mov
pop
or
data16
and
imul
cli
mov
inc
cmpsl
je
mov
jnp
push
xor
aad
into
shlb
lcall
pop
inc
adc
jns
cwtl
dec
push
aad
pop
pop
div
xchg
jle
divl
inc
xchg
xchg
cmpsl
in
pop
lahf
add
insl
mov
xor
sti
lock
aad
xchg
xchg
dec
adc
fdivrs
dec
fidivs
stos
pop
test
sbb
xlat
sahf
loopne
mov
xor
ret
xchg
mov
jb
sbbb
leave
xchg
scas
mov
mov
dec
cld
stc
or
lret
push
in
xchg
ljmp
jbe
ja
mov
fcompl
xor
cmp
cmpsb
dec
cltd
arpl
sarb
or
subl
sti
xor
in
int3
std
inc
sub
and
push
or
test
subl
push
xchg
xor
andb
stc
mov
or
sub
iret
adc
notl
rol
clc
rorb
mov
cmp
sub
lods
xchg
dec
ficoml
and
out
cs
mov
xlat
out
pop
stc
cmp
sub
pusha
dec
jecxz
loope
mov
push
lret
sahf
and
mov
lea
cli
cmpsb
test
pop
addr16
std
loop
das
pop
movsl
outsl
pop
sarb
xor
mov
stos
sbb
jp
fnstenv
imul
sub
mov
sub
sub
pop
dec
mov
idivl
aad
mov
shlb
notb
jnp
inc
mov
add
sbb
mov
adc
into
bound
sub
nop
push
mov
pop
lcall
cwtl
shll
xor
pop
jg
add
inc
ficomps
dec
jge
xchg
fsts
dec
loop
dec
aam
push
and
mov
push
push
add
pop
outsb
mov
ss
sbb
repz
test
fldcw
jmp
cmpsb
sbb
fidivl
pop
sbb
inc
les
push
push
jno
cmp
mov
sub
xchg
fisubrl
inc
add
lea
inc
test
mov
pop
ds
popf
lds
iret
cs
mov
xor
add
push
add
ss
mov
imul
loop
push
jge
loop
mov
fsubrl
fistl
mov
fsincos
out
mov
mov
in
in
push
adc
push
sub
in
out
xchg
shll
mov
sar
xor
cltd
mov
orb
jmp
or
out
inc
lds
stos
iret
rclb
mov
adc
pop
sbb
add
sahf
pushf
je
scas
imul
or
push
hlt
loope
and
xor
xlat
sahf
sub
dec
repnz
imul
pop
inc
jno
xchg
mov
loope
sti
jne
push
inc
jns
stc
add
ret
cmp
xorb
pop
insl
testl
xchg
scas
xor
rorl
fiadds
adc
mov
pop
into
or
sahf
cmpsl
in
in
pop
xchg
dec
jmp
mov
icebp
sahf
fucomp
mov
pop
push
stos
lret
in
cmpsl
mov
or
outsl
sbb
mov
jae
push
mov
pop
cmpsl
not
adc
stos
add
push
lret
adc
xchg
jae
and
cmpsb
push
ret
cmp
lahf
jne
stos
sbb
push
pop
out
push
jno
mov
pop
inc
mov
mov
fisubl
jge
xor
push
mov
dec
lea
in
cwtl
insb
daa
clc
mov
jnp
add
cld
xchg
mov
add
mov
into
test
add
jnp
mov
mov
add
mov
dec
cmp
push
mov
push
js
loope
adc
mov
and
sbb
shlb
sbb
dec
pop
mov
div
out
gs
mov
xchg
add
ret
pusha
test
repz
and
mov
mov
hlt
add
dec
pop
push
cmp
xchg
dec
mov
mov
mov
cmp
fcmovne
aad
or
in
mov
push
pop
enter
push
adc
sub
add
adc
sbbl
subb
dec
lahf
mov
movsl
pop
fstpt
and
ret
in
push
or
xchg
mov
inc
shll
pop
ljmp
or
mov
and
pop
imul
add
pop
mov
push
test
imul
and
shll
or
aaa
push
mov
mov
or
test
or
xor
inc
mov
mov
push
jle
call
cmp
pushf
aaa
ss
insl
push
mov
push
sub
and
lahf
aad
add
repz
fdivrs
stos
add
or
jmp
pop
cmp
in
je
jmp
decl
and
stc
xor
icebp
popa
leave
pop
dec
add
cmp
adc
xchg
outsb
or
adc
inc
stos
sbb
or
xchg
push
lea
std
push
dec
rcll
dec
pop
in
cmpsl
dec
movsb
loopne
lret
outsb
addr16
xor
jno
iret
into
push
out
adc
sbb
gs
jbe
repz
lcall
ss
lret
mov
rol
out
hlt
insl
lahf
add
adc
roll
andl
add
shll
orb
fucomi
clc
aam
int3
arpl
std
stos
popf
adc
xchg
push
cltd
stos
movsl
xchg
and
inc
out
cld
arpl
rclb
xchg
push
and
adc
inc
sub
dec
in
rol
in
lods
mov
iret
mov
mov
or
or
pop
stos
fwait
xor
pop
push
in
cmc
push
xchg
xchg
lods
or
repnz
popa
push
mov
inc
mov
lock
dec
lret
sbb
aad
add
and
sar
sbbl
insb
sub
cwtl
sbb
mov
inc
push
ret
pop
jb
pop
fs
jns
lret
mov
xor
ficoms
push
out
jb
or
pop
ljmp
pop
clc
adc
add
jmp
ds
daa
cltd
mov
mov
pop
mov
pavgb
dec
push
mov
rcrl
imul
jns
jg
xchg
fcoms
lods
fildl
ficomps
xchg
outsl
xchg
jmp
mov
push
dec
bound
push
adc
jmp
mov
sbb
cwtl
and
movsl
inc
popf
shlb
ja
push
shl
pop
or
fildll
sbb
cmp
mov
pop
dec
xor
cmp
jns
xchg
inc
jae
push
jbe
sbb
rcrb
out
ret
dec
div
cmp
push
insl
and
pop
addl
imul
push
or
and
jg
xchg
mov
mov
sahf
adc
ret
xchg
mov
dec
test
push
adc
cmp
sarl
scas
fldt
inc
xchg
ja,pt
shlb
test
and
cwtl
fcmovnbe
inc
xchg
stc
push
xorl
repnz
dec
dec
test
js
int
pop
mov
pop
adc
test
xchg
lret
insl
jae
outsl
jl
test
add
idiv
test
pop
in
push
outsb
cs
jo
push
push
dec
sub
cmc
inc
mov
add
cli
pushl
dec
sahf
loope
adc
sbb
jo
inc
cs
rcrb
movsl
rol
push
jmp
xor
int
ds
cmp
add
mov
test
or
mov
andl
jb
sub
xor
inc
sub
cld
cmova
rcl
cmp
cmp
dec
je
aad
dec
mov
xchg
decl
xchg
and
lahf
aas
add
or
inc
inc
and
imul
jle
mov
popl
dec
rcr
mov
and
imull
or
stos
sbb
shrb
lret
nop
test
mov
lods
or
test
or
sub
inc
aam
xor
aas
pcmpeqw
insb
scas
pop
ja
adc
dec
stos
rorb
lea
adc
add
pushf
arpl
jle
xor
rcl
push
int
push
sub
lods
cmpsb
xor
mov
mov
jg
push
fs
loope
popa
jmp
inc
frstor
adc
push
iret
movsb
mov
test
les
mov
jl
cs
jg
addb
outsl
xchg
and
and
sbbl
arpl
mov
repz
pop
mov
jmp
cltd
cmp
mov
or
hlt
out
mov
add
xchg
pushf
lcall
outsb
std
jle
rorl
ret
stos
cmp
sbb
adc
jl
leave
mov
dec
pop
sbb
xor
cmc
test
fisubs
jne
enter
stos
popa
fiadds
jl
cs
inc
test
lock
mov
cs
jns
adc
les
mov
mov
cmpsb
pusha
scas
fcmovnb
mov
mov
and
add
push
dec
pusha
add
or
scas
push
mov
loope
adc
jbe
mov
es
fsts
cs
out
nop
and
sub
inc
push
iret
ret
std
mov
je
pop
mov
js
lcall
dec
pop
jg
sbbl
daa
mov
xchg
xor
sub
insl
pop
jbe
js
pushf
and
sbb
addl
dec
jno
xor
outsb
out
cmp
sar
sarl
daa
add
iret
adc
adc
mov
mov
add
in
jb
adc
push
mov
jmp
test
call
repz
loope
or
clc
lds
movsl
mov
cmp
mov
add
aas
mov
fistl
sbb
je
push
or
fdivrl
rcll
and
insl
xor
repnz
mov
cmp
adc
in
cmp
cli
xchg
fwait
in
aas
repnz
flds
ficomps
sub
sub
mov
push
adc
and
imul
mov
cwtl
push
js
stc
imul
add
inc
sub
imul
sub
lret
pop
in
mov
mov
or
jae
sbb
test
and
xor
mov
shll
rcll
mov
ja
mov
lea
or
ds
and
push
adc
mov
mov
inc
fisttpll
mov
cmp
insl
cwtl
pusha
sarb
xchg
push
stc
sbb
fistpl
mov
xorl
jno
push
lret
mov
rcrl
nop
lods
or
mov
push
pop
out
jecxz
mov
xor
test
lods
fsubl
sub
mov
mov
xchg
cmp
leave
cmp
jmp
mov
or
pop
jecxz
sub
jle
cld
outsl
testl
ljmp
add
ds
scas
mov
adc
mov
mov
pop
mov
or
push
jbe
mov
cmpl
jbe
sbb
push
xor
in
mov
mov
lcall
loopne
mov
inc
stc
repnz
cmp
mov
jns
xor
stos
stc
sbb
cmc
push
sub
pop
cld
pop
mov
and
jbe
test
pop
add
fucomi
mov
lock
mov
xchg
filds
push
and
dec
testb
add
cs
xor
jne
push
and
sbb
pop
lea
adc
xchg
imul
cld
test
jne
test
testb
jns
lret
sub
adc
movsl
inc
jp
xchg
dec
repnz
sub
rcll
jbe
cli
rcrb
bound
push
add
fcomi
mov
add
fiadds
es
sub
and
mov
sbb
lock
jns
loop
inc
stc
ja
incl
or
ficompl
and
mov
or
mov
adc
cmc
rcll
loope
jge
arpl
cwtl
mov
add
ror
mov
inc
dec
cmp
push
jmp
ss
cmpsb
mov
cmp
cld
sbb
fiadds
nop
push
jo
fs
pusha
aam
inc
xor
inc
stos
cmp
mov
cmp
add
aaa
jle
adc
and
ljmp
lods
ljmp
lods
cs
data16
fucomp
sub
xchg
stos
test
push
xor
sti
and
sbbb
dec
mov
and
outsl
xchg
fsubs
xchg
rolb
jge
sbb
push
mov
int3
loope
mov
fbstp
add
add
loopne
sbb
das
dec
push
in
iret
dec
pop
push
mov
xchg
cmp
adcl
int
and
and
and
dec
jle
cmp
pop
fwait
in
lret
adc
addb
adc
dec
iret
cmp
inc
int
or
out
inc
in
nop
popa
xchg
rclb
lret
lds
lahf
push
bound
out
push
sub
cld
xchg
pop
xchg
aaa
pusha
mov
ja
jnp
xchg
cmp
out
in
fistpll
sbb
in
mov
jp
sub
jae
or
pop
clc
pop
hlt
bound
inc
fcomip
jl
jns
cmp
fwait
xor
xor
xchg
ret
std
call
stos
ficomps
imul
testb
fs
push
popf
and
jnp
shl
outsb
stos
lcall
and
mov
xlat
pop
mov
pop
iret
push
jmp
xchg
jae
movsb
fs
mov
adc
imul
loope
mov
jl
cli
bound
xor
sbb
cmp
or
push
and
aad
std
insb
mov
and
insb
gs
jmp
fiaddl
repz
add
and
fcmovnu
dec
js
pop
add
jo
push
xor
ja
dec
add
sub
xor
sbb
dec
dec
inc
xchg
test
mov
lahf
add
jo
and
jae
add
popf
pop
stos
stc
adc
addb
nop
mov
or
mov
outsl
and
aas
inc
in
push
fadds
or
insl
insl
push
adc
adc
and
add
push
xor
sbb
and
pusha
fnstcw
cmpsl
push
cmpsb
push
lods
pop
add
push
mov
hlt
mov
repz
cmpsb
repnz
inc
pop
movsl
xchg
das
mov
mov
xor
dec
dec
jge
inc
fmul
xchg
adc
lods
adc
mov
cmp
push
sub
sub
loopne
and
inc
fs
cmp
mov
fs
inc
mov
sub
push
mov
fwait
xlat
jecxz
lea
jl
scas
int3
arpl
jne
fs
jle
jns
mov
sub
js
fcmovnu
xchg
adc
cmp
popa
inc
push
sbb
dec
mov
inc
pop
pop
sbb
add
in
xlat
push
pop
mov
add
lahf
or
pop
js
lea
or
and
and
lret
leave
loopne
cmpsl
jl
out
pop
xchg
cmp
lret
push
sbb
rcll
shlb
adc
test
push
mov
sub
xor
jmp
inc
pop
dec
inc
xor
jg
dec
or
cmpsb
jns
xchg
daa
fadd
jae
aaa
mov
out
test
pop
and
inc
mov
std
faddl
out
push
stos
sub
and
in
test
and
push
ffreep
ljmp
aam
aad
pusha
jne
mov
mov
cmp
pop
sbb
pusha
out
out
dec
movsl
push
je
lea
xor
aad
jle
ljmp
dec
jns
dec
jg
mov
cmp
push
loopne
dec
push
pushf
jl
pop
mov
fs
into
shl
cmp
mov
push
add
add
sarb
mov
mov
data16
popf
pop
out
jnp
inc
cmp
call
jb
jl
ficomps
aam
lds
add
stc
push
sbb
test
rorb
fstp
je
imul
lock
jns
in
decb
test
enter
insl
lcall
mov
xor
pop
pop
fs
loopne
mov
and
loope
decb
jb
jns
mov
stc
sub
fld
dec
ss
testl
cwtl
iret
js
bound
add
push
add
loopne
dec
pop
test
cmp
cs
push
sti
cmp
frstor
xor
cltd
jmp
imul
or
iret
lds
int
test
push
call
push
mov
or
fnsetpm(287
and
repz
push
adc
jno
das
jae
adc
out
loope
dec
add
dec
pop
leave
mov
sub
test
jns
mov
mov
xchg
sub
mov
mov
jmp
add
sahf
fldenv
test
out
inc
std
repz
ret
add
orl
mov
sub
pop
out
xlat
sbb
pop
leave
mov
mov
mov
lahf
push
out
dec
adc
sbb
lret
jl
testb
cmp
push
mov
les
cmp
adc
xchg
les
jg
sub
dec
mov
leave
or
ljmp
jae
lahf
mov
sbb
bound
cmp
loop
cmpsb
mov
roll
mov
fistpll
and
rcr
jae
xor
mov
shrl
mov
sbb
xchg
repnz
xorb
push
or
fmull
mov
adc
je
outsl
addr16
fnstcw
pusha
shrl
scas
or
hlt
jne
mov
scas
and
mov
xor
ss
mov
and
sbb
ss
push
sbb
imul
add
mov
pop
aas
and
sti
into
inc
xor
xor
fwait
dec
mov
xchg
lea
rep
add
mov
movsb
in
push
adc
clc
dec
js
xor
in
shrl
sub
test
xchg
dec
mov
in
outsb
sub
sbb
and
and
aad
into
fs
scas
xor
jl
pop
and
subb
pop
ret
mov
jmp
outsb
inc
pop
jg
mov
jae
push
xor
xor
fistpl
cmp
stc
popa
cmp
int
fcoms
sti
lock
lea
nop
pop
add
in
bound
out
push
adc
pop
imul
xor
adcl
roll
pop
jns
aad
jmp
pop
shr
loop
pop
aam
je
mov
push
sbb
cwtl
push
xchg
pop
push
mov
add
push
pop
in
enter
nop
push
repz
pushf
sbb
scas
mov
or
ljmp
lds
outsl
mov
shll
int3
fcmovne
or
movsl
mov
outsb
cld
je
inc
sbb
cltd
xchg
mov
mov
mov
das
or
cmpsb
jns
das
sahf
mov
fisttps
enter
push
movswl
mov
cmp
sbb
xor
push
cmp
lret
ja
inc
or
lock
outsl
sbb
fisttpll
popf
addr16
in
aam
cmc
cmc
stc
inc
or
sti
outsb
add
inc
inc
outsb
fs
imul
jle
or
bound
mov
cli
hlt
xlat
ficompl
arpl
outsb
inc
sub
jp
leave
imul
jae
or
iret
pop
push
rorl
xor
clc
xchg
cs
lods
outsb
imul
pusha
xor
dec
outsl
inc
xor
jno
movsb
in
mov
cmpsl
or
stos
xchg
or
sbb
pop
xor
in
test
sbb
ret
sahf
mov
into
rcrl
lret
cwtl
out
sbb
repnz
push
mov
in
hlt
adc
dec
inc
cwtl
aam
mov
mov
lods
sbb
dec
mov
sub
dec
clc
ret
sbb
pop
cmp
loopne
test
repnz
add
test
test
xchg
into
cmpb
adc
jno
sub
mov
orb
or
out
inc
test
faddl
sub
sbb
sbb
in
jo
mov
outsl
insb
out
popf
inc
add
out
fbld
popf
leave
push
loope
in
aas
in
das
je
sub
add
add
pop
push
xor
stos
fldl
pop
mov
out
aad
dec
mov
ds
sahf
ret
dec
inc
lds
pop
out
fwait
xchg
test
cmp
adc
in
test
in
and
xor
bound
hlt
ljmp
dec
pop
pop
mov
popf
jmp
push
xchg
sahf
push
adc
add
mov
mov
mov
inc
sarl
std
andb
push
loope
rcll
fimull
leave
sub
arpl
mov
mov
lea
idivl
inc
xor
sub
pop
ljmp
sahf
push
fadds
loope
jl
and
push
xlat
pop
test
add
cwtl
mov
inc
sbb
mov
inc
dec
jmp
sub
sub
call
ja
push
inc
dec
lods
hlt
ficoms
inc
into
insl
or
inc
sti
push
adc
jmp
dec
dec
sbb
cmp
cmp
cmp
call
shlb
inc
ss
movsl
dec
jp
in
cmp
mov
movsl
and
jge
test
sub
or
xchg
adc
mov
insl
and
sbb
xor
sub
stc
or
push
das
dec
test
inc
pop
imul
fwait
dec
jne
pop
and
cmp
inc
adc
int3
sub
popf
aas
push
fcompl
test
and
and
ds
push
sub
inc
repz
mov
mov
jae
dec
shrl
jnp
pop
sub
pop
pop
stos
push
push
insb
add
lods
or
ret
cmp
or
jb
outsl
sub
out
out
pop
rcrb
das
dec
adc
sti
insb
mov
into
incb
jg
scas
push
sahf
cld
fcoml
lods
mov
xor
repnz
pop
pop
xor
xchg
int3
testl
mov
mov
push
inc
sbb
jmp
pop
lcall
popa
outsb
mov
popf
lahf
cwtl
xor
ficoms
test
mov
dec
loopne
pop
inc
enter
push
data16
scas
sub
test
cmp
dec
cltd
in
jno
adc
jne
mov
cmc
lahf
sub
jecxz
mov
aad
jle
dec
and
and
mov
bound
popf
xchg
cmp
or
movsl
int
out
iret
in
mov
sub
xchg
or
adcl
fisubrl
pop
push
sub
lods
inc
dec
shl
push
fldt
pop
les
add
and
das
push
or
int3
fistpl
sub
sti
fsubp
loope
jae
in
dec
pop
mov
arpl
push
mov
ret
adc
mov
jmp
int3
push
push
rcrb
pop
fwait
pop
cmp
data16
test
inc
add
cmp
dec
pushl
jge
pusha
aas
cltd
push
hlt
jg
daa
cwtl
shll
stos
add
test
xchg
add
in
xchg
pop
dec
mov
pop
leave
cmc
sbb
nop
scas
inc
jge
and
mov
dec
xor
fcom
jae
xor
ja
push
repnz
xor
push
scas
jne
pop
push
jb
or
lahf
shll
cmp
roll
fstl
jnp
and
fstpt
js
dec
inc
and
mov
sahf
or
arpl
jmp
in
sub
jg
repz
mov
test
addr16
insb
xor
pop
add
adc
nop
xor
lcall
loopne
cmpb
or
iret
movsl
cmp
sbb
scas
sbbb
sbb
out
xchg
dec
lds
adc
inc
adc
cli
rorl
loope
cmpsb
cmp
rorb
cwtl
stos
add
sbb
hlt
add
dec
inc
jnp
popf
mov
test
cmc
jl
dec
xor
push
dec
xorl
js
sub
mov
call
mov
xor
dec
out
inc
or
dec
icebp
sti
inc
xchg
imul
dec
pop
push
imulb
test
loopne
nop
loopne
bound
push
sub
push
fisubrl
and
in
lcall
shlb
sub
ljmp
add
stos
xor
int3
mov
or
and
jbe
scas
scas
mov
add
mov
in
rorb
add
aas
jle
push
xchg
lea
fdivp
xor
xchg
lds
repnz
mov
fs
jns
dec
lds
cmpsl
lret
sub
out
fdivrl
ret
xor
sahf
push
xorl
sub
sahf
xchg
and
rcll
fdivrl
xor
adc
adc
mov
das
and
adc
and
push
scas
xor
cmp
jge
jp
movsb
add
les
pop
mov
lods
iret
cmp
pop
pop
fs
jecxz
insb
call
mov
xchg
cmp
mov
cwtl
jg
mov
divw
sbb
std
jmp
push
mov
call
ja
mov
xor
sub
fisttpll
sbb
sub
sub
icebp
adc
and
pop
push
xchg
mov
cmp
inc
ja
lret
std
loop
adc
mov
mov
push
sahf
pop
and
jbe
arpl
inc
add
add
sbb
icebp
rclb
inc
or
inc
es
aam
pusha
jle
jle
movsl
and
insl
loop
test
push
or
addr16
push
jge
leave
fnstsw
es
je
inc
ja
adc
stos
ficoml
jno
sbb
and
in
sub
fs
aam
mov
mov
mov
and
les
and
sub
push
shrb
push
xor
shl
nop
data16
ret
sahf
push
adc
scas
pop
push
or
outsb
push
and
inc
add
jle
iret
ficoml
dec
cmc
aas
fmuls
dec
mov
icebp
arpl
cmpsb
push
sub
test
jnp
aas
sub
sbb
in
inc
cmpsl
hlt
out
jo
push
call
repnz
sbbl
clc
sti
std
adc
push
cmp
cmpsb
jne
aad
rclb
sahf
or
int3
inc
xchg
mov
out
mov
outsl
or
dec
jecxz
divb
adc
cmc
rclb
and
or
sub
and
xchg
jno
rcr
inc
lods
sub
and
jbe
mov
push
dec
das
addr16
test
mov
add
mov
lret
pop
pcmpeqb
push
jae
aam
inc
jnp
fs
arpl
adc
pop
jbe
pop
mov
add
dec
add
shll
mov
push
mov
lcall
cmc
idivb
or
xlat
call
inc
rcll
aaa
xchg
sbb
insb
je
pop
lea
adc
sub
in
add
test
cs
aaa
lcall
xchg
add
cmpsb
sti
mov
xchg
arpl
pushf
mov
js
push
jnp
lods
xor
pop
dec
mov
sub
and
push
lea
add
lods
icebp
and
inc
xchg
push
cmp
mov
call
jg
jne
pop
mov
jmp
xchg
push
push
in
cmp
push
xchg
sbb
mov
mov
fwait
sub
sub
mov
sub
jecxz
pop
pop
int3
push
pop
xchg
hlt
shll
faddl
push
inc
out
call
and
mov
test
ffree
pop
add
push
dec
push
jp
sbb
jb
scas
xchg
inc
jne
jb
jge
sbbb
int3
int3
aam
xor
pop
mov
mov
call
adc
loope
pusha
pushl
xchg
incb
sub
repz
lret
sbb
call
xchg
mov
dec
sub
decl
push
jbe
ljmp
cmp
mov
rcr
shlb
mov
es
and
pop
xor
mov
add
jmp
lds
or
pop
push
adc
in
rorb
cwtl
push
pop
mov
mov
sub
or
xor
fs
int
push
stos
push
mov
jecxz
pushf
mov
xlat
xchg
push
rep
pop
lds
in
cwtl
fsub
mov
es
inc
jg
fsubs
enter
dec
loope
aas
cwtl
aaa
cmp
sarl
lcall
and
test
mov
push
aas
jne
ds
or
fisttpll
pop
dec
shl
dec
aas
sti
in
ds
dec
scas
out
sahf
adc
and
mov
hlt
xor
sub
out
pusha
or
scas
pop
imul
pop
shlb
jae
cmc
decl
das
test
cltd
ss
mov
mov
lea
sub
mov
lret
add
xchg
or
sub
pop
dec
xor
fimull
inc
fnstsw
xor
xor
dec
xchg
mov
sbb
cmc
testl
scas
inc
pop
xchg
jge
sbb
fwait
sub
jb
xor
mov
mov
pop
cld
lret
push
lods
fwait
mov
fsts
imul
pop
fwait
adc
lods
subl
mov
lahf
dec
ret
mov
hlt
push
sub
inc
or
outsb
movsb
test
hlt
mov
xchg
mov
dec
mov
jecxz
add
test
push
push
jno
xor
insb
iret
daa
in
or
fistl
mov
or
push
jno
js
lock
aaa
insl
xor
outsl
and
test
mov
ficompl
arpl
test
mov
clc
mov
add
ret
mov
idivb
mov
push
mov
add
imul
outsb
rcrl
lods
mov
mov
test
repz
sbb
xor
add
out
dec
out
xchg
sub
lea
sbb
pop
stos
jecxz
mov
lretw
je
repz
jne
dec
loop
lock
std
in
movsb
adc
cltd
push
arpl
inc
icebp
ss
adc
ds
inc
mov
shll
out
jb,pt
aas
lds
out
cmpsl
or
cld
pop
fstl
out
or
popa
outsl
das
fistl
cmp
and
movsl
icebp
aam
int
int
sbb
or
cmp
out
stos
push
mov
lds
jnp
out
pop
std
pop
fsubl
fisubl
je
mov
bound
adc
mov
push
cmpb
cmc
or
inc
out
mov
xchg
shll
ss
mov
push
dec
add
fadds
and
fwait
es
out
jne
mov
test
sahf
aas
add
xor
mov
lods
or
xor
nop
outsb
push
ret
rorl
js
push
out
imul
loope
sbb
outsl
fistpl
out
ret
jp
out
sbb
pop
pop
test
cmp
stos
sbb
mov
mov
aad
shl
pop
xchg
xor
pop
aaa
xor
shll
loopne
xchg
pop
sub
popf
jb
and
insl
cmp
fnsave
inc
insb
or
push
out
add
mov
pop
mov
outsb
sub
movsl
inc
int3
xchg
in
mov
mov
lds
pop
mov
jne
push
pop
mov
cwtl
sub
mov
push
push
test
jbe
sahf
push
sahf
cltd
adc
xchg
cld
movsl
sub
pop
test
stc
adc
loope
cs
adc
mov
cs
cmc
hlt
dec
leave
sub
shll
mov
mov
and
bound
inc
cli
cmp
mov
int3
pop
mov
sbb
or
fldz
stos
and
sbb
mov
pop
test
add
pop
dec
and
cmp
xor
insl
mov
or
lea
stos
mov
stc
mov
push
and
lcall
movsb
mov
cmp
add
std
enter
inc
or
sub
sti
pop
xor
imul
jns
leave
in
test
dec
jecxz
pushf
shlb
mov
fsubp
xchg
sub
fwait
cmc
add
shrb
mov
mov
adc
aas
iret
in
repz
or
mov
or
sbb
cmp
inc
push
adc
push
ss
mov
aaa
jo
or
mov
in
cmp
insl
scas
in
gs
mov
fwait
pop
cmp
adc
pop
cmpsb
cld
xchg
adc
dec
xchg
add
test
mov
inc
data16
jmp
xchg
das
xlat
mov
test
lret
mov
add
leave
inc
pop
push
aad
sub
inc
mov
loopne
dec
mov
je
lods
cmc
sub
les
adc
inc
adc
cmp
inc
add
dec
loope
fld
mov
pop
xor
dec
andb
cmp
xchg
mov
in
mov
jge
addr16
adc
fimull
int
and
dec
pop
hlt
mov
add
aas
dec
jecxz
lret
mov
xor
mov
sub
mov
cltd
sub
inc
popa
nop
cltd
mov
mov
out
in
insl
sub
jg
je
pop
outsb
lcall
pop
lea
xchg
sti
and
je
jp
inc
add
es
repnz
fs
hlt
xchg
gs
cmpb
decl
test
hlt
mov
mov
int
mov
adc
jnp
inc
aas
dec
xchg
or
jne
jecxz
jnp
push
out
stc
scas
mov
cmc
push
mov
and
ljmp
sub
jle
add
sbb
pop
or
adcl
shll
shll
jg
inc
adc
push
mov
stc
push
test
add
inc
fldl
sbb
pop
es
add
cmpsl
xchg
sarb
fldcw
mov
popf
mulb
pop
call
fucom
in
lds
lcall
jbe
add
mov
mov
in
pop
flds
lods
mov
mov
cmp
jbe
mov
xchg
out
inc
xchg
push
mov
cs
dec
cmpsl
jnp
cmp
jb
jb
push
rcrb
mov
mov
ret
mov
add
cli
ja
std
inc
cmp
mov
xchg
adc
aam
mov
xrelease
ret
and
aam
xor
cltd
addr16
insl
cmpsb
jno
insb
pushf
add
test
mov
xlat
shl
bswap
jg
and
xchg
inc
outsb
cld
adc
mov
sbb
jnp
out
jp
outsl
gs
and
punpcklwd
popf
pop
inc
mov
mov
cli
out
mov
iret
jge
cmpsl
aaa
hlt
ficoml
xor
push
jb
imul
lds
inc
xor
push
cmp
std
std
inc
mov
lret
xchg
sbb
clc
loopne
mov
add
repnz
enter
mov
fnstenv
pop
aam
or
mov
jg
xchg
inc
fucomi
jno
xchg
out
fcoms
ljmp
dec
inc
mov
outsl
ret
push
and
std
negb
push
xchg
in
sbb
movsl
sbb
xor
lods
insb
rclb
mov
mov
push
pop
mov
inc
inc
test
and
cli
pushf
mov
fwait
in
pop
push
jl
sub
mov
xchg
fs
movsb
mov
xchg
dec
add
out
das
pop
fsubr
mov
ja
dec
mov
test
in
sub
push
movsb
mov
or
repz
sub
sbb
lret
sti
dec
add
leave
push
mov
pop
jns
ret
push
and
outsb
stc
jecxz
pop
aad
cmp
cmc
repz
pop
mov
mov
in
cmp
sbb
mov
mov
mov
inc
nop
movsl
aam
rcrl
inc
test
mov
lret
iret
dec
xchg
insl
outsl
out
addr16
xchg
cmpsl
mov
test
sub
shll
jg
dec
or
and
mov
cwtl
xchg
push
pop
jmp
inc
xlat
adc
enter
into
repnz
sbb
repnz
lods
iret
in
pop
test
adc
lea
dec
aaa
xor
jp
imul
imul
inc
ss
movsb
mov
aad
sbb
jecxz
cld
pop
popf
sti
push
jecxz
pushl
or
filds
adc
pop
icebp
cmp
in
xor
jg
lahf
dec
pop
jne
xchg
dec
popf
adc
mov
or
pop
pop
or
or
pshufw
cli
push
imul
sub
cmp
dec
add
mov
add
jp
xor
sub
or
inc
fmuls
bound
out
jo
fdivrp
std
je
mov
shlb
aas
push
enter
movhlps
inc
mov
fiaddl
stos
movsb
inc
mov
aas
loope
iret
shr
outsb
or
pusha
adc
inc
push
inc
fs
cmp
push
lods
movsl
and
jne
in
test
push
decl
scas
lods
in
cli
mov
outsl
stos
push
test
jmp
fwait
push
pop
popa
out
sbb
and
fmull
adc
jns
sbb
mov
dec
adc
lods
fildll
lret
leave
aaa
push
jp
idiv
stc
push
stos
cli
add
jns
jno
adc
mov
mov
sbb
push
insb
loopne
sbb
rcrl
movb
xchg
outsb
cbtw
mov
jp
push
ja
andb
ljmp
or
push
sbb
loopne
sbb
mov
leave
addr16
push
dec
sbb
inc
hlt
fisubrl
jl
and
shrl
mov
mov
aas
loop
pusha
add
in
xchg
mov
jno
push
push
notrack
nop
pushf
sbbl
shrb
pop
and
cmpb
int3
daa
dec
push
lods
mov
lret
dec
pushf
nop
xor
jecxz
push
or
xchg
std
add
sbb
ds
int3
pop
je
add
arpl
push
adc
inc
inc
lods
popa
shlb
push
mov
push
and
js
insl
test
in
out
imul
out
enter
enter
adc
mov
sub
ljmp
dec
add
jbe
sbb
xchg
mov
fldenv
jo
aas
pop
fidivrs
out
shl
stos
add
ret
pop
push
jmp
mov
test
pop
sbb
adc
bnd
dec
ja
pop
pop
jo
cmpsb
sub
std
dec
xchg
int
out
js
push
jle
ljmp
imul
out
call
sub
lods
sub
push
in
and
jno
mov
pushf
mov
movsl
and
and
fidivs
inc
or
arpl
pop
test
test
pusha
jmp
loopne
dec
lds
lods
jbe
hlt
adc
addb
loop
mov
ret
inc
mov
mov
shrl
ja
fwait
in
cmc
pushf
or
negl
fidivl
test
arpl
pushf
cmpsb
imul
repnz
lock
icebp
xor
lret
sbb
orl
lcall
out
mov
dec
incb
and
sub
pop
fstps
sub
lcall
ds
notl
push
cwtl
in
cmp
mov
test
cmp
mov
add
nop
lock
dec
xchg
sbb
mov
cmp
lret
scas
unpcklps
inc
mov
fsts
mov
es
outsl
fwait
or
outsb
jle
popf
mov
xor
mov
cmp
inc
adc
ret
dec
mov
xchg
popa
loope
popa
ja
lahf
clc
outsb
fiadds
pop
adc
stc
push
xchg
loope
imul
push
leave
ret
xor
adc
xor
or
jo
add
dec
addr16
pop
mov
int3
mov
mov
ja
cli
test
push
xchg
je
testl
loope
shlb
daa
loopne
shrl
pop
test
scas
dec
xor
pop
xchg
dec
add
adc
je
cwtl
fidivl
mov
mov
clc
loope
psubw
push
fiaddl
test
movsl
cmpsl
jbe
imul
push
call
data16
mov
lods
stc
nop
mov
push
nop
add
jp
out
xor
xchg
rcrb
xchg
scas
jecxz
cmp
xor
sarl
mov
sub
mov
idivl
dec
inc
lcall
pop
imul
std
pop
sub
ret
jne
cld
lods
mov
aam
arpl
ljmp
lods
iret
add
out
mov
push
ret
jp
sarb
push
mov
pop
loope
insb
es
add
dec
popa
std
add
das
mov
mov
daa
mov
dec
mov
add
aam
test
and
mov
leave
clc
int3
loopne
mov
ss
pop
push
andb
xchg
xchg
adcl
add
cmpsl
fisubl
xor
bound
lahf
sbb
pushf
xchg
pushl
vcompressps
fstpt
gs
sbb
or
sarl
arpl
jecxz
movhlps
icebp
push
jo
push
addb
xor
adc
cltd
or
cmp
inc
arpl
sbbl
adcb
push
idivl
xor
jmp
jge
in
sub
xor
sbb
add
sti
cmp
out
pop
insl
in
fcom
adc
int3
mov
and
popf
fiaddl
jbe
pop
jecxz
in
jle
and
test
loopne
es
xor
mov
testl
jae
popl
and
inc
or
test
test
jle
xchg
mov
dec
add
sti
dec
cmc
push
mov
mov
fcompl
xchg
ds
ss
xor
lcall
lahf
or
or
filds
mov
dec
jg
and
enter
lock
and
outsl
cld
sahf
cmp
cmp
mov
xchg
leave
add
sub
gs
adc
mov
fbld
push
sbb
cmp
adc
das
xchg
jl
lret
in
jno
sub
mov
add
jp
xchg
dec
lods
sbb
dec
mov
inc
push
xor
inc
imul
mov
sarl
jns
mov
jecxz
addr16
test
stos
je
mov
and
ljmp
mov
xchg
mov
pop
pop
into
clc
insl
mov
dec
insl
push
call
push
pop
icebp
jge
dec
std
orb
rcll
inc
xlat
inc
inc
or
jg
and
or
test
test
push
cld
cwtl
xor
or
ss
iret
mov
dec
pop
popf
push
push
mov
imul
filds
lret
in
movsl
mov
add
clc
stos
mov
adc
mov
jb
ja
mov
out
or
test
lret
arpl
idivl
mov
hlt
mov
movsb
icebp
daa
mov
xchg
insl
or
test
cmp
shl
add
push
lcall
push
fdivp
adc
fmull
fwait
cmp
or
andb
pop
jnp
jle
cmp
dec
punpcklbw
ret
cmp
out
mov
int3
cmp
push
repz
push
jno
sbb
lds
inc
xor
cmp
adc
cmpsb
out
inc
outsl
sbb
adc
inc
lea
and
mov
loopne
aas
jge
inc
jns
push
push
push
cmpsl
sub
insb
mov
aam
mov
test
testb
mov
cli
mov
inc
mov
mov
jecxz
dec
scas
lret
mov
lea
push
add
add
add
push
movsb
test
or
in
fcoml
push
insl
mov
aas
sbb
adc
stc
cmp
add
sbb
int
mov
aam
mov
xchg
sub
xor
xor
mov
pusha
or
movsl
mov
jb
cmpsb
push
aas
pop
push
pop
sbb
mov
cltd
push
mov
pop
and
add
and
int3
call
je
push
enter
mov
or
sub
daa
jo
push
and
mov
adc
pushf
adc
test
jnp
xchg
jns
jne
push
aas
mov
das
inc
addl
pop
push
mov
out
xlat
imul
push
stos
adc
loope
cli
ret
xorb
pop
jp
cmpsl
leave
fmuls
push
adc
lcall
fcmovb
sub
xor
mov
ret
xor
in
es
les
mov
mov
pop
mov
mov
or
pop
mov
das
ljmp
sbb
pop
or
daa
push
fsincos
in
fwait
sti
shl
popf
cmpsl
outsl
xchg
aas
lcall
adc
pop
mov
inc
fsubs
jmp
add
lock
loop
std
xor
or
mov
mov
or
lock
ljmp
mov
lcall
inc
sbb
std
jmp
mov
int
leave
imul
push
mov
add
test
fldl
dec
outsl
frndint
or
test
rcrb
push
call
xor
xchg
xchg
xor
in
test
rcr
adc
lods
and
and
arpl
and
dec
addr16
xor
ljmp
inc
mov
push
jns
jns
add
xor
and
ror
and
xor
sbb
mov
stos
sahf
out
lahf
leavew
gs
and
pop
lods
lock
pop
je
cmp
sbb
cwtl
add
sub
or
icebp
shlb
movsb
mov
rcrl
test
test
scas
sbb
sti
push
js
inc
out
and
andb
add
push
xor
or
mov
ljmp
mov
sub
stos
test
cmp
jne
push
fwait
push
pusha
mov
xor
sbb
pop
inc
or
leave
ljmp
push
mov
cmpsl
mov
fmuls
ficoml
jo
int
pop
and
stc
jg
bnd
xchg
xchg
addb
xchg
stos
inc
rcrl
insl
jns
imul
imul
divl
insl
add
mov
sbb
jecxz
xchg
daa
jle
movsb
je
push
mov
fcomps
jge,pn
mov
or
loopne
mov
dec
sub
sbb
dec
sarb
xchg
sar
fsub
lret
xor
repnz
rcll
js
ret
fisttps
sahf
lret
les
ja
jg
outsl
xchg
loope
push
inc
sbb
mov
hlt
aas
loope
enter
xchg
lret
scas
sbb
inc
xchg
xchg
sub
and
ret
xorb
pop
mov
lods
adc
cmp
aad
add
cltd
jo
jmp
inc
mov
mov
aas
lcall
pop
mov
push
lods
aaa
jl
sbb
aaa
nopl
or
inc
push
ljmp
jg
into
pushf
lods
sbb
ljmp
and
sbbl
dec
push
andl
xor
push
ret
pop
cli
mov
rcrb
scas
or
rclb
mov
add
jb
lock
fwait
and
push
add
mov
mov
mov
push
ja
dec
aad
std
inc
in
jp
imul
lods
cli
aam
sbb
mov
mov
or
dec
pop
sbb
fnstsw
xchg
jo,pt
add
xor
xchg
cmp
dec
inc
sub
push
icebp
lahf
pop
sarl
mov
aas
jp
push
mov
lods
ret
addl
aad
jo
mov
adc
popf
fdivs
adc
add
dec
jmp
jae
xchg
test
test
flds
cmpsb
rolb
jge
mov
sub
aam
jo
xor
aam
adc
test
leave
orl
xor
stos
fstps
out
sbb
repz
outsb
cmp
ljmp
cld
cltd
inc
and
inc
mov
and
aas
cmp
push
sub
jne
js
pop
sti
xchg
inc
push
cmp
push
rorl
ret
fsub
sbb
inc
jne
sbb
scas
flds
in
xor
sbb
jno
fsubrl
call
xor
ror
int3
clc
popa
adc
arpl
dec
mov
or
das
es
in
pop
shl
adc
and
xor
jg
or
cltd
sub
jbe
adc
push
add
jmp
daa
sub
pop
xor
inc
push
lret
fs
fdivr
scas
scas
jge
test
jle
lock
add
fsubr
push
mov
sub
mov
dec
add
sub
cmp
sub
or
std
pushf
pop
and
jns
nop
sub
popa
dec
imul
sub
mov
jbe
scas
dec
cmp
xchg
jl
push
jbe
push
fadds
popf
jg
or
enter
jecxz
cmp
ljmp
jp
mov
int3
sub
adc
jmp
xor
or
in
aas
inc
xor
jae
jb
cmpsl
xor
pusha
daa
mov
or
lea
inc
test
loop
mov
cmp
sbb
loop
lret
cmpsb
pop
flds
sbb
mov
pushf
nop
mov
mov
in
push
fcmove
fs
inc
sbb
int
xor
mov
mov
mov
sub
inc
ret
add
popa
xor
or
or
inc
push
jg
inc
jl
ss
lret
pusha
pop
or
push
mov
jb
fwait
push
push
orl
push
pop
mov
and
adc
jne
adc
lret
ds
mov
cmp
imul
mov
xchg
sub
jle
gs
cmp
push
bound
and
inc
mov
push
jmp
xchg
inc
ret
inc
mov
pushf
mov
rcll
sbb
jl
cs
pushf
scas
cltd
repnz
gs
cwtl
push
into
pop
pusha
mov
loope
insb
imul
lock
mov
int3
mov
inc
mov
fcmovnbe
and
sbb
iret
fimull
loopne
inc
inc
push
push
xchg
xchg
sub
pop
pop
xlat
leave
sbb
insb
dec
loopne
outsb
fdivr
mov
call
xchg
mov
lret
sbb
dec
pop
pop
scas
out
add
negl
and
sbb
out
lret
mov
in
ret
xor
pop
mov
sbb
cmc
popf
scas
mov
lock
cmpsb
jo
pop
jecxz
cmp
push
out
jmp
push
cmp
addr16
adc
insb
loopne
push
test
ror
adc
mov
fstps
popa
xor
sti
cmp
dec
inc
ljmp
sarb
pop
inc
movsb
les
frstor
cmpsb
mov
push
fwait
das
repnz
js
pusha
int
sub
xchg
mov
dec
inc
add
nop
scas
sbb
aaa
mov
lods
mov
xchg
xchg
cs
fstp
xchg
or
lahf
mov
mov
and
out
push
adc
lcall
imulb
decb
inc
movl
add
pop
js
js
aaa
cwtl
sbb
cmpsb
sahf
jp
mov
or
movsb
fsts
inc
push
pop
les
push
add
mov
imul
jl
aam
lret
or
into
lret
lcall
stc
test
sbb
or
or
imul
push
xchg
subb
cmpsb
frstor
jb
arpl
xchg
mov
iret
jbe
movsb
popa
gs
out
es
push
lahf
xchg
les
jle
arpl
je
xchg
adc
jo
lds
mov
sahf
adc
shrl
pushf
xchg
fiadds
pop
in
mov
inc
jg
adc
mov
mov
stc
outsl
decl
lea
mov
mov
shl
arpl
fmuls
inc
jne
inc
xor
or
mov
inc
push
mov
mov
out
inc
sub
jnp
das
mov
or
add
add
out
add
push
cmpsb
add
leave
mov
sub
mov
lcall
loope
mov
jb
mov
xchg
jae
xchg
adc
inc
clc
cmpsl
mov
jecxz
dec
cli
sub
test
test
pop
pop
mov
push
into
clc
lret
rcll
add
mov
jbe
andb
add
sub
jmp
mov
pop
cmp
jg
loopne
or
and
dec
mov
jns
sub
inc
je
jnp
mov
test
jno
gs
inc
ja
adc
out
out
ror
sub
icebp
mov
sahf
push
insb
jo
sbb
loope
add
in
dec
push
in
mov
pushl
inc
cmpsl
jae
sub
cltd
sbb
dec
push
and
pushf
and
sahf
inc
xchg
or
scas
cmpsl
pop
cld
push
add
pop
adc
dec
out
mov
and
pop
push
cmp
out
ss
xor
pusha
mov
xchg
loope
jp
ror
cmp
pop
xor
mov
loop
gs
out
lret
test
aam
out
clc
mov
push
mulb
pop
dec
punpckhwd
xor
int3
pop
outsb
add
into
lods
in
lret
mov
xchg
das
test
gs
test
pop
sahf
sbb
inc
test
loop
push
dec
xorb
and
jg
mov
out
dec
out
adc
repnz
cld
add
push
add
js
adc
push
inc
cmpsl
jo
arpl
jg
add
idivl
lcall
mov
xor
out
jmp
mov
inc
mov
inc
aad
mov
insb
sbb
imul
jmp
decb
cmp
aad
jns
pop
test
lea
fnstsw
jecxz
jecxz
push
xor
xlat
mov
dec
inc
lea
insl
loop
movsb
sub
scas
dec
push
in
cmpsl
xchg
dec
lds
leave
jmp
pop
adc
push
dec
inc
shlb
xchg
jmp
lods
icebp
sub
xor
out
ss
or
and
and
adc
leave
fisubs
das
int
dec
mov
dec
add
bound
scas
inc
mov
imul
daa
or
pop
test
mov
test
or
imul
ljmp
in
gs
dec
and
in
std
pop
ret
push
dec
cmpsl
decl
lock
idivb
and
mov
jp
gs
nop
mov
mov
mov
pusha
xor
sbb
scas
ds
shlb
inc
loopne
dec
jne
ja
mov
cmp
sbb
jmp
jnp
sbb
adc
cmpsl
and
or
sarl
add
pop
out
cmp
mov
shlb
inc
and
jnp
fiadds
orl
mov
mov
jns
adc
adc
pushf
shlb
aas
mov
mov
aas
pop
lret
not
pop
xor
lds
hlt
add
mov
ret
xchg
pop
jno
fisubl
out
sub
fldcw
push
xlat
sahf
lret
and
pop
pop
sbb
outsl
mov
bound
xchg
test
filds
pop
mov
cmp
aas
js
xchg
dec
inc
add
jne
push
cltd
arpl
inc
xor
jne
mov
outsb
sahf
xor
push
push
mov
xrelease
dec
ds
stc
cmpsb
lret
mov
dec
gs
sub
mov
mov
pushf
je
push
cmp
inc
jmp
dec
nop
shl
jg
loop
repz
ret
push
dec
test
mov
stos
or
popf
and
dec
push
imul
dec
data16
sti
push
push
aaa
or
mov
pcmpeqb
fucomi
dec
pop
jno
scas
sbb
sbb
lret
test
stc
sbb
inc
lods
aam
cmp
outsb
sbb
mov
dec
jmp
je
add
xchg
lcall
mov
mov
cmp
sahf
stos
test
push
mov
mov
aad
imul
movsl
shr
pop
lds
mov
movsb
test
lds
fisttpl
cmp
adc
clc
lret
pop
jo
sahf
dec
lahf
aas
or
insb
sub
std
clc
scas
mov
xchg
jne
sbb
xchg
and
sarl
jnp
pushf
sub
sbb
mov
push
mov
popa
or
push
enter
add
sbb
cmp
xor
stc
jo
add
jo
jecxz
daa
dec
pop
popa
hlt
out
pop
test
mov
std
mov
add
and
popf
or
jo
jnp
out
std
sub
cmp
or
stos
in
movntq
push
ret
movsl
xor
es
push
and
gs
mov
ljmp
lods
add
mov
lret
cmp
inc
push
push
in
cmpl
icebp
sub
push
jbe
jnp
ss
sbb
rcl
notl
inc
cmovbe
mov
mov
stos
dec
and
xchg
mov
scas
clc
ljmp
add
popa
shll
hlt
stc
mov
mov
mov
xchg
cld
inc
add
sbb
cmp
test
pusha
call
testl
mov
jl
adc
lret
or
inc
or
daa
arpl
pop
xchg
je
jmp
fsubrs
dec
xchg
gs
sub
loop
pop
int
inc
int3
sbb
push
lahf
in
loopne
and
jb
mov
pop
into
and
mov
std
arpl
adc
dec
inc
mov
push
sahf
lahf
cs
xor
aam
into
and
jb
and
mov
sbb
jl
cs
xchg
pop
out
dec
cmc
rcrl
dec
mov
sbb
xchg
dec
mov
xchg
and
addr16
xor
daa
sub
mov
xlat
xchg
jle
stos
sbb
pusha
je
xchg
sbb
ljmp
fidivrl
ret
arpl
cmpsb
fwait
sbb
inc
ss
inc
or
xchg
jno
repnz
xchg
cwtl
add
int
test
ret
stos
js
out
mov
testb
add
sub
mov
cmp
clc
out
shlb
mov
in
fwait
push
cmpsb
jae
cmpl
test
jno
gs
or
adc
outsl
push
pop
test
in
clc
push
xlat
adc
shlb
mov
cwtl
mov
cli
jp
bound
push
or
pop
xor
imul
js
mov
mov
jecxz
popf
in
sub
pop
ljmp
push
push
xchg
sbb
jbe
cli
jmp
sbb
xchg
sub
pop
icebp
mov
cmpsl
arpl
pop
dec
add
jno
push
testl
xchg
nop
sarb
push
cmc
xchg
xlat
jmp
loope
insl
add
pop
add
loop
xor
push
mov
cmova
lods
int3
int
sahf
insl
cltd
in
jecxz
add
aam
push
jl
xchg
mov
lods
inc
push
adc
add
mov
icebp
pusha
adc
imul
mov
pop
iret
or
sub
push
pushf
in
pop
ss
jg
int
jbe
add
lret
call
xchg
stc
or
adc
and
nop
int3
ljmp
rcl
ret
rclb
ja
shlb
test
ret
push
out
sbb
fs
insb
das
fwait
mov
cmc
movsl
xor
jnp
testb
or
push
cmp
pop
jecxz
mov
fs
int3
or
mov
or
ja
into
iret
cmp
push
shl
inc
dec
or
adc
add
lahf
inc
cmpsb
rclb
cmc
inc
sub
lea
aas
mov
leave
lcall
ds
cmp
fbstp
push
dec
mov
mov
pop
mov
push
jns
icebp
inc
inc
repz
movsl
movsl
loop
addl
xor
sub
arpl
loopne
fimuls
adc
jle
pop
in
test
vhaddpd
jg
add
jmp
bound
lret
cs
push
xor
add
xor
adc
cltd
aas
js
mov
add
ja
xchg
outsb
dec
icebp
dec
dec
imul
jnp
xor
mov
pop
rorl
popf
or
mov
and
mov
test
sub
xor
adc
xlat
push
xlat
mov
cmp
lods
aaa
lret
cmpb
mov
adc
stc
ljmp
or
movsb
movsl
and
sbb
mov
lods
stos
mov
aam
lods
hlt
out
xchg
fisttps
adc
xchg
mov
mov
lods
mov
mov
cmp
iret
mov
and
sub
aas
adcb
movsl
jle
xor
push
mov
loopne
mov
adc
ret
lahf
scas
inc
xchg
sub
out
leave
stos
cmpb
mov
push
mov
loopne
mov
in
out
sbb
repnz
in
and
add
mov
dec
adc
xchg
push
jmp
mov
push
lds
lods
gs
jnp
les
push
mov
imul
cmp
mov
arpl
cli
popa
mov
stos
shlb
jle
mov
sahf
add
roll
imul
movsl
pop
rol
pop
cmp
cmp
ss
push
insl
cmp
insl
in
mov
sub
in
nopl
inc
into
repnz
test
inc
xchg
sub
dec
sbb
aas
jno
jns
les
fwait
test
sub
test
dec
shlb
mov
lret
push
jmp
into
movsb
sbb
push
arpl
cwtl
inc
cmpsl
sahf
out
push
sub
cld
push
bound
dec
push
mov
stc
int
or
std
xor
inc
jno
dec
fwait
aas
xor
test
mov
movsb
repz
divb
fcoms
adc
sbb
and
pusha
test
jo
sbbl
dec
sbb
fisubs
or
push
mov
test
pop
mov
or
inc
lods
mov
cmp
daa
das
sub
mov
push
xchg
sub
dec
pop
movsb
pop
push
gs
stos
aam
mov
fildl
sbb
arpl
in
loope
test
mov
push
aas
jecxz
mov
sbb
dec
int
push
mov
pusha
cld
outsb
ret
ds
xchg
loop
pop
repz
insl
jle
in
xor
ss
xor
push
or
push
in
adc
mov
push
mov
mov
mov
mov
sbb
inc
jle
ret
repnz
lcall
icebp
add
add
and
dec
fucom
push
inc
scas
sahf
adc
shl
and
sbb
or
cmpsl
pop
sbb
js
push
mov
and
pusha
lock
adc
jecxz
mov
add
scas
xchg
sti
inc
adc
aas
mov
mov
sub
subb
es
inc
pop
cmp
icebp
sbb
jge
jbe
mov
repz
pop
xor
mov
data16
divb
mov
adc
cmp
maxps
mov
je
addr16
mov
add
xor
in
clc
test
sbb
psubusb
xchg
jmp
in
pop
adc
dec
adc
xor
jnp
jno
mov
shll
test
jns
mov
rcpps
sarb
jno
xchg
lods
push
movsb
inc
les
or
popf
shll
add
jb
sti
push
mov
adc
sti
sub
ss
add
mov
mov
pop
icebp
or
cwtl
std
mov
xchg
sub
int
or
xor
and
lods
clc
out
loop
sbb
into
inc
push
cmp
push
push
enter
jbe
ja
aas
push
mov
jno
inc
es
js
sbb
dec
cmp
xchg
insb
xchg
mov
mov
sub
or
sbb
inc
in
movsl
inc
cld
ljmp
lcall
loopne
sahf
cli
adc
insb
push
js
mov
je
fwait
push
dec
xchg
sbb
fstps
enter
cs
cwtl
outsb
xchg
ljmp
rcl
test
mov
adc
xchg
adc
arpl
shl
cli
out
sub
jno
mov
adc
dec
fnstsw
sbb
nop
loopne
cmp
imul
scas
xchg
ss
push
add
sahf
mov
xchg
lds
jg
pop
outsb
movsb
in
xchg
pushf
sbb
adc
jle
add
shl
mov
jecxz
out
fisttpll
in
mov
imul
cmc
cld
mov
call
and
or
jmp
cmp
addl
xor
test
mov
lods
and
fidivs
sbb
fwait
jae
xor
lods
das
inc
xchg
sub
fistpll
iret
xor
sub
sub
popa
add
cmp
je
in
xlat
pop
cmpsl
add
jp
mov
das
mov
sbb
jg
and
or
aas
push
sub
mov
mul
iret
shlb
mov
nop
add
add
mov
ss
mov
fcoml
jmp
daa
push
fs
dec
sahf
repnz
mov
fmul
subb
int3
push
jle
outsb
aas
movsl
out
push
inc
xor
bound
xchg
std
imul
jno
mov
or
jmp
mov
sbb
sbb
add
lods
push
mov
ret
mov
push
jecxz
pop
mov
es
mov
cld
js
lods
gs
sbb
testl
gs
enter
popf
xchg
adc
and
pop
or
push
sbb
jno
stos
test
dec
icebp
dec
cmp
and
arpl
mov
lock
jl
test
call
and
popa
shll
add
les
repz
pop
rol
adc
js
inc
add
xchg
leave
iret
fisubrs
lods
cmc
shrl
adc
arpl
xchg
jne
mov
fistps
cmp
jmp
jae
fwait
gs
push
jns
or
popf
sti
or
mov
cltd
lret
push
ficoms
mov
in
cmp
xor
fst
push
mov
cmp
fidivrs
adc
sahf
dec
hlt
xor
lods
cltd
and
add
into
stos
or
cmpsb
push
out
fisubl
iret
jl
add
lcall
popa
sub
add
aad
fbstp
mov
adc
lods
fsub
sbb
movsl
mov
aas
aam
lods
dec
mov
jmp
push
iret
in
outsb
and
lods
hlt
jle
cmp
xor
jbe
push
lods
inc
test
in
enter
fs
aam
and
adc
add
cmp
dec
xlat
lcall
mov
shl
rep
or
scas
xor
cmpsl
bound
in
dec
addr16
je
add
not
int
inc
push
xchg
xchg
lock
mov
fisttps
cmp
mov
lods
dec
sbb
pop
xchg
mov
out
inc
das
cmpsb
add
xor
xchg
mov
add
iret
jmp
scas
mov
mov
jg
pop
mov
and
sub
les
imul
and
scas
jne
es
sarb
rcrl
or
aaa
cwtl
xor
or
mov
dec
insl
xchg
mov
xchg
inc
xchg
cwtl
and
shrl
pop
fsts
sub
pop
adc
dec
cmp
jae
orb
por
mov
mov
repnz
sti
xchg
movsb
lds
jecxz
insb
lods
jp
xchg
mov
xor
loopne
incb
mov
inc
push
xor
adc
dec
mov
in
cmp
jmp
mov
ja
rorb
adc
vpaddb
jge
scas
sbb
or
repnz
xchg
xor
sbb
test
pop
or
or
testb
cli
add
fiaddl
test
imul
xor
js
movsl
mov
cmpsl
mov
hlt
sbb
inc
orl
je
sub
dec
mov
ret
adc
inc
lcall
cwtl
test
adc
lahf
sub
inc
test
sub
mov
mov
movl
nopl
addr16
sbb
out
jecxz
jle
add
into
adc
aas
insb
outsb
mov
sub
pop
aad
and
mov
xor
cmpsb
adc
xchg
negb
dec
or
xchg
dec
pop
sbb
lods
cli
jo
lret
jno
int
lahf
int
aad
or
jno
cmp
loope
int3
mov
popa
mov
jns
or
cli
dec
jmp
sbb
mov
dec
lods
int3
int
mov
or
or
mov
push
lds
aas
shl
mov
inc
mov
inc
test
icebp
cmpsb
movsl
add
add
addl
push
div
add
xor
jnp
rorl
scas
call
and
ja
push
sub
test
sti
adc
clc
push
mov
hlt
mov
test
add
cmp
testb
lret
jbe
mov
mov
jg
mov
mov
xor
lret
or
dec
mov
adc
or
xchg
inc
in
fcomip
test
xor
out
movsb
leave
dec
sbb
xor
jno
sbb
sbb
push
popl
mov
jo
dec
test
lods
xor
out
loopne
out
adc
or
xchg
sbb
xchg
insl
bnd
sbb
fdivl
mov
mov
push
call
pop
inc
xchg
jne
mov
leave
mov
xor
xor
daa
adc
cmp
mov
lahf
dec
push
push
xorl
dec
sub
pop
loop
mov
push
push
pop
dec
jge
xor
loop
rcrb
mov
dec
sbb
leave
lods
ret
xchg
in
sbb
sub
xchg
lock
push
lcall
sub
mov
dec
enter
cmp
sub
inc
push
mov
push
mov
iret
repnz
add
mov
int3
movsb
ds
mov
insl
adc
es
std
ret
push
pop
int
mov
add
cmp
insb
sar
das
push
incb
leave
iret
and
mov
jne
js
je
xor
jecxz
rolb
cmp
cmp
nop
cltd
int3
sarb
jp
icebp
mov
test
push
call
sub
dec
loope
scas
adc
xor
mov
push
sbb
das
dec
enter
fsubs
push
xor
pop
lea
mov
add
adc
mov
adc
push
out
sbb
xchg
dec
or
inc
cmpsl
js
jne
or
cwtl
add
jg
add
inc
bound
outsb
icebp
loope
push
jb
dec
std
aas
rclb
ds
mov
push
icebp
leave
cs
mov
vmsave
adc
cld
cwtl
sti
movd
mov
or
lret
stc
push
mov
outsl
cmp
pop
dec
insb
push
dec
movsb
leave
ss
mov
inc
mov
and
test
adc
je
outsl
movsl
imull
jb
mov
cmp
mov
and
movsl
repnz
test
push
cwtl
dec
rcrb
pop
mov
push
adc
jecxz
lock
or
xbegin
mov
es
mov
pop
pop
cld
pop
scas
xor
or
inc
pop
int3
xor
push
jge
stos
fbld
rorb
shr
jbe
inc
mov
push
stc
cwtl
inc
adc
cld
jns
pop
sbb
fcmovnu
jae
mov
mov
adc
loope
enter
in
jb
mov
cltd
dec
cmpsb
lods
pop
pusha
pop
lcall
lahf
sub
xchg
mov
imul
inc
outsl
ret
add
pop
mov
inc
mov
fdiv
das
lds
aas
sub
movsb
mov
in
stos
js
loopne
lds
pop
rcll
sub
push
fists
repnz
xor
cwtl
pop
adc
add
stc
rorb
sahf
lahf
adc
xchg
aaa
xor
sbb
out
jmp
loop
lods
ror
insl
mov
test
lds
mov
std
mov
shrb
mov
pop
call
lahf
mov
pop
xchg
mov
out
cmc
fimuls
mov
mov
xor
cltd
dec
mov
and
inc
dec
xchg
stos
dec
mov
das
sbb
ja
mov
mov
pop
adc
das
subps
or
faddl
inc
aaa
sahf
orl
lock
dec
call
loopne,pt
jo
loope
dec
adc
int3
dec
popa
inc
mov
fwait
js
lret
pusha
push
dec
mov
scas
or
fstps
call
xorl
xchg
pusha
ljmp
test
jmp
stos
ss
fnsave
push
sub
clc
test
hlt
mov
js
sahf
subl
push
cmpsb
push
or
add
pop
inc
je
sbb
push
movsl
cmp
sub
dec
xor
lea
mov
je
loopne
or
pop
sarl
and
addr16
lods
xchg
mov
dec
fcompl
mov
jge
shll
add
testb
cltd
mov
movb
mov
mov
sbb
rcrl
xchg
scas
pop
adc
mov
aam
mov
je
dec
adcb
pop
cld
pushf
lret
pop
imul
mov
add
bound
cmp
mov
mov
adc
cmpsl
iret
outsb
lea
jae
movsl
and
inc
jo
fistl
cmp
inc
cmp
imul
cmpl
stos
ja
test
sahf
lret
add
xchg
outsb
fidivrl
ds
sar
out
xlat
std
inc
call
adc
sbb
aam
cmpsb
jp
std
xor
or
sahf
push
inc
enter
test
push
inc
test
push
add
ds
push
aad
fistl
es
jl
in
xchg
sahf
pop
cltd
call
xchg
arpl
mov
mov
fwait
inc
push
sbb
jbe
sbb
and
repnz
push
mov
test
mov
adc
jb
psubd
andb
pop
xor
sahf
popf
sbbb
inc
pop
push
out
cli
mov
in
pushf
push
inc
pop
repnz
or
xchg
dec
std
mov
xchg
cltd
dec
clc
push
aad
lret
push
jl
sbb
cs
test
out
rcr
fidivrl
xchg
ret
mov
cmp
pushl
dec
mov
cmp
jmp
add
mov
aaa
fucomp
add
and
mov
ljmp
xor
mov
lea
in
push
jg
sbb
dec
xor
aaa
fwait
jb
cs
ss
stos
push
nop
fcoms
insl
incb
pop
sbb
xor
nop
std
push
jo
or
inc
sub
mov
inc
sbb
pop
push
test
outsb
stos
test
and
adc
insl
shr
call
inc
shlb
cli
jno
mov
in
movsb
xchg
clc
mov
adc
sub
jge
or
les
or
dec
pop
inc
lods
adc
daa
cs
out
xlat
cmpsb
arpl
ss
push
insb
icebp
or
and
std
adc
push
bound
outsb
fucomi
and
or
adc
bound
insl
and
sbb
fsubl
sub
jmp
pop
mov
ret
popa
jecxz
inc
cmp
and
movsl
adc
mov
repnz
push
xlat
div
jns
push
or
dec
jo
rorb
mov
ret
jl
inc
outsb
testl
loop
inc
and
xor
inc
shll
sbb
mov
inc
push
jbe
ret
mov
sbb
nop
das
xor
jbe
cwtl
sbb
mov
or
cmc
xor
gs
pop
mov
dec
xchg
mov
adc
mov
je
and
popa
cwtl
iret
mov
sub
ret
loopne
dec
loopne
popf
iret
aas
jle
mov
jp
mov
gs
scas
data16
mov
insb
ss
decl
push
dec
lcall
push
movsl
imul
cld
aad
mov
rcr
push
sub
dec
or
test
sahf
cmpsl
mov
sbb
aad
aas
jmp
and
cs
push
lods
int3
imul
push
and
inc
jle
sbb
sarl
daa
xchg
fst
clc
lock
aas
sbb
stc
repz
loope
mull
insl
mov
dec
in
in
xchg
into
or
jecxz
cmc
and
std
cmpb
fsts
fnstsw
leave
ret
sbb
sbb
mov
dec
lds
out
push
movsl
rorl
testl
pop
or
enter
dec
xchg
push
pop
jmp
loopne
inc
sbbl
mov
push
addl
and
mov
or
mov
int
enter
cmp
jge
adcb
insl
in
mov
xor
pandn
or
adc
call
pop
ret
xchg
and
jbe
sbb
jnp
push
add
call
and
sahf
adc
pop
dec
inc
lret
mov
or
mov
pusha
fmull
add
call
adc
fstps
data16
mov
aam
cmp
ja
dec
movsl
sbb
cmp
sbb
mov
jbe
inc
cmpsl
fdivrs
xor
js
push
mov
sbb
ret
insl
cmpsb
xchg
adc
sahf
pop
xchg
inc
fwait
jl
leave
mov
jns
pop
adc
add
les
and
fbstp
mov
lea
out
fimuls
lock
lock
sub
pop
adc
adc
cmp
sub
nop
mov
inc
icebp
mulb
and
mov
adc
mov
fadd
pop
xchg
push
int3
test
cmc
push
inc
add
imul
shr
fisubrs
lret
jb
adcb
push
mov
in
sub
fs
xchg
pop
stos
cmp
and
push
andb
bound
mov
test
ljmp
std
int3
mov
jp
ljmp
xor
xor
pop
sti
mov
test
das
add
mov
pop
sbb
je
lret
aam
adc
push
pop
and
add
mov
into
ror
std
call
shl
andb
adc
mov
dec
sahf
sub
mov
push
insb
xlat
xchg
arpl
int
mov
mov
cmpsl
mov
jge
push
mov
cmpsb
imul
and
mov
sbb
aad
push
sub
jp
das
xlat
jl
mov
movsl
jmp
push
xor
and
jno
and
dec
push
insb
lea
or
test
xchg
je
insb
shll
je
add
push
cmpsl
cld
fidivrs
lods
out
mov
mov
aaa
movsb
and
ss
cmp
clc
lcall
popa
or
sbb
icebp
push
lock
hlt
cmp
adc
mov
sbb
out
int3
adc
vpsllw
dec
adc
in
pop
ret
pop
or
sub
test
dec
fistps
adc
pmullw
stc
nop
loopne
popa
or
enter
je
mov
sub
test
cmp
movsb
lea
jne
mov
push
into
fiadds
sub
mov
sbb
mov
xor
xchg
mov
cmp
mov
popa
nop
xlat
push
sti
or
cs
sbb
clc
xor
pop
sbb
fcmovb
inc
cs
iret
mov
xor
mov
mov
loope
and
ja
out
jp
daa
pusha
imul
nop
push
decl
mov
test
push
lret
lock
jmp
dec
sbb
call
insb
jl
jo
mov
ret
push
fstp
dec
call
pop
dec
lret
mov
xor
xchg
xor
call
lret
dec
imul
lahf
jae
and
fs
pop
dec
inc
addr16
mov
pop
add
or
or
inc
adc
daa
push
mov
pop
fwait
sub
in
scas
xchg
inc
sbb
mov
sub
mov
add
aam
push
sbb
scas
fnstenv
movsb
int3
out
js
mov
arpl
push
sahf
push
cwtl
pop
pusha
stos
out
cmpl
loope
pop
imul
xchg
lods
xchg
movsb
imul
inc
inc
hlt
icebp
inc
sbb
cli
sbb
mov
pusha
xchg
aas
push
mov
mov
xor
push
push
lahf
inc
adc
ficoml
adcl
movsl
outsl
rcrb
lock
scas
cltd
fcmovb
lock
inc
ds
pushf
icebp
roll
add
xor
push
mov
fstpt
lahf
hlt
stos
add
inc
xchg
movl
lret
data16
sub
out
cmpsb
dec
or
int
inc
out
dec
imul
sbb
movsl
xor
jmp
pop
shlb
push
pop
mov
imul
in
mov
jb
nop
push
fcmovnb
pop
jge
xlat
lds
mov
inc
mov
adc
lods
lea
mov
pop
jl
mov
sti
cmpsb
sbb
sbbl
movsl
jae
std
ds
jge
fsubrs
xchg
fdivl
pop
xor
roll
pusha
out
mov
arpl
mov
push
lods
repz
add
mov
popf
rolb
repnz
pop
in
js
stos
mov
xchg
xor
sub
xor
cld
jmp
and
add
add
stc
stc
add
ficoms
or
popa
lret
test
push
mov
popf
enter
loopne
outsb
mov
pushf
jns
mov
outsb
outsb
xlat
cvtpi2ps
jmp
or
lods
sbb
test
or
mov
push
rcll
push
jne
outsb
jp
lcall
jno
cmp
inc
push
add
cmp
add
aaa
shll
sub
std
test
fcmovbe
addr16
fcompl
sub
out
rcr
pop
aam
hlt
and
addb
push
jae
lret
popa
sbb
test
cltd
inc
xor
daa
in
out
or
movsb
fcmovnbe
inc
sbb
inc
loope
push
push
gs
sarl
lock
ret
sub
sub
push
movsl
jbe
decb
xchg
cli
cmp
jns
sub
cmpsl
insb
loop
arpl
shlb
push
ret
or
sub
mov
push
std
dec
xchg
or
push
jp
sbb
xchg
js
mov
nop
int3
xchg
push
aas
and
lret
jg
repz
test
or
andl
push
movsl
pop
add
repz
movsl
int
scas
mov
and
jnp
call
imul
pop
mov
std
mov
pop
ljmp
stc
adc
movq
cld
push
sahf
lds
cmp
jl
sbbl
xor
pop
pinsrw
dec
jo
pop
sbb
mov
push
add
push
pop
mov
call
cld
cmp
inc
out
jb
loope
ret
call
inc
sbb
test
dec
mov
je
mov
dec
mov
mov
cmp
aad
push
cmc
out
mov
mov
shll
pusha
push
adc
cmpsl
add
cltd
sbb
pop
mov
inc
insl
lea
cmpb
inc
push
je
inc
jmp
push
into
inc
negl
inc
call
outsb
sbb
adc
and
push
cli
sub
ds
sbb
xchg
jno
aad
mov
ffree
jo
push
fcmovnu
fcoml
call
mov
negb
mov
fdivl
jo
push
jns
mov
mov
lret
sub
aad
mov
std
pop
lahf
fldt
mov
mov
adc
push
mov
fists
imul
add
mov
cmp
lods
fmul
pmaddwd
adcl
mov
outsb
sub
gs
jle
loop
cs
cmp
xor
cmc
imul
or
test
daa
stos
and
stc
and
aaa
cmp
js
loopne
arpl
ss
lock
or
xor
lcall
mov
cmp
xor
into
xchg
dec
dec
dec
mov
and
xlat
out
inc
jbe
push
inc
fnstenv
je
mov
iret
test
insl
xchg
jbe
mov
xor
cmc
and
sub
nop
scas
jae
or
pop
jo
loop
outsl
sub
sarl
or
adc
out
jo
inc
jno
mov
xlat
jge
push
dec
scas
and
in
cwtl
cs
andb
cmpsb
fldl
sbbl
inc
sahf
sbb
dec
mov
dec
sti
bswap
cwtl
cmp
insb
mov
mov
in
lret
xor
stos
or
adc
adc
mov
imul
mov
mov
pushf
add
inc
pop
sub
js
mov
inc
sub
xor
adc
shl
cs
mov
test
mov
mov
mov
push
cmp
add
jle
mov
bnd
sahf
pop
out
pop
stos
icebp
das
push
adc
inc
mov
inc
sub
xor
jmp
loope
outsb
mov
jnp
jns
outsl
fisubs
cmp
popf
xor
nop
mov
test
jb
push
out
inc
in
adc
sub
stos
mov
jl
mov
dec
and
ret
add
push
stos
xchg
test
mov
fwait
jmp
sbb
ljmp
shl
rorl
out
pop
mov
jne
mov
pop
inc
cmc
gs
call
ds
insl
lcall
test
stc
jne
xchg
mov
inc
ds
sbb
push
push
xor
push
movsb
out
mov
pop
int
sub
inc
jno
mov
call
pop
add
fistpll
cli
cmp
and
pop
sbb
mov
outsb
outsl
xchg
push
jae
mov
repnz
out
mov
add
cmp
shlb
add
test
icebp
adc
int
pop
lret
ljmp
loop
sub
jl
cltd
inc
or
cltd
sub
outsb
jmp
aas
xor
lret
mov
int3
lods
dec
dec
mov
inc
loopne
sbb
js
mov
inc
fdiv
add
fdivr
lahf
mov
pusha
hlt
pusha
push
inc
adc
fsubrl
sbb
in
mov
push
fs
es
fcompl
xorb
push
mov
pusha
scas
push
pop
in
ret
or
pop
xor
dec
sbb
mov
push
call
adc
les
mov
imul
leave
lahf
dec
add
mov
sti
mov
sbb
dec
data16
mov
movsb
les
es
ss
insl
add
loopne
pusha
cmp
xchg
shll
testl
sbb
inc
adc
mov
xchg
jno
aaa
and
sti
or
jbe
jb
pop
iret
inc
cmp
pop
int3
icebp
pop
andb
mulb
add
xchg
mov
popw
jno
mov
aas
xor
sub
push
push
dec
mov
mov
fidivrs
pusha
adcl
mov
mov
xor
add
sub
out
lret
icebp
sub
js
into
adc
or
js
shlb
mov
sbb
add
int3
mov
mov
insl
mov
gs
gs
xchg
mov
popa
enter
cld
js
lods
in
lret
out
ja
mov
adc
mov
push
xchg
cmpsl
push
repnz
xor
cmp
popa
adc
pop
popf
sarl
pusha
das
mov
into
aas
aaa
loopne
or
jb
lret
sbb
cmp
in
pop
mov
ret
cmp
stos
dec
iret
adc
inc
fcompl
outsl
insl
js
ret
push
movsl
pop
pop
pusha
shlb
in
xor
or
push
jle
sarb
std
cwtl
inc
lret
cmp
sbb
lret
adc
mov
gs
xadd
bound
sbb
add
xchg
je
pop
mov
mov
add
mov
out
insb
stc
xlat
mov
push
push
xchg
mov
mov
stos
inc
mov
jnp
out
addr16
jg
test
mov
adc
inc
mov
stos
xorl
mov
ret
roll
mov
je
mov
imul
mull
outsl
into
push
stos
std
test
fimuls
sbb
test
xlat
xorb
and
cltd
insl
mov
mov
jg
aam
bswap
push
imul
jle
or
lea
and
xor
mov
or
cmpsb
jae
enter
or
fwait
and
js
lock
adc
lods
das
mov
xchg
roll
movsl
fdivrl
ljmp
rcrb
lods
xlat
or
or
inc
stc
mov
aam
inc
popf
jne
xorb
fcmove
js
pop
fistl
adc
cmp
jecxz
xchg
pop
roll
jno
sub
in
cs
shlb
or
fcomip
outsb
mov
scas
xlat
sbb
neg
pushf
addb
popf
lahf
je
cld
test
jnp
in
je
rolb
scas
pop
jae
sbb
sbb
cmpsb
sbb
inc
and
test
les
xchg
int
push
dec
test
enter
aad
pushf
lahf
arpl
add
xor
iret
cs
test
clc
daa
mov
into
js
in
pushf
dec
jae
mov
pop
insl
ficoml
stos
lcall
sarb
adc
sti
and
inc
push
ds
fucomi
jbe
lock
inc
push
andb
fnstenv
add
push
push
sbb
notl
imul
cmp
out
jge
adc
and
loop
movsl
dec
jnp
mov
cmpl
xor
or
test
jg
pop
push
mov
je
mov
cltd
aam
in
ret
mov
mov
pushf
jmp
int3
outsb
jmp
and
xor
aad
out
bound
cmpsb
jno
aaa
icebp
data16
cmpsb
in
subl
xorb
popa
ret
scas
sbb
shrb
mov
push
sbb
xchg
dec
mov
dec
jno
xchg
cmpsl
pop
jno
pop
ret
divl
testb
xor
faddp
ljmp
xor
ja
icebp
lea
pushl
stos
mov
outsb
jge
rol
cmp
add
mov
xchg
cmpsl
mov
sbb
stc
pop
and
pop
rolb
shll
cltd
push
pop
inc
dec
mov
sbb
add
loop
push
adc
nop
mov
mov
std
jbe
adc
arpl
outsb
pop
sub
push
inc
push
rclb
sub
xchg
mov
sub
xor
mov
mov
pop
push
call
inc
adc
ljmp
sub
add
enter
xor
jmp
mov
dec
cmc
das
mov
xor
frstor
xchg
pop
loop
inc
jp
fstps
jae
test
dec
lret
adc
jnp
es
lret
cmc
ljmp
in
data16
mov
data16
mov
fwait
addr16
lods
dec
test
push
leave
sbb
sbbl
adc
dec
and
push
push
insb
sub
mov
sub
xchg
push
add
sub
sub
scas
lds
xchg
pop
sbb
xor
pop
ds
and
pop
mov
mov
test
int
bound
jnp
push
iret
int
jp
cmpsb
int3
pop
incl
mov
in
or
dec
sub
mov
cli
daa
adc
adc
stos
cs
popa
mov
scas
out
push
mov
rcrb
pop
inc
movsl
test
jge
inc
loop
xchg
jno
repnz
cmp
stos
cltd
dec
ret
je
bound
movsb
inc
dec
jne
mov
icebp
inc
jbe
mov
mov
sbb
pop
add
gs
mov
and
mov
fcoms
sbb
inc
imul
jecxz
mov
inc
call
rorb
fs
mov
jl
sbb
jl
xor
in
test
adc
movsl
fstpt
inc
inc
imul
dec
and
aas
push
mov
ret
xor
and
cltd
pop
or
pop
fldcw
dec
cli
stc
out
dec
pop
sbb
add
push
sbb
movsb
fsts
adc
jmp
leave
iret
test
mov
xor
aas
sbb
or
xlat
jmp
push
push
cmpsb
je
xchg
in
cmp
scas
jge
popf
xchg
fwait
shll
and
and
sub
push
sub
adc
mul
pop
sub
push
sbb
pusha
push
cmp
inc
xor
sub
mov
mov
scas
push
xchg
mov
cmc
sub
pop
push
cltd
xchg
out
cmpb
scas
cmp
sub
pushf
in
sbb
jae
cmp
sbb
hlt
pop
lahf
inc
xor
adcb
movsb
inc
xor
jnp
or
inc
cmp
adc
adc
aam
and
bound
push
mov
inc
xor
push
and
add
add
mov
out
sub
mov
xchg
cmp
sbb
int
addr16
popa
in
jmp
jns
in
hlt
jp
sub
cmp
mov
xchg
or
divb
aaa
push
cmp
inc
bound
inc
and
out
dec
and
ss
pusha
leave
fistpll
iret
cmp
out
loope
inc
subb
inc
xchg
jge
and
pop
or
into
jecxz
sub
rcll
jo
call
mov
aam
mov
das
lods
jnp
cmp
fstps
pop
and
rcrb
adc
rcr
ljmp
mov
dec
xchg
add
sub
fsub
push
imull
loope
inc
dec
inc
dec
xchg
push
inc
test
popa
add
int
adc
stos
cmpsl
inc
es
and
icebp
cmp
int
test
je
xor
mov
lret
cmc
xor
lea
pusha
jno
les
aaa
mov
lods
inc
lea
insb
cmp
cmp
stos
js
je
hlt
add
and
cli
jp
inc
loopne
nop
dec
lret
xor
cmpb
jnp
jecxz
fmull
pop
adc
aad
sub
mov
cmp
std
filds
cmp
push
mov
adc
mov
fwait
cmp
insb
in
test
loope
inc
push
cmp
aas
pop
add
dec
xchg
into
lret
stos
and
xchg
push
lods
popf
fnstsw
push
push
or
pop
cmpsl
dec
or
sub
add
pop
ljmp
sbb
dec
fldenv
sbb
jmp
sub
mov
rclb
mov
mov
sahf
cmp
mov
fldcw
inc
gs
lds
pop
aad
dec
rcrb
or
pop
xchg
pmaxub
lea
push
mov
mov
mov
icebp
addr16
mov
add
xor
pop
mov
lret
test
push
mov
int
pop
mov
dec
addr16
fsubr
mov
scas
lcall
mov
pop
les
daa
pop
and
push
test
sub
sub
mov
cmpsl
dec
int
cmp
lret
cmp
cld
aam
inc
jg
or
push
mov
and
add
jl
mov
mov
dec
das
lods
cmp
dec
rorl
lea
push
inc
imul
jb
jle
stos
xlat
cmp
mov
mov
xchg
call
cmc
rcrl
pop
adc
mov
sbb
cli
jecxz
dec
jg
insl
call
xlat
pop
mov
hlt
xchg
mul
scas
int
push
ds
jecxz
test
xchg
jbe
mov
jp
not
ljmp
and
enter
cmp
stos
outsl
adc
xchg
push
inc
cli
jo
xor
lods
and
mov
shr
cmp
lahf
hlt
dec
bound
fimuls
mov
pop
call
imul
mov
jno
sub
shlb
mov
loop
xchg
test
in
jmp
mov
xor
fnstenv
and
aam
dec
mov
test
mov
ror
sub
sbb
loop
jnp
inc
call
cmp
jl
aas
add
js
pushf
mov
outsb
mov
push
dec
es
enter
fdiv
inc
int
inc
jns
mov
cld
mov
arpl
leave
ss
movsb
mov
repnz
mov
sub
adc
incl
lds
lea
aam
je
je
sub
add
pop
mov
addr16
lock
fadd
xchg
add
jp
xor
mov
mull
xchg
sub
movsb
mov
push
xchg
cwtl
sti
cwtl
repz
jp
popf
mov
int
fisubs
pop
mov
outsl
sbb
jecxz
jl
lret
push
dec
mov
inc
je
dec
add
mov
jno
scas
and
jb
cmpsl
dec
xchg
xchg
adc
mov
xchg
mov
scas
or
or
mov
mov
pop
pushf
lcall
adc
hlt
imul
lods
mov
jb
pop
pop
mov
adc
loop
mov
xor
sbb
xchg
in
adc
pop
fistpll
dec
ja
repnz
fucomp
movsw
test
test
xchg
out
js
jnp
and
repnz
adc
mov
or
pause
cli
dec
jbe
pop
mov
cmp
daa
and
andl
cmpsl
fsubr
inc
lods
jmp
jo
and
ret
fwait
push
push
hlt
ja
cwtl
sbb
mov
rolb
adc
mull
pop
mov
xchg
test
pop
mov
imulb
test
jecxz
pushf
and
shll
and
pop
test
adc
rcrl
mov
outsb
jle
sahf
inc
jno
mov
clc
movsl
mov
test
xchg
push
ret
and
push
out
cmpl
push
addb
mov
ret
and
add
cli
xor
jecxz
notb
movsb
mov
imul
lods
pop
pop
lods
jb
shlb
mov
cwtl
pop
dec
ja
popa
flds
stos
ret
data16
jo
and
add
out
dec
or
std
xchg
pop
add
adc
out
push
stc
ss
xor
adc
in
jmp
sbb
data16
xchg
daa
hlt
xcrypt-ofb
cmpsl
stos
inc
lods
and
dec
jne
or
dec
xor
jns
sbb
sbb
mov
addr16
lret
sbb
cwtl
repnz
loopne
xchg
adc
xor
mov
int
cmp
ret
shlb
jl
pop
sbbb
dec
or
xor
clc
gs
jb
scas
fcomps
inc
aaa
mov
add
out
add
push
out
jp
stc
rclb
lcall
adc
mov
mov
or
ret
iret
mov
loopne
aam
inc
cmp
imul
insl
mov
mov
pop
inc
popf
add
inc
lret
in
jl
add
pop
mov
bound
push
je
add
in
loopne
lds
lret
pop
aad
xor
push
mov
or
xor
dec
sub
or
call
nop
mov
and
cmpsb
out
out
iret
or
push
push
sbb
loopne
inc
nop
inc
out
test
sub
add
cmpsl
push
mov
xchg
lods
sub
call
pop
add
sahf
mov
insb
dec
inc
lret
ja
jno
add
mov
xlat
pop
push
inc
mov
lock
insb
ss
and
int
push
scas
sbb
orl
cmp
mov
sub
std
mov
inc
fsubrs
jmp
push
cmp
pop
scas
sub
adc
aad
mov
jae
orb
pop
sbb
iret
popa
sbb
cmp
in
std
fwait
and
jle
fwait
mov
lds
popf
adcl
sub
movsb
push
or
ret
fdivrl
or
int
push
push
dec
adc
inc
sbb
in
jns
in
sub
cmpsb
lds
imul
mov
mov
cltd
lcall
bound
int3
push
loopne
inc
adc
or
enter
in
test
pop
xor
insb
xchg
mov
cmp
and
jo
pop
js
out
test
add
inc
pop
imul
xor
movsl
pop
lock
cld
roll
pop
mov
shll
xchg
and
imul
out
and
jle
pop
arpl
mov
sarb
scas
psrad
fildll
jno
fildll
xchg
lahf
xor
rcll
loop
sarb
in
xchg
icebp
jns
in
sub
aad
mov
fldl2t
addl
adc
mov
pop
mov
es
xchg
inc
mov
and
xor
fadds
pop
push
jnp
jmp
das
mov
movsl
fildl
xor
enter
popf
lahf
outsb
lods
inc
loope
gs
adc
push
cld
pop
pop
add
ret
out
out
test
xchg
cmpsb
push
aas
dec
pop
jno
mov
lods
popf
cltd
das
cmp
test
mov
mov
pop
jmp
stc
lret
add
lds
add
pushf
orl
int3
xor
jo
pop
pushf
pop
mov
arpl
add
les
movsl
ror
xchg
sbb
adc
movsl
rcll
or
dec
std
xchg
mov
lcall
in
pushf
pop
enter
pop
pop
adc
push
jne
gs
pop
add
rorb
pusha
mov
mov
dec
ljmp
mov
out
std
jb
ljmp
cltd
add
test
pop
fs
sub
outsl
pop
ss
mov
dec
cmpsl
jae
mov
mov
lahf
push
push
inc
popf
test
xor
rcl
les
lea
int
jle
cltd
mov
add
loop
mov
das
xor
popf
or
dec
adc
sarl
nop
js
push
mov
cmpl
mov
int
in
and
je
and
pop
xchg
mov
lret
sarl
mov
mov
dec
jecxz
sub
sbb
int
subl
jbe
das
sbb
dec
cld
jl
lock
loop
xor
push
cmp
dec
hlt
adc
outsb
xchg
js
push
sub
stc
fistl
test
mov
sbb
adc
ret
hlt
jle
aam
pop
lret
push
daa
sbb
push
dec
addr16
loopne
lret
shrb
cmpsb
aas
xor
mov
and
mov
or
test
jnp
ret
xchg
cmp
add
sub
pop
mov
jo
popa
leave
pusha
cmp
push
inc
daa
sub
ret
fsub
xchg
pusha
pop
in
and
push
notl
insb
xor
inc
sti
sbb
shll
fistpl
addr16
decl
and
cmpsl
fisttpll
mov
pop
cmp
rcr
cmp
data16
sbb
imul
sbb
add
push
lock
out
nop
adc
dec
pand
xchg
testb
xor
aad
jnp
loopne
inc
push
rcr
or
sbb
sahf
sub
xor
data16
int3
aam
outsb
or
lock
jg
jae
fisubs
outsb
push
xchg
push
inc
push
adc
mov
in
mov
js
imul
mov
dec
arpl
sahf
and
inc
jle
sub
xchg
add
adc
mov
xor
or
cmpsl
lock
push
incl
sub
sub
imul
dec
insl
movsb
icebp
jecxz
lods
mov
mov
nop
cmp
mov
mov
fisttps
test
es
outsb
in
jbe
adc
movb
sub
int
mov
lahf
outsb
pop
add
xchg
bnd
adc
ret
sub
into
mov
sbb
imul
fdivs
or
aaa
jecxz
mov
lods
lock
cmpsb
inc
mov
call
sbb
mov
fiadds
adcl
cmc
popa
sub
lods
lock
test
inc
daa
adc
je
arpl
dec
testb
imul
add
inc
add
std
add
adc
lock
test
mov
subl
popa
mov
sub
mov
addb
xchg
jb
pop
into
cmp
mov
shrl
popf
sub
je
gs
jnp
mov
adc
movsb
cmp
dec
mov
bound
int3
loope
jbe
cmp
xchg
je
rcl
int3
repnz
mov
mov
imul
mov
cmp
adc
and
jnp
cmpb
pop
jl
jns
fnstenv
lock
pushf
pop
test
or
lcall
adc
cmp
mov
xor
sbb
inc
dec
pop
jge
in
pushf
or
xchg
mov
pop
sub
leave
pop
jo
cmp
adcb
jbe
fstp
mov
movl
push
cld
icebp
add
mov
mov
jb
out
outsl
xor
popa
ja
push
mov
add
outsl
pop
mov
mov
cs
sahf
push
pop
movups
jno
jns
mov
out
xchg
xchg
add
fwait
idiv
sub
xchg
fisubrs
clc
fmuls
divb
aad
xor
push
push
xchg
inc
or
inc
adc
cmpsl
ljmp
xor
stc
or
mov
jo
fdivl
pop
dec
imul
pushl
data16
or
in
or
xor
mov
xchg
mov
mov
andl
xchg
cmp
jg
repz
nop
ds
and
ja
xor
icebp
ret
mov
cmp
dec
jge
cmpsb
mov
inc
xchg
ret
sub
jecxz
out
xchg
hlt
jno
mov
push
xor
mulb
push
jmp
popa
insb
fwait
icebp
out
loope
mov
cmpl
xor
sub
pop
mov
and
ljmp
jb
nop
jae
leave
sub
push
add
inc
loopne
or
test
fcompl
aas
pop
lcall
cltd
push
cmp
jno
mov
lcall
fdivl
sub
jecxz
lahf
adc
or
enter
dec
sahf
mov
insl
in
dec
cmc
movsb
mov
pop
movsb
cmpb
sbb
mov
movsb
std
adc
loop
cmp
fcoml
cmp
inc
dec
fdivrl
jmp
dec
test
insb
jp
sbbb
sahf
outsb
dec
fs
mov
imul
jbe
xchg
cltd
lahf
or
shlb
jbe
popf
dec
lods
or
or
sbb
cld
push
xchg
mov
xchg
or
shlb
add
push
lcall
mov
inc
xchg
gs
or
jge
subb
pop
push
push
pop
add
inc
dec
mov
dec
stos
or
cmp
jl
aaa
dec
loopne
movsb
push
aad
or
or
shlb
xor
add
xorl
xor
loope
rorb
sbb
pusha
push
insb
ficompl
sbb
std
addb
lret
icebp
xchg
xor
icebp
mov
jo
mov
test
or
jo
call
dec
xor
push
and
fmuls
subl
fadd
dec
dec
fs
sbb
and
loop
cmc
dec
std
int3
leave
jne
push
xor
arpl
sbb
jo
in
adc
enter
in
das
pop
aas
sbb
test
xor
mov
mov
lods
pop
or
adc
cmp
add
sbb
xor
pop
dec
jg
cmpl
jp
xor
lods
imul
andl
lods
adc
lahf
sub
fcomps
dec
fcoms
inc
into
xor
ds
jmp
fstpl
pop
dec
in
sbb
movsl
jp
xchg
int3
add
cmc
in
les
pop
xorl
push
insb
imul
mov
jmp
test
int
mov
addr16
insb
xor
xor
test
mov
ret
les
push
mov
xor
lock
cmp
incb
dec
xchg
mov
push
jbe
fsubs
and
mov
test
das
adc
mov
jge
or
push
stc
push
mov
jbe
add
jl
add
fxch
cld
pop
mov
sbb
int
or
mov
mov
push
out
in
faddl
or
testl
mov
ljmp
sub
lock
mov
aas
mov
jbe
cvtps2pi
test
outsb
dec
mov
sub
int3
sbbb
repnz
push
mov
sub
sbb
mov
and
test
js
sbb
xchg
lahf
cmp
insl
xchg
push
loopne
mov
add
adc
test
or
cmp
out
stc
jp
xor
push
cmpb
xchg
insl
cmp
push
hlt
loope
mov
push
jmp
dec
out
lret
mov
sarl
mov
sub
sbb
mov
mov
mov
dec
jbe
adc
call
xchg
and
orb
in
fbstp
scas
add
xchg
popf
mov
popf
fst
imul
ja
fisubs
outsl
add
pop
sbb
pop
into
pop
jp
mov
sbb
arpl
xchg
push
lret
xchg
xor
jecxz
mov
xchg
sahf
stos
mov
inc
push
test
mov
cltd
ds
add
mov
movsl
testl
mov
push
push
or
pop
xchg
adc
sub
frstor
insl
xorl
push
daa
mulb
test
jns
rol
mov
leave
cwtl
fwait
into
mov
cmc
clc
sbb
mov
push
xchg
call
mov
mov
lock
push
xor
mov
inc
imul
hlt
test
pushf
popf
out
outsl
cli
mov
dec
out
jl
mov
jnp
sub
xlat
lahf
pop
in
or
mov
pop
push
mov
xor
stos
jb
cmp
sub
xor
cmp
outsb
push
xchg
add
push
popa
xchg
lahf
mov
popf
push
add
xchg
rep
add
or
test
cld
mov
push
mov
loope
fidivrl
int
and
push
jo
scas
dec
stos
jecxz
outsl
jo
loop
mov
add
rcrl
push
loop
cmp
pop
jecxz
jmp
idivb
mov
inc
pop
mov
cmpsb
mov
ds
jl
mov
lock
imulb
repnz
cld
in
cli
iret
adc
fidivrl
inc
lahf
inc
and
jb
ret
lahf
mov
dec
mov
out
adc
mov
shl
jb
aam
test
lock
cltd
and
mov
adc
sarb
pop
adc
xchg
jbe
add
div
test
sub
insb
pop
shlb
mov
inc
jno
add
pushf
dec
inc
negl
test
adc
test
jg
jmp
and
ret
out
xchg
lods
call
test
or
push
pop
or
mov
daa
js
stos
fisubs
pop
or
insl
dec
in
sbb
sbb
mov
loope
xor
xchg
movsl
pop
pushf
mov
sahf
jmp
xchg
inc
rcrl
xchg
scas
jp
jbe
mov
out
pushf
mov
addb
mov
pushf
inc
lret
insb
cmp
imul
xchg
xchg
fdivrl
cwtl
mov
aas
xchg
cmp
rol
icebp
inc
or
subl
rcl
adc
cli
sub
lock
aad
mov
inc
push
mov
and
jne
in
repnz
idiv
fnstcw
shrb
ret
jmp
inc
sub
arpl
fnstcw
push
jbe
fildl
xorb
imull
inc
and
dec
dec
push
dec
jne
push
dec
daa
jne
outsb
jne
ds
pop
shll
mov
jl
mov
outsb
nop
sub
xchg
lods
mov
mov
stos
mov
cmp
jmp
xchg
sahf
pop
lds
xchg
aam
loopne
adc
sub
jg
pop
push
add
cltd
push
push
pop
mov
lahf
pop
xlat
mov
jecxz
push
fnsave
shl
ljmp
pop
fucom
out
gs
cli
movsb
outsb
adc
cli
rcll
loopne
push
sub
sbb
xchg
stos
out
jmp
dec
pop
stc
mov
lret
sbb
dec
das
addr16
and
adc
inc
push
cli
jl
or
js
adc
shl
push
add
arpl
xor
movsl
push
xchg
mov
and
ret
sbb
mov
loopne
in
xchg
sbb
sbb
pop
sbb
mov
jo
enter
in
mov
cmp
movsb
sbb
fwait
pusha
popf
sbb
lcall
lahf
xchg
sbb
cmc
xchg
and
jbe
sub
jns
sbb
ja
stos
push
push
inc
stc
jo
hlt
test
adcl
pop
ss
outsl
rolb
orb
loopne
xchg
mov
add
shll
mov
imul
fdivs
cs
pop
fadd
jo
add
mov
cmp
mov
push
ja
out
loop
xchg
push
cld
jno
push
mov
mov
scas
fisttps
jg
add
scas
jp
xor
in
push
outsb
push
pop
lock
sbb
mov
test
pop
rcr
loop
inc
jne
and
jp
test
in
push
mov
repnz
push
test
fs
cmp
imul
sbb
and
fmuls
aam
out
mov
adc
and
loope
mov
mov
mov
and
sub
repz
jbe
in
popa
pop
mov
js
push
cmp
jl
decb
test
cmp
mov
cmp
pop
or
cmp
add
push
cltd
movsb
mov
aas
lret
sbb
cs
pop
cltd
ret
push
mov
push
in
aas
cltd
jg
sahf
daa
add
in
sub
dec
daa
inc
dec
jle
loopne
sub
jb
jg
in
mov
in
jns
mov
adc
mov
lods
jl
gs
andps
aam
inc
arpl
test
inc
int
xor
call
jp
stos
sbb
into
dec
imul
das
adc
rep
mov
add
aad
cmp
push
adc
adc
fistl
cmp
imul
sub
mov
sti
enter
arpl
push
mov
test
aam
test
or
lahf
gs
out
pop
sbb
sbb
or
mov
popf
testl
push
or
bnd
xchg
mov
fwait
jb
int3
fistpl
xorl
jb
pop
sub
mov
xchg
lahf
jne
add
jecxz
mov
cltd
fidivrl
rol
fbstp
mov
fldt
sub
daa
stc
fcoml
es
outsb
or
push
cwtl
dec
adc
lds
cmp
and
imul
das
jecxz
aad
cmpsb
arpl
iret
dec
std
into
xor
adc
imul
das
mov
push
pop
loope
addl
mov
test
out
xchg
les
ret
std
mov
mov
xor
xchg
mov
in
je
ret
mov
lods
sub
push
lcall
cmp
gs
jns
cmp
rorl
in
add
es
mov
or
push
rcr
xrelease
out
or
pop
ret
and
inc
adc
xchg
aam
std
jmp
psrad
and
inc
xor
pop
mov
ljmp
movsb
jns
push
sbb
insl
in
scas
inc
xchg
dec
ss
test
das
mov
outsl
xchg
iret
or
pop
adc
js
rorl
andl
sub
xor
add
jns
jne
ror
popa
fnstenv
dec
addr16
in
inc
fldenv
fldl
xlat
clc
jge
int
sbb
xor
push
sbb
jnp
or
xor
sbb
push
adc
movsb
int3
push
sub
dec
jp
adc
and
aaa
bound
stc
push
outsb
fwait
push
jne
jb
ret
sub
fildll
fsubrs
add
call
imul
push
jo
jno
gs
jns
imul
lcall
and
inc
push
test
cli
adc
adc
data16
xchg
jp
sahf
xchg
sbb
xor
mov
jno
dec
adc
sbb
mov
sub
mov
dec
lret
gs
xor
out
das
shll
divb
cmp
pop
xorl
or
dec
pop
and
ja
cld
and
aam
imul
xchg
sti
dec
jle
sbb
jecxz
jb
pop
mov
fwait
mov
lock
aam
inc
cld
sub
lock
leave
dec
test
in
mov
cmp
out
xchg
mov
das
aad
cs
mov
iret
mov
mov
mov
sahf
int
je
mov
pop
push
mov
xchg
dec
loope
mov
jne
and
idiv
inc
clc
inc
mov
xor
jne
inc
dec
push
push
adc
aad
out
stos
sbbb
xchg
mov
pop
mov
mov
xor
gs
loop
cmp
sub
inc
jecxz
loope
clc
mov
gs
xor
jno
mov
ss
idiv
jbe
cmp
cmpb
arpl
pop
dec
mov
movsb
movsl
lods
xchg
sub
mov
jge
mov
xchg
pop
xor
xor
in
mov
pop
stos
repz
dec
and
clc
sbb
out
repz
sbb
stc
add
dec
movsb
xor
push
in
dec
movsl
xor
aas
pop
pop
pop
loop
sti
jle
fcompl
loop
cmp
divl
popf
out
pop
xchg
stos
mov
lods
xlat
jp
pop
mov
mov
cmp
test
popa
icebp
in
js
shll
inc
lahf
adc
out
mov
fidivs
lret
pop
pusha
pop
adc
sub
idivl
fdivr
dec
imul
mov
sarb
dec
clc
jb
mov
xlat
cmp
sahf
out
pop
push
repz
stos
mov
loopne
pusha
sbb
mov
loop
sub
in
stos
add
jnp
mov
testb
es
and
mov
cmp
cmp
inc
inc
xlat
fcomps
aad
push
jne
xchg
push
add
das
push
test
and
jl
xchg
mov
and
insl
test
or
jecxz
push
mov
xchg
mov
ror
push
cmp
sbb
ss
stos
sub
lea
lret
lret
adc
push
jecxz
add
es
push
pop
fcompl
mov
cmpsl
mov
loop
ja
dec
mov
push
or
inc
movsl
das
xorb
sti
mov
inc
imul
or
mov
lods
fstl
fsts
popa
js
inc
std
divl
xchg
popa
mov
mov
and
mov
mov
jl
push
lods
push
icebp
es
ljmp
les
mov
push
dec
lret
adc
jb
outsl
into
call
add
mov
cmp
mov
shrb
jl
xor
xor
in
mov
jp
ss
push
adcl
mov
pxor
mov
push
or
js
ljmp
adc
sbb
int
cmc
sub
cld
fcompl
jo
lock
or
cmp
pop
fcmovb
ljmp
jae
stos
in
out
adc
daa
xor
pop
pop
imul
insb
bound
pop
cmp
out
push
inc
pop
shlb
inc
push
scas
sub
sbb
mov
out
fdivs
ja
pop
frstor
sarl
repz
aam
jmp
mov
fstpt
jecxz
jp
jle
bound
lahf
gs
inc
fisubs
ret
mov
aas
xchg
sar
inc
ja
pop
mov
push
mov
out
or
mov
push
push
ret
daa
lret
scas
push
pop
mov
adc
cmpl
dec
lods
cmc
outsl
ss
push
addb
leave
dec
or
cmp
xor
push
cmp
ja
dec
push
shr
inc
int3
adc
sahf
mov
pop
inc
and
ret
iret
pushf
push
out
clc
lods
imul
sub
ds
sub
push
test
and
jns
enter
and
aad
mov
mov
sub
xor
add
in
add
ss
stos
outsb
lods
sub
pusha
iret
sub
mov
popf
xor
in
and
fmul
js
fucom
arpl
out
imul
in
cs
insl
xor
fidivrl
lcall
inc
pop
andl
fwait
adc
mov
or
or
jnp
jno
mov
mov
leave
xor
sbb
pop
jnp
aam
xchg
cmpsb
mov
popa
push
xor
cmp
pusha
mov
jle
aam
stos
mov
insl
and
xchg
mov
pop
mov
cmp
jp
jae
mov
fdivl
scas
adc
push
loopne
mov
rorb
sbb
insb
push
mov
cmp
std
pop
and
jg
xor
xchg
xchg
mov
cmp
bound
mov
pop
mov
dec
sbb
mov
pop
insl
sbb
jge
xchg
gs
pop
pushf
test
std
vpaddsw
sub
int3
enter
push
shrl
dec
call
push
je
inc
lret
lds
jbe
lret
movsb
pop
push
sbb
push
in
cmp
bound
out
js
iret
adc
test
adc
loop
dec
mov
in
xchg
inc
hlt
and
jb
in
pop
sbb
jbe
jge
xchg
xor
lock
mov
and
jb
imul
jae
mov
lahf
xchg
adc
stc
jmp
mov
cld
repz
dec
pop
push
popa
movsb
sub
push
mov
iret
cs
cs
sbbb
dec
lds
scas
inc
and
xorl
mov
lahf
idivb
in
add
sub
movsl
icebp
pusha
dec
insb
mov
inc
push
das
mov
xchg
in
mov
dec
mov
cmpsl
lods
lods
bound
cltd
dec
cmp
test
in
push
lods
xor
cwtl
push
mov
jg
and
ja
sbb
mov
repz
fmul
call
mov
pop
cmpsl
fsubl
xchg
pop
xchg
cmp
push
mov
inc
ja
sub
dec
mov
ss
dec
adc
mov
or
xor
jne
dec
push
mov
lret
int3
push
js
into
call
out
xchg
lock
andb
enter
pusha
mov
jg
mov
xorl
outsb
daa
mov
orl
and
scas
mov
xor
cmpsb
fsts
mov
leave
imul
pop
xchg
repnz
ja
xchg
loop
sbb
sub
push
push
sub
sub
popf
js
xor
lods
jg
into
test
or
repz
cli
xchg
clc
movsl
in
sar
pop
xor
gs
inc
mov
pop
push
jmp
test
lret
cmpsl
jg
incl
dec
push
jbe
or
loopne
imul
movsl
add
cwtl
push
sti
mov
sbb
test
cmp
mov
insl
pop
fnsave
cmpsb
test
jecxz
rcl
xor
mov
add
jne
rclb
jge
jne
iret
cmc
rorb
lahf
test
xchg
dec
iret
pop
mov
fcomps
xor
push
stc
cwtl
mov
mov
icebp
dec
cmp
sbb
aaa
pop
mov
and
and
push
sahf
shll
mov
ret
sub
xchg
or
ret
hlt
push
cmp
push
or
movsl
adc
adc
out
jecxz
xchg
push
mov
ss
ret
sahf
adc
xchg
js
cmp
xor
lret
sub
xlat
or
dec
push
sub
push
movsl
jae
mov
lods
dec
fsubrl
test
lods
push
push
aaa
xchg
xor
mov
and
mov
rcrb
adc
ss
lods
sbb
add
lret
outsl
inc
push
aas
js
lret
sbb
int
inc
cmc
jecxz
xor
std
inc
mov
inc
xchg
xchg
inc
or
dec
outsl
mov
call
mov
stos
pop
mov
in
sbb
in
mov
jno
test
mov
xchg
fsubrl
mov
and
arpl
pop
inc
ret
les
ret
jle
das
shrb
and
pop
dec
cli
inc
xchg
sub
ficompl
stc
inc
in
loop
scas
test
daa
dec
loopne
mov
xchg
xor
xchg
jns
or
lea
js
ljmp
xchg
iret
jb
in
cmpsl
jo
ret
imul
mov
arpl
or
nop
fcmovnbe
pop
mov
jo
jmp
aaa
fstps
mov
daa
fidivs
jmp
out
insl
pop
leave
cmp
sahf
pop
mov
cmpsl
sbb
push
jb
adc
mov
addb
fstl
repnz
lret
cmp
mov
mov
shll
and
mov
adc
pop
cltd
inc
mov
in
mov
cmc
mov
xchg
push
call
mov
pop
push
dec
jge
mov
xor
rcrb
incb
loop,pn
xchg
lea
mov
xor
shrb
fstps
inc
sbb
and
jbe
fstpt
mov
movsb
push
dec
mov
pop
cld
inc
out
lahf
mov
aad
cmp
call
cmp
inc
xchg
insl
dec
pop
sub
add
inc
outsb
out
jbe
aad
loopne
imull
adc
div
inc
add
and
or
and
rcll
sbb
ss
dec
roll
push
pop
mov
adc
xchg
push
add
inc
cmp
pop
mov
cwtl
lods
mov
sahf
and
xchg
mov
mov
mov
outsl
mov
in
add
xor
xor
addr16
inc
movsl
dec
or
xor
shl
shl
movsb
filds
sbb
mov
push
inc
push
sub
shl
mov
mov
cltd
inc
mov
sub
jle
jg
push
outsl
adc
sbb
movsl
push
test
notl
sbb
jge
fiadds
or
xor
and
sub
sarl
push
mov
push
and
sbb
rclb
mov
scas
ficoms
adc
mov
daa
sbb
cmp
or
stos
xorl
dec
push
imul
xchg
push
das
sbb
adc
mov
lret
fwait
cld
inc
xchg
aas
sub
ds
sub
lret
xor
push
out
movl
push
add
pop
fmull
aam
adc
stos
inc
int
push
js
popf
cs
mov
cmp
pop
adc
into
push
fs
out
loop
jns
pop
lods
inc
sub
add
mov
sbb
pop
jl
or
cmp
xor
cmp
cmp
sbbl
cmpsl
hlt
cmp
adc
fmuls
jo
inc
sub
sbb
sti
xor
or
lahf
xchg
cmc
movsb
test
scas
adc
incl
sarb
sbb
adc
adcb
fists
cmpl
xchg
pop
leave
sbb
pop
fists
insb
mov
pop
out
cli
pusha
aas
jnp
mov
mov
insb
ds
push
ret
test
out
jnp
pop
inc
mov
sbb
xchg
mov
loope
push
mov
jmp
movsb
fldl2t
stos
popf
stos
add
pop
shl
lcall
and
pop
adc
ret
dec
pushf
jae
push
cmp
sbb
mov
test
adc
call
imul
push
lds
inc
adc
dec
jne
and
iret
daa
clc
pop
adc
and
xorb
push
fs
enter
push
jp
sbb
mov
mov
mov
dec
scas
sbb
jb
std
xchg
xchg
cmc
pushf
push
dec
and
jns
testl
stos
ficoms
insl
and
test
ds
out
mov
push
pop
sbb
xchg
insl
push
dec
call
lods
mov
adc
xchg
mov
test
pop
sbb
jae
cmp
dec
mov
sub
pushf
cmpl
scas
add
fdivrs
jmp
adc
loopne
js
cmp
mov
cmp
cmovle
or
or
pop
or
lret
xchg
pop
jp
dec
dec
loopne
jb
fwait
pop
cmpsb
jae
shrb
push
add
lods
lret
inc
pop
cs
dec
clc
or
scas
fdivrs
jo
adc
leave
pop
mov
ds
push
inc
insl
dec
repnz
rolb
push
into
or
mov
sar
loopne
imull
iret
pop
sub
call
data16
jg
adc
insb
fistl
cmpsl
mov
mov
fs
call
inc
call
sarb
div
aad
ds
lret
dec
stc
sar
pop
mov
mov
sub
popa
ds
std
add
mov
cmp
mov
in
mov
xor
sbb
mov
decb
and
cmp
mov
push
jecxz
mov
pop
add
test
xchg
aas
test
sarl
inc
jne
mov
jbe
ds
mov
jmp
push
xchg
adc
fildl
pop
or
int3
adc
data16
nop
jge
insl
fdivrl
push
hlt
jne
mov
rcr
and
lahf
fisubrl
add
dec
subb
out
mov
fcmovnu
gs
imul
stos
scas
movsl
xor
or
sbb
ret
inc
or
sub
xor
fistl
dec
add
ret
mov
mov
imul
adc
ret
gs
add
gs
lock
out
fst
mov
and
inc
xor
stos
push
enter
xchg
imul
lret
decl
or
or
inc
xor
daa
rcl
fistps
stos
aam
mov
testl
dec
jmp
xchg
mov
push
or
sub
mov
jmp
lahf
sbb
ret
mov
nop
add
es
xchg
and
jmp
ljmp
jecxz
push
stos
aad
xor
adc
fs
jmp
xchg
leave
mov
sbb
adc
les
xor
push
imul
cld
xchg
es
mov
adc
jo
test
rcrl
and
and
mov
das
jmp
pushl
xlat
lret
inc
iret
adc
fcompl
push
cmc
cmp
icebp
add
sbbb
cs
xor
in
xor
insb
aas
dec
ficoms
or
cmp
outsl
movsl
in
mov
pop
jmp
lahf
les
test
je
mov
dec
inc
sbb
and
fcmovb
pop
stos
jo
cmp
sbb
sub
mov
imul
mov
bound
mov
jg
and
inc
push
popa
int
pusha
sub
jae
out
dec
push
push
inc
das
push
shl
test
push
mov
jecxz
mov
filds
addr16
dec
iret
mov
pop
daa
mov
dec
jp
std
negl
push
inc
jecxz,pt
imul
out
and
mov
adc
fsubl
fwait
ja
insl
push
xchg
dec
outsb
jne
add
mov
xchg
cwtl
and
mov
xchg
dec
cmp
and
add
leave
ret
out
into
aad
mov
loope
out
out
mov
mov
xchg
lahf
cs
push
ja
mov
notb
addl
sub
jbe
pop
sbb
jmp
mov
aas
sub
bnd
jnp
push
cld
jbe
jecxz,pt
xchg
add
rolb
inc
fisttps
jae
jns
pop
outsb
je
mov
and
cld
loop
test
lock
jno
dec
sarl
or
in
out
push
daa
dec
out
shll
sbb
xchg
out
nop
sti
out
dec
cmp
int3
out
sub
cmc
test
mov
sbb
lds
mov
sbb
pop
fsubrl
mov
fldenv
push
aas
xchg
xchg
popl
scas
cmpsb
xor
sub
mov
lods
inc
scas
imul
repz
and
xor
jp
fdivr
shl
cmc
inc
or
pop
mov
loop
mov
push
and
cmp
popf
sub
adc
cmp
fdivs
cli
sbb
push
jo
dec
jns
push
out
pop
push
arpl
hlt
adc
sbb
mov
jmp
mov
add
rcll
loop
jl
psllw
in
jl
cmc
mov
fdivrl
ljmp
int3
pop
sub
rorl
jg
mov
push
sbb
mov
into
dec
scas
push
stc
cmpsb
push
mov
cmp
mov
push
mov
mov
js
cmp
dec
aad
jmp
movsb
mov
cmp
lret
sbbl
int3
push
and
add
push
rorl
add
push
and
mov
popf
out
push
lret
sbb
fnstenv
xor
int
xchg
std
mov
jmp
add
rcr
lret
sbb
aaa
les
repnz
test
push
adc
and
or
xor
push
dec
xor
inc
sub
xor
sbb
jl
and
shrb
in
stc
cld
mov
pop
cld
cmp
jbe
jecxz
mov
dec
aaa
dec
out
mov
icebp
decb
fucompp
pop
imul
xor
data16
ret
std
cmpl
inc
cmp
push
xor
mov
jb
mov
dec
xlat
insl
jno
hlt
pop
push
or
pop
mov
xchg
xor
iret
clc
fildl
mov
repnz
xchg
scas
and
mov
push
push
popa
xchg
nop
sub
push
add
mov
xor
adc
mov
mulb
imul
fyl2xp1
mov
test
cmp
aam
mov
loope,pt
cmp
jno
push
insl
js
push
pop
lahf
mov
jp
rorb
in
mov
pop
cmpb
or
adc
or
cltd
movsl
scas
cmpsl
ficompl
in
or
addr16
stc
xchg
jecxz
lret
pop
loop
mov
fisubs
mov
xor
jb
mov
fwait
push
pop
lret
sbb
fidivl
adc
test
dec
outsb
lds
sti
xchg
jl
rcl
aaa
add
sbb
stos
stos
push
cmpsl
jmp
add
sub
mov
test
inc
xor
and
int
jne
cmp
mov
leave
daa
push
pop
bound
pop
in
xor
lcall
arpl
sarb
lods
cmp
xor
cmp
inc
scas
imul
xchg
pop
into
cmp
pop
cmp
pop
outsw
shll
or
jns
dec
mov
mov
fptan
xchg
popf
stos
sti
cwtl
xor
inc
aam
and
lahf
adc
or
mov
and
or
je
adc
int
jbe
out
xor
jo
andb
mov
mov
and
inc
jns
push
movsl
hlt
test
mov
hlt
jl
add
insl
int
mov
mov
push
push
cmp
mov
pop
sahf
hlt
imul
enter
push
leave
sub
jl
stos
int3
cld
test
outsl
pop
stos
mov
push
mov
ret
lods
sub
movb
xchg
pusha
xor
sahf
fnsave
aam
adc
loop
test
ja
cmp
jl
mov
test
popf
cmp
sub
stos
addr16
pop
dec
jae
lds
jne
imulb
xchg
lahf
sbbb
arpl
jbe
cli
out
pop
dec
mov
imul
mov
inc
mov
xor
or
xchg
push
jle
je
inc
incl
pop
insl
pusha
inc
cmp
mov
stc
cmpsl
aad
pop
test
outsb
clc
fiaddl
testl
loopne
dec
sub
add
sbbl
add
xor
aad
fcmove
xchg
inc
cmpsl
pop
cld
sbb
jp
andl
push
mov
jo
sbb
aaa
dec
pop
arpl
xchg
cs
pop
insb
and
in
adc
and
mov
mov
enter
call
cmp
push
jp
jb
xchg
add
out
adc
dec
dec
or
nop
ficoml
xchg
mov
xlat
rcll
push
pusha
lea
fisubrs
jg
cmpsb
push
mov
insl
sub
jge
cmc
inc
scas
pop
inc
push
mov
dec
sbb
or
data16
movsl
in
negl
in
inc
gs
lret
into
sbb
or
inc
insb
scas
jle
lahf
sub
cmc
add
nop
call
clc
inc
or
popa
xchg
in
inc
xchg
sahf
fidivs
lret
mov
push
popf
jmp
loopne
push
ret
and
or
xor
inc
cmp
fldt
fnsave
in
adc
rolb
jl
enter
xchg
cmc
int3
dec
dec
inc
or
xor
cmp
pushf
dec
repz
xchg
idiv
push
or
sbb
jg
push
cmp
mov
ljmp
inc
cmpsl
in
je
jle
arpl
scas
mov
cmp
push
inc
sub
mov
mov
mov
adcl
idivb
adc
mov
test
jp
std
pop
icebp
pop
xchg
mov
pop
jno
dec
adc
mov
pop
mov
and
push
data16
loop
push
xchg
dec
jl
test
cltd
sub
dec
sub
jo
sub
cli
cs
adc
inc
arpl
ret
pop
dec
leave
js,pt
pop
std
mov
xor
xchg
aas
imul
pop
jae
cmp
cli
cmpsb
push
pop
xchg
lret
jle
aad
or
mov
sbb
and
push
cmc
jo
lret
mov
enter
sub
imul
push
jecxz
adc
push
xor
int3
mov
addr16
or
into
andb
cli
lret
inc
or
pushf
mov
cmp
iret
rcll
cmpsb
xchg
popa
pop
xor
andl
mov
fwait
inc
jns
sti
push
adc
iret
sub
test
mov
xor
jns
xor
mov
lahf
aam
mov
sub
ror
imul
enter
pop
imul
jmp
xlat
push
and
cs
aas
push
int3
sub
insl
shl
scas
in
ja
orl
push
mov
add
xor
cltd
leave
inc
add
lds
fmul
ja
xlat
testb
pop
jl
scas
sub
xchg
sub
ud0
xchg
es
cld
in
das
in
clc
mov
int3
pop
in
imulb
outsl
sub
mov
outsb
insb
pop
xlat
xor
inc
ds
ja
lods
inc
in
rorl
add
shl
popf
mov
and
adc
repz
mov
xchg
sbb
fisubrl
aam
mov
sti
or
aam
imul
in
inc
mov
icebp
in
testb
lds
gs
adc
or
adc
cmp
jne
jg
into
pop
and
dec
jge
inc
add
mov
pop
shll
rcrb
add
cmp
scas
sub
cmpsl
add
rol
xor
out
shll
sbb
es
xlat
aam
push
dec
mov
adc
dec
add
icebp
jl
popf
mov
sbb
bound
lds
loop
imul
aas
mov
subb
out
xchg
xchg
fisubrl
addr16
pusha
jmp
push
push
arpl
xchg
les
subb
scas
inc
mov
outsb
mov
and
mov
mov
jl
mov
xor
mov
mov
push
mov
stos
loop
sub
and
in
cld
mov
in
fs
or
dec
sub
daa
les
jnp
pop
xchg
sub
adc
mov
movsl
in
sub
xorl
or
pop
sbb
add
leave
bndldx
cs
push
call
mov
mov
xorl
cmpsb
dec
xlat
cmp
push
cld
mov
jmp
mov
repnz
loopne
xchg
adc
push
jo
call
into
adc
fwait
push
fsubrl
pushf
xor
cmp
das
mov
lock
pop
pop
aaa
out
jb
pop
cs
cmpb
rcll
aam
xchg
adc
out
xchg
rcll
mov
lods
into
in
flds
sub
std
push
jae
out
xchg
jo
enter
xchg
insl
pop
icebp
mov
orb
pop
insl
jne
xchg
movl
xlat
mov
movsb
mov
adc
sbb
pop
inc
sbb
iret
inc
xchg
sbb
lret
push
daa
xchg
xchg
mov
dec
js
scas
insb
or
cmpsl
pop
or
lock
out
les
pop
and
mov
outsb
sub
add
xchg
fidivrl
pop
inc
adc
push
inc
sub
lret
sub
push
dec
lea
rolb
jb
push
out
les
in
mov
push
clc
scas
dec
fst
mov
movsb
lock
imul
dec
inc
mov
movb
nop
mov
pop
pushf
mov
and
mov
mov
shlb
jg
rcll
push
push
push
aaa
iret
adc
ret
mov
cmpl
cmp
mov
sub
jnp
cmc
fistl
jae
pusha
xchg
std
sarl
sbb
cli
in
xor
loop
lret
nop
add
xchg
sarl
or
xor
pop
mov
xchg
adcb
iret
rcrl
dec
repnz
xor
test
xor
lods
cmp
mov
push
dec
pop
mov
lea
adc
aas
dec
and
imul
push
jmp
adc
add
mov
test
or
pop
mov
mov
loopne
roll
fidivrl
or
mov
sub
xlat
jp
in
inc
inc
inc
jl
sbb
xlat
mov
out
jo
dec
xor
jge
cmpsl
or
push
mov
pop
mov
cmp
mov
xor
cmpsl
cmpsb
inc
lock
adc
add
movsb
mov
add
mov
loop
lods
call
cmp
adc
push
xor
test
fistl
adc
and
daa
ljmp
outsl
test
jmp
mov
imul
movsl
xchg
in
xor
sub
xchg
adc
out
and
sbb
pop
cltd
setns
in
nop
lods
dec
insb
icebp
inc
jns
pop
pop
mov
xchg
or
mov
mov
mov
xor
cmp
add
push
fstps
lea
stc
mov
imul
in
shlb
mov
out
push
hlt
pop
sub
test
xchg
dec
sti
jecxz
cmp
stos
pop
out
sub
mov
out
push
push
xor
xor
sbb
or
add
pop
fsubrp
popa
ss
imul
push
pop
cmc
xor
inc
pop
in
lds
ljmp
push
mov
fmul
mov
aas
loope
stc
jo
xor
inc
cmp
scas
in
fdivrp
push
sarb
mov
push
mov
out
loop
jns
cmp
jl
dec
test
cmpsb
orb
addr16
inc
mov
jg
mov
jg
popa
loope
out
jne
movsb
xor
lods
inc
rcll
test
sub
mov
fdivrl
mov
rorl
pop
xchg
adc
aas
fs
and
push
mov
sub
pop
xchg
test
mov
lret
adc
lods
jb
cli
insl
fmul
cwtl
cmp
repnz
adc
jge
fdiv
popa
gs
ja
lcall
push
mov
jae
call
stos
and
movsl
adc
arpl
fistpl
xchg
pop
out
xor
lcall
sbb
mov
aaa
loopne
or
dec
push
out
adc
xchg
add
mov
ja
dec
mov
xor
xor
shrl
in
xchg
imul
lea
sbb
mov
in
push
cmpl
mov
sub
hlt
in
shlw
lock
out
add
xor
shll
pop
inc
das
mov
xlat
xor
jo
popa
mov
jb
xor
dec
adc
mov
push
xchg
dec
pop
cmp
stos
dec
lcall
setg
fistpl
cmp
mov
mov
xchg
stos
enter
addr16
loop
gs
outsb
mov
mov
xor
or
adc
push
imul
ss
sub
jl
popa
mov
in
into
xchg
fnstenv
mov
mov
loope
scas
insb
stc
mov
or
push
sbb
mov
adc
inc
in
outsl
sbb
inc
xor
loopne
scas
mov
gs
push
mov
push
icebp
bound
mov
cmp
nop
sbb
mov
and
in
hlt
add
scas
in
push
loop
or
stc
clc
xor
and
mull
jae
sbb
ljmp
mov
lcall
ljmp
or
je
mov
mov
mov
in
divl
scas
mov
je
cmpsb
or
cli
scas
jo
jg
pop
stos
cltd
mov
dec
fldcw
and
ss
lahf
and
lds
loope
cmc
xchg
hlt
mov
mov
sub
shrb
jo
push
dec
cmovs
or
sub
cs
mov
jmp
idivb
jmp
sbbb
test
stos
negl
frstor
lahf
mov
or
mov
push
movsl
inc
jecxz
out
sbb
mov
jno
add
ret
fs
push
imul
sub
xchg
lret
dec
das
xchg
dec
pop
and
xchg
nop
inc
mov
int
cmp
sarb
lret
dec
or
mov
jle
lods
inc
add
jo
sbb
xlat
mov
adc
imul
cmc
decl
ret
repnz
adc
std
jno
inc
negl
lods
push
cmc
xor
ds
inc
int
xor
int3
and
inc
popa
push
lods
sbb
add
imul
fdivrl
enter
inc
sbb
adcl
loopne
nop
rorl
add
fsubl
out
push
test
push
sbb
sub
jle
out
out
mov
popf
cmp
data16
fldl
cmc
loopne
stc
adc
push
js
dec
or
pop
mov
pop
mov
jp
je
or
xchg
pop
and
and
in
push
movsb
mov
in
rol
ret
js
sub
cwtl
xor
pop
xchg
lock
adc
leave
pop
leave
xor
lods
data16
not
pop
es
mov
mov
sub
dec
sub
sub
pop
or
push
sahf
xchg
lock
jne
add
enter
cmpsb
out
adc
fs
insl
add
rol
fdivr
nop
int3
insl
pop
das
inc
cmp
push
bound
lods
bound
push
dec
inc
add
mov
and
jb
sbb
pop
jp
idivl
cmp
fimuls
imul
push
int
sub
int
mov
repz
aas
pop
jmp
imull
scas
in
lahf
ds
mov
push
cmp
ja
clc
in
and
or
lock
aad
icebp
lods
in
sub
aad
fwait
test
lcall
adc
addl
stos
iret
testl
mov
inc
addr16
and
enter
test
mov
lcall
add
int3
cmp
das
cmp
addr16
insb
jb
shl
adc
aam
outsl
insb
cmp
cltd
dec
mov
mov
pop
sub
fstps
sbb
das
mov
out
xlat
sahf
mov
mov
mov
notb
and
das
mov
mov
pop
push
mov
jnp
push
mov
mov
and
test
dec
and
xor
sub
popa
jg
adcl
sub
int
fimull
pop
jp
dec
nopl
mov
fwait
in
pop
int
movsl
or
jne
lea
es
ds
test
sbbb
pop
testl
movsl
outsl
inc
pop
mov
popf
jae
out
pop
mov
lcall
mov
adcb
fdiv
lea
mov
fisttpl
insl
in
xchg
and
add
enter
pop
dec
jo
sub
outsl
nop
jmp
mov
jmp
enter
mov
addr16
cld
or
out
sysexit
sub
push
outsb
add
add
xor
mov
xor
fistpl
dec
scas
ret
sub
aam
loope
std
ss
stos
or
cmp
insb
inc
jnp
icebp
repz
sti
icebp
jmp
out
jecxz
xor
mov
xchg
mov
stos
add
or
mov
jo
fldpi
cmc
ret
dec
add
in
mov
xorb
pop
fidivs
outsl
icebp
mov
or
and
cmp
mov
outsb
add
adc
orl
mov
adc
clc
jl
push
in
insl
cli
adc
leave
mov
mov
jmp
gs
push
arpl
lock
mov
push
lods
das
pxor
cmp
pop
lods
xor
aad
xchg
int3
pop
mov
sbb
shrb
mov
jnp
mov
outsb
notb
jp
inc
cmp
adc
pop
ret
scas
jnp
xchg
mov
xor
push
xchg
sbb
das
shlb
push
xchg
ficoms
jo
adc
rorb
xchg
or
fistpl
dec
fwait
inc
pop
sub
add
mov
pop
mov
pop
iret
mov
js
int3
mov
jb
cltd
sub
cwtl
daa
xor
xor
push
insb
fistpl
lods
sub
insb
sar
jle
jnp
cltd
enter
cmc
adc
shll
leave
xlat
sub
test
dec
sub
add
add
cmp
dec
cmp
sub
les
sbb
hlt
or
cltd
xor
jle
loopne
mov
adc
popl
std
ljmp
push
push
sub
pop
xorl
enter
lea
push
aam
lret
xchg
xchg
rcr
push
in
dec
cmp
push
mov
push
popa
lock
cmp
adc
ret
fstps
aas
fnstenv
xchg
pushf
adc
xor
jae
call
sti
imul
jbe
dec
imul
xchg
test
dec
or
mov
mov
xchg
pop
inc
xchg
sbb
pusha
faddl
shrb
xor
or
cltd
mov
cwtl
and
or
loop
dec
sub
popf
shlb
popl
divl
leave
mov
mov
shr
inc
imul
inc
mov
mov
into
icebp
push
sar
nop
or
insl
dec
fwait
data16
mov
rcrl
sub
cmp
sahf
adc
lret
jno
jae
hlt
and
add
pushf
lahf
js
jg
scas
jno
sub
cwtl
jbe
adc
xor
pop
popa
cmpsb
push
inc
adc
ret
sahf
push
xchg
jecxz
cmp
push
inc
cmp
or
lock
or
aad
jl
xchg
inc
shlb
add
fistps
ret
or
std
insl
mov
cli
bswap
mov
popf
or
mov
add
mov
pushf
popf
cli
dec
mov
lea
pop
shrb
ret
stc
inc
cltd
mov
fcompl
dec
lods
mov
fdivrl
mov
popa
and
movsl
movsb
pop
lock
lahf
cs
or
shlb
xorb
mov
push
cmp
lret
pop
xor
pop
mov
int3
nop
jmp
adcl
push
and
dec
xor
test
mov
movsl
fnstcw
xchg
orb
daa
jge
mov
int3
sbb
cmp
mov
imul
cmp
ret
mov
and
lahf
pop
mov
outsl
hlt
dec
lock
jg
out
pop
jnp
movsl
aas
outsl
cmp
jne
lods
out
aam
xchg
orl
decl
xlat
mov
xchg
pop
adc
imul
ror
data16
lea
mov
jb
sub
mov
out
mov
ret
repz
xor
popf
cltd
or
leave
iret
rorl
adc
push
imulb
cmp
stc
fwait
and
mov
mov
je
pop
cmp
lahf
inc
mov
inc
cmp
xor
icebp
int
xchg
lea
cmp
inc
cmp
jmp
test
pusha
xor
dec
or
pop
outsb
ret
mov
imul
addr16
xor
pop
cld
sub
xchg
inc
jge
inc
dec
mov
xchg
jp
ja
mov
push
outsb
iret
dec
fildll
mov
mov
pop
mov
adc
or
pop
cli
out
xchg
add
or
cltd
insb
push
push
or
repnz
mov
pop
and
lods
mov
in
fidivs
into
in
pop
stos
adc
aaa
mov
ret
and
dec
or
enter
adcb
testl
out
lods
dec
xchg
cmp
pusha
shlb
jl
cmc
sub
lret
jp
push
xchg
xor
ud1
in
ja
add
out
mov
pusha
pushf
fs
or
push
adc
inc
mov
cwtl
adc
sahf
cwtl
hlt
push
xchg
lods
xchg
bound
fstpt
clc
mov
iret
out
jle
pop
mov
cmp
mov
jno
mov
pop
jecxz
sbb
cmp
shl
or
cmp
mov
push
test
inc
scas
jb
adc
nop
xor
mov
add
test
xchg
xchg
cmp
je
and
xchg
enter
xchg
popf
mov
rcl
dec
call
dec
out
stc
adc
dec
push
push
in
cli
fwait
dec
push
mov
xchg
mov
aas
ret
inc
inc
jne
mov
sti
lock
lock
insb
stos
inc
adc
sub
xchg
stos
sbb
enter
mov
cwtl
shll
and
dec
das
lahf
ljmp
cli
or
dec
cmpsb
rolb
sti
dec
sbb
lcall
push
add
mov
jne
pop
notb
mov
mov
pop
push
and
shrb
movsb
shl
cmp
pop
cli
or
and
in
fs
pusha
cmp
fistl
in
push
adc
jo
movsb
mov
jno
lret
ret
sahf
sbb
shlb
xor
iret
jo
sbb
andb
mov
or
jl
imul
push
cmp
xchg
xor
xor
pop
mov
xchg
shrl
or
push
adc
lahf
dec
pop
repz
stc
mov
pusha
jb
jne
jae
mov
imul
flds
repz
mov
dec
xchg
ret
or
sbbb
loope
adc
jge
add
xchg
scas
xchg
pushf
jl
loop
and
out
ret
or
lods
mov
push
sub
xchg
push
mov
or
mov
push
sub
mov
jo
rorl
mov
add
mov
fucomp
cli
aaa
out
loope
push
lds
dec
jnp
arpl
and
cmp
ror
and
popa
xchg
sub
add
sub
hlt
xchg
dec
jge
adc
mov
mov
outsb
mov
mov
push
into
subl
outsl
push
pop
jmp
imul
icebp
gs
clc
in
scas
lcall
repnz
pop
shll
dec
adc
add
fmull
fwait
stc
or
lods
add
sub
pop
pop
rclb
jl
xor
pushf
out
mov
xor
out
incb
xchg
out
jno
mov
fs
pop
daa
cmpsl
dec
mov
stos
pop
lret
cmp
mov
icebp
xor
mov
ja
shlb
jle
xchg
subb
sub
jle
xchg
and
add
lahf
idivl
dec
jmp
xchg
push
fsubrs
cmp
xor
lods
in
lret
cmp
call
lock
loopne
cmpsl
jmp
adc
pop
ss
nop
int
insb
lret
xor
inc
int3
adc
xchg
je
push
dec
sbb
mov
xorl
dec
outsb
dec
out
mov
aaa
daa
lods
neg
adc
rclb
push
dec
cmp
mov
int
mov
leave
push
push
sub
push
aaa
pmuludq
push
add
mov
sbb
lret
cld
mov
mov
mov
call
addr16
nop
mulb
js
les
lahf
arpl
add
mov
inc
mov
call
xchg
lods
scas
jbe
mov
lods
adcb
fidivrs
loopne
gs
and
pop
fcomps
inc
inc
dec
fwait
fs
cmp
shrl
stos
loopne
je
ror
mov
mov
mov
mov
das
outsl
xor
jb
pop
mov
pop
xor
insl
jne
stos
pop
add
sub
mov
jo
xchg
pop
out
ret
inc
test
pop
and
or
push
push
clc
loope
addr16
aad
push
cmp
in
mov
mov
mov
xchg
dec
and
popf
int
fsts
xchg
push
add
scas
mov
cmp
out
popa
ja
mov
xchg
push
outsl
cld
push
or
sar
push
fcomps
pop
jbe
fdecstp
add
add
repnz
fldl
sub
sub
jl
cmp
add
xchg
out
je
lock
push
nop
jno
mov
push
std
aad
xchg
out
mov
repz
or
shrb
test
filds
pop
sbb
scas
dec
dec
pushf
jge
and
push
mov
ret
fwait
add
inc
or
jae
sub
fcomp
ret
jbe
pop
js
adc
add
mov
lcall
mov
clc
mov
mov
cmp
pop
jg
pop
jne
jo
outsb
xchg
bnd
jns
shll
jnp,pt
sbb
sub
and
and
pushf
int
std
mov
ret
sub
mov
mov
jb
test
orb
out
leave
cmp
mov
into
xor
aaa
jecxz
mov
lods
mov
fcoms
stc
sbb
popa
adc
jnp
mov
loop
call
aad
rol
push
popa
push
jmp
jae
pop
sbb
jle
xchg
jge
out
push
jge
jle
cs
add
icebp
mov
in
fidivrl
xor
jbe
adc
push
inc
push
inc
jmp
shrl
xchg
ficomps
jge
outsl
insl
js
jnp
mov
push
pop
push
jae
jns
aad
fadds
pusha
andb
jno
sbb
cmp
or
neg
mov
inc
or
test
cmpsl
movsl
out
leave
lods
inc
mov
fstps
cld
dec
add
xor
and
push
dec
sahf
jl
aam
dec
fistps
in
les
dec
jle
sbb
mov
andb
inc
mov
mov
aas
ljmp
mov
out
loop
inc
cltd
dec
inc
mov
loop
leave
or
lret
xor
adc
adc
leave
xchg
push
sbbb
fimuls
data16
sub
sub
push
cld
xor
ds
imul
xchg
outsl
mov
push
and
push
jns
mov
popf
stos
outsb
and
jmp
js
jmp
pop
jmp
cmp
xor
aas
mov
sbb
out
sahf
lea
repz
cltd
dec
cmp
adc
dec
js
mov
and
sub
and
inc
addl
fadd
pop
xor
cs
les
cs
repz
mov
jbe
cld
scas
xor
daa
scas
pop
dec
mov
xor
xchg
hlt
sarb
mov
hlt
hlt
push
mov
and
sub
repnz
cmp
mov
sti
loopne
pop
add
fiaddl
imul
xor
aas
pushl
pop
inc
mov
aad
sbb
inc
ret
std
add
adc
inc
xor
mov
and
jle
repnz
aam
pop
xor
push
jl
fistpll
arpl
movsl
mulb
test
or
sub
js
repz
mov
into
mov
dec
cmp
fidivl
inc
jne
sbbl
mov
mov
mov
fmull
in
call
jno
lods
arpl
xchg
xor
adc
les
outsb
mov
js
pop
test
sub
sub
out
sub
pop
popa
mov
add
push
fisubrs
in
lret
insl
imul
jg
jecxz
and
rorl
mov
test
adc
xor
data16
shll
lret
and
inc
iret
pop
or
loope
and
cs
shll
dec
cmc
rorb
mov
bound
movsl
or
pop
enter
test
xor
cmp
push
push
bound
out
lcall
fistps
iret
inc
ds
jp
push
sub
push
cmpsl
cmpb
pushf
push
aad
cli
push
cmc
mov
rcrb
cmp
mov
insl
add
mov
data16
jle
arpl
repz
xchg
cmp
jne
inc
aam
ror
push
fwait
mov
fbstp
push
xchg
push
or
and
cld
std
outsb
cwtl
push
mov
pop
mov
shrb
ret
jge
mov
sub
loopne
ss
dec
xchg
mov
ja
push
out
mov
pop
paddw
mov
outsb
inc
or
out
fs
mov
mov
insl
and
mov
callw
fdivs
fbstp
mov
add
jl
fs
repnz
nop
mov
pop
sub
dec
fnstsw
push
repz
push
inc
inc
or
xor
pop
adc
push
pop
mov
test
xchg
loop
pop
popa
out
xlat
in
enter
add
adc
push
add
or
icebp
fistpl
jnp
push
enter
or
dec
lret
jmp
push
adc
call
repz
push
jl
enter
and
and
popa
or
jg
loop
pop
mov
test
cmpsb
push
mov
ror
mov
fimuls
xchg
shlb
or
and
jp
and
mov
es
mov
jns
fwait
mov
adc
add
rolb
fwait
xor
out
push
adc
test
mov
xchg
pop
jno
adc
stos
mov
mov
lret
sbb
packssdw
out
inc
xor
sbb
pop
add
add
mov
out
mov
aaa
cmc
mov
fcomi
pop
xchg
mov
dec
popf
sub
add
adcb
xchg
js
pushf
outsl
dec
sbb
and
lret
aas
jge
ficoms
lret
mov
sbb
in
adc
mov
pop
and
or
out
inc
movsb
pusha
add
mov
or
cmp
stc
incl
sub
fistps
mov
xchg
pusha
sbbl
lcall
insb
jbe
ljmp
xchg
lds
mov
mov
mov
adc
loopne
pop
ljmp
pop
iret
ror
inc
pop
movsb
andb
cmp
movsl
loope
jbe
fldl
insl
mov
add
lcall
and
xchg
push
sub
inc
in
arpl
pop
lock
push
adc
lcall
xchg
add
inc
ret
stos
mov
lock
pop
jns
pop
in
pop
fsubl
rcr
mov
pop
scas
pusha
shr
sbb
jns
rcrl
cli
lea
mov
sbb
xlat
cmp
pop
jmp
xor
mov
cmp
add
add
lret
std
test
jne
inc
inc
cltd
inc
icebp
dec
mov
nop
mov
cwtl
pop
and
into
aaa
and
fstps
cmc
and
sahf
mov
out
push
xor
clc
adc
mov
push
xchg
sbb
imul
inc
dec
inc
lods
lods
inc
push
pminsw
push
rorl
cmpsl
jg
dec
leave
pop
movsl
int
shlb
sbb
lock
loope
out
pop
inc
cmp
std
mov
and
add
rolb
int
mov
scas
call
out
add
and
fisubrs
dec
or
xchg
std
imul
pushl
fs
dec
int
ret
cmp
cmp
cli
fists
enter
aad
dec
popa
shlb
mov
mov
mov
fbstp
pop
pop
and
inc
mov
test
xor
push
xchg
cli
shl
and
in
push
jp
xor
and
xchg
pop
and
mov
stos
aas
pop
lret
jecxz
mov
push
add
jmp
test
imul
or
jle
mov
ret
pop
inc
dec
and
xchg
xor
fisttpll
call
loopne
add
mov
loopnew
ja
jbe
pop
popa
cmp
repnz
jg
iret
ret
xchg
and
scas
mov
popf
in
mov
ret
mov
loop
shlb
or
je
sbb
cmp
jge
popf
ret
or
ds
hlt
and
sbb
dec
nop
sarb
fisubs
inc
pop
pop
mov
lcall
aas
mov
hlt
cmp
enter
mov
rol
adc
adc
mov
add
and
cmpsb
movsb
fwait
cwtl
jmp
das
shlb
mov
sbb
call
push
repz
xchg
jge
xor
icebp
insl
xchg
scas
loopne
mov
cmp
into
pusha
and
or
dec
mov
xchg
sub
in
jnp
jle
out
or
adc
int3
cwtl
divb
dec
pop
or
cmp
out
cmc
cmp
push
mov
shlb
stos
mov
mov
sub
or
cmc
xchg
jmp
xor
mov
mov
inc
add
mov
adc
dec
repz
pop
lcall
aad
xchg
sbb
adc
sarb
cli
add
or
jo
mov
cmc
jo
mov
push
add
stos
jb
cld
add
jl
and
sbbb
push
or
or
jno
into
hlt
or
mov
enter
flds
mov
test
mov
pop
ret
loope
pop
cmc
mov
cmp
mov
add
push
xchg
cmp
cld
or
xor
enter
les
orb
inc
cwtl
inc
xchg
add
inc
push
push
inc
dec
or
or
outsb
pop
jnp
and
or
sarb
call
ficomps
arpl
pushl
push
lods
push
movd
mov
fsubrl
sbb
sbb
dec
gs
push
lret
iret
test
jns
orb
fdivs
loope
rol
xor
xor
mov
dec
inc
or
cmp
ljmp
fnstsw
jp
outsl
cmp
loope
fcmovbe
loopne
xor
js
inc
inc
push
pop
cmp
loope
push
stos
or
pop
dec
push
mov
shll
lret
sub
in
lret
test
pop
ret
cmc
jmp
mov
lahf
add
fcmovbe
adc
jb
loope
xchg
sbb
pop
lock
cmpsb
in
fisubrl
cmpsb
cli
je
pop
mov
out
push
ret
pop
mov
mov
add
fcomp
mov
imul
push
mov
cmpsb
fcomps
dec
jl
frndint
data16
dec
repz
jne
movsl
and
mov
push
outsb
adc
jno
nop
push
ret
inc
push
push
int
sub
std
insb
neg
gs
in
dec
xchg
mov
scas
inc
sub
inc
mov
fs
loope
dec
mov
in
pop
lea
pop
mov
scas
adc
mov
inc
roll
push
mov
call
out
push
jg
inc
and
ret
xor
sbb
outsl
lock
push
fmul
sub
in
and
jne
adc
clc
je
test
jb
push
xorl
rcrl
mov
xchg
mov
and
cli
rorl
fwait
cmpsb
cwtl
sub
dec
rcll
ljmp
cmc
lock
push
or
dec
out
adc
int
sahf
mov
imul
jno
out
jnp
sbbl
cmp
popf
jmp
cmp
inc
or
test
dec
movsb
sti
pop
jecxz
mov
std
fs
xor
jp
bound
sbb
enter
out
push
cwtl
cld
das
mov
xchg
mov
imul
test
adc
mov
repnz
xchg
fcomip
mov
dec
or
pop
repz
adc
pop
xor
cmc
lret
pop
iret
call
les
mov
js
jg
imul
cli
inc
pop
xor
fnstcw
pop
mov
dec
clc
cwtl
add
ljmp
xchg
arpl
pop
out
xchg
or
test
add
lret
xchg
inc
push
rcl
xchg
mov
jbe
pushf
mov
inc
sub
lret
stos
sub
xchg
xchg
jbe
cmp
mov
movsb
fchs
aad
in
xor
fwait
xor
xchg
dec
add
popa
pop
xor
pop
xorb
jl
dec
xor
in
add
icebp
push
movsl
std
movsl
imul
repz
imulb
jbe
outsl
repnz
mov
mov
sub
test
xchg
enter
imul
push
fwait
dec
sarb
push
cld
fbstp
scas
mov
adc
fwait
stos
dec
mov
les
xor
rcrb
xor
and
lcall
or
mov
xor
adc
sbb
add
or
adc
enter
es
inc
arpl
jmp
mov
enter
mov
shl
xchg
mov
cmpsb
or
imul
cmp
mov
sub
inc
int3
xchg
sbb
scas
out
scas
cwtl
orb
mov
or
sub
dec
cli
mov
jno
add
daa
popa
inc
in
mov
sbb
mov
push
repz
sbb
sbb
mov
jno
repnz
mov
xor
insb
dec
cld
sub
popf
dec
dec
les
xor
in
iret
scas
ficomps
jecxz
pop
pop
or
sub
mov
jns
inc
jmp
aas
mov
out
mov
fld
out
sub
sub
sar
xchg
imull
fimull
pop
mov
mov
roll
dec
and
movsl
pop
test
jge
inc
int3
fwait
pop
incl
jae
outsb
nop
xchg
push
mov
jge
ror
mov
out
mov
in
stos
idiv
fcoml
dec
movsb
or
mov
jecxz
pop
leave
mov
rcrl
pushf
adc
lahf
mov
pusha
add
inc
adc
fs
sub
lea
push
or
or
push
ss
inc
aad
mov
mov
fs
add
out
bnd
xor
add
in
sbb
cmp
clc
cmp
daa
lods
lcallw
fcmove
mulb
popf
mov
es
jle
sti
sbb
nop
and
dec
push
mov
mov
rclb
mov
push
shll
or
mov
jl
push
add
stos
mov
mov
test
jmp
adc
xorl
into
popf
popf
pop
dec
in
aam
cld
cmp
pushl
mov
notb
push
call
mov
inc
pop
dec
mov
add
int
push
mov
orb
es
adc
outsb
lods
and
jge
daa
mov
lret
cmp
pop
nop
push
sub
dec
hlt
sbb
xchg
mov
sub
movsb
pusha
mov
lret
dec
stos
cs
and
push
leave
push
rcrl
mov
inc
jge
dec
mov
xchg
test
add
insl
xor
js
pop
dec
mov
scas
and
testl
roll
cli
pop
pop
xchg
mov
mov
subb
sub
out
mov
gs
in
into
fcomip
sti
lock
mov
sub
xor
pop
fiaddl
cwtl
mov
mov
push
pop
xor
fbld
adc
jp
fucomip
scas
mov
outsb
shrl
pcmpgtb
aam
daa
inc
fnstsw
shll
mov
cli
jmp
in
mov
loop
cld
loope
negl
xchg
sub
fs
xor
arpl
mov
nop
out
mov
sub
rolb
mov
stos
push
bnd
arpl
mov
sar
pusha
push
into
test
icebp
and
repz
mov
sbb
adc
jmp
rcrl
in
ds
jnp
fsts
fsubrl
cltd
pop
xchg
fdivrl
or
pop
out
adc
mov
dec
in
and
push
jnp
rolb
loop
cmpsb
inc
inc
xlat
fs
popa
out
xor
scas
arpl
mov
dec
xor
xlat
push
dec
or
mov
jge
pop
adcb
iret
fmull
xchg
xchg
lock
or
jno
xchg
mov
das
popf
dec
mov
shlb
ja
jae
dec
adc
cmp
stos
lahf
xor
ret
sarl
leave
nop
sarb
fsub
sbb
push
shl
push
rclb
xor
lret
in
repz
mov
aas
add
dec
pop
pop
xchg
fidivs
enter
jnp
fwait
cmpl
dec
imul
cmp
jae
jl
sub
mulb
arpl
fistpl
ja
out
scas
mov
sarb
sti
cmc
ret
xchg
dec
and
insb
rcrl
dec
pop
cmp
setp
xchg
cmp
dec
mov
imul
jns
mov
mov
loopne
fcompl
test
xor
jae
aam
pushf
lock
mov
xchg
add
sub
add
test
negb
lret
jmp
lcall
sub
mov
jae
fildl
sbb
adc
test
jno
inc
jbe
cmpl
and
cmp
out
adc
xlat
lods
fldl
xchg
cmpsl
adc
dec
scas
dec
les
sbb
xchg
loopne
pop
aam
lods
popf
inc
das
sbb
aam
clc
dec
and
adc
test
jno
jo
lods
adc
rcrl
fwait
in
out
dec
push
jp
dec
es
pushw
cmp
inc
mov
inc
insb
clc
jge
and
inc
push
inc
cld
ret
adc
sub
adc
sub
incb
mov
xor
xchg
lcall
and
rcl
or
jno
imul
rorb
ficoml
fbld
pop
and
cmpsl
jge
inc
jge
mov
mov
gs
loopne
mov
int
fdiv
fcmovnb
clc
inc
clc
loope
ret
test
shrl
shlb
inc
subl
sub
movsb
inc
sbb
inc
clc
imul
and
and
in
test
adc
cli
push
sbb
dec
mov
xlat
testb
repz
or
mov
in
push
out
mov
rcrb
clc
push
jb
scas
dec
fsub
inc
or
add
push
dec
pop
dec
jae
pop
cmp
lods
push
xor
fdivrs
xor
fidivl
scas
imul
xchg
sub
lret
push
je
insb
clc
pop
pop
xchg
ja
xor
aas
jno
jnp
popa
imul
push
pop
cmp
mov
lret
cmp
imul
call
clc
repnz
aaa
adc
stc
dec
add
shr
mov
dec
jbe
jecxz
xchg
jle
cmpsl
data16
adc
jl
popf
fstl
xchg
std
jb
cmp
ss
inc
ja
sub
lret
adc
sahf
fsts
mov
sbb
mov
data16
lretw
jbe
loope
sub
dec
jg
sbb
dec
in
sub
fsub
jmp
movsb
or
popa
fsubrl
sbb
xor
sbb
add
push
pop
sbb
rep
mov
addl
popa
lea
popf
add
adc
jb
and
push
mov
dec
leave
lcall
imul
add
sub
std
mov
pop
roll
dec
mov
sbb
idivb
adc
mov
aas
test
mov
xor
inc
nop
cmp
jmp
cmp
sahf
out
push
out
mov
scas
out
int
xchg
fmull
fsubr
inc
es
arpl
adc
cli
xor
mov
out
cmp
mov
fstl
and
add
shll
dec
cmp
or
dec
push
shlb
in
push
jge
addb
inc
loopne
mov
add
jae
adc
cli
push
pop
divl
out
stos
idiv
push
xchg
jp
dec
sbb
popa
jp
xchg
mov
out
scas
shll
push
scas
sbb
stos
pop
lret
push
pop
aaa
rcll
cwtl
das
add
mov
fdivrl
cmp
repz
dec
xor
push
push
iret
dec
divl
ror
test
mov
adc
adc
push
sbb
push
gs
jb
jl
mov
loope
cmp
fcoms
gs
ja
pusha
enter
imul
stos
call
mov
inc
cwtl
xchg
cmp
add
jg
out
xchg
out
fnsave
enter
push
js
nop
stc
std
fdivs
sbb
les
mov
adc
xor
add
jecxz
mov
sbb
repz
imul
rolb
leave
ljmp
imul
add
sbb
aas
sahf
xor
ret
add
inc
push
rol
fsubp
sub
jp
fwait
mov
test
into
testb
push
or
mov
mov
push
in
fsts
xchg
or
insl
andps
inc
mov
js
jns
jb
cltd
and
mov
add
mov
mov
mov
lds
lahf
test
aad
hlt
adc
mov
iret
and
loopne
shlb
inc
push
jg
scas
call
fimuls
aad
adc
add
fs
ljmp
inc
adc
lds
arpl
inc
mov
add
pusha
xor
popf
xor
push
xbegin
pop
mov
push
xor
push
cli
pop
push
fisttps
jne
test
push
xchg
pop
scas
mov
mov
add
roll
cmp
jmp
data16
mov
inc
mov
xor
push
std
push
testb
pop
inc
inc
mov
scas
addl
push
sbb
jmp
cli
test
fwait
adc
push
sti
and
lcall
sbb
and
adc
movsl
decb
imul
jg
lds
sbb
daa
xchg
fistpl
lcall
and
pop
arpl
cmovne
shlb
arpl
call
pusha
pop
fmul
sahf
negl
inc
push
insb
andb
mov
or
in
pop
insl
sbb
mov
mov
mov
mov
and
in
jne
adc
push
ljmp
je
jb
add
popa
mov
leave
in
push
or
and
lret
js
mov
dec
sbb
in
cli
les
cli
call
inc
adc
cs
add
xchg
pop
jne
fwait
mov
inc
or
or
sbb
shrb
test
add
fld
hlt
dec
shrl
inc
adc
sub
fstps
stos
setb
xchg
pop
andl
xorb
push
jmp
fdivs
outsl
or
out
jnp
shlb
push
rcrb
insl
sahf
idivl
cmp
test
fs
cmp
jp
repz
inc
int3
ficomps
pop
jno
test
mov
pop
roll
and
daa
ficoms
movsb
f2xm1
mov
ret
or
mov
or
shlb
fstpt
test
jae
mov
xor
xchg
and
mov
xchg
xchg
imul
pop
and
sbb
mov
sbb
and
mov
push
out
shlb
call
xor
dec
jge
sub
inc
push
in
out
adcl
inc
push
mov
sbb
and
addb
push
jo
mov
mov
mov
jg
icebp
movsb
and
add
sahf
ss
int
cmp
into
rdpmc
stos
clc
pop
dec
ja
sub
addb
hlt
add
fsubp
jmp
cmp
add
cmp
pop
cmp
stc
and
xchg
inc
xchg
cmpsb
inc
adc
into
roll
dec
je
js
jns
push
push
out
sarl
adc
rorb
push
dec
dec
mov
sbb
sbb
sar
test
jbe
outsb
sbb
and
pop
mov
pop
mov
mov
dec
pop
jg
loope
lds
clc
loope
je
stc
and
daa
inc
jno
cwtl
loop
inc
add
jne
mov
in
das
pop
imull
cli
and
inc
mov
in
cli
push
mov
scas
mov
fsub
mov
pop
js
insl
cmp
test
insb
lods
movsl
jns
mov
lds
add
pop
dec
ss
repnz
sub
call
cmp
cmp
mov
mov
call
mov
jle
in
mov
and
clc
or
dec
or
stc
cmpl
cmpsb
insb
nop
cmp
pop
push
sbb
rclb
sti
pop
test
push
add
fstpt
xchg
inc
pop
lods
push
add
cmp
cwtl
mov
xlat
clc
cmp
das
xchg
fsubrl
mov
shrb
dec
push
ficoml
jecxz
repz
addr16
enter
push
xor
adc
in
bound
aam
mov
lret
mov
sti
add
std
je
loope
enter
mov
int
das
adc
insb
shrl
arpl
pop
leave
jnp
jns
pop
out
xor
sub
std
cmp
add
push
ja
fstl
daa
dec
jl
out
fiaddl
pop
mov
loop
pop
lea
and
ror
rorb
sub
or
sub
mulb
xchg
les
lret
imul
sbb
xchg
out
das
int
lods
movsb
lahf
in
mov
xchg
cmpsb
inc
pop
mov
xchg
sahf
sub
out
inc
fildl
jo
lock
add
push
push
and
aas
stos
mov
cmp
jge
cld
mov
int3
stos
xlat
jnp
rol
cmp
fcompp
lods
add
mov
testl
mov
into
shrb
add
sub
loopne
sub
int3
mov
cmp
jb
bound
loopne
mov
sub
push
xlat
sub
xchg
idivb
sub
out
popf
icebp
inc
les
and
adc
push
or
inc
xor
and
ds
and
dec
jae
daa
ss
pushl
cmc
rcll
pop
cmp
xor
arpl
add
jne
pop
loopne
lret
leave
leave
mov
jmp
sbb
cmpsl
test
fwait
das
sub
arpl
lods
andl
pop
add
movsl
dec
jmp
int
mov
cmpsl
pop
pop
in
cltd
cmp
mov
adc
in
test
jns
push
mov
cs
xchg
jae
sub
ja
arpl
inc
fwait
or
je
xchg
test
in
ret
outsb
or
in
movb
test
or
aas
jns
add
bound
sbb
jno
fadd
jb
or
xor
js
call
mov
sbb
lods
xchg
and
out
clc
lods
and
adc
sub
insl
testb
mov
mov
jg
mov
jbe
jecxz
movsb
cmovae
sbb
mov
imul
sarb
in
jnp
mov
les
mov
and
out
dec
loop
cltd
jp
and
dec
inc
inc
aad
mov
ret
sti
fcomi
push
pop
mov
jnp
push
data16
shl
or
jb
xor
lds
addr16
xlat
mov
out
xor
popf
add
cmp
scas
in
cltd
add
xor
adc
mov
dec
lds
sub
sub
clc
jbe
mov
pop
icebp
lea
sbb
dec
and
iret
mov
out
out
cmp
ret
xor
mov
inc
push
faddp
int3
cmp
and
lahf
inc
mov
cwtd
or
test
add
sub
cmp
addr16
xchg
sub
stos
aas
jbe
jg
out
imul
sub
adcl
loopne
adc
in
ret
push
mov
test
fisttpl
bound
xor
pop
mov
inc
dec
sub
pop
movsl
test
jo
jecxz
inc
push
add
movsb
push
fcoms
fistpl
xchg
mov
dec
shlb
jns
cmp
and
aad
adc
jae
inc
push
inc
dec
mov
pop
cmp
cltd
xchg
xor
push
xor
ret
lret
lock
lods
lods
lock
or
addr16
je
add
add
jo
adc
xchg
mov
jle
add
jae
jmp
rclb
ja
pop
lcall
movsb
push
lock
mov
aad
mov
xchg
pop
addb
mov
mov
fmull
icebp
jnp
pop
mov
jl
loope
push
sbb
and
xor
dec
nop
and
pop
add
ficomps
push
cmp
inc
push
add
outsl
je
push
jle
dec
dec
sbb
into
test
mov
adc
icebp
lahf
stos
imul
dec
lret
sub
sbbl
jecxz
push
jo
adc
xor
decl
xor
lea
aaa
nop
nop
xchg
aam
mov
xor
mov
sbb
in
mov
xchg
mov
mov
orb
or
jno
mov
ror
stc
mov
mov
fs
movsl
xor
iret
mov
insl
pop
mov
loope
add
addb
das
ds
test
mov
test
nop
add
stc
lods
in
and
loopne
in
mov
xchg
fcmovu
movsl
xchg
dec
dec
inc
fisttpll
icebp
fwait
gs
mov
inc
fidivs
xchg
xor
out
test
mov
xor
xlat
adc
das
pop
enter
jae
sbb
mov
out
xchg
add
mov
popf
xchg
fisubrs
push
sbb
cmp
jg
clc
enter
lock
xor
jae
dec
into
cmp
repnz
push
pop
jnp
stos
daa
push
daa
mov
push
dec
jl
sub
pop
lods
ss
enter
sub
sti
pop
jle
mov
cmp
js
out
push
nop
inc
mov
fidivrl
push
jns
fdivl
inc
cmp
mov
push
mov
mov
dec
cltd
and
cmp
jmp
lds
in
es
addb
inc
inc
pop
add
sti
arpl
aas
arpl
mov
testl
push
cmc
mov
push
lea
mov
pushl
es
push
lock
push
lahf
es
rclb
push
inc
push
leave
fidivl
cmp
ret
push
pop
push
imul
jmp
jne
pop
jae
pop
jmp
cmp
pop
pop
negl
aas
sbb
repnz
sbb
shll
lcall
insb
cli
in
mov
out
xor
push
shrl
int
sbb
push
outsb
cmpb
jbe
jb
mov
mov
scas
or
cld
xchg
mov
cmp
xchg
subl
test
mov
pop
popf
jge
sbb
icebp
cwtl
mov
jb
pcmpgtd
push
in
mov
in
dec
inc
mov
fstpl
mov
or
pusha
cmpsl
jg
and
lds
ds
sbb
jne
sub
xchg
fbld
mov
mov
mov
lods
or
pushf
test
or
mov
fs
fld1
push
jo
pop
xor
or
gs
sbb
push
push
mov
stc
popa
xchg
mov
fstpt
dec
push
cmp
test
push
cmp
mov
pop
pusha
fistl
es
fadd
stos
movl
lds
and
fimull
loopne
lahf
xchg
test
popa
loop
lret
pop
aad
fstl
test
lock
and
aas
cld
fimuls
sub
cmp
setb
cli
xor
divb
cmpsb
enter
sub
loop
gs
jae
data16
cmp
lret
lret
sub
dec
arpl
andl
mov
inc
repz
jp
les
cltd
cmc
or
xchg
xchg
or
pop
ljmp
add
sbb
ja
jecxz
sbb
loopne
xlat
loopne
sub
xlat
cmp
pop
in
imulb
and
or
nop
pop
sbb
mov
cmpb
inc
and
les
sbb
mov
dec
pop
add
xchg
mov
fwait
sub
push
jb
and
dec
pop
pop
arpl
push
mov
mov
dec
dec
dec
ror
xchg
sahf
mov
popf
hlt
test
fistpll
lds
movsl
mov
inc
push
add
dec
xor
mov
and
icebp
pop
shrl
xchg
ljmp
jecxz
movsl
adc
and
je
cmp
aad
setb
pop
mov
faddl
xor
call
in
arpl
cmc
add
loop
lock
xchg
xchg
jns
dec
cvtps2pd
pop
and
cmpsl
push
addr16
dec
jno
outsl
inc
test
aas
ja
divb
and
leave
xor
gs
sbb
cmp
cmp
mov
sub
jecxz
sub
enter
rolb
out
in
xor
or
add
in
sbb
xor
dec
mov
push
and
imul
iret
sti
and
mov
adc
mov
xchg
pop
sbb
iret
xor
setp
inc
imul
jg
cld
jnp
divb
or
mov
fistl
or
mov
cmc
jge
or
pushf
std
jp
add
ficoms
addl
call
mov
data16
into
cmp
jne
jns
dec
sbb
xchg
popa
mov
dec
pop
fstps
adc
xor
popa
int
sbb
xchg
cmpsb
mov
add
and
pop
add
mov
sub
in
notb
mov
adcb
in
dec
insw
lock
cld
js
cmpl
icebp
daa
jle
loopne
iret
ds
or
cltd
mov
mov
in
jns
int3
dec
sub
xor
es
push
xchg
rclb
jnp
jne
bound
inc
fwait
int
inc
je
jecxz
mov
data16
sub
inc
mov
mov
cwtl
cwtl
loope
pop
jmp
cmp
xchg
cltd
pop
jmp
xchg
lcall
xor
insb
adc
sarb
sti
addr16
in
insb
sbb
pushf
in
lahf
popf
pop
mov
test
push
clc
mov
xor
or
mov
inc
push
adcl
xchg
loop,pt
andl
jo,pn
notl
mov
mov
call
inc
xchg
push
pop
fdivrp
das
mov
test
push
fs
leave
pop
jge
sar
xchg
ja
leave
rcrl
pop
adc
mov
gs
sbb
lcall
lahf
mov
imul
inc
cwtl
pop
mov
fwait
xchg
inc
notb
xlat
ret
mov
repnz
into
xchg
sbb
ljmp
popa
movsb
push
fsub
das
and
mov
shll
into
pop
and
orl
mov
sub
jg
out
adc
int3
outsl
cmp
xorl
mov
cld
repz
xor
push
addr16
call
cs
das
bound
and
or
lods
fbld
mov
bound
ret
in
movzbl
mov
adc
push
ret
mov
cwtl
jnp
inc
dec
shll
test
loop
xchg
mov
inc
or
arpl
push
push
mov
and
push
fidivrs
xor
outsb
cmp
shrl
scas
fmuls
lds
inc
xor
sahf
inc
mov
mov
adc
andl
push
add
loop
jns
enter
jae
stos
push
and
add
outsl
mov
push
sub
xchg
test
test
insb
ds
lret
push
mov
les
ret
fistps
fildl
jmp
pusha
lret
sbb
mov
daa
cmpsl
xorb
adc
jno
sahf
dec
push
xor
mov
mov
movsb
mov
lods
test
imul
mov
mov
jns
addr16
xchg
push
fstpl
in
cld
xchg
les
cli
mov
sbb
xor
stc
stos
mov
mov
pop
pop
popf
je
loop
icebp
xchg
mov
pop
jne
xor
data16
push
jbe
jns
cmp
pop
dec
inc
xchg
and
cmc
mov
xor
stos
and
push
mov
shlb
bnd
add
movsb
lods
inc
out
dec
ss
lds
inc
jo
fstpl
rorb
test
dec
jns
ja
push
fsubl
movb
cmpb
lret
pop
mov
fs
jmp
test
mov
mov
xor
das
mov
sbb
mov
add
mov
pop
lods
or
pusha
jmp
cmpsl
lahf
xor
dec
imul
arpl
adc
ljmp
ljmp
pusha
push
pop
add
xchg
push
inc
pop
mov
pop
sbb
mov
jecxz
arpl
push
adc
cmp
sahf
sti
pop
repnz
add
in
lret
es
and
cmp
insl
mov
in
xor
idivb
das
pop
push
adc
xor
adc
sbb
pop
aad
cs
fwait
inc
jb
nop
pop
inc
pop
repz
xor
stos
inc
fsubrs
xchg
mov
stos
adc
dec
rcll
xor
fcoml
inc
pop
add
out
mov
fbstp
xor
push
pop
cli
adc
loopne
mulb
mov
outsb
aas
inc
mov
aam
iret
lret
xor
in
mov
notl
outsb
sbb
sub
mov
lret
lock
fbstp
dec
out
push
addr16
sbb
mov
in
jp
cmp
gs
stos
dec
push
mov
mov
mov
inc
stos
xor
inc
or
sti
push
mov
out
jecxz
and
out
push
xchg
jl
add
mov
js
clc
or
in
mov
rcr
aaa
inc
adcl
das
add
push
pop
sub
xor
ret
in
jbe
jae
sub
mov
stos
cltd
inc
insl
hlt
mov
add
fdivp
int
mov
sub
pop
xchg
fistps
test
int3
arpl
push
sub
leave
outsl
in
stos
dec
dec
and
push
push
pop
sub
out
mov
aaa
or
cmp
push
int
into
pop
sub
jg
inc
sahf
pop
add
and
fs
rcrl
xchg
mov
or
cwtl
cs
pushf
movb
filds
test
xchg
scas
and
jb
test
les
ficompl
sbb
inc
mov
adc
roll
fwait
adc
push
out
inc
or
add
mov
xor
cs
mov
mov
cmp
pop
push
fcmovnu
iret
mov
push
inc
je
cmc
xchg
push
imul
aaa
fdivs
push
jle
adc
or
arpl
push
jg
sbb
cs
lods
mov
int3
insb
adc
addr16
jg
cmp
sub
jmp
cmp
sbb
mov
in
shll
xor
sub
ret
ja
dec
pop
ret
cwtl
ljmp
push
popa
dec
inc
jp
test
cmp
movsl
jbe
mov
lods
out
fwait
inc
aas
or
sbb
popf
xchg
sti
jae
js
xchg
push
sbb
pop
aad
and
pushf
xlat
das
out
mov
pop
ljmp
mov
test
daa
add
pop
daa
addr16
or
ja
sbb
pop
xchg
addb
inc
pop
loope
pushf
dec
insb
push
xorb
idivb
add
mov
test
inc
out
mov
sahf
movsb
repnz
lahf
mov
inc
mov
xchg
sahf
ds
lea
jecxz
das
inc
mov
push
cmpsl
shr
jns
insb
jmp
mov
and
mov
not
ljmp
iret
mov
pushf
mov
pop
aas
popa
dec
jb
js
lahf
adc
mov
call
ja
dec
adc
cmpb
xor
enter
mov
mov
xchg
bswap
and
xor
out
jmp
imul
imul
pop
in
in
cmp
gs
fs
sub
js
dec
mov
mov
mov
cmc
popa
inc
jge
inc
mov
fisubl
lods
xor
pop
jns
or
inc
mulb
lahf
xchg
sub
addr16
dec
fwait
cmpsl
sahf
sub
mov
je
adc
push
andl
movsl
pop
sbb
fidivl
pop
push
daa
ffree
icebp
pusha
sbbl
call
xchg
xchg
cmp
rcrl
in
lds
shlb
stos
push
fcmovu
insb
repz
mov
cltd
jnp
adc
call
inc
sub
jne
xchg
jbe
push
cld
and
jp
popf
ret
mov
lcall
sbb
arpl
push
fdivrl
sahf
lods
fmull
lods
cmc
add
jb
mov
push
mov
xchg
std
mov
xor
push
jle
lret
dec
mov
lds
mov
je
dec
stc
xchg
stos
cmp
jns
adc
xchg
je
retw
mulb
stos
dec
xlat
xor
in
sahf
mov
xor
notb
mov
das
out
xchg
test
fwait
ret
dec
jp
dec
push
and
sbb
nop
in
jne
fwait
in
stos
pop
in
lds
mov
loopne
xchg
mov
mov
push
shlb
jbe
stos
mov
dec
mov
sub
inc
adc
negl
sbb
and
cld
sbb
and
mov
lds
inc
data16
in
sub
data16
sarl
push
sbb
shr
cmp
adc
adc
fldl
mov
inc
leave
andb
scas
mov
test
push
xchg
inc
fwait
mov
out
testl
inc
hlt
jg
ficompl
sti
imul
mov
mov
out
sub
divb
xchg
roll
xchg
sub
data16
jnp
inc
add
jns
push
test
jae
jb
movups
xor
aam
pop
cld
add
fdivrl
jg
push
xchg
xchg
pop
sub
aam
or
xchg
mov
lock
pusha
mov
loop
rol
cmpxchg
pop
loope
inc
add
or
mov
mov
add
ja
stos
cmpsb
cltd
inc
xor
pop
push
enter
in
lods
rcrl
cmpsb
or
popf
inc
popa
lret
adc
lock
and
sub
inc
jp
mov
jb
loop
jp
mov
cmpsb
insl
iret
or
pop
in
pop
stos
mov
stos
test
mov
jecxz
mov
mov
loopne
shlb
push
xorl
push
insb
add
push
inc
lret
jbe
sub
jmp
js
clc
add
xchg
jmp
xchg
inc
fwait
cld
jno
out
jmp
leave
ret
pop
inc
dec
ljmp
subl
fisttps
mov
mov
jg
sub
cs
roll
push
mov
dec
repnz
out
mov
sub
sbb
inc
mov
fcoms
lret
js
xor
andb
xchg
rcrl
int3
xchg
pusha
xchg
mov
lods
inc
sub
inc
mov
in
add
mov
imul
pop
pop
into
mov
pop
cmp
clc
pop
lahf
dec
cld
jb
xorl
mov
or
push
andl
pop
out
mov
fidivrl
roll
clc
maxps
jnp
pop
inc
lods
cmp
jns
mov
cs
arpl
cwtl
pop
or
cmp
nop
xchg
inc
enter
push
stos
aaa
push
fiaddl
dec
inc
jle
ret
int
dec
mov
cmpsl
add
mov
lret
xchg
clc
mov
stos
inc
and
lock
sub
adc
add
add
das
nop
ljmp
cs
aaa
sub
mov
mov
push
mov
repz
movsl
inc
adc
pop
jge
jl
mov
lret
pop
in
lods
lods
xchg
xor
mov
add
popa
lock
pop
or
adc
sahf
push
cwtl
loope
push
jp
push
mov
mov
add
call
or
jl
gs
or
mov
cmpsl
imul
inc
in
mov
test
pop
jge
xor
push
loope
sbb
dec
mov
jbe
xor
xlat
cld
pop
js
ds
mov
dec
clc
sbb
pop
into
mov
xchg
ror
movsl
daa
adc
test
lods
scas
jae
mov
inc
dec
push
ret
js
cs
or
mov
mov
mov
pop
mov
sub
push
nop
jo
daa
pop
fnstcw
dec
push
int3
cmp
movsb
cmpsb
mov
int3
jmp
adc
mov
mov
aas
push
inc
pop
pinsrw
in
dec
cmp
cli
or
cmp
push
scas
shlb
xor
sbb
sub
shrb
push
sub
aam
fcompl
dec
je
xchg
sarl
jg
sbb
jg
hlt
std
enter
pop
mov
mov
mov
inc
sarl
inc
or
sbb
jmp
cmp
pop
loop
xchg
aam
mov
jbe
push
outsb
outsl
cmpsb
nop
int
shll
lock
repnz
cmp
xlat
dec
sub
or
out
cmc
mov
hlt
fistpll
sbb
test
pop
mov
lock
das
testl
dec
jae
aad
jo
adc
repnz
mov
aaa
xor
stos
mov
inc
arpl
mov
call
fwait
out
mov
mov
rorl
push
pop
daa
and
fwait
imul
fcmove
xor
test
popa
xor
ja
sub
in
jno
adc
xchg
test
out
cs
and
mov
sub
imul
dec
mov
enter
sub
cmpsl
stc
daa
test
jmp
lret
rcl
pop
pop
xorb
adc
xchg
mov
jb
cmp
cs
xor
lret
test
lahf
int3
popf
jecxz
jae
out
fsubs
les
shrl
pop
in
jnp
loopne
in
sbb
mov
xchg
push
mov
mov
jmp
cmp
ss
scas
dec
neg
mov
and
js
jg
js
xchg
jecxz
imul
imul
fs
mov
iret
jnp
negl
xorl
inc
mov
rcll
sub
dec
push
dec
jns
stos
hlt
pop
sbb
push
sbb
or
and
fucom
jg
fwait
xor
xor
aam
hlt
inc
cmp
dec
je
jns
aam
xchg
jae
xchg
icebp
in
xlat
nop
pop
mov
and
jge
repz
dec
pop
and
push
rcll
sarl
push
xchg
xorl
mov
movsb
int
jns
pop
daa
in
sbb
add
adc
sbb
jecxz
add
mov
xor
jl
mov
mov
repnz
insb
stos
push
jmp
ret
ret
test
push
inc
xor
aad
ror
add
cmp
lock
scas
push
loope
testb
hlt
sub
cmp
lcall
adc
push
lret
inc
stc
sub
mov
orl
push
or
or
shlb
add
pop
loope
cwtl
cmp
pop
out
sub
fbld
je
cs
fdivs
dec
stc
or
inc
in
dec
mov
js
addr16
inc
loop
repz
in
and
ljmp
push
push
scas
cmp
mov
subb
pop
and
sbb
mov
inc
or
adc
jmp
popf
test
lds
add
and
push
out
sahf
pushf
mov
nop
mov
mov
jne
xchg
inc
or
and
dec
inc
adc
adc
adc
sub
add
inc
bound
mov
out
mov
and
mov
addr16
mov
test
or
pushf
xchg
insb
icebp
push
adc
push
lods
fisubl
pusha
jle
pop
sbb
lods
mul
es
test
sarl
pop
ss
mov
rorl
addr16
xchg
jnp
fadds
in
sub
and
pop
inc
dec
bound
dec
mov
imul
pop
cld
adc
jns
fmulp
push
shlb
mov
add
ljmp
jae,pt
or
inc
jl
cli
xchg
xor
insl
test
imul
insl
popf
xlat
jno
test
sbb
ds
stc
mov
ret
int3
insb
enter
loope
test
test
pop
sub
add
dec
arpl
sub
mull
mov
xchg
xor
add
ss
add
cmp
xchg
adc
adc
mov
clc
int
xchg
cmp
int
mov
call
xor
pusha
inc
sub
aad
rorb
shl
jae
in
cld
pop
cmp
mov
mov
enter
xchg
inc
push
in
push
pop
dec
cmp
outsb
jns
add
repz
push
pop
shl
fnstenv
test
jno
sbb
cmpsb
cmpsl
imul
cmp
ds
xor
mov
roll
and
icebp
test
call
or
xlat
cli
sbb
in
xor
repnz
or
mov
test
mov
pop
stos
mov
addr16
pop
or
add
push
mov
xchg
push
pop
leave
adc
ret
les
push
repz
and
or
mov
xchg
adc
add
push
ds
andl
ljmp
call
and
mov
push
ss
or
mov
or
ja
xchg
sub
shll
sub
sti
dec
enter
sbb
jmp
out
pop
orl
mov
adc
and
imul
xchg
outsl
pop
mov
insb
ljmp
cmp
test
lock
xchg
aam
leave
and
mov
xor
lret
lret
sbb
mov
mov
fs
test
gs
mov
das
nop
adc
ret
adc
sbb
lret
sub
pop
push
jo
dec
push
mov
mov
inc
sub
dec
imul
jns
mov
mov
jnp
scas
cmc
and
push
add
sbbl
dec
cmp
mov
inc
filds
sbb
mov
lods
inc
adc
sbb
pop
mov
fdivs
dec
ja
jge
dec
into
frstor
mov
inc
mov
or
pop
ret
lods
mov
test
repz
movsb
xchg
enter
pushf
jl
lods
inc
jp
xchg
in
mov
fdivp
dec
cmp
sbb
sbb
cmc
sbb
jns
test
js
inc
xor
push
fiadds
loope
mov
movsl
inc
or
in
sub
fstl
mov
js
iret
mov
or
addb
and
les
jmp
push
add
lret
fldcw
popf
mov
mov
or
loop
xor
or
fisubl
dec
mov
cmp
scas
in
cltd
mov
lgs
mov
clc
dec
std
rcr
push
xchg
mov
mov
fwait
repnz
cmp
cmpsb
inc
sub
add
test
add
or
fucomp
sub
das
adc
out
push
push
js
pusha
xor
add
in
pusha
cs
jbe
mov
mov
bnd
in
repz
and
shll
jbe
xor
ljmp
xchg
sti
fisttpl
lret
add
repz
jmp
xchg
adc
or
and
sbb
loopne
add
pop
stc
idiv
or
mov
addr16
in
jb
pusha
mov
jno
and
and
test
pop
pop
xchg
ljmp
inc
daa
xchg
in
outsl
daa
pop
push
ss
into
loopne
cs
fwait
lahf
dec
inc
and
idiv
mov
pusha
jmp
xor
push
lret
lret
fistpl
fnstenv
pop
or
idivb
loope
adcl
jne
fbld
adc
daa
lods
mov
lret
push
pop
sbb
adc
idivl
push
sbb
lods
sti
add
adc
xchg
inc
push
dec
ret
lea
pop
sub
mov
dec
mov
lret
push
popa
jge
mov
jb
or
lret
filds
xor
inc
xor
mov
add
jnp
cmpsb
jp
pushf
jae
sub
stos
test
ss
das
fwait
cmc
adc
adc
inc
shrl
push
mov
cmp
in
stos
stc
sub
and
xchg
hlt
sti
divb
cs
adc
out
sbbl
mov
sbb
mov
stc
inc
gs
adc
inc
ret
mov
pop
cmp
mov
cmp
sub
fwait
jmp
out
adc
sbb
frstor
push
leave
out
setnp
loop
mov
ret
aaa
pop
lcall
xor
sbb
pop
cmp
jle
into
lea
stc
cli
xchg
xchg
and
pop
aad
cmp
and
pop
in
cld
loop
xlat
clc
shlb
adc
jne
mov
xor
inc
mov
loop
lret
inc
mov
push
les
mov
movzbl
addl
mov
in
std
dec
and
and
std
dec
jge
dec
mov
push
mov
aam
aas
xchg
dec
adc
xor
xlat
out
out
pop
dec
inc
inc
loopne
popf
mov
adc
cmpsl
dec
jl
loopne
jns
frstor
loop
sub
pop
add
int3
ss
je
and
jno
xchg
mov
sbb
lods
pop
movsl
cwtl
outsl
movsb
gs
daa
mov
xor
and
mov
mov
jmp
xor
sbb
repnz
in
loopne
add
inc
lods
mov
scas
pop
adc
ja
je
into
lods
fldt
add
movsb
pusha
xchg
loop
es
stos
cld
sub
imul
xchg
lds
push
sub
cwtl
outsb
jge
fstp
pop
sbb
aad
push
mov
mov
pusha
pop
inc
pop
xlat
ja
mov
jg
mov
fwait
mov
jle
inc
and
cmp
sub
sbbb
dec
xchg
outsl
imul
or
ret
mov
movsl
fldcw
fs
mov
add
gs
lods
cmp
sbb
mov
mov
hlt
and
push
mov
pmuludq
movsb
in
ficoms
cmp
aas
fldcw
and
rcr
ror
scas
ja
add
test
pop
sub
ss
lret
sub
dec
cmp
and
xchg
dec
xchg
idivb
mov
pop
mov
decl
cmp
xor
insb
arpl
add
mov
add
mov
pusha
outsb
cs
lret
lods
lods
mov
inc
mov
imul
imul
rorb
mov
stc
and
hlt
enter
push
xor
loop
jl
mov
nop
mov
out
test
cld
jge
fiaddl
imul
and
js
das
mov
jecxz
push
jb
fldl
xchg
mov
shlb
adc
xor
mov
jbe
loopne
gs
fs
push
or
cmp
fucomi
out
fisttpll
push
sbb
arpl
les
daa
iret
inc
inc
outsl
or
pop
or
mov
mov
xlat
jo
sub
pushf
mov
mov
pop
pusha
push
push
xchg
mov
mov
pop
sub
push
push
out
popa
fcmovnbe
push
xchg
and
xor
sub
testb
or
xchg
in
popf
cwtl
ss
sbb
repnz
push
popa
and
dec
dec
cmpsb
and
push
ljmp
mov
adc
call
inc
or
xchg
pusha
xor
mov
movsl
lret
and
add
icebp
mov
dec
lods
sub
cmp
imul
ret
push
out
pop
addl
dec
int3
outsl
xchg
mov
sti
int
mov
fwait
push
test
xchg
out
push
dec
pop
cli
fisttps
mov
orb
test
jnp
xor
ss
xchg
in
ret
adc
or
cltd
out
addr16
popf
movsb
nop
jne
ret
inc
push
mov
mov
pop
add
int3
popa
sbb
decl
adc
push
int
dec
jmp
adc
stos
dec
inc
ret
aad
fimuls
cmp
adc
incl
mov
mov
lahf
mov
jmp
fcmovnbe
pop
movsb
es
mov
test
add
ja
cmp
cmp
fldt
insb
mov
ds
dec
or
or
sbb
lret
loop
sahf
lcall
jl
loope
pop
das
adc
mov
movsb
jno
fs
mov
pop
in
clc
stc
mov
push
and
mov
jp
or
xor
xchg
pushf
adc
cmpsb
jns
das
call
xchg
subl
xchg
push
sbb
call
ljmp
mulb
dec
sbb
loopne
orb
in
sub
sarb
test
jae
mov
push
fimull
aaa
sub
push
in
flds
incb
lock
mov
fdivs
ja
cmp
fnsave
out
aaa
sbb
into
sbb
add
sub
les
out
mov
adc
push
fdiv
iret
sbbl
roll
ds
enter
push
mov
sbb
push
stos
mov
cmp
xchg
aad
adc
lcall
mov
pop
insb
mov
gs
jb
ret
xlat
dec
testl
xor
fwait
xor
jl
xor
scas
in
int
sub
mov
adc
subl
enter
sub
popf
ds
adc
jp
add
push
ret
add
fmull
fwait
jne
push
cmpsb
xor
push
in
lret
mov
cs
rclb
sbb
inc
stos
jns
imul
test
mov
cmp
cmp
subb
orps
in
daa
cmpsb
push
dec
sahf
inc
dec
xchg
lea
xor
sub
notl
adc
shrb
sub
and
insl
dec
dec
fmuls
es
jge
lods
xchg
inc
test
mov
call
adc
lds
mov
xchg
cwtl
pop
stos
nop
repnz
neg
dec
xchg
pop
stc
jnp
rcl
mov
jae
aad
gs
jge
mov
cmp
push
or
in
cwtl
les
jmp
imul
cmp
adc
cmc
in
pushf
mov
mov
sbb
cmp
xor
loop
cli
rcll
adc
dec
push
xor
dec
sbbb
ljmp
lock
rol
cltd
fsubrs
shl
and
insb
roll
lock
mov
and
cmc
adc
lcall
inc
mov
lods
popf
jb
ret
dec
adc
cmpb
inc
push
minps
pop
push
cmpl
dec
add
insl
mov
push
icebp
bswap
cwtl
lds
jl
xchg
xor
xchg
out
lods
aaa
icebp
mov
lods
mov
jo
aad
movsl
lods
cmpsb
sub
shrl
in
scas
fcoml
xor
push
sarb
cmp
xor
cmp
xor
xor
sub
je
sbb
ret
js
decl
test
adc
std
fs
xchg
and
jbe
xor
data16
push
pop
dec
cli
mov
pop
inc
and
in
jns
mov
rol
cld
mov
add
js
lock
in
call
aas
js
push
sarb
imul
dec
insb
and
jl
xchg
gs
aaa
subb
inc
stos
fwait
jp
push
or
or
jb
xor
push
mov
sbb
and
push
and
add
movsl
xor
leave
push
push
test
lahf
out
adc
sbb
inc
xchg
pop
test
xchg
add
add
xchg
ljmp
inc
jecxz
inc
iret
mov
sub
and
mov
cmpsl
pop
adc
iret
jg
sbb
rolb
jbe
lds
loop
lods
push
mov
cwtl
add
lods
jg
mov
sbb
aam
jg
push
adc
mov
pop
fdivs
xor
xchg
les
inc
js
int
jp
and
rcl
mov
push
inc
dec
outsb
cmpsb
lods
xchg
xchg
push
test
in
sub
aam
pop
add
mov
mov
mov
outsb
xor
or
sbb
out
push
insb
arpl
ficompl
mov
insb
std
add
lret
ret
add
mov
sbb
rorl
mov
mov
push
xchg
push
mov
mov
scas
cltd
mov
rcrb
sbbl
dec
inc
sub
push
int3
or
dec
xchg
cmp
divl
icebp
push
dec
xlat
add
outsl
fisttps
xchg
mov
mov
sbb
insb
jno
xchg
sub
sti
js
sub
push
dec
push
ss
lahf
xlat
cmp
or
push
fs
test
pusha
mov
lcall
ljmp
iret
outsb
out
adc
movsl
mov
in
cli
and
clc
aaa
js
jne
out
pop
js
pop
jecxz
faddp
and
mov
cmp
imul
dec
std
popa
scas
mov
notl
xor
ja
sarl
dec
aas
xchg
xor
lds
into
mov
add
pop
fmuls
xor
scas
test
pushf
push
sub
enter
lahf
sbb
in
mov
repnz
add
sub
jmp
call
adc
jp
jae
mov
shr
sbb
sbb
push
sar
rolb
and
pop
mov
cli
loopne
jnp
data16
lods
sbb
aaa
add
mov
aad
xor
rorl
mov
mov
stos
or
xorl
rcrb
in
mov
jecxz
jg
mov
imul
or
and
mov
jl
mov
jbe
push
mov
xchg
test
jnp
adc
daa
fisttpll
mov
push
mov
rclb
and
inc
sti
xor
iret
sbb
adc
outsl
xor
cwtl
xlat
pop
test
or
xlat
data16
movsl
xor
out
sub
lock
lret
sub
andl
xchg
inc
mov
loope
mov
or
xchg
xor
stos
inc
xchg
testl
and
jno
jp
and
je
push
scas
add
fildl
mov
cmp
es
push
orb
xor
add
inc
xor
push
adc
sub
push
mov
sti
nop
popf
mov
jbe
nop
adcb
push
mov
in
leave
into
dec
xor
insl
add
sub
scas
cmp
mov
inc
push
adc
gs
addl
lds
mov
cltd
jp
fisubl
xor
add
lock
outsb
xor
popa
shll
daa
cmp
popf
mov
adc
ja
mov
fcoml
push
jmp
inc
shrl
push
xchg
add
sarl
fdivp
push
xchg
in
inc
cld
pushf
cmpb
mov
mov
jecxz
imul
imul
insb
lcall
add
add
pop
mov
data16
or
ror
xor
cld
sbbl
stos
xchg
add
rcrl
inc
add
fiadds
push
adc
add
out
push
cld
sub
mov
jmp
js
int3
cmp
mov
inc
and
incl
pop
inc
mov
addr16
cli
add
adc
test
inc
mov
push
add
pop
dec
mov
mov
pop
push
data16
add
cmovp
sbb
jae
hlt
mov
mov
aad
and
jno
mov
pop
cmp
fmulp
mov
jns
andl
cli
lods
xor
out
int3
inc
cmp
imul
jmp
mov
jo
push
out
xchg
repz
test
inc
outsl
push
mov
sub
mov
dec
mov
push
cltd
inc
test
fcmove
mov
mov
inc
roll
lcall
jns
jae
ficoms
or
or
outsb
mov
in
sbbb
addr16
mov
mov
rorb
out
sbb
dec
sub
or
adc
mov
mov
dec
test
loopne
dec
push
int
movsl
pop
inc
sbb
cmp
lods
jl
push
and
outsb
movsb
rcll
pop
add
test
xchg
mov
and
ror
sub
jmp
adc
push
sub
add
popf
cmp
lret
pop
adc
mov
es
inc
fs
cmp
inc
cmp
dec
jns
mull
inc
or
cwtl
cmp
out
sub
cmp
push
jmp
aad
loop
mov
es
ja
ret
inc
repnz
jl
popa
dec
inc
popfw
push
push
mov
lret
enter
gs
lret
adc
mov
clc
leave
pop
xor
mov
std
sub
out
mov
int
iret
inc
clc
dec
cmpsb
int3
lods
ret
aaa
fidivrs
das
or
jae
repnz
shl
cmp
int3
dec
rcrb
add
lods
aam
push
jo
in
pop
ds
cmpsl
adc
push
sbb
push
sub
mov
popf
imul
dec
aam
mov
add
fucom
or
sbb
inc
or
inc
fisttpl
cmpsl
inc
popf
adc
pop
cmc
or
cltd
push
and
testl
andb
test
fildll
xchg
and
movsb
stos
mov
test
int
insl
pop
and
je
push
dec
xchg
ds
cmp
push
hlt
cli
push
jle
pop
cltd
jne
mov
jg
ror
ja
lea
aaa
addr16
mov
dec
sahf
mov
adc
mov
cmpsl
xchg
out
mov
loope
rorb
mov
std
xchg
shl
xchg
cmp
xchg
mov
push
mul
cli
jnp
stos
ja
mov
out
popa
push
mov
sub
stos
hlt
dec
repz
sbb
int3
mov
add
test
jmp
clc
fsubrl
push
pop
mov
mov
in
pop
testb
imul
in
pop
fs
mov
xchg
shr
cmp
inc
sahf
xor
mov
test
push
inc
fldenv
into
insl
lods
and
sbb
push
adc
ret
imul
inc
fldl
fildll
cmc
dec
addl
lret
ficomps
sarb
xor
inc
arpl
call
movsb
sbb
jnp
stc
mov
add
lds
cld
flds
pop
rolb
add
out
or
mov
xor
clc
cmpsb
sub
into
mov
jno
cmp
mov
call
iret
movsl
in
add
test
xor
imul
fwait
sbb
jnp
fcoms
loope
loop
mov
and
jns
or
popf
pop
push
fdivl
cmc
mov
ret
push
mov
jbe
mov
out
scas
cmp
pop
jp
mov
test
in
jbe,pn
ret
hlt
imul
sbb
sahf
mov
push
xor
rorb
sbb
jmp
mov
adc
scas
jl
nop
add
out
scas
dec
cmpsb
ljmp
cmp
sbb
inc
or
divb
fadds
cmp
and
inc
inc
fisttps
nop
clc
lret
lahf
xchg
int3
mov
dec
mov
shl
iret
andb
mov
xchg
out
adc
iret
push
ficomps
pop
lods
inc
inc
fisttps
xchg
mov
jb
mov
dec
nop
stc
insl
xor
inc
clc
jle
adc
and
pop
cmp
std
or
test
aas
inc
and
lahf
out
pop
stos
pop
push
call
jnp
inc
xorb
xor
mov
jg
into
mov
pop
int
cwtl
dec
imul
dec
pop
and
mov
shlb
pop
ljmp
icebp
xor
rcl
sub
fwait
adc
or
insb
add
push
inc
repnz
dec
scas
cmp
inc
jp
push
stos
sbb
lods
push
hlt
enter
jne
out
mov
mov
push
cmc
push
mov
mov
shrl
aaa
push
mov
pop
int
hlt
mov
enter
dec
fstpl
addl
loope
jbe
dec
push
sbb
loopne
ja
mov
test
fdivl
cmpsb
ror
bound
dec
mov
adc
loope
mov
adc
add
xor
mov
lods
aam
add
dec
fistps
rolb
clc
cmp
std
lret
xor
in
test
incl
pop
jae
data16
pop
xlat
cmp
push
jb
jmp
lods
xchg
xchg
nop
mov
push
inc
push
sub
and
push
inc
pop
fldl
shlb
pop
lcall
pop
cli
sbb
out
clc
push
xchg
fimull
and
ret
pop
pop
jle
pop
popa
ljmp
xchg
popa
cli
mov
push
mov
mov
jno
aam
repz
imul
mov
cmpl
inc
adc
rcr
ret
xchg
push
push
loop
hlt
call
adc
cmp
call
andl
outsl
cltd
pop
aaa
fisttpl
xor
xchg
insl
xlat
add
cld
cld
or
testl
cmp
xor
pop
sub
xor
loop
movsl
dec
cmp
pusha
fsubrs
inc
adc
push
dec
inc
or
das
in
mov
scas
arpl
xchg
mov
daa
and
in
int3
sub
push
sub
pop
inc
stos
mov
test
or
lds
shr
sbb
pop
and
andl
push
cmc
sti
lds
movsl
ss
sbb
sbb
test
cmp
and
shrl
xor
sbb
xchg
outsl
push
inc
adc
js
xor
or
and
je
push
mov
push
mov
ret
push
pop
pop
mov
cmp
fidivs
lahf
inc
int
pop
fmulp
push
out
jmp
jmp
adc
push
pop
fldenv
outsl
sub
in
fmull
cs
es
sub
bound
or
pop
test
aam
sahf
add
sub
movsl
jbe
pop
jae
pop
xchg
xor
mov
sub
aam
pop
in
push
push
xchg
jp
sahf
adc
xchg
cli
xlat
push
fdivrs
mov
mov
outsl
adc
mov
dec
jb
inc
sbb
daa
xchg
arpl
std
inc
sub
lock
xor
jns
mov
hlt
fnstenv
cmpsl
inc
add
xor
push
gs
pop
mov
lret
cli
pop
mov
mov
mov
pop
cmp
nop
push
inc
cmp
mov
je
xor
mov
ja
adc
je
jl
mov
jmp
mov
sbb
out
pop
int3
and
hlt
cld
fs
addr16
push
sub
int3
popa
clc
pminub
mov
pop
xor
scas
out
pop
ss
or
in
subl
or
or
sbb
test
dec
fidivrl
cmp
push
pushf
push
cmp
das
jo
adc
test
inc
jnp
mov
scas
cld
movsl
add
pop
push
fnstenv
lahf
leave
sub
xchg
push
sbb
adc
inc
pop
sub
mov
or
mov
mov
fidivrl
std
xor
jmp
xchg
adc
jne
jne
ret
testb
xor
ljmp
nop
inc
mov
dec
loop
sbb
inc
int3
xor
push
outsl
mov
adc
and
adc
lret
leave
pop
sbb
testl
insb
xchg
push
xorl
adc
xor
rclb
idivb
stc
pop
daa
sahf
or
mov
fstl
test
jne
popf
insb
jg
sub
movsb
push
or
xchg
cmp
andb
xchg
rcrl
ficompl
jne
call
dec
ds
or
cs
into
push
xchg
xchg
jmp
xchg
icebp
sbb
xchg
ficoml
jbe
sti
orl
and
jns
xchg
js
ss
xchg
lret
enter
jno
cs
push
lret
add
sbb
xchg
or
push
sbbl
inc
popf
popa
or
mov
push
pop
sbb
mov
pop
push
lods
rep
out
test
cwtl
jmp
cs
mov
aas
rolb
in
stos
outsb
xchg
fs
enter
sub
testl
xlat
push
lret
lds
je
xchg
outsb
xor
ja
dec
push
dec
les
mov
or
mov
fucom
mov
sahf
inc
push
in
pop
jp
mov
jle
pop
pushf
test
xor
imul
mov
jle
int
jg
sub
lds
push
insb
imul
sub
nop
mov
insb
cs
mov
xchg
cwtl
push
dec
and
add
pop
mulb
in
add
ret
pop
pop
pop
mov
add
nop
and
stc
loope
mov
icebp
jl
sahf
cmp
not
pop
mov
lea
inc
push
xchg
stos
xchg
outsb
mov
jp
negl
dec
nop
pop
orl
aaa
lods
popf
push
inc
test
stos
mov
pop
fcoms
or
jne
mov
movsb
push
pop
dec
push
popf
loop
mov
or
fimull
ss
mov
push
pop
bound
out
std
loopne
movsl
iret
sti
pop
daa
sahf
das
popa
dec
xorb
inc
mov
inc
sub
lds
mov
mov
pop
cli
shl
mov
lods
inc
fstpt
in
pop
aad
lock
mov
loope
imul
mov
test
pop
mov
lds
xchg
mov
lret
movsb
adc
sbbl
mov
lock
sub
xchg
scas
es
int3
sub
dec
xchg
dec
adc
test
jae
push
mov
xor
bnd
ret
and
cld
dec
adc
or
mov
imul
xor
inc
sub
iret
hlt
cmpsb
pop
cmpsb
push
arpl
hlt
mov
scas
mov
mov
or
jo
sahf
ja
add
jg
imul
ja
add
insb
xchg
pop
cmpsl
sbb
daa
sti
mov
add
popf
std
call
insb
out
sub
xlat
inc
lahf
mov
fcmovb
mov
dec
leave
nop
rorb
insb
scas
test
pop
xchg
pop
push
jns
mov
or
mov
test
fstl
cmova
pop
pop
jp
cwtl
andl
fildll
add
push
cmp
pop
jns
loop
add
and
jmp
dec
out
imul
and
aad
jns
mov
mov
or
pop
movsl
mov
sub
push
sbb
imul
iret
sti
xor
sbbb
stc
data16
adc
sti
cmp
push
xor
sbb
pop
pop
out
mov
call
pop
pop
adc
mov
and
push
aad
jge
xchg
test
dec
mov
mov
push
mov
dec
jg
jo
mov
jne
mov
mov
insl
push
pop
mov
ds
inc
mov
mov
leave
cmp
push
pop
xlat
ljmp
mov
inc
lods
adcl
stos
pop
xchg
ret
rolb
lret
cmp
inc
dec
dec
inc
push
pop
dec
pop
xchg
cmp
outsb
inc
mov
filds
movsl
divl
mov
and
imul
jo
insb
ja
or
pop
mov
sbb
or
jg
lcall
jns
mov
and
push
stos
xor
add
icebp
sub
xor
or
je
data16
lea
push
ret
bound
pop
jae
fwait
inc
in
xor
add
xor
imul
andb
pop
ficoms
and
out
in
test
xchg
xchg
sbb
jge
leave
out
insb
sub
rcll
cmpl
sbb
shlb
loopne
shlb
inc
cmp
test
fadds
in
mov
int3
int
adc
sub
int3
loopne
stos
inc
test
stc
cmp
cltd
fs
mov
mov
xchg
pusha
aam
popf
mov
loopne
aas
jbe
jle
insb
dec
pop
sbb
xchg
jg
pop
push
sarl
adc
pop
jae
int
push
enter
daa
adc
mov
enter
add
add
fwait
enter
stc
nop
outsb
shll
mov
push
pop
mov
xchg
lahf
xchg
pop
call
repnz
jbe
stos
pop
std
call
mov
cmp
jge
cwtl
push
xor
sub
xchg
xchg
cwtd
pop
cmp
pop
pop
outsl
shrl
xchg
repnz
sti
mov
add
inc
mov
js
mov
enter
cs
sub
addr16
inc
push
inc
test
mov
insb
pusha
flds
cld
inc
mov
lea
lea
sbb
push
repz
int
jmp
mov
adc
in
cmc
xchg
cmp
mov
cld
filds
data16
mov
xor
leave
add
fsubrl
ret
hlt
cld
sbb
sbb
lods
aaa
popf
xchg
or
loop
or
ret
xchg
xchg
push
mov
sub
push
std
xor
dec
rcll
cmpsl
sub
cmp
pop
push
sub
popa
dec
dec
sahf
sbb
ss
pop
jle
ljmp
mull
addr16
cli
or
adc
pop
mov
and
add
stos
pushf
mov
ljmp
sbb
dec
and
xchg
or
xor
xchg
xchg
out
les
rolb
fpatan
movb
pop
mov
mov
call
or
mov
in
lahf
or
pop
rolb
loope
shl
loope
mov
cmc
or
sbb
pop
push
sti
dec
sub
jb
mov
daa
sbb
sti
cld
jle
pop
mov
jl
addr16
into
test
fldcw
sbb
stos
mov
lods
dec
call
mov
test
dec
std
les
xor
and
xchg
xchg
push
pop
gs
add
xchg
jp
aas
cmc
mov
mov
subb
jecxz
pop
pop
loop
icebp
idiv
insl
imul
pop
test
inc
je
adc
xchg
cwtl
xor
xchg
add
adc
in
repnz
int
jl
mov
add
adc
stos
sub
push
in
iret
sbb
dec
imul
gs
mov
jo
mov
jb
cld
lahf
into
ror
test
clc
shl
mov
inc
ret
jo
mov
sub
xchg
ds
push
repz
jbe
dec
pushf
lahf
scas
jl
pop
jp
cmpsb
jecxz
mov
push
cmp
les
les
jp
cli
lods
stos
and
shl
out
cmp
push
std
dec
mov
test
cli
and
sub
pop
cmp
dec
fsts
add
jmp
shlb
in
push
xchg
mov
cld
aam
or
test
mov
mov
mov
enter
mov
dec
and
out
mov
fstps
out
mov
stc
mov
cmc
mov
mov
or
or
cmp
add
push
mov
push
aas
xchg
mov
inc
data16
push
sub
mov
les
sub
ret
push
mov
es
in
hlt
mov
outsl
lahf
dec
jnp
push
push
add
sbb
sbb
out
sbb
cmp
pop
in
push
adc
pop
arpl
shll
cwtl
aas
je
add
sub
jae
es
pop
mov
outsl
mov
repz
push
ja
adc
mov
hlt
lds
mov
push
cmp
adc
popa
sbb
push
fucomip
je
daa
daa
scas
scas
add
rcrb
cwtl
cmpsb
mov
dec
mov
mov
jmp
and
ss
iret
push
enter
mov
xor
dec
xlat
jl
or
xlat
dec
clc
les
push
hlt
ret
mov
cmp
and
adc
popf
push
push
xchg
popa
cmpsb
repnz
add
xor
les
sahf
js
sarb
push
push
adc
lea
in
lea
jno
xchg
es
js
sub
sbb
xor
dec
jmp
imul
shl
and
popa
ss
mov
jmp
or
cmp
iret
frstor
nop
fildll
gs
mov
hlt
mov
inc
and
mov
roll
inc
ljmp
mov
or
mov
int
pop
ljmp
adc
imul
adc
imul
loopne
mov
scas
jns
icebp
push
js
inc
jecxz
fs
test
push
mov
data16
out
mov
push
imul
cmp
sbb
test
jb
ljmp
jne
out
pushf
jno
pop
xchg
std
inc
leave
dec
cwtl
cmp
int3
les
aas
mov
aas
push
xor
add
pushf
dec
xchg
cwtl
adc
stos
mov
lret
jl
xchg
hlt
test
push
push
test
jecxz
add
lods
call
jae
xor
push
jge
xchg
je
jne
or
das
and
cwtl
imul
pop
inc
loope
jp
adc
rcrb
fs
jae
inc
push
and
daa
xchg
push
je
sbb
inc
shrb
jge
and
stos
in
xor
mov
cmpsl
incl
pop
lods
dec
adc
mov
repnz
aas
fildl
xlat
sahf
out
push
xor
push
mov
push
xchg
adcb
pop
insl
aad
ja
stos
out
loop
fwait
lret
xor
add
dec
inc
mov
int
or
in
mov
lods
in
pop
das
lock
mov
sar
fisttpl
dec
jg
jp
sbb
icebp
xor
sub
inc
or
add
call
mov
mov
add
into
inc
std
mov
mov
dec
imull
adc
cmc
jb
push
bound
push
in
jb
fdivs
push
sbb
f2xm1
cmp
aas
scas
inc
mov
adcl
or
mov
inc
shll
mov
and
xor
std
cmp
popa
and
ret
or
in
and
push
pop
arpl
adc
sbb
cmp
add
cs
int3
xchg
pop
mov
jae
jno
mov
jno
or
and
push
xlat
pushf
sub
cmp
pop
cli
test
mov
in
xor
mov
aad
popf
jl
jecxz
mov
xchg
das
lret
imul
shrl
adc
loopne
or
jns
push
inc
jmp
sub
sub
arpl
mov
xchg
hlt
test
mov
xlat
jns
enter
int
push
ret
jp
testb
jnp
or
and
pop
stos
sub
cwtl
fcomp
add
loope
or
and
dec
mov
mov
jmp
divl
inc
mov
outsb
insl
sub
mov
nop
jnp
stos
xchg
imul
mov
enter
in
scas
mov
rclb
dec
dec
jp
push
adc
dec
shll
lods
sbb
fnstenv
jbe
mov
cs
push
pusha
mov
int3
orb
out
jb
inc
aad
push
test
int3
orb
pop
in
ljmp
cmpsb
addr16
lock
pop
xor
test
lods
outsl
xchg
jne
mov
dec
mov
outsl
pop
mov
push
inc
fstpt
mov
aas
push
stc
and
mov
aaa
loop
std
test
inc
int
aam
mov
pop
push
mov
mov
lret
sub
mov
mov
scas
xor
or
jne
clc
fdivrp
mov
inc
push
jecxz
pop
fmuls
sub
stos
inc
pop
popa
and
xor
add
sbb
fcomp
lret
dec
push
out
js
mov
out
sub
push
test
xor
or
fistl
jle
pop
xor
loop
popf
dec
adc
shll
aad
sbb
out
cltd
cmp
jl
push
add
cli
xchg
add
add
push
cmpb
jbe
jge
pop
mov
and
mov
dec
lock
leave
pop
mov
sub
xchg
das
ret
and
add
jbe
popa
adc
jb
add
cmp
fists
and
jno
addr16
or
add
add
cmp
std
es
imul
pop
push
lds
sbb
cmp
mov
test
push
adc
lret
je
cwtl
test
out
out
jno
mov
push
cmpsl
shrl
push
lds
or
add
int
adc
jg
lahf
outsl
out
repz
mov
lcall
stos
xchg
mov
mov
cs
sub
xchg
outsl
pushf
lret
and
xor
fucomp
rorb
inc
fidivl
sarb
inc
mov
fwait
pop
pop
sub
repz
xor
sbb
popa
xchg
mov
or
aam
ret
mov
in
sub
cmp
mov
movd
push
insb
test
inc
movsb
lds
jne
test
jp
loope
mov
leave
negl
pop
jno
or
xchg
mov
jmp
test
ds
jge
sub
inc
sbb
adc
push
or
ds
or
rcrl
jne
insl
pop
mov
xchg
add
inc
rorb
xor
test
shlb
data16
fcom
xor
inc
cmp
cltd
and
adc
inc
push
adc
imul
mov
insl
stos
xchg
jp
stos
in
xlat
fists
jns
push
sarb
inc
mov
imul
mov
div
mov
mov
xchg
fidivs
push
add
or
insb
lods
imul
or
ds
dec
or
movsb
adc
pop
daa
mov
lds
sahf
xchg
stc
in
cmc
jnp
arpl
fsubs
mov
imul
movsb
xor
push
mov
push
cli
out
xor
movsb
push
popf
scas
mov
pop
mov
mov
cmpsl
int
mov
lods
add
cmpsb
aam
mov
leave
out
cltd
add
loopne
int3
fs
lahf
or
repnz
sub
test
in
sub
in
fnsetpm(287
fisttpll
rep
push
dec
cmpl
pop
dec
jle
fimuls
inc
pushf
adc
xchg
aaa
dec
ds
addr16
lcall
fldt
pop
xor
aam
jmp
mov
cmp
out
push
xchg
mov
loope
rorb
lcall
lea
andb
outsb
pushf
inc
sarl
xchg
cmp
insb
xor
sbb
xor
leave
mov
mov
in
leave
sbb
mov
mov
repnz
jle
dec
mov
test
je
out
fcoms
cmp
sub
xlat
shl
sub
mov
mov
mov
sbb
insl
adc
mov
aas
sbb
ret
ja
fnsave
inc
push
leave
and
shll
icebp
push
or
nop
inc
pop
mov
shrb
lods
lahf
imul
mov
rorl
dec
jbe
out
sub
pop
push
add
mov
jns
sub
ficoms
stos
icebp
and
inc
jae
sub
xchg
cli
aam
jecxz
sub
mov
mov
sub
jmp
push
pop
sahf
inc
ja
dec
imul
int
call
jne
outsl
jne
das
jmp
into
in
es
pxor
fmul
xor
ljmp
jne
and
add
das
add
inc
dec
xchg
lcall
sub
jge
dec
dec
jns
leave
les
rcr
imul
adc
or
fucomp
cvtps2pd
push
cmpsb
push
and
inc
mov
dec
decl
jb
adc
jl
and
pusha
enter
outsb
pop
mov
stos
lahf
add
add
xlat
lock
fisubs
cmp
and
add
mov
in
jmp
cmc
and
inc
adc
push
aad
repnz
scas
pop
or
push
outsl
add
mov
movsb
dec
in
or
and
mov
lahf
addr16
lds
outsl
xchg
push
es
adcb
xchg
data16
idivl
dec
push
es
dec
add
jbe
fisubl
adc
in
lcall
aaa
push
fdiv
xorb
pop
mov
lock
ljmp
ds
xor
lret
lods
adc
ja
jbe
mov
cli
add
jae
or
out
push
xchg
test
xlat
sub
dec
jno
jmp
inc
roll
adc
lea
add
popa
push
or
push
outsl
filds
sti
into
fisttpl
mov
out
testl
fsub
inc
push
fwait
xor
mov
in
xor
jns
std
test
pop
unpcklps
push
cmc
and
xchg
mov
daa
cwtl
rclb
lcall
inc
dec
mov
adc
adc
lret
jnp
ret
mov
arpl
sub
cmc
cmp
xlat
mov
mov
adc
aaa
in
add
jmp
test
in
adcl
pop
adc
jae
add
or
in
xor
cmp
xrelease
leave
mov
sbb
ds
shlb
pop
add
xchg
xor
sub
into
test
insl
leave
out
sbb
inc
in
cmp
or
push
adc
mov
inc
fidivs
aaa
mov
mov
mov
push
jb
xchg
popf
push
mov
xchg
pop
daa
fistpll
lret
cmp
loopne
add
mov
jmp
lahf
es
mov
add
enter
das
adc
mov
xor
mov
ljmp
jb
daa
fbld
adc
sti
mov
xor
sbb
cli
pusha
jmp
gs
mov
cs
out
jge
cltd
xchg
push
addl
pop
jns
in
pop
sbbb
insb
xor
scas
shlb
pop
mov
add
pop
or
sub
mov
movq
add
cs
dec
xlat
ret
dec
xchg
jb
add
repnz
adc
jo
lds
and
xor
daa
pop
jl
ja
adc
lds
and
daa
adc
movd
jle
xchg
iret
dec
jns
xor
cmp
sti
movsb
cwtl
sbb
jb
mov
popf
or
sbb
mov
stos
xor
mov
in
jne
jmp
push
xor
push
dec
dec
add
inc
add
inc
jp
filds
sub
inc
aaa
mov
mov
mov
inc
lds
rorl
movsl
add
pop
in
imul
sub
dec
orb
xchg
mov
mov
jg
fistpll
scas
js
adc
addl
outsl
lcall
adc
jbe
mov
sub
inc
or
aad
cmp
js
jno
cli
push
xor
mov
in
mov
jecxz
sbb
cmc
mov
adc
daa
dec
adc
push
icebp
inc
fdivr
cmp
lods
in
cmpl
in
jecxz
rcrb
adc
ds
aaa
ret
addr16
push
sub
js
sahf
and
sub
pop
insl
in
cltd
pop
loopne
mov
or
cmp
test
loope
ljmp
test
bound
inc
pusha
xlat
mov
int3
inc
push
or
dec
add
cmpsl
rcll
cmc
pop
dec
cmpsl
out
xchg
add
and
or
mov
adc
xor
out
scas
js
pop
sub
std
bound
repnz
push
idivl
push
popa
jmp
out
sbb
push
sahf
mov
mov
push
adc
aad
adc
xchg
lock
lcall
xor
lcall
adc
sbb
mov
lret
mov
fisttpll
inc
leave
push
into
sbb
xchg
add
jmp
ffreep
lock
jo
mov
rorl
jnp
add
pop
pushl
faddl
pop
int3
jle
cmpsl
mov
enter
jg
daa
loope
movb
into
out
sahf
notb
std
push
bound
cs
cli
xchg
pop
or
shrl
dec
int
mov
or
push
pop
sbb
fisubrs
cmp
icebp
xor
out
in
imul
pop
dec
ret
mov
xchg
cmpsb
sbb
mov
cmp
cmp
or
lret
notb
xchg
xchg
sahf
mov
cld
dec
outsl
imul
xchg
outsl
js
add
rcrb
jg
inc
and
push
das
dec
xor
fsubp
scas
add
adc
daa
enter
clc
cld
mov
insl
repz
jns
cli
push
sbb
inc
push
pop
bound
aam
insl
ficompl
bound
cmp
ss
loopne
or
mov
pop
shll
mov
cs
pusha
mov
nop
stos
mov
push
jne
pop
ljmp
prefetchnta
mov
xchg
shrb
in
dec
sahf
imul
bound
dec
cmc
cli
aad
movsl
iret
mov
xor
enter
stc
fldt
repnz
iret
add
sbb
push
cld
push
mov
sbb
mov
icebp
cltd
mov
sbb
push
scas
gs
rcrb
push
rcrl
repnz
scas
add
loopne
pop
addr16
jl
inc
aaa
mov
sub
jecxz
movsb
jg
or
aad
push
add
dec
xlat
fdivrs
mov
cmp
mov
jae
mov
lcall
lock
pop
and
cmovge
and
outsl
lret
jge
sbb
mov
loopne
mov
sahf
inc
movsl
out
sub
ds
inc
inc
mov
pop
outsl
aam
xchg
dec
jmp
push
enter
fs
lods
shl
jmp
jnp
cmpsl
out
movsb
mov
sub
loopne
subl
aas
das
into
std
sub
dec
cltd
imul
popa
adc
mov
sbb
adc
inc
push
inc
cmpsb
push
arpl
jbe
mov
dec
and
sub
xlat
ljmp
push
call
cmp
xor
xchg
dec
jge
mov
inc
or
mov
adc
push
and
pop
ror
int3
and
je
lahf
cmp
loop
adc
and
mov
push
jmp
in
mov
cmp
xchg
jp
in
xchg
movb
jmp
sub
jnp
mov
outsb
into
mov
lea
push
jne
xchg
jle
push
pop
aas
pop
pop
mov
leave
jae
or
test
add
lahf
pop
lcall
fucomip
fidivs
pop
fdivp
nop
rolb
and
shl
loop
xchg
loop
inc
mov
cmc
paddb
sub
adc
shrb
adc
mov
andb
and
inc
and
rolb
push
mov
ds
int
cli
lea
stos
shl
in
icebp
sub
add
xchg
in
lods
push
xchg
push
insl
cmp
or
addl
push
push
scas
les
jecxz
scas
xchg
mov
mov
shl
cmp
loopne
xor
stc
xchg
xchg
js
out
outsl
sarb
lret
mov
cmp
pop
xor
xor
push
dec
adc
mov
push
and
lods
aaa
jl
jecxz
loopne
ljmp
pop
scas
in
rcll
push
adc
cmp
int
fstl
cwtl
fildl
sbb
push
or
jns
ss
out
ret
xor
mov
xorl
or
out
push
jbe
xchg
jnp
addr16
and
sub
and
fstps
int3
cmp
jo
inc
clc
adc
sbb
pushf
hlt
pop
xchg
lret
pop
cli
movsb
scas
sarb
lods
out
mov
dec
push
and
sbb
ret
push
adc
mov
pop
and
and
ds
pusha
out
out
mov
cmpsb
push
das
inc
ret
lods
aad
movsb
cmp
lods
lock
pop
imul
cmpsb
mov
xor
je
push
popf
add
sbb
add
lahf
test
sub
ret
fwait
jbe
das
imul
pop
data16
pop
push
mov
mov
jecxz
clc
cld
mov
clc
cmpsl
fdivrs
adc
pop
mov
clc
aas
loopne
loope
sti
rclb
and
mov
mov
mov
push
lods
mov
jmp
xchg
fldt
rcll
ret
inc
jno
push
sbbl
inc
xchg
orb
cmpsb
pusha
mov
add
sahf
pop
andb
outsl
cmp
dec
or
inc
lahf
push
cmp
loop
js
cmpl
add
cmp
sub
loope
push
cmpsb
push
add
pushf
dec
or
pop
stos
dec
out
cmp
and
mov
popl
and
pop
and
push
test
lcall
adc
int3
testb
adc
jbe
data16
mov
cmp
dec
ss
and
and
adc
mov
add
sub
adc
js
out
in
das
cld
mov
jnp
insl
inc
cwtl
and
cmpsl
cs
out
xor
adc
into
andl
add
add
pop
std
mov
or
pop
repnz
jno
mov
call
adc
cmpsl
xor
sarl
sbb
mov
sahf
fbld
push
adc
mov
ss
jb
pop
ja
repnz
insb
hlt
add
addl
sar
sahf
fs
fs
jb
cmp
push
mov
dec
iret
ljmp
jns
mov
cltd
mov
cmpsl
push
bound
push
inc
ljmp
and
dec
fists
js
cmpsl
sub
push
mov
fisttpll
dec
sub
outsb
add
mov
js
gs
inc
cmp
sbb
sub
xchg
mov
scas
divl
jp
movb
repnz
jno
push
xchg
cli
out
xchg
xlat
movsb
push
jbe
ds
sbb
sahf
cmp
push
dec
jp
loope
xor
pushf
inc
add
jb
outsl
jg
xorl
add
and
or
sub
push
xor
outsb
adc
add
repnz
mov
adc
pushl
stos
leave
mov
push
dec
sub
mov
in
mov
repz
jns
bound
fidivl
js
and
andl
push
adc
push
push
int3
aam
add
iret
fs
mov
xor
push
aad
movsl
mov
push
ja
mov
ljmp
cmp
jl
scas
push
mov
push
and
and
xor
mov
outsl
and
push
xor
pop
idivl
pop
adc
cli
pop
rorl
xor
test
push
fists
sub
pusha
xor
icebp
dec
pop
sahf
jge
mov
jmp
sbb
mov
fwait
lahf
push
in
lret
insb
retw
sbb
and
push
js
movsl
les
cmc
daa
test
pop
cmp
adc
mov
pop
jo
mov
out
inc
sbb
jns
jl
test
push
pop
fstl
lret
xlat
xchg
mov
pop
xchg
mov
lret
cmpsl
xchg
call
dec
mov
adc
lahf
cmp
pop
jl
rcrb
dec
cmp
xor
ds
testl
gs
xchg
inc
xchg
add
or
pushf
scas
pop
add
cmpl
ja
mov
inc
leave
mov
mov
fstpl
sbb
pop
jecxz
mov
stos
jb
arpl
push
sub
cmp
cs
mov
movsb
xchg
mov
dec
jp
cli
cs
adc
fs
lahf
in
sub
out
clc
subl
fisttps
lds
bound
negl
adc
mov
mov
mov
cli
sub
add
imul
pop
xor
filds
sar
lret
shrb
leave
inc
mov
lods
sbb
addr16
int
sbb
fs
shrl
pop
mov
mov
mov
push
dec
or
push
leave
outsl
xchg
push
aam
xor
lock
fsubrs
lods
or
jbe
jl
repnz
lods
bound
xchg
cs
push
and
addl
pop
cli
inc
addr16
fsub
xchg
loope
sub
das
adc
sti
outsb
sbb
mov
je
or
sbb
movsl
xor
jge
nop
sbb
decb
push
jmp
push
mov
xchg
push
mov
faddl
call
fstps
pop
movsl
test
add
jp
sub
mov
push
jbe
aas
fsts
inc
inc
ficoml
fistpll
fs
mov
mov
inc
jle
dec
ja
mov
in
loope
lret
mov
push
or
mov
jno
call
cli
daa
and
adc
in
inc
into
int3
jb
jge
pop
in
pop
push
jl
jg
xchg
inc
mov
add
gs
sbb
jecxz
jecxz
into
pushf
mov
cld
mulb
xor
das
add
and
das
dec
lods
sub
or
icebp
shll
out
mov
dec
pop
push
aaa
jmp
je
jne
xor
outsb
jecxz
jae
enter
loopne
adc
sub
mov
inc
cwtl
dec
pusha
xchg
fdivrs
in
icebp
andl
shrl
pusha
mov
or
and
and
sub
add
fldcw
gs
fcoml
inc
mov
data16
or
fwait
and
out
lcall
push
int3
pop
cltd
stos
xchg
inc
pop
loop
xchg
xor
xchg
into
xor
adc
mov
inc
jb
mov
mov
arpl
jne
mov
jnp
fs
iret
pusha
rorb
add
stc
icebp
mov
into
jmp
mov
jns
sbb
das
push
sub
lock
aaa
stos
mov
out
subl
dec
xchg
lret
mov
jns
inc
add
lret
in
imul
mov
adc
mov
xchg
jge
stos
jnp
mov
dec
sar
sub
dec
decb
xchg
test
jae
push
jnp
out
iret
fwait
add
adc
and
dec
and
icebp
test
push
xchg
sti
repnz
adc
je
das
push
int3
mov
and
or
mov
sub
sti
sub
fdiv
jns
fistl
cmp
mov
mov
hlt
out
jg
lahf
int3
cmpsb
inc
fisttps
adc
in
testb
and
es
test
js
lds
loope
pop
sti
notb
or
and
aaa
push
mov
sub
add
adc
xor
or
dec
fistpll
imul
insb
ds
call
lret
adc
js
cmp
xor
out
mov
dec
cld
mov
nop
ss
jge
lods
insl
hlt
neg
xchg
rcl
daa
mov
adc
pop
add
mov
xchg
adc
fidivrs
out
jbe
xchg
inc
xor
ja
test
es
arpl
aas
jne
inc
add
fwait
mov
cmp
imul
jne
cmp
stc
xchg
movsb
int3
enter
sbb
lods
or
data16
insb
bound
pop
pushf
in
pusha
insb
xchg
sbb
addl
test
xchg
push
mov
jo
lahf
cli
outsb
sbb
rcrl
pop
lahf
xchg
test
dec
pop
mov
adc
fidivl
insl
xchg
xor
mov
mov
fsubrs
vmread
inc
push
adc
lret
dec
repz
mov
xchg
jnp,pt
ror
in
int
data16
jo
xchg
sub
sub
or
movsb
pop
mov
imul
lahf
push
roll
faddl
dec
pusha
jbe
das
or
dec
cmp
xchg
cmpsb
and
jnp
mov
loopne
pop
sbb
leave
sub
push
jb,pt
xor
mov
repnz
daa
inc
dec
cld
mov
xchg
cmpsb
rcll
movsl
xchg
pop
xchg
jne
into
mov
dec
mov
and
fcmovb
xchg
adc
dec
fs
test
cmp
sarl
in
sbbl
inc
sbb
or
mov
inc
pop
dec
aas
fsubl
test
add
pop
fcompl
xlat
aad
lahf
inc
dec
cmpsb
and
and
insb
clc
bound
enter
inc
mov
adc
sbb
filds
mov
pop
jne
sti
aam
adc
push
fmulp
movsl
mov
mov
add
loope
shlb
test
mov
xchg
subl
xchg
and
outsb
mov
pop
lcall
mov
dec
imull
sti
out
test
movsl
mov
xchg
shrl
in
rorb
inc
jb
sbb
psubsw
adc
rolb
mov
xchg
and
mov
jmp
iret
daa
cmpsb
gs
mov
mov
mov
or
dec
sub
arpl
cltd
jecxz
or
js
mov
sbb
jns
dec
mov
insb
inc
xchg
push
int3
aaa
stos
push
addr16
adc
and
jb
stc
cmp
mov
xchg
push
jecxz
lahf
std
jbe
dec
inc
inc
call
adc
ret
in
sub
lds
fwait
sti
sbb
out
faddp
es
adc
inc
sti
clc
push
int
mov
push
add
mov
or
ljmp
imull
pop
mov
jbe
shlb
movl
or
fstpt
sub
mov
push
sti
mov
mov
jg
testl
add
mov
pop
push
fwait
add
mov
loop
push
mov
add
xor
testl
pop
pushf
addr16
shrl
lods
mov
sbb
push
inc
xchg
sbb
lret
shl
lret
adc
xor
cmc
inc
out
jns
loop
sub
ja
inc
mov
xchg
add
dec
push
aad
cwtl
mov
cld
mov
or
mov
mul
rolb
and
fldenv
daa
sbb
mov
adc
add
sbb
xchg
test
mov
outsl
push
mov
add
sub
jbe
call
rcrb
leave
addr16
lods
inc
and
dec
inc
outsl
inc
out
hlt
mov
pop
nop
xor
adc
add
scas
push
stos
adc
test
mov
or
adc
mov
mov
insb
add
imul
adc
fildll
popf
mov
jmp
test
add
pcmpgtb
add
xor
cmp
push
imul
insb
or
jno
or
jp
mov
pop
cmp
mov
jno
adc
ret
mov
fwait
int
aad
sbb
enter
mov
jp
repnz
sbb
lret
push
fldt
test
into
loope
scas
sbb
out
mov
lds
jp
adc
insl
push
xor
xchg
inc
je
dec
cli
push
sbb
stos
pop
cmp
sub
push
daa
pop
jnp
test
pop
in
stos
icebp
adc
icebp
inc
in
xorl
sub
mov
jle
imul
into
popf
sbb
sbb
mov
xchg
inc
inc
ror
xor
rcrb
je
fwait
and
add
mov
popf
mov
ja
outsb
icebp
inc
pop
dec
sub
xor
cmp
jns
test
push
dec
gs
fmull
mov
push
add
aad
mov
bound
adc
pop
clc
ljmp
jo
insl
jmp
shrb
aam
sub
sbb
jo
cmp
pushf
sbb
stc
jae
mov
jae
cmp
jb
xor
adc
xor
es
cmp
popf
ds
pop
js
dec
pop
int
movsb
repz
mov
pop
in
mov
cmp
mov
adc
int3
lods
bound
in
mov
int
mov
aas
roll
inc
jge
push
jmp
sub
popf
lret
insb
popf
mov
popa
cltd
pop
mov
dec
sbb
mov
mov
arpl
cmp
inc
out
cs
sub
xlat
mov
and
or
movsl
inc
stos
xchg
aaa
sti
pusha
aaa
push
xchg
call
js
sti
mov
jo
xchg
xor
mov
inc
mov
jns
mov
push
int3
sti
xchg
loop
fstps
loop
ret
mov
xor
and
and
xor
xchg
mov
cmp
ret
clc
daa
das
fs
hlt
lret
xchg
clc
idiv
popf
dec
inc
add
mov
mov
dec
fisubs
xor
repnz
mov
add
test
xchg
xchg
push
aas
jne
scas
pop
mov
jae
mov
lret
dec
push
in
push
sub
lcall
or
fs
lcall
or
xchg
jl
pop
mov
push
nop
icebp
data16
and
lock
aaa
loope
or
ljmp
xchg
je
mov
es
test
ds
pop
and
in
pushf
xor
cli
subb
push
add
cltd
cmpsb
pushf
mov
pusha
hlt
scas
jle
mov
cltd
mov
imul
jo
xchg
cmpsl
inc
mov
iret
mov
lahf
and
stc
mov
add
pop
push
js
imul
and
mov
or
fs
pop
daa
fstl
nop
jp
fldcw
ror
dec
push
sbb
shll
pop
repnz
jp
mov
xor
loope
xlat
outsl
jns
dec
mov
hlt
imul
iret
outsl
adc
aam
cs
adc
lret
add
push
jb
mov
rcl
mov
xchg
cmpb
mov
divb
sbb
push
lods
loope
jnp
lods
cld
scas
inc
aaa
int3
pop
mov
fwait
jp
sub
dec
cmp
ret
loop
xor
sub
push
cld
pop
cmpl
xor
mov
mov
sub
jmp
dec
xchg
movsl
sbb
fcmovnu
test
pusha
movsl
cwtl
jle
lods
or
add
in
xchg
sub
jmp
ret
rcpps
ret
inc
in
mov
inc
dec
mov
mov
push
cmp
imul
data16
mov
mov
jmp
or
ja
and
push
pop
mov
mov
call
out
loopne
clc
pop
add
push
push
fmuls
movsb
cmp
mov
push
les
and
aad
fcom
ds
adc
xor
add
sbb
popf
std
or
iret
mov
pop
or
decl
jmp
imul
icebp
mov
and
sub
adc
mov
adc
les
mov
daa
push
loop
hlt
push
jle
or
arpl
fisubrs
out
sbb
adc
ja
jecxz
or
lret
jns
cwtl
sub
sub
into
mov
into
movsb
push
lock
das
pop
sahf
jns
int3
jns
xchg
and
loop
addr16
lahf
fcomip
and
xchg
roll
push
andl
mov
push
pop
icebp
adc
popf
imul
decb
andb
fdivrl
xchg
int
outsl
jo
int
push
or
or
std
js
or
in
jmp
fnstcw
jle
fucom
cmc
xchg
inc
pop
adc
pop
xchg
push
test
adc
fdivrp
sar
sbb
testl
and
inc
dec
pop
in
jae
andb
pop
roll
fwait
pop
push
mov
cmp
fstpl
rcl
repz
adc
cld
or
sbb
lds
iret
gs
cli
popl
jge
dec
outsl
ja
dec
pop
xor
arpl
outsb
cwtl
push
jl
dec
dec
cwtl
jg
je
push
lret
and
jns,pt
dec
imul
push
add
mov
jnp
test
pop
mov
stc
adc
outsl
xchg
pop
stos
test
call
mov
cmp
push
xchg
mov
push
push
dec
fmuls
jne
push
mov
mov
fldl
pop
mov
pop
pop
pop
adc
mov
fidivs
push
xor
test
push
in
in
ret
inc
mov
subl
inc
add
scas
cmp
mov
add
bound
je
cmc
lahf
out
inc
push
std
dec
mov
dec
add
jo
fiadds
pop
cmpsb
pop
mov
cmp
or
cs
mov
jbe
es
fisubrs
pop
add
stc
call
js
stos
xor
mov
and
sub
mov
fsubs
add
jecxz
pop
cltd
pop
ss
sub
gs
push
ljmp
xchg
iret
add
mov
movsl
jl
dec
xor
mov
out
ffreep
mov
add
andl
scas
xor
adc
sti
sti
negb
lods
sbb
std
fsubrs
call
sbb
or
dec
ud0
jb
fnstenv
inc
mov
lea
cmpsb
pushf
lock
into
xchg
jle
lds
and
loopne
or
es
test
xor
aam
fwait
call
lret
pop
and
fwait
mov
fwait
loopne
push
mov
mov
jmp
out
pop
bound
out
sbb
mov
test
das
sbb
xor
cmc
jle
out
into
testl
and
xchg
ror
lock
stos
cmp
cld
in
sarl
jbe
scas
push
cmp
sbb
out
nop
jl
pop
mov
cmp
ficompl
jns
sahf
mov
cmp
cmpl
adc
add
loope
mov
scas
popa
js
jmp
scas
sbb
mov
imul
cmp
iret
in
faddp
loop
cmp
cmpsl
popa
out
and
push
push
adc
sub
mov
sbb
mov
push
mov
int
sbb
scas
pop
pop
jmp
movsl
push
sbb
stos
rclb
push
shrl
sbb
jno
inc
sbb
test
out
mov
jge
jge
ja
lret
es
leave
lret
test
inc
negb
in
and
xor
shrl
in
cmp
jb
lds
out
cs
push
mov
sub
cmpb
and
mov
cmp
sub
loope
icebp
shll
in
sbb
arpl
pusha
pop
repz
adc
pop
push
xor
inc
clc
push
adc
movsl
jnp
iret
popf
loope
cmp
xchg
jge
ljmp
mov
pop
xchg
jle
adc
in
mov
aaa
testb
push
mov
lcall
mov
inc
mov
fs
jmp
or
adc
jmp
pop
gs
movsl
xchg
adc
xchg
mov
int
test
or
jb
xor
lods
mov
bound
mov
sti
pop
js
rcrb
pushf
lret
sbb
rclb
out
fadd
or
adc
mov
outsb
xor
sahf
lea
pop
out
push
mov
sbb
test
jbe
xor
cmp
subl
add
jl
shll
or
rdmsr
xorb
inc
sbb
pop
mov
xchg
push
pop
js
stos
loope
xor
das
mov
das
mov
xchg
std
sbb
or
lea
xorb
mov
push
inc
mov
fistpl
push
pop
pop
nop
ret
ficomps
mov
dec
mov
pop
mov
int
xchg
insb
push
push
inc
mov
push
mov
out
divb
je
push
or
jle
roll
daa
mov
aaa
xchg
cmp
mov
add
mov
and
mov
mov
sbb
js
in
iret
mov
pop
les
inc
push
sbb
vucomisd
mov
idivl
jb
movsl
lahf
sbb
jmp
dec
out
or
push
add
cs
mov
jecxz
xor
out
mov
dec
adc
pop
ja
jmp
rolb
mov
repz
sub
mov
std
movsl
lahf
mov
mov
jmp
inc
out
ret
fstps
mov
mov
jge
push
cmp
insb
jno
jecxz
or
mov
xor
dec
test
inc
mov
sbb
stos
mov
bound
mov
popa
mov
jno
js
xchg
std
jne
rcll
inc
and
cmp
adc
adc
outsb
stos
aam
dec
push
or
push
aad
inc
inc
outsb
sbb
adcl
ret
arpl
adc
or
divps
in
inc
mul
int
sub
sub
int
dec
dec
inc
js
cmpsl
or
adc
adc
nop
sbb
or
xchg
cli
pop
int3
andl
inc
js
test
xchg
dec
daa
std
jae
adc
shrl
sbb
lods
pop
adc
aam
lahf
test
pop
xor
or
inc
jnp
mov
std
add
push
mov
mov
mov
mov
xchg
dec
push
dec
cmp
icebp
inc
push
mov
dec
scas
push
test
sahf
xorl
fs
imulb
dec
mov
es
mov
aad
and
pop
mov
push
xor
shrb
fdivrs
sbb
push
jbe
lcall
pop
inc
adc
dec
pop
push
fwait
push
jbe
fwait
push
fcomps
sub
popl
jp
rep
insb
sub
loopne
add
pop
mov
dec
fadd
nop
push
mov
dec
jo
jecxz
or
outsb
hlt
jg
inc
je
and
push
aam
jo
out
sbb
outsb
pop
mov
out
lods
dec
mov
daa
aad
loop
xor
jno
pop
outsl
popa
insl
mov
jmp
sbb
and
pop
cmpsl
mov
xorb
sbb
stos
cmp
adc
inc
sub
jge
sbb
sub
sbb
mov
sbb
xlat
cmpsb
aad
xor
rcl
icebp
mov
xor
or
dec
inc
out
inc
push
int3
push
jo
jbe
xor
insl
adc
aam
mov
sub
pop
cmpsl
pop
jae
lahf
stos
into
icebp
push
dec
imul
loope
fcmovne
mov
mov
lods
arpl
or
mov
jb
inc
cli
aas
cmp
add
cmpsb
inc
sbb
jne
pusha
repnz
into
cli
add
sarb
jns
push
ror
mov
push
bound
inc
ja
cli
data16
cmp
int
insb
push
pop
add
or
add
mov
pop
inc
lock
cmp
out
jbe
mov
sub
call
jne
or
cmp
stos
cmp
mov
and
adc
or
imul
icebp
mov
sahf
add
add
mov
pusha
dec
push
pop
push
outsl
jns
cmp
xchg
or
cld
add
rcll
cmpsb
test
add
jmp
aas
sub
testw
jmp
neg
pop
push
mov
ret
js
mov
lock
roll
aas
shll
std
jecxz
std
aad
mov
inc
add
das
sbb
push
sahf
ds
cs
aas
jecxz
xor
or
push
sbb
pop
adc
push
and
repnz
xchg
cli
mov
adc
adc
mov
mov
fcmovb
into
cmp
pop
adc
or
fcmovnu
enter
xor
js
cmp
hlt
push
int3
cmp
leave
xchg
xor
inc
out
sbb
lock
adc
ss
movb
call
in
jae
andl
rorb
lods
push
jne
sbb
ret
arpl
loop
xchg
pop
xchg
stos
pop
sub
ret
insl
popa
out
sub
imul
adc
mov
js
mov
loope
jge
dec
roll
shll
or
cwtl
and
add
push
pushf
mov
and
sbbl
pop
adc
or
sub
jae
loop
dec
into
push
addl
mov
out
call
jmp
in
xchg
lcall
pop
jmp
xchg
cmpsl
xchg
jbe
xchg
pop
add
enter
out
mov
into
std
add
fdivl
sub
xchg
jmp
cmp
mov
push
inc
ret
insl
xor
cld
jnp
stos
xor
sub
push
dec
stos
fcompl
pop
in
mov
mov
inc
js
mov
sbb
cs
clc
inc
sbb
add
fstpl
xchg
sub
pop
lcall
xchg
cwtl
push
push
ljmp
mull
in
jp
call
test
cmp
test
pop
and
fiadds
mov
jns
inc
cld
mov
add
push
ljmp
addl
lret
or
adc
lods
mov
or
xchg
mov
in
mov
je
add
adc
out
jp
fstpl
push
mov
in
loopne
jns
or
insl
or
dec
push
xchg
xchg
jo
pop
sub
stc
dec
xchg
data16
jg
mov
daa
aad
ret
jnp
out
mov
and
je
push
push
mov
rorl
pop
mov
mov
roll
loopne
jle
stc
cltd
ja
scas
mov
push
sbb
insl
aas
sahf
shlb
inc
push
push
cli
pop
cwtl
push
push
xchg
mov
or
mov
stos
mov
push
sbb
arpl
das
xor
int3
xchg
std
push
test
cld
mov
pop
push
lock
inc
push
pop
jg
mov
and
or
xchg
ficomps
adc
jl
insl
test
sbb
int3
sti
mov
int
scas
lret
stc
push
fisubrl
data16
push
in
stc
call
cli
ss
mov
or
pop
inc
gs
inc
fnstsw
fimuls
jl
leave
jbe
shl
jne
cltd
fld
mov
and
outsb
das
rcrb
inc
mov
cli
aam
ss
push
mov
fs
add
add
outsb
iret
mov
dec
ret
sbb
sbb
xor
outsb
sbb
hlt
jbe
mov
jne
fildll
push
out
jmp
sub
push
in
loopne
imul
sub
jle
lods
or
xchg
push
cmp
dec
test
cmp
ja
bound
cwtl
fsubrl
pop
stos
ds
cmp
sbbl
bound
or
pop
dec
dec
jb
rcl
dec
lods
push
fcomi
xor
movzwl
es
adc
mov
out
aas
jl
sahf
sbb
push
sahf
mov
popf
pop
inc
out
mov
cmpsb
push
pop
test
cli
fcmovu
fdivr
int
pop
shlb
sbb
loop
lret
and
xchg
mov
push
in
mov
xchg
movsl
les
int3
lds
push
mov
cmc
ret
mov
dec
imul
push
insb
push
call
inc
dec
mov
jg
push
lods
sbb
pop
push
xor
out
mov
leave
mov
inc
mov
sbb
mov
xor
or
adc
jns
enter
fs
pushf
or
mov
sbb
sub
cmp
dec
inc
and
dec
add
add
sub
pop
and
mov
jmp
jp
fwait
push
mov
jle
stos
fsts
mov
incl
pop
xor
stc
data16
fmulp
lock
mov
mov
jae
jmp
mov
decb
call
lods
mov
cmp
inc
imul
adc
sbb
lock
dec
pop
cmp
mov
sbb
ret
out
pop
xchg
sarl
dec
jmp
inc
fld
repnz
xchg
fsubrs
jle
std
xorb
jecxz
and
das
lret
faddl
push
push
dec
dec
pop
dec
into
or
add
jp
fcoml
out
sbb
lea
xchg
in
fdivs
and
test
dec
xor
pop
pop
ljmp
ljmp
stc
test
sbb
rol
sbb
shr
xchg
xchg
add
sbb
jmp
sbb
ret
add
jl
sub
xchg
outsb
test
adc
popa
repz
mov
hlt
adc
mov
cmpl
nop
jnp
jmp
int
cmp
jp
movsb
adc
mov
movsb
pop
fucom
mov
outsl
les
or
inc
jp
ds
mov
leave
lret
pop
sbb
mov
jp
adc
insb
int
pop
sahf
pop
pop
cli
push
pop
sub
jge
dec
mov
cmpsb
cld
push
and
inc
popa
mov
movb
pop
and
add
mov
add
mov
mov
and
mov
inc
jle
pop
lea
or
pop
outsl
insb
push
das
adcl
cmp
iret
mov
sbb
inc
push
xchg
jl
data16
and
aad
arpl
loope
cs
fst
jmp
fisubl
push
sub
and
data16
lret
hlt
sbb
push
inc
adc
push
or
out
ret
inc
icebp
jno
sbb
or
mov
adc
mov
pushf
pusha
pop
in
mov
dec
xor
les
cltd
arpl
jno
mov
gs
and
dec
sahf
mov
add
repz
mov
dec
aam
and
push
scas
cmp
mov
mov
jl
movsb
jnp
fcompl
in
fnstenv
jmp
mov
pop
loope
mov
aas
sub
mov
in
shlb
out
cmp
cmp
and
adc
cs
sub
movsb
jge
xor
adc
push
out
stos
in
orl
cmpsl
and
popf
sti
decl
rcl
xchg
pop
or
or
mov
pop
pushf
cmpb
jge
daa
jge
jl
int
push
pushl
in
mov
int
cmp
cmp
sub
das
mov
dec
ret
stos
mov
mov
push
push
pop
je
out
das
inc
inc
dec
outsl
arpl
mov
dec
pop
and
xor
sub
insb
into
inc
enter
je
mov
in
jle
inc
sti
sbb
lea
out
xor
xchg
fsubs
mov
lea
push
fimuls
add
mov
xchg
xchg
lods
add
push
popf
out
mov
jns
adc
cwtl
cmc
bound
inc
pop
dec
sbb
adc
sub
ror
mov
stos
push
daa
sub
hlt
xor
repz
jb
mov
mov
inc
inc
mov
push
cmp
out
xchg
fadds
add
test
out
arpl
sub
cmp
lcall
push
cmpsl
and
rcll
sahf
mov
icebp
bound
hlt
in
mov
roll
inc
sbb
xchg
ss
sub
scas
mov
ret
shlb
jp
lock
or
mov
cmpsl
mov
cmpsl
iret
inc
sub
inc
push
push
adc
cwtl
xchg
add
in
ret
push
and
mov
rcrl
dec
clc
or
xchg
and
jmp
leave
xor
and
xchg
insl
movsb
pop
and
and
sbb
bound
adc
sarl
pusha
icebp
xchg
xlat
mov
hlt
dec
push
out
negb
push
push
xchg
daa
lds
ja
stc
pop
dec
sub
test
jo
push
stos
add
sbb
jmp
mov
mov
adc
mov
jae
push
scas
mov
push
es
fwait
shll
cmpsb
cs
stc
adc
aaa
in
pop
xchg
xchg
mov
movsb
xchg
jo
adc
push
incb
mov
lcall
mov
pop
pop
push
sbb
cli
xchg
lret
out
pop
mov
in
inc
cmpsb
dec
sbb
daa
in
je
mov
sbb
inc
xorl
enter
inc
mov
or
dec
mov
inc
cmpsb
pop
pushf
push
xlat
adc
jmp
stc
rcll
js
push
pop
cmp
dec
fists
or
nop
pop
jecxz
gs
or
arpl
mov
jnp
xchg
int3
movsb
xor
icebp
int3
add
mov
hlt
sub
adcl
push
cltd
cmp
cmpsl
fldz
sbb
or
xor
mov
mov
sahf
popa
orl
and
loop
in
jg
iret
inc
jle
push
adc
cmpsb
in
cs
xor
les
in
hlt
push
xchg
iret
iret
sub
in
push
out
jl
sub
push
and
sub
xchg
mov
repnz
push
add
sbb
into
arpl
popa
fnstsw
into
sub
or
rcl
fs
xor
mov
jg
push
popa
repz
cmpsb
jns
push
mov
mov
or
mov
sbb
xchg
pop
mov
ret
aaa
mov
xchg
sub
loope
in
jle
lods
mov
inc
xor
mov
and
jne
in
jne
xchg
aaa
or
push
xchg
pop
cmp
mov
pusha
jp
jae
icebp
cld
mov
sbb
mov
shl
daa
in
scas
outsl
mov
pop
and
or
xorl
or
cwtl
pop
cmp
es
test
inc
stc
or
jo
lods
xchg
xor
mov
mov
add
adc
push
out
aaa
jmp
out
jmp
scas
mov
xor
jae
sbbl
xor
cmp
jne
lds
fstpt
les
jl
dec
shrb
xor
lahf
xchg
loop
push
or
out
inc
or
sbb
mov
stos
es
dec
icebp
dec
test
je
shlb
std
ds
push
push
jmp
adc
xchg
lret
jb
rolb
sbb
jg
fwait
gs
mov
subl
cwtl
mov
push
xchg
adc
frstor
push
not
std
pop
jp
mov
repz
jno
xchg
sbb
mov
push
xor
sbb
ret
mov
fidivs
dec
xchg
clc
dec
mov
or
inc
inc
fdivrp
stc
mov
enter
sti
push
inc
mov
notl
iret
add
scas
lret
mov
dec
clc
mov
daa
es
repnz
cmp
cmp
std
hlt
cwtl
cld
xlat
jl
pop
xor
les
inc
cmpsb
out
adc
ret
lods
sub
pop
movsl
sub
gs
inc
pop
outsl
xor
out
mov
test
ja
or
fstps
ljmp
insl
mov
int3
test
out
into
ljmp
outsl
pop
loopne
inc
adc
ficompl
mov
dec
insl
js
movb
insb
shrl
shrl
xor
cmp
mov
pop
mov
mov
add
es
out
cmc
mov
dec
in
xor
add
testb
movsb
imul
pop
test
jno
dec
popa
orl
mov
xchg
pop
mov
and
out
stos
daa
and
pop
andb
adc
pop
push
dec
cmp
mov
and
pop
orb
sub
inc
loop
mov
out
clc
jne
in
sahf
fucomi
or
adc
xor
add
mov
test
iret
insl
inc
movsb
sbb
dec
mov
ror
ret
shlb
dec
pop
mov
mulb
sbb
inc
scas
add
fwait
jge
jl
insb
xchg
cmc
movsl
cmpsb
mull
mov
sti
scas
inc
lods
out
ss
test
push
jmp
stos
dec
sarl
adc
cmp
xchg
dec
cwtl
idivl
mov
pop
or
popl
popa
push
movsb
adc
vpor
add
call
outsl
jle
and
int
fldcw
insl
hlt
mov
rclb
or
inc
mov
xlat
inc
loopne
xchg
mov
jns
inc
push
rclb
dec
mov
daa
adc
mov
aad
jne
push
js
fwait
int
mov
sub
pop
jmp
stc
mov
pop
in
xor
or
sbb
xchg
out
in
idivb
stos
sbb
in
cwtl
xor
fs
js
sbb
mov
into
ror
cmp
scas
fistps
sahf
rorl
jb
dec
jb
xor
imul
lahf
mov
hlt
jbe
and
into
movsl
and
cmpsb
dec
aas
dec
fldenv
pop
cmp
jno
mov
leave
enter
mov
loopne
roll
stos
sub
stc
fisttps
arpl
popa
xchg
sub
ja
jns
ds
adc
popa
pop
pushf
pop
push
adc
sbb
and
movsb
cltd
test
cwtl
movsb
sbb
add
push
xchg
out
enter
loopne
pusha
clc
dec
pusha
add
dec
mov
dec
nop
mov
shll
xor
mov
loop
jmp
in
pop
addb
cwtl
sahf
mov
add
stos
movsb
pmuludq
ret
and
sbb
leave
push
inc
sub
mov
fs
outsl
test
mov
sbb
out
jo
ss
mov
add
inc
cltd
pop
dec
insl
xor
fstp
xchg
loope
jo
shrb
aaa
mov
xlat
dec
mov
aad
add
movsl
movsb
movsl
or
imul
jno
mov
jae
sub
out
lds
jecxz
xor
pop
pusha
sub
xchg
sbb
pop
dec
lret
inc
scas
rclb
icebp
leave
mov
mov
add
push
xor
dec
mov
in
mov
int3
lods
rcrl
repz
fcomps
out
push
stos
outsl
mov
add
mov
mov
movsb
xor
fiaddl
jns
insl
push
xor
loope
cmp
mov
xor
xor
fistps
xor
or
lret
out
push
or
mov
data16
mov
push
popf
mov
lods
insb
cmpsb
lods
sub
mov
aaa
sti
stos
stc
xchg
fcomp
xor
sbb
pushf
addr16
jecxz
mov
orb
push
mov
push
jl
dec
or
add
movsl
mov
pop
mov
cmpsl
sbb
cmp
push
cmpsl
add
dec
mov
mov
xor
es
fs
fwait
es
jo
add
inc
push
arpl
movsl
fcompl
add
cmpsb
mov
push
jge
fidivs
imul
ret
sub
repnz
jle
sbb
data16
pop
cmp
add
ja
xor
dec
call
adcb
cli
popf
jmp
inc
sbb
loop
jl
add
mov
popf
icebp
adc
jmp
out
cmpsb
mov
mov
mov
cmpsl
xor
popf
lds
imul
jbe
notl
jmp
clc
mov
cmpb
or
aas
push
or
and
insb
sahf
cmp
sbb
xchg
cld
or
jbe
lret
jge
insl
aam
lcall
rep
pushf
test
pop
imul
pop
cmp
bndldx
jmp
in
xor
stc
pusha
lahf
or
sub
push
push
out
ret
ja
mov
push
mov
mov
ds
outsl
push
repz
rcrl
dec
inc
xchg
cmp
push
in
rcrb
xchg
insl
push
pop
mov
repnz
xchg
rcrb
xchg
jb
dec
loopne
adc
hlt
les
jo
xchg
adc
insb
adc
mov
adc
push
mov
lret
xor
std
or
jb
push
stc
andl
jp
sub
rcrb
leave
cli
popa
cwtl
scas
push
imull
repnz
int3
aam
add
jge
ret
push
push
or
nop
xchg
lahf
pop
sub
test
mov
leave
and
xlat
mov
cs
loope
data16
stos
js
sahf
imul
outsb
fcoms
stos
insl
lea
dec
mov
cld
xchg
movq
cmc
add
pop
jp
rcr
dec
adc
shlb
dec
mov
enter
in
mov
iret
jns
adc
aas
inc
hlt
sahf
out
pop
dec
stos
outsb
fxch
push
outsl
ljmp
and
inc
jae
xor
out
jge
push
leave
xchg
cmp
adc
jg
cmpsl
ror
rorl
inc
and
inc
sub
xlat
xor
pop
adc
test
cmpsb
push
sbb
mov
push
xchg
sub
mov
mov
dec
or
cmpsl
jnp
inc
aas
repz
push
xor
aas
jl
iret
aas
lock
icebp
mov
daa
fldl
cmp
test
dec
fcmovb
dec
adc
adc
fs
enter
dec
mov
test
sub
int3
dec
sti
adc
lret
sti
mov
sbb
mov
push
subb
cmp
mov
orl
xchg
popa
aas
dec
pop
and
clc
nop
scas
jo
push
ss
or
jge
xor
push
add
loope
enter
out
mov
in
mov
insl
jno
pop
lods
cmpsb
and
or
incl
dec
fs
addr16
add
mov
daa
fadds
sub
insl
push
sarl
shrb
rorl
inc
iret
push
cmc
adc
mov
fsubrs
int
in
sub
mov
js
out
sbb
inc
xchg
pop
mov
jmp
mov
mov
mov
popa
adcl
add
int3
xchg
shlb
jp
repz
roll
lret
leave
arpl
out
pop
ret
lea
in
jns
pop
mov
fisttpll
cmp
imul
ss
pop
sbb
popf
pushf
mov
fdivl
dec
pop
jl
push
or
stos
repnz
lcall
pop
lods
jae
jbe
mov
push
cmpl
gs
xchg
movsl
push
push
xlat
cmp
push
mov
fwait
cwtl
inc
and
or
aaa
dec
pop
aaa
mov
sub
add
or
aas
and
cmp
and
out
pop
xlat
aaa
dec
inc
repnz
test
pushf
mov
and
adc
fcomip
pop
psrlq
ljmp
sbb
dec
and
sub
xchg
add
jnp
push
adc
les
andl
mov
fiadds
sbb
mov
ds
mov
cmp
cmp
jae
mov
es
mov
sarb
stos
mov
jae
out
cmpsl
jecxz
push
or
cmpsl
daa
or
pcmpgtb
test
jae
jle
fiadds
pop
pop
fisubrl
icebp
arpl
adc
inc
mov
ficoml
mov
daa
test
loopne
mov
pop
cmc
or
lcall
sub
mov
mov
push
idivl
pop
in
popf
mov
push
stos
jb
jo
dec
sub
cltd
out
adc
inc
dec
ficompl
mov
push
cmc
mov
push
xor
push
cmp
mov
lea
inc
fmull
cmp
jmp
aam
in
sbb
lds
sbb
enter
mov
lock
xchg
leave
sti
jle
jno
dec
and
inc
jg
push
fcmovbe
aas
nop
stc
cmp
mov
xchg
faddp
dec
lds
imul
adcl
and
push
lods
mov
lret
mov
push
stc
push
in
gs
jnp
xchg
xor
hlt
push
inc
adc
sub
pop
cmp
jle
outsb
mov
or
adc
push
lahf
xor
jl
sub
inc
jecxz
dec
icebp
mov
push
fildl
pop
js
jge
adc
jbe
adc
fwait
mov
mov
dec
push
fnstsw
fsts
int3
mov
inc
add
xor
pop
fcoms
adc
notb
call
cmpsb
and
pop
pop
es
mov
addr16
int3
xlat
stos
mulb
call
add
mov
mov
dec
stc
xor
icebp
and
aas
sbb
clc
xchg
sub
gs
push
fadds
lcall
pop
data16
cmp
cmp
sub
dec
imul
scas
lds
repnz
repz
adc
and
outsb
lahf
int3
call
add
lock
push
arpl
jge
addr16
sub
mov
add
cmpl
dec
dec
jae
rcr
stos
mov
push
xchg
xor
jmp
subl
xchg
cli
faddl
shlb
pop
loopne
mov
inc
jae
or
sbb
sub
jns
cmp
lea
call
or
mov
insb
add
mov
inc
insl
or
aam
mov
sahf
sbb
inc
mov
push
faddp
insb
sub
jne
jns
push
roll
rclb
in
or
xchg
bound
adc
stos
jo
cld
ljmp
test
pop
ficomps
sti
or
ja
in
mov
cmp
popa
mov
jg
clc
push
xor
adc
out
mov
lret
cmpsb
fldenv
sbb
fnsave
xlat
mov
mov
mov
in
jge
add
inc
popf
nop
bound
mov
lds
sbbb
adc
mov
idivb
pop
movsb
ljmp
loopne
lret
sub
dec
sbb
pop
jo
pop
test
cmp
pop
adc
lods
add
push
cmp
mov
sbb
movsl
sub
hlt
xchg
push
inc
push
sub
push
aad
or
push
das
test
cmp
mov
xchg
repz
ss
shl
cmpsb
pop
mov
mov
add
dec
dec
test
rcr
cltd
or
xchg
sbb
dec
stos
jp
push
mov
xchg
inc
das
mov
pop
test
xchg
and
dec
mov
aad
sbb
sbb
in
and
adc
les
fsubrp
mov
int
imul
mov
scas
pop
push
or
aad
inc
push
scas
scas
fsubp
pop
mov
pusha
enter
pop
aad
pop
sbb
and
aam
fnstcw
mov
add
jl
cld
push
adc
mov
dec
sub
fwait
cld
inc
std
mov
in
or
cmp
push
pushfw
add
pop
es
pop
sbb
or
mov
jo
jecxz
dec
jno
insl
push
mov
pop
add
into
push
push
test
sbb
cmpsl
push
inc
jnp
mov
push
cmp
or
dec
imul
and
mov
mov
push
or
xchg
add
adc
lret
loopne
fprem
shlb
rcrl
fdivrs
xor
iret
cmp
jl
adc
outsb
test
xchg
das
inc
lea
xchg
sahf
xchg
push
adc
mov
push
cli
mov
ss
pop
mov
test
dec
cmpsl
adc
out
cli
sub
dec
cmp
adc
add
nop
and
out
mov
sub
repnz
cmp
mov
sbb
filds
cmp
popf
jno
add
popf
test
dec
pop
imul
push
dec
fisubs
and
adc
sbb
shrl
imul
mov
js
and
sbb
dec
push
cmc
nop
lods
or
cmp
std
mov
bound
cld
cmpsb
out
lea
xchg
jb
mov
mov
and
and
push
jmp
xchg
stos
dec
lret
push
jae
mov
pop
sub
or
insb
lahf
jns
aam
icebp
imull
mov
aas
mov
out
dec
fsubs
add
aam
fsubs
rcrb
pushf
clc
shr
inc
scas
xor
jp
repnz
lahf
imul
add
dec
or
imul
jmp
and
stos
int
lds
movsl
push
stos
sub
loop
rolb
das
xchg
lahf
fldenv
dec
repz
hlt
es
xchg
scas
dec
out
cmp
loop
xor
jbe
adc
pop
lods
scas
xchg
jg
pop
leave
stos
cmp
test
lods
or
jge
jmp
int3
stos
js
imul
inc
mov
cwtl
ljmp
fldcw
fists
lods
lret
mov
pop
andb
aam
cmp
test
fnstenv
ljmp
push
mov
and
sbb
cmpsb
aam
inc
pop
outsb
aas
push
pop
lret
push
fldcw
scas
add
test
imul
mov
es
jnp
ss
inc
mov
jg
shl
mov
adc
mov
add
push
sbb
xor
xchg
jae
nop
cmp
push
bound
sbb
pop
loop
fsubl
divl
cmpsl
loop
xchg
xor
mov
dec
ret
dec
adc
test
repnz
orb
int3
adc
in
xlat
push
pop
xchg
call
cli
sbb
jecxz
jg
jmp
enter
cmp
lahf
pop
jp
pop
leave
notl
or
push
jg,pn
rorb
sbb
mov
lret
iret
pusha
test
cmp
ret
push
pop
pop
mov
call
xor
jno
insb
subl
push
loope
add
stc
push
repz
cmpb
xor
dec
shrl
popa
push
fisttps
sub
stos
xchg
xchg
sbb
dec
repnz
mov
mov
lcall
aad
dec
cmpsb
rorl
sub
mov
scas
push
mov
dec
leave
clc
jo
mov
cs
mov
xchg
movsl
dec
addl
es
lods
xorl
and
mov
fsubrl
and
out
pusha
test
mov
xor
push
jno
data16
cmpsl
jle
daa
dec
xchg
test
dec
add
xchg
xorb
mov
xlat
add
xor
jmp
xchg
mov
outsl
or
or
mov
push
arpl
and
ret
in
fisubrs
dec
inc
bound
jl
jmp
bound
dec
lahf
pop
movsl
fstps
insb
ds
aam
dec
imull
sbb
xchg
hlt
dec
xor
paddb
sub
cmp
add
xor
fstl
dec
adc
aam
adc
shrb
out
insl
std
inc
rcl
outsb
aad
imul
pop
out
mov
rclb
out
mov
outsb
comiss
mov
or
clc
les
lock
out
or
fdivr
adc
sub
lea
mov
inc
mov
hlt
in
test
lea
dec
mov
or
fidivl
cmpsl
or
ss
push
dec
push
in
sub
or
push
add
cwtl
add
sbb
movsb
das
or
das
add
xor
xchg
jecxz
fnsave
push
ss
das
es
div
fcmovne
imul
xchg
jb
xor
cmp
in
or
jns
sarb
sbb
inc
push
mov
daa
int
inc
mov
addr16
push
cmpsl
cmp
inc
lea
cmpsl
pop
notl
ss
enter
push
rol
aas
ljmp
xchg
pop
jns
out
call
pop
loope
adc
into
xor
pop
int
test
shl
nop
cmp
pop
cli
pop
arpl
xchg
rclb
jp
orl
fnsetpm(287
mov
lea
pop
sub
das
mov
inc
icebp
test
adc
cli
dec
jae
mov
push
hlt
js
mov
sbb
push
add
pop
lret
xor
loope
xor
sahf
orl
cmp
jb
mov
add
cmpsl
push
leave
sti
fnsave
xchg
mov
jns
sbb
mov
loopne
mov
jge
mov
sahf
insl
loope
popf
in
enter
push
je
clc
pop
cld
jecxz
out
mov
mov
ret
outsl
pop
stos
stos
in
mov
jo
jo
xor
xor
mov
inc
cmpl
lods
lcall
iret
inc
pusha
leave
std
dec
roll
rol
jns
scas
cwtl
push
dec
es
fbld
and
inc
mov
rorl
les
xchg
cmp
and
cmc
bound
stos
inc
inc
inc
cmpsb
jae
les
gs
test
jne
mov
dec
pusha
mov
jo
scas
pushf
stos
ja
stos
and
pop
inc
outsl
lcall
push
outsl
test
mov
and
xchg
lret
aam
sub
xchg
icebp
lods
in
or
cwtl
cmp
push
filds
dec
add
rorb
sbb
add
jbe
mov
sbb
mov
out
and
fisttpll
push
mov
inc
pop
insb
jno
addr16
mov
faddl
adc
pop
outsl
je
and
push
xchg
lods
testb
imul
scas
mov
add
jge
push
push
jge
js
daa
mov
and
jbe
jmp
add
inc
push
adc
into
add
bound
jae
jb
insb
shrb
jmp
or
popf
add
and
or
pop
inc
pop
cmp
mov
lret
ss
loope
sahf
lods
jb
and
jae
mov
lret
dec
pop
enter
insb
jmp
cmp
rcr
sbb
mov
rorl
fistl
adc
add
call
jl
movsl
and
mov
cmp
and
scas
xchg
mov
adc
mov
cmp
sbb
lock
pop
sbb
jne
dec
in
sti
movsl
pop
mov
inc
mov
sbbl
ljmp
mov
outsb
adc
pop
xchg
mov
jmp
add
push
cmp
or
popa
mov
and
pop
push
imul
cmp
push
sahf
cwtl
fnstenv
mov
shlb
pop
xchg
push
mov
mov
cmp
mov
or
xor
outsl
or
sub
jne
loopne
sti
incl
jno
jg
cmp
mov
out
je
mov
add
mov
or
or
push
lret
idivl
outsl
arpl
es
xor
xor
sub
mov
or
or
jg
ds
out
cmp
xor
test
jl
mov
int
push
dec
testb
xchg
aaa
xorl
inc
sbb
sbb
in
shlb
or
adc
cmp
lea
fcoml
push
cmp
jo
js
inc
mov
repnz
dec
lahf
jmp
call
sbb
cmp
inc
jecxz
and
stos
inc
sahf
and
call
ss
add
ret
ds
hlt
loopne
sub
or
or
addr16
std
sbb
shlb
imul
push
and
push
jbe
gs
push
add
ja
js
in
shrl
jns
cltd
lret
pusha
pop
xorl
push
inc
ja
outsb
ret
sarl
and
mov
repz
pop
lea
dec
ljmp
pop
sahf
daa
fnstcw
or
popf
add
adc
jmp
xchg
iret
das
xchg
xchg
out
sbb
test
adc
ret
xor
inc
jns
cli
mov
add
or
dec
fiaddl
jnp
sub
dec
lods
xchg
fcompl
adc
xchg
xor
aaa
dec
push
repz
outsb
jbe
dec
or
or
mov
inc
insl
out
icebp
cwtl
add
jp
mov
mov
xchg
adc
dec
lret
jns
ja
sub
jle
xor
sub
stc
mov
dec
pop
dec
inc
fists
mov
ret
divb
mov
scas
xor
aaa
out
xor
jg
out
jge
mov
call
pop
rolb
jo
jo
ficoms
xchg
cmp
test
adc
cmp
test
xchg
mov
mov
add
cmpsb
add
cltd
xchg
cltd
pop
test
or
or
push
fwait
push
fwait
arpl
sbb
xchg
jp
into
arpl
xchg
daa
push
and
out
insb
push
dec
inc
xchg
out
sti
cmpsb
and
or
ret
or
dec
mov
xchg
repnz
and
dec
pushf
mov
pop
repnz
orl
cmp
xchg
sbb
js
sbb
add
mov
inc
and
add
push
out
ret
cmc
iret
mov
in
cmp
es
and
and
or
sbb
push
test
test
mov
cmp
in
aas
arpl
cmp
dec
cmc
mov
mov
ss
fdivs
jl
inc
fbld
xchg
xor
xchg
mov
dec
sbb
jo
subw
in
sub
out
adc
stos
mov
outsl
or
mov
cs
popf
stc
sbb
out
inc
arpl
push
shl
lcall
xchg
sti
add
mov
test
aaa
pushf
rclb
insl
cli
and
inc
stc
add
sti
xor
xchg
mov
push
cltd
je
stos
lret
mov
rorl
vpcmpgtb
into
xor
adc
push
int
cmpsb
push
dec
scas
push
loope
jle
and
cmp
mov
enter
jecxz
cmp
mov
movsl
outsb
fucomi
dec
mov
vpor
int3
xorb
dec
add
std
out
push
into
ja
addl
clc
fcmovnb
aam
test
int3
dec
leavew
sub
jmp
mov
in
mov
pop
jg
jge
stos
cmc
and
in
mov
xor
out
das
cmp
lods
xchg
lcall
or
imul
hlt
mov
les
movsl
push
gs
icebp
xchg
rcll
xchg
or
and
or
in
aaa
orb
inc
imul
in
cwtl
nop
dec
std
arpl
mov
mov
popl
or
movsl
test
mov
mov
cmpsl
cmpsl
dec
push
cmpb
hlt
mov
fwait
and
scas
in
pop
jno
dec
stc
add
cmp
movsb
sub
into
rorl
mov
testb
push
inc
enter
lret
cmp
xor
in
imul
lcall
les
scas
in
sbb
cmp
icebp
sub
adc
mov
pop
inc
adc
in
dec
and
popa
or
test
sub
fsts
aam
jnp
pop
test
out
xchg
stos
and
pushf
mov
loopne
jne
xchg
js
fimuls
ret
jb
dec
sbbl
pop
sbb
cmpl
out
sub
xadd
fidivs
sahf
pusha
push
and
bound
lods
cld
push
into
jmp
pop
rcl
cmp
lock
stos
js
add
ja
dec
je
jo
imul
lahf
in
adc
mov
pop
pop
js
mov
popf
lock
xor
or
js
mov
sbb
sbb
push
add
out
xor
flds
les
push
xor
cmp
leave
lret
inc
pop
cmp
rcr
push
fwait
nop
push
cmpsl
adc
iret
dec
ljmp
movsb
mov
icebp
mov
jb
xchg
add
fcmovne
leave
push
imul
shrl
xchg
loope
and
mov
lea
pop
das
movsl
in
cs
fidivl
add
jno
jbe
dec
mov
mov
gs
pop
sub
mov
insb
mov
lods
and
inc
pop
cmc
jo,pt
movsb
inc
dec
inc
mov
arpl
xor
mov
shll
cld
xchg
jno
idivb
mov
and
in
je
and
jno
mov
mov
mov
dec
xchg
popf
adc
pop
cmpsb
cltd
repz
std
mov
lret
loop
shlb
jmp
inc
inc
pop
mov
mov
xor
mov
test
xchg
jb
movsb
jge
mov
stc
cs
inc
fwait
insb
test
xchg
scas
sub
ljmp
scas
mov
xchg
push
mov
dec
cltd
adc
icebp
sbb
cs
sub
pop
pusha
mov
jmp
sbb
outsb
outsb
mov
push
mov
lock
jecxz
mov
aaa
into
mov
dec
add
cmp
xor
dec
inc
enter
add
sahf
sarb
loop
js
adc
orl
ss
out
dec
mov
fisttpl
in
ljmp
xorl
imulb
mov
xor
mov
mov
or
test
fcom
fst
xchg
sub
jp
pop
xchg
or
mov
sahf
mov
fndisi(8087
jbe
inc
sahf
sub
fsubp
adc
ficomps
cltd
mov
test
pusha
sub
mov
fsubrs
imul
mov
or
jl
push
enter
xor
add
push
cmp
test
sub
scas
int3
jg
jecxz
popf
dec
push
xchg
pop
ljmp
into
test
mov
test
ret
icebp
add
aam
inc
inc
jbe
out
outsl
insb
rcrb
repnz
iret
mov
movsb
and
mov
pop
or
xor
nop
or
jne
cmp
jb
mov
mov
or
inc
mov
mov
add
repz
aaa
or
repz
dec
xor
cli
push
fidivs
andb
test
popf
fbstp
jecxz
inc
sub
push
movsb
std
es
xor
mov
pop
push
cmp
lahf
std
sbbb
adc
movsl
push
outsl
mov
stc
or
xchg
sub
xchg
sbb
sar
and
jmp
push
cvtpi2ps
sbb
add
gs
into
or
sub
fdivrs
lds
cmp
jl
aaa
stos
push
cmp
out
xchg
inc
push
xchg
aaa
fcomi
gs
aad
inc
mov
insl
pop
or
dec
xor
add
insb
push
push
pop
das
loope
aam
add
sti
in
daa
add
adc
imul
mov
test
mov
and
mov
test
insl
cmp
out
jns
jmp
sbb
adc
or
shlb
idivb
test
movsb
add
jbe
add
mov
xchg
mov
imul
dec
lret
rcrb
sarb
or
rol
leave
or
jne
jae
pop
out
rol
mov
fucom
cs
mov
cmp
add
push
paddsb
xchg
xorb
push
lds
add
nop
ret
push
xorb
aad
shrl
jl
cli
pop
cmp
or
shr
sbb
and
mov
add
push
cs
or
xchg
addr16
movsb
pop
sahf
xor
sahf
xor
push
outsb
sub
xor
add
pop
cmpsl
movsl
or
out
cmp
sarb
daa
pop
js
pop
xor
pusha
jecxz
mov
pusha
call
inc
pop
fidivs
lds
fs
in
push
sahf
mov
or
divl
dec
adc
int3
add
js
lret
mov
popf
xor
inc
sub
or
and
leave
xor
fmull
sbb
jnp
orb
or
in
and
pop
pop
mov
stos
hlt
inc
daa
data16
fcomi
repnz
pop
insl
jne
and
stc
dec
xchg
cmp
orb
dec
or
mov
rolb
bound
push
fs
add
cld
mov
jo
sarb
test
fcomp
cli
push
jb
add
ror
negl
xchg
iret
mov
jl
orb
mov
xchg
xlat
gs
loop
xor
subb
and
and
out
or
sub
imul
mov
scas
imul
and
out
pop
mov
movsb
push
push
dec
outsl
jle
inc
std
mov
cmp
js
sbb
dec
xchg
jno
in
aad
adc
movsl
cmpsb
and
cmpsl
fwait
xorl
dec
push
icebp
gs
hlt
sbb
xor
inc
andb
lahf
cli
cwtl
mov
lods
mov
xchg
daa
jecxz
xor
sbb
dec
adc
call
aaa
push
xchg
mov
xchg
sbb
int3
call
sub
jne
mov
mov
loop
iret
imull
fiaddl
push
xor
adc
test
lods
mov
ret
incl
xchg
mov
xor
idivb
xor
rclb
cltd
mov
aaa
into
dec
mov
sti
jb
add
ja
xchg
loope
std
jno
mov
xchg
cld
pop
and
mov
jmp
mov
in
dec
test
pop
xor
int3
pop
mov
jo
iret
inc
mov
jp
cmovge
inc
insb
shr
cmp
mov
lret
cmp
cmp
sub
pushf
jo
mov
jnp
xchg
ljmp
xorl
push
repnz
xorl
inc
int3
fsubs
rcll
push
outsb
pop
lret
jp
ror
xor
sub
sbb
add
int
popa
adc
outsl
outsb
int
bound
mov
xlat
jmp
loopne
add
lods
cmp
xchg
mov
pop
imul
addl
mov
xchg
fldcw
fists
aam
fsubrl
jne
mov
dec
int
pop
cs
cmp
aam
mov
mov
in
push
jae
mov
jl
daa
mov
hlt
repz
call
in
test
in
test
iret
out
lahf
fdiv
faddl
sbb
ror
sbb
negb
iret
or
fdivp
cmpsb
xchg
mov
stc
and
ficomps
lret
in
add
repz
aaa
jg
push
cmpsl
pop
push
test
popa
mov
repnz
int
xchg
push
lret
scas
andb
test
sub
mov
cli
addl
jecxz
mov
cmc
shrl
pop
mov
icebp
jne
sub
pop
push
and
xchg
push
xchg
into
sbb
daa
pop
fwait
add
in
jg
or
mov
mov
mov
bound
dec
fstl
pushf
gs
std
js
ficompl
popf
out
dec
pop
cmpb
pop
cwtl
push
ror
mov
stos
push
add
xchg
leave
cs
xchg
xchg
jmp
xor
inc
test
shr
cmp
insb
mov
and
ds
sbb
insb
cwtl
fsubs
jno
mov
jae
sbb
push
sahf
jo
icebp
sbb
clc
je
fisttpll
and
aas
pushf
inc
sub
xchg
sub
outsb
cmp
in
fdivrl
call
test
xchg
pmaddwd
cli
jo
mov
dec
adc
jns
push
adcl
inc
xchg
inc
add
xchg
mov
push
jle
sub
fnstenv
xchg
mov
call
movsl
push
pop
dec
shrl
add
mov
push
imul
popa
push
xor
enter
cltd
xor
and
xor
fisubs
popa
test
int3
mov
pop
mov
xchg
lret
dec
outsl
mov
xchg
outsl
fcomps
fcomps
ss
leave
in
stos
jmp
jecxz
sub
andb
iret
stos
and
fisubrl
into
jnp
insl
int
jmp
mov
mov
aad
nop
pop
lcall
loop
and
cmpxchg
xchg
cmp
jne
adc
pop
in
push
roll
stos
inc
inc
mov
mov
movsb
sbb
cmpl
and
sbb
push
add
pop
aaa
jno
mov
add
cmp
fsubs
dec
leave
pop
cli
shrl
ja
fstps
out
loopne
lods
pop
scas
hlt
add
arpl
sti
push
fisubl
jne
ret
inc
mov
mov
xchg
sub
add
pop
mov
into
mov
sub
mov
arpl
dec
loope
mov
add
repnz
loope
push
or
pop
imul
mov
iret
jmp
add
repz
repz
push
cmc
and
ds
push
and
cmpsl
or
lahf
arpl
js
sub
or
dec
fisttps
pop
mov
xor
push
int3
stc
cli
enter
aaa
add
ljmp
icebp
inc
inc
and
into
and
add
mov
int
cmp
mov
fcmovb
loope
lahf
push
mov
fwait
mov
mov
xchg
mov
int
mov
fldl
int3
inc
negl
mov
jl
push
mov
fadds
das
jmp
pop
push
imul
dec
sbb
stos
popf
mov
adc
lods
add
mov
in
std
mov
lea
mov
or
push
sub
sub
and
jle
aad
push
mov
push
pop
xor
and
jecxz
cli
inc
or
and
aas
sub
pop
orl
pop
negl
push
cmc
adc
add
shll
orl
inc
cmpsb
jmp
xor
sbb
inc
rcll
jae
into
or
fistps
mov
push
sti
xchg
push
push
lods
loope
in
andb
test
in
xor
inc
popf
sbb
imul
adc
push
mov
fstpt
iret
add
int3
inc
mov
rep
xchg
and
sub
adc
mov
add
xor
fdivrp
push
cmpl
mov
sbb
mov
popa
sub
popa
mov
pushf
loope
lds
sbb
lret
xchg
test
jno
inc
pop
lret
outsb
icebp
push
mov
aad
xchg
pop
insb
stos
pop
es
jmp
adc
js,pt
cli
cmpsb
stc
dec
fs
stos
cwtl
pop
ret
aas
sub
dec
je
mov
inc
lret
ret
or
adc
test
push
pop
ficompl
jne
in
xchg
cli
adc
jg
fsubrl
stc
popf
mov
mov
lock
arpl
nop
or
leave
sti
rcr
or
xlat
mov
sub
mov
mov
push
test
rcrl
call
pusha
imul
xor
sbb
add
add
push
and
lods
cmp
jge
loope
mov
cld
rcl
mov
adc
dec
xor
inc
fsubrl
movsb
inc
fsts
dec
sbb
adc
leave
push
mov
jmp
sbb
jl
jne
pop
ja
mov
lret
call
cmp
pop
mov
xchg
mov
leave
fnstsw
ror
stos
or
jl
dec
push
jb
dec
ret
adc
sbbb
jnp
sbb
movsb
icebp
movsb
adc
lret
cmp
in
in
test
or
cmc
movsb
int
adc
mov
cmp
mov
xor
jnp
pop
sbb
mov
sbb
adc
imul
flds
int
or
shl
js
jae
push
pop
mov
dec
dec
stc
adc
test
pop
mov
popa
cmpsb
xchg
add
dec
int
sbb
shll
push
sahf
icebp
jmp
xchg
cli
adc
inc
arpl
stos
and
out
inc
out
push
add
jns
and
xchg
insl
enter
lret
inc
pop
ljmp
das
loopne
push
mov
jge
ljmp
fstpt
stos
jecxz
sbb
pop
or
lea
push
in
xchg
adc
sbb
mov
aaa
movsl
and
xor
in
xorb
mov
ljmp
mov
xchg
xchg
pop
inc
loop
jecxz
arpl
xor
lock
aas
push
popf
inc
lds
or
imul
stos
and
push
cmp
xchg
flds
in
xor
jl
mov
inc
jge
fs
pop
in
std
jo
dec
sbb
mov
je
sub
or
adc
cmpsl
dec
bound
pop
orl
int3
ret
scas
xorb
fistpl
and
js
rdtsc
pop
adc
add
push
and
imul
mov
addb
pushf
or
mov
mov
pop
pushf
into
push
xor
cwtl
jmp
cmp
fstp
add
rclb
pop
xchg
jp
jge
xor
mov
lea
push
sbb
dec
pop
mov
and
pushf
mov
pop
adc
mov
in
inc
pop
or
pop
cmp
ret
daa
sub
jle
call
cmc
pop
xchg
mov
fwait
inc
stc
fidivrs
xor
push
movsb
sti
inc
in
mov
jp
add
inc
dec
mov
aam
mov
jbe
fucom
lock
ret
ja
mov
push
push
sub
sub
pop
dec
push
or
out
movsl
jns
jmp
jecxz
and
sub
mov
into
data16
xchg
dec
cmp
icebp
pusha
fisttpll
jg
pop
das
push
jnp
dec
xchg
jg
sub
cmp
outsl
and
movsb
outsl
je
pushf
sub
push
jecxz
mov
lret
lret
sbbb
adc
sub
mov
fiaddl
push
sub
sahf
cmp
adc
ret
and
adc
jb
mov
test
pusha
mov
jae
pop
aaa
push
int
sub
adc
cld
mov
sub
xchg
sub
inc
fsubs
pop
mov
movb
add
push
gs
cmpsl
push
xchg
clc
cld
pop
xor
dec
mov
jns
xor
fstl
jle
pusha
mov
outsb
lcall
test
daa
pop
sbb
int3
ds
adcb
jge
jecxz
xor
push
lods
lods
pusha
mov
mov
jmp
push
nop
aas
out
push
es
mov
test
xor
cmp
fwait
inc
mov
rcrl
dec
xchg
orl
roll
dec
popa
sbb
xlat
mov
jb
mov
scas
addr16
sbb
cs
xor
or
mov
outsb
jecxz
mov
jbe
inc
and
or
test
into
rcr
cli
imul
mov
js
imul
and
push
js
daa
test
fsubs
or
add
mov
pushf
push
enter
into
jge
sahf
mov
pop
in
movsl
push
xchg
mov
in
sbb
lret
adc
in
mov
cli
pop
aad
or
mov
mov
ja
mov
mov
ljmp
xchg
test
push
fimull
popa
pop
div
inc
mov
mov
fidivl
mov
and
sbb
dec
mov
push
xchg
mov
out
push
enter
sbb
pop
adc
jmp
push
add
xchg
popf
mov
push
xor
mov
xlat
cmp
aaa
xchg
sbb
repnz
rorb
fcompl
loopne
mov
mov
test
add
lret
or
xor
xchg
push
sub
pop
sbb
xor
test
fisttps
cmpsl
xor
inc
movl
xor
aam
jae
push
sbb
adc
mov
cld
xlat
dec
pop
subb
push
xchg
lock
imul
push
dec
bound
lods
inc
sbb
leave
lcall
xchg
imul
push
xor
fld
xchg
inc
add
decb
jnp
dec
sbb
inc
rep
data16
pop
lret
pop
push
out
sbb
in
mov
xor
mov
aam
cmp
ja
ds
inc
ret
out
sti
mov
add
outsl
xor
daa
sbb
dec
dec
xchg
cwtl
sub
mov
jnp
add
or
pop
stc
out
add
mov
dec
lret
dec
leave
mov
mov
xchg
mov
mov
andb
xchg
aam
push
dec
or
cmp
push
lds
aam
iret
mov
dec
enter
push
popa
mov
adc
pop
inc
push
insl
xor
add
gs
scas
jbe
cmp
cmp
andb
es
mov
mov
sbb
movsl
fiadds
adc
pushf
mov
pop
xchg
arpl
dec
mov
loope
lea
jno
pop
jl
sub
shlb
push
jge
mov
bound
push
mov
mov
jb,pt
or
int3
or
jle
dec
sub
push
test
mov
cmpsl
or
adc
jecxz
and
outsb
fs
ds
sbb
iret
jns
sbb
movsl
daa
addr16
shrb
xchg
iret
mov
jmp
jbe
and
pop
shl
fwait
cwtl
lahf
sbb
stc
fadds
movsl
mov
loope
xchg
mov
outsl
mov
fwait
jno
repnz
loop
add
and
dec
and
or
sahf
mov
mov
fwait
jnp
mov
cmpsl
cmpsl
and
xor
push
sub
cmp
in
push
or
pusha
jge
jge
mov
mov
sub
mov
adc
adc
push
inc
mov
popw
movsb
mov
jnp
lods
dec
xchg
push
bound
sbb
inc
nop
mov
pop
inc
incb
dec
push
xchg
pop
test
and
and
cmpsl
icebp
rcll
inc
dec
adc
cmp
sub
aaa
inc
icebp
insb
repnz
mov
jno
nop
dec
pusha
ja
js
loope,pt
push
mov
push
and
mov
cmp
push
lods
xchg
sbb
enter
and
fdivp
xor
xor
loope
ja
outsb
js
xchg
inc
cmp
cmp
sub
stc
adc
push
aad
in
movsl
in
sbb
out
mov
push
xor
sbb
in
clc
out
pop
lock
pop
fsub
mov
mov
push
repz
sub
xor
mov
mov
adc
or
xor
inc
pop
adc
test
push
aas
mov
sub
pushf
mov
inc
push
xchg
cltd
sub
jns
pop
mov
loopne
fdivrs
xchg
sbb
fadd
cmp
nop
outsl
in
mov
sub
loop
mov
pushf
or
mov
mov
ss
mov
jp
test
insl
test
cmp
or
outsl
dec
pop
xchg
cmp
lcall
sti
popf
mov
mov
out
jne
fistps
fbstp
xor
push
and
inc
inc
sbb
lds
xchg
dec
scas
jbe
stos
adc
mov
gs
mov
adc
in
xchg
inc
lret
adc
mov
mov
sbbb
inc
xlat
mov
sbb
mov
loope
mov
and
push
mov
jae
out
out
dec
mov
cltd
push
lea
push
outsl
popf
mov
inc
sub
lds
dec
pop
adc
or
or
dec
scas
in
cmpsb
pusha
rcll
lods
fstps
mov
mov
jae
xchg
push
dec
iret
arpl
push
in
fsubrl
mov
subb
dec
decl
push
push
sbb
jbe
rcll
es
subl
int3
add
les
lods
stos
test
out
out
add
mov
imul
push
je
cmpsl
pop
cmp
pop
pop
outsb
mov
movsb
push
adc
inc
dec
push
out
pop
arpl
fdivl
pop
lret
cltd
jmp
std
std
cmp
aaa
std
mov
jmp
loopne
int
inc
dec
and
repz
jecxz
mov
mov
push
repz
scas
sahf
sbb
push
lret
test
pop
add
fwait
xor
inc
mov
les
push
fisttps
pop
xor
aad
cs
hlt
jns
push
and
nop
push
fsubrs
nop
aad
mov
fsubs
daa
cvtdq2ps
xchg
sahf
lahf
xor
cmpsb
pop
mov
jp
daa
imul
and
sub
mov
dec
sub
inc
sbb
sub
fstps
aad
test
lret
in
das
lret
and
pop
arpl
sti
incb
push
ret
sub
xlat
adc
fsubrs
mov
or
loopne
push
call
aam
lods
mov
mov
xchg
add
ds
adc
subl
jge
les
in
dec
das
cmpb
mov
test
pushf
mov
fistpl
inc
cltd
clc
mov
mov
adc
lret
test
push
cmp
sarb
lds
jge
xchg
mov
sub
xor
movsb
jo
adc
negl
pop
mov
scas
mov
sbb
and
mov
aam
pop
imul
and
add
mov
gs
push
pop
pop
jnp
cmp
lds
and
inc
stos
mov
cmpsl
mov
out
inc
add
adc
jg
cltd
or
push
add
notb
mov
icebp
xchg
jge
es
aad
cld
inc
lock
mov
pusha
jnp
adc
test
sub
subb
push
sub
je
std
or
xchg
in
xchg
in
mov
dec
ljmp
push
mov
fs
testb
push
test
xor
jae
out
and
decl
outsl
test
enter
or
sub
mov
cmp
mov
push
rcrl
jecxz
aad
leave
inc
jg
test
mov
jb
inc
gs
cs
ljmp
mov
push
fsubrs
js
xchg
xchg
fidivl
sbb
push
ljmp
add
leave
mov
push
out
mov
idivb
das
xchg
popa
popa
and
push
push
dec
jno
cmpl
aaa
std
stos
popf
fadd
cs
daa
mov
mov
mov
js
mov
cmp
add
xor
loop
pop
in
xchg
push
sahf
adc
inc
insl
imul
es
inc
jo
subl
add
dec
sub
mov
icebp
sbb
inc
dec
nop
xchg
sbb
or
ds
jge
pushf
or
jmp
daa
adc
xor
iret
inc
push
mov
ss
psllw
mov
filds
scas
dec
imul
xchg
xchg
dec
jbe
int
lock
bound
jb
aaa
inc
or
jbe
pushf
and
cmp
loop
pop
xchg
xchg
inc
gs
pusha
addr16
aas
mov
sbb
call
pop
lods
daa
aaa
inc
stos
add
jmp
aad
icebp
fcomi
frstor
mov
int3
addr16
movsb
ficompl
xchg
test
lahf
push
jg
cmc
sub
jle
lods
in
xor
ljmp
jl
push
cli
iret
push
jl
js
cmp
sahf
xlat
xor
or
hlt
into
dec
xchg
jnp
push
mov
mov
fistpll
stos
imul
aas
nop
push
mov
adc
hlt
hlt
idiv
pusha
outsb
jge
dec
ja
ror
jno
sti
mov
fidivrs
aad
adc
iret
mov
mov
daa
shrb
aaa
scas
ja
jnp
xchg
fcomps
adc
cmp
mov
jb
clc
std
mov
movsl
cwtl
mov
sub
xor
mov
in
add
imul
dec
insl
pop
and
sbb
ret
xchg
popf
lret
fnstenv
sub
and
out
popf
and
or
jns
fcompl
push
sbb
xor
dec
sub
into
fnstsw
push
test
lods
out
scas
nop
sub
pop
dec
jmp
pop
xlat
mov
jp
cmp
aas
add
loopne
xchg
aad
scas
mov
lcall
imul
add
lret
cli
movsl
xchg
ss
call
arpl
mov
cltd
int3
cmc
orb
ret
arpl
jnp
in
das
xorl
cmp
mov
sub
pushf
inc
and
or
pop
sti
pop
cs
cmpsb
jns
push
insl
stc
push
lret
mov
dec
and
and
leave
cmp
fstpt
scas
out
sbb
jne
inc
aad
sbb
or
test
ds
sub
test
mov
mov
movd
imul
loopew
mov
jmp
adc
lock
ror
sub
xor
push
out
cmpsl
or
loope
mov
in
dec
fisttpll
mov
loope
scas
mov
xor
ret
notl
sub
lret
fsubrs
dec
int3
ljmp
xchg
jecxz
out
rcll
ds
cwtl
xchg
xchg
out
stos
inc
push
mov
xor
lods
mov
icebp
daa
sbb
dec
hlt
or
arpl
shl
mov
std
cld
ret
xchg
ljmp
and
insl
mov
xor
bound
fldl
fbld
mov
push
sub
push
mov
lret
add
lock
in
push
in
add
mov
addr16
and
and
cmc
inc
into
aaa
aad
icebp
cld
cmp
sahf
cltd
add
insl
and
insb
cmpsl
cli
add
or
mov
lods
dec
fidivrs
and
cwtl
movsl
lret
pop
xor
mov
cld
or
xchg
xor
dec
jecxz
or
push
inc
lods
imul
mov
ss
pop
jl
inc
cmpsb
in
arpl
and
sbb
popa
or
loope
into
inc
mov
xor
push
adc
mov
xchg
pop
test
pop
sbb
leave
out
mov
mov
lcall
dec
xor
lcall
push
loopne
mov
jae
subl
add
subl
fwait
mov
adc
or
ficoml
xor
mov
xchg
xchg
stos
dec
in
movsb
pop
aas
jmp
sbbl
lcall
dec
add
xor
in
sbb
repz
mov
adc
cmp
mov
in
fxch
adc
add
pop
outsl
leave
out
xor
or
jecxz
sub
inc
pop
bnd
lods
cmp
or
jnp
fbstp
pop
leave
xlat
dec
pushf
sub
xchg
xchg
int
dec
mov
mov
mov
cltd
das
lock
sbb
jbe
add
sahf
sub
les
insl
orl
call
xlat
push
lahf
jbe
jmp
fisubrl
pop
rcrb
call
push
and
pop
lods
int
add
and
iret
fld
mov
jae
push
rolb
insl
mov
ja
enter
xchg
rorl
mov
dec
push
gs
xchg
sbb
aam
xchg
mov
adc
outsb
incl
xchg
pop
xor
in
rcr
cmp
pmaddwd
lcall
sti
dec
test
nop
adc
xchg
movsb
loop
lret
cli
pop
dec
cltd
fwait
aaa
lock
xchg
lcallw
idivb
adc
adc
add
sub
test
outsl
aam
lods
in
jno
xlat
cli
test
mov
loop
bound
lods
xchg
insw
mov
jns
fistps
sub
mov
jmp
xor
repz
cmp
push
shll
dec
fcoms
test
pop
psllq
ds
mov
jg
repz
lea
sbb
out
push
push
or
xchg
in
and
add
arpl
pusha
jp
andl
push
push
ljmp
fisubl
push
jecxz
stos
inc
sbb
mov
mov
and
and
rcll
sti
push
shrl
xor
adc
mov
cwtl
adc
ror
mov
repnz
pop
and
mov
repz
shlb
pop
insl
xchg
sbb
push
idiv
mov
std
ljmp
and
lods
push
test
dec
mov
leave
gs
inc
outsb
in
sub
fnstsw
jb
and
clc
jl
dec
addr16
jle
fsubrl
push
scas
push
push
imul
mov
lcall
xchg
xchg
mov
push
jo
dec
or
push
sbb
mov
cwtl
dec
int3
stos
mov
dec
sub
adc
jmp
sub
aad
pop
sub
xor
add
sub
mov
xor
inc
xor
out
popf
dec
add
dec
aad
or
ss
popf
pushf
data16
inc
add
outsb
dec
aaa
jns,pt
aam
jmp
jecxz
jle
pop
aad
mov
stos
test
cmp
lods
les
cld
in
push
jmp
repz
repz
and
adc
cli
movsb
push
daa
mov
mov
sbb
fcomps
adcb
call
push
lock
mov
popa
push
jp
addr16
imul
nop
divb
xchg
divl
pop
loop
mov
rcrl
sub
pop
xchg
stos
mov
sbb
in
xchg
or
in
mov
insl
mov
pop
lret
lahf
stc
adc
shll
ja
pop
pop
push
jp
xchg
xchg
and
arpl
mov
sbb
out
loop
nop
clc
jl
test
and
scas
and
icebp
cs
cwtl
lahf
out
inc
sti
dec
xor
in
pop
mov
inc
jnp
lcall
ds
xchg
mov
pop
out
push
inc
xchg
jmp
fsubrs
sbb
das
out
mov
inc
bnd
pop
jns
mov
out
sub
mov
xor
cmpsb
ret
sbb
in
test
jg
popf
das
cmc
sub
push
mov
or
inc
sbb
int
mov
mov
jmp
mov
pop
xor
dec
ret
out
sub
repz
fcmovnb
push
cmp
in
fidivrl
add
test
cmp
jns
ja
pop
mov
ficoms
out
in
xor
movntq
push
lock
lret
int3
mov
rol
or
and
shl
cmpsl
push
js
sbb
jae
andl
icebp
mov
adc
imul
movsl
cmc
inc
pop
es
inc
daa
fdivrs
cmp
push
popa
scas
enter
mov
loopne
cmp
clc
scas
and
into
insb
outsb
clc
mov
mov
mov
mov
xor
pop
daa
sahf
int3
xchg
insb
bts
fcmovu
mov
pop
mov
lret
lcall
test
int3
xchg
or
enter
mov
jnp
mov
and
out
dec
add
pop
xor
sbb
xchg
cmpsb
mov
popf
sub
xchg
mull
pop
aad
mov
ret
dec
xchg
dec
popf
xor
outsl
cmp
insl
or
lods
cmovae
popa
dec
ljmp
loope
inc
adc
sub
dec
lods
or
pop
push
pusha
inc
out
adc
jo
jbe
mov
jge
rol
mov
sub
ret
mov
cmpsb
or
jmp
jae
nop
cmc
nop
pop
test
cltd
pop
dec
js
mov
test
test
sbb
mov
push
lcall
sub
jb
pop
sub
mov
sbb
fxch
into
cmp
test
or
dec
xlat
call
push
mov
lret
dec
and
sub
fidivl
rcrl
push
sbb
popf
fmul
xchg
scas
add
lods
pop
mov
call
int3
and
mov
fcmovnb
jo
mov
imul
mov
in
inc
pop
jno
nop
sahf
mov
and
dec
dec
fisubrl
test
xor
dec
lods
nop
sub
add
mov
insb
add
push
push
insl
push
leave
dec
call
aas
fidivrs
dec
in
cmp
cmp
push
pop
rorl
movsl
insb
ds
repnz
out
mov
sub
sbb
stos
sbb
adc
mov
sarb
xchg
mov
lods
pop
mov
xor
adc
and
mov
iret
and
je
push
rolb
les
movsb
xchg
jne
or
xchg
inc
mov
cli
arpl
mov
imul
ret
dec
push
fidivs
jmp
pop
notl
popf
mov
mov
lcallw
push
test
adc
mov
push
adc
mov
or
cld
mov
and
and
fldenv
in
arpl
sub
negb
pop
jb
jb
insl
icebp
incl
les
push
mov
dec
mov
push
daa
rclb
mov
mov
popf
shlb
or
mov
bnd
out
rep
pop
ss
dec
idivb
pop
scas
test
jae
iret
ret
mov
cmp
lret
cmp
cmp
mov
mov
sub
adc
cmp
and
mov
sti
jo
in
cltd
fwait
push
data16
into
out
insb
mov
ja
rol
cmpsl
std
test
aam
xchg
inc
jge
outsl
jo
adc
mov
push
aad
xlat
ret
cs
ja
inc
jp
inc
shlb
jb
jae
addr16
jl
and
jle
ljmp
inc
aad
xor
push
mov
es
add
push
push
cmp
xchg
mov
nop
nop
ljmp
sbb
outsl
scas
dec
adc
stc
push
cmp
push
bound
sub
pop
xchg
sub
and
sub
imull
hlt
fldl
sbb
into
std
cmp
xor
test
xor
mov
pop
inc
and
add
mov
mov
je
push
cmp
and
stos
add
dec
adc
push
ljmp
dec
mov
loope
xchg
test
add
inc
lcall
repnz
scas
pop
fcomp
xchg
pushf
inc
jg
sbb
js
adc
mov
adc
xor
movsb
cmp
cmp
pop
loop
pop
aas
in
add
je
dec
jo
popa
lret
ss
out
mov
mov
adc
dec
insl
aaa
jle
jge
push
mov
fimuls
addl
fstp
cwtl
push
push
fwait
adc
fst
mov
jae
repnz
stos
dec
jno
xor
pusha
xor
shll
or
insl
dec
xchg
sbb
inc
xchg
mov
adc
fisttpl
or
sbb
pop
lahf
nop
jge
fs
jg
lret
jecxz
rdtsc
sub
mov
mov
mov
cmpsb
rcrl
mov
in
dec
lods
inc
clc
pop
jae
push
cli
roll
cmp
add
aam
add
push
es
repz
movsb
mov
sbb
clc
inc
mov
shrb
adc
jno
call
imul
sub
sbb
imul
stos
xor
sti
insl
and
cwtl
mov
and
pushf
pop
std
std
mov
cltd
pop
fsubrp
insl
nop
dec
je
adc
lret
lds
imul
jae
or
xchg
mov
jle
or
xor
scas
dec
xchg
fprem1
sub
cmp
adc
lods
mov
mov
push
cmp
and
ret
jecxz
out
repz
sbb
jge
insb
mov
cmp
stos
dec
add
xchg
and
mov
cmp
ja
xor
stc
dec
and
add
push
cltd
imul
arpl
and
inc
out
jg
pop
mov
sbb
add
jo
mov
mov
push
into
push
cmpsl
fisubs
outsl
out
jmp
inc
sbb
xor
mov
jae
idiv
xchg
scas
test
inc
adc
aam
mov
pop
dec
fnstcw
lock
xor
fcoml
into
cmpb
pop
xchg
add
xor
iret
sbb
sub
insl
or
and
jns
push
pop
addr16
xchg
adc
sub
das
xchg
hlt
jbe
or
mov
adc
pop
mov
fdiv
lahf
jb
fcoml
dec
mov
pop
sbb
push
or
pop
test
stos
outsw
mov
fildll
pop
js
lret
jae
pop
cmpsl
jno
in
cmp
in
testl
fdivl
mov
push
pusha
jp
sbb
popf
mov
in
push
out
nop
pop
xchg
ss
jnp
addr16
movsb
sbb
or
or
in
outsb
enter
loope
mov
lods
scas
cld
xor
in
inc
cmc
sahf
mov
cmp
outsb
js
es
sub
pushf
add
std
mov
stc
xchg
jle
loopne
lret
or
mov
sbb
js
ret
jl
rorl
in
jb
and
push
rcl
or
sub
cwtl
mov
pushf
test
xchg
out
mov
lds
in
sbb
xor
push
loop
ror
test
sbb
std
dec
adc
leave
shlb
gs
out
test
lret
scas
sahf
test
xor
repnz
test
js
sub
push
lret
into
mov
inc
push
xorl
sub
cwtl
sub
cli
mov
sub
lods
lods
stc
call
ficompl
shll
pushf
jle
negb
stos
adc
data16
aam
push
adc
xor
iret
xor
lahf
clc
sti
mov
mov
jnp
mov
int
cmpsb
cmp
test
sbb
mov
sbb
lahf
lcall
or
push
imul
pop
or
dec
fwait
repnz
adc
lods
cwtl
and
cmp
jno
jmp
scas
ret
sbb
dec
mov
js
sub
sbb
rcrb
inc
inc
sbb
mov
jmp
fcmovbe
jae
and
lods
inc
sub
mov
and
insb
int
lcall
scas
add
pop
xor
mov
data16
and
xchg
mov
or
sub
push
mov
jne
adc
out
cmp
dec
sbb
xchg
jl
cmpl
loopne
repz
dec
jmp
int3
jno
mov
out
ljmp
sub
repz
jmp
movsl
pop
add
jg
mov
out
sub
jo
lcall
cmp
add
mov
aam
push
mov
jo
lea
popf
jp
aam
push
loopne
pusha
out
test
lods
push
enter
jbe
inc
stos
xchg
pushf
cltd
cmp
fcomps
nop
out
in
mov
sbb
cmp
xor
addr16
outsb
mov
xchg
fcmovu
jmp
lcall
ret
shlb
mov
pop
bound
push
sub
jns
iret
xor
and
xchg
repz
outsb
stos
and
jae
lcall
imull
call
shr
inc
cld
inc
adc
cli
xlat
mov
add
sub
sub
sbb
pop
xchg
or
jmp
lret
push
das
dec
cmp
pop
push
mov
xor
into
lods
lods
xchg
pusha
dec
push
cmp
ja
movsl
call
sarl
mov
stos
sub
xchg
jg
sub
push
test
enter
test
cs
inc
out
xor
and
mov
nop
aad
cld
push
std
jb
into
adc
xchg
outsb
adc
test
xor
jne
int3
lds
inc
xchg
insb
mov
shrb
mov
sbb
adc
in
jp
mov
loopne
mov
mulb
repz
and
adc
call
mov
xchg
enter
and
or
lods
xorl
shl
pop
mov
adc
es
mov
push
sahf
dec
mov
jo
inc
sti
int3
fsubr
idivb
gs
pusha
popa
daa
and
aas
dec
fxch
jmp
dec
adcl
aaa
lret
or
sub
add
int
popf
gs
pop
pop
add
ljmp
cmp
pop
andb
xor
push
cltd
pop
out
ljmp
aas
cwtl
xor
jecxz
cmp
dec
paddw
sbb
add
stos
in
imul
pusha
mov
mov
mov
jns
not
outsl
into
daa
xchg
es
push
cltd
stos
xorl
inc
andl
scas
insl
mov
pop
xor
sbb
fcomi
jns
and
shll
lret
jo
inc
mov
sub
jge
insb
sbb
pop
dec
int3
fcmovu
or
cltd
xchg
and
in
add
sub
mov
mov
push
out
leave
jo
xor
into
pushl
xchg
ds
inc
inc
out
or
movb
xor
stos
popa
iret
andb
dec
xchg
shll
repz
and
loop
fistl
daa
lock
sub
mov
and
ss
fiaddl
dec
mov
test
leave
popf
enter
mov
push
int3
mov
hlt
or
jo
icebp
or
rolb
inc
mov
out
cmp
push
ds
pop
sub
ror
cmp
add
je
bound
push
imul
fwait
push
stos
outsl
jnp
mov
cmp
pop
pusha
mov
fnstcw
push
xchg
fnstenv
cmovs
iret
stos
xor
sbb
lea
addl
pop
jae
mov
or
ret
xchg
or
ds
jl
test
outsl
dec
jmp
push
scas
pavgw
insb
jge
dec
mov
mov
popf
cltd
push
rcr
and
dec
push
iret
mov
das
lret
pusha
mov
xor
cmp
add
sbb
sbb
push
aam
xor
int
inc
or
leave
lods
mov
or
or
lea
cmpsb
aaa
xor
cmp
xchg
dec
pop
dec
aad
dec
mov
cmp
dec
mov
dec
shlb
or
jmp
insl
clc
push
sub
data16
aad
xlat
xchg
dec
jne
pushf
fstps
and
sub
mov
stos
mov
int3
cmp
lods
inc
std
lods
loop
add
mov
aaa
sbb
shll
aaa
push
inc
mov
in
insb
add
and
sub
mov
add
int
cld
xor
aas
adc
fistps
add
jo
mov
xor
mov
add
xchg
jle
sub
insl
cmpb
shlb
mov
inc
mov
std
xchg
aaa
cmpsb
call
sub
dec
sbbb
in
jle
sbb
sub
movq
mov
sti
dec
lret
sbb
push
mov
rol
jo
pop
js
push
movsb
nop
repnz
imul
push
and
xor
inc
cmp
inc
adc
pushf
jae
testb
sub
adc
xor
ljmp
loopne
popf
push
mov
pop
or
test
cmp
mov
jno
sbb
jb
jp
sahf
insb
lea
shrl
pop
xorl
dec
outsl
sbb
mov
fwait
mov
add
pop
nop
push
mov
fildll
mov
jg
enter
test
enter
jns
inc
pushf
idiv
mov
in
dec
jl
mov
insb
mov
mov
cwtl
jns
dec
jecxz
pop
std
leave
or
xor
add
sbb
bound
mov
xlat
outsb
sbb
int
shlb
push
cmp
adc
cmc
xor
and
aas
xchg
out
nop
dec
cmc
push
ds
lcall
add
xchg
or
cmpsb
cmpl
mov
cli
pop
mov
enter
inc
test
jg
push
and
xchg
movsb
or
dec
xorb
js
xor
shr
movsb
cmp
sbb
sahf
inc
lcall
aas
out
jp
std
rcl
add
clc
inc
repz
add
lods
push
mov
push
sbb
pushl
ds
cmp
popf
sub
fs
stos
pop
testl
or
pop
jno
dec
pop
xchg
into
notl
inc
adcb
idivl
stc
or
jp
mov
push
aaa
push
inc
out
inc
fst
mov
sbb
fwait
sbb
nop
jmp
fwait
jecxz
data16
add
daa
inc
lea
sbbl
cmpb
pop
shlb
mov
fistps
das
es
fcmovbe
sub
sbb
pop
sahf
sbb
adc
mov
rcl
incb
nop
lods
and
sete
insb
leavew
popa
mull
pop
mov
lahf
mov
lcall
inc
fbstp
jmp
notb
mov
loop,pn
mov
fiaddl
sub
loop
pop
outsb
mov
or
std
sbb
fisttpl
push
xor
jge
cli
fistpll
ljmp
clc
or
jnp
fnstsw
mov
xchg
shrb
xchg
add
add
in
cld
push
outsl
mov
dec
jg
xor
int
repz
fdivs
push
popa
or
and
not
jo
rolb
xchg
in
in
repnz
sahf
push
mov
jbe
mov
jle
outsl
jle
or
jmp
lcall
lcall
lock
rcl
add
test
mov
cmp
inc
sti
xor
in
add
xor
test
sti
or
popa
lods
decb
loop
insl
cmpsl
cmp
rcrl
jno
pushf
xchg
out
aas
lahf
shr
iret
test
cmp
outsl
mov
pop
cwtl
mov
leave
stos
sub
repnz
movsb
and
cmp
out
bnd
pop
mov
je
cmc
sahf
xlat
lret
dec
mov
xor
push
jo
iret
or
ret
dec
pop
movsl
xchg
and
cmpsl
stos
pop
js
shr
cmp
adc
push
loope
inc
mov
insb
sarl
or
sub
mov
add
arpl
push
pusha
sub
xchg
aam
mov
dec
test
ror
xor
es
in
clc
cli
fwait
pop
cmp
loope
cmpsb
sub
lods
jb
xchg
or
sbb
dec
cld
mov
sub
in
iret
inc
adc
pop
push
sub
jg
aaa
adc
or
pop
sub
cli
push
xchg
pop
ja
cmp
jns
in
out
dec
hlt
push
jge
stos
xor
jge
push
cmpsl
shrb
mov
mov
popf
dec
nop
adc
xor
jbe
mov
pop
mov
in
mov
shrb
into
sahf
mov
aaa
imul
sub
dec
sbb
push
pop
sub
cmp
dec
fwait
insl
negb
mov
imul
xchg
adc
add
in
lcall
lcall
sti
subb
dec
sahf
sbb
pop
lods
xor
jecxz
stc
in
stos
jg
mov
in
jb
add
inc
dec
adc
jo
cmc
imul
fs
dec
out
orl
gs
push
cmp
into
and
mov
mov
mov
out
jo
stc
ss
xor
mov
fldenv
popa
jge
jae
cmc
pop
fwait
sbb
mov
xor
pop
mov
fistps
cwtl
stc
mov
lret
push
and
test
pop
xchg
push
jg
xor
scas
jl
dec
inc
mov
rol
pop
xchg
rcll
dec
mov
xchg
in
xorl
pop
sbb
pushf
fsubrs
pop
call
mov
jo
mov
jmp
sub
fdiv
nop
lods
xchg
outsl
sub
inc
add
add
inc
jnp
fwait
pusha
dec
sbb
std
imull
mov
adc
xor
sbb
pop
repnz
and
cmp
mov
inc
push
clc
roll
jg
or
cmp
and
rcll
notb
data16
sbb
sbb
pop
mov
cli
add
sbb
cmpsb
in
jbe
iret
mov
aas
mov
mov
in
test
outsl
pop
mov
daa
adc
xor
mov
jmp
js
and
or
add
or
movsb
test
mov
rorl
mov
push
inc
lea
mov
pop
sbb
mov
add
jne
jl
mov
push
jl
std
sub
jae,pt
into
scas
ljmp
dec
xchg
sbb
in
cmp
cltd
add
inc
sbb
shlb
jmp
lock
or
push
or
adc
add
stos
out
mov
int
dec
dec
out
fldl
or
inc
xchg
cs
fs
cmp
out
xchg
jns
inc
adc
loope
mov
add
repnz
dec
scas
mov
mov
sub
fisttpl
cld
cli
lea
pop
andl
rorl
mov
mov
cmp
mov
mov
or
ret
int3
scas
sbbb
sub
mov
mov
xlat
fists
ss
add
mov
cld
adc
int3
cmp
xchg
lcall
jmp
sub
mov
mov
in
dec
push
into
cmp
xchg
gs
dec
orl
fs
mov
fs
pop
out
notl
ds
pop
inc
push
mov
fndisi(8087
loopne
into
fldenv
ja
jno
repz
cmp
popa
cld
shl
daa
test
xor
lret
das
je
mov
testb
jo
in
and
dec
fmull
fadds
les
mov
pushf
mov
mov
inc
movsl
test
clc
or
hlt
ror
ja
popf
sub
mov
mov
insb
dec
pop
js
sbb
mov
push
inc
js
add
ss
add
mov
jp
and
push
cmc
add
cmp
pcmpeqd
lret
decl
dec
inc
add
jo
loop
mov
shrl
cli
rcll
sahf
fsubrs
adc
cmpsb
in
je
loop
cmpsl
dec
dec
sub
jb
sub
sar
mov
cmp
inc
or
aam
cmp
je
pop
jne
lret
jb
push
test
mov
nop
mov
xor
imul
mov
mov
out
jne
pop
add
xchg
je
inc
lcall
prefetchnta
js
sbb
cmp
mov
adc
aad
xlat
mov
lea
aam
jmp
inc
xorb
outsl
scas
insl
xchg
jae
hlt
adc
cmc
lock
fstps
mov
call
mov
idivb
sbb
sub
insl
call
pop
mul
jno
pop
sub
jmp
out
jecxz
out
imul
and
xchg
pop
push
repz
xchg
fdivp
cmpsb
dec
imul
rolb
sub
cltd
or
ss
movsl
addr16
repnz
dec
lea
enter
dec
imul
pop
xlat
add
into
popf
fidivs
cmp
xor
mov
out
lea
jmp
jno
add
scas
push
xchg
inc
mov
xor
in
mov
push
push
xorb
mov
pop
fcoms
pop
pop
test
mov
ljmp
mov
pop
mov
xor
adc
rcrl
push
add
popl
jl
test
sbb
or
pop
adc
or
sti
adc
imul
inc
xor
scas
jecxz
lea
fstl
es
adc
clc
mov
pop
xchg
in
hlt
imul
pop
es
stos
mov
and
pushf
shl
test
lods
jg
popa
in
jo
or
shl
aad
and
mov
das
aaa
push
inc
jnp
sahf
test
adc
or
lea
inc
in
pop
sbb
adc
dec
inc
mov
cmc
repnz
loopne
inc
imul
jae
inc
mov
je
lcall
push
cmc
sarl
in
dec
fcoml
xor
sub
add
lds
int
xchg
fsts
pop
fs
cmc
and
dec
mov
mov
add
fdivl
ja
fimuls
jb
dec
pusha
jmp
pop
or
or
popa
xchg
mov
and
js
add
sti
lods
pushf
mov
push
hlt
lock
inc
mov
ss
cli
mov
mov
dec
nop
loop
frstor
movsl
pop
cwtl
push
cwtl
and
icebp
push
xor
mov
scas
addr16
popa
imul
push
and
cli
in
push
pop
js
ds
test
fiadds
or
adc
aad
cld
and
aas
das
int3
adc
add
lea
push
add
or
pop
mov
jae
cmc
jp
xchg
icebp
jge
adc
lock
ret
insl
int
fcompl
loop
jne
mov
xchg
lret
in
jp
out
jp
jnp
fidivrs
add
aad
xchg
adc
idivl
out
and
into
xchg
jge
and
lds
loope
dec
fwait
mov
pop
and
lods
dec
call
push
scas
aam
in
fcomi
icebp
add
test
cltd
mov
add
sub
xchg
rcrl
mov
stos
subb
xchg
mov
inc
mov
es
inc
pop
xchg
or
dec
mov
push
jp
call
or
inc
push
and
pushf
or
test
sub
loop
arpl
jmp
and
mov
jle
adc
cmc
aas
sahf
add
imul
cmp
out
xor
ds
mov
les
rorb
pop
out
test
and
lret
repnz
cmp
lret
inc
push
popa
insb
into
js
ja
ficomps
dec
mov
adc
js
add
je
mov
lea
lahf
mov
into
rcrl
orb
neg
jno
xor
jecxz
sub
xor
hlt
sub
sbb
sbb
push
dec
cld
cmp
into
dec
cli
push
xchg
pop
rcl
daa
xor
push
imul
ret
test
mov
iret
cmp
mov
inc
mov
pop
or
cmp
xor
inc
repz
push
xlat
xchg
or
popf
mov
out
jge
adc
mov
mov
outsl
dec
xchg
push
push
pop
das
dec
into
popf
xor
add
cmpsl
add
xchg
adc
in
hlt
movsl
fnstenv
pop
and
sbb
adc
in
xchg
xchg
cmp
mov
jge
jne
xor
sub
cmpb
test
daa
mov
in
or
mov
lods
xor
cmpsb
sbb
cmp
repnz
ret
cmp
push
xchg
loop
rorb
sarb
and
or
pop
dec
pop
std
adcb
and
cmp
pushl
add
sbb
dec
icebp
jb
inc
cmc
jnp
xor
test
xchg
sbb
ljmp
dec
lret
or
mov
cmp
mov
comiss
pusha
sbbl
add
push
dec
mov
aaa
out
mov
ds
mov
popa
xor
fiaddl
outsl
jo
arpl
outsb
dec
xor
loopne
add
mov
ds
and
test
or
insb
adc
out
push
ss
dec
es
mov
jle
push
xchg
or
inc
stos
mov
pop
fs
lock
add
ja
mov
inc
jnp
call
stos
adc
mov
cmp
scas
sbb
subl
lahf
je
inc
enter
bound
sbb
movsb
out
shrb
jne
cwtl
shrb
cmp
jno
loop
repnz
cld
adc
add
sub
or
ficomps
xchg
ret
lret
push
int
and
in
jnp
dec
or
nop
jmp
loopne
fs
std
aam
jg
fwait
pop
jbe
stos
mov
mov
bound
adcl
lret
or
outsb
push
call
push
pop
pandn
and
jnp
mov
xchg
dec
jne
stos
cmp
insb
test
sub
rolb
test
stos
fsts
xchg
test
dec
sbb
cmp
mov
ror
test
fdivr
lret
and
pop
xchg
push
fstpl
lds
push
popa
push
rorl
imul
push
add
gs
dec
add
aam
dec
repz
inc
cltd
mov
insl
outsl
inc
aaa
xor
movsl
adc
enter
call
mov
fwait
sbb
fs
pop
out
dec
shl
pop
leave
xchg
or
sub
inc
add
enter
int
lahf
adc
jmp
pop
outsl
xor
cwtl
adc
inc
pop
inc
dec
out
adc
test
pushf
das
lea
outsl
in
pop
inc
divl
pop
sbb
stos
xor
mov
ret
int
idivl
pop
mov
cltd
in
cmp
outsb
into
ljmp
sbb
xchg
adc
dec
lods
jo
shrl
sub
aas
xor
test
das
add
jo
testb
mov
mov
mov
popa
out
aaa
aaa
shrb
xchg
cli
ret
dec
shl
fdivrl
aaa
cld
jp
mov
js
roll
pop
int
in
xor
pop
lds
aad
xchg
dec
jle
mov
es
into
lds
lret
or
icebp
dec
mov
imul
imul
data16
mov
inc
je
lock
testl
popa
cld
push
inc
or
loope
cmp
int3
jbe
push
fnop
fiadds
or
in
or
mov
nop
mov
adc
loop
int3
enter
mov
iret
loop
lods
mov
mov
dec
rcr
mov
adc
or
sub
test
in
test
and
out
sbb
adc
pushf
jp
or
xor
pop
aaa
loope
out
aas
add
jne
inc
ljmp
fcmovnbe
inc
inc
xchg
lret
inc
movsl
jo
cmpsl
jb
dec
push
dec
mov
jle
and
inc
shrb
out
arpl
sub
sub
xchg
xor
sahf
cmc
arpl
in
xchg
push
xchg
hlt
in
mov
mov
xchg
cmpsl
xchg
mov
clc
shll
mov
add
test
and
xor
mov
loop
dec
push
lret
movsb
or
mov
push
xchg
inc
test
xlat
clc
fidivl
jno
xlat
nop
cli
cmp
lret
incl
pop
ds
pop
lock
scas
shlb
mov
fsubs
and
xchg
adc
cmp
popa
cmpsl
pop
xor
in
mov
cmp
aam
fxch
repnz
xlat
adc
test
mov
popa
mov
cmp
mov
pop
xor
sti
bound
andl
dec
lods
pop
or
or
sahf
add
jmp
push
in
leave
sbb
mov
ret
jno
movsl
pusha
in
ljmp
cmp
scas
ret
jo
out
pop
mov
mov
cmc
sbb
lahf
inc
rorb
add
or
lahf
les
adc
jmp
in
xchg
shlb
cmpb
sbb
pop
pushf
bound
jb
frstor
push
fwait
push
lea
xchg
inc
sbb
imul
xchg
pop
fstpl
sti
fimuls
rcrl
jo
cmp
lds
lret
mov
iret
xchg
adc
jae
in
push
lcall
orl
mov
fsubrp
loopew
push
adc
fs
test
aam
aaa
daa
popf
imul
test
jmp
scas
loop
icebp
dec
ret
fbld
dec
or
mov
jl
and
lds
push
into
and
or
fidivrl
aam
insl
push
mov
imul
popa
lahf
and
mov
pop
xchg
xor
jl
sub
scas
loopne
lods
pop
mov
inc
repnz
mov
test
dec
idivb
rcl
dec
sti
cmovbe
loopne
push
xchg
jbe
in
mov
dec
mov
mov
push
xor
dec
pop
nop
mov
xor
pop
mov
test
fnstcw
je
idivb
mov
jo
mov
pop
bnd
push
and
add
sbb
mov
mov
fcoml
jecxz
nop
or
scas
scas
aad
es
cmpb
or
in
xlat
movsb
in
push
out
and
inc
xor
shll
cli
mov
or
jo
sub
insb
int3
push
jmp
hlt
ljmp
shl
pop
in
mov
jecxz
mov
pusha
or
pop
ss
adc
popa
out
fisubrs
nop
jnp
push
mov
out
xchg
test
adc
pop
inc
fwait
clc
sbb
add
adc
fsubrp
adc
icebp
push
jmp
aam
ds
fdiv
pop
and
add
es
ja
and
nop
frstor
dec
jbe
pop
xor
enter
sbb
xchg
add
scas
aad
mov
jb
lock
shll
jae
dec
stc
adcl
shrb
dec
xor
jnp
adc
cmp
mov
out
scas
mov
sbb
in
cmp
or
imul
xchg
pop
addr16
dec
std
mov
xchg
cltd
rcll
jle
outsl
push
add
aad
dec
mov
push
int
add
cmpsl
adc
inc
sahf
mov
lea
xchg
xor
cmp
lods
data16
ss
or
mov
addl
dec
mov
sbb
sub
lcall
aas
push
mov
sete
push
sbb
jbe
subl
and
fcoms
cmp
in
sbb
pop
mov
scas
mov
dec
xchg
ret
cmc
in
jl
into
shll
pop
add
inc
jg
cmp
fmull
add
cli
je
pop
xchg
icebp
movsl
sbb
inc
stos
add
and
mov
adc
push
push
out
andl
xchg
iret
push
iret
jmp
jecxz
dec
js
fdivl
sub
ds
and
or
push
adc
push
mov
cmpb
cs
or
add
sti
mov
repnz
mov
lahf
adc
clc
push
mov
es
fidivrs
in
test
inc
cmp
loope
sbb
bnd
xor
test
cmc
xor
jecxz
aas
imul
shlb
xor
clc
push
mov
sahf
xor
jb
mov
ret
or
jl
or
mul
adc
les
jo
adcb
ds
mov
out
icebp
insl
sub
and
test
xor
cs
xchg
or
adc
roll
cmpsl
pushf
mov
or
push
or
out
mov
xchg
xor
dec
shrl
push
add
ljmp
dec
add
xchg
test
popa
insb
mov
in
pop
mov
div
scas
bound
mov
nop
cmc
or
dec
aam
mov
cmp
cmpsl
roll
adc
sub
cmp
jle
push
adc
or
jbe
cmp
inc
pop
pop
repnz
in
dec
test
or
mov
sbb
jbe
xor
xchg
push
mov
repz
es
imul
mov
push
rorl
stc
cmp
mov
insl
pop
xchg
lcall
push
push
imul
and
scas
pop
roll
mov
and
cwtl
movsl
int3
jno
loope
mov
jecxz
or
sub
outsl
in
pop
jge
adc
pushf
xor
push
xchg
das
xchg
out
adcl
imul
xchg
cltd
and
or
inc
fdivr
popf
js
mov
test
cmp
aam
xor
or
aaa
adc
ficompl
cltd
cmp
or
or
push
mov
pop
lock
adc
test
out
cld
jb
mov
xchg
push
cmpl
inc
dec
enter
xchg
mov
cmp
mov
jmp
or
jp
outsb
jns
mov
push
loopne
sbbl
xor
pop
out
lahf
cs
ljmp
lods
scas
mov
shrb
pop
push
cmp
add
xchg
les
inc
add
sub
cmp
addr16
cmp
lods
mov
lret
pop
rcr
xlat
lock
push
fists
incb
xor
push
in
jge
fiaddl
jg
cmp
adc
dec
in
pusha
and
dec
jb
js
cmp
mov
pop
xchg
pop
loopne
imul
inc
loopne
mov
pop
gs
mov
or
arpl
xchg
insl
shl
sub
mov
outsb
dec
sub
cmpsb
mov
cmp
xor
adc
stc
mov
sti
sti
xchg
push
js
or
inc
stc
inc
jae
ds
and
adc
in
lock
lahf
int3
mov
push
and
lods
test
ss
cmpsl
inc
pop
mov
sub
lret
addr16
outsl
push
dec
and
push
inc
inc
jmp
outsb
mov
and
inc
jb
dec
aam
pop
movsb
cmp
sti
mov
jno
push
push
nop
push
mov
loopne
jp
je
mov
test
es
push
dec
push
push
or
movsb
mov
int3
icebp
hlt
jnp
dec
rclb
dec
lods
add
push
or
xchg
xor
inc
fbstp
cmp
pop
pop
movsb
sub
sub
pop
sti
mov
pop
insb
mov
pop
inc
stos
xor
jno
js
jecxz
es
inc
mov
pop
or
in
sbb
push
je
loope
dec
aam
or
or
testl
or
add
jbe
add
aam
add
inc
mov
gs
hlt
adc
in
push
xchg
aam
mov
cmp
sub
repnz
xor
repz
adc
incb
adc
loop
cmc
dec
xor
arpl
imul
shl
jg
cli
xor
addr16
push
lock
addl
and
psubsb
cltd
mov
leave
xor
xlat
movsb
clc
sbb
add
adc
outsl
sub
ljmp
jge
lock
sub
clc
in
iret
add
movsl
fs
int
add
orl
sahf
dec
daa
cmp
xchg
movsb
aaa
mov
scas
es
in
cmp
mov
cwtl
mov
dec
adc
jbe
std
dec
shrl
ret
rorl
add
lods
mov
xchg
lods
adc
stc
mov
adc
mov
in
xchg
mov
mov
test
mov
out
jp
mov
add
idivl
fsubs
in
xor
not
test
cli
popf
mov
fcomps
cltd
nop
push
bound
mov
mov
daa
in
xchg
pusha
xlat
stos
test
aas
mov
or
fcmovnbe
add
mov
aas
scas
cmpsb
cli
popf
int
into
push
adc
aad
add
mov
push
mov
sbbb
scas
imul
ljmp
pop
shll
cmc
add
or
mov
fiadds
pop
adc
std
es
or
lods
cmp
mov
jb
jae
sub
or
or
movsl
outsb
or
js
jbe
add
negb
sbb
jb
lret
cmc
cmp
sub
sub
jg
jno
dec
scas
sbb
repnz
cmc
lock
xchg
jl
test
imul
in
stos
adc
xor
mov
adcl
movsl
push
xchg
int
dec
push
pop
cli
and
dec
or
xchg
sub
ss
clc
repnz
sub
in
aad
pusha
fsubs
or
cmp
push
jnp
mov
pop
push
stc
lret
adc
push
push
mov
adc
loopne
jle
lds
xchg
rorl
push
cmpsb
stos
mov
filds
mov
fcmovbe
mov
cmp
or
int
aas
jg
out
daa
xor
pop
jo
cmp
cmp
push
imul
shl
test
aas
inc
or
in
aas
mov
adc
aaa
sbb
repnz
or
add
std
pop
dec
push
dec
or
lahf
pop
ret
jns
dec
sahf
dec
int
pushf
scas
inc
push
sub
iret
dec
mov
mov
push
xor
inc
shl
push
lods
lahf
mov
or
dec
jp
test
sti
orb
bound
fstpl
cmpsl
int
testb
fcomps
lds
ss
push
and
stos
aas
pop
in
hlt
xchg
sub
mov
aam
inc
aas
pop
fs
in
adc
outsl
push
mov
or
sbb
push
popa
mov
dec
int3
leave
pop
daa
or
je
push
adc
sub
mov
pop
cmpsl
sti
lods
psubusw
push
dec
sbb
shrb
xchg
inc
mov
shll
aas
sbbb
dec
add
xchg
sub
add
dec
fsubrl
jae
mov
jmp
and
jmp
fsts
inc
loope
popf
ds
sub
lea
jb
call
arpl
pushf
aam
push
mov
repz
and
insb
not
loopne
pop
popf
stos
stos
cmpsb
sti
push
cmp
push
test
cmpl
daa
es
jmp
imul
mov
xor
std
jnp
call
bound
sub
xorb
gs
out
fadds
daa
mov
ret
xor
mov
mov
add
pusha
fs
aam
pop
cmpsb
jle
enter
pushf
arpl
sbb
lret
xor
push
fsubrl
inc
mov
push
mov
in
lods
xor
sub
inc
hlt
popf
push
jp
pop
loopne
lret
sub
add
notb
pop
out
inc
lahf
and
stos
std
xor
add
ljmp
rcrb
rorl
or
cmp
lahf
adc
insl
loope
les
mov
xchg
xor
mov
es
mov
sbb
jge,pt
mov
sahf
daa
adc
out
lods
jle
xchg
sub
push
and
sub
xchg
pop
orb
call
int
lea
pop
mov
int3
xor
stos
imul
cmp
rorl
iret
mov
cmp
jnp
addl
inc
test
aaa
call
shl
lock
in
test
push
insb
shll
mov
xlat
arpl
and
jne
stos
dec
push
ja
addr16
push
lods
in
out
shll
inc
imul
mov
or
jge
sti
sub
outsb
mov
mov
jecxz
jecxz
ret
mov
inc
pop
add
push
or
call
xchg
pusha
add
mov
push
lds
push
ror
mov
add
dec
mov
push
shlb
sub
insb
cmc
xchg
enter
push
orb
insl
jne
je
cmp
pushf
repnz
inc
aad
push
adc
sbb
jle
roll
mov
in
inc
mov
orb
cmc
mov
pop
jg
mov
mov
call
jbe
iret
jns
lcall
and
pusha
add
jecxz
cmp
cs
and
jno
mov
sbb
mov
mov
jle
repz
mov
call
out
aad
lcall
add
fstps
pop
test
dec
mov
add
aas
popa
jmp
push
sbb
aaa
sbb
std
and
out
aaa
xchg
cltd
jno
pop
test
dec
cmp
jb
mov
scas
aad
sub
dec
mov
movsb
cmc
cli
add
and
pusha
and
fidivrs
orl
mov
and
fmul
xchg
xchg
jg
xor
leave
lret
or
jno
test
dec
arpl
fstpt
sbb
sbb
or
cmpsb
rorl
hlt
jne
scas
sbb
call
movsb
test
cs
in
sarl
ror
cmp
mov
sahf
mov
add
push
dec
pop
mov
dec
mov
rol
jo
inc
mov
std
les
out
jo
sub
rolb
int
loopne
stos
pop
mov
push
sub
int
mov
addr16
icebp
jge
or
repnz
in
jecxz
in
insb
shrb
mov
outsb
clc
mov
das
add
into
orl
jmp
fnstsw
rcr
inc
call
enter
scas
fisubrl
jns
cli
jle
pop
push
ss
das
sub
sub
inc
out
cmp
lret
mov
xor
cmp
ret
mov
insb
jge
jo
sub
stos
push
push
jge
cmc
xchg
in
jno
sti
dec
call
mov
hlt
cltd
fnstenv
cmc
loop
ret
xor
outsl
or
ds
cmp
push
mov
in
xorb
sub
mov
jo
dec
lods
mov
andb
lods
loopne
sub
fwait
sub
mov
mov
fwait
mov
mov
lret
jge
push
inc
mov
add
sbb
sub
lea
test
out
pop
dec
mov
loop
insl
fadds
mov
js
test
mov
in
jle
xchg
aaa
jl,pn
aad
sbb
mov
mov
test
test
lods
or
loope
pop
std
pop
and
xor
pop
push
mov
adc
daa
cmp
and
lcall
push
aaa
mov
pop
addr16
dec
pop
sub
lods
inc
and
ffreep
out
mov
stc
mov
jg
xchg
sub
leave
movsb
daa
cmpsb
fwait
sbb
xchg
mov
pop
loope
das
or
hlt
stos
pop
ret
dec
int3
sbb
loope
jnp
jp
xchg
push
cmc
sub
repnz
ret
or
dec
cmpsl
jecxz
mov
aad
in
in
pop
fsubrp
sub
mov
push
cmp
inc
popf
int
xchg
std
and
test
addr16
xchg
ret
js
cmp
popa
arpl
jecxz
sub
add
popf
arpl
cmpsl
test
or
push
dec
test
and
adc
rolb
jns
pusha
imul
int
or
pop
cmp
cmpsb
mov
dec
jae
mov
mov
loopne
adc
in
rcrl
push
adc
mov
jo
fisubrs
and
xor
or
jl
clc
xor
fmul
pushf
int3
popf
push
js
lock
stos
pop
jmp
fcomps
orl
ja
ret
push
scas
out
jo
push
xlat
movsb
addl
popa
imul
int3
push
mov
sahf
js
cmpl
ljmp
inc
dec
or
gs
push
pop
outsl
and
fistps
lds
xchg
xchg
icebp
xchg
add
out
nop
rcll
jnp
test
js
test
mov
stos
sub
xor
mov
jge
fbstp
jp
ljmp
jae
push
jle
push
jecxz
jne
inc
mov
xchg
roll
or
xor
cmp
xor
jnp
pop
cld
add
inc
adc
pop
cmp
ds
and
ss
sub
jno
imul
outsl
mov
rorl
inc
xchg
test
pop
mov
ljmp
test
mul
repz
sbbb
mov
pushf
dec
sub
cld
jecxz
fcmovu
test
rol
pusha
fsubl
jns
xlat
jecxz
mov
ljmp
popa
fyl2xp1
adc
fdivrl
or
xorb
std
push
mov
mov
idivl
popa
cltd
fistps
rcll
mov
inc
jae
in
leave
xlat
movnti
dec
lret
xchg
push
mov
lret
xchg
ret
outsb
mov
int3
add
pop
or
cld
movsb
cmp
inc
int
lcall
in
jl
jp
imul
xchg
xchg
cmp
jge
add
ret
or
mov
cmp
xchg
sahf
or
mov
jne
stos
cmc
cmc
push
add
subl
inc
jbe
adc
and
dec
ljmp
scas
fistl
pop
lret
lret
lret
pop
push
pop
rclb
ljmp
loope
leave
jle
sub
add
addb
ss
sub
mov
sti
into
sbb
mov
add
inc
lcall
push
mov
lea
xor
adc
mov
lcall
sub
shl
push
es
sahf
addr16
cmpsb
pop
in
sub
push
adc
loop
lds
outsl
lcall
fisubl
scas
inc
movsl
out
testl
and
push
fsubr
lcall
fists
mov
push
outsl
andb
dec
mov
mov
aad
arpl
leave
add
inc
sub
mov
sahf
out
or
movsl
repnz
sarl
stos
cmpsl
sub
test
push
icebp
pusha
ret
arpl
rol
or
inc
cmp
inc
out
fwait
sub
icebp
pushf
push
mov
mov
std
testb
leave
or
jno
and
loope
test
xchg
mov
pop
sub
xchg
aam
xlat
imul
xor
lcall
imul
jge
xor
loopne
fs
pop
and
ficompl
and
mov
lret
add
and
jns
push
js
aaa
stos
push
push
rcl
hlt
lret
push
test
enter
and
neg
in
lds
addr16
ror
dec
dec
cs
dec
jae
inc
sbb
js
aaa
out
adc
jnp
lret
add
dec
ret
or
sub
mov
loopne
push
ljmp
lmsw
shlb
cmpsl
push
mov
push
xchg
scas
mov
jge
push
mov
stos
mov
xchg
xchg
dec
or
clc
cmp
push
bound
mov
dec
sarb
scas
fstpl
sub
ds
dec
push
jns
sti
out
lcall
in
adc
mov
or
mov
dec
cmp
pop
mov
movsl
lcall
loop
push
shl
movsb
test
push
iret
lret
std
repnz
adc
sub
ja
jae
cli
bound
cmpsb
comiss
sub
inc
xchg
les
roll
je
stos
mov
divl
ret
adc
mov
mov
add
gs
jbe
lock
lret
int3
lds
add
cld
pushf
pushl
cmp
test
mov
fisubrs
push
mov
out
pop
out
mov
sub
mov
cmpsl
fnsave
dec
mov
daa
cmp
dec
pop
sbb
repz
shl
test
iret
es
out
leave
enter
idivl
bound
mov
fcoms
mov
push
in
test
lods
ljmp
cmp
ja
fwait
inc
sahf
mov
cld
mov
adc
in
dec
xor
sub
call
or
ss
mov
xchg
nop
cwtl
insl
outsl
mov
mov
sub
ret
and
cmp
and
outsl
mov
movl
pusha
push
mov
add
fadds
enter
xchg
fimull
std
and
and
cmp
sbb
jge
mov
test
cmp
push
fs
push
hlt
sbb
cltd
fidivs
movsb
sbb
cmc
xchg
dec
stos
mov
jg
ret
test
push
popa
jg
movsl
mov
cwtl
addr16
js
xor
cwtl
dec
fists
sbb
xchg
out
test
xchg
addr16
insb
pushf
mov
inc
aam
shll
push
mov
lods
sbb
xchg
leave
sub
mov
jmp
xor
push
aad
and
adc
cmpsb
sbb
or
gs
imul
fldl
pop
adc
mov
mov
ficoml
mov
fisubrs
fwait
je
stos
xor
push
fidivs
xor
xor
scas
sbb
sub
mov
loop
aaa
dec
test
jnp
jae
out
dec
xlat
jle
repnz
mov
inc
mov
movsl
dec
enter
sahf
repz
mov
out
loopne
jmp
jne
cmc
mov
daa
inc
stos
push
add
cmpsb
xchg
adc
or
outsl
cmpl
mov
mov
in
jg
push
dec
fiaddl
imul
cltd
mov
jle
sub
mov
cwtl
pop
mov
xlat
mov
push
xchg
jnp
fsubrp
adc
call
or
ljmp
pop
aad
pop
xchg
cmpsb
push
add
repnz
fists
roll
ja
out
inc
outsb
sub
or
mov
hlt
nop
and
jge
stc
das
fstl
xlat
das
and
push
xor
inc
mov
in
popa
sub
cmpsl
cmpsb
gs
rcrl
cmp
rcl
xlat
ss
adc
dec
jge
dec
adc
cmp
pop
jns
cmp
in
movsb
mov
push
mov
jae
jle
test
fadds
sbb
enter
call
sbb
add
pop
dec
rorl
cld
xchg
leave
sub
and
pop
fsts
jo
mov
jo
cmc
adcl
xor
cmp
in
xor
ret
pop
mov
pushf
fimull
inc
test
xor
jae
push
dec
xchg
popa
cmp
and
inc
cwtl
cmp
aas
clc
out
jecxz
mov
inc
ficoms
repz
popa
in
test
mov
enter
mov
in
xchg
aad
dec
lods
mov
dec
rcrl
ss
adc
xchg
sbbb
lret
push
xor
into
mov
repz
push
sub
fs
sub
pusha
out
enter
in
mov
jmp
loope
dec
insl
filds
xchg
daa
jmp
fidivs
mov
loope
push
das
add
sahf
insb
aam
mov
cwtl
jbe
movsl
outsb
inc
std
stos
test
sbb
xchg
enter
xor
pop
inc
cmp
fs
pop
fcmovu
leave
test
and
ljmp
test
andl
icebp
or
inc
jne
and
inc
ret
jae
and
gs
das
out
adcb
push
sub
xchg
dec
jns
mov
jne
rol
push
out
or
mov
cmp
xchg
je
dec
push
or
out
adc
xchg
xor
sbb
jnp
icebp
xor
add
xlat
sub
mov
mov
xlat
push
or
dec
shll
loope
push
xchg
dec
je
jmp
imul
and
dec
sub
in
adc
daa
shr
rcrl
push
stos
cmp
cld
jns
clc
popf
out
jmp
xlat
fidivrs
jae
mov
push
dec
push
cmp
popa
mov
xlat
loop
mov
jo
dec
adc
insb
ror
xchg
xor
je
jmp
mov
aas
rcrl
sub
push
pop
data16
jle
sbb
adc
xlat
cmpsb
push
sbb
mov
jno
and
inc
mov
call
mov
nop
js
repz
pop
push
aad
lret
kmovw
mov
and
xchg
or
sub
adc
aad
fucompp
in
negl
bound
and
out
xor
aaa
imul
jl
movsb
push
hlt
sbb
cltd
jge
fcoms
test
sahf
pop
in
mov
dec
int3
pop
mov
sub
stc
adc
iret
repnz
and
aas
stos
mov
inc
sub
mov
xor
sahf
in
mov
ja
movsb
sbb
nop
xor
push
out
xchg
mov
xor
fcoms
bound
insb
xchg
push
adc
cmp
xchg
xchg
jecxz
push
fwait
add
stos
inc
push
add
sahf
mov
cmp
mov
push
xchg
mov
ffreep
rolb
lahf
js
push
cmp
and
nop
xor
mov
sub
mov
cmp
adc
jg,pn
rclb
adc
ds
andb
sbb
push
and
daa
or
inc
xchg
dec
push
xchg
mov
sub
mov
repz
dec
aas
sub
dec
iret
cmp
ss
jp
dec
rolb
mov
cmp
adc
aad
xor
pop
iret
loope
jb
test
bnd
cmp
pop
sub
loope
mov
or
adc
mov
cld
pop
adc
adc
roll
imul
pop
ja
inc
add
dec
push
adc
mov
pop
mov
pop
and
xor
in
insl
and
movb
aas
jae
shrb
lahf
movsl
or
dec
dec
test
insl
push
int
nop
movsl
loop
hlt
cmp
inc
iretw
xlat
adc
in
and
pop
mov
ret
push
fadds
and
mov
ss
sbb
jnp
jle
inc
sbb
fwait
sbb
xchg
popa
dec
cs
xchg
mov
mov
pop
add
out
pushf
rorb
adc
dec
or
bound
cmpsb
pop
mov
mov
mov
fisubrl
and
dec
xchg
and
int
cmp
in
rcll
fmuls
mov
mov
clc
cmp
adc
push
notb
jmp
out
stos
push
lret
in
scas
cltd
push
mov
dec
xor
xor
cmc
fbld
cmpsl
data16
xchg
xor
jmp
adc
dec
mov
and
andb
test
dec
ret
mov
mov
pop
out
mov
insb
cwtl
les
pop
pusha
fcoms
inc
sbb
insb
data16
push
negb
stos
pop
mov
jle
push
inc
outsb
stos
mov
jecxz
and
repnz
insb
mov
xor
hlt
aaa
push
enter
mov
js
xchg
sub
push
add
cmp
outsb
movsb
punpcklbw
stos
les
pop
pop
xchg
dec
mov
jb
dec
push
movsb
aad
movsl
mov
jae
ja
loop
xor
test
mov
clc
jge
dec
imul
stos
pop
scas
lahf
sti
mov
fcoml
push
fs
mov
jmp
mov
neg
sahf
pop
movsl
mov
test
or
imul
dec
push
cmp
sarl
xorl
and
sahf
pop
rorl
push
add
dec
or
iret
lds
or
mov
std
int3
mov
adc
stos
imul
out
pop
mov
adc
jecxz
fmull
lret
or
imul
dec
mov
mov
pop
jmp
lods
mov
and
sub
fcompl
movsl
sahf
fidivrl
mov
add
pusha
mov
andl
mov
in
xchg
enter
das
add
test
loope
jae
lea
add
mov
lret
mov
dec
int3
subl
pop
mov
shll
int
xlat
jnp
scas
cmpsb
iret
mov
mov
loope
ds
inc
xor
xchg
pop
test
cmp
ss
mov
dec
push
and
and
aas
repnz
scas
repz
daa
adc
jbe
add
or
and
pop
loop
sbb
push
gs
fnstcw
int3
or
data16
decb
outsb
pop
inc
fildl
jle
pop
andl
sbb
das
mov
insb
test
andb
out
cmp
das
push
xor
int3
or
sarb
push
cmp
in
xor
repz
dec
xchg
inc
rcll
sub
jno
mov
jg
fimull
ret
cli
hlt
pushf
cmpsb
mov
and
mov
dec
xchg
push
xchg
pop
movsb
bound
mov
jge
push
iret
es
inc
movsl
ja
int3
out
es
and
in
pop
inc
push
and
fmul
mov
pop
in
loopne
es
cltd
cmp
add
fisubrs
push
ret
pop
pushf
mov
test
movsb
pop
push
into
mov
jecxz
adc
sbb
sahf
xor
dec
pop
fisubrl
xchg
mov
mov
mov
loop
xchg
jecxz
pop
jnp
mov
pop
mov
fsub
xchg
dec
cmp
lret
dec
push
inc
ret
adc
mov
xchg
cmp
out
mov
cmp
mov
inc
pop
enter
repnz
sbb
sub
iret
and
movsb
sub
cld
ficoms
sbb
pop
xor
aaa
sbbl
and
mov
testl
push
jns
int
mov
les
outsb
dec
mov
mov
shl
xor
cmc
nop
inc
xchg
xor
add
inc
mov
and
xor
cmc
inc
je
jno
rcrb
jbe
pop
xor
jp
xor
stos
cmp
mov
pop
mov
mov
or
and
insl
push
jno
cmp
add
push
and
ljmp
inc
mov
and
leave
or
cmp
push
or
ja
rorb
movsb
repnz
int3
out
sahf
pop
call
mov
mov
mov
adc
jge
sbb
cli
cmp
mov
xchg
adc
scas
lods
popa
movsb
pop
mov
into
push
cltd
fwait
push
outsl
adc
dec
adc
cwtl
sbbl
mov
imul
xlat
and
mov
loopne
shrl
insl
xchg
fs
dec
xchg
fdivrs
sbb
lods
outsl
mov
jge
aam
scas
jle
pop
xchg
mov
outsb
xchg
lock
test
sbb
pop
mull
adc
xchg
in
dec
xchg
mov
pop
in
cli
xchg
movsl
dec
nop
push
mov
addl
fidivl
pop
adc
es
pushf
jbe
inc
mov
cltd
pusha
xchg
fldcw
outsb
shll
mov
scas
mov
xchg
incl
aam
loope
cld
sbb
jmp
testb
shll
pop
mov
mov
and
in
adc
imul
mov
ret
fdivr
idivl
add
out
addr16
push
je
pushf
dec
arpl
shll
cmp
out
sahf
lcall
cld
dec
sbb
jae
lahf
nop
sub
cs
sub
mov
aas
inc
pop
cmp
mov
pop
and
repz
xchg
adc
enter
sbb
mulb
cmp
fdiv
cmp
mov
inc
repz
add
jle
add
pop
dec
rolb
jo
lods
pop
mov
rcrb
pushf
notb
shrb
xor
shlb
dec
movd
loopne
jnp
in
sbb
push
adc
mov
sub
xor
imull
sub
inc
aam
pop
adc
jns
pop
mov
cs
xchg
push
outsl
mov
dec
ficomps
lods
negl
lock
sti
lret
fisubl
iret
shlb
cld
es
movsb
ljmp
jg
jg
push
jns
push
int
mov
or
iret
cmp
je
dec
or
cmpsl
xchg
sbb
ljmp
mov
inc
dec
loop
jge
cld
mov
and
inc
sbb
fdivl
out
lods
aaa
xchg
test
hlt
add
dec
imul
sbb
adc
and
pop
jle
inc
fmull
xlat
jp
sub
add
push
cli
dec
mov
je
sub
das
mov
sarb
loope
mov
jle
inc
push
sahf
dec
divb
add
xor
xchg
sbb
out
jne
lea
rcrb
repz
jae
jne
addr16
inc
jp
jmp
iret
adc
fdivp
insb
inc
jns
mov
outsl
mov
inc
fmuls
inc
mov
pop
outsl
or
cmpsb
or
push
mov
movsb
cmp
movb
xor
mov
mov
les
int
stc
mov
xor
in
mov
adcb
and
jne
in
pop
jnp
or
addr16
adc
test
mov
jecxz
mov
mov
lret
adc
or
cmp
aad
push
cmpb
ss
or
mov
lea
mov
sub
test
jmp
mov
pushf
mov
ret
inc
xlat
xchg
aad
sti
and
cwtl
mov
pop
dec
xorb
ljmp
ret
sbb
in
repz
test
repz
xor
in
jle
out
out
loope
or
enter
lret
xchg
dec
shlb
daa
dec
push
inc
outsl
or
leave
out
scas
xor
aas
mov
mov
pop
and
cmp
cmp
hlt
fdivl
loope
or
or
mov
lods
addr16
enter
pop
addb
sub
fbstp
push
shrl
xchg
mov
popl
mov
sub
stos
inc
std
adc
mov
scas
imul
add
popf
adc
outsb
pop
mov
mov
fsubr
clc
mov
adc
insb
sbb
pushf
out
lcall
sub
cmp
add
jmp
push
inc
or
sbb
out
lods
push
push
cmc
jae
nop
dec
sbb
loop
sti
adc
pushf
mov
lret
sbb
notb
test
sahf
fildl
push
inc
sahf
mov
adc
mov
out
in
adc
inc
push
pusha
data16
or
push
gs
cli
sub
dec
inc
mov
lret
jbe
xchg
pop
or
mov
stos
cmc
cmpsl
setg
std
icebp
pop
cmp
jl
aad
movsb
adc
cmpsb
scas
jmp
adc
orb
fbld
xchg
xchg
nop
pop
fsubrs
fcoml
push
rcll
add
sarl
aad
in
dec
out
lcall
ds
and
inc
out
mov
jecxz
cmp
and
pop
ret
stc
fcmovbe
sbb
arpl
fcmovb
bound
imul
inc
sub
loope
mov
fdivrl
jp
ret
mov
mov
dec
jge
lret
fisttpl
adc
mov
mov
subl
insb
idivb
and
shl
repz
test
push
push
adc
insl
push
int
int
pop
xchg
cld
rolb
sbb
es
imul
imul
les
ja
out
sbb
mov
je
sbb
mov
jp
mov
pop
movsb
push
stos
xor
addr16
inc
xor
insb
jmp
sarb
lds
add
insl
sub
mov
in
inc
popa
add
mov
and
in
pop
add
movsl
notl
xchg
pusha
daa
enter
or
xchg
pop
mov
rol
inc
lcall
sub
jp
cmp
lret
xchg
add
push
lods
idivl
sahf
mov
add
mov
push
push
sub
repnz
bound
fs
inc
and
out
outsl
mov
out
movsb
inc
roll
in
xor
sub
xchg
push
mov
sbb
pop
xor
jp
insb
add
sbb
jge
mov
and
orb
clc
inc
lcall
pop
cmp
cmp
insl
movsb
xchg
ds
adc
mov
dec
decl
int3
sbb
and
fcoms
sbb
dec
adc
int3
scas
fdivs
scas
pop
stc
loop
gs
xchg
fcoml
dec
push
lods
mov
dec
xchg
imul
out
mov
rcrl
out
xchg
cltd
or
xlat
add
popa
daa
shl
xchg
into
sbb
cmp
in
movsl
mov
ret
jns
lds
lea
adc
lret
popf
dec
jl
je
ljmp
dec
sbb
sub
cmp
or
loopne
fucomp
inc
jne
pop
repnz
add
daa
push
shrb
pop
lds
xchg
and
add
adc
movsb
lahf
icebp
jnp
pop
lret
fmull
xlat
mov
xor
adc
inc
out
sbb
mov
xor
mov
fs
mov
jl
push
fnsave
test
mov
mov
xchg
fs
add
xor
add
divl
fldenv
lods
lcall
jmp
loope
or
sub
ljmp
cli
out
inc
outsb
fwait
mov
ja
hlt
jo
popf
mov
dec
stos
mov
jecxz
or
roll
ret
push
mov
adc
xchg
jae
test
and
imul
js
out
repz
or
jno
lahf
xchg
inc
aas
pop
or
mov
leave
push
scas
ret
sub
mov
mov
add
mov
movsb
inc
jne
in
insb
insb
mov
dec
mov
stc
inc
pop
ret
xchg
je
push
sbb
in
loop
adc
pushl
and
jb
rorb
out
cmp
xor
ja
sti
and
mov
fmull
fwait
repnz
sub
or
fcompl
inc
sub
xor
xchg
jnp
add
out
adc
outsl
push
push
ljmp
push
xchg
aaa
mov
jecxz
mov
push
mov
inc
rorb
push
dec
shrl
and
out
dec
jb
icebp
push
std
imul
add
ljmp
shrb
xchg
mul
fs
dec
rcr
jg
mov
movsl
pop
push
into
mov
push
mov
or
add
pop
pop
pushl
movsb
out
sbbb
inc
flds
stos
ss
ret
add
stc
imul
dec
test
fbld
aam
adc
bound
jae
inc
pop
mov
pushf
or
and
cs
xchg
js
or
mov
fidivl
leave
clc
sub
push
out
dec
das
cmp
clc
js
mov
stos
inc
movsl
jge
pusha
sub
adc
call
das
dec
jb
sbb
fsubs
adc
dec
push
mov
sbb
cmp
test
cmp
adc
stos
ja
xor
dec
shlb
in
mov
sub
mov
in
into
add
inc
cmp
nop
mov
cwtd
pop
mov
lahf
fiaddl
pop
mov
pop
out
adc
mov
push
mov
ret
add
xor
dec
inc
fsts
cmp
or
popa
sbb
xor
call
in
addb
icebp
sub
pop
or
xchg
in
addr16
or
testb
jns
cmp
push
push
adc
cmp
and
mov
in
mov
sub
sub
das
push
jmp
repnz
inc
xchg
leave
push
jmp
jmp
ret
loopne
cmp
mov
pop
cmpsb
ret
fs
push
adc
or
dec
jg
push
sbb
sbb
xchg
negl
fwait
mov
not
pop
shr
pushf
bound
or
mov
ja
mov
and
repnz
push
hlt
adc
adc
sbb
xchg
lock
shlb
loopne
push
loop,pn
or
fucomi
mov
xchg
test
mov
inc
arpl
fisttpl
test
sub
add
inc
xchg
jl
pop
scas
int
ret
push
jp
sbb
jnp
mov
cli
push
jge
dec
aam
or
nop
xor
repz
cmp
insb
and
pusha
arpl
addb
dec
ror
jge
outsb
je
mov
jo
pop
sub
mov
jbe
adc
nop
push
mov
incl
and
data16
adcb
xchg
arpl
push
dec
jae
push
cmpsl
aad
adc
adc
ja
ds
aas
and
inc
jg
mov
out
je
adc
and
sbb
pop
icebp
push
aam
xchg
push
adc
xorb
xor
fdivs
call
jle
dec
or
jmp
scas
xlat
je
mov
mov
pop
call
dec
je
cld
stc
inc
jp
adc
mov
xor
popf
imul
sarl
sub
in
sahf
or
or
cltd
aas
jl
loopne
movsb
cs
out
int
or
aad
rolb
cmp
arpl
loop
enter
sub
jmp
sbb
add
hlt
push
mov
fwait
push
fidivl
cmp
cs
jg
out
mov
fs
mov
mov
pop
xor
push
or
pop
pop
and
lods
sarb
int
xchg
shl
pusha
jecxz
push
iret
clc
sub
jb
sub
pop
mov
dec
adc
jb,pn
roll
jle
mov
test
orb
pop
testb
test
pmaxsw
inc
fwait
xchg
aad
pop
sub
shl
add
mov
std
sahf
addr16
aad
push
jnp
mov
jle
and
mov
shrl
jne
sbb
push
inc
or
sbb
cltd
loopne
xor
out
orb
or
dec
ds
ss
sub
pop
jmp
mov
sbb
out
jle
test
cli
dec
icebp
xchg
push
mov
inc
mov
push
dec
cmp
push
inc
xlat
adc
sub
lock
add
stos
and
inc
lret
aaa
xchg
lea
fwait
and
mov
cmp
xor
cmp
jl
pop
inc
adc
loopne
mov
aaa
outsl
cs
push
jecxz
andl
insb
lret
or
or
dec
jmp
jmp
pushf
jmp
xor
xchg
jmp
leave
call
sub
dec
cmp
xchg
sti
out
push
dec
mov
mov
adc
icebp
scas
mov
std
data16
cmc
pop
xchg
js
insl
pop
jecxz
hlt
cmpsb
mov
cli
mov
xor
sbb
inc
pop
sbbl
sarl
mov
sbbb
cmp
aad
ja
xlat
adc
rorb
in
insb
jmp
mov
xor
in
imulb
test
pusha
and
mov
stc
test
xchg
push
cmp
hlt
push
xor
cwtl
dec
loop
or
aad
jnp
fs
mov
mov
mov
enter
xchg
pop
jg
or
lock
adc
in
inc
pop
push
in
push
notl
hlt
and
dec
add
xchg
jb
pop
arpl
imul
xor
in
stos
pop
mov
or
mov
ss
fdivrl
mov
fwait
into
sbb
mov
jle
outsb
inc
adc
lea
fmuls
xor
pop
and
stos
mov
jne
mov
dec
leave
mov
xor
rcr
xor
inc
lods
vminss
push
std
clc
xchg
arpl
inc
sub
ret
popa
pop
push
mov
dec
add
add
dec
xor
lock
cwtl
pop
fisttpll
push
adc
xchg
insb
scas
mov
fistl
cmpsb
fbld
sbb
roll
loopne
mov
xor
add
fimull
dec
arpl
pop
xchg
nop
inc
push
xchg
insl
jecxz
fists
je
push
andl
pusha
xchg
ljmp
movsl
testl
je
std
dec
shlb
cmovle
pop
mov
sbb
divl
cmp
testb
enter
xor
rolb
outsl
in
imul
cmp
or
mov
mov
mov
inc
loop
mov
mov
add
sub
lock
pop
popa
cmp
in
fnsave
jb
ficoml
out
mov
inc
mov
pop
popl
fwait
xchg
sub
push
and
fcomps
xchg
daa
outsb
add
es
test
enter
insl
mov
std
pushf
leave
cmp
add
xchg
inc
push
cli
sbb
shrl
mov
test
sbb
sbb
jg
adc
xlat
cmp
pop
cltd
mov
jno
xor
jmp
pop
pop
sub
fidivrs
cmpsb
ficompl
and
out
movsl
hlt
xchg
cltd
mov
xchg
adc
inc
mov
cs
sub
inc
sub
jmp
lcall
jg
xchg
add
xchg
sarl
cmp
daa
jge
ficoml
mov
enter
js
stc
dec
aad
mov
xchg
dec
insb
sbb
jno
add
cwtl
rcrl
inc
scas
idivb
xor
cmp
filds
and
in
dec
jne
inc
arpl
xchg
pushf
xor
dec
pop
mov
sub
pop
adc
les
aaa
dec
les
aas
movsb
jge
out
frstor
push
je
dec
xchg
pop
ret
int
mov
iret
fcom
andb
push
inc
fsubrs
push
dec
and
js
sbb
popa
inc
add
xchg
inc
out
cmp
loop
push
xchg
imul
add
push
fmuls
mov
push
sti
xchg
insb
call
jg
mov
hlt
and
and
xor
fadds
scas
push
pop
lods
xchg
inc
add
jle
push
jge
adc
lret
fimuls
push
pop
addr16
jecxz
cmp
rcll
nop
out
daa
rcll
push
xor
fcmovu
ficompl
arpl
ret
neg
ret
mov
mov
dec
nopl
subb
pusha
sub
shrb
sub
adc
mov
lcall
dec
cwtl
inc
push
iret
mov
cmpsl
mov
push
lret
out
out
xchg
push
lret
scas
lea
dec
mov
bound
insb
xchg
test
shl
push
sti
add
dec
iret
dec
pop
jo
add
inc
push
iret
xorl
sbb
sbb
jns
sub
dec
out
push
clc
add
pop
das
mov
in
or
adc
mov
test
push
xor
fisttpl
dec
add
sbb
rclb
out
adc
jmp
add
lahf
cmp
rclb
mov
or
add
scas
inc
dec
jns
sub
in
stc
jae
xchg
lods
sub
dec
xorl
mov
pop
jecxz
cmpsb
push
push
cmpsl
mov
push
push
in
dec
xchg
jmp
xor
imul
jb
cmp
push
cli
flds
push
decb
xor
xlat
mov
dec
xchg
arpl
cmp
repz
push
cmpsl
das
out
pusha
jb
jno
hlt
insl
inc
add
mov
cmc
out
or
mov
popf
pop
outsb
int3
sahf
das
arpl
in
xor
das
addr16
popl
movsb
lahf
pop
add
test
mov
mov
add
xorl
jnp
jp
xchg
imul
push
sub
and
push
push
pop
push
and
xchg
lock
add
repnz
ja
sarl
mov
out
cmove
push
inc
lahf
mov
sbb
cmpsb
das
push
sub
and
test
popa
icebp
dec
jmp
push
dec
push
pop
stos
inc
sbb
int3
mov
fbstp
fstps
and
repz
xchg
lea
arpl
outsb
push
in
and
or
mov
jae
imul
cli
cmc
mov
jge
shll
jmp
mov
sub
inc
in
js
mov
pop
cltd
xchg
mov
add
and
je
mov
adcb
add
push
insl
inc
imul
es
mov
adc
imul
cld
add
int3
clc
inc
ret
mov
dec
jmp
cmp
mov
scas
mov
mov
dec
ret
mov
lahf
xor
mov
inc
cmc
mov
mov
mov
pop
cmpsb
cmp
mov
or
mov
dec
popa
adc
ficoml
out
xchg
inc
mov
daa
lahf
test
jg
lods
jbe
rorb
mov
sub
and
out
push
xlat
sbb
test
or
fs
lds
cmc
and
sti
fptan
sbb
aas
dec
adc
adc
push
nop
flds
nop
or
test
dec
iret
cmp
fdivrs
movsl
aad
mul
fisubl
add
fidivs
xchg
es
imul
das
lret
test
je
dec
or
adc
out
push
mov
js
test
pusha
int
lock
ret
xor
popa
cmpsl
nop
repz
xor
pop
gs
int
xor
ret
inc
dec
das
cs
cmp
das
or
out
cmp
push
imul
daa
add
popa
mov
hlt
mov
dec
cmpsb
and
in
dec
lock
outsb
sub
imul
dec
rclb
dec
lret
insb
mov
mov
push
jne
lret
mov
inc
xchg
outsl
fcomip
add
lds
sarl
mov
mov
adc
imul
mov
jmp
push
shrl
cwtl
pop
aas
mov
movsb
lods
push
cs
xchg
pop
mov
mov
sbb
pop
pop
or
fucomi
mov
push
subl
pop
js
sbb
out
pop
sarb
inc
popa
dec
xor
cs
sbb
xchg
or
insl
push
xchg
pop
shl
fsts
out
mov
cmpsl
je
stos
repnz
arpl
xchg
and
std
sarb
leave
ror
cwtl
cli
pop
push
cld
movsl
push
mov
sub
adc
test
adc
cld
sahf
es
stos
test
push
or
ret
mov
add
rclb
pop
imul
fdiv
aas
sbb
dec
or
mov
lock
pop
lock
mov
arpl
xchg
mov
loopne
sub
add
repz
dec
xchg
pop
xor
popa
js
pop
scas
aam
add
mov
icebp
ljmp
adc
xor
out
leave
xchg
mov
or
cmc
test
shll
mov
mov
adc
test
push
jns
lods
pop
pop
xchg
fadd
mov
scas
addb
pop
cmpsl
fsubp
js
js
mov
out
and
cli
fucomip
pop
mov
inc
dec
add
pop
sbb
mov
dec
or
mov
test
notb
cmp
loop
fsubl
xor
inc
imul
neg
ss
xchg
or
jg
js
mov
ss
jg
cld
dec
cmp
lea
ret
xor
ss
jns
cmp
scas
mov
inc
test
test
movsl
or
js
out
out
or
ficomps
mov
pushf
cs
mov
push
and
int
stos
mov
repnz
fwait
pop
lock
pusha
inc
xor
jecxz
dec
xchg
jmp
sbb
fwait
jp
int3
mov
xor
fs
sarl
shlb
insb
decl
jnp
mov
or
sub
cmp
into
xchg
mov
sub
sahf
int
outsb
lcall
sti
stos
dec
mov
pop
outsl
cs
popf
cltd
movsb
aas
jg
pop
test
out
mov
and
fs
mov
je
int
daa
sbb
xor
or
stc
popa
cmc
daa
pop
test
or
inc
leave
dec
or
insb
sbb
mov
sar
mov
add
bound
scas
jecxz
and
shll
retw
mov
aad
mov
ds
push
push
add
push
pop
mov
lret
cs
repz
nop
in
xchg
lahf
scas
cld
movsb
ljmp
nop
mov
shrl
fimull
pop
mov
mov
sbb
xchg
test
fbstp
ds
cmp
push
repz
mov
stos
popf
xchg
cmp
xor
fcmovbe
jns
push
das
mov
inc
mov
push
add
and
iret
hlt
adc
jl
mov
rcrb
fiaddl
loopne
cmc
hlt
in
inc
pop
xor
xor
dec
aam
test
outsb
dec
mov
scas
jl
rorl
dec
jecxz
scas
neg
dec
jle
addr16
jecxz
sbbl
movsl
xchg
push
test
inc
pop
inc
in
xlat
out
mov
in
loopne
cmp
subb
pop
push
adc
sub
lea
sbb
icebp
inc
cmpsb
push
add
stos
adc
out
push
clc
das
jae
xorb
sbb
jnp
je
fcomi
inc
mov
ja
jbe
iret
cltd
std
cmp
sbb
dec
xchg
popf
fstl
pop
pop
mov
push
pop
notb
sahf
adc
push
xchg
jae
push
jg
and
les
les
sub
jbe,pn
cltd
addb
ljmp
xlat
sub
inc
js
xchg
mov
inc
decb
test
push
lock
jne
push
out
enter
sti
in
rclb
cwtl
pop
add
mov
movsb
mov
xlat
js
repz
inc
clc
lods
movsb
add
mov
stos
xor
lea
addr16
sbb
cs
stos
cmp
jns
lds
hlt
add
es
orb
pop
and
mov
or
inc
sti
sahf
cmp
or
pop
fisttpll
in
loope
sub
lods
ja
cwtl
sahf
inc
and
mov
sbb
mov
cmpsb
and
fs
lret
and
test
fs
jle
or
aas
xor
add
fsubp
xchg
xchg
outsl
dec
popa
xchg
int3
cmp
ret
sub
mov
les
aaa
insl
imul
frstor
push
outsl
mov
cltd
sbb
inc
push
mov
pop
clc
popf
mov
je
push
insl
push
mov
ret
sahf
and
cmp
jno
dec
icebp
xchg
adc
outsl
mov
jge
lret
aad
iret
aas
fistl
mov
iret
movsb
outsb
jecxz
pop
out
movb
int
mov
inc
cmp
jge
jl
cltd
pop
testb
jp
xchg
xchg
sbb
fadds
add
xchg
je
pop
mov
and
xlat
push
in
imull
mov
lods
data16
subl
inc
jmp
or
lret
ljmp
add
data16
xchg
addr16
out
pop
cld
pop
sbb
rcr
movsl
out
stos
cmp
in
jb
jge
nop
aam
push
imul
popa
in
mov
sti
xchg
loopne
in
xor
in
rclb
or
add
mov
mov
lret
pop
lds
jg
andb
js
int3
aam
dec
mov
nop
ss
mov
popa
ret
inc
test
dec
mov
fs
subb
imul
in
sbb
jl
mov
cld
mov
or
es
mov
notl
cmp
out
iret
shlb
and
fucomi
mov
decb
in
pop
not
mov
push
gs
mov
xor
dec
jmp
push
imul
xchg
or
mov
push
or
pop
inc
ja
or
xor
mov
xor
inc
repz
fidivrl
mov
mov
ljmp
aaa
lahf
mov
lock
subb
jbe
nop
mov
xchg
movsb
adcb
mov
or
sub
popa
in
cmp
push
cli
dec
js
sub
enter
lret
cmp
mov
xchg
adc
pop
stos
xchg
fbstp
xor
movsl
push
pop
andb
add
add
dec
out
push
in
add
jge
fidivl
jecxz
push
cltd
leave
call
jns
cmpsb
xchg
gs
xchg
test
aam
adc
pop
int3
test
mov
mov
xor
sub
sub
jp
out
inc
jg
jmp
mov
cmp
repnz
into
fdivr
bound
loop
lcall
fsubrs
test
adc
push
pop
scas
xor
cmp
xor
loopne
or
push
adc
inc
sbb
ficompl
dec
in
in
cs
fildl
mov
outsl
mov
rcr
mov
jne
sbb
or
xchg
jge
pop
repz
sub
dec
cmc
int3
andb
je
inc
in
hlt
mov
push
hlt
lods
js
or
jmp
and
inc
jo
dec
adc
jg
push
loope
sub
mov
mov
pop
push
inc
repz
mov
insb
and
jno
hlt
push
adc
shll
or
jp
sbb
sbb
aaa
sub
mov
fdivs
scas
popa
insl
test
inc
out
pop
aas
fisubrs
or
mov
push
nop
xchg
arpl
js
fcoms
mov
lcall
mul
popa
test
jmp
sahf
pop
aas
xchg
test
les
movsl
scas
push
mov
jecxz
rorb
xchg
clc
jle
iret
loopne
js
les
jecxz
addr16
pushf
mov
stc
cmp
int
push
fimuls
push
into
arpl
in
lahf
icebp
ds
xor
aad
in
cmpsl
adc
call
movsb
loop
sub
or
pop
fldcw
cmp
mov
jns
dec
mov
lahf
sub
jg
adc
pop
fucomip
cmp
bound
je
sbb
jbe
or
xchg
negl
in
mov
psubq
out
cmp
das
je
inc
and
pop
add
outsb
mov
pop
cmp
pop
push
in
int3
aad
or
mov
push
pop
adc
sub
lds
mov
pop
xchg
shlb
xchg
out
sub
imul
dec
and
inc
test
adc
cmp
xchg
mov
push
hlt
mov
pop
arpl
cwtl
adcb
xor
jge
lcall
pop
xor
cwtl
xchg
xchg
mov
adc
popa
stos
pop
shrb
jnp
sub
mov
inc
dec
mov
mov
dec
loopne
mov
inc
stc
add
loopne
mov
ret
push
outsb
or
mov
pushf
pop
std
push
nopl
xchg
hlt
les
call
fistps
pop
jne
sub
call
lret
sbb
lds
sub
fucomp
stos
gs
xchg
les
mov
xor
push
shrb
and
cs
int
or
mov
or
mov
in
push
test
and
inc
xor
jo
mov
mov
orl
push
xchg
repnz
add
xchg
into
sub
les
lods
mov
sbb
arpl
add
lret
fdivs
lcall
scas
xchg
xlat
adc
aaa
mov
in
push
xlat
dec
mov
inc
xor
rclb
pop
into
push
in
jbe
add
sahf
sub
inc
insb
mov
mov
notb
fdivl
hlt
dec
inc
fstps
outsb
cmp
clc
das
sub
outsl
inc
add
pop
or
cli
jae
lea
subb
ret
inc
xchg
sub
xchg
scas
jg
add
pop
mov
dec
dec
pop
fistps
daa
call
imul
mov
gs
loopne
lods
xor
repnz
or
push
ja
orl
xor
lods
push
mov
mov
sbb
cmp
dec
mov
scas
hlt
mov
mov
lcall
movntq
mov
mov
push
inc
jge
push
push
hlt
mov
sub
push
push
loop
orb
divb
aas
pusha
insl
sub
out
jg
insb
insl
inc
xchg
fstps
mov
xor
lret
shrb
inc
mov
xchg
aad
sub
hlt
sahf
lea
mov
dec
push
andl
xor
fidivs
lret
in
loope
mov
jb
dec
xchg
call
push
shrb
cmp
repnz
or
dec
cs
and
sub
inc
imul
xchg
and
xchg
push
inc
sub
mov
push
cmpsb
leave
imul
arpl
mov
inc
insl
xchg
int3
jle
push
xor
scas
jns
pop
in
xchg
cmc
leave
push
das
and
and
xchg
ret
imul
nop
push
pop
in
push
movsb
std
mov
mov
subb
cmp
movsl
dec
mov
push
loopne
xchg
pop
jbe
dec
divb
pop
insl
mov
popf
dec
out
and
mov
and
push
lret
push
lods
faddl
fiaddl
mov
out
sbb
or
inc
inc
xchg
pusha
mov
jo
fldenv
xor
sbb
sar
push
xor
xchg
aam
pop
insl
jo
fs
jb
sub
mov
popf
xor
mov
jns
stos
sbb
inc
add
call
or
mov
cmp
ficomps
or
jne
pop
dec
roll
imul
mov
cmp
or
sbb
jb,pn
or
pop
push
js
xchg
es
mov
fsubs
enter
and
and
push
mov
cmp
and
jbe
cmpsl
clc
gs
lds
loope
mov
mov
scas
lahf
adc
mov
imul
icebp
cmp
xor
aam
jmp
mov
mov
mov
xchg
cmp
jp
lcall
subl
cmp
pop
test
in
jno
lea
push
mov
fsubs
inc
jb
add
adc
sti
in
jecxz
jmp
clc
out
xchg
push
sbb
popl
mov
pop
sub
int
lret
sub
js
gs
imul
aaa
lea
or
ja
dec
adc
pop
sti
inc
xor
sub
stos
fidivrl
data16
popf
sbb
xor
push
dec
xor
test
and
add
cmpsl
dec
popa
lock
aad
in
pop
adcl
sub
out
pop
bnd
xor
div
stc
nop
arpl
jmp
fstl
fisubrs
je
push
mov
adc
sti
sbb
cmp
dec
inc
mov
push
inc
out
mov
xor
test
mov
push
cwtl
lock
bound
cltd
add
test
push
dec
mov
aad
rorb
or
adc
mov
mov
mov
push
jns
jae
fstps
and
mov
negb
mov
or
shll
dec
pop
mov
mov
pusha
negl
std
rclb
imul
mov
cltd
insl
mov
mov
push
in
aam
mov
cmpl
test
sbb
sbb
sbb
fstpt
sub
sbb
addl
pop
outsb
xlat
stos
mov
pop
int3
mov
xchg
xor
lea
addl
mov
bound
adc
jmp
mov
mov
mov
pop
scas
sub
rcl
cmc
iret
sub
sub
fdivrp
lahf
jmp
or
dec
sub
mov
adc
cmp
xor
push
rcrl
push
push
sub
fmulp
xor
rorl
ds
js
sbb
xchg
fnstcw
lods
xor
rcrl
mov
sbb
ds
lods
loopne
pushf
dec
outsl
cli
cmp
jp
pushf
jl
fwait
push
sbb
insl
add
loopne
mov
add
test
lcall
inc
jp
call
xor
pop
and
dec
ds
bound
xor
mov
fwait
mov
sbb
arpl
mov
jg
repnz
nop
mov
mov
xchg
inc
orl
and
les
sbb
mov
sub
inc
sbb
cmpsb
shll
mov
insl
clc
aaa
jmp
ds
dec
pop
push
adc
adc
dec
cltd
inc
hlt
scas
xor
imul
mov
cs
dec
dec
lock
fistpll
sar
scas
aas
das
mov
pop
insb
out
xchg
dec
ret
fcom
cs
push
cmp
mov
jb
pop
adc
ss
sub
fcompl
ret
and
scas
inc
pusha
mov
lret
dec
xor
fistpl
mov
ss
gs
sub
jne
push
sti
inc
push
add
cwtl
xchg
pop
iret
mov
out
pop
add
or
jle
jge
fisubs
loopne
test
loope
shrb
cmpsb
push
xchg
subb
xor
clc
insl
outsl
fimull
mov
fisubrl
xor
cmp
xchg
and
or
sbb
or
push
cmp
outsb
iret
jnp
lcall
in
outsl
pop
add
add
mov
pop
sbb
test
mov
mov
rcrl
imul
mov
mov
add
mov
les
subb
mov
inc
popa
jg
xchg
inc
adc
inc
scas
adc
push
pop
out
jb
sub
sub
movsl
add
addr16
clc
arpl
jb
dec
fsubrl
rcrb
xchg
push
mov
call
mov
lret
shlb
and
pop
hlt
jae
fs
adc
xor
int
mov
dec
sti
xchg
rol
in
mov
lret
push
mov
nop
push
adc
mov
outsl
and
sub
or
fs
adc
cmpsl
mov
push
add
leave
cmp
dec
lret
pop
fdivrs
popf
mov
pop
rorb
fcoms
mov
out
mov
adc
inc
shlb
xchg
adc
loopne
jnp
inc
push
les
dec
inc
add
add
inc
ds
inc
outsb
dec
or
sub
mov
and
adc
cmp
rorb
cwtl
cmc
jg
push
pop
jle
hlt
and
jns
inc
fwait
loope
ja
and
or
mov
dec
fdivrl
loope
mov
adc
add
pop
movsb
or
adc
jbe
mov
repnz
lods
dec
xchg
and
inc
jecxz
shl
or
loope
pop
pop
jl
dec
pop
and
xchg
mov
dec
sbb
mov
hlt
jge
out
mov
add
mov
xor
xchg
icebp
mov
iret
addb
rcrl
jo
mov
js
cmp
push
xchg
inc
lods
push
or
jle
inc
dec
in
fs
ja
jnp
xchg
arpl
je
imul
sbb
or
shll
sarl
lret
outsl
adc
test
jecxz
movsl
addr16
incb
push
xchg
push
subl
sarl
inc
sub
out
push
dec
sub
sub
cwtl
push
push
and
insl
stos
enter
adc
ja
es
xor
mov
xchg
pusha
add
pop
testb
fs
jbe
push
mov
mov
test
iret
dec
stc
imul
repnz
cmc
dec
jns
mov
pop
fs
inc
in
stos
test
jg
push
cmp
cmp
pop
insl
xor
cs
lcall
sub
cmp
test
cmp
sub
add
mov
pop
lahf
add
push
pop
or
inc
jns
cmp
ds
push
out
test
test
xchg
enter
cwtl
sub
repz
xchg
sbb
out
push
sbb
cmovns
xchg
push
pop
sub
mov
clc
sarb
in
xchg
xchg
dec
inc
cltd
jg
push
and
sbb
add
fsincos
loop
mov
inc
pop
popf
insl
movsl
shrb
andb
mov
stc
aad
lcall
inc
cmp
mov
mov
and
push
cmp
das
mov
xchg
lahf
movsb
xor
sub
shrb
pop
mov
sub
cmp
lods
or
jbe
adc
and
mov
mov
sbb
adc
jmp
ss
dec
jbe
xchg
sub
xor
addl
mov
js
mov
and
fldl
pop
test
jb
insb
or
add
stc
in
dec
inc
mov
mov
jno
add
or
add
add
pusha
loop
call
push
xor
dec
rorb
pop
inc
inc
out
sarl
xchg
repnz
mov
jo
inc
jle
inc
xor
add
mov
mov
addr16
ret
inc
mov
cmpsb
imul
push
daa
clc
sbb
xor
pop
test
subb
je
insb
sub
lods
add
mov
sub
xor
cmp
sbbl
cmp
xor
rolb
jae
iret
sbb
dec
inc
iret
sbb
pop
cmp
lods
test
lcall
cwtl
movsb
and
popa
adc
loop
ret
mov
mov
add
popa
push
jae
inc
in
sti
out
mov
or
xlat
mov
pop
or
je
leave
movsb
or
sub
mov
mov
ror
adc
dec
sahf
xchg
pusha
sub
test
inc
pop
or
cmp
or
int3
cli
aam
cmp
iret
lahf
cmpsl
adc
loopne
test
pop
out
rcll
in
sti
popa
scas
lcall
mov
out
cmc
and
adc
mov
xchg
push
cmp
jle
sub
jg
jns
jp
call
imul
jbe
fstp
pop
xchg
dec
pushw
pop
cwtl
mov
pop
inc
push
inc
mov
xor
test
xor
movsl
mov
aad
imul
fwait
out
in
clc
dec
mov
mov
xor
inc
xchg
loopne
loope
cld
in
add
sbb
lods
dec
pop
dec
mov
push
ljmp
cli
insb
cld
idivb
add
pusha
cmp
insb
push
xchg
ds
lahf
cmp
out
adc
fildll
pop
arpl
cli
das
dec
loope
test
push
xchg
ret
adc
or
les
jnp
pop
push
cmp
ja
lret
inc
inc
mov
add
mov
loope
lret
xor
push
inc
dec
xor
call
or
mov
dec
pop
push
mov
in
je
mov
mov
xor
xchg
inc
adc
dec
orl
sbb
mov
sbb
cmp
test
shlb
daa
pop
mov
inc
dec
sbb
mov
sahf
sub
mov
cmp
jno
in
pop
daa
sbb
or
sbb
xchg
jae
jo
shr
xchg
add
das
pop
pop
adc
jae
inc
pop
andl
sub
sbb
clc
cmp
jg
icebp
sub
testb
nop
or
and
dec
leave
sbb
test
into
push
xchg
scas
mov
addr16
insl
adc
push
aad
cmp
cmp
mov
jl
adc
mov
les
cmc
and
mov
imul
inc
dec
pushf
add
or
inc
xor
mov
arpl
ja
inc
fincstp
jl
inc
mov
sbb
int3
xchg
data16
xor
ss
pop
jl
in
addb
cmc
aad
adc
mov
push
or
sbb
ds
cltd
popf
les
movsl
dec
mov
addb
jmp
aam
pop
fbld
dec
jmp
add
fiaddl
out
and
shll
adc
and
cmpsl
jecxz
adcl
dec
sub
bound
pop
mov
stos
mov
cli
int
leave
pop
lret
dec
mov
lret
jb
mov
jle
loop
inc
xlat
add
pop
sub
cmp
lret
ret
pop
sbb
sub
cld
movsl
xchg
pop
adc
scas
pop
and
dec
fldcw
in
imul
ss
ljmp
negl
and
rorl
popf
out
out
imul
xchg
xlat
or
xor
popf
out
mov
dec
add
push
lea
jmp
and
in
repz
xchg
ret
dec
xchg
and
out
aad
adc
sbb
pop
mov
adc
imul
xchg
inc
inc
or
repnz
fdivs
push
cmp
xor
mov
cli
push
inc
scas
jecxz
xchg
jmp
jnp
cmp
sbb
inc
lock
inc
sbb
pop
in
pop
push
and
test
and
mov
xchg
popa
sti
dec
jo
or
sub
mov
sub
push
xchg
mov
adc
fs
xor
popl
pusha
inc
loope
insb
frstors
sbb
ret
aaa
push
lods
cmc
lret
jbe
mov
in
movb
or
pusha
xor
adc
fmuls
in
inc
mov
sub
xor
mov
in
shlb
cmpsl
or
inc
mov
sub
pop
mov
insb
adc
sbb
cmc
cmp
nop
add
ja
mov
lods
adc
adc
xchg
mov
scas
insl
outsb
cmc
adc
jecxz
insl
mov
inc
pop
popf
cwtl
xlat
mov
inc
jnp
test
jo
fxch
jl
aad
mov
or
and
jg
mov
sub
inc
cmc
xchg
jbe
enter
call
add
adc
scas
loope
mov
mov
loope
mov
or
pop
add
adc
adc
dec
shrb
inc
jge
xor
mov
xchg
push
aad
sub
test
rclb
jbe
scas
dec
mov
xlat
mov
push
cmc
aad
cli
push
mov
mov
and
aas
push
lods
sbb
sub
ljmp
mov
cmp
scas
sub
pop
les
fdivl
xor
lods
enter
in
fimull
sbb
push
inc
shrl
pop
mov
mov
int
push
clc
movsb
aaa
outsl
mov
out
cmp
scas
pop
enter
out
xchg
jle
sahf
and
and
mov
push
std
incl
mov
sub
aaa
data16
xor
and
and
iret
push
push
sbb
sti
js
nop
push
mov
push
jno
shlb
pop
push
mov
fcomps
inc
daa
shll
pop
imul
xor
and
xchg
xchg
sub
mov
scas
icebp
flds
sub
jmp
stos
xlat
insb
sbb
cli
aaa
out
pop
mov
sub
adc
inc
mov
pop
inc
gs
roll
mov
jo
fmull
movsl
lods
jnp
mov
xor
mov
inc
mov
sub
orl
iret
in
lods
jne
lret
mov
pushf
cld
xchg
rclb
xor
xor
push
push
cmp
rcrl
adc
int
icebp
sub
insb
mov
push
enter
cmpsl
stos
and
addr16
adc
mov
xor
sbb
inc
add
add
rcrb
jge
mov
sbb
das
stos
dec
pop
mov
push
incl
daa
mov
pop
pop
sub
xchg
loope
fsubrs
ljmp
out
or
add
imul
push
push
enter
mov
add
jne
in
inc
sahf
out
es
xor
mov
decl
shlb
aad
in
mov
add
push
fincstp
or
sub
ret
sarb
and
sbb
xchg
push
and
jl
add
loopne
inc
addr16
push
int
sub
adc
xor
loop
mov
popa
cmp
pop
stos
push
ret
fildll
dec
cmp
cmp
test
push
arpl
sti
ret
cmp
pop
or
fisttpll
andb
and
dec
rorb
mov
daa
scas
mov
pop
out
data16
adc
cmp
adc
or
lock
mov
pop
mov
inc
outsl
or
scas
dec
loopne
mov
ret
popa
aam
ficoms
and
pop
aas
xchg
call
iret
jmp
fistpl
inc
call
push
xchg
jl
xchg
repnz
movsb
lock
xor
pop
int3
and
cwtl
mov
idivl
js
pop
nop
dec
jae
inc
bound
data16
in
out
gs
cli
jbe
movsb
stc
mov
lods
inc
ret
hlt
inc
sub
push
iret
stos
lcall
cmpsl
dec
mov
mov
push
lret
test
inc
ret
xlat
xor
in
push
mov
ja
xor
gs
sbb
leave
std
sbb
jo
psllw
lret
jg
ret
dec
and
push
or
cs
sub
adc
clc
popa
mov
xchg
adc
jge
pop
outsl
sub
mov
sbb
fwait
push
jl
aam
js
inc
sub
push
push
inc
int
or
rcl
je
xchg
pushf
mov
xor
imul
popa
les
jnp
sub
jbe
jecxz
add
mov
lds
jmp
test
mov
outsb
xchg
pop
inc
xchg
insb
adc
pop
rolb
repz
mov
mov
mov
addr16
mov
xor
xchg
lods
mov
sbb
aam
mov
cmp
fidivrs
xchg
stos
jl
in
pop
stos
in
sub
mov
stos
insb
push
pop
and
in
adc
aad
push
out
sbb
jg
sbb
lret
cmp
mov
sarb
pop
push
test
rclb
jns
sub
les
jno
icebp
addr16
stos
adc
push
enter
shlb
test
push
mov
and
aaa
les
cmp
test
int3
stos
sbb
leave
xor
jnp
or
xchg
jae
repz
xchg
add
nop
push
sub
mov
repz
rep
sub
adc
xor
push
aam
pop
cmp
inc
mov
push
imul
inc
fsubrs
mov
shll
pop
jecxz
and
arpl
test
into
cmpsb
addr16
ret
add
clc
jl
or
fstpt
cmp
mov
add
xor
mov
mov
cmp
lret
arpl
mov
sti
scas
mov
mov
or
aam
xchg
and
lcall
arpl
cmpsl
sbb
xchg
cmp
loopne
mov
insl
das
cmp
adc
sbb
pop
ret
gs
aad
jb
add
cmc
pushf
insl
mov
pop
push
cltd
mov
cwtl
fidivl
pop
pop
jns
cmp
nop
popf
int
push
mov
mov
hlt
add
loop
aaa
jno
mov
xchg
add
inc
jb,pn
sbb
or
negl
mov
pop
xorl
or
push
dec
es
fs
shlb
sbb
mov
scas
cmp
roll
dec
imul
lock
mov
push
ret
adc
dec
scas
pop
dec
shlb
sbb
inc
data16
stos
stos
shlb
sbb
aam
push
pop
stos
mov
mov
nop
repnz
js
or
inc
into
mov
incl
cmc
not
push
jp
jbe
xor
dec
push
cs
and
and
loop
sub
push
into
out
pop
sbb
nop
clc
pop
jl
or
jecxz
fists
sbb
enter
ret
and
mov
fldcw
and
dec
inc
cmp
loopne
jg
adc
push
int3
andb
mov
test
xlat
popf
sub
rcrb
adc
dec
mov
hlt
inc
scas
loope
aam
pop
cli
insb
push
ja
pop
and
push
pushf
dec
shrl
pop
repz
xchg
mov
stos
and
pop
jge
or
orl
cmpsl
andl
jg
push
or
cmp
cmp
dec
loope
xorl
mov
and
stos
mov
dec
pop
cmpsl
pop
lods
mov
mov
pop
dec
inc
push
outsl
mov
leave
adc
sahf
in
arpl
lahf
add
jecxz
pop
out
jbe
mov
stos
inc
stc
je
dec
test
jmp
add
mov
ds
xlat
sbb
es
shll
jo
push
jne
dec
clc
in
stc
cmp
push
inc
push
and
push
dec
add
xor
dec
fisttps
mov
adc
out
xadd
out
outsb
ret
sub
dec
jno
enter
mov
repz
out
pop
sub
xchg
mov
mov
dec
pushf
push
xor
loope
or
jmp
push
in
or
sub
in
push
pop
imul
pop
leave
sbb
into
loopne
adc
mov
lret
aam
xchg
xchg
hlt
xchg
imul
pusha
aam
popa
cmp
push
cmp
lret
sub
dec
adcb
sbb
imul
jnp
add
rorl
push
cmp
push
mov
mov
xlat
mov
loopne
int
inc
cli
cli
inc
cmp
push
gs
mov
into
in
loopne
call
pop
ret
mov
xor
sub
sub
repz
add
daa
jo
sub
pop
int3
loop
mov
adc
test
outsl
test
movsb
test
lock
mov
mov
inc
pop
sub
cmp
jge
mov
imulb
jle
mov
insb
jbe
es
pop
mov
imul
jmp
mov
cmp
jge
stos
jb
cmp
jo
or
or
nop
sbb
xchg
push
pop
pushf
xchg
int3
cs
xchg
push
pusha
xchg
sub
test
loope
adc
das
adc
mov
pop
sub
pop
in
ljmp
mov
pop
andb
mov
bsr
dec
popf
xchg
or
ficomps
ret
repnz
cs
push
ret
xchg
pop
fldenv
pop
push
lods
popa
mov
negl
inc
fildll
cmp
fsts
jge
aam
aad
pop
push
pmulhuw
lret
jne
mov
dec
add
in
jp
insb
iret
xchg
fwait
je
jns
jp
xorl
sub
or
fnstsw
hlt
mov
je
fidivrl
fcomip
mov
adcl
inc
add
sub
lods
mov
push
pop
or
push
shr
push
int3
mov
inc
ret
dec
pop
xor
mov
loop
imul
int
imul
and
pop
fcoms
sbb
xchg
mov
xor
ds
mov
in
xchg
adcb
adc
add
jecxz
push
cli
adc
and
push
pop
sarb
pop
addb
xchg
push
les
pop
fwait
xor
loop
fxch
pop
lahf
sbb
pop
in
ficomps
mov
repnz
sub
mov
jb
xchg
fs
cs
cmp
bound
push
loop
xchg
dec
mov
adc
sbb
mov
xor
push
pop
or
xor
jmp
in
xchg
in
dec
pop
inc
xor
repz
dec
stos
shrl
shl
push
push
sub
jnp
std
cmp
push
inc
ja
push
mov
lret
scas
xor
idivb
inc
leave
movb
movsb
pop
movsl
adcb
inc
pop
sub
pop
ret
lret
xchg
lods
cmpsb
fcompl
push
pop
mov
mov
cmp
jo
jecxz
fistl
mov
pop
je
in
mov
sub
mov
cld
stc
jno
out
in
inc
icebp
sub
sbb
loope
aas
sbb
sub
imul
cwtl
mov
push
lea
and
push
jmp
addr16
mov
push
leave
adc
adc
mov
cmc
cltd
imul
xchg
fsubrs
xchg
xchg
leave
and
lahf
dec
mov
push
daa
jno
inc
es
cld
and
filds
sub
test
add
jp
push
aad
dec
adc
ret
or
loopne
in
pop
fs
fst
sti
into
mov
push
adc
xchg
xchg
jp
xor
inc
ja
and
mov
pusha
mov
inc
popf
in
mov
cwtl
jae
push
int
mov
xchg
dec
rcl
stc
mov
pop
sub
ja
mov
add
pop
xchg
fisttpll
cwtl
or
sub
jae
sbb
fisubl
mov
jnp
mov
jnp
lods
stos
out
pand
sbb
and
inc
sti
mov
xor
jns
loope
sbb
mov
cmpb
mov
sbb
jmp
lret
pop
lods
lods
cli
inc
loope
and
stos
cltd
sub
mov
pop
mov
pop
mov
rcr
jnp
and
test
add
hlt
pop
jge
inc
dec
add
inc
adc
cmp
movzwl
arpl
je
out
jmp
mov
mov
jl
mov
movsl
aam
pop
mov
ret
and
adc
negb
mov
cmpsl
xchg
pop
in
or
push
adc
xchg
sub
dec
pop
lret
pop
add
mov
adc
mov
daa
divl
jno
mov
mov
add
stc
es
rcrb
xchg
push
push
jge
pop
push
push
fdivrl
cmp
xchg
ret
jb
xlat
in
loopne
fcmovnb
addr16
and
xor
iret
fistl
fdivrl
jb
addr16
sub
out
xchg
aaa
xor
push
popa
decl
xlat
test
dec
loope
adc
xchg
xchg
sbb
roll
outsl
sbbb
mov
xor
jg
push
lods
mov
push
add
xor
and
pop
inc
and
pop
dec
dec
aam
or
mov
fistps
inc
inc
xchg
cwtl
imul
or
hlt
pop
jg
mov
mov
mov
or
frstor
inc
xor
adc
add
mov
outsl
sub
dec
insb
insb
stc
mov
push
dec
sub
xor
outsb
imul
pushf
push
inc
adc
mov
in
loopne
jae
daa
inc
in
cmc
ret
dec
testb
add
out
xor
aas
adc
adc
add
aad
mov
and
cmp
fwait
cmp
lcall
dec
andb
lock
mov
scas
push
mov
out
sbb
mov
ret
mov
daa
inc
xchg
mov
pop
lret
or
popf
pusha
mov
ret
imul
das
cmp
mov
adc
xchg
mov
dec
cmpsb
inc
or
or
notl
call
rolb
pop
cmc
scas
add
xor
or
sahf
jl
divb
pusha
xchg
pop
jae
xor
adc
jo
mov
loopne
add
xchg
icebp
leave
pop
adc
jne
mov
adc
lret
lods
stc
adc
sub
fidivrs
sub
mov
push
push
push
insb
sar
mov
fs
or
rcrl
fcoml
dec
imul
mov
pop
insl
lds
mov
sub
inc
fimull
adc
add
mov
sub
les
aas
adc
std
mov
sbb
dec
push
dec
out
adc
aam
mov
adc
push
leave
push
test
outsb
and
std
sahf
cld
sbb
pop
lods
idivb
mov
mov
xchg
ja
mov
sub
int3
mov
add
mov
ljmp
idivb
scas
aas
push
in
xor
sub
jno
jne
xchg
add
sub
dec
daa
bound
aad
imul
nop
mov
xchg
cmp
sub
test
or
push
dec
push
mov
pop
test
mov
pusha
scas
mov
jns
repnz
mov
aaa
arpl
inc
test
inc
in
rcll
xor
sbb
cmp
xor
scas
jg
sbb
test
lods
pop
out
push
scas
and
inc
in
push
jl
dec
xchg
mov
pushf
push
scas
mov
adcb
sbb
lahf
mov
bound
inc
loop
xor
adc
jns
add
in
jne
loopne
or
cmp
call
bound
insb
pop
pop
lock
push
mov
ret
subb
mov
mov
lcall
jno
inc
jecxz
sbb
cld
stc
rcr
loope
mov
stc
nop
pop
xor
lret
jp
push
rorl
jae
lahf
xchg
inc
adcb
push
fwait
rcrb
pop
cmp
scas
clc
cmpsb
and
mov
sarl
add
xor
notb
mov
movsl
test
fdivrl
mov
lret
fdivrl
insl
mov
push
or
stos
aam
inc
roll
repnz
lods
mov
cmp
movsb
adc
fildll
ljmp
cmp
push
roll
pusha
pop
iret
push
push
icebp
rolb
cltd
sti
aam
sub
sbb
mov
das
mov
mov
fstpt
push
rcrl
push
loope
sbb
out
sahf
js
subb
mov
jns
test
xlat
adc
repz
xlat
jne
test
pop
sub
sarl
mov
das
imull
int3
or
mov
fldcw
jg
es
inc
dec
sbb
pushf
stos
mov
push
mov
int3
xchg
and
push
scas
mov
xchg
sbb
jno
ds
sbb
mov
push
loope
jge
xor
and
loopne
icebp
in
xor
adc
movsl
ss
popf
fwait
mov
cs
loopne
outsb
arpl
xchg
push
pop
adc
mov
or
test
or
fucom
psubq
les
push
pop
lods
cltd
test
mov
loope,pn
stc
add
fidivrl
xlat
icebp
out
pop
mov
fisubrs
or
jmp
movsl
sbb
in
sub
xchg
ss
push
mov
mov
pop
aaa
mov
int
pop
test
hlt
push
shrb
ljmp
push
loope
mov
addr16
sub
push
imul
scas
xor
xchg
shlb
jge
sbb
mov
pop
xchg
cmp
push
stos
les
inc
sbb
adc
leave
or
addr16
mov
jno
in
ret
jno
mov
sub
mov
dec
mov
xchg
aam
mov
and
push
data16
sbb
or
pop
fs
mov
out
mov
sbb
and
cli
sarl
push
clc
mov
in
out
mov
call
jmp
loopne
clc
add
cli
jne
cmp
icebp
xchg
and
or
adc
movsl
idivl
pop
out
arpl
lds
inc
ret
pop
cwtl
fdivl
pop
jns
lret
outsb
mov
inc
ss
sub
insb
gs
loopne
andb
xchg
mov
adc
nop
jl,pt
shrl
mov
add
into
adc
dec
push
push
out
pop
arpl
lds
mov
push
pop
dec
mov
mov
mov
popa
pop
or
movsb
or
fsub
enter
fdivrl
imul
out
out
lock
adcb
stc
popf
pop
mov
out
adc
push
and
inc
ja
add
or
or
out
or
lret
push
cmpsl
in
and
add
mov
sub
cmc
mov
and
sti
jmp
lock
mov
lock
push
aas
cmp
add
inc
aam
cmpsb
es
repnz
scas
scas
out
pop
dec
push
xchg
stos
ljmp
push
pusha
arpl
shlb
inc
pop
add
fnsave
and
pop
adc
lods
or
jl
mov
xlat
pop
xchg
dec
or
sti
push
xchg
jae
nopl
push
push
negl
ret
bound
ds
push
repnz
ficoml
sub
mov
mov
daa
push
mov
cmp
add
add
mov
xor
inc
js
rcrb
pop
pop
jl
xchg
sbb
fists
movsb
mov
mov
mov
shrl
cmp
add
movsl
pop
pop
jne
pop
and
inc
adc
or
outsl
arpl
mov
push
sub
jo
jnp
dec
adc
xor
lahf
imul
jb
add
ret
fxch
adc
cmp
lcall
movsb
fdivr
mov
ljmp
pop
iret
fimull
sub
sub
aaa
mov
frstor
dec
scas
mov
adc
pop
shlb
mov
repz
push
adc
xor
popa
enter
xor
push
mov
fwait
sbb
cs
stos
imul
icebp
pop
out
dec
aam
dec
stos
insl
add
insb
xor
in
aad
repnz
das
cli
pop
fcos
jle
push
cmp
xchg
lfs
daa
in
lods
sahf
movsb
xor
and
mov
add
in
xchg
mov
sbb
mov
jmp
mov
xchg
jne
jns
jmp
lock
dec
je
pop
and
add
adc
pop
mov
fistpll
loopne
dec
iret
outsl
clc
cmp
rolb
leave
rcr
dec
repnz
in
mov
mov
add
cli
xor
push
xchg
leave
std
test
cmc
xchg
fsubrl
jo
sbb
aas
mov
xor
mov
push
fcmove
mov
xchg
cwtl
mov
jns
xlat
push
jae
lea
popf
mov
sub
ret
mov
mov
sbb
pusha
mov
imul
ret
jae
push
repnz
sbb
popf
test
orb
daa
mov
mov
inc
mov
out
int3
mov
sbb
lahf
mov
dec
add
push
cmp
jecxz
lea
cmp
add
xor
push
dec
dec
inc
cmp
push
xor
and
jb
sbb
xor
in
movsl
dec
in
movsl
stc
xchg
and
call
enter
repnz
inc
pop
outsb
outsl
mov
sub
imul
push
lds
sub
mov
push
xchg
popa
lock
sub
lods
mov
push
insb
dec
aam
xchg
inc
mov
lea
cltd
scas
sar
dec
stos
insl
inc
in
out
out
mov
movsl
adc
repnz
or
inc
mov
mov
xchg
enter
adc
or
hlt
fs
lret
mov
xorb
xchg
sub
cltd
and
pop
xor
mov
in
je
xchg
xchg
stos
cwtl
xchg
jg
lret
mov
pop
fldcw
out
scas
inc
test
incl
mov
jp
lcall
sbb
lock
push
inc
test
sub
jno
push
inc
ljmp
push
es
dec
inc
aaa
adc
idivb
push
pop
movl
and
les
mov
out
cli
jmp
daa
xor
pop
cwtl
xor
add
xchg
cmp
xor
ret
mov
icebp
jmp
pop
sub
sbb
ss
cmpsl
jbe
sbb
mov
jp
out
or
mov
add
lcall
sbb
cs
sub
out
shl
ja
lods
dec
ds
cmc
scas
pop
mov
push
mov
outsb
andl
xchg
negb
popa
or
sub
inc
outsl
mov
stos
lea
gs
adc
movsb
sar
mov
lods
adc
cmp
xchg
push
cmpsl
add
sti
loope
dec
dec
cmpsb
push
scas
cmp
sti
xchg
push
jae
adc
dec
loop
shlb
sahf
inc
mov
pop
inc
mov
movsl
in
jge
xchg
mov
mov
sti
inc
lods
sbb
aam
std
or
js
rol
push
jae
xchg
popf
clc
push
pushf
xor
mov
push
mov
pop
sub
daa
icebp
and
sbb
push
ja
adc
or
xchg
push
mov
dec
dec
lods
sub
xor
cmpl
inc
mov
ds
or
xor
sbbl
orb
xchg
inc
out
jno
scas
testb
lock
mov
es
gs
fstps
xchg
sub
popf
xor
push
stos
push
stos
mov
andb
ljmp
jns
fs
xchg
sbbl
or
lea
jp
gs
adc
aam
mulb
ljmp
fadds
xor
scas
fcmovnb
push
frstor
int
enter
xchg
das
lock
dec
out
xor
pop
and
shrl
ss
loope
dec
fsubl
mov
mov
cmp
lret
rcll
cmc
addb
mov
xor
pop
and
int3
loopne
lret
lahf
push
or
adc
fcoms
ret
push
call
pop
sti
js
iret
xchg
loop
xchg
mov
xchg
mov
repnz
adc
pushf
rorl
lea
out
mov
cmpsb
sub
jp
aas
insb
adcl
bound
push
push
sbb
imul
xor
push
push
cmp
fwait
scas
ret
xor
or
pop
pop
xchg
inc
out
imul
in
imul
ret
sahf
outsl
xchg
addr16
sti
mov
mov
ss
mov
xor
mov
out
loop
push
cli
divb
push
or
cmp
scas
sbb
pusha
jne
negb
and
ret
test
xor
outsb
mov
mov
cmpsl
add
sbb
sub
cltd
rorl
adc
into
jbe
pop
popf
aaa
ret
xchg
mov
loop
mov
or
pop
sahf
inc
ret
lds
shrl
xor
xchg
sub
movsl
call
fcmovu
fmuls
popf
leave
cmp
pop
cltd
fs
shrl
insb
lods
mov
mov
push
inc
push
jnp
jno
sub
std
mov
jb
lret
mov
cmp
lds
aad
jecxz
aaa
leave
addr16
cmp
push
mov
andl
mov
mov
mov
cmp
mov
mov
daa
les
mov
add
push
sub
test
cmpsl
outsl
sbb
push
xchg
addr16
lods
adc
enter
mov
jbe
pop
push
ljmp
adc
jne
iret
stos
enter
pop
add
in
dec
dec
add
repnz
inc
adc
and
cmp
lock
insb
pop
sti
loopne
cmp
testb
insb
sub
mov
imul
pop
xchg
in
pop
fwait
int
cmp
dec
inc
andb
push
fidivs
inc
shlb
lret
pop
ss
sub
mul
push
push
inc
or
push
mov
and
add
sbb
pop
push
mov
dec
pop
ficoms
test
call
int3
cmp
dec
mov
push
or
mov
inc
fidivrs
or
jl
icebp
arpl
push
sbb
jno
fistpl
or
lcall
cmp
dec
sbb
je
adc
sbb
out
sub
sti
enter
clc
cmp
push
mov
and
or
jb
inc
das
bound
add
add
mov
outsl
scas
ficompl
lds
imul
cmpb
loopne
cmpsl
test
push
scas
pop
dec
jo
xor
push
bnd
push
mov
jle
sbb
push
push
repnz
rcrl
push
add
movsb
cmpl
cmp
shll
in
mov
or
inc
inc
cmpsl
cmp
mov
cmp
fdivrs
fsubrs
loope
out
cmc
and
adc
scas
xchg
stc
sahf
movsb
shl
adcl
add
mov
push
push
xchg
add
xor
ljmp
dec
ret
pop
outsl
shlb
testb
sub
add
and
mov
mov
pop
and
sarb
dec
push
aam
inc
jbe
test
daa
daa
enter
das
sub
int
mov
cmp
imul
cmp
pop
xchg
and
cmp
add
sbb
jecxz
push
sbb
sub
addb
decl
sbb
inc
or
jns
nop
fstp
sbb
push
outsl
scas
xor
jne
in
bound
scas
jle
int
adc
outsl
pop
or
jle
push
lahf
repnz
cmc
dec
push
not
mov
cmp
jb
mov
gs
jge
in
lds
dec
lahf
xchg
jle
add
mov
inc
mov
ret
ljmp
imul
cmc
mov
leave
or
dec
lahf
mov
enter
dec
ficoml
sbb
scas
lock
popa
xor
fcoml
push
sbb
push
fs
pop
inc
rcrb
inc
ret
sbb
inc
ret
movb
lods
scas
dec
dec
nop
pop
enter
pop
bound
or
ljmp
loopne
adc
fistpll
test
andl
mov
ja
shlb
and
int3
jp
mov
ss
push
cs
sbb
loope
adc
adc
xchg
hlt
adc
nop
dec
lret
mov
xchg
repnz
sub
cmp
mov
add
xor
xchg
insl
sbb
inc
dec
stos
push
cli
inc
popf
and
mov
idivb
lods
ss
adc
fabs
ss
repz
dec
xor
jb
out
push
insb
push
pop
sbb
adc
or
sub
mov
outsb
clc
mov
xlat
inc
test
mov
cli
ds
imul
data16
dec
repnz
add
fistl
xchg
jo
rclb
jae
enter
cli
jnp
sbb
out
shrb
jecxz
mov
lods
repz
sub
xchg
sbb
cmp
adc
mov
adc
mov
cmc
in
outsb
push
cmp
cmp
lods
shrb
lcall
dec
push
xor
in
pop
adc
fistpl
movsb
cmc
aaa
inc
sbb
inc
dec
and
insb
mov
packsswb
push
xchg
scas
jge
xchg
pop
loopne
iret
out
xchg
pop
out
hlt
xstore-rng
cmpsl
sbbl
pop
add
cmp
lea
mov
mov
js
test
pushf
clc
lods
clc
cmc
lods
mov
add
push
cmpsl
sub
push
mov
xor
roll
jne
jne
mov
enter
lds
cld
and
out
jo
dec
cmp
sub
cltd
test
pop
cwtl
and
call
pusha
sahf
and
gs
fstp
xchg
push
cwtl
inc
mov
lods
sub
or
mov
lea
or
inc
jmp
dec
xlat
rcll
push
or
jmp
lods
jmp
iret
push
lea
ljmp
push
inc
sbb
sbb
pusha
cmp
lds
cld
sbb
pop
outsb
pop
jo
cmp
pusha
int3
mov
or
and
adc
test
push
mov
imul
js
into
out
stos
cmpsb
push
repz
mov
nopl
mov
lahf
cmp
sbb
mov
fstps
or
cmpsl
out
mov
mov
sbb
push
or
loop
test
cmp
lcall
rcrl
jbe
icebp
sahf
lods
inc
shlb
das
cmp
sti
pop
add
int3
in
nop
sbb
fdivrl
pop
xchg
mov
jnp
sub
jp
pusha
mov
leave
mov
cmp
loope
in
lea
sbb
mov
bnd
mov
popf
jmp
sbb
movsb
add
out
dec
les
movsb
mov
dec
fisttps
out
mov
mov
pop
xchg
fnsave
scas
sti
fimuls
cmp
hlt
aam
pop
push
outsb
mov
out
jae
push
pop
call
mov
das
mov
sahf
add
cmovbe
mov
nop
in
xchg
xchg
call
fwait
push
ss
xor
jnp
ret
pop
sbb
out
fstp
lea
add
imul
push
sbb
orl
xchg
clc
daa
gs
arpl
pop
cli
pop
sbb
mov
xchg
jmp
popa
mov
and
aas
xchg
sub
mov
jmp
fisubl
jp
mov
pop
mov
mov
mov
dec
int3
push
leave
stos
mov
fs
mov
xlat
mov
enter
add
push
push
fsubl
call
icebp
popa
jae
int
testl
outsl
enter
movsb
adc
cmp
xor
xchg
xor
ret
mov
cmp
jmp
mov
mov
mov
xchg
mov
sub
mov
stc
aas
loopne
nop
add
pop
adc
sbb
xchg
cld
shrl
xor
sub
sbb
out
dec
and
push
xchg
adc
sub
divb
inc
sub
inc
notl
hlt
mov
mov
jmp
jge
hlt
dec
adc
es
popa
mov
sub
dec
pop
jnp
sahf
push
xor
add
into
stos
cwtl
mov
xchg
xor
jp
push
xor
out
cmp
jge
movsb
cmpl
or
out
mov
inc
jb
rcr
in
cmp
sub
sbb
imul
jp
cmpsl
jle
out
jg
push
fists
cmp
xchg
mov
lock
das
movsl
enter
adc
cmpsl
test
sbbb
int
pop
and
imul
mov
mov
fdivl
subb
jo
popa
push
je
clc
ja
pop
xor
lahf
xchg
mov
pop
les
hlt
fisubrs
hlt
sahf
pusha
pop
pop
push
mov
ljmp
movsb
mov
out
cli
push
es
cltd
stc
mov
sub
jle
sbb
aas
lods
in
jnp
jnp
clc
scas
pop
mov
iret
std
out
lea
xchg
aaa
jecxz
insb
lahf
or
jg
clc
dec
aas
scas
push
pushf
ret
add
adcl
xor
dec
shrb
adc
inc
sub
mov
les
or
fsubr
lock
and
push
and
or
cs
mov
jmp
xor
hlt
out
push
sbb
mov
loopne
push
ret
adc
push
lret
lea
jne
jg
ds
sub
popf
cmpsb
mov
xor
ds
or
shll
rcrl
jp
jp
ret
pop
xor
mov
mov
cli
call
inc
jno
adc
fs
insb
push
sbb
fcoml
ret
sti
pop
mov
rcr
adcb
fsubr
pop
sub
add
xlat
test
sbb
sti
mov
sub
sbb
dec
xchg
cs
inc
shl
lahf
imul
and
arpl
mov
sub
into
mov
int3
and
mov
inc
loopne
jno
and
inc
int
cmp
and
fs
incl
das
notb
xchg
lahf
loopne,pn
jb
pop
push
mov
fwait
mov
mov
adc
xchg
push
push
xchg
xor
add
xchg
pop
int
and
loop
add
dec
or
repz
mov
iret
das
negl
gs
pop
loopne
inc
movsb
arpl
pusha
pop
data16
pop
pop
add
mov
pop
daa
inc
push
int
sahf
pop
shrl
inc
fiadds
iret
sti
rcll
iret
push
cmp
sbb
loope
add
icebp
lahf
cmp
lods
add
mov
xorb
push
jb
imul
xchg
mov
sahf
sub
pop
cmc
sbb
xor
and
cmc
hlt
sbb
and
shll
mov
adc
lahf
in
and
scas
add
or
out
inc
pop
push
aad
std
test
pop
movsb
push
js
nop
xor
push
adc
pusha
pop
ss
or
rcll
call
mov
jg
enter
xchg
sbbb
lret
inc
mov
xchg
in
mov
subl
mov
out
adc
ja
mov
sub
xor
adc
dec
out
dec
cld
xchg
jbe
ret
loop
jp
outsl
es
test
popa
pop
sub
xchg
inc
sub
daa
jle
inc
lahf
mov
out
imul
or
adc
mov
jle
inc
cltd
movsl
push
dec
lea
lret
out
mov
pop
mov
mov
fdivrp
pop
sbb
loop
les
mov
inc
adc
mov
in
cmp
enter
aam
push
mov
pop
rcrb
adc
call
sarb
xchg
shlb
and
mov
insl
loopne
mov
mov
mov
andl
pusha
std
mov
or
push
je
aas
jl
or
mov
mov
jns
lahf
icebp
jl
aaa
mov
sti
mov
sub
add
out
fildl
cmc
xchg
lahf
push
mov
fwait
popf
cmp
ret
jmp
jmp
mov
sbb
or
loope
mov
or
mov
sub
dec
cmpsb
jecxz
fnstsw
pop
pop
and
or
out
imul
pop
imul
outsl
icebp
insb
sarl
repnz
jge
mov
inc
aaa
std
dec
in
outsl
or
mov
push
fs
adc
dec
inc
stc
scas
arpl
cmp
pop
jne
test
dec
pop
sar
mov
add
fadds
test
sbb
subl
mov
testl
in
mov
mov
jge
jnp
jmp
dec
in
fidivrl
pop
pop
imul
sbb
js
negl
insb
mov
pop
push
xchg
lods
xchg
pushf
dec
mov
jmp
mov
mov
cmpb
popf
orl
sarb
push
in
ss
stos
mov
inc
dec
push
in
mov
fbstp
dec
pop
ret
jl
push
cmp
and
add
les
insb
stc
push
adc
dec
loopne
sub
pusha
push
andb
mov
rcrb
xlat
data16
inc
mov
add
mov
adc
subl
jno
mov
jmp
xchg
jecxz
out
dec
mov
orb
and
in
pop
nop
test
inc
scas
filds
mov
sti
aas
xchg
or
jns
mov
sub
in
subl
aas
xchg
mov
xlat
push
lock
and
mov
pop
cmp
sahf
mov
pop
lahf
or
push
mov
pop
shr
pop
cwtl
xchg
into
sti
test
pop
shll
and
jg
loopne
sub
jle
pop
leave
adc
aam
ret
lret
jl
cmp
sahf
adcl
pop
and
push
xor
push
xor
mov
adc
cmovo
stos
xchg
addr16
xchg
xchg
mov
push
push
inc
push
stos
jns
xchg
sub
insb
dec
out
cmp
jb
cs
jl
jns
push
adc
xchg
rcr
sub
icebp
lock
lea
or
mov
data16
jmp
rolb
xor
jp
fwait
in
xchg
lea
mov
inc
fildl
jmp
xchg
inc
xor
stos
dec
lret
sbb
iret
xchg
xor
pop
inc
lret
jmp
sbb
pop
mov
and
xor
dec
or
out
rclb
shrl
aas
shll
call
pushf
loopne
loop
jmp
add
push
mov
lret
test
jno
xchg
enter
xchg
jae
les
sgdtl
mov
jecxz
pop
pushf
adc
mov
fistps
and
cmp
and
mov
xchg
sti
loop
arpl
fdiv
mov
cltd
add
xchg
jle
sbb
adc
pusha
mov
cmp
cmp
test
int3
incl
cmc
lds
push
je
sbb
xchg
sub
dec
xor
popf
sahf
sbb
mov
cmp
adc
xchg
movsl
jge
stos
ret
rolb
into
iret
sbb
adc
pop
and
mov
fldenv
mov
lds
add
pop
in
mov
xchg
mov
int
cld
xor
xchg
dec
loope
mov
sbb
hlt
push
enter
push
cmpsl
data16
add
or
sub
jns
mov
mov
js
pusha
xor
inc
push
aad
mov
push
push
push
mov
add
lock
imul
and
stos
fsubp
aam
dec
xor
sbb
incb
sbb
test
sbb
jns
push
lret
aaa
repnz
or
movb
xor
jg
mov
mov
imul
cmp
in
ja
adc
and
push
push
lahf
inc
xor
xchg
inc
fcompl
fsubl
enter
sbb
cmp
jne
push
or
and
sub
xor
inc
loopne
add
xor
dec
loopne
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
