outsl
jg
add
in
add
sub
cmp
add
add
imul
fistpll
sarl
roll
rolb
pop
out
or
sub
add
out
imul
push
mov
sbb
add
into
mov
add
dec
add
mov
mov
inc
lret
fistpll
cmp
imul
mov
add
dec
mov
cmp
fcmovnu
mov
adc
push
movb
sub
ds
mov
mov
mov
xor
mov
mov
test
jbe
pop
mov
dec
imul
das
shll
adc
fcmovu
jle
and
push
es
cmp
sub
adc
add
mov
jne
insl
outsb
add
nop
or
add
fistpll
std
sub
sub
add
fimuls
sub
jae
add
mov
sbb
add
adc
loop
add
cmp
imul
frstor
mov
je
insl
sbb
add
shlb
pop
sti
outsb
jae
push
shl
pop
xchg
testb
cmp
in
pop
mov
lret
into
push
mov
sti
out
imul
popa
ret
mov
mov
rcr
sbb
insl
rcrb
mov
mov
mov
das
xchg
dec
sarl
mov
mov
clc
sbb
cmp
mov
ret
pop
mov
leave
sbb
or
mov
lods
fstpl
push
cmp
adc
or
mov
mov
outsb
out
insl
rcr
or
or
test
fildl
cld
ja
mov
or
adc
into
mov
add
or
lahf
roll
add
adc
inc
mov
add
test
aas
cmp
or
rorb
pop
xor
ffree
adc
ljmp
in
insl
sbb
shl
adc
pop
pop
mov
daa
shlb
add
add
adc
pop
icebp
push
add
sbb
add
mov
fmul
aaa
adc
mov
add
fiadds
mov
push
imul
insl
insl
pop
sahf
popa
pop
jno
jge
push
pop
je
add
or
ret
inc
mov
and
cld
mov
test
and
pop
push
dec
in
cmp
ljmp
imul
add
ja
jecxz
sbb
and
pop
push
jle
mov
rclb
sub
mov
or
iret
shlb
inc
sbb
xor
pop
jbe
inc
negb
cs
sub
shr
mov
ss
xor
adc
or
sbb
add
imul
ret
pop
mov
out
mov
lock
mov
cltd
popa
pop
push
add
dec
lods
fnsave
or
pop
mov
sub
lret
rclb
or
jmp
movsl
cli
or
sbb
and
es
adc
pop
sti
pop
mov
or
push
cmp
test
clc
or
fcomps
movsl
push
mov
insl
movsb
and
mov
push
sarl
lea
cmp
push
adc
xor
xor
and
iret
adc
out
test
negl
repnz
movzbl
or
insb
cmp
or
outsl
push
cmp
fildl
push
or
and
dec
popf
sbb
int
xor
clc
gs
popa
popa
add
and
nop
insl
fucomip
ret
adc
mov
sbb
sub
pop
inc
mov
jmp
add
push
sbb
pop
sti
mov
pop
sbb
pop
arpl
into
mov
lret
mov
sbb
lret
pop
sub
push
test
test
cmp
mov
arpl
xor
add
mov
lock
add
call
push
mulb
sbb
or
push
ja
xorl
pop
mov
dec
enter
or
arpl
push
imul
andb
orl
sbb
pop
push
and
add
mov
fwait
or
pop
cmp
dec
pop
lcall
mov
mov
mov
push
dec
popa
push
sbb
push
int3
pop
data16
jmp
mov
rclb
sbb
lcall
add
xor
jne
out
pop
jle
sbb
fs
add
push
add
ss
sbb
adc
pop
or
cmp
cmpsb
aaa
adc
loope
mov
notb
shll
lret
int3
dec
mov
rorl
jmp
in
cmp
rcrb
bound
call
jae
imul
icebp
cmp
dec
sbb
xor
icebp
push
inc
cmp
lcall
jge
sbb
add
adc
cmc
fisubl
leave
dec
outsb
pop
cmp
jnp
or
push
mov
or
cltd
push
sbb
mov
xchg
sub
push
jbe
xchg
xchg
call
test
repz
clc
pop
and
dec
mov
push
rclb
xchg
test
sbb
dec
mul
bound
movsb
xchg
fmul
inc
or
rol
add
pop
mov
xor
je
int3
in
and
push
adc
cmc
aad
pop
shlb
mov
xchg
int
pop
rclb
jae
shl
mov
lret
adc
and
mov
stc
repz
push
push
ljmp
pop
and
mov
clc
or
or
jnp
sub
jl
stos
loop
jnp
sbb
subl
xor
scas
inc
xchg
paddw
lcall
xchg
out
mov
je
inc
imul
xchg
xchg
aad
leave
mov
cmp
sbb
mov
jb
icebp
add
stos
adc
jecxz
push
ljmp
sbb
and
sub
pop
stc
lsl
pop
sbb
leave
sbb
leave
mov
pop
cmp
jnp
pop
mov
flds
jp
xchg
add
jo
sbb
insl
insl
sbb
sbb
add
loopne
mov
or
pop
ret
in
mov
adc
divl
cwtl
mov
mov
and
or
push
jo
sbb
push
push
in
inc
imul
push
inc
insl
fistl
iret
hlt
mov
or
or
lret
mov
add
call
push
inc
iret
ljmp
push
xor
shll
sub
les
sahf
xchg
adc
jns
xor
push
inc
mov
mov
fldl
out
adc
lcall
inc
xchg
mov
fmuls
cmp
xor
inc
mov
push
jmp
sbb
stos
jp
pop
pop
bound
sub
sbb
ror
mov
cltd
popf
hlt
call
sbb
shll
pop
dec
mov
sbb
push
xor
jg
hlt
pop
cli
adc
rcrb
sub
out
push
inc
xchg
out
leave
mov
dec
push
enter
and
jbe
sbb
outsl
or
fwait
popa
int
inc
loopne
aad
inc
hlt
add
cmpsl
adc
test
xchg
je
add
roll
insb
cmp
inc
and
mov
sbb
loopne
sarb
je
cmp
pop
or
cmp
pop
jecxz
sbb
iret
movsb
popf
adcl
fiaddl
or
pop
add
stos
rorb
adc
inc
mov
ljmp
jecxz
leave
sbb
mov
lock
shrl
ret
push
shl
push
aad
jb
rclb
repnz
repnz
stc
dec
hlt
stos
pop
sbb
sbb
outsl
fucom
rcrl
sbb
jp
mov
jp
lock
add
outsb
fldt
add
or
and
sbb
push
ror
push
mov
mov
adc
xchg
jnp
or
shll
ret
jmp
dec
or
mov
js
mov
insl
or
bnd
sub
stc
ss
into
mov
ror
sbb
imul
inc
jo
mov
fstpt
lret
xor
icebp
mov
cmp
xor
rcrb
jae
ss
adc
insl
out
in
popf
clc
or
mov
mov
loope
sbb
or
mov
pop
adc
js
jb
mov
pop
aad
sahf
jb
loopne
out
sbb
aad
rorb
in
jge
clc
jmp
leave
rcll
xchg
mov
jecxz
mov
stos
icebp
cmp
shrb
adc
stc
add
mov
push
mov
enter
dec
and
sbb
adc
adc
fcmove
inc
mov
and
pop
std
fadds
lock
sbb
or
mov
mov
adc
lods
add
loope
aad
rclb
cmp
cwtl
jl
mov
cs
test
daa
sub
pop
sbb
imul
fsubrs
jns
add
mov
inc
xchg
mov
or
rcl
push
add
adc
add
mov
add
rorb
or
pop
enter
mov
scas
and
mov
aaa
xor
popa
mov
decb
xor
paddb
push
test
pop
sar
xor
pop
cmp
inc
loopne
add
mov
fisttpll
mov
push
add
pop
pop
inc
mov
add
sbb
cmp
loop
or
mov
scas
out
sbb
add
mov
test
rcl
addl
xor
jns
notb
xchg
or
outsb
and
mov
mov
in
push
movsb
scas
add
sub
inc
or
clc
loop
pop
push
pop
mov
or
adc
push
cltd
sbb
adc
cwtl
jne
push
pop
imul
pop
add
adc
xchg
sti
push
popa
mov
hlt
jnp
mov
mov
jno
dec
in
or
mov
adc
movsl
sbb
pop
sbb
jg
nop
repnz
mov
inc
mov
cmp
rol
xor
sub
icebp
ret
or
loopne
mov
loop
and
sbb
and
mov
push
pop
add
pop
hlt
push
jecxz
data16
call
in
shr
imul
aad
stos
lret
ja
mov
add
jo
stos
inc
dec
sub
xor
repz
shll
cmp
pop
push
scas
jnp
add
rcrb
mov
or
sbb
rclb
pop
fwait
sub
mov
mov
aam
mov
push
jmp
fsubrs
js
adc
in
mov
push
jmp
mov
les
dec
shlb
sbb
lret
enter
popf
xchg
sub
xchg
pop
mov
popa
sub
aam
mov
add
test
loop
aad
loopne
xor
push
scas
test
sbb
roll
push
push
mov
stc
ret
push
xor
insl
add
pushf
rcrb
add
dec
pop
push
xlat
movsl
jle
pop
mov
mov
jb
lcall
fidivrl
lock
scas
inc
jae
insl
jb
mov
lock
int
mov
cmc
loopne
or
adc
iret
adc
movsb
ss
jg
mov
xchg
ds
aaa
mov
pushf
or
loop
rcrl
mov
push
repnz
mov
stos
lock
movb
adc
sti
in
clc
sbb
mov
mov
mov
insl
les
sbb
dec
cwtl
push
sbb
xchg
pop
mov
xor
push
out
into
xchg
out
int
xor
aad
ss
test
into
cmc
mulb
mov
dec
mov
call
jnp
std
out
xchg
fcmovb
push
push
push
testl
inc
testl
shlb
insb
jmp
adc
pop
xchg
enter
cwtl
in
mov
stos
andl
add
jge
push
add
mov
inc
jmp
xor
lret
ljmp
lahf
xchg
pop
jmp
ljmp
xchg
scas
invd
xor
push
cmp
imul
scas
xchg
stc
sbb
and
js
mov
push
mov
shrl
scas
addl
sub
popa
push
mov
iret
inc
popa
push
sbb
test
loope
scas
outsb
dec
push
push
icebp
inc
xor
jns
sbb
mov
add
inc
mov
or
inc
and
rorl
out
adc
andl
stos
xchg
andb
ss
push
and
push
push
mov
inc
imul
in
fs
and
rcl
dec
sbb
lods
add
in
ret
cmp
xchg
cmp
mov
sbb
mov
test
rcl
js
xor
inc
mov
cmpsb
fs
icebp
test
xor
push
imul
dec
int
iret
sub
push
addl
inc
mov
repz
or
cmpsb
negb
add
mov
lret
adc
xchg
in
call
ret
and
aam
push
sub
and
arpl
pop
mov
mov
adc
ret
jne
in
shrb
bound
lds
lcall
pop
jb
jo
sbb
addr16
roll
push
add
loope
arpl
xor
in
loope
push
inc
call
imul
enter
loopne
jno
sub
shll
je
sub
fs
sbb
add
mov
sbb
js
adc
test
ret
loope
or
xchg
or
xor
shll
ret
push
mov
testb
sbb
cmp
leave
andb
fs
jo
leave
sbb
sbb
cmp
addb
mov
add
xchg
mov
shrl
inc
sahf
hlt
enter
aaa
push
hlt
cmp
add
pop
inc
rorb
out
add
call
and
jno
int
mov
mov
test
xchg
pushf
mov
mov
or
add
sbb
or
dec
push
cmp
outsb
add
jae
sbb
mov
push
pushf
inc
mov
sbb
nop
ds
scas
xor
push
push
push
sti
cli
stos
stos
pop
mov
mov
ljmp
stos
adc
add
or
ja
daa
lret
mov
test
das
sbb
jge
inc
lods
mov
jmp
sub
inc
adc
mov
push
mov
enter
mov
enter
pop
fwait
nop
jmp
or
divl
psubusw
lods
pop
push
es
out
pop
mov
mov
shl
sti
imul
fs
cwtl
pop
int3
lret
xchg
xor
lret
movsb
or
lock
int
mov
imul
adc
or
das
std
or
sub
cmc
aad
pop
fs
cmc
mov
les
pop
xor
xor
add
add
iret
enter
cmp
dec
enter
mov
and
pop
cmp
inc
sub
cmp
mov
cmp
cwtl
stos
mov
das
mov
sahf
roll
fmull
mov
mov
xor
leave
test
enter
cmpsb
mov
push
insb
scas
jo
xor
sub
stos
sub
xor
lcall
cmp
rdmsr
sub
stos
lods
xor
rcrb
fistpl
int3
xor
or
inc
enter
icebp
or
in
popa
addb
mov
imul
add
jmp
add
sbb
adc
or
aam
sbb
sbb
int3
adc
adc
pop
cmpsb
cmp
cmp
pop
cmp
jg
and
sbb
jp
iret
rclb
mov
or
or
jno
add
dec
pop
lock
xchg
mov
xor
loope
lock
push
sbb
cltd
push
push
push
push
testb
jo
mov
xor
mov
cmp
and
mov
shrb
notb
cmp
jae
pushf
les
or
jle
aad
adc
ret
mov
and
and
popa
ret
inc
jmp
jecxz
cmp
adc
enter
and
outsb
call
push
sbb
daa
jb
mov
mov
mov
cltd
cmp
mov
mov
cmpsb
xor
mov
and
mov
icebp
dec
cmpsl
insl
and
adc
mov
rcl
add
cmp
cmp
cmp
mov
or
or
sub
dec
or
or
imul
jle
pop
popa
loopne
inc
movsl
dec
sbb
sub
adc
icebp
or
add
sbb
push
pop
jae
sbbl
lock
sbb
test
adc
push
mov
fsubrl
sbbl
or
out
push
icebp
loope
pusha
clc
or
adc
and
mov
and
popa
leave
repnz
xor
sbb
xor
or
popa
xor
leave
aaa
add
dec
push
mov
xor
inc
and
mov
mov
loopne
push
dec
rolb
sbb
loopne
sbb
push
shrb
popa
sbb
mov
or
in
xor
push
js
je
movsl
sub
sbb
and
sar
out
ret
pusha
sub
vrcpss
push
cli
dec
pop
mov
stc
push
imul
add
jo
call
cmp
push
add
dec
lret
sbb
pop
jp
mov
adc
pop
lret
add
xor
xor
aad
addb
insl
shrl
test
sub
and
pop
mov
sbb
sub
jns
dec
mov
stc
jne
incb
fstps
mov
sub
cmp
mov
cmp
add
xor
fld
sahf
xor
adc
arpl
mov
mov
pushf
ret
subb
not
xor
lock
adc
push
shr
test
les
cmpsb
jmp
mov
mov
sub
jbe
mov
mov
adc
and
std
movsb
enter
imul
fcmove
dec
pop
jl
ja
ret
and
pop
adc
mov
sub
in
test
mov
adc
addr16
movsl
fwait
jne
iret
into
adc
push
adc
aad
cmp
mov
hlt
xchg
cwtl
add
cmpsl
push
mov
or
and
leave
xor
nop
inc
loope
inc
testl
sbb
les
cwtl
or
shr
mov
in
push
sbb
cmpsb
pop
sbb
jo
loop
call
aad
push
mov
das
popa
pop
js
lods
in
adc
cmpsb
pop
add
gs
cs
jg
lds
pop
cltd
push
push
jae
xchg
push
lea
enter
xchg
cmpsb
push
and
cmpsb
add
ljmp
rcrb
adc
adc
sub
sbb
cld
adc
not
mov
scas
dec
or
adc
inc
mov
or
mov
mov
push
orb
cmpl
push
scas
add
incb
sti
push
xor
push
mov
and
pop
push
fiaddl
repnz
scas
pop
mov
jp
add
into
js
push
hlt
jecxz
mov
lock
push
push
push
push
loopne
mov
mov
lods
jne
xor
outsb
rclb
test
and
mov
jo
mov
or
call
dec
sbb
push
or
loop
rolb
sbb
jae
loope
inc
mov
cwtl
add
pop
and
pushf
aad
push
push
add
or
out
sbb
sbb
lret
add
xor
or
xor
push
push
and
test
vsubss
rcll
cwtl
jb
lret
lcall
push
xor
push
add
test
adc
inc
fldl
jbe
stos
movsl
rcrl
inc
mov
cwtl
aaa
mov
push
cmp
loop
int3
aam
test
add
xchg
test
push
shlb
lock
shl
es
lods
xor
pop
xchg
rcr
and
gs
dec
daa
adc
mov
mov
ja
loope
push
jle
xchg
imul
jmp
sbb
mov
push
inc
add
aad
test
adc
aas
lahf
shll
mov
mov
aam
sbb
call
xchg
gs
jne
add
ret
test
loope
inc
mov
pop
push
pop
movsl
mov
jecxz
inc
pop
lods
dec
xor
sub
dec
mov
sbbl
push
sub
sub
jb
mov
jae
jbe
xchg
dec
int3
xchg
cmp
jae
add
dec
adc
cmp
add
pop
push
test
lcall
popa
push
repz
add
pop
mov
movsb
pop
popa
dec
dec
and
xor
ret
push
jo
inc
and
inc
mov
fwait
push
push
arpl
mov
mov
xchg
rol
rcl
pop
xchg
inc
add
pop
mov
or
cs
hlt
or
inc
jmp
inc
fcomi
mov
pop
adc
adc
mov
dec
lret
lock
mov
loopne
inc
pop
mov
xor
mov
cmp
je
or
inc
clc
fwait
and
cmp
lock
test
daa
mov
bound
push
test
xchg
push
test
lret
mov
ljmp
and
ret
inc
sbb
dec
adc
shll
or
sbb
sti
ss
movsl
cli
test
shrl
scas
adc
xchg
adc
je
and
add
lods
push
lock
add
movsl
loop
pop
sbb
lret
rcll
jbe
addb
jae
loope
mov
jp
icebp
pop
push
stos
adc
inc
cs
je
sbb
push
movsb
lock
pusha
xchg
pushf
sbb
mov
jmp
push
mov
or
subb
shlb
and
ds
cmp
jmp
addb
pop
insb
movsb
or
or
jno
add
fildl
cmp
dec
in
mov
lods
outsb
sub
add
pop
xchg
into
ljmp
jmp
sub
pop
rep
push
add
mov
shlb
mov
test
sub
fs
push
xor
cmpsb
lea
xor
ret
or
pop
out
aad
xor
orl
cmp
nop
loopne
stos
test
lock
pusha
fadds
mov
lds
or
and
and
adc
push
and
sub
rorl
push
inc
mov
cmp
rol
and
sub
iret
adc
jbe
ljmp
xchg
and
mov
repnz
pop
sbb
rcrl
ret
inc
xchg
lcall
add
pop
lock
sar
add
and
push
pushf
sub
clts
call
dec
cld
test
mov
mov
call
xlat
out
and
mov
jno
shlb
dec
repnz
sbb
or
sarb
in
mov
fmull
push
call
pop
orl
cmc
mov
inc
xchg
dec
ror
and
testl
push
or
popf
xchg
out
sbb
add
lret
test
aam
scas
dec
xorb
mov
fs
cld
pop
nop
adc
inc
adc
ss
xchg
or
add
mov
jg
daa
loopne
push
xor
ja
adc
add
test
in
inc
or
inc
sbb
sub
add
or
imull
in
enter
test
mov
push
or
push
and
lds
negb
add
dec
mov
add
movb
pop
loop
movsl
dec
cmp
sahf
jp
dec
ds
out
fcmovb
jle
rcl
jmp
xor
mov
and
in
dec
cmc
call
add
in
aam
push
nop
mov
subb
insl
not
push
scas
dec
push
push
dec
cmc
xor
call
mov
in
lahf
mov
loope
xchg
inc
sarl
addl
repnz
mov
loopne
xchg
mov
pusha
aam
add
push
insb
fcmovnbe
adc
add
push
xchg
cmp
out
xlat
rorb
pop
aam
push
mov
xchg
dec
jp
mov
adc
and
icebp
fs
dec
jb
sub
sub
inc
mov
mov
ja
add
leave
mov
mov
mov
mov
in
sbbl
sub
adc
jae
adcl
mov
cli
clc
push
add
mov
clc
outsb
cmp
mov
shrb
inc
mov
push
dec
mov
aad
or
es
lods
shrd
push
out
xor
cmpsl
sbb
mov
jo
hlt
aas
mov
loope
and
lods
xchg
push
and
sub
jo
xchg
sbb
bound
push
sbb
add
cmp
jle
sbb
mov
push
loopne
int3
cmp
fwait
cli
mov
push
subb
ret
aad
lods
mov
xor
in
xchg
or
push
adc
adc
jl
dec
fs
add
fbld
ljmp
pop
add
out
dec
rcrb
jbe,pn
and
adc
jmp
sbb
or
cmp
pop
push
push
or
jo
es
out
shrb
cmp
pop
mov
pop
push
and
orb
test
mov
dec
lea
xchg
xchg
mulb
add
adc
xchg
pop
adc
adc
sbb
sbb
nop
ss
push
mov
aad
dec
mov
sbb
sbb
jmp
dec
xchg
push
adc
mov
stc
push
push
push
sbb
push
and
mov
mov
mov
inc
adc
or
dec
xchg
xchg
lret
xchg
les
xor
test
push
imul
clc
ret
sbb
jo
clc
jle
scas
test
stc
nop
stos
jmp
cmp
add
rol
add
cmp
sub
pop
push
sub
dec
stos
or
insb
scas
pop
stc
mov
inc
scas
rorb
scas
xchg
dec
leave
pop
icebp
cwtl
inc
insb
jmp
je,pn
testb
and
hlt
push
loope
inc
in
or
clc
mov
mov
jge
rcll
or
mov
out
jo
ret
scas
push
mov
or
xchg
cli
or
test
pop
dec
add
lcall
add
mov
clc
imul
pusha
test
xor
fs
shrb
add
dec
or
push
mov
mov
popf
test
pop
scas
rolb
or
sbb
push
fcoms
sbb
out
adc
ficoms
push
rolb
addb
mov
push
pop
sub
popa
pop
test
enter
jo
add
or
jne
lock
test
add
test
mov
lods
orl
mov
pop
notb
rcl
cli
add
push
inc
push
pop
inc
add
std
divl
and
cmp
lock
mov
pop
lods
push
cmp
add
and
or
and
cmovl
pushf
cmpsb
sbb
adc
pusha
add
sbb
or
lds
jo
mov
sbb
call
test
ljmp
cwtl
mov
adcl
pop
imul
inc
add
mov
xor
lret
sub
push
sbb
add
inc
xor
add
lock
aam
stos
clc
push
lods
icebp
inc
sbb
lret
push
and
push
mov
inc
int
scas
jo
inc
inc
aaa
sub
sub
sbb
insb
popa
fwait
divb
adc
inc
xor
mov
or
push
cmp
sbb
mov
adc
in
ret
jmp
icebp
jl
ret
loope
leave
je
or
mov
cs
or
shrb
pop
loop
enter
jb
sbb
sub
sbb
mov
adc
add
adc
sub
xlat
shrb
int3
add
push
leave
adc
push
pushf
push
add
xchg
add
loopne
test
push
push
xor
mov
out
stos
push
add
popl
sub
in
sarl
cmp
ret
mov
add
leave
push
and
mov
cmp
lret
sub
xchg
push
sub
loope
sub
pop
add
mov
sub
add
sub
jmp
inc
mov
leave
fcoml
mov
add
flds
leave
push
push
test
xchg
ret
hlt
lds
xor
lret
and
cwtl
movaps
push
sti
sub
add
dec
push
aam
scas
push
dec
add
cltd
sahf
sub
cmp
insl
test
jbe
pop
inc
push
add
push
xor
mov
push
mov
mov
or
imul
ret
mov
nop
roll
out
inc
das
shll
movb
mov
mov
add
shrb
out
adc
sub
icebp
push
sbb
mov
inc
push
add
adc
test
rclb
cmp
lds
mov
notb
and
packssdw
jmp
or
leave
adc
scas
dec
adc
not
je
sarb
dec
in
pop
add
and
lods
adc
cs
xchg
adc
mov
sub
jbe
push
sbb
dec
shr
cwtl
or
orb
fadd
insb
dec
jp
notl
push
mov
adc
add
cmp
xchg
je
xchg
fmull
add
mov
lfs
mov
sub
push
lock
inc
dec
mov
sub
xor
fsubl
mov
rorl
add
xor
int3
jo
out
fwait
insb
ror
lock
out
mov
push
pop
inc
sbb
inc
jo
and
clc
call
fucomip
jg
out
sarb
push
mov
mov
sub
pop
pop
fldl
mov
jae
xor
call
push
mov
mov
inc
in
push
in
mov
stos
nop
pop
push
jbe
fwait
mov
jb
stos
dec
fisttpl
and
mov
adc
jmp
push
pusha
push
push
dec
int3
mov
andb
xchg
or
loope
add
sub
leave
push
add
into
adc
loop
cld
or
fdivs
inc
mov
std
xchg
sub
sub
sbb
in
lds
xor
test
ret
mov
fs
push
mov
mov
icebp
xchg
data16
pusha
jp
jmp
shll
or
mov
inc
xor
push
jne
or
lret
ljmp
outsb
add
sbb
sbb
mov
inc
sbb
lock
mov
or
sar
adc
pop
add
outsb
xchg
sub
lahf
sub
loopne
adc
dec
test
mov
orb
cmp
ret
ret
lock
arpl
or
inc
scas
scas
js
xchg
jbe
hlt
sub
out
push
pop
fdivrs
push
clc
js
sbb
pop
outsb
jne
test
dec
push
lock
movsl
jbe
testb
in
mov
add
les
dec
aam
lock
add
xor
repnz
jmp
lock
pusha
push
add
fs
sahf
adc
jg
adc
xchg
cmp
aam
and
cli
sbb
add
pop
and
xor
sbb
lods
push
inc
or
mov
testb
call
mov
jne
rcrb
push
out
mov
push
mov
push
fs
jl
push
loope
mov
rclb
jns
aam
test
or
mov
xchg
push
dec
sahf
cmpsl
pop
repz
cmp
rcll
pusha
cmp
andb
bound
bound
sbb
cmpl
sbb
jp
mov
cmp
call
ror
subl
les
rcrl
dec
loope
ret
cmp
inc
ss
or
push
jl
cs
sbb
dec
cmc
xor
mov
test
sub
push
icebp
mov
rclb
sti
pop
adc
sbb
push
pop
and
call
movl
pop
push
shrl
sub
mov
shlb
jno
push
out
in
or
sub
jo
popf
les
icebp
push
ljmp
ret
xor
dec
add
add
and
mov
hlt
or
sub
adc
jb
or
lea
mov
imul
jo
push
pop
lods
pop
and
pop
adc
sbbb
dec
adc
add
fmuls
inc
pop
rorb
push
push
cmp
js
and
clc
sub
stos
cmpsb
lock
stos
arpl
es
outsl
mov
mov
dec
sbb
mov
call
je
mov
aas
call
jo
test
sahf
mov
cli
sbb
sub
lock
dec
ss
cmp
roll
orl
sub
pop
cld
call
mov
pop
cmp
jmp
inc
je
in
dec
sti
repz
test
imul
xor
push
adc
mov
mov
es
adc
aad
jnp
add
fstl
andl
pop
sub
mov
addr16
and
or
jge
push
lea
repnz
push
mov
sub
pop
je
cmpsl
push
ss
rolb
and
mov
push
rcl
rorl
rcrl
sbb
mov
mov
and
mov
sbb
mov
lret
popf
test
cltd
mov
sub
es
add
jge
sub
inc
dec
pop
aam
push
clc
sub
jnp
mov
xchg
mov
je
push
enter
jbe
enter
mov
push
sbb
xor
sbb
outsl
jp
xor
ret
into
iret
pop
add
out
sub
cmp
mov
rorl
ljmp
cli
mov
into
inc
fiadds
pusha
lret
push
sub
call
xor
xchg
addl
int3
mov
jo
jb
mov
add
mov
out
mov
cli
or
sahf
add
mov
mov
ret
or
sbb
enter
insl
mov
mov
push
dec
in
or
jne
pop
lock
and
movsl
loope
xchg
test
push
hlt
sbb
inc
mov
dec
push
xor
sbb
push
cmp
push
push
or
sbb
xchg
ret
lock
adc
jnp
jne
push
mov
ljmp
push
pop
mov
pop
mov
dec
rclb
sbb
add
push
scas
std
jo
add
dec
mov
push
push
cmpsl
pop
rorl
add
or
xchg
xorb
jp
xor
lahf
dec
notl
dec
cwtl
loope
sbb
addb
add
daa
push
cmp
leave
xor
mov
mov
adc
mov
xor
popf
mov
sub
imul
loopne
popa
sub
add
je
sbbb
pushf
inc
cli
bound
and
or
fstpl
dec
pop
mov
or
or
mov
or
add
mov
mov
in
inc
pop
add
jmp
lods
jo
loopne
sti
inc
addl
add
test
and
sbb
lret
xchg
add
pop
fwait
xor
push
push
mov
push
movsl
inc
fildll
sub
pop
in
push
adc
push
rcll
ljmp
test
rol
push
and
rcrl
stos
call
xor
and
push
add
mov
pop
sub
mov
dec
int
mov
add
lds
pop
shrb
sbb
pop
pop
dec
out
out
cmp
mov
lock
push
mov
adc
cmovle
inc
rcrb
jp
push
push
repnz
imul
jecxz
jp
add
mov
cmp
push
or
pop
or
sbb
andb
popf
jmp
jmp
push
fsubs
jecxz
mov
adc
je
mov
mov
sbb
shl
repnz
inc
mov
mov
out
xor
lret
mov
inc
sbb
cmpb
mov
psrld
mov
mov
mov
push
test
lock
jmp
push
aad
or
inc
sub
mov
out
inc
xchg
movsb
sti
inc
pop
pop
inc
sub
add
fwait
and
xchg
push
enter
dec
push
insb
add
xchg
test
rcl
add
adc
pop
out
inc
jl
sbb
or
push
out
or
mov
jno
pop
ret
mov
in
dec
les
lods
dec
dec
push
push
mov
mov
gs
or
pop
add
sbb
sbb
and
pop
fcmovne
out
outsl
dec
aad
push
repnz
mov
push
out
clc
push
lea
cwtl
das
adc
dec
xor
push
push
add
sbb
add
stos
jl
push
push
dec
addr16
xchg
lret
imul
cmp
loop
mov
inc
mov
push
push
sbb
inc
jb
subl
pushf
pop
fisubl
xlat
pop
inc
addr16
dec
add
rcrb
loopne
add
push
xor
add
inc
shrb
push
add
insl
inc
or
mov
mov
xorl
shl
inc
cltd
mov
inc
jmp
call
push
push
dec
popf
add
mov
or
mov
mov
rol
mov
cmp
add
mov
push
sbb
leave
addl
xor
dec
imul
and
in
out
adc
xor
test
clc
into
add
sub
adc
cmp
in
jno
cmpsb
enter
roll
repnz
jp
sub
iret
in
pop
push
and
scas
ficoml
testb
jno
xor
dec
jo
pop
bound
push
adc
test
enter
ret
or
shl
xor
lret
syscall
push
cwtl
sub
and
pusha
int3
push
shrl
sub
sub
addr16
xor
loopne
xchg
push
pop
xor
inc
adc
pop
mov
mov
inc
push
push
xor
jne
adc
or
and
mov
adc
adc
insb
and
loope
cmp
enter
pop
inc
stos
fcmovnu
xchg
imul
dec
icebp
push
xor
or
fadds
jbe
mov
sbb
and
mov
jp
or
mov
xchg
adcl
and
push
lods
inc
test
cmp
push
mov
xor
pop
add
or
mov
mov
jecxz
aas
xchg
mov
cmp
stos
inc
leave
push
sti
push
roll
xchg
add
sarl
adc
pop
cmp
pop
sub
add
nop
sbb
jnp
ficoms
and
out
ret
sbb
lds
jmp
adc
push
mov
lods
mov
adc
sbbb
push
rolb
xchg
adc
dec
jmp
lret
xchg
and
xor
sbb
mov
inc
dec
push
adc
cmp
add
mov
lea
das
inc
jo
push
lock
xchg
sbb
jecxz
push
jbe
pop
cs
jmp
stc
xchg
rorl
inc
xchg
sub
addl
mov
push
mov
lret
test
enter
rorl
into
adc
je
adc
mov
sub
push
and
fwait
adc
mov
push
jb
add
out
subw
dec
jne
les
or
push
stc
stos
loope
jp
orb
mov
pop
aad
test
push
sbb
fdivrp
or
mov
mov
in
sbb
ja
jno
jo
pop
push
addb
call
sbb
adc
add
adc
leave
sbb
or
shl
sbb
add
sarb
vmaxss
gs
or
imul
mov
call
inc
xchg
pop
and
inc
xor
push
cltd
xchg
cs
cld
icebp
lea
scas
add
popf
xor
adc
addb
movsl
rolb
in
into
mov
adcb
cld
sbb
loope
nop
mov
cmpsl
and
es
add
adc
pop
rolb
loope
inc
lods
ret
add
lock
pop
push
and
sub
notb
pushf
jmp
mov
mov
xchg
cltd
jno
addb
sbb
and
jl
inc
shlb
sbb
pushf
test
add
test
mov
addb
add
insb
dec
inc
lods
pusha
pop
leave
mov
add
push
sbb
mov
mov
mov
lock
call
push
adc
adc
push
jo
jl
pop
ret
and
fnstcw
lock
shrl
imul
adc
xor
or
inc
pop
mov
sbb
ret
push
jnp
push
popa
inc
sbb
icebp
adc
outsb
push
in
cmp
push
ljmp
adc
inc
shlb
insl
xchg
orl
mov
rclb
add
adc
pop
push
mov
orb
stos
imul
and
mov
add
push
ret
popa
aas
stos
add
subl
pop
loop
ss
add
in
push
push
mov
push
jns
rorb
and
dec
inc
dec
sub
inc
and
or
push
jb
lods
push
in
or
cwtl
rcrl
cmpl
push
loope
in
mov
cmp
cmpsl
andb
and
ljmp
cmp
loope
ret
aaa
int
fs
inc
leave
add
cmp
mov
and
hlt
add
push
xor
or
rorl
push
adc
sub
rcrb
mov
adc
xchg
lock
jmp
mov
pop
jbe
out
or
push
xchg
add
es
jnp
addb
aas
inc
adc
lea
paddd
cmc
decb
mov
movsl
ss
shl
test
js
mov
jbe
xchg
push
add
je
dec
and
mov
loopne
mov
outsb
sub
xchg
add
outsb
femms
lret
push
imul
pop
in
mov
add
lods
or
add
jb
mov
lods
cmpl
xchg
test
xor
ret
inc
orl
dec
sub
sbb
push
or
sbb
adc
and
dec
inc
sbb
ljmp
pusha
push
push
mov
mov
insb
inc
cmp
loop,pt
push
add
stos
loopne
mov
dec
dec
add
dec
push
mov
push
xchg
cmc
jno
mov
lret
enter
push
test
adc
mov
dec
push
push
push
cmp
cmpsl
sarl
inc
jne
push
sub
or
sti
add
pop
jmp
push
call
out
adc
lcall
add
in
and
pop
push
loopne
cmc
adc
and
push
lock
movsb
dec
adc
sbb
inc
scas
sbb
mov
jnp
inc
jmp
test
xor
subl
or
inc
lcall
js
ficompl
sbbb
or
add
ret
mov
inc
and
xor
add
dec
push
mov
outsl
xchg
push
iret
xor
push
adc
xchg
push
push
xchg
and
add
inc
adc
mov
addb
lret
pop
push
add
fsubp
inc
jb
mov
push
test
xor
orb
jnp
mov
mov
test
mov
and
aaa
xor
push
inc
pop
fistps
ret
push
adc
inc
sbb
rcl
sbb
dec
jns
icebp
pop
lods
sub
push
adc
add
dec
pusha
xor
push
sbbl
push
mov
lret
sub
push
mov
jo
aad
and
xchg
rclb
rolb
xor
xor
stos
addb
mov
hlt
loopne
iret
hlt
inc
cmp
inc
es
sub
pop
and
inc
mov
adc
add
stos
mov
lret
cmp
sbb
and
ret
dec
rcll
loop
pop
shl
or
adc
ss
push
xor
xchg
or
out
adc
jbe
into
add
stos
scas
dec
add
sahf
ljmp
sbb
sbb
jmp
adc
sub
mov
push
ljmp
jle
pop
xor
push
jecxz
add
xlat
or
push
xchg
or
hlt
add
adc
icebp
mov
add
js
pop
mov
mov
or
int3
in
ljmp
outsl
xor
mov
adc
add
or
cmp
sbb
subl
mov
stc
sbb
lcall
jle
roll
inc
xchg
inc
mov
rcll
adc
ja
xchg
mov
sub
xor
into
jl
mov
clc
stc
push
cmovp
adc
stos
sbb
insb
push
sub
or
pop
roll
shlb
jo
sbb
lret
negl
xchg
and
push
and
add
mov
add
subl
pusha
xor
add
stos
adc
add
push
in
xchg
pop
push
add
pop
cmp
es
cmp
mov
adc
push
popf
mov
xor
or
cmp
sbb
xchg
add
mov
push
adc
sbb
les
sbb
loop
loop
jo
inc
cmpsl
fistps
adc
add
or
adc
rclb
lret
cmp
gs
or
scas
xor
jmp
mov
fiaddl
stos
jb
jo
inc
pop
xchg
add
sbb
inc
jae
int
daa
pop
sub
xchg
push
ss
movb
data16
jp
jmp
pop
pusha
mov
pop
xchg
and
or
xchg
test
sbbl
test
mov
and
mov
aad
test
xchg
jl
xchg
aad
ret
pop
xor
inc
push
mov
les
inc
add
jp
sbb
cwtl
adc
lods
scas
nop
imul
push
push
push
jo
push
jmp
in
pop
push
ja
adc
leave
jge
inc
loope
cmc
or
shlb
jo
cmpsl
outsb
or
test
aad
js
addb
jbe
jo
add
and
shrl
jmp
lock
dec
and
xchg
xchg
test
push
jae
xor
push
mov
xchg
push
sub
shl
cs
jae
jns
sarb
and
lds
sub
lcall
roll
pop
jo
add
ljmp
or
mov
mov
insb
xchg
call
or
cwtl
xor
fdivrs
mov
adc
ror
or
mov
sub
inc
mov
xchg
sarb
mov
cmp
fcomip
mov
or
leave
mov
xchg
lcall
lea
sete
xchg
lods
stos
lods
clc
cmp
jbe
lea
cmpsl
pusha
push
popa
push
ret
add
pop
push
adcl
cmp
out
shr
xor
inc
adcb
cmpsb
mov
addr16
jnp
cmp
fwait
call
push
mov
jbe
inc
and
out
or
shl
and
adc
jae
mov
mov
xor
ret
ljmp
push
pushf
stos
lds
loopne
sub
mov
sub
adc
pop
adc
xchg
dec
and
push
je
mov
add
rolb
stos
dec
test
in
adc
rorb
mov
add
and
shlb
pusha
xchg
cmc
pop
or
jbe,pn
cld
insl
cmp
xchg
and
cmp
and
mov
clc
mov
adc
or
jmp
lods
stos
jnp
adc
inc
jnp
mov
cmp
xor
out
or
addr16
adc
into
push
test
out
push
sbb
xchg
or
xchg
loopne
push
lahf
jne
mov
adc
call
enter
dec
inc
jmp
ss
jl
fmulp
xchg
push
addr16
mov
les
dec
aam
scas
pop
incb
and
stos
adc
push
sbb
dec
mov
sbb
add
fisttpll
cmp
loopne
push
or
mov
xlat
stos
add
loop
sbb
test
nop
jnp
or
test
sarb
movsl
ret
push
and
sub
test
int
add
clc
sbb
into
xchg
and
cmpsb
dec
sbbl
mov
xchg
sub
xor
mov
orb
pop
rolb
stos
mov
lcall
sbb
add
dec
cmp
mov
or
out
mov
add
leave
les
bound
ret
xorl
push
inc
es
add
mov
lret
mull
outsb
cmp
add
xchg
jmp
scas
pop
xchg
adc
push
adc
adc
gs
cmpsl
sub
ret
aad
xchg
loope
and
sbb
mov
inc
rclb
add
pop
jne
push
loope
loope
scas
dec
daa
jnp
testb
das
push
push
out
adc
push
inc
loop
mov
dec
sbb
cmp
mov
mov
adc
lock
inc
aaa
mov
enter
mov
or
push
or
pusha
or
lret
test
mov
xchg
int
fistpl
fwait
or
lock
cmp
adc
sarb
mov
jb
pop
stos
push
jo
pusha
mov
pushf
or
add
push
mov
jbe
inc
jae
popa
and
rcrb
add
out
pop
adc
mov
adc
les
pop
pop
loopne
pop
gs
and
sbb
lahf
into
push
in
sub
pop
sbb
in
adc
inc
xor
shl
rolb
xor
icebp
loop
jle
test
inc
push
sbb
fstp
std
adc
push
lret
sbb
push
ljmp
xchg
mov
inc
push
push
aam
inc
pop
xchg
or
icebp
and
into
pop
mov
data16
pop
inc
lock
mov
or
lods
push
add
stc
mov
push
sbb
pop
add
jge
xor
dec
add
sbb
push
and
pop
aam
xchg
popa
rcll
scas
lret
mov
xorb
test
or
mov
clc
adc
xchg
jp
or
xor
rorl
xor
rorl
add
sbb
push
test
pop
jp
add
push
call
lock
ret
pop
add
push
xlat
pop
xor
sbb
mov
sbb
mov
and
pop
inc
lods
jo
mov
shlb
repnz
inc
ja
rcll
enter
es
leave
rol
adc
les
andl
add
stc
sub
scas
pop
lods
or
mov
mov
cmp
adc
dec
xchg
mov
push
sbb
xor
pop
les
pop
or
sahf
sarl
shll
loop
mov
or
push
js
jp
cmpsb
ret
inc
or
pushf
test
sub
add
pop
mov
push
adc
xor
cmp
pop
scas
sbb
jo
sbb
punpckhdq
mov
adc
pop
push
mov
xchg
loop
pop
add
mov
test
or
test
push
push
and
add
or
enter
cmp
dec
add
add
adc
lahf
sub
push
cmp
loopne
mov
add
push
xchg
add
or
sbb
mov
jo
les
adc
rclb
jb
pushf
sbbl
daa
push
xor
jnp
cmp
ljmp
pop
test
lock
jbe
xor
subb
sbb
out
sbb
stos
mov
test
in
inc
icebp
sbbl
insl
rolb
or
bswap
adc
push
xchg
repz
pop
adc
mov
xor
adc
pushf
or
outsb
add
xchg
inc
mov
push
cmp
lahf
fcompl
cmp
insb
xchg
mov
into
idiv
jb
bound
sti
sub
clc
lods
subb
push
mov
shll
and
icebp
jo
popf
movb
pop
push
cmpsl
cmpsb
xchg
outsl
or
pop
xchg
and
push
mov
inc
mov
pop
andb
inc
test
call
sbb
xor
jb
jno
ret
push
rorl
jecxz
adc
rorb
bswap
adc
shrl
cmc
mov
rcll
rcll
mov
and
add
test
pop
int3
shlb
int3
btc
add
cmp
ret
sbb
jge
aam
mov
aaa
ret
push
xor
dec
sbb
fwait
cmp
rolb
out
cwtl
and
dec
sub
and
push
mov
data16
addb
andl
stos
lahf
nop
adc
sub
or
test
push
mov
sbb
adc
mov
sbb
js
lea
mov
add
test
mov
mov
mov
das
mov
or
jge
mov
sub
sub
adc
or
mov
cmp
dec
xor
lret
ret
aad
xchg
loopne
sbb
or
push
stc
or
test
loope
sbb
jns
repnz
lret
push
adc
adc
xlat
push
fs
or
mov
dec
mov
lea
inc
inc
pshufw
stos
lock
lcall
ds
movsl
mov
and
xchg
and
ljmp
into
pusha
sub
rcll
lods
xor
push
or
pop
loope
xchg
mov
push
inc
out
popf
add
inc
fsubs
sub
test
es
mov
das
jns
inc
add
xchg
orl
mov
sbb
mov
pushf
mov
pop
movsl
lret
paddb
pop
sbb
mov
pop
dec
mov
adc
sub
ljmp
mov
movups
sub
aam
aad
adc
xchg
add
pushf
cltd
push
push
mov
popa
mov
push
push
ljmp
xor
lds
ljmp
adc
andl
inc
dec
mov
pop
loop
mov
ret
scas
mov
movsw
mov
xchg
or
pop
pop
push
cmp
aad
xor
mov
mov
push
cli
or
mov
hlt
and
push
pop
cmc
adc
adc
cltd
cmp
test
add
rclb
rolb
in
adc
dec
fwait
or
mov
add
sbb
xchg
xchg
push
xchg
lret
mov
jns
scas
ljmp
rorl
sbb
roll
dec
push
lock
movsl
add
push
ret
xor
leave
repz
xchg
icebp
or
loope
ret
test
mov
add
negl
add
pusha
repnz
push
sub
call
jne
addl
push
and
add
shlb
fimuls
cmp
ret
fnstcw
xlat
ret
lds
mov
xorb
dec
in
mov
or
sarl
pop
addl
push
add
push
mov
jp
out
dec
sub
fs
adc
or
test
negb
add
sub
aad
and
sahf
push
inc
pop
lds
sbb
lret
cs
subb
rcrl
loop
cwtl
add
push
dec
sbb
push
cltd
sub
inc
test
pop
leave
adc
pusha
inc
push
push
cli
test
mov
push
repnz
dec
rolb
mov
xor
inc
insb
xor
fsubl
push
sub
mov
mov
xor
jns
add
out
push
shlb
push
lods
push
das
lcall
and
sub
xchg
sahf
adc
pop
inc
pop
push
adc
mov
add
mov
nop
outsl
ja
add
enter
pop
pop
adc
inc
xor
inc
mov
fs
loopne
adc
gs
or
cmp
rcrb
jo
sub
rclb
stc
pop
sbb
adc
add
cmpsb
push
add
jae
push
push
loope
or
dec
cmp
and
add
jle
ss
sbb
gs
sub
orb
adc
xchg
jb
ffree
and
sub
andl
fadd
push
adc
mov
dec
and
mov
jl
mov
add
sahf
mov
and
cmp
or
stos
ror
int
sub
mov
sub
mov
sub
sbb
mov
jo
leave
adc
inc
clc
lds
andl
sbb
mov
inc
mov
lock
adc
jnp
movl
add
mov
pop
popa
sub
adc
adc
cmpsb
fimull
xlat
add
or
mov
imul
bound
push
or
jno
ret
js
outsl
mov
sub
pop
gs
xor
xchg
sti
imul
or
int
mov
or
sub
adc
lock
rcrb
or
adc
rolb
cmpsb
xor
xchg
out
imul
mov
stos
xchg
xchg
aas
pop
and
icebp
add
jp
jge
add
nop
hlt
push
jecxz
cvtpi2ps
sbbl
sub
clc
arpl
mov
pushf
pop
fcoml
and
ret
and
mov
pushf
dec
out
loop
mov
rcr
test
data16
bound
subl
je
sub
or
lds
add
enter
into
push
test
sbb
add
andl
sbb
scas
test
cmp
or
or
cmpl
push
sbb
lret
sub
pop
gs
pop
adc
mov
mov
cmp
xchg
xchg
shll
adc
mov
mov
addb
inc
insl
xchg
lods
add
inc
sbb
shrb
test
and
jo
enter
ljmp
pop
add
pop
leave
push
rcrl
cmpsl
xchg
hlt
add
subl
xchg
enter
push
sbb
out
or
add
jmp
mov
addb
ljmp
add
nop
lret
loop
cmc
inc
xor
adc
push
cs
dec
aaa
inc
dec
popf
add
cld
push
shll
fwait
cmp
ljmp
and
xlat
bound
or
inc
out
arpl
mov
mov
add
adc
push
xor
ret
lods
sub
test
into
jbe
pusha
sbbb
add
mov
pop
lods
arpl
leave
inc
icebp
xchg
xchg
or
dec
aam
adc
lahf
dec
lods
mov
adc
stc
push
movsl
push
or
rorb
outsb
scas
add
jg
push
addb
in
addl
fisttpll
pushf
push
bound
les
les
jmp
push
or
push
mov
xor
adc
enter
pop
sbb
pop
dec
and
ljmp
sbb
sarl
xchg
sub
pop
cmp
push
and
xchg
inc
enter
cmpsl
xor
call
adc
sbb
lods
push
fs
jb
div
cltd
sub
in
lds
push
and
mov
add
shll
lret
inc
cmp
pop
mov
pushf
sub
push
test
adc
sub
adc
inc
sub
rolb
into
outsb
or
test
adc
enter
jo
sub
adc
int
sbb
pop
nop
jg
rclb
xor
orb
or
int
push
addb
pop
pop
imul
fnstenv
dec
xor
movd
mov
lock
ss
inc
sbb
cmpsl
cmpsl
mov
push
icebp
mov
cmp
mov
dec
pop
ljmp
ret
push
inc
inc
and
push
pop
rolb
jae
inc
mov
sub
push
jb
pop
xor
dec
ret
and
or
ret
or
push
cmp
push
push
aam
xlat
orb
and
sub
dec
jo
inc
ljmp
sub
prefetcht2
pushf
mov
or
xor
int3
stos
xor
mov
cs
sbb
push
xchg
rclb
push
lods
adc
or
movsb
and
sbb
test
mov
mov
pop
push
sti
add
sub
loope
or
add
scas
inc
inc
sub
sub
inc
push
test
mov
lods
push
loope
es
in
clc
push
or
test
mov
sub
add
out
pop
or
push
sub
push
pop
shl
or
stc
mov
jnp
int
sub
mov
les
mov
inc
arpl
js
loop
xchg
inc
cwtl
sub
mov
sub
test
ret
or
gs
fstps
adc
test
sub
sbb
pop
sub
pusha
movb
sbb
test
scas
inc
and
aas
pushf
ret
into
push
in
addb
add
es
push
daa
lock
push
cmp
jo
stos
pop
xor
or
cltd
jp
jge
or
mov
stc
int
and
jae
and
mov
adc
ret
or
adc
inc
inc
xor
pop
pushf
into
xchg
repnz
ss
mov
xor
sbb
xchg
or
pushf
xchg
roll
or
push
push
ljmp
cli
or
nop
push
sub
mov
cmp
inc
mov
dec
dec
mov
ret
mov
ret
sbb
push
sbb
cs
out
loopne
cs
push
sbb
jns
sub
mov
push
fmulp
add
push
fildl
lret
pop
sti
mov
inc
mov
rorb
add
fld
or
subb
sbb
or
leave
loop
mov
or
ret
loop
sbb
loopne
cmp
or
shlb
push
pop
imul
and
or
pusha
add
fnstenv
push
jo
and
mov
sbb
dec
mov
inc
jo
sahf
cmp
inc
sub
scas
or
sub
mov
aad
movsb
sub
in
loopne
mov
scas
ret
ds
outsl
xlat
and
dec
mov
jp
mov
sbb
pop
jo
ljmp
jmp
out
ret
lock
push
sub
adc
inc
arpl
out
into
rolb
mov
orb
or
movsl
rolb
xor
sub
pop
mov
pusha
sub
stos
cmc
addb
cmp
xchg
add
daa
or
jno
push
in
push
mov
jno
and
inc
jecxz
ret
adc
cs
push
mov
rclb
cli
mov
adc
cmp
mov
mov
pop
je
sbb
test
inc
pusha
sbbb
cmp
pop
sbb
mov
jg
stos
ret
mov
xor
jl
mov
les
sbb
mov
mov
in
adc
dec
xchg
dec
or
stos
push
pop
sbb
rorb
subl
loopne
adc
dec
jnp
shr
add
sub
mov
imul
pop
or
mov
cmp
ret
movsb
mov
dec
adc
movsb
inc
lcall
xchg
add
add
rclb
add
jp
xor
xor
and
or
leave
dec
pusha
push
lock
jge
mov
xorb
sub
jl
in
mov
push
sbb
adc
mov
dec
mov
lock
cwtl
mov
or
repnz
jge
adc
lret
in
les
jge
lret
movhlps
shlb
cld
adc
dec
scas
jo
or
adc
stos
jmp
loope
or
sub
jg
lock
adc
sbb
adc
es
stc
adc
add
inc
cmp
test
push
add
pop
cmc
xchg
dec
jo
mov
sub
lret
dec
in
ret
icebp
mov
sbb
dec
clc
fwait
loopne
xor
add
rorl
mov
and
stc
push
add
add
add
shrb
rolb
cmpsl
in
push
rclb
ljmp
orb
cmp
test
add
std
pop
roll
iret
rclb
shlb
adc
or
sbb
inc
lds
push
mov
jbe
or
cmp
sub
push
mov
or
out
inc
das
push
cmc
xlat
mov
jg
inc
xchg
cmpb
sub
adc
lods
sbb
and
xchg
jge
loop
mov
push
cmp
adc
or
sbb
add
adc
in
cmp
xchg
pop
xor
mov
sub
or
xor
lods
icebp
adc
add
adc
add
les
repz
hlt
push
mov
shl
loop
dec
dec
mov
mov
enter
rolb
inc
popa
movsl
push
xchg
inc
push
loopne
mov
adc
pushf
lret
jbe
ljmp
ret
stos
push
pushf
and
inc
mov
loope
and
sbb
sbb
outsl
popf
popf
inc
mov
out
sub
or
adc
dec
mov
push
xchg
or
jg
dec
xchg
stos
adc
jle
sbbb
es
leave
adc
sbb
test
add
rcl
sbb
sbb
xor
pop
sbbb
cld
ljmp
arpl
push
js
lods
aad
jae
cmp
scas
cli
jecxz
aad
pop
jmp
movsl
jmp
or
mov
add
jns
push
xchg
sbb
add
stos
leave
aas
lret
push
push
icebp
stos
or
xor
pop
cmp
and
or
add
pop
or
sub
iret
and
pop
nop
adc
push
into
pop
or
scas
ror
add
add
inc
xor
insb
adc
xor
cmp
jp
mov
je
jne
jecxz
cli
icebp
xchg
mov
leave
aam
sub
cmp
sbb
jle
leave
adc
sub
push
cmp
xor
mov
add
jne
sbb
jae
push
mov
cmp
mov
push
std
mov
cmpsb
pop
inc
addl
repnz
dec
sbb
jle
dec
shll
jb
ljmp
pop
push
les
mov
and
sub
mov
push
ret
xor
mov
rolb
pop
sbb
or
add
iret
cmp
push
inc
or
mov
inc
je
add
mov
stos
out
inc
int3
inc
dec
push
aad
or
xchg
test
fwait
stos
sub
mov
movsl
xor
or
pusha
fisttps
pop
sbb
adc
add
mov
mov
fldenv
es
sbb
mov
push
fsubl
xchg
stos
inc
xchg
add
lahf
cmpsl
mov
movsb
sbb
call
mov
iret
adc
sbb
push
jne
jmp
fiadds
inc
sub
mov
inc
out
add
mov
fs
dec
je
mov
jno
or
add
inc
rcll
arpl
add
cmpsb
add
sbb
out
push
xchg
stos
sbb
mov
inc
adc
jne
push
fcoml
rorb
mov
and
dec
int3
shrl
adc
inc
mov
notl
inc
shrb
xlat
scas
insb
mov
jmp
rclb
xor
jo
sub
jmp
in
cmp
icebp
adc
inc
icebp
xor
push
icebp
lock
adc
jmp
ret
inc
jmp
daa
push
and
and
mov
or
aam
cwtl
call
mulb
ficoml
add
fyl2xp1
sub
lret
push
outsl
adc
xor
notl
pop
sub
push
jne
lock
or
divb
sbb
xor
icebp
lcall
clc
pop
ljmp
xchg
fcoml
daa
push
in
mov
inc
pop
or
js
sbb
cmp
cmp
sbb
inc
lcall
xchg
add
shll
orb
push
sub
lcall
bound
call
inc
pusha
mov
mov
mov
sub
aaa
mov
paddq
push
and
jns
loopne
je
popf
outsb
push
mov
cmc
sub
or
dec
xchg
movsb
cmp
stos
pop
adc
mov
inc
imul
sub
mov
ret
cmp
add
or
sti
fs
inc
or
inc
shl
lcall
cmp
mov
xor
pusha
push
lock
push
mov
dec
loopne
aad
mov
inc
push
cwtl
int
inc
into
fistl
ja
inc
and
jo
sub
ds
sbb
roll
adc
mov
xor
jp
mov
arpl
adc
cmc
adc
adc
sbb
imul
add
or
ja
xchg
jns
mov
add
ljmp
or
sub
add
cmpsl
jp
add
fcomi
or
rcrb
call
jecxz
adc
pop
mov
cli
stos
sub
lret
fcmove
dec
ja
push
mov
mov
movsl
inc
xor
rclb
dec
rcll
mov
enter
pop
adcb
and
test
push
push
cmc
xchg
fsubs
ljmp
ficoml
inc
xchg
enter
in
dec
adc
movb
mov
enter
xor
lcall
test
sbb
stc
or
imul
enter
cmp
into
js
push
jo,pn
push
ret
mov
sub
push
jns
bound
push
adcl
cli
fcoms
jmp
xchg
pop
orl
push
cmp
addl
push
or
sub
mov
or
add
xor
mov
lock
testb
mov
pop
aas
push
adc
out
push
repz
shlb
push
push
imul
aaa
outsb
pop
int3
ljmp
cmpsb
inc
insl
jne
out
xor
pop
mov
add
shrb
sub
ret
enter
pop
and
mov
sbb
push
xor
rorl
mov
fimuls
push
js
push
pushf
repnz
inc
jecxz
mov
cmc
bound
sub
in
into
shrl
and
mov
inc
mov
sbb
or
sbb
push
insb
int
and
fsubl
push
add
movsb
or
addl
mov
or
mov
fcoml
inc
sbb
sub
divb
mov
xchg
add
pop
scas
mov
gs
adc
mov
jl
rolb
add
pop
lds
movsl
cltd
mov
xchg
cmc
ljmp
and
sub
ret
test
and
inc
adc
stos
aaa
insb
push
add
pop
jb
cld
mov
mov
jo
dec
adc
push
jbe
enter
stos
dec
out
push
insb
js
inc
sbb
add
mov
or
inc
cs
dec
sbb
cwtl
dec
push
add
cmp
sub
clc
mov
stc
dec
repnz
in
bound
std
push
inc
push
cmp
dec
jmp
aas
jb
cmc
sbb
repnz
xchg
inc
add
sbb
inc
das
or
lea
and
push
dec
sbb
bound
imul
jo
mov
mov
les
inc
fwait
inc
in
add
cmp
dec
push
xlat
bnd
xchg
pop
adc
sti
and
rorb
sub
imul
into
mov
inc
enter
jmp
or
adc
xlat
push
movsl
fdivrs
loop
or
jg
sbb
mov
shrl
mov
add
movsb
or
loop
cmp
push
pop
push
jo
sbb
das
xchg
movsl
pop
cmp
mov
call
dec
push
push
pusha
sub
inc
rcl
push
mov
xchg
scas
leave
movb
inc
clc
pop
jbe
or
shll
sbb
push
add
test
add
testb
push
lods
xor
js
cmp
mov
inc
ljmp
in
inc
xor
pop
aas
pop
pop
sub
pop
orb
jmp
mov
pop
ret
push
push
add
push
mov
xchg
in
aam
add
pop
push
jne
jne
push
int
mov
push
mov
push
xchg
mov
orl
jle
adc
jo
push
je
test
hlt
and
mov
fiaddl
cmp
xchg
or
jbe
aad
pop
cltd
cmp
sub
aas
icebp
inc
lods
mov
pop
mulb
xchg
test
xchg
push
or
loope
fidivl
inc
adc
lret
cli
dec
add
push
rcrb
out
orb
or
mov
lock
sub
dec
das
into
adc
and
adc
and
add
mov
inc
roll
sbb
mov
adc
shr
pop
cmp
xor
mov
and
pushf
out
shrl
pop
aad
cmpsl
es
decb
icebp
dec
cmp
pushf
jae
not
inc
jnp
and
gs
mov
mov
sbb
push
add
jae
pop
and
jae
lcall
inc
mov
push
subb
pop
pop
inc
xchg
data16
jo
ljmp
pop
cmp
cli
ret
sbb
lea
sahf
push
sbb
and
or
scas
sub
aad
popf
test
repz
mov
push
into
iret
shl
jns
sbbb
xor
loop
scas
adc
cmpsb
xchg
adc
xor
adc
adc
iret
das
mov
in
xchg
and
push
sub
in
lret
adc
push
and
add
and
ret
xor
cld
rcl
popf
sub
adc
fsubrs
testl
push
sub
icebp
push
push
mov
out
push
gs
jo
mov
sub
or
mov
icebp
sahf
xor
aad
adc
mov
pusha
pop
mov
sti
icebp
enter
sbb
mov
cmc
push
out
lret
aam
push
stos
xor
add
sub
movsb
ljmp
scas
pop
pop
xchg
inc
sbb
jle
in
cmp
inc
adc
or
bound
inc
mov
lcall
mov
adc
push
js
sbb
mov
imul
sub
cltd
test
int3
inc
stc
adc
enter
adc
add
cwtl
and
jnp
shl
push
ret
add
mov
sbb
push
jmp
loope
insl
add
js
push
hlt
test
scas
push
aas
jnp
jecxz
mov
sub
push
repnz
lods
mov
add
or
int3
jns
mov
jecxz
adc
sub
outsb
xchg
movsl
clc
sbb
jp
and
pop
xchg
adc
xor
pop
mov
enter
ret
js
pop
adc
inc
call
mov
nop
test
mov
add
mull
inc
adc
sub
push
mov
adc
sub
in
inc
ret
xchg
sub
xlat
flds
scas
mov
and
in
push
in
lods
xor
sbb
sub
out
inc
cmp
test
stc
daa
xlat
add
sarb
ljmp
sbbb
vmovaps
lcall
mov
les
push
cmp
add
pop
ja
xchg
push
les
xchg
and
icebp
push
shrl
add
test
xor
loopne
out
sub
sbb
sbb
jne
sbb
inc
aas
mov
adc
push
lods
or
sbb
add
pop
adc
and
push
fstps
or
test
sub
cmp
inc
into
scas
movsl
repnz
add
or
mov
add
js
push
shrb
sub
shrl
adc
mov
dec
aam
xchg
lods
sbb
or
ret
in
in
sub
cli
inc
mov
mov
sbb
push
dec
or
or
incl
ret
mov
and
lods
mull
fsubrl
leave
ja
loope
mov
sub
jb
or
push
imul
inc
mov
bound
adc
mov
idivb
bound
sbb
and
in
and
sbb
popa
push
mov
popa
xchg
xorl
mov
insl
mov
mov
and
inc
sbb
lods
sbb
cwtl
cs
push
sbb
ret
sbb
leave
out
sarb
sti
lret
push
sub
dec
lea
mov
inc
sub
outsl
mov
pusha
push
push
sbb
sbb
mov
or
pop
adc
insl
push
cwtl
movsl
cwtl
fisubrl
stos
dec
or
adc
cld
orl
shr
add
sub
dec
inc
adc
mov
xchg
call
push
call
xlat
or
inc
movsb
fcoms
xor
add
push
and
repnz
jns
add
xor
cmpsl
push
sub
lret
mov
mov
adc
ret
fdivl
push
and
inc
fstps
pop
scas
add
or
out
jl
mov
pop
inc
daa
aam
cmpl
sub
push
cmpsb
push
pop
les
or
sbb
ficompl
xchg
jns
dec
sbb
cmp
inc
pop
js
xor
or
xchg
ljmp
push
jb
xor
xor
mov
mov
xchg
mov
arpl
fmuls
out
xlat
pop
mov
aad
stos
and
daa
xor
test
adc
iret
sti
or
pop
adc
ret
sub
ljmp
sbb
add
mov
jl
mov
mov
mov
mov
icebp
adc
mov
bound
add
sbb
sbb
loop
push
rorl
icebp
sub
or
mov
popa
enter
or
ret
adc
add
pop
push
dec
add
dec
adc
nop
add
ret
mov
adc
mov
inc
fs
push
mov
ss
stos
sub
mov
lock
hlt
mov
xor
pop
push
ret
pop
xor
xor
xor
aam
push
xchg
mov
jo
push
xchg
lock
movlps
outsb
rcl
je
add
inc
out
mov
pop
mov
cmp
add
testb
xor
loope
movsb
xchg
adc
rcrb
and
add
jo
mov
cmp
mov
pop
xchg
jo
add
cmc
add
int3
xor
or
cmpb
pop
fwait
bound
ljmp
popa
xchg
ret
jmp
dec
mov
xchg
mov
ret
adc
pusha
hlt
adc
pop
dec
jmp
push
aam
fdivp
roll
adc
rol
push
adc
xchg
or
cli
adcl
push
xchg
stos
mov
call
add
add
mov
mov
popf
addr16
fistps
insl
add
mov
mov
mov
sbb
stos
pop
scas
ljmp
sbb
fsubs
push
stos
adc
xchg
cmc
adc
push
inc
or
test
inc
insb
out
push
into
adc
sbb
and
mov
xor
fs
jo
or
sti
and
and
mov
scas
mov
adc
mov
push
dec
or
sbb
call
fwait
xchg
stos
sub
rcl
aad
orb
leave
push
and
mov
xchg
mov
adc
pop
pop
sahf
int
xchg
movsl
inc
addb
aad
mov
dec
adcb
sub
sub
adc
stos
inc
cs
sbb
cmp
adc
repz
mov
mov
loope
shlb
outsl
jbe
sbb
es
idivb
aad
xor
pop
stos
cmc
mov
push
sub
fs
add
inc
add
push
adc
mov
xchg
cmpsl
lods
inc
movsb
push
jmp
sbb
cmp
push
inc
sbb
mov
cmp
pop
xlat
ret
or
jg
inc
enter
ret
sub
xor
ficompl
push
rcll
add
fwait
pop
jnp
mov
loope
stos
cmp
sbb
xor
add
shr
xchg
pushf
subl
rcll
sub
loope
mov
jb
push
adc
dec
adc
out
pop
mov
mov
xor
ds
xorb
mov
sbb
inc
inc
and
lods
xchg
sbb
enter
gs
rorb
jge
enter
sbb
mov
xor
add
icebp
in
inc
push
add
sbb
pusha
sbb
out
mov
mov
pusha
and
test
add
loope
mov
fwait
je
push
jae
push
jle
dec
cmp
mov
sbbb
shlb
xchg
cli
push
out
mov
inc
or
sub
xchg
sbb
inc
mov
ret
ljmp
leave
addl
mov
fbld
sub
push
div
push
mov
inc
mov
inc
xor
jge
add
sub
shrb
data16
add
ss
add
mov
jo
cmp
mov
push
shl
fnstenv
inc
add
sbb
dec
into
jnp
adc
push
pop
test
rep
repnz
cwtl
loop
out
jo
lods
mov
lret
lock
xchg
psubsb
lea
mov
imul
rol
jl
adc
lds
inc
mov
push
mov
test
ror
push
mov
das
pop
mov
dec
icebp
stos
shl
mov
jne
xor
aad
adc
or
jae
pop
pop
push
iret
aaa
sbb
sub
and
and
xchg
mov
push
jo
pop
pop
sbb
addb
cwtl
push
test
sub
sbb
push
lods
xor
aam
or
add
repz
sub
adc
sbbb
shll
and
imul
sub
sub
sbb
aam
push
cwtl
cmp
add
pushf
adc
inc
adc
adc
and
mov
shlb
rolb
mov
ret
adc
fidivl
lods
or
push
addb
inc
mov
std
xlat
andl
add
es
xchg
int3
jns
pop
adc
pop
add
lock
and
push
andb
lcall
out
sbb
scas
add
cmc
loop
add
mov
adc
leave
bound
orb
dec
xor
stos
sub
mov
inc
push
and
add
clc
mov
loop
lret
fidivrs
adc
mov
mov
push
mov
lea
or
mov
dec
jmp
push
popf
xchg
subb
sbb
nop
in
sbb
sbb
push
sbb
mov
fcmovnbe
popf
in
mov
inc
dec
shl
pushf
cmp
xchg
or
xor
mov
mov
inc
xor
cs
imul
or
sbb
inc
mov
and
test
test
xor
push
pop
add
inc
data16
lds
jo
push
fisubs
ror
push
add
inc
sub
call
push
in
xlat
push
das
stos
add
mov
frstor
and
pop
push
pop
in
orb
movsb
push
sub
xchg
push
pusha
mov
adc
enter
leave
andl
sub
add
cmpsb
pop
adc
popa
push
and
adc
push
ret
push
jnp
dec
in
jmp
or
mov
jmp
and
push
adc
scas
inc
adc
mov
xor
and
add
jmp
lods
add
push
pusha
rolb
inc
test
adc
cmp
sarl
mov
ret
sbb
cmpsb
stc
sbb
xor
testb
add
inc
shlb
inc
cs
pop
add
repz
and
mov
xorl
and
lods
push
js
loope
push
mov
or
jmp
aad
shl
test
xchg
sbb
and
fwait
lret
ja
arpl
add
jecxz
and
into
cmp
push
cmpsl
inc
cmp
pop
dec
add
mov
push
mov
mov
cmc
ljmp
push
leave
sbb
test
adc
add
imull
add
lcall
add
and
xor
sub
ret
out
lea
outsb
shll
jbe
adc
push
jl
mov
das
push
mov
mov
out
roll
push
inc
and
inc
or
cmp
sbb
or
inc
movb
add
in
mov
insl
pop
shll
jb
or
add
xchg
or
adcl
adc
rolb
lock
inc
pop
adc
cwtl
mov
popa
sbb
push
aad
push
mov
mov
rcrl
testb
pop
jno
rcl
adc
push
cmp
loop
push
adc
loopne
les
rcl
add
jo
in
and
mov
add
add
mov
inc
lods
js
pop
ficomps
sbbl
push
push
pop
add
call
adc
and
movsl
movl
and
push
add
mov
or
xor
pop
iret
lock
rolb
sub
sarb
pusha
push
add
pop
insb
inc
dec
repnz
test
inc
sbb
cmp
lret
mov
sub
aad
or
inc
das
dec
mov
mov
add
push
daa
sub
push
adc
fbstp
cmp
sbb
cmp
push
subb
push
adc
xchg
sti
mov
sbbl
adc
fucom
add
stos
push
or
ret
pop
jo
mov
rclb
loope
lcall
push
test
ret
inc
adc
stos
sbb
cmp
sbb
mov
pop
pop
push
stos
hlt
or
inc
push
out
push
movsl
inc
cmp
jecxz
les
or
scas
and
lods
pop
icebp
orb
xor
jne
sbb
push
jo
inc
xor
aam
or
pop
xor
outsb
ret
stc
cmp
mov
inc
clc
pop
sub
loopne
daa
adc
shlb
or
test
inc
push
mov
cwtl
loope
mov
inc
clc
dec
xor
les
push
mov
push
cmp
lea
or
mov
and
test
sbb
push
jno
cmp
mov
mov
lock
out
pop
stc
sbb
insb
mov
add
sbb
pop
not
push
stos
push
or
push
cmp
je
std
stc
leave
icebp
adc
jno
or
cmp
mov
inc
inc
sbb
pop
outsb
xchg
adc
imulb
fisubs
pop
add
push
das
and
mov
cmpsl
sbb
or
add
insb
enter
mov
lds
push
call
clc
iret
push
imul
stos
mov
sub
sbb
jb
mov
adc
popl
lods
add
push
test
sub
stos
xor
or
and
sbb
stos
adc
pop
mov
rolb
sbb
inc
and
sub
aas
sarl
xor
add
push
and
and
adc
sbb
mov
mov
or
xchg
inc
stos
syscall
sarb
pop
mov
lods
jb
cmp
clts
add
ss
push
negl
add
cmp
scas
in
call
aam
xor
je
ret
sbb
fs
jae
shlb
enter
clc
sbb
in
jo
lahf
call
mov
add
dec
insb
push
mov
subl
ret
icebp
add
add
jb
daa
jmp
or
sub
cmp
stos
testb
and
xor
sub
add
inc
loopne
mov
jo,pt
mov
orl
clc
test
mov
inc
rclb
fimull
bound
push
cmp
pop
movsb
add
or
adc
test
and
adc
xchg
icebp
ficoml
into
mov
push
shrl
les
je
adc
or
xchg
or
ret
mov
es
scas
lahf
je
add
push
or
add
and
ret
adc
cmp
cwtl
xor
rorl
into
cmp
push
adc
jo
push
pusha
adc
daa
mov
aaa
outsb
or
inc
jne
push
ss
addb
mov
or
dec
stos
gs
loopne
pop
ret
push
adc
jo
lcall
loopne
cmp
addb
les
adc
cmp
test
repz
adc
mov
pop
rcr
inc
push
xor
cmp
popa
into
mov
or
or
bound
adc
jb
inc
outsl
push
cltd
or
add
and
aaa
pop
or
mov
out
xor
inc
mov
push
jge
sbbb
pushf
mov
push
add
sub
push
mov
xchg
add
and
out
pop
or
lcall
int3
ljmp
rcrl
roll
xchg
inc
les
test
cld
std
ljmp
sbb
or
and
test
cwtl
adc
cmpl
inc
adc
xchg
sub
rcrl
stos
dec
int
push
orl
jno
subl
int
in
inc
sbb
mov
pop
add
lock
lods
and
pushf
sbb
into
sbb
andb
or
outsb
pop
rcll
ja
add
xchg
test
daa
mov
xor
and
push
les
lahf
out
push
jecxz
sub
popf
xchg
rorb
add
dec
mov
mov
dec
sti
mov
inc
push
fldenv
pop
add
mov
movsl
xchg
push
movsb
stos
test
add
push
xchg
cmp
push
adc
sbb
stc
push
test
add
sti
or
scas
les
adc
mov
xchg
or
mov
and
popa
push
scas
pop
inc
rcrl
leave
mov
rol
test
test
test
add
and
lahf
cmpsb
push
mov
es
cmp
iret
insl
add
adc
sbb
lods
leave
test
pop
mov
add
out
addl
add
mov
sbb
lcall
lcall
inc
pop
cmp
pop
jmp
in
mov
push
sub
xchg
push
inc
xor
xor
jb
sbb
push
mov
push
xchg
add
es
mov
inc
xor
lods
add
jmp
cmp
push
das
adc
cmpsb
call
mov
js
push
icebp
shrl
pop
popf
ret
stc
push
xor
pop
ss
push
xor
out
or
or
mov
jne
or
pusha
mov
sbb
xchg
push
inc
add
mov
or
jp
faddl
add
ficoml
stos
push
enter
imul
mov
jbe
mov
push
add
lret
je
mov
adc
push
sbb
mov
mov
sbb
add
pop
pop
push
push
xor
ja
enter
add
bound
xor
sahf
xor
add
inc
mov
xor
daa
push
stos
push
adc
leave
xor
push
xor
xchg
rcl
test
adc
testl
xchg
stos
xor
adc
inc
xor
int
xor
ja
inc
sub
sbb
shll
sub
push
rorb
shlb
ret
fisubrs
test
aad
leave
adc
inc
sbb
inc
push
add
scas
jle
mov
and
cmp
idivb
outsl
add
pop
push
test
adc
fists
je
adc
mov
sbb
jp
jo
out
sub
add
pop
pop
adc
addb
inc
popa
enter
arpl
mov
push
loope
or
jno
and
cwtl
pop
adc
rolb
andb
pop
sarl
push
cmp
iret
aam
jno
mov
aam
push
dec
sbb
or
test
or
cmpsb
sub
push
addr16
sbb
adc
push
add
add
push
xor
and
adc
lods
push
inc
stc
push
add
sbb
mov
addr16
xchg
lods
js
clc
push
or
xchg
cli
or
iret
divb
adc
repz
adcb
sbb
pop
adc
in
inc
scas
cmpsb
es
cmp
jecxz
in
rorl
dec
push
sub
push
scas
popa
call
mov
cmp
inc
xchg
sbb
outsl
sub
sbb
pop
mov
push
out
clc
xlat
push
loope
jno
or
dec
lcall
inc
pop
xchg
roll
mov
mov
jl
adc
ss
sub
dec
push
add
sbb
jno
loop
xchg
test
mov
and
add
fdivs
mov
xlat
mov
push
or
xor
inc
test
mov
or
mov
lret
inc
jmp
push
push
adc
push
jmp
push
inc
cmp
sbb
adc
xlat
cmp
jmp
bound
rcl
dec
hlt
and
mov
jmp
jno
call
mov
jg
or
pop
cmp
pop
sub
sub
lcall
push
inc
call
sbb
outsb
sbb
add
in
stos
jp
out
js
sbb
push
lahf
dec
rolb
adc
and
test
sub
stos
pop
adc
xchg
cli
les
gs
cmp
fucom
cmp
pop
push
mov
or
push
insl
mov
lods
jge
push
adc
adc
lock
and
xor
shlb
mov
btr
push
stos
pop
icebp
call
mov
stc
insl
push
xor
jbe
add
jo
data16
dec
xchg
add
add
and
or
mov
scas
push
shlb
pop
and
aam
push
xor
sub
push
push
dec
and
aam
push
call
push
cli
xchg
push
jo
mov
inc
inc
loop
js
sbb
jb
and
cmp
xor
icebp
cwtl
bound
std
inc
cmp
cmpsb
push
cmp
divb
adc
fdiv
sbb
or
pop
out
sbb
cmp
adc
bound
lds
mov
adc
inc
mov
sub
test
sub
cmp
jg
cmp
jl
push
rclb
mov
dec
xchg
loopne
or
inc
orl
fnstsw
jb
jae
inc
roll
pop
mov
sbb
pop
or
vmovlpd
push
gs
js
adc
mov
stos
test
sub
rcr
sbb
mov
js
adc
popa
add
sbb
adc
int3
push
sbb
loop
scas
enter
xchg
test
scas
lcall
inc
pushf
sbbb
inc
adc
into
mov
clc
inc
dec
push
scas
add
inc
or
mov
int
aaa
test
push
inc
cltd
lods
punpckhdq
addb
or
xor
adc
js
addb
mov
adc
testb
cmp
orl
or
mov
sbb
subb
push
aad
cwtl
or
shll
roll
ljmp
ret
adc
cmp
xchg
adc
push
arpl
ret
scas
adc
xchg
enter
inc
push
and
jecxz
sbb
jmp
cmp
cmovae
dec
inc
cmp
pop
cmpsb
nop
incb
in
nop
sub
test
aam
repnz
push
cwtl
test
xchg
add
js
mov
mov
dec
adc
inc
jp
or
loop
sbb
pop
mov
insb
add
inc
jo
jb
repnz
sub
sub
lea
push
dec
in
enter
dec
add
dec
mov
xor
enter
loope
jo
shl
sbb
fiaddl
pop
and
ret
xor
jmp
scas
rcll
or
fistps
jg
add
ljmp
pop
sbbb
push
es
and
mov
aam
mov
ret
inc
sbb
add
adc
push
rcll
imul
sbb
dec
mov
xor
out
inc
cmp
iret
jecxz
test
sbb
push
insb
cmpsl
call
test
push
rcll
pushf
add
mov
mov
mov
mov
in
int3
add
lcall
jo
dec
aas
mov
adc
mov
and
orl
in
inc
nop
mov
fmulp
add
inc
mul
adc
sub
xor
add
pop
xchg
roll
or
adc
add
pop
sbb
inc
stc
jnp
or
push
cmp
cmp
inc
push
cmp
push
push
push
in
sti
das
mov
pop
add
adc
pop
xor
pusha
scas
or
sarb
push
ficoms
insb
mov
push
add
cmpsb
xchg
cwtl
into
int3
sbb
push
and
dec
and
movsl
arpl
lds
or
imul
fnstenv
mov
add
addl
and
xor
movsl
cmp
and
xchg
mov
jbe
mov
xor
or
loopne
mov
pop
enter
or
add
pop
xor
pop
push
xor
ljmp
insl
dec
xchg
test
lock
rcrb
cmp
in
aas
loope
add
mov
inc
scas
scas
mov
cmp
mov
les
mov
pop
adc
push
fsubrs
cmp
push
mov
lret
jb
adcb
cmp
in
and
lret
adc
ljmp
add
inc
jmp
loopne
mov
add
icebp
sub
push
mov
sub
mov
cmp
ficoms
sarb
clc
push
call
repnz
lds
out
push
jo
les
cmp
mov
add
and
push
addl
add
add
mov
push
add
xor
mov
or
or
sbb
adc
popf
cwtl
mov
xor
sti
loop
fsubrl
dec
addb
pop
ret
cs
pop
les
adc
sub
mov
cmp
pop
push
cmp
and
rep
or
jb,pn
addb
aad
mov
pop
loop
sub
shlb
push
adc
lods
mov
pushf
jae
sub
mov
shrl
mov
insb
cmpsl
push
icebp
push
ret
pop
jbe
incb
adc
lods
add
rcl
or
pushf
inc
aam
xchg
adc
adc
xchg
push
cmp
je
push
jb
push
rsm
pop
inc
and
adc
add
stos
js
sahf
stc
into
ret
cli
add
mov
adc
pop
cmpsb
xchg
mov
fiaddl
subl
mov
leave
test
and
lock
sub
inc
jno
sbb
dec
add
xlat
arpl
and
mov
loop
inc
pop
sub
adc
adc
add
and
xor
dec
movsl
jne
push
icebp
js
jno
push
xor
jge
push
xor
stos
push
hlt
cmpsb
and
push
jo
or
out
fcmovnb
mov
adc
fsubr
add
sarl
lret
adc
test
movb
xlat
push
js
inc
inc
and
xchg
call
or
ljmp
jge
mov
in
and
push
dec
iret
cmp
inc
inc
orl
inc
xchg
add
jle
adc
add
inc
lret
les
pop
add
pop
push
ljmp
loope
shll
fcomps
and
add
and
push
push
dec
sub
adc
aam
inc
mov
and
test
pop
pop
mov
adcb
push
add
xchg
adc
and
mov
lret
hlt
add
adc
mov
gs
enter
fisttpl
call
fwait
add
mov
xor
inc
rcrl
sbb
sbb
adc
jo
cmp
or
inc
pop
adc
and
cld
rolb
sub
sbb
pop
cmpsl
add
je
mov
jnp
push
sbb
mov
roll
out
adc
das
sbb
lret
sarb
dec
andb
xor
or
adc
push
shlb
mov
inc
xor
mov
out
in
mov
cmp
mov
mov
in
lods
rorb
mov
mov
pop
sub
inc
enter
add
add
or
clc
sbb
mov
inc
out
inc
and
stos
push
sahf
xor
mov
fdivrl
arpl
mov
jge
orb
jle
call
jg
pop
xchg
loope
inc
add
inc
push
hlt
jb
and
out
dec
push
aaa
testb
or
xor
mov
mov
push
cmp
scas
mov
sub
cmp
xor
jnp
sub
insl
shrl
add
sub
mov
xor
or
ret
sub
mov
arpl
pop
leave
or
push
mov
cmp
pop
adc
pusha
push
repnz
cmp
cmp
or
movsl
cmp
fwait
sub
xorb
xchg
push
mov
mov
or
cwtl
js
movsb
adc
jecxz
xor
adc
inc
cld
jg
cmpsb
cmpsl
fstps
mov
adc
sar
mov
inc
jge
test
inc
out
addr16
addb
nop
push
mov
test
sbb
les
daa
add
lret
sbb
add
hlt
mov
aam
popl
mov
jle
adc
loopne
repz
or
popa
mov
leave
mov
add
mov
push
mov
roll
pop
lds
fiaddl
loopne
das
loope
stc
adc
divb
lock
sbb
push
lock
xchg
jo
popf
sahf
pop
loop
lods
data16
mov
test
adc
mov
dec
jecxz
sbb
out
rcll
or
inc
inc
subb
icebp
sub
cmpsb
lock
cmc
bound
scas
in
and
ret
fwait
add
push
push
sbb
fnstsw
mov
rolb
es
inc
xchg
xchg
xor
xor
stos
in
push
and
push
xor
rolb
pusha
fsubs
lret
mov
ljmp
aam
subl
movsl
or
out
pop
xchg
mov
outsl
sub
out
push
sub
leave
sbb
pop
scas
rcrb
inc
das
mov
leave
dec
adc
dec
fcmovnb
adc
add
push
jno
add
sbb
inc
mov
mov
and
adc
pushw
or
jl
push
scas
cmp
add
push
stos
hlt
push
mov
jo
aaa
les
add
sub
ljmp
add
adc
out
xchg
and
xchg
jo
and
shrb
push
add
mov
add
adc
sub
popa
mov
push
ljmp
add
sbb
xchg
pop
sub
push
aam
lcall
xor
mov
leave
adc
and
or
repnz
popf
icebp
repz
cmp
mov
popl
push
mov
cli
es
adc
sarl
mov
das
or
mov
or
inc
sbb
sub
mov
subb
popa
jmp
xor
mov
cmp
push
insb
test
sbb
and
push
dec
aad
subb
push
add
mov
in
orl
fwait
mov
mov
addb
orb
and
out
xchg
xor
rorb
inc
cmpsb
mov
es
lds
fsts
test
push
pusha
mov
add
push
dec
mov
push
leave
adc
pop
jg
xchg
or
fwait
mov
fcoms
mov
add
push
add
add
mov
xchg
leave
aam
mov
shlb
sti
and
bound
mov
and
mov
mov
gs
xor
inc
xor
iret
add
adc
pushf
mov
mov
push
mov
xchg
sub
push
and
pop
or
mov
adc
mov
and
icebp
push
or
jecxz
push
mov
jne
pusha
enter
test
nop
jae
jg
clc
add
inc
sbb
xchg
push
mov
cmp
push
or
mov
mov
test
mov
mov
fisubl
adc
lcall
inc
addl
hlt
inc
popa
adc
xor
call
xor
push
add
rcl
sbb
in
adc
aam
add
or
mov
add
jo
sbbb
outsl
pushf
cmpsl
cmp
adc
leave
mov
add
stos
sbbb
outsl
and
xlat
adc
push
or
movsl
in
lcall
push
mov
sbbb
jo
cmp
sbb
addl
adc
stos
cmp
add
and
icebp
inc
call
push
movb
mov
mov
jecxz
pop
inc
mov
or
push
shlb
mov
mov
cmp
hlt
sbb
mov
das
loop
adcl
inc
jo
cmpsl
sbb
mov
test
and
xlat
xchg
jo
mov
adc
daa
mov
ljmp
and
imul
push
in
xor
ficompl
cmp
fs
push
or
sub
test
aam
mov
and
arpl
shrb
xor
push
das
inc
inc
jp
xor
jo
sbb
adc
push
test
add
sbb
rcll
leave
inc
adc
das
das
jg
add
test
aam
push
xor
rolb
les
dec
popf
icebp
or
sub
or
xchg
dec
pop
adc
in
pop
dec
xchg
add
es
sbbb
jns
cmp
push
or
fdivrl
or
rolb
mov
mov
add
xchg
mov
dec
imul
adc
push
leave
ret
das
loop
pusha
push
or
loopne
dec
or
ja
nop
test
inc
adc
push
aaa
and
lods
jnp
icebp
add
ret
inc
jo
enter
test
push
mov
loopne
sbb
sti
or
sub
sbb
xor
scas
add
shll
xchg
outsl
test
mov
and
push
insb
aad
aad
sbb
fsubs
jl
jg
add
aad
pop
add
addl
inc
jmp
addr16
inc
adc
or
and
in
shlb
mov
mov
dec
dec
iret
cmc
insb
jge
add
mov
push
aaa
repnz
cmp
adc
cmp
mov
leave
fs
test
or
les
pop
popa
clc
ret
hlt
inc
xor
or
or
ss
or
or
lcall
dec
into
cs
adc
pop
mov
bound
add
call
xor
mov
dec
adc
in
pop
testb
test
push
movsb
sbb
adc
inc
or
sbb
and
and
mov
rorb
fiadds
fst
push
adc
mov
adc
add
hlt
xchg
push
xor
xorl
push
or
mov
pop
add
bound
in
mov
shlb
mov
mov
mov
inc
xchg
icebp
adc
stos
sub
xor
xchg
addr16
lock
jne
into
add
shlb
add
jle
sbb
dec
inc
add
xor
es
pop
int3
mov
cmp
and
test
divb
scas
sub
sub
inc
andb
mov
and
ja
adcb
imul
rorl
dec
xchg
stc
sbb
xor
inc
adc
xchg
add
push
lods
ljmp
or
dec
cmp
lret
sahf
push
scas
pop
pushf
xchg
pop
cmp
cmp
stos
loop
mov
mov
dec
xor
sahf
out
inc
mov
mov
test
mov
sbb
das
aaa
shl
fcomip
mov
add
add
shll
jnp
fidivrs
mov
ret
and
add
or
xlat
and
repz
inc
jne
sub
add
xor
fmull
in
jo
adc
test
inc
push
stos
jge
add
cmpsl
push
mov
add
push
lods
mov
jnp
and
xchg
and
clc
lahf
bound
and
shll
aad
xor
gs
adc
mov
jns
cli
or
or
push
adc
adc
or
test
pushf
test
mov
sbbb
fs
sub
icebp
mov
cli
and
adcb
jb
lds
adcb
inc
movsl
jo
lea
dec
push
movsl
in
xchg
mov
pop
push
push
cmp
fwait
rcrb
mov
jp
push
adc
jo
cmp
pop
add
mov
push
xchg
xchg
stos
add
daa
loopne
xlat
iret
cmp
orb
daa
std
push
lock
xor
push
std
test
adc
inc
std
test
xor
cmpsl
push
loop
and
jle
popf
mov
inc
movsl
scas
rol
mov
shlb
mov
test
out
cmp
cmovp
ljmp
sub
inc
add
xor
int
push
xor
sub
mov
loope
push
data16
loopne
inc
repnz
mov
push
shl
data16
adcl
andb
jnp
inc
mov
xchg
inc
stos
sub
mul
mov
cmp
shrl
xchg
cmc
mov
add
addr16
mov
addb
sbb
mov
or
inc
sbb
lret
popa
push
push
and
pop
adc
push
pusha
mov
or
and
adc
ret
or
add
sub
jne
push
aaa
push
mov
or
push
fistpl
lret
adc
push
push
add
dec
mov
repz
adc
xchg
cli
xchg
dec
andb
and
rolb
jmp
adc
mov
or
loop
or
dec
adc
or
jo
mov
mov
xor
cs
das
fwait
xchg
adc
nop
xchg
xchg
imul
mov
inc
add
add
sub
and
push
arpl
xor
push
lret
je
andb
push
psubd
mov
adc
fldl
inc
sahf
sbb
bnd
bound
adc
push
int
enter
enter
xor
dec
cmc
add
dec
leave
mov
fcoml
in
push
test
sbb
pop
ret
mov
or
lahf
push
int
subb
add
mov
add
cmpsl
mov
aam
int
scas
inc
cmp
bound
dec
lock
mov
sbb
inc
push
aam
movsb
and
or
adc
or
jl
adc
dec
sbb
stos
dec
jl
negl
adc
jp
push
adcb
xchg
add
push
aaa
ljmp
dec
adc
xchg
jo
inc
and
shr
stc
stos
add
ffree
cli
les
and
push
push
mov
and
mov
mov
xor
jne
jecxz
lods
sbb
fisubl
nop
mov
adc
lcall
xor
ficompl
jo
xchg
loop
push
nop
mov
adc
or
pmullw
test
mov
xor
push
xchg
pop
insb
mov
add
daa
loop
pop
inc
xchg
mov
pop
repz
or
adc
rcrb
push
xchg
pop
ret
lret
cs
cmp
pop
xchg
loopne
mov
leave
loop
lret
int3
adc
pusha
call
test
int
dec
loope
add
mov
add
jae
push
xor
gs
call
popa
aam
cmp
mov
jmp
jbe
xchg
scas
inc
add
sub
adc
push
xor
push
cltd
cmp
mov
inc
mov
push
mov
xor
sbb
stos
add
in
push
and
test
cmp
xor
mov
stos
push
jno
or
mov
mov
sub
mov
or
pop
les
push
xchg
imul
rcl
adc
cwtl
xor
adc
push
mov
mov
lcall
in
add
mov
ficomps
pop
dec
push
cs
ljmp
and
pusha
inc
shrb
adc
enter
pop
mov
rclb
stos
add
mov
push
inc
and
xor
adc
inc
bnd
adc
sbb
adc
pop
jne
mov
call
lods
int
dec
adcb
rcll
xor
enter
pop
test
jmp
jo
push
or
adc
rcll
arpl
sub
pushf
add
sbb
adc
or
or
aam
push
icebp
adc
xchg
adc
test
jmp
loope
data16
stos
push
push
mov
add
ror
lcall
add
push
mov
das
pop
xchg
mov
ljmp
push
jno
push
inc
and
test
jb
xorb
ljmp
or
cmp
mov
push
fcompl
sbb
fnsave
loopne
add
mov
mov
add
sub
inc
mov
jae
aad
push
insl
push
adc
loopne
in
add
push
sbb
sub
lods
add
out
jge
jl
call
daa
lock
mov
sub
rcll
ret
cmpsb
test
loop
pushf
mov
loopne
int
adc
sub
or
loopne
mov
mov
ljmp
subb
mov
add
jo
call
scas
jb
stos
xor
subl
or
xchg
mov
loopne
scas
inc
in
jo
sub
das
sub
pop
cmpb
js
dec
lret
mov
sbb
test
in
mov
mov
jmp
andb
icebp
and
push
lock
xchg
pop
sbb
inc
cmp
ljmp
cmp
testb
push
aad
and
sbb
into
add
inc
repz
or
mov
test
sbb
hlt
sub
sbb
inc
test
sbbl
jge
add
or
cmp
imul
test
shlb
mov
add
cmp
test
icebp
xorl
push
aam
scas
mov
xor
adc
xor
sub
inc
call
in
fistps
mov
push
sahf
lods
es
lods
repz
lds
inc
mov
sub
add
movsb
lods
sub
sahf
sbb
inc
mov
imul
pop
les
xchg
dec
push
push
xlat
add
notb
jecxz
xorb
rorb
insb
dec
int
or
push
jmp
sarl
bound
pop
push
adc
push
bound
xor
inc
adc
stos
add
mov
or
xor
pop
jmp
xchg
lahf
or
popa
add
sbb
cmpsl
addr16
loope
shl
inc
sbb
lcall
mov
mov
push
movsb
es
rol
pop
pop
pop
aam
or
sbb
and
or
jne
xor
pop
pop
loop
fwait
rcrl
lret
lods
push
mov
sub
push
push
data16
sbb
add
enter
mov
popf
and
xchg
leave
mov
mov
rep
or
mov
icebp
or
jp
jle
aaa
push
je
push
xor
or
inc
sub
in
kmovw
lcall
jnp
xchg
push
fs
fsubrl
hlt
mov
jge
xchg
dec
int
and
call
xchg
pop
mov
adc
or
sbb
std
mov
leave
add
enter
push
shll
adc
xchg
cltd
fdiv
mov
cmp
or
mov
shrl
imull
or
or
cmp
adc
add
test
jnp
jo
push
pop
xchg
and
movlps
fdivrs
insb
adc
push
js
js
inc
icebp
fiadds
push
ret
roll
xlat
inc
mov
rclb
jp
sbbl
add
sbb
lock
push
pop
cmp
cli
rcrb
xor
out
jae
rolb
pop
push
out
sbb
testl
cmp
cmp
imul
adc
or
mov
adc
lcall
aad
add
jo
sbb
mov
aas
mov
orl
aas
ljmp
popa
lcall
push
aad
and
mov
or
ljmp
mov
mov
insb
xchg
inc
popf
lock
mov
push
or
inc
or
jne
cltd
sub
or
inc
xor
add
dec
jp
adc
mov
push
push
adc
subb
xchg
lock
lock
push
or
jae
mov
imulb
push
repz
les
shl
shrl
mov
dec
or
push
pop
and
test
adc
and
push
mov
inc
enter
rorl
mov
and
icebp
sbb
ret
into
mov
fwait
cmpsb
adcl
push
stc
jne
pop
add
pop
aam
add
js
sub
sbb
jae
mov
imul
subb
orb
push
iret
lret
and
loope
or
pavgb
nop
shrb
nop
or
xlat
sbb
bound
push
mov
enter
stos
in
lds
fsubl
mov
adc
add
ret
mov
iret
xor
scas
pop
inc
daa
adc
enter
sbb
pop
rcrb
add
pushf
or
sub
xchg
mov
mov
imul
lret
hlt
adc
andb
add
mov
sub
adc
or
xchg
jo
xchg
sbb
dec
enter
insl
dec
sub
dec
add
push
ret
or
pop
mov
adc
adc
testb
and
xchg
sbb
inc
sub
loopne
jns
lods
add
call
or
pushf
or
popa
and
adc
imul
inc
fwait
dec
sub
inc
xchg
leave
or
jae
push
dec
push
mov
sub
mov
mov
out
jo
dec
stc
addb
das
dec
sbb
ror
sub
cmp
mov
push
push
pop
mov
add
jns
fld
pop
test
in
mov
and
rcll
mov
dec
add
hlt
adc
and
add
push
xor
scas
xorb
inc
add
push
sbb
cmp
loope
and
xor
or
jo
mov
sub
xchg
add
push
test
lods
xor
push
fs
adc
or
or
sub
mov
push
leave
scas
push
mov
xchg
icebp
and
js
dec
outsl
popa
add
inc
ret
mulb
xor
test
jb
lret
adc
sbb
fildll
inc
jb
pusha
push
leave
mov
mov
mov
sub
or
jmp
adc
rorl
ss
cli
daa
or
jo
rclb
aad
adc
int
cld
in
sbb
and
push
pop
mov
leave
pop
push
sub
or
push
test
sbb
add
int3
or
rolb
push
mov
shrb
sbb
test
cmp
push
scas
mov
popf
hlt
jp
out
push
repnz
rclb
mov
mov
adc
inc
sub
sbb
test
or
push
loope
adc
pop
icebp
enter
push
cmp
inc
aad
rcrb
adc
add
pop
int
mov
and
and
out
pop
cmp
adc
pop
pushw
subb
inc
sub
fsubrp
sub
push
mov
jle
cmp
scas
shrb
mov
jne
out
or
pop
push
pop
xchg
mov
pop
mov
inc
pusha
orb
push
cmpb
rcrb
jo
sbb
inc
and
test
sbb
add
cwtl
stc
inc
lock
enter
dec
add
decb
mov
xor
push
aam
adc
cmp
cmp
cmpps
jb
sbb
and
pop
adc
andl
push
ja
mov
cli
adc
adc
or
lds
xchg
shlb
mov
in
repz
or
cltd
std
push
loop
into
jae
ret
test
scas
inc
sbb
mov
mov
insb
pushf
xor
sub
popa
sbb
add
push
movsb
mov
xchg
pushf
xchg
adc
mov
inc
cmpsb
mov
js
cs
add
push
shlb
push
pop
sbbb
clc
sbb
xor
push
mov
icebp
mov
adc
push
das
adc
adc
push
pusha
and
jo
sub
dec
pusha
stos
aad
dec
leave
xorl
cmpsb
jb
iret
pop
scas
pop
test
js
xchg
and
lods
rorb
push
pop
push
sbb
subl
push
push
popa
insb
and
aad
adc
mov
xlat
adc
xor
cmp
das
lcall
out
sub
inc
push
clc
cmp
xlat
jnp
loope
push
xor
adc
pop
xor
test
pop
adc
sti
push
lahf
adc
push
pop
shl
adc
xor
sarl
sbb
or
push
mov
jp
cwtl
lcall
mov
pop
pop
ret
lea
pop
cmp
gs
js
lock
xor
in
add
icebp
push
cli
push
pop
sar
lock
cmp
or
and
lahf
or
adc
and
mov
push
mov
sbb
lcall
add
add
cmp
rcll
mov
int
jnp
inc
xchg
leave
add
or
adc
xor
mov
loopne
xor
pushf
ss
ja
les
pop
ret
push
push
adc
pop
cmpl
rcl
fcmove
jo
or
sbb
xchg
or
and
and
daa
add
vmptrld
sbb
mov
in
arpl
xchg
mov
mov
sub
jecxz
xlat
sbbb
sub
sub
or
shlb
or
ret
jne
add
addb
push
sub
xorb
push
dec
stos
into
stos
xor
jae
pop
jmp
in
scas
xor
mov
loope
inc
fildll
rol
cmc
adc
push
jp
and
cmp
and
mov
sti
adcb
int
jg
push
adc
adc
cmp
out
rolb
scas
xchg
push
mov
adc
inc
enter
shlb
test
mov
or
arpl
jo
ret
pop
subb
push
cmp
daa
fs
jl
enter
add
or
mov
xor
sbb
push
mov
sbbl
test
pop
mov
mov
sbbb
leave
adc
pop
dec
scas
add
dec
xchg
roll
jno
xchg
push
lds
popa
sub
mov
mov
sbb
add
js
and
add
lea
mov
mov
xor
mov
shl
cmp
das
mov
sarb
mov
sub
movl
add
out
mov
pop
pop
rorb
idivb
sub
call
stc
add
iret
pop
jle
inc
xchg
mov
jg
iret
lahf
aas
popa
mov
mov
inc
or
cld
stc
repz
add
xor
mov
lahf
aas
jg
cs
data16
neg
out
jl
add
adc
mov
and
aas
jg
adc
xchg
movsb
mov
mov
and
inc
stc
repz
ret
icebp
sbb
mov
pop
push
add
jg
cld
sub
xlat
loopne
xchg
lret
mov
cmpsb
idivl
iret
lahf
aas
adc
dec
or
sub
cmp
std
jg
jg
cld
stc
dec
sub
nop
jno
lahf
jnp
dec
movsl
mov
out
lahf
aas
mull
lcall
xchg
cld
stc
repz
pop
push
cmp
aad
rorb
sub
iret
lahf
aas
jg
dec
jns
dec
stc
femms
std
adc
jns
stc
repz
push
jne
shrb
mov
lahf
aas
jg
jmp
sub
pop
rorl
and
jge
repz
ss
cmp
dec
sub
cmpps
nop
aas
jg
cld
int3
inc
add
inc
fcoml
stos
xchg
lcall
iret
lahf
mov
lcall
add
aaa
jg
cld
stc
jnp
insb
arpl
mov
andb
or
in
out
lahf
aas
cmp
add
jecxz
cld
stc
repz
cmp
pushf
bsr
nop
push
xchg
ror
sub
lods
xchg
push
pop
sub
loope
imul
stc
repz
je
jb
sub
pop
push
pop
adc
jg
ficoml
cmp
cmp
pop
sub
out
mov
adc
mov
xlat
inc
or
aas
jg
cld
aam
jg
decb
sahf
and
mov
repz
lahf
daa
icebp
loop
jle
mov
jge
jg
cld
stc
test
push
mov
push
and
iret
lahf
aas
add
testl
mov
out
movl
mov
iret
lahf
aas
jg
cs
incb
push
and
repz
cld
stc
repz
xlat
mov
int
nop
repz
aad
jo
aas
jg
push
scas
xchg
xchg
sbb
dec
iret
jo
mov
cmpsb
mov
pushf
add
scas
outsl
aas
jg
cld
dec
test
jle
fcmovne
pop
and
repz
lahf
or
testb
daa
jmp
cld
stc
adc
fsts
jg
inc
add
iret
pop
sbb
xor
add
arpl
cld
stc
repz
push
mov
cmp
cmp
jg
jmp
jno
rorl
xlat
add
imul
rcrl
ficompl
adc
scas
adc
jl
cld
stos
fsubrl
mov
pop
nop
cmc
add
out
mov
dec
mov
roll
mov
das
sbb
mov
sbb
cmp
out
lahf
aas
fisubrl
jnp
xor
sar
stc
repz
sahf
int3
loope
shrb
std
mov
lahf
aas
jg
test
subb
mov
adc
stc
repz
xchg
dec
leave
inc
inc
dec
ret
rcll
lahf
aas
jg
and
pop
add
testb
xor
in
out
test
repz
and
cmpsl
xchg
in
jg
cld
outsb
gs
add
stos
icebp
and
sbb
iret
lahf
dec
push
pop
push
push
out
imul
cld
stc
fists
mov
movsl
sub
fucom
iret
lahf
aas
xor
bound
dec
enter
fisttps
cld
stc
repz
inc
push
movsl
and
jmp
dec
lahf
aas
jg
xor
popf
repz
bound
es
popa
pushf
call
push
and
lret
xor
repnz
repz
adc
jns
xor
nop
stos
stos
lcall
cld
cld
dec
cmpl
add
rclb
out
lahf
decb
adcl
jb
gs
loop
jg
cld
stc
mov
aad
aad
std
push
inc
jb
scas
and
iret
lahf
aas
add
mov
adc
sar
stc
repz
xchg
into
mov
adc
hlt
mov
aas
jg
sub
insb
mov
jns
pushl
xchg
or
xrelease
iret
lahf
cld
or
pusha
cmp
push
je
dec
out
jg
cld
stc
push
jg
mov
movsb
aas
pop
cmpsb
add
jge
iret
lahf
aas
pop
stc
xor
and
icebp
enter
cld
stc
repz
xchg
test
shlb
or
lahf
aas
jg
cmp
sub
cld
stc
repz
xchg
or
jg
filds
and
mov
aas
jg
adc
test
add
mov
fcmovnb
dec
stc
repz
pop
imul
push
mov
sbb
cld
jg
repz
inc
lret
call
inc
jecxz
dec
mov
sub
jle
mov
mov
cld
stc
lret
jbe
xor
shll
push
aas
jns
jae
repnz
dec
in
ljmp
adc
stc
rep
push
popa
fsts
pop
jae
xchg
jg
or
mov
and
mov
mov
push
outsb
aas
jg
cld
stc
std
or
mov
scas
cs
fwait
push
pop
push
enter
iret
lahf
aas
jecxz
sub
jne
push
xchg
cld
stc
repz
aaa
sub
lods
mov
out
xchg
mov
inc
aaa
inc
gs
cld
stc
repz
stos
insl
popa
shlb
mov
pop
inc
iret
lahf
aas
jg
push
mov
jns
xchg
out
int
das
sub
jg
sbb
cmp
xchg
or
aad
stc
repz
rorb
aam
mov
icebp
ds
inc
aas
jg
cld
outsb
or
out
dec
testl
add
lahf
mov
fs
cmp
jo
rcll
xor
cld
and
iret
lahf
aas
pop
ja
add
inc
dec
pop
xor
hlt
jle
cld
stc
repz
add
xlat
jns
popf
bsr
iret
lahf
aas
jg
or
lret
push
out
movsb
cld
stc
repz
cmp
jle
in
jl
aad
pushf
fiadds
mulps
xor
jno
jbe
jge
stc
repz
inc
adc
and
aam
aas
jg
cld
add
pushf
pop
dec
add
mov
pop
xor
insb
pop
test
add
fisttpll
jge
cld
stc
push
jns
xlat
cwtl
push
jae
sti
in
gs
rcrb
out
lahf
aas
push
mov
push
add
adc
cld
stc
repz
xor
sbb
idivb
loope
pop
cmpsb
iret
lahf
aas
jg
mov
pushf
push
and
addr16
cld
sti
in
insl
fistps
mov
sbb
daa
cmp
cwtl
mov
aas
jg
mov
push
inc
pop
xchg
or
int
stc
repz
aam
loopne
sbb
mov
in
push
mov
mov
cld
xor
mov
ss
shl
iret
lahf
jg
daa
sub
stos
outsl
pop
dec
pop
loop
imul
cld
stc
repz
inc
das
jge
hlt
aaa
test
rcrb
lahf
aas
jg
lret
scas
xor
add
arpl
jmp
xchg
insl
pop
xlat
fiaddl
adc
dec
jg,pt
ficomps
lds
cld
mov
lret
or
inc
pop
add
iret
lahf
aas
mov
adc
stos
aad
xchg
ss
pushf
inc
cld
stc
repz
cld
adc
negl
sbb
or
xchg
pop
popa
adc
mov
stc
repz
inc
pop
add
push
dec
movsl
push
out
lahf
ds
out
dec
mov
orb
repz
push
sub
rcll
popa
fcmovbe
lahf
sub
xchg
es
lahf
aas
jg
pop
icebp
pop
adc
adc
insl
iret
cs
pop
out
imul
add
nop
pop
out
xlat
insl
adc
repz
insl
xor
xor
imul
daa
loope
xor
xor
repz
sub
sbb
repz
int3
js
sbb
cld
ljmp
in
xor
jmp
iret
lahf
push
xor
mov
stc
sarl
pop
lods
ljmp
push
out
lahf
aas
sar
jp
lock
jmp
test
pop
and
repz
insl
pusha
pusha
jg
nop
cwtl
lahf
out
lahf
jg
test
ret
mov
cld
stc
repz
das
mov
sbb
iret
imul
aas
jg
lea
add
and
fmuls
cld
stc
repz
int3
rol
pop
pushf
ret
pusha
push
xchg
aam
push
xchg
lahf
aas
jg
scas
jge
fdivs
cmp
filds
mov
pop
push
cld
stc
repz
mov
call
cmpsb
xchg
int3
mov
or
add
in
jne
addr16
mov
iret
and
inc
push
popa
stos
fs
jp
aas
jg
es
mov
sub
ljmp
stc
repz
sub
add
stc
xchg
sub
mov
aas
jg
cld
jg
dec
imulb
cmp
repz
out
nop
sbb
adc
push
inc
test
cld
pop
stc
and
add
dec
sub
je
out
lahf
cld
jns
scas
mov
jnp
fs
jg
cld
stc
pusha
ficoms
adc
movsb
fbld
je
out
lahf
aas
ret
js
and
test
pop
or
cld
test
pop
pop
pop
cwtl
pop
xchg
jle
out
mov
jmp
lds
scas
loop
and
xor
repz
lahf
jbe
movsb
shr
cwtl
fstl
lods
rolb
add
jmp
push
mov
stc
repz
dec
addr16
jns
adc
xchg
cmp
iret
lahf
aas
jg
clc
movd
std
cs
stc
repz
mov
cltd
loopne
aam
push
mov
cmc
flds
jnp
aas
jg
mov
ljmp
xrelease
out
xor
dec
dec
pop
and
sti
push
xor
aas
jg
cld
xlat
and
subb
test
jecxz
jns
pop
repz
lahf
push
pusha
and
and
lahf
adc
jg
cld
stc
sbb
hlt
cmpsb
lods
scas
adc
cld
enter
lahf
aas
xor
push
xchg
adc
out
inc
or
repz
mov
push
ss
iret
cmp
cmp
xor
or
lahf
aas
jg
fnstenv
mov
xchg
hlt
not
ret
cmp
stc
repz
adc
pop
mov
pusha
and
cltd
mov
mull
dec
push
xchg
mov
pop
les
mov
mov
lods
addb
jg
cld
inc
mov
and
cwtl
xchg
or
shr
out
lahf
pop
push
leave
mov
shll
add
stc
cs
leave
icebp
lret
sbb
arpl
lahf
aas
pop
lods
pop
push
cmp
and
push
stc
repz
out
cs
insb
or
push
pop
aas
jg
cld
push
lcall
push
in
lret
cmpsl
cld
pop
sahf
cmpsl
jmp
ret
mov
iret
lahf
aas
jg
test
lods
cmpsb
cli
stc
jl
sahf
mov
cld
stc
repz
adc
hlt
loop
xchg
adc
gs
aas
jg
andb
jle
adc
repz
test
mov
xchg
negl
aas
jg
cld
out
sbb
mov
fildl
ss
iret
lahf
push
cmp
push
cltd
fwait
lock
aas
jg
jl
sbbl
adc
cmc
mov
out
lahf
xchg
scas
xchg
nop
icebp
outsb
bound
adc
push
gs
cld
stc
lds
pop
data16
pop
bnd
iret
fs
lahf
aas
lods
mov
cmc
test
sahf
mov
push
mov
flds
push
hlt
pusha
rorl
clc
and
jg
pop
xor
adc
out
mov
jg
add
cwtl
daa
loopne
jmp
push
adc
aas
adc
cld
stc
or
inc
or
loop
xchg
outsb
gs
sub
in
pop
lahf
mov
stos
imul
stc
repz
imul
ja
imul
cltd
pop
xchg
push
sarl
lahf
xchg
out
adcl
je
xor
repz
rcr
sbb
in
mov
fdivrs
jg
cld
shrb
cmp
sbb
mov
and
sbb
sbb
arpl
repz
call
jle
sti
and
std
push
pop
mov
adc
scas
fs
repz
mov
repz
lahf
cmpsl
stc
add
xchg
lcall
jg
cld
stc
adc
aaa
mov
jae
pusha
mov
ljmp
pop
jp
push
fdivr
cld
stc
repz
cs
test
sarb
iret
lahf
aas
jg
cmp
add
xchg
ficoms
mov
nop
out
cmc
stc
xor
iret
cmp
mov
mov
test
dec
adc
aas
jg
shlb
int3
test
cmpb
iret
mov
mov
xchg
pop
mov
add
push
shlb
dec
inc
and
dec
jae
repnz
incb
movsb
and
aas
fimull
dec
mov
nop
xor
mov
sahf
cwtl
aaa
pop
and
stc
rep
sbb
push
jo
cmp
scas
rol
repz
jg
cld
or
inc
adc
mov
mov
clc
ss
lahf
stc
ds
or
fstpt
stc
cld
stc
and
jecxz
push
push
in
inc
mov
pop
int3
lods
call
sub
dec
iret
lahf
aas
jg
mov
cli
inc
popa
xor
scas
shl
stc
repz
repnz
stos
lock
sbb
xor
push
pop
movb
fwait
sub
out
lahf
aas
sbb
add
push
xor
cld
stc
repz
mov
adc
cltd
std
icebp
iret
lahf
aas
jg
mov
dec
inc
cmp
cld
stc
repz
repnz
push
decb
ja
cmp
fstpl
adc
stc
lahf
aas
jg
pushf
mov
outsb
sub
cmp
iret
dec
add
xchg
shl
cld
mov
jg
cld
iret
xchg
out
popfw
xchg
inc
mov
lods
push
out
lahf
xor
sarl
rolb
cld
stc
in
aam
or
push
or
adc
out
lahf
aas
out
sbb
cltd
dec
pop
ja
pop
aad
cld
stc
repz
or
fldt
pop
push
adc
mov
mov
add
sbb
out
lods
bound
into
pop
jl
out
jo
jle
lds
jle
mov
aad
adc
and
sbb
inc
outsb
pushf
xchg
int3
push
xlat
fcmovnu
and
sti
ljmp
cmc
jl
in
je
sti
iret
lahf
aas
ljmp
mov
inc
iret
pusha
cmpsl
adc
or
adc
stc
repz
inc
and
adc
ret
in
lahf
aas
jg
inc
mov
pushf
movsl
les
stc
repz
add
fldenv
sbb
sbb
inc
aas
aas
jg
cld
xor
test
push
xchg
cwtl
daa
loopne
jmp
add
aas
adc
shlb
inc
or
xchg
mul
div
out
lahf
mov
cmp
les
xor
stc
ss
dec
jg
cld
stc
xor
pop
cmp
daa
mov
lcall
out
lahf
aas
arpl
bound
out
bswap
inc
jmp
adc
cld
stc
repz
inc
and
adc
fildl
fwait
jae
clc
iret
lahf
aas
jg
pop
sbb
loopne
pop
jmp
cld
stc
repz
out
lret
or
lods
repnz
xlat
lahf
aas
jg
and
fisttpl
int
in
scas
hlt
stc
repz
cmp
jg
je
mov
mov
cld
out
xor
mov
fistpll
iret
lahf
jg
test
movsl
pushf
sbb
popa
add
stc
cld
stc
repz
lahf
xlat
add
into
ret
jmp
cld
stc
pop
aas
bound
dec
mov
xchg
sbb
lahf
aas
jg
push
cli
movsb
scas
adc
mov
movsl
call
repz
dec
adc
fsubs
mov
cld
mov
xor
dec
adc
test
iret
lahf
ja
cmp
xchg
cmc
daa
or
out
cmp
nop
sub
aaa
faddl
inc
mov
push
pop
js
es
sbb
or
mov
aas
jg
dec
mov
ja
mov
adc
stc
repz
pop
inc
mov
or
sbb
mov
cmpsl
fnstcw
xchg
out
mov
mov
js
out
lahf
xlat
sub
mov
test
inc
lcall
call
dec
jo
mov
aas
ja
loope
iret
lahf
aas
movsl
or
cld
stc
repz
adc
mov
inc
iret
iret
ret
ret
dec
in
insb
xchg
cmp
cmp
mov
stos
jns
out
xchg
and
adc
outsl
fidivrs
jbe
jne
mov
enter
fwait
adc
jo
sti
sub
enter
fsubrs
sbb
icebp
mov
jae
mov
cmp
cmc
jnp
sarb
adc
sahf
out
mov
xchg
cmpl
mov
and
in
push
pop
add
dec
cmpsb
ret
xchg
fwait
aaa
outsl
cmp
xchg
pop
out
dec
sub
mov
pop
cmpsl
sub
test
or
pop
adc
aaa
outsl
fimuls
xchg
push
xor
lds
int
lea
mov
test
mov
mov
cmc
sti
idiv
rcrl
into
mov
or
in
repz
fwait
inc
call
jnp
xchg
idiv
jl
outsl
fidivrs
pop
push
in
aaa
jne
jg
rorb
fwait
aaa
sub
pop
adc
pop
jbe
fidivrs
xchg
ljmp
mov
outsl
arpl
xor
je
ja
call
jns
out
ljmp
jo
jo
iret
jno
fwait
aaa
outsl
rorl
jb
pop
xchg
insl
arpl
repz
xor
inc
and
inc
dec
das
and
fldl
fidivrs
push
mov
adc
xchg
mov
mov
daa
arpl
les
iret
inc
ret
sub
je
push
jg
shll
test
and
xchg
adc
out
lahf
aas
push
vprotw
add
cld
stc
repz
inc
add
insb
ljmp
push
aas
jg
test
rorl
sub
cld
stc
repz
jmp
mov
sub
dec
ret
jg
cmpsl
jecxz
cmp
sub
cld
jne
push
outsl
xchg
stc
repz
sub
jno
xor
es
into
xor
cld
les
sahf
iret
lea
adc
or
out
lahf
mov
out
xchg
fbld
fnstcw
cld
stc
pop
xchg
out
lods
push
popf
xchg
jns
jp
pop
adc
xchg
or
iret
lahf
aas
movsl
in
inc
or
lock
ss
mov
cld
stc
repz
cmp
push
fidivl
xor
lahf
jl
rcr
mov
xchg
sub
cld
stc
daa
jns
out
stos
movsl
and
mov
pop
out
lahf
aas
push
xchg
flds
popl
stc
repz
mov
pushf
mov
aad
jg
cld
sub
lods
adc
cltd
add
cltd
out
lahf
aas
bound
add
jmp
sbb
inc
and
cld
stc
repz
dec
mov
pop
int
cmp
outsl
xor
lahf
aas
jg
jle
cwtl
sub
out
fmul
out
and
out
inc
in
cmp
jo
dec
idivb
repnz
mov
cld
es
rcl
mov
lahf
aas
jg
divl
cmp
jg
jg
ss
aad
mov
iret
pop
movsb
and
dec
sub
lods
jmp
jg
cld
adc
incl
jecxz
out
jbe
mov
mov
add
push
decl
ror
aas
aas
in
repnz
sub
sub
in
test
aas
xor
stc
repz
mov
popa
and
jmp
add
sahf
fsubl
in
sti
or
pop
mov
enter
mov
aas
aaa
outsl
fidivrs
xor
sti
jge
inc
repz
fwait
scas
test
or
xor
inc
outsl
fidivrs
mov
and
add
xchg
fwait
aaa
ror
push
lahf
scas
mov
ja
rcrb
lock
ja
mov
aaa
outsl
fidivrs
aaa
jge
inc
xchg
sub
fnstsw
out
adc
cld
stc
shr
movsl
bound
insb
and
cmpsb
pop
jl
add
out
lahf
aas
nop
test
aas
nop
push
dec
cld
stc
repz
cmc
xchg
lods
cld
cmpsb
push
stos
lds
popa
iret
lahf
aas
jg
sub
inc
push
shll
hlt
xor
stc
repz
xchg
fidivrs
mov
push
sahf
lahf
aas
jg
mov
imul
roll
repz
jg,pn
adc
aad
pop
push
push
dec
add
or
loopne
or
adc
inc
outsl
das
mov
cmp
pop
inc
push
out
inc
out
fwait
ja
imul
rolb
jns
arpl
push
jmp
push
inc
inc
fcomps
fwait
aaa
jg
and
or
cmp
mov
jns
out
cwtl
xchg
sub
ja
insl
rcrl
aaa
outsl
fidivrs
sub
addr16
xlat
test
out
fwait
xor
inc
fst
cltd
aam
pop
add
mov
imul
cltd
loop
push
push
add
outsl
sbb
movb
cli
ja
data16
dec
inc
fsub
int
aaa
mov
push
xor
mov
shrb
mov
jb
sbb
out
jae
int
aaa
outsl
popa
cmp
inc
aam
push
insl
cmp
mov
daa
add
mov
sbb
into
xchg
leave
leave
xchg
dec
stos
je
rcrb
sub
and
cli
mov
and
bound
push
in
mov
fidivrs
cmp
cmp
push
ljmp
int
stc
cmp
dec
cmc
dec
and
pop
clc
enter
aas
cmp
sbb
sahf
jp
gs
fidivrs
imul
xchg
pop
cmp
jb
int
aaa
mov
jb
jno
aaa
orl
mov
stos
xchg
and
outsl
fidivrs
mov
in
hlt
jge
sbb
data16
out
fwait
aaa
enter
dec
xlat
ds
mov
jns
pop
gs
inc
iret
xlat
mov
dec
fidivs
cmpsl
cmp
mov
aaa
out
fbstp
leave
pop
inc
sbb
sbb
call
cmp
cmpsl
fndisi(8087
mov
movsb
mov
decb
xor
fildl
sahf
jne
jle
stc
repz
cmp
lods
inc
adc
add
xor
shl
aas
jg
cld
dec
movsl
aam
push
inc
hlt
rcrb
les
das
repz
lahf
adc
inc
adc
mov
dec
fldt
adc
mov
sbb
shlb
cwtl
scas
xchg
adc
addl
imul
stos
push
push
fidivrs
mov
push
aas
andl
shll
mov
testb
enter
repz
inc
xchg
movsb
mov
or
and
lret
inc
outsb
fsubp
stos
mov
loopne
repz
cmp
jg
es
mov
fstps
add
jns
push
dec
les
insl
mov
ds
fwait
aaa
mov
out
rorl
jle
push
mov
and
sub
out
subl
jbe
mov
xchg
pop
mov
add
mov
testb
out
sub
mov
outsb
out
repz
cli
js
push
sub
fldenv
aas
cmp
add
push
lea
mov
in
xchg
push
add
sub
fidivrs
pop
mov
or
mov
mov
loopne
push
into
aas
testb
out
fwait
aaa
popa
cli
pop
imul
outsb
movsl
xor
push
push
cltd
sub
push
sub
scas
cmpsl
aas
int
aaa
outsl
inc
mov
mov
iret
cmp
call
xor
xor
outsb
imul
xchg
fwait
aaa
outsl
out
in
loopne
into
std
and
xor
add
push
out
mov
cs
mov
mov
in
data16
pop
clc
xor
fdivrp
lock
int
aaa
ret
jne
sbb
jg
jo
das
mov
adc
out
lahf
aas
je
mov
add
popa
mov
mov
dec
push
movsl
out
xor
and
das
imull
iret
fidivrs
sbb
adc
lods
aaa
test
xor
fwait
aaa
outsl
xchg
mov
xchg
shrl
lcall
dec
data16
mov
sub
aaa
outsl
cmpsl
data16
out
mov
jae
mov
int
sbb
adc
mov
bound
mov
outsl
fidivrs
mov
push
dec
or
cmc
jo
jno
clc
xlat
cld
les
lods
outsl
fidivrs
scas
andb
scas
and
inc
jp
jle
int
fwait
aaa
xchg
scas
mov
sahf
adc
jb
mov
repz
cmc
loop
insl
jmp
rcrb
jg
xchg
movl
xchg
lcall
jo
jne
xorb
shll
cmp
aas
jg
or
scas
clc
push
jmp
cmp
stos
add
sbbb
push
xor
or
mov
ljmp
jbe
js
adc
out
loop
jns
adc
ds
outsl
fidivrs
lods
mov
inc
imul
outsb
dec
insb
xchg
negb
pop
enter
fidivrs
sbbl
gs
mov
pop
stc
jo
int
aaa
test
or
pop
out
rcrb
dec
aam
enter
push
or
mov
js
bound
lods
leave
cltd
mov
nop
sbb
aaa
outsl
fidivs
xlat
insl
push
pop
pop
icebp
stc
mov
enter
iret
pop
lock
repz
mov
jns
and
push
mov
pop
mov
int
aaa
iret
jmp
push
fwait
sarl
jns
sbb
adc
addb
inc
mov
int
aaa
outsl
sub
sub
mov
test
addb
scas
sbb
ja
fsubl
mov
out
mov
fwait
sbb
stc
xor
arpl
sti
fistps
mov
jbe,pn
xor
imul
out
fwait
aaa
in
mov
dec
lds
mov
mov
xchg
jp
sti
enter
or
ret
mov
fwait
aaa
outsl
ffreep
push
pop
push
jl
js
stc
inc
cmp
mov
mov
insb
mov
xor
fwait
aaa
outsl
fimuls
inc
rorb
imul
popa
jp
icebp
jbe
ja
lock
int
jae
ret
call
addl
jmp
mov
fisubrl
fwait
aaa
out
sub
inc
mov
scas
cs
mov
out
jecxz
sbb
int3
insl
std
jmp
lea
insb
fidivrs
sub
mov
out
cmp
rclb
mov
mov
inc
fistps
jb
fwait
daa
mov
mov
jle
jle
xchg
imul
mov
mov
gs
insb
or
outsl
jle
js
add
pop
mov
stc
xchg
cld
mov
push
in
and
and
aas
jg
inc
mov
xchg
addr16
lea
rol
push
jae
add
xchg
dec
call
or
mov
int
cld
stc
mov
call
sub
aaa
out
lahf
aas
stos
sbb
sub
push
loop
std
dec
leave
cld
cld
stc
repz
push
imul
dec
inc
ss
lahf
imul
cmpsl
xor
sbb
dec
xchg
adc
xchg
pusha
fldenv
inc
mov
dec
enter
outsl
fidivs
sbb
jg
sahf
xchg
xor
push
daa
leave
jmp
repz
mov
jg
inc
push
sub
jecxz
fwait
aaa
outsl
stc
mov
pop
fsubrl
cmp
shrb
mov
mov
int
stc
mov
clc
sbb
fiadds
push
mov
jp
subl
int
rolb
inc
sbb
jnp
insb
fidivrs
xchg
cs
cs
lock
cld
test
inc
mov
sbb
iret
lahf
aas
int
ret
push
js
inc
jg
or
loopne
pop
push
ret
push
repnz
fwait
aaa
outsl
fiadds
push
and
inc
lahf
cmpsl
jns
out
mov
xor
popa
pop
add
outsl
fidivrs
xor
mov
bound
fwait
xor
dec
icebp
scas
test
test
mov
push
pop
or
jb
mov
iret
aas
xchg
stc
and
pop
xchg
inc
adc
mov
repz
decb
pushf
cmp
jb
jae
xchg
iret
lahf
aas
jg
in
call
sti
incb
repz
loop
pusha
jbe
fsubrs
jle
and
shrb
outsl
jmp
lds
clc
enter
arpl
cwtl
dec
ds
fidivrs
movsb
mov
mov
out
fwait
or
mov
out
outsl
fidivrs
and
mov
shl
aaa
out
fwait
aaa
pushw
inc
in
mov
in
fidivrs
pop
mov
pop
inc
sbb
sub
jb
cmp
jg
insb
scas
into
lret
push
lods
dec
pop
mov
out
sub
loopne
leave
mov
lret
jns
inc
cld
jb
ror
jle
cmp
int
ja
xchg
push
mov
adc
pop
cmp
repz
and
movsl
or
mov
mov
outsl
fiadds
das
mov
jne
sub
sbb
adc
daa
fidivrs
mov
add
xchg
mov
sbb
xchg
sbb
mov
sbbb
ret
out
xchg
sbb
repz
jl
cmpb
push
mov
cli
jae
mov
mov
repz
fwait
push
xchg
insb
out
js
and
stc
pop
fstpt
cmp
dec
add
adc
aas
jg
cld
rclb
lahf
ret
out
cs
iret
lahf
jle
xchg
jbe
movsb
scas
adc
mov
jle
stc
cmp
sub
mov
inc
cld
stc
repz
xchg
jp
sub
mov
lock
iret
lahf
aas
jg
out
inc
xor
inc
scas
mov
sub
cmp
cmp
fs
mov
lahf
push
lahf
aas
jg
pop
push
fisubl
and
push
in
loop
fcmovnbe
stc
hlt
scas
pop
or
daa
lahf
aas
icebp
jno
out
orb
fsubs
repnz
mov
jmp
lcall
out
das
dec
inc
nop
shll
jns
out
enter
push
mov
mov
outsl
push
xchg
popa
adc
push
and
stos
iret
ficompl
out
clc
dec
enter
inc
jmp
pusha
aaa
outsl
fdivrp
insl
jne
insb
sbb
in
push
pop
sub
aad
mov
jb
push
cmc
push
fwait
ja
lahf
fildll
ja
out
mov
sbb
add
popf
dec
lcall
arpl
mov
repz
lds
jns
and
mov
addl
orl
mov
push
dec
fdivs
sub
mov
nop
out
orb
arpl
rcll
pop
pop
pusha
mov
pop
mov
dec
pushf
jge
aaa
mov
dec
inc
mov
iret
lahf
or
inc
aad
fbstp
cld
stc
jmp
out
scas
xchg
jl
mov
call
mov
aas
mov
stc
loop
mov
ret
cld
stc
repz
int3
push
jge
movsb
imul
cli
jp
iret
lahf
aas
jg
pop
loope
or
into
outsl
pop
add
stc
repz
sarl
jb
mov
mov
jb
lahf
outsl
cmpb
jg
flds
lcall
outsb
stc
repz
jmp
or
jp
rcrb
xchg
cmp
cld
shll
add
pop
pop
cmp
scas
repnz
add
mov
sub
cli
lahf
aas
jno
popf
pop
outsl
shll
repz
cmc
dec
xchg
jmp
test
ds
jo
add
ficoms
movsb
xchg
mov
shlb
sbb
sbb
ljmp
repz
decb
cmp
cwtl
in
sbb
outsl
fidivrs
sub
rcrl
ret
cmpsl
or
jns
out
adc
xchg
add
push
mov
outsl
fidivrs
push
push
sub
jmp
in
out
fwait
imul
aad
sbb
lock
outsl
fidivrs
xchg
loop
or
ds
int
aaa
sub
mov
push
fidivrs
dec
mov
cld
addr16
imul
stc
mov
in
ja
xchg
push
scas
fiadds
mov
mov
adc
and
outsl
push
inc
xor
std
repz
loop
daa
es
push
xchg
push
fldcw
mov
into
sbb
cmpsl
fsubr
test
pop
pop
add
fwait
aaa
or
stos
enter
fidivrs
dec
mov
jno
mov
int
aaa
outsl
sub
leave
test
das
ret
jns
out
test
add
push
sbb
push
xchg
pop
fwait
aaa
outsl
ficoms
and
in
stc
cwtl
pop
mov
int
arpl
add
jne
pop
stos
fimull
loopne
jne
aaa
outsl
fidivrs
testb
sub
int
adc
fmul
xor
mov
cmp
ret
and
stos
out
fwait
aaa
movsb
call
mov
or
mov
dec
sbb
dec
adc
cld
or
inc
int
aaa
outsl
cli
push
add
dec
cmpsl
mov
jbe
mov
and
mov
call
mov
and
andb
cmp
mov
jg
sub
mov
xchg
repz
and
inc
cmpsb
mov
jg
cld
xchg
mov
scas
xchg
ret
out
aas
repnz
repz
lahf
push
loopne
sub
push
fdivrl
divb
cld
stc
add
inc
or
rcr
or
inc
fcmove
lahf
aas
test
push
lods
push
mov
outsl
fdivs
lahf
pushf
push
loope
cld
stc
pop
in
dec
std
dec
mov
pop
jle
clc
iret
lahf
aas
jg
cmp
sub
shlb
cld
stc
repz
xor
mov
mov
pop
stos
push
cld
ss
and
mov
cld
xor
xorb
aas
sbb
lods
xchg
iret
lahf
aas
jg
cltd
cmp
add
and
add
mov
pop
cwtl
push
sub
lahf
aas
jg
imul
sub
cld
stc
repz
jmp
lods
data16
dec
shll
out
lahf
sbb
clc
pop
test
mov
jg
cld
stc
popa
mov
mov
mov
mov
aas
popf
mov
xor
mov
popl
es
js
rep
outsl
cmp
sub
leave
lahf
inc
cli
or
sub
mov
out
fwait
call
out
scas
mov
fcmovb
add
mov
cmp
in
jne
outsb
fidivrs
xchg
pop
shl
xor
mov
and
mov
insb
int3
add
clc
and
and
fwait
adc
pop
mov
jnp
imul
in
pop
mov
adc
jae
dec
inc
jmp
jo
fsubp
int
aaa
jo
movsl
nop
test
outsl
hlt
fidivrs
stos
adc
xchg
fcompl
cmpsb
xlat
int
aaa
outsl
mov
in
add
lahf
icebp
ret
dec
mov
xor
movsb
or
fcmove
cmp
out
out
jb
fwait
aaa
outsl
fimuls
mov
cli
repnz
sbb
clc
out
repz
or
in
sub
mov
movsl
pop
outsl
cmpb
stos
inc
int3
es
test
aaa
js
lahf
jns
ret
shlb
jns
push
inc
cmpb
push
out
int
aaa
outsl
outsl
xor
mov
pop
clc
ret
sarb
movsl
mov
out
dec
push
mov
outsl
fimuls
sub
push
cmp
adc
pop
aam
out
repz
fwait
cltd
jl
jne
push
jns
sbb
fidivrs
cs
dec
dec
call
imul
fwait
aaa
lcall
xchg
push
mov
dec
inc
mov
pop
xor
dec
inc
sub
aaa
outsl
fdivrp
mov
jno
sub
in
push
cmc
inc
jns
out
es
int3
jbe
push
sbb
outsl
fidivrs
dec
mov
in
or
adc
fwait
cmp
aas
mov
push
outsl
fidivrs
js
es
sbb
int3
cmp
lea
adc
outsl
stos
das
mov
cmp
jle
neg
lahf
aas
pop
stc
rcrl
into
lret
mov
fldenv
in
iret
repnz
pusha
mov
mov
jecxz
mov
out
mov
push
push
mov
mov
or
call
cmp
outsb
jle
xchg
aaa
dec
and
aas
nop
jns
int
aaa
outsl
push
inc
ret
add
xor
jns
out
sbb
mov
negl
shll
adc
fwait
aaa
outsl
fidivrs
jmp
fadds
lret
hlt
inc
jb
out
mov
adc
mov
imul
cmp
xchg
loop
int
aaa
outsl
nop
out
xchg
sti
or
sub
xor
es
inc
dec
mov
out
adc
jle
fwait
aaa
outsl
fisubrs
sbb
lret
mov
ja
int
loop
and
add
inc
hlt
xchg
fs
and
test
mov
mov
out
repnz
dec
lcall
fwait
aaa
je
or
ja
adc
push
and
mov
mov
jnp
clc
mov
mov
jbe
mov
push
fisubrs
test
leave
and
test
loope
inc
cmovae
mov
test
repnz
clc
repz
cld
stc
stos
cli
jle
xchg
inc
mov
insl
xor
lahf
aas
scas
movsb
dec
clc
xchg
sub
cld
stc
repz
sub
addr16
insb
pop
pop
mov
jl
fbld
aas
jg
shrl
mov
stc
repz
push
hlt
mov
jae
mov
adc
incb
fchs
fisttpll
fnstcw
je
subl
stc
repz
xor
xchg
in
imul
mov
cld
test
jb
sbb
ds
pop
pop
and
getsec
mov
dec
push
stc
push
lret
jg
cld
stc
cs
andl
movsb
mov
xor
xchg
hlt
int
out
lahf
aas
data16
pop
shrb
cld
stc
repz
leave
inc
cmp
ss
out
iret
lahf
aas
jg
mov
sbb
cli
fsubs
repnz
mov
das
mov
repz
aas
xlat
add
test
fdivrs
stc
pop
lret
mov
out
outsl
ror
setg
jg
stos
xchg
clc
mov
xchg
xchg
insb
push
stc
repz
in
es
jno
rorb
dec
aas
jg
cld
inc
in
in
pop
or
insl
push
movsb
xchg
mov
or
or
sub
outsl
out
mov
repz
mov
not
lcall
fstps
cmp
or
int
jg
xor
int
aaa
aaa
aas
inc
std
ss
test
inc
fidivrs
and
cmpb
cs
inc
js
push
int3
int
aaa
outsl
out
mov
outsl
test
add
adc
cltd
add
jnp
cmpsb
dec
inc
inc
xor
cli
stos
cmp
fwait
aaa
outsl
fisubrs
mov
push
movb
repz
push
in
fisttps
adc
mov
nop
pop
fsts
sub
mov
push
add
xchg
aaa
outsl
fiadds
jnp
jge
call
fidivl
cmp
hlt
cli
dec
fidivs
lahf
aas
popa
pop
push
push
mov
in
es
lahf
cld
hlt
jae
pop
pushf
xchg
sbb
aaa
outsl
fiadds
clc
es
sysenter
jns
aad
add
pushf
sbb
cmp
mov
adc
popa
push
fidivrs
stc
data16
push
insb
mov
repz
fwait
jnp
add
add
cmp
fildll
mov
ja
call
inc
xor
xor
aaa
pop
pop
shlb
js
stc
ja
jp
push
fidivrs
test
addb
or
mov
fwait
aaa
outsl
daa
lret
insl
lods
cmp
add
jp
out
int
adc
imul
fidivrs
lahf
adc
int3
xchg
mov
in
int
iret
add
mov
stos
or
fst
mov
ret
xor
mov
mov
adc
daa
adc
sbb
fwait
aaa
outsl
mov
dec
je
cmc
cmp
jns
out
mov
inc
or
inc
lock
outsl
fidivrs
insb
sbb
out
insb
sbb
jb
out
fwait
add
lahf
stos
mov
inc
lret
lahf
jg
jb
mov
push
mov
outsl
frstor
push
xor
add
test
lcall
and
incb
int
je,pn
pop
or
xchg
adc
adc
jns
cmpsb
fistpll
pop
pop
jecxz
iret
xor
cmp
fwait
aaa
outsl
fidivrs
stos
out
or
mov
movsb
popf
jns
int
sbb
sahf
jle
fdivl
fildl
test
lahf
fwait
and
cmp
repz
int3
call
lahf
jg
sub
sar
cmp
mov
stc
repz
leave
mov
jnp
push
movsl
pop
jns
repnz
in
lahf
aas
jg
xor
lret
xor
outsb
or
loopne
idivb
push
imul
daa
out
push
popa
cwtl
out
addr16
fidivrs
xchg
cs
adc
dec
and
inc
dec
int
aaa
outsl
mov
push
push
or
test
xchg
stc
repz
sbb
stc
test
inc
adc
fstpt
jg
cld
push
cwtl
xchg
jecxz
cmp
insb
push
sub
out
lahf
mov
dec
jb
jge
mov
add
cld
stc
sub
cltd
push
jns
out
fisttps
outsl
pop
aad
push
aaa
outsl
fidivrs
shrb
inc
dec
sub
or
repz
fwait
and
cmp
pop
sub
sti
mov
outsl
fidivrs
dec
lcall
push
sub
aaa
mov
sbb
lret
inc
addr16
sbb
jns
add
xlat
daa
shl
rorl
xchg
add
out
lock
out
out
lock
or
fidivrs
add
outsl
es
add
sub
int
aaa
outsl
hlt
out
rcr
jle
jl
incb
repz
cli
push
pushf
mov
fwait
push
cmp
fwait
aaa
outsl
ficoms
out
fnstcw
mov
xor
jns
out
sti
xchg
rol
pop
nop
push
adc
aaa
outsl
fidivrs
adc
pusha
ljmp
repz
fwait
dec
aas
and
cltd
mov
insb
ss
sbb
ret
mov
outsl
fidivrs
stos
xchg
or
faddl
int
aaa
insl
jmp
add
xor
int3
arpl
adc
in
cld
jle
dec
bnd
in
in
dec
dec
jl
out
xchg
sub
fs
fisubrs
iret
lahf
aas
jg
xor
rorl
mov
out
cld
stc
notl
add
push
gs
cmp
inc
pop
push
cmp
lcall
iret
lahf
cld
mov
dec
dec
adc
jbe
and
cld
stc
xor
inc
sbb
shll
cld
add
pop
out
stos
push
and
stc
pop
add
push
jmp
xchg
jnp
leave
push
andb
jns
mov
out
ljmp
and
lods
and
je
pop
cltd
fld
jae
aam
add
sti
cltd
and
lret
shlb
sub
lahf
aas
repnz
xor
xor
inc
cmpsb
cld
stc
repz
mov
popf
inc
dec
cmp
pop
shll
jg
in
cmpsb
or
into
mov
ja
mov
adc
jmp
mov
aaa
pop
sbb
rep
clc
jle
sbb
movsb
insl
pop
push
outsl
cmp
stc
repz
jnp
sbb
psubq
loopne
or
shl
adc
mov
rorl
loope
and
das
jno
repz
jno
mov
mov
jg
cld
adc
mov
sbb
push
push
enter
mov
lcall
xchg
cmp
jno
cwtl
pop
sub
lahf
aas
ljmp
xchg
pop
insl
cli
sbb
faddl
mov
enter
data16
mull
and
push
not
scas
daa
xor
cmp
std
jbe
pop
and
fadds
and
jns
fisubrl
adc
jbe
jle
cmp
jno
nop
int
aaa
outsl
sarb
push
jae
das
push
push
sbb
mov
mov
inc
jl
in
iret
mov
and
ljmp
or
adc
pop
jge
sti
lahf
aas
jg
mov
xchg
and
mov
jg
iret
jae
out
popf
push
sub
fwait
ja
lea
repnz
jae
loop
clc
mov
repz
lds
repz
mov
inc
pushf
int3
xchg
push
aaa
outsl
fidivrs
adc
push
lock
repz
fwait
dec
das
out
lods
xchg
jmp
dec
pop
outsl
fidivrs
lds
ret
int
xor
mov
int
aaa
pop
bound
jmp
inc
bound
mov
repz
sahf
mov
ret
mov
clc
movl
jo
in
jg
mov
inc
scas
lea
fbld
stos
inc
sbb
arpl
fidivrs
out
into
call
sbb
lret
ja
iret
mov
sarl
fisttps
sub
push
ja
arpl
outsb
mov
inc
test
out
fwait
inc
adc
push
rcrl
jl
mov
stc
aaa
testb
int
aaa
outsl
cmp
xor
mov
ja
aad
mov
push
pop
xchg
jge
push
and
in
mov
sub
test
fsubs
fwait
add
add
mov
in
int
xor
test
repnz
scas
out
pop
fldcw
fldt
mov
jmp
cmp
xor
jecxz
mov
aas
jg
cld
push
pop
jb
dec
aad
jno
shrl
in
sub
adc
adcb
imul
stc
stc
scas
jle
add
fidivrs
xlat
xchg
pop
jle
or
lds
stc
ret
xchg
aaa
mov
jns
cli
test
xor
cmp
aam
cld
pop
dec
inc
leave
test
fidivrl
out
xlat
and
mov
mull
xor
shrl
in
out
pop
add
outsl
fsubp
mov
pop
inc
aas
jns
leave
dec
jns
out
dec
mov
pop
push
mov
xorb
nop
or
loop
jmp
int
jae
in
out
fwait
or
sub
dec
je
jmp
ss
mov
into
mov
jecxz
fwait
aaa
outsl
xchg
in
and
mov
insl
loop
movsl
sub
sub
push
pop
inc
inc
adc
mov
mov
xlat
push
bound
cmp
stc
adc
out
fwait
push
stos
iret
or
ret
int3
outsl
fidivrs
lock
jns
loopne
dec
lcall
aaa
pop
adc
adc
cmpsl
std
fsubrp
iret
lahf
aas
jg
mov
in
xor
cld
stc
repz
fwait
or
pop
shr
das
and
lahf
aas
jg
mov
cmp
test
int3
inc
jbe
js
out
icebp
cmpsl
insl
sbb
inc
pop
mov
loop
out
and
notl
imul
and
popf
ret
or
imul
repz
mov
into
mov
push
enter
iret
lahf
aas
jg
inc
mov
pop
mov
cld
stc
repz
mov
ss
ljmp
push
lahf
aas
jg
jne
cmp
push
ret
add
js
mov
xchg
out
pop
xchg
adc
es
jnp
aaa
outsl
fidivrs
add
lsl
mov
in
repz
fwait
fs
xor
ds
jno
outsl
fidivrs
lret
and
sub
lcall
xlat
xlat
clc
pop
std
sti
aam
and
add
mov
outsb
fwait
aaa
outsl
ss
cmp
lods
imul
fstpt
out
jb
cltd
jg
xchg
push
inc
jno
xor
mov
sub
cmp
aaa
outsl
fisubs
mov
movsb
rorl
repz
out
aas
adc
cld
into
xchg
push
or
outsl
fidivrs
sbb
xchg
fcoml
jno
int
mov
aad
mov
fwait
loope
repz
mov
and
mov
aas
cmp
adcl
insb
out
mov
repz
in
enter
dec
jmp
or
lahf
aas
jg
rcrb
mov
repnz
std
repnz
xchg
scas
loopne
fcompl
loop
pop
popf
out
jb
xchg
push
out
fwait
aaa
xchg
adc
data16
and
std
cmp
mov
xchg
mov
sbb
mov
inc
ficoms
fwait
aaa
outsl
push
fs
mov
mov
or
mov
shrl
dec
xor
cwtl
mov
jns
fwait
aaa
outsl
fsubp
outsl
pop
add
cmp
jo
push
jns
out
inc
jbe
dec
movsb
mov
mov
stos
and
fdivrl
mov
xor
rorl
gs
push
test
sarl
xchg
pushf
into
pop
lds
lods
cs
jp
xor
lahf
aas
pushl
pop
repnz
mov
repnz
and
je
sbb
jp
repz
adc
test
mov
cld
stc
jae
les
sbb
jae
test
add
repz
jl
fidivrs
or
popa
clc
adc
inc
outsb
xor
ja
sub
cs
shll
aaa
sbb
lock
or
out
inc
jbe
jg
cld
pop
shlb
ja
add
push
in
iret
lahf
xor
fldt
push
insb
sbb
repz
test
pop
jns
out
lahf
jg
pop
adc
cmc
imul
repz
std
add
inc
or
inc
inc
gs
sbb
aas
and
sbb
and
lret
js
cld
stc
repz
cwtl
adc
add
int
lahf
aas
jg
and
push
xchg
mov
sub
js
stc
repz
sub
fldt
mov
outsl
sbb
aas
jg
cld
out
pushf
hlt
jne
sbb
mov
xchg
out
lods
xchg
sub
dec
es
cld
stc
repz
pop
addr16
int
sub
cmp
pop
iret
lahf
aas
jg
pop
mov
es
lahf
push
jae
pop
jge
out
lods
inc
lock
dec
mov
fdivrl
jne
nop
out
lahf
pop
frstor
out
ja
or
sub
mov
adc
cld
cld
std
cmp
dec
and
xor
jle
cld
stc
jae
cmp
inc
lods
xchg
mov
pop
inc
sahf
icebp
pop
inc
mov
sbb
lods
xchg
addb
push
mov
fnstcw
fistpl
cmpsl
cmp
dec
and
mov
xchg
mov
xchg
jl
inc
lea
sub
cld
stc
push
cmpsb
sub
mov
cmpsb
mov
es
and
xchg
lcall
xchg
scas
mov
jnp
add
cld
stc
push
loope
fmuls
mov
out
push
int
cld
popl
aas
jg
xor
jae
push
fiadds
xchg
xor
repz
push
enter
adc
mov
mov
fists
fwait
call
aam
pop
movb
jns
mov
pop
lds
stos
dec
push
xchg
aad
push
shrb
pop
sub
nop
jns
hlt
xchg
rcr
popf
mov
ljmp
aaa
ret
aam
nop
shl
call
inc
repz
fwait
aas
xchg
xor
imul
mov
arpl
push
fnsave
mov
dec
out
fwait
aaa
mov
leave
add
nop
push
ret
mov
les
stos
mov
add
outsl
and
cli
add
aaa
jmp
sarb
out
jno
xchg
cmc
mov
sub
outsl
fimuls
aam
lds
shrb
jae
out
cmp
popf
push
cmp
pop
inc
fucom
loope
mov
push
mov
pushf
lret
or
fwait
aaa
outsl
iret
mov
push
ret
sub
mov
mov
jns
out
fs
addr16
loopne
movsb
popf
aaa
dec
fisubrs
aaa
outsl
fisubrs
int3
pop
push
pop
sbb
lds
out
xor
aas
imul
lret
fidivrs
xor
ds
or
sbb
mov
pop
fidivrs
jne
mov
bound
test
outsl
fidivrs
gs
and
push
push
inc
aas
xor
in
test
out
push
lahf
jg
jns
jne
roll
xchg
hlt
nop
dec
push
dec
mov
in
iret
jge
sbb
clc
out
movsb
mov
out
sbbb
mov
xchg
sahf
iret
mov
push
xchg
popf
out
fwait
aaa
sub
ljmp
adc
fidivrs
sbb
or
test
fistl
ja
dec
outsb
push
jo
jmp
xchg
int
mov
jnp
mov
fmull
xchg
fidivrs
add
cmp
iret
mov
cld
repz
lock
lods
clc
arpl
fcoml
stc
stc
arpl
push
out
out
shll
mov
fidivrs
jl
lods
loope
sub
stc
mov
fwait
aaa
mov
insl
or
mov
pusha
aas
cmp
pusha
pop
fbstp
push
imul
add
cmp
das
and
mov
das
and
xchg
push
fistpll
fistpl
sub
divb
stc
repz
xor
cwtl
pop
test
jbe
jg
cld
xor
jno
and
mov
stos
out
addr16
lahf
xchg
mov
popf
loop
or
xchg
push
xor
cld
stc
ret
cli
mov
jg
sub
loope
test
out
lahf
aas
xchg
mov
shrb
std
cld
cld
stc
xrelease
data16
int
dec
xor
ficoms
dec
xchg
ljmp
pop
and
inc
inc
xchg
cmp
xchg
int
int
pop
jno
lods
pop
movsl
fisubl
int
sub
addl
inc
ljmp
jl
push
lea
in
bound
fwait
aaa
inc
dec
adc
add
lds
repnz
push
adcl
int3
mov
pushl
jno
push
adc
adc
lret
outsl
fiadds
scas
pop
adc
sub
enter
int
loop
xchg
fists
jno
aaa
outsl
test
jno
insb
sub
and
aas
call
adc
push
inc
ja
repz
ljmp
dec
sub
leave
aaa
aaa
outsl
fidivrs
cmp
mov
jo
cmp
out
fwait
rcrb
mov
jg
sub
out
jo
outsl
fidivrs
mov
mov
and
dec
lds
fwait
aaa
inc
or
mov
and
jns
icebp
or
stos
push
sub
ljmp
mov
adc
rcll
repz
out
fwait
mov
lcall
dec
inc
callw
mov
sub
and
fwait
lahf
ja
arpl
int
aaa
jne
adc
lahf
aad
sbb
inc
stos
enter
cld
push
xchg
cld
stc
xrelease
adcb
jge
aas
jg
leave
inc
mov
mov
pop
adc
shrl
out
clc
mov
mov
inc
sbb
out
mov
add
mov
and
jle
jle
pop
push
jmp
pop
add
xchg
fwait
aaa
outsl
fsubs
inc
and
fwait
lahf
aas
jg
jmp
inc
incb
popa
mov
stc
cld
jecxz
pushf
sub
cwtl
das
pop
out
fs
repz
aas
push
mov
mov
sahf
in
jg
cld
stc
lods
lods
xchg
ret
mov
add
out
lahf
aas
iret
or
cmp
scas
mov
repz
adc
repnz
cmp
cld
xor
in
mov
daa
sub
imul
ret
pop
and
stos
inc
jbe
and
das
mov
inc
scas
in
add
xor
xchg
jmp
std
push
pop
dec
outsb
fimuls
add
pop
or
hlt
cld
stc
repz
pop
lcall
clc
mov
xchg
aas
jg
adc
repnz
xchg
lds
mov
icebp
add
mov
xchg
mov
mov
movsb
adc
test
mov
mov
repz
cs
ficoml
outsb
add
jg
mov
popf
fdivrs
jg
cld
xchg
push
inc
mov
test
mov
lahf
loop
xor
out
push
inc
and
add
jmp
aad
ss
cmp
testb
out
sbb
repz
std
sbbl
roll
lahf
dec
repz
pop
pop
pop
ds
das
pop
daa
cltd
fs
jp
stc
xrelease
aaa
pusha
jno
mov
jne
popf
mov
push
lahf
aas
jg
sub
lret
fs
xor
stc
repz
in
xchg
ja
pushf
cmp
xor
inc
cld
outsb
test
aad
xorb
ficoms
popa
and
mov
fsubs
mov
fwait
stos
mov
inc
xor
stc
add
js
and
int
aaa
mov
cmp
sub
imul
das
fs
mov
xchg
pushf
mov
je
int
mov
pop
stos
cmc
rcrl
add
popf
imul
loopne
mov
repz
jne
movsb
js
cmpsb
sub
push
or
inc
jle
cld
test
xlat
lods
repnz
cmp
out
mov
adc
test
rolb
out
lahf
aas
and
dec
rcrl
stc
out
into
pop
push
sbb
stc
repz
pop
sub
fsts
lret
pushf
fwait
fidivrs
sub
add
int
aaa
outsl
ror
cmpsb
data16
lds
divl
fs
xor
aaa
fcmovne
inc
mov
mov
mov
sub
aas
icebp
aad
jbe
pop
int
aaa
outsl
push
jge
orl
rcr
mov
inc
mov
fmull
dec
add
push
cmpsb
sbb
jg
xorl
pop
or
inc
push
jg
cld
jns
cwtl
xchg
push
enter
jae
xchg
fildl
aas
inc
fucomi
inc
hlt
xor
loop
fs
scas
stc
cld
stc
repz
mov
mov
or
cmp
ja
and
xchg
test
shr
xchg
push
xor
aaa
xor
fidivrs
adc
ret
outsl
mov
addr16
insl
js
fidivl
jmp
jno
dec
fistpll
repz
push
mov
es
adc
in
loope
ds
mov
xor
fnsave
xchg
mov
lods
repz
fwait
lahf
aad
lock
jmp
dec
outsl
fidivrs
push
lret
adc
out
fwait
aaa
dec
fwait
addr16
jecxz
call
fidivrs
add
pop
int
sar
into
lret
test
xor
lea
cmp
cmp
int
andb
jbe
xor
jns
out
sbb
sbb
adc
mov
cltd
fwait
aaa
outsl
fimuls
sarl
push
add
cli
fidivl
jns
out
and
adc
adc
outsl
fidivrs
mov
add
jecxz
loope
iret
fwait
adc
dec
mull
testl
pop
sbb
mov
mov
mov
cmpsb
addr16
pop
sbb
iret
adcb
xchg
stc
testl
jns
out
dec
pop
mov
lret
std
bnd
sub
addr16
sbb
ret
mov
add
jns
out
push
xchg
mov
or
fstpt
fidivrs
ds
faddl
cmp
push
fstps
repz
and
idivl
sub
stc
stc
sub
into
adc
into
paddb
mul
test
aas
call
repz
mov
push
add
push
and
pop
sahf
nop
push
in
cmpb
cli
enter
sbb
movsb
adc
inc
andl
mov
loope
push
aaa
int
aaa
out
pop
and
pushf
inc
rcrb
inc
cmp
out
bsf
andl
push
mov
jg
pop
push
test
mov
pop
cmp
mov
inc
mov
and
aaa
outsl
fidivrs
inc
xchg
lahf
stos
and
cld
fadd
adc
jl
mov
mov
or
mov
repz
pop
adc
jns
jle
jnp
xchg
mov
fcmove
loope
inc
mov
lods
loopne
test
inc
inc
or
cmpsl
push
pop
mov
jg
adc
mov
mov
je
testl
fwait
aaa
outsl
fiadds
ret
jecxz
jecxz
out
xchg
jle
xchg
fildl
jns
out
arpl
push
call
in
in
daa
push
sub
test
add
rolb
sbb
imul
jo
outsl
fidivrs
jne
jp
cmp
repz
fwait
sub
cwtl
sbb
enter
mov
or
cld
mov
rcr
add
jb
sbb
fwait
aaa
outsl
bound
cmp
pop
pop
fsubrs
sub
sbb
xchg
or
mov
into
int3
out
push
pop
call
adc
sbb
loopne
cmc
add
into
fidivrs
outsb
pop
cmp
rorl
jle
xor
aaa
outsl
dec
push
and
and
jg
cld
loope
push
fistps
cltd
pop
imul
icebp
mov
mov
jne
jmp
inc
loop
adc
inc
jge
jns
mov
jle
push
stos
jge
xchg
lahf
aas
decl
not
rcr
out
push
outsb
pushf
pusha
in
iret
xchg
lahf
popa
add
js
out
aas
adcl
shl
rcrl
repz
xchg
mov
mov
scas
movsb
mov
shlb
jle
cmc
add
ds
xlat
ss
jns
out
and
icebp
jno
test
insl
push
scas
pop
aaa
outsl
fidivrs
or
sub
mov
fwait
xchg
scas
jp
push
mov
push
je
outsl
fidivrs
out
dec
fnstenv
aaa
xor
cmp
fwait
aaa
mov
mov
mov
lods
jle
push
sub
rol
fwait
aaa
outsl
fisubrs
jae
add
test
add
pop
pop
cmp
popf
pop
das
mov
push
push
xor
mov
outsl
fidivrs
ja
pop
jge
adc
inc
sbb
stc
movl
dec
sub
add
scas
loop
lahf
aas
jg
insb
mov
pop
cmp
out
aam
leave
stc
repz
mov
insb
jbe
in
inc
inc
inc
ret
cld
out
popa
mov
test
sbb
pusha
scas
repz
lahf
push
mov
push
xor
popf
cld
mov
stc
mov
es
cmp
add
iret
lahf
aas
jl
push
adc
jecxz
xor
pop
sbb
stc
repz
mov
push
adc
jl
leave
iret
mov
iret
je
adcl
mov
add
jg
inc
sti
into
pop
push
mov
rcl
cmpsl
push
outsl
mull
aad
mov
mov
mov
lret
outsl
fidivrs
or
into
or
test
mov
enter
repz
incl
mov
mov
test
outsl
fidivrs
std
jmp
mov
pop
xlat
repz
sub
fwait
xchg
jbe
das
fiadds
movsb
call
popf
xchg
fnstsw
xchg
not
mov
aaa
outsl
test
fildl
loopne
jl
pop
rcrb
outsl
fiadds
mov
daa
scas
mov
popf
adc
int
aaa
ja
pop
and
sub
or
stc
mov
sbb
mov
cmp
add
push
nop
sub
out
adc
out
fwait
aaa
adc
lods
xor
xchg
cmp
repz
and
in
jecxz
ja
dec
jns
cli
nop
out
call
xchg
daa
aaa
outsl
fidivrs
jne
outsl
imul
jno
int
iret
addb
stos
mov
inc
inc
mov
in
out
or
ret
shr
xchg
aas
jg
cld
fwait
lret
test
sub
jp
sbb
pop
mov
xchg
aas
hlt
enter
leave
movsl
sbb
call
xchg
aam
adc
cmp
and
adc
mov
ljmp
push
pushf
adc
in
int
aaa
outsl
loope
outsl
arpl
pop
jo,pt
mov
sbb
hlt
xchg
adc
aaa
outsl
fidivrs
add
mov
xor
cs
xchg
out
fwait
into
mull
pop
xchg
fdivl
mov
fwait
pop
dec
jle
or
or
data16
out
fwait
aaa
mov
mov
data16
fidivrs
cli
add
sbb
sbb
mov
insb
sbb
cmp
pop
ret
repz
jecxz
call
jae
int3
js
sbb
xchg
inc
addl
iret
stc
repz
push
cmp
insb
adc
mov
dec
cld
push
test
sub
jp
ret
int
mov
mov
mov
lea
or
jo
mov
shr
int
xchg
push
sub
push
cli
fwait
in
int
adc
push
in
cld
idivl
cmpb
or
push
int3
int3
les
or
mov
sti
mov
btc
lds
cmp
fidivrs
scas
mov
shrl
rclb
insb
cmpsl
cmc
divb
seta
lret
cld
stc
repz
clc
lock
dec
inc
add
mov
push
andl
inc
mov
aas
jg
push
negl
sbb
in
mov
clc
and
lahf
loop
inc
dec
xor
lods
mov
addl
adc
xlat
lret
vpsllq
iret
lock
lods
inc
sbb
cmp
jmp
cld
push
xor
cmp
push
adc
movsl
sti
mov
stos
outsb
xchg
lahf
sub
and
fwait
aaa
out
lahf
push
das
pop
add
push
xchg
ljmp
adc
sti
jp
scas
ljmp
cld
test
outsl
or
scas
dec
adc
repz
and
fwait
out
aam
aam
or
flds
test
leave
out
mov
mov
sub
inc
jle
hlt
call
mov
andl
out
mov
mov
sbb
inc
cmp
mov
leave
push
sbb
jmp
cmp
in
mov
ret
nop
nop
cld
stc
repz
popa
insl
sub
nop
adcb
mov
iret
lahf
aas
jg
cs
jl
push
add
inc
fisttpl
repnz
jp
lods
in
inc
xor
pop
adc
movsb
xchg
sti
rorb
loopne
stos
push
push
sbb
jns
cmp
fcoml
jge
cltd
outsl
jns
mov
je
stc
pop
int
stos
daa
jecxz
cmp
in
xlat
jg
aas
jg
mov
pop
aas
pop
pop
xor
orb
or
iret
cltd
jns
out
and
fst
xchg
sub
pushf
inc
imul
mov
add
test
repz
fwait
out
test
or
aaa
mov
lret
outsl
fidivrs
and
add
repnz
fsub
and
aaa
jecxz
jne
ja
in
pop
inc
fldl
mov
dec
jno
mov
shrb
inc
outsl
fidivrs
or
xlat
pop
adc
or
dec
rcrl
xchg
adc
mov
xchg
iret
outsb
cmp
fwait
inc
pop
mov
inc
dec
out
in
out
mov
int
repnz
dec
insb
test
fpatan
daa
sub
xchg
mov
fldl
cltd
test
aam
std
lods
loop
cmpsl
test
int
aaa
out
out
in
in
arpl
mov
pop
jo
adc
insb
or
std
loope
stc
hlt
mov
jecxz
fwait
aaa
outsl
fisubs
imul
push
sahf
jmp
repz
sbb
push
or
sub
xor
into
loope
jbe
xchg
cld
stc
push
pop
push
fs
hlt
lahf
xchg
mov
adc
lahf
aas
jg
inc
sbb
add
pop
xor
out
enter
rcrl
xchg
das
cld
stc
repz
stc
pushf
mov
ss
mov
pop
or
fcmovbe
cld
stc
repz
add
push
xor
or
pop
lods
dec
lahf
aas
jg
pop
in
out
cmpsl
fdivrs
bswap
out
mov
xchg
rcll
or
scas
stc
repz
or
out
addr16
xchg
ljmp
inc
fwait
data16
dec
out
xbegin
repz
lahf
insb
mov
xchg
adc
jg
cld
stc
or
repnz
sbb
aam
out
lahf
aas
and
cmp
cld
stc
repz
ljmp
stc
inc
pop
dec
adc
aas
jg
fadd
mov
mov
pop
mov
stc
repz
mov
cmpsl
push
addr16
outsl
mov
shl
xchg
push
pop
adc
int
or
ss
xchg
jae
mov
jg
sbb
mov
mov
cltd
out
lahf
aas
frstor
pop
pop
shrb
xchg
cmp
stc
repz
insl
dec
cltd
jb
outsl
xchg
iret
scas
iret
pusha
iret
lahf
aas
jg
fistps
js
rclb
jmp
stc
stc
enter
outsb
nop
sub
jns
mov
shrb
adc
fdivrl
xchg
mov
add
enter
out
scas
mov
mov
pop
call
mov
stc
repz
lea
insb
fcomi
pop
xor
mov
cmp
int
xchg
jns
mov
push
cmpsl
pop
inc
dec
sub
pushf
fwait
cmp
pop
fnstcw
cmp
mov
dec
cld
test
filds
mov
push
mov
xchg
rcll
jns
out
mov
fstpt
or
filds
addl
mov
sub
mov
push
sub
cmp
sbb
jg
fs
adc
jl
cmpsl
sbb
incl
sbb
out
jno
repz
leave
outsb
inc
sub
xchg
fs
jecxz
cld
je
dec
aam
pop
xor
jae
imul
pusha
inc
push
xchg
cltd
fcomps
stc
add
sub
aas
je
adc
out
lahf
aas
out
and
cmpsl
or
gs
repz
clc
inc
or
scas
int
test
mov
mov
mov
fwait
nop
in
sahf
mov
pop
popl
mov
scas
sarl
fistps
xchg
mov
cmpsl
mov
js
leave
outsl
push
stc
repz
mov
and
jp
lock
jg
cld
dec
jp
and
and
ret
loop
sub
out
lahf
mov
dec
adc
pop
rorb
stc
mov
pop
jne
lret
or
jmp
sub
lahf
aas
cwtl
mov
cmpsb
in
sbb
push
ss
cmpsb
xorb
mov
arpl
xlat
aam
ja
jl
cli
enter
popf
lods
cmp
cwtl
mov
bound
mov
mov
mov
fwait
aaa
add
pusha
lret
fisubl
loop
ret
sbb
jge
push
out
lahf
jg
add
loop
inc
pop
xchg
popf
fldcw
jg
cmpl
iret
test
push
dec
movl
sbb
mov
neg
mov
es
push
sbb
pop
outsl
ficoms
insb
push
mov
jg
outsb
rol
inc
jo
aaa
addb
sub
shrl
mov
repz
rolb
in
dec
cmp
ficoms
xchg
std
push
pusha
outsb
push
pushf
push
mov
test
out
fwait
add
test
into
out
repz
cmp
cmp
adc
dec
fidivrs
or
into
nop
repz
cmp
xchg
cmp
cltd
das
sbb
aas
int3
shrl
jmp
ret
insl
jnp
mov
adcl
mov
stc
repz
pop
gs
pop
cwtl
cmpsl
out
das
daa
dec
or
dec
add
popa
imul
repz
incl
data16
dec
fwait
in
test
jg
cld
dec
pusha
ficomps
loope
push
jp
in
add
ljmp
push
aam
mov
out
mov
aam
lret
gs
lahf
jg
inc
scas
aas
mov
nop
pushf
std
das
cmp
cmc
xchg
jne
jo
pop
sbb
jle
stos
jno
pop
sbb
lods
out
stc
rcll
sbb
cld
add
mov
sbb
std
xchg
leave
shr
popa
call
iret
lahf
push
adc
scas
sbb
mov
xchg
jg
cld
stc
push
inc
push
pop
lahf
mov
pop
cmp
out
lahf
aas
stos
adc
cs
xlat
pop
dec
adc
pop
or
enter
lds
mov
sbb
push
mov
dec
mov
scas
add
out
mov
mov
fwait
pushl
jns
adc
sbb
inc
outsl
fimuls
sbb
ret
enter
ss
lahf
push
xchg
js
xchg
cmp
out
fwait
jecxz
cmp
nop
out
mov
jmp
pop
cmp
inc
dec
pop
cmpsb
jl
xchg
bound
cld
stc
repz
jns
and
jle
push
push
cmpb
lahf
aas
jg
les
das
fwait
and
jo
cld
stc
repz
or
cmp
movsb
ljmp
lahf
aas
jg
sbb
jno
add
sbb
sub
iret
in
mov
ficoml
inc
mov
mov
lock
pop
int
aaa
outsl
mov
push
in
xchg
shrb
ljmp
clc
int
xor
fdiv
scas
lock
jne
jne
aas
int
mov
fildll
rclb
movsl
fstpt
cld
cltd
ss
jns
push
in
pop
in
mov
fists
mov
ja
sbb
jae
xchg
or
sub
lahf
ds
js
out
xchg
xchg
sbb
leave
out
mov
jbe
out
pop
add
loopne
sti
pop
mov
lods
push
cld
sbb
cli
cmp
push
fidivrl
mov
sub
mov
pushl
mov
int
sub
and
pop
lock
aaa
cmp
xchg
enter
push
loopne
fbstp
inc
fidivrs
adc
mov
mov
stc
repz
cmpsl
out
and
adc
insw
mov
cmpsb
dec
fs
imul
out
lahf
xchg
cmc
jnp
idivl
mov
scas
jle
cld
stc
pop
je
insb
inc
pop
inc
xchg
lcall
movd
punpckhdq
daa
scas
rcrl
xchg
call
add
lret
adc
mov
addr16
xor
movsb
insb
fidivrs
cs
cmp
cmp
adc
mov
push
popf
out
push
sbb
repz
add
adc
jmp
adc
adc
mov
loopne
mov
and
mov
fists
jmp
and
and
outsl
ficoms
clc
dec
scas
xchg
enter
clc
aas
sbb
int
aaa
aam
inc
pusha
sahf
gs
in
lahf
fidivrs
xchg
and
js
lret
fldl
aaa
outsl
leave
in
push
cwtl
rcrb
mov
mov
js
dec
xchg
pop
pushf
ljmp
sbb
push
jg
imul
pop
push
in
mov
mov
inc
push
outsl
fidivrs
inc
lret
movsl
push
lea
out
fwait
aaa
pop
lea
in
mov
lcall
and
inc
cwtl
sub
xlat
fwait
inc
xchg
cli
sub
fwait
aaa
outsl
and
shlb
sbb
outsl
and
inc
jl
sub
out
inc
jbe
out
pop
push
cmc
arpl
or
or
sbb
cmc
xor
or
pop
out
insl
cmp
sub
aas
sub
scas
ret
aas
je
out
lahf
jg
ss
test
xchg
test
jl
sbb
dec
aam
sbb
xor
repnz
and
hlt
ret
pop
xchg
or
std
jg
cld
stc
mov
dec
xchg
mov
sub
lahf
aas
aas
jno
leave
pcmpeqb
jge
lods
in
cld
stc
repz
or
pop
popf
stc
mov
adc
iret
lahf
aas
jg
xlat
test
jecxz
mov
stc
repz
push
fisttpll
clc
dec
cmc
insb
add
lahf
aas
jg
nop
mov
add
jb
cmp
loope
ja
inc
mov
push
mov
lahf
aas
pop
stc
pop
push
stc
mov
xor
sub
stc
repz
cmp
aas
xchg
lahf
sbb
std
aam
stos
jmp
cld
xchg
jl
aam
xorb
mov
mov
arpl
daa
cltd
mov
shrl
std
add
movsb
fwait
js
out
pop
mov
inc
mov
in
outsl
mov
sbb
push
ja
mov
fdivp
cli
fcom
push
mov
and
lahf
fistpll
out
jle
mov
dec
pop
add
xchg
outsl
fidivrs
xchg
mov
fsubl
xchg
addb
out
fwait
jo
es
fmull
cmp
outsb
outsl
fidivrs
mov
ja
shlb
inc
arpl
int
aaa
cmp
xor
or
mov
add
pop
repnz
and
inc
rcll
lods
in
mov
stos
push
out
clc
dec
add
fbstp
cli
inc
lods
mov
aad
sbb
sbb
mov
push
ja
repz
fwait
neg
pop
push
fs
xchg
fcomps
call
fs
les
loopne
cmp
or
mov
js,pn
push
mov
aaa
pusha
xchg
fstp
cmp
fstpt
popa
mov
jns
mov
cmp
repnz
test
aaa
outsl
stos
out
mov
jg
popa
fidivrs
out
cmp
clc
insl
ss
xlat
mov
fiadds
push
clc
fisubrs
and
dec
out
fwait
aaa
aad
test
pop
xchg
popf
xchg
mov
push
and
imul
adc
and
orps
cld
inc
getsec
adc
mov
mov
and
or
repnz
fidivrs
sub
ret
aad
sbb
clc
mov
loop
dec
mov
clc
repz
lods
mov
mov
mov
sti
inc
lods
sbb
and
aas
cmpsb
das
cmc
mov
lahf
fwait
pusha
imul
fisubl
sub
adc
adcl
dec
xchg
insb
push
out
fwait
aaa
fdivs
call
mov
jns
outsl
and
lret
loope
or
aaa
outsl
mov
mov
pop
repz
pop
jecxz
push
pop
test
dec
add
jns
mov
xor
jb
lret
ret
loop
ficoms
faddp
rcrb
int3
mov
lcall
stos
insb
sahf
shlb
sub
enter
iret
inc
addl
loop
iret
lahf
aas
incl
inc
cltd
mov
into
fadd
jns
out
repz
xchg
adc
jg
rcrb
frstor
jl
mov
or
xchg
xorb
cmpsb
scas
stc
repz
mov
jecxz
mov
push
push
cld
cld
das
push
das
cmpsb
and
mov
scas
xor
xchg
ret
jmp
adc
repz
movb
lahf
aas
ljmp
test
sub
into
mov
outsl
push
add
push
xchg
dec
rorb
stos
xchg
jnp
repz
pop
lret
mov
arpl
ret
mov
rol
add
stos
loop
test
outsl
ficoms
scas
mov
pop
xchg
bound
or
int
aaa
dec
orl
lods
shrl
int
add
movsl
mov
push
inc
dec
mov
mov
aaa
cwtl
add
aaa
mov
popf
and
adc
sbb
adc
push
mov
mov
ja
xchg
ja
dec
or
pop
jns
out
fwait
aaa
pop
mov
sar
testl
nop
xchg
mov
repz
lahf
sahf
ficoml
cli
ficomps
test
stos
inc
adc
sub
scas
shrb
xchg
jg
daa
insl
cmp
aaa
fists
mov
fs
and
dec
pop
mov
mov
outsl
stos
push
mov
jl
in
aam
enter
adc
jg
mov
ljmp
cld
sti
mov
stc
jg
cmp
insb
pusha
insb
cmp
xor
iret
lahf
aas
adc
dec
add
adc
stc
repz
push
pop
xor
mov
fiadds
inc
out
pusha
orb
jg
outsl
or
repz
cmp
dec
xor
outsl
sub
sub
outsb
fidivrs
dec
sub
sahf
rcrb
popl
aas
push
add
lods
repz
cmp
push
or
sub
mov
sub
dec
outsl
fidivrs
xchg
cmp
hlt
inc
add
xor
aaa
fwait
xor
jge
fpatan
xor
jge
out
fwait
inc
xor
inc
cmp
cmp
cmp
pop
fnstcw
mov
popa
into
cmp
or
stc
repz
inc
xlat
xchg
jae
inc
and
jns
or
jbe
xor
mov
mov
lods
enter
arpl
cmpsl
adcl
aaa
cmp
and
mull
and
mov
test
mov
mov
out
shrb
cmp
add
int
aaa
rcrb
jmp
mov
hlt
loop
pop
nop
aaa
hlt
stos
and
and
decl
mov
pop
in
inc
aaa
and
rcll
xchg
lock
cmp
inc
sar
mov
repnz
mov
push
insb
add
sub
imul
cli
mov
cmp
lods
mulb
test
dec
out
aam
push
jns
jg
rcrb
repz
je
and
cmp
or
mov
cmp
outsl
or
test
cmc
fistpll
mov
xor
dec
popl
jg
sbb
fsubrl
loope
repz
aas
aaa
and
ret
int3
add
sti
xor
xor
scas
in
mov
aaa
adc
stos
mov
in
mov
sub
sub
test
xchg
sub
mov
iret
xor
leave
or
int
repz
fwait
pop
adc
rorb
push
cmpl
sbb
lahf
aas
jg
mull
es
mov
cmp
out
pop
push
add
andl
lahf
jl
icebp
dec
xchg
imul
mov
jg
cld
xchg
insb
or
sbb
lahf
xlat
test
xchg
ss
mov
les
aam
xchg
lahf
aas
jg
aaa
sbb
fldl
repz
shlb
scas
sub
imul
rcrl
inc
cld
jne
popf
adc
clc
data16
mov
and
stos
adc
ret
ja
xchg
fsubrl
fwait
aaa
outsl
or
sub
or
daa
call
dec
out
cmc
enter
fiaddl
stc
fidivrs
inc
enter
adc
frstor
lds
aaa
outsl
mov
aam
std
dec
sarb
out
outsl
fmul
xor
test
mov
aaa
outsl
fidivrs
int3
lea
mov
repz
fwait
jae
cmp
mov
in
cmpsl
cmp
ds
cld
or
fdivl
pop
jnp
outsb
xchg
int
ja
cmp
xchg
outsl
mov
add
xchg
stos
xor
cs
leave
cmp
ss
repz
mov
insl
inc
and
fidivs
adc
sti
add
loop
aas
jg
cld
scas
adc
lcall
sarl
mov
fsubl
mov
aaa
inc
out
mov
sub
daa
cmp
insb
xchg
bound
or
adc
outsb
mov
push
imul
push
push
mov
mov
inc
sbb
and
outsl
jp
fisttps
aaa
in
sahf
cld
stc
repz
and
push
sbb
fildl
add
and
jg
leave
subl
jnp
flds
pop
pop
cld
mov
add
sub
jmp
push
pop
aad
aad
das
mov
repz
data16
and
sbb
or
in
aas
jg
cld
mov
mov
jae
cmpsb
jecxz
insl
jmp
out
lahf
cltd
pop
pop
dec
sub
cmpsl
adc
outsl
fiadds
mov
out
jecxz
sbb
enter
pop
mov
jl
dec
testb
cld
icebp
cmp
js
sbb
leave
lahf
aas
jg
mov
mov
xor
in
cli
add
iret
sbb
mov
in
aaa
adc
nop
addr16
jmp
and
jns
out
inc
and
out
cmp
outsl
fidivrs
jae
xorl
or
mov
out
fwait
aam
popa
aas
mov
daa
roll
outsl
fidivrs
cmpsb
lods
and
xor
aaa
leave
lea
add
das
das
cmp
repz
ljmp
add
xchg
adc
fdivrl
xchg
lahf
push
sub
mov
add
ljmp
aaa
outsl
mov
daa
push
sbb
stc
stc
add
pop
pop
addr16
pop
dec
inc
cmp
adc
sub
xchg
sub
mov
xlat
mov
fwait
addb
es
into
sbb
aam
xchg
sbb
push
ja
cmpsb
ret
enter
outsl
popl
enter
ja
insb
push
mov
fidivrs
dec
xchg
imul
shll
sahf
lock
or
bound
mov
stos
inc
push
iret
scas
outsb
fidivrl
leave
mov
aaa
outsl
fiadds
jns
sub
sub
ds
push
push
insl
cmpsl
or
stc
repz
pop
cmp
sub
scas
imul
out
lcall
int
lods
enter
frstor
fmuls
push
xor
pop
push
add
or
into
in
int
aaa
out
movsl
sbb
cwtl
push
lahf
lahf
xchg
xchg
sbb
lret
insb
adc
sub
orl
daa
outsl
subl
aas
jg
lock
addr16
sub
fs
loope
pop
xchg
repz
lahf
pushf
push
sub
fwait
in
nop
imul
lods
sub
inc
xchg
hlt
sarl
and
in
pop
cltd
notb
dec
ficomps
stos
cmc
jae
imul
icebp
std
mov
push
fnstcw
jmp
movsl
or
adc
sub
jmp
jnp
enter
sbb
out
sub
hlt
mov
lahf
aas
jg
rcr
out
jle
jbe
and
inc
mov
shl
fwait
ja
lahf
push
nop
fwait
fwait
pop
mov
rcrb
repz
jno
outsl
push
cmp
mov
and
push
test
aaa
outsl
sub
add
idivl
cmpsl
ret
sub
aaa
outsl
fimuls
push
daa
mov
or
jns
out
dec
xor
pop
lea
inc
push
inc
aaa
outsl
fidivrs
and
pop
adc
gs
adc
fwait
push
pop
fsts
inc
imul
mov
pop
add
jno
loopne
idiv
dec
sahf
pop
xor
clc
inc
cmp
fistpl
jg
in
js
les
pop
push
je
jp
iret
lahf
aas
test
je
imul
mov
mov
call
push
addr16
nop
dec
mov
xchg
fwait
aaa
lahf
jo
lock
rol
jns
fnsave
mov
push
pop
cmp
add
pop
rcll
push
faddp
and
push
repz
fadds
jno
cli
xchg
ljmp
aaa
outsl
subb
xchg
daa
mov
out
fcompl
mov
pop
add
cmpsb
stos
in
xchg
mov
aaa
outsl
repnz
lahf
cli
mov
jbe
add
cmc
enter
dec
sub
mov
or
mov
mov
int3
aaa
notl
inc
dec
inc
add
loopne
fwait
aaa
outsl
in
enter
repnz
sbb
mov
fdiv
push
call
xchg
das
outsb
push
int3
pop
fnstcw
adc
sbb
stos
js
or
fwait
ja
inc
divl
push
or
lea
xchg
adc
mov
jnp
jns
out
das
sahf
fistl
jmp
mov
cmp
sub
stc
repz
scas
add
lret
dec
pop
insb
rcll
lcall
in
ja
test
test
iret
insb
mov
repz
mov
xrelease
cld
push
xor
lahf
dec
and
add
xchg
lahf
test
xchg
aas
fidivrs
mov
popl
icebp
popl
std
repz
repz
jg
mov
inc
mov
out
fwait
aaa
jb
fdivp
loop
mov
xor
repz
aam
push
loopne
xchg
outsb
shrl
fwait
aaa
outsl
mov
add
mov
jns
out
or
inc
or
mov
sarb
aaa
outsl
fidivrs
aad
rcrb
pop
testl
int
fwait
cli
popa
scas
out
nop
and
push
aaa
and
outsl
fidivrs
or
ja
mov
shlb
out
fwait
aaa
push
inc
cld
loope,pn
push
cs
sahf
mov
daa
cwtl
mov
jg
add
fiadds
xor
cmp
lret
xchg
mov
jns
out
lods
cmpsb
jmp
sub
inc
mov
pop
and
dec
cld
lods
bound
mov
aaa
outsl
ficoms
jb
push
test
stos
lret
scas
je
aaa
out
aam
cs
outsl
pop
jle
sub
pop
arpl
and
addr16
mov
bswap
fwait
aaa
outsl
aad
out
xor
jae,pt
lret
repz
mov
int3
test
dec
lret
fwait
aaa
outsl
fisubs
mov
dec
sbb
mov
out
in
mov
rorb
sbb
icebp
ja
xorb
fidivrs
dec
pop
and
pop
push
addr16
inc
push
loopne
fwait
push
mov
gs
push
dec
fidivrs
jp
js
rol
mov
adc
xchg
fwait
aaa
outsl
xor
shr
leave
jns
push
ljmp
or
dec
sub
jge
arpl
popf
cld
punpckhbw
nop
int
ja
cmpsl
aam
jns
xor
cmp
es
in
jns
push
icebp
leave
in
sub
push
repz
fwait
jmp
push
add
inc
pushf
mov
clc
out
out
xchg
mov
mov
xchg
fcompl
push
mov
stos
fs
daa
jbe
aas
aas
xor
fwait
aaa
outsl
and
jnp
push
pop
adc
push
and
mov
out
push
cmp
cmp
loop
ret
jmp
insb
fidivrs
lahf
and
hlt
scas
scas
cmpsb
out
sbb
or
sbb
jnp
or
xor
xor
cld
sti
mov
mov
sub
lcall
iret
lahf
xchg
add
out
add
mov
adc
inc
cld
stc
pop
dec
sbb
rorl
push
sub
fdivrs
shll
ret
jns
mov
cmpsl
mov
icebp
out
outsb
fdivrl
jmp
cli
lock
stc
pop
xchg
push
jg
jg
cld
sbb
das
gs
cmp
cmp
lahf
insb
adc
mov
loopne
loopne
xor
inc
jl
js
cltd
loopne
xor
xor
repz
fwait
mov
jmp
adc
in
decb
cmp
jns
sarl
fists
pop
pop
xor
sti
shll
aaa
out
pop
xor
sbb
jo
jg
push
aas
jg
cld
stc
dec
add
sbb
fwait
cli
cmp
mov
and
cld
jb
mov
je
pop
jnp
cmp
cld
stc
js
cmp
dec
daa
faddl
sbb
aas
adc
ret
cmpsl
and
cld
stc
repz
iret
jecxz
hlt
xchg
pop
and
sbb
fwait
pop
xor
dec
mov
jnp
popa
xor
aam
sub
mov
mov
or
out
push
inc
or
or
inc
mov
addb
or
mov
jb
mov
cmc
push
adcb
add
ficoml
cmpsl
push
jle
sub
stos
test
test
imul
sbb
add
into
sub
decb
fadds
sbb
push
lds
add
inc
insb
adc
es
hlt
test
adc
insl
and
or
sub
and
ss
andl
mov
inc
mov
std
or
sub
jno
mov
mov
rorb
inc
sarb
aaa
mov
loop
adc
xor
rcrb
xor
je
mov
addr16
repnz
inc
push
mov
and
add
rorb
push
jne
mov
and
xor
sub
adc
dec
add
je
adc
sub
loop
lret
inc
inc
test
inc
cmp
push
add
sbb
subl
cltd
push
dec
push
ret
mov
mov
push
sub
stos
loope
das
push
lret
mov
test
push
mov
mov
xchg
ret
subl
xchg
clc
fisubl
out
into
mov
andl
and
add
add
lcall
je
call
orb
insb
sub
int3
aas
xchg
cli
or
pop
push
aas
adc
repnz
and
add
mov
adc
and
xor
cli
add
cmpsl
mov
cmp
mov
lock
in
test
sti
movb
jnp
mov
add
ret
jb
push
pop
push
shrl
mov
push
cmp
sub
das
push
or
add
xor
add
cmpsl
mov
addl
and
ret
adc
pushf
push
and
lea
push
into
add
sbb
mov
sbb
adc
push
push
mov
and
mov
fildll
adc
mov
mov
push
push
or
lock
daa
adc
inc
aam
adc
push
loop
adc
inc
sarl
dec
cmpsb
sbbb
ds
std
adc
clc
sbb
lock
jbe
push
inc
pop
cwtl
cmp
fstpl
push
nop
mov
ret
add
lea
dec
mov
scas
test
xor
add
insl
sub
sbb
scas
or
pop
add
jecxz
pandn
mov
jge
imul
lods
mov
adc
mov
jae
scas
cmp
in
fdivrs
mov
bound
mov
jae
sbb
adc
push
inc
aaa
jecxz
push
js
or
xchg
sbb
mov
imul
sbb
mov
and
insb
jne
loope
pop
xacquire
jbe
adc
idivb
push
into
cwtl
sub
sub
fidivrl
sbb
adc
pop
adc
shrl
in
add
popa
repnz
dec
testb
lret
imulb
call
cmp
cmp
mov
shll
repnz
push
inc
push
inc
xor
mov
cmpsb
out
sbb
push
or
ljmp
inc
mov
sub
mov
movb
stos
aam
fidivl
or
mov
lods
outsl
test
into
push
cmp
subl
outsb
dec
cli
add
jb
test
add
imul
adc
mov
push
xor
and
pop
adc
xor
jbe
loop
lds
push
push
or
imul
xor
xchg
shrl
aad
mov
mov
cmp
push
pushf
jae
adc
mov
pop
loop
mov
icebp
adc
jmp
mov
fcomip
mov
movsl
xchg
ret
jne
aam
xor
add
icebp
or
testb
ret
mov
cmp
jno
mov
loop
adc
imul
push
shll
sub
pop
cmp
sbb
fs
mov
push
and
cmc
sub
push
adc
jae
cmp
outsb
aaa
or
orb
xchg
jl
lret
jge
inc
andb
add
bsr
mov
push
push
addr16
pop
stc
pushf
roll
add
in
jns
push
mov
mov
sbb
and
or
pop
xchg
lea
add
adc
mov
les
mov
push
add
push
outsl
shrl
in
sub
mov
jp
pop
stos
push
andb
mov
push
adc
fdivrp
or
andl
adc
cmp
inc
movb
and
sbb
cmp
and
out
mov
add
fs
sbb
dec
insb
cwtl
test
outsb
and
ror
dec
data16
psubusw
popa
fmuls
pushf
adc
rcll
push
lret
dec
int3
pop
and
or
rcll
bswap
xor
loope
mov
sub
sbbl
repz
sub
cmp
or
push
les
dec
push
mov
adc
nop
insl
add
pop
dec
sbb
mov
shlb
sub
mov
jnp
call
mov
in
rolb
inc
cmp
lods
inc
push
into
jnp
xor
dec
test
or
in
adc
push
adc
push
fisubrl
lock
mov
mov
pop
orl
sbb
lock
pop
cmp
adc
mov
and
mov
or
xor
add
decb
sub
or
loope
jno
adc
scas
mov
fsubp
decb
xor
sbb
mov
movl
jne
push
aas
or
jne
adc
sbb
int3
repnz
fisubrs
mov
mov
aas
add
push
sbb
insl
pextrw
mov
add
test
ret
test
pop
xor
add
or
jmp
stos
or
mov
adc
test
adc
scas
mov
push
out
xor
adc
test
cmp
or
or
loopne
leave
aad
or
lock
pop
test
je
inc
adc
or
jmp
mov
or
sbb
mov
loopne
xchg
or
jne
mov
xor
mov
lods
mov
adc
lds
sbb
xor
popf
sub
push
sub
les
cltd
and
fs
imul
xor
dec
loope
pop
push
xchg
sbb
jmp
or
pop
xor
test
rcrl
adc
or
ret
insl
push
fnstenv
test
adc
syscall
sbb
call
push
pop
adc
out
cmp
and
and
sahf
cs
adc
aas
lea
xchg
mov
lods
xchg
dec
les
sub
xor
mov
dec
sub
mov
sbb
inc
orl
mov
fldl
adc
lahf
mov
mov
pop
daa
pop
and
rcll
popf
push
add
lcall
lret
jne
inc
les
push
push
scas
and
pop
fmull
sub
jle
push
add
jo
inc
inc
inc
stos
add
push
pop
inc
and
cli
mov
lock
add
dec
pop
shl
les
and
pop
add
xor
bound
pop
arpl
mov
outsb
and
lea
inc
xchg
mov
sti
push
sahf
or
pop
dec
and
rcrb
sub
mov
negl
push
mov
sbb
xchg
es
lods
fcoml
and
and
insb
popa
sbbb
cmp
mov
imul
add
add
insb
out
xchg
arpl
lock
aam
xchg
popa
mov
pop
mov
sub
push
test
inc
or
cmp
xor
sbb
sub
sbb
or
outsb
lret
sarl
stos
clc
or
ret
inc
pop
call
inc
jo
inc
rclb
sbb
addb
sbb
outsl
ret
mov
in
out
sbb
lret
lcall
and
icebp
rclb
es
pop
mov
aas
lds
std
jo
popa
or
cmc
or
call
add
add
adc
sub
mov
lock
movsb
and
adc
xchg
ret
decl
xchg
adc
stos
dec
lret
adc
and
adc
jb
push
xor
and
cmp
inc
addr16
add
xor
stos
sbbb
into
inc
push
push
inc
fisttpl
inc
inc
push
int
enter
or
ds
add
xor
add
mov
pop
cmp
fcomps
xlat
adc
xorb
mov
add
or
sub
jp
sub
fwait
lcall
adc
or
jae
pop
neg
adc
or
mov
push
dec
mov
push
aad
ror
fdivs
in
test
xchg
fstpt
jp
cmc
ret
adc
test
aad
xor
in
in
mov
or
mov
sahf
or
js
test
hlt
pop
xor
push
in
inc
movsb
add
xor
add
popf
mov
rcll
sbb
xor
adc
push
mov
adc
fmul
push
inc
adc
add
fstpl
or
das
or
cmp
or
mov
cmpsl
add
call
inc
push
sub
and
cs
mov
push
loopne
stos
roll
jnp
and
cltd
rolb
pusha
stos
or
loope
add
roll
adc
popf
ret
ljmp
mov
mov
cmpsl
out
push
ret
add
aad
inc
pop
dec
ja
cmp
fimuls
mov
jle
out
clc
pop
inc
rcrb
shlb
insl
cmpsb
dec
xor
inc
sbb
add
xlat
in
add
inc
loopne
push
adc
icebp
inc
inc
xchg
mov
pushf
scas
dec
jge
mov
mov
pop
sub
sub
jbe
jno
inc
push
in
pop
mov
gs
mov
mov
inc
stos
jge
fmuls
inc
adc
sbb
mov
popa
mov
push
adc
cmc
popf
test
xchg
loope
push
sub
lcall
clc
cmp
xlat
hlt
or
outsl
adc
rcrl
inc
adc
dec
push
mov
xlat
scas
addl
cmp
sub
shrb
xchg
leave
bound
push
nop
sub
repz
pop
lods
cmpsl
jb
shrb
ljmp
cmp
dec
inc
imul
mov
adc
push
sub
popf
pusha
push
mov
add
dec
xchg
test
int3
rolb
push
jmp
decl
push
push
push
gs
push
nop
and
or
pushf
and
mov
xor
or
pop
sbb
out
xchg
pop
mov
cltd
adc
push
sub
rcrb
das
push
sbb
mov
or
push
into
jmp
orb
or
int
loope
test
fistpl
mov
arpl
lock
sarb
pop
dec
test
add
outsb
pop
add
sbb
sub
hlt
dec
xchg
icebp
int3
pop
scas
or
push
clc
incb
inc
or
aas
cmpsl
stos
mov
pop
inc
push
add
push
shrb
fwait
push
ds
cwtl
push
movsb
jg
xchg
dec
inc
jge
dec
out
mov
xorb
pop
cmp
sbb
pushf
test
cwtl
fs
add
mov
rcl
arpl
or
sbb
aad
add
dec
lock
push
mov
sub
outsb
dec
jns
inc
add
sub
cmp
cmpsl
adc
sbb
rclb
pop
lock
sub
add
push
push
hlt
sbb
test
xor
add
test
adc
ds
adc
jp
ja
mov
std
push
inc
push
adc
mov
repnz
shlb
inc
push
xchg
mov
jp
mov
mov
stc
or
or
mov
adc
mov
add
mov
pop
pop
lahf
pop
adc
decl
add
sub
inc
sbbl
in
push
add
jae
xchg
in
loopne
insb
push
jo
and
in
loopne
arpl
inc
rolb
adc
push
mov
adc
ficompl
add
mulb
aas
cmp
and
inc
ret
fidivrl
jge
orb
rep
or
inc
fistpl
clc
in
shl
dec
add
sub
inc
mov
jno
xor
and
enter
mov
cmp
lret
mov
scas
xor
xchg
push
rcrl
inc
or
ficoml
imul
sub
pop
pop
push
xor
pop
sqrtps
add
addb
sarb
mov
sbb
bts
icebp
roll
lea
sarl
sub
data16
inc
xor
push
js
sub
out
aad
or
jnp
rcrl
sbb
mov
jmp
aaa
cmp
or
push
leave
mov
jg
and
lods
in
inc
mov
scas
sub
push
cmc
mov
or
stos
dec
adc
sti
imul
sub
test
dec
shrb
mov
jo
adc
pop
mov
rolb
in
jno
pushf
or
lock
rorb
dec
loopne
fwait
roll
push
adc
push
clc
ljmp
jge
sbb
or
adc
mov
scas
push
js
fisubrl
pushf
js,pt
in
nop
stc
mov
pop
mov
add
icebp
add
in
adc
cwtl
push
rclb
out
push
adc
and
or
adc
push
mov
cld
js
push
xchg
pop
mov
push
shrl
sbb
stos
mov
call
stc
mov
mov
outsb
jl
push
je
clc
andb
adcb
es
add
jp
xchg
push
adc
movsl
cmp
pop
push
sbb
test
push
cmp
fsubs
and
add
stos
rcrb
push
xor
pop
mov
rolb
sub
out
rclb
into
test
add
js
or
xadd
sbb
or
and
sti
jbe
sbb
rcll
push
push
std
push
or
enter
push
fs
sub
insl
add
mov
shll
mov
mov
pop
xor
mov
pop
adc
add
jnp
xlat
adc
sbb
jg
push
andb
test
adc
mov
push
call
pop
sub
push
fidivl
mov
mov
push
inc
icebp
out
push
les
adc
cmp
adc
sub
inc
inc
xor
gs
movsb
rclb
push
inc
mov
or
ret
lds
inc
pop
add
sbb
or
or
shr
push
loope
call
push
xchg
cmp
sbb
ret
out
sbb
add
scas
or
imul
and
jnp
xor
nop
jns
xor
jecxz
xchg
mov
xchg
mov
jb
les
pop
cmp
or
and
push
add
xchg
and
scas
rolb
mov
mov
mov
lds
push
pusha
ret
ljmp
sbb
add
es
pushf
pop
call
mov
push
enter
cmc
andb
pop
or
add
in
or
fisttps
cltd
push
push
xchg
or
jno
mov
jns
or
push
or
lret
or
inc
and
jno
mov
sbb
in
rcrl
inc
sbb
sub
add
rol
cmpb
faddl
add
inc
stos
pop
daa
pop
sub
sub
adc
adc
rcll
add
dec
push
jecxz
mov
rorl
add
call
sbb
or
and
test
jmp
adc
ret
lds
push
cwtl
ljmp
inc
mov
add
jecxz
or
scas
pop
icebp
mov
inc
xor
call
dec
xchg
push
idivb
push
inc
jnp
jno
xchg
roll
and
clc
call
dec
shlb
fiaddl
inc
in
fsubr
sbb
or
inc
inc
and
jl
push
popf
jae
pusha
rolb
data16
outsl
fcmovne
sub
inc
out
add
xor
pop
inc
sbbl
cs
sbb
mov
cmpsb
pop
mov
ljmp
cltd
fsts
mov
adc
xchg
add
rcll
add
or
test
adc
adc
adc
aam
or
inc
lods
mov
mov
nop
xor
leave
inc
je
or
roll
pop
rcl
xor
xchg
pushf
ljmp
int3
push
pop
push
mov
sahf
xor
push
cmp
jb
sub
jl
push
mov
fs
inc
add
mov
test
mov
jbe
jb
mov
pop
ret
in
lods
test
or
or
xchg
inc
push
push
aam
add
mov
adc
add
xor
adcl
icebp
xchg
repnz
mov
nop
cmp
inc
out
mov
inc
js
clc
mov
jo
cmp
adc
cmp
lds
mov
xorb
mov
cmp
mov
leave
arpl
addl
into
adc
jne
sbb
cwtl
cmp
dec
cmpsb
test
lds
mov
ret
push
stos
daa
lret
push
mov
push
test
cmpl
test
xchg
mov
ficoml
push
sahf
dec
push
shlb
int
xchg
loop
aaa
sub
ret
dec
test
sti
repnz
mov
ret
or
push
inc
adc
and
roll
or
or
ret
dec
lods
mov
mov
add
and
test
lock
fcmovnu
mov
push
aam
adc
mov
push
adc
push
leave
lret
lds
in
or
popf
xchg
mov
rcl
pop
clc
ss
or
or
out
inc
adc
adc
or
add
roll
cmp
addr16
jp
aam
fiaddl
imull
add
data16
popa
push
insb
pop
rcll
pop
mov
sbb
loope
lds
jae
add
lock
push
cmp
subl
stos
mov
sarb
adc
push
add
jmp
shlb
lods
xor
jbe
push
mov
sarb
pop
fisubrl
into
push
mov
push
xchg
pop
sbb
ljmp
in
ret
in
sbb
mov
icebp
jo
and
insb
inc
push
xor
or
pop
xchg
aaa
mov
inc
push
adc
popa
shlb
stc
xchg
ffree
sub
subb
mov
pop
xor
push
shlb
and
push
sub
sub
sub
sub
mov
push
aam
or
loope
and
bound
xor
loopne
subb
cmp
lret
pop
adc
push
nop
sub
or
xchg
mov
sbb
cs
in
ret
or
enter
sbb
cmp
jns
cmp
dec
pop
inc
adc
idivl
mov
shrb
loopne
pop
popa
lock
nop
inc
jg
mov
inc
ljmp
fmull
pop
mov
or
cmp
cmp
xchg
or
jmp
mov
push
ret
subb
fildll
inc
cmp
cmp
test
push
fmul
flds
cwtl
ret
insb
adc
pop
repz
roll
xor
pop
or
sbb
stos
mov
cmpb
out
push
or
sbb
pop
rcrb
xlat
xlat
lsl
lahf
mov
subb
or
inc
mov
cmp
dec
and
push
push
sbb
rcrl
xchg
cmp
fimuls
jno
js
mov
adc
adc
ja
xorl
inc
rorb
jg
mov
incb
adc
scas
cmp
or
fcoms
aaa
jg
insl
lds
sbb
push
test
push
aas
stos
sti
je
orb
dec
loopne
or
sarl
add
mov
in
inc
push
adc
cmp
or
add
mov
enter
int
in
and
inc
push
cs
test
jo
add
inc
or
movsl
pop
inc
test
lods
ds
rorl
inc
shlb
push
jge
jmp
add
or
mov
push
sbb
addr16
sub
insl
adc
hlt
test
or
ds
add
xor
mov
sbb
add
push
add
popf
and
lcall
push
cmp
inc
sbb
cmp
cmp
xor
cmpsl
push
das
test
aas
outsl
pop
or
call
sbbl
adc
notb
sbb
xor
dec
pop
jno
sub
mov
sbb
movsl
xchg
push
stos
sti
clc
or
lds
lcall
test
sub
pop
push
les
sbb
ret
sub
inc
sub
sti
adc
or
inc
movsb
xorb
push
inc
mov
sub
push
add
push
lea
pusha
mov
and
add
test
inc
in
jns
xchg
sbb
test
loope
call
xor
xchg
loopne
and
add
fs
imul
push
outsl
pop
push
insl
fdivl
imul
xor
xchg
sub
mov
push
adc
rorb
sub
xor
mov
pop
xor
sbb
or
or
dec
push
rolb
lea
clc
jno
enter
mov
cltd
ljmp
push
sub
cli
pop
cmp
movb
sub
add
xor
mov
stos
or
sbb
adc
inc
mov
inc
xor
addr16
call
les
sbb
int
and
cltd
pop
dec
popa
adc
sub
push
fcmove
inc
rcr
sub
sbb
es
in
lcall
enter
sbbb
or
mov
out
cld
adc
loopne
inc
add
push
pop
movsl
and
les
sti
inc
aam
adcl
out
add
or
sbb
jge
or
stc
add
repnz
xchg
clc
test
and
push
push
push
push
fsubs
mov
sub
mov
add
cmovge
rclb
dec
cmp
sbb
cld
call
test
xor
adcb
xor
add
in
pop
stos
jno
stc
psllq
pop
test
sbb
jo
inc
cli
sbb
pop
lretw
sbb
adc
mov
push
test
ret
add
push
in
cmpsl
and
adc
leave
sub
sub
insb
shlb
movsb
ss
cmp
fdivr
adc
rolb
divb
call
aas
push
add
icebp
adc
jge
inc
adcl
pop
cmpsb
or
or
and
sbb
adc
sub
orl
add
jbe
mov
dec
rclb
xor
adc
stos
cmp
sub
dec
sbb
mov
mov
cmpsb
loop
add
adc
pusha
ret
or
jp
mov
cmc
add
cmp
xor
js
imul
push
push
xor
add
sub
inc
jle
xchg
or
push
sar
adc
mov
es
or
daa
into
sub
addb
sbb
lds
cmp
xchg
or
dec
jae
or
inc
jo
xor
and
add
imul
pusha
and
and
dec
into
in
je
push
in
sub
ret
and
or
into
cmp
adc
sbb
sarl
pop
inc
pop
test
sbb
sbb
loope
adc
add
lea
push
pop
push
sub
ja
dec
or
pop
sbb
je
rcrl
add
xchg
sub
ret
mov
lret
hlt
sbb
dec
jle
rorl
cmp
aad
clc
push
xor
aaa
adc
loopne
insl
cmc
add
and
rol
push
sbb
mov
mov
jp
mov
or
call
sbb
ret
dec
inc
roll
or
push
shr
out
jecxz
mov
adc
es
sbb
sbb
lds
mov
adc
mov
stos
pop
push
push
sub
xchg
hlt
jne
add
add
imul
bound
mov
mov
push
mulb
or
fisubrs
sbb
test
aad
mov
dec
and
inc
cltd
cmp
cmp
addr16
pop
cmp
push
pushf
bound
jecxz
das
sub
pcmpgtb
cmp
inc
out
inc
lods
ret
mov
and
sub
jbe
sbb
inc
xor
fistl
pop
shlb
loope
cmp
and
stc
or
scas
xor
dec
jb
aad
addl
mov
jp
nop
ds
and
mov
popf
lret
and
icebp
add
push
sub
xor
cmp
sti
sbb
xchg
push
cmpl
les
xchg
cltd
mov
fistpll
stos
hlt
ja
mov
pop
xchg
adc
and
test
test
adc
jae
push
xor
loop
mov
inc
fldl
push
mov
mov
cli
or
sbb
scas
cmp
stos
push
mov
add
push
pop
mov
sub
rorl
shll
sbbb
in
repz
icebp
or
sbb
cmp
add
pop
add
push
adc
aas
push
adc
ret
and
cmp
jbe
inc
pop
push
dec
adcb
add
sub
iret
jne
inc
es
enter
and
add
dec
jle
int3
sbb
inc
xor
rcl
cmp
lea
and
data16
cmc
frstor
push
fldenv
in
lock
push
fisubs
outsl
lods
jo
lret
inc
jl
sub
adc
lock
pop
inc
adc
into
sti
cwtl
adc
cli
shlb
enter
pop
sahf
xchg
mov
cmpsl
push
cwtl
sbb
jge
pop
aam
pop
add
pusha
rolb
xorl
cmp
aaa
stos
rcll
xorb
push
push
sub
push
xor
sub
insl
and
mov
std
add
sbb
jb
adc
stos
dec
cltd
sbb
adc
mov
fcmovb
cli
dec
mov
cmp
ljmp
data16
mov
lock
dec
shlb
ljmp
lock
pop
mov
push
sbb
movsb
inc
and
sbb
and
push
mov
popf
mov
xor
dec
and
add
shrb
mov
cmp
pop
push
adc
jo
insl
lods
xor
cmp
scas
rcll
das
fsub
add
in
cmpsb
mov
jmp
xchg
inc
sbb
sbb
aam
outsb
jo
outsb
or
push
add
push
daa
push
mov
mov
sbb
shrl
xchg
scas
pop
cmp
push
adc
cmc
or
loop
pop
xor
leave
jno
fs
test
shl
xor
leave
shrd
and
stos
shlb
and
mov
inc
xchg
adcl
aaa
adc
daa
loopne
in
adc
fs
adc
push
mov
or
mov
cmp
mov
or
aam
shrb
lahf
adc
pop
inc
mov
cs
jge
and
cmpsb
lock
mov
ror
shrb
inc
jp
cmc
xor
dec
adc
sub
adc
into
stos
test
inc
fistpl
jmp
or
leave
das
sbb
inc
mov
aad
push
adc
push
xchg
mov
pushf
mov
xor
lods
cmp
xchg
stos
push
adc
lret
and
dec
add
leave
rol
pop
movsl
aas
roll
dec
adc
adc
outsb
les
mov
movsb
mov
aad
dec
roll
inc
mov
sub
bound
cmp
push
cli
pop
xchg
icebp
dec
xor
push
cltd
inc
ret
leave
stos
fiaddl
and
add
add
shrl
mov
lret
shlb
clc
outsb
mulb
outsb
ret
or
addr16
add
mov
jp
adc
daa
outsl
push
push
and
arpl
sub
sbb
rcl
jae
test
push
add
mov
sbb
push
xchg
mov
mov
popa
push
mov
fldl
xor
jae
addr16
aaa
sub
lock
and
mov
icebp
or
inc
call
and
adc
adc
sbb
mov
mov
xchg
pop
jb
adc
cmp
adc
gs
mov
xor
dec
jno
enter
clc
ret
adc
pop
lea
pop
xchg
das
imul
push
pop
or
mov
enter
cwtl
fiaddl
mov
jp
and
hlt
nop
sub
dec
xor
sbb
add
xchg
sbb
test
sub
rorb
sub
andb
pop
rolb
pusha
and
shrl
xor
mov
add
push
test
cld
sbb
add
sub
or
mov
rorl
ja
das
xchg
inc
dec
fisttpl
jnp
mov
push
adc
leave
rolb
cmp
insb
scas
ret
adc
cmpsb
repnz
pop
inc
daa
and
jg
xor
and
and
jb
jp
add
pop
pop
add
adc
push
sbb
lods
into
add
loopne
dec
xchg
in
pushf
mov
pop
addr16
fisttpl
ds
inc
rcll
sahf
push
add
jbe
pop
mov
test
add
sbb
hlt
dec
jne
xadd
dec
add
outsb
adc
aam
mov
pop
cmpsl
mov
inc
sbb
push
sub
popf
ret
mov
jo
and
dec
scas
rcrl
xchg
xorb
sub
inc
cmp
insb
popf
ljmp
test
scas
push
push
ljmp
mov
call
adc
aam
jo
shll
adc
pop
test
sub
pop
daa
adc
mov
inc
cli
add
rcll
mov
mov
cmp
sbbb
dec
lret
lock
jg
movsl
add
loopne
sub
cmp
pusha
movsl
or
add
adc
aad
jne
push
dec
scas
loope
shrb
cli
push
xchg
ljmp
and
xrelease
popa
icebp
daa
lret
bound
incl
lods
cmp
mov
add
fwait
pop
insl
enter
loope
add
test
loop
pop
or
mov
js
push
and
pop
mov
inc
sbb
push
push
push
pop
dec
in
cmp
inc
inc
add
enter
xchg
push
push
mov
xchg
fwait
test
mov
jecxz
inc
test
cwtl
jne
push
imul
rolb
rcll
pop
sbb
sbb
push
cmp
adc
push
ret
inc
pop
cmc
ret
orl
out
mov
nop
out
xor
aam
dec
sub
rclb
add
int3
loopne
sbb
leave
arpl
xor
mov
mov
dec
cmp
inc
or
mulb
aad
lret
imul
mov
test
adc
arpl
rcrb
scas
pop
ror
ss
mov
sub
pop
mov
pop
or
dec
loope
mov
add
mov
imulb
mov
lds
idiv
sbb
and
lcall
sbb
scas
sub
cmp
or
adc
jo
les
push
fcomi
jl
stos
adc
sbb
sbb
adc
jb
mov
adc
mov
dec
inc
movsb
dec
push
out
sysexit
inc
jmp
loopne
inc
mov
sbb
or
leave
sbb
lea
pop
adc
pop
xchg
sbb
pop
mov
hlt
mov
xchg
ljmp
lds
jo,pt
shl
bound
js
rolb
xor
add
sbb
adc
mov
xchg
sub
or
loope
dec
inc
pop
add
push
aam
pop
add
into
cmp
jne
mov
cmp
push
sub
je
lock
add
and
cltd
cmp
sbb
or
call
and
add
push
push
mov
fmul
jo
hlt
aam
popl
fsub
bnd
push
jae
mov
cmp
popa
jp
mov
add
mov
sbb
rcl
sub
add
lds
and
sub
movl
dec
mov
xor
jo
in
jmp
adc
inc
xor
rcrl
das
and
sub
push
shlb
mov
cmp
lcall
dec
and
addb
cmp
test
outsb
adc
adcb
pop
mov
push
sub
mov
pop
xor
inc
sbb
inc
add
cmpl
rcrl
push
and
sbb
adc
pop
dec
push
repnz
gs
mov
and
mov
rcll
inc
mov
addl
and
jb
aaa
cmpsl
mov
inc
ja
inc
sub
sbb
sbb
es
xchg
mov
jl
xchg
mov
mov
add
add
shrb
xor
orl
mov
cmpl
xor
xchg
adc
sub
shr
in
rorb
xor
sbb
push
xchg
fnstenv
ffreep
ret
ljmp
aam
push
rclb
andb
xchg
add
je
or
mov
and
cmp
xlat
sbb
inc
cmp
add
inc
adc
pop
stos
sbb
push
ljmp
loop
sbb
dec
lock
test
adc
adc
ret
ds
inc
dec
sub
ret
adcl
xlat
scas
imul
out
add
cmp
dec
fnstenv
inc
orl
roll
lret
jae
movsb
push
add
lea
icebp
aad
scas
stos
or
jo
mov
adc
xchg
mov
stos
add
stos
lods
mov
shll
jl
add
adc
loop
inc
pop
push
cmp
popa
loopne
adc
cmpsb
pop
pop
inc
mov
aaa
lea
pop
add
es
pop
xchg
mov
push
in
stc
mov
cmp
sub
add
and
and
pushf
add
test
push
into
pop
or
ret
int
push
pop
add
or
in
mov
add
mov
shrb
mov
mov
mov
adc
and
push
fdivl
int
mov
gs
push
loope
aam
in
roll
sbb
pop
sub
mov
sub
or
out
das
out
not
and
daa
sub
mov
cmc
mov
lahf
push
cmp
adc
mov
xchg
sub
in
mov
mov
or
ljmp
adcl
push
in
xchg
je
dec
sbb
dec
push
cmp
push
loop
pop
shll
rorb
cmp
ret
push
cmpsb
sarl
lds
pushf
add
stc
gs
cmp
mov
xor
push
icebp
jmp
lock
sbb
adc
sub
lcall
mov
or
icebp
pop
sbb
add
sub
lret
aas
push
or
ss
sub
mov
sbb
nop
lods
mov
jo
or
into
xchg
or
mov
sub
loop
cmpsl
add
jb
push
pop
mov
sub
adc
inc
and
sub
add
pushf
imul
lret
fsubrs
dec
mov
loop
jg
push
jb
xchg
mov
int3
idivb
mov
orl
xor
sub
jbe
test
adc
sub
mov
add
pusha
push
xor
sbb
test
sub
inc
adc
pop
adc
add
aas
jo
and
and
or
mov
shll
add
lods
fcmovu
add
sbb
mov
sar
jp
and
xor
jns
mov
inc
add
sub
and
sbb
dec
push
xor
add
sub
cmpl
sbb
call
push
push
mov
pop
in
xorb
adc
mov
mov
shll
ds
fwait
test
xchg
ljmp
add
enter
push
inc
pop
mov
aad
add
jo
dec
int
cmpl
mov
push
cmpsb
sbb
stos
mov
mov
jno
in
jp
xor
ret
call
mov
aaa
lods
sbb
shrb
stos
mov
andb
inc
pop
enter
sti
push
mov
pop
xchg
push
add
xlat
add
pop
mov
sub
and
out
mov
dec
mov
mov
pop
cmp
mov
shrb
push
xchg
in
iret
xchg
mov
adc
cmp
jbe
or
insb
in
add
es
mov
inc
icebp
inc
adc
jne
stos
pop
stos
xchg
test
dec
sbb
mov
xchg
jmp
mov
or
in
add
les
sbb
and
mov
inc
sbb
ljmp
sbb
inc
icebp
and
loopne
or
push
testb
shl
ret
test
sbb
dec
in
jb
push
mov
push
xchg
test
mov
push
pop
and
sbb
push
cmp
data16
mov
or
jp
mov
adc
xor
ror
int
jg
sub
roll
sbb
adc
mov
push
mov
xchg
xor
adc
push
fistl
imul
sbb
inc
push
dec
adc
pop
cmpsl
into
ja
and
add
cmp
fwait
adc
imul
or
cmp
add
mov
daa
sub
js
test
push
call
loopne
sub
or
inc
xor
inc
test
or
int
rorb
shll
test
pushf
sub
mov
sub
ds
cmp
inc
loopne
cmp
sbb
sbb
add
adc
add
rolb
jl
shl
inc
nop
xchg
sbbb
lods
mov
adc
call
add
pop
enter
add
sub
dec
shll
adc
cmc
pop
xor
push
aam
cmpsl
nop
cmp
inc
sbb
adc
inc
orb
jb
sub
dec
mov
je
mov
push
sbb
add
test
jb
inc
xor
adc
pop
ficoms
push
dec
cmp
je
ret
bound
lods
inc
es
stos
je
adc
icebp
push
add
test
in
insb
daa
sbb
adc
leave
push
movsl
jb
xor
cmp
rorb
sub
rol
out
or
sbb
loope
push
out
adc
jno
icebp
scas
xchg
test
mov
sub
xchg
dec
fisttpl
add
cmp
cmp
fadds
popf
or
aad
and
jbe
insb
xchg
sub
roll
lods
popf
lcall
add
sub
sbb
push
add
and
add
rcll
mov
sbbl
xor
inc
sbb
enter
shrl
int3
sub
and
in
pop
or
cmpsb
test
pop
push
punpckhbw
push
ljmp
jo
roll
sti
rcr
cmpsb
mov
inc
push
mov
dec
xchg
rolb
lret
push
inc
sarl
add
imulb
lock
jne
mov
fs
inc
inc
insl
popf
push
clc
je
test
xor
adc
dec
loopne
push
adc
cmp
or
and
dec
push
out
inc
testl
jae
sub
cmp
adc
mov
xor
fistps
push
add
cmp
pop
push
sbb
adc
sti
nop
outsb
and
int3
shrb
std
stos
mov
rcrb
adc
pop
leave
pop
pop
cli
repnz
push
mov
fcomps
dec
mov
lahf
mov
xor
mov
sub
xchg
xor
bound
jle
jbe
adc
push
stos
pop
lock
sbb
rol
arpl
sbb
dec
add
pop
dec
out
and
push
scas
jae
push
adc
mov
test
bswap
dec
push
test
ljmp
stc
adc
inc
mov
mov
push
or
push
inc
cltd
add
adc
cmpsl
mov
mov
sbb
xlat
or
xchg
icebp
cmpsb
push
or
shrl
push
add
inc
push
xchg
test
push
mov
cmp
jnp
in
dec
aam
cmpl
inc
jle
add
les
pushf
push
mov
adcl
shlb
xorl
xchg
sbb
push
xchg
jbe
xor
and
dec
call
je
adc
lds
add
loopne
out
sbb
leave
out
add
dec
jecxz
ret
rol
addl
pop
push
add
lcall
shlb
jno
aad
mov
xchg
adc
cmp
shl
or
push
movsl
repz
fcmovb
add
push
fildll
dec
insl
jge
pop
lret
add
arpl
dec
call
jmp
movb
push
shll
inc
cmc
mov
imulb
or
add
xor
test
mov
adc
xor
into
xchg
mov
jno
inc
or
push
add
into
or
xchg
stos
rcrb
mov
shrb
adc
add
jb
ljmp
test
sbb
sbb
add
pop
mov
mov
in
movsl
cltd
cmp
gs
daa
mov
jb
shl
ret
sub
sti
pop
sbb
adc
xor
rorb
mov
mov
sbb
mov
movsl
sub
mov
or
adc
js
adc
or
xchg
add
add
ret
sbb
mov
divb
jbe
xor
push
push
push
addb
push
dec
shrb
roll
sbb
sbb
jne
mov
bound
sub
fwait
push
lock
sbb
inc
inc
inc
add
data16
add
adc
jo
push
add
roll
cs
aad
test
add
pop
adc
rcrb
add
xchg
adc
test
or
or
adc
pcmpgtw
xor
adc
test
repnz
xchg
sub
call
add
sbb
aam
add
orb
lcall
cmp
pop
pusha
ror
mov
pusha
mov
jecxz
orl
jmp
outsb
mov
mov
push
pushw
push
pop
add
cmp
call
cmp
xchg
insb
sbb
lret
fwait
aad
test
add
aad
test
xor
and
and
add
sbb
inc
rcrb
or
imul
ficompl
inc
in
stos
lret
cs
push
shlb
mov
mov
add
cmpsb
push
add
lock
or
cmp
pop
int3
js
lock
fdivrl
mov
push
pop
dec
or
enter
adc
les
cmp
inc
add
push
or
and
xchg
cmp
add
xchg
xchg
sarl
ret
lret
or
scas
scas
cld
xlat
enter
jbe
outsb
dec
inc
stos
into
mov
cltd
and
push
rolb
and
push
pop
add
mov
bound
popa
mov
sub
cmp
mov
sbb
mov
add
jne
push
mov
stos
inc
cmp
push
mov
jge
movl
imul
lcall
loopne
mov
orl
lcall
dec
scas
add
push
mov
test
inc
ret
inc
lock
nop
mov
cld
add
add
jbe
cmc
inc
cmp
pop
mov
add
clc
testb
push
popf
mov
sbb
cmp
xor
hlt
or
inc
sahf
xchg
sti
inc
jo
jmp
dec
js
push
mov
mov
jne
mov
jno
pop
arpl
cmp
xchg
ret
add
jge
daa
lds
sub
xor
icebp
cltd
adc
movups
sarb
add
lods
sbb
mov
dec
mov
js
jnp
fsubrs
sbb
jmp
pop
xchg
test
ret
sub
adc
outsb
aam
jbe
inc
mov
les
lods
int3
stos
inc
addl
dec
mov
ffreep
int3
stos
lcall
hlt
rcll
or
pop
cmpsb
sub
adc
mov
push
mov
pop
pusha
mov
or
jae
testb
leave
inc
daa
test
shlb
int3
sub
adc
stc
and
add
loop
xchg
add
dec
inc
xchg
jo
adc
adc
fistpl
inc
dec
push
inc
adc
inc
dec
or
dec
xchg
pop
orl
pop
fdivrl
test
push
or
adc
les
dec
out
or
sub
lds
adc
stos
ljmp
mov
add
mov
adc
stos
pop
arpl
icebp
lret
push
popf
pop
aad
les
out
mov
push
mov
adc
ret
call
jg
mov
adc
aad
fidivs
fs
les
sbb
out
push
in
sub
or
pop
add
rcrl
or
in
ljmp
or
mov
insl
or
jle
icebp
mov
xor
pushf
adc
push
aam
enter
adc
inc
loop
leave
adc
dec
dec
add
mov
add
inc
loope
cmp
mov
add
enter
inc
xchg
pop
adc
out
fcmovnbe
inc
jo
out
add
and
movsb
ret
push
aad
adc
sub
stos
fmul
movsb
jo
push
mov
sbb
fildll
add
inc
roll
xor
dec
test
icebp
divb
loop
adc
outsl
lock
mov
adc
or
or
xchg
sub
xorl
and
xchg
mov
sbb
stos
pop
or
in
xchg
adc
cmp
fcoms
push
push
mov
lods
stos
sub
adc
sub
lds
jno
adc
xchg
test
xor
pop
inc
mov
popa
inc
add
pop
pop
add
and
pop
icebp
add
cli
cmp
xor
or
sub
repz
aad
test
and
ja
movl
mov
cmp
and
movsb
and
mov
pop
adc
ret
inc
aam
jb
iret
popf
adc
mov
or
test
and
stc
adc
sbb
nop
or
push
sub
add
xor
out
sbb
or
bound
sbb
cs
xor
je
jp
and
xchg
xchg
push
out
sub
add
popa
mov
sbb
mov
xchg
pop
leave
sbb
xor
mov
rorl
push
pop
or
or
mov
shlb
dec
xor
addl
int
push
mov
aad
jl
push
mov
xlat
or
sub
je
das
int
test
jg
cmpsl
or
push
or
mov
adc
inc
adc
fdivl
sub
and
sbb
add
jne
jg
xor
pop
icebp
lds
jl
jno
mov
or
sub
popf
sbb
adc
popf
sub
and
mov
gs
adc
cmp
and
aam
dec
cli
into
testb
push
mov
mov
stos
or
xchg
and
inc
xchg
roll
add
add
shlb
icebp
push
or
pop
sbb
subl
mov
inc
subb
and
push
test
stos
push
and
lea
push
add
adc
mov
and
inc
sub
sub
or
testb
sbb
or
push
movsb
cmc
sub
push
cwtl
lods
sbb
jmp
or
rsm
sub
rolb
loopne
cmp
imul
sbb
mov
scas
rcll
xchg
cld
add
fcoml
or
je
mov
push
loop
stc
and
mov
adc
ds
mov
cmp
push
cmp
cmp
jo
movsb
stos
dec
and
cmp
lds
add
cmp
inc
sbbl
mov
or
push
je
shr
out
pop
push
or
cli
pop
xchg
mov
pushf
inc
and
mov
fsubl
inc
sti
xor
int3
lret
or
sub
fisubrl
test
clc
xchg
dec
xchg
and
rcrl
add
mov
push
lods
cmp
push
add
imul
push
cmp
int3
imul
inc
into
mov
sbb
in
stos
shl
adc
sub
cmp
fmull
popa
xor
add
test
mov
jo
push
inc
imul
mov
add
jle
mov
into
inc
loope
push
mov
push
mov
or
out
lcall
leave
lock
rorl
sbb
stos
mov
mov
inc
loope
jecxz
test
adc
adc
mov
push
push
loop
cltd
xor
or
add
adc
push
cmpsl
stos
push
sub
add
je
rorl
and
push
push
and
dec
lret
nop
mov
sbb
mov
inc
dec
jne
rcl
sub
push
sbbl
xchg
rcr
mov
sbb
and
xchg
sub
nop
or
cli
adc
xchg
stc
adc
les
popa
pop
lds
push
mov
add
pop
cwtl
or
add
pop
mov
repnz
lea
lods
or
sbb
cmp
adc
das
dec
les
xor
pop
rcrb
add
sub
push
and
and
sbb
push
jnp
adc
push
sbb
mov
or
or
dec
cmp
push
push
daa
pop
lret
adcb
int3
add
mov
push
adc
or
inc
adc
dec
nop
orl
jo
fs
shrb
sbb
xlat
pop
xor
fwait
sbb
or
or
mov
push
or
push
orb
or
dec
mov
ljmp
inc
lcall
adc
cld
rcr
testb
pop
jp
imul
cmp
or
jo
xchg
addl
mov
ret
ffreep
dec
clc
inc
mov
scas
out
insl
mov
and
or
cwtl
xchg
push
dec
mov
icebp
lcall
xor
repnz
mov
rorb
enter
call
enter
dec
add
cwtl
pop
jp
out
sub
sub
mov
push
mov
xchg
adc
push
daa
test
inc
mov
mov
inc
sub
mov
xor
xchg
adc
mov
add
mov
adc
or
bound
rcr
adc
movd
mov
stc
sbb
push
jl
lea
xor
add
jno
adcl
pop
add
push
mov
aas
sub
sbb
hlt
inc
stos
or
inc
and
in
push
xchg
mov
shlb
pop
or
mov
mov
add
xchg
imulb
push
cmpl
mov
pop
adc
add
or
loope
or
jecxz
jb
lret
dec
pop
mov
sub
popl
in
xor
add
push
adc
mov
dec
enter
scas
push
xor
popf
adc
ret
and
sub
and
imul
add
add
loop
jo
and
leave
out
loopne
sbbl
adc
push
add
mov
repnz
adc
pop
xor
bound
out
adc
rorl
loop
pop
jne
pop
rcrb
push
ret
sbb
rclb
xchg
pop
inc
les
adc
mov
clc
push
sub
sbb
push
xor
pushf
xchg
xchg
call
push
or
inc
mov
cltd
test
cli
or
notb
xor
leave
ret
push
lds
mov
sbb
mov
jg
jg
and
push
push
mov
jmp
inc
and
rorb
aam
or
addl
loopne
shl
or
mov
sbb
test
jne
sub
add
clc
insb
mull
arpl
adc
testb
pop
in
mov
pop
clc
movhps
push
sbb
in
fildl
xchg
cmpsl
sub
lea
push
sub
push
sub
mov
testb
je
movzwl
jbe
imul
push
pop
sbb
and
add
mov
fbld
inc
in
mov
or
adc
out
jbe
pushf
ret
mov
jne
push
in
cmp
sub
movntps
pushl
or
mov
and
call
inc
and
mov
add
out
lcall
push
add
scas
std
xchg
add
add
inc
or
idiv
es
adc
push
sub
ja
cmp
jne
sbb
fstp
mov
add
pop
and
mov
enter
shlb
fbstp
mov
and
lea
bound
xor
push
pushf
pushl
jl
bnd
sbb
adc
pslld
or
int
push
repnz
gs
push
pop
sbb
mov
mov
leave
jbe
jae
jo
add
push
jo
adc
lea
or
push
jbe
fwait
sbb
adc
pop
je
add
pop
or
pop
or
cmp
sti
add
sbb
sub
fdivl
loop
dec
push
int
mov
loope
stos
mov
or
mov
out
enter
xchg
push
inc
jge
lea
mov
mov
jle
fsubl
and
sbb
sarl
jno
pop
jle
fisubrs
pop
cmp
inc
xchg
in
mov
dec
jmp
cmp
cmp
cmp
cmp
inc
sbbb
popl
push
cmp
jbe
push
aaa
fdiv
in
rcrl
js
pop
jmp
call
mov
inc
push
enter
addr16
pop
leave
mov
test
aam
cmp
push
or
je
lea
add
cmp
jae
cmp
jne
out
adc
mov
repnz
pop
mov
incl
and
push
cmp
jne
mov
inc
pop
aaa
jl
sti
je
test
dec
movzbl
das
pop
xchg
mov
jnp
fcomi
jmp
cmpb
or
jbe
inc
or
ja
xor
or
add
jmp
fstpt
jmp
pop
sub
mov
xor
daa
cmp
je
cmp
je
inc
out
and
fsubrp
pop
stos
add
call
adc
pop
cmp
mov
lods
sbb
pop
test
mov
cmp
cmp
cmp
aas
dec
pop
mov
in
and
cmp
das
push
cs
pushl
in
fistpl
pop
bound
std
aaa
jne
pop
incl
leave
sub
movl
mov
ret
pop
mov
push
push
ja
aas
divb
dec
clc
mov
sbb
test
fldt
add
push
push
push
lahf
adc
push
mov
xchg
mov
sbb
mov
jbe
daa
and
push
push
xor
pop
cmp
push
sbb
lock
shlb
es
jne
dec
movsl
idivb
add
or
xchg
jge
add
mov
fwait
inc
mov
add
cli
mov
and
pop
shll
xor
mov
mov
inc
inc
or
std
fcoms
add
add
sbb
mov
fsubr
inc
push
add
testb
sbb
je
or
or
jne
dec
mov
ljmpw
scas
dec
add
int
sub
pop
imul
int3
enter
adc
add
rcl
cld
sti
mov
test
pop
jne
inc
inc
jmp
xchg
sub
ret
add
das
fsubrl
inc
cmp
or
jecxz
sub
push
or
sbb
ret
jg
mov
rorl
xchg
push
inc
mov
push
pop
inc
mov
jne
inc
cmpl
or
ss
minps
sbb
ret
push
push
pop
sbb
inc
mov
jae
add
aad
xchg
femms
mov
test
pop
sti
pop
ret
dec
test
aam
mov
insl
mov
shrb
adc
repz
jnp
aam
outsb
mov
jmp
pop
inc
inc
cmp
pop
ljmp
pop
sbb
jmp
xor
or
daa
lods
mov
int
cmp
cmp
sbb
push
pop
imul
clc
mov
pop
add
inc
and
call
xor
xor
sbb
and
and
movsb
scas
mov
pop
or
add
mov
jmp
ror
pop
mov
test
jg
sti
mov
je
and
add
sub
sbb
push
dec
mov
xchg
into
stos
sti
jmp
mov
pop
lds
sbb
cmp
ret
les
in
cwtl
imul
cmp
shlb
pop
pop
loopne
jno
mov
loopne
lea
testl
mov
inc
add
mov
movsl
sti
and
pop
jmp
and
sbb
ljmp
in
in
or
cmp
or
out
movsl
mov
add
push
clc
jl
pop
andl
mov
aas
jbe
idivb
xorl
add
sbb
pusha
inc
dec
mov
or
mov
mov
add
jl
rorl
mov
adc
jle
lock
test
inc
mov
test
test
mov
lcall
push
and
mov
lcall
insl
jnp
pop
or
shll
cmp
mov
mov
mov
inc
add
inc
cmp
filds
pop
and
cmpl
lea
jne
mov
mov
push
das
enter
test
ret
dec
neg
sbb
cmc
or
jge
cmp
pop
push
jo
and
ret
ds
orb
sub
outsl
or
jne
or
add
addb
rorb
ss
insl
in
ret
sbbl
push
hlt
adc
call
push
cld
pop
push
cmc
sub
.byte
test
outsl
jg
add
in
add
sub
cmp
add
add
imul
fistpll
sarl
roll
rolb
pop
out
or
sub
add
out
imul
push
mov
sbb
add
into
mov
add
dec
add
mov
mov
inc
lret
fistpll
cmp
imul
mov
add
dec
mov
cmp
fcmovnu
mov
adc
push
movb
sub
ds
mov
mov
mov
xor
mov
mov
test
jbe
pop
mov
dec
imul
das
shll
adc
fcmovu
jle
and
push
es
cmp
sub
adc
add
mov
jne
insl
outsb
add
nop
or
add
fistpll
std
sub
sub
add
fimuls
sub
jae
add
mov
sbb
add
adc
loop
add
cmp
imul
frstor
mov
je
insl
sbb
add
shlb
pop
sti
outsb
jae
push
shl
pop
xchg
testb
cmp
in
pop
mov
lret
into
push
mov
sti
out
imul
popa
ret
mov
mov
rcr
sbb
insl
rcrb
mov
mov
mov
das
xchg
dec
sarl
mov
mov
clc
sbb
cmp
mov
ret
pop
mov
leave
sbb
or
mov
lods
fstpl
push
cmp
adc
or
mov
mov
outsb
out
insl
rcr
or
or
test
fildl
cld
ja
mov
or
adc
into
mov
add
or
lahf
roll
add
adc
inc
mov
add
test
aas
cmp
or
rorb
pop
xor
ffree
adc
ljmp
in
insl
sbb
shl
adc
pop
pop
mov
daa
shlb
add
add
adc
pop
icebp
push
add
sbb
add
mov
fmul
aaa
adc
mov
add
fiadds
mov
push
imul
insl
insl
pop
sahf
popa
pop
jno
jge
push
pop
je
add
or
ret
inc
mov
and
cld
mov
test
and
pop
push
dec
in
cmp
ljmp
imul
add
ja
jecxz
sbb
and
pop
push
jle
mov
rclb
sub
mov
or
iret
shlb
inc
sbb
xor
pop
jbe
inc
negb
cs
sub
shr
mov
ss
xor
adc
or
sbb
add
imul
ret
pop
mov
out
mov
lock
mov
cltd
popa
pop
push
add
dec
lods
fnsave
or
pop
mov
sub
lret
rclb
or
jmp
movsl
cli
or
sbb
and
es
adc
pop
sti
pop
mov
or
push
cmp
test
clc
or
fcomps
movsl
push
mov
insl
movsb
and
mov
push
sarl
lea
cmp
push
adc
xor
xor
and
iret
adc
out
test
negl
repnz
movzbl
or
insb
cmp
or
outsl
push
cmp
fildl
push
or
and
dec
popf
sbb
int
xor
clc
gs
popa
popa
add
and
nop
insl
fucomip
ret
adc
mov
sbb
sub
pop
inc
mov
jmp
add
push
sbb
pop
sti
mov
pop
sbb
pop
arpl
into
mov
lret
mov
sbb
lret
pop
sub
push
test
test
cmp
mov
arpl
xor
add
mov
lock
add
call
push
mulb
sbb
or
push
ja
xorl
pop
mov
dec
enter
or
arpl
push
imul
andb
orl
sbb
pop
push
and
add
mov
fwait
or
pop
cmp
dec
pop
lcall
mov
mov
mov
push
dec
popa
push
sbb
push
int3
pop
data16
jmp
mov
rclb
sbb
lcall
add
xor
jne
out
pop
jle
sbb
fs
add
push
add
ss
sbb
adc
pop
or
cmp
cmpsb
aaa
adc
loope
mov
notb
shll
lret
int3
dec
mov
rorl
jmp
in
cmp
rcrb
bound
call
jae
imul
icebp
cmp
dec
sbb
xor
icebp
push
inc
cmp
lcall
jge
sbb
add
adc
cmc
fisubl
leave
dec
outsb
pop
cmp
jnp
or
push
mov
or
cltd
push
sbb
mov
xchg
sub
push
jbe
xchg
xchg
call
test
repz
clc
pop
and
dec
mov
push
rclb
xchg
test
sbb
dec
mul
bound
movsb
xchg
fmul
inc
or
rol
add
pop
mov
xor
je
int3
in
and
push
adc
cmc
aad
pop
shlb
mov
xchg
int
pop
rclb
jae
shl
mov
lret
adc
and
mov
stc
repz
push
push
ljmp
pop
and
mov
clc
or
or
jnp
sub
jl
stos
loop
jnp
sbb
subl
xor
scas
inc
xchg
paddw
lcall
xchg
out
mov
je
inc
imul
xchg
xchg
aad
leave
mov
cmp
sbb
mov
jb
icebp
add
stos
adc
jecxz
push
ljmp
sbb
and
sub
pop
stc
lsl
pop
sbb
leave
sbb
leave
mov
pop
cmp
jnp
pop
mov
flds
jp
xchg
add
jo
sbb
insl
insl
sbb
sbb
add
loopne
mov
or
pop
ret
in
mov
adc
divl
cwtl
mov
mov
and
or
push
jo
sbb
push
push
in
inc
imul
push
inc
insl
fistl
iret
hlt
mov
or
or
lret
mov
add
call
push
inc
iret
ljmp
push
xor
shll
sub
les
sahf
xchg
adc
jns
xor
push
inc
mov
mov
fldl
out
adc
lcall
inc
xchg
mov
fmuls
cmp
xor
inc
mov
push
jmp
sbb
stos
jp
pop
pop
bound
sub
sbb
ror
mov
cltd
popf
hlt
call
sbb
shll
pop
dec
mov
sbb
push
xor
jg
hlt
pop
cli
adc
rcrb
sub
out
push
inc
xchg
out
leave
mov
dec
push
enter
and
jbe
sbb
outsl
or
fwait
popa
int
inc
loopne
aad
inc
hlt
add
cmpsl
adc
test
xchg
je
add
roll
insb
cmp
inc
and
mov
sbb
loopne
sarb
je
cmp
pop
or
cmp
pop
jecxz
sbb
iret
movsb
popf
adcl
fiaddl
or
pop
add
stos
rorb
adc
inc
mov
ljmp
jecxz
leave
sbb
mov
lock
shrl
ret
push
shl
push
aad
jb
rclb
repnz
repnz
stc
dec
hlt
stos
pop
sbb
sbb
outsl
fucom
rcrl
sbb
jp
mov
jp
lock
add
outsb
fldt
add
or
and
sbb
push
ror
push
mov
mov
adc
xchg
jnp
or
shll
ret
jmp
dec
or
mov
js
mov
insl
or
bnd
sub
stc
ss
into
mov
ror
sbb
imul
inc
jo
mov
fstpt
lret
xor
icebp
mov
cmp
xor
rcrb
jae
ss
adc
insl
out
in
popf
clc
or
mov
mov
loope
sbb
or
mov
pop
adc
js
jb
mov
pop
aad
sahf
jb
loopne
out
sbb
aad
rorb
in
jge
clc
jmp
leave
rcll
xchg
mov
jecxz
mov
stos
icebp
cmp
shrb
adc
stc
add
mov
push
mov
enter
dec
and
sbb
adc
adc
fcmove
inc
mov
and
pop
std
fadds
lock
sbb
or
mov
mov
adc
lods
add
loope
aad
rclb
cmp
cwtl
jl
mov
cs
test
daa
sub
pop
sbb
imul
fsubrs
jns
add
mov
inc
xchg
mov
or
rcl
push
add
adc
add
mov
add
rorb
or
pop
enter
mov
scas
and
mov
aaa
xor
popa
mov
decb
xor
paddb
push
test
pop
sar
xor
pop
cmp
inc
loopne
add
mov
fisttpll
mov
push
add
pop
pop
inc
mov
add
sbb
cmp
loop
or
mov
scas
out
sbb
add
mov
test
rcl
addl
xor
jns
notb
xchg
or
outsb
and
mov
mov
in
push
movsb
scas
add
sub
inc
or
clc
loop
pop
push
pop
mov
or
adc
push
cltd
sbb
adc
cwtl
jne
push
pop
imul
pop
add
adc
xchg
sti
push
popa
mov
hlt
jnp
mov
mov
jno
dec
in
or
mov
adc
movsl
sbb
pop
sbb
jg
nop
repnz
mov
inc
mov
cmp
rol
xor
sub
icebp
ret
or
loopne
mov
loop
and
sbb
and
mov
push
pop
add
pop
hlt
push
jecxz
data16
call
in
shr
imul
aad
stos
lret
ja
mov
add
jo
stos
inc
dec
sub
xor
repz
shll
cmp
pop
push
scas
jnp
add
rcrb
mov
or
sbb
rclb
pop
fwait
sub
mov
mov
aam
mov
push
jmp
fsubrs
js
adc
in
mov
push
jmp
mov
les
dec
shlb
sbb
lret
enter
popf
xchg
sub
xchg
pop
mov
popa
sub
aam
mov
add
test
loop
aad
loopne
xor
push
scas
test
sbb
roll
push
push
mov
stc
ret
push
xor
insl
add
pushf
rcrb
add
dec
pop
push
xlat
movsl
jle
pop
mov
mov
jb
lcall
fidivrl
lock
scas
inc
jae
insl
jb
mov
lock
int
mov
cmc
loopne
or
adc
iret
adc
movsb
ss
jg
mov
xchg
ds
aaa
mov
pushf
or
loop
rcrl
mov
push
repnz
mov
stos
lock
movb
adc
sti
in
clc
sbb
mov
mov
mov
insl
les
sbb
dec
cwtl
push
sbb
xchg
pop
mov
xor
push
out
into
xchg
out
int
xor
aad
ss
test
into
cmc
mulb
mov
dec
mov
call
jnp
std
out
xchg
fcmovb
push
push
push
testl
inc
testl
shlb
insb
jmp
adc
pop
xchg
enter
cwtl
in
mov
stos
andl
add
jge
push
add
mov
inc
jmp
xor
lret
ljmp
lahf
xchg
pop
jmp
ljmp
xchg
scas
invd
xor
push
cmp
imul
scas
xchg
stc
sbb
and
js
mov
push
mov
shrl
scas
addl
sub
popa
push
mov
iret
inc
popa
push
sbb
test
loope
scas
outsb
dec
push
push
icebp
inc
xor
jns
sbb
mov
add
inc
mov
or
inc
and
rorl
out
adc
andl
stos
xchg
andb
ss
push
and
push
push
mov
inc
imul
in
fs
and
rcl
dec
sbb
lods
add
in
ret
cmp
xchg
cmp
mov
sbb
mov
test
rcl
js
xor
inc
mov
cmpsb
fs
icebp
test
xor
push
imul
dec
int
iret
sub
push
addl
inc
mov
repz
or
cmpsb
negb
add
mov
lret
adc
xchg
in
call
ret
and
aam
push
sub
and
arpl
pop
mov
mov
adc
ret
jne
in
shrb
bound
lds
lcall
pop
jb
jo
sbb
addr16
roll
push
add
loope
arpl
xor
in
loope
push
inc
call
imul
enter
loopne
jno
sub
shll
je
sub
fs
sbb
add
mov
sbb
js
adc
test
ret
loope
or
xchg
or
xor
shll
ret
push
mov
testb
sbb
cmp
leave
andb
fs
jo
leave
sbb
sbb
cmp
addb
mov
add
xchg
mov
shrl
inc
sahf
hlt
enter
aaa
push
hlt
cmp
add
pop
inc
rorb
out
add
call
and
jno
int
mov
mov
test
xchg
pushf
mov
mov
or
add
sbb
or
dec
push
cmp
outsb
add
jae
sbb
mov
push
pushf
inc
mov
sbb
nop
ds
scas
xor
push
push
push
sti
cli
stos
stos
pop
mov
mov
ljmp
stos
adc
add
or
ja
daa
lret
mov
test
das
sbb
jge
inc
lods
mov
jmp
sub
inc
adc
mov
push
mov
enter
mov
enter
pop
fwait
nop
jmp
or
divl
psubusw
lods
pop
push
es
out
pop
mov
mov
shl
sti
imul
fs
cwtl
pop
int3
lret
xchg
xor
lret
movsb
or
lock
int
mov
imul
adc
or
das
std
or
sub
cmc
aad
pop
fs
cmc
mov
les
pop
xor
xor
add
add
iret
enter
cmp
dec
enter
mov
and
pop
cmp
inc
sub
cmp
mov
cmp
cwtl
stos
mov
das
mov
sahf
roll
fmull
mov
mov
xor
leave
test
enter
cmpsb
mov
push
insb
scas
jo
xor
sub
stos
sub
xor
lcall
cmp
rdmsr
sub
stos
lods
xor
rcrb
fistpl
int3
xor
or
inc
enter
icebp
or
in
popa
addb
mov
imul
add
jmp
add
sbb
adc
or
aam
sbb
sbb
int3
adc
adc
pop
cmpsb
cmp
cmp
pop
cmp
jg
and
sbb
jp
iret
rclb
mov
or
or
jno
add
dec
pop
lock
xchg
mov
xor
loope
lock
push
sbb
cltd
push
push
push
push
testb
jo
mov
xor
mov
cmp
and
mov
shrb
notb
cmp
jae
pushf
les
or
jle
aad
adc
ret
mov
and
and
popa
ret
inc
jmp
jecxz
cmp
adc
enter
and
outsb
call
push
sbb
daa
jb
mov
mov
mov
cltd
cmp
mov
mov
cmpsb
xor
mov
and
mov
icebp
dec
cmpsl
insl
and
adc
mov
rcl
add
cmp
cmp
cmp
mov
or
or
sub
dec
or
or
imul
jle
pop
popa
loopne
inc
movsl
dec
sbb
sub
adc
icebp
or
add
sbb
push
pop
jae
sbbl
lock
sbb
test
adc
push
mov
fsubrl
sbbl
or
out
push
icebp
loope
pusha
clc
or
adc
and
mov
and
popa
leave
repnz
xor
sbb
xor
or
popa
xor
leave
aaa
add
dec
push
mov
xor
inc
and
mov
mov
loopne
push
dec
rolb
sbb
loopne
sbb
push
shrb
popa
sbb
mov
or
in
xor
push
js
je
movsl
sub
sbb
and
sar
out
ret
pusha
sub
vrcpss
push
cli
dec
pop
mov
stc
push
imul
add
jo
call
cmp
push
add
dec
lret
sbb
pop
jp
mov
adc
pop
lret
add
xor
xor
aad
addb
insl
shrl
test
sub
and
pop
mov
sbb
sub
jns
dec
mov
stc
jne
incb
fstps
mov
sub
cmp
mov
cmp
add
xor
fld
sahf
xor
adc
arpl
mov
mov
pushf
ret
subb
not
xor
lock
adc
push
shr
test
les
cmpsb
jmp
mov
mov
sub
jbe
mov
mov
adc
and
std
movsb
enter
imul
fcmove
dec
pop
jl
ja
ret
and
pop
adc
mov
sub
in
test
mov
adc
addr16
movsl
fwait
jne
iret
into
adc
push
adc
aad
cmp
mov
hlt
xchg
cwtl
add
cmpsl
push
mov
or
and
leave
xor
nop
inc
loope
inc
testl
sbb
les
cwtl
or
shr
mov
in
push
sbb
cmpsb
pop
sbb
jo
loop
call
aad
push
mov
das
popa
pop
js
lods
in
adc
cmpsb
pop
add
gs
cs
jg
lds
pop
cltd
push
push
jae
xchg
push
lea
enter
xchg
cmpsb
push
and
cmpsb
add
ljmp
rcrb
adc
adc
sub
sbb
cld
adc
not
mov
scas
dec
or
adc
inc
mov
or
mov
mov
push
orb
cmpl
push
scas
add
incb
sti
push
xor
push
mov
and
pop
push
fiaddl
repnz
scas
pop
mov
jp
add
into
js
push
hlt
jecxz
mov
lock
push
push
push
push
loopne
mov
mov
lods
jne
xor
outsb
rclb
test
and
mov
jo
mov
or
call
dec
sbb
push
or
loop
rolb
sbb
jae
loope
inc
mov
cwtl
add
pop
and
pushf
aad
push
push
add
or
out
sbb
sbb
lret
add
xor
or
xor
push
push
and
test
vsubss
rcll
cwtl
jb
lret
lcall
push
xor
push
add
test
adc
inc
fldl
jbe
stos
movsl
rcrl
inc
mov
cwtl
aaa
mov
push
cmp
loop
int3
aam
test
add
xchg
test
push
shlb
lock
shl
es
lods
xor
pop
xchg
rcr
and
gs
dec
daa
adc
mov
mov
ja
loope
push
jle
xchg
imul
jmp
sbb
mov
push
inc
add
aad
test
adc
aas
lahf
shll
mov
mov
aam
sbb
call
xchg
gs
jne
add
ret
test
loope
inc
mov
pop
push
pop
movsl
mov
jecxz
inc
pop
lods
dec
xor
sub
dec
mov
sbbl
push
sub
sub
jb
mov
jae
jbe
xchg
dec
int3
xchg
cmp
jae
add
dec
adc
cmp
add
pop
push
test
lcall
popa
push
repz
add
pop
mov
movsb
pop
popa
dec
dec
and
xor
ret
push
jo
inc
and
inc
mov
fwait
push
push
arpl
mov
mov
xchg
rol
rcl
pop
xchg
inc
add
pop
mov
or
cs
hlt
or
inc
jmp
inc
fcomi
mov
pop
adc
adc
mov
dec
lret
lock
mov
loopne
inc
pop
mov
xor
mov
cmp
je
or
inc
clc
fwait
and
cmp
lock
test
daa
mov
bound
push
test
xchg
push
test
lret
mov
ljmp
and
ret
inc
sbb
dec
adc
shll
or
sbb
sti
ss
movsl
cli
test
shrl
scas
adc
xchg
adc
je
and
add
lods
push
lock
add
movsl
loop
pop
sbb
lret
rcll
jbe
addb
jae
loope
mov
jp
icebp
pop
push
stos
adc
inc
cs
je
sbb
push
movsb
lock
pusha
xchg
pushf
sbb
mov
jmp
push
mov
or
subb
shlb
and
ds
cmp
jmp
addb
pop
insb
movsb
or
or
jno
add
fildl
cmp
dec
in
mov
lods
outsb
sub
add
pop
xchg
into
ljmp
jmp
sub
pop
rep
push
add
mov
shlb
mov
test
sub
fs
push
xor
cmpsb
lea
xor
ret
or
pop
out
aad
xor
orl
cmp
nop
loopne
stos
test
lock
pusha
fadds
mov
lds
or
and
and
adc
push
and
sub
rorl
push
inc
mov
cmp
rol
and
sub
iret
adc
jbe
ljmp
xchg
and
mov
repnz
pop
sbb
rcrl
ret
inc
xchg
lcall
add
pop
lock
sar
add
and
push
pushf
sub
clts
call
dec
cld
test
mov
mov
call
xlat
out
and
mov
jno
shlb
dec
repnz
sbb
or
sarb
in
mov
fmull
push
call
pop
orl
cmc
mov
inc
xchg
dec
ror
and
testl
push
or
popf
xchg
out
sbb
add
lret
test
aam
scas
dec
xorb
mov
fs
cld
pop
nop
adc
inc
adc
ss
xchg
or
add
mov
jg
daa
loopne
push
xor
ja
adc
add
test
in
inc
or
inc
sbb
sub
add
or
imull
in
enter
test
mov
push
or
push
and
lds
negb
add
dec
mov
add
movb
pop
loop
movsl
dec
cmp
sahf
jp
dec
ds
out
fcmovb
jle
rcl
jmp
xor
mov
and
in
dec
cmc
call
add
in
aam
push
nop
mov
subb
insl
not
push
scas
dec
push
push
dec
cmc
xor
call
mov
in
lahf
mov
loope
xchg
inc
sarl
addl
repnz
mov
loopne
xchg
mov
pusha
aam
add
push
insb
fcmovnbe
adc
add
push
xchg
cmp
out
xlat
rorb
pop
aam
push
mov
xchg
dec
jp
mov
adc
and
icebp
fs
dec
jb
sub
sub
inc
mov
mov
ja
add
leave
mov
mov
mov
mov
in
sbbl
sub
adc
jae
adcl
mov
cli
clc
push
add
mov
clc
outsb
cmp
mov
shrb
inc
mov
push
dec
mov
aad
or
es
lods
shrd
push
out
xor
cmpsl
sbb
mov
jo
hlt
aas
mov
loope
and
lods
xchg
push
and
sub
jo
xchg
sbb
bound
push
sbb
add
cmp
jle
sbb
mov
push
loopne
int3
cmp
fwait
cli
mov
push
subb
ret
aad
lods
mov
xor
in
xchg
or
push
adc
adc
jl
dec
fs
add
fbld
ljmp
pop
add
out
dec
rcrb
jbe,pn
and
adc
jmp
sbb
or
cmp
pop
push
push
or
jo
es
out
shrb
cmp
pop
mov
pop
push
and
orb
test
mov
dec
lea
xchg
xchg
mulb
add
adc
xchg
pop
adc
adc
sbb
sbb
nop
ss
push
mov
aad
dec
mov
sbb
sbb
jmp
dec
xchg
push
adc
mov
stc
push
push
push
sbb
push
and
mov
mov
mov
inc
adc
or
dec
xchg
xchg
lret
xchg
les
xor
test
push
imul
clc
ret
sbb
jo
clc
jle
scas
test
stc
nop
stos
jmp
cmp
add
rol
add
cmp
sub
pop
push
sub
dec
stos
or
insb
scas
pop
stc
mov
inc
scas
rorb
scas
xchg
dec
leave
pop
icebp
cwtl
inc
insb
jmp
je,pn
testb
and
hlt
push
loope
inc
in
or
clc
mov
mov
jge
rcll
or
mov
out
jo
ret
scas
push
mov
or
xchg
cli
or
test
pop
dec
add
lcall
add
mov
clc
imul
pusha
test
xor
fs
shrb
add
dec
or
push
mov
mov
popf
test
pop
scas
rolb
or
sbb
push
fcoms
sbb
out
adc
ficoms
push
rolb
addb
mov
push
pop
sub
popa
pop
test
enter
jo
add
or
jne
lock
test
add
test
mov
lods
orl
mov
pop
notb
rcl
cli
add
push
inc
push
pop
inc
add
std
divl
and
cmp
lock
mov
pop
lods
push
cmp
add
and
or
and
cmovl
pushf
cmpsb
sbb
adc
pusha
add
sbb
or
lds
jo
mov
sbb
call
test
ljmp
cwtl
mov
adcl
pop
imul
inc
add
mov
xor
lret
sub
push
sbb
add
inc
xor
add
lock
aam
stos
clc
push
lods
icebp
inc
sbb
lret
push
and
push
mov
inc
int
scas
jo
inc
inc
aaa
sub
sub
sbb
insb
popa
fwait
divb
adc
inc
xor
mov
or
push
cmp
sbb
mov
adc
in
ret
jmp
icebp
jl
ret
loope
leave
je
or
mov
cs
or
shrb
pop
loop
enter
jb
sbb
sub
sbb
mov
adc
add
adc
sub
xlat
shrb
int3
add
push
leave
adc
push
pushf
push
add
xchg
add
loopne
test
push
push
xor
mov
out
stos
push
add
popl
sub
in
sarl
cmp
ret
mov
add
leave
push
and
mov
cmp
lret
sub
xchg
push
sub
loope
sub
pop
add
mov
sub
add
sub
jmp
inc
mov
leave
fcoml
mov
add
flds
leave
push
push
test
xchg
ret
hlt
lds
xor
lret
and
cwtl
movaps
push
sti
sub
add
dec
push
aam
scas
push
dec
add
cltd
sahf
sub
cmp
insl
test
jbe
pop
inc
push
add
push
xor
mov
push
mov
mov
or
imul
ret
mov
nop
roll
out
inc
das
shll
movb
mov
mov
add
shrb
out
adc
sub
icebp
push
sbb
mov
inc
push
add
adc
test
rclb
cmp
lds
mov
notb
and
packssdw
jmp
or
leave
adc
scas
dec
adc
not
je
sarb
dec
in
pop
add
and
lods
adc
cs
xchg
adc
mov
sub
jbe
push
sbb
dec
shr
cwtl
or
orb
fadd
insb
dec
jp
notl
push
mov
adc
add
cmp
xchg
je
xchg
fmull
add
mov
lfs
mov
sub
push
lock
inc
dec
mov
sub
xor
fsubl
mov
rorl
add
xor
int3
jo
out
fwait
insb
ror
lock
out
mov
push
pop
inc
sbb
inc
jo
and
clc
call
fucomip
jg
out
sarb
push
mov
mov
sub
pop
pop
fldl
mov
jae
xor
call
push
mov
mov
inc
in
push
in
mov
stos
nop
pop
push
jbe
fwait
mov
jb
stos
dec
fisttpl
and
mov
adc
jmp
push
pusha
push
push
dec
int3
mov
andb
xchg
or
loope
add
sub
leave
push
add
into
adc
loop
cld
or
fdivs
inc
mov
std
xchg
sub
sub
sbb
in
lds
xor
test
ret
mov
fs
push
mov
mov
icebp
xchg
data16
pusha
jp
jmp
shll
or
mov
inc
xor
push
jne
or
lret
ljmp
outsb
add
sbb
sbb
mov
inc
sbb
lock
mov
or
sar
adc
pop
add
outsb
xchg
sub
lahf
sub
loopne
adc
dec
test
mov
orb
cmp
ret
ret
lock
arpl
or
inc
scas
scas
js
xchg
jbe
hlt
sub
out
push
pop
fdivrs
push
clc
js
sbb
pop
outsb
jne
test
dec
push
lock
movsl
jbe
testb
in
mov
add
les
dec
aam
lock
add
xor
repnz
jmp
lock
pusha
push
add
fs
sahf
adc
jg
adc
xchg
cmp
aam
and
cli
sbb
add
pop
and
xor
sbb
lods
push
inc
or
mov
testb
call
mov
jne
rcrb
push
out
mov
push
mov
push
fs
jl
push
loope
mov
rclb
jns
aam
test
or
mov
xchg
push
dec
sahf
cmpsl
pop
repz
cmp
rcll
pusha
cmp
andb
bound
bound
sbb
cmpl
sbb
jp
mov
cmp
call
ror
subl
les
rcrl
dec
loope
ret
cmp
inc
ss
or
push
jl
cs
sbb
dec
cmc
xor
mov
test
sub
push
icebp
mov
rclb
sti
pop
adc
sbb
push
pop
and
call
movl
pop
push
shrl
sub
mov
shlb
jno
push
out
in
or
sub
jo
popf
les
icebp
push
ljmp
ret
xor
dec
add
add
and
mov
hlt
or
sub
adc
jb
or
lea
mov
imul
jo
push
pop
lods
pop
and
pop
adc
sbbb
dec
adc
add
fmuls
inc
pop
rorb
push
push
cmp
js
and
clc
sub
stos
cmpsb
lock
stos
arpl
es
outsl
mov
mov
dec
sbb
mov
call
je
mov
aas
call
jo
test
sahf
mov
cli
sbb
sub
lock
dec
ss
cmp
roll
orl
sub
pop
cld
call
mov
pop
cmp
jmp
inc
je
in
dec
sti
repz
test
imul
xor
push
adc
mov
mov
es
adc
aad
jnp
add
fstl
andl
pop
sub
mov
addr16
and
or
jge
push
lea
repnz
push
mov
sub
pop
je
cmpsl
push
ss
rolb
and
mov
push
rcl
rorl
rcrl
sbb
mov
mov
and
mov
sbb
mov
lret
popf
test
cltd
mov
sub
es
add
jge
sub
inc
dec
pop
aam
push
clc
sub
jnp
mov
xchg
mov
je
push
enter
jbe
enter
mov
push
sbb
xor
sbb
outsl
jp
xor
ret
into
iret
pop
add
out
sub
cmp
mov
rorl
ljmp
cli
mov
into
inc
fiadds
pusha
lret
push
sub
call
xor
xchg
addl
int3
mov
jo
jb
mov
add
mov
out
mov
cli
or
sahf
add
mov
mov
ret
or
sbb
enter
insl
mov
mov
push
dec
in
or
jne
pop
lock
and
movsl
loope
xchg
test
push
hlt
sbb
inc
mov
dec
push
xor
sbb
push
cmp
push
push
or
sbb
xchg
ret
lock
adc
jnp
jne
push
mov
ljmp
push
pop
mov
pop
mov
dec
rclb
sbb
add
push
scas
std
jo
add
dec
mov
push
push
cmpsl
pop
rorl
add
or
xchg
xorb
jp
xor
lahf
dec
notl
dec
cwtl
loope
sbb
addb
add
daa
push
cmp
leave
xor
mov
mov
adc
mov
xor
popf
mov
sub
imul
loopne
popa
sub
add
je
sbbb
pushf
inc
cli
bound
and
or
fstpl
dec
pop
mov
or
or
mov
or
add
mov
mov
in
inc
pop
add
jmp
lods
jo
loopne
sti
inc
addl
add
test
and
sbb
lret
xchg
add
pop
fwait
xor
push
push
mov
push
movsl
inc
fildll
sub
pop
in
push
adc
push
rcll
ljmp
test
rol
push
and
rcrl
stos
call
xor
and
push
add
mov
pop
sub
mov
dec
int
mov
add
lds
pop
shrb
sbb
pop
pop
dec
out
out
cmp
mov
lock
push
mov
adc
cmovle
inc
rcrb
jp
push
push
repnz
imul
jecxz
jp
add
mov
cmp
push
or
pop
or
sbb
andb
popf
jmp
jmp
push
fsubs
jecxz
mov
adc
je
mov
mov
sbb
shl
repnz
inc
mov
mov
out
xor
lret
mov
inc
sbb
cmpb
mov
psrld
mov
mov
mov
push
test
lock
jmp
push
aad
or
inc
sub
mov
out
inc
xchg
movsb
sti
inc
pop
pop
inc
sub
add
fwait
and
xchg
push
enter
dec
push
insb
add
xchg
test
rcl
add
adc
pop
out
inc
jl
sbb
or
push
out
or
mov
jno
pop
ret
mov
in
dec
les
lods
dec
dec
push
push
mov
mov
gs
or
pop
add
sbb
sbb
and
pop
fcmovne
out
outsl
dec
aad
push
repnz
mov
push
out
clc
push
lea
cwtl
das
adc
dec
xor
push
push
add
sbb
add
stos
jl
push
push
dec
addr16
xchg
lret
imul
cmp
loop
mov
inc
mov
push
push
sbb
inc
jb
subl
pushf
pop
fisubl
xlat
pop
inc
addr16
dec
add
rcrb
loopne
add
push
xor
add
inc
shrb
push
add
insl
inc
or
mov
mov
xorl
shl
inc
cltd
mov
inc
jmp
call
push
push
dec
popf
add
mov
or
mov
mov
rol
mov
cmp
add
mov
push
sbb
leave
addl
xor
dec
imul
and
in
out
adc
xor
test
clc
into
add
sub
adc
cmp
in
jno
cmpsb
enter
roll
repnz
jp
sub
iret
in
pop
push
and
scas
ficoml
testb
jno
xor
dec
jo
pop
bound
push
adc
test
enter
ret
or
shl
xor
lret
syscall
push
cwtl
sub
and
pusha
int3
push
shrl
sub
sub
addr16
xor
loopne
xchg
push
pop
xor
inc
adc
pop
mov
mov
inc
push
push
xor
jne
adc
or
and
mov
adc
adc
insb
and
loope
cmp
enter
pop
inc
stos
fcmovnu
xchg
imul
dec
icebp
push
xor
or
fadds
jbe
mov
sbb
and
mov
jp
or
mov
xchg
adcl
and
push
lods
inc
test
cmp
push
mov
xor
pop
add
or
mov
mov
jecxz
aas
xchg
mov
cmp
stos
inc
leave
push
sti
push
roll
xchg
add
sarl
adc
pop
cmp
pop
sub
add
nop
sbb
jnp
ficoms
and
out
ret
sbb
lds
jmp
adc
push
mov
lods
mov
adc
sbbb
push
rolb
xchg
adc
dec
jmp
lret
xchg
and
xor
sbb
mov
inc
dec
push
adc
cmp
add
mov
lea
das
inc
jo
push
lock
xchg
sbb
jecxz
push
jbe
pop
cs
jmp
stc
xchg
rorl
inc
xchg
sub
addl
mov
push
mov
lret
test
enter
rorl
into
adc
je
adc
mov
sub
push
and
fwait
adc
mov
push
jb
add
out
subw
dec
jne
les
or
push
stc
stos
loope
jp
orb
mov
pop
aad
test
push
sbb
fdivrp
or
mov
mov
in
sbb
ja
jno
jo
pop
push
addb
call
sbb
adc
add
adc
leave
sbb
or
shl
sbb
add
sarb
vmaxss
gs
or
imul
mov
call
inc
xchg
pop
and
inc
xor
push
cltd
xchg
cs
cld
icebp
lea
scas
add
popf
xor
adc
addb
movsl
rolb
in
into
mov
adcb
cld
sbb
loope
nop
mov
cmpsl
and
es
add
adc
pop
rolb
loope
inc
lods
ret
add
lock
pop
push
and
sub
notb
pushf
jmp
mov
mov
xchg
cltd
jno
addb
sbb
and
jl
inc
shlb
sbb
pushf
test
add
test
mov
addb
add
insb
dec
inc
lods
pusha
pop
leave
mov
add
push
sbb
mov
mov
mov
lock
call
push
adc
adc
push
jo
jl
pop
ret
and
fnstcw
lock
shrl
imul
adc
xor
or
inc
pop
mov
sbb
ret
push
jnp
push
popa
inc
sbb
icebp
adc
outsb
push
in
cmp
push
ljmp
adc
inc
shlb
insl
xchg
orl
mov
rclb
add
adc
pop
push
mov
orb
stos
imul
and
mov
add
push
ret
popa
aas
stos
add
subl
pop
loop
ss
add
in
push
push
mov
push
jns
rorb
and
dec
inc
dec
sub
inc
and
or
push
jb
lods
push
in
or
cwtl
rcrl
cmpl
push
loope
in
mov
cmp
cmpsl
andb
and
ljmp
cmp
loope
ret
aaa
int
fs
inc
leave
add
cmp
mov
and
hlt
add
push
xor
or
rorl
push
adc
sub
rcrb
mov
adc
xchg
lock
jmp
mov
pop
jbe
out
or
push
xchg
add
es
jnp
addb
aas
inc
adc
lea
paddd
cmc
decb
mov
movsl
ss
shl
test
js
mov
jbe
xchg
push
add
je
dec
and
mov
loopne
mov
outsb
sub
xchg
add
outsb
femms
lret
push
imul
pop
in
mov
add
lods
or
add
jb
mov
lods
cmpl
xchg
test
xor
ret
inc
orl
dec
sub
sbb
push
or
sbb
adc
and
dec
inc
sbb
ljmp
pusha
push
push
mov
mov
insb
inc
cmp
loop,pt
push
add
stos
loopne
mov
dec
dec
add
dec
push
mov
push
xchg
cmc
jno
mov
lret
enter
push
test
adc
mov
dec
push
push
push
cmp
cmpsl
sarl
inc
jne
push
sub
or
sti
add
pop
jmp
push
call
out
adc
lcall
add
in
and
pop
push
loopne
cmc
adc
and
push
lock
movsb
dec
adc
sbb
inc
scas
sbb
mov
jnp
inc
jmp
test
xor
subl
or
inc
lcall
js
ficompl
sbbb
or
add
ret
mov
inc
and
xor
add
dec
push
mov
outsl
xchg
push
iret
xor
push
adc
xchg
push
push
xchg
and
add
inc
adc
mov
addb
lret
pop
push
add
fsubp
inc
jb
mov
push
test
xor
orb
jnp
mov
mov
test
mov
and
aaa
xor
push
inc
pop
fistps
ret
push
adc
inc
sbb
rcl
sbb
dec
jns
icebp
pop
lods
sub
push
adc
add
dec
pusha
xor
push
sbbl
push
mov
lret
sub
push
mov
jo
aad
and
xchg
rclb
rolb
xor
xor
stos
addb
mov
hlt
loopne
iret
hlt
inc
cmp
inc
es
sub
pop
and
inc
mov
adc
add
stos
mov
lret
cmp
sbb
and
ret
dec
rcll
loop
pop
shl
or
adc
ss
push
xor
xchg
or
out
adc
jbe
into
add
stos
scas
dec
add
sahf
ljmp
sbb
sbb
jmp
adc
sub
mov
push
ljmp
jle
pop
xor
push
jecxz
add
xlat
or
push
xchg
or
hlt
add
adc
icebp
mov
add
js
pop
mov
mov
or
int3
in
ljmp
outsl
xor
mov
adc
add
or
cmp
sbb
subl
mov
stc
sbb
lcall
jle
roll
inc
xchg
inc
mov
rcll
adc
ja
xchg
mov
sub
xor
into
jl
mov
clc
stc
push
cmovp
adc
stos
sbb
insb
push
sub
or
pop
roll
shlb
jo
sbb
lret
negl
xchg
and
push
and
add
mov
add
subl
pusha
xor
add
stos
adc
add
push
in
xchg
pop
push
add
pop
cmp
es
cmp
mov
adc
push
popf
mov
xor
or
cmp
sbb
xchg
add
mov
push
adc
sbb
les
sbb
loop
loop
jo
inc
cmpsl
fistps
adc
add
or
adc
rclb
lret
cmp
gs
or
scas
xor
jmp
mov
fiaddl
stos
jb
jo
inc
pop
xchg
add
sbb
inc
jae
int
daa
pop
sub
xchg
push
ss
movb
data16
jp
jmp
pop
pusha
mov
pop
xchg
and
or
xchg
test
sbbl
test
mov
and
mov
aad
test
xchg
jl
xchg
aad
ret
pop
xor
inc
push
mov
les
inc
add
jp
sbb
cwtl
adc
lods
scas
nop
imul
push
push
push
jo
push
jmp
in
pop
push
ja
adc
leave
jge
inc
loope
cmc
or
shlb
jo
cmpsl
outsb
or
test
aad
js
addb
jbe
jo
add
and
shrl
jmp
lock
dec
and
xchg
xchg
test
push
jae
xor
push
mov
xchg
push
sub
shl
cs
jae
jns
sarb
and
lds
sub
lcall
roll
pop
jo
add
ljmp
or
mov
mov
insb
xchg
call
or
cwtl
xor
fdivrs
mov
adc
ror
or
mov
sub
inc
mov
xchg
sarb
mov
cmp
fcomip
mov
or
leave
mov
xchg
lcall
lea
sete
xchg
lods
stos
lods
clc
cmp
jbe
lea
cmpsl
pusha
push
popa
push
ret
add
pop
push
adcl
cmp
out
shr
xor
inc
adcb
cmpsb
mov
addr16
jnp
cmp
fwait
call
push
mov
jbe
inc
and
out
or
shl
and
adc
jae
mov
mov
xor
ret
ljmp
push
pushf
stos
lds
loopne
sub
mov
sub
adc
pop
adc
xchg
dec
and
push
je
mov
add
rolb
stos
dec
test
in
adc
rorb
mov
add
and
shlb
pusha
xchg
cmc
pop
or
jbe,pn
cld
insl
cmp
xchg
and
cmp
and
mov
clc
mov
adc
or
jmp
lods
stos
jnp
adc
inc
jnp
mov
cmp
xor
out
or
addr16
adc
into
push
test
out
push
sbb
xchg
or
xchg
loopne
push
lahf
jne
mov
adc
call
enter
dec
inc
jmp
ss
jl
fmulp
xchg
push
addr16
mov
les
dec
aam
scas
pop
incb
and
stos
adc
push
sbb
dec
mov
sbb
add
fisttpll
cmp
loopne
push
or
mov
xlat
stos
add
loop
sbb
test
nop
jnp
or
test
sarb
movsl
ret
push
and
sub
test
int
add
clc
sbb
into
xchg
and
cmpsb
dec
sbbl
mov
xchg
sub
xor
mov
orb
pop
rolb
stos
mov
lcall
sbb
add
dec
cmp
mov
or
out
mov
add
leave
les
bound
ret
xorl
push
inc
es
add
mov
lret
mull
outsb
cmp
add
xchg
jmp
scas
pop
xchg
adc
push
adc
adc
gs
cmpsl
sub
ret
aad
xchg
loope
and
sbb
mov
inc
rclb
add
pop
jne
push
loope
loope
scas
dec
daa
jnp
testb
das
push
push
out
adc
push
inc
loop
mov
dec
sbb
cmp
mov
mov
adc
lock
inc
aaa
mov
enter
mov
or
push
or
pusha
or
lret
test
mov
xchg
int
fistpl
fwait
or
lock
cmp
adc
sarb
mov
jb
pop
stos
push
jo
pusha
mov
pushf
or
add
push
mov
jbe
inc
jae
popa
and
rcrb
add
out
pop
adc
mov
adc
les
pop
pop
loopne
pop
gs
and
sbb
lahf
into
push
in
sub
pop
sbb
in
adc
inc
xor
shl
rolb
xor
icebp
loop
jle
test
inc
push
sbb
fstp
std
adc
push
lret
sbb
push
ljmp
xchg
mov
inc
push
push
aam
inc
pop
xchg
or
icebp
and
into
pop
mov
data16
pop
inc
lock
mov
or
lods
push
add
stc
mov
push
sbb
pop
add
jge
xor
dec
add
sbb
push
and
pop
aam
xchg
popa
rcll
scas
lret
mov
xorb
test
or
mov
clc
adc
xchg
jp
or
xor
rorl
xor
rorl
add
sbb
push
test
pop
jp
add
push
call
lock
ret
pop
add
push
xlat
pop
xor
sbb
mov
sbb
mov
and
pop
inc
lods
jo
mov
shlb
repnz
inc
ja
rcll
enter
es
leave
rol
adc
les
andl
add
stc
sub
scas
pop
lods
or
mov
mov
cmp
adc
dec
xchg
mov
push
sbb
xor
pop
les
pop
or
sahf
sarl
shll
loop
mov
or
push
js
jp
cmpsb
ret
inc
or
pushf
test
sub
add
pop
mov
push
adc
xor
cmp
pop
scas
sbb
jo
sbb
punpckhdq
mov
adc
pop
push
mov
xchg
loop
pop
add
mov
test
or
test
push
push
and
add
or
enter
cmp
dec
add
add
adc
lahf
sub
push
cmp
loopne
mov
add
push
xchg
add
or
sbb
mov
jo
les
adc
rclb
jb
pushf
sbbl
daa
push
xor
jnp
cmp
ljmp
pop
test
lock
jbe
xor
subb
sbb
out
sbb
stos
mov
test
in
inc
icebp
sbbl
insl
rolb
or
bswap
adc
push
xchg
repz
pop
adc
mov
xor
adc
pushf
or
outsb
add
xchg
inc
mov
push
cmp
lahf
fcompl
cmp
insb
xchg
mov
into
idiv
jb
bound
sti
sub
clc
lods
subb
push
mov
shll
and
icebp
jo
popf
movb
pop
push
cmpsl
cmpsb
xchg
outsl
or
pop
xchg
and
push
mov
inc
mov
pop
andb
inc
test
call
sbb
xor
jb
jno
ret
push
rorl
jecxz
adc
rorb
bswap
adc
shrl
cmc
mov
rcll
rcll
mov
and
add
test
pop
int3
shlb
int3
btc
add
cmp
ret
sbb
jge
aam
mov
aaa
ret
push
xor
dec
sbb
fwait
cmp
rolb
out
cwtl
and
dec
sub
and
push
mov
data16
addb
andl
stos
lahf
nop
adc
sub
or
test
push
mov
sbb
adc
mov
sbb
js
lea
mov
add
test
mov
mov
mov
das
mov
or
jge
mov
sub
sub
adc
or
mov
cmp
dec
xor
lret
ret
aad
xchg
loopne
sbb
or
push
stc
or
test
loope
sbb
jns
repnz
lret
push
adc
adc
xlat
push
fs
or
mov
dec
mov
lea
inc
inc
pshufw
stos
lock
lcall
ds
movsl
mov
and
xchg
and
ljmp
into
pusha
sub
rcll
lods
xor
push
or
pop
loope
xchg
mov
push
inc
out
popf
add
inc
fsubs
sub
test
es
mov
das
jns
inc
add
xchg
orl
mov
sbb
mov
pushf
mov
pop
movsl
lret
paddb
pop
sbb
mov
pop
dec
mov
adc
sub
ljmp
mov
movups
sub
aam
aad
adc
xchg
add
pushf
cltd
push
push
mov
popa
mov
push
push
ljmp
xor
lds
ljmp
adc
andl
inc
dec
mov
pop
loop
mov
ret
scas
mov
movsw
mov
xchg
or
pop
pop
push
cmp
aad
xor
mov
mov
push
cli
or
mov
hlt
and
push
pop
cmc
adc
adc
cltd
cmp
test
add
rclb
rolb
in
adc
dec
fwait
or
mov
add
sbb
xchg
xchg
push
xchg
lret
mov
jns
scas
ljmp
rorl
sbb
roll
dec
push
lock
movsl
add
push
ret
xor
leave
repz
xchg
icebp
or
loope
ret
test
mov
add
negl
add
pusha
repnz
push
sub
call
jne
addl
push
and
add
shlb
fimuls
cmp
ret
fnstcw
xlat
ret
lds
mov
xorb
dec
in
mov
or
sarl
pop
addl
push
add
push
mov
jp
out
dec
sub
fs
adc
or
test
negb
add
sub
aad
and
sahf
push
inc
pop
lds
sbb
lret
cs
subb
rcrl
loop
cwtl
add
push
dec
sbb
push
cltd
sub
inc
test
pop
leave
adc
pusha
inc
push
push
cli
test
mov
push
repnz
dec
rolb
mov
xor
inc
insb
xor
fsubl
push
sub
mov
mov
xor
jns
add
out
push
shlb
push
lods
push
das
lcall
and
sub
xchg
sahf
adc
pop
inc
pop
push
adc
mov
add
mov
nop
outsl
ja
add
enter
pop
pop
adc
inc
xor
inc
mov
fs
loopne
adc
gs
or
cmp
rcrb
jo
sub
rclb
stc
pop
sbb
adc
add
cmpsb
push
add
jae
push
push
loope
or
dec
cmp
and
add
jle
ss
sbb
gs
sub
orb
adc
xchg
jb
ffree
and
sub
andl
fadd
push
adc
mov
dec
and
mov
jl
mov
add
sahf
mov
and
cmp
or
stos
ror
int
sub
mov
sub
mov
sub
sbb
mov
jo
leave
adc
inc
clc
lds
andl
sbb
mov
inc
mov
lock
adc
jnp
movl
add
mov
pop
popa
sub
adc
adc
cmpsb
fimull
xlat
add
or
mov
imul
bound
push
or
jno
ret
js
outsl
mov
sub
pop
gs
xor
xchg
sti
imul
or
int
mov
or
sub
adc
lock
rcrb
or
adc
rolb
cmpsb
xor
xchg
out
imul
mov
stos
xchg
xchg
aas
pop
and
icebp
add
jp
jge
add
nop
hlt
push
jecxz
cvtpi2ps
sbbl
sub
clc
arpl
mov
pushf
pop
fcoml
and
ret
and
mov
pushf
dec
out
loop
mov
rcr
test
data16
bound
subl
je
sub
or
lds
add
enter
into
push
test
sbb
add
andl
sbb
scas
test
cmp
or
or
cmpl
push
sbb
lret
sub
pop
gs
pop
adc
mov
mov
cmp
xchg
xchg
shll
adc
mov
mov
addb
inc
insl
xchg
lods
add
inc
sbb
shrb
test
and
jo
enter
ljmp
pop
add
pop
leave
push
rcrl
cmpsl
xchg
hlt
add
subl
xchg
enter
push
sbb
out
or
add
jmp
mov
addb
ljmp
add
nop
lret
loop
cmc
inc
xor
adc
push
cs
dec
aaa
inc
dec
popf
add
cld
push
shll
fwait
cmp
ljmp
and
xlat
bound
or
inc
out
arpl
mov
mov
add
adc
push
xor
ret
lods
sub
test
into
jbe
pusha
sbbb
add
mov
pop
lods
arpl
leave
inc
icebp
xchg
xchg
or
dec
aam
adc
lahf
dec
lods
mov
adc
stc
push
movsl
push
or
rorb
outsb
scas
add
jg
push
addb
in
addl
fisttpll
pushf
push
bound
les
les
jmp
push
or
push
mov
xor
adc
enter
pop
sbb
pop
dec
and
ljmp
sbb
sarl
xchg
sub
pop
cmp
push
and
xchg
inc
enter
cmpsl
xor
call
adc
sbb
lods
push
fs
jb
div
cltd
sub
in
lds
push
and
mov
add
shll
lret
inc
cmp
pop
mov
pushf
sub
push
test
adc
sub
adc
inc
sub
rolb
into
outsb
or
test
adc
enter
jo
sub
adc
int
sbb
pop
nop
jg
rclb
xor
orb
or
int
push
addb
pop
pop
imul
fnstenv
dec
xor
movd
mov
lock
ss
inc
sbb
cmpsl
cmpsl
mov
push
icebp
mov
cmp
mov
dec
pop
ljmp
ret
push
inc
inc
and
push
pop
rolb
jae
inc
mov
sub
push
jb
pop
xor
dec
ret
and
or
ret
or
push
cmp
push
push
aam
xlat
orb
and
sub
dec
jo
inc
ljmp
sub
prefetcht2
pushf
mov
or
xor
int3
stos
xor
mov
cs
sbb
push
xchg
rclb
push
lods
adc
or
movsb
and
sbb
test
mov
mov
pop
push
sti
add
sub
loope
or
add
scas
inc
inc
sub
sub
inc
push
test
mov
lods
push
loope
es
in
clc
push
or
test
mov
sub
add
out
pop
or
push
sub
push
pop
shl
or
stc
mov
jnp
int
sub
mov
les
mov
inc
arpl
js
loop
xchg
inc
cwtl
sub
mov
sub
test
ret
or
gs
fstps
adc
test
sub
sbb
pop
sub
pusha
movb
sbb
test
scas
inc
and
aas
pushf
ret
into
push
in
addb
add
es
push
daa
lock
push
cmp
jo
stos
pop
xor
or
cltd
jp
jge
or
mov
stc
int
and
jae
and
mov
adc
ret
or
adc
inc
inc
xor
pop
pushf
into
xchg
repnz
ss
mov
xor
sbb
xchg
or
pushf
xchg
roll
or
push
push
ljmp
cli
or
nop
push
sub
mov
cmp
inc
mov
dec
dec
mov
ret
mov
ret
sbb
push
sbb
cs
out
loopne
cs
push
sbb
jns
sub
mov
push
fmulp
add
push
fildl
lret
pop
sti
mov
inc
mov
rorb
add
fld
or
subb
sbb
or
leave
loop
mov
or
ret
loop
sbb
loopne
cmp
or
shlb
push
pop
imul
and
or
pusha
add
fnstenv
push
jo
and
mov
sbb
dec
mov
inc
jo
sahf
cmp
inc
sub
scas
or
sub
mov
aad
movsb
sub
in
loopne
mov
scas
ret
ds
outsl
xlat
and
dec
mov
jp
mov
sbb
pop
jo
ljmp
jmp
out
ret
lock
push
sub
adc
inc
arpl
out
into
rolb
mov
orb
or
movsl
rolb
xor
sub
pop
mov
pusha
sub
stos
cmc
addb
cmp
xchg
add
daa
or
jno
push
in
push
mov
jno
and
inc
jecxz
ret
adc
cs
push
mov
rclb
cli
mov
adc
cmp
mov
mov
pop
je
sbb
test
inc
pusha
sbbb
cmp
pop
sbb
mov
jg
stos
ret
mov
xor
jl
mov
les
sbb
mov
mov
in
adc
dec
xchg
dec
or
stos
push
pop
sbb
rorb
subl
loopne
adc
dec
jnp
shr
add
sub
mov
imul
pop
or
mov
cmp
ret
movsb
mov
dec
adc
movsb
inc
lcall
xchg
add
add
rclb
add
jp
xor
xor
and
or
leave
dec
pusha
push
lock
jge
mov
xorb
sub
jl
in
mov
push
sbb
adc
mov
dec
mov
lock
cwtl
mov
or
repnz
jge
adc
lret
in
les
jge
lret
movhlps
shlb
cld
adc
dec
scas
jo
or
adc
stos
jmp
loope
or
sub
jg
lock
adc
sbb
adc
es
stc
adc
add
inc
cmp
test
push
add
pop
cmc
xchg
dec
jo
mov
sub
lret
dec
in
ret
icebp
mov
sbb
dec
clc
fwait
loopne
xor
add
rorl
mov
and
stc
push
add
add
add
shrb
rolb
cmpsl
in
push
rclb
ljmp
orb
cmp
test
add
std
pop
roll
iret
rclb
shlb
adc
or
sbb
inc
lds
push
mov
jbe
or
cmp
sub
push
mov
or
out
inc
das
push
cmc
xlat
mov
jg
inc
xchg
cmpb
sub
adc
lods
sbb
and
xchg
jge
loop
mov
push
cmp
adc
or
sbb
add
adc
in
cmp
xchg
pop
xor
mov
sub
or
xor
lods
icebp
adc
add
adc
add
les
repz
hlt
push
mov
shl
loop
dec
dec
mov
mov
enter
rolb
inc
popa
movsl
push
xchg
inc
push
loopne
mov
adc
pushf
lret
jbe
ljmp
ret
stos
push
pushf
and
inc
mov
loope
and
sbb
sbb
outsl
popf
popf
inc
mov
out
sub
or
adc
dec
mov
push
xchg
or
jg
dec
xchg
stos
adc
jle
sbbb
es
leave
adc
sbb
test
add
rcl
sbb
sbb
xor
pop
sbbb
cld
ljmp
arpl
push
js
lods
aad
jae
cmp
scas
cli
jecxz
aad
pop
jmp
movsl
jmp
or
mov
add
jns
push
xchg
sbb
add
stos
leave
aas
lret
push
push
icebp
stos
or
xor
pop
cmp
and
or
add
pop
or
sub
iret
and
pop
nop
adc
push
into
pop
or
scas
ror
add
add
inc
xor
insb
adc
xor
cmp
jp
mov
je
jne
jecxz
cli
icebp
xchg
mov
leave
aam
sub
cmp
sbb
jle
leave
adc
sub
push
cmp
xor
mov
add
jne
sbb
jae
push
mov
cmp
mov
push
std
mov
cmpsb
pop
inc
addl
repnz
dec
sbb
jle
dec
shll
jb
ljmp
pop
push
les
mov
and
sub
mov
push
ret
xor
mov
rolb
pop
sbb
or
add
iret
cmp
push
inc
or
mov
inc
je
add
mov
stos
out
inc
int3
inc
dec
push
aad
or
xchg
test
fwait
stos
sub
mov
movsl
xor
or
pusha
fisttps
pop
sbb
adc
add
mov
mov
fldenv
es
sbb
mov
push
fsubl
xchg
stos
inc
xchg
add
lahf
cmpsl
mov
movsb
sbb
call
mov
iret
adc
sbb
push
jne
jmp
fiadds
inc
sub
mov
inc
out
add
mov
fs
dec
je
mov
jno
or
add
inc
rcll
arpl
add
cmpsb
add
sbb
out
push
xchg
stos
sbb
mov
inc
adc
jne
push
fcoml
rorb
mov
and
dec
int3
shrl
adc
inc
mov
notl
inc
shrb
xlat
scas
insb
mov
jmp
rclb
xor
jo
sub
jmp
in
cmp
icebp
adc
inc
icebp
xor
push
icebp
lock
adc
jmp
ret
inc
jmp
daa
push
and
and
mov
or
aam
cwtl
call
mulb
ficoml
add
fyl2xp1
sub
lret
push
outsl
adc
xor
notl
pop
sub
push
jne
lock
or
divb
sbb
xor
icebp
lcall
clc
pop
ljmp
xchg
fcoml
daa
push
in
mov
inc
pop
or
js
sbb
cmp
cmp
sbb
inc
lcall
xchg
add
shll
orb
push
sub
lcall
bound
call
inc
pusha
mov
mov
mov
sub
aaa
mov
paddq
push
and
jns
loopne
je
popf
outsb
push
mov
cmc
sub
or
dec
xchg
movsb
cmp
stos
pop
adc
mov
inc
imul
sub
mov
ret
cmp
add
or
sti
fs
inc
or
inc
shl
lcall
cmp
mov
xor
pusha
push
lock
push
mov
dec
loopne
aad
mov
inc
push
cwtl
int
inc
into
fistl
ja
inc
and
jo
sub
ds
sbb
roll
adc
mov
xor
jp
mov
arpl
adc
cmc
adc
adc
sbb
imul
add
or
ja
xchg
jns
mov
add
ljmp
or
sub
add
cmpsl
jp
add
fcomi
or
rcrb
call
jecxz
adc
pop
mov
cli
stos
sub
lret
fcmove
dec
ja
push
mov
mov
movsl
inc
xor
rclb
dec
rcll
mov
enter
pop
adcb
and
test
push
push
cmc
xchg
fsubs
ljmp
ficoml
inc
xchg
enter
in
dec
adc
movb
mov
enter
xor
lcall
test
sbb
stc
or
imul
enter
cmp
into
js
push
jo,pn
push
ret
mov
sub
push
jns
bound
push
adcl
cli
fcoms
jmp
xchg
pop
orl
push
cmp
addl
push
or
sub
mov
or
add
xor
mov
lock
testb
mov
pop
aas
push
adc
out
push
repz
shlb
push
push
imul
aaa
outsb
pop
int3
ljmp
cmpsb
inc
insl
jne
out
xor
pop
mov
add
shrb
sub
ret
enter
pop
and
mov
sbb
push
xor
rorl
mov
fimuls
push
js
push
pushf
repnz
inc
jecxz
mov
cmc
bound
sub
in
into
shrl
and
mov
inc
mov
sbb
or
sbb
push
insb
int
and
fsubl
push
add
movsb
or
addl
mov
or
mov
fcoml
inc
sbb
sub
divb
mov
xchg
add
pop
scas
mov
gs
adc
mov
jl
rolb
add
pop
lds
movsl
cltd
mov
xchg
cmc
ljmp
and
sub
ret
test
and
inc
adc
stos
aaa
insb
push
add
pop
jb
cld
mov
mov
jo
dec
adc
push
jbe
enter
stos
dec
out
push
insb
js
inc
sbb
add
mov
or
inc
cs
dec
sbb
cwtl
dec
push
add
cmp
sub
clc
mov
stc
dec
repnz
in
bound
std
push
inc
push
cmp
dec
jmp
aas
jb
cmc
sbb
repnz
xchg
inc
add
sbb
inc
das
or
lea
and
push
dec
sbb
bound
imul
jo
mov
mov
les
inc
fwait
inc
in
add
cmp
dec
push
xlat
bnd
xchg
pop
adc
sti
and
rorb
sub
imul
into
mov
inc
enter
jmp
or
adc
xlat
push
movsl
fdivrs
loop
or
jg
sbb
mov
shrl
mov
add
movsb
or
loop
cmp
push
pop
push
jo
sbb
das
xchg
movsl
pop
cmp
mov
call
dec
push
push
pusha
sub
inc
rcl
push
mov
xchg
scas
leave
movb
inc
clc
pop
jbe
or
shll
sbb
push
add
test
add
testb
push
lods
xor
js
cmp
mov
inc
ljmp
in
inc
xor
pop
aas
pop
pop
sub
pop
orb
jmp
mov
pop
ret
push
push
add
push
mov
xchg
in
aam
add
pop
push
jne
jne
push
int
mov
push
mov
push
xchg
mov
orl
jle
adc
jo
push
je
test
hlt
and
mov
fiaddl
cmp
xchg
or
jbe
aad
pop
cltd
cmp
sub
aas
icebp
inc
lods
mov
pop
mulb
xchg
test
xchg
push
or
loope
fidivl
inc
adc
lret
cli
dec
add
push
rcrb
out
orb
or
mov
lock
sub
dec
das
into
adc
and
adc
and
add
mov
inc
roll
sbb
mov
adc
shr
pop
cmp
xor
mov
and
pushf
out
shrl
pop
aad
cmpsl
es
decb
icebp
dec
cmp
pushf
jae
not
inc
jnp
and
gs
mov
mov
sbb
push
add
jae
pop
and
jae
lcall
inc
mov
push
subb
pop
pop
inc
xchg
data16
jo
ljmp
pop
cmp
cli
ret
sbb
lea
sahf
push
sbb
and
or
scas
sub
aad
popf
test
repz
mov
push
into
iret
shl
jns
sbbb
xor
loop
scas
adc
cmpsb
xchg
adc
xor
adc
adc
iret
das
mov
in
xchg
and
push
sub
in
lret
adc
push
and
add
and
ret
xor
cld
rcl
popf
sub
adc
fsubrs
testl
push
sub
icebp
push
push
mov
out
push
gs
jo
mov
sub
or
mov
icebp
sahf
xor
aad
adc
mov
pusha
pop
mov
sti
icebp
enter
sbb
mov
cmc
push
out
lret
aam
push
stos
xor
add
sub
movsb
ljmp
scas
pop
pop
xchg
inc
sbb
jle
in
cmp
inc
adc
or
bound
inc
mov
lcall
mov
adc
push
js
sbb
mov
imul
sub
cltd
test
int3
inc
stc
adc
enter
adc
add
cwtl
and
jnp
shl
push
ret
add
mov
sbb
push
jmp
loope
insl
add
js
push
hlt
test
scas
push
aas
jnp
jecxz
mov
sub
push
repnz
lods
mov
add
or
int3
jns
mov
jecxz
adc
sub
outsb
xchg
movsl
clc
sbb
jp
and
pop
xchg
adc
xor
pop
mov
enter
ret
js
pop
adc
inc
call
mov
nop
test
mov
add
mull
inc
adc
sub
push
mov
adc
sub
in
inc
ret
xchg
sub
xlat
flds
scas
mov
and
in
push
in
lods
xor
sbb
sub
out
inc
cmp
test
stc
daa
xlat
add
sarb
ljmp
sbbb
vmovaps
lcall
mov
les
push
cmp
add
pop
ja
xchg
push
les
xchg
and
icebp
push
shrl
add
test
xor
loopne
out
sub
sbb
sbb
jne
sbb
inc
aas
mov
adc
push
lods
or
sbb
add
pop
adc
and
push
fstps
or
test
sub
cmp
inc
into
scas
movsl
repnz
add
or
mov
add
js
push
shrb
sub
shrl
adc
mov
dec
aam
xchg
lods
sbb
or
ret
in
in
sub
cli
inc
mov
mov
sbb
push
dec
or
or
incl
ret
mov
and
lods
mull
fsubrl
leave
ja
loope
mov
sub
jb
or
push
imul
inc
mov
bound
adc
mov
idivb
bound
sbb
and
in
and
sbb
popa
push
mov
popa
xchg
xorl
mov
insl
mov
mov
and
inc
sbb
lods
sbb
cwtl
cs
push
sbb
ret
sbb
leave
out
sarb
sti
lret
push
sub
dec
lea
mov
inc
sub
outsl
mov
pusha
push
push
sbb
sbb
mov
or
pop
adc
insl
push
cwtl
movsl
cwtl
fisubrl
stos
dec
or
adc
cld
orl
shr
add
sub
dec
inc
adc
mov
xchg
call
push
call
xlat
or
inc
movsb
fcoms
xor
add
push
and
repnz
jns
add
xor
cmpsl
push
sub
lret
mov
mov
adc
ret
fdivl
push
and
inc
fstps
pop
scas
add
or
out
jl
mov
pop
inc
daa
aam
cmpl
sub
push
cmpsb
push
pop
les
or
sbb
ficompl
xchg
jns
dec
sbb
cmp
inc
pop
js
xor
or
xchg
ljmp
push
jb
xor
xor
mov
mov
xchg
mov
arpl
fmuls
out
xlat
pop
mov
aad
stos
and
daa
xor
test
adc
iret
sti
or
pop
adc
ret
sub
ljmp
sbb
add
mov
jl
mov
mov
mov
mov
icebp
adc
mov
bound
add
sbb
sbb
loop
push
rorl
icebp
sub
or
mov
popa
enter
or
ret
adc
add
pop
push
dec
add
dec
adc
nop
add
ret
mov
adc
mov
inc
fs
push
mov
ss
stos
sub
mov
lock
hlt
mov
xor
pop
push
ret
pop
xor
xor
xor
aam
push
xchg
mov
jo
push
xchg
lock
movlps
outsb
rcl
je
add
inc
out
mov
pop
mov
cmp
add
testb
xor
loope
movsb
xchg
adc
rcrb
and
add
jo
mov
cmp
mov
pop
xchg
jo
add
cmc
add
int3
xor
or
cmpb
pop
fwait
bound
ljmp
popa
xchg
ret
jmp
dec
mov
xchg
mov
ret
adc
pusha
hlt
adc
pop
dec
jmp
push
aam
fdivp
roll
adc
rol
push
adc
xchg
or
cli
adcl
push
xchg
stos
mov
call
add
add
mov
mov
popf
addr16
fistps
insl
add
mov
mov
mov
sbb
stos
pop
scas
ljmp
sbb
fsubs
push
stos
adc
xchg
cmc
adc
push
inc
or
test
inc
insb
out
push
into
adc
sbb
and
mov
xor
fs
jo
or
sti
and
and
mov
scas
mov
adc
mov
push
dec
or
sbb
call
fwait
xchg
stos
sub
rcl
aad
orb
leave
push
and
mov
xchg
mov
adc
pop
pop
sahf
int
xchg
movsl
inc
addb
aad
mov
dec
adcb
sub
sub
adc
stos
inc
cs
sbb
cmp
adc
repz
mov
mov
loope
shlb
outsl
jbe
sbb
es
idivb
aad
xor
pop
stos
cmc
mov
push
sub
fs
add
inc
add
push
adc
mov
xchg
cmpsl
lods
inc
movsb
push
jmp
sbb
cmp
push
inc
sbb
mov
cmp
pop
xlat
ret
or
jg
inc
enter
ret
sub
xor
ficompl
push
rcll
add
fwait
pop
jnp
mov
loope
stos
cmp
sbb
xor
add
shr
xchg
pushf
subl
rcll
sub
loope
mov
jb
push
adc
dec
adc
out
pop
mov
mov
xor
ds
xorb
mov
sbb
inc
inc
and
lods
xchg
sbb
enter
gs
rorb
jge
enter
sbb
mov
xor
add
icebp
in
inc
push
add
sbb
pusha
sbb
out
mov
mov
pusha
and
test
add
loope
mov
fwait
je
push
jae
push
jle
dec
cmp
mov
sbbb
shlb
xchg
cli
push
out
mov
inc
or
sub
xchg
sbb
inc
mov
ret
ljmp
leave
addl
mov
fbld
sub
push
div
push
mov
inc
mov
inc
xor
jge
add
sub
shrb
data16
add
ss
add
mov
jo
cmp
mov
push
shl
fnstenv
inc
add
sbb
dec
into
jnp
adc
push
pop
test
rep
repnz
cwtl
loop
out
jo
lods
mov
lret
lock
xchg
psubsb
lea
mov
imul
rol
jl
adc
lds
inc
mov
push
mov
test
ror
push
mov
das
pop
mov
dec
icebp
stos
shl
mov
jne
xor
aad
adc
or
jae
pop
pop
push
iret
aaa
sbb
sub
and
and
xchg
mov
push
jo
pop
pop
sbb
addb
cwtl
push
test
sub
sbb
push
lods
xor
aam
or
add
repz
sub
adc
sbbb
shll
and
imul
sub
sub
sbb
aam
push
cwtl
cmp
add
pushf
adc
inc
adc
adc
and
mov
shlb
rolb
mov
ret
adc
fidivl
lods
or
push
addb
inc
mov
std
xlat
andl
add
es
xchg
int3
jns
pop
adc
pop
add
lock
and
push
andb
lcall
out
sbb
scas
add
cmc
loop
add
mov
adc
leave
bound
orb
dec
xor
stos
sub
mov
inc
push
and
add
clc
mov
loop
lret
fidivrs
adc
mov
mov
push
mov
lea
or
mov
dec
jmp
push
popf
xchg
subb
sbb
nop
in
sbb
sbb
push
sbb
mov
fcmovnbe
popf
in
mov
inc
dec
shl
pushf
cmp
xchg
or
xor
mov
mov
inc
xor
cs
imul
or
sbb
inc
mov
and
test
test
xor
push
pop
add
inc
data16
lds
jo
push
fisubs
ror
push
add
inc
sub
call
push
in
xlat
push
das
stos
add
mov
frstor
and
pop
push
pop
in
orb
movsb
push
sub
xchg
push
pusha
mov
adc
enter
leave
andl
sub
add
cmpsb
pop
adc
popa
push
and
adc
push
ret
push
jnp
dec
in
jmp
or
mov
jmp
and
push
adc
scas
inc
adc
mov
xor
and
add
jmp
lods
add
push
pusha
rolb
inc
test
adc
cmp
sarl
mov
ret
sbb
cmpsb
stc
sbb
xor
testb
add
inc
shlb
inc
cs
pop
add
repz
and
mov
xorl
and
lods
push
js
loope
push
mov
or
jmp
aad
shl
test
xchg
sbb
and
fwait
lret
ja
arpl
add
jecxz
and
into
cmp
push
cmpsl
inc
cmp
pop
dec
add
mov
push
mov
mov
cmc
ljmp
push
leave
sbb
test
adc
add
imull
add
lcall
add
and
xor
sub
ret
out
lea
outsb
shll
jbe
adc
push
jl
mov
das
push
mov
mov
out
roll
push
inc
and
inc
or
cmp
sbb
or
inc
movb
add
in
mov
insl
pop
shll
jb
or
add
xchg
or
adcl
adc
rolb
lock
inc
pop
adc
cwtl
mov
popa
sbb
push
aad
push
mov
mov
rcrl
testb
pop
jno
rcl
adc
push
cmp
loop
push
adc
loopne
les
rcl
add
jo
in
and
mov
add
add
mov
inc
lods
js
pop
ficomps
sbbl
push
push
pop
add
call
adc
and
movsl
movl
and
push
add
mov
or
xor
pop
iret
lock
rolb
sub
sarb
pusha
push
add
pop
insb
inc
dec
repnz
test
inc
sbb
cmp
lret
mov
sub
aad
or
inc
das
dec
mov
mov
add
push
daa
sub
push
adc
fbstp
cmp
sbb
cmp
push
subb
push
adc
xchg
sti
mov
sbbl
adc
fucom
add
stos
push
or
ret
pop
jo
mov
rclb
loope
lcall
push
test
ret
inc
adc
stos
sbb
cmp
sbb
mov
pop
pop
push
stos
hlt
or
inc
push
out
push
movsl
inc
cmp
jecxz
les
or
scas
and
lods
pop
icebp
orb
xor
jne
sbb
push
jo
inc
xor
aam
or
pop
xor
outsb
ret
stc
cmp
mov
inc
clc
pop
sub
loopne
daa
adc
shlb
or
test
inc
push
mov
cwtl
loope
mov
inc
clc
dec
xor
les
push
mov
push
cmp
lea
or
mov
and
test
sbb
push
jno
cmp
mov
mov
lock
out
pop
stc
sbb
insb
mov
add
sbb
pop
not
push
stos
push
or
push
cmp
je
std
stc
leave
icebp
adc
jno
or
cmp
mov
inc
inc
sbb
pop
outsb
xchg
adc
imulb
fisubs
pop
add
push
das
and
mov
cmpsl
sbb
or
add
insb
enter
mov
lds
push
call
clc
iret
push
imul
stos
mov
sub
sbb
jb
mov
adc
popl
lods
add
push
test
sub
stos
xor
or
and
sbb
stos
adc
pop
mov
rolb
sbb
inc
and
sub
aas
sarl
xor
add
push
and
and
adc
sbb
mov
mov
or
xchg
inc
stos
syscall
sarb
pop
mov
lods
jb
cmp
clts
add
ss
push
negl
add
cmp
scas
in
call
aam
xor
je
ret
sbb
fs
jae
shlb
enter
clc
sbb
in
jo
lahf
call
mov
add
dec
insb
push
mov
subl
ret
icebp
add
add
jb
daa
jmp
or
sub
cmp
stos
testb
and
xor
sub
add
inc
loopne
mov
jo,pt
mov
orl
clc
test
mov
inc
rclb
fimull
bound
push
cmp
pop
movsb
add
or
adc
test
and
adc
xchg
icebp
ficoml
into
mov
push
shrl
les
je
adc
or
xchg
or
ret
mov
es
scas
lahf
je
add
push
or
add
and
ret
adc
cmp
cwtl
xor
rorl
into
cmp
push
adc
jo
push
pusha
adc
daa
mov
aaa
outsb
or
inc
jne
push
ss
addb
mov
or
dec
stos
gs
loopne
pop
ret
push
adc
jo
lcall
loopne
cmp
addb
les
adc
cmp
test
repz
adc
mov
pop
rcr
inc
push
xor
cmp
popa
into
mov
or
or
bound
adc
jb
inc
outsl
push
cltd
or
add
and
aaa
pop
or
mov
out
xor
inc
mov
push
jge
sbbb
pushf
mov
push
add
sub
push
mov
xchg
add
and
out
pop
or
lcall
int3
ljmp
rcrl
roll
xchg
inc
les
test
cld
std
ljmp
sbb
or
and
test
cwtl
adc
cmpl
inc
adc
xchg
sub
rcrl
stos
dec
int
push
orl
jno
subl
int
in
inc
sbb
mov
pop
add
lock
lods
and
pushf
sbb
into
sbb
andb
or
outsb
pop
rcll
ja
add
xchg
test
daa
mov
xor
and
push
les
lahf
out
push
jecxz
sub
popf
xchg
rorb
add
dec
mov
mov
dec
sti
mov
inc
push
fldenv
pop
add
mov
movsl
xchg
push
movsb
stos
test
add
push
xchg
cmp
push
adc
sbb
stc
push
test
add
sti
or
scas
les
adc
mov
xchg
or
mov
and
popa
push
scas
pop
inc
rcrl
leave
mov
rol
test
test
test
add
and
lahf
cmpsb
push
mov
es
cmp
iret
insl
add
adc
sbb
lods
leave
test
pop
mov
add
out
addl
add
mov
sbb
lcall
lcall
inc
pop
cmp
pop
jmp
in
mov
push
sub
xchg
push
inc
xor
xor
jb
sbb
push
mov
push
xchg
add
es
mov
inc
xor
lods
add
jmp
cmp
push
das
adc
cmpsb
call
mov
js
push
icebp
shrl
pop
popf
ret
stc
push
xor
pop
ss
push
xor
out
or
or
mov
jne
or
pusha
mov
sbb
xchg
push
inc
add
mov
or
jp
faddl
add
ficoml
stos
push
enter
imul
mov
jbe
mov
push
add
lret
je
mov
adc
push
sbb
mov
mov
sbb
add
pop
pop
push
push
xor
ja
enter
add
bound
xor
sahf
xor
add
inc
mov
xor
daa
push
stos
push
adc
leave
xor
push
xor
xchg
rcl
test
adc
testl
xchg
stos
xor
adc
inc
xor
int
xor
ja
inc
sub
sbb
shll
sub
push
rorb
shlb
ret
fisubrs
test
aad
leave
adc
inc
sbb
inc
push
add
scas
jle
mov
and
cmp
idivb
outsl
add
pop
push
test
adc
fists
je
adc
mov
sbb
jp
jo
out
sub
add
pop
pop
adc
addb
inc
popa
enter
arpl
mov
push
loope
or
jno
and
cwtl
pop
adc
rolb
andb
pop
sarl
push
cmp
iret
aam
jno
mov
aam
push
dec
sbb
or
test
or
cmpsb
sub
push
addr16
sbb
adc
push
add
add
push
xor
and
adc
lods
push
inc
stc
push
add
sbb
mov
addr16
xchg
lods
js
clc
push
or
xchg
cli
or
iret
divb
adc
repz
adcb
sbb
pop
adc
in
inc
scas
cmpsb
es
cmp
jecxz
in
rorl
dec
push
sub
push
scas
popa
call
mov
cmp
inc
xchg
sbb
outsl
sub
sbb
pop
mov
push
out
clc
xlat
push
loope
jno
or
dec
lcall
inc
pop
xchg
roll
mov
mov
jl
adc
ss
sub
dec
push
add
sbb
jno
loop
xchg
test
mov
and
add
fdivs
mov
xlat
mov
push
or
xor
inc
test
mov
or
mov
lret
inc
jmp
push
push
adc
push
jmp
push
inc
cmp
sbb
adc
xlat
cmp
jmp
bound
rcl
dec
hlt
and
mov
jmp
jno
call
mov
jg
or
pop
cmp
pop
sub
sub
lcall
push
inc
call
sbb
outsb
sbb
add
in
stos
jp
out
js
sbb
push
lahf
dec
rolb
adc
and
test
sub
stos
pop
adc
xchg
cli
les
gs
cmp
fucom
cmp
pop
push
mov
or
push
insl
mov
lods
jge
push
adc
adc
lock
and
xor
shlb
mov
btr
push
stos
pop
icebp
call
mov
stc
insl
push
xor
jbe
add
jo
data16
dec
xchg
add
add
and
or
mov
scas
push
shlb
pop
and
aam
push
xor
sub
push
push
dec
and
aam
push
call
push
cli
xchg
push
jo
mov
inc
inc
loop
js
sbb
jb
and
cmp
xor
icebp
cwtl
bound
std
inc
cmp
cmpsb
push
cmp
divb
adc
fdiv
sbb
or
pop
out
sbb
cmp
adc
bound
lds
mov
adc
inc
mov
sub
test
sub
cmp
jg
cmp
jl
push
rclb
mov
dec
xchg
loopne
or
inc
orl
fnstsw
jb
jae
inc
roll
pop
mov
sbb
pop
or
vmovlpd
push
gs
js
adc
mov
stos
test
sub
rcr
sbb
mov
js
adc
popa
add
sbb
adc
int3
push
sbb
loop
scas
enter
xchg
test
scas
lcall
inc
pushf
sbbb
inc
adc
into
mov
clc
inc
dec
push
scas
add
inc
or
mov
int
aaa
test
push
inc
cltd
lods
punpckhdq
addb
or
xor
adc
js
addb
mov
adc
testb
cmp
orl
or
mov
sbb
subb
push
aad
cwtl
or
shll
roll
ljmp
ret
adc
cmp
xchg
adc
push
arpl
ret
scas
adc
xchg
enter
inc
push
and
jecxz
sbb
jmp
cmp
cmovae
dec
inc
cmp
pop
cmpsb
nop
incb
in
nop
sub
test
aam
repnz
push
cwtl
test
xchg
add
js
mov
mov
dec
adc
inc
jp
or
loop
sbb
pop
mov
insb
add
inc
jo
jb
repnz
sub
sub
lea
push
dec
in
enter
dec
add
dec
mov
xor
enter
loope
jo
shl
sbb
fiaddl
pop
and
ret
xor
jmp
scas
rcll
or
fistps
jg
add
ljmp
pop
sbbb
push
es
and
mov
aam
mov
ret
inc
sbb
add
adc
push
rcll
imul
sbb
dec
mov
xor
out
inc
cmp
iret
jecxz
test
sbb
push
insb
cmpsl
call
test
push
rcll
pushf
add
mov
mov
mov
mov
in
int3
add
lcall
jo
dec
aas
mov
adc
mov
and
orl
in
inc
nop
mov
fmulp
add
inc
mul
adc
sub
xor
add
pop
xchg
roll
or
adc
add
pop
sbb
inc
stc
jnp
or
push
cmp
cmp
inc
push
cmp
push
push
push
in
sti
das
mov
pop
add
adc
pop
xor
pusha
scas
or
sarb
push
ficoms
insb
mov
push
add
cmpsb
xchg
cwtl
into
int3
sbb
push
and
dec
and
movsl
arpl
lds
or
imul
fnstenv
mov
add
addl
and
xor
movsl
cmp
and
xchg
mov
jbe
mov
xor
or
loopne
mov
pop
enter
or
add
pop
xor
pop
push
xor
ljmp
insl
dec
xchg
test
lock
rcrb
cmp
in
aas
loope
add
mov
inc
scas
scas
mov
cmp
mov
les
mov
pop
adc
push
fsubrs
cmp
push
mov
lret
jb
adcb
cmp
in
and
lret
adc
ljmp
add
inc
jmp
loopne
mov
add
icebp
sub
push
mov
sub
mov
cmp
ficoms
sarb
clc
push
call
repnz
lds
out
push
jo
les
cmp
mov
add
and
push
addl
add
add
mov
push
add
xor
mov
or
or
sbb
adc
popf
cwtl
mov
xor
sti
loop
fsubrl
dec
addb
pop
ret
cs
pop
les
adc
sub
mov
cmp
pop
push
cmp
and
rep
or
jb,pn
addb
aad
mov
pop
loop
sub
shlb
push
adc
lods
mov
pushf
jae
sub
mov
shrl
mov
insb
cmpsl
push
icebp
push
ret
pop
jbe
incb
adc
lods
add
rcl
or
pushf
inc
aam
xchg
adc
adc
xchg
push
cmp
je
push
jb
push
rsm
pop
inc
and
adc
add
stos
js
sahf
stc
into
ret
cli
add
mov
adc
pop
cmpsb
xchg
mov
fiaddl
subl
mov
leave
test
and
lock
sub
inc
jno
sbb
dec
add
xlat
arpl
and
mov
loop
inc
pop
sub
adc
adc
add
and
xor
dec
movsl
jne
push
icebp
js
jno
push
xor
jge
push
xor
stos
push
hlt
cmpsb
and
push
jo
or
out
fcmovnb
mov
adc
fsubr
add
sarl
lret
adc
test
movb
xlat
push
js
inc
inc
and
xchg
call
or
ljmp
jge
mov
in
and
push
dec
iret
cmp
inc
inc
orl
inc
xchg
add
jle
adc
add
inc
lret
les
pop
add
pop
push
ljmp
loope
shll
fcomps
and
add
and
push
push
dec
sub
adc
aam
inc
mov
and
test
pop
pop
mov
adcb
push
add
xchg
adc
and
mov
lret
hlt
add
adc
mov
gs
enter
fisttpl
call
fwait
add
mov
xor
inc
rcrl
sbb
sbb
adc
jo
cmp
or
inc
pop
adc
and
cld
rolb
sub
sbb
pop
cmpsl
add
je
mov
jnp
push
sbb
mov
roll
out
adc
das
sbb
lret
sarb
dec
andb
xor
or
adc
push
shlb
mov
inc
xor
mov
out
in
mov
cmp
mov
mov
in
lods
rorb
mov
mov
pop
sub
inc
enter
add
add
or
clc
sbb
mov
inc
out
inc
and
stos
push
sahf
xor
mov
fdivrl
arpl
mov
jge
orb
jle
call
jg
pop
xchg
loope
inc
add
inc
push
hlt
jb
and
out
dec
push
aaa
testb
or
xor
mov
mov
push
cmp
scas
mov
sub
cmp
xor
jnp
sub
insl
shrl
add
sub
mov
xor
or
ret
sub
mov
arpl
pop
leave
or
push
mov
cmp
pop
adc
pusha
push
repnz
cmp
cmp
or
movsl
cmp
fwait
sub
xorb
xchg
push
mov
mov
or
cwtl
js
movsb
adc
jecxz
xor
adc
inc
cld
jg
cmpsb
cmpsl
fstps
mov
adc
sar
mov
inc
jge
test
inc
out
addr16
addb
nop
push
mov
test
sbb
les
daa
add
lret
sbb
add
hlt
mov
aam
popl
mov
jle
adc
loopne
repz
or
popa
mov
leave
mov
add
mov
push
mov
roll
pop
lds
fiaddl
loopne
das
loope
stc
adc
divb
lock
sbb
push
lock
xchg
jo
popf
sahf
pop
loop
lods
data16
mov
test
adc
mov
dec
jecxz
sbb
out
rcll
or
inc
inc
subb
icebp
sub
cmpsb
lock
cmc
bound
scas
in
and
ret
fwait
add
push
push
sbb
fnstsw
mov
rolb
es
inc
xchg
xchg
xor
xor
stos
in
push
and
push
xor
rolb
pusha
fsubs
lret
mov
ljmp
aam
subl
movsl
or
out
pop
xchg
mov
outsl
sub
out
push
sub
leave
sbb
pop
scas
rcrb
inc
das
mov
leave
dec
adc
dec
fcmovnb
adc
add
push
jno
add
sbb
inc
mov
mov
and
adc
pushw
or
jl
push
scas
cmp
add
push
stos
hlt
push
mov
jo
aaa
les
add
sub
ljmp
add
adc
out
xchg
and
xchg
jo
and
shrb
push
add
mov
add
adc
sub
popa
mov
push
ljmp
add
sbb
xchg
pop
sub
push
aam
lcall
xor
mov
leave
adc
and
or
repnz
popf
icebp
repz
cmp
mov
popl
push
mov
cli
es
adc
sarl
mov
das
or
mov
or
inc
sbb
sub
mov
subb
popa
jmp
xor
mov
cmp
push
insb
test
sbb
and
push
dec
aad
subb
push
add
mov
in
orl
fwait
mov
mov
addb
orb
and
out
xchg
xor
rorb
inc
cmpsb
mov
es
lds
fsts
test
push
pusha
mov
add
push
dec
mov
push
leave
adc
pop
jg
xchg
or
fwait
mov
fcoms
mov
add
push
add
add
mov
xchg
leave
aam
mov
shlb
sti
and
bound
mov
and
mov
mov
gs
xor
inc
xor
iret
add
adc
pushf
mov
mov
push
mov
xchg
sub
push
and
pop
or
mov
adc
mov
and
icebp
push
or
jecxz
push
mov
jne
pusha
enter
test
nop
jae
jg
clc
add
inc
sbb
xchg
push
mov
cmp
push
or
mov
mov
test
mov
mov
fisubl
adc
lcall
inc
addl
hlt
inc
popa
adc
xor
call
xor
push
add
rcl
sbb
in
adc
aam
add
or
mov
add
jo
sbbb
outsl
pushf
cmpsl
cmp
adc
leave
mov
add
stos
sbbb
outsl
and
xlat
adc
push
or
movsl
in
lcall
push
mov
sbbb
jo
cmp
sbb
addl
adc
stos
cmp
add
and
icebp
inc
call
push
movb
mov
mov
jecxz
pop
inc
mov
or
push
shlb
mov
mov
cmp
hlt
sbb
mov
das
loop
adcl
inc
jo
cmpsl
sbb
mov
test
and
xlat
xchg
jo
mov
adc
daa
mov
ljmp
and
imul
push
in
xor
ficompl
cmp
fs
push
or
sub
test
aam
mov
and
arpl
shrb
xor
push
das
inc
inc
jp
xor
jo
sbb
adc
push
test
add
sbb
rcll
leave
inc
adc
das
das
jg
add
test
aam
push
xor
rolb
les
dec
popf
icebp
or
sub
or
xchg
dec
pop
adc
in
pop
dec
xchg
add
es
sbbb
jns
cmp
push
or
fdivrl
or
rolb
mov
mov
add
xchg
mov
dec
imul
adc
push
leave
ret
das
loop
pusha
push
or
loopne
dec
or
ja
nop
test
inc
adc
push
aaa
and
lods
jnp
icebp
add
ret
inc
jo
enter
test
push
mov
loopne
sbb
sti
or
sub
sbb
xor
scas
add
shll
xchg
outsl
test
mov
and
push
insb
aad
aad
sbb
fsubs
jl
jg
add
aad
pop
add
addl
inc
jmp
addr16
inc
adc
or
and
in
shlb
mov
mov
dec
dec
iret
cmc
insb
jge
add
mov
push
aaa
repnz
cmp
adc
cmp
mov
leave
fs
test
or
les
pop
popa
clc
ret
hlt
inc
xor
or
or
ss
or
or
lcall
dec
into
cs
adc
pop
mov
bound
add
call
xor
mov
dec
adc
in
pop
testb
test
push
movsb
sbb
adc
inc
or
sbb
and
and
mov
rorb
fiadds
fst
push
adc
mov
adc
add
hlt
xchg
push
xor
xorl
push
or
mov
pop
add
bound
in
mov
shlb
mov
mov
mov
inc
xchg
icebp
adc
stos
sub
xor
xchg
addr16
lock
jne
into
add
shlb
add
jle
sbb
dec
inc
add
xor
es
pop
int3
mov
cmp
and
test
divb
scas
sub
sub
inc
andb
mov
and
ja
adcb
imul
rorl
dec
xchg
stc
sbb
xor
inc
adc
xchg
add
push
lods
ljmp
or
dec
cmp
lret
sahf
push
scas
pop
pushf
xchg
pop
cmp
cmp
stos
loop
mov
mov
dec
xor
sahf
out
inc
mov
mov
test
mov
sbb
das
aaa
shl
fcomip
mov
add
add
shll
jnp
fidivrs
mov
ret
and
add
or
xlat
and
repz
inc
jne
sub
add
xor
fmull
in
jo
adc
test
inc
push
stos
jge
add
cmpsl
push
mov
add
push
lods
mov
jnp
and
xchg
and
clc
lahf
bound
and
shll
aad
xor
gs
adc
mov
jns
cli
or
or
push
adc
adc
or
test
pushf
test
mov
sbbb
fs
sub
icebp
mov
cli
and
adcb
jb
lds
adcb
inc
movsl
jo
lea
dec
push
movsl
in
xchg
mov
pop
push
push
cmp
fwait
rcrb
mov
jp
push
adc
jo
cmp
pop
add
mov
push
xchg
xchg
stos
add
daa
loopne
xlat
iret
cmp
orb
daa
std
push
lock
xor
push
std
test
adc
inc
std
test
xor
cmpsl
push
loop
and
jle
popf
mov
inc
movsl
scas
rol
mov
shlb
mov
test
out
cmp
cmovp
ljmp
sub
inc
add
xor
int
push
xor
sub
mov
loope
push
data16
loopne
inc
repnz
mov
push
shl
data16
adcl
andb
jnp
inc
mov
xchg
inc
stos
sub
mul
mov
cmp
shrl
xchg
cmc
mov
add
addr16
mov
addb
sbb
mov
or
inc
sbb
lret
popa
push
push
and
pop
adc
push
pusha
mov
or
and
adc
ret
or
add
sub
jne
push
aaa
push
mov
or
push
fistpl
lret
adc
push
push
add
dec
mov
repz
adc
xchg
cli
xchg
dec
andb
and
rolb
jmp
adc
mov
or
loop
or
dec
adc
or
jo
mov
mov
xor
cs
das
fwait
xchg
adc
nop
xchg
xchg
imul
mov
inc
add
add
sub
and
push
arpl
xor
push
lret
je
andb
push
psubd
mov
adc
fldl
inc
sahf
sbb
bnd
bound
adc
push
int
enter
enter
xor
dec
cmc
add
dec
leave
mov
fcoml
in
push
test
sbb
pop
ret
mov
or
lahf
push
int
subb
add
mov
add
cmpsl
mov
aam
int
scas
inc
cmp
bound
dec
lock
mov
sbb
inc
push
aam
movsb
and
or
adc
or
jl
adc
dec
sbb
stos
dec
jl
negl
adc
jp
push
adcb
xchg
add
push
aaa
ljmp
dec
adc
xchg
jo
inc
and
shr
stc
stos
add
ffree
cli
les
and
push
push
mov
and
mov
mov
xor
jne
jecxz
lods
sbb
fisubl
nop
mov
adc
lcall
xor
ficompl
jo
xchg
loop
push
nop
mov
adc
or
pmullw
test
mov
xor
push
xchg
pop
insb
mov
add
daa
loop
pop
inc
xchg
mov
pop
repz
or
adc
rcrb
push
xchg
pop
ret
lret
cs
cmp
pop
xchg
loopne
mov
leave
loop
lret
int3
adc
pusha
call
test
int
dec
loope
add
mov
add
jae
push
xor
gs
call
popa
aam
cmp
mov
jmp
jbe
xchg
scas
inc
add
sub
adc
push
xor
push
cltd
cmp
mov
inc
mov
push
mov
xor
sbb
stos
add
in
push
and
test
cmp
xor
mov
stos
push
jno
or
mov
mov
sub
mov
or
pop
les
push
xchg
imul
rcl
adc
cwtl
xor
adc
push
mov
mov
lcall
in
add
mov
ficomps
pop
dec
push
cs
ljmp
and
pusha
inc
shrb
adc
enter
pop
mov
rclb
stos
add
mov
push
inc
and
xor
adc
inc
bnd
adc
sbb
adc
pop
jne
mov
call
lods
int
dec
adcb
rcll
xor
enter
pop
test
jmp
jo
push
or
adc
rcll
arpl
sub
pushf
add
sbb
adc
or
or
aam
push
icebp
adc
xchg
adc
test
jmp
loope
data16
stos
push
push
mov
add
ror
lcall
add
push
mov
das
pop
xchg
mov
ljmp
push
jno
push
inc
and
test
jb
xorb
ljmp
or
cmp
mov
push
fcompl
sbb
fnsave
loopne
add
mov
mov
add
sub
inc
mov
jae
aad
push
insl
push
adc
loopne
in
add
push
sbb
sub
lods
add
out
jge
jl
call
daa
lock
mov
sub
rcll
ret
cmpsb
test
loop
pushf
mov
loopne
int
adc
sub
or
loopne
mov
mov
ljmp
subb
mov
add
jo
call
scas
jb
stos
xor
subl
or
xchg
mov
loopne
scas
inc
in
jo
sub
das
sub
pop
cmpb
js
dec
lret
mov
sbb
test
in
mov
mov
jmp
andb
icebp
and
push
lock
xchg
pop
sbb
inc
cmp
ljmp
cmp
testb
push
aad
and
sbb
into
add
inc
repz
or
mov
test
sbb
hlt
sub
sbb
inc
test
sbbl
jge
add
or
cmp
imul
test
shlb
mov
add
cmp
test
icebp
xorl
push
aam
scas
mov
xor
adc
xor
sub
inc
call
in
fistps
mov
push
sahf
lods
es
lods
repz
lds
inc
mov
sub
add
movsb
lods
sub
sahf
sbb
inc
mov
imul
pop
les
xchg
dec
push
push
xlat
add
notb
jecxz
xorb
rorb
insb
dec
int
or
push
jmp
sarl
bound
pop
push
adc
push
bound
xor
inc
adc
stos
add
mov
or
xor
pop
jmp
xchg
lahf
or
popa
add
sbb
cmpsl
addr16
loope
shl
inc
sbb
lcall
mov
mov
push
movsb
es
rol
pop
pop
pop
aam
or
sbb
and
or
jne
xor
pop
pop
loop
fwait
rcrl
lret
lods
push
mov
sub
push
push
data16
sbb
add
enter
mov
popf
and
xchg
leave
mov
mov
rep
or
mov
icebp
or
jp
jle
aaa
push
je
push
xor
or
inc
sub
in
kmovw
lcall
jnp
xchg
push
fs
fsubrl
hlt
mov
jge
xchg
dec
int
and
call
xchg
pop
mov
adc
or
sbb
std
mov
leave
add
enter
push
shll
adc
xchg
cltd
fdiv
mov
cmp
or
mov
shrl
imull
or
or
cmp
adc
add
test
jnp
jo
push
pop
xchg
and
movlps
fdivrs
insb
adc
push
js
js
inc
icebp
fiadds
push
ret
roll
xlat
inc
mov
rclb
jp
sbbl
add
sbb
lock
push
pop
cmp
cli
rcrb
xor
out
jae
rolb
pop
push
out
sbb
testl
cmp
cmp
imul
adc
or
mov
adc
lcall
aad
add
jo
sbb
mov
aas
mov
orl
aas
ljmp
popa
lcall
push
aad
and
mov
or
ljmp
mov
mov
insb
xchg
inc
popf
lock
mov
push
or
inc
or
jne
cltd
sub
or
inc
xor
add
dec
jp
adc
mov
push
push
adc
subb
xchg
lock
lock
push
or
jae
mov
imulb
push
repz
les
shl
shrl
mov
dec
or
push
pop
and
test
adc
and
push
mov
inc
enter
rorl
mov
and
icebp
sbb
ret
into
mov
fwait
cmpsb
adcl
push
stc
jne
pop
add
pop
aam
add
js
sub
sbb
jae
mov
imul
subb
orb
push
iret
lret
and
loope
or
pavgb
nop
shrb
nop
or
xlat
sbb
bound
push
mov
enter
stos
in
lds
fsubl
mov
adc
add
ret
mov
iret
xor
scas
pop
inc
daa
adc
enter
sbb
pop
rcrb
add
pushf
or
sub
xchg
mov
mov
imul
lret
hlt
adc
andb
add
mov
sub
adc
or
xchg
jo
xchg
sbb
dec
enter
insl
dec
sub
dec
add
push
ret
or
pop
mov
adc
adc
testb
and
xchg
sbb
inc
sub
loopne
jns
lods
add
call
or
pushf
or
popa
and
adc
imul
inc
fwait
dec
sub
inc
xchg
leave
or
jae
push
dec
push
mov
sub
mov
mov
out
jo
dec
stc
addb
das
dec
sbb
ror
sub
cmp
mov
push
push
pop
mov
add
jns
fld
pop
test
in
mov
and
rcll
mov
dec
add
hlt
adc
and
add
push
xor
scas
xorb
inc
add
push
sbb
cmp
loope
and
xor
or
jo
mov
sub
xchg
add
push
test
lods
xor
push
fs
adc
or
or
sub
mov
push
leave
scas
push
mov
xchg
icebp
and
js
dec
outsl
popa
add
inc
ret
mulb
xor
test
jb
lret
adc
sbb
fildll
inc
jb
pusha
push
leave
mov
mov
mov
sub
or
jmp
adc
rorl
ss
cli
daa
or
jo
rclb
aad
adc
int
cld
in
sbb
and
push
pop
mov
leave
pop
push
sub
or
push
test
sbb
add
int3
or
rolb
push
mov
shrb
sbb
test
cmp
push
scas
mov
popf
hlt
jp
out
push
repnz
rclb
mov
mov
adc
inc
sub
sbb
test
or
push
loope
adc
pop
icebp
enter
push
cmp
inc
aad
rcrb
adc
add
pop
int
mov
and
and
out
pop
cmp
adc
pop
pushw
subb
inc
sub
fsubrp
sub
push
mov
jle
cmp
scas
shrb
mov
jne
out
or
pop
push
pop
xchg
mov
pop
mov
inc
pusha
orb
push
cmpb
rcrb
jo
sbb
inc
and
test
sbb
add
cwtl
stc
inc
lock
enter
dec
add
decb
mov
xor
push
aam
adc
cmp
cmp
cmpps
jb
sbb
and
pop
adc
andl
push
ja
mov
cli
adc
adc
or
lds
xchg
shlb
mov
in
repz
or
cltd
std
push
loop
into
jae
ret
test
scas
inc
sbb
mov
mov
insb
pushf
xor
sub
popa
sbb
add
push
movsb
mov
xchg
pushf
xchg
adc
mov
inc
cmpsb
mov
js
cs
add
push
shlb
push
pop
sbbb
clc
sbb
xor
push
mov
icebp
mov
adc
push
das
adc
adc
push
pusha
and
jo
sub
dec
pusha
stos
aad
dec
leave
xorl
cmpsb
jb
iret
pop
scas
pop
test
js
xchg
and
lods
rorb
push
pop
push
sbb
subl
push
push
popa
insb
and
aad
adc
mov
xlat
adc
xor
cmp
das
lcall
out
sub
inc
push
clc
cmp
xlat
jnp
loope
push
xor
adc
pop
xor
test
pop
adc
sti
push
lahf
adc
push
pop
shl
adc
xor
sarl
sbb
or
push
mov
jp
cwtl
lcall
mov
pop
pop
ret
lea
pop
cmp
gs
js
lock
xor
in
add
icebp
push
cli
push
pop
sar
lock
cmp
or
and
lahf
or
adc
and
mov
push
mov
sbb
lcall
add
add
cmp
rcll
mov
int
jnp
inc
xchg
leave
add
or
adc
xor
mov
loopne
xor
pushf
ss
ja
les
pop
ret
push
push
adc
pop
cmpl
rcl
fcmove
jo
or
sbb
xchg
or
and
and
daa
add
vmptrld
sbb
mov
in
arpl
xchg
mov
mov
sub
jecxz
xlat
sbbb
sub
sub
or
shlb
or
ret
jne
add
addb
push
sub
xorb
push
dec
stos
into
stos
xor
jae
pop
jmp
in
scas
xor
mov
loope
inc
fildll
rol
cmc
adc
push
jp
and
cmp
and
mov
sti
adcb
int
jg
push
adc
adc
cmp
out
rolb
scas
xchg
push
mov
adc
inc
enter
shlb
test
mov
or
arpl
jo
ret
pop
subb
push
cmp
daa
fs
jl
enter
add
or
mov
xor
sbb
push
mov
sbbl
test
pop
mov
mov
sbbb
leave
adc
pop
dec
scas
add
dec
xchg
roll
jno
xchg
push
lds
popa
sub
mov
mov
sbb
add
js
and
add
lea
mov
mov
xor
mov
shl
cmp
das
mov
sarb
mov
sub
movl
add
out
mov
pop
pop
rorb
idivb
sub
call
stc
add
iret
pop
jle
inc
xchg
mov
jg
iret
lahf
aas
popa
mov
mov
inc
or
cld
stc
repz
add
xor
mov
lahf
aas
jg
cs
data16
neg
out
jl
add
adc
mov
and
aas
jg
adc
xchg
movsb
mov
mov
and
inc
stc
repz
ret
icebp
sbb
mov
pop
push
add
jg
cld
sub
xlat
loopne
xchg
lret
mov
cmpsb
idivl
iret
lahf
aas
adc
dec
or
sub
cmp
std
jg
jg
cld
stc
dec
sub
nop
jno
lahf
jnp
dec
movsl
mov
out
lahf
aas
mull
lcall
xchg
cld
stc
repz
pop
push
cmp
aad
rorb
sub
iret
lahf
aas
jg
dec
jns
dec
stc
femms
std
adc
jns
stc
repz
push
jne
shrb
mov
lahf
aas
jg
jmp
sub
pop
rorl
and
jge
repz
ss
cmp
dec
sub
cmpps
nop
aas
jg
cld
int3
inc
add
inc
fcoml
stos
xchg
lcall
iret
lahf
mov
lcall
add
aaa
jg
cld
stc
jnp
insb
arpl
mov
andb
or
in
out
lahf
aas
cmp
add
jecxz
cld
stc
repz
cmp
pushf
bsr
nop
push
xchg
ror
sub
lods
xchg
push
pop
sub
loope
imul
stc
repz
je
jb
sub
pop
push
pop
adc
jg
ficoml
cmp
cmp
pop
sub
out
mov
adc
mov
xlat
inc
or
aas
jg
cld
aam
jg
decb
sahf
and
mov
repz
lahf
daa
icebp
loop
jle
mov
jge
jg
cld
stc
test
push
mov
push
and
iret
lahf
aas
add
testl
mov
out
movl
mov
iret
lahf
aas
jg
cs
incb
push
and
repz
cld
stc
repz
xlat
mov
int
nop
repz
aad
jo
aas
jg
push
scas
xchg
xchg
sbb
dec
iret
jo
mov
cmpsb
mov
pushf
add
scas
outsl
aas
jg
cld
dec
test
jle
fcmovne
pop
and
repz
lahf
or
testb
daa
jmp
cld
stc
adc
fsts
jg
inc
add
iret
pop
sbb
xor
add
arpl
cld
stc
repz
push
mov
cmp
cmp
jg
jmp
jno
rorl
xlat
add
imul
rcrl
ficompl
adc
scas
adc
jl
cld
stos
fsubrl
mov
pop
nop
cmc
add
out
mov
dec
mov
roll
mov
das
sbb
mov
sbb
cmp
out
lahf
aas
fisubrl
jnp
xor
sar
stc
repz
sahf
int3
loope
shrb
std
mov
lahf
aas
jg
test
subb
mov
adc
stc
repz
xchg
dec
leave
inc
inc
dec
ret
rcll
lahf
aas
jg
and
pop
add
testb
xor
in
out
test
repz
and
cmpsl
xchg
in
jg
cld
outsb
gs
add
stos
icebp
and
sbb
iret
lahf
dec
push
pop
push
push
out
imul
cld
stc
fists
mov
movsl
sub
fucom
iret
lahf
aas
xor
bound
dec
enter
fisttps
cld
stc
repz
inc
push
movsl
and
jmp
dec
lahf
aas
jg
xor
popf
repz
bound
es
popa
pushf
call
push
and
lret
xor
repnz
repz
adc
jns
xor
nop
stos
stos
lcall
cld
cld
dec
cmpl
add
rclb
out
lahf
decb
adcl
jb
gs
loop
jg
cld
stc
mov
aad
aad
std
push
inc
jb
scas
and
iret
lahf
aas
add
mov
adc
sar
stc
repz
xchg
into
mov
adc
hlt
mov
aas
jg
sub
insb
mov
jns
pushl
xchg
or
xrelease
iret
lahf
cld
or
pusha
cmp
push
je
dec
out
jg
cld
stc
push
jg
mov
movsb
aas
pop
cmpsb
add
jge
iret
lahf
aas
pop
stc
xor
and
icebp
enter
cld
stc
repz
xchg
test
shlb
or
lahf
aas
jg
cmp
sub
cld
stc
repz
xchg
or
jg
filds
and
mov
aas
jg
adc
test
add
mov
fcmovnb
dec
stc
repz
pop
imul
push
mov
sbb
cld
jg
repz
inc
lret
call
inc
jecxz
dec
mov
sub
jle
mov
mov
cld
stc
lret
jbe
xor
shll
push
aas
jns
jae
repnz
dec
in
ljmp
adc
stc
rep
push
popa
fsts
pop
jae
xchg
jg
or
mov
and
mov
mov
push
outsb
aas
jg
cld
stc
std
or
mov
scas
cs
fwait
push
pop
push
enter
iret
lahf
aas
jecxz
sub
jne
push
xchg
cld
stc
repz
aaa
sub
lods
mov
out
xchg
mov
inc
aaa
inc
gs
cld
stc
repz
stos
insl
popa
shlb
mov
pop
inc
iret
lahf
aas
jg
push
mov
jns
xchg
out
int
das
sub
jg
sbb
cmp
xchg
or
aad
stc
repz
rorb
aam
mov
icebp
ds
inc
aas
jg
cld
outsb
or
out
dec
testl
add
lahf
mov
fs
cmp
jo
rcll
xor
cld
and
iret
lahf
aas
pop
ja
add
inc
dec
pop
xor
hlt
jle
cld
stc
repz
add
xlat
jns
popf
bsr
iret
lahf
aas
jg
or
lret
push
out
movsb
cld
stc
repz
cmp
jle
in
jl
aad
pushf
fiadds
mulps
xor
jno
jbe
jge
stc
repz
inc
adc
and
aam
aas
jg
cld
add
pushf
pop
dec
add
mov
pop
xor
insb
pop
test
add
fisttpll
jge
cld
stc
push
jns
xlat
cwtl
push
jae
sti
in
gs
rcrb
out
lahf
aas
push
mov
push
add
adc
cld
stc
repz
xor
sbb
idivb
loope
pop
cmpsb
iret
lahf
aas
jg
mov
pushf
push
and
addr16
cld
sti
in
insl
fistps
mov
sbb
daa
cmp
cwtl
mov
aas
jg
mov
push
inc
pop
xchg
or
int
stc
repz
aam
loopne
sbb
mov
in
push
mov
mov
cld
xor
mov
ss
shl
iret
lahf
jg
daa
sub
stos
outsl
pop
dec
pop
loop
imul
cld
stc
repz
inc
das
jge
hlt
aaa
test
rcrb
lahf
aas
jg
lret
scas
xor
add
arpl
jmp
xchg
insl
pop
xlat
fiaddl
adc
dec
jg,pt
ficomps
lds
cld
mov
lret
or
inc
pop
add
iret
lahf
aas
mov
adc
stos
aad
xchg
ss
pushf
inc
cld
stc
repz
cld
adc
negl
sbb
or
xchg
pop
popa
adc
mov
stc
repz
inc
pop
add
push
dec
movsl
push
out
lahf
ds
out
dec
mov
orb
repz
push
sub
rcll
popa
fcmovbe
lahf
sub
xchg
es
lahf
aas
jg
pop
icebp
pop
adc
adc
insl
iret
cs
pop
out
imul
add
nop
pop
out
xlat
insl
adc
repz
insl
xor
xor
imul
daa
loope
xor
xor
repz
sub
sbb
repz
int3
js
sbb
cld
ljmp
in
xor
jmp
iret
lahf
push
xor
mov
stc
sarl
pop
lods
ljmp
push
out
lahf
aas
sar
jp
lock
jmp
test
pop
and
repz
insl
pusha
pusha
jg
nop
cwtl
lahf
out
lahf
jg
test
ret
mov
cld
stc
repz
das
mov
sbb
iret
imul
aas
jg
lea
add
and
fmuls
cld
stc
repz
int3
rol
pop
pushf
ret
pusha
push
xchg
aam
push
xchg
lahf
aas
jg
scas
jge
fdivs
cmp
filds
mov
pop
push
cld
stc
repz
mov
call
cmpsb
xchg
int3
mov
or
add
in
jne
addr16
mov
iret
and
inc
push
popa
stos
fs
jp
aas
jg
es
mov
sub
ljmp
stc
repz
sub
add
stc
xchg
sub
mov
aas
jg
cld
jg
dec
imulb
cmp
repz
out
nop
sbb
adc
push
inc
test
cld
pop
stc
and
add
dec
sub
je
out
lahf
cld
jns
scas
mov
jnp
fs
jg
cld
stc
pusha
ficoms
adc
movsb
fbld
je
out
lahf
aas
ret
js
and
test
pop
or
cld
test
pop
pop
pop
cwtl
pop
xchg
jle
out
mov
jmp
lds
scas
loop
and
xor
repz
lahf
jbe
movsb
shr
cwtl
fstl
lods
rolb
add
jmp
push
mov
stc
repz
dec
addr16
jns
adc
xchg
cmp
iret
lahf
aas
jg
clc
movd
std
cs
stc
repz
mov
cltd
loopne
aam
push
mov
cmc
flds
jnp
aas
jg
mov
ljmp
xrelease
out
xor
dec
dec
pop
and
sti
push
xor
aas
jg
cld
xlat
and
subb
test
jecxz
jns
pop
repz
lahf
push
pusha
and
and
lahf
adc
jg
cld
stc
sbb
hlt
cmpsb
lods
scas
adc
cld
enter
lahf
aas
xor
push
xchg
adc
out
inc
or
repz
mov
push
ss
iret
cmp
cmp
xor
or
lahf
aas
jg
fnstenv
mov
xchg
hlt
not
ret
cmp
stc
repz
adc
pop
mov
pusha
and
cltd
mov
mull
dec
push
xchg
mov
pop
les
mov
mov
lods
addb
jg
cld
inc
mov
and
cwtl
xchg
or
shr
out
lahf
pop
push
leave
mov
shll
add
stc
cs
leave
icebp
lret
sbb
arpl
lahf
aas
pop
lods
pop
push
cmp
and
push
stc
repz
out
cs
insb
or
push
pop
aas
jg
cld
push
lcall
push
in
lret
cmpsl
cld
pop
sahf
cmpsl
jmp
ret
mov
iret
lahf
aas
jg
test
lods
cmpsb
cli
stc
jl
sahf
mov
cld
stc
repz
adc
hlt
loop
xchg
adc
gs
aas
jg
andb
jle
adc
repz
test
mov
xchg
negl
aas
jg
cld
out
sbb
mov
fildl
ss
iret
lahf
push
cmp
push
cltd
fwait
lock
aas
jg
jl
sbbl
adc
cmc
mov
out
lahf
xchg
scas
xchg
nop
icebp
outsb
bound
adc
push
gs
cld
stc
lds
pop
data16
pop
bnd
iret
fs
lahf
aas
lods
mov
cmc
test
sahf
mov
push
mov
flds
push
hlt
pusha
rorl
clc
and
jg
pop
xor
adc
out
mov
jg
add
cwtl
daa
loopne
jmp
push
adc
aas
adc
cld
stc
or
inc
or
loop
xchg
outsb
gs
sub
in
pop
lahf
mov
stos
imul
stc
repz
imul
ja
imul
cltd
pop
xchg
push
sarl
lahf
xchg
out
adcl
je
xor
repz
rcr
sbb
in
mov
fdivrs
jg
cld
shrb
cmp
sbb
mov
and
sbb
sbb
arpl
repz
call
jle
sti
and
std
push
pop
mov
adc
scas
fs
repz
mov
repz
lahf
cmpsl
stc
add
xchg
lcall
jg
cld
stc
adc
aaa
mov
jae
pusha
mov
ljmp
pop
jp
push
fdivr
cld
stc
repz
cs
test
sarb
iret
lahf
aas
jg
cmp
add
xchg
ficoms
mov
nop
out
cmc
stc
xor
iret
cmp
mov
mov
test
dec
adc
aas
jg
shlb
int3
test
cmpb
iret
mov
mov
xchg
pop
mov
add
push
shlb
dec
inc
and
dec
jae
repnz
incb
movsb
and
aas
fimull
dec
mov
nop
xor
mov
sahf
cwtl
aaa
pop
and
stc
rep
sbb
push
jo
cmp
scas
rol
repz
jg
cld
or
inc
adc
mov
mov
clc
ss
lahf
stc
ds
or
fstpt
stc
cld
stc
and
jecxz
push
push
in
inc
mov
pop
int3
lods
call
sub
dec
iret
lahf
aas
jg
mov
cli
inc
popa
xor
scas
shl
stc
repz
repnz
stos
lock
sbb
xor
push
pop
movb
fwait
sub
out
lahf
aas
sbb
add
push
xor
cld
stc
repz
mov
adc
cltd
std
icebp
iret
lahf
aas
jg
mov
dec
inc
cmp
cld
stc
repz
repnz
push
decb
ja
cmp
fstpl
adc
stc
lahf
aas
jg
pushf
mov
outsb
sub
cmp
iret
dec
add
xchg
shl
cld
mov
jg
cld
iret
xchg
out
popfw
xchg
inc
mov
lods
push
out
lahf
xor
sarl
rolb
cld
stc
in
aam
or
push
or
adc
out
lahf
aas
out
sbb
cltd
dec
pop
ja
pop
aad
cld
stc
repz
or
fldt
pop
push
adc
mov
mov
add
sbb
out
lods
bound
into
pop
jl
out
jo
jle
lds
jle
mov
aad
adc
and
sbb
inc
outsb
pushf
xchg
int3
push
xlat
fcmovnu
and
sti
ljmp
cmc
jl
in
je
sti
iret
lahf
aas
ljmp
mov
inc
iret
pusha
cmpsl
adc
or
adc
stc
repz
inc
and
adc
ret
in
lahf
aas
jg
inc
mov
pushf
movsl
les
stc
repz
add
fldenv
sbb
sbb
inc
aas
aas
jg
cld
xor
test
push
xchg
cwtl
daa
loopne
jmp
add
aas
adc
shlb
inc
or
xchg
mul
div
out
lahf
mov
cmp
les
xor
stc
ss
dec
jg
cld
stc
xor
pop
cmp
daa
mov
lcall
out
lahf
aas
arpl
bound
out
bswap
inc
jmp
adc
cld
stc
repz
inc
and
adc
fildl
fwait
jae
clc
iret
lahf
aas
jg
pop
sbb
loopne
pop
jmp
cld
stc
repz
out
lret
or
lods
repnz
xlat
lahf
aas
jg
and
fisttpl
int
in
scas
hlt
stc
repz
cmp
jg
je
mov
mov
cld
out
xor
mov
fistpll
iret
lahf
jg
test
movsl
pushf
sbb
popa
add
stc
cld
stc
repz
lahf
xlat
add
into
ret
jmp
cld
stc
pop
aas
bound
dec
mov
xchg
sbb
lahf
aas
jg
push
cli
movsb
scas
adc
mov
movsl
call
repz
dec
adc
fsubs
mov
cld
mov
xor
dec
adc
test
iret
lahf
ja
cmp
xchg
cmc
daa
or
out
cmp
nop
sub
aaa
faddl
inc
mov
push
pop
js
es
sbb
or
mov
aas
jg
dec
mov
ja
mov
adc
stc
repz
pop
inc
mov
or
sbb
mov
cmpsl
fnstcw
xchg
out
mov
mov
js
out
lahf
xlat
sub
mov
test
inc
lcall
call
dec
jo
mov
aas
ja
loope
iret
lahf
aas
movsl
or
cld
stc
repz
adc
mov
inc
iret
iret
ret
ret
dec
in
insb
xchg
cmp
cmp
mov
stos
jns
out
xchg
and
adc
outsl
fidivrs
jbe
jne
mov
enter
fwait
adc
jo
sti
sub
enter
fsubrs
sbb
icebp
mov
jae
mov
cmp
cmc
jnp
sarb
adc
sahf
out
mov
xchg
cmpl
mov
and
in
push
pop
add
dec
cmpsb
ret
xchg
fwait
aaa
outsl
cmp
xchg
pop
out
dec
sub
mov
pop
cmpsl
sub
test
or
pop
adc
aaa
outsl
fimuls
xchg
push
xor
lds
int
lea
mov
test
mov
mov
cmc
sti
idiv
rcrl
into
mov
or
in
repz
fwait
inc
call
jnp
xchg
idiv
jl
outsl
fidivrs
pop
push
in
aaa
jne
jg
rorb
fwait
aaa
sub
pop
adc
pop
jbe
fidivrs
xchg
ljmp
mov
outsl
arpl
xor
je
ja
call
jns
out
ljmp
jo
jo
iret
jno
fwait
aaa
outsl
rorl
jb
pop
xchg
insl
arpl
repz
xor
inc
and
inc
dec
das
and
fldl
fidivrs
push
mov
adc
xchg
mov
mov
daa
arpl
les
iret
inc
ret
sub
je
push
jg
shll
test
and
xchg
adc
out
lahf
aas
push
vprotw
add
cld
stc
repz
inc
add
insb
ljmp
push
aas
jg
test
rorl
sub
cld
stc
repz
jmp
mov
sub
dec
ret
jg
cmpsl
jecxz
cmp
sub
cld
jne
push
outsl
xchg
stc
repz
sub
jno
xor
es
into
xor
cld
les
sahf
iret
lea
adc
or
out
lahf
mov
out
xchg
fbld
fnstcw
cld
stc
pop
xchg
out
lods
push
popf
xchg
jns
jp
pop
adc
xchg
or
iret
lahf
aas
movsl
in
inc
or
lock
ss
mov
cld
stc
repz
cmp
push
fidivl
xor
lahf
jl
rcr
mov
xchg
sub
cld
stc
daa
jns
out
stos
movsl
and
mov
pop
out
lahf
aas
push
xchg
flds
popl
stc
repz
mov
pushf
mov
aad
jg
cld
sub
lods
adc
cltd
add
cltd
out
lahf
aas
bound
add
jmp
sbb
inc
and
cld
stc
repz
dec
mov
pop
int
cmp
outsl
xor
lahf
aas
jg
jle
cwtl
sub
out
fmul
out
and
out
inc
in
cmp
jo
dec
idivb
repnz
mov
cld
es
rcl
mov
lahf
aas
jg
divl
cmp
jg
jg
ss
aad
mov
iret
pop
movsb
and
dec
sub
lods
jmp
jg
cld
adc
incl
jecxz
out
jbe
mov
mov
add
push
decl
ror
aas
aas
in
repnz
sub
sub
in
test
aas
xor
stc
repz
mov
popa
and
jmp
add
sahf
fsubl
in
sti
or
pop
mov
enter
mov
aas
aaa
outsl
fidivrs
xor
sti
jge
inc
repz
fwait
scas
test
or
xor
inc
outsl
fidivrs
mov
and
add
xchg
fwait
aaa
ror
push
lahf
scas
mov
ja
rcrb
lock
ja
mov
aaa
outsl
fidivrs
aaa
jge
inc
xchg
sub
fnstsw
out
adc
cld
stc
shr
movsl
bound
insb
and
cmpsb
pop
jl
add
out
lahf
aas
nop
test
aas
nop
push
dec
cld
stc
repz
cmc
xchg
lods
cld
cmpsb
push
stos
lds
popa
iret
lahf
aas
jg
sub
inc
push
shll
hlt
xor
stc
repz
xchg
fidivrs
mov
push
sahf
lahf
aas
jg
mov
imul
roll
repz
jg,pn
adc
aad
pop
push
push
dec
add
or
loopne
or
adc
inc
outsl
das
mov
cmp
pop
inc
push
out
inc
out
fwait
ja
imul
rolb
jns
arpl
push
jmp
push
inc
inc
fcomps
fwait
aaa
jg
and
or
cmp
mov
jns
out
cwtl
xchg
sub
ja
insl
rcrl
aaa
outsl
fidivrs
sub
addr16
xlat
test
out
fwait
xor
inc
fst
cltd
aam
pop
add
mov
imul
cltd
loop
push
push
add
outsl
sbb
movb
cli
ja
data16
dec
inc
fsub
int
aaa
mov
push
xor
mov
shrb
mov
jb
sbb
out
jae
int
aaa
outsl
popa
cmp
inc
aam
push
insl
cmp
mov
daa
add
mov
sbb
into
xchg
leave
leave
xchg
dec
stos
je
rcrb
sub
and
cli
mov
and
bound
push
in
mov
fidivrs
cmp
cmp
push
ljmp
int
stc
cmp
dec
cmc
dec
and
pop
clc
enter
aas
cmp
sbb
sahf
jp
gs
fidivrs
imul
xchg
pop
cmp
jb
int
aaa
mov
jb
jno
aaa
orl
mov
stos
xchg
and
outsl
fidivrs
mov
in
hlt
jge
sbb
data16
out
fwait
aaa
enter
dec
xlat
ds
mov
jns
pop
gs
inc
iret
xlat
mov
dec
fidivs
cmpsl
cmp
mov
aaa
out
fbstp
leave
pop
inc
sbb
sbb
call
cmp
cmpsl
fndisi(8087
mov
movsb
mov
decb
xor
fildl
sahf
jne
jle
stc
repz
cmp
lods
inc
adc
add
xor
shl
aas
jg
cld
dec
movsl
aam
push
inc
hlt
rcrb
les
das
repz
lahf
adc
inc
adc
mov
dec
fldt
adc
mov
sbb
shlb
cwtl
scas
xchg
adc
addl
imul
stos
push
push
fidivrs
mov
push
aas
andl
shll
mov
testb
enter
repz
inc
xchg
movsb
mov
or
and
lret
inc
outsb
fsubp
stos
mov
loopne
repz
cmp
jg
es
mov
fstps
add
jns
push
dec
les
insl
mov
ds
fwait
aaa
mov
out
rorl
jle
push
mov
and
sub
out
subl
jbe
mov
xchg
pop
mov
add
mov
testb
out
sub
mov
outsb
out
repz
cli
js
push
sub
fldenv
aas
cmp
add
push
lea
mov
in
xchg
push
add
sub
fidivrs
pop
mov
or
mov
mov
loopne
push
into
aas
testb
out
fwait
aaa
popa
cli
pop
imul
outsb
movsl
xor
push
push
cltd
sub
push
sub
scas
cmpsl
aas
int
aaa
outsl
inc
mov
mov
iret
cmp
call
xor
xor
outsb
imul
xchg
fwait
aaa
outsl
out
in
loopne
into
std
and
xor
add
push
out
mov
cs
mov
mov
in
data16
pop
clc
xor
fdivrp
lock
int
aaa
ret
jne
sbb
jg
jo
das
mov
adc
out
lahf
aas
je
mov
add
popa
mov
mov
dec
push
movsl
out
xor
and
das
imull
iret
fidivrs
sbb
adc
lods
aaa
test
xor
fwait
aaa
outsl
xchg
mov
xchg
shrl
lcall
dec
data16
mov
sub
aaa
outsl
cmpsl
data16
out
mov
jae
mov
int
sbb
adc
mov
bound
mov
outsl
fidivrs
mov
push
dec
or
cmc
jo
jno
clc
xlat
cld
les
lods
outsl
fidivrs
scas
andb
scas
and
inc
jp
jle
int
fwait
aaa
xchg
scas
mov
sahf
adc
jb
mov
repz
cmc
loop
insl
jmp
rcrb
jg
xchg
movl
xchg
lcall
jo
jne
xorb
shll
cmp
aas
jg
or
scas
clc
push
jmp
cmp
stos
add
sbbb
push
xor
or
mov
ljmp
jbe
js
adc
out
loop
jns
adc
ds
outsl
fidivrs
lods
mov
inc
imul
outsb
dec
insb
xchg
negb
pop
enter
fidivrs
sbbl
gs
mov
pop
stc
jo
int
aaa
test
or
pop
out
rcrb
dec
aam
enter
push
or
mov
js
bound
lods
leave
cltd
mov
nop
sbb
aaa
outsl
fidivs
xlat
insl
push
pop
pop
icebp
stc
mov
enter
iret
pop
lock
repz
mov
jns
and
push
mov
pop
mov
int
aaa
iret
jmp
push
fwait
sarl
jns
sbb
adc
addb
inc
mov
int
aaa
outsl
sub
sub
mov
test
addb
scas
sbb
ja
fsubl
mov
out
mov
fwait
sbb
stc
xor
arpl
sti
fistps
mov
jbe,pn
xor
imul
out
fwait
aaa
in
mov
dec
lds
mov
mov
xchg
jp
sti
enter
or
ret
mov
fwait
aaa
outsl
ffreep
push
pop
push
jl
js
stc
inc
cmp
mov
mov
insb
mov
xor
fwait
aaa
outsl
fimuls
inc
rorb
imul
popa
jp
icebp
jbe
ja
lock
int
jae
ret
call
addl
jmp
mov
fisubrl
fwait
aaa
out
sub
inc
mov
scas
cs
mov
out
jecxz
sbb
int3
insl
std
jmp
lea
insb
fidivrs
sub
mov
out
cmp
rclb
mov
mov
inc
fistps
jb
fwait
daa
mov
mov
jle
jle
xchg
imul
mov
mov
gs
insb
or
outsl
jle
js
add
pop
mov
stc
xchg
cld
mov
push
in
and
and
aas
jg
inc
mov
xchg
addr16
lea
rol
push
jae
add
xchg
dec
call
or
mov
int
cld
stc
mov
call
sub
aaa
out
lahf
aas
stos
sbb
sub
push
loop
std
dec
leave
cld
cld
stc
repz
push
imul
dec
inc
ss
lahf
imul
cmpsl
xor
sbb
dec
xchg
adc
xchg
pusha
fldenv
inc
mov
dec
enter
outsl
fidivs
sbb
jg
sahf
xchg
xor
push
daa
leave
jmp
repz
mov
jg
inc
push
sub
jecxz
fwait
aaa
outsl
stc
mov
pop
fsubrl
cmp
shrb
mov
mov
int
stc
mov
clc
sbb
fiadds
push
mov
jp
subl
int
rolb
inc
sbb
jnp
insb
fidivrs
xchg
cs
cs
lock
cld
test
inc
mov
sbb
iret
lahf
aas
int
ret
push
js
inc
jg
or
loopne
pop
push
ret
push
repnz
fwait
aaa
outsl
fiadds
push
and
inc
lahf
cmpsl
jns
out
mov
xor
popa
pop
add
outsl
fidivrs
xor
mov
bound
fwait
xor
dec
icebp
scas
test
test
mov
push
pop
or
jb
mov
iret
aas
xchg
stc
and
pop
xchg
inc
adc
mov
repz
decb
pushf
cmp
jb
jae
xchg
iret
lahf
aas
jg
in
call
sti
incb
repz
loop
pusha
jbe
fsubrs
jle
and
shrb
outsl
jmp
lds
clc
enter
arpl
cwtl
dec
ds
fidivrs
movsb
mov
mov
out
fwait
or
mov
out
outsl
fidivrs
and
mov
shl
aaa
out
fwait
aaa
pushw
inc
in
mov
in
fidivrs
pop
mov
pop
inc
sbb
sub
jb
cmp
jg
insb
scas
into
lret
push
lods
dec
pop
mov
out
sub
loopne
leave
mov
lret
jns
inc
cld
jb
ror
jle
cmp
int
ja
xchg
push
mov
adc
pop
cmp
repz
and
movsl
or
mov
mov
outsl
fiadds
das
mov
jne
sub
sbb
adc
daa
fidivrs
mov
add
xchg
mov
sbb
xchg
sbb
mov
sbbb
ret
out
xchg
sbb
repz
jl
cmpb
push
mov
cli
jae
mov
mov
repz
fwait
push
xchg
insb
out
js
and
stc
pop
fstpt
cmp
dec
add
adc
aas
jg
cld
rclb
lahf
ret
out
cs
iret
lahf
jle
xchg
jbe
movsb
scas
adc
mov
jle
stc
cmp
sub
mov
inc
cld
stc
repz
xchg
jp
sub
mov
lock
iret
lahf
aas
jg
out
inc
xor
inc
scas
mov
sub
cmp
cmp
fs
mov
lahf
push
lahf
aas
jg
pop
push
fisubl
and
push
in
loop
fcmovnbe
stc
hlt
scas
pop
or
daa
lahf
aas
icebp
jno
out
orb
fsubs
repnz
mov
jmp
lcall
out
das
dec
inc
nop
shll
jns
out
enter
push
mov
mov
outsl
push
xchg
popa
adc
push
and
stos
iret
ficompl
out
clc
dec
enter
inc
jmp
pusha
aaa
outsl
fdivrp
insl
jne
insb
sbb
in
push
pop
sub
aad
mov
jb
push
cmc
push
fwait
ja
lahf
fildll
ja
out
mov
sbb
add
popf
dec
lcall
arpl
mov
repz
lds
jns
and
mov
addl
orl
mov
push
dec
fdivs
sub
mov
nop
out
orb
arpl
rcll
pop
pop
pusha
mov
pop
mov
dec
pushf
jge
aaa
mov
dec
inc
mov
iret
lahf
or
inc
aad
fbstp
cld
stc
jmp
out
scas
xchg
jl
mov
call
mov
aas
mov
stc
loop
mov
ret
cld
stc
repz
int3
push
jge
movsb
imul
cli
jp
iret
lahf
aas
jg
pop
loope
or
into
outsl
pop
add
stc
repz
sarl
jb
mov
mov
jb
lahf
outsl
cmpb
jg
flds
lcall
outsb
stc
repz
jmp
or
jp
rcrb
xchg
cmp
cld
shll
add
pop
pop
cmp
scas
repnz
add
mov
sub
cli
lahf
aas
jno
popf
pop
outsl
shll
repz
cmc
dec
xchg
jmp
test
ds
jo
add
ficoms
movsb
xchg
mov
shlb
sbb
sbb
ljmp
repz
decb
cmp
cwtl
in
sbb
outsl
fidivrs
sub
rcrl
ret
cmpsl
or
jns
out
adc
xchg
add
push
mov
outsl
fidivrs
push
push
sub
jmp
in
out
fwait
imul
aad
sbb
lock
outsl
fidivrs
xchg
loop
or
ds
int
aaa
sub
mov
push
fidivrs
dec
mov
cld
addr16
imul
stc
mov
in
ja
xchg
push
scas
fiadds
mov
mov
adc
and
outsl
push
inc
xor
std
repz
loop
daa
es
push
xchg
push
fldcw
mov
into
sbb
cmpsl
fsubr
test
pop
pop
add
fwait
aaa
or
stos
enter
fidivrs
dec
mov
jno
mov
int
aaa
outsl
sub
leave
test
das
ret
jns
out
test
add
push
sbb
push
xchg
pop
fwait
aaa
outsl
ficoms
and
in
stc
cwtl
pop
mov
int
arpl
add
jne
pop
stos
fimull
loopne
jne
aaa
outsl
fidivrs
testb
sub
int
adc
fmul
xor
mov
cmp
ret
and
stos
out
fwait
aaa
movsb
call
mov
or
mov
dec
sbb
dec
adc
cld
or
inc
int
aaa
outsl
cli
push
add
dec
cmpsl
mov
jbe
mov
and
mov
call
mov
and
andb
cmp
mov
jg
sub
mov
xchg
repz
and
inc
cmpsb
mov
jg
cld
xchg
mov
scas
xchg
ret
out
aas
repnz
repz
lahf
push
loopne
sub
push
fdivrl
divb
cld
stc
add
inc
or
rcr
or
inc
fcmove
lahf
aas
test
push
lods
push
mov
outsl
fdivs
lahf
pushf
push
loope
cld
stc
pop
in
dec
std
dec
mov
pop
jle
clc
iret
lahf
aas
jg
cmp
sub
shlb
cld
stc
repz
xor
mov
mov
pop
stos
push
cld
ss
and
mov
cld
xor
xorb
aas
sbb
lods
xchg
iret
lahf
aas
jg
cltd
cmp
add
and
add
mov
pop
cwtl
push
sub
lahf
aas
jg
imul
sub
cld
stc
repz
jmp
lods
data16
dec
shll
out
lahf
sbb
clc
pop
test
mov
jg
cld
stc
popa
mov
mov
mov
mov
aas
popf
mov
xor
mov
popl
es
js
rep
outsl
cmp
sub
leave
lahf
inc
cli
or
sub
mov
out
fwait
call
out
scas
mov
fcmovb
add
mov
cmp
in
jne
outsb
fidivrs
xchg
pop
shl
xor
mov
and
mov
insb
int3
add
clc
and
and
fwait
adc
pop
mov
jnp
imul
in
pop
mov
adc
jae
dec
inc
jmp
jo
fsubp
int
aaa
jo
movsl
nop
test
outsl
hlt
fidivrs
stos
adc
xchg
fcompl
cmpsb
xlat
int
aaa
outsl
mov
in
add
lahf
icebp
ret
dec
mov
xor
movsb
or
fcmove
cmp
out
out
jb
fwait
aaa
outsl
fimuls
mov
cli
repnz
sbb
clc
out
repz
or
in
sub
mov
movsl
pop
outsl
cmpb
stos
inc
int3
es
test
aaa
js
lahf
jns
ret
shlb
jns
push
inc
cmpb
push
out
int
aaa
outsl
outsl
xor
mov
pop
clc
ret
sarb
movsl
mov
out
dec
push
mov
outsl
fimuls
sub
push
cmp
adc
pop
aam
out
repz
fwait
cltd
jl
jne
push
jns
sbb
fidivrs
cs
dec
dec
call
imul
fwait
aaa
lcall
xchg
push
mov
dec
inc
mov
pop
xor
dec
inc
sub
aaa
outsl
fdivrp
mov
jno
sub
in
push
cmc
inc
jns
out
es
int3
jbe
push
sbb
outsl
fidivrs
dec
mov
in
or
adc
fwait
cmp
aas
mov
push
outsl
fidivrs
js
es
sbb
int3
cmp
lea
adc
outsl
stos
das
mov
cmp
jle
neg
lahf
aas
pop
stc
rcrl
into
lret
mov
fldenv
in
iret
repnz
pusha
mov
mov
jecxz
mov
out
mov
push
push
mov
mov
or
call
cmp
outsb
jle
xchg
aaa
dec
and
aas
nop
jns
int
aaa
outsl
push
inc
ret
add
xor
jns
out
sbb
mov
negl
shll
adc
fwait
aaa
outsl
fidivrs
jmp
fadds
lret
hlt
inc
jb
out
mov
adc
mov
imul
cmp
xchg
loop
int
aaa
outsl
nop
out
xchg
sti
or
sub
xor
es
inc
dec
mov
out
adc
jle
fwait
aaa
outsl
fisubrs
sbb
lret
mov
ja
int
loop
and
add
inc
hlt
xchg
fs
and
test
mov
mov
out
repnz
dec
lcall
fwait
aaa
je
or
ja
adc
push
and
mov
mov
jnp
clc
mov
mov
jbe
mov
push
fisubrs
test
leave
and
test
loope
inc
cmovae
mov
test
repnz
clc
repz
cld
stc
stos
cli
jle
xchg
inc
mov
insl
xor
lahf
aas
scas
movsb
dec
clc
xchg
sub
cld
stc
repz
sub
addr16
insb
pop
pop
mov
jl
fbld
aas
jg
shrl
mov
stc
repz
push
hlt
mov
jae
mov
adc
incb
fchs
fisttpll
fnstcw
je
subl
stc
repz
xor
xchg
in
imul
mov
cld
test
jb
sbb
ds
pop
pop
and
getsec
mov
dec
push
stc
push
lret
jg
cld
stc
cs
andl
movsb
mov
xor
xchg
hlt
int
out
lahf
aas
data16
pop
shrb
cld
stc
repz
leave
inc
cmp
ss
out
iret
lahf
aas
jg
mov
sbb
cli
fsubs
repnz
mov
das
mov
repz
aas
xlat
add
test
fdivrs
stc
pop
lret
mov
out
outsl
ror
setg
jg
stos
xchg
clc
mov
xchg
xchg
insb
push
stc
repz
in
es
jno
rorb
dec
aas
jg
cld
inc
in
in
pop
or
insl
push
movsb
xchg
mov
or
or
sub
outsl
out
mov
repz
mov
not
lcall
fstps
cmp
or
int
jg
xor
int
aaa
aaa
aas
inc
std
ss
test
inc
fidivrs
and
cmpb
cs
inc
js
push
int3
int
aaa
outsl
out
mov
outsl
test
add
adc
cltd
add
jnp
cmpsb
dec
inc
inc
xor
cli
stos
cmp
fwait
aaa
outsl
fisubrs
mov
push
movb
repz
push
in
fisttps
adc
mov
nop
pop
fsts
sub
mov
push
add
xchg
aaa
outsl
fiadds
jnp
jge
call
fidivl
cmp
hlt
cli
dec
fidivs
lahf
aas
popa
pop
push
push
mov
in
es
lahf
cld
hlt
jae
pop
pushf
xchg
sbb
aaa
outsl
fiadds
clc
es
sysenter
jns
aad
add
pushf
sbb
cmp
mov
adc
popa
push
fidivrs
stc
data16
push
insb
mov
repz
fwait
jnp
add
add
cmp
fildll
mov
ja
call
inc
xor
xor
aaa
pop
pop
shlb
js
stc
ja
jp
push
fidivrs
test
addb
or
mov
fwait
aaa
outsl
daa
lret
insl
lods
cmp
add
jp
out
int
adc
imul
fidivrs
lahf
adc
int3
xchg
mov
in
int
iret
add
mov
stos
or
fst
mov
ret
xor
mov
mov
adc
daa
adc
sbb
fwait
aaa
outsl
mov
dec
je
cmc
cmp
jns
out
mov
inc
or
inc
lock
outsl
fidivrs
insb
sbb
out
insb
sbb
jb
out
fwait
add
lahf
stos
mov
inc
lret
lahf
jg
jb
mov
push
mov
outsl
frstor
push
xor
add
test
lcall
and
incb
int
je,pn
pop
or
xchg
adc
adc
jns
cmpsb
fistpll
pop
pop
jecxz
iret
xor
cmp
fwait
aaa
outsl
fidivrs
stos
out
or
mov
movsb
popf
jns
int
sbb
sahf
jle
fdivl
fildl
test
lahf
fwait
and
cmp
repz
int3
call
lahf
jg
sub
sar
cmp
mov
stc
repz
leave
mov
jnp
push
movsl
pop
jns
repnz
in
lahf
aas
jg
xor
lret
xor
outsb
or
loopne
idivb
push
imul
daa
out
push
popa
cwtl
out
addr16
fidivrs
xchg
cs
adc
dec
and
inc
dec
int
aaa
outsl
mov
push
push
or
test
xchg
stc
repz
sbb
stc
test
inc
adc
fstpt
jg
cld
push
cwtl
xchg
jecxz
cmp
insb
push
sub
out
lahf
mov
dec
jb
jge
mov
add
cld
stc
sub
cltd
push
jns
out
fisttps
outsl
pop
aad
push
aaa
outsl
fidivrs
shrb
inc
dec
sub
or
repz
fwait
and
cmp
pop
sub
sti
mov
outsl
fidivrs
dec
lcall
push
sub
aaa
mov
sbb
lret
inc
addr16
sbb
jns
add
xlat
daa
shl
rorl
xchg
add
out
lock
out
out
lock
or
fidivrs
add
outsl
es
add
sub
int
aaa
outsl
hlt
out
rcr
jle
jl
incb
repz
cli
push
pushf
mov
fwait
push
cmp
fwait
aaa
outsl
ficoms
out
fnstcw
mov
xor
jns
out
sti
xchg
rol
pop
nop
push
adc
aaa
outsl
fidivrs
adc
pusha
ljmp
repz
fwait
dec
aas
and
cltd
mov
insb
ss
sbb
ret
mov
outsl
fidivrs
stos
xchg
or
faddl
int
aaa
insl
jmp
add
xor
int3
arpl
adc
in
cld
jle
dec
bnd
in
in
dec
dec
jl
out
xchg
sub
fs
fisubrs
iret
lahf
aas
jg
xor
rorl
mov
out
cld
stc
notl
add
push
gs
cmp
inc
pop
push
cmp
lcall
iret
lahf
cld
mov
dec
dec
adc
jbe
and
cld
stc
xor
inc
sbb
shll
cld
add
pop
out
stos
push
and
stc
pop
add
push
jmp
xchg
jnp
leave
push
andb
jns
mov
out
ljmp
and
lods
and
je
pop
cltd
fld
jae
aam
add
sti
cltd
and
lret
shlb
sub
lahf
aas
repnz
xor
xor
inc
cmpsb
cld
stc
repz
mov
popf
inc
dec
cmp
pop
shll
jg
in
cmpsb
or
into
mov
ja
mov
adc
jmp
mov
aaa
pop
sbb
rep
clc
jle
sbb
movsb
insl
pop
push
outsl
cmp
stc
repz
jnp
sbb
psubq
loopne
or
shl
adc
mov
rorl
loope
and
das
jno
repz
jno
mov
mov
jg
cld
adc
mov
sbb
push
push
enter
mov
lcall
xchg
cmp
jno
cwtl
pop
sub
lahf
aas
ljmp
xchg
pop
insl
cli
sbb
faddl
mov
enter
data16
mull
and
push
not
scas
daa
xor
cmp
std
jbe
pop
and
fadds
and
jns
fisubrl
adc
jbe
jle
cmp
jno
nop
int
aaa
outsl
sarb
push
jae
das
push
push
sbb
mov
mov
inc
jl
in
iret
mov
and
ljmp
or
adc
pop
jge
sti
lahf
aas
jg
mov
xchg
and
mov
jg
iret
jae
out
popf
push
sub
fwait
ja
lea
repnz
jae
loop
clc
mov
repz
lds
repz
mov
inc
pushf
int3
xchg
push
aaa
outsl
fidivrs
adc
push
lock
repz
fwait
dec
das
out
lods
xchg
jmp
dec
pop
outsl
fidivrs
lds
ret
int
xor
mov
int
aaa
pop
bound
jmp
inc
bound
mov
repz
sahf
mov
ret
mov
clc
movl
jo
in
jg
mov
inc
scas
lea
fbld
stos
inc
sbb
arpl
fidivrs
out
into
call
sbb
lret
ja
iret
mov
sarl
fisttps
sub
push
ja
arpl
outsb
mov
inc
test
out
fwait
inc
adc
push
rcrl
jl
mov
stc
aaa
testb
int
aaa
outsl
cmp
xor
mov
ja
aad
mov
push
pop
xchg
jge
push
and
in
mov
sub
test
fsubs
fwait
add
add
mov
in
int
xor
test
repnz
scas
out
pop
fldcw
fldt
mov
jmp
cmp
xor
jecxz
mov
aas
jg
cld
push
pop
jb
dec
aad
jno
shrl
in
sub
adc
adcb
imul
stc
stc
scas
jle
add
fidivrs
xlat
xchg
pop
jle
or
lds
stc
ret
xchg
aaa
mov
jns
cli
test
xor
cmp
aam
cld
pop
dec
inc
leave
test
fidivrl
out
xlat
and
mov
mull
xor
shrl
in
out
pop
add
outsl
fsubp
mov
pop
inc
aas
jns
leave
dec
jns
out
dec
mov
pop
push
mov
xorb
nop
or
loop
jmp
int
jae
in
out
fwait
or
sub
dec
je
jmp
ss
mov
into
mov
jecxz
fwait
aaa
outsl
xchg
in
and
mov
insl
loop
movsl
sub
sub
push
pop
inc
inc
adc
mov
mov
xlat
push
bound
cmp
stc
adc
out
fwait
push
stos
iret
or
ret
int3
outsl
fidivrs
lock
jns
loopne
dec
lcall
aaa
pop
adc
adc
cmpsl
std
fsubrp
iret
lahf
aas
jg
mov
in
xor
cld
stc
repz
fwait
or
pop
shr
das
and
lahf
aas
jg
mov
cmp
test
int3
inc
jbe
js
out
icebp
cmpsl
insl
sbb
inc
pop
mov
loop
out
and
notl
imul
and
popf
ret
or
imul
repz
mov
into
mov
push
enter
iret
lahf
aas
jg
inc
mov
pop
mov
cld
stc
repz
mov
ss
ljmp
push
lahf
aas
jg
jne
cmp
push
ret
add
js
mov
xchg
out
pop
xchg
adc
es
jnp
aaa
outsl
fidivrs
add
lsl
mov
in
repz
fwait
fs
xor
ds
jno
outsl
fidivrs
lret
and
sub
lcall
xlat
xlat
clc
pop
std
sti
aam
and
add
mov
outsb
fwait
aaa
outsl
ss
cmp
lods
imul
fstpt
out
jb
cltd
jg
xchg
push
inc
jno
xor
mov
sub
cmp
aaa
outsl
fisubs
mov
movsb
rorl
repz
out
aas
adc
cld
into
xchg
push
or
outsl
fidivrs
sbb
xchg
fcoml
jno
int
mov
aad
mov
fwait
loope
repz
mov
and
mov
aas
cmp
adcl
insb
out
mov
repz
in
enter
dec
jmp
or
lahf
aas
jg
rcrb
mov
repnz
std
repnz
xchg
scas
loopne
fcompl
loop
pop
popf
out
jb
xchg
push
out
fwait
aaa
xchg
adc
data16
and
std
cmp
mov
xchg
mov
sbb
mov
inc
ficoms
fwait
aaa
outsl
push
fs
mov
mov
or
mov
shrl
dec
xor
cwtl
mov
jns
fwait
aaa
outsl
fsubp
outsl
pop
add
cmp
jo
push
jns
out
inc
jbe
dec
movsb
mov
mov
stos
and
fdivrl
mov
xor
rorl
gs
push
test
sarl
xchg
pushf
into
pop
lds
lods
cs
jp
xor
lahf
aas
pushl
pop
repnz
mov
repnz
and
je
sbb
jp
repz
adc
test
mov
cld
stc
jae
les
sbb
jae
test
add
repz
jl
fidivrs
or
popa
clc
adc
inc
outsb
xor
ja
sub
cs
shll
aaa
sbb
lock
or
out
inc
jbe
jg
cld
pop
shlb
ja
add
push
in
iret
lahf
xor
fldt
push
insb
sbb
repz
test
pop
jns
out
lahf
jg
pop
adc
cmc
imul
repz
std
add
inc
or
inc
inc
gs
sbb
aas
and
sbb
and
lret
js
cld
stc
repz
cwtl
adc
add
int
lahf
aas
jg
and
push
xchg
mov
sub
js
stc
repz
sub
fldt
mov
outsl
sbb
aas
jg
cld
out
pushf
hlt
jne
sbb
mov
xchg
out
lods
xchg
sub
dec
es
cld
stc
repz
pop
addr16
int
sub
cmp
pop
iret
lahf
aas
jg
pop
mov
es
lahf
push
jae
pop
jge
out
lods
inc
lock
dec
mov
fdivrl
jne
nop
out
lahf
pop
frstor
out
ja
or
sub
mov
adc
cld
cld
std
cmp
dec
and
xor
jle
cld
stc
jae
cmp
inc
lods
xchg
mov
pop
inc
sahf
icebp
pop
inc
mov
sbb
lods
xchg
addb
push
mov
fnstcw
fistpl
cmpsl
cmp
dec
and
mov
xchg
mov
xchg
jl
inc
lea
sub
cld
stc
push
cmpsb
sub
mov
cmpsb
mov
es
and
xchg
lcall
xchg
scas
mov
jnp
add
cld
stc
push
loope
fmuls
mov
out
push
int
cld
popl
aas
jg
xor
jae
push
fiadds
xchg
xor
repz
push
enter
adc
mov
mov
fists
fwait
call
aam
pop
movb
jns
mov
pop
lds
stos
dec
push
xchg
aad
push
shrb
pop
sub
nop
jns
hlt
xchg
rcr
popf
mov
ljmp
aaa
ret
aam
nop
shl
call
inc
repz
fwait
aas
xchg
xor
imul
mov
arpl
push
fnsave
mov
dec
out
fwait
aaa
mov
leave
add
nop
push
ret
mov
les
stos
mov
add
outsl
and
cli
add
aaa
jmp
sarb
out
jno
xchg
cmc
mov
sub
outsl
fimuls
aam
lds
shrb
jae
out
cmp
popf
push
cmp
pop
inc
fucom
loope
mov
push
mov
pushf
lret
or
fwait
aaa
outsl
iret
mov
push
ret
sub
mov
mov
jns
out
fs
addr16
loopne
movsb
popf
aaa
dec
fisubrs
aaa
outsl
fisubrs
int3
pop
push
pop
sbb
lds
out
xor
aas
imul
lret
fidivrs
xor
ds
or
sbb
mov
pop
fidivrs
jne
mov
bound
test
outsl
fidivrs
gs
and
push
push
inc
aas
xor
in
test
out
push
lahf
jg
jns
jne
roll
xchg
hlt
nop
dec
push
dec
mov
in
iret
jge
sbb
clc
out
movsb
mov
out
sbbb
mov
xchg
sahf
iret
mov
push
xchg
popf
out
fwait
aaa
sub
ljmp
adc
fidivrs
sbb
or
test
fistl
ja
dec
outsb
push
jo
jmp
xchg
int
mov
jnp
mov
fmull
xchg
fidivrs
add
cmp
iret
mov
cld
repz
lock
lods
clc
arpl
fcoml
stc
stc
arpl
push
out
out
shll
mov
fidivrs
jl
lods
loope
sub
stc
mov
fwait
aaa
mov
insl
or
mov
pusha
aas
cmp
pusha
pop
fbstp
push
imul
add
cmp
das
and
mov
das
and
xchg
push
fistpll
fistpl
sub
divb
stc
repz
xor
cwtl
pop
test
jbe
jg
cld
xor
jno
and
mov
stos
out
addr16
lahf
xchg
mov
popf
loop
or
xchg
push
xor
cld
stc
ret
cli
mov
jg
sub
loope
test
out
lahf
aas
xchg
mov
shrb
std
cld
cld
stc
xrelease
data16
int
dec
xor
ficoms
dec
xchg
ljmp
pop
and
inc
inc
xchg
cmp
xchg
int
int
pop
jno
lods
pop
movsl
fisubl
int
sub
addl
inc
ljmp
jl
push
lea
in
bound
fwait
aaa
inc
dec
adc
add
lds
repnz
push
adcl
int3
mov
pushl
jno
push
adc
adc
lret
outsl
fiadds
scas
pop
adc
sub
enter
int
loop
xchg
fists
jno
aaa
outsl
test
jno
insb
sub
and
aas
call
adc
push
inc
ja
repz
ljmp
dec
sub
leave
aaa
aaa
outsl
fidivrs
cmp
mov
jo
cmp
out
fwait
rcrb
mov
jg
sub
out
jo
outsl
fidivrs
mov
mov
and
dec
lds
fwait
aaa
inc
or
mov
and
jns
icebp
or
stos
push
sub
ljmp
mov
adc
rcll
repz
out
fwait
mov
lcall
dec
inc
callw
mov
sub
and
fwait
lahf
ja
arpl
int
aaa
jne
adc
lahf
aad
sbb
inc
stos
enter
cld
push
xchg
cld
stc
xrelease
adcb
jge
aas
jg
leave
inc
mov
mov
pop
adc
shrl
out
clc
mov
mov
inc
sbb
out
mov
add
mov
and
jle
jle
pop
push
jmp
pop
add
xchg
fwait
aaa
outsl
fsubs
inc
and
fwait
lahf
aas
jg
jmp
inc
incb
popa
mov
stc
cld
jecxz
pushf
sub
cwtl
das
pop
out
fs
repz
aas
push
mov
mov
sahf
in
jg
cld
stc
lods
lods
xchg
ret
mov
add
out
lahf
aas
iret
or
cmp
scas
mov
repz
adc
repnz
cmp
cld
xor
in
mov
daa
sub
imul
ret
pop
and
stos
inc
jbe
and
das
mov
inc
scas
in
add
xor
xchg
jmp
std
push
pop
dec
outsb
fimuls
add
pop
or
hlt
cld
stc
repz
pop
lcall
clc
mov
xchg
aas
jg
adc
repnz
xchg
lds
mov
icebp
add
mov
xchg
mov
mov
movsb
adc
test
mov
mov
repz
cs
ficoml
outsb
add
jg
mov
popf
fdivrs
jg
cld
xchg
push
inc
mov
test
mov
lahf
loop
xor
out
push
inc
and
add
jmp
aad
ss
cmp
testb
out
sbb
repz
std
sbbl
roll
lahf
dec
repz
pop
pop
pop
ds
das
pop
daa
cltd
fs
jp
stc
xrelease
aaa
pusha
jno
mov
jne
popf
mov
push
lahf
aas
jg
sub
lret
fs
xor
stc
repz
in
xchg
ja
pushf
cmp
xor
inc
cld
outsb
test
aad
xorb
ficoms
popa
and
mov
fsubs
mov
fwait
stos
mov
inc
xor
stc
add
js
and
int
aaa
mov
cmp
sub
imul
das
fs
mov
xchg
pushf
mov
je
int
mov
pop
stos
cmc
rcrl
add
popf
imul
loopne
mov
repz
jne
movsb
js
cmpsb
sub
push
or
inc
jle
cld
test
xlat
lods
repnz
cmp
out
mov
adc
test
rolb
out
lahf
aas
and
dec
rcrl
stc
out
into
pop
push
sbb
stc
repz
pop
sub
fsts
lret
pushf
fwait
fidivrs
sub
add
int
aaa
outsl
ror
cmpsb
data16
lds
divl
fs
xor
aaa
fcmovne
inc
mov
mov
mov
sub
aas
icebp
aad
jbe
pop
int
aaa
outsl
push
jge
orl
rcr
mov
inc
mov
fmull
dec
add
push
cmpsb
sbb
jg
xorl
pop
or
inc
push
jg
cld
jns
cwtl
xchg
push
enter
jae
xchg
fildl
aas
inc
fucomi
inc
hlt
xor
loop
fs
scas
stc
cld
stc
repz
mov
mov
or
cmp
ja
and
xchg
test
shr
xchg
push
xor
aaa
xor
fidivrs
adc
ret
outsl
mov
addr16
insl
js
fidivl
jmp
jno
dec
fistpll
repz
push
mov
es
adc
in
loope
ds
mov
xor
fnsave
xchg
mov
lods
repz
fwait
lahf
aad
lock
jmp
dec
outsl
fidivrs
push
lret
adc
out
fwait
aaa
dec
fwait
addr16
jecxz
call
fidivrs
add
pop
int
sar
into
lret
test
xor
lea
cmp
cmp
int
andb
jbe
xor
jns
out
sbb
sbb
adc
mov
cltd
fwait
aaa
outsl
fimuls
sarl
push
add
cli
fidivl
jns
out
and
adc
adc
outsl
fidivrs
mov
add
jecxz
loope
iret
fwait
adc
dec
mull
testl
pop
sbb
mov
mov
mov
cmpsb
addr16
pop
sbb
iret
adcb
xchg
stc
testl
jns
out
dec
pop
mov
lret
std
bnd
sub
addr16
sbb
ret
mov
add
jns
out
push
xchg
mov
or
fstpt
fidivrs
ds
faddl
cmp
push
fstps
repz
and
idivl
sub
stc
stc
sub
into
adc
into
paddb
mul
test
aas
call
repz
mov
push
add
push
and
pop
sahf
nop
push
in
cmpb
cli
enter
sbb
movsb
adc
inc
andl
mov
loope
push
aaa
int
aaa
out
pop
and
pushf
inc
rcrb
inc
cmp
out
bsf
andl
push
mov
jg
pop
push
test
mov
pop
cmp
mov
inc
mov
and
aaa
outsl
fidivrs
inc
xchg
lahf
stos
and
cld
fadd
adc
jl
mov
mov
or
mov
repz
pop
adc
jns
jle
jnp
xchg
mov
fcmove
loope
inc
mov
lods
loopne
test
inc
inc
or
cmpsl
push
pop
mov
jg
adc
mov
mov
je
testl
fwait
aaa
outsl
fiadds
ret
jecxz
jecxz
out
xchg
jle
xchg
fildl
jns
out
arpl
push
call
in
in
daa
push
sub
test
add
rolb
sbb
imul
jo
outsl
fidivrs
jne
jp
cmp
repz
fwait
sub
cwtl
sbb
enter
mov
or
cld
mov
rcr
add
jb
sbb
fwait
aaa
outsl
bound
cmp
pop
pop
fsubrs
sub
sbb
xchg
or
mov
into
int3
out
push
pop
call
adc
sbb
loopne
cmc
add
into
fidivrs
outsb
pop
cmp
rorl
jle
xor
aaa
outsl
dec
push
and
and
jg
cld
loope
push
fistps
cltd
pop
imul
icebp
mov
mov
jne
jmp
inc
loop
adc
inc
jge
jns
mov
jle
push
stos
jge
xchg
lahf
aas
decl
not
rcr
out
push
outsb
pushf
pusha
in
iret
xchg
lahf
popa
add
js
out
aas
adcl
shl
rcrl
repz
xchg
mov
mov
scas
movsb
mov
shlb
jle
cmc
add
ds
xlat
ss
jns
out
and
icebp
jno
test
insl
push
scas
pop
aaa
outsl
fidivrs
or
sub
mov
fwait
xchg
scas
jp
push
mov
push
je
outsl
fidivrs
out
dec
fnstenv
aaa
xor
cmp
fwait
aaa
mov
mov
mov
lods
jle
push
sub
rol
fwait
aaa
outsl
fisubrs
jae
add
test
add
pop
pop
cmp
popf
pop
das
mov
push
push
xor
mov
outsl
fidivrs
ja
pop
jge
adc
inc
sbb
stc
movl
dec
sub
add
scas
loop
lahf
aas
jg
insb
mov
pop
cmp
out
aam
leave
stc
repz
mov
insb
jbe
in
inc
inc
inc
ret
cld
out
popa
mov
test
sbb
pusha
scas
repz
lahf
push
mov
push
xor
popf
cld
mov
stc
mov
es
cmp
add
iret
lahf
aas
jl
push
adc
jecxz
xor
pop
sbb
stc
repz
mov
push
adc
jl
leave
iret
mov
iret
je
adcl
mov
add
jg
inc
sti
into
pop
push
mov
rcl
cmpsl
push
outsl
mull
aad
mov
mov
mov
lret
outsl
fidivrs
or
into
or
test
mov
enter
repz
incl
mov
mov
test
outsl
fidivrs
std
jmp
mov
pop
xlat
repz
sub
fwait
xchg
jbe
das
fiadds
movsb
call
popf
xchg
fnstsw
xchg
not
mov
aaa
outsl
test
fildl
loopne
jl
pop
rcrb
outsl
fiadds
mov
daa
scas
mov
popf
adc
int
aaa
ja
pop
and
sub
or
stc
mov
sbb
mov
cmp
add
push
nop
sub
out
adc
out
fwait
aaa
adc
lods
xor
xchg
cmp
repz
and
in
jecxz
ja
dec
jns
cli
nop
out
call
xchg
daa
aaa
outsl
fidivrs
jne
outsl
imul
jno
int
iret
addb
stos
mov
inc
inc
mov
in
out
or
ret
shr
xchg
aas
jg
cld
fwait
lret
test
sub
jp
sbb
pop
mov
xchg
aas
hlt
enter
leave
movsl
sbb
call
xchg
aam
adc
cmp
and
adc
mov
ljmp
push
pushf
adc
in
int
aaa
outsl
loope
outsl
arpl
pop
jo,pt
mov
sbb
hlt
xchg
adc
aaa
outsl
fidivrs
add
mov
xor
cs
xchg
out
fwait
into
mull
pop
xchg
fdivl
mov
fwait
pop
dec
jle
or
or
data16
out
fwait
aaa
mov
mov
data16
fidivrs
cli
add
sbb
sbb
mov
insb
sbb
cmp
pop
ret
repz
jecxz
call
jae
int3
js
sbb
xchg
inc
addl
iret
stc
repz
push
cmp
insb
adc
mov
dec
cld
push
test
sub
jp
ret
int
mov
mov
mov
lea
or
jo
mov
shr
int
xchg
push
sub
push
cli
fwait
in
int
adc
push
in
cld
idivl
cmpb
or
push
int3
int3
les
or
mov
sti
mov
btc
lds
cmp
fidivrs
scas
mov
shrl
rclb
insb
cmpsl
cmc
divb
seta
lret
cld
stc
repz
clc
lock
dec
inc
add
mov
push
andl
inc
mov
aas
jg
push
negl
sbb
in
mov
clc
and
lahf
loop
inc
dec
xor
lods
mov
addl
adc
xlat
lret
vpsllq
iret
lock
lods
inc
sbb
cmp
jmp
cld
push
xor
cmp
push
adc
movsl
sti
mov
stos
outsb
xchg
lahf
sub
and
fwait
aaa
out
lahf
push
das
pop
add
push
xchg
ljmp
adc
sti
jp
scas
ljmp
cld
test
outsl
or
scas
dec
adc
repz
and
fwait
out
aam
aam
or
flds
test
leave
out
mov
mov
sub
inc
jle
hlt
call
mov
andl
out
mov
mov
sbb
inc
cmp
mov
leave
push
sbb
jmp
cmp
in
mov
ret
nop
nop
cld
stc
repz
popa
insl
sub
nop
adcb
mov
iret
lahf
aas
jg
cs
jl
push
add
inc
fisttpl
repnz
jp
lods
in
inc
xor
pop
adc
movsb
xchg
sti
rorb
loopne
stos
push
push
sbb
jns
cmp
fcoml
jge
cltd
outsl
jns
mov
je
stc
pop
int
stos
daa
jecxz
cmp
in
xlat
jg
aas
jg
mov
pop
aas
pop
pop
xor
orb
or
iret
cltd
jns
out
and
fst
xchg
sub
pushf
inc
imul
mov
add
test
repz
fwait
out
test
or
aaa
mov
lret
outsl
fidivrs
and
add
repnz
fsub
and
aaa
jecxz
jne
ja
in
pop
inc
fldl
mov
dec
jno
mov
shrb
inc
outsl
fidivrs
or
xlat
pop
adc
or
dec
rcrl
xchg
adc
mov
xchg
iret
outsb
cmp
fwait
inc
pop
mov
inc
dec
out
in
out
mov
int
repnz
dec
insb
test
fpatan
daa
sub
xchg
mov
fldl
cltd
test
aam
std
lods
loop
cmpsl
test
int
aaa
out
out
in
in
arpl
mov
pop
jo
adc
insb
or
std
loope
stc
hlt
mov
jecxz
fwait
aaa
outsl
fisubs
imul
push
sahf
jmp
repz
sbb
push
or
sub
xor
into
loope
jbe
xchg
cld
stc
push
pop
push
fs
hlt
lahf
xchg
mov
adc
lahf
aas
jg
inc
sbb
add
pop
xor
out
enter
rcrl
xchg
das
cld
stc
repz
stc
pushf
mov
ss
mov
pop
or
fcmovbe
cld
stc
repz
add
push
xor
or
pop
lods
dec
lahf
aas
jg
pop
in
out
cmpsl
fdivrs
bswap
out
mov
xchg
rcll
or
scas
stc
repz
or
out
addr16
xchg
ljmp
inc
fwait
data16
dec
out
xbegin
repz
lahf
insb
mov
xchg
adc
jg
cld
stc
or
repnz
sbb
aam
out
lahf
aas
and
cmp
cld
stc
repz
ljmp
stc
inc
pop
dec
adc
aas
jg
fadd
mov
mov
pop
mov
stc
repz
mov
cmpsl
push
addr16
outsl
mov
shl
xchg
push
pop
adc
int
or
ss
xchg
jae
mov
jg
sbb
mov
mov
cltd
out
lahf
aas
frstor
pop
pop
shrb
xchg
cmp
stc
repz
insl
dec
cltd
jb
outsl
xchg
iret
scas
iret
pusha
iret
lahf
aas
jg
fistps
js
rclb
jmp
stc
stc
enter
outsb
nop
sub
jns
mov
shrb
adc
fdivrl
xchg
mov
add
enter
out
scas
mov
mov
pop
call
mov
stc
repz
lea
insb
fcomi
pop
xor
mov
cmp
int
xchg
jns
mov
push
cmpsl
pop
inc
dec
sub
pushf
fwait
cmp
pop
fnstcw
cmp
mov
dec
cld
test
filds
mov
push
mov
xchg
rcll
jns
out
mov
fstpt
or
filds
addl
mov
sub
mov
push
sub
cmp
sbb
jg
fs
adc
jl
cmpsl
sbb
incl
sbb
out
jno
repz
leave
outsb
inc
sub
xchg
fs
jecxz
cld
je
dec
aam
pop
xor
jae
imul
pusha
inc
push
xchg
cltd
fcomps
stc
add
sub
aas
je
adc
out
lahf
aas
out
and
cmpsl
or
gs
repz
clc
inc
or
scas
int
test
mov
mov
mov
fwait
nop
in
sahf
mov
pop
popl
mov
scas
sarl
fistps
xchg
mov
cmpsl
mov
js
leave
outsl
push
stc
repz
mov
and
jp
lock
jg
cld
dec
jp
and
and
ret
loop
sub
out
lahf
mov
dec
adc
pop
rorb
stc
mov
pop
jne
lret
or
jmp
sub
lahf
aas
cwtl
mov
cmpsb
in
sbb
push
ss
cmpsb
xorb
mov
arpl
xlat
aam
ja
jl
cli
enter
popf
lods
cmp
cwtl
mov
bound
mov
mov
mov
fwait
aaa
add
pusha
lret
fisubl
loop
ret
sbb
jge
push
out
lahf
jg
add
loop
inc
pop
xchg
popf
fldcw
jg
cmpl
iret
test
push
dec
movl
sbb
mov
neg
mov
es
push
sbb
pop
outsl
ficoms
insb
push
mov
jg
outsb
rol
inc
jo
aaa
addb
sub
shrl
mov
repz
rolb
in
dec
cmp
ficoms
xchg
std
push
pusha
outsb
push
pushf
push
mov
test
out
fwait
add
test
into
out
repz
cmp
cmp
adc
dec
fidivrs
or
into
nop
repz
cmp
xchg
cmp
cltd
das
sbb
aas
int3
shrl
jmp
ret
insl
jnp
mov
adcl
mov
stc
repz
pop
gs
pop
cwtl
cmpsl
out
das
daa
dec
or
dec
add
popa
imul
repz
incl
data16
dec
fwait
in
test
jg
cld
dec
pusha
ficomps
loope
push
jp
in
add
ljmp
push
aam
mov
out
mov
aam
lret
gs
lahf
jg
inc
scas
aas
mov
nop
pushf
std
das
cmp
cmc
xchg
jne
jo
pop
sbb
jle
stos
jno
pop
sbb
lods
out
stc
rcll
sbb
cld
add
mov
sbb
std
xchg
leave
shr
popa
call
iret
lahf
push
adc
scas
sbb
mov
xchg
jg
cld
stc
push
inc
push
pop
lahf
mov
pop
cmp
out
lahf
aas
stos
adc
cs
xlat
pop
dec
adc
pop
or
enter
lds
mov
sbb
push
mov
dec
mov
scas
add
out
mov
mov
fwait
pushl
jns
adc
sbb
inc
outsl
fimuls
sbb
ret
enter
ss
lahf
push
xchg
js
xchg
cmp
out
fwait
jecxz
cmp
nop
out
mov
jmp
pop
cmp
inc
dec
pop
cmpsb
jl
xchg
bound
cld
stc
repz
jns
and
jle
push
push
cmpb
lahf
aas
jg
les
das
fwait
and
jo
cld
stc
repz
or
cmp
movsb
ljmp
lahf
aas
jg
sbb
jno
add
sbb
sub
iret
in
mov
ficoml
inc
mov
mov
lock
pop
int
aaa
outsl
mov
push
in
xchg
shrb
ljmp
clc
int
xor
fdiv
scas
lock
jne
jne
aas
int
mov
fildll
rclb
movsl
fstpt
cld
cltd
ss
jns
push
in
pop
in
mov
fists
mov
ja
sbb
jae
xchg
or
sub
lahf
ds
js
out
xchg
xchg
sbb
leave
out
mov
jbe
out
pop
add
loopne
sti
pop
mov
lods
push
cld
sbb
cli
cmp
push
fidivrl
mov
sub
mov
pushl
mov
int
sub
and
pop
lock
aaa
cmp
xchg
enter
push
loopne
fbstp
inc
fidivrs
adc
mov
mov
stc
repz
cmpsl
out
and
adc
insw
mov
cmpsb
dec
fs
imul
out
lahf
xchg
cmc
jnp
idivl
mov
scas
jle
cld
stc
pop
je
insb
inc
pop
inc
xchg
lcall
movd
punpckhdq
daa
scas
rcrl
xchg
call
add
lret
adc
mov
addr16
xor
movsb
insb
fidivrs
cs
cmp
cmp
adc
mov
push
popf
out
push
sbb
repz
add
adc
jmp
adc
adc
mov
loopne
mov
and
mov
fists
jmp
and
and
outsl
ficoms
clc
dec
scas
xchg
enter
clc
aas
sbb
int
aaa
aam
inc
pusha
sahf
gs
in
lahf
fidivrs
xchg
and
js
lret
fldl
aaa
outsl
leave
in
push
cwtl
rcrb
mov
mov
js
dec
xchg
pop
pushf
ljmp
sbb
push
jg
imul
pop
push
in
mov
mov
inc
push
outsl
fidivrs
inc
lret
movsl
push
lea
out
fwait
aaa
pop
lea
in
mov
lcall
and
inc
cwtl
sub
xlat
fwait
inc
xchg
cli
sub
fwait
aaa
outsl
and
shlb
sbb
outsl
and
inc
jl
sub
out
inc
jbe
out
pop
push
cmc
arpl
or
or
sbb
cmc
xor
or
pop
out
insl
cmp
sub
aas
sub
scas
ret
aas
je
out
lahf
jg
ss
test
xchg
test
jl
sbb
dec
aam
sbb
xor
repnz
and
hlt
ret
pop
xchg
or
std
jg
cld
stc
mov
dec
xchg
mov
sub
lahf
aas
aas
jno
leave
pcmpeqb
jge
lods
in
cld
stc
repz
or
pop
popf
stc
mov
adc
iret
lahf
aas
jg
xlat
test
jecxz
mov
stc
repz
push
fisttpll
clc
dec
cmc
insb
add
lahf
aas
jg
nop
mov
add
jb
cmp
loope
ja
inc
mov
push
mov
lahf
aas
pop
stc
pop
push
stc
mov
xor
sub
stc
repz
cmp
aas
xchg
lahf
sbb
std
aam
stos
jmp
cld
xchg
jl
aam
xorb
mov
mov
arpl
daa
cltd
mov
shrl
std
add
movsb
fwait
js
out
pop
mov
inc
mov
in
outsl
mov
sbb
push
ja
mov
fdivp
cli
fcom
push
mov
and
lahf
fistpll
out
jle
mov
dec
pop
add
xchg
outsl
fidivrs
xchg
mov
fsubl
xchg
addb
out
fwait
jo
es
fmull
cmp
outsb
outsl
fidivrs
mov
ja
shlb
inc
arpl
int
aaa
cmp
xor
or
mov
add
pop
repnz
and
inc
rcll
lods
in
mov
stos
push
out
clc
dec
add
fbstp
cli
inc
lods
mov
aad
sbb
sbb
mov
push
ja
repz
fwait
neg
pop
push
fs
xchg
fcomps
call
fs
les
loopne
cmp
or
mov
js,pn
push
mov
aaa
pusha
xchg
fstp
cmp
fstpt
popa
mov
jns
mov
cmp
repnz
test
aaa
outsl
stos
out
mov
jg
popa
fidivrs
out
cmp
clc
insl
ss
xlat
mov
fiadds
push
clc
fisubrs
and
dec
out
fwait
aaa
aad
test
pop
xchg
popf
xchg
mov
push
and
imul
adc
and
orps
cld
inc
getsec
adc
mov
mov
and
or
repnz
fidivrs
sub
ret
aad
sbb
clc
mov
loop
dec
mov
clc
repz
lods
mov
mov
mov
sti
inc
lods
sbb
and
aas
cmpsb
das
cmc
mov
lahf
fwait
pusha
imul
fisubl
sub
adc
adcl
dec
xchg
insb
push
out
fwait
aaa
fdivs
call
mov
jns
outsl
and
lret
loope
or
aaa
outsl
mov
mov
pop
repz
pop
jecxz
push
pop
test
dec
add
jns
mov
xor
jb
lret
ret
loop
ficoms
faddp
rcrb
int3
mov
lcall
stos
insb
sahf
shlb
sub
enter
iret
inc
addl
loop
iret
lahf
aas
incl
inc
cltd
mov
into
fadd
jns
out
repz
xchg
adc
jg
rcrb
frstor
jl
mov
or
xchg
xorb
cmpsb
scas
stc
repz
mov
jecxz
mov
push
push
cld
cld
das
push
das
cmpsb
and
mov
scas
xor
xchg
ret
jmp
adc
repz
movb
lahf
aas
ljmp
test
sub
into
mov
outsl
push
add
push
xchg
dec
rorb
stos
xchg
jnp
repz
pop
lret
mov
arpl
ret
mov
rol
add
stos
loop
test
outsl
ficoms
scas
mov
pop
xchg
bound
or
int
aaa
dec
orl
lods
shrl
int
add
movsl
mov
push
inc
dec
mov
mov
aaa
cwtl
add
aaa
mov
popf
and
adc
sbb
adc
push
mov
mov
ja
xchg
ja
dec
or
pop
jns
out
fwait
aaa
pop
mov
sar
testl
nop
xchg
mov
repz
lahf
sahf
ficoml
cli
ficomps
test
stos
inc
adc
sub
scas
shrb
xchg
jg
daa
insl
cmp
aaa
fists
mov
fs
and
dec
pop
mov
mov
outsl
stos
push
mov
jl
in
aam
enter
adc
jg
mov
ljmp
cld
sti
mov
stc
jg
cmp
insb
pusha
insb
cmp
xor
iret
lahf
aas
adc
dec
add
adc
stc
repz
push
pop
xor
mov
fiadds
inc
out
pusha
orb
jg
outsl
or
repz
cmp
dec
xor
outsl
sub
sub
outsb
fidivrs
dec
sub
sahf
rcrb
popl
aas
push
add
lods
repz
cmp
push
or
sub
mov
sub
dec
outsl
fidivrs
xchg
cmp
hlt
inc
add
xor
aaa
fwait
xor
jge
fpatan
xor
jge
out
fwait
inc
xor
inc
cmp
cmp
cmp
pop
fnstcw
mov
popa
into
cmp
or
stc
repz
inc
xlat
xchg
jae
inc
and
jns
or
jbe
xor
mov
mov
lods
enter
arpl
cmpsl
adcl
aaa
cmp
and
mull
and
mov
test
mov
mov
out
shrb
cmp
add
int
aaa
rcrb
jmp
mov
hlt
loop
pop
nop
aaa
hlt
stos
and
and
decl
mov
pop
in
inc
aaa
and
rcll
xchg
lock
cmp
inc
sar
mov
repnz
mov
push
insb
add
sub
imul
cli
mov
cmp
lods
mulb
test
dec
out
aam
push
jns
jg
rcrb
repz
je
and
cmp
or
mov
cmp
outsl
or
test
cmc
fistpll
mov
xor
dec
popl
jg
sbb
fsubrl
loope
repz
aas
aaa
and
ret
int3
add
sti
xor
xor
scas
in
mov
aaa
adc
stos
mov
in
mov
sub
sub
test
xchg
sub
mov
iret
xor
leave
or
int
repz
fwait
pop
adc
rorb
push
cmpl
sbb
lahf
aas
jg
mull
es
mov
cmp
out
pop
push
add
andl
lahf
jl
icebp
dec
xchg
imul
mov
jg
cld
xchg
insb
or
sbb
lahf
xlat
test
xchg
ss
mov
les
aam
xchg
lahf
aas
jg
aaa
sbb
fldl
repz
shlb
scas
sub
imul
rcrl
inc
cld
jne
popf
adc
clc
data16
mov
and
stos
adc
ret
ja
xchg
fsubrl
fwait
aaa
outsl
or
sub
or
daa
call
dec
out
cmc
enter
fiaddl
stc
fidivrs
inc
enter
adc
frstor
lds
aaa
outsl
mov
aam
std
dec
sarb
out
outsl
fmul
xor
test
mov
aaa
outsl
fidivrs
int3
lea
mov
repz
fwait
jae
cmp
mov
in
cmpsl
cmp
ds
cld
or
fdivl
pop
jnp
outsb
xchg
int
ja
cmp
xchg
outsl
mov
add
xchg
stos
xor
cs
leave
cmp
ss
repz
mov
insl
inc
and
fidivs
adc
sti
add
loop
aas
jg
cld
scas
adc
lcall
sarl
mov
fsubl
mov
aaa
inc
out
mov
sub
daa
cmp
insb
xchg
bound
or
adc
outsb
mov
push
imul
push
push
mov
mov
inc
sbb
and
outsl
jp
fisttps
aaa
in
sahf
cld
stc
repz
and
push
sbb
fildl
add
and
jg
leave
subl
jnp
flds
pop
pop
cld
mov
add
sub
jmp
push
pop
aad
aad
das
mov
repz
data16
and
sbb
or
in
aas
jg
cld
mov
mov
jae
cmpsb
jecxz
insl
jmp
out
lahf
cltd
pop
pop
dec
sub
cmpsl
adc
outsl
fiadds
mov
out
jecxz
sbb
enter
pop
mov
jl
dec
testb
cld
icebp
cmp
js
sbb
leave
lahf
aas
jg
mov
mov
xor
in
cli
add
iret
sbb
mov
in
aaa
adc
nop
addr16
jmp
and
jns
out
inc
and
out
cmp
outsl
fidivrs
jae
xorl
or
mov
out
fwait
aam
popa
aas
mov
daa
roll
outsl
fidivrs
cmpsb
lods
and
xor
aaa
leave
lea
add
das
das
cmp
repz
ljmp
add
xchg
adc
fdivrl
xchg
lahf
push
sub
mov
add
ljmp
aaa
outsl
mov
daa
push
sbb
stc
stc
add
pop
pop
addr16
pop
dec
inc
cmp
adc
sub
xchg
sub
mov
xlat
mov
fwait
addb
es
into
sbb
aam
xchg
sbb
push
ja
cmpsb
ret
enter
outsl
popl
enter
ja
insb
push
mov
fidivrs
dec
xchg
imul
shll
sahf
lock
or
bound
mov
stos
inc
push
iret
scas
outsb
fidivrl
leave
mov
aaa
outsl
fiadds
jns
sub
sub
ds
push
push
insl
cmpsl
or
stc
repz
pop
cmp
sub
scas
imul
out
lcall
int
lods
enter
frstor
fmuls
push
xor
pop
push
add
or
into
in
int
aaa
out
movsl
sbb
cwtl
push
lahf
lahf
xchg
xchg
sbb
lret
insb
adc
sub
orl
daa
outsl
subl
aas
jg
lock
addr16
sub
fs
loope
pop
xchg
repz
lahf
pushf
push
sub
fwait
in
nop
imul
lods
sub
inc
xchg
hlt
sarl
and
in
pop
cltd
notb
dec
ficomps
stos
cmc
jae
imul
icebp
std
mov
push
fnstcw
jmp
movsl
or
adc
sub
jmp
jnp
enter
sbb
out
sub
hlt
mov
lahf
aas
jg
rcr
out
jle
jbe
and
inc
mov
shl
fwait
ja
lahf
push
nop
fwait
fwait
pop
mov
rcrb
repz
jno
outsl
push
cmp
mov
and
push
test
aaa
outsl
sub
add
idivl
cmpsl
ret
sub
aaa
outsl
fimuls
push
daa
mov
or
jns
out
dec
xor
pop
lea
inc
push
inc
aaa
outsl
fidivrs
and
pop
adc
gs
adc
fwait
push
pop
fsts
inc
imul
mov
pop
add
jno
loopne
idiv
dec
sahf
pop
xor
clc
inc
cmp
fistpl
jg
in
js
les
pop
push
je
jp
iret
lahf
aas
test
je
imul
mov
mov
call
push
addr16
nop
dec
mov
xchg
fwait
aaa
lahf
jo
lock
rol
jns
fnsave
mov
push
pop
cmp
add
pop
rcll
push
faddp
and
push
repz
fadds
jno
cli
xchg
ljmp
aaa
outsl
subb
xchg
daa
mov
out
fcompl
mov
pop
add
cmpsb
stos
in
xchg
mov
aaa
outsl
repnz
lahf
cli
mov
jbe
add
cmc
enter
dec
sub
mov
or
mov
mov
int3
aaa
notl
inc
dec
inc
add
loopne
fwait
aaa
outsl
in
enter
repnz
sbb
mov
fdiv
push
call
xchg
das
outsb
push
int3
pop
fnstcw
adc
sbb
stos
js
or
fwait
ja
inc
divl
push
or
lea
xchg
adc
mov
jnp
jns
out
das
sahf
fistl
jmp
mov
cmp
sub
stc
repz
scas
add
lret
dec
pop
insb
rcll
lcall
in
ja
test
test
iret
insb
mov
repz
mov
xrelease
cld
push
xor
lahf
dec
and
add
xchg
lahf
test
xchg
aas
fidivrs
mov
popl
icebp
popl
std
repz
repz
jg
mov
inc
mov
out
fwait
aaa
jb
fdivp
loop
mov
xor
repz
aam
push
loopne
xchg
outsb
shrl
fwait
aaa
outsl
mov
add
mov
jns
out
or
inc
or
mov
sarb
aaa
outsl
fidivrs
aad
rcrb
pop
testl
int
fwait
cli
popa
scas
out
nop
and
push
aaa
and
outsl
fidivrs
or
ja
mov
shlb
out
fwait
aaa
push
inc
cld
loope,pn
push
cs
sahf
mov
daa
cwtl
mov
jg
add
fiadds
xor
cmp
lret
xchg
mov
jns
out
lods
cmpsb
jmp
sub
inc
mov
pop
and
dec
cld
lods
bound
mov
aaa
outsl
ficoms
jb
push
test
stos
lret
scas
je
aaa
out
aam
cs
outsl
pop
jle
sub
pop
arpl
and
addr16
mov
bswap
fwait
aaa
outsl
aad
out
xor
jae,pt
lret
repz
mov
int3
test
dec
lret
fwait
aaa
outsl
fisubs
mov
dec
sbb
mov
out
in
mov
rorb
sbb
icebp
ja
xorb
fidivrs
dec
pop
and
pop
push
addr16
inc
push
loopne
fwait
push
mov
gs
push
dec
fidivrs
jp
js
rol
mov
adc
xchg
fwait
aaa
outsl
xor
shr
leave
jns
push
ljmp
or
dec
sub
jge
arpl
popf
cld
punpckhbw
nop
int
ja
cmpsl
aam
jns
xor
cmp
es
in
jns
push
icebp
leave
in
sub
push
repz
fwait
jmp
push
add
inc
pushf
mov
clc
out
out
xchg
mov
mov
xchg
fcompl
push
mov
stos
fs
daa
jbe
aas
aas
xor
fwait
aaa
outsl
and
jnp
push
pop
adc
push
and
mov
out
push
cmp
cmp
loop
ret
jmp
insb
fidivrs
lahf
and
hlt
scas
scas
cmpsb
out
sbb
or
sbb
jnp
or
xor
xor
cld
sti
mov
mov
sub
lcall
iret
lahf
xchg
add
out
add
mov
adc
inc
cld
stc
pop
dec
sbb
rorl
push
sub
fdivrs
shll
ret
jns
mov
cmpsl
mov
icebp
out
outsb
fdivrl
jmp
cli
lock
stc
pop
xchg
push
jg
jg
cld
sbb
das
gs
cmp
cmp
lahf
insb
adc
mov
loopne
loopne
xor
inc
jl
js
cltd
loopne
xor
xor
repz
fwait
mov
jmp
adc
in
decb
cmp
jns
sarl
fists
pop
pop
xor
sti
shll
aaa
out
pop
xor
sbb
jo
jg
push
aas
jg
cld
stc
dec
add
sbb
fwait
cli
cmp
mov
and
cld
jb
mov
je
pop
jnp
cmp
cld
stc
js
cmp
dec
daa
faddl
sbb
aas
adc
ret
cmpsl
and
cld
stc
repz
iret
jecxz
hlt
xchg
pop
and
sbb
fwait
pop
xor
dec
mov
jnp
popa
xor
aam
sub
mov
mov
or
out
push
inc
or
or
inc
mov
addb
or
mov
jb
mov
cmc
push
adcb
add
ficoml
cmpsl
push
jle
sub
stos
test
test
imul
sbb
add
into
sub
decb
fadds
sbb
push
lds
add
inc
insb
adc
es
hlt
test
adc
insl
and
or
sub
and
ss
andl
mov
inc
mov
std
or
sub
jno
mov
mov
rorb
inc
sarb
aaa
mov
loop
adc
xor
rcrb
xor
je
mov
addr16
repnz
inc
push
mov
and
add
rorb
push
jne
mov
and
xor
sub
adc
dec
add
je
adc
sub
loop
lret
inc
inc
test
inc
cmp
push
add
sbb
subl
cltd
push
dec
push
ret
mov
mov
push
sub
stos
loope
das
push
lret
mov
test
push
mov
mov
xchg
ret
subl
xchg
clc
fisubl
out
into
mov
andl
and
add
add
lcall
je
call
orb
insb
sub
int3
aas
xchg
cli
or
pop
push
aas
adc
repnz
and
add
mov
adc
and
xor
cli
add
cmpsl
mov
cmp
mov
lock
in
test
sti
movb
jnp
mov
add
ret
jb
push
pop
push
shrl
mov
push
cmp
sub
das
push
or
add
xor
add
cmpsl
mov
addl
and
ret
adc
pushf
push
and
lea
push
into
add
sbb
mov
sbb
adc
push
push
mov
and
mov
fildll
adc
mov
mov
push
push
or
lock
daa
adc
inc
aam
adc
push
loop
adc
inc
sarl
dec
cmpsb
sbbb
ds
std
adc
clc
sbb
lock
jbe
push
inc
pop
cwtl
cmp
fstpl
push
nop
mov
ret
add
lea
dec
mov
scas
test
xor
add
insl
sub
sbb
scas
or
pop
add
jecxz
pandn
mov
jge
imul
lods
mov
adc
mov
jae
scas
cmp
in
fdivrs
mov
bound
mov
jae
sbb
adc
push
inc
aaa
jecxz
push
js
or
xchg
sbb
mov
imul
sbb
mov
and
insb
jne
loope
pop
xacquire
jbe
adc
idivb
push
into
cwtl
sub
sub
fidivrl
sbb
adc
pop
adc
shrl
in
add
popa
repnz
dec
testb
lret
imulb
call
cmp
cmp
mov
shll
repnz
push
inc
push
inc
xor
mov
cmpsb
out
sbb
push
or
ljmp
inc
mov
sub
mov
movb
stos
aam
fidivl
or
mov
lods
outsl
test
into
push
cmp
subl
outsb
dec
cli
add
jb
test
add
imul
adc
mov
push
xor
and
pop
adc
xor
jbe
loop
lds
push
push
or
imul
xor
xchg
shrl
aad
mov
mov
cmp
push
pushf
jae
adc
mov
pop
loop
mov
icebp
adc
jmp
mov
fcomip
mov
movsl
xchg
ret
jne
aam
xor
add
icebp
or
testb
ret
mov
cmp
jno
mov
loop
adc
imul
push
shll
sub
pop
cmp
sbb
fs
mov
push
and
cmc
sub
push
adc
jae
cmp
outsb
aaa
or
orb
xchg
jl
lret
jge
inc
andb
add
bsr
mov
push
push
addr16
pop
stc
pushf
roll
add
in
jns
push
mov
mov
sbb
and
or
pop
xchg
lea
add
adc
mov
les
mov
push
add
push
outsl
shrl
in
sub
mov
jp
pop
stos
push
andb
mov
push
adc
fdivrp
or
andl
adc
cmp
inc
movb
and
sbb
cmp
and
out
mov
add
fs
sbb
dec
insb
cwtl
test
outsb
and
ror
dec
data16
psubusw
popa
fmuls
pushf
adc
rcll
push
lret
dec
int3
pop
and
or
rcll
bswap
xor
loope
mov
sub
sbbl
repz
sub
cmp
or
push
les
dec
push
mov
adc
nop
insl
add
pop
dec
sbb
mov
shlb
sub
mov
jnp
call
mov
in
rolb
inc
cmp
lods
inc
push
into
jnp
xor
dec
test
or
in
adc
push
adc
push
fisubrl
lock
mov
mov
pop
orl
sbb
lock
pop
cmp
adc
mov
and
mov
or
xor
add
decb
sub
or
loope
jno
adc
scas
mov
fsubp
decb
xor
sbb
mov
movl
jne
push
aas
or
jne
adc
sbb
int3
repnz
fisubrs
mov
mov
aas
add
push
sbb
insl
pextrw
mov
add
test
ret
test
pop
xor
add
or
jmp
stos
or
mov
adc
test
adc
scas
mov
push
out
xor
adc
test
cmp
or
or
loopne
leave
aad
or
lock
pop
test
je
inc
adc
or
jmp
mov
or
sbb
mov
loopne
xchg
or
jne
mov
xor
mov
lods
mov
adc
lds
sbb
xor
popf
sub
push
sub
les
cltd
and
fs
imul
xor
dec
loope
pop
push
xchg
sbb
jmp
or
pop
xor
test
rcrl
adc
or
ret
insl
push
fnstenv
test
adc
syscall
sbb
call
push
pop
adc
out
cmp
and
and
sahf
cs
adc
aas
lea
xchg
mov
lods
xchg
dec
les
sub
xor
mov
dec
sub
mov
sbb
inc
orl
mov
fldl
adc
lahf
mov
mov
pop
daa
pop
and
rcll
popf
push
add
lcall
lret
jne
inc
les
push
push
scas
and
pop
fmull
sub
jle
push
add
jo
inc
inc
inc
stos
add
push
pop
inc
and
cli
mov
lock
add
dec
pop
shl
les
and
pop
add
xor
bound
pop
arpl
mov
outsb
and
lea
inc
xchg
mov
sti
push
sahf
or
pop
dec
and
rcrb
sub
mov
negl
push
mov
sbb
xchg
es
lods
fcoml
and
and
insb
popa
sbbb
cmp
mov
imul
add
add
insb
out
xchg
arpl
lock
aam
xchg
popa
mov
pop
mov
sub
push
test
inc
or
cmp
xor
sbb
sub
sbb
or
outsb
lret
sarl
stos
clc
or
ret
inc
pop
call
inc
jo
inc
rclb
sbb
addb
sbb
outsl
ret
mov
in
out
sbb
lret
lcall
and
icebp
rclb
es
pop
mov
aas
lds
std
jo
popa
or
cmc
or
call
add
add
adc
sub
mov
lock
movsb
and
adc
xchg
ret
decl
xchg
adc
stos
dec
lret
adc
and
adc
jb
push
xor
and
cmp
inc
addr16
add
xor
stos
sbbb
into
inc
push
push
inc
fisttpl
inc
inc
push
int
enter
or
ds
add
xor
add
mov
pop
cmp
fcomps
xlat
adc
xorb
mov
add
or
sub
jp
sub
fwait
lcall
adc
or
jae
pop
neg
adc
or
mov
push
dec
mov
push
aad
ror
fdivs
in
test
xchg
fstpt
jp
cmc
ret
adc
test
aad
xor
in
in
mov
or
mov
sahf
or
js
test
hlt
pop
xor
push
in
inc
movsb
add
xor
add
popf
mov
rcll
sbb
xor
adc
push
mov
adc
fmul
push
inc
adc
add
fstpl
or
das
or
cmp
or
mov
cmpsl
add
call
inc
push
sub
and
cs
mov
push
loopne
stos
roll
jnp
and
cltd
rolb
pusha
stos
or
loope
add
roll
adc
popf
ret
ljmp
mov
mov
cmpsl
out
push
ret
add
aad
inc
pop
dec
ja
cmp
fimuls
mov
jle
out
clc
pop
inc
rcrb
shlb
insl
cmpsb
dec
xor
inc
sbb
add
xlat
in
add
inc
loopne
push
adc
icebp
inc
inc
xchg
mov
pushf
scas
dec
jge
mov
mov
pop
sub
sub
jbe
jno
inc
push
in
pop
mov
gs
mov
mov
inc
stos
jge
fmuls
inc
adc
sbb
mov
popa
mov
push
adc
cmc
popf
test
xchg
loope
push
sub
lcall
clc
cmp
xlat
hlt
or
outsl
adc
rcrl
inc
adc
dec
push
mov
xlat
scas
addl
cmp
sub
shrb
xchg
leave
bound
push
nop
sub
repz
pop
lods
cmpsl
jb
shrb
ljmp
cmp
dec
inc
imul
mov
adc
push
sub
popf
pusha
push
mov
add
dec
xchg
test
int3
rolb
push
jmp
decl
push
push
push
gs
push
nop
and
or
pushf
and
mov
xor
or
pop
sbb
out
xchg
pop
mov
cltd
adc
push
sub
rcrb
das
push
sbb
mov
or
push
into
jmp
orb
or
int
loope
test
fistpl
mov
arpl
lock
sarb
pop
dec
test
add
outsb
pop
add
sbb
sub
hlt
dec
xchg
icebp
int3
pop
scas
or
push
clc
incb
inc
or
aas
cmpsl
stos
mov
pop
inc
push
add
push
shrb
fwait
push
ds
cwtl
push
movsb
jg
xchg
dec
inc
jge
dec
out
mov
xorb
pop
cmp
sbb
pushf
test
cwtl
fs
add
mov
rcl
arpl
or
sbb
aad
add
dec
lock
push
mov
sub
outsb
dec
jns
inc
add
sub
cmp
cmpsl
adc
sbb
rclb
pop
lock
sub
add
push
push
hlt
sbb
test
xor
add
test
adc
ds
adc
jp
ja
mov
std
push
inc
push
adc
mov
repnz
shlb
inc
push
xchg
mov
jp
mov
mov
stc
or
or
mov
adc
mov
add
mov
pop
pop
lahf
pop
adc
decl
add
sub
inc
sbbl
in
push
add
jae
xchg
in
loopne
insb
push
jo
and
in
loopne
arpl
inc
rolb
adc
push
mov
adc
ficompl
add
mulb
aas
cmp
and
inc
ret
fidivrl
jge
orb
rep
or
inc
fistpl
clc
in
shl
dec
add
sub
inc
mov
jno
xor
and
enter
mov
cmp
lret
mov
scas
xor
xchg
push
rcrl
inc
or
ficoml
imul
sub
pop
pop
push
xor
pop
sqrtps
add
addb
sarb
mov
sbb
bts
icebp
roll
lea
sarl
sub
data16
inc
xor
push
js
sub
out
aad
or
jnp
rcrl
sbb
mov
jmp
aaa
cmp
or
push
leave
mov
jg
and
lods
in
inc
mov
scas
sub
push
cmc
mov
or
stos
dec
adc
sti
imul
sub
test
dec
shrb
mov
jo
adc
pop
mov
rolb
in
jno
pushf
or
lock
rorb
dec
loopne
fwait
roll
push
adc
push
clc
ljmp
jge
sbb
or
adc
mov
scas
push
js
fisubrl
pushf
js,pt
in
nop
stc
mov
pop
mov
add
icebp
add
in
adc
cwtl
push
rclb
out
push
adc
and
or
adc
push
mov
cld
js
push
xchg
pop
mov
push
shrl
sbb
stos
mov
call
stc
mov
mov
outsb
jl
push
je
clc
andb
adcb
es
add
jp
xchg
push
adc
movsl
cmp
pop
push
sbb
test
push
cmp
fsubs
and
add
stos
rcrb
push
xor
pop
mov
rolb
sub
out
rclb
into
test
add
js
or
xadd
sbb
or
and
sti
jbe
sbb
rcll
push
push
std
push
or
enter
push
fs
sub
insl
add
mov
shll
mov
mov
pop
xor
mov
pop
adc
add
jnp
xlat
adc
sbb
jg
push
andb
test
adc
mov
push
call
pop
sub
push
fidivl
mov
mov
push
inc
icebp
out
push
les
adc
cmp
adc
sub
inc
inc
xor
gs
movsb
rclb
push
inc
mov
or
ret
lds
inc
pop
add
sbb
or
or
shr
push
loope
call
push
xchg
cmp
sbb
ret
out
sbb
add
scas
or
imul
and
jnp
xor
nop
jns
xor
jecxz
xchg
mov
xchg
mov
jb
les
pop
cmp
or
and
push
add
xchg
and
scas
rolb
mov
mov
mov
lds
push
pusha
ret
ljmp
sbb
add
es
pushf
pop
call
mov
push
enter
cmc
andb
pop
or
add
in
or
fisttps
cltd
push
push
xchg
or
jno
mov
jns
or
push
or
lret
or
inc
and
jno
mov
sbb
in
rcrl
inc
sbb
sub
add
rol
cmpb
faddl
add
inc
stos
pop
daa
pop
sub
sub
adc
adc
rcll
add
dec
push
jecxz
mov
rorl
add
call
sbb
or
and
test
jmp
adc
ret
lds
push
cwtl
ljmp
inc
mov
add
jecxz
or
scas
pop
icebp
mov
inc
xor
call
dec
xchg
push
idivb
push
inc
jnp
jno
xchg
roll
and
clc
call
dec
shlb
fiaddl
inc
in
fsubr
sbb
or
inc
inc
and
jl
push
popf
jae
pusha
rolb
data16
outsl
fcmovne
sub
inc
out
add
xor
pop
inc
sbbl
cs
sbb
mov
cmpsb
pop
mov
ljmp
cltd
fsts
mov
adc
xchg
add
rcll
add
or
test
adc
adc
adc
aam
or
inc
lods
mov
mov
nop
xor
leave
inc
je
or
roll
pop
rcl
xor
xchg
pushf
ljmp
int3
push
pop
push
mov
sahf
xor
push
cmp
jb
sub
jl
push
mov
fs
inc
add
mov
test
mov
jbe
jb
mov
pop
ret
in
lods
test
or
or
xchg
inc
push
push
aam
add
mov
adc
add
xor
adcl
icebp
xchg
repnz
mov
nop
cmp
inc
out
mov
inc
js
clc
mov
jo
cmp
adc
cmp
lds
mov
xorb
mov
cmp
mov
leave
arpl
addl
into
adc
jne
sbb
cwtl
cmp
dec
cmpsb
test
lds
mov
ret
push
stos
daa
lret
push
mov
push
test
cmpl
test
xchg
mov
ficoml
push
sahf
dec
push
shlb
int
xchg
loop
aaa
sub
ret
dec
test
sti
repnz
mov
ret
or
push
inc
adc
and
roll
or
or
ret
dec
lods
mov
mov
add
and
test
lock
fcmovnu
mov
push
aam
adc
mov
push
adc
push
leave
lret
lds
in
or
popf
xchg
mov
rcl
pop
clc
ss
or
or
out
inc
adc
adc
or
add
roll
cmp
addr16
jp
aam
fiaddl
imull
add
data16
popa
push
insb
pop
rcll
pop
mov
sbb
loope
lds
jae
add
lock
push
cmp
subl
stos
mov
sarb
adc
push
add
jmp
shlb
lods
xor
jbe
push
mov
sarb
pop
fisubrl
into
push
mov
push
xchg
pop
sbb
ljmp
in
ret
in
sbb
mov
icebp
jo
and
insb
inc
push
xor
or
pop
xchg
aaa
mov
inc
push
adc
popa
shlb
stc
xchg
ffree
sub
subb
mov
pop
xor
push
shlb
and
push
sub
sub
sub
sub
mov
push
aam
or
loope
and
bound
xor
loopne
subb
cmp
lret
pop
adc
push
nop
sub
or
xchg
mov
sbb
cs
in
ret
or
enter
sbb
cmp
jns
cmp
dec
pop
inc
adc
idivl
mov
shrb
loopne
pop
popa
lock
nop
inc
jg
mov
inc
ljmp
fmull
pop
mov
or
cmp
cmp
xchg
or
jmp
mov
push
ret
subb
fildll
inc
cmp
cmp
test
push
fmul
flds
cwtl
ret
insb
adc
pop
repz
roll
xor
pop
or
sbb
stos
mov
cmpb
out
push
or
sbb
pop
rcrb
xlat
xlat
lsl
lahf
mov
subb
or
inc
mov
cmp
dec
and
push
push
sbb
rcrl
xchg
cmp
fimuls
jno
js
mov
adc
adc
ja
xorl
inc
rorb
jg
mov
incb
adc
scas
cmp
or
fcoms
aaa
jg
insl
lds
sbb
push
test
push
aas
stos
sti
je
orb
dec
loopne
or
sarl
add
mov
in
inc
push
adc
cmp
or
add
mov
enter
int
in
and
inc
push
cs
test
jo
add
inc
or
movsl
pop
inc
test
lods
ds
rorl
inc
shlb
push
jge
jmp
add
or
mov
push
sbb
addr16
sub
insl
adc
hlt
test
or
ds
add
xor
mov
sbb
add
push
add
popf
and
lcall
push
cmp
inc
sbb
cmp
cmp
xor
cmpsl
push
das
test
aas
outsl
pop
or
call
sbbl
adc
notb
sbb
xor
dec
pop
jno
sub
mov
sbb
movsl
xchg
push
stos
sti
clc
or
lds
lcall
test
sub
pop
push
les
sbb
ret
sub
inc
sub
sti
adc
or
inc
movsb
xorb
push
inc
mov
sub
push
add
push
lea
pusha
mov
and
add
test
inc
in
jns
xchg
sbb
test
loope
call
xor
xchg
loopne
and
add
fs
imul
push
outsl
pop
push
insl
fdivl
imul
xor
xchg
sub
mov
push
adc
rorb
sub
xor
mov
pop
xor
sbb
or
or
dec
push
rolb
lea
clc
jno
enter
mov
cltd
ljmp
push
sub
cli
pop
cmp
movb
sub
add
xor
mov
stos
or
sbb
adc
inc
mov
inc
xor
addr16
call
les
sbb
int
and
cltd
pop
dec
popa
adc
sub
push
fcmove
inc
rcr
sub
sbb
es
in
lcall
enter
sbbb
or
mov
out
cld
adc
loopne
inc
add
push
pop
movsl
and
les
sti
inc
aam
adcl
out
add
or
sbb
jge
or
stc
add
repnz
xchg
clc
test
and
push
push
push
push
fsubs
mov
sub
mov
add
cmovge
rclb
dec
cmp
sbb
cld
call
test
xor
adcb
xor
add
in
pop
stos
jno
stc
psllq
pop
test
sbb
jo
inc
cli
sbb
pop
lretw
sbb
adc
mov
push
test
ret
add
push
in
cmpsl
and
adc
leave
sub
sub
insb
shlb
movsb
ss
cmp
fdivr
adc
rolb
divb
call
aas
push
add
icebp
adc
jge
inc
adcl
pop
cmpsb
or
or
and
sbb
adc
sub
orl
add
jbe
mov
dec
rclb
xor
adc
stos
cmp
sub
dec
sbb
mov
mov
cmpsb
loop
add
adc
pusha
ret
or
jp
mov
cmc
add
cmp
xor
js
imul
push
push
xor
add
sub
inc
jle
xchg
or
push
sar
adc
mov
es
or
daa
into
sub
addb
sbb
lds
cmp
xchg
or
dec
jae
or
inc
jo
xor
and
add
imul
pusha
and
and
dec
into
in
je
push
in
sub
ret
and
or
into
cmp
adc
sbb
sarl
pop
inc
pop
test
sbb
sbb
loope
adc
add
lea
push
pop
push
sub
ja
dec
or
pop
sbb
je
rcrl
add
xchg
sub
ret
mov
lret
hlt
sbb
dec
jle
rorl
cmp
aad
clc
push
xor
aaa
adc
loopne
insl
cmc
add
and
rol
push
sbb
mov
mov
jp
mov
or
call
sbb
ret
dec
inc
roll
or
push
shr
out
jecxz
mov
adc
es
sbb
sbb
lds
mov
adc
mov
stos
pop
push
push
sub
xchg
hlt
jne
add
add
imul
bound
mov
mov
push
mulb
or
fisubrs
sbb
test
aad
mov
dec
and
inc
cltd
cmp
cmp
addr16
pop
cmp
push
pushf
bound
jecxz
das
sub
pcmpgtb
cmp
inc
out
inc
lods
ret
mov
and
sub
jbe
sbb
inc
xor
fistl
pop
shlb
loope
cmp
and
stc
or
scas
xor
dec
jb
aad
addl
mov
jp
nop
ds
and
mov
popf
lret
and
icebp
add
push
sub
xor
cmp
sti
sbb
xchg
push
cmpl
les
xchg
cltd
mov
fistpll
stos
hlt
ja
mov
pop
xchg
adc
and
test
test
adc
jae
push
xor
loop
mov
inc
fldl
push
mov
mov
cli
or
sbb
scas
cmp
stos
push
mov
add
push
pop
mov
sub
rorl
shll
sbbb
in
repz
icebp
or
sbb
cmp
add
pop
add
push
adc
aas
push
adc
ret
and
cmp
jbe
inc
pop
push
dec
adcb
add
sub
iret
jne
inc
es
enter
and
add
dec
jle
int3
sbb
inc
xor
rcl
cmp
lea
and
data16
cmc
frstor
push
fldenv
in
lock
push
fisubs
outsl
lods
jo
lret
inc
jl
sub
adc
lock
pop
inc
adc
into
sti
cwtl
adc
cli
shlb
enter
pop
sahf
xchg
mov
cmpsl
push
cwtl
sbb
jge
pop
aam
pop
add
pusha
rolb
xorl
cmp
aaa
stos
rcll
xorb
push
push
sub
push
xor
sub
insl
and
mov
std
add
sbb
jb
adc
stos
dec
cltd
sbb
adc
mov
fcmovb
cli
dec
mov
cmp
ljmp
data16
mov
lock
dec
shlb
ljmp
lock
pop
mov
push
sbb
movsb
inc
and
sbb
and
push
mov
popf
mov
xor
dec
and
add
shrb
mov
cmp
pop
push
adc
jo
insl
lods
xor
cmp
scas
rcll
das
fsub
add
in
cmpsb
mov
jmp
xchg
inc
sbb
sbb
aam
outsb
jo
outsb
or
push
add
push
daa
push
mov
mov
sbb
shrl
xchg
scas
pop
cmp
push
adc
cmc
or
loop
pop
xor
leave
jno
fs
test
shl
xor
leave
shrd
and
stos
shlb
and
mov
inc
xchg
adcl
aaa
adc
daa
loopne
in
adc
fs
adc
push
mov
or
mov
cmp
mov
or
aam
shrb
lahf
adc
pop
inc
mov
cs
jge
and
cmpsb
lock
mov
ror
shrb
inc
jp
cmc
xor
dec
adc
sub
adc
into
stos
test
inc
fistpl
jmp
or
leave
das
sbb
inc
mov
aad
push
adc
push
xchg
mov
pushf
mov
xor
lods
cmp
xchg
stos
push
adc
lret
and
dec
add
leave
rol
pop
movsl
aas
roll
dec
adc
adc
outsb
les
mov
movsb
mov
aad
dec
roll
inc
mov
sub
bound
cmp
push
cli
pop
xchg
icebp
dec
xor
push
cltd
inc
ret
leave
stos
fiaddl
and
add
add
shrl
mov
lret
shlb
clc
outsb
mulb
outsb
ret
or
addr16
add
mov
jp
adc
daa
outsl
push
push
and
arpl
sub
sbb
rcl
jae
test
push
add
mov
sbb
push
xchg
mov
mov
popa
push
mov
fldl
xor
jae
addr16
aaa
sub
lock
and
mov
icebp
or
inc
call
and
adc
adc
sbb
mov
mov
xchg
pop
jb
adc
cmp
adc
gs
mov
xor
dec
jno
enter
clc
ret
adc
pop
lea
pop
xchg
das
imul
push
pop
or
mov
enter
cwtl
fiaddl
mov
jp
and
hlt
nop
sub
dec
xor
sbb
add
xchg
sbb
test
sub
rorb
sub
andb
pop
rolb
pusha
and
shrl
xor
mov
add
push
test
cld
sbb
add
sub
or
mov
rorl
ja
das
xchg
inc
dec
fisttpl
jnp
mov
push
adc
leave
rolb
cmp
insb
scas
ret
adc
cmpsb
repnz
pop
inc
daa
and
jg
xor
and
and
jb
jp
add
pop
pop
add
adc
push
sbb
lods
into
add
loopne
dec
xchg
in
pushf
mov
pop
addr16
fisttpl
ds
inc
rcll
sahf
push
add
jbe
pop
mov
test
add
sbb
hlt
dec
jne
xadd
dec
add
outsb
adc
aam
mov
pop
cmpsl
mov
inc
sbb
push
sub
popf
ret
mov
jo
and
dec
scas
rcrl
xchg
xorb
sub
inc
cmp
insb
popf
ljmp
test
scas
push
push
ljmp
mov
call
adc
aam
jo
shll
adc
pop
test
sub
pop
daa
adc
mov
inc
cli
add
rcll
mov
mov
cmp
sbbb
dec
lret
lock
jg
movsl
add
loopne
sub
cmp
pusha
movsl
or
add
adc
aad
jne
push
dec
scas
loope
shrb
cli
push
xchg
ljmp
and
xrelease
popa
icebp
daa
lret
bound
incl
lods
cmp
mov
add
fwait
pop
insl
enter
loope
add
test
loop
pop
or
mov
js
push
and
pop
mov
inc
sbb
push
push
push
pop
dec
in
cmp
inc
inc
add
enter
xchg
push
push
mov
xchg
fwait
test
mov
jecxz
inc
test
cwtl
jne
push
imul
rolb
rcll
pop
sbb
sbb
push
cmp
adc
push
ret
inc
pop
cmc
ret
orl
out
mov
nop
out
xor
aam
dec
sub
rclb
add
int3
loopne
sbb
leave
arpl
xor
mov
mov
dec
cmp
inc
or
mulb
aad
lret
imul
mov
test
adc
arpl
rcrb
scas
pop
ror
ss
mov
sub
pop
mov
pop
or
dec
loope
mov
add
mov
imulb
mov
lds
idiv
sbb
and
lcall
sbb
scas
sub
cmp
or
adc
jo
les
push
fcomi
jl
stos
adc
sbb
sbb
adc
jb
mov
adc
mov
dec
inc
movsb
dec
push
out
sysexit
inc
jmp
loopne
inc
mov
sbb
or
leave
sbb
lea
pop
adc
pop
xchg
sbb
pop
mov
hlt
mov
xchg
ljmp
lds
jo,pt
shl
bound
js
rolb
xor
add
sbb
adc
mov
xchg
sub
or
loope
dec
inc
pop
add
push
aam
pop
add
into
cmp
jne
mov
cmp
push
sub
je
lock
add
and
cltd
cmp
sbb
or
call
and
add
push
push
mov
fmul
jo
hlt
aam
popl
fsub
bnd
push
jae
mov
cmp
popa
jp
mov
add
mov
sbb
rcl
sub
add
lds
and
sub
movl
dec
mov
xor
jo
in
jmp
adc
inc
xor
rcrl
das
and
sub
push
shlb
mov
cmp
lcall
dec
and
addb
cmp
test
outsb
adc
adcb
pop
mov
push
sub
mov
pop
xor
inc
sbb
inc
add
cmpl
rcrl
push
and
sbb
adc
pop
dec
push
repnz
gs
mov
and
mov
rcll
inc
mov
addl
and
jb
aaa
cmpsl
mov
inc
ja
inc
sub
sbb
sbb
es
xchg
mov
jl
xchg
mov
mov
add
add
shrb
xor
orl
mov
cmpl
xor
xchg
adc
sub
shr
in
rorb
xor
sbb
push
xchg
fnstenv
ffreep
ret
ljmp
aam
push
rclb
andb
xchg
add
je
or
mov
and
cmp
xlat
sbb
inc
cmp
add
inc
adc
pop
stos
sbb
push
ljmp
loop
sbb
dec
lock
test
adc
adc
ret
ds
inc
dec
sub
ret
adcl
xlat
scas
imul
out
add
cmp
dec
fnstenv
inc
orl
roll
lret
jae
movsb
push
add
lea
icebp
aad
scas
stos
or
jo
mov
adc
xchg
mov
stos
add
stos
lods
mov
shll
jl
add
adc
loop
inc
pop
push
cmp
popa
loopne
adc
cmpsb
pop
pop
inc
mov
aaa
lea
pop
add
es
pop
xchg
mov
push
in
stc
mov
cmp
sub
add
and
and
pushf
add
test
push
into
pop
or
ret
int
push
pop
add
or
in
mov
add
mov
shrb
mov
mov
mov
adc
and
push
fdivl
int
mov
gs
push
loope
aam
in
roll
sbb
pop
sub
mov
sub
or
out
das
out
not
and
daa
sub
mov
cmc
mov
lahf
push
cmp
adc
mov
xchg
sub
in
mov
mov
or
ljmp
adcl
push
in
xchg
je
dec
sbb
dec
push
cmp
push
loop
pop
shll
rorb
cmp
ret
push
cmpsb
sarl
lds
pushf
add
stc
gs
cmp
mov
xor
push
icebp
jmp
lock
sbb
adc
sub
lcall
mov
or
icebp
pop
sbb
add
sub
lret
aas
push
or
ss
sub
mov
sbb
nop
lods
mov
jo
or
into
xchg
or
mov
sub
loop
cmpsl
add
jb
push
pop
mov
sub
adc
inc
and
sub
add
pushf
imul
lret
fsubrs
dec
mov
loop
jg
push
jb
xchg
mov
int3
idivb
mov
orl
xor
sub
jbe
test
adc
sub
mov
add
pusha
push
xor
sbb
test
sub
inc
adc
pop
adc
add
aas
jo
and
and
or
mov
shll
add
lods
fcmovu
add
sbb
mov
sar
jp
and
xor
jns
mov
inc
add
sub
and
sbb
dec
push
xor
add
sub
cmpl
sbb
call
push
push
mov
pop
in
xorb
adc
mov
mov
shll
ds
fwait
test
xchg
ljmp
add
enter
push
inc
pop
mov
aad
add
jo
dec
int
cmpl
mov
push
cmpsb
sbb
stos
mov
mov
jno
in
jp
xor
ret
call
mov
aaa
lods
sbb
shrb
stos
mov
andb
inc
pop
enter
sti
push
mov
pop
xchg
push
add
xlat
add
pop
mov
sub
and
out
mov
dec
mov
mov
pop
cmp
mov
shrb
push
xchg
in
iret
xchg
mov
adc
cmp
jbe
or
insb
in
add
es
mov
inc
icebp
inc
adc
jne
stos
pop
stos
xchg
test
dec
sbb
mov
xchg
jmp
mov
or
in
add
les
sbb
and
mov
inc
sbb
ljmp
sbb
inc
icebp
and
loopne
or
push
testb
shl
ret
test
sbb
dec
in
jb
push
mov
push
xchg
test
mov
push
pop
and
sbb
push
cmp
data16
mov
or
jp
mov
adc
xor
ror
int
jg
sub
roll
sbb
adc
mov
push
mov
xchg
xor
adc
push
fistl
imul
sbb
inc
push
dec
adc
pop
cmpsl
into
ja
and
add
cmp
fwait
adc
imul
or
cmp
add
mov
daa
sub
js
test
push
call
loopne
sub
or
inc
xor
inc
test
or
int
rorb
shll
test
pushf
sub
mov
sub
ds
cmp
inc
loopne
cmp
sbb
sbb
add
adc
add
rolb
jl
shl
inc
nop
xchg
sbbb
lods
mov
adc
call
add
pop
enter
add
sub
dec
shll
adc
cmc
pop
xor
push
aam
cmpsl
nop
cmp
inc
sbb
adc
inc
orb
jb
sub
dec
mov
je
mov
push
sbb
add
test
jb
inc
xor
adc
pop
ficoms
push
dec
cmp
je
ret
bound
lods
inc
es
stos
je
adc
icebp
push
add
test
in
insb
daa
sbb
adc
leave
push
movsl
jb
xor
cmp
rorb
sub
rol
out
or
sbb
loope
push
out
adc
jno
icebp
scas
xchg
test
mov
sub
xchg
dec
fisttpl
add
cmp
cmp
fadds
popf
or
aad
and
jbe
insb
xchg
sub
roll
lods
popf
lcall
add
sub
sbb
push
add
and
add
rcll
mov
sbbl
xor
inc
sbb
enter
shrl
int3
sub
and
in
pop
or
cmpsb
test
pop
push
punpckhbw
push
ljmp
jo
roll
sti
rcr
cmpsb
mov
inc
push
mov
dec
xchg
rolb
lret
push
inc
sarl
add
imulb
lock
jne
mov
fs
inc
inc
insl
popf
push
clc
je
test
xor
adc
dec
loopne
push
adc
cmp
or
and
dec
push
out
inc
testl
jae
sub
cmp
adc
mov
xor
fistps
push
add
cmp
pop
push
sbb
adc
sti
nop
outsb
and
int3
shrb
std
stos
mov
rcrb
adc
pop
leave
pop
pop
cli
repnz
push
mov
fcomps
dec
mov
lahf
mov
xor
mov
sub
xchg
xor
bound
jle
jbe
adc
push
stos
pop
lock
sbb
rol
arpl
sbb
dec
add
pop
dec
out
and
push
scas
jae
push
adc
mov
test
bswap
dec
push
test
ljmp
stc
adc
inc
mov
mov
push
or
push
inc
cltd
add
adc
cmpsl
mov
mov
sbb
xlat
or
xchg
icebp
cmpsb
push
or
shrl
push
add
inc
push
xchg
test
push
mov
cmp
jnp
in
dec
aam
cmpl
inc
jle
add
les
pushf
push
mov
adcl
shlb
xorl
xchg
sbb
push
xchg
jbe
xor
and
dec
call
je
adc
lds
add
loopne
out
sbb
leave
out
add
dec
jecxz
ret
rol
addl
pop
push
add
lcall
shlb
jno
aad
mov
xchg
adc
cmp
shl
or
push
movsl
repz
fcmovb
add
push
fildll
dec
insl
jge
pop
lret
add
arpl
dec
call
jmp
movb
push
shll
inc
cmc
mov
imulb
or
add
xor
test
mov
adc
xor
into
xchg
mov
jno
inc
or
push
add
into
or
xchg
stos
rcrb
mov
shrb
adc
add
jb
ljmp
test
sbb
sbb
add
pop
mov
mov
in
movsl
cltd
cmp
gs
daa
mov
jb
shl
ret
sub
sti
pop
sbb
adc
xor
rorb
mov
mov
sbb
mov
movsl
sub
mov
or
adc
js
adc
or
xchg
add
add
ret
sbb
mov
divb
jbe
xor
push
push
push
addb
push
dec
shrb
roll
sbb
sbb
jne
mov
bound
sub
fwait
push
lock
sbb
inc
inc
inc
add
data16
add
adc
jo
push
add
roll
cs
aad
test
add
pop
adc
rcrb
add
xchg
adc
test
or
or
adc
pcmpgtw
xor
adc
test
repnz
xchg
sub
call
add
sbb
aam
add
orb
lcall
cmp
pop
pusha
ror
mov
pusha
mov
jecxz
orl
jmp
outsb
mov
mov
push
pushw
push
pop
add
cmp
call
cmp
xchg
insb
sbb
lret
fwait
aad
test
add
aad
test
xor
and
and
add
sbb
inc
rcrb
or
imul
ficompl
inc
in
stos
lret
cs
push
shlb
mov
mov
add
cmpsb
push
add
lock
or
cmp
pop
int3
js
lock
fdivrl
mov
push
pop
dec
or
enter
adc
les
cmp
inc
add
push
or
and
xchg
cmp
add
xchg
xchg
sarl
ret
lret
or
scas
scas
cld
xlat
enter
jbe
outsb
dec
inc
stos
into
mov
cltd
and
push
rolb
and
push
pop
add
mov
bound
popa
mov
sub
cmp
mov
sbb
mov
add
jne
push
mov
stos
inc
cmp
push
mov
jge
movl
imul
lcall
loopne
mov
orl
lcall
dec
scas
add
push
mov
test
inc
ret
inc
lock
nop
mov
cld
add
add
jbe
cmc
inc
cmp
pop
mov
add
clc
testb
push
popf
mov
sbb
cmp
xor
hlt
or
inc
sahf
xchg
sti
inc
jo
jmp
dec
js
push
mov
mov
jne
mov
jno
pop
arpl
cmp
xchg
ret
add
jge
daa
lds
sub
xor
icebp
cltd
adc
movups
sarb
add
lods
sbb
mov
dec
mov
js
jnp
fsubrs
sbb
jmp
pop
xchg
test
ret
sub
adc
outsb
aam
jbe
inc
mov
les
lods
int3
stos
inc
addl
dec
mov
ffreep
int3
stos
lcall
hlt
rcll
or
pop
cmpsb
sub
adc
mov
push
mov
pop
pusha
mov
or
jae
testb
leave
inc
daa
test
shlb
int3
sub
adc
stc
and
add
loop
xchg
add
dec
inc
xchg
jo
adc
adc
fistpl
inc
dec
push
inc
adc
inc
dec
or
dec
xchg
pop
orl
pop
fdivrl
test
push
or
adc
les
dec
out
or
sub
lds
adc
stos
ljmp
mov
add
mov
adc
stos
pop
arpl
icebp
lret
push
popf
pop
aad
les
out
mov
push
mov
adc
ret
call
jg
mov
adc
aad
fidivs
fs
les
sbb
out
push
in
sub
or
pop
add
rcrl
or
in
ljmp
or
mov
insl
or
jle
icebp
mov
xor
pushf
adc
push
aam
enter
adc
inc
loop
leave
adc
dec
dec
add
mov
add
inc
loope
cmp
mov
add
enter
inc
xchg
pop
adc
out
fcmovnbe
inc
jo
out
add
and
movsb
ret
push
aad
adc
sub
stos
fmul
movsb
jo
push
mov
sbb
fildll
add
inc
roll
xor
dec
test
icebp
divb
loop
adc
outsl
lock
mov
adc
or
or
xchg
sub
xorl
and
xchg
mov
sbb
stos
pop
or
in
xchg
adc
cmp
fcoms
push
push
mov
lods
stos
sub
adc
sub
lds
jno
adc
xchg
test
xor
pop
inc
mov
popa
inc
add
pop
pop
add
and
pop
icebp
add
cli
cmp
xor
or
sub
repz
aad
test
and
ja
movl
mov
cmp
and
movsb
and
mov
pop
adc
ret
inc
aam
jb
iret
popf
adc
mov
or
test
and
stc
adc
sbb
nop
or
push
sub
add
xor
out
sbb
or
bound
sbb
cs
xor
je
jp
and
xchg
xchg
push
out
sub
add
popa
mov
sbb
mov
xchg
pop
leave
sbb
xor
mov
rorl
push
pop
or
or
mov
shlb
dec
xor
addl
int
push
mov
aad
jl
push
mov
xlat
or
sub
je
das
int
test
jg
cmpsl
or
push
or
mov
adc
inc
adc
fdivl
sub
and
sbb
add
jne
jg
xor
pop
icebp
lds
jl
jno
mov
or
sub
popf
sbb
adc
popf
sub
and
mov
gs
adc
cmp
and
aam
dec
cli
into
testb
push
mov
mov
stos
or
xchg
and
inc
xchg
roll
add
add
shlb
icebp
push
or
pop
sbb
subl
mov
inc
subb
and
push
test
stos
push
and
lea
push
add
adc
mov
and
inc
sub
sub
or
testb
sbb
or
push
movsb
cmc
sub
push
cwtl
lods
sbb
jmp
or
rsm
sub
rolb
loopne
cmp
imul
sbb
mov
scas
rcll
xchg
cld
add
fcoml
or
je
mov
push
loop
stc
and
mov
adc
ds
mov
cmp
push
cmp
cmp
jo
movsb
stos
dec
and
cmp
lds
add
cmp
inc
sbbl
mov
or
push
je
shr
out
pop
push
or
cli
pop
xchg
mov
pushf
inc
and
mov
fsubl
inc
sti
xor
int3
lret
or
sub
fisubrl
test
clc
xchg
dec
xchg
and
rcrl
add
mov
push
lods
cmp
push
add
imul
push
cmp
int3
imul
inc
into
mov
sbb
in
stos
shl
adc
sub
cmp
fmull
popa
xor
add
test
mov
jo
push
inc
imul
mov
add
jle
mov
into
inc
loope
push
mov
push
mov
or
out
lcall
leave
lock
rorl
sbb
stos
mov
mov
inc
loope
jecxz
test
adc
adc
mov
push
push
loop
cltd
xor
or
add
adc
push
cmpsl
stos
push
sub
add
je
rorl
and
push
push
and
dec
lret
nop
mov
sbb
mov
inc
dec
jne
rcl
sub
push
sbbl
xchg
rcr
mov
sbb
and
xchg
sub
nop
or
cli
adc
xchg
stc
adc
les
popa
pop
lds
push
mov
add
pop
cwtl
or
add
pop
mov
repnz
lea
lods
or
sbb
cmp
adc
das
dec
les
xor
pop
rcrb
add
sub
push
and
and
sbb
push
jnp
adc
push
sbb
mov
or
or
dec
cmp
push
push
daa
pop
lret
adcb
int3
add
mov
push
adc
or
inc
adc
dec
nop
orl
jo
fs
shrb
sbb
xlat
pop
xor
fwait
sbb
or
or
mov
push
or
push
orb
or
dec
mov
ljmp
inc
lcall
adc
cld
rcr
testb
pop
jp
imul
cmp
or
jo
xchg
addl
mov
ret
ffreep
dec
clc
inc
mov
scas
out
insl
mov
and
or
cwtl
xchg
push
dec
mov
icebp
lcall
xor
repnz
mov
rorb
enter
call
enter
dec
add
cwtl
pop
jp
out
sub
sub
mov
push
mov
xchg
adc
push
daa
test
inc
mov
mov
inc
sub
mov
xor
xchg
adc
mov
add
mov
adc
or
bound
rcr
adc
movd
mov
stc
sbb
push
jl
lea
xor
add
jno
adcl
pop
add
push
mov
aas
sub
sbb
hlt
inc
stos
or
inc
and
in
push
xchg
mov
shlb
pop
or
mov
mov
add
xchg
imulb
push
cmpl
mov
pop
adc
add
or
loope
or
jecxz
jb
lret
dec
pop
mov
sub
popl
in
xor
add
push
adc
mov
dec
enter
scas
push
xor
popf
adc
ret
and
sub
and
imul
add
add
loop
jo
and
leave
out
loopne
sbbl
adc
push
add
mov
repnz
adc
pop
xor
bound
out
adc
rorl
loop
pop
jne
pop
rcrb
push
ret
sbb
rclb
xchg
pop
inc
les
adc
mov
clc
push
sub
sbb
push
xor
pushf
xchg
xchg
call
push
or
inc
mov
cltd
test
cli
or
notb
xor
leave
ret
push
lds
mov
sbb
mov
jg
jg
and
push
push
mov
jmp
inc
and
rorb
aam
or
addl
loopne
shl
or
mov
sbb
test
jne
sub
add
clc
insb
mull
arpl
adc
testb
pop
in
mov
pop
clc
movhps
push
sbb
in
fildl
xchg
cmpsl
sub
lea
push
sub
push
sub
mov
testb
je
movzwl
jbe
imul
push
pop
sbb
and
add
mov
fbld
inc
in
mov
or
adc
out
jbe
pushf
ret
mov
jne
push
in
cmp
sub
movntps
pushl
or
mov
and
call
inc
and
mov
add
out
lcall
push
add
scas
std
xchg
add
add
inc
or
idiv
es
adc
push
sub
ja
cmp
jne
sbb
fstp
mov
add
pop
and
mov
enter
shlb
fbstp
mov
and
lea
bound
xor
push
pushf
pushl
jl
bnd
sbb
adc
pslld
or
int
push
repnz
gs
push
pop
sbb
mov
mov
leave
jbe
jae
jo
add
push
jo
adc
lea
or
push
jbe
fwait
sbb
adc
pop
je
add
pop
or
pop
or
cmp
sti
add
sbb
sub
fdivl
loop
dec
push
int
mov
loope
stos
mov
or
mov
out
enter
xchg
push
inc
jge
lea
mov
mov
jle
fsubl
and
sbb
sarl
jno
pop
jle
fisubrs
pop
cmp
inc
xchg
in
mov
dec
jmp
cmp
cmp
cmp
cmp
inc
sbbb
popl
push
cmp
jbe
push
aaa
fdiv
in
rcrl
js
pop
jmp
call
mov
inc
push
enter
addr16
pop
leave
mov
test
aam
cmp
push
or
je
lea
add
cmp
jae
cmp
jne
out
adc
mov
repnz
pop
mov
incl
and
push
cmp
jne
mov
inc
pop
aaa
jl
sti
je
test
dec
movzbl
das
pop
xchg
mov
jnp
fcomi
jmp
cmpb
or
jbe
inc
or
ja
xor
or
add
jmp
fstpt
jmp
pop
sub
mov
xor
daa
cmp
je
cmp
je
inc
out
and
fsubrp
pop
stos
add
call
adc
pop
cmp
mov
lods
sbb
pop
test
mov
cmp
cmp
cmp
aas
dec
pop
mov
in
and
cmp
das
push
cs
pushl
in
fistpl
pop
bound
std
aaa
jne
pop
incl
leave
sub
movl
mov
ret
pop
mov
push
push
ja
aas
divb
dec
clc
mov
sbb
test
fldt
add
push
push
push
lahf
adc
push
mov
xchg
mov
sbb
mov
jbe
daa
and
push
push
xor
pop
cmp
push
sbb
lock
shlb
es
jne
dec
movsl
idivb
add
or
xchg
jge
add
mov
fwait
inc
mov
add
cli
mov
and
pop
shll
xor
mov
mov
inc
inc
or
std
fcoms
add
add
sbb
mov
fsubr
inc
push
add
testb
sbb
je
or
or
jne
dec
mov
ljmpw
scas
dec
add
int
sub
pop
imul
int3
enter
adc
add
rcl
cld
sti
mov
test
pop
jne
inc
inc
jmp
xchg
sub
ret
add
das
fsubrl
inc
cmp
or
jecxz
sub
push
or
sbb
ret
jg
mov
rorl
xchg
push
inc
mov
push
pop
inc
mov
jne
inc
cmpl
or
ss
minps
sbb
ret
push
push
pop
sbb
inc
mov
jae
add
aad
xchg
femms
mov
test
pop
sti
pop
ret
dec
test
aam
mov
insl
mov
shrb
adc
repz
jnp
aam
outsb
mov
jmp
pop
inc
inc
cmp
pop
ljmp
pop
sbb
jmp
xor
or
daa
lods
mov
int
cmp
cmp
sbb
push
pop
imul
clc
mov
pop
add
inc
and
call
xor
xor
sbb
and
and
movsb
scas
mov
pop
or
add
mov
jmp
ror
pop
mov
test
jg
sti
mov
je
and
add
sub
sbb
push
dec
mov
xchg
into
stos
sti
jmp
mov
pop
lds
sbb
cmp
ret
les
in
cwtl
imul
cmp
shlb
pop
pop
loopne
jno
mov
loopne
lea
testl
mov
inc
add
mov
movsl
sti
and
pop
jmp
and
sbb
ljmp
in
in
or
cmp
or
out
movsl
mov
add
push
clc
jl
pop
andl
mov
aas
jbe
idivb
xorl
add
sbb
pusha
inc
dec
mov
or
mov
mov
add
jl
rorl
mov
adc
jle
lock
test
inc
mov
test
test
mov
lcall
push
and
mov
lcall
insl
jnp
pop
or
shll
cmp
mov
mov
mov
inc
add
inc
cmp
filds
pop
and
cmpl
lea
jne
mov
mov
push
das
enter
test
ret
dec
neg
sbb
cmc
or
jge
cmp
pop
push
jo
and
ret
ds
orb
sub
outsl
or
jne
or
add
addb
rorb
ss
insl
in
ret
sbbl
push
hlt
adc
call
push
cld
pop
push
cmc
sub
fiadds
push
cmp
outsl
les
neg
pop
adc
inc
fistpl
fcompl
xor
mov
pop
mov
popf
add
xchg
popf
mov
xor
adc
data16
les
ficompl
inc
mov
aas
dec
mov
enter
into
sbb
jmp
adc
mov
push
outsl
pop
jge
add
or
mov
lods
add
pop
fistl
dec
data16
btc
inc
jle
pop
enter
nop
ret
int3
cmp
loope
add
lds
aaa
jl
sbb
sbb
mov
pop
out
push
mov
inc
add
pop
jo
fnsave
or
adc
sti
mov
push
push
inc
mov
push
pop
movsb
sbbl
adc
sub
mov
sub
mov
mov
dec
mov
jl
jg
mov
push
sbb
jmp
dec
out
mov
or
ret
popl
xchg
mov
add
in
push
in
faddp
xchg
je
or
push
xchg
or
mov
or
lods
std
add
dec
add
imul
ret
pop
fimuls
push
inc
xor
pop
inc
xor
rorb
lcall
cltd
testl
shlb
ds
icebp
pop
mov
jae
or
popa
cwtl
jbe
imul
mov
je
push
push
lea
test
pop
pop
inc
notb
inc
or
push
cmp
fldl
ss
pop
fimuls
or
or
sbb
mov
jmp
mov
ljmp
outsl
push
mov
mov
push
add
adcl
mov
mov
ss
dec
ljmp
push
test
fcomps
push
pop
ret
adc
test
xor
mov
add
test
frstor
inc
inc
push
test
icebp
jne
shl
cmp
sbb
sbb
insb
cltd
xchg
cltd
call
test
clc
mov
cli
jne
icebp
incb
lods
sbb
xor
pop
push
inc
in
push
pop
adc
pushf
adc
mov
inc
pop
gs
sub
push
push
clc
push
mov
call
inc
loopne
lcall
push
pusha
inc
addr16
lea
sbb
iret
cmpb
adc
test
daa
cwtl
push
pop
daa
sub
movsl
push
sub
mov
insb
je
aaa
mov
push
dec
cmpsl
pop
mov
push
orl
push
in
call
pop
fmul
lods
test
sub
das
loopne
mov
cmp
imul
push
fisubs
adc
mov
jmp
mov
add
out
outsb
dec
mov
lods
pop
rcrl
sbb
xorb
sbb
test
repz
push
mov
lds
lds
inc
jne
mov
jb
movzwl
bound
mov
aas
mov
fwait
xchg
inc
sbb
xchg
cmp
out
push
pusha
cmp
mov
ds
mov
fisttps
push
call
xchg
fistps
jo
sbb
inc
push
pusha
and
push
mov
pop
pop
mov
fidivs
and
fadds
cmp
out
mov
mov
call
pop
jbe
ja
cmpb
mov
cmp
rcrb
pop
or
jbe
inc
decl
pop
mov
sub
xchg
mov
out
ljmp
fistpll
stos
lea
dec
je
mov
popf
rcll
popl
add
xchg
ja
fistpll
mov
inc
inc
adc
inc
inc
fsubrs
cmpb
aam
pop
ret
sbb
shll
or
fidivl
fs
push
lods
lods
mov
mov
push
je
push
mov
movsl
movsl
pop
mov
inc
jns
jno
gs
lods
or
or
xchg
jb
push
mov
sub
jmp
je
fidivs
pop
add
push
lock
inc
xchg
cs
sub
pop
xchg
daa
xchg
or
mulb
leave
sub
inc
gs
mov
call
mov
mov
cmp
mov
stos
push
cld
sarl
adc
lea
rorl
push
mov
fcmovnu
add
push
adc
rcrb
stos
mov
lods
in
pop
xchg
repnz
clc
cwtl
adc
push
push
aas
sarb
mov
jb
mov
movb
and
aaa
lea
mov
or
pop
rorb
add
test
outsl
call
out
loope
rep
inc
inc
mov
xor
rcrb
push
mov
scas
popa
in
cli
mov
mov
mov
outsb
fnstenv
push
push
push
xor
loopne
leave
enter
dec
out
mov
int3
push
daa
jb
lret
jb
xor
clc
mov
test
push
add
mov
out
nop
rclb
add
sbb
into
and
mov
or
xor
add
in
popa
in
inc
jb
add
mov
enter
lret
fcmovnu
mov
jb
jp
push
outsb
pop
mov
repz
dec
movl
inc
and
call
sbb
cmp
movsl
adcl
lods
in
sti
or
sbb
fimull
in
mov
sbb
jo
mov
add
addr16
lea
xor
jae
test
xor
sarl
push
jne
mov
mov
sbb
lock
pop
test
cmc
add
and
cs
gs
fiadds
jmp
lea
jns
fs
add
jmp
std
jmp
cld
pusha
mov
pop
sbb
inc
ljmp
lock
add
fwait
lods
adc
das
in
lea
daa
test
mov
inc
insl
cmp
pop
mov
movb
or
mov
js
fstpl
dec
not
adc
jl
loopne
and
add
mov
mov
aad
adc
or
jae
push
fisubs
xor
xor
sub
or
mov
pop
inc
cmp
add
test
jns
lock
pop
xor
xchg
xchg
adc
adc
jb
xorb
xor
xor
inc
xor
testb
sub
ret
or
std
jge
orb
push
or
insl
mov
jne
dec
shlb
jl
subl
cmp
jbe
clc
jb
jbe
test
jg
sbb
movsl
jmp
add
push
mov
and
test
dec
loopne
pop
insl
mov
test
sbbb
js
pop
es
nop
and
out
add
mov
push
mov
aaa
imul
inc
add
and
pop
int3
lea
sub
mov
and
cmpl
inc
aas
mov
pop
add
cmp
lcall
mov
mov
call
call
cmpsb
imul
lods
adc
xchg
cli
or
lock
mov
nop
popf
pop
mov
rorb
adc
or
xor
jl
cld
jg
or
mov
cld
ja
add
fldenv
mov
daa
xchg
dec
stc
sub
xor
sub
or
add
pusha
jl
lods
mov
add
outsl
add
dec
push
mov
cmpb
mov
add
mov
daa
and
sub
add
dec
shll
jg
add
xor
fsub
notl
xor
sbb
adc
shll
or
xchg
add
or
jne
adc
sbb
cmp
dec
jo
mov
xchg
adc
mov
adcl
adc
pop
or
nop
jle
mov
fidivs
ljmp
adc
add
pusha
xchg
add
push
jne
ss
lods
sub
or
and
push
sub
js
push
jle
pop
sbb
push
cmp
xchg
jmp
std
addb
xchg
mov
sub
sub
mov
xlat
or
mov
adc
std
insl
fs
mov
pop
xchg
in
pop
push
push
pop
push
or
pop
inc
and
mov
data16
jnp
imul
sub
add
lahf
jno
outsl
rcr
pop
out
ret
shr
test
imul
imul
inc
cltd
fldt
sub
dec
or
test
or
adc
jge
jne
rcrl
or
iret
jbe
adc
fmulp
dec
adc
add
mov
xor
out
lea
adc
and
decb
sub
cmp
and
pop
mov
add
push
sub
out
mov
push
jns
push
adc
aaa
arpl
jl
or
add
or
out
mov
icebp
aas
jnp
pop
das
push
pop
je
mov
mov
push
push
mov
pop
cmp
mov
xor
repz
sti
in
mov
out
ds
jbe
cli
mov
subb
push
mov
pop
repnz
push
adc
dec
enter
shlb
xchg
dec
cmp
mov
push
mov
add
push
imul
xchg
jmp
mov
mov
ficoms
or
or
mov
sub
add
negl
pop
push
pop
add
xchg
inc
mov
sti
ja
push
and
mov
jmp
arpl
dec
mov
sbb
sbb
sub
or
pop
in
lea
sbb
or
jbe
mov
cmp
mov
pop
adc
dec
cli
dec
mov
fisttps
sti
mov
lsl
push
adc
mov
mov
add
push
call
pop
xor
add
cmp
cmp
andl
push
paddd
or
fcomps
cs
jns
adc
cmpl
lods
fnsave
sub
jo
pop
adc
adc
push
inc
add
insb
mov
add
xchg
lret
enter
fists
dec
adc
push
lea
push
push
push
leave
out
imul
nop
cmp
adc
mov
stc
jge
mov
jb
orb
das
push
sbb
sub
dec
pop
jbe
pop
in
call
xor
push
xor
inc
cmp
ret
in
decl
es
test
xor
shr
push
adc
mov
cmp
fildll
jl
shll
mov
cmp
sub
decb
iret
jle
imul
or
sbb
pop
jne
mov
cmp
outsb
fwait
or
es
jne
jae
pop
ljmp
or
aaa
mov
enter
es
push
cwtl
out
xchg
xor
push
test
xor
pop
add
adc
or
arpl
jge
ja
jmp
adc
js
mov
test
dec
sub
btc
nop
inc
mov
mov
jo
add
adc
push
sub
mov
jne
xchg
sbb
sbb
mov
and
or
lcall
xchg
lret
mov
ret
pop
dec
jbe
push
into
jne
data16
sarl
and
leave
jl
shl
inc
jmp
and
scas
scas
fistl
or
jg
jnp
incb
sbb
jle
pop
aam
or
add
and
adc
dec
add
cmp
mov
cmc
out
mov
decb
jne
jmp
lds
shr
xor
sub
push
xor
sbb
ss
sub
into
push
or
pop
fwait
pop
xchg
add
add
mov
dec
rolb
or
mov
and
out
movsl
ror
decb
jge
les
leave
lea
mov
cmp
test
or
das
sub
dec
mov
jnp
mov
lods
pop
jo
rclb
mov
cmp
or
add
mov
jne
or
add
xor
lahf
mov
and
or
dec
ret
jne
arpl
dec
cmp
imul
in
inc
add
mov
fbld
add
pop
jne
pop
mov
pop
adc
and
cmp
je
pop
push
sbbl
sarb
push
mov
loopne
mov
mov
adc
pop
scas
push
and
and
testb
push
sbb
lods
and
jl
and
mov
outsl
lds
bound
mov
fucomi
sar
inc
add
enter
fcmovnb
cmc
jno
inc
ret
aaa
imul
mov
inc
or
mov
test
shl
in
fstp
jns
mov
addb
dec
es
mov
lea
sti
sub
lea
dec
repnz
hlt
lea
cld
lock
sti
in
inc
push
out
jmp
call
push
push
jp
sub
jbe
push
add
mov
clc
xchg
es
ficompl
lods
lea
or
inc
xor
sahf
jecxz
inc
mov
or
pop
sub
cmpsb
or
mov
sub
push
lods
push
stos
rcll
push
ljmp
mov
js
dec
pushf
push
and
push
cwtl
out
mov
inc
je
adc
test
add
dec
mov
mov
push
call
cmp
xchg
adc
add
sub
and
ror
add
roll
add
push
xchg
jp
push
mov
mov
push
jne
imull
push
and
pop
ljmp
jmp
inc
inc
sahf
sub
dec
je
adc
pop
jne
aad
xlat
sub
add
sbb
dec
loopne
pop
xchg
ficoms
xchg
popf
je
push
adc
out
insb
sbb
cmp
sub
xchg
cmp
sbb
push
add
leave
mov
fisubrs
or
lods
lock
jne
cmp
sbb
push
pop
mov
rclb
push
or
std
outsb
add
pop
pop
jne
mov
test
arpl
mov
jo
inc
push
push
test
jl
or
xor
stc
insl
sbb
lods
jne
sbb
xor
pop
and
sbb
ret
dec
push
jo
adc
adc
xor
inc
dec
cmp
xor
lods
xor
sbb
jo
imul
add
pop
fdecstp
adc
pop
dec
jmp
inc
mov
and
mov
inc
insl
int3
andb
or
aaa
sbb
and
icebp
test
test
jbe
cmc
add
or
mov
inc
fcompl
insb
or
adc
mov
mov
fdivl
push
dec
fsubrl
and
dec
in
les
das
jnp
movsl
lods
mov
mov
idivb
testb
je
ds
lea
movsb
cmp
jg
fidivl
call
rorb
movsb
mov
addr16
xor
sub
push
adc
mov
sub
enter
pop
loopne
pop
fnstsw
je
push
fs
data16
cmp
mov
add
jmp
mov
push
xor
sub
xchg
aad
mov
mov
jp
push
fcoms
addl
in
inc
lock
mov
repz
lret
sub
add
sbb
add
lods
mov
sbb
in
push
pop
push
push
movsl
jecxz
add
sbb
jle
sbb
push
mov
xchg
pop
mov
inc
sub
add
sbb
xor
inc
mov
stc
mov
dec
push
arpl
sbb
inc
loope
pop
loopne
je
gs
rolb
clc
jl
pop
test
sub
or
notb
loopne
and
sbb
push
clc
jns
adc
xlat
xchg
mov
add
int3
inc
xor
and
adc
sub
scas
or
pop
and
sbb
inc
sbb
pop
mov
sub
mov
addr16
adcb
fildll
loopne
roll
lret
pop
imull
stos
cmp
and
les
les
daa
nop
pop
cmp
cmp
cmp
mov
jl
add
or
mov
and
cmp
aas
push
pop
add
add
cld
add
in
test
and
lcall
inc
dec
pusha
xchg
test
addr16
nop
jo
enter
or
scas
adc
and
inc
and
rcrb
je
jl
mov
lcall
mov
pop
add
push
mov
lahf
push
cmp
add
jb
sub
add
lds
cmp
les
loope
mov
sbb
out
cmp
les
enter
je
lock
in
fsub
loopne
enter
or
add
rcl
add
jg
add
decl
inc
add
jne
je
insl
sub
and
jb
jb
or
call
adc
add
dec
inc
jg
sti
add
inc
dec
dec
inc
adc
push
xor
cmp
pop
fisubrs
sub
insb
je
and
imul
insb
imul
aaa
daa
aaa
outsb
outsl
fistl
add
addr16
jae
popa
arpl
data16
mov
jnp
outsl
ja
cmp
outsl
outsb
aaa
nop
cmp
pop
ss
lods
std
divb
xor
jbe
jb
jne
xor
sti
insl
movsl
arpl
and
insb
sub
insl
mov
gs
das
pop
fmul
pop
jnp
fsub
pop
xor
imull
jae
outsl
jo
pop
xor
pcmpgtb
mov
sbb
and
and
gs
mov
push
xchg
aaa
insl
jne
lods
je
mov
and
insb
outsl
arpl
mov
mov
xor
mov
add
and
add
addr16
insl
and
pop
or
cmp
push
sub
test
sub
popa
jb
jne
iret
inc
clc
sub
xor
shrw
add
out
mov
pop
jg
sub
aas
mov
stos
inc
sub
and
dec
imul
jb
daa
or
fdecstp
push
and
push
aam
ret
xlat
xchg
cmp
loopne
sub
mov
outsb
sbb
je
popa
xor
in
sub
loope
gs
scas
jne
adc
push
xchg
ss
mov
gs
popa
addr16
outsl
js
movsl
jae
movsb
pop
and
sub
pop
imull
or
test
jnp
aaa
push
add
add
adc
add
xor
push
sub
insb
pop
add
jmp
fstl
xchg
xor
and
and
nop
xchg
and
xor
xchg
xchg
dec
push
dec
aaa
add
pop
js
or
pop
lret
and
sbb
daa
decl
add
add
or
enter
or
adc
adc
dec
sahf
cmp
adc
sbb
jns
in
sbb
sbb
dec
sahf
cmp
js
jns
jp
in
fxch
xchg
cld
sbb
or
push
loopne
inc
xchg
mov
push
adc
sub
inc
or
push
clc
sbb
add
in
mov
pusha
cmpb
cmpsb
fistpll
jle
mov
cld
inc
jle
cld
test
push
popa
ffreep
mov
cmp
mov
mov
inc
sub
ljmp
pop
iret
mov
in
call
fucom
jle
push
add
pop
pop
fisubrl
xor
in
push
rcr
fsubp
stc
cmp
jle
add
sbb
xchg
mov
add
add
add
add
fs
addl
aas
addb
nop
loopne
adc
and
ss
and
push
adc
and
aaa
pop
mov
inc
add
add
popa
jo
insb
insb
outsl
arpl
outsl
push
add
fs
gs
popa
outsb
fs
add
push
je
xor
outsb
outsw
adc
sbb
inc
outsl
insl
insl
pop
dec
imul
sbb
pop
add
or
pop
stos
fisubrl
push
cmp
adc
push
push
fs
adc
xor
insb
pop
jb
imull
pusha
js
gs
popa
insl
pop
inc
jb
gs
fnsave
jb
addr16
std
xor
fs
bound
outsl
dec
push
imul
xor
pop
pop
sub
pop
ret
inc
push
pop
sbb
pop
add
in
das
ss
or
jne
jb
sti
add
ds
gs
fs
insb
jae
addb
push
popa
insb
jne
or
push
test
inc
add
cmpsl
jno
idivb
inc
xor
sbb
inc
add
popf
loopne
pop
mov
je
cmp
loop
inc
ja
cmpsl
je
adc
pop
sbb
arpl
arpl
xor
push
jbe
push
sub
push
fmull
inc
push
in
cmp
inc
dec
or
or
inc
mov
jb
dec
ret
and
xor
sahf
mov
sub
inc
mov
test
dec
or
cs
pop
mov
mov
adc
fbstp
mov
and
inc
inc
ja
mov
rolw
jae
push
and
mov
bound
pop
sahf
sbb
sbb
insb
fwait
int3
push
add
fsubl
mov
outsb
inc
or
ja
in
in
je
je
push
jecxz
push
outsb
jmp
pop
outsl
aaa
gs
neg
lods
gs
or
dec
mov
mov
push
mov
insl
dec
lock
syscall
jno
add
sti
add
add
add
add
push
add
add
cmpb
jg
in
add
add
push
push
push
add
ret
add
adc
add
incl
sarb
dec
fiaddl
inc
inc
divb
cmp
addb
lock
fildl
cmp
push
fucomp
pop
inc
insb
outsl
mov
lock
and
add
xchg
or
fidivrs
add
pop
lahf
lock
add
fstpt
loopne
inc
add
dec
dec
rclb
das
fldt
or
add
dec
xchg
and
xorb
mov
dec
xchg
stos
add
fstpt
jae
xchg
mov
rcll
cmp
insl
mov
in
add
jp
dec
and
cmp
cmp
xchg
into
mov
sub
inc
inc
add
mov
fwait
sti
xchg
cmp
mov
sbb
fcmovnu
sbb
call
out
cmp
pop
mov
cld
insl
xchg
xor
add
aas
jl
movsl
pop
imul
mov
lock
xor
push
add
jns
dec
lods
mov
mov
lods
insl
outsl
fnsave
dec
add
cmp
insl
out
das
mov
jbe
rolb
mov
gs
or
stos
mov
gs
outsb
adc
dec
jp
add
add
imul
or
jae
cmp
outsb
bswap
add
add
sbb
lock
jae
add
xchg
cmp
push
lcall
cmp
call
lock
add
out
sbb
insl
lret
jbe
mov
jns
jo
jb
imul
mov
aaa
xchg
mov
adc
add
jae
or
sbb
jbe
jge
test
hlt
push
aaa
add
shlb
leave
mov
add
pop
mov
lds
jg
fmull
mov
iret
add
inc
xchg
fstpt
mov
test
sbb
rclb
sub
cmp
lock
add
lock
js
not
cmp
cmp
dec
dec
hlt
mov
adc
jb
aas
jnp
and
shr
sbb
mov
mov
shll
lods
je
adc
in
outsb
inc
mov
jb
jmp
scas
popf
arpl
mov
ljmp
pop
or
dec
mov
mov
jnp
jle
jl
ja
in
or
pushf
adc
mov
mov
or
jb
add
dec
in
mov
add
sub
in
lock
push
sbb
mov
pop
lock
xchg
cltd
dec
lock
add
lret
pop
adc
xchg
add
sbb
inc
rcrl
xor
jmp
push
add
inc
lock
cs
lds
iret
fnstsw
sub
push
add
lock
cmp
mov
dec
outsl
dec
mov
inc
mov
mov
dec
add
mov
xor
mov
outsb
or
add
inc
mov
mov
test
jmp
pop
imul
sbb
xor
xor
or
addl
add
outsl
push
push
xchg
push
push
push
test
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
pushl
aas
push
adc
xor
pop
adc
and
push
xor
adc
ljmp
add
inc
or
adc
sbb
adc
sbb
sbb
lock
add
adc
or
inc
adc
or
adc
mov
push
adc
sub
xor
xor
mov
and
mov
pop
pop
fldt
adc
or
sub
add
loopne
in
fildl
outsl
mov
adc
or
push
movups
lock
cmp
ret
sbb
scas
add
sub
sbb
add
dec
push
jle
out
fiadds
or
pop
push
sbb
push
or
outsl
pop
pop
fninit
or
icebp
or
push
mov
mov
adc
adc
or
fimuls
inc
cmpsb
mul
lock
add
adc
test
sbb
mov
bound
pop
adc
sbb
std
push
push
pop
mov
sbb
push
and
adc
sarl
ret
push
add
dec
mulb
add
add
add
call
adc
lock
add
push
inc
add
push
or
add
loopne
add
add
mov
mov
pop
and
adc
xlat
or
sub
xlat
pop
adc
out
push
cltd
nop
sbbb
subl
add
push
repz
fs
add
js
add
fadds
addb
sub
and
push
and
mov
pop
je
mov
das
jmp
and
pusha
jb,pn
xchg
or
mov
incb
add
sti
fisubrl
daa
push
test
jb,pn
jb
jmp
xchg
dec
fldlg2
add
push
dec
mov
rcr
pop
stc
daa
mov
inc
aaa
and
add
pushf
sbbl
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
